
ubuntu-preinstalled/btrfs-map-logical:     file format elf32-littlearm


Disassembly of section .init:

00008564 <.init>:
    8564:	push	{r3, lr}
    8568:	bl	9164 <_start@@Base+0x48>
    856c:	pop	{r3, pc}

Disassembly of section .plt:

00008570 <calloc@plt-0x14>:
    8570:	push	{lr}		; (str lr, [sp, #-4]!)
    8574:	ldr	lr, [pc, #4]	; 8580 <calloc@plt-0x4>
    8578:	add	lr, pc, lr
    857c:	ldr	pc, [lr, #8]!
    8580:	andeq	ip, r5, r4, lsl #16

00008584 <calloc@plt>:
    8584:			; <UNDEFINED> instruction: 0xe7fd4778
    8588:	add	ip, pc, #0, 12
    858c:	add	ip, ip, #92, 20	; 0x5c000
    8590:	ldr	pc, [ip, #2048]!	; 0x800

00008594 <raise@plt>:
    8594:	add	ip, pc, #0, 12
    8598:	add	ip, ip, #92, 20	; 0x5c000
    859c:	ldr	pc, [ip, #2040]!	; 0x7f8

000085a0 <fsync@plt>:
    85a0:	add	ip, pc, #0, 12
    85a4:	add	ip, ip, #92, 20	; 0x5c000
    85a8:	ldr	pc, [ip, #2032]!	; 0x7f0

000085ac <strcmp@plt>:
    85ac:	add	ip, pc, #0, 12
    85b0:	add	ip, ip, #92, 20	; 0x5c000
    85b4:	ldr	pc, [ip, #2024]!	; 0x7e8

000085b8 <__cxa_finalize@plt>:
    85b8:	add	ip, pc, #0, 12
    85bc:	add	ip, ip, #92, 20	; 0x5c000
    85c0:	ldr	pc, [ip, #2016]!	; 0x7e0

000085c4 <uuid_unparse@plt>:
    85c4:	add	ip, pc, #0, 12
    85c8:	add	ip, ip, #92, 20	; 0x5c000
    85cc:	ldr	pc, [ip, #2008]!	; 0x7d8

000085d0 <posix_fadvise64@plt>:
    85d0:	add	ip, pc, #0, 12
    85d4:	add	ip, ip, #92, 20	; 0x5c000
    85d8:	ldr	pc, [ip, #2000]!	; 0x7d0

000085dc <blkid_probe_lookup_value@plt>:
    85dc:	add	ip, pc, #0, 12
    85e0:	add	ip, ip, #92, 20	; 0x5c000
    85e4:	ldr	pc, [ip, #1992]!	; 0x7c8

000085e8 <read@plt>:
    85e8:	add	ip, pc, #0, 12
    85ec:	add	ip, ip, #92, 20	; 0x5c000
    85f0:	ldr	pc, [ip, #1984]!	; 0x7c0

000085f4 <fflush@plt>:
    85f4:	add	ip, pc, #0, 12
    85f8:	add	ip, ip, #92, 20	; 0x5c000
    85fc:	ldr	pc, [ip, #1976]!	; 0x7b8

00008600 <unlinkat@plt>:
    8600:	add	ip, pc, #0, 12
    8604:	add	ip, ip, #92, 20	; 0x5c000
    8608:	ldr	pc, [ip, #1968]!	; 0x7b0

0000860c <memmove@plt>:
    860c:			; <UNDEFINED> instruction: 0xe7fd4778
    8610:	add	ip, pc, #0, 12
    8614:	add	ip, ip, #92, 20	; 0x5c000
    8618:	ldr	pc, [ip, #1956]!	; 0x7a4

0000861c <free@plt>:
    861c:			; <UNDEFINED> instruction: 0xe7fd4778
    8620:	add	ip, pc, #0, 12
    8624:	add	ip, ip, #92, 20	; 0x5c000
    8628:	ldr	pc, [ip, #1944]!	; 0x798

0000862c <fgets@plt>:
    862c:	add	ip, pc, #0, 12
    8630:	add	ip, ip, #92, 20	; 0x5c000
    8634:	ldr	pc, [ip, #1936]!	; 0x790

00008638 <fgetxattr@plt>:
    8638:	add	ip, pc, #0, 12
    863c:	add	ip, ip, #92, 20	; 0x5c000
    8640:	ldr	pc, [ip, #1928]!	; 0x788

00008644 <statfs@plt>:
    8644:	add	ip, pc, #0, 12
    8648:	add	ip, ip, #92, 20	; 0x5c000
    864c:	ldr	pc, [ip, #1920]!	; 0x780

00008650 <strndup@plt>:
    8650:	add	ip, pc, #0, 12
    8654:	add	ip, ip, #92, 20	; 0x5c000
    8658:	ldr	pc, [ip, #1912]!	; 0x778

0000865c <__vsnprintf_chk@plt>:
    865c:	add	ip, pc, #0, 12
    8660:	add	ip, ip, #92, 20	; 0x5c000
    8664:	ldr	pc, [ip, #1904]!	; 0x770

00008668 <memcpy@plt>:
    8668:			; <UNDEFINED> instruction: 0xe7fd4778
    866c:	add	ip, pc, #0, 12
    8670:	add	ip, ip, #92, 20	; 0x5c000
    8674:	ldr	pc, [ip, #1892]!	; 0x764

00008678 <__memset_chk@plt>:
    8678:	add	ip, pc, #0, 12
    867c:	add	ip, ip, #92, 20	; 0x5c000
    8680:	ldr	pc, [ip, #1884]!	; 0x75c

00008684 <time@plt>:
    8684:	add	ip, pc, #0, 12
    8688:	add	ip, ip, #92, 20	; 0x5c000
    868c:	ldr	pc, [ip, #1876]!	; 0x754

00008690 <ftruncate64@plt>:
    8690:	add	ip, pc, #0, 12
    8694:	add	ip, ip, #92, 20	; 0x5c000
    8698:	ldr	pc, [ip, #1868]!	; 0x74c

0000869c <memcmp@plt>:
    869c:			; <UNDEFINED> instruction: 0xe7fd4778
    86a0:	add	ip, pc, #0, 12
    86a4:	add	ip, ip, #92, 20	; 0x5c000
    86a8:	ldr	pc, [ip, #1856]!	; 0x740

000086ac <__vprintf_chk@plt>:
    86ac:	add	ip, pc, #0, 12
    86b0:	add	ip, ip, #92, 20	; 0x5c000
    86b4:	ldr	pc, [ip, #1848]!	; 0x738

000086b8 <jrand48@plt>:
    86b8:			; <UNDEFINED> instruction: 0xe7fd4778
    86bc:	add	ip, pc, #0, 12
    86c0:	add	ip, ip, #92, 20	; 0x5c000
    86c4:	ldr	pc, [ip, #1836]!	; 0x72c

000086c8 <blkid_put_cache@plt>:
    86c8:	add	ip, pc, #0, 12
    86cc:	add	ip, ip, #92, 20	; 0x5c000
    86d0:	ldr	pc, [ip, #1828]!	; 0x724

000086d4 <uname@plt>:
    86d4:	add	ip, pc, #0, 12
    86d8:	add	ip, ip, #92, 20	; 0x5c000
    86dc:	ldr	pc, [ip, #1820]!	; 0x71c

000086e0 <blkid_probe_set_device@plt>:
    86e0:	add	ip, pc, #0, 12
    86e4:	add	ip, ip, #92, 20	; 0x5c000
    86e8:	ldr	pc, [ip, #1812]!	; 0x714

000086ec <strdup@plt>:
    86ec:			; <UNDEFINED> instruction: 0xe7fd4778
    86f0:	add	ip, pc, #0, 12
    86f4:	add	ip, ip, #92, 20	; 0x5c000
    86f8:	ldr	pc, [ip, #1800]!	; 0x708

000086fc <openat@plt>:
    86fc:	add	ip, pc, #0, 12
    8700:	add	ip, ip, #92, 20	; 0x5c000
    8704:	ldr	pc, [ip, #1792]!	; 0x700

00008708 <__stack_chk_fail@plt>:
    8708:	add	ip, pc, #0, 12
    870c:	add	ip, ip, #92, 20	; 0x5c000
    8710:	ldr	pc, [ip, #1784]!	; 0x6f8

00008714 <blkid_dev_iterate_begin@plt>:
    8714:	add	ip, pc, #0, 12
    8718:	add	ip, ip, #92, 20	; 0x5c000
    871c:	ldr	pc, [ip, #1776]!	; 0x6f0

00008720 <realloc@plt>:
    8720:			; <UNDEFINED> instruction: 0xe7fd4778
    8724:	add	ip, pc, #0, 12
    8728:	add	ip, ip, #92, 20	; 0x5c000
    872c:	ldr	pc, [ip, #1764]!	; 0x6e4

00008730 <localtime_r@plt>:
    8730:	add	ip, pc, #0, 12
    8734:	add	ip, ip, #92, 20	; 0x5c000
    8738:	ldr	pc, [ip, #1756]!	; 0x6dc

0000873c <uuid_compare@plt>:
    873c:	add	ip, pc, #0, 12
    8740:	add	ip, ip, #92, 20	; 0x5c000
    8744:	ldr	pc, [ip, #1748]!	; 0x6d4

00008748 <strcasecmp@plt>:
    8748:	add	ip, pc, #0, 12
    874c:	add	ip, ip, #92, 20	; 0x5c000
    8750:	ldr	pc, [ip, #1740]!	; 0x6cc

00008754 <geteuid@plt>:
    8754:	add	ip, pc, #0, 12
    8758:	add	ip, ip, #92, 20	; 0x5c000
    875c:	ldr	pc, [ip, #1732]!	; 0x6c4

00008760 <perror@plt>:
    8760:	add	ip, pc, #0, 12
    8764:	add	ip, ip, #92, 20	; 0x5c000
    8768:	ldr	pc, [ip, #1724]!	; 0x6bc

0000876c <__xstat@plt>:
    876c:			; <UNDEFINED> instruction: 0xe7fd4778
    8770:	add	ip, pc, #0, 12
    8774:	add	ip, ip, #92, 20	; 0x5c000
    8778:	ldr	pc, [ip, #1712]!	; 0x6b0

0000877c <blkid_dev_set_search@plt>:
    877c:	add	ip, pc, #0, 12
    8780:	add	ip, ip, #92, 20	; 0x5c000
    8784:	ldr	pc, [ip, #1704]!	; 0x6a8

00008788 <__fxstat64@plt>:
    8788:			; <UNDEFINED> instruction: 0xe7fd4778
    878c:	add	ip, pc, #0, 12
    8790:	add	ip, ip, #92, 20	; 0x5c000
    8794:	ldr	pc, [ip, #1692]!	; 0x69c

00008798 <__memcpy_chk@plt>:
    8798:	add	ip, pc, #0, 12
    879c:	add	ip, ip, #92, 20	; 0x5c000
    87a0:	ldr	pc, [ip, #1684]!	; 0x694

000087a4 <strcat@plt>:
    87a4:			; <UNDEFINED> instruction: 0xe7fd4778
    87a8:	add	ip, pc, #0, 12
    87ac:	add	ip, ip, #92, 20	; 0x5c000
    87b0:	ldr	pc, [ip, #1672]!	; 0x688

000087b4 <ioctl@plt>:
    87b4:	add	ip, pc, #0, 12
    87b8:	add	ip, ip, #92, 20	; 0x5c000
    87bc:	ldr	pc, [ip, #1664]!	; 0x680

000087c0 <lseek64@plt>:
    87c0:	add	ip, pc, #0, 12
    87c4:	add	ip, ip, #92, 20	; 0x5c000
    87c8:	ldr	pc, [ip, #1656]!	; 0x678

000087cc <strtoll@plt>:
    87cc:	add	ip, pc, #0, 12
    87d0:	add	ip, ip, #92, 20	; 0x5c000
    87d4:	ldr	pc, [ip, #1648]!	; 0x670

000087d8 <__realpath_chk@plt>:
    87d8:	add	ip, pc, #0, 12
    87dc:	add	ip, ip, #92, 20	; 0x5c000
    87e0:	ldr	pc, [ip, #1640]!	; 0x668

000087e4 <readahead@plt>:
    87e4:	add	ip, pc, #0, 12
    87e8:	add	ip, ip, #92, 20	; 0x5c000
    87ec:	ldr	pc, [ip, #1632]!	; 0x660

000087f0 <strcpy@plt>:
    87f0:	add	ip, pc, #0, 12
    87f4:	add	ip, ip, #92, 20	; 0x5c000
    87f8:	ldr	pc, [ip, #1624]!	; 0x658

000087fc <gettimeofday@plt>:
    87fc:	add	ip, pc, #0, 12
    8800:	add	ip, ip, #92, 20	; 0x5c000
    8804:	ldr	pc, [ip, #1616]!	; 0x650

00008808 <pread64@plt>:
    8808:	add	ip, pc, #0, 12
    880c:	add	ip, ip, #92, 20	; 0x5c000
    8810:	ldr	pc, [ip, #1608]!	; 0x648

00008814 <pthread_create@plt>:
    8814:	add	ip, pc, #0, 12
    8818:	add	ip, ip, #92, 20	; 0x5c000
    881c:	ldr	pc, [ip, #1600]!	; 0x640

00008820 <strtok_r@plt>:
    8820:	add	ip, pc, #0, 12
    8824:	add	ip, ip, #92, 20	; 0x5c000
    8828:	ldr	pc, [ip, #1592]!	; 0x638

0000882c <getmntent@plt>:
    882c:	add	ip, pc, #0, 12
    8830:	add	ip, ip, #92, 20	; 0x5c000
    8834:	ldr	pc, [ip, #1584]!	; 0x630

00008838 <opendir@plt>:
    8838:	add	ip, pc, #0, 12
    883c:	add	ip, ip, #92, 20	; 0x5c000
    8840:	ldr	pc, [ip, #1576]!	; 0x628

00008844 <open64@plt>:
    8844:	add	ip, pc, #0, 12
    8848:	add	ip, ip, #92, 20	; 0x5c000
    884c:	ldr	pc, [ip, #1568]!	; 0x620

00008850 <puts@plt>:
    8850:			; <UNDEFINED> instruction: 0xe7fd4778
    8854:	add	ip, pc, #0, 12
    8858:	add	ip, ip, #92, 20	; 0x5c000
    885c:	ldr	pc, [ip, #1556]!	; 0x614

00008860 <sysinfo@plt>:
    8860:	add	ip, pc, #0, 12
    8864:	add	ip, ip, #92, 20	; 0x5c000
    8868:	ldr	pc, [ip, #1548]!	; 0x60c

0000886c <malloc@plt>:
    886c:			; <UNDEFINED> instruction: 0xe7fd4778
    8870:	add	ip, pc, #0, 12
    8874:	add	ip, ip, #92, 20	; 0x5c000
    8878:	ldr	pc, [ip, #1536]!	; 0x600

0000887c <__libc_start_main@plt>:
    887c:	add	ip, pc, #0, 12
    8880:	add	ip, ip, #92, 20	; 0x5c000
    8884:	ldr	pc, [ip, #1528]!	; 0x5f8

00008888 <strerror@plt>:
    8888:	add	ip, pc, #0, 12
    888c:	add	ip, ip, #92, 20	; 0x5c000
    8890:	ldr	pc, [ip, #1520]!	; 0x5f0

00008894 <__fxstat@plt>:
    8894:			; <UNDEFINED> instruction: 0xe7fd4778
    8898:	add	ip, pc, #0, 12
    889c:	add	ip, ip, #92, 20	; 0x5c000
    88a0:	ldr	pc, [ip, #1508]!	; 0x5e4

000088a4 <strftime@plt>:
    88a4:	add	ip, pc, #0, 12
    88a8:	add	ip, ip, #92, 20	; 0x5c000
    88ac:	ldr	pc, [ip, #1500]!	; 0x5dc

000088b0 <__vfprintf_chk@plt>:
    88b0:	add	ip, pc, #0, 12
    88b4:	add	ip, ip, #92, 20	; 0x5c000
    88b8:	ldr	pc, [ip, #1492]!	; 0x5d4

000088bc <backtrace@plt>:
    88bc:	add	ip, pc, #0, 12
    88c0:	add	ip, ip, #92, 20	; 0x5c000
    88c4:	ldr	pc, [ip, #1484]!	; 0x5cc

000088c8 <blkid_dev_next@plt>:
    88c8:	add	ip, pc, #0, 12
    88cc:	add	ip, ip, #92, 20	; 0x5c000
    88d0:	ldr	pc, [ip, #1476]!	; 0x5c4

000088d4 <blkid_verify@plt>:
    88d4:	add	ip, pc, #0, 12
    88d8:	add	ip, ip, #92, 20	; 0x5c000
    88dc:	ldr	pc, [ip, #1468]!	; 0x5bc

000088e0 <__ctype_tolower_loc@plt>:
    88e0:	add	ip, pc, #0, 12
    88e4:	add	ip, ip, #92, 20	; 0x5c000
    88e8:	ldr	pc, [ip, #1460]!	; 0x5b4

000088ec <__gmon_start__@plt>:
    88ec:	add	ip, pc, #0, 12
    88f0:	add	ip, ip, #92, 20	; 0x5c000
    88f4:	ldr	pc, [ip, #1452]!	; 0x5ac

000088f8 <open@plt>:
    88f8:	add	ip, pc, #0, 12
    88fc:	add	ip, ip, #92, 20	; 0x5c000
    8900:	ldr	pc, [ip, #1444]!	; 0x5a4

00008904 <timerfd_create@plt>:
    8904:	add	ip, pc, #0, 12
    8908:	add	ip, ip, #92, 20	; 0x5c000
    890c:	ldr	pc, [ip, #1436]!	; 0x59c

00008910 <getopt_long@plt>:
    8910:	add	ip, pc, #0, 12
    8914:	add	ip, ip, #92, 20	; 0x5c000
    8918:	ldr	pc, [ip, #1428]!	; 0x594

0000891c <__ctype_b_loc@plt>:
    891c:	add	ip, pc, #0, 12
    8920:	add	ip, ip, #92, 20	; 0x5c000
    8924:	ldr	pc, [ip, #1420]!	; 0x58c

00008928 <getpid@plt>:
    8928:	add	ip, pc, #0, 12
    892c:	add	ip, ip, #92, 20	; 0x5c000
    8930:	ldr	pc, [ip, #1412]!	; 0x584

00008934 <exit@plt>:
    8934:	add	ip, pc, #0, 12
    8938:	add	ip, ip, #92, 20	; 0x5c000
    893c:	ldr	pc, [ip, #1404]!	; 0x57c

00008940 <strlen@plt>:
    8940:	add	ip, pc, #0, 12
    8944:	add	ip, ip, #92, 20	; 0x5c000
    8948:	ldr	pc, [ip, #1396]!	; 0x574

0000894c <strchr@plt>:
    894c:	add	ip, pc, #0, 12
    8950:	add	ip, ip, #92, 20	; 0x5c000
    8954:	ldr	pc, [ip, #1388]!	; 0x56c

00008958 <openat64@plt>:
    8958:	add	ip, pc, #0, 12
    895c:	add	ip, ip, #92, 20	; 0x5c000
    8960:	ldr	pc, [ip, #1380]!	; 0x564

00008964 <memrchr@plt>:
    8964:	add	ip, pc, #0, 12
    8968:	add	ip, ip, #92, 20	; 0x5c000
    896c:	ldr	pc, [ip, #1372]!	; 0x55c

00008970 <__open64_2@plt>:
    8970:	add	ip, pc, #0, 12
    8974:	add	ip, ip, #92, 20	; 0x5c000
    8978:	ldr	pc, [ip, #1364]!	; 0x554

0000897c <__errno_location@plt>:
    897c:	add	ip, pc, #0, 12
    8980:	add	ip, ip, #92, 20	; 0x5c000
    8984:	ldr	pc, [ip, #1356]!	; 0x54c

00008988 <__strcat_chk@plt>:
    8988:	add	ip, pc, #0, 12
    898c:	add	ip, ip, #92, 20	; 0x5c000
    8990:	ldr	pc, [ip, #1348]!	; 0x544

00008994 <__sprintf_chk@plt>:
    8994:	add	ip, pc, #0, 12
    8998:	add	ip, ip, #92, 20	; 0x5c000
    899c:	ldr	pc, [ip, #1340]!	; 0x53c

000089a0 <blkid_new_probe@plt>:
    89a0:	add	ip, pc, #0, 12
    89a4:	add	ip, ip, #92, 20	; 0x5c000
    89a8:	ldr	pc, [ip, #1332]!	; 0x534

000089ac <uuid_is_null@plt>:
    89ac:	add	ip, pc, #0, 12
    89b0:	add	ip, ip, #92, 20	; 0x5c000
    89b4:	ldr	pc, [ip, #1324]!	; 0x52c

000089b8 <memset@plt>:
    89b8:			; <UNDEFINED> instruction: 0xe7fd4778
    89bc:	add	ip, pc, #0, 12
    89c0:	add	ip, ip, #92, 20	; 0x5c000
    89c4:	ldr	pc, [ip, #1312]!	; 0x520

000089c8 <putchar@plt>:
    89c8:			; <UNDEFINED> instruction: 0xe7fd4778
    89cc:	add	ip, pc, #0, 12
    89d0:	add	ip, ip, #92, 20	; 0x5c000
    89d4:	ldr	pc, [ip, #1300]!	; 0x514

000089d8 <strncpy@plt>:
    89d8:	add	ip, pc, #0, 12
    89dc:	add	ip, ip, #92, 20	; 0x5c000
    89e0:	ldr	pc, [ip, #1292]!	; 0x50c

000089e4 <pthread_cancel@plt>:
    89e4:	add	ip, pc, #0, 12
    89e8:	add	ip, ip, #92, 20	; 0x5c000
    89ec:	ldr	pc, [ip, #1284]!	; 0x504

000089f0 <fscanf@plt>:
    89f0:	add	ip, pc, #0, 12
    89f4:	add	ip, ip, #92, 20	; 0x5c000
    89f8:	ldr	pc, [ip, #1276]!	; 0x4fc

000089fc <strtoull@plt>:
    89fc:	add	ip, pc, #0, 12
    8a00:	add	ip, ip, #92, 20	; 0x5c000
    8a04:	ldr	pc, [ip, #1268]!	; 0x4f4

00008a08 <fsetxattr@plt>:
    8a08:	add	ip, pc, #0, 12
    8a0c:	add	ip, ip, #92, 20	; 0x5c000
    8a10:	ldr	pc, [ip, #1260]!	; 0x4ec

00008a14 <blkid_dev_iterate_end@plt>:
    8a14:	add	ip, pc, #0, 12
    8a18:	add	ip, ip, #92, 20	; 0x5c000
    8a1c:	ldr	pc, [ip, #1252]!	; 0x4e4

00008a20 <pwrite64@plt>:
    8a20:	add	ip, pc, #0, 12
    8a24:	add	ip, ip, #92, 20	; 0x5c000
    8a28:	ldr	pc, [ip, #1244]!	; 0x4dc

00008a2c <__printf_chk@plt>:
    8a2c:			; <UNDEFINED> instruction: 0xe7fd4778
    8a30:	add	ip, pc, #0, 12
    8a34:	add	ip, ip, #92, 20	; 0x5c000
    8a38:	ldr	pc, [ip, #1232]!	; 0x4d0

00008a3c <fstatfs@plt>:
    8a3c:	add	ip, pc, #0, 12
    8a40:	add	ip, ip, #92, 20	; 0x5c000
    8a44:	ldr	pc, [ip, #1224]!	; 0x4c8

00008a48 <write@plt>:
    8a48:	add	ip, pc, #0, 12
    8a4c:	add	ip, ip, #92, 20	; 0x5c000
    8a50:	ldr	pc, [ip, #1216]!	; 0x4c0

00008a54 <uuid_generate@plt>:
    8a54:	add	ip, pc, #0, 12
    8a58:	add	ip, ip, #92, 20	; 0x5c000
    8a5c:	ldr	pc, [ip, #1208]!	; 0x4b8

00008a60 <__fprintf_chk@plt>:
    8a60:			; <UNDEFINED> instruction: 0xe7fd4778
    8a64:	add	ip, pc, #0, 12
    8a68:	add	ip, ip, #92, 20	; 0x5c000
    8a6c:	ldr	pc, [ip, #1196]!	; 0x4ac

00008a70 <access@plt>:
    8a70:	add	ip, pc, #0, 12
    8a74:	add	ip, ip, #92, 20	; 0x5c000
    8a78:	ldr	pc, [ip, #1188]!	; 0x4a4

00008a7c <fclose@plt>:
    8a7c:	add	ip, pc, #0, 12
    8a80:	add	ip, ip, #92, 20	; 0x5c000
    8a84:	ldr	pc, [ip, #1180]!	; 0x49c

00008a88 <endmntent@plt>:
    8a88:	add	ip, pc, #0, 12
    8a8c:	add	ip, ip, #92, 20	; 0x5c000
    8a90:	ldr	pc, [ip, #1172]!	; 0x494

00008a94 <strtok@plt>:
    8a94:	add	ip, pc, #0, 12
    8a98:	add	ip, ip, #92, 20	; 0x5c000
    8a9c:	ldr	pc, [ip, #1164]!	; 0x48c

00008aa0 <blkid_free_probe@plt>:
    8aa0:	add	ip, pc, #0, 12
    8aa4:	add	ip, ip, #92, 20	; 0x5c000
    8aa8:	ldr	pc, [ip, #1156]!	; 0x484

00008aac <strrchr@plt>:
    8aac:	add	ip, pc, #0, 12
    8ab0:	add	ip, ip, #92, 20	; 0x5c000
    8ab4:	ldr	pc, [ip, #1148]!	; 0x47c

00008ab8 <pthread_join@plt>:
    8ab8:	add	ip, pc, #0, 12
    8abc:	add	ip, ip, #92, 20	; 0x5c000
    8ac0:	ldr	pc, [ip, #1140]!	; 0x474

00008ac4 <statfs64@plt>:
    8ac4:	add	ip, pc, #0, 12
    8ac8:	add	ip, ip, #92, 20	; 0x5c000
    8acc:	ldr	pc, [ip, #1132]!	; 0x46c

00008ad0 <fputc@plt>:
    8ad0:			; <UNDEFINED> instruction: 0xe7fd4778
    8ad4:	add	ip, pc, #0, 12
    8ad8:	add	ip, ip, #92, 20	; 0x5c000
    8adc:	ldr	pc, [ip, #1120]!	; 0x460

00008ae0 <timerfd_settime@plt>:
    8ae0:	add	ip, pc, #0, 12
    8ae4:	add	ip, ip, #92, 20	; 0x5c000
    8ae8:	ldr	pc, [ip, #1112]!	; 0x458

00008aec <dirfd@plt>:
    8aec:	add	ip, pc, #0, 12
    8af0:	add	ip, ip, #92, 20	; 0x5c000
    8af4:	ldr	pc, [ip, #1104]!	; 0x450

00008af8 <getppid@plt>:
    8af8:	add	ip, pc, #0, 12
    8afc:	add	ip, ip, #92, 20	; 0x5c000
    8b00:	ldr	pc, [ip, #1096]!	; 0x448

00008b04 <atoi@plt>:
    8b04:	add	ip, pc, #0, 12
    8b08:	add	ip, ip, #92, 20	; 0x5c000
    8b0c:	ldr	pc, [ip, #1088]!	; 0x440

00008b10 <blkid_dev_devname@plt>:
    8b10:	add	ip, pc, #0, 12
    8b14:	add	ip, ip, #92, 20	; 0x5c000
    8b18:	ldr	pc, [ip, #1080]!	; 0x438

00008b1c <fopen64@plt>:
    8b1c:	add	ip, pc, #0, 12
    8b20:	add	ip, ip, #92, 20	; 0x5c000
    8b24:	ldr	pc, [ip, #1072]!	; 0x430

00008b28 <setmntent@plt>:
    8b28:	add	ip, pc, #0, 12
    8b2c:	add	ip, ip, #92, 20	; 0x5c000
    8b30:	ldr	pc, [ip, #1064]!	; 0x428

00008b34 <__tls_get_addr@plt>:
    8b34:	add	ip, pc, #0, 12
    8b38:	add	ip, ip, #92, 20	; 0x5c000
    8b3c:	ldr	pc, [ip, #1056]!	; 0x420

00008b40 <strncat@plt>:
    8b40:	add	ip, pc, #0, 12
    8b44:	add	ip, ip, #92, 20	; 0x5c000
    8b48:	ldr	pc, [ip, #1048]!	; 0x418

00008b4c <__xstat64@plt>:
    8b4c:			; <UNDEFINED> instruction: 0xe7fd4778
    8b50:	add	ip, pc, #0, 12
    8b54:	add	ip, ip, #92, 20	; 0x5c000
    8b58:	ldr	pc, [ip, #1036]!	; 0x40c

00008b5c <blkid_get_cache@plt>:
    8b5c:	add	ip, pc, #0, 12
    8b60:	add	ip, ip, #92, 20	; 0x5c000
    8b64:	ldr	pc, [ip, #1028]!	; 0x404

00008b68 <fputs@plt>:
    8b68:			; <UNDEFINED> instruction: 0xe7fd4778
    8b6c:	add	ip, pc, #0, 12
    8b70:	add	ip, ip, #92, 20	; 0x5c000
    8b74:	ldr	pc, [ip, #1016]!	; 0x3f8

00008b78 <strncmp@plt>:
    8b78:	add	ip, pc, #0, 12
    8b7c:	add	ip, ip, #92, 20	; 0x5c000
    8b80:	ldr	pc, [ip, #1008]!	; 0x3f0

00008b84 <abort@plt>:
    8b84:	add	ip, pc, #0, 12
    8b88:	add	ip, ip, #92, 20	; 0x5c000
    8b8c:	ldr	pc, [ip, #1000]!	; 0x3e8

00008b90 <realpath@plt>:
    8b90:	add	ip, pc, #0, 12
    8b94:	add	ip, ip, #92, 20	; 0x5c000
    8b98:	ldr	pc, [ip, #992]!	; 0x3e0

00008b9c <close@plt>:
    8b9c:	add	ip, pc, #0, 12
    8ba0:	add	ip, ip, #92, 20	; 0x5c000
    8ba4:	ldr	pc, [ip, #984]!	; 0x3d8

00008ba8 <blkid_probe_all@plt>:
    8ba8:	add	ip, pc, #0, 12
    8bac:	add	ip, ip, #92, 20	; 0x5c000
    8bb0:	ldr	pc, [ip, #976]!	; 0x3d0

00008bb4 <closedir@plt>:
    8bb4:	add	ip, pc, #0, 12
    8bb8:	add	ip, ip, #92, 20	; 0x5c000
    8bbc:	ldr	pc, [ip, #968]!	; 0x3c8

00008bc0 <__snprintf_chk@plt>:
    8bc0:	add	ip, pc, #0, 12
    8bc4:	add	ip, ip, #92, 20	; 0x5c000
    8bc8:	ldr	pc, [ip, #960]!	; 0x3c0

00008bcc <backtrace_symbols_fd@plt>:
    8bcc:	add	ip, pc, #0, 12
    8bd0:	add	ip, ip, #92, 20	; 0x5c000
    8bd4:	ldr	pc, [ip, #952]!	; 0x3b8

00008bd8 <__assert_fail@plt>:
    8bd8:	add	ip, pc, #0, 12
    8bdc:	add	ip, ip, #92, 20	; 0x5c000
    8be0:	ldr	pc, [ip, #944]!	; 0x3b0

Disassembly of section .text:

00008be8 <main@@Base>:
    8be8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8bec:	mov	r4, r0
    8bee:	vpush	{d8}
    8bf2:	mov	r5, r1
    8bf4:	ldr.w	r2, [pc, #1232]	; 90c8 <main@@Base+0x4e0>
    8bf8:	ldr.w	r3, [pc, #1232]	; 90cc <main@@Base+0x4e4>
    8bfc:	add	r2, pc
    8bfe:	ldr.w	r7, [pc, #1232]	; 90d0 <main@@Base+0x4e8>
    8c02:	sub	sp, #148	; 0x94
    8c04:	ldr.w	r8, [pc, #1228]	; 90d4 <main@@Base+0x4ec>
    8c08:	ldr	r3, [r2, r3]
    8c0a:	movs	r2, #0
    8c0c:	ldr.w	r6, [pc, #1224]	; 90d8 <main@@Base+0x4f0>
    8c10:	add	r7, pc
    8c12:	ldr	r3, [r3, #0]
    8c14:	str	r3, [sp, #140]	; 0x8c
    8c16:	mov.w	r3, #0
    8c1a:	strd	r2, r2, [sp, #112]	; 0x70
    8c1e:	strd	r2, r2, [sp, #120]	; 0x78
    8c22:	add	r8, pc
    8c24:	strd	r2, r2, [sp, #32]
    8c28:	add	r6, pc
    8c2a:	ldrd	r2, r3, [sp, #32]
    8c2e:	strd	r2, r3, [sp, #24]
    8c32:	movs	r3, #0
    8c34:	mov	fp, r3
    8c36:	mov	r9, r3
    8c38:	str	r3, [sp, #88]	; 0x58
    8c3a:	mov	r3, r7
    8c3c:	mov	r2, r8
    8c3e:	mov	r1, r5
    8c40:	mov	r0, r4
    8c42:	str.w	r9, [sp]
    8c46:	blx	8910 <getopt_long@plt>
    8c4a:	cmp	r0, #0
    8c4c:	blt.n	8c96 <main@@Base+0xae>
    8c4e:	ldr.w	r3, [pc, #1164]	; 90dc <main@@Base+0x4f4>
    8c52:	cmp	r0, #108	; 0x6c
    8c54:	ldr	r3, [r6, r3]
    8c56:	beq.n	8c74 <main@@Base+0x8c>
    8c58:	bgt.n	8c66 <main@@Base+0x7e>
    8c5a:	cmp	r0, #98	; 0x62
    8c5c:	beq.n	8c8a <main@@Base+0xa2>
    8c5e:	cmp	r0, #99	; 0x63
    8c60:	beq.n	8c80 <main@@Base+0x98>
    8c62:	bl	126ec <get_partition_size@@Base+0x64>
    8c66:	cmp	r0, #111	; 0x6f
    8c68:	bne.n	8c62 <main@@Base+0x7a>
    8c6a:	ldr	r0, [r3, #0]
    8c6c:	blx	86f0 <strdup@plt+0x4>
    8c70:	mov	fp, r0
    8c72:	b.n	8c3a <main@@Base+0x52>
    8c74:	ldr	r0, [r3, #0]
    8c76:	bl	17e3c <arg_strtou64@@Base>
    8c7a:	strd	r0, r1, [sp, #24]
    8c7e:	b.n	8c3a <main@@Base+0x52>
    8c80:	ldr	r0, [r3, #0]
    8c82:	bl	17e3c <arg_strtou64@@Base>
    8c86:	str	r0, [sp, #88]	; 0x58
    8c88:	b.n	8c3a <main@@Base+0x52>
    8c8a:	ldr	r0, [r3, #0]
    8c8c:	bl	17e3c <arg_strtou64@@Base>
    8c90:	strd	r0, r1, [sp, #32]
    8c94:	b.n	8c3a <main@@Base+0x52>
    8c96:	mov	r0, r5
    8c98:	bl	10a70 <set_argv0@@Base>
    8c9c:	ldr.w	r3, [pc, #1088]	; 90e0 <main@@Base+0x4f8>
    8ca0:	movs	r1, #1
    8ca2:	ldr	r7, [r6, r3]
    8ca4:	ldr	r0, [r7, #0]
    8ca6:	subs	r0, r4, r0
    8ca8:	bl	10aec <check_argc_min@@Base>
    8cac:	mov	r4, r0
    8cae:	cmp	r0, #0
    8cb0:	bne.w	90b8 <main@@Base+0x4d0>
    8cb4:	ldrd	r2, r3, [sp, #24]
    8cb8:	orrs	r3, r2
    8cba:	beq.n	8c62 <main@@Base+0x7a>
    8cbc:	ldr	r3, [r7, #0]
    8cbe:	ldr.w	r5, [r5, r3, lsl #2]
    8cc2:	bl	163a6 <radix_tree_init@@Base>
    8cc6:	add	r0, sp, #104	; 0x68
    8cc8:	bl	16594 <cache_tree_init@@Base>
    8ccc:	movs	r2, #0
    8cce:	movs	r3, #0
    8cd0:	mov	r0, r5
    8cd2:	str	r4, [sp, #0]
    8cd4:	bl	1e9ec <open_ctree@@Base>
    8cd8:	mov	r9, r0
    8cda:	cbnz	r0, 8cfa <main@@Base+0x112>
    8cdc:	ldr.w	r3, [pc, #1028]	; 90e4 <main@@Base+0x4fc>
    8ce0:	ldr.w	r0, [pc, #1028]	; 90e8 <main@@Base+0x500>
    8ce4:	ldr	r3, [r6, r3]
    8ce6:	add	r0, pc
    8ce8:	ldr	r1, [r3, #0]
    8cea:	blx	8b6c <fputs@plt+0x4>
    8cee:	mov	r0, fp
    8cf0:	blx	8620 <free@plt+0x4>
    8cf4:	movs	r0, #1
    8cf6:	blx	8934 <exit@plt>
    8cfa:	ldr	r3, [pc, #1008]	; (90ec <main@@Base+0x504>)
    8cfc:	ldr	r7, [pc, #1008]	; (90f0 <main@@Base+0x508>)
    8cfe:	ldr.w	r8, [r6, r3]
    8d02:	add	r7, pc
    8d04:	ldr.w	r3, [r8]
    8d08:	str	r3, [r7, #0]
    8d0a:	cmp.w	fp, #0
    8d0e:	beq.n	8e00 <main@@Base+0x218>
    8d10:	ldr	r1, [pc, #992]	; (90f4 <main@@Base+0x50c>)
    8d12:	mov	r0, fp
    8d14:	add	r1, pc
    8d16:	blx	85ac <strcmp@plt>
    8d1a:	cmp	r0, #0
    8d1c:	bne.n	8da8 <main@@Base+0x1c0>
    8d1e:	ldr	r3, [pc, #964]	; (90e4 <main@@Base+0x4fc>)
    8d20:	movs	r5, #1
    8d22:	ldr	r3, [r6, r3]
    8d24:	ldr	r3, [r3, #0]
    8d26:	str	r3, [r7, #0]
    8d28:	ldrd	r2, r3, [sp, #32]
    8d2c:	ldr.w	r0, [r9, #464]	; 0x1d0
    8d30:	orrs	r3, r2
    8d32:	itttt	eq
    8d34:	ldreq.w	r3, [r0, #384]	; 0x180
    8d38:	moveq	r2, #0
    8d3a:	moveq	r1, r3
    8d3c:	strdeq	r1, r2, [sp, #32]
    8d40:	ldrd	r2, r3, [sp, #24]
    8d44:	add	r1, sp, #112	; 0x70
    8d46:	str	r1, [sp, #40]	; 0x28
    8d48:	strd	r2, r3, [sp, #112]	; 0x70
    8d4c:	ldrd	r2, r3, [sp, #32]
    8d50:	strd	r2, r3, [sp, #120]	; 0x78
    8d54:	add	r2, sp, #120	; 0x78
    8d56:	movs	r3, #0
    8d58:	str	r2, [sp, #48]	; 0x30
    8d5a:	bl	12930 <get_partition_size@@Base+0x2a8>
    8d5e:	ldr	r1, [sp, #40]	; 0x28
    8d60:	ldr	r2, [sp, #48]	; 0x30
    8d62:	subs	r7, r0, #0
    8d64:	bge.n	8e06 <main@@Base+0x21e>
    8d66:	blx	897c <__errno_location@plt>
    8d6a:	ldr	r2, [pc, #888]	; (90e4 <main@@Base+0x4fc>)
    8d6c:	negs	r3, r7
    8d6e:	ldr	r1, [sp, #124]	; 0x7c
    8d70:	str	r3, [r0, #0]
    8d72:	ldrd	r3, r4, [sp, #112]	; 0x70
    8d76:	ldr	r0, [r6, r2]
    8d78:	ldr	r2, [sp, #120]	; 0x78
    8d7a:	strd	r3, r4, [sp]
    8d7e:	adds	r2, r3, r2
    8d80:	adc.w	r1, r4, r1
    8d84:	strd	r2, r1, [sp, #8]
    8d88:	ldr	r2, [pc, #876]	; (90f8 <main@@Base+0x510>)
    8d8a:	movs	r1, #1
    8d8c:	ldr	r0, [r0, #0]
    8d8e:	add	r2, pc
    8d90:	blx	8a64 <__fprintf_chk@plt+0x4>
    8d94:	mov	r4, r7
    8d96:	cmp.w	fp, #0
    8d9a:	beq.n	8dca <main@@Base+0x1e2>
    8d9c:	cmp	r5, #1
    8d9e:	beq.n	8dca <main@@Base+0x1e2>
    8da0:	mov	r0, r5
    8da2:	blx	8b9c <close@plt>
    8da6:	b.n	8dca <main@@Base+0x1e2>
    8da8:	mov.w	r2, #384	; 0x180
    8dac:	movs	r1, #66	; 0x42
    8dae:	mov	r0, fp
    8db0:	blx	8844 <open64@plt>
    8db4:	subs	r5, r0, #0
    8db6:	blt.n	8dca <main@@Base+0x1e2>
    8db8:	movs	r2, #0
    8dba:	movs	r3, #0
    8dbc:	blx	8690 <ftruncate64@plt>
    8dc0:	cbz	r0, 8df8 <main@@Base+0x210>
    8dc2:	mov	r0, r5
    8dc4:	movs	r4, #1
    8dc6:	blx	8b9c <close@plt>
    8dca:	mov	r0, fp
    8dcc:	blx	8620 <free@plt+0x4>
    8dd0:	ldr.w	r0, [r9, #464]	; 0x1d0
    8dd4:	bl	1da8c <close_ctree_fs_info@@Base>
    8dd8:	cmp	r4, #0
    8dda:	it	lt
    8ddc:	movlt	r4, #1
    8dde:	bl	28700 <btrfs_close_all_devices@@Base>
    8de2:	ldr	r2, [pc, #792]	; (90fc <main@@Base+0x514>)
    8de4:	ldr	r3, [pc, #740]	; (90cc <main@@Base+0x4e4>)
    8de6:	add	r2, pc
    8de8:	ldr	r3, [r2, r3]
    8dea:	ldr	r2, [r3, #0]
    8dec:	ldr	r3, [sp, #140]	; 0x8c
    8dee:	eors	r2, r3
    8df0:	beq.w	90bc <main@@Base+0x4d4>
    8df4:	blx	8708 <__stack_chk_fail@plt>
    8df8:	ldr.w	r3, [r8]
    8dfc:	str	r3, [r7, #0]
    8dfe:	b.n	8d28 <main@@Base+0x140>
    8e00:	mov.w	r5, #4294967295	; 0xffffffff
    8e04:	b.n	8d28 <main@@Base+0x140>
    8e06:	bne.n	8e7c <main@@Base+0x294>
    8e08:	ldr	r2, [sp, #32]
    8e0a:	movs	r7, #0
    8e0c:	ldr	r3, [sp, #24]
    8e0e:	adds	r3, r3, r2
    8e10:	ldr	r2, [sp, #36]	; 0x24
    8e12:	str	r3, [sp, #64]	; 0x40
    8e14:	ldr	r3, [sp, #28]
    8e16:	adcs	r3, r2
    8e18:	str	r3, [sp, #68]	; 0x44
    8e1a:	ldrd	r2, r3, [sp, #112]	; 0x70
    8e1e:	ldr	r1, [sp, #120]	; 0x78
    8e20:	strd	r2, r3, [sp, #40]	; 0x28
    8e24:	ldr	r3, [sp, #40]	; 0x28
    8e26:	adds	r1, r3, r1
    8e28:	ldr	r3, [sp, #44]	; 0x2c
    8e2a:	str	r1, [sp, #80]	; 0x50
    8e2c:	ldr	r1, [sp, #124]	; 0x7c
    8e2e:	adc.w	r1, r3, r1
    8e32:	str	r1, [sp, #84]	; 0x54
    8e34:	ldrd	r0, r1, [sp, #80]	; 0x50
    8e38:	ldrd	r2, r3, [sp, #24]
    8e3c:	cmp	r1, r3
    8e3e:	it	eq
    8e40:	cmpeq	r0, r2
    8e42:	bcc.n	8e54 <main@@Base+0x26c>
    8e44:	ldrd	r2, r3, [sp, #64]	; 0x40
    8e48:	ldrd	r0, r1, [sp, #40]	; 0x28
    8e4c:	cmp	r1, r3
    8e4e:	it	eq
    8e50:	cmpeq	r0, r2
    8e52:	bcc.n	8edc <main@@Base+0x2f4>
    8e54:	cmp	r4, #0
    8e56:	bne.n	8d94 <main@@Base+0x1ac>
    8e58:	ldr	r2, [sp, #24]
    8e5a:	ldr	r1, [sp, #32]
    8e5c:	ldr	r3, [pc, #644]	; (90e4 <main@@Base+0x4fc>)
    8e5e:	adds	r1, r2, r1
    8e60:	ldr	r0, [sp, #28]
    8e62:	ldr	r2, [sp, #36]	; 0x24
    8e64:	ldr	r3, [r6, r3]
    8e66:	adc.w	r2, r0, r2
    8e6a:	strd	r1, r2, [sp, #8]
    8e6e:	ldrd	r1, r2, [sp, #24]
    8e72:	strd	r1, r2, [sp]
    8e76:	ldr	r2, [pc, #648]	; (9100 <main@@Base+0x518>)
    8e78:	add	r2, pc
    8e7a:	b.n	8eba <main@@Base+0x2d2>
    8e7c:	ldr.w	r0, [r9, #464]	; 0x1d0
    8e80:	movs	r3, #1
    8e82:	bl	12930 <get_partition_size@@Base+0x2a8>
    8e86:	ldrd	r8, r2, [sp, #112]	; 0x70
    8e8a:	ldrd	r1, sl, [sp, #120]	; 0x78
    8e8e:	subs	r7, r0, #0
    8e90:	bge.n	8ec0 <main@@Base+0x2d8>
    8e92:	str	r1, [sp, #32]
    8e94:	str	r2, [sp, #24]
    8e96:	blx	897c <__errno_location@plt>
    8e9a:	ldr	r2, [sp, #24]
    8e9c:	negs	r3, r7
    8e9e:	ldr	r1, [sp, #32]
    8ea0:	str	r3, [r0, #0]
    8ea2:	adds.w	r0, r8, r1
    8ea6:	ldr	r3, [pc, #572]	; (90e4 <main@@Base+0x4fc>)
    8ea8:	adc.w	r1, r2, sl
    8eac:	ldr	r3, [r6, r3]
    8eae:	strd	r8, r2, [sp]
    8eb2:	ldr	r2, [pc, #592]	; (9104 <main@@Base+0x51c>)
    8eb4:	strd	r0, r1, [sp, #8]
    8eb8:	add	r2, pc
    8eba:	ldr	r0, [r3, #0]
    8ebc:	movs	r1, #1
    8ebe:	b.n	8d90 <main@@Base+0x1a8>
    8ec0:	beq.n	8e08 <main@@Base+0x220>
    8ec2:	ldr	r3, [pc, #544]	; (90e4 <main@@Base+0x4fc>)
    8ec4:	adds.w	r1, r8, r1
    8ec8:	adc.w	r0, r2, sl
    8ecc:	ldr	r3, [r6, r3]
    8ece:	strd	r8, r2, [sp]
    8ed2:	ldr	r2, [pc, #564]	; (9108 <main@@Base+0x520>)
    8ed4:	strd	r1, r0, [sp, #8]
    8ed8:	add	r2, pc
    8eda:	b.n	8eba <main@@Base+0x2d2>
    8edc:	ldr.w	r0, [r9, #464]	; 0x1d0
    8ee0:	add	r2, sp, #120	; 0x78
    8ee2:	add	r1, sp, #112	; 0x70
    8ee4:	movs	r3, #1
    8ee6:	bl	12930 <get_partition_size@@Base+0x2a8>
    8eea:	mov	r7, r0
    8eec:	cmp	r0, #0
    8eee:	bne.w	8d94 <main@@Base+0x1ac>
    8ef2:	ldrd	r3, r4, [sp, #112]	; 0x70
    8ef6:	ldr	r1, [sp, #120]	; 0x78
    8ef8:	strd	r3, r4, [sp, #40]	; 0x28
    8efc:	ldr	r3, [sp, #40]	; 0x28
    8efe:	adds	r1, r3, r1
    8f00:	ldr	r3, [sp, #44]	; 0x2c
    8f02:	str	r1, [sp, #72]	; 0x48
    8f04:	ldr	r1, [sp, #124]	; 0x7c
    8f06:	adc.w	r1, r3, r1
    8f0a:	str	r1, [sp, #76]	; 0x4c
    8f0c:	ldrd	r0, r1, [sp, #72]	; 0x48
    8f10:	ldrd	r3, r4, [sp, #24]
    8f14:	cmp	r1, r4
    8f16:	it	eq
    8f18:	cmpeq	r0, r3
    8f1a:	bcc.w	8d94 <main@@Base+0x1ac>
    8f1e:	ldrd	r3, r4, [sp, #64]	; 0x40
    8f22:	ldrd	r1, r2, [sp, #40]	; 0x28
    8f26:	cmp	r2, r4
    8f28:	it	eq
    8f2a:	cmpeq	r1, r3
    8f2c:	bcs.w	8d94 <main@@Base+0x1ac>
    8f30:	mov	r3, r1
    8f32:	mov	r4, r2
    8f34:	ldrd	r1, r2, [sp, #24]
    8f38:	movs	r7, #1
    8f3a:	ldr.w	r8, [r9, #464]	; 0x1d0
    8f3e:	cmp	r4, r2
    8f40:	it	eq
    8f42:	cmpeq	r3, r1
    8f44:	itt	cc
    8f46:	movcc	r3, r1
    8f48:	movcc	r4, r2
    8f4a:	ldrd	r0, r1, [sp, #64]	; 0x40
    8f4e:	it	cc
    8f50:	strdcc	r3, r4, [sp, #40]	; 0x28
    8f54:	ldrd	r2, r3, [sp, #72]	; 0x48
    8f58:	cmp	r1, r3
    8f5a:	it	eq
    8f5c:	cmpeq	r0, r2
    8f5e:	it	cc
    8f60:	movcc	r3, r1
    8f62:	ldr	r1, [sp, #40]	; 0x28
    8f64:	it	cc
    8f66:	movcc	r2, r0
    8f68:	mov	r0, r8
    8f6a:	subs	r1, r2, r1
    8f6c:	str	r1, [sp, #56]	; 0x38
    8f6e:	ldr	r1, [sp, #44]	; 0x2c
    8f70:	sbc.w	r3, r3, r1
    8f74:	str	r3, [sp, #60]	; 0x3c
    8f76:	ldrd	r3, r4, [sp, #56]	; 0x38
    8f7a:	strd	r3, r4, [sp]
    8f7e:	movs	r4, #0
    8f80:	ldrd	r2, r3, [sp, #40]	; 0x28
    8f84:	bl	29cb4 <btrfs_num_copies@@Base>
    8f88:	ldr	r3, [pc, #384]	; (910c <main@@Base+0x524>)
    8f8a:	add	r3, pc
    8f8c:	vmov	s16, r3
    8f90:	str	r0, [sp, #96]	; 0x60
    8f92:	ldr	r3, [sp, #96]	; 0x60
    8f94:	cmp	r3, r7
    8f96:	bge.n	8fda <main@@Base+0x3f2>
    8f98:	cmp.w	fp, #0
    8f9c:	beq.n	8fc2 <main@@Base+0x3da>
    8f9e:	adds	r3, r5, #1
    8fa0:	beq.n	8fc2 <main@@Base+0x3da>
    8fa2:	ldr	r3, [sp, #88]	; 0x58
    8fa4:	mov	r1, r5
    8fa6:	str	r3, [sp, #8]
    8fa8:	ldrd	r3, r4, [sp, #56]	; 0x38
    8fac:	strd	r3, r4, [sp]
    8fb0:	ldrd	r2, r3, [sp, #40]	; 0x28
    8fb4:	ldr.w	r0, [r9, #464]	; 0x1d0
    8fb8:	bl	12730 <get_partition_size@@Base+0xa8>
    8fbc:	subs	r4, r0, #0
    8fbe:	blt.w	8d9c <main@@Base+0x1b4>
    8fc2:	ldr	r3, [sp, #112]	; 0x70
    8fc4:	mov	r7, r4
    8fc6:	ldr	r2, [sp, #120]	; 0x78
    8fc8:	movs	r4, #1
    8fca:	ldr	r1, [sp, #124]	; 0x7c
    8fcc:	adds	r3, r3, r2
    8fce:	ldr	r2, [sp, #116]	; 0x74
    8fd0:	adc.w	r2, r1, r2
    8fd4:	strd	r3, r2, [sp, #112]	; 0x70
    8fd8:	b.n	8e1a <main@@Base+0x232>
    8fda:	movs	r3, #0
    8fdc:	movs	r4, #0
    8fde:	str	r3, [sp, #108]	; 0x6c
    8fe0:	movs	r3, #0
    8fe2:	strd	r3, r4, [sp, #48]	; 0x30
    8fe6:	ldr	r3, [pc, #296]	; (9110 <main@@Base+0x528>)
    8fe8:	add	r3, pc
    8fea:	str	r3, [sp, #100]	; 0x64
    8fec:	ldrd	r1, r2, [sp, #56]	; 0x38
    8ff0:	ldrd	r3, r4, [sp, #48]	; 0x30
    8ff4:	cmp	r4, r2
    8ff6:	it	eq
    8ff8:	cmpeq	r3, r1
    8ffa:	mov.w	r1, #0
    8ffe:	bcc.n	9006 <main@@Base+0x41e>
    9000:	mov	r4, r1
    9002:	adds	r7, #1
    9004:	b.n	8f92 <main@@Base+0x3aa>
    9006:	ldr	r3, [sp, #56]	; 0x38
    9008:	ldr	r2, [sp, #48]	; 0x30
    900a:	ldr	r0, [sp, #52]	; 0x34
    900c:	subs	r2, r3, r2
    900e:	ldr	r3, [sp, #60]	; 0x3c
    9010:	strd	r7, r1, [sp, #8]
    9014:	sbc.w	r3, r3, r0
    9018:	strd	r2, r3, [sp, #128]	; 0x80
    901c:	ldr	r2, [sp, #48]	; 0x30
    901e:	ldr	r3, [sp, #40]	; 0x28
    9020:	adds	r3, r3, r2
    9022:	str	r3, [sp, #92]	; 0x5c
    9024:	ldr	r3, [sp, #44]	; 0x2c
    9026:	ldr	r2, [sp, #92]	; 0x5c
    9028:	adc.w	sl, r3, r0
    902c:	add	r3, sp, #108	; 0x6c
    902e:	mov	r0, r8
    9030:	str	r3, [sp, #4]
    9032:	add	r3, sp, #128	; 0x80
    9034:	str	r3, [sp, #0]
    9036:	mov	r3, sl
    9038:	bl	2a528 <btrfs_map_block@@Base>
    903c:	mov	r4, r0
    903e:	cbz	r0, 9094 <main@@Base+0x4ac>
    9040:	blx	897c <__errno_location@plt>
    9044:	negs	r3, r4
    9046:	movs	r1, #1
    9048:	str	r3, [r0, #0]
    904a:	ldrd	r2, r3, [sp, #40]	; 0x28
    904e:	ldr	r0, [pc, #196]	; (9114 <main@@Base+0x52c>)
    9050:	strd	r2, r3, [sp]
    9054:	add	r0, pc
    9056:	ldr	r2, [pc, #192]	; (9118 <main@@Base+0x530>)
    9058:	mov	r3, r7
    905a:	ldr	r0, [r0, #0]
    905c:	add	r2, pc
    905e:	blx	8a64 <__fprintf_chk@plt+0x4>
    9062:	cmp	r4, #0
    9064:	bge.n	9002 <main@@Base+0x41a>
    9066:	mov	r7, r4
    9068:	b.n	8d94 <main@@Base+0x1ac>
    906a:	add.w	r3, r0, r4, lsl #4
    906e:	movs	r1, #1
    9070:	adds	r4, #1
    9072:	ldr	r3, [r3, #8]
    9074:	ldr	r3, [r3, #32]
    9076:	str	r3, [sp, #16]
    9078:	ldrd	r2, r3, [r0, #16]
    907c:	ldr	r0, [sp, #100]	; 0x64
    907e:	strd	r2, r3, [sp, #8]
    9082:	ldr	r3, [sp, #92]	; 0x5c
    9084:	vmov	r2, s16
    9088:	strd	r3, sl, [sp]
    908c:	mov	r3, r7
    908e:	ldr	r0, [r0, #0]
    9090:	blx	8a64 <__fprintf_chk@plt+0x4>
    9094:	ldr	r0, [sp, #108]	; 0x6c
    9096:	ldr	r3, [r0, #4]
    9098:	cmp	r4, r3
    909a:	blt.n	906a <main@@Base+0x482>
    909c:	blx	8620 <free@plt+0x4>
    90a0:	ldr	r2, [sp, #48]	; 0x30
    90a2:	movs	r3, #0
    90a4:	str	r3, [sp, #108]	; 0x6c
    90a6:	ldr	r3, [sp, #128]	; 0x80
    90a8:	adds	r3, r2, r3
    90aa:	ldr	r2, [sp, #52]	; 0x34
    90ac:	str	r3, [sp, #48]	; 0x30
    90ae:	ldr	r3, [sp, #132]	; 0x84
    90b0:	adc.w	r2, r3, r2
    90b4:	str	r2, [sp, #52]	; 0x34
    90b6:	b.n	8fec <main@@Base+0x404>
    90b8:	movs	r4, #1
    90ba:	b.n	8de2 <main@@Base+0x1fa>
    90bc:	mov	r0, r4
    90be:	add	sp, #148	; 0x94
    90c0:	vpop	{d8}
    90c4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    90c8:	stmia	r1!, {r2, r7}
    90ca:	movs	r5, r0
    90cc:	lsls	r0, r5, #8
    90ce:	movs	r0, r0
    90d0:	cbnz	r4, 9120 <_start@@Base+0x4>
    90d2:	movs	r5, r0
    90d4:	cmp	r5, #79	; 0x4f
    90d6:	movs	r3, r0
    90d8:	stmia	r1!, {r3, r4, r6}
    90da:	movs	r5, r0
    90dc:	lsls	r4, r6, #9
    90de:	movs	r0, r0
    90e0:	lsls	r4, r5, #8
    90e2:	movs	r0, r0
    90e4:	lsls	r0, r7, #8
    90e6:	movs	r0, r0
    90e8:	cmp	r4, #148	; 0x94
    90ea:	movs	r3, r0
    90ec:	lsls	r4, r3, #9
    90ee:	movs	r0, r0
    90f0:	bpl.n	91c8 <_start@@Base+0xac>
    90f2:	movs	r5, r0
    90f4:	asrs	r5, r1, #20
    90f6:	movs	r3, r0
    90f8:	cmp	r3, #255	; 0xff
    90fa:	movs	r3, r0
    90fc:	itte	ls
    90fe:	movls	r5, r0
    9100:	cmpls	r3, #198	; 0xc6
    9102:	movhi	r3, r0
    9104:	cmp	r2, #213	; 0xd5
    9106:	movs	r3, r0
    9108:	cmp	r2, #223	; 0xdf
    910a:	movs	r3, r0
    910c:	cmp	r2, #134	; 0x86
    910e:	movs	r3, r0
    9110:	bcs.n	901c <main@@Base+0x434>
    9112:	movs	r5, r0
    9114:	bcs.n	9148 <_start@@Base+0x2c>
    9116:	movs	r5, r0
    9118:	cmp	r1, #133	; 0x85
    911a:	movs	r3, r0

0000911c <_start@@Base>:
    911c:	mov.w	fp, #0
    9120:	mov.w	lr, #0
    9124:	pop	{r1}
    9126:	mov	r2, sp
    9128:	push	{r2}
    912a:	push	{r0}
    912c:	ldr.w	sl, [pc, #36]	; 9154 <_start@@Base+0x38>
    9130:	add	r3, pc, #32	; (adr r3, 9154 <_start@@Base+0x38>)
    9132:	add	sl, r3
    9134:	ldr.w	ip, [pc, #32]	; 9158 <_start@@Base+0x3c>
    9138:	ldr.w	ip, [sl, ip]
    913c:	str.w	ip, [sp, #-4]!
    9140:	ldr	r3, [pc, #24]	; (915c <_start@@Base+0x40>)
    9142:	ldr.w	r3, [sl, r3]
    9146:	ldr	r0, [pc, #24]	; (9160 <_start@@Base+0x44>)
    9148:	ldr.w	r0, [sl, r0]
    914c:	blx	887c <__libc_start_main@plt>
    9150:	blx	8b84 <abort@plt>
    9154:	pop	{r4, r5}
    9156:	movs	r5, r0
    9158:	lsls	r0, r3, #8
    915a:	movs	r0, r0
    915c:	lsls	r4, r2, #9
    915e:	movs	r0, r0
    9160:	lsls	r4, r4, #9
    9162:	movs	r0, r0
    9164:	adds	r0, #20
    9166:	b.n	8ca8 <main@@Base+0xc0>
    9168:	movs	r0, #20
    916a:	b.n	8cac <main@@Base+0xc4>
    916c:	adds	r0, #3
    916e:	b.n	9290 <btrfs_delete_one_dir_name@@Base+0x18>
    9170:	movs	r0, #2
    9172:	b.n	909c <main@@Base+0x4b4>
    9174:	movs	r0, r0
    9176:	b.n	981e <btrfs_insert_dir_item@@Base+0x176>
    9178:	vrhadd.u16	d0, d14, d31
    917c:	ldc2l	10, cr14, [sl, #1020]	; 0x3fc	; <UNPREDICTABLE>
    9180:	pop	{r4}
    9182:	movs	r5, r0
    9184:	lsls	r4, r0, #9
    9186:	movs	r0, r0
    9188:	ldr	r0, [pc, #24]	; (91a4 <_start@@Base+0x88>)
    918a:	ldr	r3, [pc, #28]	; (91a8 <_start@@Base+0x8c>)
    918c:	add	r0, pc
    918e:	ldr	r2, [pc, #28]	; (91ac <_start@@Base+0x90>)
    9190:	add	r3, pc
    9192:	cmp	r3, r0
    9194:	add	r2, pc
    9196:	beq.n	91a0 <_start@@Base+0x84>
    9198:	ldr	r3, [pc, #20]	; (91b0 <_start@@Base+0x94>)
    919a:	ldr	r3, [r2, r3]
    919c:	cbz	r3, 91a0 <_start@@Base+0x84>
    919e:	bx	r3
    91a0:	bx	lr
    91a2:	nop
    91a4:	beq.n	9108 <main@@Base+0x520>
    91a6:	movs	r5, r0
    91a8:	beq.n	9104 <main@@Base+0x51c>
    91aa:	movs	r5, r0
    91ac:	cbnz	r4, 922a <_start@@Base+0x10e>
    91ae:	movs	r5, r0
    91b0:	lsls	r0, r4, #8
    91b2:	movs	r0, r0
    91b4:	ldr	r0, [pc, #32]	; (91d8 <_start@@Base+0xbc>)
    91b6:	ldr	r1, [pc, #36]	; (91dc <_start@@Base+0xc0>)
    91b8:	add	r0, pc
    91ba:	ldr	r2, [pc, #36]	; (91e0 <_start@@Base+0xc4>)
    91bc:	add	r1, pc
    91be:	subs	r1, r1, r0
    91c0:	add	r2, pc
    91c2:	lsrs	r3, r1, #31
    91c4:	add.w	r1, r3, r1, asr #2
    91c8:	asrs	r1, r1, #1
    91ca:	beq.n	91d4 <_start@@Base+0xb8>
    91cc:	ldr	r3, [pc, #20]	; (91e4 <_start@@Base+0xc8>)
    91ce:	ldr	r3, [r2, r3]
    91d0:	cbz	r3, 91d4 <_start@@Base+0xb8>
    91d2:	bx	r3
    91d4:	bx	lr
    91d6:	nop
    91d8:	beq.n	90e4 <main@@Base+0x4fc>
    91da:	movs	r5, r0
    91dc:	beq.n	90e0 <main@@Base+0x4f8>
    91de:	movs	r5, r0
    91e0:	cbnz	r0, 9254 <_start@@Base+0x138>
    91e2:	movs	r5, r0
    91e4:	lsls	r4, r5, #9
    91e6:	movs	r0, r0
    91e8:	push	{r3, lr}
    91ea:	ldr	r3, [pc, #40]	; (9214 <_start@@Base+0xf8>)
    91ec:	ldr	r2, [pc, #40]	; (9218 <_start@@Base+0xfc>)
    91ee:	add	r3, pc
    91f0:	add	r2, pc
    91f2:	ldrb	r3, [r3, #0]
    91f4:	cbnz	r3, 9212 <_start@@Base+0xf6>
    91f6:	ldr	r3, [pc, #36]	; (921c <_start@@Base+0x100>)
    91f8:	ldr	r3, [r2, r3]
    91fa:	cbz	r3, 9206 <_start@@Base+0xea>
    91fc:	ldr	r3, [pc, #32]	; (9220 <_start@@Base+0x104>)
    91fe:	add	r3, pc
    9200:	ldr	r0, [r3, #0]
    9202:	blx	85b8 <__cxa_finalize@plt>
    9206:	bl	9188 <_start@@Base+0x6c>
    920a:	ldr	r3, [pc, #24]	; (9224 <_start@@Base+0x108>)
    920c:	movs	r2, #1
    920e:	add	r3, pc
    9210:	strb	r2, [r3, #0]
    9212:	pop	{r3, pc}
    9214:	beq.n	92b4 <btrfs_delete_one_dir_name@@Base+0x3c>
    9216:	movs	r5, r0
    9218:	cbnz	r0, 9280 <btrfs_delete_one_dir_name@@Base+0x8>
    921a:	movs	r5, r0
    921c:	lsls	r4, r3, #8
    921e:	movs	r0, r0
    9220:	bkpt	0x0002
    9222:	movs	r5, r0
    9224:	beq.n	9284 <btrfs_delete_one_dir_name@@Base+0xc>
    9226:	movs	r5, r0
    9228:	b.n	91b4 <_start@@Base+0x98>
    922a:	nop
    922c:	ldr	r2, [pc, #60]	; (926c <_start@@Base+0x150>)
    922e:	movs	r1, #16
    9230:	ldr	r3, [pc, #60]	; (9270 <_start@@Base+0x154>)
    9232:	push	{r4, lr}
    9234:	add	r2, pc
    9236:	sub	sp, #72	; 0x48
    9238:	add	r4, sp, #4
    923a:	ldr	r3, [r2, r3]
    923c:	mov	r0, r4
    923e:	ldr	r3, [r3, #0]
    9240:	str	r3, [sp, #68]	; 0x44
    9242:	mov.w	r3, #0
    9246:	blx	88bc <backtrace@plt>
    924a:	movs	r2, #2
    924c:	mov	r1, r0
    924e:	mov	r0, r4
    9250:	blx	8bcc <backtrace_symbols_fd@plt>
    9254:	ldr	r2, [pc, #28]	; (9274 <_start@@Base+0x158>)
    9256:	ldr	r3, [pc, #24]	; (9270 <_start@@Base+0x154>)
    9258:	add	r2, pc
    925a:	ldr	r3, [r2, r3]
    925c:	ldr	r2, [r3, #0]
    925e:	ldr	r3, [sp, #68]	; 0x44
    9260:	eors	r2, r3
    9262:	beq.n	9268 <_start@@Base+0x14c>
    9264:	blx	8708 <__stack_chk_fail@plt>
    9268:	add	sp, #72	; 0x48
    926a:	pop	{r4, pc}
    926c:	cbnz	r4, 92c2 <btrfs_delete_one_dir_name@@Base+0x4a>
    926e:	movs	r5, r0
    9270:	lsls	r0, r5, #8
    9272:	movs	r0, r0
    9274:	cbnz	r0, 92c2 <btrfs_delete_one_dir_name@@Base+0x4a>
    9276:	movs	r5, r0

00009278 <btrfs_delete_one_dir_name@@Base>:
    9278:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    927c:	mov	r6, r3
    927e:	ldr.w	ip, [r2]
    9282:	movs	r7, #25
    9284:	mov	r8, r1
    9286:	mov	r5, r2
    9288:	add.w	lr, ip, #96	; 0x60
    928c:	add	r3, lr
    928e:	ldrh.w	r4, [r3, #27]
    9292:	ldrh.w	r3, [r3, #25]
    9296:	add	r4, r3
    9298:	ldr	r3, [r2, #32]
    929a:	adds	r4, #30
    929c:	mla	r7, r7, r3, lr
    92a0:	add.w	lr, r7, #101	; 0x65
    92a4:	ldr.w	r7, [r7, #122]	; 0x7a
    92a8:	cmp	r4, r7
    92aa:	bcc.n	92ba <btrfs_delete_one_dir_name@@Base+0x42>
    92ac:	movs	r4, #1
    92ae:	str	r4, [sp, #0]
    92b0:	bl	1baf8 <btrfs_del_items@@Base>
    92b4:	add	sp, #8
    92b6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    92ba:	ldr.w	r3, [lr, #17]
    92be:	adds	r2, r4, r6
    92c0:	mov	r0, ip
    92c2:	mov	r1, r6
    92c4:	add	r3, r7
    92c6:	adds	r3, #101	; 0x65
    92c8:	subs	r3, r3, r2
    92ca:	bl	17a8c <memmove_extent_buffer@@Base>
    92ce:	subs	r2, r7, r4
    92d0:	movs	r3, #1
    92d2:	mov	r1, r5
    92d4:	mov	r0, r8
    92d6:	bl	1a57c <btrfs_truncate_item@@Base>
    92da:	movs	r0, #0
    92dc:	b.n	92b4 <btrfs_delete_one_dir_name@@Base+0x3c>

000092de <btrfs_match_dir_item_name@@Base>:
    92de:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    92e2:	mov	r4, r1
    92e4:	ldr.w	fp, [r4]
    92e8:	mov	r7, r3
    92ea:	ldr	r3, [r4, #32]
    92ec:	mov	r1, r2
    92ee:	add.w	r9, fp, #96	; 0x60
    92f2:	movs	r2, #25
    92f4:	ldr.w	r8, [pc, #188]	; 93b4 <btrfs_match_dir_item_name@@Base+0xd6>
    92f8:	sub	sp, #20
    92fa:	mla	r3, r2, r3, r9
    92fe:	add	r8, pc
    9300:	add.w	r5, r3, #101	; 0x65
    9304:	ldr.w	r4, [r3, #118]	; 0x76
    9308:	adds	r4, #101	; 0x65
    930a:	add.w	r2, r9, r4
    930e:	ldrh.w	r3, [r2, #27]
    9312:	ldrh.w	r2, [r2, #25]
    9316:	cmp	r3, #255	; 0xff
    9318:	bls.n	9332 <btrfs_match_dir_item_name@@Base+0x54>
    931a:	ldr	r3, [pc, #156]	; (93b8 <btrfs_match_dir_item_name@@Base+0xda>)
    931c:	movs	r1, #1
    931e:	ldr.w	r0, [r8, r3]
    9322:	mov	r3, r2
    9324:	ldr	r2, [pc, #148]	; (93bc <btrfs_match_dir_item_name@@Base+0xde>)
    9326:	ldr	r0, [r0, #0]
    9328:	add	r2, pc
    932a:	blx	8a64 <__fprintf_chk@plt+0x4>
    932e:	movs	r4, #0
    9330:	b.n	93aa <btrfs_match_dir_item_name@@Base+0xcc>
    9332:	ldr.w	r0, [r0, #464]	; 0x1d0
    9336:	adds	r6, r2, r3
    9338:	ldr.w	r0, [r0, #384]	; 0x180
    933c:	subs	r0, #156	; 0x9c
    933e:	cmp	r6, r0
    9340:	bhi.n	9376 <btrfs_match_dir_item_name@@Base+0x98>
    9342:	ldr.w	sl, [r5, #21]
    9346:	movs	r6, #0
    9348:	cmp	r6, sl
    934a:	bcs.n	932e <btrfs_match_dir_item_name@@Base+0x50>
    934c:	add.w	r2, r9, r4
    9350:	ldrh.w	r3, [r2, #27]
    9354:	ldrh.w	r5, [r2, #25]
    9358:	sub.w	r2, sl, r6
    935c:	add	r5, r3
    935e:	adds	r5, #30
    9360:	cmp	r2, r5
    9362:	bcs.n	938c <btrfs_match_dir_item_name@@Base+0xae>
    9364:	ldr	r3, [pc, #80]	; (93b8 <btrfs_match_dir_item_name@@Base+0xda>)
    9366:	ldr	r0, [pc, #88]	; (93c0 <btrfs_match_dir_item_name@@Base+0xe2>)
    9368:	ldr.w	r3, [r8, r3]
    936c:	add	r0, pc
    936e:	ldr	r1, [r3, #0]
    9370:	blx	8b6c <fputs@plt+0x4>
    9374:	b.n	932e <btrfs_match_dir_item_name@@Base+0x50>
    9376:	ldr	r1, [pc, #64]	; (93b8 <btrfs_match_dir_item_name@@Base+0xda>)
    9378:	ldr.w	r0, [r8, r1]
    937c:	movs	r1, #1
    937e:	str	r2, [sp, #0]
    9380:	ldr	r2, [pc, #64]	; (93c4 <btrfs_match_dir_item_name@@Base+0xe6>)
    9382:	ldr	r0, [r0, #0]
    9384:	add	r2, pc
    9386:	blx	8a64 <__fprintf_chk@plt+0x4>
    938a:	b.n	932e <btrfs_match_dir_item_name@@Base+0x50>
    938c:	cmp	r3, r7
    938e:	beq.n	9396 <btrfs_match_dir_item_name@@Base+0xb8>
    9390:	add	r6, r5
    9392:	add	r4, r5
    9394:	b.n	9348 <btrfs_match_dir_item_name@@Base+0x6a>
    9396:	add.w	r2, r4, #30
    939a:	mov	r3, r7
    939c:	mov	r0, fp
    939e:	str	r1, [sp, #12]
    93a0:	bl	17a08 <memcmp_extent_buffer@@Base>
    93a4:	ldr	r1, [sp, #12]
    93a6:	cmp	r0, #0
    93a8:	bne.n	9390 <btrfs_match_dir_item_name@@Base+0xb2>
    93aa:	mov	r0, r4
    93ac:	add	sp, #20
    93ae:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    93b2:	nop
    93b4:	hlt	0x0002
    93b6:	movs	r5, r0
    93b8:	lsls	r0, r7, #8
    93ba:	movs	r0, r0
    93bc:	lsrs	r0, r3, #11
    93be:	movs	r3, r0
    93c0:	lsrs	r6, r3, #11
    93c2:	movs	r3, r0
    93c4:	lsrs	r3, r3, #10
    93c6:	movs	r3, r0
    93c8:	ldr.w	ip, [pc, #292]	; 94f0 <btrfs_match_dir_item_name@@Base+0x212>
    93cc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    93d0:	add	ip, pc
    93d2:	ldr	r4, [pc, #288]	; (94f4 <btrfs_match_dir_item_name@@Base+0x216>)
    93d4:	sub	sp, #24
    93d6:	mov.w	r9, #1
    93da:	mov	r8, r1
    93dc:	ldrd	r6, sl, [sp, #56]	; 0x38
    93e0:	mov	r5, r2
    93e2:	ldr.w	r4, [ip, r4]
    93e6:	ldr	r7, [pc, #272]	; (94f8 <btrfs_match_dir_item_name@@Base+0x21a>)
    93e8:	ldr	r4, [r4, #0]
    93ea:	str	r4, [sp, #20]
    93ec:	mov.w	r4, #0
    93f0:	add	r4, sp, #16
    93f2:	str.w	r9, [sp, #4]
    93f6:	add	r7, pc
    93f8:	str	r4, [sp, #0]
    93fa:	str	r6, [sp, #16]
    93fc:	bl	1b70c <btrfs_insert_empty_items@@Base>
    9400:	cmn.w	r0, #17
    9404:	mov	r4, r0
    9406:	bne.n	947e <btrfs_match_dir_item_name@@Base+0x1a0>
    9408:	ldr	r3, [sp, #64]	; 0x40
    940a:	mov	r2, sl
    940c:	mov	r1, r5
    940e:	mov	r0, r8
    9410:	bl	92de <btrfs_match_dir_item_name@@Base>
    9414:	cmp	r0, #0
    9416:	bne.n	9482 <btrfs_match_dir_item_name@@Base+0x1a4>
    9418:	mov	r2, r6
    941a:	mov	r1, r5
    941c:	mov	r0, r8
    941e:	bl	1a730 <btrfs_extend_item@@Base>
    9422:	subs	r4, r0, #0
    9424:	ble.n	947e <btrfs_match_dir_item_name@@Base+0x1a0>
    9426:	ldr	r3, [pc, #212]	; (94fc <btrfs_match_dir_item_name@@Base+0x21e>)
    9428:	mov	r1, r9
    942a:	ldr	r2, [pc, #212]	; (9500 <btrfs_match_dir_item_name@@Base+0x222>)
    942c:	ldr	r0, [r7, r3]
    942e:	add	r2, pc
    9430:	ldr	r3, [pc, #208]	; (9504 <btrfs_match_dir_item_name@@Base+0x226>)
    9432:	str.w	r9, [sp, #12]
    9436:	add	r3, pc
    9438:	str	r3, [sp, #8]
    943a:	ldr	r3, [pc, #204]	; (9508 <btrfs_match_dir_item_name@@Base+0x22a>)
    943c:	add	r3, pc
    943e:	str	r3, [sp, #4]
    9440:	movs	r3, #46	; 0x2e
    9442:	str	r3, [sp, #0]
    9444:	ldr	r3, [pc, #196]	; (950c <btrfs_match_dir_item_name@@Base+0x22e>)
    9446:	ldr	r0, [r0, #0]
    9448:	add	r3, pc
    944a:	blx	8a64 <__fprintf_chk@plt+0x4>
    944e:	bl	922c <_start@@Base+0x110>
    9452:	ldr	r3, [pc, #168]	; (94fc <btrfs_match_dir_item_name@@Base+0x21e>)
    9454:	movs	r1, #1
    9456:	ldr	r2, [pc, #184]	; (9510 <btrfs_match_dir_item_name@@Base+0x232>)
    9458:	ldr	r0, [r7, r3]
    945a:	add	r2, pc
    945c:	ldr	r3, [pc, #180]	; (9514 <btrfs_match_dir_item_name@@Base+0x236>)
    945e:	str	r1, [sp, #12]
    9460:	add	r3, pc
    9462:	str	r3, [sp, #8]
    9464:	ldr	r3, [pc, #176]	; (9518 <btrfs_match_dir_item_name@@Base+0x23a>)
    9466:	add	r3, pc
    9468:	str	r3, [sp, #4]
    946a:	movs	r3, #50	; 0x32
    946c:	str	r3, [sp, #0]
    946e:	ldr	r3, [pc, #172]	; (951c <btrfs_match_dir_item_name@@Base+0x23e>)
    9470:	ldr	r0, [r0, #0]
    9472:	add	r3, pc
    9474:	blx	8a64 <__fprintf_chk@plt+0x4>
    9478:	bl	922c <_start@@Base+0x110>
    947c:	b.n	9488 <btrfs_match_dir_item_name@@Base+0x1aa>
    947e:	cmp	r4, #0
    9480:	bge.n	9486 <btrfs_match_dir_item_name@@Base+0x1a8>
    9482:	mov	r0, r4
    9484:	b.n	94d4 <btrfs_match_dir_item_name@@Base+0x1f6>
    9486:	bne.n	9452 <btrfs_match_dir_item_name@@Base+0x174>
    9488:	ldr	r2, [r5, #0]
    948a:	movs	r1, #25
    948c:	ldr	r3, [r5, #32]
    948e:	mla	r3, r1, r3, r2
    9492:	ldr.w	r0, [r3, #214]	; 0xd6
    9496:	add.w	r4, r0, #101	; 0x65
    949a:	ldr.w	r0, [r3, #218]	; 0xda
    949e:	cmp	r6, r0
    94a0:	bls.n	94d0 <btrfs_match_dir_item_name@@Base+0x1f2>
    94a2:	ldr	r3, [pc, #88]	; (94fc <btrfs_match_dir_item_name@@Base+0x21e>)
    94a4:	movs	r1, #1
    94a6:	ldr	r2, [pc, #120]	; (9520 <btrfs_match_dir_item_name@@Base+0x242>)
    94a8:	ldr	r0, [r7, r3]
    94aa:	add	r2, pc
    94ac:	ldr	r3, [pc, #116]	; (9524 <btrfs_match_dir_item_name@@Base+0x246>)
    94ae:	str	r1, [sp, #12]
    94b0:	add	r3, pc
    94b2:	str	r3, [sp, #8]
    94b4:	ldr	r3, [pc, #112]	; (9528 <btrfs_match_dir_item_name@@Base+0x24a>)
    94b6:	add	r3, pc
    94b8:	str	r3, [sp, #4]
    94ba:	movs	r3, #54	; 0x36
    94bc:	str	r3, [sp, #0]
    94be:	ldr	r3, [pc, #108]	; (952c <btrfs_match_dir_item_name@@Base+0x24e>)
    94c0:	ldr	r0, [r0, #0]
    94c2:	add	r3, pc
    94c4:	blx	8a64 <__fprintf_chk@plt+0x4>
    94c8:	bl	922c <_start@@Base+0x110>
    94cc:	blx	8b84 <abort@plt>
    94d0:	subs	r0, r0, r6
    94d2:	add	r0, r4
    94d4:	ldr	r2, [pc, #88]	; (9530 <btrfs_match_dir_item_name@@Base+0x252>)
    94d6:	ldr	r3, [pc, #28]	; (94f4 <btrfs_match_dir_item_name@@Base+0x216>)
    94d8:	add	r2, pc
    94da:	ldr	r3, [r2, r3]
    94dc:	ldr	r2, [r3, #0]
    94de:	ldr	r3, [sp, #20]
    94e0:	eors	r2, r3
    94e2:	beq.n	94e8 <btrfs_match_dir_item_name@@Base+0x20a>
    94e4:	blx	8708 <__stack_chk_fail@plt>
    94e8:	add	sp, #24
    94ea:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    94ee:	nop
    94f0:	cbnz	r0, 9520 <btrfs_match_dir_item_name@@Base+0x242>
    94f2:	movs	r5, r0
    94f4:	lsls	r0, r5, #8
    94f6:	movs	r0, r0
    94f8:	cbnz	r2, 951e <btrfs_match_dir_item_name@@Base+0x240>
    94fa:	movs	r5, r0
    94fc:	lsls	r0, r7, #8
    94fe:	movs	r0, r0
    9500:	lsrs	r6, r7, #8
    9502:	movs	r3, r0
    9504:	subs	r1, #91	; 0x5b
    9506:	movs	r3, r0
    9508:	lsrs	r4, r1, #11
    950a:	movs	r3, r0
    950c:	lsrs	r1, r3, #8
    950e:	movs	r3, r0
    9510:	lsrs	r2, r2, #8
    9512:	movs	r3, r0
    9514:	subs	r1, #49	; 0x31
    9516:	movs	r3, r0
    9518:	lsrs	r2, r4, #10
    951a:	movs	r3, r0
    951c:	lsrs	r7, r5, #7
    951e:	movs	r3, r0
    9520:	lsrs	r0, r7, #7
    9522:	movs	r3, r0
    9524:	lsrs	r7, r3, #8
    9526:	movs	r3, r0
    9528:	lsrs	r2, r2, #9
    952a:	movs	r3, r0
    952c:	lsrs	r7, r3, #6
    952e:	movs	r3, r0
    9530:			; <UNDEFINED> instruction: 0xb8a8
    9532:	movs	r5, r0

00009534 <btrfs_insert_xattr_item@@Base>:
    9534:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9538:	mov	r5, r3
    953a:	vpush	{d8}
    953e:	mov	r7, r2
    9540:	ldr	r2, [pc, #320]	; (9684 <btrfs_insert_xattr_item@@Base+0x150>)
    9542:	mov	r9, r0
    9544:	mov	sl, r1
    9546:	mvn.w	r0, #1
    954a:	add	r2, pc
    954c:	mov	r1, r7
    954e:	sub	sp, #76	; 0x4c
    9550:	movs	r4, #0
    9552:	ldr.w	fp, [pc, #308]	; 9688 <btrfs_insert_xattr_item@@Base+0x154>
    9556:	ldr	r3, [sp, #120]	; 0x78
    9558:	ldrh.w	r8, [sp, #124]	; 0x7c
    955c:	add	fp, pc
    955e:	vmov	s16, r3
    9562:	ldr	r3, [pc, #296]	; (968c <btrfs_insert_xattr_item@@Base+0x158>)
    9564:	ldr	r3, [r2, r3]
    9566:	mov	r2, r5
    9568:	ldr	r3, [r3, #0]
    956a:	str	r3, [sp, #68]	; 0x44
    956c:	mov.w	r3, #0
    9570:	ldr	r3, [sp, #128]	; 0x80
    9572:	str	r3, [sp, #28]
    9574:	ldr	r3, [sp, #132]	; 0x84
    9576:	str	r3, [sp, #32]
    9578:	movs	r3, #24
    957a:	strb.w	r3, [sp, #36]	; 0x24
    957e:	bl	17afa <crc32c_le@@Base>
    9582:	str.w	r4, [sp, #41]	; 0x29
    9586:	str.w	r0, [sp, #37]	; 0x25
    958a:	bl	18550 <btrfs_alloc_path@@Base>
    958e:	mov	r6, r0
    9590:	cmp	r0, #0
    9592:	beq.n	9674 <btrfs_insert_xattr_item@@Base+0x140>
    9594:	add.w	r3, r8, #30
    9598:	mov	r2, r0
    959a:	add	r3, r5
    959c:	mov	r0, r9
    959e:	str	r3, [sp, #0]
    95a0:	mov	r1, sl
    95a2:	add	r3, sp, #28
    95a4:	strd	r7, r5, [sp, #4]
    95a8:	bl	93c8 <btrfs_match_dir_item_name@@Base+0xea>
    95ac:	cmn.w	r0, #4096	; 0x1000
    95b0:	mov	r9, r0
    95b2:	bls.n	95e6 <btrfs_insert_xattr_item@@Base+0xb2>
    95b4:	ldr	r3, [pc, #216]	; (9690 <btrfs_insert_xattr_item@@Base+0x15c>)
    95b6:	movs	r1, #1
    95b8:	ldr	r2, [pc, #216]	; (9694 <btrfs_insert_xattr_item@@Base+0x160>)
    95ba:	ldr.w	r0, [fp, r3]
    95be:	add	r2, pc
    95c0:	ldr	r3, [pc, #212]	; (9698 <btrfs_insert_xattr_item@@Base+0x164>)
    95c2:	str	r1, [sp, #12]
    95c4:	add	r3, pc
    95c6:	str	r3, [sp, #8]
    95c8:	ldr	r3, [pc, #208]	; (969c <btrfs_insert_xattr_item@@Base+0x168>)
    95ca:	add	r3, pc
    95cc:	adds	r3, #21
    95ce:	str	r3, [sp, #4]
    95d0:	movs	r3, #89	; 0x59
    95d2:	str	r3, [sp, #0]
    95d4:	ldr	r3, [pc, #200]	; (96a0 <btrfs_insert_xattr_item@@Base+0x16c>)
    95d6:	ldr	r0, [r0, #0]
    95d8:	add	r3, pc
    95da:	blx	8a64 <__fprintf_chk@plt+0x4>
    95de:	bl	922c <_start@@Base+0x110>
    95e2:	blx	8b84 <abort@plt>
    95e6:	ldr	r0, [r6, #0]
    95e8:	add	r1, sp, #48	; 0x30
    95ea:	movs	r2, #0
    95ec:	movs	r3, #0
    95ee:	strd	r2, r3, [sp, #48]	; 0x30
    95f2:	movs	r3, #17
    95f4:	mov	r2, r9
    95f6:	str	r0, [sp, #20]
    95f8:	strb.w	r4, [sp, #57]	; 0x39
    95fc:	strb.w	r4, [sp, #58]	; 0x3a
    9600:	strb.w	r4, [sp, #59]	; 0x3b
    9604:	strb.w	r4, [sp, #60]	; 0x3c
    9608:	strb.w	r4, [sp, #61]	; 0x3d
    960c:	strb.w	r4, [sp, #62]	; 0x3e
    9610:	strb.w	r4, [sp, #63]	; 0x3f
    9614:	strb.w	r4, [sp, #64]	; 0x40
    9618:	strb.w	r4, [sp, #56]	; 0x38
    961c:	bl	17a30 <write_extent_buffer@@Base>
    9620:	ldr	r0, [sp, #20]
    9622:	movs	r2, #8
    9624:	mov	r1, r7
    9626:	add.w	r3, r0, #96	; 0x60
    962a:	add	r3, r9
    962c:	strb	r2, [r3, #29]
    962e:	add.w	r2, r9, #30
    9632:	add.w	sl, r2, r5
    9636:	strh.w	r5, [r3, #27]
    963a:	strh.w	r8, [r3, #25]
    963e:	mov	r3, r5
    9640:	bl	17a30 <write_extent_buffer@@Base>
    9644:	vmov	r1, s16
    9648:	mov	r3, r8
    964a:	mov	r2, sl
    964c:	ldr	r0, [sp, #20]
    964e:	bl	17a30 <write_extent_buffer@@Base>
    9652:	ldr	r0, [r6, #0]
    9654:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
    9658:	mov	r0, r6
    965a:	bl	1857e <btrfs_free_path@@Base>
    965e:	mov	r0, r4
    9660:	ldr	r2, [pc, #64]	; (96a4 <btrfs_insert_xattr_item@@Base+0x170>)
    9662:	ldr	r3, [pc, #40]	; (968c <btrfs_insert_xattr_item@@Base+0x158>)
    9664:	add	r2, pc
    9666:	ldr	r3, [r2, r3]
    9668:	ldr	r2, [r3, #0]
    966a:	ldr	r3, [sp, #68]	; 0x44
    966c:	eors	r2, r3
    966e:	beq.n	967a <btrfs_insert_xattr_item@@Base+0x146>
    9670:	blx	8708 <__stack_chk_fail@plt>
    9674:	mvn.w	r0, #11
    9678:	b.n	9660 <btrfs_insert_xattr_item@@Base+0x12c>
    967a:	add	sp, #76	; 0x4c
    967c:	vpop	{d8}
    9680:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9684:			; <UNDEFINED> instruction: 0xb836
    9686:	movs	r5, r0
    9688:			; <UNDEFINED> instruction: 0xb824
    968a:	movs	r5, r0
    968c:	lsls	r0, r5, #8
    968e:	movs	r0, r0
    9690:	lsls	r0, r7, #8
    9692:	movs	r0, r0
    9694:	lsrs	r4, r4, #3
    9696:	movs	r3, r0
    9698:	lsrs	r3, r6, #4
    969a:	movs	r3, r0
    969c:	lsrs	r6, r7, #4
    969e:	movs	r3, r0
    96a0:	lsrs	r1, r1, #2
    96a2:	movs	r3, r0
    96a4:			; <UNDEFINED> instruction: 0xb71c
    96a6:	movs	r5, r0

000096a8 <btrfs_insert_dir_item@@Base>:
    96a8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    96ac:	sub	sp, #92	; 0x5c
    96ae:	mov	r5, r3
    96b0:	mov	r8, r2
    96b2:	ldr	r3, [sp, #144]	; 0x90
    96b4:	mov	sl, r0
    96b6:	ldr	r2, [pc, #404]	; (984c <btrfs_insert_dir_item@@Base+0x1a4>)
    96b8:	mov	r9, r1
    96ba:	mvn.w	r0, #1
    96be:	mov	r1, r8
    96c0:	str	r3, [sp, #24]
    96c2:	add	r2, pc
    96c4:	ldr	r3, [sp, #148]	; 0x94
    96c6:	movs	r4, #0
    96c8:	ldr	r6, [sp, #136]	; 0x88
    96ca:	ldrb.w	fp, [sp, #140]	; 0x8c
    96ce:	str	r3, [sp, #28]
    96d0:	ldr	r3, [pc, #380]	; (9850 <btrfs_insert_dir_item@@Base+0x1a8>)
    96d2:	ldr	r3, [r2, r3]
    96d4:	mov	r2, r5
    96d6:	ldr	r3, [r3, #0]
    96d8:	str	r3, [sp, #84]	; 0x54
    96da:	mov.w	r3, #0
    96de:	ldr	r3, [sp, #128]	; 0x80
    96e0:	str	r3, [sp, #44]	; 0x2c
    96e2:	ldr	r3, [sp, #132]	; 0x84
    96e4:	str	r3, [sp, #48]	; 0x30
    96e6:	movs	r3, #84	; 0x54
    96e8:	strb.w	r3, [sp, #52]	; 0x34
    96ec:	bl	17afa <crc32c_le@@Base>
    96f0:	str.w	r4, [sp, #57]	; 0x39
    96f4:	str.w	r0, [sp, #53]	; 0x35
    96f8:	bl	18550 <btrfs_alloc_path@@Base>
    96fc:	mov	r7, r0
    96fe:	cmp	r0, #0
    9700:	beq.w	983e <btrfs_insert_dir_item@@Base+0x196>
    9704:	add.w	r3, r5, #30
    9708:	mov	r2, r0
    970a:	str	r3, [sp, #20]
    970c:	mov	r1, r9
    970e:	str	r3, [sp, #0]
    9710:	mov	r0, sl
    9712:	add	r3, sp, #44	; 0x2c
    9714:	strd	r8, r5, [sp, #4]
    9718:	bl	93c8 <btrfs_match_dir_item_name@@Base+0xea>
    971c:	cmn.w	r0, #4096	; 0x1000
    9720:	mov	r2, r0
    9722:	bls.n	974c <btrfs_insert_dir_item@@Base+0xa4>
    9724:	cmn.w	r0, #17
    9728:	beq.n	979e <btrfs_insert_dir_item@@Base+0xf6>
    972a:	mov	r5, r0
    972c:	mov	r0, r7
    972e:	cmp	r5, #0
    9730:	it	ne
    9732:	movne	r4, r5
    9734:	bl	1857e <btrfs_free_path@@Base>
    9738:	ldr	r2, [pc, #280]	; (9854 <btrfs_insert_dir_item@@Base+0x1ac>)
    973a:	ldr	r3, [pc, #276]	; (9850 <btrfs_insert_dir_item@@Base+0x1a8>)
    973c:	add	r2, pc
    973e:	ldr	r3, [r2, r3]
    9740:	ldr	r2, [r3, #0]
    9742:	ldr	r3, [sp, #84]	; 0x54
    9744:	eors	r2, r3
    9746:	beq.n	9844 <btrfs_insert_dir_item@@Base+0x19c>
    9748:	blx	8708 <__stack_chk_fail@plt>
    974c:	ldr.w	r3, [r6, #13]
    9750:	ldr.w	r1, [r6, #9]
    9754:	ldr	r0, [r7, #0]
    9756:	str.w	r3, [sp, #77]	; 0x4d
    975a:	ldrb	r3, [r6, #8]
    975c:	str.w	r1, [sp, #73]	; 0x49
    9760:	ldr	r1, [r6, #0]
    9762:	strb.w	r3, [sp, #72]	; 0x48
    9766:	ldr	r3, [r6, #4]
    9768:	str	r2, [sp, #36]	; 0x24
    976a:	str	r0, [sp, #32]
    976c:	strd	r1, r3, [sp, #64]	; 0x40
    9770:	add	r1, sp, #64	; 0x40
    9772:	movs	r3, #17
    9774:	bl	17a30 <write_extent_buffer@@Base>
    9778:	ldr	r0, [sp, #32]
    977a:	ldr	r2, [sp, #36]	; 0x24
    977c:	mov	r1, r8
    977e:	add.w	r3, r0, #96	; 0x60
    9782:	add	r3, r2
    9784:	adds	r2, #30
    9786:	strb.w	fp, [r3, #29]
    978a:	strb	r4, [r3, #25]
    978c:	strb	r4, [r3, #26]
    978e:	strh.w	r5, [r3, #27]
    9792:	mov	r3, r5
    9794:	bl	17a30 <write_extent_buffer@@Base>
    9798:	ldr	r0, [sp, #32]
    979a:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
    979e:	ldr.w	r3, [r9, #464]	; 0x1d0
    97a2:	ldr	r3, [r3, #28]
    97a4:	cmp	r3, r9
    97a6:	beq.n	9838 <btrfs_insert_dir_item@@Base+0x190>
    97a8:	mov	r0, r7
    97aa:	bl	18558 <btrfs_release_path@@Base>
    97ae:	movs	r3, #96	; 0x60
    97b0:	strb.w	r3, [sp, #52]	; 0x34
    97b4:	mov	r1, r9
    97b6:	ldr	r3, [sp, #24]
    97b8:	mov	r2, r7
    97ba:	mov	r0, sl
    97bc:	strd	r8, r5, [sp, #4]
    97c0:	str.w	r3, [sp, #53]	; 0x35
    97c4:	ldr	r3, [sp, #28]
    97c6:	str.w	r3, [sp, #57]	; 0x39
    97ca:	ldr	r3, [sp, #20]
    97cc:	str	r3, [sp, #0]
    97ce:	add	r3, sp, #44	; 0x2c
    97d0:	bl	93c8 <btrfs_match_dir_item_name@@Base+0xea>
    97d4:	cmn.w	r0, #4096	; 0x1000
    97d8:	mov	r9, r0
    97da:	bls.n	97e2 <btrfs_insert_dir_item@@Base+0x13a>
    97dc:	mov	r4, r0
    97de:	movs	r5, #0
    97e0:	b.n	972c <btrfs_insert_dir_item@@Base+0x84>
    97e2:	ldr.w	r3, [r6, #13]
    97e6:	add	r1, sp, #64	; 0x40
    97e8:	ldr	r0, [r7, #0]
    97ea:	movs	r4, #0
    97ec:	ldr.w	r2, [r6, #9]
    97f0:	str.w	r3, [sp, #77]	; 0x4d
    97f4:	ldrb	r3, [r6, #8]
    97f6:	str.w	r2, [sp, #73]	; 0x49
    97fa:	ldr	r2, [r6, #0]
    97fc:	strb.w	r3, [sp, #72]	; 0x48
    9800:	ldr	r3, [r6, #4]
    9802:	str	r0, [sp, #20]
    9804:	strd	r2, r3, [sp, #64]	; 0x40
    9808:	mov	r2, r9
    980a:	movs	r3, #17
    980c:	bl	17a30 <write_extent_buffer@@Base>
    9810:	ldr	r0, [sp, #20]
    9812:	add.w	r2, r9, #30
    9816:	mov	r1, r8
    9818:	add.w	r3, r0, #96	; 0x60
    981c:	add	r3, r9
    981e:	strb.w	fp, [r3, #29]
    9822:	strb	r4, [r3, #25]
    9824:	strb	r4, [r3, #26]
    9826:	strh.w	r5, [r3, #27]
    982a:	mov	r3, r5
    982c:	bl	17a30 <write_extent_buffer@@Base>
    9830:	ldr	r0, [sp, #20]
    9832:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
    9836:	b.n	97de <btrfs_insert_dir_item@@Base+0x136>
    9838:	movs	r4, #0
    983a:	mov	r5, r4
    983c:	b.n	972c <btrfs_insert_dir_item@@Base+0x84>
    983e:	mvn.w	r4, #11
    9842:	b.n	9738 <btrfs_insert_dir_item@@Base+0x90>
    9844:	mov	r0, r4
    9846:	add	sp, #92	; 0x5c
    9848:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    984c:			; <UNDEFINED> instruction: 0xb6be
    984e:	movs	r5, r0
    9850:	lsls	r0, r5, #8
    9852:	movs	r0, r0
    9854:			; <UNDEFINED> instruction: 0xb644
    9856:	movs	r5, r0

00009858 <btrfs_lookup_dir_item@@Base>:
    9858:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    985c:	mov	r4, r2
    985e:	sub	sp, #60	; 0x3c
    9860:	ldr	r2, [pc, #208]	; (9934 <btrfs_lookup_dir_item@@Base+0xdc>)
    9862:	ldr	r3, [pc, #212]	; (9938 <btrfs_lookup_dir_item@@Base+0xe0>)
    9864:	mov	fp, r0
    9866:	ldrd	r8, r9, [sp, #104]	; 0x68
    986a:	add	r2, pc
    986c:	ldrd	r6, r7, [sp, #96]	; 0x60
    9870:	mov	r5, r1
    9872:	ldr	r3, [r2, r3]
    9874:	mvn.w	r0, #1
    9878:	mov	r1, r8
    987a:	mov	r2, r9
    987c:	ldr	r3, [r3, #0]
    987e:	str	r3, [sp, #52]	; 0x34
    9880:	mov.w	r3, #0
    9884:	ldr.w	sl, [sp, #112]	; 0x70
    9888:	movs	r3, #84	; 0x54
    988a:	strd	r6, r7, [sp, #12]
    988e:	strb.w	r3, [sp, #20]
    9892:	bl	17afa <crc32c_le@@Base>
    9896:	movs	r3, #0
    9898:	str.w	r3, [sp, #25]
    989c:	subs.w	r3, sl, r3
    98a0:	add	r2, sp, #12
    98a2:	mov	r1, r5
    98a4:	it	ne
    98a6:	movne	r3, #1
    98a8:	str	r3, [sp, #4]
    98aa:	mov.w	r3, sl, asr #31
    98ae:	str	r3, [sp, #0]
    98b0:	mov	r3, r4
    98b2:	str.w	r0, [sp, #21]
    98b6:	mov	r0, fp
    98b8:	bl	1a93c <btrfs_search_slot@@Base>
    98bc:	cmp	r0, #0
    98be:	blt.n	98c8 <btrfs_lookup_dir_item@@Base+0x70>
    98c0:	beq.n	98e0 <btrfs_lookup_dir_item@@Base+0x88>
    98c2:	ldr	r3, [r4, #32]
    98c4:	cbnz	r3, 98dc <btrfs_lookup_dir_item@@Base+0x84>
    98c6:	movs	r0, #0
    98c8:	ldr	r2, [pc, #112]	; (993c <btrfs_lookup_dir_item@@Base+0xe4>)
    98ca:	ldr	r3, [pc, #108]	; (9938 <btrfs_lookup_dir_item@@Base+0xe0>)
    98cc:	add	r2, pc
    98ce:	ldr	r3, [r2, r3]
    98d0:	ldr	r2, [r3, #0]
    98d2:	ldr	r3, [sp, #52]	; 0x34
    98d4:	eors	r2, r3
    98d6:	beq.n	992e <btrfs_lookup_dir_item@@Base+0xd6>
    98d8:	blx	8708 <__stack_chk_fail@plt>
    98dc:	subs	r3, #1
    98de:	str	r3, [r4, #32]
    98e0:	ldr	r3, [r4, #32]
    98e2:	movs	r2, #25
    98e4:	ldr	r0, [r4, #0]
    98e6:	add	r1, sp, #32
    98e8:	muls	r2, r3
    98ea:	movs	r3, #17
    98ec:	adds	r2, #101	; 0x65
    98ee:	bl	17a1a <read_extent_buffer@@Base>
    98f2:	ldrd	r2, r3, [sp, #32]
    98f6:	ldr.w	r0, [sp, #41]	; 0x29
    98fa:	cmp	r7, r3
    98fc:	ldr.w	r1, [sp, #45]	; 0x2d
    9900:	it	eq
    9902:	cmpeq	r6, r2
    9904:	ldrb.w	ip, [sp, #40]	; 0x28
    9908:	bne.n	98c6 <btrfs_lookup_dir_item@@Base+0x6e>
    990a:	cmp.w	ip, #84	; 0x54
    990e:	bne.n	98c6 <btrfs_lookup_dir_item@@Base+0x6e>
    9910:	ldr.w	r3, [sp, #25]
    9914:	ldr.w	r2, [sp, #21]
    9918:	cmp	r3, r1
    991a:	it	eq
    991c:	cmpeq	r2, r0
    991e:	bne.n	98c6 <btrfs_lookup_dir_item@@Base+0x6e>
    9920:	mov	r3, r9
    9922:	mov	r2, r8
    9924:	mov	r1, r4
    9926:	mov	r0, r5
    9928:	bl	92de <btrfs_match_dir_item_name@@Base>
    992c:	b.n	98c8 <btrfs_lookup_dir_item@@Base+0x70>
    992e:	add	sp, #60	; 0x3c
    9930:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9934:	push	{r1, r2, r4, lr}
    9936:	movs	r5, r0
    9938:	lsls	r0, r5, #8
    993a:	movs	r0, r0
    993c:	push	{r2, r4, r5, r7}
    993e:	movs	r5, r0

00009940 <btrfs_lookup_dir_index@@Base>:
    9940:	ldr.w	ip, [pc, #128]	; 99c4 <btrfs_lookup_dir_index@@Base+0x84>
    9944:	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
    9948:	mov	r4, r2
    994a:	ldr	r2, [pc, #124]	; (99c8 <btrfs_lookup_dir_index@@Base+0x88>)
    994c:	add	ip, pc
    994e:	sub	sp, #32
    9950:	mov	r5, r1
    9952:	ldr.w	r2, [ip, r2]
    9956:	ldr	r3, [sp, #80]	; 0x50
    9958:	ldr	r2, [r2, #0]
    995a:	str	r2, [sp, #28]
    995c:	mov.w	r2, #0
    9960:	movs	r2, #96	; 0x60
    9962:	strb.w	r2, [sp, #16]
    9966:	ldr	r2, [sp, #72]	; 0x48
    9968:	ldrd	r8, r9, [sp, #56]	; 0x38
    996c:	ldr	r6, [sp, #64]	; 0x40
    996e:	str.w	r2, [sp, #17]
    9972:	ldr	r2, [sp, #76]	; 0x4c
    9974:	strd	r8, r9, [sp, #8]
    9978:	str.w	r2, [sp, #21]
    997c:	subs	r2, r3, #0
    997e:	mov.w	r3, r3, asr #31
    9982:	str	r3, [sp, #0]
    9984:	it	ne
    9986:	movne	r2, #1
    9988:	mov	r3, r4
    998a:	str	r2, [sp, #4]
    998c:	add	r2, sp, #8
    998e:	bl	1a93c <btrfs_search_slot@@Base>
    9992:	cmp	r0, #0
    9994:	blt.n	99a4 <btrfs_lookup_dir_index@@Base+0x64>
    9996:	bne.n	99b8 <btrfs_lookup_dir_index@@Base+0x78>
    9998:	ldr	r3, [sp, #68]	; 0x44
    999a:	mov	r2, r6
    999c:	mov	r1, r4
    999e:	mov	r0, r5
    99a0:	bl	92de <btrfs_match_dir_item_name@@Base>
    99a4:	ldr	r2, [pc, #36]	; (99cc <btrfs_lookup_dir_index@@Base+0x8c>)
    99a6:	ldr	r3, [pc, #32]	; (99c8 <btrfs_lookup_dir_index@@Base+0x88>)
    99a8:	add	r2, pc
    99aa:	ldr	r3, [r2, r3]
    99ac:	ldr	r2, [r3, #0]
    99ae:	ldr	r3, [sp, #28]
    99b0:	eors	r2, r3
    99b2:	beq.n	99be <btrfs_lookup_dir_index@@Base+0x7e>
    99b4:	blx	8708 <__stack_chk_fail@plt>
    99b8:	mvn.w	r0, #1
    99bc:	b.n	99a4 <btrfs_lookup_dir_index@@Base+0x64>
    99be:	add	sp, #32
    99c0:	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    99c4:	push	{r2, r4, r5}
    99c6:	movs	r5, r0
    99c8:	lsls	r0, r5, #8
    99ca:	movs	r0, r0
    99cc:	cbz	r0, 9a46 <btrfs_find_free_objectid@@Base+0x76>
    99ce:	movs	r5, r0

000099d0 <btrfs_find_free_objectid@@Base>:
    99d0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    99d4:	mov	sl, r0
    99d6:	vpush	{d8}
    99da:	mov	r5, r1
    99dc:	ldr	r3, [pc, #444]	; (9b9c <btrfs_find_free_objectid@@Base+0x1cc>)
    99de:	ldr	r2, [pc, #448]	; (9ba0 <btrfs_find_free_objectid@@Base+0x1d0>)
    99e0:	add	r3, pc
    99e2:	sub	sp, #140	; 0x8c
    99e4:	add	r2, pc
    99e6:	str	r3, [sp, #20]
    99e8:	ldr	r3, [pc, #440]	; (9ba4 <btrfs_find_free_objectid@@Base+0x1d4>)
    99ea:	ldr.w	r8, [sp, #184]	; 0xb8
    99ee:	ldr	r3, [r2, r3]
    99f0:	ldr	r3, [r3, #0]
    99f2:	str	r3, [sp, #132]	; 0x84
    99f4:	mov.w	r3, #0
    99f8:	bl	18550 <btrfs_alloc_path@@Base>
    99fc:	mov	r4, r0
    99fe:	cmp	r0, #0
    9a00:	beq.w	9b86 <btrfs_find_free_objectid@@Base+0x1b6>
    9a04:	ldrd	r6, r7, [r5, #504]	; 0x1f8
    9a08:	mov.w	r9, #0
    9a0c:	strb.w	r9, [sp, #37]	; 0x25
    9a10:	cmp	r7, #0
    9a12:	strb.w	r9, [sp, #38]	; 0x26
    9a16:	it	eq
    9a18:	cmpeq.w	r6, #256	; 0x100
    9a1c:	strb.w	r9, [sp, #39]	; 0x27
    9a20:	strb.w	r9, [sp, #40]	; 0x28
    9a24:	itt	cc
    9a26:	movcc.w	r6, #256	; 0x100
    9a2a:	movcc	r7, #0
    9a2c:	strb.w	r9, [sp, #41]	; 0x29
    9a30:	strd	r6, r7, [sp, #28]
    9a34:	strb.w	r9, [sp, #42]	; 0x2a
    9a38:	strb.w	r9, [sp, #43]	; 0x2b
    9a3c:	strb.w	r9, [sp, #44]	; 0x2c
    9a40:	strb.w	r9, [sp, #36]	; 0x24
    9a44:	bl	18548 <btrfs_init_path@@Base>
    9a48:	mov	r3, r4
    9a4a:	add	r2, sp, #28
    9a4c:	mov	r1, r5
    9a4e:	mov	r0, sl
    9a50:	strd	r9, r9, [sp]
    9a54:	bl	1a93c <btrfs_search_slot@@Base>
    9a58:	subs	r3, r0, #0
    9a5a:	blt.w	9b68 <btrfs_find_free_objectid@@Base+0x198>
    9a5e:	ldr	r3, [r4, #32]
    9a60:	cmp	r3, r9
    9a62:	mov.w	r9, #0
    9a66:	itt	gt
    9a68:	addgt.w	r3, r3, #4294967295	; 0xffffffff
    9a6c:	strgt	r3, [r4, #32]
    9a6e:	add	r3, sp, #48	; 0x30
    9a70:	mov	fp, r9
    9a72:	mov	sl, r9
    9a74:	vmov	s16, r3
    9a78:	ldr	r0, [r4, #0]
    9a7a:	ldr	r2, [r4, #32]
    9a7c:	ldr.w	r3, [r0, #192]	; 0xc0
    9a80:	cmp	r2, r3
    9a82:	bcc.n	9b14 <btrfs_find_free_objectid@@Base+0x144>
    9a84:	movs	r3, #0
    9a86:	mov	r1, r4
    9a88:	strb.w	r3, [r4, #65]	; 0x41
    9a8c:	ldr.w	r0, [r5, #464]	; 0x1d0
    9a90:	bl	1bd70 <btrfs_next_sibling_tree_block@@Base>
    9a94:	subs	r3, r0, #0
    9a96:	beq.n	9a78 <btrfs_find_free_objectid@@Base+0xa8>
    9a98:	blt.n	9b68 <btrfs_find_free_objectid@@Base+0x198>
    9a9a:	cmp.w	r9, #0
    9a9e:	bne.n	9afe <btrfs_find_free_objectid@@Base+0x12e>
    9aa0:	strd	r6, r7, [r8]
    9aa4:	ldrd	r2, r3, [r8]
    9aa8:	mov	r0, r4
    9aaa:	strd	r2, r3, [r5, #504]	; 0x1f8
    9aae:	bl	1857e <btrfs_free_path@@Base>
    9ab2:	ldrd	r2, r3, [r8]
    9ab6:	cmp	r3, r7
    9ab8:	it	eq
    9aba:	cmpeq	r2, r6
    9abc:	bcs.n	9b8c <btrfs_find_free_objectid@@Base+0x1bc>
    9abe:	ldr	r2, [sp, #20]
    9ac0:	add	r4, sp, #68	; 0x44
    9ac2:	ldr	r3, [pc, #228]	; (9ba8 <btrfs_find_free_objectid@@Base+0x1d8>)
    9ac4:	movs	r1, #1
    9ac6:	ldr	r0, [r2, r3]
    9ac8:	ldr	r3, [pc, #224]	; (9bac <btrfs_find_free_objectid@@Base+0x1dc>)
    9aca:	ldr	r2, [pc, #228]	; (9bb0 <btrfs_find_free_objectid@@Base+0x1e0>)
    9acc:	add	r3, pc
    9ace:	str	r3, [sp, #8]
    9ad0:	ldr	r3, [pc, #224]	; (9bb4 <btrfs_find_free_objectid@@Base+0x1e4>)
    9ad2:	add	r2, pc
    9ad4:	str	r1, [sp, #12]
    9ad6:	add	r3, pc
    9ad8:	str	r3, [sp, #4]
    9ada:	movs	r3, #98	; 0x62
    9adc:	str	r3, [sp, #0]
    9ade:	ldr	r3, [pc, #216]	; (9bb8 <btrfs_find_free_objectid@@Base+0x1e8>)
    9ae0:	ldr	r0, [r0, #0]
    9ae2:	add	r3, pc
    9ae4:	blx	8a64 <__fprintf_chk@plt+0x4>
    9ae8:	movs	r1, #16
    9aea:	mov	r0, r4
    9aec:	blx	88bc <backtrace@plt>
    9af0:	movs	r2, #2
    9af2:	mov	r1, r0
    9af4:	mov	r0, r4
    9af6:	blx	8bcc <backtrace_symbols_fd@plt>
    9afa:	blx	8b84 <abort@plt>
    9afe:	cmp	sl, r7
    9b00:	mov	r2, fp
    9b02:	it	eq
    9b04:	cmpeq	fp, r6
    9b06:	mov	r3, sl
    9b08:	itt	cc
    9b0a:	movcc	r2, r6
    9b0c:	movcc	r3, r7
    9b0e:	strd	r2, r3, [r8]
    9b12:	b.n	9aa4 <btrfs_find_free_objectid@@Base+0xd4>
    9b14:	movs	r3, #25
    9b16:	vmov	r1, s16
    9b1a:	muls	r2, r3
    9b1c:	movs	r3, #17
    9b1e:	adds	r2, #101	; 0x65
    9b20:	bl	17a1a <read_extent_buffer@@Base>
    9b24:	ldrd	r2, r3, [sp, #48]	; 0x30
    9b28:	cmp	r3, r7
    9b2a:	it	eq
    9b2c:	cmpeq	r2, r6
    9b2e:	bcc.n	9b54 <btrfs_find_free_objectid@@Base+0x184>
    9b30:	cmp.w	r9, #0
    9b34:	beq.n	9b54 <btrfs_find_free_objectid@@Base+0x184>
    9b36:	cmp	sl, r7
    9b38:	mov	r0, fp
    9b3a:	it	eq
    9b3c:	cmpeq	fp, r6
    9b3e:	mov	r1, sl
    9b40:	itt	cc
    9b42:	movcc	r0, r6
    9b44:	movcc	r1, r7
    9b46:	cmp	r1, r3
    9b48:	it	eq
    9b4a:	cmpeq	r0, r2
    9b4c:	bcs.n	9b54 <btrfs_find_free_objectid@@Base+0x184>
    9b4e:	strd	r0, r1, [r8]
    9b52:	b.n	9aa4 <btrfs_find_free_objectid@@Base+0xd4>
    9b54:	adds.w	fp, r2, #1
    9b58:	mov.w	r9, #1
    9b5c:	adc.w	sl, r3, #0
    9b60:	ldr	r3, [r4, #32]
    9b62:	adds	r3, #1
    9b64:	str	r3, [r4, #32]
    9b66:	b.n	9a78 <btrfs_find_free_objectid@@Base+0xa8>
    9b68:	mov	r0, r4
    9b6a:	str	r3, [sp, #20]
    9b6c:	bl	1857e <btrfs_free_path@@Base>
    9b70:	ldr	r3, [sp, #20]
    9b72:	ldr	r1, [pc, #72]	; (9bbc <btrfs_find_free_objectid@@Base+0x1ec>)
    9b74:	ldr	r2, [pc, #44]	; (9ba4 <btrfs_find_free_objectid@@Base+0x1d4>)
    9b76:	add	r1, pc
    9b78:	ldr	r2, [r1, r2]
    9b7a:	ldr	r1, [r2, #0]
    9b7c:	ldr	r2, [sp, #132]	; 0x84
    9b7e:	eors	r1, r2
    9b80:	beq.n	9b90 <btrfs_find_free_objectid@@Base+0x1c0>
    9b82:	blx	8708 <__stack_chk_fail@plt>
    9b86:	mvn.w	r3, #11
    9b8a:	b.n	9b72 <btrfs_find_free_objectid@@Base+0x1a2>
    9b8c:	movs	r3, #0
    9b8e:	b.n	9b72 <btrfs_find_free_objectid@@Base+0x1a2>
    9b90:	mov	r0, r3
    9b92:	add	sp, #140	; 0x8c
    9b94:	vpop	{d8}
    9b98:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9b9c:	cbz	r0, 9c08 <btrfs_find_free_objectid@@Base+0x238>
    9b9e:	movs	r5, r0
    9ba0:	cbz	r4, 9c0a <btrfs_find_free_objectid@@Base+0x23a>
    9ba2:	movs	r5, r0
    9ba4:	lsls	r0, r5, #8
    9ba6:	movs	r0, r0
    9ba8:	lsls	r0, r7, #8
    9baa:	movs	r0, r0
    9bac:	lsls	r5, r6, #17
    9bae:	movs	r3, r0
    9bb0:	lsls	r0, r2, #15
    9bb2:	movs	r3, r0
    9bb4:	lsls	r4, r0, #18
    9bb6:	movs	r3, r0
    9bb8:	lsls	r3, r2, #17
    9bba:	movs	r3, r0
    9bbc:	sxth	r2, r1
    9bbe:	movs	r5, r0
    9bc0:	push	{r4, r5, lr}
    9bc2:	ldrd	r4, r5, [r0, #40]	; 0x28
    9bc6:	ldrd	r0, r1, [r1, #40]	; 0x28
    9bca:	cmp	r1, r5
    9bcc:	it	eq
    9bce:	cmpeq	r0, r4
    9bd0:	bcc.n	9be6 <btrfs_find_free_objectid@@Base+0x216>
    9bd2:	cmp	r5, r1
    9bd4:	it	eq
    9bd6:	cmpeq	r4, r0
    9bd8:	ite	cc
    9bda:	movcc.w	r0, #4294967295	; 0xffffffff
    9bde:	movcs	r0, #0
    9be0:	cbz	r2, 9be4 <btrfs_find_free_objectid@@Base+0x214>
    9be2:	negs	r0, r0
    9be4:	pop	{r4, r5, pc}
    9be6:	movs	r0, #1
    9be8:	b.n	9be0 <btrfs_find_free_objectid@@Base+0x210>
    9bea:	push	{r4, r5, lr}
    9bec:	ldrd	r4, r5, [r0, #56]	; 0x38
    9bf0:	ldrd	r0, r1, [r1, #56]	; 0x38
    9bf4:	cmp	r1, r5
    9bf6:	it	eq
    9bf8:	cmpeq	r0, r4
    9bfa:	bcc.n	9c10 <btrfs_find_free_objectid@@Base+0x240>
    9bfc:	cmp	r5, r1
    9bfe:	it	eq
    9c00:	cmpeq	r4, r0
    9c02:	ite	cc
    9c04:	movcc.w	r0, #4294967295	; 0xffffffff
    9c08:	movcs	r0, #0
    9c0a:	cbz	r2, 9c0e <btrfs_find_free_objectid@@Base+0x23e>
    9c0c:	negs	r0, r0
    9c0e:	pop	{r4, r5, pc}
    9c10:	movs	r0, #1
    9c12:	b.n	9c0a <btrfs_find_free_objectid@@Base+0x23a>
    9c14:	push	{r4, r5, lr}
    9c16:	ldrd	r4, r5, [r0, #72]	; 0x48
    9c1a:	ldrd	r0, r1, [r1, #72]	; 0x48
    9c1e:	cmp	r1, r5
    9c20:	it	eq
    9c22:	cmpeq	r0, r4
    9c24:	bcc.n	9c3a <btrfs_find_free_objectid@@Base+0x26a>
    9c26:	cmp	r5, r1
    9c28:	it	eq
    9c2a:	cmpeq	r4, r0
    9c2c:	ite	cc
    9c2e:	movcc.w	r0, #4294967295	; 0xffffffff
    9c32:	movcs	r0, #0
    9c34:	cbz	r2, 9c38 <btrfs_find_free_objectid@@Base+0x268>
    9c36:	negs	r0, r0
    9c38:	pop	{r4, r5, pc}
    9c3a:	movs	r0, #1
    9c3c:	b.n	9c34 <btrfs_find_free_objectid@@Base+0x264>
    9c3e:	push	{r4, r5, lr}
    9c40:	ldrd	r4, r5, [r0, #96]	; 0x60
    9c44:	ldrd	r0, r1, [r1, #96]	; 0x60
    9c48:	cmp	r1, r5
    9c4a:	it	eq
    9c4c:	cmpeq	r0, r4
    9c4e:	bcc.n	9c64 <btrfs_find_free_objectid@@Base+0x294>
    9c50:	cmp	r5, r1
    9c52:	it	eq
    9c54:	cmpeq	r4, r0
    9c56:	ite	cc
    9c58:	movcc.w	r0, #4294967295	; 0xffffffff
    9c5c:	movcs	r0, #0
    9c5e:	cbz	r2, 9c62 <btrfs_find_free_objectid@@Base+0x292>
    9c60:	negs	r0, r0
    9c62:	pop	{r4, r5, pc}
    9c64:	movs	r0, #1
    9c66:	b.n	9c5e <btrfs_find_free_objectid@@Base+0x28e>
    9c68:	push	{r4, r5, lr}
    9c6a:	ldrd	r4, r5, [r0, #104]	; 0x68
    9c6e:	ldrd	r0, r1, [r1, #104]	; 0x68
    9c72:	cmp	r1, r5
    9c74:	it	eq
    9c76:	cmpeq	r0, r4
    9c78:	bcc.n	9c8e <btrfs_find_free_objectid@@Base+0x2be>
    9c7a:	cmp	r5, r1
    9c7c:	it	eq
    9c7e:	cmpeq	r4, r0
    9c80:	ite	cc
    9c82:	movcc.w	r0, #4294967295	; 0xffffffff
    9c86:	movcs	r0, #0
    9c88:	cbz	r2, 9c8c <btrfs_find_free_objectid@@Base+0x2bc>
    9c8a:	negs	r0, r0
    9c8c:	pop	{r4, r5, pc}
    9c8e:	movs	r0, #1
    9c90:	b.n	9c88 <btrfs_find_free_objectid@@Base+0x2b8>
    9c92:	push	{r4, r5, lr}
    9c94:	mov	r4, r2
    9c96:	mov	r5, r3
    9c98:	orrs.w	r3, r4, r5
    9c9c:	beq.n	9cb2 <btrfs_find_free_objectid@@Base+0x2e2>
    9c9e:	ldrd	r4, r5, [r2, #40]	; 0x28
    9ca2:	ldrd	r2, r3, [r0, #40]	; 0x28
    9ca6:	cmp	r5, r3
    9ca8:	itte	eq
    9caa:	cmpeq	r4, r2
    9cac:	moveq	r0, #1
    9cae:	movne	r0, #0
    9cb0:	pop	{r4, r5, pc}
    9cb2:	movs	r0, #0
    9cb4:	b.n	9cb0 <btrfs_find_free_objectid@@Base+0x2e0>
    9cb6:	push	{r3, r4, r5, lr}
    9cb8:	mov	r2, r0
    9cba:	mov	r3, r1
    9cbc:	mov	r5, r0
    9cbe:	movs	r1, #0
    9cc0:	ldr	r4, [r2, #0]
    9cc2:	cbnz	r4, 9cda <btrfs_find_free_objectid@@Base+0x30a>
    9cc4:	add.w	r0, r3, #24
    9cc8:	strd	r1, r4, [r3, #24]
    9ccc:	str	r4, [r3, #32]
    9cce:	mov	r1, r5
    9cd0:	str	r0, [r2, #0]
    9cd2:	bl	1392a <rb_insert_color@@Base>
    9cd6:	mov	r0, r4
    9cd8:	pop	{r3, r4, r5, pc}
    9cda:	sub.w	r1, r4, #24
    9cde:	movs	r2, #0
    9ce0:	mov	r0, r3
    9ce2:	bl	9bc0 <btrfs_find_free_objectid@@Base+0x1f0>
    9ce6:	cmp	r0, #0
    9ce8:	bge.n	9cf2 <btrfs_find_free_objectid@@Base+0x322>
    9cea:	add.w	r2, r4, #8
    9cee:	mov	r1, r4
    9cf0:	b.n	9cc0 <btrfs_find_free_objectid@@Base+0x2f0>
    9cf2:	beq.n	9cf8 <btrfs_find_free_objectid@@Base+0x328>
    9cf4:	adds	r2, r4, #4
    9cf6:	b.n	9cee <btrfs_find_free_objectid@@Base+0x31e>
    9cf8:	mvn.w	r0, #16
    9cfc:	b.n	9cd8 <btrfs_find_free_objectid@@Base+0x308>
    9cfe:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, sl, fp, lr}
    9d02:	mov	r5, r0
    9d04:	mov	r0, r2
    9d06:	ldr	r2, [pc, #144]	; (9d98 <btrfs_find_free_objectid@@Base+0x3c8>)
    9d08:	mov	r1, r3
    9d0a:	ldr	r3, [pc, #144]	; (9d9c <btrfs_find_free_objectid@@Base+0x3cc>)
    9d0c:	add	r2, pc
    9d0e:	ldr	r3, [r2, r3]
    9d10:	ldr	r3, [r3, #0]
    9d12:	str	r3, [sp, #4]
    9d14:	mov.w	r3, #0
    9d18:	orrs.w	r3, r0, r1
    9d1c:	bne.n	9d34 <btrfs_find_free_objectid@@Base+0x364>
    9d1e:	movs	r0, #0
    9d20:	ldr	r2, [pc, #124]	; (9da0 <btrfs_find_free_objectid@@Base+0x3d0>)
    9d22:	ldr	r3, [pc, #120]	; (9d9c <btrfs_find_free_objectid@@Base+0x3cc>)
    9d24:	add	r2, pc
    9d26:	ldr	r3, [r2, r3]
    9d28:	ldr	r2, [r3, #0]
    9d2a:	ldr	r3, [sp, #4]
    9d2c:	eors	r2, r3
    9d2e:	beq.n	9d92 <btrfs_find_free_objectid@@Base+0x3c2>
    9d30:	blx	8708 <__stack_chk_fail@plt>
    9d34:	ldrd	r2, r3, [r5, #40]	; 0x28
    9d38:	ldrd	r6, r7, [r0, #40]	; 0x28
    9d3c:	cmp	r3, r7
    9d3e:	it	eq
    9d40:	cmpeq	r2, r6
    9d42:	bne.n	9d48 <btrfs_find_free_objectid@@Base+0x378>
    9d44:	movs	r0, #1
    9d46:	b.n	9d20 <btrfs_find_free_objectid@@Base+0x350>
    9d48:	mov	r8, sp
    9d4a:	mov	r1, r0
    9d4c:	mov	r0, r8
    9d4e:	movs	r3, #0
    9d50:	str	r3, [sp, #0]
    9d52:	bl	9cb6 <btrfs_find_free_objectid@@Base+0x2e6>
    9d56:	mov	r0, r8
    9d58:	bl	13c46 <rb_first@@Base>
    9d5c:	mov	r4, r0
    9d5e:	cmp	r0, #0
    9d60:	beq.n	9d1e <btrfs_find_free_objectid@@Base+0x34e>
    9d62:	ldr	r6, [r4, #104]	; 0x68
    9d64:	add.w	sl, r4, #104	; 0x68
    9d68:	cmp	sl, r6
    9d6a:	bne.n	9d76 <btrfs_find_free_objectid@@Base+0x3a6>
    9d6c:	mov	r1, r8
    9d6e:	mov	r0, r4
    9d70:	bl	139d0 <rb_erase@@Base>
    9d74:	b.n	9d56 <btrfs_find_free_objectid@@Base+0x386>
    9d76:	ldr	r1, [r6, #16]
    9d78:	ldrd	r2, r3, [r5, #40]	; 0x28
    9d7c:	ldrd	fp, ip, [r1, #40]	; 0x28
    9d80:	cmp	ip, r3
    9d82:	it	eq
    9d84:	cmpeq	fp, r2
    9d86:	beq.n	9d44 <btrfs_find_free_objectid@@Base+0x374>
    9d88:	mov	r0, r8
    9d8a:	bl	9cb6 <btrfs_find_free_objectid@@Base+0x2e6>
    9d8e:	ldr	r6, [r6, #0]
    9d90:	b.n	9d68 <btrfs_find_free_objectid@@Base+0x398>
    9d92:	add	sp, #8
    9d94:	ldmia.w	sp!, {r4, r5, r6, r7, r8, sl, fp, pc}
    9d98:	add	sp, #464	; 0x1d0
    9d9a:	movs	r5, r0
    9d9c:	lsls	r0, r5, #8
    9d9e:	movs	r0, r0
    9da0:	add	sp, #368	; 0x170
    9da2:	movs	r5, r0
    9da4:	ldr	r3, [pc, #28]	; (9dc4 <btrfs_find_free_objectid@@Base+0x3f4>)
    9da6:	movs	r2, #20
    9da8:	push	{r4, lr}
    9daa:	add	r3, pc
    9dac:	mla	r0, r2, r0, r3
    9db0:	ldr	r4, [r0, #16]
    9db2:	subs	r4, r4, r1
    9db4:	subs	r4, #1
    9db6:	bcs.n	9dba <btrfs_find_free_objectid@@Base+0x3ea>
    9db8:	pop	{r4, pc}
    9dba:	movs	r0, #32
    9dbc:	blx	89cc <putchar@plt+0x4>
    9dc0:	b.n	9db4 <btrfs_find_free_objectid@@Base+0x3e4>
    9dc2:	nop
    9dc4:	sxtb	r2, r3
    9dc6:	movs	r5, r0
    9dc8:	push	{r4, lr}
    9dca:	mov	r4, r3
    9dcc:	bl	30c00 <pretty_size_mode@@Base>
    9dd0:	ldr	r1, [pc, #16]	; (9de4 <btrfs_find_free_objectid@@Base+0x414>)
    9dd2:	mov	r2, r4
    9dd4:	ldmia.w	sp!, {r4, lr}
    9dd8:	add	r1, pc
    9dda:	mov	r3, r0
    9ddc:	movs	r0, #1
    9dde:	b.w	8a2c <__printf_chk@plt>
    9de2:	nop
    9de4:	lsls	r3, r3, #6
    9de6:	movs	r3, r0
    9de8:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9dec:	mov	r9, r0
    9dee:	ldr	r4, [r0, #0]
    9df0:	mov	r7, r1
    9df2:	mov	r8, r2
    9df4:	cbz	r4, 9e20 <btrfs_find_free_objectid@@Base+0x450>
    9df6:	ldr	r2, [r4, #16]
    9df8:	ldr	r5, [r4, #8]
    9dfa:	add	r5, r2
    9dfc:	ldr	r2, [r4, #24]
    9dfe:	add	r5, r2
    9e00:	adds	r0, r5, r7
    9e02:	movs	r1, #1
    9e04:	adds	r0, #9
    9e06:	lsls	r0, r0, #3
    9e08:	blx	8588 <calloc@plt+0x4>
    9e0c:	mov	r6, r0
    9e0e:	cbnz	r0, 9e24 <btrfs_find_free_objectid@@Base+0x454>
    9e10:	ldr	r0, [pc, #104]	; (9e7c <btrfs_find_free_objectid@@Base+0x4ac>)
    9e12:	add	r0, pc
    9e14:	bl	17b7c <__btrfs_error@@Base>
    9e18:	mvn.w	r0, #11
    9e1c:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9e20:	mov	r5, r4
    9e22:	b.n	9e00 <btrfs_find_free_objectid@@Base+0x430>
    9e24:	cbz	r4, 9e6c <btrfs_find_free_objectid@@Base+0x49c>
    9e26:	ldrd	r2, r3, [r4, #8]
    9e2a:	add.w	fp, r4, #72	; 0x48
    9e2e:	mov.w	sl, r8, lsl #3
    9e32:	mov	r1, fp
    9e34:	strd	r2, r3, [r0, #8]
    9e38:	ldrd	r2, r3, [r4, #16]
    9e3c:	strd	r2, r3, [r0, #16]
    9e40:	ldrd	r2, r3, [r4, #24]
    9e44:	strd	r2, r3, [r0, #24]
    9e48:	add.w	r3, r0, #72	; 0x48
    9e4c:	mov	r2, sl
    9e4e:	mov	r0, r3
    9e50:	blx	866c <memcpy@plt+0x4>
    9e54:	sub.w	r2, r5, r8
    9e58:	add.w	r1, fp, sl
    9e5c:	lsls	r2, r2, #3
    9e5e:	mov	r3, r0
    9e60:	add.w	r0, r8, r7
    9e64:	add.w	r0, r3, r0, lsl #3
    9e68:	blx	866c <memcpy@plt+0x4>
    9e6c:	mov	r0, r4
    9e6e:	blx	8620 <free@plt+0x4>
    9e72:	movs	r0, #0
    9e74:	str.w	r6, [r9]
    9e78:	b.n	9e1c <btrfs_find_free_objectid@@Base+0x44c>
    9e7a:	nop
    9e7c:	lsls	r5, r4, #5
    9e7e:	movs	r3, r0
    9e80:	push	{r4, lr}
    9e82:	sub	sp, #152	; 0x98
    9e84:	ldr	r4, [pc, #72]	; (9ed0 <btrfs_find_free_objectid@@Base+0x500>)
    9e86:	ldr	r1, [pc, #76]	; (9ed4 <btrfs_find_free_objectid@@Base+0x504>)
    9e88:	add	r4, pc
    9e8a:	ldr	r1, [r4, r1]
    9e8c:	mov	r4, sp
    9e8e:	ldr	r1, [r1, #0]
    9e90:	str	r1, [sp, #148]	; 0x94
    9e92:	mov.w	r1, #0
    9e96:	strd	r2, r3, [sp, #40]	; 0x28
    9e9a:	mov	r3, r0
    9e9c:	cbnz	r3, 9eb2 <btrfs_find_free_objectid@@Base+0x4e2>
    9e9e:	ldr	r1, [pc, #56]	; (9ed8 <btrfs_find_free_objectid@@Base+0x508>)
    9ea0:	ldr	r2, [pc, #48]	; (9ed4 <btrfs_find_free_objectid@@Base+0x504>)
    9ea2:	add	r1, pc
    9ea4:	ldr	r2, [r1, r2]
    9ea6:	ldr	r1, [r2, #0]
    9ea8:	ldr	r2, [sp, #148]	; 0x94
    9eaa:	eors	r1, r2
    9eac:	beq.n	9eca <btrfs_find_free_objectid@@Base+0x4fa>
    9eae:	blx	8708 <__stack_chk_fail@plt>
    9eb2:	movs	r2, #0
    9eb4:	mov	r1, r3
    9eb6:	mov	r0, r4
    9eb8:	bl	9bc0 <btrfs_find_free_objectid@@Base+0x1f0>
    9ebc:	cmp	r0, #0
    9ebe:	bge.n	9ec4 <btrfs_find_free_objectid@@Base+0x4f4>
    9ec0:	ldr	r3, [r3, #8]
    9ec2:	b.n	9e9c <btrfs_find_free_objectid@@Base+0x4cc>
    9ec4:	beq.n	9e9e <btrfs_find_free_objectid@@Base+0x4ce>
    9ec6:	ldr	r3, [r3, #4]
    9ec8:	b.n	9e9c <btrfs_find_free_objectid@@Base+0x4cc>
    9eca:	mov	r0, r3
    9ecc:	add	sp, #152	; 0x98
    9ece:	pop	{r4, pc}
    9ed0:	add	r6, sp, #992	; 0x3e0
    9ed2:	movs	r5, r0
    9ed4:	lsls	r0, r5, #8
    9ed6:	movs	r0, r0
    9ed8:	add	r6, sp, #888	; 0x378
    9eda:	movs	r5, r0
    9edc:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    9ee0:	movs	r1, #144	; 0x90
    9ee2:	mov	r8, r0
    9ee4:	movs	r0, #1
    9ee6:	mov	r7, r2
    9ee8:	mov	r6, r3
    9eea:	blx	8588 <calloc@plt+0x4>
    9eee:	mov	r4, r0
    9ef0:	cbnz	r0, 9f04 <btrfs_find_free_objectid@@Base+0x534>
    9ef2:	ldr	r0, [pc, #124]	; (9f70 <btrfs_find_free_objectid@@Base+0x5a0>)
    9ef4:	mvn.w	r4, #11
    9ef8:	add	r0, pc
    9efa:	bl	17b7c <__btrfs_error@@Base>
    9efe:	mov	r0, r4
    9f00:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    9f04:	add.w	r3, r0, #128	; 0x80
    9f08:	movs	r2, #0
    9f0a:	strd	r3, r3, [r0, #128]	; 0x80
    9f0e:	add.w	r3, r0, #136	; 0x88
    9f12:	strd	r3, r3, [r0, #136]	; 0x88
    9f16:	mov	r3, r8
    9f18:	strd	r7, r6, [r0, #40]	; 0x28
    9f1c:	ldr	r5, [r3, #0]
    9f1e:	cbnz	r5, 9f32 <btrfs_find_free_objectid@@Base+0x562>
    9f20:	strd	r2, r5, [r4]
    9f24:	mov	r1, r8
    9f26:	str	r5, [r4, #8]
    9f28:	mov	r0, r4
    9f2a:	str	r4, [r3, #0]
    9f2c:	bl	1392a <rb_insert_color@@Base>
    9f30:	b.n	9efe <btrfs_find_free_objectid@@Base+0x52e>
    9f32:	movs	r2, #0
    9f34:	mov	r1, r5
    9f36:	mov	r0, r4
    9f38:	bl	9bc0 <btrfs_find_free_objectid@@Base+0x1f0>
    9f3c:	cmp	r0, #0
    9f3e:	bge.n	9f48 <btrfs_find_free_objectid@@Base+0x578>
    9f40:	add.w	r3, r5, #8
    9f44:	mov	r2, r5
    9f46:	b.n	9f1c <btrfs_find_free_objectid@@Base+0x54c>
    9f48:	beq.n	9f4e <btrfs_find_free_objectid@@Base+0x57e>
    9f4a:	adds	r3, r5, #4
    9f4c:	b.n	9f44 <btrfs_find_free_objectid@@Base+0x574>
    9f4e:	blx	897c <__errno_location@plt>
    9f52:	movs	r3, #17
    9f54:	mov	r2, r7
    9f56:	str	r3, [r0, #0]
    9f58:	mov	r3, r6
    9f5a:	ldr	r0, [pc, #24]	; (9f74 <btrfs_find_free_objectid@@Base+0x5a4>)
    9f5c:	add	r0, pc
    9f5e:	bl	17b7c <__btrfs_error@@Base>
    9f62:	mov	r0, r4
    9f64:	blx	8620 <free@plt+0x4>
    9f68:	mvn.w	r4, #16
    9f6c:	b.n	9efe <btrfs_find_free_objectid@@Base+0x52e>
    9f6e:	nop
    9f70:	lsls	r1, r2, #2
    9f72:	movs	r3, r0
    9f74:	lsls	r6, r0, #1
    9f76:	movs	r3, r0
    9f78:	ldr.w	ip, [pc, #104]	; 9fe4 <btrfs_find_free_objectid@@Base+0x614>
    9f7c:	push	{r4, r5, lr}
    9f7e:	add	ip, pc
    9f80:	ldr	r5, [pc, #100]	; (9fe8 <btrfs_find_free_objectid@@Base+0x618>)
    9f82:	sub	sp, #92	; 0x5c
    9f84:	ldr	r4, [pc, #100]	; (9fec <btrfs_find_free_objectid@@Base+0x61c>)
    9f86:	ldr.w	r5, [ip, r5]
    9f8a:	add	r4, pc
    9f8c:	ldr	r5, [r5, #0]
    9f8e:	str	r5, [sp, #84]	; 0x54
    9f90:	mov.w	r5, #0
    9f94:	cbnz	r3, 9fca <btrfs_find_free_objectid@@Base+0x5fa>
    9f96:	ldr	r5, [pc, #88]	; (9ff0 <btrfs_find_free_objectid@@Base+0x620>)
    9f98:	ldr	r4, [r4, r5]
    9f9a:	strd	r2, r1, [sp]
    9f9e:	movs	r1, #1
    9fa0:	strd	r0, r3, [sp, #8]
    9fa4:	ldr	r2, [pc, #76]	; (9ff4 <btrfs_find_free_objectid@@Base+0x624>)
    9fa6:	ldr	r3, [pc, #80]	; (9ff8 <btrfs_find_free_objectid@@Base+0x628>)
    9fa8:	ldr	r0, [r4, #0]
    9faa:	add	r4, sp, #20
    9fac:	add	r3, pc
    9fae:	add	r2, pc
    9fb0:	blx	8a64 <__fprintf_chk@plt+0x4>
    9fb4:	movs	r1, #16
    9fb6:	mov	r0, r4
    9fb8:	blx	88bc <backtrace@plt>
    9fbc:	movs	r2, #2
    9fbe:	mov	r1, r0
    9fc0:	mov	r0, r4
    9fc2:	blx	8bcc <backtrace_symbols_fd@plt>
    9fc6:	blx	8b84 <abort@plt>
    9fca:	ldr	r2, [pc, #48]	; (9ffc <btrfs_find_free_objectid@@Base+0x62c>)
    9fcc:	ldr	r3, [pc, #24]	; (9fe8 <btrfs_find_free_objectid@@Base+0x618>)
    9fce:	add	r2, pc
    9fd0:	ldr	r3, [r2, r3]
    9fd2:	ldr	r2, [r3, #0]
    9fd4:	ldr	r3, [sp, #84]	; 0x54
    9fd6:	eors	r2, r3
    9fd8:	beq.n	9fde <btrfs_find_free_objectid@@Base+0x60e>
    9fda:	blx	8708 <__stack_chk_fail@plt>
    9fde:	add	sp, #92	; 0x5c
    9fe0:	pop	{r4, r5, pc}
    9fe2:	nop
    9fe4:	add	r6, sp, #8
    9fe6:	movs	r5, r0
    9fe8:	lsls	r0, r5, #8
    9fea:	movs	r0, r0
    9fec:	add	r5, sp, #984	; 0x3d8
    9fee:	movs	r5, r0
    9ff0:	lsls	r0, r7, #8
    9ff2:	movs	r0, r0
    9ff4:	movs	r1, r4
    9ff6:	movs	r3, r0
    9ff8:	movs	r2, r3
    9ffa:	movs	r3, r0
    9ffc:	add	r5, sp, #712	; 0x2c8
    9ffe:	movs	r5, r0
    a000:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    a004:	mov	r5, r0
    a006:	bl	13c46 <rb_first@@Base>
    a00a:	ldr	r6, [pc, #112]	; (a07c <btrfs_find_free_objectid@@Base+0x6ac>)
    a00c:	ldr	r7, [pc, #112]	; (a080 <btrfs_find_free_objectid@@Base+0x6b0>)
    a00e:	mov	r4, r0
    a010:	cbnz	r4, a016 <btrfs_find_free_objectid@@Base+0x646>
    a012:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    a016:	mov	r1, r5
    a018:	mov	r0, r4
    a01a:	bl	139d0 <rb_erase@@Base>
    a01e:	add.w	r8, r4, #128	; 0x80
    a022:	ldr.w	r0, [r4, #128]	; 0x80
    a026:	cmp	r0, r8
    a028:	bne.n	a046 <btrfs_find_free_objectid@@Base+0x676>
    a02a:	add.w	r8, r4, #136	; 0x88
    a02e:	ldr.w	r0, [r4, #136]	; 0x88
    a032:	cmp	r0, r8
    a034:	bne.n	a05c <btrfs_find_free_objectid@@Base+0x68c>
    a036:	mov	r0, r4
    a038:	blx	8620 <free@plt+0x4>
    a03c:	mov	r0, r5
    a03e:	bl	13c46 <rb_first@@Base>
    a042:	mov	r4, r0
    a044:	b.n	a010 <btrfs_find_free_objectid@@Base+0x640>
    a046:	ldrd	r2, r3, [r0]
    a04a:	str	r3, [r2, #4]
    a04c:	str	r2, [r3, #0]
    a04e:	ldrd	r2, r3, [r0, #8]
    a052:	str	r3, [r2, #4]
    a054:	str	r2, [r3, #0]
    a056:	blx	8620 <free@plt+0x4>
    a05a:	b.n	a022 <btrfs_find_free_objectid@@Base+0x652>
    a05c:	ldrd	r1, r2, [r0, #-8]
    a060:	str	r2, [r1, #4]
    a062:	str	r1, [r2, #0]
    a064:	ldrd	r1, r2, [r0]
    a068:	strd	r6, r7, [r0, #-8]
    a06c:	str	r2, [r1, #4]
    a06e:	str	r1, [r2, #0]
    a070:	strd	r6, r7, [r0]
    a074:	subs	r0, #8
    a076:	blx	8620 <free@plt+0x4>
    a07a:	b.n	a02e <btrfs_find_free_objectid@@Base+0x65e>
    a07c:	lsls	r0, r0, #4
    a07e:	movs	r0, r2
    a080:	lsls	r0, r0, #8
    a082:	movs	r0, r4
    a084:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a088:	mov	r7, r2
    a08a:	vpush	{d8-d9}
    a08e:	mov	r4, r1
    a090:	vmov	s16, r0
    a094:	ldrd	r2, r3, [r1, #8]
    a098:	sub	sp, #92	; 0x5c
    a09a:	strd	r2, r3, [sp, #56]	; 0x38
    a09e:	ldrd	r2, r3, [r1, #16]
    a0a2:	strd	r2, r3, [sp, #48]	; 0x30
    a0a6:	ldrd	r2, r3, [r1, #24]
    a0aa:	strd	r2, r3, [sp, #64]	; 0x40
    a0ae:	ldrd	r2, r3, [r1, #32]
    a0b2:	strd	r2, r3, [sp, #80]	; 0x50
    a0b6:	ldr	r3, [r1, #56]	; 0x38
    a0b8:	str	r3, [sp, #76]	; 0x4c
    a0ba:	ldr	r3, [r1, #60]	; 0x3c
    a0bc:	str	r3, [sp, #72]	; 0x48
    a0be:	movs	r3, #0
    a0c0:	str	r3, [r7, #0]
    a0c2:	ldr	r3, [pc, #716]	; (a390 <btrfs_find_free_objectid@@Base+0x9c0>)
    a0c4:	add	r3, pc
    a0c6:	vmov	s19, r3
    a0ca:	vmov	r0, s16
    a0ce:	mov	r2, r4
    a0d0:	ldr	r1, [pc, #696]	; (a38c <btrfs_find_free_objectid@@Base+0x9bc>)
    a0d2:	blx	87b4 <ioctl@plt>
    a0d6:	subs.w	fp, r0, #0
    a0da:	bge.n	a0f8 <btrfs_find_free_objectid@@Base+0x728>
    a0dc:	blx	897c <__errno_location@plt>
    a0e0:	ldr	r0, [r0, #0]
    a0e2:	cmp	r0, #2
    a0e4:	beq.w	a384 <btrfs_find_free_objectid@@Base+0x9b4>
    a0e8:	rsb	fp, r0, #0
    a0ec:	mov	r0, fp
    a0ee:	add	sp, #92	; 0x5c
    a0f0:	vpop	{d8-d9}
    a0f4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a0f8:	ldr	r3, [r4, #64]	; 0x40
    a0fa:	cmp	r3, #0
    a0fc:	beq.n	a0ec <btrfs_find_free_objectid@@Base+0x71c>
    a0fe:	movs	r3, #0
    a100:	str	r3, [sp, #16]
    a102:	mov	r5, r3
    a104:	ldr	r3, [pc, #652]	; (a394 <btrfs_find_free_objectid@@Base+0x9c4>)
    a106:	add	r3, pc
    a108:	vmov	s17, r3
    a10c:	ldr	r3, [pc, #648]	; (a398 <btrfs_find_free_objectid@@Base+0x9c8>)
    a10e:	add	r3, pc
    a110:	vmov	s18, r3
    a114:	ldr	r3, [r4, #64]	; 0x40
    a116:	ldr	r2, [sp, #16]
    a118:	cmp	r2, r3
    a11a:	bcc.n	a13c <btrfs_find_free_objectid@@Base+0x76c>
    a11c:	ldrd	r0, r1, [r4, #24]
    a120:	mov.w	r3, #4096	; 0x1000
    a124:	str	r3, [r4, #64]	; 0x40
    a126:	adds	r3, r1, #1
    a128:	it	eq
    a12a:	cmpeq.w	r0, #4294967295	; 0xffffffff
    a12e:	beq.n	a0ec <btrfs_find_free_objectid@@Base+0x71c>
    a130:	adds	r2, r0, #1
    a132:	adc.w	r3, r1, #0
    a136:	strd	r2, r3, [r4, #24]
    a13a:	b.n	a0ca <btrfs_find_free_objectid@@Base+0x6fa>
    a13c:	add.w	r6, r4, #104	; 0x68
    a140:	ldrd	r0, r1, [sp, #56]	; 0x38
    a144:	add.w	r8, r6, r5
    a148:	adds	r5, #32
    a14a:	ldr.w	r3, [r8, #8]
    a14e:	ldr.w	r9, [r8, #16]
    a152:	ldr.w	sl, [r8, #20]
    a156:	str	r3, [sp, #8]
    a158:	ldr.w	r3, [r8, #12]
    a15c:	str	r3, [sp, #12]
    a15e:	ldr.w	r3, [r8, #24]
    a162:	uxtb	r3, r3
    a164:	str	r3, [sp, #20]
    a166:	ldrd	r2, r3, [sp, #8]
    a16a:	cmp	r3, r1
    a16c:	it	eq
    a16e:	cmpeq	r2, r0
    a170:	bcc.w	a27c <btrfs_find_free_objectid@@Base+0x8ac>
    a174:	ldrd	r2, r3, [sp, #48]	; 0x30
    a178:	ldrd	r0, r1, [sp, #8]
    a17c:	cmp	r3, r1
    a17e:	it	eq
    a180:	cmpeq	r2, r0
    a182:	bcc.n	a27c <btrfs_find_free_objectid@@Base+0x8ac>
    a184:	ldr	r3, [sp, #20]
    a186:	ldr	r2, [sp, #76]	; 0x4c
    a188:	cmp	r3, r2
    a18a:	bcc.n	a27c <btrfs_find_free_objectid@@Base+0x8ac>
    a18c:	ldr	r3, [sp, #72]	; 0x48
    a18e:	ldr	r2, [sp, #20]
    a190:	cmp	r3, r2
    a192:	bcc.n	a27c <btrfs_find_free_objectid@@Base+0x8ac>
    a194:	ldrd	r2, r3, [sp, #64]	; 0x40
    a198:	cmp	sl, r3
    a19a:	it	eq
    a19c:	cmpeq	r9, r2
    a19e:	bcc.n	a27c <btrfs_find_free_objectid@@Base+0x8ac>
    a1a0:	ldrd	r2, r3, [sp, #80]	; 0x50
    a1a4:	cmp	r3, sl
    a1a6:	it	eq
    a1a8:	cmpeq	r2, r9
    a1aa:	bcc.n	a27c <btrfs_find_free_objectid@@Base+0x8ac>
    a1ac:	ldr	r3, [sp, #20]
    a1ae:	subs	r3, #240	; 0xf0
    a1b0:	cmp	r3, #6
    a1b2:	bhi.n	a0ec <btrfs_find_free_objectid@@Base+0x71c>
    a1b4:	add	r2, pc, #8	; (adr r2, a1c0 <btrfs_find_free_objectid@@Base+0x7f0>)
    a1b6:	ldr.w	r3, [r2, r3, lsl #2]
    a1ba:	add	r2, r3
    a1bc:	bx	r2
    a1be:	nop
    a1c0:	movs	r5, r3
    a1c2:	movs	r0, r0
    a1c4:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
    a1c8:	lsls	r7, r5, #1
    a1ca:	movs	r0, r0
    a1cc:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
    a1d0:	lsls	r3, r3, #3
    a1d2:	movs	r0, r0
    a1d4:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
    a1d8:	lsls	r1, r5, #4
    a1da:	movs	r0, r0
    a1dc:	add	r6, r5
    a1de:	movs	r3, #0
    a1e0:	ldr	r2, [r6, #16]
    a1e2:	and.w	r1, r2, #1
    a1e6:	strd	r1, r3, [sp, #24]
    a1ea:	ldrd	r0, r1, [sp, #24]
    a1ee:	orrs	r1, r0
    a1f0:	bne.n	a202 <btrfs_find_free_objectid@@Base+0x832>
    a1f2:	vmov	r0, s18
    a1f6:	bl	17b00 <__btrfs_warning@@Base>
    a1fa:	cmp.w	fp, #0
    a1fe:	beq.n	a27c <btrfs_find_free_objectid@@Base+0x8ac>
    a200:	b.n	a0ec <btrfs_find_free_objectid@@Base+0x71c>
    a202:	and.w	r1, r2, #2
    a206:	strd	r1, r3, [sp, #32]
    a20a:	ldrd	r0, r1, [sp, #32]
    a20e:	orrs	r1, r0
    a210:	beq.n	a218 <btrfs_find_free_objectid@@Base+0x848>
    a212:	vmov	r0, s17
    a216:	b.n	a1f6 <btrfs_find_free_objectid@@Base+0x826>
    a218:	and.w	r2, r2, #4
    a21c:	strd	r2, r3, [sp, #40]	; 0x28
    a220:	ldrd	r2, r3, [sp, #40]	; 0x28
    a224:	orrs	r3, r2
    a226:	beq.n	a1fa <btrfs_find_free_objectid@@Base+0x82a>
    a228:	vmov	r0, s19
    a22c:	b.n	a1f6 <btrfs_find_free_objectid@@Base+0x826>
    a22e:	ldr	r0, [r7, #0]
    a230:	mov	r2, r9
    a232:	mov	r3, sl
    a234:	bl	9e80 <btrfs_find_free_objectid@@Base+0x4b0>
    a238:	cbnz	r0, a248 <btrfs_find_free_objectid@@Base+0x878>
    a23a:	mov	r2, r9
    a23c:	mov	r3, sl
    a23e:	mov	r0, r7
    a240:	bl	9edc <btrfs_find_free_objectid@@Base+0x50c>
    a244:	cmp	r0, #0
    a246:	beq.n	a2e4 <btrfs_find_free_objectid@@Base+0x914>
    a248:	cmn.w	r0, #4096	; 0x1000
    a24c:	bhi.n	a2e4 <btrfs_find_free_objectid@@Base+0x914>
    a24e:	adds	r3, r6, r5
    a250:	ldr	r1, [r6, r5]
    a252:	ldr	r2, [r3, #4]
    a254:	strd	r1, r2, [r0, #48]	; 0x30
    a258:	ldr	r1, [r3, #8]
    a25a:	ldr	r2, [r3, #12]
    a25c:	strd	r1, r2, [r0, #56]	; 0x38
    a260:	ldr	r1, [r3, #16]
    a262:	ldr	r2, [r3, #20]
    a264:	strd	r1, r2, [r0, #64]	; 0x40
    a268:	ldr	r2, [r3, #28]
    a26a:	ldr	r1, [r3, #24]
    a26c:	strd	r1, r2, [r0, #72]	; 0x48
    a270:	ldr	r2, [r3, #32]
    a272:	ldr	r3, [r3, #36]	; 0x24
    a274:	strd	r2, r3, [r0, #80]	; 0x50
    a278:	mov.w	fp, #0
    a27c:	ldr.w	r3, [r8, #28]
    a280:	strd	r9, sl, [r4, #24]
    a284:	add	r5, r3
    a286:	ldr	r3, [sp, #20]
    a288:	str	r3, [r4, #56]	; 0x38
    a28a:	ldrd	r2, r3, [sp, #8]
    a28e:	strd	r2, r3, [r4, #8]
    a292:	ldr	r3, [sp, #16]
    a294:	adds	r3, #1
    a296:	str	r3, [sp, #16]
    a298:	b.n	a114 <btrfs_find_free_objectid@@Base+0x744>
    a29a:	ldr	r0, [r7, #0]
    a29c:	mov	r2, r9
    a29e:	mov	r3, sl
    a2a0:	bl	9e80 <btrfs_find_free_objectid@@Base+0x4b0>
    a2a4:	cbnz	r0, a2b2 <btrfs_find_free_objectid@@Base+0x8e2>
    a2a6:	mov	r2, r9
    a2a8:	mov	r3, sl
    a2aa:	mov	r0, r7
    a2ac:	bl	9edc <btrfs_find_free_objectid@@Base+0x50c>
    a2b0:	cbz	r0, a2e4 <btrfs_find_free_objectid@@Base+0x914>
    a2b2:	cmn.w	r0, #4096	; 0x1000
    a2b6:	bhi.n	a2e4 <btrfs_find_free_objectid@@Base+0x914>
    a2b8:	adds	r3, r6, r5
    a2ba:	ldr	r1, [r6, r5]
    a2bc:	ldr	r2, [r3, #4]
    a2be:	strd	r1, r2, [r0, #88]	; 0x58
    a2c2:	ldr	r1, [r3, #8]
    a2c4:	ldr	r2, [r3, #12]
    a2c6:	strd	r1, r2, [r0, #96]	; 0x60
    a2ca:	ldr	r1, [r3, #16]
    a2cc:	ldr	r2, [r3, #20]
    a2ce:	strd	r1, r2, [r0, #104]	; 0x68
    a2d2:	ldr	r2, [r3, #28]
    a2d4:	ldr	r1, [r3, #24]
    a2d6:	strd	r1, r2, [r0, #112]	; 0x70
    a2da:	ldr	r2, [r3, #32]
    a2dc:	ldr	r3, [r3, #36]	; 0x24
    a2de:	strd	r2, r3, [r0, #120]	; 0x78
    a2e2:	b.n	a278 <btrfs_find_free_objectid@@Base+0x8a8>
    a2e4:	mov	fp, r0
    a2e6:	b.n	a1fa <btrfs_find_free_objectid@@Base+0x82a>
    a2e8:	ldrd	r2, r3, [sp, #8]
    a2ec:	cmp	sl, r3
    a2ee:	it	eq
    a2f0:	cmpeq	r9, r2
    a2f2:	bcs.n	a1fa <btrfs_find_free_objectid@@Base+0x82a>
    a2f4:	ldr.w	fp, [r7]
    a2f8:	mov	r2, r9
    a2fa:	mov	r3, sl
    a2fc:	mov	r0, fp
    a2fe:	bl	9e80 <btrfs_find_free_objectid@@Base+0x4b0>
    a302:	mov	r6, r0
    a304:	cbnz	r0, a322 <btrfs_find_free_objectid@@Base+0x952>
    a306:	uxth.w	r3, sl
    a30a:	strd	r9, r3, [sp]
    a30e:	mov	r3, r0
    a310:	ldr	r0, [pc, #136]	; (a39c <btrfs_find_free_objectid@@Base+0x9cc>)
    a312:	mov.w	r2, sl, lsr #16
    a316:	add	r0, pc
    a318:	bl	17b7c <__btrfs_error@@Base>
    a31c:	mvn.w	fp, #1
    a320:	b.n	a0ec <btrfs_find_free_objectid@@Base+0x71c>
    a322:	mov	r0, fp
    a324:	ldrd	r2, r3, [sp, #8]
    a328:	bl	9e80 <btrfs_find_free_objectid@@Base+0x4b0>
    a32c:	mov	fp, r0
    a32e:	cbnz	r0, a346 <btrfs_find_free_objectid@@Base+0x976>
    a330:	ldrh.w	r3, [sp, #12]
    a334:	ldr	r2, [sp, #8]
    a336:	strd	r2, r3, [sp]
    a33a:	ldr	r3, [sp, #12]
    a33c:	lsrs	r2, r3, #16
    a33e:	mov	r3, r0
    a340:	ldr	r0, [pc, #92]	; (a3a0 <btrfs_find_free_objectid@@Base+0x9d0>)
    a342:	add	r0, pc
    a344:	b.n	a318 <btrfs_find_free_objectid@@Base+0x948>
    a346:	movs	r0, #24
    a348:	blx	8870 <malloc@plt+0x4>
    a34c:	cbnz	r0, a35c <btrfs_find_free_objectid@@Base+0x98c>
    a34e:	ldr	r0, [pc, #84]	; (a3a4 <btrfs_find_free_objectid@@Base+0x9d4>)
    a350:	mvn.w	fp, #11
    a354:	add	r0, pc
    a356:	bl	17b7c <__btrfs_error@@Base>
    a35a:	b.n	a0ec <btrfs_find_free_objectid@@Base+0x71c>
    a35c:	strd	fp, r6, [r0, #16]
    a360:	adds	r6, #128	; 0x80
    a362:	ldr	r3, [r6, #4]
    a364:	add.w	r1, r0, #8
    a368:	str	r0, [r6, #4]
    a36a:	strd	r6, r3, [r0]
    a36e:	str	r0, [r3, #0]
    a370:	add.w	r3, fp, #136	; 0x88
    a374:	ldr.w	r2, [fp, #140]	; 0x8c
    a378:	str.w	r1, [fp, #140]	; 0x8c
    a37c:	strd	r3, r2, [r0, #8]
    a380:	str	r1, [r2, #0]
    a382:	b.n	a278 <btrfs_find_free_objectid@@Base+0x8a8>
    a384:	mvn.w	fp, #24
    a388:	b.n	a0ec <btrfs_find_free_objectid@@Base+0x71c>
    a38a:	nop
    a38c:	str	r4, [sp, #68]	; 0x44
    a38e:	beq.n	a392 <btrfs_find_free_objectid@@Base+0x9c2>
    a390:	vaddl.u16	q0, d7, d2
    a394:	vhadd.u32	d0, d5, d2
    a398:	cdp2	0, 14, cr0, cr14, cr2, {0}
    a39c:	ldc2l	0, cr0, [r2, #-8]!
    a3a0:	stc2l	0, cr0, [r6, #-8]
    a3a4:	ldc2	0, cr0, [r5], #-8
    a3a8:	push	{r4, r5, r6, r7, lr}
    a3aa:	mov	r5, r1
    a3ac:	ldr	r1, [pc, #168]	; (a458 <btrfs_find_free_objectid@@Base+0xa88>)
    a3ae:	sub.w	sp, sp, #4096	; 0x1000
    a3b2:	ldr	r2, [pc, #168]	; (a45c <btrfs_find_free_objectid@@Base+0xa8c>)
    a3b4:	sub	sp, #12
    a3b6:	add	r1, pc
    a3b8:	add.w	r3, sp, #4096	; 0x1000
    a3bc:	adds	r3, #4
    a3be:	mov.w	r6, #4096	; 0x1000
    a3c2:	ldr	r2, [r1, r2]
    a3c4:	mov	r4, r0
    a3c6:	movs	r1, #0
    a3c8:	add	r7, sp, #8
    a3ca:	ldr	r2, [r2, #0]
    a3cc:	str	r2, [r3, #0]
    a3ce:	mov.w	r2, #0
    a3d2:	mov	r3, sp
    a3d4:	mov	r2, r6
    a3d6:	mov	r0, r3
    a3d8:	blx	89bc <memset@plt+0x4>
    a3dc:	movs	r1, #0
    a3de:	movs	r2, #246	; 0xf6
    a3e0:	mov	r3, r0
    a3e2:	movs	r0, #8
    a3e4:	strd	r0, r1, [r7, #-8]
    a3e8:	mov.w	r0, #4294967295	; 0xffffffff
    a3ec:	mov.w	r1, #4294967295	; 0xffffffff
    a3f0:	strd	r0, r1, [r3, #16]
    a3f4:	strd	r0, r1, [r3, #32]
    a3f8:	strd	r0, r1, [r3, #48]	; 0x30
    a3fc:	movs	r1, #240	; 0xf0
    a3fe:	mov	r0, r4
    a400:	strd	r1, r2, [r3, #56]	; 0x38
    a404:	mov	r2, r5
    a406:	mov	r1, r3
    a408:	str	r6, [r3, #64]	; 0x40
    a40a:	bl	a084 <btrfs_find_free_objectid@@Base+0x6b4>
    a40e:	cmn.w	r0, #25
    a412:	mov	r4, r0
    a414:	bne.n	a438 <btrfs_find_free_objectid@@Base+0xa68>
    a416:	ldr	r0, [pc, #72]	; (a460 <btrfs_find_free_objectid@@Base+0xa90>)
    a418:	add	r0, pc
    a41a:	bl	17b7c <__btrfs_error@@Base>
    a41e:	ldr	r1, [pc, #68]	; (a464 <btrfs_find_free_objectid@@Base+0xa94>)
    a420:	add.w	r3, sp, #4096	; 0x1000
    a424:	ldr	r2, [pc, #52]	; (a45c <btrfs_find_free_objectid@@Base+0xa8c>)
    a426:	adds	r3, #4
    a428:	add	r1, pc
    a42a:	ldr	r2, [r1, r2]
    a42c:	ldr	r1, [r2, #0]
    a42e:	ldr	r2, [r3, #0]
    a430:	eors	r1, r2
    a432:	beq.n	a44e <btrfs_find_free_objectid@@Base+0xa7e>
    a434:	blx	8708 <__stack_chk_fail@plt>
    a438:	cmp	r0, #0
    a43a:	bge.n	a41e <btrfs_find_free_objectid@@Base+0xa4e>
    a43c:	negs	r0, r0
    a43e:	blx	8888 <strerror@plt>
    a442:	mov	r1, r0
    a444:	ldr	r0, [pc, #32]	; (a468 <btrfs_find_free_objectid@@Base+0xa98>)
    a446:	add	r0, pc
    a448:	bl	17b7c <__btrfs_error@@Base>
    a44c:	b.n	a41e <btrfs_find_free_objectid@@Base+0xa4e>
    a44e:	mov	r0, r4
    a450:	add.w	sp, sp, #4096	; 0x1000
    a454:	add	sp, #12
    a456:	pop	{r4, r5, r6, r7, pc}
    a458:	add	r1, sp, #808	; 0x328
    a45a:	movs	r5, r0
    a45c:	lsls	r0, r5, #8
    a45e:	movs	r0, r0
    a460:	ldc2	0, cr0, [r1], {2}
    a464:	add	r1, sp, #352	; 0x160
    a466:	movs	r5, r0
    a468:	stc2	0, cr0, [sl], {2}

0000a46c <btrfs_qgroup_setup_print_column@@Base>:
    a46c:	cmp	r0, #7
    a46e:	ldr	r1, [pc, #68]	; (a4b4 <btrfs_qgroup_setup_print_column@@Base+0x48>)
    a470:	push	{r4, lr}
    a472:	mov	r4, r0
    a474:	ldr	r0, [pc, #64]	; (a4b8 <btrfs_qgroup_setup_print_column@@Base+0x4c>)
    a476:	ite	hi
    a478:	movhi	r3, #0
    a47a:	movls	r3, #1
    a47c:	add	r1, pc
    a47e:	add	r0, pc
    a480:	movs	r2, #143	; 0x8f
    a482:	bl	9f78 <btrfs_find_free_objectid@@Base+0x5a8>
    a486:	cmp	r4, #6
    a488:	bls.n	a4a2 <btrfs_qgroup_setup_print_column@@Base+0x36>
    a48a:	ldr	r3, [pc, #48]	; (a4bc <btrfs_qgroup_setup_print_column@@Base+0x50>)
    a48c:	movs	r2, #1
    a48e:	add	r3, pc
    a490:	str	r2, [r3, #8]
    a492:	str	r2, [r3, #28]
    a494:	str	r2, [r3, #48]	; 0x30
    a496:	str	r2, [r3, #68]	; 0x44
    a498:	str	r2, [r3, #88]	; 0x58
    a49a:	str	r2, [r3, #108]	; 0x6c
    a49c:	str.w	r2, [r3, #128]	; 0x80
    a4a0:	pop	{r4, pc}
    a4a2:	ldr	r0, [pc, #28]	; (a4c0 <btrfs_qgroup_setup_print_column@@Base+0x54>)
    a4a4:	movs	r3, #20
    a4a6:	add	r0, pc
    a4a8:	mla	r4, r3, r4, r0
    a4ac:	movs	r3, #1
    a4ae:	str	r3, [r4, #8]
    a4b0:	b.n	a4a0 <btrfs_qgroup_setup_print_column@@Base+0x34>
    a4b2:	nop
    a4b4:	cdp2	0, 5, cr0, cr12, cr2, {0}
    a4b8:	stc2l	0, cr0, [r9], #-8
    a4bc:	add	r3, sp, #472	; 0x1d8
    a4be:	movs	r5, r0
    a4c0:	add	r3, sp, #376	; 0x178
    a4c2:	movs	r5, r0

0000a4c4 <btrfs_qgroup_setup_units@@Base>:
    a4c4:	ldr	r3, [pc, #12]	; (a4d4 <btrfs_qgroup_setup_units@@Base+0x10>)
    a4c6:	add	r3, pc
    a4c8:	str	r0, [r3, #32]
    a4ca:	str	r0, [r3, #52]	; 0x34
    a4cc:	str	r0, [r3, #72]	; 0x48
    a4ce:	str	r0, [r3, #92]	; 0x5c
    a4d0:	bx	lr
    a4d2:	nop
    a4d4:	add	r3, sp, #248	; 0xf8
    a4d6:	movs	r5, r0

0000a4d8 <btrfs_qgroup_alloc_comparer_set@@Base>:
    a4d8:	push	{r3, lr}
    a4da:	movs	r1, #88	; 0x58
    a4dc:	movs	r0, #1
    a4de:	blx	8588 <calloc@plt+0x4>
    a4e2:	cbnz	r0, a4f2 <btrfs_qgroup_alloc_comparer_set@@Base+0x1a>
    a4e4:	ldr	r0, [pc, #16]	; (a4f8 <btrfs_qgroup_alloc_comparer_set@@Base+0x20>)
    a4e6:	add	r0, pc
    a4e8:	bl	17b7c <__btrfs_error@@Base>
    a4ec:	movs	r0, #1
    a4ee:	blx	8934 <exit@plt>
    a4f2:	movs	r2, #10
    a4f4:	str	r2, [r0, #0]
    a4f6:	pop	{r3, pc}
    a4f8:			; <UNDEFINED> instruction: 0xfaa30002

0000a4fc <btrfs_qgroup_setup_comparer@@Base>:
    a4fc:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    a500:	mov	r6, r1
    a502:	ldr	r4, [r0, #0]
    a504:	mov	r7, r0
    a506:	ldr	r1, [pc, #188]	; (a5c4 <btrfs_qgroup_setup_comparer@@Base+0xc8>)
    a508:	mov	r8, r2
    a50a:	subs	r3, r4, #0
    a50c:	ldr	r0, [pc, #184]	; (a5c8 <btrfs_qgroup_setup_comparer@@Base+0xcc>)
    a50e:	add	r1, pc
    a510:	movw	r2, #457	; 0x1c9
    a514:	it	ne
    a516:	movne	r3, #1
    a518:	adds	r1, #32
    a51a:	add	r0, pc
    a51c:	str	r1, [sp, #4]
    a51e:	bl	9f78 <btrfs_find_free_objectid@@Base+0x5a8>
    a522:	cmp	r6, #4
    a524:	ldr	r0, [pc, #164]	; (a5cc <btrfs_qgroup_setup_comparer@@Base+0xd0>)
    a526:	mov.w	r2, #458	; 0x1ca
    a52a:	ite	hi
    a52c:	movhi	r3, #0
    a52e:	movls	r3, #1
    a530:	ldr	r1, [sp, #4]
    a532:	add	r0, pc
    a534:	bl	9f78 <btrfs_find_free_objectid@@Base+0x5a8>
    a538:	ldrd	r9, r5, [r4]
    a53c:	ldr	r0, [pc, #144]	; (a5d0 <btrfs_qgroup_setup_comparer@@Base+0xd4>)
    a53e:	movw	r2, #459	; 0x1cb
    a542:	cmp	r5, r9
    a544:	ldr	r1, [sp, #4]
    a546:	add	r0, pc
    a548:	ite	gt
    a54a:	movgt	r3, #0
    a54c:	movle	r3, #1
    a54e:	bl	9f78 <btrfs_find_free_objectid@@Base+0x5a8>
    a552:	cmp	r5, r9
    a554:	bne.n	a58e <btrfs_qgroup_setup_comparer@@Base+0x92>
    a556:	adds	r5, #11
    a558:	mov	r0, r4
    a55a:	lsls	r1, r5, #3
    a55c:	blx	8724 <realloc@plt+0x4>
    a560:	mov	r5, r0
    a562:	cbnz	r0, a574 <btrfs_qgroup_setup_comparer@@Base+0x78>
    a564:	mov	r0, r4
    a566:	blx	8620 <free@plt+0x4>
    a56a:	mvn.w	r0, #11
    a56e:	add	sp, #12
    a570:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    a574:	ldr	r0, [r0, #0]
    a576:	movs	r2, #80	; 0x50
    a578:	movs	r1, #0
    a57a:	mov	r4, r5
    a57c:	adds	r0, #1
    a57e:	add.w	r0, r5, r0, lsl #3
    a582:	blx	89bc <memset@plt+0x4>
    a586:	ldr	r3, [r5, #0]
    a588:	adds	r3, #10
    a58a:	str	r3, [r5, #0]
    a58c:	str	r5, [r7, #0]
    a58e:	ldr	r5, [r4, #4]
    a590:	movw	r2, #481	; 0x1e1
    a594:	ldr	r1, [pc, #60]	; (a5d4 <btrfs_qgroup_setup_comparer@@Base+0xd8>)
    a596:	ldr	r0, [pc, #64]	; (a5d8 <btrfs_qgroup_setup_comparer@@Base+0xdc>)
    a598:	add.w	r7, r4, r5, lsl #3
    a59c:	add	r1, pc
    a59e:	add	r0, pc
    a5a0:	adds	r1, #32
    a5a2:	ldr	r3, [r7, #8]
    a5a4:	adds	r5, #1
    a5a6:	clz	r3, r3
    a5aa:	lsrs	r3, r3, #5
    a5ac:	bl	9f78 <btrfs_find_free_objectid@@Base+0x5a8>
    a5b0:	ldr	r3, [pc, #40]	; (a5dc <btrfs_qgroup_setup_comparer@@Base+0xe0>)
    a5b2:	movs	r0, #0
    a5b4:	add	r3, pc
    a5b6:	ldr.w	r3, [r3, r6, lsl #2]
    a5ba:	strd	r3, r8, [r7, #8]
    a5be:	str	r5, [r4, #4]
    a5c0:	b.n	a56e <btrfs_qgroup_setup_comparer@@Base+0x72>
    a5c2:	nop
    a5c4:	stc2l	0, cr0, [sl, #8]
    a5c8:			; <UNDEFINED> instruction: 0xfbf70002
    a5cc:	umlal	r0, r0, fp, r2
    a5d0:			; <UNDEFINED> instruction: 0xfbf80002
    a5d4:	ldc2	0, cr0, [ip, #-8]!
    a5d8:			; <UNDEFINED> instruction: 0xfbba0002
    a5dc:	ldr	r7, [sp, #832]	; 0x340
    a5de:	movs	r5, r0

0000a5e0 <btrfs_qgroup_alloc_filter_set@@Base>:
    a5e0:	push	{r3, lr}
    a5e2:	movs	r1, #72	; 0x48
    a5e4:	movs	r0, #1
    a5e6:	blx	8588 <calloc@plt+0x4>
    a5ea:	cbnz	r0, a5fa <btrfs_qgroup_alloc_filter_set@@Base+0x1a>
    a5ec:	ldr	r0, [pc, #16]	; (a600 <btrfs_qgroup_alloc_filter_set@@Base+0x20>)
    a5ee:	add	r0, pc
    a5f0:	bl	17b7c <__btrfs_error@@Base>
    a5f4:	movs	r0, #1
    a5f6:	blx	8934 <exit@plt>
    a5fa:	movs	r2, #4
    a5fc:	str	r2, [r0, #0]
    a5fe:	pop	{r3, pc}
    a600:	ldrsb.w	r0, [fp, #2]

0000a604 <btrfs_qgroup_setup_filter@@Base>:
    a604:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
    a608:	mov	r8, r1
    a60a:	ldr	r4, [r0, #0]
    a60c:	mov	r9, r0
    a60e:	ldr	r1, [pc, #216]	; (a6e8 <btrfs_qgroup_setup_filter@@Base+0xe4>)
    a610:	mov	r6, r3
    a612:	ldr	r0, [pc, #216]	; (a6ec <btrfs_qgroup_setup_filter@@Base+0xe8>)
    a614:	subs	r3, r4, #0
    a616:	add	r1, pc
    a618:	mov	r7, r2
    a61a:	it	ne
    a61c:	movne	r3, #1
    a61e:	adds	r1, #60	; 0x3c
    a620:	add	r0, pc
    a622:	mov.w	r2, #836	; 0x344
    a626:	str	r1, [sp, #4]
    a628:	bl	9f78 <btrfs_find_free_objectid@@Base+0x5a8>
    a62c:	cmp.w	r8, #1
    a630:	ldr	r0, [pc, #188]	; (a6f0 <btrfs_qgroup_setup_filter@@Base+0xec>)
    a632:	ldr	r1, [sp, #4]
    a634:	movw	r2, #837	; 0x345
    a638:	ite	hi
    a63a:	movhi	r3, #0
    a63c:	movls	r3, #1
    a63e:	add	r0, pc
    a640:	bl	9f78 <btrfs_find_free_objectid@@Base+0x5a8>
    a644:	ldrd	sl, r5, [r4]
    a648:	ldr	r0, [pc, #168]	; (a6f4 <btrfs_qgroup_setup_filter@@Base+0xf0>)
    a64a:	movw	r2, #838	; 0x346
    a64e:	cmp	r5, sl
    a650:	ldr	r1, [sp, #4]
    a652:	add	r0, pc
    a654:	ite	gt
    a656:	movgt	r3, #0
    a658:	movle	r3, #1
    a65a:	bl	9f78 <btrfs_find_free_objectid@@Base+0x5a8>
    a65e:	cmp	r5, sl
    a660:	bne.n	a6a2 <btrfs_qgroup_setup_filter@@Base+0x9e>
    a662:	lsls	r5, r5, #4
    a664:	mov	r0, r4
    a666:	add.w	r1, r5, #72	; 0x48
    a66a:	blx	8724 <realloc@plt+0x4>
    a66e:	mov	r5, r0
    a670:	cbnz	r0, a686 <btrfs_qgroup_setup_filter@@Base+0x82>
    a672:	ldr	r0, [pc, #132]	; (a6f8 <btrfs_qgroup_setup_filter@@Base+0xf4>)
    a674:	add	r0, pc
    a676:	bl	17b7c <__btrfs_error@@Base>
    a67a:	mov	r0, r4
    a67c:	blx	8620 <free@plt+0x4>
    a680:	movs	r0, #1
    a682:	blx	8934 <exit@plt>
    a686:	ldr	r0, [r0, #0]
    a688:	movs	r2, #64	; 0x40
    a68a:	movs	r1, #0
    a68c:	mov	r4, r5
    a68e:	add.w	r0, r5, r0, lsl #4
    a692:	adds	r0, #8
    a694:	blx	89bc <memset@plt+0x4>
    a698:	ldr	r3, [r5, #0]
    a69a:	adds	r3, #4
    a69c:	str	r3, [r5, #0]
    a69e:	str.w	r5, [r9]
    a6a2:	ldr	r5, [r4, #4]
    a6a4:	mov.w	r2, #860	; 0x35c
    a6a8:	ldr	r1, [pc, #80]	; (a6fc <btrfs_qgroup_setup_filter@@Base+0xf8>)
    a6aa:	ldr	r0, [pc, #84]	; (a700 <btrfs_qgroup_setup_filter@@Base+0xfc>)
    a6ac:	add.w	r9, r4, r5, lsl #4
    a6b0:	add	r1, pc
    a6b2:	adds	r1, #60	; 0x3c
    a6b4:	add	r0, pc
    a6b6:	ldr.w	r3, [r9, #8]
    a6ba:	adds	r5, #1
    a6bc:	clz	r3, r3
    a6c0:	lsrs	r3, r3, #5
    a6c2:	bl	9f78 <btrfs_find_free_objectid@@Base+0x5a8>
    a6c6:	ldr	r1, [pc, #60]	; (a704 <btrfs_qgroup_setup_filter@@Base+0x100>)
    a6c8:	movs	r0, #0
    a6ca:	add	r1, pc
    a6cc:	add.w	r8, r1, r8, lsl #2
    a6d0:	ldr.w	r3, [r8, #20]
    a6d4:	str.w	r3, [r9, #8]
    a6d8:	add.w	r3, r4, r5, lsl #4
    a6dc:	strd	r7, r6, [r3]
    a6e0:	str	r5, [r4, #4]
    a6e2:	add	sp, #8
    a6e4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    a6e8:	stc2l	0, cr0, [r2], {2}
    a6ec:			; <UNDEFINED> instruction: 0xfaf10002
    a6f0:	smlsd	r0, r4, r2, r0
    a6f4:	smmla	r0, r1, r2, r0
    a6f8:	ldrsb.w	r0, [r5, r2]
    a6fc:	stc2	0, cr0, [r8], #-8
    a700:	mla	r0, fp, r2, r0
    a704:	ldr	r6, [sp, #744]	; 0x2e8
    a706:	movs	r5, r0

0000a708 <btrfs_qgroup_query@@Base>:
    a708:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    a70c:	sub.w	sp, sp, #4096	; 0x1000
    a710:	sub	sp, #16
    a712:	ldr	r1, [pc, #224]	; (a7f4 <btrfs_qgroup_query@@Base+0xec>)
    a714:	mov	r7, r2
    a716:	mov	r6, r3
    a718:	ldr	r2, [pc, #220]	; (a7f8 <btrfs_qgroup_query@@Base+0xf0>)
    a71a:	add.w	r3, sp, #4128	; 0x1020
    a71e:	add	r1, pc
    a720:	add	r4, sp, #8
    a722:	ldr	r5, [r3, #16]
    a724:	adds	r3, #16
    a726:	ldr	r2, [r1, r2]
    a728:	add.w	r3, sp, #4096	; 0x1000
    a72c:	add.w	r8, sp, #16
    a730:	mov.w	sl, #4096	; 0x1000
    a734:	ldr	r2, [r2, #0]
    a736:	str	r2, [r3, #12]
    a738:	mov.w	r2, #0
    a73c:	mov	r9, r0
    a73e:	mov	r2, sl
    a740:	mov	r0, r4
    a742:	movs	r1, #0
    a744:	adds	r3, #12
    a746:	blx	89bc <memset@plt+0x4>
    a74a:	movs	r0, #8
    a74c:	movs	r1, #0
    a74e:	mov.w	r2, #4294967295	; 0xffffffff
    a752:	strd	r0, r1, [r8, #-8]
    a756:	mov.w	r3, #4294967295	; 0xffffffff
    a75a:	strd	r7, r6, [r8, #16]
    a75e:	mov	r1, r4
    a760:	strd	r2, r3, [r8, #40]	; 0x28
    a764:	movs	r2, #242	; 0xf2
    a766:	movs	r3, #244	; 0xf4
    a768:	strd	r7, r6, [r8, #24]
    a76c:	strd	r2, r3, [r8, #48]	; 0x30
    a770:	mov	r0, r9
    a772:	str.w	sl, [r8, #56]	; 0x38
    a776:	sub.w	r8, r8, #12
    a77a:	mov	r2, r8
    a77c:	bl	a084 <btrfs_find_free_objectid@@Base+0x6b4>
    a780:	subs	r4, r0, #0
    a782:	blt.n	a7c8 <btrfs_qgroup_query@@Base+0xc0>
    a784:	mov	r0, r8
    a786:	bl	13c46 <rb_first@@Base>
    a78a:	mov	r4, r0
    a78c:	cbz	r0, a7e2 <btrfs_qgroup_query@@Base+0xda>
    a78e:	ldrd	r2, r3, [r0, #40]	; 0x28
    a792:	add.w	r7, r0, #48	; 0x30
    a796:	mov	r6, r5
    a798:	adds	r4, #88	; 0x58
    a79a:	adds	r5, #48	; 0x30
    a79c:	strd	r2, r3, [r6], #8
    a7a0:	ldmia	r7!, {r0, r1, r2, r3}
    a7a2:	stmia	r6!, {r0, r1, r2, r3}
    a7a4:	ldmia	r7!, {r0, r1, r2, r3}
    a7a6:	stmia	r6!, {r0, r1, r2, r3}
    a7a8:	ldmia.w	r7, {r0, r1}
    a7ac:	stmia.w	r6, {r0, r1}
    a7b0:	ldmia	r4!, {r0, r1, r2, r3}
    a7b2:	stmia	r5!, {r0, r1, r2, r3}
    a7b4:	ldmia	r4!, {r0, r1, r2, r3}
    a7b6:	stmia	r5!, {r0, r1, r2, r3}
    a7b8:	ldmia.w	r4, {r0, r1}
    a7bc:	movs	r4, #0
    a7be:	stmia.w	r5, {r0, r1}
    a7c2:	mov	r0, r8
    a7c4:	bl	a000 <btrfs_find_free_objectid@@Base+0x630>
    a7c8:	ldr	r1, [pc, #48]	; (a7fc <btrfs_qgroup_query@@Base+0xf4>)
    a7ca:	add.w	r3, sp, #4096	; 0x1000
    a7ce:	ldr	r2, [pc, #40]	; (a7f8 <btrfs_qgroup_query@@Base+0xf0>)
    a7d0:	adds	r3, #12
    a7d2:	add	r1, pc
    a7d4:	ldr	r2, [r1, r2]
    a7d6:	ldr	r1, [r2, #0]
    a7d8:	ldr	r2, [r3, #0]
    a7da:	eors	r1, r2
    a7dc:	beq.n	a7e8 <btrfs_qgroup_query@@Base+0xe0>
    a7de:	blx	8708 <__stack_chk_fail@plt>
    a7e2:	mvn.w	r4, #60	; 0x3c
    a7e6:	b.n	a7c2 <btrfs_qgroup_query@@Base+0xba>
    a7e8:	mov	r0, r4
    a7ea:	add.w	sp, sp, #4096	; 0x1000
    a7ee:	add	sp, #16
    a7f0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    a7f4:	add	r6, pc, #392	; (adr r6, a980 <btrfs_show_qgroups@@Base+0x180>)
    a7f6:	movs	r5, r0
    a7f8:	lsls	r0, r5, #8
    a7fa:	movs	r0, r0
    a7fc:	add	r5, pc, #696	; (adr r5, aab8 <btrfs_show_qgroups@@Base+0x2b8>)
    a7fe:	movs	r5, r0

0000a800 <btrfs_show_qgroups@@Base>:
    a800:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a804:	mov	fp, r1
    a806:	vpush	{d8}
    a80a:	ldr.w	r3, [pc, #1460]	; adc0 <btrfs_show_qgroups@@Base+0x5c0>
    a80e:	sub	sp, #164	; 0xa4
    a810:	add	r6, sp, #48	; 0x30
    a812:	str	r2, [sp, #20]
    a814:	ldr.w	r2, [pc, #1452]	; adc4 <btrfs_show_qgroups@@Base+0x5c4>
    a818:	mov	r1, r6
    a81a:	add	r2, pc
    a81c:	ldr	r3, [r2, r3]
    a81e:	ldr	r3, [r3, #0]
    a820:	str	r3, [sp, #156]	; 0x9c
    a822:	mov.w	r3, #0
    a826:	bl	a3a8 <btrfs_find_free_objectid@@Base+0x9d8>
    a82a:	str	r0, [sp, #16]
    a82c:	cmp	r0, #0
    a82e:	bne.n	a912 <btrfs_show_qgroups@@Base+0x112>
    a830:	ldr.w	r9, [pc, #1428]	; adc8 <btrfs_show_qgroups@@Base+0x5c8>
    a834:	mov	r4, fp
    a836:	ldr.w	sl, [pc, #1428]	; adcc <btrfs_show_qgroups@@Base+0x5cc>
    a83a:	mov	r5, r0
    a83c:	ldr.w	r7, [fp, #4]
    a840:	add	r9, pc
    a842:	ldr.w	r8, [sp, #48]	; 0x30
    a846:	add	sl, pc
    a848:	str	r0, [sp, #52]	; 0x34
    a84a:	cmp	r5, r7
    a84c:	blt.n	a92c <btrfs_show_qgroups@@Base+0x12c>
    a84e:	mov	r0, r6
    a850:	bl	13c56 <rb_last@@Base>
    a854:	ldr.w	r3, [pc, #1400]	; add0 <btrfs_show_qgroups@@Base+0x5d0>
    a858:	add	r3, pc
    a85a:	adds	r3, #86	; 0x56
    a85c:	vmov	s17, r3
    a860:	mov	r4, r0
    a862:	cmp	r4, #0
    a864:	bne.n	a94c <btrfs_show_qgroups@@Base+0x14c>
    a866:	ldr.w	r3, [pc, #1388]	; add4 <btrfs_show_qgroups@@Base+0x5d4>
    a86a:	ldr.w	r6, [pc, #1388]	; add8 <btrfs_show_qgroups@@Base+0x5d8>
    a86e:	ldr.w	r7, [pc, #1388]	; addc <btrfs_show_qgroups@@Base+0x5dc>
    a872:	add	r3, pc
    a874:	add	r6, pc
    a876:	str	r3, [sp, #20]
    a878:	add	r7, pc
    a87a:	mov	r5, r3
    a87c:	ldr	r3, [r5, #8]
    a87e:	cbz	r3, a89e <btrfs_show_qgroups@@Base+0x9e>
    a880:	subs	r3, r4, #5
    a882:	ldr	r2, [r5, #16]
    a884:	cmp	r3, #1
    a886:	ldr	r3, [r5, #0]
    a888:	bls.n	a890 <btrfs_show_qgroups@@Base+0x90>
    a88a:	cmp	r4, #0
    a88c:	bne.w	abac <btrfs_show_qgroups@@Base+0x3ac>
    a890:	mov	r1, r6
    a892:	movs	r0, #1
    a894:	blx	8a30 <__printf_chk@plt+0x4>
    a898:	movs	r0, #32
    a89a:	blx	89cc <putchar@plt+0x4>
    a89e:	adds	r4, #1
    a8a0:	adds	r5, #20
    a8a2:	cmp	r4, #7
    a8a4:	bne.n	a87c <btrfs_show_qgroups@@Base+0x7c>
    a8a6:	movs	r0, #10
    a8a8:	movs	r6, #0
    a8aa:	blx	89cc <putchar@plt+0x4>
    a8ae:	ldr	r4, [sp, #20]
    a8b0:	ldr	r3, [r4, #8]
    a8b2:	cbz	r3, a8e4 <btrfs_show_qgroups@@Base+0xe4>
    a8b4:	subs	r3, r6, #5
    a8b6:	ldr	r5, [r4, #16]
    a8b8:	cmp	r3, #1
    a8ba:	ldr	r0, [r4, #0]
    a8bc:	bls.n	a8c4 <btrfs_show_qgroups@@Base+0xc4>
    a8be:	cmp	r6, #0
    a8c0:	bne.w	abc0 <btrfs_show_qgroups@@Base+0x3c0>
    a8c4:	blx	8940 <strlen@plt>
    a8c8:	mov	r7, r0
    a8ca:	subs	r7, #1
    a8cc:	bcs.w	abb0 <btrfs_show_qgroups@@Base+0x3b0>
    a8d0:	ldr	r0, [r4, #0]
    a8d2:	blx	8940 <strlen@plt>
    a8d6:	subs	r5, r5, r0
    a8d8:	subs	r5, #1
    a8da:	bcs.w	abb8 <btrfs_show_qgroups@@Base+0x3b8>
    a8de:	movs	r0, #32
    a8e0:	blx	89cc <putchar@plt+0x4>
    a8e4:	adds	r6, #1
    a8e6:	adds	r4, #20
    a8e8:	cmp	r6, #7
    a8ea:	bne.n	a8b0 <btrfs_show_qgroups@@Base+0xb0>
    a8ec:	movs	r0, #10
    a8ee:	blx	89cc <putchar@plt+0x4>
    a8f2:	add	r0, sp, #52	; 0x34
    a8f4:	bl	13c46 <rb_first@@Base>
    a8f8:	ldr.w	r3, [pc, #1252]	; ade0 <btrfs_show_qgroups@@Base+0x5e0>
    a8fc:	add	r3, pc
    a8fe:	adds	r3, #111	; 0x6f
    a900:	vmov	s17, r3
    a904:	mov	r4, r0
    a906:	cmp	r4, #0
    a908:	bne.w	abe8 <btrfs_show_qgroups@@Base+0x3e8>
    a90c:	add	r0, sp, #48	; 0x30
    a90e:	bl	a000 <btrfs_find_free_objectid@@Base+0x630>
    a912:	ldr.w	r2, [pc, #1232]	; ade4 <btrfs_show_qgroups@@Base+0x5e4>
    a916:	ldr.w	r3, [pc, #1192]	; adc0 <btrfs_show_qgroups@@Base+0x5c0>
    a91a:	add	r2, pc
    a91c:	ldr	r3, [r2, r3]
    a91e:	ldr	r2, [r3, #0]
    a920:	ldr	r3, [sp, #156]	; 0x9c
    a922:	eors	r2, r3
    a924:	beq.w	adb4 <btrfs_show_qgroups@@Base+0x5b4>
    a928:	blx	8708 <__stack_chk_fail@plt>
    a92c:	ldr	r3, [r4, #8]
    a92e:	cmp	r3, r9
    a930:	beq.n	a936 <btrfs_show_qgroups@@Base+0x136>
    a932:	cmp	r3, sl
    a934:	bne.n	a946 <btrfs_show_qgroups@@Base+0x146>
    a936:	ldrd	r2, r3, [r4, #16]
    a93a:	mov	r0, r8
    a93c:	bl	9e80 <btrfs_find_free_objectid@@Base+0x4b0>
    a940:	movs	r1, #0
    a942:	str	r1, [r4, #20]
    a944:	str	r0, [r4, #16]
    a946:	adds	r5, #1
    a948:	adds	r4, #16
    a94a:	b.n	a84a <btrfs_show_qgroups@@Base+0x4a>
    a94c:	ldr.w	r3, [fp, #4]
    a950:	cbnz	r3, a99e <btrfs_show_qgroups@@Base+0x19e>
    a952:	add	r5, sp, #52	; 0x34
    a954:	ldr.w	r2, [pc, #1168]	; ade8 <btrfs_show_qgroups@@Base+0x5e8>
    a958:	movs	r3, #0
    a95a:	mov	sl, r5
    a95c:	add	r2, pc
    a95e:	str	r2, [sp, #40]	; 0x28
    a960:	ldr	r6, [r5, #0]
    a962:	cbnz	r6, a9a4 <btrfs_show_qgroups@@Base+0x1a4>
    a964:	add.w	r0, r4, #12
    a968:	strd	r3, r6, [r4, #12]
    a96c:	str	r6, [r4, #20]
    a96e:	mov	r1, sl
    a970:	str	r0, [r5, #0]
    a972:	bl	1392a <rb_insert_color@@Base>
    a976:	b.n	a9e0 <btrfs_show_qgroups@@Base+0x1e0>
    a978:	adds	r5, #1
    a97a:	ldr.w	r3, [fp, #4]
    a97e:	cmp	r5, r3
    a980:	bge.n	a952 <btrfs_show_qgroups@@Base+0x152>
    a982:	ldr	r1, [r6, #8]
    a984:	cmp	r1, #0
    a986:	beq.n	a952 <btrfs_show_qgroups@@Base+0x152>
    a988:	ldrd	r2, r3, [r6, #16]!
    a98c:	mov	r0, r4
    a98e:	blx	r1
    a990:	cmp	r0, #0
    a992:	bne.n	a978 <btrfs_show_qgroups@@Base+0x178>
    a994:	mov	r0, r4
    a996:	bl	13c92 <rb_prev@@Base>
    a99a:	mov	r4, r0
    a99c:	b.n	a862 <btrfs_show_qgroups@@Base+0x62>
    a99e:	mov	r6, fp
    a9a0:	movs	r5, #0
    a9a2:	b.n	a97a <btrfs_show_qgroups@@Base+0x17a>
    a9a4:	ldr	r3, [sp, #20]
    a9a6:	sub.w	r1, r6, #12
    a9aa:	cbnz	r3, a9c2 <btrfs_show_qgroups@@Base+0x1c2>
    a9ac:	movs	r2, #0
    a9ae:	mov	r0, r4
    a9b0:	bl	9bc0 <btrfs_find_free_objectid@@Base+0x1f0>
    a9b4:	cmp	r0, #0
    a9b6:	blt.w	adac <btrfs_show_qgroups@@Base+0x5ac>
    a9ba:	beq.n	a9e0 <btrfs_show_qgroups@@Base+0x1e0>
    a9bc:	ldr	r5, [r5, #0]
    a9be:	adds	r5, #4
    a9c0:	b.n	adb0 <btrfs_show_qgroups@@Base+0x5b0>
    a9c2:	ldr	r3, [sp, #20]
    a9c4:	ldr	r3, [r3, #4]
    a9c6:	cmp	r3, #0
    a9c8:	beq.n	a9ac <btrfs_show_qgroups@@Base+0x1ac>
    a9ca:	ldr.w	r8, [sp, #20]
    a9ce:	movs	r7, #0
    a9d0:	mov	r9, r7
    a9d2:	ldr	r3, [sp, #20]
    a9d4:	ldr	r3, [r3, #4]
    a9d6:	cmp	r7, r3
    a9d8:	blt.n	aa20 <btrfs_show_qgroups@@Base+0x220>
    a9da:	cmp.w	r9, #0
    a9de:	beq.n	a9ac <btrfs_show_qgroups@@Base+0x1ac>
    a9e0:	ldr.w	r3, [pc, #1032]	; adec <btrfs_show_qgroups@@Base+0x5ec>
    a9e4:	movs	r7, #0
    a9e6:	ldr.w	r8, [pc, #1032]	; adf0 <btrfs_show_qgroups@@Base+0x5f0>
    a9ea:	add	r3, pc
    a9ec:	add	r8, pc
    a9ee:	vmov	s16, r3
    a9f2:	ldr.w	r3, [r8, #8]
    a9f6:	cmp	r3, #0
    a9f8:	beq.n	aa80 <btrfs_show_qgroups@@Base+0x280>
    a9fa:	movs	r3, #1
    a9fc:	vmov	r1, s17
    aa00:	vmov	r0, s16
    aa04:	mov.w	r2, #936	; 0x3a8
    aa08:	bl	9f78 <btrfs_find_free_objectid@@Base+0x5a8>
    aa0c:	subs	r3, r7, #1
    aa0e:	ldr.w	r5, [r8, #12]
    aa12:	cmp	r3, #5
    aa14:	bhi.n	aa4c <btrfs_show_qgroups@@Base+0x24c>
    aa16:	tbb	[pc, r3]
    aa1a:	bx	r7
    aa1c:	str	r5, [r2, #52]	; 0x34
    aa1e:	ldr	r1, [sp, #452]	; 0x1c4
    aa20:	ldr.w	r3, [r8, #8]
    aa24:	cmp	r3, #0
    aa26:	beq.n	a9da <btrfs_show_qgroups@@Base+0x1da>
    aa28:	ldr.w	r2, [r8, #12]
    aa2c:	mov	r0, r4
    aa2e:	str	r1, [sp, #44]	; 0x2c
    aa30:	blx	r3
    aa32:	cmp	r0, #0
    aa34:	bne.w	ada8 <btrfs_show_qgroups@@Base+0x5a8>
    aa38:	ldr.w	r3, [r8, #8]!
    aa3c:	adds	r7, #1
    aa3e:	ldr	r2, [sp, #40]	; 0x28
    aa40:	ldr	r1, [sp, #44]	; 0x2c
    aa42:	cmp	r3, r2
    aa44:	it	eq
    aa46:	moveq.w	r9, #1
    aa4a:	b.n	a9d2 <btrfs_show_qgroups@@Base+0x1d2>
    aa4c:	ldrd	r1, r3, [r4, #40]	; 0x28
    aa50:	add	r5, sp, #56	; 0x38
    aa52:	mov	r0, r5
    aa54:	uxth	r2, r3
    aa56:	lsrs	r3, r3, #16
    aa58:	str	r3, [sp, #0]
    aa5a:	movs	r3, #0
    aa5c:	str	r3, [sp, #4]
    aa5e:	ldr	r3, [pc, #916]	; (adf4 <btrfs_show_qgroups@@Base+0x5f4>)
    aa60:	strd	r1, r2, [sp, #8]
    aa64:	movs	r2, #100	; 0x64
    aa66:	add	r3, pc
    aa68:	movs	r1, #1
    aa6a:	blx	8994 <__sprintf_chk@plt>
    aa6e:	mov	r0, r5
    aa70:	blx	8940 <strlen@plt>
    aa74:	ldr	r3, [pc, #896]	; (adf8 <btrfs_show_qgroups@@Base+0x5f8>)
    aa76:	add	r3, pc
    aa78:	ldr	r2, [r3, #16]
    aa7a:	cmp	r0, r2
    aa7c:	ble.n	aa80 <btrfs_show_qgroups@@Base+0x280>
    aa7e:	str	r0, [r3, #16]
    aa80:	adds	r7, #1
    aa82:	add.w	r8, r8, #20
    aa86:	cmp	r7, #7
    aa88:	bne.n	a9f2 <btrfs_show_qgroups@@Base+0x1f2>
    aa8a:	b.n	a994 <btrfs_show_qgroups@@Base+0x194>
    aa8c:	mov	r2, r5
    aa8e:	ldrd	r0, r1, [r4, #56]	; 0x38
    aa92:	bl	30c00 <pretty_size_mode@@Base>
    aa96:	blx	8940 <strlen@plt>
    aa9a:	ldr	r3, [pc, #864]	; (adfc <btrfs_show_qgroups@@Base+0x5fc>)
    aa9c:	add	r3, pc
    aa9e:	ldr	r2, [r3, #36]	; 0x24
    aaa0:	cmp	r0, r2
    aaa2:	ble.n	aa80 <btrfs_show_qgroups@@Base+0x280>
    aaa4:	str	r0, [r3, #36]	; 0x24
    aaa6:	b.n	aa80 <btrfs_show_qgroups@@Base+0x280>
    aaa8:	mov	r2, r5
    aaaa:	ldrd	r0, r1, [r4, #72]	; 0x48
    aaae:	bl	30c00 <pretty_size_mode@@Base>
    aab2:	blx	8940 <strlen@plt>
    aab6:	ldr	r3, [pc, #840]	; (ae00 <btrfs_show_qgroups@@Base+0x600>)
    aab8:	add	r3, pc
    aaba:	ldr	r2, [r3, #56]	; 0x38
    aabc:	cmp	r0, r2
    aabe:	ble.n	aa80 <btrfs_show_qgroups@@Base+0x280>
    aac0:	str	r0, [r3, #56]	; 0x38
    aac2:	b.n	aa80 <btrfs_show_qgroups@@Base+0x280>
    aac4:	mov	r2, r5
    aac6:	ldrd	r0, r1, [r4, #96]	; 0x60
    aaca:	bl	30c00 <pretty_size_mode@@Base>
    aace:	blx	8940 <strlen@plt>
    aad2:	ldr	r3, [pc, #816]	; (ae04 <btrfs_show_qgroups@@Base+0x604>)
    aad4:	add	r3, pc
    aad6:	ldr	r2, [r3, #76]	; 0x4c
    aad8:	cmp	r0, r2
    aada:	ble.n	aa80 <btrfs_show_qgroups@@Base+0x280>
    aadc:	str	r0, [r3, #76]	; 0x4c
    aade:	b.n	aa80 <btrfs_show_qgroups@@Base+0x280>
    aae0:	mov	r2, r5
    aae2:	ldrd	r0, r1, [r4, #104]	; 0x68
    aae6:	bl	30c00 <pretty_size_mode@@Base>
    aaea:	blx	8940 <strlen@plt>
    aaee:	ldr	r3, [pc, #792]	; (ae08 <btrfs_show_qgroups@@Base+0x608>)
    aaf0:	add	r3, pc
    aaf2:	ldr	r2, [r3, #96]	; 0x60
    aaf4:	cmp	r0, r2
    aaf6:	ble.n	aa80 <btrfs_show_qgroups@@Base+0x280>
    aaf8:	str	r0, [r3, #96]	; 0x60
    aafa:	b.n	aa80 <btrfs_show_qgroups@@Base+0x280>
    aafc:	ldr	r3, [pc, #780]	; (ae0c <btrfs_show_qgroups@@Base+0x60c>)
    aafe:	mov	r9, r4
    ab00:	ldr.w	r6, [r9, #128]!
    ab04:	add.w	sl, sp, #56	; 0x38
    ab08:	add	r3, pc
    ab0a:	movs	r5, #0
    ab0c:	cmp	r9, r6
    ab0e:	bne.n	ab1e <btrfs_show_qgroups@@Base+0x31e>
    ab10:	ldr	r3, [pc, #764]	; (ae10 <btrfs_show_qgroups@@Base+0x610>)
    ab12:	add	r3, pc
    ab14:	ldr	r2, [r3, #116]	; 0x74
    ab16:	cmp	r5, r2
    ab18:	ble.n	aa80 <btrfs_show_qgroups@@Base+0x280>
    ab1a:	str	r5, [r3, #116]	; 0x74
    ab1c:	b.n	aa80 <btrfs_show_qgroups@@Base+0x280>
    ab1e:	ldr	r2, [r6, #16]
    ab20:	str	r3, [sp, #40]	; 0x28
    ab22:	ldrd	r0, r2, [r2, #40]	; 0x28
    ab26:	uxth	r1, r2
    ab28:	lsrs	r2, r2, #16
    ab2a:	strd	r0, r1, [sp, #8]
    ab2e:	movs	r1, #1
    ab30:	str	r2, [sp, #0]
    ab32:	mov	r0, sl
    ab34:	movs	r2, #0
    ab36:	str	r2, [sp, #4]
    ab38:	movs	r2, #100	; 0x64
    ab3a:	blx	8994 <__sprintf_chk@plt>
    ab3e:	ldr	r6, [r6, #0]
    ab40:	ldr	r3, [sp, #40]	; 0x28
    ab42:	cmp	r6, r9
    ab44:	add	r5, r0
    ab46:	it	ne
    ab48:	addne	r5, #1
    ab4a:	b.n	ab0c <btrfs_show_qgroups@@Base+0x30c>
    ab4c:	mov	r9, r4
    ab4e:	ldr	r3, [pc, #708]	; (ae14 <btrfs_show_qgroups@@Base+0x614>)
    ab50:	ldr.w	r5, [r9, #136]!
    ab54:	add.w	sl, sp, #56	; 0x38
    ab58:	add	r3, pc
    ab5a:	movs	r6, #0
    ab5c:	subs	r5, #8
    ab5e:	add.w	r2, r5, #8
    ab62:	cmp	r9, r2
    ab64:	bne.n	ab78 <btrfs_show_qgroups@@Base+0x378>
    ab66:	ldr	r3, [pc, #688]	; (ae18 <btrfs_show_qgroups@@Base+0x618>)
    ab68:	add	r3, pc
    ab6a:	ldr.w	r2, [r3, #136]	; 0x88
    ab6e:	cmp	r6, r2
    ab70:	it	gt
    ab72:	strgt.w	r6, [r3, #136]	; 0x88
    ab76:	b.n	aa80 <btrfs_show_qgroups@@Base+0x280>
    ab78:	ldr	r2, [r5, #20]
    ab7a:	str	r3, [sp, #40]	; 0x28
    ab7c:	ldrd	r0, r2, [r2, #40]	; 0x28
    ab80:	uxth	r1, r2
    ab82:	lsrs	r2, r2, #16
    ab84:	strd	r0, r1, [sp, #8]
    ab88:	movs	r1, #1
    ab8a:	str	r2, [sp, #0]
    ab8c:	mov	r0, sl
    ab8e:	movs	r2, #0
    ab90:	str	r2, [sp, #4]
    ab92:	movs	r2, #100	; 0x64
    ab94:	blx	8994 <__sprintf_chk@plt>
    ab98:	ldr	r2, [r5, #8]
    ab9a:	ldr	r5, [r5, #8]
    ab9c:	cmp	r2, r9
    ab9e:	ldr	r3, [sp, #40]	; 0x28
    aba0:	sub.w	r5, r5, #8
    aba4:	add	r6, r0
    aba6:	it	ne
    aba8:	addne	r6, #1
    abaa:	b.n	ab5e <btrfs_show_qgroups@@Base+0x35e>
    abac:	mov	r1, r7
    abae:	b.n	a892 <btrfs_show_qgroups@@Base+0x92>
    abb0:	movs	r0, #45	; 0x2d
    abb2:	blx	89cc <putchar@plt+0x4>
    abb6:	b.n	a8ca <btrfs_show_qgroups@@Base+0xca>
    abb8:	movs	r0, #32
    abba:	blx	89cc <putchar@plt+0x4>
    abbe:	b.n	a8d8 <btrfs_show_qgroups@@Base+0xd8>
    abc0:	blx	8940 <strlen@plt>
    abc4:	subs	r5, r5, r0
    abc6:	subs	r5, #1
    abc8:	bcs.n	abe0 <btrfs_show_qgroups@@Base+0x3e0>
    abca:	ldr	r0, [r4, #0]
    abcc:	blx	8940 <strlen@plt>
    abd0:	mov	r5, r0
    abd2:	subs	r5, #1
    abd4:	bcc.w	a8de <btrfs_show_qgroups@@Base+0xde>
    abd8:	movs	r0, #45	; 0x2d
    abda:	blx	89cc <putchar@plt+0x4>
    abde:	b.n	abd2 <btrfs_show_qgroups@@Base+0x3d2>
    abe0:	movs	r0, #32
    abe2:	blx	89cc <putchar@plt+0x4>
    abe6:	b.n	abc6 <btrfs_show_qgroups@@Base+0x3c6>
    abe8:	ldr	r3, [pc, #560]	; (ae1c <btrfs_show_qgroups@@Base+0x61c>)
    abea:	mov.w	r9, #0
    abee:	ldr	r7, [sp, #20]
    abf0:	add	r3, pc
    abf2:	vmov	s16, r3
    abf6:	ldr	r3, [r7, #8]
    abf8:	cmp	r3, #0
    abfa:	beq.w	ad5a <btrfs_show_qgroups@@Base+0x55a>
    abfe:	movs	r3, #1
    ac00:	vmov	r1, s17
    ac04:	vmov	r0, s16
    ac08:	movs	r2, #217	; 0xd9
    ac0a:	bl	9f78 <btrfs_find_free_objectid@@Base+0x5a8>
    ac0e:	add.w	r3, r9, #4294967295	; 0xffffffff
    ac12:	ldrd	r6, r5, [r7, #12]
    ac16:	cmp	r3, #5
    ac18:	bhi.n	ac24 <btrfs_show_qgroups@@Base+0x424>
    ac1a:	tbb	[pc, r3]
    ac1e:	subs	r7, r2, #0
    ac20:	ldr	r5, [r2, #84]	; 0x54
    ac22:	strh	r3, [r4, #16]
    ac24:	ldrd	r1, r2, [r4, #28]
    ac28:	movs	r0, #1
    ac2a:	uxth	r3, r2
    ac2c:	strd	r1, r3, [sp]
    ac30:	ldr	r1, [pc, #492]	; (ae20 <btrfs_show_qgroups@@Base+0x620>)
    ac32:	lsrs	r2, r2, #16
    ac34:	movs	r3, #0
    ac36:	add	r1, pc
    ac38:	blx	8a30 <__printf_chk@plt+0x4>
    ac3c:	mov	r1, r0
    ac3e:	movs	r0, #0
    ac40:	bl	9da4 <btrfs_find_free_objectid@@Base+0x3d4>
    ac44:	movs	r0, #32
    ac46:	blx	89cc <putchar@plt+0x4>
    ac4a:	b.n	ad5a <btrfs_show_qgroups@@Base+0x55a>
    ac4c:	ldrd	r0, r1, [r4, #44]	; 0x2c
    ac50:	mov	r3, r5
    ac52:	mov	r2, r6
    ac54:	bl	9dc8 <btrfs_find_free_objectid@@Base+0x3f8>
    ac58:	b.n	ac44 <btrfs_show_qgroups@@Base+0x444>
    ac5a:	ldrd	r0, r1, [r4, #60]	; 0x3c
    ac5e:	mov	r3, r5
    ac60:	mov	r2, r6
    ac62:	b.n	ac54 <btrfs_show_qgroups@@Base+0x454>
    ac64:	ldr.w	sl, [pc, #444]	; ae24 <btrfs_show_qgroups@@Base+0x624>
    ac68:	mov	r6, r4
    ac6a:	ldr.w	fp, [pc, #444]	; ae28 <btrfs_show_qgroups@@Base+0x628>
    ac6e:	movs	r5, #0
    ac70:	ldr.w	r8, [r6, #116]!
    ac74:	add	sl, pc
    ac76:	add	fp, pc
    ac78:	cmp	r6, r8
    ac7a:	bne.n	ac94 <btrfs_show_qgroups@@Base+0x494>
    ac7c:	ldr	r3, [r4, #116]	; 0x74
    ac7e:	cmp	r6, r3
    ac80:	bne.n	ac8e <btrfs_show_qgroups@@Base+0x48e>
    ac82:	ldr	r1, [pc, #424]	; (ae2c <btrfs_show_qgroups@@Base+0x62c>)
    ac84:	movs	r0, #1
    ac86:	add	r1, pc
    ac88:	blx	8a30 <__printf_chk@plt+0x4>
    ac8c:	add	r5, r0
    ac8e:	mov	r1, r5
    ac90:	movs	r0, #5
    ac92:	b.n	ac40 <btrfs_show_qgroups@@Base+0x440>
    ac94:	ldr.w	r3, [r8, #16]
    ac98:	movs	r0, #1
    ac9a:	ldrd	r1, r2, [r3, #40]	; 0x28
    ac9e:	uxth	r3, r2
    aca0:	lsrs	r2, r2, #16
    aca2:	strd	r1, r3, [sp]
    aca6:	movs	r3, #0
    aca8:	mov	r1, sl
    acaa:	blx	8a30 <__printf_chk@plt+0x4>
    acae:	ldr.w	r3, [r8]
    acb2:	cmp	r3, r6
    acb4:	add	r5, r0
    acb6:	beq.n	acc2 <btrfs_show_qgroups@@Base+0x4c2>
    acb8:	mov	r1, fp
    acba:	movs	r0, #1
    acbc:	blx	8a30 <__printf_chk@plt+0x4>
    acc0:	add	r5, r0
    acc2:	ldr.w	r8, [r8]
    acc6:	b.n	ac78 <btrfs_show_qgroups@@Base+0x478>
    acc8:	ldr	r3, [r4, #76]	; 0x4c
    acca:	and.w	r3, r3, #1
    acce:	str	r3, [sp, #24]
    acd0:	movs	r3, #0
    acd2:	str	r3, [sp, #28]
    acd4:	ldrd	r2, r3, [sp, #24]
    acd8:	orrs	r3, r2
    acda:	beq.n	ace6 <btrfs_show_qgroups@@Base+0x4e6>
    acdc:	ldrd	r0, r1, [r4, #84]	; 0x54
    ace0:	mov	r3, r5
    ace2:	mov	r2, r6
    ace4:	b.n	ac54 <btrfs_show_qgroups@@Base+0x454>
    ace6:	ldr	r3, [pc, #328]	; (ae30 <btrfs_show_qgroups@@Base+0x630>)
    ace8:	mov	r2, r5
    acea:	ldr	r1, [pc, #328]	; (ae34 <btrfs_show_qgroups@@Base+0x634>)
    acec:	add	r3, pc
    acee:	add	r1, pc
    acf0:	movs	r0, #1
    acf2:	blx	8a30 <__printf_chk@plt+0x4>
    acf6:	b.n	ac44 <btrfs_show_qgroups@@Base+0x444>
    acf8:	ldr	r3, [r4, #76]	; 0x4c
    acfa:	and.w	r3, r3, #2
    acfe:	str	r3, [sp, #32]
    ad00:	movs	r3, #0
    ad02:	str	r3, [sp, #36]	; 0x24
    ad04:	ldrd	r2, r3, [sp, #32]
    ad08:	orrs	r3, r2
    ad0a:	beq.n	ad16 <btrfs_show_qgroups@@Base+0x516>
    ad0c:	ldrd	r0, r1, [r4, #92]	; 0x5c
    ad10:	mov	r3, r5
    ad12:	mov	r2, r6
    ad14:	b.n	ac54 <btrfs_show_qgroups@@Base+0x454>
    ad16:	ldr	r3, [pc, #288]	; (ae38 <btrfs_show_qgroups@@Base+0x638>)
    ad18:	mov	r2, r5
    ad1a:	ldr	r1, [pc, #288]	; (ae3c <btrfs_show_qgroups@@Base+0x63c>)
    ad1c:	add	r3, pc
    ad1e:	add	r1, pc
    ad20:	b.n	acf0 <btrfs_show_qgroups@@Base+0x4f0>
    ad22:	mov	r8, r4
    ad24:	ldr.w	sl, [pc, #280]	; ae40 <btrfs_show_qgroups@@Base+0x640>
    ad28:	ldr.w	r5, [r8, #124]!
    ad2c:	movs	r6, #0
    ad2e:	ldr.w	fp, [pc, #276]	; ae44 <btrfs_show_qgroups@@Base+0x644>
    ad32:	add	sl, pc
    ad34:	subs	r5, #8
    ad36:	add	fp, pc
    ad38:	add.w	r3, r5, #8
    ad3c:	cmp	r8, r3
    ad3e:	bne.n	ad78 <btrfs_show_qgroups@@Base+0x578>
    ad40:	ldr	r3, [r4, #124]	; 0x7c
    ad42:	cmp	r8, r3
    ad44:	bne.n	ad52 <btrfs_show_qgroups@@Base+0x552>
    ad46:	ldr	r1, [pc, #256]	; (ae48 <btrfs_show_qgroups@@Base+0x648>)
    ad48:	movs	r0, #1
    ad4a:	add	r1, pc
    ad4c:	blx	8a30 <__printf_chk@plt+0x4>
    ad50:	add	r6, r0
    ad52:	mov	r1, r6
    ad54:	movs	r0, #6
    ad56:	bl	9da4 <btrfs_find_free_objectid@@Base+0x3d4>
    ad5a:	add.w	r9, r9, #1
    ad5e:	adds	r7, #20
    ad60:	cmp.w	r9, #7
    ad64:	bne.w	abf6 <btrfs_show_qgroups@@Base+0x3f6>
    ad68:	movs	r0, #10
    ad6a:	blx	89cc <putchar@plt+0x4>
    ad6e:	mov	r0, r4
    ad70:	bl	13c66 <rb_next@@Base>
    ad74:	mov	r4, r0
    ad76:	b.n	a906 <btrfs_show_qgroups@@Base+0x106>
    ad78:	ldr	r3, [r5, #20]
    ad7a:	movs	r0, #1
    ad7c:	ldrd	r1, r2, [r3, #40]	; 0x28
    ad80:	uxth	r3, r2
    ad82:	lsrs	r2, r2, #16
    ad84:	strd	r1, r3, [sp]
    ad88:	movs	r3, #0
    ad8a:	mov	r1, sl
    ad8c:	blx	8a30 <__printf_chk@plt+0x4>
    ad90:	ldr	r3, [r5, #8]
    ad92:	cmp	r3, r8
    ad94:	add	r6, r0
    ad96:	beq.n	ada2 <btrfs_show_qgroups@@Base+0x5a2>
    ad98:	mov	r1, fp
    ad9a:	movs	r0, #1
    ad9c:	blx	8a30 <__printf_chk@plt+0x4>
    ada0:	add	r6, r0
    ada2:	ldr	r5, [r5, #8]
    ada4:	subs	r5, #8
    ada6:	b.n	ad38 <btrfs_show_qgroups@@Base+0x538>
    ada8:	bge.w	a9bc <btrfs_show_qgroups@@Base+0x1bc>
    adac:	ldr	r5, [r5, #0]
    adae:	adds	r5, #8
    adb0:	mov	r3, r6
    adb2:	b.n	a960 <btrfs_show_qgroups@@Base+0x160>
    adb4:	ldr	r0, [sp, #16]
    adb6:	add	sp, #164	; 0xa4
    adb8:	vpop	{d8}
    adbc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    adc0:	lsls	r0, r5, #8
    adc2:	movs	r0, r0
    adc4:	add	r5, pc, #408	; (adr r5, af60 <qgroup_inherit_add_group@@Base+0x42>)
    adc6:	movs	r5, r0
    adc8:	bl	ffcc6dca <__bss_end__@@Base+0xffc60ad6>
    adcc:	bl	ffc54dce <__bss_end__@@Base+0xffbeeada>
    add0:			; <UNDEFINED> instruction: 0xfa800002
    add4:	add	r7, pc, #584	; (adr r7, b020 <qgroup_inherit_add_copy@@Base+0xb0>)
    add6:	movs	r5, r0
    add8:	vld1.8	{d0[0]}, [r4], r2
    addc:			; <UNDEFINED> instruction: 0xf6fb0002
    ade0:	ldr??.w	r0, [ip, #2]
    ade4:	add	r4, pc, #408	; (adr r4, af80 <qgroup_inherit_add_copy@@Base+0x10>)
    ade6:	movs	r5, r0
    ade8:	bl	26cdea <__bss_end__@@Base+0x206af6>
    adec:	strb.w	r0, [r5, r2]
    adf0:	add	r6, pc, #96	; (adr r6, ae54 <btrfs_qgroup_parse_sort_string@@Base+0x8>)
    adf2:	movs	r5, r0
    adf4:			; <UNDEFINED> instruction: 0xf6390002
    adf8:	add	r5, pc, #568	; (adr r5, b034 <qgroup_inherit_add_copy@@Base+0xc4>)
    adfa:	movs	r5, r0
    adfc:	add	r5, pc, #416	; (adr r5, afa0 <qgroup_inherit_add_copy@@Base+0x30>)
    adfe:	movs	r5, r0
    ae00:	add	r5, pc, #304	; (adr r5, af34 <qgroup_inherit_add_group@@Base+0x16>)
    ae02:	movs	r5, r0
    ae04:	add	r5, pc, #192	; (adr r5, aec8 <btrfs_qgroup_parse_sort_string@@Base+0x7c>)
    ae06:	movs	r5, r0
    ae08:	add	r5, pc, #80	; (adr r5, ae5c <btrfs_qgroup_parse_sort_string@@Base+0x10>)
    ae0a:	movs	r5, r0
    ae0c:			; <UNDEFINED> instruction: 0xf5970002
    ae10:	add	r4, pc, #968	; (adr r4, b1dc <list_sort@@Base+0x150>)
    ae12:	movs	r5, r0
    ae14:	adc.w	r0, r7, #8519680	; 0x820000
    ae18:	add	r4, pc, #624	; (adr r4, b08c <list_sort@@Base>)
    ae1a:	movs	r5, r0
    ae1c:			; <UNDEFINED> instruction: 0xf5ff0002
    ae20:	orn	r0, r9, #8519680	; 0x820000
    ae24:	bic.w	r0, fp, #8519680	; 0x820000
    ae28:	sub.w	r0, r7, #8519680	; 0x820000
    ae2c:			; <UNDEFINED> instruction: 0xf5990002
    ae30:	lsrs	r5, r4, #8
    ae32:	movs	r3, r0
    ae34:			; <UNDEFINED> instruction: 0xf2850002
    ae38:	lsrs	r5, r6, #7
    ae3a:	movs	r3, r0
    ae3c:			; <UNDEFINED> instruction: 0xf2550002
    ae40:	bfi	r0, sp, #0, #3
    ae44:			; <UNDEFINED> instruction: 0xf4e70002
    ae48:			; <UNDEFINED> instruction: 0xf4d50002

0000ae4c <btrfs_qgroup_parse_sort_string@@Base>:
    ae4c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ae50:	mov	r7, r1
    ae52:	blx	86f0 <strdup@plt+0x4>
    ae56:	mov	r5, r0
    ae58:	cmp	r0, #0
    ae5a:	beq.n	aee0 <btrfs_qgroup_parse_sort_string@@Base+0x94>
    ae5c:	ldr	r1, [pc, #160]	; (af00 <btrfs_qgroup_parse_sort_string@@Base+0xb4>)
    ae5e:	ldr.w	r8, [pc, #164]	; af04 <btrfs_qgroup_parse_sort_string@@Base+0xb8>
    ae62:	add	r1, pc
    ae64:	ldr.w	r9, [pc, #160]	; af08 <btrfs_qgroup_parse_sort_string@@Base+0xbc>
    ae68:	blx	8a94 <strtok@plt>
    ae6c:	add	r8, pc
    ae6e:	add	r9, pc
    ae70:	mov	r4, r0
    ae72:	cbz	r4, aea2 <btrfs_qgroup_parse_sort_string@@Base+0x56>
    ae74:	add.w	fp, r8, #160	; 0xa0
    ae78:	add.w	sl, r4, #1
    ae7c:	mov	r6, fp
    ae7e:	b.n	ae98 <btrfs_qgroup_parse_sort_string@@Base+0x4c>
    ae80:	mov	r1, r4
    ae82:	mov	r0, r3
    ae84:	str	r3, [sp, #4]
    ae86:	blx	85ac <strcmp@plt>
    ae8a:	cbz	r0, aeb0 <btrfs_qgroup_parse_sort_string@@Base+0x64>
    ae8c:	ldr	r3, [sp, #4]
    ae8e:	mov	r1, sl
    ae90:	mov	r0, r3
    ae92:	blx	85ac <strcmp@plt>
    ae96:	cbz	r0, aeb0 <btrfs_qgroup_parse_sort_string@@Base+0x64>
    ae98:	ldr.w	r3, [r6], #4
    ae9c:	cmp	r3, #0
    ae9e:	bne.n	ae80 <btrfs_qgroup_parse_sort_string@@Base+0x34>
    aea0:	movs	r4, #1
    aea2:	mov	r0, r5
    aea4:	blx	8620 <free@plt+0x4>
    aea8:	mov	r0, r4
    aeaa:	add	sp, #12
    aeac:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    aeb0:	ldrb	r3, [r4, #0]
    aeb2:	cmp	r3, #43	; 0x2b
    aeb4:	bne.n	aebc <btrfs_qgroup_parse_sort_string@@Base+0x70>
    aeb6:	adds	r4, #1
    aeb8:	movs	r2, #0
    aeba:	b.n	aec4 <btrfs_qgroup_parse_sort_string@@Base+0x78>
    aebc:	cmp	r3, #45	; 0x2d
    aebe:	bne.n	aeb8 <btrfs_qgroup_parse_sort_string@@Base+0x6c>
    aec0:	adds	r4, #1
    aec2:	movs	r2, #1
    aec4:	movs	r6, #0
    aec6:	ldr.w	r1, [fp], #4
    aeca:	mov	r0, r4
    aecc:	str	r2, [sp, #4]
    aece:	blx	85ac <strcmp@plt>
    aed2:	ldr	r2, [sp, #4]
    aed4:	mov	sl, r0
    aed6:	cbz	r0, aee6 <btrfs_qgroup_parse_sort_string@@Base+0x9a>
    aed8:	adds	r6, #1
    aeda:	cmp	r6, #5
    aedc:	bne.n	aec6 <btrfs_qgroup_parse_sort_string@@Base+0x7a>
    aede:	b.n	aea0 <btrfs_qgroup_parse_sort_string@@Base+0x54>
    aee0:	mvn.w	r4, #11
    aee4:	b.n	aea8 <btrfs_qgroup_parse_sort_string@@Base+0x5c>
    aee6:	mov	r1, r6
    aee8:	mov	r0, r7
    aeea:	bl	a4fc <btrfs_qgroup_setup_comparer@@Base>
    aeee:	subs	r4, r0, #0
    aef0:	blt.n	aea2 <btrfs_qgroup_parse_sort_string@@Base+0x56>
    aef2:	mov	r1, r9
    aef4:	mov	r0, sl
    aef6:	blx	8a94 <strtok@plt>
    aefa:	mov	r4, r0
    aefc:	b.n	ae72 <btrfs_qgroup_parse_sort_string@@Base+0x26>
    aefe:	nop
    af00:			; <UNDEFINED> instruction: 0xf3bb0002
    af04:	add	r1, pc, #608	; (adr r1, b168 <list_sort@@Base+0xdc>)
    af06:	movs	r5, r0
    af08:	usat16	r0, #2, pc

0000af0c <qgroup_inherit_size@@Base>:
    af0c:	ldr	r3, [r0, #24]
    af0e:	ldr	r2, [r0, #16]
    af10:	adds	r2, r3, r2
    af12:	ldr	r3, [r0, #8]
    af14:	adds	r3, #9
    af16:	add.w	r0, r3, r2, lsl #1
    af1a:	lsls	r0, r0, #3
    af1c:	bx	lr

0000af1e <qgroup_inherit_add_group@@Base>:
    af1e:	push	{r4, r5, r6, lr}
    af20:	mov	r6, r0
    af22:	mov	r0, r1
    af24:	bl	310b4 <parse_qgroupid@@Base>
    af28:	mov	r4, r0
    af2a:	mov	r5, r1
    af2c:	orrs.w	r3, r4, r5
    af30:	bne.n	af40 <qgroup_inherit_add_group@@Base+0x22>
    af32:	ldr	r0, [pc, #56]	; (af6c <qgroup_inherit_add_group@@Base+0x4e>)
    af34:	add	r0, pc
    af36:	bl	17b7c <__btrfs_error@@Base>
    af3a:	mvn.w	r0, #21
    af3e:	pop	{r4, r5, r6, pc}
    af40:	ldr	r2, [r6, #0]
    af42:	cbz	r2, af46 <qgroup_inherit_add_group@@Base+0x28>
    af44:	ldr	r2, [r2, #8]
    af46:	movs	r1, #1
    af48:	mov	r0, r6
    af4a:	bl	9de8 <btrfs_find_free_objectid@@Base+0x418>
    af4e:	cmp	r0, #0
    af50:	bne.n	af3e <qgroup_inherit_add_group@@Base+0x20>
    af52:	ldr	r3, [r6, #0]
    af54:	ldrd	r2, r1, [r3, #8]
    af58:	adds	r6, r2, #1
    af5a:	adc.w	r1, r1, #0
    af5e:	strd	r6, r1, [r3, #8]
    af62:	add.w	r3, r3, r2, lsl #3
    af66:	strd	r4, r5, [r3, #72]	; 0x48
    af6a:	b.n	af3e <qgroup_inherit_add_group@@Base+0x20>
    af6c:			; <UNDEFINED> instruction: 0xf2ef0002

0000af70 <qgroup_inherit_add_copy@@Base>:
    af70:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    af74:	mov	r6, r1
    af76:	mov	sl, r0
    af78:	movs	r1, #58	; 0x3a
    af7a:	mov	r0, r6
    af7c:	mov	r5, r2
    af7e:	blx	894c <strchr@plt>
    af82:	mov	r4, r0
    af84:	cbnz	r0, af96 <qgroup_inherit_add_copy@@Base+0x26>
    af86:	ldr	r0, [pc, #152]	; (b020 <qgroup_inherit_add_copy@@Base+0xb0>)
    af88:	add	r0, pc
    af8a:	bl	17b7c <__btrfs_error@@Base>
    af8e:	mvn.w	r0, #21
    af92:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    af96:	mov	r8, r0
    af98:	movs	r3, #0
    af9a:	mov	r0, r6
    af9c:	strb.w	r3, [r8], #1
    afa0:	bl	310b4 <parse_qgroupid@@Base>
    afa4:	mov	r6, r0
    afa6:	mov	r0, r8
    afa8:	mov	r7, r1
    afaa:	bl	310b4 <parse_qgroupid@@Base>
    afae:	movs	r3, #58	; 0x3a
    afb0:	strb	r3, [r4, #0]
    afb2:	orrs.w	r3, r6, r7
    afb6:	mov	r8, r0
    afb8:	mov	r9, r1
    afba:	beq.n	af86 <qgroup_inherit_add_copy@@Base+0x16>
    afbc:	orrs.w	r3, r8, r9
    afc0:	beq.n	af86 <qgroup_inherit_add_copy@@Base+0x16>
    afc2:	ldr.w	r4, [sl]
    afc6:	cbz	r4, afd2 <qgroup_inherit_add_copy@@Base+0x62>
    afc8:	ldr	r2, [r4, #16]
    afca:	ldr	r4, [r4, #8]
    afcc:	muls	r2, r5
    afce:	add.w	r4, r4, r2, lsl #1
    afd2:	mov	r2, r4
    afd4:	movs	r1, #2
    afd6:	mov	r0, sl
    afd8:	bl	9de8 <btrfs_find_free_objectid@@Base+0x418>
    afdc:	cmp	r0, #0
    afde:	bne.n	af92 <qgroup_inherit_add_copy@@Base+0x22>
    afe0:	ldr.w	r3, [sl]
    afe4:	add.w	r3, r3, r4, lsl #3
    afe8:	strd	r6, r7, [r3, #72]	; 0x48
    afec:	ldr.w	r2, [sl]
    aff0:	add.w	r2, r2, r4, lsl #3
    aff4:	strd	r8, r9, [r2, #80]	; 0x50
    aff8:	ldr.w	r3, [sl]
    affc:	cbnz	r5, b00e <qgroup_inherit_add_copy@@Base+0x9e>
    affe:	ldrd	r2, r1, [r3, #16]
    b002:	adds	r2, #1
    b004:	adc.w	r1, r1, #0
    b008:	strd	r2, r1, [r3, #16]
    b00c:	b.n	af92 <qgroup_inherit_add_copy@@Base+0x22>
    b00e:	ldrd	r2, r1, [r3, #24]
    b012:	adds	r2, #1
    b014:	adc.w	r1, r1, #0
    b018:	strd	r2, r1, [r3, #24]
    b01c:	b.n	af92 <qgroup_inherit_add_copy@@Base+0x22>
    b01e:	nop
    b020:	movt	r0, #53250	; 0xd002
    b024:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
    b028:	mov	r5, r2
    b02a:	ldr	r2, [pc, #84]	; (b080 <qgroup_inherit_add_copy@@Base+0x110>)
    b02c:	mov	r4, r3
    b02e:	ldr	r3, [pc, #84]	; (b084 <qgroup_inherit_add_copy@@Base+0x114>)
    b030:	add	r6, sp, #4
    b032:	add	r2, pc
    b034:	mov	r7, r0
    b036:	mov	r8, r1
    b038:	ldr	r3, [r2, r3]
    b03a:	ldr	r3, [r3, #0]
    b03c:	str	r3, [sp, #12]
    b03e:	mov.w	r3, #0
    b042:	cbz	r5, b048 <qgroup_inherit_add_copy@@Base+0xd8>
    b044:	cbnz	r4, b060 <qgroup_inherit_add_copy@@Base+0xf0>
    b046:	mov	r4, r5
    b048:	ldr	r2, [pc, #60]	; (b088 <qgroup_inherit_add_copy@@Base+0x118>)
    b04a:	ldr	r3, [pc, #56]	; (b084 <qgroup_inherit_add_copy@@Base+0x114>)
    b04c:	add	r2, pc
    b04e:	str	r4, [r6, #0]
    b050:	ldr	r0, [sp, #4]
    b052:	ldr	r3, [r2, r3]
    b054:	ldr	r2, [r3, #0]
    b056:	ldr	r3, [sp, #12]
    b058:	eors	r2, r3
    b05a:	beq.n	b078 <qgroup_inherit_add_copy@@Base+0x108>
    b05c:	blx	8708 <__stack_chk_fail@plt>
    b060:	mov	r2, r4
    b062:	mov	r1, r5
    b064:	mov	r0, r7
    b066:	blx	r8
    b068:	cmp	r0, #0
    b06a:	itete	le
    b06c:	strle	r5, [r6, #0]
    b06e:	strgt	r4, [r6, #0]
    b070:	ldrle	r5, [r5, #0]
    b072:	ldrgt	r4, [r4, #0]
    b074:	ldr	r6, [r6, #0]
    b076:	b.n	b042 <qgroup_inherit_add_copy@@Base+0xd2>
    b078:	add	sp, #16
    b07a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    b07e:	nop
    b080:	ldr	r5, [sp, #312]	; 0x138
    b082:	movs	r5, r0
    b084:	lsls	r0, r5, #8
    b086:	movs	r0, r0
    b088:	ldr	r5, [sp, #208]	; 0xd0
    b08a:	movs	r5, r0

0000b08c <list_sort@@Base>:
    b08c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b090:	mov	r7, r2
    b092:	ldr	r2, [pc, #268]	; (b1a0 <list_sort@@Base+0x114>)
    b094:	sub	sp, #100	; 0x64
    b096:	ldr	r3, [pc, #268]	; (b1a4 <list_sort@@Base+0x118>)
    b098:	mov	r8, r0
    b09a:	add	r2, pc
    b09c:	mov	r4, r1
    b09e:	ldr	r3, [r2, r3]
    b0a0:	ldr	r3, [r3, #0]
    b0a2:	str	r3, [sp, #92]	; 0x5c
    b0a4:	mov.w	r3, #0
    b0a8:	ldr	r3, [r1, #0]
    b0aa:	cmp	r1, r3
    b0ac:	beq.n	b100 <list_sort@@Base+0x74>
    b0ae:	add.w	r9, sp, #8
    b0b2:	movs	r2, #84	; 0x54
    b0b4:	movs	r1, #0
    b0b6:	ldr.w	fp, [pc, #240]	; b1a8 <list_sort@@Base+0x11c>
    b0ba:	mov	r0, r9
    b0bc:	movs	r5, #0
    b0be:	blx	89bc <memset@plt+0x4>
    b0c2:	ldr	r3, [r4, #4]
    b0c4:	add	fp, pc
    b0c6:	str	r5, [r3, #0]
    b0c8:	ldr	r3, [r4, #0]
    b0ca:	cbnz	r3, b114 <list_sort@@Base+0x88>
    b0cc:	mov	r6, r3
    b0ce:	cmp	r6, r5
    b0d0:	bne.n	b162 <list_sort@@Base+0xd6>
    b0d2:	add	r2, sp, #96	; 0x60
    b0d4:	mov	r5, r4
    b0d6:	add.w	r6, r2, r6, lsl #2
    b0da:	ldr.w	r6, [r6, #-88]
    b0de:	cbz	r6, b0e6 <list_sort@@Base+0x5a>
    b0e0:	cmp	r3, #0
    b0e2:	bne.n	b176 <list_sort@@Base+0xea>
    b0e4:	mov	r3, r6
    b0e6:	str	r3, [r5, #0]
    b0e8:	ldr	r2, [r5, #0]
    b0ea:	mov	r0, r8
    b0ec:	mov	r1, r2
    b0ee:	blx	r7
    b0f0:	ldr	r3, [r5, #0]
    b0f2:	str	r5, [r3, #4]
    b0f4:	ldr	r5, [r5, #0]
    b0f6:	ldr	r3, [r5, #0]
    b0f8:	cmp	r3, #0
    b0fa:	bne.n	b0e8 <list_sort@@Base+0x5c>
    b0fc:	str	r4, [r5, #0]
    b0fe:	str	r5, [r4, #4]
    b100:	ldr	r2, [pc, #168]	; (b1ac <list_sort@@Base+0x120>)
    b102:	ldr	r3, [pc, #160]	; (b1a4 <list_sort@@Base+0x118>)
    b104:	add	r2, pc
    b106:	ldr	r3, [r2, r3]
    b108:	ldr	r2, [r3, #0]
    b10a:	ldr	r3, [sp, #92]	; 0x5c
    b10c:	eors	r2, r3
    b10e:	beq.n	b198 <list_sort@@Base+0x10c>
    b110:	blx	8708 <__stack_chk_fail@plt>
    b114:	ldr	r2, [r3, #0]
    b116:	mov	sl, r9
    b118:	str	r2, [sp, #0]
    b11a:	movs	r2, #0
    b11c:	mov	r6, r2
    b11e:	str	r2, [r3, #0]
    b120:	ldr.w	r2, [sl], #4
    b124:	cbnz	r2, b14a <list_sort@@Base+0xbe>
    b126:	cmp	r6, r5
    b128:	ble.n	b13c <list_sort@@Base+0xb0>
    b12a:	cmp	r6, #20
    b12c:	bne.n	b15e <list_sort@@Base+0xd2>
    b12e:	mov	r0, fp
    b130:	str	r3, [sp, #4]
    b132:	blx	8854 <puts@plt+0x4>
    b136:	ldr	r3, [sp, #4]
    b138:	movs	r5, #19
    b13a:	mov	r6, r5
    b13c:	add	r2, sp, #96	; 0x60
    b13e:	add.w	r6, r2, r6, lsl #2
    b142:	str.w	r3, [r6, #-88]
    b146:	ldr	r3, [sp, #0]
    b148:	b.n	b0ca <list_sort@@Base+0x3e>
    b14a:	mov	r1, r7
    b14c:	mov	r0, r8
    b14e:	bl	b024 <qgroup_inherit_add_copy@@Base+0xb4>
    b152:	adds	r6, #1
    b154:	movs	r2, #0
    b156:	str.w	r2, [sl, #-4]
    b15a:	mov	r3, r0
    b15c:	b.n	b120 <list_sort@@Base+0x94>
    b15e:	mov	r5, r6
    b160:	b.n	b13c <list_sort@@Base+0xb0>
    b162:	ldr.w	r2, [r9, r6, lsl #2]
    b166:	cbz	r2, b172 <list_sort@@Base+0xe6>
    b168:	mov	r1, r7
    b16a:	mov	r0, r8
    b16c:	bl	b024 <qgroup_inherit_add_copy@@Base+0xb4>
    b170:	mov	r3, r0
    b172:	adds	r6, #1
    b174:	b.n	b0ce <list_sort@@Base+0x42>
    b176:	mov	r2, r3
    b178:	mov	r1, r6
    b17a:	mov	r0, r8
    b17c:	str	r3, [sp, #0]
    b17e:	blx	r7
    b180:	ldr	r3, [sp, #0]
    b182:	cmp	r0, #0
    b184:	itete	le
    b186:	strle	r6, [r5, #0]
    b188:	strgt	r3, [r5, #0]
    b18a:	strle	r5, [r6, #4]
    b18c:	strgt	r5, [r3, #4]
    b18e:	ite	le
    b190:	ldrle	r6, [r6, #0]
    b192:	ldrgt	r3, [r3, #0]
    b194:	ldr	r5, [r5, #0]
    b196:	b.n	b0de <list_sort@@Base+0x52>
    b198:	add	sp, #100	; 0x64
    b19a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b19e:	nop
    b1a0:	ldr	r4, [sp, #920]	; 0x398
    b1a2:	movs	r5, r0
    b1a4:	lsls	r0, r5, #8
    b1a6:	movs	r0, r0
    b1a8:			; <UNDEFINED> instruction: 0xf2970002
    b1ac:	ldr	r4, [sp, #496]	; 0x1f0
    b1ae:	movs	r5, r0
    b1b0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    b1b4:	mov	r8, r1
    b1b6:	ldr	r1, [pc, #392]	; (b340 <list_sort@@Base+0x2b4>)
    b1b8:	mov	r5, r2
    b1ba:	ldr	r2, [pc, #392]	; (b344 <list_sort@@Base+0x2b8>)
    b1bc:	subs	r4, r3, #0
    b1be:	add	r1, pc
    b1c0:	sub	sp, #24
    b1c2:	mov.w	r9, #0
    b1c6:	mov	r0, r8
    b1c8:	ldr	r2, [r1, r2]
    b1ca:	add	r1, sp, #16
    b1cc:	ldr.w	sl, [pc, #376]	; b348 <list_sort@@Base+0x2bc>
    b1d0:	ldr	r2, [r2, #0]
    b1d2:	str	r2, [sp, #20]
    b1d4:	mov.w	r2, #0
    b1d8:	ite	ne
    b1da:	movne	r2, #2
    b1dc:	moveq	r2, r9
    b1de:	str.w	r9, [sp, #16]
    b1e2:	bl	3122c <open_file_or_dir3@@Base>
    b1e6:	add	sl, pc
    b1e8:	adds	r3, r0, #1
    b1ea:	mov	r7, r0
    b1ec:	bne.n	b232 <list_sort@@Base+0x1a6>
    b1ee:	blx	897c <__errno_location@plt>
    b1f2:	mov	r1, r8
    b1f4:	mov	r6, r9
    b1f6:	ldr	r4, [r0, #0]
    b1f8:	ldr	r0, [pc, #336]	; (b34c <list_sort@@Base+0x2c0>)
    b1fa:	negs	r4, r4
    b1fc:	add	r0, pc
    b1fe:	bl	17b7c <__btrfs_error@@Base>
    b202:	movs	r5, #0
    b204:	mov	r0, r6
    b206:	blx	8620 <free@plt+0x4>
    b20a:	mov	r0, r5
    b20c:	blx	8620 <free@plt+0x4>
    b210:	cmp	r7, #0
    b212:	blt.n	b21c <list_sort@@Base+0x190>
    b214:	ldr	r1, [sp, #16]
    b216:	mov	r0, r7
    b218:	bl	31460 <close_file_or_dir@@Base>
    b21c:	ldr	r2, [pc, #304]	; (b350 <list_sort@@Base+0x2c4>)
    b21e:	ldr	r3, [pc, #292]	; (b344 <list_sort@@Base+0x2b8>)
    b220:	add	r2, pc
    b222:	ldr	r3, [r2, r3]
    b224:	ldr	r2, [r3, #0]
    b226:	ldr	r3, [sp, #20]
    b228:	eors	r2, r3
    b22a:	beq.w	b338 <list_sort@@Base+0x2ac>
    b22e:	blx	8708 <__stack_chk_fail@plt>
    b232:	mov	r0, r5
    b234:	blx	8940 <strlen@plt>
    b238:	adds	r0, #7
    b23a:	blx	8870 <malloc@plt+0x4>
    b23e:	mov	r6, r0
    b240:	cmp	r0, #0
    b242:	beq.n	b32c <list_sort@@Base+0x2a0>
    b244:	ldr	r3, [pc, #268]	; (b354 <list_sort@@Base+0x2c8>)
    b246:	add	r3, pc
    b248:	ldr	r0, [r3, #0]
    b24a:	ldrh	r3, [r3, #4]
    b24c:	str	r0, [r6, #0]
    b24e:	mov	r0, r5
    b250:	strh	r3, [r6, #4]
    b252:	blx	8940 <strlen@plt>
    b256:	mov	r1, r5
    b258:	mov	r2, r0
    b25a:	adds	r0, r6, #6
    b25c:	blx	866c <memcpy@plt+0x4>
    b260:	mov	r0, r5
    b262:	blx	8940 <strlen@plt>
    b266:	add	r0, r6
    b268:	strb.w	r9, [r0, #6]
    b26c:	cbz	r4, b2b0 <list_sort@@Base+0x224>
    b26e:	ldr	r1, [pc, #232]	; (b358 <list_sort@@Base+0x2cc>)
    b270:	mov	r0, r4
    b272:	add	r1, pc
    b274:	blx	85ac <strcmp@plt>
    b278:	cbz	r0, b2a4 <list_sort@@Base+0x218>
    b27a:	ldr	r1, [pc, #224]	; (b35c <list_sort@@Base+0x2d0>)
    b27c:	mov	r0, r4
    b27e:	add	r1, pc
    b280:	blx	85ac <strcmp@plt>
    b284:	cbz	r0, b2aa <list_sort@@Base+0x21e>
    b286:	mov	r0, r4
    b288:	movs	r5, #0
    b28a:	blx	8940 <strlen@plt>
    b28e:	mov	r2, r4
    b290:	mov	r1, r6
    b292:	str	r5, [sp, #0]
    b294:	mov	r3, r0
    b296:	mov	r0, r7
    b298:	blx	8a08 <fsetxattr@plt>
    b29c:	cmp	r0, r5
    b29e:	blt.n	b2c0 <list_sort@@Base+0x234>
    b2a0:	mov	r4, r5
    b2a2:	b.n	b204 <list_sort@@Base+0x178>
    b2a4:	ldr	r4, [pc, #184]	; (b360 <list_sort@@Base+0x2d4>)
    b2a6:	add	r4, pc
    b2a8:	b.n	b286 <list_sort@@Base+0x1fa>
    b2aa:	ldr	r4, [pc, #184]	; (b364 <list_sort@@Base+0x2d8>)
    b2ac:	add	r4, pc
    b2ae:	b.n	b286 <list_sort@@Base+0x1fa>
    b2b0:	mov	r3, r4
    b2b2:	mov	r2, r4
    b2b4:	mov	r1, r6
    b2b6:	mov	r0, r7
    b2b8:	blx	8638 <fgetxattr@plt>
    b2bc:	subs	r3, r0, #0
    b2be:	bge.n	b2e4 <list_sort@@Base+0x258>
    b2c0:	blx	897c <__errno_location@plt>
    b2c4:	ldr	r3, [r0, #0]
    b2c6:	cmp	r3, #61	; 0x3d
    b2c8:	beq.n	b334 <list_sort@@Base+0x2a8>
    b2ca:	cbnz	r4, b2de <list_sort@@Base+0x252>
    b2cc:	ldr	r1, [pc, #152]	; (b368 <list_sort@@Base+0x2dc>)
    b2ce:	add	r1, pc
    b2d0:	ldr	r0, [pc, #152]	; (b36c <list_sort@@Base+0x2e0>)
    b2d2:	mov	r2, r8
    b2d4:	negs	r4, r3
    b2d6:	add	r0, pc
    b2d8:	bl	17b7c <__btrfs_error@@Base>
    b2dc:	b.n	b202 <list_sort@@Base+0x176>
    b2de:	ldr	r1, [pc, #144]	; (b370 <list_sort@@Base+0x2e4>)
    b2e0:	add	r1, pc
    b2e2:	b.n	b2d0 <list_sort@@Base+0x244>
    b2e4:	str	r3, [sp, #12]
    b2e6:	blx	8870 <malloc@plt+0x4>
    b2ea:	mov	r5, r0
    b2ec:	cbz	r0, b32e <list_sort@@Base+0x2a2>
    b2ee:	ldr	r3, [sp, #12]
    b2f0:	mov	r2, r0
    b2f2:	mov	r1, r6
    b2f4:	mov	r0, r7
    b2f6:	blx	8638 <fgetxattr@plt>
    b2fa:	ldr	r3, [sp, #12]
    b2fc:	cmp	r0, #0
    b2fe:	bge.n	b314 <list_sort@@Base+0x288>
    b300:	blx	897c <__errno_location@plt>
    b304:	mov	r1, r8
    b306:	ldr	r4, [r0, #0]
    b308:	ldr	r0, [pc, #104]	; (b374 <list_sort@@Base+0x2e8>)
    b30a:	negs	r4, r4
    b30c:	add	r0, pc
    b30e:	bl	17b7c <__btrfs_error@@Base>
    b312:	b.n	b204 <list_sort@@Base+0x178>
    b314:	ldr	r2, [pc, #96]	; (b378 <list_sort@@Base+0x2ec>)
    b316:	movs	r1, #1
    b318:	ldr.w	r2, [sl, r2]
    b31c:	str	r5, [sp, #0]
    b31e:	mov	r0, r2
    b320:	ldr	r2, [pc, #88]	; (b37c <list_sort@@Base+0x2f0>)
    b322:	ldr	r0, [r0, #0]
    b324:	add	r2, pc
    b326:	blx	8a64 <__fprintf_chk@plt+0x4>
    b32a:	b.n	b204 <list_sort@@Base+0x178>
    b32c:	mov	r5, r0
    b32e:	mvn.w	r4, #11
    b332:	b.n	b204 <list_sort@@Base+0x178>
    b334:	movs	r5, #0
    b336:	b.n	b2a0 <list_sort@@Base+0x214>
    b338:	mov	r0, r4
    b33a:	add	sp, #24
    b33c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    b340:	ldr	r3, [sp, #776]	; 0x308
    b342:	movs	r5, r0
    b344:	lsls	r0, r5, #8
    b346:	movs	r0, r0
    b348:	ldr	r3, [sp, #616]	; 0x268
    b34a:	movs	r5, r0
    b34c:	sub.w	r0, r1, #2
    b350:	ldr	r3, [sp, #384]	; 0x180
    b352:	movs	r5, r0
    b354:	sbc.w	r0, sp, #2
    b358:	adc.w	r0, r8, #2
    b35c:	lsls	r3, r2, #18
    b35e:	movs	r3, r0
    b360:	bfi	r0, r7, #0, #3
    b364:	bfi	r0, r1, #0, #3
    b368:			; <UNDEFINED> instruction: 0xf0cb0002
    b36c:			; <UNDEFINED> instruction: 0xf0e70002
    b370:	ldr	r0, [pc, #512]	; (b574 <list_sort@@Base+0x4e8>)
    b372:	movs	r3, r0
    b374:			; <UNDEFINED> instruction: 0xf0d50002
    b378:	lsls	r4, r3, #9
    b37a:	movs	r0, r0
    b37c:			; <UNDEFINED> instruction: 0xf0e20002
    b380:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    b382:	mov	r5, r1
    b384:	ldr	r1, [pc, #268]	; (b494 <list_sort@@Base+0x408>)
    b386:	mov	r4, r3
    b388:	ldr	r2, [pc, #268]	; (b498 <list_sort@@Base+0x40c>)
    b38a:	add	r1, pc
    b38c:	ldr	r2, [r1, r2]
    b38e:	ldr	r2, [r2, #0]
    b390:	str	r2, [sp, #12]
    b392:	mov.w	r2, #0
    b396:	cmp	r3, #0
    b398:	beq.n	b42a <list_sort@@Base+0x39e>
    b39a:	ldr	r1, [pc, #256]	; (b49c <list_sort@@Base+0x410>)
    b39c:	mov	r0, r3
    b39e:	add	r1, pc
    b3a0:	blx	85ac <strcmp@plt>
    b3a4:	cbnz	r0, b3ec <list_sort@@Base+0x360>
    b3a6:	movs	r3, #1
    b3a8:	strb.w	r3, [sp, #11]
    b3ac:	ldrb.w	r1, [sp, #11]
    b3b0:	mov	r0, r5
    b3b2:	bl	33268 <btrfs_util_set_subvolume_read_only@@Base>
    b3b6:	mov	r4, r0
    b3b8:	cbz	r0, b40c <list_sort@@Base+0x380>
    b3ba:	blx	897c <__errno_location@plt>
    b3be:	mov	r5, r0
    b3c0:	ldr	r0, [r0, #0]
    b3c2:	blx	8888 <strerror@plt>
    b3c6:	mov	r6, r0
    b3c8:	mov	r0, r4
    b3ca:	bl	39408 <btrfs_util_strerror@@Base>
    b3ce:	mov	r1, r0
    b3d0:	cbz	r0, b420 <list_sort@@Base+0x394>
    b3d2:	str	r0, [sp, #4]
    b3d4:	mov	r0, r6
    b3d6:	blx	85ac <strcmp@plt>
    b3da:	ldr	r1, [sp, #4]
    b3dc:	cbz	r0, b420 <list_sort@@Base+0x394>
    b3de:	ldr	r0, [pc, #192]	; (b4a0 <list_sort@@Base+0x414>)
    b3e0:	add	r0, pc
    b3e2:	bl	17b7c <__btrfs_error@@Base>
    b3e6:	ldr	r0, [r5, #0]
    b3e8:	negs	r0, r0
    b3ea:	b.n	b40c <list_sort@@Base+0x380>
    b3ec:	ldr	r1, [pc, #180]	; (b4a4 <list_sort@@Base+0x418>)
    b3ee:	mov	r0, r4
    b3f0:	add	r1, pc
    b3f2:	blx	85ac <strcmp@plt>
    b3f6:	cbnz	r0, b3fe <list_sort@@Base+0x372>
    b3f8:	strb.w	r0, [sp, #11]
    b3fc:	b.n	b3ac <list_sort@@Base+0x320>
    b3fe:	ldr	r0, [pc, #168]	; (b4a8 <list_sort@@Base+0x41c>)
    b400:	mov	r1, r4
    b402:	add	r0, pc
    b404:	bl	17b7c <__btrfs_error@@Base>
    b408:	mvn.w	r0, #21
    b40c:	ldr	r2, [pc, #156]	; (b4ac <list_sort@@Base+0x420>)
    b40e:	ldr	r3, [pc, #136]	; (b498 <list_sort@@Base+0x40c>)
    b410:	add	r2, pc
    b412:	ldr	r3, [r2, r3]
    b414:	ldr	r2, [r3, #0]
    b416:	ldr	r3, [sp, #12]
    b418:	eors	r2, r3
    b41a:	beq.n	b490 <list_sort@@Base+0x404>
    b41c:	blx	8708 <__stack_chk_fail@plt>
    b420:	ldr	r0, [pc, #140]	; (b4b0 <list_sort@@Base+0x424>)
    b422:	add	r0, pc
    b424:	bl	17b7c <__btrfs_error@@Base>
    b428:	b.n	b3e6 <list_sort@@Base+0x35a>
    b42a:	mov	r0, r5
    b42c:	add.w	r1, sp, #11
    b430:	bl	331bc <btrfs_util_get_subvolume_read_only@@Base>
    b434:	mov	r5, r0
    b436:	cbz	r0, b472 <list_sort@@Base+0x3e6>
    b438:	blx	897c <__errno_location@plt>
    b43c:	mov	r4, r0
    b43e:	ldr	r0, [r0, #0]
    b440:	blx	8888 <strerror@plt>
    b444:	mov	r6, r0
    b446:	mov	r0, r5
    b448:	bl	39408 <btrfs_util_strerror@@Base>
    b44c:	mov	r1, r0
    b44e:	cbz	r0, b468 <list_sort@@Base+0x3dc>
    b450:	str	r0, [sp, #4]
    b452:	mov	r0, r6
    b454:	blx	85ac <strcmp@plt>
    b458:	ldr	r1, [sp, #4]
    b45a:	cbz	r0, b468 <list_sort@@Base+0x3dc>
    b45c:	ldr	r0, [pc, #84]	; (b4b4 <list_sort@@Base+0x428>)
    b45e:	add	r0, pc
    b460:	bl	17b7c <__btrfs_error@@Base>
    b464:	ldr	r0, [r4, #0]
    b466:	b.n	b3e8 <list_sort@@Base+0x35c>
    b468:	ldr	r0, [pc, #76]	; (b4b8 <list_sort@@Base+0x42c>)
    b46a:	add	r0, pc
    b46c:	bl	17b7c <__btrfs_error@@Base>
    b470:	b.n	b464 <list_sort@@Base+0x3d8>
    b472:	ldrb.w	r3, [sp, #11]
    b476:	cbnz	r3, b48a <list_sort@@Base+0x3fe>
    b478:	ldr	r2, [pc, #64]	; (b4bc <list_sort@@Base+0x430>)
    b47a:	add	r2, pc
    b47c:	ldr	r1, [pc, #64]	; (b4c0 <list_sort@@Base+0x434>)
    b47e:	movs	r0, #1
    b480:	add	r1, pc
    b482:	blx	8a30 <__printf_chk@plt+0x4>
    b486:	movs	r0, #0
    b488:	b.n	b40c <list_sort@@Base+0x380>
    b48a:	ldr	r2, [pc, #56]	; (b4c4 <list_sort@@Base+0x438>)
    b48c:	add	r2, pc
    b48e:	b.n	b47c <list_sort@@Base+0x3f0>
    b490:	add	sp, #16
    b492:	pop	{r4, r5, r6, pc}
    b494:	ldr	r1, [sp, #984]	; 0x3d8
    b496:	movs	r5, r0
    b498:	lsls	r0, r5, #8
    b49a:	movs	r0, r0
    b49c:	orns	r0, sl, #2
    b4a0:	strh	r3, [r6, #40]	; 0x28
    b4a2:	movs	r4, r0
    b4a4:	bic.w	r0, sp, #2
    b4a8:	bic.w	r0, r1, #2
    b4ac:	ldr	r1, [sp, #448]	; 0x1c0
    b4ae:	movs	r5, r0
    b4b0:	ldr	r5, [pc, #140]	; (b540 <list_sort@@Base+0x4b4>)
    b4b2:	movs	r3, r0
    b4b4:	strh	r5, [r6, #36]	; 0x24
    b4b6:	movs	r4, r0
    b4b8:	ldr	r4, [pc, #876]	; (b828 <ulist_next@@Base+0x48>)
    b4ba:	movs	r3, r0
    b4bc:	vaddl.s32	q0, d3, d2
    b4c0:	vaddl.s8	q8, d2, d2
    b4c4:	vaddl.s8	q0, d12, d2
    b4c8:	mov	r0, r1
    b4ca:	ldr	r1, [pc, #96]	; (b52c <list_sort@@Base+0x4a0>)
    b4cc:	ldr	r2, [pc, #96]	; (b530 <list_sort@@Base+0x4a4>)
    b4ce:	add	r1, pc
    b4d0:	push	{r4, r5, lr}
    b4d2:	sub	sp, #276	; 0x114
    b4d4:	ldr	r2, [r1, r2]
    b4d6:	mov	r1, r3
    b4d8:	ldr	r5, [pc, #88]	; (b534 <list_sort@@Base+0x4a8>)
    b4da:	ldr	r2, [r2, #0]
    b4dc:	str	r2, [sp, #268]	; 0x10c
    b4de:	mov.w	r2, #0
    b4e2:	add	r5, pc
    b4e4:	cbz	r3, b500 <list_sort@@Base+0x474>
    b4e6:	bl	30d92 <set_label@@Base>
    b4ea:	mov	r4, r0
    b4ec:	ldr	r2, [pc, #72]	; (b538 <list_sort@@Base+0x4ac>)
    b4ee:	ldr	r3, [pc, #64]	; (b530 <list_sort@@Base+0x4a4>)
    b4f0:	add	r2, pc
    b4f2:	ldr	r3, [r2, r3]
    b4f4:	ldr	r2, [r3, #0]
    b4f6:	ldr	r3, [sp, #268]	; 0x10c
    b4f8:	eors	r2, r3
    b4fa:	beq.n	b524 <list_sort@@Base+0x498>
    b4fc:	blx	8708 <__stack_chk_fail@plt>
    b500:	add	r3, sp, #12
    b502:	str	r3, [sp, #4]
    b504:	mov	r1, r3
    b506:	bl	30d64 <get_label@@Base>
    b50a:	ldr	r3, [sp, #4]
    b50c:	mov	r4, r0
    b50e:	cmp	r0, #0
    b510:	bne.n	b4ec <list_sort@@Base+0x460>
    b512:	ldr	r2, [pc, #40]	; (b53c <list_sort@@Base+0x4b0>)
    b514:	movs	r1, #1
    b516:	ldr	r0, [r5, r2]
    b518:	ldr	r2, [pc, #36]	; (b540 <list_sort@@Base+0x4b4>)
    b51a:	ldr	r0, [r0, #0]
    b51c:	add	r2, pc
    b51e:	blx	8a64 <__fprintf_chk@plt+0x4>
    b522:	b.n	b4ec <list_sort@@Base+0x460>
    b524:	mov	r0, r4
    b526:	add	sp, #276	; 0x114
    b528:	pop	{r4, r5, pc}
    b52a:	nop
    b52c:	ldr	r0, [sp, #712]	; 0x2c8
    b52e:	movs	r5, r0
    b530:	lsls	r0, r5, #8
    b532:	movs	r0, r0
    b534:	ldr	r0, [sp, #632]	; 0x278
    b536:	movs	r5, r0
    b538:	ldr	r0, [sp, #576]	; 0x240
    b53a:	movs	r5, r0
    b53c:	lsls	r4, r3, #9
    b53e:	movs	r0, r0
    b540:	vhadd.s32	d0, d13, d2
    b544:	ldr	r2, [pc, #60]	; (b584 <list_sort@@Base+0x4f8>)
    b546:	movs	r1, #16
    b548:	ldr	r3, [pc, #60]	; (b588 <list_sort@@Base+0x4fc>)
    b54a:	push	{r4, lr}
    b54c:	add	r2, pc
    b54e:	sub	sp, #72	; 0x48
    b550:	add	r4, sp, #4
    b552:	ldr	r3, [r2, r3]
    b554:	mov	r0, r4
    b556:	ldr	r3, [r3, #0]
    b558:	str	r3, [sp, #68]	; 0x44
    b55a:	mov.w	r3, #0
    b55e:	blx	88bc <backtrace@plt>
    b562:	movs	r2, #2
    b564:	mov	r1, r0
    b566:	mov	r0, r4
    b568:	blx	8bcc <backtrace_symbols_fd@plt>
    b56c:	ldr	r2, [pc, #28]	; (b58c <list_sort@@Base+0x500>)
    b56e:	ldr	r3, [pc, #24]	; (b588 <list_sort@@Base+0x4fc>)
    b570:	add	r2, pc
    b572:	ldr	r3, [r2, r3]
    b574:	ldr	r2, [r3, #0]
    b576:	ldr	r3, [sp, #68]	; 0x44
    b578:	eors	r2, r3
    b57a:	beq.n	b580 <list_sort@@Base+0x4f4>
    b57c:	blx	8708 <__stack_chk_fail@plt>
    b580:	add	sp, #72	; 0x48
    b582:	pop	{r4, pc}
    b584:	ldr	r0, [sp, #208]	; 0xd0
    b586:	movs	r5, r0
    b588:	lsls	r0, r5, #8
    b58a:	movs	r0, r0
    b58c:	ldr	r0, [sp, #64]	; 0x40
    b58e:	movs	r5, r0

0000b590 <ulist_init@@Base>:
    b590:	adds	r3, r0, #4
    b592:	strd	r3, r3, [r0, #4]
    b596:	movs	r3, #0
    b598:	str	r3, [r0, #12]
    b59a:	str	r3, [r0, #0]
    b59c:	bx	lr

0000b59e <ulist_release@@Base>:
    b59e:	push	{r4, r5, r6, lr}
    b5a0:	mov	r5, r0
    b5a2:	mov	r4, r0
    b5a4:	ldr.w	r0, [r5, #4]!
    b5a8:	ldr.w	r6, [r0], #-16
    b5ac:	subs	r6, #16
    b5ae:	add.w	r3, r0, #16
    b5b2:	cmp	r5, r3
    b5b4:	bne.n	b5c0 <ulist_release@@Base+0x22>
    b5b6:	movs	r3, #0
    b5b8:	strd	r5, r5, [r4, #4]
    b5bc:	str	r3, [r4, #12]
    b5be:	pop	{r4, r5, r6, pc}
    b5c0:	blx	8620 <free@plt+0x4>
    b5c4:	ldr	r3, [r6, #16]
    b5c6:	mov	r0, r6
    b5c8:	sub.w	r6, r3, #16
    b5cc:	b.n	b5ae <ulist_release@@Base+0x10>

0000b5ce <ulist_reinit@@Base>:
    b5ce:	push	{r4, lr}
    b5d0:	mov	r4, r0
    b5d2:	bl	b59e <ulist_release@@Base>
    b5d6:	mov	r0, r4
    b5d8:	ldmia.w	sp!, {r4, lr}
    b5dc:	b.w	b590 <ulist_init@@Base>

0000b5e0 <ulist_alloc@@Base>:
    b5e0:	push	{r4, lr}
    b5e2:	movs	r0, #16
    b5e4:	blx	8870 <malloc@plt+0x4>
    b5e8:	mov	r4, r0
    b5ea:	cbz	r0, b5f0 <ulist_alloc@@Base+0x10>
    b5ec:	bl	b590 <ulist_init@@Base>
    b5f0:	mov	r0, r4
    b5f2:	pop	{r4, pc}

0000b5f4 <ulist_free@@Base>:
    b5f4:	push	{r4, lr}
    b5f6:	mov	r4, r0
    b5f8:	cbz	r0, b608 <ulist_free@@Base+0x14>
    b5fa:	bl	b59e <ulist_release@@Base>
    b5fe:	mov	r0, r4
    b600:	ldmia.w	sp!, {r4, lr}
    b604:	b.w	861c <free@plt>
    b608:	pop	{r4, pc}

0000b60a <ulist_add_merge@@Base>:
    b60a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    b60e:	sub	sp, #20
    b610:	mov	r6, r0
    b612:	ldr	r7, [pc, #220]	; (b6f0 <ulist_add_merge@@Base+0xe6>)
    b614:	ldr	r0, [sp, #56]	; 0x38
    b616:	mov	r8, r2
    b618:	ldr	r5, [r6, #12]
    b61a:	mov	r9, r3
    b61c:	add	r7, pc
    b61e:	cbnz	r5, b630 <ulist_add_merge@@Base+0x26>
    b620:	movs	r0, #40	; 0x28
    b622:	blx	8870 <malloc@plt+0x4>
    b626:	mov	r4, r0
    b628:	cbnz	r0, b64c <ulist_add_merge@@Base+0x42>
    b62a:	mvn.w	r0, #11
    b62e:	b.n	b6ea <ulist_add_merge@@Base+0xe0>
    b630:	ldrd	r2, r3, [r5, #-24]
    b634:	cmp	r3, r9
    b636:	it	eq
    b638:	cmpeq	r2, r8
    b63a:	bcs.n	b640 <ulist_add_merge@@Base+0x36>
    b63c:	ldr	r5, [r5, #4]
    b63e:	b.n	b61e <ulist_add_merge@@Base+0x14>
    b640:	cmp	r9, r3
    b642:	it	eq
    b644:	cmpeq	r8, r2
    b646:	bcs.n	b6de <ulist_add_merge@@Base+0xd4>
    b648:	ldr	r5, [r5, #8]
    b64a:	b.n	b61e <ulist_add_merge@@Base+0x14>
    b64c:	ldrd	r2, r3, [sp, #48]	; 0x30
    b650:	add.w	ip, r6, #12
    b654:	strd	r8, r9, [r4]
    b658:	strd	r2, r3, [r4, #8]
    b65c:	mov	r2, ip
    b65e:	ldr	r3, [r2, #0]
    b660:	cbnz	r3, b68e <ulist_add_merge@@Base+0x84>
    b662:	add.w	r0, r4, #24
    b666:	strd	r5, r3, [r4, #24]
    b66a:	str	r3, [r4, #32]
    b66c:	mov	r1, ip
    b66e:	str	r0, [r2, #0]
    b670:	bl	1392a <rb_insert_color@@Base>
    b674:	ldr	r3, [r6, #8]
    b676:	add.w	r2, r4, #16
    b67a:	adds	r1, r6, #4
    b67c:	str	r2, [r6, #8]
    b67e:	movs	r0, #1
    b680:	strd	r1, r3, [r4, #16]
    b684:	str	r2, [r3, #0]
    b686:	ldr	r3, [r6, #0]
    b688:	adds	r3, #1
    b68a:	str	r3, [r6, #0]
    b68c:	b.n	b6ea <ulist_add_merge@@Base+0xe0>
    b68e:	ldrd	r0, r1, [r3, #-24]
    b692:	cmp	r1, r9
    b694:	it	eq
    b696:	cmpeq	r0, r8
    b698:	bcs.n	b6a0 <ulist_add_merge@@Base+0x96>
    b69a:	adds	r2, r3, #4
    b69c:	mov	r5, r3
    b69e:	b.n	b65e <ulist_add_merge@@Base+0x54>
    b6a0:	cmp	r9, r1
    b6a2:	it	eq
    b6a4:	cmpeq	r8, r0
    b6a6:	bcs.n	b6ae <ulist_add_merge@@Base+0xa4>
    b6a8:	add.w	r2, r3, #8
    b6ac:	b.n	b69c <ulist_add_merge@@Base+0x92>
    b6ae:	ldr	r3, [pc, #68]	; (b6f4 <ulist_add_merge@@Base+0xea>)
    b6b0:	movs	r1, #1
    b6b2:	ldr	r2, [pc, #68]	; (b6f8 <ulist_add_merge@@Base+0xee>)
    b6b4:	ldr	r0, [r7, r3]
    b6b6:	movs	r3, #0
    b6b8:	str	r3, [sp, #12]
    b6ba:	add	r2, pc
    b6bc:	ldr	r3, [pc, #60]	; (b6fc <ulist_add_merge@@Base+0xf2>)
    b6be:	add	r3, pc
    b6c0:	str	r3, [sp, #8]
    b6c2:	ldr	r3, [pc, #60]	; (b700 <ulist_add_merge@@Base+0xf6>)
    b6c4:	add	r3, pc
    b6c6:	str	r3, [sp, #4]
    b6c8:	movs	r3, #211	; 0xd3
    b6ca:	str	r3, [sp, #0]
    b6cc:	ldr	r3, [pc, #52]	; (b704 <ulist_add_merge@@Base+0xfa>)
    b6ce:	ldr	r0, [r0, #0]
    b6d0:	add	r3, pc
    b6d2:	blx	8a64 <__fprintf_chk@plt+0x4>
    b6d6:	bl	b544 <list_sort@@Base+0x4b8>
    b6da:	blx	8b84 <abort@plt>
    b6de:	cbz	r0, b6ea <ulist_add_merge@@Base+0xe0>
    b6e0:	ldrd	r2, r3, [r5, #-16]
    b6e4:	strd	r2, r3, [r0]
    b6e8:	movs	r0, #0
    b6ea:	add	sp, #20
    b6ec:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    b6f0:	str	r7, [sp, #400]	; 0x190
    b6f2:	movs	r5, r0
    b6f4:	lsls	r0, r7, #8
    b6f6:	movs	r0, r0
    b6f8:	ldmdb	r5, {r1}
    b6fc:	cdp	0, 2, cr0, cr5, cr2, {0}
    b700:	cdp	0, 3, cr0, cr7, cr2, {0}
    b704:	ldcl	0, cr0, [sp, #8]!

0000b708 <ulist_add@@Base>:
    b708:	push	{r4, r5, lr}
    b70a:	sub	sp, #20
    b70c:	ldr	r1, [sp, #40]	; 0x28
    b70e:	ldrd	r4, r5, [sp, #32]
    b712:	str	r1, [sp, #12]
    b714:	movs	r1, #0
    b716:	strd	r4, r5, [sp]
    b71a:	str	r1, [sp, #8]
    b71c:	bl	b60a <ulist_add_merge@@Base>
    b720:	add	sp, #20
    b722:	pop	{r4, r5, pc}

0000b724 <ulist_del@@Base>:
    b724:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
    b728:	mov	r5, r0
    b72a:	ldr	r4, [r5, #12]
    b72c:	mov	r0, r2
    b72e:	ldr.w	r8, [pc, #152]	; b7c8 <ulist_del@@Base+0xa4>
    b732:	mov	r1, r3
    b734:	add	r8, pc
    b736:	cbnz	r4, b73c <ulist_del@@Base+0x18>
    b738:	movs	r0, #1
    b73a:	b.n	b75e <ulist_del@@Base+0x3a>
    b73c:	ldrd	r2, r3, [r4, #-24]
    b740:	cmp	r3, r1
    b742:	it	eq
    b744:	cmpeq	r2, r0
    b746:	bcs.n	b74c <ulist_del@@Base+0x28>
    b748:	ldr	r4, [r4, #4]
    b74a:	b.n	b736 <ulist_del@@Base+0x12>
    b74c:	cmp	r1, r3
    b74e:	it	eq
    b750:	cmpeq	r0, r2
    b752:	bcs.n	b764 <ulist_del@@Base+0x40>
    b754:	ldr	r4, [r4, #8]
    b756:	b.n	b736 <ulist_del@@Base+0x12>
    b758:	movs	r0, #0
    b75a:	subs	r3, #1
    b75c:	str	r3, [r5, #0]
    b75e:	add	sp, #16
    b760:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    b764:	ldrd	r6, r7, [r4, #-16]
    b768:	ldrd	r2, r3, [sp, #40]	; 0x28
    b76c:	cmp	r7, r3
    b76e:	it	eq
    b770:	cmpeq	r6, r2
    b772:	bne.n	b738 <ulist_del@@Base+0x14>
    b774:	add.w	r1, r5, #12
    b778:	mov	r0, r4
    b77a:	bl	139d0 <rb_erase@@Base>
    b77e:	ldrd	r2, r3, [r4, #-8]
    b782:	sub.w	r6, r4, #24
    b786:	str	r3, [r2, #4]
    b788:	mov	r0, r6
    b78a:	str	r2, [r3, #0]
    b78c:	blx	8620 <free@plt+0x4>
    b790:	ldr	r3, [r5, #0]
    b792:	cmp	r3, #0
    b794:	bne.n	b758 <ulist_del@@Base+0x34>
    b796:	ldr	r3, [pc, #52]	; (b7cc <ulist_del@@Base+0xa8>)
    b798:	movs	r1, #1
    b79a:	ldr	r2, [pc, #52]	; (b7d0 <ulist_del@@Base+0xac>)
    b79c:	ldr.w	r0, [r8, r3]
    b7a0:	add	r2, pc
    b7a2:	ldr	r3, [pc, #48]	; (b7d4 <ulist_del@@Base+0xb0>)
    b7a4:	str	r1, [sp, #12]
    b7a6:	add	r3, pc
    b7a8:	str	r3, [sp, #8]
    b7aa:	ldr	r3, [pc, #44]	; (b7d8 <ulist_del@@Base+0xb4>)
    b7ac:	add	r3, pc
    b7ae:	adds	r3, #16
    b7b0:	str	r3, [sp, #4]
    b7b2:	movs	r3, #140	; 0x8c
    b7b4:	str	r3, [sp, #0]
    b7b6:	ldr	r3, [pc, #36]	; (b7dc <ulist_del@@Base+0xb8>)
    b7b8:	ldr	r0, [r0, #0]
    b7ba:	add	r3, pc
    b7bc:	blx	8a64 <__fprintf_chk@plt+0x4>
    b7c0:	bl	b544 <list_sort@@Base+0x4b8>
    b7c4:	blx	8b84 <abort@plt>
    b7c8:	str	r6, [sp, #304]	; 0x130
    b7ca:	movs	r5, r0
    b7cc:	lsls	r0, r7, #8
    b7ce:	movs	r0, r0
    b7d0:	b.n	b5d8 <ulist_reinit@@Base+0xa>
    b7d2:	movs	r2, r0
    b7d4:	stcl	0, cr0, [r2, #-8]
    b7d8:	stcl	0, cr0, [pc, #-8]	; b7d4 <ulist_del@@Base+0xb0>
    b7dc:	ldc	0, cr0, [r3, #-8]

0000b7e0 <ulist_next@@Base>:
    b7e0:	ldr	r3, [r0, #4]
    b7e2:	adds	r2, r0, #4
    b7e4:	cmp	r2, r3
    b7e6:	beq.n	b7fa <ulist_next@@Base+0x1a>
    b7e8:	ldr	r0, [r1, #0]
    b7ea:	cbz	r0, b7f2 <ulist_next@@Base+0x12>
    b7ec:	ldr	r3, [r0, #0]
    b7ee:	cmp	r2, r3
    b7f0:	beq.n	b7fa <ulist_next@@Base+0x1a>
    b7f2:	str	r3, [r1, #0]
    b7f4:	ldr	r0, [r1, #0]
    b7f6:	subs	r0, #16
    b7f8:	bx	lr
    b7fa:	movs	r0, #0
    b7fc:	bx	lr
    b7fe:	nop
    b800:	ldrd	r2, r3, [r0]
    b804:	str	r3, [r2, #4]
    b806:	str	r2, [r3, #0]
    b808:	ldr	r2, [pc, #8]	; (b814 <ulist_next@@Base+0x34>)
    b80a:	ldr	r3, [pc, #12]	; (b818 <ulist_next@@Base+0x38>)
    b80c:	strd	r2, r3, [r0]
    b810:	bx	lr
    b812:	nop
    b814:	lsls	r0, r0, #4
    b816:	movs	r0, r2
    b818:	lsls	r0, r0, #8
    b81a:	movs	r0, r4
    b81c:	mov	r3, r1
    b81e:	ldr	r1, [pc, #44]	; (b84c <ulist_next@@Base+0x6c>)
    b820:	mov	r2, r0
    b822:	add	r1, pc
    b824:	push	{r4, r5, lr}
    b826:	ldr	r0, [r1, #0]
    b828:	cbz	r0, b844 <ulist_next@@Base+0x64>
    b82a:	ldrd	r4, r5, [r0, #-96]	; 0x60
    b82e:	cmp	r3, r5
    b830:	it	eq
    b832:	cmpeq	r2, r4
    b834:	bcs.n	b83a <ulist_next@@Base+0x5a>
    b836:	ldr	r0, [r0, #8]
    b838:	b.n	b828 <ulist_next@@Base+0x48>
    b83a:	cmp	r5, r3
    b83c:	it	eq
    b83e:	cmpeq	r4, r2
    b840:	bcc.n	b846 <ulist_next@@Base+0x66>
    b842:	subs	r0, #96	; 0x60
    b844:	pop	{r4, r5, pc}
    b846:	ldr	r0, [r0, #4]
    b848:	b.n	b828 <ulist_next@@Base+0x48>
    b84a:	nop
    b84c:	add	r2, sp, #136	; 0x88
    b84e:	movs	r5, r0
    b850:	subs	r0, #32
    b852:	b.w	861c <free@plt>
    b856:	ldr	r3, [pc, #92]	; (b8b4 <ulist_next@@Base+0xd4>)
    b858:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    b85c:	add	r3, pc
    b85e:	mov	r4, r0
    b860:	mov	r5, r1
    b862:	ldr	r3, [r3, #24]
    b864:	cbz	r3, b890 <ulist_next@@Base+0xb0>
    b866:	ldrd	r0, r1, [r3, #-32]
    b86a:	cmp	r5, r1
    b86c:	it	eq
    b86e:	cmpeq	r4, r0
    b870:	bcs.n	b876 <ulist_next@@Base+0x96>
    b872:	ldr	r3, [r3, #8]
    b874:	b.n	b864 <ulist_next@@Base+0x84>
    b876:	cmp	r1, r5
    b878:	it	eq
    b87a:	cmpeq	r0, r4
    b87c:	bcs.n	b882 <ulist_next@@Base+0xa2>
    b87e:	ldr	r3, [r3, #4]
    b880:	b.n	b864 <ulist_next@@Base+0x84>
    b882:	sub.w	r4, r3, #32
    b886:	mov	r0, r3
    b888:	bl	13c92 <rb_prev@@Base>
    b88c:	mov	r3, r4
    b88e:	cbnz	r0, b896 <ulist_next@@Base+0xb6>
    b890:	mov	r0, r3
    b892:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    b896:	ldrd	r6, r7, [r0, #-32]
    b89a:	sub.w	r8, r0, #32
    b89e:	ldrd	r4, r5, [r3]
    b8a2:	cmp	r7, r5
    b8a4:	it	eq
    b8a6:	cmpeq	r6, r4
    b8a8:	bne.n	b890 <ulist_next@@Base+0xb0>
    b8aa:	bl	13c92 <rb_prev@@Base>
    b8ae:	mov	r3, r8
    b8b0:	b.n	b88e <ulist_next@@Base+0xae>
    b8b2:	nop
    b8b4:	add	r1, sp, #928	; 0x3a0
    b8b6:	movs	r5, r0
    b8b8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b8bc:	mov	r1, r3
    b8be:	sub	sp, #28
    b8c0:	mov	r5, r0
    b8c2:	mov	r0, r2
    b8c4:	mov	r6, r2
    b8c6:	mov	r7, r3
    b8c8:	bl	b856 <ulist_next@@Base+0x76>
    b8cc:	cbnz	r0, b8dc <ulist_next@@Base+0xfc>
    b8ce:	ldr	r0, [pc, #208]	; (b9a0 <ulist_next@@Base+0x1c0>)
    b8d0:	mov	r2, r6
    b8d2:	mov	r3, r7
    b8d4:	add	r0, pc
    b8d6:	bl	17b7c <__btrfs_error@@Base>
    b8da:	b.n	b8fa <ulist_next@@Base+0x11a>
    b8dc:	mov	r4, r0
    b8de:	ldrd	r8, r9, [r4], #32
    b8e2:	cmp	r9, r7
    b8e4:	it	eq
    b8e6:	cmpeq	r8, r6
    b8e8:	beq.n	b904 <ulist_next@@Base+0x124>
    b8ea:	ldr	r0, [pc, #184]	; (b9a4 <ulist_next@@Base+0x1c4>)
    b8ec:	mov	r2, r8
    b8ee:	mov	r3, r9
    b8f0:	strd	r6, r7, [sp]
    b8f4:	add	r0, pc
    b8f6:	bl	17b7c <__btrfs_error@@Base>
    b8fa:	mvn.w	r0, #4
    b8fe:	add	sp, #28
    b900:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b904:	str	r0, [sp, #20]
    b906:	mov	r0, r4
    b908:	bl	13c92 <rb_prev@@Base>
    b90c:	ldr	r1, [sp, #20]
    b90e:	cbz	r0, b922 <ulist_next@@Base+0x142>
    b910:	ldrd	r2, r3, [r0, #-32]
    b914:	cmp	r3, r9
    b916:	it	eq
    b918:	cmpeq	r2, r8
    b91a:	bne.n	b922 <ulist_next@@Base+0x142>
    b91c:	ldr	r0, [pc, #136]	; (b9a8 <ulist_next@@Base+0x1c8>)
    b91e:	add	r0, pc
    b920:	b.n	b8d6 <ulist_next@@Base+0xf6>
    b922:	mov.w	sl, #0
    b926:	mov.w	fp, #0
    b92a:	ldrd	r2, r3, [r1, #24]
    b92e:	orrs.w	r0, r2, r3
    b932:	beq.n	b95a <ulist_next@@Base+0x17a>
    b934:	cmp	r3, #0
    b936:	it	eq
    b938:	cmpeq	r2, #5
    b93a:	beq.n	b946 <ulist_next@@Base+0x166>
    b93c:	cmp.w	r2, #256	; 0x100
    b940:	sbcs.w	r1, r3, #0
    b944:	blt.n	b976 <ulist_next@@Base+0x196>
    b946:	movs	r1, #0
    b948:	mov	r0, r5
    b94a:	str	r1, [sp, #8]
    b94c:	strd	sl, fp, [sp]
    b950:	bl	b708 <ulist_add@@Base>
    b954:	cmp	r0, #0
    b956:	bge.n	b976 <ulist_next@@Base+0x196>
    b958:	b.n	b8fe <ulist_next@@Base+0x11e>
    b95a:	ldrd	r2, r3, [r1, #16]
    b95e:	ldrd	r8, r9, [r1]
    b962:	cmp	r3, r9
    b964:	it	eq
    b966:	cmpeq	r2, r8
    b968:	bne.n	b996 <ulist_next@@Base+0x1b6>
    b96a:	mvn.w	r2, #7
    b96e:	mov.w	r3, #4294967295	; 0xffffffff
    b972:	strd	r2, r3, [r1, #24]
    b976:	mov	r0, r4
    b978:	bl	13c66 <rb_next@@Base>
    b97c:	mov	r4, r0
    b97e:	cmp	r0, #0
    b980:	beq.n	b8fe <ulist_next@@Base+0x11e>
    b982:	ldrd	r2, r3, [r0, #-32]
    b986:	sub.w	r1, r0, #32
    b98a:	cmp	r3, r7
    b98c:	it	eq
    b98e:	cmpeq	r2, r6
    b990:	beq.n	b92a <ulist_next@@Base+0x14a>
    b992:	movs	r0, #0
    b994:	b.n	b8fe <ulist_next@@Base+0x11e>
    b996:	mov	r0, r5
    b998:	bl	b8b8 <ulist_next@@Base+0xd8>
    b99c:	b.n	b954 <ulist_next@@Base+0x174>
    b99e:	nop
    b9a0:	mcrr	0, 0, r0, sl, cr2
    b9a4:	mcrr	0, 0, r0, pc, cr2
    b9a8:	mrrc	0, 0, r0, sl, cr2
    b9ac:	ldr	r2, [pc, #80]	; (ba00 <ulist_next@@Base+0x220>)
    b9ae:	ldr	r3, [pc, #84]	; (ba04 <ulist_next@@Base+0x224>)
    b9b0:	push	{r0, r1, r4, r5, r6, lr}
    b9b2:	add	r2, pc
    b9b4:	ldr	r4, [pc, #80]	; (ba08 <ulist_next@@Base+0x228>)
    b9b6:	ldr	r3, [r2, r3]
    b9b8:	add	r4, pc
    b9ba:	ldr	r3, [r3, #0]
    b9bc:	str	r3, [sp, #4]
    b9be:	mov.w	r3, #0
    b9c2:	ldr	r3, [r4, #28]
    b9c4:	cbz	r3, b9e0 <ulist_next@@Base+0x200>
    b9c6:	mov	r6, sp
    b9c8:	movs	r3, #0
    b9ca:	str	r3, [sp, #0]
    b9cc:	ldr	r0, [r4, #28]
    b9ce:	mov	r1, r6
    b9d0:	bl	b7e0 <ulist_next@@Base>
    b9d4:	mov	r5, r0
    b9d6:	cbnz	r0, b9f4 <ulist_next@@Base+0x214>
    b9d8:	ldr	r0, [r4, #28]
    b9da:	bl	b5f4 <ulist_free@@Base>
    b9de:	str	r5, [r4, #28]
    b9e0:	ldr	r2, [pc, #40]	; (ba0c <ulist_next@@Base+0x22c>)
    b9e2:	ldr	r3, [pc, #32]	; (ba04 <ulist_next@@Base+0x224>)
    b9e4:	add	r2, pc
    b9e6:	ldr	r3, [r2, r3]
    b9e8:	ldr	r2, [r3, #0]
    b9ea:	ldr	r3, [sp, #4]
    b9ec:	eors	r2, r3
    b9ee:	beq.n	b9fc <ulist_next@@Base+0x21c>
    b9f0:	blx	8708 <__stack_chk_fail@plt>
    b9f4:	ldr	r0, [r5, #8]
    b9f6:	blx	8620 <free@plt+0x4>
    b9fa:	b.n	b9cc <ulist_next@@Base+0x1ec>
    b9fc:	add	sp, #8
    b9fe:	pop	{r4, r5, r6, pc}
    ba00:	str	r3, [sp, #824]	; 0x338
    ba02:	movs	r5, r0
    ba04:	lsls	r0, r5, #8
    ba06:	movs	r0, r0
    ba08:	add	r0, sp, #560	; 0x230
    ba0a:	movs	r5, r0
    ba0c:	str	r3, [sp, #624]	; 0x270
    ba0e:	movs	r5, r0
    ba10:	ldr.w	ip, [pc, #76]	; ba60 <ulist_next@@Base+0x280>
    ba14:	ldr	r5, [pc, #76]	; (ba64 <ulist_next@@Base+0x284>)
    ba16:	add	ip, pc
    ba18:	ldr	r4, [pc, #76]	; (ba68 <ulist_next@@Base+0x288>)
    ba1a:	push	{lr}
    ba1c:	sub	sp, #92	; 0x5c
    ba1e:	ldr.w	r5, [ip, r5]
    ba22:	add	r4, pc
    ba24:	ldr	r5, [r5, #0]
    ba26:	str	r5, [sp, #84]	; 0x54
    ba28:	mov.w	r5, #0
    ba2c:	ldr	r5, [pc, #60]	; (ba6c <ulist_next@@Base+0x28c>)
    ba2e:	ldr	r4, [r4, r5]
    ba30:	ldr	r5, [sp, #96]	; 0x60
    ba32:	strd	r3, r2, [sp]
    ba36:	mov	r3, r1
    ba38:	ldr	r2, [pc, #52]	; (ba70 <ulist_next@@Base+0x290>)
    ba3a:	movs	r1, #1
    ba3c:	strd	r0, r5, [sp, #8]
    ba40:	ldr	r0, [r4, #0]
    ba42:	add	r4, sp, #20
    ba44:	add	r2, pc
    ba46:	blx	8a64 <__fprintf_chk@plt+0x4>
    ba4a:	movs	r1, #16
    ba4c:	mov	r0, r4
    ba4e:	blx	88bc <backtrace@plt>
    ba52:	movs	r2, #2
    ba54:	mov	r1, r0
    ba56:	mov	r0, r4
    ba58:	blx	8bcc <backtrace_symbols_fd@plt>
    ba5c:	blx	8b84 <abort@plt>
    ba60:	str	r3, [sp, #424]	; 0x1a8
    ba62:	movs	r5, r0
    ba64:	lsls	r0, r5, #8
    ba66:	movs	r0, r0
    ba68:	str	r3, [sp, #376]	; 0x178
    ba6a:	movs	r5, r0
    ba6c:	lsls	r0, r7, #8
    ba6e:	movs	r0, r0
    ba70:	b.n	b330 <list_sort@@Base+0x2a4>
    ba72:	movs	r2, r0
    ba74:	push	{r0, r1, r2, lr}
    ba76:	cbz	r3, ba88 <ulist_next@@Base+0x2a8>
    ba78:	movs	r3, #1
    ba7a:	str	r3, [sp, #0]
    ba7c:	mov	r3, r2
    ba7e:	mov	r2, r1
    ba80:	ldr	r1, [pc, #12]	; (ba90 <ulist_next@@Base+0x2b0>)
    ba82:	add	r1, pc
    ba84:	bl	ba10 <ulist_next@@Base+0x230>
    ba88:	add	sp, #12
    ba8a:	ldr.w	pc, [sp], #4
    ba8e:	nop
    ba90:			; <UNDEFINED> instruction: 0xeb230002
    ba94:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ba98:	vpush	{d8-d9}
    ba9c:	sub	sp, #76	; 0x4c
    ba9e:	strd	r2, r3, [sp, #24]
    baa2:	ldr.w	r2, [pc, #1040]	; beb4 <ulist_next@@Base+0x6d4>
    baa6:	ldr.w	r3, [pc, #1040]	; beb8 <ulist_next@@Base+0x6d8>
    baaa:	add	r2, pc
    baac:	str	r0, [sp, #52]	; 0x34
    baae:	movs	r0, #0
    bab0:	ldr	r3, [r2, r3]
    bab2:	ldr	r3, [r3, #0]
    bab4:	str	r3, [sp, #68]	; 0x44
    bab6:	mov.w	r3, #0
    baba:	bl	b5e0 <ulist_alloc@@Base>
    babe:	mov	r4, r0
    bac0:	ldr	r0, [pc, #1016]	; (bebc <ulist_next@@Base+0x6dc>)
    bac2:	add	r0, pc
    bac4:	adds	r0, #24
    bac6:	bl	13c46 <rb_first@@Base>
    baca:	ldr	r3, [pc, #1012]	; (bec0 <ulist_next@@Base+0x6e0>)
    bacc:	add	r3, pc
    bace:	adds	r3, #17
    bad0:	vmov	s18, r3
    bad4:	mov	fp, r0
    bad6:	mov	r0, r4
    bad8:	cmp.w	fp, #0
    badc:	bne.n	bafa <ulist_next@@Base+0x31a>
    bade:	bl	b5f4 <ulist_free@@Base>
    bae2:	mov	r0, fp
    bae4:	ldr	r2, [pc, #988]	; (bec4 <ulist_next@@Base+0x6e4>)
    bae6:	ldr	r3, [pc, #976]	; (beb8 <ulist_next@@Base+0x6d8>)
    bae8:	add	r2, pc
    baea:	ldr	r3, [r2, r3]
    baec:	ldr	r2, [r3, #0]
    baee:	ldr	r3, [sp, #68]	; 0x44
    baf0:	eors	r2, r3
    baf2:	beq.w	bea8 <ulist_next@@Base+0x6c8>
    baf6:	blx	8708 <__stack_chk_fail@plt>
    bafa:	ldr	r6, [pc, #972]	; (bec8 <ulist_next@@Base+0x6e8>)
    bafc:	bl	b5ce <ulist_reinit@@Base>
    bb00:	ldr	r7, [pc, #968]	; (becc <ulist_next@@Base+0x6ec>)
    bb02:	sub.w	r5, fp, #32
    bb06:	ldr.w	sl, [pc, #968]	; bed0 <ulist_next@@Base+0x6f0>
    bb0a:	add	r6, pc
    bb0c:	ldrd	r2, r3, [fp, #-24]
    bb10:	add	r7, pc
    bb12:	ldrd	r8, r9, [fp, #-32]
    bb16:	add	sl, pc
    bb18:	strd	r2, r3, [sp, #16]
    bb1c:	ldrd	r2, r3, [r5]
    bb20:	mov	r1, r6
    bb22:	mov	r0, r7
    bb24:	cmp	r3, r9
    bb26:	it	eq
    bb28:	cmpeq	r2, r8
    bb2a:	movw	r2, #545	; 0x221
    bb2e:	ite	ne
    bb30:	movne	r3, #1
    bb32:	moveq	r3, #0
    bb34:	bl	ba74 <ulist_next@@Base+0x294>
    bb38:	ldrd	r2, r3, [r5, #8]
    bb3c:	ldrd	r0, r1, [sp, #16]
    bb40:	cmp	r3, r1
    bb42:	mov	r1, r6
    bb44:	it	eq
    bb46:	cmpeq	r2, r0
    bb48:	movw	r2, #546	; 0x222
    bb4c:	mov	r0, sl
    bb4e:	ite	ne
    bb50:	movne	r3, #1
    bb52:	moveq	r3, #0
    bb54:	bl	ba74 <ulist_next@@Base+0x294>
    bb58:	ldrd	r2, r3, [r5, #24]
    bb5c:	orrs.w	r1, r2, r3
    bb60:	beq.n	bc44 <ulist_next@@Base+0x464>
    bb62:	cmp	r3, #0
    bb64:	it	eq
    bb66:	cmpeq	r2, #5
    bb68:	beq.n	bc20 <ulist_next@@Base+0x440>
    bb6a:	cmp.w	r2, #256	; 0x100
    bb6e:	sbcs.w	r1, r3, #0
    bb72:	bge.n	bc20 <ulist_next@@Base+0x440>
    bb74:	mov	r0, fp
    bb76:	bl	13c66 <rb_next@@Base>
    bb7a:	mov	fp, r0
    bb7c:	cmp	r0, #0
    bb7e:	bne.n	bc50 <ulist_next@@Base+0x470>
    bb80:	ldrd	r2, r3, [sp, #24]
    bb84:	orrs	r3, r2
    bb86:	beq.n	bbf6 <ulist_next@@Base+0x416>
    bb88:	ldr	r5, [pc, #840]	; (bed4 <ulist_next@@Base+0x6f4>)
    bb8a:	movs	r3, #0
    bb8c:	str	r3, [sp, #60]	; 0x3c
    bb8e:	add	r5, pc
    bb90:	add	r1, sp, #60	; 0x3c
    bb92:	mov	r0, r4
    bb94:	bl	b7e0 <ulist_next@@Base>
    bb98:	cbz	r0, bbf6 <ulist_next@@Base+0x416>
    bb9a:	ldrd	r6, r7, [r0]
    bb9e:	movw	r2, #1465	; 0x5b9
    bba2:	vmov	r1, s18
    bba6:	mov	r0, r5
    bba8:	orrs.w	r3, r6, r7
    bbac:	ite	eq
    bbae:	moveq	r3, #1
    bbb0:	movne	r3, #0
    bbb2:	bl	ba74 <ulist_next@@Base+0x294>
    bbb6:	ldrd	r2, r3, [sp, #24]
    bbba:	cmp	r3, r7
    bbbc:	it	eq
    bbbe:	cmpeq	r2, r6
    bbc0:	bne.n	bb90 <ulist_next@@Base+0x3b0>
    bbc2:	ldr	r3, [r4, #0]
    bbc4:	add	r5, sp, #64	; 0x40
    bbc6:	ldr	r6, [pc, #784]	; (bed8 <ulist_next@@Base+0x6f8>)
    bbc8:	movs	r0, #1
    bbca:	ldr	r1, [pc, #784]	; (bedc <ulist_next@@Base+0x6fc>)
    bbcc:	str	r3, [sp, #8]
    bbce:	add	r6, pc
    bbd0:	ldrd	r2, r3, [sp, #16]
    bbd4:	add	r1, pc
    bbd6:	strd	r2, r3, [sp]
    bbda:	mov	r3, r9
    bbdc:	mov	r2, r8
    bbde:	blx	8a30 <__printf_chk@plt+0x4>
    bbe2:	movs	r3, #0
    bbe4:	str	r3, [sp, #64]	; 0x40
    bbe6:	mov	r1, r5
    bbe8:	mov	r0, r4
    bbea:	bl	b7e0 <ulist_next@@Base>
    bbee:	cbnz	r0, bc64 <ulist_next@@Base+0x484>
    bbf0:	movs	r0, #10
    bbf2:	blx	89cc <putchar@plt+0x4>
    bbf6:	ldr	r3, [sp, #52]	; 0x34
    bbf8:	cmp	r3, #0
    bbfa:	beq.w	bad6 <ulist_next@@Base+0x2f6>
    bbfe:	movs	r0, #0
    bc00:	bl	b5e0 <ulist_alloc@@Base>
    bc04:	mov	r7, r0
    bc06:	movs	r0, #0
    bc08:	bl	b5e0 <ulist_alloc@@Base>
    bc0c:	mov	r5, r0
    bc0e:	cbz	r7, bc12 <ulist_next@@Base+0x432>
    bc10:	cbnz	r0, bc72 <ulist_next@@Base+0x492>
    bc12:	mov	r0, r7
    bc14:	bl	b5f4 <ulist_free@@Base>
    bc18:	mov	r0, r5
    bc1a:	bl	b5f4 <ulist_free@@Base>
    bc1e:	b.n	bc36 <ulist_next@@Base+0x456>
    bc20:	movs	r1, #0
    bc22:	movs	r0, #0
    bc24:	str	r1, [sp, #8]
    bc26:	movs	r1, #0
    bc28:	strd	r0, r1, [sp]
    bc2c:	mov	r0, r4
    bc2e:	bl	b708 <ulist_add@@Base>
    bc32:	cmp	r0, #0
    bc34:	bge.n	bb74 <ulist_next@@Base+0x394>
    bc36:	ldr	r0, [pc, #680]	; (bee0 <ulist_next@@Base+0x700>)
    bc38:	add	r0, pc
    bc3a:	bl	17b7c <__btrfs_error@@Base>
    bc3e:	mvn.w	r0, #11
    bc42:	b.n	bae4 <ulist_next@@Base+0x304>
    bc44:	ldrd	r2, r3, [r5, #16]
    bc48:	mov	r0, r4
    bc4a:	bl	b8b8 <ulist_next@@Base+0xd8>
    bc4e:	b.n	bc32 <ulist_next@@Base+0x452>
    bc50:	ldrd	r2, r3, [r0, #-32]
    bc54:	sub.w	r5, r0, #32
    bc58:	cmp	r3, r9
    bc5a:	it	eq
    bc5c:	cmpeq	r2, r8
    bc5e:	beq.w	bb1c <ulist_next@@Base+0x33c>
    bc62:	b.n	bb80 <ulist_next@@Base+0x3a0>
    bc64:	ldrd	r2, r3, [r0]
    bc68:	mov	r1, r6
    bc6a:	movs	r0, #1
    bc6c:	blx	8a30 <__printf_chk@plt+0x4>
    bc70:	b.n	bbe6 <ulist_next@@Base+0x406>
    bc72:	movs	r3, #0
    bc74:	str	r3, [sp, #60]	; 0x3c
    bc76:	ldr	r3, [pc, #620]	; (bee4 <ulist_next@@Base+0x704>)
    bc78:	add	r3, pc
    bc7a:	adds	r3, #35	; 0x23
    bc7c:	vmov	s17, r3
    bc80:	ldr.w	sl, [pc, #612]	; bee8 <ulist_next@@Base+0x708>
    bc84:	add	sl, pc
    bc86:	add.w	r8, sp, #60	; 0x3c
    bc8a:	mov	r0, r4
    bc8c:	mov	r1, r8
    bc8e:	bl	b7e0 <ulist_next@@Base>
    bc92:	cbnz	r0, bce2 <ulist_next@@Base+0x502>
    bc94:	ldr	r3, [r4, #0]
    bc96:	mov.w	sl, #0
    bc9a:	str	r0, [sp, #60]	; 0x3c
    bc9c:	mov	r9, r3
    bc9e:	ldr	r3, [pc, #588]	; (beec <ulist_next@@Base+0x70c>)
    bca0:	add	r3, pc
    bca2:	str	r3, [sp, #32]
    bca4:	mov	r1, r8
    bca6:	mov	r0, r7
    bca8:	bl	b7e0 <ulist_next@@Base>
    bcac:	cmp	r0, #0
    bcae:	bne.w	be24 <ulist_next@@Base+0x644>
    bcb2:	ldr	r6, [pc, #572]	; (bef0 <ulist_next@@Base+0x710>)
    bcb4:	ldr	r1, [r4, #0]
    bcb6:	add	r6, pc
    bcb8:	adds	r1, #1
    bcba:	ldrd	r2, r3, [r6]
    bcbe:	adds	r2, r2, r1
    bcc0:	adc.w	r3, r3, r1, asr #31
    bcc4:	strd	r2, r3, [r6]
    bcc8:	mov	r3, r0
    bcca:	mov	r0, r7
    bccc:	str	r3, [sp, #16]
    bcce:	bl	b5f4 <ulist_free@@Base>
    bcd2:	mov	r0, r5
    bcd4:	bl	b5f4 <ulist_free@@Base>
    bcd8:	ldr	r3, [sp, #16]
    bcda:	cmp	r3, #0
    bcdc:	beq.w	bad6 <ulist_next@@Base+0x2f6>
    bce0:	b.n	bc36 <ulist_next@@Base+0x456>
    bce2:	ldrd	r8, r9, [r0]
    bce6:	mov.w	r2, #422	; 0x1a6
    bcea:	vmov	r1, s17
    bcee:	mov	r0, sl
    bcf0:	orrs.w	r3, r8, r9
    bcf4:	ite	eq
    bcf6:	moveq	r3, #1
    bcf8:	movne	r3, #0
    bcfa:	bl	ba74 <ulist_next@@Base+0x294>
    bcfe:	mov	r0, r8
    bd00:	mov	r1, r9
    bd02:	bl	b81c <ulist_next@@Base+0x3c>
    bd06:	mov	r6, r0
    bd08:	cmp	r0, #0
    bd0a:	beq.n	bc86 <ulist_next@@Base+0x4a6>
    bd0c:	cmp.w	r9, #0
    bd10:	it	eq
    bd12:	cmpeq.w	r8, #5
    bd16:	beq.w	be20 <ulist_next@@Base+0x640>
    bd1a:	cmp.w	r8, #256	; 0x100
    bd1e:	sbcs.w	r3, r9, #0
    bd22:	ite	ge
    bd24:	movge	r3, #1
    bd26:	movlt	r3, #0
    bd28:	ldr	r1, [pc, #456]	; (bef4 <ulist_next@@Base+0x714>)
    bd2a:	eor.w	r3, r3, #1
    bd2e:	ldr	r0, [pc, #456]	; (bef8 <ulist_next@@Base+0x718>)
    bd30:	mov.w	r2, #432	; 0x1b0
    bd34:	add	r1, pc
    bd36:	mov.w	r8, #0
    bd3a:	adds	r1, #35	; 0x23
    bd3c:	add	r0, pc
    bd3e:	bl	ba74 <ulist_next@@Base+0x294>
    bd42:	str.w	r8, [sp, #8]
    bd46:	strd	r6, r8, [sp]
    bd4a:	mov	r0, r7
    bd4c:	ldrd	r2, r3, [r6]
    bd50:	bl	b708 <ulist_add@@Base>
    bd54:	subs	r3, r0, #0
    bd56:	blt.n	bcca <ulist_next@@Base+0x4ea>
    bd58:	mov	r0, r5
    bd5a:	bl	b5ce <ulist_reinit@@Base>
    bd5e:	str.w	r8, [sp, #8]
    bd62:	strd	r6, r8, [sp]
    bd66:	mov	r0, r5
    bd68:	ldrd	r2, r3, [r6]
    bd6c:	bl	b708 <ulist_add@@Base>
    bd70:	subs	r3, r0, #0
    bd72:	blt.n	bcca <ulist_next@@Base+0x4ea>
    bd74:	ldr	r3, [pc, #388]	; (befc <ulist_next@@Base+0x71c>)
    bd76:	str.w	r8, [sp, #64]	; 0x40
    bd7a:	add	r3, pc
    bd7c:	adds	r3, #35	; 0x23
    bd7e:	vmov	s16, r3
    bd82:	add	r1, sp, #64	; 0x40
    bd84:	mov	r0, r5
    bd86:	bl	b7e0 <ulist_next@@Base>
    bd8a:	cmp	r0, #0
    bd8c:	beq.w	bc80 <ulist_next@@Base+0x4a0>
    bd90:	ldr	r3, [pc, #364]	; (bf00 <ulist_next@@Base+0x720>)
    bd92:	ldr	r6, [r0, #8]
    bd94:	add	r3, pc
    bd96:	ldr.w	sl, [pc, #364]	; bf04 <ulist_next@@Base+0x724>
    bd9a:	ldrd	r0, r1, [r3]
    bd9e:	add	sl, pc
    bda0:	ldrd	r2, r3, [r6, #128]	; 0x80
    bda4:	ldr.w	r8, [r6, #108]	; 0x6c
    bda8:	cmp	r3, r1
    bdaa:	it	eq
    bdac:	cmpeq	r2, r0
    bdae:	it	cc
    bdb0:	strdcc	r0, r1, [r6, #128]	; 0x80
    bdb4:	ldrd	r3, r2, [r6, #128]	; 0x80
    bdb8:	adds	r3, #1
    bdba:	adc.w	r2, r2, #0
    bdbe:	strd	r3, r2, [r6, #128]	; 0x80
    bdc2:	add.w	r3, r6, #108	; 0x6c
    bdc6:	cmp	r8, r3
    bdc8:	beq.n	bd82 <ulist_next@@Base+0x5a2>
    bdca:	ldr.w	r9, [r8, #16]
    bdce:	mov	r0, sl
    bdd0:	vmov	r1, s16
    bdd4:	ldrd	r2, r3, [r9]
    bdd8:	strd	r2, r3, [sp, #32]
    bddc:	clz	r3, r6
    bde0:	mov.w	r2, #458	; 0x1ca
    bde4:	lsrs	r3, r3, #5
    bde6:	bl	ba74 <ulist_next@@Base+0x294>
    bdea:	movs	r1, #0
    bdec:	ldrd	r2, r3, [sp, #32]
    bdf0:	mov	r0, r7
    bdf2:	str	r1, [sp, #8]
    bdf4:	strd	r9, r1, [sp]
    bdf8:	bl	b708 <ulist_add@@Base>
    bdfc:	subs	r3, r0, #0
    bdfe:	blt.w	bcca <ulist_next@@Base+0x4ea>
    be02:	movs	r1, #0
    be04:	ldrd	r2, r3, [sp, #32]
    be08:	mov	r0, r5
    be0a:	str	r1, [sp, #8]
    be0c:	strd	r9, r1, [sp]
    be10:	bl	b708 <ulist_add@@Base>
    be14:	subs	r3, r0, #0
    be16:	blt.w	bcca <ulist_next@@Base+0x4ea>
    be1a:	ldr.w	r8, [r8]
    be1e:	b.n	bdc2 <ulist_next@@Base+0x5e2>
    be20:	ldr	r3, [sp, #52]	; 0x34
    be22:	b.n	bd28 <ulist_next@@Base+0x548>
    be24:	ldr.w	ip, [r0, #8]
    be28:	ldr	r3, [sp, #32]
    be2a:	ldrd	r0, r1, [ip, #128]	; 0x80
    be2e:	ldrd	r2, r3, [r3]
    be32:	cmp	r1, r3
    be34:	it	eq
    be36:	cmpeq	r0, r2
    be38:	bcc.w	bca4 <ulist_next@@Base+0x4c4>
    be3c:	subs	r6, r0, r2
    be3e:	str	r6, [sp, #40]	; 0x28
    be40:	sbc.w	r6, r1, r3
    be44:	cmp	r1, r3
    be46:	it	eq
    be48:	cmpeq	r0, r2
    be4a:	str	r6, [sp, #44]	; 0x2c
    be4c:	beq.w	bca4 <ulist_next@@Base+0x4c4>
    be50:	ldrd	r3, r2, [ip, #64]	; 0x40
    be54:	ldr	r1, [sp, #16]
    be56:	adds	r3, r3, r1
    be58:	ldr	r1, [sp, #20]
    be5a:	adc.w	r2, r1, r2
    be5e:	ldr	r1, [sp, #16]
    be60:	strd	r3, r2, [ip, #64]	; 0x40
    be64:	ldrd	r3, r2, [ip, #72]	; 0x48
    be68:	adds	r3, r3, r1
    be6a:	ldr	r1, [sp, #20]
    be6c:	adc.w	r2, r1, r2
    be70:	strd	r3, r2, [ip, #72]	; 0x48
    be74:	ldrd	r2, r3, [sp, #40]	; 0x28
    be78:	cmp	sl, r3
    be7a:	it	eq
    be7c:	cmpeq	r9, r2
    be7e:	bne.w	bca4 <ulist_next@@Base+0x4c4>
    be82:	ldrd	r3, r2, [ip, #80]	; 0x50
    be86:	ldr	r1, [sp, #16]
    be88:	adds	r3, r3, r1
    be8a:	ldr	r1, [sp, #20]
    be8c:	adc.w	r2, r1, r2
    be90:	ldr	r1, [sp, #16]
    be92:	strd	r3, r2, [ip, #80]	; 0x50
    be96:	ldrd	r3, r2, [ip, #88]	; 0x58
    be9a:	adds	r3, r3, r1
    be9c:	ldr	r1, [sp, #20]
    be9e:	adc.w	r2, r1, r2
    bea2:	strd	r3, r2, [ip, #88]	; 0x58
    bea6:	b.n	bca4 <ulist_next@@Base+0x4c4>
    bea8:	add	sp, #76	; 0x4c
    beaa:	vpop	{d8-d9}
    beae:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    beb2:	nop
    beb4:	str	r2, [sp, #856]	; 0x358
    beb6:	movs	r5, r0
    beb8:	lsls	r0, r5, #8
    beba:	movs	r0, r0
    bebc:	add	r7, pc, #520	; (adr r7, c0c8 <ulist_next@@Base+0x8e8>)
    bebe:	movs	r5, r0
    bec0:	cdp	0, 15, cr0, cr2, cr2, {0}
    bec4:	str	r2, [sp, #608]	; 0x260
    bec6:	movs	r5, r0
    bec8:	cdp	0, 11, cr0, cr4, cr2, {0}
    becc:			; <UNDEFINED> instruction: 0xeaab0002
    bed0:			; <UNDEFINED> instruction: 0xeabb0002
    bed4:	movs.w	r0, r2
    bed8:	orr.w	r0, r0, r2
    bedc:	bic.w	r0, ip, r2
    bee0:	ldrd	r0, r0, [sl, #8]!
    bee4:	stcl	0, cr0, [r6, #-8]
    bee8:	strd	r0, r0, [r9, #-8]!
    beec:	str	r4, [sp, #112]	; 0x70
    beee:	movs	r5, r0
    bef0:	str	r4, [sp, #24]
    bef2:	movs	r5, r0
    bef4:	stc	0, cr0, [sl], {2}
    bef8:			; <UNDEFINED> instruction: 0xe8d80002
    befc:	mcrr	0, 0, r0, r4, cr2
    bf00:	str	r3, [sp, #160]	; 0xa0
    bf02:	movs	r5, r0
    bf04:	stmia.w	sp, {r1}
    bf08:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bf0c:	mov	r5, r3
    bf0e:	ldr	r3, [pc, #292]	; (c034 <ulist_next@@Base+0x854>)
    bf10:	mov	r6, r0
    bf12:	ldrd	r8, r9, [sp, #40]	; 0x28
    bf16:	mov	r7, r1
    bf18:	add	r3, pc
    bf1a:	mov	r4, r2
    bf1c:	ldr.w	sl, [r3, #24]
    bf20:	cmp.w	sl, #0
    bf24:	beq.n	bf66 <ulist_next@@Base+0x786>
    bf26:	ldrd	r2, r3, [sl, #-32]
    bf2a:	cmp	r7, r3
    bf2c:	it	eq
    bf2e:	cmpeq	r6, r2
    bf30:	bcc.n	bfd6 <ulist_next@@Base+0x7f6>
    bf32:	cmp	r3, r7
    bf34:	it	eq
    bf36:	cmpeq	r2, r6
    bf38:	bcc.n	c02c <ulist_next@@Base+0x84c>
    bf3a:	ldrd	r2, r3, [sl, #-16]
    bf3e:	cmp	r9, r3
    bf40:	it	eq
    bf42:	cmpeq	r8, r2
    bf44:	bcc.n	bfd6 <ulist_next@@Base+0x7f6>
    bf46:	cmp	r3, r9
    bf48:	it	eq
    bf4a:	cmpeq	r2, r8
    bf4c:	bcc.n	c02c <ulist_next@@Base+0x84c>
    bf4e:	ldrd	r2, r3, [sl, #-8]
    bf52:	cmp	r5, r3
    bf54:	it	eq
    bf56:	cmpeq	r4, r2
    bf58:	bcc.n	bfd6 <ulist_next@@Base+0x7f6>
    bf5a:	cmp	r3, r5
    bf5c:	it	eq
    bf5e:	cmpeq	r2, r4
    bf60:	bcc.n	c02c <ulist_next@@Base+0x84c>
    bf62:	sub.w	sl, sl, #32
    bf66:	orrs.w	r3, r8, r9
    bf6a:	beq.n	bfdc <ulist_next@@Base+0x7fc>
    bf6c:	orrs.w	r3, r4, r5
    bf70:	ite	ne
    bf72:	movne	r3, #1
    bf74:	moveq	r3, #0
    bf76:	ldr	r1, [pc, #192]	; (c038 <ulist_next@@Base+0x858>)
    bf78:	mov.w	r2, #302	; 0x12e
    bf7c:	ldr	r0, [pc, #188]	; (c03c <ulist_next@@Base+0x85c>)
    bf7e:	add	r1, pc
    bf80:	adds	r1, #54	; 0x36
    bf82:	add	r0, pc
    bf84:	bl	ba74 <ulist_next@@Base+0x294>
    bf88:	cmp.w	sl, #0
    bf8c:	bne.n	c028 <ulist_next@@Base+0x848>
    bf8e:	movs	r1, #48	; 0x30
    bf90:	movs	r0, #1
    bf92:	blx	8588 <calloc@plt+0x4>
    bf96:	mov	fp, r0
    bf98:	cbz	r0, bfd0 <ulist_next@@Base+0x7f0>
    bf9a:	ldrd	r2, r3, [sp, #48]	; 0x30
    bf9e:	strd	r6, r7, [r0]
    bfa2:	strd	r4, r5, [r0, #24]
    bfa6:	strd	r2, r3, [r0, #8]
    bfaa:	ldr	r3, [pc, #148]	; (c040 <ulist_next@@Base+0x860>)
    bfac:	strd	r8, r9, [r0, #16]
    bfb0:	add	r3, pc
    bfb2:	adds	r3, #24
    bfb4:	ldr	r1, [r3, #0]
    bfb6:	cbnz	r1, bfe0 <ulist_next@@Base+0x800>
    bfb8:	strd	sl, r1, [fp, #32]
    bfbc:	add.w	r0, fp, #32
    bfc0:	str.w	r1, [fp, #40]	; 0x28
    bfc4:	ldr	r1, [pc, #124]	; (c044 <ulist_next@@Base+0x864>)
    bfc6:	str	r0, [r3, #0]
    bfc8:	add	r1, pc
    bfca:	adds	r1, #24
    bfcc:	bl	1392a <rb_insert_color@@Base>
    bfd0:	mov	r0, fp
    bfd2:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bfd6:	ldr.w	sl, [sl, #8]
    bfda:	b.n	bf20 <ulist_next@@Base+0x740>
    bfdc:	movs	r3, #0
    bfde:	b.n	bf76 <ulist_next@@Base+0x796>
    bfe0:	ldrd	r2, r3, [r1, #-32]
    bfe4:	cmp	r7, r3
    bfe6:	it	eq
    bfe8:	cmpeq	r6, r2
    bfea:	bcc.n	c020 <ulist_next@@Base+0x840>
    bfec:	cmp	r3, r7
    bfee:	it	eq
    bff0:	cmpeq	r2, r6
    bff2:	bcc.n	c01c <ulist_next@@Base+0x83c>
    bff4:	ldrd	r2, r3, [r1, #-16]
    bff8:	cmp	r9, r3
    bffa:	it	eq
    bffc:	cmpeq	r8, r2
    bffe:	bcc.n	c020 <ulist_next@@Base+0x840>
    c000:	cmp	r3, r9
    c002:	it	eq
    c004:	cmpeq	r2, r8
    c006:	bcc.n	c01c <ulist_next@@Base+0x83c>
    c008:	ldrd	r2, r3, [r1, #-8]
    c00c:	cmp	r5, r3
    c00e:	it	eq
    c010:	cmpeq	r4, r2
    c012:	bcc.n	c020 <ulist_next@@Base+0x840>
    c014:	cmp	r3, r5
    c016:	it	eq
    c018:	cmpeq	r2, r4
    c01a:	bcs.n	bfd0 <ulist_next@@Base+0x7f0>
    c01c:	adds	r3, r1, #4
    c01e:	b.n	c024 <ulist_next@@Base+0x844>
    c020:	add.w	r3, r1, #8
    c024:	mov	sl, r1
    c026:	b.n	bfb4 <ulist_next@@Base+0x7d4>
    c028:	mov	fp, sl
    c02a:	b.n	bfd0 <ulist_next@@Base+0x7f0>
    c02c:	ldr.w	sl, [sl, #4]
    c030:	b.n	bf20 <ulist_next@@Base+0x740>
    c032:	nop
    c034:	add	r3, pc, #176	; (adr r3, c0e8 <ulist_next@@Base+0x908>)
    c036:	movs	r5, r0
    c038:	orr.w	r0, r0, r2
    c03c:	b.n	be00 <ulist_next@@Base+0x620>
    c03e:	movs	r2, r0
    c040:	add	r2, pc, #592	; (adr r2, c294 <ulist_next@@Base+0xab4>)
    c042:	movs	r5, r0
    c044:	add	r2, pc, #496	; (adr r2, c238 <ulist_next@@Base+0xa58>)
    c046:	movs	r5, r0
    c048:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c04c:	movs	r6, #0
    c04e:	vpush	{d8}
    c052:	mov	r4, r6
    c054:	ldr	r3, [pc, #864]	; (c3b8 <ulist_next@@Base+0xbd8>)
    c056:	ldr	r2, [pc, #868]	; (c3bc <ulist_next@@Base+0xbdc>)
    c058:	add	r3, pc
    c05a:	sub	sp, #180	; 0xb4
    c05c:	add	r2, pc
    c05e:	str	r3, [sp, #32]
    c060:	ldr	r3, [pc, #860]	; (c3c0 <ulist_next@@Base+0xbe0>)
    c062:	str	r0, [sp, #56]	; 0x38
    c064:	ldr	r3, [r2, r3]
    c066:	ldr	r3, [r3, #0]
    c068:	str	r3, [sp, #172]	; 0xac
    c06a:	mov.w	r3, #0
    c06e:	ldr	r3, [r0, #24]
    c070:	str	r3, [sp, #36]	; 0x24
    c072:	add	r3, sp, #104	; 0x68
    c074:	str	r3, [sp, #16]
    c076:	mov	r0, r3
    c078:	bl	18548 <btrfs_init_path@@Base>
    c07c:	ldr	r3, [sp, #16]
    c07e:	ldr	r1, [sp, #36]	; 0x24
    c080:	add	r2, sp, #64	; 0x40
    c082:	mov	r0, r6
    c084:	strd	r6, r6, [sp]
    c088:	strd	r6, r6, [sp, #64]	; 0x40
    c08c:	strb.w	r6, [sp, #72]	; 0x48
    c090:	strb.w	r6, [sp, #73]	; 0x49
    c094:	strb.w	r6, [sp, #74]	; 0x4a
    c098:	strb.w	r6, [sp, #75]	; 0x4b
    c09c:	strb.w	r6, [sp, #76]	; 0x4c
    c0a0:	strb.w	r6, [sp, #77]	; 0x4d
    c0a4:	strb.w	r6, [sp, #78]	; 0x4e
    c0a8:	strb.w	r6, [sp, #79]	; 0x4f
    c0ac:	strb.w	r6, [sp, #80]	; 0x50
    c0b0:	bl	1a93c <btrfs_search_slot@@Base>
    c0b4:	subs	r7, r0, #0
    c0b6:	bge.n	c0ce <ulist_next@@Base+0x8ee>
    c0b8:	ldr	r3, [pc, #776]	; (c3c4 <ulist_next@@Base+0xbe4>)
    c0ba:	ldr	r2, [sp, #32]
    c0bc:	ldr	r0, [r2, r3]
    c0be:	mov	r3, r7
    c0c0:	ldr	r2, [pc, #772]	; (c3c8 <ulist_next@@Base+0xbe8>)
    c0c2:	add	r2, pc
    c0c4:	movs	r1, #1
    c0c6:	ldr	r0, [r0, #0]
    c0c8:	blx	8a64 <__fprintf_chk@plt+0x4>
    c0cc:	b.n	c284 <ulist_next@@Base+0xaa4>
    c0ce:	movs	r3, #1
    c0d0:	strb.w	r3, [sp, #168]	; 0xa8
    c0d4:	ldr	r3, [pc, #756]	; (c3cc <ulist_next@@Base+0xbec>)
    c0d6:	mov	sl, r6
    c0d8:	mov	fp, r6
    c0da:	str	r6, [sp, #24]
    c0dc:	add	r3, pc
    c0de:	adds	r3, #93	; 0x5d
    c0e0:	vmov	s16, r3
    c0e4:	ldr	r7, [sp, #104]	; 0x68
    c0e6:	mov.w	r8, #197	; 0xc5
    c0ea:	ldr.w	r3, [r7, #192]	; 0xc0
    c0ee:	str	r3, [sp, #60]	; 0x3c
    c0f0:	movs	r3, #0
    c0f2:	str	r3, [sp, #28]
    c0f4:	ldr	r3, [pc, #728]	; (c3d0 <ulist_next@@Base+0xbf0>)
    c0f6:	add	r3, pc
    c0f8:	vmov	s17, r3
    c0fc:	ldr	r3, [sp, #60]	; 0x3c
    c0fe:	ldr	r2, [sp, #28]
    c100:	cmp	r3, r2
    c102:	bgt.n	c12c <ulist_next@@Base+0x94c>
    c104:	ldr	r3, [sp, #36]	; 0x24
    c106:	add	r1, sp, #104	; 0x68
    c108:	movs	r5, #0
    c10a:	strb.w	r5, [sp, #169]	; 0xa9
    c10e:	ldr.w	r0, [r3, #464]	; 0x1d0
    c112:	bl	1bd70 <btrfs_next_sibling_tree_block@@Base>
    c116:	subs	r7, r0, #0
    c118:	beq.n	c0e4 <ulist_next@@Base+0x904>
    c11a:	bge.w	c3a6 <ulist_next@@Base+0xbc6>
    c11e:	ldr	r3, [pc, #676]	; (c3c4 <ulist_next@@Base+0xbe4>)
    c120:	ldr	r2, [sp, #32]
    c122:	ldr	r0, [r2, r3]
    c124:	mov	r3, r7
    c126:	ldr	r2, [pc, #684]	; (c3d4 <ulist_next@@Base+0xbf4>)
    c128:	add	r2, pc
    c12a:	b.n	c0c4 <ulist_next@@Base+0x8e4>
    c12c:	sub.w	r2, r8, #96	; 0x60
    c130:	movs	r3, #17
    c132:	add	r1, sp, #84	; 0x54
    c134:	mov	r0, r7
    c136:	bl	17a1a <read_extent_buffer@@Base>
    c13a:	ldr	r3, [sp, #84]	; 0x54
    c13c:	ldrb.w	r5, [sp, #92]	; 0x5c
    c140:	ldr.w	r6, [sp, #93]	; 0x5d
    c144:	str	r3, [sp, #16]
    c146:	ldr	r3, [sp, #88]	; 0x58
    c148:	ldr.w	r9, [sp, #97]	; 0x61
    c14c:	str.w	r6, [sp, #73]	; 0x49
    c150:	str	r3, [sp, #20]
    c152:	ldrd	r2, r3, [sp, #16]
    c156:	str.w	r9, [sp, #77]	; 0x4d
    c15a:	strb.w	r5, [sp, #72]	; 0x48
    c15e:	strd	r2, r3, [sp, #64]	; 0x40
    c162:	add.w	r3, r5, #88	; 0x58
    c166:	uxtb	r3, r3
    c168:	cmp	r3, #1
    c16a:	bhi.w	c2f8 <ulist_next@@Base+0xb18>
    c16e:	ldr	r2, [pc, #616]	; (c3d8 <ulist_next@@Base+0xbf8>)
    c170:	cmp	r5, #169	; 0xa9
    c172:	add.w	sl, r7, r8
    c176:	it	ne
    c178:	strne.w	r9, [sp, #24]
    c17c:	add	r2, pc
    c17e:	it	ne
    c180:	movne	r4, r6
    c182:	ldr.w	r5, [sl, #17]
    c186:	add.w	r6, r7, #96	; 0x60
    c18a:	ldr	r3, [r2, #32]
    c18c:	ldr.w	fp, [sl, #21]
    c190:	add.w	r3, r3, #1
    c194:	str	r3, [r2, #32]
    c196:	ittet	eq
    c198:	ldreq	r3, [sp, #56]	; 0x38
    c19a:	moveq	r2, #1
    c19c:	movne	r2, #0
    c19e:	ldreq.w	r4, [r3, #384]	; 0x180
    c1a2:	itt	eq
    c1a4:	moveq	r3, #0
    c1a6:	streq	r3, [sp, #24]
    c1a8:	add.w	r3, r5, #101	; 0x65
    c1ac:	adds	r1, r6, r3
    c1ae:	ldr	r1, [r1, #16]
    c1b0:	and.w	r1, r1, #2
    c1b4:	str	r1, [sp, #40]	; 0x28
    c1b6:	movs	r1, #0
    c1b8:	str	r1, [sp, #44]	; 0x2c
    c1ba:	ldrd	r0, r1, [sp, #40]	; 0x28
    c1be:	orrs	r1, r0
    c1c0:	beq.n	c238 <ulist_next@@Base+0xa58>
    c1c2:	cmp	r2, #0
    c1c4:	bne.n	c238 <ulist_next@@Base+0xa58>
    c1c6:	adds	r5, #143	; 0x8f
    c1c8:	add	fp, r3
    c1ca:	cmp	fp, r5
    c1cc:	bhi.n	c23e <ulist_next@@Base+0xa5e>
    c1ce:	ldr.w	r3, [sl, #17]
    c1d2:	ldrb.w	r2, [sp, #72]	; 0x48
    c1d6:	adds	r3, #101	; 0x65
    c1d8:	add	r6, r3
    c1da:	ldr	r3, [r6, #16]
    c1dc:	and.w	r3, r3, #2
    c1e0:	str	r3, [sp, #48]	; 0x30
    c1e2:	movs	r3, #0
    c1e4:	str	r3, [sp, #52]	; 0x34
    c1e6:	ldrd	r0, r1, [sp, #48]	; 0x30
    c1ea:	orrs.w	r3, r0, r1
    c1ee:	beq.n	c2ee <ulist_next@@Base+0xb0e>
    c1f0:	cmp	r2, #169	; 0xa9
    c1f2:	beq.n	c2f2 <ulist_next@@Base+0xb12>
    c1f4:	ldrb.w	r6, [r6, #41]	; 0x29
    c1f8:	cmp	r6, #0
    c1fa:	beq.w	c37e <ulist_next@@Base+0xb9e>
    c1fe:	movs	r1, #16
    c200:	movs	r0, #1
    c202:	blx	8588 <calloc@plt+0x4>
    c206:	mov	r5, r0
    c208:	cbz	r0, c234 <ulist_next@@Base+0xa54>
    c20a:	ldr	r1, [pc, #464]	; (c3dc <ulist_next@@Base+0xbfc>)
    c20c:	ldr	r3, [sp, #24]
    c20e:	add	r1, pc
    c210:	str	r4, [r0, #8]
    c212:	str	r6, [r0, #0]
    c214:	str	r3, [r0, #12]
    c216:	movs	r3, #0
    c218:	str	r3, [sp, #8]
    c21a:	strd	r0, r3, [sp]
    c21e:	ldrd	r2, r3, [sp, #16]
    c222:	ldr	r0, [r1, #28]
    c224:	bl	b708 <ulist_add@@Base>
    c228:	cmp	r0, #0
    c22a:	bge.w	c37e <ulist_next@@Base+0xb9e>
    c22e:	mov	r0, r5
    c230:	blx	8620 <free@plt+0x4>
    c234:	movs	r7, #12
    c236:	b.n	c28a <ulist_next@@Base+0xaaa>
    c238:	add.w	r5, r3, #24
    c23c:	b.n	c1c8 <ulist_next@@Base+0x9e8>
    c23e:	adds	r1, r6, r5
    c240:	ldrb.w	r9, [r6, r5]
    c244:	mov	r3, r1
    c246:	sub.w	r0, r9, #176	; 0xb0
    c24a:	ldr.w	r2, [r3, #1]!
    c24e:	ldr	r3, [r3, #4]
    c250:	cmp	r0, #8
    c252:	bhi.n	c282 <ulist_next@@Base+0xaa2>
    c254:	tbb	[pc, r0]
    c258:	asrs	r0, r5, #20
    c25a:	asrs	r4, r4, #20
    c25c:	asrs	r5, r2, #20
    c25e:	asrs	r5, r0, #20
    c260:	movs	r5, r0
    c262:	mov	r1, r2
    c264:	movs	r2, #0
    c266:	mov	ip, r3
    c268:	mov	r3, r2
    c26a:	ldr	r0, [sp, #24]
    c26c:	strd	r1, ip, [sp]
    c270:	str	r4, [sp, #8]
    c272:	str	r0, [sp, #12]
    c274:	ldrd	r0, r1, [sp, #16]
    c278:	bl	bf08 <ulist_next@@Base+0x728>
    c27c:	cbnz	r0, c2ae <ulist_next@@Base+0xace>
    c27e:	movs	r7, #12
    c280:	b.n	c284 <ulist_next@@Base+0xaa4>
    c282:	movs	r7, #1
    c284:	add	r0, sp, #104	; 0x68
    c286:	bl	18558 <btrfs_release_path@@Base>
    c28a:	ldr	r2, [pc, #340]	; (c3e0 <ulist_next@@Base+0xc00>)
    c28c:	ldr	r3, [pc, #304]	; (c3c0 <ulist_next@@Base+0xbe0>)
    c28e:	add	r2, pc
    c290:	ldr	r3, [r2, r3]
    c292:	ldr	r2, [r3, #0]
    c294:	ldr	r3, [sp, #172]	; 0xac
    c296:	eors	r2, r3
    c298:	beq.w	c3aa <ulist_next@@Base+0xbca>
    c29c:	blx	8708 <__stack_chk_fail@plt>
    c2a0:	mov	r3, r1
    c2a2:	ldr.w	r2, [r3, #1]!
    c2a6:	ldr	r3, [r3, #4]
    c2a8:	movs	r1, #0
    c2aa:	mov	ip, r1
    c2ac:	b.n	c26a <ulist_next@@Base+0xa8a>
    c2ae:	cmp.w	r9, #176	; 0xb0
    c2b2:	beq.n	c2e0 <ulist_next@@Base+0xb00>
    c2b4:	cmp.w	r9, #182	; 0xb6
    c2b8:	beq.n	c2e0 <ulist_next@@Base+0xb00>
    c2ba:	cmp.w	r9, #184	; 0xb8
    c2be:	beq.n	c2e6 <ulist_next@@Base+0xb06>
    c2c0:	cmp.w	r9, #178	; 0xb2
    c2c4:	beq.n	c2ea <ulist_next@@Base+0xb0a>
    c2c6:	ldr	r2, [pc, #284]	; (c3e4 <ulist_next@@Base+0xc04>)
    c2c8:	movs	r3, #1
    c2ca:	ldr	r1, [pc, #284]	; (c3e8 <ulist_next@@Base+0xc08>)
    c2cc:	ldr	r0, [pc, #284]	; (c3ec <ulist_next@@Base+0xc0c>)
    c2ce:	add	r2, pc
    c2d0:	str	r3, [sp, #0]
    c2d2:	adds	r2, #64	; 0x40
    c2d4:	add	r1, pc
    c2d6:	add	r0, pc
    c2d8:	movw	r3, #1818	; 0x71a
    c2dc:	bl	ba10 <ulist_next@@Base+0x230>
    c2e0:	movs	r3, #9
    c2e2:	add	r5, r3
    c2e4:	b.n	c1ca <ulist_next@@Base+0x9ea>
    c2e6:	movs	r3, #13
    c2e8:	b.n	c2e2 <ulist_next@@Base+0xb02>
    c2ea:	movs	r3, #29
    c2ec:	b.n	c2e2 <ulist_next@@Base+0xb02>
    c2ee:	cmp	r2, #169	; 0xa9
    c2f0:	bne.n	c37e <ulist_next@@Base+0xb9e>
    c2f2:	ldr.w	r6, [sp, #73]	; 0x49
    c2f6:	b.n	c1f8 <ulist_next@@Base+0xa18>
    c2f8:	add.w	r3, r5, #80	; 0x50
    c2fc:	uxtb	r3, r3
    c2fe:	cmp	r3, #8
    c300:	bhi.n	c37a <ulist_next@@Base+0xb9a>
    c302:	ldrd	r2, r3, [sp, #16]
    c306:	subs	r5, #176	; 0xb0
    c308:	vmov	r1, s16
    c30c:	cmp	fp, r3
    c30e:	vmov	r0, s17
    c312:	it	eq
    c314:	cmpeq	sl, r2
    c316:	movw	r2, #1229	; 0x4cd
    c31a:	ite	ne
    c31c:	movne	r3, #1
    c31e:	moveq	r3, #0
    c320:	bl	ba74 <ulist_next@@Base+0x294>
    c324:	cmp	r5, #8
    c326:	bhi.n	c282 <ulist_next@@Base+0xaa2>
    c328:	add	r3, pc, #8	; (adr r3, c334 <ulist_next@@Base+0xb54>)
    c32a:	ldr.w	r2, [r3, r5, lsl #2]
    c32e:	add	r3, r2
    c330:	bx	r3
    c332:	nop
    c334:	lsls	r5, r5, #1
    c336:	movs	r0, r0
    c338:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    c33c:	lsls	r3, r3, #1
    c33e:	movs	r0, r0
    c340:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    c344:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    c348:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    c34c:	movs	r5, r4
    c34e:	movs	r0, r0
    c350:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    c354:	movs	r5, r4
    c356:	movs	r0, r0
    c358:	mov	r3, r6
    c35a:	movs	r6, #0
    c35c:	mov	r2, r9
    c35e:	mov	r9, r6
    c360:	ldr	r1, [sp, #24]
    c362:	mov	r0, sl
    c364:	strd	r3, r2, [sp]
    c368:	mov	r2, r6
    c36a:	mov	r3, r9
    c36c:	str	r4, [sp, #8]
    c36e:	str	r1, [sp, #12]
    c370:	mov	r1, fp
    c372:	bl	bf08 <ulist_next@@Base+0x728>
    c376:	cmp	r0, #0
    c378:	beq.n	c27e <ulist_next@@Base+0xa9e>
    c37a:	strd	sl, fp, [sp, #16]
    c37e:	ldr	r3, [sp, #28]
    c380:	add.w	r8, r8, #25
    c384:	ldrd	sl, fp, [sp, #16]
    c388:	adds	r3, #1
    c38a:	str	r3, [sp, #28]
    c38c:	b.n	c0fc <ulist_next@@Base+0x91c>
    c38e:	add.w	r3, r7, r8
    c392:	ldr.w	r3, [r3, #17]
    c396:	add	r3, r7
    c398:	ldr.w	r6, [r3, #197]!
    c39c:	ldr.w	r9, [r3, #4]
    c3a0:	movs	r3, #0
    c3a2:	mov	r2, r3
    c3a4:	b.n	c360 <ulist_next@@Base+0xb80>
    c3a6:	mov	r7, r5
    c3a8:	b.n	c284 <ulist_next@@Base+0xaa4>
    c3aa:	mov	r0, r7
    c3ac:	add	sp, #180	; 0xb4
    c3ae:	vpop	{d8}
    c3b2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c3b6:	nop
    c3b8:	ldrh	r0, [r5, #40]	; 0x28
    c3ba:	movs	r5, r0
    c3bc:	ldrh	r4, [r4, #40]	; 0x28
    c3be:	movs	r5, r0
    c3c0:	lsls	r0, r5, #8
    c3c2:	movs	r0, r0
    c3c4:	lsls	r0, r7, #8
    c3c6:	movs	r0, r0
    c3c8:	b.n	bf2a <ulist_next@@Base+0x74a>
    c3ca:	movs	r2, r0
    c3cc:	strd	r0, r0, [r2], #8
    c3d0:	b.n	bf20 <ulist_next@@Base+0x740>
    c3d2:	movs	r2, r0
    c3d4:	b.n	beee <ulist_next@@Base+0x70e>
    c3d6:	movs	r2, r0
    c3d8:	add	r0, pc, #800	; (adr r0, c6fc <report_qgroups@@Base+0x5c>)
    c3da:	movs	r5, r0
    c3dc:	add	r0, pc, #216	; (adr r0, c4b8 <ulist_next@@Base+0xcd8>)
    c3de:	movs	r5, r0
    c3e0:	ldrh	r2, [r6, #22]
    c3e2:	movs	r5, r0
    c3e4:	b.n	c1c8 <ulist_next@@Base+0x9e8>
    c3e6:	movs	r2, r0
    c3e8:	b.n	cb68 <qgroup_verify_all@@Base+0x194>
    c3ea:	movs	r2, r0
    c3ec:	adds	r7, r4, #0
    c3ee:	movs	r3, r0
    c3f0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c3f4:	mov	r7, r1
    c3f6:	ldr	r4, [pc, #352]	; (c558 <ulist_next@@Base+0xd78>)
    c3f8:	sub	sp, #44	; 0x2c
    c3fa:	ldr	r1, [pc, #352]	; (c55c <ulist_next@@Base+0xd7c>)
    c3fc:	mov.w	sl, #0
    c400:	add	r4, pc
    c402:	mov.w	fp, #0
    c406:	mov	r6, r0
    c408:	mov	r8, r2
    c40a:	ldr	r1, [r4, r1]
    c40c:	mov	r9, r3
    c40e:	ldr	r1, [r1, #0]
    c410:	str	r1, [sp, #36]	; 0x24
    c412:	mov.w	r1, #0
    c416:	strd	sl, fp, [sp]
    c41a:	bl	1dd84 <read_tree_block@@Base>
    c41e:	mov	r4, r0
    c420:	cmp	r0, #0
    c422:	beq.w	c54a <ulist_next@@Base+0xd6a>
    c426:	cmn.w	r0, #4096	; 0x1000
    c42a:	bhi.w	c54a <ulist_next@@Base+0xd6a>
    c42e:	ldr	r3, [r0, #84]	; 0x54
    c430:	lsls	r3, r3, #29
    c432:	bpl.w	c54a <ulist_next@@Base+0xd6a>
    c436:	ldrd	r2, r3, [sp, #88]	; 0x58
    c43a:	cmp	r9, r3
    c43c:	it	eq
    c43e:	cmpeq	r8, r2
    c440:	bne.n	c49a <ulist_next@@Base+0xcba>
    c442:	ldrb.w	r5, [r4, #196]	; 0xc4
    c446:	ldr.w	r8, [r4, #192]	; 0xc0
    c44a:	cmp	r5, #0
    c44c:	beq.n	c544 <ulist_next@@Base+0xd64>
    c44e:	ldr.w	r9, [pc, #272]	; c560 <ulist_next@@Base+0xd80>
    c452:	movs	r5, #0
    c454:	mov	fp, r5
    c456:	mov	sl, r5
    c458:	add	r9, pc
    c45a:	cmp	r5, r8
    c45c:	bge.n	c4e4 <ulist_next@@Base+0xd04>
    c45e:	ldr.w	r2, [r9, #36]	; 0x24
    c462:	ldrd	r3, r1, [r2]
    c466:	adds	r3, #1
    c468:	adc.w	r1, r1, #0
    c46c:	strd	r3, r1, [r2]
    c470:	add.w	r3, r5, r5, lsl #5
    c474:	ldrd	r0, r1, [sp, #88]	; 0x58
    c478:	add	r3, r4
    c47a:	adds	r5, #1
    c47c:	ldr.w	r2, [r3, #214]!
    c480:	ldr	r3, [r3, #4]
    c482:	strd	r0, r1, [sp, #8]
    c486:	mov	r0, r6
    c488:	ldr.w	r1, [r6, #384]	; 0x180
    c48c:	strd	r1, sl, [sp]
    c490:	mov	r1, r7
    c492:	bl	c3f0 <ulist_next@@Base+0xc10>
    c496:	mov	fp, r0
    c498:	b.n	c45a <ulist_next@@Base+0xc7a>
    c49a:	ldrd	r2, r3, [sp, #80]	; 0x50
    c49e:	mov	r0, r8
    c4a0:	mov	r1, r9
    c4a2:	strd	r2, r3, [sp, #8]
    c4a6:	ldrd	r2, r3, [sp, #88]	; 0x58
    c4aa:	strd	r2, r3, [sp]
    c4ae:	mov	r2, sl
    c4b0:	mov	r3, fp
    c4b2:	bl	bf08 <ulist_next@@Base+0x728>
    c4b6:	cmp	r0, #0
    c4b8:	bne.n	c442 <ulist_next@@Base+0xc62>
    c4ba:	mov.w	fp, #12
    c4be:	b.n	c4ea <ulist_next@@Base+0xd0a>
    c4c0:	mul.w	r9, r6, r5
    c4c4:	movs	r3, #17
    c4c6:	mov	r1, r7
    c4c8:	mov	r0, r4
    c4ca:	add.w	r2, r9, #101	; 0x65
    c4ce:	bl	17a1a <read_extent_buffer@@Base>
    c4d2:	ldrb.w	r3, [sp, #24]
    c4d6:	cmp	r3, #108	; 0x6c
    c4d8:	beq.n	c4fe <ulist_next@@Base+0xd1e>
    c4da:	adds	r5, #1
    c4dc:	cmp	r5, r8
    c4de:	blt.n	c4c0 <ulist_next@@Base+0xce0>
    c4e0:	mov.w	fp, #0
    c4e4:	mov	r0, r4
    c4e6:	bl	17320 <free_extent_buffer@@Base>
    c4ea:	ldr	r2, [pc, #120]	; (c564 <ulist_next@@Base+0xd84>)
    c4ec:	ldr	r3, [pc, #108]	; (c55c <ulist_next@@Base+0xd7c>)
    c4ee:	add	r2, pc
    c4f0:	ldr	r3, [r2, r3]
    c4f2:	ldr	r2, [r3, #0]
    c4f4:	ldr	r3, [sp, #36]	; 0x24
    c4f6:	eors	r2, r3
    c4f8:	beq.n	c550 <ulist_next@@Base+0xd70>
    c4fa:	blx	8708 <__stack_chk_fail@plt>
    c4fe:	add	r9, r4
    c500:	ldr.w	r2, [r9, #214]	; 0xd6
    c504:	add	r2, r4
    c506:	add.w	r3, r2, #197	; 0xc5
    c50a:	ldrb.w	r2, [r2, #217]	; 0xd9
    c50e:	cmp	r2, #0
    c510:	beq.n	c4da <ulist_next@@Base+0xcfa>
    c512:	mov	r2, r3
    c514:	ldr.w	r0, [r2, #21]!
    c518:	ldr	r1, [r2, #4]
    c51a:	orrs.w	r2, r0, r1
    c51e:	beq.n	c4da <ulist_next@@Base+0xcfa>
    c520:	ldr.w	r2, [r3, #29]!
    c524:	ldr	r3, [r3, #4]
    c526:	strd	r2, r3, [sp, #8]
    c52a:	ldrd	r2, r3, [sp, #88]	; 0x58
    c52e:	strd	r2, r3, [sp]
    c532:	movs	r2, #0
    c534:	movs	r3, #0
    c536:	bl	bf08 <ulist_next@@Base+0x728>
    c53a:	cmp	r0, #0
    c53c:	bne.n	c4da <ulist_next@@Base+0xcfa>
    c53e:	mov.w	fp, #12
    c542:	b.n	c4e4 <ulist_next@@Base+0xd04>
    c544:	add	r7, sp, #16
    c546:	movs	r6, #25
    c548:	b.n	c4dc <ulist_next@@Base+0xcfc>
    c54a:	mvn.w	fp, #4
    c54e:	b.n	c4ea <ulist_next@@Base+0xd0a>
    c550:	mov	r0, fp
    c552:	add	sp, #44	; 0x2c
    c554:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c558:	ldrh	r0, [r0, #12]
    c55a:	movs	r5, r0
    c55c:	lsls	r0, r5, #8
    c55e:	movs	r0, r0
    c560:	ldr	r5, [sp, #944]	; 0x3b0
    c562:	movs	r5, r0
    c564:	ldrh	r2, [r2, #4]
    c566:	movs	r5, r0
    c568:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c56c:	mov	r4, r0
    c56e:	vpush	{d8}
    c572:	ldr	r2, [pc, #264]	; (c67c <ulist_next@@Base+0xe9c>)
    c574:	ldr	r3, [pc, #264]	; (c680 <ulist_next@@Base+0xea0>)
    c576:	add	r2, pc
    c578:	ldr	r5, [pc, #264]	; (c684 <ulist_next@@Base+0xea4>)
    c57a:	sub	sp, #60	; 0x3c
    c57c:	ldr	r3, [r2, r3]
    c57e:	add	r5, pc
    c580:	adds	r5, #106	; 0x6a
    c582:	ldr	r3, [r3, #0]
    c584:	str	r3, [sp, #52]	; 0x34
    c586:	mov.w	r3, #0
    c58a:	movs	r3, #0
    c58c:	str	r3, [sp, #28]
    c58e:	ldr	r3, [pc, #248]	; (c688 <ulist_next@@Base+0xea8>)
    c590:	add	r3, pc
    c592:	str	r3, [sp, #20]
    c594:	ldr	r3, [sp, #20]
    c596:	add	r1, sp, #28
    c598:	ldr	r0, [r3, #28]
    c59a:	bl	b7e0 <ulist_next@@Base>
    c59e:	cmp	r0, #0
    c5a0:	beq.n	c63c <ulist_next@@Base+0xe5c>
    c5a2:	ldr	r3, [pc, #232]	; (c68c <ulist_next@@Base+0xeac>)
    c5a4:	ldrd	r7, r6, [r0]
    c5a8:	add	r3, pc
    c5aa:	ldr.w	r9, [r0, #8]
    c5ae:	vmov	s16, r3
    c5b2:	mov	sl, r7
    c5b4:	mov	fp, r6
    c5b6:	mov	r1, fp
    c5b8:	mov	r0, sl
    c5ba:	bl	b856 <ulist_next@@Base+0x76>
    c5be:	movw	r2, #590	; 0x24e
    c5c2:	mov	r1, r5
    c5c4:	clz	r3, r0
    c5c8:	mov	r8, r0
    c5ca:	vmov	r0, s16
    c5ce:	lsrs	r3, r3, #5
    c5d0:	bl	ba74 <ulist_next@@Base+0x294>
    c5d4:	ldrd	r2, r3, [r8, #24]
    c5d8:	orrs.w	r1, r2, r3
    c5dc:	bne.n	c5f0 <ulist_next@@Base+0xe10>
    c5de:	ldrd	r2, r3, [r8, #16]
    c5e2:	cmp	fp, r3
    c5e4:	it	eq
    c5e6:	cmpeq	sl, r2
    c5e8:	beq.n	c594 <ulist_next@@Base+0xdb4>
    c5ea:	mov	sl, r2
    c5ec:	mov	fp, r3
    c5ee:	b.n	c5b6 <ulist_next@@Base+0xdd6>
    c5f0:	mov.w	r1, #4294967295	; 0xffffffff
    c5f4:	cmp	r3, r1
    c5f6:	mvn.w	r0, #7
    c5fa:	it	eq
    c5fc:	cmpeq	r2, r0
    c5fe:	beq.n	c594 <ulist_next@@Base+0xdb4>
    c600:	add	r1, sp, #32
    c602:	mov	r0, r4
    c604:	strd	r2, r3, [sp, #32]
    c608:	mov.w	r2, #4294967295	; 0xffffffff
    c60c:	movs	r3, #132	; 0x84
    c60e:	strb.w	r2, [sp, #41]	; 0x29
    c612:	strb.w	r3, [sp, #40]	; 0x28
    c616:	strb.w	r2, [sp, #42]	; 0x2a
    c61a:	strb.w	r2, [sp, #43]	; 0x2b
    c61e:	strb.w	r2, [sp, #44]	; 0x2c
    c622:	strb.w	r2, [sp, #45]	; 0x2d
    c626:	strb.w	r2, [sp, #46]	; 0x2e
    c62a:	strb.w	r2, [sp, #47]	; 0x2f
    c62e:	strb.w	r2, [sp, #48]	; 0x30
    c632:	bl	1e106 <btrfs_read_fs_root@@Base>
    c636:	mov	r1, r0
    c638:	cbnz	r0, c650 <ulist_next@@Base+0xe70>
    c63a:	movs	r0, #2
    c63c:	ldr	r2, [pc, #80]	; (c690 <ulist_next@@Base+0xeb0>)
    c63e:	ldr	r3, [pc, #64]	; (c680 <ulist_next@@Base+0xea0>)
    c640:	add	r2, pc
    c642:	ldr	r3, [r2, r3]
    c644:	ldr	r2, [r3, #0]
    c646:	ldr	r3, [sp, #52]	; 0x34
    c648:	eors	r2, r3
    c64a:	beq.n	c672 <ulist_next@@Base+0xe92>
    c64c:	blx	8708 <__stack_chk_fail@plt>
    c650:	cmn.w	r0, #4096	; 0x1000
    c654:	bhi.n	c63a <ulist_next@@Base+0xe5a>
    c656:	strd	r7, r6, [sp, #8]
    c65a:	mov	r0, r4
    c65c:	ldrd	r2, r3, [r9, #8]
    c660:	strd	r2, r3, [sp]
    c664:	mov	r2, r7
    c666:	mov	r3, r6
    c668:	bl	c3f0 <ulist_next@@Base+0xc10>
    c66c:	cmp	r0, #0
    c66e:	beq.n	c594 <ulist_next@@Base+0xdb4>
    c670:	b.n	c63c <ulist_next@@Base+0xe5c>
    c672:	add	sp, #60	; 0x3c
    c674:	vpop	{d8}
    c678:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c67c:	ldrh	r2, [r1, #0]
    c67e:	movs	r5, r0
    c680:	lsls	r0, r5, #8
    c682:	movs	r0, r0
    c684:	b.n	bf08 <ulist_next@@Base+0x728>
    c686:	movs	r2, r0
    c688:	ldr	r4, [sp, #720]	; 0x2d0
    c68a:	movs	r5, r0
    c68c:	b.n	c8e0 <report_qgroups@@Base+0x240>
    c68e:	movs	r2, r0
    c690:	strh	r0, [r0, #58]	; 0x3a
    c692:	movs	r5, r0

0000c694 <qgroup_set_item_count_ptr@@Base>:
    c694:	ldr	r3, [pc, #4]	; (c69c <qgroup_set_item_count_ptr@@Base+0x8>)
    c696:	add	r3, pc
    c698:	str	r0, [r3, #36]	; 0x24
    c69a:	bx	lr
    c69c:	ldr	r3, [sp, #696]	; 0x2b8
    c69e:	movs	r5, r0

0000c6a0 <report_qgroups@@Base>:
    c6a0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c6a4:	mov	r5, r0
    c6a6:	ldr	r4, [pc, #552]	; (c8d0 <report_qgroups@@Base+0x230>)
    c6a8:	sub	sp, #60	; 0x3c
    c6aa:	ldr	r3, [pc, #552]	; (c8d4 <report_qgroups@@Base+0x234>)
    c6ac:	add	r4, pc
    c6ae:	ldr	r3, [r4, r3]
    c6b0:	ldr	r3, [r3, #0]
    c6b2:	cbnz	r3, c6c8 <report_qgroups@@Base+0x28>
    c6b4:	ldr	r3, [pc, #544]	; (c8d8 <report_qgroups@@Base+0x238>)
    c6b6:	add	r3, pc
    c6b8:	ldrb	r3, [r3, #8]
    c6ba:	lsls	r3, r3, #31
    c6bc:	bpl.n	c6c8 <report_qgroups@@Base+0x28>
    c6be:	cbz	r0, c6fc <report_qgroups@@Base+0x5c>
    c6c0:	ldr	r0, [pc, #536]	; (c8dc <report_qgroups@@Base+0x23c>)
    c6c2:	add	r0, pc
    c6c4:	blx	8854 <puts@plt+0x4>
    c6c8:	ldr	r6, [pc, #532]	; (c8e0 <report_qgroups@@Base+0x240>)
    c6ca:	add	r6, pc
    c6cc:	ldrb	r3, [r6, #8]
    c6ce:	and.w	r3, r3, #3
    c6d2:	cmp	r3, #2
    c6d4:	bne.n	c70c <report_qgroups@@Base+0x6c>
    c6d6:	ldr	r0, [pc, #524]	; (c8e4 <report_qgroups@@Base+0x244>)
    c6d8:	add	r0, pc
    c6da:	blx	8854 <puts@plt+0x4>
    c6de:	ldrb	r3, [r6, #8]
    c6e0:	and.w	r3, r3, #3
    c6e4:	cmp	r3, #2
    c6e6:	bne.n	c6f6 <report_qgroups@@Base+0x56>
    c6e8:	ldr	r3, [pc, #508]	; (c8e8 <report_qgroups@@Base+0x248>)
    c6ea:	ldr	r0, [pc, #512]	; (c8ec <report_qgroups@@Base+0x24c>)
    c6ec:	ldr	r3, [r4, r3]
    c6ee:	add	r0, pc
    c6f0:	ldr	r1, [r3, #0]
    c6f2:	blx	8b6c <fputs@plt+0x4>
    c6f6:	mov.w	r8, #1
    c6fa:	b.n	c710 <report_qgroups@@Base+0x70>
    c6fc:	ldr	r0, [pc, #496]	; (c8f0 <report_qgroups@@Base+0x250>)
    c6fe:	add	r0, pc
    c700:	blx	8854 <puts@plt+0x4>
    c704:	mov	r0, r5
    c706:	add	sp, #60	; 0x3c
    c708:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c70c:	mov.w	r8, #0
    c710:	ldr	r0, [pc, #480]	; (c8f4 <report_qgroups@@Base+0x254>)
    c712:	movs	r7, #0
    c714:	ldr.w	r9, [pc, #480]	; c8f8 <report_qgroups@@Base+0x258>
    c718:	add	r0, pc
    c71a:	ldr.w	sl, [pc, #480]	; c8fc <report_qgroups@@Base+0x25c>
    c71e:	bl	13c46 <rb_first@@Base>
    c722:	ldr	r6, [pc, #476]	; (c900 <report_qgroups@@Base+0x260>)
    c724:	add	r9, pc
    c726:	add	sl, pc
    c728:	add	r6, pc
    c72a:	mov	r4, r0
    c72c:	cbnz	r4, c742 <report_qgroups@@Base+0xa2>
    c72e:	cmp	r7, #0
    c730:	beq.w	c8cc <report_qgroups@@Base+0x22c>
    c734:	cmp.w	r8, #0
    c738:	ite	ne
    c73a:	movne	r5, #0
    c73c:	mvneq.w	r5, #116	; 0x74
    c740:	b.n	c704 <report_qgroups@@Base+0x64>
    c742:	ldrd	r2, r0, [r4, #-16]
    c746:	ldrd	r3, r1, [r4, #-48]	; 0x30
    c74a:	subs	r3, r2, r3
    c74c:	str	r3, [sp, #24]
    c74e:	sbc.w	r3, r0, r1
    c752:	ldrd	r2, r0, [r4, #-32]
    c756:	str	r3, [sp, #28]
    c758:	ldrd	r3, r1, [r4, #-64]	; 0x40
    c75c:	subs	r3, r2, r3
    c75e:	str	r3, [sp, #32]
    c760:	ldr	r2, [sp, #32]
    c762:	sbc.w	r3, r0, r1
    c766:	str	r3, [sp, #36]	; 0x24
    c768:	ldr	r3, [sp, #24]
    c76a:	orrs	r3, r2
    c76c:	ldr	r2, [sp, #36]	; 0x24
    c76e:	str	r3, [sp, #40]	; 0x28
    c770:	ldr	r3, [sp, #28]
    c772:	orrs	r3, r2
    c774:	str	r3, [sp, #44]	; 0x2c
    c776:	cbnz	r5, c794 <report_qgroups@@Base+0xf4>
    c778:	ldrd	r2, r3, [sp, #40]	; 0x28
    c77c:	orrs	r3, r2
    c77e:	beq.w	c8c2 <report_qgroups@@Base+0x222>
    c782:	ldr.w	r3, [r4, #-88]
    c786:	cbnz	r3, c794 <report_qgroups@@Base+0xf4>
    c788:	ldrh.w	r2, [r4, #-90]
    c78c:	mov	r3, r5
    c78e:	orrs	r3, r2
    c790:	beq.w	c89e <report_qgroups@@Base+0x1fe>
    c794:	ldrd	fp, ip, [sp, #40]	; 0x28
    c798:	ldrd	r0, r3, [r4, #-96]	; 0x60
    c79c:	orrs.w	r1, fp, ip
    c7a0:	mov.w	r2, r3, lsr #16
    c7a4:	uxth	r3, r3
    c7a6:	bne.w	c8b4 <report_qgroups@@Base+0x214>
    c7aa:	ldr	r1, [pc, #344]	; (c904 <report_qgroups@@Base+0x264>)
    c7ac:	add	r1, pc
    c7ae:	strd	r0, r3, [sp]
    c7b2:	movs	r3, #0
    c7b4:	str	r1, [sp, #8]
    c7b6:	movs	r0, #1
    c7b8:	mov	r1, sl
    c7ba:	blx	8a30 <__printf_chk@plt+0x4>
    c7be:	ldrd	r2, r3, [r4, #-24]
    c7c2:	str	r6, [sp, #8]
    c7c4:	movs	r0, #1
    c7c6:	ldr	r1, [pc, #320]	; (c908 <report_qgroups@@Base+0x268>)
    c7c8:	strd	r2, r3, [sp, #16]
    c7cc:	ldrd	r2, r3, [r4, #-32]
    c7d0:	add	r1, pc
    c7d2:	str	r1, [sp, #52]	; 0x34
    c7d4:	strd	r2, r3, [sp]
    c7d8:	mov	r3, r6
    c7da:	ldr	r2, [pc, #304]	; (c90c <report_qgroups@@Base+0x26c>)
    c7dc:	add	r2, pc
    c7de:	blx	8a30 <__printf_chk@plt+0x4>
    c7e2:	ldrd	r2, r3, [r4, #-56]	; 0x38
    c7e6:	str	r6, [sp, #8]
    c7e8:	movs	r0, #1
    c7ea:	ldr	r1, [sp, #52]	; 0x34
    c7ec:	strd	r2, r3, [sp, #16]
    c7f0:	ldrd	r2, r3, [r4, #-64]	; 0x40
    c7f4:	strd	r2, r3, [sp]
    c7f8:	mov	r3, r6
    c7fa:	ldr	r2, [pc, #276]	; (c910 <report_qgroups@@Base+0x270>)
    c7fc:	add	r2, pc
    c7fe:	blx	8a30 <__printf_chk@plt+0x4>
    c802:	ldrd	r2, r3, [sp, #32]
    c806:	orrs	r3, r2
    c808:	beq.n	c828 <report_qgroups@@Base+0x188>
    c80a:	ldrd	r2, r3, [sp, #32]
    c80e:	movs	r0, #1
    c810:	ldr	r1, [pc, #256]	; (c914 <report_qgroups@@Base+0x274>)
    c812:	str	r6, [sp, #8]
    c814:	strd	r2, r3, [sp, #16]
    c818:	add	r1, pc
    c81a:	strd	r2, r3, [sp]
    c81e:	mov	r3, r6
    c820:	ldr	r2, [pc, #244]	; (c918 <report_qgroups@@Base+0x278>)
    c822:	add	r2, pc
    c824:	blx	8a30 <__printf_chk@plt+0x4>
    c828:	ldrd	r2, r3, [r4, #-8]
    c82c:	movs	r0, #1
    c82e:	ldr.w	fp, [pc, #236]	; c91c <report_qgroups@@Base+0x27c>
    c832:	ldr	r1, [pc, #236]	; (c920 <report_qgroups@@Base+0x280>)
    c834:	add	fp, pc
    c836:	strd	r2, r3, [sp, #16]
    c83a:	str.w	fp, [sp, #8]
    c83e:	add	r1, pc
    c840:	ldrd	r2, r3, [r4, #-16]
    c844:	str	r1, [sp, #52]	; 0x34
    c846:	strd	r2, r3, [sp]
    c84a:	mov	r3, fp
    c84c:	ldr	r2, [pc, #212]	; (c924 <report_qgroups@@Base+0x284>)
    c84e:	add	r2, pc
    c850:	blx	8a30 <__printf_chk@plt+0x4>
    c854:	ldrd	r2, r3, [r4, #-40]	; 0x28
    c858:	str.w	fp, [sp, #8]
    c85c:	movs	r0, #1
    c85e:	ldr	r1, [sp, #52]	; 0x34
    c860:	strd	r2, r3, [sp, #16]
    c864:	ldrd	r2, r3, [r4, #-48]	; 0x30
    c868:	strd	r2, r3, [sp]
    c86c:	mov	r3, fp
    c86e:	ldr	r2, [pc, #184]	; (c928 <report_qgroups@@Base+0x288>)
    c870:	add	r2, pc
    c872:	blx	8a30 <__printf_chk@plt+0x4>
    c876:	ldrd	r2, r3, [sp, #24]
    c87a:	orrs	r3, r2
    c87c:	beq.n	c8ba <report_qgroups@@Base+0x21a>
    c87e:	ldrd	r2, r3, [sp, #24]
    c882:	movs	r0, #1
    c884:	ldr	r1, [pc, #164]	; (c92c <report_qgroups@@Base+0x28c>)
    c886:	str.w	fp, [sp, #8]
    c88a:	strd	r2, r3, [sp, #16]
    c88e:	add	r1, pc
    c890:	strd	r2, r3, [sp]
    c894:	mov	r3, fp
    c896:	ldr	r2, [pc, #152]	; (c930 <report_qgroups@@Base+0x290>)
    c898:	add	r2, pc
    c89a:	blx	8a30 <__printf_chk@plt+0x4>
    c89e:	ldr.w	r2, [r9, #4]
    c8a2:	add.w	r3, r4, #40	; 0x28
    c8a6:	movs	r7, #1
    c8a8:	str.w	r3, [r9, #4]
    c8ac:	strd	r9, r2, [r4, #40]	; 0x28
    c8b0:	str	r3, [r2, #0]
    c8b2:	b.n	c8c2 <report_qgroups@@Base+0x222>
    c8b4:	ldr	r1, [pc, #124]	; (c934 <report_qgroups@@Base+0x294>)
    c8b6:	add	r1, pc
    c8b8:	b.n	c7ae <report_qgroups@@Base+0x10e>
    c8ba:	ldrd	r2, r3, [sp, #40]	; 0x28
    c8be:	orrs	r3, r2
    c8c0:	bne.n	c89e <report_qgroups@@Base+0x1fe>
    c8c2:	mov	r0, r4
    c8c4:	bl	13c66 <rb_next@@Base>
    c8c8:	mov	r4, r0
    c8ca:	b.n	c72c <report_qgroups@@Base+0x8c>
    c8cc:	mov	r5, r7
    c8ce:	b.n	c704 <report_qgroups@@Base+0x64>
    c8d0:	strh	r4, [r2, #54]	; 0x36
    c8d2:	movs	r5, r0
    c8d4:	lsls	r0, r1, #9
    c8d6:	movs	r0, r0
    c8d8:	ldr	r3, [sp, #568]	; 0x238
    c8da:	movs	r5, r0
    c8dc:	b.n	c930 <report_qgroups@@Base+0x290>
    c8de:	movs	r2, r0
    c8e0:	ldr	r3, [sp, #488]	; 0x1e8
    c8e2:	movs	r5, r0
    c8e4:	b.n	ca02 <qgroup_verify_all@@Base+0x2e>
    c8e6:	movs	r2, r0
    c8e8:	lsls	r0, r7, #8
    c8ea:	movs	r0, r0
    c8ec:	b.n	ca7a <qgroup_verify_all@@Base+0xa6>
    c8ee:	movs	r2, r0
    c8f0:	b.n	c954 <free_qgroup_counts@@Base+0x1c>
    c8f2:	movs	r2, r0
    c8f4:	ldr	r3, [sp, #176]	; 0xb0
    c8f6:	movs	r5, r0
    c8f8:	ldrh	r0, [r4, #12]
    c8fa:	movs	r5, r0
    c8fc:	b.n	ca62 <qgroup_verify_all@@Base+0x8e>
    c8fe:	movs	r2, r0
    c900:	b.n	caaa <qgroup_verify_all@@Base+0xd6>
    c902:	movs	r2, r0
    c904:	udf	#97	; 0x61
    c906:	movs	r2, r0
    c908:	b.n	c982 <free_qgroup_counts@@Base+0x4a>
    c90a:	movs	r2, r0
    c90c:	b.n	c964 <free_qgroup_counts@@Base+0x2c>
    c90e:	movs	r2, r0
    c910:	b.n	c972 <free_qgroup_counts@@Base+0x3a>
    c912:	movs	r2, r0
    c914:	b.n	c956 <free_qgroup_counts@@Base+0x1e>
    c916:	movs	r2, r0
    c918:	b.n	c93a <free_qgroup_counts@@Base+0x2>
    c91a:	movs	r2, r0
    c91c:	b.n	c966 <free_qgroup_counts@@Base+0x2e>
    c91e:	movs	r2, r0
    c920:	svc	205	; 0xcd
    c922:	movs	r2, r0
    c924:	svc	184	; 0xb8
    c926:	movs	r2, r0
    c928:	svc	187	; 0xbb
    c92a:	movs	r2, r0
    c92c:	svc	169	; 0xa9
    c92e:	movs	r2, r0
    c930:	svc	153	; 0x99
    c932:	movs	r2, r0
    c934:	udf	#38	; 0x26
    c936:	movs	r2, r0

0000c938 <free_qgroup_counts@@Base>:
    c938:	ldr	r0, [pc, #144]	; (c9cc <free_qgroup_counts@@Base+0x94>)
    c93a:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    c93e:	add	r0, pc
    c940:	bl	13c46 <rb_first@@Base>
    c944:	ldr	r6, [pc, #136]	; (c9d0 <free_qgroup_counts@@Base+0x98>)
    c946:	add	r6, pc
    c948:	mov	r4, r0
    c94a:	cbnz	r4, c950 <free_qgroup_counts@@Base+0x18>
    c94c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    c950:	add.w	r0, r4, #40	; 0x28
    c954:	mov	r5, r4
    c956:	bl	b800 <ulist_next@@Base+0x20>
    c95a:	ldr.w	r1, [r5, #12]!
    c95e:	sub.w	r7, r4, #96	; 0x60
    c962:	ldr.w	r8, [r1]
    c966:	cmp	r1, r5
    c968:	bne.n	c992 <free_qgroup_counts@@Base+0x5a>
    c96a:	mov	r5, r4
    c96c:	ldr.w	r1, [r5, #20]!
    c970:	ldr.w	r8, [r1]
    c974:	cmp	r1, r5
    c976:	bne.n	c9ae <free_qgroup_counts@@Base+0x76>
    c978:	mov	r0, r4
    c97a:	bl	13c66 <rb_next@@Base>
    c97e:	mov	r1, r6
    c980:	mov	r5, r0
    c982:	mov	r0, r4
    c984:	bl	139d0 <rb_erase@@Base>
    c988:	mov	r0, r7
    c98a:	blx	8620 <free@plt+0x4>
    c98e:	mov	r4, r5
    c990:	b.n	c94a <free_qgroup_counts@@Base+0x12>
    c992:	mov	r0, r1
    c994:	bl	b800 <ulist_next@@Base+0x20>
    c998:	add.w	r0, r1, #8
    c99c:	bl	b800 <ulist_next@@Base+0x20>
    c9a0:	mov	r0, r1
    c9a2:	blx	8620 <free@plt+0x4>
    c9a6:	mov	r1, r8
    c9a8:	ldr.w	r8, [r8]
    c9ac:	b.n	c966 <free_qgroup_counts@@Base+0x2e>
    c9ae:	mov	r0, r1
    c9b0:	bl	b800 <ulist_next@@Base+0x20>
    c9b4:	add.w	r0, r1, #8
    c9b8:	bl	b800 <ulist_next@@Base+0x20>
    c9bc:	mov	r0, r1
    c9be:	blx	8620 <free@plt+0x4>
    c9c2:	mov	r1, r8
    c9c4:	ldr.w	r8, [r8]
    c9c8:	b.n	c974 <free_qgroup_counts@@Base+0x3c>
    c9ca:	nop
    c9cc:	ldr	r1, [sp, #24]
    c9ce:	movs	r5, r0
    c9d0:	ldr	r0, [sp, #1016]	; 0x3f8
    c9d2:	movs	r5, r0

0000c9d4 <qgroup_verify_all@@Base>:
    c9d4:	ldr	r2, [pc, #956]	; (cd94 <qgroup_verify_all@@Base+0x3c0>)
    c9d6:	ldr	r3, [pc, #960]	; (cd98 <qgroup_verify_all@@Base+0x3c4>)
    c9d8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c9dc:	add	r2, pc
    c9de:	ldrb.w	r4, [r0, #364]	; 0x16c
    c9e2:	mov	r9, r0
    c9e4:	ldr.w	r8, [pc, #948]	; cd9c <qgroup_verify_all@@Base+0x3c8>
    c9e8:	sub	sp, #196	; 0xc4
    c9ea:	ldr	r3, [r2, r3]
    c9ec:	ands.w	r0, r4, #16
    c9f0:	add	r8, pc
    c9f2:	ldr	r3, [r3, #0]
    c9f4:	str	r3, [sp, #188]	; 0xbc
    c9f6:	mov.w	r3, #0
    c9fa:	beq.w	cd86 <qgroup_verify_all@@Base+0x3b2>
    c9fe:	movs	r0, #0
    ca00:	bl	b5e0 <ulist_alloc@@Base>
    ca04:	ldr	r3, [pc, #920]	; (cda0 <qgroup_verify_all@@Base+0x3cc>)
    ca06:	add	r3, pc
    ca08:	str	r0, [r3, #28]
    ca0a:	cbnz	r0, ca34 <qgroup_verify_all@@Base+0x60>
    ca0c:	ldr	r3, [pc, #916]	; (cda4 <qgroup_verify_all@@Base+0x3d0>)
    ca0e:	movs	r4, #12
    ca10:	ldr	r0, [pc, #916]	; (cda8 <qgroup_verify_all@@Base+0x3d4>)
    ca12:	ldr.w	r3, [r8, r3]
    ca16:	add	r0, pc
    ca18:	ldr	r1, [r3, #0]
    ca1a:	blx	8b6c <fputs@plt+0x4>
    ca1e:	ldr	r2, [pc, #908]	; (cdac <qgroup_verify_all@@Base+0x3d8>)
    ca20:	ldr	r3, [pc, #884]	; (cd98 <qgroup_verify_all@@Base+0x3c4>)
    ca22:	add	r2, pc
    ca24:	ldr	r3, [r2, r3]
    ca26:	ldr	r2, [r3, #0]
    ca28:	ldr	r3, [sp, #188]	; 0xbc
    ca2a:	eors	r2, r3
    ca2c:	beq.w	cd8a <qgroup_verify_all@@Base+0x3b6>
    ca30:	blx	8708 <__stack_chk_fail@plt>
    ca34:	ldr.w	r3, [r9, #44]	; 0x2c
    ca38:	mov.w	fp, #0
    ca3c:	mov.w	sl, #2
    ca40:	mov	r6, fp
    ca42:	str	r3, [sp, #40]	; 0x28
    ca44:	ldr	r3, [pc, #872]	; (cdb0 <qgroup_verify_all@@Base+0x3dc>)
    ca46:	add	r3, pc
    ca48:	str	r3, [sp, #52]	; 0x34
    ca4a:	add	r3, sp, #120	; 0x78
    ca4c:	str	r3, [sp, #8]
    ca4e:	mov	r0, r3
    ca50:	bl	18548 <btrfs_init_path@@Base>
    ca54:	ldr	r3, [sp, #8]
    ca56:	strb.w	r6, [sp, #69]	; 0x45
    ca5a:	strb.w	r6, [sp, #70]	; 0x46
    ca5e:	strb.w	r6, [sp, #71]	; 0x47
    ca62:	strb.w	r6, [sp, #72]	; 0x48
    ca66:	strb.w	r6, [sp, #73]	; 0x49
    ca6a:	strb.w	r6, [sp, #74]	; 0x4a
    ca6e:	strb.w	r6, [sp, #75]	; 0x4b
    ca72:	strb.w	r6, [sp, #76]	; 0x4c
    ca76:	cmp.w	fp, #0
    ca7a:	bne.n	cb08 <qgroup_verify_all@@Base+0x134>
    ca7c:	movs	r2, #246	; 0xf6
    ca7e:	mov	r1, fp
    ca80:	strd	r2, r1, [sp, #60]	; 0x3c
    ca84:	movs	r0, #0
    ca86:	movs	r2, #0
    ca88:	ldr	r1, [sp, #40]	; 0x28
    ca8a:	strd	r2, r2, [sp]
    ca8e:	add	r2, sp, #60	; 0x3c
    ca90:	strb.w	r6, [sp, #68]	; 0x44
    ca94:	bl	1a93c <btrfs_search_slot@@Base>
    ca98:	subs	r4, r0, #0
    ca9a:	blt.n	cb0e <qgroup_verify_all@@Base+0x13a>
    ca9c:	ldr	r3, [pc, #788]	; (cdb4 <qgroup_verify_all@@Base+0x3e0>)
    ca9e:	add	r3, pc
    caa0:	str	r3, [sp, #36]	; 0x24
    caa2:	ldr	r3, [sp, #120]	; 0x78
    caa4:	str	r3, [sp, #20]
    caa6:	ldr.w	r3, [r3, #192]	; 0xc0
    caaa:	str	r3, [sp, #44]	; 0x2c
    caac:	ldr	r3, [sp, #20]
    caae:	adds	r3, #197	; 0xc5
    cab0:	str	r3, [sp, #28]
    cab2:	movs	r3, #0
    cab4:	str	r3, [sp, #24]
    cab6:	ldr	r3, [pc, #768]	; (cdb8 <qgroup_verify_all@@Base+0x3e4>)
    cab8:	add	r3, pc
    caba:	str	r3, [sp, #32]
    cabc:	ldr	r3, [sp, #44]	; 0x2c
    cabe:	ldr	r2, [sp, #24]
    cac0:	cmp	r3, r2
    cac2:	bgt.n	cb4a <qgroup_verify_all@@Base+0x176>
    cac4:	ldr	r3, [sp, #40]	; 0x28
    cac6:	add	r4, sp, #120	; 0x78
    cac8:	strb.w	r6, [sp, #185]	; 0xb9
    cacc:	mov	r1, r4
    cace:	ldr.w	r0, [r3, #464]	; 0x1d0
    cad2:	bl	1bd70 <btrfs_next_sibling_tree_block@@Base>
    cad6:	cmp	r0, #0
    cad8:	beq.n	caa2 <qgroup_verify_all@@Base+0xce>
    cada:	mov	r0, r4
    cadc:	mov.w	fp, #1
    cae0:	bl	18558 <btrfs_release_path@@Base>
    cae4:	cmp	sl, fp
    cae6:	bne.n	cb04 <qgroup_verify_all@@Base+0x130>
    cae8:	mov	r0, r9
    caea:	bl	c048 <ulist_next@@Base+0x868>
    caee:	mov	r4, r0
    caf0:	cmp	r0, #0
    caf2:	beq.w	cd60 <qgroup_verify_all@@Base+0x38c>
    caf6:	ldr	r3, [pc, #684]	; (cda4 <qgroup_verify_all@@Base+0x3d0>)
    caf8:	ldr	r2, [pc, #704]	; (cdbc <qgroup_verify_all@@Base+0x3e8>)
    cafa:	ldr.w	r0, [r8, r3]
    cafe:	add	r2, pc
    cb00:	mov	r3, r4
    cb02:	b.n	cb2e <qgroup_verify_all@@Base+0x15a>
    cb04:	mov	sl, fp
    cb06:	b.n	ca4a <qgroup_verify_all@@Base+0x76>
    cb08:	movs	r2, #0
    cb0a:	mov	r1, r2
    cb0c:	b.n	ca80 <qgroup_verify_all@@Base+0xac>
    cb0e:	ldr	r3, [pc, #660]	; (cda4 <qgroup_verify_all@@Base+0x3d0>)
    cb10:	movs	r1, #1
    cb12:	ldr	r2, [pc, #684]	; (cdc0 <qgroup_verify_all@@Base+0x3ec>)
    cb14:	ldr.w	r0, [r8, r3]
    cb18:	add	r2, pc
    cb1a:	mov	r3, r4
    cb1c:	ldr	r0, [r0, #0]
    cb1e:	blx	8a64 <__fprintf_chk@plt+0x4>
    cb22:	ldr	r3, [pc, #640]	; (cda4 <qgroup_verify_all@@Base+0x3d0>)
    cb24:	ldr	r2, [pc, #668]	; (cdc4 <qgroup_verify_all@@Base+0x3f0>)
    cb26:	add	r2, pc
    cb28:	ldr.w	r0, [r8, r3]
    cb2c:	mov	r3, r4
    cb2e:	ldr	r0, [r0, #0]
    cb30:	movs	r1, #1
    cb32:	blx	8a64 <__fprintf_chk@plt+0x4>
    cb36:	bl	b9ac <ulist_next@@Base+0x1cc>
    cb3a:	ldr	r0, [pc, #652]	; (cdc8 <qgroup_verify_all@@Base+0x3f4>)
    cb3c:	ldr	r1, [pc, #652]	; (cdcc <qgroup_verify_all@@Base+0x3f8>)
    cb3e:	add	r0, pc
    cb40:	add	r1, pc
    cb42:	adds	r0, #24
    cb44:	bl	17ffe <rb_free_nodes@@Base>
    cb48:	b.n	ca1e <qgroup_verify_all@@Base+0x4a>
    cb4a:	ldr	r3, [sp, #24]
    cb4c:	movs	r2, #25
    cb4e:	add	r7, sp, #100	; 0x64
    cb50:	ldr	r0, [sp, #20]
    cb52:	muls	r2, r3
    cb54:	mov	r1, r7
    cb56:	movs	r3, #17
    cb58:	adds	r2, #101	; 0x65
    cb5a:	bl	17a1a <read_extent_buffer@@Base>
    cb5e:	ldr.w	r3, [sp, #109]	; 0x6d
    cb62:	ldrd	r0, r1, [sp, #100]	; 0x64
    cb66:	str	r3, [sp, #8]
    cb68:	ldr.w	r3, [sp, #113]	; 0x71
    cb6c:	strd	r0, r1, [sp, #60]	; 0x3c
    cb70:	str	r3, [sp, #12]
    cb72:	ldr	r3, [sp, #8]
    cb74:	str.w	r3, [sp, #69]	; 0x45
    cb78:	ldr	r3, [sp, #12]
    cb7a:	str.w	r3, [sp, #73]	; 0x49
    cb7e:	ldrb.w	r3, [sp, #108]	; 0x6c
    cb82:	strb.w	r3, [sp, #68]	; 0x44
    cb86:	cmp.w	fp, #0
    cb8a:	beq.n	cbfc <qgroup_verify_all@@Base+0x228>
    cb8c:	cmp	r3, #246	; 0xf6
    cb8e:	bne.n	cbda <qgroup_verify_all@@Base+0x206>
    cb90:	ldrd	r3, r4, [sp, #8]
    cb94:	cmp	r4, r1
    cb96:	it	eq
    cb98:	cmpeq	r3, r0
    cb9a:	bcc.n	cbda <qgroup_verify_all@@Base+0x206>
    cb9c:	bl	b81c <ulist_next@@Base+0x3c>
    cba0:	mov	r5, r0
    cba2:	ldrd	r0, r1, [sp, #8]
    cba6:	bl	b81c <ulist_next@@Base+0x3c>
    cbaa:	mov	r4, r0
    cbac:	cbz	r5, cbe8 <qgroup_verify_all@@Base+0x214>
    cbae:	cbz	r0, cbe8 <qgroup_verify_all@@Base+0x214>
    cbb0:	movs	r1, #24
    cbb2:	movs	r0, #1
    cbb4:	blx	8588 <calloc@plt+0x4>
    cbb8:	cbz	r0, cbf6 <qgroup_verify_all@@Base+0x222>
    cbba:	strd	r4, r5, [r0, #16]
    cbbe:	adds	r5, #108	; 0x6c
    cbc0:	ldr	r3, [r5, #4]
    cbc2:	add.w	r1, r0, #8
    cbc6:	str	r0, [r5, #4]
    cbc8:	adds	r4, #116	; 0x74
    cbca:	strd	r5, r3, [r0]
    cbce:	str	r0, [r3, #0]
    cbd0:	ldr	r2, [r4, #4]
    cbd2:	str	r1, [r4, #4]
    cbd4:	strd	r4, r2, [r0, #8]
    cbd8:	str	r1, [r2, #0]
    cbda:	ldr	r3, [sp, #24]
    cbdc:	adds	r3, #1
    cbde:	str	r3, [sp, #24]
    cbe0:	ldr	r3, [sp, #28]
    cbe2:	adds	r3, #25
    cbe4:	str	r3, [sp, #28]
    cbe6:	b.n	cabc <qgroup_verify_all@@Base+0xe8>
    cbe8:	mvn.w	r4, #1
    cbec:	ldr	r0, [pc, #480]	; (cdd0 <qgroup_verify_all@@Base+0x3fc>)
    cbee:	add	r0, pc
    cbf0:	bl	17b7c <__btrfs_error@@Base>
    cbf4:	b.n	cb22 <qgroup_verify_all@@Base+0x14e>
    cbf6:	mvn.w	r4, #11
    cbfa:	b.n	cbec <qgroup_verify_all@@Base+0x218>
    cbfc:	cmp	r3, #240	; 0xf0
    cbfe:	bne.n	cc2e <qgroup_verify_all@@Base+0x25a>
    cc00:	ldr	r3, [sp, #28]
    cc02:	ldr	r2, [sp, #20]
    cc04:	ldr	r1, [sp, #32]
    cc06:	ldr.w	r3, [r3, #17]
    cc0a:	add	r3, r2
    cc0c:	ldrb	r1, [r1, #8]
    cc0e:	ldr.w	r2, [r3, #213]	; 0xd5
    cc12:	bic.w	r1, r1, #3
    cc16:	ubfx	r2, r2, #1, #2
    cc1a:	orrs	r2, r1
    cc1c:	ldr	r1, [sp, #32]
    cc1e:	strb	r2, [r1, #8]
    cc20:	ldr.w	r2, [r3, #221]	; 0xdd
    cc24:	ldr.w	r3, [r3, #225]	; 0xe1
    cc28:	str	r2, [r1, #16]
    cc2a:	str	r3, [r1, #20]
    cc2c:	b.n	cbda <qgroup_verify_all@@Base+0x206>
    cc2e:	cmp	r3, #242	; 0xf2
    cc30:	bne.n	cbda <qgroup_verify_all@@Base+0x206>
    cc32:	ldr	r3, [sp, #20]
    cc34:	movs	r1, #144	; 0x90
    cc36:	movs	r0, #1
    cc38:	adds	r3, #96	; 0x60
    cc3a:	str	r3, [sp, #48]	; 0x30
    cc3c:	ldr	r3, [sp, #28]
    cc3e:	ldr.w	r5, [r3, #17]
    cc42:	blx	8588 <calloc@plt+0x4>
    cc46:	adds	r5, #101	; 0x65
    cc48:	mov	r4, r0
    cc4a:	cmp	r0, #0
    cc4c:	beq.n	cd4c <qgroup_verify_all@@Base+0x378>
    cc4e:	ldrd	r2, r3, [sp, #8]
    cc52:	mov	ip, r0
    cc54:	strd	r2, r3, [ip], #12
    cc58:	ldmia	r7!, {r0, r1, r2, r3}
    cc5a:	stmia.w	ip!, {r0, r1, r2, r3}
    cc5e:	ldr	r3, [r7, #0]
    cc60:	strb.w	r3, [ip]
    cc64:	ldr	r3, [sp, #48]	; 0x30
    cc66:	add	r3, r5
    cc68:	ldr	r2, [r3, #8]
    cc6a:	mov	r5, r3
    cc6c:	ldr	r3, [r3, #12]
    cc6e:	strd	r2, r3, [r4, #32]
    cc72:	ldr	r2, [r5, #16]
    cc74:	ldr	r3, [r5, #20]
    cc76:	strd	r2, r3, [r4, #40]	; 0x28
    cc7a:	ldr	r2, [r5, #24]
    cc7c:	ldr	r3, [r5, #28]
    cc7e:	strd	r2, r3, [r4, #48]	; 0x30
    cc82:	ldr	r2, [r5, #32]
    cc84:	ldr	r3, [r5, #36]	; 0x24
    cc86:	mov	r5, fp
    cc88:	strd	r2, r3, [r4, #56]	; 0x38
    cc8c:	add.w	r3, r4, #108	; 0x6c
    cc90:	strd	r3, r3, [r4, #108]	; 0x6c
    cc94:	add.w	r3, r4, #116	; 0x74
    cc98:	strd	r3, r3, [r4, #116]	; 0x74
    cc9c:	add.w	r3, r4, #136	; 0x88
    cca0:	ldr	r2, [sp, #52]	; 0x34
    cca2:	strd	r3, r3, [r4, #136]	; 0x88
    cca6:	ldr	r7, [r2, #0]
    cca8:	cmp	r7, #0
    ccaa:	bne.n	cd1e <qgroup_verify_all@@Base+0x34a>
    ccac:	ldr	r1, [sp, #36]	; 0x24
    ccae:	ldr	r0, [sp, #36]	; 0x24
    ccb0:	strd	r5, r7, [r4, #96]	; 0x60
    ccb4:	ldr	r1, [r1, #4]
    ccb6:	str	r7, [r4, #104]	; 0x68
    ccb8:	adds	r1, #1
    ccba:	str	r1, [r0, #4]
    ccbc:	add.w	r0, r4, #96	; 0x60
    ccc0:	ldr	r1, [sp, #36]	; 0x24
    ccc2:	str	r0, [r2, #0]
    ccc4:	bl	1392a <rb_insert_color@@Base>
    ccc8:	ldr.w	r2, [sp, #69]	; 0x45
    cccc:	ldr.w	r3, [sp, #73]	; 0x49
    ccd0:	add	r1, sp, #80	; 0x50
    ccd2:	mov	r0, r9
    ccd4:	strd	r2, r3, [sp, #80]	; 0x50
    ccd8:	mov.w	r2, #4294967295	; 0xffffffff
    ccdc:	movs	r3, #132	; 0x84
    ccde:	strb.w	r2, [sp, #89]	; 0x59
    cce2:	strb.w	r3, [sp, #88]	; 0x58
    cce6:	strb.w	r2, [sp, #90]	; 0x5a
    ccea:	strb.w	r2, [sp, #91]	; 0x5b
    ccee:	strb.w	r2, [sp, #92]	; 0x5c
    ccf2:	strb.w	r2, [sp, #93]	; 0x5d
    ccf6:	strb.w	r2, [sp, #94]	; 0x5e
    ccfa:	strb.w	r2, [sp, #95]	; 0x5f
    ccfe:	strb.w	r2, [sp, #96]	; 0x60
    cd02:	bl	1e004 <btrfs_read_fs_root_no_cache@@Base>
    cd06:	cmp	r0, #0
    cd08:	beq.w	cbda <qgroup_verify_all@@Base+0x206>
    cd0c:	cmn.w	r0, #4096	; 0x1000
    cd10:	bhi.w	cbda <qgroup_verify_all@@Base+0x206>
    cd14:	movs	r3, #1
    cd16:	str	r3, [r4, #8]
    cd18:	bl	1ccea <btrfs_free_fs_root@@Base>
    cd1c:	b.n	cbda <qgroup_verify_all@@Base+0x206>
    cd1e:	ldrd	r0, r1, [r7, #-96]	; 0x60
    cd22:	ldrd	r2, r3, [sp, #8]
    cd26:	cmp	r3, r1
    cd28:	it	eq
    cd2a:	cmpeq	r2, r0
    cd2c:	bcs.n	cd36 <qgroup_verify_all@@Base+0x362>
    cd2e:	add.w	r2, r7, #8
    cd32:	mov	r5, r7
    cd34:	b.n	cca6 <qgroup_verify_all@@Base+0x2d2>
    cd36:	ldrd	r2, r3, [sp, #8]
    cd3a:	cmp	r1, r3
    cd3c:	it	eq
    cd3e:	cmpeq	r0, r2
    cd40:	bcs.n	cd46 <qgroup_verify_all@@Base+0x372>
    cd42:	adds	r2, r7, #4
    cd44:	b.n	cd32 <qgroup_verify_all@@Base+0x35e>
    cd46:	mov	r0, r4
    cd48:	blx	8620 <free@plt+0x4>
    cd4c:	ldr	r3, [pc, #84]	; (cda4 <qgroup_verify_all@@Base+0x3d0>)
    cd4e:	movs	r4, #12
    cd50:	ldr	r0, [pc, #128]	; (cdd4 <qgroup_verify_all@@Base+0x400>)
    cd52:	ldr.w	r3, [r8, r3]
    cd56:	add	r0, pc
    cd58:	ldr	r1, [r3, #0]
    cd5a:	blx	8b6c <fputs@plt+0x4>
    cd5e:	b.n	cb22 <qgroup_verify_all@@Base+0x14e>
    cd60:	mov	r0, r9
    cd62:	bl	c568 <ulist_next@@Base+0xd88>
    cd66:	mov	r4, r0
    cd68:	cbz	r0, cd78 <qgroup_verify_all@@Base+0x3a4>
    cd6a:	ldr	r3, [pc, #56]	; (cda4 <qgroup_verify_all@@Base+0x3d0>)
    cd6c:	ldr	r2, [pc, #104]	; (cdd8 <qgroup_verify_all@@Base+0x404>)
    cd6e:	ldr.w	r0, [r8, r3]
    cd72:	add	r2, pc
    cd74:	mov	r3, r4
    cd76:	b.n	cb2e <qgroup_verify_all@@Base+0x15a>
    cd78:	movs	r2, #0
    cd7a:	movs	r3, #0
    cd7c:	mov	r0, sl
    cd7e:	bl	ba94 <ulist_next@@Base+0x2b4>
    cd82:	mov	r4, r0
    cd84:	b.n	cb36 <qgroup_verify_all@@Base+0x162>
    cd86:	mov	r4, r0
    cd88:	b.n	ca1e <qgroup_verify_all@@Base+0x4a>
    cd8a:	mov	r0, r4
    cd8c:	add	sp, #196	; 0xc4
    cd8e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cd92:	nop
    cd94:	strh	r4, [r4, #28]
    cd96:	movs	r5, r0
    cd98:	lsls	r0, r5, #8
    cd9a:	movs	r0, r0
    cd9c:	strh	r0, [r2, #28]
    cd9e:	movs	r5, r0
    cda0:	ldr	r0, [sp, #248]	; 0xf8
    cda2:	movs	r5, r0
    cda4:	lsls	r0, r7, #8
    cda6:	movs	r0, r0
    cda8:	udf	#75	; 0x4b
    cdaa:	movs	r2, r0
    cdac:	strh	r6, [r3, #26]
    cdae:	movs	r5, r0
    cdb0:	str	r7, [sp, #1016]	; 0x3f8
    cdb2:	movs	r5, r0
    cdb4:	str	r7, [sp, #664]	; 0x298
    cdb6:	movs	r5, r0
    cdb8:	str	r7, [sp, #560]	; 0x230
    cdba:	movs	r5, r0
    cdbc:	ble.n	cd76 <qgroup_verify_all@@Base+0x3a2>
    cdbe:	movs	r2, r0
    cdc0:	blt.n	ce76 <print_extent_state@@Base+0x9a>
    cdc2:	movs	r2, r0
    cdc4:	ble.n	cce2 <qgroup_verify_all@@Base+0x30e>
    cdc6:	movs	r2, r0
    cdc8:	str	r7, [sp, #24]
    cdca:	movs	r5, r0
    cdcc:	stc	15, cr15, [sp, #-1020]	; 0xfffffc04
    cdd0:	bgt.n	cd16 <qgroup_verify_all@@Base+0x342>
    cdd2:	movs	r2, r0
    cdd4:	blt.n	ce66 <print_extent_state@@Base+0x8a>
    cdd6:	movs	r2, r0
    cdd8:	blt.n	ccf8 <qgroup_verify_all@@Base+0x324>
    cdda:	movs	r2, r0

0000cddc <print_extent_state@@Base>:
    cddc:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    cde0:	mov	r6, r0
    cde2:	movs	r0, #0
    cde4:	mov	r7, r3
    cde6:	mov	r8, r2
    cde8:	bl	b5e0 <ulist_alloc@@Base>
    cdec:	ldr	r3, [pc, #124]	; (ce6c <print_extent_state@@Base+0x90>)
    cdee:	ldr	r5, [pc, #128]	; (ce70 <print_extent_state@@Base+0x94>)
    cdf0:	add	r3, pc
    cdf2:	add	r5, pc
    cdf4:	str	r0, [r3, #28]
    cdf6:	cbnz	r0, ce0e <print_extent_state@@Base+0x32>
    cdf8:	ldr	r3, [pc, #120]	; (ce74 <print_extent_state@@Base+0x98>)
    cdfa:	movs	r4, #12
    cdfc:	ldr	r0, [pc, #120]	; (ce78 <print_extent_state@@Base+0x9c>)
    cdfe:	ldr	r3, [r5, r3]
    ce00:	add	r0, pc
    ce02:	ldr	r1, [r3, #0]
    ce04:	blx	8b6c <fputs@plt+0x4>
    ce08:	mov	r0, r4
    ce0a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ce0e:	mov	r0, r6
    ce10:	bl	c048 <ulist_next@@Base+0x868>
    ce14:	mov	r4, r0
    ce16:	cbz	r0, ce3e <print_extent_state@@Base+0x62>
    ce18:	ldr	r3, [pc, #88]	; (ce74 <print_extent_state@@Base+0x98>)
    ce1a:	ldr	r2, [pc, #96]	; (ce7c <print_extent_state@@Base+0xa0>)
    ce1c:	add	r2, pc
    ce1e:	ldr	r0, [r5, r3]
    ce20:	mov	r3, r4
    ce22:	ldr	r0, [r0, #0]
    ce24:	movs	r1, #1
    ce26:	blx	8a64 <__fprintf_chk@plt+0x4>
    ce2a:	bl	b9ac <ulist_next@@Base+0x1cc>
    ce2e:	ldr	r0, [pc, #80]	; (ce80 <print_extent_state@@Base+0xa4>)
    ce30:	ldr	r1, [pc, #80]	; (ce84 <print_extent_state@@Base+0xa8>)
    ce32:	add	r0, pc
    ce34:	add	r1, pc
    ce36:	adds	r0, #24
    ce38:	bl	17ffe <rb_free_nodes@@Base>
    ce3c:	b.n	ce08 <print_extent_state@@Base+0x2c>
    ce3e:	mov	r0, r6
    ce40:	bl	c568 <ulist_next@@Base+0xd88>
    ce44:	mov	r4, r0
    ce46:	cbz	r0, ce54 <print_extent_state@@Base+0x78>
    ce48:	ldr	r3, [pc, #40]	; (ce74 <print_extent_state@@Base+0x98>)
    ce4a:	ldr	r2, [pc, #60]	; (ce88 <print_extent_state@@Base+0xac>)
    ce4c:	ldr	r0, [r5, r3]
    ce4e:	add	r2, pc
    ce50:	mov	r3, r4
    ce52:	b.n	ce22 <print_extent_state@@Base+0x46>
    ce54:	ldr	r0, [pc, #52]	; (ce8c <print_extent_state@@Base+0xb0>)
    ce56:	add	r0, pc
    ce58:	blx	8854 <puts@plt+0x4>
    ce5c:	mov	r0, r4
    ce5e:	mov	r2, r8
    ce60:	mov	r3, r7
    ce62:	bl	ba94 <ulist_next@@Base+0x2b4>
    ce66:	mov	r4, r0
    ce68:	b.n	ce2a <print_extent_state@@Base+0x4e>
    ce6a:	nop
    ce6c:	str	r4, [sp, #336]	; 0x150
    ce6e:	movs	r5, r0
    ce70:	ldrb	r6, [r1, #30]
    ce72:	movs	r5, r0
    ce74:	lsls	r0, r7, #8
    ce76:	movs	r0, r0
    ce78:	bge.n	cf3e <repair_qgroups@@Base+0xae>
    ce7a:	movs	r2, r0
    ce7c:	bge.n	cdfa <print_extent_state@@Base+0x1e>
    ce7e:	movs	r2, r0
    ce80:	str	r4, [sp, #72]	; 0x48
    ce82:	movs	r5, r0
    ce84:			; <UNDEFINED> instruction: 0xea19ffff
    ce88:	bge.n	cdf0 <print_extent_state@@Base+0x14>
    ce8a:	movs	r2, r0
    ce8c:	bge.n	ce22 <print_extent_state@@Base+0x46>
    ce8e:	movs	r2, r0

0000ce90 <repair_qgroups@@Base>:
    ce90:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ce94:	mov	r6, r1
    ce96:	vpush	{d8}
    ce9a:	ldr	r1, [pc, #620]	; (d108 <repair_qgroups@@Base+0x278>)
    ce9c:	ldr	r2, [pc, #620]	; (d10c <repair_qgroups@@Base+0x27c>)
    ce9e:	add	r1, pc
    cea0:	ldr	r3, [pc, #620]	; (d110 <repair_qgroups@@Base+0x280>)
    cea2:	sub	sp, #124	; 0x7c
    cea4:	add	r3, pc
    cea6:	str	r0, [sp, #16]
    cea8:	ldr	r2, [r1, r2]
    ceaa:	ldr	r2, [r2, #0]
    ceac:	str	r2, [sp, #116]	; 0x74
    ceae:	mov.w	r2, #0
    ceb2:	movs	r2, #0
    ceb4:	str	r2, [r6, #0]
    ceb6:	ldr	r2, [pc, #604]	; (d114 <repair_qgroups@@Base+0x284>)
    ceb8:	ldr	r3, [r3, r2]
    ceba:	ldr	r3, [r3, #0]
    cebc:	cbnz	r3, ced6 <repair_qgroups@@Base+0x46>
    cebe:	movs	r4, #0
    cec0:	ldr	r2, [pc, #596]	; (d118 <repair_qgroups@@Base+0x288>)
    cec2:	ldr	r3, [pc, #584]	; (d10c <repair_qgroups@@Base+0x27c>)
    cec4:	add	r2, pc
    cec6:	ldr	r3, [r2, r3]
    cec8:	ldr	r2, [r3, #0]
    ceca:	ldr	r3, [sp, #116]	; 0x74
    cecc:	eors	r2, r3
    cece:	beq.w	d0fa <repair_qgroups@@Base+0x26a>
    ced2:	blx	8708 <__stack_chk_fail@plt>
    ced6:	ldr	r3, [pc, #580]	; (d11c <repair_qgroups@@Base+0x28c>)
    ced8:	add	r3, pc
    ceda:	str	r3, [sp, #20]
    cedc:	ldr	r5, [r3, #0]
    cede:	ldr	r3, [pc, #576]	; (d120 <repair_qgroups@@Base+0x290>)
    cee0:	add	r3, pc
    cee2:	ldr.w	r2, [r5], #-136
    cee6:	vmov	s16, r3
    ceea:	ldr	r3, [pc, #568]	; (d124 <repair_qgroups@@Base+0x294>)
    ceec:	sub.w	r8, r2, #136	; 0x88
    cef0:	add	r3, pc
    cef2:	vmov	s17, r3
    cef6:	ldr	r2, [sp, #20]
    cef8:	add.w	r3, r5, #136	; 0x88
    cefc:	str	r3, [sp, #12]
    cefe:	cmp	r3, r2
    cf00:	bne.n	cf3e <repair_qgroups@@Base+0xae>
    cf02:	ldr	r3, [r6, #0]
    cf04:	cbnz	r3, cf10 <repair_qgroups@@Base+0x80>
    cf06:	ldr	r3, [pc, #544]	; (d128 <repair_qgroups@@Base+0x298>)
    cf08:	add	r3, pc
    cf0a:	ldrb	r3, [r3, #8]
    cf0c:	lsls	r3, r3, #30
    cf0e:	beq.n	cebe <repair_qgroups@@Base+0x2e>
    cf10:	ldr	r3, [sp, #16]
    cf12:	ldr	r0, [pc, #536]	; (d12c <repair_qgroups@@Base+0x29c>)
    cf14:	ldr.w	r8, [r3, #44]	; 0x2c
    cf18:	add	r0, pc
    cf1a:	blx	8854 <puts@plt+0x4>
    cf1e:	movs	r1, #1
    cf20:	mov	r0, r8
    cf22:	bl	2b67c <btrfs_start_transaction@@Base>
    cf26:	cmn.w	r0, #4096	; 0x1000
    cf2a:	mov	r5, r0
    cf2c:	bls.w	d048 <repair_qgroups@@Base+0x1b8>
    cf30:	mov	r4, r0
    cf32:	cmp	r4, #0
    cf34:	bne.n	cec0 <repair_qgroups@@Base+0x30>
    cf36:	ldr	r3, [r6, #0]
    cf38:	adds	r3, #1
    cf3a:	str	r3, [r6, #0]
    cf3c:	b.n	cec0 <repair_qgroups@@Base+0x30>
    cf3e:	ldr	r3, [sp, #16]
    cf40:	mov.w	r9, #0
    cf44:	ldrd	r1, r2, [r5]
    cf48:	movs	r0, #1
    cf4a:	ldr.w	fp, [r3, #44]	; 0x2c
    cf4e:	uxth	r3, r2
    cf50:	lsrs	r2, r2, #16
    cf52:	strd	r1, r3, [sp]
    cf56:	mov	r3, r9
    cf58:	vmov	r1, s16
    cf5c:	blx	8a30 <__printf_chk@plt+0x4>
    cf60:	movs	r1, #1
    cf62:	mov	r0, fp
    cf64:	bl	2b67c <btrfs_start_transaction@@Base>
    cf68:	cmn.w	r0, #4096	; 0x1000
    cf6c:	mov	r7, r0
    cf6e:	bls.n	cf96 <repair_qgroups@@Base+0x106>
    cf70:	mov	r4, r0
    cf72:	cmp	r4, #0
    cf74:	bne.n	cec0 <repair_qgroups@@Base+0x30>
    cf76:	ldr	r3, [r6, #0]
    cf78:	adds	r3, #1
    cf7a:	str	r3, [r6, #0]
    cf7c:	ldrd	r2, r3, [r5, #136]	; 0x88
    cf80:	str	r3, [r2, #4]
    cf82:	str	r2, [r3, #0]
    cf84:	ldr	r3, [sp, #12]
    cf86:	strd	r3, r3, [r5, #136]	; 0x88
    cf8a:	mov	r5, r8
    cf8c:	ldr.w	r3, [r8, #136]	; 0x88
    cf90:	sub.w	r8, r3, #136	; 0x88
    cf94:	b.n	cef6 <repair_qgroups@@Base+0x66>
    cf96:	add.w	sl, sp, #48	; 0x30
    cf9a:	mov	r0, sl
    cf9c:	bl	18548 <btrfs_init_path@@Base>
    cfa0:	movs	r3, #242	; 0xf2
    cfa2:	strd	r9, r9, [sp, #28]
    cfa6:	mov	r1, fp
    cfa8:	strb.w	r3, [sp, #36]	; 0x24
    cfac:	mov	r0, r7
    cfae:	ldrd	r2, r3, [r5]
    cfb2:	str.w	r2, [sp, #37]	; 0x25
    cfb6:	add	r2, sp, #28
    cfb8:	str.w	r3, [sp, #41]	; 0x29
    cfbc:	movs	r3, #1
    cfbe:	strd	r9, r3, [sp]
    cfc2:	mov	r3, sl
    cfc4:	bl	1a93c <btrfs_search_slot@@Base>
    cfc8:	mov	r4, r0
    cfca:	cbz	r0, cffa <repair_qgroups@@Base+0x16a>
    cfcc:	ldrd	r1, r2, [r5]
    cfd0:	vmov	r0, s17
    cfd4:	uxth	r3, r2
    cfd6:	lsrs	r2, r2, #16
    cfd8:	strd	r1, r3, [sp]
    cfdc:	mov	r3, r9
    cfde:	bl	17b7c <__btrfs_error@@Base>
    cfe2:	cmp	r4, #0
    cfe4:	it	gt
    cfe6:	mvngt.w	r4, #1
    cfea:	mov	r1, fp
    cfec:	mov	r0, r7
    cfee:	bl	2b8fc <btrfs_commit_transaction@@Base>
    cff2:	mov	r0, sl
    cff4:	bl	18558 <btrfs_release_path@@Base>
    cff8:	b.n	cf72 <repair_qgroups@@Base+0xe2>
    cffa:	ldr	r2, [sp, #48]	; 0x30
    cffc:	movs	r1, #25
    cffe:	ldr	r3, [sp, #80]	; 0x50
    d000:	adds	r2, #96	; 0x60
    d002:	ldr	r0, [r7, #12]
    d004:	mla	r3, r1, r3, r2
    d008:	ldr	r1, [r7, #8]
    d00a:	ldr.w	r3, [r3, #118]	; 0x76
    d00e:	adds	r3, #101	; 0x65
    d010:	add.w	ip, r2, r3
    d014:	str	r1, [r2, r3]
    d016:	str.w	r0, [ip, #4]
    d01a:	ldr	r0, [sp, #48]	; 0x30
    d01c:	ldrd	r2, r1, [r5, #64]	; 0x40
    d020:	add.w	ip, r0, #96	; 0x60
    d024:	add	r3, ip
    d026:	str	r2, [r3, #8]
    d028:	str	r1, [r3, #12]
    d02a:	ldrd	r1, r2, [r5, #72]	; 0x48
    d02e:	str	r1, [r3, #16]
    d030:	str	r2, [r3, #20]
    d032:	ldrd	r1, r2, [r5, #80]	; 0x50
    d036:	str	r1, [r3, #24]
    d038:	str	r2, [r3, #28]
    d03a:	ldrd	r1, r2, [r5, #88]	; 0x58
    d03e:	str	r1, [r3, #32]
    d040:	str	r2, [r3, #36]	; 0x24
    d042:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
    d046:	b.n	cfea <repair_qgroups@@Base+0x15a>
    d048:	add	r7, sp, #48	; 0x30
    d04a:	mov.w	r9, #1
    d04e:	mov	r0, r7
    d050:	bl	18548 <btrfs_init_path@@Base>
    d054:	movs	r3, #0
    d056:	movs	r2, #240	; 0xf0
    d058:	strd	r3, r3, [sp, #28]
    d05c:	strb.w	r2, [sp, #36]	; 0x24
    d060:	mov	r1, r8
    d062:	strb.w	r3, [sp, #37]	; 0x25
    d066:	add	r2, sp, #28
    d068:	strb.w	r3, [sp, #38]	; 0x26
    d06c:	mov	r0, r5
    d06e:	strb.w	r3, [sp, #39]	; 0x27
    d072:	strb.w	r3, [sp, #40]	; 0x28
    d076:	strb.w	r3, [sp, #41]	; 0x29
    d07a:	strb.w	r3, [sp, #42]	; 0x2a
    d07e:	strb.w	r3, [sp, #43]	; 0x2b
    d082:	strb.w	r3, [sp, #44]	; 0x2c
    d086:	strd	r3, r9, [sp]
    d08a:	mov	r3, r7
    d08c:	bl	1a93c <btrfs_search_slot@@Base>
    d090:	mov	r4, r0
    d092:	cbz	r0, d0b4 <repair_qgroups@@Base+0x224>
    d094:	ldr	r0, [pc, #152]	; (d130 <repair_qgroups@@Base+0x2a0>)
    d096:	add	r0, pc
    d098:	bl	17b7c <__btrfs_error@@Base>
    d09c:	cmp	r4, #0
    d09e:	it	gt
    d0a0:	mvngt.w	r4, #1
    d0a4:	mov	r1, r8
    d0a6:	mov	r0, r5
    d0a8:	bl	2b8fc <btrfs_commit_transaction@@Base>
    d0ac:	mov	r0, r7
    d0ae:	bl	18558 <btrfs_release_path@@Base>
    d0b2:	b.n	cf32 <repair_qgroups@@Base+0xa2>
    d0b4:	ldr	r0, [sp, #48]	; 0x30
    d0b6:	movs	r1, #25
    d0b8:	ldr	r2, [sp, #80]	; 0x50
    d0ba:	add.w	r3, r0, #96	; 0x60
    d0be:	mla	r2, r1, r2, r3
    d0c2:	ldr.w	r2, [r2, #118]	; 0x76
    d0c6:	adds	r2, #101	; 0x65
    d0c8:	add	r3, r2
    d0ca:	strb.w	r9, [r3, #16]
    d0ce:	strb	r4, [r3, #17]
    d0d0:	strb	r4, [r3, #18]
    d0d2:	strb	r4, [r3, #19]
    d0d4:	strb	r4, [r3, #20]
    d0d6:	strb	r4, [r3, #21]
    d0d8:	strb	r4, [r3, #22]
    d0da:	strb	r4, [r3, #23]
    d0dc:	strb	r4, [r3, #24]
    d0de:	strb	r4, [r3, #25]
    d0e0:	strb	r4, [r3, #26]
    d0e2:	strb	r4, [r3, #27]
    d0e4:	strb	r4, [r3, #28]
    d0e6:	strb	r4, [r3, #29]
    d0e8:	strb	r4, [r3, #30]
    d0ea:	strb	r4, [r3, #31]
    d0ec:	ldrd	r1, r2, [r5, #8]
    d0f0:	str	r1, [r3, #8]
    d0f2:	str	r2, [r3, #12]
    d0f4:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
    d0f8:	b.n	d0a4 <repair_qgroups@@Base+0x214>
    d0fa:	mov	r0, r4
    d0fc:	add	sp, #124	; 0x7c
    d0fe:	vpop	{d8}
    d102:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d106:	nop
    d108:	ldrb	r2, [r4, #27]
    d10a:	movs	r5, r0
    d10c:	lsls	r0, r5, #8
    d10e:	movs	r0, r0
    d110:	ldrb	r4, [r3, #27]
    d112:	movs	r5, r0
    d114:	lsls	r0, r1, #9
    d116:	movs	r0, r0
    d118:	ldrb	r4, [r7, #26]
    d11a:	movs	r5, r0
    d11c:	strh	r4, [r5, #14]
    d11e:	movs	r5, r0
    d120:	bge.n	d1da <repair_qgroups@@Base+0x34a>
    d122:	movs	r2, r0
    d124:	bge.n	d1f0 <repair_qgroups@@Base+0x360>
    d126:	movs	r2, r0
    d128:	str	r3, [sp, #240]	; 0xf0
    d12a:	movs	r5, r0
    d12c:	bge.n	d204 <repair_qgroups@@Base+0x374>
    d12e:	movs	r2, r0
    d130:	bls.n	d140 <repair_qgroups@@Base+0x2b0>
    d132:	movs	r2, r0
    d134:	push	{r4, lr}
    d136:	cbnz	r0, d13a <repair_qgroups@@Base+0x2aa>
    d138:	pop	{r4, pc}
    d13a:	ldr	r4, [r0, #16]
    d13c:	blx	8620 <free@plt+0x4>
    d140:	mov	r0, r4
    d142:	b.n	d136 <repair_qgroups@@Base+0x2a6>
    d144:	ldr	r2, [pc, #92]	; (d1a4 <repair_qgroups@@Base+0x314>)
    d146:	ldr	r3, [pc, #96]	; (d1a8 <repair_qgroups@@Base+0x318>)
    d148:	add	r2, pc
    d14a:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    d14e:	mov	r5, r0
    d150:	ldr	r3, [r2, r3]
    d152:	mov	r8, sp
    d154:	movs	r6, #0
    d156:	movs	r7, #0
    d158:	ldr	r3, [r3, #0]
    d15a:	str	r3, [sp, #4]
    d15c:	mov.w	r3, #0
    d160:	movs	r3, #0
    d162:	str	r3, [sp, #0]
    d164:	mov	r1, r8
    d166:	mov	r0, r5
    d168:	bl	b7e0 <ulist_next@@Base>
    d16c:	mov	r4, r0
    d16e:	cbnz	r0, d18a <repair_qgroups@@Base+0x2fa>
    d170:	mov	r0, r5
    d172:	bl	b5f4 <ulist_free@@Base>
    d176:	ldr	r2, [pc, #52]	; (d1ac <repair_qgroups@@Base+0x31c>)
    d178:	ldr	r3, [pc, #44]	; (d1a8 <repair_qgroups@@Base+0x318>)
    d17a:	add	r2, pc
    d17c:	ldr	r3, [r2, r3]
    d17e:	ldr	r2, [r3, #0]
    d180:	ldr	r3, [sp, #4]
    d182:	eors	r2, r3
    d184:	beq.n	d19e <repair_qgroups@@Base+0x30e>
    d186:	blx	8708 <__stack_chk_fail@plt>
    d18a:	ldrd	r0, r1, [r4, #8]
    d18e:	orrs.w	r3, r0, r1
    d192:	beq.n	d164 <repair_qgroups@@Base+0x2d4>
    d194:	bl	d134 <repair_qgroups@@Base+0x2a4>
    d198:	strd	r6, r7, [r4, #8]
    d19c:	b.n	d164 <repair_qgroups@@Base+0x2d4>
    d19e:	add	sp, #8
    d1a0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    d1a4:	ldrb	r0, [r7, #16]
    d1a6:	movs	r5, r0
    d1a8:	lsls	r0, r5, #8
    d1aa:	movs	r0, r0
    d1ac:	ldrb	r6, [r0, #16]
    d1ae:	movs	r5, r0
    d1b0:	push	{r4, lr}
    d1b2:	mov	r4, r1
    d1b4:	ldr	r1, [pc, #84]	; (d20c <repair_qgroups@@Base+0x37c>)
    d1b6:	sub	sp, #24
    d1b8:	ldr	r3, [pc, #84]	; (d210 <repair_qgroups@@Base+0x380>)
    d1ba:	add	r1, pc
    d1bc:	ldr	r3, [r1, r3]
    d1be:	mov	r1, sp
    d1c0:	ldr	r3, [r3, #0]
    d1c2:	str	r3, [sp, #20]
    d1c4:	mov.w	r3, #0
    d1c8:	movs	r3, #25
    d1ca:	muls	r2, r3
    d1cc:	movs	r3, #17
    d1ce:	adds	r2, #101	; 0x65
    d1d0:	bl	17a1a <read_extent_buffer@@Base>
    d1d4:	ldr.w	r3, [sp, #13]
    d1d8:	ldr.w	r2, [sp, #9]
    d1dc:	str.w	r3, [r4, #13]
    d1e0:	ldrb.w	r3, [sp, #8]
    d1e4:	str.w	r2, [r4, #9]
    d1e8:	ldr	r2, [pc, #40]	; (d214 <repair_qgroups@@Base+0x384>)
    d1ea:	strb	r3, [r4, #8]
    d1ec:	ldr	r3, [sp, #0]
    d1ee:	add	r2, pc
    d1f0:	str	r3, [r4, #0]
    d1f2:	ldr	r3, [sp, #4]
    d1f4:	str	r3, [r4, #4]
    d1f6:	ldr	r3, [pc, #24]	; (d210 <repair_qgroups@@Base+0x380>)
    d1f8:	ldr	r3, [r2, r3]
    d1fa:	ldr	r2, [r3, #0]
    d1fc:	ldr	r3, [sp, #20]
    d1fe:	eors	r2, r3
    d200:	beq.n	d206 <repair_qgroups@@Base+0x376>
    d202:	blx	8708 <__stack_chk_fail@plt>
    d206:	add	sp, #24
    d208:	pop	{r4, pc}
    d20a:	nop
    d20c:	ldrb	r6, [r0, #15]
    d20e:	movs	r5, r0
    d210:	lsls	r0, r5, #8
    d212:	movs	r0, r0
    d214:	ldrb	r2, [r2, #14]
    d216:	movs	r5, r0
    d218:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d21c:	adds	r1, #96	; 0x60
    d21e:	add	r2, r1
    d220:	ldrd	r8, r9, [sp, #48]	; 0x30
    d224:	ldr.w	fp, [sp, #56]	; 0x38
    d228:	mov	sl, r0
    d22a:	ldrb	r3, [r2, #16]
    d22c:	cmp	r3, #0
    d22e:	bne.n	d2a8 <repair_qgroups@@Base+0x418>
    d230:	ldrb	r3, [r2, #17]
    d232:	cmp	r3, #0
    d234:	bne.n	d2a8 <repair_qgroups@@Base+0x418>
    d236:	ldrh	r3, [r2, #18]
    d238:	cbnz	r3, d2a8 <repair_qgroups@@Base+0x418>
    d23a:	mov	r3, r2
    d23c:	ldr.w	r1, [r3, #37]!
    d240:	ldr	r3, [r3, #4]
    d242:	str	r1, [sp, #0]
    d244:	str	r3, [sp, #4]
    d246:	ldrd	r4, r5, [sp]
    d24a:	ldr.w	r3, [r2, #45]!
    d24e:	cmp	r9, r5
    d250:	it	eq
    d252:	cmpeq	r8, r4
    d254:	ldr	r1, [r2, #4]
    d256:	bcc.n	d2ae <repair_qgroups@@Base+0x41e>
    d258:	ldr	r2, [sp, #0]
    d25a:	adds	r6, r3, r2
    d25c:	ldr	r3, [sp, #4]
    d25e:	adc.w	r7, r1, r3
    d262:	cmp	r9, r7
    d264:	it	eq
    d266:	cmpeq	r8, r6
    d268:	bcs.n	d2ae <repair_qgroups@@Base+0x41e>
    d26a:	ldr	r3, [sp, #4]
    d26c:	subs.w	r4, r8, r2
    d270:	sbc.w	r5, r9, r3
    d274:	movs	r0, #24
    d276:	blx	8870 <malloc@plt+0x4>
    d27a:	cbz	r0, d2b2 <repair_qgroups@@Base+0x422>
    d27c:	ldr.w	r3, [fp]
    d280:	str	r3, [r0, #16]
    d282:	ldrd	r2, r3, [sl]
    d286:	strd	r2, r3, [r0]
    d28a:	ldr.w	r3, [sl, #9]
    d28e:	ldr.w	r2, [sl, #13]
    d292:	adds	r3, r3, r4
    d294:	str.w	r0, [fp]
    d298:	adc.w	r2, r5, r2
    d29c:	strd	r3, r2, [r0, #8]
    d2a0:	movs	r0, #0
    d2a2:	add	sp, #12
    d2a4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d2a8:	movs	r4, #0
    d2aa:	mov	r5, r4
    d2ac:	b.n	d274 <repair_qgroups@@Base+0x3e4>
    d2ae:	movs	r0, #1
    d2b0:	b.n	d2a2 <repair_qgroups@@Base+0x412>
    d2b2:	mvn.w	r0, #11
    d2b6:	b.n	d2a2 <repair_qgroups@@Base+0x412>
    d2b8:	ldr	r2, [pc, #60]	; (d2f8 <repair_qgroups@@Base+0x468>)
    d2ba:	movs	r1, #16
    d2bc:	ldr	r3, [pc, #60]	; (d2fc <repair_qgroups@@Base+0x46c>)
    d2be:	push	{r4, lr}
    d2c0:	add	r2, pc
    d2c2:	sub	sp, #72	; 0x48
    d2c4:	add	r4, sp, #4
    d2c6:	ldr	r3, [r2, r3]
    d2c8:	mov	r0, r4
    d2ca:	ldr	r3, [r3, #0]
    d2cc:	str	r3, [sp, #68]	; 0x44
    d2ce:	mov.w	r3, #0
    d2d2:	blx	88bc <backtrace@plt>
    d2d6:	movs	r2, #2
    d2d8:	mov	r1, r0
    d2da:	mov	r0, r4
    d2dc:	blx	8bcc <backtrace_symbols_fd@plt>
    d2e0:	ldr	r2, [pc, #28]	; (d300 <repair_qgroups@@Base+0x470>)
    d2e2:	ldr	r3, [pc, #24]	; (d2fc <repair_qgroups@@Base+0x46c>)
    d2e4:	add	r2, pc
    d2e6:	ldr	r3, [r2, r3]
    d2e8:	ldr	r2, [r3, #0]
    d2ea:	ldr	r3, [sp, #68]	; 0x44
    d2ec:	eors	r2, r3
    d2ee:	beq.n	d2f4 <repair_qgroups@@Base+0x464>
    d2f0:	blx	8708 <__stack_chk_fail@plt>
    d2f4:	add	sp, #72	; 0x48
    d2f6:	pop	{r4, pc}
    d2f8:	ldrb	r0, [r0, #11]
    d2fa:	movs	r5, r0
    d2fc:	lsls	r0, r5, #8
    d2fe:	movs	r0, r0
    d300:	ldrb	r4, [r3, #10]
    d302:	movs	r5, r0
    d304:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    d308:	mov	r8, r0
    d30a:	movs	r0, #64	; 0x40
    d30c:	ldr	r5, [sp, #32]
    d30e:	ldrd	r6, r7, [sp, #40]	; 0x28
    d312:	mov	sl, r2
    d314:	mov	r9, r3
    d316:	blx	8870 <malloc@plt+0x4>
    d31a:	mov	r4, r0
    d31c:	cbz	r0, d37c <repair_qgroups@@Base+0x4ec>
    d31e:	strd	sl, r9, [r0, #8]
    d322:	adds	r0, #16
    d324:	cbz	r5, d360 <repair_qgroups@@Base+0x4d0>
    d326:	mov	ip, r0
    d328:	ldmia	r5!, {r0, r1, r2, r3}
    d32a:	stmia.w	ip!, {r0, r1, r2, r3}
    d32e:	ldr	r3, [r5, #0]
    d330:	strb.w	r3, [ip]
    d334:	ldr	r3, [sp, #36]	; 0x24
    d336:	movs	r1, #0
    d338:	mov	r0, r1
    d33a:	str	r1, [r4, #44]	; 0x2c
    d33c:	strd	r6, r7, [r4, #48]	; 0x30
    d340:	str	r3, [r4, #36]	; 0x24
    d342:	ldr	r3, [sp, #56]	; 0x38
    d344:	str	r3, [r4, #40]	; 0x28
    d346:	ldrd	r2, r3, [sp, #48]	; 0x30
    d34a:	strd	r2, r3, [r4, #56]	; 0x38
    d34e:	ldr.w	r3, [r8, #4]
    d352:	str.w	r4, [r8, #4]
    d356:	strd	r8, r3, [r4]
    d35a:	str	r4, [r3, #0]
    d35c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    d360:	orrs.w	r3, r6, r7
    d364:	mov.w	r2, #17
    d368:	mov	r1, r5
    d36a:	beq.n	d372 <repair_qgroups@@Base+0x4e2>
    d36c:	blx	89bc <memset@plt+0x4>
    d370:	b.n	d334 <repair_qgroups@@Base+0x4a4>
    d372:	blx	89bc <memset@plt+0x4>
    d376:	add.w	r8, r8, #8
    d37a:	b.n	d334 <repair_qgroups@@Base+0x4a4>
    d37c:	mvn.w	r0, #11
    d380:	b.n	d35c <repair_qgroups@@Base+0x4cc>
    d382:	push	{r0, r1, r2, r3, r4, lr}
    d384:	ldr	r4, [pc, #36]	; (d3ac <repair_qgroups@@Base+0x51c>)
    d386:	ldr	r5, [pc, #40]	; (d3b0 <repair_qgroups@@Base+0x520>)
    d388:	add	r4, pc
    d38a:	ldr	r4, [r4, r5]
    d38c:	ldr	r5, [sp, #24]
    d38e:	strd	r3, r2, [sp]
    d392:	mov	r3, r1
    d394:	ldr	r2, [pc, #28]	; (d3b4 <repair_qgroups@@Base+0x524>)
    d396:	movs	r1, #1
    d398:	strd	r0, r5, [sp, #8]
    d39c:	add	r2, pc
    d39e:	ldr	r0, [r4, #0]
    d3a0:	blx	8a64 <__fprintf_chk@plt+0x4>
    d3a4:	bl	d2b8 <repair_qgroups@@Base+0x428>
    d3a8:	blx	8b84 <abort@plt>
    d3ac:	ldrb	r0, [r7, #7]
    d3ae:	movs	r5, r0
    d3b0:	lsls	r0, r7, #8
    d3b2:	movs	r0, r0
    d3b4:	ldmia	r3!, {r1, r2}
    d3b6:	movs	r2, r0
    d3b8:	push	{r0, r1, r2, lr}
    d3ba:	movs	r3, #1
    d3bc:	ldr	r2, [pc, #20]	; (d3d4 <repair_qgroups@@Base+0x544>)
    d3be:	ldr	r1, [pc, #24]	; (d3d8 <repair_qgroups@@Base+0x548>)
    d3c0:	ldr	r0, [pc, #24]	; (d3dc <repair_qgroups@@Base+0x54c>)
    d3c2:	add	r2, pc
    d3c4:	str	r3, [sp, #0]
    d3c6:	add	r1, pc
    d3c8:	add	r0, pc
    d3ca:	movw	r3, #1818	; 0x71a
    d3ce:	bl	d382 <repair_qgroups@@Base+0x4f2>
    d3d2:	nop
    d3d4:	bvc.n	d346 <repair_qgroups@@Base+0x4b6>
    d3d6:	movs	r2, r0
    d3d8:	bcs.n	d378 <repair_qgroups@@Base+0x4e8>
    d3da:	movs	r2, r0
    d3dc:	lsrs	r5, r6, #12
    d3de:	movs	r3, r0
    d3e0:	push	{r0, r1, r2, r3, r4, lr}
    d3e2:	ldr	r3, [pc, #40]	; (d40c <repair_qgroups@@Base+0x57c>)
    d3e4:	ldr	r4, [pc, #40]	; (d410 <repair_qgroups@@Base+0x580>)
    d3e6:	add	r3, pc
    d3e8:	ldr	r4, [r3, r4]
    d3ea:	movs	r3, #0
    d3ec:	strd	r2, r1, [sp]
    d3f0:	movs	r1, #1
    d3f2:	strd	r0, r3, [sp, #8]
    d3f6:	ldr	r2, [pc, #28]	; (d414 <repair_qgroups@@Base+0x584>)
    d3f8:	ldr	r3, [pc, #28]	; (d418 <repair_qgroups@@Base+0x588>)
    d3fa:	add	r2, pc
    d3fc:	ldr	r0, [r4, #0]
    d3fe:	add	r3, pc
    d400:	blx	8a64 <__fprintf_chk@plt+0x4>
    d404:	bl	d2b8 <repair_qgroups@@Base+0x428>
    d408:	blx	8b84 <abort@plt>
    d40c:	ldrb	r2, [r3, #6]
    d40e:	movs	r5, r0
    d410:	lsls	r0, r7, #8
    d412:	movs	r0, r0
    d414:	ldmia	r3!, {r0, r2, r4, r6, r7}
    d416:	movs	r2, r0
    d418:	bvs.n	d492 <repair_qgroups@@Base+0x602>
    d41a:	movs	r2, r0
    d41c:	push	{r0, r1, r2, lr}
    d41e:	cbz	r3, d430 <repair_qgroups@@Base+0x5a0>
    d420:	movs	r3, #1
    d422:	str	r3, [sp, #0]
    d424:	mov	r3, r2
    d426:	mov	r2, r1
    d428:	ldr	r1, [pc, #12]	; (d438 <repair_qgroups@@Base+0x5a8>)
    d42a:	add	r1, pc
    d42c:	bl	d382 <repair_qgroups@@Base+0x4f2>
    d430:	add	sp, #12
    d432:	ldr.w	pc, [sp], #4
    d436:	nop
    d438:	bvs.n	d45a <repair_qgroups@@Base+0x5ca>
    d43a:	movs	r2, r0
    d43c:	push	{r4, r5, lr}
    d43e:	sub	sp, #20
    d440:	ldr	r4, [pc, #36]	; (d468 <repair_qgroups@@Base+0x5d8>)
    d442:	ldr	r5, [pc, #40]	; (d46c <repair_qgroups@@Base+0x5dc>)
    d444:	add	r4, pc
    d446:	ldr	r4, [r4, r5]
    d448:	strd	r2, r1, [sp]
    d44c:	movs	r1, #1
    d44e:	strd	r0, r3, [sp, #8]
    d452:	ldr	r2, [pc, #28]	; (d470 <repair_qgroups@@Base+0x5e0>)
    d454:	ldr	r3, [pc, #28]	; (d474 <repair_qgroups@@Base+0x5e4>)
    d456:	ldr	r0, [r4, #0]
    d458:	add	r2, pc
    d45a:	add	r3, pc
    d45c:	blx	8a64 <__fprintf_chk@plt+0x4>
    d460:	add	sp, #20
    d462:	ldmia.w	sp!, {r4, r5, lr}
    d466:	b.n	d2b8 <repair_qgroups@@Base+0x428>
    d468:	ldrb	r4, [r7, #4]
    d46a:	movs	r5, r0
    d46c:	lsls	r0, r7, #8
    d46e:	movs	r0, r0
    d470:	ldmia	r2, {r2, r4}
    d472:	movs	r2, r0
    d474:	bpl.n	d436 <repair_qgroups@@Base+0x5a6>
    d476:	movs	r2, r0
    d478:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    d47c:	mov	r5, r0
    d47e:	ldr	r4, [r0, #0]
    d480:	mov	r9, r1
    d482:	cmp	r4, r5
    d484:	bne.n	d48a <repair_qgroups@@Base+0x5fa>
    d486:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    d48a:	ldr	r0, [r4, #0]
    d48c:	ldr.w	r8, [r0]
    d490:	cmp	r0, r5
    d492:	bne.n	d498 <repair_qgroups@@Base+0x608>
    d494:	ldr	r4, [r4, #0]
    d496:	b.n	d482 <repair_qgroups@@Base+0x5f2>
    d498:	cmp.w	r9, #1
    d49c:	bne.n	d518 <repair_qgroups@@Base+0x688>
    d49e:	ldr	r2, [r4, #36]	; 0x24
    d4a0:	ldr	r3, [r0, #36]	; 0x24
    d4a2:	cmp	r2, r3
    d4a4:	bne.n	d52c <repair_qgroups@@Base+0x69c>
    d4a6:	ldrd	r6, r7, [r4, #8]
    d4aa:	ldrd	r2, r3, [r0, #8]
    d4ae:	cmp	r7, r3
    d4b0:	it	eq
    d4b2:	cmpeq	r6, r2
    d4b4:	bne.n	d52c <repair_qgroups@@Base+0x69c>
    d4b6:	ldrb	r2, [r4, #24]
    d4b8:	ldrb	r3, [r0, #24]
    d4ba:	cmp	r2, r3
    d4bc:	bne.n	d52c <repair_qgroups@@Base+0x69c>
    d4be:	ldrd	r6, r7, [r4, #16]
    d4c2:	ldrd	r2, r3, [r0, #16]
    d4c6:	cmp	r7, r3
    d4c8:	it	eq
    d4ca:	cmpeq	r6, r2
    d4cc:	bne.n	d52c <repair_qgroups@@Base+0x69c>
    d4ce:	ldr.w	r7, [r4, #29]
    d4d2:	ldr.w	r3, [r0, #29]
    d4d6:	ldr.w	r6, [r4, #25]
    d4da:	ldr.w	r2, [r0, #25]
    d4de:	cmp	r7, r3
    d4e0:	it	eq
    d4e2:	cmpeq	r6, r2
    d4e4:	bne.n	d52c <repair_qgroups@@Base+0x69c>
    d4e6:	ldrd	r6, r7, [r4, #48]	; 0x30
    d4ea:	ldrd	r2, r3, [r0, #48]	; 0x30
    d4ee:	cmp	r7, r3
    d4f0:	it	eq
    d4f2:	cmpeq	r6, r2
    d4f4:	bne.n	d52c <repair_qgroups@@Base+0x69c>
    d4f6:	ldr	r3, [r4, #44]	; 0x2c
    d4f8:	cbz	r3, d538 <repair_qgroups@@Base+0x6a8>
    d4fa:	ldr	r2, [r3, #16]
    d4fc:	cbnz	r2, d534 <repair_qgroups@@Base+0x6a4>
    d4fe:	ldr	r2, [r0, #44]	; 0x2c
    d500:	str	r2, [r3, #16]
    d502:	ldr	r2, [r0, #40]	; 0x28
    d504:	ldr	r3, [r4, #40]	; 0x28
    d506:	add	r3, r2
    d508:	str	r3, [r4, #40]	; 0x28
    d50a:	ldrd	r2, r3, [r0]
    d50e:	str	r3, [r2, #4]
    d510:	str	r2, [r3, #0]
    d512:	blx	8620 <free@plt+0x4>
    d516:	b.n	d52c <repair_qgroups@@Base+0x69c>
    d518:	ldrd	r6, r7, [r4, #48]	; 0x30
    d51c:	orrs.w	r3, r6, r7
    d520:	beq.n	d52c <repair_qgroups@@Base+0x69c>
    d522:	ldrd	r2, r3, [r0, #48]	; 0x30
    d526:	orrs.w	r1, r2, r3
    d52a:	bne.n	d4ee <repair_qgroups@@Base+0x65e>
    d52c:	mov	r0, r8
    d52e:	ldr.w	r8, [r8]
    d532:	b.n	d490 <repair_qgroups@@Base+0x600>
    d534:	mov	r3, r2
    d536:	b.n	d4f8 <repair_qgroups@@Base+0x668>
    d538:	ldr	r3, [r0, #44]	; 0x2c
    d53a:	str	r3, [r4, #44]	; 0x2c
    d53c:	b.n	d502 <repair_qgroups@@Base+0x672>
    d53e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d542:	movs	r6, #0
    d544:	vpush	{d8}
    d548:	mov	r5, r0
    d54a:	sub	sp, #204	; 0xcc
    d54c:	strd	r2, r3, [sp, #32]
    d550:	ldr	r3, [sp, #248]	; 0xf8
    d552:	ldr.w	r2, [pc, #2924]	; e0c0 <repair_qgroups@@Base+0x1230>
    d556:	str	r1, [sp, #44]	; 0x2c
    d558:	vmov	s17, r3
    d55c:	ldr	r3, [sp, #252]	; 0xfc
    d55e:	add	r2, pc
    d560:	str	r3, [sp, #76]	; 0x4c
    d562:	ldr	r3, [sp, #256]	; 0x100
    d564:	str	r3, [sp, #72]	; 0x48
    d566:	ldr.w	r3, [pc, #2908]	; e0c4 <repair_qgroups@@Base+0x1234>
    d56a:	ldr	r3, [r2, r3]
    d56c:	mov.w	r2, #4294967295	; 0xffffffff
    d570:	ldr	r3, [r3, #0]
    d572:	str	r3, [sp, #196]	; 0xc4
    d574:	mov.w	r3, #0
    d578:	add	r3, sp, #172	; 0xac
    d57a:	strd	r3, r3, [sp, #172]	; 0xac
    d57e:	add	r3, sp, #180	; 0xb4
    d580:	strd	r3, r3, [sp, #180]	; 0xb4
    d584:	add	r3, sp, #188	; 0xbc
    d586:	strd	r3, r3, [sp, #188]	; 0xbc
    d58a:	ldrd	r3, r4, [sp, #32]
    d58e:	strb.w	r2, [sp, #121]	; 0x79
    d592:	strb.w	r2, [sp, #122]	; 0x7a
    d596:	strd	r3, r4, [sp, #112]	; 0x70
    d59a:	ldr.w	r3, [r1, #308]	; 0x134
    d59e:	strb.w	r2, [sp, #123]	; 0x7b
    d5a2:	strb.w	r2, [sp, #124]	; 0x7c
    d5a6:	strb.w	r2, [sp, #125]	; 0x7d
    d5aa:	strb.w	r2, [sp, #126]	; 0x7e
    d5ae:	strb.w	r2, [sp, #127]	; 0x7f
    d5b2:	strb.w	r2, [sp, #128]	; 0x80
    d5b6:	str	r6, [sp, #92]	; 0x5c
    d5b8:	ldr.w	r1, [r3, #188]	; 0xbc
    d5bc:	mov	r3, r6
    d5be:	and.w	r2, r1, #256	; 0x100
    d5c2:	orrs	r3, r2
    d5c4:	ite	ne
    d5c6:	movne	r3, #169	; 0xa9
    d5c8:	moveq	r3, #168	; 0xa8
    d5ca:	strb.w	r3, [sp, #120]	; 0x78
    d5ce:	bl	18550 <btrfs_alloc_path@@Base>
    d5d2:	mov	r4, r0
    d5d4:	cmp	r0, #0
    d5d6:	beq.w	e0a4 <repair_qgroups@@Base+0x1214>
    d5da:	ldr	r1, [sp, #44]	; 0x2c
    d5dc:	add	r7, sp, #112	; 0x70
    d5de:	mov	r3, r0
    d5e0:	strd	r6, r6, [sp]
    d5e4:	mov	r2, r7
    d5e6:	mov	r0, r5
    d5e8:	ldr	r1, [r1, #24]
    d5ea:	bl	1a93c <btrfs_search_slot@@Base>
    d5ee:	subs.w	r8, r0, #0
    d5f2:	blt.w	d788 <repair_qgroups@@Base+0x8f8>
    d5f6:	ldr.w	r5, [pc, #2768]	; e0c8 <repair_qgroups@@Base+0x1238>
    d5fa:	movw	r2, #762	; 0x2fa
    d5fe:	ldr.w	r0, [pc, #2764]	; e0cc <repair_qgroups@@Base+0x123c>
    d602:	it	eq
    d604:	moveq	r3, #1
    d606:	add	r5, pc
    d608:	it	ne
    d60a:	movne	r3, r6
    d60c:	add.w	r1, r5, #29
    d610:	add	r0, pc
    d612:	bl	d41c <repair_qgroups@@Base+0x58c>
    d616:	ldr	r2, [r4, #32]
    d618:	cmp	r2, #0
    d61a:	beq.w	da7a <repair_qgroups@@Base+0xbea>
    d61e:	subs	r2, #1
    d620:	ldr	r0, [r4, #0]
    d622:	mov	r1, r7
    d624:	str	r2, [r4, #32]
    d626:	bl	d1b0 <repair_qgroups@@Base+0x320>
    d62a:	ldrd	r2, r3, [sp, #112]	; 0x70
    d62e:	ldrd	r0, r1, [sp, #32]
    d632:	cmp	r1, r3
    d634:	it	eq
    d636:	cmpeq	r0, r2
    d638:	bne.w	da7a <repair_qgroups@@Base+0xbea>
    d63c:	ldrb.w	r3, [sp, #120]	; 0x78
    d640:	adds	r3, #88	; 0x58
    d642:	uxtb	r3, r3
    d644:	cmp	r3, #1
    d646:	bhi.w	da7a <repair_qgroups@@Base+0xbea>
    d64a:	ldr.w	sl, [r4]
    d64e:	movs	r3, #25
    d650:	ldr.w	r9, [r4, #32]
    d654:	adds	r5, #47	; 0x2f
    d656:	add.w	fp, sl, #96	; 0x60
    d65a:	ldr.w	r0, [pc, #2676]	; e0d0 <repair_qgroups@@Base+0x1240>
    d65e:	movw	r2, #559	; 0x22f
    d662:	mov	r1, r5
    d664:	mla	r3, r3, r9, fp
    d668:	add	r0, pc
    d66a:	add.w	r7, r3, #101	; 0x65
    d66e:	ldr.w	r3, [r3, #122]	; 0x7a
    d672:	cmp	r3, #23
    d674:	str	r3, [sp, #48]	; 0x30
    d676:	ite	hi
    d678:	movhi	r3, #0
    d67a:	movls	r3, #1
    d67c:	bl	d41c <repair_qgroups@@Base+0x58c>
    d680:	ldr.w	r8, [r7, #17]
    d684:	mov	r0, sl
    d686:	add	r1, sp, #152	; 0x98
    d688:	add.w	r3, r8, #101	; 0x65
    d68c:	str	r3, [sp, #64]	; 0x40
    d68e:	add.w	r2, fp, r3
    d692:	add.w	sl, r8, #125	; 0x7d
    d696:	ldr	r3, [r2, #0]
    d698:	ldr	r7, [r2, #16]
    d69a:	str	r3, [sp, #56]	; 0x38
    d69c:	ldr	r3, [r2, #4]
    d69e:	mov	r2, r9
    d6a0:	str	r3, [sp, #60]	; 0x3c
    d6a2:	bl	d1b0 <repair_qgroups@@Base+0x320>
    d6a6:	ldr	r3, [sp, #48]	; 0x30
    d6a8:	mov	r2, r3
    d6aa:	ldr	r3, [sp, #64]	; 0x40
    d6ac:	add.w	r9, r2, r3
    d6b0:	ldrb.w	r3, [sp, #160]	; 0xa0
    d6b4:	cmp	r3, #168	; 0xa8
    d6b6:	bne.n	d70c <repair_qgroups@@Base+0x87c>
    d6b8:	and.w	r2, r7, #2
    d6bc:	mov	r3, r6
    d6be:	orrs	r3, r2
    d6c0:	beq.n	d716 <repair_qgroups@@Base+0x886>
    d6c2:	add	sl, fp
    d6c4:	ldr.w	r0, [pc, #2572]	; e0d4 <repair_qgroups@@Base+0x1244>
    d6c8:	mov.w	r2, #576	; 0x240
    d6cc:	mov	r1, r5
    d6ce:	ldrb.w	r6, [sl, #17]
    d6d2:	add.w	sl, r8, #143	; 0x8f
    d6d6:	cmp	r9, sl
    d6d8:	add	r0, pc
    d6da:	ite	cs
    d6dc:	movcs	r3, #0
    d6de:	movcc	r3, #1
    d6e0:	bl	d41c <repair_qgroups@@Base+0x58c>
    d6e4:	ldr.w	r5, [pc, #2544]	; e0d8 <repair_qgroups@@Base+0x1248>
    d6e8:	ldr.w	r7, [pc, #2544]	; e0dc <repair_qgroups@@Base+0x124c>
    d6ec:	add	r5, pc
    d6ee:	adds	r5, #47	; 0x2f
    d6f0:	add	r7, pc
    d6f2:	cmp	r9, sl
    d6f4:	bhi.n	d736 <repair_qgroups@@Base+0x8a6>
    d6f6:	ldr	r3, [sp, #44]	; 0x2c
    d6f8:	ldr.w	r5, [pc, #2532]	; e0e0 <repair_qgroups@@Base+0x1250>
    d6fc:	ldr.w	r7, [pc, #2532]	; e0e4 <repair_qgroups@@Base+0x1254>
    d700:	ldr	r3, [r3, #24]
    d702:	add	r5, pc
    d704:	adds	r5, #65	; 0x41
    d706:	add	r7, pc
    d708:	str	r3, [sp, #48]	; 0x30
    d70a:	b.n	d922 <repair_qgroups@@Base+0xa92>
    d70c:	cmp	r3, #169	; 0xa9
    d70e:	bne.n	d716 <repair_qgroups@@Base+0x886>
    d710:	ldr.w	r6, [sp, #161]	; 0xa1
    d714:	b.n	d6e4 <repair_qgroups@@Base+0x854>
    d716:	ldr.w	r1, [pc, #2512]	; e0e8 <repair_qgroups@@Base+0x1258>
    d71a:	mvns	r3, r7
    d71c:	ldr.w	r0, [pc, #2508]	; e0ec <repair_qgroups@@Base+0x125c>
    d720:	and.w	r3, r3, #1
    d724:	add	r1, pc
    d726:	mov.w	r2, #580	; 0x244
    d72a:	adds	r1, #47	; 0x2f
    d72c:	add	r0, pc
    d72e:	bl	d41c <repair_qgroups@@Base+0x58c>
    d732:	movs	r6, #0
    d734:	b.n	d6e4 <repair_qgroups@@Base+0x854>
    d736:	add.w	r0, fp, sl
    d73a:	ldrb.w	r8, [fp, sl]
    d73e:	mov	r1, r0
    d740:	ldr.w	r2, [r1, #1]!
    d744:	ldr	r3, [r1, #4]
    d746:	sub.w	r1, r8, #176	; 0xb0
    d74a:	cmp	r1, #8
    d74c:	bhi.w	d884 <repair_qgroups@@Base+0x9f4>
    d750:	tbb	[pc, r1]
    d754:	ldr	r0, [sp, #300]	; 0x12c
    d756:	ldr	r0, [sp, #392]	; 0x188
    d758:	ldr	r0, [sp, #608]	; 0x260
    d75a:	ldr	r0, [sp, #20]
    d75c:	movs	r5, r6
    d75e:	movs	r1, #1
    d760:	str	r1, [sp, #24]
    d762:	ldrd	r0, r1, [sp, #32]
    d766:	strd	r2, r3, [sp, #8]
    d76a:	adds	r3, r6, #1
    d76c:	movs	r2, #0
    d76e:	str	r3, [sp, #4]
    d770:	movs	r3, #0
    d772:	str	r3, [sp, #0]
    d774:	movs	r3, #0
    d776:	strd	r0, r1, [sp, #16]
    d77a:	add	r0, sp, #172	; 0xac
    d77c:	bl	d304 <repair_qgroups@@Base+0x474>
    d780:	mov	r8, r0
    d782:	cmp	r0, #0
    d784:	beq.w	d8ae <repair_qgroups@@Base+0xa1e>
    d788:	mov	r0, r4
    d78a:	add	r4, sp, #172	; 0xac
    d78c:	bl	1857e <btrfs_free_path@@Base>
    d790:	ldr	r0, [sp, #172]	; 0xac
    d792:	cmp	r0, r4
    d794:	bne.w	e094 <repair_qgroups@@Base+0x1204>
    d798:	cmp.w	r8, #0
    d79c:	bge.n	d7a4 <repair_qgroups@@Base+0x914>
    d79e:	ldr	r0, [sp, #92]	; 0x5c
    d7a0:	bl	d134 <repair_qgroups@@Base+0x2a4>
    d7a4:	ldr.w	r2, [pc, #2376]	; e0f0 <repair_qgroups@@Base+0x1260>
    d7a8:	ldr.w	r3, [pc, #2328]	; e0c4 <repair_qgroups@@Base+0x1234>
    d7ac:	add	r2, pc
    d7ae:	ldr	r3, [r2, r3]
    d7b0:	ldr	r2, [r3, #0]
    d7b2:	ldr	r3, [sp, #196]	; 0xc4
    d7b4:	eors	r2, r3
    d7b6:	beq.w	e0b2 <repair_qgroups@@Base+0x1222>
    d7ba:	blx	8708 <__stack_chk_fail@plt>
    d7be:	ldr.w	r1, [r0, #9]
    d7c2:	strd	r2, r3, [sp, #8]
    d7c6:	movs	r3, #0
    d7c8:	movs	r2, #0
    d7ca:	strd	r3, r3, [sp]
    d7ce:	str	r1, [sp, #24]
    d7d0:	movs	r3, #0
    d7d2:	ldrd	r0, r1, [sp, #32]
    d7d6:	strd	r0, r1, [sp, #16]
    d7da:	add	r0, sp, #172	; 0xac
    d7dc:	bl	d304 <repair_qgroups@@Base+0x474>
    d7e0:	mov	r8, r0
    d7e2:	cmp	r0, #0
    d7e4:	bne.n	d788 <repair_qgroups@@Base+0x8f8>
    d7e6:	movs	r3, #13
    d7e8:	b.n	d852 <repair_qgroups@@Base+0x9c2>
    d7ea:	mov.w	r1, #4294967295	; 0xffffffff
    d7ee:	cmp	r3, r1
    d7f0:	mvn.w	r0, #8
    d7f4:	it	eq
    d7f6:	cmpeq	r2, r0
    d7f8:	beq.n	d8ae <repair_qgroups@@Base+0xa1e>
    d7fa:	movs	r1, #1
    d7fc:	str	r1, [sp, #24]
    d7fe:	ldrd	r0, r1, [sp, #32]
    d802:	strd	r0, r1, [sp, #16]
    d806:	movs	r1, #0
    d808:	movs	r0, #0
    d80a:	strd	r0, r1, [sp, #8]
    d80e:	adds	r1, r6, #1
    d810:	str	r1, [sp, #4]
    d812:	movs	r1, #0
    d814:	str	r1, [sp, #0]
    d816:	b.n	d77a <repair_qgroups@@Base+0x8ea>
    d818:	add.w	r3, sl, #1
    d81c:	add	r3, fp
    d81e:	ldr	r1, [r3, #8]
    d820:	ldr	r2, [r3, #12]
    d822:	ldr.w	ip, [r3, #24]
    d826:	strd	r1, r2, [sp, #132]	; 0x84
    d82a:	movs	r2, #108	; 0x6c
    d82c:	strb.w	r2, [sp, #140]	; 0x8c
    d830:	ldr	r1, [r3, #16]
    d832:	ldr	r2, [r3, #20]
    d834:	str.w	r1, [sp, #141]	; 0x8d
    d838:	str.w	r2, [sp, #145]	; 0x91
    d83c:	mvn.w	r2, #8
    d840:	ldr	r1, [r3, #4]
    d842:	ldr	r0, [r3, #0]
    d844:	mov.w	r3, #4294967295	; 0xffffffff
    d848:	cmp	r1, r3
    d84a:	it	eq
    d84c:	cmpeq	r0, r2
    d84e:	bne.n	d856 <repair_qgroups@@Base+0x9c6>
    d850:	movs	r3, #29
    d852:	add	sl, r3
    d854:	b.n	d6f2 <repair_qgroups@@Base+0x862>
    d856:	ldrd	r2, r3, [sp, #32]
    d85a:	str.w	ip, [sp, #24]
    d85e:	strd	r2, r3, [sp, #16]
    d862:	movs	r2, #0
    d864:	movs	r3, #0
    d866:	strd	r2, r3, [sp, #8]
    d86a:	movs	r3, #0
    d86c:	mov	r2, r0
    d86e:	str	r3, [sp, #4]
    d870:	add	r0, sp, #172	; 0xac
    d872:	add	r3, sp, #132	; 0x84
    d874:	str	r3, [sp, #0]
    d876:	mov	r3, r1
    d878:	bl	d304 <repair_qgroups@@Base+0x474>
    d87c:	mov	r8, r0
    d87e:	cmp	r0, #0
    d880:	beq.n	d850 <repair_qgroups@@Base+0x9c0>
    d882:	b.n	d788 <repair_qgroups@@Base+0x8f8>
    d884:	movs	r3, #1
    d886:	movw	r2, #630	; 0x276
    d88a:	mov	r1, r5
    d88c:	mov	r0, r7
    d88e:	bl	d43c <repair_qgroups@@Base+0x5ac>
    d892:	cmp.w	r8, #176	; 0xb0
    d896:	beq.n	d8ae <repair_qgroups@@Base+0xa1e>
    d898:	cmp.w	r8, #182	; 0xb6
    d89c:	beq.n	d8ae <repair_qgroups@@Base+0xa1e>
    d89e:	cmp.w	r8, #184	; 0xb8
    d8a2:	beq.n	d7e6 <repair_qgroups@@Base+0x956>
    d8a4:	cmp.w	r8, #178	; 0xb2
    d8a8:	beq.n	d850 <repair_qgroups@@Base+0x9c0>
    d8aa:	bl	d3b8 <repair_qgroups@@Base+0x528>
    d8ae:	movs	r3, #9
    d8b0:	b.n	d852 <repair_qgroups@@Base+0x9c2>
    d8b2:	ldr	r3, [sp, #48]	; 0x30
    d8b4:	mov	r1, r4
    d8b6:	strb.w	r9, [r4, #65]	; 0x41
    d8ba:	ldr.w	r0, [r3, #464]	; 0x1d0
    d8be:	bl	1bd70 <btrfs_next_sibling_tree_block@@Base>
    d8c2:	subs.w	r8, r0, #0
    d8c6:	blt.w	d788 <repair_qgroups@@Base+0x8f8>
    d8ca:	beq.n	d93a <repair_qgroups@@Base+0xaaa>
    d8cc:	b.n	d95c <repair_qgroups@@Base+0xacc>
    d8ce:	ldrb.w	r3, [sp, #160]	; 0xa0
    d8d2:	cmp	r3, #175	; 0xaf
    d8d4:	bls.n	d92a <repair_qgroups@@Base+0xa9a>
    d8d6:	cmp	r3, #184	; 0xb8
    d8d8:	bhi.n	d95c <repair_qgroups@@Base+0xacc>
    d8da:	subs	r3, #176	; 0xb0
    d8dc:	cmp	r3, #8
    d8de:	bhi.w	da6a <repair_qgroups@@Base+0xbda>
    d8e2:	tbb	[pc, r3]
    d8e6:	stmia	r2!, {r4, r5, r6}
    d8e8:	stmia	r2!, {r0, r1, r3, r7}
    d8ea:	stmia	r2!, {r1, r6, r7}
    d8ec:	stmia	r2!, {r0, r2}
    d8ee:	lsls	r0, r3, #1
    d8f0:	movs	r3, #1
    d8f2:	str	r3, [sp, #24]
    d8f4:	ldrd	r2, r3, [sp, #32]
    d8f8:	strd	r2, r3, [sp, #16]
    d8fc:	ldr.w	r3, [sp, #165]	; 0xa5
    d900:	ldr.w	r2, [sp, #161]	; 0xa1
    d904:	strd	r2, r3, [sp, #8]
    d908:	adds	r3, r6, #1
    d90a:	str	r3, [sp, #4]
    d90c:	movs	r3, #0
    d90e:	str	r3, [sp, #0]
    d910:	movs	r2, #0
    d912:	movs	r3, #0
    d914:	add	r0, sp, #172	; 0xac
    d916:	bl	d304 <repair_qgroups@@Base+0x474>
    d91a:	mov	r8, r0
    d91c:	cmp	r0, #0
    d91e:	bne.w	d788 <repair_qgroups@@Base+0x8f8>
    d922:	add.w	sl, sp, #152	; 0x98
    d926:	mov.w	r9, #0
    d92a:	ldr	r2, [r4, #0]
    d92c:	ldr	r3, [r4, #32]
    d92e:	adds	r3, #1
    d930:	str	r3, [r4, #32]
    d932:	ldr.w	r2, [r2, #192]	; 0xc0
    d936:	cmp	r3, r2
    d938:	bcs.n	d8b2 <repair_qgroups@@Base+0xa22>
    d93a:	ldr.w	fp, [r4, #32]
    d93e:	mov	r1, sl
    d940:	ldr.w	r8, [r4]
    d944:	mov	r2, fp
    d946:	mov	r0, r8
    d948:	bl	d1b0 <repair_qgroups@@Base+0x320>
    d94c:	ldrd	r2, r3, [sp, #32]
    d950:	ldrd	r0, r1, [sp, #152]	; 0x98
    d954:	cmp	r3, r1
    d956:	it	eq
    d958:	cmpeq	r2, r0
    d95a:	beq.n	d8ce <repair_qgroups@@Base+0xa3e>
    d95c:	mov	r0, r4
    d95e:	ldr.w	r6, [pc, #1940]	; e0f4 <repair_qgroups@@Base+0x1264>
    d962:	bl	18558 <btrfs_release_path@@Base>
    d966:	ldr.w	fp, [pc, #1936]	; e0f8 <repair_qgroups@@Base+0x1268>
    d96a:	add	r6, pc
    d96c:	adds	r6, #82	; 0x52
    d96e:	add	fp, pc
    d970:	ldr	r5, [sp, #180]	; 0xb4
    d972:	add	r3, sp, #180	; 0xb4
    d974:	cmp	r5, r3
    d976:	bne.w	da84 <repair_qgroups@@Base+0xbf4>
    d97a:	add	r0, sp, #172	; 0xac
    d97c:	movs	r1, #1
    d97e:	bl	d478 <repair_qgroups@@Base+0x5e8>
    d982:	movs	r0, #0
    d984:	bl	b5e0 <ulist_alloc@@Base>
    d988:	mov	r7, r0
    d98a:	cmp	r0, #0
    d98c:	bne.w	dc58 <repair_qgroups@@Base+0xdc8>
    d990:	mvn.w	r8, #11
    d994:	b.n	d788 <repair_qgroups@@Base+0x8f8>
    d996:	add.w	r8, r8, #96	; 0x60
    d99a:	movs	r2, #25
    d99c:	mla	r2, r2, fp, r8
    d9a0:	ldr.w	r0, [r2, #118]	; 0x76
    d9a4:	add	r8, r0
    d9a6:	ldr.w	r3, [r8, #101]	; 0x65
    d9aa:	str	r3, [sp, #24]
    d9ac:	ldrd	r2, r3, [sp, #32]
    d9b0:	strd	r2, r3, [sp, #16]
    d9b4:	ldr.w	r3, [sp, #165]	; 0xa5
    d9b8:	ldr.w	r2, [sp, #161]	; 0xa1
    d9bc:	strd	r2, r3, [sp, #8]
    d9c0:	movs	r3, #0
    d9c2:	str	r3, [sp, #4]
    d9c4:	b.n	d90e <repair_qgroups@@Base+0xa7e>
    d9c6:	ldr.w	r3, [sp, #165]	; 0xa5
    d9ca:	mov.w	r1, #4294967295	; 0xffffffff
    d9ce:	ldr.w	r2, [sp, #161]	; 0xa1
    d9d2:	mvn.w	r0, #8
    d9d6:	cmp	r3, r1
    d9d8:	it	eq
    d9da:	cmpeq	r2, r0
    d9dc:	beq.n	d922 <repair_qgroups@@Base+0xa92>
    d9de:	movs	r1, #1
    d9e0:	str	r1, [sp, #24]
    d9e2:	ldrd	r0, r1, [sp, #32]
    d9e6:	strd	r0, r1, [sp, #16]
    d9ea:	movs	r1, #0
    d9ec:	movs	r0, #0
    d9ee:	strd	r0, r1, [sp, #8]
    d9f2:	adds	r1, r6, #1
    d9f4:	str	r1, [sp, #4]
    d9f6:	movs	r1, #0
    d9f8:	str	r1, [sp, #0]
    d9fa:	b.n	d914 <repair_qgroups@@Base+0xa84>
    d9fc:	add.w	r8, r8, #96	; 0x60
    da00:	movs	r2, #25
    da02:	mov.w	r1, #4294967295	; 0xffffffff
    da06:	mla	fp, r2, fp, r8
    da0a:	ldr.w	r0, [fp, #118]	; 0x76
    da0e:	adds	r0, #101	; 0x65
    da10:	add	r8, r0
    da12:	mvn.w	r0, #8
    da16:	ldr.w	r2, [r8, #8]
    da1a:	ldr.w	r3, [r8, #12]
    da1e:	ldr.w	ip, [r8, #24]
    da22:	strd	r2, r3, [sp, #152]	; 0x98
    da26:	movs	r3, #108	; 0x6c
    da28:	strb.w	r3, [sp, #160]	; 0xa0
    da2c:	ldr.w	r2, [r8, #16]
    da30:	ldr.w	r3, [r8, #20]
    da34:	str.w	r2, [sp, #161]	; 0xa1
    da38:	str.w	r3, [sp, #165]	; 0xa5
    da3c:	ldr.w	r3, [r8, #4]
    da40:	ldr.w	r2, [r8]
    da44:	cmp	r3, r1
    da46:	it	eq
    da48:	cmpeq	r2, r0
    da4a:	beq.w	d922 <repair_qgroups@@Base+0xa92>
    da4e:	ldrd	r0, r1, [sp, #32]
    da52:	str.w	ip, [sp, #24]
    da56:	strd	r0, r1, [sp, #16]
    da5a:	movs	r1, #0
    da5c:	movs	r0, #0
    da5e:	strd	r0, r1, [sp, #8]
    da62:	movs	r1, #0
    da64:	str	r1, [sp, #4]
    da66:	add	r1, sp, #152	; 0x98
    da68:	b.n	d9f8 <repair_qgroups@@Base+0xb68>
    da6a:	movs	r3, #1
    da6c:	movw	r2, #714	; 0x2ca
    da70:	mov	r1, r5
    da72:	mov	r0, r7
    da74:	bl	d43c <repair_qgroups@@Base+0x5ac>
    da78:	b.n	d922 <repair_qgroups@@Base+0xa92>
    da7a:	movs	r2, #0
    da7c:	movs	r3, #0
    da7e:	strd	r2, r3, [sp, #56]	; 0x38
    da82:	b.n	d95c <repair_qgroups@@Base+0xacc>
    da84:	ldr	r3, [r5, #8]
    da86:	cbnz	r3, da9e <repair_qgroups@@Base+0xc0e>
    da88:	ldr.w	r1, [pc, #1648]	; e0fc <repair_qgroups@@Base+0x126c>
    da8c:	mov.w	r2, #456	; 0x1c8
    da90:	ldr.w	r0, [pc, #1644]	; e100 <repair_qgroups@@Base+0x1270>
    da94:	add	r1, pc
    da96:	adds	r1, #82	; 0x52
    da98:	add	r0, pc
    da9a:	bl	d3e0 <repair_qgroups@@Base+0x550>
    da9e:	ldrd	r8, r9, [r5, #48]	; 0x30
    daa2:	orrs.w	r3, r8, r9
    daa6:	beq.n	dabc <repair_qgroups@@Base+0xc2c>
    daa8:	ldr.w	r1, [pc, #1624]	; e104 <repair_qgroups@@Base+0x1274>
    daac:	movw	r2, #457	; 0x1c9
    dab0:	ldr.w	r0, [pc, #1620]	; e108 <repair_qgroups@@Base+0x1278>
    dab4:	add	r1, pc
    dab6:	adds	r1, #82	; 0x52
    dab8:	add	r0, pc
    daba:	b.n	da9a <repair_qgroups@@Base+0xc0a>
    dabc:	ldrb	r3, [r5, #24]
    dabe:	cbz	r3, dad4 <repair_qgroups@@Base+0xc44>
    dac0:	ldr.w	r1, [pc, #1608]	; e10c <repair_qgroups@@Base+0x127c>
    dac4:	mov.w	r2, #458	; 0x1ca
    dac8:	ldr.w	r0, [pc, #1604]	; e110 <repair_qgroups@@Base+0x1280>
    dacc:	add	r1, pc
    dace:	adds	r1, #82	; 0x52
    dad0:	add	r0, pc
    dad2:	b.n	da9a <repair_qgroups@@Base+0xc0a>
    dad4:	ldrd	sl, r7, [r5, #56]	; 0x38
    dad8:	movw	r2, #459	; 0x1cb
    dadc:	mov	r1, r6
    dade:	mov	r0, fp
    dae0:	orrs.w	r3, sl, r7
    dae4:	ite	eq
    dae6:	moveq	r3, #1
    dae8:	movne	r3, #0
    daea:	bl	d41c <repair_qgroups@@Base+0x58c>
    daee:	mov	r3, r7
    daf0:	ldr	r0, [sp, #44]	; 0x2c
    daf2:	mov	r2, sl
    daf4:	strd	r8, r9, [sp]
    daf8:	bl	1dd84 <read_tree_block@@Base>
    dafc:	mov	r7, r0
    dafe:	cbz	r0, db3c <repair_qgroups@@Base+0xcac>
    db00:	cmn.w	r0, #4096	; 0x1000
    db04:	bhi.n	db3c <repair_qgroups@@Base+0xcac>
    db06:	ldr	r3, [r0, #84]	; 0x54
    db08:	lsls	r2, r3, #29
    db0a:	bpl.n	db3c <repair_qgroups@@Base+0xcac>
    db0c:	ldrb.w	r2, [r0, #196]	; 0xc4
    db10:	cbz	r2, db48 <repair_qgroups@@Base+0xcb8>
    db12:	movs	r3, #17
    db14:	movs	r2, #101	; 0x65
    db16:	add	r1, sp, #152	; 0x98
    db18:	bl	17a1a <read_extent_buffer@@Base>
    db1c:	ldr.w	r3, [sp, #165]	; 0xa5
    db20:	ldr.w	r2, [sp, #161]	; 0xa1
    db24:	str.w	r3, [r5, #29]
    db28:	str.w	r2, [r5, #25]
    db2c:	ldrb.w	r3, [sp, #160]	; 0xa0
    db30:	strb	r3, [r5, #24]
    db32:	ldr	r3, [sp, #152]	; 0x98
    db34:	str	r3, [r5, #16]
    db36:	ldr	r3, [sp, #156]	; 0x9c
    db38:	str	r3, [r5, #20]
    db3a:	b.n	db50 <repair_qgroups@@Base+0xcc0>
    db3c:	mov	r0, r7
    db3e:	bl	17320 <free_extent_buffer@@Base>
    db42:	mvn.w	r8, #4
    db46:	b.n	d788 <repair_qgroups@@Base+0x8f8>
    db48:	add.w	r1, r5, #16
    db4c:	bl	d1b0 <repair_qgroups@@Base+0x320>
    db50:	mov	r0, r7
    db52:	bl	17320 <free_extent_buffer@@Base>
    db56:	ldrd	r2, r3, [r5]
    db5a:	str	r3, [r2, #4]
    db5c:	str	r2, [r3, #0]
    db5e:	ldr	r3, [sp, #172]	; 0xac
    db60:	str	r5, [r3, #4]
    db62:	str	r3, [r5, #0]
    db64:	add	r3, sp, #172	; 0xac
    db66:	str	r5, [sp, #172]	; 0xac
    db68:	str	r3, [r5, #4]
    db6a:	b.n	d970 <repair_qgroups@@Base+0xae0>
    db6c:	ldrd	r2, r3, [r5]
    db70:	str	r3, [r2, #4]
    db72:	str	r2, [r3, #0]
    db74:	ldr	r3, [sp, #172]	; 0xac
    db76:	str	r5, [r3, #4]
    db78:	str	r3, [r5, #0]
    db7a:	add	r3, sp, #172	; 0xac
    db7c:	str	r3, [r5, #4]
    db7e:	ldrd	r2, r3, [r5, #48]	; 0x30
    db82:	str	r5, [sp, #172]	; 0xac
    db84:	strd	r2, r3, [sp, #64]	; 0x40
    db88:	orrs	r3, r2
    db8a:	beq.n	dba0 <repair_qgroups@@Base+0xd10>
    db8c:	ldr.w	r1, [pc, #1412]	; e114 <repair_qgroups@@Base+0x1284>
    db90:	movw	r2, #381	; 0x17d
    db94:	ldr.w	r0, [pc, #1408]	; e118 <repair_qgroups@@Base+0x1288>
    db98:	add	r1, pc
    db9a:	adds	r1, #101	; 0x65
    db9c:	add	r0, pc
    db9e:	b.n	da9a <repair_qgroups@@Base+0xc0a>
    dba0:	ldr	r3, [r5, #40]	; 0x28
    dba2:	cbnz	r3, dbb8 <repair_qgroups@@Base+0xd28>
    dba4:	ldr.w	r1, [pc, #1396]	; e11c <repair_qgroups@@Base+0x128c>
    dba8:	mov.w	r2, #382	; 0x17e
    dbac:	ldr.w	r0, [pc, #1392]	; e120 <repair_qgroups@@Base+0x1290>
    dbb0:	add	r1, pc
    dbb2:	adds	r1, #101	; 0x65
    dbb4:	add	r0, pc
    dbb6:	b.n	da9a <repair_qgroups@@Base+0xc0a>
    dbb8:	ldr	r3, [r5, #8]
    dbba:	add	r1, sp, #132	; 0x84
    dbbc:	ldr	r6, [r5, #36]	; 0x24
    dbbe:	mov.w	r2, #4294967295	; 0xffffffff
    dbc2:	ldr	r0, [sp, #44]	; 0x2c
    dbc4:	str	r3, [sp, #132]	; 0x84
    dbc6:	ldr	r3, [r5, #12]
    dbc8:	strb.w	r2, [sp, #141]	; 0x8d
    dbcc:	strb.w	r2, [sp, #142]	; 0x8e
    dbd0:	str	r3, [sp, #136]	; 0x88
    dbd2:	movs	r3, #132	; 0x84
    dbd4:	strb.w	r2, [sp, #143]	; 0x8f
    dbd8:	strb.w	r3, [sp, #140]	; 0x8c
    dbdc:	strb.w	r2, [sp, #144]	; 0x90
    dbe0:	strb.w	r2, [sp, #145]	; 0x91
    dbe4:	strb.w	r2, [sp, #146]	; 0x92
    dbe8:	strb.w	r2, [sp, #147]	; 0x93
    dbec:	strb.w	r2, [sp, #148]	; 0x94
    dbf0:	bl	1e106 <btrfs_read_fs_root@@Base>
    dbf4:	cmn.w	r0, #4096	; 0x1000
    dbf8:	mov	r9, r0
    dbfa:	bls.w	dd9e <repair_qgroups@@Base+0xf0e>
    dbfe:	mov	r8, r0
    dc00:	movs	r3, #0
    dc02:	mov	r0, r4
    dc04:	strb.w	r3, [r4, #65]	; 0x41
    dc08:	bl	18558 <btrfs_release_path@@Base>
    dc0c:	cmn.w	r8, #2
    dc10:	beq.n	dc58 <repair_qgroups@@Base+0xdc8>
    dc12:	cmp.w	r8, #0
    dc16:	bne.n	dc64 <repair_qgroups@@Base+0xdd4>
    dc18:	add	r1, sp, #96	; 0x60
    dc1a:	mov	r0, r7
    dc1c:	str.w	r8, [sp, #96]	; 0x60
    dc20:	bl	b7e0 <ulist_next@@Base>
    dc24:	cbz	r0, dc2e <repair_qgroups@@Base+0xd9e>
    dc26:	ldrd	r2, r3, [r0]
    dc2a:	strd	r2, r3, [sp, #64]	; 0x40
    dc2e:	ldrd	r2, r3, [sp, #64]	; 0x40
    dc32:	strd	r2, r3, [r5, #48]	; 0x30
    dc36:	cbz	r0, dc3a <repair_qgroups@@Base+0xdaa>
    dc38:	ldr	r0, [r0, #8]
    dc3a:	add	r6, sp, #96	; 0x60
    dc3c:	add.w	r8, r5, #64	; 0x40
    dc40:	str	r0, [r5, #44]	; 0x2c
    dc42:	mov	r1, r6
    dc44:	mov	r0, r7
    dc46:	bl	b7e0 <ulist_next@@Base>
    dc4a:	mov	r9, r0
    dc4c:	cmp	r0, #0
    dc4e:	bne.w	df62 <repair_qgroups@@Base+0x10d2>
    dc52:	mov	r0, r7
    dc54:	bl	b5ce <ulist_reinit@@Base>
    dc58:	ldr	r5, [sp, #188]	; 0xbc
    dc5a:	add	r3, sp, #188	; 0xbc
    dc5c:	cmp	r5, r3
    dc5e:	bne.n	db6c <repair_qgroups@@Base+0xcdc>
    dc60:	mov.w	r8, #0
    dc64:	mov	r0, r7
    dc66:	bl	b5f4 <ulist_free@@Base>
    dc6a:	cmp.w	r8, #0
    dc6e:	bne.w	d788 <repair_qgroups@@Base+0x8f8>
    dc72:	add	r0, sp, #172	; 0xac
    dc74:	movs	r1, #2
    dc76:	bl	d478 <repair_qgroups@@Base+0x5e8>
    dc7a:	ldr	r2, [sp, #180]	; 0xb4
    dc7c:	ldr.w	r1, [pc, #1188]	; e124 <repair_qgroups@@Base+0x1294>
    dc80:	add	r3, sp, #180	; 0xb4
    dc82:	subs	r3, r2, r3
    dc84:	ldr.w	r0, [pc, #1184]	; e128 <repair_qgroups@@Base+0x1298>
    dc88:	add	r1, pc
    dc8a:	movw	r2, #801	; 0x321
    dc8e:	add.w	r1, r1, #29
    dc92:	it	ne
    dc94:	movne	r3, #1
    dc96:	add	r0, pc
    dc98:	str	r1, [sp, #48]	; 0x30
    dc9a:	bl	d41c <repair_qgroups@@Base+0x58c>
    dc9e:	ldr	r2, [sp, #188]	; 0xbc
    dca0:	add	r3, sp, #188	; 0xbc
    dca2:	ldr.w	r0, [pc, #1160]	; e12c <repair_qgroups@@Base+0x129c>
    dca6:	subs	r3, r2, r3
    dca8:	ldr	r1, [sp, #48]	; 0x30
    dcaa:	add	r0, pc
    dcac:	movw	r2, #802	; 0x322
    dcb0:	it	ne
    dcb2:	movne	r3, #1
    dcb4:	ldr.w	r6, [pc, #1144]	; e130 <repair_qgroups@@Base+0x12a0>
    dcb8:	bl	d41c <repair_qgroups@@Base+0x58c>
    dcbc:	ldr.w	r3, [pc, #1140]	; e134 <repair_qgroups@@Base+0x12a4>
    dcc0:	add	r6, pc
    dcc2:	add	r3, pc
    dcc4:	adds	r6, #29
    dcc6:	vmov	s16, r3
    dcca:	ldr	r5, [sp, #172]	; 0xac
    dccc:	add	r3, sp, #172	; 0xac
    dcce:	cmp	r5, r3
    dcd0:	beq.w	d788 <repair_qgroups@@Base+0x8f8>
    dcd4:	ldr	r3, [r5, #40]	; 0x28
    dcd6:	cmp	r3, #0
    dcd8:	bge.n	dcea <repair_qgroups@@Base+0xe5a>
    dcda:	vmov	r0, s16
    dcde:	movs	r3, #1
    dce0:	movw	r2, #806	; 0x326
    dce4:	mov	r1, r6
    dce6:	bl	d43c <repair_qgroups@@Base+0x5ac>
    dcea:	ldr	r3, [sp, #76]	; 0x4c
    dcec:	cbz	r3, dd20 <repair_qgroups@@Base+0xe90>
    dcee:	ldr	r3, [r5, #40]	; 0x28
    dcf0:	cbz	r3, dd20 <repair_qgroups@@Base+0xe90>
    dcf2:	ldrd	r2, r3, [r5, #8]
    dcf6:	orrs.w	r1, r2, r3
    dcfa:	beq.n	dd20 <repair_qgroups@@Base+0xe90>
    dcfc:	ldrd	r0, r1, [r5, #48]	; 0x30
    dd00:	orrs.w	r7, r0, r1
    dd04:	bne.n	dd20 <repair_qgroups@@Base+0xe90>
    dd06:	mov.w	ip, #0
    dd0a:	strd	r0, r1, [sp]
    dd0e:	str.w	ip, [sp, #8]
    dd12:	ldr	r0, [sp, #76]	; 0x4c
    dd14:	bl	b708 <ulist_add@@Base>
    dd18:	subs.w	r8, r0, #0
    dd1c:	blt.w	d788 <repair_qgroups@@Base+0x8f8>
    dd20:	ldr	r3, [r5, #40]	; 0x28
    dd22:	cmp	r3, #0
    dd24:	beq.w	e084 <repair_qgroups@@Base+0x11f4>
    dd28:	ldrd	r2, r3, [r5, #48]	; 0x30
    dd2c:	orrs.w	r1, r2, r3
    dd30:	beq.w	e084 <repair_qgroups@@Base+0x11f4>
    dd34:	ldr	r0, [sp, #72]	; 0x48
    dd36:	ldr	r1, [r5, #44]	; 0x2c
    dd38:	cmp	r0, #0
    dd3a:	beq.w	e01c <repair_qgroups@@Base+0x118c>
    dd3e:	cmp	r1, #0
    dd40:	bne.w	e01c <repair_qgroups@@Base+0x118c>
    dd44:	ldr.w	sl, [r5, #36]	; 0x24
    dd48:	cmp.w	sl, #0
    dd4c:	bne.w	e01c <repair_qgroups@@Base+0x118c>
    dd50:	movs	r0, #0
    dd52:	movs	r1, #0
    dd54:	strd	r0, r1, [sp]
    dd58:	ldr	r0, [sp, #44]	; 0x2c
    dd5a:	bl	1dd84 <read_tree_block@@Base>
    dd5e:	mov	r9, r0
    dd60:	cmp	r0, #0
    dd62:	beq.w	dfa6 <repair_qgroups@@Base+0x1116>
    dd66:	cmn.w	r0, #4096	; 0x1000
    dd6a:	bhi.w	dfa6 <repair_qgroups@@Base+0x1116>
    dd6e:	ldr	r3, [r0, #84]	; 0x54
    dd70:	lsls	r3, r3, #29
    dd72:	bpl.w	dfa6 <repair_qgroups@@Base+0x1116>
    dd76:	ldr	r3, [sp, #72]	; 0x48
    dd78:	add.w	fp, sp, #152	; 0x98
    dd7c:	ldrd	r2, r3, [r3]
    dd80:	strd	r2, r3, [sp, #48]	; 0x30
    dd84:	ldr.w	r3, [r0, #192]	; 0xc0
    dd88:	str	r3, [sp, #56]	; 0x38
    dd8a:	add.w	r3, r0, #197	; 0xc5
    dd8e:	str	r3, [sp, #64]	; 0x40
    dd90:	ldr	r3, [sp, #56]	; 0x38
    dd92:	cmp	r3, sl
    dd94:	bgt.w	dfaa <repair_qgroups@@Base+0x111a>
    dd98:	mov.w	r8, #0
    dd9c:	b.n	e00a <repair_qgroups@@Base+0x117a>
    dd9e:	ldrb.w	r3, [r0, #246]	; 0xf6
    dda2:	movs	r0, #0
    dda4:	adds	r3, #1
    dda6:	cmp	r6, r3
    dda8:	beq.w	df5e <repair_qgroups@@Base+0x10ce>
    ddac:	strb.w	r6, [r4, #65]	; 0x41
    ddb0:	add.w	r2, r5, #16
    ddb4:	mov	r3, r4
    ddb6:	mov	r1, r9
    ddb8:	strd	r0, r0, [sp]
    ddbc:	bl	1a93c <btrfs_search_slot@@Base>
    ddc0:	subs.w	r8, r0, #0
    ddc4:	blt.w	dc00 <repair_qgroups@@Base+0xd70>
    ddc8:	ldr.w	r3, [r4, r6, lsl #2]
    ddcc:	cbz	r3, ddf4 <repair_qgroups@@Base+0xf64>
    ddce:	movs	r3, #0
    ddd0:	str	r3, [sp, #100]	; 0x64
    ddd2:	cbz	r6, de14 <repair_qgroups@@Base+0xf84>
    ddd4:	ldr.w	r2, [r4, r6, lsl #2]
    ddd8:	movs	r0, #0
    ddda:	movs	r1, #0
    dddc:	str	r3, [sp, #8]
    ddde:	strd	r0, r1, [sp]
    dde2:	mov	r0, r7
    dde4:	ldrd	r2, r3, [r2, #40]	; 0x28
    dde8:	bl	b708 <ulist_add@@Base>
    ddec:	and.w	r6, r0, r0, asr #31
    ddf0:	mov	r8, r6
    ddf2:	b.n	dc00 <repair_qgroups@@Base+0xd70>
    ddf4:	cbnz	r6, de10 <repair_qgroups@@Base+0xf80>
    ddf6:	ldr	r1, [pc, #832]	; (e138 <repair_qgroups@@Base+0x12a8>)
    ddf8:	movs	r3, #1
    ddfa:	ldr	r0, [pc, #832]	; (e13c <repair_qgroups@@Base+0x12ac>)
    ddfc:	mov.w	r2, #342	; 0x156
    de00:	add	r1, pc
    de02:	mov.w	r8, #1
    de06:	adds	r1, #125	; 0x7d
    de08:	add	r0, pc
    de0a:	bl	d43c <repair_qgroups@@Base+0x5ac>
    de0e:	b.n	dc00 <repair_qgroups@@Base+0xd70>
    de10:	subs	r6, #1
    de12:	b.n	ddc8 <repair_qgroups@@Base+0xf38>
    de14:	ldrd	r2, r3, [r5, #56]	; 0x38
    de18:	strd	r2, r3, [sp, #80]	; 0x50
    de1c:	ldr	r3, [r4, #0]
    de1e:	ldr	r2, [r4, #32]
    de20:	ldr.w	r3, [r3, #192]	; 0xc0
    de24:	cmp	r2, r3
    de26:	bcc.w	df5a <repair_qgroups@@Base+0x10ca>
    de2a:	strb.w	r6, [r4, #65]	; 0x41
    de2e:	mov	r1, r4
    de30:	ldr.w	r0, [r9, #464]	; 0x1d0
    de34:	bl	1bd70 <btrfs_next_sibling_tree_block@@Base>
    de38:	mov	r8, r0
    de3a:	movs	r3, #0
    de3c:	movs	r2, #0
    de3e:	strd	r2, r3, [sp, #48]	; 0x30
    de42:	add	r3, sp, #152	; 0x98
    de44:	vmov	s16, r3
    de48:	b.n	de8c <repair_qgroups@@Base+0xffc>
    de4a:	add	r3, sp, #100	; 0x64
    de4c:	str	r3, [sp, #8]
    de4e:	ldr	r3, [sp, #72]	; 0x48
    de50:	ldrd	r0, r1, [r3]
    de54:	strd	r0, r1, [sp]
    de58:	mov	r1, sl
    de5a:	vmov	r0, s16
    de5e:	bl	d218 <repair_qgroups@@Base+0x388>
    de62:	subs.w	r8, r0, #0
    de66:	blt.n	df38 <repair_qgroups@@Base+0x10a8>
    de68:	beq.n	df0c <repair_qgroups@@Base+0x107c>
    de6a:	ldr	r2, [r4, #0]
    de6c:	ldr	r3, [r4, #32]
    de6e:	adds	r3, #1
    de70:	str	r3, [r4, #32]
    de72:	ldr.w	r2, [r2, #192]	; 0xc0
    de76:	cmp	r3, r2
    de78:	bcc.n	de94 <repair_qgroups@@Base+0x1004>
    de7a:	movs	r3, #0
    de7c:	mov	r1, r4
    de7e:	strb.w	r3, [r4, #65]	; 0x41
    de82:	ldr.w	r0, [r9, #464]	; 0x1d0
    de86:	bl	1bd70 <btrfs_next_sibling_tree_block@@Base>
    de8a:	mov	r8, r0
    de8c:	cmp.w	r8, #0
    de90:	bne.w	e0ac <repair_qgroups@@Base+0x121c>
    de94:	ldrd	r2, r3, [sp, #48]	; 0x30
    de98:	ldrd	r0, r1, [sp, #56]	; 0x38
    de9c:	cmp	r3, r1
    de9e:	it	eq
    dea0:	cmpeq	r2, r0
    dea2:	bcs.n	ddf0 <repair_qgroups@@Base+0xf60>
    dea4:	ldr.w	sl, [r4]
    dea8:	ldr.w	fp, [r4, #32]
    deac:	vmov	r1, s16
    deb0:	mov	r0, sl
    deb2:	mov	r2, fp
    deb4:	bl	d1b0 <repair_qgroups@@Base+0x320>
    deb8:	ldrd	r0, r1, [sp, #152]	; 0x98
    debc:	ldr	r3, [r5, #20]
    debe:	ldr	r2, [r5, #16]
    dec0:	cmp	r1, r3
    dec2:	it	eq
    dec4:	cmpeq	r0, r2
    dec6:	bne.n	ddf0 <repair_qgroups@@Base+0xf60>
    dec8:	ldrb.w	r3, [sp, #160]	; 0xa0
    decc:	cmp	r3, #108	; 0x6c
    dece:	bne.n	ddf0 <repair_qgroups@@Base+0xf60>
    ded0:	add.w	r3, sl, #96	; 0x60
    ded4:	movs	r2, #25
    ded6:	mla	fp, r2, fp, r3
    deda:	ldr.w	r2, [fp, #118]	; 0x76
    dede:	ldrd	fp, ip, [sp, #80]	; 0x50
    dee2:	adds	r2, #101	; 0x65
    dee4:	add	r3, r2
    dee6:	ldr.w	r0, [r3, #21]!
    deea:	ldr	r1, [r3, #4]
    deec:	cmp	ip, r1
    deee:	it	eq
    def0:	cmpeq	fp, r0
    def2:	bne.n	de6a <repair_qgroups@@Base+0xfda>
    def4:	movs	r3, #0
    def6:	str	r3, [sp, #100]	; 0x64
    def8:	ldr	r3, [sp, #48]	; 0x30
    defa:	adds	r3, #1
    defc:	str	r3, [sp, #48]	; 0x30
    defe:	ldr	r3, [sp, #52]	; 0x34
    df00:	adc.w	r3, r3, #0
    df04:	str	r3, [sp, #52]	; 0x34
    df06:	ldr	r3, [sp, #72]	; 0x48
    df08:	cmp	r3, #0
    df0a:	bne.n	de4a <repair_qgroups@@Base+0xfba>
    df0c:	ldrd	r0, r1, [sl, #40]	; 0x28
    df10:	movs	r2, #0
    df12:	movs	r3, #0
    df14:	strd	r2, r3, [sp, #104]	; 0x68
    df18:	add	r2, sp, #104	; 0x68
    df1a:	str	r2, [sp, #8]
    df1c:	ldr	r2, [sp, #100]	; 0x64
    df1e:	movs	r3, #0
    df20:	str	r3, [sp, #12]
    df22:	strd	r2, r3, [sp]
    df26:	mov	r2, r0
    df28:	mov	r3, r1
    df2a:	mov	r0, r7
    df2c:	bl	b60a <ulist_add_merge@@Base>
    df30:	ldr	r3, [sp, #104]	; 0x68
    df32:	subs.w	r8, r0, #0
    df36:	bge.n	df42 <repair_qgroups@@Base+0x10b2>
    df38:	ldr	r0, [sp, #100]	; 0x64
    df3a:	mov	r6, r8
    df3c:	bl	d134 <repair_qgroups@@Base+0x2a4>
    df40:	b.n	ddf0 <repair_qgroups@@Base+0xf60>
    df42:	bne.n	df54 <repair_qgroups@@Base+0x10c4>
    df44:	ldr	r2, [sp, #72]	; 0x48
    df46:	cbz	r2, df54 <repair_qgroups@@Base+0x10c4>
    df48:	mov	r2, r3
    df4a:	ldr	r3, [r3, #16]
    df4c:	cmp	r3, #0
    df4e:	bne.n	df48 <repair_qgroups@@Base+0x10b8>
    df50:	ldr	r3, [sp, #100]	; 0x64
    df52:	str	r3, [r2, #16]
    df54:	movs	r3, #0
    df56:	str	r3, [sp, #100]	; 0x64
    df58:	b.n	de6a <repair_qgroups@@Base+0xfda>
    df5a:	mov	r8, r6
    df5c:	b.n	de3a <repair_qgroups@@Base+0xfaa>
    df5e:	mov	r8, r0
    df60:	b.n	dc00 <repair_qgroups@@Base+0xd70>
    df62:	movs	r0, #64	; 0x40
    df64:	blx	8870 <malloc@plt+0x4>
    df68:	mov	r3, r0
    df6a:	cbz	r0, dfa0 <repair_qgroups@@Base+0x1110>
    df6c:	mov	r2, r5
    df6e:	mov	lr, r0
    df70:	ldr	r0, [r2, #0]
    df72:	adds	r2, #8
    df74:	ldr.w	r1, [r2, #-4]
    df78:	cmp	r2, r8
    df7a:	mov	ip, lr
    df7c:	stmia.w	ip!, {r0, r1}
    df80:	mov	lr, ip
    df82:	bne.n	df70 <repair_qgroups@@Base+0x10e0>
    df84:	ldrd	r0, r1, [r9]
    df88:	strd	r0, r1, [r3, #48]	; 0x30
    df8c:	add	r1, sp, #172	; 0xac
    df8e:	ldr.w	r2, [r9, #8]
    df92:	str	r2, [r3, #44]	; 0x2c
    df94:	ldr	r2, [sp, #176]	; 0xb0
    df96:	str	r3, [sp, #176]	; 0xb0
    df98:	strd	r1, r2, [r3]
    df9c:	str	r3, [r2, #0]
    df9e:	b.n	dc42 <repair_qgroups@@Base+0xdb2>
    dfa0:	mvn.w	r8, #11
    dfa4:	b.n	dc64 <repair_qgroups@@Base+0xdd4>
    dfa6:	mov	r0, r9
    dfa8:	b.n	db3e <repair_qgroups@@Base+0xcae>
    dfaa:	mov	r2, sl
    dfac:	mov	r1, fp
    dfae:	mov	r0, r9
    dfb0:	bl	d1b0 <repair_qgroups@@Base+0x320>
    dfb4:	ldrb.w	r2, [sp, #160]	; 0xa0
    dfb8:	cmp	r2, #108	; 0x6c
    dfba:	beq.n	dfc2 <repair_qgroups@@Base+0x1132>
    dfbc:	add.w	sl, sl, #1
    dfc0:	b.n	dd90 <repair_qgroups@@Base+0xf00>
    dfc2:	ldr	r3, [sp, #64]	; 0x40
    dfc4:	movs	r2, #25
    dfc6:	add.w	r1, r9, #96	; 0x60
    dfca:	mla	r2, r2, sl, r3
    dfce:	ldr.w	r2, [r2, #17]
    dfd2:	adds	r2, #101	; 0x65
    dfd4:	add	r1, r2
    dfd6:	ldrb	r0, [r1, #20]
    dfd8:	cmp	r0, #0
    dfda:	beq.n	dfbc <repair_qgroups@@Base+0x112c>
    dfdc:	ldr.w	r3, [r1, #21]!
    dfe0:	mov	r7, r3
    dfe2:	ldr	r3, [r1, #4]
    dfe4:	ldrd	r0, r1, [sp, #32]
    dfe8:	cmp	r1, r3
    dfea:	it	eq
    dfec:	cmpeq	r0, r7
    dfee:	bne.n	dfbc <repair_qgroups@@Base+0x112c>
    dff0:	add	r1, sp, #92	; 0x5c
    dff2:	str	r1, [sp, #8]
    dff4:	ldrd	r0, r1, [sp, #48]	; 0x30
    dff8:	strd	r0, r1, [sp]
    dffc:	mov	r1, r9
    dffe:	mov	r0, fp
    e000:	bl	d218 <repair_qgroups@@Base+0x388>
    e004:	subs.w	r8, r0, #0
    e008:	bge.n	dfbc <repair_qgroups@@Base+0x112c>
    e00a:	mov	r0, r9
    e00c:	bl	17320 <free_extent_buffer@@Base>
    e010:	cmp.w	r8, #0
    e014:	bne.w	d788 <repair_qgroups@@Base+0x8f8>
    e018:	ldr	r3, [sp, #92]	; 0x5c
    e01a:	str	r3, [r5, #44]	; 0x2c
    e01c:	ldrd	r0, r1, [r5, #48]	; 0x30
    e020:	movs	r3, #0
    e022:	ldr.w	ip, [r5, #44]	; 0x2c
    e026:	ldr	r2, [sp, #92]	; 0x5c
    e028:	str	r3, [sp, #12]
    e02a:	strd	ip, r3, [sp]
    e02e:	strd	r2, r3, [sp, #152]	; 0x98
    e032:	add	r2, sp, #152	; 0x98
    e034:	mov	r3, r1
    e036:	str	r2, [sp, #8]
    e038:	mov	r2, r0
    e03a:	vmov	r0, s17
    e03e:	bl	b60a <ulist_add_merge@@Base>
    e042:	ldr.w	r9, [sp, #152]	; 0x98
    e046:	str.w	r9, [sp, #92]	; 0x5c
    e04a:	subs.w	r8, r0, #0
    e04e:	blt.w	d788 <repair_qgroups@@Base+0x8f8>
    e052:	bne.n	e080 <repair_qgroups@@Base+0x11f0>
    e054:	ldr	r3, [sp, #72]	; 0x48
    e056:	cbz	r3, e080 <repair_qgroups@@Base+0x11f0>
    e058:	ldr	r1, [pc, #228]	; (e140 <repair_qgroups@@Base+0x12b0>)
    e05a:	clz	r3, r9
    e05e:	ldr	r0, [pc, #228]	; (e144 <repair_qgroups@@Base+0x12b4>)
    e060:	movw	r2, #841	; 0x349
    e064:	add	r1, pc
    e066:	lsrs	r3, r3, #5
    e068:	adds	r1, #29
    e06a:	add	r0, pc
    e06c:	bl	d41c <repair_qgroups@@Base+0x58c>
    e070:	mov	r3, r9
    e072:	ldr.w	r9, [r9, #16]
    e076:	cmp.w	r9, #0
    e07a:	bne.n	e070 <repair_qgroups@@Base+0x11e0>
    e07c:	ldr	r2, [r5, #44]	; 0x2c
    e07e:	str	r2, [r3, #16]
    e080:	movs	r3, #0
    e082:	str	r3, [sp, #92]	; 0x5c
    e084:	ldrd	r2, r3, [r5]
    e088:	mov	r0, r5
    e08a:	str	r3, [r2, #4]
    e08c:	str	r2, [r3, #0]
    e08e:	blx	8620 <free@plt+0x4>
    e092:	b.n	dcca <repair_qgroups@@Base+0xe3a>
    e094:	ldrd	r2, r3, [r0]
    e098:	str	r3, [r2, #4]
    e09a:	str	r2, [r3, #0]
    e09c:	blx	8620 <free@plt+0x4>
    e0a0:	b.w	d790 <repair_qgroups@@Base+0x900>
    e0a4:	mvn.w	r8, #11
    e0a8:	b.w	d7a4 <repair_qgroups@@Base+0x914>
    e0ac:	bgt.w	ddf0 <repair_qgroups@@Base+0xf60>
    e0b0:	b.n	df38 <repair_qgroups@@Base+0x10a8>
    e0b2:	mov	r0, r8
    e0b4:	add	sp, #204	; 0xcc
    e0b6:	vpop	{d8}
    e0ba:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e0be:	nop
    e0c0:	ldrb	r2, [r4, #0]
    e0c2:	movs	r5, r0
    e0c4:	lsls	r0, r5, #8
    e0c6:	movs	r0, r0
    e0c8:	bpl.n	e1b2 <repair_qgroups@@Base+0x1322>
    e0ca:	movs	r2, r0
    e0cc:	bmi.n	e136 <repair_qgroups@@Base+0x12a6>
    e0ce:	movs	r2, r0
    e0d0:	bcc.n	e09c <repair_qgroups@@Base+0x120c>
    e0d2:	movs	r2, r0
    e0d4:	bmi.n	e006 <repair_qgroups@@Base+0x1176>
    e0d6:	movs	r2, r0
    e0d8:	bmi.n	dff6 <repair_qgroups@@Base+0x1166>
    e0da:	movs	r2, r0
    e0dc:	lsrs	r5, r1, #32
    e0de:	movs	r3, r0
    e0e0:	bmi.n	e1d2 <repair_qgroups@@Base+0x1342>
    e0e2:	movs	r2, r0
    e0e4:	lsls	r7, r6, #31
    e0e6:	movs	r3, r0
    e0e8:	bmi.n	e196 <repair_qgroups@@Base+0x1306>
    e0ea:	movs	r2, r0
    e0ec:	bcc.n	e160 <repair_qgroups@@Base+0x12d0>
    e0ee:	movs	r2, r0
    e0f0:	strb	r4, [r2, #23]
    e0f2:	movs	r5, r0
    e0f4:	bcs.n	e116 <repair_qgroups@@Base+0x1286>
    e0f6:	movs	r2, r0
    e0f8:	bne.n	e194 <repair_qgroups@@Base+0x1304>
    e0fa:	movs	r2, r0
    e0fc:	beq.n	e0ca <repair_qgroups@@Base+0x123a>
    e0fe:	movs	r2, r0
    e100:	ldmia	r7, {r1, r2, r3, r5, r6, r7}
    e102:	movs	r2, r0
    e104:	beq.n	e092 <repair_qgroups@@Base+0x1202>
    e106:	movs	r2, r0
    e108:	ldmia	r7, {r0, r1, r3, r4, r6, r7}
    e10a:	movs	r2, r0
    e10c:	beq.n	e06a <repair_qgroups@@Base+0x11da>
    e10e:	movs	r2, r0
    e110:	ldmia	r7, {r4, r6, r7}
    e112:	movs	r2, r0
    e114:	ldmia	r7, {r0, r5, r6, r7}
    e116:	movs	r2, r0
    e118:	ldmia	r6, {r0, r1, r2, r4, r5, r6, r7}
    e11a:	movs	r2, r0
    e11c:	ldmia	r7, {r0, r3, r6, r7}
    e11e:	movs	r2, r0
    e120:	ldmia	r7!, {r0, r2, r3, r4}
    e122:	movs	r2, r0
    e124:	ldmia	r6, {r0, r4, r5, r6, r7}
    e126:	movs	r2, r0
    e128:	ldmia	r6, {r1, r2, r6}
    e12a:	movs	r2, r0
    e12c:	ldmia	r6, {r0, r1, r2, r3, r4, r6}
    e12e:	movs	r2, r0
    e130:	ldmia	r6!, {r0, r3, r4, r5, r7}
    e132:	movs	r2, r0
    e134:	ldmia	r6, {r0, r2, r4, r5, r6}
    e136:	movs	r2, r0
    e138:	ldmia	r5, {r0, r3, r4, r5, r6}
    e13a:	movs	r2, r0
    e13c:	lsls	r5, r6, #3
    e13e:	movs	r3, r0
    e140:	ldmia	r3!, {r0, r2, r4}
    e142:	movs	r2, r0
    e144:	ldmia	r2, {r2, r3, r4, r6, r7}
    e146:	movs	r2, r0
    e148:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e14c:	mov	fp, r2
    e14e:	ldr	r2, [pc, #164]	; (e1f4 <repair_qgroups@@Base+0x1364>)
    e150:	mov	r4, r3
    e152:	ldr	r3, [pc, #164]	; (e1f8 <repair_qgroups@@Base+0x1368>)
    e154:	sub	sp, #28
    e156:	add	r2, pc
    e158:	mov	r7, r0
    e15a:	movs	r0, #0
    e15c:	ldr.w	r9, [sp, #64]	; 0x40
    e160:	ldr	r3, [r2, r3]
    e162:	mov	r8, r1
    e164:	ldr	r3, [r3, #0]
    e166:	str	r3, [sp, #20]
    e168:	mov.w	r3, #0
    e16c:	bl	b5e0 <ulist_alloc@@Base>
    e170:	mov	r5, r0
    e172:	cbz	r0, e186 <repair_qgroups@@Base+0x12f6>
    e174:	movs	r0, #0
    e176:	bl	b5e0 <ulist_alloc@@Base>
    e17a:	str.w	r0, [r9]
    e17e:	cbnz	r0, e18c <repair_qgroups@@Base+0x12fc>
    e180:	mov	r0, r5
    e182:	bl	b5f4 <ulist_free@@Base>
    e186:	mvn.w	r4, #11
    e18a:	b.n	e1c0 <repair_qgroups@@Base+0x1330>
    e18c:	add.w	sl, sp, #16
    e190:	movs	r6, #0
    e192:	str	r6, [sp, #16]
    e194:	str	r6, [sp, #8]
    e196:	mov	r2, fp
    e198:	ldr.w	r3, [r9]
    e19c:	mov	r1, r8
    e19e:	mov	r0, r7
    e1a0:	strd	r5, r3, [sp]
    e1a4:	mov	r3, r4
    e1a6:	bl	d53e <repair_qgroups@@Base+0x6ae>
    e1aa:	subs	r4, r0, #0
    e1ac:	bge.n	e1d4 <repair_qgroups@@Base+0x1344>
    e1ae:	adds	r3, r4, #2
    e1b0:	beq.n	e1d4 <repair_qgroups@@Base+0x1344>
    e1b2:	mov	r0, r5
    e1b4:	bl	b5f4 <ulist_free@@Base>
    e1b8:	ldr.w	r0, [r9]
    e1bc:	bl	b5f4 <ulist_free@@Base>
    e1c0:	ldr	r2, [pc, #56]	; (e1fc <repair_qgroups@@Base+0x136c>)
    e1c2:	ldr	r3, [pc, #52]	; (e1f8 <repair_qgroups@@Base+0x1368>)
    e1c4:	add	r2, pc
    e1c6:	ldr	r3, [r2, r3]
    e1c8:	ldr	r2, [r3, #0]
    e1ca:	ldr	r3, [sp, #20]
    e1cc:	eors	r2, r3
    e1ce:	beq.n	e1ea <repair_qgroups@@Base+0x135a>
    e1d0:	blx	8708 <__stack_chk_fail@plt>
    e1d4:	mov	r1, sl
    e1d6:	mov	r0, r5
    e1d8:	bl	b7e0 <ulist_next@@Base>
    e1dc:	mov	r4, r0
    e1de:	cbz	r0, e1e6 <repair_qgroups@@Base+0x1356>
    e1e0:	ldrd	fp, r4, [r0]
    e1e4:	b.n	e194 <repair_qgroups@@Base+0x1304>
    e1e6:	mov	r0, r5
    e1e8:	b.n	e1bc <repair_qgroups@@Base+0x132c>
    e1ea:	mov	r0, r4
    e1ec:	add	sp, #28
    e1ee:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e1f2:	nop
    e1f4:	ldr	r2, [r5, #64]	; 0x40
    e1f6:	movs	r5, r0
    e1f8:	lsls	r0, r5, #8
    e1fa:	movs	r0, r0
    e1fc:	ldr	r4, [r7, #56]	; 0x38
    e1fe:	movs	r5, r0

0000e200 <btrfs_find_all_roots@@Base>:
    e200:	push	{r4}
    e202:	ldr	r4, [sp, #12]
    e204:	str	r4, [sp, #4]
    e206:	ldr.w	r4, [sp], #4
    e20a:	b.n	e148 <repair_qgroups@@Base+0x12b8>

0000e20c <inode_item_info@@Base>:
    e20c:	ldr.w	ip, [pc, #68]	; e254 <inode_item_info@@Base+0x48>
    e210:	push	{r4, lr}
    e212:	add	ip, pc
    e214:	ldr	r4, [pc, #64]	; (e258 <inode_item_info@@Base+0x4c>)
    e216:	sub	sp, #40	; 0x28
    e218:	ldr.w	r4, [ip, r4]
    e21c:	ldr	r4, [r4, #0]
    e21e:	str	r4, [sp, #36]	; 0x24
    e220:	mov.w	r4, #0
    e224:	strd	r2, r3, [sp]
    e228:	add	r4, sp, #16
    e22a:	mov	r2, r0
    e22c:	mov	r3, r1
    e22e:	str	r4, [sp, #12]
    e230:	ldrd	r0, r1, [sp, #48]	; 0x30
    e234:	movs	r4, #1
    e236:	str	r4, [sp, #8]
    e238:	bl	1be70 <btrfs_find_item@@Base>
    e23c:	ldr	r2, [pc, #28]	; (e25c <inode_item_info@@Base+0x50>)
    e23e:	ldr	r3, [pc, #24]	; (e258 <inode_item_info@@Base+0x4c>)
    e240:	add	r2, pc
    e242:	ldr	r3, [r2, r3]
    e244:	ldr	r2, [r3, #0]
    e246:	ldr	r3, [sp, #36]	; 0x24
    e248:	eors	r2, r3
    e24a:	beq.n	e250 <inode_item_info@@Base+0x44>
    e24c:	blx	8708 <__stack_chk_fail@plt>
    e250:	add	sp, #40	; 0x28
    e252:	pop	{r4, pc}
    e254:	ldr	r6, [r5, #52]	; 0x34
    e256:	movs	r5, r0
    e258:	lsls	r0, r5, #8
    e25a:	movs	r0, r0
    e25c:	ldr	r0, [r0, #52]	; 0x34
    e25e:	movs	r5, r0

0000e260 <btrfs_find_one_extref@@Base>:
    e260:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e264:	mov	r6, r2
    e266:	ldr	r2, [pc, #204]	; (e334 <btrfs_find_one_extref@@Base+0xd4>)
    e268:	mov	r7, r3
    e26a:	ldr	r3, [pc, #204]	; (e338 <btrfs_find_one_extref@@Base+0xd8>)
    e26c:	sub	sp, #60	; 0x3c
    e26e:	add	r2, pc
    e270:	mov.w	sl, #0
    e274:	ldrd	r4, r9, [sp, #104]	; 0x68
    e278:	mov	r1, r0
    e27a:	ldr	r3, [r2, r3]
    e27c:	mov	r8, r0
    e27e:	mov	r0, sl
    e280:	add	r2, sp, #12
    e282:	ldr	r3, [r3, #0]
    e284:	str	r3, [sp, #52]	; 0x34
    e286:	mov.w	r3, #0
    e28a:	movs	r3, #13
    e28c:	strb.w	r3, [sp, #20]
    e290:	ldr	r3, [sp, #96]	; 0x60
    e292:	strd	sl, sl, [sp]
    e296:	ldr	r5, [sp, #112]	; 0x70
    e298:	str.w	r3, [sp, #21]
    e29c:	ldr	r3, [sp, #100]	; 0x64
    e29e:	strd	r6, r7, [sp, #12]
    e2a2:	str.w	r3, [sp, #25]
    e2a6:	mov	r3, r4
    e2a8:	bl	1a93c <btrfs_search_slot@@Base>
    e2ac:	cmp	r0, #0
    e2ae:	blt.n	e2d6 <btrfs_find_one_extref@@Base+0x76>
    e2b0:	ldr.w	fp, [r4]
    e2b4:	ldr	r2, [r4, #32]
    e2b6:	ldr.w	r3, [fp, #192]	; 0xc0
    e2ba:	cmp	r3, r2
    e2bc:	bhi.n	e2ea <btrfs_find_one_extref@@Base+0x8a>
    e2be:	strb.w	sl, [r4, #65]	; 0x41
    e2c2:	mov	r1, r4
    e2c4:	ldr.w	r0, [r8, #464]	; 0x1d0
    e2c8:	bl	1bd70 <btrfs_next_sibling_tree_block@@Base>
    e2cc:	cmp	r0, #0
    e2ce:	beq.n	e2b0 <btrfs_find_one_extref@@Base+0x50>
    e2d0:	ble.n	e2d6 <btrfs_find_one_extref@@Base+0x76>
    e2d2:	mvn.w	r0, #1
    e2d6:	ldr	r2, [pc, #100]	; (e33c <btrfs_find_one_extref@@Base+0xdc>)
    e2d8:	ldr	r3, [pc, #92]	; (e338 <btrfs_find_one_extref@@Base+0xd8>)
    e2da:	add	r2, pc
    e2dc:	ldr	r3, [r2, r3]
    e2de:	ldr	r2, [r3, #0]
    e2e0:	ldr	r3, [sp, #52]	; 0x34
    e2e2:	eors	r2, r3
    e2e4:	beq.n	e32e <btrfs_find_one_extref@@Base+0xce>
    e2e6:	blx	8708 <__stack_chk_fail@plt>
    e2ea:	add	r1, sp, #32
    e2ec:	mov	r0, fp
    e2ee:	bl	d1b0 <repair_qgroups@@Base+0x320>
    e2f2:	ldrd	r2, r3, [sp, #32]
    e2f6:	cmp	r7, r3
    e2f8:	it	eq
    e2fa:	cmpeq	r6, r2
    e2fc:	bne.n	e2d2 <btrfs_find_one_extref@@Base+0x72>
    e2fe:	ldrb.w	r3, [sp, #40]	; 0x28
    e302:	cmp	r3, #13
    e304:	bne.n	e2d2 <btrfs_find_one_extref@@Base+0x72>
    e306:	ldr	r3, [r4, #32]
    e308:	movs	r0, #25
    e30a:	mla	r3, r0, r3, fp
    e30e:	ldr.w	r3, [r3, #214]	; 0xd6
    e312:	adds	r3, #101	; 0x65
    e314:	str.w	r3, [r9]
    e318:	cbz	r5, e32a <btrfs_find_one_extref@@Base+0xca>
    e31a:	ldr.w	r2, [sp, #41]	; 0x29
    e31e:	movs	r0, #0
    e320:	ldr.w	r3, [sp, #45]	; 0x2d
    e324:	strd	r2, r3, [r5]
    e328:	b.n	e2d6 <btrfs_find_one_extref@@Base+0x76>
    e32a:	mov	r0, r5
    e32c:	b.n	e2d6 <btrfs_find_one_extref@@Base+0x76>
    e32e:	add	sp, #60	; 0x3c
    e330:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e334:	ldr	r2, [r2, #48]	; 0x30
    e336:	movs	r5, r0
    e338:	lsls	r0, r5, #8
    e33a:	movs	r0, r0
    e33c:	ldr	r6, [r4, #40]	; 0x28
    e33e:	movs	r5, r0

0000e340 <btrfs_ref_to_path@@Base>:
    e340:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e344:	mov	r7, r0
    e346:	ldr	r0, [pc, #304]	; (e478 <btrfs_ref_to_path@@Base+0x138>)
    e348:	sub	sp, #68	; 0x44
    e34a:	mov	r5, r1
    e34c:	ldr	r1, [pc, #300]	; (e47c <btrfs_ref_to_path@@Base+0x13c>)
    e34e:	add	r0, pc
    e350:	mov	ip, r2
    e352:	mov	r2, r3
    e354:	ldrd	r6, r3, [sp, #120]	; 0x78
    e358:	ldr	r1, [r0, r1]
    e35a:	adds.w	r9, r3, #4294967295	; 0xffffffff
    e35e:	ldr.w	r8, [sp, #104]	; 0x68
    e362:	ldr	r1, [r1, #0]
    e364:	str	r1, [sp, #60]	; 0x3c
    e366:	mov.w	r1, #0
    e36a:	mov	r0, r3
    e36c:	mov.w	r1, #0
    e370:	adc.w	sl, r1, #4294967295	; 0xffffffff
    e374:	orrs	r1, r0
    e376:	mov	r4, r8
    e378:	ittt	ne
    e37a:	addne	r3, r3, r6
    e37c:	movne	r1, #0
    e37e:	strbne.w	r1, [r3, #-1]
    e382:	add	r3, sp, #40	; 0x28
    e384:	str	r3, [sp, #36]	; 0x24
    e386:	subs.w	r0, r9, ip
    e38a:	sbc.w	r1, sl, #0
    e38e:	cmp	r0, #0
    e390:	sbcs.w	r3, r1, #0
    e394:	strd	r0, r1, [sp, #16]
    e398:	blt.n	e3a6 <btrfs_ref_to_path@@Base+0x66>
    e39a:	ldr	r1, [sp, #16]
    e39c:	mov	r3, ip
    e39e:	mov	r0, r4
    e3a0:	adds	r1, r6, r1
    e3a2:	bl	17a1a <read_extent_buffer@@Base>
    e3a6:	cmp	r4, r8
    e3a8:	beq.n	e3b0 <btrfs_ref_to_path@@Base+0x70>
    e3aa:	mov	r0, r4
    e3ac:	bl	17320 <free_extent_buffer@@Base>
    e3b0:	ldr	r3, [sp, #36]	; 0x24
    e3b2:	movs	r4, #0
    e3b4:	mov	r1, r5
    e3b6:	mov	r0, r7
    e3b8:	str	r3, [sp, #12]
    e3ba:	movs	r3, #12
    e3bc:	str	r3, [sp, #8]
    e3be:	movs	r3, #0
    e3c0:	strd	r3, r4, [sp]
    e3c4:	ldrd	r2, r3, [sp, #112]	; 0x70
    e3c8:	bl	1be70 <btrfs_find_item@@Base>
    e3cc:	subs	r4, r0, #0
    e3ce:	bgt.n	e446 <btrfs_ref_to_path@@Base+0x106>
    e3d0:	bne.n	e44a <btrfs_ref_to_path@@Base+0x10a>
    e3d2:	ldr.w	r3, [sp, #49]	; 0x31
    e3d6:	str	r3, [sp, #24]
    e3d8:	ldr.w	r3, [sp, #53]	; 0x35
    e3dc:	str	r3, [sp, #28]
    e3de:	ldrd	r0, r1, [sp, #24]
    e3e2:	ldrd	r2, r3, [sp, #112]	; 0x70
    e3e6:	cmp	r3, r1
    e3e8:	it	eq
    e3ea:	cmpeq	r2, r0
    e3ec:	beq.n	e44a <btrfs_ref_to_path@@Base+0x10a>
    e3ee:	ldr	r4, [r5, #0]
    e3f0:	mov	r0, r5
    e3f2:	ldr.w	fp, [r5, #32]
    e3f6:	cmp	r8, r4
    e3f8:	ittt	ne
    e3fa:	ldrne	r3, [r4, #80]	; 0x50
    e3fc:	addne	r3, #1
    e3fe:	strne	r3, [r4, #80]	; 0x50
    e400:	bl	18558 <btrfs_release_path@@Base>
    e404:	add.w	r1, r4, #96	; 0x60
    e408:	movs	r3, #25
    e40a:	mla	fp, r3, fp, r1
    e40e:	ldr.w	r2, [fp, #118]	; 0x76
    e412:	add.w	r3, r2, #101	; 0x65
    e416:	adds	r2, #111	; 0x6f
    e418:	add	r1, r3
    e41a:	ldr	r3, [sp, #16]
    e41c:	adds.w	r9, r3, #4294967295	; 0xffffffff
    e420:	ldr	r3, [sp, #20]
    e422:	ldrh.w	ip, [r1, #8]
    e426:	adc.w	sl, r3, #4294967295	; 0xffffffff
    e42a:	cmp.w	r9, #0
    e42e:	sbcs.w	r3, sl, #0
    e432:	blt.n	e43c <btrfs_ref_to_path@@Base+0xfc>
    e434:	add.w	r3, r6, r9
    e438:	movs	r1, #47	; 0x2f
    e43a:	strb	r1, [r3, #0]
    e43c:	ldrd	r0, r1, [sp, #24]
    e440:	strd	r0, r1, [sp, #112]	; 0x70
    e444:	b.n	e386 <btrfs_ref_to_path@@Base+0x46>
    e446:	mvn.w	r4, #1
    e44a:	mov	r0, r5
    e44c:	bl	18558 <btrfs_release_path@@Base>
    e450:	cbz	r4, e468 <btrfs_ref_to_path@@Base+0x128>
    e452:	mov	r0, r4
    e454:	ldr	r2, [pc, #40]	; (e480 <btrfs_ref_to_path@@Base+0x140>)
    e456:	ldr	r3, [pc, #36]	; (e47c <btrfs_ref_to_path@@Base+0x13c>)
    e458:	add	r2, pc
    e45a:	ldr	r3, [r2, r3]
    e45c:	ldr	r2, [r3, #0]
    e45e:	ldr	r3, [sp, #60]	; 0x3c
    e460:	eors	r2, r3
    e462:	beq.n	e470 <btrfs_ref_to_path@@Base+0x130>
    e464:	blx	8708 <__stack_chk_fail@plt>
    e468:	ldr	r3, [sp, #16]
    e46a:	add	r3, r6
    e46c:	mov	r0, r3
    e46e:	b.n	e454 <btrfs_ref_to_path@@Base+0x114>
    e470:	add	sp, #68	; 0x44
    e472:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e476:	nop
    e478:	ldr	r2, [r6, #32]
    e47a:	movs	r5, r0
    e47c:	lsls	r0, r5, #8
    e47e:	movs	r0, r0
    e480:	ldr	r0, [r5, #16]
    e482:	movs	r5, r0
    e484:	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
    e488:	sub	sp, #24
    e48a:	mov	r9, r1
    e48c:	mov	r8, r0
    e48e:	ldr	r4, [sp, #52]	; 0x34
    e490:	ldr	r1, [r4, #8]
    e492:	ldr	r6, [r1, #8]
    e494:	add.w	r5, r1, r6, lsl #2
    e498:	ldr	r1, [r1, #0]
    e49a:	adds	r5, #20
    e49c:	strd	r8, r9, [sp, #8]
    e4a0:	cmp	r1, #4
    e4a2:	it	cc
    e4a4:	movcc	r1, #4
    e4a6:	subs	r1, #4
    e4a8:	strd	r5, r1, [sp, #16]
    e4ac:	ldr	r1, [sp, #48]	; 0x30
    e4ae:	str	r1, [sp, #0]
    e4b0:	ldrd	r1, r0, [r4]
    e4b4:	bl	e340 <btrfs_ref_to_path@@Base>
    e4b8:	cmn.w	r0, #4096	; 0x1000
    e4bc:	bhi.n	e4e2 <btrfs_ref_to_path@@Base+0x1a2>
    e4be:	cmp	r5, r0
    e4c0:	ldr	r2, [r4, #8]
    e4c2:	bcs.n	e4e8 <btrfs_ref_to_path@@Base+0x1a8>
    e4c4:	adds	r6, #2
    e4c6:	movs	r3, #0
    e4c8:	add.w	r1, r2, r6, lsl #3
    e4cc:	str.w	r0, [r2, r6, lsl #3]
    e4d0:	subs	r0, r0, r5
    e4d2:	str	r3, [r1, #4]
    e4d4:	ldr	r1, [r4, #8]
    e4d6:	ldr	r2, [r1, #8]
    e4d8:	adds	r2, #1
    e4da:	str	r2, [r1, #8]
    e4dc:	ldr	r2, [r4, #8]
    e4de:	str	r0, [r2, #0]
    e4e0:	mov	r0, r3
    e4e2:	add	sp, #24
    e4e4:	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    e4e8:	ldr	r3, [r2, #12]
    e4ea:	subs	r0, r5, r0
    e4ec:	adds	r3, #1
    e4ee:	str	r3, [r2, #12]
    e4f0:	ldr	r3, [r4, #8]
    e4f2:	ldr	r5, [r3, #4]
    e4f4:	add	r0, r5
    e4f6:	str	r0, [r3, #4]
    e4f8:	ldr	r3, [r4, #8]
    e4fa:	movs	r0, #0
    e4fc:	str	r0, [r3, #0]
    e4fe:	b.n	e4e2 <btrfs_ref_to_path@@Base+0x1a2>

0000e500 <extent_from_logical@@Base>:
    e500:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    e504:	mov	r8, r2
    e506:	ldr	r2, [pc, #380]	; (e684 <extent_from_logical@@Base+0x184>)
    e508:	mov	r9, r3
    e50a:	ldr	r3, [pc, #380]	; (e688 <extent_from_logical@@Base+0x188>)
    e50c:	sub	sp, #40	; 0x28
    e50e:	add	r2, pc
    e510:	mov	r7, r0
    e512:	ldrd	r5, r6, [sp, #72]	; 0x48
    e516:	ldr	r3, [r2, r3]
    e518:	ldr.w	sl, [sp, #80]	; 0x50
    e51c:	ldr	r3, [r3, #0]
    e51e:	str	r3, [sp, #36]	; 0x24
    e520:	mov.w	r3, #0
    e524:	ldr.w	r3, [r0, #308]	; 0x134
    e528:	movs	r0, #0
    e52a:	ldr.w	r1, [r3, #188]	; 0xbc
    e52e:	mov	r3, r0
    e530:	strd	r0, r0, [sp]
    e534:	and.w	r2, r1, #256	; 0x100
    e538:	ldr	r1, [r7, #24]
    e53a:	orrs	r3, r2
    e53c:	mov.w	r2, #4294967295	; 0xffffffff
    e540:	strb.w	r2, [sp, #25]
    e544:	ite	ne
    e546:	movne	r3, #169	; 0xa9
    e548:	moveq	r3, #168	; 0xa8
    e54a:	strb.w	r2, [sp, #26]
    e54e:	strb.w	r3, [sp, #24]
    e552:	mov	r3, r5
    e554:	strb.w	r2, [sp, #27]
    e558:	strb.w	r2, [sp, #28]
    e55c:	strb.w	r2, [sp, #29]
    e560:	strb.w	r2, [sp, #30]
    e564:	strb.w	r2, [sp, #31]
    e568:	strb.w	r2, [sp, #32]
    e56c:	add	r2, sp, #16
    e56e:	strd	r8, r9, [sp, #16]
    e572:	bl	1a93c <btrfs_search_slot@@Base>
    e576:	subs	r4, r0, #0
    e578:	blt.n	e590 <extent_from_logical@@Base+0x90>
    e57a:	ldr	r0, [r7, #24]
    e57c:	movs	r2, #0
    e57e:	movs	r3, #0
    e580:	mov	r1, r5
    e582:	bl	1c098 <btrfs_previous_extent_item@@Base>
    e586:	subs	r4, r0, #0
    e588:	beq.n	e5a4 <extent_from_logical@@Base+0xa4>
    e58a:	ble.n	e590 <extent_from_logical@@Base+0x90>
    e58c:	mvn.w	r4, #1
    e590:	ldr	r2, [pc, #248]	; (e68c <extent_from_logical@@Base+0x18c>)
    e592:	ldr	r3, [pc, #244]	; (e688 <extent_from_logical@@Base+0x188>)
    e594:	add	r2, pc
    e596:	ldr	r3, [r2, r3]
    e598:	ldr	r2, [r3, #0]
    e59a:	ldr	r3, [sp, #36]	; 0x24
    e59c:	eors	r2, r3
    e59e:	beq.n	e67c <extent_from_logical@@Base+0x17c>
    e5a0:	blx	8708 <__stack_chk_fail@plt>
    e5a4:	ldr	r2, [r5, #32]
    e5a6:	mov	r1, r6
    e5a8:	ldr	r0, [r5, #0]
    e5aa:	bl	d1b0 <repair_qgroups@@Base+0x320>
    e5ae:	ldrb	r3, [r6, #8]
    e5b0:	cmp	r3, #169	; 0xa9
    e5b2:	bne.n	e632 <extent_from_logical@@Base+0x132>
    e5b4:	ldr.w	r1, [r7, #384]	; 0x180
    e5b8:	movs	r0, #0
    e5ba:	ldr	r3, [r6, #4]
    e5bc:	ldr	r2, [r6, #0]
    e5be:	cmp	r9, r3
    e5c0:	it	eq
    e5c2:	cmpeq	r8, r2
    e5c4:	bcc.n	e58c <extent_from_logical@@Base+0x8c>
    e5c6:	adds	r1, r2, r1
    e5c8:	str	r1, [sp, #8]
    e5ca:	adcs	r3, r0
    e5cc:	str	r3, [sp, #12]
    e5ce:	ldrd	r2, r3, [sp, #8]
    e5d2:	cmp	r9, r3
    e5d4:	it	eq
    e5d6:	cmpeq	r8, r2
    e5d8:	bcs.n	e58c <extent_from_logical@@Base+0x8c>
    e5da:	ldr	r6, [r5, #0]
    e5dc:	movs	r2, #25
    e5de:	ldr	r3, [r5, #32]
    e5e0:	adds	r6, #96	; 0x60
    e5e2:	ldr	r1, [pc, #172]	; (e690 <extent_from_logical@@Base+0x190>)
    e5e4:	ldr	r0, [pc, #172]	; (e694 <extent_from_logical@@Base+0x194>)
    e5e6:	mla	r3, r2, r3, r6
    e5ea:	add	r1, pc
    e5ec:	adds	r1, #148	; 0x94
    e5ee:	add	r0, pc
    e5f0:	movw	r2, #1178	; 0x49a
    e5f4:	str	r1, [sp, #8]
    e5f6:	add.w	r5, r3, #101	; 0x65
    e5fa:	ldr.w	r3, [r3, #122]	; 0x7a
    e5fe:	cmp	r3, #23
    e600:	ite	hi
    e602:	movhi	r3, #0
    e604:	movls	r3, #1
    e606:	bl	d41c <repair_qgroups@@Base+0x58c>
    e60a:	ldr.w	r3, [r5, #17]
    e60e:	ldr	r1, [sp, #8]
    e610:	add	r6, r3
    e612:	ldr.w	r5, [r6, #117]	; 0x75
    e616:	cmp.w	sl, #0
    e61a:	beq.n	e668 <extent_from_logical@@Base+0x168>
    e61c:	and.w	r2, r5, #2
    e620:	movs	r0, #0
    e622:	mov	r3, r0
    e624:	orrs	r3, r2
    e626:	beq.n	e644 <extent_from_logical@@Base+0x144>
    e628:	movs	r2, #2
    e62a:	movs	r3, #0
    e62c:	strd	r2, r3, [sl]
    e630:	b.n	e590 <extent_from_logical@@Base+0x90>
    e632:	cmp	r3, #168	; 0xa8
    e634:	iteet	ne
    e636:	movne	r1, #0
    e638:	ldreq.w	r1, [r6, #9]
    e63c:	ldreq.w	r0, [r6, #13]
    e640:	movne	r0, r1
    e642:	b.n	e5ba <extent_from_logical@@Base+0xba>
    e644:	and.w	r2, r5, #1
    e648:	mov	r3, r0
    e64a:	orrs	r3, r2
    e64c:	beq.n	e652 <extent_from_logical@@Base+0x152>
    e64e:	movs	r2, #1
    e650:	b.n	e62a <extent_from_logical@@Base+0x12a>
    e652:	ldr	r0, [pc, #68]	; (e698 <extent_from_logical@@Base+0x198>)
    e654:	mov	r2, r1
    e656:	ldr	r1, [pc, #68]	; (e69c <extent_from_logical@@Base+0x19c>)
    e658:	movs	r3, #1
    e65a:	add	r0, pc
    e65c:	str	r3, [sp, #0]
    e65e:	add	r1, pc
    e660:	movw	r3, #1194	; 0x4aa
    e664:	bl	d382 <repair_qgroups@@Base+0x4f2>
    e668:	ldr	r0, [pc, #52]	; (e6a0 <extent_from_logical@@Base+0x1a0>)
    e66a:	movs	r3, #1
    e66c:	movw	r2, #1197	; 0x4ad
    e670:	mvn.w	r4, #4
    e674:	add	r0, pc
    e676:	bl	d43c <repair_qgroups@@Base+0x5ac>
    e67a:	b.n	e590 <extent_from_logical@@Base+0x90>
    e67c:	mov	r0, r4
    e67e:	add	sp, #40	; 0x28
    e680:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    e684:	ldr	r2, [r6, #4]
    e686:	movs	r5, r0
    e688:	lsls	r0, r5, #8
    e68a:	movs	r0, r0
    e68c:	str	r4, [r5, #124]	; 0x7c
    e68e:	movs	r5, r0
    e690:	stmia	r5!, {r0, r1, r2, r3, r7}
    e692:	movs	r2, r0
    e694:	stmia	r4!, {r1, r2, r3, r4, r6}
    e696:	movs	r2, r0
    e698:	strh.w	r0, [r3, #2]
    e69c:	stmia	r3!, {r0, r1, r3, r4, r6, r7}
    e69e:	movs	r2, r0
    e6a0:	strb.w	r0, [r9, #2]

0000e6a4 <tree_backref_for_extent@@Base>:
    e6a4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e6a8:	mov	r5, r3
    e6aa:	ldr	r3, [r0, #0]
    e6ac:	sub	sp, #20
    e6ae:	mov	r4, r0
    e6b0:	adds	r3, #1
    e6b2:	strd	r1, r2, [sp, #8]
    e6b6:	beq.n	e710 <tree_backref_for_extent@@Base+0x6c>
    e6b8:	ldr.w	sl, [pc, #228]	; e7a0 <tree_backref_for_extent@@Base+0xfc>
    e6bc:	ldr.w	fp, [pc, #228]	; e7a4 <tree_backref_for_extent@@Base+0x100>
    e6c0:	add	sl, pc
    e6c2:	add.w	sl, sl, #168	; 0xa8
    e6c6:	add	fp, pc
    e6c8:	ldr	r3, [sp, #8]
    e6ca:	add.w	r6, r3, #96	; 0x60
    e6ce:	ldr	r3, [r4, #0]
    e6d0:	cbz	r3, e718 <tree_backref_for_extent@@Base+0x74>
    e6d2:	ldr	r3, [sp, #56]	; 0x38
    e6d4:	add.w	r9, r5, r3
    e6d8:	ldr	r3, [r4, #0]
    e6da:	add.w	r8, r6, r3
    e6de:	ldrb	r7, [r6, r3]
    e6e0:	cmp	r7, #176	; 0xb0
    e6e2:	bne.n	e760 <tree_backref_for_extent@@Base+0xbc>
    e6e4:	movs	r2, #9
    e6e6:	add	r3, r2
    e6e8:	str	r3, [r4, #0]
    e6ea:	cmp	r9, r3
    e6ec:	bcs.n	e702 <tree_backref_for_extent@@Base+0x5e>
    e6ee:	ldr	r1, [pc, #184]	; (e7a8 <tree_backref_for_extent@@Base+0x104>)
    e6f0:	movs	r3, #1
    e6f2:	ldr	r0, [pc, #184]	; (e7ac <tree_backref_for_extent@@Base+0x108>)
    e6f4:	movw	r2, #1247	; 0x4df
    e6f8:	add	r1, pc
    e6fa:	adds	r1, #168	; 0xa8
    e6fc:	add	r0, pc
    e6fe:	bl	d43c <repair_qgroups@@Base+0x5ac>
    e702:	cmp	r7, #176	; 0xb0
    e704:	ldr	r3, [r4, #0]
    e706:	beq.n	e778 <tree_backref_for_extent@@Base+0xd4>
    e708:	cmp	r7, #182	; 0xb6
    e70a:	beq.n	e778 <tree_backref_for_extent@@Base+0xd4>
    e70c:	cmp	r9, r3
    e70e:	bne.n	e6c8 <tree_backref_for_extent@@Base+0x24>
    e710:	movs	r0, #1
    e712:	add	sp, #20
    e714:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e718:	adds	r2, r6, r5
    e71a:	ldr	r2, [r2, #16]
    e71c:	and.w	r2, r2, #2
    e720:	strd	r2, r3, [sp]
    e724:	ldrd	r2, r3, [sp]
    e728:	orrs	r3, r2
    e72a:	beq.n	e734 <tree_backref_for_extent@@Base+0x90>
    e72c:	ldr	r3, [sp, #12]
    e72e:	ldrb	r3, [r3, #8]
    e730:	cmp	r3, #169	; 0xa9
    e732:	bne.n	e748 <tree_backref_for_extent@@Base+0xa4>
    e734:	add.w	r3, r5, #24
    e738:	ldr	r2, [sp, #56]	; 0x38
    e73a:	str	r3, [r4, #0]
    e73c:	adds	r2, r5, r2
    e73e:	cmp	r3, r2
    e740:	bcc.n	e6d2 <tree_backref_for_extent@@Base+0x2e>
    e742:	mvn.w	r0, #1
    e746:	b.n	e712 <tree_backref_for_extent@@Base+0x6e>
    e748:	cmp	r3, #168	; 0xa8
    e74a:	beq.n	e75a <tree_backref_for_extent@@Base+0xb6>
    e74c:	movs	r3, #1
    e74e:	movw	r2, #1229	; 0x4cd
    e752:	mov	r1, sl
    e754:	mov	r0, fp
    e756:	bl	d43c <repair_qgroups@@Base+0x5ac>
    e75a:	add.w	r3, r5, #42	; 0x2a
    e75e:	b.n	e738 <tree_backref_for_extent@@Base+0x94>
    e760:	cmp	r7, #182	; 0xb6
    e762:	beq.n	e6e4 <tree_backref_for_extent@@Base+0x40>
    e764:	cmp	r7, #184	; 0xb8
    e766:	beq.n	e770 <tree_backref_for_extent@@Base+0xcc>
    e768:	cmp	r7, #178	; 0xb2
    e76a:	beq.n	e774 <tree_backref_for_extent@@Base+0xd0>
    e76c:	bl	d3b8 <repair_qgroups@@Base+0x528>
    e770:	movs	r2, #13
    e772:	b.n	e6e6 <tree_backref_for_extent@@Base+0x42>
    e774:	movs	r2, #29
    e776:	b.n	e6e6 <tree_backref_for_extent@@Base+0x42>
    e778:	ldr.w	r1, [r8, #1]!
    e77c:	add	r5, r6
    e77e:	ldr	r0, [sp, #60]	; 0x3c
    e780:	cmp	r9, r3
    e782:	ldr.w	r2, [r8, #4]
    e786:	str	r1, [r0, #0]
    e788:	str	r2, [r0, #4]
    e78a:	ldr	r2, [sp, #64]	; 0x40
    e78c:	ldrb.w	r1, [r5, #41]	; 0x29
    e790:	strb	r1, [r2, #0]
    e792:	bne.n	e79a <tree_backref_for_extent@@Base+0xf6>
    e794:	mov.w	r3, #4294967295	; 0xffffffff
    e798:	str	r3, [r4, #0]
    e79a:	movs	r0, #0
    e79c:	b.n	e712 <tree_backref_for_extent@@Base+0x6e>
    e79e:	nop
    e7a0:	stmia	r4!, {r0, r3, r4, r5, r7}
    e7a2:	movs	r2, r0
    e7a4:	stmia	r4!, {r0, r2, r7}
    e7a6:	movs	r2, r0
    e7a8:	stmia	r4!, {r0, r7}
    e7aa:	movs	r2, r0
    e7ac:	stmia	r4!, {r1, r4, r5, r6}
    e7ae:	movs	r2, r0

0000e7b0 <iterate_extent_inodes@@Base>:
    e7b0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e7b4:	movs	r5, #0
    e7b6:	vpush	{d8}
    e7ba:	vmov	s16, r0
    e7be:	mov	r0, r5
    e7c0:	sub	sp, #60	; 0x3c
    e7c2:	str	r3, [sp, #16]
    e7c4:	ldr	r3, [sp, #116]	; 0x74
    e7c6:	str	r2, [sp, #36]	; 0x24
    e7c8:	ldr	r2, [pc, #240]	; (e8bc <iterate_extent_inodes@@Base+0x10c>)
    e7ca:	str	r3, [sp, #28]
    e7cc:	ldr	r3, [sp, #120]	; 0x78
    e7ce:	add	r2, pc
    e7d0:	str	r3, [sp, #32]
    e7d2:	ldr	r3, [pc, #236]	; (e8c0 <iterate_extent_inodes@@Base+0x110>)
    e7d4:	ldr	r3, [r2, r3]
    e7d6:	ldr	r3, [r3, #0]
    e7d8:	str	r3, [sp, #52]	; 0x34
    e7da:	mov.w	r3, #0
    e7de:	str	r5, [sp, #40]	; 0x28
    e7e0:	bl	b5e0 <ulist_alloc@@Base>
    e7e4:	mov	r4, r0
    e7e6:	cmp	r0, #0
    e7e8:	beq.n	e8aa <iterate_extent_inodes@@Base+0xfa>
    e7ea:	add	r3, sp, #104	; 0x68
    e7ec:	str	r0, [sp, #0]
    e7ee:	strd	r5, r3, [sp, #4]
    e7f2:	mov	r0, r5
    e7f4:	vmov	r1, s16
    e7f8:	ldr	r2, [sp, #36]	; 0x24
    e7fa:	ldr	r3, [sp, #16]
    e7fc:	bl	d53e <repair_qgroups@@Base+0x6ae>
    e800:	subs.w	r9, r0, #0
    e804:	bge.n	e826 <iterate_extent_inodes@@Base+0x76>
    e806:	cmn.w	r9, #2
    e80a:	beq.n	e826 <iterate_extent_inodes@@Base+0x76>
    e80c:	mov	r0, r4
    e80e:	bl	d144 <repair_qgroups@@Base+0x2b4>
    e812:	ldr	r2, [pc, #176]	; (e8c4 <iterate_extent_inodes@@Base+0x114>)
    e814:	ldr	r3, [pc, #168]	; (e8c0 <iterate_extent_inodes@@Base+0x110>)
    e816:	add	r2, pc
    e818:	ldr	r3, [r2, r3]
    e81a:	ldr	r2, [r3, #0]
    e81c:	ldr	r3, [sp, #52]	; 0x34
    e81e:	eors	r2, r3
    e820:	beq.n	e8b0 <iterate_extent_inodes@@Base+0x100>
    e822:	blx	8708 <__stack_chk_fail@plt>
    e826:	add.w	r8, sp, #44	; 0x2c
    e82a:	add.w	sl, sp, #40	; 0x28
    e82e:	movs	r3, #0
    e830:	str	r3, [sp, #44]	; 0x2c
    e832:	mov	r1, r8
    e834:	mov	r0, r4
    e836:	bl	b7e0 <ulist_next@@Base>
    e83a:	mov	r5, r0
    e83c:	cbnz	r0, e842 <iterate_extent_inodes@@Base+0x92>
    e83e:	mov	r9, r0
    e840:	b.n	e80c <iterate_extent_inodes@@Base+0x5c>
    e842:	str.w	sl, [sp]
    e846:	movs	r0, #0
    e848:	vmov	r1, s16
    e84c:	ldrd	r2, r3, [r5]
    e850:	bl	e148 <repair_qgroups@@Base+0x12b8>
    e854:	cbnz	r0, e8a6 <iterate_extent_inodes@@Base+0xf6>
    e856:	add.w	fp, sp, #48	; 0x30
    e85a:	str	r0, [sp, #48]	; 0x30
    e85c:	ldr	r0, [sp, #40]	; 0x28
    e85e:	mov	r1, fp
    e860:	bl	b7e0 <ulist_next@@Base>
    e864:	cbnz	r0, e876 <iterate_extent_inodes@@Base+0xc6>
    e866:	mov	r9, r0
    e868:	ldr	r0, [sp, #40]	; 0x28
    e86a:	bl	b5f4 <ulist_free@@Base>
    e86e:	cmp.w	r9, #0
    e872:	beq.n	e832 <iterate_extent_inodes@@Base+0x82>
    e874:	b.n	e80c <iterate_extent_inodes@@Base+0x5c>
    e876:	ldrd	r2, r3, [r0]
    e87a:	ldr	r6, [r5, #8]
    e87c:	strd	r2, r3, [sp, #16]
    e880:	cmp	r6, #0
    e882:	beq.n	e85c <iterate_extent_inodes@@Base+0xac>
    e884:	ldr	r3, [sp, #32]
    e886:	ldr	r7, [sp, #28]
    e888:	str	r3, [sp, #8]
    e88a:	ldrd	r2, r3, [sp, #16]
    e88e:	strd	r2, r3, [sp]
    e892:	ldrd	r2, r3, [r6, #8]
    e896:	ldrd	r0, r1, [r6]
    e89a:	blx	r7
    e89c:	mov	r9, r0
    e89e:	cmp	r0, #0
    e8a0:	bne.n	e868 <iterate_extent_inodes@@Base+0xb8>
    e8a2:	ldr	r6, [r6, #16]
    e8a4:	b.n	e880 <iterate_extent_inodes@@Base+0xd0>
    e8a6:	mov	r9, r0
    e8a8:	b.n	e80c <iterate_extent_inodes@@Base+0x5c>
    e8aa:	mvn.w	r9, #11
    e8ae:	b.n	e812 <iterate_extent_inodes@@Base+0x62>
    e8b0:	mov	r0, r9
    e8b2:	add	sp, #60	; 0x3c
    e8b4:	vpop	{d8}
    e8b8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e8bc:	str	r2, [r6, #88]	; 0x58
    e8be:	movs	r5, r0
    e8c0:	lsls	r0, r5, #8
    e8c2:	movs	r0, r0
    e8c4:	str	r2, [r5, #84]	; 0x54
    e8c6:	movs	r5, r0

0000e8c8 <iterate_inodes_from_logical@@Base>:
    e8c8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    e8cc:	mov	r7, r2
    e8ce:	ldr	r2, [pc, #144]	; (e960 <iterate_inodes_from_logical@@Base+0x98>)
    e8d0:	mov	r8, r3
    e8d2:	ldr	r3, [pc, #144]	; (e964 <iterate_inodes_from_logical@@Base+0x9c>)
    e8d4:	sub	sp, #56	; 0x38
    e8d6:	add	r2, pc
    e8d8:	mov	r5, r0
    e8da:	mov	r6, r1
    e8dc:	ldrd	r9, sl, [sp, #88]	; 0x58
    e8e0:	ldr	r3, [r2, r3]
    e8e2:	movs	r2, #0
    e8e4:	ldr	r3, [r3, #0]
    e8e6:	str	r3, [sp, #52]	; 0x34
    e8e8:	mov.w	r3, #0
    e8ec:	movs	r3, #0
    e8ee:	strd	r2, r3, [sp, #24]
    e8f2:	mov	r2, r0
    e8f4:	add	r3, sp, #24
    e8f6:	mov	r0, r7
    e8f8:	str	r3, [sp, #8]
    e8fa:	add	r3, sp, #32
    e8fc:	strd	r8, r3, [sp]
    e900:	mov	r3, r1
    e902:	bl	e500 <extent_from_logical@@Base>
    e906:	mov	r4, r0
    e908:	mov	r0, r8
    e90a:	bl	18558 <btrfs_release_path@@Base>
    e90e:	cmp	r4, #0
    e910:	blt.n	e93c <iterate_inodes_from_logical@@Base+0x74>
    e912:	ldr	r1, [sp, #24]
    e914:	movs	r0, #0
    e916:	mov	r3, r0
    e918:	and.w	r2, r1, #2
    e91c:	orrs	r3, r2
    e91e:	bne.n	e950 <iterate_inodes_from_logical@@Base+0x88>
    e920:	ldrd	r2, r3, [sp, #32]
    e924:	str	r0, [sp, #8]
    e926:	mov	r0, r7
    e928:	subs	r5, r5, r2
    e92a:	strd	r9, sl, [sp, #12]
    e92e:	sbc.w	r6, r6, r3
    e932:	strd	r5, r6, [sp]
    e936:	bl	e7b0 <iterate_extent_inodes@@Base>
    e93a:	mov	r4, r0
    e93c:	ldr	r2, [pc, #40]	; (e968 <iterate_inodes_from_logical@@Base+0xa0>)
    e93e:	ldr	r3, [pc, #36]	; (e964 <iterate_inodes_from_logical@@Base+0x9c>)
    e940:	add	r2, pc
    e942:	ldr	r3, [r2, r3]
    e944:	ldr	r2, [r3, #0]
    e946:	ldr	r3, [sp, #52]	; 0x34
    e948:	eors	r2, r3
    e94a:	beq.n	e956 <iterate_inodes_from_logical@@Base+0x8e>
    e94c:	blx	8708 <__stack_chk_fail@plt>
    e950:	mvn.w	r4, #21
    e954:	b.n	e93c <iterate_inodes_from_logical@@Base+0x74>
    e956:	mov	r0, r4
    e958:	add	sp, #56	; 0x38
    e95a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    e95e:	nop
    e960:	str	r2, [r5, #72]	; 0x48
    e962:	movs	r5, r0
    e964:	lsls	r0, r5, #8
    e966:	movs	r0, r0
    e968:	str	r0, [r0, #68]	; 0x44
    e96a:	movs	r5, r0

0000e96c <paths_from_inode@@Base>:
    e96c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e970:	mov.w	r8, #0
    e974:	vpush	{d8-d9}
    e978:	mov.w	r9, #0
    e97c:	ldr	r3, [pc, #552]	; (eba8 <paths_from_inode@@Base+0x23c>)
    e97e:	vmov	s17, r0
    e982:	sub	sp, #84	; 0x54
    e984:	vmov	s18, r1
    e988:	str	r2, [sp, #24]
    e98a:	ldr	r2, [pc, #544]	; (ebac <paths_from_inode@@Base+0x240>)
    e98c:	add	r2, pc
    e98e:	ldr	r3, [r2, r3]
    e990:	ldr	r3, [r3, #0]
    e992:	str	r3, [sp, #76]	; 0x4c
    e994:	mov.w	r3, #0
    e998:	ldr	r3, [sp, #24]
    e99a:	ldr	r3, [r3, #4]
    e99c:	vmov	s16, r3
    e9a0:	ldr	r3, [sp, #24]
    e9a2:	ldr	r4, [r3, #0]
    e9a4:	movs	r3, #0
    e9a6:	str	r3, [sp, #28]
    e9a8:	add	r3, sp, #56	; 0x38
    e9aa:	str	r3, [sp, #40]	; 0x28
    e9ac:	ldr	r3, [sp, #40]	; 0x28
    e9ae:	mov	r1, r4
    e9b0:	vmov	r2, s17
    e9b4:	vmov	r0, s16
    e9b8:	str	r3, [sp, #12]
    e9ba:	movs	r3, #12
    e9bc:	strd	r8, r9, [sp]
    e9c0:	str	r3, [sp, #8]
    e9c2:	vmov	r3, s18
    e9c6:	bl	1be70 <btrfs_find_item@@Base>
    e9ca:	subs	r6, r0, #0
    e9cc:	blt.w	eb04 <paths_from_inode@@Base+0x198>
    e9d0:	ldr	r3, [sp, #28]
    e9d2:	beq.n	ea70 <paths_from_inode@@Base+0x104>
    e9d4:	cmp	r3, #0
    e9d6:	ite	ne
    e9d8:	movne.w	fp, #0
    e9dc:	mvneq.w	fp, #1
    e9e0:	mov	r0, r4
    e9e2:	bl	18558 <btrfs_release_path@@Base>
    e9e6:	cmp.w	fp, #0
    e9ea:	beq.w	eb0e <paths_from_inode@@Base+0x1a2>
    e9ee:	cmn.w	fp, #2
    e9f2:	bne.n	ea5a <paths_from_inode@@Base+0xee>
    e9f4:	mov.w	r9, #0
    e9f8:	mov.w	r8, #0
    e9fc:	movs	r3, #0
    e9fe:	movs	r2, #0
    ea00:	strd	r2, r3, [sp, #56]	; 0x38
    ea04:	add	r3, sp, #56	; 0x38
    ea06:	str	r3, [sp, #32]
    ea08:	add	r3, sp, #52	; 0x34
    ea0a:	str	r3, [sp, #36]	; 0x24
    ea0c:	ldr	r3, [sp, #32]
    ea0e:	vmov	r0, s16
    ea12:	str	r3, [sp, #16]
    ea14:	ldr	r3, [sp, #36]	; 0x24
    ea16:	strd	r4, r3, [sp, #8]
    ea1a:	ldrd	r2, r3, [sp, #56]	; 0x38
    ea1e:	strd	r2, r3, [sp]
    ea22:	vmov	r2, s17
    ea26:	vmov	r3, s18
    ea2a:	bl	e260 <btrfs_find_one_extref@@Base>
    ea2e:	subs.w	fp, r0, #0
    ea32:	blt.n	ea44 <paths_from_inode@@Base+0xd8>
    ea34:	beq.n	eb14 <paths_from_inode@@Base+0x1a8>
    ea36:	cmp.w	r8, #0
    ea3a:	ite	ne
    ea3c:	movne.w	fp, #0
    ea40:	mvneq.w	fp, #1
    ea44:	mov	r0, r4
    ea46:	bl	18558 <btrfs_release_path@@Base>
    ea4a:	cmn.w	fp, #2
    ea4e:	bne.n	ea5a <paths_from_inode@@Base+0xee>
    ea50:	cmp.w	r9, #0
    ea54:	it	ne
    ea56:	movne.w	fp, #0
    ea5a:	ldr	r2, [pc, #340]	; (ebb0 <paths_from_inode@@Base+0x244>)
    ea5c:	ldr	r3, [pc, #328]	; (eba8 <paths_from_inode@@Base+0x23c>)
    ea5e:	add	r2, pc
    ea60:	ldr	r3, [r2, r3]
    ea62:	ldr	r2, [r3, #0]
    ea64:	ldr	r3, [sp, #76]	; 0x4c
    ea66:	eors	r2, r3
    ea68:	beq.w	eb9a <paths_from_inode@@Base+0x22e>
    ea6c:	blx	8708 <__stack_chk_fail@plt>
    ea70:	ldr	r0, [r4, #0]
    ea72:	adds	r3, #1
    ea74:	ldr.w	r8, [sp, #65]	; 0x41
    ea78:	ldr.w	r9, [sp, #69]	; 0x45
    ea7c:	ldr	r7, [r4, #32]
    ea7e:	str	r3, [sp, #28]
    ea80:	bl	17a58 <btrfs_clone_extent_buffer@@Base>
    ea84:	mov	r5, r0
    ea86:	cmp	r0, #0
    ea88:	beq.n	eb08 <paths_from_inode@@Base+0x19c>
    ea8a:	ldr	r3, [r0, #80]	; 0x50
    ea8c:	mov	sl, r6
    ea8e:	adds	r3, #1
    ea90:	str	r3, [r0, #80]	; 0x50
    ea92:	mov	r0, r4
    ea94:	bl	18558 <btrfs_release_path@@Base>
    ea98:	add.w	r3, r5, #96	; 0x60
    ea9c:	movs	r2, #25
    ea9e:	str	r3, [sp, #32]
    eaa0:	mla	r7, r2, r7, r3
    eaa4:	add.w	r3, r7, #101	; 0x65
    eaa8:	str	r3, [sp, #36]	; 0x24
    eaaa:	ldr.w	r7, [r7, #118]	; 0x76
    eaae:	adds	r7, #101	; 0x65
    eab0:	ldr	r3, [sp, #36]	; 0x24
    eab2:	ldr.w	r3, [r3, #21]
    eab6:	cmp	sl, r3
    eab8:	bcc.n	eada <paths_from_inode@@Base+0x16e>
    eaba:	mov	fp, r6
    eabc:	mov	r0, r5
    eabe:	bl	17320 <free_extent_buffer@@Base>
    eac2:	cmp.w	fp, #0
    eac6:	bne.n	e9e0 <paths_from_inode@@Base+0x74>
    eac8:	orrs.w	r3, r8, r9
    eacc:	beq.w	e9ac <paths_from_inode@@Base+0x40>
    ead0:	adds.w	r8, r8, #1
    ead4:	adc.w	r9, r9, #0
    ead8:	b.n	e9ac <paths_from_inode@@Base+0x40>
    eada:	ldr	r3, [sp, #32]
    eadc:	mov	r0, r8
    eade:	mov	r1, r9
    eae0:	add	r3, r7
    eae2:	ldrh	r2, [r3, #8]
    eae4:	ldr	r3, [sp, #24]
    eae6:	str	r2, [sp, #44]	; 0x2c
    eae8:	strd	r5, r3, [sp]
    eaec:	add.w	r3, r7, #10
    eaf0:	bl	e484 <btrfs_ref_to_path@@Base+0x144>
    eaf4:	mov	fp, r0
    eaf6:	cmp	r0, #0
    eaf8:	bne.n	eabc <paths_from_inode@@Base+0x150>
    eafa:	ldr	r2, [sp, #44]	; 0x2c
    eafc:	adds	r2, #10
    eafe:	add	r7, r2
    eb00:	add	sl, r2
    eb02:	b.n	eab0 <paths_from_inode@@Base+0x144>
    eb04:	mov	fp, r6
    eb06:	b.n	e9e0 <paths_from_inode@@Base+0x74>
    eb08:	mvn.w	fp, #11
    eb0c:	b.n	e9e0 <paths_from_inode@@Base+0x74>
    eb0e:	mov.w	r9, #1
    eb12:	b.n	e9f8 <paths_from_inode@@Base+0x8c>
    eb14:	ldr	r0, [r4, #0]
    eb16:	add.w	r8, r8, #1
    eb1a:	ldr	r5, [r4, #32]
    eb1c:	bl	17a58 <btrfs_clone_extent_buffer@@Base>
    eb20:	mov	r6, r0
    eb22:	cmp	r0, #0
    eb24:	beq.n	eb94 <paths_from_inode@@Base+0x228>
    eb26:	ldr	r2, [r0, #80]	; 0x50
    eb28:	adds	r2, #1
    eb2a:	str	r2, [r0, #80]	; 0x50
    eb2c:	mov	r0, r4
    eb2e:	bl	18558 <btrfs_release_path@@Base>
    eb32:	ldr	r7, [r4, #0]
    eb34:	movs	r3, #25
    eb36:	adds	r7, #96	; 0x60
    eb38:	mla	sl, r3, r5, r7
    eb3c:	ldr.w	r3, [sl, #118]	; 0x76
    eb40:	ldr.w	r5, [sl, #122]	; 0x7a
    eb44:	add.w	sl, r6, #96	; 0x60
    eb48:	adds	r3, #101	; 0x65
    eb4a:	str	r3, [sp, #28]
    eb4c:	cmp	r5, fp
    eb4e:	bls.n	eb72 <paths_from_inode@@Base+0x206>
    eb50:	ldr	r3, [sp, #28]
    eb52:	ldr	r2, [sp, #24]
    eb54:	add	r3, fp
    eb56:	str	r3, [sp, #52]	; 0x34
    eb58:	add.w	r1, sl, r3
    eb5c:	adds	r3, #18
    eb5e:	ldrh.w	ip, [r1, #16]
    eb62:	ldr	r0, [r1, #0]
    eb64:	ldr	r1, [r1, #4]
    eb66:	strd	r6, r2, [sp]
    eb6a:	mov	r2, ip
    eb6c:	bl	e484 <btrfs_ref_to_path@@Base+0x144>
    eb70:	cbz	r0, eb88 <paths_from_inode@@Base+0x21c>
    eb72:	mov	r0, r6
    eb74:	bl	17320 <free_extent_buffer@@Base>
    eb78:	ldr	r3, [sp, #56]	; 0x38
    eb7a:	ldr	r2, [sp, #60]	; 0x3c
    eb7c:	adds	r3, #1
    eb7e:	adc.w	r2, r2, #0
    eb82:	strd	r3, r2, [sp, #56]	; 0x38
    eb86:	b.n	ea0c <paths_from_inode@@Base+0xa0>
    eb88:	ldr	r3, [sp, #52]	; 0x34
    eb8a:	add	r3, r7
    eb8c:	ldrh	r3, [r3, #16]
    eb8e:	adds	r3, #18
    eb90:	add	fp, r3
    eb92:	b.n	eb4c <paths_from_inode@@Base+0x1e0>
    eb94:	mvn.w	fp, #11
    eb98:	b.n	ea44 <paths_from_inode@@Base+0xd8>
    eb9a:	mov	r0, fp
    eb9c:	add	sp, #84	; 0x54
    eb9e:	vpop	{d8-d9}
    eba2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    eba6:	nop
    eba8:	lsls	r0, r5, #8
    ebaa:	movs	r0, r0
    ebac:	str	r4, [r6, #60]	; 0x3c
    ebae:	movs	r5, r0
    ebb0:	str	r2, [r4, #48]	; 0x30
    ebb2:	movs	r5, r0

0000ebb4 <init_data_container@@Base>:
    ebb4:	cmp	r0, #16
    ebb6:	push	{r4, lr}
    ebb8:	mov	r4, r0
    ebba:	it	cc
    ebbc:	movcc	r0, #16
    ebbe:	blx	8870 <malloc@plt+0x4>
    ebc2:	cbz	r0, ebe2 <init_data_container@@Base+0x2e>
    ebc4:	cmp	r4, #15
    ebc6:	mov.w	r3, #0
    ebca:	itete	hi
    ebcc:	subhi	r4, #16
    ebce:	rsbls	r4, r4, #16
    ebd2:	strdhi	r4, r3, [r0]
    ebd6:	strdls	r3, r4, [r0]
    ebda:	movs	r3, #0
    ebdc:	strd	r3, r3, [r0, #8]
    ebe0:	pop	{r4, pc}
    ebe2:	mvn.w	r0, #11
    ebe6:	b.n	ebe0 <init_data_container@@Base+0x2c>

0000ebe8 <init_ipath@@Base>:
    ebe8:	push	{r4, r5, r6, lr}
    ebea:	mov	r5, r1
    ebec:	mov	r6, r2
    ebee:	bl	ebb4 <init_data_container@@Base>
    ebf2:	cmn.w	r0, #4096	; 0x1000
    ebf6:	mov	r4, r0
    ebf8:	bhi.n	ec0c <init_ipath@@Base+0x24>
    ebfa:	movs	r0, #12
    ebfc:	blx	8870 <malloc@plt+0x4>
    ec00:	cbnz	r0, ec10 <init_ipath@@Base+0x28>
    ec02:	mov	r0, r4
    ec04:	mvn.w	r4, #11
    ec08:	blx	8620 <free@plt+0x4>
    ec0c:	mov	r0, r4
    ec0e:	pop	{r4, r5, r6, pc}
    ec10:	strd	r5, r4, [r0, #4]
    ec14:	mov	r4, r0
    ec16:	str	r6, [r0, #0]
    ec18:	b.n	ec0c <init_ipath@@Base+0x24>

0000ec1a <free_ipath@@Base>:
    ec1a:	push	{r4, lr}
    ec1c:	mov	r4, r0
    ec1e:	cbz	r0, ec30 <free_ipath@@Base+0x16>
    ec20:	ldr	r0, [r0, #8]
    ec22:	blx	8620 <free@plt+0x4>
    ec26:	mov	r0, r4
    ec28:	ldmia.w	sp!, {r4, lr}
    ec2c:	b.w	861c <free@plt>
    ec30:	pop	{r4, pc}
    ec32:	nop

0000ec34 <table_create@@Base>:
    ec34:	push	{r3, r4, r5, lr}
    ec36:	mov	r4, r1
    ec38:	muls	r1, r0
    ec3a:	mov	r5, r0
    ec3c:	movs	r0, #1
    ec3e:	adds	r1, #2
    ec40:	lsls	r1, r1, #2
    ec42:	blx	8588 <calloc@plt+0x4>
    ec46:	cbz	r0, ec4c <table_create@@Base+0x18>
    ec48:	strd	r5, r4, [r0]
    ec4c:	pop	{r3, r4, r5, pc}

0000ec4e <table_vprintf@@Base>:
    ec4e:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    ec50:	mov	r4, r0
    ec52:	ldr	r7, [r0, #0]
    ec54:	movs	r0, #100	; 0x64
    ec56:	mov	r6, r3
    ec58:	mla	r7, r7, r2, r1
    ec5c:	movs	r1, #1
    ec5e:	blx	8588 <calloc@plt+0x4>
    ec62:	mov	r5, r0
    ec64:	cbz	r0, ec86 <table_vprintf@@Base+0x38>
    ec66:	add.w	r4, r4, r7, lsl #2
    ec6a:	ldr	r0, [r4, #8]
    ec6c:	cbz	r0, ec72 <table_vprintf@@Base+0x24>
    ec6e:	blx	8620 <free@plt+0x4>
    ec72:	ldr	r3, [sp, #32]
    ec74:	movs	r2, #1
    ec76:	str	r5, [r4, #8]
    ec78:	movs	r1, #99	; 0x63
    ec7a:	mov	r0, r5
    ec7c:	strd	r6, r3, [sp]
    ec80:	movs	r3, #100	; 0x64
    ec82:	blx	865c <__vsnprintf_chk@plt>
    ec86:	mov	r0, r5
    ec88:	add	sp, #12
    ec8a:	pop	{r4, r5, r6, r7, pc}

0000ec8c <table_printf@@Base>:
    ec8c:	push	{r3}
    ec8e:	push	{r4, lr}
    ec90:	sub	sp, #20
    ec92:	ldr.w	lr, [pc, #68]	; ecd8 <table_printf@@Base+0x4c>
    ec96:	add	r4, sp, #28
    ec98:	ldr.w	ip, [pc, #64]	; ecdc <table_printf@@Base+0x50>
    ec9c:	add	lr, pc
    ec9e:	ldr.w	r3, [r4], #4
    eca2:	ldr.w	ip, [lr, ip]
    eca6:	ldr.w	ip, [ip]
    ecaa:	str.w	ip, [sp, #12]
    ecae:	mov.w	ip, #0
    ecb2:	str	r4, [sp, #0]
    ecb4:	str	r4, [sp, #8]
    ecb6:	bl	ec4e <table_vprintf@@Base>
    ecba:	ldr	r2, [pc, #36]	; (ece0 <table_printf@@Base+0x54>)
    ecbc:	ldr	r3, [pc, #28]	; (ecdc <table_printf@@Base+0x50>)
    ecbe:	add	r2, pc
    ecc0:	ldr	r3, [r2, r3]
    ecc2:	ldr	r2, [r3, #0]
    ecc4:	ldr	r3, [sp, #12]
    ecc6:	eors	r2, r3
    ecc8:	beq.n	ecce <table_printf@@Base+0x42>
    ecca:	blx	8708 <__stack_chk_fail@plt>
    ecce:	add	sp, #20
    ecd0:	ldmia.w	sp!, {r4, lr}
    ecd4:	add	sp, #4
    ecd6:	bx	lr
    ecd8:	str	r4, [r4, #12]
    ecda:	movs	r5, r0
    ecdc:	lsls	r0, r5, #8
    ecde:	movs	r0, r0
    ece0:	str	r2, [r0, #12]
    ece2:	movs	r5, r0

0000ece4 <table_dump@@Base>:
    ece4:	ldr	r2, [pc, #296]	; (ee10 <table_dump@@Base+0x12c>)
    ece6:	ldr	r3, [pc, #300]	; (ee14 <table_dump@@Base+0x130>)
    ece8:	add	r2, pc
    ecea:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ecee:	sub	sp, #28
    ecf0:	ldr	r3, [r2, r3]
    ecf2:	add	r7, sp, #0
    ecf4:	movs	r5, #0
    ecf6:	mov	r4, r0
    ecf8:	ldr	r3, [r3, #0]
    ecfa:	str	r3, [r7, #20]
    ecfc:	mov.w	r3, #0
    ed00:	ldr	r3, [r0, #0]
    ed02:	mov	lr, r5
    ed04:	lsls	r2, r3, #2
    ed06:	adds	r1, r2, #7
    ed08:	bic.w	r1, r1, #7
    ed0c:	sub.w	sp, sp, r1
    ed10:	ldr	r1, [r0, #4]
    ed12:	mov	fp, sp
    ed14:	sub.w	r6, fp, #4
    ed18:	str	r1, [r7, #12]
    ed1a:	cmp	r5, r3
    ed1c:	blt.n	ed46 <table_dump@@Base+0x62>
    ed1e:	ldr.w	r8, [pc, #248]	; ee18 <table_dump@@Base+0x134>
    ed22:	movs	r6, #0
    ed24:	ldr.w	r9, [pc, #244]	; ee1c <table_dump@@Base+0x138>
    ed28:	add	r8, pc
    ed2a:	add	r9, pc
    ed2c:	ldr	r3, [r4, #4]
    ed2e:	cmp	r6, r3
    ed30:	blt.n	edfe <table_dump@@Base+0x11a>
    ed32:	ldr	r2, [pc, #236]	; (ee20 <table_dump@@Base+0x13c>)
    ed34:	ldr	r3, [pc, #220]	; (ee14 <table_dump@@Base+0x130>)
    ed36:	add	r2, pc
    ed38:	ldr	r3, [r2, r3]
    ed3a:	ldr	r2, [r3, #0]
    ed3c:	ldr	r3, [r7, #20]
    ed3e:	eors	r2, r3
    ed40:	beq.n	ee08 <table_dump@@Base+0x124>
    ed42:	blx	8708 <__stack_chk_fail@plt>
    ed46:	add.w	r9, r4, r5, lsl #2
    ed4a:	mov.w	r8, #0
    ed4e:	str.w	lr, [r6, #4]!
    ed52:	ldr	r1, [r7, #12]
    ed54:	cmp	r8, r1
    ed56:	blt.n	ed5c <table_dump@@Base+0x78>
    ed58:	adds	r5, #1
    ed5a:	b.n	ed1a <table_dump@@Base+0x36>
    ed5c:	ldr.w	sl, [r9, #8]
    ed60:	cmp.w	sl, #0
    ed64:	beq.n	ed8e <table_dump@@Base+0xaa>
    ed66:	mov	r0, sl
    ed68:	strd	r2, r3, [r7, #4]
    ed6c:	blx	8940 <strlen@plt>
    ed70:	ldrd	r2, r3, [r7, #4]
    ed74:	mov.w	lr, #0
    ed78:	subs	r0, #1
    ed7a:	beq.n	ed8e <table_dump@@Base+0xaa>
    ed7c:	ldrb.w	ip, [sl]
    ed80:	cmp.w	ip, #42	; 0x2a
    ed84:	beq.n	ed8e <table_dump@@Base+0xaa>
    ed86:	ldr	r1, [r6, #0]
    ed88:	cmp	r1, r0
    ed8a:	it	lt
    ed8c:	strlt	r0, [r6, #0]
    ed8e:	add.w	r8, r8, #1
    ed92:	add	r9, r2
    ed94:	b.n	ed52 <table_dump@@Base+0x6e>
    ed96:	mla	r3, r3, r6, r5
    ed9a:	ldr.w	r2, [fp, r5, lsl #2]
    ed9e:	adds	r3, #2
    eda0:	ldr.w	r3, [r4, r3, lsl #2]
    eda4:	cbz	r3, edaa <table_dump@@Base+0xc6>
    eda6:	ldrb	r1, [r3, #0]
    eda8:	cbnz	r1, edb6 <table_dump@@Base+0xd2>
    edaa:	mov	r3, r8
    edac:	mov	r1, r9
    edae:	movs	r0, #1
    edb0:	blx	8a30 <__printf_chk@plt+0x4>
    edb4:	b.n	edc2 <table_dump@@Base+0xde>
    edb6:	cmp	r1, #42	; 0x2a
    edb8:	bne.n	edf2 <table_dump@@Base+0x10e>
    edba:	ldrb	r1, [r3, #1]
    edbc:	cbz	r1, edf8 <table_dump@@Base+0x114>
    edbe:	subs	r2, #1
    edc0:	bcs.n	ede2 <table_dump@@Base+0xfe>
    edc2:	ldr	r3, [r4, #0]
    edc4:	subs	r3, #1
    edc6:	cmp	r5, r3
    edc8:	beq.n	edd0 <table_dump@@Base+0xec>
    edca:	movs	r0, #32
    edcc:	blx	89cc <putchar@plt+0x4>
    edd0:	adds	r5, #1
    edd2:	ldr	r3, [r4, #0]
    edd4:	cmp	r5, r3
    edd6:	blt.n	ed96 <table_dump@@Base+0xb2>
    edd8:	movs	r0, #10
    edda:	adds	r6, #1
    eddc:	blx	89cc <putchar@plt+0x4>
    ede0:	b.n	ed2c <table_dump@@Base+0x48>
    ede2:	ldrb	r0, [r3, #1]
    ede4:	str	r2, [r7, #8]
    ede6:	str	r3, [r7, #12]
    ede8:	blx	89cc <putchar@plt+0x4>
    edec:	ldrd	r2, r3, [r7, #8]
    edf0:	b.n	edbe <table_dump@@Base+0xda>
    edf2:	cmp	r1, #60	; 0x3c
    edf4:	it	eq
    edf6:	negeq	r2, r2
    edf8:	adds	r3, #1
    edfa:	mov	r1, sl
    edfc:	b.n	edae <table_dump@@Base+0xca>
    edfe:	ldr.w	sl, [pc, #36]	; ee24 <table_dump@@Base+0x140>
    ee02:	movs	r5, #0
    ee04:	add	sl, pc
    ee06:	b.n	edd2 <table_dump@@Base+0xee>
    ee08:	adds	r7, #28
    ee0a:	mov	sp, r7
    ee0c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ee10:	str	r0, [r3, #8]
    ee12:	movs	r5, r0
    ee14:	lsls	r0, r5, #8
    ee16:	movs	r0, r0
    ee18:			; <UNDEFINED> instruction: 0xb8e5
    ee1a:	movs	r2, r0
    ee1c:	sxtb	r1, r1
    ee1e:	movs	r2, r0
    ee20:	str	r2, [r1, #4]
    ee22:	movs	r5, r0
    ee24:	cbz	r7, ee42 <table_free@@Base+0x1a>
    ee26:	movs	r2, r0

0000ee28 <table_free@@Base>:
    ee28:	push	{r3, r4, r5, r6, r7, lr}
    ee2a:	add.w	r7, r0, #8
    ee2e:	ldrd	r5, r3, [r0]
    ee32:	mov	r4, r0
    ee34:	movs	r6, #0
    ee36:	muls	r5, r3
    ee38:	cmp	r6, r5
    ee3a:	blt.n	ee46 <table_free@@Base+0x1e>
    ee3c:	mov	r0, r4
    ee3e:	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    ee42:	b.w	861c <free@plt>
    ee46:	ldr.w	r0, [r7], #4
    ee4a:	cbz	r0, ee50 <table_free@@Base+0x28>
    ee4c:	blx	8620 <free@plt+0x4>
    ee50:	adds	r6, #1
    ee52:	b.n	ee38 <table_free@@Base+0x10>

0000ee54 <task_init@@Base>:
    ee54:	push	{r4, r5, r6, lr}
    ee56:	mov	r5, r0
    ee58:	mov	r4, r1
    ee5a:	movs	r0, #1
    ee5c:	movs	r1, #32
    ee5e:	mov	r6, r2
    ee60:	blx	8588 <calloc@plt+0x4>
    ee64:	cbz	r0, ee6c <task_init@@Base+0x18>
    ee66:	strd	r6, r5, [r0, #20]
    ee6a:	str	r4, [r0, #28]
    ee6c:	pop	{r4, r5, r6, pc}

0000ee6e <task_start@@Base>:
    ee6e:	push	{r4, r5, r6, lr}
    ee70:	mov	r6, r1
    ee72:	mov	r5, r2
    ee74:	mov	r4, r0
    ee76:	cbz	r0, eea6 <task_start@@Base+0x38>
    ee78:	ldr	r3, [r0, #24]
    ee7a:	cbz	r3, eea6 <task_start@@Base+0x38>
    ee7c:	cbz	r1, ee86 <task_start@@Base+0x18>
    ee7e:	movs	r0, #0
    ee80:	blx	8684 <time@plt>
    ee84:	str	r0, [r6, #0]
    ee86:	cbz	r5, ee90 <task_start@@Base+0x22>
    ee88:	movs	r2, #0
    ee8a:	movs	r3, #0
    ee8c:	strd	r2, r3, [r5]
    ee90:	ldrd	r3, r2, [r4, #20]
    ee94:	add.w	r0, r4, #16
    ee98:	movs	r1, #0
    ee9a:	blx	8814 <pthread_create@plt>
    ee9e:	cbz	r0, eea4 <task_start@@Base+0x36>
    eea0:	movs	r3, #0
    eea2:	str	r3, [r4, #16]
    eea4:	pop	{r4, r5, r6, pc}
    eea6:	mov.w	r0, #4294967295	; 0xffffffff
    eeaa:	b.n	eea4 <task_start@@Base+0x36>

0000eeac <task_stop@@Base>:
    eeac:	push	{r4, lr}
    eeae:	mov	r4, r0
    eeb0:	cbz	r0, eede <task_stop@@Base+0x32>
    eeb2:	ldr	r0, [r0, #16]
    eeb4:	cbz	r0, eec6 <task_stop@@Base+0x1a>
    eeb6:	blx	89e4 <pthread_cancel@plt>
    eeba:	ldr	r0, [r4, #16]
    eebc:	movs	r1, #0
    eebe:	blx	8ab8 <pthread_join@plt>
    eec2:	movs	r3, #0
    eec4:	str	r3, [r4, #16]
    eec6:	ldr	r0, [r4, #0]
    eec8:	cbz	r0, eed2 <task_stop@@Base+0x26>
    eeca:	blx	8b9c <close@plt>
    eece:	movs	r3, #0
    eed0:	str	r3, [r4, #0]
    eed2:	ldr	r3, [r4, #28]
    eed4:	cbz	r3, eede <task_stop@@Base+0x32>
    eed6:	ldr	r0, [r4, #20]
    eed8:	ldmia.w	sp!, {r4, lr}
    eedc:	bx	r3
    eede:	pop	{r4, pc}

0000eee0 <task_deinit@@Base>:
    eee0:	cbz	r0, eee6 <task_deinit@@Base+0x6>
    eee2:	b.w	861c <free@plt>
    eee6:	bx	lr

0000eee8 <task_period_start@@Base>:
    eee8:	ldr	r2, [pc, #128]	; (ef6c <task_period_start@@Base+0x84>)
    eeea:	ldr	r3, [pc, #132]	; (ef70 <task_period_start@@Base+0x88>)
    eeec:	add	r2, pc
    eeee:	push	{r4, r5, lr}
    eef0:	sub	sp, #28
    eef2:	ldr	r3, [r2, r3]
    eef4:	mov	r5, r1
    eef6:	mov	r4, r0
    eef8:	ldr	r3, [r3, #0]
    eefa:	str	r3, [sp, #20]
    eefc:	mov.w	r3, #0
    ef00:	cbz	r0, ef5a <task_period_start@@Base+0x72>
    ef02:	movs	r1, #0
    ef04:	movs	r0, #1
    ef06:	blx	8904 <timerfd_create@plt>
    ef0a:	mov	r3, r0
    ef0c:	adds	r3, #1
    ef0e:	str	r0, [r4, #0]
    ef10:	bne.n	ef2a <task_period_start@@Base+0x42>
    ef12:	movs	r0, #0
    ef14:	str	r0, [r4, #0]
    ef16:	ldr	r2, [pc, #92]	; (ef74 <task_period_start@@Base+0x8c>)
    ef18:	ldr	r3, [pc, #84]	; (ef70 <task_period_start@@Base+0x88>)
    ef1a:	add	r2, pc
    ef1c:	ldr	r3, [r2, r3]
    ef1e:	ldr	r2, [r3, #0]
    ef20:	ldr	r3, [sp, #20]
    ef22:	eors	r2, r3
    ef24:	beq.n	ef60 <task_period_start@@Base+0x78>
    ef26:	blx	8708 <__stack_chk_fail@plt>
    ef2a:	movs	r2, #0
    ef2c:	movs	r3, #0
    ef2e:	strd	r2, r3, [r4, #8]
    ef32:	mov.w	r1, #1000	; 0x3e8
    ef36:	ldr	r2, [pc, #44]	; (ef64 <task_period_start@@Base+0x7c>)
    ef38:	umull	r2, r3, r5, r2
    ef3c:	lsrs	r2, r3, #6
    ef3e:	ldr	r3, [pc, #40]	; (ef68 <task_period_start@@Base+0x80>)
    ef40:	str	r2, [sp, #4]
    ef42:	mls	r1, r1, r2, r5
    ef46:	muls	r1, r3
    ef48:	movs	r3, #0
    ef4a:	strd	r1, r2, [sp, #8]
    ef4e:	add	r2, sp, #4
    ef50:	str	r1, [sp, #16]
    ef52:	mov	r1, r3
    ef54:	blx	8ae0 <timerfd_settime@plt>
    ef58:	b.n	ef16 <task_period_start@@Base+0x2e>
    ef5a:	mov.w	r0, #4294967295	; 0xffffffff
    ef5e:	b.n	ef16 <task_period_start@@Base+0x2e>
    ef60:	add	sp, #28
    ef62:	pop	{r4, r5, pc}
    ef64:	ldr	r5, [pc, #844]	; (f2b4 <btrfs_add_link@@Base+0x118>)
    ef66:	asrs	r2, r4, #1
    ef68:	negs	r0, r0
    ef6a:	movs	r7, r1
    ef6c:	ldrsh	r4, [r2, r2]
    ef6e:	movs	r5, r0
    ef70:	lsls	r0, r5, #8
    ef72:	movs	r0, r0
    ef74:	ldrsh	r6, [r4, r1]
    ef76:	movs	r5, r0

0000ef78 <task_period_wait@@Base>:
    ef78:	push	{r0, r1, r2, r3, r4, lr}
    ef7a:	mov	r4, r0
    ef7c:	ldr	r2, [pc, #88]	; (efd8 <task_period_wait@@Base+0x60>)
    ef7e:	ldr	r3, [pc, #92]	; (efdc <task_period_wait@@Base+0x64>)
    ef80:	add	r2, pc
    ef82:	ldr	r3, [r2, r3]
    ef84:	ldr	r3, [r3, #0]
    ef86:	str	r3, [sp, #12]
    ef88:	mov.w	r3, #0
    ef8c:	cbz	r0, efbe <task_period_wait@@Base+0x46>
    ef8e:	ldr	r0, [r0, #0]
    ef90:	cbz	r0, efbe <task_period_wait@@Base+0x46>
    ef92:	movs	r2, #8
    ef94:	mov	r1, sp
    ef96:	blx	85e8 <read@plt>
    ef9a:	adds	r0, #1
    ef9c:	beq.n	efbe <task_period_wait@@Base+0x46>
    ef9e:	ldrd	r2, r3, [sp]
    efa2:	orrs.w	r1, r2, r3
    efa6:	beq.n	efbe <task_period_wait@@Base+0x46>
    efa8:	adds.w	r1, r2, #4294967295	; 0xffffffff
    efac:	adc.w	r0, r3, #4294967295	; 0xffffffff
    efb0:	ldrd	r3, r2, [r4, #8]
    efb4:	adds	r3, r3, r1
    efb6:	adc.w	r2, r0, r2
    efba:	strd	r3, r2, [r4, #8]
    efbe:	ldr	r2, [pc, #32]	; (efe0 <task_period_wait@@Base+0x68>)
    efc0:	ldr	r3, [pc, #24]	; (efdc <task_period_wait@@Base+0x64>)
    efc2:	add	r2, pc
    efc4:	ldr	r3, [r2, r3]
    efc6:	ldr	r2, [r3, #0]
    efc8:	ldr	r3, [sp, #12]
    efca:	eors	r2, r3
    efcc:	beq.n	efd2 <task_period_wait@@Base+0x5a>
    efce:	blx	8708 <__stack_chk_fail@plt>
    efd2:	add	sp, #16
    efd4:	pop	{r4, pc}
    efd6:	nop
    efd8:	ldrsh	r0, [r0, r0]
    efda:	movs	r5, r0
    efdc:	lsls	r0, r5, #8
    efde:	movs	r0, r0
    efe0:	ldrb	r6, [r7, r6]
    efe2:	movs	r5, r0

0000efe4 <task_period_stop@@Base>:
    efe4:	push	{r4, lr}
    efe6:	mov	r4, r0
    efe8:	cbz	r0, f004 <task_period_stop@@Base+0x20>
    efea:	ldr	r0, [r0, #0]
    efec:	cbz	r0, f004 <task_period_stop@@Base+0x20>
    efee:	movs	r3, #0
    eff0:	mov	r2, r3
    eff2:	mov	r1, r3
    eff4:	blx	8ae0 <timerfd_settime@plt>
    eff8:	ldr	r0, [r4, #0]
    effa:	blx	8b9c <close@plt>
    effe:	mov.w	r3, #4294967295	; 0xffffffff
    f002:	str	r3, [r4, #0]
    f004:	pop	{r4, pc}
    f006:	nop
    f008:	push	{r4, lr}
    f00a:	mov	r4, r1
    f00c:	ldr	r1, [pc, #84]	; (f064 <task_period_stop@@Base+0x80>)
    f00e:	sub	sp, #24
    f010:	ldr	r3, [pc, #84]	; (f068 <task_period_stop@@Base+0x84>)
    f012:	add	r1, pc
    f014:	ldr	r3, [r1, r3]
    f016:	mov	r1, sp
    f018:	ldr	r3, [r3, #0]
    f01a:	str	r3, [sp, #20]
    f01c:	mov.w	r3, #0
    f020:	movs	r3, #25
    f022:	muls	r2, r3
    f024:	movs	r3, #17
    f026:	adds	r2, #101	; 0x65
    f028:	bl	17a1a <read_extent_buffer@@Base>
    f02c:	ldr.w	r3, [sp, #13]
    f030:	ldr.w	r2, [sp, #9]
    f034:	str.w	r3, [r4, #13]
    f038:	ldrb.w	r3, [sp, #8]
    f03c:	str.w	r2, [r4, #9]
    f040:	ldr	r2, [pc, #40]	; (f06c <task_period_stop@@Base+0x88>)
    f042:	strb	r3, [r4, #8]
    f044:	ldr	r3, [sp, #0]
    f046:	add	r2, pc
    f048:	str	r3, [r4, #0]
    f04a:	ldr	r3, [sp, #4]
    f04c:	str	r3, [r4, #4]
    f04e:	ldr	r3, [pc, #24]	; (f068 <task_period_stop@@Base+0x84>)
    f050:	ldr	r3, [r2, r3]
    f052:	ldr	r2, [r3, #0]
    f054:	ldr	r3, [sp, #20]
    f056:	eors	r2, r3
    f058:	beq.n	f05e <task_period_stop@@Base+0x7a>
    f05a:	blx	8708 <__stack_chk_fail@plt>
    f05e:	add	sp, #24
    f060:	pop	{r4, pc}
    f062:	nop
    f064:	ldrb	r6, [r5, r5]
    f066:	movs	r5, r0
    f068:	lsls	r0, r5, #8
    f06a:	movs	r0, r0
    f06c:	ldrb	r2, [r7, r4]
    f06e:	movs	r5, r0

0000f070 <check_dir_conflict@@Base>:
    f070:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    f074:	mov	sl, r2
    f076:	ldr	r2, [pc, #280]	; (f190 <check_dir_conflict@@Base+0x120>)
    f078:	sub	sp, #56	; 0x38
    f07a:	ldr	r3, [pc, #280]	; (f194 <check_dir_conflict@@Base+0x124>)
    f07c:	mov	r8, r0
    f07e:	add	r2, pc
    f080:	ldrd	r6, r7, [sp, #88]	; 0x58
    f084:	mov	r9, r1
    f086:	ldr	r3, [r2, r3]
    f088:	ldr	r3, [r3, #0]
    f08a:	str	r3, [sp, #52]	; 0x34
    f08c:	mov.w	r3, #0
    f090:	bl	18550 <btrfs_alloc_path@@Base>
    f094:	mov	r5, r0
    f096:	cmp	r0, #0
    f098:	beq.n	f180 <check_dir_conflict@@Base+0x110>
    f09a:	movs	r0, #0
    f09c:	movs	r3, #1
    f09e:	add	r2, sp, #32
    f0a0:	strb.w	r3, [sp, #40]	; 0x28
    f0a4:	mov	r1, r8
    f0a6:	mov	r3, r5
    f0a8:	strd	r0, r0, [sp]
    f0ac:	strd	r6, r7, [sp, #32]
    f0b0:	strb.w	r0, [sp, #41]	; 0x29
    f0b4:	strb.w	r0, [sp, #42]	; 0x2a
    f0b8:	strb.w	r0, [sp, #43]	; 0x2b
    f0bc:	strb.w	r0, [sp, #44]	; 0x2c
    f0c0:	strb.w	r0, [sp, #45]	; 0x2d
    f0c4:	strb.w	r0, [sp, #46]	; 0x2e
    f0c8:	strb.w	r0, [sp, #47]	; 0x2f
    f0cc:	strb.w	r0, [sp, #48]	; 0x30
    f0d0:	bl	1a93c <btrfs_search_slot@@Base>
    f0d4:	subs	r4, r0, #0
    f0d6:	blt.n	f118 <check_dir_conflict@@Base+0xa8>
    f0d8:	bne.n	f174 <check_dir_conflict@@Base+0x104>
    f0da:	ldr	r3, [r5, #0]
    f0dc:	movs	r1, #25
    f0de:	ldr	r2, [r5, #32]
    f0e0:	adds	r3, #96	; 0x60
    f0e2:	mla	r2, r1, r2, r3
    f0e6:	ldr.w	r2, [r2, #118]	; 0x76
    f0ea:	add	r3, r2
    f0ec:	ldr.w	r3, [r3, #153]	; 0x99
    f0f0:	lsls	r3, r3, #17
    f0f2:	bpl.n	f17a <check_dir_conflict@@Base+0x10a>
    f0f4:	mov	r0, r5
    f0f6:	bl	18558 <btrfs_release_path@@Base>
    f0fa:	mov	r2, r5
    f0fc:	mov	r1, r8
    f0fe:	mov	r0, r4
    f100:	strd	sl, r4, [sp, #12]
    f104:	str.w	r9, [sp, #8]
    f108:	strd	r6, r7, [sp]
    f10c:	bl	9858 <btrfs_lookup_dir_item@@Base>
    f110:	cmn.w	r0, #4096	; 0x1000
    f114:	bls.n	f132 <check_dir_conflict@@Base+0xc2>
    f116:	mov	r4, r0
    f118:	mov	r0, r5
    f11a:	bl	1857e <btrfs_free_path@@Base>
    f11e:	ldr	r2, [pc, #120]	; (f198 <check_dir_conflict@@Base+0x128>)
    f120:	ldr	r3, [pc, #112]	; (f194 <check_dir_conflict@@Base+0x124>)
    f122:	add	r2, pc
    f124:	ldr	r3, [r2, r3]
    f126:	ldr	r2, [r3, #0]
    f128:	ldr	r3, [sp, #52]	; 0x34
    f12a:	eors	r2, r3
    f12c:	beq.n	f186 <check_dir_conflict@@Base+0x116>
    f12e:	blx	8708 <__stack_chk_fail@plt>
    f132:	cbnz	r0, f16e <check_dir_conflict@@Base+0xfe>
    f134:	mov	r0, r5
    f136:	bl	18558 <btrfs_release_path@@Base>
    f13a:	ldrd	r2, r3, [sp, #96]	; 0x60
    f13e:	mov	r1, r8
    f140:	mov	r0, r4
    f142:	str	r4, [sp, #24]
    f144:	strd	r2, r3, [sp, #16]
    f148:	mov	r2, r5
    f14a:	strd	r9, sl, [sp, #8]
    f14e:	strd	r6, r7, [sp]
    f152:	bl	9940 <btrfs_lookup_dir_index@@Base>
    f156:	cmn.w	r0, #4096	; 0x1000
    f15a:	bls.n	f16a <check_dir_conflict@@Base+0xfa>
    f15c:	cmn.w	r0, #2
    f160:	it	eq
    f162:	moveq	r0, r4
    f164:	cmn.w	r0, #4096	; 0x1000
    f168:	bhi.n	f116 <check_dir_conflict@@Base+0xa6>
    f16a:	cmp	r0, #0
    f16c:	beq.n	f118 <check_dir_conflict@@Base+0xa8>
    f16e:	mvn.w	r4, #16
    f172:	b.n	f118 <check_dir_conflict@@Base+0xa8>
    f174:	mvn.w	r4, #1
    f178:	b.n	f118 <check_dir_conflict@@Base+0xa8>
    f17a:	mvn.w	r4, #19
    f17e:	b.n	f118 <check_dir_conflict@@Base+0xa8>
    f180:	mvn.w	r4, #11
    f184:	b.n	f11e <check_dir_conflict@@Base+0xae>
    f186:	mov	r0, r4
    f188:	add	sp, #56	; 0x38
    f18a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    f18e:	nop
    f190:	ldrb	r2, [r0, r4]
    f192:	movs	r5, r0
    f194:	lsls	r0, r5, #8
    f196:	movs	r0, r0
    f198:	ldrb	r6, [r3, r1]
    f19a:	movs	r5, r0

0000f19c <btrfs_add_link@@Base>:
    f19c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f1a0:	sub	sp, #92	; 0x5c
    f1a2:	mov	r4, r3
    f1a4:	mov	r6, r2
    f1a6:	ldr	r3, [sp, #148]	; 0x94
    f1a8:	mov	r8, r0
    f1aa:	ldr	r2, [pc, #772]	; (f4b0 <btrfs_add_link@@Base+0x314>)
    f1ac:	mov	r7, r1
    f1ae:	ldr.w	sl, [sp, #136]	; 0x88
    f1b2:	str	r3, [sp, #32]
    f1b4:	add	r2, pc
    f1b6:	ldr	r3, [pc, #764]	; (f4b4 <btrfs_add_link@@Base+0x318>)
    f1b8:	ldr	r3, [r2, r3]
    f1ba:	ldr	r3, [r3, #0]
    f1bc:	str	r3, [sp, #84]	; 0x54
    f1be:	mov.w	r3, #0
    f1c2:	bl	18550 <btrfs_alloc_path@@Base>
    f1c6:	mov	r5, r0
    f1c8:	cmp	r0, #0
    f1ca:	beq.w	f496 <btrfs_add_link@@Base+0x2fa>
    f1ce:	ldr	r3, [sp, #32]
    f1d0:	cbz	r3, f1e0 <btrfs_add_link@@Base+0x44>
    f1d2:	ldrd	r2, r3, [r3]
    f1d6:	strd	r2, r3, [sp, #24]
    f1da:	orrs	r3, r2
    f1dc:	bne.w	f2e4 <btrfs_add_link@@Base+0x148>
    f1e0:	bl	18550 <btrfs_alloc_path@@Base>
    f1e4:	mov	r9, r0
    f1e6:	cbnz	r0, f224 <btrfs_add_link@@Base+0x88>
    f1e8:	mvn.w	fp, #11
    f1ec:	movs	r3, #0
    f1ee:	movs	r4, #0
    f1f0:	strd	r3, r4, [sp, #24]
    f1f4:	mov	r0, r5
    f1f6:	bl	1857e <btrfs_free_path@@Base>
    f1fa:	cmp.w	fp, #0
    f1fe:	bne.n	f20e <btrfs_add_link@@Base+0x72>
    f200:	ldr	r3, [sp, #32]
    f202:	cbz	r3, f20e <btrfs_add_link@@Base+0x72>
    f204:	mov	r1, r3
    f206:	ldrd	r2, r3, [sp, #24]
    f20a:	strd	r2, r3, [r1]
    f20e:	ldr	r2, [pc, #680]	; (f4b8 <btrfs_add_link@@Base+0x31c>)
    f210:	ldr	r3, [pc, #672]	; (f4b4 <btrfs_add_link@@Base+0x318>)
    f212:	add	r2, pc
    f214:	ldr	r3, [r2, r3]
    f216:	ldr	r2, [r3, #0]
    f218:	ldr	r3, [sp, #84]	; 0x54
    f21a:	eors	r2, r3
    f21c:	beq.w	f4a6 <btrfs_add_link@@Base+0x30a>
    f220:	blx	8708 <__stack_chk_fail@plt>
    f224:	ldr	r3, [sp, #128]	; 0x80
    f226:	mov.w	r1, #4294967295	; 0xffffffff
    f22a:	movs	r2, #96	; 0x60
    f22c:	movs	r0, #0
    f22e:	strb.w	r2, [sp, #52]	; 0x34
    f232:	add	r2, sp, #44	; 0x2c
    f234:	str	r3, [sp, #44]	; 0x2c
    f236:	ldr	r3, [sp, #132]	; 0x84
    f238:	strb.w	r1, [sp, #53]	; 0x35
    f23c:	strb.w	r1, [sp, #54]	; 0x36
    f240:	str	r3, [sp, #48]	; 0x30
    f242:	mov	r3, r9
    f244:	strb.w	r1, [sp, #55]	; 0x37
    f248:	strb.w	r1, [sp, #56]	; 0x38
    f24c:	strb.w	r1, [sp, #57]	; 0x39
    f250:	strb.w	r1, [sp, #58]	; 0x3a
    f254:	strb.w	r1, [sp, #59]	; 0x3b
    f258:	strb.w	r1, [sp, #60]	; 0x3c
    f25c:	mov	r1, r7
    f25e:	strd	r0, r0, [sp]
    f262:	bl	1a93c <btrfs_search_slot@@Base>
    f266:	subs.w	fp, r0, #0
    f26a:	blt.n	f286 <btrfs_add_link@@Base+0xea>
    f26c:	ldr.w	r2, [r9, #32]
    f270:	cbnz	r2, f290 <btrfs_add_link@@Base+0xf4>
    f272:	mov	r1, r9
    f274:	mov	r0, r7
    f276:	bl	1bce8 <btrfs_prev_leaf@@Base>
    f27a:	subs.w	fp, r0, #0
    f27e:	blt.n	f286 <btrfs_add_link@@Base+0xea>
    f280:	beq.n	f296 <btrfs_add_link@@Base+0xfa>
    f282:	mvn.w	fp, #4
    f286:	movs	r2, #2
    f288:	movs	r3, #0
    f28a:	strd	r2, r3, [sp, #24]
    f28e:	b.n	f2d6 <btrfs_add_link@@Base+0x13a>
    f290:	subs	r2, #1
    f292:	str.w	r2, [r9, #32]
    f296:	ldr.w	r2, [r9, #32]
    f29a:	add	r1, sp, #64	; 0x40
    f29c:	ldr.w	r0, [r9]
    f2a0:	bl	f008 <task_period_stop@@Base+0x24>
    f2a4:	ldrd	r0, r1, [sp, #64]	; 0x40
    f2a8:	ldrd	r2, r3, [sp, #128]	; 0x80
    f2ac:	cmp	r3, r1
    f2ae:	it	eq
    f2b0:	cmpeq	r2, r0
    f2b2:	bne.w	f41c <btrfs_add_link@@Base+0x280>
    f2b6:	ldrb.w	r2, [sp, #72]	; 0x48
    f2ba:	cmp	r2, #96	; 0x60
    f2bc:	bne.w	f41c <btrfs_add_link@@Base+0x280>
    f2c0:	ldr.w	r2, [sp, #73]	; 0x49
    f2c4:	mov.w	fp, #0
    f2c8:	ldr.w	r1, [sp, #77]	; 0x4d
    f2cc:	adds	r3, r2, #1
    f2ce:	str	r3, [sp, #24]
    f2d0:	adc.w	r3, r1, #0
    f2d4:	str	r3, [sp, #28]
    f2d6:	mov	r0, r9
    f2d8:	bl	1857e <btrfs_free_path@@Base>
    f2dc:	cmp.w	fp, #0
    f2e0:	bne.w	f49c <btrfs_add_link@@Base+0x300>
    f2e4:	ldrd	r2, r3, [sp, #24]
    f2e8:	mov	r1, sl
    f2ea:	mov	r0, r7
    f2ec:	strd	r2, r3, [sp, #8]
    f2f0:	ldrd	r2, r3, [sp, #128]	; 0x80
    f2f4:	strd	r2, r3, [sp]
    f2f8:	ldr	r2, [sp, #140]	; 0x8c
    f2fa:	bl	f070 <check_dir_conflict@@Base>
    f2fe:	subs.w	fp, r0, #0
    f302:	bge.n	f314 <btrfs_add_link@@Base+0x178>
    f304:	ldr	r3, [sp, #156]	; 0x9c
    f306:	cmp	r3, #0
    f308:	beq.w	f1f4 <btrfs_add_link@@Base+0x58>
    f30c:	cmn.w	fp, #17
    f310:	bne.w	f1f4 <btrfs_add_link@@Base+0x58>
    f314:	ldr	r3, [sp, #152]	; 0x98
    f316:	cbz	r3, f34e <btrfs_add_link@@Base+0x1b2>
    f318:	ldrd	r2, r3, [sp, #24]
    f31c:	mov	r1, r7
    f31e:	mov	r0, r8
    f320:	strd	r6, r4, [sp]
    f324:	strd	r2, r3, [sp, #16]
    f328:	ldrd	r2, r3, [sp, #128]	; 0x80
    f32c:	strd	r2, r3, [sp, #8]
    f330:	mov	r2, sl
    f332:	ldr	r3, [sp, #140]	; 0x8c
    f334:	bl	2e374 <btrfs_insert_inode_ref@@Base>
    f338:	subs.w	fp, r0, #0
    f33c:	bge.n	f422 <btrfs_add_link@@Base+0x286>
    f33e:	ldr	r3, [sp, #156]	; 0x9c
    f340:	cmp	r3, #0
    f342:	beq.w	f1f4 <btrfs_add_link@@Base+0x58>
    f346:	cmn.w	fp, #17
    f34a:	bne.w	f1f4 <btrfs_add_link@@Base+0x58>
    f34e:	ldrd	r2, r3, [sp, #24]
    f352:	mov	r1, r7
    f354:	mov	r0, r8
    f356:	strd	r6, r4, [sp, #64]	; 0x40
    f35a:	mov.w	r9, #1
    f35e:	movs	r4, #0
    f360:	strd	r2, r3, [sp, #16]
    f364:	add.w	r6, sp, #73	; 0x49
    f368:	ldrb.w	r3, [sp, #144]	; 0x90
    f36c:	strb.w	r9, [sp, #72]	; 0x48
    f370:	strb.w	r4, [sp, #73]	; 0x49
    f374:	str	r3, [sp, #12]
    f376:	add	r3, sp, #64	; 0x40
    f378:	str	r3, [sp, #36]	; 0x24
    f37a:	str	r3, [sp, #8]
    f37c:	ldrd	r2, r3, [sp, #128]	; 0x80
    f380:	strb.w	r4, [sp, #74]	; 0x4a
    f384:	strb.w	r4, [sp, #75]	; 0x4b
    f388:	strd	r2, r3, [sp]
    f38c:	mov	r2, sl
    f38e:	ldr	r3, [sp, #140]	; 0x8c
    f390:	strb.w	r4, [sp, #76]	; 0x4c
    f394:	strb.w	r4, [sp, #77]	; 0x4d
    f398:	strb.w	r4, [sp, #78]	; 0x4e
    f39c:	strb.w	r4, [sp, #79]	; 0x4f
    f3a0:	strb.w	r4, [sp, #80]	; 0x50
    f3a4:	bl	96a8 <btrfs_insert_dir_item@@Base>
    f3a8:	subs.w	fp, r0, #0
    f3ac:	blt.w	f1f4 <btrfs_add_link@@Base+0x58>
    f3b0:	ldrd	r2, r3, [sp, #128]	; 0x80
    f3b4:	mov	r1, r7
    f3b6:	strb	r4, [r6, #1]
    f3b8:	mov	r0, r8
    f3ba:	strb	r4, [r6, #2]
    f3bc:	strd	r2, r3, [sp, #64]	; 0x40
    f3c0:	mov	r3, r5
    f3c2:	strb	r4, [r6, #3]
    f3c4:	strb	r4, [r6, #4]
    f3c6:	strb	r4, [r6, #5]
    f3c8:	strb	r4, [r6, #6]
    f3ca:	strb	r4, [r6, #7]
    f3cc:	ldr	r2, [sp, #36]	; 0x24
    f3ce:	strd	r9, r9, [sp]
    f3d2:	strb.w	r9, [sp, #72]	; 0x48
    f3d6:	strb.w	r4, [sp, #73]	; 0x49
    f3da:	bl	1a93c <btrfs_search_slot@@Base>
    f3de:	mov	fp, r0
    f3e0:	cmp	r0, #0
    f3e2:	bne.w	f1f4 <btrfs_add_link@@Base+0x58>
    f3e6:	ldr	r3, [r5, #0]
    f3e8:	movs	r0, #25
    f3ea:	ldr	r1, [r5, #32]
    f3ec:	adds	r3, #96	; 0x60
    f3ee:	ldr	r2, [sp, #140]	; 0x8c
    f3f0:	mla	r1, r0, r1, r3
    f3f4:	lsl.w	r4, r2, r9
    f3f8:	ldr.w	r1, [r1, #118]	; 0x76
    f3fc:	adds	r1, #101	; 0x65
    f3fe:	add	r3, r1
    f400:	ldr	r0, [r3, #16]
    f402:	ldr	r1, [r3, #20]
    f404:	adds	r0, r0, r4
    f406:	str	r0, [r3, #16]
    f408:	adc.w	r1, r1, r4, asr #31
    f40c:	str	r1, [r3, #20]
    f40e:	ldr	r0, [r5, #0]
    f410:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
    f414:	mov	r0, r5
    f416:	bl	18558 <btrfs_release_path@@Base>
    f41a:	b.n	f1f4 <btrfs_add_link@@Base+0x58>
    f41c:	mov.w	fp, #0
    f420:	b.n	f286 <btrfs_add_link@@Base+0xea>
    f422:	bne.n	f34e <btrfs_add_link@@Base+0x1b2>
    f424:	movs	r1, #1
    f426:	add	r2, sp, #64	; 0x40
    f428:	strb.w	r1, [sp, #72]	; 0x48
    f42c:	mov	r3, r5
    f42e:	strd	r1, r1, [sp]
    f432:	mov	r0, r8
    f434:	mov	r1, r7
    f436:	strb.w	fp, [sp, #73]	; 0x49
    f43a:	strb.w	fp, [sp, #74]	; 0x4a
    f43e:	strb.w	fp, [sp, #75]	; 0x4b
    f442:	strb.w	fp, [sp, #76]	; 0x4c
    f446:	strb.w	fp, [sp, #77]	; 0x4d
    f44a:	strb.w	fp, [sp, #78]	; 0x4e
    f44e:	strb.w	fp, [sp, #79]	; 0x4f
    f452:	strb.w	fp, [sp, #80]	; 0x50
    f456:	strd	r6, r4, [sp, #64]	; 0x40
    f45a:	bl	1a93c <btrfs_search_slot@@Base>
    f45e:	subs.w	fp, r0, #0
    f462:	beq.n	f46e <btrfs_add_link@@Base+0x2d2>
    f464:	ble.w	f1f4 <btrfs_add_link@@Base+0x58>
    f468:	mvn.w	fp, #1
    f46c:	b.n	f1f4 <btrfs_add_link@@Base+0x58>
    f46e:	ldr	r3, [r5, #0]
    f470:	movs	r1, #25
    f472:	ldr	r2, [r5, #32]
    f474:	adds	r3, #96	; 0x60
    f476:	mla	r2, r1, r2, r3
    f47a:	ldr.w	r2, [r2, #118]	; 0x76
    f47e:	adds	r2, #101	; 0x65
    f480:	add	r3, r2
    f482:	ldr	r2, [r3, #40]	; 0x28
    f484:	adds	r2, #1
    f486:	str	r2, [r3, #40]	; 0x28
    f488:	ldr	r0, [r5, #0]
    f48a:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
    f48e:	mov	r0, r5
    f490:	bl	18558 <btrfs_release_path@@Base>
    f494:	b.n	f34e <btrfs_add_link@@Base+0x1b2>
    f496:	mvn.w	fp, #11
    f49a:	b.n	f20e <btrfs_add_link@@Base+0x72>
    f49c:	movs	r3, #0
    f49e:	movs	r4, #0
    f4a0:	strd	r3, r4, [sp, #24]
    f4a4:	b.n	f1f4 <btrfs_add_link@@Base+0x58>
    f4a6:	mov	r0, fp
    f4a8:	add	sp, #92	; 0x5c
    f4aa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f4ae:	nop
    f4b0:	ldrh	r4, [r1, r7]
    f4b2:	movs	r5, r0
    f4b4:	lsls	r0, r5, #8
    f4b6:	movs	r0, r0
    f4b8:	ldrh	r6, [r5, r5]
    f4ba:	movs	r5, r0

0000f4bc <btrfs_add_orphan_item@@Base>:
    f4bc:	push	{r4, r5, lr}
    f4be:	sub	sp, #44	; 0x2c
    f4c0:	ldr	r4, [pc, #84]	; (f518 <btrfs_add_orphan_item@@Base+0x5c>)
    f4c2:	mov.w	r5, #4294967295	; 0xffffffff
    f4c6:	ldr	r3, [pc, #84]	; (f51c <btrfs_add_orphan_item@@Base+0x60>)
    f4c8:	add	r4, pc
    f4ca:	ldr	r3, [r4, r3]
    f4cc:	mvn.w	r4, #4
    f4d0:	ldr	r3, [r3, #0]
    f4d2:	str	r3, [sp, #36]	; 0x24
    f4d4:	mov.w	r3, #0
    f4d8:	movs	r3, #48	; 0x30
    f4da:	strb.w	r3, [sp, #24]
    f4de:	ldr	r3, [sp, #56]	; 0x38
    f4e0:	strd	r4, r5, [sp, #16]
    f4e4:	str.w	r3, [sp, #25]
    f4e8:	ldr	r3, [sp, #60]	; 0x3c
    f4ea:	str.w	r3, [sp, #29]
    f4ee:	movs	r3, #0
    f4f0:	str	r3, [sp, #12]
    f4f2:	movs	r3, #1
    f4f4:	str	r3, [sp, #4]
    f4f6:	add	r3, sp, #12
    f4f8:	str	r3, [sp, #0]
    f4fa:	add	r3, sp, #16
    f4fc:	bl	1b70c <btrfs_insert_empty_items@@Base>
    f500:	ldr	r2, [pc, #28]	; (f520 <btrfs_add_orphan_item@@Base+0x64>)
    f502:	ldr	r3, [pc, #24]	; (f51c <btrfs_add_orphan_item@@Base+0x60>)
    f504:	add	r2, pc
    f506:	ldr	r3, [r2, r3]
    f508:	ldr	r2, [r3, #0]
    f50a:	ldr	r3, [sp, #36]	; 0x24
    f50c:	eors	r2, r3
    f50e:	beq.n	f514 <btrfs_add_orphan_item@@Base+0x58>
    f510:	blx	8708 <__stack_chk_fail@plt>
    f514:	add	sp, #44	; 0x2c
    f516:	pop	{r4, r5, pc}
    f518:	ldr	r0, [r7, r2]
    f51a:	movs	r5, r0
    f51c:	lsls	r0, r5, #8
    f51e:	movs	r0, r0
    f520:	ldr	r4, [r7, r1]
    f522:	movs	r5, r0

0000f524 <btrfs_unlink@@Base>:
    f524:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f528:	sub	sp, #76	; 0x4c
    f52a:	mov	r6, r0
    f52c:	mov	sl, r1
    f52e:	strd	r2, r3, [sp, #40]	; 0x28
    f532:	ldr	r2, [pc, #896]	; (f8b4 <btrfs_unlink@@Base+0x390>)
    f534:	ldr	r3, [pc, #896]	; (f8b8 <btrfs_unlink@@Base+0x394>)
    f536:	add	r2, pc
    f538:	ldrd	r7, r5, [sp, #128]	; 0x80
    f53c:	ldr	r3, [r2, r3]
    f53e:	ldr	r3, [r3, #0]
    f540:	str	r3, [sp, #68]	; 0x44
    f542:	mov.w	r3, #0
    f546:	bl	18550 <btrfs_alloc_path@@Base>
    f54a:	mov	r4, r0
    f54c:	cmp	r0, #0
    f54e:	beq.w	f89a <btrfs_unlink@@Base+0x376>
    f552:	ldrd	r2, r3, [sp, #112]	; 0x70
    f556:	mov.w	r9, #0
    f55a:	mov	r1, sl
    f55c:	str.w	r9, [sp, #24]
    f560:	str	r5, [sp, #0]
    f562:	strd	r2, r3, [sp, #16]
    f566:	mov	r2, r0
    f568:	ldr	r3, [sp, #40]	; 0x28
    f56a:	mov	r0, r6
    f56c:	str	r3, [sp, #8]
    f56e:	ldr	r3, [sp, #44]	; 0x2c
    f570:	str	r3, [sp, #12]
    f572:	mov	r3, r7
    f574:	bl	2dfe8 <btrfs_lookup_inode_ref@@Base>
    f578:	cmn.w	r0, #4096	; 0x1000
    f57c:	mov	fp, r0
    f57e:	bhi.n	f65c <btrfs_unlink@@Base+0x138>
    f580:	mov	r0, r4
    f582:	bl	18558 <btrfs_release_path@@Base>
    f586:	ldrd	r2, r3, [sp, #112]	; 0x70
    f58a:	mov	r1, sl
    f58c:	mov	r0, r9
    f58e:	strd	r5, r9, [sp, #12]
    f592:	strd	r2, r3, [sp]
    f596:	mov	r2, r4
    f598:	str	r7, [sp, #8]
    f59a:	bl	9858 <btrfs_lookup_dir_item@@Base>
    f59e:	cmn.w	r0, #4096	; 0x1000
    f5a2:	mov	r3, r0
    f5a4:	str	r0, [sp, #36]	; 0x24
    f5a6:	bls.n	f5ac <btrfs_unlink@@Base+0x88>
    f5a8:	mov	fp, r3
    f5aa:	b.n	f65c <btrfs_unlink@@Base+0x138>
    f5ac:	mov	r0, r4
    f5ae:	bl	18558 <btrfs_release_path@@Base>
    f5b2:	ldrd	r2, r3, [sp, #120]	; 0x78
    f5b6:	mov	r1, sl
    f5b8:	mov	r0, r9
    f5ba:	str.w	r9, [sp, #24]
    f5be:	strd	r2, r3, [sp, #16]
    f5c2:	ldrd	r2, r3, [sp, #112]	; 0x70
    f5c6:	strd	r7, r5, [sp, #8]
    f5ca:	strd	r2, r3, [sp]
    f5ce:	mov	r2, r4
    f5d0:	bl	9940 <btrfs_lookup_dir_index@@Base>
    f5d4:	cmn.w	r0, #4096	; 0x1000
    f5d8:	mov	r8, r0
    f5da:	bls.n	f5e4 <btrfs_unlink@@Base+0xc0>
    f5dc:	cmn.w	r0, #2
    f5e0:	bne.n	f654 <btrfs_unlink@@Base+0x130>
    f5e2:	mov	r8, r9
    f5e4:	ldr	r3, [sp, #36]	; 0x24
    f5e6:	mov	r0, r4
    f5e8:	orr.w	r9, fp, r3
    f5ec:	orr.w	r9, r8, r9
    f5f0:	bl	18558 <btrfs_release_path@@Base>
    f5f4:	cmp.w	r9, #0
    f5f8:	beq.n	f64e <btrfs_unlink@@Base+0x12a>
    f5fa:	cmp.w	fp, #0
    f5fe:	beq.w	f8a0 <btrfs_unlink@@Base+0x37c>
    f602:	ldr	r3, [sp, #40]	; 0x28
    f604:	movs	r2, #0
    f606:	movs	r1, #1
    f608:	strb.w	r2, [sp, #57]	; 0x39
    f60c:	strb.w	r1, [sp, #56]	; 0x38
    f610:	mov	r0, r6
    f612:	str	r3, [sp, #48]	; 0x30
    f614:	ldr	r3, [sp, #44]	; 0x2c
    f616:	strb.w	r2, [sp, #58]	; 0x3a
    f61a:	strb.w	r2, [sp, #59]	; 0x3b
    f61e:	str	r3, [sp, #52]	; 0x34
    f620:	mov.w	r3, #4294967295	; 0xffffffff
    f624:	strb.w	r2, [sp, #60]	; 0x3c
    f628:	strb.w	r2, [sp, #61]	; 0x3d
    f62c:	strb.w	r2, [sp, #62]	; 0x3e
    f630:	strb.w	r2, [sp, #63]	; 0x3f
    f634:	strb.w	r2, [sp, #64]	; 0x40
    f638:	add	r2, sp, #48	; 0x30
    f63a:	str	r1, [sp, #4]
    f63c:	mov	r1, sl
    f63e:	str	r3, [sp, #0]
    f640:	mov	r3, r4
    f642:	bl	1a93c <btrfs_search_slot@@Base>
    f646:	subs.w	fp, r0, #0
    f64a:	beq.n	f678 <btrfs_unlink@@Base+0x154>
    f64c:	ble.n	f65c <btrfs_unlink@@Base+0x138>
    f64e:	mvn.w	fp, #1
    f652:	b.n	f65c <btrfs_unlink@@Base+0x138>
    f654:	cmn.w	r0, #4096	; 0x1000
    f658:	bls.n	f5e4 <btrfs_unlink@@Base+0xc0>
    f65a:	mov	fp, r0
    f65c:	mov	r0, r4
    f65e:	bl	1857e <btrfs_free_path@@Base>
    f662:	ldr	r2, [pc, #600]	; (f8bc <btrfs_unlink@@Base+0x398>)
    f664:	ldr	r3, [pc, #592]	; (f8b8 <btrfs_unlink@@Base+0x394>)
    f666:	add	r2, pc
    f668:	ldr	r3, [r2, r3]
    f66a:	ldr	r2, [r3, #0]
    f66c:	ldr	r3, [sp, #68]	; 0x44
    f66e:	eors	r2, r3
    f670:	beq.w	f8aa <btrfs_unlink@@Base+0x386>
    f674:	blx	8708 <__stack_chk_fail@plt>
    f678:	ldr	r3, [r4, #0]
    f67a:	movs	r1, #25
    f67c:	ldr	r2, [r4, #32]
    f67e:	adds	r3, #96	; 0x60
    f680:	mla	r2, r1, r2, r3
    f684:	ldr.w	r2, [r2, #118]	; 0x76
    f688:	adds	r2, #101	; 0x65
    f68a:	add	r3, r2
    f68c:	ldr.w	r9, [r3, #40]	; 0x28
    f690:	cmp.w	r9, #0
    f694:	beq.n	f69a <btrfs_unlink@@Base+0x176>
    f696:	add.w	r9, r9, #4294967295	; 0xffffffff
    f69a:	str.w	r9, [r3, #40]	; 0x28
    f69e:	ldr	r0, [r4, #0]
    f6a0:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
    f6a4:	mov	r0, r4
    f6a6:	bl	18558 <btrfs_release_path@@Base>
    f6aa:	cmp.w	r9, #0
    f6ae:	bne.n	f6d8 <btrfs_unlink@@Base+0x1b4>
    f6b0:	ldr	r3, [sp, #136]	; 0x88
    f6b2:	cbz	r3, f6d8 <btrfs_unlink@@Base+0x1b4>
    f6b4:	ldr	r3, [sp, #40]	; 0x28
    f6b6:	mov	r2, r4
    f6b8:	mov	r1, sl
    f6ba:	mov	r0, r6
    f6bc:	str	r3, [sp, #0]
    f6be:	ldr	r3, [sp, #44]	; 0x2c
    f6c0:	str	r3, [sp, #4]
    f6c2:	bl	f4bc <btrfs_add_orphan_item@@Base>
    f6c6:	subs.w	fp, r0, #0
    f6ca:	blt.n	f65c <btrfs_unlink@@Base+0x138>
    f6cc:	ldr	r0, [r4, #0]
    f6ce:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
    f6d2:	mov	r0, r4
    f6d4:	bl	18558 <btrfs_release_path@@Base>
    f6d8:	add	r3, sp, #120	; 0x78
    f6da:	str	r3, [sp, #16]
    f6dc:	ldrd	r2, r3, [sp, #112]	; 0x70
    f6e0:	mov	r1, sl
    f6e2:	mov	r0, r6
    f6e4:	strd	r2, r3, [sp, #8]
    f6e8:	mov	r2, r7
    f6ea:	ldr	r3, [sp, #40]	; 0x28
    f6ec:	str	r3, [sp, #0]
    f6ee:	ldr	r3, [sp, #44]	; 0x2c
    f6f0:	str	r3, [sp, #4]
    f6f2:	mov	r3, r5
    f6f4:	bl	2e550 <btrfs_del_inode_ref@@Base>
    f6f8:	subs.w	fp, r0, #0
    f6fc:	blt.n	f65c <btrfs_unlink@@Base+0x138>
    f6fe:	cmp.w	r8, #0
    f702:	beq.n	f7cc <btrfs_unlink@@Base+0x2a8>
    f704:	mov.w	r3, #4294967295	; 0xffffffff
    f708:	str	r3, [sp, #24]
    f70a:	ldrd	r2, r3, [sp, #120]	; 0x78
    f70e:	mov	r1, sl
    f710:	mov	r0, r6
    f712:	strd	r7, r5, [sp, #8]
    f716:	strd	r2, r3, [sp, #16]
    f71a:	ldrd	r2, r3, [sp, #112]	; 0x70
    f71e:	strd	r2, r3, [sp]
    f722:	mov	r2, r4
    f724:	bl	9940 <btrfs_lookup_dir_index@@Base>
    f728:	cmn.w	r0, #4096	; 0x1000
    f72c:	mov	r3, r0
    f72e:	bhi.w	f5a8 <btrfs_unlink@@Base+0x84>
    f732:	cmp	r0, #0
    f734:	beq.n	f64e <btrfs_unlink@@Base+0x12a>
    f736:	mov	r2, r4
    f738:	mov	r1, sl
    f73a:	mov	r0, r6
    f73c:	bl	9278 <btrfs_delete_one_dir_name@@Base>
    f740:	mov	fp, r0
    f742:	cmp	r0, #0
    f744:	bne.n	f65c <btrfs_unlink@@Base+0x138>
    f746:	mov	r0, r4
    f748:	bl	18558 <btrfs_release_path@@Base>
    f74c:	ldrd	r2, r3, [sp, #112]	; 0x70
    f750:	mov	r1, sl
    f752:	mov	r0, r6
    f754:	strb.w	fp, [sp, #57]	; 0x39
    f758:	strd	r2, r3, [sp, #48]	; 0x30
    f75c:	movs	r2, #1
    f75e:	mov	r3, r4
    f760:	strb.w	r2, [sp, #56]	; 0x38
    f764:	strd	r2, r2, [sp]
    f768:	add	r2, sp, #48	; 0x30
    f76a:	strb.w	fp, [sp, #58]	; 0x3a
    f76e:	strb.w	fp, [sp, #59]	; 0x3b
    f772:	strb.w	fp, [sp, #60]	; 0x3c
    f776:	strb.w	fp, [sp, #61]	; 0x3d
    f77a:	strb.w	fp, [sp, #62]	; 0x3e
    f77e:	strb.w	fp, [sp, #63]	; 0x3f
    f782:	strb.w	fp, [sp, #64]	; 0x40
    f786:	bl	1a93c <btrfs_search_slot@@Base>
    f78a:	mov	fp, r0
    f78c:	cmp	r0, #0
    f78e:	bne.w	f65c <btrfs_unlink@@Base+0x138>
    f792:	ldr	r1, [r4, #0]
    f794:	movs	r2, #25
    f796:	ldr	r3, [r4, #32]
    f798:	mov.w	r9, r5, asr #31
    f79c:	adds	r1, #96	; 0x60
    f79e:	mla	r3, r2, r3, r1
    f7a2:	ldr.w	r3, [r3, #118]	; 0x76
    f7a6:	adds	r3, #101	; 0x65
    f7a8:	add	r1, r3
    f7aa:	ldr	r3, [r1, #20]
    f7ac:	ldr	r2, [r1, #16]
    f7ae:	cmp	r3, r9
    f7b0:	it	eq
    f7b2:	cmpeq	r2, r5
    f7b4:	bcc.n	f7bc <btrfs_unlink@@Base+0x298>
    f7b6:	subs	r2, r2, r5
    f7b8:	sbc.w	r3, r3, r9
    f7bc:	str	r2, [r1, #16]
    f7be:	str	r3, [r1, #20]
    f7c0:	ldr	r0, [r4, #0]
    f7c2:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
    f7c6:	mov	r0, r4
    f7c8:	bl	18558 <btrfs_release_path@@Base>
    f7cc:	ldr	r3, [sp, #36]	; 0x24
    f7ce:	cmp	r3, #0
    f7d0:	beq.w	f65c <btrfs_unlink@@Base+0x138>
    f7d4:	mov.w	r3, #4294967295	; 0xffffffff
    f7d8:	strd	r5, r3, [sp, #12]
    f7dc:	ldrd	r2, r3, [sp, #112]	; 0x70
    f7e0:	mov	r1, sl
    f7e2:	mov	r0, r6
    f7e4:	str	r7, [sp, #8]
    f7e6:	strd	r2, r3, [sp]
    f7ea:	mov	r2, r4
    f7ec:	bl	9858 <btrfs_lookup_dir_item@@Base>
    f7f0:	cmn.w	r0, #4096	; 0x1000
    f7f4:	mov	r3, r0
    f7f6:	bhi.w	f5a8 <btrfs_unlink@@Base+0x84>
    f7fa:	cmp	r0, #0
    f7fc:	beq.w	f64e <btrfs_unlink@@Base+0x12a>
    f800:	mov	r2, r4
    f802:	mov	r1, sl
    f804:	mov	r0, r6
    f806:	bl	9278 <btrfs_delete_one_dir_name@@Base>
    f80a:	subs.w	fp, r0, #0
    f80e:	blt.w	f65c <btrfs_unlink@@Base+0x138>
    f812:	mov	r0, r4
    f814:	bl	18558 <btrfs_release_path@@Base>
    f818:	ldrd	r2, r3, [sp, #112]	; 0x70
    f81c:	movs	r1, #1
    f81e:	mov	r0, r6
    f820:	strb.w	r1, [sp, #56]	; 0x38
    f824:	strd	r2, r3, [sp, #48]	; 0x30
    f828:	movs	r2, #0
    f82a:	strd	r1, r1, [sp]
    f82e:	mov	r3, r4
    f830:	strb.w	r2, [sp, #57]	; 0x39
    f834:	mov	r1, sl
    f836:	strb.w	r2, [sp, #58]	; 0x3a
    f83a:	strb.w	r2, [sp, #59]	; 0x3b
    f83e:	strb.w	r2, [sp, #60]	; 0x3c
    f842:	strb.w	r2, [sp, #61]	; 0x3d
    f846:	strb.w	r2, [sp, #62]	; 0x3e
    f84a:	strb.w	r2, [sp, #63]	; 0x3f
    f84e:	strb.w	r2, [sp, #64]	; 0x40
    f852:	add	r2, sp, #48	; 0x30
    f854:	bl	1a93c <btrfs_search_slot@@Base>
    f858:	mov	fp, r0
    f85a:	cmp	r0, #0
    f85c:	bne.w	f65c <btrfs_unlink@@Base+0x138>
    f860:	ldr	r1, [r4, #0]
    f862:	movs	r2, #25
    f864:	ldr	r3, [r4, #32]
    f866:	asrs	r7, r5, #31
    f868:	adds	r1, #96	; 0x60
    f86a:	mla	r3, r2, r3, r1
    f86e:	ldr.w	r3, [r3, #118]	; 0x76
    f872:	adds	r3, #101	; 0x65
    f874:	add	r1, r3
    f876:	ldr	r3, [r1, #20]
    f878:	ldr	r2, [r1, #16]
    f87a:	cmp	r3, r7
    f87c:	it	eq
    f87e:	cmpeq	r2, r5
    f880:	bcc.n	f888 <btrfs_unlink@@Base+0x364>
    f882:	subs	r2, r2, r5
    f884:	sbc.w	r3, r3, r7
    f888:	str	r2, [r1, #16]
    f88a:	str	r3, [r1, #20]
    f88c:	ldr	r0, [r4, #0]
    f88e:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
    f892:	mov	r0, r4
    f894:	bl	18558 <btrfs_release_path@@Base>
    f898:	b.n	f65c <btrfs_unlink@@Base+0x138>
    f89a:	mvn.w	fp, #11
    f89e:	b.n	f662 <btrfs_unlink@@Base+0x13e>
    f8a0:	cmp.w	r8, #0
    f8a4:	bne.w	f704 <btrfs_unlink@@Base+0x1e0>
    f8a8:	b.n	f7d4 <btrfs_unlink@@Base+0x2b0>
    f8aa:	mov	r0, fp
    f8ac:	add	sp, #76	; 0x4c
    f8ae:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f8b2:	nop
    f8b4:	ldr	r2, [r1, r1]
    f8b6:	movs	r5, r0
    f8b8:	lsls	r0, r5, #8
    f8ba:	movs	r0, r0
    f8bc:	ldrsb	r2, [r3, r4]
    f8be:	movs	r5, r0

0000f8c0 <btrfs_new_inode@@Base>:
    f8c0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    f8c4:	mov	r9, r2
    f8c6:	ldr	r2, [pc, #124]	; (f944 <btrfs_new_inode@@Base+0x84>)
    f8c8:	mov	r8, r3
    f8ca:	ldr	r3, [pc, #124]	; (f948 <btrfs_new_inode@@Base+0x88>)
    f8cc:	sub	sp, #180	; 0xb4
    f8ce:	add	r2, pc
    f8d0:	add	r6, sp, #12
    f8d2:	mov	r5, r0
    f8d4:	mov	r7, r1
    f8d6:	ldr	r3, [r2, r3]
    f8d8:	movs	r1, #0
    f8da:	mov	r0, r6
    f8dc:	movs	r2, #160	; 0xa0
    f8de:	ldr	r3, [r3, #0]
    f8e0:	str	r3, [sp, #172]	; 0xac
    f8e2:	mov.w	r3, #0
    f8e6:	blx	89bc <memset@plt+0x4>
    f8ea:	movs	r0, #0
    f8ec:	movs	r4, #0
    f8ee:	blx	8684 <time@plt>
    f8f2:	ldr	r3, [r5, #8]
    f8f4:	mov	r2, r9
    f8f6:	mov	r1, r7
    f8f8:	str	r6, [sp, #0]
    f8fa:	str	r3, [sp, #12]
    f8fc:	ldr	r3, [r5, #12]
    f8fe:	strd	r4, r4, [sp, #56]	; 0x38
    f902:	strd	r4, r4, [sp, #28]
    f906:	str	r3, [sp, #16]
    f908:	ldr	r3, [sp, #208]	; 0xd0
    f90a:	str	r4, [sp, #52]	; 0x34
    f90c:	str	r4, [sp, #132]	; 0x84
    f90e:	str	r3, [sp, #64]	; 0x40
    f910:	str	r4, [sp, #156]	; 0x9c
    f912:	str	r4, [sp, #144]	; 0x90
    f914:	asrs	r3, r0, #31
    f916:	strd	r0, r3, [sp, #124]	; 0x7c
    f91a:	strd	r0, r3, [sp, #148]	; 0x94
    f91e:	strd	r0, r3, [sp, #136]	; 0x88
    f922:	mov	r3, r8
    f924:	mov	r0, r5
    f926:	bl	2df6c <btrfs_insert_inode@@Base>
    f92a:	ldr	r2, [pc, #32]	; (f94c <btrfs_new_inode@@Base+0x8c>)
    f92c:	ldr	r3, [pc, #24]	; (f948 <btrfs_new_inode@@Base+0x88>)
    f92e:	add	r2, pc
    f930:	ldr	r3, [r2, r3]
    f932:	ldr	r2, [r3, #0]
    f934:	ldr	r3, [sp, #172]	; 0xac
    f936:	eors	r2, r3
    f938:	beq.n	f93e <btrfs_new_inode@@Base+0x7e>
    f93a:	blx	8708 <__stack_chk_fail@plt>
    f93e:	add	sp, #180	; 0xb4
    f940:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    f944:	strb	r2, [r6, r2]
    f946:	movs	r5, r0
    f948:	lsls	r0, r5, #8
    f94a:	movs	r0, r0
    f94c:	strb	r2, [r2, r1]
    f94e:	movs	r5, r0

0000f950 <btrfs_change_inode_flags@@Base>:
    f950:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    f954:	mov	r9, r2
    f956:	ldr	r2, [pc, #180]	; (fa0c <btrfs_change_inode_flags@@Base+0xbc>)
    f958:	mov	r4, r3
    f95a:	ldr	r3, [pc, #180]	; (fa10 <btrfs_change_inode_flags@@Base+0xc0>)
    f95c:	sub	sp, #44	; 0x2c
    f95e:	add	r2, pc
    f960:	mov	r8, r0
    f962:	str	r1, [sp, #12]
    f964:	ldr	r3, [r2, r3]
    f966:	ldrd	r7, r6, [sp, #72]	; 0x48
    f96a:	ldr	r3, [r3, #0]
    f96c:	str	r3, [sp, #36]	; 0x24
    f96e:	mov.w	r3, #0
    f972:	bl	18550 <btrfs_alloc_path@@Base>
    f976:	mov	r5, r0
    f978:	cmp	r0, #0
    f97a:	beq.n	f9fe <btrfs_change_inode_flags@@Base+0xae>
    f97c:	movs	r2, #0
    f97e:	movs	r3, #1
    f980:	strb.w	r2, [sp, #25]
    f984:	strd	r2, r3, [sp]
    f988:	strb.w	r3, [sp, #24]
    f98c:	mov	r3, r0
    f98e:	strb.w	r2, [sp, #26]
    f992:	mov	r0, r8
    f994:	strb.w	r2, [sp, #27]
    f998:	strb.w	r2, [sp, #28]
    f99c:	strb.w	r2, [sp, #29]
    f9a0:	strb.w	r2, [sp, #30]
    f9a4:	strb.w	r2, [sp, #31]
    f9a8:	strb.w	r2, [sp, #32]
    f9ac:	add	r2, sp, #16
    f9ae:	ldr	r1, [sp, #12]
    f9b0:	strd	r9, r4, [sp, #16]
    f9b4:	bl	1a93c <btrfs_search_slot@@Base>
    f9b8:	subs	r4, r0, #0
    f9ba:	bgt.n	f9f8 <btrfs_change_inode_flags@@Base+0xa8>
    f9bc:	bne.n	f9de <btrfs_change_inode_flags@@Base+0x8e>
    f9be:	ldr	r3, [r5, #0]
    f9c0:	movs	r1, #25
    f9c2:	ldr	r2, [r5, #32]
    f9c4:	adds	r3, #96	; 0x60
    f9c6:	mla	r2, r1, r2, r3
    f9ca:	ldr.w	r2, [r2, #118]	; 0x76
    f9ce:	add	r3, r2
    f9d0:	str.w	r7, [r3, #165]	; 0xa5
    f9d4:	str.w	r6, [r3, #169]	; 0xa9
    f9d8:	ldr	r0, [r5, #0]
    f9da:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
    f9de:	mov	r0, r5
    f9e0:	bl	1857e <btrfs_free_path@@Base>
    f9e4:	ldr	r2, [pc, #44]	; (fa14 <btrfs_change_inode_flags@@Base+0xc4>)
    f9e6:	ldr	r3, [pc, #40]	; (fa10 <btrfs_change_inode_flags@@Base+0xc0>)
    f9e8:	add	r2, pc
    f9ea:	ldr	r3, [r2, r3]
    f9ec:	ldr	r2, [r3, #0]
    f9ee:	ldr	r3, [sp, #36]	; 0x24
    f9f0:	eors	r2, r3
    f9f2:	beq.n	fa04 <btrfs_change_inode_flags@@Base+0xb4>
    f9f4:	blx	8708 <__stack_chk_fail@plt>
    f9f8:	mvn.w	r4, #1
    f9fc:	b.n	f9de <btrfs_change_inode_flags@@Base+0x8e>
    f9fe:	mvn.w	r4, #11
    fa02:	b.n	f9e4 <btrfs_change_inode_flags@@Base+0x94>
    fa04:	mov	r0, r4
    fa06:	add	sp, #44	; 0x2c
    fa08:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    fa0c:	strb	r2, [r4, r0]
    fa0e:	movs	r5, r0
    fa10:	lsls	r0, r5, #8
    fa12:	movs	r0, r0
    fa14:	strh	r0, [r3, r6]
    fa16:	movs	r5, r0

0000fa18 <btrfs_mkdir@@Base>:
    fa18:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fa1c:	mov	sl, r2
    fa1e:	ldr	r2, [pc, #284]	; (fb3c <btrfs_mkdir@@Base+0x124>)
    fa20:	mov	fp, r3
    fa22:	ldr	r3, [pc, #284]	; (fb40 <btrfs_mkdir@@Base+0x128>)
    fa24:	sub	sp, #76	; 0x4c
    fa26:	add	r2, pc
    fa28:	mov	r7, r0
    fa2a:	str	r1, [sp, #36]	; 0x24
    fa2c:	ldr	r3, [r2, r3]
    fa2e:	movs	r2, #0
    fa30:	ldrd	r8, r9, [sp, #112]	; 0x70
    fa34:	ldr	r3, [r3, #0]
    fa36:	str	r3, [sp, #68]	; 0x44
    fa38:	mov.w	r3, #0
    fa3c:	ldr	r6, [sp, #120]	; 0x78
    fa3e:	movs	r3, #0
    fa40:	strd	r2, r3, [sp, #40]	; 0x28
    fa44:	bl	18550 <btrfs_alloc_path@@Base>
    fa48:	mov	r5, r0
    fa4a:	cmp	r0, #0
    fa4c:	beq.n	fb2e <btrfs_mkdir@@Base+0x116>
    fa4e:	ldr	r1, [sp, #36]	; 0x24
    fa50:	cbz	r6, fa60 <btrfs_mkdir@@Base+0x48>
    fa52:	ldrd	r2, r3, [r6]
    fa56:	orrs.w	r0, r2, r3
    fa5a:	it	ne
    fa5c:	strdne	r2, r3, [sp, #40]	; 0x28
    fa60:	movs	r0, #0
    fa62:	mov	r2, r5
    fa64:	strd	fp, r0, [sp, #12]
    fa68:	str.w	sl, [sp, #8]
    fa6c:	strd	r8, r9, [sp]
    fa70:	str	r1, [sp, #36]	; 0x24
    fa72:	bl	9858 <btrfs_lookup_dir_item@@Base>
    fa76:	ldr	r1, [sp, #36]	; 0x24
    fa78:	cmn.w	r0, #4096	; 0x1000
    fa7c:	mov	r4, r0
    fa7e:	bhi.n	faa8 <btrfs_mkdir@@Base+0x90>
    fa80:	cbz	r0, face <btrfs_mkdir@@Base+0xb6>
    fa82:	mov	r2, r0
    fa84:	movs	r3, #17
    fa86:	ldr	r0, [r5, #0]
    fa88:	add	r1, sp, #48	; 0x30
    fa8a:	bl	17a1a <read_extent_buffer@@Base>
    fa8e:	ldrd	r2, r3, [sp, #48]	; 0x30
    fa92:	strd	r2, r3, [sp, #40]	; 0x28
    fa96:	ldr	r2, [r5, #0]
    fa98:	add	r4, r2
    fa9a:	ldrb.w	r3, [r4, #125]	; 0x7d
    fa9e:	cmp	r3, #2
    faa0:	ite	eq
    faa2:	moveq	r4, #0
    faa4:	mvnne.w	r4, #16
    faa8:	mov	r0, r5
    faaa:	bl	1857e <btrfs_free_path@@Base>
    faae:	cbnz	r4, faba <btrfs_mkdir@@Base+0xa2>
    fab0:	cbz	r6, faba <btrfs_mkdir@@Base+0xa2>
    fab2:	ldrd	r2, r3, [sp, #40]	; 0x28
    fab6:	strd	r2, r3, [r6]
    faba:	ldr	r2, [pc, #136]	; (fb44 <btrfs_mkdir@@Base+0x12c>)
    fabc:	ldr	r3, [pc, #128]	; (fb40 <btrfs_mkdir@@Base+0x128>)
    fabe:	add	r2, pc
    fac0:	ldr	r3, [r2, r3]
    fac2:	ldr	r2, [r3, #0]
    fac4:	ldr	r3, [sp, #68]	; 0x44
    fac6:	eors	r2, r3
    fac8:	beq.n	fb34 <btrfs_mkdir@@Base+0x11c>
    faca:	blx	8708 <__stack_chk_fail@plt>
    face:	ldrd	r2, r3, [sp, #40]	; 0x28
    fad2:	orrs	r3, r2
    fad4:	beq.n	fb16 <btrfs_mkdir@@Base+0xfe>
    fad6:	ldr	r3, [sp, #124]	; 0x7c
    fad8:	mov	r0, r7
    fada:	str	r1, [sp, #36]	; 0x24
    fadc:	orr.w	r3, r3, #16384	; 0x4000
    fae0:	str	r3, [sp, #0]
    fae2:	ldrd	r2, r3, [sp, #40]	; 0x28
    fae6:	bl	f8c0 <btrfs_new_inode@@Base>
    faea:	mov	r4, r0
    faec:	cmp	r0, #0
    faee:	bne.n	faa8 <btrfs_mkdir@@Base+0x90>
    faf0:	movs	r3, #1
    faf2:	str	r0, [sp, #28]
    faf4:	strd	r0, r3, [sp, #20]
    faf8:	movs	r3, #2
    fafa:	ldr	r1, [sp, #36]	; 0x24
    fafc:	mov	r0, r7
    fafe:	strd	fp, r3, [sp, #12]
    fb02:	str.w	sl, [sp, #8]
    fb06:	ldrd	r2, r3, [sp, #40]	; 0x28
    fb0a:	strd	r8, r9, [sp]
    fb0e:	bl	f19c <btrfs_add_link@@Base>
    fb12:	mov	r4, r0
    fb14:	b.n	faa8 <btrfs_mkdir@@Base+0x90>
    fb16:	add	r3, sp, #40	; 0x28
    fb18:	mov	r2, r8
    fb1a:	str	r3, [sp, #0]
    fb1c:	mov	r3, r9
    fb1e:	str	r1, [sp, #36]	; 0x24
    fb20:	bl	99d0 <btrfs_find_free_objectid@@Base>
    fb24:	ldr	r1, [sp, #36]	; 0x24
    fb26:	mov	r4, r0
    fb28:	cmp	r0, #0
    fb2a:	beq.n	fad6 <btrfs_mkdir@@Base+0xbe>
    fb2c:	b.n	faa8 <btrfs_mkdir@@Base+0x90>
    fb2e:	mvn.w	r4, #11
    fb32:	b.n	faba <btrfs_mkdir@@Base+0xa2>
    fb34:	mov	r0, r4
    fb36:	add	sp, #76	; 0x4c
    fb38:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fb3c:	strh	r2, [r3, r5]
    fb3e:	movs	r5, r0
    fb40:	lsls	r0, r5, #8
    fb42:	movs	r0, r0
    fb44:	strh	r2, [r0, r3]
    fb46:	movs	r5, r0

0000fb48 <btrfs_mksubvol@@Base>:
    fb48:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fb4c:	mov	r5, r0
    fb4e:	vpush	{d8}
    fb52:	mov	r0, r1
    fb54:	vmov	s16, r1
    fb58:	sub	sp, #436	; 0x1b4
    fb5a:	strd	r2, r3, [sp, #56]	; 0x38
    fb5e:	ldrb.w	r3, [sp, #480]	; 0x1e0
    fb62:	ldr	r2, [pc, #808]	; (fe8c <btrfs_mksubvol@@Base+0x344>)
    fb64:	str	r3, [sp, #76]	; 0x4c
    fb66:	add	r2, pc
    fb68:	ldr	r3, [pc, #804]	; (fe90 <btrfs_mksubvol@@Base+0x348>)
    fb6a:	ldr	r3, [r2, r3]
    fb6c:	ldr	r3, [r3, #0]
    fb6e:	str	r3, [sp, #428]	; 0x1ac
    fb70:	mov.w	r3, #0
    fb74:	blx	8940 <strlen@plt>
    fb78:	mov	r4, r0
    fb7a:	str	r0, [sp, #40]	; 0x28
    fb7c:	cmp	r0, #0
    fb7e:	beq.w	fe7a <btrfs_mksubvol@@Base+0x332>
    fb82:	cmp	r0, #255	; 0xff
    fb84:	bgt.w	fe7a <btrfs_mksubvol@@Base+0x332>
    fb88:	ldr.w	r3, [r5, #464]	; 0x1d0
    fb8c:	add.w	r8, sp, #104	; 0x68
    fb90:	ldr.w	r9, [r5, #176]	; 0xb0
    fb94:	add	r6, sp, #84	; 0x54
    fb96:	ldr.w	sl, [r5, #180]	; 0xb4
    fb9a:	mov	r0, r8
    fb9c:	str	r3, [sp, #64]	; 0x40
    fb9e:	movs	r7, #0
    fba0:	ldr	r3, [r3, #28]
    fba2:	vmov	s17, r3
    fba6:	bl	18548 <btrfs_init_path@@Base>
    fbaa:	mov.w	r2, #4294967295	; 0xffffffff
    fbae:	movs	r3, #96	; 0x60
    fbb0:	strd	r9, sl, [r6]
    fbb4:	mov	r1, r5
    fbb6:	strb	r3, [r6, #8]
    fbb8:	mov	r0, r7
    fbba:	strb.w	r2, [sp, #93]	; 0x5d
    fbbe:	mov	r3, r8
    fbc0:	strb.w	r2, [sp, #94]	; 0x5e
    fbc4:	strb.w	r2, [sp, #95]	; 0x5f
    fbc8:	strb.w	r2, [sp, #96]	; 0x60
    fbcc:	strb.w	r2, [sp, #97]	; 0x61
    fbd0:	strb.w	r2, [sp, #98]	; 0x62
    fbd4:	strb.w	r2, [sp, #99]	; 0x63
    fbd8:	strb.w	r2, [sp, #100]	; 0x64
    fbdc:	mov	r2, r6
    fbde:	strd	r7, r7, [sp]
    fbe2:	bl	1a93c <btrfs_search_slot@@Base>
    fbe6:	cmp	r0, #0
    fbe8:	bgt.n	fc14 <btrfs_mksubvol@@Base+0xcc>
    fbea:	str	r0, [sp, #0]
    fbec:	mov	r2, r9
    fbee:	ldr	r0, [pc, #676]	; (fe94 <btrfs_mksubvol@@Base+0x34c>)
    fbf0:	mov	r3, sl
    fbf2:	add	r0, pc
    fbf4:	bl	17b7c <__btrfs_error@@Base>
    fbf8:	add	r0, sp, #104	; 0x68
    fbfa:	bl	18548 <btrfs_init_path@@Base>
    fbfe:	ldr	r2, [pc, #664]	; (fe98 <btrfs_mksubvol@@Base+0x350>)
    fc00:	ldr	r3, [pc, #652]	; (fe90 <btrfs_mksubvol@@Base+0x348>)
    fc02:	add	r2, pc
    fc04:	ldr	r3, [r2, r3]
    fc06:	ldr	r2, [r3, #0]
    fc08:	ldr	r3, [sp, #428]	; 0x1ac
    fc0a:	eors	r2, r3
    fc0c:	beq.w	fe7e <btrfs_mksubvol@@Base+0x336>
    fc10:	blx	8708 <__stack_chk_fail@plt>
    fc14:	ldr.w	r2, [r8, #32]
    fc18:	cmp	r2, #0
    fc1a:	bgt.n	fc4c <btrfs_mksubvol@@Base+0x104>
    fc1c:	movs	r3, #2
    fc1e:	str	r3, [sp, #48]	; 0x30
    fc20:	movs	r3, #0
    fc22:	add	r2, sp, #104	; 0x68
    fc24:	str	r3, [sp, #52]	; 0x34
    fc26:	str	r2, [sp, #44]	; 0x2c
    fc28:	mov	r0, r2
    fc2a:	bl	18558 <btrfs_release_path@@Base>
    fc2e:	movs	r1, #1
    fc30:	mov	r0, r5
    fc32:	bl	2b67c <btrfs_start_transaction@@Base>
    fc36:	ldr	r2, [sp, #44]	; 0x2c
    fc38:	cmn.w	r0, #4096	; 0x1000
    fc3c:	mov	r8, r0
    fc3e:	bls.n	fc80 <btrfs_mksubvol@@Base+0x138>
    fc40:	ldr	r0, [pc, #600]	; (fe9c <btrfs_mksubvol@@Base+0x354>)
    fc42:	add	r0, pc
    fc44:	bl	17b7c <__btrfs_error@@Base>
    fc48:	movs	r7, #0
    fc4a:	b.n	fbf8 <btrfs_mksubvol@@Base+0xb0>
    fc4c:	subs	r2, #1
    fc4e:	ldr.w	r0, [r8]
    fc52:	mov	r1, r6
    fc54:	str.w	r2, [r8, #32]
    fc58:	bl	f008 <task_period_stop@@Base+0x24>
    fc5c:	ldrd	r2, r3, [r6]
    fc60:	cmp	r3, sl
    fc62:	it	eq
    fc64:	cmpeq	r2, r9
    fc66:	bne.n	fc1c <btrfs_mksubvol@@Base+0xd4>
    fc68:	ldrb	r3, [r6, #8]
    fc6a:	cmp	r3, #96	; 0x60
    fc6c:	bne.n	fc1c <btrfs_mksubvol@@Base+0xd4>
    fc6e:	ldr.w	r3, [r6, #9]
    fc72:	ldr.w	r2, [r6, #13]
    fc76:	adds	r3, #1
    fc78:	str	r3, [sp, #48]	; 0x30
    fc7a:	adc.w	r3, r2, #0
    fc7e:	b.n	fc22 <btrfs_mksubvol@@Base+0xda>
    fc80:	add.w	r6, sp, #93	; 0x5d
    fc84:	add.w	fp, sp, #84	; 0x54
    fc88:	movs	r7, #0
    fc8a:	movs	r3, #1
    fc8c:	strd	r9, sl, [fp]
    fc90:	mov	r1, r5
    fc92:	strb.w	r3, [fp, #8]
    fc96:	strb	r7, [r6, #0]
    fc98:	strb	r7, [r6, #1]
    fc9a:	strb	r7, [r6, #2]
    fc9c:	strb	r7, [r6, #3]
    fc9e:	strb	r7, [r6, #4]
    fca0:	strb	r7, [r6, #5]
    fca2:	strb	r7, [r6, #6]
    fca4:	strb	r7, [r6, #7]
    fca6:	str	r3, [sp, #0]
    fca8:	mov	r3, fp
    fcaa:	str	r2, [sp, #68]	; 0x44
    fcac:	bl	2dec0 <btrfs_lookup_inode@@Base>
    fcb0:	ldr	r2, [sp, #68]	; 0x44
    fcb2:	str	r0, [sp, #44]	; 0x2c
    fcb4:	cbz	r0, fcc2 <btrfs_mksubvol@@Base+0x17a>
    fcb6:	str	r0, [sp, #0]
    fcb8:	mov	r2, r9
    fcba:	ldr	r0, [pc, #484]	; (fea0 <btrfs_mksubvol@@Base+0x358>)
    fcbc:	mov	r3, sl
    fcbe:	add	r0, pc
    fcc0:	b.n	fbf4 <btrfs_mksubvol@@Base+0xac>
    fcc2:	ldr	r7, [r2, #0]
    fcc4:	add.w	r3, r7, #96	; 0x60
    fcc8:	str	r3, [sp, #68]	; 0x44
    fcca:	ldr	r1, [sp, #68]	; 0x44
    fccc:	ldr	r3, [r2, #32]
    fcce:	movs	r2, #25
    fcd0:	mla	r3, r2, r3, r1
    fcd4:	vmov	r1, s16
    fcd8:	mov	r2, r4
    fcda:	ldr.w	r3, [r3, #118]	; 0x76
    fcde:	str	r3, [sp, #72]	; 0x48
    fce0:	ldr	r3, [sp, #56]	; 0x38
    fce2:	str.w	r3, [fp]
    fce6:	ldr	r3, [sp, #60]	; 0x3c
    fce8:	str.w	r3, [fp, #4]
    fcec:	mov.w	r3, #4294967295	; 0xffffffff
    fcf0:	strb	r3, [r6, #0]
    fcf2:	strb	r3, [r6, #1]
    fcf4:	strb	r3, [r6, #2]
    fcf6:	strb	r3, [r6, #3]
    fcf8:	strb	r3, [r6, #4]
    fcfa:	strb	r3, [r6, #5]
    fcfc:	strb	r3, [r6, #6]
    fcfe:	strb	r3, [r6, #7]
    fd00:	add	r6, sp, #172	; 0xac
    fd02:	movs	r3, #132	; 0x84
    fd04:	strb.w	r3, [fp, #8]
    fd08:	mov	r0, r6
    fd0a:	mov.w	r3, #256	; 0x100
    fd0e:	blx	8798 <__memcpy_chk@plt>
    fd12:	ldr	r3, [sp, #76]	; 0x4c
    fd14:	cbz	r3, fd78 <btrfs_mksubvol@@Base+0x230>
    fd16:	ldr.w	fp, [pc, #396]	; fea4 <btrfs_mksubvol@@Base+0x35c>
    fd1a:	mov	r4, r6
    fd1c:	add	fp, pc
    fd1e:	ldr	r3, [sp, #48]	; 0x30
    fd20:	mov	r2, r4
    fd22:	mov	r1, r5
    fd24:	mov	r0, r8
    fd26:	strd	r9, sl, [sp]
    fd2a:	str	r3, [sp, #16]
    fd2c:	ldr	r3, [sp, #52]	; 0x34
    fd2e:	str	r3, [sp, #20]
    fd30:	movs	r3, #2
    fd32:	str	r3, [sp, #12]
    fd34:	add	r3, sp, #84	; 0x54
    fd36:	str	r3, [sp, #8]
    fd38:	ldr	r3, [sp, #40]	; 0x28
    fd3a:	bl	96a8 <btrfs_insert_dir_item@@Base>
    fd3e:	cmn.w	r0, #17
    fd42:	mov	r6, r0
    fd44:	bne.n	fd98 <btrfs_mksubvol@@Base+0x250>
    fd46:	ldr	r3, [sp, #44]	; 0x2c
    fd48:	movs	r2, #1
    fd4a:	mov	r0, r4
    fd4c:	str	r3, [sp, #8]
    fd4e:	vmov	r3, s16
    fd52:	strd	fp, r3, [sp]
    fd56:	mov.w	r3, #256	; 0x100
    fd5a:	mov	r1, r3
    fd5c:	blx	8bc0 <__snprintf_chk@plt>
    fd60:	subs	r3, r0, #1
    fd62:	str	r0, [sp, #40]	; 0x28
    fd64:	cmp	r3, #254	; 0xfe
    fd66:	bhi.w	fc48 <btrfs_mksubvol@@Base+0x100>
    fd6a:	ldr	r3, [sp, #44]	; 0x2c
    fd6c:	adds	r3, #1
    fd6e:	str	r3, [sp, #44]	; 0x2c
    fd70:	cmp.w	r3, #1024	; 0x400
    fd74:	bne.n	fd1e <btrfs_mksubvol@@Base+0x1d6>
    fd76:	b.n	fc48 <btrfs_mksubvol@@Base+0x100>
    fd78:	ldr	r3, [sp, #48]	; 0x30
    fd7a:	mov	r2, r6
    fd7c:	mov	r1, r5
    fd7e:	mov	r0, r8
    fd80:	strd	r9, sl, [sp]
    fd84:	str	r3, [sp, #16]
    fd86:	ldr	r3, [sp, #52]	; 0x34
    fd88:	str	r3, [sp, #20]
    fd8a:	movs	r3, #2
    fd8c:	strd	fp, r3, [sp, #8]
    fd90:	mov	r3, r4
    fd92:	bl	96a8 <btrfs_insert_dir_item@@Base>
    fd96:	mov	r6, r0
    fd98:	cmp	r6, #0
    fd9a:	bne.w	fc48 <btrfs_mksubvol@@Base+0x100>
    fd9e:	ldr	r3, [sp, #72]	; 0x48
    fda0:	add	r4, sp, #172	; 0xac
    fda2:	ldr	r2, [sp, #68]	; 0x44
    fda4:	adds	r3, #101	; 0x65
    fda6:	add	r2, r3
    fda8:	mov	r3, r2
    fdaa:	ldr	r0, [r2, #16]
    fdac:	ldr	r1, [r2, #20]
    fdae:	ldr	r2, [sp, #40]	; 0x28
    fdb0:	lsls	r2, r2, #1
    fdb2:	adds	r0, r0, r2
    fdb4:	str	r0, [r3, #16]
    fdb6:	adc.w	r1, r1, r2, asr #31
    fdba:	mov	r0, r7
    fdbc:	str	r1, [r3, #20]
    fdbe:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
    fdc2:	add	r0, sp, #104	; 0x68
    fdc4:	bl	18558 <btrfs_release_path@@Base>
    fdc8:	ldr	r3, [sp, #40]	; 0x28
    fdca:	ldr.w	r2, [r5, #447]	; 0x1bf
    fdce:	mov	r0, r8
    fdd0:	vmov	r1, s17
    fdd4:	str	r3, [sp, #36]	; 0x24
    fdd6:	ldr	r3, [sp, #48]	; 0x30
    fdd8:	str	r4, [sp, #32]
    fdda:	strd	r9, sl, [sp, #16]
    fdde:	str	r3, [sp, #24]
    fde0:	ldr	r3, [sp, #52]	; 0x34
    fde2:	str	r3, [sp, #28]
    fde4:	ldr.w	r3, [r5, #451]	; 0x1c3
    fde8:	strd	r2, r3, [sp, #8]
    fdec:	movs	r3, #144	; 0x90
    fdee:	str	r3, [sp, #0]
    fdf0:	ldrd	r2, r3, [sp, #56]	; 0x38
    fdf4:	bl	28328 <btrfs_add_root_ref@@Base>
    fdf8:	ldr.w	r2, [r5, #447]	; 0x1bf
    fdfc:	ldr.w	r3, [r5, #451]	; 0x1c3
    fe00:	cbz	r0, fe10 <btrfs_mksubvol@@Base+0x2c8>
    fe02:	str	r0, [sp, #0]
    fe04:	ldr	r0, [pc, #160]	; (fea8 <btrfs_mksubvol@@Base+0x360>)
    fe06:	add	r0, pc
    fe08:	bl	17b7c <__btrfs_error@@Base>
    fe0c:	mov	r7, r6
    fe0e:	b.n	fbf8 <btrfs_mksubvol@@Base+0xb0>
    fe10:	ldr	r1, [sp, #40]	; 0x28
    fe12:	mov	r0, r8
    fe14:	strd	r9, sl, [sp, #16]
    fe18:	strd	r4, r1, [sp, #32]
    fe1c:	ldr	r1, [sp, #48]	; 0x30
    fe1e:	str	r1, [sp, #24]
    fe20:	ldr	r1, [sp, #52]	; 0x34
    fe22:	str	r1, [sp, #28]
    fe24:	ldr	r1, [sp, #56]	; 0x38
    fe26:	str	r1, [sp, #8]
    fe28:	ldr	r1, [sp, #60]	; 0x3c
    fe2a:	str	r1, [sp, #12]
    fe2c:	movs	r1, #156	; 0x9c
    fe2e:	str	r1, [sp, #0]
    fe30:	vmov	r1, s17
    fe34:	bl	28328 <btrfs_add_root_ref@@Base>
    fe38:	cbz	r0, fe4a <btrfs_mksubvol@@Base+0x302>
    fe3a:	str	r0, [sp, #0]
    fe3c:	ldr	r0, [pc, #108]	; (feac <btrfs_mksubvol@@Base+0x364>)
    fe3e:	ldr.w	r2, [r5, #447]	; 0x1bf
    fe42:	ldr.w	r3, [r5, #451]	; 0x1c3
    fe46:	add	r0, pc
    fe48:	b.n	fe08 <btrfs_mksubvol@@Base+0x2c0>
    fe4a:	mov	r1, r5
    fe4c:	mov	r0, r8
    fe4e:	bl	2b8fc <btrfs_commit_transaction@@Base>
    fe52:	mov	r1, r0
    fe54:	cbz	r0, fe60 <btrfs_mksubvol@@Base+0x318>
    fe56:	ldr	r0, [pc, #88]	; (feb0 <btrfs_mksubvol@@Base+0x368>)
    fe58:	add	r0, pc
    fe5a:	bl	17b7c <__btrfs_error@@Base>
    fe5e:	b.n	fe0c <btrfs_mksubvol@@Base+0x2c4>
    fe60:	ldr	r0, [sp, #64]	; 0x40
    fe62:	add	r1, sp, #84	; 0x54
    fe64:	bl	1e106 <btrfs_read_fs_root@@Base>
    fe68:	cmn.w	r0, #4096	; 0x1000
    fe6c:	mov	r7, r0
    fe6e:	bls.w	fbf8 <btrfs_mksubvol@@Base+0xb0>
    fe72:	mov	r1, r0
    fe74:	ldr	r0, [pc, #60]	; (feb4 <btrfs_mksubvol@@Base+0x36c>)
    fe76:	add	r0, pc
    fe78:	b.n	fe5a <btrfs_mksubvol@@Base+0x312>
    fe7a:	movs	r7, #0
    fe7c:	b.n	fbfe <btrfs_mksubvol@@Base+0xb6>
    fe7e:	mov	r0, r7
    fe80:	add	sp, #436	; 0x1b4
    fe82:	vpop	{d8}
    fe86:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fe8a:	nop
    fe8c:	strh	r2, [r3, r0]
    fe8e:	movs	r5, r0
    fe90:	lsls	r0, r5, #8
    fe92:	movs	r0, r0
    fe94:	add	sp, #284	; 0x11c
    fe96:	movs	r2, r0
    fe98:	str	r6, [r7, r5]
    fe9a:	movs	r5, r0
    fe9c:	add	sp, #136	; 0x88
    fe9e:	movs	r2, r0
    fea0:	add	r7, sp, #776	; 0x308
    fea2:	movs	r2, r0
    fea4:	add	r7, sp, #552	; 0x228
    fea6:	movs	r2, r0
    fea8:	add	r6, sp, #660	; 0x294
    feaa:	movs	r2, r0
    feac:	add	r6, sp, #564	; 0x234
    feae:	movs	r2, r0
    feb0:	add	r6, sp, #636	; 0x27c
    feb2:	movs	r2, r0
    feb4:	add	r6, sp, #636	; 0x27c
    feb6:	movs	r2, r0
    feb8:	push	{r4, lr}
    feba:	mov	r4, r1
    febc:	ldr	r1, [pc, #84]	; (ff14 <btrfs_mksubvol@@Base+0x3cc>)
    febe:	sub	sp, #24
    fec0:	ldr	r3, [pc, #84]	; (ff18 <btrfs_mksubvol@@Base+0x3d0>)
    fec2:	add	r1, pc
    fec4:	ldr	r3, [r1, r3]
    fec6:	mov	r1, sp
    fec8:	ldr	r3, [r3, #0]
    feca:	str	r3, [sp, #20]
    fecc:	mov.w	r3, #0
    fed0:	movs	r3, #25
    fed2:	muls	r2, r3
    fed4:	movs	r3, #17
    fed6:	adds	r2, #101	; 0x65
    fed8:	bl	17a1a <read_extent_buffer@@Base>
    fedc:	ldr.w	r3, [sp, #13]
    fee0:	ldr.w	r2, [sp, #9]
    fee4:	str.w	r3, [r4, #13]
    fee8:	ldrb.w	r3, [sp, #8]
    feec:	str.w	r2, [r4, #9]
    fef0:	ldr	r2, [pc, #40]	; (ff1c <btrfs_mksubvol@@Base+0x3d4>)
    fef2:	strb	r3, [r4, #8]
    fef4:	ldr	r3, [sp, #0]
    fef6:	add	r2, pc
    fef8:	str	r3, [r4, #0]
    fefa:	ldr	r3, [sp, #4]
    fefc:	str	r3, [r4, #4]
    fefe:	ldr	r3, [pc, #24]	; (ff18 <btrfs_mksubvol@@Base+0x3d0>)
    ff00:	ldr	r3, [r2, r3]
    ff02:	ldr	r2, [r3, #0]
    ff04:	ldr	r3, [sp, #20]
    ff06:	eors	r2, r3
    ff08:	beq.n	ff0e <btrfs_mksubvol@@Base+0x3c6>
    ff0a:	blx	8708 <__stack_chk_fail@plt>
    ff0e:	add	sp, #24
    ff10:	pop	{r4, pc}
    ff12:	nop
    ff14:	ldr	r6, [pc, #760]	; (10210 <btrfs_read_file@@Base+0xe8>)
    ff16:	movs	r5, r0
    ff18:	lsls	r0, r5, #8
    ff1a:	movs	r0, r0
    ff1c:	ldr	r6, [pc, #552]	; (10148 <btrfs_read_file@@Base+0x20>)
    ff1e:	movs	r5, r0

0000ff20 <btrfs_get_extent@@Base>:
    ff20:	ldr.w	ip, [pc, #380]	; 100a0 <btrfs_get_extent@@Base+0x180>
    ff24:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ff28:	mov	r4, r2
    ff2a:	ldr	r2, [pc, #376]	; (100a4 <btrfs_get_extent@@Base+0x184>)
    ff2c:	add	ip, pc
    ff2e:	sub	sp, #76	; 0x4c
    ff30:	mov	r5, r1
    ff32:	mov.w	r9, #108	; 0x6c
    ff36:	ldr.w	r2, [ip, r2]
    ff3a:	ldr	r3, [sp, #136]	; 0x88
    ff3c:	ldr	r2, [r2, #0]
    ff3e:	str	r2, [sp, #68]	; 0x44
    ff40:	mov.w	r2, #0
    ff44:	ldr	r2, [sp, #120]	; 0x78
    ff46:	ldrd	r6, r7, [sp, #112]	; 0x70
    ff4a:	ldrd	r8, sl, [sp, #128]	; 0x80
    ff4e:	str.w	r2, [sp, #37]	; 0x25
    ff52:	ldr	r2, [sp, #124]	; 0x7c
    ff54:	strd	r6, r7, [sp, #28]
    ff58:	strb.w	r9, [sp, #36]	; 0x24
    ff5c:	str.w	r2, [sp, #41]	; 0x29
    ff60:	subs	r2, r3, #0
    ff62:	it	ne
    ff64:	movne	r2, #1
    ff66:	strd	r3, r2, [sp]
    ff6a:	add	r2, sp, #28
    ff6c:	mov	r3, r4
    ff6e:	bl	1a93c <btrfs_search_slot@@Base>
    ff72:	subs.w	fp, r0, #0
    ff76:	ble.w	1008a <btrfs_get_extent@@Base+0x16a>
    ff7a:	mov	r2, r6
    ff7c:	mov	r3, r7
    ff7e:	mov	r1, r4
    ff80:	mov	r0, r5
    ff82:	str.w	r9, [sp]
    ff86:	bl	1bff4 <btrfs_previous_item@@Base>
    ff8a:	subs.w	fp, r0, #0
    ff8e:	blt.n	10076 <btrfs_get_extent@@Base+0x156>
    ff90:	beq.n	1001e <btrfs_get_extent@@Base+0xfe>
    ff92:	ldr	r2, [r4, #0]
    ff94:	ldr	r3, [r4, #32]
    ff96:	adds	r3, #1
    ff98:	str	r3, [r4, #32]
    ff9a:	ldr.w	r2, [r2, #192]	; 0xc0
    ff9e:	cmp	r3, r2
    ffa0:	bcc.n	ffb8 <btrfs_get_extent@@Base+0x98>
    ffa2:	movs	r3, #0
    ffa4:	mov	r1, r4
    ffa6:	strb.w	r3, [r4, #65]	; 0x41
    ffaa:	ldr.w	r0, [r5, #464]	; 0x1d0
    ffae:	bl	1bd70 <btrfs_next_sibling_tree_block@@Base>
    ffb2:	mov	fp, r0
    ffb4:	cmp	r0, #0
    ffb6:	bne.n	10076 <btrfs_get_extent@@Base+0x156>
    ffb8:	ldr	r2, [r4, #32]
    ffba:	add	r1, sp, #48	; 0x30
    ffbc:	ldr	r0, [r4, #0]
    ffbe:	bl	feb8 <btrfs_mksubvol@@Base+0x370>
    ffc2:	ldrd	r2, r3, [sp, #48]	; 0x30
    ffc6:	cmp	r3, r7
    ffc8:	it	eq
    ffca:	cmpeq	r2, r6
    ffcc:	bne.n	1008c <btrfs_get_extent@@Base+0x16c>
    ffce:	ldrb.w	r3, [sp, #56]	; 0x38
    ffd2:	cmp	r3, #108	; 0x6c
    ffd4:	bne.n	1008c <btrfs_get_extent@@Base+0x16c>
    ffd6:	ldr	r1, [sp, #120]	; 0x78
    ffd8:	ldr.w	r3, [sp, #61]	; 0x3d
    ffdc:	adds.w	r1, r1, r8
    ffe0:	str	r1, [sp, #16]
    ffe2:	ldr	r1, [sp, #124]	; 0x7c
    ffe4:	ldr.w	r2, [sp, #57]	; 0x39
    ffe8:	adc.w	r1, r1, sl
    ffec:	str	r1, [sp, #20]
    ffee:	ldrd	r0, r1, [sp, #16]
    fff2:	cmp	r3, r1
    fff4:	ldr	r3, [r4, #32]
    fff6:	it	eq
    fff8:	cmpeq	r2, r0
    fffa:	ite	cs
    fffc:	movcs.w	fp, #1
   10000:	movcc.w	fp, #0
   10004:	cmp	r3, #0
   10006:	bne.n	10076 <btrfs_get_extent@@Base+0x156>
   10008:	mov	r1, r4
   1000a:	mov	r0, r5
   1000c:	bl	1bce8 <btrfs_prev_leaf@@Base>
   10010:	cmp	r0, #0
   10012:	bne.n	10092 <btrfs_get_extent@@Base+0x172>
   10014:	ldr	r3, [r4, #0]
   10016:	ldr.w	r3, [r3, #192]	; 0xc0
   1001a:	str	r3, [r4, #32]
   1001c:	b.n	10076 <btrfs_get_extent@@Base+0x156>
   1001e:	ldr	r2, [r4, #32]
   10020:	add	r1, sp, #48	; 0x30
   10022:	ldr	r0, [r4, #0]
   10024:	bl	feb8 <btrfs_mksubvol@@Base+0x370>
   10028:	ldrd	r2, r3, [sp, #48]	; 0x30
   1002c:	cmp	r3, r7
   1002e:	it	eq
   10030:	cmpeq	r2, r6
   10032:	bne.n	ff92 <btrfs_get_extent@@Base+0x72>
   10034:	ldrb.w	r3, [sp, #56]	; 0x38
   10038:	cmp	r3, #108	; 0x6c
   1003a:	bne.n	ff92 <btrfs_get_extent@@Base+0x72>
   1003c:	ldr	r3, [r4, #0]
   1003e:	movs	r1, #25
   10040:	ldr	r2, [r4, #32]
   10042:	adds	r3, #96	; 0x60
   10044:	mla	r2, r1, r2, r3
   10048:	ldr.w	r1, [sp, #61]	; 0x3d
   1004c:	ldr.w	r2, [r2, #118]	; 0x76
   10050:	add	r3, r2
   10052:	ldr.w	r2, [r3, #109]!
   10056:	ldr	r0, [r3, #4]
   10058:	ldr.w	r3, [sp, #57]	; 0x39
   1005c:	adds	r3, r2, r3
   1005e:	str	r3, [sp, #8]
   10060:	adc.w	r3, r0, r1
   10064:	str	r3, [sp, #12]
   10066:	ldrd	r0, r1, [sp, #8]
   1006a:	ldrd	r2, r3, [sp, #120]	; 0x78
   1006e:	cmp	r3, r1
   10070:	it	eq
   10072:	cmpeq	r2, r0
   10074:	bcs.n	ff92 <btrfs_get_extent@@Base+0x72>
   10076:	ldr	r2, [pc, #48]	; (100a8 <btrfs_get_extent@@Base+0x188>)
   10078:	ldr	r3, [pc, #40]	; (100a4 <btrfs_get_extent@@Base+0x184>)
   1007a:	add	r2, pc
   1007c:	ldr	r3, [r2, r3]
   1007e:	ldr	r2, [r3, #0]
   10080:	ldr	r3, [sp, #68]	; 0x44
   10082:	eors	r2, r3
   10084:	beq.n	10096 <btrfs_get_extent@@Base+0x176>
   10086:	blx	8708 <__stack_chk_fail@plt>
   1008a:	bne.n	10076 <btrfs_get_extent@@Base+0x156>
   1008c:	mov.w	fp, #1
   10090:	b.n	10076 <btrfs_get_extent@@Base+0x156>
   10092:	mov	fp, r0
   10094:	b.n	10076 <btrfs_get_extent@@Base+0x156>
   10096:	mov	r0, fp
   10098:	add	sp, #76	; 0x4c
   1009a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1009e:	nop
   100a0:	ldr	r6, [pc, #336]	; (101f4 <btrfs_read_file@@Base+0xcc>)
   100a2:	movs	r5, r0
   100a4:	lsls	r0, r5, #8
   100a6:	movs	r0, r0
   100a8:	ldr	r5, [pc, #24]	; (100c4 <btrfs_punch_hole@@Base+0x18>)
   100aa:	movs	r5, r0

000100ac <btrfs_punch_hole@@Base>:
   100ac:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   100b0:	sub	sp, #40	; 0x28
   100b2:	mov	sl, r0
   100b4:	mov	r5, r2
   100b6:	ldrd	r8, r9, [sp, #80]	; 0x50
   100ba:	mov	r7, r3
   100bc:	str	r1, [sp, #36]	; 0x24
   100be:	bl	18550 <btrfs_alloc_path@@Base>
   100c2:	mov	r4, r0
   100c4:	cbz	r0, 10122 <btrfs_punch_hole@@Base+0x76>
   100c6:	ldrd	r2, r3, [sp, #72]	; 0x48
   100ca:	movs	r0, #0
   100cc:	ldr	r1, [sp, #36]	; 0x24
   100ce:	str	r0, [sp, #24]
   100d0:	strd	r2, r3, [sp, #8]
   100d4:	mov	r2, r4
   100d6:	strd	r8, r9, [sp, #16]
   100da:	strd	r5, r7, [sp]
   100de:	bl	ff20 <btrfs_get_extent@@Base>
   100e2:	subs	r6, r0, #0
   100e4:	blt.n	1010e <btrfs_punch_hole@@Base+0x62>
   100e6:	beq.n	1011c <btrfs_punch_hole@@Base+0x70>
   100e8:	movs	r2, #0
   100ea:	movs	r3, #0
   100ec:	strd	r2, r3, [sp, #16]
   100f0:	mov	r0, sl
   100f2:	strd	r2, r3, [sp, #8]
   100f6:	ldrd	r2, r3, [sp, #72]	; 0x48
   100fa:	ldr	r1, [sp, #36]	; 0x24
   100fc:	strd	r8, r9, [sp, #24]
   10100:	strd	r2, r3, [sp]
   10104:	mov	r2, r5
   10106:	mov	r3, r7
   10108:	bl	2e7ca <btrfs_insert_file_extent@@Base>
   1010c:	mov	r6, r0
   1010e:	mov	r0, r4
   10110:	bl	1857e <btrfs_free_path@@Base>
   10114:	mov	r0, r6
   10116:	add	sp, #40	; 0x28
   10118:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1011c:	mvn.w	r6, #16
   10120:	b.n	1010e <btrfs_punch_hole@@Base+0x62>
   10122:	mvn.w	r6, #11
   10126:	b.n	10114 <btrfs_punch_hole@@Base+0x68>

00010128 <btrfs_read_file@@Base>:
   10128:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1012c:	mov	r6, r0
   1012e:	vpush	{d8}
   10132:	sub	sp, #180	; 0xb4
   10134:	ldr.w	r8, [r0, #464]	; 0x1d0
   10138:	strd	r2, r3, [sp, #8]
   1013c:	ldr	r3, [sp, #236]	; 0xec
   1013e:	ldr	r2, [pc, #856]	; (10498 <btrfs_read_file@@Base+0x370>)
   10140:	ldr.w	r4, [r8, #388]	; 0x184
   10144:	vmov	s16, r3
   10148:	ldr	r3, [pc, #848]	; (1049c <btrfs_read_file@@Base+0x374>)
   1014a:	add	r2, pc
   1014c:	ldrd	sl, fp, [sp, #224]	; 0xe0
   10150:	ldr	r3, [r2, r3]
   10152:	movs	r2, #0
   10154:	ldr	r3, [r3, #0]
   10156:	str	r3, [sp, #172]	; 0xac
   10158:	mov.w	r3, #0
   1015c:	ldr.w	r3, [r8, #308]	; 0x134
   10160:	ldr.w	r3, [r3, #188]	; 0xbc
   10164:	str	r3, [sp, #68]	; 0x44
   10166:	adds.w	r3, r4, #4294967295	; 0xffffffff
   1016a:	adc.w	r2, r2, #4294967295	; 0xffffffff
   1016e:	and.w	r0, r3, sl
   10172:	and.w	r1, r2, fp
   10176:	orrs.w	r3, r0, r1
   1017a:	bne.n	10184 <btrfs_read_file@@Base+0x5c>
   1017c:	ldr	r3, [sp, #232]	; 0xe8
   1017e:	subs	r5, r4, #1
   10180:	ands	r5, r3
   10182:	beq.n	101ac <btrfs_read_file@@Base+0x84>
   10184:	ldr	r2, [pc, #792]	; (104a0 <btrfs_read_file@@Base+0x378>)
   10186:	mov	r1, r4
   10188:	ldr	r0, [pc, #792]	; (104a4 <btrfs_read_file@@Base+0x37c>)
   1018a:	mvn.w	r4, #21
   1018e:	add	r2, pc
   10190:	add	r0, pc
   10192:	bl	17b00 <__btrfs_warning@@Base>
   10196:	ldr	r2, [pc, #784]	; (104a8 <btrfs_read_file@@Base+0x380>)
   10198:	ldr	r3, [pc, #768]	; (1049c <btrfs_read_file@@Base+0x374>)
   1019a:	add	r2, pc
   1019c:	ldr	r3, [r2, r3]
   1019e:	ldr	r2, [r3, #0]
   101a0:	ldr	r3, [sp, #172]	; 0xac
   101a2:	eors	r2, r3
   101a4:	beq.w	1048a <btrfs_read_file@@Base+0x362>
   101a8:	blx	8708 <__stack_chk_fail@plt>
   101ac:	add.w	r9, sp, #104	; 0x68
   101b0:	movs	r7, #108	; 0x6c
   101b2:	mov	r0, r9
   101b4:	bl	18548 <btrfs_init_path@@Base>
   101b8:	ldr	r3, [sp, #8]
   101ba:	add	r2, sp, #84	; 0x54
   101bc:	mov	r1, r6
   101be:	mov	r0, r5
   101c0:	strd	r5, r5, [sp]
   101c4:	str	r3, [sp, #84]	; 0x54
   101c6:	ldr	r3, [sp, #12]
   101c8:	str.w	sl, [sp, #93]	; 0x5d
   101cc:	str.w	fp, [sp, #97]	; 0x61
   101d0:	str	r3, [sp, #88]	; 0x58
   101d2:	mov	r3, r9
   101d4:	strb.w	r7, [sp, #92]	; 0x5c
   101d8:	bl	1a93c <btrfs_search_slot@@Base>
   101dc:	subs	r4, r0, #0
   101de:	blt.w	10374 <btrfs_read_file@@Base+0x24c>
   101e2:	beq.n	101f8 <btrfs_read_file@@Base+0xd0>
   101e4:	ldrd	r2, r3, [sp, #8]
   101e8:	mov	r1, r9
   101ea:	mov	r0, r6
   101ec:	str	r7, [sp, #0]
   101ee:	bl	1bff4 <btrfs_previous_item@@Base>
   101f2:	subs	r4, r0, #0
   101f4:	bgt.w	10484 <btrfs_read_file@@Base+0x35c>
   101f8:	ldr	r2, [sp, #232]	; 0xe8
   101fa:	movs	r1, #0
   101fc:	vmov	r0, s16
   10200:	movs	r5, #0
   10202:	blx	89bc <memset@plt+0x4>
   10206:	ldr	r3, [sp, #232]	; 0xe8
   10208:	adds.w	r2, sl, r3
   1020c:	adc.w	r3, fp, r3, asr #31
   10210:	strd	r2, r3, [sp, #40]	; 0x28
   10214:	ldr	r7, [sp, #136]	; 0x88
   10216:	add	r1, sp, #84	; 0x54
   10218:	ldr	r0, [sp, #104]	; 0x68
   1021a:	mov	r2, r7
   1021c:	str	r0, [sp, #52]	; 0x34
   1021e:	bl	feb8 <btrfs_mksubvol@@Base+0x370>
   10222:	ldrd	r2, r3, [sp, #84]	; 0x54
   10226:	ldrd	r0, r1, [sp, #8]
   1022a:	cmp	r1, r3
   1022c:	it	eq
   1022e:	cmpeq	r0, r2
   10230:	bcc.n	102c4 <btrfs_read_file@@Base+0x19c>
   10232:	ldrb.w	r1, [sp, #92]	; 0x5c
   10236:	cmp	r1, #108	; 0x6c
   10238:	bne.w	103f6 <btrfs_read_file@@Base+0x2ce>
   1023c:	ldrd	r0, r1, [sp, #8]
   10240:	cmp	r3, r1
   10242:	it	eq
   10244:	cmpeq	r2, r0
   10246:	bne.w	103f6 <btrfs_read_file@@Base+0x2ce>
   1024a:	ldrd	r0, r1, [sp, #40]	; 0x28
   1024e:	ldr.w	r3, [sp, #97]	; 0x61
   10252:	ldr.w	r2, [sp, #93]	; 0x5d
   10256:	cmp	r3, r1
   10258:	it	eq
   1025a:	cmpeq	r2, r0
   1025c:	bcs.n	102c4 <btrfs_read_file@@Base+0x19c>
   1025e:	ldr	r0, [sp, #52]	; 0x34
   10260:	movs	r1, #25
   10262:	add.w	ip, r0, #96	; 0x60
   10266:	mla	r7, r1, r7, ip
   1026a:	ldr.w	r1, [r7, #118]	; 0x76
   1026e:	add.w	r7, r1, #101	; 0x65
   10272:	add	ip, r7
   10274:	str	r1, [sp, #52]	; 0x34
   10276:	ldrb.w	r7, [ip, #16]
   1027a:	cmp	r7, #0
   1027c:	bne.w	1047e <btrfs_read_file@@Base+0x356>
   10280:	ldrb.w	r7, [ip, #20]
   10284:	cmp	r7, #0
   10286:	bne.n	10382 <btrfs_read_file@@Base+0x25a>
   10288:	ldr.w	r7, [ip, #8]
   1028c:	ldr.w	lr, [ip, #12]
   10290:	adds	r1, r2, r7
   10292:	str	r1, [sp, #56]	; 0x38
   10294:	adc.w	r3, r3, lr
   10298:	str	r3, [sp, #60]	; 0x3c
   1029a:	ldrd	r2, r3, [sp, #56]	; 0x38
   1029e:	cmp	fp, r3
   102a0:	it	eq
   102a2:	cmpeq	sl, r2
   102a4:	bcs.w	103f6 <btrfs_read_file@@Base+0x2ce>
   102a8:	ldr	r2, [sp, #52]	; 0x34
   102aa:	mov	r3, r7
   102ac:	vmov	r1, s16
   102b0:	subs	r7, #1
   102b2:	adds	r2, #122	; 0x7a
   102b4:	adds	r5, #1
   102b6:	bl	17a1a <read_extent_buffer@@Base>
   102ba:	ldr.w	r3, [r8, #388]	; 0x184
   102be:	subs	r3, #1
   102c0:	orrs	r3, r7
   102c2:	add	r5, r3
   102c4:	ldr	r1, [sp, #68]	; 0x44
   102c6:	movs	r7, #0
   102c8:	mov	r3, r7
   102ca:	and.w	r2, r1, #512	; 0x200
   102ce:	orrs	r3, r2
   102d0:	beq.n	10374 <btrfs_read_file@@Base+0x24c>
   102d2:	mov	r0, r9
   102d4:	bl	18558 <btrfs_release_path@@Base>
   102d8:	ldr	r3, [sp, #8]
   102da:	mov	r2, r9
   102dc:	mov	r1, r6
   102de:	mov	r0, r7
   102e0:	str	r7, [sp, #0]
   102e2:	str	r3, [sp, #84]	; 0x54
   102e4:	ldr	r3, [sp, #12]
   102e6:	strb.w	r7, [sp, #93]	; 0x5d
   102ea:	strb.w	r7, [sp, #94]	; 0x5e
   102ee:	str	r3, [sp, #88]	; 0x58
   102f0:	movs	r3, #1
   102f2:	strb.w	r3, [sp, #92]	; 0x5c
   102f6:	add	r3, sp, #84	; 0x54
   102f8:	strb.w	r7, [sp, #95]	; 0x5f
   102fc:	strb.w	r7, [sp, #96]	; 0x60
   10300:	strb.w	r7, [sp, #97]	; 0x61
   10304:	strb.w	r7, [sp, #98]	; 0x62
   10308:	strb.w	r7, [sp, #99]	; 0x63
   1030c:	strb.w	r7, [sp, #100]	; 0x64
   10310:	bl	2dec0 <btrfs_lookup_inode@@Base>
   10314:	subs	r4, r0, #0
   10316:	blt.n	10374 <btrfs_read_file@@Base+0x24c>
   10318:	bne.w	10484 <btrfs_read_file@@Base+0x35c>
   1031c:	ldr	r3, [sp, #104]	; 0x68
   1031e:	movs	r1, #25
   10320:	ldr	r2, [sp, #136]	; 0x88
   10322:	adds	r3, #96	; 0x60
   10324:	ldr.w	r5, [r8, #388]	; 0x184
   10328:	mla	r2, r1, r2, r3
   1032c:	subs	r5, #1
   1032e:	ldr.w	r2, [r2, #118]	; 0x76
   10332:	add	r3, r2
   10334:	ldr.w	r2, [r3, #117]!
   10338:	adds.w	r2, r2, #4294967295	; 0xffffffff
   1033c:	ldr	r1, [r3, #4]
   1033e:	ldr	r3, [sp, #232]	; 0xe8
   10340:	adc.w	r0, r1, #4294967295	; 0xffffffff
   10344:	orr.w	r1, r2, r5
   10348:	subs.w	r1, r1, sl
   1034c:	sbc.w	r0, r0, fp
   10350:	adds	r1, #1
   10352:	str	r1, [sp, #32]
   10354:	adc.w	r1, r0, r7
   10358:	str	r1, [sp, #36]	; 0x24
   1035a:	asrs	r6, r3, #31
   1035c:	ldrd	r0, r1, [sp, #32]
   10360:	mov	r5, r3
   10362:	mov	r2, r3
   10364:	mov	r3, r6
   10366:	cmp	r6, r1
   10368:	it	eq
   1036a:	cmpeq	r5, r0
   1036c:	it	cc
   1036e:	strdcc	r2, r3, [sp, #32]
   10372:	ldr	r5, [sp, #32]
   10374:	add	r0, sp, #104	; 0x68
   10376:	cmp	r4, #0
   10378:	it	eq
   1037a:	moveq	r4, r5
   1037c:	bl	18558 <btrfs_release_path@@Base>
   10380:	b.n	10196 <btrfs_read_file@@Base+0x6e>
   10382:	mov	r0, ip
   10384:	ldr.w	r1, [r0, #45]!
   10388:	adds	r1, r1, r2
   1038a:	str	r1, [sp, #16]
   1038c:	ldr	r4, [r0, #4]
   1038e:	adc.w	r1, r4, r3
   10392:	str	r1, [sp, #20]
   10394:	ldrd	r0, r1, [sp, #16]
   10398:	cmp	fp, r1
   1039a:	it	eq
   1039c:	cmpeq	sl, r0
   1039e:	bcs.n	103f6 <btrfs_read_file@@Base+0x2ce>
   103a0:	cmp	fp, r3
   103a2:	mov	r0, fp
   103a4:	it	eq
   103a6:	cmpeq	sl, r2
   103a8:	mov	lr, sl
   103aa:	it	cc
   103ac:	movcc	r0, r3
   103ae:	ldr	r3, [sp, #40]	; 0x28
   103b0:	it	cc
   103b2:	movcc	lr, r2
   103b4:	ldrd	r1, r2, [sp, #40]	; 0x28
   103b8:	str	r3, [sp, #52]	; 0x34
   103ba:	ldr	r3, [sp, #44]	; 0x2c
   103bc:	str	r3, [sp, #64]	; 0x40
   103be:	ldrd	r3, r4, [sp, #16]
   103c2:	cmp	r4, r2
   103c4:	it	eq
   103c6:	cmpeq	r3, r1
   103c8:	itttt	cc
   103ca:	ldrcc	r3, [sp, #16]
   103cc:	strcc	r3, [sp, #52]	; 0x34
   103ce:	ldrcc	r3, [sp, #20]
   103d0:	strcc	r3, [sp, #64]	; 0x40
   103d2:	ldr	r3, [sp, #52]	; 0x34
   103d4:	subs.w	r3, r3, lr
   103d8:	str	r3, [sp, #24]
   103da:	ldr	r3, [sp, #64]	; 0x40
   103dc:	sbc.w	r3, r3, r0
   103e0:	cmp	r7, #2
   103e2:	str	r3, [sp, #28]
   103e4:	beq.n	103f2 <btrfs_read_file@@Base+0x2ca>
   103e6:	mov	r0, ip
   103e8:	ldr.w	r2, [r0, #29]!
   103ec:	ldr	r3, [r0, #4]
   103ee:	orrs	r3, r2
   103f0:	bne.n	10420 <btrfs_read_file@@Base+0x2f8>
   103f2:	ldr	r3, [sp, #24]
   103f4:	add	r5, r3
   103f6:	ldr	r2, [sp, #104]	; 0x68
   103f8:	movs	r7, #0
   103fa:	ldr	r3, [sp, #136]	; 0x88
   103fc:	adds	r3, #1
   103fe:	str	r3, [sp, #136]	; 0x88
   10400:	ldr.w	r2, [r2, #192]	; 0xc0
   10404:	cmp	r3, r2
   10406:	bcc.n	1047a <btrfs_read_file@@Base+0x352>
   10408:	ldr.w	r0, [r6, #464]	; 0x1d0
   1040c:	add	r1, sp, #104	; 0x68
   1040e:	strb.w	r7, [sp, #169]	; 0xa9
   10412:	bl	1bd70 <btrfs_next_sibling_tree_block@@Base>
   10416:	subs	r4, r0, #0
   10418:	ble.w	10214 <btrfs_read_file@@Base+0xec>
   1041c:	mov	r4, r7
   1041e:	b.n	102c4 <btrfs_read_file@@Base+0x19c>
   10420:	mov	r3, ip
   10422:	ldr.w	r4, [ip, #21]!
   10426:	ldr.w	r2, [r3, #37]!
   1042a:	movs	r7, #0
   1042c:	str	r2, [sp, #52]	; 0x34
   1042e:	ldrd	r1, r2, [sp, #24]
   10432:	ldr	r0, [r3, #4]
   10434:	ldr.w	r3, [ip, #4]
   10438:	strd	r1, r2, [sp, #72]	; 0x48
   1043c:	sub.w	r1, lr, sl
   10440:	ldr	r2, [sp, #52]	; 0x34
   10442:	str	r7, [sp, #4]
   10444:	add	r7, sp, #72	; 0x48
   10446:	adds	r2, r2, r4
   10448:	str	r7, [sp, #0]
   1044a:	adc.w	r3, r0, r3
   1044e:	vmov	r0, s16
   10452:	add	r1, r0
   10454:	mov	r0, r8
   10456:	bl	1caa8 <read_extent_data@@Base>
   1045a:	subs	r4, r0, #0
   1045c:	blt.w	102c4 <btrfs_read_file@@Base+0x19c>
   10460:	ldrd	r2, r3, [sp, #72]	; 0x48
   10464:	ldrd	r0, r1, [sp, #24]
   10468:	cmp	r3, r1
   1046a:	it	eq
   1046c:	cmpeq	r2, r0
   1046e:	beq.n	10476 <btrfs_read_file@@Base+0x34e>
   10470:	mvn.w	r4, #4
   10474:	b.n	10196 <btrfs_read_file@@Base+0x6e>
   10476:	add	r5, r2
   10478:	b.n	103f6 <btrfs_read_file@@Base+0x2ce>
   1047a:	mov	r4, r7
   1047c:	b.n	10214 <btrfs_read_file@@Base+0xec>
   1047e:	mvn.w	r4, #24
   10482:	b.n	102c4 <btrfs_read_file@@Base+0x19c>
   10484:	mvn.w	r4, #1
   10488:	b.n	10374 <btrfs_read_file@@Base+0x24c>
   1048a:	mov	r0, r4
   1048c:	add	sp, #180	; 0xb4
   1048e:	vpop	{d8}
   10492:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10496:	nop
   10498:	ldr	r4, [pc, #216]	; (10574 <btrfs_find_root_search@@Base+0xc8>)
   1049a:	movs	r5, r0
   1049c:	lsls	r0, r5, #8
   1049e:	movs	r0, r0
   104a0:	add	r3, sp, #868	; 0x364
   104a2:	movs	r2, r0
   104a4:	add	r3, sp, #644	; 0x284
   104a6:	movs	r2, r0
   104a8:	ldr	r3, [pc, #920]	; (10844 <btrfs_find_root_search@@Base+0x398>)
   104aa:	movs	r5, r0

000104ac <btrfs_find_root_search@@Base>:
   104ac:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   104b0:	sub	sp, #180	; 0xb4
   104b2:	mov	sl, r2
   104b4:	ldr	r2, [pc, #644]	; (1073c <btrfs_find_root_search@@Base+0x290>)
   104b6:	str	r3, [sp, #56]	; 0x38
   104b8:	mov	r7, r1
   104ba:	ldr	r3, [pc, #644]	; (10740 <btrfs_find_root_search@@Base+0x294>)
   104bc:	add	r2, pc
   104be:	movs	r1, #0
   104c0:	mov	r6, r0
   104c2:	add	r3, pc
   104c4:	str	r3, [sp, #60]	; 0x3c
   104c6:	ldr	r3, [pc, #636]	; (10744 <btrfs_find_root_search@@Base+0x298>)
   104c8:	ldr	r3, [r2, r3]
   104ca:	ldr	r3, [r3, #0]
   104cc:	str	r3, [sp, #172]	; 0xac
   104ce:	mov.w	r3, #0
   104d2:	ldr.w	r3, [r0, #308]	; 0x134
   104d6:	strd	r1, r1, [sp, #88]	; 0x58
   104da:	strd	r1, r1, [sp, #96]	; 0x60
   104de:	ldr.w	r3, [r3, #148]	; 0x94
   104e2:	strd	r1, r1, [sp, #36]	; 0x24
   104e6:	strd	r1, r1, [sp, #80]	; 0x50
   104ea:	str	r3, [sp, #44]	; 0x2c
   104ec:	ldrb.w	r3, [r0, #364]	; 0x16c
   104f0:	ubfx	r0, r3, #5, #1
   104f4:	orr.w	r3, r3, #32
   104f8:	str	r0, [sp, #72]	; 0x48
   104fa:	strb.w	r3, [r6, #364]	; 0x16c
   104fe:	ldrd	r2, r3, [r7]
   10502:	add	r1, sp, #88	; 0x58
   10504:	mov	r0, r6
   10506:	cmp	r3, #0
   10508:	it	eq
   1050a:	cmpeq	r2, #3
   1050c:	add	r2, sp, #96	; 0x60
   1050e:	ittee	ne
   10510:	movne	r4, #4
   10512:	movne	r5, #0
   10514:	moveq	r3, #2
   10516:	moveq	r4, #0
   10518:	ite	ne
   1051a:	strdne	r4, r5, [sp]
   1051e:	strdeq	r3, r4, [sp]
   10522:	bl	29d9c <btrfs_next_bg@@Base>
   10526:	cbz	r0, 10554 <btrfs_find_root_search@@Base+0xa8>
   10528:	adds	r3, r0, #2
   1052a:	ite	ne
   1052c:	movne	r4, r0
   1052e:	moveq	r4, #0
   10530:	ldrb.w	r3, [r6, #364]	; 0x16c
   10534:	ldr	r2, [sp, #72]	; 0x48
   10536:	bfi	r3, r2, #5, #1
   1053a:	ldr	r2, [pc, #524]	; (10748 <btrfs_find_root_search@@Base+0x29c>)
   1053c:	strb.w	r3, [r6, #364]	; 0x16c
   10540:	ldr	r3, [pc, #512]	; (10744 <btrfs_find_root_search@@Base+0x298>)
   10542:	add	r2, pc
   10544:	ldr	r3, [r2, r3]
   10546:	ldr	r2, [r3, #0]
   10548:	ldr	r3, [sp, #172]	; 0xac
   1054a:	eors	r2, r3
   1054c:	beq.w	10734 <btrfs_find_root_search@@Base+0x288>
   10550:	blx	8708 <__stack_chk_fail@plt>
   10554:	ldrd	r3, r4, [sp, #88]	; 0x58
   10558:	strd	r3, r4, [sp, #24]
   1055c:	ldr	r3, [sp, #44]	; 0x2c
   1055e:	str	r3, [sp, #76]	; 0x4c
   10560:	ldr	r2, [sp, #96]	; 0x60
   10562:	ldr	r3, [sp, #88]	; 0x58
   10564:	adds	r3, r3, r2
   10566:	ldr	r2, [sp, #92]	; 0x5c
   10568:	str	r3, [sp, #64]	; 0x40
   1056a:	ldr	r3, [sp, #100]	; 0x64
   1056c:	adc.w	r3, r2, r3
   10570:	str	r3, [sp, #68]	; 0x44
   10572:	ldrd	r1, r2, [sp, #64]	; 0x40
   10576:	ldrd	r3, r4, [sp, #24]
   1057a:	cmp	r4, r2
   1057c:	it	eq
   1057e:	cmpeq	r3, r1
   10580:	bcs.n	104fe <btrfs_find_root_search@@Base+0x52>
   10582:	ldr	r3, [sp, #80]	; 0x50
   10584:	mov	r0, r6
   10586:	str	r3, [sp, #0]
   10588:	ldr	r3, [sp, #84]	; 0x54
   1058a:	str	r3, [sp, #4]
   1058c:	ldrd	r2, r3, [sp, #24]
   10590:	bl	1dd84 <read_tree_block@@Base>
   10594:	mov	r5, r0
   10596:	cbnz	r0, 105aa <btrfs_find_root_search@@Base+0xfe>
   10598:	ldr	r3, [sp, #24]
   1059a:	ldr	r2, [sp, #76]	; 0x4c
   1059c:	adds	r3, r3, r2
   1059e:	str	r3, [sp, #24]
   105a0:	ldr	r3, [sp, #28]
   105a2:	adc.w	r3, r3, #0
   105a6:	str	r3, [sp, #28]
   105a8:	b.n	10560 <btrfs_find_root_search@@Base+0xb4>
   105aa:	cmn.w	r0, #4096	; 0x1000
   105ae:	bhi.n	10598 <btrfs_find_root_search@@Base+0xec>
   105b0:	ldrd	r2, r3, [r7]
   105b4:	ldr.w	r1, [r5, #188]	; 0xbc
   105b8:	ldr.w	r0, [r0, #184]	; 0xb8
   105bc:	cmp	r1, r3
   105be:	it	eq
   105c0:	cmpeq	r0, r2
   105c2:	bne.w	10730 <btrfs_find_root_search@@Base+0x284>
   105c6:	ldrb.w	r3, [r5, #196]	; 0xc4
   105ca:	str	r3, [sp, #32]
   105cc:	ldr	r2, [sp, #32]
   105ce:	ldrb	r3, [r7, #16]
   105d0:	cmp	r3, r2
   105d2:	bhi.w	10730 <btrfs_find_root_search@@Base+0x284>
   105d6:	ldr.w	r3, [r5, #176]	; 0xb0
   105da:	str	r3, [sp, #16]
   105dc:	ldr.w	r3, [r5, #180]	; 0xb4
   105e0:	str	r3, [sp, #20]
   105e2:	ldrd	r0, r1, [sp, #16]
   105e6:	ldrd	r2, r3, [r7, #8]
   105ea:	cmp	r1, r3
   105ec:	it	eq
   105ee:	cmpeq	r0, r2
   105f0:	bcc.w	10730 <btrfs_find_root_search@@Base+0x284>
   105f4:	ldrd	r3, r4, [r5, #40]	; 0x28
   105f8:	mov	r2, r0
   105fa:	mov	r0, sl
   105fc:	strd	r3, r4, [sp, #48]	; 0x30
   10600:	mov	r3, r1
   10602:	bl	166dc <search_cache_extent@@Base>
   10606:	mov	fp, r0
   10608:	cbz	r0, 1061a <btrfs_find_root_search@@Base+0x16e>
   1060a:	ldrd	r2, r3, [r0, #24]
   1060e:	ldrd	r0, r1, [sp, #16]
   10612:	cmp	r1, r3
   10614:	it	eq
   10616:	cmpeq	r0, r2
   10618:	beq.n	106ac <btrfs_find_root_search@@Base+0x200>
   1061a:	movs	r0, #56	; 0x38
   1061c:	blx	8870 <malloc@plt+0x4>
   10620:	cbnz	r0, 10662 <btrfs_find_root_search@@Base+0x1b6>
   10622:	ldr	r2, [sp, #60]	; 0x3c
   10624:	add	r4, sp, #108	; 0x6c
   10626:	ldr	r3, [pc, #292]	; (1074c <btrfs_find_root_search@@Base+0x2a0>)
   10628:	movs	r1, #1
   1062a:	ldr	r0, [r2, r3]
   1062c:	ldr	r3, [pc, #288]	; (10750 <btrfs_find_root_search@@Base+0x2a4>)
   1062e:	ldr	r2, [pc, #292]	; (10754 <btrfs_find_root_search@@Base+0x2a8>)
   10630:	add	r3, pc
   10632:	str	r3, [sp, #8]
   10634:	ldr	r3, [pc, #288]	; (10758 <btrfs_find_root_search@@Base+0x2ac>)
   10636:	add	r2, pc
   10638:	str	r1, [sp, #12]
   1063a:	add	r3, pc
   1063c:	str	r3, [sp, #4]
   1063e:	movs	r3, #58	; 0x3a
   10640:	str	r3, [sp, #0]
   10642:	ldr	r3, [pc, #280]	; (1075c <btrfs_find_root_search@@Base+0x2b0>)
   10644:	ldr	r0, [r0, #0]
   10646:	add	r3, pc
   10648:	blx	8a64 <__fprintf_chk@plt+0x4>
   1064c:	movs	r1, #16
   1064e:	mov	r0, r4
   10650:	blx	88bc <backtrace@plt>
   10654:	movs	r2, #2
   10656:	mov	r1, r0
   10658:	mov	r0, r4
   1065a:	blx	8bcc <backtrace_symbols_fd@plt>
   1065e:	blx	8b84 <abort@plt>
   10662:	ldrd	r3, r4, [sp, #16]
   10666:	mov	fp, r0
   10668:	adds	r0, #48	; 0x30
   1066a:	strd	r3, r4, [r0, #-24]
   1066e:	movs	r3, #1
   10670:	movs	r4, #0
   10672:	strd	r3, r4, [r0, #-16]
   10676:	ldr	r3, [sp, #36]	; 0x24
   10678:	str.w	r3, [r0, #-32]
   1067c:	ldr	r3, [sp, #40]	; 0x28
   1067e:	str.w	r3, [r0, #-28]
   10682:	ldr	r3, [sp, #36]	; 0x24
   10684:	str.w	r3, [r0, #-8]
   10688:	ldr	r3, [sp, #40]	; 0x28
   1068a:	str.w	r3, [r0, #-4]
   1068e:	bl	16594 <cache_tree_init@@Base>
   10692:	mov	r1, fp
   10694:	mov	r0, sl
   10696:	bl	1659a <insert_cache_extent@@Base>
   1069a:	subs	r4, r0, #0
   1069c:	bge.n	106ae <btrfs_find_root_search@@Base+0x202>
   1069e:	mov	r0, r5
   106a0:	bl	17320 <free_extent_buffer@@Base>
   106a4:	cmp	r4, #0
   106a6:	beq.w	10598 <btrfs_find_root_search@@Base+0xec>
   106aa:	b.n	10530 <btrfs_find_root_search@@Base+0x84>
   106ac:	movs	r4, #0
   106ae:	ldrd	r2, r3, [fp, #40]	; 0x28
   106b2:	mov.w	r9, #0
   106b6:	ldrb.w	r8, [sp, #32]
   106ba:	cmp	r3, r9
   106bc:	it	eq
   106be:	cmpeq	r2, r8
   106c0:	bcs.n	106f2 <btrfs_find_root_search@@Base+0x246>
   106c2:	add.w	r0, fp, #48	; 0x30
   106c6:	bl	167de <free_extent_cache_tree@@Base>
   106ca:	strd	r8, r9, [fp, #40]	; 0x28
   106ce:	ldr	r3, [sp, #44]	; 0x2c
   106d0:	add.w	r0, fp, #48	; 0x30
   106d4:	mov.w	r8, #0
   106d8:	strd	r3, r8, [sp]
   106dc:	ldrd	r2, r3, [sp, #48]	; 0x30
   106e0:	bl	165a8 <add_cache_extent@@Base>
   106e4:	subs	r4, r0, #0
   106e6:	bge.n	106ee <btrfs_find_root_search@@Base+0x242>
   106e8:	cmn.w	r4, #17
   106ec:	bne.n	1069e <btrfs_find_root_search@@Base+0x1f2>
   106ee:	mov	r4, r8
   106f0:	b.n	106fa <btrfs_find_root_search@@Base+0x24e>
   106f2:	cmp	r9, r3
   106f4:	it	eq
   106f6:	cmpeq	r8, r2
   106f8:	beq.n	106ce <btrfs_find_root_search@@Base+0x222>
   106fa:	ldrd	r2, r3, [r7, #24]
   106fe:	ldrd	r0, r1, [sp, #16]
   10702:	cmp	r1, r3
   10704:	it	eq
   10706:	cmpeq	r0, r2
   10708:	bne.n	1069e <btrfs_find_root_search@@Base+0x1f2>
   1070a:	ldrb	r3, [r7, #17]
   1070c:	ldr	r2, [sp, #32]
   1070e:	cmp	r3, r2
   10710:	bne.n	1069e <btrfs_find_root_search@@Base+0x1f2>
   10712:	ldr	r3, [r7, #32]
   10714:	cmp	r3, #0
   10716:	bne.n	1069e <btrfs_find_root_search@@Base+0x1f2>
   10718:	ldr	r3, [sp, #56]	; 0x38
   1071a:	cbz	r3, 1072c <btrfs_find_root_search@@Base+0x280>
   1071c:	ldrd	r2, r3, [sp, #48]	; 0x30
   10720:	add.w	r0, fp, #48	; 0x30
   10724:	bl	166dc <search_cache_extent@@Base>
   10728:	ldr	r3, [sp, #56]	; 0x38
   1072a:	str	r0, [r3, #0]
   1072c:	movs	r4, #1
   1072e:	b.n	1069e <btrfs_find_root_search@@Base+0x1f2>
   10730:	movs	r4, #0
   10732:	b.n	1069e <btrfs_find_root_search@@Base+0x1f2>
   10734:	mov	r0, r4
   10736:	add	sp, #180	; 0xb4
   10738:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1073c:	ldr	r0, [pc, #784]	; (10a50 <fixup_argv0@@Base+0x16>)
   1073e:	movs	r5, r0
   10740:	ldr	r0, [pc, #760]	; (10a3c <fixup_argv0@@Base+0x2>)
   10742:	movs	r5, r0
   10744:	lsls	r0, r5, #8
   10746:	movs	r0, r0
   10748:	ldr	r0, [pc, #248]	; (10844 <btrfs_find_root_search@@Base+0x398>)
   1074a:	movs	r5, r0
   1074c:	lsls	r0, r7, #8
   1074e:	movs	r0, r0
   10750:	add	r7, pc, #332	; (adr r7, 108a0 <btrfs_find_root_search@@Base+0x3f4>)
   10752:	movs	r2, r0
   10754:	ldr	r0, [sp, #432]	; 0x1b0
   10756:	movs	r2, r0
   10758:	add	r7, pc, #336	; (adr r7, 108ac <btrfs_find_root_search@@Base+0x400>)
   1075a:	movs	r2, r0
   1075c:	add	r7, pc, #196	; (adr r7, 10824 <btrfs_find_root_search@@Base+0x378>)
   1075e:	movs	r2, r0
   10760:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10764:	sub	sp, #20
   10766:	ldr	r7, [pc, #500]	; (1095c <btrfs_find_root_search@@Base+0x4b0>)
   10768:	mov	r5, r0
   1076a:	ldrb.w	r8, [sp, #60]	; 0x3c
   1076e:	mov	r6, r1
   10770:	add	r7, pc
   10772:	str	r2, [sp, #8]
   10774:	ldr	r4, [sp, #64]	; 0x40
   10776:	eor.w	r8, r8, #1
   1077a:	ldrb.w	r2, [sp, #56]	; 0x38
   1077e:	cbz	r3, 10784 <btrfs_find_root_search@@Base+0x2d8>
   10780:	orr.w	r8, r8, #22
   10784:	cbz	r2, 1078a <btrfs_find_root_search@@Base+0x2de>
   10786:	orr.w	r8, r8, #8
   1078a:	cmp	r5, #0
   1078c:	beq.w	10948 <btrfs_find_root_search@@Base+0x49c>
   10790:	ldr	r3, [r5, #0]
   10792:	cmp	r3, #0
   10794:	beq.w	10948 <btrfs_find_root_search@@Base+0x49c>
   10798:	ands.w	r9, r8, #8
   1079c:	beq.n	107cc <btrfs_find_root_search@@Base+0x320>
   1079e:	ldr	r0, [pc, #448]	; (10960 <btrfs_find_root_search@@Base+0x4b4>)
   107a0:	add	r0, pc
   107a2:	mov	r1, r4
   107a4:	blx	8b6c <fputs@plt+0x4>
   107a8:	ldr.w	fp, [r5]
   107ac:	movs	r1, #10
   107ae:	mov	r0, fp
   107b0:	blx	894c <strchr@plt>
   107b4:	cbnz	r0, 107d2 <btrfs_find_root_search@@Base+0x326>
   107b6:	mov	r1, r4
   107b8:	mov	r0, fp
   107ba:	blx	8b6c <fputs@plt+0x4>
   107be:	tst.w	r8, #1
   107c2:	bne.n	1080a <btrfs_find_root_search@@Base+0x35e>
   107c4:	movs	r0, #0
   107c6:	add	sp, #20
   107c8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   107cc:	ldr	r0, [pc, #404]	; (10964 <btrfs_find_root_search@@Base+0x4b8>)
   107ce:	add	r0, pc
   107d0:	b.n	107a2 <btrfs_find_root_search@@Base+0x2f6>
   107d2:	cmp.w	r9, #0
   107d6:	beq.n	10802 <btrfs_find_root_search@@Base+0x356>
   107d8:	ldr.w	sl, [pc, #396]	; 10968 <btrfs_find_root_search@@Base+0x4bc>
   107dc:	add	sl, pc
   107de:	add.w	fp, fp, #4294967295	; 0xffffffff
   107e2:	ldrb.w	r0, [fp, #1]!
   107e6:	cmp	r0, #0
   107e8:	beq.n	107be <btrfs_find_root_search@@Base+0x312>
   107ea:	mov	r1, r4
   107ec:	blx	8ad4 <fputc@plt+0x4>
   107f0:	ldrb.w	r3, [fp]
   107f4:	cmp	r3, #10
   107f6:	bne.n	107e2 <btrfs_find_root_search@@Base+0x336>
   107f8:	mov	r1, r4
   107fa:	mov	r0, sl
   107fc:	blx	8b6c <fputs@plt+0x4>
   10800:	b.n	107e2 <btrfs_find_root_search@@Base+0x336>
   10802:	ldr.w	sl, [pc, #360]	; 1096c <btrfs_find_root_search@@Base+0x4c0>
   10806:	add	sl, pc
   10808:	b.n	107de <btrfs_find_root_search@@Base+0x332>
   1080a:	ldr	r3, [r5, #4]
   1080c:	cbnz	r3, 10822 <btrfs_find_root_search@@Base+0x376>
   1080e:	ldr	r2, [pc, #352]	; (10970 <btrfs_find_root_search@@Base+0x4c4>)
   10810:	mov	r3, r6
   10812:	movs	r1, #1
   10814:	mov	r0, r4
   10816:	add	r2, pc
   10818:	blx	8a64 <__fprintf_chk@plt+0x4>
   1081c:	mvn.w	r0, #1
   10820:	b.n	107c6 <btrfs_find_root_search@@Base+0x31a>
   10822:	mov	r1, r4
   10824:	movs	r0, #10
   10826:	blx	8ad4 <fputc@plt+0x4>
   1082a:	cmp.w	r9, #0
   1082e:	bne.n	1087a <btrfs_find_root_search@@Base+0x3ce>
   10830:	mov	r1, r4
   10832:	movs	r0, #10
   10834:	blx	8ad4 <fputc@plt+0x4>
   10838:	movs	r6, #4
   1083a:	ldr	r3, [r5, #4]
   1083c:	movs	r1, #1
   1083e:	ldr	r2, [pc, #308]	; (10974 <btrfs_find_root_search@@Base+0x4c8>)
   10840:	mov	r0, r4
   10842:	str	r3, [sp, #4]
   10844:	add	r2, pc
   10846:	ldr	r3, [pc, #304]	; (10978 <btrfs_find_root_search@@Base+0x4cc>)
   10848:	add	r3, pc
   1084a:	str	r3, [sp, #0]
   1084c:	mov	r3, r6
   1084e:	blx	8a64 <__fprintf_chk@plt+0x4>
   10852:	ldr	r3, [r5, #8]
   10854:	cmp	r3, #0
   10856:	beq.n	107c4 <btrfs_find_root_search@@Base+0x318>
   10858:	tst.w	r8, #2
   1085c:	beq.n	107c4 <btrfs_find_root_search@@Base+0x318>
   1085e:	ldrb	r3, [r3, #0]
   10860:	cbz	r3, 1086a <btrfs_find_root_search@@Base+0x3be>
   10862:	mov	r1, r4
   10864:	movs	r0, #10
   10866:	blx	8ad4 <fputc@plt+0x4>
   1086a:	ldr.w	fp, [pc, #272]	; 1097c <btrfs_find_root_search@@Base+0x4d0>
   1086e:	adds	r5, #8
   10870:	ldr.w	sl, [pc, #268]	; 10980 <btrfs_find_root_search@@Base+0x4d4>
   10874:	add	fp, pc
   10876:	add	sl, pc
   10878:	b.n	10890 <btrfs_find_root_search@@Base+0x3e4>
   1087a:	movs	r6, #8
   1087c:	b.n	1083a <btrfs_find_root_search@@Base+0x38e>
   1087e:	strd	sl, r3, [sp]
   10882:	mov	r2, fp
   10884:	mov	r3, r6
   10886:	movs	r1, #1
   10888:	mov	r0, r4
   1088a:	mov	r5, r9
   1088c:	blx	8a64 <__fprintf_chk@plt+0x4>
   10890:	mov	r9, r5
   10892:	ldr.w	r3, [r9], #4
   10896:	cmp	r3, #0
   10898:	beq.n	107c4 <btrfs_find_root_search@@Base+0x318>
   1089a:	ldrb	r2, [r3, #0]
   1089c:	cmp	r2, #0
   1089e:	bne.n	1087e <btrfs_find_root_search@@Base+0x3d2>
   108a0:	tst.w	r8, #4
   108a4:	beq.n	107c4 <btrfs_find_root_search@@Base+0x318>
   108a6:	ldr.w	sl, [pc, #220]	; 10984 <btrfs_find_root_search@@Base+0x4d8>
   108aa:	mov	r1, r4
   108ac:	ldr.w	fp, [pc, #216]	; 10988 <btrfs_find_root_search@@Base+0x4dc>
   108b0:	movs	r0, #10
   108b2:	blx	8ad4 <fputc@plt+0x4>
   108b6:	add	sl, pc
   108b8:	ldr	r3, [pc, #208]	; (1098c <btrfs_find_root_search@@Base+0x4e0>)
   108ba:	add	fp, pc
   108bc:	add	r3, pc
   108be:	str	r3, [sp, #12]
   108c0:	ldr.w	r8, [r5, #4]!
   108c4:	cmp.w	r8, #0
   108c8:	beq.w	107c4 <btrfs_find_root_search@@Base+0x318>
   108cc:	mov	r1, sl
   108ce:	mov	r0, r8
   108d0:	blx	85ac <strcmp@plt>
   108d4:	cbnz	r0, 10932 <btrfs_find_root_search@@Base+0x486>
   108d6:	mov	r1, r4
   108d8:	movs	r0, #10
   108da:	blx	8ad4 <fputc@plt+0x4>
   108de:	ldr.w	r9, [pc, #176]	; 10990 <btrfs_find_root_search@@Base+0x4e4>
   108e2:	ldr	r2, [pc, #176]	; (10994 <btrfs_find_root_search@@Base+0x4e8>)
   108e4:	mov	r3, r6
   108e6:	add	r9, pc
   108e8:	movs	r1, #1
   108ea:	add	r2, pc
   108ec:	mov	r0, r4
   108ee:	str.w	r9, [sp]
   108f2:	blx	8a64 <__fprintf_chk@plt+0x4>
   108f6:	ldr	r3, [pc, #160]	; (10998 <btrfs_find_root_search@@Base+0x4ec>)
   108f8:	ldr	r2, [pc, #160]	; (1099c <btrfs_find_root_search@@Base+0x4f0>)
   108fa:	movs	r1, #1
   108fc:	mov	r0, r4
   108fe:	ldr.w	r8, [r7, r3]
   10902:	add	r2, pc
   10904:	add.w	r3, r8, #4
   10908:	strd	r9, r3, [sp]
   1090c:	mov	r3, r6
   1090e:	blx	8a64 <__fprintf_chk@plt+0x4>
   10912:	ldr	r3, [sp, #8]
   10914:	lsls	r3, r3, #28
   10916:	bpl.n	10928 <btrfs_find_root_search@@Base+0x47c>
   10918:	ldr	r2, [pc, #132]	; (109a0 <btrfs_find_root_search@@Base+0x4f4>)
   1091a:	add.w	r3, r8, #16
   1091e:	movs	r1, #1
   10920:	mov	r0, r4
   10922:	add	r2, pc
   10924:	blx	8a64 <__fprintf_chk@plt+0x4>
   10928:	mov	r1, r4
   1092a:	movs	r0, #10
   1092c:	blx	8ad4 <fputc@plt+0x4>
   10930:	b.n	108c0 <btrfs_find_root_search@@Base+0x414>
   10932:	ldr	r3, [sp, #12]
   10934:	mov	r2, fp
   10936:	movs	r1, #1
   10938:	mov	r0, r4
   1093a:	str.w	r8, [sp, #4]
   1093e:	str	r3, [sp, #0]
   10940:	mov	r3, r6
   10942:	blx	8a64 <__fprintf_chk@plt+0x4>
   10946:	b.n	108c0 <btrfs_find_root_search@@Base+0x414>
   10948:	ldr	r2, [pc, #88]	; (109a4 <btrfs_find_root_search@@Base+0x4f8>)
   1094a:	mov	r3, r6
   1094c:	movs	r1, #1
   1094e:	mov	r0, r4
   10950:	add	r2, pc
   10952:	blx	8a64 <__fprintf_chk@plt+0x4>
   10956:	mov.w	r0, #4294967295	; 0xffffffff
   1095a:	b.n	107c6 <btrfs_find_root_search@@Base+0x31a>
   1095c:	mov	r0, r2
   1095e:	movs	r5, r0
   10960:	add	r6, pc, #40	; (adr r6, 1098c <btrfs_find_root_search@@Base+0x4e0>)
   10962:	movs	r2, r0
   10964:	add	r5, pc, #836	; (adr r5, 10cac <usage_unknown_option@@Base+0x9c>)
   10966:	movs	r2, r0
   10968:	add	r5, pc, #824	; (adr r5, 10ca4 <usage_unknown_option@@Base+0x94>)
   1096a:	movs	r2, r0
   1096c:	add	r5, pc, #644	; (adr r5, 10bf4 <usage_command@@Base+0x30>)
   1096e:	movs	r2, r0
   10970:	add	r5, pc, #612	; (adr r5, 10bd8 <usage_command@@Base+0x14>)
   10972:	movs	r2, r0
   10974:	add	r5, pc, #552	; (adr r5, 10ba0 <output_format_name@@Base+0x10>)
   10976:	movs	r2, r0
   10978:	ldr	r5, [sp, #788]	; 0x314
   1097a:	movs	r2, r0
   1097c:	add	r5, pc, #360	; (adr r5, 10ae8 <check_argc_exact@@Base+0x58>)
   1097e:	movs	r2, r0
   10980:	ldr	r5, [sp, #604]	; 0x25c
   10982:	movs	r2, r0
   10984:	add	r5, pc, #124	; (adr r5, 10a04 <btrfs_find_root_search@@Base+0x558>)
   10986:	movs	r2, r0
   10988:	add	r5, pc, #80	; (adr r5, 109dc <btrfs_find_root_search@@Base+0x530>)
   1098a:	movs	r2, r0
   1098c:	ldr	r5, [sp, #324]	; 0x144
   1098e:	movs	r2, r0
   10990:	ldr	r5, [sp, #156]	; 0x9c
   10992:	movs	r2, r0
   10994:	add	r4, pc, #1000	; (adr r4, 10d80 <usage_command_group_short@@Base+0x48>)
   10996:	movs	r2, r0
   10998:	lsls	r0, r3, #9
   1099a:	movs	r0, r0
   1099c:	add	r4, pc, #984	; (adr r4, 10d78 <usage_command_group_short@@Base+0x40>)
   1099e:	movs	r2, r0
   109a0:			; <UNDEFINED> instruction: 0xfb9c0002
   109a4:	add	r4, pc, #832	; (adr r4, 10ce8 <usage@@Base+0x30>)
   109a6:	movs	r2, r0
   109a8:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   109ac:	movs	r4, #0
   109ae:	add.w	r8, r0, #8
   109b2:	mov	r6, r1
   109b4:	mov	r7, r2
   109b6:	mov	r9, r4
   109b8:	mov.w	sl, #1
   109bc:	ldr.w	r5, [r8], #4
   109c0:	cbnz	r5, 109c8 <btrfs_find_root_search@@Base+0x51c>
   109c2:	add	sp, #16
   109c4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   109c8:	ldr	r3, [r5, #16]
   109ca:	lsls	r3, r3, #31
   109cc:	bmi.n	10a12 <btrfs_find_root_search@@Base+0x566>
   109ce:	cbz	r6, 109de <btrfs_find_root_search@@Base+0x532>
   109d0:	cmp.w	r9, #0
   109d4:	beq.n	109de <btrfs_find_root_search@@Base+0x532>
   109d6:	mov	r1, r7
   109d8:	movs	r0, #10
   109da:	blx	8ad4 <fputc@plt+0x4>
   109de:	ldr	r3, [r5, #12]
   109e0:	cbnz	r3, 10a18 <btrfs_find_root_search@@Base+0x56c>
   109e2:	cbz	r4, 109ec <btrfs_find_root_search@@Base+0x540>
   109e4:	mov	r1, r7
   109e6:	movs	r0, #10
   109e8:	blx	8ad4 <fputc@plt+0x4>
   109ec:	ldr	r2, [r5, #16]
   109ee:	str	r7, [sp, #8]
   109f0:	ubfx	r3, r2, #1, #1
   109f4:	strd	sl, r3, [sp]
   109f8:	mov	r3, r6
   109fa:	ldr	r1, [r5, #0]
   109fc:	ldr	r0, [r5, #8]
   109fe:	bl	10760 <btrfs_find_root_search@@Base+0x2b4>
   10a02:	ldr	r4, [r5, #16]
   10a04:	ands.w	r4, r4, #2
   10a08:	beq.n	10a12 <btrfs_find_root_search@@Base+0x566>
   10a0a:	movs	r0, #10
   10a0c:	movs	r4, #0
   10a0e:	blx	89cc <putchar@plt+0x4>
   10a12:	add.w	r9, r9, #1
   10a16:	b.n	109bc <btrfs_find_root_search@@Base+0x510>
   10a18:	cbnz	r6, 10a28 <btrfs_find_root_search@@Base+0x57c>
   10a1a:	cmp.w	r9, #0
   10a1e:	beq.n	10a28 <btrfs_find_root_search@@Base+0x57c>
   10a20:	mov	r1, r7
   10a22:	movs	r0, #10
   10a24:	blx	8ad4 <fputc@plt+0x4>
   10a28:	ldr	r0, [r5, #12]
   10a2a:	mov	r2, r7
   10a2c:	mov	r1, r6
   10a2e:	bl	109a8 <btrfs_find_root_search@@Base+0x4fc>
   10a32:	cmp	r6, #0
   10a34:	it	eq
   10a36:	moveq	r4, #1
   10a38:	b.n	10a12 <btrfs_find_root_search@@Base+0x566>

00010a3a <fixup_argv0@@Base>:
   10a3a:	push	{r0, r1, r4, r5, r6, lr}
   10a3c:	mov	r4, r0
   10a3e:	ldr	r5, [pc, #40]	; (10a68 <fixup_argv0@@Base+0x2e>)
   10a40:	mov	r6, r1
   10a42:	add	r5, pc
   10a44:	mov	r0, r5
   10a46:	blx	8940 <strlen@plt>
   10a4a:	ldr	r3, [pc, #32]	; (10a6c <fixup_argv0@@Base+0x32>)
   10a4c:	movs	r2, #1
   10a4e:	str	r6, [sp, #4]
   10a50:	add	r3, pc
   10a52:	str	r3, [sp, #0]
   10a54:	mov.w	r3, #4294967295	; 0xffffffff
   10a58:	rsb	r1, r0, #4096	; 0x1000
   10a5c:	add	r0, r5
   10a5e:	blx	8bc0 <__snprintf_chk@plt>
   10a62:	str	r5, [r4, #0]
   10a64:	add	sp, #8
   10a66:	pop	{r4, r5, r6, pc}
   10a68:	mov	sl, r1
   10a6a:	movs	r5, r0
   10a6c:			; <UNDEFINED> instruction: 0xfa6f0002

00010a70 <set_argv0@@Base>:
   10a70:	push	{r3, lr}
   10a72:	mov.w	r2, #4096	; 0x1000
   10a76:	ldr	r3, [pc, #20]	; (10a8c <set_argv0@@Base+0x1c>)
   10a78:	ldr	r1, [r0, #0]
   10a7a:	add	r3, pc
   10a7c:	mov	r0, r3
   10a7e:	blx	89d8 <strncpy@plt>
   10a82:	movs	r2, #0
   10a84:	strb.w	r2, [r0, #4095]	; 0xfff
   10a88:	pop	{r3, pc}
   10a8a:	nop
   10a8c:	mov	r2, sl
   10a8e:	movs	r5, r0

00010a90 <check_argc_exact@@Base>:
   10a90:	ldr	r3, [pc, #64]	; (10ad4 <check_argc_exact@@Base+0x44>)
   10a92:	cmp	r0, r1
   10a94:	push	{r4, r5, lr}
   10a96:	add	r3, pc
   10a98:	sub	sp, #20
   10a9a:	mov	r5, r0
   10a9c:	mov	r4, r1
   10a9e:	beq.n	10ac2 <check_argc_exact@@Base+0x32>
   10aa0:	ldr	r2, [pc, #52]	; (10ad8 <check_argc_exact@@Base+0x48>)
   10aa2:	cmp	r1, #1
   10aa4:	ldr	r3, [r3, r2]
   10aa6:	ldr	r0, [r3, #0]
   10aa8:	bgt.n	10acc <check_argc_exact@@Base+0x3c>
   10aaa:	ldr	r3, [pc, #48]	; (10adc <check_argc_exact@@Base+0x4c>)
   10aac:	add	r3, pc
   10aae:	ldr	r2, [pc, #48]	; (10ae0 <check_argc_exact@@Base+0x50>)
   10ab0:	movs	r1, #1
   10ab2:	strd	r3, r5, [sp, #4]
   10ab6:	ldr	r3, [pc, #44]	; (10ae4 <check_argc_exact@@Base+0x54>)
   10ab8:	add	r2, pc
   10aba:	str	r4, [sp, #0]
   10abc:	add	r3, pc
   10abe:	blx	8a64 <__fprintf_chk@plt+0x4>
   10ac2:	subs	r0, r5, r4
   10ac4:	it	ne
   10ac6:	movne	r0, #1
   10ac8:	add	sp, #20
   10aca:	pop	{r4, r5, pc}
   10acc:	ldr	r3, [pc, #24]	; (10ae8 <check_argc_exact@@Base+0x58>)
   10ace:	add	r3, pc
   10ad0:	b.n	10aae <check_argc_exact@@Base+0x1e>
   10ad2:	nop
   10ad4:	cmn	r2, r5
   10ad6:	movs	r5, r0
   10ad8:	lsls	r0, r7, #8
   10ada:	movs	r0, r0
   10adc:	ldr	r3, [sp, #388]	; 0x184
   10ade:	movs	r2, r0
   10ae0:	add	r3, pc, #492	; (adr r3, 10cd0 <usage@@Base+0x18>)
   10ae2:	movs	r2, r0
   10ae4:	mov	r0, r2
   10ae6:	movs	r5, r0
   10ae8:	ldr??.w	r0, [r3, #2]

00010aec <check_argc_min@@Base>:
   10aec:	ldr	r3, [pc, #40]	; (10b18 <check_argc_min@@Base+0x2c>)
   10aee:	cmp	r0, r1
   10af0:	push	{r0, r1, r4, lr}
   10af2:	add	r3, pc
   10af4:	bge.n	10b14 <check_argc_min@@Base+0x28>
   10af6:	ldr	r2, [pc, #36]	; (10b1c <check_argc_min@@Base+0x30>)
   10af8:	ldr	r4, [r3, r2]
   10afa:	ldr	r3, [pc, #36]	; (10b20 <check_argc_min@@Base+0x34>)
   10afc:	ldr	r2, [pc, #36]	; (10b24 <check_argc_min@@Base+0x38>)
   10afe:	strd	r0, r1, [sp]
   10b02:	add	r3, pc
   10b04:	ldr	r0, [r4, #0]
   10b06:	add	r2, pc
   10b08:	movs	r1, #1
   10b0a:	blx	8a64 <__fprintf_chk@plt+0x4>
   10b0e:	movs	r0, #1
   10b10:	add	sp, #8
   10b12:	pop	{r4, pc}
   10b14:	movs	r0, #0
   10b16:	b.n	10b10 <check_argc_min@@Base+0x24>
   10b18:	cmp	r6, r1
   10b1a:	movs	r5, r0
   10b1c:	lsls	r0, r7, #8
   10b1e:	movs	r0, r0
   10b20:	cmp	sl, r9
   10b22:	movs	r5, r0
   10b24:	add	r3, pc, #364	; (adr r3, 10c94 <usage_unknown_option@@Base+0x84>)
   10b26:	movs	r2, r0

00010b28 <check_argc_max@@Base>:
   10b28:	ldr	r3, [pc, #40]	; (10b54 <check_argc_max@@Base+0x2c>)
   10b2a:	cmp	r0, r1
   10b2c:	push	{r0, r1, r4, lr}
   10b2e:	add	r3, pc
   10b30:	ble.n	10b50 <check_argc_max@@Base+0x28>
   10b32:	ldr	r2, [pc, #36]	; (10b58 <check_argc_max@@Base+0x30>)
   10b34:	ldr	r4, [r3, r2]
   10b36:	ldr	r3, [pc, #36]	; (10b5c <check_argc_max@@Base+0x34>)
   10b38:	ldr	r2, [pc, #36]	; (10b60 <check_argc_max@@Base+0x38>)
   10b3a:	strd	r0, r1, [sp]
   10b3e:	add	r3, pc
   10b40:	ldr	r0, [r4, #0]
   10b42:	add	r2, pc
   10b44:	movs	r1, #1
   10b46:	blx	8a64 <__fprintf_chk@plt+0x4>
   10b4a:	movs	r0, #1
   10b4c:	add	sp, #8
   10b4e:	pop	{r4, pc}
   10b50:	movs	r0, #0
   10b52:	b.n	10b4c <check_argc_max@@Base+0x24>
   10b54:	negs	r2, r2
   10b56:	movs	r5, r0
   10b58:	lsls	r0, r7, #8
   10b5a:	movs	r0, r0
   10b5c:	cmp	lr, r1
   10b5e:	movs	r5, r0
   10b60:	add	r3, pc, #344	; (adr r3, 10cbc <usage@@Base+0x4>)
   10b62:	movs	r2, r0

00010b64 <clean_args_no_options_relaxed@@Base>:
   10b64:	push	{r4, lr}
   10b66:	cmp	r1, #1
   10b68:	ldr	r4, [pc, #24]	; (10b84 <clean_args_no_options_relaxed@@Base+0x20>)
   10b6a:	add	r4, pc
   10b6c:	ble.n	10b82 <clean_args_no_options_relaxed@@Base+0x1e>
   10b6e:	ldr	r1, [pc, #24]	; (10b88 <clean_args_no_options_relaxed@@Base+0x24>)
   10b70:	ldr	r0, [r2, #4]
   10b72:	add	r1, pc
   10b74:	blx	85ac <strcmp@plt>
   10b78:	cbnz	r0, 10b82 <clean_args_no_options_relaxed@@Base+0x1e>
   10b7a:	ldr	r3, [pc, #16]	; (10b8c <clean_args_no_options_relaxed@@Base+0x28>)
   10b7c:	movs	r2, #2
   10b7e:	ldr	r3, [r4, r3]
   10b80:	str	r2, [r3, #0]
   10b82:	pop	{r4, pc}
   10b84:	tst	r6, r2
   10b86:	movs	r5, r0
   10b88:	str	r6, [sp, #696]	; 0x2b8
   10b8a:	movs	r2, r0
   10b8c:	lsls	r4, r5, #8
	...

00010b90 <output_format_name@@Base>:
   10b90:	ldr	r3, [pc, #36]	; (10bb8 <output_format_name@@Base+0x28>)
   10b92:	cmp	r0, #4
   10b94:	add	r3, pc
   10b96:	beq.n	10bac <output_format_name@@Base+0x1c>
   10b98:	cmp	r0, #8
   10b9a:	bne.n	10bb0 <output_format_name@@Base+0x20>
   10b9c:	movs	r2, #1
   10b9e:	movs	r0, #12
   10ba0:	muls	r0, r2
   10ba2:	ldr	r2, [pc, #24]	; (10bbc <output_format_name@@Base+0x2c>)
   10ba4:	ldr	r3, [r3, r2]
   10ba6:	adds	r0, #4
   10ba8:	add	r0, r3
   10baa:	bx	lr
   10bac:	movs	r2, #0
   10bae:	b.n	10b9e <output_format_name@@Base+0xe>
   10bb0:	ldr	r0, [pc, #12]	; (10bc0 <output_format_name@@Base+0x30>)
   10bb2:	add	r0, pc
   10bb4:	bx	lr
   10bb6:	nop
   10bb8:	rors	r4, r5
   10bba:	movs	r5, r0
   10bbc:	lsls	r0, r3, #9
   10bbe:	movs	r0, r0
   10bc0:	add	r3, pc, #104	; (adr r3, 10c2c <usage_unknown_option@@Base+0x1c>)
   10bc2:	movs	r2, r0

00010bc4 <usage_command@@Base>:
   10bc4:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   10bc6:	mov	r4, r0
   10bc8:	ldr	r5, [pc, #56]	; (10c04 <usage_command@@Base+0x40>)
   10bca:	mov	r6, r2
   10bcc:	mov	r3, r1
   10bce:	ldr	r0, [r0, #8]
   10bd0:	add	r5, pc
   10bd2:	ldr	r1, [r4, #0]
   10bd4:	ldr	r2, [r4, #16]
   10bd6:	cbz	r6, 10bfa <usage_command@@Base+0x36>
   10bd8:	ldr	r4, [pc, #44]	; (10c08 <usage_command@@Base+0x44>)
   10bda:	ldr	r4, [r5, r4]
   10bdc:	movs	r5, #0
   10bde:	ldr	r4, [r4, #0]
   10be0:	strd	r5, r5, [sp]
   10be4:	str	r4, [sp, #8]
   10be6:	bl	10760 <btrfs_find_root_search@@Base+0x2b4>
   10bea:	cbnz	r0, 10bfe <usage_command@@Base+0x3a>
   10bec:	mov	r1, r4
   10bee:	movs	r0, #10
   10bf0:	add	sp, #16
   10bf2:	ldmia.w	sp!, {r4, r5, r6, lr}
   10bf6:	b.w	8ad0 <fputc@plt>
   10bfa:	ldr	r4, [pc, #16]	; (10c0c <usage_command@@Base+0x48>)
   10bfc:	b.n	10bda <usage_command@@Base+0x16>
   10bfe:	add	sp, #16
   10c00:	pop	{r4, r5, r6, pc}
   10c02:	nop
   10c04:	sbcs	r0, r6
   10c06:	movs	r5, r0
   10c08:	lsls	r0, r7, #8
   10c0a:	movs	r0, r0
   10c0c:	lsls	r4, r3, #9
	...

00010c10 <usage_unknown_option@@Base>:
   10c10:	push	{r0, r1, r7, lr}
   10c12:	mov	r6, r0
   10c14:	ldr	r3, [r0, #8]
   10c16:	mov	r8, r1
   10c18:	ldr	r7, [pc, #124]	; (10c98 <usage_unknown_option@@Base+0x88>)
   10c1a:	ldr	r2, [r3, #0]
   10c1c:	movs	r3, #0
   10c1e:	mov	r4, r3
   10c20:	add	r7, pc
   10c22:	mov	r1, r3
   10c24:	ldrb	r3, [r2, r4]
   10c26:	cmp	r3, #60	; 0x3c
   10c28:	bne.n	10c7e <usage_unknown_option@@Base+0x6e>
   10c2a:	subs	r4, #1
   10c2c:	ldr	r3, [pc, #108]	; (10c9c <usage_unknown_option@@Base+0x8c>)
   10c2e:	movs	r1, #1
   10c30:	ldr	r5, [r7, r3]
   10c32:	mov	r3, r4
   10c34:	str	r2, [sp, #0]
   10c36:	ldr	r2, [pc, #104]	; (10ca0 <usage_unknown_option@@Base+0x90>)
   10c38:	ldr	r0, [r5, #0]
   10c3a:	add	r2, pc
   10c3c:	blx	8a64 <__fprintf_chk@plt+0x4>
   10c40:	ldr	r3, [pc, #96]	; (10ca4 <usage_unknown_option@@Base+0x94>)
   10c42:	ldr	r3, [r7, r3]
   10c44:	ldr	r3, [r3, #0]
   10c46:	cbnz	r3, 10c92 <usage_unknown_option@@Base+0x82>
   10c48:	ldr	r3, [pc, #92]	; (10ca8 <usage_unknown_option@@Base+0x98>)
   10c4a:	ldr	r2, [pc, #96]	; (10cac <usage_unknown_option@@Base+0x9c>)
   10c4c:	ldr	r3, [r7, r3]
   10c4e:	add	r2, pc
   10c50:	ldr	r3, [r3, #0]
   10c52:	add.w	r3, r3, #1073741824	; 0x40000000
   10c56:	subs	r3, #1
   10c58:	ldr.w	r3, [r8, r3, lsl #2]
   10c5c:	movs	r1, #1
   10c5e:	ldr	r0, [r5, #0]
   10c60:	blx	8a64 <__fprintf_chk@plt+0x4>
   10c64:	ldr	r3, [r6, #8]
   10c66:	ldr	r2, [pc, #72]	; (10cb0 <usage_unknown_option@@Base+0xa0>)
   10c68:	movs	r1, #1
   10c6a:	ldr	r3, [r3, #0]
   10c6c:	add	r2, pc
   10c6e:	str	r3, [sp, #0]
   10c70:	mov	r3, r4
   10c72:	ldr	r0, [r5, #0]
   10c74:	blx	8a64 <__fprintf_chk@plt+0x4>
   10c78:	movs	r0, #1
   10c7a:	blx	8934 <exit@plt>
   10c7e:	cmp	r3, #91	; 0x5b
   10c80:	beq.n	10c2a <usage_unknown_option@@Base+0x1a>
   10c82:	cmp	r1, #32
   10c84:	bne.n	10c8a <usage_unknown_option@@Base+0x7a>
   10c86:	cmp	r3, #45	; 0x2d
   10c88:	beq.n	10c2a <usage_unknown_option@@Base+0x1a>
   10c8a:	adds	r4, #1
   10c8c:	cmp	r3, #0
   10c8e:	bne.n	10c22 <usage_unknown_option@@Base+0x12>
   10c90:	b.n	10c2c <usage_unknown_option@@Base+0x1c>
   10c92:	ldr	r2, [pc, #32]	; (10cb4 <usage_unknown_option@@Base+0xa4>)
   10c94:	add	r2, pc
   10c96:	b.n	10c5c <usage_unknown_option@@Base+0x4c>
   10c98:	adcs	r0, r4
   10c9a:	movs	r5, r0
   10c9c:	lsls	r0, r7, #8
   10c9e:	movs	r0, r0
   10ca0:	add	r2, pc, #616	; (adr r2, 10f0c <help_unknown_token@@Base+0x8>)
   10ca2:	movs	r2, r0
   10ca4:	lsls	r4, r6, #8
   10ca6:	movs	r0, r0
   10ca8:	lsls	r4, r5, #8
   10caa:	movs	r0, r0
   10cac:	add	r2, pc, #564	; (adr r2, 10ee4 <usage_command_group@@Base+0x74>)
   10cae:	movs	r2, r0
   10cb0:	add	r2, pc, #632	; (adr r2, 10f2c <help_unknown_token@@Base+0x28>)
   10cb2:	movs	r2, r0
   10cb4:	add	r2, pc, #388	; (adr r2, 10e3c <usage_command_group_short@@Base+0x104>)
   10cb6:	movs	r2, r0

00010cb8 <usage@@Base>:
   10cb8:	push	{r0, r1, r2, r3, r4, lr}
   10cba:	ldr	r3, [pc, #44]	; (10ce8 <usage@@Base+0x30>)
   10cbc:	ldr	r2, [pc, #44]	; (10cec <usage@@Base+0x34>)
   10cbe:	add	r3, pc
   10cc0:	ldr	r3, [r3, r2]
   10cc2:	movs	r2, #0
   10cc4:	mov	r1, r2
   10cc6:	ldr	r4, [r3, #0]
   10cc8:	movs	r3, #1
   10cca:	strd	r2, r2, [sp]
   10cce:	str	r4, [sp, #8]
   10cd0:	ldr	r0, [r0, #8]
   10cd2:	bl	10760 <btrfs_find_root_search@@Base+0x2b4>
   10cd6:	cbnz	r0, 10ce0 <usage@@Base+0x28>
   10cd8:	mov	r1, r4
   10cda:	movs	r0, #10
   10cdc:	blx	8ad4 <fputc@plt+0x4>
   10ce0:	movs	r0, #1
   10ce2:	blx	8934 <exit@plt>
   10ce6:	nop
   10ce8:	lsrs	r2, r0
   10cea:	movs	r5, r0
   10cec:	lsls	r0, r7, #8
	...

00010cf0 <clean_args_no_options@@Base>:
   10cf0:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   10cf4:	mov	r4, r0
   10cf6:	ldr	r7, [pc, #56]	; (10d30 <clean_args_no_options@@Base+0x40>)
   10cf8:	mov	r5, r1
   10cfa:	ldr.w	r8, [pc, #56]	; 10d34 <clean_args_no_options@@Base+0x44>
   10cfe:	mov	r6, r2
   10d00:	add	r7, pc
   10d02:	mov.w	r9, #0
   10d06:	add	r8, pc
   10d08:	mov	r3, r7
   10d0a:	mov	r2, r8
   10d0c:	mov	r1, r6
   10d0e:	mov	r0, r5
   10d10:	str.w	r9, [sp]
   10d14:	blx	8910 <getopt_long@plt>
   10d18:	cmp	r0, #0
   10d1a:	blt.n	10d28 <clean_args_no_options@@Base+0x38>
   10d1c:	ldr	r1, [r4, #8]
   10d1e:	cmp	r1, #0
   10d20:	beq.n	10d08 <clean_args_no_options@@Base+0x18>
   10d22:	mov	r0, r4
   10d24:	bl	10cb8 <usage@@Base>
   10d28:	add	sp, #12
   10d2a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   10d2e:	nop
   10d30:	add	r4, pc, #112	; (adr r4, 10da4 <usage_command_group_short@@Base+0x6c>)
   10d32:	movs	r2, r0
   10d34:	ldr	r1, [sp, #28]
   10d36:	movs	r2, r0

00010d38 <usage_command_group_short@@Base>:
   10d38:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   10d3c:	mov	r5, r0
   10d3e:	ldr	r7, [pc, #248]	; (10e38 <usage_command_group_short@@Base+0x100>)
   10d40:	ldr	r3, [pc, #248]	; (10e3c <usage_command_group_short@@Base+0x104>)
   10d42:	add	r7, pc
   10d44:	ldr	r6, [r0, #0]
   10d46:	ldr	r3, [r7, r3]
   10d48:	ldr	r4, [r3, #0]
   10d4a:	cmp	r6, #0
   10d4c:	bne.n	10dcc <usage_command_group_short@@Base+0x94>
   10d4e:	mov	r1, r4
   10d50:	movs	r0, #10
   10d52:	blx	8ad4 <fputc@plt+0x4>
   10d56:	ldr	r0, [pc, #232]	; (10e40 <usage_command_group_short@@Base+0x108>)
   10d58:	mov	r1, r4
   10d5a:	ldr.w	r8, [pc, #232]	; 10e44 <usage_command_group_short@@Base+0x10c>
   10d5e:	add	r0, pc
   10d60:	adds	r5, #8
   10d62:	blx	8b6c <fputs@plt+0x4>
   10d66:	add	r8, pc
   10d68:	mov	r6, r5
   10d6a:	ldr.w	r3, [r6], #4
   10d6e:	cmp	r3, #0
   10d70:	bne.n	10df8 <usage_command_group_short@@Base+0xc0>
   10d72:	ldr	r0, [pc, #212]	; (10e48 <usage_command_group_short@@Base+0x110>)
   10d74:	mov	r1, r4
   10d76:	ldr	r6, [pc, #212]	; (10e4c <usage_command_group_short@@Base+0x114>)
   10d78:	add	r0, pc
   10d7a:	blx	8b6c <fputs@plt+0x4>
   10d7e:	add	r6, pc
   10d80:	ldr.w	r3, [r5], #4
   10d84:	cmp	r3, #0
   10d86:	bne.n	10e16 <usage_command_group_short@@Base+0xde>
   10d88:	mov	r1, r4
   10d8a:	movs	r0, #10
   10d8c:	blx	8ad4 <fputc@plt+0x4>
   10d90:	ldr	r3, [pc, #188]	; (10e50 <usage_command_group_short@@Base+0x118>)
   10d92:	ldr	r0, [pc, #192]	; (10e54 <usage_command_group_short@@Base+0x11c>)
   10d94:	ldr	r4, [r7, r3]
   10d96:	add	r0, pc
   10d98:	ldr	r1, [r4, #0]
   10d9a:	blx	8b6c <fputs@plt+0x4>
   10d9e:	ldr	r0, [pc, #184]	; (10e58 <usage_command_group_short@@Base+0x120>)
   10da0:	ldr	r1, [r4, #0]
   10da2:	add	r0, pc
   10da4:	blx	8b6c <fputs@plt+0x4>
   10da8:	ldr	r0, [pc, #176]	; (10e5c <usage_command_group_short@@Base+0x124>)
   10daa:	ldr	r1, [r4, #0]
   10dac:	add	r0, pc
   10dae:	blx	8b6c <fputs@plt+0x4>
   10db2:	ldr	r0, [pc, #172]	; (10e60 <usage_command_group_short@@Base+0x128>)
   10db4:	ldr	r1, [r4, #0]
   10db6:	add	r0, pc
   10db8:	blx	8b6c <fputs@plt+0x4>
   10dbc:	ldr	r0, [pc, #164]	; (10e64 <usage_command_group_short@@Base+0x12c>)
   10dbe:	ldr	r1, [r4, #0]
   10dc0:	add	r0, pc
   10dc2:	add	sp, #8
   10dc4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   10dc8:	b.w	8b68 <fputs@plt>
   10dcc:	ldr	r3, [r6, #0]
   10dce:	cmp	r3, #0
   10dd0:	beq.n	10d4e <usage_command_group_short@@Base+0x16>
   10dd2:	ldr	r2, [pc, #148]	; (10e68 <usage_command_group_short@@Base+0x130>)
   10dd4:	movs	r1, #1
   10dd6:	mov	r0, r4
   10dd8:	ldr.w	r8, [pc, #144]	; 10e6c <usage_command_group_short@@Base+0x134>
   10ddc:	add	r2, pc
   10dde:	blx	8a64 <__fprintf_chk@plt+0x4>
   10de2:	add	r8, pc
   10de4:	ldr.w	r3, [r6, #4]!
   10de8:	cmp	r3, #0
   10dea:	beq.n	10d4e <usage_command_group_short@@Base+0x16>
   10dec:	mov	r2, r8
   10dee:	movs	r1, #1
   10df0:	mov	r0, r4
   10df2:	blx	8a64 <__fprintf_chk@plt+0x4>
   10df6:	b.n	10de4 <usage_command_group_short@@Base+0xac>
   10df8:	ldr	r2, [r3, #16]
   10dfa:	lsls	r1, r2, #31
   10dfc:	bmi.n	10d6a <usage_command_group_short@@Base+0x32>
   10dfe:	ldr	r1, [r3, #12]
   10e00:	cmp	r1, #0
   10e02:	beq.n	10d6a <usage_command_group_short@@Base+0x32>
   10e04:	ldr	r2, [r1, #4]
   10e06:	mov	r0, r4
   10e08:	movs	r1, #1
   10e0a:	str	r2, [sp, #0]
   10e0c:	mov	r2, r8
   10e0e:	ldr	r3, [r3, #0]
   10e10:	blx	8a64 <__fprintf_chk@plt+0x4>
   10e14:	b.n	10d6a <usage_command_group_short@@Base+0x32>
   10e16:	ldr	r2, [r3, #16]
   10e18:	lsls	r2, r2, #31
   10e1a:	bmi.n	10d80 <usage_command_group_short@@Base+0x48>
   10e1c:	ldr	r2, [r3, #12]
   10e1e:	cmp	r2, #0
   10e20:	bne.n	10d80 <usage_command_group_short@@Base+0x48>
   10e22:	ldr	r2, [r3, #8]
   10e24:	movs	r1, #1
   10e26:	mov	r0, r4
   10e28:	ldr	r2, [r2, #4]
   10e2a:	str	r2, [sp, #0]
   10e2c:	mov	r2, r6
   10e2e:	ldr	r3, [r3, #0]
   10e30:	blx	8a64 <__fprintf_chk@plt+0x4>
   10e34:	b.n	10d80 <usage_command_group_short@@Base+0x48>
   10e36:	nop
   10e38:	ands	r6, r7
   10e3a:	movs	r5, r0
   10e3c:	lsls	r4, r3, #9
   10e3e:	movs	r0, r0
   10e40:	add	r1, pc, #848	; (adr r1, 11194 <help_command_group@@Base+0x1e0>)
   10e42:	movs	r2, r0
   10e44:	add	r1, pc, #972	; (adr r1, 11214 <help_command_group@@Base+0x260>)
   10e46:	movs	r2, r0
   10e48:	add	r1, pc, #952	; (adr r1, 11204 <help_command_group@@Base+0x250>)
   10e4a:	movs	r2, r0
   10e4c:	add	r1, pc, #876	; (adr r1, 111bc <help_command_group@@Base+0x208>)
   10e4e:	movs	r2, r0
   10e50:	lsls	r0, r7, #8
   10e52:	movs	r0, r0
   10e54:	add	r1, pc, #880	; (adr r1, 111c8 <help_command_group@@Base+0x214>)
   10e56:	movs	r2, r0
   10e58:	add	r2, pc, #60	; (adr r2, 10e98 <usage_command_group@@Base+0x28>)
   10e5a:	movs	r2, r0
   10e5c:	add	r2, pc, #304	; (adr r2, 10f90 <help_ambiguous_token@@Base+0x4c>)
   10e5e:	movs	r2, r0
   10e60:	add	r2, pc, #532	; (adr r2, 11078 <help_command_group@@Base+0xc4>)
   10e62:	movs	r2, r0
   10e64:	add	r2, pc, #752	; (adr r2, 11158 <help_command_group@@Base+0x1a4>)
   10e66:	movs	r2, r0
   10e68:	add	r1, pc, #412	; (adr r1, 11008 <help_command_group@@Base+0x54>)
   10e6a:	movs	r2, r0
   10e6c:	add	r1, pc, #432	; (adr r1, 11020 <help_command_group@@Base+0x6c>)
   10e6e:	movs	r2, r0

00010e70 <usage_command_group@@Base>:
   10e70:	ldr	r3, [pc, #120]	; (10eec <usage_command_group@@Base+0x7c>)
   10e72:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   10e76:	add	r3, pc
   10e78:	ldr	r5, [r0, #0]
   10e7a:	mov	r6, r0
   10e7c:	mov	r7, r1
   10e7e:	cbz	r2, 10eaa <usage_command_group@@Base+0x3a>
   10e80:	ldr	r2, [pc, #108]	; (10ef0 <usage_command_group@@Base+0x80>)
   10e82:	ldr	r3, [r3, r2]
   10e84:	ldr	r4, [r3, #0]
   10e86:	cbnz	r5, 10eae <usage_command_group@@Base+0x3e>
   10e88:	mov	r1, r4
   10e8a:	movs	r0, #10
   10e8c:	blx	8ad4 <fputc@plt+0x4>
   10e90:	mov	r2, r4
   10e92:	mov	r1, r7
   10e94:	mov	r0, r6
   10e96:	bl	109a8 <btrfs_find_root_search@@Base+0x4fc>
   10e9a:	mov	r1, r4
   10e9c:	movs	r0, #10
   10e9e:	blx	8ad4 <fputc@plt+0x4>
   10ea2:	ldr	r3, [r6, #4]
   10ea4:	cbnz	r3, 10eda <usage_command_group@@Base+0x6a>
   10ea6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   10eaa:	ldr	r2, [pc, #72]	; (10ef4 <usage_command_group@@Base+0x84>)
   10eac:	b.n	10e82 <usage_command_group@@Base+0x12>
   10eae:	ldr	r3, [r5, #0]
   10eb0:	cmp	r3, #0
   10eb2:	beq.n	10e88 <usage_command_group@@Base+0x18>
   10eb4:	ldr	r2, [pc, #64]	; (10ef8 <usage_command_group@@Base+0x88>)
   10eb6:	movs	r1, #1
   10eb8:	mov	r0, r4
   10eba:	ldr.w	r8, [pc, #64]	; 10efc <usage_command_group@@Base+0x8c>
   10ebe:	add	r2, pc
   10ec0:	blx	8a64 <__fprintf_chk@plt+0x4>
   10ec4:	add	r8, pc
   10ec6:	ldr.w	r3, [r5, #4]!
   10eca:	cmp	r3, #0
   10ecc:	beq.n	10e88 <usage_command_group@@Base+0x18>
   10ece:	mov	r2, r8
   10ed0:	movs	r1, #1
   10ed2:	mov	r0, r4
   10ed4:	blx	8a64 <__fprintf_chk@plt+0x4>
   10ed8:	b.n	10ec6 <usage_command_group@@Base+0x56>
   10eda:	ldr	r2, [pc, #36]	; (10f00 <usage_command_group@@Base+0x90>)
   10edc:	mov	r0, r4
   10ede:	movs	r1, #1
   10ee0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   10ee4:	add	r2, pc
   10ee6:	b.w	8a60 <__fprintf_chk@plt>
   10eea:	nop
   10eec:	subs	r7, #10
   10eee:	movs	r5, r0
   10ef0:	lsls	r0, r7, #8
   10ef2:	movs	r0, r0
   10ef4:	lsls	r4, r3, #9
   10ef6:	movs	r0, r0
   10ef8:	add	r0, pc, #532	; (adr r0, 11110 <help_command_group@@Base+0x15c>)
   10efa:	movs	r2, r0
   10efc:	add	r0, pc, #552	; (adr r0, 11128 <help_command_group@@Base+0x174>)
   10efe:	movs	r2, r0
   10f00:	add	r2, pc, #172	; (adr r2, 10fb0 <help_ambiguous_token@@Base+0x6c>)
   10f02:	movs	r2, r0

00010f04 <help_unknown_token@@Base>:
   10f04:	ldr	r3, [pc, #44]	; (10f34 <help_unknown_token@@Base+0x30>)
   10f06:	mov	r4, r1
   10f08:	push	{r0, r1, r2, lr}
   10f0a:	add	r3, pc
   10f0c:	ldr	r2, [pc, #40]	; (10f38 <help_unknown_token@@Base+0x34>)
   10f0e:	movs	r1, #1
   10f10:	ldr	r5, [r3, r2]
   10f12:	ldr	r3, [pc, #40]	; (10f3c <help_unknown_token@@Base+0x38>)
   10f14:	ldr	r2, [pc, #40]	; (10f40 <help_unknown_token@@Base+0x3c>)
   10f16:	add	r3, pc
   10f18:	str	r0, [sp, #0]
   10f1a:	add	r2, pc
   10f1c:	ldr	r0, [r5, #0]
   10f1e:	blx	8a64 <__fprintf_chk@plt+0x4>
   10f22:	mov	r0, r4
   10f24:	movs	r2, #1
   10f26:	movs	r1, #0
   10f28:	bl	10e70 <usage_command_group@@Base>
   10f2c:	movs	r0, #1
   10f2e:	blx	8934 <exit@plt>
   10f32:	nop
   10f34:	subs	r6, #118	; 0x76
   10f36:	movs	r5, r0
   10f38:	lsls	r0, r7, #8
   10f3a:	movs	r0, r0
   10f3c:	sbcs	r6, r6
   10f3e:	movs	r5, r0
   10f40:	add	r1, pc, #656	; (adr r1, 111d4 <help_command_group@@Base+0x220>)
   10f42:	movs	r2, r0

00010f44 <help_ambiguous_token@@Base>:
   10f44:	ldr	r3, [pc, #84]	; (10f9c <help_ambiguous_token@@Base+0x58>)
   10f46:	mov	r4, r1
   10f48:	ldr	r2, [pc, #84]	; (10fa0 <help_ambiguous_token@@Base+0x5c>)
   10f4a:	mov	r5, r0
   10f4c:	add	r3, pc
   10f4e:	ldr.w	r8, [pc, #84]	; 10fa4 <help_ambiguous_token@@Base+0x60>
   10f52:	push	{r0, r1, r7, lr}
   10f54:	movs	r1, #1
   10f56:	ldr	r7, [r3, r2]
   10f58:	adds	r4, #8
   10f5a:	ldr	r3, [pc, #76]	; (10fa8 <help_ambiguous_token@@Base+0x64>)
   10f5c:	add	r8, pc
   10f5e:	ldr	r2, [pc, #76]	; (10fac <help_ambiguous_token@@Base+0x68>)
   10f60:	str	r0, [sp, #0]
   10f62:	add	r3, pc
   10f64:	add	r2, pc
   10f66:	ldr	r0, [r7, #0]
   10f68:	blx	8a64 <__fprintf_chk@plt+0x4>
   10f6c:	ldr	r0, [pc, #64]	; (10fb0 <help_ambiguous_token@@Base+0x6c>)
   10f6e:	ldr	r1, [r7, #0]
   10f70:	add	r0, pc
   10f72:	blx	8b6c <fputs@plt+0x4>
   10f76:	ldr.w	r6, [r4], #4
   10f7a:	cbnz	r6, 10f82 <help_ambiguous_token@@Base+0x3e>
   10f7c:	movs	r0, #1
   10f7e:	blx	8934 <exit@plt>
   10f82:	ldr	r0, [r6, #0]
   10f84:	mov	r1, r5
   10f86:	bl	3223c <prefixcmp@@Base>
   10f8a:	cmp	r0, #0
   10f8c:	bne.n	10f76 <help_ambiguous_token@@Base+0x32>
   10f8e:	ldr	r3, [r6, #0]
   10f90:	mov	r2, r8
   10f92:	ldr	r0, [r7, #0]
   10f94:	movs	r1, #1
   10f96:	blx	8a64 <__fprintf_chk@plt+0x4>
   10f9a:	b.n	10f76 <help_ambiguous_token@@Base+0x32>
   10f9c:	subs	r6, #52	; 0x34
   10f9e:	movs	r5, r0
   10fa0:	lsls	r0, r7, #8
   10fa2:	movs	r0, r0
   10fa4:	add	r1, pc, #712	; (adr r1, 11270 <help_command_group@@Base+0x2bc>)
   10fa6:	movs	r2, r0
   10fa8:	adcs	r2, r5
   10faa:	movs	r5, r0
   10fac:	add	r1, pc, #456	; (adr r1, 11178 <help_command_group@@Base+0x1c4>)
   10fae:	movs	r2, r0
   10fb0:	add	r1, pc, #512	; (adr r1, 111b4 <help_command_group@@Base+0x200>)
   10fb2:	movs	r2, r0

00010fb4 <help_command_group@@Base>:
   10fb4:	cmp	r1, #1
   10fb6:	push	{r4, lr}
   10fb8:	mov	r4, r0
   10fba:	ble.n	10fd8 <help_command_group@@Base+0x24>
   10fbc:	ldr	r1, [pc, #28]	; (10fdc <help_command_group@@Base+0x28>)
   10fbe:	ldr	r0, [r2, #4]
   10fc0:	add	r1, pc
   10fc2:	blx	85ac <strcmp@plt>
   10fc6:	clz	r1, r0
   10fca:	lsrs	r1, r1, #5
   10fcc:	mov	r0, r4
   10fce:	movs	r2, #0
   10fd0:	ldmia.w	sp!, {r4, lr}
   10fd4:	b.w	10e70 <usage_command_group@@Base>
   10fd8:	movs	r1, #0
   10fda:	b.n	10fcc <help_command_group@@Base+0x18>
   10fdc:	add	r1, pc, #332	; (adr r1, 1112c <help_command_group@@Base+0x178>)
   10fde:	movs	r2, r0
   10fe0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fe4:	sub.w	sp, sp, #4096	; 0x1000
   10fe8:	sub	sp, #20
   10fea:	mov	r4, r1
   10fec:	ldr	r1, [pc, #448]	; (111b0 <help_command_group@@Base+0x1fc>)
   10fee:	mov	r5, r2
   10ff0:	mov	r9, r3
   10ff2:	ldr	r2, [pc, #448]	; (111b4 <help_command_group@@Base+0x200>)
   10ff4:	add.w	r3, sp, #4128	; 0x1020
   10ff8:	add	r1, pc
   10ffa:	add	r6, sp, #16
   10ffc:	adds	r3, #24
   10ffe:	ldr	r2, [r1, r2]
   11000:	mov	fp, r0
   11002:	ldr	r7, [r3, #0]
   11004:	add.w	r3, sp, #4096	; 0x1000
   11008:	ldr	r2, [r2, #0]
   1100a:	str	r2, [r3, #12]
   1100c:	mov.w	r2, #0
   11010:	mov	r0, r6
   11012:	movw	r2, #4092	; 0xffc
   11016:	movs	r1, #0
   11018:	adds	r3, #12
   1101a:	str.w	r1, [r6, #-4]
   1101e:	sub.w	sl, r6, #4
   11022:	blx	89bc <memset@plt+0x4>
   11026:	mov	r8, r4
   11028:	mov	r2, r5
   1102a:	cmp.w	fp, #0
   1102e:	beq.n	11066 <help_command_group@@Base+0xb2>
   11030:	add.w	r1, r4, #4096	; 0x1000
   11034:	mov	r0, r4
   11036:	bl	136d0 <path_cat_out@@Base>
   1103a:	subs	r4, r0, #0
   1103c:	bge.n	1107e <help_command_group@@Base+0xca>
   1103e:	ldr	r0, [pc, #376]	; (111b8 <help_command_group@@Base+0x204>)
   11040:	mov	r2, r5
   11042:	mov	r1, r9
   11044:	add	r0, pc
   11046:	bl	17b7c <__btrfs_error@@Base>
   1104a:	ldr	r1, [pc, #368]	; (111bc <help_command_group@@Base+0x208>)
   1104c:	add.w	r3, sp, #4096	; 0x1000
   11050:	ldr	r2, [pc, #352]	; (111b4 <help_command_group@@Base+0x200>)
   11052:	adds	r3, #12
   11054:	add	r1, pc
   11056:	ldr	r2, [r1, r2]
   11058:	ldr	r1, [r2, #0]
   1105a:	ldr	r2, [r3, #0]
   1105c:	eors	r1, r2
   1105e:	beq.w	111a2 <help_command_group@@Base+0x1ee>
   11062:	blx	8708 <__stack_chk_fail@plt>
   11066:	mov	r1, r4
   11068:	mov	r0, sl
   1106a:	bl	136d0 <path_cat_out@@Base>
   1106e:	subs	r4, r0, #0
   11070:	bge.n	1107c <help_command_group@@Base+0xc8>
   11072:	ldr	r0, [pc, #332]	; (111c0 <help_command_group@@Base+0x20c>)
   11074:	mov	r2, r5
   11076:	mov	r1, r9
   11078:	add	r0, pc
   1107a:	b.n	11046 <help_command_group@@Base+0x92>
   1107c:	mov	r8, sl
   1107e:	ldr	r1, [pc, #324]	; (111c4 <help_command_group@@Base+0x210>)
   11080:	mov	r2, r9
   11082:	movs	r0, #1
   11084:	ldr.w	sl, [pc, #320]	; 111c8 <help_command_group@@Base+0x214>
   11088:	add	r1, pc
   1108a:	movs	r4, #0
   1108c:	blx	8a30 <__printf_chk@plt+0x4>
   11090:	mov	r0, r8
   11092:	blx	8940 <strlen@plt>
   11096:	add	sl, pc
   11098:	add.w	r9, r8, r0
   1109c:	cmp	r8, r9
   1109e:	bne.n	110ae <help_command_group@@Base+0xfa>
   110a0:	cmp	r7, #0
   110a2:	bne.n	11182 <help_command_group@@Base+0x1ce>
   110a4:	movs	r0, #10
   110a6:	movs	r4, #0
   110a8:	blx	89cc <putchar@plt+0x4>
   110ac:	b.n	1104a <help_command_group@@Base+0x96>
   110ae:	ldrb.w	r5, [r8], #1
   110b2:	cmp	r5, #32
   110b4:	bhi.n	110de <help_command_group@@Base+0x12a>
   110b6:	cmp	r5, #6
   110b8:	bls.n	110e2 <help_command_group@@Base+0x12e>
   110ba:	subs	r3, r5, #7
   110bc:	cmp	r3, #25
   110be:	bhi.n	110e2 <help_command_group@@Base+0x12e>
   110c0:	tbb	[pc, r3]
   110c4:	cmp	r5, #37	; 0x25
   110c6:	subs	r4, #70	; 0x46
   110c8:	adds	r7, #75	; 0x4b
   110ca:	lsrs	r1, r0, #29
   110cc:	lsrs	r7, r1, #28
   110ce:	lsrs	r7, r1, #28
   110d0:	lsrs	r7, r1, #28
   110d2:	lsrs	r7, r1, #28
   110d4:	lsrs	r7, r1, #28
   110d6:	lsrs	r7, r1, #28
   110d8:	lsrs	r2, r6, #28
   110da:	lsrs	r7, r1, #28
   110dc:	str	r7, [r1, r0]
   110de:	cmp	r5, #92	; 0x5c
   110e0:	beq.n	1116e <help_command_group@@Base+0x1ba>
   110e2:	blx	891c <__ctype_b_loc@plt>
   110e6:	ldr	r3, [r0, #0]
   110e8:	ldrh.w	r3, [r3, r5, lsl #1]
   110ec:	lsls	r3, r3, #17
   110ee:	bmi.n	11178 <help_command_group@@Base+0x1c4>
   110f0:	ubfx	r3, r5, #3, #3
   110f4:	lsrs	r2, r5, #6
   110f6:	and.w	r5, r5, #7
   110fa:	adds	r3, #48	; 0x30
   110fc:	adds	r5, #48	; 0x30
   110fe:	adds	r2, #48	; 0x30
   11100:	mov	r1, sl
   11102:	movs	r0, #1
   11104:	str	r5, [sp, #0]
   11106:	adds	r4, #4
   11108:	blx	8a30 <__printf_chk@plt+0x4>
   1110c:	b.n	1109c <help_command_group@@Base+0xe8>
   1110e:	movs	r0, #92	; 0x5c
   11110:	blx	89cc <putchar@plt+0x4>
   11114:	movs	r0, #97	; 0x61
   11116:	blx	89cc <putchar@plt+0x4>
   1111a:	adds	r4, #2
   1111c:	b.n	1109c <help_command_group@@Base+0xe8>
   1111e:	movs	r0, #92	; 0x5c
   11120:	blx	89cc <putchar@plt+0x4>
   11124:	movs	r0, #98	; 0x62
   11126:	b.n	11116 <help_command_group@@Base+0x162>
   11128:	movs	r0, #92	; 0x5c
   1112a:	blx	89cc <putchar@plt+0x4>
   1112e:	movs	r0, #101	; 0x65
   11130:	b.n	11116 <help_command_group@@Base+0x162>
   11132:	movs	r0, #92	; 0x5c
   11134:	blx	89cc <putchar@plt+0x4>
   11138:	movs	r0, #102	; 0x66
   1113a:	b.n	11116 <help_command_group@@Base+0x162>
   1113c:	movs	r0, #92	; 0x5c
   1113e:	blx	89cc <putchar@plt+0x4>
   11142:	movs	r0, #110	; 0x6e
   11144:	b.n	11116 <help_command_group@@Base+0x162>
   11146:	movs	r0, #92	; 0x5c
   11148:	blx	89cc <putchar@plt+0x4>
   1114c:	movs	r0, #114	; 0x72
   1114e:	b.n	11116 <help_command_group@@Base+0x162>
   11150:	movs	r0, #92	; 0x5c
   11152:	blx	89cc <putchar@plt+0x4>
   11156:	movs	r0, #116	; 0x74
   11158:	b.n	11116 <help_command_group@@Base+0x162>
   1115a:	movs	r0, #92	; 0x5c
   1115c:	blx	89cc <putchar@plt+0x4>
   11160:	movs	r0, #118	; 0x76
   11162:	b.n	11116 <help_command_group@@Base+0x162>
   11164:	movs	r0, #92	; 0x5c
   11166:	blx	89cc <putchar@plt+0x4>
   1116a:	movs	r0, #32
   1116c:	b.n	11116 <help_command_group@@Base+0x162>
   1116e:	mov	r0, r5
   11170:	blx	89cc <putchar@plt+0x4>
   11174:	mov	r0, r5
   11176:	b.n	11116 <help_command_group@@Base+0x162>
   11178:	mov	r0, r5
   1117a:	adds	r4, #1
   1117c:	blx	89cc <putchar@plt+0x4>
   11180:	b.n	1109c <help_command_group@@Base+0xe8>
   11182:	adds	r4, #1
   11184:	movs	r0, #32
   11186:	blx	89cc <putchar@plt+0x4>
   1118a:	cmp	r4, #31
   1118c:	ble.n	11182 <help_command_group@@Base+0x1ce>
   1118e:	add.w	r2, sp, #4128	; 0x1020
   11192:	mov	r1, r7
   11194:	adds	r2, #28
   11196:	movs	r0, #1
   11198:	str.w	r2, [r6, #-8]
   1119c:	blx	86ac <__vprintf_chk@plt>
   111a0:	b.n	110a4 <help_command_group@@Base+0xf0>
   111a2:	mov	r0, r4
   111a4:	add.w	sp, sp, #4096	; 0x1000
   111a8:	add	sp, #20
   111aa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   111ae:	nop
   111b0:	subs	r5, #136	; 0x88
   111b2:	movs	r5, r0
   111b4:	lsls	r0, r5, #8
   111b6:	movs	r0, r0
   111b8:	add	r1, pc, #0	; (adr r1, 111bc <help_command_group@@Base+0x208>)
   111ba:	movs	r2, r0
   111bc:	subs	r5, #44	; 0x2c
   111be:	movs	r5, r0
   111c0:	add	r0, pc, #816	; (adr r0, 114f4 <help_command_group@@Base+0x540>)
   111c2:	movs	r2, r0
   111c4:	add	r0, pc, #840	; (adr r0, 11510 <help_command_group@@Base+0x55c>)
   111c6:	movs	r2, r0
   111c8:	add	r0, pc, #808	; (adr r0, 114f4 <help_command_group@@Base+0x540>)
   111ca:	movs	r2, r0
   111cc:	push	{r4, r5, lr}
   111ce:	sub	sp, #28
   111d0:	strd	r2, r3, [sp, #8]
   111d4:	mov	r2, r0
   111d6:	ldr	r3, [pc, #28]	; (111f4 <help_command_group@@Base+0x240>)
   111d8:	movs	r0, #0
   111da:	ldrd	r4, r5, [sp, #40]	; 0x28
   111de:	add	r3, pc
   111e0:	str	r3, [sp, #0]
   111e2:	ldr	r3, [pc, #20]	; (111f8 <help_command_group@@Base+0x244>)
   111e4:	ldr	r1, [sp, #48]	; 0x30
   111e6:	add	r3, pc
   111e8:	strd	r4, r5, [sp, #16]
   111ec:	bl	10fe0 <help_command_group@@Base+0x2c>
   111f0:	add	sp, #28
   111f2:	pop	{r4, r5, pc}
   111f4:	ldr	r7, [sp, #608]	; 0x260
   111f6:	movs	r2, r0
   111f8:	ldr	r7, [sp, #520]	; 0x208
   111fa:	movs	r2, r0
   111fc:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   111fe:	strd	r2, r3, [sp, #16]
   11202:	ldrd	r2, r3, [sp, #32]
   11206:	ldr	r1, [sp, #40]	; 0x28
   11208:	strd	r2, r3, [sp, #8]
   1120c:	mov	r2, r0
   1120e:	ldr	r3, [pc, #20]	; (11224 <help_command_group@@Base+0x270>)
   11210:	movs	r0, #0
   11212:	add	r3, pc
   11214:	str	r3, [sp, #0]
   11216:	ldr	r3, [pc, #16]	; (11228 <help_command_group@@Base+0x274>)
   11218:	add	r3, pc
   1121a:	bl	10fe0 <help_command_group@@Base+0x2c>
   1121e:	add	sp, #28
   11220:	ldr.w	pc, [sp], #4
   11224:	ldr	r7, [sp, #508]	; 0x1fc
   11226:	movs	r2, r0
   11228:	ldr	r7, [sp, #460]	; 0x1cc
   1122a:	movs	r2, r0
   1122c:	push	{r0, r1, r2, r3, r4, lr}
   1122e:	strd	r2, r3, [sp, #8]
   11232:	mov	r2, r0
   11234:	ldr	r3, [pc, #20]	; (1124c <help_command_group@@Base+0x298>)
   11236:	movs	r0, #0
   11238:	ldr	r1, [sp, #24]
   1123a:	add	r3, pc
   1123c:	str	r3, [sp, #0]
   1123e:	ldr	r3, [pc, #16]	; (11250 <help_command_group@@Base+0x29c>)
   11240:	add	r3, pc
   11242:	bl	10fe0 <help_command_group@@Base+0x2c>
   11246:	add	sp, #20
   11248:	ldr.w	pc, [sp], #4
   1124c:	ldr	r7, [sp, #444]	; 0x1bc
   1124e:	movs	r2, r0
   11250:	ldr	r7, [sp, #396]	; 0x18c
   11252:	movs	r2, r0
   11254:	push	{r0, r1, r2, r3, r4, lr}
   11256:	strd	r2, r3, [sp, #8]
   1125a:	mov	r2, r0
   1125c:	ldr	r3, [pc, #20]	; (11274 <help_command_group@@Base+0x2c0>)
   1125e:	movs	r0, #0
   11260:	ldr	r1, [sp, #24]
   11262:	add	r3, pc
   11264:	str	r3, [sp, #0]
   11266:	ldr	r3, [pc, #16]	; (11278 <help_command_group@@Base+0x2c4>)
   11268:	add	r3, pc
   1126a:	bl	10fe0 <help_command_group@@Base+0x2c>
   1126e:	add	sp, #20
   11270:	ldr.w	pc, [sp], #4
   11274:	ldr	r7, [sp, #360]	; 0x168
   11276:	movs	r2, r0
   11278:	ldr	r7, [sp, #300]	; 0x12c
   1127a:	movs	r2, r0
   1127c:	push	{r0, r1, r2, lr}
   1127e:	mov	r3, r1
   11280:	str	r3, [sp, #4]
   11282:	mov	r1, r2
   11284:	ldr	r3, [pc, #20]	; (1129c <help_command_group@@Base+0x2e8>)
   11286:	mov	r2, r0
   11288:	movs	r0, #0
   1128a:	add	r3, pc
   1128c:	str	r3, [sp, #0]
   1128e:	ldr	r3, [pc, #16]	; (112a0 <help_command_group@@Base+0x2ec>)
   11290:	add	r3, pc
   11292:	bl	10fe0 <help_command_group@@Base+0x2c>
   11296:	add	sp, #12
   11298:	ldr.w	pc, [sp], #4
   1129c:	ldr	r7, [sp, #292]	; 0x124
   1129e:	movs	r2, r0
   112a0:	ldr	r7, [sp, #216]	; 0xd8
   112a2:	movs	r2, r0
   112a4:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   112a6:	strd	r2, r3, [sp, #12]
   112aa:	mov	r2, r0
   112ac:	strd	r1, r3, [sp, #4]
   112b0:	movs	r0, #0
   112b2:	ldr	r3, [pc, #20]	; (112c8 <help_command_group@@Base+0x314>)
   112b4:	ldr	r1, [sp, #32]
   112b6:	add	r3, pc
   112b8:	str	r3, [sp, #0]
   112ba:	ldr	r3, [pc, #16]	; (112cc <help_command_group@@Base+0x318>)
   112bc:	add	r3, pc
   112be:	bl	10fe0 <help_command_group@@Base+0x2c>
   112c2:	add	sp, #28
   112c4:	ldr.w	pc, [sp], #4
   112c8:	ldr	r7, [sp, #188]	; 0xbc
   112ca:	movs	r2, r0
   112cc:	ldr	r7, [sp, #124]	; 0x7c
   112ce:	movs	r2, r0
   112d0:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   112d4:	sub.w	sp, sp, #4128	; 0x1020
   112d8:	sub	sp, #24
   112da:	mov	r6, r3
   112dc:	add.w	r3, sp, #4192	; 0x1060
   112e0:	ldr	r4, [pc, #164]	; (11388 <help_command_group@@Base+0x3d4>)
   112e2:	adds	r3, #8
   112e4:	mov	r5, r0
   112e6:	mov	r7, r2
   112e8:	ldr	r0, [pc, #160]	; (1138c <help_command_group@@Base+0x3d8>)
   112ea:	ldr	r2, [r3, #0]
   112ec:	add.w	r3, sp, #4192	; 0x1060
   112f0:	add	r4, pc
   112f2:	adds	r3, #24
   112f4:	add.w	r8, sp, #52	; 0x34
   112f8:	ldr	r1, [r3, #0]
   112fa:	ldr	r0, [r4, r0]
   112fc:	add.w	r3, sp, #4128	; 0x1020
   11300:	adds	r3, #20
   11302:	ldr	r0, [r0, #0]
   11304:	str	r0, [r3, #0]
   11306:	mov.w	r0, #0
   1130a:	mov	r0, r8
   1130c:	strd	r1, r2, [sp, #40]	; 0x28
   11310:	bl	136d0 <path_cat_out@@Base>
   11314:	ldrd	r1, r2, [sp, #40]	; 0x28
   11318:	subs	r4, r0, #0
   1131a:	bge.n	11342 <help_command_group@@Base+0x38e>
   1131c:	ldr	r1, [pc, #112]	; (11390 <help_command_group@@Base+0x3dc>)
   1131e:	ldr	r0, [pc, #116]	; (11394 <help_command_group@@Base+0x3e0>)
   11320:	add	r1, pc
   11322:	add	r0, pc
   11324:	bl	17b7c <__btrfs_error@@Base>
   11328:	ldr	r1, [pc, #108]	; (11398 <help_command_group@@Base+0x3e4>)
   1132a:	add.w	r3, sp, #4128	; 0x1020
   1132e:	ldr	r2, [pc, #92]	; (1138c <help_command_group@@Base+0x3d8>)
   11330:	adds	r3, #20
   11332:	add	r1, pc
   11334:	ldr	r2, [r1, r2]
   11336:	ldr	r1, [r2, #0]
   11338:	ldr	r2, [r3, #0]
   1133a:	eors	r1, r2
   1133c:	beq.n	1137c <help_command_group@@Base+0x3c8>
   1133e:	blx	8708 <__stack_chk_fail@plt>
   11342:	add.w	r3, sp, #4192	; 0x1060
   11346:	movs	r0, #0
   11348:	adds	r3, #16
   1134a:	ldrd	r2, r3, [r3]
   1134e:	str.w	r8, [sp, #24]
   11352:	strd	r2, r3, [sp, #32]
   11356:	add.w	r3, sp, #4160	; 0x1040
   1135a:	adds	r3, #16
   1135c:	ldrd	r2, r3, [r3]
   11360:	strd	r7, r6, [sp, #8]
   11364:	strd	r2, r3, [sp, #16]
   11368:	mov	r2, r5
   1136a:	ldr	r3, [pc, #48]	; (1139c <help_command_group@@Base+0x3e8>)
   1136c:	add	r3, pc
   1136e:	str	r3, [sp, #0]
   11370:	ldr	r3, [pc, #44]	; (113a0 <help_command_group@@Base+0x3ec>)
   11372:	add	r3, pc
   11374:	bl	10fe0 <help_command_group@@Base+0x2c>
   11378:	mov	r4, r0
   1137a:	b.n	11328 <help_command_group@@Base+0x374>
   1137c:	mov	r0, r4
   1137e:	add.w	sp, sp, #4128	; 0x1020
   11382:	add	sp, #24
   11384:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   11388:	subs	r2, #144	; 0x90
   1138a:	movs	r5, r0
   1138c:	lsls	r0, r5, #8
   1138e:	movs	r0, r0
   11390:	ldr	r6, [sp, #888]	; 0x378
   11392:	movs	r2, r0
   11394:	ldr	r6, [sp, #136]	; 0x88
   11396:	movs	r2, r0
   11398:	subs	r2, #78	; 0x4e
   1139a:	movs	r5, r0
   1139c:	ldr	r6, [sp, #608]	; 0x260
   1139e:	movs	r2, r0
   113a0:	ldr	r6, [sp, #560]	; 0x230
   113a2:	movs	r2, r0
   113a4:	push	{r4, r5, lr}
   113a6:	sub	sp, #28
   113a8:	strd	r2, r3, [sp, #8]
   113ac:	mov	r2, r0
   113ae:	ldr	r3, [pc, #28]	; (113cc <help_command_group@@Base+0x418>)
   113b0:	movs	r0, #0
   113b2:	ldrd	r4, r5, [sp, #40]	; 0x28
   113b6:	add	r3, pc
   113b8:	str	r3, [sp, #0]
   113ba:	ldr	r3, [pc, #20]	; (113d0 <help_command_group@@Base+0x41c>)
   113bc:	ldr	r1, [sp, #48]	; 0x30
   113be:	add	r3, pc
   113c0:	strd	r4, r5, [sp, #16]
   113c4:	bl	10fe0 <help_command_group@@Base+0x2c>
   113c8:	add	sp, #28
   113ca:	pop	{r4, r5, pc}
   113cc:	ldr	r5, [sp, #768]	; 0x300
   113ce:	movs	r2, r0
   113d0:	ldr	r6, [sp, #468]	; 0x1d4
   113d2:	movs	r2, r0
   113d4:	ldr	r3, [pc, #20]	; (113ec <help_command_group@@Base+0x438>)
   113d6:	push	{r0, r1, r2, lr}
   113d8:	add	r3, pc
   113da:	mov	r2, r0
   113dc:	movs	r0, #0
   113de:	str	r0, [sp, #0]
   113e0:	bl	10fe0 <help_command_group@@Base+0x2c>
   113e4:	add	sp, #12
   113e6:	ldr.w	pc, [sp], #4
   113ea:	nop
   113ec:	cmp	r4, #197	; 0xc5
   113ee:	movs	r4, r0
   113f0:	ldr	r3, [pc, #20]	; (11408 <help_command_group@@Base+0x454>)
   113f2:	push	{r0, r1, r2, lr}
   113f4:	add	r3, pc
   113f6:	mov	r2, r0
   113f8:	movs	r0, #0
   113fa:	str	r0, [sp, #0]
   113fc:	bl	10fe0 <help_command_group@@Base+0x2c>
   11400:	add	sp, #12
   11402:	ldr.w	pc, [sp], #4
   11406:	nop
   11408:	cmp	r4, #185	; 0xb9
   1140a:	movs	r4, r0
   1140c:	push	{r0, r1, r2, lr}
   1140e:	mov	r3, r1
   11410:	str	r3, [sp, #4]
   11412:	mov	r1, r2
   11414:	ldr	r3, [pc, #20]	; (1142c <help_command_group@@Base+0x478>)
   11416:	mov	r2, r0
   11418:	movs	r0, #0
   1141a:	add	r3, pc
   1141c:	str	r3, [sp, #0]
   1141e:	ldr	r3, [pc, #16]	; (11430 <help_command_group@@Base+0x47c>)
   11420:	add	r3, pc
   11422:	bl	10fe0 <help_command_group@@Base+0x2c>
   11426:	add	sp, #12
   11428:	ldr.w	pc, [sp], #4
   1142c:	ldr	r6, [sp, #124]	; 0x7c
   1142e:	movs	r2, r0
   11430:	ldr	r6, [sp, #172]	; 0xac
   11432:	movs	r2, r0
   11434:	push	{r4, r5, r6, r7, lr}
   11436:	mov	r6, r0
   11438:	ldr	r0, [pc, #120]	; (114b4 <help_command_group@@Base+0x500>)
   1143a:	mov	r5, r1
   1143c:	mov	r1, r2
   1143e:	ldr	r2, [pc, #120]	; (114b8 <help_command_group@@Base+0x504>)
   11440:	add	r0, pc
   11442:	sub.w	sp, sp, #4096	; 0x1000
   11446:	sub	sp, #28
   11448:	ldr	r2, [r0, r2]
   1144a:	add.w	r3, sp, #4096	; 0x1000
   1144e:	add	r7, sp, #20
   11450:	adds	r3, #20
   11452:	ldr	r2, [r2, #0]
   11454:	str	r2, [r3, #0]
   11456:	mov.w	r2, #0
   1145a:	mov	r2, r5
   1145c:	mov	r0, r7
   1145e:	str	r1, [sp, #12]
   11460:	bl	136d0 <path_cat_out@@Base>
   11464:	ldr	r1, [sp, #12]
   11466:	subs	r4, r0, #0
   11468:	bge.n	11492 <help_command_group@@Base+0x4de>
   1146a:	ldr	r1, [pc, #80]	; (114bc <help_command_group@@Base+0x508>)
   1146c:	mov	r2, r5
   1146e:	ldr	r0, [pc, #80]	; (114c0 <help_command_group@@Base+0x50c>)
   11470:	add	r1, pc
   11472:	add	r0, pc
   11474:	bl	17b7c <__btrfs_error@@Base>
   11478:	ldr	r1, [pc, #72]	; (114c4 <help_command_group@@Base+0x510>)
   1147a:	add.w	r3, sp, #4096	; 0x1000
   1147e:	ldr	r2, [pc, #56]	; (114b8 <help_command_group@@Base+0x504>)
   11480:	adds	r3, #20
   11482:	add	r1, pc
   11484:	ldr	r2, [r1, r2]
   11486:	ldr	r1, [r2, #0]
   11488:	ldr	r2, [r3, #0]
   1148a:	eors	r1, r2
   1148c:	beq.n	114aa <help_command_group@@Base+0x4f6>
   1148e:	blx	8708 <__stack_chk_fail@plt>
   11492:	ldr	r3, [pc, #52]	; (114c8 <help_command_group@@Base+0x514>)
   11494:	mov	r2, r6
   11496:	movs	r0, #0
   11498:	str	r7, [sp, #4]
   1149a:	add	r3, pc
   1149c:	str	r3, [sp, #0]
   1149e:	ldr	r3, [pc, #44]	; (114cc <help_command_group@@Base+0x518>)
   114a0:	add	r3, pc
   114a2:	bl	10fe0 <help_command_group@@Base+0x2c>
   114a6:	mov	r4, r0
   114a8:	b.n	11478 <help_command_group@@Base+0x4c4>
   114aa:	mov	r0, r4
   114ac:	add.w	sp, sp, #4096	; 0x1000
   114b0:	add	sp, #28
   114b2:	pop	{r4, r5, r6, r7, pc}
   114b4:	subs	r1, #64	; 0x40
   114b6:	movs	r5, r0
   114b8:	lsls	r0, r5, #8
   114ba:	movs	r0, r0
   114bc:	ldr	r5, [sp, #836]	; 0x344
   114be:	movs	r2, r0
   114c0:	ldr	r4, [sp, #840]	; 0x348
   114c2:	movs	r2, r0
   114c4:	subs	r0, #254	; 0xfe
   114c6:	movs	r5, r0
   114c8:	ldr	r5, [sp, #636]	; 0x27c
   114ca:	movs	r2, r0
   114cc:	ldr	r5, [sp, #644]	; 0x284
   114ce:	movs	r2, r0
   114d0:	push	{r0, r1, r2, lr}
   114d2:	mov	r3, r1
   114d4:	str	r3, [sp, #4]
   114d6:	mov	r1, r2
   114d8:	ldr	r3, [pc, #20]	; (114f0 <help_command_group@@Base+0x53c>)
   114da:	mov	r2, r0
   114dc:	movs	r0, #0
   114de:	add	r3, pc
   114e0:	str	r3, [sp, #0]
   114e2:	ldr	r3, [pc, #16]	; (114f4 <help_command_group@@Base+0x540>)
   114e4:	add	r3, pc
   114e6:	bl	10fe0 <help_command_group@@Base+0x2c>
   114ea:	add	sp, #12
   114ec:	ldr.w	pc, [sp], #4
   114f0:	ldr	r5, [sp, #364]	; 0x16c
   114f2:	movs	r2, r0
   114f4:	ldr	r5, [sp, #400]	; 0x190
   114f6:	movs	r2, r0
   114f8:	ldr	r3, [pc, #20]	; (11510 <help_command_group@@Base+0x55c>)
   114fa:	push	{r0, r1, r2, lr}
   114fc:	add	r3, pc
   114fe:	mov	r2, r0
   11500:	movs	r0, #0
   11502:	str	r0, [sp, #0]
   11504:	bl	10fe0 <help_command_group@@Base+0x2c>
   11508:	add	sp, #12
   1150a:	ldr.w	pc, [sp], #4
   1150e:	nop
   11510:	ldr	r5, [sp, #336]	; 0x150
   11512:	movs	r2, r0
   11514:	ldr	r3, [pc, #20]	; (1152c <help_command_group@@Base+0x578>)
   11516:	push	{r0, r1, r2, lr}
   11518:	add	r3, pc
   1151a:	mov	r2, r0
   1151c:	movs	r0, #0
   1151e:	str	r0, [sp, #0]
   11520:	bl	10fe0 <help_command_group@@Base+0x2c>
   11524:	add	sp, #12
   11526:	ldr.w	pc, [sp], #4
   1152a:	nop
   1152c:	ldr	r5, [sp, #252]	; 0xfc
   1152e:	movs	r2, r0
   11530:	push	{r4, r5, lr}
   11532:	sub	sp, #28
   11534:	strd	r2, r3, [sp, #8]
   11538:	mov	r2, r0
   1153a:	ldr	r3, [pc, #28]	; (11558 <help_command_group@@Base+0x5a4>)
   1153c:	movs	r0, #0
   1153e:	ldrd	r4, r5, [sp, #40]	; 0x28
   11542:	add	r3, pc
   11544:	str	r3, [sp, #0]
   11546:	ldr	r3, [pc, #20]	; (1155c <help_command_group@@Base+0x5a8>)
   11548:	ldr	r1, [sp, #48]	; 0x30
   1154a:	add	r3, pc
   1154c:	strd	r4, r5, [sp, #16]
   11550:	bl	10fe0 <help_command_group@@Base+0x2c>
   11554:	add	sp, #28
   11556:	pop	{r4, r5, pc}
   11558:	ldr	r5, [sp, #136]	; 0x88
   1155a:	movs	r2, r0
   1155c:	ldr	r5, [sp, #80]	; 0x50
   1155e:	movs	r2, r0
   11560:	ldr	r3, [pc, #20]	; (11578 <help_command_group@@Base+0x5c4>)
   11562:	push	{r0, r1, r2, lr}
   11564:	add	r3, pc
   11566:	mov	r2, r0
   11568:	movs	r0, #0
   1156a:	str	r0, [sp, #0]
   1156c:	bl	10fe0 <help_command_group@@Base+0x2c>
   11570:	add	sp, #12
   11572:	ldr.w	pc, [sp], #4
   11576:	nop
   11578:	ldr	r5, [sp, #84]	; 0x54
   1157a:	movs	r2, r0
   1157c:	ldr	r3, [pc, #20]	; (11594 <help_command_group@@Base+0x5e0>)
   1157e:	push	{r0, r1, r2, lr}
   11580:	add	r3, pc
   11582:	mov	r2, r0
   11584:	movs	r0, #0
   11586:	str	r0, [sp, #0]
   11588:	bl	10fe0 <help_command_group@@Base+0x2c>
   1158c:	add	sp, #12
   1158e:	ldr.w	pc, [sp], #4
   11592:	nop
   11594:	ldr	r4, [sp, #1020]	; 0x3fc
   11596:	movs	r2, r0
   11598:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1159c:	mov	r6, r2
   1159e:	ldr	r2, [pc, #116]	; (11614 <help_command_group@@Base+0x660>)
   115a0:	sub	sp, #120	; 0x78
   115a2:	mov	r5, r3
   115a4:	ldr	r3, [pc, #112]	; (11618 <help_command_group@@Base+0x664>)
   115a6:	add	r2, pc
   115a8:	ldr.w	sl, [sp, #152]	; 0x98
   115ac:	add	r7, sp, #36	; 0x24
   115ae:	add.w	r8, sp, #76	; 0x4c
   115b2:	ldr	r3, [r2, r3]
   115b4:	mov	r4, r0
   115b6:	mov	r0, r1
   115b8:	mov	r1, r7
   115ba:	ldr	r3, [r3, #0]
   115bc:	str	r3, [sp, #116]	; 0x74
   115be:	mov.w	r3, #0
   115c2:	ldr.w	r9, [sp, #168]	; 0xa8
   115c6:	blx	85c4 <uuid_unparse@plt>
   115ca:	mov	r1, r8
   115cc:	mov	r0, sl
   115ce:	blx	85c4 <uuid_unparse@plt>
   115d2:	ldrd	r2, r3, [sp, #160]	; 0xa0
   115d6:	mov	r1, r9
   115d8:	movs	r0, #1
   115da:	str.w	r8, [sp, #16]
   115de:	strd	r2, r3, [sp, #24]
   115e2:	mov	r2, r4
   115e4:	ldr	r3, [pc, #52]	; (1161c <help_command_group@@Base+0x668>)
   115e6:	strd	r6, r5, [sp, #8]
   115ea:	add	r3, pc
   115ec:	str	r3, [sp, #0]
   115ee:	ldr	r3, [pc, #48]	; (11620 <help_command_group@@Base+0x66c>)
   115f0:	str	r7, [sp, #4]
   115f2:	add	r3, pc
   115f4:	bl	10fe0 <help_command_group@@Base+0x2c>
   115f8:	ldr	r2, [pc, #40]	; (11624 <help_command_group@@Base+0x670>)
   115fa:	ldr	r3, [pc, #28]	; (11618 <help_command_group@@Base+0x664>)
   115fc:	add	r2, pc
   115fe:	ldr	r3, [r2, r3]
   11600:	ldr	r2, [r3, #0]
   11602:	ldr	r3, [sp, #116]	; 0x74
   11604:	eors	r2, r3
   11606:	beq.n	1160c <help_command_group@@Base+0x658>
   11608:	blx	8708 <__stack_chk_fail@plt>
   1160c:	add	sp, #120	; 0x78
   1160e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   11612:	nop
   11614:	adds	r7, #218	; 0xda
   11616:	movs	r5, r0
   11618:	lsls	r0, r5, #8
   1161a:	movs	r0, r0
   1161c:	ldr	r4, [sp, #624]	; 0x270
   1161e:	movs	r2, r0
   11620:	cmp	r3, #121	; 0x79
   11622:	movs	r4, r0
   11624:	adds	r7, #132	; 0x84
   11626:	movs	r5, r0
   11628:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1162c:	mov	r6, r2
   1162e:	ldr	r2, [pc, #88]	; (11688 <help_command_group@@Base+0x6d4>)
   11630:	mov	r5, r3
   11632:	ldr	r3, [pc, #88]	; (1168c <help_command_group@@Base+0x6d8>)
   11634:	sub	sp, #64	; 0x40
   11636:	add	r2, pc
   11638:	add	r7, sp, #20
   1163a:	mov	r4, r0
   1163c:	mov	r0, r1
   1163e:	ldr	r3, [r2, r3]
   11640:	mov	r1, r7
   11642:	ldr.w	r8, [sp, #88]	; 0x58
   11646:	ldr	r3, [r3, #0]
   11648:	str	r3, [sp, #60]	; 0x3c
   1164a:	mov.w	r3, #0
   1164e:	blx	85c4 <uuid_unparse@plt>
   11652:	ldr	r3, [pc, #60]	; (11690 <help_command_group@@Base+0x6dc>)
   11654:	mov	r2, r4
   11656:	mov	r1, r8
   11658:	movs	r0, #1
   1165a:	add	r3, pc
   1165c:	str	r3, [sp, #0]
   1165e:	ldr	r3, [pc, #52]	; (11694 <help_command_group@@Base+0x6e0>)
   11660:	strd	r6, r5, [sp, #8]
   11664:	add	r3, pc
   11666:	str	r7, [sp, #4]
   11668:	bl	10fe0 <help_command_group@@Base+0x2c>
   1166c:	ldr	r2, [pc, #40]	; (11698 <help_command_group@@Base+0x6e4>)
   1166e:	ldr	r3, [pc, #28]	; (1168c <help_command_group@@Base+0x6d8>)
   11670:	add	r2, pc
   11672:	ldr	r3, [r2, r3]
   11674:	ldr	r2, [r3, #0]
   11676:	ldr	r3, [sp, #60]	; 0x3c
   11678:	eors	r2, r3
   1167a:	beq.n	11680 <help_command_group@@Base+0x6cc>
   1167c:	blx	8708 <__stack_chk_fail@plt>
   11680:	add	sp, #64	; 0x40
   11682:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   11686:	nop
   11688:	adds	r7, #74	; 0x4a
   1168a:	movs	r5, r0
   1168c:	lsls	r0, r5, #8
   1168e:	movs	r0, r0
   11690:	ldr	r4, [sp, #428]	; 0x1ac
   11692:	movs	r2, r0
   11694:	ldr	r4, [sp, #360]	; 0x168
   11696:	movs	r2, r0
   11698:	adds	r7, #16
   1169a:	movs	r5, r0
   1169c:	ldr	r2, [pc, #112]	; (11710 <help_command_group@@Base+0x75c>)
   1169e:	ldr	r3, [pc, #116]	; (11714 <help_command_group@@Base+0x760>)
   116a0:	add	r2, pc
   116a2:	push	{r4, r5, lr}
   116a4:	sub	sp, #68	; 0x44
   116a6:	ldr	r3, [r2, r3]
   116a8:	mov	r5, r1
   116aa:	mov	r4, r0
   116ac:	ldr	r3, [r3, #0]
   116ae:	str	r3, [sp, #60]	; 0x3c
   116b0:	mov.w	r3, #0
   116b4:	add	r3, sp, #16
   116b6:	str	r3, [sp, #12]
   116b8:	mov	r1, r3
   116ba:	blx	8730 <localtime_r@plt>
   116be:	ldr	r3, [sp, #12]
   116c0:	cbnz	r0, 116ea <help_command_group@@Base+0x736>
   116c2:	ldrd	r2, r3, [r4]
   116c6:	ldr	r0, [pc, #80]	; (11718 <help_command_group@@Base+0x764>)
   116c8:	str	r3, [sp, #0]
   116ca:	add	r0, pc
   116cc:	asrs	r3, r2, #31
   116ce:	bl	17b7c <__btrfs_error@@Base>
   116d2:	mvn.w	r0, #21
   116d6:	ldr	r2, [pc, #68]	; (1171c <help_command_group@@Base+0x768>)
   116d8:	ldr	r3, [pc, #56]	; (11714 <help_command_group@@Base+0x760>)
   116da:	add	r2, pc
   116dc:	ldr	r3, [r2, r3]
   116de:	ldr	r2, [r3, #0]
   116e0:	ldr	r3, [sp, #60]	; 0x3c
   116e2:	eors	r2, r3
   116e4:	beq.n	1170a <help_command_group@@Base+0x756>
   116e6:	blx	8708 <__stack_chk_fail@plt>
   116ea:	ldr	r2, [pc, #52]	; (11720 <help_command_group@@Base+0x76c>)
   116ec:	movs	r1, #63	; 0x3f
   116ee:	mov	r0, r5
   116f0:	add	r2, pc
   116f2:	blx	88a4 <strftime@plt>
   116f6:	cbnz	r0, 11706 <help_command_group@@Base+0x752>
   116f8:	ldrd	r2, r3, [r4]
   116fc:	ldr	r0, [pc, #36]	; (11724 <help_command_group@@Base+0x770>)
   116fe:	str	r3, [sp, #0]
   11700:	add	r0, pc
   11702:	asrs	r3, r2, #31
   11704:	b.n	116ce <help_command_group@@Base+0x71a>
   11706:	movs	r0, #0
   11708:	b.n	116d6 <help_command_group@@Base+0x722>
   1170a:	add	sp, #68	; 0x44
   1170c:	pop	{r4, r5, pc}
   1170e:	nop
   11710:	adds	r6, #224	; 0xe0
   11712:	movs	r5, r0
   11714:	lsls	r0, r5, #8
   11716:	movs	r0, r0
   11718:	ldr	r4, [sp, #64]	; 0x40
   1171a:	movs	r2, r0
   1171c:	adds	r6, #166	; 0xa6
   1171e:	movs	r5, r0
   11720:	ldr	r4, [sp, #104]	; 0x68
   11722:	movs	r2, r0
   11724:	ldr	r4, [sp, #72]	; 0x48
   11726:	movs	r2, r0
   11728:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1172c:	mov	r6, r2
   1172e:	ldr	r2, [pc, #128]	; (117b0 <help_command_group@@Base+0x7fc>)
   11730:	mov	r5, r3
   11732:	ldr	r3, [pc, #128]	; (117b4 <help_command_group@@Base+0x800>)
   11734:	sub	sp, #220	; 0xdc
   11736:	add	r2, pc
   11738:	add	r7, sp, #20
   1173a:	mov	r4, r0
   1173c:	mov	r0, r1
   1173e:	ldr	r3, [r2, r3]
   11740:	mov	r1, r7
   11742:	ldr.w	r9, [sp, #248]	; 0xf8
   11746:	ldr	r3, [r3, #0]
   11748:	str	r3, [sp, #212]	; 0xd4
   1174a:	mov.w	r3, #0
   1174e:	bl	1169c <help_command_group@@Base+0x6e8>
   11752:	cmp	r0, #0
   11754:	bge.n	1176e <help_command_group@@Base+0x7ba>
   11756:	mvn.w	r0, #21
   1175a:	ldr	r2, [pc, #92]	; (117b8 <help_command_group@@Base+0x804>)
   1175c:	ldr	r3, [pc, #84]	; (117b4 <help_command_group@@Base+0x800>)
   1175e:	add	r2, pc
   11760:	ldr	r3, [r2, r3]
   11762:	ldr	r2, [r3, #0]
   11764:	ldr	r3, [sp, #212]	; 0xd4
   11766:	eors	r2, r3
   11768:	beq.n	117a8 <help_command_group@@Base+0x7f4>
   1176a:	blx	8708 <__stack_chk_fail@plt>
   1176e:	add.w	r8, sp, #84	; 0x54
   11772:	mov	r0, r6
   11774:	mov	r1, r8
   11776:	bl	1169c <help_command_group@@Base+0x6e8>
   1177a:	cmp	r0, #0
   1177c:	blt.n	11756 <help_command_group@@Base+0x7a2>
   1177e:	add	r6, sp, #148	; 0x94
   11780:	mov	r0, r5
   11782:	mov	r1, r6
   11784:	bl	1169c <help_command_group@@Base+0x6e8>
   11788:	cmp	r0, #0
   1178a:	blt.n	11756 <help_command_group@@Base+0x7a2>
   1178c:	ldr	r3, [pc, #44]	; (117bc <help_command_group@@Base+0x808>)
   1178e:	mov	r2, r4
   11790:	mov	r1, r9
   11792:	strd	r8, r6, [sp, #8]
   11796:	add	r3, pc
   11798:	str	r3, [sp, #0]
   1179a:	ldr	r3, [pc, #36]	; (117c0 <help_command_group@@Base+0x80c>)
   1179c:	movs	r0, #0
   1179e:	str	r7, [sp, #4]
   117a0:	add	r3, pc
   117a2:	bl	10fe0 <help_command_group@@Base+0x2c>
   117a6:	b.n	1175a <help_command_group@@Base+0x7a6>
   117a8:	add	sp, #220	; 0xdc
   117aa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   117ae:	nop
   117b0:	adds	r6, #74	; 0x4a
   117b2:	movs	r5, r0
   117b4:	lsls	r0, r5, #8
   117b6:	movs	r0, r0
   117b8:	adds	r6, #34	; 0x22
   117ba:	movs	r5, r0
   117bc:	ldr	r3, [sp, #756]	; 0x2f4
   117be:	movs	r2, r0
   117c0:	ldr	r3, [sp, #688]	; 0x2b0
   117c2:	movs	r2, r0

000117c4 <btrfs_parse_features_to_string@@Base>:
   117c4:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117c8:	mov	r5, r0
   117ca:	ldr.w	r8, [pc, #72]	; 11814 <btrfs_parse_features_to_string@@Base+0x50>
   117ce:	mov	r9, r2
   117d0:	ldr.w	fp, [pc, #68]	; 11818 <btrfs_parse_features_to_string@@Base+0x54>
   117d4:	mov	sl, r3
   117d6:	add	r8, pc
   117d8:	movs	r4, #0
   117da:	add	fp, pc
   117dc:	strb	r4, [r0, #0]
   117de:	ldrd	r2, r3, [r8, #8]
   117e2:	and.w	r6, r9, r2
   117e6:	and.w	r7, sl, r3
   117ea:	orrs.w	r3, r6, r7
   117ee:	beq.n	11806 <btrfs_parse_features_to_string@@Base+0x42>
   117f0:	ldrb	r3, [r5, #0]
   117f2:	cbz	r3, 117fc <btrfs_parse_features_to_string@@Base+0x38>
   117f4:	mov	r1, fp
   117f6:	mov	r0, r5
   117f8:	blx	87a8 <strcat@plt+0x4>
   117fc:	ldr.w	r1, [r8]
   11800:	mov	r0, r5
   11802:	blx	87a8 <strcat@plt+0x4>
   11806:	adds	r4, #1
   11808:	add.w	r8, r8, #48	; 0x30
   1180c:	cmp	r4, #7
   1180e:	bne.n	117de <btrfs_parse_features_to_string@@Base+0x1a>
   11810:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11814:	cmp	r6, #30
   11816:	movs	r5, r0
   11818:	cbnz	r6, 11854 <btrfs_process_fs_features@@Base+0x38>
   1181a:	movs	r2, r0

0001181c <btrfs_process_fs_features@@Base>:
   1181c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   11820:	mov	r6, r0
   11822:	ldr	r4, [pc, #56]	; (1185c <btrfs_process_fs_features@@Base+0x40>)
   11824:	mov	r7, r1
   11826:	ldr.w	sl, [pc, #56]	; 11860 <btrfs_process_fs_features@@Base+0x44>
   1182a:	movs	r5, #0
   1182c:	add	r4, pc
   1182e:	add	sl, pc
   11830:	ldrd	r2, r3, [r4, #8]
   11834:	and.w	r8, r6, r2
   11838:	and.w	r9, r7, r3
   1183c:	orrs.w	r3, r8, r9
   11840:	beq.n	1184e <btrfs_process_fs_features@@Base+0x32>
   11842:	ldr	r3, [r4, #44]	; 0x2c
   11844:	mov	r1, sl
   11846:	ldr	r2, [r4, #0]
   11848:	movs	r0, #1
   1184a:	blx	8a30 <__printf_chk@plt+0x4>
   1184e:	adds	r5, #1
   11850:	adds	r4, #48	; 0x30
   11852:	cmp	r5, #7
   11854:	bne.n	11830 <btrfs_process_fs_features@@Base+0x14>
   11856:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1185a:	nop
   1185c:	cmp	r5, #200	; 0xc8
   1185e:	movs	r5, r0
   11860:	ldr	r3, [sp, #256]	; 0x100
   11862:	movs	r2, r0

00011864 <btrfs_list_all_fs_features@@Base>:
   11864:	ldr	r3, [pc, #168]	; (11910 <btrfs_list_all_fs_features@@Base+0xac>)
   11866:	ldr	r2, [pc, #172]	; (11914 <btrfs_list_all_fs_features@@Base+0xb0>)
   11868:	add	r3, pc
   1186a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1186e:	mov	r7, r0
   11870:	ldr	r5, [r3, r2]
   11872:	sub	sp, #28
   11874:	ldr	r0, [pc, #160]	; (11918 <btrfs_list_all_fs_features@@Base+0xb4>)
   11876:	mov	r8, r1
   11878:	ldr	r4, [pc, #160]	; (1191c <btrfs_list_all_fs_features@@Base+0xb8>)
   1187a:	movs	r6, #0
   1187c:	ldr	r1, [r5, #0]
   1187e:	add	r0, pc
   11880:	blx	8b6c <fputs@plt+0x4>
   11884:	ldr.w	r9, [pc, #152]	; 11920 <btrfs_list_all_fs_features@@Base+0xbc>
   11888:	ldr.w	sl, [pc, #152]	; 11924 <btrfs_list_all_fs_features@@Base+0xc0>
   1188c:	add	r4, pc
   1188e:	ldr.w	fp, [pc, #152]	; 11928 <btrfs_list_all_fs_features@@Base+0xc4>
   11892:	add	r9, pc
   11894:	add	sl, pc
   11896:	add	fp, pc
   11898:	ldrd	r2, r3, [r4, #8]
   1189c:	and.w	r1, r2, r7
   118a0:	str	r1, [sp, #16]
   118a2:	and.w	r1, r3, r8
   118a6:	str	r1, [sp, #20]
   118a8:	ldrd	r0, r1, [sp, #16]
   118ac:	orrs	r1, r0
   118ae:	bne.n	11900 <btrfs_list_all_fs_features@@Base+0x9c>
   118b0:	strd	r2, r3, [sp, #8]
   118b4:	movs	r1, #1
   118b6:	ldr	r3, [r4, #44]	; 0x2c
   118b8:	mov	r2, r9
   118ba:	str	r3, [sp, #0]
   118bc:	ldr	r3, [r4, #0]
   118be:	ldr	r0, [r5, #0]
   118c0:	blx	8a64 <__fprintf_chk@plt+0x4>
   118c4:	ldr	r3, [r4, #24]
   118c6:	cbz	r3, 118d6 <btrfs_list_all_fs_features@@Base+0x72>
   118c8:	ldr	r2, [pc, #96]	; (1192c <btrfs_list_all_fs_features@@Base+0xc8>)
   118ca:	movs	r1, #1
   118cc:	ldr	r3, [r4, #20]
   118ce:	ldr	r0, [r5, #0]
   118d0:	add	r2, pc
   118d2:	blx	8a64 <__fprintf_chk@plt+0x4>
   118d6:	ldr	r3, [r4, #32]
   118d8:	cbz	r3, 118e8 <btrfs_list_all_fs_features@@Base+0x84>
   118da:	ldr	r2, [pc, #84]	; (11930 <btrfs_list_all_fs_features@@Base+0xcc>)
   118dc:	movs	r1, #1
   118de:	ldr	r3, [r4, #28]
   118e0:	ldr	r0, [r5, #0]
   118e2:	add	r2, pc
   118e4:	blx	8a64 <__fprintf_chk@plt+0x4>
   118e8:	ldr	r3, [r4, #40]	; 0x28
   118ea:	cbz	r3, 118f8 <btrfs_list_all_fs_features@@Base+0x94>
   118ec:	ldr	r3, [r4, #36]	; 0x24
   118ee:	mov	r2, fp
   118f0:	ldr	r0, [r5, #0]
   118f2:	movs	r1, #1
   118f4:	blx	8a64 <__fprintf_chk@plt+0x4>
   118f8:	ldr	r1, [r5, #0]
   118fa:	mov	r0, sl
   118fc:	blx	8b6c <fputs@plt+0x4>
   11900:	adds	r6, #1
   11902:	adds	r4, #48	; 0x30
   11904:	cmp	r6, #6
   11906:	bne.n	11898 <btrfs_list_all_fs_features@@Base+0x34>
   11908:	add	sp, #28
   1190a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1190e:	nop
   11910:	adds	r5, #24
   11912:	movs	r5, r0
   11914:	lsls	r0, r7, #8
   11916:	movs	r0, r0
   11918:	ldr	r3, [sp, #88]	; 0x58
   1191a:	movs	r2, r0
   1191c:	cmp	r5, #104	; 0x68
   1191e:	movs	r5, r0
   11920:	ldr	r3, [sp, #136]	; 0x88
   11922:	movs	r2, r0
   11924:	movs	r4, #72	; 0x48
   11926:	movs	r4, r0
   11928:	ldr	r3, [sp, #280]	; 0x118
   1192a:	movs	r2, r0
   1192c:	ldr	r2, [sp, #984]	; 0x3d8
   1192e:	movs	r2, r0
   11930:	ldr	r2, [sp, #960]	; 0x3c0
   11932:	movs	r2, r0

00011934 <btrfs_parse_fs_features@@Base>:
   11934:	ldr	r2, [pc, #188]	; (119f4 <btrfs_parse_fs_features@@Base+0xc0>)
   11936:	ldr	r3, [pc, #192]	; (119f8 <btrfs_parse_fs_features@@Base+0xc4>)
   11938:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1193c:	add	r2, pc
   1193e:	sub	sp, #20
   11940:	mov	r5, r1
   11942:	add	r7, sp, #8
   11944:	ldr	r1, [pc, #180]	; (119fc <btrfs_parse_fs_features@@Base+0xc8>)
   11946:	ldr	r3, [r2, r3]
   11948:	add	r1, pc
   1194a:	mov	r2, r7
   1194c:	ldr	r3, [r3, #0]
   1194e:	str	r3, [sp, #12]
   11950:	mov.w	r3, #0
   11954:	movs	r3, #0
   11956:	str	r3, [sp, #8]
   11958:	blx	8820 <strtok_r@plt>
   1195c:	ldr.w	r9, [pc, #160]	; 11a00 <btrfs_parse_fs_features@@Base+0xcc>
   11960:	add	r9, pc
   11962:	mov	r4, r0
   11964:	cbnz	r4, 1197a <btrfs_parse_fs_features@@Base+0x46>
   11966:	ldr	r2, [pc, #156]	; (11a04 <btrfs_parse_fs_features@@Base+0xd0>)
   11968:	ldr	r3, [pc, #140]	; (119f8 <btrfs_parse_fs_features@@Base+0xc4>)
   1196a:	add	r2, pc
   1196c:	ldr	r3, [r2, r3]
   1196e:	ldr	r2, [r3, #0]
   11970:	ldr	r3, [sp, #12]
   11972:	eors	r2, r3
   11974:	beq.n	119ec <btrfs_parse_fs_features@@Base+0xb8>
   11976:	blx	8708 <__stack_chk_fail@plt>
   1197a:	ldr	r6, [pc, #140]	; (11a08 <btrfs_parse_fs_features@@Base+0xd4>)
   1197c:	add.w	r8, r4, #1
   11980:	mov.w	fp, #0
   11984:	add	r6, pc
   11986:	add.w	sl, r6, #336	; 0x150
   1198a:	ldrb	r2, [r4, #0]
   1198c:	ldr	r3, [r6, #0]
   1198e:	cmp	r2, #94	; 0x5e
   11990:	bne.n	119d2 <btrfs_parse_fs_features@@Base+0x9e>
   11992:	mov	r0, r3
   11994:	mov	r1, r8
   11996:	str	r3, [sp, #4]
   11998:	blx	85ac <strcmp@plt>
   1199c:	ldr	r3, [sp, #4]
   1199e:	cbnz	r0, 119d2 <btrfs_parse_fs_features@@Base+0x9e>
   119a0:	ldrd	r0, r1, [r6, #8]
   119a4:	ldrd	r2, r3, [r5]
   119a8:	bic.w	r2, r2, r0
   119ac:	bic.w	r3, r3, r1
   119b0:	mov.w	fp, #1
   119b4:	strd	r2, r3, [r5]
   119b8:	adds	r6, #48	; 0x30
   119ba:	cmp	sl, r6
   119bc:	bne.n	1198a <btrfs_parse_fs_features@@Base+0x56>
   119be:	cmp.w	fp, #0
   119c2:	beq.n	11966 <btrfs_parse_fs_features@@Base+0x32>
   119c4:	mov	r2, r7
   119c6:	mov	r1, r9
   119c8:	movs	r0, #0
   119ca:	blx	8820 <strtok_r@plt>
   119ce:	mov	r4, r0
   119d0:	b.n	11964 <btrfs_parse_fs_features@@Base+0x30>
   119d2:	mov	r1, r4
   119d4:	mov	r0, r3
   119d6:	blx	85ac <strcmp@plt>
   119da:	cmp	r0, #0
   119dc:	bne.n	119b8 <btrfs_parse_fs_features@@Base+0x84>
   119de:	ldrd	r2, r3, [r5]
   119e2:	ldrd	r0, r1, [r6, #8]
   119e6:	orrs	r2, r0
   119e8:	orrs	r3, r1
   119ea:	b.n	119b0 <btrfs_parse_fs_features@@Base+0x7c>
   119ec:	mov	r0, r4
   119ee:	add	sp, #20
   119f0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   119f4:	adds	r4, #68	; 0x44
   119f6:	movs	r5, r0
   119f8:	lsls	r0, r5, #8
   119fa:	movs	r0, r0
   119fc:	ldrh	r5, [r2, #6]
   119fe:	movs	r2, r0
   11a00:	ldrh	r5, [r7, #4]
   11a02:	movs	r2, r0
   11a04:	adds	r4, #22
   11a06:	movs	r5, r0
   11a08:	cmp	r4, #112	; 0x70
   11a0a:	movs	r5, r0

00011a0c <print_kernel_version@@Base>:
   11a0c:	push	{r0, r1, r2, r4, r5, lr}
   11a0e:	uxtb	r5, r1
   11a10:	ldr	r2, [pc, #44]	; (11a40 <print_kernel_version@@Base+0x34>)
   11a12:	ubfx	r3, r1, #8, #8
   11a16:	str	r3, [sp, #0]
   11a18:	lsrs	r3, r1, #16
   11a1a:	add	r2, pc
   11a1c:	movs	r1, #1
   11a1e:	mov	r4, r0
   11a20:	blx	8a64 <__fprintf_chk@plt+0x4>
   11a24:	cbz	r5, 11a3a <print_kernel_version@@Base+0x2e>
   11a26:	ldr	r2, [pc, #28]	; (11a44 <print_kernel_version@@Base+0x38>)
   11a28:	mov	r3, r5
   11a2a:	movs	r1, #1
   11a2c:	mov	r0, r4
   11a2e:	add	r2, pc
   11a30:	add	sp, #12
   11a32:	ldmia.w	sp!, {r4, r5, lr}
   11a36:	b.w	8a60 <__fprintf_chk@plt>
   11a3a:	add	sp, #12
   11a3c:	pop	{r4, r5, pc}
   11a3e:	nop
   11a40:	ldr	r1, [sp, #828]	; 0x33c
   11a42:	movs	r2, r0
   11a44:	bpl.n	11966 <btrfs_parse_fs_features@@Base+0x32>
   11a46:	movs	r2, r0

00011a48 <get_running_kernel_version@@Base>:
   11a48:	ldr	r2, [pc, #204]	; (11b18 <get_running_kernel_version@@Base+0xd0>)
   11a4a:	ldr	r3, [pc, #208]	; (11b1c <get_running_kernel_version@@Base+0xd4>)
   11a4c:	push	{r4, r5, r6, r7, lr}
   11a4e:	add	r2, pc
   11a50:	sub	sp, #404	; 0x194
   11a52:	add	r6, sp, #4
   11a54:	ldr	r3, [r2, r3]
   11a56:	mov	r5, sp
   11a58:	mov	r0, r6
   11a5a:	ldr	r3, [r3, #0]
   11a5c:	str	r3, [sp, #396]	; 0x18c
   11a5e:	mov.w	r3, #0
   11a62:	movs	r3, #0
   11a64:	str	r3, [r5, #0]
   11a66:	blx	86d4 <uname@plt>
   11a6a:	ldr	r1, [pc, #180]	; (11b20 <get_running_kernel_version@@Base+0xd8>)
   11a6c:	mov	r0, r6
   11a6e:	add	r1, pc
   11a70:	blx	85ac <strcmp@plt>
   11a74:	mov	r4, r0
   11a76:	cbz	r0, 11a88 <get_running_kernel_version@@Base+0x40>
   11a78:	ldr	r0, [pc, #168]	; (11b24 <get_running_kernel_version@@Base+0xdc>)
   11a7a:	mov	r1, r6
   11a7c:	add	r0, pc
   11a7e:	bl	17b7c <__btrfs_error@@Base>
   11a82:	movs	r0, #1
   11a84:	blx	8934 <exit@plt>
   11a88:	add.w	r7, sp, #134	; 0x86
   11a8c:	movs	r1, #45	; 0x2d
   11a8e:	mov	r0, r7
   11a90:	blx	894c <strchr@plt>
   11a94:	cbz	r0, 11a98 <get_running_kernel_version@@Base+0x50>
   11a96:	strb	r4, [r0, #0]
   11a98:	ldr	r6, [pc, #140]	; (11b28 <get_running_kernel_version@@Base+0xe0>)
   11a9a:	mov	r2, r5
   11a9c:	mov	r0, r7
   11a9e:	add	r6, pc
   11aa0:	mov	r1, r6
   11aa2:	blx	8820 <strtok_r@plt>
   11aa6:	mov	r4, r0
   11aa8:	bl	32218 <string_is_numerical@@Base>
   11aac:	cbnz	r0, 11ac6 <get_running_kernel_version@@Base+0x7e>
   11aae:	mov.w	r4, #4294967295	; 0xffffffff
   11ab2:	ldr	r2, [pc, #120]	; (11b2c <get_running_kernel_version@@Base+0xe4>)
   11ab4:	ldr	r3, [pc, #100]	; (11b1c <get_running_kernel_version@@Base+0xd4>)
   11ab6:	add	r2, pc
   11ab8:	ldr	r3, [r2, r3]
   11aba:	ldr	r2, [r3, #0]
   11abc:	ldr	r3, [sp, #396]	; 0x18c
   11abe:	eors	r2, r3
   11ac0:	beq.n	11b10 <get_running_kernel_version@@Base+0xc8>
   11ac2:	blx	8708 <__stack_chk_fail@plt>
   11ac6:	mov	r0, r4
   11ac8:	blx	8b04 <atoi@plt>
   11acc:	mov	r2, r5
   11ace:	mov	r1, r6
   11ad0:	mov	r4, r0
   11ad2:	movs	r0, #0
   11ad4:	blx	8820 <strtok_r@plt>
   11ad8:	mov	r7, r0
   11ada:	bl	32218 <string_is_numerical@@Base>
   11ade:	cmp	r0, #0
   11ae0:	beq.n	11aae <get_running_kernel_version@@Base+0x66>
   11ae2:	mov	r0, r7
   11ae4:	blx	8b04 <atoi@plt>
   11ae8:	mov	r2, r5
   11aea:	mov	r1, r6
   11aec:	lsls	r3, r0, #8
   11aee:	movs	r0, #0
   11af0:	orr.w	r4, r3, r4, lsl #16
   11af4:	blx	8820 <strtok_r@plt>
   11af8:	mov	r5, r0
   11afa:	cmp	r0, #0
   11afc:	beq.n	11ab2 <get_running_kernel_version@@Base+0x6a>
   11afe:	bl	32218 <string_is_numerical@@Base>
   11b02:	cmp	r0, #0
   11b04:	beq.n	11ab2 <get_running_kernel_version@@Base+0x6a>
   11b06:	mov	r0, r5
   11b08:	blx	8b04 <atoi@plt>
   11b0c:	orrs	r4, r0
   11b0e:	b.n	11ab2 <get_running_kernel_version@@Base+0x6a>
   11b10:	mov	r0, r4
   11b12:	add	sp, #404	; 0x194
   11b14:	pop	{r4, r5, r6, r7, pc}
   11b16:	nop
   11b18:	adds	r3, #50	; 0x32
   11b1a:	movs	r5, r0
   11b1c:	lsls	r0, r5, #8
   11b1e:	movs	r0, r0
   11b20:	ldr	r1, [sp, #516]	; 0x204
   11b22:	movs	r2, r0
   11b24:	ldr	r1, [sp, #484]	; 0x1e4
   11b26:	movs	r2, r0
   11b28:	adds	r6, r1, #4
   11b2a:	movs	r4, r0
   11b2c:	adds	r2, #202	; 0xca
   11b2e:	movs	r5, r0

00011b30 <btrfs_check_nodesize@@Base>:
   11b30:	cmp	r0, r1
   11b32:	push	{r4, r6, r7, lr}
   11b34:	mov	r4, r0
   11b36:	bcs.n	11b4a <btrfs_check_nodesize@@Base+0x1a>
   11b38:	mov	r2, r1
   11b3a:	mov	r1, r0
   11b3c:	ldr	r0, [pc, #72]	; (11b88 <btrfs_check_nodesize@@Base+0x58>)
   11b3e:	add	r0, pc
   11b40:	bl	17b7c <__btrfs_error@@Base>
   11b44:	mov.w	r0, #4294967295	; 0xffffffff
   11b48:	pop	{r4, r6, r7, pc}
   11b4a:	cmp.w	r0, #65536	; 0x10000
   11b4e:	bls.n	11b5c <btrfs_check_nodesize@@Base+0x2c>
   11b50:	mov	r1, r0
   11b52:	ldr	r0, [pc, #56]	; (11b8c <btrfs_check_nodesize@@Base+0x5c>)
   11b54:	mov.w	r2, #65536	; 0x10000
   11b58:	add	r0, pc
   11b5a:	b.n	11b40 <btrfs_check_nodesize@@Base+0x10>
   11b5c:	subs	r3, r1, #1
   11b5e:	ands	r0, r3
   11b60:	beq.n	11b6c <btrfs_check_nodesize@@Base+0x3c>
   11b62:	ldr	r0, [pc, #44]	; (11b90 <btrfs_check_nodesize@@Base+0x60>)
   11b64:	mov	r2, r1
   11b66:	mov	r1, r4
   11b68:	add	r0, pc
   11b6a:	b.n	11b40 <btrfs_check_nodesize@@Base+0x10>
   11b6c:	and.w	r6, r2, #4
   11b70:	mov	r7, r0
   11b72:	orrs.w	r3, r6, r7
   11b76:	beq.n	11b48 <btrfs_check_nodesize@@Base+0x18>
   11b78:	cmp	r4, r1
   11b7a:	beq.n	11b48 <btrfs_check_nodesize@@Base+0x18>
   11b7c:	ldr	r0, [pc, #20]	; (11b94 <btrfs_check_nodesize@@Base+0x64>)
   11b7e:	mov	r2, r1
   11b80:	mov	r1, r4
   11b82:	add	r0, pc
   11b84:	b.n	11b40 <btrfs_check_nodesize@@Base+0x10>
   11b86:	nop
   11b88:	ldr	r0, [sp, #824]	; 0x338
   11b8a:	movs	r2, r0
   11b8c:	ldr	r0, [sp, #872]	; 0x368
   11b8e:	movs	r2, r0
   11b90:	ldr	r0, [sp, #956]	; 0x3bc
   11b92:	movs	r2, r0
   11b94:	ldr	r0, [sp, #1012]	; 0x3f4
   11b96:	movs	r2, r0
   11b98:	push	{r4, lr}
   11b9a:	mov	r4, r0
   11b9c:	subs	r4, #1
   11b9e:	bcs.n	11ba2 <btrfs_check_nodesize@@Base+0x72>
   11ba0:	pop	{r4, pc}
   11ba2:	movs	r0, #32
   11ba4:	blx	89cc <putchar@plt+0x4>
   11ba8:	movs	r0, #32
   11baa:	blx	89cc <putchar@plt+0x4>
   11bae:	b.n	11b9c <btrfs_check_nodesize@@Base+0x6c>
   11bb0:	push	{r4, lr}
   11bb2:	mov	r4, r0
   11bb4:	subs	r4, #1
   11bb6:	bcs.n	11bba <btrfs_check_nodesize@@Base+0x8a>
   11bb8:	pop	{r4, pc}
   11bba:	movs	r0, #32
   11bbc:	blx	89cc <putchar@plt+0x4>
   11bc0:	b.n	11bb4 <btrfs_check_nodesize@@Base+0x84>
   11bc2:	ldr	r3, [pc, #92]	; (11c20 <btrfs_check_nodesize@@Base+0xf0>)
   11bc4:	ldr	r2, [pc, #92]	; (11c24 <btrfs_check_nodesize@@Base+0xf4>)
   11bc6:	add	r3, pc
   11bc8:	push	{r4, lr}
   11bca:	mov	r4, r0
   11bcc:	ldr	r3, [r3, r2]
   11bce:	ldr	r3, [r3, #0]
   11bd0:	cmp	r3, #8
   11bd2:	bne.n	11bf4 <btrfs_check_nodesize@@Base+0xc4>
   11bd4:	ldr	r3, [r0, #8]
   11bd6:	adds	r3, #8
   11bd8:	ldr.w	r3, [r0, r3, lsl #2]
   11bdc:	cbnz	r3, 11bf6 <btrfs_check_nodesize@@Base+0xc6>
   11bde:	movs	r0, #10
   11be0:	blx	89cc <putchar@plt+0x4>
   11be4:	ldr	r0, [r4, #8]
   11be6:	bl	11b98 <btrfs_check_nodesize@@Base+0x68>
   11bea:	ldr	r3, [r4, #8]
   11bec:	movs	r2, #1
   11bee:	adds	r3, #8
   11bf0:	str.w	r2, [r4, r3, lsl #2]
   11bf4:	pop	{r4, pc}
   11bf6:	cmp	r3, #1
   11bf8:	bne.n	11c10 <btrfs_check_nodesize@@Base+0xe0>
   11bfa:	ldr	r0, [pc, #44]	; (11c28 <btrfs_check_nodesize@@Base+0xf8>)
   11bfc:	add	r0, pc
   11bfe:	blx	8854 <puts@plt+0x4>
   11c02:	ldr	r0, [r4, #8]
   11c04:	bl	11b98 <btrfs_check_nodesize@@Base+0x68>
   11c08:	ldr	r3, [r4, #8]
   11c0a:	movs	r2, #2
   11c0c:	adds	r3, #8
   11c0e:	b.n	11bf0 <btrfs_check_nodesize@@Base+0xc0>
   11c10:	ldr	r0, [pc, #24]	; (11c2c <btrfs_check_nodesize@@Base+0xfc>)
   11c12:	add	r0, pc
   11c14:	blx	8854 <puts@plt+0x4>
   11c18:	ldr	r0, [r4, #8]
   11c1a:	ldmia.w	sp!, {r4, lr}
   11c1e:	b.n	11b98 <btrfs_check_nodesize@@Base+0x68>
   11c20:	adds	r1, #186	; 0xba
   11c22:	movs	r5, r0
   11c24:	lsls	r4, r4, #8
   11c26:	movs	r0, r0
   11c28:	strh	r1, [r4, #48]	; 0x30
   11c2a:	movs	r2, r0
   11c2c:	strh	r3, [r1, #48]	; 0x30
   11c2e:	movs	r2, r0
   11c30:	push	{r4, lr}
   11c32:	ldr	r4, [r0, #4]
   11c34:	ldr	r1, [pc, #32]	; (11c58 <btrfs_check_nodesize@@Base+0x128>)
   11c36:	mov	r0, r4
   11c38:	add	r1, pc
   11c3a:	blx	85ac <strcmp@plt>
   11c3e:	cbz	r0, 11c56 <btrfs_check_nodesize@@Base+0x126>
   11c40:	ldr	r1, [pc, #24]	; (11c5c <btrfs_check_nodesize@@Base+0x12c>)
   11c42:	mov	r0, r4
   11c44:	add	r1, pc
   11c46:	blx	85ac <strcmp@plt>
   11c4a:	cbz	r0, 11c56 <btrfs_check_nodesize@@Base+0x126>
   11c4c:	ldmia.w	sp!, {r4, lr}
   11c50:	movs	r0, #34	; 0x22
   11c52:	b.w	89c8 <putchar@plt>
   11c56:	pop	{r4, pc}
   11c58:	ldr	r1, [sp, #932]	; 0x3a4
   11c5a:	movs	r2, r0
   11c5c:	ldr	r4, [sp, #372]	; 0x174
   11c5e:	movs	r2, r0

00011c60 <fmt_end@@Base>:
   11c60:	push	{r3, r4, r5, lr}
   11c62:	mov	r4, r0
   11c64:	ldr	r3, [r0, #8]
   11c66:	ldr	r5, [pc, #88]	; (11cc0 <fmt_end@@Base+0x60>)
   11c68:	cmp	r3, #1
   11c6a:	add	r5, pc
   11c6c:	beq.n	11c7c <fmt_end@@Base+0x1c>
   11c6e:	ldr	r3, [pc, #84]	; (11cc4 <fmt_end@@Base+0x64>)
   11c70:	ldr	r0, [pc, #84]	; (11cc8 <fmt_end@@Base+0x68>)
   11c72:	ldr	r3, [r5, r3]
   11c74:	add	r0, pc
   11c76:	ldr	r1, [r3, #0]
   11c78:	blx	8b6c <fputs@plt+0x4>
   11c7c:	ldr	r3, [pc, #76]	; (11ccc <fmt_end@@Base+0x6c>)
   11c7e:	ldr	r3, [r5, r3]
   11c80:	ldr	r3, [r3, #0]
   11c82:	lsls	r2, r3, #29
   11c84:	bpl.n	11c90 <fmt_end@@Base+0x30>
   11c86:	ldmia.w	sp!, {r3, r4, r5, lr}
   11c8a:	movs	r0, #10
   11c8c:	b.w	89c8 <putchar@plt>
   11c90:	lsls	r3, r3, #28
   11c92:	bpl.n	11cbe <fmt_end@@Base+0x5e>
   11c94:	ldr	r3, [r4, #8]
   11c96:	cmp	r3, #0
   11c98:	bgt.n	11ca8 <fmt_end@@Base+0x48>
   11c9a:	ldr	r0, [pc, #52]	; (11cd0 <fmt_end@@Base+0x70>)
   11c9c:	add	r0, pc
   11c9e:	blx	8854 <puts@plt+0x4>
   11ca2:	movs	r0, #1
   11ca4:	blx	8934 <exit@plt>
   11ca8:	subs	r3, #1
   11caa:	mov	r0, r4
   11cac:	str	r3, [r4, #8]
   11cae:	bl	11bc2 <btrfs_check_nodesize@@Base+0x92>
   11cb2:	ldr	r0, [pc, #32]	; (11cd4 <fmt_end@@Base+0x74>)
   11cb4:	ldmia.w	sp!, {r3, r4, r5, lr}
   11cb8:	add	r0, pc
   11cba:	b.w	8850 <puts@plt>
   11cbe:	pop	{r3, r4, r5, pc}
   11cc0:	adds	r1, #22
   11cc2:	movs	r5, r0
   11cc4:	lsls	r0, r7, #8
   11cc6:	movs	r0, r0
   11cc8:	ldr	r1, [sp, #712]	; 0x2c8
   11cca:	movs	r2, r0
   11ccc:	lsls	r4, r4, #8
   11cce:	movs	r0, r0
   11cd0:	ldr	r1, [sp, #648]	; 0x288
   11cd2:	movs	r2, r0
   11cd4:	ldr	r1, [sp, #704]	; 0x2c0
   11cd6:	movs	r2, r0

00011cd8 <fmt_start_list_value@@Base>:
   11cd8:	ldr	r3, [pc, #48]	; (11d0c <fmt_start_list_value@@Base+0x34>)
   11cda:	ldr	r2, [pc, #52]	; (11d10 <fmt_start_list_value@@Base+0x38>)
   11cdc:	add	r3, pc
   11cde:	push	{r4, lr}
   11ce0:	mov	r4, r0
   11ce2:	ldr	r3, [r3, r2]
   11ce4:	ldr	r3, [r3, #0]
   11ce6:	cmp	r3, #4
   11ce8:	bne.n	11cf2 <fmt_start_list_value@@Base+0x1a>
   11cea:	ldmia.w	sp!, {r4, lr}
   11cee:	ldr	r0, [r0, #4]
   11cf0:	b.n	11bb0 <btrfs_check_nodesize@@Base+0x80>
   11cf2:	cmp	r3, #8
   11cf4:	bne.n	11d0a <fmt_start_list_value@@Base+0x32>
   11cf6:	bl	11bc2 <btrfs_check_nodesize@@Base+0x92>
   11cfa:	ldr	r0, [r4, #8]
   11cfc:	bl	11b98 <btrfs_check_nodesize@@Base+0x68>
   11d00:	ldmia.w	sp!, {r4, lr}
   11d04:	movs	r0, #34	; 0x22
   11d06:	b.w	89c8 <putchar@plt>
   11d0a:	pop	{r4, pc}
   11d0c:	adds	r0, #164	; 0xa4
   11d0e:	movs	r5, r0
   11d10:	lsls	r4, r4, #8
	...

00011d14 <fmt_end_list_value@@Base>:
   11d14:	ldr	r3, [pc, #28]	; (11d34 <fmt_end_list_value@@Base+0x20>)
   11d16:	ldr	r2, [pc, #32]	; (11d38 <fmt_end_list_value@@Base+0x24>)
   11d18:	add	r3, pc
   11d1a:	ldr	r3, [r3, r2]
   11d1c:	ldr	r3, [r3, #0]
   11d1e:	cmp	r3, #4
   11d20:	bne.n	11d28 <fmt_end_list_value@@Base+0x14>
   11d22:	movs	r0, #10
   11d24:	b.w	89c8 <putchar@plt>
   11d28:	cmp	r3, #8
   11d2a:	bne.n	11d30 <fmt_end_list_value@@Base+0x1c>
   11d2c:	movs	r0, #34	; 0x22
   11d2e:	b.n	11d24 <fmt_end_list_value@@Base+0x10>
   11d30:	bx	lr
   11d32:	nop
   11d34:	adds	r0, #104	; 0x68
   11d36:	movs	r5, r0
   11d38:	lsls	r4, r4, #8
	...

00011d3c <fmt_start_value@@Base>:
   11d3c:	ldr	r3, [pc, #64]	; (11d80 <fmt_start_value@@Base+0x44>)
   11d3e:	mov	r0, r1
   11d40:	ldr	r2, [pc, #64]	; (11d84 <fmt_start_value@@Base+0x48>)
   11d42:	add	r3, pc
   11d44:	push	{r4, lr}
   11d46:	ldr	r3, [r3, r2]
   11d48:	ldr	r3, [r3, #0]
   11d4a:	cmp	r3, #4
   11d4c:	bne.n	11d76 <fmt_start_value@@Base+0x3a>
   11d4e:	ldr	r4, [r1, #4]
   11d50:	ldr	r1, [pc, #52]	; (11d88 <fmt_start_value@@Base+0x4c>)
   11d52:	mov	r0, r4
   11d54:	add	r1, pc
   11d56:	blx	85ac <strcmp@plt>
   11d5a:	cbnz	r0, 11d66 <fmt_start_value@@Base+0x2a>
   11d5c:	ldmia.w	sp!, {r4, lr}
   11d60:	movs	r0, #10
   11d62:	b.w	89c8 <putchar@plt>
   11d66:	ldr	r1, [pc, #36]	; (11d8c <fmt_start_value@@Base+0x50>)
   11d68:	mov	r0, r4
   11d6a:	add	r1, pc
   11d6c:	blx	85ac <strcmp@plt>
   11d70:	cmp	r0, #0
   11d72:	beq.n	11d5c <fmt_start_value@@Base+0x20>
   11d74:	pop	{r4, pc}
   11d76:	cmp	r3, #8
   11d78:	bne.n	11d74 <fmt_start_value@@Base+0x38>
   11d7a:	ldmia.w	sp!, {r4, lr}
   11d7e:	b.n	11c30 <btrfs_check_nodesize@@Base+0x100>
   11d80:	adds	r0, #62	; 0x3e
   11d82:	movs	r5, r0
   11d84:	lsls	r4, r4, #8
   11d86:	movs	r0, r0
   11d88:	ldr	r0, [sp, #820]	; 0x334
   11d8a:	movs	r2, r0
   11d8c:	ldr	r3, [sp, #220]	; 0xdc
   11d8e:	movs	r2, r0

00011d90 <fmt_end_value@@Base>:
   11d90:	ldr	r3, [pc, #16]	; (11da4 <fmt_end_value@@Base+0x14>)
   11d92:	mov	r0, r1
   11d94:	ldr	r2, [pc, #16]	; (11da8 <fmt_end_value@@Base+0x18>)
   11d96:	add	r3, pc
   11d98:	ldr	r3, [r3, r2]
   11d9a:	ldr	r3, [r3, #0]
   11d9c:	cmp	r3, #8
   11d9e:	bne.n	11da2 <fmt_end_value@@Base+0x12>
   11da0:	b.n	11c30 <btrfs_check_nodesize@@Base+0x100>
   11da2:	bx	lr
   11da4:	cmp	r7, #234	; 0xea
   11da6:	movs	r5, r0
   11da8:	lsls	r4, r4, #8
	...

00011dac <fmt_print_start_group@@Base>:
   11dac:	ldr	r3, [pc, #108]	; (11e1c <fmt_print_start_group@@Base+0x70>)
   11dae:	push	{r4, r5, r6, lr}
   11db0:	mov	r4, r2
   11db2:	ldr	r2, [pc, #108]	; (11e20 <fmt_print_start_group@@Base+0x74>)
   11db4:	add	r3, pc
   11db6:	mov	r5, r0
   11db8:	mov	r6, r1
   11dba:	ldr	r3, [r3, r2]
   11dbc:	ldr	r3, [r3, #0]
   11dbe:	cmp	r3, #8
   11dc0:	bne.n	11e1a <fmt_print_start_group@@Base+0x6e>
   11dc2:	bl	11bc2 <btrfs_check_nodesize@@Base+0x92>
   11dc6:	ldr	r3, [r5, #8]
   11dc8:	cmp	r3, #14
   11dca:	ble.n	11dde <fmt_print_start_group@@Base+0x32>
   11dcc:	ldr	r1, [pc, #84]	; (11e24 <fmt_print_start_group@@Base+0x78>)
   11dce:	movs	r2, #16
   11dd0:	add	r1, pc
   11dd2:	movs	r0, #1
   11dd4:	blx	8a30 <__printf_chk@plt+0x4>
   11dd8:	movs	r0, #1
   11dda:	blx	8934 <exit@plt>
   11dde:	adds	r2, r3, #1
   11de0:	cmp	r4, #1
   11de2:	add.w	r1, r5, r2
   11de6:	add.w	r3, r3, #9
   11dea:	str	r2, [r5, #8]
   11dec:	strb	r4, [r1, #16]
   11dee:	mov.w	r1, #0
   11df2:	str.w	r1, [r5, r3, lsl #2]
   11df6:	bne.n	11e08 <fmt_print_start_group@@Base+0x5c>
   11df8:	ldr	r1, [pc, #44]	; (11e28 <fmt_print_start_group@@Base+0x7c>)
   11dfa:	mov	r2, r6
   11dfc:	add	r1, pc
   11dfe:	ldmia.w	sp!, {r4, r5, r6, lr}
   11e02:	movs	r0, #1
   11e04:	b.w	8a2c <__printf_chk@plt>
   11e08:	cmp	r4, #2
   11e0a:	bne.n	11e14 <fmt_print_start_group@@Base+0x68>
   11e0c:	ldr	r1, [pc, #28]	; (11e2c <fmt_print_start_group@@Base+0x80>)
   11e0e:	mov	r2, r6
   11e10:	add	r1, pc
   11e12:	b.n	11dfe <fmt_print_start_group@@Base+0x52>
   11e14:	ldr	r1, [pc, #24]	; (11e30 <fmt_print_start_group@@Base+0x84>)
   11e16:	add	r1, pc
   11e18:	b.n	11dd2 <fmt_print_start_group@@Base+0x26>
   11e1a:	pop	{r4, r5, r6, pc}
   11e1c:	cmp	r7, #204	; 0xcc
   11e1e:	movs	r5, r0
   11e20:	lsls	r4, r4, #8
   11e22:	movs	r0, r0
   11e24:	ldr	r0, [sp, #616]	; 0x268
   11e26:	movs	r2, r0
   11e28:	ldr	r0, [sp, #616]	; 0x268
   11e2a:	movs	r2, r0
   11e2c:	ldr	r0, [sp, #568]	; 0x238
   11e2e:	movs	r2, r0
   11e30:	ldr	r0, [sp, #576]	; 0x240
   11e32:	movs	r2, r0

00011e34 <fmt_print_end_group@@Base>:
   11e34:	push	{r3, r4, r5, lr}
   11e36:	mov	r4, r0
   11e38:	ldr	r3, [pc, #88]	; (11e94 <fmt_print_end_group@@Base+0x60>)
   11e3a:	ldr	r2, [pc, #92]	; (11e98 <fmt_print_end_group@@Base+0x64>)
   11e3c:	add	r3, pc
   11e3e:	ldr	r3, [r3, r2]
   11e40:	ldr	r3, [r3, #0]
   11e42:	cmp	r3, #8
   11e44:	bne.n	11e92 <fmt_print_end_group@@Base+0x5e>
   11e46:	ldr	r3, [r0, #8]
   11e48:	adds	r2, r0, r3
   11e4a:	cmp	r3, #0
   11e4c:	ldrb	r5, [r2, #16]
   11e4e:	bgt.n	11e5e <fmt_print_end_group@@Base+0x2a>
   11e50:	ldr	r0, [pc, #72]	; (11e9c <fmt_print_end_group@@Base+0x68>)
   11e52:	add	r0, pc
   11e54:	blx	8854 <puts@plt+0x4>
   11e58:	movs	r0, #1
   11e5a:	blx	8934 <exit@plt>
   11e5e:	subs	r3, #1
   11e60:	str	r3, [r0, #8]
   11e62:	movs	r0, #10
   11e64:	blx	89cc <putchar@plt+0x4>
   11e68:	ldr	r0, [r4, #8]
   11e6a:	bl	11b98 <btrfs_check_nodesize@@Base+0x68>
   11e6e:	cmp	r5, #1
   11e70:	bne.n	11e7c <fmt_print_end_group@@Base+0x48>
   11e72:	movs	r0, #125	; 0x7d
   11e74:	ldmia.w	sp!, {r3, r4, r5, lr}
   11e78:	b.w	89c8 <putchar@plt>
   11e7c:	cmp	r5, #2
   11e7e:	bne.n	11e84 <fmt_print_end_group@@Base+0x50>
   11e80:	movs	r0, #93	; 0x5d
   11e82:	b.n	11e74 <fmt_print_end_group@@Base+0x40>
   11e84:	ldr	r1, [pc, #24]	; (11ea0 <fmt_print_end_group@@Base+0x6c>)
   11e86:	movs	r0, #1
   11e88:	ldr	r2, [r4, #8]
   11e8a:	add	r1, pc
   11e8c:	blx	8a30 <__printf_chk@plt+0x4>
   11e90:	b.n	11e58 <fmt_print_end_group@@Base+0x24>
   11e92:	pop	{r3, r4, r5, pc}
   11e94:	cmp	r7, #68	; 0x44
   11e96:	movs	r5, r0
   11e98:	lsls	r4, r4, #8
   11e9a:	movs	r0, r0
   11e9c:	str	r7, [sp, #944]	; 0x3b0
   11e9e:	movs	r2, r0
   11ea0:	ldr	r0, [sp, #112]	; 0x70
   11ea2:	movs	r2, r0

00011ea4 <fmt_start@@Base>:
   11ea4:	push	{r4, r5, r6, lr}
   11ea6:	mov	r4, r0
   11ea8:	ldr	r0, [pc, #92]	; (11f08 <fmt_start@@Base+0x64>)
   11eaa:	movs	r5, #1
   11eac:	strd	r2, r3, [r4]
   11eb0:	ldr	r3, [pc, #88]	; (11f0c <fmt_start@@Base+0x68>)
   11eb2:	add	r0, pc
   11eb4:	str	r1, [r4, #12]
   11eb6:	str	r5, [r4, #8]
   11eb8:	ldr	r3, [r0, r3]
   11eba:	ldr	r3, [r3, #0]
   11ebc:	lsls	r3, r3, #28
   11ebe:	bpl.n	11f06 <fmt_start@@Base+0x62>
   11ec0:	movs	r0, #123	; 0x7b
   11ec2:	ldr	r6, [pc, #76]	; (11f10 <fmt_start@@Base+0x6c>)
   11ec4:	blx	89cc <putchar@plt+0x4>
   11ec8:	ldr	r3, [r4, #8]
   11eca:	add	r6, pc
   11ecc:	mov	r0, r4
   11ece:	adds	r2, r4, r3
   11ed0:	adds	r3, #8
   11ed2:	mov	r1, r6
   11ed4:	strb	r5, [r2, #16]
   11ed6:	movs	r2, #0
   11ed8:	str.w	r2, [r4, r3, lsl #2]
   11edc:	mov	r2, r5
   11ede:	bl	11dac <fmt_print_start_group@@Base>
   11ee2:	mov	r0, r4
   11ee4:	bl	11bc2 <btrfs_check_nodesize@@Base+0x92>
   11ee8:	ldr	r1, [pc, #40]	; (11f14 <fmt_start@@Base+0x70>)
   11eea:	mov	r0, r5
   11eec:	add	r1, pc
   11eee:	blx	8a30 <__printf_chk@plt+0x4>
   11ef2:	ldr	r3, [r4, #8]
   11ef4:	mov	r1, r6
   11ef6:	mov	r0, r4
   11ef8:	adds	r3, #8
   11efa:	str.w	r5, [r4, r3, lsl #2]
   11efe:	ldmia.w	sp!, {r4, r5, r6, lr}
   11f02:	b.w	11e34 <fmt_print_end_group@@Base>
   11f06:	pop	{r4, r5, r6, pc}
   11f08:	cmp	r6, #206	; 0xce
   11f0a:	movs	r5, r0
   11f0c:	lsls	r4, r4, #8
   11f0e:	movs	r0, r0
   11f10:	ldr	r0, [sp, #28]
   11f12:	movs	r2, r0
   11f14:	str	r7, [sp, #952]	; 0x3b8
   11f16:	movs	r2, r0

00011f18 <fmt_print@@Base>:
   11f18:	push	{r1, r2, r3}
   11f1a:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   11f1e:	mov	r5, r0
   11f20:	sub	sp, #332	; 0x14c
   11f22:	ldr	r0, [pc, #572]	; (12160 <fmt_print@@Base+0x248>)
   11f24:	add	r3, sp, #356	; 0x164
   11f26:	ldr	r1, [pc, #572]	; (12164 <fmt_print@@Base+0x24c>)
   11f28:	add	r0, pc
   11f2a:	ldr	r4, [r5, #12]
   11f2c:	ldr.w	r2, [r3], #4
   11f30:	add	r6, sp, #16
   11f32:	ldr	r1, [r0, r1]
   11f34:	ldr	r7, [pc, #560]	; (12168 <fmt_print@@Base+0x250>)
   11f36:	ldr	r1, [r1, #0]
   11f38:	str	r1, [sp, #324]	; 0x144
   11f3a:	mov.w	r1, #0
   11f3e:	str	r3, [r6, #0]
   11f40:	add	r7, pc
   11f42:	ldr	r1, [r4, #0]
   11f44:	cbnz	r1, 11f56 <fmt_print@@Base+0x3e>
   11f46:	ldr	r1, [pc, #548]	; (1216c <fmt_print@@Base+0x254>)
   11f48:	movs	r0, #1
   11f4a:	add	r1, pc
   11f4c:	blx	8a30 <__printf_chk@plt+0x4>
   11f50:	movs	r0, #1
   11f52:	blx	8934 <exit@plt>
   11f56:	mov	r0, r2
   11f58:	str	r2, [sp, #12]
   11f5a:	blx	85ac <strcmp@plt>
   11f5e:	cmp	r0, #0
   11f60:	beq.w	120d2 <fmt_print@@Base+0x1ba>
   11f64:	ldr	r2, [sp, #12]
   11f66:	adds	r4, #16
   11f68:	b.n	11f42 <fmt_print@@Base+0x2a>
   11f6a:	cmp	r3, #8
   11f6c:	bne.w	1211e <fmt_print@@Base+0x206>
   11f70:	ldr	r7, [r4, #4]
   11f72:	ldr	r1, [pc, #508]	; (12170 <fmt_print@@Base+0x258>)
   11f74:	mov	r0, r7
   11f76:	add	r1, pc
   11f78:	blx	85ac <strcmp@plt>
   11f7c:	cbnz	r0, 11f8a <fmt_print@@Base+0x72>
   11f7e:	movs	r2, #2
   11f80:	ldr	r1, [r4, #12]
   11f82:	mov	r0, r5
   11f84:	bl	11dac <fmt_print_start_group@@Base>
   11f88:	b.n	1211e <fmt_print@@Base+0x206>
   11f8a:	ldr	r1, [pc, #488]	; (12174 <fmt_print@@Base+0x25c>)
   11f8c:	mov	r0, r7
   11f8e:	add	r1, pc
   11f90:	blx	85ac <strcmp@plt>
   11f94:	cbnz	r0, 11f9a <fmt_print@@Base+0x82>
   11f96:	movs	r2, #1
   11f98:	b.n	11f80 <fmt_print@@Base+0x68>
   11f9a:	mov	r0, r5
   11f9c:	bl	11bc2 <btrfs_check_nodesize@@Base+0x92>
   11fa0:	ldr	r1, [pc, #468]	; (12178 <fmt_print@@Base+0x260>)
   11fa2:	ldr	r2, [r4, #12]
   11fa4:	movs	r0, #1
   11fa6:	add	r1, pc
   11fa8:	blx	8a30 <__printf_chk@plt+0x4>
   11fac:	b.n	1211e <fmt_print@@Base+0x206>
   11fae:	ldr	r1, [pc, #460]	; (1217c <fmt_print@@Base+0x264>)
   11fb0:	mov	r0, r7
   11fb2:	add	r1, pc
   11fb4:	blx	85ac <strcmp@plt>
   11fb8:	cbnz	r0, 11fec <fmt_print@@Base+0xd4>
   11fba:	ldr	r3, [r6, #0]
   11fbc:	adds	r2, r3, #4
   11fbe:	str	r2, [r6, #0]
   11fc0:	ldr	r6, [r3, #0]
   11fc2:	mov	r0, r6
   11fc4:	blx	89ac <uuid_is_null@plt>
   11fc8:	cbz	r0, 11fd2 <fmt_print@@Base+0xba>
   11fca:	movs	r0, #45	; 0x2d
   11fcc:	blx	89cc <putchar@plt+0x4>
   11fd0:	b.n	1213a <fmt_print@@Base+0x222>
   11fd2:	add	r2, sp, #68	; 0x44
   11fd4:	mov	r0, r6
   11fd6:	str	r2, [sp, #12]
   11fd8:	mov	r1, r2
   11fda:	blx	85c4 <uuid_unparse@plt>
   11fde:	ldr	r1, [pc, #416]	; (12180 <fmt_print@@Base+0x268>)
   11fe0:	ldr	r2, [sp, #12]
   11fe2:	add	r1, pc
   11fe4:	movs	r0, #1
   11fe6:	blx	8a30 <__printf_chk@plt+0x4>
   11fea:	b.n	1213a <fmt_print@@Base+0x222>
   11fec:	ldr	r1, [pc, #404]	; (12184 <fmt_print@@Base+0x26c>)
   11fee:	mov	r0, r7
   11ff0:	add	r1, pc
   11ff2:	blx	85ac <strcmp@plt>
   11ff6:	cbnz	r0, 1202c <fmt_print@@Base+0x114>
   11ff8:	ldr	r3, [r6, #0]
   11ffa:	add	r0, sp, #20
   11ffc:	adds	r2, r3, #4
   11ffe:	str	r2, [r6, #0]
   12000:	ldr	r3, [r3, #0]
   12002:	str	r3, [r0, #0]
   12004:	cmp	r3, #0
   12006:	beq.n	11fca <fmt_print@@Base+0xb2>
   12008:	add	r3, sp, #24
   1200a:	add	r6, sp, #68	; 0x44
   1200c:	str	r3, [sp, #12]
   1200e:	mov	r1, r3
   12010:	blx	8730 <localtime_r@plt>
   12014:	ldr	r2, [pc, #368]	; (12188 <fmt_print@@Base+0x270>)
   12016:	mov.w	r1, #256	; 0x100
   1201a:	ldr	r3, [sp, #12]
   1201c:	add	r2, pc
   1201e:	mov	r0, r6
   12020:	blx	88a4 <strftime@plt>
   12024:	ldr	r1, [pc, #356]	; (1218c <fmt_print@@Base+0x274>)
   12026:	mov	r2, r6
   12028:	add	r1, pc
   1202a:	b.n	11fe4 <fmt_print@@Base+0xcc>
   1202c:	ldr	r1, [pc, #352]	; (12190 <fmt_print@@Base+0x278>)
   1202e:	mov	r0, r7
   12030:	add	r1, pc
   12032:	blx	85ac <strcmp@plt>
   12036:	cmp	r0, #0
   12038:	beq.n	1213a <fmt_print@@Base+0x222>
   1203a:	ldr	r1, [pc, #344]	; (12194 <fmt_print@@Base+0x27c>)
   1203c:	mov	r0, r7
   1203e:	add	r1, pc
   12040:	blx	85ac <strcmp@plt>
   12044:	cmp	r0, #0
   12046:	beq.n	1213a <fmt_print@@Base+0x222>
   12048:	ldr	r1, [pc, #332]	; (12198 <fmt_print@@Base+0x280>)
   1204a:	mov	r0, r7
   1204c:	add	r1, pc
   1204e:	blx	85ac <strcmp@plt>
   12052:	cbnz	r0, 12074 <fmt_print@@Base+0x15c>
   12054:	ldr	r1, [r6, #0]
   12056:	movs	r0, #1
   12058:	adds	r1, #7
   1205a:	bic.w	r1, r1, #7
   1205e:	ldrd	r2, r3, [r1, #8]
   12062:	strd	r2, r3, [sp]
   12066:	ldrd	r2, r3, [r1]
   1206a:	ldr	r1, [pc, #304]	; (1219c <fmt_print@@Base+0x284>)
   1206c:	add	r1, pc
   1206e:	blx	8a30 <__printf_chk@plt+0x4>
   12072:	b.n	1213a <fmt_print@@Base+0x222>
   12074:	ldr	r1, [pc, #296]	; (121a0 <fmt_print@@Base+0x288>)
   12076:	mov	r0, r7
   12078:	add	r1, pc
   1207a:	blx	85ac <strcmp@plt>
   1207e:	cbnz	r0, 120a4 <fmt_print@@Base+0x18c>
   12080:	ldr	r3, [r6, #0]
   12082:	adds	r3, #7
   12084:	bic.w	r3, r3, #7
   12088:	mov	r2, r3
   1208a:	ldrd	r0, r1, [r2], #12
   1208e:	str	r2, [r6, #0]
   12090:	orrs.w	r2, r0, r1
   12094:	beq.n	11fca <fmt_print@@Base+0xb2>
   12096:	ldr	r2, [r3, #8]
   12098:	bl	30c00 <pretty_size_mode@@Base>
   1209c:	ldr	r1, [pc, #260]	; (121a4 <fmt_print@@Base+0x28c>)
   1209e:	add	r1, pc
   120a0:	mov	r2, r0
   120a2:	b.n	11fe4 <fmt_print@@Base+0xcc>
   120a4:	ldr	r1, [pc, #256]	; (121a8 <fmt_print@@Base+0x290>)
   120a6:	mov	r0, r7
   120a8:	add	r1, pc
   120aa:	blx	85ac <strcmp@plt>
   120ae:	cbnz	r0, 120ca <fmt_print@@Base+0x1b2>
   120b0:	ldr	r3, [r6, #0]
   120b2:	adds	r3, #7
   120b4:	bic.w	r3, r3, #7
   120b8:	ldr	r2, [r3, #8]
   120ba:	ldrd	r0, r1, [r3]
   120be:	bl	30c00 <pretty_size_mode@@Base>
   120c2:	ldr	r1, [pc, #232]	; (121ac <fmt_print@@Base+0x294>)
   120c4:	add	r1, pc
   120c6:	mov	r2, r0
   120c8:	b.n	11fe4 <fmt_print@@Base+0xcc>
   120ca:	ldr	r1, [pc, #228]	; (121b0 <fmt_print@@Base+0x298>)
   120cc:	mov	r2, r7
   120ce:	add	r1, pc
   120d0:	b.n	11fe4 <fmt_print@@Base+0xcc>
   120d2:	ldr	r3, [pc, #224]	; (121b4 <fmt_print@@Base+0x29c>)
   120d4:	ldr	r3, [r7, r3]
   120d6:	ldr	r3, [r3, #0]
   120d8:	cmp	r3, #4
   120da:	bne.w	11f6a <fmt_print@@Base+0x52>
   120de:	ldr	r3, [r4, #8]
   120e0:	movs	r0, #10
   120e2:	ldrb.w	r8, [r3]
   120e6:	blx	89cc <putchar@plt+0x4>
   120ea:	ldr	r0, [r5, #4]
   120ec:	bl	11bb0 <btrfs_check_nodesize@@Base+0x80>
   120f0:	ldr	r2, [r4, #8]
   120f2:	mov	r0, r2
   120f4:	str	r2, [sp, #12]
   120f6:	blx	8940 <strlen@plt>
   120fa:	ldr	r1, [pc, #188]	; (121b8 <fmt_print@@Base+0x2a0>)
   120fc:	ldr	r2, [sp, #12]
   120fe:	add	r1, pc
   12100:	mov	r7, r0
   12102:	movs	r0, #1
   12104:	blx	8a30 <__printf_chk@plt+0x4>
   12108:	cmp.w	r8, #0
   1210c:	beq.n	12116 <fmt_print@@Base+0x1fe>
   1210e:	movs	r0, #58	; 0x3a
   12110:	adds	r7, #1
   12112:	blx	89cc <putchar@plt+0x4>
   12116:	ldr	r0, [r5, #0]
   12118:	subs	r0, r0, r7
   1211a:	bl	11bb0 <btrfs_check_nodesize@@Base+0x80>
   1211e:	mov	r1, r4
   12120:	mov	r0, r5
   12122:	bl	11d3c <fmt_start_value@@Base>
   12126:	ldr	r7, [r4, #4]
   12128:	ldrb	r3, [r7, #0]
   1212a:	cmp	r3, #37	; 0x25
   1212c:	bne.w	11fae <fmt_print@@Base+0x96>
   12130:	ldr	r2, [r6, #0]
   12132:	mov	r1, r7
   12134:	movs	r0, #1
   12136:	blx	86ac <__vprintf_chk@plt>
   1213a:	mov	r1, r4
   1213c:	mov	r0, r5
   1213e:	bl	11d90 <fmt_end_value@@Base>
   12142:	ldr	r2, [pc, #120]	; (121bc <fmt_print@@Base+0x2a4>)
   12144:	ldr	r3, [pc, #28]	; (12164 <fmt_print@@Base+0x24c>)
   12146:	add	r2, pc
   12148:	ldr	r3, [r2, r3]
   1214a:	ldr	r2, [r3, #0]
   1214c:	ldr	r3, [sp, #324]	; 0x144
   1214e:	eors	r2, r3
   12150:	beq.n	12156 <fmt_print@@Base+0x23e>
   12152:	blx	8708 <__stack_chk_fail@plt>
   12156:	add	sp, #332	; 0x14c
   12158:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1215c:	add	sp, #12
   1215e:	bx	lr
   12160:	cmp	r6, #88	; 0x58
   12162:	movs	r5, r0
   12164:	lsls	r0, r5, #8
   12166:	movs	r0, r0
   12168:	cmp	r6, #64	; 0x40
   1216a:	movs	r5, r0
   1216c:	str	r7, [sp, #956]	; 0x3bc
   1216e:	movs	r2, r0
   12170:	str	r6, [sp, #684]	; 0x2ac
   12172:	movs	r2, r0
   12174:	ldr	r1, [sp, #76]	; 0x4c
   12176:	movs	r2, r0
   12178:	str	r7, [sp, #268]	; 0x10c
   1217a:	movs	r2, r0
   1217c:	ldr	r7, [sp, #300]	; 0x12c
   1217e:	movs	r2, r0
   12180:	b.n	11b40 <btrfs_check_nodesize@@Base+0x10>
   12182:	movs	r2, r0
   12184:	str	r7, [sp, #0]
   12186:	movs	r2, r0
   12188:	str	r6, [sp, #888]	; 0x378
   1218a:	movs	r2, r0
   1218c:	b.n	11ac0 <get_running_kernel_version@@Base+0x78>
   1218e:	movs	r2, r0
   12190:	str	r5, [sp, #964]	; 0x3c4
   12192:	movs	r2, r0
   12194:	ldr	r0, [sp, #396]	; 0x18c
   12196:	movs	r2, r0
   12198:	strh	r1, [r7, #16]
   1219a:	movs	r2, r0
   1219c:	strh	r3, [r6, #0]
   1219e:	movs	r2, r0
   121a0:	str	r6, [sp, #580]	; 0x244
   121a2:	movs	r2, r0
   121a4:	b.n	119ec <btrfs_parse_fs_features@@Base+0xb8>
   121a6:	movs	r2, r0
   121a8:	asrs	r1, r6, #22
   121aa:	movs	r4, r0
   121ac:	b.n	129a8 <get_partition_size@@Base+0x320>
   121ae:	movs	r2, r0
   121b0:	str	r6, [sp, #288]	; 0x120
   121b2:	movs	r2, r0
   121b4:	lsls	r4, r4, #8
   121b6:	movs	r0, r0
   121b8:	b.n	12940 <get_partition_size@@Base+0x2b8>
   121ba:	movs	r2, r0
   121bc:	cmp	r4, #58	; 0x3a
   121be:	movs	r5, r0
   121c0:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   121c4:	mov	r6, r0
   121c6:	ldr	r5, [sp, #32]
   121c8:	mov	r8, r2
   121ca:	mov	r7, r3
   121cc:	mov	r0, r5
   121ce:	blx	8870 <malloc@plt+0x4>
   121d2:	mov	r4, r0
   121d4:	cbz	r0, 12204 <fmt_print@@Base+0x2ec>
   121d6:	mov	r2, r5
   121d8:	movs	r1, #0
   121da:	blx	89bc <memset@plt+0x4>
   121de:	mov	r2, r5
   121e0:	mov	r1, r4
   121e2:	mov	r0, r6
   121e4:	strd	r8, r7, [sp]
   121e8:	blx	8a20 <pwrite64@plt>
   121ec:	cmp	r0, r5
   121ee:	mov	r0, r4
   121f0:	ite	eq
   121f2:	moveq	r5, #0
   121f4:	mvnne.w	r5, #4
   121f8:	blx	8620 <free@plt+0x4>
   121fc:	mov	r0, r5
   121fe:	add	sp, #8
   12200:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   12204:	mvn.w	r5, #11
   12208:	b.n	121fc <fmt_print@@Base+0x2e4>
   1220a:	ldr	r1, [pc, #292]	; (12330 <fmt_print@@Base+0x418>)
   1220c:	ldr	r2, [pc, #292]	; (12334 <fmt_print@@Base+0x41c>)
   1220e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   12212:	add	r1, pc
   12214:	sub.w	sp, sp, #8192	; 0x2000
   12218:	mov	r7, r0
   1221a:	sub	sp, #36	; 0x24
   1221c:	ldr	r2, [r1, r2]
   1221e:	add	r5, sp, #32
   12220:	add.w	r3, sp, #8192	; 0x2000
   12224:	ldr	r2, [r2, #0]
   12226:	str	r2, [r3, #28]
   12228:	mov.w	r2, #0
   1222c:	adds	r3, #28
   1222e:	movs	r3, #0
   12230:	str.w	r3, [r5, #-12]
   12234:	str.w	r3, [r5, #-8]
   12238:	blx	89a0 <blkid_new_probe@plt>
   1223c:	sub.w	r8, r5, #12
   12240:	sub.w	r4, r5, #8
   12244:	mov	r6, r0
   12246:	cmp	r0, #0
   12248:	beq.n	1231c <fmt_print@@Base+0x404>
   1224a:	movs	r3, #0
   1224c:	movs	r2, #0
   1224e:	mov	r1, r7
   12250:	strd	r2, r3, [sp]
   12254:	blx	86e0 <blkid_probe_set_device@plt>
   12258:	mov	r3, r0
   1225a:	cmp	r0, #0
   1225c:	bne.n	12316 <fmt_print@@Base+0x3fe>
   1225e:	ldr	r1, [pc, #216]	; (12338 <fmt_print@@Base+0x420>)
   12260:	mov	r2, r8
   12262:	mov	r0, r6
   12264:	add	r1, pc
   12266:	blx	85dc <blkid_probe_lookup_value@plt>
   1226a:	mov	r2, r0
   1226c:	cbz	r0, 12290 <fmt_print@@Base+0x378>
   1226e:	movs	r4, #1
   12270:	mov	r0, r6
   12272:	blx	8aa0 <blkid_free_probe@plt>
   12276:	ldr	r1, [pc, #196]	; (1233c <fmt_print@@Base+0x424>)
   12278:	add.w	r3, sp, #8192	; 0x2000
   1227c:	ldr	r2, [pc, #180]	; (12334 <fmt_print@@Base+0x41c>)
   1227e:	adds	r3, #28
   12280:	add	r1, pc
   12282:	ldr	r2, [r1, r2]
   12284:	ldr	r1, [r2, #0]
   12286:	ldr	r2, [r3, #0]
   12288:	eors	r1, r2
   1228a:	beq.n	12322 <fmt_print@@Base+0x40a>
   1228c:	blx	8708 <__stack_chk_fail@plt>
   12290:	ldr	r1, [pc, #172]	; (12340 <fmt_print@@Base+0x428>)
   12292:	mov	r3, r4
   12294:	mov	r0, r6
   12296:	add	r1, pc
   12298:	blx	85dc <blkid_probe_lookup_value@plt>
   1229c:	mov	r1, r0
   1229e:	cmp	r0, #0
   122a0:	bne.n	1226e <fmt_print@@Base+0x356>
   122a2:	ldr	r3, [r4, #0]
   122a4:	cmp	r3, #0
   122a6:	beq.n	1226e <fmt_print@@Base+0x356>
   122a8:	ldr.w	r0, [r8]
   122ac:	cmp	r0, #0
   122ae:	beq.n	1226e <fmt_print@@Base+0x356>
   122b0:	movs	r2, #10
   122b2:	blx	87cc <strtoll@plt>
   122b6:	ldr	r3, [r4, #0]
   122b8:	cmp.w	r3, #8192	; 0x2000
   122bc:	itt	hi
   122be:	movhi.w	r3, #8192	; 0x2000
   122c2:	strhi	r3, [r4, #0]
   122c4:	subs	r4, r5, #4
   122c6:	ldr.w	r2, [r5, #-8]
   122ca:	mov.w	r3, #8192	; 0x2000
   122ce:	str	r2, [sp, #12]
   122d0:	mov	r9, r0
   122d2:	mov	r8, r1
   122d4:	mov	r0, r4
   122d6:	movs	r1, #0
   122d8:	blx	8678 <__memset_chk@plt>
   122dc:	mov	r1, r4
   122de:	ldr	r2, [sp, #12]
   122e0:	mov	r0, r7
   122e2:	strd	r9, r8, [sp]
   122e6:	blx	8a20 <pwrite64@plt>
   122ea:	subs	r4, r0, #0
   122ec:	bge.n	12302 <fmt_print@@Base+0x3ea>
   122ee:	ldr	r0, [pc, #84]	; (12344 <fmt_print@@Base+0x42c>)
   122f0:	add	r0, pc
   122f2:	bl	17b7c <__btrfs_error@@Base>
   122f6:	mov.w	r4, #4294967295	; 0xffffffff
   122fa:	mov	r0, r7
   122fc:	blx	85a0 <fsync@plt>
   12300:	b.n	12270 <fmt_print@@Base+0x358>
   12302:	ldr.w	r2, [r5, #-8]
   12306:	cmp	r4, r2
   12308:	beq.n	122fa <fmt_print@@Base+0x3e2>
   1230a:	ldr	r0, [pc, #60]	; (12348 <fmt_print@@Base+0x430>)
   1230c:	mov	r1, r4
   1230e:	add	r0, pc
   12310:	bl	17b7c <__btrfs_error@@Base>
   12314:	b.n	122f6 <fmt_print@@Base+0x3de>
   12316:	mov.w	r4, #4294967295	; 0xffffffff
   1231a:	b.n	12270 <fmt_print@@Base+0x358>
   1231c:	mov.w	r4, #4294967295	; 0xffffffff
   12320:	b.n	12276 <fmt_print@@Base+0x35e>
   12322:	mov	r0, r4
   12324:	add.w	sp, sp, #8192	; 0x2000
   12328:	add	sp, #36	; 0x24
   1232a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1232e:	nop
   12330:	cmp	r3, #110	; 0x6e
   12332:	movs	r5, r0
   12334:	lsls	r0, r5, #8
   12336:	movs	r0, r0
   12338:	str	r4, [sp, #984]	; 0x3d8
   1233a:	movs	r2, r0
   1233c:	cmp	r3, #0
   1233e:	movs	r5, r0
   12340:	str	r4, [sp, #844]	; 0x34c
   12342:	movs	r2, r0
   12344:	str	r4, [sp, #516]	; 0x204
   12346:	movs	r2, r0
   12348:	str	r4, [sp, #540]	; 0x21c
   1234a:	movs	r2, r0

0001234c <btrfs_device_size@@Base>:
   1234c:	push	{r0, r1, r2, r3, r4, lr}
   1234e:	ldr	r2, [pc, #92]	; (123ac <btrfs_device_size@@Base+0x60>)
   12350:	ldr	r3, [pc, #92]	; (123b0 <btrfs_device_size@@Base+0x64>)
   12352:	add	r2, pc
   12354:	ldr	r3, [r2, r3]
   12356:	ldr	r3, [r3, #0]
   12358:	str	r3, [sp, #12]
   1235a:	mov.w	r3, #0
   1235e:	ldr	r3, [r1, #16]
   12360:	and.w	r3, r3, #61440	; 0xf000
   12364:	cmp.w	r3, #32768	; 0x8000
   12368:	bne.n	12382 <btrfs_device_size@@Base+0x36>
   1236a:	ldrd	r0, r1, [r1, #48]	; 0x30
   1236e:	ldr	r2, [pc, #68]	; (123b4 <btrfs_device_size@@Base+0x68>)
   12370:	ldr	r3, [pc, #60]	; (123b0 <btrfs_device_size@@Base+0x64>)
   12372:	add	r2, pc
   12374:	ldr	r3, [r2, r3]
   12376:	ldr	r2, [r3, #0]
   12378:	ldr	r3, [sp, #12]
   1237a:	eors	r2, r3
   1237c:	beq.n	123a0 <btrfs_device_size@@Base+0x54>
   1237e:	blx	8708 <__stack_chk_fail@plt>
   12382:	cmp.w	r3, #24576	; 0x6000
   12386:	bne.n	1239a <btrfs_device_size@@Base+0x4e>
   12388:	ldr	r1, [pc, #28]	; (123a8 <btrfs_device_size@@Base+0x5c>)
   1238a:	mov	r2, sp
   1238c:	blx	87b4 <ioctl@plt>
   12390:	cmp	r0, #0
   12392:	blt.n	1239a <btrfs_device_size@@Base+0x4e>
   12394:	ldrd	r0, r1, [sp]
   12398:	b.n	1236e <btrfs_device_size@@Base+0x22>
   1239a:	movs	r0, #0
   1239c:	movs	r1, #0
   1239e:	b.n	1236e <btrfs_device_size@@Base+0x22>
   123a0:	add	sp, #20
   123a2:	ldr.w	pc, [sp], #4
   123a6:	nop
   123a8:	asrs	r2, r6, #9
   123aa:	strh	r4, [r0, #0]
   123ac:	cmp	r2, #46	; 0x2e
   123ae:	movs	r5, r0
   123b0:	lsls	r0, r5, #8
   123b2:	movs	r0, r0
   123b4:	cmp	r2, #14
   123b6:	movs	r5, r0

000123b8 <btrfs_prepare_device@@Base>:
   123b8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123bc:	sub	sp, #180	; 0xb4
   123be:	ldr	r3, [pc, #588]	; (1260c <btrfs_prepare_device@@Base+0x254>)
   123c0:	mov	r7, r1
   123c2:	str	r2, [sp, #40]	; 0x28
   123c4:	add	r1, sp, #48	; 0x30
   123c6:	ldr	r2, [pc, #584]	; (12610 <btrfs_prepare_device@@Base+0x258>)
   123c8:	mov	r6, r0
   123ca:	ldrd	r8, r9, [sp, #216]	; 0xd8
   123ce:	add	r2, pc
   123d0:	ldr	r3, [r2, r3]
   123d2:	ldr	r3, [r3, #0]
   123d4:	str	r3, [sp, #172]	; 0xac
   123d6:	mov.w	r3, #0
   123da:	str	r1, [sp, #32]
   123dc:	bl	39dc4 <__libc_csu_fini@@Base+0x28>
   123e0:	ldr	r1, [sp, #32]
   123e2:	cmp	r0, #0
   123e4:	bge.n	12408 <btrfs_prepare_device@@Base+0x50>
   123e6:	ldr	r0, [pc, #556]	; (12614 <btrfs_prepare_device@@Base+0x25c>)
   123e8:	mov	r1, r7
   123ea:	add	r0, pc
   123ec:	bl	17b7c <__btrfs_error@@Base>
   123f0:	movs	r0, #1
   123f2:	ldr	r2, [pc, #548]	; (12618 <btrfs_prepare_device@@Base+0x260>)
   123f4:	ldr	r3, [pc, #532]	; (1260c <btrfs_prepare_device@@Base+0x254>)
   123f6:	add	r2, pc
   123f8:	ldr	r3, [r2, r3]
   123fa:	ldr	r2, [r3, #0]
   123fc:	ldr	r3, [sp, #172]	; 0xac
   123fe:	eors	r2, r3
   12400:	beq.w	12606 <btrfs_prepare_device@@Base+0x24e>
   12404:	blx	8708 <__stack_chk_fail@plt>
   12408:	mov	r0, r6
   1240a:	bl	1234c <btrfs_device_size@@Base>
   1240e:	mov	r4, r0
   12410:	mov	r5, r1
   12412:	orrs.w	r3, r4, r5
   12416:	bne.n	12420 <btrfs_prepare_device@@Base+0x68>
   12418:	ldr	r0, [pc, #512]	; (1261c <btrfs_prepare_device@@Base+0x264>)
   1241a:	mov	r1, r7
   1241c:	add	r0, pc
   1241e:	b.n	123ec <btrfs_prepare_device@@Base+0x34>
   12420:	orrs.w	r3, r8, r9
   12424:	beq.n	12432 <btrfs_prepare_device@@Base+0x7a>
   12426:	cmp	r9, r1
   12428:	it	eq
   1242a:	cmpeq	r8, r0
   1242c:	itt	cc
   1242e:	movcc	r4, r8
   12430:	movcc	r5, r9
   12432:	ldr	r3, [sp, #224]	; 0xe0
   12434:	lsls	r1, r3, #30
   12436:	bpl.n	124ec <btrfs_prepare_device@@Base+0x134>
   12438:	movs	r2, #0
   1243a:	movs	r3, #0
   1243c:	movw	r1, #4727	; 0x1277
   12440:	strd	r2, r3, [sp, #152]	; 0x98
   12444:	strd	r2, r3, [sp, #160]	; 0xa0
   12448:	mov	r0, r6
   1244a:	add	r2, sp, #152	; 0x98
   1244c:	blx	87b4 <ioctl@plt>
   12450:	cmp	r0, #0
   12452:	bge.n	1245e <btrfs_prepare_device@@Base+0xa6>
   12454:	blx	897c <__errno_location@plt>
   12458:	ldr	r3, [r0, #0]
   1245a:	cmp	r3, #0
   1245c:	bne.n	124ec <btrfs_prepare_device@@Base+0x134>
   1245e:	ldr	r3, [sp, #224]	; 0xe0
   12460:	lsls	r2, r3, #29
   12462:	bpl.n	1247e <btrfs_prepare_device@@Base+0xc6>
   12464:	mov.w	r2, #512	; 0x200
   12468:	mov	r1, r5
   1246a:	mov	r0, r4
   1246c:	bl	30c00 <pretty_size_mode@@Base>
   12470:	ldr	r1, [pc, #428]	; (12620 <btrfs_prepare_device@@Base+0x268>)
   12472:	mov	r2, r7
   12474:	add	r1, pc
   12476:	mov	r3, r0
   12478:	movs	r0, #1
   1247a:	blx	8a30 <__printf_chk@plt+0x4>
   1247e:	add	r2, sp, #152	; 0x98
   12480:	mov	r8, r4
   12482:	mov	r9, r5
   12484:	movs	r3, #0
   12486:	strd	r3, r3, [sp, #32]
   1248a:	ldr	r3, [sp, #32]
   1248c:	movs	r1, #0
   1248e:	cmp	r1, r9
   12490:	mov.w	r0, #1073741824	; 0x40000000
   12494:	it	eq
   12496:	cmpeq	r0, r8
   12498:	movw	r1, #4727	; 0x1277
   1249c:	str	r3, [sp, #152]	; 0x98
   1249e:	mov	r0, r6
   124a0:	ldr	r3, [sp, #36]	; 0x24
   124a2:	mov	fp, r8
   124a4:	mov	sl, r9
   124a6:	itt	cc
   124a8:	movcc.w	fp, #1073741824	; 0x40000000
   124ac:	movcc.w	sl, #0
   124b0:	str	r2, [sp, #44]	; 0x2c
   124b2:	strd	r3, fp, [sp, #156]	; 0x9c
   124b6:	str.w	sl, [sp, #164]	; 0xa4
   124ba:	blx	87b4 <ioctl@plt>
   124be:	ldr	r2, [sp, #44]	; 0x2c
   124c0:	cmp	r0, #0
   124c2:	bge.n	124ce <btrfs_prepare_device@@Base+0x116>
   124c4:	blx	897c <__errno_location@plt>
   124c8:	ldr	r2, [sp, #44]	; 0x2c
   124ca:	ldr	r3, [r0, #0]
   124cc:	cbnz	r3, 124ec <btrfs_prepare_device@@Base+0x134>
   124ce:	ldr	r3, [sp, #32]
   124d0:	subs.w	r8, r8, fp
   124d4:	sbc.w	r9, r9, sl
   124d8:	adds.w	r3, r3, fp
   124dc:	str	r3, [sp, #32]
   124de:	ldr	r3, [sp, #36]	; 0x24
   124e0:	adc.w	r3, r3, sl
   124e4:	str	r3, [sp, #36]	; 0x24
   124e6:	orrs.w	r3, r8, r9
   124ea:	bne.n	1248a <btrfs_prepare_device@@Base+0xd2>
   124ec:	movs	r1, #0
   124ee:	cmp	r1, r5
   124f0:	mov.w	r0, #2097152	; 0x200000
   124f4:	it	eq
   124f6:	cmpeq	r0, r4
   124f8:	mov	r3, r4
   124fa:	mov.w	r2, #0
   124fe:	it	cc
   12500:	movcc	r3, r0
   12502:	mov	r0, r6
   12504:	str	r3, [sp, #0]
   12506:	movs	r3, #0
   12508:	bl	121c0 <fmt_print@@Base+0x2a8>
   1250c:	mov.w	r8, #0
   12510:	mov.w	sl, #12
   12514:	mov.w	r9, #16384	; 0x4000
   12518:	mov	fp, r0
   1251a:	cmp.w	fp, #0
   1251e:	bne.n	1255a <btrfs_prepare_device@@Base+0x1a2>
   12520:	cmp.w	r8, #3
   12524:	bne.n	12572 <btrfs_prepare_device@@Base+0x1ba>
   12526:	ldr	r3, [sp, #224]	; 0xe0
   12528:	lsls	r3, r3, #31
   1252a:	bpl.n	125ea <btrfs_prepare_device@@Base+0x232>
   1252c:	subs.w	r3, r4, #2097152	; 0x200000
   12530:	str	r3, [sp, #16]
   12532:	adc.w	r3, r5, #4294967295	; 0xffffffff
   12536:	str	r3, [sp, #20]
   12538:	ldrd	r2, r3, [sp, #16]
   1253c:	mov	r0, r6
   1253e:	cmp	r5, r3
   12540:	it	eq
   12542:	cmpeq	r4, r2
   12544:	it	cc
   12546:	strdcc	r4, r5, [sp, #16]
   1254a:	ldr	r3, [sp, #16]
   1254c:	subs	r3, r4, r3
   1254e:	str	r3, [sp, #0]
   12550:	ldrd	r2, r3, [sp, #16]
   12554:	bl	121c0 <fmt_print@@Base+0x2a8>
   12558:	mov	fp, r0
   1255a:	cmp.w	fp, #0
   1255e:	bge.n	125ea <btrfs_prepare_device@@Base+0x232>
   12560:	blx	897c <__errno_location@plt>
   12564:	rsb	r3, fp, #0
   12568:	mov	r1, r7
   1256a:	str	r3, [r0, #0]
   1256c:	ldr	r0, [pc, #180]	; (12624 <btrfs_prepare_device@@Base+0x26c>)
   1256e:	add	r0, pc
   12570:	b.n	123ec <btrfs_prepare_device@@Base+0x34>
   12572:	cmp.w	r8, #0
   12576:	beq.n	125de <btrfs_prepare_device@@Base+0x226>
   12578:	mul.w	r3, sl, r8
   1257c:	sub.w	r1, r3, #32
   12580:	rsb	r2, r3, #32
   12584:	lsl.w	r1, r9, r1
   12588:	lsr.w	r2, r9, r2
   1258c:	orrs	r1, r2
   1258e:	lsl.w	r3, r9, r3
   12592:	str	r1, [sp, #12]
   12594:	str	r3, [sp, #8]
   12596:	ldrd	r0, r1, [sp, #8]
   1259a:	mov	r2, r4
   1259c:	mov	r3, r5
   1259e:	add.w	r8, r8, #1
   125a2:	cmp	r1, r5
   125a4:	ldr	r1, [sp, #8]
   125a6:	it	eq
   125a8:	cmpeq	r0, r4
   125aa:	it	cc
   125ac:	ldrdcc	r2, r3, [sp, #8]
   125b0:	adds.w	r1, r1, #4096	; 0x1000
   125b4:	str	r1, [sp, #24]
   125b6:	ldr	r1, [sp, #12]
   125b8:	adc.w	r1, r1, #0
   125bc:	str	r1, [sp, #28]
   125be:	ldrd	r0, r1, [sp, #24]
   125c2:	cmp	r5, r1
   125c4:	it	eq
   125c6:	cmpeq	r4, r0
   125c8:	it	cc
   125ca:	strdcc	r4, r5, [sp, #24]
   125ce:	ldr	r1, [sp, #24]
   125d0:	mov	r0, r6
   125d2:	subs	r1, r1, r2
   125d4:	str	r1, [sp, #0]
   125d6:	bl	121c0 <fmt_print@@Base+0x2a8>
   125da:	mov	fp, r0
   125dc:	b.n	1251a <btrfs_prepare_device@@Base+0x162>
   125de:	mov.w	r2, #65536	; 0x10000
   125e2:	movs	r3, #0
   125e4:	strd	r2, r3, [sp, #8]
   125e8:	b.n	12596 <btrfs_prepare_device@@Base+0x1de>
   125ea:	mov	r0, r6
   125ec:	bl	1220a <fmt_print@@Base+0x2f2>
   125f0:	cmp	r0, #0
   125f2:	bge.n	125fc <btrfs_prepare_device@@Base+0x244>
   125f4:	ldr	r0, [pc, #48]	; (12628 <btrfs_prepare_device@@Base+0x270>)
   125f6:	mov	r1, r7
   125f8:	add	r0, pc
   125fa:	b.n	123ec <btrfs_prepare_device@@Base+0x34>
   125fc:	ldr	r3, [sp, #40]	; 0x28
   125fe:	movs	r0, #0
   12600:	strd	r4, r5, [r3]
   12604:	b.n	123f2 <btrfs_prepare_device@@Base+0x3a>
   12606:	add	sp, #180	; 0xb4
   12608:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1260c:	lsls	r0, r5, #8
   1260e:	movs	r0, r0
   12610:	cmp	r1, #178	; 0xb2
   12612:	movs	r5, r0
   12614:	str	r3, [sp, #880]	; 0x370
   12616:	movs	r2, r0
   12618:	cmp	r1, #138	; 0x8a
   1261a:	movs	r5, r0
   1261c:	str	r3, [sp, #768]	; 0x300
   1261e:	movs	r2, r0
   12620:	str	r3, [sp, #540]	; 0x21c
   12622:	movs	r2, r0
   12624:	str	r2, [sp, #728]	; 0x2d8
   12626:	movs	r2, r0
   12628:	str	r2, [sp, #300]	; 0x12c
   1262a:	movs	r2, r0

0001262c <disk_size@@Base>:
   1262c:	ldr	r2, [pc, #76]	; (1267c <disk_size@@Base+0x50>)
   1262e:	ldr	r3, [pc, #80]	; (12680 <disk_size@@Base+0x54>)
   12630:	add	r2, pc
   12632:	push	{r4, lr}
   12634:	sub	sp, #96	; 0x60
   12636:	ldr	r3, [r2, r3]
   12638:	mov	r1, sp
   1263a:	ldr	r3, [r3, #0]
   1263c:	str	r3, [sp, #92]	; 0x5c
   1263e:	mov.w	r3, #0
   12642:	blx	8ac4 <statfs64@plt>
   12646:	cmp	r0, #0
   12648:	blt.n	12672 <disk_size@@Base+0x46>
   1264a:	ldr	r2, [sp, #4]
   1264c:	ldrd	r4, r3, [sp, #8]
   12650:	asrs	r1, r2, #31
   12652:	muls	r3, r2
   12654:	mla	r3, r4, r1, r3
   12658:	umull	r0, r1, r4, r2
   1265c:	add	r1, r3
   1265e:	ldr	r2, [pc, #36]	; (12684 <disk_size@@Base+0x58>)
   12660:	ldr	r3, [pc, #28]	; (12680 <disk_size@@Base+0x54>)
   12662:	add	r2, pc
   12664:	ldr	r3, [r2, r3]
   12666:	ldr	r2, [r3, #0]
   12668:	ldr	r3, [sp, #92]	; 0x5c
   1266a:	eors	r2, r3
   1266c:	beq.n	12678 <disk_size@@Base+0x4c>
   1266e:	blx	8708 <__stack_chk_fail@plt>
   12672:	movs	r0, #0
   12674:	movs	r1, #0
   12676:	b.n	1265e <disk_size@@Base+0x32>
   12678:	add	sp, #96	; 0x60
   1267a:	pop	{r4, pc}
   1267c:	movs	r7, #80	; 0x50
   1267e:	movs	r5, r0
   12680:	lsls	r0, r5, #8
   12682:	movs	r0, r0
   12684:	movs	r7, #30
   12686:	movs	r5, r0

00012688 <get_partition_size@@Base>:
   12688:	push	{r0, r1, r2, r3, r4, lr}
   1268a:	movs	r1, #0
   1268c:	ldr	r2, [pc, #80]	; (126e0 <get_partition_size@@Base+0x58>)
   1268e:	ldr	r3, [pc, #84]	; (126e4 <get_partition_size@@Base+0x5c>)
   12690:	add	r2, pc
   12692:	ldr	r3, [r2, r3]
   12694:	ldr	r3, [r3, #0]
   12696:	str	r3, [sp, #12]
   12698:	mov.w	r3, #0
   1269c:	blx	8844 <open64@plt>
   126a0:	subs	r4, r0, #0
   126a2:	blt.n	126b6 <get_partition_size@@Base+0x2e>
   126a4:	ldr	r1, [pc, #52]	; (126dc <get_partition_size@@Base+0x54>)
   126a6:	mov	r2, sp
   126a8:	blx	87b4 <ioctl@plt>
   126ac:	cmp	r0, #0
   126ae:	mov	r0, r4
   126b0:	bge.n	126bc <get_partition_size@@Base+0x34>
   126b2:	blx	8b9c <close@plt>
   126b6:	movs	r0, #0
   126b8:	movs	r1, #0
   126ba:	b.n	126c4 <get_partition_size@@Base+0x3c>
   126bc:	blx	8b9c <close@plt>
   126c0:	ldrd	r0, r1, [sp]
   126c4:	ldr	r2, [pc, #32]	; (126e8 <get_partition_size@@Base+0x60>)
   126c6:	ldr	r3, [pc, #28]	; (126e4 <get_partition_size@@Base+0x5c>)
   126c8:	add	r2, pc
   126ca:	ldr	r3, [r2, r3]
   126cc:	ldr	r2, [r3, #0]
   126ce:	ldr	r3, [sp, #12]
   126d0:	eors	r2, r3
   126d2:	beq.n	126d8 <get_partition_size@@Base+0x50>
   126d4:	blx	8708 <__stack_chk_fail@plt>
   126d8:	add	sp, #16
   126da:	pop	{r4, pc}
   126dc:	asrs	r2, r6, #9
   126de:	strh	r4, [r0, #0]
   126e0:	movs	r6, #240	; 0xf0
   126e2:	movs	r5, r0
   126e4:	lsls	r0, r5, #8
   126e6:	movs	r0, r0
   126e8:	movs	r6, #184	; 0xb8
   126ea:	movs	r5, r0
   126ec:	ldr	r0, [pc, #44]	; (1271c <get_partition_size@@Base+0x94>)
   126ee:	push	{r3, lr}
   126f0:	add	r0, pc
   126f2:	blx	8854 <puts@plt+0x4>
   126f6:	ldr	r0, [pc, #40]	; (12720 <get_partition_size@@Base+0x98>)
   126f8:	add	r0, pc
   126fa:	blx	8854 <puts@plt+0x4>
   126fe:	ldr	r0, [pc, #36]	; (12724 <get_partition_size@@Base+0x9c>)
   12700:	add	r0, pc
   12702:	blx	8854 <puts@plt+0x4>
   12706:	ldr	r0, [pc, #32]	; (12728 <get_partition_size@@Base+0xa0>)
   12708:	add	r0, pc
   1270a:	blx	8854 <puts@plt+0x4>
   1270e:	ldr	r0, [pc, #28]	; (1272c <get_partition_size@@Base+0xa4>)
   12710:	add	r0, pc
   12712:	blx	8854 <puts@plt+0x4>
   12716:	movs	r0, #1
   12718:	blx	8934 <exit@plt>
   1271c:	str	r1, [sp, #452]	; 0x1c4
   1271e:	movs	r2, r0
   12720:	str	r1, [sp, #588]	; 0x24c
   12722:	movs	r2, r0
   12724:	str	r1, [sp, #660]	; 0x294
   12726:	movs	r2, r0
   12728:	str	r1, [sp, #820]	; 0x334
   1272a:	movs	r2, r0
   1272c:	str	r1, [sp, #928]	; 0x3a0
   1272e:	movs	r2, r0
   12730:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12734:	mov	r4, r2
   12736:	vpush	{d8}
   1273a:	mov	r5, r3
   1273c:	ldr	r2, [pc, #356]	; (128a4 <get_partition_size@@Base+0x21c>)
   1273e:	mov.w	sl, #0
   12742:	ldr	r7, [pc, #356]	; (128a8 <get_partition_size@@Base+0x220>)
   12744:	mov.w	r8, #0
   12748:	vmov	s17, r1
   1274c:	ldr	r1, [pc, #348]	; (128ac <get_partition_size@@Base+0x224>)
   1274e:	sub.w	sp, sp, #65536	; 0x10000
   12752:	vmov	s16, r0
   12756:	add	r1, pc
   12758:	sub	sp, #52	; 0x34
   1275a:	add.w	r3, sp, #65536	; 0x10000
   1275e:	add.w	fp, sp, #48	; 0x30
   12762:	ldr	r2, [r1, r2]
   12764:	adds	r3, #44	; 0x2c
   12766:	sub.w	r6, fp, #16
   1276a:	mov.w	r9, #0
   1276e:	ldr	r2, [r2, #0]
   12770:	str	r2, [r3, #0]
   12772:	mov.w	r2, #0
   12776:	add	r7, pc
   12778:	add.w	r3, sp, #65536	; 0x10000
   1277c:	adds	r3, #96	; 0x60
   1277e:	ldrd	r2, r3, [r3]
   12782:	cmp	r9, r3
   12784:	it	eq
   12786:	cmpeq	r8, r2
   12788:	bcs.n	1282a <get_partition_size@@Base+0x1a2>
   1278a:	add.w	r3, sp, #65536	; 0x10000
   1278e:	sub.w	r1, fp, #4
   12792:	adds	r3, #96	; 0x60
   12794:	vmov	r0, s16
   12798:	str	r1, [sp, #28]
   1279a:	ldr	r3, [r3, #0]
   1279c:	subs.w	r3, r3, r8
   127a0:	str	r3, [sp, #16]
   127a2:	add.w	r3, sp, #65536	; 0x10000
   127a6:	add.w	r3, r3, #100	; 0x64
   127aa:	ldr	r3, [r3, #0]
   127ac:	sbc.w	r3, r3, r9
   127b0:	str	r3, [sp, #20]
   127b2:	ldrd	r2, r3, [sp, #16]
   127b6:	cmp	r3, #0
   127b8:	it	eq
   127ba:	cmpeq.w	r2, #65537	; 0x10001
   127be:	ittt	cs
   127c0:	movcs.w	r2, #65536	; 0x10000
   127c4:	movcs	r3, #0
   127c6:	strdcs	r2, r3, [sp, #16]
   127ca:	ldrd	r2, r3, [sp, #16]
   127ce:	strd	r2, r3, [r6]
   127d2:	add.w	r3, sp, #65536	; 0x10000
   127d6:	adds	r3, #104	; 0x68
   127d8:	adds.w	r2, r8, r4
   127dc:	ldr	r3, [r3, #0]
   127de:	strd	r6, r3, [sp]
   127e2:	adc.w	r3, r9, r5
   127e6:	bl	1caa8 <read_extent_data@@Base>
   127ea:	ldr	r1, [sp, #28]
   127ec:	subs.w	sl, r0, #0
   127f0:	bge.n	12844 <get_partition_size@@Base+0x1bc>
   127f2:	blx	897c <__errno_location@plt>
   127f6:	add.w	r2, sp, #65536	; 0x10000
   127fa:	adds	r2, #96	; 0x60
   127fc:	rsb	r3, sl, #0
   12800:	ldr	r2, [r2, #0]
   12802:	adds	r1, r2, r4
   12804:	add.w	r2, sp, #65536	; 0x10000
   12808:	add.w	r2, r2, #100	; 0x64
   1280c:	ldr	r2, [r2, #0]
   1280e:	adcs	r2, r5
   12810:	str	r3, [r0, #0]
   12812:	ldr	r3, [pc, #156]	; (128b0 <get_partition_size@@Base+0x228>)
   12814:	ldr	r3, [r7, r3]
   12816:	strd	r1, r2, [sp, #8]
   1281a:	movs	r1, #1
   1281c:	ldr	r2, [pc, #148]	; (128b4 <get_partition_size@@Base+0x22c>)
   1281e:	strd	r4, r5, [sp]
   12822:	add	r2, pc
   12824:	ldr	r0, [r3, #0]
   12826:	blx	8a64 <__fprintf_chk@plt+0x4>
   1282a:	ldr	r1, [pc, #140]	; (128b8 <get_partition_size@@Base+0x230>)
   1282c:	add.w	r3, sp, #65536	; 0x10000
   12830:	ldr	r2, [pc, #112]	; (128a4 <get_partition_size@@Base+0x21c>)
   12832:	adds	r3, #44	; 0x2c
   12834:	add	r1, pc
   12836:	ldr	r2, [r1, r2]
   12838:	ldr	r1, [r2, #0]
   1283a:	ldr	r2, [r3, #0]
   1283c:	eors	r1, r2
   1283e:	beq.n	12894 <get_partition_size@@Base+0x20c>
   12840:	blx	8708 <__stack_chk_fail@plt>
   12844:	vmov	r0, s17
   12848:	ldr	r2, [r6, #0]
   1284a:	blx	8a48 <write@plt>
   1284e:	subs.w	sl, r0, #0
   12852:	blt.n	1286e <get_partition_size@@Base+0x1e6>
   12854:	ldrd	r0, r1, [r6]
   12858:	mov	r2, sl
   1285a:	asrs	r3, r2, #31
   1285c:	cmp	r3, r1
   1285e:	it	eq
   12860:	cmpeq	sl, r0
   12862:	beq.n	1288a <get_partition_size@@Base+0x202>
   12864:	cmp.w	sl, #0
   12868:	it	ne
   1286a:	mvnne.w	sl, #3
   1286e:	blx	897c <__errno_location@plt>
   12872:	rsb	r3, sl, #0
   12876:	ldr	r2, [pc, #68]	; (128bc <get_partition_size@@Base+0x234>)
   12878:	movs	r1, #1
   1287a:	add	r2, pc
   1287c:	str	r3, [r0, #0]
   1287e:	ldr	r3, [pc, #48]	; (128b0 <get_partition_size@@Base+0x228>)
   12880:	ldr	r3, [r7, r3]
   12882:	ldr	r0, [r3, #0]
   12884:	blx	8a64 <__fprintf_chk@plt+0x4>
   12888:	b.n	1282a <get_partition_size@@Base+0x1a2>
   1288a:	adds.w	r8, r8, sl
   1288e:	adc.w	r9, r9, r3
   12892:	b.n	12778 <get_partition_size@@Base+0xf0>
   12894:	mov	r0, sl
   12896:	add.w	sp, sp, #65536	; 0x10000
   1289a:	add	sp, #52	; 0x34
   1289c:	vpop	{d8}
   128a0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128a4:	lsls	r0, r5, #8
   128a6:	movs	r0, r0
   128a8:	movs	r6, #10
   128aa:	movs	r5, r0
   128ac:	movs	r6, #42	; 0x2a
   128ae:	movs	r5, r0
   128b0:	lsls	r0, r7, #8
   128b2:	movs	r0, r0
   128b4:	str	r0, [sp, #968]	; 0x3c8
   128b6:	movs	r2, r0
   128b8:	movs	r5, #76	; 0x4c
   128ba:	movs	r5, r0
   128bc:	str	r0, [sp, #788]	; 0x314
   128be:	movs	r2, r0
   128c0:	ldr.w	ip, [pc, #80]	; 12914 <get_partition_size@@Base+0x28c>
   128c4:	ldr	r4, [pc, #80]	; (12918 <get_partition_size@@Base+0x290>)
   128c6:	add	ip, pc
   128c8:	ldr	r3, [pc, #80]	; (1291c <get_partition_size@@Base+0x294>)
   128ca:	push	{lr}
   128cc:	sub	sp, #92	; 0x5c
   128ce:	ldr.w	r4, [ip, r4]
   128d2:	add	r3, pc
   128d4:	ldr	r4, [r4, #0]
   128d6:	str	r4, [sp, #84]	; 0x54
   128d8:	mov.w	r4, #0
   128dc:	ldr	r4, [pc, #64]	; (12920 <get_partition_size@@Base+0x298>)
   128de:	ldr	r4, [r3, r4]
   128e0:	ldr	r3, [pc, #64]	; (12924 <get_partition_size@@Base+0x29c>)
   128e2:	strd	r0, r2, [sp, #8]
   128e6:	add	r3, pc
   128e8:	ldr	r2, [pc, #60]	; (12928 <get_partition_size@@Base+0x2a0>)
   128ea:	strd	r1, r3, [sp]
   128ee:	movs	r1, #1
   128f0:	ldr	r3, [pc, #56]	; (1292c <get_partition_size@@Base+0x2a4>)
   128f2:	add	r2, pc
   128f4:	ldr	r0, [r4, #0]
   128f6:	add	r4, sp, #20
   128f8:	add	r3, pc
   128fa:	blx	8a64 <__fprintf_chk@plt+0x4>
   128fe:	movs	r1, #16
   12900:	mov	r0, r4
   12902:	blx	88bc <backtrace@plt>
   12906:	movs	r2, #2
   12908:	mov	r1, r0
   1290a:	mov	r0, r4
   1290c:	blx	8bcc <backtrace_symbols_fd@plt>
   12910:	blx	8b84 <abort@plt>
   12914:	movs	r4, #186	; 0xba
   12916:	movs	r5, r0
   12918:	lsls	r0, r5, #8
   1291a:	movs	r0, r0
   1291c:	movs	r4, #174	; 0xae
   1291e:	movs	r5, r0
   12920:	lsls	r0, r7, #8
   12922:	movs	r0, r0
   12924:	str	r1, [sp, #584]	; 0x248
   12926:	movs	r2, r0
   12928:	strb	r0, [r6, #22]
   1292a:	movs	r2, r0
   1292c:	str	r0, [sp, #404]	; 0x194
   1292e:	movs	r2, r0
   12930:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12934:	sub	sp, #84	; 0x54
   12936:	ldrd	sl, fp, [r1]
   1293a:	mov	r7, r0
   1293c:	strd	r1, r2, [sp, #12]
   12940:	ldr	r2, [pc, #300]	; (12a70 <get_partition_size@@Base+0x3e8>)
   12942:	str	r3, [sp, #20]
   12944:	ldr	r3, [pc, #300]	; (12a74 <get_partition_size@@Base+0x3ec>)
   12946:	add	r2, pc
   12948:	ldr	r3, [r2, r3]
   1294a:	ldr	r3, [r3, #0]
   1294c:	str	r3, [sp, #76]	; 0x4c
   1294e:	mov.w	r3, #0
   12952:	bl	18550 <btrfs_alloc_path@@Base>
   12956:	mov	r5, r0
   12958:	cmp	r0, #0
   1295a:	beq.w	12a60 <get_partition_size@@Base+0x3d8>
   1295e:	add.w	r6, sp, #45	; 0x2d
   12962:	movs	r4, #0
   12964:	mov	r3, r0
   12966:	ldr	r1, [r7, #24]
   12968:	strb	r4, [r6, #1]
   1296a:	add	r2, sp, #36	; 0x24
   1296c:	strb	r4, [r6, #2]
   1296e:	mov	r0, r4
   12970:	strb	r4, [r6, #3]
   12972:	strb	r4, [r6, #4]
   12974:	strb	r4, [r6, #5]
   12976:	strb	r4, [r6, #6]
   12978:	strb	r4, [r6, #7]
   1297a:	strd	r4, r4, [sp]
   1297e:	strd	sl, fp, [sp, #36]	; 0x24
   12982:	strb.w	r4, [sp, #44]	; 0x2c
   12986:	strb.w	r4, [sp, #45]	; 0x2d
   1298a:	bl	1a93c <btrfs_search_slot@@Base>
   1298e:	subs	r3, r0, #0
   12990:	blt.n	12a12 <get_partition_size@@Base+0x38a>
   12992:	beq.n	129ec <get_partition_size@@Base+0x364>
   12994:	add	r4, sp, #56	; 0x38
   12996:	ldr	r2, [r5, #32]
   12998:	movs	r3, #25
   1299a:	ldr	r0, [r5, #0]
   1299c:	mov	r1, r4
   1299e:	muls	r2, r3
   129a0:	movs	r3, #17
   129a2:	adds	r2, #101	; 0x65
   129a4:	bl	17a1a <read_extent_buffer@@Base>
   129a8:	ldr.w	r2, [sp, #65]	; 0x41
   129ac:	ldr.w	r1, [sp, #69]	; 0x45
   129b0:	ldrb.w	r3, [sp, #64]	; 0x40
   129b4:	ldrd	r8, r9, [sp, #56]	; 0x38
   129b8:	ldr	r0, [sp, #20]
   129ba:	str	r2, [r6, #0]
   129bc:	str	r1, [r6, #4]
   129be:	strb.w	r3, [sp, #44]	; 0x2c
   129c2:	strd	r8, r9, [sp, #36]	; 0x24
   129c6:	cbz	r0, 129f8 <get_partition_size@@Base+0x370>
   129c8:	cmp	r9, fp
   129ca:	it	eq
   129cc:	cmpeq	r8, sl
   129ce:	bcc.n	129de <get_partition_size@@Base+0x356>
   129d0:	add.w	r0, r3, #88	; 0x58
   129d4:	uxtb	r0, r0
   129d6:	cmp	r0, #1
   129d8:	bls.n	12a4e <get_partition_size@@Base+0x3c6>
   129da:	ldr	r3, [sp, #20]
   129dc:	cbz	r3, 12a00 <get_partition_size@@Base+0x378>
   129de:	ldr	r0, [r7, #24]
   129e0:	movs	r2, #0
   129e2:	movs	r3, #0
   129e4:	mov	r1, r5
   129e6:	bl	1c13c <btrfs_next_extent_item@@Base>
   129ea:	b.n	12a0c <get_partition_size@@Base+0x384>
   129ec:	ldr	r0, [pc, #136]	; (12a78 <get_partition_size@@Base+0x3f0>)
   129ee:	movs	r2, #1
   129f0:	movs	r1, #65	; 0x41
   129f2:	add	r0, pc
   129f4:	bl	128c0 <get_partition_size@@Base+0x238>
   129f8:	cmp	fp, r9
   129fa:	it	eq
   129fc:	cmpeq	sl, r8
   129fe:	bcs.n	129d0 <get_partition_size@@Base+0x348>
   12a00:	ldr	r0, [r7, #24]
   12a02:	movs	r2, #0
   12a04:	movs	r3, #0
   12a06:	mov	r1, r5
   12a08:	bl	1c098 <btrfs_previous_extent_item@@Base>
   12a0c:	mov	r3, r0
   12a0e:	cmp	r0, #0
   12a10:	beq.n	12996 <get_partition_size@@Base+0x30e>
   12a12:	movs	r2, #0
   12a14:	mov	r1, r2
   12a16:	mov	r0, r5
   12a18:	str	r3, [sp, #20]
   12a1a:	strd	r2, r1, [sp, #24]
   12a1e:	bl	1857e <btrfs_free_path@@Base>
   12a22:	ldr	r3, [sp, #20]
   12a24:	cbnz	r3, 12a3a <get_partition_size@@Base+0x3b2>
   12a26:	ldr	r2, [sp, #12]
   12a28:	strd	sl, fp, [r2]
   12a2c:	ldr	r2, [sp, #16]
   12a2e:	mov	r1, r2
   12a30:	ldr	r2, [sp, #24]
   12a32:	str	r2, [r1, #0]
   12a34:	mov	r2, r1
   12a36:	ldr	r1, [sp, #28]
   12a38:	str	r1, [r2, #4]
   12a3a:	ldr	r1, [pc, #64]	; (12a7c <get_partition_size@@Base+0x3f4>)
   12a3c:	ldr	r2, [pc, #52]	; (12a74 <get_partition_size@@Base+0x3ec>)
   12a3e:	add	r1, pc
   12a40:	ldr	r2, [r1, r2]
   12a42:	ldr	r1, [r2, #0]
   12a44:	ldr	r2, [sp, #76]	; 0x4c
   12a46:	eors	r1, r2
   12a48:	beq.n	12a66 <get_partition_size@@Base+0x3de>
   12a4a:	blx	8708 <__stack_chk_fail@plt>
   12a4e:	cmp	r3, #169	; 0xa9
   12a50:	bne.n	12a58 <get_partition_size@@Base+0x3d0>
   12a52:	ldr.w	r2, [r7, #384]	; 0x180
   12a56:	movs	r1, #0
   12a58:	mov	sl, r8
   12a5a:	mov	fp, r9
   12a5c:	movs	r3, #0
   12a5e:	b.n	12a16 <get_partition_size@@Base+0x38e>
   12a60:	mvn.w	r3, #11
   12a64:	b.n	12a3a <get_partition_size@@Base+0x3b2>
   12a66:	mov	r0, r3
   12a68:	add	sp, #84	; 0x54
   12a6a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a6e:	nop
   12a70:	movs	r4, #58	; 0x3a
   12a72:	movs	r5, r0
   12a74:	lsls	r0, r5, #8
   12a76:	movs	r0, r0
   12a78:	strh	r1, [r2, #2]
   12a7a:	movs	r2, r0
   12a7c:	movs	r3, #66	; 0x42
   12a7e:	movs	r5, r0
   12a80:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a84:	sub.w	sp, sp, #8192	; 0x2000
   12a88:	sub	sp, #36	; 0x24
   12a8a:	mov	r5, r1
   12a8c:	add.w	r3, sp, #8256	; 0x2040
   12a90:	ldr	r1, [pc, #476]	; (12c70 <get_partition_size@@Base+0x5e8>)
   12a92:	mov	r4, r2
   12a94:	ldr	r2, [pc, #476]	; (12c74 <get_partition_size@@Base+0x5ec>)
   12a96:	ldrd	r8, r9, [r3, #8]
   12a9a:	add	r1, pc
   12a9c:	adds	r3, #8
   12a9e:	ldr	r7, [pc, #472]	; (12c78 <get_partition_size@@Base+0x5f0>)
   12aa0:	cmp.w	r9, #0
   12aa4:	add.w	r3, sp, #8192	; 0x2000
   12aa8:	ldr	r2, [r1, r2]
   12aaa:	it	eq
   12aac:	cmpeq.w	r8, #5
   12ab0:	add	r7, pc
   12ab2:	add.w	r3, r3, #28
   12ab6:	mov	r6, r0
   12ab8:	ldr	r2, [r2, #0]
   12aba:	str	r2, [r3, #0]
   12abc:	mov.w	r2, #0
   12ac0:	bne.n	12af6 <get_partition_size@@Base+0x46e>
   12ac2:	ldr	r3, [r4, #0]
   12ac4:	cbnz	r3, 12ae6 <get_partition_size@@Base+0x45e>
   12ac6:	mvn.w	fp, #74	; 0x4a
   12aca:	ldr	r1, [pc, #432]	; (12c7c <get_partition_size@@Base+0x5f4>)
   12acc:	add.w	r3, sp, #8192	; 0x2000
   12ad0:	ldr	r2, [pc, #416]	; (12c74 <get_partition_size@@Base+0x5ec>)
   12ad2:	adds	r3, #28
   12ad4:	add	r1, pc
   12ad6:	ldr	r2, [r1, r2]
   12ad8:	ldr	r1, [r2, #0]
   12ada:	ldr	r2, [r3, #0]
   12adc:	eors	r1, r2
   12ade:	beq.w	12c5a <get_partition_size@@Base+0x5d2>
   12ae2:	blx	8708 <__stack_chk_fail@plt>
   12ae6:	mov.w	fp, #0
   12aea:	strb.w	fp, [r5]
   12aee:	ldr	r2, [r4, #0]
   12af0:	subs	r2, #1
   12af2:	str	r2, [r4, #0]
   12af4:	b.n	12aca <get_partition_size@@Base+0x442>
   12af6:	add	r3, sp, #32
   12af8:	mov.w	r2, #4096	; 0x1000
   12afc:	sub.w	sl, r3, #8
   12b00:	movs	r1, #0
   12b02:	str	r3, [sp, #16]
   12b04:	mov	r0, sl
   12b06:	blx	89bc <memset@plt+0x4>
   12b0a:	ldr	r1, [sp, #16]
   12b0c:	movs	r2, #1
   12b0e:	movs	r3, #0
   12b10:	mov	r0, r6
   12b12:	strd	r8, r9, [sl, #8]
   12b16:	strd	r2, r3, [r1, #-8]
   12b1a:	mov.w	r2, #4294967295	; 0xffffffff
   12b1e:	movs	r3, #144	; 0x90
   12b20:	ldr	r1, [pc, #324]	; (12c68 <get_partition_size@@Base+0x5e0>)
   12b22:	strd	r3, r3, [sl, #56]	; 0x38
   12b26:	mov.w	r3, #4294967295	; 0xffffffff
   12b2a:	strd	r2, r3, [sl, #32]
   12b2e:	strd	r2, r3, [sl, #48]	; 0x30
   12b32:	mov	r2, sl
   12b34:	movs	r3, #1
   12b36:	strd	r8, r9, [sl, #16]
   12b3a:	str.w	r3, [sl, #64]	; 0x40
   12b3e:	blx	87b4 <ioctl@plt>
   12b42:	movs	r3, #1
   12b44:	subs.w	fp, r0, #0
   12b48:	bge.n	12b64 <get_partition_size@@Base+0x4dc>
   12b4a:	ldr	r2, [pc, #308]	; (12c80 <get_partition_size@@Base+0x5f8>)
   12b4c:	mov	r1, r3
   12b4e:	ldr	r0, [r7, r2]
   12b50:	ldr	r2, [pc, #304]	; (12c84 <get_partition_size@@Base+0x5fc>)
   12b52:	str.w	fp, [sp, #8]
   12b56:	strd	r8, r9, [sp]
   12b5a:	add	r2, pc
   12b5c:	ldr	r0, [r0, #0]
   12b5e:	blx	8a64 <__fprintf_chk@plt+0x4>
   12b62:	b.n	12aca <get_partition_size@@Base+0x442>
   12b64:	ldr.w	r2, [sl, #64]	; 0x40
   12b68:	cbnz	r2, 12b84 <get_partition_size@@Base+0x4fc>
   12b6a:	ldr	r2, [pc, #276]	; (12c80 <get_partition_size@@Base+0x5f8>)
   12b6c:	mov	r1, r3
   12b6e:	mvn.w	fp, #1
   12b72:	ldr	r0, [r7, r2]
   12b74:	ldr	r2, [pc, #272]	; (12c88 <get_partition_size@@Base+0x600>)
   12b76:	strd	r8, r9, [sp]
   12b7a:	add	r2, pc
   12b7c:	ldr	r0, [r0, #0]
   12b7e:	blx	8a64 <__fprintf_chk@plt+0x4>
   12b82:	b.n	12aca <get_partition_size@@Base+0x442>
   12b84:	ldrd	r2, r3, [sl, #120]	; 0x78
   12b88:	cmp	r3, #0
   12b8a:	it	eq
   12b8c:	cmpeq	r2, #5
   12b8e:	beq.n	12bba <get_partition_size@@Base+0x532>
   12b90:	strd	r2, r3, [sp]
   12b94:	mov	r1, r5
   12b96:	mov	r2, r4
   12b98:	mov	r0, r6
   12b9a:	bl	12a80 <get_partition_size@@Base+0x3f8>
   12b9e:	mov	fp, r0
   12ba0:	cmp	r0, #0
   12ba2:	bne.n	12aca <get_partition_size@@Base+0x442>
   12ba4:	ldr	r3, [r4, #0]
   12ba6:	cmp	r3, #0
   12ba8:	beq.n	12ac6 <get_partition_size@@Base+0x43e>
   12baa:	ldr	r1, [pc, #224]	; (12c8c <get_partition_size@@Base+0x604>)
   12bac:	mov	r0, r5
   12bae:	add	r1, pc
   12bb0:	blx	87a8 <strcat@plt+0x4>
   12bb4:	ldr	r3, [r4, #0]
   12bb6:	subs	r3, #1
   12bb8:	str	r3, [r4, #0]
   12bba:	ldrd	r8, r9, [sl, #136]	; 0x88
   12bbe:	cmp.w	r9, #0
   12bc2:	it	eq
   12bc4:	cmpeq.w	r8, #256	; 0x100
   12bc8:	beq.n	12c36 <get_partition_size@@Base+0x5ae>
   12bca:	add.w	fp, sp, #4128	; 0x1020
   12bce:	mov.w	r2, #4096	; 0x1000
   12bd2:	sub.w	r3, fp, #8
   12bd6:	movs	r1, #0
   12bd8:	mov	r0, r3
   12bda:	blx	89bc <memset@plt+0x4>
   12bde:	mov	r3, r0
   12be0:	ldrd	r0, r1, [sl, #120]	; 0x78
   12be4:	mov	r2, r3
   12be6:	strd	r8, r9, [r3, #8]
   12bea:	strd	r0, r1, [fp, #-8]
   12bee:	mov	r0, r6
   12bf0:	ldr	r1, [pc, #120]	; (12c6c <get_partition_size@@Base+0x5e4>)
   12bf2:	blx	87b4 <ioctl@plt>
   12bf6:	subs.w	fp, r0, #0
   12bfa:	bge.n	12c10 <get_partition_size@@Base+0x588>
   12bfc:	ldr	r3, [pc, #128]	; (12c80 <get_partition_size@@Base+0x5f8>)
   12bfe:	movs	r1, #1
   12c00:	ldr	r2, [pc, #140]	; (12c90 <get_partition_size@@Base+0x608>)
   12c02:	ldr	r0, [r7, r3]
   12c04:	add	r2, pc
   12c06:	mov	r3, fp
   12c08:	ldr	r0, [r0, #0]
   12c0a:	blx	8a64 <__fprintf_chk@plt+0x4>
   12c0e:	b.n	12aca <get_partition_size@@Base+0x442>
   12c10:	add.w	r1, sp, #4128	; 0x1020
   12c14:	adds	r1, #8
   12c16:	str	r1, [sp, #20]
   12c18:	mov	r0, r1
   12c1a:	blx	8940 <strlen@plt>
   12c1e:	ldr	r3, [r4, #0]
   12c20:	cmp	r0, r3
   12c22:	mov	r6, r0
   12c24:	bhi.w	12ac6 <get_partition_size@@Base+0x43e>
   12c28:	ldr	r1, [sp, #20]
   12c2a:	mov	r0, r5
   12c2c:	blx	87a8 <strcat@plt+0x4>
   12c30:	ldr	r0, [r4, #0]
   12c32:	subs	r0, r0, r6
   12c34:	str	r0, [r4, #0]
   12c36:	ldrh.w	r6, [sl, #152]	; 0x98
   12c3a:	ldr	r3, [r4, #0]
   12c3c:	cmp	r3, r6
   12c3e:	bcc.w	12ac6 <get_partition_size@@Base+0x43e>
   12c42:	ldr	r1, [sp, #16]
   12c44:	mov	r2, r6
   12c46:	mov	r0, r5
   12c48:	mov.w	fp, #0
   12c4c:	adds	r1, #146	; 0x92
   12c4e:	blx	8b40 <strncat@plt>
   12c52:	ldr	r3, [r4, #0]
   12c54:	subs	r3, r3, r6
   12c56:	str	r3, [r4, #0]
   12c58:	b.n	12aca <get_partition_size@@Base+0x442>
   12c5a:	mov	r0, fp
   12c5c:	add.w	sp, sp, #8192	; 0x2000
   12c60:	add	sp, #36	; 0x24
   12c62:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c66:	nop
   12c68:	str	r4, [sp, #68]	; 0x44
   12c6a:	beq.n	12c6e <get_partition_size@@Base+0x5e6>
   12c6c:	str	r4, [sp, #72]	; 0x48
   12c6e:	beq.n	12c72 <get_partition_size@@Base+0x5ea>
   12c70:	movs	r2, #230	; 0xe6
   12c72:	movs	r5, r0
   12c74:	lsls	r0, r5, #8
   12c76:	movs	r0, r0
   12c78:	movs	r2, #208	; 0xd0
   12c7a:	movs	r5, r0
   12c7c:	movs	r2, #172	; 0xac
   12c7e:	movs	r5, r0
   12c80:	lsls	r0, r7, #8
   12c82:	movs	r0, r0
   12c84:	ldrh	r5, [r5, #56]	; 0x38
   12c86:	movs	r2, r0
   12c88:	ldrh	r5, [r1, #58]	; 0x3a
   12c8a:	movs	r2, r0
   12c8c:	ldrh	r3, [r7, #56]	; 0x38
   12c8e:	movs	r2, r0
   12c90:	ldrh	r7, [r4, #54]	; 0x36
   12c92:	movs	r2, r0

00012c94 <btrfs_subvolid_resolve@@Base>:
   12c94:	push	{r0, r1, r2, r3, r4, lr}
   12c96:	cbz	r2, 12cb4 <btrfs_subvolid_resolve@@Base+0x20>
   12c98:	subs	r2, #1
   12c9a:	movs	r4, #0
   12c9c:	str	r2, [sp, #12]
   12c9e:	strb	r4, [r1, #0]
   12ca0:	strb	r4, [r1, r2]
   12ca2:	ldrd	r2, r3, [sp, #24]
   12ca6:	strd	r2, r3, [sp]
   12caa:	add	r2, sp, #12
   12cac:	bl	12a80 <get_partition_size@@Base+0x3f8>
   12cb0:	add	sp, #16
   12cb2:	pop	{r4, pc}
   12cb4:	mvn.w	r0, #74	; 0x4a
   12cb8:	b.n	12cb0 <btrfs_subvolid_resolve@@Base+0x1c>

00012cba <subvol_uuid_search_add@@Base>:
   12cba:	add.w	ip, r0, #8
   12cbe:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   12cc2:	mov	r5, r0
   12cc4:	mov	r4, r1
   12cc6:	mov	r0, ip
   12cc8:	movs	r6, #0
   12cca:	ldr	r1, [r0, #0]
   12ccc:	cmp	r1, #0
   12cce:	bne.n	12d7e <subvol_uuid_search_add@@Base+0xc4>
   12cd0:	strd	r6, r1, [r4]
   12cd4:	str	r1, [r4, #8]
   12cd6:	mov	r1, ip
   12cd8:	str	r4, [r0, #0]
   12cda:	mov	r0, r4
   12cdc:	bl	1392a <rb_insert_color@@Base>
   12ce0:	add.w	r7, r5, #20
   12ce4:	movs	r2, #0
   12ce6:	mov	r3, r7
   12ce8:	ldr	r6, [r3, #0]
   12cea:	cmp	r6, #0
   12cec:	bne.n	12da6 <subvol_uuid_search_add@@Base+0xec>
   12cee:	add.w	r0, r4, #36	; 0x24
   12cf2:	strd	r2, r6, [r4, #36]	; 0x24
   12cf6:	str	r6, [r4, #44]	; 0x2c
   12cf8:	mov	r1, r7
   12cfa:	str	r0, [r3, #0]
   12cfc:	bl	1392a <rb_insert_color@@Base>
   12d00:	add.w	r8, r4, #56	; 0x38
   12d04:	add.w	r2, r4, #55	; 0x37
   12d08:	add.w	r1, r4, #71	; 0x47
   12d0c:	movs	r3, #0
   12d0e:	ldrb.w	r0, [r2, #1]!
   12d12:	cbnz	r0, 12d16 <subvol_uuid_search_add@@Base+0x5c>
   12d14:	adds	r3, #1
   12d16:	cmp	r2, r1
   12d18:	bne.n	12d0e <subvol_uuid_search_add@@Base+0x54>
   12d1a:	cmp	r3, #16
   12d1c:	beq.n	12d3e <subvol_uuid_search_add@@Base+0x84>
   12d1e:	add.w	r7, r5, #12
   12d22:	movs	r2, #0
   12d24:	mov	r3, r7
   12d26:	ldr	r6, [r3, #0]
   12d28:	cmp	r6, #0
   12d2a:	bne.n	12dca <subvol_uuid_search_add@@Base+0x110>
   12d2c:	add.w	r0, r4, #12
   12d30:	strd	r2, r6, [r4, #12]
   12d34:	str	r6, [r4, #20]
   12d36:	mov	r1, r7
   12d38:	str	r0, [r3, #0]
   12d3a:	bl	1392a <rb_insert_color@@Base>
   12d3e:	add.w	r7, r4, #88	; 0x58
   12d42:	add.w	r2, r4, #87	; 0x57
   12d46:	add.w	r1, r4, #103	; 0x67
   12d4a:	movs	r3, #0
   12d4c:	ldrb.w	r0, [r2, #1]!
   12d50:	cbnz	r0, 12d54 <subvol_uuid_search_add@@Base+0x9a>
   12d52:	adds	r3, #1
   12d54:	cmp	r2, r1
   12d56:	bne.n	12d4c <subvol_uuid_search_add@@Base+0x92>
   12d58:	cmp	r3, #16
   12d5a:	beq.n	12e18 <subvol_uuid_search_add@@Base+0x15e>
   12d5c:	adds	r5, #16
   12d5e:	movs	r2, #0
   12d60:	mov	r3, r5
   12d62:	ldr	r6, [r3, #0]
   12d64:	cmp	r6, #0
   12d66:	bne.n	12df0 <subvol_uuid_search_add@@Base+0x136>
   12d68:	add.w	r0, r4, #24
   12d6c:	strd	r2, r6, [r4, #24]
   12d70:	str	r6, [r4, #32]
   12d72:	mov	r1, r5
   12d74:	str	r0, [r3, #0]
   12d76:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   12d7a:	b.w	1392a <rb_insert_color@@Base>
   12d7e:	ldrd	r0, r7, [r4, #48]	; 0x30
   12d82:	ldr	r6, [r1, #48]	; 0x30
   12d84:	subs	r2, r6, r0
   12d86:	ldr	r0, [r1, #52]	; 0x34
   12d88:	sbc.w	r3, r0, r7
   12d8c:	cmp	r2, #0
   12d8e:	sbcs.w	r0, r3, #0
   12d92:	bge.n	12d9c <subvol_uuid_search_add@@Base+0xe2>
   12d94:	add.w	r0, r1, #8
   12d98:	mov	r6, r1
   12d9a:	b.n	12cca <subvol_uuid_search_add@@Base+0x10>
   12d9c:	orrs.w	r0, r2, r3
   12da0:	beq.n	12ce0 <subvol_uuid_search_add@@Base+0x26>
   12da2:	adds	r0, r1, #4
   12da4:	b.n	12d98 <subvol_uuid_search_add@@Base+0xde>
   12da6:	ldr.w	r1, [r4, #136]	; 0x88
   12daa:	ldr	r0, [r6, #100]	; 0x64
   12dac:	blx	85ac <strcmp@plt>
   12db0:	cmp	r0, #0
   12db2:	mov.w	r3, r0, asr #31
   12db6:	mov	r2, r0
   12db8:	bge.n	12dc2 <subvol_uuid_search_add@@Base+0x108>
   12dba:	add.w	r3, r6, #8
   12dbe:	mov	r2, r6
   12dc0:	b.n	12ce8 <subvol_uuid_search_add@@Base+0x2e>
   12dc2:	orrs	r3, r2
   12dc4:	beq.n	12d00 <subvol_uuid_search_add@@Base+0x46>
   12dc6:	adds	r3, r6, #4
   12dc8:	b.n	12dbe <subvol_uuid_search_add@@Base+0x104>
   12dca:	movs	r2, #16
   12dcc:	add.w	r0, r6, #44	; 0x2c
   12dd0:	mov	r1, r8
   12dd2:	blx	86a0 <memcmp@plt+0x4>
   12dd6:	cmp	r0, #0
   12dd8:	mov.w	r3, r0, asr #31
   12ddc:	mov	r2, r0
   12dde:	bge.n	12de8 <subvol_uuid_search_add@@Base+0x12e>
   12de0:	add.w	r3, r6, #8
   12de4:	mov	r2, r6
   12de6:	b.n	12d26 <subvol_uuid_search_add@@Base+0x6c>
   12de8:	orrs	r3, r2
   12dea:	beq.n	12d3e <subvol_uuid_search_add@@Base+0x84>
   12dec:	adds	r3, r6, #4
   12dee:	b.n	12de4 <subvol_uuid_search_add@@Base+0x12a>
   12df0:	add.w	r0, r6, #64	; 0x40
   12df4:	movs	r2, #16
   12df6:	mov	r1, r7
   12df8:	blx	86a0 <memcmp@plt+0x4>
   12dfc:	asrs	r3, r0, #31
   12dfe:	cbnz	r0, 12e1c <subvol_uuid_search_add@@Base+0x162>
   12e00:	ldrd	r2, r3, [r6, #96]	; 0x60
   12e04:	ldrd	r0, r1, [r4, #120]	; 0x78
   12e08:	cmp	r3, r1
   12e0a:	it	eq
   12e0c:	cmpeq	r2, r0
   12e0e:	bcc.n	12e24 <subvol_uuid_search_add@@Base+0x16a>
   12e10:	cmp	r1, r3
   12e12:	it	eq
   12e14:	cmpeq	r0, r2
   12e16:	bcc.n	12e2c <subvol_uuid_search_add@@Base+0x172>
   12e18:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   12e1c:	cmp	r0, #0
   12e1e:	sbcs.w	r3, r3, #0
   12e22:	bge.n	12e2c <subvol_uuid_search_add@@Base+0x172>
   12e24:	add.w	r3, r6, #8
   12e28:	mov	r2, r6
   12e2a:	b.n	12d62 <subvol_uuid_search_add@@Base+0xa8>
   12e2c:	adds	r3, r6, #4
   12e2e:	b.n	12e28 <subvol_uuid_search_add@@Base+0x16e>

00012e30 <subvol_uuid_search2@@Base>:
   12e30:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e34:	mov	r4, r0
   12e36:	vpush	{d8-d9}
   12e3a:	ldr.w	ip, [pc, #1180]	; 132d8 <subvol_uuid_search2@@Base+0x4a8>
   12e3e:	ldr.w	r0, [pc, #1180]	; 132dc <subvol_uuid_search2@@Base+0x4ac>
   12e42:	add	ip, pc
   12e44:	ldr.w	r5, [pc, #1176]	; 132e0 <subvol_uuid_search2@@Base+0x4b0>
   12e48:	sub.w	sp, sp, #4576	; 0x11e0
   12e4c:	sub	sp, #20
   12e4e:	add	r5, pc
   12e50:	add.w	r1, sp, #4640	; 0x1220
   12e54:	add.w	sl, sp, #48	; 0x30
   12e58:	adds	r1, #8
   12e5a:	strd	r2, r3, [sl, #-8]
   12e5e:	ldr.w	r8, [r1]
   12e62:	add.w	r1, sp, #4640	; 0x1220
   12e66:	adds	r1, #24
   12e68:	ldr.w	r0, [ip, r0]
   12e6c:	vldr	s16, [r1]
   12e70:	add.w	r1, sp, #4640	; 0x1220
   12e74:	adds	r1, #28
   12e76:	ldr.w	fp, [r1]
   12e7a:	add.w	r1, sp, #4576	; 0x11e0
   12e7e:	ldr	r0, [r0, #0]
   12e80:	str	r0, [r1, #12]
   12e82:	mov.w	r0, #0
   12e86:	ldr	r0, [r4, #4]
   12e88:	adds	r1, #12
   12e8a:	cmp	r0, #0
   12e8c:	bne.w	12fbe <subvol_uuid_search2@@Base+0x18e>
   12e90:	cmp.w	fp, #2
   12e94:	mov	r9, r2
   12e96:	str	r3, [sp, #16]
   12e98:	bne.n	12ea2 <subvol_uuid_search2@@Base+0x72>
   12e9a:	ldr	r4, [r4, #16]
   12e9c:	cbnz	r4, 12ec2 <subvol_uuid_search2@@Base+0x92>
   12e9e:	mov	sl, r4
   12ea0:	b.n	12f08 <subvol_uuid_search2@@Base+0xd8>
   12ea2:	cmp.w	fp, #1
   12ea6:	bne.n	12eac <subvol_uuid_search2@@Base+0x7c>
   12ea8:	ldr	r4, [r4, #12]
   12eaa:	b.n	12e9c <subvol_uuid_search2@@Base+0x6c>
   12eac:	cmp.w	fp, #0
   12eb0:	bne.n	12eb6 <subvol_uuid_search2@@Base+0x86>
   12eb2:	ldr	r4, [r4, #8]
   12eb4:	b.n	12e9c <subvol_uuid_search2@@Base+0x6c>
   12eb6:	cmp.w	fp, #3
   12eba:	bne.w	132b4 <subvol_uuid_search2@@Base+0x484>
   12ebe:	ldr	r4, [r4, #20]
   12ec0:	b.n	12e9c <subvol_uuid_search2@@Base+0x6c>
   12ec2:	cmp.w	fp, #2
   12ec6:	bne.n	12f24 <subvol_uuid_search2@@Base+0xf4>
   12ec8:	add.w	r0, r4, #64	; 0x40
   12ecc:	movs	r2, #16
   12ece:	mov	r1, r8
   12ed0:	sub.w	sl, r4, #24
   12ed4:	blx	86a0 <memcmp@plt+0x4>
   12ed8:	asrs	r3, r0, #31
   12eda:	cmp	r0, #0
   12edc:	bne.w	132b8 <subvol_uuid_search2@@Base+0x488>
   12ee0:	add.w	r3, sp, #4640	; 0x1220
   12ee4:	ldrd	r0, r1, [r4, #96]	; 0x60
   12ee8:	adds	r3, #16
   12eea:	ldrd	r2, r3, [r3]
   12eee:	cmp	r1, r3
   12ef0:	it	eq
   12ef2:	cmpeq	r0, r2
   12ef4:	bcc.n	12eb2 <subvol_uuid_search2@@Base+0x82>
   12ef6:	add.w	r3, sp, #4640	; 0x1220
   12efa:	adds	r3, #16
   12efc:	ldrd	r2, r3, [r3]
   12f00:	cmp	r3, r1
   12f02:	it	eq
   12f04:	cmpeq	r2, r0
   12f06:	bcc.n	12f64 <subvol_uuid_search2@@Base+0x134>
   12f08:	ldr	r1, [pc, #984]	; (132e4 <subvol_uuid_search2@@Base+0x4b4>)
   12f0a:	add.w	r3, sp, #4576	; 0x11e0
   12f0e:	ldr	r2, [pc, #972]	; (132dc <subvol_uuid_search2@@Base+0x4ac>)
   12f10:	adds	r3, #12
   12f12:	add	r1, pc
   12f14:	ldr	r2, [r1, r2]
   12f16:	ldr	r1, [r2, #0]
   12f18:	ldr	r2, [r3, #0]
   12f1a:	eors	r1, r2
   12f1c:	beq.w	132c4 <subvol_uuid_search2@@Base+0x494>
   12f20:	blx	8708 <__stack_chk_fail@plt>
   12f24:	cmp.w	fp, #1
   12f28:	bne.n	12f40 <subvol_uuid_search2@@Base+0x110>
   12f2a:	add.w	r0, r4, #44	; 0x2c
   12f2e:	movs	r2, #16
   12f30:	mov	r1, r8
   12f32:	sub.w	sl, r4, #12
   12f36:	blx	86a0 <memcmp@plt+0x4>
   12f3a:	asrs	r7, r0, #31
   12f3c:	mov	r6, r0
   12f3e:	b.n	12f56 <subvol_uuid_search2@@Base+0x126>
   12f40:	cmp.w	fp, #0
   12f44:	bne.n	12f68 <subvol_uuid_search2@@Base+0x138>
   12f46:	ldrd	r3, r2, [r4, #48]	; 0x30
   12f4a:	mov	sl, r4
   12f4c:	subs.w	r6, r3, r9
   12f50:	ldr	r3, [sp, #16]
   12f52:	sbc.w	r7, r2, r3
   12f56:	cmp	r6, #0
   12f58:	sbcs.w	r3, r7, #0
   12f5c:	blt.n	12eb2 <subvol_uuid_search2@@Base+0x82>
   12f5e:	orrs.w	r3, r6, r7
   12f62:	beq.n	12f08 <subvol_uuid_search2@@Base+0xd8>
   12f64:	ldr	r4, [r4, #4]
   12f66:	b.n	12e9c <subvol_uuid_search2@@Base+0x6c>
   12f68:	cmp.w	fp, #3
   12f6c:	bne.n	12f7e <subvol_uuid_search2@@Base+0x14e>
   12f6e:	vmov	r1, s16
   12f72:	sub.w	sl, r4, #36	; 0x24
   12f76:	ldr	r0, [r4, #100]	; 0x64
   12f78:	blx	85ac <strcmp@plt>
   12f7c:	b.n	12f3a <subvol_uuid_search2@@Base+0x10a>
   12f7e:	ldr	r3, [pc, #872]	; (132e8 <subvol_uuid_search2@@Base+0x4b8>)
   12f80:	add	r4, sp, #488	; 0x1e8
   12f82:	ldr	r2, [pc, #872]	; (132ec <subvol_uuid_search2@@Base+0x4bc>)
   12f84:	movs	r1, #1
   12f86:	ldr	r0, [r5, r3]
   12f88:	add	r2, pc
   12f8a:	ldr	r3, [pc, #868]	; (132f0 <subvol_uuid_search2@@Base+0x4c0>)
   12f8c:	str	r1, [sp, #12]
   12f8e:	add	r3, pc
   12f90:	str	r3, [sp, #8]
   12f92:	ldr	r3, [pc, #864]	; (132f4 <subvol_uuid_search2@@Base+0x4c4>)
   12f94:	add	r3, pc
   12f96:	str	r3, [sp, #4]
   12f98:	mov.w	r3, #402	; 0x192
   12f9c:	str	r3, [sp, #0]
   12f9e:	ldr	r3, [pc, #856]	; (132f8 <subvol_uuid_search2@@Base+0x4c8>)
   12fa0:	ldr	r0, [r0, #0]
   12fa2:	add	r3, pc
   12fa4:	blx	8a64 <__fprintf_chk@plt+0x4>
   12fa8:	movs	r1, #16
   12faa:	mov	r0, r4
   12fac:	blx	88bc <backtrace@plt>
   12fb0:	movs	r2, #2
   12fb2:	mov	r1, r0
   12fb4:	mov	r0, r4
   12fb6:	blx	8bcc <backtrace_symbols_fd@plt>
   12fba:	blx	8b84 <abort@plt>
   12fbe:	cmp.w	fp, #3
   12fc2:	bhi.w	132a8 <subvol_uuid_search2@@Base+0x478>
   12fc6:	tbb	[pc, fp]
   12fca:	ldmia	r3, {r2, r3}
   12fcc:	bcs.n	12fd4 <subvol_uuid_search2@@Base+0x1a4>
   12fce:	ldr	r0, [r4, #0]
   12fd0:	sub.w	r2, sl, #8
   12fd4:	mov	r1, r8
   12fd6:	bl	17e36 <btrfs_lookup_uuid_received_subvol_item@@Base>
   12fda:	mov	r6, r0
   12fdc:	cmp	r6, #0
   12fde:	bne.w	13234 <subvol_uuid_search2@@Base+0x404>
   12fe2:	ldr	r3, [r4, #0]
   12fe4:	add	r6, sp, #488	; 0x1e8
   12fe6:	add	r7, sp, #496	; 0x1f0
   12fe8:	mov.w	r8, #4096	; 0x1000
   12fec:	movs	r1, #0
   12fee:	mov	r0, r6
   12ff0:	vmov	s17, r3
   12ff4:	ldrd	r2, r3, [sl, #-8]
   12ff8:	strd	r2, r3, [sp, #16]
   12ffc:	mov	r2, r8
   12ffe:	blx	89bc <memset@plt+0x4>
   13002:	movs	r2, #1
   13004:	movs	r3, #0
   13006:	strd	r2, r3, [r7, #-8]
   1300a:	ldrd	r2, r3, [sp, #16]
   1300e:	movs	r7, #0
   13010:	str.w	r8, [r6, #64]	; 0x40
   13014:	strd	r2, r3, [r6, #8]
   13018:	strd	r2, r3, [r6, #16]
   1301c:	mov.w	r2, #4294967295	; 0xffffffff
   13020:	movs	r3, #132	; 0x84
   13022:	strd	r3, r3, [r6, #56]	; 0x38
   13026:	mov.w	r3, #4294967295	; 0xffffffff
   1302a:	strd	r2, r3, [r6, #32]
   1302e:	strd	r2, r3, [r6, #48]	; 0x30
   13032:	add	r2, sp, #48	; 0x30
   13034:	mov	r3, r7
   13036:	vmov	s18, r2
   1303a:	vmov	r0, s17
   1303e:	mov	r2, r6
   13040:	ldr	r1, [pc, #656]	; (132d4 <subvol_uuid_search2@@Base+0x4a4>)
   13042:	str	r3, [sp, #28]
   13044:	blx	87b4 <ioctl@plt>
   13048:	ldr	r3, [sp, #28]
   1304a:	cmp	r0, #0
   1304c:	bge.w	131ae <subvol_uuid_search2@@Base+0x37e>
   13050:	ldr	r3, [pc, #660]	; (132e8 <subvol_uuid_search2@@Base+0x4b8>)
   13052:	movs	r1, #1
   13054:	ldr	r2, [pc, #676]	; (132fc <subvol_uuid_search2@@Base+0x4cc>)
   13056:	ldr	r3, [r5, r3]
   13058:	add	r2, pc
   1305a:	ldr	r0, [r3, #0]
   1305c:	blx	8a64 <__fprintf_chk@plt+0x4>
   13060:	movw	r3, #439	; 0x1b7
   13064:	cmp	r7, r3
   13066:	add	r5, sp, #48	; 0x30
   13068:	bne.n	1307e <subvol_uuid_search2@@Base+0x24e>
   1306a:	ldrd	r2, r3, [r5, #160]	; 0xa0
   1306e:	ldr.w	r1, [r5, #243]	; 0xf3
   13072:	ldr.w	r0, [r5, #239]	; 0xef
   13076:	cmp	r3, r1
   13078:	it	eq
   1307a:	cmpeq	r2, r0
   1307c:	beq.n	1308a <subvol_uuid_search2@@Base+0x25a>
   1307e:	add.w	r0, r5, #239	; 0xef
   13082:	movs	r2, #200	; 0xc8
   13084:	movs	r1, #0
   13086:	blx	89bc <memset@plt+0x4>
   1308a:	movs	r1, #144	; 0x90
   1308c:	movs	r0, #1
   1308e:	blx	8588 <calloc@plt+0x4>
   13092:	mov	sl, r0
   13094:	cmp	r0, #0
   13096:	beq.w	132ae <subvol_uuid_search2@@Base+0x47e>
   1309a:	ldrd	r6, r7, [r5, #-8]
   1309e:	add.w	r2, r5, #247	; 0xf7
   130a2:	add.w	lr, r0, #56	; 0x38
   130a6:	addw	r8, r5, #263	; 0x107
   130aa:	strd	r6, r7, [r0, #48]	; 0x30
   130ae:	ldr	r0, [r2, #0]
   130b0:	adds	r2, #8
   130b2:	ldr.w	r1, [r2, #-4]
   130b6:	cmp	r2, r8
   130b8:	mov	ip, lr
   130ba:	stmia.w	ip!, {r0, r1}
   130be:	mov	lr, ip
   130c0:	bne.n	130ae <subvol_uuid_search2@@Base+0x27e>
   130c2:	addw	r2, r5, #279	; 0x117
   130c6:	add.w	lr, sl, #88	; 0x58
   130ca:	addw	r8, r5, #295	; 0x127
   130ce:	ldr	r0, [r2, #0]
   130d0:	adds	r2, #8
   130d2:	ldr.w	r1, [r2, #-4]
   130d6:	cmp	r2, r8
   130d8:	mov	ip, lr
   130da:	stmia.w	ip!, {r0, r1}
   130de:	mov	lr, ip
   130e0:	bne.n	130ce <subvol_uuid_search2@@Base+0x29e>
   130e2:	addw	r2, r5, #263	; 0x107
   130e6:	add.w	lr, sl, #72	; 0x48
   130ea:	addw	r8, r5, #279	; 0x117
   130ee:	ldr	r0, [r2, #0]
   130f0:	adds	r2, #8
   130f2:	ldr.w	r1, [r2, #-4]
   130f6:	cmp	r2, r8
   130f8:	mov	ip, lr
   130fa:	stmia.w	ip!, {r0, r1}
   130fe:	mov	lr, ip
   13100:	bne.n	130ee <subvol_uuid_search2@@Base+0x2be>
   13102:	ldr.w	r1, [r5, #295]	; 0x127
   13106:	cmp.w	fp, #3
   1310a:	ldr.w	r2, [r5, #299]	; 0x12b
   1310e:	strd	r1, r2, [sl, #104]	; 0x68
   13112:	ldr.w	r1, [r5, #303]	; 0x12f
   13116:	ldr.w	r2, [r5, #307]	; 0x133
   1311a:	strd	r1, r2, [sl, #112]	; 0x70
   1311e:	ldr.w	r1, [r5, #311]	; 0x137
   13122:	ldr.w	r2, [r5, #315]	; 0x13b
   13126:	strd	r1, r2, [sl, #120]	; 0x78
   1312a:	ldr.w	r1, [r5, #319]	; 0x13f
   1312e:	ldr.w	r2, [r5, #323]	; 0x143
   13132:	strd	r1, r2, [sl, #128]	; 0x80
   13136:	bne.w	1327c <subvol_uuid_search2@@Base+0x44c>
   1313a:	vmov	r0, s16
   1313e:	blx	86f0 <strdup@plt+0x4>
   13142:	str.w	r0, [sl, #136]	; 0x88
   13146:	cmp	r0, #0
   13148:	bne.w	12f08 <subvol_uuid_search2@@Base+0xd8>
   1314c:	mvn.w	r6, #11
   13150:	ldr.w	r0, [sl, #136]	; 0x88
   13154:	blx	8620 <free@plt+0x4>
   13158:	mov	r0, sl
   1315a:	blx	8620 <free@plt+0x4>
   1315e:	b.n	13234 <subvol_uuid_search2@@Base+0x404>
   13160:	ldr	r0, [r4, #0]
   13162:	sub.w	r2, sl, #8
   13166:	mov	r1, r8
   13168:	bl	17e30 <btrfs_lookup_uuid_subvol_item@@Base>
   1316c:	b.n	12fda <subvol_uuid_search2@@Base+0x1aa>
   1316e:	vmov	r1, s16
   13172:	movs	r2, #0
   13174:	ldr	r0, [r4, #0]
   13176:	blx	8958 <openat64@plt>
   1317a:	subs	r7, r0, #0
   1317c:	bge.n	1319c <subvol_uuid_search2@@Base+0x36c>
   1317e:	blx	897c <__errno_location@plt>
   13182:	ldr	r3, [pc, #356]	; (132e8 <subvol_uuid_search2@@Base+0x4b8>)
   13184:	ldr	r2, [pc, #376]	; (13300 <subvol_uuid_search2@@Base+0x4d0>)
   13186:	movs	r1, #1
   13188:	add	r2, pc
   1318a:	ldr	r6, [r0, #0]
   1318c:	ldr	r0, [r5, r3]
   1318e:	vmov	r3, s16
   13192:	negs	r6, r6
   13194:	ldr	r0, [r0, #0]
   13196:	blx	8a64 <__fprintf_chk@plt+0x4>
   1319a:	b.n	12fdc <subvol_uuid_search2@@Base+0x1ac>
   1319c:	sub.w	r1, sl, #8
   131a0:	bl	154c0 <btrfs_list_get_path_rootid@@Base>
   131a4:	mov	r6, r0
   131a6:	mov	r0, r7
   131a8:	blx	8b9c <close@plt>
   131ac:	b.n	12fdc <subvol_uuid_search2@@Base+0x1ac>
   131ae:	ldr	r2, [r6, #64]	; 0x40
   131b0:	str	r2, [sp, #32]
   131b2:	cbz	r2, 13206 <subvol_uuid_search2@@Base+0x3d6>
   131b4:	add	r2, sp, #592	; 0x250
   131b6:	mov.w	sl, #0
   131ba:	str	r2, [sp, #36]	; 0x24
   131bc:	str.w	sl, [sp, #28]
   131c0:	ldr	r1, [sp, #28]
   131c2:	ldr	r2, [sp, #36]	; 0x24
   131c4:	add.w	ip, r1, #32
   131c8:	add	r2, r1
   131ca:	ldr.w	r8, [r2, #28]
   131ce:	ldr	r0, [r2, #8]
   131d0:	add.w	r1, r8, ip
   131d4:	str	r1, [sp, #28]
   131d6:	ldr	r1, [r2, #12]
   131d8:	ldrd	r8, r9, [sp, #16]
   131dc:	strd	r0, r1, [r6, #8]
   131e0:	ldr	r1, [r2, #24]
   131e2:	str	r1, [r6, #56]	; 0x38
   131e4:	ldr	r0, [r2, #16]
   131e6:	ldr	r1, [r2, #20]
   131e8:	strd	r0, r1, [r6, #24]
   131ec:	ldr	r1, [r2, #12]
   131ee:	ldr	r0, [r2, #8]
   131f0:	cmp	r9, r1
   131f2:	it	eq
   131f4:	cmpeq	r8, r0
   131f6:	bcs.n	13212 <subvol_uuid_search2@@Base+0x3e2>
   131f8:	ldrd	r1, r2, [r6, #24]
   131fc:	adds	r0, r2, #1
   131fe:	it	eq
   13200:	cmpeq.w	r1, #4294967295	; 0xffffffff
   13204:	bne.n	13258 <subvol_uuid_search2@@Base+0x428>
   13206:	cmp	r3, #0
   13208:	bne.w	13060 <subvol_uuid_search2@@Base+0x230>
   1320c:	mvn.w	r6, #1
   13210:	b.n	13234 <subvol_uuid_search2@@Base+0x404>
   13212:	bne.n	1324c <subvol_uuid_search2@@Base+0x41c>
   13214:	ldr	r1, [r2, #24]
   13216:	cmp	r1, #132	; 0x84
   13218:	bne.n	1324c <subvol_uuid_search2@@Base+0x41c>
   1321a:	ldr	r7, [r2, #28]
   1321c:	cmp.w	r7, #440	; 0x1b8
   13220:	bcc.n	13238 <subvol_uuid_search2@@Base+0x408>
   13222:	ldr	r3, [pc, #196]	; (132e8 <subvol_uuid_search2@@Base+0x4b8>)
   13224:	mvn.w	r6, #74	; 0x4a
   13228:	ldr	r0, [pc, #216]	; (13304 <subvol_uuid_search2@@Base+0x4d4>)
   1322a:	ldr	r3, [r5, r3]
   1322c:	add	r0, pc
   1322e:	ldr	r1, [r3, #0]
   13230:	blx	8b6c <fputs@plt+0x4>
   13234:	mov	sl, r6
   13236:	b.n	12f08 <subvol_uuid_search2@@Base+0xd8>
   13238:	ldr	r1, [sp, #36]	; 0x24
   1323a:	movw	r3, #439	; 0x1b7
   1323e:	vmov	r0, s18
   13242:	mov	r2, r7
   13244:	add	r1, ip
   13246:	blx	8798 <__memcpy_chk@plt>
   1324a:	movs	r3, #1
   1324c:	ldr	r2, [sp, #32]
   1324e:	add.w	sl, sl, #1
   13252:	cmp	r2, sl
   13254:	bne.n	131c0 <subvol_uuid_search2@@Base+0x390>
   13256:	b.n	131f8 <subvol_uuid_search2@@Base+0x3c8>
   13258:	adds	r0, r1, #1
   1325a:	adc.w	r2, r2, #0
   1325e:	strd	r0, r2, [r6, #24]
   13262:	ldr	r2, [r6, #56]	; 0x38
   13264:	cmp	r2, #132	; 0x84
   13266:	bne.n	13206 <subvol_uuid_search2@@Base+0x3d6>
   13268:	ldrd	r0, r1, [r6, #8]
   1326c:	ldrd	r8, r9, [sp, #16]
   13270:	cmp	r9, r1
   13272:	it	eq
   13274:	cmpeq	r8, r0
   13276:	beq.w	1303a <subvol_uuid_search2@@Base+0x20a>
   1327a:	b.n	13206 <subvol_uuid_search2@@Base+0x3d6>
   1327c:	mov.w	r0, #4096	; 0x1000
   13280:	blx	8870 <malloc@plt+0x4>
   13284:	mov	r1, r0
   13286:	str.w	r0, [sl, #136]	; 0x88
   1328a:	cmp	r0, #0
   1328c:	beq.w	1314c <subvol_uuid_search2@@Base+0x31c>
   13290:	strd	r6, r7, [sp]
   13294:	mov.w	r2, #4096	; 0x1000
   13298:	ldr	r0, [r4, #0]
   1329a:	bl	12c94 <btrfs_subvolid_resolve@@Base>
   1329e:	mov	r6, r0
   132a0:	cmp	r0, #0
   132a2:	beq.w	12f08 <subvol_uuid_search2@@Base+0xd8>
   132a6:	b.n	13150 <subvol_uuid_search2@@Base+0x320>
   132a8:	mvn.w	r6, #21
   132ac:	b.n	13234 <subvol_uuid_search2@@Base+0x404>
   132ae:	mvn.w	r6, #11
   132b2:	b.n	13234 <subvol_uuid_search2@@Base+0x404>
   132b4:	mov	sl, r0
   132b6:	b.n	12f08 <subvol_uuid_search2@@Base+0xd8>
   132b8:	cmp	r0, #0
   132ba:	sbcs.w	r3, r3, #0
   132be:	bge.w	12f64 <subvol_uuid_search2@@Base+0x134>
   132c2:	b.n	12eb2 <subvol_uuid_search2@@Base+0x82>
   132c4:	mov	r0, sl
   132c6:	add.w	sp, sp, #4576	; 0x11e0
   132ca:	add	sp, #20
   132cc:	vpop	{d8-d9}
   132d0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132d4:	str	r4, [sp, #68]	; 0x44
   132d6:	beq.n	132da <subvol_uuid_search2@@Base+0x4aa>
   132d8:	subs	r6, r7, #4
   132da:	movs	r5, r0
   132dc:	lsls	r0, r5, #8
   132de:	movs	r0, r0
   132e0:	subs	r2, r6, #4
   132e2:	movs	r5, r0
   132e4:	subs	r6, r5, #1
   132e6:	movs	r5, r0
   132e8:	lsls	r0, r7, #8
   132ea:	movs	r0, r0
   132ec:	ldr	r2, [r3, #112]	; 0x70
   132ee:	movs	r2, r0
   132f0:	add	r7, sp, #444	; 0x1bc
   132f2:	movs	r2, r0
   132f4:	ldrh	r3, [r1, #36]	; 0x24
   132f6:	movs	r2, r0
   132f8:	ldrh	r0, [r7, #26]
   132fa:	movs	r2, r0
   132fc:	ldrh	r2, [r5, #22]
   132fe:	movs	r2, r0
   13300:	ldrh	r7, [r3, #12]
   13302:	movs	r2, r0
   13304:	ldrh	r4, [r7, #8]
   13306:	movs	r2, r0

00013308 <subvol_uuid_search@@Base>:
   13308:	push	{r4, r5, lr}
   1330a:	sub	sp, #28
   1330c:	ldr	r1, [sp, #60]	; 0x3c
   1330e:	ldrd	r4, r5, [sp, #48]	; 0x30
   13312:	str	r1, [sp, #20]
   13314:	ldr	r1, [sp, #56]	; 0x38
   13316:	strd	r4, r5, [sp, #8]
   1331a:	str	r1, [sp, #16]
   1331c:	ldr	r1, [sp, #40]	; 0x28
   1331e:	str	r1, [sp, #0]
   13320:	bl	12e30 <subvol_uuid_search2@@Base>
   13324:	cmn.w	r0, #4096	; 0x1000
   13328:	it	hi
   1332a:	movhi	r0, #0
   1332c:	add	sp, #28
   1332e:	pop	{r4, r5, pc}

00013330 <subvol_uuid_search_init@@Base>:
   13330:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13334:	mov	r9, r1
   13336:	vpush	{d8}
   1333a:	movs	r6, #0
   1333c:	ldr	r1, [pc, #820]	; (13674 <subvol_uuid_search_init@@Base+0x344>)
   1333e:	mov.w	r5, #4096	; 0x1000
   13342:	ldr	r2, [pc, #820]	; (13678 <subvol_uuid_search_init@@Base+0x348>)
   13344:	mov.w	sl, #4294967295	; 0xffffffff
   13348:	add	r1, pc
   1334a:	ldr	r3, [pc, #816]	; (1367c <subvol_uuid_search_init@@Base+0x34c>)
   1334c:	sub.w	sp, sp, #4608	; 0x1200
   13350:	vmov	s16, r0
   13354:	sub	sp, #4
   13356:	add	r3, pc
   13358:	add	r4, sp, #504	; 0x1f8
   1335a:	add	r7, sp, #512	; 0x200
   1335c:	str	r3, [sp, #12]
   1335e:	add.w	r3, sp, #4576	; 0x11e0
   13362:	ldr	r2, [r1, r2]
   13364:	add	r0, sp, #64	; 0x40
   13366:	movs	r1, #0
   13368:	adds	r3, #28
   1336a:	ldr	r2, [r2, #0]
   1336c:	str	r2, [r3, #0]
   1336e:	mov.w	r2, #0
   13372:	movw	r2, #439	; 0x1b7
   13376:	blx	89bc <memset@plt+0x4>
   1337a:	mov	r2, r5
   1337c:	mov	r1, r6
   1337e:	vstr	s16, [r9]
   13382:	mov	r0, r4
   13384:	strd	r6, r6, [r9, #8]
   13388:	strd	r6, r6, [r9, #16]
   1338c:	mov.w	fp, #4294967295	; 0xffffffff
   13390:	blx	89bc <memset@plt+0x4>
   13394:	movs	r2, #1
   13396:	movs	r3, #0
   13398:	vmov	r0, s16
   1339c:	strd	r2, r3, [r7, #-8]
   133a0:	movs	r2, #9
   133a2:	movs	r3, #0
   133a4:	ldr	r1, [pc, #712]	; (13670 <subvol_uuid_search_init@@Base+0x340>)
   133a6:	strd	r2, r3, [r4, #8]
   133aa:	movs	r7, #1
   133ac:	strd	r2, r3, [r4, #16]
   133b0:	mov	r2, r4
   133b2:	movs	r3, #132	; 0x84
   133b4:	strd	sl, fp, [r4, #32]
   133b8:	strd	r3, r3, [r4, #56]	; 0x38
   133bc:	strd	sl, fp, [r4, #48]	; 0x30
   133c0:	str	r7, [r4, #64]	; 0x40
   133c2:	blx	87b4 <ioctl@plt>
   133c6:	subs	r3, r0, #0
   133c8:	str	r3, [sp, #8]
   133ca:	blt.n	13454 <subvol_uuid_search_init@@Base+0x124>
   133cc:	ldr.w	r8, [r4, #64]	; 0x40
   133d0:	cmp.w	r8, #0
   133d4:	beq.n	133f8 <subvol_uuid_search_init@@Base+0xc8>
   133d6:	str.w	r7, [r9, #4]
   133da:	str	r6, [sp, #8]
   133dc:	ldr	r1, [pc, #672]	; (13680 <subvol_uuid_search_init@@Base+0x350>)
   133de:	add.w	r3, sp, #4576	; 0x11e0
   133e2:	ldr	r2, [pc, #660]	; (13678 <subvol_uuid_search_init@@Base+0x348>)
   133e4:	adds	r3, #28
   133e6:	add	r1, pc
   133e8:	ldr	r2, [r1, r2]
   133ea:	ldr	r1, [r2, #0]
   133ec:	ldr	r2, [r3, #0]
   133ee:	eors	r1, r2
   133f0:	beq.w	1365e <subvol_uuid_search_init@@Base+0x32e>
   133f4:	blx	8708 <__stack_chk_fail@plt>
   133f8:	mov	r2, r5
   133fa:	mov	r1, r8
   133fc:	mov	r0, r4
   133fe:	blx	89bc <memset@plt+0x4>
   13402:	str	r5, [r4, #64]	; 0x40
   13404:	mov	r5, r8
   13406:	movs	r3, #0
   13408:	movs	r2, #1
   1340a:	movs	r1, #132	; 0x84
   1340c:	strd	r2, r3, [r4]
   13410:	movs	r3, #144	; 0x90
   13412:	strd	sl, fp, [r4, #16]
   13416:	strd	r1, r3, [r4, #56]	; 0x38
   1341a:	add	r3, sp, #608	; 0x260
   1341c:	strd	sl, fp, [r4, #32]
   13420:	strd	sl, fp, [r4, #48]	; 0x30
   13424:	str.w	r8, [sp, #52]	; 0x34
   13428:	strd	r8, r8, [sp, #28]
   1342c:	strd	r8, r8, [sp, #44]	; 0x2c
   13430:	strd	r8, r8, [sp, #36]	; 0x24
   13434:	str	r3, [sp, #60]	; 0x3c
   13436:	vmov	r0, s16
   1343a:	mov	r2, r4
   1343c:	ldr	r1, [pc, #560]	; (13670 <subvol_uuid_search_init@@Base+0x340>)
   1343e:	blx	87b4 <ioctl@plt>
   13442:	subs	r3, r0, #0
   13444:	str	r3, [sp, #8]
   13446:	bge.n	13468 <subvol_uuid_search_init@@Base+0x138>
   13448:	ldr	r2, [sp, #12]
   1344a:	ldr	r3, [pc, #568]	; (13684 <subvol_uuid_search_init@@Base+0x354>)
   1344c:	ldr	r3, [r2, r3]
   1344e:	ldr	r2, [pc, #568]	; (13688 <subvol_uuid_search_init@@Base+0x358>)
   13450:	add	r2, pc
   13452:	b.n	1345e <subvol_uuid_search_init@@Base+0x12e>
   13454:	ldr	r2, [sp, #12]
   13456:	ldr	r3, [pc, #556]	; (13684 <subvol_uuid_search_init@@Base+0x354>)
   13458:	ldr	r3, [r2, r3]
   1345a:	ldr	r2, [pc, #560]	; (1368c <subvol_uuid_search_init@@Base+0x35c>)
   1345c:	add	r2, pc
   1345e:	ldr	r0, [r3, #0]
   13460:	movs	r1, #1
   13462:	blx	8a64 <__fprintf_chk@plt+0x4>
   13466:	b.n	133dc <subvol_uuid_search_init@@Base+0xac>
   13468:	ldr	r3, [r4, #64]	; 0x40
   1346a:	cmp	r3, #0
   1346c:	beq.n	133dc <subvol_uuid_search_init@@Base+0xac>
   1346e:	mov.w	fp, #0
   13472:	add	r7, sp, #64	; 0x40
   13474:	mov	sl, fp
   13476:	addw	r3, r7, #263	; 0x107
   1347a:	str	r3, [sp, #56]	; 0x38
   1347c:	ldr	r3, [r4, #64]	; 0x40
   1347e:	cmp	r3, sl
   13480:	bhi.n	134a4 <subvol_uuid_search_init@@Base+0x174>
   13482:	ldrd	r0, r1, [r4, #24]
   13486:	mov.w	r3, #4096	; 0x1000
   1348a:	str	r3, [r4, #64]	; 0x40
   1348c:	adds	r2, r1, #1
   1348e:	it	eq
   13490:	cmpeq.w	r0, #4294967295	; 0xffffffff
   13494:	beq.w	13636 <subvol_uuid_search_init@@Base+0x306>
   13498:	adds	r2, r0, #1
   1349a:	adc.w	r3, r1, #0
   1349e:	strd	r2, r3, [r4, #24]
   134a2:	b.n	13436 <subvol_uuid_search_init@@Base+0x106>
   134a4:	ldr	r3, [sp, #60]	; 0x3c
   134a6:	add.w	r6, r3, fp
   134aa:	add.w	r3, fp, #32
   134ae:	str	r3, [sp, #24]
   134b0:	ldr	r3, [r6, #12]
   134b2:	ldr	r2, [r6, #8]
   134b4:	cmp	r3, #0
   134b6:	it	eq
   134b8:	cmpeq	r2, #5
   134ba:	beq.n	134dc <subvol_uuid_search_init@@Base+0x1ac>
   134bc:	subs.w	r1, r2, #256	; 0x100
   134c0:	str	r1, [sp, #16]
   134c2:	adc.w	r1, r3, #4294967295	; 0xffffffff
   134c6:	str	r1, [sp, #20]
   134c8:	ldrd	fp, ip, [sp, #16]
   134cc:	mov.w	r1, #4294967295	; 0xffffffff
   134d0:	mvn.w	r0, #510	; 0x1fe
   134d4:	cmp	ip, r1
   134d6:	it	eq
   134d8:	cmpeq	fp, r0
   134da:	bcs.n	13532 <subvol_uuid_search_init@@Base+0x202>
   134dc:	ldr	r1, [r6, #24]
   134de:	cmp	r1, #132	; 0x84
   134e0:	bne.n	13554 <subvol_uuid_search_init@@Base+0x224>
   134e2:	ldr	r3, [r6, #28]
   134e4:	cmp.w	r3, #438	; 0x1b6
   134e8:	bls.w	13630 <subvol_uuid_search_init@@Base+0x300>
   134ec:	ldr	r3, [sp, #24]
   134ee:	add.w	r8, sp, #608	; 0x260
   134f2:	movw	r2, #439	; 0x1b7
   134f6:	mov	r0, r7
   134f8:	add	r8, r3
   134fa:	mov	r1, r8
   134fc:	blx	866c <memcpy@plt+0x4>
   13500:	ldr.w	r3, [r8, #295]	; 0x127
   13504:	ldr.w	r5, [r8, #319]	; 0x13f
   13508:	str	r3, [sp, #36]	; 0x24
   1350a:	ldr.w	r3, [r8, #299]	; 0x12b
   1350e:	str	r3, [sp, #40]	; 0x28
   13510:	ldr.w	r3, [r8, #303]	; 0x12f
   13514:	str	r3, [sp, #44]	; 0x2c
   13516:	ldr.w	r3, [r8, #307]	; 0x133
   1351a:	str	r3, [sp, #48]	; 0x30
   1351c:	ldr.w	r3, [r8, #311]	; 0x137
   13520:	str	r3, [sp, #28]
   13522:	ldr.w	r3, [r8, #315]	; 0x13b
   13526:	str	r3, [sp, #32]
   13528:	ldr.w	r3, [r8, #323]	; 0x143
   1352c:	mov.w	r8, #1
   13530:	str	r3, [sp, #52]	; 0x34
   13532:	ldr	r3, [r6, #28]
   13534:	add.w	sl, sl, #1
   13538:	ldr	r2, [sp, #24]
   1353a:	add	r2, r3
   1353c:	ldr	r3, [r6, #12]
   1353e:	mov	fp, r2
   13540:	ldr	r2, [r6, #8]
   13542:	strd	r2, r3, [r4, #8]
   13546:	ldr	r3, [r6, #20]
   13548:	ldr	r2, [r6, #16]
   1354a:	strd	r2, r3, [r4, #24]
   1354e:	ldr	r3, [r6, #24]
   13550:	str	r3, [r4, #56]	; 0x38
   13552:	b.n	1347c <subvol_uuid_search_init@@Base+0x14c>
   13554:	cmp.w	r8, #0
   13558:	beq.n	13532 <subvol_uuid_search_init@@Base+0x202>
   1355a:	vmov	r0, s16
   1355e:	bl	15a18 <btrfs_list_path_for_root@@Base>
   13562:	mov	r8, r0
   13564:	cbnz	r0, 13570 <subvol_uuid_search_init@@Base+0x240>
   13566:	ldr	r0, [pc, #296]	; (13690 <subvol_uuid_search_init@@Base+0x360>)
   13568:	add	r0, pc
   1356a:	blx	86f0 <strdup@plt+0x4>
   1356e:	mov	r8, r0
   13570:	cmn.w	r8, #4096	; 0x1000
   13574:	bls.n	13596 <subvol_uuid_search_init@@Base+0x266>
   13576:	ldr	r2, [sp, #12]
   13578:	ldr	r3, [pc, #264]	; (13684 <subvol_uuid_search_init@@Base+0x354>)
   1357a:	ldr	r1, [r6, #8]
   1357c:	str.w	r8, [sp, #8]
   13580:	ldr	r3, [r2, r3]
   13582:	ldr	r2, [r6, #12]
   13584:	strd	r1, r2, [sp]
   13588:	movs	r1, #1
   1358a:	ldr	r2, [pc, #264]	; (13694 <subvol_uuid_search_init@@Base+0x364>)
   1358c:	ldr	r0, [r3, #0]
   1358e:	add	r2, pc
   13590:	blx	8a64 <__fprintf_chk@plt+0x4>
   13594:	b.n	133dc <subvol_uuid_search_init@@Base+0xac>
   13596:	movs	r1, #144	; 0x90
   13598:	movs	r0, #1
   1359a:	blx	8588 <calloc@plt+0x4>
   1359e:	ldr	r2, [r6, #12]
   135a0:	ldr	r1, [r6, #8]
   135a2:	add.w	lr, r0, #56	; 0x38
   135a6:	strd	r1, r2, [r0, #48]	; 0x30
   135aa:	add.w	r2, r7, #247	; 0xf7
   135ae:	mov	r3, r0
   135b0:	ldr	r1, [r2, #4]
   135b2:	mov	ip, lr
   135b4:	ldr	r0, [r2, #0]
   135b6:	adds	r2, #8
   135b8:	stmia.w	ip!, {r0, r1}
   135bc:	mov	lr, ip
   135be:	ldr	r1, [sp, #56]	; 0x38
   135c0:	cmp	r2, r1
   135c2:	bne.n	135b0 <subvol_uuid_search_init@@Base+0x280>
   135c4:	addw	r1, r7, #279	; 0x117
   135c8:	addw	r2, r7, #263	; 0x107
   135cc:	add.w	lr, r3, #72	; 0x48
   135d0:	mov	fp, r1
   135d2:	ldr	r0, [r2, #0]
   135d4:	adds	r2, #8
   135d6:	ldr.w	r1, [r2, #-4]
   135da:	cmp	r2, fp
   135dc:	mov	ip, lr
   135de:	stmia.w	ip!, {r0, r1}
   135e2:	mov	lr, ip
   135e4:	bne.n	135d2 <subvol_uuid_search_init@@Base+0x2a2>
   135e6:	addw	r1, r7, #295	; 0x127
   135ea:	addw	r2, r7, #279	; 0x117
   135ee:	add.w	lr, r3, #88	; 0x58
   135f2:	mov	fp, r1
   135f4:	ldr	r0, [r2, #0]
   135f6:	adds	r2, #8
   135f8:	ldr.w	r1, [r2, #-4]
   135fc:	cmp	r2, fp
   135fe:	mov	ip, lr
   13600:	stmia.w	ip!, {r0, r1}
   13604:	mov	lr, ip
   13606:	bne.n	135f4 <subvol_uuid_search_init@@Base+0x2c4>
   13608:	ldr	r2, [sp, #36]	; 0x24
   1360a:	mov	r1, r3
   1360c:	mov	r0, r9
   1360e:	str	r2, [r3, #104]	; 0x68
   13610:	ldr	r2, [sp, #40]	; 0x28
   13612:	str	r2, [r3, #108]	; 0x6c
   13614:	ldr	r2, [sp, #44]	; 0x2c
   13616:	str	r2, [r3, #112]	; 0x70
   13618:	ldr	r2, [sp, #48]	; 0x30
   1361a:	str	r2, [r3, #116]	; 0x74
   1361c:	ldr	r2, [sp, #28]
   1361e:	str	r2, [r3, #120]	; 0x78
   13620:	ldr	r2, [sp, #32]
   13622:	strd	r2, r5, [r3, #124]	; 0x7c
   13626:	ldr	r2, [sp, #52]	; 0x34
   13628:	strd	r2, r8, [r3, #132]	; 0x84
   1362c:	bl	12cba <subvol_uuid_search_add@@Base>
   13630:	mov.w	r8, #0
   13634:	b.n	13532 <subvol_uuid_search_init@@Base+0x202>
   13636:	ldrd	r0, r1, [r4, #8]
   1363a:	adds	r3, r1, #1
   1363c:	it	eq
   1363e:	cmpeq.w	r0, #4294967295	; 0xffffffff
   13642:	beq.w	133dc <subvol_uuid_search_init@@Base+0xac>
   13646:	adds	r2, r0, #1
   13648:	adc.w	r3, r1, #0
   1364c:	strd	r2, r3, [r4, #8]
   13650:	movs	r3, #0
   13652:	movs	r2, #0
   13654:	strd	r2, r3, [r4, #24]
   13658:	movs	r3, #0
   1365a:	str	r3, [r4, #56]	; 0x38
   1365c:	b.n	13436 <subvol_uuid_search_init@@Base+0x106>
   1365e:	ldr	r0, [sp, #8]
   13660:	add.w	sp, sp, #4608	; 0x1200
   13664:	add	sp, #4
   13666:	vpop	{d8}
   1366a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1366e:	nop
   13670:	str	r4, [sp, #68]	; 0x44
   13672:	beq.n	13676 <subvol_uuid_search_init@@Base+0x346>
   13674:	subs	r0, r7, r0
   13676:	movs	r5, r0
   13678:	lsls	r0, r5, #8
   1367a:	movs	r0, r0
   1367c:	subs	r2, r5, r0
   1367e:	movs	r5, r0
   13680:	adds	r2, r3, r6
   13682:	movs	r5, r0
   13684:	lsls	r0, r7, #8
   13686:	movs	r0, r0
   13688:	strh	r2, [r6, #54]	; 0x36
   1368a:	movs	r2, r0
   1368c:	strh	r6, [r2, #58]	; 0x3a
   1368e:	movs	r2, r0
   13690:	strb	r5, [r4, #2]
   13692:	movs	r2, r0
   13694:	strh	r5, [r2, #50]	; 0x32
   13696:	movs	r2, r0

00013698 <subvol_uuid_search_finit@@Base>:
   13698:	push	{r4, r5, r6, lr}
   1369a:	mov	r5, r0
   1369c:	ldr	r3, [r0, #4]
   1369e:	cbz	r3, 136b6 <subvol_uuid_search_finit@@Base+0x1e>
   136a0:	add.w	r6, r0, #8
   136a4:	mov	r0, r6
   136a6:	bl	13c46 <rb_first@@Base>
   136aa:	mov	r4, r0
   136ac:	cbnz	r0, 136b8 <subvol_uuid_search_finit@@Base+0x20>
   136ae:	strd	r0, r0, [r5, #8]
   136b2:	strd	r0, r0, [r5, #16]
   136b6:	pop	{r4, r5, r6, pc}
   136b8:	ldr.w	r0, [r4, #136]	; 0x88
   136bc:	blx	8620 <free@plt+0x4>
   136c0:	mov	r0, r4
   136c2:	mov	r1, r6
   136c4:	bl	139d0 <rb_erase@@Base>
   136c8:	mov	r0, r4
   136ca:	blx	8620 <free@plt+0x4>
   136ce:	b.n	136a4 <subvol_uuid_search_finit@@Base+0xc>

000136d0 <path_cat_out@@Base>:
   136d0:	push	{r4, r5, r6, r7, lr}
   136d2:	mov	r7, r0
   136d4:	sub	sp, #20
   136d6:	mov	r0, r1
   136d8:	mov	r6, r2
   136da:	mov	r5, r1
   136dc:	blx	8940 <strlen@plt>
   136e0:	mov	r4, r0
   136e2:	mov	r0, r6
   136e4:	blx	8940 <strlen@plt>
   136e8:	movw	r2, #4093	; 0xffd
   136ec:	adds	r1, r4, r0
   136ee:	mov	r3, r0
   136f0:	cmp	r1, r2
   136f2:	bgt.n	13734 <path_cat_out@@Base+0x64>
   136f4:	cbz	r4, 13704 <path_cat_out@@Base+0x34>
   136f6:	adds	r2, r5, r4
   136f8:	ldrb.w	r2, [r2, #-1]
   136fc:	cmp	r2, #47	; 0x2f
   136fe:	it	eq
   13700:	addeq.w	r4, r4, #4294967295	; 0xffffffff
   13704:	cbz	r0, 13730 <path_cat_out@@Base+0x60>
   13706:	adds	r2, r6, r0
   13708:	ldrb.w	r2, [r2, #-1]
   1370c:	cmp	r2, #47	; 0x2f
   1370e:	bne.n	13712 <path_cat_out@@Base+0x42>
   13710:	subs	r3, r0, #1
   13712:	strd	r3, r6, [sp, #8]
   13716:	mov.w	r2, #4294967295	; 0xffffffff
   1371a:	ldr	r3, [pc, #32]	; (1373c <path_cat_out@@Base+0x6c>)
   1371c:	movs	r1, #1
   1371e:	mov	r0, r7
   13720:	strd	r4, r5, [sp]
   13724:	add	r3, pc
   13726:	blx	8994 <__sprintf_chk@plt>
   1372a:	movs	r0, #0
   1372c:	add	sp, #20
   1372e:	pop	{r4, r5, r6, r7, pc}
   13730:	mov	r3, r0
   13732:	b.n	13712 <path_cat_out@@Base+0x42>
   13734:	mvn.w	r0, #35	; 0x23
   13738:	b.n	1372c <path_cat_out@@Base+0x5c>
   1373a:	nop
   1373c:	strh	r1, [r6, #38]	; 0x26
   1373e:	movs	r2, r0

00013740 <path_cat3_out@@Base>:
   13740:	stmdb	sp!, {r4, r6, r7, r8, r9, sl, fp, lr}
   13744:	mov	sl, r0
   13746:	sub	sp, #24
   13748:	mov	r0, r1
   1374a:	mov	r8, r2
   1374c:	mov	r9, r3
   1374e:	mov	r7, r1
   13750:	blx	8940 <strlen@plt>
   13754:	mov	r4, r0
   13756:	mov	r0, r8
   13758:	blx	8940 <strlen@plt>
   1375c:	mov	r6, r0
   1375e:	mov	fp, r0
   13760:	mov	r0, r9
   13762:	blx	8940 <strlen@plt>
   13766:	adds	r2, r4, r6
   13768:	movw	r1, #4092	; 0xffc
   1376c:	add	r2, r0
   1376e:	mov	r3, r0
   13770:	cmp	r2, r1
   13772:	bgt.n	137d2 <path_cat3_out@@Base+0x92>
   13774:	cbz	r4, 13784 <path_cat3_out@@Base+0x44>
   13776:	adds	r2, r7, r4
   13778:	ldrb.w	r2, [r2, #-1]
   1377c:	cmp	r2, #47	; 0x2f
   1377e:	it	eq
   13780:	addeq.w	r4, r4, #4294967295	; 0xffffffff
   13784:	cbz	r6, 137ca <path_cat3_out@@Base+0x8a>
   13786:	add.w	r2, r8, r6
   1378a:	ldrb.w	r2, [r2, #-1]
   1378e:	cmp	r2, #47	; 0x2f
   13790:	bne.n	13796 <path_cat3_out@@Base+0x56>
   13792:	add.w	fp, r6, #4294967295	; 0xffffffff
   13796:	cbz	r0, 137ce <path_cat3_out@@Base+0x8e>
   13798:	add.w	r2, r9, r0
   1379c:	ldrb.w	r2, [r2, #-1]
   137a0:	cmp	r2, #47	; 0x2f
   137a2:	bne.n	137a6 <path_cat3_out@@Base+0x66>
   137a4:	subs	r3, r0, #1
   137a6:	strd	r3, r9, [sp, #16]
   137aa:	mov.w	r2, #4294967295	; 0xffffffff
   137ae:	ldr	r3, [pc, #40]	; (137d8 <path_cat3_out@@Base+0x98>)
   137b0:	movs	r1, #1
   137b2:	mov	r0, sl
   137b4:	strd	fp, r8, [sp, #8]
   137b8:	add	r3, pc
   137ba:	strd	r4, r7, [sp]
   137be:	blx	8994 <__sprintf_chk@plt>
   137c2:	movs	r0, #0
   137c4:	add	sp, #24
   137c6:	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, pc}
   137ca:	mov	fp, r6
   137cc:	b.n	13796 <path_cat3_out@@Base+0x56>
   137ce:	mov	r3, r0
   137d0:	b.n	137a6 <path_cat3_out@@Base+0x66>
   137d2:	mvn.w	r0, #35	; 0x23
   137d6:	b.n	137c4 <path_cat3_out@@Base+0x84>
   137d8:	strh	r0, [r3, #34]	; 0x22
   137da:	movs	r2, r0
   137dc:	push	{r4, lr}
   137de:	orrs	r3, r1
   137e0:	ldr	r4, [r0, #0]
   137e2:	str	r4, [r1, #0]
   137e4:	bics.w	r4, r4, #3
   137e8:	str	r3, [r0, #0]
   137ea:	beq.n	137f8 <path_cat3_out@@Base+0xb8>
   137ec:	ldr	r3, [r4, #8]
   137ee:	cmp	r0, r3
   137f0:	ite	eq
   137f2:	streq	r1, [r4, #8]
   137f4:	strne	r1, [r4, #4]
   137f6:	pop	{r4, pc}
   137f8:	str	r1, [r2, #0]
   137fa:	b.n	137f6 <path_cat3_out@@Base+0xb6>

000137fc <__rb_erase_color@@Base>:
   137fc:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   13800:	mov	r6, r2
   13802:	mov	r4, r0
   13804:	mov	r7, r1
   13806:	movs	r2, #0
   13808:	ldr	r5, [r4, #4]
   1380a:	cmp	r5, r2
   1380c:	beq.n	138b0 <__rb_erase_color@@Base+0xb4>
   1380e:	ldr	r3, [r5, #0]
   13810:	ands.w	r3, r3, #1
   13814:	bne.n	13836 <__rb_erase_color@@Base+0x3a>
   13816:	ldr.w	r8, [r5, #8]
   1381a:	mov	r1, r5
   1381c:	orr.w	r2, r4, #1
   13820:	mov	r0, r4
   13822:	str.w	r8, [r4, #4]
   13826:	str	r4, [r5, #8]
   13828:	mov	r5, r8
   1382a:	str.w	r2, [r8]
   1382e:	mov	r2, r7
   13830:	bl	137dc <path_cat3_out@@Base+0x9c>
   13834:	blx	r6
   13836:	ldr	r3, [r5, #4]
   13838:	cbz	r3, 13840 <__rb_erase_color@@Base+0x44>
   1383a:	ldr	r2, [r3, #0]
   1383c:	lsls	r2, r2, #31
   1383e:	bpl.n	13884 <__rb_erase_color@@Base+0x88>
   13840:	ldr.w	r8, [r5, #8]
   13844:	cmp.w	r8, #0
   13848:	beq.n	13852 <__rb_erase_color@@Base+0x56>
   1384a:	ldr.w	r3, [r8]
   1384e:	lsls	r3, r3, #31
   13850:	bpl.n	13864 <__rb_erase_color@@Base+0x68>
   13852:	str	r4, [r5, #0]
   13854:	ldr	r3, [r4, #0]
   13856:	lsls	r2, r3, #31
   13858:	bmi.n	1391e <__rb_erase_color@@Base+0x122>
   1385a:	orr.w	r3, r3, #1
   1385e:	str	r3, [r4, #0]
   13860:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   13864:	ldr.w	r3, [r8, #4]
   13868:	str	r3, [r5, #8]
   1386a:	str.w	r5, [r8, #4]
   1386e:	str.w	r8, [r4, #4]
   13872:	cbz	r3, 1387a <__rb_erase_color@@Base+0x7e>
   13874:	orr.w	r2, r5, #1
   13878:	str	r2, [r3, #0]
   1387a:	mov	r0, r5
   1387c:	mov	r1, r8
   1387e:	blx	r6
   13880:	mov	r3, r5
   13882:	mov	r5, r8
   13884:	ldr	r2, [r5, #8]
   13886:	str	r2, [r4, #4]
   13888:	str	r4, [r5, #8]
   1388a:	orr.w	r1, r5, #1
   1388e:	str	r1, [r3, #0]
   13890:	cbz	r2, 1389c <__rb_erase_color@@Base+0xa0>
   13892:	ldr	r3, [r2, #0]
   13894:	and.w	r3, r3, #1
   13898:	orrs	r3, r4
   1389a:	str	r3, [r2, #0]
   1389c:	movs	r3, #1
   1389e:	mov	r2, r7
   138a0:	mov	r1, r5
   138a2:	mov	r0, r4
   138a4:	bl	137dc <path_cat3_out@@Base+0x9c>
   138a8:	mov	r3, r6
   138aa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   138ae:	bx	r3
   138b0:	ldr	r5, [r4, #8]
   138b2:	ldr	r3, [r5, #0]
   138b4:	ands.w	r3, r3, #1
   138b8:	bne.n	138da <__rb_erase_color@@Base+0xde>
   138ba:	ldr.w	r8, [r5, #4]
   138be:	mov	r1, r5
   138c0:	orr.w	r2, r4, #1
   138c4:	mov	r0, r4
   138c6:	str.w	r8, [r4, #8]
   138ca:	str	r4, [r5, #4]
   138cc:	mov	r5, r8
   138ce:	str.w	r2, [r8]
   138d2:	mov	r2, r7
   138d4:	bl	137dc <path_cat3_out@@Base+0x9c>
   138d8:	blx	r6
   138da:	ldr	r3, [r5, #8]
   138dc:	cbz	r3, 138e4 <__rb_erase_color@@Base+0xe8>
   138de:	ldr	r2, [r3, #0]
   138e0:	lsls	r0, r2, #31
   138e2:	bpl.n	13916 <__rb_erase_color@@Base+0x11a>
   138e4:	ldr.w	r8, [r5, #4]
   138e8:	cmp.w	r8, #0
   138ec:	beq.n	13852 <__rb_erase_color@@Base+0x56>
   138ee:	ldr.w	r3, [r8]
   138f2:	lsls	r1, r3, #31
   138f4:	bmi.n	13852 <__rb_erase_color@@Base+0x56>
   138f6:	ldr.w	r3, [r8, #8]
   138fa:	str	r3, [r5, #4]
   138fc:	str.w	r5, [r8, #8]
   13900:	str.w	r8, [r4, #8]
   13904:	cbz	r3, 1390c <__rb_erase_color@@Base+0x110>
   13906:	orr.w	r2, r5, #1
   1390a:	str	r2, [r3, #0]
   1390c:	mov	r0, r5
   1390e:	mov	r1, r8
   13910:	blx	r6
   13912:	mov	r3, r5
   13914:	mov	r5, r8
   13916:	ldr	r2, [r5, #4]
   13918:	str	r2, [r4, #8]
   1391a:	str	r4, [r5, #4]
   1391c:	b.n	1388a <__rb_erase_color@@Base+0x8e>
   1391e:	bics.w	r3, r3, #3
   13922:	beq.n	13860 <__rb_erase_color@@Base+0x64>
   13924:	mov	r2, r4
   13926:	mov	r4, r3
   13928:	b.n	13808 <__rb_erase_color@@Base+0xc>

0001392a <rb_insert_color@@Base>:
   1392a:	push	{r4, r5, r6}
   1392c:	mov	r3, r0
   1392e:	ldr	r4, [r0, #0]
   13930:	mov	r2, r1
   13932:	cbnz	r4, 1393c <rb_insert_color@@Base+0x12>
   13934:	movs	r2, #1
   13936:	str	r2, [r3, #0]
   13938:	pop	{r4, r5, r6}
   1393a:	bx	lr
   1393c:	ldr	r0, [r4, #0]
   1393e:	lsls	r5, r0, #31
   13940:	bmi.n	13938 <rb_insert_color@@Base+0xe>
   13942:	ldr	r5, [r0, #4]
   13944:	cmp	r4, r5
   13946:	beq.n	13992 <rb_insert_color@@Base+0x68>
   13948:	cbz	r5, 13964 <rb_insert_color@@Base+0x3a>
   1394a:	ldr	r1, [r5, #0]
   1394c:	lsls	r1, r1, #31
   1394e:	bmi.n	13964 <rb_insert_color@@Base+0x3a>
   13950:	orr.w	r3, r0, #1
   13954:	str	r3, [r5, #0]
   13956:	str	r3, [r4, #0]
   13958:	mov	r3, r0
   1395a:	ldr	r4, [r0, #0]
   1395c:	bic.w	r4, r4, #3
   13960:	str	r4, [r0, #0]
   13962:	b.n	13932 <rb_insert_color@@Base+0x8>
   13964:	ldr	r5, [r4, #4]
   13966:	cmp	r5, r3
   13968:	bne.n	1397e <rb_insert_color@@Base+0x54>
   1396a:	ldr	r1, [r3, #8]
   1396c:	str	r1, [r4, #4]
   1396e:	str	r4, [r3, #8]
   13970:	cbz	r1, 13978 <rb_insert_color@@Base+0x4e>
   13972:	orr.w	r5, r4, #1
   13976:	str	r5, [r1, #0]
   13978:	str	r3, [r4, #0]
   1397a:	mov	r4, r3
   1397c:	ldr	r5, [r3, #4]
   1397e:	str	r5, [r0, #8]
   13980:	str	r0, [r4, #4]
   13982:	cbz	r5, 1398a <rb_insert_color@@Base+0x60>
   13984:	orr.w	r3, r0, #1
   13988:	str	r3, [r5, #0]
   1398a:	movs	r3, #0
   1398c:	mov	r1, r4
   1398e:	pop	{r4, r5, r6}
   13990:	b.n	137dc <path_cat3_out@@Base+0x9c>
   13992:	ldr	r1, [r0, #8]
   13994:	cbz	r1, 139a4 <rb_insert_color@@Base+0x7a>
   13996:	ldr	r6, [r1, #0]
   13998:	lsls	r6, r6, #31
   1399a:	bmi.n	139a4 <rb_insert_color@@Base+0x7a>
   1399c:	orr.w	r3, r0, #1
   139a0:	str	r3, [r1, #0]
   139a2:	b.n	13956 <rb_insert_color@@Base+0x2c>
   139a4:	ldr	r4, [r5, #8]
   139a6:	cmp	r4, r3
   139a8:	bne.n	139be <rb_insert_color@@Base+0x94>
   139aa:	ldr	r1, [r3, #4]
   139ac:	str	r1, [r5, #8]
   139ae:	str	r5, [r3, #4]
   139b0:	cbz	r1, 139b8 <rb_insert_color@@Base+0x8e>
   139b2:	orr.w	r4, r5, #1
   139b6:	str	r4, [r1, #0]
   139b8:	str	r3, [r5, #0]
   139ba:	mov	r5, r3
   139bc:	ldr	r4, [r3, #8]
   139be:	str	r4, [r0, #4]
   139c0:	str	r0, [r5, #8]
   139c2:	cbz	r4, 139ca <rb_insert_color@@Base+0xa0>
   139c4:	orr.w	r3, r0, #1
   139c8:	str	r3, [r4, #0]
   139ca:	movs	r3, #0
   139cc:	mov	r1, r5
   139ce:	b.n	1398e <rb_insert_color@@Base+0x64>

000139d0 <rb_erase@@Base>:
   139d0:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   139d4:	mov	r2, r1
   139d6:	mov	r4, r0
   139d8:	ldrd	r1, r0, [r0, #4]
   139dc:	cbnz	r0, 13a08 <rb_erase@@Base+0x38>
   139de:	ldr	r5, [r4, #0]
   139e0:	bic.w	r3, r5, #3
   139e4:	mov	r0, r3
   139e6:	cbz	r3, 139fa <rb_erase@@Base+0x2a>
   139e8:	ldr	r6, [r3, #8]
   139ea:	cmp	r4, r6
   139ec:	ite	eq
   139ee:	streq	r1, [r3, #8]
   139f0:	strne	r1, [r3, #4]
   139f2:	cbz	r1, 139fe <rb_erase@@Base+0x2e>
   139f4:	str	r5, [r1, #0]
   139f6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   139fa:	str	r1, [r2, #0]
   139fc:	b.n	139f2 <rb_erase@@Base+0x22>
   139fe:	lsls	r5, r5, #31
   13a00:	bpl.n	139f6 <rb_erase@@Base+0x26>
   13a02:	cmp	r3, #0
   13a04:	bne.n	13a84 <rb_erase@@Base+0xb4>
   13a06:	b.n	139f6 <rb_erase@@Base+0x26>
   13a08:	cbnz	r1, 13a24 <rb_erase@@Base+0x54>
   13a0a:	ldr	r3, [r4, #0]
   13a0c:	str	r3, [r0, #0]
   13a0e:	bics.w	r3, r3, #3
   13a12:	beq.n	13a20 <rb_erase@@Base+0x50>
   13a14:	ldr	r2, [r3, #8]
   13a16:	cmp	r4, r2
   13a18:	ite	eq
   13a1a:	streq	r0, [r3, #8]
   13a1c:	strne	r0, [r3, #4]
   13a1e:	b.n	139f6 <rb_erase@@Base+0x26>
   13a20:	str	r0, [r2, #0]
   13a22:	b.n	139f6 <rb_erase@@Base+0x26>
   13a24:	ldr	r3, [r1, #8]
   13a26:	cbnz	r3, 13a5a <rb_erase@@Base+0x8a>
   13a28:	ldr	r6, [r1, #4]
   13a2a:	mov	r3, r1
   13a2c:	mov	r0, r1
   13a2e:	ldr	r5, [r4, #8]
   13a30:	str	r5, [r3, #8]
   13a32:	ldr	r1, [r5, #0]
   13a34:	and.w	r1, r1, #1
   13a38:	orrs	r1, r3
   13a3a:	str	r1, [r5, #0]
   13a3c:	ldr	r1, [r4, #0]
   13a3e:	bics.w	r5, r1, #3
   13a42:	beq.n	13a78 <rb_erase@@Base+0xa8>
   13a44:	ldr	r7, [r5, #8]
   13a46:	cmp	r4, r7
   13a48:	ite	eq
   13a4a:	streq	r3, [r5, #8]
   13a4c:	strne	r3, [r5, #4]
   13a4e:	cbz	r6, 13a7c <rb_erase@@Base+0xac>
   13a50:	orr.w	r0, r0, #1
   13a54:	str	r1, [r3, #0]
   13a56:	str	r0, [r6, #0]
   13a58:	b.n	139f6 <rb_erase@@Base+0x26>
   13a5a:	mov	r0, r1
   13a5c:	ldr	r5, [r3, #8]
   13a5e:	cbnz	r5, 13a72 <rb_erase@@Base+0xa2>
   13a60:	ldr	r6, [r3, #4]
   13a62:	str	r6, [r0, #8]
   13a64:	str	r1, [r3, #4]
   13a66:	ldr	r5, [r1, #0]
   13a68:	and.w	r5, r5, #1
   13a6c:	orrs	r5, r3
   13a6e:	str	r5, [r1, #0]
   13a70:	b.n	13a2e <rb_erase@@Base+0x5e>
   13a72:	mov	r0, r3
   13a74:	mov	r3, r5
   13a76:	b.n	13a5c <rb_erase@@Base+0x8c>
   13a78:	str	r3, [r2, #0]
   13a7a:	b.n	13a4e <rb_erase@@Base+0x7e>
   13a7c:	ldr	r4, [r3, #0]
   13a7e:	str	r1, [r3, #0]
   13a80:	lsls	r4, r4, #31
   13a82:	bpl.n	139f6 <rb_erase@@Base+0x26>
   13a84:	movs	r1, #0
   13a86:	ldr	r4, [r0, #4]
   13a88:	cmp	r4, r1
   13a8a:	beq.n	13b02 <rb_erase@@Base+0x132>
   13a8c:	ldr	r3, [r4, #0]
   13a8e:	ands.w	r3, r3, #1
   13a92:	bne.n	13aa8 <rb_erase@@Base+0xd8>
   13a94:	ldr	r5, [r4, #8]
   13a96:	orr.w	r1, r0, #1
   13a9a:	str	r5, [r0, #4]
   13a9c:	str	r0, [r4, #8]
   13a9e:	str	r1, [r5, #0]
   13aa0:	mov	r1, r4
   13aa2:	bl	137dc <path_cat3_out@@Base+0x9c>
   13aa6:	mov	r4, r5
   13aa8:	ldr	r3, [r4, #4]
   13aaa:	cbz	r3, 13ab2 <rb_erase@@Base+0xe2>
   13aac:	ldr	r1, [r3, #0]
   13aae:	lsls	r1, r1, #31
   13ab0:	bpl.n	13afc <rb_erase@@Base+0x12c>
   13ab2:	ldr	r1, [r4, #8]
   13ab4:	cbz	r1, 13abc <rb_erase@@Base+0xec>
   13ab6:	ldr	r3, [r1, #0]
   13ab8:	lsls	r7, r3, #31
   13aba:	bpl.n	13acc <rb_erase@@Base+0xfc>
   13abc:	str	r0, [r4, #0]
   13abe:	ldr	r3, [r0, #0]
   13ac0:	lsls	r1, r3, #31
   13ac2:	bmi.n	13b36 <rb_erase@@Base+0x166>
   13ac4:	orr.w	r3, r3, #1
   13ac8:	str	r3, [r0, #0]
   13aca:	b.n	139f6 <rb_erase@@Base+0x26>
   13acc:	ldr	r3, [r1, #4]
   13ace:	str	r3, [r4, #8]
   13ad0:	str	r4, [r1, #4]
   13ad2:	str	r1, [r0, #4]
   13ad4:	cbz	r3, 13adc <rb_erase@@Base+0x10c>
   13ad6:	orr.w	r5, r4, #1
   13ada:	str	r5, [r3, #0]
   13adc:	ldr	r5, [r1, #8]
   13ade:	orr.w	r3, r1, #1
   13ae2:	str	r5, [r0, #4]
   13ae4:	str	r0, [r1, #8]
   13ae6:	str	r3, [r4, #0]
   13ae8:	cbz	r5, 13af4 <rb_erase@@Base+0x124>
   13aea:	ldr	r3, [r5, #0]
   13aec:	and.w	r3, r3, #1
   13af0:	orrs	r3, r0
   13af2:	str	r3, [r5, #0]
   13af4:	movs	r3, #1
   13af6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   13afa:	b.n	137dc <path_cat3_out@@Base+0x9c>
   13afc:	mov	r1, r4
   13afe:	mov	r4, r3
   13b00:	b.n	13adc <rb_erase@@Base+0x10c>
   13b02:	ldr	r1, [r0, #8]
   13b04:	ldr	r3, [r1, #0]
   13b06:	ands.w	r3, r3, #1
   13b0a:	bne.n	13b1e <rb_erase@@Base+0x14e>
   13b0c:	ldr	r4, [r1, #4]
   13b0e:	orr.w	r5, r0, #1
   13b12:	str	r4, [r0, #8]
   13b14:	str	r0, [r1, #4]
   13b16:	str	r5, [r4, #0]
   13b18:	bl	137dc <path_cat3_out@@Base+0x9c>
   13b1c:	mov	r1, r4
   13b1e:	ldr	r3, [r1, #8]
   13b20:	cbz	r3, 13b28 <rb_erase@@Base+0x158>
   13b22:	ldr	r4, [r3, #0]
   13b24:	lsls	r6, r4, #31
   13b26:	bpl.n	13b72 <rb_erase@@Base+0x1a2>
   13b28:	ldr	r4, [r1, #4]
   13b2a:	cbz	r4, 13b32 <rb_erase@@Base+0x162>
   13b2c:	ldr	r3, [r4, #0]
   13b2e:	lsls	r5, r3, #31
   13b30:	bpl.n	13b44 <rb_erase@@Base+0x174>
   13b32:	str	r0, [r1, #0]
   13b34:	b.n	13abe <rb_erase@@Base+0xee>
   13b36:	bics.w	r3, r3, #3
   13b3a:	beq.w	139f6 <rb_erase@@Base+0x26>
   13b3e:	mov	r1, r0
   13b40:	mov	r0, r3
   13b42:	b.n	13a86 <rb_erase@@Base+0xb6>
   13b44:	ldr	r3, [r4, #8]
   13b46:	str	r3, [r1, #4]
   13b48:	str	r1, [r4, #8]
   13b4a:	str	r4, [r0, #8]
   13b4c:	cbz	r3, 13b54 <rb_erase@@Base+0x184>
   13b4e:	orr.w	r5, r1, #1
   13b52:	str	r5, [r3, #0]
   13b54:	ldr	r5, [r4, #4]
   13b56:	orr.w	r3, r4, #1
   13b5a:	str	r5, [r0, #8]
   13b5c:	str	r0, [r4, #4]
   13b5e:	str	r3, [r1, #0]
   13b60:	cbz	r5, 13b6c <rb_erase@@Base+0x19c>
   13b62:	ldr	r3, [r5, #0]
   13b64:	and.w	r3, r3, #1
   13b68:	orrs	r3, r0
   13b6a:	str	r3, [r5, #0]
   13b6c:	movs	r3, #1
   13b6e:	mov	r1, r4
   13b70:	b.n	13af6 <rb_erase@@Base+0x126>
   13b72:	mov	r4, r1
   13b74:	mov	r1, r3
   13b76:	b.n	13b54 <rb_erase@@Base+0x184>

00013b78 <__rb_insert_augmented@@Base>:
   13b78:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   13b7c:	mov	r6, r0
   13b7e:	ldr	r4, [r0, #0]
   13b80:	mov	r9, r1
   13b82:	mov	r8, r2
   13b84:	cbnz	r4, 13b8e <__rb_insert_augmented@@Base+0x16>
   13b86:	movs	r3, #1
   13b88:	str	r3, [r6, #0]
   13b8a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   13b8e:	ldr	r5, [r4, #0]
   13b90:	lsls	r0, r5, #31
   13b92:	bmi.n	13b8a <__rb_insert_augmented@@Base+0x12>
   13b94:	ldr	r7, [r5, #4]
   13b96:	cmp	r4, r7
   13b98:	beq.n	13bf8 <__rb_insert_augmented@@Base+0x80>
   13b9a:	cbz	r7, 13bb6 <__rb_insert_augmented@@Base+0x3e>
   13b9c:	ldr	r3, [r7, #0]
   13b9e:	lsls	r1, r3, #31
   13ba0:	bmi.n	13bb6 <__rb_insert_augmented@@Base+0x3e>
   13ba2:	orr.w	r3, r5, #1
   13ba6:	str	r3, [r7, #0]
   13ba8:	str	r3, [r4, #0]
   13baa:	ldr	r4, [r5, #0]
   13bac:	mov	r6, r5
   13bae:	bic.w	r4, r4, #3
   13bb2:	str	r4, [r5, #0]
   13bb4:	b.n	13b84 <__rb_insert_augmented@@Base+0xc>
   13bb6:	ldr	r3, [r4, #4]
   13bb8:	cmp	r3, r6
   13bba:	bne.n	13bd6 <__rb_insert_augmented@@Base+0x5e>
   13bbc:	ldr	r3, [r6, #8]
   13bbe:	str	r3, [r4, #4]
   13bc0:	str	r4, [r6, #8]
   13bc2:	cbz	r3, 13bca <__rb_insert_augmented@@Base+0x52>
   13bc4:	orr.w	r2, r4, #1
   13bc8:	str	r2, [r3, #0]
   13bca:	mov	r0, r4
   13bcc:	str	r6, [r4, #0]
   13bce:	mov	r1, r6
   13bd0:	mov	r4, r6
   13bd2:	blx	r8
   13bd4:	ldr	r3, [r6, #4]
   13bd6:	str	r3, [r5, #8]
   13bd8:	str	r5, [r4, #4]
   13bda:	cbz	r3, 13be2 <__rb_insert_augmented@@Base+0x6a>
   13bdc:	orr.w	r2, r5, #1
   13be0:	str	r2, [r3, #0]
   13be2:	movs	r3, #0
   13be4:	mov	r2, r9
   13be6:	mov	r1, r4
   13be8:	mov	r0, r5
   13bea:	bl	137dc <path_cat3_out@@Base+0x9c>
   13bee:	mov	r0, r5
   13bf0:	mov	r3, r8
   13bf2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   13bf6:	bx	r3
   13bf8:	ldr	r3, [r5, #8]
   13bfa:	cbz	r3, 13c0c <__rb_insert_augmented@@Base+0x94>
   13bfc:	ldr	r2, [r3, #0]
   13bfe:	lsls	r2, r2, #31
   13c00:	bmi.n	13c0c <__rb_insert_augmented@@Base+0x94>
   13c02:	orr.w	r2, r5, #1
   13c06:	str	r2, [r3, #0]
   13c08:	str	r2, [r4, #0]
   13c0a:	b.n	13baa <__rb_insert_augmented@@Base+0x32>
   13c0c:	ldr	r3, [r7, #8]
   13c0e:	cmp	r3, r6
   13c10:	bne.n	13c2c <__rb_insert_augmented@@Base+0xb4>
   13c12:	ldr	r3, [r6, #4]
   13c14:	str	r3, [r7, #8]
   13c16:	str	r7, [r6, #4]
   13c18:	cbz	r3, 13c20 <__rb_insert_augmented@@Base+0xa8>
   13c1a:	orr.w	r2, r7, #1
   13c1e:	str	r2, [r3, #0]
   13c20:	mov	r0, r7
   13c22:	str	r6, [r7, #0]
   13c24:	mov	r1, r6
   13c26:	mov	r7, r6
   13c28:	blx	r8
   13c2a:	ldr	r3, [r6, #8]
   13c2c:	str	r3, [r5, #4]
   13c2e:	str	r5, [r7, #8]
   13c30:	cbz	r3, 13c38 <__rb_insert_augmented@@Base+0xc0>
   13c32:	orr.w	r2, r5, #1
   13c36:	str	r2, [r3, #0]
   13c38:	movs	r3, #0
   13c3a:	mov	r2, r9
   13c3c:	mov	r1, r7
   13c3e:	mov	r0, r5
   13c40:	bl	137dc <path_cat3_out@@Base+0x9c>
   13c44:	b.n	13bee <__rb_insert_augmented@@Base+0x76>

00013c46 <rb_first@@Base>:
   13c46:	ldr	r0, [r0, #0]
   13c48:	cbz	r0, 13c54 <rb_first@@Base+0xe>
   13c4a:	mov	r3, r0
   13c4c:	ldr	r0, [r0, #8]
   13c4e:	cmp	r0, #0
   13c50:	bne.n	13c4a <rb_first@@Base+0x4>
   13c52:	mov	r0, r3
   13c54:	bx	lr

00013c56 <rb_last@@Base>:
   13c56:	ldr	r0, [r0, #0]
   13c58:	cbz	r0, 13c64 <rb_last@@Base+0xe>
   13c5a:	mov	r3, r0
   13c5c:	ldr	r0, [r0, #4]
   13c5e:	cmp	r0, #0
   13c60:	bne.n	13c5a <rb_last@@Base+0x4>
   13c62:	mov	r0, r3
   13c64:	bx	lr

00013c66 <rb_next@@Base>:
   13c66:	ldr	r3, [r0, #0]
   13c68:	cmp	r0, r3
   13c6a:	beq.n	13c8e <rb_next@@Base+0x28>
   13c6c:	ldr	r3, [r0, #4]
   13c6e:	cbz	r3, 13c7a <rb_next@@Base+0x14>
   13c70:	mov	r0, r3
   13c72:	ldr	r3, [r3, #8]
   13c74:	cmp	r3, #0
   13c76:	bne.n	13c70 <rb_next@@Base+0xa>
   13c78:	bx	lr
   13c7a:	ldr	r3, [r0, #0]
   13c7c:	mov	r2, r0
   13c7e:	bic.w	r3, r3, #3
   13c82:	mov	r0, r3
   13c84:	cbz	r3, 13c90 <rb_next@@Base+0x2a>
   13c86:	ldr	r3, [r3, #4]
   13c88:	cmp	r3, r2
   13c8a:	beq.n	13c7a <rb_next@@Base+0x14>
   13c8c:	bx	lr
   13c8e:	movs	r0, #0
   13c90:	bx	lr

00013c92 <rb_prev@@Base>:
   13c92:	ldr	r3, [r0, #0]
   13c94:	cmp	r0, r3
   13c96:	beq.n	13cba <rb_prev@@Base+0x28>
   13c98:	ldr	r3, [r0, #8]
   13c9a:	cbz	r3, 13ca6 <rb_prev@@Base+0x14>
   13c9c:	mov	r0, r3
   13c9e:	ldr	r3, [r3, #4]
   13ca0:	cmp	r3, #0
   13ca2:	bne.n	13c9c <rb_prev@@Base+0xa>
   13ca4:	bx	lr
   13ca6:	ldr	r3, [r0, #0]
   13ca8:	mov	r2, r0
   13caa:	bic.w	r3, r3, #3
   13cae:	mov	r0, r3
   13cb0:	cbz	r3, 13cbc <rb_prev@@Base+0x2a>
   13cb2:	ldr	r3, [r3, #8]
   13cb4:	cmp	r3, r2
   13cb6:	beq.n	13ca6 <rb_prev@@Base+0x14>
   13cb8:	bx	lr
   13cba:	movs	r0, #0
   13cbc:	bx	lr

00013cbe <rb_replace_node@@Base>:
   13cbe:	mov	r3, r1
   13cc0:	ldr	r1, [r0, #0]
   13cc2:	bics.w	r1, r1, #3
   13cc6:	beq.n	13cf6 <rb_replace_node@@Base+0x38>
   13cc8:	ldr	r2, [r1, #8]
   13cca:	cmp	r0, r2
   13ccc:	ite	eq
   13cce:	streq	r3, [r1, #8]
   13cd0:	strne	r3, [r1, #4]
   13cd2:	ldr	r1, [r0, #8]
   13cd4:	cbz	r1, 13ce0 <rb_replace_node@@Base+0x22>
   13cd6:	ldr	r2, [r1, #0]
   13cd8:	and.w	r2, r2, #1
   13cdc:	orrs	r2, r3
   13cde:	str	r2, [r1, #0]
   13ce0:	ldr	r1, [r0, #4]
   13ce2:	cbz	r1, 13cee <rb_replace_node@@Base+0x30>
   13ce4:	ldr	r2, [r1, #0]
   13ce6:	and.w	r2, r2, #1
   13cea:	orrs	r2, r3
   13cec:	str	r2, [r1, #0]
   13cee:	ldmia	r0, {r0, r1, r2}
   13cf0:	stmia.w	r3, {r0, r1, r2}
   13cf4:	bx	lr
   13cf6:	str	r3, [r2, #0]
   13cf8:	b.n	13cd2 <rb_replace_node@@Base+0x14>

00013cfa <rb_next_postorder@@Base>:
   13cfa:	mov	r2, r0
   13cfc:	cbz	r0, 13d20 <rb_next_postorder@@Base+0x26>
   13cfe:	ldr	r3, [r0, #0]
   13d00:	bics.w	r0, r3, #3
   13d04:	beq.n	13d20 <rb_next_postorder@@Base+0x26>
   13d06:	ldr	r3, [r0, #8]
   13d08:	cmp	r3, r2
   13d0a:	bne.n	13d20 <rb_next_postorder@@Base+0x26>
   13d0c:	ldr	r3, [r0, #4]
   13d0e:	cbz	r3, 13d20 <rb_next_postorder@@Base+0x26>
   13d10:	mov	r0, r3
   13d12:	ldr	r3, [r3, #8]
   13d14:	cmp	r3, #0
   13d16:	bne.n	13d10 <rb_next_postorder@@Base+0x16>
   13d18:	ldr	r3, [r0, #4]
   13d1a:	cmp	r3, #0
   13d1c:	bne.n	13d10 <rb_next_postorder@@Base+0x16>
   13d1e:	bx	lr
   13d20:	bx	lr

00013d22 <rb_first_postorder@@Base>:
   13d22:	ldr	r0, [r0, #0]
   13d24:	cbz	r0, 13d36 <rb_first_postorder@@Base+0x14>
   13d26:	mov	r3, r0
   13d28:	ldr	r0, [r0, #8]
   13d2a:	cmp	r0, #0
   13d2c:	bne.n	13d26 <rb_first_postorder@@Base+0x4>
   13d2e:	ldr	r0, [r3, #4]
   13d30:	cmp	r0, #0
   13d32:	bne.n	13d26 <rb_first_postorder@@Base+0x4>
   13d34:	mov	r0, r3
   13d36:	bx	lr
   13d38:	push	{r4, r5, lr}
   13d3a:	ldrd	r4, r5, [r0, #24]
   13d3e:	ldrd	r0, r1, [r1, #24]
   13d42:	cmp	r1, r5
   13d44:	it	eq
   13d46:	cmpeq	r0, r4
   13d48:	bcc.n	13d5e <rb_first_postorder@@Base+0x3c>
   13d4a:	cmp	r5, r1
   13d4c:	it	eq
   13d4e:	cmpeq	r4, r0
   13d50:	ite	cc
   13d52:	movcc.w	r0, #4294967295	; 0xffffffff
   13d56:	movcs	r0, #0
   13d58:	cbz	r2, 13d5c <rb_first_postorder@@Base+0x3a>
   13d5a:	negs	r0, r0
   13d5c:	pop	{r4, r5, pc}
   13d5e:	movs	r0, #1
   13d60:	b.n	13d58 <rb_first_postorder@@Base+0x36>
   13d62:	push	{r4, r5, lr}
   13d64:	ldrd	r4, r5, [r0, #72]	; 0x48
   13d68:	ldrd	r0, r1, [r1, #72]	; 0x48
   13d6c:	cmp	r1, r5
   13d6e:	it	eq
   13d70:	cmpeq	r0, r4
   13d72:	bcc.n	13d88 <rb_first_postorder@@Base+0x66>
   13d74:	cmp	r5, r1
   13d76:	it	eq
   13d78:	cmpeq	r4, r0
   13d7a:	ite	cc
   13d7c:	movcc.w	r0, #4294967295	; 0xffffffff
   13d80:	movcs	r0, #0
   13d82:	cbz	r2, 13d86 <rb_first_postorder@@Base+0x64>
   13d84:	negs	r0, r0
   13d86:	pop	{r4, r5, pc}
   13d88:	movs	r0, #1
   13d8a:	b.n	13d82 <rb_first_postorder@@Base+0x60>
   13d8c:	push	{r4, r5, lr}
   13d8e:	ldrd	r4, r5, [r0, #80]	; 0x50
   13d92:	ldrd	r0, r1, [r1, #80]	; 0x50
   13d96:	cmp	r1, r5
   13d98:	it	eq
   13d9a:	cmpeq	r0, r4
   13d9c:	bcc.n	13db2 <rb_first_postorder@@Base+0x90>
   13d9e:	cmp	r5, r1
   13da0:	it	eq
   13da2:	cmpeq	r4, r0
   13da4:	ite	cc
   13da6:	movcc.w	r0, #4294967295	; 0xffffffff
   13daa:	movcs	r0, #0
   13dac:	cbz	r2, 13db0 <rb_first_postorder@@Base+0x8e>
   13dae:	negs	r0, r0
   13db0:	pop	{r4, r5, pc}
   13db2:	movs	r0, #1
   13db4:	b.n	13dac <rb_first_postorder@@Base+0x8a>
   13db6:	ldrd	r0, r1, [r0, #24]
   13dba:	cmp	r1, r3
   13dbc:	itte	eq
   13dbe:	cmpeq	r0, r2
   13dc0:	moveq	r0, #1
   13dc2:	movne	r0, #0
   13dc4:	bx	lr
   13dc6:	ldrd	r2, r3, [r0, #32]
   13dca:	orrs	r3, r2
   13dcc:	ite	ne
   13dce:	movne	r0, #1
   13dd0:	moveq	r0, #0
   13dd2:	bx	lr
   13dd4:	ldr	r0, [r0, #40]	; 0x28
   13dd6:	ands	r0, r2
   13dd8:	bx	lr
   13dda:	ldrd	r0, r1, [r0, #72]	; 0x48
   13dde:	cmp	r1, r3
   13de0:	it	eq
   13de2:	cmpeq	r0, r2
   13de4:	ite	cs
   13de6:	movcs	r0, #1
   13de8:	movcc	r0, #0
   13dea:	bx	lr
   13dec:	ldrd	r0, r1, [r0, #72]	; 0x48
   13df0:	cmp	r3, r1
   13df2:	it	eq
   13df4:	cmpeq	r2, r0
   13df6:	ite	cs
   13df8:	movcs	r0, #1
   13dfa:	movcc	r0, #0
   13dfc:	bx	lr
   13dfe:	ldrd	r0, r1, [r0, #72]	; 0x48
   13e02:	cmp	r1, r3
   13e04:	itte	eq
   13e06:	cmpeq	r0, r2
   13e08:	moveq	r0, #1
   13e0a:	movne	r0, #0
   13e0c:	bx	lr
   13e0e:	ldrd	r0, r1, [r0, #80]	; 0x50
   13e12:	cmp	r1, r3
   13e14:	it	eq
   13e16:	cmpeq	r0, r2
   13e18:	ite	cs
   13e1a:	movcs	r0, #1
   13e1c:	movcc	r0, #0
   13e1e:	bx	lr
   13e20:	ldrd	r0, r1, [r0, #80]	; 0x50
   13e24:	cmp	r3, r1
   13e26:	it	eq
   13e28:	cmpeq	r2, r0
   13e2a:	ite	cs
   13e2c:	movcs	r0, #1
   13e2e:	movcc	r0, #0
   13e30:	bx	lr
   13e32:	ldrd	r0, r1, [r0, #80]	; 0x50
   13e36:	cmp	r1, r3
   13e38:	itte	eq
   13e3a:	cmpeq	r0, r2
   13e3c:	moveq	r0, #1
   13e3e:	movne	r0, #0
   13e40:	bx	lr
   13e42:	ldrd	r0, r1, [r0, #64]	; 0x40
   13e46:	cmp	r1, r3
   13e48:	itte	eq
   13e4a:	cmpeq	r0, r2
   13e4c:	moveq	r0, #1
   13e4e:	movne	r0, #0
   13e50:	bx	lr
   13e52:	ldr.w	r0, [r0, #152]	; 0x98
   13e56:	bx	lr
   13e58:	ldr	r2, [pc, #60]	; (13e98 <rb_first_postorder@@Base+0x176>)
   13e5a:	movs	r1, #16
   13e5c:	ldr	r3, [pc, #60]	; (13e9c <rb_first_postorder@@Base+0x17a>)
   13e5e:	push	{r4, lr}
   13e60:	add	r2, pc
   13e62:	sub	sp, #72	; 0x48
   13e64:	add	r4, sp, #4
   13e66:	ldr	r3, [r2, r3]
   13e68:	mov	r0, r4
   13e6a:	ldr	r3, [r3, #0]
   13e6c:	str	r3, [sp, #68]	; 0x44
   13e6e:	mov.w	r3, #0
   13e72:	blx	88bc <backtrace@plt>
   13e76:	movs	r2, #2
   13e78:	mov	r1, r0
   13e7a:	mov	r0, r4
   13e7c:	blx	8bcc <backtrace_symbols_fd@plt>
   13e80:	ldr	r2, [pc, #28]	; (13ea0 <rb_first_postorder@@Base+0x17e>)
   13e82:	ldr	r3, [pc, #24]	; (13e9c <rb_first_postorder@@Base+0x17a>)
   13e84:	add	r2, pc
   13e86:	ldr	r3, [r2, r3]
   13e88:	ldr	r2, [r3, #0]
   13e8a:	ldr	r3, [sp, #68]	; 0x44
   13e8c:	eors	r2, r3
   13e8e:	beq.n	13e94 <rb_first_postorder@@Base+0x172>
   13e90:	blx	8708 <__stack_chk_fail@plt>
   13e94:	add	sp, #72	; 0x48
   13e96:	pop	{r4, pc}
   13e98:	lsrs	r0, r4, #28
   13e9a:	movs	r5, r0
   13e9c:	lsls	r0, r5, #8
   13e9e:	movs	r0, r0
   13ea0:	lsrs	r4, r7, #27
   13ea2:	movs	r5, r0
   13ea4:	push	{r4, lr}
   13ea6:	mov	r4, r0
   13ea8:	ldr.w	r0, [r0, #144]	; 0x90
   13eac:	blx	8620 <free@plt+0x4>
   13eb0:	ldr.w	r0, [r4, #140]	; 0x8c
   13eb4:	blx	8620 <free@plt+0x4>
   13eb8:	ldr.w	r0, [r4, #148]	; 0x94
   13ebc:	blx	8620 <free@plt+0x4>
   13ec0:	mov	r0, r4
   13ec2:	ldmia.w	sp!, {r4, lr}
   13ec6:	b.w	861c <free@plt>
   13eca:	mov	r1, r2
   13ecc:	adds	r0, #108	; 0x6c
   13ece:	push	{r3, lr}
   13ed0:	blx	873c <uuid_compare@plt>
   13ed4:	clz	r0, r0
   13ed8:	lsrs	r0, r0, #5
   13eda:	pop	{r3, pc}
   13edc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ee0:	mov	r6, r0
   13ee2:	mov	r0, r2
   13ee4:	ldr	r2, [pc, #188]	; (13fa4 <rb_first_postorder@@Base+0x282>)
   13ee6:	mov	r1, r3
   13ee8:	ldr	r3, [pc, #188]	; (13fa8 <rb_first_postorder@@Base+0x286>)
   13eea:	add	r2, pc
   13eec:	ldr.w	r7, [r6, #148]	; 0x94
   13ef0:	ldr.w	r8, [pc, #184]	; 13fac <rb_first_postorder@@Base+0x28a>
   13ef4:	sub	sp, #20
   13ef6:	ldr	r3, [r2, r3]
   13ef8:	add	r8, pc
   13efa:	ldr	r3, [r3, #0]
   13efc:	str	r3, [sp, #12]
   13efe:	mov.w	r3, #0
   13f02:	cmp	r7, #0
   13f04:	beq.n	13f86 <rb_first_postorder@@Base+0x264>
   13f06:	ldrd	r2, r3, [r6, #64]	; 0x40
   13f0a:	cmp	r3, r1
   13f0c:	it	eq
   13f0e:	cmpeq	r2, r0
   13f10:	beq.n	13f86 <rb_first_postorder@@Base+0x264>
   13f12:	ldr	r2, [pc, #156]	; (13fb0 <rb_first_postorder@@Base+0x28e>)
   13f14:	mov	r3, sp
   13f16:	mov	fp, sp
   13f18:	add	r2, pc
   13f1a:	ldr	r1, [r2, #4]
   13f1c:	ldr	r0, [r2, #0]
   13f1e:	ldrh	r2, [r2, #8]
   13f20:	stmia	r3!, {r0, r1}
   13f22:	mov	r0, fp
   13f24:	strh	r2, [r3, #0]
   13f26:	blx	8940 <strlen@plt>
   13f2a:	mov	r5, r0
   13f2c:	mov	r0, r7
   13f2e:	blx	8940 <strlen@plt>
   13f32:	add.w	r9, r5, r0
   13f36:	mov	sl, r0
   13f38:	add.w	r0, r9, #2
   13f3c:	blx	8870 <malloc@plt+0x4>
   13f40:	mov	r4, r0
   13f42:	cbnz	r0, 13f5a <rb_first_postorder@@Base+0x238>
   13f44:	ldr	r3, [pc, #108]	; (13fb4 <rb_first_postorder@@Base+0x292>)
   13f46:	ldr	r0, [pc, #112]	; (13fb8 <rb_first_postorder@@Base+0x296>)
   13f48:	ldr.w	r3, [r8, r3]
   13f4c:	add	r0, pc
   13f4e:	ldr	r1, [r3, #0]
   13f50:	blx	8b6c <fputs@plt+0x4>
   13f54:	movs	r0, #1
   13f56:	blx	8934 <exit@plt>
   13f5a:	adds	r0, r5, #1
   13f5c:	add	r9, r4
   13f5e:	mov	r2, sl
   13f60:	mov	r1, r7
   13f62:	add	r0, r4
   13f64:	blx	866c <memcpy@plt+0x4>
   13f68:	movs	r3, #0
   13f6a:	mov	r2, r5
   13f6c:	strb.w	r3, [r9, #1]
   13f70:	mov	r1, fp
   13f72:	movs	r3, #47	; 0x2f
   13f74:	mov	r0, r4
   13f76:	strb	r3, [r4, r5]
   13f78:	blx	866c <memcpy@plt+0x4>
   13f7c:	mov	r0, r7
   13f7e:	blx	8620 <free@plt+0x4>
   13f82:	str.w	r4, [r6, #148]	; 0x94
   13f86:	ldr	r2, [pc, #52]	; (13fbc <rb_first_postorder@@Base+0x29a>)
   13f88:	ldr	r3, [pc, #28]	; (13fa8 <rb_first_postorder@@Base+0x286>)
   13f8a:	add	r2, pc
   13f8c:	ldr	r3, [r2, r3]
   13f8e:	ldr	r2, [r3, #0]
   13f90:	ldr	r3, [sp, #12]
   13f92:	eors	r2, r3
   13f94:	beq.n	13f9a <rb_first_postorder@@Base+0x278>
   13f96:	blx	8708 <__stack_chk_fail@plt>
   13f9a:	movs	r0, #1
   13f9c:	add	sp, #20
   13f9e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13fa2:	nop
   13fa4:	lsrs	r6, r2, #26
   13fa6:	movs	r5, r0
   13fa8:	lsls	r0, r5, #8
   13faa:	movs	r0, r0
   13fac:	lsrs	r0, r1, #26
   13fae:	movs	r5, r0
   13fb0:	ldrb	r5, [r5, #20]
   13fb2:	movs	r2, r0
   13fb4:	lsls	r0, r7, #8
   13fb6:	movs	r0, r0
   13fb8:	ldrb	r7, [r3, #19]
   13fba:	movs	r2, r0
   13fbc:	lsrs	r6, r6, #23
   13fbe:	movs	r5, r0
   13fc0:	push	{r4, lr}
   13fc2:	mov	r4, r2
   13fc4:	ldr.w	r1, [r1, #148]	; 0x94
   13fc8:	ldr.w	r0, [r0, #148]	; 0x94
   13fcc:	blx	85ac <strcmp@plt>
   13fd0:	cmp	r0, #0
   13fd2:	bgt.n	13fe2 <rb_first_postorder@@Base+0x2c0>
   13fd4:	ite	ne
   13fd6:	movne.w	r0, #4294967295	; 0xffffffff
   13fda:	moveq	r0, #0
   13fdc:	cbz	r4, 13fe0 <rb_first_postorder@@Base+0x2be>
   13fde:	negs	r0, r0
   13fe0:	pop	{r4, pc}
   13fe2:	movs	r0, #1
   13fe4:	b.n	13fdc <rb_first_postorder@@Base+0x2ba>
   13fe6:	push	{r4, lr}
   13fe8:	sub	sp, #168	; 0xa8
   13fea:	ldr	r4, [pc, #76]	; (14038 <rb_first_postorder@@Base+0x316>)
   13fec:	ldr	r1, [pc, #76]	; (1403c <rb_first_postorder@@Base+0x31a>)
   13fee:	add	r4, pc
   13ff0:	ldr	r1, [r4, r1]
   13ff2:	mov	r4, sp
   13ff4:	ldr	r1, [r1, #0]
   13ff6:	str	r1, [sp, #164]	; 0xa4
   13ff8:	mov.w	r1, #0
   13ffc:	strd	r2, r3, [sp, #24]
   14000:	mov	r3, r0
   14002:	cbnz	r3, 14018 <rb_first_postorder@@Base+0x2f6>
   14004:	ldr	r1, [pc, #56]	; (14040 <rb_first_postorder@@Base+0x31e>)
   14006:	ldr	r2, [pc, #52]	; (1403c <rb_first_postorder@@Base+0x31a>)
   14008:	add	r1, pc
   1400a:	ldr	r2, [r1, r2]
   1400c:	ldr	r1, [r2, #0]
   1400e:	ldr	r2, [sp, #164]	; 0xa4
   14010:	eors	r1, r2
   14012:	beq.n	14030 <rb_first_postorder@@Base+0x30e>
   14014:	blx	8708 <__stack_chk_fail@plt>
   14018:	movs	r2, #0
   1401a:	mov	r1, r3
   1401c:	mov	r0, r4
   1401e:	bl	13d38 <rb_first_postorder@@Base+0x16>
   14022:	cmp	r0, #0
   14024:	bge.n	1402a <rb_first_postorder@@Base+0x308>
   14026:	ldr	r3, [r3, #8]
   14028:	b.n	14002 <rb_first_postorder@@Base+0x2e0>
   1402a:	beq.n	14004 <rb_first_postorder@@Base+0x2e2>
   1402c:	ldr	r3, [r3, #4]
   1402e:	b.n	14002 <rb_first_postorder@@Base+0x2e0>
   14030:	mov	r0, r3
   14032:	add	sp, #168	; 0xa8
   14034:	pop	{r4, pc}
   14036:	nop
   14038:	lsrs	r2, r2, #22
   1403a:	movs	r5, r0
   1403c:	lsls	r0, r5, #8
   1403e:	movs	r0, r0
   14040:	lsrs	r0, r7, #21
   14042:	movs	r5, r0
   14044:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14048:	sub	sp, #20
   1404a:	mov	r9, r0
   1404c:	ldr	r0, [r0, #0]
   1404e:	strd	r2, r3, [sp]
   14052:	bl	13fe6 <rb_first_postorder@@Base+0x2c4>
   14056:	ldr.w	fp, [pc, #656]	; 142e8 <rb_first_postorder@@Base+0x5c6>
   1405a:	ldrd	r6, r7, [sp, #64]	; 0x40
   1405e:	add	fp, pc
   14060:	ldrd	sl, r8, [sp, #88]	; 0x58
   14064:	ldr	r5, [sp, #124]	; 0x7c
   14066:	mov	r4, r0
   14068:	cmp	r0, #0
   1406a:	beq.w	141a2 <rb_first_postorder@@Base+0x480>
   1406e:	ldrd	r2, r3, [r0, #24]
   14072:	ldrd	r0, r1, [sp]
   14076:	cmp	r1, r3
   14078:	it	eq
   1407a:	cmpeq	r0, r2
   1407c:	bne.w	141a2 <rb_first_postorder@@Base+0x480>
   14080:	cmp.w	sl, #0
   14084:	beq.n	140c6 <rb_first_postorder@@Base+0x3a4>
   14086:	cmp.w	r8, #0
   1408a:	beq.n	140c6 <rb_first_postorder@@Base+0x3a4>
   1408c:	ldr.w	r0, [r4, #144]	; 0x90
   14090:	blx	8620 <free@plt+0x4>
   14094:	add.w	r0, r8, #1
   14098:	blx	8870 <malloc@plt+0x4>
   1409c:	str.w	r0, [r4, #144]	; 0x90
   140a0:	cbnz	r0, 140b4 <rb_first_postorder@@Base+0x392>
   140a2:	ldr	r3, [pc, #584]	; (142ec <rb_first_postorder@@Base+0x5ca>)
   140a4:	ldr	r0, [pc, #584]	; (142f0 <rb_first_postorder@@Base+0x5ce>)
   140a6:	ldr.w	r3, [fp, r3]
   140aa:	add	r0, pc
   140ac:	ldr	r1, [r3, #0]
   140ae:	blx	8b6c <fputs@plt+0x4>
   140b2:	b.n	141b6 <rb_first_postorder@@Base+0x494>
   140b4:	mov	r2, r8
   140b6:	mov	r1, sl
   140b8:	blx	89d8 <strncpy@plt>
   140bc:	ldr.w	r3, [r4, #144]	; 0x90
   140c0:	movs	r2, #0
   140c2:	strb.w	r2, [r3, r8]
   140c6:	ldrd	r2, r3, [sp, #56]	; 0x38
   140ca:	orrs	r3, r2
   140cc:	itt	ne
   140ce:	ldrdne	r2, r3, [sp, #56]	; 0x38
   140d2:	strdne	r2, r3, [r4, #48]	; 0x30
   140d6:	orrs.w	r3, r6, r7
   140da:	ldrd	r2, r3, [sp, #72]	; 0x48
   140de:	it	ne
   140e0:	strdne	r6, r7, [r4, #32]
   140e4:	orrs	r3, r2
   140e6:	itt	ne
   140e8:	ldrdne	r2, r3, [sp, #72]	; 0x48
   140ec:	strdne	r2, r3, [r4, #40]	; 0x28
   140f0:	ldrd	r2, r3, [sp, #80]	; 0x50
   140f4:	orrs	r3, r2
   140f6:	itt	ne
   140f8:	ldrdne	r2, r3, [sp, #80]	; 0x50
   140fc:	strdne	r2, r3, [r4, #56]	; 0x38
   14100:	ldrd	r2, r3, [sp, #104]	; 0x68
   14104:	orrs	r3, r2
   14106:	itt	ne
   14108:	ldrdne	r2, r3, [sp, #104]	; 0x68
   1410c:	strdne	r2, r3, [r4, #72]	; 0x48
   14110:	ldrd	r2, r3, [sp, #96]	; 0x60
   14114:	orrs	r3, r2
   14116:	beq.n	1418e <rb_first_postorder@@Base+0x46c>
   14118:	ldrd	r2, r3, [sp, #96]	; 0x60
   1411c:	strd	r2, r3, [r4, #80]	; 0x50
   14120:	ldr	r3, [sp, #112]	; 0x70
   14122:	cbz	r3, 14126 <rb_first_postorder@@Base+0x404>
   14124:	str	r3, [r4, #88]	; 0x58
   14126:	ldr	r3, [sp, #116]	; 0x74
   14128:	cbz	r3, 14148 <rb_first_postorder@@Base+0x426>
   1412a:	add.w	r2, r4, #92	; 0x5c
   1412e:	add.w	ip, r3, #16
   14132:	mov	r7, r3
   14134:	mov	r3, r7
   14136:	adds	r2, #8
   14138:	ldmia	r3!, {r0, r1}
   1413a:	cmp	r3, ip
   1413c:	str.w	r0, [r2, #-8]
   14140:	mov	r7, r3
   14142:	str.w	r1, [r2, #-4]
   14146:	bne.n	14134 <rb_first_postorder@@Base+0x412>
   14148:	ldr	r3, [sp, #120]	; 0x78
   1414a:	cbz	r3, 1416a <rb_first_postorder@@Base+0x448>
   1414c:	add.w	r2, r4, #108	; 0x6c
   14150:	add.w	r7, r3, #16
   14154:	mov	r6, r3
   14156:	mov	r3, r6
   14158:	adds	r2, #8
   1415a:	ldmia	r3!, {r0, r1}
   1415c:	cmp	r3, r7
   1415e:	str.w	r0, [r2, #-8]
   14162:	mov	r6, r3
   14164:	str.w	r1, [r2, #-4]
   14168:	bne.n	14156 <rb_first_postorder@@Base+0x434>
   1416a:	cbz	r5, 14186 <rb_first_postorder@@Base+0x464>
   1416c:	adds	r4, #124	; 0x7c
   1416e:	add.w	r2, r5, #16
   14172:	mov	r3, r5
   14174:	adds	r4, #8
   14176:	ldmia	r3!, {r0, r1}
   14178:	cmp	r3, r2
   1417a:	str.w	r0, [r4, #-8]
   1417e:	mov	r5, r3
   14180:	str.w	r1, [r4, #-4]
   14184:	bne.n	14172 <rb_first_postorder@@Base+0x450>
   14186:	movs	r0, #0
   14188:	add	sp, #20
   1418a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1418e:	ldrd	r2, r3, [r4, #80]	; 0x50
   14192:	orrs	r3, r2
   14194:	bne.n	14120 <rb_first_postorder@@Base+0x3fe>
   14196:	orrs.w	r3, r6, r7
   1419a:	it	ne
   1419c:	strdne	r6, r7, [r4, #80]	; 0x50
   141a0:	b.n	14120 <rb_first_postorder@@Base+0x3fe>
   141a2:	movs	r1, #160	; 0xa0
   141a4:	movs	r0, #1
   141a6:	blx	8588 <calloc@plt+0x4>
   141aa:	mov	r4, r0
   141ac:	cbnz	r0, 141bc <rb_first_postorder@@Base+0x49a>
   141ae:	ldr	r0, [pc, #324]	; (142f4 <rb_first_postorder@@Base+0x5d2>)
   141b0:	add	r0, pc
   141b2:	blx	8854 <puts@plt+0x4>
   141b6:	movs	r0, #1
   141b8:	blx	8934 <exit@plt>
   141bc:	ldrd	r2, r3, [sp]
   141c0:	strd	r2, r3, [r0, #24]
   141c4:	cmp.w	sl, #0
   141c8:	beq.n	141fe <rb_first_postorder@@Base+0x4dc>
   141ca:	cmp.w	r8, #0
   141ce:	beq.n	141fe <rb_first_postorder@@Base+0x4dc>
   141d0:	add.w	r0, r8, #1
   141d4:	blx	8870 <malloc@plt+0x4>
   141d8:	str.w	r0, [r4, #144]	; 0x90
   141dc:	cbnz	r0, 141ec <rb_first_postorder@@Base+0x4ca>
   141de:	ldr	r3, [pc, #268]	; (142ec <rb_first_postorder@@Base+0x5ca>)
   141e0:	ldr	r0, [pc, #276]	; (142f8 <rb_first_postorder@@Base+0x5d6>)
   141e2:	ldr.w	r3, [fp, r3]
   141e6:	add	r0, pc
   141e8:	ldr	r1, [r3, #0]
   141ea:	b.n	140ae <rb_first_postorder@@Base+0x38c>
   141ec:	mov	r2, r8
   141ee:	mov	r1, sl
   141f0:	str	r0, [sp, #12]
   141f2:	blx	89d8 <strncpy@plt>
   141f6:	ldr	r3, [sp, #12]
   141f8:	movs	r2, #0
   141fa:	strb.w	r2, [r3, r8]
   141fe:	ldrd	r2, r3, [sp, #56]	; 0x38
   14202:	orrs	r3, r2
   14204:	itt	ne
   14206:	ldrdne	r2, r3, [sp, #56]	; 0x38
   1420a:	strdne	r2, r3, [r4, #48]	; 0x30
   1420e:	ldrd	r2, r3, [sp, #80]	; 0x50
   14212:	orrs	r3, r2
   14214:	itt	ne
   14216:	ldrdne	r2, r3, [sp, #80]	; 0x50
   1421a:	strdne	r2, r3, [r4, #56]	; 0x38
   1421e:	orrs.w	r3, r6, r7
   14222:	ldrd	r2, r3, [sp, #72]	; 0x48
   14226:	it	ne
   14228:	strdne	r6, r7, [r4, #32]
   1422c:	orrs	r3, r2
   1422e:	itt	ne
   14230:	ldrdne	r2, r3, [sp, #72]	; 0x48
   14234:	strdne	r2, r3, [r4, #40]	; 0x28
   14238:	ldrd	r2, r3, [sp, #104]	; 0x68
   1423c:	orrs	r3, r2
   1423e:	itt	ne
   14240:	ldrdne	r2, r3, [sp, #104]	; 0x68
   14244:	strdne	r2, r3, [r4, #72]	; 0x48
   14248:	ldrd	r2, r3, [sp, #96]	; 0x60
   1424c:	orrs	r3, r2
   1424e:	beq.n	142a2 <rb_first_postorder@@Base+0x580>
   14250:	ldrd	r2, r3, [sp, #96]	; 0x60
   14254:	strd	r2, r3, [r4, #80]	; 0x50
   14258:	ldr	r3, [sp, #112]	; 0x70
   1425a:	cbz	r3, 1425e <rb_first_postorder@@Base+0x53c>
   1425c:	str	r3, [r4, #88]	; 0x58
   1425e:	ldr	r3, [sp, #116]	; 0x74
   14260:	cbz	r3, 1426c <rb_first_postorder@@Base+0x54a>
   14262:	ldmia	r3, {r0, r1, r2, r3}
   14264:	add.w	ip, r4, #92	; 0x5c
   14268:	stmia.w	ip, {r0, r1, r2, r3}
   1426c:	ldr	r3, [sp, #120]	; 0x78
   1426e:	cbz	r3, 1427a <rb_first_postorder@@Base+0x558>
   14270:	ldmia	r3, {r0, r1, r2, r3}
   14272:	add.w	r7, r4, #108	; 0x6c
   14276:	stmia.w	r7, {r0, r1, r2, r3}
   1427a:	cbz	r5, 14288 <rb_first_postorder@@Base+0x566>
   1427c:	ldmia.w	r5, {r0, r1, r2, r3}
   14280:	add.w	r6, r4, #124	; 0x7c
   14284:	stmia.w	r6, {r0, r1, r2, r3}
   14288:	mov	r2, r9
   1428a:	movs	r1, #0
   1428c:	ldr	r3, [r2, #0]
   1428e:	cbnz	r3, 142b6 <rb_first_postorder@@Base+0x594>
   14290:	strd	r1, r3, [r4]
   14294:	mov	r0, r4
   14296:	str	r3, [r4, #8]
   14298:	mov	r1, r9
   1429a:	str	r4, [r2, #0]
   1429c:	bl	1392a <rb_insert_color@@Base>
   142a0:	b.n	14186 <rb_first_postorder@@Base+0x464>
   142a2:	ldrd	r2, r3, [r4, #80]	; 0x50
   142a6:	orrs	r3, r2
   142a8:	bne.n	14258 <rb_first_postorder@@Base+0x536>
   142aa:	orrs.w	r3, r6, r7
   142ae:	it	ne
   142b0:	strdne	r6, r7, [r4, #80]	; 0x50
   142b4:	b.n	14258 <rb_first_postorder@@Base+0x536>
   142b6:	movs	r2, #0
   142b8:	mov	r1, r3
   142ba:	mov	r0, r4
   142bc:	bl	13d38 <rb_first_postorder@@Base+0x16>
   142c0:	cmp	r0, #0
   142c2:	bge.n	142cc <rb_first_postorder@@Base+0x5aa>
   142c4:	add.w	r2, r3, #8
   142c8:	mov	r1, r3
   142ca:	b.n	1428c <rb_first_postorder@@Base+0x56a>
   142cc:	beq.n	142d2 <rb_first_postorder@@Base+0x5b0>
   142ce:	adds	r2, r3, #4
   142d0:	b.n	142c8 <rb_first_postorder@@Base+0x5a6>
   142d2:	blx	897c <__errno_location@plt>
   142d6:	movs	r3, #17
   142d8:	str	r3, [r0, #0]
   142da:	ldr	r0, [pc, #32]	; (142fc <rb_first_postorder@@Base+0x5da>)
   142dc:	ldrd	r2, r3, [sp]
   142e0:	add	r0, pc
   142e2:	bl	17b7c <__btrfs_error@@Base>
   142e6:	b.n	141b6 <rb_first_postorder@@Base+0x494>
   142e8:	lsrs	r2, r4, #20
   142ea:	movs	r5, r0
   142ec:	lsls	r0, r7, #8
   142ee:	movs	r0, r0
   142f0:	ldrb	r1, [r0, #14]
   142f2:	movs	r2, r0
   142f4:	ldrb	r1, [r3, r7]
   142f6:	movs	r2, r0
   142f8:	ldrb	r5, [r0, #9]
   142fa:	movs	r2, r0
   142fc:	ldrb	r7, [r5, #5]
   142fe:	movs	r2, r0
   14300:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14304:	sub	sp, #20
   14306:	movs	r6, #0
   14308:	mov	r9, r1
   1430a:	mov	r5, r1
   1430c:	mov	r4, r6
   1430e:	mov.w	sl, #47	; 0x2f
   14312:	mov	fp, r6
   14314:	str	r0, [sp, #8]
   14316:	strd	r2, r3, [sp]
   1431a:	ldrd	r2, r3, [r5, #48]	; 0x30
   1431e:	orrs	r3, r2
   14320:	bne.n	14332 <rb_first_postorder@@Base+0x610>
   14322:	mov	r0, r4
   14324:	blx	8620 <free@plt+0x4>
   14328:	mvn.w	r0, #1
   1432c:	add	sp, #20
   1432e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14332:	ldr.w	r8, [r5, #140]	; 0x8c
   14336:	mov	r0, r8
   14338:	blx	8940 <strlen@plt>
   1433c:	mov	r7, r0
   1433e:	cmp	r4, #0
   14340:	beq.n	143c8 <rb_first_postorder@@Base+0x6a6>
   14342:	adds	r0, #2
   14344:	add	r0, r6
   14346:	blx	8870 <malloc@plt+0x4>
   1434a:	mov	r8, r0
   1434c:	cbnz	r0, 1435c <rb_first_postorder@@Base+0x63a>
   1434e:	ldr	r0, [pc, #140]	; (143dc <rb_first_postorder@@Base+0x6ba>)
   14350:	add	r0, pc
   14352:	blx	8760 <perror@plt>
   14356:	movs	r0, #1
   14358:	blx	8934 <exit@plt>
   1435c:	adds	r3, r7, #1
   1435e:	mov	r2, r6
   14360:	add	r0, r3
   14362:	mov	r1, r4
   14364:	str	r3, [sp, #12]
   14366:	blx	866c <memcpy@plt+0x4>
   1436a:	mov	r2, r7
   1436c:	strb.w	sl, [r8, r7]
   14370:	mov	r0, r8
   14372:	ldr.w	r1, [r5, #140]	; 0x8c
   14376:	blx	866c <memcpy@plt+0x4>
   1437a:	add.w	r0, r8, r6
   1437e:	add	r7, r0
   14380:	mov	r0, r4
   14382:	mov	r4, r8
   14384:	strb.w	fp, [r7, #1]
   14388:	blx	8620 <free@plt+0x4>
   1438c:	ldr	r3, [sp, #12]
   1438e:	add	r6, r3
   14390:	ldrd	r2, r3, [r9, #64]	; 0x40
   14394:	ldrd	r0, r1, [sp]
   14398:	orrs	r3, r2
   1439a:	itt	eq
   1439c:	ldrdeq	r2, r3, [r5, #48]	; 0x30
   143a0:	strdeq	r2, r3, [r9, #64]	; 0x40
   143a4:	ldrd	r2, r3, [r5, #48]	; 0x30
   143a8:	cmp	r3, r1
   143aa:	it	eq
   143ac:	cmpeq	r2, r0
   143ae:	beq.n	143d4 <rb_first_postorder@@Base+0x6b2>
   143b0:	cmp	r3, #0
   143b2:	it	eq
   143b4:	cmpeq	r2, #5
   143b6:	beq.n	143d4 <rb_first_postorder@@Base+0x6b2>
   143b8:	ldr	r1, [sp, #8]
   143ba:	ldr	r0, [r1, #0]
   143bc:	bl	13fe6 <rb_first_postorder@@Base+0x2c4>
   143c0:	mov	r5, r0
   143c2:	cmp	r0, #0
   143c4:	bne.n	1431a <rb_first_postorder@@Base+0x5f8>
   143c6:	b.n	14322 <rb_first_postorder@@Base+0x600>
   143c8:	mov	r0, r8
   143ca:	mov	r6, r7
   143cc:	blx	86f0 <strdup@plt+0x4>
   143d0:	mov	r4, r0
   143d2:	b.n	14390 <rb_first_postorder@@Base+0x66e>
   143d4:	movs	r0, #0
   143d6:	str.w	r4, [r9, #148]	; 0x94
   143da:	b.n	1432c <rb_first_postorder@@Base+0x60a>
   143dc:	ldrb	r3, [r5, #4]
   143de:	movs	r2, r0
   143e0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   143e4:	mov	r4, r1
   143e6:	ldr	r1, [pc, #260]	; (144ec <rb_first_postorder@@Base+0x7ca>)
   143e8:	sub.w	sp, sp, #4096	; 0x1000
   143ec:	ldr	r2, [pc, #256]	; (144f0 <rb_first_postorder@@Base+0x7ce>)
   143ee:	sub	sp, #16
   143f0:	add	r1, pc
   143f2:	ldr.w	r6, [r4, #140]	; 0x8c
   143f6:	add.w	r3, sp, #4096	; 0x1000
   143fa:	mov	r5, r0
   143fc:	ldr	r2, [r1, r2]
   143fe:	adds	r3, #12
   14400:	ldr	r2, [r2, #0]
   14402:	str	r2, [r3, #0]
   14404:	mov.w	r2, #0
   14408:	cmp	r6, #0
   1440a:	bne.n	144c6 <rb_first_postorder@@Base+0x7a4>
   1440c:	ldrd	r8, r9, [r4, #48]	; 0x30
   14410:	orrs.w	r3, r8, r9
   14414:	beq.n	14454 <rb_first_postorder@@Base+0x732>
   14416:	add	r7, sp, #8
   14418:	mov.w	r2, #4096	; 0x1000
   1441c:	mov	r1, r6
   1441e:	add.w	sl, sp, #16
   14422:	mov	r0, r7
   14424:	blx	89bc <memset@plt+0x4>
   14428:	ldrd	r2, r3, [r4, #56]	; 0x38
   1442c:	mov	r0, r5
   1442e:	ldr	r1, [pc, #184]	; (144e8 <rb_first_postorder@@Base+0x7c6>)
   14430:	strd	r8, r9, [sl, #-8]
   14434:	strd	r2, r3, [r7, #8]
   14438:	mov	r2, r7
   1443a:	blx	87b4 <ioctl@plt>
   1443e:	subs	r5, r0, #0
   14440:	bge.n	14480 <rb_first_postorder@@Base+0x75e>
   14442:	blx	897c <__errno_location@plt>
   14446:	ldr	r3, [r0, #0]
   14448:	cmp	r3, #2
   1444a:	bne.n	1445a <rb_first_postorder@@Base+0x738>
   1444c:	movs	r2, #0
   1444e:	movs	r3, #0
   14450:	strd	r2, r3, [r4, #48]	; 0x30
   14454:	mvn.w	r5, #1
   14458:	b.n	14466 <rb_first_postorder@@Base+0x744>
   1445a:	ldr	r0, [pc, #152]	; (144f4 <rb_first_postorder@@Base+0x7d2>)
   1445c:	ldrd	r2, r3, [r4, #48]	; 0x30
   14460:	add	r0, pc
   14462:	bl	17b7c <__btrfs_error@@Base>
   14466:	ldr	r1, [pc, #144]	; (144f8 <rb_first_postorder@@Base+0x7d6>)
   14468:	add.w	r3, sp, #4096	; 0x1000
   1446c:	ldr	r2, [pc, #128]	; (144f0 <rb_first_postorder@@Base+0x7ce>)
   1446e:	adds	r3, #12
   14470:	add	r1, pc
   14472:	ldr	r2, [r1, r2]
   14474:	ldr	r1, [r2, #0]
   14476:	ldr	r2, [r3, #0]
   14478:	eors	r1, r2
   1447a:	beq.n	144dc <rb_first_postorder@@Base+0x7ba>
   1447c:	blx	8708 <__stack_chk_fail@plt>
   14480:	ldr.w	r8, [r4, #144]	; 0x90
   14484:	ldrb	r3, [r7, #16]
   14486:	mov	r0, r8
   14488:	cbz	r3, 144ca <rb_first_postorder@@Base+0x7a8>
   1448a:	blx	8940 <strlen@plt>
   1448e:	add	r1, sp, #24
   14490:	str	r1, [sp, #4]
   14492:	mov	r5, r0
   14494:	mov	r0, r1
   14496:	blx	8940 <strlen@plt>
   1449a:	add	r0, r5
   1449c:	adds	r0, #1
   1449e:	blx	8870 <malloc@plt+0x4>
   144a2:	ldr	r1, [sp, #4]
   144a4:	mov	r5, r0
   144a6:	str.w	r0, [r4, #140]	; 0x8c
   144aa:	cbnz	r0, 144ba <rb_first_postorder@@Base+0x798>
   144ac:	ldr	r0, [pc, #76]	; (144fc <rb_first_postorder@@Base+0x7da>)
   144ae:	add	r0, pc
   144b0:	blx	8760 <perror@plt>
   144b4:	movs	r0, #1
   144b6:	blx	8934 <exit@plt>
   144ba:	blx	87f0 <strcpy@plt>
   144be:	mov	r1, r8
   144c0:	mov	r0, r5
   144c2:	blx	87a8 <strcat@plt+0x4>
   144c6:	movs	r5, #0
   144c8:	b.n	14466 <rb_first_postorder@@Base+0x744>
   144ca:	blx	86f0 <strdup@plt+0x4>
   144ce:	str.w	r0, [r4, #140]	; 0x8c
   144d2:	cmp	r0, #0
   144d4:	bne.n	144c6 <rb_first_postorder@@Base+0x7a4>
   144d6:	ldr	r0, [pc, #40]	; (14500 <rb_first_postorder@@Base+0x7de>)
   144d8:	add	r0, pc
   144da:	b.n	144b0 <rb_first_postorder@@Base+0x78e>
   144dc:	mov	r0, r5
   144de:	add.w	sp, sp, #4096	; 0x1000
   144e2:	add	sp, #16
   144e4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   144e8:	str	r4, [sp, #72]	; 0x48
   144ea:	beq.n	144ee <rb_first_postorder@@Base+0x7cc>
   144ec:	lsrs	r0, r2, #6
   144ee:	movs	r5, r0
   144f0:	lsls	r0, r5, #8
   144f2:	movs	r0, r0
   144f4:	ldrb	r1, [r5, #0]
   144f6:	movs	r2, r0
   144f8:	lsrs	r0, r2, #4
   144fa:	movs	r5, r0
   144fc:	strb	r5, [r1, #31]
   144fe:	movs	r2, r0
   14500:	strb	r1, [r3, #31]
   14502:	movs	r2, r0
   14504:	push	{r3, r4, r5, lr}
   14506:	mov	r5, r0
   14508:	mov	r0, r1
   1450a:	bl	13c46 <rb_first@@Base>
   1450e:	mov	r4, r0
   14510:	cbnz	r0, 14514 <rb_first_postorder@@Base+0x7f2>
   14512:	pop	{r3, r4, r5, pc}
   14514:	mov	r1, r4
   14516:	mov	r0, r5
   14518:	bl	143e0 <rb_first_postorder@@Base+0x6be>
   1451c:	cbz	r0, 14522 <rb_first_postorder@@Base+0x800>
   1451e:	adds	r3, r0, #2
   14520:	bne.n	14512 <rb_first_postorder@@Base+0x7f0>
   14522:	mov	r0, r4
   14524:	bl	13c66 <rb_next@@Base>
   14528:	b.n	1450e <rb_first_postorder@@Base+0x7ec>
   1452a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1452e:	mov	r6, r1
   14530:	vpush	{d8}
   14534:	ldr	r1, [pc, #748]	; (14824 <rb_first_postorder@@Base+0xb02>)
   14536:	ldr	r2, [pc, #752]	; (14828 <rb_first_postorder@@Base+0xb06>)
   14538:	add	r1, pc
   1453a:	vmov	s16, r0
   1453e:	sub.w	sp, sp, #4288	; 0x10c0
   14542:	sub	sp, #28
   14544:	ldr	r2, [r1, r2]
   14546:	add	r4, sp, #160	; 0xa0
   14548:	add.w	r3, sp, #4288	; 0x10c0
   1454c:	add	r5, sp, #184	; 0xb8
   1454e:	ldr	r2, [r2, #0]
   14550:	str	r2, [r3, #20]
   14552:	mov.w	r2, #0
   14556:	movs	r1, #0
   14558:	mov.w	r2, #4096	; 0x1000
   1455c:	mov	r0, r4
   1455e:	str	r1, [r6, #0]
   14560:	adds	r3, #20
   14562:	blx	89bc <memset@plt+0x4>
   14566:	movs	r2, #1
   14568:	movs	r3, #0
   1456a:	strd	r2, r3, [r5, #-24]
   1456e:	movs	r2, #132	; 0x84
   14570:	movs	r3, #144	; 0x90
   14572:	strd	r2, r3, [r4, #56]	; 0x38
   14576:	movs	r2, #5
   14578:	movs	r3, #0
   1457a:	strd	r2, r3, [r4, #8]
   1457e:	mvn.w	r2, #255	; 0xff
   14582:	mov.w	r3, #4294967295	; 0xffffffff
   14586:	strd	r2, r3, [r4, #16]
   1458a:	mov.w	r2, #4294967295	; 0xffffffff
   1458e:	mov.w	r3, #4294967295	; 0xffffffff
   14592:	strd	r2, r3, [r4, #32]
   14596:	strd	r2, r3, [r4, #48]	; 0x30
   1459a:	vmov	r0, s16
   1459e:	mov	r2, r4
   145a0:	ldr	r1, [pc, #636]	; (14820 <rb_first_postorder@@Base+0xafe>)
   145a2:	mov.w	r3, #4096	; 0x1000
   145a6:	str	r3, [r4, #64]	; 0x40
   145a8:	blx	87b4 <ioctl@plt>
   145ac:	cmp	r0, #0
   145ae:	blt.n	145ba <rb_first_postorder@@Base+0x898>
   145b0:	ldr	r3, [r4, #64]	; 0x40
   145b2:	cmp	r3, #0
   145b4:	bne.w	14802 <rb_first_postorder@@Base+0xae0>
   145b8:	movs	r0, #0
   145ba:	ldr	r1, [pc, #624]	; (1482c <rb_first_postorder@@Base+0xb0a>)
   145bc:	add.w	r3, sp, #4288	; 0x10c0
   145c0:	ldr	r2, [pc, #612]	; (14828 <rb_first_postorder@@Base+0xb06>)
   145c2:	adds	r3, #20
   145c4:	add	r1, pc
   145c6:	ldr	r2, [r1, r2]
   145c8:	ldr	r1, [r2, #0]
   145ca:	ldr	r2, [r3, #0]
   145cc:	eors	r1, r2
   145ce:	beq.w	14810 <rb_first_postorder@@Base+0xaee>
   145d2:	blx	8708 <__stack_chk_fail@plt>
   145d6:	ldr	r3, [sp, #104]	; 0x68
   145d8:	add	r5, sp, #128	; 0x80
   145da:	adds	r3, #80	; 0x50
   145dc:	mov	lr, r5
   145de:	add	r3, r2
   145e0:	add.w	r8, r3, #32
   145e4:	ldr	r0, [r3, #0]
   145e6:	adds	r3, #8
   145e8:	ldr.w	r1, [r3, #-4]
   145ec:	cmp	r3, r8
   145ee:	mov	ip, lr
   145f0:	stmia.w	ip!, {r0, r1}
   145f4:	mov	lr, ip
   145f6:	bne.n	145e4 <rb_first_postorder@@Base+0x8c2>
   145f8:	ldr.w	r8, [r5, #24]
   145fc:	add.w	r9, r2, #32
   14600:	cmp.w	r8, #144	; 0x90
   14604:	bne.n	146be <rb_first_postorder@@Base+0x99c>
   14606:	ldr	r3, [sp, #124]	; 0x7c
   14608:	movs	r0, #0
   1460a:	movs	r1, #0
   1460c:	movs	r2, #0
   1460e:	add	r3, r9
   14610:	strd	r2, r2, [sp, #64]	; 0x40
   14614:	strd	r2, r2, [sp, #56]	; 0x38
   14618:	strd	r0, r1, [sp, #48]	; 0x30
   1461c:	strd	r0, r1, [sp, #40]	; 0x28
   14620:	ldrh	r2, [r3, #16]
   14622:	str	r2, [sp, #36]	; 0x24
   14624:	add.w	r2, r3, #18
   14628:	str	r2, [sp, #32]
   1462a:	ldr	r2, [r3, #0]
   1462c:	ldr	r3, [r3, #4]
   1462e:	strd	r0, r1, [sp, #16]
   14632:	strd	r0, r1, [sp, #8]
   14636:	strd	r2, r3, [sp, #24]
   1463a:	ldrd	r2, r3, [r5, #16]
   1463e:	strd	r2, r3, [sp]
   14642:	ldrd	r2, r3, [r5, #8]
   14646:	mov	r0, r6
   14648:	bl	14044 <rb_first_postorder@@Base+0x322>
   1464c:	ldrd	r0, r1, [r5, #8]
   14650:	adds	r7, #1
   14652:	ldr	r2, [r5, #28]
   14654:	str.w	r8, [r4, #56]	; 0x38
   14658:	strd	r0, r1, [r4, #8]
   1465c:	add	r2, r9
   1465e:	ldrd	r0, r1, [r5, #16]
   14662:	strd	r0, r1, [r4, #24]
   14666:	ldr	r3, [r4, #64]	; 0x40
   14668:	cmp	r7, r3
   1466a:	bcc.n	145d6 <rb_first_postorder@@Base+0x8b4>
   1466c:	ldrd	r3, r2, [r4, #24]
   14670:	adds	r3, #1
   14672:	str	r3, [sp, #72]	; 0x48
   14674:	adc.w	r3, r2, #0
   14678:	str	r3, [sp, #76]	; 0x4c
   1467a:	ldrd	r2, r3, [sp, #72]	; 0x48
   1467e:	strd	r2, r3, [r4, #24]
   14682:	orrs	r3, r2
   14684:	bne.n	1459a <rb_first_postorder@@Base+0x878>
   14686:	ldr	r3, [r4, #56]	; 0x38
   14688:	adds	r3, #1
   1468a:	str	r3, [r4, #56]	; 0x38
   1468c:	cmp	r3, #144	; 0x90
   1468e:	bls.n	1459a <rb_first_postorder@@Base+0x878>
   14690:	movs	r3, #132	; 0x84
   14692:	str	r3, [r4, #56]	; 0x38
   14694:	ldrd	r3, r2, [r4, #8]
   14698:	adds	r3, #1
   1469a:	str	r3, [sp, #80]	; 0x50
   1469c:	adc.w	r3, r2, #0
   146a0:	str	r3, [sp, #84]	; 0x54
   146a2:	ldrd	r2, r3, [sp, #80]	; 0x50
   146a6:	ldrd	r0, r1, [sp, #80]	; 0x50
   146aa:	strd	r2, r3, [r4, #8]
   146ae:	ldrd	r2, r3, [r4, #16]
   146b2:	cmp	r3, r1
   146b4:	it	eq
   146b6:	cmpeq	r2, r0
   146b8:	bcs.w	1459a <rb_first_postorder@@Base+0x878>
   146bc:	b.n	145b8 <rb_first_postorder@@Base+0x896>
   146be:	cmp.w	r8, #132	; 0x84
   146c2:	bne.n	1464c <rb_first_postorder@@Base+0x92a>
   146c4:	ldrd	r2, r3, [r5, #8]
   146c8:	cmp	r3, #0
   146ca:	it	eq
   146cc:	cmpeq.w	r2, #256	; 0x100
   146d0:	strd	r2, r3, [sp, #88]	; 0x58
   146d4:	bcs.n	146de <rb_first_postorder@@Base+0x9bc>
   146d6:	cmp	r3, #0
   146d8:	it	eq
   146da:	cmpeq	r2, #5
   146dc:	bne.n	1464c <rb_first_postorder@@Base+0x92a>
   146de:	add	r3, sp, #264	; 0x108
   146e0:	add	r3, r9
   146e2:	ldr.w	r2, [r3, #160]	; 0xa0
   146e6:	str	r2, [sp, #116]	; 0x74
   146e8:	ldr.w	r2, [r3, #164]	; 0xa4
   146ec:	str	r2, [sp, #120]	; 0x78
   146ee:	ldr.w	r2, [r3, #208]	; 0xd0
   146f2:	str	r2, [sp, #108]	; 0x6c
   146f4:	ldr.w	r2, [r3, #212]	; 0xd4
   146f8:	str	r2, [sp, #112]	; 0x70
   146fa:	ldr	r2, [r5, #28]
   146fc:	cmp	r2, #239	; 0xef
   146fe:	bls.n	147ce <rb_first_postorder@@Base+0xaac>
   14700:	ldr.w	r2, [r3, #303]	; 0x12f
   14704:	add.w	sl, sp, #4256	; 0x10a0
   14708:	ldr.w	ip, [r3, #339]	; 0x153
   1470c:	add.w	sl, sl, #4
   14710:	addw	fp, r3, #263	; 0x107
   14714:	str	r2, [sp, #96]	; 0x60
   14716:	ldr.w	r2, [r3, #307]	; 0x133
   1471a:	str	r2, [sp, #100]	; 0x64
   1471c:	add.w	r2, r3, #247	; 0xf7
   14720:	ldr	r0, [r2, #0]
   14722:	adds	r2, #8
   14724:	ldr.w	r1, [r2, #-4]
   14728:	cmp	r2, fp
   1472a:	mov	lr, sl
   1472c:	stmia.w	lr!, {r0, r1}
   14730:	mov	sl, lr
   14732:	bne.n	14720 <rb_first_postorder@@Base+0x9fe>
   14734:	add.w	sl, sp, #4256	; 0x10a0
   14738:	addw	r2, r3, #263	; 0x107
   1473c:	add.w	sl, sl, #20
   14740:	addw	fp, r3, #279	; 0x117
   14744:	ldr	r0, [r2, #0]
   14746:	adds	r2, #8
   14748:	ldr.w	r1, [r2, #-4]
   1474c:	cmp	r2, fp
   1474e:	mov	lr, sl
   14750:	stmia.w	lr!, {r0, r1}
   14754:	mov	sl, lr
   14756:	bne.n	14744 <rb_first_postorder@@Base+0xa22>
   14758:	add.w	lr, sp, #4288	; 0x10c0
   1475c:	addw	r2, r3, #279	; 0x117
   14760:	add.w	lr, lr, #4
   14764:	addw	r3, r3, #295	; 0x127
   14768:	ldr	r0, [r2, #0]
   1476a:	adds	r2, #8
   1476c:	ldr.w	r1, [r2, #-4]
   14770:	cmp	r2, r3
   14772:	mov	sl, lr
   14774:	stmia.w	sl!, {r0, r1}
   14778:	mov	lr, sl
   1477a:	bne.n	14768 <rb_first_postorder@@Base+0xa46>
   1477c:	add.w	r3, sp, #4288	; 0x10c0
   14780:	movs	r0, #0
   14782:	adds	r3, #4
   14784:	str	r3, [sp, #68]	; 0x44
   14786:	add.w	r3, sp, #4256	; 0x10a0
   1478a:	movs	r1, #0
   1478c:	adds	r3, #20
   1478e:	str	r3, [sp, #64]	; 0x40
   14790:	add.w	r3, sp, #4256	; 0x10a0
   14794:	strd	r0, r1, [sp, #24]
   14798:	adds	r3, #4
   1479a:	strd	ip, r3, [sp, #56]	; 0x38
   1479e:	ldr	r3, [sp, #116]	; 0x74
   147a0:	str	r3, [sp, #48]	; 0x30
   147a2:	ldr	r3, [sp, #120]	; 0x78
   147a4:	str	r3, [sp, #52]	; 0x34
   147a6:	ldr	r3, [sp, #96]	; 0x60
   147a8:	str	r3, [sp, #40]	; 0x28
   147aa:	ldr	r3, [sp, #100]	; 0x64
   147ac:	str	r3, [sp, #44]	; 0x2c
   147ae:	movs	r3, #0
   147b0:	strd	r3, r3, [sp, #32]
   147b4:	ldr	r3, [sp, #108]	; 0x6c
   147b6:	str	r3, [sp, #16]
   147b8:	ldr	r3, [sp, #112]	; 0x70
   147ba:	str	r3, [sp, #20]
   147bc:	ldrd	r2, r3, [r5, #16]
   147c0:	strd	r0, r1, [sp]
   147c4:	strd	r2, r3, [sp, #8]
   147c8:	ldrd	r2, r3, [sp, #88]	; 0x58
   147cc:	b.n	14646 <rb_first_postorder@@Base+0x924>
   147ce:	add.w	r0, sp, #4256	; 0x10a0
   147d2:	movs	r2, #16
   147d4:	movs	r1, #0
   147d6:	adds	r0, #4
   147d8:	blx	89bc <memset@plt+0x4>
   147dc:	add.w	r0, sp, #4256	; 0x10a0
   147e0:	movs	r2, #16
   147e2:	movs	r1, #0
   147e4:	adds	r0, #20
   147e6:	blx	89bc <memset@plt+0x4>
   147ea:	add.w	r0, sp, #4288	; 0x10c0
   147ee:	adds	r0, #4
   147f0:	movs	r2, #16
   147f2:	movs	r1, #0
   147f4:	blx	89bc <memset@plt+0x4>
   147f8:	mov.w	ip, #0
   147fc:	strd	ip, ip, [sp, #96]	; 0x60
   14800:	b.n	1477c <rb_first_postorder@@Base+0xa5a>
   14802:	movs	r7, #0
   14804:	add	r3, sp, #184	; 0xb8
   14806:	mov	r2, r7
   14808:	str	r3, [sp, #104]	; 0x68
   1480a:	add	r3, sp, #264	; 0x108
   1480c:	str	r3, [sp, #124]	; 0x7c
   1480e:	b.n	14666 <rb_first_postorder@@Base+0x944>
   14810:	add.w	sp, sp, #4288	; 0x10c0
   14814:	add	sp, #28
   14816:	vpop	{d8}
   1481a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1481e:	nop
   14820:	str	r4, [sp, #68]	; 0x44
   14822:	beq.n	14826 <rb_first_postorder@@Base+0xb04>
   14824:	lsrs	r0, r1, #1
   14826:	movs	r5, r0
   14828:	lsls	r0, r5, #8
   1482a:	movs	r0, r0
   1482c:	lsls	r4, r7, #30
   1482e:	movs	r5, r0
   14830:	push	{r4, r5, r6, lr}
   14832:	mov	r5, r0
   14834:	mov	r6, r1
   14836:	bl	1452a <rb_first_postorder@@Base+0x808>
   1483a:	mov	r4, r0
   1483c:	cbnz	r0, 14848 <rb_first_postorder@@Base+0xb26>
   1483e:	mov	r1, r6
   14840:	mov	r0, r5
   14842:	ldmia.w	sp!, {r4, r5, r6, lr}
   14846:	b.n	14504 <rb_first_postorder@@Base+0x7e2>
   14848:	ldr	r0, [pc, #8]	; (14854 <rb_first_postorder@@Base+0xb32>)
   1484a:	add	r0, pc
   1484c:	bl	17b7c <__btrfs_error@@Base>
   14850:	mov	r0, r4
   14852:	pop	{r4, r5, r6, pc}
   14854:	strb	r5, [r6, #17]
   14856:	movs	r2, r0
   14858:	push	{r0, r1, r2, r3, r4, lr}
   1485a:	ldr	r3, [pc, #40]	; (14884 <rb_first_postorder@@Base+0xb62>)
   1485c:	ldr	r4, [pc, #40]	; (14888 <rb_first_postorder@@Base+0xb66>)
   1485e:	add	r3, pc
   14860:	ldr	r4, [r3, r4]
   14862:	movs	r3, #0
   14864:	strd	r2, r1, [sp]
   14868:	movs	r1, #1
   1486a:	strd	r0, r3, [sp, #8]
   1486e:	ldr	r2, [pc, #28]	; (1488c <rb_first_postorder@@Base+0xb6a>)
   14870:	ldr	r3, [pc, #28]	; (14890 <rb_first_postorder@@Base+0xb6e>)
   14872:	add	r2, pc
   14874:	ldr	r0, [r4, #0]
   14876:	add	r3, pc
   14878:	blx	8a64 <__fprintf_chk@plt+0x4>
   1487c:	bl	13e58 <rb_first_postorder@@Base+0x136>
   14880:	blx	8b84 <abort@plt>
   14884:	lsls	r2, r4, #20
   14886:	movs	r5, r0
   14888:	lsls	r0, r7, #8
   1488a:	movs	r0, r0
   1488c:	ldrsb	r5, [r3, r5]
   1488e:	movs	r2, r0
   14890:	strb	r6, [r4, #17]
   14892:	movs	r2, r0
   14894:	push	{r4, lr}
   14896:	subs	r1, #1
   14898:	ldr	r4, [pc, #288]	; (149bc <rb_first_postorder@@Base+0xc9a>)
   1489a:	sub	sp, #328	; 0x148
   1489c:	ldr	r2, [pc, #288]	; (149c0 <rb_first_postorder@@Base+0xc9e>)
   1489e:	add	r4, pc
   148a0:	ldr	r3, [pc, #288]	; (149c4 <rb_first_postorder@@Base+0xca2>)
   148a2:	ldr	r2, [r4, r2]
   148a4:	add	r3, pc
   148a6:	ldr	r2, [r2, #0]
   148a8:	str	r2, [sp, #324]	; 0x144
   148aa:	mov.w	r2, #0
   148ae:	cmp	r1, #8
   148b0:	bhi.n	148c0 <rb_first_postorder@@Base+0xb9e>
   148b2:	tbb	[pc, r1]
   148b6:	subs	r6, r2, r4
   148b8:	movs	r5, #32
   148ba:	ldrb	r2, [r5, r0]
   148bc:	ldr	r0, [pc, #380]	; (14a3c <btrfs_list_setup_print_column@@Base+0x30>)
   148be:	lsls	r2, r4, #1
   148c0:	ldr	r1, [pc, #260]	; (149c8 <rb_first_postorder@@Base+0xca6>)
   148c2:	ldrd	r2, r3, [r0, #24]
   148c6:	add	r1, pc
   148c8:	movs	r0, #1
   148ca:	blx	8a30 <__printf_chk@plt+0x4>
   148ce:	ldr	r2, [pc, #252]	; (149cc <rb_first_postorder@@Base+0xcaa>)
   148d0:	ldr	r3, [pc, #236]	; (149c0 <rb_first_postorder@@Base+0xc9e>)
   148d2:	add	r2, pc
   148d4:	ldr	r3, [r2, r3]
   148d6:	ldr	r2, [r3, #0]
   148d8:	ldr	r3, [sp, #324]	; 0x144
   148da:	eors	r2, r3
   148dc:	beq.n	149b6 <rb_first_postorder@@Base+0xc94>
   148de:	blx	8708 <__stack_chk_fail@plt>
   148e2:	ldr	r1, [pc, #236]	; (149d0 <rb_first_postorder@@Base+0xcae>)
   148e4:	ldrd	r2, r3, [r0, #72]	; 0x48
   148e8:	add	r1, pc
   148ea:	b.n	148c8 <rb_first_postorder@@Base+0xba6>
   148ec:	ldr	r1, [pc, #228]	; (149d4 <rb_first_postorder@@Base+0xcb2>)
   148ee:	ldrd	r2, r3, [r0, #80]	; 0x50
   148f2:	add	r1, pc
   148f4:	b.n	148c8 <rb_first_postorder@@Base+0xba6>
   148f6:	ldr	r1, [pc, #224]	; (149d8 <rb_first_postorder@@Base+0xcb6>)
   148f8:	ldrd	r2, r3, [r0, #48]	; 0x30
   148fc:	add	r1, pc
   148fe:	b.n	148c8 <rb_first_postorder@@Base+0xba6>
   14900:	ldr	r1, [pc, #216]	; (149dc <rb_first_postorder@@Base+0xcba>)
   14902:	ldrd	r2, r3, [r0, #64]	; 0x40
   14906:	add	r1, pc
   14908:	b.n	148c8 <rb_first_postorder@@Base+0xba6>
   1490a:	ldr	r3, [r0, #88]	; 0x58
   1490c:	add	r4, sp, #68	; 0x44
   1490e:	cbz	r3, 1493a <rb_first_postorder@@Base+0xc18>
   14910:	add	r3, sp, #24
   14912:	adds	r0, #88	; 0x58
   14914:	str	r3, [sp, #20]
   14916:	mov	r1, r3
   14918:	blx	8730 <localtime_r@plt>
   1491c:	ldr	r2, [pc, #192]	; (149e0 <rb_first_postorder@@Base+0xcbe>)
   1491e:	ldr	r3, [sp, #20]
   14920:	mov.w	r1, #256	; 0x100
   14924:	add	r2, pc
   14926:	mov	r0, r4
   14928:	blx	88a4 <strftime@plt>
   1492c:	ldr	r1, [pc, #180]	; (149e4 <rb_first_postorder@@Base+0xcc2>)
   1492e:	mov	r2, r4
   14930:	add	r1, pc
   14932:	movs	r0, #1
   14934:	blx	8a30 <__printf_chk@plt+0x4>
   14938:	b.n	148ce <rb_first_postorder@@Base+0xbac>
   1493a:	ldr	r1, [pc, #172]	; (149e8 <rb_first_postorder@@Base+0xcc6>)
   1493c:	mov	r0, r4
   1493e:	add	r1, pc
   14940:	blx	87f0 <strcpy@plt>
   14944:	b.n	1492c <rb_first_postorder@@Base+0xc0a>
   14946:	add.w	r4, r0, #92	; 0x5c
   1494a:	mov	r0, r4
   1494c:	blx	89ac <uuid_is_null@plt>
   14950:	cbz	r0, 14964 <rb_first_postorder@@Base+0xc42>
   14952:	ldr	r1, [pc, #152]	; (149ec <rb_first_postorder@@Base+0xcca>)
   14954:	add	r0, sp, #68	; 0x44
   14956:	add	r1, pc
   14958:	blx	87f0 <strcpy@plt>
   1495c:	ldr	r1, [pc, #144]	; (149f0 <rb_first_postorder@@Base+0xcce>)
   1495e:	add	r2, sp, #68	; 0x44
   14960:	add	r1, pc
   14962:	b.n	14932 <rb_first_postorder@@Base+0xc10>
   14964:	add	r1, sp, #68	; 0x44
   14966:	mov	r0, r4
   14968:	blx	85c4 <uuid_unparse@plt>
   1496c:	b.n	1495c <rb_first_postorder@@Base+0xc3a>
   1496e:	add.w	r4, r0, #108	; 0x6c
   14972:	b.n	1494a <rb_first_postorder@@Base+0xc28>
   14974:	add.w	r4, r0, #124	; 0x7c
   14978:	b.n	1494a <rb_first_postorder@@Base+0xc28>
   1497a:	ldr.w	r2, [r0, #148]	; 0x94
   1497e:	cbnz	r2, 149b0 <rb_first_postorder@@Base+0xc8e>
   14980:	ldr	r2, [pc, #112]	; (149f4 <rb_first_postorder@@Base+0xcd2>)
   14982:	movs	r1, #1
   14984:	ldr	r0, [r3, r2]
   14986:	ldr	r3, [pc, #112]	; (149f8 <rb_first_postorder@@Base+0xcd6>)
   14988:	ldr	r2, [pc, #112]	; (149fc <rb_first_postorder@@Base+0xcda>)
   1498a:	add	r3, pc
   1498c:	str	r3, [sp, #8]
   1498e:	ldr	r3, [pc, #112]	; (14a00 <rb_first_postorder@@Base+0xcde>)
   14990:	add	r2, pc
   14992:	str	r1, [sp, #12]
   14994:	add	r3, pc
   14996:	str	r3, [sp, #4]
   14998:	movw	r3, #1380	; 0x564
   1499c:	str	r3, [sp, #0]
   1499e:	ldr	r3, [pc, #100]	; (14a04 <rb_first_postorder@@Base+0xce2>)
   149a0:	ldr	r0, [r0, #0]
   149a2:	add	r3, pc
   149a4:	blx	8a64 <__fprintf_chk@plt+0x4>
   149a8:	bl	13e58 <rb_first_postorder@@Base+0x136>
   149ac:	blx	8b84 <abort@plt>
   149b0:	ldr	r1, [pc, #84]	; (14a08 <rb_first_postorder@@Base+0xce6>)
   149b2:	add	r1, pc
   149b4:	b.n	14932 <rb_first_postorder@@Base+0xc10>
   149b6:	add	sp, #328	; 0x148
   149b8:	pop	{r4, pc}
   149ba:	nop
   149bc:	lsls	r2, r4, #19
   149be:	movs	r5, r0
   149c0:	lsls	r0, r5, #8
   149c2:	movs	r0, r0
   149c4:	lsls	r4, r3, #19
   149c6:	movs	r5, r0
   149c8:	cbnz	r3, 149d0 <rb_first_postorder@@Base+0xcae>
   149ca:	movs	r2, r0
   149cc:	lsls	r6, r5, #18
   149ce:	movs	r5, r0
   149d0:			; <UNDEFINED> instruction: 0xb8f1
   149d2:	movs	r2, r0
   149d4:			; <UNDEFINED> instruction: 0xb8e7
   149d6:	movs	r2, r0
   149d8:			; <UNDEFINED> instruction: 0xb8dd
   149da:	movs	r2, r0
   149dc:			; <UNDEFINED> instruction: 0xb8d3
   149de:	movs	r2, r0
   149e0:	strb	r5, [r0, #15]
   149e2:	movs	r2, r0
   149e4:	cbnz	r0, 14a4c <btrfs_list_setup_print_column@@Base+0x40>
   149e6:	movs	r2, r0
   149e8:	ldr	r3, [r4, r3]
   149ea:	movs	r2, r0
   149ec:	ldr	r3, [r1, r3]
   149ee:	movs	r2, r0
   149f0:	strb	r5, [r2, #14]
   149f2:	movs	r2, r0
   149f4:	lsls	r0, r7, #8
   149f6:	movs	r0, r0
   149f8:	strb	r1, [r6, #13]
   149fa:	movs	r2, r0
   149fc:	strb	r2, [r2, r4]
   149fe:	movs	r2, r0
   14a00:	strb	r1, [r0, #22]
   14a02:	movs	r2, r0
   14a04:	strb	r2, [r7, #12]
   14a06:	movs	r2, r0
   14a08:	cbnz	r6, 14a4e <btrfs_list_setup_print_column@@Base+0x42>
   14a0a:	movs	r2, r0

00014a0c <btrfs_list_setup_print_column@@Base>:
   14a0c:	cmp	r0, #10
   14a0e:	push	{r3, lr}
   14a10:	bls.n	14a22 <btrfs_list_setup_print_column@@Base+0x16>
   14a12:	ldr	r1, [pc, #56]	; (14a4c <btrfs_list_setup_print_column@@Base+0x40>)
   14a14:	movs	r2, #126	; 0x7e
   14a16:	ldr	r0, [pc, #56]	; (14a50 <btrfs_list_setup_print_column@@Base+0x44>)
   14a18:	add	r1, pc
   14a1a:	adds	r1, #23
   14a1c:	add	r0, pc
   14a1e:	bl	14858 <rb_first_postorder@@Base+0xb36>
   14a22:	beq.n	14a34 <btrfs_list_setup_print_column@@Base+0x28>
   14a24:	ldr	r3, [pc, #44]	; (14a54 <btrfs_list_setup_print_column@@Base+0x48>)
   14a26:	movs	r2, #12
   14a28:	add	r3, pc
   14a2a:	mla	r0, r2, r0, r3
   14a2e:	movs	r3, #1
   14a30:	str	r3, [r0, #8]
   14a32:	pop	{r3, pc}
   14a34:	ldr	r2, [pc, #32]	; (14a58 <btrfs_list_setup_print_column@@Base+0x4c>)
   14a36:	movs	r3, #0
   14a38:	movs	r1, #1
   14a3a:	add	r2, pc
   14a3c:	adds	r3, #1
   14a3e:	str	r1, [r2, #8]
   14a40:	cmp	r3, #10
   14a42:	add.w	r2, r2, #12
   14a46:	bne.n	14a3c <btrfs_list_setup_print_column@@Base+0x30>
   14a48:	b.n	14a32 <btrfs_list_setup_print_column@@Base+0x26>
   14a4a:	nop
   14a4c:	strb	r5, [r7, #19]
   14a4e:	movs	r2, r0
   14a50:	strb	r0, [r6, #11]
   14a52:	movs	r2, r0
   14a54:	asrs	r0, r7, #27
   14a56:	movs	r5, r0
   14a58:	asrs	r6, r4, #27
   14a5a:	movs	r5, r0

00014a5c <btrfs_list_alloc_comparer_set@@Base>:
   14a5c:	push	{r4, lr}
   14a5e:	movs	r1, #72	; 0x48
   14a60:	ldr	r4, [pc, #36]	; (14a88 <btrfs_list_alloc_comparer_set@@Base+0x2c>)
   14a62:	movs	r0, #1
   14a64:	add	r4, pc
   14a66:	blx	8588 <calloc@plt+0x4>
   14a6a:	cbnz	r0, 14a80 <btrfs_list_alloc_comparer_set@@Base+0x24>
   14a6c:	ldr	r3, [pc, #28]	; (14a8c <btrfs_list_alloc_comparer_set@@Base+0x30>)
   14a6e:	ldr	r0, [pc, #32]	; (14a90 <btrfs_list_alloc_comparer_set@@Base+0x34>)
   14a70:	ldr	r3, [r4, r3]
   14a72:	add	r0, pc
   14a74:	ldr	r1, [r3, #0]
   14a76:	blx	8b6c <fputs@plt+0x4>
   14a7a:	movs	r0, #1
   14a7c:	blx	8934 <exit@plt>
   14a80:	movs	r2, #8
   14a82:	str	r2, [r0, #0]
   14a84:	pop	{r4, pc}
   14a86:	nop
   14a88:	lsls	r4, r3, #12
   14a8a:	movs	r5, r0
   14a8c:	lsls	r0, r7, #8
   14a8e:	movs	r0, r0
   14a90:	strb	r1, [r7, #6]
   14a92:	movs	r2, r0

00014a94 <btrfs_list_get_default_subvolume@@Base>:
   14a94:	push	{r4, r5, r6, r7, lr}
   14a96:	mov	r5, r1
   14a98:	ldr	r1, [pc, #184]	; (14b54 <btrfs_list_get_default_subvolume@@Base+0xc0>)
   14a9a:	sub.w	sp, sp, #4096	; 0x1000
   14a9e:	ldr	r2, [pc, #184]	; (14b58 <btrfs_list_get_default_subvolume@@Base+0xc4>)
   14aa0:	sub	sp, #12
   14aa2:	add	r1, pc
   14aa4:	add.w	r3, sp, #4096	; 0x1000
   14aa8:	add	r7, sp, #8
   14aaa:	adds	r3, #4
   14aac:	ldr	r2, [r1, r2]
   14aae:	mov	r4, sp
   14ab0:	mov	r6, r0
   14ab2:	mov	r0, r4
   14ab4:	ldr	r2, [r2, #0]
   14ab6:	str	r2, [r3, #0]
   14ab8:	mov.w	r2, #0
   14abc:	movs	r1, #0
   14abe:	mov.w	r2, #4096	; 0x1000
   14ac2:	blx	89bc <memset@plt+0x4>
   14ac6:	movs	r2, #1
   14ac8:	movs	r3, #0
   14aca:	ldr	r1, [pc, #132]	; (14b50 <btrfs_list_get_default_subvolume@@Base+0xbc>)
   14acc:	strd	r2, r3, [r7, #-8]
   14ad0:	mov	r0, r6
   14ad2:	movs	r2, #6
   14ad4:	movs	r3, #1
   14ad6:	str	r3, [r7, #56]	; 0x38
   14ad8:	movs	r3, #0
   14ada:	strd	r2, r3, [r7, #8]
   14ade:	strd	r2, r3, [r4, #8]
   14ae2:	mov.w	r2, #4294967295	; 0xffffffff
   14ae6:	movs	r3, #84	; 0x54
   14ae8:	strd	r3, r3, [r7, #48]	; 0x30
   14aec:	mov.w	r3, #4294967295	; 0xffffffff
   14af0:	strd	r2, r3, [r7, #24]
   14af4:	strd	r2, r3, [r7, #40]	; 0x28
   14af8:	mov	r2, r4
   14afa:	blx	87b4 <ioctl@plt>
   14afe:	cmp	r0, #0
   14b00:	blt.n	14b28 <btrfs_list_get_default_subvolume@@Base+0x94>
   14b02:	ldr	r3, [r7, #56]	; 0x38
   14b04:	cbz	r3, 14b42 <btrfs_list_get_default_subvolume@@Base+0xae>
   14b06:	ldr	r3, [r7, #120]	; 0x78
   14b08:	cmp	r3, #84	; 0x54
   14b0a:	bne.n	14b42 <btrfs_list_get_default_subvolume@@Base+0xae>
   14b0c:	ldr	r0, [pc, #76]	; (14b5c <btrfs_list_get_default_subvolume@@Base+0xc8>)
   14b0e:	add.w	r1, sp, #166	; 0xa6
   14b12:	ldrh.w	r2, [r7, #155]	; 0x9b
   14b16:	add	r0, pc
   14b18:	blx	8b78 <strncmp@plt>
   14b1c:	cbnz	r0, 14b42 <btrfs_list_get_default_subvolume@@Base+0xae>
   14b1e:	ldrd	r2, r3, [r7, #128]	; 0x80
   14b22:	movs	r0, #0
   14b24:	strd	r2, r3, [r5]
   14b28:	ldr	r1, [pc, #52]	; (14b60 <btrfs_list_get_default_subvolume@@Base+0xcc>)
   14b2a:	add.w	r3, sp, #4096	; 0x1000
   14b2e:	ldr	r2, [pc, #40]	; (14b58 <btrfs_list_get_default_subvolume@@Base+0xc4>)
   14b30:	adds	r3, #4
   14b32:	add	r1, pc
   14b34:	ldr	r2, [r1, r2]
   14b36:	ldr	r1, [r2, #0]
   14b38:	ldr	r2, [r3, #0]
   14b3a:	eors	r1, r2
   14b3c:	beq.n	14b48 <btrfs_list_get_default_subvolume@@Base+0xb4>
   14b3e:	blx	8708 <__stack_chk_fail@plt>
   14b42:	movs	r2, #0
   14b44:	movs	r3, #0
   14b46:	b.n	14b22 <btrfs_list_get_default_subvolume@@Base+0x8e>
   14b48:	add.w	sp, sp, #4096	; 0x1000
   14b4c:	add	sp, #12
   14b4e:	pop	{r4, r5, r6, r7, pc}
   14b50:	str	r4, [sp, #68]	; 0x44
   14b52:	beq.n	14b56 <btrfs_list_get_default_subvolume@@Base+0xc2>
   14b54:	lsls	r6, r3, #11
   14b56:	movs	r5, r0
   14b58:	lsls	r0, r5, #8
   14b5a:	movs	r0, r0
   14b5c:	strb	r6, [r3, #8]
   14b5e:	movs	r2, r0
   14b60:	lsls	r6, r1, #9
   14b62:	movs	r5, r0

00014b64 <btrfs_list_alloc_filter_set@@Base>:
   14b64:	push	{r4, lr}
   14b66:	mov.w	r1, #432	; 0x1b0
   14b6a:	ldr	r4, [pc, #36]	; (14b90 <btrfs_list_alloc_filter_set@@Base+0x2c>)
   14b6c:	movs	r0, #1
   14b6e:	add	r4, pc
   14b70:	blx	8588 <calloc@plt+0x4>
   14b74:	cbnz	r0, 14b8a <btrfs_list_alloc_filter_set@@Base+0x26>
   14b76:	ldr	r3, [pc, #28]	; (14b94 <btrfs_list_alloc_filter_set@@Base+0x30>)
   14b78:	ldr	r0, [pc, #28]	; (14b98 <btrfs_list_alloc_filter_set@@Base+0x34>)
   14b7a:	ldr	r3, [r4, r3]
   14b7c:	add	r0, pc
   14b7e:	ldr	r1, [r3, #0]
   14b80:	blx	8b6c <fputs@plt+0x4>
   14b84:	movs	r0, #1
   14b86:	blx	8934 <exit@plt>
   14b8a:	movs	r2, #26
   14b8c:	str	r2, [r0, #0]
   14b8e:	pop	{r4, pc}
   14b90:	lsls	r2, r2, #8
   14b92:	movs	r5, r0
   14b94:	lsls	r0, r7, #8
   14b96:	movs	r0, r0
   14b98:	strb	r7, [r5, #2]
   14b9a:	movs	r2, r0

00014b9c <btrfs_list_setup_filter@@Base>:
   14b9c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   14ba0:	mov	r9, r0
   14ba2:	ldr	r4, [r0, #0]
   14ba4:	mov	r6, r1
   14ba6:	ldr.w	sl, [pc, #208]	; 14c78 <btrfs_list_setup_filter@@Base+0xdc>
   14baa:	mov	r8, r2
   14bac:	mov	r7, r3
   14bae:	add	sl, pc
   14bb0:	cbnz	r4, 14bc4 <btrfs_list_setup_filter@@Base+0x28>
   14bb2:	ldr	r1, [pc, #200]	; (14c7c <btrfs_list_setup_filter@@Base+0xe0>)
   14bb4:	movw	r2, #1210	; 0x4ba
   14bb8:	ldr	r0, [pc, #196]	; (14c80 <btrfs_list_setup_filter@@Base+0xe4>)
   14bba:	add	r1, pc
   14bbc:	adds	r1, #53	; 0x35
   14bbe:	add	r0, pc
   14bc0:	bl	14858 <rb_first_postorder@@Base+0xb36>
   14bc4:	cmp	r1, #12
   14bc6:	bls.n	14bd8 <btrfs_list_setup_filter@@Base+0x3c>
   14bc8:	ldr	r1, [pc, #184]	; (14c84 <btrfs_list_setup_filter@@Base+0xe8>)
   14bca:	movw	r2, #1211	; 0x4bb
   14bce:	ldr	r0, [pc, #184]	; (14c88 <btrfs_list_setup_filter@@Base+0xec>)
   14bd0:	add	r1, pc
   14bd2:	adds	r1, #53	; 0x35
   14bd4:	add	r0, pc
   14bd6:	b.n	14bc0 <btrfs_list_setup_filter@@Base+0x24>
   14bd8:	ldrd	r3, r1, [r4]
   14bdc:	cmp	r1, r3
   14bde:	ble.n	14bf0 <btrfs_list_setup_filter@@Base+0x54>
   14be0:	ldr	r1, [pc, #168]	; (14c8c <btrfs_list_setup_filter@@Base+0xf0>)
   14be2:	movw	r2, #1212	; 0x4bc
   14be6:	ldr	r0, [pc, #168]	; (14c90 <btrfs_list_setup_filter@@Base+0xf4>)
   14be8:	add	r1, pc
   14bea:	adds	r1, #53	; 0x35
   14bec:	add	r0, pc
   14bee:	b.n	14bc0 <btrfs_list_setup_filter@@Base+0x24>
   14bf0:	bne.n	14c3a <btrfs_list_setup_filter@@Base+0x9e>
   14bf2:	adds	r1, #27
   14bf4:	mov	r0, r4
   14bf6:	lsls	r1, r1, #4
   14bf8:	blx	8724 <realloc@plt+0x4>
   14bfc:	mov	r5, r0
   14bfe:	cbnz	r0, 14c1c <btrfs_list_setup_filter@@Base+0x80>
   14c00:	ldr	r3, [pc, #144]	; (14c94 <btrfs_list_setup_filter@@Base+0xf8>)
   14c02:	ldr	r0, [pc, #148]	; (14c98 <btrfs_list_setup_filter@@Base+0xfc>)
   14c04:	ldr.w	r3, [sl, r3]
   14c08:	add	r0, pc
   14c0a:	ldr	r1, [r3, #0]
   14c0c:	blx	8b6c <fputs@plt+0x4>
   14c10:	mov	r0, r4
   14c12:	blx	8620 <free@plt+0x4>
   14c16:	movs	r0, #1
   14c18:	blx	8934 <exit@plt>
   14c1c:	ldr	r0, [r0, #0]
   14c1e:	mov.w	r2, #416	; 0x1a0
   14c22:	movs	r1, #0
   14c24:	mov	r4, r5
   14c26:	adds	r0, #1
   14c28:	add.w	r0, r5, r0, lsl #4
   14c2c:	blx	89bc <memset@plt+0x4>
   14c30:	ldr	r3, [r5, #0]
   14c32:	adds	r3, #26
   14c34:	str	r3, [r5, #0]
   14c36:	str.w	r5, [r9]
   14c3a:	ldr	r0, [r4, #4]
   14c3c:	add.w	r3, r4, r0, lsl #4
   14c40:	lsls	r1, r0, #4
   14c42:	ldr	r2, [r3, #16]
   14c44:	cbz	r2, 14c56 <btrfs_list_setup_filter@@Base+0xba>
   14c46:	ldr	r1, [pc, #84]	; (14c9c <btrfs_list_setup_filter@@Base+0x100>)
   14c48:	movw	r2, #1234	; 0x4d2
   14c4c:	ldr	r0, [pc, #80]	; (14ca0 <btrfs_list_setup_filter@@Base+0x104>)
   14c4e:	add	r1, pc
   14c50:	adds	r1, #53	; 0x35
   14c52:	add	r0, pc
   14c54:	b.n	14bc0 <btrfs_list_setup_filter@@Base+0x24>
   14c56:	cmp	r6, #12
   14c58:	add	r1, r4
   14c5a:	add.w	r0, r0, #1
   14c5e:	itt	eq
   14c60:	moveq	r2, #1
   14c62:	streq	r2, [r4, #8]
   14c64:	ldr	r2, [pc, #60]	; (14ca4 <btrfs_list_setup_filter@@Base+0x108>)
   14c66:	add	r2, pc
   14c68:	ldr.w	r2, [r2, r6, lsl #2]
   14c6c:	str	r2, [r3, #16]
   14c6e:	strd	r8, r7, [r1, #24]
   14c72:	str	r0, [r4, #4]
   14c74:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   14c78:	lsls	r2, r2, #7
   14c7a:	movs	r5, r0
   14c7c:	strb	r3, [r3, #13]
   14c7e:	movs	r2, r0
   14c80:	strb	r3, [r2, r5]
   14c82:	movs	r2, r0
   14c84:	strb	r5, [r0, #13]
   14c86:	movs	r2, r0
   14c88:	strb	r0, [r5, #5]
   14c8a:	movs	r2, r0
   14c8c:	strb	r5, [r5, #12]
   14c8e:	movs	r2, r0
   14c90:	strb	r7, [r6, r6]
   14c92:	movs	r2, r0
   14c94:	lsls	r0, r7, #8
   14c96:	movs	r0, r0
   14c98:	strb	r3, [r4, #0]
   14c9a:	movs	r2, r0
   14c9c:	strb	r7, [r0, #11]
   14c9e:	movs	r2, r0
   14ca0:	strb	r5, [r5, r5]
   14ca2:	movs	r2, r0
   14ca4:	smlad	r0, lr, r4, r0

00014ca8 <btrfs_list_find_updated_files@@Base>:
   14ca8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14cac:	mov	r7, r2
   14cae:	vpush	{d8-d9}
   14cb2:	mov	r6, r3
   14cb4:	ldr	r1, [pc, #904]	; (15040 <btrfs_list_find_updated_files@@Base+0x398>)
   14cb6:	mov.w	r9, #4096	; 0x1000
   14cba:	ldr	r2, [pc, #904]	; (15044 <btrfs_list_find_updated_files@@Base+0x39c>)
   14cbc:	add	r1, pc
   14cbe:	vmov	s16, r0
   14cc2:	sub.w	sp, sp, #12480	; 0x30c0
   14cc6:	sub	sp, #20
   14cc8:	ldr	r2, [r1, r2]
   14cca:	add.w	r3, sp, #12480	; 0x30c0
   14cce:	add.w	r8, sp, #200	; 0xc8
   14cd2:	ldr	r2, [r2, #0]
   14cd4:	str	r2, [r3, #12]
   14cd6:	mov.w	r2, #0
   14cda:	adds	r3, #12
   14cdc:	add	r3, sp, #144	; 0x90
   14cde:	movs	r2, #53	; 0x35
   14ce0:	movs	r1, #0
   14ce2:	str	r3, [sp, #40]	; 0x28
   14ce4:	mov	r0, r3
   14ce6:	add	r4, sp, #208	; 0xd0
   14ce8:	blx	89bc <memset@plt+0x4>
   14cec:	mov	r2, r9
   14cee:	movs	r1, #0
   14cf0:	mov	r0, r8
   14cf2:	blx	89bc <memset@plt+0x4>
   14cf6:	movs	r3, #108	; 0x6c
   14cf8:	str.w	r3, [r8, #60]	; 0x3c
   14cfc:	add.w	r3, sp, #12544	; 0x3100
   14d00:	adds	r3, #8
   14d02:	add.w	r5, sp, #4288	; 0x10c0
   14d06:	adds	r5, #16
   14d08:	strd	r7, r6, [r4, #-8]
   14d0c:	sub.w	fp, r5, #8
   14d10:	ldrd	r3, r4, [r3]
   14d14:	mov	r2, r9
   14d16:	movs	r1, #0
   14d18:	mov	r0, fp
   14d1a:	mov.w	r6, #4294967295	; 0xffffffff
   14d1e:	mov.w	r7, #4294967295	; 0xffffffff
   14d22:	strd	r3, r4, [r8, #40]	; 0x28
   14d26:	strd	r6, r7, [r8, #16]
   14d2a:	movs	r4, #0
   14d2c:	strd	r6, r7, [r8, #32]
   14d30:	strd	r6, r7, [r8, #48]	; 0x30
   14d34:	str.w	r9, [r8, #64]	; 0x40
   14d38:	blx	89bc <memset@plt+0x4>
   14d3c:	vmov	r0, s16
   14d40:	mov	r2, fp
   14d42:	ldr	r1, [pc, #756]	; (15038 <btrfs_list_find_updated_files@@Base+0x390>)
   14d44:	mov.w	r3, #256	; 0x100
   14d48:	strd	r3, r4, [fp, #8]
   14d4c:	blx	87b4 <ioctl@plt>
   14d50:	movs	r4, #0
   14d52:	mov.w	r3, #256	; 0x100
   14d56:	cmp	r0, #0
   14d58:	bge.n	14dda <btrfs_list_find_updated_files@@Base+0x132>
   14d5a:	ldr	r0, [pc, #748]	; (15048 <btrfs_list_find_updated_files@@Base+0x3a0>)
   14d5c:	mov	r2, r3
   14d5e:	mov	r3, r4
   14d60:	add	r0, pc
   14d62:	bl	17b7c <__btrfs_error@@Base>
   14d66:	movs	r3, #0
   14d68:	movs	r4, #0
   14d6a:	strd	r3, r4, [sp, #56]	; 0x38
   14d6e:	movs	r3, #0
   14d70:	movs	r2, #0
   14d72:	strd	r2, r3, [sp, #72]	; 0x48
   14d76:	movs	r4, #0
   14d78:	strd	r2, r3, [sp, #88]	; 0x58
   14d7c:	mov	r7, r4
   14d7e:	ldr	r3, [pc, #716]	; (1504c <btrfs_list_find_updated_files@@Base+0x3a4>)
   14d80:	add	r3, pc
   14d82:	vmov	s18, r3
   14d86:	vmov	r0, s16
   14d8a:	mov	r2, r8
   14d8c:	ldr	r1, [pc, #684]	; (1503c <btrfs_list_find_updated_files@@Base+0x394>)
   14d8e:	blx	87b4 <ioctl@plt>
   14d92:	subs	r3, r0, #0
   14d94:	vmov	s17, r3
   14d98:	bge.w	14f08 <btrfs_list_find_updated_files@@Base+0x260>
   14d9c:	ldr	r0, [pc, #688]	; (15050 <btrfs_list_find_updated_files@@Base+0x3a8>)
   14d9e:	add	r0, pc
   14da0:	bl	17b7c <__btrfs_error@@Base>
   14da4:	mov	r0, r7
   14da6:	blx	8620 <free@plt+0x4>
   14daa:	mov	r0, r4
   14dac:	blx	8620 <free@plt+0x4>
   14db0:	ldr	r1, [pc, #672]	; (15054 <btrfs_list_find_updated_files@@Base+0x3ac>)
   14db2:	ldrd	r2, r3, [sp, #56]	; 0x38
   14db6:	movs	r0, #1
   14db8:	add	r1, pc
   14dba:	blx	8a30 <__printf_chk@plt+0x4>
   14dbe:	ldr	r1, [pc, #664]	; (15058 <btrfs_list_find_updated_files@@Base+0x3b0>)
   14dc0:	ldr	r2, [pc, #640]	; (15044 <btrfs_list_find_updated_files@@Base+0x39c>)
   14dc2:	add.w	r3, sp, #12480	; 0x30c0
   14dc6:	add	r1, pc
   14dc8:	adds	r3, #12
   14dca:	ldr	r2, [r1, r2]
   14dcc:	ldr	r1, [r2, #0]
   14dce:	ldr	r2, [r3, #0]
   14dd0:	eors	r1, r2
   14dd2:	beq.w	152b2 <btrfs_list_find_updated_files@@Base+0x60a>
   14dd6:	blx	8708 <__stack_chk_fail@plt>
   14dda:	add.w	sl, sp, #8384	; 0x20c0
   14dde:	mov	r2, r9
   14de0:	add.w	sl, sl, #16
   14de4:	movs	r1, #0
   14de6:	sub.w	r4, sl, #8
   14dea:	mov	r0, r4
   14dec:	blx	89bc <memset@plt+0x4>
   14df0:	ldrd	r2, r3, [r5, #-8]
   14df4:	movs	r0, #1
   14df6:	movs	r1, #0
   14df8:	strd	r0, r1, [sl, #-8]
   14dfc:	strd	r2, r3, [r4, #8]
   14e00:	strd	r2, r3, [r4, #16]
   14e04:	movs	r3, #132	; 0x84
   14e06:	movs	r2, #0
   14e08:	strd	r3, r3, [r4, #56]	; 0x38
   14e0c:	movs	r3, #0
   14e0e:	strd	r2, r3, [sp, #56]	; 0x38
   14e12:	ldr	r3, [sp, #40]	; 0x28
   14e14:	strd	r6, r7, [r4, #32]
   14e18:	sub.w	r5, r3, #32
   14e1c:	strd	r6, r7, [r4, #48]	; 0x30
   14e20:	str.w	r9, [r4, #64]	; 0x40
   14e24:	vmov	r0, s16
   14e28:	mov	r2, r4
   14e2a:	ldr	r1, [pc, #528]	; (1503c <btrfs_list_find_updated_files@@Base+0x394>)
   14e2c:	blx	87b4 <ioctl@plt>
   14e30:	cmp	r0, #0
   14e32:	bge.n	14e3e <btrfs_list_find_updated_files@@Base+0x196>
   14e34:	ldr	r0, [pc, #548]	; (1505c <btrfs_list_find_updated_files@@Base+0x3b4>)
   14e36:	add	r0, pc
   14e38:	bl	17b7c <__btrfs_error@@Base>
   14e3c:	b.n	14d66 <btrfs_list_find_updated_files@@Base+0xbe>
   14e3e:	ldr.w	ip, [r4, #64]	; 0x40
   14e42:	cmp.w	ip, #0
   14e46:	beq.n	14d6e <btrfs_list_find_updated_files@@Base+0xc6>
   14e48:	movs	r7, #0
   14e4a:	add.w	r3, sl, #96	; 0x60
   14e4e:	mov	r6, r7
   14e50:	str	r3, [sp, #40]	; 0x28
   14e52:	add.w	r3, sp, #8448	; 0x2100
   14e56:	adds	r3, #48	; 0x30
   14e58:	str	r3, [sp, #48]	; 0x30
   14e5a:	ldr	r3, [sp, #40]	; 0x28
   14e5c:	mov	lr, r5
   14e5e:	add	r3, r6
   14e60:	add.w	r9, r3, #32
   14e64:	ldr	r0, [r3, #0]
   14e66:	adds	r3, #8
   14e68:	ldr.w	r1, [r3, #-4]
   14e6c:	cmp	r3, r9
   14e6e:	mov	r2, lr
   14e70:	stmia	r2!, {r0, r1}
   14e72:	mov	lr, r2
   14e74:	bne.n	14e64 <btrfs_list_find_updated_files@@Base+0x1bc>
   14e76:	ldrd	r0, r1, [r5, #16]
   14e7a:	add.w	lr, r6, #32
   14e7e:	ldrd	r2, r3, [r5, #8]
   14e82:	ldr.w	r9, [r5, #24]
   14e86:	strd	r0, r1, [r4, #24]
   14e8a:	ldrd	r0, r1, [fp]
   14e8e:	ldr	r6, [r5, #28]
   14e90:	cmp	r1, r3
   14e92:	strd	r2, r3, [r4, #8]
   14e96:	it	eq
   14e98:	cmpeq	r0, r2
   14e9a:	add	r6, lr
   14e9c:	str.w	r9, [r4, #56]	; 0x38
   14ea0:	bcs.n	14ed6 <btrfs_list_find_updated_files@@Base+0x22e>
   14ea2:	ldrd	r0, r1, [r4, #24]
   14ea6:	adds	r6, r1, #1
   14ea8:	it	eq
   14eaa:	cmpeq.w	r0, #4294967295	; 0xffffffff
   14eae:	beq.w	14d6e <btrfs_list_find_updated_files@@Base+0xc6>
   14eb2:	adds	r2, r0, #1
   14eb4:	adc.w	r3, r1, #0
   14eb8:	strd	r2, r3, [r4, #24]
   14ebc:	ldr	r3, [r4, #56]	; 0x38
   14ebe:	cmp	r3, #132	; 0x84
   14ec0:	bne.w	14d6e <btrfs_list_find_updated_files@@Base+0xc6>
   14ec4:	ldrd	r0, r1, [r4, #8]
   14ec8:	ldrd	r2, r3, [fp]
   14ecc:	cmp	r1, r3
   14ece:	it	eq
   14ed0:	cmpeq	r0, r2
   14ed2:	beq.n	14e24 <btrfs_list_find_updated_files@@Base+0x17c>
   14ed4:	b.n	14d6e <btrfs_list_find_updated_files@@Base+0xc6>
   14ed6:	cmp	r3, r1
   14ed8:	it	eq
   14eda:	cmpeq	r2, r0
   14edc:	bne.n	14f00 <btrfs_list_find_updated_files@@Base+0x258>
   14ede:	cmp.w	r9, #132	; 0x84
   14ee2:	bne.n	14f00 <btrfs_list_find_updated_files@@Base+0x258>
   14ee4:	ldr	r3, [sp, #48]	; 0x30
   14ee6:	ldrd	r0, r1, [sp, #56]	; 0x38
   14eea:	add	lr, r3
   14eec:	ldr.w	r2, [lr, #160]	; 0xa0
   14ef0:	ldr.w	r3, [lr, #164]	; 0xa4
   14ef4:	cmp	r1, r3
   14ef6:	it	eq
   14ef8:	cmpeq	r0, r2
   14efa:	it	cc
   14efc:	strdcc	r2, r3, [sp, #56]	; 0x38
   14f00:	adds	r7, #1
   14f02:	cmp	r7, ip
   14f04:	bne.n	14e5a <btrfs_list_find_updated_files@@Base+0x1b2>
   14f06:	b.n	14ea2 <btrfs_list_find_updated_files@@Base+0x1fa>
   14f08:	ldr.w	r3, [r8, #64]	; 0x40
   14f0c:	cmp	r3, #0
   14f0e:	beq.w	14da4 <btrfs_list_find_updated_files@@Base+0xfc>
   14f12:	movs	r3, #0
   14f14:	str	r3, [sp, #84]	; 0x54
   14f16:	mov	r5, r3
   14f18:	add	r3, sp, #304	; 0x130
   14f1a:	str	r3, [sp, #108]	; 0x6c
   14f1c:	ldr.w	r3, [r8, #64]	; 0x40
   14f20:	ldr	r2, [sp, #84]	; 0x54
   14f22:	cmp	r3, r2
   14f24:	bhi.n	14f4a <btrfs_list_find_updated_files@@Base+0x2a2>
   14f26:	ldrd	r0, r1, [r8, #24]
   14f2a:	mov.w	r3, #4096	; 0x1000
   14f2e:	str.w	r3, [r8, #64]	; 0x40
   14f32:	adds	r2, r1, #1
   14f34:	it	eq
   14f36:	cmpeq.w	r0, #4294967295	; 0xffffffff
   14f3a:	beq.w	15260 <btrfs_list_find_updated_files@@Base+0x5b8>
   14f3e:	adds	r2, r0, #1
   14f40:	adc.w	r3, r1, #0
   14f44:	strd	r2, r3, [r8, #24]
   14f48:	b.n	14d86 <btrfs_list_find_updated_files@@Base+0xde>
   14f4a:	ldr	r3, [sp, #108]	; 0x6c
   14f4c:	add.w	sl, sp, #112	; 0x70
   14f50:	add	r3, r5
   14f52:	mov	r6, sl
   14f54:	add.w	ip, r3, #32
   14f58:	ldr	r0, [r3, #0]
   14f5a:	adds	r3, #8
   14f5c:	ldr.w	r1, [r3, #-4]
   14f60:	cmp	r3, ip
   14f62:	mov	r2, r6
   14f64:	stmia	r2!, {r0, r1}
   14f66:	mov	r6, r2
   14f68:	bne.n	14f58 <btrfs_list_find_updated_files@@Base+0x2b0>
   14f6a:	add.w	r3, r5, #32
   14f6e:	str	r3, [sp, #104]	; 0x68
   14f70:	ldr.w	r3, [sl, #28]
   14f74:	str	r3, [sp, #96]	; 0x60
   14f76:	cmp	r3, #0
   14f78:	beq.n	15028 <btrfs_list_find_updated_files@@Base+0x380>
   14f7a:	ldrd	r2, r3, [sp, #104]	; 0x68
   14f7e:	adds	r5, r3, r2
   14f80:	ldr.w	r3, [sl, #24]
   14f84:	str	r3, [sp, #100]	; 0x64
   14f86:	ldrd	r2, r3, [sl, #8]
   14f8a:	strd	r2, r3, [sp, #40]	; 0x28
   14f8e:	ldr	r3, [sp, #100]	; 0x64
   14f90:	cmp	r3, #108	; 0x6c
   14f92:	bne.w	15222 <btrfs_list_find_updated_files@@Base+0x57a>
   14f96:	ldr	r3, [r5, #0]
   14f98:	add.w	r1, sp, #12544	; 0x3100
   14f9c:	adds	r1, #8
   14f9e:	str	r3, [sp, #48]	; 0x30
   14fa0:	ldr	r3, [r5, #4]
   14fa2:	ldrd	r0, r1, [r1]
   14fa6:	str	r3, [sp, #52]	; 0x34
   14fa8:	ldrd	r2, r3, [sp, #48]	; 0x30
   14fac:	cmp	r3, r1
   14fae:	it	eq
   14fb0:	cmpeq	r2, r0
   14fb2:	bcc.w	15222 <btrfs_list_find_updated_files@@Base+0x57a>
   14fb6:	ldrd	r2, r3, [sp, #72]	; 0x48
   14fba:	ldrd	r0, r1, [sp, #40]	; 0x28
   14fbe:	cmp	r3, r1
   14fc0:	it	eq
   14fc2:	cmpeq	r2, r0
   14fc4:	bne.n	1502c <btrfs_list_find_updated_files@@Base+0x384>
   14fc6:	cmp	r4, #0
   14fc8:	bne.w	1513e <btrfs_list_find_updated_files@@Base+0x496>
   14fcc:	mov.w	r2, #4096	; 0x1000
   14fd0:	movs	r1, #0
   14fd2:	mov	r0, fp
   14fd4:	blx	89bc <memset@plt+0x4>
   14fd8:	ldrd	r3, r4, [sp, #40]	; 0x28
   14fdc:	movs	r1, #12
   14fde:	mov.w	r2, #4294967295	; 0xffffffff
   14fe2:	str.w	r1, [fp, #60]	; 0x3c
   14fe6:	strd	r3, r4, [fp, #8]
   14fea:	strd	r3, r4, [fp, #16]
   14fee:	mov.w	r3, #4294967295	; 0xffffffff
   14ff2:	str.w	r1, [fp, #56]	; 0x38
   14ff6:	strd	r2, r3, [fp, #32]
   14ffa:	strd	r2, r3, [fp, #48]	; 0x30
   14ffe:	movs	r3, #1
   15000:	vmov	r0, s16
   15004:	mov	r2, fp
   15006:	ldr	r1, [pc, #52]	; (1503c <btrfs_list_find_updated_files@@Base+0x394>)
   15008:	str.w	r3, [fp, #64]	; 0x40
   1500c:	blx	87b4 <ioctl@plt>
   15010:	cmp	r0, #0
   15012:	bge.n	15064 <btrfs_list_find_updated_files@@Base+0x3bc>
   15014:	ldr	r0, [pc, #72]	; (15060 <btrfs_list_find_updated_files@@Base+0x3b8>)
   15016:	add	r0, pc
   15018:	bl	17b7c <__btrfs_error@@Base>
   1501c:	ldrd	r3, r4, [sp, #40]	; 0x28
   15020:	strd	r3, r4, [sp, #72]	; 0x48
   15024:	movs	r4, #0
   15026:	b.n	15222 <btrfs_list_find_updated_files@@Base+0x57a>
   15028:	add	r5, sp, #144	; 0x90
   1502a:	b.n	14f80 <btrfs_list_find_updated_files@@Base+0x2d8>
   1502c:	cmp	r4, #0
   1502e:	beq.n	14fcc <btrfs_list_find_updated_files@@Base+0x324>
   15030:	mov	r0, r4
   15032:	blx	8620 <free@plt+0x4>
   15036:	b.n	14fcc <btrfs_list_find_updated_files@@Base+0x324>
   15038:	str	r4, [sp, #72]	; 0x48
   1503a:	beq.n	1503e <btrfs_list_find_updated_files@@Base+0x396>
   1503c:	str	r4, [sp, #68]	; 0x44
   1503e:	beq.n	15042 <btrfs_list_find_updated_files@@Base+0x39a>
   15040:	lsls	r4, r0, #3
   15042:	movs	r5, r0
   15044:	lsls	r0, r5, #8
   15046:	movs	r0, r0
   15048:	ldr	r5, [r7, #124]	; 0x7c
   1504a:	movs	r2, r0
   1504c:	strb	r0, [r1, #1]
   1504e:	movs	r2, r0
   15050:	ldr	r1, [r4, #112]	; 0x70
   15052:	movs	r2, r0
   15054:	strb	r2, [r7, #1]
   15056:	movs	r2, r0
   15058:	vaddl.u<illegal width 64>	q0, d10, d4
   1505c:	ldr	r1, [r1, #104]	; 0x68
   1505e:	movs	r2, r0
   15060:	ldr	r1, [r5, #72]	; 0x48
   15062:	movs	r2, r0
   15064:	ldr.w	r3, [fp, #64]	; 0x40
   15068:	cmp	r3, #0
   1506a:	beq.n	1501c <btrfs_list_find_updated_files@@Base+0x374>
   1506c:	ldr.w	r3, [fp, #128]	; 0x80
   15070:	cmp	r3, #12
   15072:	bne.n	1501c <btrfs_list_find_updated_files@@Base+0x374>
   15074:	ldrd	r3, r4, [fp, #120]	; 0x78
   15078:	add.w	r0, sp, #4288	; 0x10c0
   1507c:	adds	r0, #16
   1507e:	ldrh.w	r1, [fp, #144]	; 0x90
   15082:	adds	r0, #138	; 0x8a
   15084:	strd	r3, r4, [sp, #64]	; 0x40
   15088:	blx	8650 <strndup@plt>
   1508c:	ldrd	r3, r4, [sp, #64]	; 0x40
   15090:	ldrd	r1, r2, [sp, #88]	; 0x58
   15094:	cmp	r4, r2
   15096:	it	eq
   15098:	cmpeq	r3, r1
   1509a:	mov	r6, r0
   1509c:	bne.n	150a4 <btrfs_list_find_updated_files@@Base+0x3fc>
   1509e:	cmp	r7, #0
   150a0:	bne.w	151e6 <btrfs_list_find_updated_files@@Base+0x53e>
   150a4:	add.w	r4, sp, #8384	; 0x20c0
   150a8:	mov.w	r2, #4096	; 0x1000
   150ac:	adds	r4, #8
   150ae:	movs	r1, #0
   150b0:	mov	r0, r4
   150b2:	blx	89bc <memset@plt+0x4>
   150b6:	ldrd	r2, r3, [sp, #64]	; 0x40
   150ba:	vmov	r0, s16
   150be:	ldr	r1, [pc, #516]	; (152c4 <btrfs_list_find_updated_files@@Base+0x61c>)
   150c0:	strd	r2, r3, [r4, #8]
   150c4:	mov	r2, r4
   150c6:	blx	87b4 <ioctl@plt>
   150ca:	subs.w	r9, r0, #0
   150ce:	bge.n	15114 <btrfs_list_find_updated_files@@Base+0x46c>
   150d0:	ldr	r0, [pc, #500]	; (152c8 <btrfs_list_find_updated_files@@Base+0x620>)
   150d2:	ldrd	r2, r3, [sp, #64]	; 0x40
   150d6:	add	r0, pc
   150d8:	bl	17b7c <__btrfs_error@@Base>
   150dc:	mov	r0, r9
   150de:	blx	8940 <strlen@plt>
   150e2:	mov	r4, r0
   150e4:	mov	r0, r6
   150e6:	blx	8940 <strlen@plt>
   150ea:	add	r0, r4
   150ec:	adds	r0, #1
   150ee:	blx	8870 <malloc@plt+0x4>
   150f2:	mov	r4, r0
   150f4:	cbz	r0, 15104 <btrfs_list_find_updated_files@@Base+0x45c>
   150f6:	mov	r1, r9
   150f8:	blx	87f0 <strcpy@plt>
   150fc:	mov	r1, r6
   150fe:	mov	r0, r4
   15100:	blx	87a8 <strcat@plt+0x4>
   15104:	cbz	r7, 15110 <btrfs_list_find_updated_files@@Base+0x468>
   15106:	cmp	r9, r7
   15108:	beq.n	1512a <btrfs_list_find_updated_files@@Base+0x482>
   1510a:	mov	r0, r7
   1510c:	blx	8620 <free@plt+0x4>
   15110:	mov	r7, r9
   15112:	b.n	1512a <btrfs_list_find_updated_files@@Base+0x482>
   15114:	ldrb.w	r9, [r4, #16]
   15118:	cmp.w	r9, #0
   1511c:	bne.n	151c8 <btrfs_list_find_updated_files@@Base+0x520>
   1511e:	mov	r0, r6
   15120:	blx	86f0 <strdup@plt+0x4>
   15124:	mov	r4, r0
   15126:	cmp	r7, #0
   15128:	bne.n	1510a <btrfs_list_find_updated_files@@Base+0x462>
   1512a:	mov	r0, r6
   1512c:	blx	8620 <free@plt+0x4>
   15130:	cmp	r4, #0
   15132:	beq.w	1524e <btrfs_list_find_updated_files@@Base+0x5a6>
   15136:	ldrd	r2, r3, [sp, #64]	; 0x40
   1513a:	strd	r2, r3, [sp, #88]	; 0x58
   1513e:	ldrd	r2, r3, [sl, #16]
   15142:	ldrb	r6, [r5, #20]
   15144:	ldrb.w	r9, [r5, #16]
   15148:	strd	r2, r3, [sp, #64]	; 0x40
   1514c:	subs	r3, r6, #1
   1514e:	cmp	r3, #1
   15150:	bhi.n	151ea <btrfs_list_find_updated_files@@Base+0x542>
   15152:	ldr.w	r3, [r5, #45]	; 0x2d
   15156:	ldr.w	r0, [r5, #21]
   1515a:	ldr.w	r1, [r5, #25]
   1515e:	ldr.w	lr, [r5, #37]	; 0x25
   15162:	ldr.w	ip, [r5, #41]	; 0x29
   15166:	str	r3, [sp, #72]	; 0x48
   15168:	ldr.w	r5, [r5, #49]	; 0x31
   1516c:	ldrd	r2, r3, [sp, #48]	; 0x30
   15170:	strd	r0, r1, [sp, #16]
   15174:	movs	r0, #1
   15176:	vmov	r1, s18
   1517a:	strd	r2, r3, [sp, #32]
   1517e:	ldr	r3, [sp, #72]	; 0x48
   15180:	strd	lr, ip, [sp, #24]
   15184:	strd	r3, r5, [sp, #8]
   15188:	ldrd	r2, r3, [sp, #64]	; 0x40
   1518c:	strd	r2, r3, [sp]
   15190:	ldrd	r2, r3, [sp, #40]	; 0x28
   15194:	blx	8a30 <__printf_chk@plt+0x4>
   15198:	cmp.w	r9, #0
   1519c:	beq.n	1528a <btrfs_list_find_updated_files@@Base+0x5e2>
   1519e:	ldr	r1, [pc, #300]	; (152cc <btrfs_list_find_updated_files@@Base+0x624>)
   151a0:	movs	r0, #1
   151a2:	add	r1, pc
   151a4:	blx	8a30 <__printf_chk@plt+0x4>
   151a8:	cmp	r6, #2
   151aa:	bne.n	15294 <btrfs_list_find_updated_files@@Base+0x5ec>
   151ac:	ldr	r2, [pc, #288]	; (152d0 <btrfs_list_find_updated_files@@Base+0x628>)
   151ae:	add	r2, pc
   151b0:	ldr	r1, [pc, #288]	; (152d4 <btrfs_list_find_updated_files@@Base+0x62c>)
   151b2:	add	r1, pc
   151b4:	movs	r0, #1
   151b6:	blx	8a30 <__printf_chk@plt+0x4>
   151ba:	ldr	r1, [pc, #284]	; (152d8 <btrfs_list_find_updated_files@@Base+0x630>)
   151bc:	mov	r2, r4
   151be:	movs	r0, #1
   151c0:	add	r1, pc
   151c2:	blx	8a30 <__printf_chk@plt+0x4>
   151c6:	b.n	1521a <btrfs_list_find_updated_files@@Base+0x572>
   151c8:	add.w	r0, sp, #8384	; 0x20c0
   151cc:	adds	r0, #24
   151ce:	blx	86f0 <strdup@plt+0x4>
   151d2:	mov	r9, r0
   151d4:	cmp	r0, #0
   151d6:	bne.n	150dc <btrfs_list_find_updated_files@@Base+0x434>
   151d8:	ldr	r0, [pc, #256]	; (152dc <btrfs_list_find_updated_files@@Base+0x634>)
   151da:	mvn.w	r9, #11
   151de:	add	r0, pc
   151e0:	blx	8760 <perror@plt>
   151e4:	b.n	150dc <btrfs_list_find_updated_files@@Base+0x434>
   151e6:	mov	r9, r7
   151e8:	b.n	150dc <btrfs_list_find_updated_files@@Base+0x434>
   151ea:	cbnz	r6, 151fc <btrfs_list_find_updated_files@@Base+0x554>
   151ec:	ldr	r3, [r5, #8]
   151ee:	mov	lr, r6
   151f0:	mov	ip, r6
   151f2:	mov	r0, r6
   151f4:	mov	r1, r6
   151f6:	str	r3, [sp, #72]	; 0x48
   151f8:	ldr	r5, [r5, #12]
   151fa:	b.n	1516c <btrfs_list_find_updated_files@@Base+0x4c4>
   151fc:	ldrd	r2, r3, [sp, #48]	; 0x30
   15200:	mov	r1, r6
   15202:	ldr	r0, [pc, #220]	; (152e0 <btrfs_list_find_updated_files@@Base+0x638>)
   15204:	strd	r2, r3, [sp, #8]
   15208:	add	r0, pc
   1520a:	ldrd	r2, r3, [sp, #64]	; 0x40
   1520e:	strd	r2, r3, [sp]
   15212:	ldrd	r2, r3, [sp, #40]	; 0x28
   15216:	bl	17b7c <__btrfs_error@@Base>
   1521a:	ldrd	r2, r3, [sp, #40]	; 0x28
   1521e:	strd	r2, r3, [sp, #72]	; 0x48
   15222:	ldr	r2, [sp, #104]	; 0x68
   15224:	ldr	r3, [sp, #96]	; 0x60
   15226:	add	r3, r2
   15228:	mov	r5, r3
   1522a:	ldrd	r2, r3, [sp, #40]	; 0x28
   1522e:	strd	r2, r3, [r8, #8]
   15232:	ldrd	r2, r3, [sl, #16]
   15236:	strd	r2, r3, [r8, #24]
   1523a:	ldr	r3, [sp, #100]	; 0x64
   1523c:	str.w	r3, [r8, #56]	; 0x38
   15240:	ldr	r3, [sp, #84]	; 0x54
   15242:	adds	r3, #1
   15244:	str	r3, [sp, #84]	; 0x54
   15246:	b.n	14f1c <btrfs_list_find_updated_files@@Base+0x274>
   15248:	ldr	r2, [pc, #152]	; (152e4 <btrfs_list_find_updated_files@@Base+0x63c>)
   1524a:	add	r2, pc
   1524c:	b.n	1529c <btrfs_list_find_updated_files@@Base+0x5f4>
   1524e:	ldrd	r2, r3, [sp, #40]	; 0x28
   15252:	strd	r2, r3, [sp, #72]	; 0x48
   15256:	ldrd	r2, r3, [sp, #64]	; 0x40
   1525a:	strd	r2, r3, [sp, #88]	; 0x58
   1525e:	b.n	15222 <btrfs_list_find_updated_files@@Base+0x57a>
   15260:	ldrd	r0, r1, [r8, #8]
   15264:	adds	r3, r1, #1
   15266:	it	eq
   15268:	cmpeq.w	r0, #4294967295	; 0xffffffff
   1526c:	beq.w	14da4 <btrfs_list_find_updated_files@@Base+0xfc>
   15270:	adds	r2, r0, #1
   15272:	adc.w	r3, r1, #0
   15276:	strd	r2, r3, [r8, #8]
   1527a:	movs	r3, #0
   1527c:	movs	r2, #0
   1527e:	strd	r2, r3, [r8, #24]
   15282:	movs	r3, #0
   15284:	str.w	r3, [r8, #56]	; 0x38
   15288:	b.n	14d86 <btrfs_list_find_updated_files@@Base+0xde>
   1528a:	cmp	r6, #2
   1528c:	bne.n	152a2 <btrfs_list_find_updated_files@@Base+0x5fa>
   1528e:	ldr	r2, [pc, #88]	; (152e8 <btrfs_list_find_updated_files@@Base+0x640>)
   15290:	add	r2, pc
   15292:	b.n	151b0 <btrfs_list_find_updated_files@@Base+0x508>
   15294:	cmp	r6, #0
   15296:	bne.n	151ba <btrfs_list_find_updated_files@@Base+0x512>
   15298:	ldr	r2, [pc, #80]	; (152ec <btrfs_list_find_updated_files@@Base+0x644>)
   1529a:	add	r2, pc
   1529c:	ldr	r1, [pc, #80]	; (152f0 <btrfs_list_find_updated_files@@Base+0x648>)
   1529e:	add	r1, pc
   152a0:	b.n	151b4 <btrfs_list_find_updated_files@@Base+0x50c>
   152a2:	cmp	r6, #0
   152a4:	beq.n	15248 <btrfs_list_find_updated_files@@Base+0x5a0>
   152a6:	ldr	r1, [pc, #76]	; (152f4 <btrfs_list_find_updated_files@@Base+0x64c>)
   152a8:	movs	r0, #1
   152aa:	add	r1, pc
   152ac:	blx	8a30 <__printf_chk@plt+0x4>
   152b0:	b.n	151ba <btrfs_list_find_updated_files@@Base+0x512>
   152b2:	vmov	r0, s17
   152b6:	add.w	sp, sp, #12480	; 0x30c0
   152ba:	add	sp, #20
   152bc:	vpop	{d8-d9}
   152c0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152c4:	str	r4, [sp, #72]	; 0x48
   152c6:	beq.n	152ca <btrfs_list_find_updated_files@@Base+0x622>
   152c8:	ldr	r7, [r0, #72]	; 0x48
   152ca:	movs	r2, r0
   152cc:	ldr	r4, [sp, #832]	; 0x340
   152ce:	movs	r2, r0
   152d0:	ldr	r5, [r5, #56]	; 0x38
   152d2:	movs	r2, r0
   152d4:	ldr	r7, [r4, #68]	; 0x44
   152d6:	movs	r2, r0
   152d8:	ldrb	r1, [r4, r6]
   152da:	movs	r2, r0
   152dc:	ldr	r5, [r3, #40]	; 0x28
   152de:	movs	r2, r0
   152e0:	ldr	r6, [r7, #52]	; 0x34
   152e2:	movs	r2, r0
   152e4:	strh	r3, [r0, r7]
   152e6:	movs	r2, r0
   152e8:	strh	r5, [r7, r5]
   152ea:	movs	r2, r0
   152ec:	ldr	r1, [r0, #44]	; 0x2c
   152ee:	movs	r2, r0
   152f0:	ldr	r6, [r0, #56]	; 0x38
   152f2:	movs	r2, r0
   152f4:	ldr	r3, [r0, #56]	; 0x38
   152f6:	movs	r2, r0

000152f8 <btrfs_list_parse_sort_string@@Base>:
   152f8:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152fc:	mov	r4, r1
   152fe:	ldr.w	sl, [pc, #324]	; 15444 <btrfs_list_parse_sort_string@@Base+0x14c>
   15302:	ldr.w	fp, [pc, #324]	; 15448 <btrfs_list_parse_sort_string@@Base+0x150>
   15306:	ldr	r7, [pc, #324]	; (1544c <btrfs_list_parse_sort_string@@Base+0x154>)
   15308:	add	sl, pc
   1530a:	ldr	r3, [pc, #324]	; (15450 <btrfs_list_parse_sort_string@@Base+0x158>)
   1530c:	add	fp, pc
   1530e:	add	r7, pc
   15310:	add	r3, pc
   15312:	str	r3, [sp, #0]
   15314:	mov	r1, sl
   15316:	blx	8a94 <strtok@plt>
   1531a:	mov	r9, r0
   1531c:	cbz	r0, 15350 <btrfs_list_parse_sort_string@@Base+0x58>
   1531e:	ldr	r3, [sp, #0]
   15320:	add.w	r8, r0, #1
   15324:	add.w	r5, r3, #132	; 0x84
   15328:	mov	r6, r5
   1532a:	b.n	15344 <btrfs_list_parse_sort_string@@Base+0x4c>
   1532c:	mov	r1, r9
   1532e:	mov	r0, r2
   15330:	str	r2, [sp, #4]
   15332:	blx	85ac <strcmp@plt>
   15336:	cbz	r0, 15356 <btrfs_list_parse_sort_string@@Base+0x5e>
   15338:	ldr	r2, [sp, #4]
   1533a:	mov	r1, r8
   1533c:	mov	r0, r2
   1533e:	blx	85ac <strcmp@plt>
   15342:	cbz	r0, 15356 <btrfs_list_parse_sort_string@@Base+0x5e>
   15344:	ldr.w	r2, [r6], #4
   15348:	cmp	r2, #0
   1534a:	bne.n	1532c <btrfs_list_parse_sort_string@@Base+0x34>
   1534c:	mov.w	r0, #4294967295	; 0xffffffff
   15350:	add	sp, #12
   15352:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15356:	ldrb.w	r2, [r9]
   1535a:	cmp	r2, #43	; 0x2b
   1535c:	bne.n	15366 <btrfs_list_parse_sort_string@@Base+0x6e>
   1535e:	add.w	r9, r9, #1
   15362:	movs	r6, #0
   15364:	b.n	15370 <btrfs_list_parse_sort_string@@Base+0x78>
   15366:	cmp	r2, #45	; 0x2d
   15368:	bne.n	15362 <btrfs_list_parse_sort_string@@Base+0x6a>
   1536a:	add.w	r9, r9, #1
   1536e:	movs	r6, #1
   15370:	mov.w	r8, #0
   15374:	ldr.w	r1, [r5], #4
   15378:	mov	r0, r9
   1537a:	blx	85ac <strcmp@plt>
   1537e:	cbz	r0, 1538e <btrfs_list_parse_sort_string@@Base+0x96>
   15380:	add.w	r8, r8, #1
   15384:	cmp.w	r8, #4
   15388:	bne.n	15374 <btrfs_list_parse_sort_string@@Base+0x7c>
   1538a:	mov.w	r8, #4294967295	; 0xffffffff
   1538e:	ldr	r5, [r4, #0]
   15390:	cbnz	r5, 153a2 <btrfs_list_parse_sort_string@@Base+0xaa>
   15392:	ldr	r1, [pc, #192]	; (15454 <btrfs_list_parse_sort_string@@Base+0x15c>)
   15394:	movs	r2, #251	; 0xfb
   15396:	ldr	r0, [pc, #192]	; (15458 <btrfs_list_parse_sort_string@@Base+0x160>)
   15398:	add	r1, pc
   1539a:	adds	r1, #77	; 0x4d
   1539c:	add	r0, pc
   1539e:	bl	14858 <rb_first_postorder@@Base+0xb36>
   153a2:	cmp.w	r8, #3
   153a6:	bls.n	153b6 <btrfs_list_parse_sort_string@@Base+0xbe>
   153a8:	ldr	r1, [pc, #176]	; (1545c <btrfs_list_parse_sort_string@@Base+0x164>)
   153aa:	movs	r2, #252	; 0xfc
   153ac:	ldr	r0, [pc, #176]	; (15460 <btrfs_list_parse_sort_string@@Base+0x168>)
   153ae:	add	r1, pc
   153b0:	adds	r1, #77	; 0x4d
   153b2:	add	r0, pc
   153b4:	b.n	1539e <btrfs_list_parse_sort_string@@Base+0xa6>
   153b6:	ldrd	r3, r1, [r5]
   153ba:	cmp	r1, r3
   153bc:	ble.n	153cc <btrfs_list_parse_sort_string@@Base+0xd4>
   153be:	ldr	r1, [pc, #164]	; (15464 <btrfs_list_parse_sort_string@@Base+0x16c>)
   153c0:	movs	r2, #253	; 0xfd
   153c2:	ldr	r0, [pc, #164]	; (15468 <btrfs_list_parse_sort_string@@Base+0x170>)
   153c4:	add	r1, pc
   153c6:	adds	r1, #77	; 0x4d
   153c8:	add	r0, pc
   153ca:	b.n	1539e <btrfs_list_parse_sort_string@@Base+0xa6>
   153cc:	bne.n	15416 <btrfs_list_parse_sort_string@@Base+0x11e>
   153ce:	adds	r1, #9
   153d0:	mov	r0, r5
   153d2:	lsls	r1, r1, #3
   153d4:	blx	8724 <realloc@plt+0x4>
   153d8:	mov	r9, r0
   153da:	cbnz	r0, 153f6 <btrfs_list_parse_sort_string@@Base+0xfe>
   153dc:	ldr	r3, [pc, #140]	; (1546c <btrfs_list_parse_sort_string@@Base+0x174>)
   153de:	ldr	r0, [pc, #144]	; (15470 <btrfs_list_parse_sort_string@@Base+0x178>)
   153e0:	ldr	r3, [r7, r3]
   153e2:	add	r0, pc
   153e4:	ldr	r1, [r3, #0]
   153e6:	blx	8b6c <fputs@plt+0x4>
   153ea:	mov	r0, r5
   153ec:	blx	8620 <free@plt+0x4>
   153f0:	movs	r0, #1
   153f2:	blx	8934 <exit@plt>
   153f6:	ldr	r0, [r0, #0]
   153f8:	movs	r2, #64	; 0x40
   153fa:	movs	r1, #0
   153fc:	mov	r5, r9
   153fe:	adds	r0, #1
   15400:	add.w	r0, r9, r0, lsl #3
   15404:	blx	89bc <memset@plt+0x4>
   15408:	ldr.w	r2, [r9]
   1540c:	adds	r2, #8
   1540e:	str.w	r2, [r9]
   15412:	str.w	r9, [r4]
   15416:	ldr	r3, [r5, #4]
   15418:	add.w	r1, r5, r3, lsl #3
   1541c:	ldr	r0, [r1, #8]
   1541e:	cbz	r0, 15430 <btrfs_list_parse_sort_string@@Base+0x138>
   15420:	ldr	r1, [pc, #80]	; (15474 <btrfs_list_parse_sort_string@@Base+0x17c>)
   15422:	movw	r2, #275	; 0x113
   15426:	ldr	r0, [pc, #80]	; (15478 <btrfs_list_parse_sort_string@@Base+0x180>)
   15428:	add	r1, pc
   1542a:	adds	r1, #77	; 0x4d
   1542c:	add	r0, pc
   1542e:	b.n	1539e <btrfs_list_parse_sort_string@@Base+0xa6>
   15430:	add.w	r8, fp, r8, lsl #2
   15434:	adds	r3, #1
   15436:	ldr.w	r2, [r8, #52]	; 0x34
   1543a:	strd	r2, r6, [r1, #8]
   1543e:	str	r3, [r5, #4]
   15440:	b.n	15314 <btrfs_list_parse_sort_string@@Base+0x1c>
   15442:	nop
   15444:	ldr	r7, [pc, #84]	; (1549c <btrfs_list_parse_filter_string@@Base+0x20>)
   15446:	movs	r2, r0
   15448:	eor.w	r0, r8, #8650752	; 0x840000
   1544c:			; <UNDEFINED> instruction: 0xfa720004
   15450:	lsrs	r0, r2, #24
   15452:	movs	r5, r0
   15454:	ldr	r5, [r7, #52]	; 0x34
   15456:	movs	r2, r0
   15458:	ldr	r5, [pc, #468]	; (15630 <btrfs_list_subvols_print@@Base+0x154>)
   1545a:	movs	r2, r0
   1545c:	ldr	r7, [r4, #52]	; 0x34
   1545e:	movs	r2, r0
   15460:	ldr	r1, [r3, #40]	; 0x28
   15462:	movs	r2, r0
   15464:	ldr	r1, [r2, #52]	; 0x34
   15466:	movs	r2, r0
   15468:	ldr	r5, [pc, #472]	; (15644 <btrfs_list_subvols_print@@Base+0x168>)
   1546a:	movs	r2, r0
   1546c:	lsls	r0, r7, #8
   1546e:	movs	r0, r0
   15470:	ldr	r1, [r1, #4]
   15472:	movs	r2, r0
   15474:	ldr	r5, [r5, #44]	; 0x2c
   15476:	movs	r2, r0
   15478:	ldr	r5, [pc, #176]	; (1552c <btrfs_list_subvols_print@@Base+0x50>)
   1547a:	movs	r2, r0

0001547c <btrfs_list_parse_filter_string@@Base>:
   1547c:	push	{r3, r4, r5, lr}
   1547e:	mov	r3, r0
   15480:	mov	r5, r2
   15482:	ldrb.w	r2, [r3], #1
   15486:	mov	r4, r1
   15488:	cmp	r2, #43	; 0x2b
   1548a:	beq.n	1549c <btrfs_list_parse_filter_string@@Base+0x20>
   1548c:	cmp	r2, #45	; 0x2d
   1548e:	beq.n	154b2 <btrfs_list_parse_filter_string@@Base+0x36>
   15490:	bl	17e3c <arg_strtou64@@Base>
   15494:	mov	r3, r1
   15496:	mov	r2, r0
   15498:	mov	r1, r5
   1549a:	b.n	154a8 <btrfs_list_parse_filter_string@@Base+0x2c>
   1549c:	mov	r0, r3
   1549e:	bl	17e3c <arg_strtou64@@Base>
   154a2:	mov	r3, r1
   154a4:	adds	r1, r5, #2
   154a6:	mov	r2, r0
   154a8:	mov	r0, r4
   154aa:	bl	14b9c <btrfs_list_setup_filter@@Base>
   154ae:	movs	r0, #0
   154b0:	pop	{r3, r4, r5, pc}
   154b2:	mov	r0, r3
   154b4:	bl	17e3c <arg_strtou64@@Base>
   154b8:	mov	r3, r1
   154ba:	mov	r2, r0
   154bc:	adds	r1, r5, #1
   154be:	b.n	154a8 <btrfs_list_parse_filter_string@@Base+0x2c>

000154c0 <btrfs_list_get_path_rootid@@Base>:
   154c0:	push	{r4, lr}
   154c2:	bl	17ee4 <lookup_path_rootid@@Base>
   154c6:	subs	r4, r0, #0
   154c8:	bge.n	154d2 <btrfs_list_get_path_rootid@@Base+0x12>
   154ca:	ldr	r0, [pc, #12]	; (154d8 <btrfs_list_get_path_rootid@@Base+0x18>)
   154cc:	add	r0, pc
   154ce:	bl	17b7c <__btrfs_error@@Base>
   154d2:	mov	r0, r4
   154d4:	pop	{r4, pc}
   154d6:	nop
   154d8:	ldr	r6, [r3, #24]
   154da:	movs	r2, r0

000154dc <btrfs_list_subvols_print@@Base>:
   154dc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154e0:	sub	sp, #76	; 0x4c
   154e2:	mov	r9, r2
   154e4:	mov	r7, r3
   154e6:	ldrd	r3, r2, [sp, #112]	; 0x70
   154ea:	mov	r8, r1
   154ec:	ldr	r1, [pc, #828]	; (1582c <btrfs_list_subvols_print@@Base+0x350>)
   154ee:	mov.w	sl, #0
   154f2:	mov.w	fp, #0
   154f6:	mov	r4, r0
   154f8:	str	r2, [sp, #12]
   154fa:	add	r1, pc
   154fc:	ldr	r2, [pc, #816]	; (15830 <btrfs_list_subvols_print@@Base+0x354>)
   154fe:	ldr	r2, [r1, r2]
   15500:	ldr	r2, [r2, #0]
   15502:	str	r2, [sp, #68]	; 0x44
   15504:	mov.w	r2, #0
   15508:	strd	sl, fp, [sp, #40]	; 0x28
   1550c:	cmp	r3, #0
   1550e:	bne.n	155ea <btrfs_list_subvols_print@@Base+0x10e>
   15510:	add	r5, sp, #32
   15512:	mov	r0, r4
   15514:	mov	r1, r5
   15516:	bl	14830 <rb_first_postorder@@Base+0xb0e>
   1551a:	mov	r6, r0
   1551c:	cmp	r0, #0
   1551e:	bne.n	155f6 <btrfs_list_subvols_print@@Base+0x11a>
   15520:	ldrd	r3, r4, [sp, #40]	; 0x28
   15524:	str	r0, [sp, #36]	; 0x24
   15526:	mov	r0, r5
   15528:	strd	r3, r4, [sp, #16]
   1552c:	bl	13c56 <rb_last@@Base>
   15530:	ldr	r3, [pc, #768]	; (15834 <btrfs_list_subvols_print@@Base+0x358>)
   15532:	add	r3, pc
   15534:	str	r3, [sp, #24]
   15536:	mov	r4, r0
   15538:	cmp	r4, #0
   1553a:	bne.n	1560c <btrfs_list_subvols_print@@Base+0x130>
   1553c:	cmp	r7, #1
   1553e:	bne.n	155c4 <btrfs_list_subvols_print@@Base+0xe8>
   15540:	ldr	r5, [pc, #756]	; (15838 <btrfs_list_subvols_print@@Base+0x35c>)
   15542:	ldr.w	r9, [pc, #760]	; 1583c <btrfs_list_subvols_print@@Base+0x360>
   15546:	add	r5, pc
   15548:	add	r9, pc
   1554a:	mov	r8, r5
   1554c:	ldr.w	r3, [r8, #8]
   15550:	cbz	r3, 1555e <btrfs_list_subvols_print@@Base+0x82>
   15552:	ldr.w	r2, [r8]
   15556:	mov	r1, r9
   15558:	movs	r0, #1
   1555a:	blx	8a30 <__printf_chk@plt+0x4>
   1555e:	cmp	r4, #9
   15560:	bne.n	15568 <btrfs_list_subvols_print@@Base+0x8c>
   15562:	movs	r0, #10
   15564:	blx	89cc <putchar@plt+0x4>
   15568:	adds	r4, #1
   1556a:	add.w	r8, r8, #12
   1556e:	cmp	r4, #10
   15570:	bne.n	1554c <btrfs_list_subvols_print@@Base+0x70>
   15572:	ldr.w	r9, [pc, #716]	; 15840 <btrfs_list_subvols_print@@Base+0x364>
   15576:	mov.w	r8, #0
   1557a:	ldr.w	sl, [pc, #712]	; 15844 <btrfs_list_subvols_print@@Base+0x368>
   1557e:	add	r9, pc
   15580:	add	sl, pc
   15582:	add.w	fp, sp, #48	; 0x30
   15586:	movs	r2, #20
   15588:	movs	r1, #0
   1558a:	mov	r0, fp
   1558c:	blx	89bc <memset@plt+0x4>
   15590:	ldr	r3, [r5, #8]
   15592:	cbz	r3, 155ac <btrfs_list_subvols_print@@Base+0xd0>
   15594:	ldr	r0, [r5, #0]
   15596:	blx	8940 <strlen@plt>
   1559a:	mov	r4, r0
   1559c:	subs	r4, #1
   1559e:	bcs.w	15734 <btrfs_list_subvols_print@@Base+0x258>
   155a2:	mov	r2, fp
   155a4:	mov	r1, sl
   155a6:	movs	r0, #1
   155a8:	blx	8a30 <__printf_chk@plt+0x4>
   155ac:	cmp.w	r8, #9
   155b0:	bne.n	155b8 <btrfs_list_subvols_print@@Base+0xdc>
   155b2:	movs	r0, #10
   155b4:	blx	89cc <putchar@plt+0x4>
   155b8:	add.w	r8, r8, #1
   155bc:	adds	r5, #12
   155be:	cmp.w	r8, #10
   155c2:	bne.n	15582 <btrfs_list_subvols_print@@Base+0xa6>
   155c4:	add	r0, sp, #36	; 0x24
   155c6:	ldr.w	r9, [pc, #640]	; 15848 <btrfs_list_subvols_print@@Base+0x36c>
   155ca:	bl	13c46 <rb_first@@Base>
   155ce:	ldr.w	sl, [pc, #636]	; 1584c <btrfs_list_subvols_print@@Base+0x370>
   155d2:	add	r9, pc
   155d4:	add	sl, pc
   155d6:	mov	r4, r0
   155d8:	cmp	r4, #0
   155da:	bne.w	15740 <btrfs_list_subvols_print@@Base+0x264>
   155de:	ldr	r1, [pc, #624]	; (15850 <btrfs_list_subvols_print@@Base+0x374>)
   155e0:	add	r0, sp, #32
   155e2:	add	r1, pc
   155e4:	bl	17ffe <rb_free_nodes@@Base>
   155e8:	b.n	155f6 <btrfs_list_subvols_print@@Base+0x11a>
   155ea:	add	r1, sp, #40	; 0x28
   155ec:	bl	154c0 <btrfs_list_get_path_rootid@@Base>
   155f0:	mov	r6, r0
   155f2:	cmp	r0, #0
   155f4:	beq.n	15510 <btrfs_list_subvols_print@@Base+0x34>
   155f6:	ldr	r2, [pc, #604]	; (15854 <btrfs_list_subvols_print@@Base+0x378>)
   155f8:	ldr	r3, [pc, #564]	; (15830 <btrfs_list_subvols_print@@Base+0x354>)
   155fa:	add	r2, pc
   155fc:	ldr	r3, [r2, r3]
   155fe:	ldr	r2, [r3, #0]
   15600:	ldr	r3, [sp, #68]	; 0x44
   15602:	eors	r2, r3
   15604:	beq.w	15822 <btrfs_list_subvols_print@@Base+0x346>
   15608:	blx	8708 <__stack_chk_fail@plt>
   1560c:	ldrd	r2, r3, [sp, #16]
   15610:	add	r0, sp, #32
   15612:	mov	r1, r4
   15614:	bl	14300 <rb_first_postorder@@Base+0x5de>
   15618:	adds	r0, #2
   1561a:	bne.n	1563a <btrfs_list_subvols_print@@Base+0x15e>
   1561c:	ldrd	r2, r3, [r4, #24]
   15620:	cmp	r3, #0
   15622:	it	eq
   15624:	cmpeq	r2, #5
   15626:	beq.n	15664 <btrfs_list_subvols_print@@Base+0x188>
   15628:	ldr	r0, [pc, #556]	; (15858 <btrfs_list_subvols_print@@Base+0x37c>)
   1562a:	add	r0, pc
   1562c:	blx	86f0 <strdup@plt+0x4>
   15630:	movs	r3, #1
   15632:	str.w	r0, [r4, #148]	; 0x94
   15636:	str.w	r3, [r4, #152]	; 0x98
   1563a:	cmp.w	r8, #0
   1563e:	bne.n	15674 <btrfs_list_subvols_print@@Base+0x198>
   15640:	add	r5, sp, #36	; 0x24
   15642:	movs	r3, #0
   15644:	ldr.w	sl, [r5]
   15648:	cmp.w	sl, #0
   1564c:	bne.n	156b6 <btrfs_list_subvols_print@@Base+0x1da>
   1564e:	add.w	r0, r4, #12
   15652:	strd	r3, sl, [r4, #12]
   15656:	str.w	sl, [r4, #20]
   1565a:	add	r1, sp, #36	; 0x24
   1565c:	str	r0, [r5, #0]
   1565e:	bl	1392a <rb_insert_color@@Base>
   15662:	b.n	15680 <btrfs_list_subvols_print@@Base+0x1a4>
   15664:	ldr	r0, [pc, #500]	; (1585c <btrfs_list_subvols_print@@Base+0x380>)
   15666:	add	r0, pc
   15668:	blx	86f0 <strdup@plt+0x4>
   1566c:	movs	r3, #0
   1566e:	str.w	r0, [r4, #148]	; 0x94
   15672:	b.n	15636 <btrfs_list_subvols_print@@Base+0x15a>
   15674:	ldr.w	r2, [r8, #8]
   15678:	ldr.w	r3, [r4, #152]	; 0x98
   1567c:	cbz	r2, 1568a <btrfs_list_subvols_print@@Base+0x1ae>
   1567e:	cbnz	r3, 1568e <btrfs_list_subvols_print@@Base+0x1b2>
   15680:	mov	r0, r4
   15682:	bl	13c92 <rb_prev@@Base>
   15686:	mov	r4, r0
   15688:	b.n	15538 <btrfs_list_subvols_print@@Base+0x5c>
   1568a:	cmp	r3, #0
   1568c:	bne.n	15680 <btrfs_list_subvols_print@@Base+0x1a4>
   1568e:	mov	r5, r8
   15690:	mov.w	sl, #0
   15694:	ldr.w	r3, [r8, #4]
   15698:	cmp	sl, r3
   1569a:	bge.n	15640 <btrfs_list_subvols_print@@Base+0x164>
   1569c:	ldr	r1, [r5, #16]
   1569e:	cmp	r1, #0
   156a0:	beq.n	15640 <btrfs_list_subvols_print@@Base+0x164>
   156a2:	ldrd	r2, r3, [r5, #24]
   156a6:	mov	r0, r4
   156a8:	blx	r1
   156aa:	adds	r5, #16
   156ac:	cmp	r0, #0
   156ae:	beq.n	15680 <btrfs_list_subvols_print@@Base+0x1a4>
   156b0:	add.w	sl, sl, #1
   156b4:	b.n	15694 <btrfs_list_subvols_print@@Base+0x1b8>
   156b6:	sub.w	r1, sl, #12
   156ba:	cmp.w	r9, #0
   156be:	beq.n	156e4 <btrfs_list_subvols_print@@Base+0x208>
   156c0:	ldr.w	r3, [r9, #4]
   156c4:	cbz	r3, 156e4 <btrfs_list_subvols_print@@Base+0x208>
   156c6:	movs	r3, #0
   156c8:	str.w	r9, [sp, #8]
   156cc:	mov	fp, r3
   156ce:	str	r3, [sp, #4]
   156d0:	ldr.w	r3, [r9, #4]
   156d4:	ldr	r2, [sp, #4]
   156d6:	cmp	r2, r3
   156d8:	blt.n	156f8 <btrfs_list_subvols_print@@Base+0x21c>
   156da:	cmp.w	fp, #0
   156de:	bne.n	15680 <btrfs_list_subvols_print@@Base+0x1a4>
   156e0:	mov	r2, fp
   156e2:	b.n	156e6 <btrfs_list_subvols_print@@Base+0x20a>
   156e4:	movs	r2, #0
   156e6:	mov	r0, r4
   156e8:	bl	13d38 <rb_first_postorder@@Base+0x16>
   156ec:	cmp	r0, #0
   156ee:	bge.n	1572c <btrfs_list_subvols_print@@Base+0x250>
   156f0:	ldr	r5, [r5, #0]
   156f2:	adds	r5, #8
   156f4:	mov	r3, sl
   156f6:	b.n	15644 <btrfs_list_subvols_print@@Base+0x168>
   156f8:	ldr	r3, [sp, #8]
   156fa:	ldr	r3, [r3, #8]
   156fc:	cmp	r3, #0
   156fe:	beq.n	156da <btrfs_list_subvols_print@@Base+0x1fe>
   15700:	ldr	r2, [sp, #8]
   15702:	mov	r0, r4
   15704:	str	r1, [sp, #28]
   15706:	ldr	r2, [r2, #12]
   15708:	blx	r3
   1570a:	cmp	r0, #0
   1570c:	bne.w	1581c <btrfs_list_subvols_print@@Base+0x340>
   15710:	ldr	r2, [sp, #8]
   15712:	ldr	r1, [sp, #28]
   15714:	ldr.w	r3, [r2, #8]!
   15718:	str	r2, [sp, #8]
   1571a:	ldr	r2, [sp, #24]
   1571c:	cmp	r3, r2
   1571e:	it	eq
   15720:	moveq.w	fp, #1
   15724:	ldr	r3, [sp, #4]
   15726:	adds	r3, #1
   15728:	str	r3, [sp, #4]
   1572a:	b.n	156d0 <btrfs_list_subvols_print@@Base+0x1f4>
   1572c:	beq.n	15680 <btrfs_list_subvols_print@@Base+0x1a4>
   1572e:	ldr	r5, [r5, #0]
   15730:	adds	r5, #4
   15732:	b.n	156f4 <btrfs_list_subvols_print@@Base+0x218>
   15734:	movs	r2, #20
   15736:	mov	r1, r9
   15738:	mov	r0, fp
   1573a:	blx	8988 <__strcat_chk@plt>
   1573e:	b.n	1559c <btrfs_list_subvols_print@@Base+0xc0>
   15740:	ldrd	r2, r3, [r4, #12]
   15744:	sub.w	r5, r4, #12
   15748:	cmp	r3, #0
   1574a:	it	eq
   1574c:	cmpeq	r2, #5
   1574e:	beq.n	1579c <btrfs_list_subvols_print@@Base+0x2c0>
   15750:	cmp	r7, #1
   15752:	beq.n	157a6 <btrfs_list_subvols_print@@Base+0x2ca>
   15754:	cmp	r7, #2
   15756:	beq.n	157e6 <btrfs_list_subvols_print@@Base+0x30a>
   15758:	cbnz	r7, 1579c <btrfs_list_subvols_print@@Base+0x2c0>
   1575a:	ldr.w	fp, [pc, #260]	; 15860 <btrfs_list_subvols_print@@Base+0x384>
   1575e:	mov	r8, r7
   15760:	add	fp, pc
   15762:	ldr.w	r3, [fp, #8]
   15766:	cbz	r3, 15788 <btrfs_list_subvols_print@@Base+0x2ac>
   15768:	ldr.w	r2, [fp]
   1576c:	mov	r1, sl
   1576e:	movs	r0, #1
   15770:	blx	8a30 <__printf_chk@plt+0x4>
   15774:	mov	r1, r8
   15776:	mov	r0, r5
   15778:	bl	14894 <rb_first_postorder@@Base+0xb72>
   1577c:	cmp.w	r8, #9
   15780:	beq.n	15788 <btrfs_list_subvols_print@@Base+0x2ac>
   15782:	movs	r0, #32
   15784:	blx	89cc <putchar@plt+0x4>
   15788:	add.w	r8, r8, #1
   1578c:	add.w	fp, fp, #12
   15790:	cmp.w	r8, #10
   15794:	bne.n	15762 <btrfs_list_subvols_print@@Base+0x286>
   15796:	movs	r0, #10
   15798:	blx	89cc <putchar@plt+0x4>
   1579c:	mov	r0, r4
   1579e:	bl	13c66 <rb_next@@Base>
   157a2:	mov	r4, r0
   157a4:	b.n	155d8 <btrfs_list_subvols_print@@Base+0xfc>
   157a6:	ldr.w	r8, [pc, #188]	; 15864 <btrfs_list_subvols_print@@Base+0x388>
   157aa:	mov.w	fp, #0
   157ae:	add	r8, pc
   157b0:	ldr.w	r3, [r8, #8]
   157b4:	cbz	r3, 157d6 <btrfs_list_subvols_print@@Base+0x2fa>
   157b6:	mov	r1, fp
   157b8:	mov	r0, r5
   157ba:	bl	14894 <rb_first_postorder@@Base+0xb72>
   157be:	cmp.w	fp, #9
   157c2:	beq.n	157d6 <btrfs_list_subvols_print@@Base+0x2fa>
   157c4:	movs	r0, #9
   157c6:	blx	89cc <putchar@plt+0x4>
   157ca:	cmp.w	fp, #4
   157ce:	bne.n	157d6 <btrfs_list_subvols_print@@Base+0x2fa>
   157d0:	movs	r0, #9
   157d2:	blx	89cc <putchar@plt+0x4>
   157d6:	add.w	fp, fp, #1
   157da:	add.w	r8, r8, #12
   157de:	cmp.w	fp, #10
   157e2:	bne.n	157b0 <btrfs_list_subvols_print@@Base+0x2d4>
   157e4:	b.n	15796 <btrfs_list_subvols_print@@Base+0x2ba>
   157e6:	ldr.w	fp, [pc, #128]	; 15868 <btrfs_list_subvols_print@@Base+0x38c>
   157ea:	mov.w	r8, #0
   157ee:	add	fp, pc
   157f0:	ldr.w	r3, [fp, #8]
   157f4:	cbz	r3, 1580c <btrfs_list_subvols_print@@Base+0x330>
   157f6:	ldr	r3, [sp, #12]
   157f8:	cbz	r3, 15804 <btrfs_list_subvols_print@@Base+0x328>
   157fa:	mov	r2, r3
   157fc:	mov	r1, r9
   157fe:	movs	r0, #1
   15800:	blx	8a30 <__printf_chk@plt+0x4>
   15804:	mov	r1, r8
   15806:	mov	r0, r5
   15808:	bl	14894 <rb_first_postorder@@Base+0xb72>
   1580c:	add.w	r8, r8, #1
   15810:	add.w	fp, fp, #12
   15814:	cmp.w	r8, #10
   15818:	bne.n	157f0 <btrfs_list_subvols_print@@Base+0x314>
   1581a:	b.n	15796 <btrfs_list_subvols_print@@Base+0x2ba>
   1581c:	blt.w	156f0 <btrfs_list_subvols_print@@Base+0x214>
   15820:	b.n	1572e <btrfs_list_subvols_print@@Base+0x252>
   15822:	mov	r0, r6
   15824:	add	sp, #76	; 0x4c
   15826:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1582a:	nop
   1582c:	strb.w	r0, [r6, #4]
   15830:	lsls	r0, r5, #8
   15832:	movs	r0, r0
   15834:			; <UNDEFINED> instruction: 0xe803ffff
   15838:	lsrs	r2, r3, #15
   1583a:	movs	r5, r0
   1583c:	ldr	r6, [r2, #20]
   1583e:	movs	r2, r0
   15840:	ldr	r4, [pc, #652]	; (15ad0 <btrfs_list_path_for_root@@Base+0xb8>)
   15842:	movs	r2, r0
   15844:	ldr	r6, [r3, #16]
   15846:	movs	r2, r0
   15848:	add	r6, sp, #952	; 0x3b8
   1584a:	movs	r2, r0
   1584c:	ldr	r6, [r1, #12]
   1584e:	movs	r2, r0
   15850:	ldmia.w	pc!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
   15854:			; <UNDEFINED> instruction: 0xf7860004
   15858:	ldr	r3, [r4, #4]
   1585a:	movs	r2, r0
   1585c:	ldr	r7, [r5, #0]
   1585e:	movs	r2, r0
   15860:	lsrs	r0, r0, #7
   15862:	movs	r5, r0
   15864:	lsrs	r2, r6, #5
   15866:	movs	r5, r0
   15868:	lsrs	r2, r6, #4
   1586a:	movs	r5, r0

0001586c <btrfs_get_toplevel_subvol@@Base>:
   1586c:	ldr	r2, [pc, #152]	; (15908 <btrfs_get_toplevel_subvol@@Base+0x9c>)
   1586e:	ldr	r3, [pc, #156]	; (1590c <btrfs_get_toplevel_subvol@@Base+0xa0>)
   15870:	add	r2, pc
   15872:	push	{r4, r5, r6, r7, lr}
   15874:	sub	sp, #28
   15876:	ldr	r3, [r2, r3]
   15878:	mov	r5, r1
   1587a:	add	r1, sp, #8
   1587c:	mov	r7, r0
   1587e:	ldr	r3, [r3, #0]
   15880:	str	r3, [sp, #20]
   15882:	mov.w	r3, #0
   15886:	bl	154c0 <btrfs_list_get_path_rootid@@Base>
   1588a:	mov	r4, r0
   1588c:	cbnz	r0, 158e6 <btrfs_get_toplevel_subvol@@Base+0x7a>
   1588e:	add	r6, sp, #4
   15890:	mov	r0, r7
   15892:	mov	r1, r6
   15894:	bl	14830 <rb_first_postorder@@Base+0xb0e>
   15898:	mov	r4, r0
   1589a:	cbnz	r0, 158e6 <btrfs_get_toplevel_subvol@@Base+0x7a>
   1589c:	mov	r0, r6
   1589e:	bl	13c46 <rb_first@@Base>
   158a2:	ldrd	r2, r3, [r0, #24]
   158a6:	mov	r1, r0
   158a8:	cmp	r3, #0
   158aa:	it	eq
   158ac:	cmpeq	r2, #5
   158ae:	bne.n	158fa <btrfs_get_toplevel_subvol@@Base+0x8e>
   158b0:	ldr	r7, [pc, #92]	; (15910 <btrfs_get_toplevel_subvol@@Base+0xa4>)
   158b2:	movs	r2, #140	; 0x8c
   158b4:	mov	r0, r5
   158b6:	add	r7, pc
   158b8:	blx	866c <memcpy@plt+0x4>
   158bc:	mov	r0, r7
   158be:	blx	86f0 <strdup@plt+0x4>
   158c2:	str.w	r0, [r5, #140]	; 0x8c
   158c6:	ldr	r0, [pc, #76]	; (15914 <btrfs_get_toplevel_subvol@@Base+0xa8>)
   158c8:	add	r0, pc
   158ca:	blx	86f0 <strdup@plt+0x4>
   158ce:	str.w	r0, [r5, #144]	; 0x90
   158d2:	mov	r0, r7
   158d4:	blx	86f0 <strdup@plt+0x4>
   158d8:	ldr	r1, [pc, #60]	; (15918 <btrfs_get_toplevel_subvol@@Base+0xac>)
   158da:	add	r1, pc
   158dc:	str.w	r0, [r5, #148]	; 0x94
   158e0:	mov	r0, r6
   158e2:	bl	17ffe <rb_free_nodes@@Base>
   158e6:	ldr	r2, [pc, #52]	; (1591c <btrfs_get_toplevel_subvol@@Base+0xb0>)
   158e8:	ldr	r3, [pc, #32]	; (1590c <btrfs_get_toplevel_subvol@@Base+0xa0>)
   158ea:	add	r2, pc
   158ec:	ldr	r3, [r2, r3]
   158ee:	ldr	r2, [r3, #0]
   158f0:	ldr	r3, [sp, #20]
   158f2:	eors	r2, r3
   158f4:	beq.n	15900 <btrfs_get_toplevel_subvol@@Base+0x94>
   158f6:	blx	8708 <__stack_chk_fail@plt>
   158fa:	mvn.w	r4, #1
   158fe:	b.n	158e6 <btrfs_get_toplevel_subvol@@Base+0x7a>
   15900:	mov	r0, r4
   15902:	add	sp, #28
   15904:	pop	{r4, r5, r6, r7, pc}
   15906:	nop
   15908:	adds.w	r0, r0, #8650752	; 0x840000
   1590c:	lsls	r0, r5, #8
   1590e:	movs	r0, r0
   15910:	str	r3, [r6, #32]
   15912:	movs	r2, r0
   15914:	str	r5, [r7, #52]	; 0x34
   15916:	movs	r2, r0
   15918:	b.n	154aa <btrfs_list_parse_filter_string@@Base+0x2e>
   1591a:	vsri.64	d31, d6, #1
   1591e:	movs	r4, r0

00015920 <btrfs_get_subvol@@Base>:
   15920:	ldr	r2, [pc, #228]	; (15a08 <btrfs_get_subvol@@Base+0xe8>)
   15922:	ldr	r3, [pc, #232]	; (15a0c <btrfs_get_subvol@@Base+0xec>)
   15924:	add	r2, pc
   15926:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1592a:	sub	sp, #28
   1592c:	ldr	r3, [r2, r3]
   1592e:	mov	r6, r1
   15930:	add	r1, sp, #8
   15932:	mov	r4, r0
   15934:	ldr	r3, [r3, #0]
   15936:	str	r3, [sp, #20]
   15938:	mov.w	r3, #0
   1593c:	bl	154c0 <btrfs_list_get_path_rootid@@Base>
   15940:	mov	r5, r0
   15942:	cmp	r0, #0
   15944:	bne.n	159ca <btrfs_get_subvol@@Base+0xaa>
   15946:	add	r7, sp, #4
   15948:	mov	r0, r4
   1594a:	mov	r1, r7
   1594c:	bl	14830 <rb_first_postorder@@Base+0xb0e>
   15950:	mov	r5, r0
   15952:	cbnz	r0, 159ca <btrfs_get_subvol@@Base+0xaa>
   15954:	mov	r0, r7
   15956:	add.w	r9, r6, #92	; 0x5c
   1595a:	bl	13c46 <rb_first@@Base>
   1595e:	mov	r4, r0
   15960:	cbz	r4, 159c0 <btrfs_get_subvol@@Base+0xa0>
   15962:	ldrd	r2, r3, [sp, #8]
   15966:	mov	r1, r4
   15968:	mov	r0, r7
   1596a:	bl	14300 <rb_first_postorder@@Base+0x5de>
   1596e:	cmn.w	r0, #2
   15972:	mov	r8, r0
   15974:	bne.n	15982 <btrfs_get_subvol@@Base+0x62>
   15976:	mov	r0, r4
   15978:	bl	13c66 <rb_next@@Base>
   1597c:	mov	r4, r0
   1597e:	mov	r5, r8
   15980:	b.n	15960 <btrfs_get_subvol@@Base+0x40>
   15982:	movs	r2, #0
   15984:	mov	r1, r4
   15986:	mov	r0, r6
   15988:	bl	13d38 <rb_first_postorder@@Base+0x16>
   1598c:	cbnz	r0, 159de <btrfs_get_subvol@@Base+0xbe>
   1598e:	movs	r2, #140	; 0x8c
   15990:	mov	r1, r4
   15992:	mov	r0, r6
   15994:	blx	866c <memcpy@plt+0x4>
   15998:	ldr.w	r0, [r4, #140]	; 0x8c
   1599c:	cbnz	r0, 159f8 <btrfs_get_subvol@@Base+0xd8>
   1599e:	str.w	r0, [r6, #140]	; 0x8c
   159a2:	ldr.w	r0, [r4, #144]	; 0x90
   159a6:	cbz	r0, 159ac <btrfs_get_subvol@@Base+0x8c>
   159a8:	blx	86f0 <strdup@plt+0x4>
   159ac:	str.w	r0, [r6, #144]	; 0x90
   159b0:	ldr.w	r0, [r4, #148]	; 0x94
   159b4:	cbz	r0, 159ba <btrfs_get_subvol@@Base+0x9a>
   159b6:	blx	86f0 <strdup@plt+0x4>
   159ba:	movs	r5, #0
   159bc:	str.w	r0, [r6, #148]	; 0x94
   159c0:	ldr	r1, [pc, #76]	; (15a10 <btrfs_get_subvol@@Base+0xf0>)
   159c2:	mov	r0, r7
   159c4:	add	r1, pc
   159c6:	bl	17ffe <rb_free_nodes@@Base>
   159ca:	ldr	r2, [pc, #72]	; (15a14 <btrfs_get_subvol@@Base+0xf4>)
   159cc:	ldr	r3, [pc, #60]	; (15a0c <btrfs_get_subvol@@Base+0xec>)
   159ce:	add	r2, pc
   159d0:	ldr	r3, [r2, r3]
   159d2:	ldr	r2, [r3, #0]
   159d4:	ldr	r3, [sp, #20]
   159d6:	eors	r2, r3
   159d8:	beq.n	159fe <btrfs_get_subvol@@Base+0xde>
   159da:	blx	8708 <__stack_chk_fail@plt>
   159de:	add.w	r1, r4, #92	; 0x5c
   159e2:	mov	r0, r9
   159e4:	blx	873c <uuid_compare@plt>
   159e8:	cmp	r0, #0
   159ea:	beq.n	1598e <btrfs_get_subvol@@Base+0x6e>
   159ec:	mov	r0, r4
   159ee:	mov	r8, r5
   159f0:	bl	13c66 <rb_next@@Base>
   159f4:	mov	r4, r0
   159f6:	b.n	1597e <btrfs_get_subvol@@Base+0x5e>
   159f8:	blx	86f0 <strdup@plt+0x4>
   159fc:	b.n	1599e <btrfs_get_subvol@@Base+0x7e>
   159fe:	mov	r0, r5
   15a00:	add	sp, #28
   15a02:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   15a06:	nop
   15a08:	orrs.w	r0, ip, #8650752	; 0x840000
   15a0c:	lsls	r0, r5, #8
   15a0e:	movs	r0, r0
   15a10:	b.n	153ce <btrfs_list_parse_sort_string@@Base+0xd6>
   15a12:	vrsra.u64	d31, d18, #1
   15a16:	movs	r4, r0

00015a18 <btrfs_list_path_for_root@@Base>:
   15a18:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   15a1c:	mov	r6, r2
   15a1e:	ldr	r2, [pc, #168]	; (15ac8 <btrfs_list_path_for_root@@Base+0xb0>)
   15a20:	mov	r7, r3
   15a22:	ldr	r3, [pc, #168]	; (15acc <btrfs_list_path_for_root@@Base+0xb4>)
   15a24:	sub	sp, #28
   15a26:	add	r2, pc
   15a28:	add	r1, sp, #8
   15a2a:	mov	r5, r0
   15a2c:	ldr	r3, [r2, r3]
   15a2e:	ldr	r3, [r3, #0]
   15a30:	str	r3, [sp, #20]
   15a32:	mov.w	r3, #0
   15a36:	bl	154c0 <btrfs_list_get_path_rootid@@Base>
   15a3a:	mov	r9, r0
   15a3c:	cbz	r0, 15a54 <btrfs_list_path_for_root@@Base+0x3c>
   15a3e:	mov	r4, r0
   15a40:	ldr	r2, [pc, #140]	; (15ad0 <btrfs_list_path_for_root@@Base+0xb8>)
   15a42:	ldr	r3, [pc, #136]	; (15acc <btrfs_list_path_for_root@@Base+0xb4>)
   15a44:	add	r2, pc
   15a46:	ldr	r3, [r2, r3]
   15a48:	ldr	r2, [r3, #0]
   15a4a:	ldr	r3, [sp, #20]
   15a4c:	eors	r2, r3
   15a4e:	beq.n	15ac0 <btrfs_list_path_for_root@@Base+0xa8>
   15a50:	blx	8708 <__stack_chk_fail@plt>
   15a54:	add.w	r8, sp, #4
   15a58:	mov	r0, r5
   15a5a:	mov	r1, r8
   15a5c:	bl	1452a <rb_first_postorder@@Base+0x808>
   15a60:	subs	r4, r0, #0
   15a62:	blt.n	15a40 <btrfs_list_path_for_root@@Base+0x28>
   15a64:	mov	r1, r8
   15a66:	mov	r0, r5
   15a68:	bl	14504 <rb_first_postorder@@Base+0x7e2>
   15a6c:	subs	r4, r0, #0
   15a6e:	blt.n	15a40 <btrfs_list_path_for_root@@Base+0x28>
   15a70:	mov	r0, r8
   15a72:	mov	r4, r9
   15a74:	bl	13c56 <rb_last@@Base>
   15a78:	mov	r5, r0
   15a7a:	cbnz	r5, 15a88 <btrfs_list_path_for_root@@Base+0x70>
   15a7c:	ldr	r1, [pc, #84]	; (15ad4 <btrfs_list_path_for_root@@Base+0xbc>)
   15a7e:	mov	r0, r8
   15a80:	add	r1, pc
   15a82:	bl	17ffe <rb_free_nodes@@Base>
   15a86:	b.n	15a40 <btrfs_list_path_for_root@@Base+0x28>
   15a88:	ldrd	r2, r3, [sp, #8]
   15a8c:	mov	r1, r5
   15a8e:	mov	r0, r8
   15a90:	bl	14300 <rb_first_postorder@@Base+0x5de>
   15a94:	ldrd	r2, r3, [r5, #24]
   15a98:	adds	r0, #2
   15a9a:	bne.n	15aa8 <btrfs_list_path_for_root@@Base+0x90>
   15a9c:	cmp	r3, r7
   15a9e:	it	eq
   15aa0:	cmpeq	r2, r6
   15aa2:	bne.n	15ab6 <btrfs_list_path_for_root@@Base+0x9e>
   15aa4:	movs	r4, #0
   15aa6:	b.n	15a7c <btrfs_list_path_for_root@@Base+0x64>
   15aa8:	cmp	r3, r7
   15aaa:	ittt	eq
   15aac:	cmpeq	r2, r6
   15aae:	ldreq.w	r4, [r5, #148]	; 0x94
   15ab2:	streq.w	r9, [r5, #148]	; 0x94
   15ab6:	mov	r0, r5
   15ab8:	bl	13c92 <rb_prev@@Base>
   15abc:	mov	r5, r0
   15abe:	b.n	15a7a <btrfs_list_path_for_root@@Base+0x62>
   15ac0:	mov	r0, r4
   15ac2:	add	sp, #28
   15ac4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   15ac8:			; <UNDEFINED> instruction: 0xf35a0004
   15acc:	lsls	r0, r5, #8
   15ace:	movs	r0, r0
   15ad0:			; <UNDEFINED> instruction: 0xf33c0004
   15ad4:	b.n	1531a <btrfs_list_parse_sort_string@@Base+0x22>
   15ad6:	vtbl.8	d18, {d15}, d0
   15ada:	mov	r3, r0
   15adc:	it	lt
   15ade:	addlt.w	r3, r0, #31
   15ae2:	and.w	r0, r0, #31
   15ae6:	asrs	r3, r3, #5
   15ae8:	ldr.w	r3, [r1, r3, lsl #2]
   15aec:	lsr.w	r0, r3, r0
   15af0:	and.w	r0, r0, #1
   15af4:	bx	lr
   15af6:	push	{r4, lr}
   15af8:	mov	r2, r0
   15afa:	ldr	r3, [r0, #0]
   15afc:	ldr	r0, [pc, #60]	; (15b3c <btrfs_list_path_for_root@@Base+0x124>)
   15afe:	add	r0, pc
   15b00:	ldr.w	r0, [r0, r3, lsl #2]
   15b04:	cmp	r0, r1
   15b06:	bcc.n	15b36 <btrfs_list_path_for_root@@Base+0x11e>
   15b08:	add.w	r0, r2, #8
   15b0c:	cbnz	r3, 15b12 <btrfs_list_path_for_root@@Base+0xfa>
   15b0e:	ldr	r2, [r2, #8]
   15b10:	cbnz	r2, 15b1a <btrfs_list_path_for_root@@Base+0x102>
   15b12:	add.w	r2, r3, r3, lsl #1
   15b16:	subs	r2, #3
   15b18:	cbnz	r3, 15b1c <btrfs_list_path_for_root@@Base+0x104>
   15b1a:	pop	{r4, pc}
   15b1c:	ldr	r0, [r0, #0]
   15b1e:	cmp	r0, #0
   15b20:	beq.n	15b1a <btrfs_list_path_for_root@@Base+0x102>
   15b22:	lsr.w	r4, r1, r2
   15b26:	adds	r0, #4
   15b28:	and.w	r4, r4, #7
   15b2c:	subs	r2, #3
   15b2e:	subs	r3, #1
   15b30:	add.w	r0, r0, r4, lsl #2
   15b34:	b.n	15b18 <btrfs_list_path_for_root@@Base+0x100>
   15b36:	movs	r0, #0
   15b38:	b.n	15b1a <btrfs_list_path_for_root@@Base+0x102>
   15b3a:	nop
   15b3c:	lsls	r2, r6, #29
   15b3e:	movs	r5, r0
   15b40:	ldr	r2, [pc, #12]	; (15b50 <btrfs_list_path_for_root@@Base+0x138>)
   15b42:	add	r2, pc
   15b44:	ldr	r3, [r2, #48]	; 0x30
   15b46:	subs	r3, #1
   15b48:	str	r3, [r2, #48]	; 0x30
   15b4a:	b.w	861c <free@plt>
   15b4e:	nop
   15b50:	lsls	r6, r5, #28
   15b52:	movs	r5, r0
   15b54:	push	{r4, lr}
   15b56:	movs	r0, #44	; 0x2c
   15b58:	blx	8870 <malloc@plt+0x4>
   15b5c:	mov	r4, r0
   15b5e:	cbz	r0, 15b72 <btrfs_list_path_for_root@@Base+0x15a>
   15b60:	movs	r2, #44	; 0x2c
   15b62:	movs	r1, #0
   15b64:	blx	89bc <memset@plt+0x4>
   15b68:	ldr	r2, [pc, #12]	; (15b78 <btrfs_list_path_for_root@@Base+0x160>)
   15b6a:	add	r2, pc
   15b6c:	ldr	r3, [r2, #48]	; 0x30
   15b6e:	adds	r3, #1
   15b70:	str	r3, [r2, #48]	; 0x30
   15b72:	mov	r0, r4
   15b74:	pop	{r4, pc}
   15b76:	nop
   15b78:	lsls	r6, r0, #28
   15b7a:	movs	r5, r0
   15b7c:	ldr.w	ip, [pc, #104]	; 15be8 <btrfs_list_path_for_root@@Base+0x1d0>
   15b80:	push	{r4, r5, lr}
   15b82:	add	ip, pc
   15b84:	ldr	r5, [pc, #100]	; (15bec <btrfs_list_path_for_root@@Base+0x1d4>)
   15b86:	sub	sp, #92	; 0x5c
   15b88:	ldr	r4, [pc, #100]	; (15bf0 <btrfs_list_path_for_root@@Base+0x1d8>)
   15b8a:	ldr.w	r5, [ip, r5]
   15b8e:	add	r4, pc
   15b90:	ldr	r5, [r5, #0]
   15b92:	str	r5, [sp, #84]	; 0x54
   15b94:	mov.w	r5, #0
   15b98:	cbz	r3, 15bce <btrfs_list_path_for_root@@Base+0x1b6>
   15b9a:	ldr	r5, [pc, #88]	; (15bf4 <btrfs_list_path_for_root@@Base+0x1dc>)
   15b9c:	ldr	r4, [r4, r5]
   15b9e:	strd	r2, r1, [sp]
   15ba2:	movs	r1, #1
   15ba4:	strd	r0, r3, [sp, #8]
   15ba8:	ldr	r2, [pc, #76]	; (15bf8 <btrfs_list_path_for_root@@Base+0x1e0>)
   15baa:	ldr	r3, [pc, #80]	; (15bfc <btrfs_list_path_for_root@@Base+0x1e4>)
   15bac:	ldr	r0, [r4, #0]
   15bae:	add	r4, sp, #20
   15bb0:	add	r3, pc
   15bb2:	add	r2, pc
   15bb4:	blx	8a64 <__fprintf_chk@plt+0x4>
   15bb8:	movs	r1, #16
   15bba:	mov	r0, r4
   15bbc:	blx	88bc <backtrace@plt>
   15bc0:	movs	r2, #2
   15bc2:	mov	r1, r0
   15bc4:	mov	r0, r4
   15bc6:	blx	8bcc <backtrace_symbols_fd@plt>
   15bca:	blx	8b84 <abort@plt>
   15bce:	ldr	r2, [pc, #48]	; (15c00 <btrfs_list_path_for_root@@Base+0x1e8>)
   15bd0:	ldr	r3, [pc, #24]	; (15bec <btrfs_list_path_for_root@@Base+0x1d4>)
   15bd2:	add	r2, pc
   15bd4:	ldr	r3, [r2, r3]
   15bd6:	ldr	r2, [r3, #0]
   15bd8:	ldr	r3, [sp, #84]	; 0x54
   15bda:	eors	r2, r3
   15bdc:	beq.n	15be2 <btrfs_list_path_for_root@@Base+0x1ca>
   15bde:	blx	8708 <__stack_chk_fail@plt>
   15be2:	add	sp, #92	; 0x5c
   15be4:	pop	{r4, r5, pc}
   15be6:	nop
   15be8:			; <UNDEFINED> instruction: 0xf1fe0004
   15bec:	lsls	r0, r5, #8
   15bee:	movs	r0, r0
   15bf0:			; <UNDEFINED> instruction: 0xf1f20004
   15bf4:	lsls	r0, r7, #8
   15bf6:	movs	r0, r0
   15bf8:	cmn	r0, r6
   15bfa:	movs	r2, r0
   15bfc:	str	r4, [r1, #60]	; 0x3c
   15bfe:	movs	r2, r0
   15c00:	sub.w	r0, lr, #4

00015c04 <radix_tree_preload@@Base>:
   15c04:	push	{r3, r4, r5, lr}
   15c06:	ldr	r5, [pc, #36]	; (15c2c <radix_tree_preload@@Base+0x28>)
   15c08:	add	r5, pc
   15c0a:	ldr	r4, [r5, #52]	; 0x34
   15c0c:	cmp	r4, #11
   15c0e:	bls.n	15c14 <radix_tree_preload@@Base+0x10>
   15c10:	movs	r0, #0
   15c12:	pop	{r3, r4, r5, pc}
   15c14:	bl	15b54 <btrfs_list_path_for_root@@Base+0x13c>
   15c18:	cbz	r0, 15c26 <radix_tree_preload@@Base+0x22>
   15c1a:	adds	r3, r4, #1
   15c1c:	add.w	r4, r5, r4, lsl #2
   15c20:	str	r3, [r5, #52]	; 0x34
   15c22:	str	r0, [r4, #56]	; 0x38
   15c24:	b.n	15c0a <radix_tree_preload@@Base+0x6>
   15c26:	mvn.w	r0, #11
   15c2a:	b.n	15c12 <radix_tree_preload@@Base+0xe>
   15c2c:	lsls	r0, r5, #25
   15c2e:	movs	r5, r0

00015c30 <radix_tree_insert@@Base>:
   15c30:	ldr	r3, [pc, #324]	; (15d78 <radix_tree_insert@@Base+0x148>)
   15c32:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c36:	add	r3, pc
   15c38:	ldr	r4, [r0, #0]
   15c3a:	mov	r8, r2
   15c3c:	mov	r5, r0
   15c3e:	mov	sl, r1
   15c40:	ldr.w	r2, [r3, r4, lsl #2]
   15c44:	cmp	r1, r2
   15c46:	bls.n	15c6c <radix_tree_insert@@Base+0x3c>
   15c48:	adds	r4, #1
   15c4a:	ldr.w	r2, [r3, r4, lsl #2]
   15c4e:	cmp	sl, r2
   15c50:	bhi.n	15c48 <radix_tree_insert@@Base+0x18>
   15c52:	ldr	r3, [r5, #8]
   15c54:	cbz	r3, 15c6a <radix_tree_insert@@Base+0x3a>
   15c56:	movs	r6, #1
   15c58:	bl	15b54 <btrfs_list_path_for_root@@Base+0x13c>
   15c5c:	cmp	r0, #0
   15c5e:	bne.n	15cd6 <radix_tree_insert@@Base+0xa6>
   15c60:	mvn.w	r0, #11
   15c64:	add	sp, #12
   15c66:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c6a:	str	r4, [r5, #0]
   15c6c:	ldr.w	r9, [r5]
   15c70:	movs	r7, #0
   15c72:	ldr	r6, [r5, #8]
   15c74:	mov	r4, r7
   15c76:	add.w	fp, r9, r9, lsl #1
   15c7a:	sub.w	fp, fp, #3
   15c7e:	cmp.w	r9, #0
   15c82:	bne.n	15d06 <radix_tree_insert@@Base+0xd6>
   15c84:	cmp	r6, #0
   15c86:	bne.n	15d70 <radix_tree_insert@@Base+0x140>
   15c88:	cmp	r4, #0
   15c8a:	beq.n	15d3e <radix_tree_insert@@Base+0x10e>
   15c8c:	ldr	r3, [r4, #0]
   15c8e:	add.w	r1, r4, #36	; 0x24
   15c92:	mov	r0, r7
   15c94:	ldr	r5, [pc, #228]	; (15d7c <radix_tree_insert@@Base+0x14c>)
   15c96:	adds	r3, #1
   15c98:	str	r3, [r4, #0]
   15c9a:	add.w	r3, r4, r7, lsl #2
   15c9e:	add	r5, pc
   15ca0:	str.w	r8, [r3, #4]
   15ca4:	bl	15ad8 <btrfs_list_path_for_root@@Base+0xc0>
   15ca8:	movw	r2, #289	; 0x121
   15cac:	mov	r1, r5
   15cae:	mov	r3, r0
   15cb0:	ldr	r0, [pc, #204]	; (15d80 <radix_tree_insert@@Base+0x150>)
   15cb2:	add	r0, pc
   15cb4:	bl	15b7c <btrfs_list_path_for_root@@Base+0x164>
   15cb8:	add.w	r1, r4, #40	; 0x28
   15cbc:	mov	r0, r7
   15cbe:	bl	15ad8 <btrfs_list_path_for_root@@Base+0xc0>
   15cc2:	mov.w	r2, #290	; 0x122
   15cc6:	mov	r1, r5
   15cc8:	mov	r3, r0
   15cca:	ldr	r0, [pc, #184]	; (15d84 <radix_tree_insert@@Base+0x154>)
   15ccc:	add	r0, pc
   15cce:	bl	15b7c <btrfs_list_path_for_root@@Base+0x164>
   15cd2:	mov	r0, r6
   15cd4:	b.n	15c64 <radix_tree_insert@@Base+0x34>
   15cd6:	ldr	r3, [r5, #8]
   15cd8:	str	r3, [r0, #4]
   15cda:	ldr	r3, [r5, #4]
   15cdc:	lsls	r2, r3, #11
   15cde:	ittt	mi
   15ce0:	ldrmi	r3, [r0, #36]	; 0x24
   15ce2:	orrmi.w	r3, r3, #1
   15ce6:	strmi	r3, [r0, #36]	; 0x24
   15ce8:	ldr	r3, [r5, #4]
   15cea:	str	r6, [r0, #0]
   15cec:	lsls	r3, r3, #10
   15cee:	ittt	mi
   15cf0:	ldrmi	r3, [r0, #40]	; 0x28
   15cf2:	orrmi.w	r3, r3, #1
   15cf6:	strmi	r3, [r0, #40]	; 0x28
   15cf8:	ldr	r3, [r5, #0]
   15cfa:	str	r0, [r5, #8]
   15cfc:	adds	r3, #1
   15cfe:	str	r3, [r5, #0]
   15d00:	cmp	r4, r3
   15d02:	bhi.n	15c58 <radix_tree_insert@@Base+0x28>
   15d04:	b.n	15c6c <radix_tree_insert@@Base+0x3c>
   15d06:	cbnz	r6, 15d20 <radix_tree_insert@@Base+0xf0>
   15d08:	bl	15b54 <btrfs_list_path_for_root@@Base+0x13c>
   15d0c:	mov	r6, r0
   15d0e:	cmp	r0, #0
   15d10:	beq.n	15c60 <radix_tree_insert@@Base+0x30>
   15d12:	cbz	r4, 15d3a <radix_tree_insert@@Base+0x10a>
   15d14:	add.w	r7, r4, r7, lsl #2
   15d18:	str	r0, [r7, #4]
   15d1a:	ldr	r3, [r4, #0]
   15d1c:	adds	r3, #1
   15d1e:	str	r3, [r4, #0]
   15d20:	lsr.w	r7, sl, fp
   15d24:	mov	r4, r6
   15d26:	and.w	r7, r7, #7
   15d2a:	sub.w	fp, fp, #3
   15d2e:	add.w	r9, r9, #4294967295	; 0xffffffff
   15d32:	add.w	r3, r6, r7, lsl #2
   15d36:	ldr	r6, [r3, #4]
   15d38:	b.n	15c7e <radix_tree_insert@@Base+0x4e>
   15d3a:	str	r0, [r5, #8]
   15d3c:	b.n	15d20 <radix_tree_insert@@Base+0xf0>
   15d3e:	str.w	r8, [r5, #8]
   15d42:	movw	r2, #293	; 0x125
   15d46:	ldr	r5, [r5, #4]
   15d48:	ldr	r1, [pc, #60]	; (15d88 <radix_tree_insert@@Base+0x158>)
   15d4a:	ldr	r0, [pc, #64]	; (15d8c <radix_tree_insert@@Base+0x15c>)
   15d4c:	and.w	r3, r5, #1048576	; 0x100000
   15d50:	add	r1, pc
   15d52:	str	r1, [sp, #4]
   15d54:	add	r0, pc
   15d56:	bl	15b7c <btrfs_list_path_for_root@@Base+0x164>
   15d5a:	ldr	r0, [pc, #52]	; (15d90 <radix_tree_insert@@Base+0x160>)
   15d5c:	ldr	r1, [sp, #4]
   15d5e:	and.w	r3, r5, #2097152	; 0x200000
   15d62:	add	r0, pc
   15d64:	mov.w	r2, #294	; 0x126
   15d68:	bl	15b7c <btrfs_list_path_for_root@@Base+0x164>
   15d6c:	mov	r0, r4
   15d6e:	b.n	15c64 <radix_tree_insert@@Base+0x34>
   15d70:	mvn.w	r0, #16
   15d74:	b.n	15c64 <radix_tree_insert@@Base+0x34>
   15d76:	nop
   15d78:	lsls	r2, r7, #24
   15d7a:	movs	r5, r0
   15d7c:	str	r0, [r1, #60]	; 0x3c
   15d7e:	movs	r2, r0
   15d80:	str	r2, [r4, #44]	; 0x2c
   15d82:	movs	r2, r0
   15d84:	str	r1, [r4, #44]	; 0x2c
   15d86:	movs	r2, r0
   15d88:	str	r6, [r2, #48]	; 0x30
   15d8a:	movs	r2, r0
   15d8c:	str	r2, [r6, #36]	; 0x24
   15d8e:	movs	r2, r0
   15d90:	str	r2, [r7, #36]	; 0x24
   15d92:	movs	r2, r0

00015d94 <radix_tree_lookup_slot@@Base>:
   15d94:	b.n	15af6 <btrfs_list_path_for_root@@Base+0xde>

00015d96 <radix_tree_lookup@@Base>:
   15d96:	push	{r3, lr}
   15d98:	bl	15af6 <btrfs_list_path_for_root@@Base+0xde>
   15d9c:	cbz	r0, 15da0 <radix_tree_lookup@@Base+0xa>
   15d9e:	ldr	r0, [r0, #0]
   15da0:	pop	{r3, pc}

00015da2 <radix_tree_tag_set@@Base>:
   15da2:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15da6:	mov	sl, r1
   15da8:	vpush	{d8}
   15dac:	mov	r5, r0
   15dae:	ldr	r3, [pc, #172]	; (15e5c <radix_tree_tag_set@@Base+0xba>)
   15db0:	mov	r6, r2
   15db2:	movw	r2, #379	; 0x17b
   15db6:	ldr.w	fp, [pc, #168]	; 15e60 <radix_tree_tag_set@@Base+0xbe>
   15dba:	add	r3, pc
   15dbc:	add.w	r9, r6, #9
   15dc0:	ldr	r7, [r0, #0]
   15dc2:	add	fp, pc
   15dc4:	ldr	r0, [pc, #156]	; (15e64 <radix_tree_tag_set@@Base+0xc2>)
   15dc6:	mov.w	r9, r9, lsl #2
   15dca:	ldr.w	r3, [r3, r7, lsl #2]
   15dce:	add	r0, pc
   15dd0:	add.w	r8, r7, r7, lsl #1
   15dd4:	cmp	r1, r3
   15dd6:	ldr	r1, [pc, #144]	; (15e68 <radix_tree_tag_set@@Base+0xc6>)
   15dd8:	sub.w	r8, r8, #3
   15ddc:	add	r1, pc
   15dde:	ite	ls
   15de0:	movls	r3, #0
   15de2:	movhi	r3, #1
   15de4:	adds	r1, #18
   15de6:	bl	15b7c <btrfs_list_path_for_root@@Base+0x164>
   15dea:	ldr	r3, [pc, #128]	; (15e6c <radix_tree_tag_set@@Base+0xca>)
   15dec:	ldr	r4, [r5, #8]
   15dee:	add	r3, pc
   15df0:	adds	r3, #18
   15df2:	vmov	s16, r3
   15df6:	cbnz	r7, 15e16 <radix_tree_tag_set@@Base+0x74>
   15df8:	cbz	r4, 15e0c <radix_tree_tag_set@@Base+0x6a>
   15dfa:	ldr	r3, [r5, #4]
   15dfc:	adds	r6, #20
   15dfe:	movs	r1, #1
   15e00:	lsl.w	r6, r1, r6
   15e04:	tst	r3, r6
   15e06:	itt	eq
   15e08:	orreq	r3, r6
   15e0a:	streq	r3, [r5, #4]
   15e0c:	vpop	{d8}
   15e10:	mov	r0, r4
   15e12:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e16:	lsr.w	r2, sl, r8
   15e1a:	add.w	r1, r4, r9
   15e1e:	and.w	r2, r2, #7
   15e22:	mov	r0, r2
   15e24:	bl	15ad8 <btrfs_list_path_for_root@@Base+0xc0>
   15e28:	cbnz	r0, 15e3a <radix_tree_tag_set@@Base+0x98>
   15e2a:	movs	r3, #1
   15e2c:	lsl.w	r1, r3, r2
   15e30:	ldr.w	r3, [r4, r9]
   15e34:	orrs	r3, r1
   15e36:	str.w	r3, [r4, r9]
   15e3a:	add.w	r4, r4, r2, lsl #2
   15e3e:	vmov	r1, s16
   15e42:	movw	r2, #391	; 0x187
   15e46:	mov	r0, fp
   15e48:	ldr	r4, [r4, #4]
   15e4a:	sub.w	r8, r8, #3
   15e4e:	subs	r7, #1
   15e50:	clz	r3, r4
   15e54:	lsrs	r3, r3, #5
   15e56:	bl	15b7c <btrfs_list_path_for_root@@Base+0x164>
   15e5a:	b.n	15df6 <radix_tree_tag_set@@Base+0x54>
   15e5c:	lsls	r6, r6, #18
   15e5e:	movs	r5, r0
   15e60:	str	r4, [r2, #36]	; 0x24
   15e62:	movs	r2, r0
   15e64:	str	r4, [r4, #32]
   15e66:	movs	r2, r0
   15e68:	str	r2, [r1, #40]	; 0x28
   15e6a:	movs	r2, r0
   15e6c:	str	r0, [r7, #36]	; 0x24
   15e6e:	movs	r2, r0

00015e70 <radix_tree_tag_clear@@Base>:
   15e70:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e74:	mov	r7, r0
   15e76:	ldr	r0, [pc, #236]	; (15f64 <radix_tree_tag_clear@@Base+0xf4>)
   15e78:	sub	sp, #108	; 0x6c
   15e7a:	ldr	r3, [pc, #236]	; (15f68 <radix_tree_tag_clear@@Base+0xf8>)
   15e7c:	add	r0, pc
   15e7e:	ldr	r3, [r0, r3]
   15e80:	ldr	r0, [pc, #232]	; (15f6c <radix_tree_tag_clear@@Base+0xfc>)
   15e82:	ldr	r3, [r3, #0]
   15e84:	str	r3, [sp, #100]	; 0x64
   15e86:	mov.w	r3, #0
   15e8a:	ldr	r3, [r7, #0]
   15e8c:	add	r0, pc
   15e8e:	ldr.w	r0, [r0, r3, lsl #2]
   15e92:	cmp	r1, r0
   15e94:	bls.n	15eac <radix_tree_tag_clear@@Base+0x3c>
   15e96:	movs	r6, #0
   15e98:	ldr	r2, [pc, #212]	; (15f70 <radix_tree_tag_clear@@Base+0x100>)
   15e9a:	ldr	r3, [pc, #204]	; (15f68 <radix_tree_tag_clear@@Base+0xf8>)
   15e9c:	add	r2, pc
   15e9e:	ldr	r3, [r2, r3]
   15ea0:	ldr	r2, [r3, #0]
   15ea2:	ldr	r3, [sp, #100]	; 0x64
   15ea4:	eors	r2, r3
   15ea6:	beq.n	15f5c <radix_tree_tag_clear@@Base+0xec>
   15ea8:	blx	8708 <__stack_chk_fail@plt>
   15eac:	add.w	r4, r3, r3, lsl #1
   15eb0:	ldr	r6, [r7, #8]
   15eb2:	subs	r4, #3
   15eb4:	add	r5, sp, #4
   15eb6:	movs	r0, #0
   15eb8:	str	r0, [sp, #4]
   15eba:	cbnz	r3, 15ef4 <radix_tree_tag_clear@@Base+0x84>
   15ebc:	cmp	r6, #0
   15ebe:	beq.n	15e96 <radix_tree_tag_clear@@Base+0x26>
   15ec0:	add.w	r9, r2, #9
   15ec4:	add.w	sl, r2, #8
   15ec8:	subs	r5, #8
   15eca:	mov.w	fp, #1
   15ece:	mov.w	r9, r9, lsl #2
   15ed2:	mov.w	sl, sl, lsl #2
   15ed6:	ldr.w	r8, [r5, #8]
   15eda:	cmp.w	r8, #0
   15ede:	bne.n	15f12 <radix_tree_tag_clear@@Base+0xa2>
   15ee0:	ldr	r3, [r7, #4]
   15ee2:	adds	r2, #20
   15ee4:	movs	r1, #1
   15ee6:	lsl.w	r2, r1, r2
   15eea:	tst	r3, r2
   15eec:	itt	ne
   15eee:	bicne	r3, r2
   15ef0:	strne	r3, [r7, #4]
   15ef2:	b.n	15e98 <radix_tree_tag_clear@@Base+0x28>
   15ef4:	cmp	r6, #0
   15ef6:	beq.n	15e96 <radix_tree_tag_clear@@Base+0x26>
   15ef8:	lsr.w	r0, r1, r4
   15efc:	subs	r3, #1
   15efe:	and.w	r0, r0, #7
   15f02:	str	r0, [r5, #12]
   15f04:	str.w	r6, [r5, #8]!
   15f08:	subs	r4, #3
   15f0a:	add.w	r6, r6, r0, lsl #2
   15f0e:	ldr	r6, [r6, #4]
   15f10:	b.n	15eba <radix_tree_tag_clear@@Base+0x4a>
   15f12:	ldr	r4, [r5, #12]
   15f14:	add.w	r1, r8, r9
   15f18:	mov	r0, r4
   15f1a:	bl	15ad8 <btrfs_list_path_for_root@@Base+0xc0>
   15f1e:	cmp	r0, #0
   15f20:	beq.n	15e98 <radix_tree_tag_clear@@Base+0x28>
   15f22:	cmp	r4, #0
   15f24:	mov	r0, r4
   15f26:	it	lt
   15f28:	addlt.w	r0, r4, #31
   15f2c:	negs	r3, r4
   15f2e:	and.w	r3, r3, #31
   15f32:	and.w	r4, r4, #31
   15f36:	mov.w	r0, r0, asr #5
   15f3a:	it	pl
   15f3c:	negpl	r4, r3
   15f3e:	add	r8, sl
   15f40:	lsl.w	r4, fp, r4
   15f44:	ldr.w	r3, [r1, r0, lsl #2]
   15f48:	subs	r5, #8
   15f4a:	bic.w	r4, r3, r4
   15f4e:	str.w	r4, [r1, r0, lsl #2]
   15f52:	ldr.w	r3, [r8, #4]
   15f56:	cmp	r3, #0
   15f58:	bne.n	15e98 <radix_tree_tag_clear@@Base+0x28>
   15f5a:	b.n	15ed6 <radix_tree_tag_clear@@Base+0x66>
   15f5c:	mov	r0, r6
   15f5e:	add	sp, #108	; 0x6c
   15f60:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f64:	vhadd.s8	d0, d4, d4
   15f68:	lsls	r0, r5, #8
   15f6a:	movs	r0, r0
   15f6c:	lsls	r4, r4, #15
   15f6e:	movs	r5, r0
   15f70:	cdp	0, 14, cr0, cr4, cr4, {0}

00015f74 <radix_tree_tag_get@@Base>:
   15f74:	ldr	r3, [pc, #140]	; (16004 <radix_tree_tag_get@@Base+0x90>)
   15f76:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   15f7a:	add	r3, pc
   15f7c:	ldr	r4, [r0, #0]
   15f7e:	mov	r6, r1
   15f80:	ldr.w	r3, [r3, r4, lsl #2]
   15f84:	cmp	r1, r3
   15f86:	bhi.n	15ffc <radix_tree_tag_get@@Base+0x88>
   15f88:	ldr	r5, [r0, #4]
   15f8a:	add.w	r1, r2, #20
   15f8e:	movs	r3, #1
   15f90:	lsl.w	r1, r3, r1
   15f94:	tst	r1, r5
   15f96:	beq.n	15ffc <radix_tree_tag_get@@Base+0x88>
   15f98:	cbz	r4, 16000 <radix_tree_tag_get@@Base+0x8c>
   15f9a:	adds	r2, #9
   15f9c:	add.w	r4, r4, r4, lsl #1
   15fa0:	ldr	r7, [r0, #8]
   15fa2:	subs	r4, #3
   15fa4:	lsls	r2, r2, #2
   15fa6:	mov.w	r8, #0
   15faa:	cbz	r7, 15ffc <radix_tree_tag_get@@Base+0x88>
   15fac:	lsr.w	r5, r6, r4
   15fb0:	adds	r1, r7, r2
   15fb2:	and.w	r5, r5, #7
   15fb6:	mov	r0, r5
   15fb8:	bl	15ad8 <btrfs_list_path_for_root@@Base+0xc0>
   15fbc:	cmp	r0, #0
   15fbe:	it	eq
   15fc0:	moveq.w	r8, #1
   15fc4:	cbnz	r4, 15ff2 <radix_tree_tag_get@@Base+0x7e>
   15fc6:	mov	r0, r5
   15fc8:	bl	15ad8 <btrfs_list_path_for_root@@Base+0xc0>
   15fcc:	ldr	r1, [pc, #56]	; (16008 <radix_tree_tag_get@@Base+0x94>)
   15fce:	movw	r2, #517	; 0x205
   15fd2:	add	r1, pc
   15fd4:	adds	r1, #37	; 0x25
   15fd6:	subs	r4, r0, #0
   15fd8:	ldr	r0, [pc, #48]	; (1600c <radix_tree_tag_get@@Base+0x98>)
   15fda:	it	ne
   15fdc:	movne	r3, r8
   15fde:	add	r0, pc
   15fe0:	it	eq
   15fe2:	moveq	r3, #0
   15fe4:	bl	15b7c <btrfs_list_path_for_root@@Base+0x164>
   15fe8:	subs	r0, r4, #0
   15fea:	it	ne
   15fec:	movne	r0, #1
   15fee:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   15ff2:	add.w	r5, r7, r5, lsl #2
   15ff6:	subs	r4, #3
   15ff8:	ldr	r7, [r5, #4]
   15ffa:	b.n	15faa <radix_tree_tag_get@@Base+0x36>
   15ffc:	movs	r0, #0
   15ffe:	b.n	15fee <radix_tree_tag_get@@Base+0x7a>
   16000:	mov	r0, r3
   16002:	b.n	15fee <radix_tree_tag_get@@Base+0x7a>
   16004:	lsls	r6, r6, #11
   16006:	movs	r5, r0
   16008:	str	r4, [r2, #8]
   1600a:	movs	r2, r0
   1600c:	str	r5, [r0, #4]
   1600e:	movs	r2, r0

00016010 <radix_tree_gang_lookup@@Base>:
   16010:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16014:	mov	r6, r0
   16016:	ldr	r4, [r0, #0]
   16018:	mov.w	fp, #1
   1601c:	ldr	r0, [pc, #172]	; (160cc <radix_tree_gang_lookup@@Base+0xbc>)
   1601e:	add	r0, pc
   16020:	ldr.w	r0, [r0, r4, lsl #2]
   16024:	str	r0, [sp, #4]
   16026:	movs	r0, #0
   16028:	cmp	r0, r3
   1602a:	bcs.n	1604c <radix_tree_gang_lookup@@Base+0x3c>
   1602c:	ldr	r4, [sp, #4]
   1602e:	cmp	r2, r4
   16030:	bhi.n	1604c <radix_tree_gang_lookup@@Base+0x3c>
   16032:	ldr	r4, [r6, #0]
   16034:	lsls	r7, r0, #2
   16036:	ldr	r5, [r6, #8]
   16038:	add.w	sl, r1, r0, lsl #2
   1603c:	cbnz	r4, 16052 <radix_tree_gang_lookup@@Base+0x42>
   1603e:	cbz	r5, 16046 <radix_tree_gang_lookup@@Base+0x36>
   16040:	cbnz	r2, 16046 <radix_tree_gang_lookup@@Base+0x36>
   16042:	movs	r4, #1
   16044:	str	r5, [r1, r7]
   16046:	add	r0, r4
   16048:	cmp	r2, #0
   1604a:	bne.n	16028 <radix_tree_gang_lookup@@Base+0x18>
   1604c:	add	sp, #12
   1604e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16052:	add.w	r4, r4, r4, lsl #1
   16056:	subs	r4, #3
   16058:	cbnz	r4, 1608e <radix_tree_gang_lookup@@Base+0x7e>
   1605a:	and.w	ip, r2, #7
   1605e:	sub.w	lr, r3, r0
   16062:	add.w	r7, ip, #1
   16066:	sub.w	ip, r2, ip
   1606a:	ldr.w	r9, [r5, r7, lsl #2]
   1606e:	add.w	r2, ip, r7
   16072:	cmp.w	r9, #0
   16076:	beq.n	16086 <radix_tree_gang_lookup@@Base+0x76>
   16078:	add.w	r8, r4, #1
   1607c:	str.w	r9, [sl, r4, lsl #2]
   16080:	cmp	lr, r8
   16082:	beq.n	160c2 <radix_tree_gang_lookup@@Base+0xb2>
   16084:	mov	r4, r8
   16086:	adds	r7, #1
   16088:	cmp	r7, #9
   1608a:	bne.n	1606a <radix_tree_gang_lookup@@Base+0x5a>
   1608c:	b.n	16046 <radix_tree_gang_lookup@@Base+0x36>
   1608e:	lsr.w	r7, r2, r4
   16092:	lsl.w	lr, fp, r4
   16096:	and.w	r7, r7, #7
   1609a:	rsb	r8, lr, #0
   1609e:	adds	r7, #1
   160a0:	ldr.w	ip, [r5, r7, lsl #2]
   160a4:	cmp.w	ip, #0
   160a8:	bne.n	160c6 <radix_tree_gang_lookup@@Base+0xb6>
   160aa:	and.w	r2, r8, r2
   160ae:	adds.w	r2, lr, r2
   160b2:	beq.n	160be <radix_tree_gang_lookup@@Base+0xae>
   160b4:	adds	r7, #1
   160b6:	cmp	r7, #9
   160b8:	bne.n	160a0 <radix_tree_gang_lookup@@Base+0x90>
   160ba:	mov	r4, ip
   160bc:	b.n	16046 <radix_tree_gang_lookup@@Base+0x36>
   160be:	mov	r4, r2
   160c0:	b.n	16046 <radix_tree_gang_lookup@@Base+0x36>
   160c2:	mov	r4, lr
   160c4:	b.n	16046 <radix_tree_gang_lookup@@Base+0x36>
   160c6:	subs	r4, #3
   160c8:	mov	r5, ip
   160ca:	b.n	16058 <radix_tree_gang_lookup@@Base+0x48>
   160cc:	lsls	r2, r2, #9
   160ce:	movs	r5, r0

000160d0 <radix_tree_gang_lookup_tag@@Base>:
   160d0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160d4:	mov	r4, r2
   160d6:	vpush	{d8-d9}
   160da:	movs	r5, #1
   160dc:	mov	r7, r0
   160de:	sub	sp, #44	; 0x2c
   160e0:	str	r3, [sp, #24]
   160e2:	ldr	r3, [sp, #96]	; 0x60
   160e4:	str	r1, [sp, #20]
   160e6:	add.w	r2, r3, #20
   160ea:	lsls	r5, r2
   160ec:	ldr	r2, [r0, #4]
   160ee:	ands	r5, r2
   160f0:	beq.n	16144 <radix_tree_gang_lookup_tag@@Base+0x74>
   160f2:	adds	r3, #9
   160f4:	ldr	r2, [pc, #340]	; (1624c <radix_tree_gang_lookup_tag@@Base+0x17c>)
   160f6:	ldr	r1, [r0, #0]
   160f8:	movs	r5, #0
   160fa:	lsls	r3, r3, #2
   160fc:	str	r3, [sp, #36]	; 0x24
   160fe:	ldr	r3, [pc, #336]	; (16250 <radix_tree_gang_lookup_tag@@Base+0x180>)
   16100:	add	r2, pc
   16102:	add	r3, pc
   16104:	ldr.w	r2, [r2, r1, lsl #2]
   16108:	adds	r3, #56	; 0x38
   1610a:	vmov	s18, r3
   1610e:	str	r2, [sp, #32]
   16110:	ldr	r3, [sp, #24]
   16112:	cmp	r5, r3
   16114:	bcs.n	16144 <radix_tree_gang_lookup_tag@@Base+0x74>
   16116:	ldr	r3, [sp, #32]
   16118:	cmp	r4, r3
   1611a:	bhi.n	16144 <radix_tree_gang_lookup_tag@@Base+0x74>
   1611c:	ldr	r6, [r7, #0]
   1611e:	lsls	r3, r5, #2
   16120:	ldr	r2, [sp, #20]
   16122:	ldr.w	r8, [r7, #8]
   16126:	add.w	r2, r2, r5, lsl #2
   1612a:	str	r2, [sp, #28]
   1612c:	cbnz	r6, 16150 <radix_tree_gang_lookup_tag@@Base+0x80>
   1612e:	cmp.w	r8, #0
   16132:	beq.n	1613e <radix_tree_gang_lookup_tag@@Base+0x6e>
   16134:	cbnz	r4, 1613e <radix_tree_gang_lookup_tag@@Base+0x6e>
   16136:	ldr	r2, [sp, #20]
   16138:	movs	r6, #1
   1613a:	str.w	r8, [r2, r3]
   1613e:	add	r5, r6
   16140:	cmp	r4, #0
   16142:	bne.n	16110 <radix_tree_gang_lookup_tag@@Base+0x40>
   16144:	mov	r0, r5
   16146:	add	sp, #44	; 0x2c
   16148:	vpop	{d8-d9}
   1614c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16150:	ldr	r3, [sp, #24]
   16152:	subs	r3, r3, r5
   16154:	str	r3, [sp, #8]
   16156:	add.w	r3, r6, r6, lsl #1
   1615a:	subs	r3, #3
   1615c:	strd	r3, r6, [sp]
   16160:	movs	r6, #0
   16162:	ldr	r3, [sp, #0]
   16164:	mov.w	sl, #1
   16168:	lsr.w	r9, r4, r3
   1616c:	ldr	r3, [sp, #36]	; 0x24
   1616e:	and.w	r9, r9, #7
   16172:	add	r3, r8
   16174:	vmov	s16, r3
   16178:	ldr	r3, [sp, #0]
   1617a:	lsl.w	sl, sl, r3
   1617e:	rsb	fp, sl, #0
   16182:	vmov	r1, s16
   16186:	mov	r0, r9
   16188:	bl	15ad8 <btrfs_list_path_for_root@@Base+0xc0>
   1618c:	cmp	r0, #0
   1618e:	beq.n	1622e <radix_tree_gang_lookup_tag@@Base+0x15e>
   16190:	add.w	fp, r8, r9, lsl #2
   16194:	ldr	r1, [pc, #188]	; (16254 <radix_tree_gang_lookup_tag@@Base+0x184>)
   16196:	ldr	r0, [pc, #192]	; (16258 <radix_tree_gang_lookup_tag@@Base+0x188>)
   16198:	movw	r2, #642	; 0x282
   1619c:	ldr.w	r3, [fp, #4]
   161a0:	add	r1, pc
   161a2:	adds	r1, #56	; 0x38
   161a4:	add	r0, pc
   161a6:	clz	r3, r3
   161aa:	lsrs	r3, r3, #5
   161ac:	bl	15b7c <btrfs_list_path_for_root@@Base+0x164>
   161b0:	ldr	r3, [sp, #4]
   161b2:	subs	r3, #1
   161b4:	str	r3, [sp, #4]
   161b6:	bne.n	1621c <radix_tree_gang_lookup_tag@@Base+0x14c>
   161b8:	and.w	r3, r4, #7
   161bc:	str	r3, [sp, #12]
   161be:	add.w	r9, r3, #1
   161c2:	ldr	r3, [pc, #152]	; (1625c <radix_tree_gang_lookup_tag@@Base+0x18c>)
   161c4:	add	r3, pc
   161c6:	vmov	s17, r3
   161ca:	ldr	r3, [sp, #12]
   161cc:	add.w	r0, r9, #4294967295	; 0xffffffff
   161d0:	vmov	r1, s16
   161d4:	sub.w	sl, r4, r3
   161d8:	add	sl, r9
   161da:	bl	15ad8 <btrfs_list_path_for_root@@Base+0xc0>
   161de:	cbz	r0, 16210 <radix_tree_gang_lookup_tag@@Base+0x140>
   161e0:	ldr.w	r3, [r8, r9, lsl #2]
   161e4:	movw	r2, #659	; 0x293
   161e8:	vmov	r1, s18
   161ec:	vmov	r0, s17
   161f0:	str	r3, [sp, #16]
   161f2:	clz	r3, r3
   161f6:	lsrs	r3, r3, #5
   161f8:	bl	15b7c <btrfs_list_path_for_root@@Base+0x164>
   161fc:	ldr	r2, [sp, #28]
   161fe:	adds	r3, r6, #1
   16200:	mov	r1, r2
   16202:	ldr	r2, [sp, #16]
   16204:	str.w	r2, [r1, r6, lsl #2]
   16208:	ldr	r2, [sp, #8]
   1620a:	cmp	r2, r3
   1620c:	beq.n	16244 <radix_tree_gang_lookup_tag@@Base+0x174>
   1620e:	mov	r6, r3
   16210:	add.w	r9, r9, #1
   16214:	cmp.w	r9, #9
   16218:	bne.n	161ca <radix_tree_gang_lookup_tag@@Base+0xfa>
   1621a:	mov	r4, sl
   1621c:	ldr	r3, [sp, #0]
   1621e:	ldr.w	r8, [fp, #4]
   16222:	subs	r3, #3
   16224:	str	r3, [sp, #0]
   16226:	ldr	r3, [sp, #4]
   16228:	cmp	r3, #0
   1622a:	bne.n	16162 <radix_tree_gang_lookup_tag@@Base+0x92>
   1622c:	b.n	1613e <radix_tree_gang_lookup_tag@@Base+0x6e>
   1622e:	and.w	r4, fp, r4
   16232:	adds.w	r4, sl, r4
   16236:	beq.n	1613e <radix_tree_gang_lookup_tag@@Base+0x6e>
   16238:	add.w	r9, r9, #1
   1623c:	cmp.w	r9, #8
   16240:	bne.n	16182 <radix_tree_gang_lookup_tag@@Base+0xb2>
   16242:	b.n	1613e <radix_tree_gang_lookup_tag@@Base+0x6e>
   16244:	ldr	r6, [sp, #8]
   16246:	mov	r4, sl
   16248:	b.n	1613e <radix_tree_gang_lookup_tag@@Base+0x6e>
   1624a:	nop
   1624c:	lsls	r0, r6, #5
   1624e:	movs	r5, r0
   16250:	ldrsh	r4, [r4, r5]
   16252:	movs	r2, r0
   16254:	ldrsh	r6, [r0, r3]
   16256:	movs	r2, r0
   16258:	ldrsh	r4, [r2, r2]
   1625a:	movs	r2, r0
   1625c:	ldrsh	r3, [r1, r2]
   1625e:	movs	r2, r0

00016260 <radix_tree_delete@@Base>:
   16260:	ldr	r2, [pc, #292]	; (16388 <radix_tree_delete@@Base+0x128>)
   16262:	ldr	r3, [pc, #296]	; (1638c <radix_tree_delete@@Base+0x12c>)
   16264:	add	r2, pc
   16266:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1626a:	sub	sp, #108	; 0x6c
   1626c:	ldr	r3, [r2, r3]
   1626e:	mov	r4, r0
   16270:	ldr	r2, [r0, #0]
   16272:	mov	r7, r1
   16274:	ldr	r3, [r3, #0]
   16276:	str	r3, [sp, #100]	; 0x64
   16278:	mov.w	r3, #0
   1627c:	ldr	r3, [pc, #272]	; (16390 <radix_tree_delete@@Base+0x130>)
   1627e:	add	r3, pc
   16280:	ldr.w	r3, [r3, r2, lsl #2]
   16284:	cmp	r3, r1
   16286:	bcs.n	1629e <radix_tree_delete@@Base+0x3e>
   16288:	movs	r5, #0
   1628a:	ldr	r2, [pc, #264]	; (16394 <radix_tree_delete@@Base+0x134>)
   1628c:	ldr	r3, [pc, #252]	; (1638c <radix_tree_delete@@Base+0x12c>)
   1628e:	add	r2, pc
   16290:	ldr	r3, [r2, r3]
   16292:	ldr	r2, [r3, #0]
   16294:	ldr	r3, [sp, #100]	; 0x64
   16296:	eors	r2, r3
   16298:	beq.n	1637e <radix_tree_delete@@Base+0x11e>
   1629a:	blx	8708 <__stack_chk_fail@plt>
   1629e:	ldr	r5, [r0, #8]
   162a0:	cbnz	r2, 162b0 <radix_tree_delete@@Base+0x50>
   162a2:	cbz	r5, 162b0 <radix_tree_delete@@Base+0x50>
   162a4:	ldr	r3, [r0, #4]
   162a6:	ubfx	r3, r3, #0, #20
   162aa:	strd	r3, r2, [r0, #4]
   162ae:	b.n	1628a <radix_tree_delete@@Base+0x2a>
   162b0:	add.w	r3, r2, r2, lsl #1
   162b4:	add	r6, sp, #4
   162b6:	subs	r3, #3
   162b8:	mov	r9, r5
   162ba:	movs	r1, #0
   162bc:	str	r1, [sp, #4]
   162be:	cmp	r5, #0
   162c0:	beq.n	16288 <radix_tree_delete@@Base+0x28>
   162c2:	lsr.w	r8, r7, r3
   162c6:	add.w	r1, r6, #8
   162ca:	and.w	r8, r8, #7
   162ce:	subs	r2, #1
   162d0:	str.w	r8, [r1, #4]
   162d4:	sub.w	r3, r3, #3
   162d8:	str	r5, [r6, #8]
   162da:	add.w	r5, r5, r8, lsl #2
   162de:	ldr	r5, [r5, #4]
   162e0:	bne.n	16324 <radix_tree_delete@@Base+0xc4>
   162e2:	cmp	r5, #0
   162e4:	beq.n	16288 <radix_tree_delete@@Base+0x28>
   162e6:	add.w	r1, r9, #36	; 0x24
   162ea:	mov	r0, r8
   162ec:	bl	15ad8 <btrfs_list_path_for_root@@Base+0xc0>
   162f0:	cbz	r0, 162fa <radix_tree_delete@@Base+0x9a>
   162f2:	mov	r1, r7
   162f4:	mov	r0, r4
   162f6:	bl	15e70 <radix_tree_tag_clear@@Base>
   162fa:	add.w	r1, r9, #40	; 0x28
   162fe:	mov	r0, r8
   16300:	bl	15ad8 <btrfs_list_path_for_root@@Base+0xc0>
   16304:	cbz	r0, 16310 <radix_tree_delete@@Base+0xb0>
   16306:	movs	r2, #1
   16308:	mov	r1, r7
   1630a:	mov	r0, r4
   1630c:	bl	15e70 <radix_tree_tag_clear@@Base>
   16310:	movs	r7, #0
   16312:	ldr	r0, [r6, #8]
   16314:	cbnz	r0, 1632a <radix_tree_delete@@Base+0xca>
   16316:	ldr	r3, [r4, #4]
   16318:	str	r0, [r4, #8]
   1631a:	ubfx	r3, r3, #0, #20
   1631e:	strd	r0, r3, [r4]
   16322:	b.n	1628a <radix_tree_delete@@Base+0x2a>
   16324:	mov	r9, r5
   16326:	mov	r6, r1
   16328:	b.n	162be <radix_tree_delete@@Base+0x5e>
   1632a:	ldr	r3, [r6, #12]
   1632c:	subs	r6, #8
   1632e:	add.w	r3, r0, r3, lsl #2
   16332:	str	r7, [r3, #4]
   16334:	ldr	r3, [r0, #0]
   16336:	subs	r3, #1
   16338:	str	r3, [r0, #0]
   1633a:	cbz	r3, 16378 <radix_tree_delete@@Base+0x118>
   1633c:	ldr	r3, [r4, #8]
   1633e:	cmp	r3, r0
   16340:	bne.n	1628a <radix_tree_delete@@Base+0x2a>
   16342:	movs	r6, #0
   16344:	ldr	r3, [r4, #0]
   16346:	cmp	r3, #0
   16348:	beq.n	1628a <radix_tree_delete@@Base+0x2a>
   1634a:	ldr	r0, [r4, #8]
   1634c:	ldr	r2, [r0, #0]
   1634e:	cmp	r2, #1
   16350:	bne.n	1628a <radix_tree_delete@@Base+0x2a>
   16352:	ldr	r2, [r0, #4]
   16354:	cmp	r2, #0
   16356:	beq.n	1628a <radix_tree_delete@@Base+0x2a>
   16358:	str	r2, [r4, #8]
   1635a:	subs	r3, #1
   1635c:	str	r3, [r4, #0]
   1635e:	ldr	r3, [r0, #36]	; 0x24
   16360:	strd	r6, r6, [r0]
   16364:	bic.w	r3, r3, #1
   16368:	str	r3, [r0, #36]	; 0x24
   1636a:	ldr	r3, [r0, #40]	; 0x28
   1636c:	bic.w	r3, r3, #1
   16370:	str	r3, [r0, #40]	; 0x28
   16372:	bl	15b40 <btrfs_list_path_for_root@@Base+0x128>
   16376:	b.n	16344 <radix_tree_delete@@Base+0xe4>
   16378:	bl	15b40 <btrfs_list_path_for_root@@Base+0x128>
   1637c:	b.n	16312 <radix_tree_delete@@Base+0xb2>
   1637e:	mov	r0, r5
   16380:	add	sp, #108	; 0x6c
   16382:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   16386:	nop
   16388:	adds.w	r0, ip, r4
   1638c:	lsls	r0, r5, #8
   1638e:	movs	r0, r0
   16390:	vswp	d16, d4
   16394:			; <UNDEFINED> instruction: 0xeaf20004

00016398 <radix_tree_tagged@@Base>:
   16398:	ldr	r0, [r0, #4]
   1639a:	movs	r3, #1
   1639c:	adds	r1, #20
   1639e:	lsl.w	r1, r3, r1
   163a2:	ands	r0, r1
   163a4:	bx	lr

000163a6 <radix_tree_init@@Base>:
   163a6:	ldr	r1, [pc, #44]	; (163d4 <radix_tree_init@@Base+0x2e>)
   163a8:	movs	r2, #0
   163aa:	mov.w	r0, #4294967295	; 0xffffffff
   163ae:	add	r1, pc
   163b0:	cmp	r2, #31
   163b2:	it	ls
   163b4:	rsbls	r3, r2, #31
   163b8:	add.w	r2, r2, #3
   163bc:	itet	ls
   163be:	lsrls.w	r3, r0, r3
   163c2:	movhi.w	r3, #4294967295	; 0xffffffff
   163c6:	lsrls	r3, r3, #1
   163c8:	cmp	r2, #36	; 0x24
   163ca:	str.w	r3, [r1], #4
   163ce:	bne.n	163b0 <radix_tree_init@@Base+0xa>
   163d0:	bx	lr
   163d2:	nop
   163d4:	cdp2	0, 12, cr0, cr2, cr4, {0}
   163d8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   163dc:	ldrd	r2, r3, [r0, #24]
   163e0:	ldrd	ip, r0, [r0, #32]
   163e4:	ldrd	r4, r5, [r1, #8]
   163e8:	adds.w	r8, r2, ip
   163ec:	adc.w	r9, r3, r0
   163f0:	cmp	r5, r9
   163f2:	it	eq
   163f4:	cmpeq	r4, r8
   163f6:	bcs.n	16414 <radix_tree_init@@Base+0x6e>
   163f8:	ldrd	r0, r1, [r1, #16]
   163fc:	adds	r6, r4, r0
   163fe:	adc.w	r7, r5, r1
   16402:	cmp	r3, r7
   16404:	it	eq
   16406:	cmpeq	r2, r6
   16408:	ite	cs
   1640a:	movcs.w	r0, #4294967295	; 0xffffffff
   1640e:	movcc	r0, #0
   16410:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   16414:	movs	r0, #1
   16416:	b.n	16410 <radix_tree_init@@Base+0x6a>
   16418:	ldr	r2, [pc, #64]	; (1645c <radix_tree_init@@Base+0xb6>)
   1641a:	ldr	r3, [pc, #68]	; (16460 <radix_tree_init@@Base+0xba>)
   1641c:	add	r2, pc
   1641e:	push	{lr}
   16420:	sub	sp, #36	; 0x24
   16422:	ldr	r3, [r2, r3]
   16424:	ldr	r3, [r3, #0]
   16426:	str	r3, [sp, #28]
   16428:	mov.w	r3, #0
   1642c:	ldrd	r2, r3, [r1, #24]
   16430:	strd	r2, r3, [sp, #8]
   16434:	ldrd	r2, r3, [r1, #32]
   16438:	mov	r1, sp
   1643a:	strd	r2, r3, [sp, #16]
   1643e:	bl	163d8 <radix_tree_init@@Base+0x32>
   16442:	ldr	r2, [pc, #32]	; (16464 <radix_tree_init@@Base+0xbe>)
   16444:	ldr	r3, [pc, #24]	; (16460 <radix_tree_init@@Base+0xba>)
   16446:	add	r2, pc
   16448:	ldr	r3, [r2, r3]
   1644a:	ldr	r2, [r3, #0]
   1644c:	ldr	r3, [sp, #28]
   1644e:	eors	r2, r3
   16450:	beq.n	16456 <radix_tree_init@@Base+0xb0>
   16452:	blx	8708 <__stack_chk_fail@plt>
   16456:	add	sp, #36	; 0x24
   16458:	ldr.w	pc, [sp], #4
   1645c:	strd	r0, r0, [r4, #-16]!
   16460:	lsls	r0, r5, #8
   16462:	movs	r0, r0
   16464:	ldmdb	sl!, {r2}
   16468:	b.w	861c <free@plt>
   1646c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   16470:	ldrd	r2, r3, [r0, #16]
   16474:	ldrd	r8, r9, [r1]
   16478:	cmp	r3, r9
   1647a:	it	eq
   1647c:	cmpeq	r2, r8
   1647e:	bcc.n	164c8 <radix_tree_init@@Base+0x122>
   16480:	cmp	r9, r3
   16482:	it	eq
   16484:	cmpeq	r8, r2
   16486:	bcc.n	164c2 <radix_tree_init@@Base+0x11c>
   16488:	ldrd	r2, r3, [r0, #24]
   1648c:	ldrd	ip, r0, [r0, #32]
   16490:	ldrd	r8, r9, [r1, #8]
   16494:	adds.w	r6, r2, ip
   16498:	adc.w	r7, r3, r0
   1649c:	cmp	r9, r7
   1649e:	it	eq
   164a0:	cmpeq	r8, r6
   164a2:	bcs.n	164c8 <radix_tree_init@@Base+0x122>
   164a4:	ldrd	r0, r1, [r1, #16]
   164a8:	adds.w	r4, r8, r0
   164ac:	adc.w	r5, r9, r1
   164b0:	cmp	r3, r5
   164b2:	it	eq
   164b4:	cmpeq	r2, r4
   164b6:	ite	cs
   164b8:	movcs.w	r0, #4294967295	; 0xffffffff
   164bc:	movcc	r0, #0
   164be:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   164c2:	mov.w	r0, #4294967295	; 0xffffffff
   164c6:	b.n	164be <radix_tree_init@@Base+0x118>
   164c8:	movs	r0, #1
   164ca:	b.n	164be <radix_tree_init@@Base+0x118>
   164cc:	ldr	r2, [pc, #72]	; (16518 <radix_tree_init@@Base+0x172>)
   164ce:	ldr	r3, [pc, #76]	; (1651c <radix_tree_init@@Base+0x176>)
   164d0:	add	r2, pc
   164d2:	push	{lr}
   164d4:	sub	sp, #36	; 0x24
   164d6:	ldr	r3, [r2, r3]
   164d8:	ldr	r3, [r3, #0]
   164da:	str	r3, [sp, #28]
   164dc:	mov.w	r3, #0
   164e0:	ldrd	r2, r3, [r1, #16]
   164e4:	strd	r2, r3, [sp]
   164e8:	ldrd	r2, r3, [r1, #24]
   164ec:	strd	r2, r3, [sp, #8]
   164f0:	ldrd	r2, r3, [r1, #32]
   164f4:	mov	r1, sp
   164f6:	strd	r2, r3, [sp, #16]
   164fa:	bl	1646c <radix_tree_init@@Base+0xc6>
   164fe:	ldr	r2, [pc, #32]	; (16520 <radix_tree_init@@Base+0x17a>)
   16500:	ldr	r3, [pc, #24]	; (1651c <radix_tree_init@@Base+0x176>)
   16502:	add	r2, pc
   16504:	ldr	r3, [r2, r3]
   16506:	ldr	r2, [r3, #0]
   16508:	ldr	r3, [sp, #28]
   1650a:	eors	r2, r3
   1650c:	beq.n	16512 <radix_tree_init@@Base+0x16c>
   1650e:	blx	8708 <__stack_chk_fail@plt>
   16512:	add	sp, #36	; 0x24
   16514:	ldr.w	pc, [sp], #4
   16518:	ldmia.w	r0!, {r2}
   1651c:	lsls	r0, r5, #8
   1651e:	movs	r0, r0
   16520:	ldrd	r0, r0, [lr], #-16
   16524:	ldr.w	ip, [pc, #80]	; 16578 <radix_tree_init@@Base+0x1d2>
   16528:	ldr	r4, [pc, #80]	; (1657c <radix_tree_init@@Base+0x1d6>)
   1652a:	add	ip, pc
   1652c:	ldr	r3, [pc, #80]	; (16580 <radix_tree_init@@Base+0x1da>)
   1652e:	push	{lr}
   16530:	sub	sp, #92	; 0x5c
   16532:	ldr.w	r4, [ip, r4]
   16536:	add	r3, pc
   16538:	ldr	r4, [r4, #0]
   1653a:	str	r4, [sp, #84]	; 0x54
   1653c:	mov.w	r4, #0
   16540:	ldr	r4, [pc, #64]	; (16584 <radix_tree_init@@Base+0x1de>)
   16542:	ldr	r4, [r3, r4]
   16544:	ldr	r3, [pc, #64]	; (16588 <radix_tree_init@@Base+0x1e2>)
   16546:	strd	r0, r2, [sp, #8]
   1654a:	add	r3, pc
   1654c:	ldr	r2, [pc, #60]	; (1658c <radix_tree_init@@Base+0x1e6>)
   1654e:	strd	r1, r3, [sp]
   16552:	movs	r1, #1
   16554:	ldr	r3, [pc, #56]	; (16590 <radix_tree_init@@Base+0x1ea>)
   16556:	add	r2, pc
   16558:	ldr	r0, [r4, #0]
   1655a:	add	r4, sp, #20
   1655c:	add	r3, pc
   1655e:	blx	8a64 <__fprintf_chk@plt+0x4>
   16562:	movs	r1, #16
   16564:	mov	r0, r4
   16566:	blx	88bc <backtrace@plt>
   1656a:	movs	r2, #2
   1656c:	mov	r1, r0
   1656e:	mov	r0, r4
   16570:	blx	8bcc <backtrace_symbols_fd@plt>
   16574:	blx	8b84 <abort@plt>
   16578:			; <UNDEFINED> instruction: 0xe8560004
   1657c:	lsls	r0, r5, #8
   1657e:	movs	r0, r0
   16580:	strex	r0, r0, [sl, #16]
   16584:	lsls	r0, r7, #8
   16586:	movs	r0, r0
   16588:	ldrh	r4, [r7, r6]
   1658a:	movs	r2, r0
   1658c:	subs	r1, #76	; 0x4c
   1658e:	movs	r2, r0
   16590:	ldrh	r7, [r1, r5]
   16592:	movs	r2, r0

00016594 <cache_tree_init@@Base>:
   16594:	movs	r3, #0
   16596:	str	r3, [r0, #0]
   16598:	bx	lr

0001659a <insert_cache_extent@@Base>:
   1659a:	ldr	r2, [pc, #8]	; (165a4 <insert_cache_extent@@Base+0xa>)
   1659c:	add	r2, pc
   1659e:	b.w	17f78 <rb_insert@@Base>
   165a2:	nop
   165a4:	mrc2	15, 3, pc, cr9, cr15, {7}

000165a8 <add_cache_extent@@Base>:
   165a8:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   165ac:	mov	r5, r0
   165ae:	movs	r0, #40	; 0x28
   165b0:	mov	r7, r2
   165b2:	mov	r6, r3
   165b4:	blx	8870 <malloc@plt+0x4>
   165b8:	ldr.w	r8, [pc, #72]	; 16604 <add_cache_extent@@Base+0x5c>
   165bc:	add	r8, pc
   165be:	mov	r4, r0
   165c0:	cbz	r0, 165ee <add_cache_extent@@Base+0x46>
   165c2:	movs	r2, #0
   165c4:	movs	r3, #0
   165c6:	strd	r2, r3, [r0, #16]
   165ca:	mov	r1, r0
   165cc:	ldrd	r2, r3, [sp, #24]
   165d0:	strd	r7, r6, [r0, #24]
   165d4:	strd	r2, r3, [r0, #32]
   165d8:	mov	r0, r5
   165da:	bl	1659a <insert_cache_extent@@Base>
   165de:	mov	r5, r0
   165e0:	cbz	r0, 165e8 <add_cache_extent@@Base+0x40>
   165e2:	mov	r0, r4
   165e4:	blx	8620 <free@plt+0x4>
   165e8:	mov	r0, r5
   165ea:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   165ee:	ldr	r3, [pc, #24]	; (16608 <add_cache_extent@@Base+0x60>)
   165f0:	ldr	r0, [pc, #24]	; (1660c <add_cache_extent@@Base+0x64>)
   165f2:	ldr.w	r3, [r8, r3]
   165f6:	add	r0, pc
   165f8:	ldr	r1, [r3, #0]
   165fa:	blx	8b6c <fputs@plt+0x4>
   165fe:	movs	r0, #1
   16600:	blx	8934 <exit@plt>
   16604:	b.n	16590 <radix_tree_init@@Base+0x1ea>
   16606:	movs	r4, r0
   16608:	lsls	r0, r7, #8
   1660a:	movs	r0, r0
   1660c:	ldrsb	r5, [r6, r0]
   1660e:	movs	r2, r0

00016610 <insert_cache_extent2@@Base>:
   16610:	ldr	r2, [pc, #4]	; (16618 <insert_cache_extent2@@Base+0x8>)
   16612:	add	r2, pc
   16614:	b.w	17f78 <rb_insert@@Base>
   16618:	mrc2	15, 5, pc, cr7, cr15, {7}

0001661c <lookup_cache_extent@@Base>:
   1661c:	ldr.w	ip, [pc, #72]	; 16668 <lookup_cache_extent@@Base+0x4c>
   16620:	ldr	r1, [pc, #72]	; (1666c <lookup_cache_extent@@Base+0x50>)
   16622:	add	ip, pc
   16624:	push	{lr}
   16626:	sub	sp, #36	; 0x24
   16628:	ldr.w	r1, [ip, r1]
   1662c:	ldr	r1, [r1, #0]
   1662e:	str	r1, [sp, #28]
   16630:	mov.w	r1, #0
   16634:	strd	r2, r3, [sp, #8]
   16638:	ldrd	r2, r3, [sp, #40]	; 0x28
   1663c:	mov	r1, sp
   1663e:	strd	r2, r3, [sp, #16]
   16642:	movs	r3, #0
   16644:	ldr	r2, [pc, #40]	; (16670 <lookup_cache_extent@@Base+0x54>)
   16646:	add	r2, pc
   16648:	bl	17fc0 <rb_search@@Base>
   1664c:	ldr	r2, [pc, #36]	; (16674 <lookup_cache_extent@@Base+0x58>)
   1664e:	ldr	r3, [pc, #28]	; (1666c <lookup_cache_extent@@Base+0x50>)
   16650:	add	r2, pc
   16652:	ldr	r3, [r2, r3]
   16654:	ldr	r2, [r3, #0]
   16656:	ldr	r3, [sp, #28]
   16658:	eors	r2, r3
   1665a:	beq.n	16660 <lookup_cache_extent@@Base+0x44>
   1665c:	blx	8708 <__stack_chk_fail@plt>
   16660:	add	sp, #36	; 0x24
   16662:	ldr.w	pc, [sp], #4
   16666:	nop
   16668:	b.n	16528 <radix_tree_init@@Base+0x182>
   1666a:	movs	r4, r0
   1666c:	lsls	r0, r5, #8
   1666e:	movs	r0, r0
   16670:	stc2	15, cr15, [pc, #1020]	; 16a70 <add_merge_cache_extent@@Base+0x284>
   16674:	b.n	164d8 <radix_tree_init@@Base+0x132>
   16676:	movs	r4, r0

00016678 <lookup_cache_extent2@@Base>:
   16678:	ldr.w	ip, [pc, #80]	; 166cc <lookup_cache_extent2@@Base+0x54>
   1667c:	ldr	r1, [pc, #80]	; (166d0 <lookup_cache_extent2@@Base+0x58>)
   1667e:	add	ip, pc
   16680:	push	{lr}
   16682:	sub	sp, #36	; 0x24
   16684:	ldr.w	r1, [ip, r1]
   16688:	ldr	r1, [r1, #0]
   1668a:	str	r1, [sp, #28]
   1668c:	mov.w	r1, #0
   16690:	strd	r2, r3, [sp]
   16694:	ldrd	r2, r3, [sp, #40]	; 0x28
   16698:	mov	r1, sp
   1669a:	strd	r2, r3, [sp, #8]
   1669e:	ldrd	r2, r3, [sp, #48]	; 0x30
   166a2:	strd	r2, r3, [sp, #16]
   166a6:	movs	r3, #0
   166a8:	ldr	r2, [pc, #40]	; (166d4 <lookup_cache_extent2@@Base+0x5c>)
   166aa:	add	r2, pc
   166ac:	bl	17fc0 <rb_search@@Base>
   166b0:	ldr	r2, [pc, #36]	; (166d8 <lookup_cache_extent2@@Base+0x60>)
   166b2:	ldr	r3, [pc, #28]	; (166d0 <lookup_cache_extent2@@Base+0x58>)
   166b4:	add	r2, pc
   166b6:	ldr	r3, [r2, r3]
   166b8:	ldr	r2, [r3, #0]
   166ba:	ldr	r3, [sp, #28]
   166bc:	eors	r2, r3
   166be:	beq.n	166c4 <lookup_cache_extent2@@Base+0x4c>
   166c0:	blx	8708 <__stack_chk_fail@plt>
   166c4:	add	sp, #36	; 0x24
   166c6:	ldr.w	pc, [sp], #4
   166ca:	nop
   166cc:	b.n	164d4 <radix_tree_init@@Base+0x12e>
   166ce:	movs	r4, r0
   166d0:	lsls	r0, r5, #8
   166d2:	movs	r0, r0
   166d4:	ldc2	15, cr15, [pc, #1020]!	; 16ad4 <add_merge_cache_extent@@Base+0x2e8>
   166d8:	b.n	16474 <radix_tree_init@@Base+0xce>
   166da:	movs	r4, r0

000166dc <search_cache_extent@@Base>:
   166dc:	ldr.w	ip, [pc, #76]	; 1672c <search_cache_extent@@Base+0x50>
   166e0:	ldr	r1, [pc, #76]	; (16730 <search_cache_extent@@Base+0x54>)
   166e2:	add	ip, pc
   166e4:	push	{lr}
   166e6:	sub	sp, #44	; 0x2c
   166e8:	ldr.w	r1, [ip, r1]
   166ec:	ldr	r1, [r1, #0]
   166ee:	str	r1, [sp, #36]	; 0x24
   166f0:	mov.w	r1, #0
   166f4:	strd	r2, r3, [sp, #16]
   166f8:	movs	r2, #1
   166fa:	movs	r3, #0
   166fc:	strd	r2, r3, [sp, #24]
   16700:	add	r1, sp, #8
   16702:	ldr	r2, [pc, #48]	; (16734 <search_cache_extent@@Base+0x58>)
   16704:	add	r3, sp, #4
   16706:	add	r2, pc
   16708:	bl	17fc0 <rb_search@@Base>
   1670c:	cbnz	r0, 16710 <search_cache_extent@@Base+0x34>
   1670e:	ldr	r0, [sp, #4]
   16710:	ldr	r2, [pc, #36]	; (16738 <search_cache_extent@@Base+0x5c>)
   16712:	ldr	r3, [pc, #28]	; (16730 <search_cache_extent@@Base+0x54>)
   16714:	add	r2, pc
   16716:	ldr	r3, [r2, r3]
   16718:	ldr	r2, [r3, #0]
   1671a:	ldr	r3, [sp, #36]	; 0x24
   1671c:	eors	r2, r3
   1671e:	beq.n	16724 <search_cache_extent@@Base+0x48>
   16720:	blx	8708 <__stack_chk_fail@plt>
   16724:	add	sp, #44	; 0x2c
   16726:	ldr.w	pc, [sp], #4
   1672a:	nop
   1672c:	b.n	1646c <radix_tree_init@@Base+0xc6>
   1672e:	movs	r4, r0
   16730:	lsls	r0, r5, #8
   16732:	movs	r0, r0
   16734:	stc2l	15, cr15, [pc], {255}	; 0xff
   16738:	b.n	16414 <radix_tree_init@@Base+0x6e>
   1673a:	movs	r4, r0

0001673c <search_cache_extent2@@Base>:
   1673c:	ldr.w	ip, [pc, #84]	; 16794 <search_cache_extent2@@Base+0x58>
   16740:	ldr	r1, [pc, #84]	; (16798 <search_cache_extent2@@Base+0x5c>)
   16742:	add	ip, pc
   16744:	push	{lr}
   16746:	sub	sp, #44	; 0x2c
   16748:	ldr.w	r1, [ip, r1]
   1674c:	ldr	r1, [r1, #0]
   1674e:	str	r1, [sp, #36]	; 0x24
   16750:	mov.w	r1, #0
   16754:	strd	r2, r3, [sp, #8]
   16758:	ldrd	r2, r3, [sp, #48]	; 0x30
   1675c:	add	r1, sp, #8
   1675e:	strd	r2, r3, [sp, #16]
   16762:	movs	r2, #1
   16764:	movs	r3, #0
   16766:	strd	r2, r3, [sp, #24]
   1676a:	ldr	r2, [pc, #48]	; (1679c <search_cache_extent2@@Base+0x60>)
   1676c:	add	r3, sp, #4
   1676e:	add	r2, pc
   16770:	bl	17fc0 <rb_search@@Base>
   16774:	cbnz	r0, 16778 <search_cache_extent2@@Base+0x3c>
   16776:	ldr	r0, [sp, #4]
   16778:	ldr	r2, [pc, #36]	; (167a0 <search_cache_extent2@@Base+0x64>)
   1677a:	ldr	r3, [pc, #28]	; (16798 <search_cache_extent2@@Base+0x5c>)
   1677c:	add	r2, pc
   1677e:	ldr	r3, [r2, r3]
   16780:	ldr	r2, [r3, #0]
   16782:	ldr	r3, [sp, #36]	; 0x24
   16784:	eors	r2, r3
   16786:	beq.n	1678c <search_cache_extent2@@Base+0x50>
   16788:	blx	8708 <__stack_chk_fail@plt>
   1678c:	add	sp, #44	; 0x2c
   1678e:	ldr.w	pc, [sp], #4
   16792:	nop
   16794:	b.n	16414 <radix_tree_init@@Base+0x6e>
   16796:	movs	r4, r0
   16798:	lsls	r0, r5, #8
   1679a:	movs	r0, r0
   1679c:	ldc2l	15, cr15, [fp], #1020	; 0x3fc
   167a0:	b.n	163ac <radix_tree_init@@Base+0x6>
   167a2:	movs	r4, r0

000167a4 <first_cache_extent@@Base>:
   167a4:	b.w	13c46 <rb_first@@Base>

000167a8 <last_cache_extent@@Base>:
   167a8:	b.w	13c56 <rb_last@@Base>

000167ac <prev_cache_extent@@Base>:
   167ac:	b.w	13c92 <rb_prev@@Base>

000167b0 <next_cache_extent@@Base>:
   167b0:	b.w	13c66 <rb_next@@Base>

000167b4 <remove_cache_extent@@Base>:
   167b4:	mov	r3, r1
   167b6:	mov	r1, r0
   167b8:	mov	r0, r3
   167ba:	b.w	139d0 <rb_erase@@Base>

000167be <cache_tree_free_extents@@Base>:
   167be:	push	{r4, r5, r6, lr}
   167c0:	mov	r5, r0
   167c2:	mov	r6, r1
   167c4:	mov	r0, r5
   167c6:	bl	167a4 <first_cache_extent@@Base>
   167ca:	mov	r4, r0
   167cc:	cbnz	r0, 167d0 <cache_tree_free_extents@@Base+0x12>
   167ce:	pop	{r4, r5, r6, pc}
   167d0:	mov	r0, r5
   167d2:	mov	r1, r4
   167d4:	bl	167b4 <remove_cache_extent@@Base>
   167d8:	mov	r0, r4
   167da:	blx	r6
   167dc:	b.n	167c4 <cache_tree_free_extents@@Base+0x6>

000167de <free_extent_cache_tree@@Base>:
   167de:	ldr	r1, [pc, #8]	; (167e8 <free_extent_cache_tree@@Base+0xa>)
   167e0:	add	r1, pc
   167e2:	b.w	167be <cache_tree_free_extents@@Base>
   167e6:	nop
   167e8:	stc2	15, cr15, [r5], {255}	; 0xff

000167ec <add_merge_cache_extent@@Base>:
   167ec:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   167f0:	sub	sp, #36	; 0x24
   167f2:	ldr	r4, [r0, #0]
   167f4:	mov	r5, r0
   167f6:	ldr	r1, [sp, #72]	; 0x48
   167f8:	mov	sl, r2
   167fa:	mov	fp, r3
   167fc:	str	r1, [sp, #0]
   167fe:	ldr	r1, [sp, #76]	; 0x4c
   16800:	str	r1, [sp, #4]
   16802:	cmp	r4, #0
   16804:	beq.w	1695e <add_merge_cache_extent@@Base+0x172>
   16808:	bl	166dc <search_cache_extent@@Base>
   1680c:	mov	r7, r0
   1680e:	cbnz	r0, 16820 <add_merge_cache_extent@@Base+0x34>
   16810:	mov	r0, r5
   16812:	bl	167a8 <last_cache_extent@@Base>
   16816:	mov	r4, r0
   16818:	cmp	r0, #0
   1681a:	bne.n	16890 <add_merge_cache_extent@@Base+0xa4>
   1681c:	movs	r7, #0
   1681e:	b.n	168ce <add_merge_cache_extent@@Base+0xe2>
   16820:	ldrd	r2, r3, [r0, #24]
   16824:	cmp	r3, fp
   16826:	it	eq
   16828:	cmpeq	r2, sl
   1682a:	bcc.n	1685a <add_merge_cache_extent@@Base+0x6e>
   1682c:	bl	167ac <prev_cache_extent@@Base>
   16830:	mov	r4, r0
   16832:	mov	r0, r7
   16834:	ldr	r3, [sp, #0]
   16836:	adds.w	r3, sl, r3
   1683a:	str	r3, [sp, #8]
   1683c:	ldr	r3, [sp, #4]
   1683e:	adc.w	r3, fp, r3
   16842:	str	r3, [sp, #12]
   16844:	ldrd	r6, r7, [sp, #8]
   16848:	ldrd	r2, r3, [r0, #24]
   1684c:	cmp	r3, r7
   1684e:	it	eq
   16850:	cmpeq	r2, r6
   16852:	bcc.w	16966 <add_merge_cache_extent@@Base+0x17a>
   16856:	cbz	r4, 16898 <add_merge_cache_extent@@Base+0xac>
   16858:	b.n	16864 <add_merge_cache_extent@@Base+0x78>
   1685a:	bl	167b0 <next_cache_extent@@Base>
   1685e:	mov	r4, r7
   16860:	cmp	r0, #0
   16862:	bne.n	16834 <add_merge_cache_extent@@Base+0x48>
   16864:	ldrd	r2, r1, [r4, #32]
   16868:	ldrd	r3, r7, [r4, #24]
   1686c:	adds	r3, r3, r2
   1686e:	str	r3, [sp, #16]
   16870:	adc.w	r3, r7, r1
   16874:	str	r3, [sp, #20]
   16876:	ldrd	r2, r3, [sp, #16]
   1687a:	cmp	fp, r3
   1687c:	it	eq
   1687e:	cmpeq	sl, r2
   16880:	bcs.n	16894 <add_merge_cache_extent@@Base+0xa8>
   16882:	ldr	r0, [pc, #248]	; (1697c <add_merge_cache_extent@@Base+0x190>)
   16884:	movs	r2, #1
   16886:	mov.w	r1, #306	; 0x132
   1688a:	add	r0, pc
   1688c:	bl	16524 <radix_tree_init@@Base+0x17e>
   16890:	mov	r0, r7
   16892:	b.n	16864 <add_merge_cache_extent@@Base+0x78>
   16894:	cmp	r0, #0
   16896:	beq.n	1681c <add_merge_cache_extent@@Base+0x30>
   16898:	ldr	r1, [sp, #0]
   1689a:	ldrd	r2, r3, [r0, #24]
   1689e:	adds.w	r8, sl, r1
   168a2:	ldr	r1, [sp, #4]
   168a4:	adc.w	r9, fp, r1
   168a8:	cmp	r9, r3
   168aa:	it	eq
   168ac:	cmpeq	r8, r2
   168ae:	bne.n	1681c <add_merge_cache_extent@@Base+0x30>
   168b0:	ldrd	r3, r2, [r0, #32]
   168b4:	movs	r7, #1
   168b6:	strd	sl, fp, [r0, #24]
   168ba:	adds.w	r3, r8, r3
   168be:	adc.w	r2, r9, r2
   168c2:	subs.w	r3, r3, sl
   168c6:	sbc.w	r2, r2, fp
   168ca:	strd	r3, r2, [r0, #32]
   168ce:	cbz	r4, 16924 <add_merge_cache_extent@@Base+0x138>
   168d0:	ldrd	ip, lr, [r4, #24]
   168d4:	ldr	r3, [r4, #32]
   168d6:	adds.w	r3, ip, r3
   168da:	str	r3, [sp, #24]
   168dc:	ldr	r3, [r4, #36]	; 0x24
   168de:	adc.w	r3, lr, r3
   168e2:	str	r3, [sp, #28]
   168e4:	ldrd	r2, r3, [sp, #24]
   168e8:	cmp	r3, fp
   168ea:	it	eq
   168ec:	cmpeq	r2, sl
   168ee:	bne.n	16962 <add_merge_cache_extent@@Base+0x176>
   168f0:	cbz	r7, 16942 <add_merge_cache_extent@@Base+0x156>
   168f2:	ldrd	r3, r2, [r0, #24]
   168f6:	ldr	r1, [r0, #32]
   168f8:	adds	r3, r3, r1
   168fa:	ldr	r1, [r0, #36]	; 0x24
   168fc:	adc.w	r2, r1, r2
   16900:	subs.w	r3, r3, ip
   16904:	sbc.w	r2, r2, lr
   16908:	strd	r3, r2, [r0, #32]
   1690c:	ldrd	r2, r3, [r4, #24]
   16910:	mov	r1, r4
   16912:	strd	r2, r3, [r0, #24]
   16916:	mov	r0, r5
   16918:	bl	167b4 <remove_cache_extent@@Base>
   1691c:	mov	r0, r4
   1691e:	blx	8620 <free@plt+0x4>
   16922:	mov	r4, r7
   16924:	orrs.w	r3, r7, r4
   16928:	bne.n	16972 <add_merge_cache_extent@@Base+0x186>
   1692a:	ldr	r3, [sp, #0]
   1692c:	mov	r2, sl
   1692e:	mov	r0, r5
   16930:	str	r3, [sp, #72]	; 0x48
   16932:	ldr	r3, [sp, #4]
   16934:	str	r3, [sp, #76]	; 0x4c
   16936:	mov	r3, fp
   16938:	add	sp, #36	; 0x24
   1693a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1693e:	b.w	165a8 <add_cache_extent@@Base>
   16942:	ldr	r3, [sp, #0]
   16944:	adds.w	r1, sl, r3
   16948:	ldr	r3, [sp, #4]
   1694a:	adc.w	r2, fp, r3
   1694e:	subs.w	r1, r1, ip
   16952:	sbc.w	r2, r2, lr
   16956:	strd	r1, r2, [r4, #32]
   1695a:	movs	r4, #1
   1695c:	b.n	16924 <add_merge_cache_extent@@Base+0x138>
   1695e:	mov	r7, r4
   16960:	b.n	16924 <add_merge_cache_extent@@Base+0x138>
   16962:	movs	r4, #0
   16964:	b.n	16924 <add_merge_cache_extent@@Base+0x138>
   16966:	ldr	r0, [pc, #24]	; (16980 <add_merge_cache_extent@@Base+0x194>)
   16968:	movs	r2, #1
   1696a:	movw	r1, #305	; 0x131
   1696e:	add	r0, pc
   16970:	b.n	1688c <add_merge_cache_extent@@Base+0xa0>
   16972:	movs	r0, #0
   16974:	add	sp, #36	; 0x24
   16976:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1697a:	nop
   1697c:	ldr	r0, [r6, r0]
   1697e:	movs	r2, r0
   16980:	ldrsb	r5, [r6, r5]
   16982:	movs	r2, r0
   16984:	ldrd	r3, r2, [r0, #48]	; 0x30
   16988:	push	{r4, lr}
   1698a:	adds	r3, #1
   1698c:	ldrd	r1, r4, [r0, #40]	; 0x28
   16990:	adc.w	r2, r2, #0
   16994:	subs	r3, r3, r1
   16996:	sbc.w	r2, r2, r4
   1699a:	strd	r1, r4, [r0, #24]
   1699e:	strd	r3, r2, [r0, #32]
   169a2:	pop	{r4, pc}
   169a4:	push	{r3, lr}
   169a6:	movs	r0, #72	; 0x48
   169a8:	blx	8870 <malloc@plt+0x4>
   169ac:	cbz	r0, 169c4 <add_merge_cache_extent@@Base+0x1d8>
   169ae:	movs	r2, #0
   169b0:	movs	r3, #0
   169b2:	mov.w	ip, #1
   169b6:	movs	r1, #0
   169b8:	strd	r2, r3, [r0, #16]
   169bc:	strd	ip, r1, [r0, #56]	; 0x38
   169c0:	strd	r2, r3, [r0, #64]	; 0x40
   169c4:	pop	{r3, pc}
   169c6:	push	{r3, r4, r5, r6, r7, lr}
   169c8:	mov	r4, r0
   169ca:	ldr	r7, [sp, #24]
   169cc:	movs	r0, #1
   169ce:	mov	r6, r2
   169d0:	mov	r5, r3
   169d2:	add.w	r1, r7, #96	; 0x60
   169d6:	blx	8588 <calloc@plt+0x4>
   169da:	cbz	r0, 16a1a <add_merge_cache_extent@@Base+0x22e>
   169dc:	movs	r3, #1
   169de:	movs	r1, #0
   169e0:	mov.w	r2, #4294967295	; 0xffffffff
   169e4:	strd	r3, r1, [r0, #80]	; 0x50
   169e8:	str	r4, [r0, #92]	; 0x5c
   169ea:	mov.w	r3, #4294967295	; 0xffffffff
   169ee:	adds	r4, #64	; 0x40
   169f0:	str	r3, [r0, #88]	; 0x58
   169f2:	strd	r6, r5, [r0, #40]	; 0x28
   169f6:	mov.w	r3, #4294967295	; 0xffffffff
   169fa:	str	r7, [r0, #76]	; 0x4c
   169fc:	strd	r2, r3, [r0, #48]	; 0x30
   16a00:	add.w	r3, r0, #68	; 0x44
   16a04:	strd	r6, r5, [r0, #24]
   16a08:	strd	r3, r3, [r0, #68]	; 0x44
   16a0c:	add.w	r3, r0, #60	; 0x3c
   16a10:	strd	r7, r1, [r0, #32]
   16a14:	str	r4, [r0, #56]	; 0x38
   16a16:	strd	r3, r3, [r0, #60]	; 0x3c
   16a1a:	pop	{r3, r4, r5, r6, r7, pc}
   16a1c:	ldr.w	ip, [pc, #104]	; 16a88 <add_merge_cache_extent@@Base+0x29c>
   16a20:	push	{r4, r5, lr}
   16a22:	add	ip, pc
   16a24:	ldr	r5, [pc, #100]	; (16a8c <add_merge_cache_extent@@Base+0x2a0>)
   16a26:	sub	sp, #92	; 0x5c
   16a28:	ldr	r4, [pc, #100]	; (16a90 <add_merge_cache_extent@@Base+0x2a4>)
   16a2a:	ldr.w	r5, [ip, r5]
   16a2e:	add	r4, pc
   16a30:	ldr	r5, [r5, #0]
   16a32:	str	r5, [sp, #84]	; 0x54
   16a34:	mov.w	r5, #0
   16a38:	cbz	r3, 16a6e <add_merge_cache_extent@@Base+0x282>
   16a3a:	ldr	r5, [pc, #88]	; (16a94 <add_merge_cache_extent@@Base+0x2a8>)
   16a3c:	ldr	r4, [r4, r5]
   16a3e:	strd	r2, r1, [sp]
   16a42:	movs	r1, #1
   16a44:	strd	r0, r3, [sp, #8]
   16a48:	ldr	r2, [pc, #76]	; (16a98 <add_merge_cache_extent@@Base+0x2ac>)
   16a4a:	ldr	r3, [pc, #80]	; (16a9c <add_merge_cache_extent@@Base+0x2b0>)
   16a4c:	ldr	r0, [r4, #0]
   16a4e:	add	r4, sp, #20
   16a50:	add	r3, pc
   16a52:	add	r2, pc
   16a54:	blx	8a64 <__fprintf_chk@plt+0x4>
   16a58:	movs	r1, #16
   16a5a:	mov	r0, r4
   16a5c:	blx	88bc <backtrace@plt>
   16a60:	movs	r2, #2
   16a62:	mov	r1, r0
   16a64:	mov	r0, r4
   16a66:	blx	8bcc <backtrace_symbols_fd@plt>
   16a6a:	blx	8b84 <abort@plt>
   16a6e:	ldr	r2, [pc, #48]	; (16aa0 <add_merge_cache_extent@@Base+0x2b4>)
   16a70:	ldr	r3, [pc, #24]	; (16a8c <add_merge_cache_extent@@Base+0x2a0>)
   16a72:	add	r2, pc
   16a74:	ldr	r3, [r2, r3]
   16a76:	ldr	r2, [r3, #0]
   16a78:	ldr	r3, [sp, #84]	; 0x54
   16a7a:	eors	r2, r3
   16a7c:	beq.n	16a82 <add_merge_cache_extent@@Base+0x296>
   16a7e:	blx	8708 <__stack_chk_fail@plt>
   16a82:	add	sp, #92	; 0x5c
   16a84:	pop	{r4, r5, pc}
   16a86:	nop
   16a88:	b.n	17148 <set_extent_bits@@Base+0x18c>
   16a8a:	movs	r4, r0
   16a8c:	lsls	r0, r5, #8
   16a8e:	movs	r0, r0
   16a90:	b.n	17138 <set_extent_bits@@Base+0x17c>
   16a92:	movs	r4, r0
   16a94:	lsls	r0, r7, #8
   16a96:	movs	r0, r0
   16a98:	adds	r4, #80	; 0x50
   16a9a:	movs	r2, r0
   16a9c:	ldrsb	r5, [r1, r3]
   16a9e:	movs	r2, r0
   16aa0:	b.n	170c0 <set_extent_bits@@Base+0x104>
   16aa2:	movs	r4, r0
   16aa4:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   16aa8:	mov	r4, r2
   16aaa:	ldrd	r2, r3, [r1, #40]	; 0x28
   16aae:	mov	r5, r1
   16ab0:	ldrd	r6, r8, [sp, #24]
   16ab4:	mov	r7, r0
   16ab6:	mov	r0, r4
   16ab8:	strd	r2, r3, [r4, #40]	; 0x28
   16abc:	adds.w	r2, r6, #4294967295	; 0xffffffff
   16ac0:	adc.w	r3, r8, #4294967295	; 0xffffffff
   16ac4:	strd	r2, r3, [r4, #48]	; 0x30
   16ac8:	ldr	r3, [r1, #60]	; 0x3c
   16aca:	str	r3, [r4, #60]	; 0x3c
   16acc:	bl	16984 <add_merge_cache_extent@@Base+0x198>
   16ad0:	mov	r0, r5
   16ad2:	strd	r6, r8, [r5, #40]	; 0x28
   16ad6:	bl	16984 <add_merge_cache_extent@@Base+0x198>
   16ada:	mov	r1, r4
   16adc:	mov	r0, r7
   16ade:	bl	1659a <insert_cache_extent@@Base>
   16ae2:	ldr	r1, [pc, #20]	; (16af8 <add_merge_cache_extent@@Base+0x30c>)
   16ae4:	movs	r2, #185	; 0xb9
   16ae6:	add	r1, pc
   16ae8:	mov	r3, r0
   16aea:	ldr	r0, [pc, #16]	; (16afc <add_merge_cache_extent@@Base+0x310>)
   16aec:	add	r0, pc
   16aee:	bl	16a1c <add_merge_cache_extent@@Base+0x230>
   16af2:	movs	r0, #0
   16af4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   16af8:	ldrsb	r3, [r7, r6]
   16afa:	movs	r2, r0
   16afc:	subs	r1, #248	; 0xf8
   16afe:	movs	r2, r0
   16b00:	ldr	r1, [pc, #124]	; (16b80 <add_merge_cache_extent@@Base+0x394>)
   16b02:	movw	r2, #649	; 0x289
   16b06:	push	{r3, r4, r5, lr}
   16b08:	mov	r4, r0
   16b0a:	ldr	r5, [r0, #56]	; 0x38
   16b0c:	add	r1, pc
   16b0e:	ldr	r3, [r0, #80]	; 0x50
   16b10:	adds	r1, #12
   16b12:	ldr	r0, [pc, #112]	; (16b84 <add_merge_cache_extent@@Base+0x398>)
   16b14:	add	r0, pc
   16b16:	bl	16a1c <add_merge_cache_extent@@Base+0x230>
   16b1a:	cbz	r5, 16b7a <add_merge_cache_extent@@Base+0x38e>
   16b1c:	ldrd	r2, r3, [r5, #16]
   16b20:	movs	r1, #0
   16b22:	ldr	r0, [r4, #76]	; 0x4c
   16b24:	cmp	r3, r1
   16b26:	it	eq
   16b28:	cmpeq	r2, r0
   16b2a:	ite	cc
   16b2c:	movcc	r3, #1
   16b2e:	movcs	r3, #0
   16b30:	ldr	r1, [pc, #84]	; (16b88 <add_merge_cache_extent@@Base+0x39c>)
   16b32:	movw	r2, #650	; 0x28a
   16b36:	ldr	r0, [pc, #84]	; (16b8c <add_merge_cache_extent@@Base+0x3a0>)
   16b38:	add	r1, pc
   16b3a:	adds	r1, #12
   16b3c:	add	r0, pc
   16b3e:	bl	16a1c <add_merge_cache_extent@@Base+0x230>
   16b42:	ldrd	r1, r2, [r4, #60]	; 0x3c
   16b46:	add.w	r3, r4, #60	; 0x3c
   16b4a:	str	r2, [r1, #4]
   16b4c:	str	r1, [r2, #0]
   16b4e:	strd	r3, r3, [r4, #60]	; 0x3c
   16b52:	ldr	r3, [r4, #84]	; 0x54
   16b54:	lsls	r3, r3, #20
   16b56:	bmi.n	16b70 <add_merge_cache_extent@@Base+0x384>
   16b58:	mov	r1, r4
   16b5a:	adds	r0, r5, #4
   16b5c:	bl	167b4 <remove_cache_extent@@Base>
   16b60:	ldrd	r2, r3, [r5, #16]
   16b64:	ldr	r1, [r4, #76]	; 0x4c
   16b66:	subs	r2, r2, r1
   16b68:	sbc.w	r3, r3, #0
   16b6c:	strd	r2, r3, [r5, #16]
   16b70:	mov	r0, r4
   16b72:	ldmia.w	sp!, {r3, r4, r5, lr}
   16b76:	b.w	861c <free@plt>
   16b7a:	mov	r3, r5
   16b7c:	b.n	16b30 <add_merge_cache_extent@@Base+0x344>
   16b7e:	nop
   16b80:	ldrsb	r5, [r2, r6]
   16b82:	movs	r2, r0
   16b84:	ldrsb	r5, [r2, r0]
   16b86:	movs	r2, r0
   16b88:	ldrsb	r1, [r5, r5]
   16b8a:	movs	r2, r0
   16b8c:	strb	r6, [r6, r7]
   16b8e:	movs	r2, r0
   16b90:	push	{r3, r4, r5, lr}
   16b92:	mov	r4, r0
   16b94:	ldr	r5, [r0, #56]	; 0x38
   16b96:	movs	r2, #67	; 0x43
   16b98:	ldr	r1, [pc, #32]	; (16bbc <add_merge_cache_extent@@Base+0x3d0>)
   16b9a:	subs	r5, #1
   16b9c:	str	r5, [r0, #56]	; 0x38
   16b9e:	ldr	r0, [pc, #32]	; (16bc0 <add_merge_cache_extent@@Base+0x3d4>)
   16ba0:	add	r1, pc
   16ba2:	lsrs	r3, r5, #31
   16ba4:	adds	r1, #37	; 0x25
   16ba6:	add	r0, pc
   16ba8:	bl	16a1c <add_merge_cache_extent@@Base+0x230>
   16bac:	cbnz	r5, 16bb8 <add_merge_cache_extent@@Base+0x3cc>
   16bae:	mov	r0, r4
   16bb0:	ldmia.w	sp!, {r3, r4, r5, lr}
   16bb4:	b.w	861c <free@plt>
   16bb8:	pop	{r3, r4, r5, pc}
   16bba:	nop
   16bbc:	ldrsb	r1, [r0, r4]
   16bbe:	movs	r2, r0
   16bc0:	strb	r7, [r5, r6]
   16bc2:	movs	r2, r0
   16bc4:	b.n	16b90 <add_merge_cache_extent@@Base+0x3a4>
   16bc6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   16bca:	mov	r5, r0
   16bcc:	ldr	r3, [r1, #60]	; 0x3c
   16bce:	mov	r4, r1
   16bd0:	tst.w	r3, #10
   16bd4:	bne.n	16c5c <add_merge_cache_extent@@Base+0x470>
   16bd6:	mov	r0, r1
   16bd8:	bl	167ac <prev_cache_extent@@Base>
   16bdc:	mov	sl, r0
   16bde:	cbz	r0, 16c1c <add_merge_cache_extent@@Base+0x430>
   16be0:	ldrd	r3, r2, [r4, #40]	; 0x28
   16be4:	adds.w	r8, r3, #4294967295	; 0xffffffff
   16be8:	adc.w	r9, r2, #4294967295	; 0xffffffff
   16bec:	ldrd	r2, r3, [r0, #48]	; 0x30
   16bf0:	cmp	r3, r9
   16bf2:	it	eq
   16bf4:	cmpeq	r2, r8
   16bf6:	bne.n	16c1c <add_merge_cache_extent@@Base+0x430>
   16bf8:	ldr	r2, [r0, #60]	; 0x3c
   16bfa:	ldr	r3, [r4, #60]	; 0x3c
   16bfc:	cmp	r2, r3
   16bfe:	bne.n	16c1c <add_merge_cache_extent@@Base+0x430>
   16c00:	ldrd	r2, r3, [r0, #40]	; 0x28
   16c04:	mov	r0, r4
   16c06:	strd	r2, r3, [r4, #40]	; 0x28
   16c0a:	bl	16984 <add_merge_cache_extent@@Base+0x198>
   16c0e:	mov	r0, r5
   16c10:	mov	r1, sl
   16c12:	bl	167b4 <remove_cache_extent@@Base>
   16c16:	mov	r0, sl
   16c18:	bl	16b90 <add_merge_cache_extent@@Base+0x3a4>
   16c1c:	mov	r0, r4
   16c1e:	bl	167b0 <next_cache_extent@@Base>
   16c22:	cbz	r0, 16c5c <add_merge_cache_extent@@Base+0x470>
   16c24:	ldrd	r3, r2, [r4, #48]	; 0x30
   16c28:	adds	r6, r3, #1
   16c2a:	adc.w	r7, r2, #0
   16c2e:	ldrd	r2, r3, [r0, #40]	; 0x28
   16c32:	cmp	r3, r7
   16c34:	it	eq
   16c36:	cmpeq	r2, r6
   16c38:	bne.n	16c5c <add_merge_cache_extent@@Base+0x470>
   16c3a:	ldr	r2, [r0, #60]	; 0x3c
   16c3c:	ldr	r3, [r4, #60]	; 0x3c
   16c3e:	cmp	r2, r3
   16c40:	bne.n	16c5c <add_merge_cache_extent@@Base+0x470>
   16c42:	ldrd	r2, r3, [r4, #40]	; 0x28
   16c46:	strd	r2, r3, [r0, #40]	; 0x28
   16c4a:	bl	16984 <add_merge_cache_extent@@Base+0x198>
   16c4e:	mov	r0, r5
   16c50:	mov	r1, r4
   16c52:	bl	167b4 <remove_cache_extent@@Base>
   16c56:	mov	r0, r4
   16c58:	bl	16b90 <add_merge_cache_extent@@Base+0x3a4>
   16c5c:	movs	r0, #0
   16c5e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   16c62:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   16c66:	mov	r5, r0
   16c68:	ldrd	r8, r9, [sp, #32]
   16c6c:	mov	r4, r1
   16c6e:	ldr.w	sl, [pc, #96]	; 16cd0 <add_merge_cache_extent@@Base+0x4e4>
   16c72:	mov	r7, r3
   16c74:	cmp	r9, r3
   16c76:	ldr	r0, [pc, #92]	; (16cd4 <add_merge_cache_extent@@Base+0x4e8>)
   16c78:	add	sl, pc
   16c7a:	it	eq
   16c7c:	cmpeq	r8, r2
   16c7e:	add.w	sl, sl, #61	; 0x3d
   16c82:	mov	r6, r2
   16c84:	ite	cc
   16c86:	movcc	r3, #1
   16c88:	movcs	r3, #0
   16c8a:	mov	r1, sl
   16c8c:	add	r0, pc
   16c8e:	movs	r2, #158	; 0x9e
   16c90:	bl	16a1c <add_merge_cache_extent@@Base+0x230>
   16c94:	ldr	r2, [sp, #40]	; 0x28
   16c96:	ldr	r3, [r4, #60]	; 0x3c
   16c98:	mov	r0, r4
   16c9a:	strd	r6, r7, [r4, #40]	; 0x28
   16c9e:	orrs	r3, r2
   16ca0:	strd	r8, r9, [r4, #48]	; 0x30
   16ca4:	str	r3, [r4, #60]	; 0x3c
   16ca6:	bl	16984 <add_merge_cache_extent@@Base+0x198>
   16caa:	mov	r1, r4
   16cac:	mov	r0, r5
   16cae:	bl	1659a <insert_cache_extent@@Base>
   16cb2:	movs	r2, #164	; 0xa4
   16cb4:	mov	r1, sl
   16cb6:	mov	r3, r0
   16cb8:	ldr	r0, [pc, #28]	; (16cd8 <add_merge_cache_extent@@Base+0x4ec>)
   16cba:	add	r0, pc
   16cbc:	bl	16a1c <add_merge_cache_extent@@Base+0x230>
   16cc0:	mov	r1, r4
   16cc2:	mov	r0, r5
   16cc4:	bl	16bc6 <add_merge_cache_extent@@Base+0x3da>
   16cc8:	movs	r0, #0
   16cca:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   16cce:	nop
   16cd0:	ldrsb	r1, [r5, r0]
   16cd2:	movs	r2, r0
   16cd4:	strb	r1, [r3, r3]
   16cd6:	movs	r2, r0
   16cd8:	subs	r0, #42	; 0x2a
   16cda:	movs	r2, r0
   16cdc:	push	{r3, r4, r5, lr}
   16cde:	mov	r4, r1
   16ce0:	ldr	r3, [r1, #60]	; 0x3c
   16ce2:	and.w	r5, r2, r3
   16ce6:	bic.w	r2, r3, r2
   16cea:	str	r2, [r1, #60]	; 0x3c
   16cec:	cbnz	r2, 16cfc <add_merge_cache_extent@@Base+0x510>
   16cee:	bl	167b4 <remove_cache_extent@@Base>
   16cf2:	mov	r0, r4
   16cf4:	bl	16b90 <add_merge_cache_extent@@Base+0x3a4>
   16cf8:	mov	r0, r5
   16cfa:	pop	{r3, r4, r5, pc}
   16cfc:	bl	16bc6 <add_merge_cache_extent@@Base+0x3da>
   16d00:	b.n	16cf8 <add_merge_cache_extent@@Base+0x50c>
   16d02:	push	{r0, r1, r4, r5, r6, lr}
   16d04:	mov	r6, r1
   16d06:	mov	r4, r0
   16d08:	cbz	r0, 16d64 <add_merge_cache_extent@@Base+0x578>
   16d0a:	cmn.w	r0, #4096	; 0x1000
   16d0e:	bhi.n	16d64 <add_merge_cache_extent@@Base+0x578>
   16d10:	ldr	r5, [r0, #80]	; 0x50
   16d12:	movw	r2, #665	; 0x299
   16d16:	ldr	r1, [pc, #80]	; (16d68 <add_merge_cache_extent@@Base+0x57c>)
   16d18:	subs	r5, #1
   16d1a:	str	r5, [r0, #80]	; 0x50
   16d1c:	ldr	r0, [pc, #76]	; (16d6c <add_merge_cache_extent@@Base+0x580>)
   16d1e:	add	r1, pc
   16d20:	lsrs	r3, r5, #31
   16d22:	adds	r1, #74	; 0x4a
   16d24:	add	r0, pc
   16d26:	bl	16a1c <add_merge_cache_extent@@Base+0x230>
   16d2a:	cbnz	r5, 16d64 <add_merge_cache_extent@@Base+0x578>
   16d2c:	ldr	r3, [r4, #84]	; 0x54
   16d2e:	lsls	r2, r3, #31
   16d30:	bpl.n	16d42 <add_merge_cache_extent@@Base+0x556>
   16d32:	ldr	r3, [r4, #76]	; 0x4c
   16d34:	ldr	r0, [pc, #56]	; (16d70 <add_merge_cache_extent@@Base+0x584>)
   16d36:	str	r3, [sp, #0]
   16d38:	add	r0, pc
   16d3a:	ldrd	r2, r3, [r4, #40]	; 0x28
   16d3e:	bl	17b00 <__btrfs_warning@@Base>
   16d42:	ldrd	r1, r2, [r4, #68]	; 0x44
   16d46:	add.w	r3, r4, #68	; 0x44
   16d4a:	str	r2, [r1, #4]
   16d4c:	str	r1, [r2, #0]
   16d4e:	strd	r3, r3, [r4, #68]	; 0x44
   16d52:	ldr	r3, [r4, #84]	; 0x54
   16d54:	lsls	r3, r3, #20
   16d56:	bmi.n	16d5a <add_merge_cache_extent@@Base+0x56e>
   16d58:	cbz	r6, 16d64 <add_merge_cache_extent@@Base+0x578>
   16d5a:	mov	r0, r4
   16d5c:	add	sp, #8
   16d5e:	ldmia.w	sp!, {r4, r5, r6, lr}
   16d62:	b.n	16b00 <add_merge_cache_extent@@Base+0x314>
   16d64:	add	sp, #8
   16d66:	pop	{r4, r5, r6, pc}
   16d68:	strb	r3, [r0, r6]
   16d6a:	movs	r2, r0
   16d6c:	strb	r5, [r1, r1]
   16d6e:	movs	r2, r0
   16d70:	strb	r6, [r0, r1]
   16d72:	movs	r2, r0

00016d74 <extent_io_tree_init@@Base>:
   16d74:	push	{r4, lr}
   16d76:	mov	r4, r0
   16d78:	bl	16594 <cache_tree_init@@Base>
   16d7c:	adds	r0, r4, #4
   16d7e:	bl	16594 <cache_tree_init@@Base>
   16d82:	add.w	r3, r4, #8
   16d86:	movs	r2, #0
   16d88:	strd	r3, r3, [r4, #8]
   16d8c:	movs	r3, #0
   16d8e:	strd	r2, r3, [r4, #16]
   16d92:	bl	32354 <total_memory@@Base>
   16d96:	movs	r3, #0
   16d98:	str	r3, [r4, #28]
   16d9a:	lsrs	r0, r0, #2
   16d9c:	str	r0, [r4, #24]
   16d9e:	pop	{r4, pc}

00016da0 <extent_io_tree_init_cache_max@@Base>:
   16da0:	push	{r4, r5, r6, lr}
   16da2:	mov	r4, r0
   16da4:	mov	r6, r2
   16da6:	mov	r5, r3
   16da8:	bl	16d74 <extent_io_tree_init@@Base>
   16dac:	strd	r6, r5, [r4, #24]
   16db0:	pop	{r4, r5, r6, pc}

00016db2 <extent_buffer_bitmap_set@@Base>:
   16db2:	adds	r0, #96	; 0x60
   16db4:	add.w	r1, r1, r2, lsr #3
   16db8:	push	{r4, r5, r6, lr}
   16dba:	add	r1, r0
   16dbc:	movs	r4, #255	; 0xff
   16dbe:	and.w	r0, r2, #7
   16dc2:	lsls	r4, r0
   16dc4:	rsb	r5, r0, #8
   16dc8:	mov	r0, r3
   16dca:	uxtb	r4, r4
   16dcc:	cmp	r5, r0
   16dce:	bls.n	16dea <extent_buffer_bitmap_set@@Base+0x38>
   16dd0:	cbz	r0, 16de8 <extent_buffer_bitmap_set@@Base+0x36>
   16dd2:	add	r2, r3
   16dd4:	movs	r3, #255	; 0xff
   16dd6:	negs	r2, r2
   16dd8:	and.w	r2, r2, #7
   16ddc:	asr.w	r2, r3, r2
   16de0:	ands	r4, r2
   16de2:	ldrb	r2, [r1, #0]
   16de4:	orrs	r4, r2
   16de6:	strb	r4, [r1, #0]
   16de8:	pop	{r4, r5, r6, pc}
   16dea:	ldrb	r6, [r1, #0]
   16dec:	subs	r0, r0, r5
   16dee:	movs	r5, #8
   16df0:	orrs	r4, r6
   16df2:	strb.w	r4, [r1], #1
   16df6:	movs	r4, #255	; 0xff
   16df8:	b.n	16dcc <extent_buffer_bitmap_set@@Base+0x1a>

00016dfa <extent_buffer_bitmap_clear@@Base>:
   16dfa:	adds	r0, #96	; 0x60
   16dfc:	add.w	r1, r1, r2, lsr #3
   16e00:	push	{r4, r5, r6, lr}
   16e02:	add	r1, r0
   16e04:	and.w	r4, r2, #7
   16e08:	movs	r0, #255	; 0xff
   16e0a:	lsls	r0, r4
   16e0c:	rsb	r5, r4, #8
   16e10:	mov	r4, r3
   16e12:	uxtb	r0, r0
   16e14:	cmp	r5, r4
   16e16:	bls.n	16e34 <extent_buffer_bitmap_clear@@Base+0x3a>
   16e18:	cbz	r4, 16e32 <extent_buffer_bitmap_clear@@Base+0x38>
   16e1a:	add	r2, r3
   16e1c:	movs	r3, #255	; 0xff
   16e1e:	negs	r2, r2
   16e20:	and.w	r2, r2, #7
   16e24:	asr.w	r2, r3, r2
   16e28:	ands	r0, r2
   16e2a:	ldrb	r2, [r1, #0]
   16e2c:	bic.w	r0, r2, r0
   16e30:	strb	r0, [r1, #0]
   16e32:	pop	{r4, r5, r6, pc}
   16e34:	ldrb	r6, [r1, #0]
   16e36:	subs	r4, r4, r5
   16e38:	movs	r5, #8
   16e3a:	bic.w	r0, r6, r0
   16e3e:	strb.w	r0, [r1], #1
   16e42:	movs	r0, #255	; 0xff
   16e44:	b.n	16e14 <extent_buffer_bitmap_clear@@Base+0x1a>

00016e46 <clear_extent_bits@@Base>:
   16e46:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16e4a:	mov	r7, r3
   16e4c:	ldr	r3, [pc, #348]	; (16fac <clear_extent_bits@@Base+0x166>)
   16e4e:	mov.w	r8, #0
   16e52:	vpush	{d8}
   16e56:	mov	r9, r0
   16e58:	add	r3, pc
   16e5a:	mov	r6, r2
   16e5c:	adds	r3, #102	; 0x66
   16e5e:	mov	r4, r8
   16e60:	vmov	s16, r3
   16e64:	ldr	r3, [pc, #328]	; (16fb0 <clear_extent_bits@@Base+0x16a>)
   16e66:	sub	sp, #12
   16e68:	add	r3, pc
   16e6a:	vmov	s17, r3
   16e6e:	cbnz	r4, 16e7c <clear_extent_bits@@Base+0x36>
   16e70:	bl	169a4 <add_merge_cache_extent@@Base+0x1b8>
   16e74:	mov	r4, r0
   16e76:	cmp	r0, #0
   16e78:	beq.w	16fa4 <clear_extent_bits@@Base+0x15e>
   16e7c:	mov	r2, r6
   16e7e:	mov	r3, r7
   16e80:	mov	r0, r9
   16e82:	bl	166dc <search_cache_extent@@Base>
   16e86:	mov	r5, r0
   16e88:	cmp	r0, #0
   16e8a:	beq.w	16f9c <clear_extent_bits@@Base+0x156>
   16e8e:	ldrd	r2, r3, [r0, #40]	; 0x28
   16e92:	ldrd	r0, r1, [sp, #56]	; 0x38
   16e96:	cmp	r1, r3
   16e98:	it	eq
   16e9a:	cmpeq	r0, r2
   16e9c:	bcc.n	16f9c <clear_extent_bits@@Base+0x156>
   16e9e:	cmp	r3, r7
   16ea0:	ldrd	sl, fp, [r5, #48]	; 0x30
   16ea4:	it	eq
   16ea6:	cmpeq	r2, r6
   16ea8:	bcs.n	16f20 <clear_extent_bits@@Base+0xda>
   16eaa:	mov	r2, r4
   16eac:	mov	r1, r5
   16eae:	mov	r0, r9
   16eb0:	strd	r6, r7, [sp]
   16eb4:	bl	16aa4 <add_merge_cache_extent@@Base+0x2b8>
   16eb8:	vmov	r1, s16
   16ebc:	movw	r2, #311	; 0x137
   16ec0:	cmn.w	r0, #17
   16ec4:	mov	r4, r0
   16ec6:	vmov	r0, s17
   16eca:	ite	ne
   16ecc:	movne	r3, #0
   16ece:	moveq	r3, #1
   16ed0:	bl	16a1c <add_merge_cache_extent@@Base+0x230>
   16ed4:	cmp	r4, #0
   16ed6:	bne.n	16f6e <clear_extent_bits@@Base+0x128>
   16ed8:	ldrd	r2, r3, [r5, #48]	; 0x30
   16edc:	ldrd	r0, r1, [sp, #56]	; 0x38
   16ee0:	cmp	r1, r3
   16ee2:	it	eq
   16ee4:	cmpeq	r0, r2
   16ee6:	bcc.n	16f1a <clear_extent_bits@@Base+0xd4>
   16ee8:	ldr	r2, [sp, #64]	; 0x40
   16eea:	mov	r1, r5
   16eec:	mov	r0, r9
   16eee:	bl	16cdc <add_merge_cache_extent@@Base+0x4f0>
   16ef2:	cmp.w	fp, #4294967295	; 0xffffffff
   16ef6:	it	eq
   16ef8:	cmpeq.w	sl, #4294967295	; 0xffffffff
   16efc:	orr.w	r8, r8, r0
   16f00:	beq.n	16f6e <clear_extent_bits@@Base+0x128>
   16f02:	adds.w	r6, sl, #1
   16f06:	adc.w	r7, fp, #0
   16f0a:	ldrd	r2, r3, [sp, #56]	; 0x38
   16f0e:	cmp	r3, r7
   16f10:	it	eq
   16f12:	cmpeq	r2, r6
   16f14:	bcs.n	16e6e <clear_extent_bits@@Base+0x28>
   16f16:	cbz	r4, 16f6e <clear_extent_bits@@Base+0x128>
   16f18:	b.n	16f9c <clear_extent_bits@@Base+0x156>
   16f1a:	ldrd	r6, r7, [r5, #40]	; 0x28
   16f1e:	b.n	16f0a <clear_extent_bits@@Base+0xc4>
   16f20:	ldrd	r2, r3, [sp, #56]	; 0x38
   16f24:	cmp	r3, fp
   16f26:	it	eq
   16f28:	cmpeq	r2, sl
   16f2a:	bcs.n	16f7a <clear_extent_bits@@Base+0x134>
   16f2c:	ldr	r3, [sp, #56]	; 0x38
   16f2e:	mov	r1, r5
   16f30:	mov	r0, r9
   16f32:	adds	r2, r3, #1
   16f34:	ldr	r3, [sp, #60]	; 0x3c
   16f36:	adc.w	r3, r3, #0
   16f3a:	strd	r2, r3, [sp]
   16f3e:	mov	r2, r4
   16f40:	bl	16aa4 <add_merge_cache_extent@@Base+0x2b8>
   16f44:	ldr	r1, [pc, #108]	; (16fb4 <clear_extent_bits@@Base+0x16e>)
   16f46:	movw	r2, #333	; 0x14d
   16f4a:	add	r1, pc
   16f4c:	adds	r1, #102	; 0x66
   16f4e:	adds	r0, #17
   16f50:	ldr	r0, [pc, #100]	; (16fb8 <clear_extent_bits@@Base+0x172>)
   16f52:	it	ne
   16f54:	movne	r3, #0
   16f56:	add	r0, pc
   16f58:	it	eq
   16f5a:	moveq	r3, #1
   16f5c:	bl	16a1c <add_merge_cache_extent@@Base+0x230>
   16f60:	ldr	r2, [sp, #64]	; 0x40
   16f62:	mov	r1, r4
   16f64:	mov	r0, r9
   16f66:	bl	16cdc <add_merge_cache_extent@@Base+0x4f0>
   16f6a:	orr.w	r8, r8, r0
   16f6e:	mov	r0, r8
   16f70:	add	sp, #12
   16f72:	vpop	{d8}
   16f76:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f7a:	adds.w	r6, sl, #1
   16f7e:	ldr	r2, [sp, #64]	; 0x40
   16f80:	mov	r1, r5
   16f82:	mov	r0, r9
   16f84:	adc.w	r7, fp, #0
   16f88:	bl	16cdc <add_merge_cache_extent@@Base+0x4f0>
   16f8c:	cmp.w	fp, #4294967295	; 0xffffffff
   16f90:	it	eq
   16f92:	cmpeq.w	sl, #4294967295	; 0xffffffff
   16f96:	orr.w	r8, r8, r0
   16f9a:	bne.n	16f0a <clear_extent_bits@@Base+0xc4>
   16f9c:	mov	r0, r4
   16f9e:	bl	16b90 <add_merge_cache_extent@@Base+0x3a4>
   16fa2:	b.n	16f6e <clear_extent_bits@@Base+0x128>
   16fa4:	mvn.w	r8, #11
   16fa8:	b.n	16f6e <clear_extent_bits@@Base+0x128>
   16faa:	nop
   16fac:	strb	r1, [r1, r1]
   16fae:	movs	r2, r0
   16fb0:	strh	r7, [r0, r5]
   16fb2:	movs	r2, r0
   16fb4:	strh	r7, [r2, r5]
   16fb6:	movs	r2, r0
   16fb8:	strh	r1, [r3, r1]
   16fba:	movs	r2, r0

00016fbc <set_extent_bits@@Base>:
   16fbc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16fc0:	mov	r7, r3
   16fc2:	ldr	r3, [pc, #516]	; (171c8 <set_extent_bits@@Base+0x20c>)
   16fc4:	mov	r9, r0
   16fc6:	vpush	{d8}
   16fca:	mov	r6, r2
   16fcc:	add	r3, pc
   16fce:	mov.w	r8, #0
   16fd2:	adds	r3, #120	; 0x78
   16fd4:	vmov	s16, r3
   16fd8:	ldr	r3, [pc, #496]	; (171cc <set_extent_bits@@Base+0x210>)
   16fda:	sub	sp, #28
   16fdc:	add	r3, pc
   16fde:	ldrd	sl, fp, [sp, #72]	; 0x48
   16fe2:	vmov	s17, r3
   16fe6:	cmp.w	r8, #0
   16fea:	bne.n	16ff8 <set_extent_bits@@Base+0x3c>
   16fec:	bl	169a4 <add_merge_cache_extent@@Base+0x1b8>
   16ff0:	mov	r8, r0
   16ff2:	cmp	r0, #0
   16ff4:	beq.w	171c0 <set_extent_bits@@Base+0x204>
   16ff8:	mov	r2, r6
   16ffa:	mov	r3, r7
   16ffc:	mov	r0, r9
   16ffe:	bl	166dc <search_cache_extent@@Base>
   17002:	mov	r5, r0
   17004:	cbnz	r0, 17044 <set_extent_bits@@Base+0x88>
   17006:	ldr	r3, [sp, #80]	; 0x50
   17008:	mov	r2, r6
   1700a:	mov	r1, r8
   1700c:	mov	r0, r9
   1700e:	strd	sl, fp, [sp]
   17012:	str	r3, [sp, #8]
   17014:	mov	r3, r7
   17016:	bl	16c62 <add_merge_cache_extent@@Base+0x476>
   1701a:	ldr	r1, [pc, #436]	; (171d0 <set_extent_bits@@Base+0x214>)
   1701c:	mov.w	r2, #382	; 0x17e
   17020:	add	r1, pc
   17022:	adds	r1, #120	; 0x78
   17024:	cmn.w	r0, #17
   17028:	mov	r4, r0
   1702a:	ldr	r0, [pc, #424]	; (171d4 <set_extent_bits@@Base+0x218>)
   1702c:	ite	ne
   1702e:	movne	r3, #0
   17030:	moveq	r3, #1
   17032:	add	r0, pc
   17034:	bl	16a1c <add_merge_cache_extent@@Base+0x230>
   17038:	mov	r0, r4
   1703a:	add	sp, #28
   1703c:	vpop	{d8}
   17040:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17044:	ldrd	r2, r3, [r0, #40]	; 0x28
   17048:	ldrd	r0, r1, [r0, #48]	; 0x30
   1704c:	cmp	r7, r3
   1704e:	it	eq
   17050:	cmpeq	r6, r2
   17052:	strd	r0, r1, [sp, #16]
   17056:	bne.n	170a0 <set_extent_bits@@Base+0xe4>
   17058:	cmp	fp, r1
   1705a:	it	eq
   1705c:	cmpeq	sl, r0
   1705e:	bcc.w	1717a <set_extent_bits@@Base+0x1be>
   17062:	ldr	r3, [r5, #60]	; 0x3c
   17064:	mov	r1, r5
   17066:	ldr	r2, [sp, #80]	; 0x50
   17068:	mov	r0, r9
   1706a:	orrs	r3, r2
   1706c:	str	r3, [r5, #60]	; 0x3c
   1706e:	bl	16bc6 <add_merge_cache_extent@@Base+0x3da>
   17072:	ldrd	r3, r4, [sp, #16]
   17076:	adds	r4, #1
   17078:	it	eq
   1707a:	cmpeq.w	r3, #4294967295	; 0xffffffff
   1707e:	beq.n	17098 <set_extent_bits@@Base+0xdc>
   17080:	ldr	r3, [sp, #16]
   17082:	adds	r6, r3, #1
   17084:	ldr	r3, [sp, #20]
   17086:	adc.w	r7, r3, #0
   1708a:	cmp	fp, r7
   1708c:	it	eq
   1708e:	cmpeq	sl, r6
   17090:	bcs.n	16fe6 <set_extent_bits@@Base+0x2a>
   17092:	cmp.w	r8, #0
   17096:	beq.n	17102 <set_extent_bits@@Base+0x146>
   17098:	mov	r0, r8
   1709a:	bl	16b90 <add_merge_cache_extent@@Base+0x3a4>
   1709e:	b.n	17102 <set_extent_bits@@Base+0x146>
   170a0:	cmp	r3, r7
   170a2:	it	eq
   170a4:	cmpeq	r2, r6
   170a6:	bcs.n	1711a <set_extent_bits@@Base+0x15e>
   170a8:	mov	r2, r8
   170aa:	mov	r1, r5
   170ac:	mov	r0, r9
   170ae:	strd	r6, r7, [sp]
   170b2:	bl	16aa4 <add_merge_cache_extent@@Base+0x2b8>
   170b6:	ldr	r1, [pc, #288]	; (171d8 <set_extent_bits@@Base+0x21c>)
   170b8:	movw	r2, #423	; 0x1a7
   170bc:	add	r1, pc
   170be:	adds	r1, #120	; 0x78
   170c0:	cmn.w	r0, #17
   170c4:	mov	r4, r0
   170c6:	ldr	r0, [pc, #276]	; (171dc <set_extent_bits@@Base+0x220>)
   170c8:	ite	ne
   170ca:	movne	r3, #0
   170cc:	moveq	r3, #1
   170ce:	add	r0, pc
   170d0:	bl	16a1c <add_merge_cache_extent@@Base+0x230>
   170d4:	cmp	r4, #0
   170d6:	bne.n	17038 <set_extent_bits@@Base+0x7c>
   170d8:	ldrd	r2, r3, [r5, #48]	; 0x30
   170dc:	cmp	fp, r3
   170de:	it	eq
   170e0:	cmpeq	sl, r2
   170e2:	bcc.n	17112 <set_extent_bits@@Base+0x156>
   170e4:	ldr	r3, [r5, #60]	; 0x3c
   170e6:	mov	r1, r5
   170e8:	ldr	r2, [sp, #80]	; 0x50
   170ea:	mov	r0, r9
   170ec:	orrs	r3, r2
   170ee:	str	r3, [r5, #60]	; 0x3c
   170f0:	bl	16bc6 <add_merge_cache_extent@@Base+0x3da>
   170f4:	ldrd	r2, r3, [sp, #16]
   170f8:	adds	r3, #1
   170fa:	it	eq
   170fc:	cmpeq.w	r2, #4294967295	; 0xffffffff
   17100:	bne.n	17106 <set_extent_bits@@Base+0x14a>
   17102:	movs	r4, #0
   17104:	b.n	17038 <set_extent_bits@@Base+0x7c>
   17106:	ldr	r3, [sp, #16]
   17108:	adds	r6, r3, #1
   1710a:	ldr	r3, [sp, #20]
   1710c:	adc.w	r7, r3, #0
   17110:	b.n	17116 <set_extent_bits@@Base+0x15a>
   17112:	ldrd	r6, r7, [r5, #40]	; 0x28
   17116:	mov	r8, r4
   17118:	b.n	1708a <set_extent_bits@@Base+0xce>
   1711a:	cmp	r7, r3
   1711c:	it	eq
   1711e:	cmpeq	r6, r2
   17120:	bcs.n	1717a <set_extent_bits@@Base+0x1be>
   17122:	cmp	fp, r3
   17124:	it	eq
   17126:	cmpeq	sl, r2
   17128:	bcc.n	17172 <set_extent_bits@@Base+0x1b6>
   1712a:	adds.w	r5, r2, #4294967295	; 0xffffffff
   1712e:	adc.w	r3, r3, #4294967295	; 0xffffffff
   17132:	str	r3, [sp, #16]
   17134:	ldr	r3, [sp, #80]	; 0x50
   17136:	mov	r2, r6
   17138:	mov	r1, r8
   1713a:	mov	r0, r9
   1713c:	str	r5, [sp, #0]
   1713e:	str	r3, [sp, #8]
   17140:	ldr	r3, [sp, #16]
   17142:	str	r3, [sp, #4]
   17144:	mov	r3, r7
   17146:	bl	16c62 <add_merge_cache_extent@@Base+0x476>
   1714a:	vmov	r1, s16
   1714e:	mov.w	r2, #454	; 0x1c6
   17152:	cmn.w	r0, #17
   17156:	mov	r4, r0
   17158:	vmov	r0, s17
   1715c:	ite	ne
   1715e:	movne	r3, #0
   17160:	moveq	r3, #1
   17162:	bl	16a1c <add_merge_cache_extent@@Base+0x230>
   17166:	cmp	r4, #0
   17168:	bne.w	17038 <set_extent_bits@@Base+0x7c>
   1716c:	ldr	r3, [sp, #16]
   1716e:	adds	r6, r5, #1
   17170:	b.n	1710c <set_extent_bits@@Base+0x150>
   17172:	mov	r5, sl
   17174:	str.w	fp, [sp, #16]
   17178:	b.n	17134 <set_extent_bits@@Base+0x178>
   1717a:	adds.w	r2, sl, #1
   1717e:	mov	r1, r5
   17180:	adc.w	r3, fp, #0
   17184:	mov	r0, r9
   17186:	strd	r2, r3, [sp]
   1718a:	mov	r2, r8
   1718c:	bl	16aa4 <add_merge_cache_extent@@Base+0x2b8>
   17190:	ldr	r1, [pc, #76]	; (171e0 <set_extent_bits@@Base+0x224>)
   17192:	mov.w	r2, #468	; 0x1d4
   17196:	add	r1, pc
   17198:	adds	r1, #120	; 0x78
   1719a:	cmn.w	r0, #17
   1719e:	mov	r4, r0
   171a0:	ldr	r0, [pc, #64]	; (171e4 <set_extent_bits@@Base+0x228>)
   171a2:	ite	ne
   171a4:	movne	r3, #0
   171a6:	moveq	r3, #1
   171a8:	add	r0, pc
   171aa:	bl	16a1c <add_merge_cache_extent@@Base+0x230>
   171ae:	ldr	r3, [r5, #60]	; 0x3c
   171b0:	ldr	r2, [sp, #80]	; 0x50
   171b2:	mov	r1, r8
   171b4:	mov	r0, r9
   171b6:	orrs	r3, r2
   171b8:	str	r3, [r5, #60]	; 0x3c
   171ba:	bl	16bc6 <add_merge_cache_extent@@Base+0x3da>
   171be:	b.n	17038 <set_extent_bits@@Base+0x7c>
   171c0:	mvn.w	r4, #11
   171c4:	b.n	17038 <set_extent_bits@@Base+0x7c>
   171c6:	nop
   171c8:	strh	r5, [r2, r3]
   171ca:	movs	r2, r0
   171cc:	str	r3, [r2, r7]
   171ce:	movs	r2, r0
   171d0:	strh	r1, [r0, r2]
   171d2:	movs	r2, r0
   171d4:	str	r5, [r7, r5]
   171d6:	movs	r2, r0
   171d8:	str	r5, [r4, r7]
   171da:	movs	r2, r0
   171dc:	str	r1, [r4, r3]
   171de:	movs	r2, r0
   171e0:	str	r3, [r1, r4]
   171e2:	movs	r2, r0
   171e4:	str	r7, [r0, r0]
   171e6:	movs	r2, r0

000171e8 <set_extent_dirty@@Base>:
   171e8:	push	{r4, r5, lr}
   171ea:	sub	sp, #20
   171ec:	movs	r1, #1
   171ee:	ldrd	r4, r5, [sp, #32]
   171f2:	str	r1, [sp, #8]
   171f4:	strd	r4, r5, [sp]
   171f8:	bl	16fbc <set_extent_bits@@Base>
   171fc:	add	sp, #20
   171fe:	pop	{r4, r5, pc}

00017200 <clear_extent_dirty@@Base>:
   17200:	push	{r4, r5, lr}
   17202:	sub	sp, #20
   17204:	movs	r1, #1
   17206:	ldrd	r4, r5, [sp, #32]
   1720a:	str	r1, [sp, #8]
   1720c:	strd	r4, r5, [sp]
   17210:	bl	16e46 <clear_extent_bits@@Base>
   17214:	add	sp, #20
   17216:	pop	{r4, r5, pc}

00017218 <find_first_extent_bit@@Base>:
   17218:	push	{r3, r4, r5, r6, r7, lr}
   1721a:	mov	r6, r2
   1721c:	ldr	r4, [sp, #32]
   1721e:	mov	r7, r3
   17220:	bl	166dc <search_cache_extent@@Base>
   17224:	cbz	r0, 17256 <find_first_extent_bit@@Base+0x3e>
   17226:	ldrd	r2, r3, [r0, #48]	; 0x30
   1722a:	cmp	r3, r7
   1722c:	it	eq
   1722e:	cmpeq	r2, r6
   17230:	bcc.n	17250 <find_first_extent_bit@@Base+0x38>
   17232:	ldr	r3, [r0, #60]	; 0x3c
   17234:	tst	r4, r3
   17236:	beq.n	17250 <find_first_extent_bit@@Base+0x38>
   17238:	ldrd	r4, r5, [r0, #40]	; 0x28
   1723c:	ldr	r3, [sp, #24]
   1723e:	strd	r4, r5, [r3]
   17242:	ldr	r3, [sp, #28]
   17244:	ldrd	r0, r1, [r0, #48]	; 0x30
   17248:	strd	r0, r1, [r3]
   1724c:	movs	r0, #0
   1724e:	pop	{r3, r4, r5, r6, r7, pc}
   17250:	bl	167b0 <next_cache_extent@@Base>
   17254:	b.n	17224 <find_first_extent_bit@@Base+0xc>
   17256:	movs	r0, #1
   17258:	b.n	1724e <find_first_extent_bit@@Base+0x36>

0001725a <test_range_bit@@Base>:
   1725a:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1725e:	mov	r4, r2
   17260:	ldrd	r8, r9, [sp, #32]
   17264:	mov	r5, r3
   17266:	ldr	r7, [sp, #44]	; 0x2c
   17268:	bl	166dc <search_cache_extent@@Base>
   1726c:	movs	r6, #0
   1726e:	cbnz	r0, 172ae <test_range_bit@@Base+0x54>
   17270:	mov	r0, r6
   17272:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   17276:	cmp	r9, r3
   17278:	it	eq
   1727a:	cmpeq	r8, r2
   1727c:	bcc.n	17270 <test_range_bit@@Base+0x16>
   1727e:	ldr	r3, [r0, #60]	; 0x3c
   17280:	ldr	r2, [sp, #40]	; 0x28
   17282:	tst	r2, r3
   17284:	beq.n	172a8 <test_range_bit@@Base+0x4e>
   17286:	movs	r6, #1
   17288:	cmp	r7, #0
   1728a:	beq.n	17270 <test_range_bit@@Base+0x16>
   1728c:	ldrd	r3, r2, [r0, #48]	; 0x30
   17290:	adds	r4, r3, #1
   17292:	adc.w	r5, r2, #0
   17296:	cmp	r9, r5
   17298:	it	eq
   1729a:	cmpeq	r8, r4
   1729c:	bcc.n	17270 <test_range_bit@@Base+0x16>
   1729e:	bl	167b0 <next_cache_extent@@Base>
   172a2:	cbnz	r0, 172ae <test_range_bit@@Base+0x54>
   172a4:	cbnz	r7, 172c6 <test_range_bit@@Base+0x6c>
   172a6:	b.n	17270 <test_range_bit@@Base+0x16>
   172a8:	cmp	r7, #0
   172aa:	beq.n	1728c <test_range_bit@@Base+0x32>
   172ac:	b.n	172c6 <test_range_bit@@Base+0x6c>
   172ae:	cmp	r9, r5
   172b0:	it	eq
   172b2:	cmpeq	r8, r4
   172b4:	bcc.n	17270 <test_range_bit@@Base+0x16>
   172b6:	ldrd	r2, r3, [r0, #40]	; 0x28
   172ba:	cmp	r7, #0
   172bc:	beq.n	17276 <test_range_bit@@Base+0x1c>
   172be:	cmp	r5, r3
   172c0:	it	eq
   172c2:	cmpeq	r4, r2
   172c4:	bcs.n	1727e <test_range_bit@@Base+0x24>
   172c6:	movs	r6, #0
   172c8:	b.n	17270 <test_range_bit@@Base+0x16>

000172ca <set_state_private@@Base>:
   172ca:	push	{r3, r4, r5, lr}
   172cc:	mov	r4, r2
   172ce:	mov	r5, r3
   172d0:	bl	166dc <search_cache_extent@@Base>
   172d4:	cbz	r0, 172ee <set_state_private@@Base+0x24>
   172d6:	ldrd	r2, r3, [r0, #40]	; 0x28
   172da:	cmp	r3, r5
   172dc:	it	eq
   172de:	cmpeq	r2, r4
   172e0:	bne.n	172ee <set_state_private@@Base+0x24>
   172e2:	ldrd	r2, r3, [sp, #16]
   172e6:	strd	r2, r3, [r0, #64]	; 0x40
   172ea:	movs	r0, #0
   172ec:	pop	{r3, r4, r5, pc}
   172ee:	mvn.w	r0, #1
   172f2:	b.n	172ec <set_state_private@@Base+0x22>

000172f4 <get_state_private@@Base>:
   172f4:	push	{r3, r4, r5, lr}
   172f6:	mov	r4, r2
   172f8:	mov	r5, r3
   172fa:	bl	166dc <search_cache_extent@@Base>
   172fe:	cbz	r0, 1731a <get_state_private@@Base+0x26>
   17300:	ldrd	r2, r3, [r0, #40]	; 0x28
   17304:	cmp	r3, r5
   17306:	it	eq
   17308:	cmpeq	r2, r4
   1730a:	bne.n	1731a <get_state_private@@Base+0x26>
   1730c:	ldrd	r0, r1, [r0, #64]	; 0x40
   17310:	ldr	r3, [sp, #16]
   17312:	strd	r0, r1, [r3]
   17316:	movs	r0, #0
   17318:	pop	{r3, r4, r5, pc}
   1731a:	mvn.w	r0, #1
   1731e:	b.n	17318 <get_state_private@@Base+0x24>

00017320 <free_extent_buffer@@Base>:
   17320:	movs	r1, #0
   17322:	b.n	16d02 <add_merge_cache_extent@@Base+0x516>

00017324 <free_extent_buffer_nocache@@Base>:
   17324:	movs	r1, #1
   17326:	b.n	16d02 <add_merge_cache_extent@@Base+0x516>

00017328 <extent_io_tree_cleanup@@Base>:
   17328:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1732c:	add.w	r8, r0, #8
   17330:	ldr.w	r9, [pc, #84]	; 17388 <extent_io_tree_cleanup@@Base+0x60>
   17334:	sub	sp, #20
   17336:	ldr	r5, [pc, #84]	; (1738c <extent_io_tree_cleanup@@Base+0x64>)
   17338:	mov	r4, r0
   1733a:	add	r9, pc
   1733c:	add	r5, pc
   1733e:	ldr	r3, [r4, #8]
   17340:	cmp	r3, r8
   17342:	bne.n	17354 <extent_io_tree_cleanup@@Base+0x2c>
   17344:	ldr	r1, [pc, #72]	; (17390 <extent_io_tree_cleanup@@Base+0x68>)
   17346:	mov	r0, r4
   17348:	add	r1, pc
   1734a:	add	sp, #20
   1734c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   17350:	b.w	167be <cache_tree_free_extents@@Base>
   17354:	ldr	r2, [r3, #20]
   17356:	sub.w	r7, r3, #60	; 0x3c
   1735a:	cbz	r2, 1737e <extent_io_tree_cleanup@@Base+0x56>
   1735c:	ldr	r2, [pc, #52]	; (17394 <extent_io_tree_cleanup@@Base+0x6c>)
   1735e:	ldr	r6, [r5, r2]
   17360:	ldr	r2, [r3, #16]
   17362:	str	r2, [sp, #8]
   17364:	mov	r2, r9
   17366:	ldrd	r0, r1, [r3, #-20]
   1736a:	strd	r0, r1, [sp]
   1736e:	movs	r1, #1
   17370:	ldr	r0, [r6, #0]
   17372:	blx	8a64 <__fprintf_chk@plt+0x4>
   17376:	mov	r0, r7
   17378:	bl	17324 <free_extent_buffer_nocache@@Base>
   1737c:	b.n	1733e <extent_io_tree_cleanup@@Base+0x16>
   1737e:	mov	r0, r7
   17380:	bl	16b00 <add_merge_cache_extent@@Base+0x314>
   17384:	b.n	1733e <extent_io_tree_cleanup@@Base+0x16>
   17386:	nop
   17388:	ldr	r6, [pc, #528]	; (1759c <write_extent_to_disk@@Base+0x1e>)
   1738a:	movs	r2, r0
   1738c:	bge.n	17418 <find_first_extent_buffer@@Base+0x26>
   1738e:	movs	r4, r0
   17390:	ldr??.w	pc, [r9, #255]!
   17394:	lsls	r0, r7, #8
	...

00017398 <find_extent_buffer@@Base>:
   17398:	stmdb	sp!, {r0, r1, r4, r6, r7, r8, r9, lr}
   1739c:	mov	r4, r0
   1739e:	ldr	r6, [sp, #32]
   173a0:	movs	r7, #0
   173a2:	adds	r0, #4
   173a4:	mov	r8, r2
   173a6:	mov	r9, r3
   173a8:	strd	r6, r7, [sp]
   173ac:	bl	1661c <lookup_cache_extent@@Base>
   173b0:	cbz	r0, 173e8 <find_extent_buffer@@Base+0x50>
   173b2:	ldrd	r2, r3, [r0, #24]
   173b6:	cmp	r3, r9
   173b8:	it	eq
   173ba:	cmpeq	r2, r8
   173bc:	bne.n	173ee <find_extent_buffer@@Base+0x56>
   173be:	ldrd	r2, r3, [r0, #32]
   173c2:	cmp	r7, r3
   173c4:	it	eq
   173c6:	cmpeq	r6, r2
   173c8:	bne.n	173ee <find_extent_buffer@@Base+0x56>
   173ca:	ldrd	r1, r2, [r0, #60]	; 0x3c
   173ce:	add.w	r3, r0, #60	; 0x3c
   173d2:	adds	r4, #8
   173d4:	str	r2, [r1, #4]
   173d6:	str	r1, [r2, #0]
   173d8:	ldr	r2, [r4, #4]
   173da:	str	r3, [r4, #4]
   173dc:	strd	r4, r2, [r0, #60]	; 0x3c
   173e0:	str	r3, [r2, #0]
   173e2:	ldr	r3, [r0, #80]	; 0x50
   173e4:	adds	r3, #1
   173e6:	str	r3, [r0, #80]	; 0x50
   173e8:	add	sp, #8
   173ea:	ldmia.w	sp!, {r4, r6, r7, r8, r9, pc}
   173ee:	movs	r0, #0
   173f0:	b.n	173e8 <find_extent_buffer@@Base+0x50>

000173f2 <find_first_extent_buffer@@Base>:
   173f2:	push	{r4, lr}
   173f4:	mov	r4, r0
   173f6:	adds	r0, #4
   173f8:	bl	166dc <search_cache_extent@@Base>
   173fc:	cbz	r0, 1741c <find_first_extent_buffer@@Base+0x2a>
   173fe:	ldrd	r1, r2, [r0, #60]	; 0x3c
   17402:	add.w	r3, r0, #60	; 0x3c
   17406:	adds	r4, #8
   17408:	str	r2, [r1, #4]
   1740a:	str	r1, [r2, #0]
   1740c:	ldr	r2, [r4, #4]
   1740e:	str	r3, [r4, #4]
   17410:	strd	r4, r2, [r0, #60]	; 0x3c
   17414:	str	r3, [r2, #0]
   17416:	ldr	r3, [r0, #80]	; 0x50
   17418:	adds	r3, #1
   1741a:	str	r3, [r0, #80]	; 0x50
   1741c:	pop	{r4, pc}

0001741e <alloc_extent_buffer@@Base>:
   1741e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17422:	sub	sp, #20
   17424:	add.w	sl, r0, #68	; 0x44
   17428:	mov	r5, r0
   1742a:	ldr.w	fp, [sp, #56]	; 0x38
   1742e:	movs	r7, #0
   17430:	mov	r0, sl
   17432:	mov	r8, r2
   17434:	mov	r9, r3
   17436:	mov	r6, fp
   17438:	strd	r6, r7, [sp]
   1743c:	bl	1661c <lookup_cache_extent@@Base>
   17440:	mov	r4, r0
   17442:	cbz	r0, 17488 <alloc_extent_buffer@@Base+0x6a>
   17444:	ldrd	r2, r3, [r0, #24]
   17448:	cmp	r3, r9
   1744a:	it	eq
   1744c:	cmpeq	r2, r8
   1744e:	bne.n	17482 <alloc_extent_buffer@@Base+0x64>
   17450:	ldrd	r2, r3, [r0, #32]
   17454:	cmp	r7, r3
   17456:	it	eq
   17458:	cmpeq	fp, r2
   1745a:	bne.n	17482 <alloc_extent_buffer@@Base+0x64>
   1745c:	ldrd	r1, r2, [r0, #60]	; 0x3c
   17460:	add.w	r3, r0, #60	; 0x3c
   17464:	adds	r5, #72	; 0x48
   17466:	str	r2, [r1, #4]
   17468:	str	r1, [r2, #0]
   1746a:	ldr	r2, [r5, #4]
   1746c:	str	r3, [r5, #4]
   1746e:	strd	r5, r2, [r0, #60]	; 0x3c
   17472:	str	r3, [r2, #0]
   17474:	ldr	r3, [r0, #80]	; 0x50
   17476:	adds	r3, #1
   17478:	str	r3, [r0, #80]	; 0x50
   1747a:	mov	r0, r4
   1747c:	add	sp, #20
   1747e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17482:	mov	r0, r4
   17484:	bl	17320 <free_extent_buffer@@Base>
   17488:	mov	r2, r8
   1748a:	mov	r3, r9
   1748c:	mov	r0, r5
   1748e:	str.w	fp, [sp]
   17492:	bl	169c6 <add_merge_cache_extent@@Base+0x1da>
   17496:	mov	r4, r0
   17498:	cmp	r0, #0
   1749a:	beq.n	1747a <alloc_extent_buffer@@Base+0x5c>
   1749c:	mov	r1, r0
   1749e:	mov	r0, sl
   174a0:	bl	1659a <insert_cache_extent@@Base>
   174a4:	cbz	r0, 174b0 <alloc_extent_buffer@@Base+0x92>
   174a6:	mov	r0, r4
   174a8:	movs	r4, #0
   174aa:	blx	8620 <free@plt+0x4>
   174ae:	b.n	1747a <alloc_extent_buffer@@Base+0x5c>
   174b0:	ldr	r2, [r5, #76]	; 0x4c
   174b2:	add.w	r3, r4, #60	; 0x3c
   174b6:	add.w	r8, r5, #72	; 0x48
   174ba:	str	r3, [r5, #76]	; 0x4c
   174bc:	strd	r8, r2, [r4, #60]	; 0x3c
   174c0:	str	r3, [r2, #0]
   174c2:	ldrd	r3, r2, [r5, #80]	; 0x50
   174c6:	adds	r3, r6, r3
   174c8:	str	r3, [sp, #8]
   174ca:	adc.w	r3, r7, r2
   174ce:	str	r3, [sp, #12]
   174d0:	ldrd	r2, r3, [sp, #8]
   174d4:	ldrd	r0, r1, [sp, #8]
   174d8:	strd	r2, r3, [r5, #80]	; 0x50
   174dc:	ldrd	r2, r3, [r5, #88]	; 0x58
   174e0:	cmp	r1, r3
   174e2:	it	eq
   174e4:	cmpeq	r0, r2
   174e6:	bcc.n	1747a <alloc_extent_buffer@@Base+0x5c>
   174e8:	ldr	r0, [r5, #72]	; 0x48
   174ea:	movs	r7, #9
   174ec:	ldr.w	r6, [r0], #-60
   174f0:	subs	r6, #60	; 0x3c
   174f2:	add.w	r3, r0, #60	; 0x3c
   174f6:	cmp	r8, r3
   174f8:	beq.n	1747a <alloc_extent_buffer@@Base+0x5c>
   174fa:	ldr	r3, [r0, #80]	; 0x50
   174fc:	cbnz	r3, 17502 <alloc_extent_buffer@@Base+0xe4>
   174fe:	bl	16b00 <add_merge_cache_extent@@Base+0x314>
   17502:	ldrd	r0, r3, [r5, #88]	; 0x58
   17506:	movs	r2, #10
   17508:	umull	r0, r1, r0, r7
   1750c:	mla	r1, r7, r3, r1
   17510:	movs	r3, #0
   17512:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   17516:	ldrd	r2, r3, [r5, #80]	; 0x50
   1751a:	cmp	r1, r3
   1751c:	it	eq
   1751e:	cmpeq	r0, r2
   17520:	bcs.n	1747a <alloc_extent_buffer@@Base+0x5c>
   17522:	ldr	r3, [r6, #60]	; 0x3c
   17524:	mov	r0, r6
   17526:	sub.w	r6, r3, #60	; 0x3c
   1752a:	b.n	174f2 <alloc_extent_buffer@@Base+0xd4>

0001752c <alloc_dummy_extent_buffer@@Base>:
   1752c:	push	{r0, r1, r2, lr}
   1752e:	ldr	r1, [sp, #16]
   17530:	str	r1, [sp, #0]
   17532:	bl	169c6 <add_merge_cache_extent@@Base+0x1da>
   17536:	cbz	r0, 17544 <alloc_dummy_extent_buffer@@Base+0x18>
   17538:	movs	r3, #0
   1753a:	str	r3, [r0, #56]	; 0x38
   1753c:	ldr	r3, [r0, #84]	; 0x54
   1753e:	orr.w	r3, r3, #2048	; 0x800
   17542:	str	r3, [r0, #84]	; 0x54
   17544:	add	sp, #12
   17546:	ldr.w	pc, [sp], #4

0001754a <read_extent_from_disk@@Base>:
   1754a:	push	{r0, r1, r4, r6, r7, lr}
   1754c:	add.w	r3, r0, #96	; 0x60
   17550:	ldrd	r6, r7, [r0, #48]	; 0x30
   17554:	add	r1, r3
   17556:	mov	r4, r2
   17558:	strd	r6, r7, [sp]
   1755c:	ldr	r0, [r0, #88]	; 0x58
   1755e:	blx	8808 <pread64@plt>
   17562:	cmp	r0, #0
   17564:	bge.n	17572 <read_extent_from_disk@@Base+0x28>
   17566:	blx	897c <__errno_location@plt>
   1756a:	ldr	r0, [r0, #0]
   1756c:	negs	r0, r0
   1756e:	add	sp, #8
   17570:	pop	{r4, r6, r7, pc}
   17572:	cmp	r0, r4
   17574:	ite	eq
   17576:	moveq	r0, #0
   17578:	mvnne.w	r0, #4
   1757c:	b.n	1756e <read_extent_from_disk@@Base+0x24>

0001757e <write_extent_to_disk@@Base>:
   1757e:	push	{r0, r1, r4, lr}
   17580:	add.w	r1, r0, #96	; 0x60
   17584:	ldrd	r2, r3, [r0, #48]	; 0x30
   17588:	mov	r4, r0
   1758a:	strd	r2, r3, [sp]
   1758e:	ldr	r2, [r0, #76]	; 0x4c
   17590:	ldr	r0, [r0, #88]	; 0x58
   17592:	blx	8a20 <pwrite64@plt>
   17596:	cmp	r0, #0
   17598:	blt.n	175a6 <write_extent_to_disk@@Base+0x28>
   1759a:	ldr	r3, [r4, #76]	; 0x4c
   1759c:	cmp	r3, r0
   1759e:	ite	eq
   175a0:	moveq	r0, #0
   175a2:	mvnne.w	r0, #4
   175a6:	add	sp, #8
   175a8:	pop	{r4, pc}

000175aa <read_data_from_disk@@Base>:
   175aa:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   175ae:	mov	r5, r2
   175b0:	ldr	r2, [pc, #292]	; (176d8 <read_data_from_disk@@Base+0x12e>)
   175b2:	mov	r8, r3
   175b4:	ldr	r3, [pc, #292]	; (176dc <read_data_from_disk@@Base+0x132>)
   175b6:	sub	sp, #68	; 0x44
   175b8:	add	r2, pc
   175ba:	ldr	r7, [pc, #292]	; (176e0 <read_data_from_disk@@Base+0x136>)
   175bc:	str	r1, [sp, #24]
   175be:	mov	r9, r0
   175c0:	ldr	r3, [r2, r3]
   175c2:	add	r7, pc
   175c4:	ldrd	sl, fp, [sp, #104]	; 0x68
   175c8:	ldr	r3, [r3, #0]
   175ca:	str	r3, [sp, #60]	; 0x3c
   175cc:	mov.w	r3, #0
   175d0:	movs	r3, #0
   175d2:	mov	r6, r3
   175d4:	str	r3, [sp, #44]	; 0x2c
   175d6:	str	r3, [sp, #28]
   175d8:	add	r3, sp, #44	; 0x2c
   175da:	str	r3, [sp, #32]
   175dc:	add	r3, sp, #48	; 0x30
   175de:	str	r3, [sp, #36]	; 0x24
   175e0:	orrs.w	r3, sl, fp
   175e4:	bne.n	175ea <read_data_from_disk@@Base+0x40>
   175e6:	movs	r4, #0
   175e8:	b.n	17624 <read_data_from_disk@@Base+0x7a>
   175ea:	ldr	r3, [sp, #28]
   175ec:	mov	r2, r5
   175ee:	movs	r1, #0
   175f0:	mov	r0, r9
   175f2:	strd	sl, fp, [sp, #48]	; 0x30
   175f6:	str	r3, [sp, #12]
   175f8:	ldr	r3, [sp, #112]	; 0x70
   175fa:	str	r3, [sp, #8]
   175fc:	ldr	r3, [sp, #32]
   175fe:	str	r3, [sp, #4]
   17600:	ldr	r3, [sp, #36]	; 0x24
   17602:	str	r3, [sp, #0]
   17604:	mov	r3, r8
   17606:	bl	2a528 <btrfs_map_block@@Base>
   1760a:	cbz	r0, 17638 <read_data_from_disk@@Base+0x8e>
   1760c:	ldr	r3, [pc, #212]	; (176e4 <read_data_from_disk@@Base+0x13a>)
   1760e:	movs	r1, #1
   17610:	ldr	r2, [pc, #212]	; (176e8 <read_data_from_disk@@Base+0x13e>)
   17612:	ldr	r3, [r7, r3]
   17614:	add	r2, pc
   17616:	strd	r5, r8, [sp]
   1761a:	ldr	r0, [r3, #0]
   1761c:	blx	8a64 <__fprintf_chk@plt+0x4>
   17620:	mvn.w	r4, #4
   17624:	ldr	r2, [pc, #196]	; (176ec <read_data_from_disk@@Base+0x142>)
   17626:	ldr	r3, [pc, #180]	; (176dc <read_data_from_disk@@Base+0x132>)
   17628:	add	r2, pc
   1762a:	ldr	r3, [r2, r3]
   1762c:	ldr	r2, [r3, #0]
   1762e:	ldr	r3, [sp, #60]	; 0x3c
   17630:	eors	r2, r3
   17632:	beq.n	176d0 <read_data_from_disk@@Base+0x126>
   17634:	blx	8708 <__stack_chk_fail@plt>
   17638:	ldr	r1, [sp, #44]	; 0x2c
   1763a:	ldrd	r2, r3, [sp, #48]	; 0x30
   1763e:	ldr	r0, [r1, #8]
   17640:	cmp	fp, r3
   17642:	it	eq
   17644:	cmpeq	sl, r2
   17646:	ldr	r4, [r0, #24]
   17648:	itt	cc
   1764a:	movcc	r2, sl
   1764c:	movcc	r3, fp
   1764e:	strd	r2, r3, [sp, #48]	; 0x30
   17652:	cmp	r4, #0
   17654:	bgt.n	1765e <read_data_from_disk@@Base+0xb4>
   17656:	mov	r0, r1
   17658:	blx	8620 <free@plt+0x4>
   1765c:	b.n	17620 <read_data_from_disk@@Base+0x76>
   1765e:	ldrd	r0, r1, [r1, #16]
   17662:	ldr	r3, [sp, #24]
   17664:	strd	r0, r1, [sp]
   17668:	adds	r1, r3, r6
   1766a:	mov	r0, r4
   1766c:	blx	8808 <pread64@plt>
   17670:	mov	r4, r0
   17672:	ldr	r0, [sp, #44]	; 0x2c
   17674:	blx	8620 <free@plt+0x4>
   17678:	cmp	r4, #0
   1767a:	bge.n	17694 <read_data_from_disk@@Base+0xea>
   1767c:	ldr	r3, [pc, #100]	; (176e4 <read_data_from_disk@@Base+0x13a>)
   1767e:	movs	r1, #1
   17680:	ldr	r2, [pc, #108]	; (176f0 <read_data_from_disk@@Base+0x146>)
   17682:	ldr	r3, [r7, r3]
   17684:	add	r2, pc
   17686:	str	r4, [sp, #8]
   17688:	strd	r5, r8, [sp]
   1768c:	ldr	r0, [r3, #0]
   1768e:	blx	8a64 <__fprintf_chk@plt+0x4>
   17692:	b.n	17624 <read_data_from_disk@@Base+0x7a>
   17694:	ldrd	r0, r1, [sp, #48]	; 0x30
   17698:	asrs	r3, r4, #31
   1769a:	cmp	r3, r1
   1769c:	it	eq
   1769e:	cmpeq	r4, r0
   176a0:	beq.n	176be <read_data_from_disk@@Base+0x114>
   176a2:	ldr	r3, [pc, #64]	; (176e4 <read_data_from_disk@@Base+0x13a>)
   176a4:	ldr	r2, [pc, #76]	; (176f4 <read_data_from_disk@@Base+0x14a>)
   176a6:	ldr	r3, [r7, r3]
   176a8:	add	r2, pc
   176aa:	strd	r0, r1, [sp, #16]
   176ae:	movs	r1, #1
   176b0:	str	r4, [sp, #8]
   176b2:	strd	r5, r8, [sp]
   176b6:	ldr	r0, [r3, #0]
   176b8:	blx	8a64 <__fprintf_chk@plt+0x4>
   176bc:	b.n	17620 <read_data_from_disk@@Base+0x76>
   176be:	subs.w	sl, sl, r4
   176c2:	sbc.w	fp, fp, r3
   176c6:	adds	r5, r5, r4
   176c8:	adc.w	r8, r8, r3
   176cc:	adds	r6, r6, r4
   176ce:	b.n	175e0 <read_data_from_disk@@Base+0x36>
   176d0:	mov	r0, r4
   176d2:	add	sp, #68	; 0x44
   176d4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   176d8:	bvc.n	1766c <read_data_from_disk@@Base+0xc2>
   176da:	movs	r4, r0
   176dc:	lsls	r0, r5, #8
   176de:	movs	r0, r0
   176e0:	bvc.n	17660 <read_data_from_disk@@Base+0xb6>
   176e2:	movs	r4, r0
   176e4:	lsls	r0, r7, #8
   176e6:	movs	r0, r0
   176e8:	ldr	r3, [pc, #836]	; (17a30 <write_extent_buffer@@Base>)
   176ea:	movs	r2, r0
   176ec:	bvc.n	177a0 <write_data_to_disk@@Base+0xa8>
   176ee:	movs	r4, r0
   176f0:	ldr	r3, [pc, #500]	; (178e8 <write_data_to_disk@@Base+0x1f0>)
   176f2:	movs	r2, r0
   176f4:	ldr	r3, [pc, #448]	; (178b8 <write_data_to_disk@@Base+0x1c0>)
   176f6:	movs	r2, r0

000176f8 <write_data_to_disk@@Base>:
   176f8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   176fc:	mov	r6, r2
   176fe:	vpush	{d8}
   17702:	mov	r7, r3
   17704:	ldr	r2, [pc, #600]	; (17960 <write_data_to_disk@@Base+0x268>)
   17706:	mov	r8, r0
   17708:	ldr	r3, [pc, #600]	; (17964 <write_data_to_disk@@Base+0x26c>)
   1770a:	add	r2, pc
   1770c:	ldr.w	r9, [pc, #600]	; 17968 <write_data_to_disk@@Base+0x270>
   17710:	sub	sp, #68	; 0x44
   17712:	add	r9, pc
   17714:	str	r1, [sp, #32]
   17716:	ldr	r3, [r2, r3]
   17718:	ldr	r3, [r3, #0]
   1771a:	str	r3, [sp, #60]	; 0x3c
   1771c:	mov.w	r3, #0
   17720:	movs	r3, #0
   17722:	strd	r3, r3, [sp, #40]	; 0x28
   17726:	str	r3, [sp, #20]
   17728:	ldr	r3, [pc, #576]	; (1796c <write_data_to_disk@@Base+0x274>)
   1772a:	add	r3, pc
   1772c:	adds	r3, #136	; 0x88
   1772e:	vmov	s16, r3
   17732:	ldr	r3, [pc, #572]	; (17970 <write_data_to_disk@@Base+0x278>)
   17734:	add	r3, pc
   17736:	vmov	s17, r3
   1773a:	ldrd	r3, r4, [sp, #112]	; 0x70
   1773e:	orrs	r3, r4
   17740:	bne.n	17746 <write_data_to_disk@@Base+0x4e>
   17742:	movs	r4, #0
   17744:	b.n	1781a <write_data_to_disk@@Base+0x122>
   17746:	ldrd	r3, r4, [sp, #112]	; 0x70
   1774a:	mov	r2, r6
   1774c:	movs	r1, #1
   1774e:	mov	r0, r8
   17750:	strd	r3, r4, [sp, #48]	; 0x30
   17754:	add	r3, sp, #44	; 0x2c
   17756:	str	r3, [sp, #12]
   17758:	ldr	r3, [sp, #120]	; 0x78
   1775a:	str	r3, [sp, #8]
   1775c:	add	r3, sp, #40	; 0x28
   1775e:	str	r3, [sp, #4]
   17760:	add	r3, sp, #48	; 0x30
   17762:	str	r3, [sp, #0]
   17764:	mov	r3, r7
   17766:	bl	2a528 <btrfs_map_block@@Base>
   1776a:	mov	sl, r0
   1776c:	cbz	r0, 1778a <write_data_to_disk@@Base+0x92>
   1776e:	ldr	r3, [pc, #516]	; (17974 <write_data_to_disk@@Base+0x27c>)
   17770:	movs	r1, #1
   17772:	ldr	r2, [pc, #516]	; (17978 <write_data_to_disk@@Base+0x280>)
   17774:	ldr.w	r3, [r9, r3]
   17778:	add	r2, pc
   1777a:	strd	r6, r7, [sp]
   1777e:	ldr	r0, [r3, #0]
   17780:	blx	8a64 <__fprintf_chk@plt+0x4>
   17784:	mvn.w	r4, #4
   17788:	b.n	1781a <write_data_to_disk@@Base+0x122>
   1778a:	ldr.w	fp, [sp, #44]	; 0x2c
   1778e:	cmp.w	fp, #0
   17792:	bne.n	177ba <write_data_to_disk@@Base+0xc2>
   17794:	ldr	r3, [sp, #32]
   17796:	ldr	r2, [sp, #20]
   17798:	add.w	fp, r3, r2
   1779c:	ldr	r3, [sp, #40]	; 0x28
   1779e:	ldr	r2, [r3, #4]
   177a0:	cmp	r2, sl
   177a2:	ble.n	17886 <write_data_to_disk@@Base+0x18e>
   177a4:	add.w	r2, r3, sl, lsl #4
   177a8:	ldr	r2, [r2, #8]
   177aa:	ldr	r0, [r2, #24]
   177ac:	cmp	r0, #0
   177ae:	bgt.w	178d4 <write_data_to_disk@@Base+0x1dc>
   177b2:	mov	r0, r3
   177b4:	blx	8620 <free@plt+0x4>
   177b8:	b.n	17784 <write_data_to_disk@@Base+0x8c>
   177ba:	ldrd	r3, r4, [sp, #48]	; 0x30
   177be:	mov	r5, r0
   177c0:	strd	r3, r4, [sp, #24]
   177c4:	ldrd	r2, r3, [sp, #24]
   177c8:	ldr.w	r4, [r8, #384]	; 0x180
   177cc:	cmp	r3, r0
   177ce:	it	eq
   177d0:	cmpeq	r2, r4
   177d2:	itt	cc
   177d4:	movcc	r4, r2
   177d6:	movcc	r5, r3
   177d8:	ldrd	r2, r3, [sp, #112]	; 0x70
   177dc:	cmp	r3, r5
   177de:	it	eq
   177e0:	cmpeq	r2, r4
   177e2:	it	cc
   177e4:	movcc	r4, r2
   177e6:	add.w	r2, r4, #96	; 0x60
   177ea:	it	cc
   177ec:	movcc	r5, r3
   177ee:	str	r2, [sp, #36]	; 0x24
   177f0:	mov	r0, r2
   177f2:	strd	r4, r5, [sp, #48]	; 0x30
   177f6:	blx	8870 <malloc@plt+0x4>
   177fa:	ldr	r2, [sp, #36]	; 0x24
   177fc:	mov	sl, r0
   177fe:	cbnz	r0, 17830 <write_data_to_disk@@Base+0x138>
   17800:	ldr	r3, [pc, #368]	; (17974 <write_data_to_disk@@Base+0x27c>)
   17802:	mvn.w	r4, #11
   17806:	ldr	r0, [pc, #372]	; (1797c <write_data_to_disk@@Base+0x284>)
   17808:	ldr.w	r3, [r9, r3]
   1780c:	add	r0, pc
   1780e:	ldr	r1, [r3, #0]
   17810:	blx	8b6c <fputs@plt+0x4>
   17814:	ldr	r0, [sp, #44]	; 0x2c
   17816:	blx	8620 <free@plt+0x4>
   1781a:	ldr	r2, [pc, #356]	; (17980 <write_data_to_disk@@Base+0x288>)
   1781c:	ldr	r3, [pc, #324]	; (17964 <write_data_to_disk@@Base+0x26c>)
   1781e:	add	r2, pc
   17820:	ldr	r3, [r2, r3]
   17822:	ldr	r2, [r3, #0]
   17824:	ldr	r3, [sp, #60]	; 0x3c
   17826:	eors	r2, r3
   17828:	beq.w	17952 <write_data_to_disk@@Base+0x25a>
   1782c:	blx	8708 <__stack_chk_fail@plt>
   17830:	movs	r1, #0
   17832:	blx	89bc <memset@plt+0x4>
   17836:	ldr	r3, [sp, #32]
   17838:	ldr	r1, [sp, #20]
   1783a:	mov	r2, r4
   1783c:	str.w	r4, [sl, #76]	; 0x4c
   17840:	add.w	r0, sl, #96	; 0x60
   17844:	adds	r1, r3, r1
   17846:	strd	r6, r7, [sl, #40]	; 0x28
   1784a:	blx	866c <memcpy@plt+0x4>
   1784e:	ldrd	r3, r4, [sp, #24]
   17852:	ldr	r2, [sp, #40]	; 0x28
   17854:	mov	r1, sl
   17856:	mov	r0, r8
   17858:	str.w	fp, [sp, #8]
   1785c:	strd	r3, r4, [sp]
   17860:	bl	2ae90 <write_raid56_with_parity@@Base>
   17864:	vmov	r1, s16
   17868:	movw	r2, #922	; 0x39a
   1786c:	mov	r3, r0
   1786e:	vmov	r0, s17
   17872:	bl	16a1c <add_merge_cache_extent@@Base+0x230>
   17876:	mov	r0, sl
   17878:	blx	8620 <free@plt+0x4>
   1787c:	ldr	r0, [sp, #44]	; 0x2c
   1787e:	blx	8620 <free@plt+0x4>
   17882:	movs	r3, #0
   17884:	str	r3, [sp, #44]	; 0x2c
   17886:	ldrd	r2, r3, [sp, #112]	; 0x70
   1788a:	ldrd	r4, r5, [sp, #48]	; 0x30
   1788e:	ldr	r1, [pc, #244]	; (17984 <write_data_to_disk@@Base+0x28c>)
   17890:	cmp	r3, r5
   17892:	ldr	r0, [pc, #244]	; (17988 <write_data_to_disk@@Base+0x290>)
   17894:	it	eq
   17896:	cmpeq	r2, r4
   17898:	add	r1, pc
   1789a:	add.w	r1, r1, #136	; 0x88
   1789e:	add	r0, pc
   178a0:	ite	cc
   178a2:	movcc	r3, #1
   178a4:	movcs	r3, #0
   178a6:	movw	r2, #954	; 0x3ba
   178aa:	bl	16a1c <add_merge_cache_extent@@Base+0x230>
   178ae:	ldr	r3, [sp, #112]	; 0x70
   178b0:	ldr	r0, [sp, #40]	; 0x28
   178b2:	subs	r3, r3, r4
   178b4:	str	r3, [sp, #112]	; 0x70
   178b6:	ldr	r3, [sp, #116]	; 0x74
   178b8:	sbc.w	r3, r3, r5
   178bc:	str	r3, [sp, #116]	; 0x74
   178be:	ldr	r3, [sp, #20]
   178c0:	adds	r6, r6, r4
   178c2:	adc.w	r7, r5, r7
   178c6:	adds	r3, r3, r4
   178c8:	str	r3, [sp, #20]
   178ca:	blx	8620 <free@plt+0x4>
   178ce:	movs	r3, #0
   178d0:	str	r3, [sp, #40]	; 0x28
   178d2:	b.n	1773a <write_data_to_disk@@Base+0x42>
   178d4:	add.w	sl, sl, #1
   178d8:	mov	r1, fp
   178da:	add.w	r3, r3, sl, lsl #4
   178de:	ldrd	r3, r4, [r3]
   178e2:	strd	r3, r4, [sp, #24]
   178e6:	ldrd	r2, r3, [sp, #48]	; 0x30
   178ea:	ldrd	r4, r5, [sp, #112]	; 0x70
   178ee:	cmp	r5, r3
   178f0:	it	eq
   178f2:	cmpeq	r4, r2
   178f4:	itt	cc
   178f6:	movcc	r2, r4
   178f8:	movcc	r3, r5
   178fa:	ldrd	r4, r5, [sp, #24]
   178fe:	strd	r2, r3, [sp, #48]	; 0x30
   17902:	strd	r4, r5, [sp]
   17906:	blx	8a20 <pwrite64@plt>
   1790a:	ldrd	r2, r3, [sp, #48]	; 0x30
   1790e:	asrs	r5, r0, #31
   17910:	cmp	r5, r3
   17912:	it	eq
   17914:	cmpeq	r0, r2
   17916:	beq.w	1779c <write_data_to_disk@@Base+0xa4>
   1791a:	ldr	r3, [pc, #88]	; (17974 <write_data_to_disk@@Base+0x27c>)
   1791c:	cmp	r0, #0
   1791e:	ldr.w	r3, [r9, r3]
   17922:	ldr	r5, [r3, #0]
   17924:	bge.n	17944 <write_data_to_disk@@Base+0x24c>
   17926:	blx	897c <__errno_location@plt>
   1792a:	ldr	r2, [pc, #96]	; (1798c <write_data_to_disk@@Base+0x294>)
   1792c:	movs	r1, #1
   1792e:	add	r2, pc
   17930:	ldr	r3, [r0, #0]
   17932:	mov	r4, r0
   17934:	mov	r0, r5
   17936:	blx	8a64 <__fprintf_chk@plt+0x4>
   1793a:	ldr	r0, [sp, #40]	; 0x28
   1793c:	ldr	r4, [r4, #0]
   1793e:	blx	8620 <free@plt+0x4>
   17942:	b.n	1781a <write_data_to_disk@@Base+0x122>
   17944:	ldr	r0, [pc, #72]	; (17990 <write_data_to_disk@@Base+0x298>)
   17946:	mov	r1, r5
   17948:	add	r0, pc
   1794a:	blx	8b6c <fputs@plt+0x4>
   1794e:	ldr	r0, [sp, #40]	; 0x28
   17950:	b.n	177b4 <write_data_to_disk@@Base+0xbc>
   17952:	mov	r0, r4
   17954:	add	sp, #68	; 0x44
   17956:	vpop	{d8}
   1795a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1795e:	nop
   17960:	bvs.n	17a50 <copy_extent_buffer@@Base+0xe>
   17962:	movs	r4, r0
   17964:	lsls	r0, r5, #8
   17966:	movs	r0, r0
   17968:	bvs.n	17a48 <copy_extent_buffer@@Base+0x6>
   1796a:	movs	r4, r0
   1796c:	ldr	r3, [pc, #476]	; (17b4c <__btrfs_warning@@Base+0x4c>)
   1796e:	movs	r2, r0
   17970:	cmp	r5, #176	; 0xb0
   17972:	movs	r2, r0
   17974:	lsls	r0, r7, #8
   17976:	movs	r0, r0
   17978:	ldr	r2, [pc, #436]	; (17b30 <__btrfs_warning@@Base+0x30>)
   1797a:	movs	r2, r0
   1797c:	ldr	r2, [pc, #220]	; (17a5c <btrfs_clone_extent_buffer@@Base+0x4>)
   1797e:	movs	r2, r0
   17980:	bpl.n	17a48 <copy_extent_buffer@@Base+0x6>
   17982:	movs	r4, r0
   17984:	ldr	r2, [pc, #36]	; (179ac <set_extent_buffer_dirty@@Base+0x18>)
   17986:	movs	r2, r0
   17988:	ldr	r1, [pc, #948]	; (17d40 <btrfs_uuid_to_key@@Base+0x50>)
   1798a:	movs	r2, r0
   1798c:	ldr	r1, [pc, #208]	; (17a60 <btrfs_clone_extent_buffer@@Base+0x8>)
   1798e:	movs	r2, r0
   17990:	ldr	r1, [pc, #216]	; (17a6c <btrfs_clone_extent_buffer@@Base+0x14>)
   17992:	movs	r2, r0

00017994 <set_extent_buffer_dirty@@Base>:
   17994:	push	{r0, r1, r4, r6, r7, lr}
   17996:	mov	r4, r0
   17998:	ldr	r3, [r0, #84]	; 0x54
   1799a:	lsls	r2, r3, #31
   1799c:	bmi.n	179c8 <set_extent_buffer_dirty@@Base+0x34>
   1799e:	orr.w	r3, r3, #1
   179a2:	str	r3, [r0, #84]	; 0x54
   179a4:	ldrd	r2, r3, [r0, #40]	; 0x28
   179a8:	ldr	r1, [r0, #76]	; 0x4c
   179aa:	adds.w	r6, r2, #4294967295	; 0xffffffff
   179ae:	adc.w	r7, r3, #4294967295	; 0xffffffff
   179b2:	adds	r6, r6, r1
   179b4:	adc.w	r7, r7, #0
   179b8:	strd	r6, r7, [sp]
   179bc:	ldr	r0, [r0, #56]	; 0x38
   179be:	bl	171e8 <set_extent_dirty@@Base>
   179c2:	ldr	r3, [r4, #80]	; 0x50
   179c4:	adds	r3, #1
   179c6:	str	r3, [r4, #80]	; 0x50
   179c8:	movs	r0, #0
   179ca:	add	sp, #8
   179cc:	pop	{r4, r6, r7, pc}

000179ce <clear_extent_buffer_dirty@@Base>:
   179ce:	push	{r0, r1, r4, r6, r7, lr}
   179d0:	mov	r4, r0
   179d2:	ldr	r3, [r0, #84]	; 0x54
   179d4:	lsls	r2, r3, #31
   179d6:	bpl.n	17a02 <clear_extent_buffer_dirty@@Base+0x34>
   179d8:	bic.w	r3, r3, #1
   179dc:	str	r3, [r0, #84]	; 0x54
   179de:	ldrd	r2, r3, [r0, #40]	; 0x28
   179e2:	ldr	r1, [r0, #76]	; 0x4c
   179e4:	adds.w	r6, r2, #4294967295	; 0xffffffff
   179e8:	adc.w	r7, r3, #4294967295	; 0xffffffff
   179ec:	adds	r6, r6, r1
   179ee:	adc.w	r7, r7, #0
   179f2:	strd	r6, r7, [sp]
   179f6:	ldr	r0, [r0, #56]	; 0x38
   179f8:	bl	17200 <clear_extent_dirty@@Base>
   179fc:	mov	r0, r4
   179fe:	bl	17320 <free_extent_buffer@@Base>
   17a02:	movs	r0, #0
   17a04:	add	sp, #8
   17a06:	pop	{r4, r6, r7, pc}

00017a08 <memcmp_extent_buffer@@Base>:
   17a08:	push	{r5}
   17a0a:	adds	r0, #96	; 0x60
   17a0c:	mov	r5, r2
   17a0e:	mov	r2, r3
   17a10:	add	r0, r5
   17a12:	ldr.w	r5, [sp], #4
   17a16:	b.w	869c <memcmp@plt>

00017a1a <read_extent_buffer@@Base>:
   17a1a:	adds	r0, #96	; 0x60
   17a1c:	push	{r5}
   17a1e:	mov	r5, r1
   17a20:	mov	r1, r2
   17a22:	mov	r2, r3
   17a24:	add	r1, r0
   17a26:	mov	r0, r5
   17a28:	ldr.w	r5, [sp], #4
   17a2c:	b.w	8668 <memcpy@plt>

00017a30 <write_extent_buffer@@Base>:
   17a30:	push	{r5}
   17a32:	adds	r0, #96	; 0x60
   17a34:	mov	r5, r2
   17a36:	mov	r2, r3
   17a38:	add	r0, r5
   17a3a:	ldr.w	r5, [sp], #4
   17a3e:	b.w	8668 <memcpy@plt>

00017a42 <copy_extent_buffer@@Base>:
   17a42:	push	{r6}
   17a44:	adds	r0, #96	; 0x60
   17a46:	adds	r1, #96	; 0x60
   17a48:	mov	r6, r2
   17a4a:	add	r1, r3
   17a4c:	ldr	r2, [sp, #4]
   17a4e:	add	r0, r6
   17a50:	ldr.w	r6, [sp], #4
   17a54:	b.w	8668 <memcpy@plt>

00017a58 <btrfs_clone_extent_buffer@@Base>:
   17a58:	push	{r0, r1, r2, r4, r5, lr}
   17a5a:	mov	r5, r0
   17a5c:	ldr	r3, [r0, #76]	; 0x4c
   17a5e:	str	r3, [sp, #0]
   17a60:	ldrd	r2, r3, [r0, #40]	; 0x28
   17a64:	ldr	r0, [r0, #92]	; 0x5c
   17a66:	bl	169c6 <add_merge_cache_extent@@Base+0x1da>
   17a6a:	mov	r4, r0
   17a6c:	cbz	r0, 17a86 <btrfs_clone_extent_buffer@@Base+0x2e>
   17a6e:	movs	r3, #0
   17a70:	str	r3, [r0, #56]	; 0x38
   17a72:	ldr	r2, [r5, #76]	; 0x4c
   17a74:	mov	r1, r5
   17a76:	str	r2, [sp, #0]
   17a78:	mov	r2, r3
   17a7a:	bl	17a42 <copy_extent_buffer@@Base>
   17a7e:	ldr	r3, [r4, #84]	; 0x54
   17a80:	orr.w	r3, r3, #2048	; 0x800
   17a84:	str	r3, [r4, #84]	; 0x54
   17a86:	mov	r0, r4
   17a88:	add	sp, #12
   17a8a:	pop	{r4, r5, pc}

00017a8c <memmove_extent_buffer@@Base>:
   17a8c:	adds	r0, #96	; 0x60
   17a8e:	push	{r5}
   17a90:	mov	r5, r1
   17a92:	mov	r1, r2
   17a94:	mov	r2, r3
   17a96:	add	r1, r0
   17a98:	add	r0, r5
   17a9a:	ldr.w	r5, [sp], #4
   17a9e:	b.w	860c <memmove@plt>

00017aa2 <memset_extent_buffer@@Base>:
   17aa2:	push	{r5}
   17aa4:	adds	r0, #96	; 0x60
   17aa6:	mov	r5, r2
   17aa8:	mov	r2, r3
   17aaa:	add	r0, r5
   17aac:	ldr.w	r5, [sp], #4
   17ab0:	b.w	89b8 <memset@plt>

00017ab4 <extent_buffer_test_bit@@Base>:
   17ab4:	cmp	r2, #0
   17ab6:	mov	r3, r2
   17ab8:	it	lt
   17aba:	addlt	r3, r2, #7
   17abc:	add	r1, r0
   17abe:	and.w	r2, r2, #7
   17ac2:	add.w	r0, r1, r3, asr #3
   17ac6:	ldrb.w	r0, [r0, #96]	; 0x60
   17aca:	asrs	r0, r2
   17acc:	and.w	r0, r0, #1
   17ad0:	bx	lr
   17ad2:	nop

00017ad4 <__crc32c_le@@Base>:
   17ad4:	push	{r4, lr}
   17ad6:	add	r2, r1
   17ad8:	ldr	r4, [pc, #24]	; (17af4 <__crc32c_le@@Base+0x20>)
   17ada:	add	r4, pc
   17adc:	cmp	r1, r2
   17ade:	bne.n	17ae2 <__crc32c_le@@Base+0xe>
   17ae0:	pop	{r4, pc}
   17ae2:	ldrb.w	r3, [r1], #1
   17ae6:	eors	r3, r0
   17ae8:	uxtb	r3, r3
   17aea:	ldr.w	r3, [r4, r3, lsl #2]
   17aee:	eor.w	r0, r3, r0, lsr #8
   17af2:	b.n	17adc <__crc32c_le@@Base+0x8>
   17af4:	ldr	r0, [pc, #392]	; (17c80 <__btrfs_error_on@@Base+0xc>)
   17af6:	movs	r2, r0

00017af8 <crc32c_optimization_init@@Base>:
   17af8:	bx	lr

00017afa <crc32c_le@@Base>:
   17afa:	b.w	17ad4 <__crc32c_le@@Base>
   17afe:	nop

00017b00 <__btrfs_warning@@Base>:
   17b00:	push	{r0, r1, r2, r3}
   17b02:	push	{r4, r5, lr}
   17b04:	sub	sp, #20
   17b06:	add	r4, sp, #32
   17b08:	ldr	r1, [pc, #88]	; (17b64 <__btrfs_warning@@Base+0x64>)
   17b0a:	ldr	r3, [pc, #92]	; (17b68 <__btrfs_warning@@Base+0x68>)
   17b0c:	ldr.w	r2, [r4], #4
   17b10:	add	r1, pc
   17b12:	add	r3, pc
   17b14:	ldr	r0, [pc, #84]	; (17b6c <__btrfs_warning@@Base+0x6c>)
   17b16:	str	r2, [sp, #4]
   17b18:	add	r0, pc
   17b1a:	ldr	r2, [pc, #84]	; (17b70 <__btrfs_warning@@Base+0x70>)
   17b1c:	ldr	r2, [r1, r2]
   17b1e:	ldr	r1, [pc, #84]	; (17b74 <__btrfs_warning@@Base+0x74>)
   17b20:	ldr	r2, [r2, #0]
   17b22:	str	r2, [sp, #12]
   17b24:	mov.w	r2, #0
   17b28:	ldr	r5, [r3, r1]
   17b2a:	ldr	r1, [r5, #0]
   17b2c:	blx	8b6c <fputs@plt+0x4>
   17b30:	ldr	r2, [sp, #4]
   17b32:	mov	r3, r4
   17b34:	movs	r1, #1
   17b36:	ldr	r0, [r5, #0]
   17b38:	str	r4, [sp, #8]
   17b3a:	blx	88b0 <__vfprintf_chk@plt>
   17b3e:	ldr	r1, [r5, #0]
   17b40:	movs	r0, #10
   17b42:	blx	8ad4 <fputc@plt+0x4>
   17b46:	ldr	r2, [pc, #48]	; (17b78 <__btrfs_warning@@Base+0x78>)
   17b48:	ldr	r3, [pc, #36]	; (17b70 <__btrfs_warning@@Base+0x70>)
   17b4a:	add	r2, pc
   17b4c:	ldr	r3, [r2, r3]
   17b4e:	ldr	r2, [r3, #0]
   17b50:	ldr	r3, [sp, #12]
   17b52:	eors	r2, r3
   17b54:	beq.n	17b5a <__btrfs_warning@@Base+0x5a>
   17b56:	blx	8708 <__stack_chk_fail@plt>
   17b5a:	add	sp, #20
   17b5c:	ldmia.w	sp!, {r4, r5, lr}
   17b60:	add	sp, #16
   17b62:	bx	lr
   17b64:	bcs.n	17c48 <__btrfs_warning_on@@Base+0x50>
   17b66:	movs	r4, r0
   17b68:	bcs.n	17c48 <__btrfs_warning_on@@Base+0x50>
   17b6a:	movs	r4, r0
   17b6c:	ldr	r4, [pc, #144]	; (17c00 <__btrfs_warning_on@@Base+0x8>)
   17b6e:	movs	r2, r0
   17b70:	lsls	r0, r5, #8
   17b72:	movs	r0, r0
   17b74:	lsls	r0, r7, #8
   17b76:	movs	r0, r0
   17b78:	bcs.n	17be8 <__btrfs_error@@Base+0x6c>
   17b7a:	movs	r4, r0

00017b7c <__btrfs_error@@Base>:
   17b7c:	push	{r0, r1, r2, r3}
   17b7e:	push	{r4, r5, lr}
   17b80:	sub	sp, #20
   17b82:	add	r4, sp, #32
   17b84:	ldr	r1, [pc, #88]	; (17be0 <__btrfs_error@@Base+0x64>)
   17b86:	ldr	r3, [pc, #92]	; (17be4 <__btrfs_error@@Base+0x68>)
   17b88:	ldr.w	r2, [r4], #4
   17b8c:	add	r1, pc
   17b8e:	add	r3, pc
   17b90:	ldr	r0, [pc, #84]	; (17be8 <__btrfs_error@@Base+0x6c>)
   17b92:	str	r2, [sp, #4]
   17b94:	add	r0, pc
   17b96:	ldr	r2, [pc, #84]	; (17bec <__btrfs_error@@Base+0x70>)
   17b98:	ldr	r2, [r1, r2]
   17b9a:	ldr	r1, [pc, #84]	; (17bf0 <__btrfs_error@@Base+0x74>)
   17b9c:	ldr	r2, [r2, #0]
   17b9e:	str	r2, [sp, #12]
   17ba0:	mov.w	r2, #0
   17ba4:	ldr	r5, [r3, r1]
   17ba6:	ldr	r1, [r5, #0]
   17ba8:	blx	8b6c <fputs@plt+0x4>
   17bac:	ldr	r2, [sp, #4]
   17bae:	mov	r3, r4
   17bb0:	movs	r1, #1
   17bb2:	ldr	r0, [r5, #0]
   17bb4:	str	r4, [sp, #8]
   17bb6:	blx	88b0 <__vfprintf_chk@plt>
   17bba:	ldr	r1, [r5, #0]
   17bbc:	movs	r0, #10
   17bbe:	blx	8ad4 <fputc@plt+0x4>
   17bc2:	ldr	r2, [pc, #48]	; (17bf4 <__btrfs_error@@Base+0x78>)
   17bc4:	ldr	r3, [pc, #36]	; (17bec <__btrfs_error@@Base+0x70>)
   17bc6:	add	r2, pc
   17bc8:	ldr	r3, [r2, r3]
   17bca:	ldr	r2, [r3, #0]
   17bcc:	ldr	r3, [sp, #12]
   17bce:	eors	r2, r3
   17bd0:	beq.n	17bd6 <__btrfs_error@@Base+0x5a>
   17bd2:	blx	8708 <__stack_chk_fail@plt>
   17bd6:	add	sp, #20
   17bd8:	ldmia.w	sp!, {r4, r5, lr}
   17bdc:	add	sp, #16
   17bde:	bx	lr
   17be0:	bne.n	17bcc <__btrfs_error@@Base+0x50>
   17be2:	movs	r4, r0
   17be4:	bne.n	17bcc <__btrfs_error@@Base+0x50>
   17be6:	movs	r4, r0
   17be8:	ldr	r3, [pc, #712]	; (17eb4 <arg_strtou64@@Base+0x78>)
   17bea:	movs	r2, r0
   17bec:	lsls	r0, r5, #8
   17bee:	movs	r0, r0
   17bf0:	lsls	r0, r7, #8
   17bf2:	movs	r0, r0
   17bf4:	bne.n	17b6c <__btrfs_warning@@Base+0x6c>
   17bf6:	movs	r4, r0

00017bf8 <__btrfs_warning_on@@Base>:
   17bf8:	push	{r1, r2, r3}
   17bfa:	push	{r4, lr}
   17bfc:	sub	sp, #20
   17bfe:	ldr	r1, [pc, #92]	; (17c5c <__btrfs_warning_on@@Base+0x64>)
   17c00:	ldr	r2, [sp, #28]
   17c02:	add	r1, pc
   17c04:	ldr	r3, [pc, #88]	; (17c60 <__btrfs_warning_on@@Base+0x68>)
   17c06:	str	r2, [sp, #4]
   17c08:	add	r3, pc
   17c0a:	ldr	r2, [pc, #88]	; (17c64 <__btrfs_warning_on@@Base+0x6c>)
   17c0c:	ldr	r2, [r1, r2]
   17c0e:	ldr	r2, [r2, #0]
   17c10:	str	r2, [sp, #12]
   17c12:	mov.w	r2, #0
   17c16:	cbz	r0, 17c3e <__btrfs_warning_on@@Base+0x46>
   17c18:	ldr	r1, [pc, #76]	; (17c68 <__btrfs_warning_on@@Base+0x70>)
   17c1a:	ldr	r0, [pc, #80]	; (17c6c <__btrfs_warning_on@@Base+0x74>)
   17c1c:	ldr	r4, [r3, r1]
   17c1e:	add	r0, pc
   17c20:	ldr	r1, [r4, #0]
   17c22:	blx	8b6c <fputs@plt+0x4>
   17c26:	add	r3, sp, #32
   17c28:	ldr	r2, [sp, #4]
   17c2a:	movs	r1, #1
   17c2c:	ldr	r0, [r4, #0]
   17c2e:	str	r3, [sp, #8]
   17c30:	blx	88b0 <__vfprintf_chk@plt>
   17c34:	ldr	r1, [r4, #0]
   17c36:	movs	r0, #10
   17c38:	blx	8ad4 <fputc@plt+0x4>
   17c3c:	movs	r0, #1
   17c3e:	ldr	r2, [pc, #48]	; (17c70 <__btrfs_warning_on@@Base+0x78>)
   17c40:	ldr	r3, [pc, #32]	; (17c64 <__btrfs_warning_on@@Base+0x6c>)
   17c42:	add	r2, pc
   17c44:	ldr	r3, [r2, r3]
   17c46:	ldr	r2, [r3, #0]
   17c48:	ldr	r3, [sp, #12]
   17c4a:	eors	r2, r3
   17c4c:	beq.n	17c52 <__btrfs_warning_on@@Base+0x5a>
   17c4e:	blx	8708 <__stack_chk_fail@plt>
   17c52:	add	sp, #20
   17c54:	ldmia.w	sp!, {r4, lr}
   17c58:	add	sp, #12
   17c5a:	bx	lr
   17c5c:	bne.n	17d5c <btrfs_uuid_to_key@@Base+0x6c>
   17c5e:	movs	r4, r0
   17c60:	bne.n	17d54 <btrfs_uuid_to_key@@Base+0x64>
   17c62:	movs	r4, r0
   17c64:	lsls	r0, r5, #8
   17c66:	movs	r0, r0
   17c68:	lsls	r0, r7, #8
   17c6a:	movs	r0, r0
   17c6c:	ldr	r3, [pc, #120]	; (17ce8 <__btrfs_error_on@@Base+0x74>)
   17c6e:	movs	r2, r0
   17c70:	bne.n	17cf0 <btrfs_uuid_to_key@@Base>
   17c72:	movs	r4, r0

00017c74 <__btrfs_error_on@@Base>:
   17c74:	push	{r1, r2, r3}
   17c76:	push	{r4, lr}
   17c78:	sub	sp, #20
   17c7a:	ldr	r1, [pc, #92]	; (17cd8 <__btrfs_error_on@@Base+0x64>)
   17c7c:	ldr	r2, [sp, #28]
   17c7e:	add	r1, pc
   17c80:	ldr	r3, [pc, #88]	; (17cdc <__btrfs_error_on@@Base+0x68>)
   17c82:	str	r2, [sp, #4]
   17c84:	add	r3, pc
   17c86:	ldr	r2, [pc, #88]	; (17ce0 <__btrfs_error_on@@Base+0x6c>)
   17c88:	ldr	r2, [r1, r2]
   17c8a:	ldr	r2, [r2, #0]
   17c8c:	str	r2, [sp, #12]
   17c8e:	mov.w	r2, #0
   17c92:	cbz	r0, 17cba <__btrfs_error_on@@Base+0x46>
   17c94:	ldr	r1, [pc, #76]	; (17ce4 <__btrfs_error_on@@Base+0x70>)
   17c96:	ldr	r0, [pc, #80]	; (17ce8 <__btrfs_error_on@@Base+0x74>)
   17c98:	ldr	r4, [r3, r1]
   17c9a:	add	r0, pc
   17c9c:	ldr	r1, [r4, #0]
   17c9e:	blx	8b6c <fputs@plt+0x4>
   17ca2:	add	r3, sp, #32
   17ca4:	ldr	r2, [sp, #4]
   17ca6:	movs	r1, #1
   17ca8:	ldr	r0, [r4, #0]
   17caa:	str	r3, [sp, #8]
   17cac:	blx	88b0 <__vfprintf_chk@plt>
   17cb0:	ldr	r1, [r4, #0]
   17cb2:	movs	r0, #10
   17cb4:	blx	8ad4 <fputc@plt+0x4>
   17cb8:	movs	r0, #1
   17cba:	ldr	r2, [pc, #48]	; (17cec <__btrfs_error_on@@Base+0x78>)
   17cbc:	ldr	r3, [pc, #32]	; (17ce0 <__btrfs_error_on@@Base+0x6c>)
   17cbe:	add	r2, pc
   17cc0:	ldr	r3, [r2, r3]
   17cc2:	ldr	r2, [r3, #0]
   17cc4:	ldr	r3, [sp, #12]
   17cc6:	eors	r2, r3
   17cc8:	beq.n	17cce <__btrfs_error_on@@Base+0x5a>
   17cca:	blx	8708 <__stack_chk_fail@plt>
   17cce:	add	sp, #20
   17cd0:	ldmia.w	sp!, {r4, lr}
   17cd4:	add	sp, #12
   17cd6:	bx	lr
   17cd8:	bne.n	17ce0 <__btrfs_error_on@@Base+0x6c>
   17cda:	movs	r4, r0
   17cdc:	beq.n	17cd8 <__btrfs_error_on@@Base+0x64>
   17cde:	movs	r4, r0
   17ce0:	lsls	r0, r5, #8
   17ce2:	movs	r0, r0
   17ce4:	lsls	r0, r7, #8
   17ce6:	movs	r0, r0
   17ce8:	ldr	r2, [pc, #688]	; (17f9c <rb_insert@@Base+0x24>)
   17cea:	movs	r2, r0
   17cec:	beq.n	17c74 <__btrfs_error_on@@Base>
   17cee:	movs	r4, r0

00017cf0 <btrfs_uuid_to_key@@Base>:
   17cf0:	ldr	r2, [r0, #0]
   17cf2:	ldr	r3, [r0, #4]
   17cf4:	str	r2, [r1, #0]
   17cf6:	str	r3, [r1, #4]
   17cf8:	ldr	r2, [r0, #8]
   17cfa:	ldr	r3, [r0, #12]
   17cfc:	str.w	r2, [r1, #9]
   17d00:	str.w	r3, [r1, #13]
   17d04:	bx	lr
   17d06:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   17d0a:	mov	r9, r0
   17d0c:	mov	r0, r1
   17d0e:	ldr	r1, [pc, #260]	; (17e14 <btrfs_uuid_to_key@@Base+0x124>)
   17d10:	mov	r7, r2
   17d12:	sub.w	sp, sp, #4128	; 0x1020
   17d16:	ldr	r2, [pc, #256]	; (17e18 <btrfs_uuid_to_key@@Base+0x128>)
   17d18:	sub	sp, #24
   17d1a:	add	r1, pc
   17d1c:	add	r6, sp, #56	; 0x38
   17d1e:	add	r5, sp, #28
   17d20:	sub.w	r4, r6, #8
   17d24:	ldr	r2, [r1, r2]
   17d26:	mov	r8, r3
   17d28:	add.w	r3, sp, #4128	; 0x1020
   17d2c:	mov	r1, r5
   17d2e:	ldr	r2, [r2, #0]
   17d30:	str	r2, [r3, #20]
   17d32:	mov.w	r2, #0
   17d36:	adds	r3, #20
   17d38:	strb.w	r7, [sp, #36]	; 0x24
   17d3c:	bl	17cf0 <btrfs_uuid_to_key@@Base>
   17d40:	mov.w	r2, #4096	; 0x1000
   17d44:	movs	r1, #0
   17d46:	mov	r0, r4
   17d48:	ldr.w	sl, [pc, #208]	; 17e1c <btrfs_uuid_to_key@@Base+0x12c>
   17d4c:	blx	89bc <memset@plt+0x4>
   17d50:	movs	r2, #9
   17d52:	movs	r3, #0
   17d54:	strd	r2, r3, [r6, #-8]
   17d58:	ldrd	r2, r3, [r6, #-28]
   17d5c:	mov	r0, r9
   17d5e:	strd	r7, r7, [r4, #56]	; 0x38
   17d62:	movs	r7, #1
   17d64:	ldr	r1, [pc, #168]	; (17e10 <btrfs_uuid_to_key@@Base+0x120>)
   17d66:	add	sl, pc
   17d68:	strd	r2, r3, [r4, #8]
   17d6c:	strd	r2, r3, [r4, #16]
   17d70:	ldr.w	r2, [r6, #-19]
   17d74:	ldr.w	r3, [r6, #-15]
   17d78:	str	r7, [r4, #64]	; 0x40
   17d7a:	strd	r2, r3, [r4, #24]
   17d7e:	strd	r2, r3, [r4, #32]
   17d82:	mov.w	r2, #4294967295	; 0xffffffff
   17d86:	mov.w	r3, #4294967295	; 0xffffffff
   17d8a:	strd	r2, r3, [r4, #48]	; 0x30
   17d8e:	mov	r2, r4
   17d90:	blx	87b4 <ioctl@plt>
   17d94:	cmp	r0, #0
   17d96:	bge.n	17dc6 <btrfs_uuid_to_key@@Base+0xd6>
   17d98:	ldr	r3, [pc, #132]	; (17e20 <btrfs_uuid_to_key@@Base+0x130>)
   17d9a:	ldr.w	r3, [sl, r3]
   17d9e:	str	r0, [sp, #16]
   17da0:	ldr.w	r1, [r6, #-19]
   17da4:	ldr.w	r2, [r6, #-15]
   17da8:	strd	r1, r2, [sp, #8]
   17dac:	ldrd	r1, r2, [r6, #-28]
   17db0:	strd	r1, r2, [sp]
   17db4:	mov	r1, r7
   17db6:	ldr	r2, [pc, #108]	; (17e24 <btrfs_uuid_to_key@@Base+0x134>)
   17db8:	ldr	r0, [r3, #0]
   17dba:	add	r2, pc
   17dbc:	blx	8a64 <__fprintf_chk@plt+0x4>
   17dc0:	mvn.w	r0, #1
   17dc4:	b.n	17dec <btrfs_uuid_to_key@@Base+0xfc>
   17dc6:	ldr	r3, [r4, #64]	; 0x40
   17dc8:	cmp	r3, #0
   17dca:	beq.n	17dc0 <btrfs_uuid_to_key@@Base+0xd0>
   17dcc:	ldr.w	r2, [r4, #132]	; 0x84
   17dd0:	ands.w	r0, r2, #7
   17dd4:	bne.n	17dd8 <btrfs_uuid_to_key@@Base+0xe8>
   17dd6:	cbnz	r2, 17de4 <btrfs_uuid_to_key@@Base+0xf4>
   17dd8:	ldr	r1, [pc, #76]	; (17e28 <btrfs_uuid_to_key@@Base+0x138>)
   17dda:	movs	r0, #1
   17ddc:	add	r1, pc
   17dde:	blx	8a30 <__printf_chk@plt+0x4>
   17de2:	b.n	17dc0 <btrfs_uuid_to_key@@Base+0xd0>
   17de4:	ldrd	r2, r3, [r4, #136]	; 0x88
   17de8:	strd	r2, r3, [r8]
   17dec:	ldr	r1, [pc, #60]	; (17e2c <btrfs_uuid_to_key@@Base+0x13c>)
   17dee:	add.w	r3, sp, #4128	; 0x1020
   17df2:	ldr	r2, [pc, #36]	; (17e18 <btrfs_uuid_to_key@@Base+0x128>)
   17df4:	adds	r3, #20
   17df6:	add	r1, pc
   17df8:	ldr	r2, [r1, r2]
   17dfa:	ldr	r1, [r2, #0]
   17dfc:	ldr	r2, [r3, #0]
   17dfe:	eors	r1, r2
   17e00:	beq.n	17e06 <btrfs_uuid_to_key@@Base+0x116>
   17e02:	blx	8708 <__stack_chk_fail@plt>
   17e06:	add.w	sp, sp, #4128	; 0x1020
   17e0a:	add	sp, #24
   17e0c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   17e10:	str	r4, [sp, #68]	; 0x44
   17e12:	beq.n	17e16 <btrfs_uuid_to_key@@Base+0x126>
   17e14:	beq.n	17ee4 <lookup_path_rootid@@Base>
   17e16:	movs	r4, r0
   17e18:	lsls	r0, r5, #8
   17e1a:	movs	r0, r0
   17e1c:	beq.n	17e54 <arg_strtou64@@Base+0x18>
   17e1e:	movs	r4, r0
   17e20:	lsls	r0, r7, #8
   17e22:	movs	r0, r0
   17e24:	ldr	r1, [pc, #592]	; (18078 <rb_free_nodes@@Base+0x7a>)
   17e26:	movs	r2, r0
   17e28:	ldr	r1, [pc, #800]	; (1814c <rb_free_nodes@@Base+0x14e>)
   17e2a:	movs	r2, r0
   17e2c:	ldmia	r7, {r1, r3, r7}
   17e2e:	movs	r4, r0

00017e30 <btrfs_lookup_uuid_subvol_item@@Base>:
   17e30:	mov	r3, r2
   17e32:	movs	r2, #251	; 0xfb
   17e34:	b.n	17d06 <btrfs_uuid_to_key@@Base+0x16>

00017e36 <btrfs_lookup_uuid_received_subvol_item@@Base>:
   17e36:	mov	r3, r2
   17e38:	movs	r2, #252	; 0xfc
   17e3a:	b.n	17d06 <btrfs_uuid_to_key@@Base+0x16>

00017e3c <arg_strtou64@@Base>:
   17e3c:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   17e3e:	add	r1, sp, #8
   17e40:	ldr	r2, [pc, #128]	; (17ec4 <arg_strtou64@@Base+0x88>)
   17e42:	ldr	r3, [pc, #132]	; (17ec8 <arg_strtou64@@Base+0x8c>)
   17e44:	add	r2, pc
   17e46:	str	r0, [sp, #4]
   17e48:	ldr	r6, [pc, #128]	; (17ecc <arg_strtou64@@Base+0x90>)
   17e4a:	ldr	r3, [r2, r3]
   17e4c:	movs	r2, #0
   17e4e:	add	r6, pc
   17e50:	ldr	r3, [r3, #0]
   17e52:	str	r3, [sp, #12]
   17e54:	mov.w	r3, #0
   17e58:	str	r2, [sp, #8]
   17e5a:	blx	89fc <strtoull@plt>
   17e5e:	ldrd	r3, r2, [sp, #4]
   17e62:	mov	r4, r0
   17e64:	mov	r5, r1
   17e66:	cbz	r2, 17e82 <arg_strtou64@@Base+0x46>
   17e68:	ldrb	r2, [r2, #0]
   17e6a:	cbz	r2, 17e82 <arg_strtou64@@Base+0x46>
   17e6c:	ldr	r2, [pc, #96]	; (17ed0 <arg_strtou64@@Base+0x94>)
   17e6e:	ldr	r0, [r6, r2]
   17e70:	ldr	r2, [pc, #96]	; (17ed4 <arg_strtou64@@Base+0x98>)
   17e72:	add	r2, pc
   17e74:	ldr	r0, [r0, #0]
   17e76:	movs	r1, #1
   17e78:	blx	8a64 <__fprintf_chk@plt+0x4>
   17e7c:	movs	r0, #1
   17e7e:	blx	8934 <exit@plt>
   17e82:	ldrb	r2, [r3, #0]
   17e84:	cmp	r2, #45	; 0x2d
   17e86:	bne.n	17e92 <arg_strtou64@@Base+0x56>
   17e88:	ldr	r2, [pc, #68]	; (17ed0 <arg_strtou64@@Base+0x94>)
   17e8a:	ldr	r0, [r6, r2]
   17e8c:	ldr	r2, [pc, #72]	; (17ed8 <arg_strtou64@@Base+0x9c>)
   17e8e:	add	r2, pc
   17e90:	b.n	17e74 <arg_strtou64@@Base+0x38>
   17e92:	adds	r2, r5, #1
   17e94:	it	eq
   17e96:	cmpeq.w	r4, #4294967295	; 0xffffffff
   17e9a:	bne.n	17ea6 <arg_strtou64@@Base+0x6a>
   17e9c:	ldr	r2, [pc, #48]	; (17ed0 <arg_strtou64@@Base+0x94>)
   17e9e:	ldr	r0, [r6, r2]
   17ea0:	ldr	r2, [pc, #56]	; (17edc <arg_strtou64@@Base+0xa0>)
   17ea2:	add	r2, pc
   17ea4:	b.n	17e74 <arg_strtou64@@Base+0x38>
   17ea6:	ldr	r2, [pc, #56]	; (17ee0 <arg_strtou64@@Base+0xa4>)
   17ea8:	ldr	r3, [pc, #28]	; (17ec8 <arg_strtou64@@Base+0x8c>)
   17eaa:	add	r2, pc
   17eac:	ldr	r3, [r2, r3]
   17eae:	ldr	r2, [r3, #0]
   17eb0:	ldr	r3, [sp, #12]
   17eb2:	eors	r2, r3
   17eb4:	beq.n	17eba <arg_strtou64@@Base+0x7e>
   17eb6:	blx	8708 <__stack_chk_fail@plt>
   17eba:	mov	r0, r4
   17ebc:	mov	r1, r5
   17ebe:	add	sp, #16
   17ec0:	pop	{r4, r5, r6, pc}
   17ec2:	nop
   17ec4:	ldmia	r7!, {r2, r3, r4, r5}
   17ec6:	movs	r4, r0
   17ec8:	lsls	r0, r5, #8
   17eca:	movs	r0, r0
   17ecc:	ldmia	r7!, {r1, r4, r5}
   17ece:	movs	r4, r0
   17ed0:	lsls	r0, r7, #8
   17ed2:	movs	r0, r0
   17ed4:	ldr	r1, [pc, #364]	; (18044 <rb_free_nodes@@Base+0x46>)
   17ed6:	movs	r2, r0
   17ed8:	ldr	r1, [pc, #416]	; (1807c <rb_free_nodes@@Base+0x7e>)
   17eda:	movs	r2, r0
   17edc:	ldr	r1, [pc, #492]	; (180cc <rb_free_nodes@@Base+0xce>)
   17ede:	movs	r2, r0
   17ee0:	ldmia	r6, {r1, r2, r4, r6, r7}
   17ee2:	movs	r4, r0

00017ee4 <lookup_path_rootid@@Base>:
   17ee4:	push	{r4, r5, r6, lr}
   17ee6:	mov	r4, r1
   17ee8:	ldr	r1, [pc, #128]	; (17f6c <lookup_path_rootid@@Base+0x88>)
   17eea:	sub.w	sp, sp, #4096	; 0x1000
   17eee:	ldr	r2, [pc, #128]	; (17f70 <lookup_path_rootid@@Base+0x8c>)
   17ef0:	sub	sp, #8
   17ef2:	add	r1, pc
   17ef4:	add.w	r3, sp, #4096	; 0x1000
   17ef8:	adds	r3, #4
   17efa:	add	r6, sp, #8
   17efc:	ldr	r2, [r1, r2]
   17efe:	mov	r5, r0
   17f00:	movs	r1, #0
   17f02:	ldr	r2, [r2, #0]
   17f04:	str	r2, [r3, #0]
   17f06:	mov.w	r2, #0
   17f0a:	sub.w	r3, r6, #8
   17f0e:	mov.w	r2, #4096	; 0x1000
   17f12:	mov	r0, r3
   17f14:	blx	89bc <memset@plt+0x4>
   17f18:	movs	r1, #0
   17f1a:	mov	r3, r0
   17f1c:	mov.w	r0, #256	; 0x100
   17f20:	mov	r2, r3
   17f22:	strd	r0, r1, [r3, #8]
   17f26:	ldr	r1, [pc, #64]	; (17f68 <lookup_path_rootid@@Base+0x84>)
   17f28:	mov	r0, r5
   17f2a:	blx	87b4 <ioctl@plt>
   17f2e:	cmp	r0, #0
   17f30:	bge.n	17f54 <lookup_path_rootid@@Base+0x70>
   17f32:	blx	897c <__errno_location@plt>
   17f36:	ldr	r0, [r0, #0]
   17f38:	negs	r0, r0
   17f3a:	ldr	r1, [pc, #56]	; (17f74 <lookup_path_rootid@@Base+0x90>)
   17f3c:	add.w	r3, sp, #4096	; 0x1000
   17f40:	ldr	r2, [pc, #44]	; (17f70 <lookup_path_rootid@@Base+0x8c>)
   17f42:	adds	r3, #4
   17f44:	add	r1, pc
   17f46:	ldr	r2, [r1, r2]
   17f48:	ldr	r1, [r2, #0]
   17f4a:	ldr	r2, [r3, #0]
   17f4c:	eors	r1, r2
   17f4e:	beq.n	17f60 <lookup_path_rootid@@Base+0x7c>
   17f50:	blx	8708 <__stack_chk_fail@plt>
   17f54:	ldrd	r2, r3, [r6, #-8]
   17f58:	movs	r0, #0
   17f5a:	strd	r2, r3, [r4]
   17f5e:	b.n	17f3a <lookup_path_rootid@@Base+0x56>
   17f60:	add.w	sp, sp, #4096	; 0x1000
   17f64:	add	sp, #8
   17f66:	pop	{r4, r5, r6, pc}
   17f68:	str	r4, [sp, #72]	; 0x48
   17f6a:	beq.n	17f6e <lookup_path_rootid@@Base+0x8a>
   17f6c:	ldmia	r6!, {r1, r2, r3, r7}
   17f6e:	movs	r4, r0
   17f70:	lsls	r0, r5, #8
   17f72:	movs	r0, r0
   17f74:	ldmia	r6!, {r2, r3, r4, r5}
   17f76:	movs	r4, r0

00017f78 <rb_insert@@Base>:
   17f78:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   17f7c:	movs	r3, #0
   17f7e:	mov	r7, r0
   17f80:	mov	r6, r1
   17f82:	mov	r8, r2
   17f84:	mov	r4, r0
   17f86:	ldr	r5, [r4, #0]
   17f88:	cbnz	r5, 17fa0 <rb_insert@@Base+0x28>
   17f8a:	mov	r0, r6
   17f8c:	strd	r3, r5, [r6]
   17f90:	str	r5, [r6, #8]
   17f92:	mov	r1, r7
   17f94:	str	r6, [r4, #0]
   17f96:	bl	1392a <rb_insert_color@@Base>
   17f9a:	mov	r0, r5
   17f9c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   17fa0:	mov	r1, r6
   17fa2:	mov	r0, r5
   17fa4:	blx	r8
   17fa6:	cmp	r0, #0
   17fa8:	bge.n	17fb2 <rb_insert@@Base+0x3a>
   17faa:	ldr	r4, [r4, #0]
   17fac:	adds	r4, #8
   17fae:	mov	r3, r5
   17fb0:	b.n	17f86 <rb_insert@@Base+0xe>
   17fb2:	beq.n	17fba <rb_insert@@Base+0x42>
   17fb4:	ldr	r4, [r4, #0]
   17fb6:	adds	r4, #4
   17fb8:	b.n	17fae <rb_insert@@Base+0x36>
   17fba:	mvn.w	r0, #16
   17fbe:	b.n	17f9c <rb_insert@@Base+0x24>

00017fc0 <rb_search@@Base>:
   17fc0:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   17fc4:	movs	r5, #0
   17fc6:	ldr	r4, [r0, #0]
   17fc8:	mov	r8, r1
   17fca:	mov	r7, r2
   17fcc:	mov	r6, r3
   17fce:	mov	r0, r5
   17fd0:	cbnz	r4, 17fe6 <rb_search@@Base+0x26>
   17fd2:	cbz	r6, 17fe0 <rb_search@@Base+0x20>
   17fd4:	cbz	r0, 17fde <rb_search@@Base+0x1e>
   17fd6:	cmp	r5, #0
   17fd8:	ble.n	17fde <rb_search@@Base+0x1e>
   17fda:	bl	13c66 <rb_next@@Base>
   17fde:	str	r0, [r6, #0]
   17fe0:	mov	r0, r4
   17fe2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   17fe6:	mov	r1, r8
   17fe8:	mov	r0, r4
   17fea:	blx	r7
   17fec:	subs	r5, r0, #0
   17fee:	bge.n	17ff8 <rb_search@@Base+0x38>
   17ff0:	ldr	r3, [r4, #8]
   17ff2:	mov	r0, r4
   17ff4:	mov	r4, r3
   17ff6:	b.n	17fd0 <rb_search@@Base+0x10>
   17ff8:	beq.n	17fe0 <rb_search@@Base+0x20>
   17ffa:	ldr	r3, [r4, #4]
   17ffc:	b.n	17ff2 <rb_search@@Base+0x32>

00017ffe <rb_free_nodes@@Base>:
   17ffe:	push	{r4, r5, r6, lr}
   18000:	mov	r5, r0
   18002:	mov	r6, r1
   18004:	mov	r0, r5
   18006:	bl	13c46 <rb_first@@Base>
   1800a:	mov	r4, r0
   1800c:	cbnz	r0, 18010 <rb_free_nodes@@Base+0x12>
   1800e:	pop	{r4, r5, r6, pc}
   18010:	mov	r1, r5
   18012:	bl	139d0 <rb_erase@@Base>
   18016:	mov	r0, r4
   18018:	blx	r6
   1801a:	b.n	18004 <rb_free_nodes@@Base+0x6>
   1801c:	movs	r3, #25
   1801e:	mla	r1, r3, r1, r0
   18022:	ldr.w	r0, [r1, #214]	; 0xd6
   18026:	ldr.w	r3, [r1, #218]	; 0xda
   1802a:	add	r0, r3
   1802c:	bx	lr
   1802e:	add.w	r2, r2, r2, lsl #5
   18032:	movs	r3, #17
   18034:	adds	r2, #101	; 0x65
   18036:	b.w	17a30 <write_extent_buffer@@Base>
   1803a:	movs	r3, #25
   1803c:	muls	r2, r3
   1803e:	movs	r3, #17
   18040:	adds	r2, #101	; 0x65
   18042:	b.w	17a30 <write_extent_buffer@@Base>
   18046:	movs	r3, #25
   18048:	muls	r2, r3
   1804a:	movs	r3, #17
   1804c:	adds	r2, #101	; 0x65
   1804e:	b.w	17a1a <read_extent_buffer@@Base>
   18052:	add.w	r2, r2, r2, lsl #5
   18056:	movs	r3, #17
   18058:	adds	r2, #101	; 0x65
   1805a:	b.w	17a1a <read_extent_buffer@@Base>
   1805e:	ldr	r2, [pc, #64]	; (180a0 <rb_free_nodes@@Base+0xa2>)
   18060:	movs	r1, #16
   18062:	ldr	r3, [pc, #64]	; (180a4 <rb_free_nodes@@Base+0xa6>)
   18064:	push	{r4, lr}
   18066:	add	r2, pc
   18068:	sub	sp, #72	; 0x48
   1806a:	add	r4, sp, #4
   1806c:	ldr	r3, [r2, r3]
   1806e:	mov	r0, r4
   18070:	ldr	r3, [r3, #0]
   18072:	str	r3, [sp, #68]	; 0x44
   18074:	mov.w	r3, #0
   18078:	blx	88bc <backtrace@plt>
   1807c:	movs	r2, #2
   1807e:	mov	r1, r0
   18080:	mov	r0, r4
   18082:	blx	8bcc <backtrace_symbols_fd@plt>
   18086:	ldr	r2, [pc, #32]	; (180a8 <rb_free_nodes@@Base+0xaa>)
   18088:	ldr	r3, [pc, #24]	; (180a4 <rb_free_nodes@@Base+0xa6>)
   1808a:	add	r2, pc
   1808c:	ldr	r3, [r2, r3]
   1808e:	ldr	r2, [r3, #0]
   18090:	ldr	r3, [sp, #68]	; 0x44
   18092:	eors	r2, r3
   18094:	beq.n	1809a <rb_free_nodes@@Base+0x9c>
   18096:	blx	8708 <__stack_chk_fail@plt>
   1809a:	add	sp, #72	; 0x48
   1809c:	pop	{r4, pc}
   1809e:	nop
   180a0:	ldmia	r5!, {r1, r3, r4}
   180a2:	movs	r4, r0
   180a4:	lsls	r0, r5, #8
   180a6:	movs	r0, r0
   180a8:	ldmia	r4, {r1, r2, r4, r5, r6, r7}
   180aa:	movs	r4, r0
   180ac:	cbz	r0, 180be <rb_free_nodes@@Base+0xc0>
   180ae:	cmn.w	r0, #4096	; 0x1000
   180b2:	bhi.n	180bc <rb_free_nodes@@Base+0xbe>
   180b4:	ldr	r0, [r0, #84]	; 0x54
   180b6:	ubfx	r0, r0, #2, #1
   180ba:	bx	lr
   180bc:	movs	r0, #0
   180be:	bx	lr
   180c0:	ldr.w	r3, [r1, #192]	; 0xc0
   180c4:	cbnz	r3, 180cc <rb_free_nodes@@Base+0xce>
   180c6:	ldr	r0, [r0, #0]
   180c8:	subs	r0, #101	; 0x65
   180ca:	bx	lr
   180cc:	subs	r3, #1
   180ce:	movs	r2, #25
   180d0:	mla	r1, r2, r3, r1
   180d4:	ldr.w	r0, [r1, #214]	; 0xd6
   180d8:	bx	lr
   180da:	push	{r0, r1, r2, r3, r4, lr}
   180dc:	ldr	r4, [pc, #36]	; (18104 <rb_free_nodes@@Base+0x106>)
   180de:	ldr	r5, [pc, #40]	; (18108 <rb_free_nodes@@Base+0x10a>)
   180e0:	add	r4, pc
   180e2:	ldr	r4, [r4, r5]
   180e4:	strd	r2, r1, [sp]
   180e8:	movs	r1, #1
   180ea:	strd	r0, r3, [sp, #8]
   180ee:	ldr	r2, [pc, #28]	; (1810c <rb_free_nodes@@Base+0x10e>)
   180f0:	ldr	r3, [pc, #28]	; (18110 <rb_free_nodes@@Base+0x112>)
   180f2:	add	r2, pc
   180f4:	ldr	r0, [r4, #0]
   180f6:	add	r3, pc
   180f8:	blx	8a64 <__fprintf_chk@plt+0x4>
   180fc:	bl	1805e <rb_free_nodes@@Base+0x60>
   18100:	blx	8b84 <abort@plt>
   18104:	ldmia	r4!, {r5, r7}
   18106:	movs	r4, r0
   18108:	lsls	r0, r7, #8
   1810a:	movs	r0, r0
   1810c:	adds	r0, r6, #6
   1810e:	movs	r2, r0
   18110:	bx	r8
   18112:	movs	r2, r0
   18114:	push	{r3, lr}
   18116:	cbz	r3, 1811c <rb_free_nodes@@Base+0x11e>
   18118:	bl	180da <rb_free_nodes@@Base+0xdc>
   1811c:	pop	{r3, pc}
   1811e:	push	{r4, r5, lr}
   18120:	sub	sp, #20
   18122:	ldr	r4, [pc, #40]	; (1814c <rb_free_nodes@@Base+0x14e>)
   18124:	ldr	r5, [pc, #40]	; (18150 <rb_free_nodes@@Base+0x152>)
   18126:	add	r4, pc
   18128:	ldr	r4, [r4, r5]
   1812a:	strd	r2, r1, [sp]
   1812e:	movs	r1, #1
   18130:	strd	r0, r3, [sp, #8]
   18134:	ldr	r2, [pc, #28]	; (18154 <rb_free_nodes@@Base+0x156>)
   18136:	ldr	r3, [pc, #32]	; (18158 <rb_free_nodes@@Base+0x15a>)
   18138:	ldr	r0, [r4, #0]
   1813a:	add	r2, pc
   1813c:	add	r3, pc
   1813e:	blx	8a64 <__fprintf_chk@plt+0x4>
   18142:	add	sp, #20
   18144:	ldmia.w	sp!, {r4, r5, lr}
   18148:	b.n	1805e <rb_free_nodes@@Base+0x60>
   1814a:	nop
   1814c:	ldmia	r4, {r1, r3, r4, r6}
   1814e:	movs	r4, r0
   18150:	lsls	r0, r7, #8
   18152:	movs	r0, r0
   18154:	adds	r2, r6, #4
   18156:	movs	r2, r0
   18158:	mov	sl, pc
   1815a:	movs	r2, r0
   1815c:	cbz	r3, 18162 <rb_free_nodes@@Base+0x164>
   1815e:	movs	r3, #1
   18160:	b.n	1811e <rb_free_nodes@@Base+0x120>
   18162:	bx	lr
   18164:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18168:	mov	r8, r3
   1816a:	ldrd	r6, r3, [sp, #56]	; 0x38
   1816e:	mov	r7, r0
   18170:	mov	fp, r1
   18172:	ldr	r0, [pc, #204]	; (18240 <rb_free_nodes@@Base+0x242>)
   18174:	ldr	r1, [pc, #204]	; (18244 <rb_free_nodes@@Base+0x246>)
   18176:	ldr.w	r4, [r2, r3, lsl #2]
   1817a:	add	r0, pc
   1817c:	add	r1, pc
   1817e:	mov.w	r2, #1624	; 0x658
   18182:	clz	r3, r4
   18186:	str	r1, [sp, #4]
   18188:	ldrd	sl, r9, [sp, #48]	; 0x30
   1818c:	lsrs	r3, r3, #5
   1818e:	bl	18114 <rb_free_nodes@@Base+0x116>
   18192:	ldr.w	r5, [r4, #192]	; 0xc0
   18196:	ldr	r1, [sp, #4]
   18198:	cmp	r5, r6
   1819a:	bge.n	181aa <rb_free_nodes@@Base+0x1ac>
   1819c:	ldr	r0, [pc, #168]	; (18248 <rb_free_nodes@@Base+0x24a>)
   1819e:	movs	r3, #1
   181a0:	movw	r2, #1628	; 0x65c
   181a4:	add	r0, pc
   181a6:	bl	180da <rb_free_nodes@@Base+0xdc>
   181aa:	ldr.w	r3, [fp]
   181ae:	ldr.w	r2, [r3, #384]	; 0x180
   181b2:	ldr	r3, [pc, #136]	; (1823c <rb_free_nodes@@Base+0x23e>)
   181b4:	subs	r2, #101	; 0x65
   181b6:	umull	r2, r3, r2, r3
   181ba:	cmp.w	r5, r3, lsr #3
   181be:	bne.n	181cc <rb_free_nodes@@Base+0x1ce>
   181c0:	ldr	r0, [pc, #136]	; (1824c <rb_free_nodes@@Base+0x24e>)
   181c2:	movs	r3, #1
   181c4:	movw	r2, #1630	; 0x65e
   181c8:	add	r0, pc
   181ca:	b.n	181a6 <rb_free_nodes@@Base+0x1a8>
   181cc:	cmp	r5, r6
   181ce:	add.w	r1, r6, r6, lsl #5
   181d2:	add.w	fp, r1, #101	; 0x65
   181d6:	ble.n	181e8 <rb_free_nodes@@Base+0x1ea>
   181d8:	subs	r3, r5, r6
   181da:	adds	r1, #134	; 0x86
   181dc:	mov	r2, fp
   181de:	mov	r0, r4
   181e0:	add.w	r3, r3, r3, lsl #5
   181e4:	bl	17a8c <memmove_extent_buffer@@Base>
   181e8:	mov	r2, r6
   181ea:	add.w	r6, r4, #96	; 0x60
   181ee:	add	r6, fp
   181f0:	mov	r1, r8
   181f2:	mov	r0, r4
   181f4:	adds	r5, #1
   181f6:	bl	1802e <rb_free_nodes@@Base+0x30>
   181fa:	str.w	sl, [r6, #17]
   181fe:	str.w	r9, [r6, #21]
   18202:	ldrd	r2, r3, [r7]
   18206:	ldr	r1, [pc, #72]	; (18250 <rb_free_nodes@@Base+0x252>)
   18208:	orrs	r3, r2
   1820a:	ldr	r0, [pc, #72]	; (18254 <rb_free_nodes@@Base+0x256>)
   1820c:	add	r1, pc
   1820e:	mov.w	r2, #1640	; 0x668
   18212:	ite	eq
   18214:	moveq	r3, #1
   18216:	movne	r3, #0
   18218:	add	r0, pc
   1821a:	bl	1815c <rb_free_nodes@@Base+0x15e>
   1821e:	ldrd	r2, r3, [r7]
   18222:	mov	r0, r4
   18224:	str.w	r2, [r6, #25]
   18228:	str.w	r3, [r6, #29]
   1822c:	str.w	r5, [r4, #192]	; 0xc0
   18230:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   18234:	movs	r0, #0
   18236:	add	sp, #12
   18238:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1823c:	strh	r1, [r4, #30]
   1823e:	subs	r6, #15
   18240:	mov	ip, r8
   18242:	movs	r2, r0
   18244:	ldr	r5, [pc, #800]	; (18568 <btrfs_release_path@@Base+0x10>)
   18246:	movs	r2, r0
   18248:	ldrb	r1, [r3, r5]
   1824a:	movs	r2, r0
   1824c:	ldrb	r5, [r6, r4]
   1824e:	movs	r2, r0
   18250:	ldr	r5, [pc, #224]	; (18334 <rb_free_nodes@@Base+0x336>)
   18252:	movs	r2, r0
   18254:	mov	r2, r7
   18256:	movs	r2, r0
   18258:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1825c:	mov	r6, r0
   1825e:	mov	r4, r2
   18260:	ldr.w	r0, [r3, #176]	; 0xb0
   18264:	mov	r7, r1
   18266:	mov	r5, r3
   18268:	ldr.w	r1, [r3, #180]	; 0xb4
   1826c:	sub	sp, #20
   1826e:	ldrd	r2, r3, [r6]
   18272:	cmp	r1, r3
   18274:	ldr	r3, [pc, #196]	; (1833c <rb_free_nodes@@Base+0x33e>)
   18276:	it	eq
   18278:	cmpeq	r0, r2
   1827a:	ldr	r0, [pc, #196]	; (18340 <rb_free_nodes@@Base+0x342>)
   1827c:	add	r3, pc
   1827e:	movw	r2, #1494	; 0x5d6
   18282:	add.w	r1, r3, #11
   18286:	add	r0, pc
   18288:	ite	ne
   1828a:	movne	r3, #1
   1828c:	moveq	r3, #0
   1828e:	str	r1, [sp, #12]
   18290:	bl	1815c <rb_free_nodes@@Base+0x15e>
   18294:	ldr.w	r3, [r4, #180]	; 0xb4
   18298:	ldrd	r8, r9, [r6]
   1829c:	ldr.w	r2, [r4, #176]	; 0xb0
   182a0:	cmp	r3, r9
   182a2:	ldr	r0, [pc, #160]	; (18344 <rb_free_nodes@@Base+0x346>)
   182a4:	it	eq
   182a6:	cmpeq	r2, r8
   182a8:	ldr	r1, [sp, #12]
   182aa:	movw	r2, #1495	; 0x5d7
   182ae:	add	r0, pc
   182b0:	ite	ne
   182b2:	movne	r3, #1
   182b4:	moveq	r3, #0
   182b6:	bl	1815c <rb_free_nodes@@Base+0x15e>
   182ba:	ldr	r3, [r7, #0]
   182bc:	ldr.w	r8, [r4, #192]	; 0xc0
   182c0:	ldr.w	r2, [r3, #384]	; 0x180
   182c4:	ldr	r3, [pc, #112]	; (18338 <rb_free_nodes@@Base+0x33a>)
   182c6:	subs	r2, #101	; 0x65
   182c8:	umull	r2, r3, r2, r3
   182cc:	rsb	r7, r8, r3, lsr #3
   182d0:	cmp	r7, #0
   182d2:	ble.n	18334 <rb_free_nodes@@Base+0x336>
   182d4:	ldr.w	r6, [r5, #192]	; 0xc0
   182d8:	cmp	r6, #3
   182da:	ble.n	18334 <rb_free_nodes@@Base+0x336>
   182dc:	asrs	r3, r6, #1
   182de:	adds	r3, #1
   182e0:	cmp	r6, r3
   182e2:	ble.n	18334 <rb_free_nodes@@Base+0x336>
   182e4:	cmp	r7, r3
   182e6:	mov.w	r2, #101	; 0x65
   182ea:	mov	r0, r4
   182ec:	it	ge
   182ee:	movge	r7, r3
   182f0:	subs	r6, r6, r7
   182f2:	add.w	r9, r7, r7, lsl #5
   182f6:	add.w	r3, r8, r8, lsl #5
   182fa:	add.w	r1, r9, r2
   182fe:	add	r7, r8
   18300:	bl	17a8c <memmove_extent_buffer@@Base>
   18304:	add.w	r3, r6, r6, lsl #5
   18308:	adds	r3, #101	; 0x65
   1830a:	movs	r2, #101	; 0x65
   1830c:	mov	r1, r5
   1830e:	mov	r0, r4
   18310:	str.w	r9, [sp]
   18314:	bl	17a42 <copy_extent_buffer@@Base>
   18318:	mov	r0, r5
   1831a:	str.w	r6, [r5, #192]	; 0xc0
   1831e:	str.w	r7, [r4, #192]	; 0xc0
   18322:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   18326:	mov	r0, r4
   18328:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   1832c:	movs	r0, #0
   1832e:	add	sp, #20
   18330:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   18334:	movs	r0, #1
   18336:	b.n	1832e <rb_free_nodes@@Base+0x330>
   18338:	strh	r1, [r4, #30]
   1833a:	subs	r6, #15
   1833c:	ldr	r4, [pc, #800]	; (18660 <add_root_to_dirty_list@@Base+0xcc>)
   1833e:	movs	r2, r0
   18340:	cmp	r8, ip
   18342:	movs	r2, r0
   18344:	cmp	pc, ip
   18346:	movs	r2, r0
   18348:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1834c:	mov	r5, r2
   1834e:	ldr.w	r9, [r2, #192]	; 0xc0
   18352:	mov	r4, r3
   18354:	ldr.w	r2, [r1, #384]	; 0x180
   18358:	mov	sl, r0
   1835a:	ldr.w	r6, [r3, #192]	; 0xc0
   1835e:	sub	sp, #20
   18360:	ldr	r3, [pc, #236]	; (18450 <rb_free_nodes@@Base+0x452>)
   18362:	subs	r2, #101	; 0x65
   18364:	ldr.w	r1, [r4, #180]	; 0xb4
   18368:	ldr.w	r0, [r4, #176]	; 0xb0
   1836c:	umull	r2, r3, r2, r3
   18370:	ldr	r7, [sp, #56]	; 0x38
   18372:	rsb	r8, r9, r3, lsr #3
   18376:	ldrd	r2, r3, [sl]
   1837a:	cmp	r1, r3
   1837c:	ldr	r1, [pc, #212]	; (18454 <rb_free_nodes@@Base+0x456>)
   1837e:	it	eq
   18380:	cmpeq	r0, r2
   18382:	ldr	r0, [pc, #212]	; (18458 <rb_free_nodes@@Base+0x45a>)
   18384:	add	r1, pc
   18386:	movw	r2, #1430	; 0x596
   1838a:	ite	ne
   1838c:	movne	r3, #1
   1838e:	moveq	r3, #0
   18390:	adds	r1, #30
   18392:	add	r0, pc
   18394:	str	r1, [sp, #12]
   18396:	bl	1815c <rb_free_nodes@@Base+0x15e>
   1839a:	ldrd	r2, r3, [sl]
   1839e:	ldr.w	ip, [r5, #180]	; 0xb4
   183a2:	ldr.w	fp, [r5, #176]	; 0xb0
   183a6:	cmp	ip, r3
   183a8:	ldr	r0, [pc, #176]	; (1845c <rb_free_nodes@@Base+0x45e>)
   183aa:	it	eq
   183ac:	cmpeq	fp, r2
   183ae:	ldr	r1, [sp, #12]
   183b0:	add	r0, pc
   183b2:	movw	r2, #1431	; 0x597
   183b6:	ite	ne
   183b8:	movne	r3, #1
   183ba:	moveq	r3, #0
   183bc:	bl	1815c <rb_free_nodes@@Base+0x15e>
   183c0:	cbnz	r7, 183dc <rb_free_nodes@@Base+0x3de>
   183c2:	cmp	r6, #8
   183c4:	bgt.n	183ca <rb_free_nodes@@Base+0x3cc>
   183c6:	movs	r7, #1
   183c8:	b.n	18446 <rb_free_nodes@@Base+0x448>
   183ca:	cmp.w	r8, #0
   183ce:	ble.n	183c6 <rb_free_nodes@@Base+0x3c8>
   183d0:	sub.w	r3, r6, #8
   183d4:	cmp	r8, r3
   183d6:	it	ge
   183d8:	movge	r8, r3
   183da:	b.n	183fe <rb_free_nodes@@Base+0x400>
   183dc:	cmp.w	r8, #0
   183e0:	ble.n	18446 <rb_free_nodes@@Base+0x448>
   183e2:	cmp	r8, r6
   183e4:	it	ge
   183e6:	movge	r8, r6
   183e8:	cmp	r6, r8
   183ea:	ble.n	183fe <rb_free_nodes@@Base+0x400>
   183ec:	sub.w	r3, r6, r8
   183f0:	cmp	r3, #7
   183f2:	bgt.n	183fe <rb_free_nodes@@Base+0x400>
   183f4:	cmp.w	r8, #8
   183f8:	ble.n	18446 <rb_free_nodes@@Base+0x448>
   183fa:	sub.w	r8, r8, #8
   183fe:	add.w	r2, r9, r9, lsl #5
   18402:	movs	r3, #101	; 0x65
   18404:	add.w	sl, r8, r8, lsl #5
   18408:	add	r2, r3
   1840a:	mov	r1, r4
   1840c:	mov	r0, r5
   1840e:	str.w	sl, [sp]
   18412:	sub.w	r7, r6, r8
   18416:	bl	17a42 <copy_extent_buffer@@Base>
   1841a:	cmp	r6, r8
   1841c:	ble.n	1842e <rb_free_nodes@@Base+0x430>
   1841e:	add.w	r3, r7, r7, lsl #5
   18422:	add.w	r2, sl, #101	; 0x65
   18426:	movs	r1, #101	; 0x65
   18428:	mov	r0, r4
   1842a:	bl	17a8c <memmove_extent_buffer@@Base>
   1842e:	str.w	r7, [r4, #192]	; 0xc0
   18432:	mov	r0, r4
   18434:	add	r8, r9
   18436:	str.w	r8, [r5, #192]	; 0xc0
   1843a:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   1843e:	mov	r0, r5
   18440:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   18444:	movs	r7, #0
   18446:	mov	r0, r7
   18448:	add	sp, #20
   1844a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1844e:	nop
   18450:	strh	r1, [r4, #30]
   18452:	subs	r6, #15
   18454:	ldr	r3, [pc, #768]	; (18758 <add_root_to_dirty_list@@Base+0x1c4>)
   18456:	movs	r2, r0
   18458:	add	ip, sl
   1845a:	movs	r2, r0
   1845c:	add	sp, ip
   1845e:	movs	r2, r0
   18460:	push	{r3, r4, r5, r6, r7, lr}
   18462:	mov	r6, r0
   18464:	mov	r4, r1
   18466:	mov	r5, r2
   18468:	cbz	r2, 184a4 <rb_free_nodes@@Base+0x4a6>
   1846a:	bl	1801c <rb_free_nodes@@Base+0x1e>
   1846e:	ldr.w	r3, [r6, #192]	; 0xc0
   18472:	mov.w	ip, #25
   18476:	ldr	r1, [pc, #48]	; (184a8 <rb_free_nodes@@Base+0x4aa>)
   18478:	add	r1, pc
   1847a:	adds	r1, #45	; 0x2d
   1847c:	mul.w	r7, ip, r2
   18480:	adds	r2, r4, r2
   18482:	cmp	r2, r3
   18484:	it	ge
   18486:	movge	r2, r3
   18488:	subs	r2, #1
   1848a:	mla	r3, ip, r2, r6
   1848e:	ldr.w	r2, [r3, #214]	; 0xd6
   18492:	subs	r2, r7, r2
   18494:	adds	r5, r2, r0
   18496:	ldr	r0, [pc, #20]	; (184ac <rb_free_nodes@@Base+0x4ae>)
   18498:	mov.w	r2, #1752	; 0x6d8
   1849c:	lsrs	r3, r5, #31
   1849e:	add	r0, pc
   184a0:	bl	1815c <rb_free_nodes@@Base+0x15e>
   184a4:	mov	r0, r5
   184a6:	pop	{r3, r4, r5, r6, r7, pc}
   184a8:	ldr	r2, [pc, #816]	; (187dc <btrfs_copy_root@@Base+0x1c>)
   184aa:	movs	r2, r0
   184ac:	add	r6, r4
   184ae:	movs	r2, r0
   184b0:	push	{r4, lr}
   184b2:	mov	r4, r1
   184b4:	ldr	r1, [pc, #76]	; (18504 <rb_free_nodes@@Base+0x506>)
   184b6:	sub	sp, #24
   184b8:	ldr	r3, [pc, #76]	; (18508 <rb_free_nodes@@Base+0x50a>)
   184ba:	add	r1, pc
   184bc:	ldr	r3, [r1, r3]
   184be:	mov	r1, sp
   184c0:	ldr	r3, [r3, #0]
   184c2:	str	r3, [sp, #20]
   184c4:	mov.w	r3, #0
   184c8:	bl	18046 <rb_free_nodes@@Base+0x48>
   184cc:	ldr.w	r3, [sp, #13]
   184d0:	ldr.w	r2, [sp, #9]
   184d4:	str.w	r3, [r4, #13]
   184d8:	ldrb.w	r3, [sp, #8]
   184dc:	str.w	r2, [r4, #9]
   184e0:	ldr	r2, [pc, #40]	; (1850c <rb_free_nodes@@Base+0x50e>)
   184e2:	strb	r3, [r4, #8]
   184e4:	ldr	r3, [sp, #0]
   184e6:	add	r2, pc
   184e8:	str	r3, [r4, #0]
   184ea:	ldr	r3, [sp, #4]
   184ec:	str	r3, [r4, #4]
   184ee:	ldr	r3, [pc, #24]	; (18508 <rb_free_nodes@@Base+0x50a>)
   184f0:	ldr	r3, [r2, r3]
   184f2:	ldr	r2, [r3, #0]
   184f4:	ldr	r3, [sp, #20]
   184f6:	eors	r2, r3
   184f8:	beq.n	184fe <rb_free_nodes@@Base+0x500>
   184fa:	blx	8708 <__stack_chk_fail@plt>
   184fe:	add	sp, #24
   18500:	pop	{r4, pc}
   18502:	nop
   18504:	ldmia	r0!, {r1, r2, r6, r7}
   18506:	movs	r4, r0
   18508:	lsls	r0, r5, #8
   1850a:	movs	r0, r0
   1850c:	ldmia	r0!, {r1, r3, r4, r7}
   1850e:	movs	r4, r0

00018510 <btrfs_super_csum_size@@Base>:
   18510:	ldrh.w	r2, [r0, #196]	; 0xc4
   18514:	ldr	r3, [pc, #8]	; (18520 <btrfs_super_csum_size@@Base+0x10>)
   18516:	add	r3, pc
   18518:	add.w	r3, r3, r2, lsl #4
   1851c:	ldrh	r0, [r3, #62]	; 0x3e
   1851e:	bx	lr
   18520:	ldr	r2, [pc, #184]	; (185dc <add_root_to_dirty_list@@Base+0x48>)
   18522:	movs	r2, r0

00018524 <btrfs_super_csum_name@@Base>:
   18524:	ldr	r3, [pc, #8]	; (18530 <btrfs_super_csum_name@@Base+0xc>)
   18526:	add	r3, pc
   18528:	add.w	r0, r3, r0, lsl #4
   1852c:	adds	r0, #64	; 0x40
   1852e:	bx	lr
   18530:	ldr	r2, [pc, #120]	; (185ac <add_root_to_dirty_list@@Base+0x18>)
   18532:	movs	r2, r0

00018534 <btrfs_super_num_csums@@Base>:
   18534:	movs	r0, #4
   18536:	bx	lr

00018538 <btrfs_csum_type_size@@Base>:
   18538:	ldr	r3, [pc, #8]	; (18544 <btrfs_csum_type_size@@Base+0xc>)
   1853a:	add	r3, pc
   1853c:	add.w	r0, r3, r0, lsl #4
   18540:	ldrh	r0, [r0, #62]	; 0x3e
   18542:	bx	lr
   18544:	ldr	r2, [pc, #40]	; (18570 <btrfs_release_path@@Base+0x18>)
   18546:	movs	r2, r0

00018548 <btrfs_init_path@@Base>:
   18548:	movs	r2, #68	; 0x44
   1854a:	movs	r1, #0
   1854c:	b.w	89b8 <memset@plt>

00018550 <btrfs_alloc_path@@Base>:
   18550:	movs	r1, #68	; 0x44
   18552:	movs	r0, #1
   18554:	b.w	8584 <calloc@plt>

00018558 <btrfs_release_path@@Base>:
   18558:	push	{r4, r5, r6, lr}
   1855a:	subs	r5, r0, #4
   1855c:	add.w	r6, r0, #28
   18560:	mov	r4, r0
   18562:	ldr.w	r0, [r5, #4]!
   18566:	cbz	r0, 1856c <btrfs_release_path@@Base+0x14>
   18568:	bl	17320 <free_extent_buffer@@Base>
   1856c:	cmp	r5, r6
   1856e:	bne.n	18562 <btrfs_release_path@@Base+0xa>
   18570:	mov	r0, r4
   18572:	movs	r2, #68	; 0x44
   18574:	ldmia.w	sp!, {r4, r5, r6, lr}
   18578:	movs	r1, #0
   1857a:	b.w	89b8 <memset@plt>

0001857e <btrfs_free_path@@Base>:
   1857e:	push	{r4, lr}
   18580:	mov	r4, r0
   18582:	cbz	r0, 18592 <btrfs_free_path@@Base+0x14>
   18584:	bl	18558 <btrfs_release_path@@Base>
   18588:	mov	r0, r4
   1858a:	ldmia.w	sp!, {r4, lr}
   1858e:	b.w	861c <free@plt>
   18592:	pop	{r4, pc}

00018594 <add_root_to_dirty_list@@Base>:
   18594:	ldr.w	r3, [r0, #492]	; 0x1ec
   18598:	cbz	r3, 185c0 <add_root_to_dirty_list@@Base+0x2c>
   1859a:	ldr.w	r3, [r0, #520]	; 0x208
   1859e:	add.w	r2, r0, #520	; 0x208
   185a2:	cmp	r2, r3
   185a4:	bne.n	185c0 <add_root_to_dirty_list@@Base+0x2c>
   185a6:	ldr.w	r3, [r0, #464]	; 0x1d0
   185aa:	ldr.w	r1, [r3, #336]	; 0x150
   185ae:	str	r2, [r1, #4]
   185b0:	str.w	r1, [r0, #520]	; 0x208
   185b4:	add.w	r1, r3, #336	; 0x150
   185b8:	str.w	r1, [r0, #524]	; 0x20c
   185bc:	str.w	r2, [r3, #336]	; 0x150
   185c0:	bx	lr
   185c2:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   185c6:	sub	sp, #76	; 0x4c
   185c8:	mov	r7, r3
   185ca:	ldr	r3, [pc, #468]	; (187a0 <add_root_to_dirty_list@@Base+0x20c>)
   185cc:	str	r2, [sp, #36]	; 0x24
   185ce:	mov	r5, r1
   185d0:	ldr	r2, [pc, #464]	; (187a4 <add_root_to_dirty_list@@Base+0x210>)
   185d2:	mov	fp, r0
   185d4:	ldr	r1, [pc, #464]	; (187a8 <add_root_to_dirty_list@@Base+0x214>)
   185d6:	add.w	r8, sp, #48	; 0x30
   185da:	add	r2, pc
   185dc:	ldr	r0, [pc, #460]	; (187ac <add_root_to_dirty_list@@Base+0x218>)
   185de:	add	r1, pc
   185e0:	ldr	r3, [r2, r3]
   185e2:	adds	r1, #126	; 0x7e
   185e4:	add	r0, pc
   185e6:	movw	r2, #1553	; 0x611
   185ea:	ldr	r3, [r3, #0]
   185ec:	str	r3, [sp, #68]	; 0x44
   185ee:	mov.w	r3, #0
   185f2:	ldr	r3, [sp, #36]	; 0x24
   185f4:	str	r1, [sp, #44]	; 0x2c
   185f6:	add.w	r3, r3, r7, lsl #2
   185fa:	str	r3, [sp, #40]	; 0x28
   185fc:	ldr	r3, [sp, #36]	; 0x24
   185fe:	ldr.w	r3, [r3, r7, lsl #2]
   18602:	bl	18114 <rb_free_nodes@@Base+0x116>
   18606:	ldr	r3, [sp, #40]	; 0x28
   18608:	ldr	r0, [pc, #420]	; (187b0 <add_root_to_dirty_list@@Base+0x21c>)
   1860a:	movw	r2, #1554	; 0x612
   1860e:	ldr	r1, [sp, #44]	; 0x2c
   18610:	ldr.w	sl, [r3, #-4]
   18614:	add	r0, pc
   18616:	ldr	r3, [r5, #0]
   18618:	subs.w	r3, r3, sl
   1861c:	it	ne
   1861e:	movne	r3, #1
   18620:	bl	18114 <rb_free_nodes@@Base+0x116>
   18624:	cmp	r7, #1
   18626:	mov.w	r2, #0
   1862a:	mov	r1, r8
   1862c:	mov	r0, sl
   1862e:	bne.n	18684 <add_root_to_dirty_list@@Base+0xf0>
   18630:	bl	18046 <rb_free_nodes@@Base+0x48>
   18634:	movs	r2, #0
   18636:	movs	r3, #0
   18638:	strd	r2, r3, [sp, #24]
   1863c:	mov	r0, fp
   1863e:	ldr	r3, [r5, #0]
   18640:	ldr.w	r1, [r5, #464]	; 0x1d0
   18644:	ldrd	r2, r3, [r3, #40]	; 0x28
   18648:	strd	r8, r7, [sp, #8]
   1864c:	strd	r2, r3, [sp, #16]
   18650:	ldr.w	r2, [r5, #447]	; 0x1bf
   18654:	ldr.w	r3, [r5, #451]	; 0x1c3
   18658:	strd	r2, r3, [sp]
   1865c:	ldr.w	r2, [r1, #384]	; 0x180
   18660:	mov	r1, r5
   18662:	bl	23164 <btrfs_alloc_free_block@@Base>
   18666:	cmn.w	r0, #4096	; 0x1000
   1866a:	mov	r4, r0
   1866c:	bls.n	1868a <add_root_to_dirty_list@@Base+0xf6>
   1866e:	ldr	r2, [pc, #324]	; (187b4 <add_root_to_dirty_list@@Base+0x220>)
   18670:	ldr	r3, [pc, #300]	; (187a0 <add_root_to_dirty_list@@Base+0x20c>)
   18672:	add	r2, pc
   18674:	ldr	r3, [r2, r3]
   18676:	ldr	r2, [r3, #0]
   18678:	ldr	r3, [sp, #68]	; 0x44
   1867a:	eors	r2, r3
   1867c:	beq.w	18798 <add_root_to_dirty_list@@Base+0x204>
   18680:	blx	8708 <__stack_chk_fail@plt>
   18684:	bl	18052 <rb_free_nodes@@Base+0x54>
   18688:	b.n	18634 <add_root_to_dirty_list@@Base+0xa0>
   1868a:	movs	r2, #0
   1868c:	movs	r3, #101	; 0x65
   1868e:	mov	r1, r2
   18690:	movs	r6, #0
   18692:	bl	17aa2 <memset_extent_buffer@@Base>
   18696:	movs	r3, #1
   18698:	strb.w	r3, [r4, #192]	; 0xc0
   1869c:	ldr	r3, [r4, #40]	; 0x28
   1869e:	strb.w	r6, [r4, #193]	; 0xc1
   186a2:	strb.w	r6, [r4, #194]	; 0xc2
   186a6:	str.w	r3, [r4, #144]	; 0x90
   186aa:	ldr	r3, [r4, #44]	; 0x2c
   186ac:	strb.w	r6, [r4, #195]	; 0xc3
   186b0:	strb.w	r7, [r4, #196]	; 0xc4
   186b4:	str.w	r3, [r4, #148]	; 0x94
   186b8:	ldrd	r2, r3, [fp, #8]
   186bc:	str.w	r2, [r4, #176]	; 0xb0
   186c0:	str.w	r3, [r4, #180]	; 0xb4
   186c4:	ldr.w	r2, [r4, #152]	; 0x98
   186c8:	ldr.w	r3, [r4, #156]	; 0x9c
   186cc:	bic.w	r3, r3, #4278190080	; 0xff000000
   186d0:	str.w	r2, [r4, #152]	; 0x98
   186d4:	orr.w	r3, r3, #16777216	; 0x1000000
   186d8:	str.w	r3, [r4, #156]	; 0x9c
   186dc:	ldr.w	r2, [r5, #447]	; 0x1bf
   186e0:	ldr.w	r3, [r5, #451]	; 0x1c3
   186e4:	str.w	r2, [r4, #184]	; 0xb8
   186e8:	str.w	r3, [r4, #188]	; 0xbc
   186ec:	ldr.w	r0, [r5, #464]	; 0x1d0
   186f0:	ldr.w	r2, [r5, #200]	; 0xc8
   186f4:	ldr.w	r3, [r5, #204]	; 0xcc
   186f8:	ldr.w	r1, [r0, #384]	; 0x180
   186fc:	adds	r2, r2, r1
   186fe:	str.w	r2, [r5, #200]	; 0xc8
   18702:	adc.w	r3, r3, #0
   18706:	str.w	r3, [r5, #204]	; 0xcc
   1870a:	ldr.w	r1, [r0, #352]	; 0x160
   1870e:	movs	r3, #16
   18710:	movs	r2, #32
   18712:	mov	r0, r4
   18714:	add	r1, r3
   18716:	bl	17a30 <write_extent_buffer@@Base>
   1871a:	movs	r3, #16
   1871c:	ldr.w	r1, [r5, #464]	; 0x1d0
   18720:	movs	r2, #64	; 0x40
   18722:	mov	r0, r4
   18724:	bl	17a30 <write_extent_buffer@@Base>
   18728:	mov	r1, r8
   1872a:	mov	r2, r6
   1872c:	mov	r0, r4
   1872e:	bl	1802e <rb_free_nodes@@Base+0x30>
   18732:	ldrd	r2, r3, [sl, #40]	; 0x28
   18736:	ldr	r1, [pc, #128]	; (187b8 <add_root_to_dirty_list@@Base+0x224>)
   18738:	ldr	r0, [pc, #128]	; (187bc <add_root_to_dirty_list@@Base+0x228>)
   1873a:	str.w	r2, [r4, #214]	; 0xd6
   1873e:	add	r1, pc
   18740:	str.w	r3, [r4, #218]	; 0xda
   18744:	adds	r1, #126	; 0x7e
   18746:	ldrd	r2, r3, [fp, #8]
   1874a:	add	r0, pc
   1874c:	ldr.w	r9, [sl, #180]	; 0xb4
   18750:	ldr.w	r8, [sl, #176]	; 0xb0
   18754:	cmp	r3, r9
   18756:	it	eq
   18758:	cmpeq	r2, r8
   1875a:	movw	r2, #1589	; 0x635
   1875e:	ite	ne
   18760:	movne	r3, #1
   18762:	moveq	r3, r6
   18764:	bl	1815c <rb_free_nodes@@Base+0x15e>
   18768:	mov	r0, r4
   1876a:	str.w	r8, [r4, #222]	; 0xde
   1876e:	str.w	r9, [r4, #226]	; 0xe2
   18772:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   18776:	ldr	r0, [r5, #0]
   18778:	str	r4, [r5, #0]
   1877a:	bl	17320 <free_extent_buffer@@Base>
   1877e:	mov	r0, r5
   18780:	bl	18594 <add_root_to_dirty_list@@Base>
   18784:	ldr	r3, [r4, #80]	; 0x50
   18786:	mov	r0, r6
   18788:	adds	r3, #1
   1878a:	str	r3, [r4, #80]	; 0x50
   1878c:	ldr	r3, [sp, #36]	; 0x24
   1878e:	str.w	r4, [r3, r7, lsl #2]
   18792:	ldr	r3, [sp, #40]	; 0x28
   18794:	str	r6, [r3, #32]
   18796:	b.n	1866e <add_root_to_dirty_list@@Base+0xda>
   18798:	add	sp, #76	; 0x4c
   1879a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1879e:	nop
   187a0:	lsls	r0, r5, #8
   187a2:	movs	r0, r0
   187a4:	stmia	r7!, {r1, r2, r5, r7}
   187a6:	movs	r4, r0
   187a8:	ldr	r1, [pc, #408]	; (18944 <btrfs_copy_root@@Base+0x184>)
   187aa:	movs	r2, r0
   187ac:	negs	r3, r3
   187ae:	movs	r2, r0
   187b0:	cmp	r5, r7
   187b2:	movs	r2, r0
   187b4:	stmia	r7!, {r1, r2, r3}
   187b6:	movs	r4, r0
   187b8:	ldr	r0, [pc, #24]	; (187d4 <btrfs_copy_root@@Base+0x14>)
   187ba:	movs	r2, r0
   187bc:	sbcs	r2, r5
   187be:	movs	r2, r0

000187c0 <btrfs_copy_root@@Base>:
   187c0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   187c4:	sub	sp, #68	; 0x44
   187c6:	mov	r4, r2
   187c8:	ldr	r2, [pc, #460]	; (18998 <btrfs_copy_root@@Base+0x1d8>)
   187ca:	str	r3, [sp, #36]	; 0x24
   187cc:	mov	r8, r0
   187ce:	ldr	r3, [pc, #460]	; (1899c <btrfs_copy_root@@Base+0x1dc>)
   187d0:	add	r2, pc
   187d2:	mov.w	r0, #544	; 0x220
   187d6:	ldrd	sl, fp, [sp, #104]	; 0x68
   187da:	mov	r9, r1
   187dc:	ldr	r3, [r2, r3]
   187de:	ldr	r3, [r3, #0]
   187e0:	str	r3, [sp, #60]	; 0x3c
   187e2:	mov.w	r3, #0
   187e6:	blx	8870 <malloc@plt+0x4>
   187ea:	mov	r5, r0
   187ec:	cmp	r0, #0
   187ee:	beq.w	1898a <btrfs_copy_root@@Base+0x1ca>
   187f2:	mov.w	r2, #544	; 0x220
   187f6:	mov	r1, r9
   187f8:	blx	866c <memcpy@plt+0x4>
   187fc:	ldr.w	r3, [r9, #488]	; 0x1e8
   18800:	str.w	sl, [r5, #447]	; 0x1bf
   18804:	str.w	fp, [r5, #451]	; 0x1c3
   18808:	cbz	r3, 18824 <btrfs_copy_root@@Base+0x64>
   1880a:	ldr.w	r3, [r9, #464]	; 0x1d0
   1880e:	ldr.w	r3, [r3, #304]	; 0x130
   18812:	ldrd	r0, r1, [r3, #8]
   18816:	ldrd	r2, r3, [r8, #8]
   1881a:	cmp	r1, r3
   1881c:	itet	eq
   1881e:	cmpeq	r0, r2
   18820:	movne	r3, #1
   18822:	moveq	r3, #0
   18824:	ldr	r1, [pc, #376]	; (189a0 <btrfs_copy_root@@Base+0x1e0>)
   18826:	movs	r2, #142	; 0x8e
   18828:	ldr	r0, [pc, #376]	; (189a4 <btrfs_copy_root@@Base+0x1e4>)
   1882a:	add	r1, pc
   1882c:	add	r1, r2
   1882e:	add	r0, pc
   18830:	bl	1815c <rb_free_nodes@@Base+0x15e>
   18834:	ldr.w	r3, [r9, #488]	; 0x1e8
   18838:	cbz	r3, 1884c <btrfs_copy_root@@Base+0x8c>
   1883a:	ldrd	r2, r3, [r9, #480]	; 0x1e0
   1883e:	ldrd	r6, r7, [r8, #8]
   18842:	cmp	r7, r3
   18844:	itet	eq
   18846:	cmpeq	r6, r2
   18848:	movne	r3, #1
   1884a:	moveq	r3, #0
   1884c:	ldr	r1, [pc, #344]	; (189a8 <btrfs_copy_root@@Base+0x1e8>)
   1884e:	movs	r2, #144	; 0x90
   18850:	ldr	r0, [pc, #344]	; (189ac <btrfs_copy_root@@Base+0x1ec>)
   18852:	add	r7, sp, #40	; 0x28
   18854:	add	r1, pc
   18856:	adds	r1, #142	; 0x8e
   18858:	add	r0, pc
   1885a:	bl	1815c <rb_free_nodes@@Base+0x15e>
   1885e:	ldrb.w	r6, [r4, #196]	; 0xc4
   18862:	cbnz	r6, 188b4 <btrfs_copy_root@@Base+0xf4>
   18864:	mov	r2, r6
   18866:	mov	r1, r7
   18868:	mov	r0, r4
   1886a:	bl	18046 <rb_free_nodes@@Base+0x48>
   1886e:	movs	r2, #0
   18870:	movs	r3, #0
   18872:	strd	r2, r3, [sp, #24]
   18876:	mov	r1, r5
   18878:	ldrd	r2, r3, [r4, #40]	; 0x28
   1887c:	mov	r0, r8
   1887e:	strd	r7, r6, [sp, #8]
   18882:	strd	sl, fp, [sp]
   18886:	strd	r2, r3, [sp, #16]
   1888a:	ldr	r2, [r4, #76]	; 0x4c
   1888c:	bl	23164 <btrfs_alloc_free_block@@Base>
   18890:	cmn.w	r0, #4096	; 0x1000
   18894:	mov	r6, r0
   18896:	bls.n	188c0 <btrfs_copy_root@@Base+0x100>
   18898:	mov	r0, r5
   1889a:	mov	r4, r6
   1889c:	blx	8620 <free@plt+0x4>
   188a0:	ldr	r2, [pc, #268]	; (189b0 <btrfs_copy_root@@Base+0x1f0>)
   188a2:	ldr	r3, [pc, #248]	; (1899c <btrfs_copy_root@@Base+0x1dc>)
   188a4:	add	r2, pc
   188a6:	ldr	r3, [r2, r3]
   188a8:	ldr	r2, [r3, #0]
   188aa:	ldr	r3, [sp, #60]	; 0x3c
   188ac:	eors	r2, r3
   188ae:	beq.n	18990 <btrfs_copy_root@@Base+0x1d0>
   188b0:	blx	8708 <__stack_chk_fail@plt>
   188b4:	movs	r2, #0
   188b6:	mov	r1, r7
   188b8:	mov	r0, r4
   188ba:	bl	18052 <rb_free_nodes@@Base+0x54>
   188be:	b.n	1886e <btrfs_copy_root@@Base+0xae>
   188c0:	ldr	r3, [r0, #76]	; 0x4c
   188c2:	mov	r1, r4
   188c4:	str	r3, [sp, #0]
   188c6:	movs	r3, #0
   188c8:	mov	r2, r3
   188ca:	bl	17a42 <copy_extent_buffer@@Base>
   188ce:	ldr	r3, [r6, #40]	; 0x28
   188d0:	mov.w	r1, #4294967295	; 0xffffffff
   188d4:	cmp	fp, r1
   188d6:	mvn.w	r0, #7
   188da:	it	eq
   188dc:	cmpeq	sl, r0
   188de:	str.w	r3, [r6, #144]	; 0x90
   188e2:	mov	r0, r6
   188e4:	ldr	r3, [r6, #44]	; 0x2c
   188e6:	str.w	r3, [r6, #148]	; 0x94
   188ea:	ldrd	r2, r3, [r8, #8]
   188ee:	itt	ne
   188f0:	strne.w	sl, [r6, #184]	; 0xb8
   188f4:	strne.w	fp, [r6, #188]	; 0xbc
   188f8:	str.w	r2, [r6, #176]	; 0xb0
   188fc:	str.w	r3, [r6, #180]	; 0xb4
   18900:	ldr.w	r2, [r6, #156]	; 0x9c
   18904:	ldr.w	r3, [r6, #152]	; 0x98
   18908:	bic.w	r2, r2, #4278190080	; 0xff000000
   1890c:	bic.w	r3, r3, #3
   18910:	orr.w	r2, r2, #16777216	; 0x1000000
   18914:	str.w	r3, [r6, #152]	; 0x98
   18918:	it	eq
   1891a:	orreq.w	r3, r3, #2
   1891e:	str.w	r2, [r6, #156]	; 0x9c
   18922:	mov.w	r2, #32
   18926:	it	eq
   18928:	streq.w	r3, [r6, #152]	; 0x98
   1892c:	ldr.w	r3, [r9, #464]	; 0x1d0
   18930:	ldr.w	r1, [r3, #352]	; 0x160
   18934:	movs	r3, #16
   18936:	add	r1, r3
   18938:	bl	17a30 <write_extent_buffer@@Base>
   1893c:	ldrd	r2, r3, [r8, #8]
   18940:	ldr.w	r1, [r4, #180]	; 0xb4
   18944:	ldr.w	r0, [r4, #176]	; 0xb0
   18948:	cmp	r3, r1
   1894a:	ldr	r1, [pc, #104]	; (189b4 <btrfs_copy_root@@Base+0x1f4>)
   1894c:	it	eq
   1894e:	cmpeq	r2, r0
   18950:	ldr	r0, [pc, #100]	; (189b8 <btrfs_copy_root@@Base+0x1f8>)
   18952:	add	r1, pc
   18954:	mov.w	r2, #173	; 0xad
   18958:	ite	cc
   1895a:	movcc	r3, #1
   1895c:	movcs	r3, #0
   1895e:	adds	r1, #142	; 0x8e
   18960:	add	r0, pc
   18962:	bl	1815c <rb_free_nodes@@Base+0x15e>
   18966:	movs	r3, #0
   18968:	mov	r2, r6
   1896a:	mov	r1, r5
   1896c:	mov	r0, r8
   1896e:	bl	21020 <btrfs_inc_ref@@Base>
   18972:	mov	r4, r0
   18974:	mov	r0, r5
   18976:	blx	8620 <free@plt+0x4>
   1897a:	cmp	r4, #0
   1897c:	bne.n	188a0 <btrfs_copy_root@@Base+0xe0>
   1897e:	mov	r0, r6
   18980:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   18984:	ldr	r3, [sp, #36]	; 0x24
   18986:	str	r6, [r3, #0]
   18988:	b.n	188a0 <btrfs_copy_root@@Base+0xe0>
   1898a:	mvn.w	r4, #11
   1898e:	b.n	188a0 <btrfs_copy_root@@Base+0xe0>
   18990:	mov	r0, r4
   18992:	add	sp, #68	; 0x44
   18994:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18998:	stmia	r5!, {r4, r5, r7}
   1899a:	movs	r4, r0
   1899c:	lsls	r0, r5, #8
   1899e:	movs	r0, r0
   189a0:	bx	r3
   189a2:	movs	r2, r0
   189a4:	lsrs	r2, r4
   189a6:	movs	r2, r0
   189a8:	mov	r8, lr
   189aa:	movs	r2, r0
   189ac:	asrs	r0, r1
   189ae:	movs	r2, r0
   189b0:	stmia	r4!, {r2, r3, r4, r6, r7}
   189b2:	movs	r4, r0
   189b4:	cmp	sl, lr
   189b6:	movs	r2, r0
   189b8:	eors	r3, r3
   189ba:	movs	r2, r0

000189bc <__btrfs_cow_block@@Base>:
   189bc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   189c0:	sub	sp, #100	; 0x64
   189c2:	mov	r5, r2
   189c4:	ldr.w	r2, [pc, #1368]	; 18f20 <__btrfs_cow_block@@Base+0x564>
   189c8:	str	r3, [sp, #48]	; 0x30
   189ca:	mov	sl, r0
   189cc:	ldrd	fp, r3, [sp, #136]	; 0x88
   189d0:	add	r2, pc
   189d2:	mov	r4, r1
   189d4:	str	r3, [sp, #52]	; 0x34
   189d6:	ldr.w	r3, [pc, #1356]	; 18f24 <__btrfs_cow_block@@Base+0x568>
   189da:	ldr	r3, [r2, r3]
   189dc:	ldr	r3, [r3, #0]
   189de:	str	r3, [sp, #92]	; 0x5c
   189e0:	mov.w	r3, #0
   189e4:	ldr.w	r3, [r1, #488]	; 0x1e8
   189e8:	cbz	r3, 18a04 <__btrfs_cow_block@@Base+0x48>
   189ea:	ldr.w	r3, [r1, #464]	; 0x1d0
   189ee:	ldr.w	r3, [r3, #304]	; 0x130
   189f2:	ldrd	r0, r1, [r3, #8]
   189f6:	ldrd	r2, r3, [sl, #8]
   189fa:	cmp	r1, r3
   189fc:	itet	eq
   189fe:	cmpeq	r0, r2
   18a00:	movne	r3, #1
   18a02:	moveq	r3, #0
   18a04:	ldr.w	r1, [pc, #1312]	; 18f28 <__btrfs_cow_block@@Base+0x56c>
   18a08:	movw	r2, #311	; 0x137
   18a0c:	ldr.w	r0, [pc, #1308]	; 18f2c <__btrfs_cow_block@@Base+0x570>
   18a10:	add	r1, pc
   18a12:	adds	r1, #158	; 0x9e
   18a14:	add	r0, pc
   18a16:	bl	1815c <rb_free_nodes@@Base+0x15e>
   18a1a:	ldr.w	r3, [r4, #488]	; 0x1e8
   18a1e:	cbz	r3, 18a32 <__btrfs_cow_block@@Base+0x76>
   18a20:	ldrd	r8, r9, [sl, #8]
   18a24:	ldrd	r6, r7, [r4, #480]	; 0x1e0
   18a28:	cmp	r9, r7
   18a2a:	itet	eq
   18a2c:	cmpeq	r8, r6
   18a2e:	movne	r3, #1
   18a30:	moveq	r3, #0
   18a32:	ldr.w	r1, [pc, #1276]	; 18f30 <__btrfs_cow_block@@Base+0x574>
   18a36:	movw	r2, #313	; 0x139
   18a3a:	ldr.w	r0, [pc, #1272]	; 18f34 <__btrfs_cow_block@@Base+0x578>
   18a3e:	add	r6, sp, #72	; 0x48
   18a40:	add	r1, pc
   18a42:	adds	r1, #158	; 0x9e
   18a44:	add	r0, pc
   18a46:	bl	1815c <rb_free_nodes@@Base+0x15e>
   18a4a:	ldrb.w	r7, [r5, #196]	; 0xc4
   18a4e:	cbnz	r7, 18aa6 <__btrfs_cow_block@@Base+0xea>
   18a50:	mov	r2, r7
   18a52:	mov	r1, r6
   18a54:	mov	r0, r5
   18a56:	bl	18046 <rb_free_nodes@@Base+0x48>
   18a5a:	ldrd	r2, r3, [sp, #152]	; 0x98
   18a5e:	mov	r1, r4
   18a60:	strd	r6, r7, [sp, #8]
   18a64:	mov	r0, sl
   18a66:	strd	r2, r3, [sp, #24]
   18a6a:	ldrd	r2, r3, [sp, #144]	; 0x90
   18a6e:	strd	r2, r3, [sp, #16]
   18a72:	ldr.w	r2, [r4, #447]	; 0x1bf
   18a76:	ldr.w	r3, [r4, #451]	; 0x1c3
   18a7a:	strd	r2, r3, [sp]
   18a7e:	ldr	r2, [r5, #76]	; 0x4c
   18a80:	bl	23164 <btrfs_alloc_free_block@@Base>
   18a84:	cmn.w	r0, #4096	; 0x1000
   18a88:	mov	r6, r0
   18a8a:	bls.n	18ab2 <__btrfs_cow_block@@Base+0xf6>
   18a8c:	ldr.w	r2, [pc, #1192]	; 18f38 <__btrfs_cow_block@@Base+0x57c>
   18a90:	ldr.w	r3, [pc, #1168]	; 18f24 <__btrfs_cow_block@@Base+0x568>
   18a94:	add	r2, pc
   18a96:	ldr	r3, [r2, r3]
   18a98:	ldr	r2, [r3, #0]
   18a9a:	ldr	r3, [sp, #92]	; 0x5c
   18a9c:	eors	r2, r3
   18a9e:	beq.w	18f1a <__btrfs_cow_block@@Base+0x55e>
   18aa2:	blx	8708 <__stack_chk_fail@plt>
   18aa6:	movs	r2, #0
   18aa8:	mov	r1, r6
   18aaa:	mov	r0, r5
   18aac:	bl	18052 <rb_free_nodes@@Base+0x54>
   18ab0:	b.n	18a5a <__btrfs_cow_block@@Base+0x9e>
   18ab2:	ldr	r3, [r0, #76]	; 0x4c
   18ab4:	mov	r1, r5
   18ab6:	str	r3, [sp, #0]
   18ab8:	movs	r3, #0
   18aba:	mov	r2, r3
   18abc:	bl	17a42 <copy_extent_buffer@@Base>
   18ac0:	ldr	r3, [r6, #40]	; 0x28
   18ac2:	ldr.w	ip, [r6, #152]	; 0x98
   18ac6:	mov.w	r1, #4294967295	; 0xffffffff
   18aca:	mvn.w	r0, #7
   18ace:	str.w	r3, [r6, #144]	; 0x90
   18ad2:	bic.w	ip, ip, #3
   18ad6:	ldr	r3, [r6, #44]	; 0x2c
   18ad8:	str.w	r3, [r6, #148]	; 0x94
   18adc:	ldrd	r2, r3, [sl, #8]
   18ae0:	str.w	ip, [r6, #152]	; 0x98
   18ae4:	str.w	r3, [r6, #180]	; 0xb4
   18ae8:	ldr.w	r3, [r6, #156]	; 0x9c
   18aec:	str.w	r2, [r6, #176]	; 0xb0
   18af0:	bic.w	r3, r3, #4278190080	; 0xff000000
   18af4:	orr.w	r3, r3, #16777216	; 0x1000000
   18af8:	str.w	r3, [r6, #156]	; 0x9c
   18afc:	ldr.w	r3, [r4, #451]	; 0x1c3
   18b00:	ldr.w	r2, [r4, #447]	; 0x1bf
   18b04:	cmp	r3, r1
   18b06:	iteet	eq
   18b08:	cmpeq	r2, r0
   18b0a:	strne.w	r3, [r6, #188]	; 0xbc
   18b0e:	strne.w	r2, [r6, #184]	; 0xb8
   18b12:	orreq.w	ip, ip, #2
   18b16:	it	eq
   18b18:	streq.w	ip, [r6, #152]	; 0x98
   18b1c:	movs	r2, #32
   18b1e:	ldr.w	r3, [r4, #464]	; 0x1d0
   18b22:	mov	r0, r6
   18b24:	ldr.w	r1, [r3, #352]	; 0x160
   18b28:	movs	r3, #16
   18b2a:	add	r1, r3
   18b2c:	bl	17a30 <write_extent_buffer@@Base>
   18b30:	ldr	r3, [r5, #84]	; 0x54
   18b32:	lsls	r3, r3, #21
   18b34:	bmi.w	18c72 <__btrfs_cow_block@@Base+0x2b6>
   18b38:	ldrd	r2, r3, [sl, #8]
   18b3c:	ldr.w	r1, [r5, #180]	; 0xb4
   18b40:	ldr.w	r0, [r5, #176]	; 0xb0
   18b44:	cmp	r3, r1
   18b46:	it	eq
   18b48:	cmpeq	r2, r0
   18b4a:	ite	cc
   18b4c:	movcc	r3, #1
   18b4e:	movcs	r3, #0
   18b50:	ldr	r1, [pc, #1000]	; (18f3c <__btrfs_cow_block@@Base+0x580>)
   18b52:	mov.w	r2, #342	; 0x156
   18b56:	ldr	r0, [pc, #1000]	; (18f40 <__btrfs_cow_block@@Base+0x584>)
   18b58:	add	r1, pc
   18b5a:	adds	r1, #158	; 0x9e
   18b5c:	add	r0, pc
   18b5e:	bl	1815c <rb_free_nodes@@Base+0x15e>
   18b62:	ldr.w	r3, [r4, #488]	; 0x1e8
   18b66:	cmp	r3, #0
   18b68:	beq.w	18c76 <__btrfs_cow_block@@Base+0x2ba>
   18b6c:	ldr	r3, [r4, #0]
   18b6e:	cmp	r5, r3
   18b70:	beq.w	18c76 <__btrfs_cow_block@@Base+0x2ba>
   18b74:	ldr	r3, [r4, #4]
   18b76:	cmp	r5, r3
   18b78:	beq.n	18c76 <__btrfs_cow_block@@Base+0x2ba>
   18b7a:	ldr.w	r3, [r5, #180]	; 0xb4
   18b7e:	ldr.w	r1, [r4, #212]	; 0xd4
   18b82:	ldr.w	r2, [r5, #176]	; 0xb0
   18b86:	ldr.w	r0, [r4, #208]	; 0xd0
   18b8a:	cmp	r1, r3
   18b8c:	it	eq
   18b8e:	cmpeq	r0, r2
   18b90:	bcs.n	18ba0 <__btrfs_cow_block@@Base+0x1e4>
   18b92:	ldr.w	r1, [r5, #152]	; 0x98
   18b96:	movs	r3, #0
   18b98:	and.w	r2, r1, #2
   18b9c:	orrs	r3, r2
   18b9e:	beq.n	18c76 <__btrfs_cow_block@@Base+0x2ba>
   18ba0:	ldrb.w	r2, [r5, #196]	; 0xc4
   18ba4:	add	r3, sp, #64	; 0x40
   18ba6:	ldr.w	r1, [sl]
   18baa:	mov	r0, sl
   18bac:	str	r3, [sp, #16]
   18bae:	add	r3, sp, #56	; 0x38
   18bb0:	str	r3, [sp, #12]
   18bb2:	movs	r3, #1
   18bb4:	str	r3, [sp, #8]
   18bb6:	movs	r3, #0
   18bb8:	strd	r2, r3, [sp]
   18bbc:	ldrd	r2, r3, [r5, #40]	; 0x28
   18bc0:	bl	20c8c <btrfs_lookup_extent_info@@Base>
   18bc4:	ldr	r1, [pc, #892]	; (18f44 <__btrfs_cow_block@@Base+0x588>)
   18bc6:	movs	r2, #239	; 0xef
   18bc8:	add	r1, pc
   18bca:	adds	r1, #176	; 0xb0
   18bcc:	str	r1, [sp, #40]	; 0x28
   18bce:	mov	r3, r0
   18bd0:	ldr	r0, [pc, #884]	; (18f48 <__btrfs_cow_block@@Base+0x58c>)
   18bd2:	add	r0, pc
   18bd4:	bl	18114 <rb_free_nodes@@Base+0x116>
   18bd8:	ldrd	r2, r3, [sp, #56]	; 0x38
   18bdc:	ldr	r0, [pc, #876]	; (18f4c <__btrfs_cow_block@@Base+0x590>)
   18bde:	orrs	r3, r2
   18be0:	ldr	r1, [sp, #40]	; 0x28
   18be2:	add	r0, pc
   18be4:	mov.w	r2, #240	; 0xf0
   18be8:	ite	eq
   18bea:	moveq	r3, #1
   18bec:	movne	r3, #0
   18bee:	bl	18114 <rb_free_nodes@@Base+0x116>
   18bf2:	ldr.w	r3, [r5, #184]	; 0xb8
   18bf6:	ldr	r2, [sp, #64]	; 0x40
   18bf8:	str	r3, [sp, #40]	; 0x28
   18bfa:	and.w	r8, r2, #256	; 0x100
   18bfe:	ldr.w	r3, [r5, #188]	; 0xbc
   18c02:	str	r3, [sp, #44]	; 0x2c
   18c04:	movs	r3, #0
   18c06:	mov	r9, r3
   18c08:	orrs.w	r2, r8, r9
   18c0c:	bne.n	18c24 <__btrfs_cow_block@@Base+0x268>
   18c0e:	ldrd	r0, r1, [sp, #40]	; 0x28
   18c12:	mov.w	r3, #4294967295	; 0xffffffff
   18c16:	mvn.w	r2, #7
   18c1a:	cmp	r1, r3
   18c1c:	itte	eq
   18c1e:	cmpeq	r0, r2
   18c20:	moveq	r3, #1
   18c22:	movne	r3, r9
   18c24:	ldr	r1, [pc, #808]	; (18f50 <__btrfs_cow_block@@Base+0x594>)
   18c26:	movs	r2, #251	; 0xfb
   18c28:	ldr	r0, [pc, #808]	; (18f54 <__btrfs_cow_block@@Base+0x598>)
   18c2a:	add	r1, pc
   18c2c:	adds	r1, #176	; 0xb0
   18c2e:	add	r0, pc
   18c30:	bl	18114 <rb_free_nodes@@Base+0x116>
   18c34:	ldrd	r2, r3, [sp, #56]	; 0x38
   18c38:	cmp	r3, #0
   18c3a:	it	eq
   18c3c:	cmpeq	r2, #2
   18c3e:	bcc.w	18e0a <__btrfs_cow_block@@Base+0x44e>
   18c42:	ldrd	r0, r1, [sp, #40]	; 0x28
   18c46:	ldr.w	r3, [r4, #451]	; 0x1c3
   18c4a:	ldr.w	r2, [r4, #447]	; 0x1bf
   18c4e:	cmp	r1, r3
   18c50:	mov.w	r1, #4294967295	; 0xffffffff
   18c54:	it	eq
   18c56:	cmpeq	r0, r2
   18c58:	mvn.w	r0, #7
   18c5c:	beq.n	18cae <__btrfs_cow_block@@Base+0x2f2>
   18c5e:	cmp	r3, r1
   18c60:	it	eq
   18c62:	cmpeq	r2, r0
   18c64:	bne.w	18e06 <__btrfs_cow_block@@Base+0x44a>
   18c68:	orrs.w	r3, r8, r9
   18c6c:	bne.w	18de8 <__btrfs_cow_block@@Base+0x42c>
   18c70:	b.n	18cb6 <__btrfs_cow_block@@Base+0x2fa>
   18c72:	movs	r3, #0
   18c74:	b.n	18b50 <__btrfs_cow_block@@Base+0x194>
   18c76:	movs	r2, #1
   18c78:	movs	r3, #0
   18c7a:	strd	r2, r3, [sp, #56]	; 0x38
   18c7e:	mov.w	r1, #4294967295	; 0xffffffff
   18c82:	ldr.w	r3, [r4, #451]	; 0x1c3
   18c86:	mvn.w	r0, #7
   18c8a:	ldr.w	r2, [r4, #447]	; 0x1bf
   18c8e:	cmp	r3, r1
   18c90:	it	eq
   18c92:	cmpeq	r2, r0
   18c94:	beq.n	18c9e <__btrfs_cow_block@@Base+0x2e2>
   18c96:	ldr.w	r3, [r5, #156]	; 0x9c
   18c9a:	lsrs	r3, r3, #24
   18c9c:	bne.n	18caa <__btrfs_cow_block@@Base+0x2ee>
   18c9e:	mov.w	r2, #256	; 0x100
   18ca2:	movs	r3, #0
   18ca4:	strd	r2, r3, [sp, #64]	; 0x40
   18ca8:	b.n	18bf2 <__btrfs_cow_block@@Base+0x236>
   18caa:	movs	r2, #0
   18cac:	b.n	18ca2 <__btrfs_cow_block@@Base+0x2e6>
   18cae:	orrs.w	r3, r8, r9
   18cb2:	bne.w	18ddc <__btrfs_cow_block@@Base+0x420>
   18cb6:	movs	r3, #1
   18cb8:	mov	r2, r5
   18cba:	mov	r1, r4
   18cbc:	mov	r0, sl
   18cbe:	bl	21020 <btrfs_inc_ref@@Base>
   18cc2:	ldr.w	r8, [pc, #660]	; 18f58 <__btrfs_cow_block@@Base+0x59c>
   18cc6:	ldr.w	r9, [pc, #660]	; 18f5c <__btrfs_cow_block@@Base+0x5a0>
   18cca:	movw	r2, #259	; 0x103
   18cce:	add	r8, pc
   18cd0:	add.w	r8, r8, #176	; 0xb0
   18cd4:	add	r9, pc
   18cd6:	mov	r1, r8
   18cd8:	mov	r3, r0
   18cda:	mov	r0, r9
   18cdc:	bl	18114 <rb_free_nodes@@Base+0x116>
   18ce0:	ldr.w	r3, [r4, #451]	; 0x1c3
   18ce4:	ldr.w	r2, [r4, #447]	; 0x1bf
   18ce8:	mov.w	r1, #4294967295	; 0xffffffff
   18cec:	cmp	r3, r1
   18cee:	mvn.w	r0, #7
   18cf2:	it	eq
   18cf4:	cmpeq	r2, r0
   18cf6:	bne.n	18d2c <__btrfs_cow_block@@Base+0x370>
   18cf8:	movs	r3, #0
   18cfa:	mov	r2, r5
   18cfc:	mov	r1, r4
   18cfe:	mov	r0, sl
   18d00:	bl	2102e <btrfs_dec_ref@@Base>
   18d04:	mov.w	r2, #264	; 0x108
   18d08:	mov	r1, r8
   18d0a:	mov	r3, r0
   18d0c:	mov	r0, r9
   18d0e:	bl	18114 <rb_free_nodes@@Base+0x116>
   18d12:	movs	r3, #1
   18d14:	mov	r2, r6
   18d16:	mov	r1, r4
   18d18:	mov	r0, sl
   18d1a:	bl	21020 <btrfs_inc_ref@@Base>
   18d1e:	mov.w	r2, #266	; 0x10a
   18d22:	mov	r1, r8
   18d24:	mov	r3, r0
   18d26:	mov	r0, r9
   18d28:	bl	18114 <rb_free_nodes@@Base+0x116>
   18d2c:	mov.w	r2, #256	; 0x100
   18d30:	movs	r3, #0
   18d32:	strd	r2, r3, [sp, #8]
   18d36:	mov	r0, sl
   18d38:	ldrb.w	r3, [r5, #196]	; 0xc4
   18d3c:	str	r3, [sp, #0]
   18d3e:	ldrd	r2, r3, [r5, #40]	; 0x28
   18d42:	bl	20e3c <btrfs_set_block_flags@@Base>
   18d46:	ldr	r1, [pc, #536]	; (18f60 <__btrfs_cow_block@@Base+0x5a4>)
   18d48:	mov.w	r2, #282	; 0x11a
   18d4c:	add	r1, pc
   18d4e:	adds	r1, #176	; 0xb0
   18d50:	mov	r3, r0
   18d52:	ldr	r0, [pc, #528]	; (18f64 <__btrfs_cow_block@@Base+0x5a8>)
   18d54:	add	r0, pc
   18d56:	bl	18114 <rb_free_nodes@@Base+0x116>
   18d5a:	ldr	r3, [r4, #0]
   18d5c:	uxtb.w	r8, r7
   18d60:	mov.w	r9, #0
   18d64:	cmp	r3, r5
   18d66:	bne.w	18e76 <__btrfs_cow_block@@Base+0x4ba>
   18d6a:	str	r6, [r4, #0]
   18d6c:	movs	r2, #0
   18d6e:	ldr	r3, [r6, #80]	; 0x50
   18d70:	adds	r3, #1
   18d72:	str	r3, [r6, #80]	; 0x50
   18d74:	movs	r3, #0
   18d76:	ldr.w	r0, [r4, #447]	; 0x1bf
   18d7a:	ldr.w	r1, [r4, #451]	; 0x1c3
   18d7e:	strd	r2, r3, [sp, #32]
   18d82:	strd	r2, r3, [sp, #8]
   18d86:	ldr	r3, [r5, #76]	; 0x4c
   18d88:	strd	r0, r1, [sp, #16]
   18d8c:	mov	r1, r4
   18d8e:	mov	r0, sl
   18d90:	strd	r8, r9, [sp, #24]
   18d94:	str	r3, [sp, #0]
   18d96:	movs	r3, #0
   18d98:	str	r3, [sp, #4]
   18d9a:	ldrd	r2, r3, [r5, #40]	; 0x28
   18d9e:	bl	2134c <btrfs_free_extent@@Base>
   18da2:	mov	r0, r5
   18da4:	bl	17320 <free_extent_buffer@@Base>
   18da8:	mov	r0, r4
   18daa:	bl	18594 <add_root_to_dirty_list@@Base>
   18dae:	ldr	r2, [r5, #68]	; 0x44
   18db0:	add.w	r3, r5, #68	; 0x44
   18db4:	cmp	r3, r2
   18db6:	beq.n	18dc8 <__btrfs_cow_block@@Base+0x40c>
   18db8:	ldr	r1, [r5, #72]	; 0x48
   18dba:	mov	r0, r5
   18dbc:	str	r1, [r2, #4]
   18dbe:	str	r2, [r1, #0]
   18dc0:	strd	r3, r3, [r5, #68]	; 0x44
   18dc4:	bl	17320 <free_extent_buffer@@Base>
   18dc8:	mov	r0, r5
   18dca:	bl	17320 <free_extent_buffer@@Base>
   18dce:	mov	r0, r6
   18dd0:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   18dd4:	ldr	r3, [sp, #52]	; 0x34
   18dd6:	movs	r0, #0
   18dd8:	str	r6, [r3, #0]
   18dda:	b.n	18a8c <__btrfs_cow_block@@Base+0xd0>
   18ddc:	ldrd	r2, r3, [sp, #40]	; 0x28
   18de0:	cmp	r3, r1
   18de2:	it	eq
   18de4:	cmpeq	r2, r0
   18de6:	bne.n	18e06 <__btrfs_cow_block@@Base+0x44a>
   18de8:	movs	r3, #1
   18dea:	mov	r2, r6
   18dec:	mov	r1, r4
   18dee:	mov	r0, sl
   18df0:	bl	21020 <btrfs_inc_ref@@Base>
   18df4:	ldr	r1, [pc, #368]	; (18f68 <__btrfs_cow_block@@Base+0x5ac>)
   18df6:	mov.w	r2, #276	; 0x114
   18dfa:	add	r1, pc
   18dfc:	adds	r1, #176	; 0xb0
   18dfe:	mov	r3, r0
   18e00:	ldr	r0, [pc, #360]	; (18f6c <__btrfs_cow_block@@Base+0x5b0>)
   18e02:	add	r0, pc
   18e04:	b.n	18d56 <__btrfs_cow_block@@Base+0x39a>
   18e06:	movs	r3, #0
   18e08:	b.n	18dea <__btrfs_cow_block@@Base+0x42e>
   18e0a:	orrs.w	r3, r8, r9
   18e0e:	beq.n	18e6e <__btrfs_cow_block@@Base+0x4b2>
   18e10:	ldr.w	r3, [r4, #451]	; 0x1c3
   18e14:	mov.w	r1, #4294967295	; 0xffffffff
   18e18:	ldr.w	r2, [r4, #447]	; 0x1bf
   18e1c:	mvn.w	r0, #7
   18e20:	cmp	r3, r1
   18e22:	mov	r1, r4
   18e24:	it	eq
   18e26:	cmpeq	r2, r0
   18e28:	mov	r2, r6
   18e2a:	mov	r0, sl
   18e2c:	ldr.w	r9, [pc, #320]	; 18f70 <__btrfs_cow_block@@Base+0x5b4>
   18e30:	ite	eq
   18e32:	moveq	r3, #1
   18e34:	movne	r3, #0
   18e36:	bl	21020 <btrfs_inc_ref@@Base>
   18e3a:	ldr.w	r8, [pc, #312]	; 18f74 <__btrfs_cow_block@@Base+0x5b8>
   18e3e:	add	r9, pc
   18e40:	movw	r2, #291	; 0x123
   18e44:	add.w	r9, r9, #176	; 0xb0
   18e48:	add	r8, pc
   18e4a:	mov	r1, r9
   18e4c:	mov	r3, r0
   18e4e:	mov	r0, r8
   18e50:	bl	18114 <rb_free_nodes@@Base+0x116>
   18e54:	movs	r3, #1
   18e56:	mov	r2, r5
   18e58:	mov	r1, r4
   18e5a:	mov	r0, sl
   18e5c:	bl	2102e <btrfs_dec_ref@@Base>
   18e60:	movw	r2, #293	; 0x125
   18e64:	mov	r1, r9
   18e66:	mov	r3, r0
   18e68:	mov	r0, r8
   18e6a:	bl	18114 <rb_free_nodes@@Base+0x116>
   18e6e:	mov	r0, r5
   18e70:	bl	1dc0c <clean_tree_block@@Base>
   18e74:	b.n	18d5a <__btrfs_cow_block@@Base+0x39e>
   18e76:	ldr	r3, [sp, #48]	; 0x30
   18e78:	add.w	fp, fp, fp, lsl #5
   18e7c:	ldrd	r1, r2, [r6, #40]	; 0x28
   18e80:	add	r3, fp
   18e82:	ldr	r7, [pc, #244]	; (18f78 <__btrfs_cow_block@@Base+0x5bc>)
   18e84:	add.w	fp, r3, #197	; 0xc5
   18e88:	ldr	r0, [pc, #240]	; (18f7c <__btrfs_cow_block@@Base+0x5c0>)
   18e8a:	str.w	r1, [r3, #214]	; 0xd6
   18e8e:	add	r7, pc
   18e90:	str.w	r2, [r3, #218]	; 0xda
   18e94:	adds	r7, #158	; 0x9e
   18e96:	ldrd	r2, r3, [sl, #8]
   18e9a:	add	r0, pc
   18e9c:	mov	r1, r7
   18e9e:	orrs	r3, r2
   18ea0:	mov.w	r2, #358	; 0x166
   18ea4:	ite	eq
   18ea6:	moveq	r3, #1
   18ea8:	movne	r3, #0
   18eaa:	bl	1815c <rb_free_nodes@@Base+0x15e>
   18eae:	ldrd	r2, r3, [sl, #8]
   18eb2:	ldr	r0, [sp, #48]	; 0x30
   18eb4:	str.w	r2, [fp, #25]
   18eb8:	str.w	r3, [fp, #29]
   18ebc:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   18ec0:	ldr	r3, [sp, #48]	; 0x30
   18ec2:	ldr.w	r0, [r3, #176]	; 0xb0
   18ec6:	ldr.w	r1, [r3, #180]	; 0xb4
   18eca:	ldrd	r2, r3, [sl, #8]
   18ece:	cmp	r3, r1
   18ed0:	mov	r1, r7
   18ed2:	it	eq
   18ed4:	cmpeq	r2, r0
   18ed6:	ldr	r0, [pc, #168]	; (18f80 <__btrfs_cow_block@@Base+0x5c4>)
   18ed8:	mov.w	r2, #362	; 0x16a
   18edc:	ite	ne
   18ede:	movne	r3, #1
   18ee0:	moveq	r3, #0
   18ee2:	add	r0, pc
   18ee4:	bl	1815c <rb_free_nodes@@Base+0x15e>
   18ee8:	ldr.w	r0, [r4, #447]	; 0x1bf
   18eec:	ldr.w	r1, [r4, #451]	; 0x1c3
   18ef0:	movs	r2, #0
   18ef2:	movs	r3, #0
   18ef4:	strd	r2, r3, [sp, #32]
   18ef8:	strd	r2, r3, [sp, #8]
   18efc:	ldr	r3, [r5, #76]	; 0x4c
   18efe:	strd	r0, r1, [sp, #16]
   18f02:	mov	r1, r4
   18f04:	mov	r0, sl
   18f06:	strd	r8, r9, [sp, #24]
   18f0a:	str	r3, [sp, #0]
   18f0c:	movs	r3, #0
   18f0e:	str	r3, [sp, #4]
   18f10:	ldrd	r2, r3, [r5, #40]	; 0x28
   18f14:	bl	2134c <btrfs_free_extent@@Base>
   18f18:	b.n	18dae <__btrfs_cow_block@@Base+0x3f2>
   18f1a:	add	sp, #100	; 0x64
   18f1c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18f20:	stmia	r3!, {r4, r5, r7}
   18f22:	movs	r4, r0
   18f24:	lsls	r0, r5, #8
   18f26:	movs	r0, r0
   18f28:	cmp	r4, r6
   18f2a:	movs	r2, r0
   18f2c:	subs	r6, #252	; 0xfc
   18f2e:	movs	r2, r0
   18f30:	cmp	r4, r0
   18f32:	movs	r2, r0
   18f34:	subs	r7, #28
   18f36:	movs	r2, r0
   18f38:	stmia	r2!, {r2, r3, r5, r6, r7}
   18f3a:	movs	r4, r0
   18f3c:	mvns	r4, r5
   18f3e:	movs	r2, r0
   18f40:	subs	r6, #57	; 0x39
   18f42:	movs	r2, r0
   18f44:	muls	r4, r7
   18f46:	movs	r2, r0
   18f48:	adds	r2, r2, r4
   18f4a:	movs	r2, r0
   18f4c:	str	r4, [r1, r2]
   18f4e:	movs	r2, r0
   18f50:	orrs	r2, r3
   18f52:	movs	r2, r0
   18f54:	subs	r5, #187	; 0xbb
   18f56:	movs	r2, r0
   18f58:	negs	r6, r6
   18f5a:	movs	r2, r0
   18f5c:	adds	r0, r2, r0
   18f5e:	movs	r2, r0
   18f60:	rors	r0, r7
   18f62:	movs	r2, r0
   18f64:	asrs	r0, r2, #30
   18f66:	movs	r2, r0
   18f68:	adcs	r2, r1
   18f6a:	movs	r2, r0
   18f6c:	asrs	r2, r4, #27
   18f6e:	movs	r2, r0
   18f70:	asrs	r6, r0
   18f72:	movs	r2, r0
   18f74:	asrs	r4, r3, #26
   18f76:	movs	r2, r0
   18f78:	lsls	r6, r6
   18f7a:	movs	r2, r0
   18f7c:	subs	r1, #184	; 0xb8
   18f7e:	movs	r2, r0
   18f80:	subs	r3, #86	; 0x56
   18f82:	movs	r2, r0

00018f84 <btrfs_cow_block@@Base>:
   18f84:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   18f88:	mov	r4, r2
   18f8a:	ldr.w	r2, [r1, #464]	; 0x1d0
   18f8e:	mov	r6, r0
   18f90:	ldrd	r8, r9, [r0, #8]
   18f94:	mov	r5, r1
   18f96:	sub	sp, #24
   18f98:	mov	r7, r3
   18f9a:	ldrd	r0, r1, [r2, #232]	; 0xe8
   18f9e:	ldr	r3, [pc, #184]	; (19058 <btrfs_cow_block@@Base+0xd4>)
   18fa0:	cmp	r9, r1
   18fa2:	ldr.w	sl, [sp, #60]	; 0x3c
   18fa6:	it	eq
   18fa8:	cmpeq	r8, r0
   18faa:	add	r3, pc
   18fac:	beq.n	18fda <btrfs_cow_block@@Base+0x56>
   18fae:	ldr	r2, [pc, #172]	; (1905c <btrfs_cow_block@@Base+0xd8>)
   18fb0:	ldr	r3, [r3, r2]
   18fb2:	ldr	r2, [pc, #172]	; (19060 <btrfs_cow_block@@Base+0xdc>)
   18fb4:	strd	r0, r1, [sp, #8]
   18fb8:	movs	r1, #1
   18fba:	add	r2, pc
   18fbc:	strd	r8, r9, [sp]
   18fc0:	ldr	r0, [r3, #0]
   18fc2:	blx	8a64 <__fprintf_chk@plt+0x4>
   18fc6:	ldr	r1, [pc, #156]	; (19064 <btrfs_cow_block@@Base+0xe0>)
   18fc8:	ldr	r0, [pc, #156]	; (19068 <btrfs_cow_block@@Base+0xe4>)
   18fca:	movs	r3, #1
   18fcc:	add	r1, pc
   18fce:	movw	r2, #407	; 0x197
   18fd2:	adds	r1, #195	; 0xc3
   18fd4:	add	r0, pc
   18fd6:	bl	1811e <rb_free_nodes@@Base+0x120>
   18fda:	ldrd	r2, r3, [r6, #8]
   18fde:	ldr.w	r1, [r4, #180]	; 0xb4
   18fe2:	ldr.w	r0, [r4, #176]	; 0xb0
   18fe6:	cmp	r1, r3
   18fe8:	it	eq
   18fea:	cmpeq	r0, r2
   18fec:	bne.n	1902e <btrfs_cow_block@@Base+0xaa>
   18fee:	ldr.w	lr, [r4, #152]	; 0x98
   18ff2:	mov.w	ip, #0
   18ff6:	mov	r3, ip
   18ff8:	and.w	r2, lr, #1
   18ffc:	orrs	r3, r2
   18ffe:	bne.n	1902e <btrfs_cow_block@@Base+0xaa>
   19000:	ldr.w	r3, [r5, #451]	; 0x1c3
   19004:	mov.w	r1, #4294967295	; 0xffffffff
   19008:	ldr.w	r2, [r5, #447]	; 0x1bf
   1900c:	mvn.w	r0, #7
   19010:	cmp	r3, r1
   19012:	it	eq
   19014:	cmpeq	r2, r0
   19016:	beq.n	19022 <btrfs_cow_block@@Base+0x9e>
   19018:	and.w	r2, lr, #2
   1901c:	mov	r3, ip
   1901e:	orrs	r3, r2
   19020:	bne.n	1902e <btrfs_cow_block@@Base+0xaa>
   19022:	movs	r0, #0
   19024:	str.w	r4, [sl]
   19028:	add	sp, #24
   1902a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1902e:	movs	r2, #0
   19030:	movs	r3, #0
   19032:	strd	r2, r3, [sp, #16]
   19036:	mov	r1, r5
   19038:	ldrd	r3, r2, [r4, #40]	; 0x28
   1903c:	mov	r0, r6
   1903e:	str.w	sl, [sp, #4]
   19042:	and.w	r3, r3, #3221225472	; 0xc0000000
   19046:	strd	r3, r2, [sp, #8]
   1904a:	mov	r2, r4
   1904c:	ldr	r3, [sp, #56]	; 0x38
   1904e:	str	r3, [sp, #0]
   19050:	mov	r3, r7
   19052:	bl	189bc <__btrfs_cow_block@@Base>
   19056:	b.n	19028 <btrfs_cow_block@@Base+0xa4>
   19058:	pop	{r1, r2, r4, r6, r7, pc}
   1905a:	movs	r4, r0
   1905c:	lsls	r0, r7, #8
   1905e:	movs	r0, r0
   19060:	subs	r2, #176	; 0xb0
   19062:	movs	r2, r0
   19064:	subs	r7, #120	; 0x78
   19066:	movs	r2, r0
   19068:	ldr	r7, [pc, #164]	; (19110 <btrfs_comp_cpu_keys@@Base+0xa4>)
   1906a:	movs	r2, r0

0001906c <btrfs_comp_cpu_keys@@Base>:
   1906c:	push	{r4, r5, lr}
   1906e:	ldr	r3, [r1, #4]
   19070:	ldr	r5, [r0, #4]
   19072:	ldr	r4, [r0, #0]
   19074:	ldr	r2, [r1, #0]
   19076:	cmp	r3, r5
   19078:	it	eq
   1907a:	cmpeq	r2, r4
   1907c:	bcc.n	190be <btrfs_comp_cpu_keys@@Base+0x52>
   1907e:	cmp	r5, r3
   19080:	it	eq
   19082:	cmpeq	r4, r2
   19084:	bcc.n	190b8 <btrfs_comp_cpu_keys@@Base+0x4c>
   19086:	ldrb	r2, [r0, #8]
   19088:	ldrb	r3, [r1, #8]
   1908a:	cmp	r2, r3
   1908c:	bhi.n	190be <btrfs_comp_cpu_keys@@Base+0x52>
   1908e:	bcc.n	190b8 <btrfs_comp_cpu_keys@@Base+0x4c>
   19090:	ldr.w	r5, [r0, #13]
   19094:	ldr.w	r3, [r1, #13]
   19098:	ldr.w	r4, [r0, #9]
   1909c:	ldr.w	r2, [r1, #9]
   190a0:	cmp	r3, r5
   190a2:	it	eq
   190a4:	cmpeq	r2, r4
   190a6:	bcc.n	190be <btrfs_comp_cpu_keys@@Base+0x52>
   190a8:	cmp	r5, r3
   190aa:	it	eq
   190ac:	cmpeq	r4, r2
   190ae:	ite	cc
   190b0:	movcc.w	r0, #4294967295	; 0xffffffff
   190b4:	movcs	r0, #0
   190b6:	pop	{r4, r5, pc}
   190b8:	mov.w	r0, #4294967295	; 0xffffffff
   190bc:	b.n	190b6 <btrfs_comp_cpu_keys@@Base+0x4a>
   190be:	movs	r0, #1
   190c0:	b.n	190b6 <btrfs_comp_cpu_keys@@Base+0x4a>
   190c2:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   190c4:	ldr	r2, [pc, #76]	; (19114 <btrfs_comp_cpu_keys@@Base+0xa8>)
   190c6:	ldr	r3, [pc, #80]	; (19118 <btrfs_comp_cpu_keys@@Base+0xac>)
   190c8:	add	r2, pc
   190ca:	ldr	r3, [r2, r3]
   190cc:	ldr	r3, [r3, #0]
   190ce:	str	r3, [sp, #20]
   190d0:	mov.w	r3, #0
   190d4:	ldr.w	r3, [r0, #13]
   190d8:	ldr.w	r2, [r0, #9]
   190dc:	str.w	r3, [sp, #13]
   190e0:	ldrb	r3, [r0, #8]
   190e2:	str.w	r2, [sp, #9]
   190e6:	ldr	r2, [r0, #0]
   190e8:	strb.w	r3, [sp, #8]
   190ec:	ldr	r3, [r0, #4]
   190ee:	mov	r0, sp
   190f0:	strd	r2, r3, [sp]
   190f4:	bl	1906c <btrfs_comp_cpu_keys@@Base>
   190f8:	ldr	r2, [pc, #32]	; (1911c <btrfs_comp_cpu_keys@@Base+0xb0>)
   190fa:	ldr	r3, [pc, #28]	; (19118 <btrfs_comp_cpu_keys@@Base+0xac>)
   190fc:	add	r2, pc
   190fe:	ldr	r3, [r2, r3]
   19100:	ldr	r2, [r3, #0]
   19102:	ldr	r3, [sp, #20]
   19104:	eors	r2, r3
   19106:	beq.n	1910c <btrfs_comp_cpu_keys@@Base+0xa0>
   19108:	blx	8708 <__stack_chk_fail@plt>
   1910c:	add	sp, #28
   1910e:	ldr.w	pc, [sp], #4
   19112:	nop
   19114:	pop	{r3, r4, r5, r7}
   19116:	movs	r4, r0
   19118:	lsls	r0, r5, #8
   1911a:	movs	r0, r0
   1911c:	pop	{r2, r7}
   1911e:	movs	r4, r0

00019120 <btrfs_check_node@@Base>:
   19120:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19124:	mov	r4, r2
   19126:	ldr	r2, [pc, #340]	; (1927c <btrfs_check_node@@Base+0x15c>)
   19128:	sub	sp, #92	; 0x5c
   1912a:	ldr	r3, [pc, #340]	; (19280 <btrfs_check_node@@Base+0x160>)
   1912c:	mov	r7, r0
   1912e:	add	r2, pc
   19130:	ldr.w	r8, [r4, #192]	; 0xc0
   19134:	mov	r5, r1
   19136:	ldr	r3, [r2, r3]
   19138:	ldr	r3, [r3, #0]
   1913a:	str	r3, [sp, #84]	; 0x54
   1913c:	mov.w	r3, #0
   19140:	cmp.w	r8, #0
   19144:	beq.n	191e0 <btrfs_check_node@@Base+0xc0>
   19146:	ldr.w	r2, [r0, #384]	; 0x180
   1914a:	ldr	r3, [pc, #300]	; (19278 <btrfs_check_node@@Base+0x158>)
   1914c:	subs	r2, #101	; 0x65
   1914e:	umull	r2, r3, r2, r3
   19152:	cmp.w	r8, r3, lsr #3
   19156:	bhi.n	191e0 <btrfs_check_node@@Base+0xc0>
   19158:	cbnz	r1, 19176 <btrfs_check_node@@Base+0x56>
   1915a:	sub.w	sl, r8, #2
   1915e:	add.w	r9, sp, #44	; 0x2c
   19162:	add.w	fp, sp, #64	; 0x40
   19166:	movs	r6, #0
   19168:	cmp.w	r8, #1
   1916c:	beq.n	19172 <btrfs_check_node@@Base+0x52>
   1916e:	cmp	sl, r6
   19170:	bhi.n	1919a <btrfs_check_node@@Base+0x7a>
   19172:	movs	r6, #0
   19174:	b.n	19230 <btrfs_check_node@@Base+0x110>
   19176:	ldrb	r3, [r1, #8]
   19178:	cmp	r3, #0
   1917a:	beq.n	1915a <btrfs_check_node@@Base+0x3a>
   1917c:	add	r1, sp, #44	; 0x2c
   1917e:	movs	r2, #0
   19180:	mov	r0, r4
   19182:	str	r1, [sp, #20]
   19184:	bl	18052 <rb_free_nodes@@Base+0x54>
   19188:	ldr	r1, [sp, #20]
   1918a:	movs	r2, #17
   1918c:	mov	r0, r5
   1918e:	blx	86a0 <memcmp@plt+0x4>
   19192:	cmp	r0, #0
   19194:	beq.n	1915a <btrfs_check_node@@Base+0x3a>
   19196:	movs	r6, #2
   19198:	b.n	191e2 <btrfs_check_node@@Base+0xc2>
   1919a:	mov	r2, r6
   1919c:	adds	r6, #1
   1919e:	mov	r1, r9
   191a0:	mov	r0, r4
   191a2:	bl	18052 <rb_free_nodes@@Base+0x54>
   191a6:	mov	r2, r6
   191a8:	mov	r1, fp
   191aa:	mov	r0, r4
   191ac:	bl	18052 <rb_free_nodes@@Base+0x54>
   191b0:	ldr.w	r3, [sp, #77]	; 0x4d
   191b4:	ldr.w	r2, [sp, #73]	; 0x49
   191b8:	add	r1, sp, #24
   191ba:	mov	r0, r9
   191bc:	str.w	r3, [sp, #37]	; 0x25
   191c0:	ldrb.w	r3, [sp, #72]	; 0x48
   191c4:	str.w	r2, [sp, #33]	; 0x21
   191c8:	strb.w	r3, [sp, #32]
   191cc:	ldrd	r2, r3, [sp, #64]	; 0x40
   191d0:	strd	r2, r3, [sp, #24]
   191d4:	bl	190c2 <btrfs_comp_cpu_keys@@Base+0x56>
   191d8:	cmp	r0, #0
   191da:	blt.n	19168 <btrfs_check_node@@Base+0x48>
   191dc:	movs	r6, #3
   191de:	b.n	191e2 <btrfs_check_node@@Base+0xc2>
   191e0:	movs	r6, #1
   191e2:	ldr.w	r3, [r4, #188]	; 0xbc
   191e6:	ldr.w	r2, [r4, #184]	; 0xb8
   191ea:	cmp	r3, #0
   191ec:	it	eq
   191ee:	cmpeq	r2, #2
   191f0:	bne.n	19230 <btrfs_check_node@@Base+0x110>
   191f2:	add.w	r8, sp, #33	; 0x21
   191f6:	cbz	r5, 19244 <btrfs_check_node@@Base+0x124>
   191f8:	ldr.w	r3, [r5, #13]
   191fc:	ldr.w	r2, [r5, #9]
   19200:	str.w	r3, [r8, #4]
   19204:	ldrb	r3, [r5, #8]
   19206:	str.w	r2, [sp, #33]	; 0x21
   1920a:	ldr	r2, [r5, #0]
   1920c:	strb.w	r3, [sp, #32]
   19210:	ldr	r3, [r5, #4]
   19212:	strd	r2, r3, [sp, #24]
   19216:	ldrb.w	r3, [r4, #196]	; 0xc4
   1921a:	add	r1, sp, #24
   1921c:	mov	r0, r7
   1921e:	str	r3, [sp, #8]
   19220:	ldr	r3, [r4, #76]	; 0x4c
   19222:	str	r3, [sp, #0]
   19224:	movs	r3, #0
   19226:	str	r3, [sp, #4]
   19228:	ldrd	r2, r3, [r4, #40]	; 0x28
   1922c:	bl	2dce8 <btrfs_add_corrupt_extent_record@@Base>
   19230:	ldr	r2, [pc, #80]	; (19284 <btrfs_check_node@@Base+0x164>)
   19232:	ldr	r3, [pc, #76]	; (19280 <btrfs_check_node@@Base+0x160>)
   19234:	add	r2, pc
   19236:	ldr	r3, [r2, r3]
   19238:	ldr	r2, [r3, #0]
   1923a:	ldr	r3, [sp, #84]	; 0x54
   1923c:	eors	r2, r3
   1923e:	beq.n	19270 <btrfs_check_node@@Base+0x150>
   19240:	blx	8708 <__stack_chk_fail@plt>
   19244:	mov	r2, r5
   19246:	add	r1, sp, #64	; 0x40
   19248:	mov	r0, r4
   1924a:	bl	18052 <rb_free_nodes@@Base+0x54>
   1924e:	ldr.w	r3, [sp, #77]	; 0x4d
   19252:	ldr.w	r2, [sp, #73]	; 0x49
   19256:	str.w	r3, [r8, #4]
   1925a:	ldrb.w	r3, [sp, #72]	; 0x48
   1925e:	str.w	r2, [sp, #33]	; 0x21
   19262:	strb.w	r3, [sp, #32]
   19266:	ldrd	r2, r3, [sp, #64]	; 0x40
   1926a:	strd	r2, r3, [sp, #24]
   1926e:	b.n	19216 <btrfs_check_node@@Base+0xf6>
   19270:	mov	r0, r6
   19272:	add	sp, #92	; 0x5c
   19274:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19278:	strh	r1, [r4, #30]
   1927a:	subs	r6, #15
   1927c:	pop	{r1, r4, r6}
   1927e:	movs	r4, r0
   19280:	lsls	r0, r5, #8
   19282:	movs	r0, r0
   19284:	cbnz	r4, 192da <btrfs_bin_search@@Base+0x52>
   19286:	movs	r4, r0

00019288 <btrfs_bin_search@@Base>:
   19288:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1928c:	mov	r6, r1
   1928e:	ldr.w	r5, [r0, #192]	; 0xc0
   19292:	mov	r7, r3
   19294:	mov	r9, r2
   19296:	cbnz	r2, 192ac <btrfs_bin_search@@Base+0x24>
   19298:	add.w	r8, r0, #96	; 0x60
   1929c:	mov.w	sl, #25
   192a0:	cmp	r9, r5
   192a2:	blt.n	192de <btrfs_bin_search@@Base+0x56>
   192a4:	movs	r0, #1
   192a6:	str.w	r9, [r7]
   192aa:	b.n	19306 <btrfs_bin_search@@Base+0x7e>
   192ac:	add.w	r8, r0, #96	; 0x60
   192b0:	mov.w	r9, #0
   192b4:	cmp	r9, r5
   192b6:	bge.n	192a4 <btrfs_bin_search@@Base+0x1c>
   192b8:	add.w	r4, r9, r5
   192bc:	mov	r1, r6
   192be:	add.w	r4, r4, r4, lsr #31
   192c2:	asrs	r4, r4, #1
   192c4:	add.w	r0, r4, r4, lsl #5
   192c8:	adds	r0, #101	; 0x65
   192ca:	add	r0, r8
   192cc:	bl	190c2 <btrfs_comp_cpu_keys@@Base+0x56>
   192d0:	cmp	r0, #0
   192d2:	bge.n	1930a <btrfs_bin_search@@Base+0x82>
   192d4:	add.w	r9, r4, #1
   192d8:	mov	r4, r5
   192da:	mov	r5, r4
   192dc:	b.n	192b4 <btrfs_bin_search@@Base+0x2c>
   192de:	add.w	r4, r9, r5
   192e2:	mov	r1, r6
   192e4:	add.w	r4, r4, r4, lsr #31
   192e8:	asrs	r4, r4, #1
   192ea:	mla	r0, sl, r4, r8
   192ee:	adds	r0, #101	; 0x65
   192f0:	bl	190c2 <btrfs_comp_cpu_keys@@Base+0x56>
   192f4:	cmp	r0, #0
   192f6:	bge.n	19302 <btrfs_bin_search@@Base+0x7a>
   192f8:	add.w	r9, r4, #1
   192fc:	mov	r4, r5
   192fe:	mov	r5, r4
   19300:	b.n	192a0 <btrfs_bin_search@@Base+0x18>
   19302:	bne.n	192fe <btrfs_bin_search@@Base+0x76>
   19304:	str	r4, [r7, #0]
   19306:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1930a:	bne.n	192da <btrfs_bin_search@@Base+0x52>
   1930c:	b.n	19304 <btrfs_bin_search@@Base+0x7c>

0001930e <read_node_slot@@Base>:
   1930e:	push	{r4, r5, r6, r7, lr}
   19310:	subs	r6, r2, #0
   19312:	sub	sp, #20
   19314:	mov	r5, r1
   19316:	blt.n	1937c <read_node_slot@@Base+0x6e>
   19318:	ldr.w	r3, [r1, #192]	; 0xc0
   1931c:	cmp	r6, r3
   1931e:	bcs.n	1937c <read_node_slot@@Base+0x6e>
   19320:	ldrb.w	r7, [r1, #196]	; 0xc4
   19324:	cbz	r7, 1937c <read_node_slot@@Base+0x6e>
   19326:	add.w	r3, r6, r6, lsl #5
   1932a:	add	r3, r1
   1932c:	adds	r3, #197	; 0xc5
   1932e:	mov	r1, r3
   19330:	ldr.w	r4, [r3, #25]!
   19334:	ldr.w	r2, [r1, #17]!
   19338:	ldr	r3, [r3, #4]
   1933a:	strd	r4, r3, [sp]
   1933e:	ldr	r3, [r1, #4]
   19340:	bl	1dd84 <read_tree_block@@Base>
   19344:	mov	r4, r0
   19346:	bl	180ac <rb_free_nodes@@Base+0xae>
   1934a:	cbz	r0, 19376 <read_node_slot@@Base+0x68>
   1934c:	ldrb.w	r3, [r4, #196]	; 0xc4
   19350:	subs	r7, #1
   19352:	cmp	r3, r7
   19354:	beq.n	1937e <read_node_slot@@Base+0x70>
   19356:	str	r3, [sp, #8]
   19358:	ldrb.w	r3, [r5, #196]	; 0xc4
   1935c:	ldr	r0, [pc, #36]	; (19384 <read_node_slot@@Base+0x76>)
   1935e:	ldr.w	r2, [r5, #144]	; 0x90
   19362:	add	r0, pc
   19364:	strd	r6, r3, [sp]
   19368:	ldr.w	r3, [r5, #148]	; 0x94
   1936c:	bl	17b7c <__btrfs_error@@Base>
   19370:	mov	r0, r4
   19372:	bl	17320 <free_extent_buffer@@Base>
   19376:	mvn.w	r4, #4
   1937a:	b.n	1937e <read_node_slot@@Base+0x70>
   1937c:	movs	r4, #0
   1937e:	mov	r0, r4
   19380:	add	sp, #20
   19382:	pop	{r4, r5, r6, r7, pc}
   19384:	adds	r7, #33	; 0x21
   19386:	movs	r2, r0

00019388 <reada_for_search@@Base>:
   19388:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1938c:	sub	sp, #92	; 0x5c
   1938e:	ldr	r4, [pc, #452]	; (19554 <reada_for_search@@Base+0x1cc>)
   19390:	cmp	r2, #1
   19392:	str	r1, [sp, #32]
   19394:	mov	r9, r0
   19396:	ldr	r1, [pc, #448]	; (19558 <reada_for_search@@Base+0x1d0>)
   19398:	add	r4, pc
   1939a:	ldr	r1, [r4, r1]
   1939c:	ldr	r1, [r1, #0]
   1939e:	str	r1, [sp, #84]	; 0x54
   193a0:	mov.w	r1, #0
   193a4:	bne.n	193e2 <reada_for_search@@Base+0x5a>
   193a6:	ldr	r2, [sp, #32]
   193a8:	ldr	r2, [r2, #4]
   193aa:	str	r2, [sp, #24]
   193ac:	cbz	r2, 193e2 <reada_for_search@@Base+0x5a>
   193ae:	ldr	r2, [sp, #32]
   193b0:	mov	r6, r3
   193b2:	ldr	r3, [sp, #24]
   193b4:	ldrsb.w	r2, [r2, #64]	; 0x40
   193b8:	adds	r3, #96	; 0x60
   193ba:	str	r3, [sp, #36]	; 0x24
   193bc:	add.w	r3, r6, r6, lsl #5
   193c0:	str	r2, [sp, #56]	; 0x38
   193c2:	ldr	r2, [sp, #36]	; 0x24
   193c4:	add	r3, r2
   193c6:	ldr.w	sl, [r3, #118]!
   193ca:	ldr.w	fp, [r3, #4]
   193ce:	mov	r2, sl
   193d0:	ldr.w	r3, [r0, #384]	; 0x180
   193d4:	str	r3, [sp, #0]
   193d6:	mov	r3, fp
   193d8:	bl	1c928 <btrfs_find_tree_block@@Base>
   193dc:	cbz	r0, 193f8 <reada_for_search@@Base+0x70>
   193de:	bl	17320 <free_extent_buffer@@Base>
   193e2:	ldr	r2, [pc, #376]	; (1955c <reada_for_search@@Base+0x1d4>)
   193e4:	ldr	r3, [pc, #368]	; (19558 <reada_for_search@@Base+0x1d0>)
   193e6:	add	r2, pc
   193e8:	ldr	r3, [r2, r3]
   193ea:	ldr	r2, [r3, #0]
   193ec:	ldr	r3, [sp, #84]	; 0x54
   193ee:	eors	r2, r3
   193f0:	beq.w	1954e <reada_for_search@@Base+0x1c6>
   193f4:	blx	8708 <__stack_chk_fail@plt>
   193f8:	ldr	r3, [sp, #24]
   193fa:	movs	r4, #0
   193fc:	ldr.w	r3, [r3, #192]	; 0xc0
   19400:	strd	sl, fp, [sp, #8]
   19404:	str	r0, [sp, #28]
   19406:	str	r3, [sp, #60]	; 0x3c
   19408:	movs	r3, #0
   1940a:	strd	r3, r4, [sp, #16]
   1940e:	ldr	r3, [sp, #56]	; 0x38
   19410:	cmp	r3, #0
   19412:	bge.n	194ae <reada_for_search@@Base+0x126>
   19414:	cmp	r6, #0
   19416:	beq.n	193e2 <reada_for_search@@Base+0x5a>
   19418:	subs	r6, #1
   1941a:	ldr	r3, [sp, #32]
   1941c:	ldrsb.w	r3, [r3, #64]	; 0x40
   19420:	cmp	r3, #0
   19422:	blt.n	194ba <reada_for_search@@Base+0x132>
   19424:	ldr	r2, [sp, #36]	; 0x24
   19426:	add.w	r3, r6, r6, lsl #5
   1942a:	adds	r3, #101	; 0x65
   1942c:	add	r3, r2
   1942e:	mov	r2, r3
   19430:	ldr.w	r4, [r2, #17]!
   19434:	ldr	r5, [r2, #4]
   19436:	cmp	r5, fp
   19438:	it	eq
   1943a:	cmpeq	r4, sl
   1943c:	bcs.n	194de <reada_for_search@@Base+0x156>
   1943e:	subs.w	r2, sl, r4
   19442:	str	r2, [sp, #40]	; 0x28
   19444:	sbc.w	r2, fp, r5
   19448:	str	r2, [sp, #44]	; 0x2c
   1944a:	ldrd	r7, r8, [sp, #40]	; 0x28
   1944e:	movs	r2, #0
   19450:	mov.w	r1, #32768	; 0x8000
   19454:	cmp	r2, r8
   19456:	it	eq
   19458:	cmpeq	r1, r7
   1945a:	bcs.n	1950a <reada_for_search@@Base+0x182>
   1945c:	ldrd	r1, r2, [sp, #8]
   19460:	cmp	r2, r5
   19462:	it	eq
   19464:	cmpeq	r1, r4
   19466:	bcc.n	194ea <reada_for_search@@Base+0x162>
   19468:	ldr	r3, [sp, #28]
   1946a:	adds	r3, #1
   1946c:	str	r3, [sp, #28]
   1946e:	ldr	r3, [sp, #32]
   19470:	ldrsb.w	r3, [r3, #64]	; 0x40
   19474:	cmp	r3, #1
   19476:	bgt.n	19532 <reada_for_search@@Base+0x1aa>
   19478:	ldrd	r0, r1, [sp, #16]
   1947c:	movs	r3, #0
   1947e:	mov.w	r2, #262144	; 0x40000
   19482:	cmp	r3, r1
   19484:	it	eq
   19486:	cmpeq	r2, r0
   19488:	bcc.n	193e2 <reada_for_search@@Base+0x5a>
   1948a:	ldr	r3, [sp, #28]
   1948c:	cmp	r3, #32
   1948e:	bhi.n	193e2 <reada_for_search@@Base+0x5a>
   19490:	cmp	r5, fp
   19492:	ldrd	r2, r3, [sp, #8]
   19496:	it	eq
   19498:	cmpeq	r4, sl
   1949a:	itt	cc
   1949c:	movcc	sl, r4
   1949e:	movcc	fp, r5
   194a0:	cmp	r3, r5
   194a2:	it	eq
   194a4:	cmpeq	r2, r4
   194a6:	bcs.n	1940e <reada_for_search@@Base+0x86>
   194a8:	strd	r4, r5, [sp, #8]
   194ac:	b.n	1940e <reada_for_search@@Base+0x86>
   194ae:	beq.n	1941a <reada_for_search@@Base+0x92>
   194b0:	ldr	r3, [sp, #60]	; 0x3c
   194b2:	adds	r6, #1
   194b4:	cmp	r6, r3
   194b6:	bcc.n	1941a <reada_for_search@@Base+0x92>
   194b8:	b.n	193e2 <reada_for_search@@Base+0x5a>
   194ba:	ldrd	r3, r4, [sp, #128]	; 0x80
   194be:	orrs	r3, r4
   194c0:	beq.n	19424 <reada_for_search@@Base+0x9c>
   194c2:	ldr	r0, [sp, #24]
   194c4:	add	r1, sp, #64	; 0x40
   194c6:	mov	r2, r6
   194c8:	bl	18052 <rb_free_nodes@@Base+0x54>
   194cc:	ldrd	r2, r3, [sp, #64]	; 0x40
   194d0:	ldrd	r0, r1, [sp, #128]	; 0x80
   194d4:	cmp	r1, r3
   194d6:	it	eq
   194d8:	cmpeq	r0, r2
   194da:	beq.n	19424 <reada_for_search@@Base+0x9c>
   194dc:	b.n	193e2 <reada_for_search@@Base+0x5a>
   194de:	ldrd	r1, r2, [sp, #8]
   194e2:	cmp	r2, r5
   194e4:	it	eq
   194e6:	cmpeq	r1, r4
   194e8:	bcs.n	1950a <reada_for_search@@Base+0x182>
   194ea:	ldr	r2, [sp, #8]
   194ec:	mov.w	r1, #32768	; 0x8000
   194f0:	subs	r2, r4, r2
   194f2:	str	r2, [sp, #48]	; 0x30
   194f4:	ldr	r2, [sp, #12]
   194f6:	sbc.w	r2, r5, r2
   194fa:	str	r2, [sp, #52]	; 0x34
   194fc:	ldrd	r7, r8, [sp, #48]	; 0x30
   19500:	movs	r2, #0
   19502:	cmp	r2, r8
   19504:	it	eq
   19506:	cmpeq	r1, r7
   19508:	bcc.n	19468 <reada_for_search@@Base+0xe0>
   1950a:	ldr.w	r2, [r3, #25]!
   1950e:	mov	r0, r9
   19510:	ldr	r3, [r3, #4]
   19512:	strd	r2, r3, [sp]
   19516:	mov	r2, r4
   19518:	mov	r3, r5
   1951a:	bl	1dc34 <readahead_tree_block@@Base>
   1951e:	ldrd	r1, r2, [sp, #16]
   19522:	ldr.w	r3, [r9, #384]	; 0x180
   19526:	adds	r1, r1, r3
   19528:	adc.w	r2, r2, #0
   1952c:	strd	r1, r2, [sp, #16]
   19530:	b.n	19468 <reada_for_search@@Base+0xe0>
   19532:	ldrd	r0, r1, [sp, #16]
   19536:	movs	r3, #0
   19538:	mov.w	r2, #1048576	; 0x100000
   1953c:	cmp	r3, r1
   1953e:	it	eq
   19540:	cmpeq	r2, r0
   19542:	bcc.w	193e2 <reada_for_search@@Base+0x5a>
   19546:	ldr	r3, [sp, #28]
   19548:	cmp	r3, #129	; 0x81
   1954a:	bne.n	19490 <reada_for_search@@Base+0x108>
   1954c:	b.n	193e2 <reada_for_search@@Base+0x5a>
   1954e:	add	sp, #92	; 0x5c
   19550:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19554:	cbnz	r0, 19592 <btrfs_fixup_low_keys@@Base+0x32>
   19556:	movs	r4, r0
   19558:	lsls	r0, r5, #8
   1955a:	movs	r0, r0
   1955c:	cbnz	r2, 19586 <btrfs_fixup_low_keys@@Base+0x26>
   1955e:	movs	r4, r0

00019560 <btrfs_fixup_low_keys@@Base>:
   19560:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   19564:	add.w	r4, r1, r3, lsl #2
   19568:	mov	r6, r2
   1956a:	mov	r5, r3
   1956c:	cmp	r5, #7
   1956e:	ble.n	19574 <btrfs_fixup_low_keys@@Base+0x14>
   19570:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   19574:	ldr	r0, [r4, #0]
   19576:	mov	r8, r4
   19578:	ldr	r7, [r4, #32]
   1957a:	cmp	r0, #0
   1957c:	beq.n	19570 <btrfs_fixup_low_keys@@Base+0x10>
   1957e:	mov	r2, r7
   19580:	mov	r1, r6
   19582:	bl	1802e <rb_free_nodes@@Base+0x30>
   19586:	ldr.w	r0, [r8]
   1958a:	adds	r4, #4
   1958c:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   19590:	cmp	r7, #0
   19592:	bne.n	19570 <btrfs_fixup_low_keys@@Base+0x10>
   19594:	adds	r5, #1
   19596:	b.n	1956c <btrfs_fixup_low_keys@@Base+0xc>

00019598 <btrfs_set_item_key_safe@@Base>:
   19598:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1959c:	mov	r5, r2
   1959e:	ldr	r2, [pc, #188]	; (1965c <btrfs_set_item_key_safe@@Base+0xc4>)
   195a0:	sub	sp, #28
   195a2:	ldr	r3, [pc, #188]	; (19660 <btrfs_set_item_key_safe@@Base+0xc8>)
   195a4:	mov	r9, r0
   195a6:	add	r2, pc
   195a8:	ldr	r4, [r1, #32]
   195aa:	ldr.w	r8, [r1]
   195ae:	mov	r7, r1
   195b0:	ldr	r3, [r2, r3]
   195b2:	cmp	r4, #0
   195b4:	mov	r6, sp
   195b6:	ldr	r3, [r3, #0]
   195b8:	str	r3, [sp, #20]
   195ba:	mov.w	r3, #0
   195be:	bgt.n	195fe <btrfs_set_item_key_safe@@Base+0x66>
   195c0:	ldr.w	r3, [r8, #192]	; 0xc0
   195c4:	subs	r3, #1
   195c6:	cmp	r3, r4
   195c8:	bhi.n	1962c <btrfs_set_item_key_safe@@Base+0x94>
   195ca:	ldr.w	r3, [r5, #13]
   195ce:	mov	r0, r8
   195d0:	ldr.w	r2, [r5, #9]
   195d4:	mov	r1, r6
   195d6:	str.w	r3, [sp, #13]
   195da:	ldrb	r3, [r5, #8]
   195dc:	str.w	r2, [sp, #9]
   195e0:	ldr	r2, [r5, #0]
   195e2:	strb.w	r3, [sp, #8]
   195e6:	ldr	r3, [r5, #4]
   195e8:	strd	r2, r3, [sp]
   195ec:	mov	r2, r4
   195ee:	bl	1803a <rb_free_nodes@@Base+0x3c>
   195f2:	mov	r0, r8
   195f4:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   195f8:	cbz	r4, 19644 <btrfs_set_item_key_safe@@Base+0xac>
   195fa:	movs	r4, #0
   195fc:	b.n	19618 <btrfs_set_item_key_safe@@Base+0x80>
   195fe:	subs	r2, r4, #1
   19600:	mov	r1, r6
   19602:	mov	r0, r8
   19604:	bl	18046 <rb_free_nodes@@Base+0x48>
   19608:	mov	r1, r5
   1960a:	mov	r0, r6
   1960c:	bl	190c2 <btrfs_comp_cpu_keys@@Base+0x56>
   19610:	cmp	r0, #0
   19612:	blt.n	195c0 <btrfs_set_item_key_safe@@Base+0x28>
   19614:	mov.w	r4, #4294967295	; 0xffffffff
   19618:	ldr	r2, [pc, #72]	; (19664 <btrfs_set_item_key_safe@@Base+0xcc>)
   1961a:	ldr	r3, [pc, #68]	; (19660 <btrfs_set_item_key_safe@@Base+0xc8>)
   1961c:	add	r2, pc
   1961e:	ldr	r3, [r2, r3]
   19620:	ldr	r2, [r3, #0]
   19622:	ldr	r3, [sp, #20]
   19624:	eors	r2, r3
   19626:	beq.n	19652 <btrfs_set_item_key_safe@@Base+0xba>
   19628:	blx	8708 <__stack_chk_fail@plt>
   1962c:	adds	r2, r4, #1
   1962e:	mov	r1, r6
   19630:	mov	r0, r8
   19632:	bl	18046 <rb_free_nodes@@Base+0x48>
   19636:	mov	r1, r5
   19638:	mov	r0, r6
   1963a:	bl	190c2 <btrfs_comp_cpu_keys@@Base+0x56>
   1963e:	cmp	r0, #0
   19640:	bgt.n	195ca <btrfs_set_item_key_safe@@Base+0x32>
   19642:	b.n	19614 <btrfs_set_item_key_safe@@Base+0x7c>
   19644:	movs	r3, #1
   19646:	mov	r2, r6
   19648:	mov	r1, r7
   1964a:	mov	r0, r9
   1964c:	bl	19560 <btrfs_fixup_low_keys@@Base>
   19650:	b.n	19618 <btrfs_set_item_key_safe@@Base+0x80>
   19652:	mov	r0, r4
   19654:	add	sp, #28
   19656:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1965a:	nop
   1965c:			; <UNDEFINED> instruction: 0xb7da
   1965e:	movs	r4, r0
   19660:	lsls	r0, r5, #8
   19662:	movs	r0, r0
   19664:			; <UNDEFINED> instruction: 0xb764
   19666:	movs	r4, r0

00019668 <btrfs_set_item_key_unsafe@@Base>:
   19668:	push	{r4, r5, r6, r7, lr}
   1966a:	mov	r4, r1
   1966c:	ldr	r1, [pc, #108]	; (196dc <btrfs_set_item_key_unsafe@@Base+0x74>)
   1966e:	sub	sp, #36	; 0x24
   19670:	ldr	r3, [pc, #108]	; (196e0 <btrfs_set_item_key_unsafe@@Base+0x78>)
   19672:	add	r6, sp, #8
   19674:	add	r1, pc
   19676:	ldr	r7, [r4, #32]
   19678:	mov	r5, r0
   1967a:	ldr	r0, [r4, #0]
   1967c:	ldr	r3, [r1, r3]
   1967e:	ldr	r3, [r3, #0]
   19680:	str	r3, [sp, #28]
   19682:	mov.w	r3, #0
   19686:	ldr.w	r3, [r2, #13]
   1968a:	ldr.w	r1, [r2, #9]
   1968e:	str	r0, [sp, #4]
   19690:	str.w	r3, [sp, #21]
   19694:	ldrb	r3, [r2, #8]
   19696:	str.w	r1, [sp, #17]
   1969a:	ldr	r1, [r2, #0]
   1969c:	strb.w	r3, [sp, #16]
   196a0:	ldr	r3, [r2, #4]
   196a2:	mov	r2, r7
   196a4:	strd	r1, r3, [sp, #8]
   196a8:	mov	r1, r6
   196aa:	bl	1803a <rb_free_nodes@@Base+0x3c>
   196ae:	ldr	r0, [sp, #4]
   196b0:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   196b4:	cbnz	r7, 196c2 <btrfs_set_item_key_unsafe@@Base+0x5a>
   196b6:	movs	r3, #1
   196b8:	mov	r2, r6
   196ba:	mov	r1, r4
   196bc:	mov	r0, r5
   196be:	bl	19560 <btrfs_fixup_low_keys@@Base>
   196c2:	ldr	r2, [pc, #32]	; (196e4 <btrfs_set_item_key_unsafe@@Base+0x7c>)
   196c4:	ldr	r3, [pc, #24]	; (196e0 <btrfs_set_item_key_unsafe@@Base+0x78>)
   196c6:	add	r2, pc
   196c8:	ldr	r3, [r2, r3]
   196ca:	ldr	r2, [r3, #0]
   196cc:	ldr	r3, [sp, #28]
   196ce:	eors	r2, r3
   196d0:	beq.n	196d6 <btrfs_set_item_key_unsafe@@Base+0x6e>
   196d2:	blx	8708 <__stack_chk_fail@plt>
   196d6:	add	sp, #36	; 0x24
   196d8:	pop	{r4, r5, r6, r7, pc}
   196da:	nop
   196dc:			; <UNDEFINED> instruction: 0xb70c
   196de:	movs	r4, r0
   196e0:	lsls	r0, r5, #8
   196e2:	movs	r0, r0
   196e4:			; <UNDEFINED> instruction: 0xb6ba
   196e6:	movs	r4, r0

000196e8 <btrfs_leaf_free_space@@Base>:
   196e8:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   196ec:	mov	r4, r0
   196ee:	ldr	r3, [r0, #92]	; 0x5c
   196f0:	ldr	r7, [pc, #104]	; (1975c <btrfs_leaf_free_space@@Base+0x74>)
   196f2:	ldr.w	r6, [r0, #192]	; 0xc0
   196f6:	add	r7, pc
   196f8:	cbz	r3, 19706 <btrfs_leaf_free_space@@Base+0x1e>
   196fa:	ldr.w	r3, [r3, #384]	; 0x180
   196fe:	ldr	r2, [r0, #76]	; 0x4c
   19700:	subs	r3, r3, r2
   19702:	it	ne
   19704:	movne	r3, #1
   19706:	ldr	r1, [pc, #88]	; (19760 <btrfs_leaf_free_space@@Base+0x78>)
   19708:	movw	r2, #1767	; 0x6e7
   1970c:	ldr	r0, [pc, #84]	; (19764 <btrfs_leaf_free_space@@Base+0x7c>)
   1970e:	add	r1, pc
   19710:	adds	r1, #211	; 0xd3
   19712:	add	r0, pc
   19714:	bl	18114 <rb_free_nodes@@Base+0x116>
   19718:	ldr	r3, [r4, #76]	; 0x4c
   1971a:	mov	r2, r6
   1971c:	movs	r1, #0
   1971e:	mov	r0, r4
   19720:	sub.w	r8, r3, #101	; 0x65
   19724:	bl	18460 <rb_free_nodes@@Base+0x462>
   19728:	subs.w	r5, r8, r0
   1972c:	bpl.n	19754 <btrfs_leaf_free_space@@Base+0x6c>
   1972e:	ldr	r3, [pc, #56]	; (19768 <btrfs_leaf_free_space@@Base+0x80>)
   19730:	mov	r2, r6
   19732:	movs	r1, #0
   19734:	mov	r0, r4
   19736:	ldr	r3, [r7, r3]
   19738:	ldr	r7, [r3, #0]
   1973a:	bl	18460 <rb_free_nodes@@Base+0x462>
   1973e:	ldr	r2, [pc, #44]	; (1976c <btrfs_leaf_free_space@@Base+0x84>)
   19740:	mov	r3, r5
   19742:	movs	r1, #1
   19744:	str.w	r8, [sp]
   19748:	add	r2, pc
   1974a:	strd	r0, r6, [sp, #4]
   1974e:	mov	r0, r7
   19750:	blx	8a64 <__fprintf_chk@plt+0x4>
   19754:	mov	r0, r5
   19756:	add	sp, #16
   19758:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1975c:			; <UNDEFINED> instruction: 0xb68a
   1975e:	movs	r4, r0
   19760:	subs	r0, #54	; 0x36
   19762:	movs	r2, r0
   19764:	adds	r3, #191	; 0xbf
   19766:	movs	r2, r0
   19768:	lsls	r0, r7, #8
   1976a:	movs	r0, r0
   1976c:	adds	r3, #191	; 0xbf
   1976e:	movs	r2, r0

00019770 <btrfs_check_leaf@@Base>:
   19770:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19774:	mov	r4, r2
   19776:	ldr	r2, [pc, #640]	; (199f8 <btrfs_check_leaf@@Base+0x288>)
   19778:	sub	sp, #84	; 0x54
   1977a:	ldr	r3, [pc, #640]	; (199fc <btrfs_check_leaf@@Base+0x28c>)
   1977c:	mov	r8, r0
   1977e:	add	r2, pc
   19780:	ldr.w	sl, [r4, #192]	; 0xc0
   19784:	ldr	r7, [pc, #632]	; (19a00 <btrfs_check_leaf@@Base+0x290>)
   19786:	mov	r6, r1
   19788:	ldr	r3, [r2, r3]
   1978a:	ldr	r2, [r4, #76]	; 0x4c
   1978c:	add	r7, pc
   1978e:	ldr	r3, [r3, #0]
   19790:	str	r3, [sp, #76]	; 0x4c
   19792:	mov.w	r3, #0
   19796:	movs	r3, #25
   19798:	mul.w	r3, r3, sl
   1979c:	cmp	r3, r2
   1979e:	bls.n	19806 <btrfs_check_leaf@@Base+0x96>
   197a0:	ldr	r3, [pc, #608]	; (19a04 <btrfs_check_leaf@@Base+0x294>)
   197a2:	movs	r1, #1
   197a4:	movs	r5, #1
   197a6:	ldr	r0, [r7, r3]
   197a8:	ldrd	r2, r3, [r4, #40]	; 0x28
   197ac:	strd	r2, r3, [sp]
   197b0:	ldr	r2, [pc, #596]	; (19a08 <btrfs_check_leaf@@Base+0x298>)
   197b2:	ldr	r0, [r0, #0]
   197b4:	add	r2, pc
   197b6:	blx	8a64 <__fprintf_chk@plt+0x4>
   197ba:	ldr.w	r3, [r4, #188]	; 0xbc
   197be:	ldr.w	r2, [r4, #184]	; 0xb8
   197c2:	cmp	r3, #0
   197c4:	it	eq
   197c6:	cmpeq	r2, #2
   197c8:	bne.n	19868 <btrfs_check_leaf@@Base+0xf8>
   197ca:	add	r1, sp, #36	; 0x24
   197cc:	cmp	r6, #0
   197ce:	beq.w	199e2 <btrfs_check_leaf@@Base+0x272>
   197d2:	ldr.w	r3, [r6, #13]
   197d6:	ldr.w	r2, [r6, #9]
   197da:	str.w	r3, [sp, #49]	; 0x31
   197de:	ldrb	r3, [r6, #8]
   197e0:	str.w	r2, [sp, #45]	; 0x2d
   197e4:	ldr	r2, [r6, #0]
   197e6:	strb.w	r3, [sp, #44]	; 0x2c
   197ea:	ldr	r3, [r6, #4]
   197ec:	strd	r2, r3, [sp, #36]	; 0x24
   197f0:	ldr	r2, [r4, #76]	; 0x4c
   197f2:	movs	r3, #0
   197f4:	mov	r0, r8
   197f6:	str	r3, [sp, #8]
   197f8:	strd	r2, r3, [sp]
   197fc:	ldrd	r2, r3, [r4, #40]	; 0x28
   19800:	bl	2dce8 <btrfs_add_corrupt_extent_record@@Base>
   19804:	b.n	19868 <btrfs_check_leaf@@Base+0xf8>
   19806:	ldrb.w	r5, [r4, #196]	; 0xc4
   1980a:	cbz	r5, 1982c <btrfs_check_leaf@@Base+0xbc>
   1980c:	ldr	r3, [pc, #500]	; (19a04 <btrfs_check_leaf@@Base+0x294>)
   1980e:	movs	r5, #4
   19810:	ldr.w	r1, [r4, #144]	; 0x90
   19814:	ldr.w	r2, [r4, #148]	; 0x94
   19818:	ldr	r3, [r7, r3]
   1981a:	strd	r1, r2, [sp]
   1981e:	movs	r1, #1
   19820:	ldr	r2, [pc, #488]	; (19a0c <btrfs_check_leaf@@Base+0x29c>)
   19822:	ldr	r0, [r3, #0]
   19824:	add	r2, pc
   19826:	blx	8a64 <__fprintf_chk@plt+0x4>
   1982a:	b.n	197ba <btrfs_check_leaf@@Base+0x4a>
   1982c:	mov	r0, r4
   1982e:	bl	196e8 <btrfs_leaf_free_space@@Base>
   19832:	cmp	r0, #0
   19834:	bge.n	19860 <btrfs_check_leaf@@Base+0xf0>
   19836:	ldr	r3, [pc, #460]	; (19a04 <btrfs_check_leaf@@Base+0x294>)
   19838:	mov	r0, r4
   1983a:	ldr.w	r9, [r4, #144]	; 0x90
   1983e:	ldr	r3, [r7, r3]
   19840:	ldr.w	r7, [r4, #148]	; 0x94
   19844:	ldr	r5, [r3, #0]
   19846:	bl	196e8 <btrfs_leaf_free_space@@Base>
   1984a:	ldr	r2, [pc, #452]	; (19a10 <btrfs_check_leaf@@Base+0x2a0>)
   1984c:	movs	r1, #1
   1984e:	strd	r9, r7, [sp]
   19852:	add	r2, pc
   19854:	str	r0, [sp, #8]
   19856:	mov	r0, r5
   19858:	blx	8a64 <__fprintf_chk@plt+0x4>
   1985c:	movs	r5, #5
   1985e:	b.n	197ba <btrfs_check_leaf@@Base+0x4a>
   19860:	cmp.w	sl, #0
   19864:	bne.n	1987e <btrfs_check_leaf@@Base+0x10e>
   19866:	movs	r5, #0
   19868:	ldr	r2, [pc, #424]	; (19a14 <btrfs_check_leaf@@Base+0x2a4>)
   1986a:	ldr	r3, [pc, #400]	; (199fc <btrfs_check_leaf@@Base+0x28c>)
   1986c:	add	r2, pc
   1986e:	ldr	r3, [r2, r3]
   19870:	ldr	r2, [r3, #0]
   19872:	ldr	r3, [sp, #76]	; 0x4c
   19874:	eors	r2, r3
   19876:	beq.w	199f0 <btrfs_check_leaf@@Base+0x280>
   1987a:	blx	8708 <__stack_chk_fail@plt>
   1987e:	add.w	r9, sp, #56	; 0x38
   19882:	mov	r2, r5
   19884:	mov	r0, r4
   19886:	mov	r1, r9
   19888:	bl	18046 <rb_free_nodes@@Base+0x48>
   1988c:	cmp	r6, #0
   1988e:	beq.w	199cc <btrfs_check_leaf@@Base+0x25c>
   19892:	ldrb	r5, [r6, #8]
   19894:	cmp	r5, #0
   19896:	beq.w	199ce <btrfs_check_leaf@@Base+0x25e>
   1989a:	movs	r2, #17
   1989c:	mov	r1, r9
   1989e:	mov	r0, r6
   198a0:	blx	86a0 <memcmp@plt+0x4>
   198a4:	mov	r5, r0
   198a6:	cmp	r0, #0
   198a8:	beq.w	199ce <btrfs_check_leaf@@Base+0x25e>
   198ac:	ldr	r3, [pc, #340]	; (19a04 <btrfs_check_leaf@@Base+0x294>)
   198ae:	movs	r5, #2
   198b0:	ldr.w	r1, [r4, #144]	; 0x90
   198b4:	ldr.w	r2, [r4, #148]	; 0x94
   198b8:	ldr	r3, [r7, r3]
   198ba:	strd	r1, r2, [sp]
   198be:	movs	r1, #1
   198c0:	ldr	r2, [pc, #340]	; (19a18 <btrfs_check_leaf@@Base+0x2a8>)
   198c2:	ldr	r0, [r3, #0]
   198c4:	add	r2, pc
   198c6:	blx	8a64 <__fprintf_chk@plt+0x4>
   198ca:	b.n	197ba <btrfs_check_leaf@@Base+0x4a>
   198cc:	mov	r2, r5
   198ce:	mov	r1, r9
   198d0:	mov	r0, r4
   198d2:	bl	18046 <rb_free_nodes@@Base+0x48>
   198d6:	adds	r2, r5, #1
   198d8:	mov	r1, fp
   198da:	mov	r0, r4
   198dc:	str	r2, [sp, #24]
   198de:	bl	184b0 <rb_free_nodes@@Base+0x4b2>
   198e2:	mov	r1, fp
   198e4:	mov	r0, r9
   198e6:	bl	190c2 <btrfs_comp_cpu_keys@@Base+0x56>
   198ea:	ldr	r2, [sp, #24]
   198ec:	cmp	r0, #0
   198ee:	blt.n	19908 <btrfs_check_leaf@@Base+0x198>
   198f0:	ldr	r3, [pc, #272]	; (19a04 <btrfs_check_leaf@@Base+0x294>)
   198f2:	movs	r1, #1
   198f4:	ldr	r0, [r7, r3]
   198f6:	mov	r3, r5
   198f8:	str	r2, [sp, #0]
   198fa:	movs	r5, #3
   198fc:	ldr	r2, [pc, #284]	; (19a1c <btrfs_check_leaf@@Base+0x2ac>)
   198fe:	ldr	r0, [r0, #0]
   19900:	add	r2, pc
   19902:	blx	8a64 <__fprintf_chk@plt+0x4>
   19906:	b.n	197ba <btrfs_check_leaf@@Base+0x4a>
   19908:	movs	r3, #25
   1990a:	mov	r1, r2
   1990c:	mla	r3, r3, r5, r4
   19910:	mov	r0, r4
   19912:	str	r2, [sp, #24]
   19914:	ldr.w	r3, [r3, #214]	; 0xd6
   19918:	str	r3, [sp, #28]
   1991a:	bl	1801c <rb_free_nodes@@Base+0x1e>
   1991e:	ldr	r3, [sp, #28]
   19920:	ldr	r2, [sp, #24]
   19922:	cmp	r0, r3
   19924:	beq.n	1993c <btrfs_check_leaf@@Base+0x1cc>
   19926:	ldr	r2, [pc, #220]	; (19a04 <btrfs_check_leaf@@Base+0x294>)
   19928:	movs	r1, #1
   1992a:	ldr	r5, [r7, r2]
   1992c:	ldr	r2, [pc, #240]	; (19a20 <btrfs_check_leaf@@Base+0x2b0>)
   1992e:	str	r0, [sp, #0]
   19930:	ldr	r0, [r5, #0]
   19932:	add	r2, pc
   19934:	blx	8a64 <__fprintf_chk@plt+0x4>
   19938:	movs	r5, #6
   1993a:	b.n	197ba <btrfs_check_leaf@@Base+0x4a>
   1993c:	cbnz	r5, 19964 <btrfs_check_leaf@@Base+0x1f4>
   1993e:	ldr.w	r2, [r4, #218]	; 0xda
   19942:	ldr.w	r3, [r4, #214]	; 0xd6
   19946:	add	r3, r2
   19948:	ldr.w	r2, [r8, #384]	; 0x180
   1994c:	subs	r2, #101	; 0x65
   1994e:	cmp	r2, r3
   19950:	beq.n	19962 <btrfs_check_leaf@@Base+0x1f2>
   19952:	ldr	r1, [pc, #176]	; (19a04 <btrfs_check_leaf@@Base+0x294>)
   19954:	ldr	r0, [r7, r1]
   19956:	movs	r1, #1
   19958:	str	r2, [sp, #0]
   1995a:	ldr	r2, [pc, #200]	; (19a24 <btrfs_check_leaf@@Base+0x2b4>)
   1995c:	ldr	r0, [r0, #0]
   1995e:	add	r2, pc
   19960:	b.n	19934 <btrfs_check_leaf@@Base+0x1c4>
   19962:	movs	r2, #1
   19964:	mov	r5, r2
   19966:	cmp.w	sl, #1
   1996a:	bls.n	19972 <btrfs_check_leaf@@Base+0x202>
   1996c:	ldr	r3, [sp, #20]
   1996e:	cmp	r3, r5
   19970:	bhi.n	198cc <btrfs_check_leaf@@Base+0x15c>
   19972:	movs	r5, #0
   19974:	mov	r1, r5
   19976:	mov	r0, r4
   19978:	bl	1801c <rb_free_nodes@@Base+0x1e>
   1997c:	ldr.w	r3, [r8, #384]	; 0x180
   19980:	subs	r3, #101	; 0x65
   19982:	cmp	r0, r3
   19984:	bls.n	199da <btrfs_check_leaf@@Base+0x26a>
   19986:	movs	r2, #0
   19988:	mov	r1, r9
   1998a:	mov	r0, r4
   1998c:	bl	18046 <rb_free_nodes@@Base+0x48>
   19990:	mov	r0, r9
   19992:	bl	25324 <btrfs_print_key@@Base>
   19996:	ldr	r3, [pc, #144]	; (19a28 <btrfs_check_leaf@@Base+0x2b8>)
   19998:	ldr	r3, [r7, r3]
   1999a:	ldr	r0, [r3, #0]
   1999c:	blx	85f4 <fflush@plt>
   199a0:	ldr	r3, [pc, #96]	; (19a04 <btrfs_check_leaf@@Base+0x294>)
   199a2:	mov	r1, r5
   199a4:	mov	r0, r4
   199a6:	ldr	r3, [r7, r3]
   199a8:	ldr	r7, [r3, #0]
   199aa:	bl	1801c <rb_free_nodes@@Base+0x1e>
   199ae:	ldr.w	r3, [r8, #384]	; 0x180
   199b2:	movs	r2, #0
   199b4:	movs	r1, #1
   199b6:	subs	r3, #101	; 0x65
   199b8:	strd	r3, r2, [sp, #8]
   199bc:	strd	r0, r2, [sp]
   199c0:	mov	r0, r7
   199c2:	ldr	r2, [pc, #104]	; (19a2c <btrfs_check_leaf@@Base+0x2bc>)
   199c4:	add	r2, pc
   199c6:	blx	8a64 <__fprintf_chk@plt+0x4>
   199ca:	b.n	19938 <btrfs_check_leaf@@Base+0x1c8>
   199cc:	mov	r5, r6
   199ce:	add.w	r3, sl, #4294967295	; 0xffffffff
   199d2:	add.w	fp, sp, #36	; 0x24
   199d6:	str	r3, [sp, #20]
   199d8:	b.n	19966 <btrfs_check_leaf@@Base+0x1f6>
   199da:	adds	r5, #1
   199dc:	cmp	r5, sl
   199de:	bne.n	19974 <btrfs_check_leaf@@Base+0x204>
   199e0:	b.n	19866 <btrfs_check_leaf@@Base+0xf6>
   199e2:	mov	r2, r6
   199e4:	mov	r0, r4
   199e6:	str	r1, [sp, #20]
   199e8:	bl	184b0 <rb_free_nodes@@Base+0x4b2>
   199ec:	ldr	r1, [sp, #20]
   199ee:	b.n	197f0 <btrfs_check_leaf@@Base+0x80>
   199f0:	mov	r0, r5
   199f2:	add	sp, #84	; 0x54
   199f4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   199f8:			; <UNDEFINED> instruction: 0xb602
   199fa:	movs	r4, r0
   199fc:	lsls	r0, r5, #8
   199fe:	movs	r0, r0
   19a00:	push	{r2, r4, r5, r6, r7, lr}
   19a02:	movs	r4, r0
   19a04:	lsls	r0, r7, #8
   19a06:	movs	r0, r0
   19a08:	adds	r3, #146	; 0x92
   19a0a:	movs	r2, r0
   19a0c:	adds	r3, #64	; 0x40
   19a0e:	movs	r2, r0
   19a10:	adds	r3, #43	; 0x2b
   19a12:	movs	r2, r0
   19a14:	push	{r2, r4, lr}
   19a16:	movs	r4, r0
   19a18:	adds	r2, #220	; 0xdc
   19a1a:	movs	r2, r0
   19a1c:	adds	r2, #192	; 0xc0
   19a1e:	movs	r2, r0
   19a20:	adds	r2, #166	; 0xa6
   19a22:	movs	r2, r0
   19a24:	adds	r2, #147	; 0x93
   19a26:	movs	r2, r0
   19a28:	lsls	r4, r3, #9
   19a2a:	movs	r0, r0
   19a2c:	adds	r2, #72	; 0x48
   19a2e:	movs	r2, r0
   19a30:	push	{r4, r5, r6, r7, lr}
   19a32:	mov	r5, r2
   19a34:	ldr	r2, [pc, #100]	; (19a9c <btrfs_check_leaf@@Base+0x32c>)
   19a36:	sub	sp, #28
   19a38:	ldr	r3, [pc, #100]	; (19aa0 <btrfs_check_leaf@@Base+0x330>)
   19a3a:	mov	r6, r0
   19a3c:	add	r2, pc
   19a3e:	mov	r4, r1
   19a40:	ldr	r3, [r2, r3]
   19a42:	ldr	r3, [r3, #0]
   19a44:	str	r3, [sp, #20]
   19a46:	mov.w	r3, #0
   19a4a:	add.w	r3, r1, r5, lsl #2
   19a4e:	ldr	r0, [r3, #4]
   19a50:	cbz	r0, 19a5e <btrfs_check_leaf@@Base+0x2ee>
   19a52:	mov	r7, sp
   19a54:	ldr	r2, [r3, #36]	; 0x24
   19a56:	mov	r1, r7
   19a58:	bl	18052 <rb_free_nodes@@Base+0x54>
   19a5c:	mov	r0, r7
   19a5e:	cbnz	r5, 19a88 <btrfs_check_leaf@@Base+0x318>
   19a60:	mov	r1, r0
   19a62:	ldr	r2, [r4, #0]
   19a64:	mov	r0, r6
   19a66:	bl	19770 <btrfs_check_leaf@@Base>
   19a6a:	ldr	r2, [pc, #56]	; (19aa4 <btrfs_check_leaf@@Base+0x334>)
   19a6c:	cmp	r0, #0
   19a6e:	ldr	r3, [pc, #48]	; (19aa0 <btrfs_check_leaf@@Base+0x330>)
   19a70:	add	r2, pc
   19a72:	ite	ne
   19a74:	mvnne.w	r0, #4
   19a78:	moveq	r0, #0
   19a7a:	ldr	r3, [r2, r3]
   19a7c:	ldr	r2, [r3, #0]
   19a7e:	ldr	r3, [sp, #20]
   19a80:	eors	r2, r3
   19a82:	beq.n	19a96 <btrfs_check_leaf@@Base+0x326>
   19a84:	blx	8708 <__stack_chk_fail@plt>
   19a88:	mov	r1, r0
   19a8a:	ldr.w	r2, [r4, r5, lsl #2]
   19a8e:	mov	r0, r6
   19a90:	bl	19120 <btrfs_check_node@@Base>
   19a94:	b.n	19a6a <btrfs_check_leaf@@Base+0x2fa>
   19a96:	add	sp, #28
   19a98:	pop	{r4, r5, r6, r7, pc}
   19a9a:	nop
   19a9c:	cbz	r4, 19af0 <btrfs_check_leaf@@Base+0x380>
   19a9e:	movs	r4, r0
   19aa0:	lsls	r0, r5, #8
   19aa2:	movs	r0, r0
   19aa4:	cbz	r0, 19aec <btrfs_check_leaf@@Base+0x37c>
   19aa6:	movs	r4, r0
   19aa8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19aac:	mov	r5, r2
   19aae:	vpush	{d8}
   19ab2:	mov	r7, r3
   19ab4:	ldr	r2, [pc, #596]	; (19d0c <btrfs_check_leaf@@Base+0x59c>)
   19ab6:	mov	r9, r0
   19ab8:	ldr	r3, [pc, #596]	; (19d10 <btrfs_check_leaf@@Base+0x5a0>)
   19aba:	add	r2, pc
   19abc:	ldr.w	r8, [r5, #4]
   19ac0:	sub	sp, #68	; 0x44
   19ac2:	str	r1, [sp, #16]
   19ac4:	ldr	r3, [r2, r3]
   19ac6:	ldr	r3, [r3, #0]
   19ac8:	str	r3, [sp, #60]	; 0x3c
   19aca:	mov.w	r3, #0
   19ace:	cmp.w	r8, #0
   19ad2:	beq.n	19b4c <btrfs_check_leaf@@Base+0x3dc>
   19ad4:	ldr.w	r3, [r8, #192]	; 0xc0
   19ad8:	ldr	r2, [r5, #36]	; 0x24
   19ada:	subs	r3, #1
   19adc:	cmp	r3, r2
   19ade:	bls.n	19b4c <btrfs_check_leaf@@Base+0x3dc>
   19ae0:	ldr.w	sl, [r1, #464]	; 0x1d0
   19ae4:	adds	r3, r2, #1
   19ae6:	mov	r1, r8
   19ae8:	ldr	r6, [r5, #0]
   19aea:	mov	r2, r3
   19aec:	vmov	s16, r3
   19af0:	mov	r0, sl
   19af2:	bl	1930e <read_node_slot@@Base>
   19af6:	mov	r4, r0
   19af8:	str	r0, [sp, #36]	; 0x24
   19afa:	bl	180ac <rb_free_nodes@@Base+0xae>
   19afe:	cbnz	r0, 19b20 <btrfs_check_leaf@@Base+0x3b0>
   19b00:	cmn.w	r4, #4096	; 0x1000
   19b04:	it	ls
   19b06:	mvnls.w	r4, #4
   19b0a:	ldr	r2, [pc, #520]	; (19d14 <btrfs_check_leaf@@Base+0x5a4>)
   19b0c:	ldr	r3, [pc, #512]	; (19d10 <btrfs_check_leaf@@Base+0x5a0>)
   19b0e:	add	r2, pc
   19b10:	ldr	r3, [r2, r3]
   19b12:	ldr	r2, [r3, #0]
   19b14:	ldr	r3, [sp, #60]	; 0x3c
   19b16:	eors	r2, r3
   19b18:	beq.w	19d00 <btrfs_check_leaf@@Base+0x590>
   19b1c:	blx	8708 <__stack_chk_fail@plt>
   19b20:	mov	r0, r4
   19b22:	bl	196e8 <btrfs_leaf_free_space@@Base>
   19b26:	cmp	r0, r7
   19b28:	bge.n	19b2e <btrfs_check_leaf@@Base+0x3be>
   19b2a:	ldr	r0, [sp, #36]	; 0x24
   19b2c:	b.n	19b48 <btrfs_check_leaf@@Base+0x3d8>
   19b2e:	add	r3, sp, #36	; 0x24
   19b30:	vstr	s16, [sp]
   19b34:	str	r3, [sp, #4]
   19b36:	mov	r0, r9
   19b38:	ldr	r2, [sp, #36]	; 0x24
   19b3a:	mov	r3, r8
   19b3c:	ldr	r1, [sp, #16]
   19b3e:	bl	18f84 <btrfs_cow_block@@Base>
   19b42:	mov	r4, r0
   19b44:	ldr	r0, [sp, #36]	; 0x24
   19b46:	cbz	r4, 19b50 <btrfs_check_leaf@@Base+0x3e0>
   19b48:	bl	17320 <free_extent_buffer@@Base>
   19b4c:	movs	r4, #1
   19b4e:	b.n	19b0a <btrfs_check_leaf@@Base+0x39a>
   19b50:	bl	196e8 <btrfs_leaf_free_space@@Base>
   19b54:	cmp	r7, r0
   19b56:	bgt.n	19b2a <btrfs_check_leaf@@Base+0x3ba>
   19b58:	ldr.w	r3, [r6, #192]	; 0xc0
   19b5c:	str	r3, [sp, #12]
   19b5e:	cmp	r3, #0
   19b60:	beq.n	19b2a <btrfs_check_leaf@@Base+0x3ba>
   19b62:	ldr	r3, [sp, #112]	; 0x70
   19b64:	adds	r7, #25
   19b66:	mov	fp, r4
   19b68:	mov	r1, r4
   19b6a:	rsb	lr, r3, #1
   19b6e:	ldr	r3, [sp, #12]
   19b70:	mov.w	r9, #25
   19b74:	subs	r2, r3, #1
   19b76:	cmp	r2, lr
   19b78:	bcs.w	19cbe <btrfs_check_leaf@@Base+0x54e>
   19b7c:	cmp.w	fp, #0
   19b80:	beq.n	19b2a <btrfs_check_leaf@@Base+0x3ba>
   19b82:	ldr	r3, [sp, #112]	; 0x70
   19b84:	cbnz	r3, 19ba0 <btrfs_check_leaf@@Base+0x430>
   19b86:	ldr	r3, [sp, #12]
   19b88:	cmp	r3, fp
   19b8a:	bne.n	19ba0 <btrfs_check_leaf@@Base+0x430>
   19b8c:	ldr	r1, [pc, #392]	; (19d18 <btrfs_check_leaf@@Base+0x5a8>)
   19b8e:	movs	r3, #1
   19b90:	ldr	r0, [pc, #392]	; (19d1c <btrfs_check_leaf@@Base+0x5ac>)
   19b92:	movw	r2, #1874	; 0x752
   19b96:	add	r1, pc
   19b98:	adds	r1, #233	; 0xe9
   19b9a:	add	r0, pc
   19b9c:	bl	1811e <rb_free_nodes@@Base+0x120>
   19ba0:	ldr	r3, [sp, #36]	; 0x24
   19ba2:	mov	r0, r6
   19ba4:	add.w	sl, sl, #384	; 0x180
   19ba8:	vmov	s15, r3
   19bac:	ldr.w	r3, [r3, #192]	; 0xc0
   19bb0:	str	r3, [sp, #20]
   19bb2:	ldr	r3, [sp, #12]
   19bb4:	sub.w	r9, r3, fp
   19bb8:	mov	r1, r9
   19bba:	bl	1801c <rb_free_nodes@@Base+0x1e>
   19bbe:	mov	r1, r6
   19bc0:	mov	r7, r0
   19bc2:	mov	r0, sl
   19bc4:	bl	180c0 <rb_free_nodes@@Base+0xc2>
   19bc8:	vmov	r1, s15
   19bcc:	subs	r2, r7, r0
   19bce:	strd	r2, r0, [sp, #24]
   19bd2:	mov	r0, sl
   19bd4:	bl	180c0 <rb_free_nodes@@Base+0xc2>
   19bd8:	ldr	r3, [sp, #28]
   19bda:	subs	r7, r3, r7
   19bdc:	ldr	r3, [sp, #16]
   19bde:	ldr.w	r3, [r3, #464]	; 0x1d0
   19be2:	ldr.w	r3, [r3, #384]	; 0x180
   19be6:	subs	r3, #101	; 0x65
   19be8:	add.w	r2, r0, #101	; 0x65
   19bec:	subs	r3, r3, r0
   19bee:	adds	r1, r2, r7
   19bf0:	vmov	r0, s15
   19bf4:	bl	17a8c <memmove_extent_buffer@@Base>
   19bf8:	ldr	r3, [sp, #16]
   19bfa:	mov	r1, r6
   19bfc:	mov	r0, sl
   19bfe:	ldr.w	r3, [r3, #464]	; 0x1d0
   19c02:	ldr.w	r2, [r3, #384]	; 0x180
   19c06:	add	r2, r7
   19c08:	str	r2, [sp, #28]
   19c0a:	bl	180c0 <rb_free_nodes@@Base+0xc2>
   19c0e:	ldr	r3, [sp, #24]
   19c10:	movs	r7, #25
   19c12:	ldr	r2, [sp, #28]
   19c14:	mul.w	sl, r7, fp
   19c18:	mov	r1, r6
   19c1a:	str	r3, [sp, #0]
   19c1c:	add.w	r3, r0, #101	; 0x65
   19c20:	ldr	r0, [sp, #36]	; 0x24
   19c22:	bl	17a42 <copy_extent_buffer@@Base>
   19c26:	ldr	r3, [sp, #20]
   19c28:	movs	r2, #101	; 0x65
   19c2a:	ldr	r0, [sp, #36]	; 0x24
   19c2c:	add.w	r1, sl, r2
   19c30:	muls	r3, r7
   19c32:	bl	17a8c <memmove_extent_buffer@@Base>
   19c36:	ldr	r0, [sp, #36]	; 0x24
   19c38:	mul.w	r3, r7, r9
   19c3c:	movs	r2, #101	; 0x65
   19c3e:	mov	r1, r6
   19c40:	str.w	sl, [sp]
   19c44:	adds	r3, #101	; 0x65
   19c46:	bl	17a42 <copy_extent_buffer@@Base>
   19c4a:	ldr	r3, [sp, #20]
   19c4c:	ldr	r2, [sp, #16]
   19c4e:	movs	r1, #0
   19c50:	add.w	r0, r3, fp
   19c54:	ldr	r3, [sp, #36]	; 0x24
   19c56:	adds	r3, #197	; 0xc5
   19c58:	str.w	r0, [r3, #-5]
   19c5c:	ldr.w	r2, [r2, #464]	; 0x1d0
   19c60:	ldr.w	r2, [r2, #384]	; 0x180
   19c64:	subs	r2, #101	; 0x65
   19c66:	cmp	r1, r0
   19c68:	bne.n	19ce8 <btrfs_check_leaf@@Base+0x578>
   19c6a:	str.w	r9, [r6, #192]	; 0xc0
   19c6e:	cmp.w	r9, #0
   19c72:	beq.n	19c7a <btrfs_check_leaf@@Base+0x50a>
   19c74:	mov	r0, r6
   19c76:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   19c7a:	ldr	r0, [sp, #36]	; 0x24
   19c7c:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   19c80:	add	r1, sp, #40	; 0x28
   19c82:	ldr	r0, [sp, #36]	; 0x24
   19c84:	movs	r2, #0
   19c86:	str	r1, [sp, #16]
   19c88:	bl	18046 <rb_free_nodes@@Base+0x48>
   19c8c:	vmov	r2, s16
   19c90:	mov	r0, r8
   19c92:	ldr	r1, [sp, #16]
   19c94:	bl	1802e <rb_free_nodes@@Base+0x30>
   19c98:	mov	r0, r8
   19c9a:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   19c9e:	ldr	r3, [r5, #32]
   19ca0:	cmp	r9, r3
   19ca2:	bhi.n	19cf8 <btrfs_check_leaf@@Base+0x588>
   19ca4:	ldr	r2, [sp, #12]
   19ca6:	ldr	r0, [r5, #0]
   19ca8:	subs	r3, r3, r2
   19caa:	add	r3, fp
   19cac:	str	r3, [r5, #32]
   19cae:	bl	17320 <free_extent_buffer@@Base>
   19cb2:	ldr	r3, [sp, #36]	; 0x24
   19cb4:	str	r3, [r5, #0]
   19cb6:	ldr	r3, [r5, #36]	; 0x24
   19cb8:	adds	r3, #1
   19cba:	str	r3, [r5, #36]	; 0x24
   19cbc:	b.n	19b0a <btrfs_check_leaf@@Base+0x39a>
   19cbe:	mla	ip, r9, r2, r6
   19cc2:	ldr	r3, [r5, #32]
   19cc4:	cmp	r3, r2
   19cc6:	it	eq
   19cc8:	addeq	r1, r1, r7
   19cca:	ldr.w	ip, [ip, #218]	; 0xda
   19cce:	add.w	ip, ip, #25
   19cd2:	add	r1, ip
   19cd4:	cmp	r1, r0
   19cd6:	bhi.w	19b7c <btrfs_check_leaf@@Base+0x40c>
   19cda:	add.w	fp, fp, #1
   19cde:	cmp	r2, #0
   19ce0:	beq.w	19b82 <btrfs_check_leaf@@Base+0x412>
   19ce4:	subs	r2, #1
   19ce6:	b.n	19b76 <btrfs_check_leaf@@Base+0x406>
   19ce8:	ldr.w	r7, [r3, #21]
   19cec:	adds	r1, #1
   19cee:	adds	r3, #25
   19cf0:	subs	r2, r2, r7
   19cf2:	str.w	r2, [r3, #-8]
   19cf6:	b.n	19c66 <btrfs_check_leaf@@Base+0x4f6>
   19cf8:	ldr	r0, [sp, #36]	; 0x24
   19cfa:	bl	17320 <free_extent_buffer@@Base>
   19cfe:	b.n	19b0a <btrfs_check_leaf@@Base+0x39a>
   19d00:	mov	r0, r4
   19d02:	add	sp, #68	; 0x44
   19d04:	vpop	{d8}
   19d08:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19d0c:	uxtb	r6, r0
   19d0e:	movs	r4, r0
   19d10:	lsls	r0, r5, #8
   19d12:	movs	r0, r0
   19d14:	sxtb	r2, r6
   19d16:	movs	r4, r0
   19d18:	adds	r3, #174	; 0xae
   19d1a:	movs	r2, r0
   19d1c:	muls	r3, r4
   19d1e:	movs	r2, r0
   19d20:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d24:	mov	sl, r3
   19d26:	vpush	{d8}
   19d2a:	mov	r4, r2
   19d2c:	ldr	r3, [pc, #744]	; (1a018 <btrfs_check_leaf@@Base+0x8a8>)
   19d2e:	mov	r5, r0
   19d30:	ldr	r2, [pc, #744]	; (1a01c <btrfs_check_leaf@@Base+0x8ac>)
   19d32:	mov	r8, r1
   19d34:	add	r3, pc
   19d36:	ldr	r7, [r4, #36]	; 0x24
   19d38:	sub	sp, #76	; 0x4c
   19d3a:	add	r2, pc
   19d3c:	str	r3, [sp, #20]
   19d3e:	ldr	r3, [pc, #736]	; (1a020 <btrfs_check_leaf@@Base+0x8b0>)
   19d40:	ldr.w	fp, [sp, #120]	; 0x78
   19d44:	ldr	r3, [r2, r3]
   19d46:	ldr	r3, [r3, #0]
   19d48:	str	r3, [sp, #68]	; 0x44
   19d4a:	mov.w	r3, #0
   19d4e:	cbz	r7, 19d96 <btrfs_check_leaf@@Base+0x626>
   19d50:	ldr	r1, [r4, #4]
   19d52:	cbz	r1, 19d96 <btrfs_check_leaf@@Base+0x626>
   19d54:	ldr	r6, [r4, #0]
   19d56:	ldr.w	r3, [r6, #192]	; 0xc0
   19d5a:	str	r3, [sp, #12]
   19d5c:	cbz	r3, 19d96 <btrfs_check_leaf@@Base+0x626>
   19d5e:	ldr.w	r9, [r8, #464]	; 0x1d0
   19d62:	subs	r7, #1
   19d64:	mov	r2, r7
   19d66:	mov	r0, r9
   19d68:	bl	1930e <read_node_slot@@Base>
   19d6c:	str	r0, [sp, #44]	; 0x2c
   19d6e:	bl	196e8 <btrfs_leaf_free_space@@Base>
   19d72:	cmp	r0, sl
   19d74:	bge.n	19d7a <btrfs_check_leaf@@Base+0x60a>
   19d76:	ldr	r0, [sp, #44]	; 0x2c
   19d78:	b.n	19d92 <btrfs_check_leaf@@Base+0x622>
   19d7a:	add	r3, sp, #44	; 0x2c
   19d7c:	ldr	r2, [sp, #44]	; 0x2c
   19d7e:	strd	r7, r3, [sp]
   19d82:	mov	r1, r8
   19d84:	ldr	r3, [r4, #4]
   19d86:	mov	r0, r5
   19d88:	bl	18f84 <btrfs_cow_block@@Base>
   19d8c:	mov	r7, r0
   19d8e:	ldr	r0, [sp, #44]	; 0x2c
   19d90:	cbz	r7, 19d9a <btrfs_check_leaf@@Base+0x62a>
   19d92:	bl	17320 <free_extent_buffer@@Base>
   19d96:	movs	r7, #1
   19d98:	b.n	19f94 <btrfs_check_leaf@@Base+0x824>
   19d9a:	bl	196e8 <btrfs_leaf_free_space@@Base>
   19d9e:	cmp	sl, r0
   19da0:	bgt.n	19d76 <btrfs_check_leaf@@Base+0x606>
   19da2:	cmp.w	fp, #0
   19da6:	bne.w	19fa8 <btrfs_check_leaf@@Base+0x838>
   19daa:	ldr	r3, [sp, #12]
   19dac:	add.w	ip, r3, #4294967295	; 0xffffffff
   19db0:	movs	r2, #0
   19db2:	add.w	r1, r6, #197	; 0xc5
   19db6:	add.w	sl, sl, #25
   19dba:	mov	r5, r2
   19dbc:	cmp	r5, ip
   19dbe:	bne.w	19fae <btrfs_check_leaf@@Base+0x83e>
   19dc2:	cmp	r5, #0
   19dc4:	beq.n	19d76 <btrfs_check_leaf@@Base+0x606>
   19dc6:	cmp.w	fp, #0
   19dca:	bne.n	19de8 <btrfs_check_leaf@@Base+0x678>
   19dcc:	ldr.w	r3, [r6, #192]	; 0xc0
   19dd0:	cmp	r3, r5
   19dd2:	bne.n	19de8 <btrfs_check_leaf@@Base+0x678>
   19dd4:	ldr	r1, [pc, #588]	; (1a024 <btrfs_check_leaf@@Base+0x8b4>)
   19dd6:	movs	r3, #1
   19dd8:	ldr	r0, [pc, #588]	; (1a028 <btrfs_check_leaf@@Base+0x8b8>)
   19dda:	movw	r2, #2018	; 0x7e2
   19dde:	add	r1, pc
   19de0:	adds	r1, #249	; 0xf9
   19de2:	add	r0, pc
   19de4:	bl	1811e <rb_free_nodes@@Base+0x120>
   19de8:	mov.w	sl, #25
   19dec:	ldr	r0, [sp, #44]	; 0x2c
   19dee:	mul.w	r3, sl, r5
   19df2:	mov	r1, r6
   19df4:	str	r3, [sp, #16]
   19df6:	ldr.w	r2, [r0, #192]	; 0xc0
   19dfa:	str	r3, [sp, #0]
   19dfc:	movs	r3, #101	; 0x65
   19dfe:	mul.w	r2, sl, r2
   19e02:	add	r2, r3
   19e04:	bl	17a42 <copy_extent_buffer@@Base>
   19e08:	subs	r3, r5, #1
   19e0a:	ldr.w	fp, [sp, #44]	; 0x2c
   19e0e:	mla	r3, sl, r3, r6
   19e12:	add.w	r2, r3, #197	; 0xc5
   19e16:	str	r2, [sp, #28]
   19e18:	ldr.w	r2, [r3, #214]	; 0xd6
   19e1c:	ldr.w	r3, [r8, #464]	; 0x1d0
   19e20:	ldr.w	r3, [r3, #384]	; 0x180
   19e24:	subs	r3, #101	; 0x65
   19e26:	strd	r3, r2, [sp, #32]
   19e2a:	subs	r1, r3, r2
   19e2c:	add.w	r3, r9, #384	; 0x180
   19e30:	str	r1, [sp, #24]
   19e32:	mov	r1, fp
   19e34:	mov	r0, r3
   19e36:	vmov	s16, r3
   19e3a:	bl	180c0 <rb_free_nodes@@Base+0xc2>
   19e3e:	ldr	r3, [sp, #32]
   19e40:	ldr	r2, [sp, #36]	; 0x24
   19e42:	rsb	r3, r3, #101	; 0x65
   19e46:	adds	r1, r3, r2
   19e48:	ldr	r3, [sp, #24]
   19e4a:	str	r3, [sp, #0]
   19e4c:	add.w	r3, r2, #101	; 0x65
   19e50:	adds	r2, r1, r0
   19e52:	mov	r0, fp
   19e54:	mov	r1, r6
   19e56:	bl	17a42 <copy_extent_buffer@@Base>
   19e5a:	ldr.w	r9, [sp, #44]	; 0x2c
   19e5e:	ldr	r1, [pc, #460]	; (1a02c <btrfs_check_leaf@@Base+0x8bc>)
   19e60:	movw	r2, #2035	; 0x7f3
   19e64:	ldr	r0, [pc, #456]	; (1a030 <btrfs_check_leaf@@Base+0x8c0>)
   19e66:	ldr.w	fp, [r9, #192]	; 0xc0
   19e6a:	add	r1, pc
   19e6c:	adds	r1, #249	; 0xf9
   19e6e:	add	r0, pc
   19e70:	clz	r3, fp
   19e74:	lsrs	r3, r3, #5
   19e76:	bl	18114 <rb_free_nodes@@Base+0x116>
   19e7a:	add.w	r3, fp, #4294967295	; 0xffffffff
   19e7e:	add.w	r0, fp, r5
   19e82:	mov	r2, fp
   19e84:	mla	r3, sl, r3, r9
   19e88:	ldr.w	r1, [r3, #214]	; 0xd6
   19e8c:	add.w	r3, r9, #197	; 0xc5
   19e90:	str	r3, [sp, #24]
   19e92:	adds	r1, #101	; 0x65
   19e94:	cmp	r0, r2
   19e96:	bhi.w	19fca <btrfs_check_leaf@@Base+0x85a>
   19e9a:	ldr	r3, [sp, #12]
   19e9c:	str.w	r0, [r9, #192]	; 0xc0
   19ea0:	cmp	r3, r5
   19ea2:	bcs.n	19ed0 <btrfs_check_leaf@@Base+0x760>
   19ea4:	ldr	r2, [sp, #20]
   19ea6:	movs	r1, #1
   19ea8:	ldr	r3, [pc, #392]	; (1a034 <btrfs_check_leaf@@Base+0x8c4>)
   19eaa:	ldr	r0, [r2, r3]
   19eac:	ldr	r3, [sp, #12]
   19eae:	ldr	r2, [pc, #392]	; (1a038 <btrfs_check_leaf@@Base+0x8c8>)
   19eb0:	str	r3, [sp, #0]
   19eb2:	add	r2, pc
   19eb4:	mov	r3, r5
   19eb6:	ldr	r0, [r0, #0]
   19eb8:	blx	8a64 <__fprintf_chk@plt+0x4>
   19ebc:	ldr	r1, [pc, #380]	; (1a03c <btrfs_check_leaf@@Base+0x8cc>)
   19ebe:	ldr	r0, [pc, #384]	; (1a040 <btrfs_check_leaf@@Base+0x8d0>)
   19ec0:	movs	r3, #1
   19ec2:	add	r1, pc
   19ec4:	movw	r2, #2052	; 0x804
   19ec8:	adds	r1, #249	; 0xf9
   19eca:	add	r0, pc
   19ecc:	bl	1811e <rb_free_nodes@@Base+0x120>
   19ed0:	ldr	r3, [sp, #12]
   19ed2:	cmp	r3, r5
   19ed4:	bls.n	19f18 <btrfs_check_leaf@@Base+0x7a8>
   19ed6:	ldr	r3, [sp, #28]
   19ed8:	mov	r1, r6
   19eda:	vmov	r0, s16
   19ede:	ldr.w	sl, [r3, #17]
   19ee2:	bl	180c0 <rb_free_nodes@@Base+0xc2>
   19ee6:	ldr.w	r3, [r8, #464]	; 0x1d0
   19eea:	ldr.w	r1, [r3, #384]	; 0x180
   19eee:	sub.w	r1, r1, sl
   19ef2:	sub.w	r3, sl, r0
   19ef6:	add.w	r2, r0, #101	; 0x65
   19efa:	add	r1, r0
   19efc:	mov	r0, r6
   19efe:	bl	17a8c <memmove_extent_buffer@@Base>
   19f02:	ldr.w	r3, [r6, #192]	; 0xc0
   19f06:	movs	r2, #25
   19f08:	movs	r1, #101	; 0x65
   19f0a:	subs	r3, r3, r5
   19f0c:	mov	r0, r6
   19f0e:	muls	r3, r2
   19f10:	ldr	r2, [sp, #16]
   19f12:	adds	r2, #101	; 0x65
   19f14:	bl	17a8c <memmove_extent_buffer@@Base>
   19f18:	ldr	r3, [sp, #12]
   19f1a:	add.w	ip, r6, #197	; 0xc5
   19f1e:	movs	r2, #0
   19f20:	movs	r0, #25
   19f22:	sub.w	r9, r3, r5
   19f26:	str.w	r9, [r6, #192]	; 0xc0
   19f2a:	ldr.w	r3, [r8, #464]	; 0x1d0
   19f2e:	ldr.w	r3, [r3, #384]	; 0x180
   19f32:	subs	r3, #101	; 0x65
   19f34:	cmp	r9, r2
   19f36:	bne.n	19fe8 <btrfs_check_leaf@@Base+0x878>
   19f38:	ldr	r0, [sp, #44]	; 0x2c
   19f3a:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   19f3e:	cmp.w	r9, #0
   19f42:	beq.n	19f4a <btrfs_check_leaf@@Base+0x7da>
   19f44:	mov	r0, r6
   19f46:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   19f4a:	add.w	r9, sp, #48	; 0x30
   19f4e:	movs	r2, #0
   19f50:	mov	r0, r6
   19f52:	mov	r1, r9
   19f54:	bl	18046 <rb_free_nodes@@Base+0x48>
   19f58:	movs	r3, #1
   19f5a:	mov	r2, r9
   19f5c:	mov	r1, r4
   19f5e:	mov	r0, r8
   19f60:	bl	19560 <btrfs_fixup_low_keys@@Base>
   19f64:	ldr	r3, [r4, #32]
   19f66:	cmp	r5, r3
   19f68:	ble.n	19ffc <btrfs_check_leaf@@Base+0x88c>
   19f6a:	add	r3, fp
   19f6c:	ldr	r0, [r4, #0]
   19f6e:	str	r3, [r4, #32]
   19f70:	bl	17320 <free_extent_buffer@@Base>
   19f74:	ldr	r3, [sp, #44]	; 0x2c
   19f76:	str	r3, [r4, #0]
   19f78:	ldr	r3, [r4, #36]	; 0x24
   19f7a:	subs	r3, #1
   19f7c:	str	r3, [r4, #36]	; 0x24
   19f7e:	ldr	r3, [r4, #32]
   19f80:	mov.w	r2, #2096	; 0x830
   19f84:	ldr	r1, [pc, #188]	; (1a044 <btrfs_check_leaf@@Base+0x8d4>)
   19f86:	ldr	r0, [pc, #192]	; (1a048 <btrfs_check_leaf@@Base+0x8d8>)
   19f88:	add	r1, pc
   19f8a:	lsrs	r3, r3, #31
   19f8c:	adds	r1, #249	; 0xf9
   19f8e:	add	r0, pc
   19f90:	bl	18114 <rb_free_nodes@@Base+0x116>
   19f94:	ldr	r2, [pc, #180]	; (1a04c <btrfs_check_leaf@@Base+0x8dc>)
   19f96:	ldr	r3, [pc, #136]	; (1a020 <btrfs_check_leaf@@Base+0x8b0>)
   19f98:	add	r2, pc
   19f9a:	ldr	r3, [r2, r3]
   19f9c:	ldr	r2, [r3, #0]
   19f9e:	ldr	r3, [sp, #68]	; 0x44
   19fa0:	eors	r2, r3
   19fa2:	beq.n	1a00a <btrfs_check_leaf@@Base+0x89a>
   19fa4:	blx	8708 <__stack_chk_fail@plt>
   19fa8:	ldr.w	ip, [sp, #12]
   19fac:	b.n	19db0 <btrfs_check_leaf@@Base+0x640>
   19fae:	ldr	r3, [r4, #32]
   19fb0:	adds	r1, #25
   19fb2:	cmp	r3, r5
   19fb4:	ldr.w	r3, [r1, #-4]
   19fb8:	it	eq
   19fba:	addeq	r2, sl
   19fbc:	adds	r3, #25
   19fbe:	add	r2, r3
   19fc0:	cmp	r2, r0
   19fc2:	bhi.w	19dc2 <btrfs_check_leaf@@Base+0x652>
   19fc6:	adds	r5, #1
   19fc8:	b.n	19dbc <btrfs_check_leaf@@Base+0x64c>
   19fca:	ldr	r3, [sp, #24]
   19fcc:	mla	ip, sl, r2, r3
   19fd0:	ldr.w	r3, [r8, #464]	; 0x1d0
   19fd4:	adds	r2, #1
   19fd6:	ldr.w	r3, [r3, #384]	; 0x180
   19fda:	ldr.w	lr, [ip, #17]
   19fde:	subs	r3, r1, r3
   19fe0:	add	r3, lr
   19fe2:	str.w	r3, [ip, #17]
   19fe6:	b.n	19e94 <btrfs_check_leaf@@Base+0x724>
   19fe8:	mla	r1, r0, r2, ip
   19fec:	adds	r2, #1
   19fee:	ldr.w	lr, [r1, #21]
   19ff2:	sub.w	r3, r3, lr
   19ff6:	str.w	r3, [r1, #17]
   19ffa:	b.n	19f34 <btrfs_check_leaf@@Base+0x7c4>
   19ffc:	ldr	r0, [sp, #44]	; 0x2c
   19ffe:	bl	17320 <free_extent_buffer@@Base>
   1a002:	ldr	r3, [r4, #32]
   1a004:	subs	r5, r3, r5
   1a006:	str	r5, [r4, #32]
   1a008:	b.n	19f7e <btrfs_check_leaf@@Base+0x80e>
   1a00a:	mov	r0, r7
   1a00c:	add	sp, #76	; 0x4c
   1a00e:	vpop	{d8}
   1a012:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a016:	nop
   1a018:	add	sp, #304	; 0x130
   1a01a:	movs	r4, r0
   1a01c:	add	sp, #280	; 0x118
   1a01e:	movs	r4, r0
   1a020:	lsls	r0, r5, #8
   1a022:	movs	r0, r0
   1a024:	adds	r1, #102	; 0x66
   1a026:	movs	r2, r0
   1a028:	asrs	r3, r3
   1a02a:	movs	r2, r0
   1a02c:	adds	r0, #218	; 0xda
   1a02e:	movs	r2, r0
   1a030:	cmp	r5, #196	; 0xc4
   1a032:	movs	r2, r0
   1a034:	lsls	r0, r7, #8
   1a036:	movs	r0, r0
   1a038:	cmp	r5, #150	; 0x96
   1a03a:	movs	r2, r0
   1a03c:	adds	r0, #130	; 0x82
   1a03e:	movs	r2, r0
   1a040:	ands	r3, r6
   1a042:	movs	r2, r0
   1a044:	cmp	r7, #188	; 0xbc
   1a046:	movs	r2, r0
   1a048:	cmp	r4, #207	; 0xcf
   1a04a:	movs	r2, r0
   1a04c:	add	r5, sp, #928	; 0x3a0
   1a04e:	movs	r4, r0
   1a050:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a054:	mov	r5, r3
   1a056:	vpush	{d8}
   1a05a:	mov	r6, r1
   1a05c:	ldr.w	r3, [pc, #1264]	; 1a550 <btrfs_check_leaf@@Base+0xde0>
   1a060:	sub	sp, #116	; 0x74
   1a062:	str	r2, [sp, #48]	; 0x30
   1a064:	ldr.w	r2, [pc, #1260]	; 1a554 <btrfs_check_leaf@@Base+0xde4>
   1a068:	str	r0, [sp, #44]	; 0x2c
   1a06a:	add	r2, pc
   1a06c:	ldr	r3, [r2, r3]
   1a06e:	ldr	r3, [r3, #0]
   1a070:	str	r3, [sp, #108]	; 0x6c
   1a072:	mov.w	r3, #0
   1a076:	ldr	r3, [sp, #164]	; 0xa4
   1a078:	cbz	r3, 1a09e <btrfs_check_leaf@@Base+0x92e>
   1a07a:	ldr	r2, [r5, #0]
   1a07c:	movs	r1, #25
   1a07e:	ldr	r3, [r5, #32]
   1a080:	mla	r3, r1, r3, r2
   1a084:	ldr.w	r2, [r3, #218]	; 0xda
   1a088:	ldr	r3, [sp, #160]	; 0xa0
   1a08a:	add	r3, r1
   1a08c:	add	r2, r3
   1a08e:	ldr.w	r3, [r6, #464]	; 0x1d0
   1a092:	ldr.w	r3, [r3, #384]	; 0x180
   1a096:	subs	r3, #101	; 0x65
   1a098:	cmp	r2, r3
   1a09a:	bhi.w	1a53c <btrfs_check_leaf@@Base+0xdcc>
   1a09e:	ldr	r3, [sp, #160]	; 0xa0
   1a0a0:	cmp	r3, #0
   1a0a2:	bne.n	1a178 <btrfs_check_leaf@@Base+0xa08>
   1a0a4:	ldr	r3, [r5, #4]
   1a0a6:	cbnz	r3, 1a0bc <btrfs_check_leaf@@Base+0x94c>
   1a0a8:	ldr	r0, [sp, #44]	; 0x2c
   1a0aa:	movs	r3, #1
   1a0ac:	mov	r2, r5
   1a0ae:	mov	r1, r6
   1a0b0:	bl	185c2 <add_root_to_dirty_list@@Base+0x2e>
   1a0b4:	mov	r9, r0
   1a0b6:	cmp	r0, #0
   1a0b8:	bne.w	1a1c0 <btrfs_check_leaf@@Base+0xa50>
   1a0bc:	movs	r3, #0
   1a0be:	str	r3, [sp, #52]	; 0x34
   1a0c0:	mov	r9, r3
   1a0c2:	add	r3, sp, #68	; 0x44
   1a0c4:	vmov	s16, r3
   1a0c8:	ldr.w	r3, [pc, #1164]	; 1a558 <btrfs_check_leaf@@Base+0xde8>
   1a0cc:	add	r3, pc
   1a0ce:	addw	r3, r3, #275	; 0x113
   1a0d2:	vmov	s17, r3
   1a0d6:	ldr.w	r8, [r5]
   1a0da:	ldr.w	fp, [r5, #32]
   1a0de:	ldr.w	r3, [r8, #192]	; 0xc0
   1a0e2:	str	r3, [sp, #32]
   1a0e4:	adds	r3, #1
   1a0e6:	cmp.w	fp, r3, lsr #1
   1a0ea:	mov.w	sl, r3, lsr #1
   1a0ee:	blt.w	1a22e <btrfs_check_leaf@@Base+0xabe>
   1a0f2:	ldr	r3, [sp, #32]
   1a0f4:	cmp	r3, #1
   1a0f6:	bne.n	1a1d6 <btrfs_check_leaf@@Base+0xa66>
   1a0f8:	ldr	r3, [sp, #32]
   1a0fa:	cmp	fp, r3
   1a0fc:	bcc.n	1a1fa <btrfs_check_leaf@@Base+0xa8a>
   1a0fe:	ldr	r3, [sp, #48]	; 0x30
   1a100:	movs	r7, #0
   1a102:	ldr.w	r2, [r3, #9]
   1a106:	ldr.w	r3, [r3, #13]
   1a10a:	str.w	r2, [sp, #77]	; 0x4d
   1a10e:	str.w	r3, [sp, #81]	; 0x51
   1a112:	ldr	r3, [sp, #48]	; 0x30
   1a114:	ldrb	r3, [r3, #8]
   1a116:	strb.w	r3, [sp, #76]	; 0x4c
   1a11a:	ldr	r3, [sp, #48]	; 0x30
   1a11c:	ldr	r2, [r3, #0]
   1a11e:	ldr	r3, [r3, #4]
   1a120:	strd	r2, r3, [sp, #68]	; 0x44
   1a124:	movs	r2, #0
   1a126:	movs	r3, #0
   1a128:	strd	r2, r3, [sp, #24]
   1a12c:	ldrd	r2, r3, [r8, #40]	; 0x28
   1a130:	vstr	s16, [sp, #8]
   1a134:	ldr.w	r1, [r6, #464]	; 0x1d0
   1a138:	strd	r2, r3, [sp, #16]
   1a13c:	movs	r3, #0
   1a13e:	ldr.w	r2, [r6, #447]	; 0x1bf
   1a142:	str	r3, [sp, #12]
   1a144:	ldr.w	r3, [r6, #451]	; 0x1c3
   1a148:	ldr	r0, [sp, #44]	; 0x2c
   1a14a:	strd	r2, r3, [sp]
   1a14e:	ldr.w	r2, [r1, #384]	; 0x180
   1a152:	mov	r1, r6
   1a154:	bl	23164 <btrfs_alloc_free_block@@Base>
   1a158:	cmn.w	r0, #4096	; 0x1000
   1a15c:	mov	r4, r0
   1a15e:	bls.w	1a296 <btrfs_check_leaf@@Base+0xb26>
   1a162:	ldr	r1, [pc, #1016]	; (1a55c <btrfs_check_leaf@@Base+0xdec>)
   1a164:	movs	r3, #1
   1a166:	ldr	r0, [pc, #1016]	; (1a560 <btrfs_check_leaf@@Base+0xdf0>)
   1a168:	mov.w	r2, #2272	; 0x8e0
   1a16c:	add	r1, pc
   1a16e:	add.w	r1, r1, #264	; 0x108
   1a172:	add	r0, pc
   1a174:	bl	180da <rb_free_nodes@@Base+0xdc>
   1a178:	ldr	r3, [sp, #48]	; 0x30
   1a17a:	ldrb	r3, [r3, #8]
   1a17c:	cmp	r3, #84	; 0x54
   1a17e:	beq.n	1a0a4 <btrfs_check_leaf@@Base+0x934>
   1a180:	ldr	r3, [sp, #160]	; 0xa0
   1a182:	movs	r4, #0
   1a184:	ldr	r0, [sp, #44]	; 0x2c
   1a186:	mov	r2, r5
   1a188:	mov	r1, r6
   1a18a:	str	r4, [sp, #0]
   1a18c:	bl	19aa8 <btrfs_check_leaf@@Base+0x338>
   1a190:	subs.w	r9, r0, #0
   1a194:	blt.n	1a1c0 <btrfs_check_leaf@@Base+0xa50>
   1a196:	bne.n	1a1ac <btrfs_check_leaf@@Base+0xa3c>
   1a198:	ldr	r0, [r5, #0]
   1a19a:	bl	196e8 <btrfs_leaf_free_space@@Base>
   1a19e:	ldr	r3, [sp, #160]	; 0xa0
   1a1a0:	cmp	r0, r3
   1a1a2:	blt.w	1a0a4 <btrfs_check_leaf@@Base+0x934>
   1a1a6:	mov.w	r9, #0
   1a1aa:	b.n	1a1c0 <btrfs_check_leaf@@Base+0xa50>
   1a1ac:	ldr	r3, [sp, #160]	; 0xa0
   1a1ae:	mov	r2, r5
   1a1b0:	ldr	r0, [sp, #44]	; 0x2c
   1a1b2:	mov	r1, r6
   1a1b4:	str	r4, [sp, #0]
   1a1b6:	bl	19d20 <btrfs_check_leaf@@Base+0x5b0>
   1a1ba:	subs.w	r9, r0, #0
   1a1be:	bge.n	1a198 <btrfs_check_leaf@@Base+0xa28>
   1a1c0:	ldr	r2, [pc, #928]	; (1a564 <btrfs_check_leaf@@Base+0xdf4>)
   1a1c2:	ldr	r3, [pc, #908]	; (1a550 <btrfs_check_leaf@@Base+0xde0>)
   1a1c4:	add	r2, pc
   1a1c6:	ldr	r3, [r2, r3]
   1a1c8:	ldr	r2, [r3, #0]
   1a1ca:	ldr	r3, [sp, #108]	; 0x6c
   1a1cc:	eors	r2, r3
   1a1ce:	beq.w	1a542 <btrfs_check_leaf@@Base+0xdd2>
   1a1d2:	blx	8708 <__stack_chk_fail@plt>
   1a1d6:	ldr	r3, [sp, #32]
   1a1d8:	mov	r1, sl
   1a1da:	mov	r0, r8
   1a1dc:	sub.w	r2, r3, sl
   1a1e0:	bl	18460 <rb_free_nodes@@Base+0x462>
   1a1e4:	ldr	r3, [sp, #160]	; 0xa0
   1a1e6:	add	r0, r3
   1a1e8:	ldr.w	r3, [r6, #464]	; 0x1d0
   1a1ec:	ldr.w	r3, [r3, #384]	; 0x180
   1a1f0:	subs	r3, #101	; 0x65
   1a1f2:	cmp	r0, r3
   1a1f4:	bhi.n	1a0f8 <btrfs_check_leaf@@Base+0x988>
   1a1f6:	movs	r7, #1
   1a1f8:	b.n	1a220 <btrfs_check_leaf@@Base+0xab0>
   1a1fa:	ldr	r3, [sp, #32]
   1a1fc:	mov	r1, fp
   1a1fe:	mov	r0, r8
   1a200:	mov	sl, fp
   1a202:	sub.w	r2, r3, fp
   1a206:	bl	18460 <rb_free_nodes@@Base+0x462>
   1a20a:	ldr	r3, [sp, #160]	; 0xa0
   1a20c:	add	r0, r3
   1a20e:	ldr.w	r3, [r6, #464]	; 0x1d0
   1a212:	ldr.w	r3, [r3, #384]	; 0x180
   1a216:	subs	r3, #101	; 0x65
   1a218:	cmp	r0, r3
   1a21a:	ite	hi
   1a21c:	movhi	r7, #2
   1a21e:	movls	r7, #1
   1a220:	vmov	r1, s16
   1a224:	mov	r2, sl
   1a226:	mov	r0, r8
   1a228:	bl	18046 <rb_free_nodes@@Base+0x48>
   1a22c:	b.n	1a124 <btrfs_check_leaf@@Base+0x9b4>
   1a22e:	mov	r2, sl
   1a230:	movs	r1, #0
   1a232:	mov	r0, r8
   1a234:	bl	18460 <rb_free_nodes@@Base+0x462>
   1a238:	ldr	r3, [sp, #160]	; 0xa0
   1a23a:	add	r0, r3
   1a23c:	ldr.w	r3, [r6, #464]	; 0x1d0
   1a240:	ldr.w	r3, [r3, #384]	; 0x180
   1a244:	subs	r3, #101	; 0x65
   1a246:	cmp	r0, r3
   1a248:	bls.n	1a1f6 <btrfs_check_leaf@@Base+0xa86>
   1a24a:	ldr	r3, [sp, #164]	; 0xa4
   1a24c:	cbnz	r3, 1a286 <btrfs_check_leaf@@Base+0xb16>
   1a24e:	ldr	r3, [sp, #160]	; 0xa0
   1a250:	cbz	r3, 1a286 <btrfs_check_leaf@@Base+0xb16>
   1a252:	cmp.w	fp, #0
   1a256:	beq.w	1a0fe <btrfs_check_leaf@@Base+0x98e>
   1a25a:	ldr	r3, [sp, #32]
   1a25c:	cmp	fp, r3
   1a25e:	beq.n	1a292 <btrfs_check_leaf@@Base+0xb22>
   1a260:	sub.w	r2, r3, fp
   1a264:	mov	r1, fp
   1a266:	mov	r0, r8
   1a268:	mov	sl, fp
   1a26a:	bl	18460 <rb_free_nodes@@Base+0x462>
   1a26e:	ldr	r3, [sp, #160]	; 0xa0
   1a270:	add	r0, r3
   1a272:	ldr.w	r3, [r6, #464]	; 0x1d0
   1a276:	ldr.w	r3, [r3, #384]	; 0x180
   1a27a:	subs	r3, #101	; 0x65
   1a27c:	cmp	r0, r3
   1a27e:	ite	ls
   1a280:	movls	r7, #1
   1a282:	movhi	r7, #2
   1a284:	b.n	1a220 <btrfs_check_leaf@@Base+0xab0>
   1a286:	cmp.w	fp, #0
   1a28a:	bne.n	1a25a <btrfs_check_leaf@@Base+0xaea>
   1a28c:	movs	r7, #1
   1a28e:	mov	sl, r7
   1a290:	b.n	1a220 <btrfs_check_leaf@@Base+0xab0>
   1a292:	mov	sl, fp
   1a294:	b.n	1a1f6 <btrfs_check_leaf@@Base+0xa86>
   1a296:	movs	r2, #0
   1a298:	movs	r3, #101	; 0x65
   1a29a:	mov	r1, r2
   1a29c:	bl	17aa2 <memset_extent_buffer@@Base>
   1a2a0:	ldr	r3, [r4, #40]	; 0x28
   1a2a2:	mov	r0, r4
   1a2a4:	str.w	r3, [r4, #144]	; 0x90
   1a2a8:	ldr	r3, [r4, #44]	; 0x2c
   1a2aa:	str.w	r3, [r4, #148]	; 0x94
   1a2ae:	ldr	r3, [sp, #44]	; 0x2c
   1a2b0:	ldrd	r2, r3, [r3, #8]
   1a2b4:	str.w	r2, [r4, #176]	; 0xb0
   1a2b8:	str.w	r3, [r4, #180]	; 0xb4
   1a2bc:	ldr.w	r2, [r4, #152]	; 0x98
   1a2c0:	ldr.w	r3, [r4, #156]	; 0x9c
   1a2c4:	bic.w	r3, r3, #4278190080	; 0xff000000
   1a2c8:	str.w	r2, [r4, #152]	; 0x98
   1a2cc:	orr.w	r3, r3, #16777216	; 0x1000000
   1a2d0:	str.w	r3, [r4, #156]	; 0x9c
   1a2d4:	ldr.w	r2, [r6, #447]	; 0x1bf
   1a2d8:	ldr.w	r3, [r6, #451]	; 0x1c3
   1a2dc:	str.w	r2, [r4, #184]	; 0xb8
   1a2e0:	movs	r2, #32
   1a2e2:	str.w	r3, [r4, #188]	; 0xbc
   1a2e6:	mov.w	r3, #0
   1a2ea:	strb.w	r3, [r4, #196]	; 0xc4
   1a2ee:	ldr.w	r3, [r6, #464]	; 0x1d0
   1a2f2:	ldr.w	r1, [r3, #352]	; 0x160
   1a2f6:	movs	r3, #16
   1a2f8:	add	r1, r3
   1a2fa:	bl	17a30 <write_extent_buffer@@Base>
   1a2fe:	ldr.w	r1, [r6, #464]	; 0x1d0
   1a302:	movs	r3, #16
   1a304:	movs	r2, #64	; 0x40
   1a306:	mov	r0, r4
   1a308:	bl	17a30 <write_extent_buffer@@Base>
   1a30c:	ldr.w	r1, [r6, #464]	; 0x1d0
   1a310:	ldr.w	r2, [r6, #200]	; 0xc8
   1a314:	ldr.w	r3, [r6, #204]	; 0xcc
   1a318:	ldr.w	r1, [r1, #384]	; 0x180
   1a31c:	adds	r2, r2, r1
   1a31e:	str.w	r2, [r6, #200]	; 0xc8
   1a322:	adc.w	r3, r3, #0
   1a326:	str.w	r3, [r6, #204]	; 0xcc
   1a32a:	cmp	r7, #0
   1a32c:	bne.n	1a3d2 <btrfs_check_leaf@@Base+0xc62>
   1a32e:	ldrd	r2, r3, [r4, #40]	; 0x28
   1a332:	cmp	fp, sl
   1a334:	ldr	r0, [sp, #44]	; 0x2c
   1a336:	add.w	r1, r6, #464	; 0x1d0
   1a33a:	strb.w	r7, [r4, #192]	; 0xc0
   1a33e:	add.w	r0, r0, #8
   1a342:	strd	r2, r3, [sp, #32]
   1a346:	strb.w	r7, [r4, #193]	; 0xc1
   1a34a:	strb.w	r7, [r4, #194]	; 0xc2
   1a34e:	strb.w	r7, [r4, #195]	; 0xc3
   1a352:	blt.n	1a38e <btrfs_check_leaf@@Base+0xc1e>
   1a354:	movs	r3, #1
   1a356:	str	r3, [sp, #12]
   1a358:	ldr	r3, [r5, #36]	; 0x24
   1a35a:	adds	r3, #1
   1a35c:	str	r3, [sp, #8]
   1a35e:	ldrd	r2, r3, [sp, #32]
   1a362:	strd	r2, r3, [sp]
   1a366:	mov	r2, r5
   1a368:	vmov	r3, s16
   1a36c:	bl	18164 <rb_free_nodes@@Base+0x166>
   1a370:	cmp	r0, #0
   1a372:	it	ne
   1a374:	movne	r9, r0
   1a376:	ldr	r0, [r5, #0]
   1a378:	bl	17320 <free_extent_buffer@@Base>
   1a37c:	ldr	r3, [r5, #36]	; 0x24
   1a37e:	str	r4, [r5, #0]
   1a380:	adds	r3, #1
   1a382:	str	r7, [r5, #32]
   1a384:	str	r3, [r5, #36]	; 0x24
   1a386:	mov	r0, r4
   1a388:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   1a38c:	b.n	1a1c0 <btrfs_check_leaf@@Base+0xa50>
   1a38e:	ldr	r3, [r5, #36]	; 0x24
   1a390:	mov.w	r8, #1
   1a394:	str.w	r8, [sp, #12]
   1a398:	str	r3, [sp, #8]
   1a39a:	ldrd	r2, r3, [sp, #32]
   1a39e:	strd	r2, r3, [sp]
   1a3a2:	mov	r2, r5
   1a3a4:	vmov	r3, s16
   1a3a8:	bl	18164 <rb_free_nodes@@Base+0x166>
   1a3ac:	cmp	r0, #0
   1a3ae:	it	ne
   1a3b0:	movne	r9, r0
   1a3b2:	ldr	r0, [r5, #0]
   1a3b4:	bl	17320 <free_extent_buffer@@Base>
   1a3b8:	ldr	r3, [r5, #36]	; 0x24
   1a3ba:	str	r4, [r5, #0]
   1a3bc:	str	r7, [r5, #32]
   1a3be:	cmp	r3, #0
   1a3c0:	bne.n	1a386 <btrfs_check_leaf@@Base+0xc16>
   1a3c2:	vmov	r2, s16
   1a3c6:	mov	r3, r8
   1a3c8:	mov	r1, r5
   1a3ca:	mov	r0, r6
   1a3cc:	bl	19560 <btrfs_fixup_low_keys@@Base>
   1a3d0:	b.n	1a386 <btrfs_check_leaf@@Base+0xc16>
   1a3d2:	ldr	r3, [sp, #32]
   1a3d4:	mov	r1, sl
   1a3d6:	mov	r0, r8
   1a3d8:	sub.w	r9, r3, sl
   1a3dc:	str.w	r9, [r4, #192]	; 0xc0
   1a3e0:	bl	1801c <rb_free_nodes@@Base+0x1e>
   1a3e4:	mov	r1, r8
   1a3e6:	str	r0, [sp, #32]
   1a3e8:	ldr.w	r0, [r6, #464]	; 0x1d0
   1a3ec:	add.w	r0, r0, #384	; 0x180
   1a3f0:	bl	180c0 <rb_free_nodes@@Base+0xc2>
   1a3f4:	ldr	r3, [sp, #32]
   1a3f6:	movs	r2, #25
   1a3f8:	mov	r1, r8
   1a3fa:	subs	r3, r3, r0
   1a3fc:	str	r3, [sp, #60]	; 0x3c
   1a3fe:	mul.w	r3, r2, sl
   1a402:	str	r0, [sp, #56]	; 0x38
   1a404:	mul.w	r2, r2, r9
   1a408:	mov	r0, r4
   1a40a:	adds	r3, #101	; 0x65
   1a40c:	str	r2, [sp, #0]
   1a40e:	movs	r2, #101	; 0x65
   1a410:	bl	17a42 <copy_extent_buffer@@Base>
   1a414:	ldr.w	r0, [r6, #464]	; 0x1d0
   1a418:	ldr	r3, [sp, #56]	; 0x38
   1a41a:	mov	r1, r8
   1a41c:	add.w	r0, r0, #384	; 0x180
   1a420:	ldr	r2, [r0, #0]
   1a422:	add	r2, r3
   1a424:	ldr	r3, [sp, #32]
   1a426:	subs	r2, r2, r3
   1a428:	str	r2, [sp, #32]
   1a42a:	bl	180c0 <rb_free_nodes@@Base+0xc2>
   1a42e:	ldr	r3, [sp, #60]	; 0x3c
   1a430:	ldr	r2, [sp, #32]
   1a432:	mov	r1, r8
   1a434:	str	r3, [sp, #0]
   1a436:	add.w	r3, r0, #101	; 0x65
   1a43a:	mov	r0, r4
   1a43c:	bl	17a42 <copy_extent_buffer@@Base>
   1a440:	mov	r1, sl
   1a442:	mov	r0, r8
   1a444:	bl	1801c <rb_free_nodes@@Base+0x1e>
   1a448:	ldr.w	r3, [r6, #464]	; 0x1d0
   1a44c:	add.w	r2, r4, #197	; 0xc5
   1a450:	ldr.w	r3, [r3, #384]	; 0x180
   1a454:	subs	r3, #101	; 0x65
   1a456:	subs	r0, r3, r0
   1a458:	movs	r3, #0
   1a45a:	cmp	r9, r3
   1a45c:	bgt.n	1a524 <btrfs_check_leaf@@Base+0xdb4>
   1a45e:	add	r3, sp, #88	; 0x58
   1a460:	movs	r2, #0
   1a462:	mov	r0, r4
   1a464:	str.w	sl, [r8, #192]	; 0xc0
   1a468:	mov	r1, r3
   1a46a:	str	r3, [sp, #32]
   1a46c:	bl	18046 <rb_free_nodes@@Base+0x48>
   1a470:	movs	r2, #1
   1a472:	str	r2, [sp, #12]
   1a474:	ldr	r2, [r5, #36]	; 0x24
   1a476:	ldr	r3, [sp, #32]
   1a478:	adds	r2, #1
   1a47a:	str	r2, [sp, #8]
   1a47c:	ldrd	r0, r1, [r4, #40]	; 0x28
   1a480:	mov	r2, r5
   1a482:	strd	r0, r1, [sp]
   1a486:	add.w	r1, r6, #464	; 0x1d0
   1a48a:	ldr	r0, [sp, #44]	; 0x2c
   1a48c:	adds	r0, #8
   1a48e:	bl	18164 <rb_free_nodes@@Base+0x166>
   1a492:	mov	r9, r0
   1a494:	mov	r0, r4
   1a496:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   1a49a:	mov	r0, r8
   1a49c:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   1a4a0:	ldr	r3, [r5, #32]
   1a4a2:	ldr	r0, [pc, #196]	; (1a568 <btrfs_check_leaf@@Base+0xdf8>)
   1a4a4:	movw	r2, #2154	; 0x86a
   1a4a8:	subs.w	r3, r3, fp
   1a4ac:	vmov	r1, s17
   1a4b0:	add	r0, pc
   1a4b2:	it	ne
   1a4b4:	movne	r3, #1
   1a4b6:	bl	18114 <rb_free_nodes@@Base+0x116>
   1a4ba:	cmp	fp, sl
   1a4bc:	blt.n	1a534 <btrfs_check_leaf@@Base+0xdc4>
   1a4be:	ldr	r0, [r5, #0]
   1a4c0:	bl	17320 <free_extent_buffer@@Base>
   1a4c4:	ldr	r3, [r5, #32]
   1a4c6:	str	r4, [r5, #0]
   1a4c8:	sub.w	r3, r3, sl
   1a4cc:	str	r3, [r5, #32]
   1a4ce:	ldr	r3, [r5, #36]	; 0x24
   1a4d0:	adds	r3, #1
   1a4d2:	str	r3, [r5, #36]	; 0x24
   1a4d4:	ldr	r3, [r5, #32]
   1a4d6:	movw	r2, #2165	; 0x875
   1a4da:	ldr	r4, [pc, #144]	; (1a56c <btrfs_check_leaf@@Base+0xdfc>)
   1a4dc:	ldr	r0, [pc, #144]	; (1a570 <btrfs_check_leaf@@Base+0xe00>)
   1a4de:	add	r4, pc
   1a4e0:	lsrs	r3, r3, #31
   1a4e2:	addw	r1, r4, #275	; 0x113
   1a4e6:	add	r0, pc
   1a4e8:	bl	18114 <rb_free_nodes@@Base+0x116>
   1a4ec:	ldr	r0, [pc, #132]	; (1a574 <btrfs_check_leaf@@Base+0xe04>)
   1a4ee:	add.w	r1, r4, #264	; 0x108
   1a4f2:	mov	r3, r9
   1a4f4:	add	r0, pc
   1a4f6:	movw	r2, #2325	; 0x915
   1a4fa:	str	r1, [sp, #32]
   1a4fc:	bl	18114 <rb_free_nodes@@Base+0x116>
   1a500:	cmp	r7, #2
   1a502:	bne.w	1a1c0 <btrfs_check_leaf@@Base+0xa50>
   1a506:	ldr	r3, [sp, #52]	; 0x34
   1a508:	movw	r2, #2328	; 0x918
   1a50c:	ldr	r0, [pc, #104]	; (1a578 <btrfs_check_leaf@@Base+0xe08>)
   1a50e:	subs	r3, #0
   1a510:	ldr	r1, [sp, #32]
   1a512:	add	r0, pc
   1a514:	it	ne
   1a516:	movne	r3, #1
   1a518:	bl	18114 <rb_free_nodes@@Base+0x116>
   1a51c:	ldr	r3, [sp, #52]	; 0x34
   1a51e:	adds	r3, #1
   1a520:	str	r3, [sp, #52]	; 0x34
   1a522:	b.n	1a0d6 <btrfs_check_leaf@@Base+0x966>
   1a524:	ldr.w	r1, [r2, #17]
   1a528:	adds	r3, #1
   1a52a:	adds	r2, #25
   1a52c:	add	r1, r0
   1a52e:	str.w	r1, [r2, #-8]
   1a532:	b.n	1a45a <btrfs_check_leaf@@Base+0xcea>
   1a534:	mov	r0, r4
   1a536:	bl	17320 <free_extent_buffer@@Base>
   1a53a:	b.n	1a4d4 <btrfs_check_leaf@@Base+0xd64>
   1a53c:	mvn.w	r9, #74	; 0x4a
   1a540:	b.n	1a1c0 <btrfs_check_leaf@@Base+0xa50>
   1a542:	mov	r0, r9
   1a544:	add	sp, #116	; 0x74
   1a546:	vpop	{d8}
   1a54a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a54e:	nop
   1a550:	lsls	r0, r5, #8
   1a552:	movs	r0, r0
   1a554:	add	r5, sp, #88	; 0x58
   1a556:	movs	r4, r0
   1a558:	cmp	r6, #120	; 0x78
   1a55a:	movs	r2, r0
   1a55c:	cmp	r5, #216	; 0xd8
   1a55e:	movs	r2, r0
   1a560:	subs	r5, #139	; 0x8b
   1a562:	movs	r2, r0
   1a564:	add	r3, sp, #752	; 0x2f0
   1a566:	movs	r4, r0
   1a568:	movs	r7, #192	; 0xc0
   1a56a:	movs	r2, r0
   1a56c:	cmp	r2, #102	; 0x66
   1a56e:	movs	r2, r0
   1a570:	movs	r7, #119	; 0x77
   1a572:	movs	r2, r0
   1a574:	vrev64.8	d16, d1
   1a578:	movs	r7, #117	; 0x75
   1a57a:	movs	r2, r0

0001a57c <btrfs_truncate_item@@Base>:
   1a57c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a580:	sub	sp, #60	; 0x3c
   1a582:	mov	r6, r2
   1a584:	ldr	r2, [pc, #392]	; (1a710 <btrfs_truncate_item@@Base+0x194>)
   1a586:	str	r3, [sp, #24]
   1a588:	mov.w	sl, #25
   1a58c:	ldr	r3, [pc, #388]	; (1a714 <btrfs_truncate_item@@Base+0x198>)
   1a58e:	add	r2, pc
   1a590:	ldr	r4, [r1, #0]
   1a592:	mov	r9, r0
   1a594:	ldr	r7, [r1, #32]
   1a596:	mov	r8, r1
   1a598:	ldr	r3, [r2, r3]
   1a59a:	ldr	r3, [r3, #0]
   1a59c:	str	r3, [sp, #52]	; 0x34
   1a59e:	mov.w	r3, #0
   1a5a2:	add.w	r3, r4, #96	; 0x60
   1a5a6:	str	r3, [sp, #16]
   1a5a8:	mla	r3, sl, r7, r3
   1a5ac:	add.w	r2, r3, #101	; 0x65
   1a5b0:	str	r2, [sp, #12]
   1a5b2:	ldr.w	r5, [r3, #122]	; 0x7a
   1a5b6:	cmp	r6, r5
   1a5b8:	beq.w	1a6f4 <btrfs_truncate_item@@Base+0x178>
   1a5bc:	ldr.w	r0, [r0, #464]	; 0x1d0
   1a5c0:	mov	r1, r4
   1a5c2:	ldr.w	fp, [r4, #192]	; 0xc0
   1a5c6:	add.w	r0, r0, #384	; 0x180
   1a5ca:	bl	180c0 <rb_free_nodes@@Base+0xc2>
   1a5ce:	ldr	r3, [sp, #12]
   1a5d0:	ldr	r1, [pc, #324]	; (1a718 <btrfs_truncate_item@@Base+0x19c>)
   1a5d2:	mov.w	r2, #2480	; 0x9b0
   1a5d6:	ldr.w	r3, [r3, #17]
   1a5da:	add	r1, pc
   1a5dc:	add.w	r1, r1, #290	; 0x122
   1a5e0:	str	r1, [sp, #28]
   1a5e2:	str	r3, [sp, #20]
   1a5e4:	subs	r3, r5, r6
   1a5e6:	str	r3, [sp, #8]
   1a5e8:	lsrs	r3, r7, #31
   1a5ea:	str	r0, [sp, #4]
   1a5ec:	ldr	r0, [pc, #300]	; (1a71c <btrfs_truncate_item@@Base+0x1a0>)
   1a5ee:	add	r0, pc
   1a5f0:	bl	18114 <rb_free_nodes@@Base+0x116>
   1a5f4:	cmp	r7, fp
   1a5f6:	ldr	r0, [pc, #296]	; (1a720 <btrfs_truncate_item@@Base+0x1a4>)
   1a5f8:	movw	r2, #2481	; 0x9b1
   1a5fc:	ite	cc
   1a5fe:	movcc	r3, #0
   1a600:	movcs	r3, #1
   1a602:	add	r0, pc
   1a604:	ldr	r1, [sp, #28]
   1a606:	bl	18114 <rb_free_nodes@@Base+0x116>
   1a60a:	add.w	r0, r4, #197	; 0xc5
   1a60e:	mov	r3, r7
   1a610:	cmp	r3, fp
   1a612:	bcc.n	1a668 <btrfs_truncate_item@@Base+0xec>
   1a614:	ldr	r3, [sp, #4]
   1a616:	add.w	sl, r3, #101	; 0x65
   1a61a:	ldr	r3, [sp, #8]
   1a61c:	add.w	fp, r3, sl
   1a620:	ldr	r3, [sp, #24]
   1a622:	cbz	r3, 1a67c <btrfs_truncate_item@@Base+0x100>
   1a624:	ldr	r3, [sp, #20]
   1a626:	mov	r1, fp
   1a628:	ldr	r2, [sp, #4]
   1a62a:	mov	r0, r4
   1a62c:	add	r3, r6
   1a62e:	subs	r3, r3, r2
   1a630:	mov	r2, sl
   1a632:	bl	17a8c <memmove_extent_buffer@@Base>
   1a636:	ldr	r3, [sp, #12]
   1a638:	mov	r0, r4
   1a63a:	str.w	r6, [r3, #21]
   1a63e:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   1a642:	mov	r0, r4
   1a644:	bl	196e8 <btrfs_leaf_free_space@@Base>
   1a648:	cmp	r0, #0
   1a64a:	bge.n	1a6f4 <btrfs_truncate_item@@Base+0x178>
   1a64c:	mov	r0, r4
   1a64e:	bl	25720 <btrfs_print_leaf@@Base>
   1a652:	ldr	r1, [pc, #208]	; (1a724 <btrfs_truncate_item@@Base+0x1a8>)
   1a654:	ldr	r0, [pc, #208]	; (1a728 <btrfs_truncate_item@@Base+0x1ac>)
   1a656:	movs	r3, #1
   1a658:	add	r1, pc
   1a65a:	movw	r2, #2542	; 0x9ee
   1a65e:	add.w	r1, r1, #290	; 0x122
   1a662:	add	r0, pc
   1a664:	bl	180da <rb_free_nodes@@Base+0xdc>
   1a668:	mla	r1, sl, r3, r0
   1a66c:	ldr	r2, [sp, #8]
   1a66e:	adds	r3, #1
   1a670:	ldr.w	ip, [r1, #17]
   1a674:	add	r2, ip
   1a676:	str.w	r2, [r1, #17]
   1a67a:	b.n	1a610 <btrfs_truncate_item@@Base+0x94>
   1a67c:	add	r1, sp, #32
   1a67e:	mov	r2, r7
   1a680:	mov	r0, r4
   1a682:	bl	18046 <rb_free_nodes@@Base+0x48>
   1a686:	ldrb.w	r3, [sp, #40]	; 0x28
   1a68a:	cmp	r3, #108	; 0x6c
   1a68c:	bne.n	1a6aa <btrfs_truncate_item@@Base+0x12e>
   1a68e:	ldr	r3, [sp, #12]
   1a690:	ldr.w	r1, [r3, #17]
   1a694:	ldr	r3, [sp, #16]
   1a696:	adds	r1, #101	; 0x65
   1a698:	subs	r2, r1, r5
   1a69a:	add	r2, r6
   1a69c:	add	r3, r2
   1a69e:	ldrb	r3, [r3, #20]
   1a6a0:	cbnz	r3, 1a6aa <btrfs_truncate_item@@Base+0x12e>
   1a6a2:	movs	r3, #21
   1a6a4:	mov	r0, r4
   1a6a6:	bl	17a8c <memmove_extent_buffer@@Base>
   1a6aa:	ldr	r2, [sp, #4]
   1a6ac:	mov	r1, fp
   1a6ae:	ldr	r3, [sp, #20]
   1a6b0:	mov	r0, r4
   1a6b2:	add	r5, sp, #32
   1a6b4:	subs	r3, r3, r2
   1a6b6:	mov	r2, sl
   1a6b8:	bl	17a8c <memmove_extent_buffer@@Base>
   1a6bc:	ldr.w	r2, [sp, #41]	; 0x29
   1a6c0:	ldr.w	r3, [sp, #45]	; 0x2d
   1a6c4:	mov	r0, r4
   1a6c6:	mov	r1, r2
   1a6c8:	mov	r2, r3
   1a6ca:	ldr	r3, [sp, #8]
   1a6cc:	adds	r1, r1, r3
   1a6ce:	str.w	r1, [sp, #41]	; 0x29
   1a6d2:	adc.w	r2, r2, #0
   1a6d6:	mov	r1, r5
   1a6d8:	str.w	r2, [sp, #45]	; 0x2d
   1a6dc:	mov	r2, r7
   1a6de:	bl	1803a <rb_free_nodes@@Base+0x3c>
   1a6e2:	cmp	r7, #0
   1a6e4:	bne.n	1a636 <btrfs_truncate_item@@Base+0xba>
   1a6e6:	movs	r3, #1
   1a6e8:	mov	r2, r5
   1a6ea:	mov	r1, r8
   1a6ec:	mov	r0, r9
   1a6ee:	bl	19560 <btrfs_fixup_low_keys@@Base>
   1a6f2:	b.n	1a636 <btrfs_truncate_item@@Base+0xba>
   1a6f4:	ldr	r2, [pc, #52]	; (1a72c <btrfs_truncate_item@@Base+0x1b0>)
   1a6f6:	ldr	r3, [pc, #28]	; (1a714 <btrfs_truncate_item@@Base+0x198>)
   1a6f8:	add	r2, pc
   1a6fa:	ldr	r3, [r2, r3]
   1a6fc:	ldr	r2, [r3, #0]
   1a6fe:	ldr	r3, [sp, #52]	; 0x34
   1a700:	eors	r2, r3
   1a702:	beq.n	1a708 <btrfs_truncate_item@@Base+0x18c>
   1a704:	blx	8708 <__stack_chk_fail@plt>
   1a708:	movs	r0, #0
   1a70a:	add	sp, #60	; 0x3c
   1a70c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a710:	add	r7, pc, #968	; (adr r7, 1aadc <btrfs_search_slot@@Base+0x1a0>)
   1a712:	movs	r4, r0
   1a714:	lsls	r0, r5, #8
   1a716:	movs	r0, r0
   1a718:	cmp	r1, #106	; 0x6a
   1a71a:	movs	r2, r0
   1a71c:	movs	r6, #170	; 0xaa
   1a71e:	movs	r2, r0
   1a720:	movs	r6, #159	; 0x9f
   1a722:	movs	r2, r0
   1a724:	cmp	r0, #236	; 0xec
   1a726:	movs	r2, r0
   1a728:	subs	r0, #155	; 0x9b
   1a72a:	movs	r2, r0
   1a72c:	add	r6, pc, #544	; (adr r6, 1a950 <btrfs_search_slot@@Base+0x14>)
   1a72e:	movs	r4, r0

0001a730 <btrfs_extend_item@@Base>:
   1a730:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a734:	mov	r5, r1
   1a736:	ldr	r4, [r1, #0]
   1a738:	sub	sp, #20
   1a73a:	ldr.w	r0, [r0, #464]	; 0x1d0
   1a73e:	mov	r6, r2
   1a740:	ldr.w	fp, [pc, #256]	; 1a844 <btrfs_extend_item@@Base+0x114>
   1a744:	mov	r1, r4
   1a746:	add.w	r0, r0, #384	; 0x180
   1a74a:	bl	180c0 <rb_free_nodes@@Base+0xc2>
   1a74e:	ldr.w	sl, [r4, #192]	; 0xc0
   1a752:	add	fp, pc
   1a754:	mov	r7, r0
   1a756:	mov	r0, r4
   1a758:	bl	196e8 <btrfs_leaf_free_space@@Base>
   1a75c:	cmp	r0, r6
   1a75e:	bcs.n	1a77c <btrfs_extend_item@@Base+0x4c>
   1a760:	mov	r0, r4
   1a762:	bl	25720 <btrfs_print_leaf@@Base>
   1a766:	ldr	r1, [pc, #224]	; (1a848 <btrfs_extend_item@@Base+0x118>)
   1a768:	ldr	r0, [pc, #224]	; (1a84c <btrfs_extend_item@@Base+0x11c>)
   1a76a:	movs	r3, #1
   1a76c:	add	r1, pc
   1a76e:	movw	r2, #2567	; 0xa07
   1a772:	add.w	r1, r1, #310	; 0x136
   1a776:	add	r0, pc
   1a778:	bl	180da <rb_free_nodes@@Base+0xdc>
   1a77c:	ldr	r5, [r5, #32]
   1a77e:	mov	r0, r4
   1a780:	ldr.w	r8, [pc, #204]	; 1a850 <btrfs_extend_item@@Base+0x120>
   1a784:	mov	r1, r5
   1a786:	add	r8, pc
   1a788:	bl	1801c <rb_free_nodes@@Base+0x1e>
   1a78c:	add.w	r8, r8, #310	; 0x136
   1a790:	lsrs	r3, r5, #31
   1a792:	movw	r2, #2572	; 0xa0c
   1a796:	mov	r1, r8
   1a798:	mov	r9, r0
   1a79a:	ldr	r0, [pc, #184]	; (1a854 <btrfs_extend_item@@Base+0x124>)
   1a79c:	add	r0, pc
   1a79e:	bl	18114 <rb_free_nodes@@Base+0x116>
   1a7a2:	cmp	r5, sl
   1a7a4:	str	r5, [sp, #12]
   1a7a6:	bcs.n	1a7fe <btrfs_extend_item@@Base+0xce>
   1a7a8:	add.w	r1, r4, #197	; 0xc5
   1a7ac:	movs	r0, #25
   1a7ae:	cmp	r5, sl
   1a7b0:	bne.n	1a82a <btrfs_extend_item@@Base+0xfa>
   1a7b2:	add.w	r2, r7, #101	; 0x65
   1a7b6:	sub.w	r3, r9, r7
   1a7ba:	subs	r1, r2, r6
   1a7bc:	mov	r0, r4
   1a7be:	bl	17a8c <memmove_extent_buffer@@Base>
   1a7c2:	ldr	r2, [sp, #12]
   1a7c4:	movs	r3, #25
   1a7c6:	mov	r0, r4
   1a7c8:	mla	r3, r3, r2, r4
   1a7cc:	ldr.w	r2, [r3, #218]	; 0xda
   1a7d0:	add	r6, r2
   1a7d2:	str.w	r6, [r3, #218]	; 0xda
   1a7d6:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   1a7da:	mov	r0, r4
   1a7dc:	bl	196e8 <btrfs_leaf_free_space@@Base>
   1a7e0:	cmp	r0, #0
   1a7e2:	bge.n	1a83c <btrfs_extend_item@@Base+0x10c>
   1a7e4:	mov	r0, r4
   1a7e6:	bl	25720 <btrfs_print_leaf@@Base>
   1a7ea:	ldr	r1, [pc, #108]	; (1a858 <btrfs_extend_item@@Base+0x128>)
   1a7ec:	ldr	r0, [pc, #108]	; (1a85c <btrfs_extend_item@@Base+0x12c>)
   1a7ee:	movs	r3, #1
   1a7f0:	add	r1, pc
   1a7f2:	movw	r2, #2604	; 0xa2c
   1a7f6:	add.w	r1, r1, #310	; 0x136
   1a7fa:	add	r0, pc
   1a7fc:	b.n	1a778 <btrfs_extend_item@@Base+0x48>
   1a7fe:	mov	r0, r4
   1a800:	bl	25720 <btrfs_print_leaf@@Base>
   1a804:	ldr	r3, [pc, #88]	; (1a860 <btrfs_extend_item@@Base+0x130>)
   1a806:	ldr	r2, [pc, #92]	; (1a864 <btrfs_extend_item@@Base+0x134>)
   1a808:	movs	r1, #1
   1a80a:	ldr.w	r0, [fp, r3]
   1a80e:	add	r2, pc
   1a810:	mov	r3, r5
   1a812:	str.w	sl, [sp]
   1a816:	ldr	r0, [r0, #0]
   1a818:	blx	8a64 <__fprintf_chk@plt+0x4>
   1a81c:	ldr	r0, [pc, #72]	; (1a868 <btrfs_extend_item@@Base+0x138>)
   1a81e:	movs	r3, #1
   1a820:	mov.w	r2, #2576	; 0xa10
   1a824:	add	r0, pc
   1a826:	mov	r1, r8
   1a828:	b.n	1a778 <btrfs_extend_item@@Base+0x48>
   1a82a:	mla	r2, r0, r5, r1
   1a82e:	adds	r5, #1
   1a830:	ldr.w	r3, [r2, #17]
   1a834:	subs	r3, r3, r6
   1a836:	str.w	r3, [r2, #17]
   1a83a:	b.n	1a7ae <btrfs_extend_item@@Base+0x7e>
   1a83c:	movs	r0, #0
   1a83e:	add	sp, #20
   1a840:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a844:	add	r6, pc, #184	; (adr r6, 1a900 <btrfs_del_ptr@@Base+0x94>)
   1a846:	movs	r4, r0
   1a848:	movs	r7, #216	; 0xd8
   1a84a:	movs	r2, r0
   1a84c:	adds	r7, #135	; 0x87
   1a84e:	movs	r2, r0
   1a850:	movs	r7, #190	; 0xbe
   1a852:	movs	r2, r0
   1a854:	movs	r4, #252	; 0xfc
   1a856:	movs	r2, r0
   1a858:	movs	r7, #84	; 0x54
   1a85a:	movs	r2, r0
   1a85c:	adds	r7, #3
   1a85e:	movs	r2, r0
   1a860:	lsls	r0, r7, #8
   1a862:	movs	r0, r0
   1a864:	movs	r4, #163	; 0xa3
   1a866:	movs	r2, r0
   1a868:	adds	r6, #217	; 0xd9
   1a86a:	movs	r2, r0

0001a86c <btrfs_del_ptr@@Base>:
   1a86c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1a870:	mov	r8, r2
   1a872:	ldr	r2, [pc, #180]	; (1a928 <btrfs_del_ptr@@Base+0xbc>)
   1a874:	mov	r5, r3
   1a876:	ldr	r3, [pc, #180]	; (1a92c <btrfs_del_ptr@@Base+0xc0>)
   1a878:	sub	sp, #28
   1a87a:	add	r2, pc
   1a87c:	ldr.w	r4, [r1, r8, lsl #2]
   1a880:	mov	r6, r0
   1a882:	mov	r7, r1
   1a884:	ldr	r3, [r2, r3]
   1a886:	ldr	r3, [r3, #0]
   1a888:	str	r3, [sp, #20]
   1a88a:	mov.w	r3, #0
   1a88e:	ldr.w	r3, [r4, #192]	; 0xc0
   1a892:	add.w	r9, r3, #4294967295	; 0xffffffff
   1a896:	cmp	r9, r5
   1a898:	bls.n	1a8b2 <btrfs_del_ptr@@Base+0x46>
   1a89a:	subs	r3, r3, r5
   1a89c:	add.w	r1, r5, r5, lsl #5
   1a8a0:	add.w	r2, r1, #134	; 0x86
   1a8a4:	mov	r0, r4
   1a8a6:	add.w	r3, r3, r3, lsl #5
   1a8aa:	adds	r1, #101	; 0x65
   1a8ac:	subs	r3, #33	; 0x21
   1a8ae:	bl	17a8c <memmove_extent_buffer@@Base>
   1a8b2:	str.w	r9, [r4, #192]	; 0xc0
   1a8b6:	cmp.w	r9, #0
   1a8ba:	bne.n	1a8fe <btrfs_del_ptr@@Base+0x92>
   1a8bc:	ldr	r3, [r6, #0]
   1a8be:	cmp	r3, r4
   1a8c0:	bne.n	1a8fe <btrfs_del_ptr@@Base+0x92>
   1a8c2:	ldrb.w	r3, [r4, #196]	; 0xc4
   1a8c6:	movw	r2, #2775	; 0xad7
   1a8ca:	ldr	r1, [pc, #100]	; (1a930 <btrfs_del_ptr@@Base+0xc4>)
   1a8cc:	subs	r3, #1
   1a8ce:	ldr	r0, [pc, #100]	; (1a934 <btrfs_del_ptr@@Base+0xc8>)
   1a8d0:	add	r1, pc
   1a8d2:	add.w	r1, r1, #328	; 0x148
   1a8d6:	add	r0, pc
   1a8d8:	it	ne
   1a8da:	movne	r3, #1
   1a8dc:	bl	18114 <rb_free_nodes@@Base+0x116>
   1a8e0:	strb.w	r9, [r4, #196]	; 0xc4
   1a8e4:	mov	r0, r4
   1a8e6:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   1a8ea:	ldr	r2, [pc, #76]	; (1a938 <btrfs_del_ptr@@Base+0xcc>)
   1a8ec:	ldr	r3, [pc, #60]	; (1a92c <btrfs_del_ptr@@Base+0xc0>)
   1a8ee:	add	r2, pc
   1a8f0:	ldr	r3, [r2, r3]
   1a8f2:	ldr	r2, [r3, #0]
   1a8f4:	ldr	r3, [sp, #20]
   1a8f6:	eors	r2, r3
   1a8f8:	beq.n	1a91e <btrfs_del_ptr@@Base+0xb2>
   1a8fa:	blx	8708 <__stack_chk_fail@plt>
   1a8fe:	cmp	r5, #0
   1a900:	bne.n	1a8e4 <btrfs_del_ptr@@Base+0x78>
   1a902:	mov	r2, r5
   1a904:	mov	r5, sp
   1a906:	mov	r1, r5
   1a908:	mov	r0, r4
   1a90a:	bl	18052 <rb_free_nodes@@Base+0x54>
   1a90e:	add.w	r3, r8, #1
   1a912:	mov	r2, r5
   1a914:	mov	r1, r7
   1a916:	mov	r0, r6
   1a918:	bl	19560 <btrfs_fixup_low_keys@@Base>
   1a91c:	b.n	1a8e4 <btrfs_del_ptr@@Base+0x78>
   1a91e:	movs	r0, #0
   1a920:	add	sp, #28
   1a922:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1a926:	nop
   1a928:	add	r5, pc, #24	; (adr r5, 1a944 <btrfs_search_slot@@Base+0x8>)
   1a92a:	movs	r4, r0
   1a92c:	lsls	r0, r5, #8
   1a92e:	movs	r0, r0
   1a930:	movs	r6, #116	; 0x74
   1a932:	movs	r2, r0
   1a934:	movs	r3, #250	; 0xfa
   1a936:	movs	r2, r0
   1a938:	add	r4, pc, #584	; (adr r4, 1ab84 <btrfs_search_slot@@Base+0x248>)
   1a93a:	movs	r4, r0

0001a93c <btrfs_search_slot@@Base>:
   1a93c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a940:	mov	fp, r3
   1a942:	vpush	{d8-d9}
   1a946:	mov	sl, r0
   1a948:	ldr.w	r3, [pc, #1208]	; 1ae04 <btrfs_search_slot@@Base+0x4c8>
   1a94c:	mov	r4, r1
   1a94e:	sub	sp, #140	; 0x8c
   1a950:	str	r2, [sp, #56]	; 0x38
   1a952:	ldr.w	r2, [pc, #1204]	; 1ae08 <btrfs_search_slot@@Base+0x4cc>
   1a956:	add	r2, pc
   1a958:	ldr	r3, [r2, r3]
   1a95a:	ldr	r3, [r3, #0]
   1a95c:	str	r3, [sp, #132]	; 0x84
   1a95e:	mov.w	r3, #0
   1a962:	ldrsb.w	r3, [fp, #64]	; 0x40
   1a966:	str	r3, [sp, #88]	; 0x58
   1a968:	ldr.w	r3, [r1, #464]	; 0x1d0
   1a96c:	vmov	s16, r3
   1a970:	ldrb.w	r3, [fp, #65]	; 0x41
   1a974:	str	r3, [sp, #60]	; 0x3c
   1a976:	cmp	r3, #0
   1a978:	beq.n	1aa26 <btrfs_search_slot@@Base+0xea>
   1a97a:	ldr	r3, [sp, #192]	; 0xc0
   1a97c:	cmp	r3, #0
   1a97e:	ite	le
   1a980:	movle	r3, #0
   1a982:	movgt	r3, #1
   1a984:	ldr.w	r1, [pc, #1156]	; 1ae0c <btrfs_search_slot@@Base+0x4d0>
   1a988:	movw	r2, #1173	; 0x495
   1a98c:	ldr.w	r0, [pc, #1152]	; 1ae10 <btrfs_search_slot@@Base+0x4d4>
   1a990:	add	r1, pc
   1a992:	add.w	r1, r1, #342	; 0x156
   1a996:	add	r0, pc
   1a998:	str	r1, [sp, #40]	; 0x28
   1a99a:	bl	1815c <rb_free_nodes@@Base+0x15e>
   1a99e:	ldr.w	r3, [fp]
   1a9a2:	movw	r2, #1174	; 0x496
   1a9a6:	ldr.w	r0, [pc, #1132]	; 1ae14 <btrfs_search_slot@@Base+0x4d8>
   1a9aa:	subs	r3, #0
   1a9ac:	ldr	r1, [sp, #40]	; 0x28
   1a9ae:	add	r0, pc
   1a9b0:	it	ne
   1a9b2:	movne	r3, #1
   1a9b4:	bl	1815c <rb_free_nodes@@Base+0x15e>
   1a9b8:	ldr	r3, [sp, #192]	; 0xc0
   1a9ba:	ldr	r2, [sp, #196]	; 0xc4
   1a9bc:	subs	r3, #0
   1a9be:	it	ne
   1a9c0:	movne	r3, #1
   1a9c2:	cmp	r2, #0
   1a9c4:	it	ne
   1a9c6:	movne	r3, #0
   1a9c8:	vmov	s19, r3
   1a9cc:	ldr	r3, [r4, #0]
   1a9ce:	ldr	r2, [r3, #80]	; 0x50
   1a9d0:	str	r3, [sp, #96]	; 0x60
   1a9d2:	adds	r2, #1
   1a9d4:	str	r2, [r3, #80]	; 0x50
   1a9d6:	ldr.w	r3, [pc, #1088]	; 1ae18 <btrfs_search_slot@@Base+0x4dc>
   1a9da:	add	r3, pc
   1a9dc:	str	r3, [sp, #92]	; 0x5c
   1a9de:	ldr	r2, [sp, #96]	; 0x60
   1a9e0:	cmp	r2, #0
   1a9e2:	beq.w	1abc4 <btrfs_search_slot@@Base+0x288>
   1a9e6:	ldr	r3, [sp, #196]	; 0xc4
   1a9e8:	ldrb.w	r5, [r2, #196]	; 0xc4
   1a9ec:	cbz	r3, 1aa2a <btrfs_search_slot@@Base+0xee>
   1a9ee:	add.w	r3, fp, r5, lsl #2
   1a9f2:	add	r1, sp, #96	; 0x60
   1a9f4:	str	r1, [sp, #4]
   1a9f6:	mov	r0, sl
   1a9f8:	ldr	r1, [r3, #36]	; 0x24
   1a9fa:	str	r1, [sp, #0]
   1a9fc:	mov	r1, r4
   1a9fe:	ldr	r3, [r3, #4]
   1aa00:	bl	18f84 <btrfs_cow_block@@Base>
   1aa04:	mov	r9, r0
   1aa06:	cbz	r0, 1aa2a <btrfs_search_slot@@Base+0xee>
   1aa08:	ldr	r0, [sp, #96]	; 0x60
   1aa0a:	bl	17320 <free_extent_buffer@@Base>
   1aa0e:	ldr.w	r2, [pc, #1036]	; 1ae1c <btrfs_search_slot@@Base+0x4e0>
   1aa12:	ldr	r3, [pc, #1008]	; (1ae04 <btrfs_search_slot@@Base+0x4c8>)
   1aa14:	add	r2, pc
   1aa16:	ldr	r3, [r2, r3]
   1aa18:	ldr	r2, [r3, #0]
   1aa1a:	ldr	r3, [sp, #132]	; 0x84
   1aa1c:	eors	r2, r3
   1aa1e:	beq.w	1b4aa <btrfs_search_slot@@Base+0xb6e>
   1aa22:	blx	8708 <__stack_chk_fail@plt>
   1aa26:	ldr	r3, [sp, #60]	; 0x3c
   1aa28:	b.n	1a984 <btrfs_search_slot@@Base+0x48>
   1aa2a:	ldr	r3, [sp, #92]	; 0x5c
   1aa2c:	movw	r2, #1194	; 0x4aa
   1aa30:	ldr	r0, [pc, #1004]	; (1ae20 <btrfs_search_slot@@Base+0x4e4>)
   1aa32:	add.w	r1, r3, #342	; 0x156
   1aa36:	vmov	r3, s19
   1aa3a:	add	r0, pc
   1aa3c:	str	r1, [sp, #40]	; 0x28
   1aa3e:	bl	18114 <rb_free_nodes@@Base+0x116>
   1aa42:	ldr	r3, [sp, #96]	; 0x60
   1aa44:	ldrb.w	r3, [r3, #196]	; 0xc4
   1aa48:	cmp	r3, r5
   1aa4a:	beq.n	1aa5c <btrfs_search_slot@@Base+0x120>
   1aa4c:	ldr	r0, [pc, #980]	; (1ae24 <btrfs_search_slot@@Base+0x4e8>)
   1aa4e:	movs	r3, #1
   1aa50:	ldr	r1, [sp, #40]	; 0x28
   1aa52:	movw	r2, #1196	; 0x4ac
   1aa56:	add	r0, pc
   1aa58:	bl	1811e <rb_free_nodes@@Base+0x120>
   1aa5c:	ldr	r3, [sp, #96]	; 0x60
   1aa5e:	ldrb.w	r2, [r3, #196]	; 0xc4
   1aa62:	str.w	r3, [fp, r2, lsl #2]
   1aa66:	add.w	r8, fp, r2, lsl #2
   1aa6a:	ldrb.w	r3, [fp, #67]	; 0x43
   1aa6e:	strd	r2, r2, [sp, #40]	; 0x28
   1aa72:	cmp	r3, #0
   1aa74:	beq.n	1aae0 <btrfs_search_slot@@Base+0x1a4>
   1aa76:	ldr	r2, [sp, #44]	; 0x2c
   1aa78:	add	r3, sp, #100	; 0x64
   1aa7a:	ldr	r1, [sp, #56]	; 0x38
   1aa7c:	ldr	r0, [sp, #96]	; 0x60
   1aa7e:	bl	19288 <btrfs_bin_search@@Base>
   1aa82:	ldr	r2, [sp, #44]	; 0x2c
   1aa84:	ldr	r3, [sp, #100]	; 0x64
   1aa86:	mov	r9, r0
   1aa88:	cmp	r2, #0
   1aa8a:	bne.n	1aaf6 <btrfs_search_slot@@Base+0x1ba>
   1aa8c:	str.w	r3, [fp, #32]
   1aa90:	ldr	r3, [sp, #192]	; 0xc0
   1aa92:	cmp	r3, #0
   1aa94:	ble.n	1aa0e <btrfs_search_slot@@Base+0xd2>
   1aa96:	ldr	r0, [sp, #96]	; 0x60
   1aa98:	bl	196e8 <btrfs_leaf_free_space@@Base>
   1aa9c:	ldr	r3, [sp, #192]	; 0xc0
   1aa9e:	cmp	r0, r3
   1aaa0:	bge.n	1aa0e <btrfs_search_slot@@Base+0xd2>
   1aaa2:	clz	r3, r9
   1aaa6:	mov	r1, r4
   1aaa8:	ldr	r2, [sp, #56]	; 0x38
   1aaaa:	mov	r0, sl
   1aaac:	lsrs	r3, r3, #5
   1aaae:	str	r3, [sp, #4]
   1aab0:	ldr	r3, [sp, #192]	; 0xc0
   1aab2:	str	r3, [sp, #0]
   1aab4:	mov	r3, fp
   1aab6:	bl	1a050 <btrfs_check_leaf@@Base+0x8e0>
   1aaba:	ldr	r1, [pc, #876]	; (1ae28 <btrfs_search_slot@@Base+0x4ec>)
   1aabc:	movw	r2, #1246	; 0x4de
   1aac0:	add	r1, pc
   1aac2:	add.w	r1, r1, #342	; 0x156
   1aac6:	cmp	r0, #0
   1aac8:	mov	r4, r0
   1aaca:	ldr	r0, [pc, #864]	; (1ae2c <btrfs_search_slot@@Base+0x4f0>)
   1aacc:	ite	le
   1aace:	movle	r3, #0
   1aad0:	movgt	r3, #1
   1aad2:	add	r0, pc
   1aad4:	cmp	r4, #0
   1aad6:	it	ne
   1aad8:	movne	r9, r4
   1aada:	bl	18114 <rb_free_nodes@@Base+0x116>
   1aade:	b.n	1aa0e <btrfs_search_slot@@Base+0xd2>
   1aae0:	vmov	r0, s16
   1aae4:	mov	r1, fp
   1aae6:	ldr	r2, [sp, #44]	; 0x2c
   1aae8:	bl	19a30 <btrfs_check_leaf@@Base+0x2c0>
   1aaec:	cmp	r0, #0
   1aaee:	beq.n	1aa76 <btrfs_search_slot@@Base+0x13a>
   1aaf0:	mov.w	r9, #4294967295	; 0xffffffff
   1aaf4:	b.n	1aa0e <btrfs_search_slot@@Base+0xd2>
   1aaf6:	cbz	r0, 1ab02 <btrfs_search_slot@@Base+0x1c6>
   1aaf8:	cmp	r3, #0
   1aafa:	itt	gt
   1aafc:	addgt.w	r3, r3, #4294967295	; 0xffffffff
   1ab00:	strgt	r3, [sp, #100]	; 0x64
   1ab02:	ldr	r3, [sp, #100]	; 0x64
   1ab04:	str	r3, [sp, #48]	; 0x30
   1ab06:	str.w	r3, [r8, #32]
   1ab0a:	ldrb.w	r3, [fp, #66]	; 0x42
   1ab0e:	cbnz	r3, 1ab18 <btrfs_search_slot@@Base+0x1dc>
   1ab10:	ldr	r3, [sp, #192]	; 0xc0
   1ab12:	cmp	r3, #0
   1ab14:	ble.w	1af66 <btrfs_search_slot@@Base+0x62a>
   1ab18:	vmov	r3, s16
   1ab1c:	ldr.w	r2, [r3, #384]	; 0x180
   1ab20:	ldr	r3, [pc, #732]	; (1ae00 <btrfs_search_slot@@Base+0x4c4>)
   1ab22:	subs	r2, #101	; 0x65
   1ab24:	umull	r2, r3, r2, r3
   1ab28:	ldr	r2, [sp, #96]	; 0x60
   1ab2a:	ldr.w	r2, [r2, #192]	; 0xc0
   1ab2e:	lsrs	r3, r3, #3
   1ab30:	subs	r3, #3
   1ab32:	cmp	r3, r2
   1ab34:	bhi.w	1af66 <btrfs_search_slot@@Base+0x62a>
   1ab38:	ldr	r3, [sp, #40]	; 0x28
   1ab3a:	ldr	r7, [pc, #756]	; (1ae30 <btrfs_search_slot@@Base+0x4f4>)
   1ab3c:	ldr.w	r6, [fp, r3, lsl #2]
   1ab40:	add	r7, pc
   1ab42:	ldrd	r2, r3, [sl, #8]
   1ab46:	ldr.w	r1, [r6, #180]	; 0xb4
   1ab4a:	ldr.w	r0, [r6, #176]	; 0xb0
   1ab4e:	cmp	r1, r3
   1ab50:	add.w	r1, r7, #360	; 0x168
   1ab54:	it	eq
   1ab56:	cmpeq	r0, r2
   1ab58:	ldr	r0, [pc, #728]	; (1ae34 <btrfs_search_slot@@Base+0x4f8>)
   1ab5a:	movw	r2, #1668	; 0x684
   1ab5e:	ite	ne
   1ab60:	movne	r3, #1
   1ab62:	moveq	r3, #0
   1ab64:	add	r0, pc
   1ab66:	bl	1815c <rb_free_nodes@@Base+0x15e>
   1ab6a:	ldr	r3, [r4, #0]
   1ab6c:	cmp	r6, r3
   1ab6e:	bne.n	1abca <btrfs_search_slot@@Base+0x28e>
   1ab70:	ldr	r3, [sp, #44]	; 0x2c
   1ab72:	mov	r2, fp
   1ab74:	mov	r1, r4
   1ab76:	mov	r0, sl
   1ab78:	adds	r3, #1
   1ab7a:	bl	185c2 <add_root_to_dirty_list@@Base+0x2e>
   1ab7e:	mov	r9, r0
   1ab80:	cmp	r0, #0
   1ab82:	beq.w	1acf8 <btrfs_search_slot@@Base+0x3bc>
   1ab86:	ldr	r1, [pc, #688]	; (1ae38 <btrfs_search_slot@@Base+0x4fc>)
   1ab88:	cmp.w	r9, #0
   1ab8c:	ldr	r0, [pc, #684]	; (1ae3c <btrfs_search_slot@@Base+0x500>)
   1ab8e:	movw	r2, #1211	; 0x4bb
   1ab92:	add	r1, pc
   1ab94:	ite	le
   1ab96:	movle	r3, #0
   1ab98:	movgt	r3, #1
   1ab9a:	add.w	r1, r1, #342	; 0x156
   1ab9e:	add	r0, pc
   1aba0:	bl	18114 <rb_free_nodes@@Base+0x116>
   1aba4:	cmp.w	r9, #0
   1aba8:	bne.w	1aa0e <btrfs_search_slot@@Base+0xd2>
   1abac:	ldr	r3, [sp, #40]	; 0x28
   1abae:	ldr.w	r3, [fp, r3, lsl #2]
   1abb2:	str	r3, [sp, #96]	; 0x60
   1abb4:	ldr.w	r3, [r8, #32]
   1abb8:	str	r3, [sp, #100]	; 0x64
   1abba:	ldr	r3, [sp, #60]	; 0x3c
   1abbc:	ldr	r2, [sp, #44]	; 0x2c
   1abbe:	cmp	r3, r2
   1abc0:	bne.w	1b46e <btrfs_search_slot@@Base+0xb32>
   1abc4:	mov.w	r9, #1
   1abc8:	b.n	1aa0e <btrfs_search_slot@@Base+0xd2>
   1abca:	movs	r3, #0
   1abcc:	strd	r3, r3, [sp, #104]	; 0x68
   1abd0:	ldr.w	r3, [r8, #32]
   1abd4:	ldr.w	r9, [r4, #464]	; 0x1d0
   1abd8:	str	r3, [sp, #48]	; 0x30
   1abda:	ldr	r3, [sp, #40]	; 0x28
   1abdc:	ldr.w	r5, [fp, r3, lsl #2]
   1abe0:	ldrd	r2, r3, [sl, #8]
   1abe4:	ldr.w	r1, [r5, #180]	; 0xb4
   1abe8:	ldr.w	r0, [r5, #176]	; 0xb0
   1abec:	cmp	r1, r3
   1abee:	addw	r1, r7, #371	; 0x173
   1abf2:	it	eq
   1abf4:	cmpeq	r0, r2
   1abf6:	ldr	r0, [pc, #584]	; (1ae40 <btrfs_search_slot@@Base+0x504>)
   1abf8:	mov.w	r2, #932	; 0x3a4
   1abfc:	ite	ne
   1abfe:	movne	r3, #1
   1ac00:	moveq	r3, #0
   1ac02:	add	r0, pc
   1ac04:	bl	1815c <rb_free_nodes@@Base+0x15e>
   1ac08:	ldr	r3, [sp, #44]	; 0x2c
   1ac0a:	cmp	r3, #6
   1ac0c:	ble.n	1ac16 <btrfs_search_slot@@Base+0x2da>
   1ac0e:	ldr	r3, [sp, #40]	; 0x28
   1ac10:	ldr.w	r6, [fp, r3, lsl #2]
   1ac14:	b.n	1acf8 <btrfs_search_slot@@Base+0x3bc>
   1ac16:	ldr.w	r6, [r8, #4]
   1ac1a:	cmp	r6, #0
   1ac1c:	beq.n	1ac0e <btrfs_search_slot@@Base+0x2d2>
   1ac1e:	ldr.w	r3, [r8, #36]	; 0x24
   1ac22:	mov	r1, r6
   1ac24:	mov	r0, r9
   1ac26:	subs	r7, r3, #1
   1ac28:	str	r3, [sp, #52]	; 0x34
   1ac2a:	mov	r2, r7
   1ac2c:	bl	1930e <read_node_slot@@Base>
   1ac30:	mov	r2, r0
   1ac32:	str	r0, [sp, #108]	; 0x6c
   1ac34:	bl	180ac <rb_free_nodes@@Base+0xae>
   1ac38:	cmp	r0, #0
   1ac3a:	beq.w	1ad54 <btrfs_search_slot@@Base+0x418>
   1ac3e:	ldr.w	r3, [r2, #192]	; 0xc0
   1ac42:	ldr.w	r0, [r9, #384]	; 0x180
   1ac46:	str	r3, [sp, #64]	; 0x40
   1ac48:	subs	r0, #101	; 0x65
   1ac4a:	ldr	r3, [pc, #436]	; (1ae00 <btrfs_search_slot@@Base+0x4c4>)
   1ac4c:	umull	r0, r1, r0, r3
   1ac50:	lsrs	r3, r1, #3
   1ac52:	ldr	r1, [sp, #64]	; 0x40
   1ac54:	subs	r3, #1
   1ac56:	cmp	r1, r3
   1ac58:	bcs.n	1ad4e <btrfs_search_slot@@Base+0x412>
   1ac5a:	add	r3, sp, #108	; 0x6c
   1ac5c:	mov	r1, r4
   1ac5e:	strd	r7, r3, [sp]
   1ac62:	mov	r0, sl
   1ac64:	mov	r3, r6
   1ac66:	bl	18f84 <btrfs_cow_block@@Base>
   1ac6a:	cmp	r0, #0
   1ac6c:	bne.n	1ad4e <btrfs_search_slot@@Base+0x412>
   1ac6e:	str	r0, [sp, #0]
   1ac70:	mov	r3, r5
   1ac72:	ldr	r2, [sp, #108]	; 0x6c
   1ac74:	add.w	r0, sl, #8
   1ac78:	ldr.w	r1, [r4, #464]	; 0x1d0
   1ac7c:	bl	18348 <rb_free_nodes@@Base+0x34a>
   1ac80:	mov	r2, r0
   1ac82:	cmp	r0, #0
   1ac84:	bne.n	1ad4e <btrfs_search_slot@@Base+0x412>
   1ac86:	ldr	r3, [sp, #48]	; 0x30
   1ac88:	mov	r0, r5
   1ac8a:	ldr	r1, [sp, #64]	; 0x40
   1ac8c:	add	r3, r1
   1ac8e:	add	r1, sp, #112	; 0x70
   1ac90:	str	r1, [sp, #48]	; 0x30
   1ac92:	mov	r7, r3
   1ac94:	bl	18052 <rb_free_nodes@@Base+0x54>
   1ac98:	ldrd	r1, r2, [sp, #48]	; 0x30
   1ac9c:	mov	r0, r6
   1ac9e:	bl	1802e <rb_free_nodes@@Base+0x30>
   1aca2:	mov	r0, r6
   1aca4:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   1aca8:	ldr	r0, [sp, #108]	; 0x6c
   1acaa:	ldr.w	r3, [r0, #192]	; 0xc0
   1acae:	cmp	r7, r3
   1acb0:	bcs.n	1acca <btrfs_search_slot@@Base+0x38e>
   1acb2:	ldr	r3, [sp, #40]	; 0x28
   1acb4:	str.w	r0, [fp, r3, lsl #2]
   1acb8:	ldr.w	r3, [r8, #36]	; 0x24
   1acbc:	subs	r3, #1
   1acbe:	str.w	r3, [r8, #36]	; 0x24
   1acc2:	mov	r0, r5
   1acc4:	str.w	r7, [r8, #32]
   1acc8:	b.n	1acd0 <btrfs_search_slot@@Base+0x394>
   1acca:	subs	r7, r7, r3
   1accc:	str.w	r7, [r8, #32]
   1acd0:	bl	17320 <free_extent_buffer@@Base>
   1acd4:	ldr	r3, [sp, #40]	; 0x28
   1acd6:	ldr.w	r6, [fp, r3, lsl #2]
   1acda:	ldr.w	r3, [r4, #464]	; 0x1d0
   1acde:	ldr.w	r1, [r6, #192]	; 0xc0
   1ace2:	ldr.w	r2, [r3, #384]	; 0x180
   1ace6:	ldr	r3, [pc, #280]	; (1ae00 <btrfs_search_slot@@Base+0x4c4>)
   1ace8:	subs	r2, #101	; 0x65
   1acea:	umull	r2, r3, r2, r3
   1acee:	lsrs	r3, r3, #3
   1acf0:	subs	r3, #3
   1acf2:	cmp	r1, r3
   1acf4:	bcc.w	1af60 <btrfs_search_slot@@Base+0x624>
   1acf8:	ldr.w	r3, [r6, #192]	; 0xc0
   1acfc:	add.w	r9, sp, #112	; 0x70
   1ad00:	mov	r0, r6
   1ad02:	adds	r7, r3, #1
   1ad04:	mov	r1, r9
   1ad06:	str	r3, [sp, #48]	; 0x30
   1ad08:	lsrs	r7, r7, #1
   1ad0a:	mov	r2, r7
   1ad0c:	bl	18052 <rb_free_nodes@@Base+0x54>
   1ad10:	ldr.w	r1, [r4, #464]	; 0x1d0
   1ad14:	movs	r2, #0
   1ad16:	movs	r3, #0
   1ad18:	strd	r2, r3, [sp, #24]
   1ad1c:	mov	r0, sl
   1ad1e:	ldrd	r2, r3, [r6, #40]	; 0x28
   1ad22:	strd	r2, r3, [sp, #16]
   1ad26:	ldr	r3, [sp, #44]	; 0x2c
   1ad28:	strd	r9, r3, [sp, #8]
   1ad2c:	ldr.w	r2, [r4, #447]	; 0x1bf
   1ad30:	ldr.w	r3, [r4, #451]	; 0x1c3
   1ad34:	strd	r2, r3, [sp]
   1ad38:	ldr.w	r2, [r1, #384]	; 0x180
   1ad3c:	mov	r1, r4
   1ad3e:	bl	23164 <btrfs_alloc_free_block@@Base>
   1ad42:	cmn.w	r0, #4096	; 0x1000
   1ad46:	mov	r5, r0
   1ad48:	bls.n	1ae44 <btrfs_search_slot@@Base+0x508>
   1ad4a:	mov	r9, r0
   1ad4c:	b.n	1ab86 <btrfs_search_slot@@Base+0x24a>
   1ad4e:	ldr	r0, [sp, #108]	; 0x6c
   1ad50:	bl	17320 <free_extent_buffer@@Base>
   1ad54:	ldr	r7, [sp, #52]	; 0x34
   1ad56:	mov	r1, r6
   1ad58:	mov	r0, r9
   1ad5a:	adds	r7, #1
   1ad5c:	mov	r2, r7
   1ad5e:	bl	1930e <read_node_slot@@Base>
   1ad62:	mov	r2, r0
   1ad64:	str	r0, [sp, #104]	; 0x68
   1ad66:	bl	180ac <rb_free_nodes@@Base+0xae>
   1ad6a:	cmp	r0, #0
   1ad6c:	beq.w	1ac0e <btrfs_search_slot@@Base+0x2d2>
   1ad70:	ldr.w	r3, [r4, #464]	; 0x1d0
   1ad74:	ldr.w	ip, [r2, #192]	; 0xc0
   1ad78:	ldr.w	r0, [r3, #384]	; 0x180
   1ad7c:	ldr	r3, [pc, #128]	; (1ae00 <btrfs_search_slot@@Base+0x4c4>)
   1ad7e:	subs	r0, #101	; 0x65
   1ad80:	umull	r0, r1, r0, r3
   1ad84:	lsrs	r3, r1, #3
   1ad86:	subs	r3, #1
   1ad88:	cmp	ip, r3
   1ad8a:	bcs.n	1adf6 <btrfs_search_slot@@Base+0x4ba>
   1ad8c:	add	r3, sp, #104	; 0x68
   1ad8e:	mov	r1, r4
   1ad90:	strd	r7, r3, [sp]
   1ad94:	mov	r0, sl
   1ad96:	mov	r3, r6
   1ad98:	bl	18f84 <btrfs_cow_block@@Base>
   1ad9c:	cbnz	r0, 1adf6 <btrfs_search_slot@@Base+0x4ba>
   1ad9e:	ldr	r2, [sp, #104]	; 0x68
   1ada0:	add.w	r1, r4, #464	; 0x1d0
   1ada4:	add.w	r0, sl, #8
   1ada8:	mov	r3, r5
   1adaa:	bl	18258 <rb_free_nodes@@Base+0x25a>
   1adae:	mov	r2, r0
   1adb0:	cbnz	r0, 1adf6 <btrfs_search_slot@@Base+0x4ba>
   1adb2:	add	r1, sp, #112	; 0x70
   1adb4:	ldr	r0, [sp, #104]	; 0x68
   1adb6:	str	r1, [sp, #52]	; 0x34
   1adb8:	bl	18052 <rb_free_nodes@@Base+0x54>
   1adbc:	mov	r2, r7
   1adbe:	ldr	r1, [sp, #52]	; 0x34
   1adc0:	mov	r0, r6
   1adc2:	bl	1802e <rb_free_nodes@@Base+0x30>
   1adc6:	mov	r0, r6
   1adc8:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   1adcc:	ldr.w	r3, [r5, #192]	; 0xc0
   1add0:	ldr	r2, [sp, #48]	; 0x30
   1add2:	cmp	r3, r2
   1add4:	bhi.n	1adf2 <btrfs_search_slot@@Base+0x4b6>
   1add6:	ldr	r3, [sp, #104]	; 0x68
   1add8:	ldr	r2, [sp, #40]	; 0x28
   1adda:	str.w	r3, [fp, r2, lsl #2]
   1adde:	ldr.w	r3, [r8, #36]	; 0x24
   1ade2:	adds	r3, #1
   1ade4:	str.w	r3, [r8, #36]	; 0x24
   1ade8:	ldr	r3, [sp, #48]	; 0x30
   1adea:	ldr.w	r7, [r5, #192]	; 0xc0
   1adee:	subs	r7, r3, r7
   1adf0:	b.n	1acc2 <btrfs_search_slot@@Base+0x386>
   1adf2:	ldr	r0, [sp, #104]	; 0x68
   1adf4:	b.n	1acd0 <btrfs_search_slot@@Base+0x394>
   1adf6:	ldr	r0, [sp, #104]	; 0x68
   1adf8:	bl	17320 <free_extent_buffer@@Base>
   1adfc:	b.n	1ac0e <btrfs_search_slot@@Base+0x2d2>
   1adfe:	nop
   1ae00:	strh	r1, [r4, #30]
   1ae02:	subs	r6, #15
   1ae04:	lsls	r0, r5, #8
   1ae06:	movs	r0, r0
   1ae08:	add	r4, pc, #168	; (adr r4, 1aeb4 <btrfs_search_slot@@Base+0x578>)
   1ae0a:	movs	r4, r0
   1ae0c:	movs	r5, #180	; 0xb4
   1ae0e:	movs	r2, r0
   1ae10:	movs	r3, #94	; 0x5e
   1ae12:	movs	r2, r0
   1ae14:	movs	r3, #98	; 0x62
   1ae16:	movs	r2, r0
   1ae18:	movs	r5, #106	; 0x6a
   1ae1a:	movs	r2, r0
   1ae1c:	add	r3, pc, #432	; (adr r3, 1afd0 <btrfs_search_slot@@Base+0x694>)
   1ae1e:	movs	r4, r0
   1ae20:	movs	r2, #234	; 0xea
   1ae22:	movs	r2, r0
   1ae24:	adds	r4, #167	; 0xa7
   1ae26:	movs	r2, r0
   1ae28:	movs	r4, #132	; 0x84
   1ae2a:	movs	r2, r0
   1ae2c:	movs	r2, #190	; 0xbe
   1ae2e:	movs	r2, r0
   1ae30:	movs	r4, #4
   1ae32:	movs	r2, r0
   1ae34:	movs	r1, #208	; 0xd0
   1ae36:	movs	r2, r0
   1ae38:	movs	r3, #178	; 0xb2
   1ae3a:	movs	r2, r0
   1ae3c:	movs	r1, #242	; 0xf2
   1ae3e:	movs	r2, r0
   1ae40:	movs	r1, #95	; 0x5f
   1ae42:	movs	r2, r0
   1ae44:	movs	r2, #0
   1ae46:	movs	r3, #101	; 0x65
   1ae48:	mov	r1, r2
   1ae4a:	bl	17aa2 <memset_extent_buffer@@Base>
   1ae4e:	ldrb.w	r3, [r6, #196]	; 0xc4
   1ae52:	mov	r0, r5
   1ae54:	strb.w	r3, [r5, #196]	; 0xc4
   1ae58:	ldr	r3, [r5, #40]	; 0x28
   1ae5a:	str.w	r3, [r5, #144]	; 0x90
   1ae5e:	ldr	r3, [r5, #44]	; 0x2c
   1ae60:	str.w	r3, [r5, #148]	; 0x94
   1ae64:	ldrd	r2, r3, [sl, #8]
   1ae68:	str.w	r2, [r5, #176]	; 0xb0
   1ae6c:	str.w	r3, [r5, #180]	; 0xb4
   1ae70:	ldr.w	r2, [r5, #152]	; 0x98
   1ae74:	ldr.w	r3, [r5, #156]	; 0x9c
   1ae78:	bic.w	r3, r3, #4278190080	; 0xff000000
   1ae7c:	str.w	r2, [r5, #152]	; 0x98
   1ae80:	orr.w	r3, r3, #16777216	; 0x1000000
   1ae84:	str.w	r3, [r5, #156]	; 0x9c
   1ae88:	ldr.w	r2, [r4, #447]	; 0x1bf
   1ae8c:	ldr.w	r3, [r4, #451]	; 0x1c3
   1ae90:	str.w	r2, [r5, #184]	; 0xb8
   1ae94:	movs	r2, #32
   1ae96:	str.w	r3, [r5, #188]	; 0xbc
   1ae9a:	ldr.w	r3, [r4, #464]	; 0x1d0
   1ae9e:	ldr.w	r1, [r3, #352]	; 0x160
   1aea2:	movs	r3, #16
   1aea4:	add	r1, r3
   1aea6:	bl	17a30 <write_extent_buffer@@Base>
   1aeaa:	ldr.w	r1, [r4, #464]	; 0x1d0
   1aeae:	movs	r3, #16
   1aeb0:	movs	r2, #64	; 0x40
   1aeb2:	mov	r0, r5
   1aeb4:	bl	17a30 <write_extent_buffer@@Base>
   1aeb8:	ldr.w	r1, [r4, #464]	; 0x1d0
   1aebc:	ldr.w	r2, [r4, #200]	; 0xc8
   1aec0:	mov	r0, r5
   1aec2:	ldr.w	r3, [r4, #204]	; 0xcc
   1aec6:	ldr.w	r1, [r1, #384]	; 0x180
   1aeca:	adds	r2, r2, r1
   1aecc:	str.w	r2, [r4, #200]	; 0xc8
   1aed0:	adc.w	r3, r3, #0
   1aed4:	str.w	r3, [r4, #204]	; 0xcc
   1aed8:	ldr	r3, [sp, #48]	; 0x30
   1aeda:	mov	r1, r6
   1aedc:	subs	r3, r3, r7
   1aede:	str	r3, [sp, #48]	; 0x30
   1aee0:	ldr	r2, [sp, #48]	; 0x30
   1aee2:	add.w	r3, r7, r7, lsl #5
   1aee6:	adds	r3, #101	; 0x65
   1aee8:	add.w	r2, r2, r2, lsl #5
   1aeec:	str	r2, [sp, #0]
   1aeee:	movs	r2, #101	; 0x65
   1aef0:	bl	17a42 <copy_extent_buffer@@Base>
   1aef4:	ldr	r3, [sp, #48]	; 0x30
   1aef6:	mov	r0, r6
   1aef8:	str.w	r3, [r5, #192]	; 0xc0
   1aefc:	str.w	r7, [r6, #192]	; 0xc0
   1af00:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   1af04:	mov	r0, r5
   1af06:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   1af0a:	ldr	r3, [sp, #44]	; 0x2c
   1af0c:	add.w	r1, r4, #464	; 0x1d0
   1af10:	add.w	r0, sl, #8
   1af14:	adds	r3, #1
   1af16:	str	r3, [sp, #12]
   1af18:	ldr.w	r3, [r8, #36]	; 0x24
   1af1c:	adds	r3, #1
   1af1e:	str	r3, [sp, #8]
   1af20:	ldrd	r2, r3, [r5, #40]	; 0x28
   1af24:	strd	r2, r3, [sp]
   1af28:	mov	r3, r9
   1af2a:	mov	r2, fp
   1af2c:	bl	18164 <rb_free_nodes@@Base+0x166>
   1af30:	ldr.w	r3, [r8, #32]
   1af34:	cmp	r7, r3
   1af36:	mov	r9, r0
   1af38:	bgt.n	1af58 <btrfs_search_slot@@Base+0x61c>
   1af3a:	subs	r7, r3, r7
   1af3c:	mov	r0, r6
   1af3e:	str.w	r7, [r8, #32]
   1af42:	bl	17320 <free_extent_buffer@@Base>
   1af46:	ldr	r3, [sp, #40]	; 0x28
   1af48:	str.w	r5, [fp, r3, lsl #2]
   1af4c:	ldr.w	r3, [r8, #36]	; 0x24
   1af50:	adds	r3, #1
   1af52:	str.w	r3, [r8, #36]	; 0x24
   1af56:	b.n	1ab86 <btrfs_search_slot@@Base+0x24a>
   1af58:	mov	r0, r5
   1af5a:	bl	17320 <free_extent_buffer@@Base>
   1af5e:	b.n	1ab86 <btrfs_search_slot@@Base+0x24a>
   1af60:	mov.w	r9, #0
   1af64:	b.n	1ab86 <btrfs_search_slot@@Base+0x24a>
   1af66:	ldr	r3, [sp, #192]	; 0xc0
   1af68:	cmp	r3, #0
   1af6a:	bge.w	1abba <btrfs_search_slot@@Base+0x27e>
   1af6e:	movs	r3, #0
   1af70:	strd	r3, r3, [sp, #104]	; 0x68
   1af74:	ldr	r3, [sp, #40]	; 0x28
   1af76:	ldr.w	r6, [r4, #464]	; 0x1d0
   1af7a:	ldr.w	r5, [fp, r3, lsl #2]
   1af7e:	ldrd	r2, r3, [sl, #8]
   1af82:	ldr.w	r1, [r5, #180]	; 0xb4
   1af86:	ldr.w	r0, [r5, #176]	; 0xb0
   1af8a:	cmp	r1, r3
   1af8c:	ldr.w	r1, [pc, #1092]	; 1b3d4 <btrfs_search_slot@@Base+0xa98>
   1af90:	it	eq
   1af92:	cmpeq	r0, r2
   1af94:	ldr.w	r0, [pc, #1088]	; 1b3d8 <btrfs_search_slot@@Base+0xa9c>
   1af98:	add	r1, pc
   1af9a:	movw	r2, #734	; 0x2de
   1af9e:	ite	ne
   1afa0:	movne	r3, #1
   1afa2:	moveq	r3, #0
   1afa4:	addw	r1, r1, #393	; 0x189
   1afa8:	add	r0, pc
   1afaa:	bl	1815c <rb_free_nodes@@Base+0x15e>
   1afae:	ldr	r3, [sp, #44]	; 0x2c
   1afb0:	cmp	r3, #6
   1afb2:	bgt.n	1afc2 <btrfs_search_slot@@Base+0x686>
   1afb4:	ldr.w	r7, [r8, #4]
   1afb8:	adds	r3, #1
   1afba:	vmov	s18, r3
   1afbe:	cmp	r7, #0
   1afc0:	bne.n	1b098 <btrfs_search_slot@@Base+0x75c>
   1afc2:	ldr.w	r3, [r5, #192]	; 0xc0
   1afc6:	cmp	r3, #1
   1afc8:	bne.w	1b398 <btrfs_search_slot@@Base+0xa5c>
   1afcc:	movs	r2, #0
   1afce:	mov	r1, r5
   1afd0:	mov	r0, r6
   1afd2:	ldr.w	r6, [pc, #1032]	; 1b3dc <btrfs_search_slot@@Base+0xaa0>
   1afd6:	bl	1930e <read_node_slot@@Base>
   1afda:	mov.w	r9, #0
   1afde:	add	r6, pc
   1afe0:	addw	r6, r6, #393	; 0x189
   1afe4:	mov	r7, r0
   1afe6:	str	r0, [sp, #112]	; 0x70
   1afe8:	bl	180ac <rb_free_nodes@@Base+0xae>
   1afec:	movw	r2, #755	; 0x2f3
   1aff0:	mov	r1, r6
   1aff2:	clz	r3, r0
   1aff6:	ldr	r0, [pc, #1000]	; (1b3e0 <btrfs_search_slot@@Base+0xaa4>)
   1aff8:	lsrs	r3, r3, #5
   1affa:	add	r0, pc
   1affc:	bl	18114 <rb_free_nodes@@Base+0x116>
   1b000:	add	r3, sp, #112	; 0x70
   1b002:	mov	r2, r7
   1b004:	mov	r1, r4
   1b006:	str	r3, [sp, #4]
   1b008:	mov	r0, sl
   1b00a:	mov	r3, r5
   1b00c:	str.w	r9, [sp]
   1b010:	bl	18f84 <btrfs_cow_block@@Base>
   1b014:	movw	r2, #757	; 0x2f5
   1b018:	mov	r1, r6
   1b01a:	mov	r3, r0
   1b01c:	ldr	r0, [pc, #964]	; (1b3e4 <btrfs_search_slot@@Base+0xaa8>)
   1b01e:	add	r0, pc
   1b020:	bl	18114 <rb_free_nodes@@Base+0x116>
   1b024:	ldr	r3, [sp, #112]	; 0x70
   1b026:	mov	r0, r4
   1b028:	str	r3, [r4, #0]
   1b02a:	bl	18594 <add_root_to_dirty_list@@Base>
   1b02e:	ldr	r3, [sp, #40]	; 0x28
   1b030:	mov	r0, r5
   1b032:	str.w	r9, [fp, r3, lsl #2]
   1b036:	bl	1dc0c <clean_tree_block@@Base>
   1b03a:	mov	r0, r5
   1b03c:	bl	17320 <free_extent_buffer@@Base>
   1b040:	ldr	r1, [r5, #76]	; 0x4c
   1b042:	ldr.w	r2, [r4, #200]	; 0xc8
   1b046:	ldrb.w	r0, [sp, #44]	; 0x2c
   1b04a:	ldr.w	r3, [r4, #204]	; 0xcc
   1b04e:	subs	r2, r2, r1
   1b050:	mov.w	r1, #0
   1b054:	str.w	r2, [r4, #200]	; 0xc8
   1b058:	sbc.w	r3, r3, #0
   1b05c:	movs	r2, #0
   1b05e:	str.w	r3, [r4, #204]	; 0xcc
   1b062:	movs	r3, #0
   1b064:	strd	r0, r1, [sp, #24]
   1b068:	strd	r2, r3, [sp, #32]
   1b06c:	ldr.w	r0, [r4, #447]	; 0x1bf
   1b070:	ldr.w	r1, [r4, #451]	; 0x1c3
   1b074:	strd	r2, r3, [sp, #8]
   1b078:	strd	r0, r1, [sp, #16]
   1b07c:	mov	r1, r4
   1b07e:	ldr	r3, [r5, #76]	; 0x4c
   1b080:	mov	r0, sl
   1b082:	strd	r3, r9, [sp]
   1b086:	ldrd	r2, r3, [r5, #40]	; 0x28
   1b08a:	bl	2134c <btrfs_free_extent@@Base>
   1b08e:	mov	r9, r0
   1b090:	mov	r0, r5
   1b092:	bl	17320 <free_extent_buffer@@Base>
   1b096:	b.n	1b390 <btrfs_search_slot@@Base+0xa54>
   1b098:	ldr.w	r2, [r6, #384]	; 0x180
   1b09c:	ldr	r3, [pc, #816]	; (1b3d0 <btrfs_search_slot@@Base+0xa94>)
   1b09e:	subs	r2, #101	; 0x65
   1b0a0:	umull	r0, r1, r2, r3
   1b0a4:	ldr.w	r2, [r5, #192]	; 0xc0
   1b0a8:	cmp.w	r2, r1, lsr #5
   1b0ac:	bhi.w	1b398 <btrfs_search_slot@@Base+0xa5c>
   1b0b0:	ldr	r3, [sp, #48]	; 0x30
   1b0b2:	mov	r1, r7
   1b0b4:	mov	r0, r6
   1b0b6:	add.w	r3, r3, r3, lsl #5
   1b0ba:	add	r3, r5
   1b0bc:	ldr.w	r2, [r3, #214]!
   1b0c0:	ldr	r3, [r3, #4]
   1b0c2:	str	r2, [sp, #64]	; 0x40
   1b0c4:	str	r3, [sp, #68]	; 0x44
   1b0c6:	ldr.w	r3, [r8, #36]	; 0x24
   1b0ca:	add.w	r9, r3, #4294967295	; 0xffffffff
   1b0ce:	str	r3, [sp, #52]	; 0x34
   1b0d0:	mov	r2, r9
   1b0d2:	bl	1930e <read_node_slot@@Base>
   1b0d6:	mov	r2, r0
   1b0d8:	str	r0, [sp, #108]	; 0x6c
   1b0da:	bl	180ac <rb_free_nodes@@Base+0xae>
   1b0de:	cmp	r0, #0
   1b0e0:	bne.w	1b368 <btrfs_search_slot@@Base+0xa2c>
   1b0e4:	ldr	r3, [sp, #52]	; 0x34
   1b0e6:	mov	r1, r7
   1b0e8:	mov	r0, r6
   1b0ea:	adds	r3, #1
   1b0ec:	mov	r2, r3
   1b0ee:	vmov	s17, r3
   1b0f2:	bl	1930e <read_node_slot@@Base>
   1b0f6:	mov	r2, r0
   1b0f8:	str	r0, [sp, #104]	; 0x68
   1b0fa:	bl	180ac <rb_free_nodes@@Base+0xae>
   1b0fe:	cbz	r0, 1b11a <btrfs_search_slot@@Base+0x7de>
   1b100:	add	r3, sp, #104	; 0x68
   1b102:	vstr	s17, [sp]
   1b106:	str	r3, [sp, #4]
   1b108:	mov	r1, r4
   1b10a:	mov	r3, r7
   1b10c:	mov	r0, sl
   1b10e:	bl	18f84 <btrfs_cow_block@@Base>
   1b112:	mov	r9, r0
   1b114:	cmp	r0, #0
   1b116:	bne.w	1b380 <btrfs_search_slot@@Base+0xa44>
   1b11a:	ldr	r2, [sp, #108]	; 0x6c
   1b11c:	cmp	r2, #0
   1b11e:	bne.w	1b3ae <btrfs_search_slot@@Base+0xa72>
   1b122:	mov	r6, r2
   1b124:	ldr	r3, [sp, #104]	; 0x68
   1b126:	cmp	r3, #0
   1b128:	beq.n	1b1dc <btrfs_search_slot@@Base+0x8a0>
   1b12a:	movs	r2, #1
   1b12c:	add.w	r0, sl, #8
   1b130:	str	r2, [sp, #0]
   1b132:	mov	r2, r5
   1b134:	ldr.w	r1, [r4, #464]	; 0x1d0
   1b138:	bl	18348 <rb_free_nodes@@Base+0x34a>
   1b13c:	cmp	r0, #0
   1b13e:	bge.n	1b148 <btrfs_search_slot@@Base+0x80c>
   1b140:	cmn.w	r0, #28
   1b144:	it	ne
   1b146:	movne	r6, r0
   1b148:	ldr	r0, [sp, #104]	; 0x68
   1b14a:	ldr.w	r9, [r0, #192]	; 0xc0
   1b14e:	cmp.w	r9, #0
   1b152:	bne.w	1b400 <btrfs_search_slot@@Base+0xac4>
   1b156:	ldrd	r2, r3, [r0, #40]	; 0x28
   1b15a:	strd	r2, r3, [sp, #72]	; 0x48
   1b15e:	ldr	r3, [r0, #76]	; 0x4c
   1b160:	str	r3, [sp, #80]	; 0x50
   1b162:	bl	1dc0c <clean_tree_block@@Base>
   1b166:	ldr	r0, [sp, #104]	; 0x68
   1b168:	bl	17320 <free_extent_buffer@@Base>
   1b16c:	vmov	r3, s17
   1b170:	vmov	r2, s18
   1b174:	mov	r1, fp
   1b176:	mov	r0, r4
   1b178:	str.w	r9, [sp, #104]	; 0x68
   1b17c:	bl	1a86c <btrfs_del_ptr@@Base>
   1b180:	ldr	r1, [sp, #104]	; 0x68
   1b182:	ldr.w	r2, [r4, #200]	; 0xc8
   1b186:	ldr.w	r3, [r4, #204]	; 0xcc
   1b18a:	ldr	r1, [r1, #76]	; 0x4c
   1b18c:	cmp	r0, #0
   1b18e:	it	ne
   1b190:	movne	r6, r0
   1b192:	ldrb.w	r0, [sp, #44]	; 0x2c
   1b196:	subs	r2, r2, r1
   1b198:	mov.w	r1, #0
   1b19c:	str.w	r2, [r4, #200]	; 0xc8
   1b1a0:	sbc.w	r3, r3, #0
   1b1a4:	movs	r2, #0
   1b1a6:	str.w	r3, [r4, #204]	; 0xcc
   1b1aa:	movs	r3, #0
   1b1ac:	strd	r0, r1, [sp, #24]
   1b1b0:	strd	r2, r3, [sp, #32]
   1b1b4:	ldr.w	r0, [r4, #447]	; 0x1bf
   1b1b8:	ldr.w	r1, [r4, #451]	; 0x1c3
   1b1bc:	strd	r2, r3, [sp, #8]
   1b1c0:	ldr	r3, [sp, #80]	; 0x50
   1b1c2:	strd	r0, r1, [sp, #16]
   1b1c6:	mov	r1, r4
   1b1c8:	mov	r0, sl
   1b1ca:	strd	r3, r9, [sp]
   1b1ce:	ldrd	r2, r3, [sp, #72]	; 0x48
   1b1d2:	bl	2134c <btrfs_free_extent@@Base>
   1b1d6:	cmp	r0, #0
   1b1d8:	it	ne
   1b1da:	movne	r6, r0
   1b1dc:	ldr.w	r3, [r5, #192]	; 0xc0
   1b1e0:	cmp	r3, #1
   1b1e2:	bne.n	1b260 <btrfs_search_slot@@Base+0x924>
   1b1e4:	ldr.w	r9, [sp, #108]	; 0x6c
   1b1e8:	mov.w	r2, #848	; 0x350
   1b1ec:	ldr	r1, [pc, #504]	; (1b3e8 <btrfs_search_slot@@Base+0xaac>)
   1b1ee:	clz	r3, r9
   1b1f2:	ldr	r0, [pc, #504]	; (1b3ec <btrfs_search_slot@@Base+0xab0>)
   1b1f4:	add	r1, pc
   1b1f6:	lsrs	r3, r3, #5
   1b1f8:	addw	r1, r1, #393	; 0x189
   1b1fc:	add	r0, pc
   1b1fe:	bl	18114 <rb_free_nodes@@Base+0x116>
   1b202:	add.w	r3, sl, #8
   1b206:	add.w	r1, r4, #464	; 0x1d0
   1b20a:	mov	r2, r5
   1b20c:	vmov	s17, r3
   1b210:	mov	r3, r9
   1b212:	vmov	r0, s17
   1b216:	bl	18258 <rb_free_nodes@@Base+0x25a>
   1b21a:	subs.w	r9, r0, #0
   1b21e:	blt.w	1b380 <btrfs_search_slot@@Base+0xa44>
   1b222:	cmp.w	r9, #1
   1b226:	bne.n	1b244 <btrfs_search_slot@@Base+0x908>
   1b228:	str.w	r9, [sp]
   1b22c:	mov	r3, r5
   1b22e:	vmov	r0, s17
   1b232:	ldr	r2, [sp, #108]	; 0x6c
   1b234:	ldr.w	r1, [r4, #464]	; 0x1d0
   1b238:	bl	18348 <rb_free_nodes@@Base+0x34a>
   1b23c:	subs.w	r9, r0, #0
   1b240:	it	lt
   1b242:	movlt	r6, r9
   1b244:	add.w	r1, r9, #4294967295	; 0xffffffff
   1b248:	ldr	r0, [pc, #420]	; (1b3f0 <btrfs_search_slot@@Base+0xab4>)
   1b24a:	negs	r3, r1
   1b24c:	movw	r2, #859	; 0x35b
   1b250:	adcs	r3, r1
   1b252:	ldr	r1, [pc, #416]	; (1b3f4 <btrfs_search_slot@@Base+0xab8>)
   1b254:	add	r0, pc
   1b256:	add	r1, pc
   1b258:	addw	r1, r1, #393	; 0x189
   1b25c:	bl	18114 <rb_free_nodes@@Base+0x116>
   1b260:	ldr.w	r3, [r5, #192]	; 0xc0
   1b264:	mov	r9, r6
   1b266:	str	r3, [sp, #72]	; 0x48
   1b268:	cmp	r3, #0
   1b26a:	bne.w	1b41e <btrfs_search_slot@@Base+0xae2>
   1b26e:	ldrd	r2, r3, [r5, #40]	; 0x28
   1b272:	mov	r0, r5
   1b274:	ldr	r7, [r5, #76]	; 0x4c
   1b276:	strd	r2, r3, [sp, #80]	; 0x50
   1b27a:	bl	1dc0c <clean_tree_block@@Base>
   1b27e:	mov	r0, r5
   1b280:	bl	17320 <free_extent_buffer@@Base>
   1b284:	vmov	r2, s18
   1b288:	ldr	r3, [sp, #52]	; 0x34
   1b28a:	mov	r1, fp
   1b28c:	mov	r0, r4
   1b28e:	bl	1a86c <btrfs_del_ptr@@Base>
   1b292:	ldr.w	r2, [r4, #200]	; 0xc8
   1b296:	ldr.w	r3, [r4, #204]	; 0xcc
   1b29a:	movs	r1, #0
   1b29c:	cmp	r0, #0
   1b29e:	ite	ne
   1b2a0:	movne	r9, r0
   1b2a2:	moveq	r9, r6
   1b2a4:	ldrb.w	r0, [sp, #44]	; 0x2c
   1b2a8:	subs	r2, r2, r7
   1b2aa:	str.w	r2, [r4, #200]	; 0xc8
   1b2ae:	sbc.w	r3, r3, #0
   1b2b2:	movs	r2, #0
   1b2b4:	str.w	r3, [r4, #204]	; 0xcc
   1b2b8:	movs	r3, #0
   1b2ba:	strd	r0, r1, [sp, #24]
   1b2be:	strd	r2, r3, [sp, #32]
   1b2c2:	ldr.w	r0, [r4, #447]	; 0x1bf
   1b2c6:	ldr.w	r1, [r4, #451]	; 0x1c3
   1b2ca:	strd	r2, r3, [sp, #8]
   1b2ce:	movs	r3, #0
   1b2d0:	str	r7, [sp, #0]
   1b2d2:	strd	r0, r1, [sp, #16]
   1b2d6:	mov	r1, r4
   1b2d8:	str	r3, [sp, #4]
   1b2da:	mov	r0, sl
   1b2dc:	ldrd	r2, r3, [sp, #80]	; 0x50
   1b2e0:	bl	2134c <btrfs_free_extent@@Base>
   1b2e4:	ldr	r5, [sp, #72]	; 0x48
   1b2e6:	cmp	r0, #0
   1b2e8:	it	ne
   1b2ea:	movne	r9, r0
   1b2ec:	ldr	r2, [sp, #108]	; 0x6c
   1b2ee:	cbz	r2, 1b31e <btrfs_search_slot@@Base+0x9e2>
   1b2f0:	ldr.w	r3, [r2, #192]	; 0xc0
   1b2f4:	ldr	r1, [sp, #48]	; 0x30
   1b2f6:	cmp	r3, r1
   1b2f8:	bls.w	1b43c <btrfs_search_slot@@Base+0xb00>
   1b2fc:	ldr	r3, [r2, #80]	; 0x50
   1b2fe:	adds	r3, #1
   1b300:	str	r3, [r2, #80]	; 0x50
   1b302:	ldr	r3, [sp, #40]	; 0x28
   1b304:	str.w	r2, [fp, r3, lsl #2]
   1b308:	ldr.w	r3, [r8, #36]	; 0x24
   1b30c:	str.w	r1, [r8, #32]
   1b310:	subs	r3, #1
   1b312:	str.w	r3, [r8, #36]	; 0x24
   1b316:	cbz	r5, 1b31e <btrfs_search_slot@@Base+0x9e2>
   1b318:	mov	r0, r5
   1b31a:	bl	17320 <free_extent_buffer@@Base>
   1b31e:	ldrb.w	r3, [fp, #67]	; 0x43
   1b322:	cbnz	r3, 1b330 <btrfs_search_slot@@Base+0x9f4>
   1b324:	ldr	r2, [sp, #44]	; 0x2c
   1b326:	mov	r1, fp
   1b328:	ldr.w	r0, [r4, #464]	; 0x1d0
   1b32c:	bl	19a30 <btrfs_check_leaf@@Base+0x2c0>
   1b330:	ldr	r3, [sp, #40]	; 0x28
   1b332:	ldr.w	r2, [r8, #32]
   1b336:	ldr.w	r3, [fp, r3, lsl #2]
   1b33a:	add.w	r2, r2, r2, lsl #5
   1b33e:	add	r3, r2
   1b340:	ldr.w	r0, [r3, #214]!
   1b344:	ldr	r1, [r3, #4]
   1b346:	ldrd	r2, r3, [sp, #64]	; 0x40
   1b34a:	cmp	r3, r1
   1b34c:	it	eq
   1b34e:	cmpeq	r2, r0
   1b350:	beq.n	1b380 <btrfs_search_slot@@Base+0xa44>
   1b352:	ldr	r1, [pc, #164]	; (1b3f8 <btrfs_search_slot@@Base+0xabc>)
   1b354:	movs	r3, #1
   1b356:	ldr	r0, [pc, #164]	; (1b3fc <btrfs_search_slot@@Base+0xac0>)
   1b358:	mov.w	r2, #904	; 0x388
   1b35c:	add	r1, pc
   1b35e:	addw	r1, r1, #393	; 0x189
   1b362:	add	r0, pc
   1b364:	bl	180da <rb_free_nodes@@Base+0xdc>
   1b368:	add	r3, sp, #108	; 0x6c
   1b36a:	mov	r1, r4
   1b36c:	strd	r9, r3, [sp]
   1b370:	mov	r0, sl
   1b372:	mov	r3, r7
   1b374:	bl	18f84 <btrfs_cow_block@@Base>
   1b378:	mov	r9, r0
   1b37a:	cmp	r0, #0
   1b37c:	beq.w	1b0e4 <btrfs_search_slot@@Base+0x7a8>
   1b380:	ldr	r0, [sp, #104]	; 0x68
   1b382:	cbz	r0, 1b388 <btrfs_search_slot@@Base+0xa4c>
   1b384:	bl	17320 <free_extent_buffer@@Base>
   1b388:	ldr	r0, [sp, #108]	; 0x6c
   1b38a:	cmp	r0, #0
   1b38c:	bne.w	1b092 <btrfs_search_slot@@Base+0x756>
   1b390:	cmp.w	r9, #0
   1b394:	bne.w	1aa0e <btrfs_search_slot@@Base+0xd2>
   1b398:	ldr	r3, [sp, #40]	; 0x28
   1b39a:	ldr.w	r3, [fp, r3, lsl #2]
   1b39e:	str	r3, [sp, #96]	; 0x60
   1b3a0:	cmp	r3, #0
   1b3a2:	bne.n	1b446 <btrfs_search_slot@@Base+0xb0a>
   1b3a4:	mov	r0, fp
   1b3a6:	bl	18558 <btrfs_release_path@@Base>
   1b3aa:	b.w	1a9cc <btrfs_search_slot@@Base+0x90>
   1b3ae:	ldr.w	r3, [r2, #192]	; 0xc0
   1b3b2:	add.w	r0, sl, #8
   1b3b6:	ldr	r1, [sp, #48]	; 0x30
   1b3b8:	add	r1, r3
   1b3ba:	movs	r3, #1
   1b3bc:	str	r1, [sp, #48]	; 0x30
   1b3be:	str	r3, [sp, #0]
   1b3c0:	mov	r3, r5
   1b3c2:	ldr.w	r1, [r4, #464]	; 0x1d0
   1b3c6:	bl	18348 <rb_free_nodes@@Base+0x34a>
   1b3ca:	and.w	r6, r0, r0, asr #31
   1b3ce:	b.n	1b124 <btrfs_search_slot@@Base+0x7e8>
   1b3d0:	strh	r1, [r4, #30]
   1b3d2:	subs	r6, #15
   1b3d4:	subs	r4, r5, #6
   1b3d6:	movs	r2, r0
   1b3d8:	adds	r1, r7, #6
   1b3da:	movs	r2, r0
   1b3dc:	subs	r6, r4, #5
   1b3de:	movs	r2, r0
   1b3e0:	adds	r7, r3, #6
   1b3e2:	movs	r2, r0
   1b3e4:			; <UNDEFINED> instruction: 0xf4c60001
   1b3e8:	adds	r0, r2, #5
   1b3ea:	movs	r2, r0
   1b3ec:	subs	r4, r7, r6
   1b3ee:	movs	r2, r0
   1b3f0:	subs	r2, r5, r5
   1b3f2:	movs	r2, r0
   1b3f4:	adds	r6, r5, #3
   1b3f6:	movs	r2, r0
   1b3f8:	subs	r0, r5, r7
   1b3fa:	movs	r2, r0
   1b3fc:	cmp	r3, #155	; 0x9b
   1b3fe:	movs	r2, r0
   1b400:	add	r1, sp, #112	; 0x70
   1b402:	movs	r2, #0
   1b404:	str	r1, [sp, #72]	; 0x48
   1b406:	bl	18052 <rb_free_nodes@@Base+0x54>
   1b40a:	mov	r0, r7
   1b40c:	vmov	r2, s17
   1b410:	ldr	r1, [sp, #72]	; 0x48
   1b412:	bl	1802e <rb_free_nodes@@Base+0x30>
   1b416:	mov	r0, r7
   1b418:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   1b41c:	b.n	1b1dc <btrfs_search_slot@@Base+0x8a0>
   1b41e:	add	r1, sp, #112	; 0x70
   1b420:	mov	r0, r5
   1b422:	movs	r2, #0
   1b424:	str	r1, [sp, #72]	; 0x48
   1b426:	bl	18052 <rb_free_nodes@@Base+0x54>
   1b42a:	mov	r0, r7
   1b42c:	ldr	r2, [sp, #52]	; 0x34
   1b42e:	ldr	r1, [sp, #72]	; 0x48
   1b430:	bl	1802e <rb_free_nodes@@Base+0x30>
   1b434:	mov	r0, r7
   1b436:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   1b43a:	b.n	1b2ec <btrfs_search_slot@@Base+0x9b0>
   1b43c:	ldr	r2, [sp, #48]	; 0x30
   1b43e:	subs	r3, r2, r3
   1b440:	str.w	r3, [r8, #32]
   1b444:	b.n	1b31e <btrfs_search_slot@@Base+0x9e2>
   1b446:	ldr.w	r2, [r8, #32]
   1b44a:	ldr	r1, [pc, #108]	; (1b4b8 <btrfs_search_slot@@Base+0xb7c>)
   1b44c:	ldr	r0, [pc, #108]	; (1b4bc <btrfs_search_slot@@Base+0xb80>)
   1b44e:	str	r2, [sp, #100]	; 0x64
   1b450:	add	r1, pc
   1b452:	ldr.w	r3, [r3, #192]	; 0xc0
   1b456:	add.w	r1, r1, #342	; 0x156
   1b45a:	add	r0, pc
   1b45c:	subs	r2, r3, #1
   1b45e:	negs	r3, r2
   1b460:	adcs	r3, r2
   1b462:	movw	r2, #1227	; 0x4cb
   1b466:	bl	18114 <rb_free_nodes@@Base+0x116>
   1b46a:	b.w	1abba <btrfs_search_slot@@Base+0x27e>
   1b46e:	ldr	r3, [sp, #88]	; 0x58
   1b470:	cbz	r3, 1b48a <btrfs_search_slot@@Base+0xb4e>
   1b472:	ldr	r3, [sp, #56]	; 0x38
   1b474:	mov	r1, fp
   1b476:	vmov	r0, s16
   1b47a:	ldr	r2, [r3, #0]
   1b47c:	ldr	r3, [r3, #4]
   1b47e:	strd	r2, r3, [sp]
   1b482:	ldr	r3, [sp, #100]	; 0x64
   1b484:	ldr	r2, [sp, #44]	; 0x2c
   1b486:	bl	19388 <reada_for_search@@Base>
   1b48a:	vmov	r0, s16
   1b48e:	ldrd	r1, r2, [sp, #96]	; 0x60
   1b492:	bl	1930e <read_node_slot@@Base>
   1b496:	str	r0, [sp, #96]	; 0x60
   1b498:	bl	180ac <rb_free_nodes@@Base+0xae>
   1b49c:	cmp	r0, #0
   1b49e:	bne.w	1a9de <btrfs_search_slot@@Base+0xa2>
   1b4a2:	mvn.w	r9, #4
   1b4a6:	b.w	1aa0e <btrfs_search_slot@@Base+0xd2>
   1b4aa:	mov	r0, r9
   1b4ac:	add	sp, #140	; 0x8c
   1b4ae:	vpop	{d8-d9}
   1b4b2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b4b6:	nop
   1b4b8:	subs	r4, r6, r3
   1b4ba:	movs	r2, r0
   1b4bc:	adds	r6, r5, r5
   1b4be:	movs	r2, r0

0001b4c0 <btrfs_split_item@@Base>:
   1b4c0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b4c4:	sub	sp, #76	; 0x4c
   1b4c6:	mov	r4, r2
   1b4c8:	ldr	r2, [pc, #536]	; (1b6e4 <btrfs_split_item@@Base+0x224>)
   1b4ca:	str	r3, [sp, #12]
   1b4cc:	add.w	r8, sp, #28
   1b4d0:	ldr	r3, [pc, #532]	; (1b6e8 <btrfs_split_item@@Base+0x228>)
   1b4d2:	add	r2, pc
   1b4d4:	ldr	r5, [r4, #0]
   1b4d6:	mov	r6, r0
   1b4d8:	mov	r7, r1
   1b4da:	mov	r1, r8
   1b4dc:	ldr	r3, [r2, r3]
   1b4de:	mov	r0, r5
   1b4e0:	ldr	r2, [r4, #32]
   1b4e2:	ldr	r3, [r3, #0]
   1b4e4:	str	r3, [sp, #68]	; 0x44
   1b4e6:	mov.w	r3, #0
   1b4ea:	bl	184b0 <rb_free_nodes@@Base+0x4b2>
   1b4ee:	mov	r0, r5
   1b4f0:	bl	196e8 <btrfs_leaf_free_space@@Base>
   1b4f4:	cmp	r0, #24
   1b4f6:	bhi.n	1b58c <btrfs_split_item@@Base+0xcc>
   1b4f8:	ldr	r3, [r4, #32]
   1b4fa:	mov.w	r9, #25
   1b4fe:	mov	r0, r4
   1b500:	mov.w	sl, #0
   1b504:	mla	r3, r9, r3, r5
   1b508:	ldr.w	fp, [r3, #218]	; 0xda
   1b50c:	bl	18558 <btrfs_release_path@@Base>
   1b510:	movs	r3, #1
   1b512:	mov	r2, r8
   1b514:	strb.w	r3, [r4, #66]	; 0x42
   1b518:	mov	r1, r7
   1b51a:	str	r3, [sp, #4]
   1b51c:	mov	r0, r6
   1b51e:	mov	r3, r4
   1b520:	str.w	sl, [sp]
   1b524:	bl	1a93c <btrfs_search_slot@@Base>
   1b528:	strb.w	sl, [r4, #66]	; 0x42
   1b52c:	cmp	r0, #0
   1b52e:	bne.w	1b6d8 <btrfs_split_item@@Base+0x218>
   1b532:	ldr	r3, [r4, #32]
   1b534:	ldr	r2, [r4, #0]
   1b536:	mla	r3, r9, r3, r2
   1b53a:	ldr.w	r3, [r3, #218]	; 0xda
   1b53e:	cmp	r3, fp
   1b540:	bne.w	1b6d8 <btrfs_split_item@@Base+0x218>
   1b544:	mov	r3, r4
   1b546:	mov	r2, r8
   1b548:	mov	r1, r7
   1b54a:	strd	r0, r0, [sp]
   1b54e:	mov	r0, r6
   1b550:	bl	1a050 <btrfs_check_leaf@@Base+0x8e0>
   1b554:	ldr	r1, [pc, #404]	; (1b6ec <btrfs_split_item@@Base+0x22c>)
   1b556:	movw	r2, #2390	; 0x956
   1b55a:	add	r1, pc
   1b55c:	addw	r1, r1, #407	; 0x197
   1b560:	str	r1, [sp, #16]
   1b562:	mov	r3, r0
   1b564:	ldr	r0, [pc, #392]	; (1b6f0 <btrfs_split_item@@Base+0x230>)
   1b566:	add	r0, pc
   1b568:	bl	18114 <rb_free_nodes@@Base+0x116>
   1b56c:	mov	r0, r5
   1b56e:	bl	196e8 <btrfs_leaf_free_space@@Base>
   1b572:	ldr	r1, [sp, #16]
   1b574:	movw	r2, #2392	; 0x958
   1b578:	cmp	r0, #24
   1b57a:	ldr	r0, [pc, #376]	; (1b6f4 <btrfs_split_item@@Base+0x234>)
   1b57c:	it	hi
   1b57e:	movhi	r3, #0
   1b580:	add	r0, pc
   1b582:	it	ls
   1b584:	movls	r3, #1
   1b586:	bl	18114 <rb_free_nodes@@Base+0x116>
   1b58a:	ldr	r5, [r4, #0]
   1b58c:	ldr	r3, [r4, #32]
   1b58e:	mov.w	sl, #25
   1b592:	mul.w	r3, sl, r3
   1b596:	adds	r3, #101	; 0x65
   1b598:	str	r3, [sp, #20]
   1b59a:	ldr	r2, [sp, #20]
   1b59c:	add.w	r3, r5, #96	; 0x60
   1b5a0:	add	r3, r2
   1b5a2:	ldr.w	r6, [r3, #21]
   1b5a6:	ldr.w	r2, [r3, #17]
   1b5aa:	mov	r0, r6
   1b5ac:	str	r2, [sp, #16]
   1b5ae:	blx	8870 <malloc@plt+0x4>
   1b5b2:	ldr	r1, [pc, #324]	; (1b6f8 <btrfs_split_item@@Base+0x238>)
   1b5b4:	movw	r2, #2402	; 0x962
   1b5b8:	add	r1, pc
   1b5ba:	addw	r1, r1, #407	; 0x197
   1b5be:	clz	r3, r0
   1b5c2:	mov	r9, r0
   1b5c4:	ldr	r0, [pc, #308]	; (1b6fc <btrfs_split_item@@Base+0x23c>)
   1b5c6:	lsrs	r3, r3, #5
   1b5c8:	add	r0, pc
   1b5ca:	bl	18114 <rb_free_nodes@@Base+0x116>
   1b5ce:	ldr	r2, [sp, #16]
   1b5d0:	mov	r1, r9
   1b5d2:	mov	r0, r5
   1b5d4:	adds	r2, #101	; 0x65
   1b5d6:	mov	r3, r6
   1b5d8:	bl	17a1a <read_extent_buffer@@Base>
   1b5dc:	ldr	r1, [r4, #32]
   1b5de:	ldr	r5, [r4, #0]
   1b5e0:	add.w	fp, r1, #1
   1b5e4:	mla	r1, r1, sl, sl
   1b5e8:	ldr.w	r8, [r5, #192]	; 0xc0
   1b5ec:	cmp	fp, r8
   1b5ee:	add.w	r7, r1, #101	; 0x65
   1b5f2:	bcs.n	1b606 <btrfs_split_item@@Base+0x146>
   1b5f4:	sub.w	r3, r8, fp
   1b5f8:	adds	r1, #126	; 0x7e
   1b5fa:	mov	r2, r7
   1b5fc:	mov	r0, r5
   1b5fe:	mul.w	r3, sl, r3
   1b602:	bl	17a8c <memmove_extent_buffer@@Base>
   1b606:	ldr	r3, [sp, #12]
   1b608:	add	r1, sp, #48	; 0x30
   1b60a:	mov	r0, r5
   1b60c:	add.w	r8, r8, #1
   1b610:	ldr.w	r2, [r3, #9]
   1b614:	ldr.w	r3, [r3, #13]
   1b618:	str.w	r2, [sp, #57]	; 0x39
   1b61c:	str.w	r3, [sp, #61]	; 0x3d
   1b620:	ldr	r3, [sp, #12]
   1b622:	ldrb	r3, [r3, #8]
   1b624:	strb.w	r3, [sp, #56]	; 0x38
   1b628:	ldr	r3, [sp, #12]
   1b62a:	ldr	r2, [r3, #0]
   1b62c:	ldr	r3, [r3, #4]
   1b62e:	strd	r2, r3, [sp, #48]	; 0x30
   1b632:	mov	r2, fp
   1b634:	bl	1803a <rb_free_nodes@@Base+0x3c>
   1b638:	add.w	r2, r5, #96	; 0x60
   1b63c:	ldr	r3, [sp, #16]
   1b63e:	add	r7, r2
   1b640:	ldr	r1, [sp, #16]
   1b642:	mov	r0, r5
   1b644:	str.w	r3, [r7, #17]
   1b648:	ldr	r3, [sp, #112]	; 0x70
   1b64a:	sub.w	sl, r6, r3
   1b64e:	ldr	r3, [sp, #20]
   1b650:	add	r6, r1
   1b652:	ldr	r1, [sp, #112]	; 0x70
   1b654:	add	r3, r2
   1b656:	str.w	sl, [r7, #21]
   1b65a:	subs	r6, r6, r1
   1b65c:	str.w	r1, [r3, #21]
   1b660:	movs	r1, #25
   1b662:	str.w	r6, [r3, #17]
   1b666:	str.w	r8, [r5, #192]	; 0xc0
   1b66a:	ldr	r3, [r4, #32]
   1b66c:	mla	r3, r1, r3, r2
   1b670:	mov	r1, r9
   1b672:	ldr.w	r2, [r3, #118]	; 0x76
   1b676:	ldr	r3, [sp, #112]	; 0x70
   1b678:	adds	r2, #101	; 0x65
   1b67a:	bl	17a30 <write_extent_buffer@@Base>
   1b67e:	ldr.w	r2, [r7, #17]
   1b682:	ldr	r1, [sp, #112]	; 0x70
   1b684:	mov	r3, sl
   1b686:	adds	r2, #101	; 0x65
   1b688:	mov	r0, r5
   1b68a:	add	r1, r9
   1b68c:	bl	17a30 <write_extent_buffer@@Base>
   1b690:	mov	r0, r5
   1b692:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   1b696:	mov	r0, r5
   1b698:	bl	196e8 <btrfs_leaf_free_space@@Base>
   1b69c:	cmp	r0, #0
   1b69e:	bge.n	1b6bc <btrfs_split_item@@Base+0x1fc>
   1b6a0:	mov	r0, r5
   1b6a2:	bl	25720 <btrfs_print_leaf@@Base>
   1b6a6:	ldr	r1, [pc, #88]	; (1b700 <btrfs_split_item@@Base+0x240>)
   1b6a8:	ldr	r0, [pc, #88]	; (1b704 <btrfs_split_item@@Base+0x244>)
   1b6aa:	movs	r3, #1
   1b6ac:	add	r1, pc
   1b6ae:	movw	r2, #2446	; 0x98e
   1b6b2:	addw	r1, r1, #407	; 0x197
   1b6b6:	add	r0, pc
   1b6b8:	bl	180da <rb_free_nodes@@Base+0xdc>
   1b6bc:	mov	r0, r9
   1b6be:	blx	8620 <free@plt+0x4>
   1b6c2:	movs	r0, #0
   1b6c4:	ldr	r2, [pc, #64]	; (1b708 <btrfs_split_item@@Base+0x248>)
   1b6c6:	ldr	r3, [pc, #32]	; (1b6e8 <btrfs_split_item@@Base+0x228>)
   1b6c8:	add	r2, pc
   1b6ca:	ldr	r3, [r2, r3]
   1b6cc:	ldr	r2, [r3, #0]
   1b6ce:	ldr	r3, [sp, #68]	; 0x44
   1b6d0:	eors	r2, r3
   1b6d2:	beq.n	1b6de <btrfs_split_item@@Base+0x21e>
   1b6d4:	blx	8708 <__stack_chk_fail@plt>
   1b6d8:	mvn.w	r0, #10
   1b6dc:	b.n	1b6c4 <btrfs_split_item@@Base+0x204>
   1b6de:	add	sp, #76	; 0x4c
   1b6e0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b6e4:	ldr	r0, [sp, #696]	; 0x2b8
   1b6e6:	movs	r4, r0
   1b6e8:	lsls	r0, r5, #8
   1b6ea:	movs	r0, r0
   1b6ec:	adds	r2, r5, r7
   1b6ee:	movs	r2, r0
   1b6f0:	vhadd.s<illegal width 64>	d16, d14, d1
   1b6f4:	adds	r5, r4, r1
   1b6f6:	movs	r2, r0
   1b6f8:	adds	r4, r1, r6
   1b6fa:	movs	r2, r0
   1b6fc:	adds	r5, r2, r1
   1b6fe:	movs	r2, r0
   1b700:	adds	r0, r3, r2
   1b702:	movs	r2, r0
   1b704:	cmp	r0, #71	; 0x47
   1b706:	movs	r2, r0
   1b708:	str	r6, [sp, #736]	; 0x2e0
   1b70a:	movs	r4, r0

0001b70c <btrfs_insert_empty_items@@Base>:
   1b70c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b710:	sub	sp, #60	; 0x3c
   1b712:	mov	fp, r3
   1b714:	mov.w	r8, #0
   1b718:	ldr	r3, [sp, #96]	; 0x60
   1b71a:	strd	r1, r2, [sp, #16]
   1b71e:	ldr	r2, [pc, #616]	; (1b988 <btrfs_insert_empty_items@@Base+0x27c>)
   1b720:	str	r3, [sp, #24]
   1b722:	ldr	r3, [pc, #616]	; (1b98c <btrfs_insert_empty_items@@Base+0x280>)
   1b724:	add	r2, pc
   1b726:	add	r3, pc
   1b728:	str	r3, [sp, #28]
   1b72a:	ldr	r3, [pc, #612]	; (1b990 <btrfs_insert_empty_items@@Base+0x284>)
   1b72c:	ldr	r3, [r2, r3]
   1b72e:	ldr	r3, [r3, #0]
   1b730:	str	r3, [sp, #52]	; 0x34
   1b732:	mov.w	r3, #0
   1b736:	mov	r3, r8
   1b738:	ldr	r2, [sp, #100]	; 0x64
   1b73a:	cmp	r3, r2
   1b73c:	blt.n	1b75a <btrfs_insert_empty_items@@Base+0x4e>
   1b73e:	ldr	r3, [sp, #16]
   1b740:	ldr	r3, [r3, #0]
   1b742:	cbnz	r3, 1b766 <btrfs_insert_empty_items@@Base+0x5a>
   1b744:	ldr	r1, [pc, #588]	; (1b994 <btrfs_insert_empty_items@@Base+0x288>)
   1b746:	movs	r3, #1
   1b748:	ldr	r0, [pc, #588]	; (1b998 <btrfs_insert_empty_items@@Base+0x28c>)
   1b74a:	movw	r2, #2636	; 0xa4c
   1b74e:	add	r1, pc
   1b750:	add.w	r1, r1, #424	; 0x1a8
   1b754:	add	r0, pc
   1b756:	bl	180da <rb_free_nodes@@Base+0xdc>
   1b75a:	ldr	r2, [sp, #24]
   1b75c:	ldr.w	r2, [r2, r3, lsl #2]
   1b760:	adds	r3, #1
   1b762:	add	r8, r2
   1b764:	b.n	1b738 <btrfs_insert_empty_items@@Base+0x2c>
   1b766:	ldr	r3, [sp, #100]	; 0x64
   1b768:	movs	r2, #25
   1b76a:	ldr	r1, [sp, #16]
   1b76c:	mov.w	r9, #1
   1b770:	mla	r5, r2, r3, r8
   1b774:	ldr	r3, [sp, #20]
   1b776:	mov	r2, fp
   1b778:	strd	r5, r9, [sp]
   1b77c:	bl	1a93c <btrfs_search_slot@@Base>
   1b780:	cmp	r0, #0
   1b782:	beq.w	1b966 <btrfs_insert_empty_items@@Base+0x25a>
   1b786:	blt.w	1b96a <btrfs_insert_empty_items@@Base+0x25e>
   1b78a:	ldr	r3, [sp, #20]
   1b78c:	ldr	r4, [r3, #0]
   1b78e:	ldr.w	r3, [r4, #192]	; 0xc0
   1b792:	mov	r1, r4
   1b794:	str	r3, [sp, #12]
   1b796:	ldr	r3, [sp, #16]
   1b798:	ldr.w	r0, [r3, #464]	; 0x1d0
   1b79c:	add.w	r0, r0, #384	; 0x180
   1b7a0:	bl	180c0 <rb_free_nodes@@Base+0xc2>
   1b7a4:	mov	r6, r0
   1b7a6:	mov	r0, r4
   1b7a8:	bl	196e8 <btrfs_leaf_free_space@@Base>
   1b7ac:	cmp	r0, r5
   1b7ae:	bcs.n	1b7e8 <btrfs_insert_empty_items@@Base+0xdc>
   1b7b0:	mov	r0, r4
   1b7b2:	bl	25720 <btrfs_print_leaf@@Base>
   1b7b6:	ldr	r2, [sp, #28]
   1b7b8:	ldr	r3, [pc, #480]	; (1b99c <btrfs_insert_empty_items@@Base+0x290>)
   1b7ba:	mov	r0, r4
   1b7bc:	ldr	r3, [r2, r3]
   1b7be:	ldr	r6, [r3, #0]
   1b7c0:	bl	196e8 <btrfs_leaf_free_space@@Base>
   1b7c4:	ldr	r2, [pc, #472]	; (1b9a0 <btrfs_insert_empty_items@@Base+0x294>)
   1b7c6:	mov	r3, r5
   1b7c8:	mov	r1, r9
   1b7ca:	add	r2, pc
   1b7cc:	str	r0, [sp, #0]
   1b7ce:	mov	r0, r6
   1b7d0:	blx	8a64 <__fprintf_chk@plt+0x4>
   1b7d4:	ldr	r1, [pc, #460]	; (1b9a4 <btrfs_insert_empty_items@@Base+0x298>)
   1b7d6:	ldr	r0, [pc, #464]	; (1b9a8 <btrfs_insert_empty_items@@Base+0x29c>)
   1b7d8:	mov	r3, r9
   1b7da:	add	r1, pc
   1b7dc:	movw	r2, #2655	; 0xa5f
   1b7e0:	add.w	r1, r1, #424	; 0x1a8
   1b7e4:	add	r0, pc
   1b7e6:	b.n	1b756 <btrfs_insert_empty_items@@Base+0x4a>
   1b7e8:	ldr	r3, [sp, #20]
   1b7ea:	movw	r2, #2659	; 0xa63
   1b7ee:	ldr.w	sl, [pc, #444]	; 1b9ac <btrfs_insert_empty_items@@Base+0x2a0>
   1b7f2:	ldr	r0, [pc, #444]	; (1b9b0 <btrfs_insert_empty_items@@Base+0x2a4>)
   1b7f4:	ldr	r5, [r3, #32]
   1b7f6:	add	sl, pc
   1b7f8:	add.w	sl, sl, #424	; 0x1a8
   1b7fc:	add	r0, pc
   1b7fe:	lsrs	r3, r5, #31
   1b800:	mov	r1, sl
   1b802:	bl	18114 <rb_free_nodes@@Base+0x116>
   1b806:	ldr	r3, [sp, #12]
   1b808:	cmp	r5, r3
   1b80a:	bcs.n	1b852 <btrfs_insert_empty_items@@Base+0x146>
   1b80c:	mov	r1, r5
   1b80e:	mov	r0, r4
   1b810:	bl	1801c <rb_free_nodes@@Base+0x1e>
   1b814:	cmp	r6, r0
   1b816:	mov	r7, r0
   1b818:	bhi.n	1b8d2 <btrfs_insert_empty_items@@Base+0x1c6>
   1b81a:	add.w	ip, r4, #197	; 0xc5
   1b81e:	mov	r2, r5
   1b820:	movs	r3, #25
   1b822:	ldr	r1, [sp, #12]
   1b824:	cmp	r2, r1
   1b826:	bne.n	1b8fe <btrfs_insert_empty_items@@Base+0x1f2>
   1b828:	subs	r0, r1, r5
   1b82a:	ldr	r1, [sp, #100]	; 0x64
   1b82c:	mul.w	r2, r3, r5
   1b830:	add	r1, r5
   1b832:	muls	r1, r3
   1b834:	adds	r2, #101	; 0x65
   1b836:	muls	r3, r0
   1b838:	mov	r0, r4
   1b83a:	adds	r1, #101	; 0x65
   1b83c:	bl	17a8c <memmove_extent_buffer@@Base>
   1b840:	add.w	r2, r6, #101	; 0x65
   1b844:	subs	r3, r7, r6
   1b846:	sub.w	r1, r2, r8
   1b84a:	mov	r0, r4
   1b84c:	mov	r6, r7
   1b84e:	bl	17a8c <memmove_extent_buffer@@Base>
   1b852:	mov.w	r9, #25
   1b856:	add	r1, sp, #32
   1b858:	mla	r9, r9, r5, r4
   1b85c:	mov	r7, fp
   1b85e:	mov.w	r8, #0
   1b862:	ldr	r3, [sp, #100]	; 0x64
   1b864:	add.w	sl, r9, #25
   1b868:	cmp	r8, r3
   1b86a:	blt.n	1b912 <btrfs_insert_empty_items@@Base+0x206>
   1b86c:	ldr	r3, [sp, #12]
   1b86e:	mov	r0, r4
   1b870:	ldr	r2, [sp, #100]	; 0x64
   1b872:	add	r3, r2
   1b874:	str.w	r3, [r4, #192]	; 0xc0
   1b878:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   1b87c:	cbnz	r5, 1b8ae <btrfs_insert_empty_items@@Base+0x1a2>
   1b87e:	ldr.w	r3, [fp, #13]
   1b882:	ldr.w	r2, [fp, #9]
   1b886:	ldrd	r0, r1, [sp, #16]
   1b88a:	str.w	r3, [sp, #45]	; 0x2d
   1b88e:	ldrb.w	r3, [fp, #8]
   1b892:	str.w	r2, [sp, #41]	; 0x29
   1b896:	ldr.w	r2, [fp]
   1b89a:	strb.w	r3, [sp, #40]	; 0x28
   1b89e:	ldr.w	r3, [fp, #4]
   1b8a2:	strd	r2, r3, [sp, #32]
   1b8a6:	add	r2, sp, #32
   1b8a8:	movs	r3, #1
   1b8aa:	bl	19560 <btrfs_fixup_low_keys@@Base>
   1b8ae:	mov	r0, r4
   1b8b0:	bl	196e8 <btrfs_leaf_free_space@@Base>
   1b8b4:	cmp	r0, #0
   1b8b6:	bge.n	1b97e <btrfs_insert_empty_items@@Base+0x272>
   1b8b8:	mov	r0, r4
   1b8ba:	bl	25720 <btrfs_print_leaf@@Base>
   1b8be:	ldr	r1, [pc, #244]	; (1b9b4 <btrfs_insert_empty_items@@Base+0x2a8>)
   1b8c0:	ldr	r0, [pc, #244]	; (1b9b8 <btrfs_insert_empty_items@@Base+0x2ac>)
   1b8c2:	movs	r3, #1
   1b8c4:	add	r1, pc
   1b8c6:	movw	r2, #2714	; 0xa9a
   1b8ca:	add.w	r1, r1, #424	; 0x1a8
   1b8ce:	add	r0, pc
   1b8d0:	b.n	1b756 <btrfs_insert_empty_items@@Base+0x4a>
   1b8d2:	mov	r0, r4
   1b8d4:	bl	25720 <btrfs_print_leaf@@Base>
   1b8d8:	ldr	r2, [sp, #28]
   1b8da:	ldr	r3, [pc, #192]	; (1b99c <btrfs_insert_empty_items@@Base+0x290>)
   1b8dc:	mov	r1, r9
   1b8de:	ldr	r0, [r2, r3]
   1b8e0:	mov	r3, r5
   1b8e2:	ldr	r2, [pc, #216]	; (1b9bc <btrfs_insert_empty_items@@Base+0x2b0>)
   1b8e4:	strd	r7, r6, [sp]
   1b8e8:	add	r2, pc
   1b8ea:	ldr	r0, [r0, #0]
   1b8ec:	blx	8a64 <__fprintf_chk@plt+0x4>
   1b8f0:	ldr	r0, [pc, #204]	; (1b9c0 <btrfs_insert_empty_items@@Base+0x2b4>)
   1b8f2:	mov	r3, r9
   1b8f4:	movw	r2, #2668	; 0xa6c
   1b8f8:	add	r0, pc
   1b8fa:	mov	r1, sl
   1b8fc:	b.n	1b756 <btrfs_insert_empty_items@@Base+0x4a>
   1b8fe:	mla	r0, r3, r2, ip
   1b902:	adds	r2, #1
   1b904:	ldr.w	r1, [r0, #17]
   1b908:	sub.w	r1, r1, r8
   1b90c:	str.w	r1, [r0, #17]
   1b910:	b.n	1b822 <btrfs_insert_empty_items@@Base+0x116>
   1b912:	ldr.w	r3, [r7, #13]
   1b916:	mov	r0, r4
   1b918:	ldr.w	r2, [r7, #9]
   1b91c:	adds	r7, #17
   1b91e:	str	r1, [sp, #28]
   1b920:	str.w	r3, [sp, #45]	; 0x2d
   1b924:	ldrb.w	r3, [r7, #-9]
   1b928:	str.w	r2, [sp, #41]	; 0x29
   1b92c:	ldr.w	r2, [r7, #-17]
   1b930:	strb.w	r3, [sp, #40]	; 0x28
   1b934:	ldr.w	r3, [r7, #-13]
   1b938:	strd	r2, r3, [sp, #32]
   1b93c:	add.w	r2, r5, r8
   1b940:	bl	1803a <rb_free_nodes@@Base+0x3c>
   1b944:	ldr	r3, [sp, #24]
   1b946:	ldr	r1, [sp, #28]
   1b948:	ldr.w	r3, [r3, r8, lsl #2]
   1b94c:	subs	r3, r6, r3
   1b94e:	str.w	r3, [r9, #214]	; 0xd6
   1b952:	ldr	r3, [sp, #24]
   1b954:	ldr.w	r3, [r3, r8, lsl #2]
   1b958:	add.w	r8, r8, #1
   1b95c:	subs	r6, r6, r3
   1b95e:	str.w	r3, [r9, #218]	; 0xda
   1b962:	mov	r9, sl
   1b964:	b.n	1b862 <btrfs_insert_empty_items@@Base+0x156>
   1b966:	mvn.w	r0, #16
   1b96a:	ldr	r2, [pc, #88]	; (1b9c4 <btrfs_insert_empty_items@@Base+0x2b8>)
   1b96c:	ldr	r3, [pc, #32]	; (1b990 <btrfs_insert_empty_items@@Base+0x284>)
   1b96e:	add	r2, pc
   1b970:	ldr	r3, [r2, r3]
   1b972:	ldr	r2, [r3, #0]
   1b974:	ldr	r3, [sp, #52]	; 0x34
   1b976:	eors	r2, r3
   1b978:	beq.n	1b982 <btrfs_insert_empty_items@@Base+0x276>
   1b97a:	blx	8708 <__stack_chk_fail@plt>
   1b97e:	movs	r0, #0
   1b980:	b.n	1b96a <btrfs_insert_empty_items@@Base+0x25e>
   1b982:	add	sp, #60	; 0x3c
   1b984:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b988:	str	r6, [sp, #368]	; 0x170
   1b98a:	movs	r4, r0
   1b98c:	str	r6, [sp, #360]	; 0x168
   1b98e:	movs	r4, r0
   1b990:	lsls	r0, r5, #8
   1b992:	movs	r0, r0
   1b994:	asrs	r6, r6, #31
   1b996:	movs	r2, r0
   1b998:	movs	r7, #169	; 0xa9
   1b99a:	movs	r2, r0
   1b99c:	lsls	r0, r7, #8
   1b99e:	movs	r0, r0
   1b9a0:	asrs	r0, r3, #25
   1b9a2:	movs	r2, r0
   1b9a4:	asrs	r2, r5, #29
   1b9a6:	movs	r2, r0
   1b9a8:	movs	r7, #25
   1b9aa:	movs	r2, r0
   1b9ac:	asrs	r6, r1, #29
   1b9ae:	movs	r2, r0
   1b9b0:	asrs	r4, r3, #18
   1b9b2:	movs	r2, r0
   1b9b4:	asrs	r0, r0, #26
   1b9b6:	movs	r2, r0
   1b9b8:	movs	r6, #47	; 0x2f
   1b9ba:	movs	r2, r0
   1b9bc:	asrs	r0, r4, #21
   1b9be:	movs	r2, r0
   1b9c0:	movs	r6, #5
   1b9c2:	movs	r2, r0
   1b9c4:	str	r4, [sp, #72]	; 0x48
   1b9c6:	movs	r4, r0

0001b9c8 <btrfs_insert_item@@Base>:
   1b9c8:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1b9cc:	mov	r8, r2
   1b9ce:	ldr	r2, [pc, #132]	; (1ba54 <btrfs_insert_item@@Base+0x8c>)
   1b9d0:	mov	r6, r3
   1b9d2:	ldr	r3, [pc, #132]	; (1ba58 <btrfs_insert_item@@Base+0x90>)
   1b9d4:	sub	sp, #24
   1b9d6:	add	r2, pc
   1b9d8:	mov	r5, r0
   1b9da:	str	r1, [sp, #12]
   1b9dc:	ldr	r3, [r2, r3]
   1b9de:	ldr	r7, [sp, #48]	; 0x30
   1b9e0:	ldr	r3, [r3, #0]
   1b9e2:	str	r3, [sp, #20]
   1b9e4:	mov.w	r3, #0
   1b9e8:	bl	18550 <btrfs_alloc_path@@Base>
   1b9ec:	mov	r4, r0
   1b9ee:	cbz	r0, 1ba44 <btrfs_insert_item@@Base+0x7c>
   1b9f0:	movs	r3, #1
   1b9f2:	mov	r2, r0
   1b9f4:	str	r3, [sp, #4]
   1b9f6:	mov	r0, r5
   1b9f8:	add	r3, sp, #16
   1b9fa:	ldr	r1, [sp, #12]
   1b9fc:	str	r3, [sp, #0]
   1b9fe:	mov	r3, r8
   1ba00:	str	r7, [sp, #16]
   1ba02:	bl	1b70c <btrfs_insert_empty_items@@Base>
   1ba06:	mov	r5, r0
   1ba08:	cbnz	r0, 1ba2a <btrfs_insert_item@@Base+0x62>
   1ba0a:	ldr	r0, [r4, #0]
   1ba0c:	movs	r2, #25
   1ba0e:	ldr	r3, [r4, #32]
   1ba10:	mov	r1, r6
   1ba12:	str	r0, [sp, #12]
   1ba14:	mla	r3, r2, r3, r0
   1ba18:	ldr.w	r2, [r3, #214]	; 0xd6
   1ba1c:	mov	r3, r7
   1ba1e:	adds	r2, #101	; 0x65
   1ba20:	bl	17a30 <write_extent_buffer@@Base>
   1ba24:	ldr	r0, [sp, #12]
   1ba26:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   1ba2a:	mov	r0, r4
   1ba2c:	bl	1857e <btrfs_free_path@@Base>
   1ba30:	ldr	r2, [pc, #40]	; (1ba5c <btrfs_insert_item@@Base+0x94>)
   1ba32:	ldr	r3, [pc, #36]	; (1ba58 <btrfs_insert_item@@Base+0x90>)
   1ba34:	add	r2, pc
   1ba36:	ldr	r3, [r2, r3]
   1ba38:	ldr	r2, [r3, #0]
   1ba3a:	ldr	r3, [sp, #20]
   1ba3c:	eors	r2, r3
   1ba3e:	beq.n	1ba4a <btrfs_insert_item@@Base+0x82>
   1ba40:	blx	8708 <__stack_chk_fail@plt>
   1ba44:	mvn.w	r5, #11
   1ba48:	b.n	1ba30 <btrfs_insert_item@@Base+0x68>
   1ba4a:	mov	r0, r5
   1ba4c:	add	sp, #24
   1ba4e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1ba52:	nop
   1ba54:	str	r3, [sp, #680]	; 0x2a8
   1ba56:	movs	r4, r0
   1ba58:	lsls	r0, r5, #8
   1ba5a:	movs	r0, r0
   1ba5c:	str	r3, [sp, #304]	; 0x130
   1ba5e:	movs	r4, r0
   1ba60:	push	{r4, r5, r6, r7, lr}
   1ba62:	mov	r6, r0
   1ba64:	mov	r7, r2
   1ba66:	ldr.w	r0, [r3, #176]	; 0xb0
   1ba6a:	mov	r4, r1
   1ba6c:	mov	r5, r3
   1ba6e:	ldr.w	r1, [r3, #180]	; 0xb4
   1ba72:	sub	sp, #44	; 0x2c
   1ba74:	ldrd	r2, r3, [r6, #8]
   1ba78:	cmp	r3, r1
   1ba7a:	ldr	r1, [pc, #116]	; (1baf0 <btrfs_insert_item@@Base+0x128>)
   1ba7c:	it	eq
   1ba7e:	cmpeq	r2, r0
   1ba80:	ldr	r0, [pc, #112]	; (1baf4 <btrfs_insert_item@@Base+0x12c>)
   1ba82:	add	r1, pc
   1ba84:	movw	r2, #2805	; 0xaf5
   1ba88:	ite	ne
   1ba8a:	movne	r3, #1
   1ba8c:	moveq	r3, #0
   1ba8e:	addw	r1, r1, #449	; 0x1c1
   1ba92:	add	r0, pc
   1ba94:	bl	1815c <rb_free_nodes@@Base+0x15e>
   1ba98:	ldr	r3, [r7, #36]	; 0x24
   1ba9a:	movs	r2, #1
   1ba9c:	mov	r1, r7
   1ba9e:	mov	r0, r4
   1baa0:	bl	1a86c <btrfs_del_ptr@@Base>
   1baa4:	cbnz	r0, 1baec <btrfs_insert_item@@Base+0x124>
   1baa6:	ldr	r1, [r5, #76]	; 0x4c
   1baa8:	ldr.w	r2, [r4, #200]	; 0xc8
   1baac:	ldr.w	r3, [r4, #204]	; 0xcc
   1bab0:	subs	r2, r2, r1
   1bab2:	ldr.w	r7, [r4, #447]	; 0x1bf
   1bab6:	str.w	r2, [r4, #200]	; 0xc8
   1baba:	sbc.w	r3, r3, #0
   1babe:	movs	r2, #0
   1bac0:	str.w	r3, [r4, #204]	; 0xcc
   1bac4:	ldr.w	r1, [r4, #451]	; 0x1c3
   1bac8:	movs	r3, #0
   1baca:	strd	r2, r3, [sp, #32]
   1bace:	strd	r2, r3, [sp, #24]
   1bad2:	strd	r2, r3, [sp, #8]
   1bad6:	ldr	r3, [r5, #76]	; 0x4c
   1bad8:	strd	r7, r1, [sp, #16]
   1badc:	mov	r1, r4
   1bade:	strd	r3, r0, [sp]
   1bae2:	mov	r0, r6
   1bae4:	ldrd	r2, r3, [r5, #40]	; 0x28
   1bae8:	bl	2134c <btrfs_free_extent@@Base>
   1baec:	add	sp, #44	; 0x2c
   1baee:	pop	{r4, r5, r6, r7, pc}
   1baf0:	asrs	r2, r0, #19
   1baf2:	movs	r2, r0
   1baf4:	asrs	r7, r2, #15
   1baf6:	movs	r2, r0

0001baf8 <btrfs_del_items@@Base>:
   1baf8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bafc:	mov	r6, r2
   1bafe:	ldr	r2, [pc, #468]	; (1bcd4 <btrfs_del_items@@Base+0x1dc>)
   1bb00:	mov	r8, r3
   1bb02:	ldr	r3, [pc, #468]	; (1bcd8 <btrfs_del_items@@Base+0x1e0>)
   1bb04:	sub	sp, #52	; 0x34
   1bb06:	add	r2, pc
   1bb08:	ldr	r5, [r6, #0]
   1bb0a:	mov	sl, r0
   1bb0c:	mov	r7, r1
   1bb0e:	ldr	r3, [r2, r3]
   1bb10:	ldr	r3, [r3, #0]
   1bb12:	str	r3, [sp, #44]	; 0x2c
   1bb14:	mov.w	r3, #0
   1bb18:	ldr	r3, [sp, #88]	; 0x58
   1bb1a:	add.w	r9, r8, r3
   1bb1e:	add.w	r3, r5, #96	; 0x60
   1bb22:	str	r3, [sp, #20]
   1bb24:	movs	r3, #25
   1bb26:	mul.w	r3, r3, r8
   1bb2a:	adds	r2, r5, r3
   1bb2c:	str	r3, [sp, #12]
   1bb2e:	movs	r3, #0
   1bb30:	mov	fp, r3
   1bb32:	ldr	r0, [sp, #88]	; 0x58
   1bb34:	add.w	r1, r2, #25
   1bb38:	cmp	r3, r0
   1bb3a:	blt.n	1bbb4 <btrfs_del_items@@Base+0xbc>
   1bb3c:	ldr.w	r4, [r5, #192]	; 0xc0
   1bb40:	str.w	r9, [sp, #16]
   1bb44:	cmp	r9, r4
   1bb46:	beq.n	1bb9c <btrfs_del_items@@Base+0xa4>
   1bb48:	ldr.w	r0, [r7, #464]	; 0x1d0
   1bb4c:	mov	r1, r5
   1bb4e:	add.w	r0, r0, #384	; 0x180
   1bb52:	bl	180c0 <rb_free_nodes@@Base+0xc2>
   1bb56:	ldr	r3, [sp, #20]
   1bb58:	add.w	r1, r9, #4294967295	; 0xffffffff
   1bb5c:	mov.w	ip, #25
   1bb60:	mla	r1, ip, r1, r3
   1bb64:	ldr.w	r3, [r1, #118]	; 0x76
   1bb68:	add.w	r2, r0, #101	; 0x65
   1bb6c:	subs	r3, r3, r0
   1bb6e:	add.w	r1, r2, fp
   1bb72:	mov	r0, r5
   1bb74:	bl	17a8c <memmove_extent_buffer@@Base>
   1bb78:	add.w	r0, r5, #197	; 0xc5
   1bb7c:	movs	r3, #25
   1bb7e:	cmp	r4, r9
   1bb80:	bhi.n	1bbc0 <btrfs_del_items@@Base+0xc8>
   1bb82:	ldr	r2, [sp, #88]	; 0x58
   1bb84:	mov	r0, r5
   1bb86:	add.w	r1, r2, r8
   1bb8a:	ldr	r2, [sp, #16]
   1bb8c:	subs	r1, r4, r1
   1bb8e:	muls	r2, r3
   1bb90:	muls	r3, r1
   1bb92:	ldr	r1, [sp, #12]
   1bb94:	adds	r2, #101	; 0x65
   1bb96:	adds	r1, #101	; 0x65
   1bb98:	bl	17a8c <memmove_extent_buffer@@Base>
   1bb9c:	ldr	r3, [sp, #88]	; 0x58
   1bb9e:	subs	r2, r4, r3
   1bba0:	str.w	r2, [r5, #192]	; 0xc0
   1bba4:	cbnz	r2, 1bbfc <btrfs_del_items@@Base+0x104>
   1bba6:	ldr	r3, [r7, #0]
   1bba8:	cmp	r3, r5
   1bbaa:	bne.n	1bbd4 <btrfs_del_items@@Base+0xdc>
   1bbac:	strb.w	r2, [r5, #196]	; 0xc4
   1bbb0:	movs	r4, #0
   1bbb2:	b.n	1bbe8 <btrfs_del_items@@Base+0xf0>
   1bbb4:	ldr.w	r2, [r2, #218]	; 0xda
   1bbb8:	adds	r3, #1
   1bbba:	add	fp, r2
   1bbbc:	mov	r2, r1
   1bbbe:	b.n	1bb32 <btrfs_del_items@@Base+0x3a>
   1bbc0:	mla	r1, r3, r9, r0
   1bbc4:	add.w	r9, r9, #1
   1bbc8:	ldr.w	r2, [r1, #17]
   1bbcc:	add	r2, fp
   1bbce:	str.w	r2, [r1, #17]
   1bbd2:	b.n	1bb7e <btrfs_del_items@@Base+0x86>
   1bbd4:	mov	r0, r5
   1bbd6:	bl	1dc0c <clean_tree_block@@Base>
   1bbda:	mov	r3, r5
   1bbdc:	mov	r2, r6
   1bbde:	mov	r1, r7
   1bbe0:	mov	r0, sl
   1bbe2:	bl	1ba60 <btrfs_insert_item@@Base+0x98>
   1bbe6:	mov	r4, r0
   1bbe8:	ldr	r2, [pc, #240]	; (1bcdc <btrfs_del_items@@Base+0x1e4>)
   1bbea:	ldr	r3, [pc, #236]	; (1bcd8 <btrfs_del_items@@Base+0x1e0>)
   1bbec:	add	r2, pc
   1bbee:	ldr	r3, [r2, r3]
   1bbf0:	ldr	r2, [r3, #0]
   1bbf2:	ldr	r3, [sp, #44]	; 0x2c
   1bbf4:	eors	r2, r3
   1bbf6:	beq.n	1bccc <btrfs_del_items@@Base+0x1d4>
   1bbf8:	blx	8708 <__stack_chk_fail@plt>
   1bbfc:	movs	r1, #0
   1bbfe:	mov	r0, r5
   1bc00:	bl	18460 <rb_free_nodes@@Base+0x462>
   1bc04:	mov	r9, r0
   1bc06:	cmp.w	r8, #0
   1bc0a:	bne.n	1bc24 <btrfs_del_items@@Base+0x12c>
   1bc0c:	add	r4, sp, #24
   1bc0e:	mov	r2, r8
   1bc10:	mov	r0, r5
   1bc12:	mov	r1, r4
   1bc14:	bl	18046 <rb_free_nodes@@Base+0x48>
   1bc18:	movs	r3, #1
   1bc1a:	mov	r2, r4
   1bc1c:	mov	r1, r6
   1bc1e:	mov	r0, r7
   1bc20:	bl	19560 <btrfs_fixup_low_keys@@Base>
   1bc24:	ldr.w	r3, [r7, #464]	; 0x1d0
   1bc28:	ldr.w	r3, [r3, #384]	; 0x180
   1bc2c:	subs	r3, #101	; 0x65
   1bc2e:	cmp.w	r9, r3, lsr #2
   1bc32:	bcs.n	1bcc4 <btrfs_del_items@@Base+0x1cc>
   1bc34:	ldr	r3, [r5, #80]	; 0x50
   1bc36:	mov	r2, r6
   1bc38:	ldr.w	r8, [r6, #36]	; 0x24
   1bc3c:	mov	r1, r7
   1bc3e:	adds	r3, #1
   1bc40:	mov	r0, sl
   1bc42:	str	r3, [r5, #80]	; 0x50
   1bc44:	movs	r3, #1
   1bc46:	str	r3, [sp, #0]
   1bc48:	bl	19d20 <btrfs_check_leaf@@Base+0x5b0>
   1bc4c:	subs	r4, r0, #0
   1bc4e:	bge.n	1bcba <btrfs_del_items@@Base+0x1c2>
   1bc50:	cmn.w	r4, #28
   1bc54:	it	eq
   1bc56:	moveq	r4, #0
   1bc58:	ldr	r3, [r6, #0]
   1bc5a:	cmp	r3, r5
   1bc5c:	bne.n	1bc7e <btrfs_del_items@@Base+0x186>
   1bc5e:	ldr.w	r3, [r5, #192]	; 0xc0
   1bc62:	cbz	r3, 1bc7e <btrfs_del_items@@Base+0x186>
   1bc64:	movs	r3, #1
   1bc66:	mov	r2, r6
   1bc68:	mov	r1, r7
   1bc6a:	mov	r0, sl
   1bc6c:	str	r3, [sp, #0]
   1bc6e:	bl	19aa8 <btrfs_check_leaf@@Base+0x338>
   1bc72:	cmp	r0, #0
   1bc74:	bge.n	1bc7e <btrfs_del_items@@Base+0x186>
   1bc76:	cmn.w	r0, #28
   1bc7a:	it	ne
   1bc7c:	movne	r4, r0
   1bc7e:	ldr.w	r3, [r5, #192]	; 0xc0
   1bc82:	mov	r0, r5
   1bc84:	cbnz	r3, 1bcbe <btrfs_del_items@@Base+0x1c6>
   1bc86:	bl	1dc0c <clean_tree_block@@Base>
   1bc8a:	mov	r3, r5
   1bc8c:	mov	r2, r6
   1bc8e:	mov	r1, r7
   1bc90:	mov	r0, sl
   1bc92:	str.w	r8, [r6, #36]	; 0x24
   1bc96:	bl	1ba60 <btrfs_insert_item@@Base+0x98>
   1bc9a:	ldr	r1, [pc, #68]	; (1bce0 <btrfs_del_items@@Base+0x1e8>)
   1bc9c:	movw	r2, #2909	; 0xb5d
   1bca0:	add	r1, pc
   1bca2:	add.w	r1, r1, #464	; 0x1d0
   1bca6:	mov	r4, r0
   1bca8:	mov	r3, r0
   1bcaa:	ldr	r0, [pc, #56]	; (1bce4 <btrfs_del_items@@Base+0x1ec>)
   1bcac:	add	r0, pc
   1bcae:	bl	18114 <rb_free_nodes@@Base+0x116>
   1bcb2:	mov	r0, r5
   1bcb4:	bl	17320 <free_extent_buffer@@Base>
   1bcb8:	b.n	1bbe8 <btrfs_del_items@@Base+0xf0>
   1bcba:	movs	r4, #0
   1bcbc:	b.n	1bc58 <btrfs_del_items@@Base+0x160>
   1bcbe:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   1bcc2:	b.n	1bcb2 <btrfs_del_items@@Base+0x1ba>
   1bcc4:	mov	r0, r5
   1bcc6:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   1bcca:	b.n	1bbb0 <btrfs_del_items@@Base+0xb8>
   1bccc:	mov	r0, r4
   1bcce:	add	sp, #52	; 0x34
   1bcd0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bcd4:	str	r2, [sp, #488]	; 0x1e8
   1bcd6:	movs	r4, r0
   1bcd8:	lsls	r0, r5, #8
   1bcda:	movs	r0, r0
   1bcdc:	str	r1, [sp, #592]	; 0x250
   1bcde:	movs	r4, r0
   1bce0:	asrs	r4, r4, #10
   1bce2:	movs	r2, r0
   1bce4:			; <UNDEFINED> instruction: 0xe8380001

0001bce8 <btrfs_prev_leaf@@Base>:
   1bce8:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1bcec:	adds	r3, r1, #4
   1bcee:	mov	r5, r1
   1bcf0:	movs	r6, #1
   1bcf2:	mov	r9, r3
   1bcf4:	ldr.w	r1, [r3], #4
   1bcf8:	cbz	r1, 1bd04 <btrfs_prev_leaf@@Base+0x1c>
   1bcfa:	ldr	r7, [r3, #28]
   1bcfc:	cbnz	r7, 1bd08 <btrfs_prev_leaf@@Base+0x20>
   1bcfe:	adds	r6, #1
   1bd00:	cmp	r6, #8
   1bd02:	bne.n	1bcf4 <btrfs_prev_leaf@@Base+0xc>
   1bd04:	movs	r0, #1
   1bd06:	b.n	1bd28 <btrfs_prev_leaf@@Base+0x40>
   1bd08:	ldr.w	r8, [r0, #464]	; 0x1d0
   1bd0c:	subs	r7, #1
   1bd0e:	mov	r2, r7
   1bd10:	mov	r0, r8
   1bd12:	bl	1930e <read_node_slot@@Base>
   1bd16:	mov	r4, r0
   1bd18:	bl	180ac <rb_free_nodes@@Base+0xae>
   1bd1c:	cbnz	r0, 1bd2c <btrfs_prev_leaf@@Base+0x44>
   1bd1e:	cmn.w	r4, #4096	; 0x1000
   1bd22:	bhi.n	1bd68 <btrfs_prev_leaf@@Base+0x80>
   1bd24:	mvn.w	r0, #4
   1bd28:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1bd2c:	add.w	r3, r6, #8
   1bd30:	str.w	r7, [r5, r3, lsl #2]
   1bd34:	add.w	r5, r5, r6, lsl #2
   1bd38:	ldr.w	r0, [r5, #-4]
   1bd3c:	bl	17320 <free_extent_buffer@@Base>
   1bd40:	ldr.w	r2, [r4, #192]	; 0xc0
   1bd44:	cbz	r2, 1bd48 <btrfs_prev_leaf@@Base+0x60>
   1bd46:	subs	r2, #1
   1bd48:	cmp	r5, r9
   1bd4a:	str.w	r4, [r5, #-4]
   1bd4e:	str	r2, [r5, #28]
   1bd50:	beq.n	1bd6c <btrfs_prev_leaf@@Base+0x84>
   1bd52:	mov	r1, r4
   1bd54:	mov	r0, r8
   1bd56:	bl	1930e <read_node_slot@@Base>
   1bd5a:	subs	r5, #4
   1bd5c:	mov	r4, r0
   1bd5e:	bl	180ac <rb_free_nodes@@Base+0xae>
   1bd62:	cmp	r0, #0
   1bd64:	bne.n	1bd38 <btrfs_prev_leaf@@Base+0x50>
   1bd66:	b.n	1bd1e <btrfs_prev_leaf@@Base+0x36>
   1bd68:	mov	r0, r4
   1bd6a:	b.n	1bd28 <btrfs_prev_leaf@@Base+0x40>
   1bd6c:	movs	r0, #0
   1bd6e:	b.n	1bd28 <btrfs_prev_leaf@@Base+0x40>

0001bd70 <btrfs_next_sibling_tree_block@@Base>:
   1bd70:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bd74:	mov	r5, r1
   1bd76:	ldrb.w	r3, [r1, #65]	; 0x41
   1bd7a:	mov	r7, r0
   1bd7c:	ldr	r1, [pc, #232]	; (1be68 <btrfs_next_sibling_tree_block@@Base+0xf8>)
   1bd7e:	movw	r2, #2996	; 0xbb4
   1bd82:	cmp	r3, #6
   1bd84:	ldr	r0, [pc, #228]	; (1be6c <btrfs_next_sibling_tree_block@@Base+0xfc>)
   1bd86:	add	r1, pc
   1bd88:	add.w	r4, r3, #1
   1bd8c:	add.w	r1, r1, #480	; 0x1e0
   1bd90:	add	r0, pc
   1bd92:	ite	ls
   1bd94:	movls	r3, #0
   1bd96:	movhi	r3, #1
   1bd98:	bl	18114 <rb_free_nodes@@Base+0x116>
   1bd9c:	add.w	r2, r5, #32
   1bda0:	ldr.w	r6, [r5, r4, lsl #2]
   1bda4:	cmp	r6, #0
   1bda6:	beq.n	1be5e <btrfs_next_sibling_tree_block@@Base+0xee>
   1bda8:	ldr.w	r3, [r2, r4, lsl #2]
   1bdac:	add.w	r8, r3, #1
   1bdb0:	ldr.w	r3, [r6, #192]	; 0xc0
   1bdb4:	cmp	r8, r3
   1bdb6:	bcc.n	1be26 <btrfs_next_sibling_tree_block@@Base+0xb6>
   1bdb8:	adds	r4, #1
   1bdba:	cmp	r4, #8
   1bdbc:	beq.n	1be5e <btrfs_next_sibling_tree_block@@Base+0xee>
   1bdbe:	cmp	r4, #7
   1bdc0:	ble.n	1bda0 <btrfs_next_sibling_tree_block@@Base+0x30>
   1bdc2:	movs	r6, #0
   1bdc4:	add.w	r3, r4, #8
   1bdc8:	add.w	sl, r5, r4, lsl #2
   1bdcc:	mov.w	fp, #0
   1bdd0:	mov.w	r9, #0
   1bdd4:	str.w	r8, [r5, r3, lsl #2]
   1bdd8:	mov.w	r8, #0
   1bddc:	ldr.w	r0, [sl, #-4]
   1bde0:	subs	r4, #1
   1bde2:	bl	17320 <free_extent_buffer@@Base>
   1bde6:	str.w	r6, [sl, #-4]
   1bdea:	str.w	fp, [sl, #28]
   1bdee:	ldrb.w	r3, [r5, #65]	; 0x41
   1bdf2:	cmp	r3, r4
   1bdf4:	beq.n	1be62 <btrfs_next_sibling_tree_block@@Base+0xf2>
   1bdf6:	ldrsb.w	r3, [r5, #64]	; 0x40
   1bdfa:	cbz	r3, 1be0c <btrfs_next_sibling_tree_block@@Base+0x9c>
   1bdfc:	movs	r3, #0
   1bdfe:	mov	r2, r4
   1be00:	mov	r1, r5
   1be02:	mov	r0, r7
   1be04:	strd	r8, r9, [sp]
   1be08:	bl	19388 <reada_for_search@@Base>
   1be0c:	mov	r1, r6
   1be0e:	movs	r2, #0
   1be10:	mov	r0, r7
   1be12:	sub.w	sl, sl, #4
   1be16:	bl	1930e <read_node_slot@@Base>
   1be1a:	mov	r6, r0
   1be1c:	bl	180ac <rb_free_nodes@@Base+0xae>
   1be20:	cmp	r0, #0
   1be22:	bne.n	1bddc <btrfs_next_sibling_tree_block@@Base+0x6c>
   1be24:	b.n	1be54 <btrfs_next_sibling_tree_block@@Base+0xe4>
   1be26:	ldrsb.w	r3, [r5, #64]	; 0x40
   1be2a:	cbz	r3, 1be40 <btrfs_next_sibling_tree_block@@Base+0xd0>
   1be2c:	movs	r2, #0
   1be2e:	movs	r3, #0
   1be30:	mov	r1, r5
   1be32:	strd	r2, r3, [sp]
   1be36:	mov	r0, r7
   1be38:	mov	r3, r8
   1be3a:	mov	r2, r4
   1be3c:	bl	19388 <reada_for_search@@Base>
   1be40:	mov	r1, r6
   1be42:	mov	r2, r8
   1be44:	mov	r0, r7
   1be46:	bl	1930e <read_node_slot@@Base>
   1be4a:	mov	r6, r0
   1be4c:	bl	180ac <rb_free_nodes@@Base+0xae>
   1be50:	cmp	r0, #0
   1be52:	bne.n	1bdc4 <btrfs_next_sibling_tree_block@@Base+0x54>
   1be54:	mvn.w	r0, #4
   1be58:	add	sp, #12
   1be5a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1be5e:	movs	r0, #1
   1be60:	b.n	1be58 <btrfs_next_sibling_tree_block@@Base+0xe8>
   1be62:	movs	r0, #0
   1be64:	b.n	1be58 <btrfs_next_sibling_tree_block@@Base+0xe8>
   1be66:	nop
   1be68:	asrs	r6, r7, #6
   1be6a:	movs	r2, r0
   1be6c:	asrs	r1, r1, #4
   1be6e:	movs	r2, r0

0001be70 <btrfs_find_item@@Base>:
   1be70:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1be74:	mov	r8, r0
   1be76:	ldr	r4, [pc, #200]	; (1bf40 <btrfs_find_item@@Base+0xd0>)
   1be78:	sub	sp, #36	; 0x24
   1be7a:	ldr	r0, [pc, #200]	; (1bf44 <btrfs_find_item@@Base+0xd4>)
   1be7c:	mov	r6, r1
   1be7e:	add	r4, pc
   1be80:	ldr	r7, [sp, #76]	; 0x4c
   1be82:	ldr	r0, [r4, r0]
   1be84:	ldr	r0, [r0, #0]
   1be86:	str	r0, [sp, #28]
   1be88:	mov.w	r0, #0
   1be8c:	strd	r2, r3, [sp, #8]
   1be90:	ldr	r3, [sp, #64]	; 0x40
   1be92:	ldrb.w	r0, [sp, #72]	; 0x48
   1be96:	str.w	r3, [sp, #17]
   1be9a:	ldr	r3, [sp, #68]	; 0x44
   1be9c:	strb.w	r0, [sp, #16]
   1bea0:	str.w	r3, [sp, #21]
   1bea4:	cbnz	r1, 1beb4 <btrfs_find_item@@Base+0x44>
   1bea6:	bl	18550 <btrfs_alloc_path@@Base>
   1beaa:	mov	r5, r0
   1beac:	cbnz	r0, 1beb6 <btrfs_find_item@@Base+0x46>
   1beae:	mvn.w	r4, #11
   1beb2:	b.n	1bf1e <btrfs_find_item@@Base+0xae>
   1beb4:	mov	r5, r1
   1beb6:	mov.w	r9, #0
   1beba:	add	r2, sp, #8
   1bebc:	mov	r3, r5
   1bebe:	mov	r1, r8
   1bec0:	mov	r0, r9
   1bec2:	strd	r9, r9, [sp]
   1bec6:	bl	1a93c <btrfs_search_slot@@Base>
   1beca:	subs	r4, r0, #0
   1becc:	blt.n	1bf14 <btrfs_find_item@@Base+0xa4>
   1bece:	cbz	r7, 1bf14 <btrfs_find_item@@Base+0xa4>
   1bed0:	ldr	r0, [r5, #0]
   1bed2:	cbz	r4, 1bef2 <btrfs_find_item@@Base+0x82>
   1bed4:	ldr.w	r3, [r0, #192]	; 0xc0
   1bed8:	ldr	r2, [r5, #32]
   1beda:	cmp	r2, r3
   1bedc:	bcc.n	1bef2 <btrfs_find_item@@Base+0x82>
   1bede:	strb.w	r9, [r5, #65]	; 0x41
   1bee2:	mov	r1, r5
   1bee4:	ldr.w	r0, [r8, #464]	; 0x1d0
   1bee8:	bl	1bd70 <btrfs_next_sibling_tree_block@@Base>
   1beec:	mov	r4, r0
   1beee:	cbnz	r0, 1bf14 <btrfs_find_item@@Base+0xa4>
   1bef0:	ldr	r0, [r5, #0]
   1bef2:	ldr	r2, [r5, #32]
   1bef4:	mov	r1, r7
   1bef6:	bl	184b0 <rb_free_nodes@@Base+0x4b2>
   1befa:	ldrb	r2, [r7, #8]
   1befc:	ldrb.w	r3, [sp, #16]
   1bf00:	cmp	r2, r3
   1bf02:	bne.n	1bf32 <btrfs_find_item@@Base+0xc2>
   1bf04:	ldrd	r2, r3, [sp, #8]
   1bf08:	ldr	r1, [r7, #4]
   1bf0a:	ldr	r0, [r7, #0]
   1bf0c:	cmp	r1, r3
   1bf0e:	ite	eq
   1bf10:	cmpeq	r0, r2
   1bf12:	movne	r4, #1
   1bf14:	cmp	r5, r6
   1bf16:	beq.n	1bf1e <btrfs_find_item@@Base+0xae>
   1bf18:	mov	r0, r5
   1bf1a:	bl	1857e <btrfs_free_path@@Base>
   1bf1e:	ldr	r2, [pc, #40]	; (1bf48 <btrfs_find_item@@Base+0xd8>)
   1bf20:	ldr	r3, [pc, #32]	; (1bf44 <btrfs_find_item@@Base+0xd4>)
   1bf22:	add	r2, pc
   1bf24:	ldr	r3, [r2, r3]
   1bf26:	ldr	r2, [r3, #0]
   1bf28:	ldr	r3, [sp, #28]
   1bf2a:	eors	r2, r3
   1bf2c:	beq.n	1bf36 <btrfs_find_item@@Base+0xc6>
   1bf2e:	blx	8708 <__stack_chk_fail@plt>
   1bf32:	movs	r4, #1
   1bf34:	b.n	1bf14 <btrfs_find_item@@Base+0xa4>
   1bf36:	mov	r0, r4
   1bf38:	add	sp, #36	; 0x24
   1bf3a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1bf3e:	nop
   1bf40:	ldrh	r2, [r0, #56]	; 0x38
   1bf42:	movs	r4, r0
   1bf44:	lsls	r0, r5, #8
   1bf46:	movs	r0, r0
   1bf48:	ldrh	r6, [r3, #50]	; 0x32
   1bf4a:	movs	r4, r0

0001bf4c <btrfs_search_slot_for_read@@Base>:
   1bf4c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1bf50:	mov	r5, r0
   1bf52:	ldr.w	r8, [sp, #40]	; 0x28
   1bf56:	mov	r6, r1
   1bf58:	mov	r4, r2
   1bf5a:	mov	r9, r3
   1bf5c:	movs	r7, #0
   1bf5e:	mov	r3, r4
   1bf60:	mov	r2, r6
   1bf62:	mov	r1, r5
   1bf64:	movs	r0, #0
   1bf66:	strd	r7, r7, [sp]
   1bf6a:	bl	1a93c <btrfs_search_slot@@Base>
   1bf6e:	cmp	r0, #0
   1bf70:	ble.n	1bf86 <btrfs_search_slot_for_read@@Base+0x3a>
   1bf72:	ldr	r3, [r4, #32]
   1bf74:	cmp.w	r9, #0
   1bf78:	beq.n	1bfb8 <btrfs_search_slot_for_read@@Base+0x6c>
   1bf7a:	ldr	r2, [r4, #0]
   1bf7c:	ldr.w	r2, [r2, #192]	; 0xc0
   1bf80:	cmp	r3, r2
   1bf82:	bcs.n	1bf8c <btrfs_search_slot_for_read@@Base+0x40>
   1bf84:	movs	r0, #0
   1bf86:	add	sp, #12
   1bf88:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1bf8c:	strb.w	r7, [r4, #65]	; 0x41
   1bf90:	mov	r1, r4
   1bf92:	ldr.w	r0, [r5, #464]	; 0x1d0
   1bf96:	bl	1bd70 <btrfs_next_sibling_tree_block@@Base>
   1bf9a:	cmp	r0, #0
   1bf9c:	ble.n	1bf86 <btrfs_search_slot_for_read@@Base+0x3a>
   1bf9e:	cmp.w	r8, #0
   1bfa2:	bne.n	1bfa8 <btrfs_search_slot_for_read@@Base+0x5c>
   1bfa4:	movs	r0, #1
   1bfa6:	b.n	1bf86 <btrfs_search_slot_for_read@@Base+0x3a>
   1bfa8:	mov	r0, r4
   1bfaa:	mov.w	r9, #0
   1bfae:	bl	18558 <btrfs_release_path@@Base>
   1bfb2:	mov.w	r8, #0
   1bfb6:	b.n	1bf5e <btrfs_search_slot_for_read@@Base+0x12>
   1bfb8:	cbnz	r3, 1bfec <btrfs_search_slot_for_read@@Base+0xa0>
   1bfba:	mov	r1, r4
   1bfbc:	mov	r0, r5
   1bfbe:	bl	1bce8 <btrfs_prev_leaf@@Base>
   1bfc2:	cmp	r0, #0
   1bfc4:	blt.n	1bf86 <btrfs_search_slot_for_read@@Base+0x3a>
   1bfc6:	bne.n	1bfda <btrfs_search_slot_for_read@@Base+0x8e>
   1bfc8:	ldr	r2, [r4, #0]
   1bfca:	ldr	r3, [r4, #32]
   1bfcc:	ldr.w	r2, [r2, #192]	; 0xc0
   1bfd0:	cmp	r3, r2
   1bfd2:	bne.n	1bf84 <btrfs_search_slot_for_read@@Base+0x38>
   1bfd4:	subs	r3, #1
   1bfd6:	str	r3, [r4, #32]
   1bfd8:	b.n	1bf86 <btrfs_search_slot_for_read@@Base+0x3a>
   1bfda:	cmp.w	r8, #0
   1bfde:	beq.n	1bfa4 <btrfs_search_slot_for_read@@Base+0x58>
   1bfe0:	mov	r0, r4
   1bfe2:	mov.w	r9, #1
   1bfe6:	bl	18558 <btrfs_release_path@@Base>
   1bfea:	b.n	1bfb2 <btrfs_search_slot_for_read@@Base+0x66>
   1bfec:	subs	r3, #1
   1bfee:	mov	r0, r9
   1bff0:	str	r3, [r4, #32]
   1bff2:	b.n	1bf86 <btrfs_search_slot_for_read@@Base+0x3a>

0001bff4 <btrfs_previous_item@@Base>:
   1bff4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1bff8:	mov	r6, r2
   1bffa:	ldr	r2, [pc, #144]	; (1c08c <btrfs_previous_item@@Base+0x98>)
   1bffc:	mov	r7, r3
   1bffe:	ldr	r3, [pc, #144]	; (1c090 <btrfs_previous_item@@Base+0x9c>)
   1c000:	sub	sp, #28
   1c002:	add	r2, pc
   1c004:	mov	r5, r0
   1c006:	ldr.w	r8, [sp, #56]	; 0x38
   1c00a:	mov	r4, r1
   1c00c:	ldr	r3, [r2, r3]
   1c00e:	mov	r9, sp
   1c010:	ldr	r3, [r3, #0]
   1c012:	str	r3, [sp, #20]
   1c014:	mov.w	r3, #0
   1c018:	ldr	r3, [r4, #32]
   1c01a:	cbnz	r3, 1c03a <btrfs_previous_item@@Base+0x46>
   1c01c:	mov	r1, r4
   1c01e:	mov	r0, r5
   1c020:	bl	1bce8 <btrfs_prev_leaf@@Base>
   1c024:	cbz	r0, 1c03e <btrfs_previous_item@@Base+0x4a>
   1c026:	ldr	r2, [pc, #108]	; (1c094 <btrfs_previous_item@@Base+0xa0>)
   1c028:	ldr	r3, [pc, #100]	; (1c090 <btrfs_previous_item@@Base+0x9c>)
   1c02a:	add	r2, pc
   1c02c:	ldr	r3, [r2, r3]
   1c02e:	ldr	r2, [r3, #0]
   1c030:	ldr	r3, [sp, #20]
   1c032:	eors	r2, r3
   1c034:	beq.n	1c084 <btrfs_previous_item@@Base+0x90>
   1c036:	blx	8708 <__stack_chk_fail@plt>
   1c03a:	subs	r3, #1
   1c03c:	str	r3, [r4, #32]
   1c03e:	ldr	r0, [r4, #0]
   1c040:	ldr.w	r2, [r0, #192]	; 0xc0
   1c044:	cbnz	r2, 1c04a <btrfs_previous_item@@Base+0x56>
   1c046:	movs	r0, #1
   1c048:	b.n	1c026 <btrfs_previous_item@@Base+0x32>
   1c04a:	ldr	r3, [r4, #32]
   1c04c:	mov	r1, r9
   1c04e:	cmp	r3, r2
   1c050:	itt	eq
   1c052:	addeq.w	r3, r3, #4294967295	; 0xffffffff
   1c056:	streq	r3, [r4, #32]
   1c058:	ldr	r2, [r4, #32]
   1c05a:	bl	184b0 <rb_free_nodes@@Base+0x4b2>
   1c05e:	ldrd	r0, r1, [sp]
   1c062:	cmp	r1, r7
   1c064:	it	eq
   1c066:	cmpeq	r0, r6
   1c068:	bcc.n	1c046 <btrfs_previous_item@@Base+0x52>
   1c06a:	ldrb.w	r3, [sp, #8]
   1c06e:	cmp	r3, r8
   1c070:	beq.n	1c080 <btrfs_previous_item@@Base+0x8c>
   1c072:	cmp	r1, r7
   1c074:	it	eq
   1c076:	cmpeq	r0, r6
   1c078:	bne.n	1c018 <btrfs_previous_item@@Base+0x24>
   1c07a:	cmp	r3, r8
   1c07c:	bge.n	1c018 <btrfs_previous_item@@Base+0x24>
   1c07e:	b.n	1c046 <btrfs_previous_item@@Base+0x52>
   1c080:	movs	r0, #0
   1c082:	b.n	1c026 <btrfs_previous_item@@Base+0x32>
   1c084:	add	sp, #28
   1c086:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1c08a:	nop
   1c08c:	ldrh	r6, [r7, #42]	; 0x2a
   1c08e:	movs	r4, r0
   1c090:	lsls	r0, r5, #8
   1c092:	movs	r0, r0
   1c094:	ldrh	r6, [r2, #42]	; 0x2a
   1c096:	movs	r4, r0

0001c098 <btrfs_previous_extent_item@@Base>:
   1c098:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c09c:	mov	r6, r2
   1c09e:	ldr	r2, [pc, #144]	; (1c130 <btrfs_previous_extent_item@@Base+0x98>)
   1c0a0:	mov	r7, r3
   1c0a2:	ldr	r3, [pc, #144]	; (1c134 <btrfs_previous_extent_item@@Base+0x9c>)
   1c0a4:	sub	sp, #24
   1c0a6:	add	r2, pc
   1c0a8:	mov	r5, r0
   1c0aa:	mov	r4, r1
   1c0ac:	mov	r8, sp
   1c0ae:	ldr	r3, [r2, r3]
   1c0b0:	ldr	r3, [r3, #0]
   1c0b2:	str	r3, [sp, #20]
   1c0b4:	mov.w	r3, #0
   1c0b8:	ldr	r3, [r4, #32]
   1c0ba:	cbnz	r3, 1c0da <btrfs_previous_extent_item@@Base+0x42>
   1c0bc:	mov	r1, r4
   1c0be:	mov	r0, r5
   1c0c0:	bl	1bce8 <btrfs_prev_leaf@@Base>
   1c0c4:	cbz	r0, 1c0de <btrfs_previous_extent_item@@Base+0x46>
   1c0c6:	ldr	r2, [pc, #112]	; (1c138 <btrfs_previous_extent_item@@Base+0xa0>)
   1c0c8:	ldr	r3, [pc, #104]	; (1c134 <btrfs_previous_extent_item@@Base+0x9c>)
   1c0ca:	add	r2, pc
   1c0cc:	ldr	r3, [r2, r3]
   1c0ce:	ldr	r2, [r3, #0]
   1c0d0:	ldr	r3, [sp, #20]
   1c0d2:	eors	r2, r3
   1c0d4:	beq.n	1c12a <btrfs_previous_extent_item@@Base+0x92>
   1c0d6:	blx	8708 <__stack_chk_fail@plt>
   1c0da:	subs	r3, #1
   1c0dc:	str	r3, [r4, #32]
   1c0de:	ldr	r0, [r4, #0]
   1c0e0:	ldr.w	r2, [r0, #192]	; 0xc0
   1c0e4:	cbnz	r2, 1c0ea <btrfs_previous_extent_item@@Base+0x52>
   1c0e6:	movs	r0, #1
   1c0e8:	b.n	1c0c6 <btrfs_previous_extent_item@@Base+0x2e>
   1c0ea:	ldr	r3, [r4, #32]
   1c0ec:	mov	r1, r8
   1c0ee:	cmp	r3, r2
   1c0f0:	itt	eq
   1c0f2:	addeq.w	r3, r3, #4294967295	; 0xffffffff
   1c0f6:	streq	r3, [r4, #32]
   1c0f8:	ldr	r2, [r4, #32]
   1c0fa:	bl	184b0 <rb_free_nodes@@Base+0x4b2>
   1c0fe:	ldrd	r0, r1, [sp]
   1c102:	cmp	r1, r7
   1c104:	it	eq
   1c106:	cmpeq	r0, r6
   1c108:	bcc.n	1c0e6 <btrfs_previous_extent_item@@Base+0x4e>
   1c10a:	ldrb.w	r2, [sp, #8]
   1c10e:	add.w	r3, r2, #88	; 0x58
   1c112:	uxtb	r3, r3
   1c114:	cmp	r3, #1
   1c116:	bls.n	1c126 <btrfs_previous_extent_item@@Base+0x8e>
   1c118:	cmp	r1, r7
   1c11a:	it	eq
   1c11c:	cmpeq	r0, r6
   1c11e:	bne.n	1c0b8 <btrfs_previous_extent_item@@Base+0x20>
   1c120:	cmp	r2, #167	; 0xa7
   1c122:	bhi.n	1c0b8 <btrfs_previous_extent_item@@Base+0x20>
   1c124:	b.n	1c0e6 <btrfs_previous_extent_item@@Base+0x4e>
   1c126:	movs	r0, #0
   1c128:	b.n	1c0c6 <btrfs_previous_extent_item@@Base+0x2e>
   1c12a:	add	sp, #24
   1c12c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1c130:	ldrh	r2, [r3, #38]	; 0x26
   1c132:	movs	r4, r0
   1c134:	lsls	r0, r5, #8
   1c136:	movs	r0, r0
   1c138:	ldrh	r6, [r6, #36]	; 0x24
   1c13a:	movs	r4, r0

0001c13c <btrfs_next_extent_item@@Base>:
   1c13c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1c140:	mov	r6, r2
   1c142:	ldr	r2, [pc, #132]	; (1c1c8 <btrfs_next_extent_item@@Base+0x8c>)
   1c144:	mov	r7, r3
   1c146:	ldr	r3, [pc, #132]	; (1c1cc <btrfs_next_extent_item@@Base+0x90>)
   1c148:	sub	sp, #28
   1c14a:	add	r2, pc
   1c14c:	mov	r5, r0
   1c14e:	mov	r4, r1
   1c150:	mov.w	r8, #0
   1c154:	ldr	r3, [r2, r3]
   1c156:	mov	r9, sp
   1c158:	ldr	r3, [r3, #0]
   1c15a:	str	r3, [sp, #20]
   1c15c:	mov.w	r3, #0
   1c160:	ldr	r2, [r4, #0]
   1c162:	ldr	r3, [r4, #32]
   1c164:	adds	r3, #1
   1c166:	str	r3, [r4, #32]
   1c168:	ldr.w	r2, [r2, #192]	; 0xc0
   1c16c:	cmp	r3, r2
   1c16e:	bcs.n	1c18a <btrfs_next_extent_item@@Base+0x4e>
   1c170:	ldr	r2, [r4, #32]
   1c172:	mov	r1, r9
   1c174:	ldr	r0, [r4, #0]
   1c176:	bl	184b0 <rb_free_nodes@@Base+0x4b2>
   1c17a:	ldrd	r2, r3, [sp]
   1c17e:	cmp	r7, r3
   1c180:	it	eq
   1c182:	cmpeq	r6, r2
   1c184:	bcs.n	1c1b0 <btrfs_next_extent_item@@Base+0x74>
   1c186:	movs	r0, #1
   1c188:	b.n	1c19c <btrfs_next_extent_item@@Base+0x60>
   1c18a:	strb.w	r8, [r4, #65]	; 0x41
   1c18e:	mov	r1, r4
   1c190:	ldr.w	r0, [r5, #464]	; 0x1d0
   1c194:	bl	1bd70 <btrfs_next_sibling_tree_block@@Base>
   1c198:	cmp	r0, #0
   1c19a:	beq.n	1c170 <btrfs_next_extent_item@@Base+0x34>
   1c19c:	ldr	r2, [pc, #48]	; (1c1d0 <btrfs_next_extent_item@@Base+0x94>)
   1c19e:	ldr	r3, [pc, #44]	; (1c1cc <btrfs_next_extent_item@@Base+0x90>)
   1c1a0:	add	r2, pc
   1c1a2:	ldr	r3, [r2, r3]
   1c1a4:	ldr	r2, [r3, #0]
   1c1a6:	ldr	r3, [sp, #20]
   1c1a8:	eors	r2, r3
   1c1aa:	beq.n	1c1c0 <btrfs_next_extent_item@@Base+0x84>
   1c1ac:	blx	8708 <__stack_chk_fail@plt>
   1c1b0:	ldrb.w	r3, [sp, #8]
   1c1b4:	adds	r3, #88	; 0x58
   1c1b6:	uxtb	r3, r3
   1c1b8:	cmp	r3, #1
   1c1ba:	bhi.n	1c160 <btrfs_next_extent_item@@Base+0x24>
   1c1bc:	movs	r0, #0
   1c1be:	b.n	1c19c <btrfs_next_extent_item@@Base+0x60>
   1c1c0:	add	sp, #28
   1c1c2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1c1c6:	nop
   1c1c8:	ldrh	r6, [r6, #32]
   1c1ca:	movs	r4, r0
   1c1cc:	lsls	r0, r5, #8
   1c1ce:	movs	r0, r0
   1c1d0:	ldrh	r0, [r4, #30]
   1c1d2:	movs	r4, r0

0001c1d4 <btrfs_uuid_tree_add@@Base>:
   1c1d4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c1d8:	mov	sl, r2
   1c1da:	ldr	r2, [pc, #408]	; (1c374 <btrfs_uuid_tree_add@@Base+0x1a0>)
   1c1dc:	sub	sp, #60	; 0x3c
   1c1de:	ldr	r3, [pc, #408]	; (1c378 <btrfs_uuid_tree_add@@Base+0x1a4>)
   1c1e0:	mov	r8, r0
   1c1e2:	add	r2, pc
   1c1e4:	mov	r9, r1
   1c1e6:	ldr	r3, [r2, r3]
   1c1e8:	ldr	r3, [r3, #0]
   1c1ea:	str	r3, [sp, #52]	; 0x34
   1c1ec:	mov.w	r3, #0
   1c1f0:	ldr	r3, [r0, #0]
   1c1f2:	ldr	r7, [r3, #52]	; 0x34
   1c1f4:	cbnz	r7, 1c220 <btrfs_uuid_tree_add@@Base+0x4c>
   1c1f6:	ldr	r1, [pc, #388]	; (1c37c <btrfs_uuid_tree_add@@Base+0x1a8>)
   1c1f8:	mvn.w	r4, #21
   1c1fc:	ldr	r0, [pc, #384]	; (1c380 <btrfs_uuid_tree_add@@Base+0x1ac>)
   1c1fe:	add	r1, pc
   1c200:	add.w	r1, r1, #510	; 0x1fe
   1c204:	add	r0, pc
   1c206:	bl	17b00 <__btrfs_warning@@Base>
   1c20a:	ldr	r2, [pc, #376]	; (1c384 <btrfs_uuid_tree_add@@Base+0x1b0>)
   1c20c:	ldr	r3, [pc, #360]	; (1c378 <btrfs_uuid_tree_add@@Base+0x1a4>)
   1c20e:	add	r2, pc
   1c210:	ldr	r3, [r2, r3]
   1c212:	ldr	r2, [r3, #0]
   1c214:	ldr	r3, [sp, #52]	; 0x34
   1c216:	eors	r2, r3
   1c218:	beq.w	1c36c <btrfs_uuid_tree_add@@Base+0x198>
   1c21c:	blx	8708 <__stack_chk_fail@plt>
   1c220:	bl	18550 <btrfs_alloc_path@@Base>
   1c224:	mov	r5, r0
   1c226:	cmp	r0, #0
   1c228:	beq.n	1c2a6 <btrfs_uuid_tree_add@@Base+0xd2>
   1c22a:	add	r2, sp, #32
   1c22c:	mov	r0, r9
   1c22e:	str	r2, [sp, #16]
   1c230:	mov	r1, r2
   1c232:	bl	17cf0 <btrfs_uuid_to_key@@Base>
   1c236:	movs	r0, #0
   1c238:	ldr	r2, [sp, #16]
   1c23a:	mov	r3, r5
   1c23c:	mov	r1, r7
   1c23e:	strd	r0, r0, [sp]
   1c242:	strb.w	sl, [sp, #40]	; 0x28
   1c246:	bl	1a93c <btrfs_search_slot@@Base>
   1c24a:	subs	r4, r0, #0
   1c24c:	blt.n	1c2aa <btrfs_uuid_tree_add@@Base+0xd6>
   1c24e:	bne.n	1c2a0 <btrfs_uuid_tree_add@@Base+0xcc>
   1c250:	ldr	r0, [r5, #0]
   1c252:	movs	r2, #25
   1c254:	ldr	r3, [r5, #32]
   1c256:	mla	r3, r2, r3, r0
   1c25a:	ldr.w	r6, [r3, #218]	; 0xda
   1c25e:	ldr.w	fp, [r3, #214]	; 0xd6
   1c262:	lsls	r2, r6, #29
   1c264:	add.w	fp, fp, #101	; 0x65
   1c268:	bne.n	1c296 <btrfs_uuid_tree_add@@Base+0xc2>
   1c26a:	add	r1, sp, #24
   1c26c:	cbz	r6, 1c2a0 <btrfs_uuid_tree_add@@Base+0xcc>
   1c26e:	movs	r3, #8
   1c270:	mov	r2, fp
   1c272:	strd	r0, r1, [sp, #16]
   1c276:	bl	17a1a <read_extent_buffer@@Base>
   1c27a:	ldrd	r2, r3, [sp, #24]
   1c27e:	ldrd	r0, r1, [sp, #96]	; 0x60
   1c282:	cmp	r1, r3
   1c284:	it	eq
   1c286:	cmpeq	r0, r2
   1c288:	beq.n	1c2aa <btrfs_uuid_tree_add@@Base+0xd6>
   1c28a:	ldrd	r0, r1, [sp, #16]
   1c28e:	add.w	fp, fp, #8
   1c292:	subs	r6, #8
   1c294:	b.n	1c26c <btrfs_uuid_tree_add@@Base+0x98>
   1c296:	ldr	r0, [pc, #240]	; (1c388 <btrfs_uuid_tree_add@@Base+0x1b4>)
   1c298:	mov	r1, r6
   1c29a:	add	r0, pc
   1c29c:	bl	17b00 <__btrfs_warning@@Base>
   1c2a0:	mvn.w	r4, #1
   1c2a4:	b.n	1c2aa <btrfs_uuid_tree_add@@Base+0xd6>
   1c2a6:	mvn.w	r4, #11
   1c2aa:	mov	r0, r5
   1c2ac:	bl	1857e <btrfs_free_path@@Base>
   1c2b0:	adds	r3, r4, #2
   1c2b2:	bne.n	1c20a <btrfs_uuid_tree_add@@Base+0x36>
   1c2b4:	add	r3, sp, #32
   1c2b6:	mov	r0, r9
   1c2b8:	str	r3, [sp, #16]
   1c2ba:	mov	r1, r3
   1c2bc:	strb.w	sl, [sp, #40]	; 0x28
   1c2c0:	bl	17cf0 <btrfs_uuid_to_key@@Base>
   1c2c4:	bl	18550 <btrfs_alloc_path@@Base>
   1c2c8:	mov	r5, r0
   1c2ca:	cmp	r0, #0
   1c2cc:	beq.n	1c366 <btrfs_uuid_tree_add@@Base+0x192>
   1c2ce:	movs	r2, #1
   1c2d0:	ldr	r3, [sp, #16]
   1c2d2:	str	r2, [sp, #4]
   1c2d4:	add	r6, sp, #24
   1c2d6:	mov	r2, r0
   1c2d8:	mov	r1, r7
   1c2da:	mov	r0, r8
   1c2dc:	str	r6, [sp, #0]
   1c2de:	mov.w	r9, #8
   1c2e2:	str.w	r9, [sp, #24]
   1c2e6:	bl	1b70c <btrfs_insert_empty_items@@Base>
   1c2ea:	subs	r4, r0, #0
   1c2ec:	blt.n	1c31a <btrfs_uuid_tree_add@@Base+0x146>
   1c2ee:	ldr	r4, [r5, #0]
   1c2f0:	movs	r2, #25
   1c2f2:	ldr	r3, [r5, #32]
   1c2f4:	mla	r3, r2, r3, r4
   1c2f8:	ldr.w	r2, [r3, #214]	; 0xd6
   1c2fc:	adds	r2, #101	; 0x65
   1c2fe:	ldrd	r0, r1, [sp, #96]	; 0x60
   1c302:	movs	r3, #8
   1c304:	strd	r0, r1, [sp, #24]
   1c308:	mov	r0, r4
   1c30a:	mov	r1, r6
   1c30c:	bl	17a30 <write_extent_buffer@@Base>
   1c310:	mov	r0, r4
   1c312:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   1c316:	movs	r4, #0
   1c318:	b.n	1c35e <btrfs_uuid_tree_add@@Base+0x18a>
   1c31a:	cmn.w	r4, #17
   1c31e:	bne.n	1c342 <btrfs_uuid_tree_add@@Base+0x16e>
   1c320:	mov	r2, r9
   1c322:	mov	r1, r5
   1c324:	mov	r0, r7
   1c326:	bl	1a730 <btrfs_extend_item@@Base>
   1c32a:	ldr	r4, [r5, #0]
   1c32c:	ldr	r3, [r5, #32]
   1c32e:	movs	r2, #25
   1c330:	mla	r3, r2, r3, r4
   1c334:	ldr.w	r2, [r3, #218]	; 0xda
   1c338:	ldr.w	r3, [r3, #214]	; 0xd6
   1c33c:	add	r2, r3
   1c33e:	adds	r2, #93	; 0x5d
   1c340:	b.n	1c2fe <btrfs_uuid_tree_add@@Base+0x12a>
   1c342:	ldr.w	r2, [sp, #41]	; 0x29
   1c346:	ldr.w	r3, [sp, #45]	; 0x2d
   1c34a:	ldr	r0, [pc, #64]	; (1c38c <btrfs_uuid_tree_add@@Base+0x1b8>)
   1c34c:	strd	sl, r4, [sp, #8]
   1c350:	strd	r2, r3, [sp]
   1c354:	add	r0, pc
   1c356:	ldrd	r2, r3, [sp, #32]
   1c35a:	bl	17b00 <__btrfs_warning@@Base>
   1c35e:	mov	r0, r5
   1c360:	bl	1857e <btrfs_free_path@@Base>
   1c364:	b.n	1c20a <btrfs_uuid_tree_add@@Base+0x36>
   1c366:	mvn.w	r4, #11
   1c36a:	b.n	1c35e <btrfs_uuid_tree_add@@Base+0x18a>
   1c36c:	mov	r0, r4
   1c36e:	add	sp, #60	; 0x3c
   1c370:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c374:	ldrh	r6, [r3, #28]
   1c376:	movs	r4, r0
   1c378:	lsls	r0, r5, #8
   1c37a:	movs	r0, r0
   1c37c:	lsrs	r6, r0, #21
   1c37e:	movs	r2, r0
   1c380:	lsrs	r7, r7, #18
   1c382:	movs	r2, r0
   1c384:	ldrh	r2, [r6, #26]
   1c386:	movs	r4, r0
   1c388:	lsrs	r2, r1, #17
   1c38a:	movs	r2, r0
   1c38c:	lsrs	r1, r6, #14
   1c38e:	movs	r2, r0
   1c390:	push	{r4, r5, lr}
   1c392:	ldrd	r4, r5, [r1]
   1c396:	ldrd	r2, r3, [r0, #-56]	; 0x38
   1c39a:	cmp	r3, r5
   1c39c:	it	eq
   1c39e:	cmpeq	r2, r4
   1c3a0:	bcc.n	1c3b2 <btrfs_uuid_tree_add@@Base+0x1de>
   1c3a2:	cmp	r5, r3
   1c3a4:	it	eq
   1c3a6:	cmpeq	r4, r2
   1c3a8:	ite	cc
   1c3aa:	movcc.w	r0, #4294967295	; 0xffffffff
   1c3ae:	movcs	r0, #0
   1c3b0:	pop	{r4, r5, pc}
   1c3b2:	movs	r0, #1
   1c3b4:	b.n	1c3b0 <btrfs_uuid_tree_add@@Base+0x1dc>

0001c3b6 <btrfs_fs_roots_compare_roots@@Base>:
   1c3b6:	subs	r1, #56	; 0x38
   1c3b8:	b.n	1c390 <btrfs_uuid_tree_add@@Base+0x1bc>
   1c3ba:	movs	r2, #0
   1c3bc:	addw	r3, r0, #2859	; 0xb2b
   1c3c0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1c3c4:	mov.w	r8, #0
   1c3c8:	ldr	r6, [r0, #72]	; 0x48
   1c3ca:	mov.w	r9, #0
   1c3ce:	ldr	r7, [r0, #76]	; 0x4c
   1c3d0:	mov	r0, r2
   1c3d2:	ldr	r5, [r3, #12]
   1c3d4:	ldr	r4, [r3, #8]
   1c3d6:	cmp	r5, r7
   1c3d8:	it	eq
   1c3da:	cmpeq	r4, r6
   1c3dc:	beq.n	1c3ec <btrfs_fs_roots_compare_roots@@Base+0x36>
   1c3de:	cmp	r9, r5
   1c3e0:	it	eq
   1c3e2:	cmpeq	r8, r4
   1c3e4:	ittt	cc
   1c3e6:	movcc	r0, r2
   1c3e8:	movcc	r8, r4
   1c3ea:	movcc	r9, r5
   1c3ec:	adds	r2, #1
   1c3ee:	adds	r3, #168	; 0xa8
   1c3f0:	cmp	r2, #4
   1c3f2:	bne.n	1c3d2 <btrfs_fs_roots_compare_roots@@Base+0x1c>
   1c3f4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1c3f8:	ldr	r2, [pc, #60]	; (1c438 <btrfs_fs_roots_compare_roots@@Base+0x82>)
   1c3fa:	movs	r1, #16
   1c3fc:	ldr	r3, [pc, #60]	; (1c43c <btrfs_fs_roots_compare_roots@@Base+0x86>)
   1c3fe:	push	{r4, lr}
   1c400:	add	r2, pc
   1c402:	sub	sp, #72	; 0x48
   1c404:	add	r4, sp, #4
   1c406:	ldr	r3, [r2, r3]
   1c408:	mov	r0, r4
   1c40a:	ldr	r3, [r3, #0]
   1c40c:	str	r3, [sp, #68]	; 0x44
   1c40e:	mov.w	r3, #0
   1c412:	blx	88bc <backtrace@plt>
   1c416:	movs	r2, #2
   1c418:	mov	r1, r0
   1c41a:	mov	r0, r4
   1c41c:	blx	8bcc <backtrace_symbols_fd@plt>
   1c420:	ldr	r2, [pc, #28]	; (1c440 <btrfs_fs_roots_compare_roots@@Base+0x8a>)
   1c422:	ldr	r3, [pc, #24]	; (1c43c <btrfs_fs_roots_compare_roots@@Base+0x86>)
   1c424:	add	r2, pc
   1c426:	ldr	r3, [r2, r3]
   1c428:	ldr	r2, [r3, #0]
   1c42a:	ldr	r3, [sp, #68]	; 0x44
   1c42c:	eors	r2, r3
   1c42e:	beq.n	1c434 <btrfs_fs_roots_compare_roots@@Base+0x7e>
   1c430:	blx	8708 <__stack_chk_fail@plt>
   1c434:	add	sp, #72	; 0x48
   1c436:	pop	{r4, pc}
   1c438:	ldrh	r0, [r0, #12]
   1c43a:	movs	r4, r0
   1c43c:	lsls	r0, r5, #8
   1c43e:	movs	r0, r0
   1c440:	ldrh	r4, [r3, #10]
   1c442:	movs	r4, r0
   1c444:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c448:	mov	r5, r0
   1c44a:	ldr.w	sl, [r1, #144]	; 0x90
   1c44e:	mov	r4, r1
   1c450:	ldr.w	fp, [r1, #148]	; 0x94
   1c454:	ldr.w	r8, [r0, #352]	; 0x160
   1c458:	ldr.w	r2, [r0, #384]	; 0x180
   1c45c:	ldrd	r0, r1, [r1, #40]	; 0x28
   1c460:	cmp	r1, fp
   1c462:	it	eq
   1c464:	cmpeq	r0, sl
   1c466:	bne.n	1c4f0 <btrfs_fs_roots_compare_roots@@Base+0x13a>
   1c468:	ldrb.w	r1, [r4, #196]	; 0xc4
   1c46c:	cmp	r1, #7
   1c46e:	bhi.n	1c4f6 <btrfs_fs_roots_compare_roots@@Base+0x140>
   1c470:	ldr.w	r0, [r4, #192]	; 0xc0
   1c474:	subs	r2, #101	; 0x65
   1c476:	cbnz	r1, 1c48e <btrfs_fs_roots_compare_roots@@Base+0xd8>
   1c478:	ldr	r3, [pc, #136]	; (1c504 <btrfs_fs_roots_compare_roots@@Base+0x14e>)
   1c47a:	umull	r2, r3, r2, r3
   1c47e:	lsrs	r3, r3, #3
   1c480:	cmp	r0, r3
   1c482:	bhi.n	1c488 <btrfs_fs_roots_compare_roots@@Base+0xd2>
   1c484:	cbnz	r0, 1c4ea <btrfs_fs_roots_compare_roots@@Base+0x134>
   1c486:	cbz	r1, 1c4ea <btrfs_fs_roots_compare_roots@@Base+0x134>
   1c488:	mvn.w	r0, #3
   1c48c:	b.n	1c4de <btrfs_fs_roots_compare_roots@@Base+0x128>
   1c48e:	ldr	r3, [pc, #120]	; (1c508 <btrfs_fs_roots_compare_roots@@Base+0x152>)
   1c490:	b.n	1c47a <btrfs_fs_roots_compare_roots@@Base+0xc4>
   1c492:	ldr.w	r3, [r5, #352]	; 0x160
   1c496:	cmp	r3, r8
   1c498:	bne.n	1c4e2 <btrfs_fs_roots_compare_roots@@Base+0x12c>
   1c49a:	ldr.w	r3, [r5, #308]	; 0x134
   1c49e:	mov	r7, r9
   1c4a0:	ldr.w	r3, [r3, #188]	; 0xbc
   1c4a4:	and.w	r6, r3, #1024	; 0x400
   1c4a8:	orrs.w	r3, r6, r7
   1c4ac:	beq.n	1c4e2 <btrfs_fs_roots_compare_roots@@Base+0x12c>
   1c4ae:	movs	r3, #16
   1c4b0:	add.w	r1, r8, r3
   1c4b4:	movs	r2, #32
   1c4b6:	mov	r0, r4
   1c4b8:	bl	17a08 <memcmp_extent_buffer@@Base>
   1c4bc:	ldrb.w	r3, [r5, #364]	; 0x16c
   1c4c0:	ands.w	r3, r3, #64	; 0x40
   1c4c4:	clz	r0, r0
   1c4c8:	mov.w	r0, r0, lsr #5
   1c4cc:	bne.n	1c4fc <btrfs_fs_roots_compare_roots@@Base+0x146>
   1c4ce:	cbnz	r0, 1c500 <btrfs_fs_roots_compare_roots@@Base+0x14a>
   1c4d0:	ldr.w	r8, [r8, #92]	; 0x5c
   1c4d4:	cmp.w	r8, #0
   1c4d8:	bne.n	1c492 <btrfs_fs_roots_compare_roots@@Base+0xdc>
   1c4da:	mvn.w	r0, #1
   1c4de:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c4e2:	movs	r3, #16
   1c4e4:	movs	r2, #32
   1c4e6:	mov	r1, r8
   1c4e8:	b.n	1c4b6 <btrfs_fs_roots_compare_roots@@Base+0x100>
   1c4ea:	mov.w	r9, #0
   1c4ee:	b.n	1c4d4 <btrfs_fs_roots_compare_roots@@Base+0x11e>
   1c4f0:	mov.w	r0, #4294967295	; 0xffffffff
   1c4f4:	b.n	1c4de <btrfs_fs_roots_compare_roots@@Base+0x128>
   1c4f6:	mvn.w	r0, #2
   1c4fa:	b.n	1c4de <btrfs_fs_roots_compare_roots@@Base+0x128>
   1c4fc:	movs	r0, #0
   1c4fe:	b.n	1c4de <btrfs_fs_roots_compare_roots@@Base+0x128>
   1c500:	mov	r0, r3
   1c502:	b.n	1c4de <btrfs_fs_roots_compare_roots@@Base+0x128>
   1c504:	strh	r7, [r3, #40]	; 0x28
   1c506:	str	r3, [r5, r7]
   1c508:	strh	r1, [r4, #30]
   1c50a:	subs	r6, #15
   1c50c:	b.w	861c <free@plt>
   1c510:	cbz	r0, 1c522 <btrfs_fs_roots_compare_roots@@Base+0x16c>
   1c512:	cmn.w	r0, #4096	; 0x1000
   1c516:	bhi.n	1c520 <btrfs_fs_roots_compare_roots@@Base+0x16a>
   1c518:	ldr	r0, [r0, #84]	; 0x54
   1c51a:	ubfx	r0, r0, #2, #1
   1c51e:	bx	lr
   1c520:	movs	r0, #0
   1c522:	bx	lr
   1c524:	push	{r4, r5, r6, r7, lr}
   1c526:	mov	r1, r3
   1c528:	ldr	r6, [pc, #100]	; (1c590 <btrfs_fs_roots_compare_roots@@Base+0x1da>)
   1c52a:	sub	sp, #28
   1c52c:	mov	r4, r0
   1c52e:	mov	r0, r2
   1c530:	orrs.w	r3, r0, r1
   1c534:	add	r6, pc
   1c536:	ldr	r5, [sp, #48]	; 0x30
   1c538:	beq.n	1c57e <btrfs_fs_roots_compare_roots@@Base+0x1c8>
   1c53a:	ldr.w	r3, [r4, #180]	; 0xb4
   1c53e:	ldr.w	r2, [r4, #176]	; 0xb0
   1c542:	cmp	r1, r3
   1c544:	it	eq
   1c546:	cmpeq	r0, r2
   1c548:	beq.n	1c57e <btrfs_fs_roots_compare_roots@@Base+0x1c8>
   1c54a:	ldr	r7, [pc, #72]	; (1c594 <btrfs_fs_roots_compare_roots@@Base+0x1de>)
   1c54c:	ldr	r6, [r6, r7]
   1c54e:	strd	r2, r3, [sp, #16]
   1c552:	ldrd	r2, r3, [r4, #40]	; 0x28
   1c556:	strd	r0, r1, [sp, #8]
   1c55a:	movs	r1, #1
   1c55c:	strd	r2, r3, [sp]
   1c560:	ldr	r2, [pc, #52]	; (1c598 <btrfs_fs_roots_compare_roots@@Base+0x1e2>)
   1c562:	ldr	r0, [r6, #0]
   1c564:	add	r2, pc
   1c566:	blx	8a64 <__fprintf_chk@plt+0x4>
   1c56a:	ldr	r3, [r4, #84]	; 0x54
   1c56c:	cbz	r5, 1c582 <btrfs_fs_roots_compare_roots@@Base+0x1cc>
   1c56e:	ldr	r0, [pc, #44]	; (1c59c <btrfs_fs_roots_compare_roots@@Base+0x1e6>)
   1c570:	orr.w	r3, r3, #1024	; 0x400
   1c574:	ldr	r1, [r6, #0]
   1c576:	add	r0, pc
   1c578:	str	r3, [r4, #84]	; 0x54
   1c57a:	blx	8b6c <fputs@plt+0x4>
   1c57e:	movs	r0, #0
   1c580:	b.n	1c58a <btrfs_fs_roots_compare_roots@@Base+0x1d4>
   1c582:	movs	r0, #1
   1c584:	bic.w	r3, r3, #4
   1c588:	str	r3, [r4, #84]	; 0x54
   1c58a:	add	sp, #28
   1c58c:	pop	{r4, r5, r6, r7, pc}
   1c58e:	nop
   1c590:	ldrh	r4, [r1, #2]
   1c592:	movs	r4, r0
   1c594:	lsls	r0, r7, #8
   1c596:	movs	r0, r0
   1c598:	lsrs	r2, r6, #15
   1c59a:	movs	r2, r0
   1c59c:	lsrs	r5, r3, #16
   1c59e:	movs	r2, r0
   1c5a0:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c5a4:	mov	r5, r2
   1c5a6:	ldr	r2, [pc, #244]	; (1c69c <btrfs_fs_roots_compare_roots@@Base+0x2e6>)
   1c5a8:	sub	sp, #128	; 0x80
   1c5aa:	ldr	r3, [pc, #244]	; (1c6a0 <btrfs_fs_roots_compare_roots@@Base+0x2ea>)
   1c5ac:	movs	r6, #0
   1c5ae:	add	r2, pc
   1c5b0:	ldr.w	r8, [pc, #240]	; 1c6a4 <btrfs_fs_roots_compare_roots@@Base+0x2ee>
   1c5b4:	mov	r7, r0
   1c5b6:	mov	r4, r1
   1c5b8:	ldr	r3, [r2, r3]
   1c5ba:	mov	r1, r6
   1c5bc:	add	r0, sp, #48	; 0x30
   1c5be:	movs	r2, #33	; 0x21
   1c5c0:	ldr	r3, [r3, #0]
   1c5c2:	str	r3, [sp, #124]	; 0x7c
   1c5c4:	mov.w	r3, #0
   1c5c8:	str	r6, [sp, #44]	; 0x2c
   1c5ca:	blx	89bc <memset@plt+0x4>
   1c5ce:	add	r0, sp, #88	; 0x58
   1c5d0:	movs	r2, #33	; 0x21
   1c5d2:	mov	r1, r6
   1c5d4:	add	r8, pc
   1c5d6:	str	r6, [sp, #84]	; 0x54
   1c5d8:	blx	89bc <memset@plt+0x4>
   1c5dc:	cmp	r5, #0
   1c5de:	beq.n	1c660 <btrfs_fs_roots_compare_roots@@Base+0x2aa>
   1c5e0:	ldr	r3, [pc, #196]	; (1c6a8 <btrfs_fs_roots_compare_roots@@Base+0x2f2>)
   1c5e2:	movs	r1, #1
   1c5e4:	adds	r5, #4
   1c5e6:	ldr.w	r6, [r8, r3]
   1c5ea:	ldrd	r2, r3, [r4, #40]	; 0x28
   1c5ee:	strd	r2, r3, [sp]
   1c5f2:	ldr	r2, [pc, #184]	; (1c6ac <btrfs_fs_roots_compare_roots@@Base+0x2f6>)
   1c5f4:	ldr	r0, [r6, #0]
   1c5f6:	add	r2, pc
   1c5f8:	blx	8a64 <__fprintf_chk@plt+0x4>
   1c5fc:	cmp	r5, #3
   1c5fe:	bhi.n	1c660 <btrfs_fs_roots_compare_roots@@Base+0x2aa>
   1c600:	tbb	[pc, r5]
   1c604:	subs	r0, #63	; 0x3f
   1c606:	subs	r2, r0, #0
   1c608:	add	r5, sp, #28
   1c60a:	mov	r0, r4
   1c60c:	add	r4, sp, #84	; 0x54
   1c60e:	movs	r2, #32
   1c610:	movs	r3, #16
   1c612:	mov	r1, r5
   1c614:	bl	17a1a <read_extent_buffer@@Base>
   1c618:	mov	r1, r4
   1c61a:	mov	r0, r5
   1c61c:	blx	85c4 <uuid_unparse@plt>
   1c620:	add	r3, sp, #44	; 0x2c
   1c622:	ldr	r0, [r7, #0]
   1c624:	mov	r1, r3
   1c626:	str	r3, [sp, #20]
   1c628:	adds	r0, #16
   1c62a:	blx	85c4 <uuid_unparse@plt>
   1c62e:	ldr	r2, [pc, #128]	; (1c6b0 <btrfs_fs_roots_compare_roots@@Base+0x2fa>)
   1c630:	ldr	r3, [sp, #20]
   1c632:	add	r2, pc
   1c634:	str	r4, [sp, #0]
   1c636:	ldr	r0, [r6, #0]
   1c638:	movs	r1, #1
   1c63a:	blx	8a64 <__fprintf_chk@plt+0x4>
   1c63e:	b.n	1c660 <btrfs_fs_roots_compare_roots@@Base+0x2aa>
   1c640:	ldr.w	r2, [r4, #144]	; 0x90
   1c644:	movs	r1, #1
   1c646:	ldr.w	r3, [r4, #148]	; 0x94
   1c64a:	strd	r2, r3, [sp, #8]
   1c64e:	ldrd	r2, r3, [r4, #40]	; 0x28
   1c652:	strd	r2, r3, [sp]
   1c656:	ldr	r2, [pc, #92]	; (1c6b4 <btrfs_fs_roots_compare_roots@@Base+0x2fe>)
   1c658:	ldr	r0, [r6, #0]
   1c65a:	add	r2, pc
   1c65c:	blx	8a64 <__fprintf_chk@plt+0x4>
   1c660:	ldr	r2, [pc, #84]	; (1c6b8 <btrfs_fs_roots_compare_roots@@Base+0x302>)
   1c662:	ldr	r3, [pc, #60]	; (1c6a0 <btrfs_fs_roots_compare_roots@@Base+0x2ea>)
   1c664:	add	r2, pc
   1c666:	ldr	r3, [r2, r3]
   1c668:	ldr	r2, [r3, #0]
   1c66a:	ldr	r3, [sp, #124]	; 0x7c
   1c66c:	eors	r2, r3
   1c66e:	beq.n	1c694 <btrfs_fs_roots_compare_roots@@Base+0x2de>
   1c670:	blx	8708 <__stack_chk_fail@plt>
   1c674:	ldr	r2, [pc, #68]	; (1c6bc <btrfs_fs_roots_compare_roots@@Base+0x306>)
   1c676:	movs	r3, #8
   1c678:	str	r3, [sp, #0]
   1c67a:	add	r2, pc
   1c67c:	ldrb.w	r3, [r4, #196]	; 0xc4
   1c680:	b.n	1c636 <btrfs_fs_roots_compare_roots@@Base+0x280>
   1c682:	ldr	r2, [pc, #60]	; (1c6c0 <btrfs_fs_roots_compare_roots@@Base+0x30a>)
   1c684:	movs	r1, #1
   1c686:	ldr.w	r3, [r4, #192]	; 0xc0
   1c68a:	ldr	r0, [r6, #0]
   1c68c:	add	r2, pc
   1c68e:	blx	8a64 <__fprintf_chk@plt+0x4>
   1c692:	b.n	1c660 <btrfs_fs_roots_compare_roots@@Base+0x2aa>
   1c694:	add	sp, #128	; 0x80
   1c696:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1c69a:	nop
   1c69c:	strh	r2, [r2, #62]	; 0x3e
   1c69e:	movs	r4, r0
   1c6a0:	lsls	r0, r5, #8
   1c6a2:	movs	r0, r0
   1c6a4:	strh	r4, [r5, #60]	; 0x3c
   1c6a6:	movs	r4, r0
   1c6a8:	lsls	r0, r7, #8
   1c6aa:	movs	r0, r0
   1c6ac:	lsrs	r7, r6, #14
   1c6ae:	movs	r2, r0
   1c6b0:	lsrs	r1, r2, #14
   1c6b2:	movs	r2, r0
   1c6b4:	lsrs	r2, r1, #14
   1c6b6:	movs	r2, r0
   1c6b8:	strh	r4, [r3, #56]	; 0x38
   1c6ba:	movs	r4, r0
   1c6bc:	lsrs	r1, r2, #14
   1c6be:	movs	r2, r0
   1c6c0:	lsrs	r3, r2, #14
   1c6c2:	movs	r2, r0
   1c6c4:	push	{r0, r1, r2, r3, r4, lr}
   1c6c6:	ldr	r3, [pc, #40]	; (1c6f0 <btrfs_fs_roots_compare_roots@@Base+0x33a>)
   1c6c8:	ldr	r4, [pc, #40]	; (1c6f4 <btrfs_fs_roots_compare_roots@@Base+0x33e>)
   1c6ca:	add	r3, pc
   1c6cc:	ldr	r4, [r3, r4]
   1c6ce:	movs	r3, #0
   1c6d0:	strd	r2, r1, [sp]
   1c6d4:	movs	r1, #1
   1c6d6:	strd	r0, r3, [sp, #8]
   1c6da:	ldr	r2, [pc, #28]	; (1c6f8 <btrfs_fs_roots_compare_roots@@Base+0x342>)
   1c6dc:	ldr	r3, [pc, #28]	; (1c6fc <btrfs_fs_roots_compare_roots@@Base+0x346>)
   1c6de:	add	r2, pc
   1c6e0:	ldr	r0, [r4, #0]
   1c6e2:	add	r3, pc
   1c6e4:	blx	8a64 <__fprintf_chk@plt+0x4>
   1c6e8:	bl	1c3f8 <btrfs_fs_roots_compare_roots@@Base+0x42>
   1c6ec:	blx	8b84 <abort@plt>
   1c6f0:	strh	r6, [r6, #52]	; 0x34
   1c6f2:	movs	r4, r0
   1c6f4:	lsls	r0, r7, #8
   1c6f6:	movs	r0, r0
   1c6f8:	bhi.n	1c6de <btrfs_fs_roots_compare_roots@@Base+0x328>
   1c6fa:	movs	r1, r0
   1c6fc:	lsrs	r3, r2, #13
   1c6fe:	movs	r2, r0
   1c700:	push	{r0, r1, r2, r3, r4, lr}
   1c702:	ldr	r4, [pc, #40]	; (1c72c <btrfs_fs_roots_compare_roots@@Base+0x376>)
   1c704:	ldr	r5, [pc, #40]	; (1c730 <btrfs_fs_roots_compare_roots@@Base+0x37a>)
   1c706:	add	r4, pc
   1c708:	ldr	r4, [r4, r5]
   1c70a:	strd	r2, r1, [sp]
   1c70e:	movs	r1, #1
   1c710:	strd	r0, r3, [sp, #8]
   1c714:	ldr	r2, [pc, #28]	; (1c734 <btrfs_fs_roots_compare_roots@@Base+0x37e>)
   1c716:	ldr	r3, [pc, #32]	; (1c738 <btrfs_fs_roots_compare_roots@@Base+0x382>)
   1c718:	add	r2, pc
   1c71a:	ldr	r0, [r4, #0]
   1c71c:	add	r3, pc
   1c71e:	blx	8a64 <__fprintf_chk@plt+0x4>
   1c722:	bl	1c3f8 <btrfs_fs_roots_compare_roots@@Base+0x42>
   1c726:	blx	8b84 <abort@plt>
   1c72a:	nop
   1c72c:	strh	r2, [r7, #50]	; 0x32
   1c72e:	movs	r4, r0
   1c730:	lsls	r0, r7, #8
   1c732:	movs	r0, r0
   1c734:	bvc.n	1c64c <btrfs_fs_roots_compare_roots@@Base+0x296>
   1c736:	movs	r1, r0
   1c738:	lsrs	r1, r3, #12
   1c73a:	movs	r2, r0
   1c73c:	push	{r3, lr}
   1c73e:	cbz	r3, 1c744 <btrfs_fs_roots_compare_roots@@Base+0x38e>
   1c740:	bl	1c700 <btrfs_fs_roots_compare_roots@@Base+0x34a>
   1c744:	pop	{r3, pc}

0001c746 <btrfs_csum_data@@Base>:
   1c746:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c74a:	mov	r4, r2
   1c74c:	ldr.w	r8, [pc, #120]	; 1c7c8 <btrfs_csum_data@@Base+0x82>
   1c750:	mov	r7, r0
   1c752:	mov	r5, r1
   1c754:	movs	r2, #32
   1c756:	movs	r1, #0
   1c758:	mov	r0, r4
   1c75a:	add	r8, pc
   1c75c:	mov	r6, r3
   1c75e:	blx	89bc <memset@plt+0x4>
   1c762:	cmp	r7, #3
   1c764:	bhi.n	1c7a6 <btrfs_csum_data@@Base+0x60>
   1c766:	tbb	[pc, r7]
   1c76a:	lsrs	r2, r0, #4
   1c76c:	asrs	r0, r2, #28
   1c76e:	mov	r2, r4
   1c770:	mov	r1, r6
   1c772:	mov	r0, r5
   1c774:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1c778:	b.w	3418c <hash_crc32c@@Base>
   1c77c:	mov	r2, r4
   1c77e:	mov	r1, r6
   1c780:	mov	r0, r5
   1c782:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1c786:	b.w	341a4 <hash_xxhash@@Base>
   1c78a:	mov	r2, r4
   1c78c:	mov	r1, r6
   1c78e:	mov	r0, r5
   1c790:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1c794:	b.w	341f4 <hash_sha256@@Base>
   1c798:	mov	r2, r4
   1c79a:	mov	r1, r6
   1c79c:	mov	r0, r5
   1c79e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1c7a2:	b.w	34250 <hash_blake2b@@Base>
   1c7a6:	ldr	r3, [pc, #36]	; (1c7cc <btrfs_csum_data@@Base+0x86>)
   1c7a8:	movs	r1, #1
   1c7aa:	ldr	r2, [pc, #36]	; (1c7d0 <btrfs_csum_data@@Base+0x8a>)
   1c7ac:	ldr.w	r0, [r8, r3]
   1c7b0:	add	r2, pc
   1c7b2:	mov	r3, r7
   1c7b4:	ldr	r0, [r0, #0]
   1c7b6:	blx	8a64 <__fprintf_chk@plt+0x4>
   1c7ba:	ldr	r1, [pc, #24]	; (1c7d4 <btrfs_csum_data@@Base+0x8e>)
   1c7bc:	ldr	r0, [pc, #24]	; (1c7d8 <btrfs_csum_data@@Base+0x92>)
   1c7be:	movs	r2, #157	; 0x9d
   1c7c0:	add	r1, pc
   1c7c2:	add	r0, pc
   1c7c4:	bl	1c6c4 <btrfs_fs_roots_compare_roots@@Base+0x30e>
   1c7c8:	strh	r6, [r4, #48]	; 0x30
   1c7ca:	movs	r4, r0
   1c7cc:	lsls	r0, r7, #8
   1c7ce:	movs	r0, r0
   1c7d0:	lsrs	r7, r1, #10
   1c7d2:	movs	r2, r0
   1c7d4:	asrs	r1, r5, #13
   1c7d6:	movs	r2, r0
   1c7d8:	lsls	r4, r5, #18
   1c7da:	movs	r2, r0

0001c7dc <csum_tree_block_size@@Base>:
   1c7dc:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c7e0:	mov	r4, r2
   1c7e2:	ldr	r2, [pc, #144]	; (1c874 <csum_tree_block_size@@Base+0x98>)
   1c7e4:	mov	r5, r0
   1c7e6:	mov	r0, r3
   1c7e8:	ldr	r3, [pc, #140]	; (1c878 <csum_tree_block_size@@Base+0x9c>)
   1c7ea:	add	r2, pc
   1c7ec:	sub	sp, #56	; 0x38
   1c7ee:	add	r7, sp, #20
   1c7f0:	ldr.w	r8, [pc, #136]	; 1c87c <csum_tree_block_size@@Base+0xa0>
   1c7f4:	ldr	r3, [r2, r3]
   1c7f6:	mov	r6, r1
   1c7f8:	add.w	r1, r5, #128	; 0x80
   1c7fc:	mov	r2, r7
   1c7fe:	ldr	r3, [r3, #0]
   1c800:	str	r3, [sp, #52]	; 0x34
   1c802:	mov.w	r3, #0
   1c806:	ldr	r3, [r5, #76]	; 0x4c
   1c808:	add	r8, pc
   1c80a:	subs	r3, #32
   1c80c:	bl	1c746 <btrfs_csum_data@@Base>
   1c810:	mov	r3, r6
   1c812:	cbz	r4, 1c85e <csum_tree_block_size@@Base+0x82>
   1c814:	movs	r2, #0
   1c816:	mov	r1, r7
   1c818:	mov	r0, r5
   1c81a:	bl	17a08 <memcmp_extent_buffer@@Base>
   1c81e:	mov	r4, r0
   1c820:	cbz	r0, 1c84a <csum_tree_block_size@@Base+0x6e>
   1c822:	ldrb.w	r2, [r5, #96]	; 0x60
   1c826:	movs	r4, #1
   1c828:	ldr	r3, [pc, #84]	; (1c880 <csum_tree_block_size@@Base+0xa4>)
   1c82a:	ldrd	r0, r1, [r5, #40]	; 0x28
   1c82e:	ldr.w	r3, [r8, r3]
   1c832:	str	r2, [sp, #12]
   1c834:	ldrb.w	r2, [sp, #20]
   1c838:	strd	r0, r1, [sp]
   1c83c:	movs	r1, #1
   1c83e:	str	r2, [sp, #8]
   1c840:	ldr	r2, [pc, #64]	; (1c884 <csum_tree_block_size@@Base+0xa8>)
   1c842:	ldr	r0, [r3, #0]
   1c844:	add	r2, pc
   1c846:	blx	8a64 <__fprintf_chk@plt+0x4>
   1c84a:	ldr	r2, [pc, #60]	; (1c888 <csum_tree_block_size@@Base+0xac>)
   1c84c:	ldr	r3, [pc, #40]	; (1c878 <csum_tree_block_size@@Base+0x9c>)
   1c84e:	add	r2, pc
   1c850:	ldr	r3, [r2, r3]
   1c852:	ldr	r2, [r3, #0]
   1c854:	ldr	r3, [sp, #52]	; 0x34
   1c856:	eors	r2, r3
   1c858:	beq.n	1c86a <csum_tree_block_size@@Base+0x8e>
   1c85a:	blx	8708 <__stack_chk_fail@plt>
   1c85e:	mov	r2, r4
   1c860:	mov	r1, r7
   1c862:	mov	r0, r5
   1c864:	bl	17a30 <write_extent_buffer@@Base>
   1c868:	b.n	1c84a <csum_tree_block_size@@Base+0x6e>
   1c86a:	mov	r0, r4
   1c86c:	add	sp, #56	; 0x38
   1c86e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1c872:	nop
   1c874:	strh	r6, [r2, #44]	; 0x2c
   1c876:	movs	r4, r0
   1c878:	lsls	r0, r5, #8
   1c87a:	movs	r0, r0
   1c87c:	strh	r0, [r7, #42]	; 0x2a
   1c87e:	movs	r4, r0
   1c880:	lsls	r0, r7, #8
   1c882:	movs	r0, r0
   1c884:	lsrs	r1, r3, #8
   1c886:	movs	r2, r0
   1c888:	strh	r2, [r6, #40]	; 0x28
   1c88a:	movs	r4, r0

0001c88c <verify_tree_block_csum_silent@@Base>:
   1c88c:	push	{r4, r5, r6, lr}
   1c88e:	mov	r4, r0
   1c890:	mov	r0, r2
   1c892:	ldr	r2, [pc, #76]	; (1c8e0 <verify_tree_block_csum_silent@@Base+0x54>)
   1c894:	ldr	r3, [pc, #76]	; (1c8e4 <verify_tree_block_csum_silent@@Base+0x58>)
   1c896:	sub	sp, #40	; 0x28
   1c898:	add	r2, pc
   1c89a:	add	r5, sp, #4
   1c89c:	mov	r6, r1
   1c89e:	add.w	r1, r4, #128	; 0x80
   1c8a2:	ldr	r3, [r2, r3]
   1c8a4:	mov	r2, r5
   1c8a6:	ldr	r3, [r3, #0]
   1c8a8:	str	r3, [sp, #36]	; 0x24
   1c8aa:	mov.w	r3, #0
   1c8ae:	ldr	r3, [r4, #76]	; 0x4c
   1c8b0:	subs	r3, #32
   1c8b2:	bl	1c746 <btrfs_csum_data@@Base>
   1c8b6:	mov	r3, r6
   1c8b8:	movs	r2, #0
   1c8ba:	mov	r1, r5
   1c8bc:	mov	r0, r4
   1c8be:	bl	17a08 <memcmp_extent_buffer@@Base>
   1c8c2:	ldr	r2, [pc, #36]	; (1c8e8 <verify_tree_block_csum_silent@@Base+0x5c>)
   1c8c4:	ldr	r3, [pc, #28]	; (1c8e4 <verify_tree_block_csum_silent@@Base+0x58>)
   1c8c6:	add	r2, pc
   1c8c8:	ldr	r3, [r2, r3]
   1c8ca:	subs	r0, #0
   1c8cc:	it	ne
   1c8ce:	movne	r0, #1
   1c8d0:	ldr	r2, [r3, #0]
   1c8d2:	ldr	r3, [sp, #36]	; 0x24
   1c8d4:	eors	r2, r3
   1c8d6:	beq.n	1c8dc <verify_tree_block_csum_silent@@Base+0x50>
   1c8d8:	blx	8708 <__stack_chk_fail@plt>
   1c8dc:	add	sp, #40	; 0x28
   1c8de:	pop	{r4, r5, r6, pc}
   1c8e0:	strh	r0, [r5, #38]	; 0x26
   1c8e2:	movs	r4, r0
   1c8e4:	lsls	r0, r5, #8
   1c8e6:	movs	r0, r0
   1c8e8:	strh	r2, [r7, #36]	; 0x24
   1c8ea:	movs	r4, r0

0001c8ec <csum_tree_block@@Base>:
   1c8ec:	push	{r4, r5, r6, lr}
   1c8ee:	mov	r4, r0
   1c8f0:	ldr.w	r0, [r0, #308]	; 0x134
   1c8f4:	mov	r5, r1
   1c8f6:	mov	r6, r2
   1c8f8:	bl	18510 <btrfs_super_csum_size@@Base>
   1c8fc:	ldr.w	r3, [r4, #308]	; 0x134
   1c900:	ldrh.w	r3, [r3, #196]	; 0xc4
   1c904:	mov	r1, r0
   1c906:	cbz	r6, 1c91c <csum_tree_block@@Base+0x30>
   1c908:	ldrb.w	r2, [r4, #364]	; 0x16c
   1c90c:	lsls	r2, r2, #26
   1c90e:	bpl.n	1c91c <csum_tree_block@@Base+0x30>
   1c910:	mov	r0, r5
   1c912:	mov	r2, r3
   1c914:	ldmia.w	sp!, {r4, r5, r6, lr}
   1c918:	b.w	1c88c <verify_tree_block_csum_silent@@Base>
   1c91c:	mov	r2, r6
   1c91e:	mov	r0, r5
   1c920:	ldmia.w	sp!, {r4, r5, r6, lr}
   1c924:	b.w	1c7dc <csum_tree_block_size@@Base>

0001c928 <btrfs_find_tree_block@@Base>:
   1c928:	adds	r0, #64	; 0x40
   1c92a:	b.w	17398 <find_extent_buffer@@Base>

0001c92e <btrfs_find_create_tree_block@@Base>:
   1c92e:	push	{r0, r1, r2, lr}
   1c930:	ldr.w	r1, [r0, #384]	; 0x180
   1c934:	str	r1, [sp, #0]
   1c936:	bl	1741e <alloc_extent_buffer@@Base>
   1c93a:	add	sp, #12
   1c93c:	ldr.w	pc, [sp], #4

0001c940 <read_whole_eb@@Base>:
   1c940:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c944:	sub	sp, #60	; 0x3c
   1c946:	ldr	r3, [pc, #328]	; (1ca90 <read_whole_eb@@Base+0x150>)
   1c948:	mov	r7, r0
   1c94a:	str	r2, [sp, #16]
   1c94c:	mov	r4, r1
   1c94e:	ldr	r2, [pc, #324]	; (1ca94 <read_whole_eb@@Base+0x154>)
   1c950:	movs	r6, #0
   1c952:	ldr	r5, [r1, #76]	; 0x4c
   1c954:	add	r2, pc
   1c956:	ldr.w	r9, [pc, #320]	; 1ca98 <read_whole_eb@@Base+0x158>
   1c95a:	ldr	r3, [r2, r3]
   1c95c:	add	r9, pc
   1c95e:	ldr	r3, [r3, #0]
   1c960:	str	r3, [sp, #52]	; 0x34
   1c962:	mov.w	r3, #0
   1c966:	add	r3, sp, #36	; 0x24
   1c968:	str	r6, [sp, #36]	; 0x24
   1c96a:	str	r3, [sp, #20]
   1c96c:	add	r3, sp, #40	; 0x28
   1c96e:	str	r3, [sp, #24]
   1c970:	cbnz	r5, 1c98a <read_whole_eb@@Base+0x4a>
   1c972:	mov	r0, r5
   1c974:	ldr	r2, [pc, #292]	; (1ca9c <read_whole_eb@@Base+0x15c>)
   1c976:	ldr	r3, [pc, #280]	; (1ca90 <read_whole_eb@@Base+0x150>)
   1c978:	add	r2, pc
   1c97a:	ldr	r3, [r2, r3]
   1c97c:	ldr	r2, [r3, #0]
   1c97e:	ldr	r3, [sp, #52]	; 0x34
   1c980:	eors	r2, r3
   1c982:	beq.w	1ca88 <read_whole_eb@@Base+0x148>
   1c986:	blx	8708 <__stack_chk_fail@plt>
   1c98a:	ldrb.w	r1, [r7, #364]	; 0x16c
   1c98e:	mov	sl, r5
   1c990:	mov.w	fp, #0
   1c994:	ldrd	r2, r3, [r4, #40]	; 0x28
   1c998:	ands.w	r1, r1, #4
   1c99c:	strd	sl, fp, [sp, #40]	; 0x28
   1c9a0:	bne.n	1ca4a <read_whole_eb@@Base+0x10a>
   1c9a2:	cmp	r3, #0
   1c9a4:	it	eq
   1c9a6:	cmpeq.w	r2, #65536	; 0x10000
   1c9aa:	beq.n	1ca4a <read_whole_eb@@Base+0x10a>
   1c9ac:	ldr	r0, [sp, #16]
   1c9ae:	adds	r2, r2, r6
   1c9b0:	str	r1, [sp, #12]
   1c9b2:	adc.w	r3, r3, #0
   1c9b6:	str	r0, [sp, #8]
   1c9b8:	ldr	r0, [sp, #20]
   1c9ba:	str	r0, [sp, #4]
   1c9bc:	ldr	r0, [sp, #24]
   1c9be:	str	r0, [sp, #0]
   1c9c0:	mov	r0, r7
   1c9c2:	bl	2a528 <btrfs_map_block@@Base>
   1c9c6:	mov	r1, r0
   1c9c8:	cbz	r0, 1c9f8 <read_whole_eb@@Base+0xb8>
   1c9ca:	ldr	r3, [pc, #212]	; (1caa0 <read_whole_eb@@Base+0x160>)
   1c9cc:	movs	r2, #0
   1c9ce:	ldr.w	r0, [r9, r3]
   1c9d2:	ldrd	r3, r1, [r4, #40]	; 0x28
   1c9d6:	adds	r3, r6, r3
   1c9d8:	adc.w	r2, r1, r2
   1c9dc:	strd	r3, r2, [sp]
   1c9e0:	ldr	r2, [pc, #192]	; (1caa4 <read_whole_eb@@Base+0x164>)
   1c9e2:	movs	r1, #1
   1c9e4:	ldr	r0, [r0, #0]
   1c9e6:	add	r2, pc
   1c9e8:	blx	8a64 <__fprintf_chk@plt+0x4>
   1c9ec:	ldr	r0, [sp, #36]	; 0x24
   1c9ee:	blx	8620 <free@plt+0x4>
   1c9f2:	mvn.w	r0, #4
   1c9f6:	b.n	1c974 <read_whole_eb@@Base+0x34>
   1c9f8:	ldr	r0, [sp, #36]	; 0x24
   1c9fa:	ldr.w	ip, [r0, #8]
   1c9fe:	ldr.w	r3, [ip, #24]
   1ca02:	cmp	r3, #0
   1ca04:	ble.n	1c9ee <read_whole_eb@@Base+0xae>
   1ca06:	str	r3, [r4, #88]	; 0x58
   1ca08:	ldrd	r3, r2, [ip, #16]
   1ca0c:	str	r1, [sp, #28]
   1ca0e:	adds	r3, #1
   1ca10:	adc.w	r2, r2, #0
   1ca14:	strd	r3, r2, [ip, #16]
   1ca18:	ldrd	r2, r3, [r0, #16]
   1ca1c:	strd	r2, r3, [r4, #48]	; 0x30
   1ca20:	blx	8620 <free@plt+0x4>
   1ca24:	ldrd	r2, r3, [sp, #40]	; 0x28
   1ca28:	ldr	r1, [sp, #28]
   1ca2a:	cmp	fp, r3
   1ca2c:	it	eq
   1ca2e:	cmpeq	r5, r2
   1ca30:	str	r1, [sp, #36]	; 0x24
   1ca32:	bcc.n	1ca82 <read_whole_eb@@Base+0x142>
   1ca34:	ldr	r2, [sp, #40]	; 0x28
   1ca36:	mov	r1, r6
   1ca38:	mov	r0, r4
   1ca3a:	bl	1754a <read_extent_from_disk@@Base>
   1ca3e:	cmp	r0, #0
   1ca40:	bne.n	1c9f2 <read_whole_eb@@Base+0xb2>
   1ca42:	ldr	r3, [sp, #40]	; 0x28
   1ca44:	add	r6, r3
   1ca46:	subs	r5, r5, r3
   1ca48:	b.n	1c970 <read_whole_eb@@Base+0x30>
   1ca4a:	ldr.w	r0, [r7, #352]	; 0x160
   1ca4e:	ldr.w	r1, [r0, #72]!
   1ca52:	cmp	r1, r0
   1ca54:	bne.n	1ca6e <read_whole_eb@@Base+0x12e>
   1ca56:	ldr	r0, [r1, #24]
   1ca58:	strd	r2, r3, [r4, #48]	; 0x30
   1ca5c:	str	r0, [r4, #88]	; 0x58
   1ca5e:	ldrd	r3, r2, [r1, #16]
   1ca62:	adds	r3, #1
   1ca64:	adc.w	r2, r2, #0
   1ca68:	strd	r3, r2, [r1, #16]
   1ca6c:	b.n	1ca34 <read_whole_eb@@Base+0xf4>
   1ca6e:	ldrd	sl, fp, [r1, #64]	; 0x40
   1ca72:	cmp.w	fp, #0
   1ca76:	it	eq
   1ca78:	cmpeq.w	sl, #1
   1ca7c:	beq.n	1ca56 <read_whole_eb@@Base+0x116>
   1ca7e:	ldr	r1, [r1, #0]
   1ca80:	b.n	1ca52 <read_whole_eb@@Base+0x112>
   1ca82:	strd	sl, fp, [sp, #40]	; 0x28
   1ca86:	b.n	1ca34 <read_whole_eb@@Base+0xf4>
   1ca88:	add	sp, #60	; 0x3c
   1ca8a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ca8e:	nop
   1ca90:	lsls	r0, r5, #8
   1ca92:	movs	r0, r0
   1ca94:	strh	r4, [r5, #32]
   1ca96:	movs	r4, r0
   1ca98:	strh	r4, [r4, #32]
   1ca9a:	movs	r4, r0
   1ca9c:	strh	r0, [r1, #32]
   1ca9e:	movs	r4, r0
   1caa0:	lsls	r0, r7, #8
   1caa2:	movs	r0, r0
   1caa4:			; <UNDEFINED> instruction: 0xf7ff0001

0001caa8 <read_extent_data@@Base>:
   1caa8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1caac:	mov	r6, r1
   1caae:	ldr	r5, [pc, #176]	; (1cb60 <read_extent_data@@Base+0xb8>)
   1cab0:	sub	sp, #28
   1cab2:	ldr	r1, [pc, #176]	; (1cb64 <read_extent_data@@Base+0xbc>)
   1cab4:	mov	sl, r2
   1cab6:	add	r5, pc
   1cab8:	ldr	r4, [sp, #64]	; 0x40
   1caba:	mov	r7, r3
   1cabc:	ldr.w	fp, [pc, #168]	; 1cb68 <read_extent_data@@Base+0xc0>
   1cac0:	ldr	r1, [r5, r1]
   1cac2:	ldr	r5, [sp, #68]	; 0x44
   1cac4:	add	fp, pc
   1cac6:	ldr	r1, [r1, #0]
   1cac8:	str	r1, [sp, #20]
   1caca:	mov.w	r1, #0
   1cace:	ldrd	r8, r9, [r4]
   1cad2:	movs	r1, #0
   1cad4:	str	r1, [sp, #12]
   1cad6:	str	r5, [sp, #8]
   1cad8:	add	r5, sp, #16
   1cada:	strd	r4, r5, [sp]
   1cade:	str	r1, [sp, #16]
   1cae0:	bl	2a528 <btrfs_map_block@@Base>
   1cae4:	mov	r5, r0
   1cae6:	cbz	r0, 1cb18 <read_extent_data@@Base+0x70>
   1cae8:	ldr	r3, [pc, #128]	; (1cb6c <read_extent_data@@Base+0xc4>)
   1caea:	movs	r1, #1
   1caec:	ldr	r2, [pc, #128]	; (1cb70 <read_extent_data@@Base+0xc8>)
   1caee:	ldr.w	r3, [fp, r3]
   1caf2:	add	r2, pc
   1caf4:	strd	sl, r7, [sp]
   1caf8:	ldr	r0, [r3, #0]
   1cafa:	blx	8a64 <__fprintf_chk@plt+0x4>
   1cafe:	ldr	r0, [sp, #16]
   1cb00:	blx	8620 <free@plt+0x4>
   1cb04:	ldr	r2, [pc, #108]	; (1cb74 <read_extent_data@@Base+0xcc>)
   1cb06:	ldr	r3, [pc, #92]	; (1cb64 <read_extent_data@@Base+0xbc>)
   1cb08:	add	r2, pc
   1cb0a:	ldr	r3, [r2, r3]
   1cb0c:	ldr	r2, [r3, #0]
   1cb0e:	ldr	r3, [sp, #20]
   1cb10:	eors	r2, r3
   1cb12:	beq.n	1cb58 <read_extent_data@@Base+0xb0>
   1cb14:	blx	8708 <__stack_chk_fail@plt>
   1cb18:	ldr	r1, [sp, #16]
   1cb1a:	ldrd	r2, r3, [r4]
   1cb1e:	ldr	r0, [r1, #8]
   1cb20:	cmp	r9, r3
   1cb22:	it	eq
   1cb24:	cmpeq	r8, r2
   1cb26:	it	cc
   1cb28:	strdcc	r8, r9, [r4]
   1cb2c:	ldr	r0, [r0, #24]
   1cb2e:	cmp	r0, #0
   1cb30:	bge.n	1cb38 <read_extent_data@@Base+0x90>
   1cb32:	mvn.w	r5, #4
   1cb36:	b.n	1cafe <read_extent_data@@Base+0x56>
   1cb38:	ldrd	r2, r3, [r1, #16]
   1cb3c:	mov	r1, r6
   1cb3e:	strd	r2, r3, [sp]
   1cb42:	ldr	r2, [r4, #0]
   1cb44:	blx	8808 <pread64@plt>
   1cb48:	ldrd	r2, r3, [r4]
   1cb4c:	asrs	r1, r0, #31
   1cb4e:	cmp	r1, r3
   1cb50:	it	eq
   1cb52:	cmpeq	r0, r2
   1cb54:	beq.n	1cafe <read_extent_data@@Base+0x56>
   1cb56:	b.n	1cb32 <read_extent_data@@Base+0x8a>
   1cb58:	mov	r0, r5
   1cb5a:	add	sp, #28
   1cb5c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cb60:	strh	r2, [r1, #22]
   1cb62:	movs	r4, r0
   1cb64:	lsls	r0, r5, #8
   1cb66:	movs	r0, r0
   1cb68:	strh	r4, [r7, #20]
   1cb6a:	movs	r4, r0
   1cb6c:	lsls	r0, r7, #8
   1cb6e:	movs	r0, r0
   1cb70:	lsls	r2, r4, #30
   1cb72:	movs	r2, r0
   1cb74:	strh	r0, [r7, #18]
   1cb76:	movs	r4, r0

0001cb78 <write_and_map_eb@@Base>:
   1cb78:	ldr	r2, [pc, #248]	; (1cc74 <write_and_map_eb@@Base+0xfc>)
   1cb7a:	ldr	r3, [pc, #252]	; (1cc78 <write_and_map_eb@@Base+0x100>)
   1cb7c:	add	r2, pc
   1cb7e:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1cb82:	sub	sp, #48	; 0x30
   1cb84:	ldr	r3, [r2, r3]
   1cb86:	mov	r5, r1
   1cb88:	ldr	r2, [r1, #76]	; 0x4c
   1cb8a:	mov	r6, r0
   1cb8c:	ldr	r3, [r3, #0]
   1cb8e:	str	r3, [sp, #44]	; 0x2c
   1cb90:	mov.w	r3, #0
   1cb94:	movs	r3, #0
   1cb96:	strd	r3, r3, [sp, #24]
   1cb9a:	strd	r2, r3, [sp, #32]
   1cb9e:	add	r2, sp, #24
   1cba0:	strd	r3, r2, [sp, #8]
   1cba4:	add	r3, sp, #28
   1cba6:	str	r3, [sp, #4]
   1cba8:	add	r3, sp, #32
   1cbaa:	str	r3, [sp, #0]
   1cbac:	ldrd	r2, r3, [r1, #40]	; 0x28
   1cbb0:	movs	r1, #1
   1cbb2:	bl	2a528 <btrfs_map_block@@Base>
   1cbb6:	ldr	r4, [sp, #24]
   1cbb8:	mov	r3, r0
   1cbba:	cmp	r4, #0
   1cbbc:	beq.n	1cc60 <write_and_map_eb@@Base+0xe8>
   1cbbe:	ldrd	r2, r3, [sp, #32]
   1cbc2:	mov	r1, r5
   1cbc4:	mov	r0, r6
   1cbc6:	str	r4, [sp, #8]
   1cbc8:	strd	r2, r3, [sp]
   1cbcc:	ldr	r2, [sp, #28]
   1cbce:	bl	2ae90 <write_raid56_with_parity@@Base>
   1cbd2:	ldr	r1, [pc, #168]	; (1cc7c <write_and_map_eb@@Base+0x104>)
   1cbd4:	mov.w	r2, #494	; 0x1ee
   1cbd8:	add	r1, pc
   1cbda:	adds	r1, #16
   1cbdc:	mov	r3, r0
   1cbde:	ldr	r0, [pc, #160]	; (1cc80 <write_and_map_eb@@Base+0x108>)
   1cbe0:	add	r0, pc
   1cbe2:	bl	1c73c <btrfs_fs_roots_compare_roots@@Base+0x386>
   1cbe6:	ldr	r0, [sp, #24]
   1cbe8:	blx	8620 <free@plt+0x4>
   1cbec:	ldr	r0, [sp, #28]
   1cbee:	blx	8620 <free@plt+0x4>
   1cbf2:	ldr	r2, [pc, #144]	; (1cc84 <write_and_map_eb@@Base+0x10c>)
   1cbf4:	ldr	r3, [pc, #128]	; (1cc78 <write_and_map_eb@@Base+0x100>)
   1cbf6:	add	r2, pc
   1cbf8:	ldr	r3, [r2, r3]
   1cbfa:	ldr	r2, [r3, #0]
   1cbfc:	ldr	r3, [sp, #44]	; 0x2c
   1cbfe:	eors	r2, r3
   1cc00:	beq.n	1cc6c <write_and_map_eb@@Base+0xf4>
   1cc02:	blx	8708 <__stack_chk_fail@plt>
   1cc06:	mov.w	r2, #496	; 0x1f0
   1cc0a:	mov	r1, r7
   1cc0c:	mov	r0, r6
   1cc0e:	bl	1c73c <btrfs_fs_roots_compare_roots@@Base+0x386>
   1cc12:	add.w	r1, r8, r4, lsl #4
   1cc16:	adds	r4, #1
   1cc18:	mov	r0, r5
   1cc1a:	ldr	r3, [r1, #8]
   1cc1c:	add.w	r8, r8, r4, lsl #4
   1cc20:	ldr	r3, [r3, #24]
   1cc22:	str	r3, [r5, #88]	; 0x58
   1cc24:	ldrd	r2, r3, [r8]
   1cc28:	strd	r2, r3, [r5, #48]	; 0x30
   1cc2c:	ldr	r2, [r1, #8]
   1cc2e:	ldrd	r3, r1, [r2, #16]
   1cc32:	adds	r3, #1
   1cc34:	adc.w	r1, r1, #0
   1cc38:	strd	r3, r1, [r2, #16]
   1cc3c:	bl	1757e <write_extent_to_disk@@Base>
   1cc40:	mov.w	r2, #502	; 0x1f6
   1cc44:	mov	r1, r7
   1cc46:	mov	r3, r0
   1cc48:	str	r0, [sp, #20]
   1cc4a:	mov	r0, r6
   1cc4c:	bl	1c73c <btrfs_fs_roots_compare_roots@@Base+0x386>
   1cc50:	ldr	r3, [sp, #20]
   1cc52:	ldr.w	r8, [sp, #28]
   1cc56:	ldr.w	r2, [r8, #4]
   1cc5a:	cmp	r2, r4
   1cc5c:	bgt.n	1cc06 <write_and_map_eb@@Base+0x8e>
   1cc5e:	b.n	1cbe6 <write_and_map_eb@@Base+0x6e>
   1cc60:	ldr	r7, [pc, #36]	; (1cc88 <write_and_map_eb@@Base+0x110>)
   1cc62:	ldr	r6, [pc, #40]	; (1cc8c <write_and_map_eb@@Base+0x114>)
   1cc64:	add	r7, pc
   1cc66:	adds	r7, #16
   1cc68:	add	r6, pc
   1cc6a:	b.n	1cc52 <write_and_map_eb@@Base+0xda>
   1cc6c:	movs	r0, #0
   1cc6e:	add	sp, #48	; 0x30
   1cc70:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1cc74:	strh	r4, [r0, #16]
   1cc76:	movs	r4, r0
   1cc78:	lsls	r0, r5, #8
   1cc7a:	movs	r0, r0
   1cc7c:	lsrs	r1, r2, #29
   1cc7e:	movs	r2, r0
   1cc80:	bls.n	1cc8c <write_and_map_eb@@Base+0x114>
   1cc82:	movs	r1, r0
   1cc84:	strh	r2, [r1, #12]
   1cc86:	movs	r4, r0
   1cc88:	lsrs	r5, r0, #27
   1cc8a:	movs	r2, r0
   1cc8c:	bhi.n	1cd88 <btrfs_new_fs_info@@Base+0x2a>
   1cc8e:	movs	r1, r0

0001cc90 <btrfs_setup_root@@Base>:
   1cc90:	push	{r4, r5, r6, lr}
   1cc92:	mov	r4, r0
   1cc94:	movs	r0, #0
   1cc96:	strd	r2, r3, [r4, #472]	; 0x1d8
   1cc9a:	mov	r6, r2
   1cc9c:	mov	r5, r3
   1cc9e:	movs	r2, #0
   1cca0:	movs	r3, #0
   1cca2:	strd	r0, r0, [r4]
   1cca6:	strd	r2, r3, [r4, #480]	; 0x1e0
   1ccaa:	strd	r2, r3, [r4, #504]	; 0x1f8
   1ccae:	add.w	r3, r4, #520	; 0x208
   1ccb2:	strd	r0, r0, [r4, #488]	; 0x1e8
   1ccb6:	movw	r2, #439	; 0x1b7
   1ccba:	str.w	r1, [r4, #464]	; 0x1d0
   1ccbe:	mov	r1, r0
   1ccc0:	strd	r3, r3, [r4, #520]	; 0x208
   1ccc4:	add.w	r3, r4, #512	; 0x200
   1ccc8:	str.w	r0, [r4, #455]	; 0x1c7
   1cccc:	str.w	r0, [r4, #459]	; 0x1cb
   1ccd0:	strb.w	r0, [r4, #463]	; 0x1cf
   1ccd4:	add.w	r0, r4, #8
   1ccd8:	strd	r3, r3, [r4, #512]	; 0x200
   1ccdc:	blx	89bc <memset@plt+0x4>
   1cce0:	str.w	r6, [r4, #447]	; 0x1bf
   1cce4:	str.w	r5, [r4, #451]	; 0x1c3
   1cce8:	pop	{r4, r5, r6, pc}

0001ccea <btrfs_free_fs_root@@Base>:
   1ccea:	push	{r4, lr}
   1ccec:	mov	r4, r0
   1ccee:	ldr	r0, [r0, #0]
   1ccf0:	cbz	r0, 1ccf6 <btrfs_free_fs_root@@Base+0xc>
   1ccf2:	bl	17320 <free_extent_buffer@@Base>
   1ccf6:	ldr	r0, [r4, #4]
   1ccf8:	cbz	r0, 1ccfe <btrfs_free_fs_root@@Base+0x14>
   1ccfa:	bl	17320 <free_extent_buffer@@Base>
   1ccfe:	mov	r0, r4
   1cd00:	blx	8620 <free@plt+0x4>
   1cd04:	movs	r0, #0
   1cd06:	pop	{r4, pc}
   1cd08:	sub.w	r0, r0, #528	; 0x210
   1cd0c:	b.w	1ccea <btrfs_free_fs_root@@Base>

0001cd10 <btrfs_free_fs_info@@Base>:
   1cd10:	push	{r4, lr}
   1cd12:	mov	r4, r0
   1cd14:	ldr	r0, [r0, #44]	; 0x2c
   1cd16:	cbz	r0, 1cd1c <btrfs_free_fs_info@@Base+0xc>
   1cd18:	blx	8620 <free@plt+0x4>
   1cd1c:	ldr	r0, [r4, #28]
   1cd1e:	blx	8620 <free@plt+0x4>
   1cd22:	ldr	r0, [r4, #24]
   1cd24:	blx	8620 <free@plt+0x4>
   1cd28:	ldr	r0, [r4, #32]
   1cd2a:	blx	8620 <free@plt+0x4>
   1cd2e:	ldr	r0, [r4, #36]	; 0x24
   1cd30:	blx	8620 <free@plt+0x4>
   1cd34:	ldr	r0, [r4, #40]	; 0x28
   1cd36:	blx	8620 <free@plt+0x4>
   1cd3a:	ldr	r0, [r4, #48]	; 0x30
   1cd3c:	blx	8620 <free@plt+0x4>
   1cd40:	ldr	r0, [r4, #52]	; 0x34
   1cd42:	blx	8620 <free@plt+0x4>
   1cd46:	ldr.w	r0, [r4, #308]	; 0x134
   1cd4a:	blx	8620 <free@plt+0x4>
   1cd4e:	ldr	r0, [r4, #60]	; 0x3c
   1cd50:	blx	8620 <free@plt+0x4>
   1cd54:	mov	r0, r4
   1cd56:	ldmia.w	sp!, {r4, lr}
   1cd5a:	b.w	861c <free@plt>

0001cd5e <btrfs_new_fs_info@@Base>:
   1cd5e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cd62:	sub	sp, #20
   1cd64:	mov	fp, r0
   1cd66:	mov.w	r1, #400	; 0x190
   1cd6a:	movs	r0, #1
   1cd6c:	strd	r2, r3, [sp]
   1cd70:	blx	8588 <calloc@plt+0x4>
   1cd74:	mov	r4, r0
   1cd76:	cmp	r0, #0
   1cd78:	beq.n	1ce22 <btrfs_new_fs_info@@Base+0xc4>
   1cd7a:	mov.w	r1, #544	; 0x220
   1cd7e:	movs	r0, #1
   1cd80:	blx	8588 <calloc@plt+0x4>
   1cd84:	mov.w	r1, #544	; 0x220
   1cd88:	str	r0, [r4, #28]
   1cd8a:	str	r0, [sp, #12]
   1cd8c:	movs	r0, #1
   1cd8e:	blx	8588 <calloc@plt+0x4>
   1cd92:	mov.w	r1, #544	; 0x220
   1cd96:	str	r0, [r4, #24]
   1cd98:	str	r0, [sp, #8]
   1cd9a:	movs	r0, #1
   1cd9c:	blx	8588 <calloc@plt+0x4>
   1cda0:	mov.w	r1, #544	; 0x220
   1cda4:	str	r0, [r4, #32]
   1cda6:	mov	sl, r0
   1cda8:	movs	r0, #1
   1cdaa:	blx	8588 <calloc@plt+0x4>
   1cdae:	mov.w	r1, #544	; 0x220
   1cdb2:	str	r0, [r4, #36]	; 0x24
   1cdb4:	mov	r9, r0
   1cdb6:	movs	r0, #1
   1cdb8:	blx	8588 <calloc@plt+0x4>
   1cdbc:	mov.w	r1, #544	; 0x220
   1cdc0:	str	r0, [r4, #40]	; 0x28
   1cdc2:	mov	r8, r0
   1cdc4:	movs	r0, #1
   1cdc6:	blx	8588 <calloc@plt+0x4>
   1cdca:	mov.w	r1, #544	; 0x220
   1cdce:	str	r0, [r4, #44]	; 0x2c
   1cdd0:	mov	r7, r0
   1cdd2:	movs	r0, #1
   1cdd4:	blx	8588 <calloc@plt+0x4>
   1cdd8:	mov.w	r1, #544	; 0x220
   1cddc:	str	r0, [r4, #48]	; 0x30
   1cdde:	mov	r6, r0
   1cde0:	movs	r0, #1
   1cde2:	blx	8588 <calloc@plt+0x4>
   1cde6:	mov.w	r1, #4096	; 0x1000
   1cdea:	str	r0, [r4, #52]	; 0x34
   1cdec:	mov	r5, r0
   1cdee:	movs	r0, #1
   1cdf0:	blx	8588 <calloc@plt+0x4>
   1cdf4:	ldr	r2, [sp, #12]
   1cdf6:	str.w	r0, [r4, #308]	; 0x134
   1cdfa:	cbz	r2, 1ce1a <btrfs_new_fs_info@@Base+0xbc>
   1cdfc:	ldr	r3, [sp, #8]
   1cdfe:	cbz	r3, 1ce1a <btrfs_new_fs_info@@Base+0xbc>
   1ce00:	cmp.w	sl, #0
   1ce04:	beq.n	1ce1a <btrfs_new_fs_info@@Base+0xbc>
   1ce06:	cmp.w	r9, #0
   1ce0a:	beq.n	1ce1a <btrfs_new_fs_info@@Base+0xbc>
   1ce0c:	cmp.w	r8, #0
   1ce10:	beq.n	1ce1a <btrfs_new_fs_info@@Base+0xbc>
   1ce12:	cbz	r7, 1ce1a <btrfs_new_fs_info@@Base+0xbc>
   1ce14:	cbz	r6, 1ce1a <btrfs_new_fs_info@@Base+0xbc>
   1ce16:	cbz	r5, 1ce1a <btrfs_new_fs_info@@Base+0xbc>
   1ce18:	cbnz	r0, 1ce2a <btrfs_new_fs_info@@Base+0xcc>
   1ce1a:	mov	r0, r4
   1ce1c:	movs	r4, #0
   1ce1e:	bl	1cd10 <btrfs_free_fs_info@@Base>
   1ce22:	mov	r0, r4
   1ce24:	add	sp, #20
   1ce26:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ce2a:	add.w	r0, r4, #64	; 0x40
   1ce2e:	bl	16d74 <extent_io_tree_init@@Base>
   1ce32:	add.w	r0, r4, #96	; 0x60
   1ce36:	bl	16d74 <extent_io_tree_init@@Base>
   1ce3a:	add.w	r0, r4, #128	; 0x80
   1ce3e:	bl	16d74 <extent_io_tree_init@@Base>
   1ce42:	add.w	r0, r4, #160	; 0xa0
   1ce46:	bl	16d74 <extent_io_tree_init@@Base>
   1ce4a:	add.w	r0, r4, #192	; 0xc0
   1ce4e:	bl	16d74 <extent_io_tree_init@@Base>
   1ce52:	movs	r3, #0
   1ce54:	add.w	r0, r4, #228	; 0xe4
   1ce58:	str.w	r3, [r4, #224]	; 0xe0
   1ce5c:	str	r3, [r4, #56]	; 0x38
   1ce5e:	bl	16594 <cache_tree_init@@Base>
   1ce62:	movs	r3, #1
   1ce64:	str.w	r3, [r4, #312]	; 0x138
   1ce68:	add.w	r3, r4, #336	; 0x150
   1ce6c:	strd	r3, r3, [r4, #336]	; 0x150
   1ce70:	add.w	r3, r4, #356	; 0x164
   1ce74:	strd	r3, r3, [r4, #356]	; 0x164
   1ce78:	add.w	r3, r4, #344	; 0x158
   1ce7c:	strd	r3, r3, [r4, #344]	; 0x158
   1ce80:	cmp.w	fp, #0
   1ce84:	bne.n	1ce92 <btrfs_new_fs_info@@Base+0x134>
   1ce86:	ldrb.w	r3, [r4, #364]	; 0x16c
   1ce8a:	orr.w	r3, r3, #2
   1ce8e:	strb.w	r3, [r4, #364]	; 0x16c
   1ce92:	ldr	r3, [sp, #0]
   1ce94:	mov.w	r2, #4294967295	; 0xffffffff
   1ce98:	str.w	r3, [r4, #320]	; 0x140
   1ce9c:	ldr	r3, [sp, #4]
   1ce9e:	str.w	r3, [r4, #324]	; 0x144
   1cea2:	mov.w	r3, #4294967295	; 0xffffffff
   1cea6:	strd	r2, r3, [r4, #272]	; 0x110
   1ceaa:	strd	r2, r3, [r4, #280]	; 0x118
   1ceae:	strd	r2, r3, [r4, #288]	; 0x120
   1ceb2:	b.n	1ce22 <btrfs_new_fs_info@@Base+0xc4>

0001ceb4 <btrfs_check_fs_compatibility@@Base>:
   1ceb4:	push	{r0, r1, r4, r5, r6, lr}
   1ceb6:	ldr.w	r4, [r0, #188]	; 0xbc
   1ceba:	ldr.w	r5, [r0, #192]	; 0xc0
   1cebe:	bic.w	r2, r4, #4080	; 0xff0
   1cec2:	ldr	r6, [pc, #128]	; (1cf44 <btrfs_check_fs_compatibility@@Base+0x90>)
   1cec4:	bic.w	r2, r2, #15
   1cec8:	mov	r3, r5
   1ceca:	orrs.w	ip, r2, r3
   1cece:	add	r6, pc
   1ced0:	beq.n	1ceec <btrfs_check_fs_compatibility@@Base+0x38>
   1ced2:	ldr	r1, [pc, #116]	; (1cf48 <btrfs_check_fs_compatibility@@Base+0x94>)
   1ced4:	ldr	r0, [r6, r1]
   1ced6:	strd	r2, r3, [sp]
   1ceda:	ldr	r2, [pc, #112]	; (1cf4c <btrfs_check_fs_compatibility@@Base+0x98>)
   1cedc:	add	r2, pc
   1cede:	ldr	r0, [r0, #0]
   1cee0:	movs	r1, #1
   1cee2:	blx	8a64 <__fprintf_chk@plt+0x4>
   1cee6:	mvn.w	r0, #94	; 0x5e
   1ceea:	b.n	1cf08 <btrfs_check_fs_compatibility@@Base+0x54>
   1ceec:	and.w	r2, r4, #1
   1cef0:	movs	r3, #0
   1cef2:	orrs	r3, r2
   1cef4:	ittt	eq
   1cef6:	streq.w	r5, [r0, #192]	; 0xc0
   1cefa:	orreq.w	r4, r4, #1
   1cefe:	streq.w	r4, [r0, #188]	; 0xbc
   1cf02:	lsls	r4, r1, #31
   1cf04:	bmi.n	1cf0c <btrfs_check_fs_compatibility@@Base+0x58>
   1cf06:	movs	r0, #0
   1cf08:	add	sp, #8
   1cf0a:	pop	{r4, r5, r6, pc}
   1cf0c:	ldr.w	r3, [r0, #180]	; 0xb4
   1cf10:	lsls	r1, r1, #18
   1cf12:	ldr.w	r2, [r0, #184]	; 0xb8
   1cf16:	bic.w	r4, r3, #3
   1cf1a:	itt	mi
   1cf1c:	bicmi.w	r3, r3, #2
   1cf20:	strmi.w	r3, [r0, #180]	; 0xb4
   1cf24:	mov	r5, r2
   1cf26:	itt	mi
   1cf28:	movmi	r3, r4
   1cf2a:	strmi.w	r2, [r0, #184]	; 0xb8
   1cf2e:	orrs.w	r1, r4, r5
   1cf32:	beq.n	1cf06 <btrfs_check_fs_compatibility@@Base+0x52>
   1cf34:	ldr	r1, [pc, #16]	; (1cf48 <btrfs_check_fs_compatibility@@Base+0x94>)
   1cf36:	ldr	r0, [r6, r1]
   1cf38:	strd	r3, r2, [sp]
   1cf3c:	ldr	r2, [pc, #16]	; (1cf50 <btrfs_check_fs_compatibility@@Base+0x9c>)
   1cf3e:	add	r2, pc
   1cf40:	b.n	1cede <btrfs_check_fs_compatibility@@Base+0x2a>
   1cf42:	nop
   1cf44:	ldrb	r2, [r6, #26]
   1cf46:	movs	r4, r0
   1cf48:	lsls	r0, r7, #8
   1cf4a:	movs	r0, r0
   1cf4c:	lsls	r5, r2, #15
   1cf4e:	movs	r2, r0
   1cf50:	lsls	r1, r6, #14
   1cf52:	movs	r2, r0

0001cf54 <btrfs_release_all_roots@@Base>:
   1cf54:	push	{r4, lr}
   1cf56:	mov	r4, r0
   1cf58:	ldr	r3, [r0, #48]	; 0x30
   1cf5a:	cbz	r3, 1cf62 <btrfs_release_all_roots@@Base+0xe>
   1cf5c:	ldr	r0, [r3, #0]
   1cf5e:	bl	17320 <free_extent_buffer@@Base>
   1cf62:	ldr	r3, [r4, #44]	; 0x2c
   1cf64:	cbz	r3, 1cf6c <btrfs_release_all_roots@@Base+0x18>
   1cf66:	ldr	r0, [r3, #0]
   1cf68:	bl	17320 <free_extent_buffer@@Base>
   1cf6c:	ldr	r3, [r4, #40]	; 0x28
   1cf6e:	cbz	r3, 1cf76 <btrfs_release_all_roots@@Base+0x22>
   1cf70:	ldr	r0, [r3, #0]
   1cf72:	bl	17320 <free_extent_buffer@@Base>
   1cf76:	ldr	r3, [r4, #36]	; 0x24
   1cf78:	cbz	r3, 1cf80 <btrfs_release_all_roots@@Base+0x2c>
   1cf7a:	ldr	r0, [r3, #0]
   1cf7c:	bl	17320 <free_extent_buffer@@Base>
   1cf80:	ldr	r3, [r4, #24]
   1cf82:	cbz	r3, 1cf8a <btrfs_release_all_roots@@Base+0x36>
   1cf84:	ldr	r0, [r3, #0]
   1cf86:	bl	17320 <free_extent_buffer@@Base>
   1cf8a:	ldr	r3, [r4, #28]
   1cf8c:	cbz	r3, 1cf94 <btrfs_release_all_roots@@Base+0x40>
   1cf8e:	ldr	r0, [r3, #0]
   1cf90:	bl	17320 <free_extent_buffer@@Base>
   1cf94:	ldr	r3, [r4, #60]	; 0x3c
   1cf96:	cbz	r3, 1cf9e <btrfs_release_all_roots@@Base+0x4a>
   1cf98:	ldr	r0, [r3, #0]
   1cf9a:	bl	17320 <free_extent_buffer@@Base>
   1cf9e:	ldr	r3, [r4, #32]
   1cfa0:	cbz	r3, 1cfa8 <btrfs_release_all_roots@@Base+0x54>
   1cfa2:	ldr	r0, [r3, #0]
   1cfa4:	bl	17320 <free_extent_buffer@@Base>
   1cfa8:	ldr	r3, [r4, #52]	; 0x34
   1cfaa:	cbz	r3, 1cfb6 <btrfs_release_all_roots@@Base+0x62>
   1cfac:	ldmia.w	sp!, {r4, lr}
   1cfb0:	ldr	r0, [r3, #0]
   1cfb2:	b.w	17320 <free_extent_buffer@@Base>
   1cfb6:	pop	{r4, pc}

0001cfb8 <btrfs_cleanup_all_caches@@Base>:
   1cfb8:	push	{r3, r4, r5, lr}
   1cfba:	add.w	r5, r0, #344	; 0x158
   1cfbe:	mov	r4, r0
   1cfc0:	ldr.w	r0, [r4, #344]	; 0x158
   1cfc4:	cmp	r0, r5
   1cfc6:	bne.n	1d000 <btrfs_cleanup_all_caches@@Base+0x48>
   1cfc8:	ldr	r1, [pc, #72]	; (1d014 <btrfs_cleanup_all_caches@@Base+0x5c>)
   1cfca:	add.w	r0, r4, #228	; 0xe4
   1cfce:	add	r1, pc
   1cfd0:	bl	167be <cache_tree_free_extents@@Base>
   1cfd4:	add.w	r0, r4, #64	; 0x40
   1cfd8:	bl	17328 <extent_io_tree_cleanup@@Base>
   1cfdc:	add.w	r0, r4, #96	; 0x60
   1cfe0:	bl	17328 <extent_io_tree_cleanup@@Base>
   1cfe4:	add.w	r0, r4, #128	; 0x80
   1cfe8:	bl	17328 <extent_io_tree_cleanup@@Base>
   1cfec:	add.w	r0, r4, #160	; 0xa0
   1cff0:	bl	17328 <extent_io_tree_cleanup@@Base>
   1cff4:	add.w	r0, r4, #192	; 0xc0
   1cff8:	ldmia.w	sp!, {r3, r4, r5, lr}
   1cffc:	b.w	17328 <extent_io_tree_cleanup@@Base>
   1d000:	ldrd	r2, r3, [r0]
   1d004:	str	r3, [r2, #4]
   1d006:	str	r2, [r3, #0]
   1d008:	strd	r0, r0, [r0]
   1d00c:	subs	r0, #68	; 0x44
   1d00e:	bl	17320 <free_extent_buffer@@Base>
   1d012:	b.n	1cfc0 <btrfs_cleanup_all_caches@@Base+0x8>
   1d014:	bl	ffd59016 <__bss_end__@@Base+0xffcf2d22>

0001d018 <btrfs_scan_fs_devices@@Base>:
   1d018:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d01c:	mov	fp, r2
   1d01e:	ldr	r2, [pc, #220]	; (1d0fc <btrfs_scan_fs_devices@@Base+0xe4>)
   1d020:	sub	sp, #36	; 0x24
   1d022:	ldr	r3, [pc, #220]	; (1d100 <btrfs_scan_fs_devices@@Base+0xe8>)
   1d024:	mov	r7, r0
   1d026:	add	r2, pc
   1d028:	ldrd	r4, r5, [sp, #72]	; 0x48
   1d02c:	mov	sl, r1
   1d02e:	ldr	r6, [pc, #212]	; (1d104 <btrfs_scan_fs_devices@@Base+0xec>)
   1d030:	ldr	r3, [r2, r3]
   1d032:	movs	r2, #0
   1d034:	add	r6, pc
   1d036:	ldr	r3, [r3, #0]
   1d038:	str	r3, [sp, #28]
   1d03a:	mov.w	r3, #0
   1d03e:	orrs.w	r3, r4, r5
   1d042:	mov.w	r3, #2
   1d046:	str	r3, [sp, #0]
   1d048:	mov.w	r3, #0
   1d04c:	itt	eq
   1d04e:	moveq.w	r4, #65536	; 0x10000
   1d052:	moveq	r5, #0
   1d054:	blx	87c0 <lseek64@plt>
   1d058:	cmp	r0, #0
   1d05a:	mov	r8, r0
   1d05c:	sbcs.w	r3, r1, #0
   1d060:	mov	r9, r1
   1d062:	bge.n	1d080 <btrfs_scan_fs_devices@@Base+0x68>
   1d064:	blx	897c <__errno_location@plt>
   1d068:	ldr	r4, [r0, #0]
   1d06a:	negs	r4, r4
   1d06c:	ldr	r2, [pc, #152]	; (1d108 <btrfs_scan_fs_devices@@Base+0xf0>)
   1d06e:	ldr	r3, [pc, #144]	; (1d100 <btrfs_scan_fs_devices@@Base+0xe8>)
   1d070:	add	r2, pc
   1d072:	ldr	r3, [r2, r3]
   1d074:	ldr	r2, [r3, #0]
   1d076:	ldr	r3, [sp, #28]
   1d078:	eors	r2, r3
   1d07a:	beq.n	1d0f2 <btrfs_scan_fs_devices@@Base+0xda>
   1d07c:	blx	8708 <__stack_chk_fail@plt>
   1d080:	movs	r3, #0
   1d082:	movs	r2, #0
   1d084:	str	r3, [sp, #0]
   1d086:	mov	r0, r7
   1d088:	movs	r3, #0
   1d08a:	blx	87c0 <lseek64@plt>
   1d08e:	cmp	r9, r5
   1d090:	it	eq
   1d092:	cmpeq	r8, r4
   1d094:	bcs.n	1d0ac <btrfs_scan_fs_devices@@Base+0x94>
   1d096:	ldr	r0, [pc, #116]	; (1d10c <btrfs_scan_fs_devices@@Base+0xf4>)
   1d098:	mov	r2, r4
   1d09a:	mov	r3, r5
   1d09c:	strd	r8, r9, [sp]
   1d0a0:	add	r0, pc
   1d0a2:	mvn.w	r4, #21
   1d0a6:	bl	17b7c <__btrfs_error@@Base>
   1d0aa:	b.n	1d06c <btrfs_scan_fs_devices@@Base+0x54>
   1d0ac:	ldr	r3, [sp, #80]	; 0x50
   1d0ae:	mov	r2, fp
   1d0b0:	strd	r4, r5, [sp]
   1d0b4:	mov	r1, sl
   1d0b6:	mov	r0, r7
   1d0b8:	str	r3, [sp, #8]
   1d0ba:	add	r3, sp, #16
   1d0bc:	bl	287ec <btrfs_scan_one_device@@Base>
   1d0c0:	mov	r4, r0
   1d0c2:	cbz	r0, 1d0d8 <btrfs_scan_fs_devices@@Base+0xc0>
   1d0c4:	ldr	r3, [pc, #72]	; (1d110 <btrfs_scan_fs_devices@@Base+0xf8>)
   1d0c6:	movs	r1, #1
   1d0c8:	ldr	r2, [pc, #72]	; (1d114 <btrfs_scan_fs_devices@@Base+0xfc>)
   1d0ca:	ldr	r0, [r6, r3]
   1d0cc:	add	r2, pc
   1d0ce:	mov	r3, sl
   1d0d0:	ldr	r0, [r0, #0]
   1d0d2:	blx	8a64 <__fprintf_chk@plt+0x4>
   1d0d6:	b.n	1d06c <btrfs_scan_fs_devices@@Base+0x54>
   1d0d8:	ldr	r3, [sp, #84]	; 0x54
   1d0da:	cmp	r3, #0
   1d0dc:	bne.n	1d06c <btrfs_scan_fs_devices@@Base+0x54>
   1d0de:	ldrd	r2, r3, [sp, #16]
   1d0e2:	cmp	r3, #0
   1d0e4:	it	eq
   1d0e6:	cmpeq	r2, #1
   1d0e8:	beq.n	1d06c <btrfs_scan_fs_devices@@Base+0x54>
   1d0ea:	bl	2fc48 <btrfs_scan_devices@@Base>
   1d0ee:	mov	r4, r0
   1d0f0:	b.n	1d06c <btrfs_scan_fs_devices@@Base+0x54>
   1d0f2:	mov	r0, r4
   1d0f4:	add	sp, #36	; 0x24
   1d0f6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d0fa:	nop
   1d0fc:	ldrb	r2, [r3, #21]
   1d0fe:	movs	r4, r0
   1d100:	lsls	r0, r5, #8
   1d102:	movs	r0, r0
   1d104:	ldrb	r4, [r1, #21]
   1d106:	movs	r4, r0
   1d108:	ldrb	r0, [r2, #20]
   1d10a:	movs	r4, r0
   1d10c:	lsls	r3, r2, #10
   1d10e:	movs	r2, r0
   1d110:	lsls	r0, r7, #8
   1d112:	movs	r0, r0
   1d114:	lsls	r6, r3, #10
   1d116:	movs	r2, r0

0001d118 <btrfs_check_super@@Base>:
   1d118:	ldr	r2, [pc, #580]	; (1d360 <btrfs_check_super@@Base+0x248>)
   1d11a:	ldr	r3, [pc, #584]	; (1d364 <btrfs_check_super@@Base+0x24c>)
   1d11c:	add	r2, pc
   1d11e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1d122:	sub	sp, #132	; 0x84
   1d124:	ldr	r3, [r2, r3]
   1d126:	mov	r4, r0
   1d128:	mov	r7, r1
   1d12a:	ldr	r3, [r3, #0]
   1d12c:	str	r3, [sp, #124]	; 0x7c
   1d12e:	mov.w	r3, #0
   1d132:	ldr	r2, [r0, #64]	; 0x40
   1d134:	ldr	r3, [r0, #68]	; 0x44
   1d136:	add	r1, pc, #544	; (adr r1, 1d358 <btrfs_check_super@@Base+0x240>)
   1d138:	ldrd	r0, r1, [r1]
   1d13c:	cmp	r3, r1
   1d13e:	it	eq
   1d140:	cmpeq	r2, r0
   1d142:	bne.n	1d152 <btrfs_check_super@@Base+0x3a>
   1d144:	lsls	r3, r7, #30
   1d146:	bmi.n	1d152 <btrfs_check_super@@Base+0x3a>
   1d148:	ldr	r0, [pc, #540]	; (1d368 <btrfs_check_super@@Base+0x250>)
   1d14a:	add	r0, pc
   1d14c:	bl	17b7c <__btrfs_error@@Base>
   1d150:	b.n	1d168 <btrfs_check_super@@Base+0x50>
   1d152:	ldrh.w	r9, [r4, #196]	; 0xc4
   1d156:	bl	18534 <btrfs_super_num_csums@@Base>
   1d15a:	cmp	r9, r0
   1d15c:	bcc.n	1d182 <btrfs_check_super@@Base+0x6a>
   1d15e:	ldr	r0, [pc, #524]	; (1d36c <btrfs_check_super@@Base+0x254>)
   1d160:	mov	r1, r9
   1d162:	add	r0, pc
   1d164:	bl	17b7c <__btrfs_error@@Base>
   1d168:	mvn.w	r5, #4
   1d16c:	ldr	r2, [pc, #512]	; (1d370 <btrfs_check_super@@Base+0x258>)
   1d16e:	ldr	r3, [pc, #500]	; (1d364 <btrfs_check_super@@Base+0x24c>)
   1d170:	add	r2, pc
   1d172:	ldr	r3, [r2, r3]
   1d174:	ldr	r2, [r3, #0]
   1d176:	ldr	r3, [sp, #124]	; 0x7c
   1d178:	eors	r2, r3
   1d17a:	beq.w	1d34e <btrfs_check_super@@Base+0x236>
   1d17e:	blx	8708 <__stack_chk_fail@plt>
   1d182:	mov	r0, r4
   1d184:	add	r5, sp, #12
   1d186:	bl	18510 <btrfs_super_csum_size@@Base>
   1d18a:	add.w	r6, r4, #32
   1d18e:	mov	r2, r5
   1d190:	mov.w	r3, #4064	; 0xfe0
   1d194:	mov	r1, r6
   1d196:	mov	r8, r0
   1d198:	mov	r0, r9
   1d19a:	bl	1c746 <btrfs_csum_data@@Base>
   1d19e:	mov	r0, r5
   1d1a0:	mov	r2, r8
   1d1a2:	mov	r1, r4
   1d1a4:	blx	86a0 <memcmp@plt+0x4>
   1d1a8:	mov	r5, r0
   1d1aa:	cbz	r0, 1d1b2 <btrfs_check_super@@Base+0x9a>
   1d1ac:	ldr	r0, [pc, #452]	; (1d374 <btrfs_check_super@@Base+0x25c>)
   1d1ae:	add	r0, pc
   1d1b0:	b.n	1d14c <btrfs_check_super@@Base+0x34>
   1d1b2:	ldrb.w	r1, [r4, #198]	; 0xc6
   1d1b6:	cmp	r1, #7
   1d1b8:	bls.n	1d1c6 <btrfs_check_super@@Base+0xae>
   1d1ba:	ldr	r0, [pc, #444]	; (1d378 <btrfs_check_super@@Base+0x260>)
   1d1bc:	movs	r2, #8
   1d1be:	add	r0, pc
   1d1c0:	bl	17b7c <__btrfs_error@@Base>
   1d1c4:	b.n	1d1fc <btrfs_check_super@@Base+0xe4>
   1d1c6:	ldrb.w	r1, [r4, #199]	; 0xc7
   1d1ca:	cmp	r1, #7
   1d1cc:	bls.n	1d1d6 <btrfs_check_super@@Base+0xbe>
   1d1ce:	ldr	r0, [pc, #428]	; (1d37c <btrfs_check_super@@Base+0x264>)
   1d1d0:	movs	r2, #8
   1d1d2:	add	r0, pc
   1d1d4:	b.n	1d1c0 <btrfs_check_super@@Base+0xa8>
   1d1d6:	ldrb.w	r1, [r4, #200]	; 0xc8
   1d1da:	cmp	r1, #7
   1d1dc:	bls.n	1d1e6 <btrfs_check_super@@Base+0xce>
   1d1de:	ldr	r0, [pc, #416]	; (1d380 <btrfs_check_super@@Base+0x268>)
   1d1e0:	movs	r2, #8
   1d1e2:	add	r0, pc
   1d1e4:	b.n	1d1c0 <btrfs_check_super@@Base+0xa8>
   1d1e6:	ldr	r2, [r4, #80]	; 0x50
   1d1e8:	mov	r1, r5
   1d1ea:	ldr	r3, [r4, #84]	; 0x54
   1d1ec:	ubfx	r0, r2, #0, #12
   1d1f0:	orrs	r1, r0
   1d1f2:	beq.n	1d202 <btrfs_check_super@@Base+0xea>
   1d1f4:	ldr	r0, [pc, #396]	; (1d384 <btrfs_check_super@@Base+0x26c>)
   1d1f6:	add	r0, pc
   1d1f8:	bl	17b7c <__btrfs_error@@Base>
   1d1fc:	ldr	r0, [pc, #392]	; (1d388 <btrfs_check_super@@Base+0x270>)
   1d1fe:	add	r0, pc
   1d200:	b.n	1d14c <btrfs_check_super@@Base+0x34>
   1d202:	ldr	r2, [r4, #88]	; 0x58
   1d204:	mov	r1, r5
   1d206:	ldr	r3, [r4, #92]	; 0x5c
   1d208:	ubfx	r0, r2, #0, #12
   1d20c:	orrs	r1, r0
   1d20e:	beq.n	1d216 <btrfs_check_super@@Base+0xfe>
   1d210:	ldr	r0, [pc, #376]	; (1d38c <btrfs_check_super@@Base+0x274>)
   1d212:	add	r0, pc
   1d214:	b.n	1d1f8 <btrfs_check_super@@Base+0xe0>
   1d216:	ldr	r2, [r4, #96]	; 0x60
   1d218:	mov	r1, r5
   1d21a:	ldr	r3, [r4, #100]	; 0x64
   1d21c:	ubfx	r0, r2, #0, #12
   1d220:	orrs	r1, r0
   1d222:	beq.n	1d22a <btrfs_check_super@@Base+0x112>
   1d224:	ldr	r0, [pc, #360]	; (1d390 <btrfs_check_super@@Base+0x278>)
   1d226:	add	r0, pc
   1d228:	b.n	1d1f8 <btrfs_check_super@@Base+0xe0>
   1d22a:	ldr.w	r1, [r4, #148]	; 0x94
   1d22e:	cmp.w	r1, #4096	; 0x1000
   1d232:	bcs.n	1d23e <btrfs_check_super@@Base+0x126>
   1d234:	ldr	r0, [pc, #348]	; (1d394 <btrfs_check_super@@Base+0x27c>)
   1d236:	add	r0, pc
   1d238:	bl	17b7c <__btrfs_error@@Base>
   1d23c:	b.n	1d1fc <btrfs_check_super@@Base+0xe4>
   1d23e:	ubfx	r3, r1, #0, #12
   1d242:	cbz	r3, 1d24a <btrfs_check_super@@Base+0x132>
   1d244:	ldr	r0, [pc, #336]	; (1d398 <btrfs_check_super@@Base+0x280>)
   1d246:	add	r0, pc
   1d248:	b.n	1d238 <btrfs_check_super@@Base+0x120>
   1d24a:	ldr.w	ip, [r4, #144]	; 0x90
   1d24e:	cmp.w	ip, #4096	; 0x1000
   1d252:	bcs.n	1d25c <btrfs_check_super@@Base+0x144>
   1d254:	ldr	r0, [pc, #324]	; (1d39c <btrfs_check_super@@Base+0x284>)
   1d256:	mov	r1, ip
   1d258:	add	r0, pc
   1d25a:	b.n	1d238 <btrfs_check_super@@Base+0x120>
   1d25c:	ubfx	r3, ip, #0, #12
   1d260:	cbz	r3, 1d26a <btrfs_check_super@@Base+0x152>
   1d262:	ldr	r0, [pc, #316]	; (1d3a0 <btrfs_check_super@@Base+0x288>)
   1d264:	mov	r1, ip
   1d266:	add	r0, pc
   1d268:	b.n	1d238 <btrfs_check_super@@Base+0x120>
   1d26a:	ldr	r2, [r4, #112]	; 0x70
   1d26c:	ldr	r3, [r4, #116]	; 0x74
   1d26e:	orrs	r3, r2
   1d270:	bne.n	1d27c <btrfs_check_super@@Base+0x164>
   1d272:	ldr	r0, [pc, #304]	; (1d3a4 <btrfs_check_super@@Base+0x28c>)
   1d274:	add	r0, pc
   1d276:	bl	17b7c <__btrfs_error@@Base>
   1d27a:	b.n	1d1fc <btrfs_check_super@@Base+0xe4>
   1d27c:	movs	r0, #6
   1d27e:	ldr	r3, [r4, #124]	; 0x7c
   1d280:	muls	r0, r1
   1d282:	ldr	r2, [r4, #120]	; 0x78
   1d284:	movs	r1, #0
   1d286:	cmp	r3, r1
   1d288:	it	eq
   1d28a:	cmpeq	r2, r0
   1d28c:	bcs.n	1d294 <btrfs_check_super@@Base+0x17c>
   1d28e:	ldr	r0, [pc, #280]	; (1d3a8 <btrfs_check_super@@Base+0x290>)
   1d290:	add	r0, pc
   1d292:	b.n	1d1f8 <btrfs_check_super@@Base+0xe0>
   1d294:	ldr.w	r1, [r4, #156]	; 0x9c
   1d298:	cmp.w	r1, #4096	; 0x1000
   1d29c:	beq.n	1d2a8 <btrfs_check_super@@Base+0x190>
   1d29e:	cmp	r1, ip
   1d2a0:	beq.n	1d2a8 <btrfs_check_super@@Base+0x190>
   1d2a2:	ldr	r0, [pc, #264]	; (1d3ac <btrfs_check_super@@Base+0x294>)
   1d2a4:	add	r0, pc
   1d2a6:	b.n	1d238 <btrfs_check_super@@Base+0x120>
   1d2a8:	ldr.w	r1, [r4, #188]	; 0xbc
   1d2ac:	movs	r3, #0
   1d2ae:	and.w	r2, r1, #1024	; 0x400
   1d2b2:	orrs	r3, r2
   1d2b4:	mov.w	r2, #16
   1d2b8:	ite	ne
   1d2ba:	addwne	r0, r4, #571	; 0x23b
   1d2be:	moveq	r0, r6
   1d2c0:	addw	r6, r4, #283	; 0x11b
   1d2c4:	mov	r1, r6
   1d2c6:	blx	86a0 <memcmp@plt+0x4>
   1d2ca:	cbz	r0, 1d2f6 <btrfs_check_super@@Base+0x1de>
   1d2cc:	add	r2, sp, #44	; 0x2c
   1d2ce:	addw	r0, r4, #571	; 0x23b
   1d2d2:	str	r2, [sp, #4]
   1d2d4:	mov	r1, r2
   1d2d6:	blx	85c4 <uuid_unparse@plt>
   1d2da:	add	r1, sp, #84	; 0x54
   1d2dc:	mov	r0, r6
   1d2de:	str	r1, [sp, #0]
   1d2e0:	blx	85c4 <uuid_unparse@plt>
   1d2e4:	tst.w	r7, #4
   1d2e8:	ldrd	r1, r2, [sp]
   1d2ec:	beq.n	1d326 <btrfs_check_super@@Base+0x20e>
   1d2ee:	ldr	r0, [pc, #192]	; (1d3b0 <btrfs_check_super@@Base+0x298>)
   1d2f0:	add	r0, pc
   1d2f2:	bl	17b00 <__btrfs_warning@@Base>
   1d2f6:	ldr.w	r3, [r4, #140]	; 0x8c
   1d2fa:	movs	r1, #0
   1d2fc:	ldr.w	r2, [r4, #136]	; 0x88
   1d300:	mov.w	r0, #2147483648	; 0x80000000
   1d304:	cmp	r1, r3
   1d306:	it	eq
   1d308:	cmpeq	r0, r2
   1d30a:	bcs.n	1d314 <btrfs_check_super@@Base+0x1fc>
   1d30c:	ldr	r0, [pc, #164]	; (1d3b4 <btrfs_check_super@@Base+0x29c>)
   1d30e:	add	r0, pc
   1d310:	bl	17b00 <__btrfs_warning@@Base>
   1d314:	ldr.w	r2, [r4, #136]	; 0x88
   1d318:	ldr.w	r3, [r4, #140]	; 0x8c
   1d31c:	orrs	r3, r2
   1d31e:	bne.n	1d32c <btrfs_check_super@@Base+0x214>
   1d320:	ldr	r0, [pc, #148]	; (1d3b8 <btrfs_check_super@@Base+0x2a0>)
   1d322:	add	r0, pc
   1d324:	b.n	1d276 <btrfs_check_super@@Base+0x15e>
   1d326:	ldr	r0, [pc, #148]	; (1d3bc <btrfs_check_super@@Base+0x2a4>)
   1d328:	add	r0, pc
   1d32a:	b.n	1d1c0 <btrfs_check_super@@Base+0xa8>
   1d32c:	ldr.w	r1, [r4, #160]	; 0xa0
   1d330:	cmp.w	r1, #2048	; 0x800
   1d334:	bls.n	1d340 <btrfs_check_super@@Base+0x228>
   1d336:	ldr	r0, [pc, #136]	; (1d3c0 <btrfs_check_super@@Base+0x2a8>)
   1d338:	mov.w	r2, #2048	; 0x800
   1d33c:	add	r0, pc
   1d33e:	b.n	1d1c0 <btrfs_check_super@@Base+0xa8>
   1d340:	cmp	r1, #96	; 0x60
   1d342:	bhi.w	1d16c <btrfs_check_super@@Base+0x54>
   1d346:	ldr	r0, [pc, #124]	; (1d3c4 <btrfs_check_super@@Base+0x2ac>)
   1d348:	movs	r2, #97	; 0x61
   1d34a:	add	r0, pc
   1d34c:	b.n	1d1c0 <btrfs_check_super@@Base+0xa8>
   1d34e:	mov	r0, r5
   1d350:	add	sp, #132	; 0x84
   1d352:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1d356:	nop
   1d358:	tst	r1, r4
   1d35a:	strh	r0, [r1, r1]
   1d35c:	strh	r6, [r4, r5]
   1d35e:	ldr	r5, [pc, #380]	; (1d4dc <btrfs_read_dev_super@@Base+0x114>)
   1d360:	ldrb	r4, [r4, #17]
   1d362:	movs	r4, r0
   1d364:	lsls	r0, r5, #8
   1d366:	movs	r0, r0
   1d368:	lsls	r4, r7, #8
   1d36a:	movs	r2, r0
   1d36c:	lsls	r3, r0, #9
   1d36e:	movs	r2, r0
   1d370:	ldrb	r0, [r2, #16]
   1d372:	movs	r4, r0
   1d374:	lsls	r1, r3, #8
   1d376:	movs	r2, r0
   1d378:	lsls	r6, r4, #8
   1d37a:	movs	r2, r0
   1d37c:	lsls	r4, r6, #8
   1d37e:	movs	r2, r0
   1d380:	lsls	r7, r0, #9
   1d382:	movs	r2, r0
   1d384:	lsls	r4, r2, #9
   1d386:	movs	r2, r0
   1d388:	lsls	r7, r6, #16
   1d38a:	movs	r2, r0
   1d38c:	lsls	r0, r3, #9
   1d38e:	movs	r2, r0
   1d390:	lsls	r5, r4, #9
   1d392:	movs	r2, r0
   1d394:	lsls	r4, r6, #9
   1d396:	movs	r2, r0
   1d398:	lsls	r2, r0, #10
   1d39a:	movs	r2, r0
   1d39c:	lsls	r7, r0, #10
   1d39e:	movs	r2, r0
   1d3a0:	lsls	r1, r3, #10
   1d3a2:	movs	r2, r0
   1d3a4:	lsls	r4, r4, #10
   1d3a6:	movs	r2, r0
   1d3a8:	lsls	r6, r3, #10
   1d3aa:	movs	r2, r0
   1d3ac:	lsls	r2, r4, #10
   1d3ae:	movs	r2, r0
   1d3b0:	lsls	r4, r5, #9
   1d3b2:	movs	r2, r0
   1d3b4:	lsls	r4, r4, #10
   1d3b6:	movs	r2, r0
   1d3b8:	lsls	r3, r6, #10
   1d3ba:	movs	r2, r0
   1d3bc:	lsls	r6, r3, #9
   1d3be:	movs	r2, r0
   1d3c0:	lsls	r0, r6, #10
   1d3c2:	movs	r2, r0
   1d3c4:	lsls	r5, r0, #11
   1d3c6:	movs	r2, r0

0001d3c8 <btrfs_read_dev_super@@Base>:
   1d3c8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d3cc:	mov	sl, r2
   1d3ce:	vpush	{d8-d9}
   1d3d2:	mov	fp, r3
   1d3d4:	ldr	r2, [pc, #496]	; (1d5c8 <btrfs_read_dev_super@@Base+0x200>)
   1d3d6:	vmov	s16, r1
   1d3da:	ldr	r1, [pc, #496]	; (1d5cc <btrfs_read_dev_super@@Base+0x204>)
   1d3dc:	sub.w	sp, sp, #4160	; 0x1040
   1d3e0:	vmov	s17, r0
   1d3e4:	add	r1, pc
   1d3e6:	sub	sp, #12
   1d3e8:	add.w	r3, sp, #4160	; 0x1040
   1d3ec:	add	r4, sp, #68	; 0x44
   1d3ee:	ldr	r2, [r1, r2]
   1d3f0:	adds	r3, #4
   1d3f2:	ldr	r2, [r2, #0]
   1d3f4:	str	r2, [r3, #0]
   1d3f6:	mov.w	r2, #0
   1d3fa:	add.w	r3, sp, #4224	; 0x1080
   1d3fe:	ldr	r3, [r3, #0]
   1d400:	tst.w	r3, #1
   1d404:	ite	ne
   1d406:	movne	r3, #3
   1d408:	moveq	r3, #1
   1d40a:	cmp.w	fp, #0
   1d40e:	str	r3, [sp, #28]
   1d410:	it	eq
   1d412:	cmpeq.w	sl, #65536	; 0x10000
   1d416:	beq.w	1d556 <btrfs_read_dev_super@@Base+0x18e>
   1d41a:	mov.w	r2, #4096	; 0x1000
   1d41e:	mov	r1, r4
   1d420:	strd	sl, fp, [sp]
   1d424:	blx	8808 <pread64@plt>
   1d428:	cmp	r0, #0
   1d42a:	bge.n	1d450 <btrfs_read_dev_super@@Base+0x88>
   1d42c:	blx	897c <__errno_location@plt>
   1d430:	ldr	r0, [r0, #0]
   1d432:	negs	r0, r0
   1d434:	ldr	r1, [pc, #408]	; (1d5d0 <btrfs_read_dev_super@@Base+0x208>)
   1d436:	add.w	r3, sp, #4160	; 0x1040
   1d43a:	ldr	r2, [pc, #396]	; (1d5c8 <btrfs_read_dev_super@@Base+0x200>)
   1d43c:	adds	r3, #4
   1d43e:	add	r1, pc
   1d440:	ldr	r2, [r1, r2]
   1d442:	ldr	r1, [r2, #0]
   1d444:	ldr	r2, [r3, #0]
   1d446:	eors	r1, r2
   1d448:	beq.w	1d5b8 <btrfs_read_dev_super@@Base+0x1f0>
   1d44c:	blx	8708 <__stack_chk_fail@plt>
   1d450:	cmp.w	r0, #4096	; 0x1000
   1d454:	blt.w	1d5ac <btrfs_read_dev_super@@Base+0x1e4>
   1d458:	ldrd	r2, r3, [r4, #48]	; 0x30
   1d45c:	cmp	fp, r3
   1d45e:	it	eq
   1d460:	cmpeq	sl, r2
   1d462:	bne.w	1d5b2 <btrfs_read_dev_super@@Base+0x1ea>
   1d466:	add.w	r3, sp, #4224	; 0x1080
   1d46a:	mov	r0, r4
   1d46c:	ldr	r1, [r3, #0]
   1d46e:	bl	1d118 <btrfs_check_super@@Base>
   1d472:	cmp	r0, #0
   1d474:	blt.n	1d434 <btrfs_read_dev_super@@Base+0x6c>
   1d476:	vmov	r0, s16
   1d47a:	mov.w	r2, #4096	; 0x1000
   1d47e:	mov	r1, r4
   1d480:	blx	866c <memcpy@plt+0x4>
   1d484:	movs	r0, #0
   1d486:	b.n	1d434 <btrfs_read_dev_super@@Base+0x6c>
   1d488:	movs	r3, #12
   1d48a:	mov.w	r2, #16384	; 0x4000
   1d48e:	muls	r3, r5
   1d490:	sub.w	r0, r3, #32
   1d494:	rsb	r1, r3, #32
   1d498:	lsl.w	fp, r2, r0
   1d49c:	lsr.w	r1, r2, r1
   1d4a0:	orr.w	fp, fp, r1
   1d4a4:	lsl.w	sl, r2, r3
   1d4a8:	vmov	r0, s17
   1d4ac:	mov.w	r2, #4096	; 0x1000
   1d4b0:	mov	r1, r4
   1d4b2:	strd	sl, fp, [sp]
   1d4b6:	blx	8808 <pread64@plt>
   1d4ba:	cmp.w	r0, #4096	; 0x1000
   1d4be:	blt.n	1d59c <btrfs_read_dev_super@@Base+0x1d4>
   1d4c0:	ldrd	r2, r3, [r4, #48]	; 0x30
   1d4c4:	cmp	fp, r3
   1d4c6:	it	eq
   1d4c8:	cmpeq	sl, r2
   1d4ca:	bne.n	1d592 <btrfs_read_dev_super@@Base+0x1ca>
   1d4cc:	ldrd	r2, r3, [r4, #64]	; 0x40
   1d4d0:	orrs	r3, r2
   1d4d2:	bne.n	1d4d8 <btrfs_read_dev_super@@Base+0x110>
   1d4d4:	cmp	r5, #0
   1d4d6:	beq.n	1d59c <btrfs_read_dev_super@@Base+0x1d4>
   1d4d8:	add.w	r3, sp, #4224	; 0x1080
   1d4dc:	mov	r0, r4
   1d4de:	ldr	r1, [r3, #0]
   1d4e0:	bl	1d118 <btrfs_check_super@@Base>
   1d4e4:	cmp	r0, #0
   1d4e6:	bne.n	1d592 <btrfs_read_dev_super@@Base+0x1ca>
   1d4e8:	cmp.w	r8, #0
   1d4ec:	bne.n	1d56e <btrfs_read_dev_super@@Base+0x1a6>
   1d4ee:	ldr.w	r3, [r4, #188]	; 0xbc
   1d4f2:	and.w	r3, r3, #1024	; 0x400
   1d4f6:	strd	r3, r8, [sp, #16]
   1d4fa:	ldrd	r2, r3, [sp, #16]
   1d4fe:	orrs	r3, r2
   1d500:	beq.n	1d522 <btrfs_read_dev_super@@Base+0x15a>
   1d502:	addw	r3, r6, #567	; 0x237
   1d506:	sub.w	r7, r6, #20
   1d50a:	addw	ip, r6, #583	; 0x247
   1d50e:	ldr	r0, [r3, #0]
   1d510:	adds	r3, #8
   1d512:	ldr.w	r1, [r3, #-4]
   1d516:	cmp	r3, ip
   1d518:	mov	r2, r7
   1d51a:	stmia	r2!, {r0, r1}
   1d51c:	mov	r7, r2
   1d51e:	bne.n	1d50e <btrfs_read_dev_super@@Base+0x146>
   1d520:	movs	r7, #1
   1d522:	add	r3, sp, #100	; 0x64
   1d524:	add.w	ip, sp, #36	; 0x24
   1d528:	ldmia	r3, {r0, r1, r2, r3}
   1d52a:	stmia.w	ip, {r0, r1, r2, r3}
   1d52e:	ldrd	r8, r9, [r4, #72]	; 0x48
   1d532:	ldrd	r2, r3, [sp, #8]
   1d536:	cmp	r3, r9
   1d538:	it	eq
   1d53a:	cmpeq	r2, r8
   1d53c:	bcs.n	1d550 <btrfs_read_dev_super@@Base+0x188>
   1d53e:	vmov	r0, s16
   1d542:	mov.w	r2, #4096	; 0x1000
   1d546:	mov	r1, r4
   1d548:	blx	866c <memcpy@plt+0x4>
   1d54c:	strd	r8, r9, [sp, #8]
   1d550:	mov.w	r8, #1
   1d554:	b.n	1d592 <btrfs_read_dev_super@@Base+0x1ca>
   1d556:	movs	r3, #0
   1d558:	movs	r2, #0
   1d55a:	strd	r2, r3, [sp, #8]
   1d55e:	add	r3, sp, #100	; 0x64
   1d560:	movs	r7, #0
   1d562:	add	r6, sp, #72	; 0x48
   1d564:	vmov	s18, r3
   1d568:	mov	r5, r7
   1d56a:	mov	r8, r7
   1d56c:	b.n	1d4a8 <btrfs_read_dev_super@@Base+0xe0>
   1d56e:	vmov	r1, s18
   1d572:	add	r0, sp, #36	; 0x24
   1d574:	movs	r2, #16
   1d576:	blx	86a0 <memcmp@plt+0x4>
   1d57a:	cbnz	r0, 1d592 <btrfs_read_dev_super@@Base+0x1ca>
   1d57c:	cmp	r7, #0
   1d57e:	beq.n	1d52e <btrfs_read_dev_super@@Base+0x166>
   1d580:	addw	r1, r6, #567	; 0x237
   1d584:	sub.w	r0, r6, #20
   1d588:	movs	r2, #16
   1d58a:	blx	86a0 <memcmp@plt+0x4>
   1d58e:	cmp	r0, #0
   1d590:	beq.n	1d52e <btrfs_read_dev_super@@Base+0x166>
   1d592:	ldr	r3, [sp, #28]
   1d594:	adds	r5, #1
   1d596:	cmp	r3, r5
   1d598:	bne.w	1d488 <btrfs_read_dev_super@@Base+0xc0>
   1d59c:	ldrd	r3, r2, [sp, #8]
   1d5a0:	orrs	r3, r2
   1d5a2:	ite	eq
   1d5a4:	moveq.w	r0, #4294967295	; 0xffffffff
   1d5a8:	movne	r0, #0
   1d5aa:	b.n	1d434 <btrfs_read_dev_super@@Base+0x6c>
   1d5ac:	mvn.w	r0, #1
   1d5b0:	b.n	1d434 <btrfs_read_dev_super@@Base+0x6c>
   1d5b2:	mvn.w	r0, #4
   1d5b6:	b.n	1d434 <btrfs_read_dev_super@@Base+0x6c>
   1d5b8:	add.w	sp, sp, #4160	; 0x1040
   1d5bc:	add	sp, #12
   1d5be:	vpop	{d8-d9}
   1d5c2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d5c6:	nop
   1d5c8:	lsls	r0, r5, #8
   1d5ca:	movs	r0, r0
   1d5cc:	ldrb	r4, [r3, #6]
   1d5ce:	movs	r4, r0
   1d5d0:	ldrb	r2, [r0, #5]
   1d5d2:	movs	r4, r0

0001d5d4 <write_all_supers@@Base>:
   1d5d4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d5d8:	mov	r4, r0
   1d5da:	vpush	{d8}
   1d5de:	ldr	r2, [pc, #1004]	; (1d9cc <write_all_supers@@Base+0x3f8>)
   1d5e0:	ldr	r3, [pc, #1004]	; (1d9d0 <write_all_supers@@Base+0x3fc>)
   1d5e2:	add	r2, pc
   1d5e4:	ldr.w	r5, [r0, #308]	; 0x134
   1d5e8:	sub	sp, #68	; 0x44
   1d5ea:	ldr	r3, [r2, r3]
   1d5ec:	ldr.w	r7, [r0, #352]	; 0x160
   1d5f0:	mov	r0, r5
   1d5f2:	ldr	r3, [r3, #0]
   1d5f4:	str	r3, [sp, #60]	; 0x3c
   1d5f6:	mov.w	r3, #0
   1d5fa:	add.w	r3, r7, #72	; 0x48
   1d5fe:	str	r3, [sp, #20]
   1d600:	bl	1c3ba <btrfs_fs_roots_compare_roots@@Base+0x4>
   1d604:	addw	r5, r5, #2859	; 0xb2b
   1d608:	movs	r3, #168	; 0xa8
   1d60a:	mla	r3, r3, r0, r5
   1d60e:	ldr.w	r8, [r3, #8]
   1d612:	ldr.w	r9, [r3, #12]
   1d616:	ldr	r3, [r4, #28]
   1d618:	ldr	r1, [r3, #0]
   1d61a:	ldr.w	r3, [r1, #180]	; 0xb4
   1d61e:	ldr.w	r2, [r1, #176]	; 0xb0
   1d622:	cmp	r9, r3
   1d624:	it	eq
   1d626:	cmpeq	r8, r2
   1d628:	beq.n	1d63a <write_all_supers@@Base+0x66>
   1d62a:	adds	r0, #1
   1d62c:	negs	r3, r0
   1d62e:	and.w	r0, r0, #3
   1d632:	and.w	r3, r3, #3
   1d636:	it	pl
   1d638:	negpl	r0, r3
   1d63a:	movs	r2, #168	; 0xa8
   1d63c:	movs	r1, #0
   1d63e:	mul.w	r6, r2, r0
   1d642:	adds	r3, r5, r6
   1d644:	mov	r0, r3
   1d646:	blx	89bc <memset@plt+0x4>
   1d64a:	ldr	r2, [r4, #28]
   1d64c:	ldr	r2, [r2, #0]
   1d64e:	ldrd	r1, r2, [r2, #40]	; 0x28
   1d652:	str	r1, [r5, r6]
   1d654:	str	r2, [r0, #4]
   1d656:	mov	r3, r0
   1d658:	ldr	r2, [r4, #28]
   1d65a:	ldr	r2, [r2, #0]
   1d65c:	ldr.w	r1, [r2, #176]	; 0xb0
   1d660:	ldr.w	r2, [r2, #180]	; 0xb4
   1d664:	str	r1, [r0, #8]
   1d666:	str	r2, [r0, #12]
   1d668:	ldr	r2, [r4, #28]
   1d66a:	ldr	r2, [r2, #0]
   1d66c:	ldrb.w	r2, [r2, #196]	; 0xc4
   1d670:	strb.w	r2, [r0, #152]	; 0x98
   1d674:	ldr	r2, [r4, #32]
   1d676:	ldr	r2, [r2, #0]
   1d678:	ldrd	r1, r2, [r2, #40]	; 0x28
   1d67c:	str	r1, [r0, #16]
   1d67e:	str	r2, [r0, #20]
   1d680:	ldr	r2, [r4, #32]
   1d682:	ldr	r2, [r2, #0]
   1d684:	ldr.w	r1, [r2, #176]	; 0xb0
   1d688:	ldr.w	r2, [r2, #180]	; 0xb4
   1d68c:	str	r1, [r0, #24]
   1d68e:	str	r2, [r0, #28]
   1d690:	ldr	r2, [r4, #32]
   1d692:	ldr	r2, [r2, #0]
   1d694:	ldrb.w	r2, [r2, #196]	; 0xc4
   1d698:	strb.w	r2, [r0, #153]	; 0x99
   1d69c:	ldr	r2, [r4, #24]
   1d69e:	ldr	r2, [r2, #0]
   1d6a0:	ldrd	r1, r2, [r2, #40]	; 0x28
   1d6a4:	str	r1, [r0, #32]
   1d6a6:	str	r2, [r0, #36]	; 0x24
   1d6a8:	ldr	r2, [r4, #24]
   1d6aa:	ldr	r2, [r2, #0]
   1d6ac:	ldr.w	r1, [r2, #176]	; 0xb0
   1d6b0:	ldr.w	r2, [r2, #180]	; 0xb4
   1d6b4:	str	r1, [r0, #40]	; 0x28
   1d6b6:	str	r2, [r0, #44]	; 0x2c
   1d6b8:	ldr	r2, [r4, #24]
   1d6ba:	ldr	r2, [r2, #0]
   1d6bc:	ldrb.w	r2, [r2, #196]	; 0xc4
   1d6c0:	strb.w	r2, [r0, #154]	; 0x9a
   1d6c4:	ldr	r2, [r4, #20]
   1d6c6:	cbz	r2, 1d6f0 <write_all_supers@@Base+0x11c>
   1d6c8:	ldr	r2, [r2, #0]
   1d6ca:	cbz	r2, 1d6f0 <write_all_supers@@Base+0x11c>
   1d6cc:	ldrd	r1, r2, [r2, #40]	; 0x28
   1d6d0:	str	r1, [r0, #48]	; 0x30
   1d6d2:	str	r2, [r0, #52]	; 0x34
   1d6d4:	ldr	r2, [r4, #20]
   1d6d6:	ldr	r2, [r2, #0]
   1d6d8:	ldr.w	r1, [r2, #176]	; 0xb0
   1d6dc:	ldr.w	r2, [r2, #180]	; 0xb4
   1d6e0:	str	r1, [r0, #56]	; 0x38
   1d6e2:	str	r2, [r0, #60]	; 0x3c
   1d6e4:	ldr	r2, [r4, #20]
   1d6e6:	ldr	r2, [r2, #0]
   1d6e8:	ldrb.w	r2, [r2, #196]	; 0xc4
   1d6ec:	strb.w	r2, [r0, #155]	; 0x9b
   1d6f0:	ldr	r2, [r4, #36]	; 0x24
   1d6f2:	add.w	sl, sp, #28
   1d6f6:	ldr	r2, [r2, #0]
   1d6f8:	ldrd	r1, r2, [r2, #40]	; 0x28
   1d6fc:	str	r1, [r3, #64]	; 0x40
   1d6fe:	str	r2, [r3, #68]	; 0x44
   1d700:	ldr	r2, [r4, #36]	; 0x24
   1d702:	ldr	r2, [r2, #0]
   1d704:	ldr.w	r1, [r2, #176]	; 0xb0
   1d708:	ldr.w	r2, [r2, #180]	; 0xb4
   1d70c:	str	r1, [r3, #72]	; 0x48
   1d70e:	str	r2, [r3, #76]	; 0x4c
   1d710:	ldr	r2, [r4, #36]	; 0x24
   1d712:	ldr	r2, [r2, #0]
   1d714:	ldrb.w	r2, [r2, #196]	; 0xc4
   1d718:	strb.w	r2, [r3, #156]	; 0x9c
   1d71c:	ldr	r2, [r4, #40]	; 0x28
   1d71e:	ldr	r2, [r2, #0]
   1d720:	ldrd	r1, r2, [r2, #40]	; 0x28
   1d724:	str	r1, [r3, #80]	; 0x50
   1d726:	str	r2, [r3, #84]	; 0x54
   1d728:	ldr	r2, [r4, #40]	; 0x28
   1d72a:	ldr	r2, [r2, #0]
   1d72c:	ldr.w	r1, [r2, #176]	; 0xb0
   1d730:	ldr.w	r2, [r2, #180]	; 0xb4
   1d734:	str	r1, [r3, #88]	; 0x58
   1d736:	str	r2, [r3, #92]	; 0x5c
   1d738:	ldr	r2, [r4, #40]	; 0x28
   1d73a:	ldr	r2, [r2, #0]
   1d73c:	ldrb.w	r2, [r2, #196]	; 0xc4
   1d740:	strb.w	r2, [r3, #157]	; 0x9d
   1d744:	ldr.w	r2, [r4, #308]	; 0x134
   1d748:	ldr	r1, [r2, #112]	; 0x70
   1d74a:	ldr	r2, [r2, #116]	; 0x74
   1d74c:	str	r1, [r3, #96]	; 0x60
   1d74e:	str	r2, [r3, #100]	; 0x64
   1d750:	ldr.w	r2, [r4, #308]	; 0x134
   1d754:	ldr	r1, [r2, #120]	; 0x78
   1d756:	ldr	r2, [r2, #124]	; 0x7c
   1d758:	str	r1, [r3, #104]	; 0x68
   1d75a:	str	r2, [r3, #108]	; 0x6c
   1d75c:	ldr.w	r2, [r4, #308]	; 0x134
   1d760:	ldr.w	r1, [r2, #136]	; 0x88
   1d764:	ldr.w	r2, [r2, #140]	; 0x8c
   1d768:	str	r1, [r3, #112]	; 0x70
   1d76a:	str	r2, [r3, #116]	; 0x74
   1d76c:	ldr	r3, [pc, #612]	; (1d9d4 <write_all_supers@@Base+0x400>)
   1d76e:	ldr.w	r6, [r4, #308]	; 0x134
   1d772:	add	r3, pc
   1d774:	ldr	r5, [r7, #72]	; 0x48
   1d776:	vmov	s17, r3
   1d77a:	ldr	r3, [sp, #20]
   1d77c:	cmp	r5, r3
   1d77e:	bne.n	1d784 <write_all_supers@@Base+0x1b0>
   1d780:	movs	r0, #0
   1d782:	b.n	1d8ce <write_all_supers@@Base+0x2fa>
   1d784:	ldr	r3, [r5, #28]
   1d786:	cmp	r3, #0
   1d788:	beq.n	1d852 <write_all_supers@@Base+0x27e>
   1d78a:	movs	r2, #0
   1d78c:	strb.w	r2, [r6, #245]	; 0xf5
   1d790:	strb.w	r2, [r6, #246]	; 0xf6
   1d794:	strb.w	r2, [r6, #247]	; 0xf7
   1d798:	strb.w	r2, [r6, #248]	; 0xf8
   1d79c:	strb.w	r2, [r6, #249]	; 0xf9
   1d7a0:	strb.w	r2, [r6, #250]	; 0xfa
   1d7a4:	strb.w	r2, [r6, #251]	; 0xfb
   1d7a8:	strb.w	r2, [r6, #252]	; 0xfc
   1d7ac:	ldrd	r1, r2, [r5, #104]	; 0x68
   1d7b0:	str.w	r1, [r6, #237]	; 0xed
   1d7b4:	str.w	r2, [r6, #241]	; 0xf1
   1d7b8:	ldrd	r1, r2, [r5, #64]	; 0x40
   1d7bc:	str.w	r1, [r6, #201]	; 0xc9
   1d7c0:	str.w	r2, [r6, #205]	; 0xcd
   1d7c4:	ldrd	r1, r2, [r5, #72]	; 0x48
   1d7c8:	str.w	r1, [r6, #209]	; 0xd1
   1d7cc:	str.w	r2, [r6, #213]	; 0xd5
   1d7d0:	ldrd	r1, r2, [r5, #80]	; 0x50
   1d7d4:	str.w	r1, [r6, #217]	; 0xd9
   1d7d8:	add.w	r1, r5, #128	; 0x80
   1d7dc:	str.w	r2, [r6, #221]	; 0xdd
   1d7e0:	addw	r2, r6, #267	; 0x10b
   1d7e4:	ldr	r3, [r5, #88]	; 0x58
   1d7e6:	str.w	r3, [r6, #225]	; 0xe1
   1d7ea:	ldr	r3, [r5, #92]	; 0x5c
   1d7ec:	str.w	r3, [r6, #229]	; 0xe5
   1d7f0:	ldr	r3, [r5, #96]	; 0x60
   1d7f2:	str.w	r3, [r6, #233]	; 0xe9
   1d7f6:	add.w	r3, r5, #112	; 0x70
   1d7fa:	ldr.w	r0, [r3], #4
   1d7fe:	cmp	r3, r1
   1d800:	str.w	r0, [r2], #4
   1d804:	bne.n	1d7fa <write_all_supers@@Base+0x226>
   1d806:	ldr.w	r3, [r4, #352]	; 0x160
   1d80a:	addw	r1, r6, #283	; 0x11b
   1d80e:	add.w	r2, r3, #16
   1d812:	adds	r3, #32
   1d814:	ldr.w	r0, [r2], #4
   1d818:	cmp	r2, r3
   1d81a:	str.w	r0, [r1], #4
   1d81e:	bne.n	1d814 <write_all_supers@@Base+0x240>
   1d820:	ldr	r2, [r6, #60]	; 0x3c
   1d822:	ldr	r3, [r6, #56]	; 0x38
   1d824:	ldrh.w	fp, [r6, #196]	; 0xc4
   1d828:	orr.w	r3, r3, #1
   1d82c:	str	r2, [r6, #60]	; 0x3c
   1d82e:	str	r3, [r6, #56]	; 0x38
   1d830:	ldr	r0, [r5, #24]
   1d832:	blx	85a0 <fsync@plt>
   1d836:	cmp	r0, #0
   1d838:	bge.n	1d856 <write_all_supers@@Base+0x282>
   1d83a:	ldr	r0, [pc, #412]	; (1d9d8 <write_all_supers@@Base+0x404>)
   1d83c:	ldrd	r2, r3, [r5, #64]	; 0x40
   1d840:	add	r0, pc
   1d842:	bl	17b7c <__btrfs_error@@Base>
   1d846:	blx	897c <__errno_location@plt>
   1d84a:	ldr	r0, [r0, #0]
   1d84c:	negs	r0, r0
   1d84e:	cmp	r0, #0
   1d850:	blt.n	1d8ce <write_all_supers@@Base+0x2fa>
   1d852:	ldr	r5, [r5, #0]
   1d854:	b.n	1d77a <write_all_supers@@Base+0x1a6>
   1d856:	ldrd	r8, r9, [r4, #320]	; 0x140
   1d85a:	cmp.w	r9, #0
   1d85e:	it	eq
   1d860:	cmpeq.w	r8, #65536	; 0x10000
   1d864:	beq.n	1d8f6 <write_all_supers@@Base+0x322>
   1d866:	mov	r2, sl
   1d868:	add.w	r1, r6, #32
   1d86c:	mov.w	r3, #4064	; 0xfe0
   1d870:	mov	r0, fp
   1d872:	str.w	r8, [r6, #48]	; 0x30
   1d876:	mov	r7, sl
   1d878:	str.w	r9, [r6, #52]	; 0x34
   1d87c:	bl	1c746 <btrfs_csum_data@@Base>
   1d880:	add.w	ip, sp, #60	; 0x3c
   1d884:	mov	r2, r6
   1d886:	mov	r3, r7
   1d888:	adds	r2, #8
   1d88a:	ldmia	r3!, {r0, r1}
   1d88c:	cmp	r3, ip
   1d88e:	str.w	r0, [r2, #-8]
   1d892:	mov	r7, r3
   1d894:	str.w	r1, [r2, #-4]
   1d898:	bne.n	1d886 <write_all_supers@@Base+0x2b2>
   1d89a:	ldrd	r2, r3, [r4, #320]	; 0x140
   1d89e:	ldr.w	r1, [r4, #308]	; 0x134
   1d8a2:	strd	r2, r3, [sp]
   1d8a6:	mov.w	r2, #4096	; 0x1000
   1d8aa:	ldr	r0, [r5, #24]
   1d8ac:	blx	8a20 <pwrite64@plt>
   1d8b0:	cmp.w	r0, #4096	; 0x1000
   1d8b4:	beq.n	1d8e2 <write_all_supers@@Base+0x30e>
   1d8b6:	blx	897c <__errno_location@plt>
   1d8ba:	movs	r3, #5
   1d8bc:	str	r3, [r0, #0]
   1d8be:	ldr	r0, [pc, #284]	; (1d9dc <write_all_supers@@Base+0x408>)
   1d8c0:	ldrd	r2, r3, [r5, #64]	; 0x40
   1d8c4:	add	r0, pc
   1d8c6:	bl	17b7c <__btrfs_error@@Base>
   1d8ca:	mvn.w	r0, #4
   1d8ce:	ldr	r2, [pc, #272]	; (1d9e0 <write_all_supers@@Base+0x40c>)
   1d8d0:	ldr	r3, [pc, #252]	; (1d9d0 <write_all_supers@@Base+0x3fc>)
   1d8d2:	add	r2, pc
   1d8d4:	ldr	r3, [r2, r3]
   1d8d6:	ldr	r2, [r3, #0]
   1d8d8:	ldr	r3, [sp, #60]	; 0x3c
   1d8da:	eors	r2, r3
   1d8dc:	beq.n	1d9c2 <write_all_supers@@Base+0x3ee>
   1d8de:	blx	8708 <__stack_chk_fail@plt>
   1d8e2:	ldr	r0, [r5, #24]
   1d8e4:	blx	85a0 <fsync@plt>
   1d8e8:	cmp	r0, #0
   1d8ea:	bge.n	1d852 <write_all_supers@@Base+0x27e>
   1d8ec:	ldr	r0, [pc, #244]	; (1d9e4 <write_all_supers@@Base+0x410>)
   1d8ee:	ldrd	r2, r3, [r5, #64]	; 0x40
   1d8f2:	add	r0, pc
   1d8f4:	b.n	1d842 <write_all_supers@@Base+0x26e>
   1d8f6:	add.w	r3, r6, #32
   1d8fa:	movs	r7, #0
   1d8fc:	vmov	s16, r3
   1d900:	b.n	1d93e <write_all_supers@@Base+0x36a>
   1d902:	cbnz	r7, 1d918 <write_all_supers@@Base+0x344>
   1d904:	ldr	r0, [r5, #24]
   1d906:	blx	85a0 <fsync@plt>
   1d90a:	cmp	r0, #0
   1d90c:	bge.n	1d918 <write_all_supers@@Base+0x344>
   1d90e:	vmov	r0, s17
   1d912:	ldrd	r2, r3, [r5, #64]	; 0x40
   1d916:	b.n	1d842 <write_all_supers@@Base+0x26e>
   1d918:	adds	r7, #1
   1d91a:	cmp	r7, #3
   1d91c:	beq.n	1d852 <write_all_supers@@Base+0x27e>
   1d91e:	movs	r3, #12
   1d920:	mov.w	r2, #16384	; 0x4000
   1d924:	muls	r3, r7
   1d926:	sub.w	r0, r3, #32
   1d92a:	rsb	r1, r3, #32
   1d92e:	lsl.w	r9, r2, r0
   1d932:	lsr.w	r1, r2, r1
   1d936:	orr.w	r9, r9, r1
   1d93a:	lsl.w	r8, r2, r3
   1d93e:	adds.w	r3, r8, #4096	; 0x1000
   1d942:	str	r3, [sp, #8]
   1d944:	adc.w	r3, r9, #0
   1d948:	str	r3, [sp, #12]
   1d94a:	ldrd	r0, r1, [sp, #8]
   1d94e:	ldrd	r2, r3, [r5, #72]	; 0x48
   1d952:	cmp	r3, r1
   1d954:	it	eq
   1d956:	cmpeq	r2, r0
   1d958:	bcc.w	1d852 <write_all_supers@@Base+0x27e>
   1d95c:	mov	r2, sl
   1d95e:	vmov	r1, s16
   1d962:	mov.w	r3, #4064	; 0xfe0
   1d966:	mov	r0, fp
   1d968:	str.w	r8, [r6, #48]	; 0x30
   1d96c:	str.w	r9, [r6, #52]	; 0x34
   1d970:	bl	1c746 <btrfs_csum_data@@Base>
   1d974:	add.w	lr, sp, #60	; 0x3c
   1d978:	mov	ip, sl
   1d97a:	mov	r2, r6
   1d97c:	mov	r3, ip
   1d97e:	adds	r2, #8
   1d980:	ldmia	r3!, {r0, r1}
   1d982:	cmp	r3, lr
   1d984:	str.w	r0, [r2, #-8]
   1d988:	mov	ip, r3
   1d98a:	str.w	r1, [r2, #-4]
   1d98e:	bne.n	1d97c <write_all_supers@@Base+0x3a8>
   1d990:	strd	r8, r9, [sp]
   1d994:	mov.w	r2, #4096	; 0x1000
   1d998:	ldr.w	r1, [r4, #308]	; 0x134
   1d99c:	ldr	r0, [r5, #24]
   1d99e:	blx	8a20 <pwrite64@plt>
   1d9a2:	cmp.w	r0, #4096	; 0x1000
   1d9a6:	beq.n	1d902 <write_all_supers@@Base+0x32e>
   1d9a8:	blx	897c <__errno_location@plt>
   1d9ac:	movs	r3, #5
   1d9ae:	mov	r7, r0
   1d9b0:	str	r3, [r0, #0]
   1d9b2:	ldr	r0, [pc, #52]	; (1d9e8 <write_all_supers@@Base+0x414>)
   1d9b4:	ldrd	r2, r3, [r5, #64]	; 0x40
   1d9b8:	add	r0, pc
   1d9ba:	bl	17b7c <__btrfs_error@@Base>
   1d9be:	ldr	r0, [r7, #0]
   1d9c0:	b.n	1d84c <write_all_supers@@Base+0x278>
   1d9c2:	add	sp, #68	; 0x44
   1d9c4:	vpop	{d8}
   1d9c8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d9cc:	strb	r6, [r3, #30]
   1d9ce:	movs	r4, r0
   1d9d0:	lsls	r0, r5, #8
   1d9d2:	movs	r0, r0
   1d9d4:	cdp2	0, 15, cr0, cr10, cr1, {0}
   1d9d8:	cdp2	0, 2, cr0, cr12, cr1, {0}
   1d9dc:	stc2l	0, cr0, [r4, #4]!
   1d9e0:	strb	r6, [r5, #18]
   1d9e2:	movs	r4, r0
   1d9e4:	ldc2l	0, cr0, [sl, #-4]!
   1d9e8:	ldc2l	0, cr0, [r0], #4

0001d9ec <write_ctree_super@@Base>:
   1d9ec:	push	{r4, r5, r6, lr}
   1d9ee:	mov	r3, r0
   1d9f0:	ldr	r0, [r0, #0]
   1d9f2:	ldr	r5, [pc, #140]	; (1da80 <write_ctree_super@@Base+0x94>)
   1d9f4:	ldrb.w	r2, [r0, #364]	; 0x16c
   1d9f8:	add	r5, pc
   1d9fa:	lsls	r2, r2, #30
   1d9fc:	bmi.n	1da7a <write_ctree_super@@Base+0x8e>
   1d9fe:	ldrd	r1, r2, [r0, #28]
   1da02:	ldr.w	r4, [r0, #308]	; 0x134
   1da06:	ldrd	r6, r3, [r3, #8]
   1da0a:	str	r6, [r4, #72]	; 0x48
   1da0c:	str	r3, [r4, #76]	; 0x4c
   1da0e:	ldr	r4, [r1, #0]
   1da10:	ldr.w	r3, [r0, #308]	; 0x134
   1da14:	ldrd	r6, r4, [r4, #40]	; 0x28
   1da18:	str	r6, [r3, #80]	; 0x50
   1da1a:	str	r4, [r3, #84]	; 0x54
   1da1c:	ldr	r1, [r1, #0]
   1da1e:	ldr.w	r3, [r0, #308]	; 0x134
   1da22:	ldrb.w	r1, [r1, #196]	; 0xc4
   1da26:	strb.w	r1, [r3, #198]	; 0xc6
   1da2a:	ldr	r1, [r2, #0]
   1da2c:	ldr.w	r3, [r0, #308]	; 0x134
   1da30:	ldrd	r4, r1, [r1, #40]	; 0x28
   1da34:	str	r4, [r3, #88]	; 0x58
   1da36:	str	r1, [r3, #92]	; 0x5c
   1da38:	ldr	r1, [r2, #0]
   1da3a:	ldr.w	r3, [r0, #308]	; 0x134
   1da3e:	ldrb.w	r1, [r1, #196]	; 0xc4
   1da42:	strb.w	r1, [r3, #199]	; 0xc7
   1da46:	ldr	r2, [r2, #0]
   1da48:	ldr.w	r3, [r0, #308]	; 0x134
   1da4c:	ldr.w	r1, [r2, #176]	; 0xb0
   1da50:	ldr.w	r2, [r2, #180]	; 0xb4
   1da54:	str.w	r1, [r3, #164]	; 0xa4
   1da58:	str.w	r2, [r3, #168]	; 0xa8
   1da5c:	bl	1d5d4 <write_all_supers@@Base>
   1da60:	mov	r4, r0
   1da62:	cbz	r0, 1da76 <write_ctree_super@@Base+0x8a>
   1da64:	ldr	r3, [pc, #28]	; (1da84 <write_ctree_super@@Base+0x98>)
   1da66:	movs	r1, #1
   1da68:	ldr	r2, [pc, #28]	; (1da88 <write_ctree_super@@Base+0x9c>)
   1da6a:	ldr	r0, [r5, r3]
   1da6c:	add	r2, pc
   1da6e:	mov	r3, r4
   1da70:	ldr	r0, [r0, #0]
   1da72:	blx	8a64 <__fprintf_chk@plt+0x4>
   1da76:	mov	r0, r4
   1da78:	pop	{r4, r5, r6, pc}
   1da7a:	movs	r4, #0
   1da7c:	b.n	1da76 <write_ctree_super@@Base+0x8a>
   1da7e:	nop
   1da80:	strb	r0, [r1, #14]
   1da82:	movs	r4, r0
   1da84:	lsls	r0, r7, #8
   1da86:	movs	r0, r0
   1da88:	ldc2l	0, cr0, [r8], #-4

0001da8c <close_ctree_fs_info@@Base>:
   1da8c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1da90:	mov	r5, r0
   1da92:	ldrd	r2, r3, [r5, #232]	; 0xe8
   1da96:	ldr	r6, [r0, #28]
   1da98:	ldrd	r0, r1, [r0, #240]	; 0xf0
   1da9c:	ldr	r7, [pc, #332]	; (1dbec <close_ctree_fs_info@@Base+0x160>)
   1da9e:	cmp	r1, r3
   1daa0:	it	eq
   1daa2:	cmpeq	r0, r2
   1daa4:	add	r7, pc
   1daa6:	bne.n	1db14 <close_ctree_fs_info@@Base+0x88>
   1daa8:	ldrb.w	r3, [r5, #365]	; 0x16d
   1daac:	lsls	r3, r3, #29
   1daae:	bpl.w	1dbe8 <close_ctree_fs_info@@Base+0x15c>
   1dab2:	ldr.w	r3, [r5, #308]	; 0x134
   1dab6:	movs	r2, #95	; 0x5f
   1dab8:	movs	r1, #66	; 0x42
   1daba:	movs	r4, #0
   1dabc:	mov	r0, r5
   1dabe:	strb.w	r2, [r3, #64]	; 0x40
   1dac2:	strb.w	r1, [r3, #65]	; 0x41
   1dac6:	movs	r1, #72	; 0x48
   1dac8:	strb.w	r2, [r3, #70]	; 0x46
   1dacc:	movs	r2, #77	; 0x4d
   1dace:	strb.w	r1, [r3, #66]	; 0x42
   1dad2:	movs	r1, #82	; 0x52
   1dad4:	strb.w	r2, [r3, #71]	; 0x47
   1dad8:	strb.w	r1, [r3, #67]	; 0x43
   1dadc:	movs	r1, #102	; 0x66
   1dade:	strb.w	r1, [r3, #68]	; 0x44
   1dae2:	movs	r1, #83	; 0x53
   1dae4:	strb.w	r1, [r3, #69]	; 0x45
   1dae8:	ldr.w	r3, [r6, #464]	; 0x1d0
   1daec:	ldrb.w	r2, [r3, #365]	; 0x16d
   1daf0:	bfi	r2, r4, #2, #1
   1daf4:	strb.w	r2, [r3, #365]	; 0x16d
   1daf8:	bl	1d5d4 <write_all_supers@@Base>
   1dafc:	cmp	r0, #0
   1dafe:	beq.n	1dbe8 <close_ctree_fs_info@@Base+0x15c>
   1db00:	ldr	r3, [pc, #236]	; (1dbf0 <close_ctree_fs_info@@Base+0x164>)
   1db02:	movs	r1, #1
   1db04:	ldr	r2, [pc, #236]	; (1dbf4 <close_ctree_fs_info@@Base+0x168>)
   1db06:	ldr	r6, [r7, r3]
   1db08:	add	r2, pc
   1db0a:	mov	r3, r0
   1db0c:	ldr	r0, [r6, #0]
   1db0e:	blx	8a64 <__fprintf_chk@plt+0x4>
   1db12:	b.n	1dbae <close_ctree_fs_info@@Base+0x122>
   1db14:	ldr.w	r9, [pc, #224]	; 1dbf8 <close_ctree_fs_info@@Base+0x16c>
   1db18:	clz	r3, r6
   1db1c:	ldr	r0, [pc, #220]	; (1dbfc <close_ctree_fs_info@@Base+0x170>)
   1db1e:	movw	r2, #1870	; 0x74e
   1db22:	add	r9, pc
   1db24:	lsrs	r3, r3, #5
   1db26:	add.w	r9, r9, #33	; 0x21
   1db2a:	add	r0, pc
   1db2c:	mov	r1, r9
   1db2e:	bl	1c73c <btrfs_fs_roots_compare_roots@@Base+0x386>
   1db32:	movs	r1, #1
   1db34:	mov	r0, r6
   1db36:	bl	2b67c <btrfs_start_transaction@@Base>
   1db3a:	cmn.w	r0, #4096	; 0x1000
   1db3e:	mov	r4, r0
   1db40:	bhi.n	1dbae <close_ctree_fs_info@@Base+0x122>
   1db42:	mov	r1, r6
   1db44:	ldr	r4, [pc, #184]	; (1dc00 <close_ctree_fs_info@@Base+0x174>)
   1db46:	bl	2b8fc <btrfs_commit_transaction@@Base>
   1db4a:	movs	r1, #1
   1db4c:	mov	r0, r6
   1db4e:	add	r4, pc
   1db50:	bl	2b67c <btrfs_start_transaction@@Base>
   1db54:	movw	r2, #1878	; 0x756
   1db58:	mov	r1, r9
   1db5a:	cmn.w	r0, #4096	; 0x1000
   1db5e:	mov	r8, r0
   1db60:	ldr	r0, [pc, #160]	; (1dc04 <close_ctree_fs_info@@Base+0x178>)
   1db62:	ite	ls
   1db64:	movls	r3, #0
   1db66:	movhi	r3, #1
   1db68:	add	r0, pc
   1db6a:	bl	1c73c <btrfs_fs_roots_compare_roots@@Base+0x386>
   1db6e:	mov	r1, r5
   1db70:	mov	r0, r8
   1db72:	bl	2b708 <commit_tree_roots@@Base>
   1db76:	mov.w	r2, #1880	; 0x758
   1db7a:	mov	r1, r9
   1db7c:	mov	r3, r0
   1db7e:	mov	r0, r4
   1db80:	bl	1c73c <btrfs_fs_roots_compare_roots@@Base+0x386>
   1db84:	mov	r1, r6
   1db86:	mov	r0, r8
   1db88:	bl	2b820 <__commit_transaction@@Base>
   1db8c:	movw	r2, #1882	; 0x75a
   1db90:	mov	r1, r9
   1db92:	mov	r3, r0
   1db94:	mov	r0, r4
   1db96:	bl	1c73c <btrfs_fs_roots_compare_roots@@Base+0x386>
   1db9a:	mov	r0, r8
   1db9c:	bl	1d9ec <write_ctree_super@@Base>
   1dba0:	mov	r4, r0
   1dba2:	mov	r0, r8
   1dba4:	blx	8620 <free@plt+0x4>
   1dba8:	cmp	r4, #0
   1dbaa:	beq.w	1daa8 <close_ctree_fs_info@@Base+0x1c>
   1dbae:	mov	r0, r5
   1dbb0:	bl	214fe <btrfs_free_block_groups@@Base>
   1dbb4:	ldr	r1, [pc, #80]	; (1dc08 <close_ctree_fs_info@@Base+0x17c>)
   1dbb6:	add.w	r0, r5, #56	; 0x38
   1dbba:	add	r1, pc
   1dbbc:	bl	17ffe <rb_free_nodes@@Base>
   1dbc0:	mov	r0, r5
   1dbc2:	bl	1cf54 <btrfs_release_all_roots@@Base>
   1dbc6:	ldr.w	r0, [r5, #352]	; 0x160
   1dbca:	bl	2862c <btrfs_close_devices@@Base>
   1dbce:	mov	r6, r0
   1dbd0:	mov	r0, r5
   1dbd2:	bl	1cfb8 <btrfs_cleanup_all_caches@@Base>
   1dbd6:	mov	r0, r5
   1dbd8:	bl	1cd10 <btrfs_free_fs_info@@Base>
   1dbdc:	cmp	r4, #0
   1dbde:	ite	ne
   1dbe0:	movne	r0, r4
   1dbe2:	moveq	r0, r6
   1dbe4:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1dbe8:	movs	r4, #0
   1dbea:	b.n	1dbae <close_ctree_fs_info@@Base+0x122>
   1dbec:	strb	r4, [r3, #11]
   1dbee:	movs	r4, r0
   1dbf0:	lsls	r0, r7, #8
   1dbf2:	movs	r0, r0
   1dbf4:			; <UNDEFINED> instruction: 0xfbdc0001
   1dbf8:	movs	r7, r0
   1dbfa:	movs	r2, r0
   1dbfc:	umlal	r0, r0, r2, r1
   1dc00:	ldmia	r1, {r1, r2, r4, r7}
   1dc02:	movs	r1, r0
   1dc04:	umull	r0, r0, sl, r1
   1dc08:	bl	169c0a <__bss_end__@@Base+0x103916>

0001dc0c <clean_tree_block@@Base>:
   1dc0c:	b.w	179ce <clear_extent_buffer_dirty@@Base>

0001dc10 <btrfs_mark_buffer_dirty@@Base>:
   1dc10:	b.w	17994 <set_extent_buffer_dirty@@Base>

0001dc14 <btrfs_buffer_uptodate@@Base>:
   1dc14:	push	{r0, r1, r2, lr}
   1dc16:	mov	r1, r0
   1dc18:	bl	1c510 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1dc1c:	cbz	r0, 1dc2e <btrfs_buffer_uptodate@@Base+0x1a>
   1dc1e:	movs	r0, #1
   1dc20:	str	r0, [sp, #0]
   1dc22:	mov	r0, r1
   1dc24:	bl	1c524 <btrfs_fs_roots_compare_roots@@Base+0x16e>
   1dc28:	clz	r0, r0
   1dc2c:	lsrs	r0, r0, #5
   1dc2e:	add	sp, #12
   1dc30:	ldr.w	pc, [sp], #4

0001dc34 <readahead_tree_block@@Base>:
   1dc34:	push	{r4, r5, r6, r7, lr}
   1dc36:	sub	sp, #44	; 0x2c
   1dc38:	ldr	r5, [pc, #148]	; (1dcd0 <readahead_tree_block@@Base+0x9c>)
   1dc3a:	mov	r4, r0
   1dc3c:	ldr	r1, [pc, #148]	; (1dcd4 <readahead_tree_block@@Base+0xa0>)
   1dc3e:	mov	r6, r2
   1dc40:	add	r5, pc
   1dc42:	mov	r7, r3
   1dc44:	ldr	r1, [r5, r1]
   1dc46:	ldr	r1, [r1, #0]
   1dc48:	str	r1, [sp, #36]	; 0x24
   1dc4a:	mov.w	r1, #0
   1dc4e:	movs	r1, #0
   1dc50:	str	r1, [sp, #20]
   1dc52:	ldr.w	r1, [r0, #384]	; 0x180
   1dc56:	str	r1, [sp, #0]
   1dc58:	bl	1c928 <btrfs_find_tree_block@@Base>
   1dc5c:	mov	r5, r0
   1dc5e:	cbnz	r0, 1dc9e <readahead_tree_block@@Base+0x6a>
   1dc60:	add	r3, sp, #20
   1dc62:	movs	r1, #0
   1dc64:	str	r3, [sp, #4]
   1dc66:	mov	r2, r6
   1dc68:	add	r3, sp, #24
   1dc6a:	mov	r0, r4
   1dc6c:	str	r3, [sp, #0]
   1dc6e:	mov	r3, r7
   1dc70:	strd	r1, r1, [sp, #8]
   1dc74:	bl	2a528 <btrfs_map_block@@Base>
   1dc78:	cbnz	r0, 1dcaa <readahead_tree_block@@Base+0x76>
   1dc7a:	ldr	r0, [sp, #20]
   1dc7c:	ldr	r1, [r0, #8]
   1dc7e:	ldrd	r3, r2, [r1, #16]
   1dc82:	adds	r3, #1
   1dc84:	adc.w	r2, r2, #0
   1dc88:	strd	r3, r2, [r1, #16]
   1dc8c:	ldr.w	r3, [r4, #384]	; 0x180
   1dc90:	str	r3, [sp, #0]
   1dc92:	ldrd	r2, r3, [r0, #16]
   1dc96:	ldr	r0, [r1, #24]
   1dc98:	blx	87e4 <readahead@plt>
   1dc9c:	b.n	1dcaa <readahead_tree_block@@Base+0x76>
   1dc9e:	ldrd	r2, r3, [sp, #64]	; 0x40
   1dca2:	bl	1dc14 <btrfs_buffer_uptodate@@Base>
   1dca6:	cmp	r0, #0
   1dca8:	beq.n	1dc60 <readahead_tree_block@@Base+0x2c>
   1dcaa:	mov	r0, r5
   1dcac:	bl	17320 <free_extent_buffer@@Base>
   1dcb0:	ldr	r0, [sp, #20]
   1dcb2:	blx	8620 <free@plt+0x4>
   1dcb6:	ldr	r2, [pc, #32]	; (1dcd8 <readahead_tree_block@@Base+0xa4>)
   1dcb8:	ldr	r3, [pc, #24]	; (1dcd4 <readahead_tree_block@@Base+0xa0>)
   1dcba:	add	r2, pc
   1dcbc:	ldr	r3, [r2, r3]
   1dcbe:	ldr	r2, [r3, #0]
   1dcc0:	ldr	r3, [sp, #36]	; 0x24
   1dcc2:	eors	r2, r3
   1dcc4:	beq.n	1dcca <readahead_tree_block@@Base+0x96>
   1dcc6:	blx	8708 <__stack_chk_fail@plt>
   1dcca:	add	sp, #44	; 0x2c
   1dccc:	pop	{r4, r5, r6, r7, pc}
   1dcce:	nop
   1dcd0:	strb	r0, [r0, #5]
   1dcd2:	movs	r4, r0
   1dcd4:	lsls	r0, r5, #8
   1dcd6:	movs	r0, r0
   1dcd8:	strb	r6, [r0, #3]
   1dcda:	movs	r4, r0

0001dcdc <write_tree_block@@Base>:
   1dcdc:	push	{r0, r1, r2, r4, r5, lr}
   1dcde:	mov	r4, r1
   1dce0:	mov	r5, r0
   1dce2:	mov	r1, r2
   1dce4:	mov	r0, r4
   1dce6:	str	r2, [sp, #4]
   1dce8:	bl	1c444 <btrfs_fs_roots_compare_roots@@Base+0x8e>
   1dcec:	ldr	r1, [sp, #4]
   1dcee:	cbz	r0, 1dd16 <write_tree_block@@Base+0x3a>
   1dcf0:	mov	r0, r4
   1dcf2:	bl	1c444 <btrfs_fs_roots_compare_roots@@Base+0x8e>
   1dcf6:	ldr	r1, [sp, #4]
   1dcf8:	mov	r2, r0
   1dcfa:	add.w	r0, r4, #352	; 0x160
   1dcfe:	bl	1c5a0 <btrfs_fs_roots_compare_roots@@Base+0x1ea>
   1dd02:	ldr	r1, [pc, #100]	; (1dd68 <write_tree_block@@Base+0x8c>)
   1dd04:	ldr	r0, [pc, #100]	; (1dd6c <write_tree_block@@Base+0x90>)
   1dd06:	movs	r3, #1
   1dd08:	add	r1, pc
   1dd0a:	mov.w	r2, #516	; 0x204
   1dd0e:	adds	r1, #53	; 0x35
   1dd10:	add	r0, pc
   1dd12:	bl	1c700 <btrfs_fs_roots_compare_roots@@Base+0x34a>
   1dd16:	cbz	r5, 1dd3a <write_tree_block@@Base+0x5e>
   1dd18:	mov	r0, r1
   1dd1a:	ldrd	r2, r3, [r5, #8]
   1dd1e:	str	r1, [sp, #4]
   1dd20:	bl	1dc14 <btrfs_buffer_uptodate@@Base>
   1dd24:	ldr	r1, [sp, #4]
   1dd26:	cbnz	r0, 1dd3a <write_tree_block@@Base+0x5e>
   1dd28:	ldr	r1, [pc, #68]	; (1dd70 <write_tree_block@@Base+0x94>)
   1dd2a:	movs	r3, #1
   1dd2c:	ldr	r0, [pc, #68]	; (1dd74 <write_tree_block@@Base+0x98>)
   1dd2e:	mov.w	r2, #520	; 0x208
   1dd32:	add	r1, pc
   1dd34:	adds	r1, #53	; 0x35
   1dd36:	add	r0, pc
   1dd38:	b.n	1dd12 <write_tree_block@@Base+0x36>
   1dd3a:	ldr.w	r2, [r1, #156]	; 0x9c
   1dd3e:	mov	r0, r4
   1dd40:	ldr.w	r3, [r1, #152]	; 0x98
   1dd44:	str	r1, [sp, #4]
   1dd46:	orr.w	r3, r3, #1
   1dd4a:	str.w	r2, [r1, #156]	; 0x9c
   1dd4e:	str.w	r3, [r1, #152]	; 0x98
   1dd52:	movs	r2, #0
   1dd54:	bl	1c8ec <csum_tree_block@@Base>
   1dd58:	ldr	r1, [sp, #4]
   1dd5a:	mov	r0, r4
   1dd5c:	add	sp, #12
   1dd5e:	ldmia.w	sp!, {r4, r5, lr}
   1dd62:	b.w	1cb78 <write_and_map_eb@@Base>
   1dd66:	nop
   1dd68:	cdp2	0, 2, cr0, cr1, cr1, {0}
   1dd6c:	lsls	r5, r5, #7
   1dd6e:	movs	r2, r0
   1dd70:	ldc2l	0, cr0, [r7, #4]!
   1dd74:	lsls	r7, r0, #7
   1dd76:	movs	r2, r0

0001dd78 <btrfs_set_buffer_uptodate@@Base>:
   1dd78:	ldr	r3, [r0, #84]	; 0x54
   1dd7a:	orr.w	r3, r3, #4
   1dd7e:	str	r3, [r0, #84]	; 0x54
   1dd80:	movs	r0, #0
   1dd82:	bx	lr

0001dd84 <read_tree_block@@Base>:
   1dd84:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dd88:	mov.w	r9, #0
   1dd8c:	ldr.w	r1, [r0, #388]	; 0x184
   1dd90:	cmp	r3, r9
   1dd92:	ldr.w	fp, [pc, #416]	; 1df34 <read_tree_block@@Base+0x1b0>
   1dd96:	sub	sp, #28
   1dd98:	it	eq
   1dd9a:	cmpeq	r2, r1
   1dd9c:	mov	r5, r0
   1dd9e:	add	fp, pc
   1dda0:	mov	r6, r2
   1dda2:	mov	r7, r3
   1dda4:	bcc.n	1ddc2 <read_tree_block@@Base+0x3e>
   1dda6:	adds.w	r4, r1, #4294967295	; 0xffffffff
   1ddaa:	adc.w	ip, r9, #4294967295	; 0xffffffff
   1ddae:	ands	r4, r2
   1ddb0:	str	r4, [sp, #8]
   1ddb2:	and.w	r4, ip, r3
   1ddb6:	str	r4, [sp, #12]
   1ddb8:	ldrd	r8, r9, [sp, #8]
   1ddbc:	orrs.w	r4, r8, r9
   1ddc0:	beq.n	1ddd6 <read_tree_block@@Base+0x52>
   1ddc2:	ldr	r0, [pc, #372]	; (1df38 <read_tree_block@@Base+0x1b4>)
   1ddc4:	mov	r2, r6
   1ddc6:	mov	r3, r7
   1ddc8:	str	r1, [sp, #0]
   1ddca:	add	r0, pc
   1ddcc:	bl	17b7c <__btrfs_error@@Base>
   1ddd0:	mvn.w	r4, #4
   1ddd4:	b.n	1de82 <read_tree_block@@Base+0xfe>
   1ddd6:	bl	1c92e <btrfs_find_create_tree_block@@Base>
   1ddda:	mov	r4, r0
   1dddc:	cmp	r0, #0
   1ddde:	beq.w	1df24 <read_tree_block@@Base+0x1a0>
   1dde2:	ldrd	r2, r3, [sp, #64]	; 0x40
   1dde6:	bl	1dc14 <btrfs_buffer_uptodate@@Base>
   1ddea:	mov	r6, r0
   1ddec:	cmp	r0, #0
   1ddee:	bne.n	1de82 <read_tree_block@@Base+0xfe>
   1ddf0:	ldr	r3, [r4, #76]	; 0x4c
   1ddf2:	add.w	sl, r4, #68	; 0x44
   1ddf6:	mov	r8, r6
   1ddf8:	movs	r7, #1
   1ddfa:	strd	r3, r0, [sp]
   1ddfe:	mov	r0, r5
   1de00:	ldrd	r2, r3, [r4, #40]	; 0x28
   1de04:	bl	29cb4 <btrfs_num_copies@@Base>
   1de08:	str	r6, [sp, #20]
   1de0a:	mov	r9, r0
   1de0c:	mov	r2, r7
   1de0e:	mov	r1, r4
   1de10:	mov	r0, r5
   1de12:	bl	1c940 <read_whole_eb@@Base>
   1de16:	cmp	r0, #0
   1de18:	bne.n	1dea4 <read_tree_block@@Base+0x120>
   1de1a:	movs	r2, #1
   1de1c:	mov	r1, r4
   1de1e:	mov	r0, r5
   1de20:	bl	1c8ec <csum_tree_block@@Base>
   1de24:	cmp	r0, #0
   1de26:	bne.n	1dea4 <read_tree_block@@Base+0x120>
   1de28:	mov	r1, r4
   1de2a:	mov	r0, r5
   1de2c:	bl	1c444 <btrfs_fs_roots_compare_roots@@Base+0x8e>
   1de30:	cbnz	r0, 1dea4 <read_tree_block@@Base+0x120>
   1de32:	ldrd	r2, r3, [sp, #64]	; 0x40
   1de36:	mov	r0, r4
   1de38:	str	r6, [sp, #0]
   1de3a:	bl	1c524 <btrfs_fs_roots_compare_roots@@Base+0x16e>
   1de3e:	cbnz	r0, 1dea4 <read_tree_block@@Base+0x120>
   1de40:	ldr	r3, [r4, #84]	; 0x54
   1de42:	lsls	r1, r3, #21
   1de44:	bpl.n	1de66 <read_tree_block@@Base+0xe2>
   1de46:	ldr	r3, [r4, #68]	; 0x44
   1de48:	cmp	sl, r3
   1de4a:	bne.n	1de66 <read_tree_block@@Base+0xe2>
   1de4c:	ldr.w	r3, [r5, #348]	; 0x15c
   1de50:	add.w	r2, r5, #344	; 0x158
   1de54:	str.w	sl, [r5, #348]	; 0x15c
   1de58:	strd	r2, r3, [r4, #68]	; 0x44
   1de5c:	str.w	sl, [r3]
   1de60:	ldr	r3, [r4, #80]	; 0x50
   1de62:	adds	r3, #1
   1de64:	str	r3, [r4, #80]	; 0x50
   1de66:	ldrb.w	r1, [r4, #196]	; 0xc4
   1de6a:	mov	r2, r4
   1de6c:	cbz	r1, 1de94 <read_tree_block@@Base+0x110>
   1de6e:	movs	r1, #0
   1de70:	mov	r0, r5
   1de72:	bl	19120 <btrfs_check_node@@Base>
   1de76:	cbz	r0, 1de7c <read_tree_block@@Base+0xf8>
   1de78:	cmp	r7, r8
   1de7a:	bne.n	1de9c <read_tree_block@@Base+0x118>
   1de7c:	mov	r0, r4
   1de7e:	bl	1dd78 <btrfs_set_buffer_uptodate@@Base>
   1de82:	mov	r0, r4
   1de84:	add	sp, #28
   1de86:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1de8a:	movs	r6, #0
   1de8c:	b.n	1de0c <read_tree_block@@Base+0x88>
   1de8e:	mov	r7, r8
   1de90:	movs	r6, #1
   1de92:	b.n	1de0c <read_tree_block@@Base+0x88>
   1de94:	mov	r0, r5
   1de96:	bl	19770 <btrfs_check_leaf@@Base>
   1de9a:	b.n	1de76 <read_tree_block@@Base+0xf2>
   1de9c:	cmp.w	r8, #0
   1dea0:	bgt.n	1df2a <read_tree_block@@Base+0x1a6>
   1dea2:	mov	r8, r7
   1dea4:	cbz	r6, 1def0 <read_tree_block@@Base+0x16c>
   1dea6:	cmp.w	r8, #0
   1deaa:	bgt.n	1df2e <read_tree_block@@Base+0x1aa>
   1deac:	mov	r1, r4
   1deae:	mov	r0, r5
   1deb0:	bl	1c444 <btrfs_fs_roots_compare_roots@@Base+0x8e>
   1deb4:	ldrb.w	r3, [r5, #364]	; 0x16c
   1deb8:	cbz	r0, 1deda <read_tree_block@@Base+0x156>
   1deba:	lsls	r2, r3, #26
   1debc:	bmi.n	1ded2 <read_tree_block@@Base+0x14e>
   1debe:	mov	r1, r4
   1dec0:	mov	r0, r5
   1dec2:	bl	1c444 <btrfs_fs_roots_compare_roots@@Base+0x8e>
   1dec6:	mov	r1, r4
   1dec8:	mov	r2, r0
   1deca:	add.w	r0, r5, #352	; 0x160
   1dece:	bl	1c5a0 <btrfs_fs_roots_compare_roots@@Base+0x1ea>
   1ded2:	mov	r0, r4
   1ded4:	bl	17324 <free_extent_buffer_nocache@@Base>
   1ded8:	b.n	1ddd0 <read_tree_block@@Base+0x4c>
   1deda:	lsls	r3, r3, #26
   1dedc:	bmi.n	1ded2 <read_tree_block@@Base+0x14e>
   1dede:	ldr	r3, [pc, #92]	; (1df3c <read_tree_block@@Base+0x1b8>)
   1dee0:	ldr	r0, [pc, #92]	; (1df40 <read_tree_block@@Base+0x1bc>)
   1dee2:	ldr.w	r3, [fp, r3]
   1dee6:	add	r0, pc
   1dee8:	ldr	r1, [r3, #0]
   1deea:	blx	8b6c <fputs@plt+0x4>
   1deee:	b.n	1ded2 <read_tree_block@@Base+0x14e>
   1def0:	cmp.w	r9, #1
   1def4:	beq.n	1de90 <read_tree_block@@Base+0x10c>
   1def6:	ldr.w	r3, [r4, #180]	; 0xb4
   1defa:	ldrd	r0, r1, [sp, #8]
   1defe:	ldr.w	r2, [r4, #176]	; 0xb0
   1df02:	cmp	r1, r3
   1df04:	it	eq
   1df06:	cmpeq	r0, r2
   1df08:	it	cc
   1df0a:	strcc	r7, [sp, #20]
   1df0c:	add.w	r7, r7, #1
   1df10:	it	cc
   1df12:	strdcc	r2, r3, [sp, #8]
   1df16:	cmp	r9, r7
   1df18:	bge.n	1de8a <read_tree_block@@Base+0x106>
   1df1a:	cmp.w	r8, #0
   1df1e:	bgt.n	1de8e <read_tree_block@@Base+0x10a>
   1df20:	ldr	r7, [sp, #20]
   1df22:	b.n	1de90 <read_tree_block@@Base+0x10c>
   1df24:	mvn.w	r4, #11
   1df28:	b.n	1de82 <read_tree_block@@Base+0xfe>
   1df2a:	cmp	r6, #0
   1df2c:	beq.n	1def0 <read_tree_block@@Base+0x16c>
   1df2e:	mov	r7, r8
   1df30:	b.n	1de0c <read_tree_block@@Base+0x88>
   1df32:	nop
   1df34:	ldr	r2, [r4, #124]	; 0x7c
   1df36:	movs	r4, r0
   1df38:	ldr??.w	r0, [r6, r1]
   1df3c:	lsls	r0, r7, #8
   1df3e:	movs	r0, r0
   1df40:	ldr??.w	r0, [r1, r1]
   1df44:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   1df48:	mov	r5, r0
   1df4a:	ldr	r4, [sp, #32]
   1df4c:	mov	r7, r3
   1df4e:	mov	r8, r2
   1df50:	mov	r6, r1
   1df52:	mov	r0, r4
   1df54:	bl	1cc90 <btrfs_setup_root@@Base>
   1df58:	addw	r3, r4, #447	; 0x1bf
   1df5c:	mov	r0, r5
   1df5e:	str	r3, [sp, #4]
   1df60:	mov	r2, r8
   1df62:	add.w	r3, r4, #8
   1df66:	str	r3, [sp, #0]
   1df68:	mov	r3, r7
   1df6a:	bl	28048 <btrfs_find_last_root@@Base>
   1df6e:	mov	r5, r0
   1df70:	cbnz	r0, 1df9a <read_tree_block@@Base+0x216>
   1df72:	ldr.w	r2, [r4, #168]	; 0xa8
   1df76:	mov	r0, r6
   1df78:	ldr.w	r3, [r4, #172]	; 0xac
   1df7c:	strd	r2, r3, [sp]
   1df80:	ldr.w	r2, [r4, #184]	; 0xb8
   1df84:	ldr.w	r3, [r4, #188]	; 0xbc
   1df88:	bl	1dd84 <read_tree_block@@Base>
   1df8c:	str	r0, [r4, #0]
   1df8e:	bl	1c510 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1df92:	cmp	r0, #0
   1df94:	it	eq
   1df96:	mvneq.w	r5, #4
   1df9a:	mov	r0, r5
   1df9c:	add	sp, #8
   1df9e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1dfa2:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1dfa4:	mov	r4, r0
   1dfa6:	str	r2, [sp, #0]
   1dfa8:	mov	r6, r1
   1dfaa:	mov	r5, r2
   1dfac:	mov	r1, r0
   1dfae:	ldrd	r2, r3, [sp, #32]
   1dfb2:	ldr	r0, [r0, #28]
   1dfb4:	ldr	r7, [sp, #40]	; 0x28
   1dfb6:	bl	1df44 <read_tree_block@@Base+0x1c0>
   1dfba:	cbz	r0, 1dfce <read_tree_block@@Base+0x24a>
   1dfbc:	lsls	r3, r6, #30
   1dfbe:	mov	r1, r7
   1dfc0:	bmi.n	1dfd2 <read_tree_block@@Base+0x24e>
   1dfc2:	ldr	r0, [pc, #56]	; (1dffc <read_tree_block@@Base+0x278>)
   1dfc4:	add	r0, pc
   1dfc6:	bl	17b7c <__btrfs_error@@Base>
   1dfca:	mvn.w	r0, #4
   1dfce:	add	sp, #12
   1dfd0:	pop	{r4, r5, r6, r7, pc}
   1dfd2:	ldr	r0, [pc, #44]	; (1e000 <read_tree_block@@Base+0x27c>)
   1dfd4:	add	r0, pc
   1dfd6:	bl	17b00 <__btrfs_warning@@Base>
   1dfda:	movs	r2, #0
   1dfdc:	movs	r3, #0
   1dfde:	mov	r0, r4
   1dfe0:	bl	1c92e <btrfs_find_create_tree_block@@Base>
   1dfe4:	str	r0, [r5, #0]
   1dfe6:	cbz	r0, 1dff4 <read_tree_block@@Base+0x270>
   1dfe8:	ldr	r3, [r0, #84]	; 0x54
   1dfea:	bic.w	r3, r3, #4
   1dfee:	str	r3, [r0, #84]	; 0x54
   1dff0:	movs	r0, #0
   1dff2:	b.n	1dfce <read_tree_block@@Base+0x24a>
   1dff4:	mvn.w	r0, #11
   1dff8:	b.n	1dfce <read_tree_block@@Base+0x24a>
   1dffa:	nop
   1dffc:			; <UNDEFINED> instruction: 0xf7a60001
   1e000:			; <UNDEFINED> instruction: 0xf7ae0001

0001e004 <btrfs_read_fs_root_no_cache@@Base>:
   1e004:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   1e008:	mov	r7, r0
   1e00a:	ldr.w	sl, [r0, #28]
   1e00e:	mov	r5, r1
   1e010:	movs	r0, #1
   1e012:	mov.w	r1, #544	; 0x220
   1e016:	blx	8588 <calloc@plt+0x4>
   1e01a:	mov	r4, r0
   1e01c:	cbz	r0, 1e06a <btrfs_read_fs_root_no_cache@@Base+0x66>
   1e01e:	ldr.w	r9, [r5, #13]
   1e022:	ldr.w	r8, [r5, #9]
   1e026:	cmp.w	r9, #4294967295	; 0xffffffff
   1e02a:	ldr	r2, [r5, #0]
   1e02c:	it	eq
   1e02e:	cmpeq.w	r8, #4294967295	; 0xffffffff
   1e032:	ldr	r3, [r5, #4]
   1e034:	bne.n	1e056 <btrfs_read_fs_root_no_cache@@Base+0x52>
   1e036:	str	r0, [sp, #0]
   1e038:	mov	r1, r7
   1e03a:	mov	r0, sl
   1e03c:	bl	1df44 <read_tree_block@@Base+0x1c0>
   1e040:	mov	r5, r0
   1e042:	cmp	r0, #0
   1e044:	beq.n	1e0fe <btrfs_read_fs_root_no_cache@@Base+0xfa>
   1e046:	mov	r0, r4
   1e048:	mov	r4, r5
   1e04a:	blx	8620 <free@plt+0x4>
   1e04e:	mov	r0, r4
   1e050:	add	sp, #8
   1e052:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1e056:	mov	r1, r7
   1e058:	bl	1cc90 <btrfs_setup_root@@Base>
   1e05c:	bl	18550 <btrfs_alloc_path@@Base>
   1e060:	mov	r6, r0
   1e062:	cbnz	r0, 1e070 <btrfs_read_fs_root_no_cache@@Base+0x6c>
   1e064:	mov	r0, r4
   1e066:	blx	8620 <free@plt+0x4>
   1e06a:	mvn.w	r4, #11
   1e06e:	b.n	1e04e <btrfs_read_fs_root_no_cache@@Base+0x4a>
   1e070:	movs	r0, #0
   1e072:	mov	r3, r6
   1e074:	mov	r2, r5
   1e076:	mov	r1, sl
   1e078:	strd	r0, r0, [sp]
   1e07c:	bl	1a93c <btrfs_search_slot@@Base>
   1e080:	subs.w	r8, r0, #0
   1e084:	beq.n	1e0a2 <btrfs_read_fs_root_no_cache@@Base+0x9e>
   1e086:	ble.n	1e08c <btrfs_read_fs_root_no_cache@@Base+0x88>
   1e088:	mvn.w	r8, #1
   1e08c:	mov	r0, r6
   1e08e:	bl	1857e <btrfs_free_path@@Base>
   1e092:	cmp.w	r8, #0
   1e096:	beq.n	1e0d8 <btrfs_read_fs_root_no_cache@@Base+0xd4>
   1e098:	mov	r0, r4
   1e09a:	mov	r4, r8
   1e09c:	blx	8620 <free@plt+0x4>
   1e0a0:	b.n	1e04e <btrfs_read_fs_root_no_cache@@Base+0x4a>
   1e0a2:	ldr	r0, [r6, #0]
   1e0a4:	movs	r2, #25
   1e0a6:	ldr	r3, [r6, #32]
   1e0a8:	add.w	r1, r4, #8
   1e0ac:	mla	r3, r2, r3, r0
   1e0b0:	ldr.w	r2, [r3, #214]	; 0xd6
   1e0b4:	movw	r3, #439	; 0x1b7
   1e0b8:	adds	r2, #101	; 0x65
   1e0ba:	bl	17a1a <read_extent_buffer@@Base>
   1e0be:	addw	r3, r4, #447	; 0x1bf
   1e0c2:	add.w	r2, r5, #16
   1e0c6:	ldr.w	r1, [r5], #4
   1e0ca:	cmp	r5, r2
   1e0cc:	str.w	r1, [r3], #4
   1e0d0:	bne.n	1e0c6 <btrfs_read_fs_root_no_cache@@Base+0xc2>
   1e0d2:	ldrb	r2, [r5, #0]
   1e0d4:	strb	r2, [r3, #0]
   1e0d6:	b.n	1e08c <btrfs_read_fs_root_no_cache@@Base+0x88>
   1e0d8:	ldrd	r2, r3, [r4, #168]	; 0xa8
   1e0dc:	mov	r0, r7
   1e0de:	strd	r2, r3, [sp]
   1e0e2:	ldrd	r2, r3, [r4, #184]	; 0xb8
   1e0e6:	bl	1dd84 <read_tree_block@@Base>
   1e0ea:	str	r0, [r4, #0]
   1e0ec:	bl	1c510 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1e0f0:	cbnz	r0, 1e0fe <btrfs_read_fs_root_no_cache@@Base+0xfa>
   1e0f2:	mov	r0, r4
   1e0f4:	mvn.w	r4, #4
   1e0f8:	blx	8620 <free@plt+0x4>
   1e0fc:	b.n	1e04e <btrfs_read_fs_root_no_cache@@Base+0x4a>
   1e0fe:	movs	r3, #1
   1e100:	str.w	r3, [r4, #488]	; 0x1e8
   1e104:	b.n	1e04e <btrfs_read_fs_root_no_cache@@Base+0x4a>

0001e106 <btrfs_read_fs_root@@Base>:
   1e106:	ldr	r2, [pc, #320]	; (1e248 <btrfs_read_fs_root@@Base+0x142>)
   1e108:	ldr	r3, [pc, #320]	; (1e24c <btrfs_read_fs_root@@Base+0x146>)
   1e10a:	add	r2, pc
   1e10c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1e110:	sub	sp, #28
   1e112:	ldr	r3, [r2, r3]
   1e114:	mov	r5, r0
   1e116:	ldr	r2, [r1, #0]
   1e118:	mov	r9, r1
   1e11a:	ldr	r3, [r3, #0]
   1e11c:	str	r3, [sp, #20]
   1e11e:	mov.w	r3, #0
   1e122:	ldr	r3, [r1, #4]
   1e124:	ldr.w	r8, [pc, #296]	; 1e250 <btrfs_read_fs_root@@Base+0x14a>
   1e128:	cmp	r3, #0
   1e12a:	it	eq
   1e12c:	cmpeq	r2, #1
   1e12e:	add	r8, pc
   1e130:	strd	r2, r3, [sp, #8]
   1e134:	bne.n	1e14c <btrfs_read_fs_root@@Base+0x46>
   1e136:	ldr	r4, [r0, #28]
   1e138:	ldr	r2, [pc, #280]	; (1e254 <btrfs_read_fs_root@@Base+0x14e>)
   1e13a:	ldr	r3, [pc, #272]	; (1e24c <btrfs_read_fs_root@@Base+0x146>)
   1e13c:	add	r2, pc
   1e13e:	ldr	r3, [r2, r3]
   1e140:	ldr	r2, [r3, #0]
   1e142:	ldr	r3, [sp, #20]
   1e144:	eors	r2, r3
   1e146:	beq.n	1e23e <btrfs_read_fs_root@@Base+0x138>
   1e148:	blx	8708 <__stack_chk_fail@plt>
   1e14c:	cmp	r3, #0
   1e14e:	it	eq
   1e150:	cmpeq	r2, #2
   1e152:	bne.n	1e158 <btrfs_read_fs_root@@Base+0x52>
   1e154:	ldr	r4, [r0, #24]
   1e156:	b.n	1e138 <btrfs_read_fs_root@@Base+0x32>
   1e158:	cmp	r3, #0
   1e15a:	it	eq
   1e15c:	cmpeq	r2, #3
   1e15e:	bne.n	1e164 <btrfs_read_fs_root@@Base+0x5e>
   1e160:	ldr	r4, [r0, #32]
   1e162:	b.n	1e138 <btrfs_read_fs_root@@Base+0x32>
   1e164:	cmp	r3, #0
   1e166:	it	eq
   1e168:	cmpeq	r2, #4
   1e16a:	bne.n	1e170 <btrfs_read_fs_root@@Base+0x6a>
   1e16c:	ldr	r4, [r0, #36]	; 0x24
   1e16e:	b.n	1e138 <btrfs_read_fs_root@@Base+0x32>
   1e170:	cmp	r3, #0
   1e172:	it	eq
   1e174:	cmpeq	r2, #7
   1e176:	bne.n	1e17c <btrfs_read_fs_root@@Base+0x76>
   1e178:	ldr	r4, [r0, #40]	; 0x28
   1e17a:	b.n	1e138 <btrfs_read_fs_root@@Base+0x32>
   1e17c:	cmp	r3, #0
   1e17e:	it	eq
   1e180:	cmpeq	r2, #9
   1e182:	bne.n	1e190 <btrfs_read_fs_root@@Base+0x8a>
   1e184:	ldr	r4, [r0, #52]	; 0x34
   1e186:	cmp	r4, #0
   1e188:	it	eq
   1e18a:	mvneq.w	r4, #1
   1e18e:	b.n	1e138 <btrfs_read_fs_root@@Base+0x32>
   1e190:	cmp	r3, #0
   1e192:	it	eq
   1e194:	cmpeq	r2, #8
   1e196:	bne.n	1e1a4 <btrfs_read_fs_root@@Base+0x9e>
   1e198:	ldrb.w	r3, [r0, #364]	; 0x16c
   1e19c:	lsls	r3, r3, #27
   1e19e:	bpl.n	1e238 <btrfs_read_fs_root@@Base+0x132>
   1e1a0:	ldr	r4, [r0, #44]	; 0x2c
   1e1a2:	b.n	1e138 <btrfs_read_fs_root@@Base+0x32>
   1e1a4:	cmp	r3, #0
   1e1a6:	it	eq
   1e1a8:	cmpeq	r2, #10
   1e1aa:	bne.n	1e1b0 <btrfs_read_fs_root@@Base+0xaa>
   1e1ac:	ldr	r4, [r0, #48]	; 0x30
   1e1ae:	b.n	1e186 <btrfs_read_fs_root@@Base+0x80>
   1e1b0:	mov.w	r1, #4294967295	; 0xffffffff
   1e1b4:	cmp	r3, r1
   1e1b6:	mvn.w	r0, #7
   1e1ba:	it	eq
   1e1bc:	cmpeq	r2, r0
   1e1be:	beq.n	1e1fe <btrfs_read_fs_root@@Base+0xf8>
   1e1c0:	ldr.w	r3, [r9, #9]
   1e1c4:	ldr.w	r2, [r9, #13]
   1e1c8:	ands	r3, r2
   1e1ca:	adds	r3, #1
   1e1cc:	it	ne
   1e1ce:	movne	r3, #1
   1e1d0:	ldr	r6, [pc, #132]	; (1e258 <btrfs_read_fs_root@@Base+0x152>)
   1e1d2:	movw	r2, #735	; 0x2df
   1e1d6:	ldr	r0, [pc, #132]	; (1e25c <btrfs_read_fs_root@@Base+0x156>)
   1e1d8:	add.w	r7, r5, #56	; 0x38
   1e1dc:	add	r6, pc
   1e1de:	adds	r6, #70	; 0x46
   1e1e0:	add	r0, pc
   1e1e2:	mov	r1, r6
   1e1e4:	bl	1c73c <btrfs_fs_roots_compare_roots@@Base+0x386>
   1e1e8:	ldr	r2, [pc, #116]	; (1e260 <btrfs_read_fs_root@@Base+0x15a>)
   1e1ea:	add	r1, sp, #8
   1e1ec:	movs	r3, #0
   1e1ee:	add	r2, pc
   1e1f0:	mov	r0, r7
   1e1f2:	bl	17fc0 <rb_search@@Base>
   1e1f6:	cbz	r0, 1e202 <btrfs_read_fs_root@@Base+0xfc>
   1e1f8:	sub.w	r4, r0, #528	; 0x210
   1e1fc:	b.n	1e138 <btrfs_read_fs_root@@Base+0x32>
   1e1fe:	movs	r3, #1
   1e200:	b.n	1e1d0 <btrfs_read_fs_root@@Base+0xca>
   1e202:	mov	r1, r9
   1e204:	mov	r0, r5
   1e206:	bl	1e004 <btrfs_read_fs_root_no_cache@@Base>
   1e20a:	cmn.w	r0, #4096	; 0x1000
   1e20e:	mov	r4, r0
   1e210:	bhi.n	1e138 <btrfs_read_fs_root@@Base+0x32>
   1e212:	ldr	r3, [pc, #80]	; (1e264 <btrfs_read_fs_root@@Base+0x15e>)
   1e214:	add.w	r1, r0, #528	; 0x210
   1e218:	mov	r0, r7
   1e21a:	ldr.w	r3, [r8, r3]
   1e21e:	mov	r2, r3
   1e220:	str	r3, [sp, #4]
   1e222:	bl	17f78 <rb_insert@@Base>
   1e226:	movw	r2, #749	; 0x2ed
   1e22a:	mov	r1, r6
   1e22c:	mov	r3, r0
   1e22e:	ldr	r0, [pc, #56]	; (1e268 <btrfs_read_fs_root@@Base+0x162>)
   1e230:	add	r0, pc
   1e232:	bl	1c73c <btrfs_fs_roots_compare_roots@@Base+0x386>
   1e236:	b.n	1e138 <btrfs_read_fs_root@@Base+0x32>
   1e238:	mvn.w	r4, #1
   1e23c:	b.n	1e138 <btrfs_read_fs_root@@Base+0x32>
   1e23e:	mov	r0, r4
   1e240:	add	sp, #28
   1e242:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1e246:	nop
   1e248:	ldr	r6, [r6, #68]	; 0x44
   1e24a:	movs	r4, r0
   1e24c:	lsls	r0, r5, #8
   1e24e:	movs	r0, r0
   1e250:	ldr	r2, [r2, #68]	; 0x44
   1e252:	movs	r4, r0
   1e254:	ldr	r4, [r0, #68]	; 0x44
   1e256:	movs	r4, r0
   1e258:	vst4.8	{d16-d19}, [sp], r1
   1e25c:	rsb	r0, r7, #8454144	; 0x810000
   1e260:	b.n	1e5a2 <btrfs_setup_chunk_tree_and_device_map@@Base+0x2e>
   1e262:	vrshr.u32	q8, q8, #1
   1e266:	movs	r0, r0
   1e268:	stmia	r2!, {r2, r4, r5, r7}
   1e26a:	movs	r1, r0

0001e26c <btrfs_setup_all_roots@@Base>:
   1e26c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e270:	mov	r6, r2
   1e272:	ldr	r2, [pc, #716]	; (1e540 <btrfs_setup_all_roots@@Base+0x2d4>)
   1e274:	mov	r7, r3
   1e276:	ldr	r3, [pc, #716]	; (1e544 <btrfs_setup_all_roots@@Base+0x2d8>)
   1e278:	sub	sp, #60	; 0x3c
   1e27a:	add	r2, pc
   1e27c:	ldr.w	r9, [r0, #28]
   1e280:	ldr.w	r5, [r0, #308]	; 0x134
   1e284:	mov	r1, r0
   1e286:	ldr	r3, [r2, r3]
   1e288:	mov	r4, r0
   1e28a:	mov	r0, r9
   1e28c:	movs	r2, #1
   1e28e:	ldr	r3, [r3, #0]
   1e290:	str	r3, [sp, #52]	; 0x34
   1e292:	mov.w	r3, #0
   1e296:	movs	r3, #0
   1e298:	ldr.w	sl, [sp, #96]	; 0x60
   1e29c:	bl	1cc90 <btrfs_setup_root@@Base>
   1e2a0:	ldr	r3, [r5, #76]	; 0x4c
   1e2a2:	orrs.w	r2, r6, r7
   1e2a6:	ldr.w	r8, [pc, #672]	; 1e548 <btrfs_setup_all_roots@@Base+0x2dc>
   1e2aa:	ldr.w	fp, [r5, #72]	; 0x48
   1e2ae:	add	r8, pc
   1e2b0:	str	r3, [sp, #28]
   1e2b2:	and.w	r3, sl, #4
   1e2b6:	bne.n	1e2e8 <btrfs_setup_all_roots@@Base+0x7c>
   1e2b8:	cbnz	r3, 1e2ec <btrfs_setup_all_roots@@Base+0x80>
   1e2ba:	ldr	r6, [r5, #80]	; 0x50
   1e2bc:	ldr	r7, [r5, #84]	; 0x54
   1e2be:	ldr	r3, [sp, #28]
   1e2c0:	mov	r2, r6
   1e2c2:	mov	r0, r4
   1e2c4:	str.w	fp, [sp]
   1e2c8:	str	r3, [sp, #4]
   1e2ca:	mov	r3, r7
   1e2cc:	bl	1dd84 <read_tree_block@@Base>
   1e2d0:	str.w	r0, [r9]
   1e2d4:	bl	1c510 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1e2d8:	cbnz	r0, 1e33c <btrfs_setup_all_roots@@Base+0xd0>
   1e2da:	ldr	r3, [pc, #624]	; (1e54c <btrfs_setup_all_roots@@Base+0x2e0>)
   1e2dc:	ldr	r0, [pc, #624]	; (1e550 <btrfs_setup_all_roots@@Base+0x2e4>)
   1e2de:	ldr.w	r3, [r8, r3]
   1e2e2:	add	r0, pc
   1e2e4:	ldr	r1, [r3, #0]
   1e2e6:	b.n	1e302 <btrfs_setup_all_roots@@Base+0x96>
   1e2e8:	cmp	r3, #0
   1e2ea:	beq.n	1e2be <btrfs_setup_all_roots@@Base+0x52>
   1e2ec:	mov	r0, r5
   1e2ee:	bl	1c3ba <btrfs_fs_roots_compare_roots@@Base+0x4>
   1e2f2:	cmp	r0, #3
   1e2f4:	ble.n	1e320 <btrfs_setup_all_roots@@Base+0xb4>
   1e2f6:	ldr	r3, [pc, #596]	; (1e54c <btrfs_setup_all_roots@@Base+0x2e0>)
   1e2f8:	ldr	r0, [pc, #600]	; (1e554 <btrfs_setup_all_roots@@Base+0x2e8>)
   1e2fa:	ldr.w	r3, [r8, r3]
   1e2fe:	add	r0, pc
   1e300:	ldr	r1, [r3, #0]
   1e302:	blx	8b6c <fputs@plt+0x4>
   1e306:	mvn.w	r6, #4
   1e30a:	ldr	r2, [pc, #588]	; (1e558 <btrfs_setup_all_roots@@Base+0x2ec>)
   1e30c:	ldr	r3, [pc, #564]	; (1e544 <btrfs_setup_all_roots@@Base+0x2d8>)
   1e30e:	add	r2, pc
   1e310:	ldr	r3, [r2, r3]
   1e312:	ldr	r2, [r3, #0]
   1e314:	ldr	r3, [sp, #52]	; 0x34
   1e316:	eors	r2, r3
   1e318:	beq.w	1e538 <btrfs_setup_all_roots@@Base+0x2cc>
   1e31c:	blx	8708 <__stack_chk_fail@plt>
   1e320:	ldr.w	r3, [r4, #308]	; 0x134
   1e324:	movs	r2, #168	; 0xa8
   1e326:	addw	r3, r3, #2859	; 0xb2b
   1e32a:	mla	r0, r2, r0, r3
   1e32e:	ldr	r3, [r0, #12]
   1e330:	ldr.w	fp, [r0, #8]
   1e334:	ldr	r6, [r0, #0]
   1e336:	ldr	r7, [r0, #4]
   1e338:	str	r3, [sp, #28]
   1e33a:	b.n	1e2be <btrfs_setup_all_roots@@Base+0x52>
   1e33c:	ldr	r3, [pc, #540]	; (1e55c <btrfs_setup_all_roots@@Base+0x2f0>)
   1e33e:	movs	r2, #2
   1e340:	mov	r1, sl
   1e342:	mov	r0, r4
   1e344:	add	r3, pc
   1e346:	str	r3, [sp, #8]
   1e348:	movs	r3, #0
   1e34a:	strd	r2, r3, [sp]
   1e34e:	ldr	r2, [r4, #24]
   1e350:	bl	1dfa2 <read_tree_block@@Base+0x21e>
   1e354:	mov	r6, r0
   1e356:	cmp	r0, #0
   1e358:	bne.n	1e30a <btrfs_setup_all_roots@@Base+0x9e>
   1e35a:	ldr	r3, [r4, #24]
   1e35c:	movs	r7, #1
   1e35e:	movs	r2, #4
   1e360:	mov	r1, r4
   1e362:	mov	r0, r9
   1e364:	str.w	r7, [r3, #492]	; 0x1ec
   1e368:	ldr	r3, [r4, #36]	; 0x24
   1e36a:	str	r3, [sp, #0]
   1e36c:	movs	r3, #0
   1e36e:	bl	1df44 <read_tree_block@@Base+0x1c0>
   1e372:	cbz	r0, 1e382 <btrfs_setup_all_roots@@Base+0x116>
   1e374:	ldr	r3, [pc, #468]	; (1e54c <btrfs_setup_all_roots@@Base+0x2e0>)
   1e376:	ldr	r0, [pc, #488]	; (1e560 <btrfs_setup_all_roots@@Base+0x2f4>)
   1e378:	ldr.w	r3, [r8, r3]
   1e37c:	add	r0, pc
   1e37e:	ldr	r1, [r3, #0]
   1e380:	b.n	1e302 <btrfs_setup_all_roots@@Base+0x96>
   1e382:	ldr	r3, [r4, #36]	; 0x24
   1e384:	movs	r2, #7
   1e386:	mov	r1, sl
   1e388:	mov	r0, r4
   1e38a:	str.w	r7, [r3, #492]	; 0x1ec
   1e38e:	ldr	r3, [pc, #468]	; (1e564 <btrfs_setup_all_roots@@Base+0x2f8>)
   1e390:	add	r3, pc
   1e392:	str	r3, [sp, #8]
   1e394:	movs	r3, #0
   1e396:	strd	r2, r3, [sp]
   1e39a:	ldr	r2, [r4, #40]	; 0x28
   1e39c:	bl	1dfa2 <read_tree_block@@Base+0x21e>
   1e3a0:	mov	r6, r0
   1e3a2:	cmp	r0, #0
   1e3a4:	bne.n	1e30a <btrfs_setup_all_roots@@Base+0x9e>
   1e3a6:	ldr	r3, [r4, #40]	; 0x28
   1e3a8:	movs	r2, #9
   1e3aa:	mov	r1, r4
   1e3ac:	mov	r0, r9
   1e3ae:	str.w	r7, [r3, #492]	; 0x1ec
   1e3b2:	ldr	r3, [r4, #52]	; 0x34
   1e3b4:	str	r3, [sp, #0]
   1e3b6:	movs	r3, #0
   1e3b8:	bl	1df44 <read_tree_block@@Base+0x1c0>
   1e3bc:	cbz	r0, 1e414 <btrfs_setup_all_roots@@Base+0x1a8>
   1e3be:	ldr	r0, [r4, #52]	; 0x34
   1e3c0:	blx	8620 <free@plt+0x4>
   1e3c4:	str	r6, [r4, #52]	; 0x34
   1e3c6:	ldr	r3, [r4, #44]	; 0x2c
   1e3c8:	movs	r2, #8
   1e3ca:	mov	r1, r4
   1e3cc:	mov	r0, r9
   1e3ce:	str	r3, [sp, #0]
   1e3d0:	movs	r3, #0
   1e3d2:	bl	1df44 <read_tree_block@@Base+0x1c0>
   1e3d6:	cbz	r0, 1e41c <btrfs_setup_all_roots@@Base+0x1b0>
   1e3d8:	ldr	r0, [r4, #44]	; 0x2c
   1e3da:	blx	8620 <free@plt+0x4>
   1e3de:	movs	r3, #0
   1e3e0:	str	r3, [r4, #44]	; 0x2c
   1e3e2:	ldr.w	r3, [r4, #308]	; 0x134
   1e3e6:	ldr.w	r1, [r3, #180]	; 0xb4
   1e3ea:	movs	r3, #0
   1e3ec:	and.w	r2, r1, #1
   1e3f0:	orrs	r3, r2
   1e3f2:	beq.n	1e432 <btrfs_setup_all_roots@@Base+0x1c6>
   1e3f4:	ldr	r3, [r4, #48]	; 0x30
   1e3f6:	movs	r2, #10
   1e3f8:	mov	r1, r4
   1e3fa:	mov	r0, r9
   1e3fc:	str	r3, [sp, #0]
   1e3fe:	movs	r3, #0
   1e400:	bl	1df44 <read_tree_block@@Base+0x1c0>
   1e404:	cbz	r0, 1e42a <btrfs_setup_all_roots@@Base+0x1be>
   1e406:	ldr	r3, [pc, #324]	; (1e54c <btrfs_setup_all_roots@@Base+0x2e0>)
   1e408:	ldr	r0, [pc, #348]	; (1e568 <btrfs_setup_all_roots@@Base+0x2fc>)
   1e40a:	ldr.w	r3, [r8, r3]
   1e40e:	add	r0, pc
   1e410:	ldr	r1, [r3, #0]
   1e412:	b.n	1e302 <btrfs_setup_all_roots@@Base+0x96>
   1e414:	ldr	r3, [r4, #52]	; 0x34
   1e416:	str.w	r7, [r3, #492]	; 0x1ec
   1e41a:	b.n	1e3c6 <btrfs_setup_all_roots@@Base+0x15a>
   1e41c:	ldrb.w	r3, [r4, #364]	; 0x16c
   1e420:	orr.w	r3, r3, #16
   1e424:	strb.w	r3, [r4, #364]	; 0x16c
   1e428:	b.n	1e3e2 <btrfs_setup_all_roots@@Base+0x176>
   1e42a:	ldr	r3, [r4, #48]	; 0x30
   1e42c:	movs	r2, #1
   1e42e:	str.w	r2, [r3, #492]	; 0x1ec
   1e432:	ldr	r3, [r5, #96]	; 0x60
   1e434:	mov.w	r0, #544	; 0x220
   1e438:	str	r3, [sp, #16]
   1e43a:	ldr	r3, [r5, #100]	; 0x64
   1e43c:	str	r3, [sp, #20]
   1e43e:	blx	8870 <malloc@plt+0x4>
   1e442:	mov	r7, r0
   1e444:	cmp	r0, #0
   1e446:	beq.n	1e4da <btrfs_setup_all_roots@@Base+0x26e>
   1e448:	ldrd	r2, r3, [sp, #16]
   1e44c:	orrs	r3, r2
   1e44e:	bne.n	1e496 <btrfs_setup_all_roots@@Base+0x22a>
   1e450:	blx	8620 <free@plt+0x4>
   1e454:	ldr	r3, [sp, #28]
   1e456:	str.w	fp, [r4, #232]	; 0xe8
   1e45a:	strd	r3, fp, [r4, #236]	; 0xec
   1e45e:	str.w	r3, [r4, #244]	; 0xf4
   1e462:	ldr	r3, [r4, #24]
   1e464:	ldr	r0, [r3, #0]
   1e466:	bl	1c510 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1e46a:	cmp	r0, #0
   1e46c:	beq.n	1e4f2 <btrfs_setup_all_roots@@Base+0x286>
   1e46e:	tst.w	sl, #32
   1e472:	bne.n	1e4f2 <btrfs_setup_all_roots@@Base+0x286>
   1e474:	mov	r0, r4
   1e476:	bl	22190 <btrfs_read_block_groups@@Base>
   1e47a:	subs	r5, r0, #0
   1e47c:	bge.n	1e4f2 <btrfs_setup_all_roots@@Base+0x286>
   1e47e:	adds	r3, r5, #2
   1e480:	beq.n	1e4f2 <btrfs_setup_all_roots@@Base+0x286>
   1e482:	blx	897c <__errno_location@plt>
   1e486:	negs	r3, r5
   1e488:	mov	r6, r5
   1e48a:	str	r3, [r0, #0]
   1e48c:	ldr	r0, [pc, #220]	; (1e56c <btrfs_setup_all_roots@@Base+0x300>)
   1e48e:	add	r0, pc
   1e490:	bl	17b7c <__btrfs_error@@Base>
   1e494:	b.n	1e30a <btrfs_setup_all_roots@@Base+0x9e>
   1e496:	mov	r1, r4
   1e498:	mvn.w	r2, #5
   1e49c:	mov.w	r3, #4294967295	; 0xffffffff
   1e4a0:	bl	1cc90 <btrfs_setup_root@@Base>
   1e4a4:	ldr	r3, [r5, #72]	; 0x48
   1e4a6:	ldr	r2, [r5, #76]	; 0x4c
   1e4a8:	mov	r0, r4
   1e4aa:	adds	r3, #1
   1e4ac:	adc.w	r2, r2, #0
   1e4b0:	strd	r3, r2, [sp]
   1e4b4:	ldrd	r2, r3, [sp, #16]
   1e4b8:	bl	1dd84 <read_tree_block@@Base>
   1e4bc:	str	r7, [r4, #60]	; 0x3c
   1e4be:	str	r0, [r7, #0]
   1e4c0:	mov	r3, r0
   1e4c2:	bl	1c510 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1e4c6:	mov	r5, r0
   1e4c8:	cmp	r0, #0
   1e4ca:	bne.n	1e454 <btrfs_setup_all_roots@@Base+0x1e8>
   1e4cc:	mov	r0, r3
   1e4ce:	bl	17320 <free_extent_buffer@@Base>
   1e4d2:	mov	r0, r7
   1e4d4:	blx	8620 <free@plt+0x4>
   1e4d8:	str	r5, [r4, #60]	; 0x3c
   1e4da:	ldr	r3, [pc, #112]	; (1e54c <btrfs_setup_all_roots@@Base+0x2e0>)
   1e4dc:	ldr	r0, [pc, #144]	; (1e570 <btrfs_setup_all_roots@@Base+0x304>)
   1e4de:	ldr.w	r3, [r8, r3]
   1e4e2:	add	r0, pc
   1e4e4:	ldr	r1, [r3, #0]
   1e4e6:	blx	8b6c <fputs@plt+0x4>
   1e4ea:	tst.w	sl, #2
   1e4ee:	bne.n	1e454 <btrfs_setup_all_roots@@Base+0x1e8>
   1e4f0:	b.n	1e306 <btrfs_setup_all_roots@@Base+0x9a>
   1e4f2:	add	r1, sp, #32
   1e4f4:	mov	r0, r4
   1e4f6:	movs	r2, #5
   1e4f8:	movs	r3, #0
   1e4fa:	strd	r2, r3, [sp, #32]
   1e4fe:	mov.w	r2, #4294967295	; 0xffffffff
   1e502:	movs	r3, #132	; 0x84
   1e504:	strb.w	r2, [sp, #41]	; 0x29
   1e508:	strb.w	r3, [sp, #40]	; 0x28
   1e50c:	strb.w	r2, [sp, #42]	; 0x2a
   1e510:	strb.w	r2, [sp, #43]	; 0x2b
   1e514:	strb.w	r2, [sp, #44]	; 0x2c
   1e518:	strb.w	r2, [sp, #45]	; 0x2d
   1e51c:	strb.w	r2, [sp, #46]	; 0x2e
   1e520:	strb.w	r2, [sp, #47]	; 0x2f
   1e524:	strb.w	r2, [sp, #48]	; 0x30
   1e528:	bl	1e106 <btrfs_read_fs_root@@Base>
   1e52c:	cmn.w	r0, #4096	; 0x1000
   1e530:	str	r0, [r4, #20]
   1e532:	bls.w	1e30a <btrfs_setup_all_roots@@Base+0x9e>
   1e536:	b.n	1e306 <btrfs_setup_all_roots@@Base+0x9a>
   1e538:	mov	r0, r6
   1e53a:	add	sp, #60	; 0x3c
   1e53c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e540:	ldr	r6, [r0, #48]	; 0x30
   1e542:	movs	r4, r0
   1e544:	lsls	r0, r5, #8
   1e546:	movs	r0, r0
   1e548:	ldr	r2, [r2, #44]	; 0x2c
   1e54a:	movs	r4, r0
   1e54c:	lsls	r0, r7, #8
   1e54e:	movs	r0, r0
   1e550:			; <UNDEFINED> instruction: 0xf5300001
   1e554:			; <UNDEFINED> instruction: 0xf4f80001
   1e558:	ldr	r2, [r6, #36]	; 0x24
   1e55a:	movs	r4, r0
   1e55c:	asrs	r6, r2, #32
   1e55e:	movs	r2, r0
   1e560:			; <UNDEFINED> instruction: 0xf4af0001
   1e564:			; <UNDEFINED> instruction: 0xf4b70001
   1e568:	bics.w	r0, lr, #8454144	; 0x810000
   1e56c:			; <UNDEFINED> instruction: 0xf3fb0001
   1e570:	usat	r0, #1, r9

0001e574 <btrfs_setup_chunk_tree_and_device_map@@Base>:
   1e574:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e578:	mov	r1, r0
   1e57a:	ldr.w	r8, [r0, #308]	; 0x134
   1e57e:	mov	r4, r0
   1e580:	mov	r6, r2
   1e582:	ldr	r0, [r0, #32]
   1e584:	movs	r2, #3
   1e586:	mov	r7, r3
   1e588:	movs	r3, #0
   1e58a:	ldr.w	r9, [pc, #212]	; 1e660 <btrfs_setup_chunk_tree_and_device_map@@Base+0xec>
   1e58e:	bl	1cc90 <btrfs_setup_root@@Base>
   1e592:	mov	r0, r4
   1e594:	bl	2aa68 <btrfs_read_sys_array@@Base>
   1e598:	add	r9, pc
   1e59a:	mov	r5, r0
   1e59c:	cmp	r0, #0
   1e59e:	bne.n	1e61c <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   1e5a0:	orrs.w	r3, r6, r7
   1e5a4:	ldr.w	fp, [r8, #164]	; 0xa4
   1e5a8:	ldr.w	sl, [r8, #168]	; 0xa8
   1e5ac:	beq.n	1e5da <btrfs_setup_chunk_tree_and_device_map@@Base+0x66>
   1e5ae:	ldr.w	ip, [r4, #388]	; 0x184
   1e5b2:	movs	r0, #0
   1e5b4:	adds.w	r1, ip, #4294967295	; 0xffffffff
   1e5b8:	adc.w	r0, r0, #4294967295	; 0xffffffff
   1e5bc:	and.w	r2, r1, r6
   1e5c0:	and.w	r3, r0, r7
   1e5c4:	orrs.w	r1, r2, r3
   1e5c8:	beq.n	1e5e6 <btrfs_setup_chunk_tree_and_device_map@@Base+0x72>
   1e5ca:	ldr	r0, [pc, #152]	; (1e664 <btrfs_setup_chunk_tree_and_device_map@@Base+0xf0>)
   1e5cc:	mov	r2, r6
   1e5ce:	mov	r3, r7
   1e5d0:	str.w	ip, [sp]
   1e5d4:	add	r0, pc
   1e5d6:	bl	17b00 <__btrfs_warning@@Base>
   1e5da:	ldr.w	r6, [r8, #88]	; 0x58
   1e5de:	mov	r2, fp
   1e5e0:	ldr.w	r7, [r8, #92]	; 0x5c
   1e5e4:	mov	r3, sl
   1e5e6:	strd	r2, r3, [sp]
   1e5ea:	mov	r0, r4
   1e5ec:	mov	r2, r6
   1e5ee:	mov	r3, r7
   1e5f0:	ldr.w	sl, [r4, #32]
   1e5f4:	bl	1dd84 <read_tree_block@@Base>
   1e5f8:	str.w	r0, [sl]
   1e5fc:	ldr	r3, [r4, #32]
   1e5fe:	ldr	r0, [r3, #0]
   1e600:	bl	1c510 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1e604:	mov	r6, r0
   1e606:	cbnz	r0, 1e632 <btrfs_setup_chunk_tree_and_device_map@@Base+0xbe>
   1e608:	ldrsb.w	r3, [r4, #364]	; 0x16c
   1e60c:	cmp	r3, #0
   1e60e:	bge.n	1e624 <btrfs_setup_chunk_tree_and_device_map@@Base+0xb0>
   1e610:	ldr	r0, [pc, #84]	; (1e668 <btrfs_setup_chunk_tree_and_device_map@@Base+0xf4>)
   1e612:	mov	r5, r6
   1e614:	add	r0, pc
   1e616:	bl	17b00 <__btrfs_warning@@Base>
   1e61a:	str	r6, [r4, #32]
   1e61c:	mov	r0, r5
   1e61e:	add	sp, #12
   1e620:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e624:	ldr	r0, [pc, #68]	; (1e66c <btrfs_setup_chunk_tree_and_device_map@@Base+0xf8>)
   1e626:	mvn.w	r5, #4
   1e62a:	add	r0, pc
   1e62c:	bl	17b7c <__btrfs_error@@Base>
   1e630:	b.n	1e61c <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   1e632:	ldr.w	r1, [r8, #60]	; 0x3c
   1e636:	movs	r2, #0
   1e638:	and.w	r3, r1, #2
   1e63c:	orrs	r3, r2
   1e63e:	bne.n	1e61c <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   1e640:	mov	r0, r4
   1e642:	bl	2ac10 <btrfs_read_chunk_tree@@Base>
   1e646:	mov	r5, r0
   1e648:	cmp	r0, #0
   1e64a:	beq.n	1e61c <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   1e64c:	ldr	r3, [pc, #32]	; (1e670 <btrfs_setup_chunk_tree_and_device_map@@Base+0xfc>)
   1e64e:	ldr	r0, [pc, #36]	; (1e674 <btrfs_setup_chunk_tree_and_device_map@@Base+0x100>)
   1e650:	ldr.w	r3, [r9, r3]
   1e654:	add	r0, pc
   1e656:	ldr	r1, [r3, #0]
   1e658:	blx	8b6c <fputs@plt+0x4>
   1e65c:	b.n	1e61c <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   1e65e:	nop
   1e660:	str	r0, [r5, #124]	; 0x7c
   1e662:	movs	r4, r0
   1e664:			; <UNDEFINED> instruction: 0xf2d50001
   1e668:	movt	r0, #40961	; 0xa001
   1e66c:			; <UNDEFINED> instruction: 0xf2dc0001
   1e670:	lsls	r0, r7, #8
   1e672:	movs	r0, r0
   1e674:	movt	r0, #36865	; 0x9001
   1e678:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e67c:	mov	r8, r2
   1e67e:	ldr	r2, [pc, #624]	; (1e8f0 <btrfs_setup_chunk_tree_and_device_map@@Base+0x37c>)
   1e680:	mov	r9, r3
   1e682:	ldr	r3, [pc, #624]	; (1e8f4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x380>)
   1e684:	sub	sp, #36	; 0x24
   1e686:	add	r2, pc
   1e688:	ldr	r7, [pc, #620]	; (1e8f8 <btrfs_setup_chunk_tree_and_device_map@@Base+0x384>)
   1e68a:	ldr	r5, [sp, #88]	; 0x58
   1e68c:	mov	sl, r0
   1e68e:	ldr	r3, [r2, r3]
   1e690:	movs	r2, #0
   1e692:	add	r7, pc
   1e694:	mov	r6, r1
   1e696:	ldr	r3, [r3, #0]
   1e698:	str	r3, [sp, #28]
   1e69a:	mov.w	r3, #0
   1e69e:	movs	r3, #0
   1e6a0:	str	r3, [sp, #24]
   1e6a2:	orrs.w	r3, r8, r9
   1e6a6:	mov.w	r3, #4
   1e6aa:	str	r3, [sp, #8]
   1e6ac:	mov.w	r3, #0
   1e6b0:	strd	r2, r3, [sp]
   1e6b4:	itt	eq
   1e6b6:	moveq.w	r8, #65536	; 0x10000
   1e6ba:	moveq.w	r9, #0
   1e6be:	blx	85d0 <posix_fadvise64@plt>
   1e6c2:	cbz	r0, 1e6d2 <btrfs_setup_chunk_tree_and_device_map@@Base+0x15e>
   1e6c4:	ldr	r3, [pc, #564]	; (1e8fc <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   1e6c6:	ldr	r0, [pc, #568]	; (1e900 <btrfs_setup_chunk_tree_and_device_map@@Base+0x38c>)
   1e6c8:	ldr	r3, [r7, r3]
   1e6ca:	add	r0, pc
   1e6cc:	ldr	r1, [r3, #0]
   1e6ce:	blx	8b6c <fputs@plt+0x4>
   1e6d2:	and.w	fp, r5, #1
   1e6d6:	mov	r2, r8
   1e6d8:	mov	r3, r9
   1e6da:	mov	r0, fp
   1e6dc:	bl	1cd5e <btrfs_new_fs_info@@Base>
   1e6e0:	mov	r4, r0
   1e6e2:	cbnz	r0, 1e708 <btrfs_setup_chunk_tree_and_device_map@@Base+0x194>
   1e6e4:	ldr	r3, [pc, #532]	; (1e8fc <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   1e6e6:	ldr	r0, [pc, #540]	; (1e904 <btrfs_setup_chunk_tree_and_device_map@@Base+0x390>)
   1e6e8:	ldr	r3, [r7, r3]
   1e6ea:	add	r0, pc
   1e6ec:	ldr	r1, [r3, #0]
   1e6ee:	blx	8b6c <fputs@plt+0x4>
   1e6f2:	ldr	r2, [pc, #532]	; (1e908 <btrfs_setup_chunk_tree_and_device_map@@Base+0x394>)
   1e6f4:	ldr	r3, [pc, #508]	; (1e8f4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x380>)
   1e6f6:	add	r2, pc
   1e6f8:	ldr	r3, [r2, r3]
   1e6fa:	ldr	r2, [r3, #0]
   1e6fc:	ldr	r3, [sp, #28]
   1e6fe:	eors	r2, r3
   1e700:	beq.w	1e8e8 <btrfs_setup_chunk_tree_and_device_map@@Base+0x374>
   1e704:	blx	8708 <__stack_chk_fail@plt>
   1e708:	lsls	r3, r5, #27
   1e70a:	ittt	mi
   1e70c:	ldrbmi.w	r3, [r0, #364]	; 0x16c
   1e710:	orrmi.w	r3, r3, #4
   1e714:	strbmi.w	r3, [r0, #364]	; 0x16c
   1e718:	lsls	r0, r5, #23
   1e71a:	ittt	mi
   1e71c:	ldrbmi.w	r3, [r4, #364]	; 0x16c
   1e720:	orrmi.w	r3, r3, #32
   1e724:	strbmi.w	r3, [r4, #364]	; 0x16c
   1e728:	ands.w	r2, r5, #1024	; 0x400
   1e72c:	ittt	ne
   1e72e:	ldrbne.w	r3, [r4, #364]	; 0x16c
   1e732:	orrne.w	r3, r3, #64	; 0x40
   1e736:	strbne.w	r3, [r4, #364]	; 0x16c
   1e73a:	lsls	r1, r5, #20
   1e73c:	ittt	mi
   1e73e:	ldrbmi.w	r3, [r4, #364]	; 0x16c
   1e742:	orrmi.w	r3, r3, #128	; 0x80
   1e746:	strbmi.w	r3, [r4, #364]	; 0x16c
   1e74a:	movw	r3, #4104	; 0x1008
   1e74e:	bics	r3, r5
   1e750:	bne.n	1e76a <btrfs_setup_chunk_tree_and_device_map@@Base+0x1f6>
   1e752:	ldr	r3, [pc, #424]	; (1e8fc <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   1e754:	ldr	r0, [pc, #436]	; (1e90c <btrfs_setup_chunk_tree_and_device_map@@Base+0x398>)
   1e756:	ldr	r3, [r7, r3]
   1e758:	add	r0, pc
   1e75a:	ldr	r1, [r3, #0]
   1e75c:	blx	8b6c <fputs@plt+0x4>
   1e760:	mov	r0, r4
   1e762:	movs	r4, #0
   1e764:	bl	1cd10 <btrfs_free_fs_info@@Base>
   1e768:	b.n	1e6f2 <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   1e76a:	ands.w	r3, r5, #4096	; 0x1000
   1e76e:	it	ne
   1e770:	movne	r3, #2
   1e772:	cbz	r2, 1e778 <btrfs_setup_chunk_tree_and_device_map@@Base+0x204>
   1e774:	orr.w	r3, r3, #4
   1e778:	and.w	r2, r5, #128	; 0x80
   1e77c:	mov	r1, r6
   1e77e:	strd	r3, r2, [sp, #8]
   1e782:	mov	r0, sl
   1e784:	add	r2, sp, #24
   1e786:	strd	r8, r9, [sp]
   1e78a:	str	r3, [sp, #20]
   1e78c:	bl	1d018 <btrfs_scan_fs_devices@@Base>
   1e790:	mov	r1, r0
   1e792:	cmp	r0, #0
   1e794:	bne.n	1e760 <btrfs_setup_chunk_tree_and_device_map@@Base+0x1ec>
   1e796:	cmp.w	fp, #0
   1e79a:	ldr	r0, [sp, #24]
   1e79c:	ldr	r3, [sp, #20]
   1e79e:	it	ne
   1e7a0:	movne	r1, #2
   1e7a2:	tst.w	r5, #64	; 0x40
   1e7a6:	it	ne
   1e7a8:	orrne.w	r1, r1, #128	; 0x80
   1e7ac:	str.w	r0, [r4, #352]	; 0x160
   1e7b0:	str	r3, [sp, #20]
   1e7b2:	bl	2871c <btrfs_open_devices@@Base>
   1e7b6:	cmp	r0, #0
   1e7b8:	bne.n	1e760 <btrfs_setup_chunk_tree_and_device_map@@Base+0x1ec>
   1e7ba:	tst.w	r5, #8
   1e7be:	ldr.w	r6, [r4, #308]	; 0x134
   1e7c2:	ldr	r3, [sp, #20]
   1e7c4:	beq.n	1e7f0 <btrfs_setup_chunk_tree_and_device_map@@Base+0x27c>
   1e7c6:	ldr	r0, [sp, #24]
   1e7c8:	movs	r3, #1
   1e7ca:	str	r3, [sp, #0]
   1e7cc:	mov	r2, r8
   1e7ce:	mov	r3, r9
   1e7d0:	mov	r1, r6
   1e7d2:	ldr	r0, [r0, #64]	; 0x40
   1e7d4:	bl	1d3c8 <btrfs_read_dev_super@@Base>
   1e7d8:	cbz	r0, 1e7fc <btrfs_setup_chunk_tree_and_device_map@@Base+0x288>
   1e7da:	ldr	r3, [pc, #288]	; (1e8fc <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   1e7dc:	ldr	r0, [pc, #304]	; (1e910 <btrfs_setup_chunk_tree_and_device_map@@Base+0x39c>)
   1e7de:	ldr	r3, [r7, r3]
   1e7e0:	add	r0, pc
   1e7e2:	ldr	r1, [r3, #0]
   1e7e4:	blx	8b6c <fputs@plt+0x4>
   1e7e8:	ldr	r0, [sp, #24]
   1e7ea:	bl	2862c <btrfs_close_devices@@Base>
   1e7ee:	b.n	1e760 <btrfs_setup_chunk_tree_and_device_map@@Base+0x1ec>
   1e7f0:	str	r3, [sp, #0]
   1e7f2:	mov	r2, r8
   1e7f4:	mov	r3, r9
   1e7f6:	mov	r1, r6
   1e7f8:	mov	r0, sl
   1e7fa:	b.n	1e7d4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x260>
   1e7fc:	ldr	r1, [r6, #60]	; 0x3c
   1e7fe:	mov	r2, r0
   1e800:	and.w	r3, r1, #8
   1e804:	orrs	r3, r2
   1e806:	beq.n	1e81c <btrfs_setup_chunk_tree_and_device_map@@Base+0x2a8>
   1e808:	ldrb.w	r3, [r4, #364]	; 0x16c
   1e80c:	lsls	r2, r3, #25
   1e80e:	bmi.n	1e81c <btrfs_setup_chunk_tree_and_device_map@@Base+0x2a8>
   1e810:	ldr	r3, [pc, #232]	; (1e8fc <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   1e812:	ldr	r0, [pc, #256]	; (1e914 <btrfs_setup_chunk_tree_and_device_map@@Base+0x3a0>)
   1e814:	ldr	r3, [r7, r3]
   1e816:	add	r0, pc
   1e818:	ldr	r1, [r3, #0]
   1e81a:	b.n	1e7e4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x270>
   1e81c:	ldr.w	r8, [sp, #24]
   1e820:	add.w	r0, r6, #32
   1e824:	movs	r2, #16
   1e826:	mov	r1, r8
   1e828:	blx	86a0 <memcmp@plt+0x4>
   1e82c:	cbz	r0, 1e840 <btrfs_setup_chunk_tree_and_device_map@@Base+0x2cc>
   1e82e:	ldr	r1, [pc, #232]	; (1e918 <btrfs_setup_chunk_tree_and_device_map@@Base+0x3a4>)
   1e830:	movw	r2, #1251	; 0x4e3
   1e834:	ldr	r0, [pc, #228]	; (1e91c <btrfs_setup_chunk_tree_and_device_map@@Base+0x3a8>)
   1e836:	add	r1, pc
   1e838:	adds	r1, #89	; 0x59
   1e83a:	add	r0, pc
   1e83c:	bl	1c6c4 <btrfs_fs_roots_compare_roots@@Base+0x30e>
   1e840:	ldr.w	r7, [r4, #308]	; 0x134
   1e844:	mov	r3, r0
   1e846:	ldr.w	r1, [r7, #188]	; 0xbc
   1e84a:	and.w	r2, r1, #1024	; 0x400
   1e84e:	orrs	r3, r2
   1e850:	beq.n	1e872 <btrfs_setup_chunk_tree_and_device_map@@Base+0x2fe>
   1e852:	movs	r2, #16
   1e854:	addw	r0, r6, #571	; 0x23b
   1e858:	add.w	r1, r8, r2
   1e85c:	blx	86a0 <memcmp@plt+0x4>
   1e860:	cbz	r0, 1e872 <btrfs_setup_chunk_tree_and_device_map@@Base+0x2fe>
   1e862:	ldr	r1, [pc, #188]	; (1e920 <btrfs_setup_chunk_tree_and_device_map@@Base+0x3ac>)
   1e864:	movw	r2, #1253	; 0x4e5
   1e868:	ldr	r0, [pc, #184]	; (1e924 <btrfs_setup_chunk_tree_and_device_map@@Base+0x3b0>)
   1e86a:	add	r1, pc
   1e86c:	adds	r1, #89	; 0x59
   1e86e:	add	r0, pc
   1e870:	b.n	1e83c <btrfs_setup_chunk_tree_and_device_map@@Base+0x2c8>
   1e872:	ldr.w	r3, [r6, #144]	; 0x90
   1e876:	mov	r1, r5
   1e878:	mov	r0, r7
   1e87a:	str.w	r3, [r4, #388]	; 0x184
   1e87e:	ldr.w	r3, [r6, #148]	; 0x94
   1e882:	str.w	r3, [r4, #384]	; 0x180
   1e886:	ldr.w	r3, [r6, #156]	; 0x9c
   1e88a:	str.w	r3, [r4, #392]	; 0x188
   1e88e:	bl	1ceb4 <btrfs_check_fs_compatibility@@Base>
   1e892:	cmp	r0, #0
   1e894:	bne.n	1e7e8 <btrfs_setup_chunk_tree_and_device_map@@Base+0x274>
   1e896:	ldrd	r2, r3, [sp, #80]	; 0x50
   1e89a:	mov	r0, r4
   1e89c:	bl	1e574 <btrfs_setup_chunk_tree_and_device_map@@Base>
   1e8a0:	cbz	r0, 1e8b0 <btrfs_setup_chunk_tree_and_device_map@@Base+0x33c>
   1e8a2:	mov	r0, r4
   1e8a4:	bl	1cf54 <btrfs_release_all_roots@@Base>
   1e8a8:	mov	r0, r4
   1e8aa:	bl	1cfb8 <btrfs_cleanup_all_caches@@Base>
   1e8ae:	b.n	1e7e8 <btrfs_setup_chunk_tree_and_device_map@@Base+0x274>
   1e8b0:	ldr	r0, [r4, #32]
   1e8b2:	cmp	r0, #0
   1e8b4:	beq.w	1e6f2 <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   1e8b8:	ldr	r0, [r0, #0]
   1e8ba:	movs	r3, #16
   1e8bc:	movs	r2, #64	; 0x40
   1e8be:	mov	r1, r4
   1e8c0:	bl	17a1a <read_extent_buffer@@Base>
   1e8c4:	ldrd	r2, r3, [sp, #72]	; 0x48
   1e8c8:	mov	r0, r4
   1e8ca:	str	r5, [sp, #0]
   1e8cc:	bl	1e26c <btrfs_setup_all_roots@@Base>
   1e8d0:	cmp	r0, #0
   1e8d2:	beq.w	1e6f2 <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   1e8d6:	lsls	r3, r5, #22
   1e8d8:	bmi.w	1e6f2 <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   1e8dc:	ldrsb.w	r3, [r4, #364]	; 0x16c
   1e8e0:	cmp	r3, #0
   1e8e2:	blt.w	1e6f2 <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   1e8e6:	b.n	1e8a2 <btrfs_setup_chunk_tree_and_device_map@@Base+0x32e>
   1e8e8:	mov	r0, r4
   1e8ea:	add	sp, #36	; 0x24
   1e8ec:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e8f0:	str	r2, [r7, #108]	; 0x6c
   1e8f2:	movs	r4, r0
   1e8f4:	lsls	r0, r5, #8
   1e8f6:	movs	r0, r0
   1e8f8:	str	r6, [r5, #108]	; 0x6c
   1e8fa:	movs	r4, r0
   1e8fc:	lsls	r0, r7, #8
   1e8fe:	movs	r0, r0
   1e900:			; <UNDEFINED> instruction: 0xf26d0001
   1e904:			; <UNDEFINED> instruction: 0xf26d0001
   1e908:	str	r2, [r1, #104]	; 0x68
   1e90a:	movs	r4, r0
   1e90c:			; <UNDEFINED> instruction: 0xf2260001
   1e910:	rsbs	r0, pc, #1
   1e914:	subs.w	r0, pc, #1
   1e918:			; <UNDEFINED> instruction: 0xf2f30001
   1e91c:	rsb	r0, r6, #1
   1e920:			; <UNDEFINED> instruction: 0xf2bf0001
   1e924:	rsb	r0, pc, #1

0001e928 <open_ctree_fs_info@@Base>:
   1e928:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1e92c:	mov	r9, r2
   1e92e:	ldr	r2, [pc, #164]	; (1e9d4 <open_ctree_fs_info@@Base+0xac>)
   1e930:	mov	r8, r3
   1e932:	ldr	r3, [pc, #164]	; (1e9d8 <open_ctree_fs_info@@Base+0xb0>)
   1e934:	sub	sp, #140	; 0x8c
   1e936:	add	r2, pc
   1e938:	add	r1, sp, #24
   1e93a:	ldr	r6, [sp, #184]	; 0xb8
   1e93c:	mov	r4, r0
   1e93e:	ldr	r3, [r2, r3]
   1e940:	ldr	r3, [r3, #0]
   1e942:	str	r3, [sp, #132]	; 0x84
   1e944:	mov.w	r3, #0
   1e948:	bl	39db8 <__libc_csu_fini@@Base+0x1c>
   1e94c:	cmp	r0, #0
   1e94e:	bge.n	1e970 <open_ctree_fs_info@@Base+0x48>
   1e950:	ldr	r0, [pc, #136]	; (1e9dc <open_ctree_fs_info@@Base+0xb4>)
   1e952:	mov	r1, r4
   1e954:	add	r0, pc
   1e956:	bl	17b7c <__btrfs_error@@Base>
   1e95a:	movs	r4, #0
   1e95c:	ldr	r2, [pc, #128]	; (1e9e0 <open_ctree_fs_info@@Base+0xb8>)
   1e95e:	ldr	r3, [pc, #120]	; (1e9d8 <open_ctree_fs_info@@Base+0xb0>)
   1e960:	add	r2, pc
   1e962:	ldr	r3, [r2, r3]
   1e964:	ldr	r2, [r3, #0]
   1e966:	ldr	r3, [sp, #132]	; 0x84
   1e968:	eors	r2, r3
   1e96a:	beq.n	1e9cc <open_ctree_fs_info@@Base+0xa4>
   1e96c:	blx	8708 <__stack_chk_fail@plt>
   1e970:	ldr	r1, [sp, #40]	; 0x28
   1e972:	and.w	r1, r1, #61440	; 0xf000
   1e976:	cmp.w	r1, #32768	; 0x8000
   1e97a:	beq.n	1e98a <open_ctree_fs_info@@Base+0x62>
   1e97c:	cmp.w	r1, #24576	; 0x6000
   1e980:	beq.n	1e98a <open_ctree_fs_info@@Base+0x62>
   1e982:	ldr	r0, [pc, #96]	; (1e9e4 <open_ctree_fs_info@@Base+0xbc>)
   1e984:	mov	r1, r4
   1e986:	add	r0, pc
   1e988:	b.n	1e956 <open_ctree_fs_info@@Base+0x2e>
   1e98a:	tst.w	r6, #1
   1e98e:	mov	r0, r4
   1e990:	ite	ne
   1e992:	movne	r1, #2
   1e994:	moveq	r1, #0
   1e996:	blx	8970 <__open64_2@plt>
   1e99a:	subs	r5, r0, #0
   1e99c:	bge.n	1e9a6 <open_ctree_fs_info@@Base+0x7e>
   1e99e:	ldr	r0, [pc, #72]	; (1e9e8 <open_ctree_fs_info@@Base+0xc0>)
   1e9a0:	mov	r1, r4
   1e9a2:	add	r0, pc
   1e9a4:	b.n	1e956 <open_ctree_fs_info@@Base+0x2e>
   1e9a6:	str	r6, [sp, #16]
   1e9a8:	mov	r1, r4
   1e9aa:	ldrd	r6, r7, [sp, #176]	; 0xb0
   1e9ae:	mov	r2, r9
   1e9b0:	mov	r3, r8
   1e9b2:	strd	r6, r7, [sp, #8]
   1e9b6:	ldrd	r6, r7, [sp, #168]	; 0xa8
   1e9ba:	strd	r6, r7, [sp]
   1e9be:	bl	1e678 <btrfs_setup_chunk_tree_and_device_map@@Base+0x104>
   1e9c2:	mov	r4, r0
   1e9c4:	mov	r0, r5
   1e9c6:	blx	8b9c <close@plt>
   1e9ca:	b.n	1e95c <open_ctree_fs_info@@Base+0x34>
   1e9cc:	mov	r0, r4
   1e9ce:	add	sp, #140	; 0x8c
   1e9d0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1e9d4:	str	r2, [r1, #68]	; 0x44
   1e9d6:	movs	r4, r0
   1e9d8:	lsls	r0, r5, #8
   1e9da:	movs	r0, r0
   1e9dc:			; <UNDEFINED> instruction: 0xf1380001
   1e9e0:	str	r0, [r4, #64]	; 0x40
   1e9e2:	movs	r4, r0
   1e9e4:	adds.w	r0, fp, #1
   1e9e8:			; <UNDEFINED> instruction: 0xf1260001

0001e9ec <open_ctree@@Base>:
   1e9ec:	push	{r4, r5, r6, r7, lr}
   1e9ee:	sub	sp, #28
   1e9f0:	ldr	r1, [pc, #64]	; (1ea34 <open_ctree@@Base+0x48>)
   1e9f2:	mov	r5, r0
   1e9f4:	ldr	r4, [sp, #48]	; 0x30
   1e9f6:	mov	r7, r2
   1e9f8:	ldr	r0, [pc, #60]	; (1ea38 <open_ctree@@Base+0x4c>)
   1e9fa:	add	r1, pc
   1e9fc:	mov	r6, r3
   1e9fe:	movw	r2, #1335	; 0x537
   1ea02:	and.w	r3, r4, #2048	; 0x800
   1ea06:	add	r0, pc
   1ea08:	adds	r1, #105	; 0x69
   1ea0a:	bl	1c73c <btrfs_fs_roots_compare_roots@@Base+0x386>
   1ea0e:	movs	r2, #0
   1ea10:	movs	r3, #0
   1ea12:	mov	r0, r5
   1ea14:	strd	r2, r3, [sp, #8]
   1ea18:	strd	r2, r3, [sp]
   1ea1c:	mov	r2, r7
   1ea1e:	mov	r3, r6
   1ea20:	str	r4, [sp, #16]
   1ea22:	bl	1e928 <open_ctree_fs_info@@Base>
   1ea26:	cbz	r0, 1ea30 <open_ctree@@Base+0x44>
   1ea28:	lsls	r3, r4, #22
   1ea2a:	ite	mi
   1ea2c:	ldrmi	r0, [r0, #32]
   1ea2e:	ldrpl	r0, [r0, #20]
   1ea30:	add	sp, #28
   1ea32:	pop	{r4, r5, r6, r7, pc}
   1ea34:			; <UNDEFINED> instruction: 0xf12f0001
   1ea38:			; <UNDEFINED> instruction: 0xf0d70001

0001ea3c <open_ctree_fd@@Base>:
   1ea3c:	push	{r4, r6, r7, lr}
   1ea3e:	sub	sp, #24
   1ea40:	ldr	r4, [sp, #40]	; 0x28
   1ea42:	lsls	r6, r4, #20
   1ea44:	bpl.n	1ea58 <open_ctree_fd@@Base+0x1c>
   1ea46:	ldr	r0, [pc, #48]	; (1ea78 <open_ctree_fd@@Base+0x3c>)
   1ea48:	mov	r2, r4
   1ea4a:	movs	r3, #0
   1ea4c:	add	r0, pc
   1ea4e:	bl	17b7c <__btrfs_error@@Base>
   1ea52:	movs	r0, #0
   1ea54:	add	sp, #24
   1ea56:	pop	{r4, r6, r7, pc}
   1ea58:	movs	r6, #0
   1ea5a:	movs	r7, #0
   1ea5c:	str	r4, [sp, #16]
   1ea5e:	strd	r6, r7, [sp, #8]
   1ea62:	strd	r6, r7, [sp]
   1ea66:	bl	1e678 <btrfs_setup_chunk_tree_and_device_map@@Base+0x104>
   1ea6a:	cmp	r0, #0
   1ea6c:	beq.n	1ea54 <open_ctree_fd@@Base+0x18>
   1ea6e:	lsls	r3, r4, #22
   1ea70:	ite	mi
   1ea72:	ldrmi	r0, [r0, #32]
   1ea74:	ldrpl	r0, [r0, #20]
   1ea76:	b.n	1ea54 <open_ctree_fd@@Base+0x18>
   1ea78:			; <UNDEFINED> instruction: 0xf0bc0001

0001ea7c <btrfs_create_tree@@Base>:
   1ea7c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ea80:	mov	r9, r2
   1ea82:	vpush	{d8}
   1ea86:	mov	r8, r3
   1ea88:	ldr	r2, [pc, #428]	; (1ec38 <btrfs_create_tree@@Base+0x1bc>)
   1ea8a:	mov	r7, r0
   1ea8c:	ldr	r3, [pc, #428]	; (1ec3c <btrfs_create_tree@@Base+0x1c0>)
   1ea8e:	mov	sl, r1
   1ea90:	add	r2, pc
   1ea92:	movs	r0, #1
   1ea94:	sub	sp, #60	; 0x3c
   1ea96:	ldr	r3, [r2, r3]
   1ea98:	ldr	r3, [r3, #0]
   1ea9a:	str	r3, [sp, #52]	; 0x34
   1ea9c:	mov.w	r3, #0
   1eaa0:	ldr	r3, [r1, #28]
   1eaa2:	mov.w	r1, #544	; 0x220
   1eaa6:	vmov	s16, r3
   1eaaa:	blx	8588 <calloc@plt+0x4>
   1eaae:	mov	r4, r0
   1eab0:	cmp	r0, #0
   1eab2:	beq.w	1ec24 <btrfs_create_tree@@Base+0x1a8>
   1eab6:	mov	r2, r9
   1eab8:	mov	r3, r8
   1eaba:	mov	r1, sl
   1eabc:	mov.w	fp, #132	; 0x84
   1eac0:	bl	1cc90 <btrfs_setup_root@@Base>
   1eac4:	movs	r6, #0
   1eac6:	str.w	r9, [r4, #447]	; 0x1bf
   1eaca:	movs	r2, #0
   1eacc:	str.w	r8, [r4, #451]	; 0x1c3
   1ead0:	movs	r3, #0
   1ead2:	strb.w	fp, [r4, #455]	; 0x1c7
   1ead6:	mov	r1, r4
   1ead8:	strd	r2, r3, [r4, #456]	; 0x1c8
   1eadc:	mov	r0, r7
   1eade:	strd	r2, r3, [sp, #24]
   1eae2:	strd	r2, r3, [sp, #16]
   1eae6:	strd	r6, r6, [sp, #8]
   1eaea:	ldr.w	r2, [sl, #384]	; 0x180
   1eaee:	strd	r9, r8, [sp]
   1eaf2:	bl	23164 <btrfs_alloc_free_block@@Base>
   1eaf6:	cmn.w	r0, #4096	; 0x1000
   1eafa:	mov	r5, r0
   1eafc:	bls.n	1eb1e <btrfs_create_tree@@Base+0xa2>
   1eafe:	mov	r6, r0
   1eb00:	mov	r0, r4
   1eb02:	mov	r4, r6
   1eb04:	blx	8620 <free@plt+0x4>
   1eb08:	ldr	r2, [pc, #308]	; (1ec40 <btrfs_create_tree@@Base+0x1c4>)
   1eb0a:	ldr	r3, [pc, #304]	; (1ec3c <btrfs_create_tree@@Base+0x1c0>)
   1eb0c:	add	r2, pc
   1eb0e:	ldr	r3, [r2, r3]
   1eb10:	ldr	r2, [r3, #0]
   1eb12:	ldr	r3, [sp, #52]	; 0x34
   1eb14:	eors	r2, r3
   1eb16:	beq.w	1ec2a <btrfs_create_tree@@Base+0x1ae>
   1eb1a:	blx	8708 <__stack_chk_fail@plt>
   1eb1e:	mov	r2, r6
   1eb20:	mov	r1, r6
   1eb22:	movs	r3, #101	; 0x65
   1eb24:	bl	17aa2 <memset_extent_buffer@@Base>
   1eb28:	ldr	r3, [r5, #40]	; 0x28
   1eb2a:	mov	r0, r5
   1eb2c:	str.w	r3, [r5, #144]	; 0x90
   1eb30:	ldr	r3, [r5, #44]	; 0x2c
   1eb32:	str.w	r3, [r5, #148]	; 0x94
   1eb36:	ldrd	r2, r3, [r7, #8]
   1eb3a:	str.w	r9, [r5, #184]	; 0xb8
   1eb3e:	str.w	r8, [r5, #188]	; 0xbc
   1eb42:	str.w	r2, [r5, #176]	; 0xb0
   1eb46:	str.w	r3, [r5, #180]	; 0xb4
   1eb4a:	ldr.w	r2, [r5, #152]	; 0x98
   1eb4e:	ldr.w	r3, [r5, #156]	; 0x9c
   1eb52:	bic.w	r3, r3, #4278190080	; 0xff000000
   1eb56:	str.w	r2, [r5, #152]	; 0x98
   1eb5a:	orr.w	r3, r3, #16777216	; 0x1000000
   1eb5e:	str.w	r3, [r5, #156]	; 0x9c
   1eb62:	ldr.w	r1, [sl, #352]	; 0x160
   1eb66:	movs	r3, #16
   1eb68:	movs	r2, #32
   1eb6a:	str	r5, [r4, #0]
   1eb6c:	add	r1, r3
   1eb6e:	bl	17a30 <write_extent_buffer@@Base>
   1eb72:	movs	r3, #16
   1eb74:	movs	r2, #64	; 0x40
   1eb76:	mov	r1, sl
   1eb78:	mov	r0, r5
   1eb7a:	bl	17a30 <write_extent_buffer@@Base>
   1eb7e:	mov	r0, r5
   1eb80:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   1eb84:	ldr	r2, [r4, #0]
   1eb86:	movs	r1, #1
   1eb88:	add.w	r0, r4, #255	; 0xff
   1eb8c:	ldr	r3, [r2, #80]	; 0x50
   1eb8e:	adds	r3, #1
   1eb90:	str	r3, [r2, #80]	; 0x50
   1eb92:	ldr	r3, [r4, #0]
   1eb94:	movs	r2, #0
   1eb96:	str.w	r1, [r4, #492]	; 0x1ec
   1eb9a:	str	r3, [r4, #4]
   1eb9c:	movs	r3, #0
   1eb9e:	strd	r2, r3, [r4, #216]	; 0xd8
   1eba2:	strd	r2, r3, [r4, #192]	; 0xc0
   1eba6:	ldrd	r2, r3, [r5, #40]	; 0x28
   1ebaa:	strb.w	r6, [r4, #246]	; 0xf6
   1ebae:	str.w	r1, [r4, #224]	; 0xe0
   1ebb2:	mov	r1, r6
   1ebb4:	strd	r2, r3, [r4, #184]	; 0xb8
   1ebb8:	ldrd	r2, r3, [r7, #8]
   1ebbc:	strd	r2, r3, [r4, #168]	; 0xa8
   1ebc0:	movs	r2, #0
   1ebc2:	ldr	r3, [r5, #76]	; 0x4c
   1ebc4:	strd	r3, r6, [r4, #200]	; 0xc8
   1ebc8:	movs	r3, #0
   1ebca:	strd	r2, r3, [r4, #208]	; 0xd0
   1ebce:	strd	r2, r3, [r4, #176]	; 0xb0
   1ebd2:	movs	r2, #16
   1ebd4:	blx	89bc <memset@plt+0x4>
   1ebd8:	strb.w	r6, [r4, #245]	; 0xf5
   1ebdc:	vmov	r1, s16
   1ebe0:	add.w	r3, r4, #8
   1ebe4:	add	r2, sp, #32
   1ebe6:	mov	r0, r7
   1ebe8:	strb.w	r6, [sp, #41]	; 0x29
   1ebec:	strb.w	r6, [sp, #42]	; 0x2a
   1ebf0:	strb.w	r6, [sp, #43]	; 0x2b
   1ebf4:	strb.w	r6, [sp, #44]	; 0x2c
   1ebf8:	strb.w	r6, [sp, #45]	; 0x2d
   1ebfc:	strb.w	r6, [sp, #46]	; 0x2e
   1ec00:	strb.w	r6, [sp, #47]	; 0x2f
   1ec04:	strb.w	r6, [sp, #48]	; 0x30
   1ec08:	strd	r9, r8, [sp, #32]
   1ec0c:	strb.w	fp, [sp, #40]	; 0x28
   1ec10:	bl	282b0 <btrfs_insert_root@@Base>
   1ec14:	mov	r6, r0
   1ec16:	cmp	r0, #0
   1ec18:	beq.w	1eb08 <btrfs_create_tree@@Base+0x8c>
   1ec1c:	mov	r0, r5
   1ec1e:	bl	17320 <free_extent_buffer@@Base>
   1ec22:	b.n	1eb00 <btrfs_create_tree@@Base+0x84>
   1ec24:	mvn.w	r4, #11
   1ec28:	b.n	1eb08 <btrfs_create_tree@@Base+0x8c>
   1ec2a:	mov	r0, r4
   1ec2c:	add	sp, #60	; 0x3c
   1ec2e:	vpop	{d8}
   1ec32:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ec36:	nop
   1ec38:	str	r0, [r6, #44]	; 0x2c
   1ec3a:	movs	r4, r0
   1ec3c:	lsls	r0, r5, #8
   1ec3e:	movs	r0, r0
   1ec40:	str	r4, [r6, #36]	; 0x24
   1ec42:	movs	r4, r0
   1ec44:	push	{r4, r5, lr}
   1ec46:	mov	r1, r0
   1ec48:	ldr.w	r3, [r0, #356]	; 0x164
   1ec4c:	and.w	r2, r2, #7
   1ec50:	add.w	r1, r1, #356	; 0x164
   1ec54:	sub.w	r0, r3, #44	; 0x2c
   1ec58:	add.w	r3, r0, #44	; 0x2c
   1ec5c:	cmp	r3, r1
   1ec5e:	bne.n	1ec64 <btrfs_create_tree@@Base+0x1e8>
   1ec60:	movs	r0, #0
   1ec62:	pop	{r4, r5, pc}
   1ec64:	ldr	r3, [r0, #0]
   1ec66:	movs	r5, #0
   1ec68:	and.w	r4, r2, r3
   1ec6c:	orrs.w	r3, r4, r5
   1ec70:	bne.n	1ec62 <btrfs_create_tree@@Base+0x1e6>
   1ec72:	ldr	r0, [r0, #44]	; 0x2c
   1ec74:	subs	r0, #44	; 0x2c
   1ec76:	b.n	1ec58 <btrfs_create_tree@@Base+0x1dc>
   1ec78:	push	{r4, r5, r6, r7, lr}
   1ec7a:	movs	r3, #0
   1ec7c:	and.w	r4, r2, #2040	; 0x7f8
   1ec80:	mov	r5, r3
   1ec82:	orrs.w	r1, r4, r5
   1ec86:	beq.n	1ecd2 <btrfs_create_tree@@Base+0x256>
   1ec88:	and.w	r6, r2, #1
   1ec8c:	mov	r7, r3
   1ec8e:	orrs.w	r3, r6, r7
   1ec92:	and.w	r6, r2, #4
   1ec96:	mov.w	r7, #0
   1ec9a:	ittt	ne
   1ec9c:	ldrne.w	r3, [r0, #248]	; 0xf8
   1eca0:	orrne	r3, r4
   1eca2:	strne.w	r3, [r0, #248]	; 0xf8
   1eca6:	orrs.w	r3, r6, r7
   1ecaa:	and.w	r6, r2, #2
   1ecae:	mov.w	r7, #0
   1ecb2:	itttt	ne
   1ecb4:	ldrdne	r1, r3, [r0, #256]	; 0x100
   1ecb8:	orrne	r3, r5
   1ecba:	orrne	r1, r4
   1ecbc:	strdne	r1, r3, [r0, #256]	; 0x100
   1ecc0:	orrs.w	r3, r6, r7
   1ecc4:	itttt	ne
   1ecc6:	ldrdne	r2, r3, [r0, #264]	; 0x108
   1ecca:	orrne	r2, r4
   1eccc:	orrne	r3, r5
   1ecce:	strdne	r2, r3, [r0, #264]	; 0x108
   1ecd2:	pop	{r4, r5, r6, r7, pc}
   1ecd4:	push	{r4, lr}
   1ecd6:	mov	r4, r1
   1ecd8:	ldr	r1, [pc, #84]	; (1ed30 <btrfs_create_tree@@Base+0x2b4>)
   1ecda:	sub	sp, #24
   1ecdc:	ldr	r3, [pc, #84]	; (1ed34 <btrfs_create_tree@@Base+0x2b8>)
   1ecde:	add	r1, pc
   1ece0:	ldr	r3, [r1, r3]
   1ece2:	mov	r1, sp
   1ece4:	ldr	r3, [r3, #0]
   1ece6:	str	r3, [sp, #20]
   1ece8:	mov.w	r3, #0
   1ecec:	movs	r3, #25
   1ecee:	muls	r2, r3
   1ecf0:	movs	r3, #17
   1ecf2:	adds	r2, #101	; 0x65
   1ecf4:	bl	17a1a <read_extent_buffer@@Base>
   1ecf8:	ldr.w	r3, [sp, #13]
   1ecfc:	ldr.w	r2, [sp, #9]
   1ed00:	str.w	r3, [r4, #13]
   1ed04:	ldrb.w	r3, [sp, #8]
   1ed08:	str.w	r2, [r4, #9]
   1ed0c:	ldr	r2, [pc, #40]	; (1ed38 <btrfs_create_tree@@Base+0x2bc>)
   1ed0e:	strb	r3, [r4, #8]
   1ed10:	ldr	r3, [sp, #0]
   1ed12:	add	r2, pc
   1ed14:	str	r3, [r4, #0]
   1ed16:	ldr	r3, [sp, #4]
   1ed18:	str	r3, [r4, #4]
   1ed1a:	ldr	r3, [pc, #24]	; (1ed34 <btrfs_create_tree@@Base+0x2b8>)
   1ed1c:	ldr	r3, [r2, r3]
   1ed1e:	ldr	r2, [r3, #0]
   1ed20:	ldr	r3, [sp, #20]
   1ed22:	eors	r2, r3
   1ed24:	beq.n	1ed2a <btrfs_create_tree@@Base+0x2ae>
   1ed26:	blx	8708 <__stack_chk_fail@plt>
   1ed2a:	add	sp, #24
   1ed2c:	pop	{r4, pc}
   1ed2e:	nop
   1ed30:	str	r2, [r4, #8]
   1ed32:	movs	r4, r0
   1ed34:	lsls	r0, r5, #8
   1ed36:	movs	r0, r0
   1ed38:	str	r6, [r5, #4]
   1ed3a:	movs	r4, r0
   1ed3c:	ldr	r2, [pc, #60]	; (1ed7c <btrfs_create_tree@@Base+0x300>)
   1ed3e:	movs	r1, #16
   1ed40:	ldr	r3, [pc, #60]	; (1ed80 <btrfs_create_tree@@Base+0x304>)
   1ed42:	push	{r4, lr}
   1ed44:	add	r2, pc
   1ed46:	sub	sp, #72	; 0x48
   1ed48:	add	r4, sp, #4
   1ed4a:	ldr	r3, [r2, r3]
   1ed4c:	mov	r0, r4
   1ed4e:	ldr	r3, [r3, #0]
   1ed50:	str	r3, [sp, #68]	; 0x44
   1ed52:	mov.w	r3, #0
   1ed56:	blx	88bc <backtrace@plt>
   1ed5a:	movs	r2, #2
   1ed5c:	mov	r1, r0
   1ed5e:	mov	r0, r4
   1ed60:	blx	8bcc <backtrace_symbols_fd@plt>
   1ed64:	ldr	r2, [pc, #28]	; (1ed84 <btrfs_create_tree@@Base+0x308>)
   1ed66:	ldr	r3, [pc, #24]	; (1ed80 <btrfs_create_tree@@Base+0x304>)
   1ed68:	add	r2, pc
   1ed6a:	ldr	r3, [r2, r3]
   1ed6c:	ldr	r2, [r3, #0]
   1ed6e:	ldr	r3, [sp, #68]	; 0x44
   1ed70:	eors	r2, r3
   1ed72:	beq.n	1ed78 <btrfs_create_tree@@Base+0x2fc>
   1ed74:	blx	8708 <__stack_chk_fail@plt>
   1ed78:	add	sp, #72	; 0x48
   1ed7a:	pop	{r4, pc}
   1ed7c:	str	r4, [r7, #0]
   1ed7e:	movs	r4, r0
   1ed80:	lsls	r0, r5, #8
   1ed82:	movs	r0, r0
   1ed84:	str	r0, [r3, #0]
   1ed86:	movs	r4, r0
   1ed88:	push	{r0, r1, r2, lr}
   1ed8a:	movs	r3, #1
   1ed8c:	str	r3, [sp, #0]
   1ed8e:	ldr	r3, [r2, #32]
   1ed90:	bl	1baf8 <btrfs_del_items@@Base>
   1ed94:	add	sp, #12
   1ed96:	ldr.w	pc, [sp], #4
   1ed9a:	push	{r4, r5, lr}
   1ed9c:	sub	sp, #20
   1ed9e:	ldr	r4, [pc, #40]	; (1edc8 <btrfs_create_tree@@Base+0x34c>)
   1eda0:	ldr	r5, [pc, #40]	; (1edcc <btrfs_create_tree@@Base+0x350>)
   1eda2:	add	r4, pc
   1eda4:	ldr	r4, [r4, r5]
   1eda6:	ldr	r5, [sp, #32]
   1eda8:	strd	r3, r2, [sp]
   1edac:	mov	r3, r1
   1edae:	ldr	r2, [pc, #32]	; (1edd0 <btrfs_create_tree@@Base+0x354>)
   1edb0:	movs	r1, #1
   1edb2:	strd	r0, r5, [sp, #8]
   1edb6:	add	r2, pc
   1edb8:	ldr	r0, [r4, #0]
   1edba:	blx	8a64 <__fprintf_chk@plt+0x4>
   1edbe:	add	sp, #20
   1edc0:	ldmia.w	sp!, {r4, r5, lr}
   1edc4:	b.n	1ed3c <btrfs_create_tree@@Base+0x2c0>
   1edc6:	nop
   1edc8:	ldrsh	r6, [r3, r7]
   1edca:	movs	r4, r0
   1edcc:	lsls	r0, r7, #8
   1edce:	movs	r0, r0
   1edd0:	sub	sp, #216	; 0xd8
   1edd2:	movs	r1, r0
   1edd4:	push	{r4}
   1edd6:	ldr	r4, [sp, #4]
   1edd8:	cbz	r4, 1ede4 <btrfs_create_tree@@Base+0x368>
   1edda:	movs	r4, #1
   1eddc:	str	r4, [sp, #4]
   1edde:	ldr.w	r4, [sp], #4
   1ede2:	b.n	1ed9a <btrfs_create_tree@@Base+0x31e>
   1ede4:	ldr.w	r4, [sp], #4
   1ede8:	bx	lr
   1edea:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1edee:	mov	r7, r0
   1edf0:	ldr	r5, [pc, #452]	; (1efb8 <btrfs_create_tree@@Base+0x53c>)
   1edf2:	sub	sp, #100	; 0x64
   1edf4:	ldr	r0, [pc, #452]	; (1efbc <btrfs_create_tree@@Base+0x540>)
   1edf6:	mov	r6, r1
   1edf8:	add	r5, pc
   1edfa:	mov	r4, r2
   1edfc:	ldrb.w	r9, [r4, #196]	; 0xc4
   1ee00:	ldr	r0, [r5, r0]
   1ee02:	ldr	r2, [pc, #444]	; (1efc0 <btrfs_create_tree@@Base+0x544>)
   1ee04:	ldr	r0, [r0, #0]
   1ee06:	str	r0, [sp, #92]	; 0x5c
   1ee08:	mov.w	r0, #0
   1ee0c:	ldr.w	r0, [r6, #488]	; 0x1e8
   1ee10:	add	r2, pc
   1ee12:	ldr	r1, [sp, #136]	; 0x88
   1ee14:	orrs.w	r0, r9, r0
   1ee18:	bne.n	1ee34 <btrfs_create_tree@@Base+0x3b8>
   1ee1a:	mov.w	sl, #0
   1ee1e:	ldr	r2, [pc, #420]	; (1efc4 <btrfs_create_tree@@Base+0x548>)
   1ee20:	ldr	r3, [pc, #408]	; (1efbc <btrfs_create_tree@@Base+0x540>)
   1ee22:	add	r2, pc
   1ee24:	ldr	r3, [r2, r3]
   1ee26:	ldr	r2, [r3, #0]
   1ee28:	ldr	r3, [sp, #92]	; 0x5c
   1ee2a:	eors	r2, r3
   1ee2c:	beq.w	1efae <btrfs_create_tree@@Base+0x532>
   1ee30:	blx	8708 <__stack_chk_fail@plt>
   1ee34:	cmp	r1, #0
   1ee36:	bne.w	1ef46 <btrfs_create_tree@@Base+0x4ca>
   1ee3a:	ldr	r1, [pc, #396]	; (1efc8 <btrfs_create_tree@@Base+0x54c>)
   1ee3c:	ldr.w	r8, [r2, r1]
   1ee40:	cmp	r3, #0
   1ee42:	beq.w	1ef4a <btrfs_create_tree@@Base+0x4ce>
   1ee46:	ldrd	r2, r3, [r4, #40]	; 0x28
   1ee4a:	strd	r2, r3, [sp, #40]	; 0x28
   1ee4e:	movs	r5, #0
   1ee50:	ldr.w	r3, [r4, #184]	; 0xb8
   1ee54:	str	r3, [sp, #48]	; 0x30
   1ee56:	ldr.w	r3, [r4, #188]	; 0xbc
   1ee5a:	str	r3, [sp, #52]	; 0x34
   1ee5c:	ldr.w	r3, [r4, #192]	; 0xc0
   1ee60:	str	r3, [sp, #56]	; 0x38
   1ee62:	add.w	r3, r9, #4294967295	; 0xffffffff
   1ee66:	asrs	r2, r3, #31
   1ee68:	mov	r1, r3
   1ee6a:	strd	r1, r2, [sp, #64]	; 0x40
   1ee6e:	ldr	r3, [sp, #56]	; 0x38
   1ee70:	cmp	r5, r3
   1ee72:	beq.n	1ee1a <btrfs_create_tree@@Base+0x39e>
   1ee74:	cmp.w	r9, #0
   1ee78:	bne.n	1ef50 <btrfs_create_tree@@Base+0x4d4>
   1ee7a:	add	r1, sp, #72	; 0x48
   1ee7c:	mov	r2, r5
   1ee7e:	mov	r0, r4
   1ee80:	bl	1ecd4 <btrfs_create_tree@@Base+0x258>
   1ee84:	ldrb.w	r3, [sp, #80]	; 0x50
   1ee88:	cmp	r3, #108	; 0x6c
   1ee8a:	bne.w	1efaa <btrfs_create_tree@@Base+0x52e>
   1ee8e:	movs	r3, #25
   1ee90:	mla	r3, r3, r5, r4
   1ee94:	ldr.w	r2, [r3, #214]	; 0xd6
   1ee98:	add	r2, r4
   1ee9a:	add.w	r3, r2, #197	; 0xc5
   1ee9e:	ldrb.w	r2, [r2, #217]	; 0xd9
   1eea2:	cmp	r2, #0
   1eea4:	beq.w	1efaa <btrfs_create_tree@@Base+0x52e>
   1eea8:	mov	r2, r3
   1eeaa:	ldr.w	sl, [r2, #21]!
   1eeae:	ldr.w	fp, [r2, #4]
   1eeb2:	orrs.w	r2, sl, fp
   1eeb6:	beq.n	1efaa <btrfs_create_tree@@Base+0x52e>
   1eeb8:	mov	r2, r3
   1eeba:	ldr.w	r0, [r3, #37]!
   1eebe:	ldr.w	r1, [r2, #29]!
   1eec2:	ldr.w	ip, [r3, #4]
   1eec6:	ldr.w	lr, [r2, #4]
   1eeca:	ldr.w	r2, [sp, #81]	; 0x51
   1eece:	str	r1, [sp, #60]	; 0x3c
   1eed0:	ldr.w	r1, [sp, #85]	; 0x55
   1eed4:	subs	r2, r2, r0
   1eed6:	str.w	r2, [sp, #81]	; 0x51
   1eeda:	mov	r0, r7
   1eedc:	sbc.w	r1, r1, ip
   1eee0:	strd	r2, r1, [sp, #32]
   1eee4:	ldrd	r2, r3, [sp, #72]	; 0x48
   1eee8:	str.w	r1, [sp, #85]	; 0x55
   1eeec:	mov	r1, r6
   1eeee:	strd	r2, r3, [sp, #24]
   1eef2:	ldr	r3, [sp, #48]	; 0x30
   1eef4:	str	r3, [sp, #16]
   1eef6:	ldr	r3, [sp, #52]	; 0x34
   1eef8:	str	r3, [sp, #20]
   1eefa:	ldrd	r2, r3, [sp, #40]	; 0x28
   1eefe:	strd	r2, r3, [sp, #8]
   1ef02:	mov	r2, sl
   1ef04:	ldr	r3, [sp, #60]	; 0x3c
   1ef06:	strd	r3, lr, [sp]
   1ef0a:	mov	r3, fp
   1ef0c:	blx	r8
   1ef0e:	mov	sl, r0
   1ef10:	cmp	r0, #0
   1ef12:	beq.n	1efaa <btrfs_create_tree@@Base+0x52e>
   1ef14:	ldr	r2, [pc, #180]	; (1efcc <btrfs_create_tree@@Base+0x550>)
   1ef16:	movs	r3, #1
   1ef18:	ldr	r1, [pc, #180]	; (1efd0 <btrfs_create_tree@@Base+0x554>)
   1ef1a:	ldr	r0, [pc, #184]	; (1efd4 <btrfs_create_tree@@Base+0x558>)
   1ef1c:	add	r2, pc
   1ef1e:	add	r1, pc
   1ef20:	str	r3, [sp, #0]
   1ef22:	add	r0, pc
   1ef24:	movw	r3, #1502	; 0x5de
   1ef28:	bl	1ed9a <btrfs_create_tree@@Base+0x31e>
   1ef2c:	ldr	r2, [pc, #168]	; (1efd8 <btrfs_create_tree@@Base+0x55c>)
   1ef2e:	ldr	r1, [pc, #172]	; (1efdc <btrfs_create_tree@@Base+0x560>)
   1ef30:	movs	r3, #1
   1ef32:	ldr	r0, [pc, #172]	; (1efe0 <btrfs_create_tree@@Base+0x564>)
   1ef34:	add	r2, pc
   1ef36:	str	r3, [sp, #0]
   1ef38:	add	r1, pc
   1ef3a:	add	r0, pc
   1ef3c:	movw	r3, #1518	; 0x5ee
   1ef40:	bl	1ed9a <btrfs_create_tree@@Base+0x31e>
   1ef44:	b.n	1ee1e <btrfs_create_tree@@Base+0x3a2>
   1ef46:	ldr	r1, [pc, #156]	; (1efe4 <btrfs_create_tree@@Base+0x568>)
   1ef48:	b.n	1ee3c <btrfs_create_tree@@Base+0x3c0>
   1ef4a:	movs	r2, #0
   1ef4c:	movs	r3, #0
   1ef4e:	b.n	1ee4a <btrfs_create_tree@@Base+0x3ce>
   1ef50:	add.w	r3, r5, r5, lsl #5
   1ef54:	movs	r0, #0
   1ef56:	add	r3, r4
   1ef58:	movs	r1, #0
   1ef5a:	ldr.w	r2, [r3, #214]!
   1ef5e:	ldr	r3, [r3, #4]
   1ef60:	strd	r0, r1, [sp, #32]
   1ef64:	ldrd	r0, r1, [sp, #64]	; 0x40
   1ef68:	strd	r0, r1, [sp, #24]
   1ef6c:	ldr	r1, [sp, #48]	; 0x30
   1ef6e:	str	r1, [sp, #16]
   1ef70:	ldr	r1, [sp, #52]	; 0x34
   1ef72:	str	r1, [sp, #20]
   1ef74:	ldrd	r0, r1, [sp, #40]	; 0x28
   1ef78:	strd	r0, r1, [sp, #8]
   1ef7c:	mov	r0, r7
   1ef7e:	ldr.w	r1, [r6, #464]	; 0x1d0
   1ef82:	ldr.w	r1, [r1, #384]	; 0x180
   1ef86:	str	r1, [sp, #0]
   1ef88:	movs	r1, #0
   1ef8a:	str	r1, [sp, #4]
   1ef8c:	mov	r1, r6
   1ef8e:	blx	r8
   1ef90:	mov	sl, r0
   1ef92:	cbz	r0, 1efaa <btrfs_create_tree@@Base+0x52e>
   1ef94:	ldr	r2, [pc, #80]	; (1efe8 <btrfs_create_tree@@Base+0x56c>)
   1ef96:	movs	r3, #1
   1ef98:	ldr	r1, [pc, #80]	; (1efec <btrfs_create_tree@@Base+0x570>)
   1ef9a:	ldr	r0, [pc, #84]	; (1eff0 <btrfs_create_tree@@Base+0x574>)
   1ef9c:	add	r2, pc
   1ef9e:	str	r3, [sp, #0]
   1efa0:	add	r1, pc
   1efa2:	add	r0, pc
   1efa4:	movw	r3, #1511	; 0x5e7
   1efa8:	b.n	1ef28 <btrfs_create_tree@@Base+0x4ac>
   1efaa:	adds	r5, #1
   1efac:	b.n	1ee6e <btrfs_create_tree@@Base+0x3f2>
   1efae:	mov	r0, sl
   1efb0:	add	sp, #100	; 0x64
   1efb2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1efb6:	nop
   1efb8:	ldrsh	r0, [r1, r6]
   1efba:	movs	r4, r0
   1efbc:	lsls	r0, r5, #8
   1efbe:	movs	r0, r0
   1efc0:	ldrsh	r0, [r6, r5]
   1efc2:	movs	r4, r0
   1efc4:	ldrsh	r6, [r3, r5]
   1efc6:	movs	r4, r0
   1efc8:	lsls	r4, r1, #9
   1efca:	movs	r0, r0
   1efcc:			; <UNDEFINED> instruction: 0xf3b20001
   1efd0:	ldcl	0, cr0, [pc], #-4	; 1efd0 <btrfs_create_tree@@Base+0x554>
   1efd4:	vaddl.s16	q8, d11, d1
   1efd8:			; <UNDEFINED> instruction: 0xf39a0001
   1efdc:	stcl	0, cr0, [r5], #-4
   1efe0:	vaddl.s8	q8, d3, d1
   1efe4:	lsls	r0, r4, #9
   1efe6:	movs	r0, r0
   1efe8:			; <UNDEFINED> instruction: 0xf3320001
   1efec:			; <UNDEFINED> instruction: 0xebfd0001
   1eff0:	vhadd.s16	d16, d11, d1
   1eff4:	push	{r0, r1, r2, r3, r4, lr}
   1eff6:	ldr	r4, [pc, #40]	; (1f020 <btrfs_create_tree@@Base+0x5a4>)
   1eff8:	ldr	r5, [pc, #40]	; (1f024 <btrfs_create_tree@@Base+0x5a8>)
   1effa:	add	r4, pc
   1effc:	ldr	r4, [r4, r5]
   1effe:	ldr	r5, [sp, #24]
   1f000:	strd	r3, r2, [sp]
   1f004:	mov	r3, r1
   1f006:	ldr	r2, [pc, #32]	; (1f028 <btrfs_create_tree@@Base+0x5ac>)
   1f008:	movs	r1, #1
   1f00a:	strd	r0, r5, [sp, #8]
   1f00e:	add	r2, pc
   1f010:	ldr	r0, [r4, #0]
   1f012:	blx	8a64 <__fprintf_chk@plt+0x4>
   1f016:	bl	1ed3c <btrfs_create_tree@@Base+0x2c0>
   1f01a:	blx	8b84 <abort@plt>
   1f01e:	nop
   1f020:	ldrb	r6, [r0, r6]
   1f022:	movs	r4, r0
   1f024:	lsls	r0, r7, #8
   1f026:	movs	r0, r0
   1f028:	add	r6, sp, #592	; 0x250
   1f02a:	movs	r1, r0
   1f02c:	push	{r0, r1, r4, lr}
   1f02e:	ldr	r4, [sp, #16]
   1f030:	cbz	r4, 1f038 <btrfs_create_tree@@Base+0x5bc>
   1f032:	str	r4, [sp, #0]
   1f034:	bl	1eff4 <btrfs_create_tree@@Base+0x578>
   1f038:	add	sp, #8
   1f03a:	pop	{r4, pc}
   1f03c:	cmp	r0, #176	; 0xb0
   1f03e:	push	{r0, r1, r2, lr}
   1f040:	beq.n	1f068 <btrfs_create_tree@@Base+0x5ec>
   1f042:	cmp	r0, #182	; 0xb6
   1f044:	beq.n	1f068 <btrfs_create_tree@@Base+0x5ec>
   1f046:	cmp	r0, #184	; 0xb8
   1f048:	beq.n	1f070 <btrfs_create_tree@@Base+0x5f4>
   1f04a:	cmp	r0, #178	; 0xb2
   1f04c:	beq.n	1f074 <btrfs_create_tree@@Base+0x5f8>
   1f04e:	ldr	r2, [pc, #40]	; (1f078 <btrfs_create_tree@@Base+0x5fc>)
   1f050:	movs	r3, #1
   1f052:	ldr	r1, [pc, #40]	; (1f07c <btrfs_create_tree@@Base+0x600>)
   1f054:	ldr	r0, [pc, #40]	; (1f080 <btrfs_create_tree@@Base+0x604>)
   1f056:	add	r2, pc
   1f058:	str	r3, [sp, #0]
   1f05a:	adds	r2, #16
   1f05c:	add	r1, pc
   1f05e:	add	r0, pc
   1f060:	movw	r3, #1818	; 0x71a
   1f064:	bl	1eff4 <btrfs_create_tree@@Base+0x578>
   1f068:	movs	r0, #9
   1f06a:	add	sp, #12
   1f06c:	ldr.w	pc, [sp], #4
   1f070:	movs	r0, #13
   1f072:	b.n	1f06a <btrfs_create_tree@@Base+0x5ee>
   1f074:	movs	r0, #29
   1f076:	b.n	1f06a <btrfs_create_tree@@Base+0x5ee>
   1f078:			; <UNDEFINED> instruction: 0xf2780001
   1f07c:			; <UNDEFINED> instruction: 0xb638
   1f07e:	movs	r1, r0
   1f080:	cdp	0, 9, cr0, cr15, cr1, {0}
   1f084:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f088:	mov	r5, r3
   1f08a:	vpush	{d8}
   1f08e:	mov	r6, r2
   1f090:	movs	r2, #25
   1f092:	mov	r7, r1
   1f094:	vmov	s16, r0
   1f098:	ldr.w	fp, [r1]
   1f09c:	sub	sp, #44	; 0x2c
   1f09e:	ldr	r3, [r1, #32]
   1f0a0:	add.w	r4, fp, #96	; 0x60
   1f0a4:	mla	r3, r2, r3, r4
   1f0a8:	adds	r2, r5, #1
   1f0aa:	ldr.w	r3, [r3, #118]	; 0x76
   1f0ae:	add.w	r3, r3, #101	; 0x65
   1f0b2:	str	r3, [sp, #12]
   1f0b4:	add.w	r8, r4, r3
   1f0b8:	ldr.w	r9, [r4, r3]
   1f0bc:	ldr.w	sl, [r8, #4]
   1f0c0:	bne.n	1f138 <btrfs_create_tree@@Base+0x6bc>
   1f0c2:	cmp.w	sl, #0
   1f0c6:	itte	eq
   1f0c8:	cmpeq.w	r9, #1
   1f0cc:	moveq	r3, #1
   1f0ce:	movne	r3, #0
   1f0d0:	ldr	r2, [pc, #336]	; (1f224 <btrfs_create_tree@@Base+0x7a8>)
   1f0d2:	ldr	r1, [pc, #340]	; (1f228 <btrfs_create_tree@@Base+0x7ac>)
   1f0d4:	ldr	r0, [pc, #340]	; (1f22c <btrfs_create_tree@@Base+0x7b0>)
   1f0d6:	add	r2, pc
   1f0d8:	adds	r2, #45	; 0x2d
   1f0da:	add	r1, pc
   1f0dc:	str	r3, [sp, #0]
   1f0de:	add	r0, pc
   1f0e0:	movw	r3, #1129	; 0x469
   1f0e4:	strd	r1, r2, [sp, #16]
   1f0e8:	bl	1edd4 <btrfs_create_tree@@Base+0x358>
   1f0ec:	asrs	r3, r5, #31
   1f0ee:	mov	r2, r5
   1f0f0:	strd	r2, r3, [sp, #32]
   1f0f4:	ldr	r3, [sp, #12]
   1f0f6:	adds.w	r9, r9, r5
   1f0fa:	adc.w	sl, sl, r5, asr #31
   1f0fe:	ldrd	r1, r2, [sp, #16]
   1f102:	str.w	r9, [r4, r3]
   1f106:	str.w	sl, [r8, #4]
   1f10a:	ldrb.w	sl, [r4, r6]
   1f10e:	cmp.w	sl, #178	; 0xb2
   1f112:	bne.n	1f13c <btrfs_create_tree@@Base+0x6c0>
   1f114:	add.w	r9, r6, #1
   1f118:	add.w	r3, r4, r9
   1f11c:	ldr	r3, [r3, #24]
   1f11e:	str	r3, [sp, #16]
   1f120:	movs	r3, #0
   1f122:	mov	r8, r3
   1f124:	str	r3, [sp, #20]
   1f126:	adds	r5, #1
   1f128:	bne.n	1f1cc <btrfs_create_tree@@Base+0x750>
   1f12a:	ldrd	r3, r2, [sp, #16]
   1f12e:	orrs	r3, r2
   1f130:	ite	eq
   1f132:	moveq	r3, #1
   1f134:	movne	r3, #0
   1f136:	b.n	1f178 <btrfs_create_tree@@Base+0x6fc>
   1f138:	movs	r3, #0
   1f13a:	b.n	1f0d0 <btrfs_create_tree@@Base+0x654>
   1f13c:	cmp.w	sl, #184	; 0xb8
   1f140:	bne.n	1f154 <btrfs_create_tree@@Base+0x6d8>
   1f142:	add.w	r8, r6, #9
   1f146:	ldr.w	r3, [r4, r8]
   1f14a:	str	r3, [sp, #16]
   1f14c:	movs	r3, #0
   1f14e:	mov	r9, r3
   1f150:	str	r3, [sp, #20]
   1f152:	b.n	1f126 <btrfs_create_tree@@Base+0x6aa>
   1f154:	adds	r5, #1
   1f156:	ldr	r0, [pc, #216]	; (1f230 <btrfs_create_tree@@Base+0x7b4>)
   1f158:	mov.w	r8, #0
   1f15c:	movw	r3, #1143	; 0x477
   1f160:	it	ne
   1f162:	movne	r5, #1
   1f164:	add	r0, pc
   1f166:	str	r5, [sp, #0]
   1f168:	mov	r9, r8
   1f16a:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   1f16e:	movs	r3, #1
   1f170:	str	r3, [sp, #16]
   1f172:	mov	r3, r8
   1f174:	str.w	r8, [sp, #20]
   1f178:	ldr	r2, [pc, #184]	; (1f234 <btrfs_create_tree@@Base+0x7b8>)
   1f17a:	ldr	r1, [pc, #188]	; (1f238 <btrfs_create_tree@@Base+0x7bc>)
   1f17c:	ldr	r0, [pc, #188]	; (1f23c <btrfs_create_tree@@Base+0x7c0>)
   1f17e:	add	r2, pc
   1f180:	adds	r2, #45	; 0x2d
   1f182:	str	r3, [sp, #0]
   1f184:	add	r1, pc
   1f186:	movw	r3, #1146	; 0x47a
   1f18a:	add	r0, pc
   1f18c:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   1f190:	ldr	r2, [sp, #16]
   1f192:	ldr	r3, [sp, #32]
   1f194:	adds	r3, r3, r2
   1f196:	ldr	r2, [sp, #36]	; 0x24
   1f198:	str	r3, [sp, #24]
   1f19a:	ldr	r3, [sp, #20]
   1f19c:	adc.w	r3, r2, r3
   1f1a0:	str	r3, [sp, #28]
   1f1a2:	ldrd	r2, r3, [sp, #24]
   1f1a6:	orrs	r3, r2
   1f1a8:	beq.n	1f1d0 <btrfs_create_tree@@Base+0x754>
   1f1aa:	cmp.w	sl, #178	; 0xb2
   1f1ae:	ldr	r3, [sp, #24]
   1f1b0:	itet	eq
   1f1b2:	addeq	r4, r9
   1f1b4:	strne.w	r3, [r4, r8]
   1f1b8:	streq	r3, [r4, #24]
   1f1ba:	mov	r0, fp
   1f1bc:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   1f1c0:	movs	r0, #0
   1f1c2:	add	sp, #44	; 0x2c
   1f1c4:	vpop	{d8}
   1f1c8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f1cc:	movs	r3, #0
   1f1ce:	b.n	1f178 <btrfs_create_tree@@Base+0x6fc>
   1f1d0:	mov	r0, sl
   1f1d2:	bl	1f03c <btrfs_create_tree@@Base+0x5c0>
   1f1d6:	ldr	r3, [r7, #32]
   1f1d8:	movs	r2, #25
   1f1da:	mla	r4, r2, r3, r4
   1f1de:	ldr	r3, [sp, #12]
   1f1e0:	ldr.w	r4, [r4, #122]	; 0x7a
   1f1e4:	add	r3, r4
   1f1e6:	adds	r2, r6, r0
   1f1e8:	mov	r5, r0
   1f1ea:	cmp	r3, r2
   1f1ec:	bls.n	1f1fa <btrfs_create_tree@@Base+0x77e>
   1f1ee:	subs	r3, r3, r6
   1f1f0:	mov	r1, r6
   1f1f2:	subs	r3, r3, r0
   1f1f4:	mov	r0, fp
   1f1f6:	bl	17a8c <memmove_extent_buffer@@Base>
   1f1fa:	subs	r2, r4, r5
   1f1fc:	mov	r1, r7
   1f1fe:	vmov	r0, s16
   1f202:	movs	r3, #1
   1f204:	bl	1a57c <btrfs_truncate_item@@Base>
   1f208:	ldr	r2, [pc, #52]	; (1f240 <btrfs_create_tree@@Base+0x7c4>)
   1f20a:	ldr	r1, [pc, #56]	; (1f244 <btrfs_create_tree@@Base+0x7c8>)
   1f20c:	movw	r3, #1164	; 0x48c
   1f210:	add	r2, pc
   1f212:	adds	r2, #45	; 0x2d
   1f214:	add	r1, pc
   1f216:	str	r0, [sp, #0]
   1f218:	ldr	r0, [pc, #44]	; (1f248 <btrfs_create_tree@@Base+0x7cc>)
   1f21a:	add	r0, pc
   1f21c:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   1f220:	b.n	1f1ba <btrfs_create_tree@@Base+0x73e>
   1f222:	nop
   1f224:			; <UNDEFINED> instruction: 0xf1f80001
   1f228:	pkhbt	r0, r3, r1
   1f22c:	pkhbt	r0, sp, r1
   1f230:	orns	r0, r2, r1
   1f234:	adcs.w	r0, r0, #1
   1f238:	ands.w	r0, r9, r1
   1f23c:	orrs.w	r0, lr, r1
   1f240:			; <UNDEFINED> instruction: 0xf0be0001
   1f244:			; <UNDEFINED> instruction: 0xe9890001
   1f248:	uxtb	r2, r1
   1f24a:	movs	r1, r0
   1f24c:	push	{r4, r5, r6, r7, lr}
   1f24e:	mov	r7, r2
   1f250:	ldr	r2, [pc, #132]	; (1f2d8 <btrfs_create_tree@@Base+0x85c>)
   1f252:	mov	r4, r3
   1f254:	ldr	r3, [pc, #132]	; (1f2dc <btrfs_create_tree@@Base+0x860>)
   1f256:	sub	sp, #36	; 0x24
   1f258:	add	r2, pc
   1f25a:	mov	r5, r1
   1f25c:	mov	r6, r0
   1f25e:	ldr	r0, [r5, #0]
   1f260:	ldr	r3, [r2, r3]
   1f262:	ldr	r2, [r1, #32]
   1f264:	add	r1, sp, #8
   1f266:	ldr	r3, [r3, #0]
   1f268:	str	r3, [sp, #28]
   1f26a:	mov.w	r3, #0
   1f26e:	bl	1ecd4 <btrfs_create_tree@@Base+0x258>
   1f272:	ldrb.w	r5, [sp, #16]
   1f276:	movw	r3, #3377	; 0xd31
   1f27a:	ldr	r2, [pc, #100]	; (1f2e0 <btrfs_create_tree@@Base+0x864>)
   1f27c:	add.w	r1, r5, #88	; 0x58
   1f280:	ldr	r0, [pc, #96]	; (1f2e4 <btrfs_create_tree@@Base+0x868>)
   1f282:	add	r2, pc
   1f284:	uxtb	r1, r1
   1f286:	adds	r2, #74	; 0x4a
   1f288:	cmp	r1, #1
   1f28a:	add	r0, pc
   1f28c:	ite	ls
   1f28e:	movls	r1, #0
   1f290:	movhi	r1, #1
   1f292:	str	r1, [sp, #0]
   1f294:	ldr	r1, [pc, #80]	; (1f2e8 <btrfs_create_tree@@Base+0x86c>)
   1f296:	add	r1, pc
   1f298:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   1f29c:	ldrd	r2, r3, [sp, #8]
   1f2a0:	cmp	r5, #168	; 0xa8
   1f2a2:	strd	r2, r3, [r7]
   1f2a6:	iteet	ne
   1f2a8:	ldrne	r3, [r6, #0]
   1f2aa:	ldreq.w	r2, [sp, #17]
   1f2ae:	ldreq.w	r3, [sp, #21]
   1f2b2:	ldrne.w	r2, [r3, #384]	; 0x180
   1f2b6:	it	ne
   1f2b8:	movne	r3, #0
   1f2ba:	strd	r2, r3, [r4]
   1f2be:	ldr	r2, [pc, #44]	; (1f2ec <btrfs_create_tree@@Base+0x870>)
   1f2c0:	ldr	r3, [pc, #24]	; (1f2dc <btrfs_create_tree@@Base+0x860>)
   1f2c2:	add	r2, pc
   1f2c4:	ldr	r3, [r2, r3]
   1f2c6:	ldr	r2, [r3, #0]
   1f2c8:	ldr	r3, [sp, #28]
   1f2ca:	eors	r2, r3
   1f2cc:	beq.n	1f2d2 <btrfs_create_tree@@Base+0x856>
   1f2ce:	blx	8708 <__stack_chk_fail@plt>
   1f2d2:	add	sp, #36	; 0x24
   1f2d4:	pop	{r4, r5, r6, r7, pc}
   1f2d6:	nop
   1f2d8:	ldrh	r0, [r5, r4]
   1f2da:	movs	r4, r0
   1f2dc:	lsls	r0, r5, #8
   1f2de:	movs	r0, r0
   1f2e0:	orr.w	r0, ip, #1
   1f2e4:			; <UNDEFINED> instruction: 0xe9850001
   1f2e8:	stmdb	r7, {r0}
   1f2ec:	ldrh	r6, [r7, r2]
   1f2ee:	movs	r4, r0
   1f2f0:	push	{r0, r1, r2, r3, r4, r6, r7, lr}
   1f2f2:	mov	r4, r0
   1f2f4:	ldrd	r0, r3, [r0, #48]	; 0x30
   1f2f8:	ldr	r2, [pc, #140]	; (1f388 <btrfs_create_tree@@Base+0x90c>)
   1f2fa:	orrs	r3, r0
   1f2fc:	ldr	r1, [pc, #140]	; (1f38c <btrfs_create_tree@@Base+0x910>)
   1f2fe:	ldr	r0, [pc, #144]	; (1f390 <btrfs_create_tree@@Base+0x914>)
   1f300:	add	r2, pc
   1f302:	ite	eq
   1f304:	moveq	r3, #1
   1f306:	movne	r3, #0
   1f308:	adds	r2, #92	; 0x5c
   1f30a:	add	r1, pc
   1f30c:	add	r0, pc
   1f30e:	str	r3, [sp, #0]
   1f310:	movs	r3, #163	; 0xa3
   1f312:	strd	r1, r2, [sp, #8]
   1f316:	bl	1edd4 <btrfs_create_tree@@Base+0x358>
   1f31a:	ldrd	r3, r0, [r4, #48]	; 0x30
   1f31e:	ldrd	r1, r2, [sp, #8]
   1f322:	adds.w	r6, r3, #4294967295	; 0xffffffff
   1f326:	adc.w	r7, r0, #4294967295	; 0xffffffff
   1f32a:	strd	r6, r7, [r4, #48]	; 0x30
   1f32e:	orrs.w	r3, r6, r7
   1f332:	bne.n	1f384 <btrfs_create_tree@@Base+0x908>
   1f334:	ldrb.w	r3, [r4, #62]	; 0x3e
   1f338:	ldr	r0, [pc, #88]	; (1f394 <btrfs_create_tree@@Base+0x918>)
   1f33a:	ubfx	r3, r3, #1, #1
   1f33e:	str	r3, [sp, #0]
   1f340:	add	r0, pc
   1f342:	movs	r3, #165	; 0xa5
   1f344:	bl	1edd4 <btrfs_create_tree@@Base+0x358>
   1f348:	ldrb.w	r3, [r4, #61]	; 0x3d
   1f34c:	subs	r3, #176	; 0xb0
   1f34e:	cmp	r3, #8
   1f350:	bhi.n	1f36c <btrfs_create_tree@@Base+0x8f0>
   1f352:	tbb	[pc, r3]
   1f356:	lsrs	r5, r0, #12
   1f358:	lsrs	r5, r0, #12
   1f35a:	lsrs	r3, r1, #12
   1f35c:	lsrs	r5, r0, #12
   1f35e:	movs	r5, r0
   1f360:	mov	r0, r4
   1f362:	add	sp, #16
   1f364:	ldmia.w	sp!, {r4, r6, r7, lr}
   1f368:	b.w	861c <free@plt>
   1f36c:	ldr	r2, [pc, #40]	; (1f398 <btrfs_create_tree@@Base+0x91c>)
   1f36e:	movs	r3, #1
   1f370:	ldr	r1, [pc, #40]	; (1f39c <btrfs_create_tree@@Base+0x920>)
   1f372:	ldr	r0, [pc, #44]	; (1f3a0 <btrfs_create_tree@@Base+0x924>)
   1f374:	add	r2, pc
   1f376:	str	r3, [sp, #0]
   1f378:	adds	r2, #92	; 0x5c
   1f37a:	add	r1, pc
   1f37c:	add	r0, pc
   1f37e:	movs	r3, #176	; 0xb0
   1f380:	bl	1eff4 <btrfs_create_tree@@Base+0x578>
   1f384:	add	sp, #16
   1f386:	pop	{r4, r6, r7, pc}
   1f388:	vaddl.s8	q8, d14, d1
   1f38c:	ldrd	r0, r0, [r1, #-4]
   1f390:	ldrd	r0, r0, [sp, #-4]
   1f394:	ldmdb	r8!, {r0}
   1f398:	vhadd.s16	d16, d10, d1
   1f39c:	strd	r0, r0, [r1], #4
   1f3a0:			; <UNDEFINED> instruction: 0xeb810001
   1f3a4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f3a8:	mov	r4, r2
   1f3aa:	ldr	r2, [pc, #288]	; (1f4cc <btrfs_create_tree@@Base+0xa50>)
   1f3ac:	mov	r5, r3
   1f3ae:	ldr	r3, [pc, #288]	; (1f4d0 <btrfs_create_tree@@Base+0xa54>)
   1f3b0:	sub	sp, #36	; 0x24
   1f3b2:	add	r2, pc
   1f3b4:	ldr.w	r9, [pc, #284]	; 1f4d4 <btrfs_create_tree@@Base+0xa58>
   1f3b8:	ldr.w	sl, [pc, #284]	; 1f4d8 <btrfs_create_tree@@Base+0xa5c>
   1f3bc:	mov	r8, r0
   1f3be:	ldr	r3, [r2, r3]
   1f3c0:	add	r9, pc
   1f3c2:	ldr	r0, [pc, #280]	; (1f4dc <btrfs_create_tree@@Base+0xa60>)
   1f3c4:	add	sl, pc
   1f3c6:	ldr	r3, [r3, #0]
   1f3c8:	str	r3, [sp, #28]
   1f3ca:	mov.w	r3, #0
   1f3ce:	mov	r6, r1
   1f3d0:	movs	r3, #0
   1f3d2:	str	r3, [sp, #0]
   1f3d4:	add.w	r2, sl, #114	; 0x72
   1f3d8:	add	r0, pc
   1f3da:	movw	r3, #1223	; 0x4c7
   1f3de:	mov	r1, r9
   1f3e0:	ldr	r7, [sp, #72]	; 0x48
   1f3e2:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   1f3e6:	cbz	r5, 1f40a <btrfs_create_tree@@Base+0x98e>
   1f3e8:	mov.w	r3, #4294967295	; 0xffffffff
   1f3ec:	mov	r2, r5
   1f3ee:	mov	r1, r4
   1f3f0:	mov	r0, r6
   1f3f2:	bl	1f084 <btrfs_create_tree@@Base+0x608>
   1f3f6:	ldr	r2, [pc, #232]	; (1f4e0 <btrfs_create_tree@@Base+0xa64>)
   1f3f8:	ldr	r3, [pc, #212]	; (1f4d0 <btrfs_create_tree@@Base+0xa54>)
   1f3fa:	add	r2, pc
   1f3fc:	ldr	r3, [r2, r3]
   1f3fe:	ldr	r2, [r3, #0]
   1f400:	ldr	r3, [sp, #28]
   1f402:	eors	r2, r3
   1f404:	beq.n	1f4c4 <btrfs_create_tree@@Base+0xa48>
   1f406:	blx	8708 <__stack_chk_fail@plt>
   1f40a:	cbz	r7, 1f462 <btrfs_create_tree@@Base+0x9e6>
   1f40c:	ldr	r7, [r4, #0]
   1f40e:	add	r1, sp, #8
   1f410:	ldr	r2, [r4, #32]
   1f412:	mov	r0, r7
   1f414:	bl	1ecd4 <btrfs_create_tree@@Base+0x258>
   1f418:	ldrb.w	fp, [sp, #16]
   1f41c:	add.w	r3, r7, #96	; 0x60
   1f420:	cmp.w	fp, #178	; 0xb2
   1f424:	bne.n	1f46e <btrfs_create_tree@@Base+0x9f2>
   1f426:	ldr	r2, [r4, #32]
   1f428:	movs	r1, #25
   1f42a:	mov	r9, r5
   1f42c:	mla	r2, r1, r2, r3
   1f430:	ldr.w	r2, [r2, #118]	; 0x76
   1f434:	adds	r2, #101	; 0x65
   1f436:	add	r3, r2
   1f438:	mov	r5, r2
   1f43a:	ldr.w	sl, [r3, #24]
   1f43e:	ldr	r2, [pc, #164]	; (1f4e4 <btrfs_create_tree@@Base+0xa68>)
   1f440:	clz	r3, sl
   1f444:	ldr	r1, [pc, #160]	; (1f4e8 <btrfs_create_tree@@Base+0xa6c>)
   1f446:	ldr	r0, [pc, #164]	; (1f4ec <btrfs_create_tree@@Base+0xa70>)
   1f448:	add	r2, pc
   1f44a:	lsrs	r3, r3, #5
   1f44c:	adds	r2, #136	; 0x88
   1f44e:	str	r3, [sp, #0]
   1f450:	add	r1, pc
   1f452:	add	r0, pc
   1f454:	movw	r3, #733	; 0x2dd
   1f458:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   1f45c:	subs.w	sl, sl, #1
   1f460:	bne.n	1f4a0 <btrfs_create_tree@@Base+0xa24>
   1f462:	mov	r2, r4
   1f464:	mov	r1, r6
   1f466:	mov	r0, r8
   1f468:	bl	1ed88 <btrfs_create_tree@@Base+0x30c>
   1f46c:	b.n	1f3f6 <btrfs_create_tree@@Base+0x97a>
   1f46e:	cmp.w	fp, #184	; 0xb8
   1f472:	bne.n	1f48a <btrfs_create_tree@@Base+0xa0e>
   1f474:	ldr	r2, [r4, #32]
   1f476:	movs	r1, #25
   1f478:	mla	r2, r1, r2, r3
   1f47c:	ldr.w	r9, [r2, #118]	; 0x76
   1f480:	add.w	r9, r9, #101	; 0x65
   1f484:	ldr.w	sl, [r3, r9]
   1f488:	b.n	1f43e <btrfs_create_tree@@Base+0x9c2>
   1f48a:	ldr	r0, [pc, #100]	; (1f4f0 <btrfs_create_tree@@Base+0xa74>)
   1f48c:	movs	r3, #1
   1f48e:	add.w	r2, sl, #136	; 0x88
   1f492:	str	r3, [sp, #0]
   1f494:	add	r0, pc
   1f496:	movw	r3, #730	; 0x2da
   1f49a:	mov	r1, r9
   1f49c:	bl	1eff4 <btrfs_create_tree@@Base+0x578>
   1f4a0:	cmp.w	fp, #178	; 0xb2
   1f4a4:	bne.n	1f4b6 <btrfs_create_tree@@Base+0xa3a>
   1f4a6:	add	r5, r7
   1f4a8:	str.w	sl, [r5, #120]	; 0x78
   1f4ac:	mov	r0, r7
   1f4ae:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   1f4b2:	movs	r0, #0
   1f4b4:	b.n	1f3f6 <btrfs_create_tree@@Base+0x97a>
   1f4b6:	cmp.w	fp, #184	; 0xb8
   1f4ba:	itt	eq
   1f4bc:	addeq	r9, r7
   1f4be:	streq.w	sl, [r9, #96]	; 0x60
   1f4c2:	b.n	1f4ac <btrfs_create_tree@@Base+0xa30>
   1f4c4:	add	sp, #36	; 0x24
   1f4c6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f4ca:	nop
   1f4cc:	ldr	r6, [r1, r7]
   1f4ce:	movs	r4, r0
   1f4d0:	lsls	r0, r5, #8
   1f4d2:	movs	r0, r0
   1f4d4:	b.n	1f492 <btrfs_create_tree@@Base+0xa16>
   1f4d6:	movs	r1, r0
   1f4d8:	vhadd.s8	d0, d10, d1
   1f4dc:	stmia.w	sp!, {r0}
   1f4e0:	ldr	r6, [r0, r6]
   1f4e2:	movs	r4, r0
   1f4e4:	cdp	0, 8, cr0, cr6, cr1, {0}
   1f4e8:	b.n	1f386 <btrfs_create_tree@@Base+0x90a>
   1f4ea:	movs	r1, r0
   1f4ec:			; <UNDEFINED> instruction: 0xe8510001
   1f4f0:	orn	r0, r9, r1
   1f4f4:	push	{r0, r1, r2, r3, r4, lr}
   1f4f6:	ldr	r3, [pc, #40]	; (1f520 <btrfs_create_tree@@Base+0xaa4>)
   1f4f8:	ldr	r4, [pc, #40]	; (1f524 <btrfs_create_tree@@Base+0xaa8>)
   1f4fa:	add	r3, pc
   1f4fc:	ldr	r4, [r3, r4]
   1f4fe:	movs	r3, #0
   1f500:	strd	r2, r1, [sp]
   1f504:	movs	r1, #1
   1f506:	strd	r0, r3, [sp, #8]
   1f50a:	ldr	r2, [pc, #28]	; (1f528 <btrfs_create_tree@@Base+0xaac>)
   1f50c:	ldr	r3, [pc, #28]	; (1f52c <btrfs_create_tree@@Base+0xab0>)
   1f50e:	add	r2, pc
   1f510:	ldr	r0, [r4, #0]
   1f512:	add	r3, pc
   1f514:	blx	8a64 <__fprintf_chk@plt+0x4>
   1f518:	bl	1ed3c <btrfs_create_tree@@Base+0x2c0>
   1f51c:	blx	8b84 <abort@plt>
   1f520:	ldr	r6, [r0, r2]
   1f522:	movs	r4, r0
   1f524:	lsls	r0, r7, #8
   1f526:	movs	r0, r0
   1f528:	add	r2, sp, #772	; 0x304
   1f52a:	movs	r1, r0
   1f52c:	b.n	1f246 <btrfs_create_tree@@Base+0x7ca>
   1f52e:	movs	r1, r0

0001f530 <btrfs_lookup_first_block_group@@Base>:
   1f530:	push	{r4, r5, r6, lr}
   1f532:	cmp	r3, #0
   1f534:	ldr	r4, [pc, #112]	; (1f5a8 <btrfs_lookup_first_block_group@@Base+0x78>)
   1f536:	it	eq
   1f538:	cmpeq.w	r2, #69632	; 0x11000
   1f53c:	ldr	r1, [pc, #108]	; (1f5ac <btrfs_lookup_first_block_group@@Base+0x7c>)
   1f53e:	sub	sp, #48	; 0x30
   1f540:	add	r4, pc
   1f542:	add.w	r6, r0, #128	; 0x80
   1f546:	mov	r5, r3
   1f548:	it	cc
   1f54a:	movcc	r5, #0
   1f54c:	ldr	r1, [r4, r1]
   1f54e:	mov	r4, r2
   1f550:	it	cc
   1f552:	movcc.w	r4, #69632	; 0x11000
   1f556:	movs	r3, #22
   1f558:	ldr	r1, [r1, #0]
   1f55a:	str	r1, [sp, #44]	; 0x2c
   1f55c:	mov.w	r1, #0
   1f560:	mov	r2, r4
   1f562:	str	r3, [sp, #8]
   1f564:	mov	r0, r6
   1f566:	add	r3, sp, #32
   1f568:	str	r3, [sp, #4]
   1f56a:	add	r3, sp, #24
   1f56c:	str	r3, [sp, #0]
   1f56e:	mov	r3, r5
   1f570:	bl	17218 <find_first_extent_bit@@Base>
   1f574:	cbz	r0, 1f58c <btrfs_lookup_first_block_group@@Base+0x5c>
   1f576:	movs	r0, #0
   1f578:	ldr	r2, [pc, #52]	; (1f5b0 <btrfs_lookup_first_block_group@@Base+0x80>)
   1f57a:	ldr	r3, [pc, #48]	; (1f5ac <btrfs_lookup_first_block_group@@Base+0x7c>)
   1f57c:	add	r2, pc
   1f57e:	ldr	r3, [r2, r3]
   1f580:	ldr	r2, [r3, #0]
   1f582:	ldr	r3, [sp, #44]	; 0x2c
   1f584:	eors	r2, r3
   1f586:	beq.n	1f5a2 <btrfs_lookup_first_block_group@@Base+0x72>
   1f588:	blx	8708 <__stack_chk_fail@plt>
   1f58c:	add	r3, sp, #16
   1f58e:	mov	r0, r6
   1f590:	str	r3, [sp, #0]
   1f592:	ldrd	r2, r3, [sp, #24]
   1f596:	bl	172f4 <get_state_private@@Base>
   1f59a:	cmp	r0, #0
   1f59c:	bne.n	1f576 <btrfs_lookup_first_block_group@@Base+0x46>
   1f59e:	ldr	r0, [sp, #16]
   1f5a0:	b.n	1f578 <btrfs_lookup_first_block_group@@Base+0x48>
   1f5a2:	add	sp, #48	; 0x30
   1f5a4:	pop	{r4, r5, r6, pc}
   1f5a6:	nop
   1f5a8:	ldr	r0, [r0, r1]
   1f5aa:	movs	r4, r0
   1f5ac:	lsls	r0, r5, #8
   1f5ae:	movs	r0, r0
   1f5b0:	ldr	r4, [r0, r0]
   1f5b2:	movs	r4, r0

0001f5b4 <btrfs_lookup_block_group@@Base>:
   1f5b4:	ldr.w	ip, [pc, #136]	; 1f640 <btrfs_lookup_block_group@@Base+0x8c>
   1f5b8:	ldr	r1, [pc, #136]	; (1f644 <btrfs_lookup_block_group@@Base+0x90>)
   1f5ba:	add	ip, pc
   1f5bc:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1f5c0:	add.w	r8, r0, #128	; 0x80
   1f5c4:	sub	sp, #48	; 0x30
   1f5c6:	ldr.w	r1, [ip, r1]
   1f5ca:	mov	r0, r8
   1f5cc:	mov	r4, r2
   1f5ce:	ldr	r1, [r1, #0]
   1f5d0:	str	r1, [sp, #44]	; 0x2c
   1f5d2:	mov.w	r1, #0
   1f5d6:	movs	r1, #22
   1f5d8:	str	r1, [sp, #8]
   1f5da:	add	r1, sp, #32
   1f5dc:	str	r1, [sp, #4]
   1f5de:	add	r1, sp, #24
   1f5e0:	str	r1, [sp, #0]
   1f5e2:	mov	r5, r3
   1f5e4:	bl	17218 <find_first_extent_bit@@Base>
   1f5e8:	cbz	r0, 1f600 <btrfs_lookup_block_group@@Base+0x4c>
   1f5ea:	movs	r0, #0
   1f5ec:	ldr	r2, [pc, #88]	; (1f648 <btrfs_lookup_block_group@@Base+0x94>)
   1f5ee:	ldr	r3, [pc, #84]	; (1f644 <btrfs_lookup_block_group@@Base+0x90>)
   1f5f0:	add	r2, pc
   1f5f2:	ldr	r3, [r2, r3]
   1f5f4:	ldr	r2, [r3, #0]
   1f5f6:	ldr	r3, [sp, #44]	; 0x2c
   1f5f8:	eors	r2, r3
   1f5fa:	beq.n	1f638 <btrfs_lookup_block_group@@Base+0x84>
   1f5fc:	blx	8708 <__stack_chk_fail@plt>
   1f600:	add	r3, sp, #16
   1f602:	mov	r0, r8
   1f604:	str	r3, [sp, #0]
   1f606:	ldrd	r2, r3, [sp, #24]
   1f60a:	bl	172f4 <get_state_private@@Base>
   1f60e:	cmp	r0, #0
   1f610:	bne.n	1f5ea <btrfs_lookup_block_group@@Base+0x36>
   1f612:	ldr	r0, [sp, #16]
   1f614:	ldrd	r2, r3, [r0, #40]	; 0x28
   1f618:	cmp	r5, r3
   1f61a:	it	eq
   1f61c:	cmpeq	r4, r2
   1f61e:	bcc.n	1f5ea <btrfs_lookup_block_group@@Base+0x36>
   1f620:	ldr.w	r1, [r0, #49]	; 0x31
   1f624:	ldr.w	ip, [r0, #53]	; 0x35
   1f628:	adds	r6, r1, r2
   1f62a:	adc.w	r7, ip, r3
   1f62e:	cmp	r5, r7
   1f630:	it	eq
   1f632:	cmpeq	r4, r6
   1f634:	bcc.n	1f5ec <btrfs_lookup_block_group@@Base+0x38>
   1f636:	b.n	1f5ea <btrfs_lookup_block_group@@Base+0x36>
   1f638:	add	sp, #48	; 0x30
   1f63a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1f63e:	nop
   1f640:	ldrsb	r6, [r0, r7]
   1f642:	movs	r4, r0
   1f644:	lsls	r0, r5, #8
   1f646:	movs	r0, r0
   1f648:	ldrsb	r0, [r2, r6]
   1f64a:	movs	r4, r0
   1f64c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f650:	mov	r8, r0
   1f652:	ldrd	r6, r7, [sp, #48]	; 0x30
   1f656:	adds	r0, #160	; 0xa0
   1f658:	ldr.w	sl, [sp, #56]	; 0x38
   1f65c:	mov	r9, r2
   1f65e:	adds.w	r1, r6, #4294967295	; 0xffffffff
   1f662:	mov	fp, r3
   1f664:	adc.w	ip, r7, #4294967295	; 0xffffffff
   1f668:	adds	r1, r1, r2
   1f66a:	adc.w	ip, ip, r3
   1f66e:	strd	r1, ip, [sp]
   1f672:	cmp.w	sl, #0
   1f676:	beq.n	1f68a <btrfs_lookup_block_group@@Base+0xd6>
   1f678:	bl	171e8 <set_extent_dirty@@Base>
   1f67c:	orrs.w	r3, r6, r7
   1f680:	bne.n	1f690 <btrfs_lookup_block_group@@Base+0xdc>
   1f682:	movs	r0, #0
   1f684:	add	sp, #12
   1f686:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f68a:	bl	17200 <clear_extent_dirty@@Base>
   1f68e:	b.n	1f67c <btrfs_lookup_block_group@@Base+0xc8>
   1f690:	mov	r2, r9
   1f692:	mov	r3, fp
   1f694:	mov	r0, r8
   1f696:	bl	1f5b4 <btrfs_lookup_block_group@@Base>
   1f69a:	cbnz	r0, 1f6be <btrfs_lookup_block_group@@Base+0x10a>
   1f69c:	ldr.w	r4, [r8, #388]	; 0x184
   1f6a0:	cmp	r7, r0
   1f6a2:	mov	r5, r0
   1f6a4:	it	eq
   1f6a6:	cmpeq	r6, r4
   1f6a8:	bcs.n	1f6ae <btrfs_lookup_block_group@@Base+0xfa>
   1f6aa:	mov	r4, r6
   1f6ac:	mov	r5, r7
   1f6ae:	adds.w	r9, r9, r4
   1f6b2:	adc.w	fp, fp, r5
   1f6b6:	subs	r6, r6, r4
   1f6b8:	sbc.w	r7, r7, r5
   1f6bc:	b.n	1f67c <btrfs_lookup_block_group@@Base+0xc8>
   1f6be:	ldr.w	r1, [r0, #49]	; 0x31
   1f6c2:	ldrd	r3, r2, [r0, #40]	; 0x28
   1f6c6:	ldr.w	ip, [r0, #53]	; 0x35
   1f6ca:	adds	r3, r1, r3
   1f6cc:	adc.w	r2, ip, r2
   1f6d0:	subs.w	r4, r3, r9
   1f6d4:	sbc.w	r5, r2, fp
   1f6d8:	ldrd	r3, r1, [r0, #88]	; 0x58
   1f6dc:	cmp	r7, r5
   1f6de:	ldr	r2, [r0, #60]	; 0x3c
   1f6e0:	it	eq
   1f6e2:	cmpeq	r6, r4
   1f6e4:	itt	cc
   1f6e6:	movcc	r4, r6
   1f6e8:	movcc	r5, r7
   1f6ea:	cmp.w	sl, #0
   1f6ee:	beq.n	1f718 <btrfs_lookup_block_group@@Base+0x164>
   1f6f0:	adds	r3, r3, r4
   1f6f2:	adc.w	r1, r5, r1
   1f6f6:	strd	r3, r1, [r0, #88]	; 0x58
   1f6fa:	ldrd	r3, r1, [r2, #24]
   1f6fe:	adds	r3, r3, r4
   1f700:	adc.w	r1, r5, r1
   1f704:	strd	r3, r1, [r2, #24]
   1f708:	ldrd	r3, r2, [r8, #328]	; 0x148
   1f70c:	adds	r3, r3, r4
   1f70e:	adc.w	r2, r5, r2
   1f712:	strd	r3, r2, [r8, #328]	; 0x148
   1f716:	b.n	1f6ae <btrfs_lookup_block_group@@Base+0xfa>
   1f718:	subs	r3, r3, r4
   1f71a:	sbc.w	r1, r1, r5
   1f71e:	strd	r3, r1, [r0, #88]	; 0x58
   1f722:	ldrd	r3, r1, [r2, #24]
   1f726:	subs	r3, r3, r4
   1f728:	sbc.w	r1, r1, r5
   1f72c:	strd	r3, r1, [r2, #24]
   1f730:	ldrd	r3, r2, [r8, #328]	; 0x148
   1f734:	subs	r3, r3, r4
   1f736:	sbc.w	r2, r2, r5
   1f73a:	b.n	1f712 <btrfs_lookup_block_group@@Base+0x15e>
   1f73c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f740:	mov	r9, r0
   1f742:	vpush	{d8}
   1f746:	mov	r7, r2
   1f748:	mov	r8, r3
   1f74a:	sub	sp, #28
   1f74c:	ldr.w	r1, [r0, #308]	; 0x134
   1f750:	ldr	r0, [sp, #80]	; 0x50
   1f752:	ldr	r3, [r1, #120]	; 0x78
   1f754:	ldr	r2, [r1, #124]	; 0x7c
   1f756:	cbz	r0, 1f78c <btrfs_lookup_block_group@@Base+0x1d8>
   1f758:	ldr	r0, [sp, #72]	; 0x48
   1f75a:	adds	r3, r0, r3
   1f75c:	ldr	r0, [sp, #76]	; 0x4c
   1f75e:	adc.w	r2, r0, r2
   1f762:	str	r3, [r1, #120]	; 0x78
   1f764:	ldr	r3, [pc, #332]	; (1f8b4 <btrfs_lookup_block_group@@Base+0x300>)
   1f766:	str	r2, [r1, #124]	; 0x7c
   1f768:	add	r3, pc
   1f76a:	adds	r3, #159	; 0x9f
   1f76c:	vmov	s16, r3
   1f770:	ldr	r3, [pc, #324]	; (1f8b8 <btrfs_lookup_block_group@@Base+0x304>)
   1f772:	add	r3, pc
   1f774:	vmov	s17, r3
   1f778:	ldrd	r2, r3, [sp, #72]	; 0x48
   1f77c:	orrs	r3, r2
   1f77e:	bne.n	1f798 <btrfs_lookup_block_group@@Base+0x1e4>
   1f780:	movs	r0, #0
   1f782:	add	sp, #28
   1f784:	vpop	{d8}
   1f788:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f78c:	ldr	r0, [sp, #72]	; 0x48
   1f78e:	subs	r3, r3, r0
   1f790:	ldr	r0, [sp, #76]	; 0x4c
   1f792:	sbc.w	r2, r2, r0
   1f796:	b.n	1f762 <btrfs_lookup_block_group@@Base+0x1ae>
   1f798:	mov	r2, r7
   1f79a:	mov	r3, r8
   1f79c:	mov	r0, r9
   1f79e:	bl	1f5b4 <btrfs_lookup_block_group@@Base>
   1f7a2:	mov	r6, r0
   1f7a4:	cmp	r0, #0
   1f7a6:	beq.w	1f8ae <btrfs_lookup_block_group@@Base+0x2fa>
   1f7aa:	ldrd	sl, fp, [r0, #40]	; 0x28
   1f7ae:	ldr.w	r3, [r0, #53]	; 0x35
   1f7b2:	subs.w	r1, r7, sl
   1f7b6:	ldr.w	r2, [r0, #49]	; 0x31
   1f7ba:	str	r1, [sp, #16]
   1f7bc:	sbc.w	r1, r8, fp
   1f7c0:	str	r1, [sp, #20]
   1f7c2:	ldrd	r0, r1, [sp, #16]
   1f7c6:	cmp	r3, r1
   1f7c8:	vmov	r1, s17
   1f7cc:	it	eq
   1f7ce:	cmpeq	r2, r0
   1f7d0:	ldr	r0, [pc, #232]	; (1f8bc <btrfs_lookup_block_group@@Base+0x308>)
   1f7d2:	vmov	r2, s16
   1f7d6:	ite	cc
   1f7d8:	movcc	r3, #1
   1f7da:	movcs	r3, #0
   1f7dc:	add	r0, pc
   1f7de:	str	r3, [sp, #0]
   1f7e0:	mov.w	r3, #1784	; 0x6f8
   1f7e4:	bl	1edd4 <btrfs_create_tree@@Base+0x358>
   1f7e8:	ldrd	r2, r3, [r6, #40]	; 0x28
   1f7ec:	movs	r1, #1
   1f7ee:	str	r1, [sp, #8]
   1f7f0:	ldr.w	r1, [r6, #49]	; 0x31
   1f7f4:	ldr.w	r0, [r6, #53]	; 0x35
   1f7f8:	adds	r1, r1, r2
   1f7fa:	adc.w	r0, r3, r0
   1f7fe:	adds.w	r1, r1, #4294967295	; 0xffffffff
   1f802:	adc.w	r0, r0, #4294967295	; 0xffffffff
   1f806:	strd	r1, r0, [sp]
   1f80a:	add.w	r0, r9, #128	; 0x80
   1f80e:	bl	16fbc <set_extent_bits@@Base>
   1f812:	ldr.w	r3, [r6, #49]	; 0x31
   1f816:	ldr.w	r0, [r6, #53]	; 0x35
   1f81a:	adds.w	r3, r3, sl
   1f81e:	ldrd	r2, r1, [r6, #72]	; 0x48
   1f822:	adc.w	fp, r0, fp
   1f826:	subs	r4, r3, r7
   1f828:	sbc.w	r5, fp, r8
   1f82c:	ldrd	sl, fp, [sp, #72]	; 0x48
   1f830:	ldr	r0, [sp, #80]	; 0x50
   1f832:	cmp	fp, r5
   1f834:	ldr	r3, [r6, #60]	; 0x3c
   1f836:	it	eq
   1f838:	cmpeq	sl, r4
   1f83a:	itt	cc
   1f83c:	movcc	r4, sl
   1f83e:	movcc	r5, fp
   1f840:	cbz	r0, 1f872 <btrfs_lookup_block_group@@Base+0x2be>
   1f842:	adds.w	sl, r2, r4
   1f846:	adc.w	fp, r1, r5
   1f84a:	ldrd	r2, r1, [r3, #16]
   1f84e:	adds	r2, r2, r4
   1f850:	adc.w	r1, r5, r1
   1f854:	strd	r2, r1, [r3, #16]
   1f858:	ldr	r3, [sp, #72]	; 0x48
   1f85a:	strd	sl, fp, [r6, #72]	; 0x48
   1f85e:	subs	r3, r3, r4
   1f860:	str	r3, [sp, #72]	; 0x48
   1f862:	ldr	r3, [sp, #76]	; 0x4c
   1f864:	sbc.w	r3, r3, r5
   1f868:	adds	r7, r7, r4
   1f86a:	adc.w	r8, r8, r5
   1f86e:	str	r3, [sp, #76]	; 0x4c
   1f870:	b.n	1f778 <btrfs_lookup_block_group@@Base+0x1c4>
   1f872:	subs.w	sl, r2, r4
   1f876:	sbc.w	fp, r1, r5
   1f87a:	ldrd	r2, r1, [r3, #16]
   1f87e:	subs	r2, r2, r4
   1f880:	sbc.w	r1, r1, r5
   1f884:	strd	r2, r1, [r3, #16]
   1f888:	ldr	r3, [sp, #84]	; 0x54
   1f88a:	cmp	r3, #0
   1f88c:	beq.n	1f858 <btrfs_lookup_block_group@@Base+0x2a4>
   1f88e:	adds.w	r3, r7, #4294967295	; 0xffffffff
   1f892:	add.w	r0, r9, #96	; 0x60
   1f896:	adc.w	r2, r8, #4294967295	; 0xffffffff
   1f89a:	adds	r3, r3, r4
   1f89c:	adc.w	r2, r5, r2
   1f8a0:	strd	r3, r2, [sp]
   1f8a4:	mov	r2, r7
   1f8a6:	mov	r3, r8
   1f8a8:	bl	171e8 <set_extent_dirty@@Base>
   1f8ac:	b.n	1f858 <btrfs_lookup_block_group@@Base+0x2a4>
   1f8ae:	mov.w	r0, #4294967295	; 0xffffffff
   1f8b2:	b.n	1f782 <btrfs_lookup_block_group@@Base+0x1ce>
   1f8b4:	sbc.w	r0, r6, r1
   1f8b8:	b.n	1f112 <btrfs_create_tree@@Base+0x696>
   1f8ba:	movs	r1, r0
   1f8bc:	b.n	1f27e <btrfs_create_tree@@Base+0x802>
   1f8be:	movs	r1, r0
   1f8c0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f8c4:	sub	sp, #108	; 0x6c
   1f8c6:	add.w	fp, r0, #128	; 0x80
   1f8ca:	mov	r5, r1
   1f8cc:	strd	r2, r3, [sp, #16]
   1f8d0:	ldr	r2, [pc, #504]	; (1facc <btrfs_lookup_block_group@@Base+0x518>)
   1f8d2:	ldr	r6, [sp, #144]	; 0x90
   1f8d4:	ldr	r3, [pc, #504]	; (1fad0 <btrfs_lookup_block_group@@Base+0x51c>)
   1f8d6:	add	r2, pc
   1f8d8:	ands.w	r8, r6, #1
   1f8dc:	mov.w	r4, r6, asr #31
   1f8e0:	ldr	r3, [r2, r3]
   1f8e2:	it	ne
   1f8e4:	movne.w	r8, #2
   1f8e8:	lsls	r2, r6, #29
   1f8ea:	ldr	r3, [r3, #0]
   1f8ec:	str	r3, [sp, #100]	; 0x64
   1f8ee:	mov.w	r3, #0
   1f8f2:	it	mi
   1f8f4:	orrmi.w	r8, r8, #4
   1f8f8:	mov	r3, r6
   1f8fa:	strd	r3, r4, [sp, #24]
   1f8fe:	lsls	r3, r6, #30
   1f900:	ldrd	r3, r4, [sp, #16]
   1f904:	it	mi
   1f906:	orrmi.w	r8, r8, #16
   1f90a:	orrs	r3, r4
   1f90c:	bne.n	1f9c6 <btrfs_lookup_block_group@@Base+0x412>
   1f90e:	cmp	r5, #0
   1f910:	bne.w	1fa36 <btrfs_lookup_block_group@@Base+0x482>
   1f914:	ldrd	r9, sl, [sp, #16]
   1f918:	movs	r5, #0
   1f91a:	add	r3, sp, #80	; 0x50
   1f91c:	str	r3, [sp, #32]
   1f91e:	add	r3, sp, #72	; 0x48
   1f920:	str	r3, [sp, #40]	; 0x28
   1f922:	ldr	r3, [sp, #32]
   1f924:	mov	r2, r9
   1f926:	mov	r0, fp
   1f928:	str.w	r8, [sp, #8]
   1f92c:	str	r3, [sp, #4]
   1f92e:	ldr	r3, [sp, #40]	; 0x28
   1f930:	str	r3, [sp, #0]
   1f932:	mov	r3, sl
   1f934:	bl	17218 <find_first_extent_bit@@Base>
   1f938:	cmp	r0, #0
   1f93a:	bne.w	1fab8 <btrfs_lookup_block_group@@Base+0x504>
   1f93e:	add	r3, sp, #88	; 0x58
   1f940:	mov	r0, fp
   1f942:	str	r3, [sp, #0]
   1f944:	ldrd	r2, r3, [sp, #72]	; 0x48
   1f948:	bl	172f4 <get_state_private@@Base>
   1f94c:	cmp	r0, #0
   1f94e:	bne.w	1fab8 <btrfs_lookup_block_group@@Base+0x504>
   1f952:	ldr	r4, [sp, #88]	; 0x58
   1f954:	ldrd	r3, r2, [r4, #40]	; 0x28
   1f958:	ldr.w	r6, [r4, #49]	; 0x31
   1f95c:	ldr.w	r7, [r4, #53]	; 0x35
   1f960:	adds.w	r9, r6, r3
   1f964:	ldr	r3, [r4, #108]	; 0x6c
   1f966:	adc.w	sl, r7, r2
   1f96a:	cmp	r3, #0
   1f96c:	bne.n	1f922 <btrfs_lookup_block_group@@Base+0x36e>
   1f96e:	ldrd	r2, r3, [r4, #96]	; 0x60
   1f972:	ldr	r1, [sp, #24]
   1f974:	ands	r2, r1
   1f976:	str	r2, [sp, #48]	; 0x30
   1f978:	ldr	r2, [sp, #28]
   1f97a:	ands	r3, r2
   1f97c:	str	r3, [sp, #52]	; 0x34
   1f97e:	ldrd	r0, r1, [sp, #48]	; 0x30
   1f982:	ldrd	r2, r3, [sp, #24]
   1f986:	cmp	r3, r1
   1f988:	it	eq
   1f98a:	cmpeq	r2, r0
   1f98c:	bne.n	1f922 <btrfs_lookup_block_group@@Base+0x36e>
   1f98e:	ldr	r3, [r4, #72]	; 0x48
   1f990:	str	r3, [sp, #64]	; 0x40
   1f992:	ldr	r3, [r4, #76]	; 0x4c
   1f994:	str	r3, [sp, #68]	; 0x44
   1f996:	cbnz	r5, 1f9a6 <btrfs_lookup_block_group@@Base+0x3f2>
   1f998:	mov	r0, r6
   1f99a:	mov	r1, r7
   1f99c:	movs	r2, #10
   1f99e:	bl	321c0 <div_factor@@Base>
   1f9a2:	mov	r6, r0
   1f9a4:	mov	r7, r1
   1f9a6:	ldrd	r3, r2, [r4, #88]	; 0x58
   1f9aa:	ldr	r1, [sp, #64]	; 0x40
   1f9ac:	adds	r3, r1, r3
   1f9ae:	str	r3, [sp, #56]	; 0x38
   1f9b0:	ldr	r3, [sp, #68]	; 0x44
   1f9b2:	adc.w	r3, r2, r3
   1f9b6:	str	r3, [sp, #60]	; 0x3c
   1f9b8:	ldrd	r2, r3, [sp, #56]	; 0x38
   1f9bc:	cmp	r3, r7
   1f9be:	it	eq
   1f9c0:	cmpeq	r2, r6
   1f9c2:	bcs.n	1f922 <btrfs_lookup_block_group@@Base+0x36e>
   1f9c4:	b.n	1fa22 <btrfs_lookup_block_group@@Base+0x46e>
   1f9c6:	ldrd	r2, r3, [sp, #16]
   1f9ca:	bl	1f5b4 <btrfs_lookup_block_group@@Base>
   1f9ce:	mov	r4, r0
   1f9d0:	cmp	r0, #0
   1f9d2:	beq.n	1f90e <btrfs_lookup_block_group@@Base+0x35a>
   1f9d4:	ldr	r3, [r0, #108]	; 0x6c
   1f9d6:	cmp	r3, #0
   1f9d8:	bne.n	1f90e <btrfs_lookup_block_group@@Base+0x35a>
   1f9da:	ldrd	r0, r1, [r0, #96]	; 0x60
   1f9de:	and.w	r2, r6, r0
   1f9e2:	ldr	r0, [sp, #28]
   1f9e4:	and.w	r3, r0, r1
   1f9e8:	asrs	r1, r6, #31
   1f9ea:	cmp	r1, r3
   1f9ec:	it	eq
   1f9ee:	cmpeq	r6, r2
   1f9f0:	bne.n	1f90e <btrfs_lookup_block_group@@Base+0x35a>
   1f9f2:	ldrd	r2, r1, [r4, #88]	; 0x58
   1f9f6:	ldrd	r3, r0, [r4, #72]	; 0x48
   1f9fa:	adds	r3, r3, r2
   1f9fc:	mov.w	r2, #10
   1fa00:	str	r3, [sp, #32]
   1fa02:	adc.w	r3, r0, r1
   1fa06:	str	r3, [sp, #36]	; 0x24
   1fa08:	ldr.w	r0, [r4, #49]	; 0x31
   1fa0c:	ldr.w	r1, [r4, #53]	; 0x35
   1fa10:	bl	321c0 <div_factor@@Base>
   1fa14:	ldrd	r2, r3, [sp, #32]
   1fa18:	cmp	r3, r1
   1fa1a:	it	eq
   1fa1c:	cmpeq	r2, r0
   1fa1e:	bcs.w	1f90e <btrfs_lookup_block_group@@Base+0x35a>
   1fa22:	ldr	r2, [pc, #176]	; (1fad4 <btrfs_lookup_block_group@@Base+0x520>)
   1fa24:	ldr	r3, [pc, #168]	; (1fad0 <btrfs_lookup_block_group@@Base+0x51c>)
   1fa26:	add	r2, pc
   1fa28:	ldr	r3, [r2, r3]
   1fa2a:	ldr	r2, [r3, #0]
   1fa2c:	ldr	r3, [sp, #100]	; 0x64
   1fa2e:	eors	r2, r3
   1fa30:	beq.n	1fac4 <btrfs_lookup_block_group@@Base+0x510>
   1fa32:	blx	8708 <__stack_chk_fail@plt>
   1fa36:	ldr	r3, [r5, #108]	; 0x6c
   1fa38:	cbnz	r3, 1fa98 <btrfs_lookup_block_group@@Base+0x4e4>
   1fa3a:	ldrd	r0, r1, [r5, #96]	; 0x60
   1fa3e:	and.w	r2, r6, r0
   1fa42:	ldr	r0, [sp, #28]
   1fa44:	and.w	r3, r0, r1
   1fa48:	ldrd	r0, r1, [sp, #24]
   1fa4c:	cmp	r1, r3
   1fa4e:	it	eq
   1fa50:	cmpeq	r0, r2
   1fa52:	bne.n	1fa98 <btrfs_lookup_block_group@@Base+0x4e4>
   1fa54:	ldrd	r2, r1, [r5, #88]	; 0x58
   1fa58:	ldrd	r3, r0, [r5, #72]	; 0x48
   1fa5c:	adds	r3, r3, r2
   1fa5e:	mov.w	r2, #10
   1fa62:	str	r3, [sp, #40]	; 0x28
   1fa64:	adc.w	r3, r0, r1
   1fa68:	str	r3, [sp, #44]	; 0x2c
   1fa6a:	ldr.w	r0, [r5, #49]	; 0x31
   1fa6e:	ldr.w	r1, [r5, #53]	; 0x35
   1fa72:	bl	321c0 <div_factor@@Base>
   1fa76:	ldrd	r3, r4, [sp, #40]	; 0x28
   1fa7a:	cmp	r4, r1
   1fa7c:	it	eq
   1fa7e:	cmpeq	r3, r0
   1fa80:	bcc.n	1fac0 <btrfs_lookup_block_group@@Base+0x50c>
   1fa82:	ldrd	r1, r0, [r5, #40]	; 0x28
   1fa86:	ldr.w	r3, [r5, #49]	; 0x31
   1fa8a:	ldr.w	r2, [r5, #53]	; 0x35
   1fa8e:	adds.w	r9, r3, r1
   1fa92:	adc.w	sl, r2, r0
   1fa96:	b.n	1f918 <btrfs_lookup_block_group@@Base+0x364>
   1fa98:	ldrd	r9, sl, [r5, #40]	; 0x28
   1fa9c:	ldrd	r3, r4, [sp, #16]
   1faa0:	cmp	sl, r4
   1faa2:	it	eq
   1faa4:	cmpeq	r9, r3
   1faa6:	bcs.w	1f918 <btrfs_lookup_block_group@@Base+0x364>
   1faaa:	mov	r9, r3
   1faac:	mov	sl, r4
   1faae:	b.n	1f918 <btrfs_lookup_block_group@@Base+0x364>
   1fab0:	ldrd	r9, sl, [sp, #16]
   1fab4:	movs	r5, #1
   1fab6:	b.n	1f922 <btrfs_lookup_block_group@@Base+0x36e>
   1fab8:	cmp	r5, #0
   1faba:	beq.n	1fab0 <btrfs_lookup_block_group@@Base+0x4fc>
   1fabc:	movs	r4, #0
   1fabe:	b.n	1fa22 <btrfs_lookup_block_group@@Base+0x46e>
   1fac0:	mov	r4, r5
   1fac2:	b.n	1fa22 <btrfs_lookup_block_group@@Base+0x46e>
   1fac4:	mov	r0, r4
   1fac6:	add	sp, #108	; 0x6c
   1fac8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1facc:	strb	r2, [r5, r2]
   1face:	movs	r4, r0
   1fad0:	lsls	r0, r5, #8
   1fad2:	movs	r0, r0
   1fad4:	strh	r2, [r3, r5]
   1fad6:	movs	r4, r0

0001fad8 <hash_extent_data_ref@@Base>:
   1fad8:	push	{r4, r5, r6, lr}
   1fada:	mov	r6, r2
   1fadc:	ldr	r2, [pc, #100]	; (1fb44 <hash_extent_data_ref@@Base+0x6c>)
   1fade:	mov	r5, r3
   1fae0:	ldr	r3, [pc, #100]	; (1fb48 <hash_extent_data_ref@@Base+0x70>)
   1fae2:	sub	sp, #24
   1fae4:	add	r2, pc
   1fae6:	ldr	r3, [r2, r3]
   1fae8:	movs	r2, #8
   1faea:	ldr	r3, [r3, #0]
   1faec:	str	r3, [sp, #20]
   1faee:	mov.w	r3, #0
   1faf2:	strd	r0, r1, [sp, #8]
   1faf6:	add.w	r1, sp, r2
   1fafa:	mov.w	r0, #4294967295	; 0xffffffff
   1fafe:	str	r1, [sp, #4]
   1fb00:	bl	17afa <crc32c_le@@Base>
   1fb04:	ldr	r1, [sp, #4]
   1fb06:	movs	r2, #8
   1fb08:	strd	r6, r5, [sp, #8]
   1fb0c:	mov	r4, r0
   1fb0e:	mov.w	r0, #4294967295	; 0xffffffff
   1fb12:	bl	17afa <crc32c_le@@Base>
   1fb16:	ldrd	r2, r3, [sp, #40]	; 0x28
   1fb1a:	ldr	r1, [sp, #4]
   1fb1c:	strd	r2, r3, [sp, #8]
   1fb20:	movs	r2, #8
   1fb22:	bl	17afa <crc32c_le@@Base>
   1fb26:	ldr	r2, [pc, #36]	; (1fb4c <hash_extent_data_ref@@Base+0x74>)
   1fb28:	ldr	r3, [pc, #28]	; (1fb48 <hash_extent_data_ref@@Base+0x70>)
   1fb2a:	lsrs	r1, r4, #1
   1fb2c:	add	r2, pc
   1fb2e:	ldr	r3, [r2, r3]
   1fb30:	ldr	r2, [r3, #0]
   1fb32:	ldr	r3, [sp, #20]
   1fb34:	eors	r2, r3
   1fb36:	eor.w	r0, r0, r4, lsl #31
   1fb3a:	beq.n	1fb40 <hash_extent_data_ref@@Base+0x68>
   1fb3c:	blx	8708 <__stack_chk_fail@plt>
   1fb40:	add	sp, #24
   1fb42:	pop	{r4, r5, r6, pc}
   1fb44:	strh	r4, [r3, r2]
   1fb46:	movs	r4, r0
   1fb48:	lsls	r0, r5, #8
   1fb4a:	movs	r0, r0
   1fb4c:	strh	r4, [r2, r1]
   1fb4e:	movs	r4, r0
   1fb50:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fb54:	sub	sp, #68	; 0x44
   1fb56:	mov	r5, r2
   1fb58:	ldr	r2, [pc, #836]	; (1fea0 <hash_extent_data_ref@@Base+0x3c8>)
   1fb5a:	str	r3, [sp, #36]	; 0x24
   1fb5c:	mov	r4, r0
   1fb5e:	ldr	r3, [pc, #836]	; (1fea4 <hash_extent_data_ref@@Base+0x3cc>)
   1fb60:	add	r2, pc
   1fb62:	str	r1, [sp, #28]
   1fb64:	mov.w	r9, #0
   1fb68:	ldrd	sl, fp, [sp, #112]	; 0x70
   1fb6c:	ldr	r3, [r2, r3]
   1fb6e:	ldr	r3, [r3, #0]
   1fb70:	str	r3, [sp, #60]	; 0x3c
   1fb72:	mov.w	r3, #0
   1fb76:	ldr.w	r3, [r1, #464]	; 0x1d0
   1fb7a:	ldr.w	r3, [r3, #308]	; 0x134
   1fb7e:	ldr.w	r3, [r3, #188]	; 0xbc
   1fb82:	str.w	sl, [sp, #49]	; 0x31
   1fb86:	and.w	r8, r3, #256	; 0x100
   1fb8a:	ldrd	r2, r3, [sp, #104]	; 0x68
   1fb8e:	str.w	fp, [sp, #53]	; 0x35
   1fb92:	strd	r2, r3, [sp, #40]	; 0x28
   1fb96:	movs	r3, #168	; 0xa8
   1fb98:	strb.w	r3, [sp, #48]	; 0x30
   1fb9c:	ldrd	r2, r3, [sp, #136]	; 0x88
   1fba0:	cmp	r3, #0
   1fba2:	it	eq
   1fba4:	cmpeq.w	r2, #256	; 0x100
   1fba8:	ldrd	r2, r3, [sp, #120]	; 0x78
   1fbac:	bcs.n	1fc34 <hash_extent_data_ref@@Base+0x15c>
   1fbae:	orrs	r3, r2
   1fbb0:	ite	ne
   1fbb2:	movne	r3, #182	; 0xb6
   1fbb4:	moveq	r3, #176	; 0xb0
   1fbb6:	str	r3, [sp, #24]
   1fbb8:	ldr	r3, [sp, #152]	; 0x98
   1fbba:	cmp	r3, #0
   1fbbc:	beq.w	1fe90 <hash_extent_data_ref@@Base+0x3b8>
   1fbc0:	ldr	r0, [sp, #24]
   1fbc2:	bl	1f03c <btrfs_create_tree@@Base+0x5c0>
   1fbc6:	ldrd	r2, r3, [sp, #136]	; 0x88
   1fbca:	cmp	r3, #0
   1fbcc:	it	eq
   1fbce:	cmpeq.w	r2, #256	; 0x100
   1fbd2:	str	r0, [sp, #20]
   1fbd4:	bcs.n	1fc4a <hash_extent_data_ref@@Base+0x172>
   1fbd6:	orrs.w	r3, r8, r9
   1fbda:	beq.n	1fc4a <hash_extent_data_ref@@Base+0x172>
   1fbdc:	movs	r3, #169	; 0xa9
   1fbde:	strb.w	r3, [sp, #48]	; 0x30
   1fbe2:	ldr	r3, [sp, #136]	; 0x88
   1fbe4:	mov.w	r8, #1
   1fbe8:	str.w	r3, [sp, #49]	; 0x31
   1fbec:	ldr	r3, [sp, #140]	; 0x8c
   1fbee:	str.w	r3, [sp, #53]	; 0x35
   1fbf2:	add	r6, sp, #40	; 0x28
   1fbf4:	movs	r7, #1
   1fbf6:	mov.w	r9, #168	; 0xa8
   1fbfa:	ldr	r3, [sp, #20]
   1fbfc:	mov	r2, r6
   1fbfe:	ldr	r1, [sp, #28]
   1fc00:	mov	r0, r4
   1fc02:	str	r7, [sp, #4]
   1fc04:	str	r3, [sp, #0]
   1fc06:	mov	r3, r5
   1fc08:	bl	1a93c <btrfs_search_slot@@Base>
   1fc0c:	cmp	r0, #0
   1fc0e:	blt.n	1fce2 <hash_extent_data_ref@@Base+0x20a>
   1fc10:	beq.n	1fc88 <hash_extent_data_ref@@Base+0x1b0>
   1fc12:	cmp.w	r8, #0
   1fc16:	beq.n	1fcbe <hash_extent_data_ref@@Base+0x1e6>
   1fc18:	ldr	r2, [r5, #32]
   1fc1a:	cbnz	r2, 1fc50 <hash_extent_data_ref@@Base+0x178>
   1fc1c:	mov	r0, r5
   1fc1e:	strb.w	r9, [sp, #48]	; 0x30
   1fc22:	str.w	sl, [sp, #49]	; 0x31
   1fc26:	mov.w	r8, #0
   1fc2a:	str.w	fp, [sp, #53]	; 0x35
   1fc2e:	bl	18558 <btrfs_release_path@@Base>
   1fc32:	b.n	1fbfa <hash_extent_data_ref@@Base+0x122>
   1fc34:	orrs	r3, r2
   1fc36:	ite	ne
   1fc38:	movne	r3, #184	; 0xb8
   1fc3a:	moveq	r3, #178	; 0xb2
   1fc3c:	str	r3, [sp, #24]
   1fc3e:	ldr	r3, [sp, #152]	; 0x98
   1fc40:	cmp	r3, #0
   1fc42:	bne.n	1fbc0 <hash_extent_data_ref@@Base+0xe8>
   1fc44:	mov.w	r3, #4294967295	; 0xffffffff
   1fc48:	str	r3, [sp, #20]
   1fc4a:	mov.w	r8, #0
   1fc4e:	b.n	1fbf2 <hash_extent_data_ref@@Base+0x11a>
   1fc50:	subs	r2, #1
   1fc52:	ldr	r0, [r5, #0]
   1fc54:	mov	r1, r6
   1fc56:	str	r2, [r5, #32]
   1fc58:	bl	1ecd4 <btrfs_create_tree@@Base+0x258>
   1fc5c:	ldrd	r2, r3, [sp, #40]	; 0x28
   1fc60:	ldrd	r0, r1, [sp, #104]	; 0x68
   1fc64:	cmp	r3, r1
   1fc66:	it	eq
   1fc68:	cmpeq	r2, r0
   1fc6a:	bne.n	1fc1c <hash_extent_data_ref@@Base+0x144>
   1fc6c:	ldrb.w	r3, [sp, #48]	; 0x30
   1fc70:	cmp	r3, #168	; 0xa8
   1fc72:	bne.n	1fc1c <hash_extent_data_ref@@Base+0x144>
   1fc74:	ldr.w	r3, [sp, #53]	; 0x35
   1fc78:	ldr.w	r2, [sp, #49]	; 0x31
   1fc7c:	cmp	r3, fp
   1fc7e:	it	eq
   1fc80:	cmpeq	r2, sl
   1fc82:	bne.n	1fc1c <hash_extent_data_ref@@Base+0x144>
   1fc84:	mov.w	r8, #0
   1fc88:	ldr	r4, [r5, #0]
   1fc8a:	movs	r3, #25
   1fc8c:	ldr	r2, [r5, #32]
   1fc8e:	add.w	r7, r4, #96	; 0x60
   1fc92:	mla	r3, r3, r2, r7
   1fc96:	add.w	r1, r3, #101	; 0x65
   1fc9a:	ldr.w	r6, [r3, #122]	; 0x7a
   1fc9e:	cmp	r6, #23
   1fca0:	bhi.n	1fcf8 <hash_extent_data_ref@@Base+0x220>
   1fca2:	ldr	r1, [pc, #516]	; (1fea8 <hash_extent_data_ref@@Base+0x3d0>)
   1fca4:	movs	r3, #24
   1fca6:	str	r2, [sp, #0]
   1fca8:	movs	r0, #1
   1fcaa:	add	r1, pc
   1fcac:	mov	r2, r6
   1fcae:	blx	8a30 <__printf_chk@plt+0x4>
   1fcb2:	mov	r0, r4
   1fcb4:	bl	25720 <btrfs_print_leaf@@Base>
   1fcb8:	mvn.w	r0, #21
   1fcbc:	b.n	1fce2 <hash_extent_data_ref@@Base+0x20a>
   1fcbe:	ldr.w	r2, [sp, #49]	; 0x31
   1fcc2:	movs	r0, #1
   1fcc4:	ldr.w	r3, [sp, #53]	; 0x35
   1fcc8:	ldr	r1, [pc, #480]	; (1feac <hash_extent_data_ref@@Base+0x3d4>)
   1fcca:	strd	r2, r3, [sp, #8]
   1fcce:	add	r1, pc
   1fcd0:	ldrb.w	r3, [sp, #48]	; 0x30
   1fcd4:	str	r3, [sp, #0]
   1fcd6:	ldrd	r2, r3, [sp, #40]	; 0x28
   1fcda:	blx	8a30 <__printf_chk@plt+0x4>
   1fcde:	mvn.w	r0, #1
   1fce2:	ldr	r2, [pc, #460]	; (1feb0 <hash_extent_data_ref@@Base+0x3d8>)
   1fce4:	ldr	r3, [pc, #444]	; (1fea4 <hash_extent_data_ref@@Base+0x3cc>)
   1fce6:	add	r2, pc
   1fce8:	ldr	r3, [r2, r3]
   1fcea:	ldr	r2, [r3, #0]
   1fcec:	ldr	r3, [sp, #60]	; 0x3c
   1fcee:	eors	r2, r3
   1fcf0:	beq.w	1fe98 <hash_extent_data_ref@@Base+0x3c0>
   1fcf4:	blx	8708 <__stack_chk_fail@plt>
   1fcf8:	ldr.w	ip, [r1, #17]
   1fcfc:	movs	r1, #0
   1fcfe:	add.w	fp, ip, #101	; 0x65
   1fd02:	add.w	r4, ip, #125	; 0x7d
   1fd06:	add.w	r3, r7, fp
   1fd0a:	ldr	r0, [r3, #16]
   1fd0c:	add.w	r3, fp, r6
   1fd10:	str	r3, [sp, #32]
   1fd12:	mov	r3, r1
   1fd14:	and.w	r2, r0, #2
   1fd18:	orrs	r3, r2
   1fd1a:	beq.n	1fd7e <hash_extent_data_ref@@Base+0x2a6>
   1fd1c:	cmp.w	r8, #0
   1fd20:	bne.n	1fd48 <hash_extent_data_ref@@Base+0x270>
   1fd22:	ldr	r3, [sp, #32]
   1fd24:	add.w	r4, ip, #143	; 0x8f
   1fd28:	ldr	r2, [pc, #392]	; (1feb4 <hash_extent_data_ref@@Base+0x3dc>)
   1fd2a:	cmp	r3, r4
   1fd2c:	ldr	r1, [pc, #392]	; (1feb8 <hash_extent_data_ref@@Base+0x3e0>)
   1fd2e:	ldr	r0, [pc, #396]	; (1febc <hash_extent_data_ref@@Base+0x3e4>)
   1fd30:	add	r2, pc
   1fd32:	ite	cs
   1fd34:	movcs	r3, #0
   1fd36:	movcc	r3, #1
   1fd38:	adds	r2, #178	; 0xb2
   1fd3a:	str	r3, [sp, #0]
   1fd3c:	add	r1, pc
   1fd3e:	add	r0, pc
   1fd40:	movw	r3, #943	; 0x3af
   1fd44:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   1fd48:	ldr	r3, [sp, #32]
   1fd4a:	cmp	r4, r3
   1fd4c:	bcc.n	1fd8e <hash_extent_data_ref@@Base+0x2b6>
   1fd4e:	ldr	r2, [pc, #368]	; (1fec0 <hash_extent_data_ref@@Base+0x3e8>)
   1fd50:	it	hi
   1fd52:	movhi	r3, #1
   1fd54:	ldr	r1, [pc, #364]	; (1fec4 <hash_extent_data_ref@@Base+0x3ec>)
   1fd56:	it	ls
   1fd58:	movls	r3, #0
   1fd5a:	ldr	r0, [pc, #364]	; (1fec8 <hash_extent_data_ref@@Base+0x3f0>)
   1fd5c:	add	r2, pc
   1fd5e:	str	r3, [sp, #0]
   1fd60:	adds	r2, #178	; 0xb2
   1fd62:	add	r1, pc
   1fd64:	add	r0, pc
   1fd66:	movw	r3, #953	; 0x3b9
   1fd6a:	bl	1edd4 <btrfs_create_tree@@Base+0x358>
   1fd6e:	ldr	r3, [sp, #152]	; 0x98
   1fd70:	cmp	r3, #0
   1fd72:	bne.n	1fe42 <hash_extent_data_ref@@Base+0x36a>
   1fd74:	mvn.w	r0, #1
   1fd78:	ldr	r3, [sp, #36]	; 0x24
   1fd7a:	str	r4, [r3, #0]
   1fd7c:	b.n	1fce2 <hash_extent_data_ref@@Base+0x20a>
   1fd7e:	and.w	r2, r0, #1
   1fd82:	mov	r3, r1
   1fd84:	orrs	r3, r2
   1fd86:	bne.n	1fd48 <hash_extent_data_ref@@Base+0x270>
   1fd88:	mvn.w	r0, #4
   1fd8c:	b.n	1fce2 <hash_extent_data_ref@@Base+0x20a>
   1fd8e:	ldrb.w	sl, [r7, r4]
   1fd92:	adds	r1, r7, r4
   1fd94:	ldr	r3, [sp, #24]
   1fd96:	cmp	sl, r3
   1fd98:	bgt.n	1fd6e <hash_extent_data_ref@@Base+0x296>
   1fd9a:	bge.n	1fda6 <hash_extent_data_ref@@Base+0x2ce>
   1fd9c:	mov	r0, sl
   1fd9e:	bl	1f03c <btrfs_create_tree@@Base+0x5c0>
   1fda2:	add	r4, r0
   1fda4:	b.n	1fd48 <hash_extent_data_ref@@Base+0x270>
   1fda6:	cmp.w	sl, #178	; 0xb2
   1fdaa:	bne.n	1fe1c <hash_extent_data_ref@@Base+0x344>
   1fdac:	adds	r3, r4, #1
   1fdae:	add.w	ip, r7, r3
   1fdb2:	ldr.w	r8, [r7, r3]
   1fdb6:	ldr.w	r9, [ip, #4]
   1fdba:	ldr.w	r2, [ip, #8]
   1fdbe:	ldr.w	r3, [ip, #12]
   1fdc2:	ldr.w	r0, [ip, #16]
   1fdc6:	ldr.w	r1, [ip, #20]
   1fdca:	ldrd	fp, ip, [sp, #128]	; 0x80
   1fdce:	cmp	ip, r9
   1fdd0:	it	eq
   1fdd2:	cmpeq	fp, r8
   1fdd4:	bne.n	1fdee <hash_extent_data_ref@@Base+0x316>
   1fdd6:	ldrd	fp, ip, [sp, #136]	; 0x88
   1fdda:	cmp	ip, r3
   1fddc:	it	eq
   1fdde:	cmpeq	fp, r2
   1fde0:	bne.n	1fdee <hash_extent_data_ref@@Base+0x316>
   1fde2:	ldrd	fp, ip, [sp, #144]	; 0x90
   1fde6:	cmp	ip, r1
   1fde8:	it	eq
   1fdea:	cmpeq	fp, r0
   1fdec:	beq.n	1fe8c <hash_extent_data_ref@@Base+0x3b4>
   1fdee:	strd	r0, r1, [sp]
   1fdf2:	mov	r0, r8
   1fdf4:	mov	r1, r9
   1fdf6:	bl	1fad8 <hash_extent_data_ref@@Base>
   1fdfa:	ldrd	r2, r3, [sp, #144]	; 0x90
   1fdfe:	strd	r2, r3, [sp]
   1fe02:	ldrd	r2, r3, [sp, #136]	; 0x88
   1fe06:	mov	r8, r0
   1fe08:	mov	r9, r1
   1fe0a:	ldrd	r0, r1, [sp, #128]	; 0x80
   1fe0e:	bl	1fad8 <hash_extent_data_ref@@Base>
   1fe12:	cmp	r9, r1
   1fe14:	it	eq
   1fe16:	cmpeq	r8, r0
   1fe18:	bcs.n	1fd9c <hash_extent_data_ref@@Base+0x2c4>
   1fe1a:	b.n	1fd6e <hash_extent_data_ref@@Base+0x296>
   1fe1c:	ldr.w	r2, [r1, #1]!
   1fe20:	ldr	r3, [r1, #4]
   1fe22:	ldrd	r0, r1, [sp, #120]	; 0x78
   1fe26:	orrs	r1, r0
   1fe28:	ite	ne
   1fe2a:	ldrdne	r0, r1, [sp, #120]	; 0x78
   1fe2e:	ldrdeq	r0, r1, [sp, #128]	; 0x80
   1fe32:	cmp	r1, r3
   1fe34:	it	eq
   1fe36:	cmpeq	r0, r2
   1fe38:	beq.n	1fe8c <hash_extent_data_ref@@Base+0x3b4>
   1fe3a:	cmp	r3, r1
   1fe3c:	it	eq
   1fe3e:	cmpeq	r2, r0
   1fe40:	b.n	1fe18 <hash_extent_data_ref@@Base+0x340>
   1fe42:	ldr	r3, [sp, #20]
   1fe44:	add	r3, r6
   1fe46:	mov	r6, r3
   1fe48:	ldr	r3, [sp, #28]
   1fe4a:	ldr.w	r3, [r3, #464]	; 0x1d0
   1fe4e:	ldr.w	r3, [r3, #384]	; 0x180
   1fe52:	subs	r3, #101	; 0x65
   1fe54:	lsrs	r3, r3, #4
   1fe56:	subs	r3, #25
   1fe58:	cmp	r6, r3
   1fe5a:	bcc.n	1fe62 <hash_extent_data_ref@@Base+0x38a>
   1fe5c:	mvn.w	r0, #10
   1fe60:	b.n	1fce2 <hash_extent_data_ref@@Base+0x20a>
   1fe62:	add	r1, sp, #40	; 0x28
   1fe64:	mov	r0, r5
   1fe66:	bl	31b68 <find_next_key@@Base>
   1fe6a:	cmp	r0, #0
   1fe6c:	bne.n	1fd74 <hash_extent_data_ref@@Base+0x29c>
   1fe6e:	ldrd	r2, r3, [sp, #40]	; 0x28
   1fe72:	ldrd	r0, r1, [sp, #104]	; 0x68
   1fe76:	cmp	r3, r1
   1fe78:	it	eq
   1fe7a:	cmpeq	r2, r0
   1fe7c:	bne.w	1fd74 <hash_extent_data_ref@@Base+0x29c>
   1fe80:	ldrb.w	r3, [sp, #48]	; 0x30
   1fe84:	cmp	r3, #191	; 0xbf
   1fe86:	bhi.w	1fd74 <hash_extent_data_ref@@Base+0x29c>
   1fe8a:	b.n	1fe5c <hash_extent_data_ref@@Base+0x384>
   1fe8c:	movs	r0, #0
   1fe8e:	b.n	1fd78 <hash_extent_data_ref@@Base+0x2a0>
   1fe90:	mov.w	r3, #4294967295	; 0xffffffff
   1fe94:	str	r3, [sp, #20]
   1fe96:	b.n	1fbd6 <hash_extent_data_ref@@Base+0xfe>
   1fe98:	add	sp, #68	; 0x44
   1fe9a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fe9e:	nop
   1fea0:	strh	r0, [r4, r0]
   1fea2:	movs	r4, r0
   1fea4:	lsls	r0, r5, #8
   1fea6:	movs	r0, r0
   1fea8:	b.n	1ff54 <hash_extent_data_ref@@Base+0x47c>
   1feaa:	movs	r1, r0
   1feac:	b.n	1fece <hash_extent_data_ref@@Base+0x3f6>
   1feae:	movs	r1, r0
   1feb0:	str	r2, [r3, r2]
   1feb2:	movs	r4, r0
   1feb4:	b.n	1f9f4 <btrfs_lookup_block_group@@Base+0x440>
   1feb6:	movs	r1, r0
   1feb8:	udf	#97	; 0x61
   1feba:	movs	r1, r0
   1febc:	add	r6, sp, #196	; 0xc4
   1febe:	movs	r1, r0
   1fec0:	b.n	1f9a8 <btrfs_lookup_block_group@@Base+0x3f4>
   1fec2:	movs	r1, r0
   1fec4:	udf	#59	; 0x3b
   1fec6:	movs	r1, r0
   1fec8:	add	r6, sp, #44	; 0x2c
   1feca:	movs	r1, r0
   1fecc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fed0:	mov	r6, r0
   1fed2:	vpush	{d8}
   1fed6:	ldr.w	r1, [pc, #2168]	; 20750 <hash_extent_data_ref@@Base+0xc78>
   1feda:	ldr.w	r0, [pc, #2168]	; 20754 <hash_extent_data_ref@@Base+0xc7c>
   1fede:	add	r1, pc
   1fee0:	sub	sp, #148	; 0x94
   1fee2:	add	r0, pc
   1fee4:	str	r1, [sp, #72]	; 0x48
   1fee6:	ldr.w	r1, [pc, #2160]	; 20758 <hash_extent_data_ref@@Base+0xc80>
   1feea:	strd	r2, r3, [sp, #56]	; 0x38
   1feee:	ldrd	r8, r9, [sp, #200]	; 0xc8
   1fef2:	ldr	r1, [r0, r1]
   1fef4:	ldr	r0, [r6, #0]
   1fef6:	ldr	r1, [r1, #0]
   1fef8:	str	r1, [sp, #140]	; 0x8c
   1fefa:	mov.w	r1, #0
   1fefe:	ldr.w	sl, [r0, #24]
   1ff02:	ldr.w	r1, [sl, #464]	; 0x1d0
   1ff06:	ldr.w	r1, [r1, #308]	; 0x134
   1ff0a:	ldr.w	r5, [r1, #188]	; 0xbc
   1ff0e:	ldr.w	r1, [r0, #372]	; 0x174
   1ff12:	cbz	r1, 1ff3e <hash_extent_data_ref@@Base+0x466>
   1ff14:	ldrd	fp, ip, [sp, #224]	; 0xe0
   1ff18:	movs	r4, #1
   1ff1a:	strd	r8, r9, [sp, #8]
   1ff1e:	str	r4, [sp, #40]	; 0x28
   1ff20:	strd	fp, ip, [sp, #32]
   1ff24:	ldrd	fp, ip, [sp, #216]	; 0xd8
   1ff28:	strd	fp, ip, [sp, #24]
   1ff2c:	ldrd	fp, ip, [sp, #208]	; 0xd0
   1ff30:	strd	fp, ip, [sp, #16]
   1ff34:	ldrd	fp, ip, [sp, #192]	; 0xc0
   1ff38:	strd	fp, ip, [sp]
   1ff3c:	blx	r1
   1ff3e:	bl	18550 <btrfs_alloc_path@@Base>
   1ff42:	mov	r4, r0
   1ff44:	cmp	r0, #0
   1ff46:	beq.w	206e2 <hash_extent_data_ref@@Base+0xc0a>
   1ff4a:	movs	r3, #1
   1ff4c:	strb.w	r3, [r0, #64]	; 0x40
   1ff50:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1ff54:	movs	r7, #0
   1ff56:	ldr.w	r1, [pc, #2052]	; 2075c <hash_extent_data_ref@@Base+0xc84>
   1ff5a:	cmp	r3, #0
   1ff5c:	ldr.w	r0, [pc, #2048]	; 20760 <hash_extent_data_ref@@Base+0xc88>
   1ff60:	it	eq
   1ff62:	cmpeq.w	r2, #256	; 0x100
   1ff66:	ldr.w	r2, [pc, #2044]	; 20764 <hash_extent_data_ref@@Base+0xc8c>
   1ff6a:	add	r1, pc
   1ff6c:	add	r0, pc
   1ff6e:	add	r2, pc
   1ff70:	ite	cs
   1ff72:	movcs	r3, #1
   1ff74:	movcc	r3, #0
   1ff76:	add.w	r2, r2, #207	; 0xcf
   1ff7a:	str	r3, [sp, #76]	; 0x4c
   1ff7c:	ite	cc
   1ff7e:	ubfxcc	r3, r5, #8, #1
   1ff82:	movcs	r3, #0
   1ff84:	str	r7, [sp, #0]
   1ff86:	str	r3, [sp, #64]	; 0x40
   1ff88:	movw	r3, #1959	; 0x7a7
   1ff8c:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   1ff90:	ldrd	r2, r3, [sp, #224]	; 0xe0
   1ff94:	mov	r1, sl
   1ff96:	mov	r0, r6
   1ff98:	str	r7, [sp, #48]	; 0x30
   1ff9a:	strd	r2, r3, [sp, #40]	; 0x28
   1ff9e:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1ffa2:	strd	r8, r9, [sp, #16]
   1ffa6:	strd	r2, r3, [sp, #32]
   1ffaa:	ldrd	r2, r3, [sp, #208]	; 0xd0
   1ffae:	strd	r2, r3, [sp, #24]
   1ffb2:	ldrd	r2, r3, [sp, #192]	; 0xc0
   1ffb6:	strd	r2, r3, [sp, #8]
   1ffba:	ldrd	r2, r3, [sp, #56]	; 0x38
   1ffbe:	strd	r2, r3, [sp]
   1ffc2:	add	r3, sp, #96	; 0x60
   1ffc4:	mov	r2, r4
   1ffc6:	bl	1fb50 <hash_extent_data_ref@@Base+0x78>
   1ffca:	adds	r3, r0, #2
   1ffcc:	mov	r5, r0
   1ffce:	bne.w	200e2 <hash_extent_data_ref@@Base+0x60a>
   1ffd2:	mov	r0, r4
   1ffd4:	bl	18558 <btrfs_release_path@@Base>
   1ffd8:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1ffdc:	str	r7, [sp, #96]	; 0x60
   1ffde:	cmp	r3, #0
   1ffe0:	it	eq
   1ffe2:	cmpeq.w	r2, #256	; 0x100
   1ffe6:	ldrd	r2, r3, [sp, #56]	; 0x38
   1ffea:	strd	r2, r3, [sp, #120]	; 0x78
   1ffee:	bcs.n	200a6 <hash_extent_data_ref@@Base+0x5ce>
   1fff0:	orrs.w	r3, r8, r9
   1fff4:	add.w	r3, sp, #129	; 0x81
   1fff8:	beq.n	20094 <hash_extent_data_ref@@Base+0x5bc>
   1fffa:	movs	r2, #182	; 0xb6
   1fffc:	str.w	r8, [sp, #129]	; 0x81
   20000:	strb.w	r2, [sp, #128]	; 0x80
   20004:	str.w	r9, [r3, #4]
   20008:	mov.w	r3, #4294967295	; 0xffffffff
   2000c:	movs	r5, #1
   2000e:	add	r2, sp, #120	; 0x78
   20010:	strd	r3, r5, [sp]
   20014:	mov	r1, sl
   20016:	mov	r3, r4
   20018:	mov	r0, r6
   2001a:	bl	1a93c <btrfs_search_slot@@Base>
   2001e:	subs	r5, r0, #0
   20020:	ble.n	200e2 <hash_extent_data_ref@@Base+0x60a>
   20022:	ldr	r2, [sp, #72]	; 0x48
   20024:	mvn.w	r5, #4
   20028:	ldr.w	r3, [pc, #1852]	; 20768 <hash_extent_data_ref@@Base+0xc90>
   2002c:	ldr	r3, [r2, r3]
   2002e:	ldrd	r1, r2, [sp, #224]	; 0xe0
   20032:	strd	r8, r9, [sp, #8]
   20036:	strd	r1, r2, [sp, #32]
   2003a:	ldrd	r1, r2, [sp, #216]	; 0xd8
   2003e:	strd	r1, r2, [sp, #24]
   20042:	ldrd	r1, r2, [sp, #208]	; 0xd0
   20046:	strd	r1, r2, [sp, #16]
   2004a:	ldrd	r1, r2, [sp, #56]	; 0x38
   2004e:	strd	r1, r2, [sp]
   20052:	movs	r1, #1
   20054:	ldr.w	r2, [pc, #1812]	; 2076c <hash_extent_data_ref@@Base+0xc94>
   20058:	ldr	r0, [r3, #0]
   2005a:	add	r2, pc
   2005c:	blx	8a64 <__fprintf_chk@plt+0x4>
   20060:	ldr.w	r1, [pc, #1804]	; 20770 <hash_extent_data_ref@@Base+0xc98>
   20064:	ldr	r2, [r4, #32]
   20066:	movs	r0, #1
   20068:	add	r1, pc
   2006a:	blx	8a30 <__printf_chk@plt+0x4>
   2006e:	ldr	r0, [r4, #0]
   20070:	bl	25720 <btrfs_print_leaf@@Base>
   20074:	mov	r0, r4
   20076:	bl	1857e <btrfs_free_path@@Base>
   2007a:	ldr.w	r2, [pc, #1784]	; 20774 <hash_extent_data_ref@@Base+0xc9c>
   2007e:	ldr.w	r3, [pc, #1752]	; 20758 <hash_extent_data_ref@@Base+0xc80>
   20082:	add	r2, pc
   20084:	ldr	r3, [r2, r3]
   20086:	ldr	r2, [r3, #0]
   20088:	ldr	r3, [sp, #140]	; 0x8c
   2008a:	eors	r2, r3
   2008c:	beq.w	20742 <hash_extent_data_ref@@Base+0xc6a>
   20090:	blx	8708 <__stack_chk_fail@plt>
   20094:	movs	r2, #176	; 0xb0
   20096:	strb.w	r2, [sp, #128]	; 0x80
   2009a:	ldr	r2, [sp, #208]	; 0xd0
   2009c:	str.w	r2, [sp, #129]	; 0x81
   200a0:	ldr	r2, [sp, #212]	; 0xd4
   200a2:	str	r2, [r3, #4]
   200a4:	b.n	20008 <hash_extent_data_ref@@Base+0x530>
   200a6:	orrs.w	r3, r8, r9
   200aa:	beq.n	200e8 <hash_extent_data_ref@@Base+0x610>
   200ac:	movs	r3, #184	; 0xb8
   200ae:	str.w	r8, [sp, #129]	; 0x81
   200b2:	strb.w	r3, [sp, #128]	; 0x80
   200b6:	str.w	r9, [sp, #133]	; 0x85
   200ba:	add	r3, sp, #120	; 0x78
   200bc:	vmov	s16, r3
   200c0:	mov.w	r3, #4294967295	; 0xffffffff
   200c4:	movs	r0, #1
   200c6:	vmov	r2, s16
   200ca:	mov	r1, sl
   200cc:	strd	r3, r0, [sp]
   200d0:	mov	r3, r4
   200d2:	mov	r0, r6
   200d4:	bl	1a93c <btrfs_search_slot@@Base>
   200d8:	subs	r5, r0, #0
   200da:	blt.n	20022 <hash_extent_data_ref@@Base+0x54a>
   200dc:	orrs.w	r3, r8, r9
   200e0:	beq.n	2010c <hash_extent_data_ref@@Base+0x634>
   200e2:	cmp	r5, #0
   200e4:	beq.n	201ba <hash_extent_data_ref@@Base+0x6e2>
   200e6:	b.n	20022 <hash_extent_data_ref@@Base+0x54a>
   200e8:	movs	r3, #178	; 0xb2
   200ea:	strb.w	r3, [sp, #128]	; 0x80
   200ee:	ldrd	r2, r3, [sp, #224]	; 0xe0
   200f2:	ldrd	r0, r1, [sp, #208]	; 0xd0
   200f6:	strd	r2, r3, [sp]
   200fa:	ldrd	r2, r3, [sp, #216]	; 0xd8
   200fe:	bl	1fad8 <hash_extent_data_ref@@Base>
   20102:	str.w	r0, [sp, #129]	; 0x81
   20106:	str.w	r1, [sp, #133]	; 0x85
   2010a:	b.n	200ba <hash_extent_data_ref@@Base+0x5e2>
   2010c:	ldr	r7, [r4, #0]
   2010e:	movs	r5, #0
   20110:	ldr.w	r3, [r7, #192]	; 0xc0
   20114:	str	r3, [sp, #80]	; 0x50
   20116:	ldr	r3, [r4, #32]
   20118:	ldr	r2, [sp, #80]	; 0x50
   2011a:	cmp	r3, r2
   2011c:	bcc.n	20144 <hash_extent_data_ref@@Base+0x66c>
   2011e:	mov.w	r3, #0
   20122:	mov	r1, r4
   20124:	strb.w	r3, [r4, #65]	; 0x41
   20128:	ldr.w	r0, [sl, #464]	; 0x1d0
   2012c:	bl	1bd70 <btrfs_next_sibling_tree_block@@Base>
   20130:	cmp	r0, #0
   20132:	blt.w	20022 <hash_extent_data_ref@@Base+0x54a>
   20136:	bne.w	20022 <hash_extent_data_ref@@Base+0x54a>
   2013a:	ldr	r7, [r4, #0]
   2013c:	movs	r5, #1
   2013e:	ldr.w	r3, [r7, #192]	; 0xc0
   20142:	str	r3, [sp, #80]	; 0x50
   20144:	vmov	r1, s16
   20148:	mov	r0, r7
   2014a:	ldr	r2, [r4, #32]
   2014c:	bl	1ecd4 <btrfs_create_tree@@Base+0x258>
   20150:	ldrd	r2, r3, [sp, #120]	; 0x78
   20154:	ldrd	r0, r1, [sp, #56]	; 0x38
   20158:	cmp	r1, r3
   2015a:	it	eq
   2015c:	cmpeq	r0, r2
   2015e:	bne.w	20022 <hash_extent_data_ref@@Base+0x54a>
   20162:	ldrb.w	r3, [sp, #128]	; 0x80
   20166:	cmp	r3, #178	; 0xb2
   20168:	bne.w	20022 <hash_extent_data_ref@@Base+0x54a>
   2016c:	ldr	r0, [r4, #32]
   2016e:	add.w	ip, r7, #96	; 0x60
   20172:	movs	r3, #25
   20174:	mla	r3, r3, r0, ip
   20178:	ldr.w	lr, [r3, #118]	; 0x76
   2017c:	add.w	lr, lr, #101	; 0x65
   20180:	add.w	r1, ip, lr
   20184:	ldr.w	r2, [ip, lr]
   20188:	ldr	r3, [r1, #4]
   2018a:	ldrd	fp, ip, [sp, #208]	; 0xd0
   2018e:	cmp	ip, r3
   20190:	it	eq
   20192:	cmpeq	fp, r2
   20194:	bne.n	20230 <hash_extent_data_ref@@Base+0x758>
   20196:	ldrd	fp, ip, [sp, #216]	; 0xd8
   2019a:	ldr	r3, [r1, #12]
   2019c:	ldr	r2, [r1, #8]
   2019e:	cmp	ip, r3
   201a0:	it	eq
   201a2:	cmpeq	fp, r2
   201a4:	bne.n	20230 <hash_extent_data_ref@@Base+0x758>
   201a6:	ldrd	fp, ip, [sp, #224]	; 0xe0
   201aa:	ldr	r3, [r1, #20]
   201ac:	ldr	r2, [r1, #16]
   201ae:	cmp	ip, r3
   201b0:	it	eq
   201b2:	cmpeq	fp, r2
   201b4:	bne.n	20230 <hash_extent_data_ref@@Base+0x758>
   201b6:	cmp	r5, #0
   201b8:	bne.n	20236 <hash_extent_data_ref@@Base+0x75e>
   201ba:	ldr	r7, [r4, #32]
   201bc:	add	r5, sp, #100	; 0x64
   201be:	cmp	r7, #0
   201c0:	bge.n	2023e <hash_extent_data_ref@@Base+0x766>
   201c2:	ldr.w	r7, [pc, #1460]	; 20778 <hash_extent_data_ref@@Base+0xca0>
   201c6:	ldr.w	r5, [pc, #1460]	; 2077c <hash_extent_data_ref@@Base+0xca4>
   201ca:	ldr	r3, [sp, #96]	; 0x60
   201cc:	add	r7, pc
   201ce:	adds	r7, #207	; 0xcf
   201d0:	add	r5, pc
   201d2:	ldr.w	r0, [pc, #1452]	; 20780 <hash_extent_data_ref@@Base+0xca8>
   201d6:	mov	r2, r7
   201d8:	mov	r1, r5
   201da:	add	r0, pc
   201dc:	str	r3, [sp, #0]
   201de:	movw	r3, #1987	; 0x7c3
   201e2:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   201e6:	ldr	r3, [sp, #76]	; 0x4c
   201e8:	mov	r2, r4
   201ea:	mov	r1, sl
   201ec:	mov	r0, r6
   201ee:	str	r3, [sp, #0]
   201f0:	movs	r3, #0
   201f2:	bl	1f3a4 <btrfs_create_tree@@Base+0x928>
   201f6:	movw	r3, #1991	; 0x7c7
   201fa:	mov	r2, r7
   201fc:	mov	r1, r5
   201fe:	str	r0, [sp, #0]
   20200:	ldr.w	r0, [pc, #1408]	; 20784 <hash_extent_data_ref@@Base+0xcac>
   20204:	add	r0, pc
   20206:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   2020a:	mov	r0, r4
   2020c:	bl	18558 <btrfs_release_path@@Base>
   20210:	ldr	r3, [sp, #56]	; 0x38
   20212:	ldr	r2, [sp, #64]	; 0x40
   20214:	str	r3, [sp, #100]	; 0x64
   20216:	ldr	r3, [sp, #60]	; 0x3c
   20218:	str	r3, [sp, #104]	; 0x68
   2021a:	add.w	r3, sp, #109	; 0x6d
   2021e:	cbnz	r2, 20292 <hash_extent_data_ref@@Base+0x7ba>
   20220:	movs	r2, #168	; 0xa8
   20222:	strb.w	r2, [sp, #108]	; 0x6c
   20226:	ldr	r2, [sp, #192]	; 0xc0
   20228:	str.w	r2, [sp, #109]	; 0x6d
   2022c:	ldr	r2, [sp, #196]	; 0xc4
   2022e:	b.n	202a0 <hash_extent_data_ref@@Base+0x7c8>
   20230:	adds	r0, #1
   20232:	str	r0, [r4, #32]
   20234:	b.n	20116 <hash_extent_data_ref@@Base+0x63e>
   20236:	mov	r0, r4
   20238:	bl	18558 <btrfs_release_path@@Base>
   2023c:	b.n	200c0 <hash_extent_data_ref@@Base+0x5e8>
   2023e:	ldr	r0, [r4, #0]
   20240:	mov	r2, r7
   20242:	mov	r1, r5
   20244:	bl	1ecd4 <btrfs_create_tree@@Base+0x258>
   20248:	ldrd	r2, r3, [sp, #100]	; 0x64
   2024c:	ldrd	r0, r1, [sp, #56]	; 0x38
   20250:	cmp	r1, r3
   20252:	it	eq
   20254:	cmpeq	r0, r2
   20256:	bne.n	201c2 <hash_extent_data_ref@@Base+0x6ea>
   20258:	ldrb.w	r3, [sp, #108]	; 0x6c
   2025c:	cmp	r3, #168	; 0xa8
   2025e:	bne.n	20280 <hash_extent_data_ref@@Base+0x7a8>
   20260:	ldr.w	r2, [sp, #109]	; 0x6d
   20264:	ldr.w	r3, [sp, #113]	; 0x71
   20268:	ldrd	r0, r1, [sp, #192]	; 0xc0
   2026c:	cmp	r1, r3
   2026e:	it	eq
   20270:	cmpeq	r0, r2
   20272:	beq.n	20360 <hash_extent_data_ref@@Base+0x888>
   20274:	ldr	r3, [r4, #32]
   20276:	subs	r3, r3, r7
   20278:	cmp	r3, #5
   2027a:	bgt.n	201c2 <hash_extent_data_ref@@Base+0x6ea>
   2027c:	subs	r7, #1
   2027e:	b.n	201be <hash_extent_data_ref@@Base+0x6e6>
   20280:	cmp	r3, #169	; 0xa9
   20282:	bne.n	20274 <hash_extent_data_ref@@Base+0x79c>
   20284:	ldr.w	r2, [sp, #109]	; 0x6d
   20288:	ldr.w	r3, [sp, #113]	; 0x71
   2028c:	ldrd	r0, r1, [sp, #216]	; 0xd8
   20290:	b.n	2026c <hash_extent_data_ref@@Base+0x794>
   20292:	movs	r2, #169	; 0xa9
   20294:	strb.w	r2, [sp, #108]	; 0x6c
   20298:	ldr	r2, [sp, #216]	; 0xd8
   2029a:	str.w	r2, [sp, #109]	; 0x6d
   2029e:	ldr	r2, [sp, #220]	; 0xdc
   202a0:	add	r7, sp, #100	; 0x64
   202a2:	str	r2, [r3, #4]
   202a4:	movs	r1, #1
   202a6:	mov.w	r3, #4294967295	; 0xffffffff
   202aa:	mov	r2, r7
   202ac:	strd	r3, r1, [sp]
   202b0:	mov	r0, r6
   202b2:	mov	r3, r4
   202b4:	mov	r1, sl
   202b6:	bl	1a93c <btrfs_search_slot@@Base>
   202ba:	subs	r5, r0, #0
   202bc:	ble.w	20718 <hash_extent_data_ref@@Base+0xc40>
   202c0:	ldr	r3, [sp, #64]	; 0x40
   202c2:	cmp	r3, #0
   202c4:	beq.w	2071e <hash_extent_data_ref@@Base+0xc46>
   202c8:	ldr	r2, [r4, #32]
   202ca:	cmp	r2, #0
   202cc:	beq.w	206e8 <hash_extent_data_ref@@Base+0xc10>
   202d0:	subs	r2, #1
   202d2:	ldr	r0, [r4, #0]
   202d4:	mov	r1, r7
   202d6:	str	r2, [r4, #32]
   202d8:	bl	1ecd4 <btrfs_create_tree@@Base+0x258>
   202dc:	ldrd	r2, r3, [sp, #100]	; 0x64
   202e0:	ldrd	r0, r1, [sp, #56]	; 0x38
   202e4:	cmp	r1, r3
   202e6:	it	eq
   202e8:	cmpeq	r0, r2
   202ea:	bne.w	206e8 <hash_extent_data_ref@@Base+0xc10>
   202ee:	ldrb.w	r3, [sp, #108]	; 0x6c
   202f2:	cmp	r3, #168	; 0xa8
   202f4:	bne.w	206e8 <hash_extent_data_ref@@Base+0xc10>
   202f8:	ldrd	r0, r1, [sp, #192]	; 0xc0
   202fc:	ldr.w	r3, [sp, #113]	; 0x71
   20300:	ldr.w	r2, [sp, #109]	; 0x6d
   20304:	cmp	r1, r3
   20306:	it	eq
   20308:	cmpeq	r0, r2
   2030a:	bne.w	206e8 <hash_extent_data_ref@@Base+0xc10>
   2030e:	movs	r5, #0
   20310:	ldr.w	r2, [pc, #1140]	; 20788 <hash_extent_data_ref@@Base+0xcb0>
   20314:	mov.w	r3, #2032	; 0x7f0
   20318:	ldr.w	r1, [pc, #1136]	; 2078c <hash_extent_data_ref@@Base+0xcb4>
   2031c:	mov.w	r8, #0
   20320:	ldr.w	r0, [pc, #1132]	; 20790 <hash_extent_data_ref@@Base+0xcb8>
   20324:	add	r2, pc
   20326:	adds	r2, #207	; 0xcf
   20328:	add	r1, pc
   2032a:	add	r0, pc
   2032c:	str	r5, [sp, #0]
   2032e:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   20332:	ldr	r7, [r4, #32]
   20334:	ldr	r3, [r4, #0]
   20336:	add.w	fp, r3, #96	; 0x60
   2033a:	str	r3, [sp, #80]	; 0x50
   2033c:	movs	r3, #25
   2033e:	mla	r3, r3, r7, fp
   20342:	add.w	r2, r3, #101	; 0x65
   20346:	ldr.w	r1, [r3, #122]	; 0x7a
   2034a:	cmp	r1, #23
   2034c:	bhi.n	20368 <hash_extent_data_ref@@Base+0x890>
   2034e:	ldr.w	r0, [pc, #1092]	; 20794 <hash_extent_data_ref@@Base+0xcbc>
   20352:	movs	r2, #24
   20354:	mvn.w	r5, #116	; 0x74
   20358:	add	r0, pc
   2035a:	bl	17b7c <__btrfs_error@@Base>
   2035e:	b.n	20074 <hash_extent_data_ref@@Base+0x59c>
   20360:	mov.w	r8, #1
   20364:	movs	r5, #0
   20366:	b.n	20334 <hash_extent_data_ref@@Base+0x85c>
   20368:	ldr.w	r3, [r2, #17]
   2036c:	adds	r3, #101	; 0x65
   2036e:	str	r3, [sp, #72]	; 0x48
   20370:	ldrd	r2, r3, [sp, #216]	; 0xd8
   20374:	cmp	r3, #0
   20376:	it	eq
   20378:	cmpeq.w	r2, #256	; 0x100
   2037c:	bcs.n	203dc <hash_extent_data_ref@@Base+0x904>
   2037e:	ldrb.w	r3, [sp, #108]	; 0x6c
   20382:	cmp	r3, #168	; 0xa8
   20384:	bne.n	203dc <hash_extent_data_ref@@Base+0x904>
   20386:	ldr.w	r0, [pc, #1040]	; 20798 <hash_extent_data_ref@@Base+0xcc0>
   2038a:	cmp	r1, #41	; 0x29
   2038c:	ldr.w	r2, [pc, #1036]	; 2079c <hash_extent_data_ref@@Base+0xcc4>
   20390:	movw	r3, #2063	; 0x80f
   20394:	add	r0, pc
   20396:	ite	hi
   20398:	movhi	r1, #0
   2039a:	movls	r1, #1
   2039c:	str	r0, [sp, #64]	; 0x40
   2039e:	str	r1, [sp, #0]
   203a0:	mov	r1, r0
   203a2:	ldr	r0, [pc, #1020]	; (207a0 <hash_extent_data_ref@@Base+0xcc8>)
   203a4:	add	r2, pc
   203a6:	adds	r2, #207	; 0xcf
   203a8:	str	r2, [sp, #84]	; 0x54
   203aa:	add	r0, pc
   203ac:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   203b0:	ldr	r3, [sp, #72]	; 0x48
   203b2:	ldrd	r0, r1, [sp, #216]	; 0xd8
   203b6:	add	r3, fp
   203b8:	ldrb.w	r2, [r3, #41]	; 0x29
   203bc:	movs	r3, #0
   203be:	cmp	r3, r1
   203c0:	ldr	r1, [sp, #64]	; 0x40
   203c2:	it	eq
   203c4:	cmpeq	r2, r0
   203c6:	ldr	r0, [pc, #988]	; (207a4 <hash_extent_data_ref@@Base+0xccc>)
   203c8:	ldr	r2, [sp, #84]	; 0x54
   203ca:	ite	ne
   203cc:	movne	r3, #1
   203ce:	moveq	r3, #0
   203d0:	add	r0, pc
   203d2:	str	r3, [sp, #0]
   203d4:	movw	r3, #2065	; 0x811
   203d8:	bl	1edd4 <btrfs_create_tree@@Base+0x358>
   203dc:	ldr	r3, [sp, #72]	; 0x48
   203de:	ldr.w	r9, [pc, #968]	; 207a8 <hash_extent_data_ref@@Base+0xcd0>
   203e2:	add	r3, fp
   203e4:	str	r3, [sp, #84]	; 0x54
   203e6:	ldr	r3, [sp, #72]	; 0x48
   203e8:	add	r9, pc
   203ea:	ldr	r0, [pc, #960]	; (207ac <hash_extent_data_ref@@Base+0xcd4>)
   203ec:	ldr.w	r3, [fp, r3]
   203f0:	add	r0, pc
   203f2:	str	r3, [sp, #64]	; 0x40
   203f4:	ldr	r3, [sp, #84]	; 0x54
   203f6:	ldr	r3, [r3, #4]
   203f8:	str	r3, [sp, #68]	; 0x44
   203fa:	ldr	r3, [pc, #948]	; (207b0 <hash_extent_data_ref@@Base+0xcd8>)
   203fc:	add	r3, pc
   203fe:	str	r3, [sp, #88]	; 0x58
   20400:	add.w	r2, r3, #207	; 0xcf
   20404:	ldrd	r3, r1, [sp, #64]	; 0x40
   20408:	str	r2, [sp, #92]	; 0x5c
   2040a:	orrs	r3, r1
   2040c:	mov	r1, r9
   2040e:	ite	eq
   20410:	moveq	r3, #1
   20412:	movne	r3, #0
   20414:	str	r3, [sp, #0]
   20416:	movw	r3, #2069	; 0x815
   2041a:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   2041e:	ldr	r3, [sp, #64]	; 0x40
   20420:	adds.w	r1, r3, #4294967295	; 0xffffffff
   20424:	ldr	r3, [sp, #68]	; 0x44
   20426:	adc.w	ip, r3, #4294967295	; 0xffffffff
   2042a:	ldrd	r2, r3, [sp, #64]	; 0x40
   2042e:	cmp	r3, #0
   20430:	it	eq
   20432:	cmpeq	r2, #1
   20434:	beq.n	20498 <hash_extent_data_ref@@Base+0x9c0>
   20436:	ldr	r0, [sp, #96]	; 0x60
   20438:	cbz	r0, 20484 <hash_extent_data_ref@@Base+0x9ac>
   2043a:	ldr	r0, [pc, #888]	; (207b4 <hash_extent_data_ref@@Base+0xcdc>)
   2043c:	eor.w	r3, r8, #1
   20440:	ldr	r2, [sp, #92]	; 0x5c
   20442:	mov	r1, r9
   20444:	str	r3, [sp, #0]
   20446:	add	r0, pc
   20448:	movw	r3, #2078	; 0x81e
   2044c:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   20450:	cmp.w	r8, #0
   20454:	beq.w	20074 <hash_extent_data_ref@@Base+0x59c>
   20458:	ldr	r3, [sp, #76]	; 0x4c
   2045a:	mov	r2, r4
   2045c:	mov	r1, sl
   2045e:	mov	r0, r6
   20460:	str	r3, [sp, #0]
   20462:	ldr	r3, [sp, #96]	; 0x60
   20464:	bl	1f3a4 <btrfs_create_tree@@Base+0x928>
   20468:	ldr	r2, [pc, #844]	; (207b8 <hash_extent_data_ref@@Base+0xce0>)
   2046a:	ldr	r1, [pc, #848]	; (207bc <hash_extent_data_ref@@Base+0xce4>)
   2046c:	movw	r3, #2087	; 0x827
   20470:	add	r2, pc
   20472:	adds	r2, #207	; 0xcf
   20474:	add	r1, pc
   20476:	mov	r5, r0
   20478:	str	r0, [sp, #0]
   2047a:	ldr	r0, [pc, #836]	; (207c0 <hash_extent_data_ref@@Base+0xce8>)
   2047c:	add	r0, pc
   2047e:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   20482:	b.n	20074 <hash_extent_data_ref@@Base+0x59c>
   20484:	ldr	r3, [sp, #72]	; 0x48
   20486:	ldr	r0, [sp, #80]	; 0x50
   20488:	str.w	r1, [fp, r3]
   2048c:	ldr	r3, [sp, #84]	; 0x54
   2048e:	str.w	ip, [r3, #4]
   20492:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   20496:	b.n	20450 <hash_extent_data_ref@@Base+0x978>
   20498:	cmp.w	r8, #0
   2049c:	beq.w	206ba <hash_extent_data_ref@@Base+0xbe2>
   204a0:	ldrd	r2, r3, [sp, #216]	; 0xd8
   204a4:	cmp	r3, #0
   204a6:	it	eq
   204a8:	cmpeq.w	r2, #256	; 0x100
   204ac:	bcc.w	20698 <hash_extent_data_ref@@Base+0xbc0>
   204b0:	ldr.w	fp, [r4]
   204b4:	add	r1, sp, #120	; 0x78
   204b6:	ldr	r5, [sp, #96]	; 0x60
   204b8:	ldr	r2, [r4, #32]
   204ba:	mov	r0, fp
   204bc:	bl	1ecd4 <btrfs_create_tree@@Base+0x258>
   204c0:	add.w	r0, fp, #96	; 0x60
   204c4:	cmp	r5, #0
   204c6:	beq.w	2064e <hash_extent_data_ref@@Base+0xb76>
   204ca:	ldrb	r3, [r0, r5]
   204cc:	add	r0, r5
   204ce:	cmp	r3, #178	; 0xb2
   204d0:	ite	eq
   204d2:	ldreq.w	r3, [r0, #25]
   204d6:	ldrne.w	r3, [r0, #9]
   204da:	subs	r3, #1
   204dc:	it	ne
   204de:	movne	r3, #1
   204e0:	ldr	r2, [pc, #736]	; (207c4 <hash_extent_data_ref@@Base+0xcec>)
   204e2:	ldr	r1, [pc, #740]	; (207c8 <hash_extent_data_ref@@Base+0xcf0>)
   204e4:	ldr	r0, [pc, #740]	; (207cc <hash_extent_data_ref@@Base+0xcf4>)
   204e6:	add	r2, pc
   204e8:	adds	r2, #207	; 0xcf
   204ea:	add	r1, pc
   204ec:	add	r0, pc
   204ee:	str	r3, [sp, #0]
   204f0:	movw	r3, #2093	; 0x82d
   204f4:	str	r2, [sp, #72]	; 0x48
   204f6:	str	r1, [sp, #64]	; 0x40
   204f8:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   204fc:	ldr	r0, [sp, #96]	; 0x60
   204fe:	ldr	r3, [r4, #32]
   20500:	ldr	r1, [sp, #64]	; 0x40
   20502:	ldr	r2, [sp, #72]	; 0x48
   20504:	cmp	r0, #0
   20506:	beq.w	2069c <hash_extent_data_ref@@Base+0xbc4>
   2050a:	subs	r7, r7, r3
   2050c:	ldr	r0, [pc, #704]	; (207d0 <hash_extent_data_ref@@Base+0xcf8>)
   2050e:	mov.w	r3, #2096	; 0x830
   20512:	it	ne
   20514:	movne	r7, #1
   20516:	add	r0, pc
   20518:	str	r7, [sp, #0]
   2051a:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   2051e:	ldrd	r2, r3, [sp, #216]	; 0xd8
   20522:	cmp	r3, #0
   20524:	it	eq
   20526:	cmpeq.w	r2, #256	; 0x100
   2052a:	bcs.w	206c6 <hash_extent_data_ref@@Base+0xbee>
   2052e:	ldr	r3, [sp, #192]	; 0xc0
   20530:	ldr	r0, [r6, #0]
   20532:	str	r3, [sp, #0]
   20534:	ldrd	r2, r3, [sp, #56]	; 0x38
   20538:	bl	1c928 <btrfs_find_tree_block@@Base>
   2053c:	mov	r5, r0
   2053e:	cmp	r0, #0
   20540:	beq.w	206c6 <hash_extent_data_ref@@Base+0xbee>
   20544:	movs	r2, #0
   20546:	movs	r3, #0
   20548:	bl	1dc14 <btrfs_buffer_uptodate@@Base>
   2054c:	cmp	r0, #0
   2054e:	beq.w	206c0 <hash_extent_data_ref@@Base+0xbe8>
   20552:	ldr.w	r3, [r5, #188]	; 0xbc
   20556:	mov.w	r1, #4294967295	; 0xffffffff
   2055a:	ldr.w	r2, [r5, #184]	; 0xb8
   2055e:	mvn.w	r0, #5
   20562:	cmp	r3, r1
   20564:	it	eq
   20566:	cmpeq	r2, r0
   20568:	beq.w	206c0 <hash_extent_data_ref@@Base+0xbe8>
   2056c:	ldrd	r2, r3, [r6, #8]
   20570:	ldr.w	r1, [r5, #180]	; 0xb4
   20574:	ldr.w	r0, [r5, #176]	; 0xb0
   20578:	cmp	r1, r3
   2057a:	it	eq
   2057c:	cmpeq	r0, r2
   2057e:	bne.w	206c0 <hash_extent_data_ref@@Base+0xbe8>
   20582:	ldr.w	r1, [r5, #152]	; 0x98
   20586:	movs	r3, #0
   20588:	and.w	r2, r1, #1
   2058c:	orrs	r3, r2
   2058e:	bne.w	206c0 <hash_extent_data_ref@@Base+0xbe8>
   20592:	mov	r0, r5
   20594:	mov.w	r9, #1
   20598:	bl	1dc0c <clean_tree_block@@Base>
   2059c:	mov	r0, r5
   2059e:	bl	17320 <free_extent_buffer@@Base>
   205a2:	ldr	r5, [pc, #560]	; (207d4 <hash_extent_data_ref@@Base+0xcfc>)
   205a4:	movs	r3, #0
   205a6:	ldr	r7, [pc, #560]	; (207d8 <hash_extent_data_ref@@Base+0xd00>)
   205a8:	add	r5, pc
   205aa:	ldr	r0, [pc, #560]	; (207dc <hash_extent_data_ref@@Base+0xd04>)
   205ac:	adds	r5, #207	; 0xcf
   205ae:	add	r7, pc
   205b0:	add	r0, pc
   205b2:	str	r3, [sp, #0]
   205b4:	mov	r2, r5
   205b6:	movw	r3, #2108	; 0x83c
   205ba:	mov	r1, r7
   205bc:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   205c0:	str.w	r8, [sp]
   205c4:	mov	r2, r4
   205c6:	ldr	r3, [r4, #32]
   205c8:	mov	r1, sl
   205ca:	mov	r0, r6
   205cc:	bl	1baf8 <btrfs_del_items@@Base>
   205d0:	ldr.w	r8, [pc, #524]	; 207e0 <hash_extent_data_ref@@Base+0xd08>
   205d4:	mov.w	r3, #2112	; 0x840
   205d8:	mov	r2, r5
   205da:	add	r8, pc
   205dc:	mov	r1, r7
   205de:	str	r0, [sp, #0]
   205e0:	mov	r0, r8
   205e2:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   205e6:	mov	r0, r4
   205e8:	bl	18558 <btrfs_release_path@@Base>
   205ec:	ldrd	r2, r3, [sp, #216]	; 0xd8
   205f0:	cmp	r3, #0
   205f2:	it	eq
   205f4:	cmpeq.w	r2, #256	; 0x100
   205f8:	bcc.n	2061c <hash_extent_data_ref@@Base+0xb44>
   205fa:	ldrd	r2, r3, [sp, #192]	; 0xc0
   205fe:	mov	r0, r6
   20600:	strd	r2, r3, [sp]
   20604:	ldrd	r2, r3, [sp, #56]	; 0x38
   20608:	bl	2ee70 <btrfs_del_csums@@Base>
   2060c:	movw	r3, #2117	; 0x845
   20610:	mov	r2, r5
   20612:	mov	r1, r7
   20614:	str	r0, [sp, #0]
   20616:	mov	r0, r8
   20618:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   2061c:	ldrd	r2, r3, [sp, #192]	; 0xc0
   20620:	mov	r0, r6
   20622:	strd	r2, r3, [sp]
   20626:	ldrd	r2, r3, [sp, #56]	; 0x38
   2062a:	bl	2d180 <add_to_free_space_tree@@Base>
   2062e:	mov	r5, r0
   20630:	cmp	r0, #0
   20632:	bne.w	20074 <hash_extent_data_ref@@Base+0x59c>
   20636:	ldrd	r2, r3, [sp, #192]	; 0xc0
   2063a:	strd	r0, r9, [sp, #8]
   2063e:	ldr	r0, [r6, #0]
   20640:	strd	r2, r3, [sp]
   20644:	ldrd	r2, r3, [sp, #56]	; 0x38
   20648:	bl	1f73c <btrfs_lookup_block_group@@Base+0x188>
   2064c:	b.n	20074 <hash_extent_data_ref@@Base+0x59c>
   2064e:	ldrb.w	r3, [sp, #128]	; 0x80
   20652:	cmp	r3, #178	; 0xb2
   20654:	bne.n	2066a <hash_extent_data_ref@@Base+0xb92>
   20656:	ldr	r3, [r4, #32]
   20658:	movs	r2, #25
   2065a:	mla	r3, r2, r3, r0
   2065e:	ldr.w	r5, [r3, #118]	; 0x76
   20662:	add	r0, r5
   20664:	ldr.w	r3, [r0, #125]	; 0x7d
   20668:	b.n	204da <hash_extent_data_ref@@Base+0xa02>
   2066a:	cmp	r3, #184	; 0xb8
   2066c:	bne.n	20682 <hash_extent_data_ref@@Base+0xbaa>
   2066e:	ldr	r3, [r4, #32]
   20670:	movs	r2, #25
   20672:	mla	r3, r2, r3, r0
   20676:	ldr.w	r5, [r3, #118]	; 0x76
   2067a:	add	r0, r5
   2067c:	ldr.w	r3, [r0, #101]	; 0x65
   20680:	b.n	204da <hash_extent_data_ref@@Base+0xa02>
   20682:	ldr	r2, [sp, #88]	; 0x58
   20684:	movs	r3, #1
   20686:	ldr	r0, [pc, #348]	; (207e4 <hash_extent_data_ref@@Base+0xd0c>)
   20688:	mov	r1, r9
   2068a:	str	r3, [sp, #0]
   2068c:	adds	r2, #221	; 0xdd
   2068e:	add	r0, pc
   20690:	movw	r3, #777	; 0x309
   20694:	bl	1eff4 <btrfs_create_tree@@Base+0x578>
   20698:	movs	r3, #0
   2069a:	b.n	204e0 <hash_extent_data_ref@@Base+0xa08>
   2069c:	adds	r0, r7, #1
   2069e:	mov.w	r8, #2
   206a2:	subs	r3, r0, r3
   206a4:	ldr	r0, [pc, #320]	; (207e8 <hash_extent_data_ref@@Base+0xd10>)
   206a6:	it	ne
   206a8:	movne	r3, #1
   206aa:	add	r0, pc
   206ac:	str	r3, [sp, #0]
   206ae:	movw	r3, #2098	; 0x832
   206b2:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   206b6:	str	r7, [r4, #32]
   206b8:	b.n	2051e <hash_extent_data_ref@@Base+0xa46>
   206ba:	mov.w	r8, #1
   206be:	b.n	2051e <hash_extent_data_ref@@Base+0xa46>
   206c0:	mov	r0, r5
   206c2:	bl	17320 <free_extent_buffer@@Base>
   206c6:	movs	r3, #1
   206c8:	str	r3, [sp, #8]
   206ca:	ldrd	r2, r3, [sp, #192]	; 0xc0
   206ce:	mov.w	r9, #0
   206d2:	ldr	r0, [r6, #0]
   206d4:	strd	r2, r3, [sp]
   206d8:	ldrd	r2, r3, [sp, #56]	; 0x38
   206dc:	bl	1f64c <btrfs_lookup_block_group@@Base+0x98>
   206e0:	b.n	205a2 <hash_extent_data_ref@@Base+0xaca>
   206e2:	mvn.w	r5, #11
   206e6:	b.n	2007a <hash_extent_data_ref@@Base+0x5a2>
   206e8:	mov	r0, r4
   206ea:	bl	18558 <btrfs_release_path@@Base>
   206ee:	movs	r3, #168	; 0xa8
   206f0:	strb.w	r3, [sp, #108]	; 0x6c
   206f4:	movs	r2, #1
   206f6:	ldr	r3, [sp, #192]	; 0xc0
   206f8:	mov	r1, sl
   206fa:	mov	r0, r6
   206fc:	str.w	r3, [sp, #109]	; 0x6d
   20700:	ldr	r3, [sp, #196]	; 0xc4
   20702:	str.w	r3, [sp, #113]	; 0x71
   20706:	mov.w	r3, #4294967295	; 0xffffffff
   2070a:	strd	r3, r2, [sp]
   2070e:	add	r2, sp, #100	; 0x64
   20710:	mov	r3, r4
   20712:	bl	1a93c <btrfs_search_slot@@Base>
   20716:	mov	r5, r0
   20718:	cmp	r5, #0
   2071a:	beq.w	2030e <hash_extent_data_ref@@Base+0x836>
   2071e:	ldr	r2, [sp, #72]	; 0x48
   20720:	movs	r1, #1
   20722:	ldr	r3, [pc, #68]	; (20768 <hash_extent_data_ref@@Base+0xc90>)
   20724:	ldr	r0, [r2, r3]
   20726:	ldrd	r2, r3, [sp, #56]	; 0x38
   2072a:	strd	r2, r3, [sp]
   2072e:	mov	r3, r5
   20730:	ldr	r2, [pc, #184]	; (207ec <hash_extent_data_ref@@Base+0xd14>)
   20732:	ldr	r0, [r0, #0]
   20734:	add	r2, pc
   20736:	blx	8a64 <__fprintf_chk@plt+0x4>
   2073a:	ldr	r0, [r4, #0]
   2073c:	bl	25720 <btrfs_print_leaf@@Base>
   20740:	b.n	20310 <hash_extent_data_ref@@Base+0x838>
   20742:	mov	r0, r5
   20744:	add	sp, #148	; 0x94
   20746:	vpop	{d8}
   2074a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2074e:	nop
   20750:	ldr	r6, [pc, #648]	; (209dc <btrfs_inc_extent_ref@@Base+0x1ec>)
   20752:	movs	r4, r0
   20754:	ldr	r6, [pc, #632]	; (209d0 <btrfs_inc_extent_ref@@Base+0x1e0>)
   20756:	movs	r4, r0
   20758:	lsls	r0, r5, #8
   2075a:	movs	r0, r0
   2075c:	bgt.n	207c6 <hash_extent_data_ref@@Base+0xcee>
   2075e:	movs	r1, r0
   20760:	ble.n	20796 <hash_extent_data_ref@@Base+0xcbe>
   20762:	movs	r1, r0
   20764:	b.n	20e28 <btrfs_lookup_extent_info@@Base+0x19c>
   20766:	movs	r1, r0
   20768:	lsls	r0, r7, #8
   2076a:	movs	r0, r0
   2076c:	bgt.n	2076a <hash_extent_data_ref@@Base+0xc92>
   2076e:	movs	r1, r0
   20770:	ble.n	207fc <btrfs_inc_extent_ref@@Base+0xc>
   20772:	movs	r1, r0
   20774:	ldr	r4, [pc, #1016]	; (20b70 <btrfs_inc_extent_ref@@Base+0x380>)
   20776:	movs	r4, r0
   20778:	b.n	20980 <btrfs_inc_extent_ref@@Base+0x190>
   2077a:	movs	r1, r0
   2077c:	bls.n	2071a <hash_extent_data_ref@@Base+0xc42>
   2077e:	movs	r1, r0
   20780:	cbz	r3, 207d0 <hash_extent_data_ref@@Base+0xcf8>
   20782:	movs	r1, r0
   20784:	add	r2, pc, #896	; (adr r2, 20b08 <btrfs_inc_extent_ref@@Base+0x318>)
   20786:	movs	r1, r0
   20788:	svc	170	; 0xaa
   2078a:	movs	r1, r0
   2078c:	bhi.n	2087a <btrfs_inc_extent_ref@@Base+0x8a>
   2078e:	movs	r1, r0
   20790:	add	r1, pc, #744	; (adr r1, 20a7c <btrfs_inc_extent_ref@@Base+0x28c>)
   20792:	movs	r1, r0
   20794:	bge.n	20888 <btrfs_inc_extent_ref@@Base+0x98>
   20796:	movs	r1, r0
   20798:	bhi.n	207ae <hash_extent_data_ref@@Base+0xcd6>
   2079a:	movs	r1, r0
   2079c:	svc	42	; 0x2a
   2079e:	movs	r1, r0
   207a0:	bge.n	20886 <btrfs_inc_extent_ref@@Base+0x96>
   207a2:	movs	r1, r0
   207a4:	bge.n	2088a <btrfs_inc_extent_ref@@Base+0x9a>
   207a6:	movs	r1, r0
   207a8:	bvc.n	20716 <hash_extent_data_ref@@Base+0xc3e>
   207aa:	movs	r1, r0
   207ac:	bhi.n	2071e <hash_extent_data_ref@@Base+0xc46>
   207ae:	movs	r1, r0
   207b0:	udf	#210	; 0xd2
   207b2:	movs	r1, r0
   207b4:	bge.n	20814 <btrfs_inc_extent_ref@@Base+0x24>
   207b6:	movs	r1, r0
   207b8:	udf	#94	; 0x5e
   207ba:	movs	r1, r0
   207bc:	bvc.n	20812 <btrfs_inc_extent_ref@@Base+0x22>
   207be:	movs	r1, r0
   207c0:	add	r0, pc, #416	; (adr r0, 20964 <btrfs_inc_extent_ref@@Base+0x174>)
   207c2:	movs	r1, r0
   207c4:	ble.n	20798 <hash_extent_data_ref@@Base+0xcc0>
   207c6:	movs	r1, r0
   207c8:	bvs.n	20732 <hash_extent_data_ref@@Base+0xc5a>
   207ca:	movs	r1, r0
   207cc:	bls.n	206fc <hash_extent_data_ref@@Base+0xc24>
   207ce:	movs	r1, r0
   207d0:	bls.n	20726 <hash_extent_data_ref@@Base+0xc4e>
   207d2:	movs	r1, r0
   207d4:	ble.n	20824 <btrfs_inc_extent_ref@@Base+0x34>
   207d6:	movs	r1, r0
   207d8:	bpl.n	207ba <hash_extent_data_ref@@Base+0xce2>
   207da:	movs	r1, r0
   207dc:	bls.n	2087e <btrfs_inc_extent_ref@@Base+0x8e>
   207de:	movs	r1, r0
   207e0:	ldr	r7, [sp, #40]	; 0x28
   207e2:	movs	r1, r0
   207e4:	bhi.n	208c6 <btrfs_inc_extent_ref@@Base+0xd6>
   207e6:	movs	r1, r0
   207e8:	bhi.n	20852 <btrfs_inc_extent_ref@@Base+0x62>
   207ea:	movs	r1, r0
   207ec:	bpl.n	207ce <hash_extent_data_ref@@Base+0xcf6>
   207ee:	movs	r1, r0

000207f0 <btrfs_inc_extent_ref@@Base>:
   207f0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   207f4:	sub	sp, #100	; 0x64
   207f6:	mov	r6, r0
   207f8:	mov	r7, r1
   207fa:	strd	r2, r3, [sp, #56]	; 0x38
   207fe:	ldr.w	r2, [pc, #1104]	; 20c50 <btrfs_inc_extent_ref@@Base+0x460>
   20802:	ldr.w	r3, [pc, #1104]	; 20c54 <btrfs_inc_extent_ref@@Base+0x464>
   20806:	add	r2, pc
   20808:	ldrd	sl, fp, [sp, #144]	; 0x90
   2080c:	ldr	r3, [r2, r3]
   2080e:	ldr	r3, [r3, #0]
   20810:	str	r3, [sp, #92]	; 0x5c
   20812:	mov.w	r3, #0
   20816:	bl	18550 <btrfs_alloc_path@@Base>
   2081a:	mov	r5, r0
   2081c:	cmp	r0, #0
   2081e:	beq.w	20c42 <btrfs_inc_extent_ref@@Base+0x452>
   20822:	mov.w	r8, #1
   20826:	strb.w	r8, [r0, #64]	; 0x40
   2082a:	ldr.w	r3, [r7, #464]	; 0x1d0
   2082e:	ldr.w	r9, [r3, #24]
   20832:	ldrd	r3, r4, [sp, #168]	; 0xa8
   20836:	str.w	r8, [sp, #48]	; 0x30
   2083a:	mov	r1, r9
   2083c:	strd	sl, fp, [sp, #16]
   20840:	strd	r3, r4, [sp, #40]	; 0x28
   20844:	ldrd	r3, r4, [sp, #160]	; 0xa0
   20848:	strd	r3, r4, [sp, #32]
   2084c:	ldrd	r3, r4, [sp, #152]	; 0x98
   20850:	strd	r3, r4, [sp, #24]
   20854:	ldrd	r2, r3, [sp, #136]	; 0x88
   20858:	strd	r2, r3, [sp, #8]
   2085c:	mov	r2, r0
   2085e:	ldr	r3, [sp, #56]	; 0x38
   20860:	mov	r0, r6
   20862:	str	r3, [sp, #0]
   20864:	ldr	r3, [sp, #60]	; 0x3c
   20866:	str	r3, [sp, #4]
   20868:	add	r3, sp, #72	; 0x48
   2086a:	bl	1fb50 <hash_extent_data_ref@@Base+0x78>
   2086e:	mov	r4, r0
   20870:	cmp	r0, #0
   20872:	bne.w	209b0 <btrfs_inc_extent_ref@@Base+0x1c0>
   20876:	ldrd	r3, r4, [sp, #160]	; 0xa0
   2087a:	ldr	r2, [pc, #988]	; (20c58 <btrfs_inc_extent_ref@@Base+0x468>)
   2087c:	cmp	r4, #0
   2087e:	ldr	r1, [pc, #988]	; (20c5c <btrfs_inc_extent_ref@@Base+0x46c>)
   20880:	it	eq
   20882:	cmpeq.w	r3, #256	; 0x100
   20886:	ldr	r0, [pc, #984]	; (20c60 <btrfs_inc_extent_ref@@Base+0x470>)
   20888:	add	r2, pc
   2088a:	add	r1, pc
   2088c:	ite	cc
   2088e:	movcc	r3, r8
   20890:	movcs	r3, #0
   20892:	adds	r2, #243	; 0xf3
   20894:	add	r0, pc
   20896:	str	r3, [sp, #0]
   20898:	mov.w	r3, #1184	; 0x4a0
   2089c:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   208a0:	ldr	r2, [sp, #72]	; 0x48
   208a2:	mov	r3, r8
   208a4:	mov	r1, r5
   208a6:	mov	r0, r9
   208a8:	bl	1f084 <btrfs_create_tree@@Base+0x608>
   208ac:	mov	r4, r0
   208ae:	cmp	r0, #0
   208b0:	beq.w	20a96 <btrfs_inc_extent_ref@@Base+0x2a6>
   208b4:	cmn.w	r4, #11
   208b8:	bne.w	20a96 <btrfs_inc_extent_ref@@Base+0x2a6>
   208bc:	ldr	r0, [r5, #0]
   208be:	movs	r2, #25
   208c0:	ldr	r3, [r5, #32]
   208c2:	add.w	r4, r0, #96	; 0x60
   208c6:	mla	r3, r2, r3, r4
   208ca:	ldr.w	r2, [r3, #118]	; 0x76
   208ce:	adds	r2, #101	; 0x65
   208d0:	add.w	ip, r4, r2
   208d4:	ldr	r3, [r4, r2]
   208d6:	ldr.w	r1, [ip, #4]
   208da:	adds	r3, #1
   208dc:	str	r3, [r4, r2]
   208de:	adc.w	r1, r1, #0
   208e2:	str.w	r1, [ip, #4]
   208e6:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   208ea:	mov	r0, r5
   208ec:	bl	18558 <btrfs_release_path@@Base>
   208f0:	movs	r3, #1
   208f2:	strb.w	r3, [r5, #64]	; 0x40
   208f6:	ldr.w	r3, [r7, #464]	; 0x1d0
   208fa:	ldr	r7, [r3, #24]
   208fc:	ldrd	r3, r4, [sp, #160]	; 0xa0
   20900:	cmp	r4, #0
   20902:	add.w	r4, sp, #81	; 0x51
   20906:	it	eq
   20908:	cmpeq.w	r3, #256	; 0x100
   2090c:	bcc.w	20bdc <btrfs_inc_extent_ref@@Base+0x3ec>
   20910:	ldr	r3, [sp, #56]	; 0x38
   20912:	str	r3, [sp, #72]	; 0x48
   20914:	ldr	r3, [sp, #60]	; 0x3c
   20916:	str	r3, [sp, #76]	; 0x4c
   20918:	orrs.w	r3, sl, fp
   2091c:	beq.w	20b06 <btrfs_inc_extent_ref@@Base+0x316>
   20920:	mov.w	r8, #4
   20924:	movs	r3, #184	; 0xb8
   20926:	str.w	sl, [sp, #81]	; 0x51
   2092a:	strb.w	r3, [sp, #80]	; 0x50
   2092e:	str.w	fp, [r4, #4]
   20932:	movs	r3, #1
   20934:	mov	r2, r5
   20936:	str	r3, [sp, #4]
   20938:	mov	r1, r7
   2093a:	add	r3, sp, #68	; 0x44
   2093c:	mov	r0, r6
   2093e:	str	r3, [sp, #0]
   20940:	add	r3, sp, #72	; 0x48
   20942:	str.w	r8, [sp, #68]	; 0x44
   20946:	bl	1b70c <btrfs_insert_empty_items@@Base>
   2094a:	mov	r4, r0
   2094c:	cbz	r0, 20956 <btrfs_inc_extent_ref@@Base+0x166>
   2094e:	cmn.w	r0, #17
   20952:	bne.w	20b52 <btrfs_inc_extent_ref@@Base+0x362>
   20956:	orrs.w	r3, sl, fp
   2095a:	ldr	r0, [r5, #0]
   2095c:	bne.w	20b2c <btrfs_inc_extent_ref@@Base+0x33c>
   20960:	add.w	r9, sp, #72	; 0x48
   20964:	mov.w	sl, #1
   20968:	ldr	r3, [r5, #32]
   2096a:	add.w	r1, r0, #96	; 0x60
   2096e:	movs	r2, #25
   20970:	cmn.w	r4, #17
   20974:	mla	r3, r2, r3, r1
   20978:	ldr.w	r3, [r3, #118]	; 0x76
   2097c:	add.w	r3, r3, #101	; 0x65
   20980:	add	r1, r3
   20982:	beq.w	20b62 <btrfs_inc_extent_ref@@Base+0x372>
   20986:	cmp	r4, #0
   20988:	bne.w	20bd4 <btrfs_inc_extent_ref@@Base+0x3e4>
   2098c:	ldr	r3, [sp, #152]	; 0x98
   2098e:	strb	r4, [r1, #25]
   20990:	strb	r4, [r1, #26]
   20992:	str	r3, [r1, #0]
   20994:	ldr	r3, [sp, #156]	; 0x9c
   20996:	strb	r4, [r1, #27]
   20998:	str	r3, [r1, #4]
   2099a:	ldr	r3, [sp, #160]	; 0xa0
   2099c:	str	r3, [r1, #8]
   2099e:	ldr	r3, [sp, #164]	; 0xa4
   209a0:	str	r3, [r1, #12]
   209a2:	ldr	r3, [sp, #168]	; 0xa8
   209a4:	str	r3, [r1, #16]
   209a6:	ldr	r3, [sp, #172]	; 0xac
   209a8:	str	r3, [r1, #20]
   209aa:	movs	r3, #1
   209ac:	strb	r3, [r1, #24]
   209ae:	b.n	20b4c <btrfs_inc_extent_ref@@Base+0x35c>
   209b0:	adds	r1, r0, #2
   209b2:	bne.w	208b4 <btrfs_inc_extent_ref@@Base+0xc4>
   209b6:	ldr.w	r8, [r5]
   209ba:	movs	r2, #25
   209bc:	ldr	r3, [r5, #32]
   209be:	add.w	r6, r8, #96	; 0x60
   209c2:	ldr	r4, [sp, #72]	; 0x48
   209c4:	mla	r3, r2, r3, r6
   209c8:	subs	r4, #101	; 0x65
   209ca:	ldr.w	r2, [r3, #118]	; 0x76
   209ce:	subs	r4, r4, r2
   209d0:	ldrd	r2, r3, [sp, #160]	; 0xa0
   209d4:	cmp	r3, #0
   209d6:	it	eq
   209d8:	cmpeq.w	r2, #256	; 0x100
   209dc:	bcs.n	20acc <btrfs_inc_extent_ref@@Base+0x2dc>
   209de:	orrs.w	r3, sl, fp
   209e2:	ite	ne
   209e4:	movne	r7, #182	; 0xb6
   209e6:	moveq	r7, #176	; 0xb0
   209e8:	mov	r0, r7
   209ea:	bl	1f03c <btrfs_create_tree@@Base+0x5c0>
   209ee:	mov	r1, r5
   209f0:	mov	r2, r0
   209f2:	str	r0, [sp, #56]	; 0x38
   209f4:	mov	r0, r9
   209f6:	bl	1a730 <btrfs_extend_item@@Base>
   209fa:	ldr	r2, [pc, #616]	; (20c64 <btrfs_inc_extent_ref@@Base+0x474>)
   209fc:	ldr	r1, [pc, #616]	; (20c68 <btrfs_inc_extent_ref@@Base+0x478>)
   209fe:	movw	r3, #1044	; 0x414
   20a02:	add	r2, pc
   20a04:	add.w	r2, r2, #272	; 0x110
   20a08:	add	r1, pc
   20a0a:	str	r0, [sp, #0]
   20a0c:	ldr	r0, [pc, #604]	; (20c6c <btrfs_inc_extent_ref@@Base+0x47c>)
   20a0e:	add	r0, pc
   20a10:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   20a14:	ldr	r3, [r5, #32]
   20a16:	movs	r0, #25
   20a18:	mla	r3, r0, r3, r6
   20a1c:	ldr.w	r3, [r3, #118]	; 0x76
   20a20:	adds	r3, #101	; 0x65
   20a22:	add.w	ip, r6, r3
   20a26:	add	r4, r3
   20a28:	ldr	r2, [r6, r3]
   20a2a:	ldr.w	r1, [ip, #4]
   20a2e:	adds	r2, #1
   20a30:	str	r2, [r6, r3]
   20a32:	adc.w	r1, r1, #0
   20a36:	str.w	r1, [ip, #4]
   20a3a:	ldr	r2, [r5, #32]
   20a3c:	mla	r0, r0, r2, r6
   20a40:	ldr.w	r2, [r0, #122]	; 0x7a
   20a44:	add	r3, r2
   20a46:	ldr	r2, [sp, #56]	; 0x38
   20a48:	subs	r3, r3, r2
   20a4a:	cmp	r4, r3
   20a4c:	bcs.n	20a5c <btrfs_inc_extent_ref@@Base+0x26c>
   20a4e:	ldr	r1, [sp, #56]	; 0x38
   20a50:	subs	r3, r3, r4
   20a52:	mov	r2, r4
   20a54:	mov	r0, r8
   20a56:	add	r1, r4
   20a58:	bl	17a8c <memmove_extent_buffer@@Base>
   20a5c:	cmp	r7, #178	; 0xb2
   20a5e:	add.w	r3, r6, r4
   20a62:	strb	r7, [r6, r4]
   20a64:	bne.n	20ad8 <btrfs_inc_extent_ref@@Base+0x2e8>
   20a66:	ldr	r2, [sp, #152]	; 0x98
   20a68:	adds	r4, #1
   20a6a:	adds	r3, r6, r4
   20a6c:	movs	r1, #1
   20a6e:	str	r2, [r6, r4]
   20a70:	ldr	r2, [sp, #156]	; 0x9c
   20a72:	strb	r1, [r3, #24]
   20a74:	str	r2, [r3, #4]
   20a76:	ldr	r2, [sp, #160]	; 0xa0
   20a78:	str	r2, [r3, #8]
   20a7a:	ldr	r2, [sp, #164]	; 0xa4
   20a7c:	str	r2, [r3, #12]
   20a7e:	ldr	r2, [sp, #168]	; 0xa8
   20a80:	str	r2, [r3, #16]
   20a82:	ldr	r2, [sp, #172]	; 0xac
   20a84:	str	r2, [r3, #20]
   20a86:	movs	r2, #0
   20a88:	strb	r2, [r3, #25]
   20a8a:	strb	r2, [r3, #26]
   20a8c:	strb	r2, [r3, #27]
   20a8e:	mov	r0, r8
   20a90:	movs	r4, #0
   20a92:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   20a96:	mov	r0, r5
   20a98:	bl	1857e <btrfs_free_path@@Base>
   20a9c:	ldr	r2, [pc, #464]	; (20c70 <btrfs_inc_extent_ref@@Base+0x480>)
   20a9e:	ldr	r1, [pc, #468]	; (20c74 <btrfs_inc_extent_ref@@Base+0x484>)
   20aa0:	movw	r3, #1282	; 0x502
   20aa4:	ldr	r0, [pc, #464]	; (20c78 <btrfs_inc_extent_ref@@Base+0x488>)
   20aa6:	add	r2, pc
   20aa8:	add.w	r2, r2, #322	; 0x142
   20aac:	add	r1, pc
   20aae:	add	r0, pc
   20ab0:	str	r4, [sp, #0]
   20ab2:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   20ab6:	ldr	r2, [pc, #452]	; (20c7c <btrfs_inc_extent_ref@@Base+0x48c>)
   20ab8:	ldr	r3, [pc, #408]	; (20c54 <btrfs_inc_extent_ref@@Base+0x464>)
   20aba:	add	r2, pc
   20abc:	ldr	r3, [r2, r3]
   20abe:	ldr	r2, [r3, #0]
   20ac0:	ldr	r3, [sp, #92]	; 0x5c
   20ac2:	eors	r2, r3
   20ac4:	beq.w	20c48 <btrfs_inc_extent_ref@@Base+0x458>
   20ac8:	blx	8708 <__stack_chk_fail@plt>
   20acc:	orrs.w	r3, sl, fp
   20ad0:	ite	ne
   20ad2:	movne	r7, #184	; 0xb8
   20ad4:	moveq	r7, #178	; 0xb2
   20ad6:	b.n	209e8 <btrfs_inc_extent_ref@@Base+0x1f8>
   20ad8:	cmp	r7, #184	; 0xb8
   20ada:	add.w	r2, r3, #1
   20ade:	bne.n	20af6 <btrfs_inc_extent_ref@@Base+0x306>
   20ae0:	movs	r1, #0
   20ae2:	movs	r0, #1
   20ae4:	strb	r1, [r3, #10]
   20ae6:	strb	r0, [r3, #9]
   20ae8:	strb	r1, [r3, #11]
   20aea:	strb	r1, [r3, #12]
   20aec:	str.w	sl, [r3, #1]
   20af0:	str.w	fp, [r2, #4]
   20af4:	b.n	20a8e <btrfs_inc_extent_ref@@Base+0x29e>
   20af6:	cmp	r7, #182	; 0xb6
   20af8:	beq.n	20aec <btrfs_inc_extent_ref@@Base+0x2fc>
   20afa:	ldr	r1, [sp, #152]	; 0x98
   20afc:	str.w	r1, [r3, #1]
   20b00:	ldr	r3, [sp, #156]	; 0x9c
   20b02:	str	r3, [r2, #4]
   20b04:	b.n	20a8e <btrfs_inc_extent_ref@@Base+0x29e>
   20b06:	movs	r3, #178	; 0xb2
   20b08:	strb.w	r3, [sp, #80]	; 0x50
   20b0c:	ldrd	r2, r3, [sp, #168]	; 0xa8
   20b10:	mov.w	r8, #28
   20b14:	ldrd	r0, r1, [sp, #152]	; 0x98
   20b18:	strd	r2, r3, [sp]
   20b1c:	ldrd	r2, r3, [sp, #160]	; 0xa0
   20b20:	bl	1fad8 <hash_extent_data_ref@@Base>
   20b24:	str.w	r0, [sp, #81]	; 0x51
   20b28:	str	r1, [r4, #4]
   20b2a:	b.n	20932 <btrfs_inc_extent_ref@@Base+0x142>
   20b2c:	ldr	r3, [r5, #32]
   20b2e:	add.w	r2, r0, #96	; 0x60
   20b32:	movs	r1, #25
   20b34:	mla	r3, r1, r3, r2
   20b38:	ldr.w	r3, [r3, #118]	; 0x76
   20b3c:	adds	r3, #101	; 0x65
   20b3e:	adds	r1, r2, r3
   20b40:	cbnz	r4, 20b5a <btrfs_inc_extent_ref@@Base+0x36a>
   20b42:	movs	r6, #1
   20b44:	strb	r6, [r2, r3]
   20b46:	strb	r4, [r1, #1]
   20b48:	strb	r4, [r1, #2]
   20b4a:	strb	r4, [r1, #3]
   20b4c:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   20b50:	movs	r4, #0
   20b52:	mov	r0, r5
   20b54:	bl	18558 <btrfs_release_path@@Base>
   20b58:	b.n	20a96 <btrfs_inc_extent_ref@@Base+0x2a6>
   20b5a:	ldr	r1, [r1, #0]
   20b5c:	adds	r1, #1
   20b5e:	str	r1, [r2, r3]
   20b60:	b.n	20b4c <btrfs_inc_extent_ref@@Base+0x35c>
   20b62:	ldrd	fp, ip, [sp, #152]	; 0x98
   20b66:	ldr	r3, [r1, #4]
   20b68:	ldr	r2, [r1, #0]
   20b6a:	cmp	ip, r3
   20b6c:	it	eq
   20b6e:	cmpeq	fp, r2
   20b70:	bne.n	20b92 <btrfs_inc_extent_ref@@Base+0x3a2>
   20b72:	ldrd	fp, ip, [sp, #160]	; 0xa0
   20b76:	ldr	r3, [r1, #12]
   20b78:	ldr	r2, [r1, #8]
   20b7a:	cmp	ip, r3
   20b7c:	it	eq
   20b7e:	cmpeq	fp, r2
   20b80:	bne.n	20b92 <btrfs_inc_extent_ref@@Base+0x3a2>
   20b82:	ldrd	fp, ip, [sp, #168]	; 0xa8
   20b86:	ldr	r3, [r1, #20]
   20b88:	ldr	r2, [r1, #16]
   20b8a:	cmp	ip, r3
   20b8c:	it	eq
   20b8e:	cmpeq	fp, r2
   20b90:	beq.n	20bd4 <btrfs_inc_extent_ref@@Base+0x3e4>
   20b92:	mov	r0, r5
   20b94:	bl	18558 <btrfs_release_path@@Base>
   20b98:	ldr.w	r3, [sp, #81]	; 0x51
   20b9c:	ldr.w	r2, [sp, #85]	; 0x55
   20ba0:	mov	r1, r7
   20ba2:	adds	r3, #1
   20ba4:	mov	r0, r6
   20ba6:	adc.w	r2, r2, #0
   20baa:	str.w	r3, [sp, #81]	; 0x51
   20bae:	str.w	r2, [sp, #85]	; 0x55
   20bb2:	add	r3, sp, #68	; 0x44
   20bb4:	mov	r2, r5
   20bb6:	str	r3, [sp, #0]
   20bb8:	str.w	sl, [sp, #4]
   20bbc:	mov	r3, r9
   20bbe:	str.w	r8, [sp, #68]	; 0x44
   20bc2:	bl	1b70c <btrfs_insert_empty_items@@Base>
   20bc6:	mov	r4, r0
   20bc8:	cbz	r0, 20bd0 <btrfs_inc_extent_ref@@Base+0x3e0>
   20bca:	cmn.w	r0, #17
   20bce:	bne.n	20b52 <btrfs_inc_extent_ref@@Base+0x362>
   20bd0:	ldr	r0, [r5, #0]
   20bd2:	b.n	20968 <btrfs_inc_extent_ref@@Base+0x178>
   20bd4:	ldr	r3, [r1, #24]
   20bd6:	adds	r3, #1
   20bd8:	str	r3, [r1, #24]
   20bda:	b.n	20b4c <btrfs_inc_extent_ref@@Base+0x35c>
   20bdc:	ldr	r2, [pc, #160]	; (20c80 <btrfs_inc_extent_ref@@Base+0x490>)
   20bde:	movs	r3, #0
   20be0:	ldr	r1, [pc, #160]	; (20c84 <btrfs_inc_extent_ref@@Base+0x494>)
   20be2:	ldr	r0, [pc, #164]	; (20c88 <btrfs_inc_extent_ref@@Base+0x498>)
   20be4:	add	r2, pc
   20be6:	str	r3, [sp, #0]
   20be8:	add.w	r2, r2, #300	; 0x12c
   20bec:	mov.w	r3, #1208	; 0x4b8
   20bf0:	add	r1, pc
   20bf2:	add	r0, pc
   20bf4:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   20bf8:	ldr	r3, [sp, #56]	; 0x38
   20bfa:	str	r3, [sp, #72]	; 0x48
   20bfc:	ldr	r3, [sp, #60]	; 0x3c
   20bfe:	str	r3, [sp, #76]	; 0x4c
   20c00:	orrs.w	r3, sl, fp
   20c04:	beq.n	20c30 <btrfs_inc_extent_ref@@Base+0x440>
   20c06:	movs	r3, #182	; 0xb6
   20c08:	str.w	sl, [sp, #81]	; 0x51
   20c0c:	strb.w	r3, [sp, #80]	; 0x50
   20c10:	str.w	fp, [r4, #4]
   20c14:	movs	r3, #0
   20c16:	mov	r2, r5
   20c18:	str	r3, [sp, #68]	; 0x44
   20c1a:	mov	r1, r7
   20c1c:	movs	r3, #1
   20c1e:	mov	r0, r6
   20c20:	str	r3, [sp, #4]
   20c22:	add	r3, sp, #68	; 0x44
   20c24:	str	r3, [sp, #0]
   20c26:	add	r3, sp, #72	; 0x48
   20c28:	bl	1b70c <btrfs_insert_empty_items@@Base>
   20c2c:	mov	r4, r0
   20c2e:	b.n	20b52 <btrfs_inc_extent_ref@@Base+0x362>
   20c30:	movs	r3, #176	; 0xb0
   20c32:	strb.w	r3, [sp, #80]	; 0x50
   20c36:	ldr	r3, [sp, #152]	; 0x98
   20c38:	str.w	r3, [sp, #81]	; 0x51
   20c3c:	ldr	r3, [sp, #156]	; 0x9c
   20c3e:	str	r3, [r4, #4]
   20c40:	b.n	20c14 <btrfs_inc_extent_ref@@Base+0x424>
   20c42:	mvn.w	r4, #11
   20c46:	b.n	20ab6 <btrfs_inc_extent_ref@@Base+0x2c6>
   20c48:	mov	r0, r4
   20c4a:	add	sp, #100	; 0x64
   20c4c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20c50:	cmp	r2, pc
   20c52:	movs	r4, r0
   20c54:	lsls	r0, r5, #8
   20c56:	movs	r0, r0
   20c58:	bge.n	20ce8 <btrfs_lookup_extent_info@@Base+0x5c>
   20c5a:	movs	r1, r0
   20c5c:	bcc.n	20c86 <btrfs_inc_extent_ref@@Base+0x496>
   20c5e:	movs	r1, r0
   20c60:	bvs.n	20d4a <btrfs_lookup_extent_info@@Base+0xbe>
   20c62:	movs	r1, r0
   20c64:	bhi.n	20c00 <btrfs_inc_extent_ref@@Base+0x410>
   20c66:	movs	r1, r0
   20c68:	bne.n	20b96 <btrfs_inc_extent_ref@@Base+0x3a6>
   20c6a:	movs	r1, r0
   20c6c:	ldr	r2, [sp, #856]	; 0x358
   20c6e:	movs	r1, r0
   20c70:	bhi.n	20cc4 <btrfs_lookup_extent_info@@Base+0x38>
   20c72:	movs	r1, r0
   20c74:	beq.n	20c5a <btrfs_inc_extent_ref@@Base+0x46a>
   20c76:	movs	r1, r0
   20c78:	bmi.n	20b94 <btrfs_inc_extent_ref@@Base+0x3a4>
   20c7a:	movs	r1, r0
   20c7c:	cmn	r6, r0
   20c7e:	movs	r4, r0
   20c80:	bvs.n	20c58 <btrfs_inc_extent_ref@@Base+0x468>
   20c82:	movs	r1, r0
   20c84:	ldmia	r7, {r0, r2, r3, r5, r7}
   20c86:	movs	r1, r0
   20c88:	bcc.n	20cfa <btrfs_lookup_extent_info@@Base+0x6e>
   20c8a:	movs	r1, r0

00020c8c <btrfs_lookup_extent_info@@Base>:
   20c8c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20c90:	mov	r5, r1
   20c92:	vpush	{d8}
   20c96:	vmov	s16, r0
   20c9a:	sub	sp, #44	; 0x2c
   20c9c:	strd	r2, r3, [sp, #8]
   20ca0:	ldr	r2, [pc, #384]	; (20e24 <btrfs_lookup_extent_info@@Base+0x198>)
   20ca2:	ldr	r3, [pc, #388]	; (20e28 <btrfs_lookup_extent_info@@Base+0x19c>)
   20ca4:	add	r2, pc
   20ca6:	ldrd	fp, r7, [sp, #96]	; 0x60
   20caa:	ldrd	sl, r8, [sp, #88]	; 0x58
   20cae:	ldr	r3, [r2, r3]
   20cb0:	ldr	r6, [sp, #104]	; 0x68
   20cb2:	ldr	r3, [r3, #0]
   20cb4:	str	r3, [sp, #36]	; 0x24
   20cb6:	mov.w	r3, #0
   20cba:	cmp.w	fp, #0
   20cbe:	beq.n	20cdc <btrfs_lookup_extent_info@@Base+0x50>
   20cc0:	ldr.w	r3, [r1, #308]	; 0x134
   20cc4:	movs	r1, #0
   20cc6:	ldr.w	r0, [r3, #188]	; 0xbc
   20cca:	mov	r3, r1
   20ccc:	and.w	r2, r0, #256	; 0x100
   20cd0:	orrs	r3, r2
   20cd2:	ittt	eq
   20cd4:	ldreq.w	sl, [r5, #384]	; 0x180
   20cd8:	moveq	r8, r1
   20cda:	moveq	fp, r8
   20cdc:	bl	18550 <btrfs_alloc_path@@Base>
   20ce0:	mov	r4, r0
   20ce2:	cmp	r0, #0
   20ce4:	beq.w	20e10 <btrfs_lookup_extent_info@@Base+0x184>
   20ce8:	movs	r3, #1
   20cea:	strb.w	r3, [r0, #64]	; 0x40
   20cee:	ldrd	r2, r3, [sp, #8]
   20cf2:	cmp.w	fp, #0
   20cf6:	str.w	sl, [sp, #25]
   20cfa:	add.w	r9, sp, #25
   20cfe:	add.w	sl, sp, #16
   20d02:	str.w	r8, [sp, #29]
   20d06:	mov.w	r8, #0
   20d0a:	strd	r2, r3, [sp, #16]
   20d0e:	ite	eq
   20d10:	moveq	r3, #168	; 0xa8
   20d12:	movne	r3, #169	; 0xa9
   20d14:	strb.w	r3, [sp, #24]
   20d18:	mov	r3, r4
   20d1a:	vmov	r0, s16
   20d1e:	ldr	r1, [r5, #24]
   20d20:	mov	r2, sl
   20d22:	strd	r8, r8, [sp]
   20d26:	bl	1a93c <btrfs_search_slot@@Base>
   20d2a:	subs	r3, r0, #0
   20d2c:	blt.n	20dc2 <btrfs_lookup_extent_info@@Base+0x136>
   20d2e:	beq.n	20d94 <btrfs_lookup_extent_info@@Base+0x108>
   20d30:	cmp.w	fp, #0
   20d34:	beq.n	20e06 <btrfs_lookup_extent_info@@Base+0x17a>
   20d36:	ldr	r2, [r4, #32]
   20d38:	cbnz	r2, 20d5a <btrfs_lookup_extent_info@@Base+0xce>
   20d3a:	mov	r0, r4
   20d3c:	mov.w	fp, #0
   20d40:	bl	18558 <btrfs_release_path@@Base>
   20d44:	mvn.w	r3, #87	; 0x57
   20d48:	strb.w	r3, [sp, #24]
   20d4c:	ldr.w	r3, [r5, #384]	; 0x180
   20d50:	str.w	r8, [r9, #4]
   20d54:	str.w	r3, [r9]
   20d58:	b.n	20d18 <btrfs_lookup_extent_info@@Base+0x8c>
   20d5a:	subs	r2, #1
   20d5c:	ldr	r0, [r4, #0]
   20d5e:	mov	r1, sl
   20d60:	str	r2, [r4, #32]
   20d62:	bl	1ecd4 <btrfs_create_tree@@Base+0x258>
   20d66:	ldrd	r2, r3, [sp, #16]
   20d6a:	ldrd	r0, r1, [sp, #8]
   20d6e:	cmp	r3, r1
   20d70:	it	eq
   20d72:	cmpeq	r2, r0
   20d74:	bne.n	20d3a <btrfs_lookup_extent_info@@Base+0xae>
   20d76:	ldrb.w	r3, [sp, #24]
   20d7a:	cmp	r3, #168	; 0xa8
   20d7c:	bne.n	20d3a <btrfs_lookup_extent_info@@Base+0xae>
   20d7e:	ldr.w	r1, [sp, #29]
   20d82:	movs	r3, #0
   20d84:	ldr.w	r0, [sp, #25]
   20d88:	ldr.w	r2, [r5, #384]	; 0x180
   20d8c:	cmp	r1, r3
   20d8e:	it	eq
   20d90:	cmpeq	r0, r2
   20d92:	bne.n	20d3a <btrfs_lookup_extent_info@@Base+0xae>
   20d94:	ldr	r3, [r4, #0]
   20d96:	movs	r1, #25
   20d98:	ldr	r2, [r4, #32]
   20d9a:	adds	r3, #96	; 0x60
   20d9c:	mla	r2, r1, r2, r3
   20da0:	add.w	r1, r2, #101	; 0x65
   20da4:	ldr.w	r2, [r2, #122]	; 0x7a
   20da8:	cmp	r2, #23
   20daa:	bls.n	20de0 <btrfs_lookup_extent_info@@Base+0x154>
   20dac:	ldr.w	r2, [r1, #17]
   20db0:	adds	r2, #101	; 0x65
   20db2:	add	r3, r2
   20db4:	ldr	r1, [r3, #16]
   20db6:	ldr	r2, [r3, #20]
   20db8:	cbnz	r7, 20dfc <btrfs_lookup_extent_info@@Base+0x170>
   20dba:	cbz	r6, 20e0c <btrfs_lookup_extent_info@@Base+0x180>
   20dbc:	movs	r3, #0
   20dbe:	strd	r1, r2, [r6]
   20dc2:	mov	r0, r4
   20dc4:	str	r3, [sp, #8]
   20dc6:	bl	1857e <btrfs_free_path@@Base>
   20dca:	ldr	r3, [sp, #8]
   20dcc:	ldr	r1, [pc, #92]	; (20e2c <btrfs_lookup_extent_info@@Base+0x1a0>)
   20dce:	ldr	r2, [pc, #88]	; (20e28 <btrfs_lookup_extent_info@@Base+0x19c>)
   20dd0:	add	r1, pc
   20dd2:	ldr	r2, [r1, r2]
   20dd4:	ldr	r1, [r2, #0]
   20dd6:	ldr	r2, [sp, #36]	; 0x24
   20dd8:	eors	r1, r2
   20dda:	beq.n	20e16 <btrfs_lookup_extent_info@@Base+0x18a>
   20ddc:	blx	8708 <__stack_chk_fail@plt>
   20de0:	ldr	r2, [pc, #76]	; (20e30 <btrfs_lookup_extent_info@@Base+0x1a4>)
   20de2:	movs	r3, #1
   20de4:	ldr	r1, [pc, #76]	; (20e34 <btrfs_lookup_extent_info@@Base+0x1a8>)
   20de6:	ldr	r0, [pc, #80]	; (20e38 <btrfs_lookup_extent_info@@Base+0x1ac>)
   20de8:	add	r2, pc
   20dea:	str	r3, [sp, #0]
   20dec:	addw	r2, r2, #343	; 0x157
   20df0:	add	r1, pc
   20df2:	add	r0, pc
   20df4:	mov.w	r3, #1360	; 0x550
   20df8:	bl	1eff4 <btrfs_create_tree@@Base+0x578>
   20dfc:	ldr	r0, [r3, #0]
   20dfe:	ldr	r3, [r3, #4]
   20e00:	strd	r0, r3, [r7]
   20e04:	b.n	20dba <btrfs_lookup_extent_info@@Base+0x12e>
   20e06:	mvn.w	r3, #4
   20e0a:	b.n	20dc2 <btrfs_lookup_extent_info@@Base+0x136>
   20e0c:	mov	r3, r6
   20e0e:	b.n	20dc2 <btrfs_lookup_extent_info@@Base+0x136>
   20e10:	mvn.w	r3, #11
   20e14:	b.n	20dcc <btrfs_lookup_extent_info@@Base+0x140>
   20e16:	mov	r0, r3
   20e18:	add	sp, #44	; 0x2c
   20e1a:	vpop	{d8}
   20e1e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20e22:	nop
   20e24:	lsrs	r4, r3
   20e26:	movs	r4, r0
   20e28:	lsls	r0, r5, #8
   20e2a:	movs	r0, r0
   20e2c:	subs	r7, #176	; 0xb0
   20e2e:	movs	r4, r0
   20e30:	bmi.n	20e00 <btrfs_lookup_extent_info@@Base+0x174>
   20e32:	movs	r1, r0
   20e34:	ldmia	r5, {r0, r2, r3, r5, r7}
   20e36:	movs	r1, r0
   20e38:	bne.n	20e52 <btrfs_set_block_flags@@Base+0x16>
   20e3a:	movs	r1, r0

00020e3c <btrfs_set_block_flags@@Base>:
   20e3c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20e40:	sub	sp, #52	; 0x34
   20e42:	ldr	r4, [r0, #0]
   20e44:	mov	r5, r0
   20e46:	strd	r2, r3, [sp, #8]
   20e4a:	movs	r7, #0
   20e4c:	ldr	r3, [sp, #96]	; 0x60
   20e4e:	mov	r9, r7
   20e50:	ldr	r2, [pc, #420]	; (20ff8 <btrfs_set_block_flags@@Base+0x1bc>)
   20e52:	ldr	r6, [sp, #88]	; 0x58
   20e54:	str	r3, [sp, #16]
   20e56:	add	r2, pc
   20e58:	ldr	r3, [sp, #100]	; 0x64
   20e5a:	ldr.w	fp, [pc, #416]	; 20ffc <btrfs_set_block_flags@@Base+0x1c0>
   20e5e:	str	r3, [sp, #20]
   20e60:	add	fp, pc
   20e62:	ldr	r3, [pc, #412]	; (21000 <btrfs_set_block_flags@@Base+0x1c4>)
   20e64:	ldr	r3, [r2, r3]
   20e66:	ldr	r3, [r3, #0]
   20e68:	str	r3, [sp, #44]	; 0x2c
   20e6a:	mov.w	r3, #0
   20e6e:	ldr.w	r3, [r4, #308]	; 0x134
   20e72:	ldr.w	r3, [r3, #188]	; 0xbc
   20e76:	and.w	r8, r3, #256	; 0x100
   20e7a:	bl	18550 <btrfs_alloc_path@@Base>
   20e7e:	mov	sl, r0
   20e80:	cmp	r0, #0
   20e82:	beq.w	20fe8 <btrfs_set_block_flags@@Base+0x1ac>
   20e86:	ldrd	r1, r2, [sp, #8]
   20e8a:	movs	r3, #1
   20e8c:	strb.w	r3, [r0, #64]	; 0x40
   20e90:	strd	r1, r2, [sp, #24]
   20e94:	orrs.w	r2, r8, r9
   20e98:	add.w	r2, sp, #33	; 0x21
   20e9c:	beq.n	20ef6 <btrfs_set_block_flags@@Base+0xba>
   20e9e:	mov	r8, r3
   20ea0:	asrs	r1, r6, #31
   20ea2:	str.w	r6, [sp, #33]	; 0x21
   20ea6:	str	r1, [r2, #4]
   20ea8:	movs	r2, #169	; 0xa9
   20eaa:	strb.w	r2, [sp, #32]
   20eae:	add	r7, sp, #24
   20eb0:	movs	r6, #0
   20eb2:	strd	r6, r6, [sp]
   20eb6:	mov	r3, sl
   20eb8:	ldr	r1, [r4, #24]
   20eba:	mov	r2, r7
   20ebc:	mov	r0, r5
   20ebe:	bl	1a93c <btrfs_search_slot@@Base>
   20ec2:	subs.w	r9, r0, #0
   20ec6:	blt.n	20f72 <btrfs_set_block_flags@@Base+0x136>
   20ec8:	beq.n	20f48 <btrfs_set_block_flags@@Base+0x10c>
   20eca:	cmp.w	r8, #0
   20ece:	beq.n	20f8c <btrfs_set_block_flags@@Base+0x150>
   20ed0:	ldr.w	r2, [sl, #32]
   20ed4:	cbnz	r2, 20f0a <btrfs_set_block_flags@@Base+0xce>
   20ed6:	mov	r0, sl
   20ed8:	mov.w	r8, #0
   20edc:	bl	18558 <btrfs_release_path@@Base>
   20ee0:	ldr.w	r3, [r4, #384]	; 0x180
   20ee4:	str.w	r6, [sp, #37]	; 0x25
   20ee8:	str.w	r3, [sp, #33]	; 0x21
   20eec:	mvn.w	r3, #87	; 0x57
   20ef0:	strb.w	r3, [sp, #32]
   20ef4:	b.n	20eb2 <btrfs_set_block_flags@@Base+0x76>
   20ef6:	ldr.w	r3, [r4, #384]	; 0x180
   20efa:	mov	r8, r7
   20efc:	str	r7, [r2, #4]
   20efe:	str.w	r3, [sp, #33]	; 0x21
   20f02:	movs	r3, #168	; 0xa8
   20f04:	strb.w	r3, [sp, #32]
   20f08:	b.n	20eae <btrfs_set_block_flags@@Base+0x72>
   20f0a:	subs	r2, #1
   20f0c:	ldr.w	r0, [sl]
   20f10:	mov	r1, r7
   20f12:	str.w	r2, [sl, #32]
   20f16:	bl	1ecd4 <btrfs_create_tree@@Base+0x258>
   20f1a:	ldrd	r2, r3, [sp, #24]
   20f1e:	ldrd	r0, r1, [sp, #8]
   20f22:	cmp	r3, r1
   20f24:	it	eq
   20f26:	cmpeq	r2, r0
   20f28:	bne.n	20ed6 <btrfs_set_block_flags@@Base+0x9a>
   20f2a:	ldr.w	r9, [sp, #37]	; 0x25
   20f2e:	movs	r3, #0
   20f30:	ldr.w	r8, [sp, #33]	; 0x21
   20f34:	ldr.w	r2, [r4, #384]	; 0x180
   20f38:	cmp	r9, r3
   20f3a:	it	eq
   20f3c:	cmpeq	r8, r2
   20f3e:	bne.n	20ed6 <btrfs_set_block_flags@@Base+0x9a>
   20f40:	ldrb.w	r3, [sp, #32]
   20f44:	cmp	r3, #168	; 0xa8
   20f46:	bne.n	20ed6 <btrfs_set_block_flags@@Base+0x9a>
   20f48:	ldr.w	r3, [sl]
   20f4c:	movs	r1, #25
   20f4e:	ldr.w	r2, [sl, #32]
   20f52:	adds	r3, #96	; 0x60
   20f54:	mla	r2, r1, r2, r3
   20f58:	add.w	r0, r2, #101	; 0x65
   20f5c:	ldr.w	r1, [r2, #122]	; 0x7a
   20f60:	cmp	r1, #23
   20f62:	bhi.n	20fca <btrfs_set_block_flags@@Base+0x18e>
   20f64:	ldr	r0, [pc, #156]	; (21004 <btrfs_set_block_flags@@Base+0x1c8>)
   20f66:	movs	r2, #24
   20f68:	mvn.w	r9, #116	; 0x74
   20f6c:	add	r0, pc
   20f6e:	bl	17b7c <__btrfs_error@@Base>
   20f72:	mov	r0, sl
   20f74:	bl	1857e <btrfs_free_path@@Base>
   20f78:	ldr	r2, [pc, #140]	; (21008 <btrfs_set_block_flags@@Base+0x1cc>)
   20f7a:	ldr	r3, [pc, #132]	; (21000 <btrfs_set_block_flags@@Base+0x1c4>)
   20f7c:	add	r2, pc
   20f7e:	ldr	r3, [r2, r3]
   20f80:	ldr	r2, [r3, #0]
   20f82:	ldr	r3, [sp, #44]	; 0x2c
   20f84:	eors	r2, r3
   20f86:	beq.n	20fee <btrfs_set_block_flags@@Base+0x1b2>
   20f88:	blx	8708 <__stack_chk_fail@plt>
   20f8c:	ldr.w	r0, [sl]
   20f90:	bl	25720 <btrfs_print_leaf@@Base>
   20f94:	ldr	r3, [pc, #116]	; (2100c <btrfs_set_block_flags@@Base+0x1d0>)
   20f96:	ldrd	r1, r2, [sp, #8]
   20f9a:	ldr.w	r3, [fp, r3]
   20f9e:	strd	r1, r2, [sp]
   20fa2:	movs	r1, #1
   20fa4:	ldr	r2, [pc, #104]	; (21010 <btrfs_set_block_flags@@Base+0x1d4>)
   20fa6:	ldr	r0, [r3, #0]
   20fa8:	add	r2, pc
   20faa:	blx	8a64 <__fprintf_chk@plt+0x4>
   20fae:	ldr	r2, [pc, #100]	; (21014 <btrfs_set_block_flags@@Base+0x1d8>)
   20fb0:	ldr	r1, [pc, #100]	; (21018 <btrfs_set_block_flags@@Base+0x1dc>)
   20fb2:	movs	r3, #1
   20fb4:	ldr	r0, [pc, #100]	; (2101c <btrfs_set_block_flags@@Base+0x1e0>)
   20fb6:	add	r2, pc
   20fb8:	str	r3, [sp, #0]
   20fba:	add.w	r2, r2, #368	; 0x170
   20fbe:	add	r1, pc
   20fc0:	add	r0, pc
   20fc2:	movw	r3, #1426	; 0x592
   20fc6:	bl	1eff4 <btrfs_create_tree@@Base+0x578>
   20fca:	ldr.w	r2, [r0, #17]
   20fce:	mov.w	r9, #0
   20fd2:	ldr	r0, [sp, #16]
   20fd4:	adds	r2, #101	; 0x65
   20fd6:	add	r3, r2
   20fd8:	ldr	r1, [r3, #16]
   20fda:	ldr	r2, [r3, #20]
   20fdc:	orrs	r1, r0
   20fde:	ldr	r0, [sp, #20]
   20fe0:	str	r1, [r3, #16]
   20fe2:	orrs	r2, r0
   20fe4:	str	r2, [r3, #20]
   20fe6:	b.n	20f72 <btrfs_set_block_flags@@Base+0x136>
   20fe8:	mvn.w	r9, #11
   20fec:	b.n	20f78 <btrfs_set_block_flags@@Base+0x13c>
   20fee:	mov	r0, r9
   20ff0:	add	sp, #52	; 0x34
   20ff2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20ff6:	nop
   20ff8:	subs	r7, #42	; 0x2a
   20ffa:	movs	r4, r0
   20ffc:	subs	r7, #32
   20ffe:	movs	r4, r0
   21000:	lsls	r0, r5, #8
   21002:	movs	r0, r0
   21004:	ldmia	r6, {r2, r5, r6}
   21006:	movs	r1, r0
   21008:	subs	r6, #4
   2100a:	movs	r4, r0
   2100c:	lsls	r0, r7, #8
   2100e:	movs	r0, r0
   21010:	ldmia	r7, {r1, r2, r4, r7}
   21012:	movs	r1, r0
   21014:	bcc.n	21048 <btrfs_write_dirty_block_groups@@Base+0xc>
   21016:	movs	r1, r0
   21018:	ldmia	r3, {r0, r1, r2, r3, r4, r6, r7}
   2101a:	movs	r1, r0
   2101c:	ldmia	r7!, {r0, r2, r3, r4, r5}
   2101e:	movs	r1, r0

00021020 <btrfs_inc_ref@@Base>:
   21020:	push	{r0, r1, r4, lr}
   21022:	movs	r4, #1
   21024:	str	r4, [sp, #0]
   21026:	bl	1edea <btrfs_create_tree@@Base+0x36e>
   2102a:	add	sp, #8
   2102c:	pop	{r4, pc}

0002102e <btrfs_dec_ref@@Base>:
   2102e:	push	{r0, r1, r4, lr}
   21030:	movs	r4, #0
   21032:	str	r4, [sp, #0]
   21034:	bl	1edea <btrfs_create_tree@@Base+0x36e>
   21038:	add	sp, #8
   2103a:	pop	{r4, pc}

0002103c <btrfs_write_dirty_block_groups@@Base>:
   2103c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21040:	mov	r8, r0
   21042:	vpush	{d8}
   21046:	ldr	r2, [pc, #340]	; (2119c <btrfs_write_dirty_block_groups@@Base+0x160>)
   21048:	ldr	r3, [pc, #340]	; (211a0 <btrfs_write_dirty_block_groups@@Base+0x164>)
   2104a:	add	r2, pc
   2104c:	sub	sp, #92	; 0x5c
   2104e:	ldr	r7, [r0, #0]
   21050:	ldr	r3, [r2, r3]
   21052:	ldr	r3, [r3, #0]
   21054:	str	r3, [sp, #84]	; 0x54
   21056:	mov.w	r3, #0
   2105a:	bl	18550 <btrfs_alloc_path@@Base>
   2105e:	mov	r4, r0
   21060:	cmp	r0, #0
   21062:	beq.w	2118a <btrfs_write_dirty_block_groups@@Base+0x14e>
   21066:	movs	r3, #0
   21068:	movs	r2, #0
   2106a:	strd	r2, r3, [sp, #16]
   2106e:	adds	r7, #128	; 0x80
   21070:	ldr	r3, [pc, #304]	; (211a4 <btrfs_write_dirty_block_groups@@Base+0x168>)
   21072:	ldr.w	fp, [pc, #308]	; 211a8 <btrfs_write_dirty_block_groups@@Base+0x16c>
   21076:	add	r3, pc
   21078:	str	r3, [sp, #24]
   2107a:	add.w	r3, r3, #390	; 0x186
   2107e:	add	fp, pc
   21080:	vmov	s16, r3
   21084:	add	r3, sp, #40	; 0x28
   21086:	mov.w	r9, #1
   2108a:	str	r3, [sp, #4]
   2108c:	mov	r0, r7
   2108e:	add	r3, sp, #32
   21090:	str.w	r9, [sp, #8]
   21094:	str	r3, [sp, #0]
   21096:	ldrd	r2, r3, [sp, #16]
   2109a:	bl	17218 <find_first_extent_bit@@Base>
   2109e:	mov	r5, r0
   210a0:	cbz	r0, 210b4 <btrfs_write_dirty_block_groups@@Base+0x78>
   210a2:	ldrd	r2, r3, [sp, #16]
   210a6:	orrs	r3, r2
   210a8:	beq.n	2116e <btrfs_write_dirty_block_groups@@Base+0x132>
   210aa:	movs	r2, #0
   210ac:	movs	r3, #0
   210ae:	strd	r2, r3, [sp, #16]
   210b2:	b.n	21084 <btrfs_write_dirty_block_groups@@Base+0x48>
   210b4:	ldr	r3, [sp, #40]	; 0x28
   210b6:	mov	r0, r7
   210b8:	ldr.w	sl, [pc, #240]	; 211ac <btrfs_write_dirty_block_groups@@Base+0x170>
   210bc:	adds	r3, #1
   210be:	str	r3, [sp, #16]
   210c0:	ldr	r3, [sp, #44]	; 0x2c
   210c2:	add	sl, pc
   210c4:	adc.w	r3, r3, #0
   210c8:	str	r3, [sp, #20]
   210ca:	add	r3, sp, #48	; 0x30
   210cc:	str	r3, [sp, #0]
   210ce:	ldrd	r2, r3, [sp, #32]
   210d2:	bl	172f4 <get_state_private@@Base>
   210d6:	mov	r1, fp
   210d8:	vmov	r2, s16
   210dc:	mov.w	r3, #1592	; 0x638
   210e0:	str	r0, [sp, #0]
   210e2:	mov	r0, sl
   210e4:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   210e8:	ldrd	r2, r3, [sp, #40]	; 0x28
   210ec:	mov	r0, r7
   210ee:	str.w	r9, [sp, #8]
   210f2:	strd	r2, r3, [sp]
   210f6:	ldrd	r2, r3, [sp, #32]
   210fa:	bl	16e46 <clear_extent_bits@@Base>
   210fe:	ldr.w	r1, [r8]
   21102:	ldr	r6, [sp, #48]	; 0x30
   21104:	mov	r3, r4
   21106:	strd	r5, r9, [sp]
   2110a:	mov	r0, r8
   2110c:	ldr	r1, [r1, #24]
   2110e:	add.w	r2, r6, #40	; 0x28
   21112:	bl	1a93c <btrfs_search_slot@@Base>
   21116:	cmp	r0, #0
   21118:	blt.n	21084 <btrfs_write_dirty_block_groups@@Base+0x48>
   2111a:	ldr	r2, [sp, #24]
   2111c:	mov	r1, fp
   2111e:	str	r0, [sp, #0]
   21120:	movw	r3, #1547	; 0x60b
   21124:	mov	r0, sl
   21126:	addw	r2, r2, #421	; 0x1a5
   2112a:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   2112e:	ldr	r0, [r4, #0]
   21130:	ldr	r3, [r4, #32]
   21132:	movs	r2, #25
   21134:	add	r1, sp, #60	; 0x3c
   21136:	str	r0, [sp, #28]
   21138:	mla	r3, r2, r3, r0
   2113c:	ldr.w	r2, [r3, #214]	; 0xd6
   21140:	ldr	r3, [r6, #72]	; 0x48
   21142:	adds	r2, #101	; 0x65
   21144:	str	r3, [sp, #60]	; 0x3c
   21146:	ldr	r3, [r6, #76]	; 0x4c
   21148:	str	r3, [sp, #64]	; 0x40
   2114a:	ldr	r3, [r6, #96]	; 0x60
   2114c:	str	r3, [sp, #76]	; 0x4c
   2114e:	ldr	r3, [r6, #100]	; 0x64
   21150:	str	r3, [sp, #80]	; 0x50
   21152:	mov.w	r3, #256	; 0x100
   21156:	strd	r3, r5, [sp, #68]	; 0x44
   2115a:	movs	r3, #24
   2115c:	bl	17a30 <write_extent_buffer@@Base>
   21160:	ldr	r0, [sp, #28]
   21162:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   21166:	mov	r0, r4
   21168:	bl	18558 <btrfs_release_path@@Base>
   2116c:	b.n	21084 <btrfs_write_dirty_block_groups@@Base+0x48>
   2116e:	mov	r0, r4
   21170:	bl	1857e <btrfs_free_path@@Base>
   21174:	movs	r0, #0
   21176:	ldr	r2, [pc, #56]	; (211b0 <btrfs_write_dirty_block_groups@@Base+0x174>)
   21178:	ldr	r3, [pc, #36]	; (211a0 <btrfs_write_dirty_block_groups@@Base+0x164>)
   2117a:	add	r2, pc
   2117c:	ldr	r3, [r2, r3]
   2117e:	ldr	r2, [r3, #0]
   21180:	ldr	r3, [sp, #84]	; 0x54
   21182:	eors	r2, r3
   21184:	beq.n	21190 <btrfs_write_dirty_block_groups@@Base+0x154>
   21186:	blx	8708 <__stack_chk_fail@plt>
   2118a:	mvn.w	r0, #11
   2118e:	b.n	21176 <btrfs_write_dirty_block_groups@@Base+0x13a>
   21190:	add	sp, #92	; 0x5c
   21192:	vpop	{d8}
   21196:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2119a:	nop
   2119c:	subs	r5, #54	; 0x36
   2119e:	movs	r4, r0
   211a0:	lsls	r0, r5, #8
   211a2:	movs	r0, r0
   211a4:	bcs.n	21258 <update_space_info@@Base+0xa4>
   211a6:	movs	r1, r0
   211a8:	ldmia	r3, {r0, r1, r2, r3, r4}
   211aa:	movs	r1, r0
   211ac:	str	r4, [sp, #136]	; 0x88
   211ae:	movs	r1, r0
   211b0:	subs	r4, #6
   211b2:	movs	r4, r0

000211b4 <update_space_info@@Base>:
   211b4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   211b8:	sub	sp, #36	; 0x24
   211ba:	mov	r5, r0
   211bc:	mov	r4, r2
   211be:	ldr	r1, [sp, #80]	; 0x50
   211c0:	ldrd	r7, fp, [sp, #72]	; 0x48
   211c4:	ldr.w	sl, [sp, #84]	; 0x54
   211c8:	str	r1, [sp, #24]
   211ca:	ldr	r1, [pc, #176]	; (2127c <update_space_info@@Base+0xc8>)
   211cc:	add	r1, pc
   211ce:	str	r1, [sp, #28]
   211d0:	bl	1ec44 <btrfs_create_tree@@Base+0x1c8>
   211d4:	mov	r6, r0
   211d6:	cbz	r0, 21232 <update_space_info@@Base+0x7e>
   211d8:	ldrd	r2, r0, [r0, #8]
   211dc:	ldr	r1, [sp, #28]
   211de:	adds	r3, r7, r2
   211e0:	str	r3, [sp, #16]
   211e2:	adc.w	r3, fp, r0
   211e6:	str	r3, [sp, #20]
   211e8:	ldrd	r3, r4, [sp, #16]
   211ec:	ldrd	r2, r0, [r6, #16]
   211f0:	strd	r3, r4, [r6, #8]
   211f4:	ldr	r3, [sp, #24]
   211f6:	adds.w	r8, r3, r2
   211fa:	ldrd	r3, r4, [sp, #16]
   211fe:	adc.w	r9, sl, r0
   21202:	strd	r8, r9, [r6, #16]
   21206:	cmp	r4, r9
   21208:	it	eq
   2120a:	cmpeq	r3, r8
   2120c:	bcs.n	21226 <update_space_info@@Base+0x72>
   2120e:	ldr	r2, [pc, #112]	; (21280 <update_space_info@@Base+0xcc>)
   21210:	ldr	r0, [r1, r2]
   21212:	movs	r1, #1
   21214:	ldr	r2, [pc, #108]	; (21284 <update_space_info@@Base+0xd0>)
   21216:	strd	r8, r9, [sp, #8]
   2121a:	strd	r3, r4, [sp]
   2121e:	add	r2, pc
   21220:	ldr	r0, [r0, #0]
   21222:	blx	8a64 <__fprintf_chk@plt+0x4>
   21226:	ldr	r3, [sp, #88]	; 0x58
   21228:	str	r6, [r3, #0]
   2122a:	movs	r0, #0
   2122c:	add	sp, #36	; 0x24
   2122e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21232:	movs	r0, #56	; 0x38
   21234:	blx	8870 <malloc@plt+0x4>
   21238:	cbz	r0, 21276 <update_space_info@@Base+0xc2>
   2123a:	ldr.w	r1, [r5, #356]	; 0x164
   2123e:	add.w	r2, r0, #44	; 0x2c
   21242:	ldr	r3, [sp, #24]
   21244:	and.w	r4, r4, #7
   21248:	str	r2, [r1, #4]
   2124a:	strd	r3, sl, [r0, #16]
   2124e:	ldr	r3, [sp, #88]	; 0x58
   21250:	str.w	r2, [r5, #356]	; 0x164
   21254:	str	r1, [r0, #44]	; 0x2c
   21256:	add.w	r1, r5, #356	; 0x164
   2125a:	strd	r4, r6, [r0]
   2125e:	movs	r5, #0
   21260:	movs	r4, #0
   21262:	str	r1, [r0, #48]	; 0x30
   21264:	strd	r7, fp, [r0, #8]
   21268:	strd	r4, r5, [r0, #24]
   2126c:	strd	r4, r5, [r0, #32]
   21270:	str	r6, [r0, #40]	; 0x28
   21272:	str	r0, [r3, #0]
   21274:	b.n	2122a <update_space_info@@Base+0x76>
   21276:	mvn.w	r0, #11
   2127a:	b.n	2122c <update_space_info@@Base+0x78>
   2127c:	subs	r3, #180	; 0xb4
   2127e:	movs	r4, r0
   21280:	lsls	r0, r7, #8
   21282:	movs	r0, r0
   21284:	ldmia	r5!, {r0, r6}
   21286:	movs	r1, r0

00021288 <btrfs_finish_extent_commit@@Base>:
   21288:	ldr	r2, [pc, #156]	; (21328 <btrfs_finish_extent_commit@@Base+0xa0>)
   2128a:	ldr	r3, [pc, #160]	; (2132c <btrfs_finish_extent_commit@@Base+0xa4>)
   2128c:	add	r2, pc
   2128e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   21292:	sub	sp, #44	; 0x2c
   21294:	ldr	r4, [r0, #0]
   21296:	add	r7, sp, #24
   21298:	ldr	r3, [r2, r3]
   2129a:	add.w	r8, sp, #16
   2129e:	add.w	r5, r4, #96	; 0x60
   212a2:	adds	r4, #160	; 0xa0
   212a4:	ldr	r3, [r3, #0]
   212a6:	str	r3, [sp, #36]	; 0x24
   212a8:	mov.w	r3, #0
   212ac:	mov	r9, r0
   212ae:	movs	r6, #1
   212b0:	movs	r2, #0
   212b2:	movs	r3, #0
   212b4:	mov	r0, r4
   212b6:	strd	r7, r6, [sp, #4]
   212ba:	str.w	r8, [sp]
   212be:	bl	17218 <find_first_extent_bit@@Base>
   212c2:	cbnz	r0, 2130c <btrfs_finish_extent_commit@@Base+0x84>
   212c4:	ldr	r1, [sp, #24]
   212c6:	ldrd	r2, r3, [sp, #16]
   212ca:	str	r0, [sp, #8]
   212cc:	adds	r1, #1
   212ce:	ldr	r0, [sp, #28]
   212d0:	adc.w	r0, r0, #0
   212d4:	subs	r1, r1, r2
   212d6:	sbc.w	r0, r0, r3
   212da:	strd	r1, r0, [sp]
   212de:	ldr.w	r0, [r9]
   212e2:	bl	1f64c <btrfs_lookup_block_group@@Base+0x98>
   212e6:	ldrd	r2, r3, [sp, #24]
   212ea:	mov	r0, r4
   212ec:	strd	r2, r3, [sp]
   212f0:	ldrd	r2, r3, [sp, #16]
   212f4:	bl	17200 <clear_extent_dirty@@Base>
   212f8:	ldrd	r2, r3, [sp, #24]
   212fc:	mov	r0, r5
   212fe:	strd	r2, r3, [sp]
   21302:	ldrd	r2, r3, [sp, #16]
   21306:	bl	171e8 <set_extent_dirty@@Base>
   2130a:	b.n	212b0 <btrfs_finish_extent_commit@@Base+0x28>
   2130c:	ldr	r2, [pc, #32]	; (21330 <btrfs_finish_extent_commit@@Base+0xa8>)
   2130e:	ldr	r3, [pc, #28]	; (2132c <btrfs_finish_extent_commit@@Base+0xa4>)
   21310:	add	r2, pc
   21312:	ldr	r3, [r2, r3]
   21314:	ldr	r2, [r3, #0]
   21316:	ldr	r3, [sp, #36]	; 0x24
   21318:	eors	r2, r3
   2131a:	beq.n	21320 <btrfs_finish_extent_commit@@Base+0x98>
   2131c:	blx	8708 <__stack_chk_fail@plt>
   21320:	add	sp, #44	; 0x2c
   21322:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   21326:	nop
   21328:	subs	r2, #244	; 0xf4
   2132a:	movs	r4, r0
   2132c:	lsls	r0, r5, #8
   2132e:	movs	r0, r0
   21330:	subs	r2, #112	; 0x70
   21332:	movs	r4, r0

00021334 <btrfs_pin_extent@@Base>:
   21334:	push	{r4, r5, lr}
   21336:	sub	sp, #20
   21338:	movs	r1, #1
   2133a:	ldrd	r4, r5, [sp, #32]
   2133e:	str	r1, [sp, #8]
   21340:	strd	r4, r5, [sp]
   21344:	bl	1f64c <btrfs_lookup_block_group@@Base+0x98>
   21348:	add	sp, #20
   2134a:	pop	{r4, r5, pc}

0002134c <btrfs_free_extent@@Base>:
   2134c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21350:	sub	sp, #84	; 0x54
   21352:	mov	r6, r2
   21354:	mov	r5, r3
   21356:	ldrd	r2, r3, [sp, #128]	; 0x80
   2135a:	mov	r4, r0
   2135c:	mov	r0, r1
   2135e:	ldrd	r8, r9, [sp, #120]	; 0x78
   21362:	mov.w	ip, #0
   21366:	ldr	r1, [pc, #296]	; (21490 <btrfs_free_extent@@Base+0x144>)
   21368:	strd	r2, r3, [sp, #64]	; 0x40
   2136c:	cmp	r9, ip
   2136e:	ldrd	r2, r3, [sp, #136]	; 0x88
   21372:	add	r1, pc
   21374:	ldrd	r7, sl, [sp, #152]	; 0x98
   21378:	mvn.w	fp, #5
   2137c:	strd	r2, r3, [sp, #56]	; 0x38
   21380:	ldrd	r2, r3, [sp, #144]	; 0x90
   21384:	strd	r2, r3, [sp, #48]	; 0x30
   21388:	ldr.w	r3, [r0, #464]	; 0x1d0
   2138c:	ldr	r2, [pc, #260]	; (21494 <btrfs_free_extent@@Base+0x148>)
   2138e:	ldr	r0, [pc, #264]	; (21498 <btrfs_free_extent@@Base+0x14c>)
   21390:	ldr.w	r3, [r3, #388]	; 0x184
   21394:	add	r2, pc
   21396:	addw	r2, r2, #443	; 0x1bb
   2139a:	add	r0, pc
   2139c:	it	eq
   2139e:	cmpeq	r8, r3
   213a0:	strd	r1, r2, [sp, #72]	; 0x48
   213a4:	ite	cc
   213a6:	movcc	r3, #1
   213a8:	movcs	r3, #0
   213aa:	str	r3, [sp, #0]
   213ac:	movw	r3, #2154	; 0x86a
   213b0:	bl	1edd4 <btrfs_create_tree@@Base+0x358>
   213b4:	ldrd	r2, r3, [sp, #56]	; 0x38
   213b8:	mov.w	ip, #4294967295	; 0xffffffff
   213bc:	cmp	r3, ip
   213be:	it	eq
   213c0:	cmpeq	r2, fp
   213c2:	ldrd	r1, r2, [sp, #72]	; 0x48
   213c6:	bne.n	2140e <btrfs_free_extent@@Base+0xc2>
   213c8:	ldr	r0, [pc, #208]	; (2149c <btrfs_free_extent@@Base+0x150>)
   213ca:	str	r1, [sp, #64]	; 0x40
   213cc:	add	r0, pc
   213ce:	str	r2, [sp, #56]	; 0x38
   213d0:	blx	8854 <puts@plt+0x4>
   213d4:	ldrd	r2, r3, [sp, #48]	; 0x30
   213d8:	ldr	r0, [pc, #196]	; (214a0 <btrfs_free_extent@@Base+0x154>)
   213da:	cmp	r3, #0
   213dc:	ldr	r1, [sp, #64]	; 0x40
   213de:	it	eq
   213e0:	cmpeq.w	r2, #256	; 0x100
   213e4:	add	r0, pc
   213e6:	ldr	r2, [sp, #56]	; 0x38
   213e8:	ite	cs
   213ea:	movcs	r3, #1
   213ec:	movcc	r3, #0
   213ee:	str	r3, [sp, #0]
   213f0:	movw	r3, #2161	; 0x871
   213f4:	bl	1edd4 <btrfs_create_tree@@Base+0x358>
   213f8:	ldr	r0, [r4, #0]
   213fa:	mov	r2, r6
   213fc:	mov	r3, r5
   213fe:	strd	r8, r9, [sp]
   21402:	bl	21334 <btrfs_pin_extent@@Base>
   21406:	movs	r0, #0
   21408:	add	sp, #84	; 0x54
   2140a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2140e:	ldrd	fp, ip, [sp, #48]	; 0x30
   21412:	cmp.w	ip, #0
   21416:	it	eq
   21418:	cmpeq.w	fp, #256	; 0x100
   2141c:	bcs.n	2145e <btrfs_free_extent@@Base+0x112>
   2141e:	ldr	r0, [pc, #132]	; (214a4 <btrfs_free_extent@@Base+0x158>)
   21420:	movw	r3, #2165	; 0x875
   21424:	str	r7, [sp, #0]
   21426:	add	r0, pc
   21428:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   2142c:	movs	r3, #0
   2142e:	strd	r3, r3, [sp, #36]	; 0x24
   21432:	mov	r1, r4
   21434:	str	r3, [sp, #32]
   21436:	movs	r3, #2
   21438:	str	r3, [sp, #28]
   2143a:	ldr	r3, [sp, #48]	; 0x30
   2143c:	ldr	r0, [r4, #0]
   2143e:	strd	r8, r9, [sp]
   21442:	str	r3, [sp, #24]
   21444:	ldrd	r2, r3, [sp, #56]	; 0x38
   21448:	strd	r2, r3, [sp, #16]
   2144c:	ldrd	r2, r3, [sp, #64]	; 0x40
   21450:	strd	r2, r3, [sp, #8]
   21454:	mov	r2, r6
   21456:	mov	r3, r5
   21458:	bl	245f4 <btrfs_add_delayed_tree_ref@@Base>
   2145c:	b.n	21408 <btrfs_free_extent@@Base+0xbc>
   2145e:	ldrd	r2, r3, [sp, #48]	; 0x30
   21462:	mov	r0, r4
   21464:	strd	r7, sl, [sp, #152]	; 0x98
   21468:	strd	r8, r9, [sp, #120]	; 0x78
   2146c:	strd	r2, r3, [sp, #144]	; 0x90
   21470:	ldrd	r2, r3, [sp, #56]	; 0x38
   21474:	strd	r2, r3, [sp, #136]	; 0x88
   21478:	ldrd	r2, r3, [sp, #64]	; 0x40
   2147c:	strd	r2, r3, [sp, #128]	; 0x80
   21480:	mov	r2, r6
   21482:	mov	r3, r5
   21484:	add	sp, #84	; 0x54
   21486:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2148a:	b.w	1fecc <hash_extent_data_ref@@Base+0x3f4>
   2148e:	nop
   21490:	ldmia	r0, {r0, r1, r3, r5}
   21492:	movs	r1, r0
   21494:	ldmia	r7!, {r1, r3, r4, r5}
   21496:	movs	r1, r0
   21498:	ldmia	r3, {r0, r3, r4, r5, r6, r7}
   2149a:	movs	r1, r0
   2149c:	ldmia	r3, {r0, r2, r3, r5, r6, r7}
   2149e:	movs	r1, r0
   214a0:	ldmia	r3!, {r0, r4, r5, r6, r7}
   214a2:	movs	r1, r0
   214a4:	b.n	21316 <btrfs_finish_extent_commit@@Base+0x8e>
   214a6:	movs	r1, r0

000214a8 <btrfs_unpin_extent@@Base>:
   214a8:	push	{r4, r5, lr}
   214aa:	sub	sp, #20
   214ac:	movs	r1, #0
   214ae:	ldrd	r4, r5, [sp, #32]
   214b2:	str	r1, [sp, #8]
   214b4:	strd	r4, r5, [sp]
   214b8:	bl	1f64c <btrfs_lookup_block_group@@Base+0x98>
   214bc:	add	sp, #20
   214be:	pop	{r4, r5, pc}

000214c0 <btrfs_free_tree_block@@Base>:
   214c0:	push	{r4, r5, lr}
   214c2:	sub	sp, #44	; 0x2c
   214c4:	movs	r4, #0
   214c6:	movs	r5, #0
   214c8:	strd	r4, r5, [sp, #32]
   214cc:	movs	r5, #0
   214ce:	ldrb.w	r4, [r2, #196]	; 0xc4
   214d2:	ldr.w	r3, [r1, #451]	; 0x1c3
   214d6:	strd	r4, r5, [sp, #24]
   214da:	ldr.w	r4, [r1, #447]	; 0x1bf
   214de:	strd	r4, r3, [sp, #16]
   214e2:	ldrd	r4, r5, [sp, #56]	; 0x38
   214e6:	strd	r4, r5, [sp, #8]
   214ea:	ldr	r3, [r2, #76]	; 0x4c
   214ec:	str	r3, [sp, #0]
   214ee:	movs	r3, #0
   214f0:	str	r3, [sp, #4]
   214f2:	ldrd	r2, r3, [r2, #40]	; 0x28
   214f6:	bl	2134c <btrfs_free_extent@@Base>
   214fa:	add	sp, #44	; 0x2c
   214fc:	pop	{r4, r5, pc}

000214fe <btrfs_free_block_groups@@Base>:
   214fe:	ldr	r2, [pc, #260]	; (21604 <btrfs_free_block_groups@@Base+0x106>)
   21500:	ldr	r3, [pc, #260]	; (21608 <btrfs_free_block_groups@@Base+0x10a>)
   21502:	add	r2, pc
   21504:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   21508:	sub	sp, #52	; 0x34
   2150a:	ldr	r3, [r2, r3]
   2150c:	add.w	r6, r0, #128	; 0x80
   21510:	add	r7, sp, #24
   21512:	mov	r4, r0
   21514:	ldr	r3, [r3, #0]
   21516:	str	r3, [sp, #44]	; 0x2c
   21518:	mov.w	r3, #0
   2151c:	mov.w	r9, #4294967295	; 0xffffffff
   21520:	add.w	r8, sp, #16
   21524:	movs	r2, #0
   21526:	movs	r3, #0
   21528:	mov	r0, r6
   2152a:	strd	r7, r9, [sp, #4]
   2152e:	str.w	r8, [sp]
   21532:	bl	17218 <find_first_extent_bit@@Base>
   21536:	cbz	r0, 21576 <btrfs_free_block_groups@@Base+0x78>
   21538:	add.w	r5, r4, #96	; 0x60
   2153c:	movs	r6, #1
   2153e:	movs	r2, #0
   21540:	movs	r3, #0
   21542:	mov	r0, r5
   21544:	strd	r7, r6, [sp, #4]
   21548:	str.w	r8, [sp]
   2154c:	bl	17218 <find_first_extent_bit@@Base>
   21550:	cbz	r0, 215b6 <btrfs_free_block_groups@@Base+0xb8>
   21552:	ldr	r6, [pc, #184]	; (2160c <btrfs_free_block_groups@@Base+0x10e>)
   21554:	add.w	r5, r4, #356	; 0x164
   21558:	add	r6, pc
   2155a:	ldr.w	r3, [r4, #356]	; 0x164
   2155e:	cmp	r3, r5
   21560:	bne.n	215ca <btrfs_free_block_groups@@Base+0xcc>
   21562:	ldr	r2, [pc, #172]	; (21610 <btrfs_free_block_groups@@Base+0x112>)
   21564:	ldr	r3, [pc, #160]	; (21608 <btrfs_free_block_groups@@Base+0x10a>)
   21566:	add	r2, pc
   21568:	ldr	r3, [r2, r3]
   2156a:	ldr	r2, [r3, #0]
   2156c:	ldr	r3, [sp, #44]	; 0x2c
   2156e:	eors	r2, r3
   21570:	beq.n	215fa <btrfs_free_block_groups@@Base+0xfc>
   21572:	blx	8708 <__stack_chk_fail@plt>
   21576:	add	r3, sp, #32
   21578:	mov	r0, r6
   2157a:	str	r3, [sp, #0]
   2157c:	ldrd	r2, r3, [sp, #16]
   21580:	bl	172f4 <get_state_private@@Base>
   21584:	cbnz	r0, 2159e <btrfs_free_block_groups@@Base+0xa0>
   21586:	ldr	r5, [sp, #32]
   21588:	ldr	r3, [r5, #64]	; 0x40
   2158a:	cbz	r3, 21598 <btrfs_free_block_groups@@Base+0x9a>
   2158c:	mov	r0, r5
   2158e:	bl	27314 <btrfs_remove_free_space_cache@@Base>
   21592:	ldr	r0, [r5, #64]	; 0x40
   21594:	blx	8620 <free@plt+0x4>
   21598:	mov	r0, r5
   2159a:	blx	8620 <free@plt+0x4>
   2159e:	ldrd	r2, r3, [sp, #24]
   215a2:	mov	r0, r6
   215a4:	str.w	r9, [sp, #8]
   215a8:	strd	r2, r3, [sp]
   215ac:	ldrd	r2, r3, [sp, #16]
   215b0:	bl	16e46 <clear_extent_bits@@Base>
   215b4:	b.n	21520 <btrfs_free_block_groups@@Base+0x22>
   215b6:	ldrd	r2, r3, [sp, #24]
   215ba:	mov	r0, r5
   215bc:	strd	r2, r3, [sp]
   215c0:	ldrd	r2, r3, [sp, #16]
   215c4:	bl	17200 <clear_extent_dirty@@Base>
   215c8:	b.n	2153e <btrfs_free_block_groups@@Base+0x40>
   215ca:	ldrd	r1, r2, [r3]
   215ce:	sub.w	r7, r3, #44	; 0x2c
   215d2:	str	r2, [r1, #4]
   215d4:	str	r1, [r2, #0]
   215d6:	ldrd	r0, r1, [r3, #-12]
   215da:	strd	r3, r3, [r3]
   215de:	orrs.w	r2, r0, r1
   215e2:	beq.n	215f2 <btrfs_free_block_groups@@Base+0xf4>
   215e4:	strd	r0, r1, [sp]
   215e8:	mov	r0, r6
   215ea:	ldrd	r2, r3, [r3, #-44]	; 0x2c
   215ee:	bl	17b00 <__btrfs_warning@@Base>
   215f2:	mov	r0, r7
   215f4:	blx	8620 <free@plt+0x4>
   215f8:	b.n	2155a <btrfs_free_block_groups@@Base+0x5c>
   215fa:	movs	r0, #0
   215fc:	add	sp, #52	; 0x34
   215fe:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   21602:	nop
   21604:	subs	r0, #126	; 0x7e
   21606:	movs	r4, r0
   21608:	lsls	r0, r5, #8
   2160a:	movs	r0, r0
   2160c:	ldmia	r2!, {r5, r7}
   2160e:	movs	r1, r0
   21610:	subs	r0, #26
   21612:	movs	r4, r0

00021614 <btrfs_make_block_groups@@Base>:
   21614:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21618:	mov	r7, r1
   2161a:	vpush	{d8-d9}
   2161e:	movs	r6, #0
   21620:	ldr	r2, [pc, #768]	; (21924 <btrfs_make_block_groups@@Base+0x310>)
   21622:	mov	r8, r6
   21624:	ldr	r3, [pc, #768]	; (21928 <btrfs_make_block_groups@@Base+0x314>)
   21626:	mov	r9, r6
   21628:	add	r2, pc
   2162a:	vmov	s19, r0
   2162e:	sub	sp, #124	; 0x7c
   21630:	ldr	r3, [r2, r3]
   21632:	ldr	r3, [r3, #0]
   21634:	str	r3, [sp, #116]	; 0x74
   21636:	mov.w	r3, #0
   2163a:	ldr	r3, [r1, #24]
   2163c:	vmov	s18, r3
   21640:	add.w	r3, r1, #128	; 0x80
   21644:	vmov	s16, r3
   21648:	ldr.w	r3, [r1, #308]	; 0x134
   2164c:	ldr	r2, [r3, #112]	; 0x70
   2164e:	str	r2, [sp, #40]	; 0x28
   21650:	movs	r2, #0
   21652:	ldr	r3, [r3, #116]	; 0x74
   21654:	str	r3, [sp, #44]	; 0x2c
   21656:	ldr.w	r3, [r1, #388]	; 0x184
   2165a:	lsls	r3, r3, #6
   2165c:	mov	r1, r3
   2165e:	movs	r3, #0
   21660:	strd	r1, r2, [sp, #64]	; 0x40
   21664:	movs	r2, #12
   21666:	ldrd	r0, r1, [sp, #40]	; 0x28
   2166a:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2166e:	ldr	r3, [pc, #700]	; (2192c <btrfs_make_block_groups@@Base+0x318>)
   21670:	str	r6, [sp, #80]	; 0x50
   21672:	add	r3, pc
   21674:	strd	r6, r6, [sp, #32]
   21678:	addw	r3, r3, #461	; 0x1cd
   2167c:	vmov	s17, r3
   21680:	strd	r0, r1, [sp, #56]	; 0x38
   21684:	ldrd	r2, r3, [sp, #40]	; 0x28
   21688:	cmp	r9, r3
   2168a:	it	eq
   2168c:	cmpeq	r8, r2
   2168e:	bcc.n	216c8 <btrfs_make_block_groups@@Base+0xb4>
   21690:	ldr.w	r8, [pc, #668]	; 21930 <btrfs_make_block_groups@@Base+0x31c>
   21694:	movs	r4, #0
   21696:	ldr.w	r9, [pc, #668]	; 21934 <btrfs_make_block_groups@@Base+0x320>
   2169a:	movs	r5, #0
   2169c:	add	r8, pc
   2169e:	addw	r8, r8, #461	; 0x1cd
   216a2:	add	r9, pc
   216a4:	ldrd	r2, r3, [sp, #40]	; 0x28
   216a8:	cmp	r5, r3
   216aa:	it	eq
   216ac:	cmpeq	r4, r2
   216ae:	bcc.w	2189e <btrfs_make_block_groups@@Base+0x28a>
   216b2:	ldr	r2, [pc, #644]	; (21938 <btrfs_make_block_groups@@Base+0x324>)
   216b4:	ldr	r3, [pc, #624]	; (21928 <btrfs_make_block_groups@@Base+0x314>)
   216b6:	add	r2, pc
   216b8:	ldr	r3, [r2, r3]
   216ba:	ldr	r2, [r3, #0]
   216bc:	ldr	r3, [sp, #116]	; 0x74
   216be:	eors	r2, r3
   216c0:	beq.w	21918 <btrfs_make_block_groups@@Base+0x304>
   216c4:	blx	8708 <__stack_chk_fail@plt>
   216c8:	ldr	r3, [sp, #40]	; 0x28
   216ca:	ldrd	sl, fp, [sp, #56]	; 0x38
   216ce:	subs.w	r3, r3, r8
   216d2:	str	r3, [sp, #24]
   216d4:	ldr	r3, [sp, #44]	; 0x2c
   216d6:	sbc.w	r3, r3, r9
   216da:	str	r3, [sp, #28]
   216dc:	ldrd	r0, r1, [sp, #24]
   216e0:	ldrd	r3, r2, [sp, #56]	; 0x38
   216e4:	cmp	r1, fp
   216e6:	it	eq
   216e8:	cmpeq	r0, sl
   216ea:	it	cc
   216ec:	ldrdcc	r3, r2, [sp, #24]
   216f0:	orrs.w	r1, r8, r9
   216f4:	bne.w	21802 <btrfs_make_block_groups@@Base+0x1ee>
   216f8:	ldrd	r0, r1, [sp, #64]	; 0x40
   216fc:	lsrs	r3, r3, #2
   216fe:	orr.w	r3, r3, r2, lsl #30
   21702:	negs	r0, r0
   21704:	and.w	r4, r0, r3
   21708:	mov.w	r3, #0
   2170c:	sbc.w	r1, r1, r1, lsl #1
   21710:	and.w	r5, r1, r2, lsr #2
   21714:	mov.w	r2, #33554432	; 0x2000000
   21718:	cmp	r5, #0
   2171a:	it	eq
   2171c:	cmpeq.w	r4, #8388608	; 0x800000
   21720:	itt	cc
   21722:	movcc.w	r4, #8388608	; 0x800000
   21726:	movcc	r5, #0
   21728:	cmp	r3, r5
   2172a:	it	eq
   2172c:	cmpeq	r2, r4
   2172e:	itt	cc
   21730:	movcc	r4, r2
   21732:	movcc	r5, r3
   21734:	movs	r2, #2
   21736:	movs	r3, #0
   21738:	strd	r2, r3, [sp, #48]	; 0x30
   2173c:	movs	r1, #120	; 0x78
   2173e:	movs	r0, #1
   21740:	blx	8588 <calloc@plt+0x4>
   21744:	ldr	r1, [pc, #500]	; (2193c <btrfs_make_block_groups@@Base+0x328>)
   21746:	vmov	r2, s17
   2174a:	movw	r3, #2893	; 0xb4d
   2174e:	add	r1, pc
   21750:	str	r1, [sp, #84]	; 0x54
   21752:	mov	sl, r0
   21754:	clz	r0, r0
   21758:	lsrs	r0, r0, #5
   2175a:	str	r0, [sp, #0]
   2175c:	ldr	r0, [pc, #480]	; (21940 <btrfs_make_block_groups@@Base+0x32c>)
   2175e:	add	r0, pc
   21760:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   21764:	ldrd	r0, r1, [sp, #48]	; 0x30
   21768:	strd	r8, r9, [sl, #40]	; 0x28
   2176c:	movs	r2, #0
   2176e:	str.w	r4, [sl, #49]	; 0x31
   21772:	movs	r3, #192	; 0xc0
   21774:	strd	r0, r1, [sl, #96]	; 0x60
   21778:	add.w	r0, sl, #60	; 0x3c
   2177c:	strb.w	r3, [sl, #48]	; 0x30
   21780:	movs	r3, #0
   21782:	str.w	r5, [sl, #53]	; 0x35
   21786:	strd	r2, r3, [sl, #72]	; 0x48
   2178a:	str	r0, [sp, #16]
   2178c:	mov	r0, r7
   2178e:	strd	r2, r3, [sp, #8]
   21792:	strd	r4, r5, [sp]
   21796:	ldrd	r2, r3, [sp, #48]	; 0x30
   2179a:	bl	211b4 <update_space_info@@Base>
   2179e:	ldr	r1, [sp, #84]	; 0x54
   217a0:	vmov	r2, s17
   217a4:	movw	r3, #2903	; 0xb57
   217a8:	str	r0, [sp, #0]
   217aa:	ldr	r0, [pc, #408]	; (21944 <btrfs_make_block_groups@@Base+0x330>)
   217ac:	add	r0, pc
   217ae:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   217b2:	ldrd	r2, r3, [sp, #48]	; 0x30
   217b6:	mov	r0, r7
   217b8:	bl	1ec78 <btrfs_create_tree@@Base+0x1fc>
   217bc:	adds.w	r3, r8, r4
   217c0:	adc.w	r1, r9, r5
   217c4:	vmov	r0, s16
   217c8:	mov	fp, r3
   217ca:	adds.w	r2, fp, #4294967295	; 0xffffffff
   217ce:	mov.w	r3, #24
   217d2:	str	r3, [sp, #8]
   217d4:	adc.w	r3, r1, #4294967295	; 0xffffffff
   217d8:	strd	r2, r3, [sp]
   217dc:	mov	r2, r8
   217de:	mov	r3, r9
   217e0:	str	r1, [sp, #48]	; 0x30
   217e2:	bl	16fbc <set_extent_bits@@Base>
   217e6:	movs	r3, #0
   217e8:	mov	r2, r8
   217ea:	str	r3, [sp, #4]
   217ec:	mov	r3, r9
   217ee:	vmov	r0, s16
   217f2:	mov	r8, fp
   217f4:	str.w	sl, [sp]
   217f8:	bl	172ca <set_state_private@@Base>
   217fc:	ldr	r1, [sp, #48]	; 0x30
   217fe:	mov	r9, r1
   21800:	b.n	21684 <btrfs_make_block_groups@@Base+0x70>
   21802:	ldrd	r0, r1, [sp, #64]	; 0x40
   21806:	negs	r0, r0
   21808:	and.w	r3, r3, r0
   2180c:	sbc.w	r1, r1, r1, lsl #1
   21810:	ands	r2, r1
   21812:	adds	r1, r6, r6
   21814:	str	r1, [sp, #72]	; 0x48
   21816:	ldr	r1, [sp, #80]	; 0x50
   21818:	adcs	r1, r1
   2181a:	str	r1, [sp, #76]	; 0x4c
   2181c:	ldrd	r4, r5, [sp, #72]	; 0x48
   21820:	ldrd	r0, r1, [sp, #32]
   21824:	cmp	r1, r5
   21826:	mov	r5, r2
   21828:	it	eq
   2182a:	cmpeq	r0, r4
   2182c:	mov.w	r2, #1073741824	; 0x40000000
   21830:	mov	r4, r3
   21832:	bcc.n	2187c <btrfs_make_block_groups@@Base+0x268>
   21834:	movs	r3, #0
   21836:	cmp	r3, r5
   21838:	it	eq
   2183a:	cmpeq	r2, r4
   2183c:	it	cc
   2183e:	movcc	r5, r3
   21840:	ldr	r3, [sp, #80]	; 0x50
   21842:	it	cc
   21844:	movcc	r4, r2
   21846:	movs	r2, #4
   21848:	adds	r6, r6, r4
   2184a:	adc.w	r3, r5, r3
   2184e:	str	r3, [sp, #80]	; 0x50
   21850:	ldr	r1, [sp, #28]
   21852:	movs	r3, #0
   21854:	strd	r2, r3, [sp, #48]	; 0x30
   21858:	mov.w	ip, #5
   2185c:	lsls	r3, r1, #2
   2185e:	ldr	r1, [sp, #24]
   21860:	orr.w	r3, r3, r1, lsr #30
   21864:	lsls	r2, r1, #2
   21866:	umull	r0, r1, r4, ip
   2186a:	mla	r1, ip, r5, r1
   2186e:	cmp	r3, r1
   21870:	it	eq
   21872:	cmpeq	r2, r0
   21874:	it	cc
   21876:	ldrdcc	r4, r5, [sp, #24]
   2187a:	b.n	2173c <btrfs_make_block_groups@@Base+0x128>
   2187c:	movs	r3, #1
   2187e:	cmp	r3, r5
   21880:	it	eq
   21882:	cmpeq	r2, r4
   21884:	it	cc
   21886:	movcc	r5, r3
   21888:	ldr	r3, [sp, #32]
   2188a:	it	cc
   2188c:	movcc	r4, r2
   2188e:	movs	r2, #1
   21890:	adds	r3, r3, r4
   21892:	str	r3, [sp, #32]
   21894:	ldr	r3, [sp, #36]	; 0x24
   21896:	adc.w	r3, r5, r3
   2189a:	str	r3, [sp, #36]	; 0x24
   2189c:	b.n	21850 <btrfs_make_block_groups@@Base+0x23c>
   2189e:	mov	r2, r4
   218a0:	mov	r3, r5
   218a2:	mov	r0, r7
   218a4:	bl	1f5b4 <btrfs_lookup_block_group@@Base>
   218a8:	movw	r3, #2919	; 0xb67
   218ac:	mov	r2, r8
   218ae:	mov	r1, r9
   218b0:	mov	r6, r0
   218b2:	clz	r0, r0
   218b6:	lsrs	r0, r0, #5
   218b8:	str	r0, [sp, #0]
   218ba:	ldr	r0, [pc, #140]	; (21948 <btrfs_make_block_groups@@Base+0x334>)
   218bc:	add	r0, pc
   218be:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   218c2:	ldr	r3, [r6, #72]	; 0x48
   218c4:	vmov	r1, s18
   218c8:	mov.w	r2, #256	; 0x100
   218cc:	vmov	r0, s19
   218d0:	str	r3, [sp, #92]	; 0x5c
   218d2:	ldr	r3, [r6, #76]	; 0x4c
   218d4:	str	r3, [sp, #96]	; 0x60
   218d6:	ldr	r3, [r6, #96]	; 0x60
   218d8:	str	r3, [sp, #108]	; 0x6c
   218da:	ldr	r3, [r6, #100]	; 0x64
   218dc:	str	r3, [sp, #112]	; 0x70
   218de:	movs	r3, #0
   218e0:	strd	r2, r3, [sp, #100]	; 0x64
   218e4:	add.w	r2, r6, #40	; 0x28
   218e8:	movs	r3, #24
   218ea:	str	r3, [sp, #0]
   218ec:	add	r3, sp, #92	; 0x5c
   218ee:	bl	1b9c8 <btrfs_insert_item@@Base>
   218f2:	movw	r3, #2927	; 0xb6f
   218f6:	mov	r2, r8
   218f8:	mov	r1, r9
   218fa:	str	r0, [sp, #0]
   218fc:	ldr	r0, [pc, #76]	; (2194c <btrfs_make_block_groups@@Base+0x338>)
   218fe:	add	r0, pc
   21900:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   21904:	ldrd	r1, r0, [r6, #40]	; 0x28
   21908:	ldr.w	r3, [r6, #49]	; 0x31
   2190c:	ldr.w	r2, [r6, #53]	; 0x35
   21910:	adds	r4, r3, r1
   21912:	adc.w	r5, r2, r0
   21916:	b.n	216a4 <btrfs_make_block_groups@@Base+0x90>
   21918:	movs	r0, #0
   2191a:	add	sp, #124	; 0x7c
   2191c:	vpop	{d8-d9}
   21920:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21924:	adds	r7, #88	; 0x58
   21926:	movs	r4, r0
   21928:	lsls	r0, r5, #8
   2192a:	movs	r0, r0
   2192c:	ldmia	r4, {r2, r3, r4, r6}
   2192e:	movs	r1, r0
   21930:	ldmia	r4, {r1, r4, r5}
   21932:	movs	r1, r0
   21934:	stmia	r4!, {r0, r1, r3, r4, r5, r6, r7}
   21936:	movs	r1, r0
   21938:	adds	r6, #202	; 0xca
   2193a:	movs	r4, r0
   2193c:	stmia	r4!, {r0, r1, r2, r3, r6}
   2193e:	movs	r1, r0
   21940:	ldmia	r0, {r0, r4, r6, r7}
   21942:	movs	r1, r0
   21944:	ldrh	r0, [r7, #40]	; 0x28
   21946:	movs	r1, r0
   21948:	stmia	r7!, {r0, r1, r4, r5, r6}
   2194a:	movs	r1, r0
   2194c:	ldrh	r6, [r4, #30]
   2194e:	movs	r1, r0

00021950 <btrfs_update_block_group@@Base>:
   21950:	ldr.w	r0, [r0, #464]	; 0x1d0
   21954:	b.w	1f73c <btrfs_lookup_block_group@@Base+0x188>

00021958 <btrfs_free_block_group@@Base>:
   21958:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2195c:	mov	fp, r3
   2195e:	vpush	{d8}
   21962:	mov	sl, r2
   21964:	ldr.w	r3, [pc, #1568]	; 21f88 <btrfs_free_block_group@@Base+0x630>
   21968:	mov	r9, r1
   2196a:	ldr.w	r2, [pc, #1568]	; 21f8c <btrfs_free_block_group@@Base+0x634>
   2196e:	mov	r8, r0
   21970:	add	r3, pc
   21972:	sub	sp, #164	; 0xa4
   21974:	add	r2, pc
   21976:	ldr	r1, [r1, #24]
   21978:	str	r3, [sp, #36]	; 0x24
   2197a:	ldr.w	r3, [pc, #1556]	; 21f90 <btrfs_free_block_group@@Base+0x638>
   2197e:	ldr	r3, [r2, r3]
   21980:	ldr	r3, [r3, #0]
   21982:	str	r3, [sp, #156]	; 0x9c
   21984:	mov.w	r3, #0
   21988:	str	r1, [sp, #24]
   2198a:	bl	18550 <btrfs_alloc_path@@Base>
   2198e:	str	r0, [sp, #28]
   21990:	cmp	r0, #0
   21992:	beq.w	21f74 <btrfs_free_block_group@@Base+0x61c>
   21996:	ldr	r3, [sp, #208]	; 0xd0
   21998:	add	r2, sp, #96	; 0x60
   2199a:	ldr	r1, [sp, #24]
   2199c:	movs	r4, #192	; 0xc0
   2199e:	strd	sl, fp, [sp, #96]	; 0x60
   219a2:	str.w	r3, [sp, #105]	; 0x69
   219a6:	ldr	r3, [sp, #212]	; 0xd4
   219a8:	strb.w	r4, [sp, #104]	; 0x68
   219ac:	str.w	r3, [sp, #109]	; 0x6d
   219b0:	movs	r3, #0
   219b2:	strd	r3, r3, [sp]
   219b6:	mov	r3, r0
   219b8:	mov	r0, r8
   219ba:	bl	1a93c <btrfs_search_slot@@Base>
   219be:	subs	r3, r0, #0
   219c0:	str	r3, [sp, #24]
   219c2:	bgt.w	21f6e <btrfs_free_block_group@@Base+0x616>
   219c6:	bne.n	21a9a <btrfs_free_block_group@@Base+0x142>
   219c8:	ldr	r3, [sp, #28]
   219ca:	movs	r1, #25
   219cc:	ldr	r2, [sp, #28]
   219ce:	ldr	r3, [r3, #0]
   219d0:	ldr	r2, [r2, #32]
   219d2:	adds	r3, #96	; 0x60
   219d4:	mla	r2, r1, r2, r3
   219d8:	ldr.w	r2, [r2, #118]	; 0x76
   219dc:	add	r3, r2
   219de:	ldr.w	r0, [r3, #101]!
   219e2:	ldr	r1, [r3, #4]
   219e4:	orrs.w	r3, r0, r1
   219e8:	beq.n	21a1c <btrfs_free_block_group@@Base+0xc4>
   219ea:	ldr	r2, [sp, #36]	; 0x24
   219ec:	ldr.w	r3, [pc, #1444]	; 21f94 <btrfs_free_block_group@@Base+0x63c>
   219f0:	ldr	r3, [r2, r3]
   219f2:	ldr	r2, [sp, #208]	; 0xd0
   219f4:	strd	sl, fp, [sp]
   219f8:	adds.w	r1, sl, r2
   219fc:	ldr	r2, [sp, #212]	; 0xd4
   219fe:	adc.w	r2, fp, r2
   21a02:	strd	r1, r2, [sp, #8]
   21a06:	ldr.w	r2, [pc, #1424]	; 21f98 <btrfs_free_block_group@@Base+0x640>
   21a0a:	movs	r1, #1
   21a0c:	ldr	r0, [r3, #0]
   21a0e:	add	r2, pc
   21a10:	blx	8a64 <__fprintf_chk@plt+0x4>
   21a14:	mvn.w	r3, #21
   21a18:	str	r3, [sp, #24]
   21a1a:	b.n	21a9a <btrfs_free_block_group@@Base+0x142>
   21a1c:	ldr	r0, [sp, #28]
   21a1e:	bl	18558 <btrfs_release_path@@Base>
   21a22:	ldrd	r2, r3, [sp, #208]	; 0xd0
   21a26:	mov	r0, r9
   21a28:	strd	r2, r3, [sp]
   21a2c:	mov	r2, sl
   21a2e:	mov	r3, fp
   21a30:	bl	21334 <btrfs_pin_extent@@Base>
   21a34:	ldr	r3, [sp, #208]	; 0xd0
   21a36:	ldr.w	r1, [r9, #24]
   21a3a:	strd	sl, fp, [sp, #136]	; 0x88
   21a3e:	str.w	r3, [sp, #145]	; 0x91
   21a42:	ldr	r3, [sp, #212]	; 0xd4
   21a44:	str	r1, [sp, #32]
   21a46:	strb.w	r4, [sp, #144]	; 0x90
   21a4a:	str.w	r3, [sp, #149]	; 0x95
   21a4e:	bl	18550 <btrfs_alloc_path@@Base>
   21a52:	ldr	r1, [sp, #32]
   21a54:	mov	r5, r0
   21a56:	cbnz	r0, 21aba <btrfs_free_block_group@@Base+0x162>
   21a58:	mvn.w	r4, #11
   21a5c:	ldr	r2, [sp, #36]	; 0x24
   21a5e:	ldr.w	r3, [pc, #1332]	; 21f94 <btrfs_free_block_group@@Base+0x63c>
   21a62:	ldr	r3, [r2, r3]
   21a64:	ldr	r2, [sp, #208]	; 0xd0
   21a66:	strd	sl, fp, [sp]
   21a6a:	adds.w	r1, sl, r2
   21a6e:	ldr	r2, [sp, #212]	; 0xd4
   21a70:	adc.w	r2, fp, r2
   21a74:	strd	r1, r2, [sp, #8]
   21a78:	ldr.w	r2, [pc, #1312]	; 21f9c <btrfs_free_block_group@@Base+0x644>
   21a7c:	add	r2, pc
   21a7e:	ldr	r0, [r3, #0]
   21a80:	movs	r1, #1
   21a82:	blx	8a64 <__fprintf_chk@plt+0x4>
   21a86:	ldrd	r2, r3, [sp, #208]	; 0xd0
   21a8a:	mov	r0, r9
   21a8c:	strd	r2, r3, [sp]
   21a90:	mov	r2, sl
   21a92:	mov	r3, fp
   21a94:	bl	214a8 <btrfs_unpin_extent@@Base>
   21a98:	str	r4, [sp, #24]
   21a9a:	ldr	r0, [sp, #28]
   21a9c:	bl	1857e <btrfs_free_path@@Base>
   21aa0:	ldr.w	r2, [pc, #1276]	; 21fa0 <btrfs_free_block_group@@Base+0x648>
   21aa4:	ldr.w	r3, [pc, #1256]	; 21f90 <btrfs_free_block_group@@Base+0x638>
   21aa8:	add	r2, pc
   21aaa:	ldr	r3, [r2, r3]
   21aac:	ldr	r2, [r3, #0]
   21aae:	ldr	r3, [sp, #156]	; 0x9c
   21ab0:	eors	r2, r3
   21ab2:	beq.w	21f7c <btrfs_free_block_group@@Base+0x624>
   21ab6:	blx	8708 <__stack_chk_fail@plt>
   21aba:	mov.w	r3, #4294967295	; 0xffffffff
   21abe:	add	r2, sp, #136	; 0x88
   21ac0:	movs	r6, #1
   21ac2:	strd	r3, r6, [sp]
   21ac6:	mov	r3, r0
   21ac8:	mov	r0, r8
   21aca:	str	r1, [sp, #32]
   21acc:	bl	1a93c <btrfs_search_slot@@Base>
   21ad0:	subs	r4, r0, #0
   21ad2:	bgt.n	21b24 <btrfs_free_block_group@@Base+0x1cc>
   21ad4:	bne.n	21ae2 <btrfs_free_block_group@@Base+0x18a>
   21ad6:	ldr	r1, [sp, #32]
   21ad8:	mov	r2, r5
   21ada:	mov	r0, r8
   21adc:	bl	1ed88 <btrfs_create_tree@@Base+0x30c>
   21ae0:	mov	r4, r0
   21ae2:	mov	r0, r5
   21ae4:	bl	1857e <btrfs_free_path@@Base>
   21ae8:	cmp	r4, #0
   21aea:	blt.n	21a5c <btrfs_free_block_group@@Base+0x104>
   21aec:	ldr.w	r1, [r9, #32]
   21af0:	str	r1, [sp, #32]
   21af2:	bl	18550 <btrfs_alloc_path@@Base>
   21af6:	ldr	r1, [sp, #32]
   21af8:	mov	r5, r0
   21afa:	cbnz	r0, 21b2a <btrfs_free_block_group@@Base+0x1d2>
   21afc:	mvn.w	r4, #11
   21b00:	ldr	r2, [sp, #36]	; 0x24
   21b02:	ldr.w	r3, [pc, #1168]	; 21f94 <btrfs_free_block_group@@Base+0x63c>
   21b06:	ldr	r3, [r2, r3]
   21b08:	ldr	r2, [sp, #208]	; 0xd0
   21b0a:	strd	sl, fp, [sp]
   21b0e:	adds.w	r1, sl, r2
   21b12:	ldr	r2, [sp, #212]	; 0xd4
   21b14:	adc.w	r2, fp, r2
   21b18:	strd	r1, r2, [sp, #8]
   21b1c:	ldr.w	r2, [pc, #1156]	; 21fa4 <btrfs_free_block_group@@Base+0x64c>
   21b20:	add	r2, pc
   21b22:	b.n	21a7e <btrfs_free_block_group@@Base+0x126>
   21b24:	mvn.w	r4, #1
   21b28:	b.n	21ae2 <btrfs_free_block_group@@Base+0x18a>
   21b2a:	movs	r3, #0
   21b2c:	mov.w	r4, #256	; 0x100
   21b30:	movs	r2, #228	; 0xe4
   21b32:	strd	r4, r3, [sp, #116]	; 0x74
   21b36:	strb.w	r2, [sp, #124]	; 0x7c
   21b3a:	add	r2, sp, #116	; 0x74
   21b3c:	strd	r3, r3, [sp]
   21b40:	mov	r3, r0
   21b42:	mov	r0, r8
   21b44:	str.w	sl, [sp, #125]	; 0x7d
   21b48:	str.w	fp, [sp, #129]	; 0x81
   21b4c:	bl	1a93c <btrfs_search_slot@@Base>
   21b50:	subs	r4, r0, #0
   21b52:	blt.n	21bae <btrfs_free_block_group@@Base+0x256>
   21b54:	bne.w	21c60 <btrfs_free_block_group@@Base+0x308>
   21b58:	ldr	r3, [r5, #0]
   21b5a:	movs	r1, #25
   21b5c:	ldr	r2, [r5, #32]
   21b5e:	adds	r3, #96	; 0x60
   21b60:	str	r4, [sp, #32]
   21b62:	mla	r2, r1, r2, r3
   21b66:	ldr.w	r6, [r2, #118]	; 0x76
   21b6a:	add	r3, r6
   21b6c:	adds	r6, #149	; 0x95
   21b6e:	ldrh.w	r3, [r3, #145]	; 0x91
   21b72:	str	r3, [sp, #40]	; 0x28
   21b74:	add	r3, sp, #136	; 0x88
   21b76:	vmov	s16, r3
   21b7a:	ldr	r3, [sp, #32]
   21b7c:	ldr	r2, [sp, #40]	; 0x28
   21b7e:	cmp	r3, r2
   21b80:	bge.n	21bae <btrfs_free_block_group@@Base+0x256>
   21b82:	ldr	r3, [r5, #0]
   21b84:	adds	r3, #96	; 0x60
   21b86:	adds	r1, r3, r6
   21b88:	ldr	r2, [r3, r6]
   21b8a:	ldr	r3, [r1, #4]
   21b8c:	ldr	r4, [r1, #12]
   21b8e:	str	r2, [sp, #56]	; 0x38
   21b90:	str	r3, [sp, #44]	; 0x2c
   21b92:	ldr	r3, [r1, #8]
   21b94:	ldr.w	r1, [r9, #36]	; 0x24
   21b98:	str	r3, [sp, #52]	; 0x34
   21b9a:	str	r1, [sp, #48]	; 0x30
   21b9c:	bl	18550 <btrfs_alloc_path@@Base>
   21ba0:	ldrd	r1, r3, [sp, #48]	; 0x30
   21ba4:	ldr	r2, [sp, #56]	; 0x38
   21ba6:	mov	r7, r0
   21ba8:	cbnz	r0, 21c06 <btrfs_free_block_group@@Base+0x2ae>
   21baa:	mvn.w	r4, #11
   21bae:	mov	r0, r5
   21bb0:	bl	1857e <btrfs_free_path@@Base>
   21bb4:	cmp	r4, #0
   21bb6:	blt.n	21b00 <btrfs_free_block_group@@Base+0x1a8>
   21bb8:	ldr.w	r1, [r9, #32]
   21bbc:	mov.w	r2, #256	; 0x100
   21bc0:	movs	r3, #0
   21bc2:	str.w	sl, [sp, #145]	; 0x91
   21bc6:	strd	r2, r3, [sp, #136]	; 0x88
   21bca:	movs	r3, #228	; 0xe4
   21bcc:	str	r1, [sp, #32]
   21bce:	str.w	fp, [sp, #149]	; 0x95
   21bd2:	strb.w	r3, [sp, #144]	; 0x90
   21bd6:	bl	18550 <btrfs_alloc_path@@Base>
   21bda:	ldr	r1, [sp, #32]
   21bdc:	mov	r6, r0
   21bde:	cmp	r0, #0
   21be0:	bne.n	21c66 <btrfs_free_block_group@@Base+0x30e>
   21be2:	mvn.w	r4, #11
   21be6:	ldr	r2, [sp, #36]	; 0x24
   21be8:	ldr	r3, [pc, #936]	; (21f94 <btrfs_free_block_group@@Base+0x63c>)
   21bea:	ldr	r3, [r2, r3]
   21bec:	ldr	r2, [sp, #208]	; 0xd0
   21bee:	strd	sl, fp, [sp]
   21bf2:	adds.w	r1, sl, r2
   21bf6:	ldr	r2, [sp, #212]	; 0xd4
   21bf8:	adc.w	r2, fp, r2
   21bfc:	strd	r1, r2, [sp, #8]
   21c00:	ldr	r2, [pc, #932]	; (21fa8 <btrfs_free_block_group@@Base+0x650>)
   21c02:	add	r2, pc
   21c04:	b.n	21a7e <btrfs_free_block_group@@Base+0x126>
   21c06:	str	r2, [sp, #136]	; 0x88
   21c08:	movs	r0, #1
   21c0a:	ldr	r2, [sp, #44]	; 0x2c
   21c0c:	str.w	r3, [sp, #145]	; 0x91
   21c10:	mov.w	r3, #4294967295	; 0xffffffff
   21c14:	strd	r3, r0, [sp]
   21c18:	mov	r3, r7
   21c1a:	str	r2, [sp, #140]	; 0x8c
   21c1c:	mov	r0, r8
   21c1e:	mvn.w	r2, #51	; 0x33
   21c22:	strb.w	r2, [sp, #144]	; 0x90
   21c26:	vmov	r2, s16
   21c2a:	str.w	r4, [sp, #149]	; 0x95
   21c2e:	str	r1, [sp, #44]	; 0x2c
   21c30:	bl	1a93c <btrfs_search_slot@@Base>
   21c34:	subs	r4, r0, #0
   21c36:	blt.n	21c46 <btrfs_free_block_group@@Base+0x2ee>
   21c38:	bne.n	21c5a <btrfs_free_block_group@@Base+0x302>
   21c3a:	ldr	r1, [sp, #44]	; 0x2c
   21c3c:	mov	r2, r7
   21c3e:	mov	r0, r8
   21c40:	bl	1ed88 <btrfs_create_tree@@Base+0x30c>
   21c44:	mov	r4, r0
   21c46:	mov	r0, r7
   21c48:	adds	r6, #32
   21c4a:	bl	1857e <btrfs_free_path@@Base>
   21c4e:	cmp	r4, #0
   21c50:	blt.n	21bae <btrfs_free_block_group@@Base+0x256>
   21c52:	ldr	r3, [sp, #32]
   21c54:	adds	r3, #1
   21c56:	str	r3, [sp, #32]
   21c58:	b.n	21b7a <btrfs_free_block_group@@Base+0x222>
   21c5a:	mvn.w	r4, #1
   21c5e:	b.n	21c46 <btrfs_free_block_group@@Base+0x2ee>
   21c60:	mvn.w	r4, #1
   21c64:	b.n	21bae <btrfs_free_block_group@@Base+0x256>
   21c66:	mov.w	r3, #4294967295	; 0xffffffff
   21c6a:	movs	r2, #1
   21c6c:	strd	r3, r2, [sp]
   21c70:	mov	r3, r0
   21c72:	add	r2, sp, #136	; 0x88
   21c74:	mov	r0, r8
   21c76:	str	r1, [sp, #40]	; 0x28
   21c78:	bl	1a93c <btrfs_search_slot@@Base>
   21c7c:	subs	r3, r0, #0
   21c7e:	str	r3, [sp, #32]
   21c80:	bgt.w	21d96 <btrfs_free_block_group@@Base+0x43e>
   21c84:	bne.n	21d86 <btrfs_free_block_group@@Base+0x42e>
   21c86:	ldr	r3, [r6, #0]
   21c88:	movs	r0, #25
   21c8a:	ldr	r2, [r6, #32]
   21c8c:	adds	r3, #96	; 0x60
   21c8e:	ldr	r1, [sp, #40]	; 0x28
   21c90:	mla	r2, r0, r2, r3
   21c94:	mov	r0, r8
   21c96:	ldr.w	r2, [r2, #118]	; 0x76
   21c9a:	add	r3, r2
   21c9c:	mov	r2, r6
   21c9e:	ldr.w	r5, [r3, #125]	; 0x7d
   21ca2:	bl	1ed88 <btrfs_create_tree@@Base+0x30c>
   21ca6:	subs	r4, r0, #0
   21ca8:	blt.n	21d9a <btrfs_free_block_group@@Base+0x442>
   21caa:	ldr	r3, [sp, #32]
   21cac:	and.w	r2, r5, #2
   21cb0:	orrs	r3, r2
   21cb2:	beq.n	21d9a <btrfs_free_block_group@@Base+0x442>
   21cb4:	ldr.w	r3, [r9, #308]	; 0x134
   21cb8:	ldr	r5, [sp, #32]
   21cba:	str	r3, [sp, #40]	; 0x28
   21cbc:	ldr.w	r3, [r3, #160]	; 0xa0
   21cc0:	str	r3, [sp, #44]	; 0x2c
   21cc2:	ldr	r3, [sp, #40]	; 0x28
   21cc4:	addw	r3, r3, #811	; 0x32b
   21cc8:	str	r3, [sp, #48]	; 0x30
   21cca:	ldrd	r3, r4, [sp, #136]	; 0x88
   21cce:	strd	r3, r4, [sp, #80]	; 0x50
   21cd2:	ldr.w	r3, [sp, #145]	; 0x91
   21cd6:	str	r3, [sp, #56]	; 0x38
   21cd8:	ldr.w	r3, [sp, #149]	; 0x95
   21cdc:	str	r3, [sp, #60]	; 0x3c
   21cde:	ldrb.w	r3, [sp, #144]	; 0x90
   21ce2:	str	r3, [sp, #88]	; 0x58
   21ce4:	ldr	r3, [pc, #708]	; (21fac <btrfs_free_block_group@@Base+0x654>)
   21ce6:	add	r3, pc
   21ce8:	addw	r2, r3, #485	; 0x1e5
   21cec:	ldr	r3, [pc, #704]	; (21fb0 <btrfs_free_block_group@@Base+0x658>)
   21cee:	add	r3, pc
   21cf0:	vmov	s16, r3
   21cf4:	ldr	r3, [sp, #44]	; 0x2c
   21cf6:	cmp	r3, r5
   21cf8:	bhi.n	21d02 <btrfs_free_block_group@@Base+0x3aa>
   21cfa:	mvn.w	r3, #1
   21cfe:	str	r3, [sp, #32]
   21d00:	b.n	21d86 <btrfs_free_block_group@@Base+0x42e>
   21d02:	ldr	r3, [sp, #48]	; 0x30
   21d04:	adds	r7, r3, r5
   21d06:	ldr	r3, [r3, r5]
   21d08:	str	r3, [sp, #64]	; 0x40
   21d0a:	ldr	r3, [r7, #4]
   21d0c:	str	r3, [sp, #68]	; 0x44
   21d0e:	ldrb	r3, [r7, #8]
   21d10:	cmp	r3, #228	; 0xe4
   21d12:	bne.n	21d90 <btrfs_free_block_group@@Base+0x438>
   21d14:	ldrh.w	r4, [r7, #61]	; 0x3d
   21d18:	ldr	r0, [pc, #664]	; (21fb4 <btrfs_free_block_group@@Base+0x65c>)
   21d1a:	clz	r3, r4
   21d1e:	vmov	r1, s16
   21d22:	add	r0, pc
   21d24:	lsls	r4, r4, #5
   21d26:	lsrs	r3, r3, #5
   21d28:	str	r3, [sp, #0]
   21d2a:	mov.w	r3, #322	; 0x142
   21d2e:	str	r2, [sp, #92]	; 0x5c
   21d30:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   21d34:	ldrd	r0, r1, [sp, #64]	; 0x40
   21d38:	add.w	r3, r4, #65	; 0x41
   21d3c:	str	r3, [sp, #52]	; 0x34
   21d3e:	ldrd	r2, r3, [sp, #80]	; 0x50
   21d42:	cmp	r3, r1
   21d44:	it	eq
   21d46:	cmpeq	r2, r0
   21d48:	ldr	r2, [sp, #92]	; 0x5c
   21d4a:	bne.n	21d8a <btrfs_free_block_group@@Base+0x432>
   21d4c:	ldrd	r3, r4, [sp, #56]	; 0x38
   21d50:	ldr.w	r1, [r7, #13]
   21d54:	ldr.w	r0, [r7, #9]
   21d58:	cmp	r4, r1
   21d5a:	it	eq
   21d5c:	cmpeq	r3, r0
   21d5e:	bne.n	21d8a <btrfs_free_block_group@@Base+0x432>
   21d60:	ldr	r3, [sp, #88]	; 0x58
   21d62:	cmp	r3, #228	; 0xe4
   21d64:	bne.n	21d8a <btrfs_free_block_group@@Base+0x432>
   21d66:	ldr	r3, [sp, #52]	; 0x34
   21d68:	mov	r0, r7
   21d6a:	adds	r1, r5, r3
   21d6c:	ldr	r3, [sp, #44]	; 0x2c
   21d6e:	subs	r2, r3, r1
   21d70:	ldr	r3, [sp, #48]	; 0x30
   21d72:	add	r3, r1
   21d74:	mov	r1, r3
   21d76:	blx	8610 <memmove@plt+0x4>
   21d7a:	ldr	r3, [sp, #44]	; 0x2c
   21d7c:	ldr	r2, [sp, #52]	; 0x34
   21d7e:	subs	r4, r3, r2
   21d80:	ldr	r3, [sp, #40]	; 0x28
   21d82:	str.w	r4, [r3, #160]	; 0xa0
   21d86:	ldr	r4, [sp, #32]
   21d88:	b.n	21d9a <btrfs_free_block_group@@Base+0x442>
   21d8a:	ldr	r3, [sp, #52]	; 0x34
   21d8c:	add	r5, r3
   21d8e:	b.n	21cf4 <btrfs_free_block_group@@Base+0x39c>
   21d90:	mvn.w	r3, #4
   21d94:	b.n	21cfe <btrfs_free_block_group@@Base+0x3a6>
   21d96:	mvn.w	r4, #1
   21d9a:	mov	r0, r6
   21d9c:	bl	1857e <btrfs_free_path@@Base>
   21da0:	cmp	r4, #0
   21da2:	blt.w	21be6 <btrfs_free_block_group@@Base+0x28e>
   21da6:	mov	r2, sl
   21da8:	mov	r3, fp
   21daa:	mov	r0, r9
   21dac:	bl	1f5b4 <btrfs_lookup_block_group@@Base>
   21db0:	mov	r6, r0
   21db2:	cbnz	r0, 21dce <btrfs_free_block_group@@Base+0x476>
   21db4:	mvn.w	r3, #1
   21db8:	str	r3, [sp, #24]
   21dba:	ldrd	r3, r4, [sp, #208]	; 0xd0
   21dbe:	mov	r2, sl
   21dc0:	mov	r0, r9
   21dc2:	strd	r3, r4, [sp]
   21dc6:	mov	r3, fp
   21dc8:	bl	214a8 <btrfs_unpin_extent@@Base>
   21dcc:	b.n	21a9a <btrfs_free_block_group@@Base+0x142>
   21dce:	ldr	r3, [r0, #64]	; 0x40
   21dd0:	ldrd	r4, r5, [r0, #96]	; 0x60
   21dd4:	cbz	r3, 21de0 <btrfs_free_block_group@@Base+0x488>
   21dd6:	bl	27314 <btrfs_remove_free_space_cache@@Base>
   21dda:	ldr	r0, [r6, #64]	; 0x40
   21ddc:	blx	8620 <free@plt+0x4>
   21de0:	mov.w	r3, #4294967295	; 0xffffffff
   21de4:	str	r3, [sp, #8]
   21de6:	ldr	r3, [sp, #208]	; 0xd0
   21de8:	add.w	r0, r9, #128	; 0x80
   21dec:	ldr	r2, [sp, #212]	; 0xd4
   21dee:	adds.w	r3, r3, #4294967295	; 0xffffffff
   21df2:	adc.w	r2, r2, #4294967295	; 0xffffffff
   21df6:	adds.w	r3, r3, sl
   21dfa:	adc.w	r2, r2, fp
   21dfe:	strd	r3, r2, [sp]
   21e02:	mov	r2, sl
   21e04:	mov	r3, fp
   21e06:	bl	16e46 <clear_extent_bits@@Base>
   21e0a:	mov	r2, r4
   21e0c:	mov	r3, r5
   21e0e:	mov	r0, r9
   21e10:	bl	1ec44 <btrfs_create_tree@@Base+0x1c8>
   21e14:	cmp	r0, #0
   21e16:	beq.n	21db4 <btrfs_free_block_group@@Base+0x45c>
   21e18:	ldrd	r4, r5, [r0, #8]
   21e1c:	ldrd	r2, r3, [sp, #208]	; 0xd0
   21e20:	cmp	r5, r3
   21e22:	it	eq
   21e24:	cmpeq	r4, r2
   21e26:	bcs.n	21e4c <btrfs_free_block_group@@Base+0x4f4>
   21e28:	ldr	r2, [sp, #36]	; 0x24
   21e2a:	ldr	r3, [pc, #360]	; (21f94 <btrfs_free_block_group@@Base+0x63c>)
   21e2c:	ldr	r3, [r2, r3]
   21e2e:	ldrd	r1, r2, [sp, #208]	; 0xd0
   21e32:	strd	r4, r5, [sp, #8]
   21e36:	strd	r1, r2, [sp]
   21e3a:	movs	r1, #1
   21e3c:	ldr	r2, [pc, #376]	; (21fb8 <btrfs_free_block_group@@Base+0x660>)
   21e3e:	ldr	r0, [r3, #0]
   21e40:	add	r2, pc
   21e42:	blx	8a64 <__fprintf_chk@plt+0x4>
   21e46:	mvn.w	r3, #21
   21e4a:	b.n	21db8 <btrfs_free_block_group@@Base+0x460>
   21e4c:	ldr	r3, [sp, #208]	; 0xd0
   21e4e:	subs	r2, r4, r3
   21e50:	ldr	r3, [sp, #212]	; 0xd4
   21e52:	sbc.w	r3, r5, r3
   21e56:	strd	r2, r3, [r0, #8]
   21e5a:	mov	r0, r6
   21e5c:	add.w	r6, r9, #228	; 0xe4
   21e60:	blx	8620 <free@plt+0x4>
   21e64:	mov	r2, sl
   21e66:	mov	r3, fp
   21e68:	mov	r0, r6
   21e6a:	bl	166dc <search_cache_extent@@Base>
   21e6e:	mov	r4, r0
   21e70:	cmp	r0, #0
   21e72:	beq.n	21db4 <btrfs_free_block_group@@Base+0x45c>
   21e74:	ldrd	r2, r3, [r0, #24]
   21e78:	cmp	fp, r3
   21e7a:	it	eq
   21e7c:	cmpeq	sl, r2
   21e7e:	bne.n	21db4 <btrfs_free_block_group@@Base+0x45c>
   21e80:	ldr	r5, [sp, #24]
   21e82:	add.w	r3, r0, #72	; 0x48
   21e86:	str	r3, [sp, #32]
   21e88:	ldr	r0, [r4, #64]	; 0x40
   21e8a:	cmp	r5, r0
   21e8c:	blt.n	21e9e <btrfs_free_block_group@@Base+0x546>
   21e8e:	mov	r0, r6
   21e90:	mov	r1, r4
   21e92:	bl	167b4 <remove_cache_extent@@Base>
   21e96:	mov	r0, r4
   21e98:	blx	8620 <free@plt+0x4>
   21e9c:	b.n	21dba <btrfs_free_block_group@@Base+0x462>
   21e9e:	ldr	r2, [sp, #32]
   21ea0:	lsls	r3, r5, #4
   21ea2:	ldr	r7, [r2, r3]
   21ea4:	ldr	r3, [r4, #40]	; 0x28
   21ea6:	and.w	r2, r3, #2040	; 0x7f8
   21eaa:	str	r2, [sp, #16]
   21eac:	movs	r2, #0
   21eae:	str	r2, [sp, #20]
   21eb0:	ldrd	r1, r2, [sp, #16]
   21eb4:	cmp	r2, #0
   21eb6:	it	eq
   21eb8:	cmpeq	r1, #128	; 0x80
   21eba:	beq.n	21f32 <btrfs_free_block_group@@Base+0x5da>
   21ebc:	cmp	r2, #0
   21ebe:	it	eq
   21ec0:	cmpeq	r1, #129	; 0x81
   21ec2:	bcs.n	21f0a <btrfs_free_block_group@@Base+0x5b2>
   21ec4:	cmp	r2, #0
   21ec6:	it	eq
   21ec8:	cmpeq	r1, #64	; 0x40
   21eca:	beq.n	21f66 <btrfs_free_block_group@@Base+0x60e>
   21ecc:	cmp	r2, #0
   21ece:	it	eq
   21ed0:	cmpeq	r1, #65	; 0x41
   21ed2:	bcs.n	21eee <btrfs_free_block_group@@Base+0x596>
   21ed4:	cmp	r2, #0
   21ed6:	it	eq
   21ed8:	cmpeq	r1, #32
   21eda:	beq.n	21f2e <btrfs_free_block_group@@Base+0x5d6>
   21edc:	and.w	r3, r3, #2024	; 0x7e8
   21ee0:	str	r3, [sp, #72]	; 0x48
   21ee2:	movs	r3, #0
   21ee4:	str	r3, [sp, #76]	; 0x4c
   21ee6:	ldrd	r2, r3, [sp, #72]	; 0x48
   21eea:	orrs	r3, r2
   21eec:	beq.n	21f2e <btrfs_free_block_group@@Base+0x5d6>
   21eee:	ldr	r2, [pc, #204]	; (21fbc <btrfs_free_block_group@@Base+0x664>)
   21ef0:	movs	r3, #1
   21ef2:	ldr	r1, [pc, #204]	; (21fc0 <btrfs_free_block_group@@Base+0x668>)
   21ef4:	ldr	r0, [pc, #204]	; (21fc4 <btrfs_free_block_group@@Base+0x66c>)
   21ef6:	add	r2, pc
   21ef8:	str	r3, [sp, #0]
   21efa:	addw	r2, r2, #507	; 0x1fb
   21efe:	add	r1, pc
   21f00:	add	r0, pc
   21f02:	movw	r3, #3160	; 0xc58
   21f06:	bl	1eff4 <btrfs_create_tree@@Base+0x578>
   21f0a:	ldrd	r2, r3, [sp, #16]
   21f0e:	cmp	r3, #0
   21f10:	it	eq
   21f12:	cmpeq.w	r2, #256	; 0x100
   21f16:	beq.n	21f62 <btrfs_free_block_group@@Base+0x60a>
   21f18:	bcc.n	21eee <btrfs_free_block_group@@Base+0x596>
   21f1a:	cmp	r3, #0
   21f1c:	it	eq
   21f1e:	cmpeq.w	r2, #512	; 0x200
   21f22:	beq.n	21f2e <btrfs_free_block_group@@Base+0x5d6>
   21f24:	cmp	r3, #0
   21f26:	it	eq
   21f28:	cmpeq.w	r2, #1024	; 0x400
   21f2c:	bne.n	21eee <btrfs_free_block_group@@Base+0x596>
   21f2e:	movs	r0, #1
   21f30:	b.n	21f34 <btrfs_free_block_group@@Base+0x5dc>
   21f32:	subs	r0, #1
   21f34:	asrs	r3, r0, #31
   21f36:	mov	r2, r0
   21f38:	ldrd	r0, r1, [r4, #32]
   21f3c:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   21f40:	ldrd	r3, r2, [r7, #80]	; 0x50
   21f44:	subs	r0, r3, r0
   21f46:	sbc.w	r1, r2, r1
   21f4a:	strd	r0, r1, [r7, #80]	; 0x50
   21f4e:	mov	r1, r7
   21f50:	mov	r0, r8
   21f52:	bl	28dd8 <btrfs_update_device@@Base>
   21f56:	subs	r3, r0, #0
   21f58:	str	r3, [sp, #24]
   21f5a:	blt.w	21dba <btrfs_free_block_group@@Base+0x462>
   21f5e:	adds	r5, #1
   21f60:	b.n	21e88 <btrfs_free_block_group@@Base+0x530>
   21f62:	subs	r0, #2
   21f64:	b.n	21f34 <btrfs_free_block_group@@Base+0x5dc>
   21f66:	ldr	r1, [r4, #68]	; 0x44
   21f68:	bl	39698 <btrfs_util_strerror@@Base+0x290>
   21f6c:	b.n	21f34 <btrfs_free_block_group@@Base+0x5dc>
   21f6e:	mvn.w	r3, #63	; 0x3f
   21f72:	b.n	21a18 <btrfs_free_block_group@@Base+0xc0>
   21f74:	mvn.w	r3, #11
   21f78:	str	r3, [sp, #24]
   21f7a:	b.n	21aa0 <btrfs_free_block_group@@Base+0x148>
   21f7c:	ldr	r0, [sp, #24]
   21f7e:	add	sp, #164	; 0xa4
   21f80:	vpop	{d8}
   21f84:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21f88:	adds	r4, #16
   21f8a:	movs	r4, r0
   21f8c:	adds	r4, #12
   21f8e:	movs	r4, r0
   21f90:	lsls	r0, r5, #8
   21f92:	movs	r0, r0
   21f94:	lsls	r0, r7, #8
   21f96:	movs	r0, r0
   21f98:	stmia	r6!, {r3, r5}
   21f9a:	movs	r1, r0
   21f9c:	stmia	r5!, {r0, r3, r5, r6, r7}
   21f9e:	movs	r1, r0
   21fa0:	adds	r2, #216	; 0xd8
   21fa2:	movs	r4, r0
   21fa4:	stmia	r5!, {r1, r2, r4, r5, r6}
   21fa6:	movs	r1, r0
   21fa8:	stmia	r4!, {r0, r1, r4, r6, r7}
   21faa:	movs	r1, r0
   21fac:	stmia	r5!, {r3, r5, r6, r7}
   21fae:	movs	r1, r0
   21fb0:	ldrh	r6, [r4, #12]
   21fb2:	movs	r1, r0
   21fb4:	stmia	r3!, {r1, r5, r7}
   21fb6:	movs	r1, r0
   21fb8:	stmia	r2!, {r0, r1, r3, r4, r5, r7}
   21fba:	movs	r1, r0
   21fbc:	stmia	r3!, {r3, r4, r6, r7}
   21fbe:	movs	r1, r0
   21fc0:	pop	{r0, r1, r2, r3, r4, r7}
   21fc2:	movs	r1, r0
   21fc4:	ittte	<und>
   21fc6:	mov<und>	r1, r0

00021fc8 <free_excluded_extents@@Base>:
   21fc8:	push<und>	{r4, r5, lr}
   21fca:	sub<und>	sp, #20
   21fcc:	ldrdal	r2, r3, [r1, #40]	; 0x28
   21fd0:	movs	r4, #4
   21fd2:	str	r4, [sp, #8]
   21fd4:	adds	r0, #160	; 0xa0
   21fd6:	ldr.w	r4, [r1, #49]	; 0x31
   21fda:	ldr.w	r5, [r1, #53]	; 0x35
   21fde:	adds	r4, r4, r2
   21fe0:	adc.w	r5, r3, r5
   21fe4:	adds.w	r4, r4, #4294967295	; 0xffffffff
   21fe8:	adc.w	r5, r5, #4294967295	; 0xffffffff
   21fec:	strd	r4, r5, [sp]
   21ff0:	bl	16e46 <clear_extent_bits@@Base>
   21ff4:	add	sp, #20
   21ff6:	pop	{r4, r5, pc}

00021ff8 <exclude_super_stripes@@Base>:
   21ff8:	ldr	r2, [pc, #392]	; (22184 <exclude_super_stripes@@Base+0x18c>)
   21ffa:	ldr	r3, [pc, #396]	; (22188 <exclude_super_stripes@@Base+0x190>)
   21ffc:	add	r2, pc
   21ffe:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22002:	sub	sp, #68	; 0x44
   22004:	ldr	r3, [r2, r3]
   22006:	mov	r5, r0
   22008:	mov	r4, r1
   2200a:	ldr	r3, [r3, #0]
   2200c:	str	r3, [sp, #60]	; 0x3c
   2200e:	mov.w	r3, #0
   22012:	ldrd	r2, r3, [r1, #40]	; 0x28
   22016:	cmp	r3, #0
   22018:	it	eq
   2201a:	cmpeq.w	r2, #65536	; 0x10000
   2201e:	bcs.n	22058 <exclude_super_stripes@@Base+0x60>
   22020:	ldrd	r0, r1, [r1, #80]	; 0x50
   22024:	rsb	ip, r2, #65536	; 0x10000
   22028:	str.w	ip, [sp, #52]	; 0x34
   2202c:	adds.w	r0, r0, ip
   22030:	adc.w	r1, r1, #0
   22034:	adds.w	r6, r2, #4294967295	; 0xffffffff
   22038:	adc.w	r7, r3, #4294967295	; 0xffffffff
   2203c:	adds.w	r6, r6, ip
   22040:	strd	r0, r1, [r4, #80]	; 0x50
   22044:	adc.w	r7, r7, #0
   22048:	movs	r1, #4
   2204a:	add.w	r0, r5, #160	; 0xa0
   2204e:	str	r1, [sp, #8]
   22050:	strd	r6, r7, [sp]
   22054:	bl	16fbc <set_extent_bits@@Base>
   22058:	movs	r6, #0
   2205a:	add.w	r7, r5, #160	; 0xa0
   2205e:	mov.w	r2, #65536	; 0x10000
   22062:	mov	r3, r6
   22064:	add	r1, sp, #52	; 0x34
   22066:	str	r1, [sp, #44]	; 0x2c
   22068:	ldr	r1, [sp, #44]	; 0x2c
   2206a:	mov	r0, r5
   2206c:	strd	r2, r3, [sp]
   22070:	ldrd	r2, r3, [r4, #40]	; 0x28
   22074:	str	r1, [sp, #16]
   22076:	add	r1, sp, #56	; 0x38
   22078:	str	r1, [sp, #12]
   2207a:	add	r1, sp, #48	; 0x30
   2207c:	str	r1, [sp, #8]
   2207e:	bl	29dfe <btrfs_rmap_block@@Base>
   22082:	mov	r3, r0
   22084:	cbnz	r0, 2209e <exclude_super_stripes@@Base+0xa6>
   22086:	ldr	r3, [sp, #56]	; 0x38
   22088:	ldr	r0, [sp, #48]	; 0x30
   2208a:	subs	r2, r3, #1
   2208c:	str	r2, [sp, #56]	; 0x38
   2208e:	cbnz	r3, 220d2 <exclude_super_stripes@@Base+0xda>
   22090:	adds	r6, #1
   22092:	str	r3, [sp, #32]
   22094:	blx	8620 <free@plt+0x4>
   22098:	cmp	r6, #3
   2209a:	ldr	r3, [sp, #32]
   2209c:	bne.n	220b2 <exclude_super_stripes@@Base+0xba>
   2209e:	ldr	r1, [pc, #236]	; (2218c <exclude_super_stripes@@Base+0x194>)
   220a0:	ldr	r2, [pc, #228]	; (22188 <exclude_super_stripes@@Base+0x190>)
   220a2:	add	r1, pc
   220a4:	ldr	r2, [r1, r2]
   220a6:	ldr	r1, [r2, #0]
   220a8:	ldr	r2, [sp, #60]	; 0x3c
   220aa:	eors	r1, r2
   220ac:	beq.n	2217a <exclude_super_stripes@@Base+0x182>
   220ae:	blx	8708 <__stack_chk_fail@plt>
   220b2:	movs	r2, #12
   220b4:	mul.w	r1, r2, r6
   220b8:	mov.w	r2, #16384	; 0x4000
   220bc:	sub.w	r3, r1, #32
   220c0:	rsb	r0, r1, #32
   220c4:	lsl.w	r3, r2, r3
   220c8:	lsr.w	r0, r2, r0
   220cc:	orrs	r3, r0
   220ce:	lsls	r2, r1
   220d0:	b.n	22068 <exclude_super_stripes@@Base+0x70>
   220d2:	add.w	r0, r0, r2, lsl #3
   220d6:	ldr.w	r1, [r4, #49]	; 0x31
   220da:	ldrd	r2, r3, [r4, #40]	; 0x28
   220de:	ldrd	sl, fp, [r0]
   220e2:	ldr.w	r0, [r4, #53]	; 0x35
   220e6:	adds	r1, r1, r2
   220e8:	str	r1, [sp, #24]
   220ea:	adc.w	r1, r0, r3
   220ee:	str	r1, [sp, #28]
   220f0:	ldrd	r0, r1, [sp, #24]
   220f4:	cmp	fp, r1
   220f6:	it	eq
   220f8:	cmpeq	sl, r0
   220fa:	bcs.n	22086 <exclude_super_stripes@@Base+0x8e>
   220fc:	ldr.w	ip, [sp, #52]	; 0x34
   22100:	mov	r0, ip
   22102:	asrs	r1, r0, #31
   22104:	strd	r0, r1, [sp, #32]
   22108:	adds.w	r0, sl, ip
   2210c:	adc.w	r1, fp, ip, asr #31
   22110:	cmp	r3, r1
   22112:	it	eq
   22114:	cmpeq	r2, r0
   22116:	bcs.n	22086 <exclude_super_stripes@@Base+0x8e>
   22118:	cmp	fp, r3
   2211a:	it	eq
   2211c:	cmpeq	sl, r2
   2211e:	bcs.n	22158 <exclude_super_stripes@@Base+0x160>
   22120:	subs.w	r8, r0, r2
   22124:	sbc.w	r9, r1, r3
   22128:	ldrd	r1, r0, [r4, #80]	; 0x50
   2212c:	adds.w	r1, r1, r8
   22130:	adc.w	r0, r0, r9
   22134:	strd	r1, r0, [r4, #80]	; 0x50
   22138:	movs	r1, #4
   2213a:	str	r1, [sp, #8]
   2213c:	adds.w	r1, r2, r8
   22140:	adc.w	r0, r3, r9
   22144:	adds.w	r1, r1, #4294967295	; 0xffffffff
   22148:	adc.w	r0, r0, #4294967295	; 0xffffffff
   2214c:	strd	r1, r0, [sp]
   22150:	mov	r0, r7
   22152:	bl	16fbc <set_extent_bits@@Base>
   22156:	b.n	22086 <exclude_super_stripes@@Base+0x8e>
   22158:	ldr	r3, [sp, #24]
   2215a:	subs.w	r8, r3, sl
   2215e:	ldr	r3, [sp, #28]
   22160:	sbc.w	r9, r3, fp
   22164:	ldrd	r2, r3, [sp, #32]
   22168:	cmp	r3, r9
   2216a:	it	eq
   2216c:	cmpeq	r2, r8
   2216e:	itt	cc
   22170:	movcc	r8, r2
   22172:	movcc	r9, r3
   22174:	mov	r2, sl
   22176:	mov	r3, fp
   22178:	b.n	22128 <exclude_super_stripes@@Base+0x130>
   2217a:	mov	r0, r3
   2217c:	add	sp, #68	; 0x44
   2217e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22182:	nop
   22184:	cmp	r5, #132	; 0x84
   22186:	movs	r4, r0
   22188:	lsls	r0, r5, #8
   2218a:	movs	r0, r0
   2218c:	cmp	r4, #222	; 0xde
   2218e:	movs	r4, r0

00022190 <btrfs_read_block_groups@@Base>:
   22190:	ldr	r2, [pc, #660]	; (22428 <btrfs_read_block_groups@@Base+0x298>)
   22192:	ldr	r3, [pc, #664]	; (2242c <btrfs_read_block_groups@@Base+0x29c>)
   22194:	add	r2, pc
   22196:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2219a:	sub	sp, #204	; 0xcc
   2219c:	ldr	r3, [r2, r3]
   2219e:	movs	r6, #0
   221a0:	add.w	r9, sp, #104	; 0x68
   221a4:	ldr.w	r8, [r0, #24]
   221a8:	mov	r4, r0
   221aa:	mov	fp, r6
   221ac:	add	r0, sp, #128	; 0x80
   221ae:	ldr	r3, [r3, #0]
   221b0:	str	r3, [sp, #196]	; 0xc4
   221b2:	mov.w	r3, #0
   221b6:	movs	r3, #192	; 0xc0
   221b8:	strd	r6, r6, [sp, #64]	; 0x40
   221bc:	strb.w	r6, [sp, #73]	; 0x49
   221c0:	strb.w	r6, [sp, #74]	; 0x4a
   221c4:	strb.w	r6, [sp, #75]	; 0x4b
   221c8:	strb.w	r6, [sp, #76]	; 0x4c
   221cc:	strb.w	r6, [sp, #77]	; 0x4d
   221d0:	strb.w	r6, [sp, #78]	; 0x4e
   221d4:	strb.w	r6, [sp, #79]	; 0x4f
   221d8:	strb.w	r6, [sp, #80]	; 0x50
   221dc:	strb.w	r3, [sp, #72]	; 0x48
   221e0:	bl	18548 <btrfs_init_path@@Base>
   221e4:	str	r6, [sp, #52]	; 0x34
   221e6:	add.w	sl, sp, #128	; 0x80
   221ea:	movs	r5, #0
   221ec:	add	r2, sp, #64	; 0x40
   221ee:	mov	r1, r8
   221f0:	mov	r3, sl
   221f2:	mov	r0, r5
   221f4:	strd	r5, r5, [sp]
   221f8:	bl	1a93c <btrfs_search_slot@@Base>
   221fc:	subs	r7, r0, #0
   221fe:	blt.n	22220 <btrfs_read_block_groups@@Base+0x90>
   22200:	ldr	r0, [sp, #128]	; 0x80
   22202:	ldr	r2, [sp, #160]	; 0xa0
   22204:	ldr.w	r3, [r0, #192]	; 0xc0
   22208:	cmp	r3, r2
   2220a:	bhi.n	2223c <btrfs_read_block_groups@@Base+0xac>
   2220c:	ldr.w	r0, [r8, #464]	; 0x1d0
   22210:	mov	r1, sl
   22212:	strb.w	r5, [sp, #193]	; 0xc1
   22216:	bl	1bd70 <btrfs_next_sibling_tree_block@@Base>
   2221a:	subs	r7, r0, #0
   2221c:	beq.n	22200 <btrfs_read_block_groups@@Base+0x70>
   2221e:	bge.n	22264 <btrfs_read_block_groups@@Base+0xd4>
   22220:	add	r0, sp, #128	; 0x80
   22222:	bl	18558 <btrfs_release_path@@Base>
   22226:	ldr	r2, [pc, #520]	; (22430 <btrfs_read_block_groups@@Base+0x2a0>)
   22228:	ldr	r3, [pc, #512]	; (2242c <btrfs_read_block_groups@@Base+0x29c>)
   2222a:	add	r2, pc
   2222c:	ldr	r3, [r2, r3]
   2222e:	ldr	r2, [r3, #0]
   22230:	ldr	r3, [sp, #196]	; 0xc4
   22232:	eors	r2, r3
   22234:	beq.w	2241e <btrfs_read_block_groups@@Base+0x28e>
   22238:	blx	8708 <__stack_chk_fail@plt>
   2223c:	mov	r1, r9
   2223e:	bl	1ecd4 <btrfs_create_tree@@Base+0x258>
   22242:	ldrd	r6, r7, [sp, #104]	; 0x68
   22246:	ldrd	r2, r3, [sp, #64]	; 0x40
   2224a:	cmp	r7, r3
   2224c:	it	eq
   2224e:	cmpeq	r6, r2
   22250:	bcc.n	2225c <btrfs_read_block_groups@@Base+0xcc>
   22252:	ldrb.w	r3, [sp, #112]	; 0x70
   22256:	cmp	r3, #192	; 0xc0
   22258:	beq.w	223e4 <btrfs_read_block_groups@@Base+0x254>
   2225c:	ldr	r3, [sp, #160]	; 0xa0
   2225e:	adds	r3, #1
   22260:	str	r3, [sp, #160]	; 0xa0
   22262:	b.n	22200 <btrfs_read_block_groups@@Base+0x70>
   22264:	movs	r7, #0
   22266:	b.n	22220 <btrfs_read_block_groups@@Base+0x90>
   22268:	ldr.w	r2, [sp, #93]	; 0x5d
   2226c:	ldr.w	r3, [sp, #97]	; 0x61
   22270:	orrs	r3, r2
   22272:	beq.n	2230e <btrfs_read_block_groups@@Base+0x17e>
   22274:	movs	r1, #120	; 0x78
   22276:	movs	r0, #1
   22278:	blx	8588 <calloc@plt+0x4>
   2227c:	mov	r5, r0
   2227e:	cmp	r0, #0
   22280:	beq.w	223d6 <btrfs_read_block_groups@@Base+0x246>
   22284:	movs	r2, #25
   22286:	mov	r0, r7
   22288:	mla	r2, r2, sl, r7
   2228c:	movs	r3, #24
   2228e:	mov	r1, r9
   22290:	add.w	r7, r5, #40	; 0x28
   22294:	ldr.w	r2, [r2, #214]	; 0xd6
   22298:	adds	r2, #101	; 0x65
   2229a:	bl	17a1a <read_extent_buffer@@Base>
   2229e:	ldmia	r6!, {r0, r1, r2, r3}
   222a0:	stmia	r7!, {r0, r1, r2, r3}
   222a2:	ldr	r3, [r6, #0]
   222a4:	movs	r6, #0
   222a6:	ldrd	r0, r1, [sp, #104]	; 0x68
   222aa:	strb	r3, [r7, #0]
   222ac:	ldr	r3, [sp, #52]	; 0x34
   222ae:	strd	r0, r1, [r5, #72]	; 0x48
   222b2:	str	r6, [r5, #104]	; 0x68
   222b4:	strd	r3, fp, [r5, #88]	; 0x58
   222b8:	ldrd	r2, r3, [sp, #120]	; 0x78
   222bc:	and.w	r1, r2, #1
   222c0:	strd	r1, r6, [sp, #24]
   222c4:	ldrd	r0, r1, [sp, #24]
   222c8:	strd	r2, r3, [r5, #96]	; 0x60
   222cc:	orrs	r1, r0
   222ce:	bne.n	22354 <btrfs_read_block_groups@@Base+0x1c4>
   222d0:	and.w	r1, r2, #2
   222d4:	strd	r1, r6, [sp, #32]
   222d8:	ldrd	r0, r1, [sp, #32]
   222dc:	orrs	r1, r0
   222de:	bne.n	22358 <btrfs_read_block_groups@@Base+0x1c8>
   222e0:	and.w	r1, r2, #4
   222e4:	strd	r1, r6, [sp, #40]	; 0x28
   222e8:	ldrd	r0, r1, [sp, #40]	; 0x28
   222ec:	orrs	r1, r0
   222ee:	it	ne
   222f0:	movne	r6, #4
   222f2:	mov	r0, r4
   222f4:	bl	1ec78 <btrfs_create_tree@@Base+0x1fc>
   222f8:	ldrd	r2, r3, [r5, #40]	; 0x28
   222fc:	bl	2a5c0 <btrfs_chunk_readonly@@Base>
   22300:	subs	r7, r0, #0
   22302:	bge.n	2235c <btrfs_read_block_groups@@Base+0x1cc>
   22304:	mov	r0, r5
   22306:	blx	8620 <free@plt+0x4>
   2230a:	adds	r3, r7, #2
   2230c:	bne.n	22220 <btrfs_read_block_groups@@Base+0x90>
   2230e:	ldr.w	r0, [sp, #73]	; 0x49
   22312:	ldr.w	r1, [sp, #77]	; 0x4d
   22316:	ldrd	r3, r2, [sp, #64]	; 0x40
   2231a:	orrs.w	r5, r0, r1
   2231e:	bne.n	223dc <btrfs_read_block_groups@@Base+0x24c>
   22320:	adds	r3, #1
   22322:	adc.w	r2, r2, #0
   22326:	add	r0, sp, #128	; 0x80
   22328:	strd	r3, r2, [sp, #64]	; 0x40
   2232c:	movs	r2, #0
   2232e:	strb.w	r2, [sp, #73]	; 0x49
   22332:	strb.w	r2, [sp, #74]	; 0x4a
   22336:	strb.w	r2, [sp, #75]	; 0x4b
   2233a:	strb.w	r2, [sp, #76]	; 0x4c
   2233e:	strb.w	r2, [sp, #77]	; 0x4d
   22342:	strb.w	r2, [sp, #78]	; 0x4e
   22346:	strb.w	r2, [sp, #79]	; 0x4f
   2234a:	strb.w	r2, [sp, #80]	; 0x50
   2234e:	bl	18558 <btrfs_release_path@@Base>
   22352:	b.n	221e6 <btrfs_read_block_groups@@Base+0x56>
   22354:	movs	r6, #2
   22356:	b.n	222f2 <btrfs_read_block_groups@@Base+0x162>
   22358:	movs	r6, #16
   2235a:	b.n	222f2 <btrfs_read_block_groups@@Base+0x162>
   2235c:	it	ne
   2235e:	movne	r3, #1
   22360:	mov	r1, r5
   22362:	it	ne
   22364:	strne	r3, [r5, #108]	; 0x6c
   22366:	mov	r0, r4
   22368:	bl	21ff8 <exclude_super_stripes@@Base>
   2236c:	add	r3, sp, #60	; 0x3c
   2236e:	str	r3, [sp, #16]
   22370:	mov	r0, r4
   22372:	ldrd	r2, r3, [r5, #72]	; 0x48
   22376:	strd	r2, r3, [sp, #8]
   2237a:	ldr.w	r2, [r5, #49]	; 0x31
   2237e:	ldr.w	r3, [r5, #53]	; 0x35
   22382:	strd	r2, r3, [sp]
   22386:	ldrd	r2, r3, [r5, #96]	; 0x60
   2238a:	bl	211b4 <update_space_info@@Base>
   2238e:	subs	r7, r0, #0
   22390:	blt.n	22304 <btrfs_read_block_groups@@Base+0x174>
   22392:	ldr	r3, [sp, #60]	; 0x3c
   22394:	orr.w	r6, r6, #8
   22398:	add.w	r0, r4, #128	; 0x80
   2239c:	str	r3, [r5, #60]	; 0x3c
   2239e:	ldrd	r2, r3, [r5, #40]	; 0x28
   223a2:	str	r6, [sp, #8]
   223a4:	ldr.w	r1, [r5, #49]	; 0x31
   223a8:	ldr.w	r6, [r5, #53]	; 0x35
   223ac:	adds	r1, r1, r2
   223ae:	adc.w	r6, r3, r6
   223b2:	adds.w	r1, r1, #4294967295	; 0xffffffff
   223b6:	adc.w	r6, r6, #4294967295	; 0xffffffff
   223ba:	strd	r1, r6, [sp]
   223be:	mov	r6, r0
   223c0:	bl	16fbc <set_extent_bits@@Base>
   223c4:	movs	r3, #0
   223c6:	str	r5, [sp, #0]
   223c8:	str	r3, [sp, #4]
   223ca:	mov	r0, r6
   223cc:	ldrd	r2, r3, [r5, #40]	; 0x28
   223d0:	bl	172ca <set_state_private@@Base>
   223d4:	b.n	2230e <btrfs_read_block_groups@@Base+0x17e>
   223d6:	mvn.w	r7, #11
   223da:	b.n	22220 <btrfs_read_block_groups@@Base+0x90>
   223dc:	adds	r3, r0, r3
   223de:	adc.w	r2, r1, r2
   223e2:	b.n	22326 <btrfs_read_block_groups@@Base+0x196>
   223e4:	ldr	r2, [sp, #160]	; 0xa0
   223e6:	add	r1, sp, #64	; 0x40
   223e8:	ldr	r0, [sp, #128]	; 0x80
   223ea:	add	r6, sp, #84	; 0x54
   223ec:	bl	1ecd4 <btrfs_create_tree@@Base+0x258>
   223f0:	ldr	r7, [sp, #128]	; 0x80
   223f2:	ldr.w	sl, [sp, #160]	; 0xa0
   223f6:	mov	r1, r6
   223f8:	mov	r0, r7
   223fa:	mov	r2, sl
   223fc:	bl	1ecd4 <btrfs_create_tree@@Base+0x258>
   22400:	ldrb.w	r3, [sp, #92]	; 0x5c
   22404:	cmp	r3, #192	; 0xc0
   22406:	beq.w	22268 <btrfs_read_block_groups@@Base+0xd8>
   2240a:	ldr	r1, [pc, #40]	; (22434 <btrfs_read_block_groups@@Base+0x2a4>)
   2240c:	movw	r2, #2684	; 0xa7c
   22410:	ldr	r0, [pc, #36]	; (22438 <btrfs_read_block_groups@@Base+0x2a8>)
   22412:	add	r1, pc
   22414:	addw	r1, r1, #526	; 0x20e
   22418:	add	r0, pc
   2241a:	bl	1f4f4 <btrfs_create_tree@@Base+0xa78>
   2241e:	mov	r0, r7
   22420:	add	sp, #204	; 0xcc
   22422:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22426:	nop
   22428:	cmp	r3, #236	; 0xec
   2242a:	movs	r4, r0
   2242c:	lsls	r0, r5, #8
   2242e:	movs	r0, r0
   22430:	cmp	r3, #86	; 0x56
   22432:	movs	r4, r0
   22434:	bkpt	0x00bc
   22436:	movs	r1, r0
   22438:	pop	{r3, r4, pc}
   2243a:	movs	r1, r0

0002243c <btrfs_add_block_group@@Base>:
   2243c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22440:	sub	sp, #52	; 0x34
   22442:	mov	r5, r0
   22444:	add.w	fp, r0, #128	; 0x80
   22448:	strd	r2, r3, [sp, #40]	; 0x28
   2244c:	movs	r1, #120	; 0x78
   2244e:	ldrd	r6, r3, [sp, #88]	; 0x58
   22452:	movs	r0, #1
   22454:	ldrd	r7, r8, [sp, #96]	; 0x60
   22458:	ldr.w	sl, [pc, #320]	; 2259c <btrfs_add_block_group@@Base+0x160>
   2245c:	str	r3, [sp, #36]	; 0x24
   2245e:	ldr	r3, [sp, #104]	; 0x68
   22460:	add	sl, pc
   22462:	ldr.w	r9, [pc, #316]	; 225a0 <btrfs_add_block_group@@Base+0x164>
   22466:	addw	sl, sl, #547	; 0x223
   2246a:	str	r3, [sp, #28]
   2246c:	add	r9, pc
   2246e:	ldr	r3, [sp, #108]	; 0x6c
   22470:	str	r3, [sp, #32]
   22472:	blx	8588 <calloc@plt+0x4>
   22476:	mov	r2, sl
   22478:	mov	r1, r9
   2247a:	movw	r3, #2789	; 0xae5
   2247e:	mov	r4, r0
   22480:	clz	r0, r0
   22484:	lsrs	r0, r0, #5
   22486:	str	r0, [sp, #0]
   22488:	ldr	r0, [pc, #280]	; (225a4 <btrfs_add_block_group@@Base+0x168>)
   2248a:	add	r0, pc
   2248c:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   22490:	ldr	r3, [sp, #28]
   22492:	mov	r1, r4
   22494:	mov	r0, r5
   22496:	strd	r7, r8, [r4, #40]	; 0x28
   2249a:	str.w	r3, [r4, #49]	; 0x31
   2249e:	ldr	r3, [sp, #32]
   224a0:	str	r6, [r4, #96]	; 0x60
   224a2:	str.w	r3, [r4, #53]	; 0x35
   224a6:	movs	r3, #192	; 0xc0
   224a8:	strb.w	r3, [r4, #48]	; 0x30
   224ac:	ldr	r3, [sp, #40]	; 0x28
   224ae:	str	r3, [r4, #72]	; 0x48
   224b0:	ldr	r3, [sp, #44]	; 0x2c
   224b2:	str	r3, [r4, #76]	; 0x4c
   224b4:	ldr	r3, [sp, #36]	; 0x24
   224b6:	str	r3, [r4, #100]	; 0x64
   224b8:	bl	21ff8 <exclude_super_stripes@@Base>
   224bc:	add.w	r3, r4, #60	; 0x3c
   224c0:	str	r3, [sp, #16]
   224c2:	mov	r0, r5
   224c4:	ldr	r3, [sp, #40]	; 0x28
   224c6:	str	r3, [sp, #8]
   224c8:	ldr	r3, [sp, #44]	; 0x2c
   224ca:	str	r3, [sp, #12]
   224cc:	ldr	r3, [sp, #28]
   224ce:	str	r3, [sp, #0]
   224d0:	ldr	r3, [sp, #32]
   224d2:	str	r3, [sp, #4]
   224d4:	ldrd	r2, r3, [r4, #96]	; 0x60
   224d8:	bl	211b4 <update_space_info@@Base>
   224dc:	mov	r2, sl
   224de:	mov	r1, r9
   224e0:	mov.w	r3, #2800	; 0xaf0
   224e4:	ldr.w	sl, [pc, #192]	; 225a8 <btrfs_add_block_group@@Base+0x16c>
   224e8:	ldr.w	r9, [pc, #192]	; 225ac <btrfs_add_block_group@@Base+0x170>
   224ec:	add	sl, pc
   224ee:	addw	sl, sl, #547	; 0x223
   224f2:	add	r9, pc
   224f4:	str	r0, [sp, #0]
   224f6:	ldr	r0, [pc, #184]	; (225b0 <btrfs_add_block_group@@Base+0x174>)
   224f8:	add	r0, pc
   224fa:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   224fe:	mov.w	ip, #0
   22502:	and.w	r2, r6, #1
   22506:	mov	r3, ip
   22508:	orrs	r3, r2
   2250a:	and.w	r0, r6, #4
   2250e:	mov	r1, ip
   22510:	ite	eq
   22512:	moveq	r3, ip
   22514:	movne	r3, #2
   22516:	orrs.w	r2, r0, r1
   2251a:	and.w	r0, r6, #2
   2251e:	it	ne
   22520:	orrne.w	r3, r3, #4
   22524:	movs	r1, #0
   22526:	orrs.w	r2, r0, r1
   2252a:	ldr	r2, [sp, #32]
   2252c:	it	ne
   2252e:	orrne.w	r3, r3, #16
   22532:	mov	r0, fp
   22534:	orr.w	r3, r3, #8
   22538:	str	r3, [sp, #8]
   2253a:	ldr	r3, [sp, #28]
   2253c:	adds.w	r3, r3, #4294967295	; 0xffffffff
   22540:	adc.w	r2, r2, #4294967295	; 0xffffffff
   22544:	adds	r3, r3, r7
   22546:	adc.w	r2, r2, r8
   2254a:	strd	r3, r2, [sp]
   2254e:	mov	r2, r7
   22550:	mov	r3, r8
   22552:	bl	16fbc <set_extent_bits@@Base>
   22556:	ldr	r1, [pc, #92]	; (225b4 <btrfs_add_block_group@@Base+0x178>)
   22558:	mov	r2, sl
   2255a:	movw	r3, #2806	; 0xaf6
   2255e:	add	r1, pc
   22560:	str	r1, [sp, #28]
   22562:	str	r0, [sp, #0]
   22564:	mov	r0, r9
   22566:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   2256a:	mov	r2, r7
   2256c:	movs	r3, #0
   2256e:	mov	r0, fp
   22570:	str	r3, [sp, #4]
   22572:	mov	r3, r8
   22574:	str	r4, [sp, #0]
   22576:	bl	172ca <set_state_private@@Base>
   2257a:	ldr	r1, [sp, #28]
   2257c:	mov	r2, sl
   2257e:	movw	r3, #2810	; 0xafa
   22582:	str	r0, [sp, #0]
   22584:	mov	r0, r9
   22586:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   2258a:	mov	r0, r5
   2258c:	ldr	r3, [sp, #36]	; 0x24
   2258e:	mov	r2, r6
   22590:	bl	1ec78 <btrfs_create_tree@@Base+0x1fc>
   22594:	mov	r0, r4
   22596:	add	sp, #52	; 0x34
   22598:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2259c:	bkpt	0x006e
   2259e:	movs	r1, r0
   225a0:			; <UNDEFINED> instruction: 0xb731
   225a2:	movs	r1, r0
   225a4:	cbnz	r5, 22610 <btrfs_make_block_group@@Base+0x58>
   225a6:	movs	r1, r0
   225a8:	pop	{r1, r5, r6, r7, pc}
   225aa:	movs	r1, r0
   225ac:	ldrb	r2, [r6, #31]
   225ae:	movs	r1, r0
   225b0:	ldrb	r4, [r5, #31]
   225b2:	movs	r1, r0
   225b4:			; <UNDEFINED> instruction: 0xb63f
   225b6:	movs	r1, r0

000225b8 <btrfs_make_block_group@@Base>:
   225b8:	push	{r4, r5, r6, r7, lr}
   225ba:	mov	r4, r0
   225bc:	ldr	r5, [pc, #144]	; (22650 <btrfs_make_block_group@@Base+0x98>)
   225be:	sub	sp, #68	; 0x44
   225c0:	mov	r0, r1
   225c2:	ldr	r1, [pc, #144]	; (22654 <btrfs_make_block_group@@Base+0x9c>)
   225c4:	add	r5, pc
   225c6:	ldrd	r6, r7, [sp, #104]	; 0x68
   225ca:	ldr	r1, [r5, r1]
   225cc:	movs	r5, #0
   225ce:	ldr	r1, [r1, #0]
   225d0:	str	r1, [sp, #60]	; 0x3c
   225d2:	mov.w	r1, #0
   225d6:	ldr	r1, [r0, #24]
   225d8:	strd	r6, r7, [sp, #16]
   225dc:	ldrd	r6, r7, [sp, #96]	; 0x60
   225e0:	str	r1, [sp, #28]
   225e2:	strd	r6, r7, [sp, #8]
   225e6:	ldrd	r6, r7, [sp, #88]	; 0x58
   225ea:	strd	r6, r7, [sp]
   225ee:	bl	2243c <btrfs_add_block_group@@Base>
   225f2:	ldr	r1, [sp, #28]
   225f4:	ldr	r3, [r0, #72]	; 0x48
   225f6:	add.w	r2, r0, #40	; 0x28
   225fa:	str	r3, [sp, #36]	; 0x24
   225fc:	ldr	r3, [r0, #76]	; 0x4c
   225fe:	str	r3, [sp, #40]	; 0x28
   22600:	ldr	r3, [r0, #96]	; 0x60
   22602:	str	r3, [sp, #52]	; 0x34
   22604:	ldr	r3, [r0, #100]	; 0x64
   22606:	mov	r0, r4
   22608:	str	r3, [sp, #56]	; 0x38
   2260a:	mov.w	r3, #256	; 0x100
   2260e:	strd	r3, r5, [sp, #44]	; 0x2c
   22612:	movs	r3, #24
   22614:	str	r3, [sp, #0]
   22616:	add	r3, sp, #36	; 0x24
   22618:	bl	1b9c8 <btrfs_insert_item@@Base>
   2261c:	ldr	r2, [pc, #56]	; (22658 <btrfs_make_block_group@@Base+0xa0>)
   2261e:	ldr	r1, [pc, #60]	; (2265c <btrfs_make_block_group@@Base+0xa4>)
   22620:	movw	r3, #2833	; 0xb11
   22624:	add	r2, pc
   22626:	addw	r2, r2, #569	; 0x239
   2262a:	add	r1, pc
   2262c:	str	r0, [sp, #0]
   2262e:	ldr	r0, [pc, #48]	; (22660 <btrfs_make_block_group@@Base+0xa8>)
   22630:	add	r0, pc
   22632:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   22636:	ldr	r2, [pc, #44]	; (22664 <btrfs_make_block_group@@Base+0xac>)
   22638:	ldr	r3, [pc, #24]	; (22654 <btrfs_make_block_group@@Base+0x9c>)
   2263a:	add	r2, pc
   2263c:	ldr	r3, [r2, r3]
   2263e:	ldr	r2, [r3, #0]
   22640:	ldr	r3, [sp, #60]	; 0x3c
   22642:	eors	r2, r3
   22644:	beq.n	2264a <btrfs_make_block_group@@Base+0x92>
   22646:	blx	8708 <__stack_chk_fail@plt>
   2264a:	mov	r0, r5
   2264c:	add	sp, #68	; 0x44
   2264e:	pop	{r4, r5, r6, r7, pc}
   22650:	movs	r7, #188	; 0xbc
   22652:	movs	r4, r0
   22654:	lsls	r0, r5, #8
   22656:	movs	r0, r0
   22658:	pop	{r1, r3, r5, r7}
   2265a:	movs	r1, r0
   2265c:	push	{r0, r1, r4, r5, r6, lr}
   2265e:	movs	r1, r0
   22660:	ldrb	r4, [r6, #26]
   22662:	movs	r1, r0
   22664:	movs	r7, #70	; 0x46
   22666:	movs	r4, r0
   22668:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2266c:	mov	r5, r1
   2266e:	ldr	r1, [pc, #412]	; (2280c <btrfs_make_block_group@@Base+0x254>)
   22670:	sub	sp, #76	; 0x4c
   22672:	mov	r7, r2
   22674:	ldr	r2, [pc, #408]	; (22810 <btrfs_make_block_group@@Base+0x258>)
   22676:	add	r1, pc
   22678:	mov	r9, r3
   2267a:	ldrd	r6, r3, [sp, #112]	; 0x70
   2267e:	mov	r4, r0
   22680:	ldr	r2, [r1, r2]
   22682:	mov	r0, r5
   22684:	ldr	r2, [r2, #0]
   22686:	str	r2, [sp, #68]	; 0x44
   22688:	mov.w	r2, #0
   2268c:	mov	r2, r6
   2268e:	str	r3, [sp, #36]	; 0x24
   22690:	bl	1ec44 <btrfs_create_tree@@Base+0x1c8>
   22694:	ldr	r3, [sp, #36]	; 0x24
   22696:	str	r0, [sp, #44]	; 0x2c
   22698:	cbnz	r0, 226cc <btrfs_make_block_group@@Base+0x114>
   2269a:	movs	r1, #0
   2269c:	movs	r0, #0
   2269e:	add	r2, sp, #44	; 0x2c
   226a0:	strd	r0, r1, [sp, #8]
   226a4:	strd	r0, r1, [sp]
   226a8:	mov	r0, r5
   226aa:	str	r2, [sp, #16]
   226ac:	mov	r2, r6
   226ae:	bl	211b4 <update_space_info@@Base>
   226b2:	ldr	r2, [pc, #352]	; (22814 <btrfs_make_block_group@@Base+0x25c>)
   226b4:	ldr	r1, [pc, #352]	; (22818 <btrfs_make_block_group@@Base+0x260>)
   226b6:	mov.w	r3, #1712	; 0x6b0
   226ba:	add	r2, pc
   226bc:	add.w	r2, r2, #592	; 0x250
   226c0:	add	r1, pc
   226c2:	str	r0, [sp, #0]
   226c4:	ldr	r0, [pc, #340]	; (2281c <btrfs_make_block_group@@Base+0x264>)
   226c6:	add	r0, pc
   226c8:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   226cc:	ldr.w	sl, [sp, #44]	; 0x2c
   226d0:	ldr	r2, [pc, #332]	; (22820 <btrfs_make_block_group@@Base+0x268>)
   226d2:	ldr	r1, [pc, #336]	; (22824 <btrfs_make_block_group@@Base+0x26c>)
   226d4:	clz	r3, sl
   226d8:	ldr	r0, [pc, #332]	; (22828 <btrfs_make_block_group@@Base+0x270>)
   226da:	add	r2, pc
   226dc:	lsrs	r3, r3, #5
   226de:	add.w	r2, r2, #592	; 0x250
   226e2:	str	r3, [sp, #0]
   226e4:	add	r1, pc
   226e6:	add	r0, pc
   226e8:	movw	r3, #1714	; 0x6b2
   226ec:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   226f0:	ldr.w	r8, [sl, #40]	; 0x28
   226f4:	cmp.w	r8, #0
   226f8:	bne.n	22796 <btrfs_make_block_group@@Base+0x1de>
   226fa:	ldrd	r0, r1, [sl, #8]
   226fe:	movs	r2, #7
   22700:	bl	321c0 <div_factor@@Base>
   22704:	mov	sl, r0
   22706:	ldr	r0, [sp, #44]	; 0x2c
   22708:	mov	fp, r1
   2270a:	ldr	r2, [r0, #24]
   2270c:	ldrd	r3, r1, [r0, #16]
   22710:	adds	r3, r3, r2
   22712:	ldr	r2, [r0, #28]
   22714:	adc.w	r1, r2, r1
   22718:	ldr	r2, [r0, #32]
   2271a:	adds	r3, r3, r2
   2271c:	ldr	r2, [r0, #36]	; 0x24
   2271e:	adc.w	r1, r2, r1
   22722:	adds	r3, r3, r7
   22724:	str	r3, [sp, #24]
   22726:	adc.w	r3, r1, r9
   2272a:	str	r3, [sp, #28]
   2272c:	ldrd	r2, r3, [sp, #24]
   22730:	cmp	r3, fp
   22732:	it	eq
   22734:	cmpeq	r2, sl
   22736:	bcc.n	22796 <btrfs_make_block_group@@Base+0x1de>
   22738:	ldrb.w	r1, [r5, #365]	; 0x16d
   2273c:	lsls	r2, r1, #31
   2273e:	bpl.n	2274a <btrfs_make_block_group@@Base+0x192>
   22740:	and.w	r2, r6, #4
   22744:	mov	r3, r8
   22746:	orrs	r3, r2
   22748:	bne.n	22796 <btrfs_make_block_group@@Base+0x1de>
   2274a:	lsls	r3, r1, #30
   2274c:	bpl.n	22758 <btrfs_make_block_group@@Base+0x1a0>
   2274e:	and.w	r2, r6, #2
   22752:	movs	r3, #0
   22754:	orrs	r3, r2
   22756:	bne.n	22796 <btrfs_make_block_group@@Base+0x1de>
   22758:	ldrb.w	r3, [r4, #33]	; 0x21
   2275c:	ands.w	r8, r3, #1
   22760:	bne.n	22796 <btrfs_make_block_group@@Base+0x1de>
   22762:	orr.w	r3, r3, #1
   22766:	strb.w	r3, [r4, #33]	; 0x21
   2276a:	ldrd	r2, r3, [r0]
   2276e:	mov	r1, r5
   22770:	mov	r0, r4
   22772:	strd	r2, r3, [sp]
   22776:	add	r3, sp, #56	; 0x38
   22778:	add	r2, sp, #48	; 0x30
   2277a:	bl	28f1c <btrfs_alloc_chunk@@Base>
   2277e:	cmn.w	r0, #28
   22782:	bne.n	227aa <btrfs_make_block_group@@Base+0x1f2>
   22784:	ldr	r3, [sp, #44]	; 0x2c
   22786:	movs	r2, #1
   22788:	str	r2, [r3, #40]	; 0x28
   2278a:	ldrb.w	r3, [r4, #33]	; 0x21
   2278e:	bfi	r3, r8, #0, #1
   22792:	strb.w	r3, [r4, #33]	; 0x21
   22796:	ldr	r2, [pc, #148]	; (2282c <btrfs_make_block_group@@Base+0x274>)
   22798:	ldr	r3, [pc, #116]	; (22810 <btrfs_make_block_group@@Base+0x258>)
   2279a:	add	r2, pc
   2279c:	ldr	r3, [r2, r3]
   2279e:	ldr	r2, [r3, #0]
   227a0:	ldr	r3, [sp, #68]	; 0x44
   227a2:	eors	r2, r3
   227a4:	beq.n	22804 <btrfs_make_block_group@@Base+0x24c>
   227a6:	blx	8708 <__stack_chk_fail@plt>
   227aa:	ldr.w	r9, [pc, #132]	; 22830 <btrfs_make_block_group@@Base+0x278>
   227ae:	movw	r3, #1751	; 0x6d7
   227b2:	ldr	r7, [pc, #128]	; (22834 <btrfs_make_block_group@@Base+0x27c>)
   227b4:	ldr	r6, [pc, #128]	; (22838 <btrfs_make_block_group@@Base+0x280>)
   227b6:	add	r9, pc
   227b8:	add.w	r9, r9, #592	; 0x250
   227bc:	add	r7, pc
   227be:	add	r6, pc
   227c0:	str	r0, [sp, #0]
   227c2:	mov	r2, r9
   227c4:	mov	r1, r7
   227c6:	mov	r0, r6
   227c8:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   227cc:	ldrd	r2, r3, [sp, #56]	; 0x38
   227d0:	mov	r1, r5
   227d2:	mov	r0, r4
   227d4:	strd	r2, r3, [sp, #16]
   227d8:	ldrd	r2, r3, [sp, #48]	; 0x30
   227dc:	strd	r2, r3, [sp, #8]
   227e0:	ldr	r3, [sp, #44]	; 0x2c
   227e2:	ldrd	r2, r3, [r3]
   227e6:	strd	r2, r3, [sp]
   227ea:	movs	r2, #0
   227ec:	movs	r3, #0
   227ee:	bl	225b8 <btrfs_make_block_group@@Base>
   227f2:	movw	r3, #1755	; 0x6db
   227f6:	mov	r2, r9
   227f8:	mov	r1, r7
   227fa:	str	r0, [sp, #0]
   227fc:	mov	r0, r6
   227fe:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   22802:	b.n	2278a <btrfs_make_block_group@@Base+0x1d2>
   22804:	movs	r0, #0
   22806:	add	sp, #76	; 0x4c
   22808:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2280c:	movs	r7, #10
   2280e:	movs	r4, r0
   22810:	lsls	r0, r5, #8
   22812:	movs	r0, r0
   22814:	pop	{r2, r4}
   22816:	movs	r1, r0
   22818:	push	{r0, r2, r3, r4, r6, r7}
   2281a:	movs	r1, r0
   2281c:	ldrb	r6, [r3, #24]
   2281e:	movs	r1, r0
   22820:	cbnz	r4, 228a0 <btrfs_reserve_extent@@Base+0x64>
   22822:	movs	r1, r0
   22824:	push	{r0, r3, r4, r5, r7}
   22826:	movs	r1, r0
   22828:	rev16	r1, r6
   2282a:	movs	r1, r0
   2282c:	movs	r5, #230	; 0xe6
   2282e:	movs	r4, r0
   22830:	cbnz	r0, 2287a <btrfs_reserve_extent@@Base+0x3e>
   22832:	movs	r1, r0
   22834:	cbz	r1, 228b0 <btrfs_reserve_extent@@Base+0x74>
   22836:	movs	r1, r0
   22838:	ldrb	r6, [r4, #20]
   2283a:	movs	r1, r0

0002283c <btrfs_reserve_extent@@Base>:
   2283c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22840:	mov	sl, r2
   22842:	vpush	{d8-d10}
   22846:	mov	r6, r1
   22848:	ldr.w	r2, [pc, #2256]	; 2311c <btrfs_reserve_extent@@Base+0x8e0>
   2284c:	mov	fp, r3
   2284e:	ldr.w	r1, [pc, #2256]	; 23120 <btrfs_reserve_extent@@Base+0x8e4>
   22852:	add	r2, pc
   22854:	sub	sp, #252	; 0xfc
   22856:	add	r1, pc
   22858:	ldr.w	r5, [r6, #464]	; 0x1d0
   2285c:	ldr	r3, [sp, #312]	; 0x138
   2285e:	str	r2, [sp, #168]	; 0xa8
   22860:	ldr.w	r2, [pc, #2240]	; 23124 <btrfs_reserve_extent@@Base+0x8e8>
   22864:	str	r3, [sp, #172]	; 0xac
   22866:	ldrb.w	r3, [sp, #340]	; 0x154
   2286a:	str	r0, [sp, #60]	; 0x3c
   2286c:	ldr	r2, [r1, r2]
   2286e:	ldrd	r8, r9, [sp, #320]	; 0x140
   22872:	ldr	r7, [sp, #336]	; 0x150
   22874:	ldr	r2, [r2, #0]
   22876:	str	r2, [sp, #244]	; 0xf4
   22878:	mov.w	r2, #0
   2287c:	cmp	r3, #0
   2287e:	beq.w	22d6c <btrfs_reserve_extent@@Base+0x530>
   22882:	ldrd	r3, r4, [r5, #248]	; 0xf8
   22886:	ldrd	r1, r2, [r5, #272]	; 0x110
   2288a:	ands	r3, r1
   2288c:	orr.w	r3, r3, #1
   22890:	str	r3, [sp, #40]	; 0x28
   22892:	ands	r4, r2
   22894:	ldr.w	r3, [r6, #488]	; 0x1e8
   22898:	cbnz	r3, 228aa <btrfs_reserve_extent@@Base+0x6e>
   2289a:	ldr.w	r3, [r6, #451]	; 0x1c3
   2289e:	ldr.w	r2, [r6, #447]	; 0x1bf
   228a2:	cmp	r3, #0
   228a4:	it	eq
   228a6:	cmpeq	r2, #7
   228a8:	bne.n	22920 <btrfs_reserve_extent@@Base+0xe4>
   228aa:	ldr	r1, [sp, #40]	; 0x28
   228ac:	movs	r3, #0
   228ae:	and.w	r2, r1, #4
   228b2:	orrs	r3, r2
   228b4:	bne.n	228ea <btrfs_reserve_extent@@Base+0xae>
   228b6:	movs	r2, #4
   228b8:	movs	r3, #0
   228ba:	mov	r1, r5
   228bc:	strd	r2, r3, [sp]
   228c0:	ldr	r0, [sp, #60]	; 0x3c
   228c2:	mov	r2, sl
   228c4:	mov	r3, fp
   228c6:	bl	22668 <btrfs_make_block_group@@Base+0xb0>
   228ca:	ldr.w	r2, [pc, #2140]	; 23128 <btrfs_reserve_extent@@Base+0x8ec>
   228ce:	ldr.w	r1, [pc, #2140]	; 2312c <btrfs_reserve_extent@@Base+0x8f0>
   228d2:	movw	r3, #2360	; 0x938
   228d6:	add	r2, pc
   228d8:	addw	r2, r2, #607	; 0x25f
   228dc:	add	r1, pc
   228de:	str	r0, [sp, #0]
   228e0:	ldr.w	r0, [pc, #2124]	; 23130 <btrfs_reserve_extent@@Base+0x8f4>
   228e4:	add	r0, pc
   228e6:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   228ea:	ldr	r3, [sp, #40]	; 0x28
   228ec:	adds.w	r2, sl, #2097152	; 0x200000
   228f0:	mov	r1, r5
   228f2:	ldr	r0, [sp, #60]	; 0x3c
   228f4:	strd	r3, r4, [sp]
   228f8:	adc.w	r3, fp, #0
   228fc:	bl	22668 <btrfs_make_block_group@@Base+0xb0>
   22900:	ldr.w	r2, [pc, #2096]	; 23134 <btrfs_reserve_extent@@Base+0x8f8>
   22904:	ldr.w	r1, [pc, #2096]	; 23138 <btrfs_reserve_extent@@Base+0x8fc>
   22908:	movw	r3, #2364	; 0x93c
   2290c:	add	r2, pc
   2290e:	addw	r2, r2, #607	; 0x25f
   22912:	add	r1, pc
   22914:	str	r0, [sp, #0]
   22916:	ldr.w	r0, [pc, #2084]	; 2313c <btrfs_reserve_extent@@Base+0x900>
   2291a:	add	r0, pc
   2291c:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   22920:	ldr.w	r2, [r5, #388]	; 0x184
   22924:	movs	r3, #0
   22926:	ldr.w	r4, [pc, #2072]	; 23140 <btrfs_reserve_extent@@Base+0x904>
   2292a:	cmp	fp, r3
   2292c:	it	eq
   2292e:	cmpeq	sl, r2
   22930:	ldr.w	r1, [pc, #2064]	; 23144 <btrfs_reserve_extent@@Base+0x908>
   22934:	ldr.w	r0, [pc, #2064]	; 23148 <btrfs_reserve_extent@@Base+0x90c>
   22938:	add	r4, pc
   2293a:	ite	cc
   2293c:	movcc	r3, #1
   2293e:	movcs	r3, #0
   22940:	add	r1, pc
   22942:	add	r0, pc
   22944:	addw	r2, r4, #607	; 0x25f
   22948:	str	r3, [sp, #0]
   2294a:	movw	r3, #2367	; 0x93f
   2294e:	str	r1, [sp, #32]
   22950:	str	r0, [sp, #24]
   22952:	bl	1edd4 <btrfs_create_tree@@Base+0x358>
   22956:	ldr	r3, [sp, #60]	; 0x3c
   22958:	ldr	r1, [sp, #32]
   2295a:	ldr	r0, [sp, #24]
   2295c:	ldrd	r2, r3, [r3, #16]
   22960:	strd	r2, r3, [sp, #80]	; 0x50
   22964:	ldr	r3, [sp, #60]	; 0x3c
   22966:	ldrd	r2, r3, [r3, #24]
   2296a:	strd	r2, r3, [sp, #88]	; 0x58
   2296e:	ldr.w	r3, [r6, #464]	; 0x1d0
   22972:	ldr	r3, [r3, #24]
   22974:	str	r3, [sp, #44]	; 0x2c
   22976:	ldr.w	r3, [r3, #464]	; 0x1d0
   2297a:	ldr.w	r2, [r3, #388]	; 0x184
   2297e:	vmov	s16, r3
   22982:	movs	r3, #0
   22984:	cmp	fp, r3
   22986:	it	eq
   22988:	cmpeq	sl, r2
   2298a:	add.w	r2, r4, #628	; 0x274
   2298e:	ite	cc
   22990:	movcc	r3, #1
   22992:	movcs	r3, #0
   22994:	str	r3, [sp, #0]
   22996:	mov.w	r3, #2208	; 0x8a0
   2299a:	bl	1edd4 <btrfs_create_tree@@Base+0x358>
   2299e:	movs	r3, #168	; 0xa8
   229a0:	strb	r3, [r7, #8]
   229a2:	orrs.w	r3, r8, r9
   229a6:	beq.w	22d9a <btrfs_reserve_extent@@Base+0x55e>
   229aa:	vmov	r0, s16
   229ae:	mov	r2, r8
   229b0:	mov	r3, r9
   229b2:	bl	1f530 <btrfs_lookup_first_block_group@@Base>
   229b6:	mov	r1, r0
   229b8:	cbnz	r0, 229c2 <btrfs_reserve_extent@@Base+0x186>
   229ba:	mov.w	r8, #0
   229be:	mov.w	r9, #0
   229c2:	ldr	r3, [sp, #40]	; 0x28
   229c4:	mov	r2, r8
   229c6:	str	r3, [sp, #0]
   229c8:	mov	r3, r9
   229ca:	ldr	r0, [sp, #44]	; 0x2c
   229cc:	ldr.w	r0, [r0, #464]	; 0x1d0
   229d0:	bl	1f8c0 <btrfs_lookup_block_group@@Base+0x30c>
   229d4:	ldr	r3, [sp, #172]	; 0xac
   229d6:	movs	r2, #0
   229d8:	adds.w	r3, sl, r3
   229dc:	str	r3, [sp, #112]	; 0x70
   229de:	movs	r3, #0
   229e0:	strd	r2, r3, [sp, #24]
   229e4:	movs	r3, #0
   229e6:	str	r3, [sp, #56]	; 0x38
   229e8:	str	r3, [sp, #100]	; 0x64
   229ea:	ldr.w	r3, [pc, #1888]	; 2314c <btrfs_reserve_extent@@Base+0x910>
   229ee:	add	r3, pc
   229f0:	str	r3, [sp, #180]	; 0xb4
   229f2:	adds.w	r3, sl, #4294967295	; 0xffffffff
   229f6:	str	r3, [sp, #184]	; 0xb8
   229f8:	adc.w	r3, fp, #4294967295	; 0xffffffff
   229fc:	str	r3, [sp, #188]	; 0xbc
   229fe:	mov	r4, r0
   22a00:	ldr	r3, [sp, #44]	; 0x2c
   22a02:	movs	r2, #0
   22a04:	ldr	r1, [sp, #24]
   22a06:	ldr.w	r3, [r3, #464]	; 0x1d0
   22a0a:	ldr.w	r3, [r3, #392]	; 0x188
   22a0e:	adds.w	r3, r3, #4294967295	; 0xffffffff
   22a12:	adc.w	r2, r2, #4294967295	; 0xffffffff
   22a16:	adds.w	r0, r1, #4294967295	; 0xffffffff
   22a1a:	ldr	r1, [sp, #28]
   22a1c:	orr.w	r3, r3, r0
   22a20:	adc.w	r1, r1, #4294967295	; 0xffffffff
   22a24:	adds	r3, #1
   22a26:	orr.w	r2, r2, r1
   22a2a:	str	r3, [sp, #48]	; 0x30
   22a2c:	adc.w	r3, r2, #0
   22a30:	str	r3, [sp, #52]	; 0x34
   22a32:	cbnz	r4, 22a52 <btrfs_reserve_extent@@Base+0x216>
   22a34:	vmov	r0, s16
   22a38:	ldrd	r2, r3, [sp, #48]	; 0x30
   22a3c:	bl	1f530 <btrfs_lookup_first_block_group@@Base>
   22a40:	mov	r4, r0
   22a42:	cbnz	r0, 22a52 <btrfs_reserve_extent@@Base+0x216>
   22a44:	vmov	r0, s16
   22a48:	movs	r2, #0
   22a4a:	movs	r3, #0
   22a4c:	bl	1f530 <btrfs_lookup_first_block_group@@Base>
   22a50:	mov	r4, r0
   22a52:	movs	r2, #0
   22a54:	movs	r3, #0
   22a56:	ldr	r1, [sp, #112]	; 0x70
   22a58:	strd	r2, r3, [sp, #208]	; 0xd0
   22a5c:	strd	r2, r3, [sp, #216]	; 0xd8
   22a60:	cmp	r4, #0
   22a62:	beq.w	22ea6 <btrfs_reserve_extent@@Base+0x66a>
   22a66:	ldrd	r2, r3, [sp, #48]	; 0x30
   22a6a:	strd	r2, r3, [sp, #24]
   22a6e:	movs	r3, #0
   22a70:	mov	r2, r1
   22a72:	str	r3, [sp, #116]	; 0x74
   22a74:	asrs	r3, r1, #31
   22a76:	strd	r2, r3, [sp, #104]	; 0x68
   22a7a:	ldr	r3, [r4, #104]	; 0x68
   22a7c:	cmp	r3, #0
   22a7e:	bne.w	22c08 <btrfs_reserve_extent@@Base+0x3cc>
   22a82:	ldr	r3, [sp, #44]	; 0x2c
   22a84:	ldr.w	r3, [r3, #464]	; 0x1d0
   22a88:	ldr	r3, [r3, #24]
   22a8a:	str	r3, [sp, #96]	; 0x60
   22a8c:	ldr.w	r3, [r3, #464]	; 0x1d0
   22a90:	mov	r9, r3
   22a92:	bl	18550 <btrfs_alloc_path@@Base>
   22a96:	mov	r6, r0
   22a98:	cmp	r0, #0
   22a9a:	beq.w	22eae <btrfs_reserve_extent@@Base+0x672>
   22a9e:	movs	r3, #2
   22aa0:	strb.w	r3, [r0, #64]	; 0x40
   22aa4:	ldrd	r2, r3, [r4, #40]	; 0x28
   22aa8:	mov.w	r8, #0
   22aac:	ldr	r1, [sp, #96]	; 0x60
   22aae:	cmp	r3, #0
   22ab0:	strd	r8, r8, [sp]
   22ab4:	it	eq
   22ab6:	cmpeq.w	r2, #65536	; 0x10000
   22aba:	strd	r2, r3, [sp, #32]
   22abe:	strb.w	r8, [sp, #233]	; 0xe9
   22ac2:	ittt	cc
   22ac4:	movcc.w	r2, #65536	; 0x10000
   22ac8:	movcc	r3, #0
   22aca:	strdcc	r2, r3, [sp, #32]
   22ace:	ldrd	r2, r3, [sp, #32]
   22ad2:	strb.w	r8, [sp, #234]	; 0xea
   22ad6:	strb.w	r8, [sp, #235]	; 0xeb
   22ada:	strd	r2, r3, [sp, #224]	; 0xe0
   22ade:	add	r2, sp, #224	; 0xe0
   22ae0:	mov	r3, r0
   22ae2:	mov	r0, r8
   22ae4:	strb.w	r8, [sp, #236]	; 0xec
   22ae8:	strb.w	r8, [sp, #237]	; 0xed
   22aec:	strb.w	r8, [sp, #238]	; 0xee
   22af0:	strb.w	r8, [sp, #239]	; 0xef
   22af4:	strb.w	r8, [sp, #240]	; 0xf0
   22af8:	strb.w	r8, [sp, #232]	; 0xe8
   22afc:	str	r2, [sp, #176]	; 0xb0
   22afe:	bl	1a93c <btrfs_search_slot@@Base>
   22b02:	cmp	r0, r8
   22b04:	blt.n	22c02 <btrfs_reserve_extent@@Base+0x3c6>
   22b06:	ldr	r2, [sp, #176]	; 0xb0
   22b08:	mov	r3, r9
   22b0a:	adds	r3, #96	; 0x60
   22b0c:	str.w	r8, [sp, #176]	; 0xb0
   22b10:	vmov	s17, r3
   22b14:	vmov	s18, r2
   22b18:	ldr	r0, [r6, #0]
   22b1a:	ldr	r2, [r6, #32]
   22b1c:	ldr.w	r3, [r0, #192]	; 0xc0
   22b20:	cmp	r3, r2
   22b22:	bhi.w	22da8 <btrfs_reserve_extent@@Base+0x56c>
   22b26:	ldr	r3, [sp, #176]	; 0xb0
   22b28:	mov	r1, r6
   22b2a:	strb.w	r3, [r6, #65]	; 0x41
   22b2e:	ldr	r3, [sp, #96]	; 0x60
   22b30:	ldr.w	r0, [r3, #464]	; 0x1d0
   22b34:	bl	1bd70 <btrfs_next_sibling_tree_block@@Base>
   22b38:	cmp	r0, #0
   22b3a:	blt.n	22c02 <btrfs_reserve_extent@@Base+0x3c6>
   22b3c:	beq.n	22b18 <btrfs_reserve_extent@@Base+0x2dc>
   22b3e:	ldr.w	r3, [r4, #49]	; 0x31
   22b42:	ldrd	r1, r0, [r4, #40]	; 0x28
   22b46:	ldr.w	r2, [r4, #53]	; 0x35
   22b4a:	adds	r3, r3, r1
   22b4c:	str	r3, [sp, #72]	; 0x48
   22b4e:	adc.w	r3, r2, r0
   22b52:	str	r3, [sp, #76]	; 0x4c
   22b54:	ldrd	r0, r1, [sp, #72]	; 0x48
   22b58:	ldrd	r2, r3, [sp, #32]
   22b5c:	cmp	r3, r1
   22b5e:	it	eq
   22b60:	cmpeq	r2, r0
   22b62:	bcs.n	22b80 <btrfs_reserve_extent@@Base+0x344>
   22b64:	ldr	r3, [sp, #72]	; 0x48
   22b66:	vmov	r0, s17
   22b6a:	adds.w	r2, r3, #4294967295	; 0xffffffff
   22b6e:	ldr	r3, [sp, #76]	; 0x4c
   22b70:	adc.w	r3, r3, #4294967295	; 0xffffffff
   22b74:	strd	r2, r3, [sp]
   22b78:	ldrd	r2, r3, [sp, #32]
   22b7c:	bl	171e8 <set_extent_dirty@@Base>
   22b80:	ldr	r1, [sp, #180]	; 0xb4
   22b82:	mov.w	r8, #12
   22b86:	ldr	r3, [sp, #96]	; 0x60
   22b88:	mov.w	r2, #65536	; 0x10000
   22b8c:	addw	r1, r1, #645	; 0x285
   22b90:	vmov	s18, r1
   22b94:	ldr.w	r1, [pc, #1464]	; 23150 <btrfs_reserve_extent@@Base+0x914>
   22b98:	ldr.w	r9, [r3, #464]	; 0x1d0
   22b9c:	add	r1, pc
   22b9e:	add.w	r3, r9, #96	; 0x60
   22ba2:	vmov	s19, r1
   22ba6:	ldr.w	r1, [pc, #1452]	; 23154 <btrfs_reserve_extent@@Base+0x918>
   22baa:	vmov	s17, r3
   22bae:	movs	r3, #0
   22bb0:	add	r1, pc
   22bb2:	vmov	s20, r1
   22bb6:	add	r1, sp, #200	; 0xc8
   22bb8:	strd	r2, r3, [sp]
   22bbc:	str	r1, [sp, #16]
   22bbe:	mov	r0, r9
   22bc0:	add	r1, sp, #204	; 0xcc
   22bc2:	str	r1, [sp, #12]
   22bc4:	add	r1, sp, #196	; 0xc4
   22bc6:	str	r1, [sp, #8]
   22bc8:	ldrd	r2, r3, [r4, #40]	; 0x28
   22bcc:	bl	29dfe <btrfs_rmap_block@@Base>
   22bd0:	vmov	r2, s18
   22bd4:	vmov	r1, s19
   22bd8:	movs	r3, #71	; 0x47
   22bda:	str	r0, [sp, #0]
   22bdc:	vmov	r0, s20
   22be0:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   22be4:	ldr	r3, [sp, #204]	; 0xcc
   22be6:	ldr	r0, [sp, #196]	; 0xc4
   22be8:	subs	r2, r3, #1
   22bea:	str	r2, [sp, #204]	; 0xcc
   22bec:	cmp	r3, #0
   22bee:	bne.w	22e70 <btrfs_reserve_extent@@Base+0x634>
   22bf2:	blx	8620 <free@plt+0x4>
   22bf6:	cmp.w	r8, #36	; 0x24
   22bfa:	bne.w	22e50 <btrfs_reserve_extent@@Base+0x614>
   22bfe:	movs	r3, #1
   22c00:	str	r3, [r4, #104]	; 0x68
   22c02:	mov	r0, r6
   22c04:	bl	1857e <btrfs_free_path@@Base>
   22c08:	ldr	r3, [r4, #108]	; 0x6c
   22c0a:	cmp	r3, #0
   22c0c:	bne.w	22f2a <btrfs_reserve_extent@@Base+0x6ee>
   22c10:	ldr	r2, [sp, #40]	; 0x28
   22c12:	ldrd	r3, r1, [r4, #96]	; 0x60
   22c16:	mov.w	r9, r2, asr #31
   22c1a:	ands	r3, r2
   22c1c:	and.w	r1, r9, r1
   22c20:	str	r3, [sp, #128]	; 0x80
   22c22:	str	r1, [sp, #132]	; 0x84
   22c24:	ldrd	r0, r1, [sp, #128]	; 0x80
   22c28:	cmp	r9, r1
   22c2a:	it	eq
   22c2c:	cmpeq	r2, r0
   22c2e:	bne.w	22f2a <btrfs_reserve_extent@@Base+0x6ee>
   22c32:	ldrd	r2, r3, [r4, #40]	; 0x28
   22c36:	movs	r6, #1
   22c38:	strd	r2, r3, [sp, #32]
   22c3c:	ldrd	r0, r1, [sp, #32]
   22c40:	ldrd	r2, r3, [sp, #48]	; 0x30
   22c44:	cmp	r1, r3
   22c46:	it	eq
   22c48:	cmpeq	r0, r2
   22c4a:	it	cc
   22c4c:	strdcc	r2, r3, [sp, #32]
   22c50:	add	r3, sp, #216	; 0xd8
   22c52:	str	r3, [sp, #96]	; 0x60
   22c54:	ldr	r3, [sp, #44]	; 0x2c
   22c56:	ldr.w	r0, [r3, #464]	; 0x1d0
   22c5a:	ldr	r3, [sp, #96]	; 0x60
   22c5c:	adds	r0, #96	; 0x60
   22c5e:	str	r6, [sp, #8]
   22c60:	str	r3, [sp, #4]
   22c62:	add	r3, sp, #208	; 0xd0
   22c64:	str	r3, [sp, #0]
   22c66:	ldrd	r2, r3, [sp, #32]
   22c6a:	bl	17218 <find_first_extent_bit@@Base>
   22c6e:	cmp	r0, #0
   22c70:	bne.w	22f2a <btrfs_reserve_extent@@Base+0x6ee>
   22c74:	ldrd	r0, r1, [sp, #32]
   22c78:	ldrd	r2, r3, [sp, #208]	; 0xd0
   22c7c:	ldrd	r8, r9, [sp, #104]	; 0x68
   22c80:	cmp	r3, r1
   22c82:	it	eq
   22c84:	cmpeq	r2, r0
   22c86:	it	cc
   22c88:	movcc	r3, r1
   22c8a:	ldr	r1, [sp, #216]	; 0xd8
   22c8c:	it	cc
   22c8e:	movcc	r2, r0
   22c90:	strd	r2, r3, [sp, #208]	; 0xd0
   22c94:	adds	r1, #1
   22c96:	str	r1, [sp, #32]
   22c98:	ldr	r1, [sp, #220]	; 0xdc
   22c9a:	adc.w	r1, r1, #0
   22c9e:	str	r1, [sp, #36]	; 0x24
   22ca0:	ldr	r1, [sp, #32]
   22ca2:	subs	r1, r1, r2
   22ca4:	str	r1, [sp, #136]	; 0x88
   22ca6:	ldr	r1, [sp, #36]	; 0x24
   22ca8:	sbc.w	r1, r1, r3
   22cac:	str	r1, [sp, #140]	; 0x8c
   22cae:	ldrd	r0, r1, [sp, #136]	; 0x88
   22cb2:	cmp	r1, r9
   22cb4:	it	eq
   22cb6:	cmpeq	r0, r8
   22cb8:	bcc.n	22c54 <btrfs_reserve_extent@@Base+0x418>
   22cba:	ldr	r1, [sp, #104]	; 0x68
   22cbc:	adds	r1, r2, r1
   22cbe:	str	r1, [sp, #144]	; 0x90
   22cc0:	ldr	r1, [sp, #108]	; 0x6c
   22cc2:	adc.w	r1, r3, r1
   22cc6:	str	r1, [sp, #148]	; 0x94
   22cc8:	ldrd	r1, r0, [r4, #40]	; 0x28
   22ccc:	ldr.w	r6, [r4, #49]	; 0x31
   22cd0:	ldr.w	ip, [r4, #53]	; 0x35
   22cd4:	adds	r1, r6, r1
   22cd6:	str	r1, [sp, #152]	; 0x98
   22cd8:	adc.w	r1, ip, r0
   22cdc:	str	r1, [sp, #156]	; 0x9c
   22cde:	ldrd	r0, r1, [sp, #152]	; 0x98
   22ce2:	ldrd	r8, r9, [sp, #144]	; 0x90
   22ce6:	cmp	r1, r9
   22ce8:	it	eq
   22cea:	cmpeq	r0, r8
   22cec:	bcc.w	22f2a <btrfs_reserve_extent@@Base+0x6ee>
   22cf0:	adds.w	r1, sl, r2
   22cf4:	str	r2, [r7, #0]
   22cf6:	str	r1, [sp, #64]	; 0x40
   22cf8:	adc.w	r1, fp, r3
   22cfc:	str	r3, [r7, #4]
   22cfe:	str.w	sl, [r7, #9]
   22d02:	str.w	fp, [r7, #13]
   22d06:	str	r1, [sp, #68]	; 0x44
   22d08:	ldr.w	r0, [r4, #53]	; 0x35
   22d0c:	ldr.w	r1, [r4, #49]	; 0x31
   22d10:	ldrd	r6, r4, [r4, #40]	; 0x28
   22d14:	ldrd	r8, r9, [sp, #64]	; 0x40
   22d18:	adds	r1, r1, r6
   22d1a:	str	r1, [sp, #24]
   22d1c:	adc.w	r1, r0, r4
   22d20:	str	r1, [sp, #28]
   22d22:	ldrd	r0, r1, [sp, #24]
   22d26:	cmp	r1, r9
   22d28:	it	eq
   22d2a:	cmpeq	r0, r8
   22d2c:	bcc.w	22ed8 <btrfs_reserve_extent@@Base+0x69c>
   22d30:	movs	r1, #8
   22d32:	movs	r0, #0
   22d34:	strd	r1, r0, [sp, #8]
   22d38:	ldr	r1, [sp, #64]	; 0x40
   22d3a:	adds.w	r0, r1, #4294967295	; 0xffffffff
   22d3e:	ldr	r1, [sp, #68]	; 0x44
   22d40:	adc.w	r1, r1, #4294967295	; 0xffffffff
   22d44:	strd	r0, r1, [sp]
   22d48:	vmov	r1, s16
   22d4c:	add.w	r0, r1, #192	; 0xc0
   22d50:	bl	1725a <test_range_bit@@Base>
   22d54:	cmp	r0, #0
   22d56:	beq.w	22f6a <btrfs_reserve_extent@@Base+0x72e>
   22d5a:	ldr	r3, [r7, #0]
   22d5c:	ldr	r2, [r7, #4]
   22d5e:	adds.w	r3, r3, sl
   22d62:	str	r3, [sp, #24]
   22d64:	adc.w	r3, r2, fp
   22d68:	str	r3, [sp, #28]
   22d6a:	b.n	22ed8 <btrfs_reserve_extent@@Base+0x69c>
   22d6c:	ldrb.w	r3, [r5, #364]	; 0x16c
   22d70:	lsls	r4, r3, #31
   22d72:	bmi.n	22d7a <btrfs_reserve_extent@@Base+0x53e>
   22d74:	ldr	r3, [r5, #32]
   22d76:	cmp	r3, r6
   22d78:	bne.n	22d8a <btrfs_reserve_extent@@Base+0x54e>
   22d7a:	ldrd	r3, r4, [r5, #264]	; 0x108
   22d7e:	ldrd	r1, r2, [r5, #288]	; 0x120
   22d82:	ands	r3, r1
   22d84:	orr.w	r3, r3, #2
   22d88:	b.n	22890 <btrfs_reserve_extent@@Base+0x54>
   22d8a:	ldrd	r3, r4, [r5, #256]	; 0x100
   22d8e:	ldrd	r1, r2, [r5, #280]	; 0x118
   22d92:	ands	r3, r1
   22d94:	orr.w	r3, r3, #4
   22d98:	b.n	22890 <btrfs_reserve_extent@@Base+0x54>
   22d9a:	ldr	r3, [sp, #40]	; 0x28
   22d9c:	mov	r2, r8
   22d9e:	ldr	r1, [sp, #60]	; 0x3c
   22da0:	str	r3, [sp, #0]
   22da2:	mov	r3, r9
   22da4:	ldr	r1, [r1, #56]	; 0x38
   22da6:	b.n	229ca <btrfs_reserve_extent@@Base+0x18e>
   22da8:	vmov	r1, s18
   22dac:	bl	1ecd4 <btrfs_create_tree@@Base+0x258>
   22db0:	ldrd	r8, r9, [sp, #224]	; 0xe0
   22db4:	ldrd	r0, r1, [r4, #40]	; 0x28
   22db8:	cmp	r9, r1
   22dba:	it	eq
   22dbc:	cmpeq	r8, r0
   22dbe:	bcc.n	22e34 <btrfs_reserve_extent@@Base+0x5f8>
   22dc0:	ldr.w	ip, [r4, #49]	; 0x31
   22dc4:	ldr.w	lr, [r4, #53]	; 0x35
   22dc8:	adds.w	r3, ip, r0
   22dcc:	str	r3, [sp, #120]	; 0x78
   22dce:	adc.w	r3, lr, r1
   22dd2:	str	r3, [sp, #124]	; 0x7c
   22dd4:	ldrd	r2, r3, [sp, #120]	; 0x78
   22dd8:	cmp	r9, r3
   22dda:	it	eq
   22ddc:	cmpeq	r8, r2
   22dde:	bcs.w	22b3e <btrfs_reserve_extent@@Base+0x302>
   22de2:	ldrb.w	r1, [sp, #232]	; 0xe8
   22de6:	adds	r1, #88	; 0x58
   22de8:	uxtb	r1, r1
   22dea:	cmp	r1, #1
   22dec:	bhi.n	22e34 <btrfs_reserve_extent@@Base+0x5f8>
   22dee:	ldrd	r2, r3, [sp, #32]
   22df2:	cmp	r3, r9
   22df4:	it	eq
   22df6:	cmpeq	r2, r8
   22df8:	bcs.n	22e12 <btrfs_reserve_extent@@Base+0x5d6>
   22dfa:	adds.w	r2, r8, #4294967295	; 0xffffffff
   22dfe:	vmov	r0, s17
   22e02:	adc.w	r3, r9, #4294967295	; 0xffffffff
   22e06:	strd	r2, r3, [sp]
   22e0a:	ldrd	r2, r3, [sp, #32]
   22e0e:	bl	171e8 <set_extent_dirty@@Base>
   22e12:	ldrb.w	r1, [sp, #232]	; 0xe8
   22e16:	ldrd	r2, r3, [sp, #224]	; 0xe0
   22e1a:	cmp	r1, #169	; 0xa9
   22e1c:	bne.n	22e3c <btrfs_reserve_extent@@Base+0x600>
   22e1e:	ldr	r1, [sp, #96]	; 0x60
   22e20:	ldr.w	r1, [r1, #464]	; 0x1d0
   22e24:	ldr.w	r1, [r1, #384]	; 0x180
   22e28:	adds.w	r8, r2, r1
   22e2c:	adc.w	r9, r3, #0
   22e30:	strd	r8, r9, [sp, #32]
   22e34:	ldr	r3, [r6, #32]
   22e36:	adds	r3, #1
   22e38:	str	r3, [r6, #32]
   22e3a:	b.n	22b18 <btrfs_reserve_extent@@Base+0x2dc>
   22e3c:	ldr.w	r1, [sp, #233]	; 0xe9
   22e40:	ldr.w	r0, [sp, #237]	; 0xed
   22e44:	adds	r1, r1, r2
   22e46:	str	r1, [sp, #32]
   22e48:	adc.w	r3, r0, r3
   22e4c:	str	r3, [sp, #36]	; 0x24
   22e4e:	b.n	22e34 <btrfs_reserve_extent@@Base+0x5f8>
   22e50:	mov.w	r2, #16384	; 0x4000
   22e54:	sub.w	r3, r8, #32
   22e58:	rsb	r1, r8, #32
   22e5c:	lsl.w	r3, r2, r3
   22e60:	lsr.w	r1, r2, r1
   22e64:	lsl.w	r2, r2, r8
   22e68:	orrs	r3, r1
   22e6a:	add.w	r8, r8, #12
   22e6e:	b.n	22bb6 <btrfs_reserve_extent@@Base+0x37a>
   22e70:	add.w	r0, r0, r2, lsl #3
   22e74:	ldrd	ip, r3, [r0]
   22e78:	ldr	r0, [sp, #200]	; 0xc8
   22e7a:	asrs	r2, r0, #31
   22e7c:	mov	r1, r0
   22e7e:	strd	r1, r2, [sp, #32]
   22e82:	mov	r2, ip
   22e84:	ldr	r1, [sp, #32]
   22e86:	adds.w	r0, r1, #4294967295	; 0xffffffff
   22e8a:	ldr	r1, [sp, #36]	; 0x24
   22e8c:	adc.w	r1, r1, #4294967295	; 0xffffffff
   22e90:	adds.w	r0, r0, ip
   22e94:	adc.w	r1, r3, r1
   22e98:	strd	r0, r1, [sp]
   22e9c:	vmov	r0, s17
   22ea0:	bl	17200 <clear_extent_dirty@@Base>
   22ea4:	b.n	22be4 <btrfs_reserve_extent@@Base+0x3a8>
   22ea6:	ldrd	r3, r4, [sp, #48]	; 0x30
   22eaa:	strd	r3, r4, [sp, #24]
   22eae:	ldr	r1, [sp, #44]	; 0x2c
   22eb0:	ldrd	r2, r3, [sp, #48]	; 0x30
   22eb4:	ldr.w	r0, [r1, #464]	; 0x1d0
   22eb8:	bl	1f5b4 <btrfs_lookup_block_group@@Base>
   22ebc:	cbnz	r0, 22ed8 <btrfs_reserve_extent@@Base+0x69c>
   22ebe:	ldr	r2, [sp, #168]	; 0xa8
   22ec0:	ldr	r3, [pc, #660]	; (23158 <btrfs_reserve_extent@@Base+0x91c>)
   22ec2:	ldr	r3, [r2, r3]
   22ec4:	ldrd	r1, r2, [sp, #48]	; 0x30
   22ec8:	strd	r1, r2, [sp]
   22ecc:	movs	r1, #1
   22ece:	ldr	r2, [pc, #652]	; (2315c <btrfs_reserve_extent@@Base+0x920>)
   22ed0:	ldr	r0, [r3, #0]
   22ed2:	add	r2, pc
   22ed4:	blx	8a64 <__fprintf_chk@plt+0x4>
   22ed8:	vmov	r0, s16
   22edc:	ldrd	r2, r3, [sp, #24]
   22ee0:	bl	1f530 <btrfs_lookup_first_block_group@@Base>
   22ee4:	mov	r1, r0
   22ee6:	cmp	r0, #0
   22ee8:	bne.w	230f4 <btrfs_reserve_extent@@Base+0x8b8>
   22eec:	ldr	r3, [sp, #100]	; 0x64
   22eee:	cmp	r3, #0
   22ef0:	bne.w	23108 <btrfs_reserve_extent@@Base+0x8cc>
   22ef4:	ldr	r3, [sp, #56]	; 0x38
   22ef6:	cmp	r3, #0
   22ef8:	beq.w	230fc <btrfs_reserve_extent@@Base+0x8c0>
   22efc:	ldr	r6, [sp, #56]	; 0x38
   22efe:	movs	r4, #0
   22f00:	ldr	r3, [sp, #112]	; 0x70
   22f02:	ldr	r2, [sp, #172]	; 0xac
   22f04:	subs	r3, r3, r2
   22f06:	str	r3, [sp, #112]	; 0x70
   22f08:	movs	r3, #0
   22f0a:	strd	r3, r4, [sp, #24]
   22f0e:	ldr	r3, [sp, #40]	; 0x28
   22f10:	ldr	r0, [sp, #44]	; 0x2c
   22f12:	str	r3, [sp, #0]
   22f14:	ldrd	r2, r3, [sp, #24]
   22f18:	ldr.w	r0, [r0, #464]	; 0x1d0
   22f1c:	bl	1f8c0 <btrfs_lookup_block_group@@Base+0x30c>
   22f20:	ldr	r3, [sp, #56]	; 0x38
   22f22:	str	r6, [sp, #56]	; 0x38
   22f24:	str	r3, [sp, #100]	; 0x64
   22f26:	mov	r4, r0
   22f28:	b.n	22a00 <btrfs_reserve_extent@@Base+0x1c4>
   22f2a:	ldr.w	r3, [r4, #49]	; 0x31
   22f2e:	ldrd	r1, r0, [r4, #40]	; 0x28
   22f32:	ldr.w	r2, [r4, #53]	; 0x35
   22f36:	adds	r3, r3, r1
   22f38:	str	r3, [sp, #24]
   22f3a:	adc.w	r3, r2, r0
   22f3e:	str	r3, [sp, #28]
   22f40:	ldr	r1, [sp, #44]	; 0x2c
   22f42:	ldrd	r2, r3, [sp, #24]
   22f46:	ldr.w	r0, [r1, #464]	; 0x1d0
   22f4a:	bl	1f530 <btrfs_lookup_first_block_group@@Base>
   22f4e:	mov	r4, r0
   22f50:	cmp	r0, #0
   22f52:	bne.w	22a7a <btrfs_reserve_extent@@Base+0x23e>
   22f56:	ldr	r3, [sp, #116]	; 0x74
   22f58:	cmp	r3, #0
   22f5a:	bne.n	22eae <btrfs_reserve_extent@@Base+0x672>
   22f5c:	movs	r3, #1
   22f5e:	str	r3, [sp, #116]	; 0x74
   22f60:	ldrd	r3, r4, [sp, #48]	; 0x30
   22f64:	strd	r3, r4, [sp, #24]
   22f68:	b.n	22f40 <btrfs_reserve_extent@@Base+0x704>
   22f6a:	ldr	r2, [r7, #0]
   22f6c:	movs	r6, #1
   22f6e:	ldr	r3, [r7, #4]
   22f70:	adds.w	r1, r2, #4294967295	; 0xffffffff
   22f74:	str	r0, [sp, #12]
   22f76:	adc.w	r0, r3, #4294967295	; 0xffffffff
   22f7a:	adds.w	r1, r1, sl
   22f7e:	adc.w	r0, r0, fp
   22f82:	strd	r1, r0, [sp]
   22f86:	vmov	r1, s16
   22f8a:	str	r6, [sp, #8]
   22f8c:	add.w	r0, r1, #160	; 0xa0
   22f90:	bl	1725a <test_range_bit@@Base>
   22f94:	mov	r4, r0
   22f96:	cmp	r0, #0
   22f98:	bne.w	22d5a <btrfs_reserve_extent@@Base+0x51e>
   22f9c:	vmov	r3, s16
   22fa0:	ldr.w	r0, [r3, #224]	; 0xe0
   22fa4:	cbz	r0, 22fcc <btrfs_reserve_extent@@Base+0x790>
   22fa6:	ldr	r2, [r7, #0]
   22fa8:	ldr	r3, [r7, #4]
   22faa:	adds.w	r1, r2, #4294967295	; 0xffffffff
   22fae:	strd	r6, r4, [sp, #8]
   22fb2:	adc.w	r6, r3, #4294967295	; 0xffffffff
   22fb6:	adds.w	r1, r1, sl
   22fba:	adc.w	r6, r6, fp
   22fbe:	strd	r1, r6, [sp]
   22fc2:	bl	1725a <test_range_bit@@Base>
   22fc6:	cmp	r0, #0
   22fc8:	bne.w	22d5a <btrfs_reserve_extent@@Base+0x51e>
   22fcc:	ldrd	r2, r3, [sp, #88]	; 0x58
   22fd0:	ldr.w	r8, [r7]
   22fd4:	orrs	r3, r2
   22fd6:	ldr.w	r9, [r7, #4]
   22fda:	beq.n	23016 <btrfs_reserve_extent@@Base+0x7da>
   22fdc:	adds.w	r3, sl, r8
   22fe0:	str	r3, [sp, #160]	; 0xa0
   22fe2:	adc.w	r3, fp, r9
   22fe6:	str	r3, [sp, #164]	; 0xa4
   22fe8:	ldrd	r0, r1, [sp, #160]	; 0xa0
   22fec:	ldrd	r2, r3, [sp, #80]	; 0x50
   22ff0:	cmp	r3, r1
   22ff2:	it	eq
   22ff4:	cmpeq	r2, r0
   22ff6:	bcs.n	23016 <btrfs_reserve_extent@@Base+0x7da>
   22ff8:	ldr	r2, [sp, #88]	; 0x58
   22ffa:	ldr	r3, [sp, #80]	; 0x50
   22ffc:	adds	r3, r3, r2
   22ffe:	ldr	r2, [sp, #92]	; 0x5c
   23000:	str	r3, [sp, #24]
   23002:	ldr	r3, [sp, #84]	; 0x54
   23004:	adcs	r3, r2
   23006:	str	r3, [sp, #28]
   23008:	ldrd	r2, r3, [sp, #24]
   2300c:	cmp	r9, r3
   2300e:	it	eq
   23010:	cmpeq	r8, r2
   23012:	bcc.w	22ed8 <btrfs_reserve_extent@@Base+0x69c>
   23016:	ldr	r3, [sp, #40]	; 0x28
   23018:	lsls	r3, r3, #31
   2301a:	bmi.n	230b8 <btrfs_reserve_extent@@Base+0x87c>
   2301c:	vmov	r0, s16
   23020:	mov	r2, r8
   23022:	mov	r3, r9
   23024:	bl	1f5b4 <btrfs_lookup_block_group@@Base>
   23028:	cmp	r0, #0
   2302a:	beq.n	230a6 <btrfs_reserve_extent@@Base+0x86a>
   2302c:	ldrd	r3, r6, [r0, #40]	; 0x28
   23030:	ldr	r1, [sp, #184]	; 0xb8
   23032:	subs.w	ip, r8, r3
   23036:	ldr	r2, [r7, #0]
   23038:	sbc.w	r6, r9, r6
   2303c:	ldr	r3, [r7, #4]
   2303e:	mov.w	r8, ip, lsr #16
   23042:	adds.w	ip, r1, ip
   23046:	ldr	r1, [sp, #188]	; 0xbc
   23048:	orr.w	r8, r8, r6, lsl #16
   2304c:	mov.w	r9, r6, lsr #16
   23050:	mov.w	r0, ip, lsr #16
   23054:	adc.w	r6, r1, r6
   23058:	lsrs	r1, r6, #16
   2305a:	orr.w	r0, r0, r6, lsl #16
   2305e:	cmp	r9, r1
   23060:	it	eq
   23062:	cmpeq	r8, r0
   23064:	beq.n	230a6 <btrfs_reserve_extent@@Base+0x86a>
   23066:	vmov	r0, s16
   2306a:	bl	1f5b4 <btrfs_lookup_block_group@@Base>
   2306e:	cbz	r0, 230a6 <btrfs_reserve_extent@@Base+0x86a>
   23070:	ldr	r3, [r7, #0]
   23072:	ldrd	r2, r1, [r0, #40]	; 0x28
   23076:	ldr	r0, [r7, #4]
   23078:	adds.w	r3, r3, #4294967295	; 0xffffffff
   2307c:	adc.w	r0, r0, #4294967295	; 0xffffffff
   23080:	adds.w	r3, r3, sl
   23084:	adc.w	r0, r0, fp
   23088:	subs	r3, r3, r2
   2308a:	sbc.w	r0, r0, r1
   2308e:	adds	r2, #1
   23090:	mvn.w	r3, r3, lsr #16
   23094:	adc.w	r1, r1, #0
   23098:	mvn.w	r3, r3, lsl #16
   2309c:	adds	r3, r3, r2
   2309e:	str	r3, [sp, #24]
   230a0:	adc.w	r3, r0, r1
   230a4:	b.n	22d68 <btrfs_reserve_extent@@Base+0x52c>
   230a6:	vmov	r0, s16
   230aa:	ldr	r2, [r7, #0]
   230ac:	ldr	r3, [r7, #4]
   230ae:	bl	1f5b4 <btrfs_lookup_block_group@@Base>
   230b2:	cbz	r0, 230b8 <btrfs_reserve_extent@@Base+0x87c>
   230b4:	ldr	r3, [sp, #60]	; 0x3c
   230b6:	str	r0, [r3, #56]	; 0x38
   230b8:	ldr	r2, [r7, #0]
   230ba:	ldr	r3, [r7, #4]
   230bc:	adds.w	r1, r2, #4294967295	; 0xffffffff
   230c0:	str.w	sl, [r7, #9]
   230c4:	adc.w	r0, r3, #4294967295	; 0xffffffff
   230c8:	adds.w	r1, r1, sl
   230cc:	adc.w	r0, r0, fp
   230d0:	str.w	fp, [r7, #13]
   230d4:	strd	r1, r0, [sp]
   230d8:	add.w	r0, r5, #96	; 0x60
   230dc:	bl	17200 <clear_extent_dirty@@Base>
   230e0:	ldr	r2, [pc, #124]	; (23160 <btrfs_reserve_extent@@Base+0x924>)
   230e2:	ldr	r3, [pc, #64]	; (23124 <btrfs_reserve_extent@@Base+0x8e8>)
   230e4:	add	r2, pc
   230e6:	ldr	r3, [r2, r3]
   230e8:	ldr	r2, [r3, #0]
   230ea:	ldr	r3, [sp, #244]	; 0xf4
   230ec:	eors	r2, r3
   230ee:	beq.n	2310e <btrfs_reserve_extent@@Base+0x8d2>
   230f0:	blx	8708 <__stack_chk_fail@plt>
   230f4:	ldr	r3, [sp, #100]	; 0x64
   230f6:	ldr	r6, [sp, #56]	; 0x38
   230f8:	str	r3, [sp, #56]	; 0x38
   230fa:	b.n	22f0e <btrfs_reserve_extent@@Base+0x6d2>
   230fc:	movs	r3, #0
   230fe:	movs	r4, #0
   23100:	movs	r6, #1
   23102:	strd	r3, r4, [sp, #24]
   23106:	b.n	22f0e <btrfs_reserve_extent@@Base+0x6d2>
   23108:	mvn.w	r4, #27
   2310c:	b.n	230e0 <btrfs_reserve_extent@@Base+0x8a4>
   2310e:	mov	r0, r4
   23110:	add	sp, #252	; 0xfc
   23112:	vpop	{d8-d10}
   23116:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2311a:	nop
   2311c:	movs	r5, #46	; 0x2e
   2311e:	movs	r4, r0
   23120:	movs	r5, #42	; 0x2a
   23122:	movs	r4, r0
   23124:	lsls	r0, r5, #8
   23126:	movs	r0, r0
   23128:	cbnz	r0, 2316a <btrfs_alloc_free_block@@Base+0x6>
   2312a:	movs	r1, r0
   2312c:	uxtb	r1, r0
   2312e:	movs	r1, r0
   23130:	ldrb	r0, [r0, #16]
   23132:	movs	r1, r0
   23134:	cbnz	r2, 23168 <btrfs_alloc_free_block@@Base+0x4>
   23136:	movs	r1, r0
   23138:	uxth	r3, r1
   2313a:	movs	r1, r0
   2313c:	ldrb	r2, [r1, #15]
   2313e:	movs	r1, r0
   23140:	cbnz	r6, 23168 <btrfs_alloc_free_block@@Base+0x4>
   23142:	movs	r1, r0
   23144:	sxtb	r5, r3
   23146:	movs	r1, r0
   23148:			; <UNDEFINED> instruction: 0xb821
   2314a:	movs	r1, r0
   2314c:			; <UNDEFINED> instruction: 0xb8e0
   2314e:	movs	r1, r0
   23150:	add	sp, #4
   23152:	movs	r1, r0
   23154:	ldrb	r4, [r6, #4]
   23156:	movs	r1, r0
   23158:	lsls	r0, r7, #8
   2315a:	movs	r0, r0
   2315c:	uxth	r6, r5
   2315e:	movs	r1, r0
   23160:	adds	r4, r3, #2
   23162:	movs	r4, r0

00023164 <btrfs_alloc_free_block@@Base>:
   23164:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23168:	mov	r4, r2
   2316a:	ldr	r2, [pc, #600]	; (233c4 <btrfs_alloc_free_block@@Base+0x260>)
   2316c:	sub	sp, #84	; 0x54
   2316e:	ldr	r3, [pc, #600]	; (233c8 <btrfs_alloc_free_block@@Base+0x264>)
   23170:	mov	r7, r0
   23172:	add	r2, pc
   23174:	ldr.w	r8, [r1, #464]	; 0x1d0
   23178:	movs	r0, #32
   2317a:	ldrd	r9, sl, [sp, #128]	; 0x80
   2317e:	ldr	r3, [r2, r3]
   23180:	mov	r6, r1
   23182:	mov.w	fp, #0
   23186:	ldr	r3, [r3, #0]
   23188:	str	r3, [sp, #76]	; 0x4c
   2318a:	mov.w	r3, #0
   2318e:	ldr.w	r3, [r8, #308]	; 0x134
   23192:	ldr.w	r2, [r3, #188]	; 0xbc
   23196:	str	r2, [sp, #48]	; 0x30
   23198:	ldr.w	r3, [r3, #192]	; 0xc0
   2319c:	str	r3, [sp, #52]	; 0x34
   2319e:	blx	8870 <malloc@plt+0x4>
   231a2:	mov	r5, r0
   231a4:	cmp	r0, #0
   231a6:	beq.w	233a8 <btrfs_alloc_free_block@@Base+0x244>
   231aa:	mov	r0, r8
   231ac:	movs	r2, #4
   231ae:	movs	r3, #0
   231b0:	bl	1ec44 <btrfs_create_tree@@Base+0x1c8>
   231b4:	mov	r8, r0
   231b6:	cbnz	r0, 231fc <btrfs_alloc_free_block@@Base+0x98>
   231b8:	ldr	r0, [pc, #528]	; (233cc <btrfs_alloc_free_block@@Base+0x268>)
   231ba:	mvn.w	r4, #116	; 0x74
   231be:	add	r0, pc
   231c0:	bl	17b7c <__btrfs_error@@Base>
   231c4:	ldr	r2, [pc, #520]	; (233d0 <btrfs_alloc_free_block@@Base+0x26c>)
   231c6:	cmp	r4, #0
   231c8:	ldr	r1, [pc, #520]	; (233d4 <btrfs_alloc_free_block@@Base+0x270>)
   231ca:	ldr	r0, [pc, #524]	; (233d8 <btrfs_alloc_free_block@@Base+0x274>)
   231cc:	add	r2, pc
   231ce:	ite	le
   231d0:	movle	r3, #0
   231d2:	movgt	r3, #1
   231d4:	addw	r2, r2, #683	; 0x2ab
   231d8:	str	r3, [sp, #0]
   231da:	add	r1, pc
   231dc:	add	r0, pc
   231de:	movw	r3, #2559	; 0x9ff
   231e2:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   231e6:	ldr	r2, [pc, #500]	; (233dc <btrfs_alloc_free_block@@Base+0x278>)
   231e8:	ldr	r3, [pc, #476]	; (233c8 <btrfs_alloc_free_block@@Base+0x264>)
   231ea:	add	r2, pc
   231ec:	ldr	r3, [r2, r3]
   231ee:	ldr	r2, [r3, #0]
   231f0:	ldr	r3, [sp, #76]	; 0x4c
   231f2:	eors	r2, r3
   231f4:	beq.w	233ba <btrfs_alloc_free_block@@Base+0x256>
   231f8:	blx	8708 <__stack_chk_fail@plt>
   231fc:	add	r3, sp, #56	; 0x38
   231fe:	mov.w	r2, #4294967295	; 0xffffffff
   23202:	str	r3, [sp, #24]
   23204:	mov.w	r3, #4294967295	; 0xffffffff
   23208:	strd	r2, r3, [sp, #16]
   2320c:	mov	r1, r6
   2320e:	ldrd	r2, r3, [sp, #136]	; 0x88
   23212:	mov	r0, r7
   23214:	str.w	fp, [sp, #28]
   23218:	strd	r2, r3, [sp, #8]
   2321c:	ldrd	r2, r3, [sp, #144]	; 0x90
   23220:	strd	r2, r3, [sp]
   23224:	mov	r2, r4
   23226:	mov	r3, fp
   23228:	bl	2283c <btrfs_reserve_extent@@Base>
   2322c:	subs	r4, r0, #0
   2322e:	blt.n	231c4 <btrfs_alloc_free_block@@Base+0x60>
   23230:	cmp.w	r9, #0
   23234:	beq.w	2339c <btrfs_alloc_free_block@@Base+0x238>
   23238:	add.w	r2, r9, #16
   2323c:	mov	r3, r5
   2323e:	ldr.w	r1, [r9], #4
   23242:	cmp	r9, r2
   23244:	str.w	r1, [r3], #4
   23248:	bne.n	2323e <btrfs_alloc_free_block@@Base+0xda>
   2324a:	ldrb.w	r2, [r9]
   2324e:	strb	r2, [r3, #0]
   23250:	movs	r2, #0
   23252:	movs	r3, #0
   23254:	strd	r2, r3, [r5, #24]
   23258:	movs	r1, #0
   2325a:	ldr	r3, [sp, #48]	; 0x30
   2325c:	ldr	r2, [sp, #52]	; 0x34
   2325e:	strb	r1, [r5, #20]
   23260:	lsrs	r3, r3, #8
   23262:	strb.w	sl, [r5, #17]
   23266:	orr.w	r3, r3, r2, lsl #24
   2326a:	eor.w	r3, r3, #1
   2326e:	and.w	r3, r3, #1
   23272:	strb	r3, [r5, #18]
   23274:	movs	r3, #1
   23276:	strb	r3, [r5, #19]
   23278:	ldr.w	r3, [r6, #464]	; 0x1d0
   2327c:	ldr.w	r4, [sp, #65]	; 0x41
   23280:	ldr.w	fp, [sp, #69]	; 0x45
   23284:	ldr.w	r3, [r3, #308]	; 0x134
   23288:	ldr.w	r0, [r3, #188]	; 0xbc
   2328c:	mov	r3, r1
   2328e:	and.w	r2, r0, #256	; 0x100
   23292:	orrs	r3, r2
   23294:	beq.n	232a8 <btrfs_alloc_free_block@@Base+0x144>
   23296:	mov	r2, sl
   23298:	str.w	sl, [sp, #65]	; 0x41
   2329c:	asrs	r3, r2, #31
   2329e:	str.w	r3, [sp, #69]	; 0x45
   232a2:	movs	r3, #169	; 0xa9
   232a4:	strb.w	r3, [sp, #64]	; 0x40
   232a8:	ldrd	r2, r3, [sp, #120]	; 0x78
   232ac:	cmp	r3, #0
   232ae:	it	eq
   232b0:	cmpeq	r2, #2
   232b2:	bne.n	232f2 <btrfs_alloc_free_block@@Base+0x18e>
   232b4:	ldrd	r2, r3, [sp, #56]	; 0x38
   232b8:	movs	r1, #8
   232ba:	str	r1, [sp, #8]
   232bc:	adds	r1, r2, r4
   232be:	adc.w	ip, r3, fp
   232c2:	adds.w	r1, r1, #4294967295	; 0xffffffff
   232c6:	adc.w	r0, ip, #4294967295	; 0xffffffff
   232ca:	strd	r1, r0, [sp]
   232ce:	ldr	r1, [r7, #0]
   232d0:	add.w	r0, r1, #192	; 0xc0
   232d4:	bl	16fbc <set_extent_bits@@Base>
   232d8:	ldr	r2, [pc, #260]	; (233e0 <btrfs_alloc_free_block@@Base+0x27c>)
   232da:	ldr	r1, [pc, #264]	; (233e4 <btrfs_alloc_free_block@@Base+0x280>)
   232dc:	movw	r3, #2530	; 0x9e2
   232e0:	add	r2, pc
   232e2:	addw	r2, r2, #666	; 0x29a
   232e6:	add	r1, pc
   232e8:	str	r0, [sp, #0]
   232ea:	ldr	r0, [pc, #252]	; (233e8 <btrfs_alloc_free_block@@Base+0x284>)
   232ec:	add	r0, pc
   232ee:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   232f2:	ldrd	r3, r2, [r8, #32]
   232f6:	mov.w	r9, #0
   232fa:	mov	r1, r7
   232fc:	adds	r3, r3, r4
   232fe:	adc.w	r2, r2, fp
   23302:	strd	r3, r2, [r8, #32]
   23306:	movs	r3, #0
   23308:	strd	r3, r3, [sp, #36]	; 0x24
   2330c:	movs	r3, #3
   2330e:	strd	sl, r3, [sp, #24]
   23312:	ldrd	r2, r3, [sp, #120]	; 0x78
   23316:	mov.w	r8, #0
   2331a:	strd	r4, fp, [sp]
   2331e:	ldr.w	r0, [r6, #464]	; 0x1d0
   23322:	strd	r2, r3, [sp, #16]
   23326:	str	r5, [sp, #32]
   23328:	ldrd	r2, r3, [sp, #56]	; 0x38
   2332c:	strd	r8, r9, [sp, #8]
   23330:	bl	245f4 <btrfs_add_delayed_tree_ref@@Base>
   23334:	mov	r4, r0
   23336:	cmp	r0, #0
   23338:	bne.w	231c4 <btrfs_alloc_free_block@@Base+0x60>
   2333c:	ldrd	r2, r3, [sp, #56]	; 0x38
   23340:	ldr.w	r0, [r6, #464]	; 0x1d0
   23344:	bl	1c92e <btrfs_find_create_tree_block@@Base>
   23348:	mov	r4, r0
   2334a:	cbnz	r0, 233ae <btrfs_alloc_free_block@@Base+0x24a>
   2334c:	ldr.w	r2, [r6, #447]	; 0x1bf
   23350:	mov	r1, r6
   23352:	ldr.w	r3, [r6, #451]	; 0x1c3
   23356:	mov.w	fp, sl, asr #31
   2335a:	mov	r0, r7
   2335c:	strd	r8, r9, [sp, #32]
   23360:	strd	sl, fp, [sp, #24]
   23364:	strd	r2, r3, [sp, #16]
   23368:	ldr.w	r2, [sp, #65]	; 0x41
   2336c:	ldr.w	r3, [sp, #69]	; 0x45
   23370:	strd	r8, r9, [sp, #8]
   23374:	strd	r2, r3, [sp]
   23378:	ldrd	r2, r3, [sp, #56]	; 0x38
   2337c:	bl	2134c <btrfs_free_extent@@Base>
   23380:	ldr	r2, [pc, #104]	; (233ec <btrfs_alloc_free_block@@Base+0x288>)
   23382:	ldr	r1, [pc, #108]	; (233f0 <btrfs_alloc_free_block@@Base+0x28c>)
   23384:	movs	r3, #1
   23386:	ldr	r0, [pc, #108]	; (233f4 <btrfs_alloc_free_block@@Base+0x290>)
   23388:	add	r2, pc
   2338a:	str	r3, [sp, #0]
   2338c:	addw	r2, r2, #683	; 0x2ab
   23390:	add	r1, pc
   23392:	add	r0, pc
   23394:	movw	r3, #2567	; 0xa07
   23398:	bl	1eff4 <btrfs_create_tree@@Base+0x578>
   2339c:	movs	r2, #17
   2339e:	mov	r1, r9
   233a0:	mov	r0, r5
   233a2:	blx	89bc <memset@plt+0x4>
   233a6:	b.n	23250 <btrfs_alloc_free_block@@Base+0xec>
   233a8:	mvn.w	r4, #11
   233ac:	b.n	231c4 <btrfs_alloc_free_block@@Base+0x60>
   233ae:	bl	1dd78 <btrfs_set_buffer_uptodate@@Base>
   233b2:	ldr	r3, [r7, #52]	; 0x34
   233b4:	adds	r3, #1
   233b6:	str	r3, [r7, #52]	; 0x34
   233b8:	b.n	231e6 <btrfs_alloc_free_block@@Base+0x82>
   233ba:	mov	r0, r4
   233bc:	add	sp, #84	; 0x54
   233be:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   233c2:	nop
   233c4:	adds	r6, r1, #0
   233c6:	movs	r4, r0
   233c8:	lsls	r0, r5, #8
   233ca:	movs	r0, r0
   233cc:	add	r7, sp, #924	; 0x39c
   233ce:	movs	r1, r0
   233d0:	cbz	r2, 233d4 <btrfs_alloc_free_block@@Base+0x270>
   233d2:	movs	r1, r0
   233d4:	add	r1, sp, #780	; 0x30c
   233d6:	movs	r1, r0
   233d8:	ldr	r3, [sp, #724]	; 0x2d4
   233da:	movs	r1, r0
   233dc:	subs	r6, r2, r6
   233de:	movs	r4, r0
   233e0:	add	r7, sp, #952	; 0x3b8
   233e2:	movs	r1, r0
   233e4:	add	r0, sp, #732	; 0x2dc
   233e6:	movs	r1, r0
   233e8:	strb	r0, [r7, #7]
   233ea:	movs	r1, r0
   233ec:	add	r7, sp, #280	; 0x118
   233ee:	movs	r1, r0
   233f0:	add	r0, sp, #52	; 0x34
   233f2:	movs	r1, r0
   233f4:	add	r3, sp, #428	; 0x1ac
   233f6:	movs	r1, r0

000233f8 <add_new_free_space@@Base>:
   233f8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   233fc:	mov	r4, r2
   233fe:	ldr	r2, [pc, #260]	; (23504 <add_new_free_space@@Base+0x10c>)
   23400:	mov	r5, r3
   23402:	ldr	r3, [pc, #260]	; (23508 <add_new_free_space@@Base+0x110>)
   23404:	sub	sp, #44	; 0x2c
   23406:	add	r2, pc
   23408:	ldr.w	sl, [pc, #256]	; 2350c <add_new_free_space@@Base+0x114>
   2340c:	ldr.w	fp, [pc, #256]	; 23510 <add_new_free_space@@Base+0x118>
   23410:	movs	r6, #0
   23412:	ldr	r3, [r2, r3]
   23414:	add	sl, pc
   23416:	addw	sl, sl, #706	; 0x2c2
   2341a:	add	fp, pc
   2341c:	ldr	r3, [r3, #0]
   2341e:	str	r3, [sp, #36]	; 0x24
   23420:	mov.w	r3, #0
   23424:	mov	r8, r0
   23426:	mov	r9, r1
   23428:	mov	r7, r6
   2342a:	ldrd	r2, r3, [sp, #80]	; 0x50
   2342e:	cmp	r5, r3
   23430:	it	eq
   23432:	cmpeq	r4, r2
   23434:	bcc.n	2344a <add_new_free_space@@Base+0x52>
   23436:	ldr	r2, [pc, #220]	; (23514 <add_new_free_space@@Base+0x11c>)
   23438:	ldr	r3, [pc, #204]	; (23508 <add_new_free_space@@Base+0x110>)
   2343a:	add	r2, pc
   2343c:	ldr	r3, [r2, r3]
   2343e:	ldr	r2, [r3, #0]
   23440:	ldr	r3, [sp, #36]	; 0x24
   23442:	eors	r2, r3
   23444:	beq.n	234fa <add_new_free_space@@Base+0x102>
   23446:	blx	8708 <__stack_chk_fail@plt>
   2344a:	movs	r3, #5
   2344c:	add.w	r0, r9, #160	; 0xa0
   23450:	str	r3, [sp, #8]
   23452:	mov	r2, r4
   23454:	add	r3, sp, #24
   23456:	str	r3, [sp, #4]
   23458:	add	r3, sp, #16
   2345a:	str	r3, [sp, #0]
   2345c:	mov	r3, r5
   2345e:	bl	17218 <find_first_extent_bit@@Base>
   23462:	cbnz	r0, 234be <add_new_free_space@@Base+0xc6>
   23464:	ldrd	r2, r3, [sp, #16]
   23468:	cmp	r5, r3
   2346a:	it	eq
   2346c:	cmpeq	r4, r2
   2346e:	mov	r0, r2
   23470:	mov	r1, r3
   23472:	bcc.n	23480 <add_new_free_space@@Base+0x88>
   23474:	ldr	r3, [sp, #24]
   23476:	adds	r4, r3, #1
   23478:	ldr	r3, [sp, #28]
   2347a:	adc.w	r5, r3, #0
   2347e:	b.n	2342a <add_new_free_space@@Base+0x32>
   23480:	ldrd	r2, r3, [sp, #80]	; 0x50
   23484:	ldr.w	ip, [r8, #64]	; 0x40
   23488:	cmp	r1, r3
   2348a:	it	eq
   2348c:	cmpeq	r0, r2
   2348e:	bcs.n	234be <add_new_free_space@@Base+0xc6>
   23490:	subs	r2, r0, r4
   23492:	mov	r0, ip
   23494:	sbc.w	r3, r1, r5
   23498:	adds	r6, r6, r2
   2349a:	strd	r2, r3, [sp]
   2349e:	adc.w	r7, r3, r7
   234a2:	mov	r2, r4
   234a4:	mov	r3, r5
   234a6:	bl	2731a <btrfs_add_free_space@@Base>
   234aa:	movw	r3, #3693	; 0xe6d
   234ae:	mov	r2, sl
   234b0:	mov	r1, fp
   234b2:	str	r0, [sp, #0]
   234b4:	ldr	r0, [pc, #96]	; (23518 <add_new_free_space@@Base+0x120>)
   234b6:	add	r0, pc
   234b8:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   234bc:	b.n	23474 <add_new_free_space@@Base+0x7c>
   234be:	ldr	r3, [sp, #80]	; 0x50
   234c0:	ldr	r2, [sp, #84]	; 0x54
   234c2:	subs	r3, r3, r4
   234c4:	ldr.w	r0, [r8, #64]	; 0x40
   234c8:	sbc.w	r2, r2, r5
   234cc:	adds	r6, r6, r3
   234ce:	strd	r3, r2, [sp]
   234d2:	adc.w	r7, r2, r7
   234d6:	mov	r3, r5
   234d8:	mov	r2, r4
   234da:	bl	2731a <btrfs_add_free_space@@Base>
   234de:	ldr	r2, [pc, #60]	; (2351c <add_new_free_space@@Base+0x124>)
   234e0:	ldr	r1, [pc, #60]	; (23520 <add_new_free_space@@Base+0x128>)
   234e2:	movw	r3, #3705	; 0xe79
   234e6:	add	r2, pc
   234e8:	addw	r2, r2, #706	; 0x2c2
   234ec:	add	r1, pc
   234ee:	str	r0, [sp, #0]
   234f0:	ldr	r0, [pc, #48]	; (23524 <add_new_free_space@@Base+0x12c>)
   234f2:	add	r0, pc
   234f4:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   234f8:	b.n	23436 <add_new_free_space@@Base+0x3e>
   234fa:	mov	r0, r6
   234fc:	mov	r1, r7
   234fe:	add	sp, #44	; 0x2c
   23500:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23504:	adds	r2, r7, r5
   23506:	movs	r4, r0
   23508:	lsls	r0, r5, #8
   2350a:	movs	r0, r0
   2350c:	add	r6, sp, #744	; 0x2e8
   2350e:	movs	r1, r0
   23510:	add	r7, pc, #524	; (adr r7, 23720 <btrfs_run_delayed_refs@@Base+0x13c>)
   23512:	movs	r1, r0
   23514:	adds	r6, r0, r5
   23516:	movs	r4, r0
   23518:	strb	r6, [r5, #0]
   2351a:	movs	r1, r0
   2351c:	add	r5, sp, #928	; 0x3a0
   2351e:	movs	r1, r0
   23520:	add	r6, pc, #708	; (adr r6, 237e8 <btrfs_run_delayed_refs@@Base+0x204>)
   23522:	movs	r1, r0
   23524:	ldr	r2, [r6, #124]	; 0x7c
   23526:	movs	r1, r0

00023528 <cleanup_ref_head@@Base>:
   23528:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2352a:	mov	r5, r0
   2352c:	ldr	r0, [r2, #48]	; 0x30
   2352e:	mov	r7, r1
   23530:	mov	r4, r2
   23532:	cbz	r0, 2353c <cleanup_ref_head@@Base+0x14>
   23534:	movs	r3, #0
   23536:	str	r3, [r2, #48]	; 0x30
   23538:	blx	8620 <free@plt+0x4>
   2353c:	ldr	r3, [r4, #24]
   2353e:	cmp	r3, #0
   23540:	bne.n	235d8 <cleanup_ref_head@@Base+0xb0>
   23542:	ldr	r3, [r4, #48]	; 0x30
   23544:	cmp	r3, #0
   23546:	bne.n	235d8 <cleanup_ref_head@@Base+0xb0>
   23548:	ldr	r3, [r5, #72]	; 0x48
   2354a:	add.w	r6, r4, #36	; 0x24
   2354e:	add.w	r1, r5, #64	; 0x40
   23552:	subs	r3, #1
   23554:	mov	r0, r6
   23556:	str	r3, [r5, #72]	; 0x48
   23558:	bl	139d0 <rb_erase@@Base>
   2355c:	ldrb.w	r3, [r4, #60]	; 0x3c
   23560:	str	r6, [r4, #36]	; 0x24
   23562:	lsls	r2, r3, #31
   23564:	bpl.n	235b2 <cleanup_ref_head@@Base+0x8a>
   23566:	ldrd	r2, r3, [r4, #8]
   2356a:	mov	r0, r7
   2356c:	strd	r2, r3, [sp]
   23570:	ldrd	r2, r3, [r4]
   23574:	bl	21334 <btrfs_pin_extent@@Base>
   23578:	ldrb.w	r3, [r4, #60]	; 0x3c
   2357c:	lsls	r3, r3, #30
   2357e:	bmi.n	235b2 <cleanup_ref_head@@Base+0x8a>
   23580:	ldr	r0, [r5, #0]
   23582:	movs	r2, #4
   23584:	movs	r3, #0
   23586:	bl	1ec44 <btrfs_create_tree@@Base+0x1c8>
   2358a:	cbnz	r0, 235a0 <cleanup_ref_head@@Base+0x78>
   2358c:	ldr	r1, [pc, #76]	; (235dc <cleanup_ref_head@@Base+0xb4>)
   2358e:	movw	r2, #3758	; 0xeae
   23592:	ldr	r0, [pc, #76]	; (235e0 <cleanup_ref_head@@Base+0xb8>)
   23594:	add	r1, pc
   23596:	addw	r1, r1, #725	; 0x2d5
   2359a:	add	r0, pc
   2359c:	bl	1f4f4 <btrfs_create_tree@@Base+0xa78>
   235a0:	ldrd	r3, r2, [r0, #32]
   235a4:	ldrd	r1, r5, [r4, #8]
   235a8:	subs	r3, r3, r1
   235aa:	sbc.w	r2, r2, r5
   235ae:	strd	r3, r2, [r0, #32]
   235b2:	ldrd	r2, r3, [r4, #16]
   235b6:	adds.w	r0, r2, #4294967295	; 0xffffffff
   235ba:	adc.w	r1, r3, #4294967295	; 0xffffffff
   235be:	cmp	r3, #0
   235c0:	it	eq
   235c2:	cmpeq	r2, #1
   235c4:	beq.n	235d0 <cleanup_ref_head@@Base+0xa8>
   235c6:	strd	r0, r1, [r4, #16]
   235ca:	movs	r0, #0
   235cc:	add	sp, #12
   235ce:	pop	{r4, r5, r6, r7, pc}
   235d0:	mov	r0, r4
   235d2:	blx	8620 <free@plt+0x4>
   235d6:	b.n	235ca <cleanup_ref_head@@Base+0xa2>
   235d8:	movs	r0, #1
   235da:	b.n	235cc <cleanup_ref_head@@Base+0xa4>
   235dc:	add	r5, sp, #232	; 0xe8
   235de:	movs	r1, r0
   235e0:	add	r4, sp, #244	; 0xf4
   235e2:	movs	r1, r0

000235e4 <btrfs_run_delayed_refs@@Base>:
   235e4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   235e8:	mov	sl, r0
   235ea:	vpush	{d8}
   235ee:	movs	r6, #0
   235f0:	ldr	r2, [pc, #736]	; (238d4 <btrfs_run_delayed_refs@@Base+0x2f0>)
   235f2:	ldr	r3, [pc, #740]	; (238d8 <btrfs_run_delayed_refs@@Base+0x2f4>)
   235f4:	add	r2, pc
   235f6:	sub	sp, #132	; 0x84
   235f8:	ldr	r3, [r2, r3]
   235fa:	mov	r2, r0
   235fc:	ldr	r3, [r3, #0]
   235fe:	str	r3, [sp, #124]	; 0x7c
   23600:	mov.w	r3, #0
   23604:	ldr.w	r3, [r2], #64
   23608:	vmov	s16, r3
   2360c:	ldr	r3, [pc, #716]	; (238dc <btrfs_run_delayed_refs@@Base+0x2f8>)
   2360e:	str	r2, [sp, #72]	; 0x48
   23610:	add	r3, pc
   23612:	str	r3, [sp, #68]	; 0x44
   23614:	add.w	r3, r3, #784	; 0x310
   23618:	vmov	s17, r3
   2361c:	cbnz	r6, 2362c <btrfs_run_delayed_refs@@Base+0x48>
   2361e:	mov	r0, sl
   23620:	bl	2453c <btrfs_select_ref_head@@Base>
   23624:	mov	r6, r0
   23626:	cmp	r0, #0
   23628:	beq.w	23b1e <btrfs_run_delayed_refs@@Base+0x53a>
   2362c:	ldr	r1, [sp, #72]	; 0x48
   2362e:	mov	r2, r6
   23630:	mov	r0, sl
   23632:	bl	24428 <btrfs_merge_delayed_refs@@Base>
   23636:	ldr	r3, [r6, #24]
   23638:	cmp	r3, #0
   2363a:	beq.w	2375c <btrfs_run_delayed_refs@@Base+0x178>
   2363e:	ldr	r4, [r6, #28]
   23640:	add.w	r3, r6, #28
   23644:	add.w	r1, r6, #24
   23648:	cmp	r4, r3
   2364a:	beq.n	23732 <btrfs_run_delayed_refs@@Base+0x14e>
   2364c:	subs	r4, #12
   2364e:	ldrb.w	r3, [r4, #62]	; 0x3e
   23652:	mov	r0, r4
   23654:	bfc	r3, #1, #1
   23658:	strb.w	r3, [r4, #62]	; 0x3e
   2365c:	bl	139d0 <rb_erase@@Base>
   23660:	mov	r3, r4
   23662:	str	r4, [r4, #0]
   23664:	ldr.w	r2, [r3, #12]!
   23668:	cmp	r2, r3
   2366a:	beq.n	2367a <btrfs_run_delayed_refs@@Base+0x96>
   2366c:	ldr	r3, [r4, #16]
   2366e:	str	r3, [r2, #4]
   23670:	str	r2, [r3, #0]
   23672:	ldr	r2, [pc, #600]	; (238cc <btrfs_run_delayed_refs@@Base+0x2e8>)
   23674:	ldr	r3, [pc, #600]	; (238d0 <btrfs_run_delayed_refs@@Base+0x2ec>)
   23676:	strd	r2, r3, [r4, #12]
   2367a:	ldrb.w	r3, [r4, #60]	; 0x3c
   2367e:	cmp	r3, #2
   23680:	beq.n	23770 <btrfs_run_delayed_refs@@Base+0x18c>
   23682:	and.w	r3, r3, #253	; 0xfd
   23686:	cmp	r3, #1
   23688:	bne.n	23778 <btrfs_run_delayed_refs@@Base+0x194>
   2368a:	ldr	r3, [r6, #56]	; 0x38
   2368c:	ldr	r2, [r4, #56]	; 0x38
   2368e:	subs	r3, r3, r2
   23690:	str	r3, [r6, #56]	; 0x38
   23692:	ldrb.w	r3, [r6, #60]	; 0x3c
   23696:	ldr.w	fp, [r6, #48]	; 0x30
   2369a:	and.w	r2, r3, #1
   2369e:	bfc	r3, #0, #1
   236a2:	strb.w	r3, [r6, #60]	; 0x3c
   236a6:	movs	r3, #0
   236a8:	str	r3, [r6, #48]	; 0x30
   236aa:	ldrb.w	r3, [r4, #61]	; 0x3d
   236ae:	cmp	r3, #176	; 0xb0
   236b0:	beq.n	23796 <btrfs_run_delayed_refs@@Base+0x1b2>
   236b2:	cmp	r3, #182	; 0xb6
   236b4:	bne.w	23afc <btrfs_run_delayed_refs@@Base+0x518>
   236b8:	ldrd	r0, r1, [r4, #72]	; 0x48
   236bc:	ldr	r3, [r4, #56]	; 0x38
   236be:	ldrd	r8, r9, [r4, #64]	; 0x40
   236c2:	cmp	r3, #1
   236c4:	ldrb.w	r5, [r4, #60]	; 0x3c
   236c8:	beq.n	2379c <btrfs_run_delayed_refs@@Base+0x1b8>
   236ca:	strd	r0, r1, [sp, #16]
   236ce:	movs	r0, #1
   236d0:	ldr	r1, [pc, #524]	; (238e0 <btrfs_run_delayed_refs@@Base+0x2fc>)
   236d2:	strd	r3, r5, [sp]
   236d6:	mvn.w	r5, #4
   236da:	strd	r8, r9, [sp, #8]
   236de:	add	r1, pc
   236e0:	ldrd	r2, r3, [r4, #24]
   236e4:	blx	8a30 <__printf_chk@plt+0x4>
   236e8:	cmp.w	fp, #0
   236ec:	bne.w	23b16 <btrfs_run_delayed_refs@@Base+0x532>
   236f0:	ldrb.w	r3, [sl, #32]
   236f4:	cbz	r3, 23700 <btrfs_run_delayed_refs@@Base+0x11c>
   236f6:	ldrb.w	r3, [r4, #60]	; 0x3c
   236fa:	cmp	r3, #2
   236fc:	beq.w	23a8a <btrfs_run_delayed_refs@@Base+0x4a6>
   23700:	ldrb.w	r3, [r6, #60]	; 0x3c
   23704:	mov	r0, r4
   23706:	bfc	r3, #3, #1
   2370a:	strb.w	r3, [r6, #60]	; 0x3c
   2370e:	ldr.w	r3, [sl, #76]	; 0x4c
   23712:	adds	r3, #1
   23714:	str.w	r3, [sl, #76]	; 0x4c
   23718:	bl	1f2f0 <btrfs_create_tree@@Base+0x874>
   2371c:	ldr	r2, [pc, #452]	; (238e4 <btrfs_run_delayed_refs@@Base+0x300>)
   2371e:	ldr	r3, [pc, #440]	; (238d8 <btrfs_run_delayed_refs@@Base+0x2f4>)
   23720:	add	r2, pc
   23722:	ldr	r3, [r2, r3]
   23724:	ldr	r2, [r3, #0]
   23726:	ldr	r3, [sp, #124]	; 0x7c
   23728:	eors	r2, r3
   2372a:	beq.w	23b22 <btrfs_run_delayed_refs@@Base+0x53e>
   2372e:	blx	8708 <__stack_chk_fail@plt>
   23732:	mov	r0, r1
   23734:	str	r1, [sp, #64]	; 0x40
   23736:	bl	13c46 <rb_first@@Base>
   2373a:	ldr	r1, [sp, #64]	; 0x40
   2373c:	ldr	r2, [r0, #12]
   2373e:	add.w	r3, r0, #12
   23742:	mov	r4, r0
   23744:	cmp	r2, r3
   23746:	beq.n	2364e <btrfs_run_delayed_refs@@Base+0x6a>
   23748:	ldr	r1, [pc, #412]	; (238e8 <btrfs_run_delayed_refs@@Base+0x304>)
   2374a:	movw	r2, #3786	; 0xeca
   2374e:	ldr	r0, [pc, #412]	; (238ec <btrfs_run_delayed_refs@@Base+0x308>)
   23750:	add	r1, pc
   23752:	addw	r1, r1, #742	; 0x2e6
   23756:	add	r0, pc
   23758:	bl	1f4f4 <btrfs_create_tree@@Base+0xa78>
   2375c:	vmov	r1, s16
   23760:	mov	r2, r6
   23762:	mov	r0, sl
   23764:	bl	23528 <cleanup_ref_head@@Base>
   23768:	cmp	r0, #0
   2376a:	bgt.w	2361c <btrfs_run_delayed_refs@@Base+0x38>
   2376e:	b.n	2361e <btrfs_run_delayed_refs@@Base+0x3a>
   23770:	ldr	r3, [r6, #56]	; 0x38
   23772:	ldr	r2, [r4, #56]	; 0x38
   23774:	add	r3, r2
   23776:	b.n	23690 <btrfs_run_delayed_refs@@Base+0xac>
   23778:	ldr	r2, [pc, #372]	; (238f0 <btrfs_run_delayed_refs@@Base+0x30c>)
   2377a:	movs	r3, #1
   2377c:	ldr	r1, [pc, #372]	; (238f4 <btrfs_run_delayed_refs@@Base+0x310>)
   2377e:	ldr	r0, [pc, #376]	; (238f8 <btrfs_run_delayed_refs@@Base+0x314>)
   23780:	add	r2, pc
   23782:	str	r3, [sp, #0]
   23784:	addw	r2, r2, #761	; 0x2f9
   23788:	add	r1, pc
   2378a:	add	r0, pc
   2378c:	movw	r3, #3910	; 0xf46
   23790:	bl	1ed9a <btrfs_create_tree@@Base+0x31e>
   23794:	b.n	23692 <btrfs_run_delayed_refs@@Base+0xae>
   23796:	movs	r0, #0
   23798:	movs	r1, #0
   2379a:	b.n	236bc <btrfs_run_delayed_refs@@Base+0xd8>
   2379c:	cmp	r5, #1
   2379e:	bne.w	23aaa <btrfs_run_delayed_refs@@Base+0x4c6>
   237a2:	cmp	r2, #0
   237a4:	beq.w	23ae0 <btrfs_run_delayed_refs@@Base+0x4fc>
   237a8:	cmp.w	fp, #0
   237ac:	beq.n	237b6 <btrfs_run_delayed_refs@@Base+0x1d2>
   237ae:	ldrb.w	r3, [fp, #19]
   237b2:	eor.w	r3, r3, #1
   237b6:	ldr	r1, [pc, #324]	; (238fc <btrfs_run_delayed_refs@@Base+0x318>)
   237b8:	ldr	r0, [pc, #324]	; (23900 <btrfs_run_delayed_refs@@Base+0x31c>)
   237ba:	vmov	r2, s17
   237be:	add	r1, pc
   237c0:	add	r0, pc
   237c2:	str	r3, [sp, #0]
   237c4:	movw	r3, #3815	; 0xee7
   237c8:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   237cc:	ldr.w	r7, [sl]
   237d0:	movs	r2, #4
   237d2:	ldr.w	r3, [r7, #308]	; 0x134
   237d6:	mov	r0, r7
   237d8:	ldr.w	r3, [r3, #188]	; 0xbc
   237dc:	and.w	r3, r3, #256	; 0x100
   237e0:	str	r3, [sp, #40]	; 0x28
   237e2:	movs	r3, #0
   237e4:	str	r3, [sp, #44]	; 0x2c
   237e6:	movs	r3, #0
   237e8:	bl	1ec44 <btrfs_create_tree@@Base+0x1c8>
   237ec:	str	r0, [sp, #64]	; 0x40
   237ee:	cbnz	r0, 23800 <btrfs_run_delayed_refs@@Base+0x21c>
   237f0:	ldr	r3, [sp, #68]	; 0x44
   237f2:	movw	r2, #2398	; 0x95e
   237f6:	ldr	r0, [pc, #268]	; (23904 <btrfs_run_delayed_refs@@Base+0x320>)
   237f8:	addw	r1, r3, #805	; 0x325
   237fc:	add	r0, pc
   237fe:	b.n	23758 <btrfs_run_delayed_refs@@Base+0x174>
   23800:	ldrd	r0, r1, [sp, #40]	; 0x28
   23804:	add.w	r5, sp, #113	; 0x71
   23808:	ldrd	r2, r3, [r4, #24]
   2380c:	orrs	r1, r0
   2380e:	strd	r2, r3, [sp, #104]	; 0x68
   23812:	beq.n	2385e <btrfs_run_delayed_refs@@Base+0x27a>
   23814:	ldr.w	ip, [r4, #80]	; 0x50
   23818:	mov	r0, ip
   2381a:	str.w	ip, [sp, #113]	; 0x71
   2381e:	asrs	r1, r0, #31
   23820:	str	r1, [r5, #4]
   23822:	movs	r5, #33	; 0x21
   23824:	movs	r1, #169	; 0xa9
   23826:	strb.w	r1, [sp, #112]	; 0x70
   2382a:	cmp.w	r9, #0
   2382e:	it	eq
   23830:	cmpeq.w	r8, #2
   23834:	bne.n	23920 <btrfs_run_delayed_refs@@Base+0x33c>
   23836:	movs	r1, #8
   23838:	add.w	r0, r7, #192	; 0xc0
   2383c:	str	r1, [sp, #8]
   2383e:	add	r1, sp, #96	; 0x60
   23840:	str	r1, [sp, #4]
   23842:	add	r1, sp, #88	; 0x58
   23844:	str	r1, [sp, #0]
   23846:	bl	17218 <find_first_extent_bit@@Base>
   2384a:	cbz	r0, 23872 <btrfs_run_delayed_refs@@Base+0x28e>
   2384c:	ldr	r1, [pc, #184]	; (23908 <btrfs_run_delayed_refs@@Base+0x324>)
   2384e:	movw	r2, #2415	; 0x96f
   23852:	ldr	r0, [pc, #184]	; (2390c <btrfs_run_delayed_refs@@Base+0x328>)
   23854:	add	r1, pc
   23856:	addw	r1, r1, #805	; 0x325
   2385a:	add	r0, pc
   2385c:	b.n	23758 <btrfs_run_delayed_refs@@Base+0x174>
   2385e:	ldr	r1, [r4, #32]
   23860:	str.w	r1, [sp, #113]	; 0x71
   23864:	ldr	r1, [r4, #36]	; 0x24
   23866:	str	r1, [r5, #4]
   23868:	movs	r1, #168	; 0xa8
   2386a:	movs	r5, #51	; 0x33
   2386c:	strb.w	r1, [sp, #112]	; 0x70
   23870:	b.n	2382a <btrfs_run_delayed_refs@@Base+0x246>
   23872:	ldrd	r0, r1, [r4, #24]
   23876:	ldrd	r2, r3, [sp, #88]	; 0x58
   2387a:	cmp	r1, r3
   2387c:	it	eq
   2387e:	cmpeq	r0, r2
   23880:	beq.n	23894 <btrfs_run_delayed_refs@@Base+0x2b0>
   23882:	ldr	r1, [pc, #140]	; (23910 <btrfs_run_delayed_refs@@Base+0x32c>)
   23884:	mov.w	r2, #2416	; 0x970
   23888:	ldr	r0, [pc, #136]	; (23914 <btrfs_run_delayed_refs@@Base+0x330>)
   2388a:	add	r1, pc
   2388c:	addw	r1, r1, #805	; 0x325
   23890:	add	r0, pc
   23892:	b.n	23758 <btrfs_run_delayed_refs@@Base+0x174>
   23894:	ldrd	r3, r2, [r4, #32]
   23898:	adds	r3, r0, r3
   2389a:	adc.w	r2, r1, r2
   2389e:	adds.w	r3, r3, #4294967295	; 0xffffffff
   238a2:	str	r3, [sp, #56]	; 0x38
   238a4:	adc.w	r3, r2, #4294967295	; 0xffffffff
   238a8:	str	r3, [sp, #60]	; 0x3c
   238aa:	ldrd	r0, r1, [sp, #56]	; 0x38
   238ae:	ldrd	r2, r3, [sp, #96]	; 0x60
   238b2:	cmp	r1, r3
   238b4:	it	eq
   238b6:	cmpeq	r0, r2
   238b8:	beq.n	23920 <btrfs_run_delayed_refs@@Base+0x33c>
   238ba:	ldr	r1, [pc, #92]	; (23918 <btrfs_run_delayed_refs@@Base+0x334>)
   238bc:	movw	r2, #2417	; 0x971
   238c0:	ldr	r0, [pc, #88]	; (2391c <btrfs_run_delayed_refs@@Base+0x338>)
   238c2:	add	r1, pc
   238c4:	addw	r1, r1, #805	; 0x325
   238c8:	add	r0, pc
   238ca:	b.n	23758 <btrfs_run_delayed_refs@@Base+0x174>
   238cc:	lsls	r0, r0, #4
   238ce:	movs	r0, r2
   238d0:	lsls	r0, r0, #8
   238d2:	movs	r0, r4
   238d4:	asrs	r4, r1, #30
   238d6:	movs	r4, r0
   238d8:	lsls	r0, r5, #8
   238da:	movs	r0, r0
   238dc:	add	r4, sp, #760	; 0x2f8
   238de:	movs	r1, r0
   238e0:	add	r3, sp, #104	; 0x68
   238e2:	movs	r1, r0
   238e4:	asrs	r0, r4, #25
   238e6:	movs	r4, r0
   238e8:	add	r3, sp, #504	; 0x1f8
   238ea:	movs	r1, r0
   238ec:	add	r2, sp, #540	; 0x21c
   238ee:	movs	r1, r0
   238f0:	add	r3, sp, #312	; 0x138
   238f2:	movs	r1, r0
   238f4:	add	r4, pc, #84	; (adr r4, 2394c <btrfs_run_delayed_refs@@Base+0x368>)
   238f6:	movs	r1, r0
   238f8:	add	r7, pc, #460	; (adr r7, 23ac8 <btrfs_run_delayed_refs@@Base+0x4e4>)
   238fa:	movs	r1, r0
   238fc:	add	r3, pc, #892	; (adr r3, 23c7c <btrfs_fix_block_accounting@@Base+0x128>)
   238fe:	movs	r1, r0
   23900:	add	r2, sp, #572	; 0x23c
   23902:	movs	r1, r0
   23904:	add	r1, sp, #876	; 0x36c
   23906:	movs	r1, r0
   23908:	add	r2, sp, #488	; 0x1e8
   2390a:	movs	r1, r0
   2390c:	ldr	r1, [r1, #72]	; 0x48
   2390e:	movs	r1, r0
   23910:	add	r2, sp, #272	; 0x110
   23912:	movs	r1, r0
   23914:	add	r1, sp, #920	; 0x398
   23916:	movs	r1, r0
   23918:	add	r2, sp, #48	; 0x30
   2391a:	movs	r1, r0
   2391c:	add	r1, sp, #784	; 0x310
   2391e:	movs	r1, r0
   23920:	bl	18550 <btrfs_alloc_path@@Base>
   23924:	mov	r8, r0
   23926:	cmp	r0, #0
   23928:	beq.w	23aa4 <btrfs_run_delayed_refs@@Base+0x4c0>
   2392c:	ldr	r1, [r7, #24]
   2392e:	movs	r3, #1
   23930:	mov	r2, r0
   23932:	str	r3, [sp, #4]
   23934:	mov	r0, sl
   23936:	add	r3, sp, #84	; 0x54
   23938:	str	r3, [sp, #0]
   2393a:	add	r3, sp, #104	; 0x68
   2393c:	str	r5, [sp, #84]	; 0x54
   2393e:	bl	1b70c <btrfs_insert_empty_items@@Base>
   23942:	mov	r5, r0
   23944:	cmp	r0, #0
   23946:	bne.w	23a7e <btrfs_run_delayed_refs@@Base+0x49a>
   2394a:	ldr.w	r0, [r8]
   2394e:	movs	r2, #25
   23950:	ldr.w	r3, [r8, #32]
   23954:	mov.w	r1, #1
   23958:	add.w	r9, r0, #96	; 0x60
   2395c:	mla	r3, r2, r3, r9
   23960:	ldr.w	r3, [r3, #118]	; 0x76
   23964:	add.w	r2, r3, #101	; 0x65
   23968:	str	r3, [sp, #48]	; 0x30
   2396a:	add.w	r3, r9, r2
   2396e:	strb.w	r1, [r9, r2]
   23972:	strb	r5, [r3, #1]
   23974:	strb	r5, [r3, #2]
   23976:	strb	r5, [r3, #3]
   23978:	strb	r5, [r3, #4]
   2397a:	strb	r5, [r3, #5]
   2397c:	strb	r5, [r3, #6]
   2397e:	strb	r5, [r3, #7]
   23980:	ldrd	r1, r2, [sl, #8]
   23984:	str	r1, [r3, #8]
   23986:	str	r2, [r3, #12]
   23988:	ldrd	r2, r1, [fp, #24]
   2398c:	orr.w	r2, r2, #2
   23990:	str	r2, [r3, #16]
   23992:	str	r1, [r3, #20]
   23994:	ldr	r3, [sp, #48]	; 0x30
   23996:	add.w	r5, r3, #125	; 0x7d
   2399a:	ldrd	r2, r3, [sp, #40]	; 0x28
   2399e:	orrs	r3, r2
   239a0:	bne.n	239ba <btrfs_run_delayed_refs@@Base+0x3d6>
   239a2:	movs	r3, #17
   239a4:	mov	r2, r5
   239a6:	mov	r1, fp
   239a8:	str	r0, [sp, #76]	; 0x4c
   239aa:	bl	17a30 <write_extent_buffer@@Base>
   239ae:	ldr	r3, [r4, #80]	; 0x50
   239b0:	add	r5, r9
   239b2:	ldr	r0, [sp, #76]	; 0x4c
   239b4:	strb	r3, [r5, #17]
   239b6:	ldr	r5, [sp, #48]	; 0x30
   239b8:	adds	r5, #143	; 0x8f
   239ba:	movs	r2, #176	; 0xb0
   239bc:	strb.w	r2, [r9, r5]
   239c0:	ldrd	r1, r2, [r4, #64]	; 0x40
   239c4:	add.w	r3, r9, r5
   239c8:	str.w	r1, [r3, #1]
   239cc:	str.w	r2, [r3, #5]
   239d0:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   239d4:	mov	r0, r8
   239d6:	bl	1857e <btrfs_free_path@@Base>
   239da:	ldr.w	r3, [r7, #384]	; 0x180
   239de:	mov	r0, sl
   239e0:	str	r3, [sp, #0]
   239e2:	movs	r3, #0
   239e4:	str	r3, [sp, #4]
   239e6:	ldrd	r2, r3, [sp, #104]	; 0x68
   239ea:	bl	2cee0 <remove_from_free_space_tree@@Base>
   239ee:	mov	r5, r0
   239f0:	cmp	r0, #0
   239f2:	bne.n	23a7e <btrfs_run_delayed_refs@@Base+0x49a>
   239f4:	str	r0, [sp, #12]
   239f6:	mov.w	r8, #1
   239fa:	str.w	r8, [sp, #8]
   239fe:	ldr.w	r3, [r7, #384]	; 0x180
   23a02:	strd	r3, r0, [sp]
   23a06:	mov	r0, r7
   23a08:	ldrd	r2, r3, [sp, #104]	; 0x68
   23a0c:	bl	1f73c <btrfs_lookup_block_group@@Base+0x188>
   23a10:	ldr.w	r2, [r7, #384]	; 0x180
   23a14:	ldr	r3, [sp, #64]	; 0x40
   23a16:	movs	r1, #0
   23a18:	mov	r5, r0
   23a1a:	mov	r0, r2
   23a1c:	strd	r0, r1, [sp, #48]	; 0x30
   23a20:	ldrd	r0, r1, [r3, #32]
   23a24:	ldrd	r2, r3, [sp, #48]	; 0x30
   23a28:	cmp	r1, r3
   23a2a:	it	eq
   23a2c:	cmpeq	r0, r2
   23a2e:	bcs.n	23a92 <btrfs_run_delayed_refs@@Base+0x4ae>
   23a30:	ldr	r2, [pc, #252]	; (23b30 <btrfs_run_delayed_refs@@Base+0x54c>)
   23a32:	movw	r3, #2462	; 0x99e
   23a36:	ldr	r1, [pc, #252]	; (23b34 <btrfs_run_delayed_refs@@Base+0x550>)
   23a38:	ldr	r0, [pc, #252]	; (23b38 <btrfs_run_delayed_refs@@Base+0x554>)
   23a3a:	add	r2, pc
   23a3c:	addw	r2, r2, #805	; 0x325
   23a40:	add	r1, pc
   23a42:	add	r0, pc
   23a44:	str.w	r8, [sp]
   23a48:	bl	1ed9a <btrfs_create_tree@@Base+0x31e>
   23a4c:	ldr	r3, [sp, #64]	; 0x40
   23a4e:	movs	r2, #0
   23a50:	mov	r1, r3
   23a52:	movs	r3, #0
   23a54:	strd	r2, r3, [r1, #32]
   23a58:	ldrd	r2, r3, [r4, #64]	; 0x40
   23a5c:	cmp	r3, #0
   23a5e:	it	eq
   23a60:	cmpeq	r2, #2
   23a62:	bne.n	23a7e <btrfs_run_delayed_refs@@Base+0x49a>
   23a64:	movs	r3, #8
   23a66:	str	r3, [sp, #8]
   23a68:	ldrd	r2, r3, [sp, #96]	; 0x60
   23a6c:	ldr.w	r0, [sl]
   23a70:	strd	r2, r3, [sp]
   23a74:	adds	r0, #192	; 0xc0
   23a76:	ldrd	r2, r3, [sp, #88]	; 0x58
   23a7a:	bl	16e46 <clear_extent_bits@@Base>
   23a7e:	cmp.w	fp, #0
   23a82:	bne.n	23b16 <btrfs_run_delayed_refs@@Base+0x532>
   23a84:	cmp	r5, #0
   23a86:	bne.w	236f0 <btrfs_run_delayed_refs@@Base+0x10c>
   23a8a:	mov	r0, r4
   23a8c:	bl	1f2f0 <btrfs_create_tree@@Base+0x874>
   23a90:	b.n	2361c <btrfs_run_delayed_refs@@Base+0x38>
   23a92:	ldr	r3, [sp, #48]	; 0x30
   23a94:	subs	r2, r0, r3
   23a96:	ldr	r3, [sp, #52]	; 0x34
   23a98:	sbc.w	r3, r1, r3
   23a9c:	ldr	r1, [sp, #64]	; 0x40
   23a9e:	str	r2, [r1, #32]
   23aa0:	str	r3, [r1, #36]	; 0x24
   23aa2:	b.n	23a58 <btrfs_run_delayed_refs@@Base+0x474>
   23aa4:	mvn.w	r5, #11
   23aa8:	b.n	23a7e <btrfs_run_delayed_refs@@Base+0x49a>
   23aaa:	cmp	r5, #2
   23aac:	bne.n	23ae0 <btrfs_run_delayed_refs@@Base+0x4fc>
   23aae:	movs	r2, #0
   23ab0:	movs	r3, #0
   23ab2:	strd	r2, r3, [sp, #32]
   23ab6:	mov	r0, sl
   23ab8:	ldr	r2, [r4, #80]	; 0x50
   23aba:	strd	r8, r9, [sp, #16]
   23abe:	asrs	r3, r2, #31
   23ac0:	strd	r2, r3, [sp, #24]
   23ac4:	ldrd	r2, r3, [r4, #72]	; 0x48
   23ac8:	strd	r2, r3, [sp, #8]
   23acc:	ldrd	r2, r3, [r4, #32]
   23ad0:	strd	r2, r3, [sp]
   23ad4:	ldrd	r2, r3, [r4, #24]
   23ad8:	bl	1fecc <hash_extent_data_ref@@Base+0x3f4>
   23adc:	mov	r5, r0
   23ade:	b.n	23a7e <btrfs_run_delayed_refs@@Base+0x49a>
   23ae0:	ldr	r2, [pc, #88]	; (23b3c <btrfs_run_delayed_refs@@Base+0x558>)
   23ae2:	movs	r3, #1
   23ae4:	ldr	r1, [pc, #88]	; (23b40 <btrfs_run_delayed_refs@@Base+0x55c>)
   23ae6:	ldr	r0, [pc, #92]	; (23b44 <btrfs_run_delayed_refs@@Base+0x560>)
   23ae8:	add	r2, pc
   23aea:	add.w	r2, r2, #784	; 0x310
   23aee:	add	r1, pc
   23af0:	add	r0, pc
   23af2:	str	r3, [sp, #0]
   23af4:	movw	r3, #3822	; 0xeee
   23af8:	bl	1eff4 <btrfs_create_tree@@Base+0x578>
   23afc:	ldr	r2, [pc, #72]	; (23b48 <btrfs_run_delayed_refs@@Base+0x564>)
   23afe:	movs	r3, #1
   23b00:	ldr	r1, [pc, #72]	; (23b4c <btrfs_run_delayed_refs@@Base+0x568>)
   23b02:	ldr	r0, [pc, #76]	; (23b50 <btrfs_run_delayed_refs@@Base+0x56c>)
   23b04:	add	r2, pc
   23b06:	str	r3, [sp, #0]
   23b08:	addw	r2, r2, #831	; 0x33f
   23b0c:	add	r1, pc
   23b0e:	add	r0, pc
   23b10:	movw	r3, #3842	; 0xf02
   23b14:	b.n	23af8 <btrfs_run_delayed_refs@@Base+0x514>
   23b16:	mov	r0, fp
   23b18:	blx	8620 <free@plt+0x4>
   23b1c:	b.n	23a84 <btrfs_run_delayed_refs@@Base+0x4a0>
   23b1e:	mov	r5, r0
   23b20:	b.n	2371c <btrfs_run_delayed_refs@@Base+0x138>
   23b22:	mov	r0, r5
   23b24:	add	sp, #132	; 0x84
   23b26:	vpop	{d8}
   23b2a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23b2e:	nop
   23b30:	add	r0, sp, #592	; 0x250
   23b32:	movs	r1, r0
   23b34:	add	r1, pc, #372	; (adr r1, 23cac <btrfs_fix_block_accounting@@Base+0x158>)
   23b36:	movs	r1, r0
   23b38:	add	r4, pc, #748	; (adr r4, 23e28 <btrfs_record_file_extent@@Base+0xec>)
   23b3a:	movs	r1, r0
   23b3c:	add	r7, pc, #920	; (adr r7, 23ed8 <btrfs_record_file_extent@@Base+0x19c>)
   23b3e:	movs	r1, r0
   23b40:	add	r0, pc, #700	; (adr r0, 23e00 <btrfs_record_file_extent@@Base+0xc4>)
   23b42:	movs	r1, r0
   23b44:	add	r4, pc, #52	; (adr r4, 23b7c <btrfs_fix_block_accounting@@Base+0x28>)
   23b46:	movs	r1, r0
   23b48:	add	r7, pc, #808	; (adr r7, 23e74 <btrfs_record_file_extent@@Base+0x138>)
   23b4a:	movs	r1, r0
   23b4c:	add	r0, pc, #580	; (adr r0, 23d94 <btrfs_record_file_extent@@Base+0x58>)
   23b4e:	movs	r1, r0
   23b50:	add	r3, pc, #956	; (adr r3, 23f10 <btrfs_record_file_extent@@Base+0x1d4>)
   23b52:	movs	r1, r0

00023b54 <btrfs_fix_block_accounting@@Base>:
   23b54:	ldr	r2, [pc, #460]	; (23d24 <btrfs_fix_block_accounting@@Base+0x1d0>)
   23b56:	mov.w	r1, #4294967295	; 0xffffffff
   23b5a:	ldr	r3, [pc, #460]	; (23d28 <btrfs_fix_block_accounting@@Base+0x1d4>)
   23b5c:	add	r2, pc
   23b5e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23b62:	sub	sp, #124	; 0x7c
   23b64:	ldr.w	r8, [r0]
   23b68:	mov	r5, r0
   23b6a:	ldr	r3, [r2, r3]
   23b6c:	ldr.w	r6, [r8, #24]
   23b70:	ldr	r3, [r3, #0]
   23b72:	str	r3, [sp, #116]	; 0x74
   23b74:	mov.w	r3, #0
   23b78:	bl	235e4 <btrfs_run_delayed_refs@@Base>
   23b7c:	cmp	r0, #0
   23b7e:	bne.w	23d18 <btrfs_fix_block_accounting@@Base+0x1c4>
   23b82:	movs	r7, #0
   23b84:	mov	fp, r7
   23b86:	mov	sl, r7
   23b88:	mov	r9, r7
   23b8a:	mov	r2, r7
   23b8c:	mov	r3, fp
   23b8e:	mov	r0, r8
   23b90:	bl	1f530 <btrfs_lookup_first_block_group@@Base>
   23b94:	mov	r4, r0
   23b96:	cbz	r0, 23be4 <btrfs_fix_block_accounting@@Base+0x90>
   23b98:	ldrd	r2, r3, [r0, #40]	; 0x28
   23b9c:	ldr.w	r7, [r0, #49]	; 0x31
   23ba0:	ldr.w	r1, [r0, #53]	; 0x35
   23ba4:	adds	r7, r7, r2
   23ba6:	strd	sl, r9, [r0, #72]	; 0x48
   23baa:	adc.w	fp, r1, r3
   23bae:	ldr	r3, [r0, #60]	; 0x3c
   23bb0:	movs	r1, #1
   23bb2:	strd	sl, r9, [r3, #16]
   23bb6:	ldrd	r2, r3, [r0, #40]	; 0x28
   23bba:	ldr.w	r0, [r6, #464]	; 0x1d0
   23bbe:	str	r1, [sp, #8]
   23bc0:	ldr.w	ip, [r4, #49]	; 0x31
   23bc4:	adds	r0, #128	; 0x80
   23bc6:	ldr.w	lr, [r4, #53]	; 0x35
   23bca:	adds.w	ip, ip, r2
   23bce:	adc.w	lr, lr, r3
   23bd2:	adds.w	r4, ip, #4294967295	; 0xffffffff
   23bd6:	adc.w	lr, lr, #4294967295	; 0xffffffff
   23bda:	strd	r4, lr, [sp]
   23bde:	bl	16fbc <set_extent_bits@@Base>
   23be2:	b.n	23b8a <btrfs_fix_block_accounting@@Base+0x36>
   23be4:	add	r7, sp, #48	; 0x30
   23be6:	add.w	sl, sp, #28
   23bea:	mov	r0, r7
   23bec:	bl	18548 <btrfs_init_path@@Base>
   23bf0:	ldr.w	r1, [r6, #464]	; 0x1d0
   23bf4:	movs	r3, #168	; 0xa8
   23bf6:	strd	r4, r4, [sp]
   23bfa:	strb.w	r3, [sp, #36]	; 0x24
   23bfe:	mov	r2, sl
   23c00:	mov	r3, r7
   23c02:	ldr	r1, [r1, #24]
   23c04:	mov	r0, r5
   23c06:	strb.w	r4, [sp, #37]	; 0x25
   23c0a:	strb.w	r4, [sp, #38]	; 0x26
   23c0e:	strb.w	r4, [sp, #39]	; 0x27
   23c12:	strb.w	r4, [sp, #40]	; 0x28
   23c16:	strb.w	r4, [sp, #41]	; 0x29
   23c1a:	strb.w	r4, [sp, #42]	; 0x2a
   23c1e:	strb.w	r4, [sp, #43]	; 0x2b
   23c22:	strb.w	r4, [sp, #44]	; 0x2c
   23c26:	strd	r4, r4, [sp, #28]
   23c2a:	bl	1a93c <btrfs_search_slot@@Base>
   23c2e:	subs	r3, r0, #0
   23c30:	blt.n	23cf4 <btrfs_fix_block_accounting@@Base+0x1a0>
   23c32:	ldr.w	r9, [pc, #248]	; 23d2c <btrfs_fix_block_accounting@@Base+0x1d8>
   23c36:	movs	r4, #0
   23c38:	ldr.w	fp, [pc, #244]	; 23d30 <btrfs_fix_block_accounting@@Base+0x1dc>
   23c3c:	movs	r5, #0
   23c3e:	add	r9, pc
   23c40:	addw	r9, r9, #851	; 0x353
   23c44:	add	fp, pc
   23c46:	ldr	r0, [sp, #48]	; 0x30
   23c48:	ldr	r2, [sp, #80]	; 0x50
   23c4a:	ldr.w	r3, [r0, #192]	; 0xc0
   23c4e:	cmp	r2, r3
   23c50:	bcc.n	23c70 <btrfs_fix_block_accounting@@Base+0x11c>
   23c52:	ldr.w	r0, [r6, #464]	; 0x1d0
   23c56:	mov	r1, r7
   23c58:	movs	r2, #0
   23c5a:	strb.w	r2, [sp, #113]	; 0x71
   23c5e:	bl	1bd70 <btrfs_next_sibling_tree_block@@Base>
   23c62:	subs	r3, r0, #0
   23c64:	blt.n	23cf4 <btrfs_fix_block_accounting@@Base+0x1a0>
   23c66:	mov.w	r2, #0
   23c6a:	bne.n	23d08 <btrfs_fix_block_accounting@@Base+0x1b4>
   23c6c:	ldr	r0, [sp, #48]	; 0x30
   23c6e:	ldr	r2, [sp, #80]	; 0x50
   23c70:	mov	r1, sl
   23c72:	bl	1ecd4 <btrfs_create_tree@@Base+0x258>
   23c76:	ldrb.w	r3, [sp, #36]	; 0x24
   23c7a:	cmp	r3, #168	; 0xa8
   23c7c:	bne.n	23cbc <btrfs_fix_block_accounting@@Base+0x168>
   23c7e:	ldr.w	r3, [sp, #37]	; 0x25
   23c82:	movs	r1, #1
   23c84:	ldr.w	r2, [sp, #41]	; 0x29
   23c88:	movs	r0, #0
   23c8a:	adds	r4, r4, r3
   23c8c:	strd	r1, r0, [sp, #8]
   23c90:	adc.w	r5, r2, r5
   23c94:	mov	r0, r6
   23c96:	strd	r3, r2, [sp]
   23c9a:	ldrd	r2, r3, [sp, #28]
   23c9e:	bl	21950 <btrfs_update_block_group@@Base>
   23ca2:	movw	r3, #3354	; 0xd1a
   23ca6:	mov	r2, r9
   23ca8:	mov	r1, fp
   23caa:	str	r0, [sp, #0]
   23cac:	ldr	r0, [pc, #132]	; (23d34 <btrfs_fix_block_accounting@@Base+0x1e0>)
   23cae:	add	r0, pc
   23cb0:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   23cb4:	ldr	r3, [sp, #80]	; 0x50
   23cb6:	adds	r3, #1
   23cb8:	str	r3, [sp, #80]	; 0x50
   23cba:	b.n	23c46 <btrfs_fix_block_accounting@@Base+0xf2>
   23cbc:	cmp	r3, #169	; 0xa9
   23cbe:	bne.n	23cb4 <btrfs_fix_block_accounting@@Base+0x160>
   23cc0:	ldr.w	r3, [r8, #384]	; 0x180
   23cc4:	movs	r2, #1
   23cc6:	movs	r1, #0
   23cc8:	mov	r0, r6
   23cca:	adds	r4, r4, r3
   23ccc:	strd	r2, r1, [sp, #8]
   23cd0:	str	r3, [sp, #0]
   23cd2:	mov.w	r3, #0
   23cd6:	str	r3, [sp, #4]
   23cd8:	adc.w	r5, r5, #0
   23cdc:	ldrd	r2, r3, [sp, #28]
   23ce0:	bl	21950 <btrfs_update_block_group@@Base>
   23ce4:	mov	r3, r0
   23ce6:	cmp	r0, #0
   23ce8:	beq.n	23cb4 <btrfs_fix_block_accounting@@Base+0x160>
   23cea:	mov	r0, r7
   23cec:	str	r3, [sp, #20]
   23cee:	bl	18558 <btrfs_release_path@@Base>
   23cf2:	ldr	r3, [sp, #20]
   23cf4:	ldr	r1, [pc, #64]	; (23d38 <btrfs_fix_block_accounting@@Base+0x1e4>)
   23cf6:	ldr	r2, [pc, #48]	; (23d28 <btrfs_fix_block_accounting@@Base+0x1d4>)
   23cf8:	add	r1, pc
   23cfa:	ldr	r2, [r1, r2]
   23cfc:	ldr	r1, [r2, #0]
   23cfe:	ldr	r2, [sp, #116]	; 0x74
   23d00:	eors	r1, r2
   23d02:	beq.n	23d1c <btrfs_fix_block_accounting@@Base+0x1c8>
   23d04:	blx	8708 <__stack_chk_fail@plt>
   23d08:	ldr.w	r3, [r6, #464]	; 0x1d0
   23d0c:	ldr.w	r3, [r3, #308]	; 0x134
   23d10:	str	r4, [r3, #120]	; 0x78
   23d12:	str	r5, [r3, #124]	; 0x7c
   23d14:	mov	r3, r2
   23d16:	b.n	23cea <btrfs_fix_block_accounting@@Base+0x196>
   23d18:	mov	r3, r0
   23d1a:	b.n	23cf4 <btrfs_fix_block_accounting@@Base+0x1a0>
   23d1c:	mov	r0, r3
   23d1e:	add	sp, #124	; 0x7c
   23d20:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23d24:	asrs	r4, r4, #8
   23d26:	movs	r4, r0
   23d28:	lsls	r0, r5, #8
   23d2a:	movs	r0, r0
   23d2c:	add	r6, pc, #576	; (adr r6, 23f70 <btrfs_record_file_extent@@Base+0x234>)
   23d2e:	movs	r1, r0
   23d30:	ldr	r7, [sp, #356]	; 0x164
   23d32:	movs	r1, r0
   23d34:	ldr	r6, [r6, #0]
   23d36:	movs	r1, r0
   23d38:	asrs	r0, r1, #2
   23d3a:	movs	r4, r0

00023d3c <btrfs_record_file_extent@@Base>:
   23d3c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23d40:	mov	r6, r0
   23d42:	vpush	{d8}
   23d46:	mov	fp, r1
   23d48:	sub	sp, #156	; 0x9c
   23d4a:	strd	r2, r3, [sp, #96]	; 0x60
   23d4e:	ldr	r3, [sp, #200]	; 0xc8
   23d50:	ldr.w	r2, [pc, #1080]	; 2418c <btrfs_record_file_extent@@Base+0x450>
   23d54:	ldrd	r9, sl, [sp, #216]	; 0xd8
   23d58:	str	r3, [sp, #76]	; 0x4c
   23d5a:	add	r2, pc
   23d5c:	ldr	r3, [sp, #208]	; 0xd0
   23d5e:	str	r3, [sp, #68]	; 0x44
   23d60:	ldr	r3, [sp, #212]	; 0xd4
   23d62:	str	r3, [sp, #72]	; 0x48
   23d64:	ldr.w	r3, [pc, #1064]	; 24190 <btrfs_record_file_extent@@Base+0x454>
   23d68:	ldr	r3, [r2, r3]
   23d6a:	ldr	r3, [r3, #0]
   23d6c:	str	r3, [sp, #148]	; 0x94
   23d6e:	mov.w	r3, #0
   23d72:	ldrd	r3, r4, [sp, #224]	; 0xe0
   23d76:	strd	r3, r4, [sp, #56]	; 0x38
   23d7a:	movs	r4, #0
   23d7c:	ldr.w	r3, [pc, #1044]	; 24194 <btrfs_record_file_extent@@Base+0x458>
   23d80:	add	r3, pc
   23d82:	addw	r3, r3, #878	; 0x36e
   23d86:	vmov	s16, r3
   23d8a:	ldr.w	r3, [pc, #1036]	; 24198 <btrfs_record_file_extent@@Base+0x45c>
   23d8e:	add	r3, pc
   23d90:	vmov	s17, r3
   23d94:	ldrd	r2, r3, [sp, #56]	; 0x38
   23d98:	orrs	r3, r2
   23d9a:	beq.n	23e10 <btrfs_record_file_extent@@Base+0xd4>
   23d9c:	orrs.w	r3, r9, sl
   23da0:	bne.n	23dfe <btrfs_record_file_extent@@Base+0xc2>
   23da2:	ldrd	r3, r4, [sp, #224]	; 0xe0
   23da6:	mov	r1, fp
   23da8:	mov	r0, r6
   23daa:	strd	r9, sl, [sp, #8]
   23dae:	strd	r3, r4, [sp, #24]
   23db2:	strd	r3, r4, [sp, #16]
   23db6:	ldr	r3, [sp, #68]	; 0x44
   23db8:	str	r3, [sp, #0]
   23dba:	ldr	r3, [sp, #72]	; 0x48
   23dbc:	str	r3, [sp, #4]
   23dbe:	ldrd	r2, r3, [sp, #96]	; 0x60
   23dc2:	bl	2e7ca <btrfs_insert_file_extent@@Base>
   23dc6:	mov	r4, r0
   23dc8:	cmp	r4, #0
   23dca:	blt.n	23e10 <btrfs_record_file_extent@@Base+0xd4>
   23dcc:	ldr	r3, [sp, #224]	; 0xe0
   23dce:	ldr	r2, [sp, #224]	; 0xe0
   23dd0:	adds.w	r9, r9, r3
   23dd4:	ldr	r3, [sp, #228]	; 0xe4
   23dd6:	adc.w	sl, sl, r3
   23dda:	ldr	r3, [sp, #68]	; 0x44
   23ddc:	adds	r3, r3, r2
   23dde:	ldr	r2, [sp, #228]	; 0xe4
   23de0:	str	r3, [sp, #68]	; 0x44
   23de2:	ldr	r3, [sp, #72]	; 0x48
   23de4:	adc.w	r3, r2, r3
   23de8:	ldr	r2, [sp, #224]	; 0xe0
   23dea:	str	r3, [sp, #72]	; 0x48
   23dec:	ldr	r3, [sp, #56]	; 0x38
   23dee:	subs	r3, r3, r2
   23df0:	ldr	r2, [sp, #228]	; 0xe4
   23df2:	str	r3, [sp, #56]	; 0x38
   23df4:	ldr	r3, [sp, #60]	; 0x3c
   23df6:	sbc.w	r3, r3, r2
   23dfa:	str	r3, [sp, #60]	; 0x3c
   23dfc:	b.n	23d94 <btrfs_record_file_extent@@Base+0x58>
   23dfe:	ldr.w	r3, [fp, #464]	; 0x1d0
   23e02:	ldr	r7, [r3, #24]
   23e04:	bl	18550 <btrfs_alloc_path@@Base>
   23e08:	mov	r5, r0
   23e0a:	cbnz	r0, 23e26 <btrfs_record_file_extent@@Base+0xea>
   23e0c:	mvn.w	r4, #11
   23e10:	ldr	r2, [pc, #904]	; (2419c <btrfs_record_file_extent@@Base+0x460>)
   23e12:	ldr	r3, [pc, #892]	; (24190 <btrfs_record_file_extent@@Base+0x454>)
   23e14:	add	r2, pc
   23e16:	ldr	r3, [r2, r3]
   23e18:	ldr	r2, [r3, #0]
   23e1a:	ldr	r3, [sp, #148]	; 0x94
   23e1c:	eors	r2, r3
   23e1e:	beq.w	2417e <btrfs_record_file_extent@@Base+0x442>
   23e22:	blx	8708 <__stack_chk_fail@plt>
   23e26:	mov.w	r2, #4294967295	; 0xffffffff
   23e2a:	movs	r3, #108	; 0x6c
   23e2c:	movs	r0, #0
   23e2e:	strb.w	r3, [sp, #136]	; 0x88
   23e32:	strb.w	r2, [sp, #137]	; 0x89
   23e36:	mov	r3, r5
   23e38:	strb.w	r2, [sp, #138]	; 0x8a
   23e3c:	mov	r1, r7
   23e3e:	strb.w	r2, [sp, #139]	; 0x8b
   23e42:	strb.w	r2, [sp, #140]	; 0x8c
   23e46:	strb.w	r2, [sp, #141]	; 0x8d
   23e4a:	strb.w	r2, [sp, #142]	; 0x8e
   23e4e:	strb.w	r2, [sp, #143]	; 0x8f
   23e52:	strb.w	r2, [sp, #144]	; 0x90
   23e56:	add	r2, sp, #128	; 0x80
   23e58:	strd	r0, r0, [sp]
   23e5c:	strd	r9, sl, [sp, #128]	; 0x80
   23e60:	bl	1a93c <btrfs_search_slot@@Base>
   23e64:	subs	r4, r0, #0
   23e66:	blt.w	24176 <btrfs_record_file_extent@@Base+0x43a>
   23e6a:	ldr	r0, [pc, #820]	; (241a0 <btrfs_record_file_extent@@Base+0x464>)
   23e6c:	ite	eq
   23e6e:	moveq	r3, #1
   23e70:	movne	r3, #0
   23e72:	vmov	r2, s16
   23e76:	vmov	r1, s17
   23e7a:	add	r0, pc
   23e7c:	str	r3, [sp, #0]
   23e7e:	movw	r3, #3407	; 0xd4f
   23e82:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   23e86:	movs	r2, #0
   23e88:	movs	r3, #0
   23e8a:	mov	r1, r5
   23e8c:	mov	r0, r7
   23e8e:	bl	1c098 <btrfs_previous_extent_item@@Base>
   23e92:	subs	r4, r0, #0
   23e94:	blt.w	24176 <btrfs_record_file_extent@@Base+0x43a>
   23e98:	ldrd	r2, r3, [sp, #224]	; 0xe0
   23e9c:	ldrd	r0, r1, [sp, #224]	; 0xe0
   23ea0:	strd	r2, r3, [sp, #40]	; 0x28
   23ea4:	movs	r3, #0
   23ea6:	cmp	r3, r1
   23ea8:	mov.w	r2, #134217728	; 0x8000000
   23eac:	it	eq
   23eae:	cmpeq	r2, r0
   23eb0:	it	cc
   23eb2:	strdcc	r2, r3, [sp, #40]	; 0x28
   23eb6:	cmp	r4, #0
   23eb8:	bne.w	24072 <btrfs_record_file_extent@@Base+0x336>
   23ebc:	add	r3, sp, #120	; 0x78
   23ebe:	add	r2, sp, #112	; 0x70
   23ec0:	add.w	r0, r7, #464	; 0x1d0
   23ec4:	mov	r1, r5
   23ec6:	bl	1f24c <btrfs_create_tree@@Base+0x7d0>
   23eca:	ldr	r2, [sp, #120]	; 0x78
   23ecc:	ldr	r3, [sp, #112]	; 0x70
   23ece:	adds	r3, r3, r2
   23ed0:	ldr	r2, [sp, #116]	; 0x74
   23ed2:	str	r3, [sp, #104]	; 0x68
   23ed4:	ldr	r3, [sp, #124]	; 0x7c
   23ed6:	adc.w	r3, r2, r3
   23eda:	str	r3, [sp, #108]	; 0x6c
   23edc:	ldrd	r3, r4, [sp, #104]	; 0x68
   23ee0:	cmp	sl, r4
   23ee2:	it	eq
   23ee4:	cmpeq	r9, r3
   23ee6:	bcs.w	24072 <btrfs_record_file_extent@@Base+0x336>
   23eea:	add.w	r0, r7, #464	; 0x1d0
   23eee:	add	r3, sp, #128	; 0x80
   23ef0:	add	r2, sp, #120	; 0x78
   23ef2:	mov	r1, r5
   23ef4:	bl	1f24c <btrfs_create_tree@@Base+0x7d0>
   23ef8:	ldrd	r3, r4, [sp, #120]	; 0x78
   23efc:	ldr	r2, [pc, #676]	; (241a4 <btrfs_record_file_extent@@Base+0x468>)
   23efe:	cmp	sl, r4
   23f00:	ldr	r1, [pc, #676]	; (241a8 <btrfs_record_file_extent@@Base+0x46c>)
   23f02:	it	eq
   23f04:	cmpeq	r9, r3
   23f06:	ldr	r0, [pc, #676]	; (241ac <btrfs_record_file_extent@@Base+0x470>)
   23f08:	add	r2, pc
   23f0a:	strd	r3, r4, [sp, #48]	; 0x30
   23f0e:	addw	r2, r2, #906	; 0x38a
   23f12:	ite	cc
   23f14:	movcc	r3, #1
   23f16:	movcs	r3, #0
   23f18:	add	r1, pc
   23f1a:	str	r3, [sp, #0]
   23f1c:	add	r0, pc
   23f1e:	movw	r3, #3487	; 0xd9f
   23f22:	bl	1f02c <btrfs_create_tree@@Base+0x5b0>
   23f26:	ldr	r3, [sp, #48]	; 0x30
   23f28:	ldrd	r8, r7, [sp, #128]	; 0x80
   23f2c:	subs.w	r3, r9, r3
   23f30:	str	r3, [sp, #80]	; 0x50
   23f32:	ldr	r3, [sp, #52]	; 0x34
   23f34:	sbc.w	r3, sl, r3
   23f38:	mov	r0, r5
   23f3a:	str	r3, [sp, #84]	; 0x54
   23f3c:	bl	18558 <btrfs_release_path@@Base>
   23f40:	ldr	r3, [sp, #96]	; 0x60
   23f42:	mov	r2, r5
   23f44:	mov	r1, fp
   23f46:	mov	r0, r6
   23f48:	str	r3, [sp, #128]	; 0x80
   23f4a:	ldr	r3, [sp, #100]	; 0x64
   23f4c:	str	r3, [sp, #132]	; 0x84
   23f4e:	ldr	r3, [sp, #68]	; 0x44
   23f50:	str.w	r3, [sp, #137]	; 0x89
   23f54:	ldr	r3, [sp, #72]	; 0x48
   23f56:	str.w	r3, [sp, #141]	; 0x8d
   23f5a:	movs	r3, #108	; 0x6c
   23f5c:	strb.w	r3, [sp, #136]	; 0x88
   23f60:	movs	r3, #53	; 0x35
   23f62:	str	r3, [sp, #120]	; 0x78
   23f64:	movs	r3, #1
   23f66:	str	r3, [sp, #4]
   23f68:	add	r3, sp, #120	; 0x78
   23f6a:	str	r3, [sp, #0]
   23f6c:	add	r3, sp, #128	; 0x80
   23f6e:	bl	1b70c <btrfs_insert_empty_items@@Base>
   23f72:	mov	r4, r0
   23f74:	cmp	r0, #0
   23f76:	bne.w	24176 <btrfs_record_file_extent@@Base+0x43a>
   23f7a:	ldr	r0, [r5, #0]
   23f7c:	mov.w	lr, #25
   23f80:	ldr	r3, [r5, #32]
   23f82:	add.w	r2, r0, #96	; 0x60
   23f86:	ldr	r1, [r6, #8]
   23f88:	ldr.w	ip, [r6, #12]
   23f8c:	mla	r3, lr, r3, r2
   23f90:	ldr.w	lr, [r3, #118]	; 0x76
   23f94:	add.w	lr, lr, #101	; 0x65
   23f98:	add.w	r3, r2, lr
   23f9c:	str.w	r1, [r2, lr]
   23fa0:	mov.w	r2, #1
   23fa4:	strb	r2, [r3, #20]
   23fa6:	ldr	r2, [sp, #48]	; 0x30
   23fa8:	str.w	ip, [r3, #4]
   23fac:	strb	r4, [r3, #16]
   23fae:	str.w	r2, [r3, #21]
   23fb2:	ldr	r2, [sp, #52]	; 0x34
   23fb4:	strb	r4, [r3, #17]
   23fb6:	strb	r4, [r3, #18]
   23fb8:	str.w	r2, [r3, #25]
   23fbc:	ldr	r2, [sp, #80]	; 0x50
   23fbe:	strb	r4, [r3, #19]
   23fc0:	str.w	r8, [r3, #29]
   23fc4:	str.w	r2, [r3, #37]	; 0x25
   23fc8:	ldr	r2, [sp, #84]	; 0x54
   23fca:	str.w	r7, [r3, #33]	; 0x21
   23fce:	str.w	r8, [r3, #8]
   23fd2:	str.w	r2, [r3, #41]	; 0x29
   23fd6:	ldr	r2, [sp, #40]	; 0x28
   23fd8:	str	r7, [r3, #12]
   23fda:	str.w	r2, [r3, #45]	; 0x2d
   23fde:	ldr	r2, [sp, #44]	; 0x2c
   23fe0:	str.w	r2, [r3, #49]	; 0x31
   23fe4:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   23fe8:	ldr	r3, [sp, #76]	; 0x4c
   23fea:	ldr	r2, [sp, #76]	; 0x4c
   23fec:	mov	r0, r5
   23fee:	ldr	r1, [sp, #40]	; 0x28
   23ff0:	ldr	r3, [r3, #24]
   23ff2:	ldr	r2, [r2, #28]
   23ff4:	adds	r3, r3, r1
   23ff6:	ldr	r1, [sp, #44]	; 0x2c
   23ff8:	adc.w	r2, r1, r2
   23ffc:	ldr	r1, [sp, #76]	; 0x4c
   23ffe:	str	r3, [r1, #24]
   24000:	str	r2, [r1, #28]
   24002:	bl	18558 <btrfs_release_path@@Base>
   24006:	ldr	r3, [sp, #68]	; 0x44
   24008:	ldr	r2, [sp, #80]	; 0x50
   2400a:	mov	r0, r6
   2400c:	ldr	r1, [sp, #84]	; 0x54
   2400e:	subs	r2, r3, r2
   24010:	ldr	r3, [sp, #72]	; 0x48
   24012:	strd	r8, r7, [sp]
   24016:	sbc.w	r3, r3, r1
   2401a:	strd	r2, r3, [sp, #32]
   2401e:	ldr	r3, [sp, #96]	; 0x60
   24020:	mov	r1, fp
   24022:	ldr.w	r2, [fp, #447]	; 0x1bf
   24026:	str	r3, [sp, #24]
   24028:	ldr	r3, [sp, #100]	; 0x64
   2402a:	str	r3, [sp, #28]
   2402c:	ldr.w	r3, [fp, #451]	; 0x1c3
   24030:	strd	r2, r3, [sp, #16]
   24034:	movs	r2, #0
   24036:	movs	r3, #0
   24038:	strd	r2, r3, [sp, #8]
   2403c:	ldrd	r2, r3, [sp, #48]	; 0x30
   24040:	bl	207f0 <btrfs_inc_extent_ref@@Base>
   24044:	mov	r4, r0
   24046:	cmp	r0, #0
   24048:	bne.w	24176 <btrfs_record_file_extent@@Base+0x43a>
   2404c:	ldr	r3, [sp, #80]	; 0x50
   2404e:	subs.w	r3, r8, r3
   24052:	str	r3, [sp, #224]	; 0xe0
   24054:	ldr	r3, [sp, #84]	; 0x54
   24056:	sbc.w	r3, r7, r3
   2405a:	str	r3, [sp, #228]	; 0xe4
   2405c:	ldrd	r0, r1, [sp, #224]	; 0xe0
   24060:	ldrd	r2, r3, [sp, #40]	; 0x28
   24064:	cmp	r3, r1
   24066:	it	eq
   24068:	cmpeq	r2, r0
   2406a:	it	cc
   2406c:	strdcc	r2, r3, [sp, #224]	; 0xe0
   24070:	b.n	24176 <btrfs_record_file_extent@@Base+0x43a>
   24072:	ldr	r3, [sp, #40]	; 0x28
   24074:	mov	r1, r5
   24076:	mov	r0, r7
   24078:	adds.w	r3, r9, r3
   2407c:	str	r3, [sp, #88]	; 0x58
   2407e:	ldr	r3, [sp, #44]	; 0x2c
   24080:	adc.w	r3, sl, r3
   24084:	str	r3, [sp, #92]	; 0x5c
   24086:	ldrd	r2, r3, [sp, #88]	; 0x58
   2408a:	bl	1c13c <btrfs_next_extent_item@@Base>
   2408e:	subs	r4, r0, #0
   24090:	blt.n	24176 <btrfs_record_file_extent@@Base+0x43a>
   24092:	bne.n	240b4 <btrfs_record_file_extent@@Base+0x378>
   24094:	add	r3, sp, #120	; 0x78
   24096:	add	r2, sp, #112	; 0x70
   24098:	add.w	r0, r7, #464	; 0x1d0
   2409c:	mov	r1, r5
   2409e:	bl	1f24c <btrfs_create_tree@@Base+0x7d0>
   240a2:	ldrd	r2, r3, [sp, #112]	; 0x70
   240a6:	ldrd	r0, r1, [sp, #88]	; 0x58
   240aa:	cmp	r3, r1
   240ac:	it	eq
   240ae:	cmpeq	r2, r0
   240b0:	bcc.w	23eea <btrfs_record_file_extent@@Base+0x1ae>
   240b4:	mov	r0, r5
   240b6:	mov.w	r8, #1
   240ba:	bl	18558 <btrfs_release_path@@Base>
   240be:	ldr	r3, [sp, #40]	; 0x28
   240c0:	mov	r2, r5
   240c2:	mov	r1, r7
   240c4:	mov	r0, r6
   240c6:	str.w	r8, [sp, #4]
   240ca:	str.w	r3, [sp, #137]	; 0x89
   240ce:	ldr	r3, [sp, #44]	; 0x2c
   240d0:	strd	r9, sl, [sp, #128]	; 0x80
   240d4:	str.w	r3, [sp, #141]	; 0x8d
   240d8:	movs	r3, #168	; 0xa8
   240da:	strb.w	r3, [sp, #136]	; 0x88
   240de:	movs	r3, #24
   240e0:	str	r3, [sp, #120]	; 0x78
   240e2:	add	r3, sp, #120	; 0x78
   240e4:	str	r3, [sp, #0]
   240e6:	add	r3, sp, #128	; 0x80
   240e8:	bl	1b70c <btrfs_insert_empty_items@@Base>
   240ec:	mov	r4, r0
   240ee:	cmp	r0, #0
   240f0:	bne.n	24170 <btrfs_record_file_extent@@Base+0x434>
   240f2:	ldr	r0, [r5, #0]
   240f4:	movs	r2, #25
   240f6:	ldr	r3, [r5, #32]
   240f8:	add.w	r1, r0, #96	; 0x60
   240fc:	mla	r3, r2, r3, r1
   24100:	ldr.w	r2, [r3, #118]	; 0x76
   24104:	adds	r2, #101	; 0x65
   24106:	adds	r3, r1, r2
   24108:	strb	r4, [r1, r2]
   2410a:	strb	r4, [r3, #1]
   2410c:	strb	r4, [r3, #2]
   2410e:	strb	r4, [r3, #3]
   24110:	strb	r4, [r3, #4]
   24112:	strb	r4, [r3, #5]
   24114:	strb	r4, [r3, #6]
   24116:	strb	r4, [r3, #7]
   24118:	strb	r4, [r3, #8]
   2411a:	strb	r4, [r3, #9]
   2411c:	strb	r4, [r3, #10]
   2411e:	strb	r4, [r3, #11]
   24120:	strb	r4, [r3, #12]
   24122:	strb	r4, [r3, #13]
   24124:	strb	r4, [r3, #14]
   24126:	strb	r4, [r3, #15]
   24128:	strb.w	r8, [r3, #16]
   2412c:	strb	r4, [r3, #17]
   2412e:	strb	r4, [r3, #18]
   24130:	strb	r4, [r3, #19]
   24132:	strb	r4, [r3, #20]
   24134:	strb	r4, [r3, #21]
   24136:	strb	r4, [r3, #22]
   24138:	strb	r4, [r3, #23]
   2413a:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   2413e:	strd	r8, r4, [sp, #8]
   24142:	ldrd	r3, r4, [sp, #40]	; 0x28
   24146:	mov	r2, r9
   24148:	mov	r0, fp
   2414a:	strd	r3, r4, [sp]
   2414e:	mov	r3, sl
   24150:	bl	21950 <btrfs_update_block_group@@Base>
   24154:	mov	r4, r0
   24156:	cbnz	r0, 24176 <btrfs_record_file_extent@@Base+0x43a>
   24158:	mov.w	r1, #4294967295	; 0xffffffff
   2415c:	mov	r0, r6
   2415e:	bl	235e4 <btrfs_run_delayed_refs@@Base>
   24162:	movs	r3, #0
   24164:	ldrd	r8, r7, [sp, #40]	; 0x28
   24168:	strd	r9, sl, [sp, #48]	; 0x30
   2416c:	str	r3, [sp, #80]	; 0x50
   2416e:	b.n	23f38 <btrfs_record_file_extent@@Base+0x1fc>
   24170:	cmn.w	r0, #17
   24174:	beq.n	24158 <btrfs_record_file_extent@@Base+0x41c>
   24176:	mov	r0, r5
   24178:	bl	1857e <btrfs_free_path@@Base>
   2417c:	b.n	23dc8 <btrfs_record_file_extent@@Base+0x8c>
   2417e:	mov	r0, r4
   24180:	add	sp, #156	; 0x9c
   24182:	vpop	{d8}
   24186:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2418a:	nop
   2418c:	asrs	r6, r4, #32
   2418e:	movs	r4, r0
   24190:	lsls	r0, r5, #8
   24192:	movs	r0, r0
   24194:	add	r5, pc, #312	; (adr r5, 242d0 <btrfs_record_file_extent@@Base+0x594>)
   24196:	movs	r1, r0
   24198:	ldr	r6, [sp, #60]	; 0x3c
   2419a:	movs	r1, r0
   2419c:	lsrs	r4, r5, #29
   2419e:	movs	r4, r0
   241a0:	ldr	r1, [r1, #60]	; 0x3c
   241a2:	movs	r1, r0
   241a4:	add	r3, pc, #792	; (adr r3, 244c0 <btrfs_merge_delayed_refs@@Base+0x98>)
   241a6:	movs	r1, r0
   241a8:	ldr	r4, [sp, #532]	; 0x214
   241aa:	movs	r1, r0
   241ac:	add	r3, pc, #616	; (adr r3, 24418 <btrfs_record_file_extent@@Base+0x6dc>)
   241ae:	movs	r1, r0
   241b0:	ldr	r2, [pc, #60]	; (241f0 <btrfs_record_file_extent@@Base+0x4b4>)
   241b2:	movs	r1, #16
   241b4:	ldr	r3, [pc, #60]	; (241f4 <btrfs_record_file_extent@@Base+0x4b8>)
   241b6:	push	{r4, lr}
   241b8:	add	r2, pc
   241ba:	sub	sp, #72	; 0x48
   241bc:	add	r4, sp, #4
   241be:	ldr	r3, [r2, r3]
   241c0:	mov	r0, r4
   241c2:	ldr	r3, [r3, #0]
   241c4:	str	r3, [sp, #68]	; 0x44
   241c6:	mov.w	r3, #0
   241ca:	blx	88bc <backtrace@plt>
   241ce:	movs	r2, #2
   241d0:	mov	r1, r0
   241d2:	mov	r0, r4
   241d4:	blx	8bcc <backtrace_symbols_fd@plt>
   241d8:	ldr	r2, [pc, #28]	; (241f8 <btrfs_record_file_extent@@Base+0x4bc>)
   241da:	ldr	r3, [pc, #24]	; (241f4 <btrfs_record_file_extent@@Base+0x4b8>)
   241dc:	add	r2, pc
   241de:	ldr	r3, [r2, r3]
   241e0:	ldr	r2, [r3, #0]
   241e2:	ldr	r3, [sp, #68]	; 0x44
   241e4:	eors	r2, r3
   241e6:	beq.n	241ec <btrfs_record_file_extent@@Base+0x4b0>
   241e8:	blx	8708 <__stack_chk_fail@plt>
   241ec:	add	sp, #72	; 0x48
   241ee:	pop	{r4, pc}
   241f0:	lsrs	r0, r1, #15
   241f2:	movs	r4, r0
   241f4:	lsls	r0, r5, #8
   241f6:	movs	r0, r0
   241f8:	lsrs	r4, r4, #14
   241fa:	movs	r4, r0
   241fc:	push	{r0, r1, r2, r3, r4, lr}
   241fe:	ldr	r4, [pc, #40]	; (24228 <btrfs_record_file_extent@@Base+0x4ec>)
   24200:	ldr	r5, [pc, #40]	; (2422c <btrfs_record_file_extent@@Base+0x4f0>)
   24202:	add	r4, pc
   24204:	ldr	r4, [r4, r5]
   24206:	ldr	r5, [sp, #24]
   24208:	strd	r3, r2, [sp]
   2420c:	mov	r3, r1
   2420e:	ldr	r2, [pc, #32]	; (24230 <btrfs_record_file_extent@@Base+0x4f4>)
   24210:	movs	r1, #1
   24212:	strd	r0, r5, [sp, #8]
   24216:	add	r2, pc
   24218:	ldr	r0, [r4, #0]
   2421a:	blx	8a64 <__fprintf_chk@plt+0x4>
   2421e:	bl	241b0 <btrfs_record_file_extent@@Base+0x474>
   24222:	blx	8b84 <abort@plt>
   24226:	nop
   24228:	lsrs	r6, r7, #13
   2422a:	movs	r4, r0
   2422c:	lsls	r0, r7, #8
   2422e:	movs	r0, r0
   24230:	ldrb	r4, [r1, r2]
   24232:	movs	r1, r0
   24234:	push	{r0, r1, r2, lr}
   24236:	movs	r3, #1
   24238:	ldr	r2, [pc, #16]	; (2424c <btrfs_record_file_extent@@Base+0x510>)
   2423a:	ldr	r1, [pc, #20]	; (24250 <btrfs_record_file_extent@@Base+0x514>)
   2423c:	ldr	r0, [pc, #20]	; (24254 <btrfs_record_file_extent@@Base+0x518>)
   2423e:	add	r2, pc
   24240:	str	r3, [sp, #0]
   24242:	add	r1, pc
   24244:	add	r0, pc
   24246:	movs	r3, #55	; 0x37
   24248:	bl	241fc <btrfs_record_file_extent@@Base+0x4c0>
   2424c:	add	r5, pc, #280	; (adr r5, 24368 <btrfs_record_file_extent@@Base+0x62c>)
   2424e:	movs	r1, r0
   24250:	add	r4, pc, #196	; (adr r4, 24318 <btrfs_record_file_extent@@Base+0x5dc>)
   24252:	movs	r1, r0
   24254:	ldr	r4, [sp, #740]	; 0x2e4
   24256:	movs	r1, r0
   24258:	push	{r4, r5, lr}
   2425a:	sub	sp, #20
   2425c:	ldr	r4, [pc, #36]	; (24284 <btrfs_record_file_extent@@Base+0x548>)
   2425e:	ldr	r5, [pc, #40]	; (24288 <btrfs_record_file_extent@@Base+0x54c>)
   24260:	add	r4, pc
   24262:	ldr	r4, [r4, r5]
   24264:	ldr	r5, [sp, #32]
   24266:	strd	r3, r2, [sp]
   2426a:	mov	r3, r1
   2426c:	ldr	r2, [pc, #28]	; (2428c <btrfs_record_file_extent@@Base+0x550>)
   2426e:	movs	r1, #1
   24270:	strd	r0, r5, [sp, #8]
   24274:	add	r2, pc
   24276:	ldr	r0, [r4, #0]
   24278:	blx	8a64 <__fprintf_chk@plt+0x4>
   2427c:	add	sp, #20
   2427e:	ldmia.w	sp!, {r4, r5, lr}
   24282:	b.n	241b0 <btrfs_record_file_extent@@Base+0x474>
   24284:	lsrs	r0, r4, #12
   24286:	movs	r4, r0
   24288:	lsls	r0, r7, #8
   2428a:	movs	r0, r0
   2428c:	ldrh	r0, [r7, r7]
   2428e:	movs	r1, r0
   24290:	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
   24294:	mov	r6, r0
   24296:	mov	r5, r3
   24298:	mov	r4, r2
   2429a:	ldr	r3, [r0, #0]
   2429c:	movs	r0, #0
   2429e:	cbnz	r3, 242c2 <btrfs_record_file_extent@@Base+0x586>
   242a0:	cbz	r0, 242be <btrfs_record_file_extent@@Base+0x582>
   242a2:	ldrd	r2, r3, [r0]
   242a6:	cmp	r3, r5
   242a8:	it	eq
   242aa:	cmpeq	r2, r4
   242ac:	bcs.n	242be <btrfs_record_file_extent@@Base+0x582>
   242ae:	adds	r0, #36	; 0x24
   242b0:	bl	13c66 <rb_next@@Base>
   242b4:	cbnz	r0, 242bc <btrfs_record_file_extent@@Base+0x580>
   242b6:	mov	r0, r6
   242b8:	bl	13c46 <rb_first@@Base>
   242bc:	subs	r0, #36	; 0x24
   242be:	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
   242c2:	ldrd	r8, r9, [r3, #-36]	; 0x24
   242c6:	sub.w	r0, r3, #36	; 0x24
   242ca:	cmp	r5, r9
   242cc:	it	eq
   242ce:	cmpeq	r4, r8
   242d0:	bcs.n	242d6 <btrfs_record_file_extent@@Base+0x59a>
   242d2:	ldr	r3, [r3, #8]
   242d4:	b.n	2429e <btrfs_record_file_extent@@Base+0x562>
   242d6:	cmp	r9, r5
   242d8:	it	eq
   242da:	cmpeq	r8, r4
   242dc:	bcs.n	242be <btrfs_record_file_extent@@Base+0x582>
   242de:	ldr	r3, [r3, #4]
   242e0:	b.n	2429e <btrfs_record_file_extent@@Base+0x562>
   242e2:	push	{r0, r1, r2, r3, r4, lr}
   242e4:	ldr	r3, [pc, #40]	; (24310 <btrfs_record_file_extent@@Base+0x5d4>)
   242e6:	ldr	r4, [pc, #44]	; (24314 <btrfs_record_file_extent@@Base+0x5d8>)
   242e8:	add	r3, pc
   242ea:	ldr	r4, [r3, r4]
   242ec:	movs	r3, #0
   242ee:	strd	r2, r1, [sp]
   242f2:	movs	r1, #1
   242f4:	strd	r0, r3, [sp, #8]
   242f8:	ldr	r2, [pc, #28]	; (24318 <btrfs_record_file_extent@@Base+0x5dc>)
   242fa:	ldr	r3, [pc, #32]	; (2431c <btrfs_record_file_extent@@Base+0x5e0>)
   242fc:	add	r2, pc
   242fe:	ldr	r0, [r4, #0]
   24300:	add	r3, pc
   24302:	blx	8a64 <__fprintf_chk@plt+0x4>
   24306:	bl	241b0 <btrfs_record_file_extent@@Base+0x474>
   2430a:	blx	8b84 <abort@plt>
   2430e:	nop
   24310:	lsrs	r0, r3, #10
   24312:	movs	r4, r0
   24314:	lsls	r0, r7, #8
   24316:	movs	r0, r0
   24318:	ldrb	r3, [r2, r3]
   2431a:	movs	r1, r0
   2431c:	add	r3, pc, #460	; (adr r3, 244ec <btrfs_merge_delayed_refs@@Base+0xc4>)
   2431e:	movs	r1, r0
   24320:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   24322:	mov	r4, r2
   24324:	adds	r1, #24
   24326:	mov	r5, r0
   24328:	mov	r0, r2
   2432a:	bl	139d0 <rb_erase@@Base>
   2432e:	mov	r2, r4
   24330:	str	r4, [r4, #0]
   24332:	ldr.w	r3, [r2, #12]!
   24336:	cmp	r3, r2
   24338:	beq.n	24348 <btrfs_record_file_extent@@Base+0x60c>
   2433a:	ldr	r2, [r4, #16]
   2433c:	str	r2, [r3, #4]
   2433e:	str	r3, [r2, #0]
   24340:	ldr	r2, [pc, #184]	; (243fc <btrfs_record_file_extent@@Base+0x6c0>)
   24342:	ldr	r3, [pc, #188]	; (24400 <btrfs_record_file_extent@@Base+0x6c4>)
   24344:	strd	r2, r3, [r4, #12]
   24348:	ldrb.w	r3, [r4, #62]	; 0x3e
   2434c:	bfc	r3, #1, #1
   24350:	strb.w	r3, [r4, #62]	; 0x3e
   24354:	ldrd	r2, r3, [r4, #48]	; 0x30
   24358:	orrs	r3, r2
   2435a:	bne.n	24374 <btrfs_record_file_extent@@Base+0x638>
   2435c:	ldr	r2, [pc, #164]	; (24404 <btrfs_record_file_extent@@Base+0x6c8>)
   2435e:	movs	r3, #1
   24360:	ldr	r1, [pc, #164]	; (24408 <btrfs_record_file_extent@@Base+0x6cc>)
   24362:	ldr	r0, [pc, #168]	; (2440c <btrfs_record_file_extent@@Base+0x6d0>)
   24364:	add	r2, pc
   24366:	str	r3, [sp, #0]
   24368:	adds	r2, #10
   2436a:	add	r1, pc
   2436c:	add	r0, pc
   2436e:	movs	r3, #163	; 0xa3
   24370:	bl	24258 <btrfs_record_file_extent@@Base+0x51c>
   24374:	ldrd	r3, r2, [r4, #48]	; 0x30
   24378:	adds.w	r6, r3, #4294967295	; 0xffffffff
   2437c:	adc.w	r7, r2, #4294967295	; 0xffffffff
   24380:	strd	r6, r7, [r4, #48]	; 0x30
   24384:	orrs.w	r3, r6, r7
   24388:	bne.n	243c8 <btrfs_record_file_extent@@Base+0x68c>
   2438a:	ldrb.w	r3, [r4, #62]	; 0x3e
   2438e:	lsls	r3, r3, #30
   24390:	bpl.n	243aa <btrfs_record_file_extent@@Base+0x66e>
   24392:	ldr	r2, [pc, #124]	; (24410 <btrfs_record_file_extent@@Base+0x6d4>)
   24394:	movs	r3, #1
   24396:	ldr	r1, [pc, #124]	; (24414 <btrfs_record_file_extent@@Base+0x6d8>)
   24398:	ldr	r0, [pc, #124]	; (24418 <btrfs_record_file_extent@@Base+0x6dc>)
   2439a:	add	r2, pc
   2439c:	str	r3, [sp, #0]
   2439e:	adds	r2, #10
   243a0:	add	r1, pc
   243a2:	add	r0, pc
   243a4:	movs	r3, #165	; 0xa5
   243a6:	bl	24258 <btrfs_record_file_extent@@Base+0x51c>
   243aa:	ldrb.w	r3, [r4, #61]	; 0x3d
   243ae:	subs	r3, #176	; 0xb0
   243b0:	cmp	r3, #8
   243b2:	bhi.n	243e2 <btrfs_record_file_extent@@Base+0x6a6>
   243b4:	tbb	[pc, r3]
   243b8:	asrs	r5, r0, #20
   243ba:	asrs	r5, r0, #20
   243bc:	asrs	r5, r2, #20
   243be:	asrs	r5, r0, #20
   243c0:	movs	r5, r0
   243c2:	mov	r0, r4
   243c4:	blx	8620 <free@plt+0x4>
   243c8:	ldrd	r0, r1, [r5]
   243cc:	orrs.w	r3, r0, r1
   243d0:	beq.n	243de <btrfs_record_file_extent@@Base+0x6a2>
   243d2:	adds.w	r2, r0, #4294967295	; 0xffffffff
   243d6:	adc.w	r3, r1, #4294967295	; 0xffffffff
   243da:	strd	r2, r3, [r5]
   243de:	add	sp, #12
   243e0:	pop	{r4, r5, r6, r7, pc}
   243e2:	ldr	r2, [pc, #56]	; (2441c <btrfs_record_file_extent@@Base+0x6e0>)
   243e4:	movs	r3, #1
   243e6:	ldr	r1, [pc, #56]	; (24420 <btrfs_record_file_extent@@Base+0x6e4>)
   243e8:	ldr	r0, [pc, #56]	; (24424 <btrfs_record_file_extent@@Base+0x6e8>)
   243ea:	add	r2, pc
   243ec:	str	r3, [sp, #0]
   243ee:	adds	r2, #10
   243f0:	add	r1, pc
   243f2:	add	r0, pc
   243f4:	movs	r3, #176	; 0xb0
   243f6:	bl	241fc <btrfs_record_file_extent@@Base+0x4c0>
   243fa:	nop
   243fc:	lsls	r0, r0, #4
   243fe:	movs	r0, r2
   24400:	lsls	r0, r0, #8
   24402:	movs	r0, r4
   24404:	add	r4, pc, #128	; (adr r4, 24488 <btrfs_merge_delayed_refs@@Base+0x60>)
   24406:	movs	r1, r0
   24408:	ldr	r0, [sp, #964]	; 0x3c4
   2440a:	movs	r1, r0
   2440c:	ldr	r0, [sp, #1012]	; 0x3f4
   2440e:	movs	r1, r0
   24410:	add	r3, pc, #936	; (adr r3, 247bc <btrfs_add_delayed_tree_ref@@Base+0x1c8>)
   24412:	movs	r1, r0
   24414:	ldr	r0, [sp, #748]	; 0x2ec
   24416:	movs	r1, r0
   24418:	ldr	r0, [sp, #856]	; 0x358
   2441a:	movs	r1, r0
   2441c:	add	r3, pc, #616	; (adr r3, 24688 <btrfs_add_delayed_tree_ref@@Base+0x94>)
   2441e:	movs	r1, r0
   24420:	ldr	r0, [sp, #428]	; 0x1ac
   24422:	movs	r1, r0
   24424:	ldr	r3, [sp, #44]	; 0x2c
   24426:	movs	r1, r0

00024428 <btrfs_merge_delayed_refs@@Base>:
   24428:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2442c:	sub	sp, #28
   2442e:	ldr	r3, [r2, #24]
   24430:	mov	r5, r2
   24432:	str	r0, [sp, #16]
   24434:	cbz	r3, 24456 <btrfs_merge_delayed_refs@@Base+0x2e>
   24436:	ldrb.w	r3, [r2, #60]	; 0x3c
   2443a:	lsls	r3, r3, #30
   2443c:	bmi.n	24456 <btrfs_merge_delayed_refs@@Base+0x2e>
   2443e:	ldr	r3, [pc, #240]	; (24530 <btrfs_merge_delayed_refs@@Base+0x108>)
   24440:	add	r3, pc
   24442:	add.w	r9, r3, #32
   24446:	add.w	r0, r5, #24
   2444a:	bl	13c46 <rb_first@@Base>
   2444e:	mov	fp, r0
   24450:	cmp.w	fp, #0
   24454:	bne.n	2445c <btrfs_merge_delayed_refs@@Base+0x34>
   24456:	add	sp, #28
   24458:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2445c:	mov	r0, fp
   2445e:	ldr.w	r8, [pc, #212]	; 24534 <btrfs_merge_delayed_refs@@Base+0x10c>
   24462:	bl	13c66 <rb_next@@Base>
   24466:	mov	r4, fp
   24468:	add	r8, pc
   2446a:	mov	sl, r0
   2446c:	cmp.w	sl, #0
   24470:	bne.n	2447a <btrfs_merge_delayed_refs@@Base+0x52>
   24472:	mov	r0, fp
   24474:	bl	13c66 <rb_next@@Base>
   24478:	b.n	2444e <btrfs_merge_delayed_refs@@Base+0x26>
   2447a:	mov	r0, sl
   2447c:	bl	13c66 <rb_next@@Base>
   24480:	ldrb.w	r2, [r4, #61]	; 0x3d
   24484:	ldrb.w	r3, [sl, #61]	; 0x3d
   24488:	cmp	r3, r2
   2448a:	str	r0, [sp, #12]
   2448c:	bne.n	24472 <btrfs_merge_delayed_refs@@Base+0x4a>
   2448e:	cmp	r3, #176	; 0xb0
   24490:	beq.n	2449a <btrfs_merge_delayed_refs@@Base+0x72>
   24492:	cmp	r3, #182	; 0xb6
   24494:	beq.n	244fa <btrfs_merge_delayed_refs@@Base+0xd2>
   24496:	bl	24234 <btrfs_record_file_extent@@Base+0x4f8>
   2449a:	ldrd	r2, r3, [r4, #64]	; 0x40
   2449e:	ldrd	r6, r7, [sl, #64]	; 0x40
   244a2:	cmp	r3, r7
   244a4:	it	eq
   244a6:	cmpeq	r2, r6
   244a8:	bne.n	24472 <btrfs_merge_delayed_refs@@Base+0x4a>
   244aa:	ldrb.w	r2, [r4, #60]	; 0x3c
   244ae:	ldrb.w	r3, [sl, #60]	; 0x3c
   244b2:	ldr.w	r7, [sl, #56]	; 0x38
   244b6:	cmp	r2, r3
   244b8:	beq.n	24504 <btrfs_merge_delayed_refs@@Base+0xdc>
   244ba:	ldr	r3, [r4, #56]	; 0x38
   244bc:	cmp	r3, r7
   244be:	itttt	ge
   244c0:	movge	r3, sl
   244c2:	movge	sl, r4
   244c4:	movge	r4, r3
   244c6:	movge	r6, #0
   244c8:	ldr	r7, [r4, #56]	; 0x38
   244ca:	mov	r3, r4
   244cc:	it	lt
   244ce:	movlt	r6, #1
   244d0:	mov	r4, sl
   244d2:	negs	r7, r7
   244d4:	mov	sl, r3
   244d6:	ldr	r3, [sp, #16]
   244d8:	mov	r2, sl
   244da:	mov	r1, r5
   244dc:	add.w	r0, r3, #40	; 0x28
   244e0:	str	r0, [sp, #20]
   244e2:	bl	24320 <btrfs_record_file_extent@@Base+0x5e4>
   244e6:	ldr	r3, [r4, #56]	; 0x38
   244e8:	ldr	r0, [sp, #20]
   244ea:	add	r7, r3
   244ec:	str	r7, [r4, #56]	; 0x38
   244ee:	cbnz	r7, 24508 <btrfs_merge_delayed_refs@@Base+0xe0>
   244f0:	mov	r2, r4
   244f2:	mov	r1, r5
   244f4:	bl	24320 <btrfs_record_file_extent@@Base+0x5e4>
   244f8:	b.n	24446 <btrfs_merge_delayed_refs@@Base+0x1e>
   244fa:	ldrd	r2, r3, [r4, #72]	; 0x48
   244fe:	ldrd	r6, r7, [sl, #72]	; 0x48
   24502:	b.n	244a2 <btrfs_merge_delayed_refs@@Base+0x7a>
   24504:	movs	r6, #0
   24506:	b.n	244d6 <btrfs_merge_delayed_refs@@Base+0xae>
   24508:	ldrb.w	r3, [r4, #61]	; 0x3d
   2450c:	cmp	r3, #176	; 0xb0
   2450e:	beq.n	24514 <btrfs_merge_delayed_refs@@Base+0xec>
   24510:	cmp	r3, #182	; 0xb6
   24512:	bne.n	24526 <btrfs_merge_delayed_refs@@Base+0xfe>
   24514:	ldr	r0, [pc, #32]	; (24538 <btrfs_merge_delayed_refs@@Base+0x110>)
   24516:	movs	r3, #1
   24518:	mov	r2, r9
   2451a:	str	r3, [sp, #0]
   2451c:	add	r0, pc
   2451e:	movs	r3, #219	; 0xdb
   24520:	mov	r1, r8
   24522:	bl	24258 <btrfs_record_file_extent@@Base+0x51c>
   24526:	cmp	r6, #0
   24528:	bne.n	24446 <btrfs_merge_delayed_refs@@Base+0x1e>
   2452a:	ldr.w	sl, [sp, #12]
   2452e:	b.n	2446c <btrfs_merge_delayed_refs@@Base+0x44>
   24530:	add	r3, pc, #272	; (adr r3, 24644 <btrfs_add_delayed_tree_ref@@Base+0x50>)
   24532:	movs	r1, r0
   24534:	add	r2, pc, #44	; (adr r2, 24564 <btrfs_select_ref_head@@Base+0x28>)
   24536:	movs	r1, r0
   24538:	add	r1, pc, #404	; (adr r1, 246d0 <btrfs_add_delayed_tree_ref@@Base+0xdc>)
   2453a:	movs	r1, r0

0002453c <btrfs_select_ref_head@@Base>:
   2453c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   24540:	add.w	r9, r0, #64	; 0x40
   24544:	mov	r8, r0
   24546:	movs	r5, #0
   24548:	movs	r6, #0
   2454a:	movs	r7, #0
   2454c:	ldrd	r2, r3, [r8, #88]	; 0x58
   24550:	mov	r0, r9
   24552:	bl	24290 <btrfs_record_file_extent@@Base+0x554>
   24556:	mov	r4, r0
   24558:	cbnz	r0, 2457c <btrfs_select_ref_head@@Base+0x40>
   2455a:	cbz	r5, 24566 <btrfs_select_ref_head@@Base+0x2a>
   2455c:	movs	r4, #0
   2455e:	mov	r0, r4
   24560:	add	sp, #12
   24562:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   24566:	movs	r2, #0
   24568:	movs	r3, #0
   2456a:	mov	r0, r9
   2456c:	strd	r6, r7, [r8, #88]	; 0x58
   24570:	bl	24290 <btrfs_record_file_extent@@Base+0x554>
   24574:	mov	r4, r0
   24576:	cmp	r0, #0
   24578:	beq.n	2455c <btrfs_select_ref_head@@Base+0x20>
   2457a:	movs	r5, #1
   2457c:	ldrb.w	r2, [r4, #60]	; 0x3c
   24580:	mov	r3, r2
   24582:	lsls	r2, r2, #28
   24584:	bmi.n	245cc <btrfs_select_ref_head@@Base+0x90>
   24586:	orr.w	r3, r3, #8
   2458a:	strb.w	r3, [r4, #60]	; 0x3c
   2458e:	ldr.w	r3, [r8, #76]	; 0x4c
   24592:	cbnz	r3, 245ae <btrfs_select_ref_head@@Base+0x72>
   24594:	ldr	r2, [pc, #80]	; (245e8 <btrfs_select_ref_head@@Base+0xac>)
   24596:	movs	r3, #1
   24598:	ldr	r1, [pc, #80]	; (245ec <btrfs_select_ref_head@@Base+0xb0>)
   2459a:	ldr	r0, [pc, #84]	; (245f0 <btrfs_select_ref_head@@Base+0xb4>)
   2459c:	add	r2, pc
   2459e:	str	r3, [sp, #0]
   245a0:	adds	r2, #42	; 0x2a
   245a2:	add	r1, pc
   245a4:	add	r0, pc
   245a6:	mov.w	r3, #290	; 0x122
   245aa:	bl	24258 <btrfs_record_file_extent@@Base+0x51c>
   245ae:	ldr.w	r3, [r8, #76]	; 0x4c
   245b2:	subs	r3, #1
   245b4:	str.w	r3, [r8, #76]	; 0x4c
   245b8:	ldrd	r3, r2, [r4]
   245bc:	ldrd	r1, r0, [r4, #8]
   245c0:	adds	r3, r3, r1
   245c2:	adc.w	r2, r0, r2
   245c6:	strd	r3, r2, [r8, #88]	; 0x58
   245ca:	b.n	2455e <btrfs_select_ref_head@@Base+0x22>
   245cc:	add.w	r0, r4, #36	; 0x24
   245d0:	bl	13c66 <rb_next@@Base>
   245d4:	cbnz	r0, 245e2 <btrfs_select_ref_head@@Base+0xa6>
   245d6:	cmp	r5, #0
   245d8:	bne.n	2455c <btrfs_select_ref_head@@Base+0x20>
   245da:	movs	r5, #1
   245dc:	strd	r6, r7, [r8, #88]	; 0x58
   245e0:	b.n	2454c <btrfs_select_ref_head@@Base+0x10>
   245e2:	sub.w	r4, r0, #36	; 0x24
   245e6:	b.n	2457c <btrfs_select_ref_head@@Base+0x40>
   245e8:	add	r1, pc, #928	; (adr r1, 2498c <btrfs_add_delayed_tree_ref@@Base+0x398>)
   245ea:	movs	r1, r0
   245ec:	add	r0, pc, #836	; (adr r0, 24934 <btrfs_add_delayed_tree_ref@@Base+0x340>)
   245ee:	movs	r1, r0
   245f0:	add	r1, pc, #184	; (adr r1, 246ac <btrfs_add_delayed_tree_ref@@Base+0xb8>)
   245f2:	movs	r1, r0

000245f4 <btrfs_add_delayed_tree_ref@@Base>:
   245f4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   245f8:	sub	sp, #20
   245fa:	mov	fp, r1
   245fc:	strd	r2, r3, [sp, #8]
   24600:	ldrd	r3, r4, [sp, #72]	; 0x48
   24604:	ldrd	r9, r8, [sp, #84]	; 0x54
   24608:	cmp	r4, #0
   2460a:	ldr	r7, [sp, #92]	; 0x5c
   2460c:	itte	eq
   2460e:	cmpeq	r3, #3
   24610:	moveq	r6, #1
   24612:	movne	r6, #0
   24614:	cmp.w	r8, #0
   24618:	beq.n	2463a <btrfs_add_delayed_tree_ref@@Base+0x46>
   2461a:	ldrb.w	r3, [r8, #20]
   2461e:	cbz	r3, 2463a <btrfs_add_delayed_tree_ref@@Base+0x46>
   24620:	ldr	r2, [pc, #920]	; (249bc <btrfs_add_delayed_tree_ref@@Base+0x3c8>)
   24622:	movs	r3, #1
   24624:	ldr	r1, [pc, #920]	; (249c0 <btrfs_add_delayed_tree_ref@@Base+0x3cc>)
   24626:	ldr	r0, [pc, #924]	; (249c4 <btrfs_add_delayed_tree_ref@@Base+0x3d0>)
   24628:	add	r2, pc
   2462a:	adds	r2, #64	; 0x40
   2462c:	add	r1, pc
   2462e:	add	r0, pc
   24630:	str	r3, [sp, #0]
   24632:	mov.w	r3, #568	; 0x238
   24636:	bl	241fc <btrfs_record_file_extent@@Base+0x4c0>
   2463a:	movs	r0, #88	; 0x58
   2463c:	blx	8870 <malloc@plt+0x4>
   24640:	mov	r5, r0
   24642:	cmp	r0, #0
   24644:	beq.n	246d0 <btrfs_add_delayed_tree_ref@@Base+0xdc>
   24646:	ldrd	r3, r4, [sp, #64]	; 0x40
   2464a:	movs	r2, #1
   2464c:	add.w	sl, r5, #12
   24650:	str	r5, [r5, #0]
   24652:	orrs	r3, r4
   24654:	mov.w	r3, #0
   24658:	strd	r2, r3, [r5, #48]	; 0x30
   2465c:	mov.w	r2, #0
   24660:	ldrd	r3, r4, [sp, #8]
   24664:	ite	ne
   24666:	movne	r0, #182	; 0xb6
   24668:	moveq	r0, #176	; 0xb0
   2466a:	cmp.w	r9, #3
   2466e:	strb.w	r0, [r5, #61]	; 0x3d
   24672:	mov.w	r0, #64	; 0x40
   24676:	strd	r3, r4, [r5, #24]
   2467a:	it	ne
   2467c:	movne	ip, r9
   2467e:	ldrd	r3, r4, [sp, #56]	; 0x38
   24682:	it	eq
   24684:	moveq.w	ip, #1
   24688:	strd	sl, sl, [r5, #12]
   2468c:	strb.w	ip, [r5, #60]	; 0x3c
   24690:	strd	r3, r4, [r5, #32]
   24694:	movs	r3, #1
   24696:	str	r3, [r5, #56]	; 0x38
   24698:	ldrb.w	r3, [r5, #62]	; 0x3e
   2469c:	bic.w	r3, r3, #3
   246a0:	orr.w	r3, r3, #2
   246a4:	strb.w	r3, [r5, #62]	; 0x3e
   246a8:	movs	r3, #0
   246aa:	strd	r2, r3, [r5, #40]	; 0x28
   246ae:	ldrd	r3, r4, [sp, #72]	; 0x48
   246b2:	strd	r3, r4, [r5, #64]	; 0x40
   246b6:	ldrd	r3, r4, [sp, #64]	; 0x40
   246ba:	strd	r3, r4, [r5, #72]	; 0x48
   246be:	ldr	r3, [sp, #80]	; 0x50
   246c0:	str	r3, [r5, #80]	; 0x50
   246c2:	blx	8870 <malloc@plt+0x4>
   246c6:	mov	r4, r0
   246c8:	cbnz	r0, 246d6 <btrfs_add_delayed_tree_ref@@Base+0xe2>
   246ca:	mov	r0, r5
   246cc:	blx	8620 <free@plt+0x4>
   246d0:	mvn.w	r0, #11
   246d4:	b.n	2486c <btrfs_add_delayed_tree_ref@@Base+0x278>
   246d6:	cmp.w	r9, #4
   246da:	beq.n	24786 <btrfs_add_delayed_tree_ref@@Base+0x192>
   246dc:	cmp.w	r9, #2
   246e0:	sub.w	lr, r9, #3
   246e4:	ite	ne
   246e6:	movne.w	ip, #1
   246ea:	moveq.w	ip, #4294967295	; 0xffffffff
   246ee:	rsbs	r3, lr, #0
   246f2:	adc.w	r3, r3, lr
   246f6:	movs	r0, #1
   246f8:	movs	r1, #0
   246fa:	strd	r0, r1, [r4, #16]
   246fe:	orr.w	r6, r3, r6, lsl #2
   24702:	ldrd	r1, r2, [sp, #8]
   24706:	add.w	r0, r4, #28
   2470a:	ldrb.w	r9, [r4, #60]	; 0x3c
   2470e:	mov.w	lr, #0
   24712:	strd	r8, ip, [r4, #48]	; 0x30
   24716:	strd	r1, r2, [r4]
   2471a:	bic.w	r9, r9, #15
   2471e:	ldrd	r1, r2, [sp, #56]	; 0x38
   24722:	orr.w	r6, r6, r9
   24726:	str.w	ip, [r4, #56]	; 0x38
   2472a:	add.w	ip, fp, #64	; 0x40
   2472e:	strd	r0, r0, [r4, #28]
   24732:	add.w	r0, r4, #36	; 0x24
   24736:	mov	r8, ip
   24738:	strd	r1, r2, [r4, #8]
   2473c:	str.w	lr, [r4, #24]
   24740:	str	r0, [r4, #36]	; 0x24
   24742:	strb.w	r6, [r4, #60]	; 0x3c
   24746:	ldr.w	r6, [r8]
   2474a:	cbnz	r6, 2478e <btrfs_add_delayed_tree_ref@@Base+0x19a>
   2474c:	strd	lr, r6, [r4, #36]	; 0x24
   24750:	mov	r1, ip
   24752:	str	r6, [r4, #44]	; 0x2c
   24754:	str.w	r0, [r8]
   24758:	bl	1392a <rb_insert_color@@Base>
   2475c:	cmp	r7, #0
   2475e:	bne.w	248be <btrfs_add_delayed_tree_ref@@Base+0x2ca>
   24762:	ldr.w	r3, [fp, #72]	; 0x48
   24766:	adds	r3, #1
   24768:	str.w	r3, [fp, #72]	; 0x48
   2476c:	ldr.w	r3, [fp, #76]	; 0x4c
   24770:	adds	r3, #1
   24772:	str.w	r3, [fp, #76]	; 0x4c
   24776:	ldrd	r3, r2, [fp, #40]	; 0x28
   2477a:	adds	r3, #1
   2477c:	adc.w	r2, r2, #0
   24780:	strd	r3, r2, [fp, #40]	; 0x28
   24784:	b.n	2481e <btrfs_add_delayed_tree_ref@@Base+0x22a>
   24786:	mov.w	ip, #0
   2478a:	mov	r3, ip
   2478c:	b.n	246f6 <btrfs_add_delayed_tree_ref@@Base+0x102>
   2478e:	ldrd	r8, r9, [r6, #-36]	; 0x24
   24792:	ldrd	r1, r2, [sp, #8]
   24796:	cmp	r2, r9
   24798:	it	eq
   2479a:	cmpeq	r1, r8
   2479c:	bcs.n	247a6 <btrfs_add_delayed_tree_ref@@Base+0x1b2>
   2479e:	add.w	r8, r6, #8
   247a2:	mov	lr, r6
   247a4:	b.n	24746 <btrfs_add_delayed_tree_ref@@Base+0x152>
   247a6:	ldrd	r1, r2, [sp, #8]
   247aa:	cmp	r9, r2
   247ac:	it	eq
   247ae:	cmpeq	r8, r1
   247b0:	bcs.n	247b8 <btrfs_add_delayed_tree_ref@@Base+0x1c4>
   247b2:	add.w	r8, r6, #4
   247b6:	b.n	247a2 <btrfs_add_delayed_tree_ref@@Base+0x1ae>
   247b8:	ldrb.w	r1, [r4, #60]	; 0x3c
   247bc:	ldrb	r2, [r6, #24]
   247be:	eor.w	r0, r1, r2
   247c2:	lsls	r0, r0, #30
   247c4:	bpl.n	247de <btrfs_add_delayed_tree_ref@@Base+0x1ea>
   247c6:	ldr	r2, [pc, #512]	; (249c8 <btrfs_add_delayed_tree_ref@@Base+0x3d4>)
   247c8:	movs	r3, #1
   247ca:	ldr	r1, [pc, #512]	; (249cc <btrfs_add_delayed_tree_ref@@Base+0x3d8>)
   247cc:	ldr	r0, [pc, #512]	; (249d0 <btrfs_add_delayed_tree_ref@@Base+0x3dc>)
   247ce:	add	r2, pc
   247d0:	str	r3, [sp, #0]
   247d2:	adds	r2, #91	; 0x5b
   247d4:	add	r1, pc
   247d6:	add	r0, pc
   247d8:	movw	r3, #363	; 0x16b
   247dc:	b.n	24636 <btrfs_add_delayed_tree_ref@@Base+0x42>
   247de:	lsls	r1, r1, #31
   247e0:	itttt	mi
   247e2:	bfimi	r2, r3, #0, #1
   247e6:	strbmi	r2, [r6, #24]
   247e8:	ldrdmi	r2, r3, [r4, #8]
   247ec:	strdmi	r2, r3, [r6, #-28]
   247f0:	ldr	r3, [r4, #48]	; 0x30
   247f2:	cbz	r3, 247fc <btrfs_add_delayed_tree_ref@@Base+0x208>
   247f4:	ldr	r2, [r6, #12]
   247f6:	cmp	r2, #0
   247f8:	bne.n	24872 <btrfs_add_delayed_tree_ref@@Base+0x27e>
   247fa:	str	r3, [r6, #12]
   247fc:	cbz	r7, 24802 <btrfs_add_delayed_tree_ref@@Base+0x20e>
   247fe:	ldr	r3, [r6, #16]
   24800:	str	r3, [r7, #0]
   24802:	ldr	r2, [r4, #56]	; 0x38
   24804:	mov	r0, r4
   24806:	ldr	r3, [r6, #20]
   24808:	sub.w	r7, r6, #36	; 0x24
   2480c:	add	r3, r2
   2480e:	str	r3, [r6, #20]
   24810:	ldr	r3, [r6, #16]
   24812:	ldr	r2, [r4, #56]	; 0x38
   24814:	mov	r4, r7
   24816:	add	r3, r2
   24818:	str	r3, [r6, #16]
   2481a:	blx	8620 <free@plt+0x4>
   2481e:	ldr	r3, [sp, #96]	; 0x60
   24820:	cbz	r3, 24828 <btrfs_add_delayed_tree_ref@@Base+0x234>
   24822:	ldr	r3, [r4, #52]	; 0x34
   24824:	ldr	r2, [sp, #96]	; 0x60
   24826:	str	r3, [r2, #0]
   24828:	add.w	r1, r4, #24
   2482c:	movs	r0, #0
   2482e:	mov	r3, r1
   24830:	ldr	r2, [r3, #0]
   24832:	cmp	r2, #0
   24834:	bne.n	248c2 <btrfs_add_delayed_tree_ref@@Base+0x2ce>
   24836:	strd	r0, r2, [r5]
   2483a:	mov	r0, r5
   2483c:	str	r2, [r5, #8]
   2483e:	str	r5, [r3, #0]
   24840:	bl	1392a <rb_insert_color@@Base>
   24844:	ldrb.w	r3, [r5, #60]	; 0x3c
   24848:	cmp	r3, #1
   2484a:	bne.n	2485c <btrfs_add_delayed_tree_ref@@Base+0x268>
   2484c:	ldr	r3, [r4, #32]
   2484e:	adds	r4, #28
   24850:	str.w	sl, [r4, #4]
   24854:	strd	r4, r3, [r5, #12]
   24858:	str.w	sl, [r3]
   2485c:	ldrd	r3, r2, [fp, #40]	; 0x28
   24860:	adds	r3, #1
   24862:	adc.w	r2, r2, #0
   24866:	strd	r3, r2, [fp, #40]	; 0x28
   2486a:	movs	r0, #0
   2486c:	add	sp, #20
   2486e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24872:	ldrb	r1, [r3, #18]
   24874:	cbz	r1, 24890 <btrfs_add_delayed_tree_ref@@Base+0x29c>
   24876:	add.w	r1, r3, #16
   2487a:	ldr.w	r0, [r3], #4
   2487e:	cmp	r3, r1
   24880:	str.w	r0, [r2], #4
   24884:	bne.n	2487a <btrfs_add_delayed_tree_ref@@Base+0x286>
   24886:	ldrb	r3, [r3, #0]
   24888:	strb	r3, [r2, #0]
   2488a:	movs	r2, #1
   2488c:	ldr	r3, [r6, #12]
   2488e:	strb	r2, [r3, #18]
   24890:	ldr	r0, [r4, #48]	; 0x30
   24892:	ldrb	r3, [r0, #19]
   24894:	cbz	r3, 248b2 <btrfs_add_delayed_tree_ref@@Base+0x2be>
   24896:	ldr	r1, [r6, #12]
   24898:	ldrd	r2, r0, [r0, #24]
   2489c:	ldr	r3, [r1, #28]
   2489e:	str	r3, [sp, #8]
   248a0:	ldr	r3, [r1, #24]
   248a2:	orrs	r2, r3
   248a4:	ldr	r3, [sp, #8]
   248a6:	orrs	r3, r0
   248a8:	strd	r2, r3, [r1, #24]
   248ac:	ldr	r3, [r6, #12]
   248ae:	movs	r2, #1
   248b0:	strb	r2, [r3, #19]
   248b2:	ldr	r0, [r4, #48]	; 0x30
   248b4:	cmp	r0, #0
   248b6:	beq.n	247fc <btrfs_add_delayed_tree_ref@@Base+0x208>
   248b8:	blx	8620 <free@plt+0x4>
   248bc:	b.n	247fc <btrfs_add_delayed_tree_ref@@Base+0x208>
   248be:	str	r6, [r7, #0]
   248c0:	b.n	24762 <btrfs_add_delayed_tree_ref@@Base+0x16e>
   248c2:	ldrb.w	r3, [r5, #61]	; 0x3d
   248c6:	ldrb.w	r0, [r2, #61]	; 0x3d
   248ca:	cmp	r3, r0
   248cc:	bcc.n	2496c <btrfs_add_delayed_tree_ref@@Base+0x378>
   248ce:	bhi.n	248f4 <btrfs_add_delayed_tree_ref@@Base+0x300>
   248d0:	cmp	r3, #176	; 0xb0
   248d2:	beq.n	248dc <btrfs_add_delayed_tree_ref@@Base+0x2e8>
   248d4:	cmp	r3, #182	; 0xb6
   248d6:	beq.n	248f8 <btrfs_add_delayed_tree_ref@@Base+0x304>
   248d8:	bl	24234 <btrfs_record_file_extent@@Base+0x4f8>
   248dc:	ldrd	r6, r7, [r5, #64]	; 0x40
   248e0:	ldrd	r8, r9, [r2, #64]	; 0x40
   248e4:	cmp	r7, r9
   248e6:	it	eq
   248e8:	cmpeq	r6, r8
   248ea:	bcc.n	2496c <btrfs_add_delayed_tree_ref@@Base+0x378>
   248ec:	cmp	r9, r7
   248ee:	it	eq
   248f0:	cmpeq	r8, r6
   248f2:	bcs.n	24902 <btrfs_add_delayed_tree_ref@@Base+0x30e>
   248f4:	adds	r3, r2, #4
   248f6:	b.n	24970 <btrfs_add_delayed_tree_ref@@Base+0x37c>
   248f8:	ldrd	r6, r7, [r5, #72]	; 0x48
   248fc:	ldrd	r8, r9, [r2, #72]	; 0x48
   24900:	b.n	248e4 <btrfs_add_delayed_tree_ref@@Base+0x2f0>
   24902:	ldrd	r6, r7, [r5, #40]	; 0x28
   24906:	ldrd	r8, r9, [r2, #40]	; 0x28
   2490a:	cmp	r7, r9
   2490c:	it	eq
   2490e:	cmpeq	r6, r8
   24910:	bcc.n	2496c <btrfs_add_delayed_tree_ref@@Base+0x378>
   24912:	cmp	r9, r7
   24914:	it	eq
   24916:	cmpeq	r8, r6
   24918:	bcc.n	248f4 <btrfs_add_delayed_tree_ref@@Base+0x300>
   2491a:	ldrb.w	r0, [r5, #60]	; 0x3c
   2491e:	ldrb.w	r1, [r2, #60]	; 0x3c
   24922:	ldr	r3, [r5, #56]	; 0x38
   24924:	cmp	r1, r0
   24926:	beq.n	24952 <btrfs_add_delayed_tree_ref@@Base+0x35e>
   24928:	ldr	r1, [r2, #56]	; 0x38
   2492a:	cmp	r3, r1
   2492c:	ble.n	249b0 <btrfs_add_delayed_tree_ref@@Base+0x3bc>
   2492e:	strb.w	r0, [r2, #60]	; 0x3c
   24932:	negs	r3, r1
   24934:	ldr	r1, [r5, #56]	; 0x38
   24936:	add.w	r0, r2, #12
   2493a:	str	r1, [r2, #56]	; 0x38
   2493c:	ldrb.w	r1, [r5, #60]	; 0x3c
   24940:	cmp	r1, #1
   24942:	bne.n	24974 <btrfs_add_delayed_tree_ref@@Base+0x380>
   24944:	ldr	r1, [r4, #32]
   24946:	add.w	r6, r4, #28
   2494a:	str	r0, [r4, #32]
   2494c:	strd	r6, r1, [r2, #12]
   24950:	str	r0, [r1, #0]
   24952:	ldr	r1, [r2, #56]	; 0x38
   24954:	add	r3, r1
   24956:	str	r3, [r2, #56]	; 0x38
   24958:	cbnz	r3, 24964 <btrfs_add_delayed_tree_ref@@Base+0x370>
   2495a:	add.w	r0, fp, #40	; 0x28
   2495e:	mov	r1, r4
   24960:	bl	24320 <btrfs_record_file_extent@@Base+0x5e4>
   24964:	mov	r0, r5
   24966:	blx	8620 <free@plt+0x4>
   2496a:	b.n	2486a <btrfs_add_delayed_tree_ref@@Base+0x276>
   2496c:	add.w	r3, r2, #8
   24970:	mov	r0, r2
   24972:	b.n	24830 <btrfs_add_delayed_tree_ref@@Base+0x23c>
   24974:	cmp	r1, #2
   24976:	bne.n	249a0 <btrfs_add_delayed_tree_ref@@Base+0x3ac>
   24978:	ldr	r1, [r2, #12]
   2497a:	cmp	r1, r0
   2497c:	bne.n	24990 <btrfs_add_delayed_tree_ref@@Base+0x39c>
   2497e:	ldr	r1, [pc, #84]	; (249d4 <btrfs_add_delayed_tree_ref@@Base+0x3e0>)
   24980:	mov.w	r2, #330	; 0x14a
   24984:	ldr	r0, [pc, #80]	; (249d8 <btrfs_add_delayed_tree_ref@@Base+0x3e4>)
   24986:	add	r1, pc
   24988:	adds	r1, #116	; 0x74
   2498a:	add	r0, pc
   2498c:	bl	242e2 <btrfs_record_file_extent@@Base+0x5a6>
   24990:	ldr	r0, [r2, #16]
   24992:	str	r0, [r1, #4]
   24994:	str	r1, [r0, #0]
   24996:	ldr	r0, [pc, #28]	; (249b4 <btrfs_add_delayed_tree_ref@@Base+0x3c0>)
   24998:	ldr	r1, [pc, #28]	; (249b8 <btrfs_add_delayed_tree_ref@@Base+0x3c4>)
   2499a:	strd	r0, r1, [r2, #12]
   2499e:	b.n	24952 <btrfs_add_delayed_tree_ref@@Base+0x35e>
   249a0:	ldr	r1, [pc, #56]	; (249dc <btrfs_add_delayed_tree_ref@@Base+0x3e8>)
   249a2:	movw	r2, #333	; 0x14d
   249a6:	ldr	r0, [pc, #56]	; (249e0 <btrfs_add_delayed_tree_ref@@Base+0x3ec>)
   249a8:	add	r1, pc
   249aa:	adds	r1, #116	; 0x74
   249ac:	add	r0, pc
   249ae:	b.n	2498c <btrfs_add_delayed_tree_ref@@Base+0x398>
   249b0:	negs	r3, r3
   249b2:	b.n	24952 <btrfs_add_delayed_tree_ref@@Base+0x35e>
   249b4:	lsls	r0, r0, #4
   249b6:	movs	r0, r2
   249b8:	lsls	r0, r0, #8
   249ba:	movs	r0, r4
   249bc:	add	r1, pc, #368	; (adr r1, 24b30 <btrfs_destroy_delayed_refs@@Base+0x14c>)
   249be:	movs	r1, r0
   249c0:	add	r0, pc, #284	; (adr r0, 24ae0 <btrfs_destroy_delayed_refs@@Base+0xfc>)
   249c2:	movs	r1, r0
   249c4:	add	r0, pc, #796	; (adr r0, 24ce4 <btrfs_destroy_delayed_refs@@Base+0x300>)
   249c6:	movs	r1, r0
   249c8:	ldr	r7, [sp, #728]	; 0x2d8
   249ca:	movs	r1, r0
   249cc:	ldr	r6, [sp, #636]	; 0x27c
   249ce:	movs	r1, r0
   249d0:	ldr	r7, [sp, #252]	; 0xfc
   249d2:	movs	r1, r0
   249d4:	ldr	r5, [sp, #1016]	; 0x3f8
   249d6:	movs	r1, r0
   249d8:	ldr	r5, [sp, #704]	; 0x2c0
   249da:	movs	r1, r0
   249dc:	ldr	r5, [sp, #880]	; 0x370
   249de:	movs	r1, r0
   249e0:	strh	r2, [r0, #22]
   249e2:	movs	r1, r0

000249e4 <btrfs_destroy_delayed_refs@@Base>:
   249e4:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   249e8:	mov	r5, r0
   249ea:	ldr	r3, [r0, #64]	; 0x40
   249ec:	cbnz	r3, 249fc <btrfs_destroy_delayed_refs@@Base+0x18>
   249ee:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   249f2:	mov	r1, r9
   249f4:	mov	r0, r8
   249f6:	bl	24320 <btrfs_record_file_extent@@Base+0x5e4>
   249fa:	b.n	24a18 <btrfs_destroy_delayed_refs@@Base+0x34>
   249fc:	mov	r6, r0
   249fe:	add.w	r8, r0, #40	; 0x28
   24a02:	ldr.w	r7, [r6], #64
   24a06:	mov	r0, r6
   24a08:	bl	13c46 <rb_first@@Base>
   24a0c:	cmp	r0, #0
   24a0e:	beq.n	249ee <btrfs_destroy_delayed_refs@@Base+0xa>
   24a10:	sub.w	r9, r0, #36	; 0x24
   24a14:	sub.w	r4, r0, #12
   24a18:	mov	r0, r4
   24a1a:	bl	13c46 <rb_first@@Base>
   24a1e:	mov	r2, r0
   24a20:	cmp	r0, #0
   24a22:	bne.n	249f2 <btrfs_destroy_delayed_refs@@Base+0xe>
   24a24:	mov	r2, r9
   24a26:	mov	r1, r7
   24a28:	mov	r0, r5
   24a2a:	bl	23528 <cleanup_ref_head@@Base>
   24a2e:	cmp	r0, #0
   24a30:	beq.n	24a06 <btrfs_destroy_delayed_refs@@Base+0x22>
   24a32:	ldr	r1, [pc, #16]	; (24a44 <btrfs_destroy_delayed_refs@@Base+0x60>)
   24a34:	movw	r2, #629	; 0x275
   24a38:	ldr	r0, [pc, #12]	; (24a48 <btrfs_destroy_delayed_refs@@Base+0x64>)
   24a3a:	add	r1, pc
   24a3c:	adds	r1, #135	; 0x87
   24a3e:	add	r0, pc
   24a40:	bl	242e2 <btrfs_record_file_extent@@Base+0x5a6>
   24a44:	ldr	r5, [sp, #296]	; 0x128
   24a46:	movs	r1, r0
   24a48:	ldr	r5, [sp, #104]	; 0x68
   24a4a:	movs	r1, r0
   24a4c:	ldr.w	ip, [pc, #60]	; 24a8c <btrfs_destroy_delayed_refs@@Base+0xa8>
   24a50:	push	{r0, r1, r2, r3, r4, lr}
   24a52:	add	ip, pc
   24a54:	ldr	r3, [pc, #56]	; (24a90 <btrfs_destroy_delayed_refs@@Base+0xac>)
   24a56:	add.w	r2, r1, r2, lsl #3
   24a5a:	mov	r1, sp
   24a5c:	ldr.w	r3, [ip, r3]
   24a60:	ldr	r3, [r3, #0]
   24a62:	str	r3, [sp, #12]
   24a64:	mov.w	r3, #0
   24a68:	movs	r3, #8
   24a6a:	bl	17a1a <read_extent_buffer@@Base>
   24a6e:	ldr	r2, [pc, #36]	; (24a94 <btrfs_destroy_delayed_refs@@Base+0xb0>)
   24a70:	ldr	r3, [pc, #28]	; (24a90 <btrfs_destroy_delayed_refs@@Base+0xac>)
   24a72:	add	r2, pc
   24a74:	ldrd	r0, r1, [sp]
   24a78:	ldr	r3, [r2, r3]
   24a7a:	ldr	r2, [r3, #0]
   24a7c:	ldr	r3, [sp, #12]
   24a7e:	eors	r2, r3
   24a80:	beq.n	24a86 <btrfs_destroy_delayed_refs@@Base+0xa2>
   24a82:	blx	8708 <__stack_chk_fail@plt>
   24a86:	add	sp, #20
   24a88:	ldr.w	pc, [sp], #4
   24a8c:	lsls	r6, r5, #12
   24a8e:	movs	r4, r0
   24a90:	lsls	r0, r5, #8
   24a92:	movs	r0, r0
   24a94:	lsls	r6, r1, #12
   24a96:	movs	r4, r0
   24a98:	ldr	r2, [pc, #60]	; (24ad8 <btrfs_destroy_delayed_refs@@Base+0xf4>)
   24a9a:	movs	r1, #16
   24a9c:	ldr	r3, [pc, #60]	; (24adc <btrfs_destroy_delayed_refs@@Base+0xf8>)
   24a9e:	push	{r4, lr}
   24aa0:	add	r2, pc
   24aa2:	sub	sp, #72	; 0x48
   24aa4:	add	r4, sp, #4
   24aa6:	ldr	r3, [r2, r3]
   24aa8:	mov	r0, r4
   24aaa:	ldr	r3, [r3, #0]
   24aac:	str	r3, [sp, #68]	; 0x44
   24aae:	mov.w	r3, #0
   24ab2:	blx	88bc <backtrace@plt>
   24ab6:	movs	r2, #2
   24ab8:	mov	r1, r0
   24aba:	mov	r0, r4
   24abc:	blx	8bcc <backtrace_symbols_fd@plt>
   24ac0:	ldr	r2, [pc, #28]	; (24ae0 <btrfs_destroy_delayed_refs@@Base+0xfc>)
   24ac2:	ldr	r3, [pc, #24]	; (24adc <btrfs_destroy_delayed_refs@@Base+0xf8>)
   24ac4:	add	r2, pc
   24ac6:	ldr	r3, [r2, r3]
   24ac8:	ldr	r2, [r3, #0]
   24aca:	ldr	r3, [sp, #68]	; 0x44
   24acc:	eors	r2, r3
   24ace:	beq.n	24ad4 <btrfs_destroy_delayed_refs@@Base+0xf0>
   24ad0:	blx	8708 <__stack_chk_fail@plt>
   24ad4:	add	sp, #72	; 0x48
   24ad6:	pop	{r4, pc}
   24ad8:	lsls	r0, r4, #11
   24ada:	movs	r4, r0
   24adc:	lsls	r0, r5, #8
   24ade:	movs	r0, r0
   24ae0:	lsls	r4, r7, #10
   24ae2:	movs	r4, r0
   24ae4:	push	{r4, r5, r6, lr}
   24ae6:	mov	r6, r0
   24ae8:	movs	r4, #0
   24aea:	and.w	r0, r0, #1
   24aee:	mov	r1, r4
   24af0:	orrs.w	r3, r0, r1
   24af4:	beq.n	24b86 <btrfs_destroy_delayed_refs@@Base+0x1a2>
   24af6:	ldr	r1, [pc, #240]	; (24be8 <btrfs_destroy_delayed_refs@@Base+0x204>)
   24af8:	mov	r0, r2
   24afa:	add	r1, pc
   24afc:	blx	87f0 <strcpy@plt>
   24b00:	mov	r2, r0
   24b02:	and.w	r0, r6, #4
   24b06:	movs	r1, #0
   24b08:	orrs.w	r3, r0, r1
   24b0c:	beq.n	24b28 <btrfs_destroy_delayed_refs@@Base+0x144>
   24b0e:	cbnz	r4, 24b1c <btrfs_destroy_delayed_refs@@Base+0x138>
   24b10:	ldr	r1, [pc, #216]	; (24bec <btrfs_destroy_delayed_refs@@Base+0x208>)
   24b12:	mov	r0, r2
   24b14:	add	r1, pc
   24b16:	blx	87a8 <strcat@plt+0x4>
   24b1a:	mov	r2, r0
   24b1c:	ldr	r1, [pc, #208]	; (24bf0 <btrfs_destroy_delayed_refs@@Base+0x20c>)
   24b1e:	mov	r0, r2
   24b20:	add	r1, pc
   24b22:	blx	87a8 <strcat@plt+0x4>
   24b26:	mov	r2, r0
   24b28:	and.w	r0, r6, #2
   24b2c:	movs	r1, #0
   24b2e:	orrs.w	r3, r0, r1
   24b32:	beq.n	24b4e <btrfs_destroy_delayed_refs@@Base+0x16a>
   24b34:	cbnz	r4, 24b42 <btrfs_destroy_delayed_refs@@Base+0x15e>
   24b36:	ldr	r1, [pc, #188]	; (24bf4 <btrfs_destroy_delayed_refs@@Base+0x210>)
   24b38:	mov	r0, r2
   24b3a:	add	r1, pc
   24b3c:	blx	87a8 <strcat@plt+0x4>
   24b40:	mov	r2, r0
   24b42:	ldr	r1, [pc, #180]	; (24bf8 <btrfs_destroy_delayed_refs@@Base+0x214>)
   24b44:	mov	r0, r2
   24b46:	add	r1, pc
   24b48:	blx	87a8 <strcat@plt+0x4>
   24b4c:	mov	r2, r0
   24b4e:	and.w	r4, r6, #2040	; 0x7f8
   24b52:	movs	r5, #0
   24b54:	cmp	r5, #0
   24b56:	it	eq
   24b58:	cmpeq	r4, #128	; 0x80
   24b5a:	beq.n	24be2 <btrfs_destroy_delayed_refs@@Base+0x1fe>
   24b5c:	cmp	r5, #0
   24b5e:	it	eq
   24b60:	cmpeq	r4, #129	; 0x81
   24b62:	bcs.n	24b98 <btrfs_destroy_delayed_refs@@Base+0x1b4>
   24b64:	cmp	r5, #0
   24b66:	it	eq
   24b68:	cmpeq	r4, #32
   24b6a:	beq.n	24bdc <btrfs_destroy_delayed_refs@@Base+0x1f8>
   24b6c:	cmp	r5, #0
   24b6e:	it	eq
   24b70:	cmpeq	r4, #33	; 0x21
   24b72:	bcs.n	24b8a <btrfs_destroy_delayed_refs@@Base+0x1a6>
   24b74:	cmp	r5, #0
   24b76:	it	eq
   24b78:	cmpeq	r4, #8
   24b7a:	beq.n	24bbc <btrfs_destroy_delayed_refs@@Base+0x1d8>
   24b7c:	cmp	r5, #0
   24b7e:	it	eq
   24b80:	cmpeq	r4, #16
   24b82:	beq.n	24bca <btrfs_destroy_delayed_refs@@Base+0x1e6>
   24b84:	pop	{r4, r5, r6, pc}
   24b86:	movs	r4, #1
   24b88:	b.n	24b02 <btrfs_destroy_delayed_refs@@Base+0x11e>
   24b8a:	cmp	r5, #0
   24b8c:	it	eq
   24b8e:	cmpeq	r4, #64	; 0x40
   24b90:	bne.n	24b84 <btrfs_destroy_delayed_refs@@Base+0x1a0>
   24b92:	ldr	r1, [pc, #104]	; (24bfc <btrfs_destroy_delayed_refs@@Base+0x218>)
   24b94:	add	r1, pc
   24b96:	b.n	24bc0 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   24b98:	cmp	r5, #0
   24b9a:	it	eq
   24b9c:	cmpeq.w	r4, #512	; 0x200
   24ba0:	beq.n	24bd0 <btrfs_destroy_delayed_refs@@Base+0x1ec>
   24ba2:	cmp	r5, #0
   24ba4:	it	eq
   24ba6:	cmpeq.w	r4, #1024	; 0x400
   24baa:	beq.n	24bd6 <btrfs_destroy_delayed_refs@@Base+0x1f2>
   24bac:	cmp	r5, #0
   24bae:	it	eq
   24bb0:	cmpeq.w	r4, #256	; 0x100
   24bb4:	bne.n	24b84 <btrfs_destroy_delayed_refs@@Base+0x1a0>
   24bb6:	ldr	r1, [pc, #72]	; (24c00 <btrfs_destroy_delayed_refs@@Base+0x21c>)
   24bb8:	add	r1, pc
   24bba:	b.n	24bc0 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   24bbc:	ldr	r1, [pc, #68]	; (24c04 <btrfs_destroy_delayed_refs@@Base+0x220>)
   24bbe:	add	r1, pc
   24bc0:	ldmia.w	sp!, {r4, r5, r6, lr}
   24bc4:	mov	r0, r2
   24bc6:	b.w	87a4 <strcat@plt>
   24bca:	ldr	r1, [pc, #60]	; (24c08 <btrfs_destroy_delayed_refs@@Base+0x224>)
   24bcc:	add	r1, pc
   24bce:	b.n	24bc0 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   24bd0:	ldr	r1, [pc, #56]	; (24c0c <btrfs_destroy_delayed_refs@@Base+0x228>)
   24bd2:	add	r1, pc
   24bd4:	b.n	24bc0 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   24bd6:	ldr	r1, [pc, #56]	; (24c10 <btrfs_destroy_delayed_refs@@Base+0x22c>)
   24bd8:	add	r1, pc
   24bda:	b.n	24bc0 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   24bdc:	ldr	r1, [pc, #52]	; (24c14 <btrfs_destroy_delayed_refs@@Base+0x230>)
   24bde:	add	r1, pc
   24be0:	b.n	24bc0 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   24be2:	ldr	r1, [pc, #52]	; (24c18 <btrfs_destroy_delayed_refs@@Base+0x234>)
   24be4:	add	r1, pc
   24be6:	b.n	24bc0 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   24be8:	add	r4, sp, #76	; 0x4c
   24bea:	movs	r1, r0
   24bec:	strb	r7, [r0, #9]
   24bee:	movs	r1, r0
   24bf0:	add	r3, sp, #976	; 0x3d0
   24bf2:	movs	r1, r0
   24bf4:	strb	r1, [r4, #8]
   24bf6:	movs	r1, r0
   24bf8:	add	r3, sp, #868	; 0x364
   24bfa:	movs	r1, r0
   24bfc:	ldr	r4, [sp, #732]	; 0x2dc
   24bfe:	movs	r1, r0
   24c00:	ldr	r4, [sp, #648]	; 0x288
   24c02:	movs	r1, r0
   24c04:	ldr	r4, [sp, #416]	; 0x1a0
   24c06:	movs	r1, r0
   24c08:	ldr	r4, [sp, #388]	; 0x184
   24c0a:	movs	r1, r0
   24c0c:	ldr	r4, [sp, #392]	; 0x188
   24c0e:	movs	r1, r0
   24c10:	ldr	r4, [sp, #404]	; 0x194
   24c12:	movs	r1, r0
   24c14:	ldr	r4, [sp, #416]	; 0x1a0
   24c16:	movs	r1, r0
   24c18:	ldr	r4, [sp, #444]	; 0x1bc
   24c1a:	movs	r1, r0
   24c1c:	push	{r4, lr}
   24c1e:	sub	sp, #24
   24c20:	ldr	r2, [r0, #64]	; 0x40
   24c22:	mov	r4, r0
   24c24:	ldr	r3, [r0, #68]	; 0x44
   24c26:	ldr	r1, [pc, #112]	; (24c98 <btrfs_destroy_delayed_refs@@Base+0x2b4>)
   24c28:	strd	r2, r3, [sp, #16]
   24c2c:	add	r1, pc
   24c2e:	ldr	r2, [r0, #56]	; 0x38
   24c30:	ldr	r3, [r0, #60]	; 0x3c
   24c32:	strd	r2, r3, [sp, #8]
   24c36:	ldr	r2, [r0, #16]
   24c38:	ldr	r3, [r0, #20]
   24c3a:	strd	r2, r3, [sp]
   24c3e:	ldr	r2, [r0, #0]
   24c40:	ldr	r3, [r0, #4]
   24c42:	movs	r0, #1
   24c44:	blx	8a30 <__printf_chk@plt+0x4>
   24c48:	ldr	r2, [r4, #32]
   24c4a:	ldr	r3, [r4, #36]	; 0x24
   24c4c:	movs	r0, #1
   24c4e:	ldr	r1, [pc, #76]	; (24c9c <btrfs_destroy_delayed_refs@@Base+0x2b8>)
   24c50:	strd	r2, r3, [sp, #8]
   24c54:	add	r1, pc
   24c56:	ldr	r2, [r4, #24]
   24c58:	ldr	r3, [r4, #28]
   24c5a:	strd	r2, r3, [sp]
   24c5e:	ldr	r3, [r4, #12]
   24c60:	ldr	r2, [r4, #8]
   24c62:	blx	8a30 <__printf_chk@plt+0x4>
   24c66:	ldr	r3, [r4, #76]	; 0x4c
   24c68:	ldr	r2, [r4, #48]	; 0x30
   24c6a:	movs	r0, #1
   24c6c:	ldr	r1, [pc, #48]	; (24ca0 <btrfs_destroy_delayed_refs@@Base+0x2bc>)
   24c6e:	str	r3, [sp, #12]
   24c70:	ldr	r3, [r4, #72]	; 0x48
   24c72:	add	r1, pc
   24c74:	str	r3, [sp, #8]
   24c76:	ldr	r3, [r4, #52]	; 0x34
   24c78:	strd	r2, r3, [sp]
   24c7c:	ldr	r2, [r4, #40]	; 0x28
   24c7e:	ldr	r3, [r4, #44]	; 0x2c
   24c80:	blx	8a30 <__printf_chk@plt+0x4>
   24c84:	ldr	r1, [pc, #28]	; (24ca4 <btrfs_destroy_delayed_refs@@Base+0x2c0>)
   24c86:	ldr	r3, [r4, #84]	; 0x54
   24c88:	movs	r0, #1
   24c8a:	ldr	r2, [r4, #80]	; 0x50
   24c8c:	add	r1, pc
   24c8e:	add	sp, #24
   24c90:	ldmia.w	sp!, {r4, lr}
   24c94:	b.w	8a2c <__printf_chk@plt>
   24c98:	ldr	r4, [sp, #212]	; 0xd4
   24c9a:	movs	r1, r0
   24c9c:	ldr	r4, [sp, #256]	; 0x100
   24c9e:	movs	r1, r0
   24ca0:	ldr	r4, [sp, #340]	; 0x154
   24ca2:	movs	r1, r0
   24ca4:	ldr	r4, [sp, #440]	; 0x1b8
   24ca6:	movs	r1, r0
   24ca8:	push	{r4, r5, r6, r7, lr}
   24caa:	mov	r6, r2
   24cac:	ldr	r2, [pc, #104]	; (24d18 <btrfs_destroy_delayed_refs@@Base+0x334>)
   24cae:	sub	sp, #292	; 0x124
   24cb0:	ldr	r3, [pc, #104]	; (24d1c <btrfs_destroy_delayed_refs@@Base+0x338>)
   24cb2:	add.w	r4, r0, #96	; 0x60
   24cb6:	add	r2, pc
   24cb8:	add	r5, sp, #28
   24cba:	ldr	r3, [r2, r3]
   24cbc:	ldr	r3, [r3, #0]
   24cbe:	str	r3, [sp, #284]	; 0x11c
   24cc0:	mov.w	r3, #0
   24cc4:	movs	r3, #25
   24cc6:	mla	r1, r3, r1, r4
   24cca:	ldr.w	r2, [r1, #118]	; 0x76
   24cce:	mov	r1, r5
   24cd0:	add.w	r3, r2, #101	; 0x65
   24cd4:	adds	r2, #119	; 0x77
   24cd6:	add	r4, r3
   24cd8:	ldrh	r7, [r4, #16]
   24cda:	mov	r3, r7
   24cdc:	bl	17a1a <read_extent_buffer@@Base>
   24ce0:	strd	r7, r5, [sp, #16]
   24ce4:	ldr	r2, [r4, #8]
   24ce6:	movs	r0, #1
   24ce8:	ldr	r3, [r4, #12]
   24cea:	ldr	r1, [pc, #52]	; (24d20 <btrfs_destroy_delayed_refs@@Base+0x33c>)
   24cec:	strd	r2, r3, [sp, #8]
   24cf0:	add	r1, pc
   24cf2:	ldr	r2, [r4, #0]
   24cf4:	ldr	r3, [r4, #4]
   24cf6:	strd	r2, r3, [sp]
   24cfa:	mov	r2, r6
   24cfc:	blx	8a30 <__printf_chk@plt+0x4>
   24d00:	ldr	r2, [pc, #32]	; (24d24 <btrfs_destroy_delayed_refs@@Base+0x340>)
   24d02:	ldr	r3, [pc, #24]	; (24d1c <btrfs_destroy_delayed_refs@@Base+0x338>)
   24d04:	add	r2, pc
   24d06:	ldr	r3, [r2, r3]
   24d08:	ldr	r2, [r3, #0]
   24d0a:	ldr	r3, [sp, #284]	; 0x11c
   24d0c:	eors	r2, r3
   24d0e:	beq.n	24d14 <btrfs_destroy_delayed_refs@@Base+0x330>
   24d10:	blx	8708 <__stack_chk_fail@plt>
   24d14:	add	sp, #292	; 0x124
   24d16:	pop	{r4, r5, r6, r7, pc}
   24d18:	lsls	r2, r1, #3
   24d1a:	movs	r4, r0
   24d1c:	lsls	r0, r5, #8
   24d1e:	movs	r0, r0
   24d20:	ldr	r4, [sp, #172]	; 0xac
   24d22:	movs	r1, r0
   24d24:	lsls	r4, r7, #1
   24d26:	movs	r4, r0
   24d28:	ldr	r2, [pc, #112]	; (24d9c <btrfs_destroy_delayed_refs@@Base+0x3b8>)
   24d2a:	ldr	r3, [pc, #116]	; (24da0 <btrfs_destroy_delayed_refs@@Base+0x3bc>)
   24d2c:	add	r2, pc
   24d2e:	push	{r4, r5, r6, r7, lr}
   24d30:	sub	sp, #116	; 0x74
   24d32:	ldr	r3, [r2, r3]
   24d34:	add	r4, sp, #12
   24d36:	add	r6, sp, #28
   24d38:	movs	r2, #32
   24d3a:	ldr	r3, [r3, #0]
   24d3c:	str	r3, [sp, #108]	; 0x6c
   24d3e:	mov.w	r3, #0
   24d42:	mov	r1, r4
   24d44:	movs	r3, #16
   24d46:	mov	r5, r0
   24d48:	bl	17a1a <read_extent_buffer@@Base>
   24d4c:	mov	r1, r6
   24d4e:	mov	r0, r4
   24d50:	movs	r7, #0
   24d52:	strb.w	r7, [sp, #64]	; 0x40
   24d56:	blx	85c4 <uuid_unparse@plt>
   24d5a:	movs	r2, #64	; 0x40
   24d5c:	movs	r3, #16
   24d5e:	mov	r1, r4
   24d60:	mov	r0, r5
   24d62:	bl	17a1a <read_extent_buffer@@Base>
   24d66:	add	r3, sp, #68	; 0x44
   24d68:	mov	r0, r4
   24d6a:	str	r3, [sp, #4]
   24d6c:	mov	r1, r3
   24d6e:	strb.w	r7, [sp, #104]	; 0x68
   24d72:	blx	85c4 <uuid_unparse@plt>
   24d76:	ldr	r1, [pc, #44]	; (24da4 <btrfs_destroy_delayed_refs@@Base+0x3c0>)
   24d78:	ldr	r3, [sp, #4]
   24d7a:	mov	r2, r6
   24d7c:	add	r1, pc
   24d7e:	movs	r0, #1
   24d80:	blx	8a30 <__printf_chk@plt+0x4>
   24d84:	ldr	r2, [pc, #32]	; (24da8 <btrfs_destroy_delayed_refs@@Base+0x3c4>)
   24d86:	ldr	r3, [pc, #24]	; (24da0 <btrfs_destroy_delayed_refs@@Base+0x3bc>)
   24d88:	add	r2, pc
   24d8a:	ldr	r3, [r2, r3]
   24d8c:	ldr	r2, [r3, #0]
   24d8e:	ldr	r3, [sp, #108]	; 0x6c
   24d90:	eors	r2, r3
   24d92:	beq.n	24d98 <btrfs_destroy_delayed_refs@@Base+0x3b4>
   24d94:	blx	8708 <__stack_chk_fail@plt>
   24d98:	add	sp, #116	; 0x74
   24d9a:	pop	{r4, r5, r6, r7, pc}
   24d9c:	lsls	r4, r2, #1
   24d9e:	movs	r4, r0
   24da0:	lsls	r0, r5, #8
   24da2:	movs	r0, r0
   24da4:	ldr	r3, [sp, #836]	; 0x344
   24da6:	movs	r1, r0
   24da8:	vrev64.32	d16, d3
   24dac:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   24db0:	mov	r5, r2
   24db2:	ldr	r2, [pc, #112]	; (24e24 <btrfs_destroy_delayed_refs@@Base+0x440>)
   24db4:	sub	sp, #344	; 0x158
   24db6:	ldr	r3, [pc, #112]	; (24e28 <btrfs_destroy_delayed_refs@@Base+0x444>)
   24db8:	adds	r0, #96	; 0x60
   24dba:	add	r2, pc
   24dbc:	add	r4, sp, #84	; 0x54
   24dbe:	ldr	r6, [r0, r1]
   24dc0:	ldr	r3, [r2, r3]
   24dc2:	ldr	r3, [r3, #0]
   24dc4:	str	r3, [sp, #340]	; 0x154
   24dc6:	mov.w	r3, #0
   24dca:	adds	r3, r0, r1
   24dcc:	add	r0, sp, #36	; 0x24
   24dce:	str	r6, [r0, #0]
   24dd0:	ldr	r7, [r3, #4]
   24dd2:	ldr.w	r8, [r3, #8]
   24dd6:	add	r3, sp, #40	; 0x28
   24dd8:	str	r3, [sp, #28]
   24dda:	mov	r1, r3
   24ddc:	blx	8730 <localtime_r@plt>
   24de0:	ldr	r2, [pc, #72]	; (24e2c <btrfs_destroy_delayed_refs@@Base+0x448>)
   24de2:	ldr	r3, [sp, #28]
   24de4:	mov.w	r1, #256	; 0x100
   24de8:	add	r2, pc
   24dea:	mov	r0, r4
   24dec:	blx	88a4 <strftime@plt>
   24df0:	ldr	r3, [pc, #60]	; (24e30 <btrfs_destroy_delayed_refs@@Base+0x44c>)
   24df2:	ldr	r1, [pc, #64]	; (24e34 <btrfs_destroy_delayed_refs@@Base+0x450>)
   24df4:	mov	r2, r5
   24df6:	add	r3, pc
   24df8:	movs	r0, #1
   24dfa:	strd	r4, r3, [sp, #12]
   24dfe:	add	r1, pc
   24e00:	stmia.w	sp, {r6, r7, r8}
   24e04:	blx	8a30 <__printf_chk@plt+0x4>
   24e08:	ldr	r2, [pc, #44]	; (24e38 <btrfs_destroy_delayed_refs@@Base+0x454>)
   24e0a:	ldr	r3, [pc, #28]	; (24e28 <btrfs_destroy_delayed_refs@@Base+0x444>)
   24e0c:	add	r2, pc
   24e0e:	ldr	r3, [r2, r3]
   24e10:	ldr	r2, [r3, #0]
   24e12:	ldr	r3, [sp, #340]	; 0x154
   24e14:	eors	r2, r3
   24e16:	beq.n	24e1c <btrfs_destroy_delayed_refs@@Base+0x438>
   24e18:	blx	8708 <__stack_chk_fail@plt>
   24e1c:	add	sp, #344	; 0x158
   24e1e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   24e22:	nop
   24e24:	vaddl.u8	q8, d6, d3
   24e28:	lsls	r0, r5, #8
   24e2a:	movs	r0, r0
   24e2c:	ldr	r3, [sp, #508]	; 0x1fc
   24e2e:	movs	r1, r0
   24e30:	add	r5, sp, #948	; 0x3b4
   24e32:	movs	r1, r0
   24e34:	ldr	r3, [sp, #492]	; 0x1ec
   24e36:	movs	r1, r0
   24e38:	vhadd.u<illegal width 64>	d16, d4, d3
   24e3c:	push	{r0, r1, r2, r3, r4, lr}
   24e3e:	ldr	r4, [pc, #40]	; (24e68 <btrfs_destroy_delayed_refs@@Base+0x484>)
   24e40:	ldr	r5, [pc, #40]	; (24e6c <btrfs_destroy_delayed_refs@@Base+0x488>)
   24e42:	add	r4, pc
   24e44:	ldr	r4, [r4, r5]
   24e46:	strd	r2, r1, [sp]
   24e4a:	movs	r1, #1
   24e4c:	strd	r0, r3, [sp, #8]
   24e50:	ldr	r2, [pc, #28]	; (24e70 <btrfs_destroy_delayed_refs@@Base+0x48c>)
   24e52:	ldr	r3, [pc, #32]	; (24e74 <btrfs_destroy_delayed_refs@@Base+0x490>)
   24e54:	add	r2, pc
   24e56:	ldr	r0, [r4, #0]
   24e58:	add	r3, pc
   24e5a:	blx	8a64 <__fprintf_chk@plt+0x4>
   24e5e:	bl	24a98 <btrfs_destroy_delayed_refs@@Base+0xb4>
   24e62:	blx	8b84 <abort@plt>
   24e66:	nop
   24e68:	vhadd.u<illegal width 64>	d0, d14, d3
   24e6c:	lsls	r0, r7, #8
   24e6e:	movs	r0, r0
   24e70:	str	r6, [r1, r1]
   24e72:	movs	r1, r0
   24e74:	ldr	r4, [r7, r0]
   24e76:	movs	r1, r0
   24e78:	push	{r3, lr}
   24e7a:	ldr	r3, [r0, #92]	; 0x5c
   24e7c:	ldr	r2, [r0, #76]	; 0x4c
   24e7e:	cbz	r3, 24e9a <btrfs_destroy_delayed_refs@@Base+0x4b6>
   24e80:	ldr.w	r3, [r3, #384]	; 0x180
   24e84:	cmp	r3, r2
   24e86:	beq.n	24e9a <btrfs_destroy_delayed_refs@@Base+0x4b6>
   24e88:	ldr	r1, [pc, #32]	; (24eac <btrfs_destroy_delayed_refs@@Base+0x4c8>)
   24e8a:	movs	r3, #1
   24e8c:	ldr	r0, [pc, #32]	; (24eb0 <btrfs_destroy_delayed_refs@@Base+0x4cc>)
   24e8e:	movw	r2, #1246	; 0x4de
   24e92:	add	r1, pc
   24e94:	add	r0, pc
   24e96:	bl	24e3c <btrfs_destroy_delayed_refs@@Base+0x458>
   24e9a:	ldr	r3, [pc, #12]	; (24ea8 <btrfs_destroy_delayed_refs@@Base+0x4c4>)
   24e9c:	subs	r2, #101	; 0x65
   24e9e:	umull	r2, r3, r2, r3
   24ea2:	lsrs	r0, r3, #3
   24ea4:	pop	{r3, pc}
   24ea6:	nop
   24ea8:	strh	r1, [r4, #30]
   24eaa:	subs	r6, #15
   24eac:	add	r4, sp, #160	; 0xa0
   24eae:	movs	r1, r0
   24eb0:	ldr	r2, [sp, #984]	; 0x3d8
   24eb2:	movs	r1, r0

00024eb4 <print_chunk_item@@Base>:
   24eb4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24eb8:	add.w	r8, r0, #96	; 0x60
   24ebc:	ldr	r2, [pc, #376]	; (25038 <print_chunk_item@@Base+0x184>)
   24ebe:	add.w	r9, r8, r1
   24ec2:	ldr	r3, [pc, #376]	; (2503c <print_chunk_item@@Base+0x188>)
   24ec4:	sub	sp, #148	; 0x94
   24ec6:	add	r2, pc
   24ec8:	ldrh.w	r6, [r9, #44]	; 0x2c
   24ecc:	movs	r5, #0
   24ece:	mov	r7, r0
   24ed0:	ldr	r3, [r2, r3]
   24ed2:	mov	r4, r1
   24ed4:	add	r0, sp, #72	; 0x48
   24ed6:	movs	r2, #28
   24ed8:	mov	r1, r5
   24eda:	ldr	r3, [r3, #0]
   24edc:	str	r3, [sp, #140]	; 0x8c
   24ede:	mov.w	r3, #0
   24ee2:	str	r5, [sp, #68]	; 0x44
   24ee4:	blx	89bc <memset@plt+0x4>
   24ee8:	cbnz	r6, 24ef8 <print_chunk_item@@Base+0x44>
   24eea:	ldr	r1, [pc, #340]	; (25040 <print_chunk_item@@Base+0x18c>)
   24eec:	mov	r2, r6
   24eee:	add	r1, pc
   24ef0:	movs	r0, #1
   24ef2:	blx	8a30 <__printf_chk@plt+0x4>
   24ef6:	b.n	24f0c <print_chunk_item@@Base+0x58>
   24ef8:	ldr	r2, [r7, #76]	; 0x4c
   24efa:	add.w	r3, r4, r6, lsl #5
   24efe:	adds	r3, #48	; 0x30
   24f00:	cmp	r3, r2
   24f02:	bls.n	24f22 <print_chunk_item@@Base+0x6e>
   24f04:	ldr	r0, [pc, #316]	; (25044 <print_chunk_item@@Base+0x190>)
   24f06:	add	r0, pc
   24f08:	blx	8854 <puts@plt+0x4>
   24f0c:	ldr	r2, [pc, #312]	; (25048 <print_chunk_item@@Base+0x194>)
   24f0e:	ldr	r3, [pc, #300]	; (2503c <print_chunk_item@@Base+0x188>)
   24f10:	add	r2, pc
   24f12:	ldr	r3, [r2, r3]
   24f14:	ldr	r2, [r3, #0]
   24f16:	ldr	r3, [sp, #140]	; 0x8c
   24f18:	eors	r2, r3
   24f1a:	beq.w	25030 <print_chunk_item@@Base+0x17c>
   24f1e:	blx	8708 <__stack_chk_fail@plt>
   24f22:	add.w	sl, sp, #68	; 0x44
   24f26:	ldr.w	r0, [r9, #24]
   24f2a:	ldr.w	r1, [r9, #28]
   24f2e:	adds	r4, #48	; 0x30
   24f30:	mov	r2, sl
   24f32:	ldr.w	fp, [pc, #280]	; 2504c <print_chunk_item@@Base+0x198>
   24f36:	bl	24ae4 <btrfs_destroy_delayed_refs@@Base+0x100>
   24f3a:	str.w	sl, [sp, #16]
   24f3e:	ldr.w	r2, [r9, #16]
   24f42:	movs	r0, #1
   24f44:	ldr.w	r3, [r9, #20]
   24f48:	add	fp, pc
   24f4a:	ldr	r1, [pc, #260]	; (25050 <print_chunk_item@@Base+0x19c>)
   24f4c:	ldr.w	sl, [pc, #260]	; 25054 <print_chunk_item@@Base+0x1a0>
   24f50:	strd	r2, r3, [sp, #8]
   24f54:	add	r1, pc
   24f56:	ldr.w	r2, [r9, #8]
   24f5a:	add	sl, pc
   24f5c:	ldr.w	r3, [r9, #12]
   24f60:	strd	r2, r3, [sp]
   24f64:	ldr.w	r2, [r9]
   24f68:	ldr.w	r3, [r9, #4]
   24f6c:	blx	8a30 <__printf_chk@plt+0x4>
   24f70:	ldr.w	r3, [r9, #40]	; 0x28
   24f74:	ldr	r1, [pc, #224]	; (25058 <print_chunk_item@@Base+0x1a4>)
   24f76:	movs	r0, #1
   24f78:	str	r3, [sp, #0]
   24f7a:	add	r1, pc
   24f7c:	ldr.w	r3, [r9, #36]	; 0x24
   24f80:	ldr.w	r2, [r9, #32]
   24f84:	blx	8a30 <__printf_chk@plt+0x4>
   24f88:	ldr	r1, [pc, #208]	; (2505c <print_chunk_item@@Base+0x1a8>)
   24f8a:	ldrh.w	r3, [r9, #46]	; 0x2e
   24f8e:	mov	r2, r6
   24f90:	add	r1, pc
   24f92:	movs	r0, #1
   24f94:	blx	8a30 <__printf_chk@plt+0x4>
   24f98:	add.w	r9, sp, #52	; 0x34
   24f9c:	add.w	ip, r4, #16
   24fa0:	movs	r3, #0
   24fa2:	movs	r1, #0
   24fa4:	cmp	r3, r1
   24fa6:	it	eq
   24fa8:	cmpeq	ip, r4
   24faa:	mov	r2, ip
   24fac:	strd	r2, r3, [sp, #24]
   24fb0:	bcc.n	24fdc <print_chunk_item@@Base+0x128>
   24fb2:	ldr	r3, [sp, #24]
   24fb4:	adds	r3, #16
   24fb6:	str	r3, [sp, #32]
   24fb8:	ldr	r3, [sp, #28]
   24fba:	adc.w	r3, r3, #0
   24fbe:	str	r3, [sp, #36]	; 0x24
   24fc0:	adds.w	r3, r4, #32
   24fc4:	str	r3, [sp, #40]	; 0x28
   24fc6:	adc.w	r3, r1, #0
   24fca:	str	r3, [sp, #44]	; 0x2c
   24fcc:	ldrd	r2, r3, [sp, #40]	; 0x28
   24fd0:	ldrd	r0, r1, [sp, #32]
   24fd4:	cmp	r3, r1
   24fd6:	it	eq
   24fd8:	cmpeq	r2, r0
   24fda:	bcs.n	24fe4 <print_chunk_item@@Base+0x130>
   24fdc:	ldr	r1, [pc, #128]	; (25060 <print_chunk_item@@Base+0x1ac>)
   24fde:	mov	r2, r5
   24fe0:	add	r1, pc
   24fe2:	b.n	24ef0 <print_chunk_item@@Base+0x3c>
   24fe4:	mov	r2, ip
   24fe6:	movs	r3, #16
   24fe8:	mov	r1, r9
   24fea:	mov	r0, r7
   24fec:	bl	17a1a <read_extent_buffer@@Base>
   24ff0:	add	r3, sp, #100	; 0x64
   24ff2:	mov	r0, r9
   24ff4:	str	r3, [sp, #24]
   24ff6:	mov	r1, r3
   24ff8:	blx	85c4 <uuid_unparse@plt>
   24ffc:	add.w	r2, r8, r4
   25000:	adds	r4, #32
   25002:	ldr	r0, [r2, #8]
   25004:	ldr	r1, [r2, #12]
   25006:	strd	r0, r1, [sp, #8]
   2500a:	movs	r0, #1
   2500c:	ldr	r1, [r2, #0]
   2500e:	ldr	r2, [r2, #4]
   25010:	strd	r1, r2, [sp]
   25014:	mov	r2, r5
   25016:	mov	r1, fp
   25018:	adds	r5, #1
   2501a:	blx	8a30 <__printf_chk@plt+0x4>
   2501e:	ldr	r3, [sp, #24]
   25020:	mov	r1, sl
   25022:	movs	r0, #1
   25024:	mov	r2, r3
   25026:	blx	8a30 <__printf_chk@plt+0x4>
   2502a:	cmp	r6, r5
   2502c:	bgt.n	24f9c <print_chunk_item@@Base+0xe8>
   2502e:	b.n	24f0c <print_chunk_item@@Base+0x58>
   25030:	add	sp, #148	; 0x94
   25032:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25036:	nop
   25038:	cdp2	0, 11, cr0, cr10, cr3, {0}
   2503c:	lsls	r0, r5, #8
   2503e:	movs	r0, r0
   25040:	ldr	r2, [sp, #816]	; 0x330
   25042:	movs	r1, r0
   25044:	ldr	r2, [sp, #820]	; 0x334
   25046:	movs	r1, r0
   25048:	cdp2	0, 7, cr0, cr0, cr3, {0}
   2504c:	ldr	r3, [sp, #212]	; 0xd4
   2504e:	movs	r1, r0
   25050:	ldr	r2, [sp, #592]	; 0x250
   25052:	movs	r1, r0
   25054:	ldr	r3, [sp, #288]	; 0x120
   25056:	movs	r1, r0
   25058:	ldr	r2, [sp, #640]	; 0x280
   2505a:	movs	r1, r0
   2505c:	ldr	r2, [sp, #720]	; 0x2d0
   2505e:	movs	r1, r0
   25060:	ldr	r2, [sp, #540]	; 0x21c
   25062:	movs	r1, r0

00025064 <print_key_type@@Base>:
   25064:	push	{r4, r5, r6, r7}
   25066:	mov	r5, r3
   25068:	ldrb.w	r3, [sp, #16]
   2506c:	cbnz	r3, 2508a <print_key_type@@Base+0x26>
   2506e:	mov.w	r7, #4294967295	; 0xffffffff
   25072:	cmp	r5, r7
   25074:	mvn.w	r6, #10
   25078:	it	eq
   2507a:	cmpeq	r2, r6
   2507c:	bne.n	2508a <print_key_type@@Base+0x26>
   2507e:	mov	r1, r0
   25080:	ldr	r0, [pc, #36]	; (250a8 <print_key_type@@Base+0x44>)
   25082:	add	r0, pc
   25084:	pop	{r4, r5, r6, r7}
   25086:	b.w	8b68 <fputs@plt>
   2508a:	ldr	r2, [pc, #32]	; (250ac <print_key_type@@Base+0x48>)
   2508c:	add	r2, pc
   2508e:	ldr.w	r2, [r2, r3, lsl #2]
   25092:	cbz	r2, 2509a <print_key_type@@Base+0x36>
   25094:	mov	r1, r0
   25096:	mov	r0, r2
   25098:	b.n	25084 <print_key_type@@Base+0x20>
   2509a:	ldr	r2, [pc, #20]	; (250b0 <print_key_type@@Base+0x4c>)
   2509c:	movs	r1, #1
   2509e:	pop	{r4, r5, r6, r7}
   250a0:	add	r2, pc
   250a2:	b.w	8a60 <__fprintf_chk@plt>
   250a6:	nop
   250a8:	ldr	r2, [sp, #192]	; 0xc0
   250aa:	movs	r1, r0
   250ac:			; <UNDEFINED> instruction: 0xf74c0003
   250b0:	ldr	r2, [sp, #104]	; 0x68
   250b2:	movs	r1, r0

000250b4 <print_objectid@@Base>:
   250b4:	stmdb	sp!, {r0, r1, r2, r3, r4, r6, r7, r8, r9, sl, fp, lr}
   250b8:	mov	r4, r0
   250ba:	ldrb.w	r1, [sp, #48]	; 0x30
   250be:	mov	r6, r2
   250c0:	mov	r7, r3
   250c2:	cmp	r1, #249	; 0xf9
   250c4:	beq.n	2511c <print_objectid@@Base+0x68>
   250c6:	bhi.n	2510a <print_objectid@@Base+0x56>
   250c8:	cmp	r1, #204	; 0xcc
   250ca:	beq.n	250f8 <print_objectid@@Base+0x44>
   250cc:	cmp	r1, #246	; 0xf6
   250ce:	beq.n	2513e <print_objectid@@Base+0x8a>
   250d0:	mov.w	r3, #4294967295	; 0xffffffff
   250d4:	cmp	r7, r3
   250d6:	mvn.w	r2, #254	; 0xfe
   250da:	it	eq
   250dc:	cmpeq	r6, r2
   250de:	beq.w	252a2 <print_objectid@@Base+0x1ee>
   250e2:	cmp	r3, r7
   250e4:	it	eq
   250e6:	cmpeq	r2, r6
   250e8:	bcc.n	2519a <print_objectid@@Base+0xe6>
   250ea:	cmp	r7, #0
   250ec:	it	eq
   250ee:	cmpeq	r6, #11
   250f0:	bcs.n	25184 <print_objectid@@Base+0xd0>
   250f2:	orrs.w	r3, r6, r7
   250f6:	bne.n	2515c <print_objectid@@Base+0xa8>
   250f8:	ldr	r2, [pc, #440]	; (252b4 <print_objectid@@Base+0x200>)
   250fa:	movs	r1, #1
   250fc:	mov	r0, r4
   250fe:	strd	r6, r7, [sp]
   25102:	add	r2, pc
   25104:	blx	8a64 <__fprintf_chk@plt+0x4>
   25108:	b.n	25156 <print_objectid@@Base+0xa2>
   2510a:	adds	r3, r1, #5
   2510c:	uxtb	r3, r3
   2510e:	cmp	r3, #1
   25110:	bhi.n	250d0 <print_objectid@@Base+0x1c>
   25112:	ldr	r2, [pc, #420]	; (252b8 <print_objectid@@Base+0x204>)
   25114:	strd	r6, r7, [sp]
   25118:	add	r2, pc
   2511a:	b.n	2513a <print_objectid@@Base+0x86>
   2511c:	orrs.w	r3, r6, r7
   25120:	bne.n	25132 <print_objectid@@Base+0x7e>
   25122:	mov	r1, r0
   25124:	ldr	r0, [pc, #404]	; (252bc <print_objectid@@Base+0x208>)
   25126:	add	r0, pc
   25128:	add	sp, #16
   2512a:	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, lr}
   2512e:	b.w	8b68 <fputs@plt>
   25132:	ldr	r2, [pc, #396]	; (252c0 <print_objectid@@Base+0x20c>)
   25134:	strd	r6, r7, [sp]
   25138:	add	r2, pc
   2513a:	movs	r1, #1
   2513c:	b.n	25104 <print_objectid@@Base+0x50>
   2513e:	uxth	r3, r3
   25140:	strd	r2, r3, [sp, #8]
   25144:	ldr	r2, [pc, #380]	; (252c4 <print_objectid@@Base+0x210>)
   25146:	lsrs	r3, r7, #16
   25148:	movs	r1, #1
   2514a:	str	r3, [sp, #0]
   2514c:	add	r2, pc
   2514e:	movs	r3, #0
   25150:	str	r3, [sp, #4]
   25152:	blx	8a64 <__fprintf_chk@plt+0x4>
   25156:	add	sp, #16
   25158:	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, pc}
   2515c:	subs.w	sl, r6, #2
   25160:	adc.w	fp, r7, #4294967295	; 0xffffffff
   25164:	cmp.w	fp, #0
   25168:	it	eq
   2516a:	cmpeq.w	sl, #9
   2516e:	bcs.n	25200 <print_objectid@@Base+0x14c>
   25170:	cmp.w	sl, #8
   25174:	bhi.n	25200 <print_objectid@@Base+0x14c>
   25176:	tbb	[pc, sl]
   2517a:	str	r4, [r1, r1]
   2517c:	ldr	r4, [r2, r1]
   2517e:	str	r4, [r3, #4]
   25180:	ldrh	r0, [r1, #36]	; 0x24
   25182:	lsls	r0, r2, #2
   25184:	cmp	r7, #0
   25186:	it	eq
   25188:	cmpeq.w	r6, #256	; 0x100
   2518c:	bne.n	250f8 <print_objectid@@Base+0x44>
   2518e:	cmp	r1, #228	; 0xe4
   25190:	bne.n	250f8 <print_objectid@@Base+0x44>
   25192:	ldr	r0, [pc, #308]	; (252c8 <print_objectid@@Base+0x214>)
   25194:	mov	r1, r4
   25196:	add	r0, pc
   25198:	b.n	25128 <print_objectid@@Base+0x74>
   2519a:	mov.w	r3, #4294967295	; 0xffffffff
   2519e:	cmp	r3, r7
   251a0:	mvn.w	r2, #12
   251a4:	it	eq
   251a6:	cmpeq	r2, r6
   251a8:	bcs.n	250f8 <print_objectid@@Base+0x44>
   251aa:	adds.w	r8, r6, #12
   251ae:	adc.w	r9, r7, #0
   251b2:	cmp.w	r9, #0
   251b6:	it	eq
   251b8:	cmpeq.w	r8, #12
   251bc:	bcs.n	250f8 <print_objectid@@Base+0x44>
   251be:	cmp.w	r8, #11
   251c2:	bhi.n	250f8 <print_objectid@@Base+0x44>
   251c4:	add	r3, pc, #8	; (adr r3, 251d0 <print_objectid@@Base+0x11c>)
   251c6:	ldr.w	r2, [r3, r8, lsl #2]
   251ca:	add	r3, r2
   251cc:	bx	r3
   251ce:	nop
   251d0:	lsls	r3, r6, #2
   251d2:	movs	r0, r0
   251d4:	lsls	r3, r5, #2
   251d6:	movs	r0, r0
   251d8:	lsls	r3, r4, #2
   251da:	movs	r0, r0
   251dc:	lsls	r3, r3, #2
   251de:	movs	r0, r0
   251e0:	lsls	r3, r2, #2
   251e2:	movs	r0, r0
   251e4:	lsls	r3, r1, #2
   251e6:	movs	r0, r0
   251e8:	lsls	r3, r0, #2
   251ea:	movs	r0, r0
   251ec:	lsls	r3, r7, #1
   251ee:	movs	r0, r0
   251f0:	lsls	r3, r6, #1
   251f2:	movs	r0, r0
   251f4:	vminnm.f32	<illegal reg q7.5>, <illegal reg q12.5>, <illegal reg q15.5>
   251f8:	vminnm.f32	<illegal reg q7.5>, <illegal reg q12.5>, <illegal reg q15.5>
   251fc:	lsls	r3, r3, #3
   251fe:	movs	r0, r0
   25200:	cmp	r1, #216	; 0xd8
   25202:	mov	r1, r4
   25204:	bne.n	2520c <print_objectid@@Base+0x158>
   25206:	ldr	r0, [pc, #196]	; (252cc <print_objectid@@Base+0x218>)
   25208:	add	r0, pc
   2520a:	b.n	25128 <print_objectid@@Base+0x74>
   2520c:	ldr	r0, [pc, #192]	; (252d0 <print_objectid@@Base+0x21c>)
   2520e:	add	r0, pc
   25210:	b.n	25128 <print_objectid@@Base+0x74>
   25212:	ldr	r0, [pc, #192]	; (252d4 <print_objectid@@Base+0x220>)
   25214:	mov	r1, r4
   25216:	add	r0, pc
   25218:	b.n	25128 <print_objectid@@Base+0x74>
   2521a:	ldr	r0, [pc, #188]	; (252d8 <print_objectid@@Base+0x224>)
   2521c:	mov	r1, r4
   2521e:	add	r0, pc
   25220:	b.n	25128 <print_objectid@@Base+0x74>
   25222:	ldr	r0, [pc, #184]	; (252dc <print_objectid@@Base+0x228>)
   25224:	mov	r1, r4
   25226:	add	r0, pc
   25228:	b.n	25128 <print_objectid@@Base+0x74>
   2522a:	ldr	r0, [pc, #180]	; (252e0 <print_objectid@@Base+0x22c>)
   2522c:	mov	r1, r4
   2522e:	add	r0, pc
   25230:	b.n	25128 <print_objectid@@Base+0x74>
   25232:	ldr	r0, [pc, #176]	; (252e4 <print_objectid@@Base+0x230>)
   25234:	mov	r1, r4
   25236:	add	r0, pc
   25238:	b.n	25128 <print_objectid@@Base+0x74>
   2523a:	ldr	r0, [pc, #172]	; (252e8 <print_objectid@@Base+0x234>)
   2523c:	mov	r1, r4
   2523e:	add	r0, pc
   25240:	b.n	25128 <print_objectid@@Base+0x74>
   25242:	ldr	r0, [pc, #168]	; (252ec <print_objectid@@Base+0x238>)
   25244:	mov	r1, r4
   25246:	add	r0, pc
   25248:	b.n	25128 <print_objectid@@Base+0x74>
   2524a:	ldr	r0, [pc, #164]	; (252f0 <print_objectid@@Base+0x23c>)
   2524c:	mov	r1, r4
   2524e:	add	r0, pc
   25250:	b.n	25128 <print_objectid@@Base+0x74>
   25252:	ldr	r0, [pc, #160]	; (252f4 <print_objectid@@Base+0x240>)
   25254:	mov	r1, r4
   25256:	add	r0, pc
   25258:	b.n	25128 <print_objectid@@Base+0x74>
   2525a:	ldr	r0, [pc, #156]	; (252f8 <print_objectid@@Base+0x244>)
   2525c:	mov	r1, r4
   2525e:	add	r0, pc
   25260:	b.n	25128 <print_objectid@@Base+0x74>
   25262:	ldr	r0, [pc, #152]	; (252fc <print_objectid@@Base+0x248>)
   25264:	mov	r1, r4
   25266:	add	r0, pc
   25268:	b.n	25128 <print_objectid@@Base+0x74>
   2526a:	ldr	r0, [pc, #148]	; (25300 <print_objectid@@Base+0x24c>)
   2526c:	mov	r1, r4
   2526e:	add	r0, pc
   25270:	b.n	25128 <print_objectid@@Base+0x74>
   25272:	ldr	r0, [pc, #144]	; (25304 <print_objectid@@Base+0x250>)
   25274:	mov	r1, r4
   25276:	add	r0, pc
   25278:	b.n	25128 <print_objectid@@Base+0x74>
   2527a:	ldr	r0, [pc, #140]	; (25308 <print_objectid@@Base+0x254>)
   2527c:	mov	r1, r4
   2527e:	add	r0, pc
   25280:	b.n	25128 <print_objectid@@Base+0x74>
   25282:	ldr	r0, [pc, #136]	; (2530c <print_objectid@@Base+0x258>)
   25284:	mov	r1, r4
   25286:	add	r0, pc
   25288:	b.n	25128 <print_objectid@@Base+0x74>
   2528a:	ldr	r0, [pc, #132]	; (25310 <print_objectid@@Base+0x25c>)
   2528c:	mov	r1, r4
   2528e:	add	r0, pc
   25290:	b.n	25128 <print_objectid@@Base+0x74>
   25292:	ldr	r0, [pc, #128]	; (25314 <print_objectid@@Base+0x260>)
   25294:	mov	r1, r4
   25296:	add	r0, pc
   25298:	b.n	25128 <print_objectid@@Base+0x74>
   2529a:	ldr	r0, [pc, #124]	; (25318 <print_objectid@@Base+0x264>)
   2529c:	mov	r1, r4
   2529e:	add	r0, pc
   252a0:	b.n	25128 <print_objectid@@Base+0x74>
   252a2:	ldr	r0, [pc, #120]	; (2531c <print_objectid@@Base+0x268>)
   252a4:	mov	r1, r4
   252a6:	add	r0, pc
   252a8:	b.n	25128 <print_objectid@@Base+0x74>
   252aa:	ldr	r0, [pc, #116]	; (25320 <print_objectid@@Base+0x26c>)
   252ac:	mov	r1, r4
   252ae:	add	r0, pc
   252b0:	b.n	25128 <print_objectid@@Base+0x74>
   252b2:	nop
   252b4:	sub	sp, #348	; 0x15c
   252b6:	movs	r1, r0
   252b8:	ldr	r1, [sp, #732]	; 0x2dc
   252ba:	movs	r1, r0
   252bc:	ldr	r1, [sp, #636]	; 0x27c
   252be:	movs	r1, r0
   252c0:	sub	sp, #132	; 0x84
   252c2:	movs	r1, r0
   252c4:	ldr	r7, [pc, #332]	; (25414 <btrfs_print_key@@Base+0xf0>)
   252c6:	movs	r1, r0
   252c8:	ldr	r2, [sp, #92]	; 0x5c
   252ca:	movs	r1, r0
   252cc:	ldr	r0, [sp, #836]	; 0x344
   252ce:	movs	r1, r0
   252d0:	ldr	r0, [sp, #852]	; 0x354
   252d2:	movs	r1, r0
   252d4:	ldr	r0, [sp, #860]	; 0x35c
   252d6:	movs	r1, r0
   252d8:	ldr	r1, [sp, #596]	; 0x254
   252da:	movs	r1, r0
   252dc:	ldr	r0, [sp, #844]	; 0x34c
   252de:	movs	r1, r0
   252e0:	ldr	r0, [sp, #848]	; 0x350
   252e2:	movs	r1, r0
   252e4:	ldr	r0, [sp, #848]	; 0x350
   252e6:	movs	r1, r0
   252e8:	ldr	r0, [sp, #872]	; 0x368
   252ea:	movs	r1, r0
   252ec:	ldr	r0, [sp, #880]	; 0x370
   252ee:	movs	r1, r0
   252f0:	ldr	r0, [sp, #880]	; 0x370
   252f2:	movs	r1, r0
   252f4:	ldr	r0, [sp, #876]	; 0x36c
   252f6:	movs	r1, r0
   252f8:	ldr	r0, [sp, #880]	; 0x370
   252fa:	movs	r1, r0
   252fc:	ldr	r0, [sp, #888]	; 0x378
   252fe:	movs	r1, r0
   25300:	ldr	r0, [sp, #900]	; 0x384
   25302:	movs	r1, r0
   25304:	ldr	r0, [sp, #932]	; 0x3a4
   25306:	movs	r1, r0
   25308:	ldr	r0, [sp, #948]	; 0x3b4
   2530a:	movs	r1, r0
   2530c:	ldr	r0, [sp, #960]	; 0x3c0
   2530e:	movs	r1, r0
   25310:	ldr	r0, [sp, #964]	; 0x3c4
   25312:	movs	r1, r0
   25314:	ldr	r0, [sp, #976]	; 0x3d0
   25316:	movs	r1, r0
   25318:	ldr	r0, [sp, #984]	; 0x3d8
   2531a:	movs	r1, r0
   2531c:	ldr	r0, [sp, #1016]	; 0x3f8
   2531e:	movs	r1, r0
   25320:	ldrh	r7, [r6, #8]
   25322:	movs	r1, r0

00025324 <btrfs_print_key@@Base>:
   25324:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   25328:	ldr	r1, [pc, #244]	; (25420 <btrfs_print_key@@Base+0xfc>)
   2532a:	ldrb	r6, [r0, #8]
   2532c:	ldr.w	r8, [r0]
   25330:	add	r1, pc
   25332:	ldr.w	r9, [r0, #4]
   25336:	ldr.w	r4, [r0, #9]
   2533a:	ldr.w	r5, [r0, #13]
   2533e:	movs	r0, #1
   25340:	ldr	r7, [pc, #224]	; (25424 <btrfs_print_key@@Base+0x100>)
   25342:	blx	8a30 <__printf_chk@plt+0x4>
   25346:	ldr	r3, [pc, #224]	; (25428 <btrfs_print_key@@Base+0x104>)
   25348:	mov	r2, r8
   2534a:	add	r7, pc
   2534c:	ldr	r7, [r7, r3]
   2534e:	mov	r3, r9
   25350:	str	r6, [sp, #0]
   25352:	ldr	r0, [r7, #0]
   25354:	bl	250b4 <print_objectid@@Base>
   25358:	movs	r0, #32
   2535a:	blx	89cc <putchar@plt+0x4>
   2535e:	str	r6, [sp, #0]
   25360:	ldr	r0, [r7, #0]
   25362:	mov	r2, r8
   25364:	mov	r3, r9
   25366:	bl	25064 <print_key_type@@Base>
   2536a:	cmp	r6, #132	; 0x84
   2536c:	beq.n	253bc <btrfs_print_key@@Base+0x98>
   2536e:	add.w	r3, r6, #14
   25372:	uxtb	r3, r3
   25374:	cmp	r3, #10
   25376:	bhi.n	253fa <btrfs_print_key@@Base+0xd6>
   25378:	subs	r6, #242	; 0xf2
   2537a:	cmp	r6, #10
   2537c:	bhi.n	253fa <btrfs_print_key@@Base+0xd6>
   2537e:	tbb	[pc, r6]
   25382:	subs	r4, #6
   25384:	subs	r4, #6
   25386:	subs	r4, #6
   25388:	subs	r4, #60	; 0x3c
   2538a:	asrs	r4, r7, #12
   2538c:	movs	r3, r2
   2538e:	ldr	r1, [pc, #156]	; (2542c <btrfs_print_key@@Base+0x108>)
   25390:	uxth	r3, r5
   25392:	lsrs	r2, r5, #16
   25394:	strd	r4, r3, [sp]
   25398:	add	r1, pc
   2539a:	movs	r3, #0
   2539c:	movs	r0, #1
   2539e:	blx	8a30 <__printf_chk@plt+0x4>
   253a2:	add	sp, #12
   253a4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   253a8:	ldr	r1, [pc, #132]	; (25430 <btrfs_print_key@@Base+0x10c>)
   253aa:	mov	r2, r4
   253ac:	mov	r3, r5
   253ae:	add	r1, pc
   253b0:	movs	r0, #1
   253b2:	add	sp, #12
   253b4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   253b8:	b.w	8a2c <__printf_chk@plt>
   253bc:	movs	r0, #32
   253be:	blx	89cc <putchar@plt+0x4>
   253c2:	mov.w	r3, #4294967295	; 0xffffffff
   253c6:	cmp	r9, r3
   253c8:	mvn.w	r2, #7
   253cc:	it	eq
   253ce:	cmpeq	r8, r2
   253d0:	bne.n	253ea <btrfs_print_key@@Base+0xc6>
   253d2:	str	r6, [sp, #0]
   253d4:	mov	r2, r4
   253d6:	ldr	r0, [r7, #0]
   253d8:	mov	r3, r5
   253da:	bl	250b4 <print_objectid@@Base>
   253de:	movs	r0, #41	; 0x29
   253e0:	add	sp, #12
   253e2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   253e6:	b.w	89c8 <putchar@plt>
   253ea:	ldr	r1, [pc, #72]	; (25434 <btrfs_print_key@@Base+0x110>)
   253ec:	mov	r2, r4
   253ee:	mov	r3, r5
   253f0:	movs	r0, #1
   253f2:	add	r1, pc
   253f4:	blx	8a30 <__printf_chk@plt+0x4>
   253f8:	b.n	253de <btrfs_print_key@@Base+0xba>
   253fa:	adds	r3, r5, #1
   253fc:	it	eq
   253fe:	cmpeq.w	r4, #4294967295	; 0xffffffff
   25402:	bne.n	25414 <btrfs_print_key@@Base+0xf0>
   25404:	ldr	r1, [pc, #48]	; (25438 <btrfs_print_key@@Base+0x114>)
   25406:	movs	r0, #1
   25408:	add	r1, pc
   2540a:	add	sp, #12
   2540c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   25410:	b.w	8a2c <__printf_chk@plt>
   25414:	ldr	r1, [pc, #36]	; (2543c <btrfs_print_key@@Base+0x118>)
   25416:	mov	r2, r4
   25418:	mov	r3, r5
   2541a:	add	r1, pc
   2541c:	b.n	253b0 <btrfs_print_key@@Base+0x8c>
   2541e:	nop
   25420:	ldr	r0, [sp, #568]	; 0x238
   25422:	movs	r1, r0
   25424:			; <UNDEFINED> instruction: 0xfa360003
   25428:	lsls	r4, r3, #9
   2542a:	movs	r0, r0
   2542c:	ldr	r0, [sp, #176]	; 0xb0
   2542e:	movs	r1, r0
   25430:	ldr	r0, [sp, #136]	; 0x88
   25432:	movs	r1, r0
   25434:	add	r5, sp, #924	; 0x39c
   25436:	movs	r1, r0
   25438:	str	r7, [sp, #848]	; 0x350
   2543a:	movs	r1, r0
   2543c:	str	r7, [sp, #796]	; 0x31c
   2543e:	movs	r1, r0

00025440 <print_extent_item@@Base>:
   25440:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25444:	sub	sp, #92	; 0x5c
   25446:	ldr	r3, [pc, #632]	; (256c0 <print_extent_item@@Base+0x280>)
   25448:	add.w	r5, r0, #96	; 0x60
   2544c:	str	r2, [sp, #28]
   2544e:	movs	r6, #0
   25450:	ldr	r2, [pc, #624]	; (256c4 <print_extent_item@@Base+0x284>)
   25452:	mov	r8, r0
   25454:	add	r0, sp, #56	; 0x38
   25456:	ldr.w	sl, [pc, #624]	; 256c8 <print_extent_item@@Base+0x288>
   2545a:	add	r2, pc
   2545c:	add	sl, pc
   2545e:	ldr	r3, [r2, r3]
   25460:	movs	r2, #28
   25462:	ldr	r3, [r3, #0]
   25464:	str	r3, [sp, #84]	; 0x54
   25466:	mov.w	r3, #0
   2546a:	movs	r3, #25
   2546c:	muls	r1, r3
   2546e:	str	r6, [sp, #52]	; 0x34
   25470:	add.w	r7, r1, #101	; 0x65
   25474:	mov	r1, r6
   25476:	adds	r4, r5, r7
   25478:	ldr.w	r3, [r4, #21]
   2547c:	str	r3, [sp, #24]
   2547e:	blx	89bc <memset@plt+0x4>
   25482:	ldr	r3, [sp, #24]
   25484:	cmp	r3, #23
   25486:	bls.w	255b8 <print_extent_item@@Base+0x178>
   2548a:	ldr.w	r4, [r4, #17]
   2548e:	mov	r3, r6
   25490:	adds	r4, #101	; 0x65
   25492:	add.w	r9, r5, r4
   25496:	ldr.w	fp, [r9, #16]
   2549a:	and.w	r2, fp, #1
   2549e:	orrs	r3, r2
   254a0:	add	r3, sp, #52	; 0x34
   254a2:	beq.w	255cc <print_extent_item@@Base+0x18c>
   254a6:	ldr	r1, [pc, #548]	; (256cc <print_extent_item@@Base+0x28c>)
   254a8:	mov	r0, r3
   254aa:	add	r1, pc
   254ac:	blx	87f0 <strcpy@plt>
   254b0:	mov	r3, r0
   254b2:	and.w	r2, fp, #2
   254b6:	str	r2, [sp, #16]
   254b8:	movs	r2, #0
   254ba:	str	r2, [sp, #20]
   254bc:	ldrd	r1, r2, [sp, #16]
   254c0:	orrs	r2, r1
   254c2:	beq.n	254de <print_extent_item@@Base+0x9e>
   254c4:	cbnz	r6, 254d2 <print_extent_item@@Base+0x92>
   254c6:	ldr	r1, [pc, #520]	; (256d0 <print_extent_item@@Base+0x290>)
   254c8:	movs	r2, #32
   254ca:	mov	r0, r3
   254cc:	add	r1, pc
   254ce:	blx	8988 <__strcat_chk@plt>
   254d2:	ldr	r1, [pc, #512]	; (256d4 <print_extent_item@@Base+0x294>)
   254d4:	add	r0, sp, #52	; 0x34
   254d6:	movs	r2, #32
   254d8:	add	r1, pc
   254da:	blx	8988 <__strcat_chk@plt>
   254de:	and.w	r2, fp, #256	; 0x100
   254e2:	movs	r3, #0
   254e4:	orrs	r3, r2
   254e6:	beq.n	25500 <print_extent_item@@Base+0xc0>
   254e8:	add	r3, sp, #52	; 0x34
   254ea:	ldr	r1, [pc, #492]	; (256d8 <print_extent_item@@Base+0x298>)
   254ec:	movs	r2, #32
   254ee:	add	r1, pc
   254f0:	mov	r0, r3
   254f2:	blx	8988 <__strcat_chk@plt>
   254f6:	ldr	r1, [pc, #484]	; (256dc <print_extent_item@@Base+0x29c>)
   254f8:	movs	r2, #32
   254fa:	add	r1, pc
   254fc:	blx	8988 <__strcat_chk@plt>
   25500:	add	r3, sp, #52	; 0x34
   25502:	str	r3, [sp, #8]
   25504:	ldr.w	r2, [r9, #8]
   25508:	movs	r0, #1
   2550a:	ldr.w	r3, [r9, #12]
   2550e:	add.w	r6, r4, #24
   25512:	ldr	r1, [pc, #460]	; (256e0 <print_extent_item@@Base+0x2a0>)
   25514:	strd	r2, r3, [sp]
   25518:	add	r1, pc
   2551a:	ldr.w	r2, [r9]
   2551e:	ldr.w	r3, [r9, #4]
   25522:	blx	8a30 <__printf_chk@plt+0x4>
   25526:	ldrd	r2, r3, [sp, #16]
   2552a:	orrs	r3, r2
   2552c:	ldr	r3, [sp, #28]
   2552e:	beq.n	255d0 <print_extent_item@@Base+0x190>
   25530:	cmp	r3, #0
   25532:	bne.n	255d4 <print_extent_item@@Base+0x194>
   25534:	add	r7, sp, #32
   25536:	mov	r2, r6
   25538:	movs	r3, #17
   2553a:	mov	r0, r8
   2553c:	mov	r1, r7
   2553e:	add	r6, r5
   25540:	bl	17a1a <read_extent_buffer@@Base>
   25544:	ldr	r1, [pc, #412]	; (256e4 <print_extent_item@@Base+0x2a4>)
   25546:	movs	r0, #1
   25548:	add	r1, pc
   2554a:	blx	8a30 <__printf_chk@plt+0x4>
   2554e:	mov	r0, r7
   25550:	bl	25324 <btrfs_print_key@@Base>
   25554:	ldr	r1, [pc, #400]	; (256e8 <print_extent_item@@Base+0x2a8>)
   25556:	ldrb	r2, [r6, #17]
   25558:	movs	r0, #1
   2555a:	add	r1, pc
   2555c:	add.w	r6, r4, #42	; 0x2a
   25560:	blx	8a30 <__printf_chk@plt+0x4>
   25564:	ldr	r3, [sp, #24]
   25566:	ldr.w	r8, [pc, #388]	; 256ec <print_extent_item@@Base+0x2ac>
   2556a:	ldr.w	r9, [pc, #388]	; 256f0 <print_extent_item@@Base+0x2b0>
   2556e:	add	r4, r3
   25570:	ldr.w	fp, [pc, #384]	; 256f4 <print_extent_item@@Base+0x2b4>
   25574:	add	r8, pc
   25576:	add	r9, pc
   25578:	add	fp, pc
   2557a:	cmp	r6, r4
   2557c:	bcc.n	255f0 <print_extent_item@@Base+0x1b0>
   2557e:	beq.n	255b8 <print_extent_item@@Base+0x178>
   25580:	ldr	r3, [pc, #372]	; (256f8 <print_extent_item@@Base+0x2b8>)
   25582:	mov.w	r1, #1
   25586:	ldr	r2, [pc, #372]	; (256fc <print_extent_item@@Base+0x2bc>)
   25588:	ldr.w	r0, [sl, r3]
   2558c:	ite	hi
   2558e:	movhi	r3, #1
   25590:	movls	r3, #0
   25592:	str	r3, [sp, #12]
   25594:	ldr	r3, [pc, #360]	; (25700 <print_extent_item@@Base+0x2c0>)
   25596:	add	r2, pc
   25598:	add	r3, pc
   2559a:	str	r3, [sp, #8]
   2559c:	ldr	r3, [pc, #356]	; (25704 <print_extent_item@@Base+0x2c4>)
   2559e:	add	r3, pc
   255a0:	adds	r3, #33	; 0x21
   255a2:	str	r3, [sp, #4]
   255a4:	movw	r3, #497	; 0x1f1
   255a8:	str	r3, [sp, #0]
   255aa:	ldr	r3, [pc, #348]	; (25708 <print_extent_item@@Base+0x2c8>)
   255ac:	ldr	r0, [r0, #0]
   255ae:	add	r3, pc
   255b0:	blx	8a64 <__fprintf_chk@plt+0x4>
   255b4:	bl	24a98 <btrfs_destroy_delayed_refs@@Base+0xb4>
   255b8:	ldr	r2, [pc, #336]	; (2570c <print_extent_item@@Base+0x2cc>)
   255ba:	ldr	r3, [pc, #260]	; (256c0 <print_extent_item@@Base+0x280>)
   255bc:	add	r2, pc
   255be:	ldr	r3, [r2, r3]
   255c0:	ldr	r2, [r3, #0]
   255c2:	ldr	r3, [sp, #84]	; 0x54
   255c4:	eors	r2, r3
   255c6:	beq.n	256b8 <print_extent_item@@Base+0x278>
   255c8:	blx	8708 <__stack_chk_fail@plt>
   255cc:	movs	r6, #1
   255ce:	b.n	254b2 <print_extent_item@@Base+0x72>
   255d0:	cmp	r3, #0
   255d2:	beq.n	25564 <print_extent_item@@Base+0x124>
   255d4:	add	r1, sp, #32
   255d6:	mov	r2, r7
   255d8:	mov	r0, r8
   255da:	movs	r3, #17
   255dc:	bl	17a1a <read_extent_buffer@@Base>
   255e0:	ldr	r1, [pc, #300]	; (25710 <print_extent_item@@Base+0x2d0>)
   255e2:	ldr.w	r2, [sp, #41]	; 0x29
   255e6:	movs	r0, #1
   255e8:	add	r1, pc
   255ea:	blx	8a30 <__printf_chk@plt+0x4>
   255ee:	b.n	25564 <print_extent_item@@Base+0x124>
   255f0:	adds	r0, r5, r6
   255f2:	ldrb	r1, [r5, r6]
   255f4:	mov	r3, r0
   255f6:	subs	r1, #176	; 0xb0
   255f8:	ldr.w	r2, [r3, #1]!
   255fc:	ldr	r3, [r3, #4]
   255fe:	cmp	r1, #8
   25600:	bhi.n	255b8 <print_extent_item@@Base+0x178>
   25602:	add	r7, pc, #8	; (adr r7, 2560c <print_extent_item@@Base+0x1cc>)
   25604:	ldr.w	r1, [r7, r1, lsl #2]
   25608:	add	r7, r1
   2560a:	bx	r7
   2560c:	movs	r5, r4
   2560e:	movs	r0, r0
   25610:			; <UNDEFINED> instruction: 0xffadffff
   25614:	lsls	r7, r3, #1
   25616:	movs	r0, r0
   25618:			; <UNDEFINED> instruction: 0xffadffff
   2561c:			; <UNDEFINED> instruction: 0xffadffff
   25620:			; <UNDEFINED> instruction: 0xffadffff
   25624:	lsls	r3, r2, #1
   25626:	movs	r0, r0
   25628:			; <UNDEFINED> instruction: 0xffadffff
   2562c:	lsls	r3, r3, #2
   2562e:	movs	r0, r0
   25630:	ldr	r1, [pc, #224]	; (25714 <print_extent_item@@Base+0x2d4>)
   25632:	movs	r0, #1
   25634:	str	r3, [sp, #24]
   25636:	add	r1, pc
   25638:	str	r2, [sp, #16]
   2563a:	blx	8a30 <__printf_chk@plt+0x4>
   2563e:	ldr	r1, [pc, #216]	; (25718 <print_extent_item@@Base+0x2d8>)
   25640:	movs	r0, #0
   25642:	ldr	r2, [sp, #16]
   25644:	ldr	r3, [sp, #24]
   25646:	ldr.w	r1, [sl, r1]
   2564a:	str	r0, [sp, #0]
   2564c:	ldr	r0, [r1, #0]
   2564e:	bl	250b4 <print_objectid@@Base>
   25652:	movs	r0, #10
   25654:	blx	89cc <putchar@plt+0x4>
   25658:	movs	r3, #9
   2565a:	add	r6, r3
   2565c:	b.n	2557a <print_extent_item@@Base+0x13a>
   2565e:	ldr	r1, [pc, #188]	; (2571c <print_extent_item@@Base+0x2dc>)
   25660:	movs	r0, #1
   25662:	add	r1, pc
   25664:	blx	8a30 <__printf_chk@plt+0x4>
   25668:	b.n	25658 <print_extent_item@@Base+0x218>
   2566a:	mov	r1, r9
   2566c:	movs	r0, #1
   2566e:	blx	8a30 <__printf_chk@plt+0x4>
   25672:	ldr	r2, [pc, #164]	; (25718 <print_extent_item@@Base+0x2d8>)
   25674:	adds	r3, r6, #1
   25676:	adds	r7, r5, r3
   25678:	ldr.w	r1, [sl, r2]
   2567c:	movs	r2, #0
   2567e:	str	r2, [sp, #0]
   25680:	ldr	r2, [r5, r3]
   25682:	ldr	r0, [r1, #0]
   25684:	ldr	r3, [r7, #4]
   25686:	bl	250b4 <print_objectid@@Base>
   2568a:	ldr	r3, [r7, #24]
   2568c:	mov	r1, fp
   2568e:	movs	r0, #1
   25690:	str	r3, [sp, #8]
   25692:	ldr	r2, [r7, #16]
   25694:	ldr	r3, [r7, #20]
   25696:	strd	r2, r3, [sp]
   2569a:	ldr	r3, [r7, #12]
   2569c:	ldr	r2, [r7, #8]
   2569e:	blx	8a30 <__printf_chk@plt+0x4>
   256a2:	movs	r3, #29
   256a4:	b.n	2565a <print_extent_item@@Base+0x21a>
   256a6:	ldr.w	r1, [r0, #9]
   256aa:	movs	r0, #1
   256ac:	str	r1, [sp, #0]
   256ae:	mov	r1, r8
   256b0:	blx	8a30 <__printf_chk@plt+0x4>
   256b4:	movs	r3, #13
   256b6:	b.n	2565a <print_extent_item@@Base+0x21a>
   256b8:	add	sp, #92	; 0x5c
   256ba:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   256be:	nop
   256c0:	lsls	r0, r5, #8
   256c2:	movs	r0, r0
   256c4:	vld4.8	{d0-d3}, [r6], r3
   256c8:	vld4.8	{d0-d3}, [r4], r3
   256cc:	add	r2, pc, #396	; (adr r2, 2585c <btrfs_print_leaf@@Base+0x13c>)
   256ce:	movs	r1, r0
   256d0:	ldr	r7, [r1, #8]
   256d2:	movs	r1, r0
   256d4:	str	r7, [sp, #64]	; 0x40
   256d6:	movs	r1, r0
   256d8:	ldr	r5, [r5, #4]
   256da:	movs	r1, r0
   256dc:	str	r6, [sp, #996]	; 0x3e4
   256de:	movs	r1, r0
   256e0:	str	r6, [sp, #928]	; 0x3a0
   256e2:	movs	r1, r0
   256e4:	str	r6, [sp, #860]	; 0x35c
   256e6:	movs	r1, r0
   256e8:	str	r6, [sp, #920]	; 0x398
   256ea:	movs	r1, r0
   256ec:	str	r7, [sp, #348]	; 0x15c
   256ee:	movs	r1, r0
   256f0:	str	r7, [sp, #80]	; 0x50
   256f2:	movs	r1, r0
   256f4:	str	r7, [sp, #184]	; 0xb8
   256f6:	movs	r1, r0
   256f8:	lsls	r0, r7, #8
   256fa:	movs	r0, r0
   256fc:	ldr	r0, [pc, #856]	; (25a58 <btrfs_print_leaf@@Base+0x338>)
   256fe:	movs	r1, r0
   25700:	strb	r7, [r2, r7]
   25702:	movs	r1, r0
   25704:	add	r5, pc, #112	; (adr r5, 25778 <btrfs_print_leaf@@Base+0x58>)
   25706:	movs	r1, r0
   25708:	str	r7, [sp, #292]	; 0x124
   2570a:	movs	r1, r0
   2570c:			; <UNDEFINED> instruction: 0xf7c40003
   25710:	str	r6, [sp, #276]	; 0x114
   25712:	movs	r1, r0
   25714:	str	r6, [sp, #84]	; 0x54
   25716:	movs	r1, r0
   25718:	lsls	r4, r3, #9
   2571a:	movs	r0, r0
   2571c:	str	r6, [sp, #16]
   2571e:	movs	r1, r0

00025720 <btrfs_print_leaf@@Base>:
   25720:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25724:	mov.w	r8, #0
   25728:	vpush	{d8-d10}
   2572c:	mov	r9, r0
   2572e:	ldr.w	r2, [pc, #3380]	; 26464 <btrfs_print_leaf@@Base+0xd44>
   25732:	ldr.w	r3, [pc, #3380]	; 26468 <btrfs_print_leaf@@Base+0xd48>
   25736:	add	r2, pc
   25738:	ldr.w	r6, [pc, #3376]	; 2646c <btrfs_print_leaf@@Base+0xd4c>
   2573c:	subw	sp, sp, #1204	; 0x4b4
   25740:	ldr	r3, [r2, r3]
   25742:	add	r6, pc
   25744:	ldr	r3, [r3, #0]
   25746:	str.w	r3, [sp, #1196]	; 0x4ac
   2574a:	mov.w	r3, #0
   2574e:	ldr	r3, [r0, #92]	; 0x5c
   25750:	str	r3, [sp, #104]	; 0x68
   25752:	ldr.w	r3, [r3, #384]	; 0x180
   25756:	subs	r3, #101	; 0x65
   25758:	str	r3, [sp, #108]	; 0x6c
   2575a:	ldr.w	r5, [r0, #152]	; 0x98
   2575e:	mov	r3, r8
   25760:	ldr.w	r4, [r0, #156]	; 0x9c
   25764:	and.w	r2, r5, #1
   25768:	orrs	r3, r2
   2576a:	bic.w	r7, r4, #4278190080	; 0xff000000
   2576e:	add	r3, sp, #812	; 0x32c
   25770:	mov.w	r4, r4, lsr #24
   25774:	beq.w	258c8 <btrfs_print_leaf@@Base+0x1a8>
   25778:	ldr.w	r1, [pc, #3316]	; 26470 <btrfs_print_leaf@@Base+0xd50>
   2577c:	mov	r0, r3
   2577e:	add	r1, pc
   25780:	blx	87f0 <strcpy@plt>
   25784:	mov	r2, r8
   25786:	mov	r3, r0
   25788:	and.w	r0, r5, #2
   2578c:	movs	r1, #0
   2578e:	orrs	r1, r0
   25790:	beq.n	257b2 <btrfs_print_leaf@@Base+0x92>
   25792:	cbnz	r2, 257a4 <btrfs_print_leaf@@Base+0x84>
   25794:	ldr.w	r1, [pc, #3292]	; 26474 <btrfs_print_leaf@@Base+0xd54>
   25798:	mov	r0, r3
   2579a:	movs	r2, #128	; 0x80
   2579c:	add	r1, pc
   2579e:	blx	8988 <__strcat_chk@plt>
   257a2:	mov	r3, r0
   257a4:	ldr.w	r1, [pc, #3280]	; 26478 <btrfs_print_leaf@@Base+0xd58>
   257a8:	movs	r2, #128	; 0x80
   257aa:	mov	r0, r3
   257ac:	add	r1, pc
   257ae:	blx	8988 <__strcat_chk@plt>
   257b2:	ldr.w	r3, [r9, #192]	; 0xc0
   257b6:	mov	r0, r9
   257b8:	ldr.w	r2, [r9, #144]	; 0x90
   257bc:	add.w	sl, r9, #197	; 0xc5
   257c0:	str	r3, [sp, #240]	; 0xf0
   257c2:	ldr.w	r3, [r9, #148]	; 0x94
   257c6:	str	r2, [sp, #84]	; 0x54
   257c8:	str	r3, [sp, #80]	; 0x50
   257ca:	bl	196e8 <btrfs_leaf_free_space@@Base>
   257ce:	ldr.w	ip, [r9, #176]	; 0xb0
   257d2:	ldr.w	r1, [r9, #180]	; 0xb4
   257d6:	ldr	r3, [sp, #240]	; 0xf0
   257d8:	strd	ip, r1, [sp, #8]
   257dc:	ldr.w	r1, [pc, #3228]	; 2647c <btrfs_print_leaf@@Base+0xd5c>
   257e0:	str	r3, [sp, #0]
   257e2:	add	r1, pc
   257e4:	ldrd	r3, r2, [sp, #80]	; 0x50
   257e8:	str	r0, [sp, #4]
   257ea:	movs	r0, #1
   257ec:	blx	8a30 <__printf_chk@plt+0x4>
   257f0:	ldr.w	r3, [pc, #3212]	; 26480 <btrfs_print_leaf@@Base+0xd60>
   257f4:	ldr.w	r2, [r9, #184]	; 0xb8
   257f8:	ldr	r3, [r6, r3]
   257fa:	movs	r6, #0
   257fc:	str	r6, [sp, #0]
   257fe:	str	r3, [sp, #100]	; 0x64
   25800:	ldr	r1, [sp, #100]	; 0x64
   25802:	ldr.w	r3, [r9, #188]	; 0xbc
   25806:	ldr	r0, [r1, #0]
   25808:	bl	250b4 <print_objectid@@Base>
   2580c:	movs	r0, #10
   2580e:	blx	89cc <putchar@plt+0x4>
   25812:	ldr.w	r1, [pc, #3184]	; 26484 <btrfs_print_leaf@@Base+0xd64>
   25816:	ldr.w	r2, [r9, #144]	; 0x90
   2581a:	add	r3, sp, #812	; 0x32c
   2581c:	add	r1, pc
   2581e:	str	r3, [sp, #8]
   25820:	movs	r0, #1
   25822:	ldr.w	r3, [r9, #148]	; 0x94
   25826:	str	r4, [sp, #12]
   25828:	strd	r5, r7, [sp]
   2582c:	blx	8a30 <__printf_chk@plt+0x4>
   25830:	mov	r0, r9
   25832:	bl	24d28 <btrfs_destroy_delayed_refs@@Base+0x344>
   25836:	ldr	r3, [sp, #100]	; 0x64
   25838:	ldr	r0, [r3, #0]
   2583a:	blx	85f4 <fflush@plt>
   2583e:	ldr.w	r3, [pc, #3144]	; 26488 <btrfs_print_leaf@@Base+0xd68>
   25842:	str	r6, [sp, #80]	; 0x50
   25844:	add	r3, pc
   25846:	vmov	s20, r3
   2584a:	ldr.w	r3, [pc, #3136]	; 2648c <btrfs_print_leaf@@Base+0xd6c>
   2584e:	add	r3, pc
   25850:	vmov	s21, r3
   25854:	ldr	r3, [sp, #80]	; 0x50
   25856:	ldr	r2, [sp, #240]	; 0xf0
   25858:	cmp	r3, r2
   2585a:	beq.n	258ac <btrfs_print_leaf@@Base+0x18c>
   2585c:	ldr	r3, [sp, #80]	; 0x50
   2585e:	movs	r2, #25
   25860:	ldr.w	r8, [sl, #17]
   25864:	add.w	fp, r9, #96	; 0x60
   25868:	muls	r2, r3
   2586a:	ldr.w	r3, [sl, #21]
   2586e:	str	r3, [sp, #84]	; 0x54
   25870:	adds	r2, #101	; 0x65
   25872:	ldr	r3, [sp, #108]	; 0x6c
   25874:	cmp	r3, r8
   25876:	bcc.n	25882 <btrfs_print_leaf@@Base+0x162>
   25878:	ldr	r3, [sp, #84]	; 0x54
   2587a:	ldr	r1, [sp, #108]	; 0x6c
   2587c:	add	r3, r8
   2587e:	cmp	r3, r1
   25880:	bls.n	258cc <btrfs_print_leaf@@Base+0x1ac>
   25882:	ldr	r3, [sp, #108]	; 0x6c
   25884:	ldr.w	r0, [pc, #3080]	; 26490 <btrfs_print_leaf@@Base+0xd70>
   25888:	ldr.w	r2, [r9, #144]	; 0x90
   2588c:	str	r3, [sp, #12]
   2588e:	add	r0, pc
   25890:	ldr	r3, [sp, #84]	; 0x54
   25892:	strd	r8, r3, [sp, #4]
   25896:	ldr	r3, [sp, #80]	; 0x50
   25898:	str	r3, [sp, #0]
   2589a:	ldr.w	r3, [r9, #148]	; 0x94
   2589e:	bl	17b7c <__btrfs_error@@Base>
   258a2:	ldr.w	r0, [pc, #3056]	; 26494 <btrfs_print_leaf@@Base+0xd74>
   258a6:	add	r0, pc
   258a8:	bl	17b7c <__btrfs_error@@Base>
   258ac:	ldr.w	r2, [pc, #3048]	; 26498 <btrfs_print_leaf@@Base+0xd78>
   258b0:	ldr.w	r3, [pc, #2996]	; 26468 <btrfs_print_leaf@@Base+0xd48>
   258b4:	add	r2, pc
   258b6:	ldr	r3, [r2, r3]
   258b8:	ldr	r2, [r3, #0]
   258ba:	ldr.w	r3, [sp, #1196]	; 0x4ac
   258be:	eors	r2, r3
   258c0:	beq.w	26a54 <btrfs_print_leaf@@Base+0x1334>
   258c4:	blx	8708 <__stack_chk_fail@plt>
   258c8:	movs	r2, #1
   258ca:	b.n	25788 <btrfs_print_leaf@@Base+0x68>
   258cc:	add	r1, sp, #252	; 0xfc
   258ce:	movs	r3, #17
   258d0:	mov	r0, r9
   258d2:	str	r1, [sp, #96]	; 0x60
   258d4:	bl	17a1a <read_extent_buffer@@Base>
   258d8:	ldr	r3, [sp, #96]	; 0x60
   258da:	vmov	r1, s20
   258de:	movs	r0, #1
   258e0:	ldr	r2, [sp, #80]	; 0x50
   258e2:	add.w	r7, r8, #101	; 0x65
   258e6:	ldrb	r6, [r3, #8]
   258e8:	ldrd	r4, r5, [r3]
   258ec:	ldr.w	r3, [r3, #9]
   258f0:	str	r3, [sp, #88]	; 0x58
   258f2:	ldr	r3, [sp, #96]	; 0x60
   258f4:	ldr.w	r3, [r3, #13]
   258f8:	str	r3, [sp, #92]	; 0x5c
   258fa:	blx	8a30 <__printf_chk@plt+0x4>
   258fe:	ldr	r0, [sp, #96]	; 0x60
   25900:	bl	25324 <btrfs_print_key@@Base>
   25904:	ldr.w	r1, [pc, #2964]	; 2649c <btrfs_print_leaf@@Base+0xd7c>
   25908:	ldr.w	r3, [sl, #21]
   2590c:	movs	r0, #1
   2590e:	ldr.w	r2, [sl, #17]
   25912:	add	r1, pc
   25914:	blx	8a30 <__printf_chk@plt+0x4>
   25918:	cmp	r6, #0
   2591a:	bne.n	2599c <btrfs_print_leaf@@Base+0x27c>
   2591c:	mov.w	r3, #4294967295	; 0xffffffff
   25920:	cmp	r5, r3
   25922:	mvn.w	r2, #10
   25926:	it	eq
   25928:	cmpeq	r4, r2
   2592a:	bne.n	25988 <btrfs_print_leaf@@Base+0x268>
   2592c:	ldr.w	r3, [sl, #17]
   25930:	add	r4, sp, #272	; 0x110
   25932:	mov	r0, r9
   25934:	add.w	r5, r3, #101	; 0x65
   25938:	mov	r1, r4
   2593a:	movs	r3, #17
   2593c:	mov	r2, r5
   2593e:	bl	17a1a <read_extent_buffer@@Base>
   25942:	ldr.w	r1, [pc, #2908]	; 264a0 <btrfs_print_leaf@@Base+0xd80>
   25946:	movs	r0, #1
   25948:	add	r1, pc
   2594a:	blx	8a30 <__printf_chk@plt+0x4>
   2594e:	mov	r0, r4
   25950:	bl	25324 <btrfs_print_key@@Base>
   25954:	movs	r0, #10
   25956:	blx	89cc <putchar@plt+0x4>
   2595a:	add.w	r3, fp, r5
   2595e:	mov	r0, r3
   25960:	mov	r1, r3
   25962:	ldr.w	r4, [r0, #33]!
   25966:	ldr.w	r2, [r1, #17]!
   2596a:	ldr	r0, [r0, #4]
   2596c:	strd	r4, r0, [sp, #8]
   25970:	ldr.w	r0, [r3, #25]!
   25974:	ldr	r3, [r3, #4]
   25976:	strd	r0, r3, [sp]
   2597a:	movs	r0, #1
   2597c:	ldr	r3, [r1, #4]
   2597e:	ldr.w	r1, [pc, #2852]	; 264a4 <btrfs_print_leaf@@Base+0xd84>
   25982:	add	r1, pc
   25984:	blx	8a30 <__printf_chk@plt+0x4>
   25988:	ldr	r3, [sp, #100]	; 0x64
   2598a:	add.w	sl, sl, #25
   2598e:	ldr	r0, [r3, #0]
   25990:	blx	85f4 <fflush@plt>
   25994:	ldr	r3, [sp, #80]	; 0x50
   25996:	adds	r3, #1
   25998:	str	r3, [sp, #80]	; 0x50
   2599a:	b.n	25854 <btrfs_print_leaf@@Base+0x134>
   2599c:	cmp	r6, #184	; 0xb8
   2599e:	bhi.w	25b3e <btrfs_print_leaf@@Base+0x41e>
   259a2:	cmp	r6, #167	; 0xa7
   259a4:	bhi.n	25a4c <btrfs_print_leaf@@Base+0x32c>
   259a6:	cmp	r6, #96	; 0x60
   259a8:	beq.w	25aca <btrfs_print_leaf@@Base+0x3aa>
   259ac:	bhi.w	25aec <btrfs_print_leaf@@Base+0x3cc>
   259b0:	cmp	r6, #13
   259b2:	beq.w	26036 <btrfs_print_leaf@@Base+0x916>
   259b6:	bhi.n	25aa0 <btrfs_print_leaf@@Base+0x380>
   259b8:	cmp	r6, #1
   259ba:	beq.w	25c36 <btrfs_print_leaf@@Base+0x516>
   259be:	cmp	r6, #12
   259c0:	bne.n	25988 <btrfs_print_leaf@@Base+0x268>
   259c2:	ldr.w	r3, [pc, #2788]	; 264a8 <btrfs_print_leaf@@Base+0xd88>
   259c6:	add	r6, sp, #940	; 0x3ac
   259c8:	movs	r5, #0
   259ca:	add	r3, pc
   259cc:	vmov	s17, r3
   259d0:	b.n	25fd2 <btrfs_print_leaf@@Base+0x8b2>
   259d2:	subs	r6, #228	; 0xe4
   259d4:	cmp	r6, #25
   259d6:	bhi.n	25988 <btrfs_print_leaf@@Base+0x268>
   259d8:	add	r3, pc, #8	; (adr r3, 259e4 <btrfs_print_leaf@@Base+0x2c4>)
   259da:	ldr.w	r2, [r3, r6, lsl #2]
   259de:	add	r3, r2
   259e0:	bx	r3
   259e2:	nop
   259e4:	lsrs	r1, r7, #19
   259e6:	movs	r0, r0
   259e8:			; <UNDEFINED> instruction: 0xffa5ffff
   259ec:			; <UNDEFINED> instruction: 0xffa5ffff
   259f0:			; <UNDEFINED> instruction: 0xffa5ffff
   259f4:			; <UNDEFINED> instruction: 0xffa5ffff
   259f8:			; <UNDEFINED> instruction: 0xffa5ffff
   259fc:			; <UNDEFINED> instruction: 0xffa5ffff
   25a00:			; <UNDEFINED> instruction: 0xffa5ffff
   25a04:			; <UNDEFINED> instruction: 0xffa5ffff
   25a08:			; <UNDEFINED> instruction: 0xffa5ffff
   25a0c:			; <UNDEFINED> instruction: 0xffa5ffff
   25a10:			; <UNDEFINED> instruction: 0xffa5ffff
   25a14:	lsrs	r7, r2, #21
   25a16:	movs	r0, r0
   25a18:			; <UNDEFINED> instruction: 0xffa5ffff
   25a1c:	lsrs	r1, r7, #23
   25a1e:	movs	r0, r0
   25a20:			; <UNDEFINED> instruction: 0xffa5ffff
   25a24:	lsrs	r7, r6, #24
   25a26:	movs	r0, r0
   25a28:			; <UNDEFINED> instruction: 0xffa5ffff
   25a2c:			; <UNDEFINED> instruction: 0xffa5ffff
   25a30:			; <UNDEFINED> instruction: 0xffa5ffff
   25a34:	lsrs	r3, r5, #30
   25a36:	movs	r0, r0
   25a38:	lsrs	r7, r7, #26
   25a3a:	movs	r0, r0
   25a3c:			; <UNDEFINED> instruction: 0xffa5ffff
   25a40:	lsrs	r5, r5, #25
   25a42:	movs	r0, r0
   25a44:	lsrs	r5, r5, #25
   25a46:	movs	r0, r0
   25a48:	lsrs	r7, r5, #26
   25a4a:	movs	r0, r0
   25a4c:	subs	r6, #168	; 0xa8
   25a4e:	cmp	r6, #16
   25a50:	bhi.n	25988 <btrfs_print_leaf@@Base+0x268>
   25a52:	add	r3, pc, #8	; (adr r3, 25a5c <btrfs_print_leaf@@Base+0x33c>)
   25a54:	ldr.w	r2, [r3, r6, lsl #2]
   25a58:	add	r3, r2
   25a5a:	bx	r3
   25a5c:	lsrs	r1, r4, #3
   25a5e:	movs	r0, r0
   25a60:	lsrs	r7, r5, #3
   25a62:	movs	r0, r0
   25a64:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   25a68:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   25a6c:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   25a70:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   25a74:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   25a78:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   25a7c:	lsrs	r3, r6, #3
   25a7e:	movs	r0, r0
   25a80:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   25a84:	lsrs	r3, r0, #4
   25a86:	movs	r0, r0
   25a88:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   25a8c:	lsrs	r7, r2, #5
   25a8e:	movs	r0, r0
   25a90:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   25a94:	lsrs	r3, r7, #3
   25a96:	movs	r0, r0
   25a98:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   25a9c:	lsrs	r7, r0, #5
   25a9e:	movs	r0, r0
   25aa0:	cmp	r6, #60	; 0x3c
   25aa2:	beq.w	26138 <btrfs_print_leaf@@Base+0xa18>
   25aa6:	bhi.n	25abe <btrfs_print_leaf@@Base+0x39e>
   25aa8:	cmp	r6, #24
   25aaa:	beq.n	25aca <btrfs_print_leaf@@Base+0x3aa>
   25aac:	cmp	r6, #48	; 0x30
   25aae:	bne.w	25988 <btrfs_print_leaf@@Base+0x268>
   25ab2:	ldr.w	r0, [pc, #2552]	; 264ac <btrfs_print_leaf@@Base+0xd8c>
   25ab6:	add	r0, pc
   25ab8:	blx	8854 <puts@plt+0x4>
   25abc:	b.n	25988 <btrfs_print_leaf@@Base+0x268>
   25abe:	cmp	r6, #72	; 0x48
   25ac0:	beq.w	26138 <btrfs_print_leaf@@Base+0xa18>
   25ac4:	cmp	r6, #84	; 0x54
   25ac6:	bne.w	25988 <btrfs_print_leaf@@Base+0x268>
   25aca:	ldr.w	r3, [pc, #2532]	; 264b0 <btrfs_print_leaf@@Base+0xd90>
   25ace:	movs	r6, #0
   25ad0:	add	r3, pc
   25ad2:	vmov	s17, r3
   25ad6:	ldr.w	r3, [pc, #2524]	; 264b4 <btrfs_print_leaf@@Base+0xd94>
   25ada:	add	r3, pc
   25adc:	vmov	s18, r3
   25ae0:	ldr.w	r3, [pc, #2516]	; 264b8 <btrfs_print_leaf@@Base+0xd98>
   25ae4:	add	r3, pc
   25ae6:	vmov	s19, r3
   25aea:	b.n	26128 <btrfs_print_leaf@@Base+0xa08>
   25aec:	cmp	r6, #132	; 0x84
   25aee:	beq.w	26152 <btrfs_print_leaf@@Base+0xa32>
   25af2:	bhi.n	25b22 <btrfs_print_leaf@@Base+0x402>
   25af4:	cmp	r6, #120	; 0x78
   25af6:	beq.w	263ba <btrfs_print_leaf@@Base+0xc9a>
   25afa:	cmp	r6, #128	; 0x80
   25afc:	beq.w	263c2 <btrfs_print_leaf@@Base+0xca2>
   25b00:	cmp	r6, #108	; 0x6c
   25b02:	bne.w	25988 <btrfs_print_leaf@@Base+0x268>
   25b06:	add.w	r4, fp, r7
   25b0a:	add	r0, sp, #940	; 0x3ac
   25b0c:	ldrb	r3, [r4, #16]
   25b0e:	ldrb	r5, [r4, #20]
   25b10:	cmp	r3, #3
   25b12:	bhi.w	265c4 <btrfs_print_leaf@@Base+0xea4>
   25b16:	tbh	[pc, r3, lsl #1]
   25b1a:	lsls	r6, r5, #17
   25b1c:	lsls	r3, r3, #18
   25b1e:	lsls	r6, r3, #18
   25b20:	lsls	r1, r4, #18
   25b22:	cmp	r6, #144	; 0x90
   25b24:	beq.w	26334 <btrfs_print_leaf@@Base+0xc14>
   25b28:	cmp	r6, #156	; 0x9c
   25b2a:	bne.w	25988 <btrfs_print_leaf@@Base+0x268>
   25b2e:	ldr.w	r2, [pc, #2444]	; 264bc <btrfs_print_leaf@@Base+0xd9c>
   25b32:	add	r2, pc
   25b34:	ldr	r1, [sp, #80]	; 0x50
   25b36:	mov	r0, r9
   25b38:	bl	24ca8 <btrfs_destroy_delayed_refs@@Base+0x2c4>
   25b3c:	b.n	25988 <btrfs_print_leaf@@Base+0x268>
   25b3e:	cmp	r6, #253	; 0xfd
   25b40:	bhi.w	25988 <btrfs_print_leaf@@Base+0x268>
   25b44:	cmp	r6, #227	; 0xe3
   25b46:	bhi.w	259d2 <btrfs_print_leaf@@Base+0x2b2>
   25b4a:	cmp	r6, #204	; 0xcc
   25b4c:	bhi.n	25b9c <btrfs_print_leaf@@Base+0x47c>
   25b4e:	cmp	r6, #191	; 0xbf
   25b50:	bls.w	25988 <btrfs_print_leaf@@Base+0x268>
   25b54:	subs	r6, #192	; 0xc0
   25b56:	cmp	r6, #12
   25b58:	bhi.w	25988 <btrfs_print_leaf@@Base+0x268>
   25b5c:	add	r3, pc, #8	; (adr r3, 25b68 <btrfs_print_leaf@@Base+0x448>)
   25b5e:	ldr.w	r2, [r3, r6, lsl #2]
   25b62:	add	r3, r2
   25b64:	bx	r3
   25b66:	nop
   25b68:	lsrs	r5, r2, #12
   25b6a:	movs	r0, r0
   25b6c:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   25b70:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   25b74:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   25b78:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   25b7c:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   25b80:	lsrs	r7, r1, #13
   25b82:	movs	r0, r0
   25b84:	lsrs	r5, r4, #13
   25b86:	movs	r0, r0
   25b88:	lsrs	r5, r5, #13
   25b8a:	movs	r0, r0
   25b8c:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   25b90:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   25b94:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   25b98:	lsrs	r1, r0, #14
   25b9a:	movs	r0, r0
   25b9c:	cmp	r6, #216	; 0xd8
   25b9e:	bne.w	25988 <btrfs_print_leaf@@Base+0x268>
   25ba2:	add	r4, sp, #740	; 0x2e4
   25ba4:	add.w	r2, r8, #167	; 0xa7
   25ba8:	add	r5, sp, #772	; 0x304
   25baa:	movs	r3, #16
   25bac:	mov	r1, r4
   25bae:	mov	r0, r9
   25bb0:	bl	17a1a <read_extent_buffer@@Base>
   25bb4:	mov	r0, r4
   25bb6:	add	r4, sp, #756	; 0x2f4
   25bb8:	add	r6, sp, #940	; 0x3ac
   25bba:	mov	r1, r5
   25bbc:	blx	85c4 <uuid_unparse@plt>
   25bc0:	add.w	r2, r8, #183	; 0xb7
   25bc4:	movs	r3, #16
   25bc6:	mov	r1, r4
   25bc8:	mov	r0, r9
   25bca:	bl	17a1a <read_extent_buffer@@Base>
   25bce:	mov	r1, r6
   25bd0:	mov	r0, r4
   25bd2:	blx	85c4 <uuid_unparse@plt>
   25bd6:	add.w	r3, fp, r7
   25bda:	strd	r5, r6, [sp, #68]	; 0x44
   25bde:	movs	r0, #1
   25be0:	ldrb.w	r2, [r3, #65]	; 0x41
   25be4:	str	r2, [sp, #64]	; 0x40
   25be6:	ldrb.w	r2, [r3, #64]	; 0x40
   25bea:	str	r2, [sp, #60]	; 0x3c
   25bec:	ldr	r2, [r3, #60]	; 0x3c
   25bee:	str	r2, [sp, #56]	; 0x38
   25bf0:	ldr	r1, [r3, #52]	; 0x34
   25bf2:	ldr	r2, [r3, #56]	; 0x38
   25bf4:	strd	r1, r2, [sp, #48]	; 0x30
   25bf8:	ldr	r1, [r3, #44]	; 0x2c
   25bfa:	ldr	r2, [r3, #48]	; 0x30
   25bfc:	strd	r1, r2, [sp, #40]	; 0x28
   25c00:	ldr	r1, [r3, #36]	; 0x24
   25c02:	ldr	r2, [r3, #40]	; 0x28
   25c04:	strd	r1, r2, [sp, #32]
   25c08:	ldr	r2, [r3, #32]
   25c0a:	str	r2, [sp, #24]
   25c0c:	ldr	r2, [r3, #28]
   25c0e:	str	r2, [sp, #20]
   25c10:	ldr	r2, [r3, #24]
   25c12:	str	r2, [sp, #16]
   25c14:	ldr	r1, [r3, #16]
   25c16:	ldr	r2, [r3, #20]
   25c18:	strd	r1, r2, [sp, #8]
   25c1c:	ldr	r1, [r3, #8]
   25c1e:	ldr	r2, [r3, #12]
   25c20:	strd	r1, r2, [sp]
   25c24:	ldr.w	r1, [pc, #2200]	; 264c0 <btrfs_print_leaf@@Base+0xda0>
   25c28:	ldr.w	r2, [fp, r7]
   25c2c:	ldr	r3, [r3, #4]
   25c2e:	add	r1, pc
   25c30:	blx	8a30 <__printf_chk@plt+0x4>
   25c34:	b.n	25988 <btrfs_print_leaf@@Base+0x268>
   25c36:	add	r3, sp, #940	; 0x3ac
   25c38:	add	fp, r7
   25c3a:	mov.w	r2, #256	; 0x100
   25c3e:	movs	r1, #0
   25c40:	mov	r0, r3
   25c42:	movs	r7, #0
   25c44:	blx	89bc <memset@plt+0x4>
   25c48:	ldr.w	r5, [fp, #64]	; 0x40
   25c4c:	ldr.w	r4, [fp, #68]	; 0x44
   25c50:	and.w	r2, r5, #1
   25c54:	strd	r2, r7, [sp, #112]	; 0x70
   25c58:	ldrd	r1, r2, [sp, #112]	; 0x70
   25c5c:	orrs	r2, r1
   25c5e:	beq.n	25c70 <btrfs_print_leaf@@Base+0x550>
   25c60:	ldr.w	r1, [pc, #2144]	; 264c4 <btrfs_print_leaf@@Base+0xda4>
   25c64:	mov.w	r2, #256	; 0x100
   25c68:	mov	r6, r7
   25c6a:	add	r1, pc
   25c6c:	blx	8988 <__strcat_chk@plt>
   25c70:	and.w	r3, r5, #2
   25c74:	str	r3, [sp, #120]	; 0x78
   25c76:	movs	r3, #0
   25c78:	str	r3, [sp, #124]	; 0x7c
   25c7a:	ldrd	r2, r3, [sp, #120]	; 0x78
   25c7e:	orrs	r3, r2
   25c80:	beq.n	25ca6 <btrfs_print_leaf@@Base+0x586>
   25c82:	cbnz	r6, 25c94 <btrfs_print_leaf@@Base+0x574>
   25c84:	ldr.w	r1, [pc, #2112]	; 264c8 <btrfs_print_leaf@@Base+0xda8>
   25c88:	add	r0, sp, #940	; 0x3ac
   25c8a:	mov.w	r2, #256	; 0x100
   25c8e:	add	r1, pc
   25c90:	blx	8988 <__strcat_chk@plt>
   25c94:	ldr.w	r1, [pc, #2100]	; 264cc <btrfs_print_leaf@@Base+0xdac>
   25c98:	add	r0, sp, #940	; 0x3ac
   25c9a:	mov.w	r2, #256	; 0x100
   25c9e:	movs	r6, #0
   25ca0:	add	r1, pc
   25ca2:	blx	8988 <__strcat_chk@plt>
   25ca6:	and.w	r3, r5, #4
   25caa:	str	r3, [sp, #128]	; 0x80
   25cac:	movs	r3, #0
   25cae:	str	r3, [sp, #132]	; 0x84
   25cb0:	ldrd	r2, r3, [sp, #128]	; 0x80
   25cb4:	orrs	r3, r2
   25cb6:	beq.n	25cdc <btrfs_print_leaf@@Base+0x5bc>
   25cb8:	cbnz	r6, 25cca <btrfs_print_leaf@@Base+0x5aa>
   25cba:	ldr.w	r1, [pc, #2068]	; 264d0 <btrfs_print_leaf@@Base+0xdb0>
   25cbe:	add	r0, sp, #940	; 0x3ac
   25cc0:	mov.w	r2, #256	; 0x100
   25cc4:	add	r1, pc
   25cc6:	blx	8988 <__strcat_chk@plt>
   25cca:	ldr.w	r1, [pc, #2056]	; 264d4 <btrfs_print_leaf@@Base+0xdb4>
   25cce:	add	r0, sp, #940	; 0x3ac
   25cd0:	mov.w	r2, #256	; 0x100
   25cd4:	movs	r6, #0
   25cd6:	add	r1, pc
   25cd8:	blx	8988 <__strcat_chk@plt>
   25cdc:	and.w	r3, r5, #8
   25ce0:	str	r3, [sp, #136]	; 0x88
   25ce2:	movs	r3, #0
   25ce4:	str	r3, [sp, #140]	; 0x8c
   25ce6:	ldrd	r2, r3, [sp, #136]	; 0x88
   25cea:	orrs	r3, r2
   25cec:	beq.n	25d12 <btrfs_print_leaf@@Base+0x5f2>
   25cee:	cbnz	r6, 25d00 <btrfs_print_leaf@@Base+0x5e0>
   25cf0:	ldr.w	r1, [pc, #2020]	; 264d8 <btrfs_print_leaf@@Base+0xdb8>
   25cf4:	add	r0, sp, #940	; 0x3ac
   25cf6:	mov.w	r2, #256	; 0x100
   25cfa:	add	r1, pc
   25cfc:	blx	8988 <__strcat_chk@plt>
   25d00:	ldr.w	r1, [pc, #2008]	; 264dc <btrfs_print_leaf@@Base+0xdbc>
   25d04:	add	r0, sp, #940	; 0x3ac
   25d06:	mov.w	r2, #256	; 0x100
   25d0a:	movs	r6, #0
   25d0c:	add	r1, pc
   25d0e:	blx	8988 <__strcat_chk@plt>
   25d12:	and.w	r3, r5, #16
   25d16:	str	r3, [sp, #144]	; 0x90
   25d18:	movs	r3, #0
   25d1a:	str	r3, [sp, #148]	; 0x94
   25d1c:	ldrd	r2, r3, [sp, #144]	; 0x90
   25d20:	orrs	r3, r2
   25d22:	beq.n	25d48 <btrfs_print_leaf@@Base+0x628>
   25d24:	cbnz	r6, 25d36 <btrfs_print_leaf@@Base+0x616>
   25d26:	ldr.w	r1, [pc, #1976]	; 264e0 <btrfs_print_leaf@@Base+0xdc0>
   25d2a:	add	r0, sp, #940	; 0x3ac
   25d2c:	mov.w	r2, #256	; 0x100
   25d30:	add	r1, pc
   25d32:	blx	8988 <__strcat_chk@plt>
   25d36:	ldr.w	r1, [pc, #1964]	; 264e4 <btrfs_print_leaf@@Base+0xdc4>
   25d3a:	add	r0, sp, #940	; 0x3ac
   25d3c:	mov.w	r2, #256	; 0x100
   25d40:	movs	r6, #0
   25d42:	add	r1, pc
   25d44:	blx	8988 <__strcat_chk@plt>
   25d48:	and.w	r3, r5, #32
   25d4c:	str	r3, [sp, #152]	; 0x98
   25d4e:	movs	r3, #0
   25d50:	str	r3, [sp, #156]	; 0x9c
   25d52:	ldrd	r2, r3, [sp, #152]	; 0x98
   25d56:	orrs	r3, r2
   25d58:	beq.n	25d7e <btrfs_print_leaf@@Base+0x65e>
   25d5a:	cbnz	r6, 25d6c <btrfs_print_leaf@@Base+0x64c>
   25d5c:	ldr.w	r1, [pc, #1928]	; 264e8 <btrfs_print_leaf@@Base+0xdc8>
   25d60:	add	r0, sp, #940	; 0x3ac
   25d62:	mov.w	r2, #256	; 0x100
   25d66:	add	r1, pc
   25d68:	blx	8988 <__strcat_chk@plt>
   25d6c:	ldr.w	r1, [pc, #1916]	; 264ec <btrfs_print_leaf@@Base+0xdcc>
   25d70:	add	r0, sp, #940	; 0x3ac
   25d72:	mov.w	r2, #256	; 0x100
   25d76:	movs	r6, #0
   25d78:	add	r1, pc
   25d7a:	blx	8988 <__strcat_chk@plt>
   25d7e:	and.w	r3, r5, #64	; 0x40
   25d82:	str	r3, [sp, #160]	; 0xa0
   25d84:	movs	r3, #0
   25d86:	str	r3, [sp, #164]	; 0xa4
   25d88:	ldrd	r2, r3, [sp, #160]	; 0xa0
   25d8c:	orrs	r3, r2
   25d8e:	beq.n	25db4 <btrfs_print_leaf@@Base+0x694>
   25d90:	cbnz	r6, 25da2 <btrfs_print_leaf@@Base+0x682>
   25d92:	ldr.w	r1, [pc, #1884]	; 264f0 <btrfs_print_leaf@@Base+0xdd0>
   25d96:	add	r0, sp, #940	; 0x3ac
   25d98:	mov.w	r2, #256	; 0x100
   25d9c:	add	r1, pc
   25d9e:	blx	8988 <__strcat_chk@plt>
   25da2:	ldr.w	r1, [pc, #1872]	; 264f4 <btrfs_print_leaf@@Base+0xdd4>
   25da6:	add	r0, sp, #940	; 0x3ac
   25da8:	mov.w	r2, #256	; 0x100
   25dac:	movs	r6, #0
   25dae:	add	r1, pc
   25db0:	blx	8988 <__strcat_chk@plt>
   25db4:	and.w	r3, r5, #128	; 0x80
   25db8:	str	r3, [sp, #168]	; 0xa8
   25dba:	movs	r3, #0
   25dbc:	str	r3, [sp, #172]	; 0xac
   25dbe:	ldrd	r2, r3, [sp, #168]	; 0xa8
   25dc2:	orrs	r3, r2
   25dc4:	beq.n	25dea <btrfs_print_leaf@@Base+0x6ca>
   25dc6:	cbnz	r6, 25dd8 <btrfs_print_leaf@@Base+0x6b8>
   25dc8:	ldr.w	r1, [pc, #1836]	; 264f8 <btrfs_print_leaf@@Base+0xdd8>
   25dcc:	add	r0, sp, #940	; 0x3ac
   25dce:	mov.w	r2, #256	; 0x100
   25dd2:	add	r1, pc
   25dd4:	blx	8988 <__strcat_chk@plt>
   25dd8:	ldr.w	r1, [pc, #1824]	; 264fc <btrfs_print_leaf@@Base+0xddc>
   25ddc:	add	r0, sp, #940	; 0x3ac
   25dde:	mov.w	r2, #256	; 0x100
   25de2:	movs	r6, #0
   25de4:	add	r1, pc
   25de6:	blx	8988 <__strcat_chk@plt>
   25dea:	and.w	r3, r5, #256	; 0x100
   25dee:	str	r3, [sp, #176]	; 0xb0
   25df0:	movs	r3, #0
   25df2:	str	r3, [sp, #180]	; 0xb4
   25df4:	ldrd	r2, r3, [sp, #176]	; 0xb0
   25df8:	orrs	r3, r2
   25dfa:	beq.n	25e20 <btrfs_print_leaf@@Base+0x700>
   25dfc:	cbnz	r6, 25e0e <btrfs_print_leaf@@Base+0x6ee>
   25dfe:	ldr.w	r1, [pc, #1792]	; 26500 <btrfs_print_leaf@@Base+0xde0>
   25e02:	add	r0, sp, #940	; 0x3ac
   25e04:	mov.w	r2, #256	; 0x100
   25e08:	add	r1, pc
   25e0a:	blx	8988 <__strcat_chk@plt>
   25e0e:	ldr.w	r1, [pc, #1780]	; 26504 <btrfs_print_leaf@@Base+0xde4>
   25e12:	add	r0, sp, #940	; 0x3ac
   25e14:	mov.w	r2, #256	; 0x100
   25e18:	movs	r6, #0
   25e1a:	add	r1, pc
   25e1c:	blx	8988 <__strcat_chk@plt>
   25e20:	and.w	r3, r5, #512	; 0x200
   25e24:	str	r3, [sp, #184]	; 0xb8
   25e26:	movs	r3, #0
   25e28:	str	r3, [sp, #188]	; 0xbc
   25e2a:	ldrd	r2, r3, [sp, #184]	; 0xb8
   25e2e:	orrs	r3, r2
   25e30:	beq.n	25e56 <btrfs_print_leaf@@Base+0x736>
   25e32:	cbnz	r6, 25e44 <btrfs_print_leaf@@Base+0x724>
   25e34:	ldr.w	r1, [pc, #1744]	; 26508 <btrfs_print_leaf@@Base+0xde8>
   25e38:	add	r0, sp, #940	; 0x3ac
   25e3a:	mov.w	r2, #256	; 0x100
   25e3e:	add	r1, pc
   25e40:	blx	8988 <__strcat_chk@plt>
   25e44:	ldr.w	r1, [pc, #1732]	; 2650c <btrfs_print_leaf@@Base+0xdec>
   25e48:	add	r0, sp, #940	; 0x3ac
   25e4a:	mov.w	r2, #256	; 0x100
   25e4e:	movs	r6, #0
   25e50:	add	r1, pc
   25e52:	blx	8988 <__strcat_chk@plt>
   25e56:	and.w	r3, r5, #1024	; 0x400
   25e5a:	str	r3, [sp, #192]	; 0xc0
   25e5c:	movs	r3, #0
   25e5e:	str	r3, [sp, #196]	; 0xc4
   25e60:	ldrd	r2, r3, [sp, #192]	; 0xc0
   25e64:	orrs	r3, r2
   25e66:	beq.n	25e8c <btrfs_print_leaf@@Base+0x76c>
   25e68:	cbnz	r6, 25e7a <btrfs_print_leaf@@Base+0x75a>
   25e6a:	ldr.w	r1, [pc, #1700]	; 26510 <btrfs_print_leaf@@Base+0xdf0>
   25e6e:	add	r0, sp, #940	; 0x3ac
   25e70:	mov.w	r2, #256	; 0x100
   25e74:	add	r1, pc
   25e76:	blx	8988 <__strcat_chk@plt>
   25e7a:	ldr.w	r1, [pc, #1688]	; 26514 <btrfs_print_leaf@@Base+0xdf4>
   25e7e:	add	r0, sp, #940	; 0x3ac
   25e80:	mov.w	r2, #256	; 0x100
   25e84:	movs	r6, #0
   25e86:	add	r1, pc
   25e88:	blx	8988 <__strcat_chk@plt>
   25e8c:	and.w	r3, r5, #2048	; 0x800
   25e90:	str	r3, [sp, #200]	; 0xc8
   25e92:	movs	r3, #0
   25e94:	str	r3, [sp, #204]	; 0xcc
   25e96:	ldrd	r2, r3, [sp, #200]	; 0xc8
   25e9a:	add	r0, sp, #940	; 0x3ac
   25e9c:	orrs	r3, r2
   25e9e:	beq.n	25f7e <btrfs_print_leaf@@Base+0x85e>
   25ea0:	cbnz	r6, 25eb0 <btrfs_print_leaf@@Base+0x790>
   25ea2:	ldr.w	r1, [pc, #1652]	; 26518 <btrfs_print_leaf@@Base+0xdf8>
   25ea6:	mov.w	r2, #256	; 0x100
   25eaa:	add	r1, pc
   25eac:	blx	8988 <__strcat_chk@plt>
   25eb0:	ldr.w	r1, [pc, #1640]	; 2651c <btrfs_print_leaf@@Base+0xdfc>
   25eb4:	add	r0, sp, #940	; 0x3ac
   25eb6:	mov.w	r2, #256	; 0x100
   25eba:	add	r1, pc
   25ebc:	blx	8988 <__strcat_chk@plt>
   25ec0:	strd	r5, r4, [sp, #64]	; 0x40
   25ec4:	add	r3, sp, #940	; 0x3ac
   25ec6:	str	r3, [sp, #72]	; 0x48
   25ec8:	movs	r0, #1
   25eca:	ldr.w	r2, [fp, #72]	; 0x48
   25ece:	ldr.w	r3, [fp, #76]	; 0x4c
   25ed2:	ldr.w	r1, [pc, #1612]	; 26520 <btrfs_print_leaf@@Base+0xe00>
   25ed6:	strd	r2, r3, [sp, #56]	; 0x38
   25eda:	add	r1, pc
   25edc:	ldr.w	r2, [fp, #56]	; 0x38
   25ee0:	ldr.w	r3, [fp, #60]	; 0x3c
   25ee4:	strd	r2, r3, [sp, #48]	; 0x30
   25ee8:	ldr.w	r3, [fp, #48]	; 0x30
   25eec:	str	r3, [sp, #44]	; 0x2c
   25eee:	ldr.w	r3, [fp, #44]	; 0x2c
   25ef2:	str	r3, [sp, #40]	; 0x28
   25ef4:	ldr.w	r3, [fp, #40]	; 0x28
   25ef8:	str	r3, [sp, #36]	; 0x24
   25efa:	ldr.w	r3, [fp, #52]	; 0x34
   25efe:	str	r3, [sp, #32]
   25f00:	ldr.w	r2, [fp, #32]
   25f04:	ldr.w	r3, [fp, #36]	; 0x24
   25f08:	strd	r2, r3, [sp, #24]
   25f0c:	ldr.w	r2, [fp, #24]
   25f10:	ldr.w	r3, [fp, #28]
   25f14:	strd	r2, r3, [sp, #16]
   25f18:	ldr.w	r2, [fp, #16]
   25f1c:	ldr.w	r3, [fp, #20]
   25f20:	strd	r2, r3, [sp, #8]
   25f24:	ldr.w	r2, [fp, #8]
   25f28:	ldr.w	r3, [fp, #12]
   25f2c:	strd	r2, r3, [sp]
   25f30:	ldr.w	r3, [fp, #4]
   25f34:	ldr.w	r2, [fp]
   25f38:	blx	8a30 <__printf_chk@plt+0x4>
   25f3c:	ldr.w	r2, [pc, #1508]	; 26524 <btrfs_print_leaf@@Base+0xe04>
   25f40:	add.w	r1, r8, #213	; 0xd5
   25f44:	mov	r0, r9
   25f46:	add	r2, pc
   25f48:	bl	24dac <btrfs_destroy_delayed_refs@@Base+0x3c8>
   25f4c:	ldr.w	r2, [pc, #1496]	; 26528 <btrfs_print_leaf@@Base+0xe08>
   25f50:	add.w	r1, r8, #225	; 0xe1
   25f54:	mov	r0, r9
   25f56:	add	r2, pc
   25f58:	bl	24dac <btrfs_destroy_delayed_refs@@Base+0x3c8>
   25f5c:	ldr.w	r2, [pc, #1484]	; 2652c <btrfs_print_leaf@@Base+0xe0c>
   25f60:	add.w	r1, r8, #237	; 0xed
   25f64:	mov	r0, r9
   25f66:	add	r2, pc
   25f68:	bl	24dac <btrfs_destroy_delayed_refs@@Base+0x3c8>
   25f6c:	ldr.w	r2, [pc, #1472]	; 26530 <btrfs_print_leaf@@Base+0xe10>
   25f70:	add.w	r1, r8, #249	; 0xf9
   25f74:	mov	r0, r9
   25f76:	add	r2, pc
   25f78:	bl	24dac <btrfs_destroy_delayed_refs@@Base+0x3c8>
   25f7c:	b.n	25988 <btrfs_print_leaf@@Base+0x268>
   25f7e:	cmp	r6, #0
   25f80:	beq.n	25ec0 <btrfs_print_leaf@@Base+0x7a0>
   25f82:	ldr.w	r1, [pc, #1456]	; 26534 <btrfs_print_leaf@@Base+0xe14>
   25f86:	mov.w	r2, #256	; 0x100
   25f8a:	add	r1, pc
   25f8c:	b.n	25ebc <btrfs_print_leaf@@Base+0x79c>
   25f8e:	add.w	r3, fp, r7
   25f92:	mov	r1, r6
   25f94:	mov	r0, r9
   25f96:	ldrh	r4, [r3, #8]
   25f98:	ldr	r2, [r3, #0]
   25f9a:	cmp	r4, #255	; 0xff
   25f9c:	ldr.w	r8, [r3, #4]
   25fa0:	mov	r3, r4
   25fa2:	vmov	s16, r2
   25fa6:	it	cs
   25fa8:	movcs	r3, #255	; 0xff
   25faa:	add.w	r2, r7, #10
   25fae:	str	r3, [sp, #96]	; 0x60
   25fb0:	bl	17a1a <read_extent_buffer@@Base>
   25fb4:	ldr	r3, [sp, #96]	; 0x60
   25fb6:	vmov	r2, s16
   25fba:	movs	r0, #1
   25fbc:	vmov	r1, s17
   25fc0:	strd	r4, r3, [sp]
   25fc4:	mov	r3, r8
   25fc6:	str	r6, [sp, #8]
   25fc8:	adds	r4, #10
   25fca:	blx	8a30 <__printf_chk@plt+0x4>
   25fce:	add	r7, r4
   25fd0:	add	r5, r4
   25fd2:	ldr	r3, [sp, #84]	; 0x54
   25fd4:	cmp	r3, r5
   25fd6:	bhi.n	25f8e <btrfs_print_leaf@@Base+0x86e>
   25fd8:	b.n	25988 <btrfs_print_leaf@@Base+0x268>
   25fda:	add.w	r3, fp, r7
   25fde:	mov	r1, r6
   25fe0:	mov	r0, r9
   25fe2:	ldr	r2, [r3, #8]
   25fe4:	ldrh	r4, [r3, #16]
   25fe6:	ldr.w	r8, [r3, #12]
   25fea:	vmov	s16, r2
   25fee:	ldr	r2, [r3, #0]
   25ff0:	ldr	r3, [r3, #4]
   25ff2:	cmp	r4, #255	; 0xff
   25ff4:	str	r2, [sp, #96]	; 0x60
   25ff6:	add.w	r2, r7, #18
   25ffa:	str	r3, [sp, #88]	; 0x58
   25ffc:	mov	r3, r4
   25ffe:	it	cs
   26000:	movcs	r3, #255	; 0xff
   26002:	str	r3, [sp, #244]	; 0xf4
   26004:	bl	17a1a <read_extent_buffer@@Base>
   26008:	ldr	r3, [sp, #244]	; 0xf4
   2600a:	vmov	r2, s16
   2600e:	movs	r0, #1
   26010:	vmov	r1, s17
   26014:	strd	r4, r3, [sp, #8]
   26018:	adds	r4, #18
   2601a:	ldr	r3, [sp, #96]	; 0x60
   2601c:	add	r7, r4
   2601e:	str	r6, [sp, #16]
   26020:	add	r5, r4
   26022:	str	r3, [sp, #0]
   26024:	ldr	r3, [sp, #88]	; 0x58
   26026:	str	r3, [sp, #4]
   26028:	mov	r3, r8
   2602a:	blx	8a30 <__printf_chk@plt+0x4>
   2602e:	ldr	r3, [sp, #84]	; 0x54
   26030:	cmp	r3, r5
   26032:	bhi.n	25fda <btrfs_print_leaf@@Base+0x8ba>
   26034:	b.n	25988 <btrfs_print_leaf@@Base+0x268>
   26036:	ldr.w	r3, [pc, #1280]	; 26538 <btrfs_print_leaf@@Base+0xe18>
   2603a:	add	r6, sp, #940	; 0x3ac
   2603c:	movs	r5, #0
   2603e:	add	r3, pc
   26040:	vmov	s17, r3
   26044:	b.n	2602e <btrfs_print_leaf@@Base+0x90e>
   26046:	add	r4, sp, #272	; 0x110
   26048:	movs	r3, #17
   2604a:	mov	r2, r7
   2604c:	mov	r0, r9
   2604e:	mov	r1, r4
   26050:	add.w	r5, fp, r7
   26054:	bl	17a1a <read_extent_buffer@@Base>
   26058:	vmov	r1, s17
   2605c:	movs	r0, #1
   2605e:	blx	8a30 <__printf_chk@plt+0x4>
   26062:	mov	r0, r4
   26064:	bl	25324 <btrfs_print_key@@Base>
   26068:	vmov	r1, s18
   2606c:	movs	r0, #1
   2606e:	blx	8a30 <__printf_chk@plt+0x4>
   26072:	ldrb	r3, [r5, #29]
   26074:	cmp	r3, #8
   26076:	bhi.n	26130 <btrfs_print_leaf@@Base+0xa10>
   26078:	ldr.w	r2, [pc, #1216]	; 2653c <btrfs_print_leaf@@Base+0xe1c>
   2607c:	add	r2, pc
   2607e:	add.w	r2, r2, r3, lsl #2
   26082:	ldr.w	r2, [r2, #1024]	; 0x400
   26086:	cmp	r2, #0
   26088:	beq.n	26130 <btrfs_print_leaf@@Base+0xa10>
   2608a:	ldr.w	r1, [pc, #1204]	; 26540 <btrfs_print_leaf@@Base+0xe20>
   2608e:	add	r1, pc
   26090:	movs	r0, #1
   26092:	add.w	r8, sp, #940	; 0x3ac
   26096:	blx	8a30 <__printf_chk@plt+0x4>
   2609a:	movs	r0, #10
   2609c:	blx	89cc <putchar@plt+0x4>
   260a0:	ldrh.w	r4, [r5, #27]
   260a4:	ldrh.w	r3, [r5, #25]
   260a8:	mov	r1, r8
   260aa:	cmp	r4, #255	; 0xff
   260ac:	mov	r0, r9
   260ae:	str	r3, [sp, #96]	; 0x60
   260b0:	mov	r3, r4
   260b2:	it	cs
   260b4:	movcs	r3, #255	; 0xff
   260b6:	vmov	s16, r3
   260ba:	add.w	r3, r7, #30
   260be:	str	r3, [sp, #88]	; 0x58
   260c0:	ldr	r2, [sp, #88]	; 0x58
   260c2:	vmov	r3, s16
   260c6:	bl	17a1a <read_extent_buffer@@Base>
   260ca:	ldr.w	r2, [r5, #17]!
   260ce:	ldr	r3, [sp, #96]	; 0x60
   260d0:	movs	r0, #1
   260d2:	ldr.w	r1, [pc, #1136]	; 26544 <btrfs_print_leaf@@Base+0xe24>
   260d6:	str	r4, [sp, #4]
   260d8:	add	r1, pc
   260da:	str	r3, [sp, #0]
   260dc:	ldr	r3, [r5, #4]
   260de:	blx	8a30 <__printf_chk@plt+0x4>
   260e2:	ldr.w	r1, [pc, #1124]	; 26548 <btrfs_print_leaf@@Base+0xe28>
   260e6:	mov	r3, r8
   260e8:	vmov	r2, s16
   260ec:	add	r1, pc
   260ee:	movs	r0, #1
   260f0:	blx	8a30 <__printf_chk@plt+0x4>
   260f4:	ldr	r3, [sp, #96]	; 0x60
   260f6:	cbz	r3, 2611e <btrfs_print_leaf@@Base+0x9fe>
   260f8:	cmp	r3, #255	; 0xff
   260fa:	ldr	r2, [sp, #88]	; 0x58
   260fc:	mov	r5, r3
   260fe:	mov	r1, r8
   26100:	it	cs
   26102:	movcs	r5, #255	; 0xff
   26104:	add	r2, r4
   26106:	mov	r3, r5
   26108:	mov	r0, r9
   2610a:	bl	17a1a <read_extent_buffer@@Base>
   2610e:	ldr.w	r1, [pc, #1084]	; 2654c <btrfs_print_leaf@@Base+0xe2c>
   26112:	mov	r3, r8
   26114:	mov	r2, r5
   26116:	add	r1, pc
   26118:	movs	r0, #1
   2611a:	blx	8a30 <__printf_chk@plt+0x4>
   2611e:	ldr	r3, [sp, #96]	; 0x60
   26120:	add	r4, r3
   26122:	adds	r4, #30
   26124:	add	r7, r4
   26126:	add	r6, r4
   26128:	ldr	r3, [sp, #84]	; 0x54
   2612a:	cmp	r3, r6
   2612c:	bhi.n	26046 <btrfs_print_leaf@@Base+0x926>
   2612e:	b.n	25988 <btrfs_print_leaf@@Base+0x268>
   26130:	vmov	r1, s19
   26134:	mov	r2, r3
   26136:	b.n	26090 <btrfs_print_leaf@@Base+0x970>
   26138:	ldr.w	r3, [sl, #17]
   2613c:	ldr.w	r1, [pc, #1040]	; 26550 <btrfs_print_leaf@@Base+0xe30>
   26140:	add	r3, fp
   26142:	add	r1, pc
   26144:	ldr.w	r2, [r3, #101]!
   26148:	ldr	r3, [r3, #4]
   2614a:	movs	r0, #1
   2614c:	blx	8a30 <__printf_chk@plt+0x4>
   26150:	b.n	25988 <btrfs_print_leaf@@Base+0x268>
   26152:	movs	r6, #0
   26154:	movs	r2, #28
   26156:	mov	r1, r6
   26158:	add	r0, sp, #776	; 0x308
   2615a:	add	r5, sp, #300	; 0x12c
   2615c:	str	r6, [sp, #772]	; 0x304
   2615e:	blx	89bc <memset@plt+0x4>
   26162:	ldr.w	r3, [sl, #21]
   26166:	ldr.w	r4, [sl, #17]
   2616a:	movw	r2, #439	; 0x1b7
   2616e:	mov	r1, r6
   26170:	mov	r0, r5
   26172:	str	r3, [sp, #84]	; 0x54
   26174:	blx	89bc <memset@plt+0x4>
   26178:	ldr	r3, [sp, #84]	; 0x54
   2617a:	add.w	r2, r4, #101	; 0x65
   2617e:	mov	r1, r5
   26180:	mov	r0, r9
   26182:	bl	17a1a <read_extent_buffer@@Base>
   26186:	ldr.w	r3, [r5, #208]	; 0xd0
   2618a:	add	r7, sp, #772	; 0x304
   2618c:	and.w	r3, r3, #1
   26190:	strd	r3, r6, [sp, #208]	; 0xd0
   26194:	ldrd	r2, r3, [sp, #208]	; 0xd0
   26198:	orrs	r3, r2
   2619a:	mov.w	r2, #32
   2619e:	beq.w	2632e <btrfs_print_leaf@@Base+0xc0e>
   261a2:	ldr	r1, [pc, #944]	; (26554 <btrfs_print_leaf@@Base+0xe34>)
   261a4:	add	r1, pc
   261a6:	add	r5, sp, #300	; 0x12c
   261a8:	mov	r0, r7
   261aa:	blx	8988 <__strcat_chk@plt>
   261ae:	ldr	r1, [pc, #936]	; (26558 <btrfs_print_leaf@@Base+0xe38>)
   261b0:	ldr.w	r3, [r5, #216]	; 0xd8
   261b4:	movs	r0, #1
   261b6:	add	r1, pc
   261b8:	str	r3, [sp, #20]
   261ba:	ldrb.w	r3, [r5, #238]	; 0xee
   261be:	str	r3, [sp, #16]
   261c0:	ldrd	r2, r3, [r5, #176]	; 0xb0
   261c4:	strd	r2, r3, [sp, #8]
   261c8:	ldrd	r2, r3, [r5, #168]	; 0xa8
   261cc:	strd	r2, r3, [sp]
   261d0:	ldrd	r2, r3, [r5, #160]	; 0xa0
   261d4:	blx	8a30 <__printf_chk@plt+0x4>
   261d8:	add	r3, sp, #772	; 0x304
   261da:	str	r3, [sp, #24]
   261dc:	movs	r0, #1
   261de:	ldrd	r2, r3, [r5, #208]	; 0xd0
   261e2:	ldr	r1, [pc, #888]	; (2655c <btrfs_print_leaf@@Base+0xe3c>)
   261e4:	strd	r2, r3, [sp, #16]
   261e8:	add	r1, pc
   261ea:	ldrd	r2, r3, [r5, #192]	; 0xc0
   261ee:	strd	r2, r3, [sp, #8]
   261f2:	ldrd	r2, r3, [r5, #184]	; 0xb8
   261f6:	strd	r2, r3, [sp]
   261fa:	ldrd	r2, r3, [r5, #200]	; 0xc8
   261fe:	blx	8a30 <__printf_chk@plt+0x4>
   26202:	ldrd	r0, r1, [r5, #160]	; 0xa0
   26206:	ldr.w	r3, [r5, #243]	; 0xf3
   2620a:	ldr.w	r2, [r5, #239]	; 0xef
   2620e:	cmp	r1, r3
   26210:	it	eq
   26212:	cmpeq	r0, r2
   26214:	bne.n	2630c <btrfs_print_leaf@@Base+0xbec>
   26216:	add	r2, sp, #940	; 0x3ac
   26218:	addw	r0, sp, #547	; 0x223
   2621c:	str	r2, [sp, #84]	; 0x54
   2621e:	mov	r1, r2
   26220:	blx	85c4 <uuid_unparse@plt>
   26224:	ldr	r1, [pc, #824]	; (26560 <btrfs_print_leaf@@Base+0xe40>)
   26226:	ldr	r2, [sp, #84]	; 0x54
   26228:	movs	r0, #1
   2622a:	add	r1, pc
   2622c:	blx	8a30 <__printf_chk@plt+0x4>
   26230:	addw	r2, sp, #563	; 0x233
   26234:	movs	r3, #0
   26236:	ldrb.w	r1, [r2], #1
   2623a:	cmp	r1, #0
   2623c:	bne.w	26a36 <btrfs_print_leaf@@Base+0x1316>
   26240:	adds	r3, #1
   26242:	cmp	r3, #16
   26244:	bne.n	26236 <btrfs_print_leaf@@Base+0xb16>
   26246:	addw	r2, sp, #579	; 0x243
   2624a:	movs	r3, #0
   2624c:	ldrb.w	r1, [r2], #1
   26250:	cmp	r1, #0
   26252:	bne.w	26a1a <btrfs_print_leaf@@Base+0x12fa>
   26256:	adds	r3, #1
   26258:	cmp	r3, #16
   2625a:	bne.n	2624c <btrfs_print_leaf@@Base+0xb2c>
   2625c:	ldr.w	r0, [sp, #595]	; 0x253
   26260:	ldr.w	r1, [sp, #599]	; 0x257
   26264:	orrs.w	r2, r0, r1
   26268:	beq.n	2629c <btrfs_print_leaf@@Base+0xb7c>
   2626a:	ldr.w	r5, [sp, #619]	; 0x26b
   2626e:	ldr.w	r2, [sp, #623]	; 0x26f
   26272:	ldr.w	r3, [sp, #607]	; 0x25f
   26276:	strd	r5, r2, [sp, #16]
   2627a:	ldr.w	r2, [sp, #615]	; 0x267
   2627e:	ldr.w	r5, [sp, #611]	; 0x263
   26282:	strd	r5, r2, [sp, #8]
   26286:	ldr.w	r2, [sp, #603]	; 0x25b
   2628a:	strd	r2, r3, [sp]
   2628e:	mov	r3, r1
   26290:	ldr	r1, [pc, #720]	; (26564 <btrfs_print_leaf@@Base+0xe44>)
   26292:	mov	r2, r0
   26294:	movs	r0, #1
   26296:	add	r1, pc
   26298:	blx	8a30 <__printf_chk@plt+0x4>
   2629c:	add.w	r1, r4, #428	; 0x1ac
   262a0:	add.w	r0, fp, r1
   262a4:	ldr.w	r2, [fp, r1]
   262a8:	ldr	r3, [r0, #4]
   262aa:	orrs	r3, r2
   262ac:	beq.n	262b8 <btrfs_print_leaf@@Base+0xb98>
   262ae:	ldr	r2, [pc, #696]	; (26568 <btrfs_print_leaf@@Base+0xe48>)
   262b0:	mov	r0, r9
   262b2:	add	r2, pc
   262b4:	bl	24dac <btrfs_destroy_delayed_refs@@Base+0x3c8>
   262b8:	add.w	r1, r4, #440	; 0x1b8
   262bc:	add.w	r0, fp, r1
   262c0:	ldr.w	r2, [fp, r1]
   262c4:	ldr	r3, [r0, #4]
   262c6:	orrs	r3, r2
   262c8:	beq.n	262d4 <btrfs_print_leaf@@Base+0xbb4>
   262ca:	ldr	r2, [pc, #672]	; (2656c <btrfs_print_leaf@@Base+0xe4c>)
   262cc:	mov	r0, r9
   262ce:	add	r2, pc
   262d0:	bl	24dac <btrfs_destroy_delayed_refs@@Base+0x3c8>
   262d4:	add.w	r1, r4, #452	; 0x1c4
   262d8:	add.w	r0, fp, r1
   262dc:	ldr.w	r2, [fp, r1]
   262e0:	ldr	r3, [r0, #4]
   262e2:	orrs	r3, r2
   262e4:	beq.n	262f0 <btrfs_print_leaf@@Base+0xbd0>
   262e6:	ldr	r2, [pc, #648]	; (26570 <btrfs_print_leaf@@Base+0xe50>)
   262e8:	mov	r0, r9
   262ea:	add	r2, pc
   262ec:	bl	24dac <btrfs_destroy_delayed_refs@@Base+0x3c8>
   262f0:	add.w	r1, r4, #464	; 0x1d0
   262f4:	add.w	r0, fp, r1
   262f8:	ldr.w	r2, [fp, r1]
   262fc:	ldr	r3, [r0, #4]
   262fe:	orrs	r3, r2
   26300:	beq.n	2630c <btrfs_print_leaf@@Base+0xbec>
   26302:	ldr	r2, [pc, #624]	; (26574 <btrfs_print_leaf@@Base+0xe54>)
   26304:	mov	r0, r9
   26306:	add	r2, pc
   26308:	bl	24dac <btrfs_destroy_delayed_refs@@Base+0x3c8>
   2630c:	ldr	r1, [pc, #616]	; (26578 <btrfs_print_leaf@@Base+0xe58>)
   2630e:	movs	r0, #1
   26310:	add	r1, pc
   26312:	blx	8a30 <__printf_chk@plt+0x4>
   26316:	add	r0, sp, #520	; 0x208
   26318:	bl	25324 <btrfs_print_key@@Base>
   2631c:	ldr	r1, [pc, #604]	; (2657c <btrfs_print_leaf@@Base+0xe5c>)
   2631e:	ldrb.w	r2, [sp, #537]	; 0x219
   26322:	add	r1, pc
   26324:	movs	r0, #1
   26326:	blx	8a30 <__printf_chk@plt+0x4>
   2632a:	b.w	25988 <btrfs_print_leaf@@Base+0x268>
   2632e:	ldr	r1, [pc, #592]	; (26580 <btrfs_print_leaf@@Base+0xe60>)
   26330:	add	r1, pc
   26332:	b.n	261a6 <btrfs_print_leaf@@Base+0xa86>
   26334:	ldr	r2, [pc, #588]	; (26584 <btrfs_print_leaf@@Base+0xe64>)
   26336:	add	r2, pc
   26338:	b.w	25b34 <btrfs_print_leaf@@Base+0x414>
   2633c:	movs	r2, #0
   2633e:	ldr	r1, [sp, #80]	; 0x50
   26340:	mov	r0, r9
   26342:	bl	25440 <print_extent_item@@Base>
   26346:	b.w	25988 <btrfs_print_leaf@@Base+0x268>
   2634a:	movs	r2, #1
   2634c:	b.n	2633e <btrfs_print_leaf@@Base+0xc1e>
   2634e:	ldr	r0, [pc, #568]	; (26588 <btrfs_print_leaf@@Base+0xe68>)
   26350:	add	r0, pc
   26352:	b.w	25ab8 <btrfs_print_leaf@@Base+0x398>
   26356:	ldr	r0, [pc, #564]	; (2658c <btrfs_print_leaf@@Base+0xe6c>)
   26358:	add	r0, pc
   2635a:	b.w	25ab8 <btrfs_print_leaf@@Base+0x398>
   2635e:	ldr	r1, [pc, #560]	; (26590 <btrfs_print_leaf@@Base+0xe70>)
   26360:	movs	r0, #1
   26362:	ldr.w	r5, [sl, #17]
   26366:	add	r1, pc
   26368:	blx	8a30 <__printf_chk@plt+0x4>
   2636c:	adds	r5, #101	; 0x65
   2636e:	ldr	r1, [sp, #100]	; 0x64
   26370:	add.w	r4, fp, r5
   26374:	movs	r3, #0
   26376:	str	r3, [sp, #0]
   26378:	ldr.w	r2, [fp, r5]
   2637c:	ldr	r3, [r4, #4]
   2637e:	ldr	r0, [r1, #0]
   26380:	bl	250b4 <print_objectid@@Base>
   26384:	ldr	r3, [r4, #24]
   26386:	ldr	r1, [pc, #524]	; (26594 <btrfs_print_leaf@@Base+0xe74>)
   26388:	str	r3, [sp, #8]
   2638a:	add	r1, pc
   2638c:	ldr	r2, [r4, #16]
   2638e:	ldr	r3, [r4, #20]
   26390:	strd	r2, r3, [sp]
   26394:	ldr	r2, [r4, #8]
   26396:	ldr	r3, [r4, #12]
   26398:	movs	r0, #1
   2639a:	blx	8a30 <__printf_chk@plt+0x4>
   2639e:	b.w	25988 <btrfs_print_leaf@@Base+0x268>
   263a2:	ldr.w	r2, [sl, #17]
   263a6:	ldr	r1, [pc, #496]	; (26598 <btrfs_print_leaf@@Base+0xe78>)
   263a8:	add	r2, fp
   263aa:	add	r1, pc
   263ac:	ldr.w	r2, [r2, #101]	; 0x65
   263b0:	b.n	26324 <btrfs_print_leaf@@Base+0xc04>
   263b2:	ldr	r0, [pc, #488]	; (2659c <btrfs_print_leaf@@Base+0xe7c>)
   263b4:	add	r0, pc
   263b6:	b.w	25ab8 <btrfs_print_leaf@@Base+0x398>
   263ba:	ldr	r0, [pc, #484]	; (265a0 <btrfs_print_leaf@@Base+0xe80>)
   263bc:	add	r0, pc
   263be:	b.w	25ab8 <btrfs_print_leaf@@Base+0x398>
   263c2:	ldr	r3, [sp, #104]	; 0x68
   263c4:	ldr.w	r0, [r3, #308]	; 0x134
   263c8:	bl	18510 <btrfs_super_csum_size@@Base>
   263cc:	mov	r1, r0
   263ce:	ldr	r0, [sp, #84]	; 0x54
   263d0:	bl	39420 <btrfs_util_strerror@@Base+0x18>
   263d4:	ldr	r3, [sp, #104]	; 0x68
   263d6:	ldr	r1, [pc, #460]	; (265a4 <btrfs_print_leaf@@Base+0xe84>)
   263d8:	ldr.w	r3, [r3, #388]	; 0x184
   263dc:	add	r1, pc
   263de:	muls	r0, r3
   263e0:	ldrd	r2, r3, [sp, #88]	; 0x58
   263e4:	adds	r2, r2, r0
   263e6:	adc.w	r3, r3, #0
   263ea:	strd	r2, r3, [sp]
   263ee:	str	r0, [sp, #8]
   263f0:	ldrd	r2, r3, [sp, #88]	; 0x58
   263f4:	b.n	26398 <btrfs_print_leaf@@Base+0xc78>
   263f6:	ldr	r1, [pc, #432]	; (265a8 <btrfs_print_leaf@@Base+0xe88>)
   263f8:	add	r1, pc
   263fa:	blx	87f0 <strcpy@plt>
   263fe:	cmp	r5, #1
   26400:	ldr	r2, [r4, #0]
   26402:	ldr	r3, [r4, #4]
   26404:	beq.w	265d6 <btrfs_print_leaf@@Base+0xeb6>
   26408:	cmp	r5, #2
   2640a:	beq.w	265de <btrfs_print_leaf@@Base+0xebe>
   2640e:	cmp	r5, #0
   26410:	beq.w	265e6 <btrfs_print_leaf@@Base+0xec6>
   26414:	ldr	r1, [pc, #404]	; (265ac <btrfs_print_leaf@@Base+0xe8c>)
   26416:	add	r1, pc
   26418:	strd	r5, r1, [sp]
   2641c:	movs	r0, #1
   2641e:	ldr	r1, [pc, #400]	; (265b0 <btrfs_print_leaf@@Base+0xe90>)
   26420:	add	r1, pc
   26422:	blx	8a30 <__printf_chk@plt+0x4>
   26426:	cmp	r5, #0
   26428:	bne.w	265ee <btrfs_print_leaf@@Base+0xece>
   2642c:	ldr.w	r2, [sl, #21]
   26430:	add	r3, sp, #940	; 0x3ac
   26432:	str	r3, [sp, #12]
   26434:	movs	r0, #1
   26436:	ldrb	r3, [r4, #16]
   26438:	subs	r2, #21
   2643a:	str	r3, [sp, #8]
   2643c:	ldr	r1, [r4, #8]
   2643e:	ldr	r3, [r4, #12]
   26440:	strd	r1, r3, [sp]
   26444:	ldr	r1, [pc, #364]	; (265b4 <btrfs_print_leaf@@Base+0xe94>)
   26446:	add	r1, pc
   26448:	blx	8a30 <__printf_chk@plt+0x4>
   2644c:	b.w	25988 <btrfs_print_leaf@@Base+0x268>
   26450:	ldr	r1, [pc, #356]	; (265b8 <btrfs_print_leaf@@Base+0xe98>)
   26452:	add	r1, pc
   26454:	b.n	263fa <btrfs_print_leaf@@Base+0xcda>
   26456:	ldr	r1, [pc, #356]	; (265bc <btrfs_print_leaf@@Base+0xe9c>)
   26458:	add	r1, pc
   2645a:	b.n	263fa <btrfs_print_leaf@@Base+0xcda>
   2645c:	ldr	r1, [pc, #352]	; (265c0 <btrfs_print_leaf@@Base+0xea0>)
   2645e:	add	r1, pc
   26460:	b.n	263fa <btrfs_print_leaf@@Base+0xcda>
   26462:	nop
   26464:	movw	r0, #43011	; 0xa803
   26468:	lsls	r0, r5, #8
   2646a:	movs	r0, r0
   2646c:			; <UNDEFINED> instruction: 0xf63e0003
   26470:	str	r5, [sp, #664]	; 0x298
   26472:	movs	r1, r0
   26474:	str	r7, [r7, #88]	; 0x58
   26476:	movs	r1, r0
   26478:	str	r3, [sp, #628]	; 0x274
   2647a:	movs	r1, r0
   2647c:	str	r5, [sp, #296]	; 0x128
   2647e:	movs	r1, r0
   26480:	lsls	r4, r3, #9
   26482:	movs	r0, r0
   26484:	str	r5, [sp, #288]	; 0x120
   26486:	movs	r1, r0
   26488:	str	r5, [sp, #692]	; 0x2b4
   2648a:	movs	r1, r0
   2648c:	ldr	r6, [sp, #204]	; 0xcc
   2648e:	movs	r1, r0
   26490:	str	r5, [sp, #24]
   26492:	movs	r1, r0
   26494:	str	r5, [sp, #216]	; 0xd8
   26496:	movs	r1, r0
   26498:			; <UNDEFINED> instruction: 0xf4cc0003
   2649c:	str	r4, [sp, #932]	; 0x3a4
   2649e:	movs	r1, r0
   264a0:	str	r4, [sp, #816]	; 0x330
   264a2:	movs	r1, r0
   264a4:	str	r4, [sp, #632]	; 0x278
   264a6:	movs	r1, r0
   264a8:	str	r5, [sp, #576]	; 0x240
   264aa:	movs	r1, r0
   264ac:	str	r5, [sp, #388]	; 0x184
   264ae:	movs	r1, r0
   264b0:	str	r3, [sp, #272]	; 0x110
   264b2:	movs	r1, r0
   264b4:	str	r4, [sp, #848]	; 0x350
   264b6:	movs	r1, r0
   264b8:	str	r4, [sp, #836]	; 0x344
   264ba:	movs	r1, r0
   264bc:	ldr	r4, [r3, r7]
   264be:	movs	r1, r0
   264c0:	str	r7, [sp, #284]	; 0x11c
   264c2:	movs	r1, r0
   264c4:	str	r1, [sp, #932]	; 0x3a4
   264c6:	movs	r1, r0
   264c8:	str	r5, [r1, #12]
   264ca:	movs	r1, r0
   264cc:	str	r1, [sp, #756]	; 0x2f4
   264ce:	movs	r1, r0
   264d0:	str	r7, [r2, #8]
   264d2:	movs	r1, r0
   264d4:	str	r1, [sp, #580]	; 0x244
   264d6:	movs	r1, r0
   264d8:	str	r1, [r4, #4]
   264da:	movs	r1, r0
   264dc:	str	r1, [sp, #400]	; 0x190
   264de:	movs	r1, r0
   264e0:	str	r3, [r5, #0]
   264e2:	movs	r1, r0
   264e4:	str	r1, [r3, #12]
   264e6:	movs	r1, r0
   264e8:	ldrsh	r5, [r6, r7]
   264ea:	movs	r1, r0
   264ec:	str	r1, [sp, #152]	; 0x98
   264ee:	movs	r1, r0
   264f0:	ldrsh	r7, [r7, r6]
   264f2:	movs	r1, r0
   264f4:	str	r0, [sp, #820]	; 0x334
   264f6:	movs	r1, r0
   264f8:	ldrsh	r1, [r1, r6]
   264fa:	movs	r1, r0
   264fc:	str	r0, [sp, #644]	; 0x284
   264fe:	movs	r1, r0
   26500:	ldrsh	r3, [r2, r5]
   26502:	movs	r1, r0
   26504:	str	r0, [sp, #456]	; 0x1c8
   26506:	movs	r1, r0
   26508:	ldrsh	r5, [r3, r4]
   2650a:	movs	r1, r0
   2650c:	str	r0, [sp, #268]	; 0x10c
   2650e:	movs	r1, r0
   26510:	ldrsh	r7, [r4, r3]
   26512:	movs	r1, r0
   26514:	str	r0, [sp, #84]	; 0x54
   26516:	movs	r1, r0
   26518:	ldrsh	r1, [r6, r2]
   2651a:	movs	r1, r0
   2651c:	ldrh	r0, [r7, #60]	; 0x3c
   2651e:	movs	r1, r0
   26520:	ldrh	r1, [r1, #62]	; 0x3e
   26522:	movs	r1, r0
   26524:	ldrh	r0, [r6, #62]	; 0x3e
   26526:	movs	r1, r0
   26528:	ldrh	r1, [r5, #62]	; 0x3e
   2652a:	movs	r1, r0
   2652c:	ldrh	r2, [r4, #62]	; 0x3e
   2652e:	movs	r1, r0
   26530:	ldrh	r3, [r3, #62]	; 0x3e
   26532:	movs	r1, r0
   26534:	ldrsb	r7, [r0, r6]
   26536:	movs	r1, r0
   26538:	ldrh	r0, [r0, #58]	; 0x3a
   2653a:	movs	r1, r0
   2653c:	b.n	263f8 <btrfs_print_leaf@@Base+0xcd8>
   2653e:	movs	r3, r0
   26540:	add	r4, pc, #200	; (adr r4, 2660c <btrfs_print_leaf@@Base+0xeec>)
   26542:	movs	r1, r0
   26544:	ldrh	r1, [r5, #54]	; 0x36
   26546:	movs	r1, r0
   26548:	ldrh	r5, [r7, #54]	; 0x36
   2654a:	movs	r1, r0
   2654c:	ldrh	r1, [r4, #54]	; 0x36
   2654e:	movs	r1, r0
   26550:	ldrh	r2, [r0, #54]	; 0x36
   26552:	movs	r1, r0
   26554:	ldrh	r1, [r0, #52]	; 0x34
   26556:	movs	r1, r0
   26558:	ldrh	r6, [r6, #50]	; 0x32
   2655a:	movs	r1, r0
   2655c:	ldrh	r6, [r0, #52]	; 0x34
   2655e:	movs	r1, r0
   26560:	ldrh	r6, [r0, #52]	; 0x34
   26562:	movs	r1, r0
   26564:	ldrh	r5, [r4, #48]	; 0x30
   26566:	movs	r1, r0
   26568:	ldrh	r5, [r1, #36]	; 0x24
   2656a:	movs	r1, r0
   2656c:	ldrh	r3, [r0, #36]	; 0x24
   2656e:	movs	r1, r0
   26570:	ldrh	r4, [r1, #48]	; 0x30
   26572:	movs	r1, r0
   26574:	ldrh	r1, [r7, #46]	; 0x2e
   26576:	movs	r1, r0
   26578:	ldrh	r0, [r7, #46]	; 0x2e
   2657a:	movs	r1, r0
   2657c:	ldrh	r6, [r5, #46]	; 0x2e
   2657e:	movs	r1, r0
   26580:	strh	r1, [r4, r7]
   26582:	movs	r1, r0
   26584:	ldrh	r3, [r1, #48]	; 0x30
   26586:	movs	r1, r0
   26588:	ldrh	r5, [r1, #46]	; 0x2e
   2658a:	movs	r1, r0
   2658c:	ldrh	r2, [r3, #46]	; 0x2e
   2658e:	movs	r1, r0
   26590:	ldrh	r4, [r4, #8]
   26592:	movs	r1, r0
   26594:	ldrh	r4, [r3, #8]
   26596:	movs	r1, r0
   26598:	ldrh	r7, [r3, #44]	; 0x2c
   2659a:	movs	r1, r0
   2659c:	ldrh	r5, [r6, #44]	; 0x2c
   2659e:	movs	r1, r0
   265a0:	ldrh	r2, [r1, #46]	; 0x2e
   265a2:	movs	r1, r0
   265a4:	ldrh	r6, [r6, #44]	; 0x2c
   265a6:	movs	r1, r0
   265a8:	strh	r1, [r3, r4]
   265aa:	movs	r1, r0
   265ac:	ldrh	r6, [r0, #8]
   265ae:	movs	r1, r0
   265b0:	ldrh	r7, [r4, #44]	; 0x2c
   265b2:	movs	r1, r0
   265b4:	ldrh	r3, [r4, #44]	; 0x2c
   265b6:	movs	r1, r0
   265b8:	ldrh	r7, [r4, #42]	; 0x2a
   265ba:	movs	r1, r0
   265bc:	ldrh	r6, [r4, #42]	; 0x2a
   265be:	movs	r1, r0
   265c0:	ldrh	r4, [r4, #42]	; 0x2a
   265c2:	movs	r1, r0
   265c4:	str	r3, [sp, #0]
   265c6:	movs	r2, #16
   265c8:	ldr.w	r3, [pc, #1172]	; 26a60 <btrfs_print_leaf@@Base+0x1340>
   265cc:	movs	r1, #1
   265ce:	add	r3, pc
   265d0:	blx	8994 <__sprintf_chk@plt>
   265d4:	b.n	263fe <btrfs_print_leaf@@Base+0xcde>
   265d6:	ldr.w	r1, [pc, #1164]	; 26a64 <btrfs_print_leaf@@Base+0x1344>
   265da:	add	r1, pc
   265dc:	b.n	26418 <btrfs_print_leaf@@Base+0xcf8>
   265de:	ldr.w	r1, [pc, #1160]	; 26a68 <btrfs_print_leaf@@Base+0x1348>
   265e2:	add	r1, pc
   265e4:	b.n	26418 <btrfs_print_leaf@@Base+0xcf8>
   265e6:	ldr.w	r1, [pc, #1156]	; 26a6c <btrfs_print_leaf@@Base+0x134c>
   265ea:	add	r1, pc
   265ec:	b.n	26418 <btrfs_print_leaf@@Base+0xcf8>
   265ee:	mov	r1, r4
   265f0:	mov	r3, r4
   265f2:	ldr.w	r0, [r1, #29]!
   265f6:	cmp	r5, #2
   265f8:	ldr.w	r2, [r3, #21]!
   265fc:	ldr	r1, [r1, #4]
   265fe:	ldr	r3, [r3, #4]
   26600:	strd	r0, r1, [sp]
   26604:	bne.n	26634 <btrfs_print_leaf@@Base+0xf14>
   26606:	ldr.w	r1, [pc, #1128]	; 26a70 <btrfs_print_leaf@@Base+0x1350>
   2660a:	movs	r0, #1
   2660c:	add	r1, pc
   2660e:	blx	8a30 <__printf_chk@plt+0x4>
   26612:	mov	r3, r4
   26614:	ldr.w	r0, [r4, #45]!
   26618:	ldr.w	r2, [r3, #37]!
   2661c:	ldr	r1, [r4, #4]
   2661e:	strd	r0, r1, [sp]
   26622:	movs	r0, #1
   26624:	ldr.w	r1, [pc, #1100]	; 26a74 <btrfs_print_leaf@@Base+0x1354>
   26628:	ldr	r3, [r3, #4]
   2662a:	add	r1, pc
   2662c:	blx	8a30 <__printf_chk@plt+0x4>
   26630:	b.w	25988 <btrfs_print_leaf@@Base+0x268>
   26634:	ldr.w	r1, [pc, #1088]	; 26a78 <btrfs_print_leaf@@Base+0x1358>
   26638:	movs	r0, #1
   2663a:	add	r1, pc
   2663c:	blx	8a30 <__printf_chk@plt+0x4>
   26640:	ldr	r0, [r4, #8]
   26642:	ldr	r1, [r4, #12]
   26644:	mov	r3, r4
   26646:	ldr.w	r2, [r3, #37]!
   2664a:	strd	r0, r1, [sp, #8]
   2664e:	mov	r1, r4
   26650:	ldr.w	r0, [r1, #45]!
   26654:	ldr	r1, [r1, #4]
   26656:	strd	r0, r1, [sp]
   2665a:	movs	r0, #1
   2665c:	ldr.w	r1, [pc, #1052]	; 26a7c <btrfs_print_leaf@@Base+0x135c>
   26660:	ldr	r3, [r3, #4]
   26662:	add	r1, pc
   26664:	blx	8a30 <__printf_chk@plt+0x4>
   26668:	ldr.w	r1, [pc, #1044]	; 26a80 <btrfs_print_leaf@@Base+0x1360>
   2666c:	ldrb	r2, [r4, #16]
   2666e:	add	r3, sp, #940	; 0x3ac
   26670:	add	r1, pc
   26672:	movs	r0, #1
   26674:	blx	8a30 <__printf_chk@plt+0x4>
   26678:	b.w	25988 <btrfs_print_leaf@@Base+0x268>
   2667c:	add	r4, sp, #272	; 0x110
   2667e:	add	r5, sp, #940	; 0x3ac
   26680:	movs	r3, #24
   26682:	mov	r2, r7
   26684:	mov	r1, r4
   26686:	mov	r0, r9
   26688:	bl	17a1a <read_extent_buffer@@Base>
   2668c:	mov.w	r2, #256	; 0x100
   26690:	movs	r1, #0
   26692:	mov	r0, r5
   26694:	blx	89bc <memset@plt+0x4>
   26698:	ldrd	r0, r1, [r4, #16]
   2669c:	mov	r2, r5
   2669e:	bl	24ae4 <btrfs_destroy_delayed_refs@@Base+0x100>
   266a2:	str	r5, [sp, #8]
   266a4:	ldrd	r2, r3, [r4, #8]
   266a8:	ldr	r1, [pc, #984]	; (26a84 <btrfs_print_leaf@@Base+0x1364>)
   266aa:	strd	r2, r3, [sp]
   266ae:	add	r1, pc
   266b0:	ldrd	r2, r3, [sp, #272]	; 0x110
   266b4:	b.n	26398 <btrfs_print_leaf@@Base+0xc78>
   266b6:	ldr.w	r2, [sl, #17]
   266ba:	ldr	r1, [pc, #972]	; (26a88 <btrfs_print_leaf@@Base+0x1368>)
   266bc:	adds	r2, #101	; 0x65
   266be:	add.w	r3, fp, r2
   266c2:	add	r1, pc
   266c4:	ldr.w	r2, [fp, r2]
   266c8:	ldr	r3, [r3, #4]
   266ca:	b.n	26672 <btrfs_print_leaf@@Base+0xf52>
   266cc:	ldr	r0, [pc, #956]	; (26a8c <btrfs_print_leaf@@Base+0x136c>)
   266ce:	add	r0, pc
   266d0:	b.w	25ab8 <btrfs_print_leaf@@Base+0x398>
   266d4:	ldr	r0, [pc, #952]	; (26a90 <btrfs_print_leaf@@Base+0x1370>)
   266d6:	add	r0, pc
   266d8:	b.w	25ab8 <btrfs_print_leaf@@Base+0x398>
   266dc:	mov	r1, r7
   266de:	mov	r0, r9
   266e0:	bl	24eb4 <print_chunk_item@@Base>
   266e4:	b.w	25988 <btrfs_print_leaf@@Base+0x268>
   266e8:	ldr.w	r4, [sl, #17]
   266ec:	add	r5, sp, #772	; 0x304
   266ee:	add	r6, sp, #940	; 0x3ac
   266f0:	movs	r3, #16
   266f2:	add.w	r2, r4, #133	; 0x85
   266f6:	mov	r1, r5
   266f8:	mov	r0, r9
   266fa:	adds	r4, #101	; 0x65
   266fc:	bl	17a1a <read_extent_buffer@@Base>
   26700:	mov	r1, r6
   26702:	mov	r0, r5
   26704:	blx	85c4 <uuid_unparse@plt>
   26708:	add.w	r3, fp, r4
   2670c:	str	r6, [sp, #24]
   2670e:	movs	r0, #1
   26710:	ldr	r1, [r3, #24]
   26712:	ldr	r2, [r3, #28]
   26714:	strd	r1, r2, [sp, #16]
   26718:	ldr	r1, [r3, #16]
   2671a:	ldr	r2, [r3, #20]
   2671c:	strd	r1, r2, [sp, #8]
   26720:	ldr	r1, [r3, #8]
   26722:	ldr	r2, [r3, #12]
   26724:	strd	r1, r2, [sp]
   26728:	ldr	r1, [pc, #872]	; (26a94 <btrfs_print_leaf@@Base+0x1374>)
   2672a:	ldr.w	r2, [fp, r4]
   2672e:	ldr	r3, [r3, #4]
   26730:	add	r1, pc
   26732:	blx	8a30 <__printf_chk@plt+0x4>
   26736:	b.w	25988 <btrfs_print_leaf@@Base+0x268>
   2673a:	add	r3, sp, #940	; 0x3ac
   2673c:	mov.w	r2, #256	; 0x100
   26740:	movs	r1, #0
   26742:	ldr.w	r5, [sl, #17]
   26746:	mov	r0, r3
   26748:	blx	89bc <memset@plt+0x4>
   2674c:	adds	r5, #101	; 0x65
   2674e:	add	r5, fp
   26750:	ldr	r4, [r5, #16]
   26752:	and.w	r2, r4, #1
   26756:	str	r2, [sp, #216]	; 0xd8
   26758:	movs	r2, #0
   2675a:	str	r2, [sp, #220]	; 0xdc
   2675c:	ldrd	r1, r2, [sp, #216]	; 0xd8
   26760:	orrs	r2, r1
   26762:	mov	r3, r0
   26764:	beq.n	267d6 <btrfs_print_leaf@@Base+0x10b6>
   26766:	ldr	r1, [pc, #816]	; (26a98 <btrfs_print_leaf@@Base+0x1378>)
   26768:	add	r1, pc
   2676a:	mov	r0, r3
   2676c:	blx	87f0 <strcpy@plt>
   26770:	and.w	r3, r4, #2
   26774:	str	r3, [sp, #224]	; 0xe0
   26776:	movs	r3, #0
   26778:	str	r3, [sp, #228]	; 0xe4
   2677a:	ldrd	r2, r3, [sp, #224]	; 0xe0
   2677e:	orrs	r3, r2
   26780:	beq.n	26790 <btrfs_print_leaf@@Base+0x1070>
   26782:	ldr	r1, [pc, #792]	; (26a9c <btrfs_print_leaf@@Base+0x137c>)
   26784:	add	r0, sp, #940	; 0x3ac
   26786:	mov.w	r2, #256	; 0x100
   2678a:	add	r1, pc
   2678c:	blx	8988 <__strcat_chk@plt>
   26790:	and.w	r3, r4, #4
   26794:	str	r3, [sp, #232]	; 0xe8
   26796:	movs	r3, #0
   26798:	str	r3, [sp, #236]	; 0xec
   2679a:	ldrd	r3, r4, [sp, #232]	; 0xe8
   2679e:	orrs	r3, r4
   267a0:	beq.n	267b0 <btrfs_print_leaf@@Base+0x1090>
   267a2:	ldr	r1, [pc, #764]	; (26aa0 <btrfs_print_leaf@@Base+0x1380>)
   267a4:	add	r0, sp, #940	; 0x3ac
   267a6:	mov.w	r2, #256	; 0x100
   267aa:	add	r1, pc
   267ac:	blx	8988 <__strcat_chk@plt>
   267b0:	ldr	r2, [r5, #24]
   267b2:	movs	r0, #1
   267b4:	ldr	r3, [r5, #28]
   267b6:	ldr	r1, [pc, #748]	; (26aa4 <btrfs_print_leaf@@Base+0x1384>)
   267b8:	strd	r2, r3, [sp, #16]
   267bc:	add	r3, sp, #940	; 0x3ac
   267be:	str	r3, [sp, #8]
   267c0:	add	r1, pc
   267c2:	ldr	r2, [r5, #8]
   267c4:	ldr	r3, [r5, #12]
   267c6:	strd	r2, r3, [sp]
   267ca:	ldr	r2, [r5, #0]
   267cc:	ldr	r3, [r5, #4]
   267ce:	blx	8a30 <__printf_chk@plt+0x4>
   267d2:	b.w	25988 <btrfs_print_leaf@@Base+0x268>
   267d6:	ldr	r1, [pc, #720]	; (26aa8 <btrfs_print_leaf@@Base+0x1388>)
   267d8:	add	r1, pc
   267da:	b.n	2676a <btrfs_print_leaf@@Base+0x104a>
   267dc:	ldr.w	r2, [sl, #17]
   267e0:	adds	r2, #101	; 0x65
   267e2:	add.w	r3, fp, r2
   267e6:	ldr	r0, [r3, #32]
   267e8:	ldr	r1, [r3, #36]	; 0x24
   267ea:	strd	r0, r1, [sp, #24]
   267ee:	ldr	r0, [r3, #24]
   267f0:	ldr	r1, [r3, #28]
   267f2:	strd	r0, r1, [sp, #16]
   267f6:	ldr	r0, [r3, #16]
   267f8:	ldr	r1, [r3, #20]
   267fa:	strd	r0, r1, [sp, #8]
   267fe:	ldr	r1, [r3, #12]
   26800:	ldr	r0, [r3, #8]
   26802:	strd	r0, r1, [sp]
   26806:	ldr	r1, [pc, #676]	; (26aac <btrfs_print_leaf@@Base+0x138c>)
   26808:	ldr.w	r2, [fp, r2]
   2680c:	ldr	r3, [r3, #4]
   2680e:	add	r1, pc
   26810:	movs	r0, #1
   26812:	blx	8a30 <__printf_chk@plt+0x4>
   26816:	b.w	25988 <btrfs_print_leaf@@Base+0x268>
   2681a:	ldr.w	r2, [sl, #17]
   2681e:	adds	r2, #101	; 0x65
   26820:	add.w	r3, fp, r2
   26824:	ldr	r0, [r3, #32]
   26826:	ldr	r1, [r3, #36]	; 0x24
   26828:	strd	r0, r1, [sp, #24]
   2682c:	ldr	r0, [r3, #24]
   2682e:	ldr	r1, [r3, #28]
   26830:	strd	r0, r1, [sp, #16]
   26834:	ldr	r0, [r3, #16]
   26836:	ldr	r1, [r3, #20]
   26838:	strd	r0, r1, [sp, #8]
   2683c:	ldr	r1, [r3, #12]
   2683e:	ldr	r0, [r3, #8]
   26840:	strd	r0, r1, [sp]
   26844:	ldr	r1, [pc, #616]	; (26ab0 <btrfs_print_leaf@@Base+0x1390>)
   26846:	ldr.w	r2, [fp, r2]
   2684a:	ldr	r3, [r3, #4]
   2684c:	add	r1, pc
   2684e:	b.n	26810 <btrfs_print_leaf@@Base+0x10f0>
   26850:	ldr.w	r4, [sl, #21]
   26854:	ldr.w	r5, [sl, #17]
   26858:	lsls	r3, r4, #29
   2685a:	add.w	r5, r5, #101	; 0x65
   2685e:	bne.n	2688a <btrfs_print_leaf@@Base+0x116a>
   26860:	ldr	r7, [pc, #592]	; (26ab4 <btrfs_print_leaf@@Base+0x1394>)
   26862:	add	r6, sp, #272	; 0x110
   26864:	add	r7, pc
   26866:	cmp	r4, #0
   26868:	beq.w	25988 <btrfs_print_leaf@@Base+0x268>
   2686c:	mov	r2, r5
   2686e:	movs	r3, #8
   26870:	mov	r1, r6
   26872:	mov	r0, r9
   26874:	bl	17a1a <read_extent_buffer@@Base>
   26878:	ldrd	r2, r3, [sp, #272]	; 0x110
   2687c:	mov	r1, r7
   2687e:	movs	r0, #1
   26880:	blx	8a30 <__printf_chk@plt+0x4>
   26884:	subs	r4, #8
   26886:	adds	r5, #8
   26888:	b.n	26866 <btrfs_print_leaf@@Base+0x1146>
   2688a:	ldr	r1, [pc, #556]	; (26ab8 <btrfs_print_leaf@@Base+0x1398>)
   2688c:	mov	r2, r4
   2688e:	add	r1, pc
   26890:	b.n	26324 <btrfs_print_leaf@@Base+0xc04>
   26892:	ldr.w	r3, [sl, #17]
   26896:	ldr	r1, [pc, #548]	; (26abc <btrfs_print_leaf@@Base+0x139c>)
   26898:	adds	r3, #101	; 0x65
   2689a:	ldr	r2, [sp, #84]	; 0x54
   2689c:	add	r3, fp
   2689e:	add	r1, pc
   268a0:	b.n	26672 <btrfs_print_leaf@@Base+0xf52>
   268a2:	ldr	r1, [pc, #540]	; (26ac0 <btrfs_print_leaf@@Base+0x13a0>)
   268a4:	movs	r0, #1
   268a6:	add	r1, pc
   268a8:	blx	8a30 <__printf_chk@plt+0x4>
   268ac:	ldr	r1, [sp, #100]	; 0x64
   268ae:	movs	r3, #249	; 0xf9
   268b0:	mov	r2, r4
   268b2:	str	r3, [sp, #0]
   268b4:	mov	r3, r5
   268b6:	ldr	r0, [r1, #0]
   268b8:	bl	250b4 <print_objectid@@Base>
   268bc:	ldr	r1, [pc, #516]	; (26ac4 <btrfs_print_leaf@@Base+0x13a4>)
   268be:	ldrd	r2, r3, [sp, #88]	; 0x58
   268c2:	movs	r0, #1
   268c4:	add	r1, pc
   268c6:	blx	8a30 <__printf_chk@plt+0x4>
   268ca:	orrs.w	r3, r4, r5
   268ce:	bne.n	26982 <btrfs_print_leaf@@Base+0x1262>
   268d0:	ldr	r0, [pc, #500]	; (26ac8 <btrfs_print_leaf@@Base+0x13a8>)
   268d2:	add	r0, pc
   268d4:	blx	8854 <puts@plt+0x4>
   268d8:	movs	r2, #0
   268da:	mov	r1, r7
   268dc:	mov	r0, r9
   268de:	bl	24a4c <btrfs_destroy_delayed_refs@@Base+0x68>
   268e2:	movs	r2, #1
   268e4:	mov	r4, r0
   268e6:	str	r1, [sp, #244]	; 0xf4
   268e8:	mov	r0, r9
   268ea:	mov	r1, r7
   268ec:	bl	24a4c <btrfs_destroy_delayed_refs@@Base+0x68>
   268f0:	movs	r2, #2
   268f2:	mov	r6, r0
   268f4:	mov	r5, r1
   268f6:	mov	r0, r9
   268f8:	mov	r1, r7
   268fa:	bl	24a4c <btrfs_destroy_delayed_refs@@Base+0x68>
   268fe:	movs	r2, #3
   26900:	mov	r8, r0
   26902:	mov	fp, r1
   26904:	mov	r0, r9
   26906:	mov	r1, r7
   26908:	bl	24a4c <btrfs_destroy_delayed_refs@@Base+0x68>
   2690c:	movs	r2, #4
   2690e:	str	r0, [sp, #96]	; 0x60
   26910:	mov	r0, r9
   26912:	str	r1, [sp, #88]	; 0x58
   26914:	mov	r1, r7
   26916:	bl	24a4c <btrfs_destroy_delayed_refs@@Base+0x68>
   2691a:	ldr	r3, [sp, #96]	; 0x60
   2691c:	mov	r2, r4
   2691e:	strd	r8, fp, [sp, #8]
   26922:	strd	r6, r5, [sp]
   26926:	str	r3, [sp, #16]
   26928:	ldr	r3, [sp, #88]	; 0x58
   2692a:	str	r3, [sp, #20]
   2692c:	ldr	r3, [sp, #244]	; 0xf4
   2692e:	strd	r0, r1, [sp, #24]
   26932:	movs	r0, #1
   26934:	ldr	r1, [pc, #404]	; (26acc <btrfs_print_leaf@@Base+0x13ac>)
   26936:	add	r1, pc
   26938:	blx	8a30 <__printf_chk@plt+0x4>
   2693c:	ldr	r3, [sp, #84]	; 0x54
   2693e:	cmp	r3, #40	; 0x28
   26940:	bls.w	25988 <btrfs_print_leaf@@Base+0x268>
   26944:	ldr	r1, [pc, #392]	; (26ad0 <btrfs_print_leaf@@Base+0x13b0>)
   26946:	sub.w	r2, r3, #40	; 0x28
   2694a:	movs	r0, #1
   2694c:	movs	r4, #5
   2694e:	add	r1, pc
   26950:	blx	8a30 <__printf_chk@plt+0x4>
   26954:	ldr	r2, [sp, #84]	; 0x54
   26956:	lsls	r3, r4, #3
   26958:	cmp.w	r2, r4, lsl #3
   2695c:	bls.w	25988 <btrfs_print_leaf@@Base+0x268>
   26960:	mov	r2, r4
   26962:	mov	r1, r7
   26964:	mov	r0, r9
   26966:	str	r3, [sp, #96]	; 0x60
   26968:	bl	24a4c <btrfs_destroy_delayed_refs@@Base+0x68>
   2696c:	mov	r2, r4
   2696e:	ldr	r3, [sp, #96]	; 0x60
   26970:	adds	r4, #1
   26972:	strd	r0, r1, [sp]
   26976:	movs	r0, #1
   26978:	vmov	r1, s21
   2697c:	blx	8a30 <__printf_chk@plt+0x4>
   26980:	b.n	26954 <btrfs_print_leaf@@Base+0x1234>
   26982:	ldr	r1, [pc, #336]	; (26ad4 <btrfs_print_leaf@@Base+0x13b4>)
   26984:	mov	r2, r4
   26986:	mov	r3, r5
   26988:	add	r1, pc
   2698a:	b.w	2614a <btrfs_print_leaf@@Base+0xa2a>
   2698e:	ldr	r1, [pc, #328]	; (26ad8 <btrfs_print_leaf@@Base+0x13b8>)
   26990:	movs	r0, #1
   26992:	add	r1, pc
   26994:	blx	8a30 <__printf_chk@plt+0x4>
   26998:	ldr	r1, [sp, #100]	; 0x64
   2699a:	movs	r3, #248	; 0xf8
   2699c:	mov	r2, r4
   2699e:	str	r3, [sp, #0]
   269a0:	mov	r3, r5
   269a2:	ldr	r0, [r1, #0]
   269a4:	bl	250b4 <print_objectid@@Base>
   269a8:	ldr	r1, [pc, #304]	; (26adc <btrfs_print_leaf@@Base+0x13bc>)
   269aa:	ldrd	r2, r3, [sp, #88]	; 0x58
   269ae:	movs	r0, #1
   269b0:	add	r1, pc
   269b2:	blx	8a30 <__printf_chk@plt+0x4>
   269b6:	mov.w	r3, #4294967295	; 0xffffffff
   269ba:	cmp	r5, r3
   269bc:	mvn.w	r2, #3
   269c0:	it	eq
   269c2:	cmpeq	r4, r2
   269c4:	bne.n	26a0e <btrfs_print_leaf@@Base+0x12ee>
   269c6:	add.w	r4, fp, r7
   269ca:	ldr	r1, [pc, #276]	; (26ae0 <btrfs_print_leaf@@Base+0x13c0>)
   269cc:	ldr.w	r2, [fp, r7]
   269d0:	movs	r0, #1
   269d2:	ldr	r3, [r4, #4]
   269d4:	add	r1, pc
   269d6:	blx	8a30 <__printf_chk@plt+0x4>
   269da:	ldr	r0, [pc, #264]	; (26ae4 <btrfs_print_leaf@@Base+0x13c4>)
   269dc:	add	r0, pc
   269de:	blx	8854 <puts@plt+0x4>
   269e2:	add.w	r0, r4, #8
   269e6:	bl	24c1c <btrfs_destroy_delayed_refs@@Base+0x238>
   269ea:	ldr	r0, [pc, #252]	; (26ae8 <btrfs_print_leaf@@Base+0x13c8>)
   269ec:	add	r0, pc
   269ee:	blx	8854 <puts@plt+0x4>
   269f2:	add.w	r0, r4, #144	; 0x90
   269f6:	bl	24c1c <btrfs_destroy_delayed_refs@@Base+0x238>
   269fa:	ldr	r0, [pc, #240]	; (26aec <btrfs_print_leaf@@Base+0x13cc>)
   269fc:	add	r0, pc
   269fe:	blx	8854 <puts@plt+0x4>
   26a02:	add.w	r0, r4, #280	; 0x118
   26a06:	bl	24c1c <btrfs_destroy_delayed_refs@@Base+0x238>
   26a0a:	b.w	25988 <btrfs_print_leaf@@Base+0x268>
   26a0e:	ldr	r1, [pc, #224]	; (26af0 <btrfs_print_leaf@@Base+0x13d0>)
   26a10:	mov	r2, r4
   26a12:	mov	r3, r5
   26a14:	add	r1, pc
   26a16:	b.w	2614a <btrfs_print_leaf@@Base+0xa2a>
   26a1a:	add	r2, sp, #940	; 0x3ac
   26a1c:	addw	r0, sp, #579	; 0x243
   26a20:	str	r2, [sp, #84]	; 0x54
   26a22:	mov	r1, r2
   26a24:	blx	85c4 <uuid_unparse@plt>
   26a28:	ldr	r1, [pc, #200]	; (26af4 <btrfs_print_leaf@@Base+0x13d4>)
   26a2a:	ldr	r2, [sp, #84]	; 0x54
   26a2c:	movs	r0, #1
   26a2e:	add	r1, pc
   26a30:	blx	8a30 <__printf_chk@plt+0x4>
   26a34:	b.n	2625c <btrfs_print_leaf@@Base+0xb3c>
   26a36:	add	r2, sp, #940	; 0x3ac
   26a38:	addw	r0, sp, #563	; 0x233
   26a3c:	str	r2, [sp, #84]	; 0x54
   26a3e:	mov	r1, r2
   26a40:	blx	85c4 <uuid_unparse@plt>
   26a44:	ldr	r1, [pc, #176]	; (26af8 <btrfs_print_leaf@@Base+0x13d8>)
   26a46:	ldr	r2, [sp, #84]	; 0x54
   26a48:	movs	r0, #1
   26a4a:	add	r1, pc
   26a4c:	blx	8a30 <__printf_chk@plt+0x4>
   26a50:	b.w	26246 <btrfs_print_leaf@@Base+0xb26>
   26a54:	addw	sp, sp, #1204	; 0x4b4
   26a58:	vpop	{d8-d10}
   26a5c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26a60:	strh	r4, [r5, #38]	; 0x26
   26a62:	movs	r1, r0
   26a64:	strh	r3, [r6, #56]	; 0x38
   26a66:	movs	r1, r0
   26a68:	strh	r2, [r4, #56]	; 0x38
   26a6a:	movs	r1, r0
   26a6c:	strh	r3, [r5, #56]	; 0x38
   26a6e:	movs	r1, r0
   26a70:	ldrh	r0, [r4, #32]
   26a72:	movs	r1, r0
   26a74:	ldrh	r2, [r5, #32]
   26a76:	movs	r1, r0
   26a78:	ldrh	r7, [r7, #32]
   26a7a:	movs	r1, r0
   26a7c:	ldrh	r5, [r7, #32]
   26a7e:	movs	r1, r0
   26a80:	ldrh	r3, [r3, #34]	; 0x22
   26a82:	movs	r1, r0
   26a84:	ldrh	r5, [r7, #32]
   26a86:	movs	r1, r0
   26a88:	ldrh	r7, [r3, #34]	; 0x22
   26a8a:	movs	r1, r0
   26a8c:	ldrh	r7, [r7, #34]	; 0x22
   26a8e:	movs	r1, r0
   26a90:	ldrh	r3, [r1, #36]	; 0x24
   26a92:	movs	r1, r0
   26a94:	ldrh	r4, [r1, #40]	; 0x28
   26a96:	movs	r1, r0
   26a98:	str	r2, [sp, #956]	; 0x3bc
   26a9a:	movs	r1, r0
   26a9c:	ldrh	r5, [r3, #40]	; 0x28
   26a9e:	movs	r1, r0
   26aa0:	ldrh	r7, [r0, #40]	; 0x28
   26aa2:	movs	r1, r0
   26aa4:	ldrh	r7, [r7, #38]	; 0x26
   26aa6:	movs	r1, r0
   26aa8:	ldrh	r3, [r1, #38]	; 0x26
   26aaa:	movs	r1, r0
   26aac:	ldrh	r4, [r4, #38]	; 0x26
   26aae:	movs	r1, r0
   26ab0:	ldrh	r1, [r2, #40]	; 0x28
   26ab2:	movs	r1, r0
   26ab4:	ldrh	r1, [r3, #42]	; 0x2a
   26ab6:	movs	r1, r0
   26ab8:	ldrsh	r6, [r2, r4]
   26aba:	movs	r1, r0
   26abc:	ldrh	r1, [r6, #40]	; 0x28
   26abe:	movs	r1, r0
   26ac0:	ldrh	r3, [r7, #40]	; 0x28
   26ac2:	movs	r1, r0
   26ac4:	strh	r0, [r2, #14]
   26ac6:	movs	r1, r0
   26ac8:	ldrh	r3, [r5, #40]	; 0x28
   26aca:	movs	r1, r0
   26acc:	ldrh	r6, [r2, #38]	; 0x26
   26ace:	movs	r1, r0
   26ad0:	ldrh	r5, [r2, #40]	; 0x28
   26ad2:	movs	r1, r0
   26ad4:	ldrh	r2, [r4, #40]	; 0x28
   26ad6:	movs	r1, r0
   26ad8:	ldrh	r1, [r0, #42]	; 0x2a
   26ada:	movs	r1, r0
   26adc:	strh	r4, [r4, #6]
   26ade:	movs	r1, r0
   26ae0:	ldrh	r2, [r3, #40]	; 0x28
   26ae2:	movs	r1, r0
   26ae4:	ldrh	r7, [r5, #40]	; 0x28
   26ae6:	movs	r1, r0
   26ae8:	ldrh	r6, [r4, #40]	; 0x28
   26aea:	movs	r1, r0
   26aec:	ldrh	r1, [r4, #40]	; 0x28
   26aee:	movs	r1, r0
   26af0:	ldrh	r2, [r2, #40]	; 0x28
   26af2:	movs	r1, r0
   26af4:	ldrh	r0, [r4, #40]	; 0x28
   26af6:	movs	r1, r0
   26af8:	ldrh	r0, [r3, #40]	; 0x28
   26afa:	movs	r1, r0

00026afc <btrfs_print_tree@@Base>:
   26afc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26b00:	cmp	r2, #1
   26b02:	vpush	{d8}
   26b06:	mov	r4, r0
   26b08:	ldr	r3, [pc, #688]	; (26dbc <btrfs_print_tree@@Base+0x2c0>)
   26b0a:	it	cs
   26b0c:	movcs	r2, #1
   26b0e:	mov	r9, r2
   26b10:	add	r3, pc
   26b12:	sub	sp, #148	; 0x94
   26b14:	str	r1, [sp, #44]	; 0x2c
   26b16:	ldr	r1, [pc, #680]	; (26dc0 <btrfs_print_tree@@Base+0x2c4>)
   26b18:	str	r3, [sp, #32]
   26b1a:	ldr	r3, [pc, #680]	; (26dc4 <btrfs_print_tree@@Base+0x2c8>)
   26b1c:	add	r1, pc
   26b1e:	ldr	r3, [r1, r3]
   26b20:	ldr	r3, [r3, #0]
   26b22:	str	r3, [sp, #140]	; 0x8c
   26b24:	mov.w	r3, #0
   26b28:	ldrb.w	r3, [r0, #196]	; 0xc4
   26b2c:	cbnz	r3, 26b48 <btrfs_print_tree@@Base+0x4c>
   26b2e:	bl	25720 <btrfs_print_leaf@@Base>
   26b32:	ldr	r2, [pc, #660]	; (26dc8 <btrfs_print_tree@@Base+0x2cc>)
   26b34:	ldr	r3, [pc, #652]	; (26dc4 <btrfs_print_tree@@Base+0x2c8>)
   26b36:	add	r2, pc
   26b38:	ldr	r3, [r2, r3]
   26b3a:	ldr	r2, [r3, #0]
   26b3c:	ldr	r3, [sp, #140]	; 0x8c
   26b3e:	eors	r2, r3
   26b40:	beq.w	26db2 <btrfs_print_tree@@Base+0x2b6>
   26b44:	blx	8708 <__stack_chk_fail@plt>
   26b48:	ldr	r3, [r0, #92]	; 0x5c
   26b4a:	str	r3, [sp, #36]	; 0x24
   26b4c:	ldr.w	r6, [r0, #192]	; 0xc0
   26b50:	bl	24e78 <btrfs_destroy_delayed_refs@@Base+0x494>
   26b54:	cmp	r0, r6
   26b56:	mov	r2, r0
   26b58:	bcs.n	26b64 <btrfs_print_tree@@Base+0x68>
   26b5a:	ldr	r0, [pc, #624]	; (26dcc <btrfs_print_tree@@Base+0x2d0>)
   26b5c:	mov	r1, r6
   26b5e:	add	r0, pc
   26b60:	bl	17b00 <__btrfs_warning@@Base>
   26b64:	mov	r0, r4
   26b66:	movs	r5, #0
   26b68:	bl	24e78 <btrfs_destroy_delayed_refs@@Base+0x494>
   26b6c:	ldr.w	r2, [r4, #176]	; 0xb0
   26b70:	ldr.w	r3, [r4, #180]	; 0xb4
   26b74:	add.w	r7, r4, #197	; 0xc5
   26b78:	ldr	r1, [pc, #596]	; (26dd0 <btrfs_print_tree@@Base+0x2d4>)
   26b7a:	add.w	fp, sp, #52	; 0x34
   26b7e:	mov	r8, r7
   26b80:	strd	r2, r3, [sp, #16]
   26b84:	add	r1, pc
   26b86:	subs	r0, r0, r6
   26b88:	strd	r6, r0, [sp, #4]
   26b8c:	ldrb.w	r3, [r4, #196]	; 0xc4
   26b90:	movs	r0, #1
   26b92:	str	r3, [sp, #0]
   26b94:	ldrd	r2, r3, [r4, #40]	; 0x28
   26b98:	blx	8a30 <__printf_chk@plt+0x4>
   26b9c:	ldr	r2, [sp, #32]
   26b9e:	ldr	r3, [pc, #564]	; (26dd4 <btrfs_print_tree@@Base+0x2d8>)
   26ba0:	ldr	r3, [r2, r3]
   26ba2:	str	r5, [sp, #0]
   26ba4:	str	r3, [sp, #28]
   26ba6:	ldr	r1, [sp, #28]
   26ba8:	ldr.w	r2, [r4, #184]	; 0xb8
   26bac:	ldr.w	r3, [r4, #188]	; 0xbc
   26bb0:	ldr	r0, [r1, #0]
   26bb2:	bl	250b4 <print_objectid@@Base>
   26bb6:	movs	r0, #10
   26bb8:	blx	89cc <putchar@plt+0x4>
   26bbc:	mov	r0, r4
   26bbe:	bl	24d28 <btrfs_destroy_delayed_refs@@Base+0x344>
   26bc2:	ldr	r3, [sp, #28]
   26bc4:	ldr	r0, [r3, #0]
   26bc6:	blx	85f4 <fflush@plt>
   26bca:	mov	r0, r4
   26bcc:	bl	24e78 <btrfs_destroy_delayed_refs@@Base+0x494>
   26bd0:	ldr	r3, [pc, #516]	; (26dd8 <btrfs_print_tree@@Base+0x2dc>)
   26bd2:	add	r3, pc
   26bd4:	vmov	s17, r3
   26bd8:	str	r0, [sp, #40]	; 0x28
   26bda:	cmp	r5, r6
   26bdc:	beq.n	26be4 <btrfs_print_tree@@Base+0xe8>
   26bde:	ldr	r3, [sp, #40]	; 0x28
   26be0:	cmp	r5, r3
   26be2:	bne.n	26c7c <btrfs_print_tree@@Base+0x180>
   26be4:	ldr	r3, [sp, #44]	; 0x2c
   26be6:	cmp	r3, #0
   26be8:	beq.n	26b32 <btrfs_print_tree@@Base+0x36>
   26bea:	ldr	r3, [sp, #36]	; 0x24
   26bec:	cmp	r3, #0
   26bee:	beq.n	26b32 <btrfs_print_tree@@Base+0x36>
   26bf0:	ldr.w	r8, [r4, #92]	; 0x5c
   26bf4:	ldrb.w	r6, [r4, #196]	; 0xc4
   26bf8:	cmp.w	r9, #0
   26bfc:	bne.w	26d06 <btrfs_print_tree@@Base+0x20a>
   26c00:	ldr.w	sl, [pc, #472]	; 26ddc <btrfs_print_tree@@Base+0x2e0>
   26c04:	ldr.w	fp, [pc, #472]	; 26de0 <btrfs_print_tree@@Base+0x2e4>
   26c08:	ldr.w	r3, [r4, #192]	; 0xc0
   26c0c:	add	sl, pc
   26c0e:	add	fp, pc
   26c10:	str	r3, [sp, #28]
   26c12:	ldr	r3, [sp, #28]
   26c14:	cmp	r3, r9
   26c16:	ble.n	26b32 <btrfs_print_tree@@Base+0x36>
   26c18:	mov	r0, r7
   26c1a:	mov	r1, r7
   26c1c:	ldr.w	r5, [r0, #25]!
   26c20:	ldr.w	r2, [r1, #17]!
   26c24:	ldr	r0, [r0, #4]
   26c26:	ldr	r3, [r1, #4]
   26c28:	str	r1, [sp, #36]	; 0x24
   26c2a:	strd	r5, r0, [sp]
   26c2e:	mov	r0, r8
   26c30:	bl	1dd84 <read_tree_block@@Base>
   26c34:	ldr	r1, [sp, #36]	; 0x24
   26c36:	mov	r5, r0
   26c38:	cmp	r0, #0
   26c3a:	beq.n	26cd0 <btrfs_print_tree@@Base+0x1d4>
   26c3c:	cmn.w	r0, #4096	; 0x1000
   26c40:	bhi.n	26cd0 <btrfs_print_tree@@Base+0x1d4>
   26c42:	ldr	r3, [r0, #84]	; 0x54
   26c44:	lsls	r3, r3, #29
   26c46:	bpl.n	26cd0 <btrfs_print_tree@@Base+0x1d4>
   26c48:	ldrb.w	r3, [r0, #196]	; 0xc4
   26c4c:	subs	r2, r6, #1
   26c4e:	cmp	r3, r2
   26c50:	beq.n	26cfc <btrfs_print_tree@@Base+0x200>
   26c52:	strd	r3, r2, [sp, #16]
   26c56:	ldr.w	r2, [r0, #144]	; 0x90
   26c5a:	ldr.w	r3, [r0, #148]	; 0x94
   26c5e:	mov	r0, fp
   26c60:	strd	r9, r6, [sp]
   26c64:	strd	r2, r3, [sp, #8]
   26c68:	ldr.w	r2, [r4, #144]	; 0x90
   26c6c:	ldr.w	r3, [r4, #148]	; 0x94
   26c70:	bl	17b00 <__btrfs_warning@@Base>
   26c74:	mov	r0, r5
   26c76:	bl	17320 <free_extent_buffer@@Base>
   26c7a:	b.n	26cf4 <btrfs_print_tree@@Base+0x1f8>
   26c7c:	mov	r3, r8
   26c7e:	add.w	r2, r5, r5, lsl #5
   26c82:	ldr.w	sl, [r3, #17]!
   26c86:	adds	r2, #101	; 0x65
   26c88:	mov	r1, fp
   26c8a:	mov	r0, r4
   26c8c:	adds	r5, #1
   26c8e:	ldr	r3, [r3, #4]
   26c90:	vmov	s16, r3
   26c94:	movs	r3, #17
   26c96:	bl	17a1a <read_extent_buffer@@Base>
   26c9a:	movs	r0, #9
   26c9c:	blx	89cc <putchar@plt+0x4>
   26ca0:	mov	r0, fp
   26ca2:	bl	25324 <btrfs_print_key@@Base>
   26ca6:	mov	r3, r8
   26ca8:	ldr.w	r2, [r3, #25]!
   26cac:	movs	r0, #1
   26cae:	vmov	r1, s17
   26cb2:	add.w	r8, r8, #33	; 0x21
   26cb6:	ldr	r3, [r3, #4]
   26cb8:	strd	r2, r3, [sp]
   26cbc:	mov	r2, sl
   26cbe:	vmov	r3, s16
   26cc2:	blx	8a30 <__printf_chk@plt+0x4>
   26cc6:	ldr	r3, [sp, #28]
   26cc8:	ldr	r0, [r3, #0]
   26cca:	blx	85f4 <fflush@plt>
   26cce:	b.n	26bda <btrfs_print_tree@@Base+0xde>
   26cd0:	ldr	r2, [sp, #32]
   26cd2:	ldr	r3, [pc, #272]	; (26de4 <btrfs_print_tree@@Base+0x2e8>)
   26cd4:	ldr.w	r0, [r4, #184]	; 0xb8
   26cd8:	ldr	r3, [r2, r3]
   26cda:	ldr.w	r2, [r4, #188]	; 0xbc
   26cde:	strd	r0, r2, [sp, #8]
   26ce2:	ldr	r0, [r1, #0]
   26ce4:	ldr	r2, [r1, #4]
   26ce6:	movs	r1, #1
   26ce8:	strd	r0, r2, [sp]
   26cec:	mov	r2, sl
   26cee:	ldr	r0, [r3, #0]
   26cf0:	blx	8a64 <__fprintf_chk@plt+0x4>
   26cf4:	add.w	r9, r9, #1
   26cf8:	adds	r7, #33	; 0x21
   26cfa:	b.n	26c12 <btrfs_print_tree@@Base+0x116>
   26cfc:	movs	r2, #0
   26cfe:	movs	r1, #1
   26d00:	bl	26afc <btrfs_print_tree@@Base>
   26d04:	b.n	26c74 <btrfs_print_tree@@Base+0x178>
   26d06:	cmp	r6, #0
   26d08:	beq.w	26b32 <btrfs_print_tree@@Base+0x36>
   26d0c:	add	r5, sp, #72	; 0x48
   26d0e:	subs	r7, r6, #1
   26d10:	add.w	sl, r5, r6, lsl #2
   26d14:	mov.w	fp, #0
   26d18:	mov	r0, r5
   26d1a:	bl	18548 <btrfs_init_path@@Base>
   26d1e:	ldr	r3, [r4, #80]	; 0x50
   26d20:	mov	r9, sl
   26d22:	adds	r3, #1
   26d24:	str	r3, [r4, #80]	; 0x50
   26d26:	add	r3, sp, #144	; 0x90
   26d28:	add.w	r3, r3, r6, lsl #2
   26d2c:	str.w	r4, [r3, #-72]
   26d30:	mov	r3, r5
   26d32:	movs	r4, #0
   26d34:	strb.w	r7, [sp, #137]	; 0x89
   26d38:	str.w	fp, [r3, #32]
   26d3c:	ldr.w	r0, [r3], #4
   26d40:	cbz	r0, 26d4a <btrfs_print_tree@@Base+0x24e>
   26d42:	str	r3, [sp, #28]
   26d44:	bl	17320 <free_extent_buffer@@Base>
   26d48:	ldr	r3, [sp, #28]
   26d4a:	adds	r4, #1
   26d4c:	cmp	r4, r6
   26d4e:	blt.n	26d38 <btrfs_print_tree@@Base+0x23c>
   26d50:	mov	r4, sl
   26d52:	mov	r3, r6
   26d54:	ldrb.w	r2, [sp, #137]	; 0x89
   26d58:	cmp	r3, r2
   26d5a:	bgt.n	26d82 <btrfs_print_tree@@Base+0x286>
   26d5c:	ldr.w	r0, [r9, #-4]
   26d60:	movs	r2, #1
   26d62:	movs	r1, #0
   26d64:	bl	26afc <btrfs_print_tree@@Base>
   26d68:	mov	r1, r5
   26d6a:	mov	r0, r8
   26d6c:	bl	1bd70 <btrfs_next_sibling_tree_block@@Base>
   26d70:	cmp	r0, #0
   26d72:	blt.n	26d98 <btrfs_print_tree@@Base+0x29c>
   26d74:	beq.n	26d5c <btrfs_print_tree@@Base+0x260>
   26d76:	subs	r7, #1
   26d78:	sub.w	r9, r9, #4
   26d7c:	adds	r3, r7, #1
   26d7e:	bne.n	26d30 <btrfs_print_tree@@Base+0x234>
   26d80:	b.n	26d98 <btrfs_print_tree@@Base+0x29c>
   26d82:	ldr	r1, [r4, #0]
   26d84:	movs	r2, #0
   26d86:	str.w	fp, [r4, #32]
   26d8a:	mov	r0, r8
   26d8c:	str	r3, [sp, #28]
   26d8e:	bl	1930e <read_node_slot@@Base>
   26d92:	subs	r4, #4
   26d94:	ldr	r3, [sp, #28]
   26d96:	cbnz	r0, 26da0 <btrfs_print_tree@@Base+0x2a4>
   26d98:	mov	r0, r5
   26d9a:	bl	18558 <btrfs_release_path@@Base>
   26d9e:	b.n	26b32 <btrfs_print_tree@@Base+0x36>
   26da0:	cmn.w	r0, #4096	; 0x1000
   26da4:	bhi.n	26d98 <btrfs_print_tree@@Base+0x29c>
   26da6:	ldr	r2, [r0, #84]	; 0x54
   26da8:	lsls	r2, r2, #29
   26daa:	bpl.n	26d98 <btrfs_print_tree@@Base+0x29c>
   26dac:	subs	r3, #1
   26dae:	str	r0, [r4, #0]
   26db0:	b.n	26d54 <btrfs_print_tree@@Base+0x258>
   26db2:	add	sp, #148	; 0x94
   26db4:	vpop	{d8}
   26db8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26dbc:	b.n	272a0 <btrfs_dump_free_space@@Base+0x7a>
   26dbe:	movs	r3, r0
   26dc0:	b.n	2728c <btrfs_dump_free_space@@Base+0x66>
   26dc2:	movs	r3, r0
   26dc4:	lsls	r0, r5, #8
   26dc6:	movs	r0, r0
   26dc8:	b.n	27260 <btrfs_dump_free_space@@Base+0x3a>
   26dca:	movs	r3, r0
   26dcc:	ldrh	r6, [r2, #32]
   26dce:	movs	r1, r0
   26dd0:	ldrh	r2, [r5, #32]
   26dd2:	movs	r1, r0
   26dd4:	lsls	r4, r3, #9
   26dd6:	movs	r0, r0
   26dd8:	ldrh	r7, [r2, #32]
   26dda:	movs	r1, r0
   26ddc:	ldrh	r3, [r6, #30]
   26dde:	movs	r1, r0
   26de0:	ldrh	r3, [r2, #32]
   26de2:	movs	r1, r0
   26de4:	lsls	r0, r7, #8
   26de6:	movs	r0, r0
   26de8:	ldr	r3, [r0, #0]
   26dea:	cbz	r3, 26df2 <btrfs_print_tree@@Base+0x2f6>
   26dec:	movs	r3, #0
   26dee:	strd	r3, r3, [r0]
   26df2:	bx	lr
   26df4:	push	{r4, r5, r6, lr}
   26df6:	lsrs	r4, r2, #5
   26df8:	and.w	r6, r2, #31
   26dfc:	bic.w	r2, r2, #31
   26e00:	ldr.w	r5, [r0, r4, lsl #2]
   26e04:	mov.w	r4, #4294967295	; 0xffffffff
   26e08:	lsls	r4, r6
   26e0a:	eors	r5, r3
   26e0c:	ands	r4, r5
   26e0e:	cbz	r4, 26e44 <btrfs_print_tree@@Base+0x348>
   26e10:	uxth	r3, r4
   26e12:	cbnz	r3, 26e54 <btrfs_print_tree@@Base+0x358>
   26e14:	lsrs	r4, r4, #16
   26e16:	movs	r3, #16
   26e18:	tst.w	r4, #255	; 0xff
   26e1c:	itt	eq
   26e1e:	lsreq	r4, r4, #8
   26e20:	addeq	r3, #8
   26e22:	lsls	r6, r4, #28
   26e24:	itt	eq
   26e26:	lsreq	r4, r4, #4
   26e28:	addeq	r3, #4
   26e2a:	lsls	r5, r4, #30
   26e2c:	itt	eq
   26e2e:	lsreq	r4, r4, #2
   26e30:	addeq	r3, #2
   26e32:	lsls	r0, r4, #31
   26e34:	it	pl
   26e36:	addpl	r3, #1
   26e38:	add	r3, r2
   26e3a:	cmp	r1, r3
   26e3c:	it	cs
   26e3e:	movcs	r1, r3
   26e40:	mov	r0, r1
   26e42:	pop	{r4, r5, r6, pc}
   26e44:	adds	r2, #32
   26e46:	cmp	r2, r1
   26e48:	bcs.n	26e40 <btrfs_print_tree@@Base+0x344>
   26e4a:	lsrs	r4, r2, #5
   26e4c:	ldr.w	r4, [r0, r4, lsl #2]
   26e50:	eors	r4, r3
   26e52:	b.n	26e0e <btrfs_print_tree@@Base+0x312>
   26e54:	movs	r3, #0
   26e56:	b.n	26e18 <btrfs_print_tree@@Base+0x31c>
   26e58:	ldr.w	ip, [pc, #104]	; 26ec4 <btrfs_print_tree@@Base+0x3c8>
   26e5c:	push	{r4, r5, lr}
   26e5e:	add	ip, pc
   26e60:	ldr	r5, [pc, #100]	; (26ec8 <btrfs_print_tree@@Base+0x3cc>)
   26e62:	sub	sp, #92	; 0x5c
   26e64:	ldr	r4, [pc, #100]	; (26ecc <btrfs_print_tree@@Base+0x3d0>)
   26e66:	ldr.w	r5, [ip, r5]
   26e6a:	add	r4, pc
   26e6c:	ldr	r5, [r5, #0]
   26e6e:	str	r5, [sp, #84]	; 0x54
   26e70:	mov.w	r5, #0
   26e74:	cbz	r3, 26eaa <btrfs_print_tree@@Base+0x3ae>
   26e76:	ldr	r5, [pc, #88]	; (26ed0 <btrfs_print_tree@@Base+0x3d4>)
   26e78:	ldr	r4, [r4, r5]
   26e7a:	strd	r2, r1, [sp]
   26e7e:	movs	r1, #1
   26e80:	strd	r0, r3, [sp, #8]
   26e84:	ldr	r2, [pc, #76]	; (26ed4 <btrfs_print_tree@@Base+0x3d8>)
   26e86:	ldr	r3, [pc, #80]	; (26ed8 <btrfs_print_tree@@Base+0x3dc>)
   26e88:	ldr	r0, [r4, #0]
   26e8a:	add	r4, sp, #20
   26e8c:	add	r3, pc
   26e8e:	add	r2, pc
   26e90:	blx	8a64 <__fprintf_chk@plt+0x4>
   26e94:	movs	r1, #16
   26e96:	mov	r0, r4
   26e98:	blx	88bc <backtrace@plt>
   26e9c:	movs	r2, #2
   26e9e:	mov	r1, r0
   26ea0:	mov	r0, r4
   26ea2:	blx	8bcc <backtrace_symbols_fd@plt>
   26ea6:	blx	8b84 <abort@plt>
   26eaa:	ldr	r2, [pc, #48]	; (26edc <btrfs_print_tree@@Base+0x3e0>)
   26eac:	ldr	r3, [pc, #24]	; (26ec8 <btrfs_print_tree@@Base+0x3cc>)
   26eae:	add	r2, pc
   26eb0:	ldr	r3, [r2, r3]
   26eb2:	ldr	r2, [r3, #0]
   26eb4:	ldr	r3, [sp, #84]	; 0x54
   26eb6:	eors	r2, r3
   26eb8:	beq.n	26ebe <btrfs_print_tree@@Base+0x3c2>
   26eba:	blx	8708 <__stack_chk_fail@plt>
   26ebe:	add	sp, #92	; 0x5c
   26ec0:	pop	{r4, r5, pc}
   26ec2:	nop
   26ec4:	svc	34	; 0x22
   26ec6:	movs	r3, r0
   26ec8:	lsls	r0, r5, #8
   26eca:	movs	r0, r0
   26ecc:	svc	22
   26ece:	movs	r3, r0
   26ed0:	lsls	r0, r7, #8
   26ed2:	movs	r0, r0
   26ed4:	adds	r0, #20
   26ed6:	movs	r1, r0
   26ed8:	ldrh	r1, [r4, #34]	; 0x22
   26eda:	movs	r1, r0
   26edc:	udf	#210	; 0xd2
   26ede:	movs	r3, r0
   26ee0:	push	{r3, r4, r5, lr}
   26ee2:	mov	r4, r0
   26ee4:	ldrd	r5, r3, [r0, #32]
   26ee8:	movs	r2, #83	; 0x53
   26eea:	ldr	r1, [pc, #56]	; (26f24 <btrfs_print_tree@@Base+0x428>)
   26eec:	cmp	r5, r3
   26eee:	ldr	r0, [pc, #56]	; (26f28 <btrfs_print_tree@@Base+0x42c>)
   26ef0:	add	r1, pc
   26ef2:	ite	lt
   26ef4:	movlt	r3, #0
   26ef6:	movge	r3, #1
   26ef8:	add	r0, pc
   26efa:	bl	26e58 <btrfs_print_tree@@Base+0x35c>
   26efe:	adds	r3, r5, #1
   26f00:	str	r3, [r4, #32]
   26f02:	ldr	r3, [r4, #12]
   26f04:	ldr	r2, [r4, #8]
   26f06:	ldr.w	r1, [r3, #464]	; 0x1d0
   26f0a:	ldr.w	r1, [r1, #388]	; 0x184
   26f0e:	mla	r5, r1, r5, r2
   26f12:	strd	r5, r5, [r4]
   26f16:	ldr.w	r3, [r3, #464]	; 0x1d0
   26f1a:	ldr.w	r3, [r3, #388]	; 0x184
   26f1e:	str	r3, [r4, #16]
   26f20:	pop	{r3, r4, r5, pc}
   26f22:	nop
   26f24:	str	r1, [sp, #244]	; 0xf4
   26f26:	movs	r1, r0
   26f28:	ldrh	r0, [r1, #32]
   26f2a:	movs	r1, r0
   26f2c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   26f2e:	mov	r4, r0
   26f30:	ldr	r2, [pc, #144]	; (26fc4 <btrfs_print_tree@@Base+0x4c8>)
   26f32:	ldr	r3, [pc, #148]	; (26fc8 <btrfs_print_tree@@Base+0x4cc>)
   26f34:	add	r2, pc
   26f36:	ldr	r6, [pc, #148]	; (26fcc <btrfs_print_tree@@Base+0x4d0>)
   26f38:	ldr	r3, [r2, r3]
   26f3a:	add	r6, pc
   26f3c:	ldr	r3, [r3, #0]
   26f3e:	str	r3, [sp, #4]
   26f40:	mov.w	r3, #0
   26f44:	mov.w	r3, #4294967295	; 0xffffffff
   26f48:	str	r3, [sp, #0]
   26f4a:	ldrb.w	r3, [r0, #40]	; 0x28
   26f4e:	ands.w	r5, r3, #1
   26f52:	bne.n	26f5c <btrfs_print_tree@@Base+0x460>
   26f54:	bl	26ee0 <btrfs_print_tree@@Base+0x3e4>
   26f58:	movs	r0, #0
   26f5a:	b.n	26fa6 <btrfs_print_tree@@Base+0x4aa>
   26f5c:	cbnz	r1, 26fba <btrfs_print_tree@@Base+0x4be>
   26f5e:	ldr	r5, [r0, #36]	; 0x24
   26f60:	lsls	r5, r5, #2
   26f62:	ldr	r3, [r4, #8]
   26f64:	mov	r0, r4
   26f66:	ldr.w	r7, [r3, r1, lsl #2]
   26f6a:	bl	26ee0 <btrfs_print_tree@@Base+0x3e4>
   26f6e:	ldr	r3, [r4, #12]
   26f70:	mov.w	r0, #4294967295	; 0xffffffff
   26f74:	ldr	r1, [r4, #4]
   26f76:	ldr.w	r3, [r3, #464]	; 0x1d0
   26f7a:	add	r1, r5
   26f7c:	ldr.w	r2, [r3, #388]	; 0x184
   26f80:	subs	r2, r2, r5
   26f82:	bl	17afa <crc32c_le@@Base>
   26f86:	mvns	r0, r0
   26f88:	cmp	r0, r7
   26f8a:	str	r0, [sp, #0]
   26f8c:	beq.n	26f58 <btrfs_print_tree@@Base+0x45c>
   26f8e:	ldr	r3, [pc, #64]	; (26fd0 <btrfs_print_tree@@Base+0x4d4>)
   26f90:	ldr	r0, [pc, #64]	; (26fd4 <btrfs_print_tree@@Base+0x4d8>)
   26f92:	ldr	r3, [r6, r3]
   26f94:	add	r0, pc
   26f96:	ldr	r1, [r3, #0]
   26f98:	blx	8b6c <fputs@plt+0x4>
   26f9c:	mov	r0, r4
   26f9e:	bl	26de8 <btrfs_print_tree@@Base+0x2ec>
   26fa2:	mvn.w	r0, #4
   26fa6:	ldr	r2, [pc, #48]	; (26fd8 <btrfs_print_tree@@Base+0x4dc>)
   26fa8:	ldr	r3, [pc, #28]	; (26fc8 <btrfs_print_tree@@Base+0x4cc>)
   26faa:	add	r2, pc
   26fac:	ldr	r3, [r2, r3]
   26fae:	ldr	r2, [r3, #0]
   26fb0:	ldr	r3, [sp, #4]
   26fb2:	eors	r2, r3
   26fb4:	beq.n	26fbe <btrfs_print_tree@@Base+0x4c2>
   26fb6:	blx	8708 <__stack_chk_fail@plt>
   26fba:	movs	r5, #0
   26fbc:	b.n	26f62 <btrfs_print_tree@@Base+0x466>
   26fbe:	add	sp, #12
   26fc0:	pop	{r4, r5, r6, r7, pc}
   26fc2:	nop
   26fc4:	udf	#76	; 0x4c
   26fc6:	movs	r3, r0
   26fc8:	lsls	r0, r5, #8
   26fca:	movs	r0, r0
   26fcc:	udf	#70	; 0x46
   26fce:	movs	r3, r0
   26fd0:	lsls	r0, r7, #8
   26fd2:	movs	r0, r0
   26fd4:	ldrh	r7, [r1, #28]
   26fd6:	movs	r1, r0
   26fd8:	ble.n	26f88 <btrfs_print_tree@@Base+0x48c>
   26fda:	movs	r3, r0
   26fdc:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   26fe0:	mov	sl, r0
   26fe2:	ldr	r4, [r0, #0]
   26fe4:	mov	r8, r2
   26fe6:	mov	r9, r3
   26fe8:	movs	r5, #0
   26fea:	cbz	r4, 27028 <btrfs_print_tree@@Base+0x52c>
   26fec:	ldrd	r2, r3, [r4, #16]
   26ff0:	cmp	r9, r3
   26ff2:	it	eq
   26ff4:	cmpeq	r8, r2
   26ff6:	bcs.n	27000 <btrfs_print_tree@@Base+0x504>
   26ff8:	ldr	r3, [r4, #8]
   26ffa:	mov	r5, r4
   26ffc:	mov	r4, r3
   26ffe:	b.n	26fea <btrfs_print_tree@@Base+0x4ee>
   27000:	cmp	r3, r9
   27002:	it	eq
   27004:	cmpeq	r2, r8
   27006:	bcs.n	270ba <btrfs_print_tree@@Base+0x5be>
   27008:	ldr	r3, [r4, #4]
   2700a:	b.n	26ffa <btrfs_print_tree@@Base+0x4fe>
   2700c:	ldrd	r2, r1, [r5, #24]
   27010:	ldrd	r3, r0, [r5, #16]
   27014:	adds	r3, r3, r2
   27016:	str	r3, [sp, #8]
   27018:	adc.w	r3, r0, r1
   2701c:	str	r3, [sp, #12]
   2701e:	ldrd	r2, r3, [sp, #8]
   27022:	b.n	270ae <btrfs_print_tree@@Base+0x5b2>
   27024:	mov	r4, r0
   27026:	b.n	270e2 <btrfs_print_tree@@Base+0x5e6>
   27028:	cmp	r5, #0
   2702a:	beq.n	270e2 <btrfs_print_tree@@Base+0x5e6>
   2702c:	ldrd	r2, r3, [r5, #16]
   27030:	ldr.w	r6, [sl, #44]	; 0x2c
   27034:	cmp	r9, r3
   27036:	it	eq
   27038:	cmpeq	r8, r2
   2703a:	bcs.n	2706c <btrfs_print_tree@@Base+0x570>
   2703c:	mov	r0, r5
   2703e:	bl	13c92 <rb_prev@@Base>
   27042:	mov	r5, r0
   27044:	cmp	r0, #0
   27046:	beq.n	270e2 <btrfs_print_tree@@Base+0x5e6>
   27048:	ldrd	r2, r3, [r0, #16]
   2704c:	ldr	r1, [pc, #156]	; (270ec <btrfs_print_tree@@Base+0x5f0>)
   2704e:	cmp	r9, r3
   27050:	ldr	r0, [pc, #156]	; (270f0 <btrfs_print_tree@@Base+0x5f4>)
   27052:	it	eq
   27054:	cmpeq	r8, r2
   27056:	add	r1, pc
   27058:	add.w	r1, r1, #16
   2705c:	add	r0, pc
   2705e:	ite	cc
   27060:	movcc	r3, #1
   27062:	movcs	r3, #0
   27064:	mov.w	r2, #628	; 0x274
   27068:	bl	26e58 <btrfs_print_tree@@Base+0x35c>
   2706c:	ldr	r3, [r5, #32]
   2706e:	cmp	r3, #0
   27070:	beq.n	2700c <btrfs_print_tree@@Base+0x510>
   27072:	mov	r0, r5
   27074:	bl	13c92 <rb_prev@@Base>
   27078:	cbz	r0, 2709c <btrfs_print_tree@@Base+0x5a0>
   2707a:	ldr	r3, [r0, #32]
   2707c:	cbnz	r3, 2709c <btrfs_print_tree@@Base+0x5a0>
   2707e:	ldrd	r2, r1, [r0, #24]
   27082:	ldrd	r3, r7, [r0, #16]
   27086:	adds	r3, r3, r2
   27088:	str	r3, [sp, #0]
   2708a:	adc.w	r3, r7, r1
   2708e:	str	r3, [sp, #4]
   27090:	ldrd	r2, r3, [sp]
   27094:	cmp	r9, r3
   27096:	it	eq
   27098:	cmpeq	r8, r2
   2709a:	bcc.n	27024 <btrfs_print_tree@@Base+0x528>
   2709c:	ldr.w	r3, [sl, #28]
   270a0:	muls	r6, r3
   270a2:	ldrd	r2, r3, [r5, #16]
   270a6:	lsls	r6, r6, #3
   270a8:	adds	r2, r2, r6
   270aa:	adc.w	r3, r3, #0
   270ae:	cmp	r9, r3
   270b0:	it	eq
   270b2:	cmpeq	r8, r2
   270b4:	it	cc
   270b6:	movcc	r4, r5
   270b8:	b.n	270e2 <btrfs_print_tree@@Base+0x5e6>
   270ba:	ldr	r3, [r4, #32]
   270bc:	cbz	r3, 270e2 <btrfs_print_tree@@Base+0x5e6>
   270be:	mov	r0, r4
   270c0:	bl	13c92 <rb_prev@@Base>
   270c4:	cbz	r0, 270e2 <btrfs_print_tree@@Base+0x5e6>
   270c6:	ldr	r3, [r0, #32]
   270c8:	cbnz	r3, 270e2 <btrfs_print_tree@@Base+0x5e6>
   270ca:	ldrd	r3, r5, [r0, #16]
   270ce:	ldrd	r2, r1, [r0, #24]
   270d2:	adds	r6, r3, r2
   270d4:	adc.w	r7, r5, r1
   270d8:	cmp	r9, r7
   270da:	it	eq
   270dc:	cmpeq	r8, r6
   270de:	it	cc
   270e0:	movcc	r4, r0
   270e2:	mov	r0, r4
   270e4:	add	sp, #16
   270e6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   270ea:	nop
   270ec:	ldrh	r7, [r2, #62]	; 0x3e
   270ee:	movs	r1, r0
   270f0:	ldrh	r1, [r6, #22]
   270f2:	movs	r1, r0
   270f4:	push	{r3, r4, r5, r6, r7, lr}
   270f6:	mov	r6, r0
   270f8:	ldr	r7, [r1, #32]
   270fa:	mov	r5, r1
   270fc:	cbnz	r7, 27154 <btrfs_print_tree@@Base+0x658>
   270fe:	ldrd	r2, r3, [r1, #24]
   27102:	orrs	r3, r2
   27104:	ite	eq
   27106:	moveq	r3, #1
   27108:	movne	r3, #0
   2710a:	ldr	r1, [pc, #128]	; (2718c <btrfs_print_tree@@Base+0x690>)
   2710c:	movw	r2, #685	; 0x2ad
   27110:	ldr	r0, [pc, #124]	; (27190 <btrfs_print_tree@@Base+0x694>)
   27112:	add	r1, pc
   27114:	adds	r1, #35	; 0x23
   27116:	add	r0, pc
   27118:	bl	26e58 <btrfs_print_tree@@Base+0x35c>
   2711c:	ldrd	r0, r1, [r5, #16]
   27120:	mov	r3, r6
   27122:	movs	r2, #0
   27124:	ldr	r4, [r3, #0]
   27126:	cbnz	r4, 27158 <btrfs_print_tree@@Base+0x65c>
   27128:	strd	r2, r4, [r5]
   2712c:	mov	r1, r6
   2712e:	mov	r0, r5
   27130:	str	r4, [r5, #8]
   27132:	str	r5, [r3, #0]
   27134:	bl	1392a <rb_insert_color@@Base>
   27138:	ldrd	r1, r0, [r5, #24]
   2713c:	ldrd	r3, r2, [r6, #8]
   27140:	adds	r3, r3, r1
   27142:	adc.w	r2, r0, r2
   27146:	strd	r3, r2, [r6, #8]
   2714a:	ldr	r3, [r6, #20]
   2714c:	mov	r0, r4
   2714e:	adds	r3, #1
   27150:	str	r3, [r6, #20]
   27152:	pop	{r3, r4, r5, r6, r7, pc}
   27154:	movs	r3, #0
   27156:	b.n	2710a <btrfs_print_tree@@Base+0x60e>
   27158:	ldrd	r2, r3, [r4, #16]
   2715c:	cmp	r1, r3
   2715e:	it	eq
   27160:	cmpeq	r0, r2
   27162:	bcs.n	2716a <btrfs_print_tree@@Base+0x66e>
   27164:	add.w	r3, r4, #8
   27168:	b.n	27174 <btrfs_print_tree@@Base+0x678>
   2716a:	cmp	r3, r1
   2716c:	it	eq
   2716e:	cmpeq	r2, r0
   27170:	bcs.n	27178 <btrfs_print_tree@@Base+0x67c>
   27172:	adds	r3, r4, #4
   27174:	mov	r2, r4
   27176:	b.n	27124 <btrfs_print_tree@@Base+0x628>
   27178:	ldr	r3, [r4, #32]
   2717a:	cbz	r7, 27186 <btrfs_print_tree@@Base+0x68a>
   2717c:	cmp	r3, #0
   2717e:	beq.n	27172 <btrfs_print_tree@@Base+0x676>
   27180:	mvn.w	r0, #16
   27184:	b.n	27152 <btrfs_print_tree@@Base+0x656>
   27186:	cmp	r3, #0
   27188:	bne.n	27164 <btrfs_print_tree@@Base+0x668>
   2718a:	b.n	27180 <btrfs_print_tree@@Base+0x684>
   2718c:	ldrh	r3, [r3, #56]	; 0x38
   2718e:	movs	r1, r0
   27190:	ldrh	r6, [r1, #18]
   27192:	movs	r1, r0
   27194:	push	{r4, lr}
   27196:	mov	r4, r1
   27198:	ldr	r1, [pc, #84]	; (271f0 <btrfs_print_tree@@Base+0x6f4>)
   2719a:	sub	sp, #24
   2719c:	ldr	r3, [pc, #84]	; (271f4 <btrfs_print_tree@@Base+0x6f8>)
   2719e:	add	r1, pc
   271a0:	ldr	r3, [r1, r3]
   271a2:	mov	r1, sp
   271a4:	ldr	r3, [r3, #0]
   271a6:	str	r3, [sp, #20]
   271a8:	mov.w	r3, #0
   271ac:	movs	r3, #25
   271ae:	muls	r2, r3
   271b0:	movs	r3, #17
   271b2:	adds	r2, #101	; 0x65
   271b4:	bl	17a1a <read_extent_buffer@@Base>
   271b8:	ldr.w	r3, [sp, #13]
   271bc:	ldr.w	r2, [sp, #9]
   271c0:	str.w	r3, [r4, #13]
   271c4:	ldrb.w	r3, [sp, #8]
   271c8:	str.w	r2, [r4, #9]
   271cc:	ldr	r2, [pc, #40]	; (271f8 <btrfs_print_tree@@Base+0x6fc>)
   271ce:	strb	r3, [r4, #8]
   271d0:	ldr	r3, [sp, #0]
   271d2:	add	r2, pc
   271d4:	str	r3, [r4, #0]
   271d6:	ldr	r3, [sp, #4]
   271d8:	str	r3, [r4, #4]
   271da:	ldr	r3, [pc, #24]	; (271f4 <btrfs_print_tree@@Base+0x6f8>)
   271dc:	ldr	r3, [r2, r3]
   271de:	ldr	r2, [r3, #0]
   271e0:	ldr	r3, [sp, #20]
   271e2:	eors	r2, r3
   271e4:	beq.n	271ea <btrfs_print_tree@@Base+0x6ee>
   271e6:	blx	8708 <__stack_chk_fail@plt>
   271ea:	add	sp, #24
   271ec:	pop	{r4, pc}
   271ee:	nop
   271f0:	blt.n	271b8 <btrfs_print_tree@@Base+0x6bc>
   271f2:	movs	r3, r0
   271f4:	lsls	r0, r5, #8
   271f6:	movs	r0, r0
   271f8:	blt.n	27158 <btrfs_print_tree@@Base+0x65c>
   271fa:	movs	r3, r0

000271fc <unlink_free_space@@Base>:
   271fc:	push	{r3, r4, r5, lr}
   271fe:	mov	r5, r1
   27200:	mov	r4, r0
   27202:	mov	r1, r0
   27204:	mov	r0, r5
   27206:	bl	139d0 <rb_erase@@Base>
   2720a:	ldr	r3, [r4, #20]
   2720c:	subs	r3, #1
   2720e:	str	r3, [r4, #20]
   27210:	ldrd	r3, r2, [r4, #8]
   27214:	ldrd	r1, r0, [r5, #24]
   27218:	subs	r3, r3, r1
   2721a:	sbc.w	r2, r2, r0
   2721e:	strd	r3, r2, [r4, #8]
   27222:	pop	{r3, r4, r5, pc}

00027224 <btrfs_find_free_space@@Base>:
   27224:	b.n	26fdc <btrfs_print_tree@@Base+0x4e0>

00027226 <btrfs_dump_free_space@@Base>:
   27226:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2722a:	mov	r5, r0
   2722c:	sub	sp, #36	; 0x24
   2722e:	ldr	r0, [r0, #64]	; 0x40
   27230:	mov	r9, r3
   27232:	mov	r8, r2
   27234:	bl	13c46 <rb_first@@Base>
   27238:	ldr	r7, [pc, #112]	; (272ac <btrfs_dump_free_space@@Base+0x86>)
   2723a:	ldr	r3, [pc, #116]	; (272b0 <btrfs_dump_free_space@@Base+0x8a>)
   2723c:	movs	r6, #0
   2723e:	add	r7, pc
   27240:	ldr	r7, [r7, r3]
   27242:	ldr	r3, [pc, #112]	; (272b4 <btrfs_dump_free_space@@Base+0x8e>)
   27244:	add	r3, pc
   27246:	str	r3, [sp, #24]
   27248:	ldr	r3, [pc, #108]	; (272b8 <btrfs_dump_free_space@@Base+0x92>)
   2724a:	add	r3, pc
   2724c:	str	r3, [sp, #28]
   2724e:	mov	r4, r0
   27250:	cbnz	r4, 27266 <btrfs_dump_free_space@@Base+0x40>
   27252:	ldr	r2, [pc, #104]	; (272bc <btrfs_dump_free_space@@Base+0x96>)
   27254:	mov	r3, r6
   27256:	ldr	r0, [r7, #0]
   27258:	movs	r1, #1
   2725a:	add	r2, pc
   2725c:	add	sp, #36	; 0x24
   2725e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27262:	b.w	8a60 <__fprintf_chk@plt>
   27266:	ldrd	r2, r3, [r4, #24]
   2726a:	cmp	r3, r9
   2726c:	it	eq
   2726e:	cmpeq	r2, r8
   27270:	bcc.n	27278 <btrfs_dump_free_space@@Base+0x52>
   27272:	ldr	r1, [r5, #108]	; 0x6c
   27274:	cbnz	r1, 27278 <btrfs_dump_free_space@@Base+0x52>
   27276:	adds	r6, #1
   27278:	ldr	r1, [r4, #32]
   2727a:	ldrd	sl, fp, [r4, #16]
   2727e:	cmp	r1, #0
   27280:	ldr	r1, [sp, #24]
   27282:	ldr	r0, [r7, #0]
   27284:	strd	r2, r3, [sp, #8]
   27288:	mov	ip, r1
   2728a:	ldr	r1, [sp, #28]
   2728c:	ldr	r2, [pc, #48]	; (272c0 <btrfs_dump_free_space@@Base+0x9a>)
   2728e:	it	ne
   27290:	movne	r1, ip
   27292:	strd	sl, fp, [sp]
   27296:	add	r2, pc
   27298:	str	r1, [sp, #16]
   2729a:	movs	r1, #1
   2729c:	blx	8a64 <__fprintf_chk@plt+0x4>
   272a0:	mov	r0, r4
   272a2:	bl	13c66 <rb_next@@Base>
   272a6:	mov	r4, r0
   272a8:	b.n	27250 <btrfs_dump_free_space@@Base+0x2a>
   272aa:	nop
   272ac:	blt.n	27334 <btrfs_add_free_space@@Base+0x1a>
   272ae:	movs	r3, r0
   272b0:	lsls	r0, r7, #8
   272b2:	movs	r0, r0
   272b4:	ldrh	r6, [r7, #8]
   272b6:	movs	r1, r0
   272b8:	adds	r1, #112	; 0x70
   272ba:	movs	r1, r0
   272bc:	ldrh	r6, [r2, #10]
   272be:	movs	r1, r0
   272c0:	ldrh	r0, [r6, #6]
   272c2:	movs	r1, r0

000272c4 <btrfs_init_free_space_ctl@@Base>:
   272c4:	push	{r3, r4, r5, lr}
   272c6:	mov	r4, r0
   272c8:	mov	r5, r1
   272ca:	movs	r0, #1
   272cc:	movs	r1, #48	; 0x30
   272ce:	blx	8588 <calloc@plt+0x4>
   272d2:	cbz	r0, 272e8 <btrfs_init_free_space_ctl@@Base+0x24>
   272d4:	ldrd	r2, r3, [r4, #40]	; 0x28
   272d8:	str	r5, [r0, #44]	; 0x2c
   272da:	str	r5, [r0, #28]
   272dc:	strd	r2, r3, [r0, #32]
   272e0:	str	r4, [r0, #40]	; 0x28
   272e2:	str	r0, [r4, #64]	; 0x40
   272e4:	movs	r0, #0
   272e6:	pop	{r3, r4, r5, pc}
   272e8:	mvn.w	r0, #11
   272ec:	b.n	272e6 <btrfs_init_free_space_ctl@@Base+0x22>

000272ee <__btrfs_remove_free_space_cache@@Base>:
   272ee:	push	{r3, r4, r5, lr}
   272f0:	mov	r5, r0
   272f2:	mov	r0, r5
   272f4:	bl	13c56 <rb_last@@Base>
   272f8:	mov	r4, r0
   272fa:	cbnz	r0, 272fe <__btrfs_remove_free_space_cache@@Base+0x10>
   272fc:	pop	{r3, r4, r5, pc}
   272fe:	mov	r1, r4
   27300:	mov	r0, r5
   27302:	bl	271fc <unlink_free_space@@Base>
   27306:	ldr	r0, [r4, #32]
   27308:	blx	8620 <free@plt+0x4>
   2730c:	mov	r0, r4
   2730e:	blx	8620 <free@plt+0x4>
   27312:	b.n	272f2 <__btrfs_remove_free_space_cache@@Base+0x4>

00027314 <btrfs_remove_free_space_cache@@Base>:
   27314:	ldr	r0, [r0, #64]	; 0x40
   27316:	b.w	272ee <__btrfs_remove_free_space_cache@@Base>

0002731a <btrfs_add_free_space@@Base>:
   2731a:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2731e:	mov	r9, r3
   27320:	ldr	r3, [pc, #240]	; (27414 <btrfs_add_free_space@@Base+0xfa>)
   27322:	mov	r7, r0
   27324:	movs	r1, #48	; 0x30
   27326:	movs	r0, #1
   27328:	add	r3, pc
   2732a:	ldrd	r5, r6, [sp, #48]	; 0x30
   2732e:	mov	r8, r2
   27330:	str	r3, [sp, #4]
   27332:	blx	8588 <calloc@plt+0x4>
   27336:	mov	r4, r0
   27338:	cmp	r0, #0
   2733a:	beq.n	2740c <btrfs_add_free_space@@Base+0xf2>
   2733c:	adds.w	r2, r8, r5
   27340:	strd	r5, r6, [r0, #24]
   27344:	adc.w	r3, r9, r6
   27348:	strd	r8, r9, [r0, #16]
   2734c:	mov	r0, r7
   2734e:	bl	26fdc <btrfs_print_tree@@Base+0x4e0>
   27352:	mov	r6, r0
   27354:	cbz	r0, 2738a <btrfs_add_free_space@@Base+0x70>
   27356:	bl	13c92 <rb_prev@@Base>
   2735a:	cbz	r0, 2738a <btrfs_add_free_space@@Base+0x70>
   2735c:	mov	r0, r6
   2735e:	bl	13c92 <rb_prev@@Base>
   27362:	mov	r5, r0
   27364:	ldr	r3, [r6, #32]
   27366:	cbnz	r3, 2739e <btrfs_add_free_space@@Base+0x84>
   27368:	mov	r1, r6
   2736a:	mov	r0, r7
   2736c:	bl	271fc <unlink_free_space@@Base>
   27370:	ldrd	r1, r0, [r6, #24]
   27374:	ldrd	r3, r2, [r4, #24]
   27378:	adds	r3, r3, r1
   2737a:	adc.w	r2, r0, r2
   2737e:	mov	r0, r6
   27380:	strd	r3, r2, [r4, #24]
   27384:	blx	8620 <free@plt+0x4>
   27388:	b.n	2739e <btrfs_add_free_space@@Base+0x84>
   2738a:	adds.w	r2, r8, #4294967295	; 0xffffffff
   2738e:	mov	r0, r7
   27390:	adc.w	r3, r9, #4294967295	; 0xffffffff
   27394:	bl	26fdc <btrfs_print_tree@@Base+0x4e0>
   27398:	mov	r5, r0
   2739a:	cmp	r6, #0
   2739c:	bne.n	27364 <btrfs_add_free_space@@Base+0x4a>
   2739e:	cbz	r5, 273e4 <btrfs_add_free_space@@Base+0xca>
   273a0:	ldr	r3, [r5, #32]
   273a2:	cbnz	r3, 273e4 <btrfs_add_free_space@@Base+0xca>
   273a4:	ldrd	r3, r0, [r5, #16]
   273a8:	ldrd	r2, r1, [r5, #24]
   273ac:	adds.w	sl, r3, r2
   273b0:	adc.w	fp, r0, r1
   273b4:	cmp	r9, fp
   273b6:	it	eq
   273b8:	cmpeq	r8, sl
   273ba:	bne.n	273e4 <btrfs_add_free_space@@Base+0xca>
   273bc:	mov	r1, r5
   273be:	mov	r0, r7
   273c0:	bl	271fc <unlink_free_space@@Base>
   273c4:	ldrd	r2, r3, [r5, #16]
   273c8:	strd	r2, r3, [r4, #16]
   273cc:	ldrd	r3, r2, [r4, #24]
   273d0:	ldrd	r0, r1, [r5, #24]
   273d4:	adds	r3, r3, r0
   273d6:	mov	r0, r5
   273d8:	adc.w	r2, r1, r2
   273dc:	strd	r3, r2, [r4, #24]
   273e0:	blx	8620 <free@plt+0x4>
   273e4:	mov	r1, r4
   273e6:	mov	r0, r7
   273e8:	bl	270f4 <btrfs_print_tree@@Base+0x5f8>
   273ec:	mov	r4, r0
   273ee:	cbz	r0, 27404 <btrfs_add_free_space@@Base+0xea>
   273f0:	ldr	r3, [pc, #36]	; (27418 <btrfs_add_free_space@@Base+0xfe>)
   273f2:	movs	r1, #1
   273f4:	ldr	r2, [sp, #4]
   273f6:	ldr	r0, [r2, r3]
   273f8:	mov	r3, r4
   273fa:	ldr	r2, [pc, #32]	; (2741c <btrfs_add_free_space@@Base+0x102>)
   273fc:	ldr	r0, [r0, #0]
   273fe:	add	r2, pc
   27400:	blx	8a64 <__fprintf_chk@plt+0x4>
   27404:	mov	r0, r4
   27406:	add	sp, #12
   27408:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2740c:	mvn.w	r4, #11
   27410:	b.n	27404 <btrfs_add_free_space@@Base+0xea>
   27412:	nop
   27414:	bge.n	274c8 <load_free_space_cache@@Base+0xa8>
   27416:	movs	r3, r0
   27418:	lsls	r0, r7, #8
   2741a:	movs	r0, r0
   2741c:	strh	r7, [r4, #62]	; 0x3e
   2741e:	movs	r1, r0

00027420 <load_free_space_cache@@Base>:
   27420:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27424:	mov	r6, r0
   27426:	vpush	{d8}
   2742a:	ldr.w	r2, [pc, #2148]	; 27c90 <load_free_space_cache@@Base+0x870>
   2742e:	ldr.w	r3, [pc, #2148]	; 27c94 <load_free_space_cache@@Base+0x874>
   27432:	add	r2, pc
   27434:	ldr.w	fp, [pc, #2144]	; 27c98 <load_free_space_cache@@Base+0x878>
   27438:	sub	sp, #244	; 0xf4
   2743a:	ldr	r5, [r1, #64]	; 0x40
   2743c:	add	fp, pc
   2743e:	str	r1, [sp, #72]	; 0x48
   27440:	ldr	r3, [r2, r3]
   27442:	ldr	r3, [r3, #0]
   27444:	str	r3, [sp, #236]	; 0xec
   27446:	mov.w	r3, #0
   2744a:	ldr	r3, [r1, #72]	; 0x48
   2744c:	str	r3, [sp, #88]	; 0x58
   2744e:	ldr	r3, [r1, #76]	; 0x4c
   27450:	str	r3, [sp, #92]	; 0x5c
   27452:	bl	18550 <btrfs_alloc_path@@Base>
   27456:	mov	r4, r0
   27458:	cmp	r0, #0
   2745a:	beq.w	27c7e <load_free_space_cache@@Base+0x85e>
   2745e:	ldr	r3, [sp, #72]	; 0x48
   27460:	movs	r7, #0
   27462:	ldr.w	r9, [r6, #28]
   27466:	add	r1, sp, #96	; 0x60
   27468:	mvn.w	r0, #10
   2746c:	strd	r1, r1, [sp, #96]	; 0x60
   27470:	ldrd	r2, r3, [r3, #40]	; 0x28
   27474:	mov.w	r1, #4294967295	; 0xffffffff
   27478:	strd	r7, r7, [sp]
   2747c:	strd	r0, r1, [sp, #104]	; 0x68
   27480:	mov	r1, r9
   27482:	str.w	r2, [sp, #113]	; 0x71
   27486:	mov	r0, r7
   27488:	str.w	r3, [sp, #117]	; 0x75
   2748c:	add	r2, sp, #104	; 0x68
   2748e:	mov	r3, r4
   27490:	strb.w	r7, [sp, #112]	; 0x70
   27494:	bl	1a93c <btrfs_search_slot@@Base>
   27498:	subs	r6, r0, #0
   2749a:	blt.n	274a4 <load_free_space_cache@@Base+0x84>
   2749c:	beq.n	274aa <load_free_space_cache@@Base+0x8a>
   2749e:	mov	r0, r4
   274a0:	bl	18558 <btrfs_release_path@@Base>
   274a4:	mov.w	r8, #0
   274a8:	b.n	2756e <load_free_space_cache@@Base+0x14e>
   274aa:	ldr.w	ip, [r4]
   274ae:	movs	r7, #25
   274b0:	ldr	r2, [r4, #32]
   274b2:	add.w	r3, ip, #96	; 0x60
   274b6:	mla	r2, r7, r2, r3
   274ba:	ldr.w	r2, [r2, #118]	; 0x76
   274be:	adds	r2, #101	; 0x65
   274c0:	add	r3, r2
   274c2:	mov	r1, r3
   274c4:	ldr.w	r0, [r1, #25]!
   274c8:	ldr	r1, [r1, #4]
   274ca:	str	r0, [sp, #24]
   274cc:	str	r1, [sp, #28]
   274ce:	mov	r1, r3
   274d0:	ldr.w	r0, [r1, #33]!
   274d4:	ldr	r1, [r1, #4]
   274d6:	str	r0, [sp, #64]	; 0x40
   274d8:	mov	r0, ip
   274da:	str	r1, [sp, #76]	; 0x4c
   274dc:	ldr.w	r1, [r3, #17]!
   274e0:	ldr	r3, [r3, #4]
   274e2:	str	r1, [sp, #40]	; 0x28
   274e4:	add	r1, sp, #144	; 0x90
   274e6:	str	r3, [sp, #44]	; 0x2c
   274e8:	movs	r3, #17
   274ea:	bl	17a1a <read_extent_buffer@@Base>
   274ee:	ldr.w	r3, [sp, #157]	; 0x9d
   274f2:	ldr.w	r2, [sp, #153]	; 0x99
   274f6:	mov	r0, r4
   274f8:	str.w	r3, [sp, #137]	; 0x89
   274fc:	ldrb.w	r3, [sp, #152]	; 0x98
   27500:	str.w	r2, [sp, #133]	; 0x85
   27504:	strb.w	r3, [sp, #132]	; 0x84
   27508:	ldr	r3, [sp, #144]	; 0x90
   2750a:	str	r3, [sp, #124]	; 0x7c
   2750c:	ldr	r3, [sp, #148]	; 0x94
   2750e:	str	r3, [sp, #128]	; 0x80
   27510:	bl	18558 <btrfs_release_path@@Base>
   27514:	add	r2, sp, #124	; 0x7c
   27516:	mov	r3, r4
   27518:	mov	r1, r9
   2751a:	mov	r0, r6
   2751c:	strd	r6, r6, [sp]
   27520:	bl	1a93c <btrfs_search_slot@@Base>
   27524:	mov	r8, r0
   27526:	cbz	r0, 27542 <load_free_space_cache@@Base+0x122>
   27528:	ldr.w	r3, [pc, #1904]	; 27c9c <load_free_space_cache@@Base+0x87c>
   2752c:	movs	r1, #1
   2752e:	ldr.w	r2, [pc, #1904]	; 27ca0 <load_free_space_cache@@Base+0x880>
   27532:	ldr.w	r0, [fp, r3]
   27536:	add	r2, pc
   27538:	mov	r3, r8
   2753a:	ldr	r0, [r0, #0]
   2753c:	blx	8a64 <__fprintf_chk@plt+0x4>
   27540:	b.n	274a4 <load_free_space_cache@@Base+0x84>
   27542:	ldr	r3, [r4, #0]
   27544:	ldr	r2, [r4, #32]
   27546:	adds	r3, #96	; 0x60
   27548:	mla	r7, r7, r2, r3
   2754c:	ldr.w	r2, [r7, #118]	; 0x76
   27550:	adds	r2, #101	; 0x65
   27552:	add	r3, r2
   27554:	ldr	r6, [r3, #16]
   27556:	ldr	r7, [r3, #20]
   27558:	orrs.w	r2, r6, r7
   2755c:	beq.n	27568 <load_free_space_cache@@Base+0x148>
   2755e:	ldr	r0, [r3, #0]
   27560:	ldr	r1, [r3, #4]
   27562:	orrs.w	r3, r0, r1
   27566:	bne.n	27632 <load_free_space_cache@@Base+0x212>
   27568:	mov	r0, r4
   2756a:	bl	18558 <btrfs_release_path@@Base>
   2756e:	mov	r0, r4
   27570:	bl	1857e <btrfs_free_path@@Base>
   27574:	ldr	r3, [sp, #72]	; 0x48
   27576:	ldrd	r4, r6, [r5, #8]
   2757a:	ldr.w	r2, [r3, #49]	; 0x31
   2757e:	ldr.w	r0, [r3, #53]	; 0x35
   27582:	ldrd	r1, r7, [r3, #80]	; 0x50
   27586:	ldr	r3, [sp, #88]	; 0x58
   27588:	adds	r1, r3, r1
   2758a:	ldr	r3, [sp, #92]	; 0x5c
   2758c:	adc.w	r7, r3, r7
   27590:	adds	r3, r4, r1
   27592:	adc.w	ip, r6, r7
   27596:	subs	r3, r3, r2
   27598:	str	r3, [sp, #56]	; 0x38
   2759a:	sbc.w	r3, ip, r0
   2759e:	cmp.w	r8, #1
   275a2:	str	r3, [sp, #60]	; 0x3c
   275a4:	bne.w	27c66 <load_free_space_cache@@Base+0x846>
   275a8:	ldrd	r9, sl, [sp, #56]	; 0x38
   275ac:	orrs.w	r3, r9, sl
   275b0:	beq.n	27618 <load_free_space_cache@@Base+0x1f8>
   275b2:	ldr.w	r3, [pc, #1768]	; 27c9c <load_free_space_cache@@Base+0x87c>
   275b6:	subs	r2, r2, r1
   275b8:	sbc.w	r0, r0, r7
   275bc:	ldr.w	r3, [fp, r3]
   275c0:	strd	r2, r0, [sp, #16]
   275c4:	ldr	r2, [sp, #72]	; 0x48
   275c6:	strd	r4, r6, [sp, #8]
   275ca:	ldrd	r0, r1, [r2, #40]	; 0x28
   275ce:	ldr.w	r2, [pc, #1748]	; 27ca4 <load_free_space_cache@@Base+0x884>
   275d2:	strd	r0, r1, [sp]
   275d6:	add	r2, pc
   275d8:	ldr	r0, [r3, #0]
   275da:	mov	r1, r8
   275dc:	blx	8a64 <__fprintf_chk@plt+0x4>
   275e0:	mov	r0, r5
   275e2:	bl	272ee <__btrfs_remove_free_space_cache@@Base>
   275e6:	ldrd	r3, r4, [sp, #56]	; 0x38
   275ea:	cmp	r3, #1
   275ec:	sbcs.w	r3, r4, #0
   275f0:	bge.w	27c58 <load_free_space_cache@@Base+0x838>
   275f4:	mov.w	r8, #0
   275f8:	ldr	r2, [sp, #72]	; 0x48
   275fa:	ldr.w	r3, [pc, #1696]	; 27c9c <load_free_space_cache@@Base+0x87c>
   275fe:	ldrd	r0, r1, [r2, #40]	; 0x28
   27602:	ldr.w	r3, [fp, r3]
   27606:	ldr.w	r2, [pc, #1696]	; 27ca8 <load_free_space_cache@@Base+0x888>
   2760a:	strd	r0, r1, [sp]
   2760e:	movs	r1, #1
   27610:	ldr	r0, [r3, #0]
   27612:	add	r2, pc
   27614:	blx	8a64 <__fprintf_chk@plt+0x4>
   27618:	ldr.w	r2, [pc, #1680]	; 27cac <load_free_space_cache@@Base+0x88c>
   2761c:	ldr.w	r3, [pc, #1652]	; 27c94 <load_free_space_cache@@Base+0x874>
   27620:	add	r2, pc
   27622:	ldr	r3, [r2, r3]
   27624:	ldr	r2, [r3, #0]
   27626:	ldr	r3, [sp, #236]	; 0xec
   27628:	eors	r2, r3
   2762a:	beq.w	27c82 <load_free_space_cache@@Base+0x862>
   2762e:	blx	8708 <__stack_chk_fail@plt>
   27632:	ldrd	r2, r3, [sp, #40]	; 0x28
   27636:	cmp	r3, r1
   27638:	it	eq
   2763a:	cmpeq	r2, r0
   2763c:	beq.n	27662 <load_free_space_cache@@Base+0x242>
   2763e:	ldr.w	r3, [pc, #1628]	; 27c9c <load_free_space_cache@@Base+0x87c>
   27642:	ldrd	r6, r7, [sp, #40]	; 0x28
   27646:	ldr.w	r2, [pc, #1640]	; 27cb0 <load_free_space_cache@@Base+0x890>
   2764a:	ldr.w	r3, [fp, r3]
   2764e:	add	r2, pc
   27650:	strd	r0, r1, [sp]
   27654:	strd	r6, r7, [sp, #8]
   27658:	movs	r1, #1
   2765a:	ldr	r0, [r3, #0]
   2765c:	blx	8a64 <__fprintf_chk@plt+0x4>
   27660:	b.n	27568 <load_free_space_cache@@Base+0x148>
   27662:	mov	r0, r4
   27664:	bl	18558 <btrfs_release_path@@Base>
   27668:	ldrd	r2, r3, [sp, #24]
   2766c:	orrs	r3, r2
   2766e:	beq.w	274a4 <load_free_space_cache@@Base+0x84>
   27672:	ldr	r3, [sp, #124]	; 0x7c
   27674:	movs	r2, #48	; 0x30
   27676:	mov	r1, r8
   27678:	add	r0, sp, #184	; 0xb8
   2767a:	str	r3, [sp, #32]
   2767c:	ldr	r3, [sp, #128]	; 0x80
   2767e:	str	r3, [sp, #36]	; 0x24
   27680:	blx	89bc <memset@plt+0x4>
   27684:	ldr.w	r3, [r9, #464]	; 0x1d0
   27688:	ldr.w	r2, [r3, #388]	; 0x184
   2768c:	movs	r3, #0
   2768e:	adds.w	r0, r2, #4294967295	; 0xffffffff
   27692:	adc.w	r1, r3, #4294967295	; 0xffffffff
   27696:	adds	r0, r0, r6
   27698:	adc.w	r1, r7, r1
   2769c:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   276a0:	mov	r1, r6
   276a2:	str	r0, [sp, #220]	; 0xdc
   276a4:	movs	r0, #1
   276a6:	blx	8588 <calloc@plt+0x4>
   276aa:	str	r0, [sp, #192]	; 0xc0
   276ac:	cmp	r0, #0
   276ae:	beq.w	27c52 <load_free_space_cache@@Base+0x832>
   276b2:	ldrd	r0, r1, [sp, #32]
   276b6:	mov.w	r3, #4294967295	; 0xffffffff
   276ba:	mvn.w	r2, #11
   276be:	strd	r6, r7, [sp, #208]	; 0xd0
   276c2:	cmp	r1, r3
   276c4:	add	r7, sp, #164	; 0xa4
   276c6:	it	eq
   276c8:	cmpeq	r0, r2
   276ca:	mov	r1, r9
   276cc:	mov.w	r0, #0
   276d0:	mov	r2, r7
   276d2:	it	ne
   276d4:	ldrbne.w	r3, [sp, #224]	; 0xe0
   276d8:	strd	r0, r0, [sp]
   276dc:	it	ne
   276de:	orrne.w	r3, r3, #1
   276e2:	str.w	r9, [sp, #196]	; 0xc4
   276e6:	it	ne
   276e8:	strbne.w	r3, [sp, #224]	; 0xe0
   276ec:	ldr	r3, [sp, #32]
   276ee:	strb.w	r0, [sp, #173]	; 0xad
   276f2:	strb.w	r0, [sp, #174]	; 0xae
   276f6:	str	r3, [sp, #164]	; 0xa4
   276f8:	ldr	r3, [sp, #36]	; 0x24
   276fa:	strb.w	r0, [sp, #175]	; 0xaf
   276fe:	strb.w	r0, [sp, #176]	; 0xb0
   27702:	str	r3, [sp, #168]	; 0xa8
   27704:	movs	r3, #108	; 0x6c
   27706:	strb.w	r3, [sp, #172]	; 0xac
   2770a:	mov	r3, r4
   2770c:	strb.w	r0, [sp, #177]	; 0xb1
   27710:	strb.w	r0, [sp, #178]	; 0xb2
   27714:	strb.w	r0, [sp, #179]	; 0xb3
   27718:	strb.w	r0, [sp, #180]	; 0xb4
   2771c:	bl	1a93c <btrfs_search_slot@@Base>
   27720:	cmp	r0, #0
   27722:	beq.w	278c6 <load_free_space_cache@@Base+0x4a6>
   27726:	ldr.w	r3, [pc, #1396]	; 27c9c <load_free_space_cache@@Base+0x87c>
   2772a:	mvn.w	r8, #21
   2772e:	ldrd	r1, r2, [sp, #32]
   27732:	ldr.w	r3, [fp, r3]
   27736:	strd	r1, r2, [sp]
   2773a:	movs	r1, #1
   2773c:	ldr.w	r2, [pc, #1396]	; 27cb4 <load_free_space_cache@@Base+0x894>
   27740:	ldr	r0, [r3, #0]
   27742:	add	r2, pc
   27744:	blx	8a64 <__fprintf_chk@plt+0x4>
   27748:	mov	r0, r4
   2774a:	bl	18558 <btrfs_release_path@@Base>
   2774e:	ldr	r0, [sp, #192]	; 0xc0
   27750:	blx	8620 <free@plt+0x4>
   27754:	b.n	2756e <load_free_space_cache@@Base+0x14e>
   27756:	ldr	r3, [r4, #0]
   27758:	ldr	r2, [r4, #32]
   2775a:	ldr.w	r3, [r3, #192]	; 0xc0
   2775e:	cmp	r2, r3
   27760:	bcs.n	27806 <load_free_space_cache@@Base+0x3e6>
   27762:	ldr	r7, [r4, #0]
   27764:	vmov	r1, s16
   27768:	ldr	r2, [r4, #32]
   2776a:	mov	r0, r7
   2776c:	bl	27194 <btrfs_print_tree@@Base+0x698>
   27770:	ldrd	r2, r3, [sp, #164]	; 0xa4
   27774:	ldrd	r0, r1, [sp, #32]
   27778:	cmp	r1, r3
   2777a:	it	eq
   2777c:	cmpeq	r0, r2
   2777e:	beq.n	2781a <load_free_space_cache@@Base+0x3fa>
   27780:	mvn.w	r8, #21
   27784:	mov	r0, r4
   27786:	bl	18558 <btrfs_release_path@@Base>
   2778a:	cmp.w	r8, #0
   2778e:	bne.n	2774e <load_free_space_cache@@Base+0x32e>
   27790:	mov	r1, r8
   27792:	add	r0, sp, #184	; 0xb8
   27794:	bl	26f2c <btrfs_print_tree@@Base+0x430>
   27798:	mov	r8, r0
   2779a:	cbnz	r0, 277f8 <load_free_space_cache@@Base+0x3d8>
   2779c:	ldrb.w	r2, [sp, #224]	; 0xe0
   277a0:	ldr	r3, [sp, #184]	; 0xb8
   277a2:	lsls	r2, r2, #31
   277a4:	ldr	r1, [sp, #200]	; 0xc8
   277a6:	bpl.w	278d6 <load_free_space_cache@@Base+0x4b6>
   277aa:	ldr	r0, [sp, #220]	; 0xdc
   277ac:	lsls	r2, r0, #2
   277ae:	add.w	r3, r3, r0, lsl #2
   277b2:	str	r3, [sp, #184]	; 0xb8
   277b4:	add.w	r3, r2, #8
   277b8:	subs	r3, r1, r3
   277ba:	str	r3, [sp, #200]	; 0xc8
   277bc:	ldr	r3, [sp, #184]	; 0xb8
   277be:	ldrd	r6, r7, [sp, #40]	; 0x28
   277c2:	ldrd	r0, r1, [r3]
   277c6:	cmp	r7, r1
   277c8:	it	eq
   277ca:	cmpeq	r6, r0
   277cc:	beq.w	278e0 <load_free_space_cache@@Base+0x4c0>
   277d0:	ldr.w	r3, [pc, #1224]	; 27c9c <load_free_space_cache@@Base+0x87c>
   277d4:	mvn.w	r8, #4
   277d8:	ldr.w	r2, [pc, #1244]	; 27cb8 <load_free_space_cache@@Base+0x898>
   277dc:	ldr.w	r3, [fp, r3]
   277e0:	add	r2, pc
   277e2:	strd	r0, r1, [sp]
   277e6:	movs	r1, #1
   277e8:	strd	r6, r7, [sp, #8]
   277ec:	ldr	r0, [r3, #0]
   277ee:	blx	8a64 <__fprintf_chk@plt+0x4>
   277f2:	add	r0, sp, #184	; 0xb8
   277f4:	bl	26de8 <btrfs_print_tree@@Base+0x2ec>
   277f8:	add	r0, sp, #184	; 0xb8
   277fa:	bl	26de8 <btrfs_print_tree@@Base+0x2ec>
   277fe:	mov	r0, r5
   27800:	bl	272ee <__btrfs_remove_free_space_cache@@Base>
   27804:	b.n	2774e <load_free_space_cache@@Base+0x32e>
   27806:	strb.w	r6, [r4, #65]	; 0x41
   2780a:	mov	r1, r4
   2780c:	ldr.w	r0, [r9, #464]	; 0x1d0
   27810:	bl	1bd70 <btrfs_next_sibling_tree_block@@Base>
   27814:	cmp	r0, #0
   27816:	beq.n	27762 <load_free_space_cache@@Base+0x342>
   27818:	b.n	27780 <load_free_space_cache@@Base+0x360>
   2781a:	ldrb.w	r3, [sp, #172]	; 0xac
   2781e:	cmp	r3, #108	; 0x6c
   27820:	bne.n	27780 <load_free_space_cache@@Base+0x360>
   27822:	ldr	r3, [r4, #0]
   27824:	movs	r1, #25
   27826:	ldr	r2, [r4, #32]
   27828:	adds	r3, #96	; 0x60
   2782a:	mla	r2, r1, r2, r3
   2782e:	ldr.w	r0, [r2, #118]	; 0x76
   27832:	add.w	r2, r0, #101	; 0x65
   27836:	add	r3, r2
   27838:	ldrb	r3, [r3, #20]
   2783a:	cmp	r3, #1
   2783c:	beq.n	27854 <load_free_space_cache@@Base+0x434>
   2783e:	ldr.w	r3, [pc, #1116]	; 27c9c <load_free_space_cache@@Base+0x87c>
   27842:	ldr.w	r0, [pc, #1144]	; 27cbc <load_free_space_cache@@Base+0x89c>
   27846:	ldr.w	r3, [fp, r3]
   2784a:	add	r0, pc
   2784c:	ldr	r1, [r3, #0]
   2784e:	blx	8b6c <fputs@plt+0x4>
   27852:	b.n	27780 <load_free_space_cache@@Base+0x360>
   27854:	add.w	r0, r7, #96	; 0x60
   27858:	ldr.w	r1, [sp, #173]	; 0xad
   2785c:	add	r0, r2
   2785e:	mov	r3, r0
   27860:	ldr.w	r7, [r3, #45]!
   27864:	ldr.w	sl, [r3, #4]
   27868:	mov	r3, r0
   2786a:	ldr.w	r2, [r3, #21]!
   2786e:	ldr.w	lr, [r0, #37]!
   27872:	ldr.w	ip, [r3, #4]
   27876:	adds.w	r2, r2, lr
   2787a:	ldr	r3, [r0, #4]
   2787c:	ldr	r0, [sp, #192]	; 0xc0
   2787e:	str	r6, [sp, #8]
   27880:	adc.w	r3, ip, r3
   27884:	add	r1, r0
   27886:	strd	r7, sl, [sp]
   2788a:	ldr.w	r0, [r9, #464]	; 0x1d0
   2788e:	bl	175aa <read_data_from_disk@@Base>
   27892:	mov	r8, r0
   27894:	cmp	r0, #0
   27896:	bne.w	27784 <load_free_space_cache@@Base+0x364>
   2789a:	ldr	r3, [sp, #48]	; 0x30
   2789c:	adds	r3, r3, r7
   2789e:	str	r3, [sp, #48]	; 0x30
   278a0:	ldr	r3, [sp, #52]	; 0x34
   278a2:	adc.w	r3, r3, sl
   278a6:	str	r3, [sp, #52]	; 0x34
   278a8:	ldr	r3, [r4, #32]
   278aa:	adds	r3, #1
   278ac:	str	r3, [r4, #32]
   278ae:	ldrd	r2, r3, [sp, #208]	; 0xd0
   278b2:	ldrd	r0, r1, [sp, #48]	; 0x30
   278b6:	cmp	r1, r3
   278b8:	it	eq
   278ba:	cmpeq	r0, r2
   278bc:	bcc.w	27756 <load_free_space_cache@@Base+0x336>
   278c0:	mov.w	r8, #0
   278c4:	b.n	27784 <load_free_space_cache@@Base+0x364>
   278c6:	movs	r2, #0
   278c8:	movs	r3, #0
   278ca:	vmov	s16, r7
   278ce:	mov	r6, r0
   278d0:	strd	r2, r3, [sp, #48]	; 0x30
   278d4:	b.n	278ae <load_free_space_cache@@Base+0x48e>
   278d6:	adds	r3, #8
   278d8:	subs	r1, #16
   278da:	str	r3, [sp, #184]	; 0xb8
   278dc:	str	r1, [sp, #200]	; 0xc8
   278de:	b.n	277bc <load_free_space_cache@@Base+0x39c>
   278e0:	ldr	r7, [pc, #988]	; (27cc0 <load_free_space_cache@@Base+0x8a0>)
   278e2:	adds	r3, #8
   278e4:	ldr.w	r9, [pc, #988]	; 27cc4 <load_free_space_cache@@Base+0x8a4>
   278e8:	add	r7, pc
   278ea:	str	r3, [sp, #184]	; 0xb8
   278ec:	adds	r7, #51	; 0x33
   278ee:	add	r9, pc
   278f0:	movs	r1, #48	; 0x30
   278f2:	movs	r0, #1
   278f4:	blx	8588 <calloc@plt+0x4>
   278f8:	mov	r6, r0
   278fa:	cmp	r0, #0
   278fc:	beq.w	277f8 <load_free_space_cache@@Base+0x3d8>
   27900:	ldr	r3, [sp, #184]	; 0xb8
   27902:	cbz	r3, 27946 <load_free_space_cache@@Base+0x526>
   27904:	ldr	r3, [sp, #184]	; 0xb8
   27906:	adds	r3, #17
   27908:	ldr.w	r1, [r3, #-17]
   2790c:	ldr.w	r2, [r3, #-13]
   27910:	strd	r1, r2, [r6, #16]
   27914:	ldr.w	r1, [r3, #-9]
   27918:	ldr.w	r2, [r3, #-5]
   2791c:	strd	r1, r2, [r6, #24]
   27920:	ldrb.w	r1, [r3, #-1]
   27924:	str	r3, [sp, #184]	; 0xb8
   27926:	ldr	r3, [sp, #200]	; 0xc8
   27928:	subs	r3, #17
   2792a:	str	r3, [sp, #200]	; 0xc8
   2792c:	cmp	r3, #16
   2792e:	bhi.n	27936 <load_free_space_cache@@Base+0x516>
   27930:	add	r0, sp, #184	; 0xb8
   27932:	bl	26de8 <btrfs_print_tree@@Base+0x2ec>
   27936:	ldrd	r2, r3, [r6, #24]
   2793a:	orrs	r3, r2
   2793c:	bne.n	2795e <load_free_space_cache@@Base+0x53e>
   2793e:	mov	r0, r6
   27940:	blx	8620 <free@plt+0x4>
   27944:	b.n	277f8 <load_free_space_cache@@Base+0x3d8>
   27946:	ldr	r1, [sp, #216]	; 0xd8
   27948:	add	r0, sp, #184	; 0xb8
   2794a:	bl	26f2c <btrfs_print_tree@@Base+0x430>
   2794e:	mov	sl, r0
   27950:	cmp	r0, #0
   27952:	beq.n	27904 <load_free_space_cache@@Base+0x4e4>
   27954:	mov	r0, r6
   27956:	mov	r8, sl
   27958:	blx	8620 <free@plt+0x4>
   2795c:	b.n	277f8 <load_free_space_cache@@Base+0x3d8>
   2795e:	cmp	r1, #1
   27960:	bne.n	27982 <load_free_space_cache@@Base+0x562>
   27962:	mov	r1, r6
   27964:	mov	r0, r5
   27966:	bl	270f4 <btrfs_print_tree@@Base+0x5f8>
   2796a:	mov	sl, r0
   2796c:	cmp	r0, #0
   2796e:	beq.n	279f2 <load_free_space_cache@@Base+0x5d2>
   27970:	ldr	r3, [pc, #808]	; (27c9c <load_free_space_cache@@Base+0x87c>)
   27972:	ldr	r0, [pc, #852]	; (27cc8 <load_free_space_cache@@Base+0x8a8>)
   27974:	ldr.w	r3, [fp, r3]
   27978:	add	r0, pc
   2797a:	ldr	r1, [r3, #0]
   2797c:	blx	8b6c <fputs@plt+0x4>
   27980:	b.n	27954 <load_free_space_cache@@Base+0x534>
   27982:	ldr	r3, [sp, #64]	; 0x40
   27984:	mov	r1, r7
   27986:	ldr	r2, [sp, #76]	; 0x4c
   27988:	mov	r0, r9
   2798a:	orrs	r3, r2
   2798c:	movw	r2, #387	; 0x183
   27990:	ite	eq
   27992:	moveq	r3, #1
   27994:	movne	r3, #0
   27996:	bl	26e58 <btrfs_print_tree@@Base+0x35c>
   2799a:	ldr	r3, [sp, #64]	; 0x40
   2799c:	ldr	r1, [r5, #44]	; 0x2c
   2799e:	movs	r0, #1
   279a0:	adds.w	r3, r3, #4294967295	; 0xffffffff
   279a4:	str	r3, [sp, #64]	; 0x40
   279a6:	ldr	r3, [sp, #76]	; 0x4c
   279a8:	adc.w	r3, r3, #4294967295	; 0xffffffff
   279ac:	str	r3, [sp, #76]	; 0x4c
   279ae:	blx	8588 <calloc@plt+0x4>
   279b2:	str	r0, [r6, #32]
   279b4:	cmp	r0, #0
   279b6:	beq.n	2793e <load_free_space_cache@@Base+0x51e>
   279b8:	mov	r1, r6
   279ba:	mov	r0, r5
   279bc:	bl	270f4 <btrfs_print_tree@@Base+0x5f8>
   279c0:	ldr	r3, [r5, #24]
   279c2:	adds	r3, #1
   279c4:	str	r3, [r5, #24]
   279c6:	mov	sl, r0
   279c8:	cbz	r0, 279e2 <load_free_space_cache@@Base+0x5c2>
   279ca:	ldr	r3, [pc, #720]	; (27c9c <load_free_space_cache@@Base+0x87c>)
   279cc:	ldr	r0, [pc, #764]	; (27ccc <load_free_space_cache@@Base+0x8ac>)
   279ce:	ldr.w	r3, [fp, r3]
   279d2:	add	r0, pc
   279d4:	ldr	r1, [r3, #0]
   279d6:	blx	8b6c <fputs@plt+0x4>
   279da:	ldr	r0, [r6, #32]
   279dc:	blx	8620 <free@plt+0x4>
   279e0:	b.n	27954 <load_free_space_cache@@Base+0x534>
   279e2:	ldr	r3, [sp, #100]	; 0x64
   279e4:	add.w	r2, r6, #36	; 0x24
   279e8:	add	r1, sp, #96	; 0x60
   279ea:	str	r2, [sp, #100]	; 0x64
   279ec:	strd	r1, r3, [r6, #36]	; 0x24
   279f0:	str	r2, [r3, #0]
   279f2:	ldr	r3, [sp, #24]
   279f4:	adds.w	r3, r3, #4294967295	; 0xffffffff
   279f8:	str	r3, [sp, #24]
   279fa:	ldr	r3, [sp, #28]
   279fc:	adc.w	r3, r3, #4294967295	; 0xffffffff
   27a00:	str	r3, [sp, #28]
   27a02:	ldrd	r2, r3, [sp, #24]
   27a06:	orrs	r3, r2
   27a08:	bne.w	278f0 <load_free_space_cache@@Base+0x4d0>
   27a0c:	add.w	sl, sp, #184	; 0xb8
   27a10:	add.w	r9, sp, #96	; 0x60
   27a14:	mov	r0, sl
   27a16:	bl	26de8 <btrfs_print_tree@@Base+0x2ec>
   27a1a:	ldr	r6, [sp, #96]	; 0x60
   27a1c:	ldr.w	r7, [r6], #-36
   27a20:	subs	r7, #36	; 0x24
   27a22:	add.w	r3, r6, #36	; 0x24
   27a26:	cmp	r3, r9
   27a28:	bne.n	27a5c <load_free_space_cache@@Base+0x63c>
   27a2a:	mov	r0, sl
   27a2c:	bl	26de8 <btrfs_print_tree@@Base+0x2ec>
   27a30:	ldr	r3, [r5, #44]	; 0x2c
   27a32:	str	r3, [sp, #48]	; 0x30
   27a34:	ldr	r3, [pc, #664]	; (27cd0 <load_free_space_cache@@Base+0x8b0>)
   27a36:	add	r3, pc
   27a38:	adds	r3, #75	; 0x4b
   27a3a:	vmov	s16, r3
   27a3e:	ldr	r3, [pc, #660]	; (27cd4 <load_free_space_cache@@Base+0x8b4>)
   27a40:	add	r3, pc
   27a42:	vmov	s17, r3
   27a46:	mov	r0, r5
   27a48:	movs	r6, #0
   27a4a:	bl	13c46 <rb_first@@Base>
   27a4e:	mov	sl, r0
   27a50:	cmp.w	sl, #0
   27a54:	bne.n	27a9a <load_free_space_cache@@Base+0x67a>
   27a56:	mov.w	r8, #1
   27a5a:	b.n	2774e <load_free_space_cache@@Base+0x32e>
   27a5c:	ldrd	r1, r2, [r6, #36]	; 0x24
   27a60:	mov	r0, sl
   27a62:	str	r2, [r1, #4]
   27a64:	str	r1, [r2, #0]
   27a66:	ldr	r1, [sp, #216]	; 0xd8
   27a68:	strd	r3, r3, [r6, #36]	; 0x24
   27a6c:	bl	26f2c <btrfs_print_tree@@Base+0x430>
   27a70:	mov	r8, r0
   27a72:	cmp	r0, #0
   27a74:	bne.w	277f8 <load_free_space_cache@@Base+0x3d8>
   27a78:	ldr	r3, [sp, #196]	; 0xc4
   27a7a:	ldr	r1, [sp, #184]	; 0xb8
   27a7c:	ldr	r0, [r6, #32]
   27a7e:	mov	r6, r7
   27a80:	ldr.w	r3, [r3, #464]	; 0x1d0
   27a84:	ldr.w	r2, [r3, #388]	; 0x184
   27a88:	blx	866c <memcpy@plt+0x4>
   27a8c:	mov	r0, sl
   27a8e:	bl	26de8 <btrfs_print_tree@@Base+0x2ec>
   27a92:	ldr	r3, [r7, #36]	; 0x24
   27a94:	sub.w	r7, r3, #36	; 0x24
   27a98:	b.n	27a22 <load_free_space_cache@@Base+0x602>
   27a9a:	ldr.w	r3, [sl, #32]
   27a9e:	cmp	r3, #0
   27aa0:	beq.w	27bf0 <load_free_space_cache@@Base+0x7d0>
   27aa4:	ldrd	r2, r3, [sl, #16]
   27aa8:	mov	r0, r5
   27aaa:	strd	r2, r3, [sp, #24]
   27aae:	ldr	r3, [r5, #28]
   27ab0:	asrs	r2, r3, #31
   27ab2:	mov	r1, r3
   27ab4:	strd	r1, r2, [sp, #40]	; 0x28
   27ab8:	ldr	r2, [sp, #48]	; 0x30
   27aba:	muls	r3, r2
   27abc:	ldrd	r1, r2, [sp, #24]
   27ac0:	lsls	r3, r3, #3
   27ac2:	adds	r1, r1, r3
   27ac4:	adc.w	r2, r2, #0
   27ac8:	strd	r1, r2, [sp, #64]	; 0x40
   27acc:	mov	r1, sl
   27ace:	bl	271fc <unlink_free_space@@Base>
   27ad2:	ldrd	r2, r3, [sl, #16]
   27ad6:	ldrd	r0, r1, [sp, #24]
   27ada:	ldr	r6, [r5, #28]
   27adc:	cmp	r3, r1
   27ade:	strd	r2, r3, [sp, #32]
   27ae2:	it	eq
   27ae4:	cmpeq	r2, r0
   27ae6:	mov	r8, r2
   27ae8:	mov	r9, r3
   27aea:	ldrd	r2, r3, [sp, #32]
   27aee:	itt	cc
   27af0:	movcc	r8, r0
   27af2:	movcc	r9, r1
   27af4:	cmp	r9, r3
   27af6:	vmov	r1, s16
   27afa:	it	eq
   27afc:	cmpeq	r8, r2
   27afe:	vmov	r0, s17
   27b02:	movw	r2, #491	; 0x1eb
   27b06:	ite	cc
   27b08:	movcc	r3, #1
   27b0a:	movcs	r3, #0
   27b0c:	bl	26e58 <btrfs_print_tree@@Base+0x35c>
   27b10:	ldr	r1, [sp, #32]
   27b12:	mov	r2, r6
   27b14:	movs	r3, #0
   27b16:	subs.w	r0, r8, r1
   27b1a:	ldr	r1, [sp, #36]	; 0x24
   27b1c:	sbc.w	r1, r9, r1
   27b20:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   27b24:	movs	r3, #0
   27b26:	mov	r2, r6
   27b28:	mov	r7, r0
   27b2a:	ldrd	r0, r1, [sp, #40]	; 0x28
   27b2e:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   27b32:	ldr	r3, [r5, #44]	; 0x2c
   27b34:	ldr.w	r9, [sl, #32]
   27b38:	cmp.w	r7, r3, lsl #3
   27b3c:	mov.w	r8, r3, lsl #3
   27b40:	str	r0, [sp, #40]	; 0x28
   27b42:	bcs.n	27b86 <load_free_space_cache@@Base+0x766>
   27b44:	movs	r3, #0
   27b46:	mov	r2, r7
   27b48:	mov	r1, r8
   27b4a:	mov	r0, r9
   27b4c:	bl	26df4 <btrfs_print_tree@@Base+0x2f8>
   27b50:	mov	r7, r0
   27b52:	cmp	r8, r7
   27b54:	bhi.n	27b66 <load_free_space_cache@@Base+0x746>
   27b56:	ldr.w	r0, [sl, #32]
   27b5a:	blx	8620 <free@plt+0x4>
   27b5e:	mov	r0, sl
   27b60:	blx	8620 <free@plt+0x4>
   27b64:	b.n	27a46 <load_free_space_cache@@Base+0x626>
   27b66:	mov.w	r3, #4294967295	; 0xffffffff
   27b6a:	mov	r2, r7
   27b6c:	mov	r1, r8
   27b6e:	mov	r0, r9
   27b70:	bl	26df4 <btrfs_print_tree@@Base+0x2f8>
   27b74:	ldr	r2, [sp, #40]	; 0x28
   27b76:	subs	r3, r0, r7
   27b78:	cmp	r2, r3
   27b7a:	bls.n	27b8a <load_free_space_cache@@Base+0x76a>
   27b7c:	adds	r2, r0, #1
   27b7e:	cmp	r8, r2
   27b80:	bls.n	27b86 <load_free_space_cache@@Base+0x766>
   27b82:	movs	r3, #0
   27b84:	b.n	27b48 <load_free_space_cache@@Base+0x728>
   27b86:	mov	r7, r8
   27b88:	b.n	27b52 <load_free_space_cache@@Base+0x732>
   27b8a:	cmp	r3, #0
   27b8c:	beq.n	27b56 <load_free_space_cache@@Base+0x736>
   27b8e:	muls	r7, r6
   27b90:	ldrd	r8, r9, [sp, #32]
   27b94:	asrs	r1, r6, #31
   27b96:	mov	r0, r5
   27b98:	adds.w	r8, r8, r7
   27b9c:	umull	r6, r7, r3, r6
   27ba0:	adc.w	r9, r9, #0
   27ba4:	mov	r2, r8
   27ba6:	mla	r7, r3, r1, r7
   27baa:	mov	r3, r9
   27bac:	strd	r6, r7, [sp]
   27bb0:	bl	2731a <btrfs_add_free_space@@Base>
   27bb4:	ldr	r1, [pc, #288]	; (27cd8 <load_free_space_cache@@Base+0x8b8>)
   27bb6:	movw	r2, #873	; 0x369
   27bba:	add	r1, pc
   27bbc:	adds	r1, #89	; 0x59
   27bbe:	mov	r3, r0
   27bc0:	ldr	r0, [pc, #280]	; (27cdc <load_free_space_cache@@Base+0x8bc>)
   27bc2:	add	r0, pc
   27bc4:	bl	26e58 <btrfs_print_tree@@Base+0x35c>
   27bc8:	adds.w	r3, r8, r6
   27bcc:	str	r3, [sp, #24]
   27bce:	adc.w	r3, r9, r7
   27bd2:	str	r3, [sp, #28]
   27bd4:	ldrd	r2, r3, [sp, #24]
   27bd8:	ldrd	r0, r1, [sp, #64]	; 0x40
   27bdc:	cmp	r3, r1
   27bde:	it	eq
   27be0:	cmpeq	r2, r0
   27be2:	bcs.n	27b56 <load_free_space_cache@@Base+0x736>
   27be4:	ldr	r3, [r5, #28]
   27be6:	asrs	r2, r3, #31
   27be8:	mov	r1, r3
   27bea:	strd	r1, r2, [sp, #40]	; 0x28
   27bee:	b.n	27ad2 <load_free_space_cache@@Base+0x6b2>
   27bf0:	cbz	r6, 27c46 <load_free_space_cache@@Base+0x826>
   27bf2:	ldrd	r2, r1, [r6, #24]
   27bf6:	ldrd	r3, r0, [r6, #16]
   27bfa:	adds	r3, r3, r2
   27bfc:	str	r3, [sp, #80]	; 0x50
   27bfe:	adc.w	r3, r0, r1
   27c02:	str	r3, [sp, #84]	; 0x54
   27c04:	ldrd	r0, r1, [sp, #80]	; 0x50
   27c08:	ldrd	r2, r3, [sl, #16]
   27c0c:	cmp	r1, r3
   27c0e:	it	eq
   27c10:	cmpeq	r0, r2
   27c12:	bne.n	27c46 <load_free_space_cache@@Base+0x826>
   27c14:	mov	r1, r6
   27c16:	mov	r0, r5
   27c18:	bl	271fc <unlink_free_space@@Base>
   27c1c:	mov	r1, sl
   27c1e:	mov	r0, r5
   27c20:	bl	271fc <unlink_free_space@@Base>
   27c24:	ldrd	r1, r0, [sl, #24]
   27c28:	ldrd	r3, r2, [r6, #24]
   27c2c:	adds	r3, r3, r1
   27c2e:	adc.w	r2, r0, r2
   27c32:	mov	r0, sl
   27c34:	strd	r3, r2, [r6, #24]
   27c38:	blx	8620 <free@plt+0x4>
   27c3c:	mov	r1, r6
   27c3e:	mov	r0, r5
   27c40:	bl	270f4 <btrfs_print_tree@@Base+0x5f8>
   27c44:	b.n	27a46 <load_free_space_cache@@Base+0x626>
   27c46:	mov	r0, sl
   27c48:	mov	r6, sl
   27c4a:	bl	13c66 <rb_next@@Base>
   27c4e:	mov	sl, r0
   27c50:	b.n	27a50 <load_free_space_cache@@Base+0x630>
   27c52:	mvn.w	r8, #11
   27c56:	b.n	2756e <load_free_space_cache@@Base+0x14e>
   27c58:	ldr	r0, [pc, #132]	; (27ce0 <load_free_space_cache@@Base+0x8c0>)
   27c5a:	mov.w	r8, #4294967295	; 0xffffffff
   27c5e:	add	r0, pc
   27c60:	bl	17b7c <__btrfs_error@@Base>
   27c64:	b.n	275f8 <load_free_space_cache@@Base+0x1d8>
   27c66:	cmp.w	r8, #0
   27c6a:	bge.w	27618 <load_free_space_cache@@Base+0x1f8>
   27c6e:	ldrd	r3, r4, [sp, #56]	; 0x38
   27c72:	cmp	r3, #1
   27c74:	sbcs.w	r3, r4, #0
   27c78:	bge.w	275f8 <load_free_space_cache@@Base+0x1d8>
   27c7c:	b.n	275f4 <load_free_space_cache@@Base+0x1d4>
   27c7e:	mov	r8, r0
   27c80:	b.n	27618 <load_free_space_cache@@Base+0x1f8>
   27c82:	mov	r0, r8
   27c84:	add	sp, #244	; 0xf4
   27c86:	vpop	{d8}
   27c8a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27c8e:	nop
   27c90:	bls.n	27d30 <btrfs_clear_free_space_cache@@Base+0x4c>
   27c92:	movs	r3, r0
   27c94:	lsls	r0, r5, #8
   27c96:	movs	r0, r0
   27c98:	bls.n	27d24 <btrfs_clear_free_space_cache@@Base+0x40>
   27c9a:	movs	r3, r0
   27c9c:	lsls	r0, r7, #8
   27c9e:	movs	r0, r0
   27ca0:	strh	r4, [r2, #54]	; 0x36
   27ca2:	movs	r1, r0
   27ca4:	strh	r3, [r2, #60]	; 0x3c
   27ca6:	movs	r1, r0
   27ca8:	ldrh	r4, [r7, #0]
   27caa:	movs	r1, r0
   27cac:	bvc.n	27d70 <btrfs_clear_free_space_cache@@Base+0x8c>
   27cae:	movs	r3, r0
   27cb0:	strh	r7, [r3, #46]	; 0x2e
   27cb2:	movs	r1, r0
   27cb4:	strh	r0, [r0, #42]	; 0x2a
   27cb6:	movs	r1, r0
   27cb8:	strh	r7, [r7, #38]	; 0x26
   27cba:	movs	r1, r0
   27cbc:	strh	r1, [r6, #34]	; 0x22
   27cbe:	movs	r1, r0
   27cc0:	strh	r5, [r0, #58]	; 0x3a
   27cc2:	movs	r1, r0
   27cc4:	strh	r0, [r3, #34]	; 0x22
   27cc6:	movs	r1, r0
   27cc8:	strh	r7, [r4, #28]
   27cca:	movs	r1, r0
   27ccc:	strh	r5, [r1, #26]
   27cce:	movs	r1, r0
   27cd0:	strh	r7, [r6, #46]	; 0x2e
   27cd2:	movs	r1, r0
   27cd4:	strh	r3, [r2, #24]
   27cd6:	movs	r1, r0
   27cd8:	strh	r3, [r6, #34]	; 0x22
   27cda:	movs	r1, r0
   27cdc:	cmp	r1, #34	; 0x22
   27cde:	movs	r1, r0
   27ce0:	strh	r4, [r5, #10]
   27ce2:	movs	r1, r0

00027ce4 <btrfs_clear_free_space_cache@@Base>:
   27ce4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27ce8:	mov	fp, r1
   27cea:	vpush	{d8}
   27cee:	movs	r1, #1
   27cf0:	ldr	r2, [pc, #704]	; (27fb4 <btrfs_clear_free_space_cache@@Base+0x2d0>)
   27cf2:	ldr	r3, [pc, #708]	; (27fb8 <btrfs_clear_free_space_cache@@Base+0x2d4>)
   27cf4:	add	r2, pc
   27cf6:	ldr	r7, [r0, #28]
   27cf8:	sub	sp, #172	; 0xac
   27cfa:	ldr	r3, [r2, r3]
   27cfc:	mov	r0, r7
   27cfe:	ldr	r3, [r3, #0]
   27d00:	str	r3, [sp, #164]	; 0xa4
   27d02:	mov.w	r3, #0
   27d06:	bl	2b67c <btrfs_start_transaction@@Base>
   27d0a:	cmn.w	r0, #4096	; 0x1000
   27d0e:	mov	r5, r0
   27d10:	bls.n	27d2a <btrfs_clear_free_space_cache@@Base+0x46>
   27d12:	mov	r4, r0
   27d14:	ldr	r2, [pc, #676]	; (27fbc <btrfs_clear_free_space_cache@@Base+0x2d8>)
   27d16:	ldr	r3, [pc, #672]	; (27fb8 <btrfs_clear_free_space_cache@@Base+0x2d4>)
   27d18:	add	r2, pc
   27d1a:	ldr	r3, [r2, r3]
   27d1c:	ldr	r2, [r3, #0]
   27d1e:	ldr	r3, [sp, #164]	; 0xa4
   27d20:	eors	r2, r3
   27d22:	beq.w	27fa8 <btrfs_clear_free_space_cache@@Base+0x2c4>
   27d26:	blx	8708 <__stack_chk_fail@plt>
   27d2a:	add	r6, sp, #96	; 0x60
   27d2c:	mov.w	r8, #4294967295	; 0xffffffff
   27d30:	mov.w	r9, #0
   27d34:	add.w	sl, sp, #65	; 0x41
   27d38:	mov	r0, r6
   27d3a:	bl	18548 <btrfs_init_path@@Base>
   27d3e:	mvn.w	r2, #10
   27d42:	mov.w	r3, #4294967295	; 0xffffffff
   27d46:	strd	r2, r3, [sp, #56]	; 0x38
   27d4a:	ldr.w	r3, [fp, #40]	; 0x28
   27d4e:	mov	r1, r7
   27d50:	mov	r0, r5
   27d52:	strb.w	r9, [sp, #64]	; 0x40
   27d56:	str.w	r3, [sp, #65]	; 0x41
   27d5a:	ldr.w	r3, [fp, #44]	; 0x2c
   27d5e:	str.w	r3, [sp, #69]	; 0x45
   27d62:	add	r3, sp, #56	; 0x38
   27d64:	vmov	s17, r3
   27d68:	movs	r3, #1
   27d6a:	strd	r8, r3, [sp]
   27d6e:	mov	r3, r6
   27d70:	vmov	r2, s17
   27d74:	bl	1a93c <btrfs_search_slot@@Base>
   27d78:	subs	r4, r0, #0
   27d7a:	bgt.w	27fa4 <btrfs_clear_free_space_cache@@Base+0x2c0>
   27d7e:	bne.n	27dc2 <btrfs_clear_free_space_cache@@Base+0xde>
   27d80:	ldr	r0, [sp, #96]	; 0x60
   27d82:	movs	r2, #25
   27d84:	ldr	r3, [sp, #128]	; 0x80
   27d86:	add	r1, sp, #76	; 0x4c
   27d88:	mla	r3, r2, r3, r0
   27d8c:	ldr.w	r2, [r3, #214]	; 0xd6
   27d90:	movs	r3, #17
   27d92:	adds	r2, #101	; 0x65
   27d94:	bl	17a1a <read_extent_buffer@@Base>
   27d98:	ldrd	r9, r3, [sp, #76]	; 0x4c
   27d9c:	mov	r2, r6
   27d9e:	mov	r1, r7
   27da0:	mov	r0, r5
   27da2:	vmov	s16, r3
   27da6:	movs	r3, #1
   27da8:	str	r3, [sp, #0]
   27daa:	ldr	r3, [sp, #128]	; 0x80
   27dac:	bl	1baf8 <btrfs_del_items@@Base>
   27db0:	subs	r4, r0, #0
   27db2:	bge.n	27dd6 <btrfs_clear_free_space_cache@@Base+0xf2>
   27db4:	ldr	r0, [pc, #520]	; (27fc0 <btrfs_clear_free_space_cache@@Base+0x2dc>)
   27db6:	ldrd	r2, r3, [fp, #40]	; 0x28
   27dba:	add	r0, pc
   27dbc:	str	r4, [sp, #0]
   27dbe:	bl	17b7c <__btrfs_error@@Base>
   27dc2:	add	r0, sp, #96	; 0x60
   27dc4:	bl	18558 <btrfs_release_path@@Base>
   27dc8:	cmp	r4, #0
   27dca:	bne.n	27d14 <btrfs_clear_free_space_cache@@Base+0x30>
   27dcc:	mov	r1, r7
   27dce:	mov	r0, r5
   27dd0:	bl	2b8fc <btrfs_commit_transaction@@Base>
   27dd4:	b.n	27d14 <btrfs_clear_free_space_cache@@Base+0x30>
   27dd6:	mov	r0, r6
   27dd8:	bl	18558 <btrfs_release_path@@Base>
   27ddc:	mov.w	r3, #108	; 0x6c
   27de0:	strb.w	r8, [sl]
   27de4:	mov	r1, r7
   27de6:	strb.w	r3, [sp, #64]	; 0x40
   27dea:	mov	r0, r5
   27dec:	movs	r3, #1
   27dee:	strb.w	r8, [sl, #1]
   27df2:	strb.w	r8, [sl, #2]
   27df6:	strb.w	r8, [sl, #3]
   27dfa:	strb.w	r8, [sl, #4]
   27dfe:	strb.w	r8, [sl, #5]
   27e02:	strb.w	r8, [sl, #6]
   27e06:	strb.w	r8, [sl, #7]
   27e0a:	vmov	r2, s17
   27e0e:	strd	r8, r3, [sp]
   27e12:	mov	r3, r6
   27e14:	vstr	s16, [sp, #60]	; 0x3c
   27e18:	str.w	r9, [sp, #56]	; 0x38
   27e1c:	bl	1a93c <btrfs_search_slot@@Base>
   27e20:	subs	r4, r0, #0
   27e22:	blt.n	27ec4 <btrfs_clear_free_space_cache@@Base+0x1e0>
   27e24:	movs	r3, #108	; 0x6c
   27e26:	str	r3, [sp, #44]	; 0x2c
   27e28:	ldr	r3, [sp, #44]	; 0x2c
   27e2a:	mov	r2, r9
   27e2c:	mov	r1, r6
   27e2e:	mov	r0, r7
   27e30:	str	r3, [sp, #0]
   27e32:	vmov	r3, s16
   27e36:	bl	1bff4 <btrfs_previous_item@@Base>
   27e3a:	subs	r4, r0, #0
   27e3c:	ble.n	27ed0 <btrfs_clear_free_space_cache@@Base+0x1ec>
   27e3e:	mov	r0, r6
   27e40:	bl	18558 <btrfs_release_path@@Base>
   27e44:	movs	r3, #0
   27e46:	movs	r2, #1
   27e48:	strb.w	r3, [sl, #1]
   27e4c:	strb.w	r3, [sl, #2]
   27e50:	mov	r1, r7
   27e52:	strb.w	r3, [sl, #3]
   27e56:	mov	r0, r5
   27e58:	strb.w	r3, [sl, #4]
   27e5c:	strb.w	r3, [sl, #5]
   27e60:	strb.w	r3, [sl, #6]
   27e64:	strb.w	r3, [sl, #7]
   27e68:	strb.w	r2, [sp, #64]	; 0x40
   27e6c:	strb.w	r3, [sp, #65]	; 0x41
   27e70:	mov.w	r3, #4294967295	; 0xffffffff
   27e74:	str	r2, [sp, #4]
   27e76:	add	r2, sp, #56	; 0x38
   27e78:	str	r3, [sp, #0]
   27e7a:	mov	r3, r6
   27e7c:	vstr	s16, [sp, #60]	; 0x3c
   27e80:	str.w	r9, [sp, #56]	; 0x38
   27e84:	bl	1a93c <btrfs_search_slot@@Base>
   27e88:	subs	r4, r0, #0
   27e8a:	ble.n	27f8c <btrfs_clear_free_space_cache@@Base+0x2a8>
   27e8c:	ldr	r0, [pc, #308]	; (27fc4 <btrfs_clear_free_space_cache@@Base+0x2e0>)
   27e8e:	mov	r2, r9
   27e90:	vmov	r3, s16
   27e94:	add	r0, pc
   27e96:	bl	17b00 <__btrfs_warning@@Base>
   27e9a:	movs	r3, #1
   27e9c:	mov	r2, r6
   27e9e:	str	r3, [sp, #0]
   27ea0:	mov	r1, r7
   27ea2:	ldr	r3, [sp, #128]	; 0x80
   27ea4:	mov	r0, r5
   27ea6:	bl	1baf8 <btrfs_del_items@@Base>
   27eaa:	subs	r4, r0, #0
   27eac:	bge.n	27dc2 <btrfs_clear_free_space_cache@@Base+0xde>
   27eae:	ldrd	r2, r3, [fp, #40]	; 0x28
   27eb2:	ldr	r0, [pc, #276]	; (27fc8 <btrfs_clear_free_space_cache@@Base+0x2e4>)
   27eb4:	str	r4, [sp, #8]
   27eb6:	strd	r2, r3, [sp]
   27eba:	add	r0, pc
   27ebc:	vmov	r3, s16
   27ec0:	mov	r2, r9
   27ec2:	b.n	27f86 <btrfs_clear_free_space_cache@@Base+0x2a2>
   27ec4:	ldr	r0, [pc, #260]	; (27fcc <btrfs_clear_free_space_cache@@Base+0x2e8>)
   27ec6:	ldrd	r2, r3, [fp, #40]	; 0x28
   27eca:	add	r0, pc
   27ecc:	str	r4, [sp, #0]
   27ece:	b.n	27dbe <btrfs_clear_free_space_cache@@Base+0xda>
   27ed0:	beq.n	27ede <btrfs_clear_free_space_cache@@Base+0x1fa>
   27ed2:	ldr	r0, [pc, #252]	; (27fd0 <btrfs_clear_free_space_cache@@Base+0x2ec>)
   27ed4:	ldrd	r2, r3, [fp, #40]	; 0x28
   27ed8:	add	r0, pc
   27eda:	str	r4, [sp, #0]
   27edc:	b.n	27dbe <btrfs_clear_free_space_cache@@Base+0xda>
   27ede:	ldr	r4, [sp, #96]	; 0x60
   27ee0:	ldr.w	r8, [sp, #128]	; 0x80
   27ee4:	vmov	r1, s17
   27ee8:	mov	r0, r4
   27eea:	mov	r2, r8
   27eec:	bl	27194 <btrfs_print_tree@@Base+0x698>
   27ef0:	add.w	r0, r4, #96	; 0x60
   27ef4:	movs	r2, #25
   27ef6:	ldr.w	r1, [sp, #69]	; 0x45
   27efa:	mla	r8, r2, r8, r0
   27efe:	ldr.w	r4, [r8, #118]	; 0x76
   27f02:	adds	r4, #101	; 0x65
   27f04:	add.w	ip, r0, r4
   27f08:	ldr.w	r4, [sp, #65]	; 0x41
   27f0c:	mov	r3, ip
   27f0e:	ldr.w	r2, [r3, #21]!
   27f12:	ldr	r3, [r3, #4]
   27f14:	vstr	s16, [sp, #28]
   27f18:	str.w	r9, [sp, #24]
   27f1c:	strd	r4, r1, [sp, #32]
   27f20:	ldrd	r0, r1, [r7, #472]	; 0x1d8
   27f24:	strd	r3, r2, [sp, #48]	; 0x30
   27f28:	strd	r0, r1, [sp, #16]
   27f2c:	movs	r0, #0
   27f2e:	movs	r1, #0
   27f30:	strd	r0, r1, [sp, #8]
   27f34:	mov	r0, ip
   27f36:	ldr.w	r4, [r0, #29]!
   27f3a:	ldr	r1, [r0, #4]
   27f3c:	mov	r0, r5
   27f3e:	strd	r4, r1, [sp]
   27f42:	mov	r1, r7
   27f44:	bl	2134c <btrfs_free_extent@@Base>
   27f48:	ldrd	r3, r2, [sp, #48]	; 0x30
   27f4c:	subs	r4, r0, #0
   27f4e:	bge.n	27f58 <btrfs_clear_free_space_cache@@Base+0x274>
   27f50:	ldr	r0, [pc, #128]	; (27fd4 <btrfs_clear_free_space_cache@@Base+0x2f0>)
   27f52:	str	r4, [sp, #0]
   27f54:	add	r0, pc
   27f56:	b.n	27dbe <btrfs_clear_free_space_cache@@Base+0xda>
   27f58:	movs	r3, #1
   27f5a:	mov	r2, r6
   27f5c:	str	r3, [sp, #0]
   27f5e:	mov	r1, r7
   27f60:	ldr	r3, [sp, #128]	; 0x80
   27f62:	mov	r0, r5
   27f64:	bl	1baf8 <btrfs_del_items@@Base>
   27f68:	subs	r4, r0, #0
   27f6a:	bge.w	27e28 <btrfs_clear_free_space_cache@@Base+0x144>
   27f6e:	ldr.w	r2, [sp, #65]	; 0x41
   27f72:	ldr.w	r3, [sp, #69]	; 0x45
   27f76:	ldr	r0, [pc, #96]	; (27fd8 <btrfs_clear_free_space_cache@@Base+0x2f4>)
   27f78:	str	r4, [sp, #8]
   27f7a:	strd	r2, r3, [sp]
   27f7e:	add	r0, pc
   27f80:	vmov	r3, s16
   27f84:	mov	r2, r9
   27f86:	bl	17b7c <__btrfs_error@@Base>
   27f8a:	b.n	27dc2 <btrfs_clear_free_space_cache@@Base+0xde>
   27f8c:	beq.n	27e9a <btrfs_clear_free_space_cache@@Base+0x1b6>
   27f8e:	ldrd	r2, r3, [fp, #40]	; 0x28
   27f92:	ldr	r0, [pc, #72]	; (27fdc <btrfs_clear_free_space_cache@@Base+0x2f8>)
   27f94:	str	r4, [sp, #8]
   27f96:	strd	r2, r3, [sp]
   27f9a:	add	r0, pc
   27f9c:	vmov	r3, s16
   27fa0:	mov	r2, r9
   27fa2:	b.n	27f86 <btrfs_clear_free_space_cache@@Base+0x2a2>
   27fa4:	mov	r4, r9
   27fa6:	b.n	27dc2 <btrfs_clear_free_space_cache@@Base+0xde>
   27fa8:	mov	r0, r4
   27faa:	add	sp, #172	; 0xac
   27fac:	vpop	{d8}
   27fb0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27fb4:	beq.n	27ed0 <btrfs_clear_free_space_cache@@Base+0x1ec>
   27fb6:	movs	r3, r0
   27fb8:	lsls	r0, r5, #8
   27fba:	movs	r0, r0
   27fbc:	beq.n	28090 <btrfs_find_last_root@@Base+0x48>
   27fbe:	movs	r3, r0
   27fc0:	strh	r2, [r1, #6]
   27fc2:	movs	r1, r0
   27fc4:	strh	r5, [r4, #6]
   27fc6:	movs	r1, r0
   27fc8:	strh	r5, [r5, #8]
   27fca:	movs	r1, r0
   27fcc:	ldrb	r6, [r6, #31]
   27fce:	movs	r1, r0
   27fd0:	ldrb	r0, [r5, #31]
   27fd2:	movs	r1, r0
   27fd4:	ldrb	r6, [r5, #30]
   27fd6:	movs	r1, r0
   27fd8:	ldrb	r6, [r6, #30]
   27fda:	movs	r1, r0
   27fdc:	strh	r7, [r0, #0]
   27fde:	movs	r1, r0
   27fe0:	ldr.w	ip, [pc, #76]	; 28030 <btrfs_clear_free_space_cache@@Base+0x34c>
   27fe4:	ldr	r5, [pc, #76]	; (28034 <btrfs_clear_free_space_cache@@Base+0x350>)
   27fe6:	add	ip, pc
   27fe8:	ldr	r4, [pc, #76]	; (28038 <btrfs_clear_free_space_cache@@Base+0x354>)
   27fea:	push	{lr}
   27fec:	sub	sp, #92	; 0x5c
   27fee:	ldr.w	r5, [ip, r5]
   27ff2:	add	r4, pc
   27ff4:	ldr	r5, [r5, #0]
   27ff6:	str	r5, [sp, #84]	; 0x54
   27ff8:	mov.w	r5, #0
   27ffc:	ldr	r5, [pc, #60]	; (2803c <btrfs_clear_free_space_cache@@Base+0x358>)
   27ffe:	ldr	r4, [r4, r5]
   28000:	strd	r2, r1, [sp]
   28004:	movs	r1, #1
   28006:	strd	r0, r3, [sp, #8]
   2800a:	ldr	r2, [pc, #52]	; (28040 <btrfs_clear_free_space_cache@@Base+0x35c>)
   2800c:	ldr	r3, [pc, #52]	; (28044 <btrfs_clear_free_space_cache@@Base+0x360>)
   2800e:	ldr	r0, [r4, #0]
   28010:	add	r4, sp, #20
   28012:	add	r3, pc
   28014:	add	r2, pc
   28016:	blx	8a64 <__fprintf_chk@plt+0x4>
   2801a:	movs	r1, #16
   2801c:	mov	r0, r4
   2801e:	blx	88bc <backtrace@plt>
   28022:	movs	r2, #2
   28024:	mov	r1, r0
   28026:	mov	r0, r4
   28028:	blx	8bcc <backtrace_symbols_fd@plt>
   2802c:	blx	8b84 <abort@plt>
   28030:	ldmia	r5!, {r1, r3, r4, r7}
   28032:	movs	r3, r0
   28034:	lsls	r0, r5, #8
   28036:	movs	r0, r0
   28038:	ldmia	r5!, {r1, r2, r3, r7}
   2803a:	movs	r3, r0
   2803c:	lsls	r0, r7, #8
   2803e:	movs	r0, r0
   28040:	subs	r6, r1, #2
   28042:	movs	r1, r0
   28044:	strh	r5, [r0, #4]
   28046:	movs	r1, r0

00028048 <btrfs_find_last_root@@Base>:
   28048:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2804c:	mov	r6, r2
   2804e:	ldr	r2, [pc, #276]	; (28164 <btrfs_find_last_root@@Base+0x11c>)
   28050:	mov	r7, r3
   28052:	ldr	r3, [pc, #276]	; (28168 <btrfs_find_last_root@@Base+0x120>)
   28054:	sub	sp, #76	; 0x4c
   28056:	add	r2, pc
   28058:	str	r0, [sp, #12]
   2805a:	ldr	r3, [r2, r3]
   2805c:	ldrd	fp, r5, [sp, #112]	; 0x70
   28060:	ldr	r3, [r3, #0]
   28062:	str	r3, [sp, #68]	; 0x44
   28064:	mov.w	r3, #0
   28068:	bl	18550 <btrfs_alloc_path@@Base>
   2806c:	mov	r4, r0
   2806e:	cmp	r0, #0
   28070:	beq.n	28154 <btrfs_find_last_root@@Base+0x10c>
   28072:	mov.w	r8, #0
   28076:	mov.w	r2, #4294967295	; 0xffffffff
   2807a:	movs	r3, #132	; 0x84
   2807c:	strb.w	r2, [sp, #37]	; 0x25
   28080:	strb.w	r3, [sp, #36]	; 0x24
   28084:	mov	r3, r0
   28086:	strb.w	r2, [sp, #38]	; 0x26
   2808a:	mov	r0, r8
   2808c:	strb.w	r2, [sp, #39]	; 0x27
   28090:	strb.w	r2, [sp, #40]	; 0x28
   28094:	strb.w	r2, [sp, #41]	; 0x29
   28098:	strb.w	r2, [sp, #42]	; 0x2a
   2809c:	strb.w	r2, [sp, #43]	; 0x2b
   280a0:	strb.w	r2, [sp, #44]	; 0x2c
   280a4:	add	r2, sp, #28
   280a6:	ldr	r1, [sp, #12]
   280a8:	strd	r8, r8, [sp]
   280ac:	strd	r6, r7, [sp, #28]
   280b0:	bl	1a93c <btrfs_search_slot@@Base>
   280b4:	subs.w	r9, r0, #0
   280b8:	blt.n	280c2 <btrfs_find_last_root@@Base+0x7a>
   280ba:	ldr	r2, [r4, #32]
   280bc:	cbnz	r2, 280dc <btrfs_find_last_root@@Base+0x94>
   280be:	mvn.w	r9, #1
   280c2:	mov	r0, r4
   280c4:	bl	1857e <btrfs_free_path@@Base>
   280c8:	ldr	r2, [pc, #160]	; (2816c <btrfs_find_last_root@@Base+0x124>)
   280ca:	ldr	r3, [pc, #156]	; (28168 <btrfs_find_last_root@@Base+0x120>)
   280cc:	add	r2, pc
   280ce:	ldr	r3, [r2, r3]
   280d0:	ldr	r2, [r3, #0]
   280d2:	ldr	r3, [sp, #68]	; 0x44
   280d4:	eors	r2, r3
   280d6:	beq.n	2815a <btrfs_find_last_root@@Base+0x112>
   280d8:	blx	8708 <__stack_chk_fail@plt>
   280dc:	cmp.w	r9, #0
   280e0:	bne.n	280f2 <btrfs_find_last_root@@Base+0xaa>
   280e2:	ldr	r1, [pc, #140]	; (28170 <btrfs_find_last_root@@Base+0x128>)
   280e4:	movs	r3, #1
   280e6:	ldr	r0, [pc, #140]	; (28174 <btrfs_find_last_root@@Base+0x12c>)
   280e8:	movs	r2, #50	; 0x32
   280ea:	add	r1, pc
   280ec:	add	r0, pc
   280ee:	bl	27fe0 <btrfs_clear_free_space_cache@@Base+0x2fc>
   280f2:	subs	r2, #1
   280f4:	movs	r3, #25
   280f6:	ldr	r0, [r4, #0]
   280f8:	add	r1, sp, #48	; 0x30
   280fa:	muls	r2, r3
   280fc:	movs	r3, #17
   280fe:	str	r0, [sp, #16]
   28100:	adds	r2, #101	; 0x65
   28102:	str	r2, [sp, #20]
   28104:	bl	17a1a <read_extent_buffer@@Base>
   28108:	ldrb.w	r9, [sp, #56]	; 0x38
   2810c:	ldr.w	r3, [sp, #61]	; 0x3d
   28110:	cmp.w	r9, #132	; 0x84
   28114:	ldr.w	sl, [sp, #57]	; 0x39
   28118:	str	r3, [sp, #12]
   2811a:	ldrd	r2, r3, [sp, #48]	; 0x30
   2811e:	bne.n	280be <btrfs_find_last_root@@Base+0x76>
   28120:	cmp	r7, r3
   28122:	it	eq
   28124:	cmpeq	r6, r2
   28126:	ldrd	r0, r2, [sp, #16]
   2812a:	bne.n	280be <btrfs_find_last_root@@Base+0x76>
   2812c:	add	r2, r0
   2812e:	movw	r3, #439	; 0x1b7
   28132:	mov	r1, fp
   28134:	ldr.w	r2, [r2, #113]	; 0x71
   28138:	adds	r2, #101	; 0x65
   2813a:	bl	17a1a <read_extent_buffer@@Base>
   2813e:	ldr	r3, [sp, #12]
   28140:	strb.w	r9, [r5, #8]
   28144:	mov	r9, r8
   28146:	str	r6, [r5, #0]
   28148:	str	r7, [r5, #4]
   2814a:	str.w	sl, [r5, #9]
   2814e:	str.w	r3, [r5, #13]
   28152:	b.n	280c2 <btrfs_find_last_root@@Base+0x7a>
   28154:	mvn.w	r9, #11
   28158:	b.n	280c8 <btrfs_find_last_root@@Base+0x80>
   2815a:	mov	r0, r9
   2815c:	add	sp, #76	; 0x4c
   2815e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28162:	nop
   28164:	ldmia	r5, {r1, r3, r5}
   28166:	movs	r3, r0
   28168:	lsls	r0, r5, #8
   2816a:	movs	r0, r0
   2816c:	ldmia	r4, {r2, r4, r5, r7}
   2816e:	movs	r3, r0
   28170:	ldrb	r2, [r0, #31]
   28172:	movs	r1, r0
   28174:	cmp	r1, #87	; 0x57
   28176:	movs	r1, r0

00028178 <btrfs_update_root@@Base>:
   28178:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2817c:	mov	r8, r2
   2817e:	ldr	r2, [pc, #284]	; (2829c <btrfs_update_root@@Base+0x124>)
   28180:	mov	r6, r3
   28182:	ldr	r3, [pc, #284]	; (282a0 <btrfs_update_root@@Base+0x128>)
   28184:	sub	sp, #20
   28186:	add	r2, pc
   28188:	mov	r7, r0
   2818a:	mov	fp, r1
   2818c:	ldr	r3, [r2, r3]
   2818e:	ldr	r3, [r3, #0]
   28190:	str	r3, [sp, #12]
   28192:	mov.w	r3, #0
   28196:	bl	18550 <btrfs_alloc_path@@Base>
   2819a:	mov	r5, r0
   2819c:	cmp	r0, #0
   2819e:	beq.n	2828c <btrfs_update_root@@Base+0x114>
   281a0:	movs	r3, #0
   281a2:	mov.w	r9, #1
   281a6:	mov	r2, r8
   281a8:	strd	r3, r9, [sp]
   281ac:	mov	r1, fp
   281ae:	mov	r3, r0
   281b0:	mov	r0, r7
   281b2:	bl	1a93c <btrfs_search_slot@@Base>
   281b6:	subs	r4, r0, #0
   281b8:	blt.n	2820e <btrfs_update_root@@Base+0x96>
   281ba:	beq.n	281ce <btrfs_update_root@@Base+0x56>
   281bc:	ldr	r1, [pc, #228]	; (282a4 <btrfs_update_root@@Base+0x12c>)
   281be:	mov	r3, r9
   281c0:	ldr	r0, [pc, #228]	; (282a8 <btrfs_update_root@@Base+0x130>)
   281c2:	movs	r2, #86	; 0x56
   281c4:	add	r1, pc
   281c6:	adds	r1, #21
   281c8:	add	r0, pc
   281ca:	bl	27fe0 <btrfs_clear_free_space_cache@@Base+0x2fc>
   281ce:	ldr	r0, [r5, #0]
   281d0:	mov.w	sl, #25
   281d4:	ldr	r3, [r5, #32]
   281d6:	mla	r3, sl, r3, r0
   281da:	add.w	r2, r3, #197	; 0xc5
   281de:	ldr.w	r3, [r3, #218]	; 0xda
   281e2:	cmp.w	r3, #438	; 0x1b6
   281e6:	bls.n	28228 <btrfs_update_root@@Base+0xb0>
   281e8:	ldr.w	r2, [r2, #17]
   281ec:	ldr.w	r1, [r6, #160]	; 0xa0
   281f0:	adds	r2, #101	; 0x65
   281f2:	ldr.w	r3, [r6, #164]	; 0xa4
   281f6:	str.w	r1, [r6, #239]	; 0xef
   281fa:	mov	r1, r6
   281fc:	str.w	r3, [r6, #243]	; 0xf3
   28200:	movw	r3, #439	; 0x1b7
   28204:	bl	17a30 <write_extent_buffer@@Base>
   28208:	ldr	r0, [r5, #0]
   2820a:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   2820e:	mov	r0, r5
   28210:	bl	1857e <btrfs_free_path@@Base>
   28214:	ldr	r2, [pc, #148]	; (282ac <btrfs_update_root@@Base+0x134>)
   28216:	ldr	r3, [pc, #136]	; (282a0 <btrfs_update_root@@Base+0x128>)
   28218:	add	r2, pc
   2821a:	ldr	r3, [r2, r3]
   2821c:	ldr	r2, [r3, #0]
   2821e:	ldr	r3, [sp, #12]
   28220:	eors	r2, r3
   28222:	beq.n	28292 <btrfs_update_root@@Base+0x11a>
   28224:	blx	8708 <__stack_chk_fail@plt>
   28228:	mov	r0, r5
   2822a:	bl	18558 <btrfs_release_path@@Base>
   2822e:	mov.w	r3, #4294967295	; 0xffffffff
   28232:	mov	r2, r8
   28234:	str	r3, [sp, #0]
   28236:	mov	r1, fp
   28238:	mov	r3, r5
   2823a:	mov	r0, r7
   2823c:	str.w	r9, [sp, #4]
   28240:	bl	1a93c <btrfs_search_slot@@Base>
   28244:	subs	r4, r0, #0
   28246:	blt.n	2820e <btrfs_update_root@@Base+0x96>
   28248:	str.w	r9, [sp]
   2824c:	mov	r2, r5
   2824e:	ldr	r3, [r5, #32]
   28250:	mov	r1, fp
   28252:	mov	r0, r7
   28254:	bl	1baf8 <btrfs_del_items@@Base>
   28258:	subs	r4, r0, #0
   2825a:	blt.n	2820e <btrfs_update_root@@Base+0x96>
   2825c:	mov	r0, r5
   2825e:	bl	18558 <btrfs_release_path@@Base>
   28262:	movw	r3, #439	; 0x1b7
   28266:	mov	r2, r5
   28268:	strd	r9, r3, [sp, #4]
   2826c:	mov	r1, fp
   2826e:	add	r3, sp, #8
   28270:	mov	r0, r7
   28272:	str	r3, [sp, #0]
   28274:	mov	r3, r8
   28276:	bl	1b70c <btrfs_insert_empty_items@@Base>
   2827a:	subs	r4, r0, #0
   2827c:	blt.n	2820e <btrfs_update_root@@Base+0x96>
   2827e:	ldr	r0, [r5, #0]
   28280:	ldr	r3, [r5, #32]
   28282:	mla	r3, sl, r3, r0
   28286:	ldr.w	r2, [r3, #214]	; 0xd6
   2828a:	b.n	281ec <btrfs_update_root@@Base+0x74>
   2828c:	mvn.w	r4, #11
   28290:	b.n	28214 <btrfs_update_root@@Base+0x9c>
   28292:	mov	r0, r4
   28294:	add	sp, #20
   28296:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2829a:	nop
   2829c:	ldmia	r3, {r1, r3, r4, r5, r6, r7}
   2829e:	movs	r3, r0
   282a0:	lsls	r0, r5, #8
   282a2:	movs	r0, r0
   282a4:	ldrb	r0, [r5, #27]
   282a6:	movs	r1, r0
   282a8:	ldrb	r3, [r3, #27]
   282aa:	movs	r1, r0
   282ac:	ldmia	r3, {r3, r5, r6}
   282ae:	movs	r3, r0

000282b0 <btrfs_insert_root@@Base>:
   282b0:	push	{r0, r1, r4, r5, r6, lr}
   282b2:	movw	r4, #439	; 0x1b7
   282b6:	ldr.w	r6, [r3, #160]	; 0xa0
   282ba:	ldr.w	r5, [r3, #164]	; 0xa4
   282be:	str	r4, [sp, #0]
   282c0:	str.w	r6, [r3, #239]	; 0xef
   282c4:	str.w	r5, [r3, #243]	; 0xf3
   282c8:	bl	1b9c8 <btrfs_insert_item@@Base>
   282cc:	add	sp, #8
   282ce:	pop	{r4, r5, r6, pc}

000282d0 <btrfs_del_root@@Base>:
   282d0:	push	{r4, r5, r6, r7, lr}
   282d2:	sub	sp, #20
   282d4:	mov	r6, r0
   282d6:	strd	r2, r1, [sp, #8]
   282da:	bl	18550 <btrfs_alloc_path@@Base>
   282de:	mov	r5, r0
   282e0:	cbz	r0, 28322 <btrfs_del_root@@Base+0x52>
   282e2:	ldrd	r2, r1, [sp, #8]
   282e6:	mov.w	r3, #4294967295	; 0xffffffff
   282ea:	movs	r7, #1
   282ec:	strd	r3, r7, [sp]
   282f0:	mov	r3, r0
   282f2:	mov	r0, r6
   282f4:	str	r1, [sp, #8]
   282f6:	bl	1a93c <btrfs_search_slot@@Base>
   282fa:	subs	r4, r0, #0
   282fc:	blt.n	28310 <btrfs_del_root@@Base+0x40>
   282fe:	bne.n	2831c <btrfs_del_root@@Base+0x4c>
   28300:	str	r7, [sp, #0]
   28302:	mov	r2, r5
   28304:	ldr	r3, [r5, #32]
   28306:	mov	r0, r6
   28308:	ldr	r1, [sp, #8]
   2830a:	bl	1baf8 <btrfs_del_items@@Base>
   2830e:	mov	r4, r0
   28310:	mov	r0, r5
   28312:	bl	1857e <btrfs_free_path@@Base>
   28316:	mov	r0, r4
   28318:	add	sp, #20
   2831a:	pop	{r4, r5, r6, r7, pc}
   2831c:	mvn.w	r4, #1
   28320:	b.n	28310 <btrfs_del_root@@Base+0x40>
   28322:	mvn.w	r4, #11
   28326:	b.n	28316 <btrfs_del_root@@Base+0x46>

00028328 <btrfs_add_root_ref@@Base>:
   28328:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2832c:	sub	sp, #68	; 0x44
   2832e:	mov	r7, r3
   28330:	mov	fp, r2
   28332:	ldr	r3, [sp, #116]	; 0x74
   28334:	mov	r6, r0
   28336:	ldr	r2, [sp, #112]	; 0x70
   28338:	str	r1, [sp, #28]
   2833a:	str	r3, [sp, #20]
   2833c:	ldr	r3, [sp, #128]	; 0x80
   2833e:	str	r2, [sp, #24]
   28340:	ldr	r2, [pc, #208]	; (28414 <btrfs_add_root_ref@@Base+0xec>)
   28342:	str	r3, [sp, #12]
   28344:	ldr	r3, [sp, #132]	; 0x84
   28346:	add	r2, pc
   28348:	ldrd	sl, r9, [sp, #120]	; 0x78
   2834c:	ldrd	r8, r5, [sp, #136]	; 0x88
   28350:	str	r3, [sp, #16]
   28352:	ldr	r3, [pc, #196]	; (28418 <btrfs_add_root_ref@@Base+0xf0>)
   28354:	ldr	r3, [r2, r3]
   28356:	ldr	r3, [r3, #0]
   28358:	str	r3, [sp, #60]	; 0x3c
   2835a:	mov.w	r3, #0
   2835e:	bl	18550 <btrfs_alloc_path@@Base>
   28362:	mov	r4, r0
   28364:	cmp	r0, #0
   28366:	beq.n	28406 <btrfs_add_root_ref@@Base+0xde>
   28368:	ldrb.w	r0, [sp, #104]	; 0x68
   2836c:	ldr	r2, [sp, #24]
   2836e:	ldr	r3, [sp, #20]
   28370:	strb.w	r0, [sp, #48]	; 0x30
   28374:	mov	r0, r6
   28376:	str.w	r2, [sp, #49]	; 0x31
   2837a:	mov	r2, r4
   2837c:	str.w	r3, [sp, #53]	; 0x35
   28380:	add.w	r3, r5, #18
   28384:	ldr	r1, [sp, #28]
   28386:	str	r3, [sp, #36]	; 0x24
   28388:	movs	r3, #1
   2838a:	str	r3, [sp, #4]
   2838c:	add	r3, sp, #36	; 0x24
   2838e:	str	r3, [sp, #0]
   28390:	add	r3, sp, #40	; 0x28
   28392:	strd	fp, r7, [sp, #40]	; 0x28
   28396:	bl	1b70c <btrfs_insert_empty_items@@Base>
   2839a:	mov	r6, r0
   2839c:	cbz	r0, 283b0 <btrfs_add_root_ref@@Base+0x88>
   2839e:	ldr	r1, [pc, #124]	; (2841c <btrfs_add_root_ref@@Base+0xf4>)
   283a0:	mov	r3, r0
   283a2:	ldr	r0, [pc, #124]	; (28420 <btrfs_add_root_ref@@Base+0xf8>)
   283a4:	movs	r2, #209	; 0xd1
   283a6:	add	r1, pc
   283a8:	adds	r1, #39	; 0x27
   283aa:	add	r0, pc
   283ac:	bl	27fe0 <btrfs_clear_free_space_cache@@Base+0x2fc>
   283b0:	ldr	r0, [r4, #0]
   283b2:	movs	r2, #25
   283b4:	ldr	r3, [r4, #32]
   283b6:	add.w	r1, r0, #96	; 0x60
   283ba:	mla	r3, r2, r3, r1
   283be:	ldr.w	r2, [r3, #118]	; 0x76
   283c2:	add.w	r7, r2, #101	; 0x65
   283c6:	adds	r2, #119	; 0x77
   283c8:	adds	r3, r1, r7
   283ca:	str.w	sl, [r1, r7]
   283ce:	ldr	r1, [sp, #12]
   283d0:	str.w	r9, [r3, #4]
   283d4:	strh	r5, [r3, #16]
   283d6:	str	r1, [r3, #8]
   283d8:	ldr	r1, [sp, #16]
   283da:	str	r0, [sp, #12]
   283dc:	str	r1, [r3, #12]
   283de:	mov	r3, r5
   283e0:	mov	r1, r8
   283e2:	bl	17a30 <write_extent_buffer@@Base>
   283e6:	ldr	r0, [sp, #12]
   283e8:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   283ec:	mov	r0, r4
   283ee:	bl	1857e <btrfs_free_path@@Base>
   283f2:	ldr	r2, [pc, #48]	; (28424 <btrfs_add_root_ref@@Base+0xfc>)
   283f4:	ldr	r3, [pc, #32]	; (28418 <btrfs_add_root_ref@@Base+0xf0>)
   283f6:	add	r2, pc
   283f8:	ldr	r3, [r2, r3]
   283fa:	ldr	r2, [r3, #0]
   283fc:	ldr	r3, [sp, #60]	; 0x3c
   283fe:	eors	r2, r3
   28400:	beq.n	2840c <btrfs_add_root_ref@@Base+0xe4>
   28402:	blx	8708 <__stack_chk_fail@plt>
   28406:	mvn.w	r6, #11
   2840a:	b.n	283f2 <btrfs_add_root_ref@@Base+0xca>
   2840c:	mov	r0, r6
   2840e:	add	sp, #68	; 0x44
   28410:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28414:	ldmia	r2!, {r1, r3, r4, r5}
   28416:	movs	r3, r0
   28418:	lsls	r0, r5, #8
   2841a:	movs	r0, r0
   2841c:	ldrb	r6, [r0, #20]
   2841e:	movs	r1, r0
   28420:	movs	r1, #58	; 0x3a
   28422:	movs	r1, r0
   28424:	ldmia	r1, {r1, r3, r7}
   28426:	movs	r3, r0
   28428:	push	{r4, r5, lr}
   2842a:	movs	r1, #0
   2842c:	ldr	r4, [r0, #40]	; 0x28
   2842e:	mov	r3, r1
   28430:	ldr	r5, [r0, #64]	; 0x40
   28432:	and.w	r2, r4, #128	; 0x80
   28436:	orrs	r3, r2
   28438:	bne.n	2844c <btrfs_add_root_ref@@Base+0x124>
   2843a:	and.w	r2, r4, #256	; 0x100
   2843e:	mov	r3, r1
   28440:	orrs	r3, r2
   28442:	ite	ne
   28444:	movne	r0, #2
   28446:	moveq	r0, r1
   28448:	subs	r0, r5, r0
   2844a:	pop	{r4, r5, pc}
   2844c:	movs	r0, #1
   2844e:	b.n	28448 <btrfs_add_root_ref@@Base+0x120>
   28450:	push	{r3, r4, r5, r6, r7, lr}
   28452:	mov	r6, r0
   28454:	ldr	r3, [pc, #40]	; (28480 <btrfs_add_root_ref@@Base+0x158>)
   28456:	add	r3, pc
   28458:	ldr	r4, [r3, #0]
   2845a:	mov	r5, r3
   2845c:	subs	r4, #80	; 0x50
   2845e:	add.w	r3, r4, #80	; 0x50
   28462:	cmp	r5, r3
   28464:	bne.n	2846c <btrfs_add_root_ref@@Base+0x144>
   28466:	movs	r4, #0
   28468:	mov	r0, r4
   2846a:	pop	{r3, r4, r5, r6, r7, pc}
   2846c:	movs	r2, #16
   2846e:	mov	r1, r4
   28470:	mov	r0, r6
   28472:	blx	86a0 <memcmp@plt+0x4>
   28476:	cmp	r0, #0
   28478:	beq.n	28468 <btrfs_add_root_ref@@Base+0x140>
   2847a:	ldr	r4, [r4, #80]	; 0x50
   2847c:	subs	r4, #80	; 0x50
   2847e:	b.n	2845e <btrfs_add_root_ref@@Base+0x136>
   28480:	ble.n	28548 <btrfs_add_root_ref@@Base+0x220>
   28482:	movs	r3, r0
   28484:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   28488:	add.w	r8, r0, #72	; 0x48
   2848c:	ldr	r5, [sp, #24]
   2848e:	mov	r6, r2
   28490:	ldr	r4, [r0, #72]	; 0x48
   28492:	mov	r7, r3
   28494:	cmp	r4, r8
   28496:	bne.n	284a0 <btrfs_add_root_ref@@Base+0x178>
   28498:	movs	r4, #0
   2849a:	mov	r0, r4
   2849c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   284a0:	ldrd	r2, r3, [r4, #64]	; 0x40
   284a4:	cmp	r3, r7
   284a6:	it	eq
   284a8:	cmpeq	r2, r6
   284aa:	bne.n	284c0 <btrfs_add_root_ref@@Base+0x198>
   284ac:	cmp	r5, #0
   284ae:	beq.n	2849a <btrfs_add_root_ref@@Base+0x172>
   284b0:	add.w	r0, r4, #112	; 0x70
   284b4:	movs	r2, #16
   284b6:	mov	r1, r5
   284b8:	blx	86a0 <memcmp@plt+0x4>
   284bc:	cmp	r0, #0
   284be:	beq.n	2849a <btrfs_add_root_ref@@Base+0x172>
   284c0:	ldr	r4, [r4, #0]
   284c2:	b.n	28494 <btrfs_add_root_ref@@Base+0x16c>
   284c4:	push	{r3, r4, r5, r6, r7, lr}
   284c6:	mov	r1, r0
   284c8:	mov	r5, r3
   284ca:	and.w	r6, r1, #1584	; 0x630
   284ce:	movs	r3, #0
   284d0:	mov	r4, r2
   284d2:	mov	r7, r3
   284d4:	orrs.w	r2, r6, r7
   284d8:	ldr	r0, [sp, #24]
   284da:	bne.n	284fa <btrfs_add_root_ref@@Base+0x1d2>
   284dc:	and.w	r6, r1, #64	; 0x40
   284e0:	orrs.w	r2, r6, r7
   284e4:	beq.n	28500 <btrfs_add_root_ref@@Base+0x1d8>
   284e6:	ldr	r1, [sp, #28]
   284e8:	bl	39698 <btrfs_util_strerror@@Base+0x290>
   284ec:	asrs	r3, r0, #31
   284ee:	muls	r3, r4
   284f0:	mla	r3, r0, r5, r3
   284f4:	umull	r4, r5, r4, r0
   284f8:	add	r5, r3
   284fa:	mov	r0, r4
   284fc:	mov	r1, r5
   284fe:	pop	{r3, r4, r5, r6, r7, pc}
   28500:	and.w	r6, r1, #128	; 0x80
   28504:	orrs.w	r2, r6, r7
   28508:	beq.n	2850e <btrfs_add_root_ref@@Base+0x1e6>
   2850a:	subs	r0, #1
   2850c:	b.n	284ec <btrfs_add_root_ref@@Base+0x1c4>
   2850e:	and.w	r6, r1, #256	; 0x100
   28512:	orrs.w	r3, r6, r7
   28516:	it	ne
   28518:	subne	r0, #2
   2851a:	b.n	284ec <btrfs_add_root_ref@@Base+0x1c4>
   2851c:	ldr.w	ip, [pc, #76]	; 2856c <btrfs_add_root_ref@@Base+0x244>
   28520:	ldr	r5, [pc, #76]	; (28570 <btrfs_add_root_ref@@Base+0x248>)
   28522:	add	ip, pc
   28524:	ldr	r4, [pc, #76]	; (28574 <btrfs_add_root_ref@@Base+0x24c>)
   28526:	push	{lr}
   28528:	sub	sp, #92	; 0x5c
   2852a:	ldr.w	r5, [ip, r5]
   2852e:	add	r4, pc
   28530:	ldr	r5, [r5, #0]
   28532:	str	r5, [sp, #84]	; 0x54
   28534:	mov.w	r5, #0
   28538:	ldr	r5, [pc, #60]	; (28578 <btrfs_add_root_ref@@Base+0x250>)
   2853a:	ldr	r4, [r4, r5]
   2853c:	ldr	r5, [sp, #96]	; 0x60
   2853e:	strd	r3, r2, [sp]
   28542:	mov	r3, r1
   28544:	ldr	r2, [pc, #52]	; (2857c <btrfs_add_root_ref@@Base+0x254>)
   28546:	movs	r1, #1
   28548:	strd	r0, r5, [sp, #8]
   2854c:	ldr	r0, [r4, #0]
   2854e:	add	r4, sp, #20
   28550:	add	r2, pc
   28552:	blx	8a64 <__fprintf_chk@plt+0x4>
   28556:	movs	r1, #16
   28558:	mov	r0, r4
   2855a:	blx	88bc <backtrace@plt>
   2855e:	movs	r2, #2
   28560:	mov	r1, r0
   28562:	mov	r0, r4
   28564:	blx	8bcc <backtrace_symbols_fd@plt>
   28568:	blx	8b84 <abort@plt>
   2856c:	ldmia	r0!, {r1, r2, r3, r4, r6}
   2856e:	movs	r3, r0
   28570:	lsls	r0, r5, #8
   28572:	movs	r0, r0
   28574:	ldmia	r0!, {r1, r4, r6}
   28576:	movs	r3, r0
   28578:	lsls	r0, r7, #8
   2857a:	movs	r0, r0
   2857c:	adds	r2, r2, r5
   2857e:	movs	r1, r0
   28580:	push	{r0, r1, r4, lr}
   28582:	ldr	r4, [sp, #16]
   28584:	cbz	r4, 2858c <btrfs_add_root_ref@@Base+0x264>
   28586:	str	r4, [sp, #0]
   28588:	bl	2851c <btrfs_add_root_ref@@Base+0x1f4>
   2858c:	add	sp, #8
   2858e:	pop	{r4, pc}
   28590:	push	{r0, r1, r4, lr}
   28592:	mov	r4, r0
   28594:	clz	r0, r0
   28598:	ldr	r2, [pc, #28]	; (285b8 <btrfs_add_root_ref@@Base+0x290>)
   2859a:	ldr	r1, [pc, #32]	; (285bc <btrfs_add_root_ref@@Base+0x294>)
   2859c:	mov.w	r3, #322	; 0x142
   285a0:	lsrs	r0, r0, #5
   285a2:	str	r0, [sp, #0]
   285a4:	ldr	r0, [pc, #24]	; (285c0 <btrfs_add_root_ref@@Base+0x298>)
   285a6:	add	r2, pc
   285a8:	add	r1, pc
   285aa:	add	r0, pc
   285ac:	bl	28580 <btrfs_add_root_ref@@Base+0x258>
   285b0:	lsls	r0, r4, #5
   285b2:	adds	r0, #48	; 0x30
   285b4:	add	sp, #8
   285b6:	pop	{r4, pc}
   285b8:	strh	r6, [r7, #20]
   285ba:	movs	r1, r0
   285bc:	movs	r0, #236	; 0xec
   285be:	movs	r1, r0
   285c0:	ldrh	r2, [r3, r4]
   285c2:	movs	r1, r0
   285c4:	push	{r4, lr}
   285c6:	mov	r4, r1
   285c8:	ldr	r1, [pc, #84]	; (28620 <btrfs_add_root_ref@@Base+0x2f8>)
   285ca:	sub	sp, #24
   285cc:	ldr	r3, [pc, #84]	; (28624 <btrfs_add_root_ref@@Base+0x2fc>)
   285ce:	add	r1, pc
   285d0:	ldr	r3, [r1, r3]
   285d2:	mov	r1, sp
   285d4:	ldr	r3, [r3, #0]
   285d6:	str	r3, [sp, #20]
   285d8:	mov.w	r3, #0
   285dc:	movs	r3, #25
   285de:	muls	r2, r3
   285e0:	movs	r3, #17
   285e2:	adds	r2, #101	; 0x65
   285e4:	bl	17a1a <read_extent_buffer@@Base>
   285e8:	ldr.w	r3, [sp, #13]
   285ec:	ldr.w	r2, [sp, #9]
   285f0:	str.w	r3, [r4, #13]
   285f4:	ldrb.w	r3, [sp, #8]
   285f8:	str.w	r2, [r4, #9]
   285fc:	ldr	r2, [pc, #40]	; (28628 <btrfs_add_root_ref@@Base+0x300>)
   285fe:	strb	r3, [r4, #8]
   28600:	ldr	r3, [sp, #0]
   28602:	add	r2, pc
   28604:	str	r3, [r4, #0]
   28606:	ldr	r3, [sp, #4]
   28608:	str	r3, [r4, #4]
   2860a:	ldr	r3, [pc, #24]	; (28624 <btrfs_add_root_ref@@Base+0x2fc>)
   2860c:	ldr	r3, [r2, r3]
   2860e:	ldr	r2, [r3, #0]
   28610:	ldr	r3, [sp, #20]
   28612:	eors	r2, r3
   28614:	beq.n	2861a <btrfs_add_root_ref@@Base+0x2f2>
   28616:	blx	8708 <__stack_chk_fail@plt>
   2861a:	add	sp, #24
   2861c:	pop	{r4, pc}
   2861e:	nop
   28620:	stmia	r7!, {r1, r4, r5, r7}
   28622:	movs	r3, r0
   28624:	lsls	r0, r5, #8
   28626:	movs	r0, r0
   28628:	stmia	r7!, {r1, r2, r3, r4, r5, r6}
   2862a:	movs	r3, r0

0002862c <btrfs_close_devices@@Base>:
   2862c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28630:	sub	sp, #20
   28632:	ldr.w	sl, [pc, #188]	; 286f0 <btrfs_close_devices@@Base+0xc4>
   28636:	mov	r4, r0
   28638:	ldr	r7, [pc, #184]	; (286f4 <btrfs_close_devices@@Base+0xc8>)
   2863a:	movs	r6, #0
   2863c:	add	sl, pc
   2863e:	mov.w	r8, #0
   28642:	mov.w	r9, #0
   28646:	add	r7, pc
   28648:	cmp	r4, #0
   2864a:	beq.n	286ea <btrfs_close_devices@@Base+0xbe>
   2864c:	ldr.w	fp, [pc, #168]	; 286f8 <btrfs_close_devices@@Base+0xcc>
   28650:	add	fp, pc
   28652:	mov	r3, r4
   28654:	ldr.w	r5, [r3, #72]!
   28658:	cmp	r5, r3
   2865a:	bne.n	28678 <btrfs_close_devices@@Base+0x4c>
   2865c:	ldr	r5, [r4, #92]	; 0x5c
   2865e:	movs	r3, #0
   28660:	str	r3, [r4, #92]	; 0x5c
   28662:	mov	r0, r4
   28664:	ldrd	r2, r3, [r4, #80]	; 0x50
   28668:	str	r3, [r2, #4]
   2866a:	str	r2, [r3, #0]
   2866c:	cmp	r5, #0
   2866e:	beq.n	286de <btrfs_close_devices@@Base+0xb2>
   28670:	blx	8620 <free@plt+0x4>
   28674:	mov	r4, r5
   28676:	b.n	28648 <btrfs_close_devices@@Base+0x1c>
   28678:	ldr	r0, [r5, #24]
   2867a:	adds	r3, r0, #1
   2867c:	beq.n	286c2 <btrfs_close_devices@@Base+0x96>
   2867e:	ldr	r3, [r5, #28]
   28680:	cbz	r3, 2869c <btrfs_close_devices@@Base+0x70>
   28682:	blx	85a0 <fsync@plt>
   28686:	adds	r0, #1
   28688:	bne.n	2869c <btrfs_close_devices@@Base+0x70>
   2868a:	ldrd	r2, r3, [r5, #64]	; 0x40
   2868e:	mov	r0, fp
   28690:	bl	17b00 <__btrfs_warning@@Base>
   28694:	blx	897c <__errno_location@plt>
   28698:	ldr	r6, [r0, #0]
   2869a:	negs	r6, r6
   2869c:	movs	r3, #4
   2869e:	strd	r8, r9, [sp]
   286a2:	str	r3, [sp, #8]
   286a4:	movs	r2, #0
   286a6:	ldr	r0, [r5, #24]
   286a8:	movs	r3, #0
   286aa:	blx	85d0 <posix_fadvise64@plt>
   286ae:	cbz	r0, 286bc <btrfs_close_devices@@Base+0x90>
   286b0:	ldr	r3, [pc, #72]	; (286fc <btrfs_close_devices@@Base+0xd0>)
   286b2:	mov	r0, sl
   286b4:	ldr	r3, [r7, r3]
   286b6:	ldr	r1, [r3, #0]
   286b8:	blx	8b6c <fputs@plt+0x4>
   286bc:	ldr	r0, [r5, #24]
   286be:	blx	8b9c <close@plt>
   286c2:	ldrd	r2, r3, [r5]
   286c6:	str	r3, [r2, #4]
   286c8:	str	r2, [r3, #0]
   286ca:	ldr	r0, [r5, #32]
   286cc:	blx	8620 <free@plt+0x4>
   286d0:	ldr	r0, [r5, #36]	; 0x24
   286d2:	blx	8620 <free@plt+0x4>
   286d6:	mov	r0, r5
   286d8:	blx	8620 <free@plt+0x4>
   286dc:	b.n	28652 <btrfs_close_devices@@Base+0x26>
   286de:	blx	8620 <free@plt+0x4>
   286e2:	mov	r0, r6
   286e4:	add	sp, #20
   286e6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   286ea:	mov	r6, r4
   286ec:	b.n	286e2 <btrfs_close_devices@@Base+0xb6>
   286ee:	nop
   286f0:	strh	r3, [r7, r3]
   286f2:	movs	r1, r0
   286f4:	stmia	r7!, {r1, r3, r4, r5}
   286f6:	movs	r3, r0
   286f8:	ldrb	r6, [r2, #10]
   286fa:	movs	r1, r0
   286fc:	lsls	r0, r7, #8
	...

00028700 <btrfs_close_all_devices@@Base>:
   28700:	push	{r4, lr}
   28702:	ldr	r4, [pc, #20]	; (28718 <btrfs_close_all_devices@@Base+0x18>)
   28704:	add	r4, pc
   28706:	ldr	r0, [r4, #0]
   28708:	cmp	r0, r4
   2870a:	bne.n	2870e <btrfs_close_all_devices@@Base+0xe>
   2870c:	pop	{r4, pc}
   2870e:	subs	r0, #80	; 0x50
   28710:	bl	2862c <btrfs_close_devices@@Base>
   28714:	b.n	28706 <btrfs_close_all_devices@@Base+0x6>
   28716:	nop
   28718:	bge.n	28684 <btrfs_close_devices@@Base+0x58>
   2871a:	movs	r3, r0

0002871c <btrfs_open_devices@@Base>:
   2871c:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   28720:	mov	r5, r0
   28722:	ldr.w	sl, [pc, #180]	; 287d8 <btrfs_open_devices@@Base+0xbc>
   28726:	mov	r8, r1
   28728:	ldr.w	r9, [pc, #176]	; 287dc <btrfs_open_devices@@Base+0xc0>
   2872c:	ldr	r4, [r0, #72]	; 0x48
   2872e:	add	sl, pc
   28730:	ldr	r6, [pc, #172]	; (287e0 <btrfs_open_devices@@Base+0xc4>)
   28732:	add	r9, pc
   28734:	add	r6, pc
   28736:	add.w	r3, r5, #72	; 0x48
   2873a:	cmp	r4, r3
   2873c:	bne.n	28742 <btrfs_open_devices@@Base+0x26>
   2873e:	movs	r6, #0
   28740:	b.n	28782 <btrfs_open_devices@@Base+0x66>
   28742:	ldr	r0, [r4, #32]
   28744:	cbnz	r0, 28760 <btrfs_open_devices@@Base+0x44>
   28746:	ldr	r3, [pc, #156]	; (287e4 <btrfs_open_devices@@Base+0xc8>)
   28748:	mov	r2, r9
   2874a:	ldrd	r0, r1, [r4, #64]	; 0x40
   2874e:	ldr	r3, [r6, r3]
   28750:	strd	r0, r1, [sp]
   28754:	movs	r1, #1
   28756:	ldr	r0, [r3, #0]
   28758:	blx	8a64 <__fprintf_chk@plt+0x4>
   2875c:	ldr	r4, [r4, #0]
   2875e:	b.n	28736 <btrfs_open_devices@@Base+0x1a>
   28760:	mov	r1, r8
   28762:	blx	8970 <__open64_2@plt>
   28766:	subs	r7, r0, #0
   28768:	bge.n	2878a <btrfs_open_devices@@Base+0x6e>
   2876a:	blx	897c <__errno_location@plt>
   2876e:	ldr	r1, [r4, #32]
   28770:	ldr	r6, [r0, #0]
   28772:	ldr	r0, [pc, #116]	; (287e8 <btrfs_open_devices@@Base+0xcc>)
   28774:	negs	r6, r6
   28776:	add	r0, pc
   28778:	bl	17b7c <__btrfs_error@@Base>
   2877c:	mov	r0, r5
   2877e:	bl	2862c <btrfs_close_devices@@Base>
   28782:	mov	r0, r6
   28784:	add	sp, #16
   28786:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   2878a:	movs	r3, #4
   2878c:	movs	r2, #0
   2878e:	str	r3, [sp, #8]
   28790:	movs	r3, #0
   28792:	strd	r2, r3, [sp]
   28796:	blx	85d0 <posix_fadvise64@plt>
   2879a:	cbz	r0, 287a8 <btrfs_open_devices@@Base+0x8c>
   2879c:	ldr	r3, [pc, #68]	; (287e4 <btrfs_open_devices@@Base+0xc8>)
   2879e:	mov	r0, sl
   287a0:	ldr	r3, [r6, r3]
   287a2:	ldr	r1, [r3, #0]
   287a4:	blx	8b6c <fputs@plt+0x4>
   287a8:	ldrd	r0, r1, [r4, #64]	; 0x40
   287ac:	ldrd	r2, r3, [r5, #32]
   287b0:	cmp	r1, r3
   287b2:	it	eq
   287b4:	cmpeq	r0, r2
   287b6:	ldrd	r2, r3, [r5, #48]	; 0x30
   287ba:	it	eq
   287bc:	streq	r7, [r5, #64]	; 0x40
   287be:	ldrd	r0, r1, [r4, #64]	; 0x40
   287c2:	cmp	r1, r3
   287c4:	itt	eq
   287c6:	cmpeq	r0, r2
   287c8:	streq	r7, [r5, #68]	; 0x44
   287ca:	tst.w	r8, #2
   287ce:	str	r7, [r4, #24]
   287d0:	itt	ne
   287d2:	movne	r3, #1
   287d4:	strne	r3, [r4, #28]
   287d6:	b.n	2875c <btrfs_open_devices@@Base+0x40>
   287d8:	strh	r1, [r1, r0]
   287da:	movs	r1, r0
   287dc:	ldrb	r4, [r2, #7]
   287de:	movs	r1, r0
   287e0:	stmia	r6!, {r2, r3, r6}
   287e2:	movs	r3, r0
   287e4:	lsls	r0, r7, #8
   287e6:	movs	r0, r0
   287e8:	ldrb	r6, [r6, #6]
   287ea:	movs	r1, r0

000287ec <btrfs_scan_one_device@@Base>:
   287ec:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   287f0:	sub.w	sp, sp, #4128	; 0x1020
   287f4:	sub	sp, #12
   287f6:	mov	sl, r1
   287f8:	ldr	r1, [pc, #636]	; (28a78 <btrfs_scan_one_device@@Base+0x28c>)
   287fa:	mov	r4, r3
   287fc:	str	r2, [sp, #28]
   287fe:	add.w	r3, sp, #4128	; 0x1020
   28802:	ldr	r2, [pc, #632]	; (28a7c <btrfs_scan_one_device@@Base+0x290>)
   28804:	add	r1, pc
   28806:	adds	r3, #4
   28808:	add.w	fp, sp, #40	; 0x28
   2880c:	sub.w	r5, fp, #4
   28810:	ldr	r2, [r1, r2]
   28812:	mov	r1, r5
   28814:	ldr	r2, [r2, #0]
   28816:	str	r2, [r3, #0]
   28818:	mov.w	r2, #0
   2881c:	add.w	r3, sp, #4160	; 0x1040
   28820:	adds	r3, #24
   28822:	ldr	r3, [r3, #0]
   28824:	str	r3, [sp, #0]
   28826:	add.w	r3, sp, #4160	; 0x1040
   2882a:	adds	r3, #16
   2882c:	ldrd	r2, r3, [r3]
   28830:	bl	1d3c8 <btrfs_read_dev_super@@Base>
   28834:	cmp	r0, #0
   28836:	blt.w	28a68 <btrfs_scan_one_device@@Base+0x27c>
   2883a:	ldr.w	r3, [r5, #201]	; 0xc9
   2883e:	movs	r2, #0
   28840:	mov	r0, r2
   28842:	str	r3, [sp, #16]
   28844:	ldr.w	r3, [r5, #205]	; 0xcd
   28848:	str	r3, [sp, #20]
   2884a:	ldr	r3, [r5, #60]	; 0x3c
   2884c:	and.w	r1, r3, #2
   28850:	orrs.w	r3, r0, r1
   28854:	mov.w	r1, #0
   28858:	mov	r9, r1
   2885a:	add.w	r0, fp, #28
   2885e:	ite	eq
   28860:	ldrdeq	r3, r2, [r5, #136]	; 0x88
   28864:	movne	r3, #1
   28866:	strd	r3, r2, [r4]
   2886a:	ldr.w	r3, [r5, #188]	; 0xbc
   2886e:	ldrd	r6, r7, [r5, #72]	; 0x48
   28872:	and.w	r8, r3, #1024	; 0x400
   28876:	orrs.w	r3, r8, r9
   2887a:	it	ne
   2887c:	addwne	r1, fp, #567	; 0x237
   28880:	bl	28450 <btrfs_add_root_ref@@Base+0x128>
   28884:	mov	r4, r0
   28886:	cmp	r0, #0
   28888:	bne.n	28972 <btrfs_scan_one_device@@Base+0x186>
   2888a:	movs	r1, #96	; 0x60
   2888c:	movs	r0, #1
   2888e:	blx	8588 <calloc@plt+0x4>
   28892:	mov	r4, r0
   28894:	cbnz	r0, 288b6 <btrfs_scan_one_device@@Base+0xca>
   28896:	mvn.w	r0, #11
   2889a:	ldr	r1, [pc, #484]	; (28a80 <btrfs_scan_one_device@@Base+0x294>)
   2889c:	add.w	r3, sp, #4128	; 0x1020
   288a0:	ldr	r2, [pc, #472]	; (28a7c <btrfs_scan_one_device@@Base+0x290>)
   288a2:	adds	r3, #4
   288a4:	add	r1, pc
   288a6:	ldr	r2, [r1, r2]
   288a8:	ldr	r1, [r2, #0]
   288aa:	ldr	r2, [r3, #0]
   288ac:	eors	r1, r2
   288ae:	beq.w	28a6e <btrfs_scan_one_device@@Base+0x282>
   288b2:	blx	8708 <__stack_chk_fail@plt>
   288b6:	ldr	r2, [pc, #460]	; (28a84 <btrfs_scan_one_device@@Base+0x298>)
   288b8:	add.w	r3, r0, #72	; 0x48
   288bc:	strd	r3, r3, [r0, #72]	; 0x48
   288c0:	add.w	r3, r0, #80	; 0x50
   288c4:	add	r2, pc
   288c6:	add.w	ip, r4, #16
   288ca:	ldr	r1, [r2, #0]
   288cc:	str	r3, [r2, #0]
   288ce:	str	r3, [r1, #4]
   288d0:	add	r3, sp, #68	; 0x44
   288d2:	strd	r1, r2, [r0, #80]	; 0x50
   288d6:	ldmia	r3, {r0, r1, r2, r3}
   288d8:	stmia.w	r4, {r0, r1, r2, r3}
   288dc:	orrs.w	r3, r8, r9
   288e0:	beq.n	28968 <btrfs_scan_one_device@@Base+0x17c>
   288e2:	addw	r3, sp, #607	; 0x25f
   288e6:	addw	lr, sp, #623	; 0x26f
   288ea:	ldr	r0, [r3, #0]
   288ec:	adds	r3, #8
   288ee:	ldr.w	r1, [r3, #-4]
   288f2:	cmp	r3, lr
   288f4:	mov	r2, ip
   288f6:	stmia	r2!, {r0, r1}
   288f8:	mov	ip, r2
   288fa:	bne.n	288ea <btrfs_scan_one_device@@Base+0xfe>
   288fc:	ldrd	r2, r3, [sp, #16]
   28900:	strd	r6, r7, [r4, #40]	; 0x28
   28904:	strd	r2, r3, [r4, #32]
   28908:	mov.w	r2, #4294967295	; 0xffffffff
   2890c:	mov.w	r3, #4294967295	; 0xffffffff
   28910:	strd	r2, r3, [r4, #48]	; 0x30
   28914:	movs	r1, #128	; 0x80
   28916:	movs	r0, #1
   28918:	blx	8588 <calloc@plt+0x4>
   2891c:	mov	r8, r0
   2891e:	cmp	r0, #0
   28920:	beq.n	28896 <btrfs_scan_one_device@@Base+0xaa>
   28922:	mov.w	r3, #4294967295	; 0xffffffff
   28926:	str	r3, [r0, #24]
   28928:	ldrd	r2, r3, [sp, #16]
   2892c:	add.w	ip, r0, #112	; 0x70
   28930:	addw	lr, sp, #319	; 0x13f
   28934:	strd	r6, r7, [r0, #56]	; 0x38
   28938:	strd	r2, r3, [r0, #64]	; 0x40
   2893c:	addw	r3, sp, #303	; 0x12f
   28940:	ldr	r0, [r3, #0]
   28942:	adds	r3, #8
   28944:	ldr.w	r1, [r3, #-4]
   28948:	cmp	r3, lr
   2894a:	mov	r2, ip
   2894c:	stmia	r2!, {r0, r1}
   2894e:	mov	ip, r2
   28950:	bne.n	28940 <btrfs_scan_one_device@@Base+0x154>
   28952:	mov	r0, sl
   28954:	blx	86f0 <strdup@plt+0x4>
   28958:	mov	r9, r0
   2895a:	str.w	r0, [r8, #32]
   2895e:	cbnz	r0, 289c2 <btrfs_scan_one_device@@Base+0x1d6>
   28960:	mov	r0, r8
   28962:	blx	8620 <free@plt+0x4>
   28966:	b.n	28896 <btrfs_scan_one_device@@Base+0xaa>
   28968:	ldmia.w	r4, {r0, r1, r2, r3}
   2896c:	stmia.w	ip, {r0, r1, r2, r3}
   28970:	b.n	288fc <btrfs_scan_one_device@@Base+0x110>
   28972:	addw	r3, fp, #263	; 0x107
   28976:	str	r3, [sp, #0]
   28978:	ldrd	r2, r3, [sp, #16]
   2897c:	bl	28484 <btrfs_add_root_ref@@Base+0x15c>
   28980:	mov	r8, r0
   28982:	cmp	r0, #0
   28984:	beq.n	28914 <btrfs_scan_one_device@@Base+0x128>
   28986:	ldr.w	r9, [r0, #32]
   2898a:	cmp.w	r9, #0
   2898e:	beq.n	2899a <btrfs_scan_one_device@@Base+0x1ae>
   28990:	mov	r1, sl
   28992:	mov	r0, r9
   28994:	blx	85ac <strcmp@plt>
   28998:	cbz	r0, 28a16 <btrfs_scan_one_device@@Base+0x22a>
   2899a:	ldrd	r2, r3, [r8, #56]	; 0x38
   2899e:	cmp	r7, r3
   289a0:	it	eq
   289a2:	cmpeq	r6, r2
   289a4:	bcs.n	28a4e <btrfs_scan_one_device@@Base+0x262>
   289a6:	ldr	r0, [pc, #224]	; (28a88 <btrfs_scan_one_device@@Base+0x29c>)
   289a8:	mov	r1, sl
   289aa:	strd	r2, r3, [sp, #8]
   289ae:	mov	r2, r6
   289b0:	add	r0, pc
   289b2:	mov	r3, r7
   289b4:	str.w	r9, [sp]
   289b8:	bl	17b00 <__btrfs_warning@@Base>
   289bc:	mvn.w	r0, #16
   289c0:	b.n	2889a <btrfs_scan_one_device@@Base+0xae>
   289c2:	addw	r0, sp, #335	; 0x14f
   289c6:	blx	86f0 <strdup@plt+0x4>
   289ca:	str.w	r0, [r8, #36]	; 0x24
   289ce:	cbnz	r0, 289d8 <btrfs_scan_one_device@@Base+0x1ec>
   289d0:	mov	r0, r9
   289d2:	blx	8620 <free@plt+0x4>
   289d6:	b.n	28960 <btrfs_scan_one_device@@Base+0x174>
   289d8:	ldrd	r2, r3, [r5, #136]	; 0x88
   289dc:	strd	r2, r3, [r8, #40]	; 0x28
   289e0:	ldrd	r2, r3, [r5, #120]	; 0x78
   289e4:	strd	r2, r3, [r8, #48]	; 0x30
   289e8:	ldr.w	r2, [r5, #209]	; 0xd1
   289ec:	ldr.w	r3, [r5, #213]	; 0xd5
   289f0:	strd	r2, r3, [r8, #72]	; 0x48
   289f4:	ldr.w	r2, [r5, #217]	; 0xd9
   289f8:	ldr.w	r3, [r5, #221]	; 0xdd
   289fc:	strd	r2, r3, [r8, #80]	; 0x50
   28a00:	mov	r3, r4
   28a02:	ldr.w	r2, [r3, #72]!
   28a06:	str.w	r8, [r2, #4]
   28a0a:	strd	r2, r3, [r8]
   28a0e:	str.w	r8, [r4, #72]	; 0x48
   28a12:	str.w	r4, [r8, #12]
   28a16:	ldrd	r2, r3, [r4, #40]	; 0x28
   28a1a:	ldrd	r0, r1, [sp, #16]
   28a1e:	cmp	r3, r7
   28a20:	it	eq
   28a22:	cmpeq	r2, r6
   28a24:	ittt	cc
   28a26:	strdcc	r6, r7, [r4, #40]	; 0x28
   28a2a:	ldrdcc	r2, r3, [sp, #16]
   28a2e:	strdcc	r2, r3, [r4, #32]
   28a32:	ldrd	r2, r3, [r4, #48]	; 0x30
   28a36:	cmp	r1, r3
   28a38:	it	eq
   28a3a:	cmpeq	r0, r2
   28a3c:	ittt	cc
   28a3e:	movcc	r2, r0
   28a40:	movcc	r3, r1
   28a42:	strdcc	r2, r3, [r4, #48]	; 0x30
   28a46:	movs	r0, #0
   28a48:	ldr	r3, [sp, #28]
   28a4a:	str	r4, [r3, #0]
   28a4c:	b.n	2889a <btrfs_scan_one_device@@Base+0xae>
   28a4e:	mov	r0, sl
   28a50:	blx	86f0 <strdup@plt+0x4>
   28a54:	mov	r5, r0
   28a56:	cmp	r0, #0
   28a58:	beq.w	28896 <btrfs_scan_one_device@@Base+0xaa>
   28a5c:	mov	r0, r9
   28a5e:	blx	8620 <free@plt+0x4>
   28a62:	str.w	r5, [r8, #32]
   28a66:	b.n	28a16 <btrfs_scan_one_device@@Base+0x22a>
   28a68:	mvn.w	r0, #4
   28a6c:	b.n	2889a <btrfs_scan_one_device@@Base+0xae>
   28a6e:	add.w	sp, sp, #4128	; 0x1020
   28a72:	add	sp, #12
   28a74:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28a78:	stmia	r5!, {r2, r3, r4, r5, r6}
   28a7a:	movs	r3, r0
   28a7c:	lsls	r0, r5, #8
   28a7e:	movs	r0, r0
   28a80:	stmia	r4!, {r2, r3, r4, r6, r7}
   28a82:	movs	r3, r0
   28a84:	bhi.n	28a70 <btrfs_scan_one_device@@Base+0x284>
   28a86:	movs	r3, r0
   28a88:	strb	r0, [r3, #30]
   28a8a:	movs	r1, r0

00028a8c <btrfs_insert_dev_extent@@Base>:
   28a8c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28a90:	sub	sp, #52	; 0x34
   28a92:	mov	r7, r3
   28a94:	mov	r8, r2
   28a96:	ldrd	sl, r3, [sp, #88]	; 0x58
   28a9a:	mov	r4, r0
   28a9c:	ldr	r2, [pc, #236]	; (28b8c <btrfs_insert_dev_extent@@Base+0x100>)
   28a9e:	mov	r6, r1
   28aa0:	ldr.w	r9, [sp, #100]	; 0x64
   28aa4:	str	r3, [sp, #8]
   28aa6:	add	r2, pc
   28aa8:	ldr	r3, [sp, #96]	; 0x60
   28aaa:	ldr.w	fp, [r1, #8]
   28aae:	str	r3, [sp, #12]
   28ab0:	ldr	r3, [pc, #220]	; (28b90 <btrfs_insert_dev_extent@@Base+0x104>)
   28ab2:	ldr	r3, [r2, r3]
   28ab4:	ldr	r3, [r3, #0]
   28ab6:	str	r3, [sp, #44]	; 0x2c
   28ab8:	mov.w	r3, #0
   28abc:	bl	18550 <btrfs_alloc_path@@Base>
   28ac0:	mov	r5, r0
   28ac2:	cmp	r0, #0
   28ac4:	beq.n	28b7e <btrfs_insert_dev_extent@@Base+0xf2>
   28ac6:	ldrd	r0, r1, [r6, #64]	; 0x40
   28aca:	mov	r2, r5
   28acc:	ldr	r3, [sp, #12]
   28ace:	str.w	r9, [sp, #37]	; 0x25
   28ad2:	mov.w	r9, #1
   28ad6:	strd	r0, r1, [sp, #24]
   28ada:	mov	r1, fp
   28adc:	str.w	r3, [sp, #33]	; 0x21
   28ae0:	mov	r0, r4
   28ae2:	movs	r3, #204	; 0xcc
   28ae4:	str.w	r9, [sp, #4]
   28ae8:	strb.w	r3, [sp, #32]
   28aec:	movs	r3, #48	; 0x30
   28aee:	str	r3, [sp, #20]
   28af0:	add	r3, sp, #20
   28af2:	str	r3, [sp, #0]
   28af4:	add	r3, sp, #24
   28af6:	bl	1b70c <btrfs_insert_empty_items@@Base>
   28afa:	subs	r6, r0, #0
   28afc:	blt.n	28b64 <btrfs_insert_dev_extent@@Base+0xd8>
   28afe:	ldr	r0, [r5, #0]
   28b00:	movs	r2, #25
   28b02:	ldr	r3, [r5, #32]
   28b04:	mov.w	lr, #3
   28b08:	add.w	r1, r0, #96	; 0x60
   28b0c:	str	r0, [sp, #12]
   28b0e:	mla	r3, r2, r3, r1
   28b12:	ldr.w	r2, [r3, #118]	; 0x76
   28b16:	movs	r3, #0
   28b18:	add.w	ip, r2, #101	; 0x65
   28b1c:	adds	r2, #133	; 0x85
   28b1e:	add.w	r4, r1, ip
   28b22:	strb.w	lr, [r1, ip]
   28b26:	strb	r3, [r4, #1]
   28b28:	strb	r3, [r4, #2]
   28b2a:	strb	r3, [r4, #3]
   28b2c:	strb	r3, [r4, #4]
   28b2e:	strb	r3, [r4, #5]
   28b30:	strb	r3, [r4, #6]
   28b32:	strb	r3, [r4, #7]
   28b34:	strb	r3, [r4, #8]
   28b36:	strb	r3, [r4, #10]
   28b38:	strb	r3, [r4, #11]
   28b3a:	strb	r3, [r4, #12]
   28b3c:	strb	r3, [r4, #13]
   28b3e:	strb	r3, [r4, #14]
   28b40:	strb	r3, [r4, #15]
   28b42:	movs	r3, #16
   28b44:	strb.w	r9, [r4, #9]
   28b48:	str.w	r8, [r4, #16]
   28b4c:	str	r7, [r4, #20]
   28b4e:	ldr.w	r1, [fp, #464]	; 0x1d0
   28b52:	bl	17a30 <write_extent_buffer@@Base>
   28b56:	ldr	r3, [sp, #8]
   28b58:	ldr	r0, [sp, #12]
   28b5a:	str.w	sl, [r4, #24]
   28b5e:	str	r3, [r4, #28]
   28b60:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   28b64:	mov	r0, r5
   28b66:	bl	1857e <btrfs_free_path@@Base>
   28b6a:	ldr	r2, [pc, #40]	; (28b94 <btrfs_insert_dev_extent@@Base+0x108>)
   28b6c:	ldr	r3, [pc, #32]	; (28b90 <btrfs_insert_dev_extent@@Base+0x104>)
   28b6e:	add	r2, pc
   28b70:	ldr	r3, [r2, r3]
   28b72:	ldr	r2, [r3, #0]
   28b74:	ldr	r3, [sp, #44]	; 0x2c
   28b76:	eors	r2, r3
   28b78:	beq.n	28b84 <btrfs_insert_dev_extent@@Base+0xf8>
   28b7a:	blx	8708 <__stack_chk_fail@plt>
   28b7e:	mvn.w	r6, #11
   28b82:	b.n	28b6a <btrfs_insert_dev_extent@@Base+0xde>
   28b84:	mov	r0, r6
   28b86:	add	sp, #52	; 0x34
   28b88:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28b8c:	stmia	r2!, {r1, r3, r4, r6, r7}
   28b8e:	movs	r3, r0
   28b90:	lsls	r0, r5, #8
   28b92:	movs	r0, r0
   28b94:	stmia	r2!, {r1, r4}
   28b96:	movs	r3, r0

00028b98 <btrfs_add_device@@Base>:
   28b98:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28b9c:	mov	r5, r2
   28b9e:	vpush	{d8}
   28ba2:	mov	sl, r1
   28ba4:	ldr	r2, [pc, #536]	; (28dc0 <btrfs_add_device@@Base+0x228>)
   28ba6:	ldr	r3, [pc, #540]	; (28dc4 <btrfs_add_device@@Base+0x22c>)
   28ba8:	add	r2, pc
   28baa:	vmov	s16, r0
   28bae:	sub	sp, #68	; 0x44
   28bb0:	ldr.w	fp, [r1, #32]
   28bb4:	ldr	r3, [r2, r3]
   28bb6:	ldr	r3, [r3, #0]
   28bb8:	str	r3, [sp, #60]	; 0x3c
   28bba:	mov.w	r3, #0
   28bbe:	bl	18550 <btrfs_alloc_path@@Base>
   28bc2:	mov	r6, r0
   28bc4:	cmp	r0, #0
   28bc6:	beq.w	28dae <btrfs_add_device@@Base+0x216>
   28bca:	mov.w	r9, #0
   28bce:	movs	r3, #1
   28bd0:	strd	r3, r9, [sp, #20]
   28bd4:	add	r3, sp, #20
   28bd6:	str	r3, [sp, #12]
   28bd8:	mov.w	r2, #4294967295	; 0xffffffff
   28bdc:	mov	r3, r0
   28bde:	strb.w	r2, [sp, #29]
   28be2:	strb.w	r2, [sp, #30]
   28be6:	mov	r1, fp
   28be8:	strb.w	r2, [sp, #31]
   28bec:	mov	r0, r9
   28bee:	strb.w	r2, [sp, #32]
   28bf2:	movs	r7, #216	; 0xd8
   28bf4:	strb.w	r2, [sp, #33]	; 0x21
   28bf8:	strb.w	r2, [sp, #34]	; 0x22
   28bfc:	strb.w	r2, [sp, #35]	; 0x23
   28c00:	strb.w	r2, [sp, #36]	; 0x24
   28c04:	strd	r9, r9, [sp]
   28c08:	ldr	r2, [sp, #12]
   28c0a:	strb.w	r7, [sp, #28]
   28c0e:	bl	1a93c <btrfs_search_slot@@Base>
   28c12:	subs	r4, r0, #0
   28c14:	blt.w	28d9e <btrfs_add_device@@Base+0x206>
   28c18:	ldr	r2, [pc, #428]	; (28dc8 <btrfs_add_device@@Base+0x230>)
   28c1a:	it	eq
   28c1c:	moveq	r3, #1
   28c1e:	ldr	r1, [pc, #428]	; (28dcc <btrfs_add_device@@Base+0x234>)
   28c20:	it	ne
   28c22:	movne	r3, r9
   28c24:	ldr	r0, [pc, #424]	; (28dd0 <btrfs_add_device@@Base+0x238>)
   28c26:	add	r2, pc
   28c28:	adds	r2, #22
   28c2a:	add	r1, pc
   28c2c:	add	r0, pc
   28c2e:	str	r3, [sp, #0]
   28c30:	movw	r3, #719	; 0x2cf
   28c34:	bl	28580 <btrfs_add_root_ref@@Base+0x258>
   28c38:	movs	r2, #1
   28c3a:	movs	r3, #0
   28c3c:	mov	r1, r6
   28c3e:	mov	r0, fp
   28c40:	str	r7, [sp, #0]
   28c42:	bl	1bff4 <btrfs_previous_item@@Base>
   28c46:	mov	r4, r0
   28c48:	cmp	r0, #0
   28c4a:	bne.w	28da4 <btrfs_add_device@@Base+0x20c>
   28c4e:	ldr	r2, [r6, #32]
   28c50:	add	r1, sp, #40	; 0x28
   28c52:	ldr	r0, [r6, #0]
   28c54:	bl	285c4 <btrfs_add_root_ref@@Base+0x29c>
   28c58:	ldr.w	r7, [sp, #49]	; 0x31
   28c5c:	ldr.w	r8, [sp, #53]	; 0x35
   28c60:	adds	r7, #1
   28c62:	adc.w	r8, r8, r9
   28c66:	mov	r0, r6
   28c68:	bl	18558 <btrfs_release_path@@Base>
   28c6c:	cmp	r4, #0
   28c6e:	bne.w	28d84 <btrfs_add_device@@Base+0x1ec>
   28c72:	movs	r2, #1
   28c74:	movs	r3, #0
   28c76:	strd	r2, r3, [sp, #40]	; 0x28
   28c7a:	movs	r3, #216	; 0xd8
   28c7c:	strb.w	r3, [sp, #48]	; 0x30
   28c80:	movs	r3, #98	; 0x62
   28c82:	str	r3, [sp, #20]
   28c84:	movs	r3, #1
   28c86:	str	r3, [sp, #4]
   28c88:	mov	r2, r6
   28c8a:	ldr	r3, [sp, #12]
   28c8c:	mov	r1, fp
   28c8e:	vmov	r0, s16
   28c92:	str.w	r7, [sp, #49]	; 0x31
   28c96:	str	r3, [sp, #0]
   28c98:	add	r3, sp, #40	; 0x28
   28c9a:	str.w	r8, [sp, #53]	; 0x35
   28c9e:	bl	1b70c <btrfs_insert_empty_items@@Base>
   28ca2:	mov	r4, r0
   28ca4:	cmp	r0, #0
   28ca6:	bne.n	28d84 <btrfs_add_device@@Base+0x1ec>
   28ca8:	ldr	r0, [r6, #0]
   28caa:	movs	r1, #25
   28cac:	ldr	r3, [r6, #32]
   28cae:	add.w	r2, r0, #96	; 0x60
   28cb2:	mla	r3, r1, r3, r2
   28cb6:	ldr.w	r9, [r3, #118]	; 0x76
   28cba:	strd	r7, r8, [r5, #64]	; 0x40
   28cbe:	add.w	r1, r9, #101	; 0x65
   28cc2:	adds	r3, r2, r1
   28cc4:	str	r7, [r2, r1]
   28cc6:	str.w	r8, [r3, #4]
   28cca:	strb.w	r4, [r3, #44]	; 0x2c
   28cce:	strb.w	r4, [r3, #45]	; 0x2d
   28cd2:	strb.w	r4, [r3, #46]	; 0x2e
   28cd6:	strb.w	r4, [r3, #47]	; 0x2f
   28cda:	strb.w	r4, [r3, #48]	; 0x30
   28cde:	strb.w	r4, [r3, #49]	; 0x31
   28ce2:	strb.w	r4, [r3, #50]	; 0x32
   28ce6:	strb.w	r4, [r3, #51]	; 0x33
   28cea:	ldrd	r1, r2, [r5, #104]	; 0x68
   28cee:	str	r1, [r3, #36]	; 0x24
   28cf0:	str	r2, [r3, #40]	; 0x28
   28cf2:	ldr	r2, [r5, #88]	; 0x58
   28cf4:	str	r2, [r3, #24]
   28cf6:	ldr	r2, [r5, #92]	; 0x5c
   28cf8:	str	r2, [r3, #28]
   28cfa:	ldr	r2, [r5, #96]	; 0x60
   28cfc:	str	r2, [r3, #32]
   28cfe:	ldrd	r1, r2, [r5, #72]	; 0x48
   28d02:	str	r1, [r3, #8]
   28d04:	str	r2, [r3, #12]
   28d06:	ldrd	r1, r2, [r5, #80]	; 0x50
   28d0a:	str	r1, [r3, #16]
   28d0c:	add.w	r1, r5, #112	; 0x70
   28d10:	str	r2, [r3, #20]
   28d12:	add.w	r2, r9, #167	; 0xa7
   28d16:	strb.w	r4, [r3, #60]	; 0x3c
   28d1a:	strb.w	r4, [r3, #61]	; 0x3d
   28d1e:	strb.w	r4, [r3, #62]	; 0x3e
   28d22:	strb.w	r4, [r3, #63]	; 0x3f
   28d26:	strb.w	r4, [r3, #64]	; 0x40
   28d2a:	strb.w	r4, [r3, #65]	; 0x41
   28d2e:	strb.w	r4, [r3, #52]	; 0x34
   28d32:	strb.w	r4, [r3, #53]	; 0x35
   28d36:	strb.w	r4, [r3, #54]	; 0x36
   28d3a:	strb.w	r4, [r3, #55]	; 0x37
   28d3e:	strb.w	r4, [r3, #56]	; 0x38
   28d42:	strb.w	r4, [r3, #57]	; 0x39
   28d46:	strb.w	r4, [r3, #58]	; 0x3a
   28d4a:	strb.w	r4, [r3, #59]	; 0x3b
   28d4e:	movs	r3, #16
   28d50:	str	r0, [sp, #12]
   28d52:	bl	17a30 <write_extent_buffer@@Base>
   28d56:	ldr.w	r1, [sl, #352]	; 0x160
   28d5a:	movs	r3, #16
   28d5c:	add.w	r2, r9, #183	; 0xb7
   28d60:	ldr	r0, [sp, #12]
   28d62:	add	r1, r3
   28d64:	bl	17a30 <write_extent_buffer@@Base>
   28d68:	ldr	r0, [sp, #12]
   28d6a:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   28d6e:	ldr.w	r2, [sl, #352]	; 0x160
   28d72:	ldrd	r0, r5, [r5, #72]	; 0x48
   28d76:	ldrd	r3, r1, [r2, #56]	; 0x38
   28d7a:	adds	r3, r3, r0
   28d7c:	adc.w	r1, r5, r1
   28d80:	strd	r3, r1, [r2, #56]	; 0x38
   28d84:	mov	r0, r6
   28d86:	bl	1857e <btrfs_free_path@@Base>
   28d8a:	ldr	r2, [pc, #72]	; (28dd4 <btrfs_add_device@@Base+0x23c>)
   28d8c:	ldr	r3, [pc, #52]	; (28dc4 <btrfs_add_device@@Base+0x22c>)
   28d8e:	add	r2, pc
   28d90:	ldr	r3, [r2, r3]
   28d92:	ldr	r2, [r3, #0]
   28d94:	ldr	r3, [sp, #60]	; 0x3c
   28d96:	eors	r2, r3
   28d98:	beq.n	28db4 <btrfs_add_device@@Base+0x21c>
   28d9a:	blx	8708 <__stack_chk_fail@plt>
   28d9e:	movs	r7, #0
   28da0:	mov	r8, r7
   28da2:	b.n	28c66 <btrfs_add_device@@Base+0xce>
   28da4:	movs	r7, #1
   28da6:	mov.w	r8, #0
   28daa:	mov	r4, r9
   28dac:	b.n	28c66 <btrfs_add_device@@Base+0xce>
   28dae:	mvn.w	r4, #11
   28db2:	b.n	28d8a <btrfs_add_device@@Base+0x1f2>
   28db4:	mov	r0, r4
   28db6:	add	sp, #68	; 0x44
   28db8:	vpop	{d8}
   28dbc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28dc0:	stmia	r1!, {r3, r4, r6, r7}
   28dc2:	movs	r3, r0
   28dc4:	lsls	r0, r5, #8
   28dc6:	movs	r0, r0
   28dc8:	ldrb	r6, [r7, #16]
   28dca:	movs	r1, r0
   28dcc:	strb	r1, [r4, #21]
   28dce:	movs	r1, r0
   28dd0:	subs	r7, r2, #0
   28dd2:	movs	r1, r0
   28dd4:	itee	<und>
   28dd6:	mov<und>	r3, r0

00028dd8 <btrfs_update_device@@Base>:
   28dd8:	ldral	r2, [pc, #212]	; (28eb0 <btrfs_update_device@@Base+0xd8>)
   28dda:	ldral	r3, [pc, #216]	; (28eb4 <btrfs_update_device@@Base+0xdc>)
   28ddc:	add	r2, pc
   28dde:	push	{r4, r5, r6, r7, lr}
   28de0:	sub	sp, #44	; 0x2c
   28de2:	ldr	r3, [r2, r3]
   28de4:	mov	r4, r1
   28de6:	mov	r6, r0
   28de8:	ldr	r3, [r3, #0]
   28dea:	str	r3, [sp, #36]	; 0x24
   28dec:	mov.w	r3, #0
   28df0:	ldr	r3, [r1, #8]
   28df2:	ldr.w	r3, [r3, #464]	; 0x1d0
   28df6:	ldr	r1, [r3, #32]
   28df8:	str	r1, [sp, #12]
   28dfa:	bl	18550 <btrfs_alloc_path@@Base>
   28dfe:	mov	r5, r0
   28e00:	cmp	r0, #0
   28e02:	beq.n	28ea2 <btrfs_update_device@@Base+0xca>
   28e04:	movs	r2, #1
   28e06:	movs	r3, #0
   28e08:	strd	r2, r3, [sp, #16]
   28e0c:	movs	r3, #216	; 0xd8
   28e0e:	strb.w	r3, [sp, #24]
   28e12:	movs	r2, #1
   28e14:	ldr	r3, [r4, #64]	; 0x40
   28e16:	ldr	r1, [sp, #12]
   28e18:	str.w	r3, [sp, #25]
   28e1c:	ldr	r3, [r4, #68]	; 0x44
   28e1e:	str.w	r3, [sp, #29]
   28e22:	movs	r3, #0
   28e24:	strd	r3, r2, [sp]
   28e28:	mov	r3, r0
   28e2a:	add	r2, sp, #16
   28e2c:	mov	r0, r6
   28e2e:	bl	1a93c <btrfs_search_slot@@Base>
   28e32:	subs	r6, r0, #0
   28e34:	blt.n	28e82 <btrfs_update_device@@Base+0xaa>
   28e36:	bne.n	28e9c <btrfs_update_device@@Base+0xc4>
   28e38:	ldr	r0, [r5, #0]
   28e3a:	movs	r2, #25
   28e3c:	ldr	r3, [r5, #32]
   28e3e:	add.w	r1, r0, #96	; 0x60
   28e42:	ldr.w	ip, [r4, #68]	; 0x44
   28e46:	ldr	r7, [r4, #64]	; 0x40
   28e48:	mla	r3, r2, r3, r1
   28e4c:	ldr.w	r3, [r3, #118]	; 0x76
   28e50:	adds	r3, #101	; 0x65
   28e52:	adds	r2, r1, r3
   28e54:	str	r7, [r1, r3]
   28e56:	str.w	ip, [r2, #4]
   28e5a:	ldrd	r1, r3, [r4, #104]	; 0x68
   28e5e:	str	r1, [r2, #36]	; 0x24
   28e60:	str	r3, [r2, #40]	; 0x28
   28e62:	ldr	r3, [r4, #88]	; 0x58
   28e64:	str	r3, [r2, #24]
   28e66:	ldr	r3, [r4, #92]	; 0x5c
   28e68:	str	r3, [r2, #28]
   28e6a:	ldr	r3, [r4, #96]	; 0x60
   28e6c:	str	r3, [r2, #32]
   28e6e:	ldrd	r1, r3, [r4, #72]	; 0x48
   28e72:	str	r1, [r2, #8]
   28e74:	str	r3, [r2, #12]
   28e76:	ldrd	r1, r3, [r4, #80]	; 0x50
   28e7a:	str	r1, [r2, #16]
   28e7c:	str	r3, [r2, #20]
   28e7e:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   28e82:	mov	r0, r5
   28e84:	bl	1857e <btrfs_free_path@@Base>
   28e88:	ldr	r2, [pc, #44]	; (28eb8 <btrfs_update_device@@Base+0xe0>)
   28e8a:	ldr	r3, [pc, #40]	; (28eb4 <btrfs_update_device@@Base+0xdc>)
   28e8c:	add	r2, pc
   28e8e:	ldr	r3, [r2, r3]
   28e90:	ldr	r2, [r3, #0]
   28e92:	ldr	r3, [sp, #36]	; 0x24
   28e94:	eors	r2, r3
   28e96:	beq.n	28ea8 <btrfs_update_device@@Base+0xd0>
   28e98:	blx	8708 <__stack_chk_fail@plt>
   28e9c:	mvn.w	r6, #1
   28ea0:	b.n	28e82 <btrfs_update_device@@Base+0xaa>
   28ea2:	mvn.w	r6, #11
   28ea6:	b.n	28e88 <btrfs_update_device@@Base+0xb0>
   28ea8:	mov	r0, r6
   28eaa:	add	sp, #44	; 0x2c
   28eac:	pop	{r4, r5, r6, r7, pc}
   28eae:	nop
   28eb0:	itt	ge
   28eb2:	movge	r3, r0
   28eb4:	lslge	r0, r5, #8
   28eb6:	movs	r0, r0
   28eb8:	bkpt	0x00f4
   28eba:	movs	r3, r0

00028ebc <btrfs_add_system_chunk@@Base>:
   28ebc:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   28ec0:	mov	r4, r1
   28ec2:	ldr.w	r6, [r0, #308]	; 0x134
   28ec6:	mov	r1, r2
   28ec8:	add.w	r5, r3, #17
   28ecc:	ldr.w	r2, [r6, #160]	; 0xa0
   28ed0:	add	r5, r2
   28ed2:	cmp.w	r5, #2048	; 0x800
   28ed6:	bhi.n	28f16 <btrfs_add_system_chunk@@Base+0x5a>
   28ed8:	ldr.w	lr, [r4, #9]
   28edc:	addw	r7, r6, #811	; 0x32b
   28ee0:	ldr.w	ip, [r4, #13]
   28ee4:	adds	r0, r7, r2
   28ee6:	ldrb.w	r8, [r4, #8]
   28eea:	adds	r0, #17
   28eec:	ldr.w	r9, [r4]
   28ef0:	ldr	r4, [r4, #4]
   28ef2:	str.w	r9, [r7, r2]
   28ef6:	mov	r2, r3
   28ef8:	str.w	r4, [r0, #-13]
   28efc:	strb.w	r8, [r0, #-9]
   28f00:	str.w	lr, [r0, #-8]
   28f04:	str.w	ip, [r0, #-4]
   28f08:	blx	866c <memcpy@plt+0x4>
   28f0c:	movs	r0, #0
   28f0e:	str.w	r5, [r6, #160]	; 0xa0
   28f12:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   28f16:	mvn.w	r0, #26
   28f1a:	b.n	28f12 <btrfs_add_system_chunk@@Base+0x56>

00028f1c <btrfs_alloc_chunk@@Base>:
   28f1c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28f20:	vpush	{d8-d11}
   28f24:	vmov	s16, r0
   28f28:	sub	sp, #252	; 0xfc
   28f2a:	str	r3, [sp, #148]	; 0x94
   28f2c:	ldrd	sl, r3, [sp, #320]	; 0x140
   28f30:	str	r2, [sp, #176]	; 0xb0
   28f32:	ldr.w	r2, [pc, #1252]	; 29418 <btrfs_alloc_chunk@@Base+0x4fc>
   28f36:	str	r3, [sp, #120]	; 0x78
   28f38:	ldr.w	r3, [pc, #1248]	; 2941c <btrfs_alloc_chunk@@Base+0x500>
   28f3c:	add	r2, pc
   28f3e:	str	r1, [sp, #44]	; 0x2c
   28f40:	ldr	r3, [r2, r3]
   28f42:	ldr	r3, [r3, #0]
   28f44:	str	r3, [sp, #244]	; 0xf4
   28f46:	mov.w	r3, #0
   28f4a:	ldr	r3, [r1, #24]
   28f4c:	str	r3, [sp, #172]	; 0xac
   28f4e:	ldr	r3, [r1, #32]
   28f50:	vmov	s17, r3
   28f54:	ldr.w	r3, [r1, #352]	; 0x160
   28f58:	str	r3, [sp, #48]	; 0x30
   28f5a:	adds	r3, #72	; 0x48
   28f5c:	str	r3, [sp, #108]	; 0x6c
   28f5e:	ldr	r3, [sp, #48]	; 0x30
   28f60:	ldr	r2, [sp, #108]	; 0x6c
   28f62:	ldr	r3, [r3, #72]	; 0x48
   28f64:	cmp	r2, r3
   28f66:	bne.n	28f86 <btrfs_alloc_chunk@@Base+0x6a>
   28f68:	mvn.w	r6, #27
   28f6c:	ldr.w	r2, [pc, #1200]	; 29420 <btrfs_alloc_chunk@@Base+0x504>
   28f70:	ldr.w	r3, [pc, #1192]	; 2941c <btrfs_alloc_chunk@@Base+0x500>
   28f74:	add	r2, pc
   28f76:	ldr	r3, [r2, r3]
   28f78:	ldr	r2, [r3, #0]
   28f7a:	ldr	r3, [sp, #244]	; 0xf4
   28f7c:	eors	r2, r3
   28f7e:	beq.w	29a5c <btrfs_alloc_chunk@@Base+0xb40>
   28f82:	blx	8708 <__stack_chk_fail@plt>
   28f86:	and.w	r0, sl, #2040	; 0x7f8
   28f8a:	movs	r3, #0
   28f8c:	mov	r1, r3
   28f8e:	orrs.w	r2, r0, r1
   28f92:	beq.w	291f6 <btrfs_alloc_chunk@@Base+0x2da>
   28f96:	and.w	r0, sl, #2
   28f9a:	orrs.w	r2, r0, r1
   28f9e:	bne.w	291de <btrfs_alloc_chunk@@Base+0x2c2>
   28fa2:	and.w	r0, sl, #1
   28fa6:	orrs.w	r2, r0, r1
   28faa:	beq.w	2919c <btrfs_alloc_chunk@@Base+0x280>
   28fae:	ldr	r3, [sp, #44]	; 0x2c
   28fb0:	movs	r2, #0
   28fb2:	mov.w	r1, #1073741824	; 0x40000000
   28fb6:	mov.w	r5, #2147483648	; 0x80000000
   28fba:	strd	r1, r2, [sp, #16]
   28fbe:	movs	r4, #2
   28fc0:	ldr.w	r3, [r3, #384]	; 0x180
   28fc4:	mov.w	r2, #67108864	; 0x4000000
   28fc8:	subs	r3, #206	; 0xce
   28fca:	lsrs	r3, r3, #5
   28fcc:	adds	r3, #1
   28fce:	str	r2, [sp, #72]	; 0x48
   28fd0:	and.w	r6, sl, #16
   28fd4:	ldr	r2, [sp, #44]	; 0x2c
   28fd6:	movs	r7, #0
   28fd8:	ldr.w	r1, [r2, #308]	; 0x134
   28fdc:	orrs.w	r2, r6, r7
   28fe0:	beq.w	291fc <btrfs_alloc_chunk@@Base+0x2e0>
   28fe4:	ldr.w	r7, [r1, #140]	; 0x8c
   28fe8:	ldr.w	r6, [r1, #136]	; 0x88
   28fec:	cmp	r7, #0
   28fee:	it	eq
   28ff0:	cmpeq	r6, #3
   28ff2:	it	cs
   28ff4:	movcs	r6, #2
   28ff6:	cmp	r6, #2
   28ff8:	mov	fp, r6
   28ffa:	bne.n	28f68 <btrfs_alloc_chunk@@Base+0x4c>
   28ffc:	and.w	r6, sl, #512	; 0x200
   29000:	movs	r7, #0
   29002:	orrs.w	r2, r6, r7
   29006:	beq.n	29020 <btrfs_alloc_chunk@@Base+0x104>
   29008:	ldr.w	r7, [r1, #140]	; 0x8c
   2900c:	ldr.w	r6, [r1, #136]	; 0x88
   29010:	cmp	r7, #0
   29012:	it	eq
   29014:	cmpeq	r6, #4
   29016:	it	cs
   29018:	movcs	r6, #3
   2901a:	cmp	r6, #3
   2901c:	mov	fp, r6
   2901e:	bne.n	28f68 <btrfs_alloc_chunk@@Base+0x4c>
   29020:	and.w	r6, sl, #1024	; 0x400
   29024:	movs	r7, #0
   29026:	orrs.w	r2, r6, r7
   2902a:	beq.n	29044 <btrfs_alloc_chunk@@Base+0x128>
   2902c:	ldr.w	r7, [r1, #140]	; 0x8c
   29030:	ldr.w	r6, [r1, #136]	; 0x88
   29034:	cmp	r7, #0
   29036:	it	eq
   29038:	cmpeq	r6, #5
   2903a:	it	cs
   2903c:	movcs	r6, #4
   2903e:	cmp	r6, #4
   29040:	mov	fp, r6
   29042:	bne.n	28f68 <btrfs_alloc_chunk@@Base+0x4c>
   29044:	movs	r2, #0
   29046:	and.w	r0, sl, #32
   2904a:	strd	r0, r2, [sp, #56]	; 0x38
   2904e:	ldrd	r6, r7, [sp, #56]	; 0x38
   29052:	orrs.w	r0, r6, r7
   29056:	and.w	r6, sl, #8
   2905a:	mov	r7, r2
   2905c:	it	ne
   2905e:	movne.w	fp, #2
   29062:	orrs.w	r2, r6, r7
   29066:	beq.w	29202 <btrfs_alloc_chunk@@Base+0x2e6>
   2906a:	ldr.w	r2, [r1, #136]	; 0x88
   2906e:	cmp	r2, r3
   29070:	it	ge
   29072:	movge	r2, r3
   29074:	mov	fp, r2
   29076:	movs	r2, #2
   29078:	str	r2, [sp, #76]	; 0x4c
   2907a:	and.w	r2, sl, #64	; 0x40
   2907e:	str	r2, [sp, #88]	; 0x58
   29080:	movs	r2, #0
   29082:	str	r2, [sp, #92]	; 0x5c
   29084:	ldrd	r6, r7, [sp, #88]	; 0x58
   29088:	orrs.w	r2, r6, r7
   2908c:	beq.w	29208 <btrfs_alloc_chunk@@Base+0x2ec>
   29090:	ldr.w	r2, [r1, #136]	; 0x88
   29094:	cmp	r2, r3
   29096:	it	ge
   29098:	movge	r2, r3
   2909a:	cmp	r2, #3
   2909c:	ble.w	28f68 <btrfs_alloc_chunk@@Base+0x4c>
   290a0:	bic.w	fp, r2, #1
   290a4:	movs	r2, #2
   290a6:	str	r2, [sp, #52]	; 0x34
   290a8:	movs	r2, #4
   290aa:	str	r2, [sp, #76]	; 0x4c
   290ac:	and.w	r6, sl, #128	; 0x80
   290b0:	movs	r7, #0
   290b2:	orrs.w	r2, r6, r7
   290b6:	beq.n	290ce <btrfs_alloc_chunk@@Base+0x1b2>
   290b8:	ldr.w	r2, [r1, #136]	; 0x88
   290bc:	cmp	r2, r3
   290be:	it	ge
   290c0:	movge	r2, r3
   290c2:	cmp	r2, #1
   290c4:	mov	fp, r2
   290c6:	ble.w	28f68 <btrfs_alloc_chunk@@Base+0x4c>
   290ca:	movs	r2, #2
   290cc:	str	r2, [sp, #76]	; 0x4c
   290ce:	and.w	r6, sl, #256	; 0x100
   290d2:	movs	r7, #0
   290d4:	orrs.w	r2, r6, r7
   290d8:	beq.n	290f0 <btrfs_alloc_chunk@@Base+0x1d4>
   290da:	ldr.w	r2, [r1, #136]	; 0x88
   290de:	cmp	r3, r2
   290e0:	it	ge
   290e2:	movge	r3, r2
   290e4:	cmp	r3, #2
   290e6:	mov	fp, r3
   290e8:	ble.w	28f68 <btrfs_alloc_chunk@@Base+0x4c>
   290ec:	movs	r3, #3
   290ee:	str	r3, [sp, #76]	; 0x4c
   290f0:	ldr	r0, [r1, #112]	; 0x70
   290f2:	movs	r2, #1
   290f4:	ldr	r1, [r1, #116]	; 0x74
   290f6:	bl	321c0 <div_factor@@Base>
   290fa:	strd	r5, r4, [sp, #64]	; 0x40
   290fe:	movs	r4, #0
   29100:	mov	r3, r1
   29102:	mov	r2, r0
   29104:	ldrd	r0, r1, [sp, #64]	; 0x40
   29108:	cmp	r3, r1
   2910a:	it	eq
   2910c:	cmpeq	r2, r0
   2910e:	it	cc
   29110:	strdcc	r2, r3, [sp, #64]	; 0x40
   29114:	movs	r3, #0
   29116:	strd	r3, r4, [sp, #32]
   2911a:	str	r3, [sp, #168]	; 0xa8
   2911c:	movs	r4, #0
   2911e:	movs	r3, #0
   29120:	strd	r3, r4, [sp, #96]	; 0x60
   29124:	ldr	r3, [sp, #52]	; 0x34
   29126:	mov	r0, sl
   29128:	ldr	r1, [sp, #120]	; 0x78
   2912a:	strd	fp, r3, [sp]
   2912e:	ldrd	r2, r3, [sp, #16]
   29132:	bl	284c4 <btrfs_add_root_ref@@Base+0x19c>
   29136:	ldrd	r3, r4, [sp, #64]	; 0x40
   2913a:	cmp	r4, r1
   2913c:	ldr	r4, [pc, #724]	; (29414 <btrfs_alloc_chunk@@Base+0x4f8>)
   2913e:	it	eq
   29140:	cmpeq	r3, r0
   29142:	bcs.n	29158 <btrfs_alloc_chunk@@Base+0x23c>
   29144:	mov	r2, fp
   29146:	ldrd	r0, r1, [sp, #64]	; 0x40
   2914a:	asrs	r3, r2, #31
   2914c:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   29150:	and.w	r3, r4, r0
   29154:	strd	r3, r1, [sp, #16]
   29158:	ldr	r3, [sp, #72]	; 0x48
   2915a:	asrs	r2, r3, #31
   2915c:	mov	r1, r3
   2915e:	mov	r3, r2
   29160:	mov	r2, r1
   29162:	ldrd	r0, r1, [sp, #16]
   29166:	cmp	r3, r1
   29168:	it	eq
   2916a:	cmpeq	r2, r0
   2916c:	itt	cc
   2916e:	movcc	r3, r1
   29170:	movcc	r2, r0
   29172:	and.w	r1, r4, r2
   29176:	strd	r1, r3, [sp, #16]
   2917a:	add	r3, sp, #196	; 0xc4
   2917c:	strd	r3, r3, [sp, #196]	; 0xc4
   29180:	ldr	r3, [sp, #48]	; 0x30
   29182:	ldr	r5, [r3, #72]	; 0x48
   29184:	ldrd	r3, r4, [sp, #56]	; 0x38
   29188:	orrs	r3, r4
   2918a:	beq.w	29536 <btrfs_alloc_chunk@@Base+0x61a>
   2918e:	adds	r3, r1, r1
   29190:	str	r3, [sp, #128]	; 0x80
   29192:	ldr	r3, [sp, #20]
   29194:	adcs	r3, r3
   29196:	str	r3, [sp, #132]	; 0x84
   29198:	movs	r7, #0
   2919a:	b.n	29328 <btrfs_alloc_chunk@@Base+0x40c>
   2919c:	and.w	r0, sl, #4
   291a0:	orrs.w	r2, r0, r1
   291a4:	beq.n	291f6 <btrfs_alloc_chunk@@Base+0x2da>
   291a6:	ldr	r3, [sp, #48]	; 0x30
   291a8:	movs	r1, #12
   291aa:	mov.w	r0, #2147483648	; 0x80000000
   291ae:	movs	r4, #0
   291b0:	ldrd	r2, r3, [r3, #56]	; 0x38
   291b4:	cmp	r1, r3
   291b6:	it	eq
   291b8:	cmpeq	r0, r2
   291ba:	mov.w	r2, #33554432	; 0x2000000
   291be:	ite	cs
   291c0:	movcs.w	r3, #268435456	; 0x10000000
   291c4:	movcc.w	r3, #1073741824	; 0x40000000
   291c8:	strd	r3, r4, [sp, #16]
   291cc:	ldr	r3, [sp, #44]	; 0x2c
   291ce:	ldrd	r5, r4, [sp, #16]
   291d2:	ldr.w	r3, [r3, #384]	; 0x180
   291d6:	subs	r3, #206	; 0xce
   291d8:	lsrs	r3, r3, #5
   291da:	adds	r3, #1
   291dc:	b.n	28fce <btrfs_alloc_chunk@@Base+0xb2>
   291de:	movs	r3, #58	; 0x3a
   291e0:	mov.w	r5, #16777216	; 0x1000000
   291e4:	movs	r2, #0
   291e6:	mov.w	r1, #8388608	; 0x800000
   291ea:	movs	r4, #0
   291ec:	strd	r1, r2, [sp, #16]
   291f0:	mov.w	r2, #1048576	; 0x100000
   291f4:	b.n	28fce <btrfs_alloc_chunk@@Base+0xb2>
   291f6:	mov.w	r5, #33554432	; 0x2000000
   291fa:	b.n	291e4 <btrfs_alloc_chunk@@Base+0x2c8>
   291fc:	mov.w	fp, #1
   29200:	b.n	28ffc <btrfs_alloc_chunk@@Base+0xe0>
   29202:	str.w	fp, [sp, #76]	; 0x4c
   29206:	b.n	2907a <btrfs_alloc_chunk@@Base+0x15e>
   29208:	movs	r2, #1
   2920a:	str	r2, [sp, #52]	; 0x34
   2920c:	b.n	290ac <btrfs_alloc_chunk@@Base+0x190>
   2920e:	ldr	r3, [r5, #8]
   29210:	str	r3, [sp, #104]	; 0x68
   29212:	ldr.w	r3, [r3, #464]	; 0x1d0
   29216:	ldrd	r9, r8, [r3, #296]	; 0x128
   2921a:	ldrd	r3, r4, [r5, #72]	; 0x48
   2921e:	strd	r3, r4, [sp, #80]	; 0x50
   29222:	bl	18550 <btrfs_alloc_path@@Base>
   29226:	mov	r4, r0
   29228:	cbnz	r0, 29230 <btrfs_alloc_chunk@@Base+0x314>
   2922a:	mvn.w	r6, #11
   2922e:	b.n	28f6c <btrfs_alloc_chunk@@Base+0x50>
   29230:	ldrd	r2, r3, [r5, #64]	; 0x40
   29234:	ldr	r1, [sp, #104]	; 0x68
   29236:	strd	r2, r3, [sp, #224]	; 0xe0
   2923a:	ldr	r3, [sp, #104]	; 0x68
   2923c:	ldr.w	r3, [r3, #464]	; 0x1d0
   29240:	ldr.w	r2, [r3, #296]	; 0x128
   29244:	str.w	r2, [sp, #233]	; 0xe9
   29248:	add	r2, sp, #224	; 0xe0
   2924a:	ldr.w	r3, [r3, #300]	; 0x12c
   2924e:	str.w	r3, [sp, #237]	; 0xed
   29252:	movs	r3, #204	; 0xcc
   29254:	strb.w	r3, [sp, #232]	; 0xe8
   29258:	movs	r3, #2
   2925a:	strb.w	r3, [r0, #64]	; 0x40
   2925e:	movs	r3, #0
   29260:	strd	r3, r3, [sp]
   29264:	mov	r3, r0
   29266:	vmov	r0, s16
   2926a:	bl	1a93c <btrfs_search_slot@@Base>
   2926e:	subs	r6, r0, #0
   29270:	blt.n	292e0 <btrfs_alloc_chunk@@Base+0x3c4>
   29272:	ldrb.w	r3, [sp, #232]	; 0xe8
   29276:	movs	r2, #0
   29278:	ldr	r0, [sp, #104]	; 0x68
   2927a:	mov	r1, r4
   2927c:	str	r3, [sp, #0]
   2927e:	movs	r3, #0
   29280:	bl	1bff4 <btrfs_previous_item@@Base>
   29284:	subs	r6, r0, #0
   29286:	blt.n	292e0 <btrfs_alloc_chunk@@Base+0x3c4>
   29288:	strd	r9, r8, [sp, #24]
   2928c:	ldrd	r2, r3, [sp, #24]
   29290:	cmp	r3, #0
   29292:	it	eq
   29294:	cmpeq.w	r2, #1048576	; 0x100000
   29298:	ittt	cc
   2929a:	movcc.w	r2, #1048576	; 0x100000
   2929e:	movcc	r3, #0
   292a0:	strdcc	r2, r3, [sp, #24]
   292a4:	add	r2, sp, #224	; 0xe0
   292a6:	movs	r3, #0
   292a8:	str	r3, [sp, #124]	; 0x7c
   292aa:	vmov	s18, r2
   292ae:	ldr	r2, [r4, #32]
   292b0:	ldr	r6, [r4, #0]
   292b2:	str	r2, [sp, #144]	; 0x90
   292b4:	ldr	r1, [sp, #144]	; 0x90
   292b6:	ldr.w	r2, [r6, #192]	; 0xc0
   292ba:	cmp	r2, r1
   292bc:	bhi.w	29430 <btrfs_alloc_chunk@@Base+0x514>
   292c0:	str	r3, [sp, #144]	; 0x90
   292c2:	mov.w	r3, #0
   292c6:	strb.w	r3, [r4, #65]	; 0x41
   292ca:	mov	r1, r4
   292cc:	ldr	r3, [sp, #104]	; 0x68
   292ce:	ldr.w	r0, [r3, #464]	; 0x1d0
   292d2:	bl	1bd70 <btrfs_next_sibling_tree_block@@Base>
   292d6:	ldr	r3, [sp, #144]	; 0x90
   292d8:	subs	r6, r0, #0
   292da:	beq.n	292ae <btrfs_alloc_chunk@@Base+0x392>
   292dc:	bge.w	294e8 <btrfs_alloc_chunk@@Base+0x5cc>
   292e0:	mov	r0, r4
   292e2:	bl	1857e <btrfs_free_path@@Base>
   292e6:	cmp	r6, #0
   292e8:	bne.w	28f6c <btrfs_alloc_chunk@@Base+0x50>
   292ec:	ldrd	r1, r2, [sp, #32]
   292f0:	ldrd	r8, r9, [sp, #128]	; 0x80
   292f4:	ldr	r3, [r5, #0]
   292f6:	cmp	r2, r9
   292f8:	it	eq
   292fa:	cmpeq	r1, r8
   292fc:	bcc.w	2951c <btrfs_alloc_chunk@@Base+0x600>
   29300:	ldr	r2, [r5, #4]
   29302:	str	r2, [r3, #4]
   29304:	str	r3, [r2, #0]
   29306:	ldr	r2, [sp, #196]	; 0xc4
   29308:	str	r5, [r2, #4]
   2930a:	str	r2, [r5, #0]
   2930c:	add	r2, sp, #196	; 0xc4
   2930e:	str	r2, [r5, #4]
   29310:	ldrd	r1, r2, [sp, #56]	; 0x38
   29314:	str	r5, [sp, #196]	; 0xc4
   29316:	orrs	r2, r1
   29318:	ite	eq
   2931a:	addeq	r7, #1
   2931c:	addne	r7, #2
   2931e:	ldr	r2, [sp, #108]	; 0x6c
   29320:	cmp	r2, r3
   29322:	beq.w	29540 <btrfs_alloc_chunk@@Base+0x624>
   29326:	mov	r5, r3
   29328:	cmp	fp, r7
   2932a:	bgt.w	2920e <btrfs_alloc_chunk@@Base+0x2f2>
   2932e:	ldr	r3, [sp, #44]	; 0x2c
   29330:	ldr	r5, [r3, #32]
   29332:	bl	18550 <btrfs_alloc_path@@Base>
   29336:	mov	r4, r0
   29338:	cmp	r0, #0
   2933a:	beq.w	2922a <btrfs_alloc_chunk@@Base+0x30e>
   2933e:	mov.w	r2, #4294967295	; 0xffffffff
   29342:	movs	r0, #0
   29344:	mov.w	r3, #256	; 0x100
   29348:	strb.w	r2, [sp, #213]	; 0xd5
   2934c:	strd	r3, r0, [sp, #204]	; 0xcc
   29350:	mov	r1, r5
   29352:	strb.w	r2, [sp, #214]	; 0xd6
   29356:	mov	r3, r4
   29358:	strb.w	r2, [sp, #215]	; 0xd7
   2935c:	movs	r7, #228	; 0xe4
   2935e:	strb.w	r2, [sp, #216]	; 0xd8
   29362:	strb.w	r2, [sp, #217]	; 0xd9
   29366:	strb.w	r2, [sp, #218]	; 0xda
   2936a:	strb.w	r2, [sp, #219]	; 0xdb
   2936e:	strb.w	r2, [sp, #220]	; 0xdc
   29372:	add	r2, sp, #204	; 0xcc
   29374:	strd	r0, r0, [sp]
   29378:	strb.w	r7, [sp, #212]	; 0xd4
   2937c:	bl	1a93c <btrfs_search_slot@@Base>
   29380:	subs	r6, r0, #0
   29382:	blt.n	293c2 <btrfs_alloc_chunk@@Base+0x4a6>
   29384:	ldr	r2, [pc, #156]	; (29424 <btrfs_alloc_chunk@@Base+0x508>)
   29386:	it	eq
   29388:	moveq	r3, #1
   2938a:	ldr	r1, [pc, #156]	; (29428 <btrfs_alloc_chunk@@Base+0x50c>)
   2938c:	it	ne
   2938e:	movne	r3, #0
   29390:	ldr	r0, [pc, #152]	; (2942c <btrfs_alloc_chunk@@Base+0x510>)
   29392:	add	r2, pc
   29394:	adds	r2, #38	; 0x26
   29396:	add	r1, pc
   29398:	add	r0, pc
   2939a:	str	r3, [sp, #0]
   2939c:	movw	r3, #681	; 0x2a9
   293a0:	bl	28580 <btrfs_add_root_ref@@Base+0x258>
   293a4:	movs	r2, #0
   293a6:	movs	r3, #0
   293a8:	mov	r1, r4
   293aa:	mov	r0, r5
   293ac:	str	r7, [sp, #0]
   293ae:	bl	1bff4 <btrfs_previous_item@@Base>
   293b2:	mov	r6, r0
   293b4:	cmp	r0, #0
   293b6:	beq.w	295a2 <btrfs_alloc_chunk@@Base+0x686>
   293ba:	movs	r3, #0
   293bc:	strd	r3, r3, [sp, #180]	; 0xb4
   293c0:	mov	r6, r3
   293c2:	mov	r0, r4
   293c4:	bl	1857e <btrfs_free_path@@Base>
   293c8:	cmp	r6, #0
   293ca:	bne.w	28f6c <btrfs_alloc_chunk@@Base+0x50>
   293ce:	mov.w	r3, #256	; 0x100
   293d2:	strd	r3, r6, [sp, #204]	; 0xcc
   293d6:	movs	r3, #228	; 0xe4
   293d8:	strb.w	r3, [sp, #212]	; 0xd4
   293dc:	ldr	r3, [sp, #180]	; 0xb4
   293de:	mov	r0, fp
   293e0:	str.w	r3, [sp, #213]	; 0xd5
   293e4:	ldr	r3, [sp, #184]	; 0xb8
   293e6:	str.w	r3, [sp, #217]	; 0xd9
   293ea:	bl	28590 <btrfs_add_root_ref@@Base+0x268>
   293ee:	blx	8870 <malloc@plt+0x4>
   293f2:	mov	r5, r0
   293f4:	cmp	r0, #0
   293f6:	beq.w	2922a <btrfs_alloc_chunk@@Base+0x30e>
   293fa:	mov.w	r0, fp, lsl #4
   293fe:	adds	r0, #72	; 0x48
   29400:	blx	8870 <malloc@plt+0x4>
   29404:	mov	r7, r0
   29406:	cmp	r0, #0
   29408:	bne.w	295e8 <btrfs_alloc_chunk@@Base+0x6cc>
   2940c:	mov	r0, r5
   2940e:	blx	8620 <free@plt+0x4>
   29412:	b.n	2922a <btrfs_alloc_chunk@@Base+0x30e>
   29414:	movs	r0, r0
   29416:	vqrdmlah.s<illegal width 64>	<illegal reg q13.5>, <illegal reg q7.5>, d4[0]
   2941a:	movs	r3, r0
   2941c:	lsls	r0, r5, #8
   2941e:	movs	r0, r0
   29420:	bkpt	0x000c
   29422:	movs	r3, r0
   29424:	strb	r2, [r2, #19]
   29426:	movs	r1, r0
   29428:	ldr	r5, [r6, #92]	; 0x5c
   2942a:	movs	r1, r0
   2942c:	asrs	r3, r5, #26
   2942e:	movs	r1, r0
   29430:	vmov	r1, s18
   29434:	mov	r0, r6
   29436:	ldr	r2, [sp, #144]	; 0x90
   29438:	str	r3, [sp, #188]	; 0xbc
   2943a:	bl	285c4 <btrfs_add_root_ref@@Base+0x29c>
   2943e:	ldrd	r0, r1, [sp, #224]	; 0xe0
   29442:	ldrd	r8, r9, [r5, #64]	; 0x40
   29446:	ldr	r3, [sp, #188]	; 0xbc
   29448:	cmp	r1, r9
   2944a:	it	eq
   2944c:	cmpeq	r0, r8
   2944e:	bcc.n	294e0 <btrfs_alloc_chunk@@Base+0x5c4>
   29450:	cmp	r9, r1
   29452:	it	eq
   29454:	cmpeq	r8, r0
   29456:	bcc.n	294e8 <btrfs_alloc_chunk@@Base+0x5cc>
   29458:	ldrb.w	r2, [sp, #232]	; 0xe8
   2945c:	cmp	r2, #204	; 0xcc
   2945e:	bne.n	294e0 <btrfs_alloc_chunk@@Base+0x5c4>
   29460:	ldrd	r1, r2, [sp, #80]	; 0x50
   29464:	ldr.w	r9, [sp, #237]	; 0xed
   29468:	ldr.w	r8, [sp, #233]	; 0xe9
   2946c:	cmp	r2, r9
   2946e:	it	eq
   29470:	cmpeq	r1, r8
   29472:	bcc.n	294e8 <btrfs_alloc_chunk@@Base+0x5cc>
   29474:	ldrd	r1, r2, [sp, #24]
   29478:	cmp	r2, r9
   2947a:	it	eq
   2947c:	cmpeq	r1, r8
   2947e:	bcs.n	29496 <btrfs_alloc_chunk@@Base+0x57a>
   29480:	ldr	r2, [sp, #124]	; 0x7c
   29482:	ldr	r1, [sp, #24]
   29484:	adds.w	r2, r8, r2
   29488:	adc.w	r3, r9, r3
   2948c:	subs	r2, r2, r1
   2948e:	str	r2, [sp, #124]	; 0x7c
   29490:	ldr	r2, [sp, #28]
   29492:	sbc.w	r3, r3, r2
   29496:	ldr	r2, [sp, #144]	; 0x90
   29498:	adds	r6, #96	; 0x60
   2949a:	movs	r1, #25
   2949c:	mla	r2, r1, r2, r6
   294a0:	ldr.w	r0, [r2, #118]	; 0x76
   294a4:	add	r6, r0
   294a6:	ldr.w	r2, [r6, #125]!
   294aa:	adds.w	r2, r2, r8
   294ae:	str	r2, [sp, #152]	; 0x98
   294b0:	ldr	r1, [r6, #4]
   294b2:	adc.w	r2, r1, r9
   294b6:	str	r2, [sp, #156]	; 0x9c
   294b8:	ldrd	r8, r9, [sp, #152]	; 0x98
   294bc:	ldrd	r1, r2, [sp, #24]
   294c0:	cmp	r2, r9
   294c2:	it	eq
   294c4:	cmpeq	r1, r8
   294c6:	ittt	cc
   294c8:	movcc	r1, r8
   294ca:	movcc	r2, r9
   294cc:	strdcc	r1, r2, [sp, #24]
   294d0:	ldrd	r1, r2, [sp, #80]	; 0x50
   294d4:	ldrd	r8, r9, [sp, #24]
   294d8:	cmp	r2, r9
   294da:	it	eq
   294dc:	cmpeq	r1, r8
   294de:	bcc.n	294e8 <btrfs_alloc_chunk@@Base+0x5cc>
   294e0:	ldr	r2, [r4, #32]
   294e2:	adds	r2, #1
   294e4:	str	r2, [r4, #32]
   294e6:	b.n	292ae <btrfs_alloc_chunk@@Base+0x392>
   294e8:	ldrd	r1, r2, [sp, #24]
   294ec:	ldrd	r8, r9, [sp, #80]	; 0x50
   294f0:	cmp	r2, r9
   294f2:	it	eq
   294f4:	cmpeq	r1, r8
   294f6:	bcs.n	29516 <btrfs_alloc_chunk@@Base+0x5fa>
   294f8:	ldr	r1, [sp, #124]	; 0x7c
   294fa:	ldr	r2, [sp, #80]	; 0x50
   294fc:	adds	r2, r2, r1
   294fe:	ldr	r1, [sp, #84]	; 0x54
   29500:	adc.w	r3, r1, r3
   29504:	ldr	r1, [sp, #24]
   29506:	subs	r2, r2, r1
   29508:	str	r2, [sp, #32]
   2950a:	ldr	r2, [sp, #28]
   2950c:	sbc.w	r3, r3, r2
   29510:	movs	r6, #0
   29512:	str	r3, [sp, #36]	; 0x24
   29514:	b.n	292e0 <btrfs_alloc_chunk@@Base+0x3c4>
   29516:	ldr	r2, [sp, #124]	; 0x7c
   29518:	str	r2, [sp, #32]
   2951a:	b.n	29510 <btrfs_alloc_chunk@@Base+0x5f4>
   2951c:	ldrd	r1, r2, [sp, #96]	; 0x60
   29520:	ldrd	r4, r5, [sp, #32]
   29524:	cmp	r2, r5
   29526:	it	eq
   29528:	cmpeq	r1, r4
   2952a:	ittt	cc
   2952c:	movcc	r1, r4
   2952e:	movcc	r2, r5
   29530:	strdcc	r1, r2, [sp, #96]	; 0x60
   29534:	b.n	2931e <btrfs_alloc_chunk@@Base+0x402>
   29536:	ldrd	r3, r4, [sp, #16]
   2953a:	strd	r3, r4, [sp, #128]	; 0x80
   2953e:	b.n	29198 <btrfs_alloc_chunk@@Base+0x27c>
   29540:	cmp	fp, r7
   29542:	ble.w	2932e <btrfs_alloc_chunk@@Base+0x412>
   29546:	ldr	r3, [sp, #196]	; 0xc4
   29548:	add	r2, sp, #196	; 0xc4
   2954a:	cmp	r3, r2
   2954c:	beq.n	29560 <btrfs_alloc_chunk@@Base+0x644>
   2954e:	ldr	r0, [sp, #108]	; 0x6c
   29550:	ldr	r2, [sp, #48]	; 0x30
   29552:	ldr	r1, [sp, #200]	; 0xc8
   29554:	ldr	r2, [r2, #72]	; 0x48
   29556:	str	r0, [r3, #4]
   29558:	ldr	r0, [sp, #48]	; 0x30
   2955a:	str	r3, [r0, #72]	; 0x48
   2955c:	str	r2, [r1, #0]
   2955e:	str	r1, [r2, #4]
   29560:	ldr	r3, [sp, #76]	; 0x4c
   29562:	cmp	r3, r7
   29564:	bgt.n	2957e <btrfs_alloc_chunk@@Base+0x662>
   29566:	ldrd	r3, r4, [sp, #88]	; 0x58
   2956a:	orrs	r3, r4
   2956c:	beq.n	2959a <btrfs_alloc_chunk@@Base+0x67e>
   2956e:	mov	r0, r7
   29570:	ldr	r1, [sp, #52]	; 0x34
   29572:	bl	39698 <btrfs_util_strerror@@Base+0x290>
   29576:	ldr	r3, [sp, #52]	; 0x34
   29578:	mul.w	r7, r0, r3
   2957c:	b.n	2959a <btrfs_alloc_chunk@@Base+0x67e>
   2957e:	ldr	r3, [sp, #168]	; 0xa8
   29580:	cmp	r3, #0
   29582:	bne.w	28f68 <btrfs_alloc_chunk@@Base+0x4c>
   29586:	ldrd	r3, r4, [sp, #96]	; 0x60
   2958a:	orrs	r3, r4
   2958c:	beq.w	28f68 <btrfs_alloc_chunk@@Base+0x4c>
   29590:	ldrd	r3, r4, [sp, #96]	; 0x60
   29594:	mov	r7, fp
   29596:	strd	r3, r4, [sp, #16]
   2959a:	movs	r3, #1
   2959c:	mov	fp, r7
   2959e:	str	r3, [sp, #168]	; 0xa8
   295a0:	b.n	29124 <btrfs_alloc_chunk@@Base+0x208>
   295a2:	ldr	r2, [r4, #32]
   295a4:	add	r1, sp, #224	; 0xe0
   295a6:	ldr	r0, [r4, #0]
   295a8:	bl	285c4 <btrfs_add_root_ref@@Base+0x29c>
   295ac:	ldrd	r2, r3, [sp, #224]	; 0xe0
   295b0:	cmp	r3, #0
   295b2:	it	eq
   295b4:	cmpeq.w	r2, #256	; 0x100
   295b8:	bne.w	293ba <btrfs_alloc_chunk@@Base+0x49e>
   295bc:	ldr	r3, [r4, #0]
   295be:	movs	r1, #25
   295c0:	ldr	r2, [r4, #32]
   295c2:	adds	r3, #96	; 0x60
   295c4:	mla	r2, r1, r2, r3
   295c8:	ldr.w	r1, [sp, #237]	; 0xed
   295cc:	ldr.w	r2, [r2, #118]	; 0x76
   295d0:	add	r3, r2
   295d2:	ldr.w	r2, [r3, #101]!
   295d6:	ldr	r0, [r3, #4]
   295d8:	ldr.w	r3, [sp, #233]	; 0xe9
   295dc:	adds	r3, r2, r3
   295de:	str	r3, [sp, #180]	; 0xb4
   295e0:	adc.w	r3, r0, r1
   295e4:	str	r3, [sp, #184]	; 0xb8
   295e6:	b.n	293c2 <btrfs_alloc_chunk@@Base+0x4a6>
   295e8:	ldr	r3, [sp, #52]	; 0x34
   295ea:	mov	r0, sl
   295ec:	ldr	r1, [sp, #120]	; 0x78
   295ee:	strd	fp, r3, [sp]
   295f2:	ldrd	r2, r3, [sp, #16]
   295f6:	bl	284c4 <btrfs_add_root_ref@@Base+0x19c>
   295fa:	ldr	r3, [sp, #148]	; 0x94
   295fc:	str	r6, [sp, #76]	; 0x4c
   295fe:	strd	r0, r1, [r3]
   29602:	add.w	r3, r7, #72	; 0x48
   29606:	str	r3, [sp, #72]	; 0x48
   29608:	add.w	r3, r5, #48	; 0x30
   2960c:	str	r3, [sp, #88]	; 0x58
   2960e:	ldr.w	r3, [pc, #1112]	; 29a68 <btrfs_alloc_chunk@@Base+0xb4c>
   29612:	add	r3, pc
   29614:	adds	r3, #54	; 0x36
   29616:	vmov	s21, r3
   2961a:	ldr.w	r3, [pc, #1104]	; 29a6c <btrfs_alloc_chunk@@Base+0xb50>
   2961e:	add	r3, pc
   29620:	vmov	s22, r3
   29624:	ldr	r3, [sp, #76]	; 0x4c
   29626:	ldr	r4, [sp, #196]	; 0xc4
   29628:	cmp	fp, r3
   2962a:	bgt.w	29738 <btrfs_alloc_chunk@@Base+0x81c>
   2962e:	ldr.w	r6, [pc, #1088]	; 29a70 <btrfs_alloc_chunk@@Base+0xb54>
   29632:	add	r3, sp, #196	; 0xc4
   29634:	ldr.w	r1, [pc, #1084]	; 29a74 <btrfs_alloc_chunk@@Base+0xb58>
   29638:	subs	r3, r4, r3
   2963a:	add	r6, pc
   2963c:	ldr.w	r0, [pc, #1080]	; 29a78 <btrfs_alloc_chunk@@Base+0xb5c>
   29640:	add.w	r6, r6, #54	; 0x36
   29644:	add	r1, pc
   29646:	it	ne
   29648:	movne	r3, #1
   2964a:	add	r0, pc
   2964c:	mov	r2, r6
   2964e:	str	r3, [sp, #0]
   29650:	movw	r3, #1223	; 0x4c7
   29654:	mov	r4, r1
   29656:	bl	28580 <btrfs_add_root_ref@@Base+0x258>
   2965a:	ldr	r3, [sp, #148]	; 0x94
   2965c:	ldr	r1, [sp, #52]	; 0x34
   2965e:	mov	r0, fp
   29660:	add.w	r8, sp, #204	; 0xcc
   29664:	ldrd	r2, r3, [r3]
   29668:	strd	r2, r3, [r5]
   2966c:	ldr	r3, [sp, #172]	; 0xac
   2966e:	ldr.w	r2, [r3, #447]	; 0x1bf
   29672:	ldr.w	r3, [r3, #451]	; 0x1c3
   29676:	strh	r1, [r5, #46]	; 0x2e
   29678:	str	r1, [r7, #68]	; 0x44
   2967a:	strd	r2, r3, [r5, #8]
   2967e:	mov.w	r2, #65536	; 0x10000
   29682:	movs	r3, #0
   29684:	strd	r2, r3, [r5, #16]
   29688:	ldr	r2, [sp, #44]	; 0x2c
   2968a:	ldr	r3, [sp, #120]	; 0x78
   2968c:	str.w	sl, [r5, #24]
   29690:	ldr.w	r2, [r2, #388]	; 0x184
   29694:	str	r3, [r5, #28]
   29696:	mov.w	r3, #65536	; 0x10000
   2969a:	strd	r3, r3, [r5, #32]
   2969e:	strd	r3, r2, [r7, #56]	; 0x38
   296a2:	strd	r3, r3, [r7, #48]	; 0x30
   296a6:	ldr	r3, [sp, #120]	; 0x78
   296a8:	str	r2, [r5, #40]	; 0x28
   296aa:	strh.w	fp, [r5, #44]	; 0x2c
   296ae:	str	r3, [r7, #44]	; 0x2c
   296b0:	str.w	sl, [r7, #40]	; 0x28
   296b4:	str.w	fp, [r7, #64]	; 0x40
   296b8:	bl	28590 <btrfs_add_root_ref@@Base+0x268>
   296bc:	vmov	r1, s17
   296c0:	mov	r3, r5
   296c2:	mov	r2, r8
   296c4:	str	r0, [sp, #0]
   296c6:	vmov	r0, s16
   296ca:	bl	1b9c8 <btrfs_insert_item@@Base>
   296ce:	movw	r3, #1245	; 0x4dd
   296d2:	mov	r2, r6
   296d4:	mov	r1, r4
   296d6:	str	r0, [sp, #0]
   296d8:	ldr	r0, [pc, #928]	; (29a7c <btrfs_alloc_chunk@@Base+0xb60>)
   296da:	add	r0, pc
   296dc:	bl	28580 <btrfs_add_root_ref@@Base+0x258>
   296e0:	ldr.w	r2, [sp, #213]	; 0xd5
   296e4:	ldr.w	r3, [sp, #217]	; 0xd9
   296e8:	ldr	r1, [sp, #176]	; 0xb0
   296ea:	strd	r2, r3, [r7, #24]
   296ee:	strd	r2, r3, [r1]
   296f2:	mov	r1, r7
   296f4:	ldr	r3, [sp, #148]	; 0x94
   296f6:	ldrd	r2, r3, [r3]
   296fa:	strd	r2, r3, [r7, #32]
   296fe:	ldr	r3, [sp, #44]	; 0x2c
   29700:	add.w	r0, r3, #228	; 0xe4
   29704:	bl	1659a <insert_cache_extent@@Base>
   29708:	subs.w	r9, r0, #0
   2970c:	blt.n	297ca <btrfs_alloc_chunk@@Base+0x8ae>
   2970e:	and.w	r2, sl, #2
   29712:	movs	r3, #0
   29714:	orrs	r3, r2
   29716:	beq.n	2972e <btrfs_alloc_chunk@@Base+0x812>
   29718:	mov	r0, fp
   2971a:	bl	28590 <btrfs_add_root_ref@@Base+0x268>
   2971e:	mov	r2, r5
   29720:	mov	r1, r8
   29722:	mov	r3, r0
   29724:	ldr	r0, [sp, #44]	; 0x2c
   29726:	bl	28ebc <btrfs_add_system_chunk@@Base>
   2972a:	subs.w	r9, r0, #0
   2972e:	mov	r0, r5
   29730:	mov	r6, r9
   29732:	blx	8620 <free@plt+0x4>
   29736:	b.n	28f6c <btrfs_alloc_chunk@@Base+0x50>
   29738:	add	r3, sp, #196	; 0xc4
   2973a:	ldr	r0, [pc, #836]	; (29a80 <btrfs_alloc_chunk@@Base+0xb64>)
   2973c:	subs	r2, r4, r3
   2973e:	vmov	r1, s22
   29742:	negs	r3, r2
   29744:	add	r0, pc
   29746:	adcs	r3, r2
   29748:	vmov	r2, s21
   2974c:	str	r3, [sp, #0]
   2974e:	movw	r3, #1196	; 0x4ac
   29752:	bl	28580 <btrfs_add_root_ref@@Base+0x258>
   29756:	ldrd	r2, r3, [sp, #56]	; 0x38
   2975a:	orrs	r3, r2
   2975c:	beq.n	29768 <btrfs_alloc_chunk@@Base+0x84c>
   2975e:	ldr	r2, [sp, #76]	; 0x4c
   29760:	add.w	r3, fp, #4294967295	; 0xffffffff
   29764:	cmp	r3, r2
   29766:	bne.n	29780 <btrfs_alloc_chunk@@Base+0x864>
   29768:	ldrd	r2, r3, [r4]
   2976c:	str	r3, [r2, #4]
   2976e:	str	r2, [r3, #0]
   29770:	ldr	r3, [sp, #48]	; 0x30
   29772:	ldr	r3, [r3, #72]	; 0x48
   29774:	str	r4, [r3, #4]
   29776:	str	r3, [r4, #0]
   29778:	ldr	r3, [sp, #108]	; 0x6c
   2977a:	str	r3, [r4, #4]
   2977c:	ldr	r3, [sp, #48]	; 0x30
   2977e:	str	r4, [r3, #72]	; 0x48
   29780:	ldr.w	r3, [sp, #213]	; 0xd5
   29784:	vmov	s18, r3
   29788:	ldr.w	r3, [sp, #217]	; 0xd9
   2978c:	vmov	s19, r3
   29790:	ldr	r3, [r4, #8]
   29792:	str	r3, [sp, #104]	; 0x68
   29794:	ldrd	r2, r3, [r4, #72]	; 0x48
   29798:	strd	r2, r3, [sp, #80]	; 0x50
   2979c:	ldr	r3, [sp, #104]	; 0x68
   2979e:	ldr.w	r3, [r3, #464]	; 0x1d0
   297a2:	ldrd	r2, r3, [r3, #296]	; 0x128
   297a6:	cmp	r3, #0
   297a8:	it	eq
   297aa:	cmpeq.w	r2, #1048576	; 0x100000
   297ae:	strd	r2, r3, [sp, #24]
   297b2:	ittt	cc
   297b4:	movcc.w	r2, #1048576	; 0x100000
   297b8:	movcc	r3, #0
   297ba:	strdcc	r2, r3, [sp, #24]
   297be:	bl	18550 <btrfs_alloc_path@@Base>
   297c2:	mov	r6, r0
   297c4:	cbnz	r0, 297d2 <btrfs_alloc_chunk@@Base+0x8b6>
   297c6:	mvn.w	r9, #11
   297ca:	mov	r0, r7
   297cc:	blx	8620 <free@plt+0x4>
   297d0:	b.n	2972e <btrfs_alloc_chunk@@Base+0x812>
   297d2:	ldrd	r2, r3, [sp, #24]
   297d6:	ldrd	r0, r1, [sp, #80]	; 0x50
   297da:	cmp	r3, r1
   297dc:	it	eq
   297de:	cmpeq	r2, r0
   297e0:	bcs.w	29a50 <btrfs_alloc_chunk@@Base+0xb34>
   297e4:	movs	r3, #2
   297e6:	strb.w	r3, [r6, #64]	; 0x40
   297ea:	ldrd	r2, r3, [r4, #64]	; 0x40
   297ee:	movs	r0, #0
   297f0:	ldr	r1, [sp, #104]	; 0x68
   297f2:	strd	r0, r0, [sp]
   297f6:	strd	r2, r3, [sp, #224]	; 0xe0
   297fa:	add	r2, sp, #224	; 0xe0
   297fc:	ldr	r3, [sp, #24]
   297fe:	str.w	r3, [sp, #233]	; 0xe9
   29802:	ldr	r3, [sp, #28]
   29804:	str.w	r3, [sp, #237]	; 0xed
   29808:	movs	r3, #204	; 0xcc
   2980a:	strb.w	r3, [sp, #232]	; 0xe8
   2980e:	mov	r3, r6
   29810:	bl	1a93c <btrfs_search_slot@@Base>
   29814:	subs.w	r9, r0, #0
   29818:	blt.n	298d4 <btrfs_alloc_chunk@@Base+0x9b8>
   2981a:	bne.n	298bc <btrfs_alloc_chunk@@Base+0x9a0>
   2981c:	ldrd	r2, r3, [sp, #24]
   29820:	strd	r2, r3, [sp, #32]
   29824:	movs	r3, #0
   29826:	movs	r2, #0
   29828:	strd	r2, r3, [sp, #64]	; 0x40
   2982c:	add	r3, sp, #224	; 0xe0
   2982e:	vmov	s20, r3
   29832:	ldr.w	ip, [r6]
   29836:	ldr.w	lr, [r6, #32]
   2983a:	ldr.w	r3, [ip, #192]	; 0xc0
   2983e:	cmp	r3, lr
   29840:	bhi.w	2997c <btrfs_alloc_chunk@@Base+0xa60>
   29844:	mov.w	r3, #0
   29848:	strb.w	r3, [r6, #65]	; 0x41
   2984c:	ldr	r3, [sp, #104]	; 0x68
   2984e:	mov	r1, r6
   29850:	ldr.w	r0, [r3, #464]	; 0x1d0
   29854:	bl	1bd70 <btrfs_next_sibling_tree_block@@Base>
   29858:	subs.w	r9, r0, #0
   2985c:	beq.n	29832 <btrfs_alloc_chunk@@Base+0x916>
   2985e:	blt.n	298d4 <btrfs_alloc_chunk@@Base+0x9b8>
   29860:	ldrd	r2, r3, [sp, #32]
   29864:	ldrd	r0, r1, [sp, #80]	; 0x50
   29868:	cmp	r3, r1
   2986a:	it	eq
   2986c:	cmpeq	r2, r0
   2986e:	bcs.n	298a2 <btrfs_alloc_chunk@@Base+0x986>
   29870:	ldr	r2, [sp, #32]
   29872:	ldr	r3, [sp, #80]	; 0x50
   29874:	subs	r3, r3, r2
   29876:	ldr	r2, [sp, #36]	; 0x24
   29878:	str	r3, [sp, #136]	; 0x88
   2987a:	ldr	r3, [sp, #84]	; 0x54
   2987c:	sbc.w	r3, r3, r2
   29880:	str	r3, [sp, #140]	; 0x8c
   29882:	ldrd	r0, r1, [sp, #136]	; 0x88
   29886:	ldrd	r2, r3, [sp, #64]	; 0x40
   2988a:	cmp	r3, r1
   2988c:	it	eq
   2988e:	cmpeq	r2, r0
   29890:	bcs.n	298a2 <btrfs_alloc_chunk@@Base+0x986>
   29892:	mov	r2, r0
   29894:	mov	r3, r1
   29896:	strd	r2, r3, [sp, #64]	; 0x40
   2989a:	ldrd	r2, r3, [sp, #32]
   2989e:	strd	r2, r3, [sp, #24]
   298a2:	ldrd	r2, r3, [sp, #64]	; 0x40
   298a6:	ldrd	r0, r1, [sp, #16]
   298aa:	cmp	r3, r1
   298ac:	it	eq
   298ae:	cmpeq	r2, r0
   298b0:	ite	cc
   298b2:	mvncc.w	r9, #27
   298b6:	movcs.w	r9, #0
   298ba:	b.n	298d4 <btrfs_alloc_chunk@@Base+0x9b8>
   298bc:	ldrb.w	r3, [sp, #232]	; 0xe8
   298c0:	mov	r1, r6
   298c2:	ldr	r0, [sp, #104]	; 0x68
   298c4:	str	r3, [sp, #0]
   298c6:	ldrd	r2, r3, [sp, #224]	; 0xe0
   298ca:	bl	1bff4 <btrfs_previous_item@@Base>
   298ce:	subs.w	r9, r0, #0
   298d2:	bge.n	2981c <btrfs_alloc_chunk@@Base+0x900>
   298d4:	mov	r0, r6
   298d6:	bl	1857e <btrfs_free_path@@Base>
   298da:	cmp.w	r9, #0
   298de:	bne.w	297ca <btrfs_alloc_chunk@@Base+0x8ae>
   298e2:	ldrd	r2, r3, [sp, #24]
   298e6:	mov	r1, r4
   298e8:	vmov	r0, s16
   298ec:	strd	r2, r3, [sp, #8]
   298f0:	ldrd	r2, r3, [sp, #16]
   298f4:	strd	r2, r3, [sp]
   298f8:	vmov	r2, s18
   298fc:	vmov	r3, s19
   29900:	bl	28a8c <btrfs_insert_dev_extent@@Base>
   29904:	subs.w	r9, r0, #0
   29908:	blt.w	297ca <btrfs_alloc_chunk@@Base+0x8ae>
   2990c:	ldrd	r3, r2, [r4, #80]	; 0x50
   29910:	ldr	r1, [sp, #16]
   29912:	vmov	r0, s16
   29916:	adds	r3, r3, r1
   29918:	ldr	r1, [sp, #20]
   2991a:	adc.w	r2, r1, r2
   2991e:	mov	r1, r4
   29920:	strd	r3, r2, [r4, #80]	; 0x50
   29924:	bl	28dd8 <btrfs_update_device@@Base>
   29928:	ldr	r3, [sp, #72]	; 0x48
   2992a:	adds	r3, #16
   2992c:	str	r3, [sp, #72]	; 0x48
   2992e:	ldr	r3, [sp, #88]	; 0x58
   29930:	add.w	r1, r3, #32
   29934:	subs.w	r9, r0, #0
   29938:	blt.w	297ca <btrfs_alloc_chunk@@Base+0x8ae>
   2993c:	ldr	r3, [sp, #72]	; 0x48
   2993e:	str.w	r4, [r3, #-16]
   29942:	mov	r0, r3
   29944:	ldrd	r2, r3, [sp, #24]
   29948:	strd	r2, r3, [r0, #-8]
   2994c:	ldrd	r2, r3, [r4, #64]	; 0x40
   29950:	strd	r2, r3, [r1, #-32]
   29954:	ldrd	r2, r3, [sp, #24]
   29958:	strd	r2, r3, [r1, #-24]
   2995c:	add.w	r3, r4, #112	; 0x70
   29960:	ldr	r2, [sp, #88]	; 0x58
   29962:	adds	r4, #128	; 0x80
   29964:	adds	r2, #16
   29966:	ldr.w	r0, [r3], #4
   2996a:	cmp	r3, r4
   2996c:	str.w	r0, [r2], #4
   29970:	bne.n	29966 <btrfs_alloc_chunk@@Base+0xa4a>
   29972:	ldr	r3, [sp, #76]	; 0x4c
   29974:	str	r1, [sp, #88]	; 0x58
   29976:	adds	r3, #1
   29978:	str	r3, [sp, #76]	; 0x4c
   2997a:	b.n	29624 <btrfs_alloc_chunk@@Base+0x708>
   2997c:	mov	r2, lr
   2997e:	vmov	r1, s20
   29982:	mov	r0, ip
   29984:	str.w	lr, [sp, #124]	; 0x7c
   29988:	str.w	ip, [sp, #96]	; 0x60
   2998c:	bl	285c4 <btrfs_add_root_ref@@Base+0x29c>
   29990:	ldrd	r8, r9, [sp, #224]	; 0xe0
   29994:	ldrd	r2, r3, [r4, #64]	; 0x40
   29998:	cmp	r9, r3
   2999a:	it	eq
   2999c:	cmpeq	r8, r2
   2999e:	bcc.n	29a48 <btrfs_alloc_chunk@@Base+0xb2c>
   299a0:	cmp	r3, r9
   299a2:	it	eq
   299a4:	cmpeq	r2, r8
   299a6:	bcc.w	29860 <btrfs_alloc_chunk@@Base+0x944>
   299aa:	ldrb.w	r3, [sp, #232]	; 0xe8
   299ae:	cmp	r3, #204	; 0xcc
   299b0:	bne.n	29a48 <btrfs_alloc_chunk@@Base+0xb2c>
   299b2:	ldrd	r2, r3, [sp, #32]
   299b6:	ldr.w	r9, [sp, #237]	; 0xed
   299ba:	ldr.w	r8, [sp, #233]	; 0xe9
   299be:	cmp	r3, r9
   299c0:	ldr.w	ip, [sp, #96]	; 0x60
   299c4:	it	eq
   299c6:	cmpeq	r2, r8
   299c8:	ldr.w	lr, [sp, #124]	; 0x7c
   299cc:	bcs.n	29a0e <btrfs_alloc_chunk@@Base+0xaf2>
   299ce:	ldr	r3, [sp, #32]
   299d0:	subs.w	r3, r8, r3
   299d4:	str	r3, [sp, #112]	; 0x70
   299d6:	ldr	r3, [sp, #36]	; 0x24
   299d8:	sbc.w	r3, r9, r3
   299dc:	str	r3, [sp, #116]	; 0x74
   299de:	ldrd	r0, r1, [sp, #112]	; 0x70
   299e2:	ldrd	r2, r3, [sp, #64]	; 0x40
   299e6:	cmp	r3, r1
   299e8:	it	eq
   299ea:	cmpeq	r2, r0
   299ec:	bcs.n	299fe <btrfs_alloc_chunk@@Base+0xae2>
   299ee:	mov	r2, r0
   299f0:	mov	r3, r1
   299f2:	strd	r2, r3, [sp, #64]	; 0x40
   299f6:	ldrd	r2, r3, [sp, #32]
   299fa:	strd	r2, r3, [sp, #24]
   299fe:	ldrd	r2, r3, [sp, #112]	; 0x70
   29a02:	ldrd	r0, r1, [sp, #16]
   29a06:	cmp	r3, r1
   29a08:	it	eq
   29a0a:	cmpeq	r2, r0
   29a0c:	bcs.n	29a56 <btrfs_alloc_chunk@@Base+0xb3a>
   29a0e:	add.w	r0, ip, #96	; 0x60
   29a12:	movs	r3, #25
   29a14:	mla	r2, r3, lr, r0
   29a18:	ldr.w	r3, [r2, #118]	; 0x76
   29a1c:	add	r0, r3
   29a1e:	ldr.w	r3, [r0, #125]!
   29a22:	adds.w	r3, r3, r8
   29a26:	str	r3, [sp, #160]	; 0xa0
   29a28:	ldr	r2, [r0, #4]
   29a2a:	adc.w	r3, r2, r9
   29a2e:	str	r3, [sp, #164]	; 0xa4
   29a30:	ldrd	r0, r1, [sp, #160]	; 0xa0
   29a34:	ldrd	r2, r3, [sp, #32]
   29a38:	cmp	r3, r1
   29a3a:	it	eq
   29a3c:	cmpeq	r2, r0
   29a3e:	ittt	cc
   29a40:	movcc	r2, r0
   29a42:	movcc	r3, r1
   29a44:	strdcc	r2, r3, [sp, #32]
   29a48:	ldr	r3, [r6, #32]
   29a4a:	adds	r3, #1
   29a4c:	str	r3, [r6, #32]
   29a4e:	b.n	29832 <btrfs_alloc_chunk@@Base+0x916>
   29a50:	mvn.w	r9, #27
   29a54:	b.n	298d4 <btrfs_alloc_chunk@@Base+0x9b8>
   29a56:	mov.w	r9, #0
   29a5a:	b.n	298d4 <btrfs_alloc_chunk@@Base+0x9b8>
   29a5c:	mov	r0, r6
   29a5e:	add	sp, #252	; 0xfc
   29a60:	vpop	{d8-d11}
   29a64:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29a68:	strb	r2, [r2, #9]
   29a6a:	movs	r1, r0
   29a6c:	ldr	r5, [r5, #52]	; 0x34
   29a6e:	movs	r1, r0
   29a70:	strb	r2, [r5, #8]
   29a72:	movs	r1, r0
   29a74:	ldr	r7, [r0, #52]	; 0x34
   29a76:	movs	r1, r0
   29a78:	ldr	r3, [r1, #52]	; 0x34
   29a7a:	movs	r1, r0
   29a7c:	lsrs	r2, r1, #24
   29a7e:	movs	r1, r0
   29a80:	ldr	r2, [r2, #36]	; 0x24
   29a82:	movs	r1, r0

00029a84 <btrfs_alloc_data_chunk@@Base>:
   29a84:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29a88:	mov	r7, r1
   29a8a:	vpush	{d8}
   29a8e:	mov	r8, r0
   29a90:	ldr	r1, [pc, #504]	; (29c8c <btrfs_alloc_data_chunk@@Base+0x208>)
   29a92:	ldr.w	r6, [r7, #352]	; 0x160
   29a96:	add	r1, pc
   29a98:	sub	sp, #60	; 0x3c
   29a9a:	ldrd	sl, fp, [r2]
   29a9e:	ldr	r3, [sp, #104]	; 0x68
   29aa0:	cmp	fp, fp
   29aa2:	str	r3, [sp, #16]
   29aa4:	ldr	r3, [sp, #108]	; 0x6c
   29aa6:	str	r3, [sp, #20]
   29aa8:	ldr	r3, [pc, #484]	; (29c90 <btrfs_alloc_data_chunk@@Base+0x20c>)
   29aaa:	ldr	r3, [r1, r3]
   29aac:	ldr	r3, [r3, #0]
   29aae:	str	r3, [sp, #52]	; 0x34
   29ab0:	mov.w	r3, #0
   29ab4:	ldr	r3, [r7, #24]
   29ab6:	str	r3, [sp, #24]
   29ab8:	ldr	r3, [r7, #32]
   29aba:	vmov	s17, r3
   29abe:	ldr.w	r3, [r7, #388]	; 0x184
   29ac2:	rsb	r1, r3, #0
   29ac6:	mov	r3, fp
   29ac8:	and.w	r2, r1, sl
   29acc:	it	eq
   29ace:	cmpeq	sl, r2
   29ad0:	beq.n	29af6 <btrfs_alloc_data_chunk@@Base+0x72>
   29ad2:	ldr	r0, [pc, #448]	; (29c94 <btrfs_alloc_data_chunk@@Base+0x210>)
   29ad4:	mov	r2, sl
   29ad6:	mvn.w	r5, #21
   29ada:	add	r0, pc
   29adc:	bl	17b7c <__btrfs_error@@Base>
   29ae0:	ldr	r2, [pc, #436]	; (29c98 <btrfs_alloc_data_chunk@@Base+0x214>)
   29ae2:	ldr	r3, [pc, #428]	; (29c90 <btrfs_alloc_data_chunk@@Base+0x20c>)
   29ae4:	add	r2, pc
   29ae6:	ldr	r3, [r2, r3]
   29ae8:	ldr	r2, [r3, #0]
   29aea:	ldr	r3, [sp, #52]	; 0x34
   29aec:	eors	r2, r3
   29aee:	beq.w	29c80 <btrfs_alloc_data_chunk@@Base+0x1fc>
   29af2:	blx	8708 <__stack_chk_fail@plt>
   29af6:	movs	r0, #1
   29af8:	mov.w	r2, #256	; 0x100
   29afc:	movs	r3, #0
   29afe:	str.w	sl, [sp, #41]	; 0x29
   29b02:	strd	r2, r3, [sp, #32]
   29b06:	movs	r3, #228	; 0xe4
   29b08:	str.w	fp, [sp, #45]	; 0x2d
   29b0c:	strb.w	r3, [sp, #40]	; 0x28
   29b10:	bl	28590 <btrfs_add_root_ref@@Base+0x268>
   29b14:	blx	8870 <malloc@plt+0x4>
   29b18:	mov	r4, r0
   29b1a:	cbz	r0, 29b2c <btrfs_alloc_data_chunk@@Base+0xa8>
   29b1c:	movs	r0, #88	; 0x58
   29b1e:	blx	8870 <malloc@plt+0x4>
   29b22:	mov	r5, r0
   29b24:	cbnz	r0, 29b32 <btrfs_alloc_data_chunk@@Base+0xae>
   29b26:	mov	r0, r4
   29b28:	blx	8620 <free@plt+0x4>
   29b2c:	mvn.w	r5, #11
   29b30:	b.n	29ae0 <btrfs_alloc_data_chunk@@Base+0x5c>
   29b32:	ldr	r3, [sp, #16]
   29b34:	mov	r2, sl
   29b36:	ldr	r6, [r6, #72]	; 0x48
   29b38:	mov	r0, r8
   29b3a:	strd	sl, fp, [sp, #8]
   29b3e:	str	r3, [sp, #0]
   29b40:	ldr	r3, [sp, #20]
   29b42:	mov	r1, r6
   29b44:	ldr.w	r9, [pc, #340]	; 29c9c <btrfs_alloc_data_chunk@@Base+0x218>
   29b48:	str	r3, [sp, #4]
   29b4a:	mov	r3, fp
   29b4c:	bl	28a8c <btrfs_insert_dev_extent@@Base>
   29b50:	ldr	r2, [pc, #332]	; (29ca0 <btrfs_alloc_data_chunk@@Base+0x21c>)
   29b52:	ldr	r1, [pc, #336]	; (29ca4 <btrfs_alloc_data_chunk@@Base+0x220>)
   29b54:	add	r9, pc
   29b56:	add	r2, pc
   29b58:	movw	r3, #1332	; 0x534
   29b5c:	add	r1, pc
   29b5e:	adds	r2, #72	; 0x48
   29b60:	str	r2, [sp, #28]
   29b62:	vmov	s16, r1
   29b66:	str	r0, [sp, #0]
   29b68:	mov	r0, r9
   29b6a:	bl	28580 <btrfs_add_root_ref@@Base+0x258>
   29b6e:	ldrd	r3, r1, [r6, #80]	; 0x50
   29b72:	ldr	r2, [sp, #16]
   29b74:	mov	r0, r8
   29b76:	adds	r3, r3, r2
   29b78:	ldr	r2, [sp, #20]
   29b7a:	adc.w	r1, r2, r1
   29b7e:	strd	r3, r1, [r6, #80]	; 0x50
   29b82:	mov	r1, r6
   29b84:	bl	28dd8 <btrfs_update_device@@Base>
   29b88:	ldr	r2, [sp, #28]
   29b8a:	mov.w	r3, #1336	; 0x538
   29b8e:	vmov	r1, s16
   29b92:	str	r0, [sp, #0]
   29b94:	mov	r0, r9
   29b96:	bl	28580 <btrfs_add_root_ref@@Base+0x258>
   29b9a:	str	r6, [r5, #72]	; 0x48
   29b9c:	strd	sl, fp, [r5, #80]	; 0x50
   29ba0:	add.w	ip, r4, #64	; 0x40
   29ba4:	ldrd	r2, r3, [r6, #64]	; 0x40
   29ba8:	strd	sl, fp, [r4, #56]	; 0x38
   29bac:	strd	r2, r3, [r4, #48]	; 0x30
   29bb0:	add.w	r3, r6, #112	; 0x70
   29bb4:	adds	r6, #128	; 0x80
   29bb6:	ldr	r0, [r3, #0]
   29bb8:	adds	r3, #8
   29bba:	ldr.w	r1, [r3, #-4]
   29bbe:	cmp	r3, r6
   29bc0:	mov	r2, ip
   29bc2:	stmia	r2!, {r0, r1}
   29bc4:	mov	ip, r2
   29bc6:	bne.n	29bb6 <btrfs_alloc_data_chunk@@Base+0x132>
   29bc8:	ldr	r3, [sp, #16]
   29bca:	movs	r0, #1
   29bcc:	movs	r1, #0
   29bce:	mov.w	r6, #65537	; 0x10001
   29bd2:	str	r3, [r4, #0]
   29bd4:	ldr	r3, [sp, #20]
   29bd6:	str	r3, [r4, #4]
   29bd8:	ldr	r3, [sp, #24]
   29bda:	ldr.w	r2, [r3, #447]	; 0x1bf
   29bde:	ldr.w	r3, [r3, #451]	; 0x1c3
   29be2:	strd	r0, r1, [r4, #24]
   29be6:	str	r6, [r4, #44]	; 0x2c
   29be8:	strd	r2, r3, [r4, #8]
   29bec:	mov.w	r2, #65536	; 0x10000
   29bf0:	movs	r3, #0
   29bf2:	strd	r2, r3, [r4, #16]
   29bf6:	ldr.w	r2, [r7, #388]	; 0x184
   29bfa:	mov.w	r3, #65536	; 0x10000
   29bfe:	strd	r0, r1, [r5, #40]	; 0x28
   29c02:	strd	r3, r3, [r4, #32]
   29c06:	strd	r3, r2, [r5, #56]	; 0x38
   29c0a:	str	r2, [r4, #40]	; 0x28
   29c0c:	strd	r3, r3, [r5, #48]	; 0x30
   29c10:	strd	r0, r0, [r5, #64]	; 0x40
   29c14:	bl	28590 <btrfs_add_root_ref@@Base+0x268>
   29c18:	vmov	r1, s17
   29c1c:	add	r2, sp, #32
   29c1e:	mov	r3, r4
   29c20:	ldr	r6, [pc, #132]	; (29ca8 <btrfs_alloc_data_chunk@@Base+0x224>)
   29c22:	add	r6, pc
   29c24:	str	r0, [sp, #0]
   29c26:	mov	r0, r8
   29c28:	bl	1b9c8 <btrfs_insert_item@@Base>
   29c2c:	ldr.w	r8, [pc, #124]	; 29cac <btrfs_alloc_data_chunk@@Base+0x228>
   29c30:	ldr	r2, [pc, #124]	; (29cb0 <btrfs_alloc_data_chunk@@Base+0x22c>)
   29c32:	movw	r3, #1367	; 0x557
   29c36:	add	r8, pc
   29c38:	add	r2, pc
   29c3a:	adds	r2, #72	; 0x48
   29c3c:	mov	r1, r8
   29c3e:	str	r2, [sp, #24]
   29c40:	str	r0, [sp, #0]
   29c42:	mov	r0, r6
   29c44:	bl	28580 <btrfs_add_root_ref@@Base+0x258>
   29c48:	ldr.w	r1, [sp, #41]	; 0x29
   29c4c:	ldr.w	r3, [sp, #45]	; 0x2d
   29c50:	add.w	r0, r7, #228	; 0xe4
   29c54:	strd	r1, r3, [r5, #24]
   29c58:	mov	r1, r5
   29c5a:	ldr	r3, [sp, #16]
   29c5c:	str	r3, [r5, #32]
   29c5e:	ldr	r3, [sp, #20]
   29c60:	str	r3, [r5, #36]	; 0x24
   29c62:	bl	1659a <insert_cache_extent@@Base>
   29c66:	ldr	r2, [sp, #24]
   29c68:	movw	r3, #1373	; 0x55d
   29c6c:	mov	r1, r8
   29c6e:	str	r0, [sp, #0]
   29c70:	mov	r5, r0
   29c72:	mov	r0, r6
   29c74:	bl	28580 <btrfs_add_root_ref@@Base+0x258>
   29c78:	mov	r0, r4
   29c7a:	blx	8620 <free@plt+0x4>
   29c7e:	b.n	29ae0 <btrfs_alloc_data_chunk@@Base+0x5c>
   29c80:	mov	r0, r5
   29c82:	add	sp, #60	; 0x3c
   29c84:	vpop	{d8}
   29c88:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29c8c:	uxtb	r2, r5
   29c8e:	movs	r3, r0
   29c90:	lsls	r0, r5, #8
   29c92:	movs	r0, r0
   29c94:	str	r6, [r2, #108]	; 0x6c
   29c96:	movs	r1, r0
   29c98:	uxth	r4, r3
   29c9a:	movs	r3, r0
   29c9c:	lsrs	r0, r2, #6
   29c9e:	movs	r1, r0
   29ca0:	ldr	r6, [r1, #80]	; 0x50
   29ca2:	movs	r1, r0
   29ca4:	str	r7, [r5, #96]	; 0x60
   29ca6:	movs	r1, r0
   29ca8:	lsrs	r2, r0, #3
   29caa:	movs	r1, r0
   29cac:	str	r5, [r2, #84]	; 0x54
   29cae:	movs	r1, r0
   29cb0:	ldr	r4, [r5, #64]	; 0x40
   29cb2:	movs	r1, r0

00029cb4 <btrfs_num_copies@@Base>:
   29cb4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29cb8:	sub	sp, #44	; 0x2c
   29cba:	adds	r0, #228	; 0xe4
   29cbc:	mov	r4, r2
   29cbe:	ldrd	fp, r1, [sp, #80]	; 0x50
   29cc2:	mov	r5, r3
   29cc4:	ldr.w	sl, [pc, #196]	; 29d8c <btrfs_num_copies@@Base+0xd8>
   29cc8:	str	r1, [sp, #36]	; 0x24
   29cca:	bl	166dc <search_cache_extent@@Base>
   29cce:	add	sl, pc
   29cd0:	ldr	r1, [sp, #36]	; 0x24
   29cd2:	cbnz	r0, 29cfe <btrfs_num_copies@@Base+0x4a>
   29cd4:	ldr	r3, [pc, #184]	; (29d90 <btrfs_num_copies@@Base+0xdc>)
   29cd6:	adds.w	r2, r4, fp
   29cda:	adc.w	r1, r5, r1
   29cde:	ldr.w	r3, [sl, r3]
   29ce2:	strd	r2, r1, [sp, #8]
   29ce6:	movs	r1, #1
   29ce8:	ldr	r2, [pc, #168]	; (29d94 <btrfs_num_copies@@Base+0xe0>)
   29cea:	strd	r4, r5, [sp]
   29cee:	add	r2, pc
   29cf0:	ldr	r0, [r3, #0]
   29cf2:	blx	8a64 <__fprintf_chk@plt+0x4>
   29cf6:	movs	r0, #1
   29cf8:	add	sp, #44	; 0x2c
   29cfa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29cfe:	ldrd	r8, r9, [r0, #24]
   29d02:	ldrd	r3, r2, [r0, #32]
   29d06:	adds.w	r6, r8, r3
   29d0a:	adc.w	r7, r9, r2
   29d0e:	cmp	r5, r9
   29d10:	it	eq
   29d12:	cmpeq	r4, r8
   29d14:	bcc.n	29d1e <btrfs_num_copies@@Base+0x6a>
   29d16:	cmp	r7, r5
   29d18:	it	eq
   29d1a:	cmpeq	r6, r4
   29d1c:	bcs.n	29d4a <btrfs_num_copies@@Base+0x96>
   29d1e:	ldr	r3, [pc, #112]	; (29d90 <btrfs_num_copies@@Base+0xdc>)
   29d20:	adds.w	r2, r4, fp
   29d24:	adc.w	r1, r5, r1
   29d28:	ldr.w	r3, [sl, r3]
   29d2c:	strd	r2, r1, [sp, #8]
   29d30:	movs	r1, #1
   29d32:	ldr	r2, [pc, #100]	; (29d98 <btrfs_num_copies@@Base+0xe4>)
   29d34:	strd	r6, r7, [sp, #24]
   29d38:	strd	r8, r9, [sp, #16]
   29d3c:	add	r2, pc
   29d3e:	strd	r4, r5, [sp]
   29d42:	ldr	r0, [r3, #0]
   29d44:	blx	8a64 <__fprintf_chk@plt+0x4>
   29d48:	b.n	29cf6 <btrfs_num_copies@@Base+0x42>
   29d4a:	ldr	r2, [r0, #40]	; 0x28
   29d4c:	movs	r3, #0
   29d4e:	mov	r5, r3
   29d50:	and.w	r4, r2, #1584	; 0x630
   29d54:	orrs.w	r1, r4, r5
   29d58:	beq.n	29d5e <btrfs_num_copies@@Base+0xaa>
   29d5a:	ldr	r0, [r0, #64]	; 0x40
   29d5c:	b.n	29cf8 <btrfs_num_copies@@Base+0x44>
   29d5e:	and.w	r4, r2, #64	; 0x40
   29d62:	orrs.w	r1, r4, r5
   29d66:	beq.n	29d6c <btrfs_num_copies@@Base+0xb8>
   29d68:	ldr	r0, [r0, #68]	; 0x44
   29d6a:	b.n	29cf8 <btrfs_num_copies@@Base+0x44>
   29d6c:	and.w	r0, r2, #128	; 0x80
   29d70:	mov	r1, r3
   29d72:	orrs	r1, r0
   29d74:	bne.n	29d88 <btrfs_num_copies@@Base+0xd4>
   29d76:	and.w	r0, r2, #256	; 0x100
   29d7a:	mov	r1, r3
   29d7c:	orrs.w	r3, r0, r1
   29d80:	ite	ne
   29d82:	movne	r0, #3
   29d84:	moveq	r0, #1
   29d86:	b.n	29cf8 <btrfs_num_copies@@Base+0x44>
   29d88:	movs	r0, #2
   29d8a:	b.n	29cf8 <btrfs_num_copies@@Base+0x44>
   29d8c:	sub	sp, #200	; 0xc8
   29d8e:	movs	r3, r0
   29d90:	lsls	r0, r7, #8
   29d92:	movs	r0, r0
   29d94:	str	r0, [r6, #76]	; 0x4c
   29d96:	movs	r1, r0
   29d98:	str	r4, [r7, #72]	; 0x48
   29d9a:	movs	r1, r0

00029d9c <btrfs_next_bg@@Base>:
   29d9c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29da0:	adds	r0, #228	; 0xe4
   29da2:	ldrd	r4, r5, [r1]
   29da6:	mov	r7, r2
   29da8:	ldrd	sl, fp, [sp, #40]	; 0x28
   29dac:	mov	r6, r1
   29dae:	mov	r2, r4
   29db0:	mov	r3, r5
   29db2:	bl	166dc <search_cache_extent@@Base>
   29db6:	cbz	r0, 29dc4 <btrfs_next_bg@@Base+0x28>
   29db8:	orrs.w	r3, r4, r5
   29dbc:	beq.n	29dcc <btrfs_next_bg@@Base+0x30>
   29dbe:	bl	167b0 <next_cache_extent@@Base>
   29dc2:	cbnz	r0, 29dcc <btrfs_next_bg@@Base+0x30>
   29dc4:	mvn.w	r0, #1
   29dc8:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29dcc:	ldrd	r2, r3, [r0, #40]	; 0x28
   29dd0:	ldrd	r4, r5, [r0, #24]
   29dd4:	and.w	r8, sl, r2
   29dd8:	and.w	r9, fp, r3
   29ddc:	orrs.w	r3, r8, r9
   29de0:	beq.n	29df2 <btrfs_next_bg@@Base+0x56>
   29de2:	strd	r4, r5, [r6]
   29de6:	ldrd	r2, r3, [r0, #32]
   29dea:	movs	r0, #0
   29dec:	strd	r2, r3, [r7]
   29df0:	b.n	29dc8 <btrfs_next_bg@@Base+0x2c>
   29df2:	orrs.w	r3, r4, r5
   29df6:	bne.n	29db6 <btrfs_next_bg@@Base+0x1a>
   29df8:	bl	167b0 <next_cache_extent@@Base>
   29dfc:	b.n	29db6 <btrfs_next_bg@@Base+0x1a>

00029dfe <btrfs_rmap_block@@Base>:
   29dfe:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29e02:	adds	r0, #228	; 0xe4
   29e04:	sub	sp, #60	; 0x3c
   29e06:	bl	166dc <search_cache_extent@@Base>
   29e0a:	ldr	r2, [pc, #464]	; (29fdc <btrfs_rmap_block@@Base+0x1de>)
   29e0c:	ldr	r1, [pc, #464]	; (29fe0 <btrfs_rmap_block@@Base+0x1e2>)
   29e0e:	movw	r3, #1467	; 0x5bb
   29e12:	add	r2, pc
   29e14:	adds	r2, #95	; 0x5f
   29e16:	add	r1, pc
   29e18:	mov	r4, r0
   29e1a:	clz	r0, r0
   29e1e:	lsrs	r0, r0, #5
   29e20:	str	r0, [sp, #0]
   29e22:	ldr	r0, [pc, #448]	; (29fe4 <btrfs_rmap_block@@Base+0x1e6>)
   29e24:	add	r0, pc
   29e26:	bl	28580 <btrfs_add_root_ref@@Base+0x258>
   29e2a:	ldr	r5, [r4, #56]	; 0x38
   29e2c:	ldr	r0, [r4, #40]	; 0x28
   29e2e:	movs	r1, #0
   29e30:	ldrd	r6, r7, [r4, #32]
   29e34:	asrs	r3, r5, #31
   29e36:	mov	r2, r5
   29e38:	strd	r2, r3, [sp, #8]
   29e3c:	and.w	r2, r0, #64	; 0x40
   29e40:	mov	r3, r1
   29e42:	orrs	r3, r2
   29e44:	beq.n	29e94 <btrfs_rmap_block@@Base+0x96>
   29e46:	ldrd	r0, r1, [r4, #64]	; 0x40
   29e4a:	bl	39698 <btrfs_util_strerror@@Base+0x290>
   29e4e:	mov	r2, r0
   29e50:	mov	r0, r6
   29e52:	mov	r1, r7
   29e54:	asrs	r3, r2, #31
   29e56:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   29e5a:	mov	r6, r0
   29e5c:	mov	r7, r1
   29e5e:	ldr	r1, [r4, #64]	; 0x40
   29e60:	movs	r0, #1
   29e62:	mov.w	r8, #0
   29e66:	mov	sl, r8
   29e68:	mov	r9, r8
   29e6a:	lsls	r1, r1, #3
   29e6c:	blx	8588 <calloc@plt+0x4>
   29e70:	strd	r0, r4, [sp, #24]
   29e74:	ldr	r5, [r4, #64]	; 0x40
   29e76:	cmp	r5, r8
   29e78:	bgt.n	29ed2 <btrfs_rmap_block@@Base+0xd4>
   29e7a:	ldr	r3, [sp, #104]	; 0x68
   29e7c:	movs	r0, #0
   29e7e:	ldr	r2, [sp, #24]
   29e80:	str	r2, [r3, #0]
   29e82:	ldr	r3, [sp, #108]	; 0x6c
   29e84:	ldr	r2, [sp, #8]
   29e86:	str.w	r9, [r3]
   29e8a:	ldr	r3, [sp, #112]	; 0x70
   29e8c:	str	r2, [r3, #0]
   29e8e:	add	sp, #60	; 0x3c
   29e90:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29e94:	and.w	r8, r0, #8
   29e98:	mov	r9, r1
   29e9a:	orrs.w	r3, r8, r9
   29e9e:	ldr	r2, [r4, #64]	; 0x40
   29ea0:	bne.n	29e50 <btrfs_rmap_block@@Base+0x52>
   29ea2:	and.w	r2, r0, #384	; 0x180
   29ea6:	mov	r3, r1
   29ea8:	orrs	r3, r2
   29eaa:	beq.n	29e5e <btrfs_rmap_block@@Base+0x60>
   29eac:	mov	r0, r4
   29eae:	bl	28428 <btrfs_add_root_ref@@Base+0x100>
   29eb2:	mov	r1, r7
   29eb4:	asrs	r3, r0, #31
   29eb6:	mov	r2, r0
   29eb8:	mov	r8, r0
   29eba:	mov	r0, r6
   29ebc:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   29ec0:	mul.w	r5, r8, r5
   29ec4:	asrs	r3, r5, #31
   29ec6:	mov	r2, r5
   29ec8:	strd	r2, r3, [sp, #8]
   29ecc:	mov	r6, r0
   29ece:	mov	r7, r1
   29ed0:	b.n	29e5e <btrfs_rmap_block@@Base+0x60>
   29ed2:	ldr	r3, [sp, #28]
   29ed4:	ldrd	fp, ip, [r3, #80]	; 0x50
   29ed8:	ldrd	r2, r3, [sp, #96]	; 0x60
   29edc:	cmp	r3, ip
   29ede:	it	eq
   29ee0:	cmpeq	r2, fp
   29ee2:	bcc.n	29f8c <btrfs_rmap_block@@Base+0x18e>
   29ee4:	adds.w	r3, fp, r6
   29ee8:	str	r3, [sp, #32]
   29eea:	adc.w	r3, ip, r7
   29eee:	str	r3, [sp, #36]	; 0x24
   29ef0:	ldrd	r0, r1, [sp, #32]
   29ef4:	ldrd	r2, r3, [sp, #96]	; 0x60
   29ef8:	cmp	r3, r1
   29efa:	it	eq
   29efc:	cmpeq	r2, r0
   29efe:	bcs.n	29f8c <btrfs_rmap_block@@Base+0x18e>
   29f00:	ldr	r1, [sp, #96]	; 0x60
   29f02:	ldr	r2, [r4, #56]	; 0x38
   29f04:	subs.w	r0, r1, fp
   29f08:	ldr	r1, [sp, #100]	; 0x64
   29f0a:	mov.w	r3, r2, asr #31
   29f0e:	sbc.w	r1, r1, ip
   29f12:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   29f16:	ldr	r3, [r4, #40]	; 0x28
   29f18:	and.w	r2, r3, #64	; 0x40
   29f1c:	str	r2, [sp, #40]	; 0x28
   29f1e:	movs	r2, #0
   29f20:	str	r2, [sp, #44]	; 0x2c
   29f22:	ldrd	fp, ip, [sp, #40]	; 0x28
   29f26:	orrs.w	r2, fp, ip
   29f2a:	mov	lr, r0
   29f2c:	beq.n	29f9c <btrfs_rmap_block@@Base+0x19e>
   29f2e:	asrs	r3, r5, #31
   29f30:	ldr	r2, [r4, #68]	; 0x44
   29f32:	muls	r1, r5
   29f34:	mla	r1, lr, r3, r1
   29f38:	asrs	r3, r2, #31
   29f3a:	umull	fp, ip, r5, lr
   29f3e:	add	ip, r1
   29f40:	adds.w	r0, fp, r8
   29f44:	adc.w	r1, ip, sl
   29f48:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   29f4c:	mov	lr, r0
   29f4e:	ldr	r3, [sp, #12]
   29f50:	ldr	r2, [sp, #8]
   29f52:	mul.w	r3, lr, r3
   29f56:	mla	r1, r2, r1, r3
   29f5a:	umull	r2, r3, lr, r2
   29f5e:	add	r3, r1
   29f60:	ldrd	r1, r0, [r4, #24]
   29f64:	adds	r1, r2, r1
   29f66:	str	r1, [sp, #16]
   29f68:	adcs	r3, r0
   29f6a:	str	r3, [sp, #20]
   29f6c:	ldr	r3, [sp, #24]
   29f6e:	sub.w	r2, r3, #8
   29f72:	movs	r3, #0
   29f74:	cmp	r3, r9
   29f76:	blt.n	29fc6 <btrfs_rmap_block@@Base+0x1c8>
   29f78:	bne.n	29f8c <btrfs_rmap_block@@Base+0x18e>
   29f7a:	ldr	r3, [sp, #24]
   29f7c:	ldrd	r1, r2, [sp, #16]
   29f80:	add.w	r3, r3, r9, lsl #3
   29f84:	add.w	r9, r9, #1
   29f88:	strd	r1, r2, [r3]
   29f8c:	ldr	r3, [sp, #28]
   29f8e:	adds.w	r8, r8, #1
   29f92:	adc.w	sl, sl, #0
   29f96:	adds	r3, #16
   29f98:	str	r3, [sp, #28]
   29f9a:	b.n	29e74 <btrfs_rmap_block@@Base+0x76>
   29f9c:	and.w	r3, r3, #8
   29fa0:	str	r3, [sp, #48]	; 0x30
   29fa2:	movs	r3, #0
   29fa4:	str	r3, [sp, #52]	; 0x34
   29fa6:	ldrd	r2, r3, [sp, #48]	; 0x30
   29faa:	orrs	r3, r2
   29fac:	beq.n	29f4e <btrfs_rmap_block@@Base+0x150>
   29fae:	asrs	r3, r5, #31
   29fb0:	muls	r1, r5
   29fb2:	mla	r3, lr, r3, r1
   29fb6:	umull	r0, r1, r5, lr
   29fba:	add	r1, r3
   29fbc:	adds.w	lr, r0, r8
   29fc0:	adc.w	r1, r1, sl
   29fc4:	b.n	29f4e <btrfs_rmap_block@@Base+0x150>
   29fc6:	ldrd	r0, r1, [r2, #8]!
   29fca:	ldrd	fp, ip, [sp, #16]
   29fce:	cmp	r1, ip
   29fd0:	it	eq
   29fd2:	cmpeq	r0, fp
   29fd4:	beq.n	29f8c <btrfs_rmap_block@@Base+0x18e>
   29fd6:	adds	r3, #1
   29fd8:	b.n	29f74 <btrfs_rmap_block@@Base+0x176>
   29fda:	nop
   29fdc:	ldr	r2, [r2, #36]	; 0x24
   29fde:	movs	r1, r0
   29fe0:	str	r5, [r6, #52]	; 0x34
   29fe2:	movs	r1, r0
   29fe4:	str	r2, [r0, #64]	; 0x40
   29fe6:	movs	r1, r0

00029fe8 <__btrfs_map_block@@Base>:
   29fe8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29fec:	sub	sp, #124	; 0x7c
   29fee:	mov	fp, r1
   29ff0:	strd	r2, r3, [sp, #16]
   29ff4:	ldrd	r3, r5, [sp, #168]	; 0xa8
   29ff8:	cbz	r3, 2a032 <__btrfs_map_block@@Base+0x4a>
   29ffa:	cmp	r1, #0
   29ffc:	ite	eq
   29ffe:	moveq	r7, #1
   2a000:	movne	r7, #8
   2a002:	add.w	sl, r0, #228	; 0xe4
   2a006:	movs	r6, #1
   2a008:	mov.w	r9, #0
   2a00c:	ldrd	r2, r3, [sp, #16]
   2a010:	mov	r0, sl
   2a012:	bl	166dc <search_cache_extent@@Base>
   2a016:	mov	r4, r0
   2a018:	cbnz	r0, 2a036 <__btrfs_map_block@@Base+0x4e>
   2a01a:	ldr	r1, [sp, #160]	; 0xa0
   2a01c:	mov.w	r2, #4294967295	; 0xffffffff
   2a020:	mov.w	r3, #4294967295	; 0xffffffff
   2a024:	strd	r2, r3, [r1]
   2a028:	mvn.w	r0, #1
   2a02c:	add	sp, #124	; 0x7c
   2a02e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a032:	movs	r7, #8
   2a034:	b.n	2a002 <__btrfs_map_block@@Base+0x1a>
   2a036:	ldrd	r2, r3, [r0, #24]
   2a03a:	strd	r2, r3, [sp, #24]
   2a03e:	ldrd	r0, r1, [sp, #24]
   2a042:	ldrd	r2, r3, [sp, #16]
   2a046:	cmp	r3, r1
   2a048:	it	eq
   2a04a:	cmpeq	r2, r0
   2a04c:	bcs.n	2a064 <__btrfs_map_block@@Base+0x7c>
   2a04e:	ldr	r3, [sp, #24]
   2a050:	ldr	r2, [sp, #16]
   2a052:	ldr	r1, [sp, #20]
   2a054:	subs	r2, r3, r2
   2a056:	ldr	r3, [sp, #28]
   2a058:	sbc.w	r3, r3, r1
   2a05c:	ldr	r1, [sp, #160]	; 0xa0
   2a05e:	str	r2, [r1, #0]
   2a060:	str	r3, [r1, #4]
   2a062:	b.n	2a028 <__btrfs_map_block@@Base+0x40>
   2a064:	ldr	r3, [sp, #168]	; 0xa8
   2a066:	cbz	r3, 2a07c <__btrfs_map_block@@Base+0x94>
   2a068:	lsls	r1, r7, #4
   2a06a:	movs	r0, #1
   2a06c:	adds	r1, #8
   2a06e:	blx	8588 <calloc@plt+0x4>
   2a072:	mov	r8, r0
   2a074:	cbnz	r0, 2a080 <__btrfs_map_block@@Base+0x98>
   2a076:	mvn.w	r0, #11
   2a07a:	b.n	2a02c <__btrfs_map_block@@Base+0x44>
   2a07c:	ldr.w	r8, [sp, #168]	; 0xa8
   2a080:	ldr	r3, [r4, #40]	; 0x28
   2a082:	cmp.w	fp, #1
   2a086:	str	r3, [sp, #76]	; 0x4c
   2a088:	bne.n	2a09c <__btrfs_map_block@@Base+0xb4>
   2a08a:	and.w	r3, r3, #1584	; 0x630
   2a08e:	strd	r3, r9, [sp, #8]
   2a092:	ldrd	r2, r3, [sp, #8]
   2a096:	orrs	r3, r2
   2a098:	beq.n	2a0d8 <__btrfs_map_block@@Base+0xf0>
   2a09a:	ldr	r6, [r4, #64]	; 0x40
   2a09c:	ldr	r3, [sp, #76]	; 0x4c
   2a09e:	and.w	r3, r3, #384	; 0x180
   2a0a2:	strd	r3, r9, [sp, #48]	; 0x30
   2a0a6:	ldrd	r2, r3, [sp, #48]	; 0x30
   2a0aa:	orrs	r3, r2
   2a0ac:	ldr	r3, [sp, #168]	; 0xa8
   2a0ae:	beq.n	2a0ee <__btrfs_map_block@@Base+0x106>
   2a0b0:	cbz	r3, 2a0fe <__btrfs_map_block@@Base+0x116>
   2a0b2:	tst.w	fp, #1
   2a0b6:	bne.n	2a0bc <__btrfs_map_block@@Base+0xd4>
   2a0b8:	cmp	r5, #1
   2a0ba:	ble.n	2a0f0 <__btrfs_map_block@@Base+0x108>
   2a0bc:	ldr	r3, [sp, #176]	; 0xb0
   2a0be:	cbz	r3, 2a0f0 <__btrfs_map_block@@Base+0x108>
   2a0c0:	ldr	r6, [r4, #64]	; 0x40
   2a0c2:	cmp	r7, r6
   2a0c4:	blt.n	2a0f4 <__btrfs_map_block@@Base+0x10c>
   2a0c6:	lsls	r0, r6, #3
   2a0c8:	blx	8870 <malloc@plt+0x4>
   2a0cc:	str	r0, [sp, #8]
   2a0ce:	cbnz	r0, 2a102 <__btrfs_map_block@@Base+0x11a>
   2a0d0:	mov	r0, r8
   2a0d2:	blx	8620 <free@plt+0x4>
   2a0d6:	b.n	2a076 <__btrfs_map_block@@Base+0x8e>
   2a0d8:	ldr	r3, [sp, #76]	; 0x4c
   2a0da:	and.w	r3, r3, #64	; 0x40
   2a0de:	strd	r3, r9, [sp, #32]
   2a0e2:	ldrd	r2, r3, [sp, #32]
   2a0e6:	orrs	r3, r2
   2a0e8:	it	ne
   2a0ea:	ldrne	r6, [r4, #68]	; 0x44
   2a0ec:	b.n	2a09c <__btrfs_map_block@@Base+0xb4>
   2a0ee:	cbz	r3, 2a0fe <__btrfs_map_block@@Base+0x116>
   2a0f0:	cmp	r7, r6
   2a0f2:	bge.n	2a0fe <__btrfs_map_block@@Base+0x116>
   2a0f4:	mov	r0, r8
   2a0f6:	mov	r7, r6
   2a0f8:	blx	8620 <free@plt+0x4>
   2a0fc:	b.n	2a00c <__btrfs_map_block@@Base+0x24>
   2a0fe:	movs	r3, #0
   2a100:	str	r3, [sp, #8]
   2a102:	ldr	r2, [sp, #24]
   2a104:	ldr	r3, [sp, #16]
   2a106:	ldr	r6, [r4, #56]	; 0x38
   2a108:	subs	r3, r3, r2
   2a10a:	ldr	r2, [sp, #28]
   2a10c:	str	r3, [sp, #64]	; 0x40
   2a10e:	ldr	r3, [sp, #20]
   2a110:	sbc.w	r3, r3, r2
   2a114:	str	r3, [sp, #68]	; 0x44
   2a116:	mov	r2, r6
   2a118:	asrs	r3, r6, #31
   2a11a:	ldrd	r0, r1, [sp, #64]	; 0x40
   2a11e:	strd	r2, r3, [sp, #80]	; 0x50
   2a122:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2a126:	mov	r9, r2
   2a128:	ldr	r2, [sp, #84]	; 0x54
   2a12a:	mov	r7, r0
   2a12c:	str	r3, [sp, #100]	; 0x64
   2a12e:	mul.w	r3, r6, r1
   2a132:	str	r1, [sp, #48]	; 0x30
   2a134:	mla	r3, r7, r2, r3
   2a138:	mov	sl, r1
   2a13a:	umull	r1, r2, r6, r7
   2a13e:	str	r0, [sp, #32]
   2a140:	strd	r1, r2, [sp, #56]	; 0x38
   2a144:	ldr	r2, [sp, #60]	; 0x3c
   2a146:	add	r3, r2
   2a148:	str	r3, [sp, #60]	; 0x3c
   2a14a:	ldrd	r0, r1, [sp, #56]	; 0x38
   2a14e:	ldrd	r2, r3, [sp, #64]	; 0x40
   2a152:	cmp	r3, r1
   2a154:	ldr	r1, [pc, #952]	; (2a510 <__btrfs_map_block@@Base+0x528>)
   2a156:	it	eq
   2a158:	cmpeq	r2, r0
   2a15a:	ldr	r2, [pc, #952]	; (2a514 <__btrfs_map_block@@Base+0x52c>)
   2a15c:	ldr	r0, [pc, #952]	; (2a518 <__btrfs_map_block@@Base+0x530>)
   2a15e:	add	r1, pc
   2a160:	add	r2, pc
   2a162:	ite	cc
   2a164:	movcc	r3, #1
   2a166:	movcs	r3, #0
   2a168:	adds	r2, #112	; 0x70
   2a16a:	add	r0, pc
   2a16c:	str	r3, [sp, #0]
   2a16e:	movw	r3, #1638	; 0x666
   2a172:	bl	28580 <btrfs_add_root_ref@@Base+0x258>
   2a176:	ldr	r3, [sp, #76]	; 0x4c
   2a178:	movs	r1, #0
   2a17a:	ldrd	r2, r6, [r4, #32]
   2a17e:	and.w	r0, r3, #2040	; 0x7f8
   2a182:	str.w	r9, [sp, #96]	; 0x60
   2a186:	orrs.w	r3, r0, r1
   2a18a:	ldr	r3, [sp, #24]
   2a18c:	ldr	r1, [sp, #16]
   2a18e:	beq.n	2a1e8 <__btrfs_map_block@@Base+0x200>
   2a190:	subs	r3, r3, r1
   2a192:	ldr	r0, [sp, #20]
   2a194:	ldr	r1, [sp, #28]
   2a196:	sbc.w	r0, r1, r0
   2a19a:	ldr	r1, [sp, #80]	; 0x50
   2a19c:	adds.w	lr, r1, r3
   2a1a0:	ldr	r1, [sp, #84]	; 0x54
   2a1a2:	adc.w	ip, r1, r0
   2a1a6:	adds	r3, r3, r2
   2a1a8:	str	r3, [sp, #88]	; 0x58
   2a1aa:	adc.w	r3, r0, r6
   2a1ae:	str	r3, [sp, #92]	; 0x5c
   2a1b0:	ldr	r3, [sp, #56]	; 0x38
   2a1b2:	adds.w	r3, lr, r3
   2a1b6:	str	r3, [sp, #40]	; 0x28
   2a1b8:	ldr	r3, [sp, #60]	; 0x3c
   2a1ba:	adc.w	r3, ip, r3
   2a1be:	str	r3, [sp, #44]	; 0x2c
   2a1c0:	ldrd	r0, r1, [sp, #40]	; 0x28
   2a1c4:	ldrd	r2, r3, [sp, #88]	; 0x58
   2a1c8:	cmp	r3, r1
   2a1ca:	it	eq
   2a1cc:	cmpeq	r2, r0
   2a1ce:	bcs.n	2a1d4 <__btrfs_map_block@@Base+0x1ec>
   2a1d0:	strd	r2, r3, [sp, #40]	; 0x28
   2a1d4:	ldr	r3, [sp, #160]	; 0xa0
   2a1d6:	mov	r1, r3
   2a1d8:	ldrd	r2, r3, [sp, #40]	; 0x28
   2a1dc:	strd	r2, r3, [r1]
   2a1e0:	ldr	r3, [sp, #168]	; 0xa8
   2a1e2:	cbnz	r3, 2a1fe <__btrfs_map_block@@Base+0x216>
   2a1e4:	movs	r0, #0
   2a1e6:	b.n	2a02c <__btrfs_map_block@@Base+0x44>
   2a1e8:	subs	r3, r3, r1
   2a1ea:	ldr	r0, [sp, #20]
   2a1ec:	ldr	r1, [sp, #28]
   2a1ee:	sbc.w	r1, r1, r0
   2a1f2:	adds	r3, r3, r2
   2a1f4:	str	r3, [sp, #40]	; 0x28
   2a1f6:	adc.w	r3, r1, r6
   2a1fa:	str	r3, [sp, #44]	; 0x2c
   2a1fc:	b.n	2a1d4 <__btrfs_map_block@@Base+0x1ec>
   2a1fe:	movs	r3, #1
   2a200:	str.w	r3, [r8, #4]
   2a204:	ldr	r1, [r4, #40]	; 0x28
   2a206:	mov.w	r9, #0
   2a20a:	mov	r3, r9
   2a20c:	ldr	r0, [r4, #64]	; 0x40
   2a20e:	and.w	r2, r1, #1552	; 0x610
   2a212:	orrs	r3, r2
   2a214:	beq.n	2a29c <__btrfs_map_block@@Base+0x2b4>
   2a216:	cmp.w	fp, #1
   2a21a:	bne.n	2a288 <__btrfs_map_block@@Base+0x2a0>
   2a21c:	mov	r5, r9
   2a21e:	str.w	r0, [r8, #4]
   2a222:	ldr	r3, [r4, #64]	; 0x40
   2a224:	ldr	r2, [pc, #756]	; (2a51c <__btrfs_map_block@@Base+0x534>)
   2a226:	cmp	r3, r5
   2a228:	ldr	r1, [pc, #756]	; (2a520 <__btrfs_map_block@@Base+0x538>)
   2a22a:	ldr	r0, [pc, #760]	; (2a524 <__btrfs_map_block@@Base+0x53c>)
   2a22c:	add	r2, pc
   2a22e:	ite	gt
   2a230:	movgt	r3, #0
   2a232:	movle	r3, #1
   2a234:	add	r1, pc
   2a236:	add	r0, pc
   2a238:	str	r3, [sp, #0]
   2a23a:	adds	r2, #112	; 0x70
   2a23c:	movw	r3, #1748	; 0x6d4
   2a240:	add.w	r5, r4, r5, lsl #4
   2a244:	bl	28580 <btrfs_add_root_ref@@Base+0x258>
   2a248:	ldr.w	ip, [r8, #4]
   2a24c:	add.w	r1, r8, #8
   2a250:	movs	r0, #0
   2a252:	cmp	ip, r0
   2a254:	add.w	r5, r5, #16
   2a258:	add.w	r1, r1, #16
   2a25c:	bgt.w	2a450 <__btrfs_map_block@@Base+0x468>
   2a260:	ldr	r3, [sp, #168]	; 0xa8
   2a262:	str.w	r8, [r3]
   2a266:	ldr	r3, [sp, #164]	; 0xa4
   2a268:	cbz	r3, 2a274 <__btrfs_map_block@@Base+0x28c>
   2a26a:	ldrd	r2, r3, [r4, #40]	; 0x28
   2a26e:	ldr	r1, [sp, #164]	; 0xa4
   2a270:	strd	r2, r3, [r1]
   2a274:	ldr	r3, [sp, #8]
   2a276:	cmp	r3, #0
   2a278:	beq.n	2a1e4 <__btrfs_map_block@@Base+0x1fc>
   2a27a:	movs	r0, #0
   2a27c:	add.w	r7, ip, #4294967295	; 0xffffffff
   2a280:	add.w	r9, sp, #104	; 0x68
   2a284:	mov	r4, r0
   2a286:	b.n	2a4f8 <__btrfs_map_block@@Base+0x510>
   2a288:	cbz	r5, 2a28e <__btrfs_map_block@@Base+0x2a6>
   2a28a:	subs	r5, #1
   2a28c:	b.n	2a222 <__btrfs_map_block@@Base+0x23a>
   2a28e:	asrs	r3, r0, #31
   2a290:	mov	r2, r0
   2a292:	mov	r1, sl
   2a294:	mov	r0, r7
   2a296:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2a29a:	b.n	2a2cc <__btrfs_map_block@@Base+0x2e4>
   2a29c:	and.w	r2, r1, #64	; 0x40
   2a2a0:	mov	r3, r9
   2a2a2:	orrs	r3, r2
   2a2a4:	beq.n	2a2da <__btrfs_map_block@@Base+0x2f2>
   2a2a6:	ldr	r6, [r4, #68]	; 0x44
   2a2a8:	mov	r1, r6
   2a2aa:	bl	39698 <btrfs_util_strerror@@Base+0x290>
   2a2ae:	mov	r1, sl
   2a2b0:	asrs	r3, r0, #31
   2a2b2:	mov	r2, r0
   2a2b4:	mov	r0, r7
   2a2b6:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2a2ba:	cmp.w	fp, #1
   2a2be:	mul.w	r2, r2, r6
   2a2c2:	bne.n	2a2d0 <__btrfs_map_block@@Base+0x2e8>
   2a2c4:	str.w	r6, [r8, #4]
   2a2c8:	str	r0, [sp, #32]
   2a2ca:	str	r1, [sp, #48]	; 0x30
   2a2cc:	mov	r5, r2
   2a2ce:	b.n	2a222 <__btrfs_map_block@@Base+0x23a>
   2a2d0:	cmp	r5, #0
   2a2d2:	beq.n	2a2c8 <__btrfs_map_block@@Base+0x2e0>
   2a2d4:	subs	r5, #1
   2a2d6:	add	r2, r5
   2a2d8:	b.n	2a2c8 <__btrfs_map_block@@Base+0x2e0>
   2a2da:	and.w	r2, r1, #32
   2a2de:	mov	r3, r9
   2a2e0:	orrs	r3, r2
   2a2e2:	beq.n	2a2f0 <__btrfs_map_block@@Base+0x308>
   2a2e4:	cmp.w	fp, #1
   2a2e8:	beq.n	2a21c <__btrfs_map_block@@Base+0x234>
   2a2ea:	cmp	r5, #0
   2a2ec:	beq.n	2a222 <__btrfs_map_block@@Base+0x23a>
   2a2ee:	b.n	2a28a <__btrfs_map_block@@Base+0x2a2>
   2a2f0:	asrs	r3, r0, #31
   2a2f2:	mov	r2, r0
   2a2f4:	strd	r2, r3, [sp, #16]
   2a2f8:	and.w	r2, r1, #384	; 0x180
   2a2fc:	mov	r3, r9
   2a2fe:	orrs	r3, r2
   2a300:	beq.w	2a43c <__btrfs_map_block@@Base+0x454>
   2a304:	mov	r0, r4
   2a306:	bl	28428 <btrfs_add_root_ref@@Base+0x100>
   2a30a:	asrs	r3, r0, #31
   2a30c:	mov	r2, r0
   2a30e:	strd	r2, r3, [sp, #24]
   2a312:	mov	r6, r0
   2a314:	ldr	r3, [sp, #8]
   2a316:	cmp	r3, #0
   2a318:	beq.n	2a412 <__btrfs_map_block@@Base+0x42a>
   2a31a:	ldr	r7, [r4, #56]	; 0x38
   2a31c:	mul.w	r5, r0, r7
   2a320:	ldrd	r0, r1, [sp, #64]	; 0x40
   2a324:	mov.w	fp, r5, asr #31
   2a328:	mov	r2, r5
   2a32a:	mov	r3, fp
   2a32c:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2a330:	mov	r2, r7
   2a332:	mul.w	r3, r5, r1
   2a336:	mla	r3, r0, fp, r3
   2a33a:	umull	r0, r1, r5, r0
   2a33e:	add	r1, r3
   2a340:	asrs	r3, r7, #31
   2a342:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2a346:	asrs	r3, r6, #31
   2a348:	mov	r2, r6
   2a34a:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2a34e:	ldrd	r2, r3, [sp, #16]
   2a352:	str	r0, [sp, #32]
   2a354:	str	r1, [sp, #48]	; 0x30
   2a356:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2a35a:	mov	r5, r2
   2a35c:	ldrd	r3, r2, [sp, #28]
   2a360:	muls	r3, r2
   2a362:	ldr	r2, [sp, #48]	; 0x30
   2a364:	mla	r3, r6, r2, r3
   2a368:	ldr	r2, [sp, #32]
   2a36a:	umull	r6, r7, r2, r6
   2a36e:	add	r7, r3
   2a370:	mov	r0, r4
   2a372:	add.w	sl, r9, r5
   2a376:	bl	28428 <btrfs_add_root_ref@@Base+0x100>
   2a37a:	ldr	r1, [r4, #64]	; 0x40
   2a37c:	cmp	r0, r9
   2a37e:	mov	r0, sl
   2a380:	bgt.n	2a3da <__btrfs_map_block@@Base+0x3f2>
   2a382:	bl	3992c <btrfs_util_strerror@@Base+0x524>
   2a386:	ldr	r3, [sp, #8]
   2a388:	mvn.w	r2, #1
   2a38c:	add.w	r1, r3, r1, lsl #3
   2a390:	mov.w	r3, #4294967295	; 0xffffffff
   2a394:	strd	r2, r3, [r1]
   2a398:	movs	r3, #0
   2a39a:	ldr	r1, [r4, #40]	; 0x28
   2a39c:	and.w	r2, r1, #256	; 0x100
   2a3a0:	orrs	r3, r2
   2a3a2:	beq.n	2a3c0 <__btrfs_map_block@@Base+0x3d8>
   2a3a4:	ldr	r1, [r4, #64]	; 0x40
   2a3a6:	add.w	r0, sl, #1
   2a3aa:	bl	3992c <btrfs_util_strerror@@Base+0x524>
   2a3ae:	ldr	r3, [sp, #8]
   2a3b0:	mov.w	r2, #4294967295	; 0xffffffff
   2a3b4:	add.w	r1, r3, r1, lsl #3
   2a3b8:	mov.w	r3, #4294967295	; 0xffffffff
   2a3bc:	strd	r2, r3, [r1]
   2a3c0:	ldr	r2, [r4, #56]	; 0x38
   2a3c2:	ldr	r1, [sp, #160]	; 0xa0
   2a3c4:	asrs	r3, r2, #31
   2a3c6:	strd	r2, r3, [r1]
   2a3ca:	ldr	r3, [r4, #64]	; 0x40
   2a3cc:	str.w	r3, [r8, #4]
   2a3d0:	movs	r3, #0
   2a3d2:	mov	r5, r3
   2a3d4:	strd	r3, r3, [sp, #96]	; 0x60
   2a3d8:	b.n	2a222 <__btrfs_map_block@@Base+0x23a>
   2a3da:	bl	3992c <btrfs_util_strerror@@Base+0x524>
   2a3de:	ldr	r0, [r4, #56]	; 0x38
   2a3e0:	ldr	r3, [sp, #8]
   2a3e2:	add.w	r9, r9, #1
   2a3e6:	mov.w	fp, r0, asr #31
   2a3ea:	mul.w	r2, r0, r7
   2a3ee:	add.w	ip, r3, r1, lsl #3
   2a3f2:	umull	r0, r1, r0, r6
   2a3f6:	mla	r3, r6, fp, r2
   2a3fa:	add	r1, r3
   2a3fc:	ldrd	r3, r2, [r4, #24]
   2a400:	adds	r3, r3, r0
   2a402:	adc.w	r2, r1, r2
   2a406:	adds	r6, #1
   2a408:	adc.w	r7, r7, #0
   2a40c:	strd	r3, r2, [ip]
   2a410:	b.n	2a370 <__btrfs_map_block@@Base+0x388>
   2a412:	asrs	r3, r0, #31
   2a414:	mov	r1, sl
   2a416:	mov	r0, r7
   2a418:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2a41c:	cmp	r5, #1
   2a41e:	itte	gt
   2a420:	addgt	r6, r6, r5
   2a422:	subgt	r6, #2
   2a424:	movle	r6, r2
   2a426:	mov	sl, r0
   2a428:	str	r0, [sp, #32]
   2a42a:	adds.w	r0, sl, r6
   2a42e:	mov	fp, r1
   2a430:	str	r1, [sp, #48]	; 0x30
   2a432:	ldrd	r2, r3, [sp, #16]
   2a436:	adc.w	r1, fp, r6, asr #31
   2a43a:	b.n	2a296 <__btrfs_map_block@@Base+0x2ae>
   2a43c:	ldrd	r2, r3, [sp, #16]
   2a440:	mov	r0, r7
   2a442:	mov	r1, sl
   2a444:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2a448:	mov	r5, r2
   2a44a:	str	r0, [sp, #32]
   2a44c:	str	r1, [sp, #48]	; 0x30
   2a44e:	b.n	2a222 <__btrfs_map_block@@Base+0x23a>
   2a450:	ldrd	r3, r2, [r5, #64]	; 0x40
   2a454:	adds	r0, #1
   2a456:	ldr	r6, [sp, #96]	; 0x60
   2a458:	ldr.w	sl, [r4, #56]	; 0x38
   2a45c:	adds.w	lr, r6, r3
   2a460:	ldr	r6, [sp, #100]	; 0x64
   2a462:	adc.w	r2, r6, r2
   2a466:	mov	r6, sl
   2a468:	asrs	r7, r6, #31
   2a46a:	strd	r6, r7, [sp, #16]
   2a46e:	ldr	r6, [sp, #48]	; 0x30
   2a470:	ldr	r7, [sp, #32]
   2a472:	ldr	r3, [sp, #20]
   2a474:	mul.w	r6, sl, r6
   2a478:	mla	r6, r7, r3, r6
   2a47c:	umull	sl, fp, sl, r7
   2a480:	adds.w	r3, lr, sl
   2a484:	add	fp, r6
   2a486:	adc.w	r2, r2, fp
   2a48a:	strd	r3, r2, [r1, #-8]
   2a48e:	ldr	r3, [r5, #56]	; 0x38
   2a490:	str.w	r3, [r1, #-16]
   2a494:	b.n	2a252 <__btrfs_map_block@@Base+0x26a>
   2a496:	ldr	r3, [sp, #8]
   2a498:	add.w	lr, r4, #1
   2a49c:	add.w	sl, r3, r4, lsl #3
   2a4a0:	add.w	ip, sl, #8
   2a4a4:	ldrd	r2, r3, [sl]
   2a4a8:	strd	r2, r3, [sp, #16]
   2a4ac:	ldrd	r5, r6, [sp, #16]
   2a4b0:	ldrd	r2, r3, [sl, #8]
   2a4b4:	cmp	r3, r6
   2a4b6:	it	eq
   2a4b8:	cmpeq	r2, r5
   2a4ba:	strd	r2, r3, [sp, #24]
   2a4be:	bcs.n	2a4f6 <__btrfs_map_block@@Base+0x50e>
   2a4c0:	add.w	r4, r8, r4, lsl #4
   2a4c4:	add.w	r5, r8, lr, lsl #4
   2a4c8:	adds	r4, #8
   2a4ca:	adds	r5, #8
   2a4cc:	ldmia.w	r4, {r0, r1, r2, r3}
   2a4d0:	stmia.w	r9, {r0, r1, r2, r3}
   2a4d4:	ldmia.w	r5, {r0, r1, r2, r3}
   2a4d8:	stmia.w	r4, {r0, r1, r2, r3}
   2a4dc:	ldrd	r3, r4, [sp, #24]
   2a4e0:	strd	r3, r4, [sl]
   2a4e4:	ldmia.w	r9, {r0, r1, r2, r3}
   2a4e8:	stmia.w	r5, {r0, r1, r2, r3}
   2a4ec:	movs	r0, #1
   2a4ee:	ldrd	r3, r4, [sp, #16]
   2a4f2:	strd	r3, r4, [ip]
   2a4f6:	mov	r4, lr
   2a4f8:	cmp	r4, r7
   2a4fa:	blt.n	2a496 <__btrfs_map_block@@Base+0x4ae>
   2a4fc:	cbnz	r0, 2a508 <__btrfs_map_block@@Base+0x520>
   2a4fe:	ldr	r3, [sp, #176]	; 0xb0
   2a500:	mov	r2, r3
   2a502:	ldr	r3, [sp, #8]
   2a504:	str	r3, [r2, #0]
   2a506:	b.n	2a02c <__btrfs_map_block@@Base+0x44>
   2a508:	movs	r0, #0
   2a50a:	mov	lr, r0
   2a50c:	b.n	2a4f6 <__btrfs_map_block@@Base+0x50e>
   2a50e:	nop
   2a510:	str	r5, [r5, #0]
   2a512:	movs	r1, r0
   2a514:	str	r4, [r0, #112]	; 0x70
   2a516:	movs	r1, r0
   2a518:	str	r0, [r0, #12]
   2a51a:	movs	r1, r0
   2a51c:	str	r0, [r7, #96]	; 0x60
   2a51e:	movs	r1, r0
   2a520:	ldrsh	r7, [r2, r5]
   2a522:	movs	r1, r0
   2a524:	str	r3, [r1, #0]
   2a526:	movs	r1, r0

0002a528 <btrfs_map_block@@Base>:
   2a528:	push	{r4, lr}
   2a52a:	sub	sp, #24
   2a52c:	ldr	r4, [sp, #44]	; 0x2c
   2a52e:	str	r4, [sp, #16]
   2a530:	ldr	r4, [sp, #40]	; 0x28
   2a532:	str	r4, [sp, #12]
   2a534:	ldr	r4, [sp, #36]	; 0x24
   2a536:	str	r4, [sp, #8]
   2a538:	movs	r4, #0
   2a53a:	str	r4, [sp, #4]
   2a53c:	ldr	r4, [sp, #32]
   2a53e:	str	r4, [sp, #0]
   2a540:	bl	29fe8 <__btrfs_map_block@@Base>
   2a544:	add	sp, #24
   2a546:	pop	{r4, pc}

0002a548 <btrfs_find_device@@Base>:
   2a548:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   2a54c:	mov	r6, r0
   2a54e:	ldr	r5, [sp, #36]	; 0x24
   2a550:	mov	r7, r2
   2a552:	ldr.w	r4, [r0, #352]	; 0x160
   2a556:	mov	r8, r3
   2a558:	cbnz	r4, 2a562 <btrfs_find_device@@Base+0x1a>
   2a55a:	mov	r0, r4
   2a55c:	add	sp, #8
   2a55e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2a562:	cbz	r5, 2a578 <btrfs_find_device@@Base+0x30>
   2a564:	movs	r2, #16
   2a566:	mov	r1, r5
   2a568:	adds	r0, r4, r2
   2a56a:	blx	86a0 <memcmp@plt+0x4>
   2a56e:	cbz	r0, 2a578 <btrfs_find_device@@Base+0x30>
   2a570:	ldrb.w	r3, [r6, #364]	; 0x16c
   2a574:	lsls	r3, r3, #25
   2a576:	bpl.n	2a58a <btrfs_find_device@@Base+0x42>
   2a578:	ldr	r3, [sp, #32]
   2a57a:	mov	r2, r7
   2a57c:	mov	r0, r4
   2a57e:	str	r3, [sp, #0]
   2a580:	mov	r3, r8
   2a582:	bl	28484 <btrfs_add_root_ref@@Base+0x15c>
   2a586:	cmp	r0, #0
   2a588:	bne.n	2a55c <btrfs_find_device@@Base+0x14>
   2a58a:	ldr	r4, [r4, #92]	; 0x5c
   2a58c:	b.n	2a558 <btrfs_find_device@@Base+0x10>

0002a58e <btrfs_find_device_by_devid@@Base>:
   2a58e:	push	{r4, r5, r6, r7, lr}
   2a590:	add.w	r1, r0, #72	; 0x48
   2a594:	mov	r6, r2
   2a596:	ldr	r0, [r0, #72]	; 0x48
   2a598:	ldr	r2, [sp, #20]
   2a59a:	mov	r7, r3
   2a59c:	movs	r3, #0
   2a59e:	cmp	r0, r1
   2a5a0:	bne.n	2a5a6 <btrfs_find_device_by_devid@@Base+0x18>
   2a5a2:	movs	r0, #0
   2a5a4:	pop	{r4, r5, r6, r7, pc}
   2a5a6:	ldrd	r4, r5, [r0, #64]	; 0x40
   2a5aa:	cmp	r5, r7
   2a5ac:	it	eq
   2a5ae:	cmpeq	r4, r6
   2a5b0:	bne.n	2a5bc <btrfs_find_device_by_devid@@Base+0x2e>
   2a5b2:	cmp	r3, r2
   2a5b4:	add.w	r4, r3, #1
   2a5b8:	beq.n	2a5a4 <btrfs_find_device_by_devid@@Base+0x16>
   2a5ba:	mov	r3, r4
   2a5bc:	ldr	r0, [r0, #0]
   2a5be:	b.n	2a59e <btrfs_find_device_by_devid@@Base+0x10>

0002a5c0 <btrfs_chunk_readonly@@Base>:
   2a5c0:	push	{r4, lr}
   2a5c2:	ldrb.w	r1, [r0, #364]	; 0x16c
   2a5c6:	ands.w	r4, r1, #8
   2a5ca:	beq.n	2a5d0 <btrfs_chunk_readonly@@Base+0x10>
   2a5cc:	movs	r0, #0
   2a5ce:	pop	{r4, pc}
   2a5d0:	adds	r0, #228	; 0xe4
   2a5d2:	bl	166dc <search_cache_extent@@Base>
   2a5d6:	cbz	r0, 2a5ee <btrfs_chunk_readonly@@Base+0x2e>
   2a5d8:	ldr	r2, [r0, #64]	; 0x40
   2a5da:	adds	r0, #72	; 0x48
   2a5dc:	mov	r3, r4
   2a5de:	cmp	r2, r3
   2a5e0:	ble.n	2a5cc <btrfs_chunk_readonly@@Base+0xc>
   2a5e2:	lsls	r1, r3, #4
   2a5e4:	ldr	r1, [r0, r1]
   2a5e6:	ldr	r1, [r1, #28]
   2a5e8:	cbz	r1, 2a5f4 <btrfs_chunk_readonly@@Base+0x34>
   2a5ea:	adds	r3, #1
   2a5ec:	b.n	2a5de <btrfs_chunk_readonly@@Base+0x1e>
   2a5ee:	mvn.w	r0, #1
   2a5f2:	b.n	2a5ce <btrfs_chunk_readonly@@Base+0xe>
   2a5f4:	movs	r0, #1
   2a5f6:	b.n	2a5ce <btrfs_chunk_readonly@@Base+0xe>

0002a5f8 <btrfs_check_chunk_valid@@Base>:
   2a5f8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a5fc:	sub	sp, #36	; 0x24
   2a5fe:	subs	r6, r3, #0
   2a600:	add.w	r8, r1, #96	; 0x60
   2a604:	ldr	r4, [sp, #72]	; 0x48
   2a606:	str	r4, [sp, #20]
   2a608:	ldr	r4, [sp, #76]	; 0x4c
   2a60a:	str	r4, [sp, #24]
   2a60c:	ldr.w	r4, [r0, #388]	; 0x184
   2a610:	str	r4, [sp, #16]
   2a612:	blt.n	2a63c <btrfs_check_chunk_valid@@Base+0x44>
   2a614:	movs	r3, #25
   2a616:	mla	r3, r3, r6, r8
   2a61a:	ldr.w	r1, [r3, #122]	; 0x7a
   2a61e:	cmp	r1, #79	; 0x4f
   2a620:	bhi.n	2a63c <btrfs_check_chunk_valid@@Base+0x44>
   2a622:	ldr.w	r3, [r0, #384]	; 0x180
   2a626:	movs	r2, #80	; 0x50
   2a628:	ldr	r0, [pc, #528]	; (2a83c <btrfs_check_chunk_valid@@Base+0x244>)
   2a62a:	subs	r3, #101	; 0x65
   2a62c:	add	r0, pc
   2a62e:	bl	17b7c <__btrfs_error@@Base>
   2a632:	mvn.w	r0, #116	; 0x74
   2a636:	add	sp, #36	; 0x24
   2a638:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a63c:	add.w	r7, r8, r2
   2a640:	ldr.w	sl, [r8, r2]
   2a644:	ldr	r3, [r7, #16]
   2a646:	ldrh	r5, [r7, #44]	; 0x2c
   2a648:	ldr.w	fp, [r7, #4]
   2a64c:	str	r3, [sp, #8]
   2a64e:	ldr	r3, [r7, #20]
   2a650:	ldrh.w	r9, [r7, #46]	; 0x2e
   2a654:	ldr	r4, [r7, #24]
   2a656:	str	r3, [sp, #12]
   2a658:	ldr	r3, [r7, #28]
   2a65a:	cbnz	r5, 2a668 <btrfs_check_chunk_valid@@Base+0x70>
   2a65c:	ldr	r0, [pc, #480]	; (2a840 <btrfs_check_chunk_valid@@Base+0x248>)
   2a65e:	mov	r1, r5
   2a660:	add	r0, pc
   2a662:	bl	17b7c <__btrfs_error@@Base>
   2a666:	b.n	2a632 <btrfs_check_chunk_valid@@Base+0x3a>
   2a668:	cmp	r6, #0
   2a66a:	blt.n	2a690 <btrfs_check_chunk_valid@@Base+0x98>
   2a66c:	mov	r0, r5
   2a66e:	str	r3, [sp, #28]
   2a670:	bl	28590 <btrfs_add_root_ref@@Base+0x268>
   2a674:	movs	r2, #25
   2a676:	mla	r2, r2, r6, r8
   2a67a:	ldr	r3, [sp, #28]
   2a67c:	ldr.w	r1, [r2, #122]	; 0x7a
   2a680:	cmp	r0, r1
   2a682:	beq.n	2a690 <btrfs_check_chunk_valid@@Base+0x98>
   2a684:	mov	r2, r0
   2a686:	ldr	r0, [pc, #444]	; (2a844 <btrfs_check_chunk_valid@@Base+0x24c>)
   2a688:	add	r0, pc
   2a68a:	bl	17b7c <__btrfs_error@@Base>
   2a68e:	b.n	2a632 <btrfs_check_chunk_valid@@Base+0x3a>
   2a690:	ldr.w	ip, [sp, #16]
   2a694:	mov.w	lr, #0
   2a698:	ldr	r2, [sp, #20]
   2a69a:	adds.w	ip, ip, #4294967295	; 0xffffffff
   2a69e:	and.w	r0, ip, r2
   2a6a2:	ldr	r2, [sp, #24]
   2a6a4:	adc.w	lr, lr, #4294967295	; 0xffffffff
   2a6a8:	and.w	r1, lr, r2
   2a6ac:	orrs.w	r2, r0, r1
   2a6b0:	beq.n	2a6c4 <btrfs_check_chunk_valid@@Base+0xcc>
   2a6b2:	ldr	r0, [pc, #404]	; (2a848 <btrfs_check_chunk_valid@@Base+0x250>)
   2a6b4:	ldrd	r2, r3, [sp, #20]
   2a6b8:	add	r0, pc
   2a6ba:	bl	17b7c <__btrfs_error@@Base>
   2a6be:	mvn.w	r0, #4
   2a6c2:	b.n	2a636 <btrfs_check_chunk_valid@@Base+0x3e>
   2a6c4:	ldr	r2, [r7, #40]	; 0x28
   2a6c6:	ldr	r1, [sp, #16]
   2a6c8:	cmp	r1, r2
   2a6ca:	beq.n	2a6d4 <btrfs_check_chunk_valid@@Base+0xdc>
   2a6cc:	ldr	r0, [pc, #380]	; (2a84c <btrfs_check_chunk_valid@@Base+0x254>)
   2a6ce:	movs	r3, #0
   2a6d0:	add	r0, pc
   2a6d2:	b.n	2a6ba <btrfs_check_chunk_valid@@Base+0xc2>
   2a6d4:	orrs.w	r2, sl, fp
   2a6d8:	beq.n	2a6e8 <btrfs_check_chunk_valid@@Base+0xf0>
   2a6da:	and.w	r0, ip, sl
   2a6de:	and.w	r1, lr, fp
   2a6e2:	orrs.w	r2, r0, r1
   2a6e6:	beq.n	2a6f2 <btrfs_check_chunk_valid@@Base+0xfa>
   2a6e8:	ldr	r0, [pc, #356]	; (2a850 <btrfs_check_chunk_valid@@Base+0x258>)
   2a6ea:	mov	r2, sl
   2a6ec:	mov	r3, fp
   2a6ee:	add	r0, pc
   2a6f0:	b.n	2a6ba <btrfs_check_chunk_valid@@Base+0xc2>
   2a6f2:	ldrd	r1, r2, [sp, #8]
   2a6f6:	cmp	r2, #0
   2a6f8:	it	eq
   2a6fa:	cmpeq.w	r1, #65536	; 0x10000
   2a6fe:	beq.n	2a70a <btrfs_check_chunk_valid@@Base+0x112>
   2a700:	ldr	r0, [pc, #336]	; (2a854 <btrfs_check_chunk_valid@@Base+0x25c>)
   2a702:	mov	r3, r2
   2a704:	mov	r2, r1
   2a706:	add	r0, pc
   2a708:	b.n	2a6ba <btrfs_check_chunk_valid@@Base+0xc2>
   2a70a:	adds	r1, r6, #1
   2a70c:	bne.n	2a722 <btrfs_check_chunk_valid@@Base+0x12a>
   2a70e:	and.w	r0, r4, #2
   2a712:	movs	r1, #0
   2a714:	orrs.w	r2, r0, r1
   2a718:	bne.n	2a722 <btrfs_check_chunk_valid@@Base+0x12a>
   2a71a:	ldr	r0, [pc, #316]	; (2a858 <btrfs_check_chunk_valid@@Base+0x260>)
   2a71c:	mov	r2, r4
   2a71e:	add	r0, pc
   2a720:	b.n	2a6ba <btrfs_check_chunk_valid@@Base+0xc2>
   2a722:	bic.w	r0, r4, #2040	; 0x7f8
   2a726:	mov	r1, r3
   2a728:	bic.w	r0, r0, #7
   2a72c:	orrs.w	r2, r0, r1
   2a730:	beq.n	2a73a <btrfs_check_chunk_valid@@Base+0x142>
   2a732:	mov	r2, r0
   2a734:	ldr	r0, [pc, #292]	; (2a85c <btrfs_check_chunk_valid@@Base+0x264>)
   2a736:	add	r0, pc
   2a738:	b.n	2a6ba <btrfs_check_chunk_valid@@Base+0xc2>
   2a73a:	and.w	r0, r4, #7
   2a73e:	movs	r1, #0
   2a740:	orrs.w	r2, r0, r1
   2a744:	bne.n	2a74e <btrfs_check_chunk_valid@@Base+0x156>
   2a746:	ldr	r0, [pc, #280]	; (2a860 <btrfs_check_chunk_valid@@Base+0x268>)
   2a748:	mov	r2, r4
   2a74a:	add	r0, pc
   2a74c:	b.n	2a6ba <btrfs_check_chunk_valid@@Base+0xc2>
   2a74e:	ands.w	r2, r4, #2040	; 0x7f8
   2a752:	beq.n	2a75a <btrfs_check_chunk_valid@@Base+0x162>
   2a754:	subs	r1, r2, #1
   2a756:	tst	r1, r2
   2a758:	beq.n	2a76e <btrfs_check_chunk_valid@@Base+0x176>
   2a75a:	and.w	r0, r4, #2040	; 0x7f8
   2a75e:	movs	r2, #0
   2a760:	mov	r1, r2
   2a762:	orrs	r1, r0
   2a764:	beq.n	2a770 <btrfs_check_chunk_valid@@Base+0x178>
   2a766:	ldr	r0, [pc, #252]	; (2a864 <btrfs_check_chunk_valid@@Base+0x26c>)
   2a768:	mov	r2, r4
   2a76a:	add	r0, pc
   2a76c:	b.n	2a6ba <btrfs_check_chunk_valid@@Base+0xc2>
   2a76e:	movs	r2, #1
   2a770:	and.w	sl, r4, #2040	; 0x7f8
   2a774:	mov.w	fp, #0
   2a778:	orrs.w	r1, sl, fp
   2a77c:	beq.n	2a788 <btrfs_check_chunk_valid@@Base+0x190>
   2a77e:	cbnz	r2, 2a788 <btrfs_check_chunk_valid@@Base+0x190>
   2a780:	ldr	r0, [pc, #228]	; (2a868 <btrfs_check_chunk_valid@@Base+0x270>)
   2a782:	mov	r2, r4
   2a784:	add	r0, pc
   2a786:	b.n	2a6ba <btrfs_check_chunk_valid@@Base+0xc2>
   2a788:	mov	r0, r5
   2a78a:	bl	28590 <btrfs_add_root_ref@@Base+0x268>
   2a78e:	adds	r2, r6, #1
   2a790:	bne.n	2a7a4 <btrfs_check_chunk_valid@@Base+0x1ac>
   2a792:	cmp.w	r0, #2048	; 0x800
   2a796:	bls.n	2a7b6 <btrfs_check_chunk_valid@@Base+0x1be>
   2a798:	ldr	r0, [pc, #208]	; (2a86c <btrfs_check_chunk_valid@@Base+0x274>)
   2a79a:	mov	r1, r5
   2a79c:	add	r0, pc
   2a79e:	bl	17b7c <__btrfs_error@@Base>
   2a7a2:	b.n	2a6be <btrfs_check_chunk_valid@@Base+0xc6>
   2a7a4:	cmp	r6, #0
   2a7a6:	blt.n	2a7b6 <btrfs_check_chunk_valid@@Base+0x1be>
   2a7a8:	movs	r3, #25
   2a7aa:	mla	r6, r3, r6, r8
   2a7ae:	ldr.w	r3, [r6, #122]	; 0x7a
   2a7b2:	cmp	r0, r3
   2a7b4:	b.n	2a796 <btrfs_check_chunk_valid@@Base+0x19e>
   2a7b6:	and.w	r2, r4, #64	; 0x40
   2a7ba:	movs	r3, #0
   2a7bc:	orrs	r3, r2
   2a7be:	beq.n	2a7ca <btrfs_check_chunk_valid@@Base+0x1d2>
   2a7c0:	cmp.w	r9, #2
   2a7c4:	bne.n	2a826 <btrfs_check_chunk_valid@@Base+0x22e>
   2a7c6:	lsls	r3, r5, #31
   2a7c8:	bmi.n	2a826 <btrfs_check_chunk_valid@@Base+0x22e>
   2a7ca:	and.w	r0, r4, #512	; 0x200
   2a7ce:	movs	r3, #0
   2a7d0:	mov	r1, r3
   2a7d2:	orrs.w	r2, r0, r1
   2a7d6:	beq.n	2a7dc <btrfs_check_chunk_valid@@Base+0x1e4>
   2a7d8:	cmp	r5, #2
   2a7da:	bls.n	2a826 <btrfs_check_chunk_valid@@Base+0x22e>
   2a7dc:	and.w	r0, r4, #1024	; 0x400
   2a7e0:	mov	r1, r3
   2a7e2:	orrs.w	r3, r0, r1
   2a7e6:	beq.n	2a7ec <btrfs_check_chunk_valid@@Base+0x1f4>
   2a7e8:	cmp	r5, #3
   2a7ea:	bls.n	2a826 <btrfs_check_chunk_valid@@Base+0x22e>
   2a7ec:	and.w	r0, r4, #128	; 0x80
   2a7f0:	movs	r3, #0
   2a7f2:	mov	r1, r3
   2a7f4:	orrs.w	r2, r0, r1
   2a7f8:	beq.n	2a7fe <btrfs_check_chunk_valid@@Base+0x206>
   2a7fa:	cmp	r5, #1
   2a7fc:	bls.n	2a826 <btrfs_check_chunk_valid@@Base+0x22e>
   2a7fe:	and.w	r0, r4, #256	; 0x100
   2a802:	mov	r1, r3
   2a804:	orrs.w	r3, r0, r1
   2a808:	beq.n	2a80e <btrfs_check_chunk_valid@@Base+0x216>
   2a80a:	cmp	r5, #2
   2a80c:	bls.n	2a826 <btrfs_check_chunk_valid@@Base+0x22e>
   2a80e:	and.w	r2, r4, #32
   2a812:	movs	r3, #0
   2a814:	orrs	r3, r2
   2a816:	beq.n	2a81c <btrfs_check_chunk_valid@@Base+0x224>
   2a818:	cmp	r5, #2
   2a81a:	bhi.n	2a826 <btrfs_check_chunk_valid@@Base+0x22e>
   2a81c:	orrs.w	r3, sl, fp
   2a820:	bne.n	2a838 <btrfs_check_chunk_valid@@Base+0x240>
   2a822:	cmp	r5, #1
   2a824:	beq.n	2a838 <btrfs_check_chunk_valid@@Base+0x240>
   2a826:	ldr	r0, [pc, #72]	; (2a870 <btrfs_check_chunk_valid@@Base+0x278>)
   2a828:	mov	r2, r9
   2a82a:	mov	r1, r5
   2a82c:	strd	sl, fp, [sp]
   2a830:	add	r0, pc
   2a832:	bl	17b7c <__btrfs_error@@Base>
   2a836:	b.n	2a6be <btrfs_check_chunk_valid@@Base+0xc6>
   2a838:	movs	r0, #0
   2a83a:	b.n	2a636 <btrfs_check_chunk_valid@@Base+0x3e>
   2a83c:	ldrb	r6, [r6, r0]
   2a83e:	movs	r1, r0
   2a840:	ldrb	r5, [r6, r0]
   2a842:	movs	r1, r0
   2a844:	ldrb	r2, [r7, r0]
   2a846:	movs	r1, r0
   2a848:	ldrb	r6, [r6, r0]
   2a84a:	movs	r1, r0
   2a84c:	ldrb	r1, [r7, r0]
   2a84e:	movs	r1, r0
   2a850:	ldrb	r1, [r7, r0]
   2a852:	movs	r1, r0
   2a854:	ldrb	r3, [r7, r0]
   2a856:	movs	r1, r0
   2a858:	ldrb	r5, [r0, r1]
   2a85a:	movs	r1, r0
   2a85c:	ldrb	r5, [r0, r1]
   2a85e:	movs	r1, r0
   2a860:	ldrb	r7, [r1, r1]
   2a862:	movs	r1, r0
   2a864:	ldrb	r5, [r1, r1]
   2a866:	movs	r1, r0
   2a868:	ldrb	r1, [r3, r1]
   2a86a:	movs	r1, r0
   2a86c:	ldrb	r2, [r5, r1]
   2a86e:	movs	r1, r0
   2a870:	ldrh	r6, [r5, r7]
   2a872:	movs	r1, r0
   2a874:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a878:	mov	r9, r2
   2a87a:	vpush	{d8}
   2a87e:	mov	r5, r3
   2a880:	ldr	r2, [pc, #444]	; (2aa40 <btrfs_check_chunk_valid@@Base+0x448>)
   2a882:	ldr	r3, [pc, #448]	; (2aa44 <btrfs_check_chunk_valid@@Base+0x44c>)
   2a884:	add	r2, pc
   2a886:	sub	sp, #68	; 0x44
   2a888:	str	r0, [sp, #20]
   2a88a:	ldr	r3, [r2, r3]
   2a88c:	mov	r2, r5
   2a88e:	ldr	r4, [sp, #112]	; 0x70
   2a890:	ldr	r3, [r3, #0]
   2a892:	str	r3, [sp, #60]	; 0x3c
   2a894:	mov.w	r3, #0
   2a898:	add.w	r3, r9, #96	; 0x60
   2a89c:	adds	r7, r3, r5
   2a89e:	ldr	r3, [r3, r5]
   2a8a0:	ldr.w	sl, [r1, #9]
   2a8a4:	ldr.w	fp, [r1, #13]
   2a8a8:	mov	r1, r9
   2a8aa:	str	r3, [sp, #32]
   2a8ac:	ldr	r3, [r7, #4]
   2a8ae:	ldrh.w	r8, [r7, #44]	; 0x2c
   2a8b2:	strd	sl, fp, [sp]
   2a8b6:	str	r3, [sp, #36]	; 0x24
   2a8b8:	mov	r3, r4
   2a8ba:	bl	2a5f8 <btrfs_check_chunk_valid@@Base>
   2a8be:	mov	r6, r0
   2a8c0:	cbz	r0, 2a8f6 <btrfs_check_chunk_valid@@Base+0x2fe>
   2a8c2:	adds	r4, #1
   2a8c4:	bne.n	2a8ec <btrfs_check_chunk_valid@@Base+0x2f4>
   2a8c6:	ldr	r1, [pc, #384]	; (2aa48 <btrfs_check_chunk_valid@@Base+0x450>)
   2a8c8:	ldr	r2, [pc, #384]	; (2aa4c <btrfs_check_chunk_valid@@Base+0x454>)
   2a8ca:	add	r1, pc
   2a8cc:	add	r2, pc
   2a8ce:	ldr	r0, [pc, #384]	; (2aa50 <btrfs_check_chunk_valid@@Base+0x458>)
   2a8d0:	add	r0, pc
   2a8d2:	bl	17b7c <__btrfs_error@@Base>
   2a8d6:	ldr	r2, [pc, #380]	; (2aa54 <btrfs_check_chunk_valid@@Base+0x45c>)
   2a8d8:	ldr	r3, [pc, #360]	; (2aa44 <btrfs_check_chunk_valid@@Base+0x44c>)
   2a8da:	add	r2, pc
   2a8dc:	ldr	r3, [r2, r3]
   2a8de:	ldr	r2, [r3, #0]
   2a8e0:	ldr	r3, [sp, #60]	; 0x3c
   2a8e2:	eors	r2, r3
   2a8e4:	beq.w	2aa32 <btrfs_check_chunk_valid@@Base+0x43a>
   2a8e8:	blx	8708 <__stack_chk_fail@plt>
   2a8ec:	ldr	r1, [pc, #360]	; (2aa58 <btrfs_check_chunk_valid@@Base+0x460>)
   2a8ee:	ldr	r2, [pc, #364]	; (2aa5c <btrfs_check_chunk_valid@@Base+0x464>)
   2a8f0:	add	r1, pc
   2a8f2:	add	r2, pc
   2a8f4:	b.n	2a8ce <btrfs_check_chunk_valid@@Base+0x2d6>
   2a8f6:	ldr	r3, [sp, #20]
   2a8f8:	mov	r2, sl
   2a8fa:	adds	r3, #228	; 0xe4
   2a8fc:	vmov	s16, r3
   2a900:	mov	r3, fp
   2a902:	vmov	r0, s16
   2a906:	bl	166dc <search_cache_extent@@Base>
   2a90a:	cbz	r0, 2a930 <btrfs_check_chunk_valid@@Base+0x338>
   2a90c:	ldrd	r2, r3, [r0, #24]
   2a910:	cmp	fp, r3
   2a912:	it	eq
   2a914:	cmpeq	sl, r2
   2a916:	bcc.n	2a930 <btrfs_check_chunk_valid@@Base+0x338>
   2a918:	ldrd	r1, r0, [r0, #32]
   2a91c:	adds	r1, r2, r1
   2a91e:	str	r1, [sp, #24]
   2a920:	adcs	r3, r0
   2a922:	str	r3, [sp, #28]
   2a924:	ldrd	r3, r4, [sp, #24]
   2a928:	cmp	fp, r4
   2a92a:	it	eq
   2a92c:	cmpeq	sl, r3
   2a92e:	bcc.n	2a8d6 <btrfs_check_chunk_valid@@Base+0x2de>
   2a930:	mov.w	r3, r8, lsl #4
   2a934:	str	r3, [sp, #24]
   2a936:	add.w	r0, r3, #72	; 0x48
   2a93a:	blx	8870 <malloc@plt+0x4>
   2a93e:	mov	r4, r0
   2a940:	cmp	r0, #0
   2a942:	beq.n	2aa2c <btrfs_check_chunk_valid@@Base+0x434>
   2a944:	ldr	r2, [r7, #36]	; 0x24
   2a946:	adds	r5, #48	; 0x30
   2a948:	ldr	r3, [sp, #32]
   2a94a:	mov	r6, r0
   2a94c:	ldr	r1, [r7, #24]
   2a94e:	str	r2, [r0, #52]	; 0x34
   2a950:	ldr	r2, [r7, #32]
   2a952:	str	r3, [r0, #32]
   2a954:	ldr	r3, [sp, #36]	; 0x24
   2a956:	str	r2, [r0, #48]	; 0x30
   2a958:	ldr	r2, [r7, #40]	; 0x28
   2a95a:	strd	sl, fp, [r0, #24]
   2a95e:	add.w	sl, sp, #44	; 0x2c
   2a962:	ldr.w	fp, [pc, #252]	; 2aa60 <btrfs_check_chunk_valid@@Base+0x468>
   2a966:	str	r2, [r0, #60]	; 0x3c
   2a968:	ldr	r2, [r7, #16]
   2a96a:	add	fp, pc
   2a96c:	str	r3, [r0, #36]	; 0x24
   2a96e:	ldr	r3, [sp, #24]
   2a970:	str	r2, [r0, #56]	; 0x38
   2a972:	ldr	r2, [r7, #28]
   2a974:	add	r3, r0
   2a976:	str.w	r8, [r0, #64]	; 0x40
   2a97a:	str	r3, [sp, #24]
   2a97c:	add.w	r3, r9, #96	; 0x60
   2a980:	strd	r1, r2, [r0, #40]	; 0x28
   2a984:	ldrh	r2, [r7, #46]	; 0x2e
   2a986:	str	r3, [sp, #32]
   2a988:	str	r2, [r0, #68]	; 0x44
   2a98a:	ldr	r3, [sp, #24]
   2a98c:	cmp	r3, r6
   2a98e:	bne.n	2a9be <btrfs_check_chunk_valid@@Base+0x3c6>
   2a990:	vmov	r0, s16
   2a994:	mov	r1, r4
   2a996:	bl	1659a <insert_cache_extent@@Base>
   2a99a:	subs	r6, r0, #0
   2a99c:	bge.n	2a8d6 <btrfs_check_chunk_valid@@Base+0x2de>
   2a99e:	blx	897c <__errno_location@plt>
   2a9a2:	negs	r3, r6
   2a9a4:	str	r3, [r0, #0]
   2a9a6:	str	r6, [sp, #8]
   2a9a8:	ldrd	r2, r3, [r4, #32]
   2a9ac:	ldr	r0, [pc, #180]	; (2aa64 <btrfs_check_chunk_valid@@Base+0x46c>)
   2a9ae:	strd	r2, r3, [sp]
   2a9b2:	add	r0, pc
   2a9b4:	ldrd	r2, r3, [r4, #24]
   2a9b8:	bl	17b7c <__btrfs_error@@Base>
   2a9bc:	b.n	2a8d6 <btrfs_check_chunk_valid@@Base+0x2de>
   2a9be:	ldr	r3, [sp, #32]
   2a9c0:	mov	r0, r9
   2a9c2:	add	r3, r5
   2a9c4:	ldr	r1, [r3, #8]
   2a9c6:	ldr	r2, [r3, #12]
   2a9c8:	ldr.w	r8, [r3]
   2a9cc:	ldr	r7, [r3, #4]
   2a9ce:	movs	r3, #16
   2a9d0:	strd	r1, r2, [r6, #80]	; 0x50
   2a9d4:	adds	r2, r5, r3
   2a9d6:	mov	r1, sl
   2a9d8:	bl	17a1a <read_extent_buffer@@Base>
   2a9dc:	movs	r3, #0
   2a9de:	ldr	r0, [sp, #20]
   2a9e0:	mov	r2, r8
   2a9e2:	strd	sl, r3, [sp]
   2a9e6:	mov	r3, r7
   2a9e8:	bl	2a548 <btrfs_find_device@@Base>
   2a9ec:	str	r0, [r6, #72]	; 0x48
   2a9ee:	cbnz	r0, 2aa26 <btrfs_check_chunk_valid@@Base+0x42e>
   2a9f0:	movs	r1, #128	; 0x80
   2a9f2:	movs	r0, #1
   2a9f4:	blx	8588 <calloc@plt+0x4>
   2a9f8:	mov.w	r3, #4294967295	; 0xffffffff
   2a9fc:	mov	r2, r8
   2a9fe:	mov	r1, fp
   2aa00:	str	r3, [r0, #24]
   2aa02:	mov	r3, r7
   2aa04:	strd	r8, r7, [r0, #64]	; 0x40
   2aa08:	str	r0, [r6, #72]	; 0x48
   2aa0a:	movs	r0, #1
   2aa0c:	blx	8a30 <__printf_chk@plt+0x4>
   2aa10:	ldr	r2, [sp, #20]
   2aa12:	ldr	r3, [r6, #72]	; 0x48
   2aa14:	ldr.w	r1, [r2, #352]	; 0x160
   2aa18:	mov	r2, r1
   2aa1a:	ldr.w	r0, [r2, #72]!
   2aa1e:	str	r3, [r0, #4]
   2aa20:	strd	r0, r2, [r3]
   2aa24:	str	r3, [r1, #72]	; 0x48
   2aa26:	adds	r6, #16
   2aa28:	adds	r5, #32
   2aa2a:	b.n	2a98a <btrfs_check_chunk_valid@@Base+0x392>
   2aa2c:	mvn.w	r6, #11
   2aa30:	b.n	2a8d6 <btrfs_check_chunk_valid@@Base+0x2de>
   2aa32:	mov	r0, r6
   2aa34:	add	sp, #68	; 0x44
   2aa36:	vpop	{d8}
   2aa3a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2aa3e:	nop
   2aa40:	add	r4, pc, #1008	; (adr r4, 2ae34 <btrfs_read_chunk_tree@@Base+0x224>)
   2aa42:	movs	r3, r0
   2aa44:	lsls	r0, r5, #8
   2aa46:	movs	r0, r0
   2aa48:	ldrh	r3, [r1, r6]
   2aa4a:	movs	r1, r0
   2aa4c:	ldrh	r4, [r2, r6]
   2aa4e:	movs	r1, r0
   2aa50:	ldrh	r7, [r7, r6]
   2aa52:	movs	r1, r0
   2aa54:	add	r4, pc, #664	; (adr r4, 2acf0 <btrfs_read_chunk_tree@@Base+0xe0>)
   2aa56:	movs	r3, r0
   2aa58:	str	r2, [sp, #804]	; 0x324
   2aa5a:	movs	r2, r0
   2aa5c:	ldc2	0, cr0, [fp, #-0]
   2aa60:	ldrh	r1, [r3, r5]
   2aa62:	movs	r1, r0
   2aa64:	ldrh	r2, [r6, r4]
   2aa66:	movs	r1, r0

0002aa68 <btrfs_read_sys_array@@Base>:
   2aa68:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2aa6c:	mov	r8, r0
   2aa6e:	vpush	{d8}
   2aa72:	ldr	r2, [pc, #376]	; (2abec <btrfs_read_sys_array@@Base+0x184>)
   2aa74:	ldr	r3, [pc, #376]	; (2abf0 <btrfs_read_sys_array@@Base+0x188>)
   2aa76:	add	r2, pc
   2aa78:	ldr.w	r9, [pc, #376]	; 2abf4 <btrfs_read_sys_array@@Base+0x18c>
   2aa7c:	sub	sp, #44	; 0x2c
   2aa7e:	ldr.w	r5, [r0, #308]	; 0x134
   2aa82:	ldr	r3, [r2, r3]
   2aa84:	add	r9, pc
   2aa86:	ldr.w	r2, [r0, #384]	; 0x180
   2aa8a:	ldr	r3, [r3, #0]
   2aa8c:	str	r3, [sp, #36]	; 0x24
   2aa8e:	mov.w	r3, #0
   2aa92:	cmp.w	r2, #4096	; 0x1000
   2aa96:	bcs.n	2aabc <btrfs_read_sys_array@@Base+0x54>
   2aa98:	ldr	r1, [pc, #348]	; (2abf8 <btrfs_read_sys_array@@Base+0x190>)
   2aa9a:	movs	r0, #1
   2aa9c:	add	r1, pc
   2aa9e:	blx	8a30 <__printf_chk@plt+0x4>
   2aaa2:	mvn.w	r3, #21
   2aaa6:	ldr	r1, [pc, #340]	; (2abfc <btrfs_read_sys_array@@Base+0x194>)
   2aaa8:	ldr	r2, [pc, #324]	; (2abf0 <btrfs_read_sys_array@@Base+0x188>)
   2aaaa:	add	r1, pc
   2aaac:	ldr	r2, [r1, r2]
   2aaae:	ldr	r1, [r2, #0]
   2aab0:	ldr	r2, [sp, #36]	; 0x24
   2aab2:	eors	r1, r2
   2aab4:	beq.w	2abe0 <btrfs_read_sys_array@@Base+0x178>
   2aab8:	blx	8708 <__stack_chk_fail@plt>
   2aabc:	mov.w	r3, #4096	; 0x1000
   2aac0:	mov.w	r2, #65536	; 0x10000
   2aac4:	str	r3, [sp, #0]
   2aac6:	movs	r3, #0
   2aac8:	bl	1752c <alloc_dummy_extent_buffer@@Base>
   2aacc:	mov	r6, r0
   2aace:	cmp	r0, #0
   2aad0:	beq.w	2abda <btrfs_read_sys_array@@Base+0x172>
   2aad4:	bl	1dd78 <btrfs_set_buffer_uptodate@@Base>
   2aad8:	movw	r3, #3531	; 0xdcb
   2aadc:	mov	r1, r5
   2aade:	movs	r2, #0
   2aae0:	mov	r0, r6
   2aae2:	movs	r7, #0
   2aae4:	bl	17a30 <write_extent_buffer@@Base>
   2aae8:	add	r3, sp, #16
   2aaea:	ldr.w	sl, [r5, #160]	; 0xa0
   2aaee:	addw	r5, r5, #811	; 0x32b
   2aaf2:	vmov	s16, r3
   2aaf6:	movw	fp, #811	; 0x32b
   2aafa:	cmp	r7, sl
   2aafc:	bcc.n	2ab02 <btrfs_read_sys_array@@Base+0x9a>
   2aafe:	movs	r3, #0
   2ab00:	b.n	2ab90 <btrfs_read_sys_array@@Base+0x128>
   2ab02:	add.w	r2, r7, #17
   2ab06:	cmp	r2, sl
   2ab08:	bhi.n	2abb4 <btrfs_read_sys_array@@Base+0x14c>
   2ab0a:	ldr.w	r1, [r5, #9]
   2ab0e:	add.w	fp, fp, #17
   2ab12:	ldr.w	r3, [r5, #13]
   2ab16:	str.w	r1, [sp, #25]
   2ab1a:	str.w	r3, [sp, #29]
   2ab1e:	ldrb	r3, [r5, #8]
   2ab20:	cmp	r3, #228	; 0xe4
   2ab22:	strb.w	r3, [sp, #24]
   2ab26:	ldr	r0, [r5, #0]
   2ab28:	ldr	r1, [r5, #4]
   2ab2a:	strd	r0, r1, [sp, #16]
   2ab2e:	bne.n	2ab9c <btrfs_read_sys_array@@Base+0x134>
   2ab30:	movs	r0, #1
   2ab32:	str	r2, [sp, #12]
   2ab34:	bl	28590 <btrfs_add_root_ref@@Base+0x268>
   2ab38:	ldr	r2, [sp, #12]
   2ab3a:	adds	r3, r2, r0
   2ab3c:	mov	r4, r0
   2ab3e:	cmp	r3, sl
   2ab40:	bhi.n	2abb8 <btrfs_read_sys_array@@Base+0x150>
   2ab42:	add.w	r3, r6, fp
   2ab46:	ldrh.w	r3, [r3, #140]	; 0x8c
   2ab4a:	cbnz	r3, 2ab66 <btrfs_read_sys_array@@Base+0xfe>
   2ab4c:	ldr	r1, [pc, #176]	; (2ac00 <btrfs_read_sys_array@@Base+0x198>)
   2ab4e:	ldr.w	r0, [r9, r1]
   2ab52:	str	r2, [sp, #0]
   2ab54:	ldr	r2, [pc, #172]	; (2ac04 <btrfs_read_sys_array@@Base+0x19c>)
   2ab56:	add	r2, pc
   2ab58:	ldr	r0, [r0, #0]
   2ab5a:	movs	r1, #1
   2ab5c:	blx	8a64 <__fprintf_chk@plt+0x4>
   2ab60:	mvn.w	r3, #4
   2ab64:	b.n	2ab90 <btrfs_read_sys_array@@Base+0x128>
   2ab66:	mov	r0, r3
   2ab68:	str	r2, [sp, #12]
   2ab6a:	bl	28590 <btrfs_add_root_ref@@Base+0x268>
   2ab6e:	ldr	r2, [sp, #12]
   2ab70:	adds	r7, r2, r0
   2ab72:	mov	r4, r0
   2ab74:	cmp	r7, sl
   2ab76:	bhi.n	2abb8 <btrfs_read_sys_array@@Base+0x150>
   2ab78:	mov.w	r3, #4294967295	; 0xffffffff
   2ab7c:	vmov	r1, s16
   2ab80:	str	r3, [sp, #0]
   2ab82:	mov	r2, r6
   2ab84:	mov	r3, fp
   2ab86:	mov	r0, r8
   2ab88:	bl	2a874 <btrfs_check_chunk_valid@@Base+0x27c>
   2ab8c:	mov	r3, r0
   2ab8e:	cbz	r0, 2abaa <btrfs_read_sys_array@@Base+0x142>
   2ab90:	mov	r0, r6
   2ab92:	str	r3, [sp, #12]
   2ab94:	bl	17320 <free_extent_buffer@@Base>
   2ab98:	ldr	r3, [sp, #12]
   2ab9a:	b.n	2aaa6 <btrfs_read_sys_array@@Base+0x3e>
   2ab9c:	ldr	r1, [pc, #96]	; (2ac00 <btrfs_read_sys_array@@Base+0x198>)
   2ab9e:	ldr.w	r0, [r9, r1]
   2aba2:	str	r2, [sp, #0]
   2aba4:	ldr	r2, [pc, #96]	; (2ac08 <btrfs_read_sys_array@@Base+0x1a0>)
   2aba6:	add	r2, pc
   2aba8:	b.n	2ab58 <btrfs_read_sys_array@@Base+0xf0>
   2abaa:	add.w	r3, r4, #17
   2abae:	add	fp, r4
   2abb0:	add	r5, r3
   2abb2:	b.n	2aafa <btrfs_read_sys_array@@Base+0x92>
   2abb4:	mov	r2, r7
   2abb6:	movs	r4, #17
   2abb8:	ldr	r3, [pc, #68]	; (2ac00 <btrfs_read_sys_array@@Base+0x198>)
   2abba:	movs	r1, #1
   2abbc:	ldr.w	r0, [r9, r3]
   2abc0:	mov	r3, r4
   2abc2:	str	r2, [sp, #0]
   2abc4:	ldr	r2, [pc, #68]	; (2ac0c <btrfs_read_sys_array@@Base+0x1a4>)
   2abc6:	ldr	r0, [r0, #0]
   2abc8:	add	r2, pc
   2abca:	blx	8a64 <__fprintf_chk@plt+0x4>
   2abce:	mov	r0, r6
   2abd0:	bl	17320 <free_extent_buffer@@Base>
   2abd4:	mvn.w	r3, #4
   2abd8:	b.n	2aaa6 <btrfs_read_sys_array@@Base+0x3e>
   2abda:	mvn.w	r3, #11
   2abde:	b.n	2aaa6 <btrfs_read_sys_array@@Base+0x3e>
   2abe0:	mov	r0, r3
   2abe2:	add	sp, #44	; 0x2c
   2abe4:	vpop	{d8}
   2abe8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2abec:	add	r3, pc, #40	; (adr r3, 2ac18 <btrfs_read_chunk_tree@@Base+0x8>)
   2abee:	movs	r3, r0
   2abf0:	lsls	r0, r5, #8
   2abf2:	movs	r0, r0
   2abf4:	add	r2, pc, #1008	; (adr r2, 2afe8 <write_raid56_with_parity@@Base+0x158>)
   2abf6:	movs	r3, r0
   2abf8:	ldrh	r5, [r7, r1]
   2abfa:	movs	r1, r0
   2abfc:	add	r2, pc, #856	; (adr r2, 2af58 <write_raid56_with_parity@@Base+0xc8>)
   2abfe:	movs	r3, r0
   2ac00:	lsls	r0, r7, #8
   2ac02:	movs	r0, r0
   2ac04:	ldr	r4, [r6, r7]
   2ac06:	movs	r1, r0
   2ac08:	ldr	r3, [r4, r7]
   2ac0a:	movs	r1, r0
   2ac0c:	ldr	r3, [r7, r7]
   2ac0e:	movs	r1, r0

0002ac10 <btrfs_read_chunk_tree@@Base>:
   2ac10:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ac14:	mov	r7, r0
   2ac16:	vpush	{d8-d9}
   2ac1a:	ldr	r2, [pc, #600]	; (2ae74 <btrfs_read_chunk_tree@@Base+0x264>)
   2ac1c:	ldr	r3, [pc, #600]	; (2ae78 <btrfs_read_chunk_tree@@Base+0x268>)
   2ac1e:	add	r2, pc
   2ac20:	sub	sp, #100	; 0x64
   2ac22:	ldr	r3, [r2, r3]
   2ac24:	ldr	r3, [r3, #0]
   2ac26:	str	r3, [sp, #92]	; 0x5c
   2ac28:	mov.w	r3, #0
   2ac2c:	ldr	r3, [r0, #32]
   2ac2e:	str	r3, [sp, #8]
   2ac30:	bl	18550 <btrfs_alloc_path@@Base>
   2ac34:	mov	r6, r0
   2ac36:	cmp	r0, #0
   2ac38:	beq.w	2ae62 <btrfs_read_chunk_tree@@Base+0x252>
   2ac3c:	movs	r0, #0
   2ac3e:	movs	r3, #1
   2ac40:	ldr	r1, [sp, #8]
   2ac42:	add	r2, sp, #20
   2ac44:	strd	r3, r0, [sp, #20]
   2ac48:	mov	r3, r6
   2ac4a:	strd	r0, r0, [sp]
   2ac4e:	strb.w	r0, [sp, #29]
   2ac52:	strb.w	r0, [sp, #30]
   2ac56:	strb.w	r0, [sp, #31]
   2ac5a:	strb.w	r0, [sp, #32]
   2ac5e:	strb.w	r0, [sp, #33]	; 0x21
   2ac62:	strb.w	r0, [sp, #34]	; 0x22
   2ac66:	strb.w	r0, [sp, #35]	; 0x23
   2ac6a:	strb.w	r0, [sp, #36]	; 0x24
   2ac6e:	strb.w	r0, [sp, #28]
   2ac72:	bl	1a93c <btrfs_search_slot@@Base>
   2ac76:	subs	r3, r0, #0
   2ac78:	blt.n	2acac <btrfs_read_chunk_tree@@Base+0x9c>
   2ac7a:	ldr.w	sl, [pc, #512]	; 2ae7c <btrfs_read_chunk_tree@@Base+0x26c>
   2ac7e:	add.w	fp, sp, #40	; 0x28
   2ac82:	add	sl, pc
   2ac84:	ldr.w	r9, [r6]
   2ac88:	ldr	r4, [r6, #32]
   2ac8a:	ldr.w	r3, [r9, #192]	; 0xc0
   2ac8e:	cmp	r4, r3
   2ac90:	bcc.n	2accc <btrfs_read_chunk_tree@@Base+0xbc>
   2ac92:	movs	r3, #0
   2ac94:	strb.w	r3, [r6, #65]	; 0x41
   2ac98:	ldr	r3, [sp, #8]
   2ac9a:	mov	r1, r6
   2ac9c:	ldr.w	r0, [r3, #464]	; 0x1d0
   2aca0:	bl	1bd70 <btrfs_next_sibling_tree_block@@Base>
   2aca4:	cmp	r0, #0
   2aca6:	beq.n	2ac84 <btrfs_read_chunk_tree@@Base+0x74>
   2aca8:	and.w	r3, r0, r0, asr #31
   2acac:	mov	r0, r6
   2acae:	str	r3, [sp, #8]
   2acb0:	bl	1857e <btrfs_free_path@@Base>
   2acb4:	ldr	r3, [sp, #8]
   2acb6:	ldr	r1, [pc, #456]	; (2ae80 <btrfs_read_chunk_tree@@Base+0x270>)
   2acb8:	ldr	r2, [pc, #444]	; (2ae78 <btrfs_read_chunk_tree@@Base+0x268>)
   2acba:	add	r1, pc
   2acbc:	ldr	r2, [r1, r2]
   2acbe:	ldr	r1, [r2, #0]
   2acc0:	ldr	r2, [sp, #92]	; 0x5c
   2acc2:	eors	r1, r2
   2acc4:	beq.w	2ae68 <btrfs_read_chunk_tree@@Base+0x258>
   2acc8:	blx	8708 <__stack_chk_fail@plt>
   2accc:	mov	r2, r4
   2acce:	mov	r1, fp
   2acd0:	mov	r0, r9
   2acd2:	bl	285c4 <btrfs_add_root_ref@@Base+0x29c>
   2acd6:	ldrb.w	r3, [sp, #48]	; 0x30
   2acda:	cmp	r3, #216	; 0xd8
   2acdc:	bne.w	2ae40 <btrfs_read_chunk_tree@@Base+0x230>
   2ace0:	add.w	r3, r9, #96	; 0x60
   2ace4:	movs	r2, #25
   2ace6:	add.w	r8, sp, #60	; 0x3c
   2acea:	mov	r0, r9
   2acec:	mla	r4, r2, r4, r3
   2acf0:	ldr.w	r4, [r4, #118]	; 0x76
   2acf4:	add.w	r2, r4, #101	; 0x65
   2acf8:	adds	r5, r3, r2
   2acfa:	ldr	r3, [r3, r2]
   2acfc:	vmov	s17, r3
   2ad00:	ldr	r3, [r5, #4]
   2ad02:	vmov	s18, r3
   2ad06:	add.w	r3, r4, #167	; 0xa7
   2ad0a:	vmov	s16, r3
   2ad0e:	add	r3, sp, #76	; 0x4c
   2ad10:	str	r3, [sp, #12]
   2ad12:	movs	r3, #16
   2ad14:	vmov	r2, s16
   2ad18:	ldr	r1, [sp, #12]
   2ad1a:	bl	17a1a <read_extent_buffer@@Base>
   2ad1e:	add.w	r2, r4, #183	; 0xb7
   2ad22:	mov	r1, r8
   2ad24:	mov	r0, r9
   2ad26:	movs	r3, #16
   2ad28:	bl	17a1a <read_extent_buffer@@Base>
   2ad2c:	ldr.w	r4, [r7, #352]	; 0x160
   2ad30:	movs	r2, #16
   2ad32:	mov	r0, r8
   2ad34:	mov	r1, r4
   2ad36:	blx	86a0 <memcmp@plt+0x4>
   2ad3a:	cbz	r0, 2ada2 <btrfs_read_chunk_tree@@Base+0x192>
   2ad3c:	ldr	r4, [r4, #92]	; 0x5c
   2ad3e:	cbnz	r4, 2ad5e <btrfs_read_chunk_tree@@Base+0x14e>
   2ad40:	mov	r1, r4
   2ad42:	mov	r0, r8
   2ad44:	bl	28450 <btrfs_add_root_ref@@Base+0x128>
   2ad48:	mov	r4, r0
   2ad4a:	cbnz	r0, 2ad88 <btrfs_read_chunk_tree@@Base+0x178>
   2ad4c:	movs	r1, #96	; 0x60
   2ad4e:	movs	r0, #1
   2ad50:	blx	8588 <calloc@plt+0x4>
   2ad54:	mov	r4, r0
   2ad56:	cbnz	r0, 2ad66 <btrfs_read_chunk_tree@@Base+0x156>
   2ad58:	mvn.w	r3, #11
   2ad5c:	b.n	2acac <btrfs_read_chunk_tree@@Base+0x9c>
   2ad5e:	movs	r2, #16
   2ad60:	mov	r1, r8
   2ad62:	mov	r0, r4
   2ad64:	b.n	2ad36 <btrfs_read_chunk_tree@@Base+0x126>
   2ad66:	ldr.w	r2, [sl]
   2ad6a:	add.w	r3, r0, #72	; 0x48
   2ad6e:	strd	r3, r3, [r0, #72]	; 0x48
   2ad72:	add.w	r3, r0, #80	; 0x50
   2ad76:	str.w	r3, [sl]
   2ad7a:	str	r3, [r2, #4]
   2ad7c:	strd	r2, sl, [r0, #80]	; 0x50
   2ad80:	ldmia.w	r8, {r0, r1, r2, r3}
   2ad84:	stmia.w	r4, {r0, r1, r2, r3}
   2ad88:	movs	r1, #0
   2ad8a:	mov	r0, r4
   2ad8c:	bl	2871c <btrfs_open_devices@@Base>
   2ad90:	subs	r3, r0, #0
   2ad92:	bne.n	2ae5e <btrfs_read_chunk_tree@@Base+0x24e>
   2ad94:	ldr.w	r3, [r7, #352]	; 0x160
   2ad98:	ldr	r3, [r3, #92]	; 0x5c
   2ad9a:	str	r3, [r4, #92]	; 0x5c
   2ad9c:	ldr.w	r3, [r7, #352]	; 0x160
   2ada0:	str	r4, [r3, #92]	; 0x5c
   2ada2:	ldr	r3, [sp, #12]
   2ada4:	mov	r0, r7
   2ada6:	vmov	r2, s17
   2adaa:	str.w	r8, [sp, #4]
   2adae:	str	r3, [sp, #0]
   2adb0:	vmov	r3, s18
   2adb4:	bl	2a548 <btrfs_find_device@@Base>
   2adb8:	mov	r4, r0
   2adba:	cbnz	r0, 2ade2 <btrfs_read_chunk_tree@@Base+0x1d2>
   2adbc:	movs	r1, #128	; 0x80
   2adbe:	movs	r0, #1
   2adc0:	blx	8588 <calloc@plt+0x4>
   2adc4:	mov	r4, r0
   2adc6:	cmp	r0, #0
   2adc8:	beq.n	2ad58 <btrfs_read_chunk_tree@@Base+0x148>
   2adca:	ldr.w	r2, [r7, #352]	; 0x160
   2adce:	mov.w	r3, #4294967295	; 0xffffffff
   2add2:	str	r3, [r0, #24]
   2add4:	mov	r3, r2
   2add6:	ldr.w	r1, [r3, #72]!
   2adda:	str	r0, [r1, #4]
   2addc:	strd	r1, r3, [r0]
   2ade0:	str	r0, [r2, #72]	; 0x48
   2ade2:	ldr	r2, [r5, #0]
   2ade4:	add.w	r1, r4, #112	; 0x70
   2ade8:	ldr	r3, [r5, #4]
   2adea:	mov	r0, r9
   2adec:	strd	r2, r3, [r4, #64]	; 0x40
   2adf0:	ldr	r2, [r5, #8]
   2adf2:	ldr	r3, [r5, #12]
   2adf4:	strd	r2, r3, [r4, #72]	; 0x48
   2adf8:	ldr	r2, [r5, #16]
   2adfa:	ldr	r3, [r5, #20]
   2adfc:	strd	r2, r3, [r4, #80]	; 0x50
   2ae00:	ldr	r2, [r5, #36]	; 0x24
   2ae02:	ldr	r3, [r5, #40]	; 0x28
   2ae04:	strd	r2, r3, [r4, #104]	; 0x68
   2ae08:	ldr	r3, [r5, #24]
   2ae0a:	vmov	r2, s16
   2ae0e:	str	r3, [r4, #88]	; 0x58
   2ae10:	ldr	r3, [r5, #28]
   2ae12:	str	r3, [r4, #92]	; 0x5c
   2ae14:	ldr	r3, [r5, #32]
   2ae16:	str	r3, [r4, #96]	; 0x60
   2ae18:	movs	r3, #16
   2ae1a:	bl	17a1a <read_extent_buffer@@Base>
   2ae1e:	ldr	r3, [r7, #36]	; 0x24
   2ae20:	str	r3, [r4, #8]
   2ae22:	ldr.w	r2, [r7, #352]	; 0x160
   2ae26:	ldr	r0, [r5, #8]
   2ae28:	ldr	r4, [r5, #12]
   2ae2a:	ldrd	r3, r1, [r2, #56]	; 0x38
   2ae2e:	adds	r3, r3, r0
   2ae30:	adc.w	r1, r4, r1
   2ae34:	strd	r3, r1, [r2, #56]	; 0x38
   2ae38:	ldr	r3, [r6, #32]
   2ae3a:	adds	r3, #1
   2ae3c:	str	r3, [r6, #32]
   2ae3e:	b.n	2ac84 <btrfs_read_chunk_tree@@Base+0x74>
   2ae40:	cmp	r3, #228	; 0xe4
   2ae42:	bne.n	2ae38 <btrfs_read_chunk_tree@@Base+0x228>
   2ae44:	movs	r3, #25
   2ae46:	mov	r2, r9
   2ae48:	mla	r3, r3, r4, r9
   2ae4c:	mov	r1, fp
   2ae4e:	mov	r0, r7
   2ae50:	ldr.w	r3, [r3, #214]	; 0xd6
   2ae54:	str	r4, [sp, #0]
   2ae56:	adds	r3, #101	; 0x65
   2ae58:	bl	2a874 <btrfs_check_chunk_valid@@Base+0x27c>
   2ae5c:	subs	r3, r0, #0
   2ae5e:	bge.n	2ae38 <btrfs_read_chunk_tree@@Base+0x228>
   2ae60:	b.n	2acac <btrfs_read_chunk_tree@@Base+0x9c>
   2ae62:	mvn.w	r3, #11
   2ae66:	b.n	2acb6 <btrfs_read_chunk_tree@@Base+0xa6>
   2ae68:	mov	r0, r3
   2ae6a:	add	sp, #100	; 0x64
   2ae6c:	vpop	{d8-d9}
   2ae70:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ae74:	add	r1, pc, #392	; (adr r1, 2b000 <write_raid56_with_parity@@Base+0x170>)
   2ae76:	movs	r3, r0
   2ae78:	lsls	r0, r5, #8
   2ae7a:	movs	r0, r0
   2ae7c:	push	{r1, r2, r4, r5, lr}
   2ae7e:	movs	r3, r0
   2ae80:	add	r0, pc, #792	; (adr r0, 2b19c <write_raid56_with_parity@@Base+0x30c>)
   2ae82:	movs	r3, r0

0002ae84 <btrfs_scanned_uuids@@Base>:
   2ae84:	ldr	r0, [pc, #4]	; (2ae8c <btrfs_scanned_uuids@@Base+0x8>)
   2ae86:	add	r0, pc
   2ae88:	bx	lr
   2ae8a:	nop
   2ae8c:	cbz	r2, 2aedc <write_raid56_with_parity@@Base+0x4c>
   2ae8e:	movs	r3, r0

0002ae90 <write_raid56_with_parity@@Base>:
   2ae90:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ae94:	vpush	{d8}
   2ae98:	vmov	s16, r0
   2ae9c:	ldr	r3, [r1, #76]	; 0x4c
   2ae9e:	sub	sp, #44	; 0x2c
   2aea0:	str	r1, [sp, #4]
   2aea2:	str	r3, [sp, #16]
   2aea4:	ldr	r3, [r2, #4]
   2aea6:	str	r2, [sp, #12]
   2aea8:	lsls	r5, r3, #2
   2aeaa:	str	r3, [sp, #8]
   2aeac:	mov	r0, r5
   2aeae:	blx	8870 <malloc@plt+0x4>
   2aeb2:	mov	r4, r0
   2aeb4:	mov	r0, r5
   2aeb6:	blx	8870 <malloc@plt+0x4>
   2aeba:	mov	sl, r0
   2aebc:	cbz	r4, 2aec0 <write_raid56_with_parity@@Base+0x30>
   2aebe:	cbnz	r0, 2aedc <write_raid56_with_parity@@Base+0x4c>
   2aec0:	mov	r0, r4
   2aec2:	mvn.w	r9, #11
   2aec6:	blx	8620 <free@plt+0x4>
   2aeca:	mov	r0, sl
   2aecc:	blx	8620 <free@plt+0x4>
   2aed0:	mov	r0, r9
   2aed2:	add	sp, #44	; 0x2c
   2aed4:	vpop	{d8}
   2aed8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2aedc:	ldr	r3, [sp, #16]
   2aede:	asrs	r2, r3, #31
   2aee0:	mov	r1, r3
   2aee2:	mov	r3, r2
   2aee4:	mov	r2, r1
   2aee6:	ldrd	r0, r1, [sp, #88]	; 0x58
   2aeea:	cmp	r3, r1
   2aeec:	ldr	r3, [sp, #16]
   2aeee:	it	eq
   2aef0:	cmpeq	r2, r0
   2aef2:	ldr	r2, [sp, #88]	; 0x58
   2aef4:	ldr	r0, [sp, #8]
   2aef6:	mov.w	r1, #4
   2aefa:	it	cc
   2aefc:	movcc	r3, r2
   2aefe:	str	r3, [sp, #16]
   2af00:	ldr	r3, [sp, #4]
   2af02:	ldrd	r2, r3, [r3, #40]	; 0x28
   2af06:	strd	r2, r3, [sp, #24]
   2af0a:	blx	8588 <calloc@plt+0x4>
   2af0e:	mov	r8, r0
   2af10:	cmp	r0, #0
   2af12:	beq.w	2b21a <write_raid56_with_parity@@Base+0x38a>
   2af16:	ldr	r3, [sp, #96]	; 0x60
   2af18:	movs	r5, #0
   2af1a:	ldr	r1, [sp, #88]	; 0x58
   2af1c:	mvn.w	r2, #2
   2af20:	subs	r3, #8
   2af22:	str	r3, [sp, #20]
   2af24:	add.w	r7, r1, #96	; 0x60
   2af28:	mov	r6, r3
   2af2a:	mov.w	r3, #4294967295	; 0xffffffff
   2af2e:	ldr	r1, [sp, #8]
   2af30:	cmp	r1, r5
   2af32:	bgt.n	2af3a <write_raid56_with_parity@@Base+0xaa>
   2af34:	mov.w	fp, #0
   2af38:	b.n	2b068 <write_raid56_with_parity@@Base+0x1d8>
   2af3a:	ldrd	r0, r1, [r6, #8]!
   2af3e:	cmp	r3, r1
   2af40:	it	eq
   2af42:	cmpeq	r2, r0
   2af44:	bcc.n	2af34 <write_raid56_with_parity@@Base+0xa4>
   2af46:	mov	r1, r7
   2af48:	movs	r0, #1
   2af4a:	blx	8588 <calloc@plt+0x4>
   2af4e:	str.w	r0, [r8, r5, lsl #2]
   2af52:	cmp	r0, #0
   2af54:	beq.w	2b0f2 <write_raid56_with_parity@@Base+0x262>
   2af58:	adds	r5, #1
   2af5a:	mvn.w	r2, #2
   2af5e:	mov.w	r3, #4294967295	; 0xffffffff
   2af62:	b.n	2af2e <write_raid56_with_parity@@Base+0x9e>
   2af64:	ldr	r3, [sp, #20]
   2af66:	mvn.w	r2, #2
   2af6a:	ldr.w	r5, [r8, fp, lsl #2]
   2af6e:	ldrd	r6, r7, [r3, #8]!
   2af72:	str	r3, [sp, #20]
   2af74:	mov.w	r3, #4294967295	; 0xffffffff
   2af78:	cmp	r3, r7
   2af7a:	it	eq
   2af7c:	cmpeq	r2, r6
   2af7e:	bcc.n	2b070 <write_raid56_with_parity@@Base+0x1e0>
   2af80:	ldr	r3, [sp, #88]	; 0x58
   2af82:	movs	r2, #1
   2af84:	strd	r6, r7, [r5, #40]	; 0x28
   2af88:	str	r3, [r5, #76]	; 0x4c
   2af8a:	movs	r3, #0
   2af8c:	strd	r2, r3, [r5, #80]	; 0x50
   2af90:	mov.w	r3, #4294967295	; 0xffffffff
   2af94:	mov.w	r2, #4294967295	; 0xffffffff
   2af98:	str	r3, [r5, #88]	; 0x58
   2af9a:	mov.w	r3, #4294967295	; 0xffffffff
   2af9e:	strd	r2, r3, [r5, #48]	; 0x30
   2afa2:	ldrd	r2, r3, [sp, #24]
   2afa6:	cmp	r7, r3
   2afa8:	it	eq
   2afaa:	cmpeq	r6, r2
   2afac:	bcc.n	2afd6 <write_raid56_with_parity@@Base+0x146>
   2afae:	ldr	r3, [sp, #4]
   2afb0:	ldr	r1, [r3, #76]	; 0x4c
   2afb2:	ldrd	r2, r3, [sp, #24]
   2afb6:	adds	r2, r2, r1
   2afb8:	ldr	r1, [sp, #88]	; 0x58
   2afba:	adc.w	r3, r3, #0
   2afbe:	adds	r1, r1, r6
   2afc0:	str	r1, [sp, #32]
   2afc2:	ldr	r1, [sp, #92]	; 0x5c
   2afc4:	adcs	r1, r7
   2afc6:	str	r1, [sp, #36]	; 0x24
   2afc8:	ldrd	r0, r1, [sp, #32]
   2afcc:	cmp	r3, r1
   2afce:	it	eq
   2afd0:	cmpeq	r2, r0
   2afd2:	bcs.w	2b0de <write_raid56_with_parity@@Base+0x24e>
   2afd6:	vmov	r0, s16
   2afda:	movs	r2, #0
   2afdc:	mov	r1, r5
   2afde:	bl	1c940 <read_whole_eb@@Base>
   2afe2:	mov	r9, r0
   2afe4:	cmp	r0, #0
   2afe6:	bne.w	2b0f6 <write_raid56_with_parity@@Base+0x266>
   2afea:	ldr	r3, [sp, #4]
   2afec:	ldrd	r0, r1, [r5, #40]	; 0x28
   2aff0:	ldr.w	ip, [r5, #76]	; 0x4c
   2aff4:	ldrd	r6, r7, [r3, #40]	; 0x28
   2aff8:	adds.w	r2, r0, ip
   2affc:	adc.w	r3, r1, #0
   2b000:	cmp	r7, r3
   2b002:	it	eq
   2b004:	cmpeq	r6, r2
   2b006:	bcs.n	2b060 <write_raid56_with_parity@@Base+0x1d0>
   2b008:	ldr	r3, [sp, #4]
   2b00a:	ldr.w	lr, [r3, #76]	; 0x4c
   2b00e:	adds.w	r2, r6, lr
   2b012:	adc.w	r3, r7, #0
   2b016:	cmp	r1, r3
   2b018:	it	eq
   2b01a:	cmpeq	r0, r2
   2b01c:	bcs.n	2b060 <write_raid56_with_parity@@Base+0x1d0>
   2b01e:	cmp	r7, r1
   2b020:	ldr	r3, [sp, #88]	; 0x58
   2b022:	it	eq
   2b024:	cmpeq	r6, r0
   2b026:	it	cc
   2b028:	subcc.w	r9, r0, r6
   2b02c:	cmp	r1, r7
   2b02e:	it	eq
   2b030:	cmpeq	r0, r6
   2b032:	sub.w	lr, lr, r9
   2b036:	it	cc
   2b038:	subcc	r6, r6, r0
   2b03a:	add.w	r0, r5, #96	; 0x60
   2b03e:	it	cs
   2b040:	movcs	r6, #0
   2b042:	cmp	lr, r3
   2b044:	sub.w	r2, ip, r6
   2b048:	add	r0, r6
   2b04a:	it	cs
   2b04c:	movcs	lr, r3
   2b04e:	ldr	r3, [sp, #4]
   2b050:	cmp	r2, lr
   2b052:	add.w	r1, r3, #96	; 0x60
   2b056:	add	r1, r9
   2b058:	it	cs
   2b05a:	movcs	r2, lr
   2b05c:	blx	866c <memcpy@plt+0x4>
   2b060:	str.w	r5, [r4, fp, lsl #2]
   2b064:	add.w	fp, fp, #1
   2b068:	ldr	r3, [sp, #8]
   2b06a:	cmp	r3, fp
   2b06c:	bgt.w	2af64 <write_raid56_with_parity@@Base+0xd4>
   2b070:	mov	r0, r8
   2b072:	movs	r6, #0
   2b074:	blx	8620 <free@plt+0x4>
   2b078:	ldr	r3, [sp, #16]
   2b07a:	ldr	r7, [sp, #12]
   2b07c:	mov	r5, r6
   2b07e:	ldr.w	r8, [sp, #96]	; 0x60
   2b082:	add.w	r9, r3, #96	; 0x60
   2b086:	str	r6, [sp, #8]
   2b088:	ldr	r3, [sp, #12]
   2b08a:	ldr	r0, [r3, #4]
   2b08c:	cmp	r0, r6
   2b08e:	bgt.n	2b11e <write_raid56_with_parity@@Base+0x28e>
   2b090:	add.w	r3, r0, #1073741824	; 0x40000000
   2b094:	subs	r3, #1
   2b096:	add.w	r2, r4, r3, lsl #2
   2b09a:	cmp	r5, #0
   2b09c:	beq.w	2b1c8 <write_raid56_with_parity@@Base+0x338>
   2b0a0:	ldr	r1, [sp, #8]
   2b0a2:	str.w	r1, [r2, #-4]
   2b0a6:	str.w	r5, [r4, r3, lsl #2]
   2b0aa:	movs	r3, #0
   2b0ac:	cmp	r0, r3
   2b0ae:	bgt.w	2b1ba <write_raid56_with_parity@@Base+0x32a>
   2b0b2:	ldr	r1, [sp, #88]	; 0x58
   2b0b4:	mov	r2, sl
   2b0b6:	bl	2f1fc <raid6_gen_syndrome@@Base>
   2b0ba:	mov.w	r9, #0
   2b0be:	movs	r5, #0
   2b0c0:	ldr	r3, [sp, #12]
   2b0c2:	ldr	r3, [r3, #4]
   2b0c4:	cmp	r3, r5
   2b0c6:	ble.w	2b1e4 <write_raid56_with_parity@@Base+0x354>
   2b0ca:	ldr.w	r0, [r4, r5, lsl #2]
   2b0ce:	bl	1757e <write_extent_to_disk@@Base>
   2b0d2:	subs.w	r9, r0, #0
   2b0d6:	blt.w	2b1e4 <write_raid56_with_parity@@Base+0x354>
   2b0da:	adds	r5, #1
   2b0dc:	b.n	2b0c0 <write_raid56_with_parity@@Base+0x230>
   2b0de:	ldr	r3, [sp, #4]
   2b0e0:	add.w	r0, r5, #96	; 0x60
   2b0e4:	ldr	r2, [sp, #88]	; 0x58
   2b0e6:	add.w	r1, r3, #96	; 0x60
   2b0ea:	ldr	r3, [sp, #24]
   2b0ec:	subs	r6, r6, r3
   2b0ee:	add	r1, r6
   2b0f0:	b.n	2b05c <write_raid56_with_parity@@Base+0x1cc>
   2b0f2:	mvn.w	r9, #11
   2b0f6:	movs	r5, #0
   2b0f8:	ldr	r3, [sp, #8]
   2b0fa:	cmp	r3, r5
   2b0fc:	bgt.n	2b112 <write_raid56_with_parity@@Base+0x282>
   2b0fe:	mov	r0, r8
   2b100:	blx	8620 <free@plt+0x4>
   2b104:	mov	r0, r4
   2b106:	blx	8620 <free@plt+0x4>
   2b10a:	mov	r0, sl
   2b10c:	blx	8620 <free@plt+0x4>
   2b110:	b.n	2aed0 <write_raid56_with_parity@@Base+0x40>
   2b112:	ldr.w	r0, [r8, r5, lsl #2]
   2b116:	adds	r5, #1
   2b118:	blx	8620 <free@plt+0x4>
   2b11c:	b.n	2b0f8 <write_raid56_with_parity@@Base+0x268>
   2b11e:	ldrd	r2, r3, [r8]
   2b122:	mov.w	r1, #4294967295	; 0xffffffff
   2b126:	mvn.w	r0, #2
   2b12a:	cmp	r1, r3
   2b12c:	it	eq
   2b12e:	cmpeq	r0, r2
   2b130:	bcc.n	2b16c <write_raid56_with_parity@@Base+0x2dc>
   2b132:	ldrd	r2, r3, [r7, #16]
   2b136:	ldr	r1, [r7, #8]
   2b138:	ldr.w	r0, [r4, r6, lsl #2]
   2b13c:	strd	r2, r3, [r0, #48]	; 0x30
   2b140:	ldr	r3, [r1, #24]
   2b142:	str	r3, [r0, #88]	; 0x58
   2b144:	ldrd	r3, r2, [r1, #16]
   2b148:	adds	r3, #1
   2b14a:	adc.w	r2, r2, #0
   2b14e:	strd	r3, r2, [r1, #16]
   2b152:	ldrd	r0, r1, [r0, #40]	; 0x28
   2b156:	ldrd	r2, r3, [r8]
   2b15a:	cmp	r1, r3
   2b15c:	it	eq
   2b15e:	cmpeq	r0, r2
   2b160:	bne.n	2b20e <write_raid56_with_parity@@Base+0x37e>
   2b162:	adds	r6, #1
   2b164:	adds	r7, #16
   2b166:	add.w	r8, r8, #8
   2b16a:	b.n	2b088 <write_raid56_with_parity@@Base+0x1f8>
   2b16c:	mov	r0, r9
   2b16e:	blx	8870 <malloc@plt+0x4>
   2b172:	cmp	r0, #0
   2b174:	beq.n	2b214 <write_raid56_with_parity@@Base+0x384>
   2b176:	ldrd	r2, r3, [r7, #16]
   2b17a:	mov.w	ip, #4294967295	; 0xffffffff
   2b17e:	ldr	r1, [r7, #8]
   2b180:	mvn.w	fp, #1
   2b184:	strd	r2, r3, [r0, #48]	; 0x30
   2b188:	ldr	r3, [r1, #24]
   2b18a:	str	r3, [r0, #88]	; 0x58
   2b18c:	ldrd	r3, r2, [r1, #16]
   2b190:	adds	r3, #1
   2b192:	adc.w	r2, r2, #0
   2b196:	strd	r3, r2, [r1, #16]
   2b19a:	ldr	r3, [sp, #88]	; 0x58
   2b19c:	str	r3, [r0, #76]	; 0x4c
   2b19e:	ldrd	r2, r3, [r8]
   2b1a2:	cmp	r3, ip
   2b1a4:	it	eq
   2b1a6:	cmpeq	r2, fp
   2b1a8:	beq.n	2b1b6 <write_raid56_with_parity@@Base+0x326>
   2b1aa:	adds	r3, #1
   2b1ac:	itt	eq
   2b1ae:	cmpeq.w	r2, #4294967295	; 0xffffffff
   2b1b2:	moveq	r5, r0
   2b1b4:	b.n	2b162 <write_raid56_with_parity@@Base+0x2d2>
   2b1b6:	str	r0, [sp, #8]
   2b1b8:	b.n	2b162 <write_raid56_with_parity@@Base+0x2d2>
   2b1ba:	ldr.w	r2, [r4, r3, lsl #2]
   2b1be:	adds	r2, #96	; 0x60
   2b1c0:	str.w	r2, [sl, r3, lsl #2]
   2b1c4:	adds	r3, #1
   2b1c6:	b.n	2b0ac <write_raid56_with_parity@@Base+0x21c>
   2b1c8:	ldr	r2, [sp, #8]
   2b1ca:	str.w	r2, [r4, r3, lsl #2]
   2b1ce:	cmp	r0, r5
   2b1d0:	bgt.n	2b200 <write_raid56_with_parity@@Base+0x370>
   2b1d2:	ldr	r1, [sp, #88]	; 0x58
   2b1d4:	subs	r2, r0, #1
   2b1d6:	mov	r3, sl
   2b1d8:	bl	2f268 <raid5_gen_result@@Base>
   2b1dc:	subs.w	r9, r0, #0
   2b1e0:	bge.w	2b0be <write_raid56_with_parity@@Base+0x22e>
   2b1e4:	movs	r5, #0
   2b1e6:	ldr	r3, [sp, #12]
   2b1e8:	ldr	r3, [r3, #4]
   2b1ea:	cmp	r3, r5
   2b1ec:	ble.n	2b104 <write_raid56_with_parity@@Base+0x274>
   2b1ee:	ldr.w	r0, [r4, r5, lsl #2]
   2b1f2:	ldr	r3, [sp, #4]
   2b1f4:	cmp	r0, r3
   2b1f6:	beq.n	2b1fc <write_raid56_with_parity@@Base+0x36c>
   2b1f8:	blx	8620 <free@plt+0x4>
   2b1fc:	adds	r5, #1
   2b1fe:	b.n	2b1e6 <write_raid56_with_parity@@Base+0x356>
   2b200:	ldr.w	r3, [r4, r5, lsl #2]
   2b204:	adds	r3, #96	; 0x60
   2b206:	str.w	r3, [sl, r5, lsl #2]
   2b20a:	adds	r5, #1
   2b20c:	b.n	2b1ce <write_raid56_with_parity@@Base+0x33e>
   2b20e:	mvn.w	r9, #21
   2b212:	b.n	2b1e4 <write_raid56_with_parity@@Base+0x354>
   2b214:	mvn.w	r9, #11
   2b218:	b.n	2b1e4 <write_raid56_with_parity@@Base+0x354>
   2b21a:	mvn.w	r9, #11
   2b21e:	b.n	2b104 <write_raid56_with_parity@@Base+0x274>

0002b220 <btrfs_stripe_length@@Base>:
   2b220:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   2b224:	adds	r1, #96	; 0x60
   2b226:	add	r1, r2
   2b228:	movs	r3, #0
   2b22a:	cmp	r3, #0
   2b22c:	mov	r7, r3
   2b22e:	ldr	r4, [r1, #24]
   2b230:	ldrh	r2, [r1, #44]	; 0x2c
   2b232:	and.w	r6, r4, #2040	; 0x7f8
   2b236:	ldr	r5, [r1, #0]
   2b238:	it	eq
   2b23a:	cmpeq	r6, #64	; 0x40
   2b23c:	ldr	r4, [r1, #4]
   2b23e:	uxth	r0, r2
   2b240:	beq.n	2b2e4 <btrfs_stripe_length@@Base+0xc4>
   2b242:	cmp	r3, #0
   2b244:	it	eq
   2b246:	cmpeq	r6, #65	; 0x41
   2b248:	bcs.n	2b294 <btrfs_stripe_length@@Base+0x74>
   2b24a:	cmp	r3, #0
   2b24c:	it	eq
   2b24e:	cmpeq	r6, #8
   2b250:	beq.n	2b2da <btrfs_stripe_length@@Base+0xba>
   2b252:	cmp	r3, #0
   2b254:	it	eq
   2b256:	cmpeq	r6, #9
   2b258:	bcs.n	2b27a <btrfs_stripe_length@@Base+0x5a>
   2b25a:	orrs.w	r3, r6, r7
   2b25e:	beq.n	2b28a <btrfs_stripe_length@@Base+0x6a>
   2b260:	ldr	r2, [pc, #140]	; (2b2f0 <btrfs_stripe_length@@Base+0xd0>)
   2b262:	movs	r3, #1
   2b264:	ldr	r1, [pc, #140]	; (2b2f4 <btrfs_stripe_length@@Base+0xd4>)
   2b266:	ldr	r0, [pc, #144]	; (2b2f8 <btrfs_stripe_length@@Base+0xd8>)
   2b268:	add	r2, pc
   2b26a:	str	r3, [sp, #0]
   2b26c:	adds	r2, #130	; 0x82
   2b26e:	add	r1, pc
   2b270:	add	r0, pc
   2b272:	movw	r3, #2545	; 0x9f1
   2b276:	bl	2851c <btrfs_add_root_ref@@Base+0x1f4>
   2b27a:	cmp	r3, #0
   2b27c:	it	eq
   2b27e:	cmpeq	r6, #16
   2b280:	beq.n	2b28a <btrfs_stripe_length@@Base+0x6a>
   2b282:	cmp	r3, #0
   2b284:	it	eq
   2b286:	cmpeq	r6, #32
   2b288:	bne.n	2b260 <btrfs_stripe_length@@Base+0x40>
   2b28a:	mov	r0, r5
   2b28c:	mov	r1, r4
   2b28e:	add	sp, #12
   2b290:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2b294:	cmp	r3, #0
   2b296:	it	eq
   2b298:	cmpeq.w	r6, #256	; 0x100
   2b29c:	beq.n	2b2e0 <btrfs_stripe_length@@Base+0xc0>
   2b29e:	mov.w	r9, #0
   2b2a2:	cmp	r9, r3
   2b2a4:	mov.w	r8, #256	; 0x100
   2b2a8:	it	eq
   2b2aa:	cmpeq	r8, r6
   2b2ac:	bcc.n	2b2c6 <btrfs_stripe_length@@Base+0xa6>
   2b2ae:	cmp	r3, #0
   2b2b0:	it	eq
   2b2b2:	cmpeq	r6, #128	; 0x80
   2b2b4:	bne.n	2b260 <btrfs_stripe_length@@Base+0x40>
   2b2b6:	subs	r2, r0, #1
   2b2b8:	mov	r0, r5
   2b2ba:	mov	r1, r4
   2b2bc:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2b2c0:	mov	r5, r0
   2b2c2:	mov	r4, r1
   2b2c4:	b.n	2b28a <btrfs_stripe_length@@Base+0x6a>
   2b2c6:	cmp	r3, #0
   2b2c8:	it	eq
   2b2ca:	cmpeq.w	r6, #512	; 0x200
   2b2ce:	beq.n	2b28a <btrfs_stripe_length@@Base+0x6a>
   2b2d0:	cmp	r3, #0
   2b2d2:	it	eq
   2b2d4:	cmpeq.w	r6, #1024	; 0x400
   2b2d8:	b.n	2b288 <btrfs_stripe_length@@Base+0x68>
   2b2da:	uxth	r2, r2
   2b2dc:	movs	r3, #0
   2b2de:	b.n	2b2b8 <btrfs_stripe_length@@Base+0x98>
   2b2e0:	subs	r2, r0, #2
   2b2e2:	b.n	2b2b8 <btrfs_stripe_length@@Base+0x98>
   2b2e4:	ldrh	r1, [r1, #46]	; 0x2e
   2b2e6:	bl	39420 <btrfs_util_strerror@@Base+0x18>
   2b2ea:	mov	r2, r0
   2b2ec:	b.n	2b2dc <btrfs_stripe_length@@Base+0xbc>
   2b2ee:	nop
   2b2f0:	strb	r4, [r7, r7]
   2b2f2:	movs	r1, r0
   2b2f4:	ldr	r7, [pc, #116]	; (2b36c <btrfs_fix_device_size@@Base+0x70>)
   2b2f6:	movs	r1, r0
   2b2f8:	cmp	r4, #141	; 0x8d
   2b2fa:	movs	r1, r0

0002b2fc <btrfs_fix_device_size@@Base>:
   2b2fc:	ldr	r2, [pc, #344]	; (2b458 <btrfs_fix_device_size@@Base+0x15c>)
   2b2fe:	ldr	r3, [pc, #348]	; (2b45c <btrfs_fix_device_size@@Base+0x160>)
   2b300:	add	r2, pc
   2b302:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b306:	sub	sp, #116	; 0x74
   2b308:	ldr	r3, [r2, r3]
   2b30a:	mov	r5, r1
   2b30c:	ldrd	sl, fp, [r1, #72]	; 0x48
   2b310:	movs	r1, #0
   2b312:	ldr	r3, [r3, #0]
   2b314:	str	r3, [sp, #108]	; 0x6c
   2b316:	mov.w	r3, #0
   2b31a:	ldr.w	r3, [r0, #388]	; 0x184
   2b31e:	movs	r4, #0
   2b320:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2b324:	adc.w	r1, r1, #4294967295	; 0xffffffff
   2b328:	and.w	r6, r2, sl
   2b32c:	and.w	r7, r1, fp
   2b330:	orrs.w	r2, r6, r7
   2b334:	beq.n	2b380 <btrfs_fix_device_size@@Base+0x84>
   2b336:	negs	r3, r3
   2b338:	ldr.w	r9, [r0, #32]
   2b33c:	and.w	r3, r3, sl
   2b340:	str	r3, [r5, #72]	; 0x48
   2b342:	movs	r3, #216	; 0xd8
   2b344:	strb.w	r3, [sp, #28]
   2b348:	ldr	r3, [r5, #64]	; 0x40
   2b34a:	mov.w	r8, #1
   2b34e:	mov	r1, r8
   2b350:	mov	r0, r9
   2b352:	strd	r8, r4, [sp, #20]
   2b356:	str.w	r3, [sp, #29]
   2b35a:	ldr	r3, [r5, #68]	; 0x44
   2b35c:	str.w	r3, [sp, #33]	; 0x21
   2b360:	bl	2b67c <btrfs_start_transaction@@Base>
   2b364:	cmn.w	r0, #4096	; 0x1000
   2b368:	mov	r6, r0
   2b36a:	bls.n	2b394 <btrfs_fix_device_size@@Base+0x98>
   2b36c:	mov	r4, r0
   2b36e:	blx	897c <__errno_location@plt>
   2b372:	negs	r3, r6
   2b374:	mov	r1, r6
   2b376:	str	r3, [r0, #0]
   2b378:	ldr	r0, [pc, #228]	; (2b460 <btrfs_fix_device_size@@Base+0x164>)
   2b37a:	add	r0, pc
   2b37c:	bl	17b7c <__btrfs_error@@Base>
   2b380:	ldr	r2, [pc, #224]	; (2b464 <btrfs_fix_device_size@@Base+0x168>)
   2b382:	ldr	r3, [pc, #216]	; (2b45c <btrfs_fix_device_size@@Base+0x160>)
   2b384:	add	r2, pc
   2b386:	ldr	r3, [r2, r3]
   2b388:	ldr	r2, [r3, #0]
   2b38a:	ldr	r3, [sp, #108]	; 0x6c
   2b38c:	eors	r2, r3
   2b38e:	beq.n	2b450 <btrfs_fix_device_size@@Base+0x154>
   2b390:	blx	8708 <__stack_chk_fail@plt>
   2b394:	add	r7, sp, #40	; 0x28
   2b396:	mov	r0, r7
   2b398:	bl	18548 <btrfs_init_path@@Base>
   2b39c:	strd	r4, r8, [sp]
   2b3a0:	add	r2, sp, #20
   2b3a2:	mov	r3, r7
   2b3a4:	mov	r1, r9
   2b3a6:	mov	r0, r6
   2b3a8:	bl	1a93c <btrfs_search_slot@@Base>
   2b3ac:	subs	r4, r0, #0
   2b3ae:	ble.n	2b3ca <btrfs_fix_device_size@@Base+0xce>
   2b3b0:	ldr	r0, [pc, #180]	; (2b468 <btrfs_fix_device_size@@Base+0x16c>)
   2b3b2:	mvn.w	r4, #1
   2b3b6:	ldrd	r2, r3, [r5, #64]	; 0x40
   2b3ba:	add	r0, pc
   2b3bc:	bl	17b7c <__btrfs_error@@Base>
   2b3c0:	mov	r1, r9
   2b3c2:	mov	r0, r6
   2b3c4:	bl	2b8fc <btrfs_commit_transaction@@Base>
   2b3c8:	b.n	2b424 <btrfs_fix_device_size@@Base+0x128>
   2b3ca:	beq.n	2b3e0 <btrfs_fix_device_size@@Base+0xe4>
   2b3cc:	blx	897c <__errno_location@plt>
   2b3d0:	negs	r3, r4
   2b3d2:	mov	r1, r4
   2b3d4:	str	r3, [r0, #0]
   2b3d6:	ldr	r0, [pc, #148]	; (2b46c <btrfs_fix_device_size@@Base+0x170>)
   2b3d8:	add	r0, pc
   2b3da:	bl	17b7c <__btrfs_error@@Base>
   2b3de:	b.n	2b3c0 <btrfs_fix_device_size@@Base+0xc4>
   2b3e0:	ldr	r0, [sp, #40]	; 0x28
   2b3e2:	mov.w	ip, #25
   2b3e6:	ldr	r2, [sp, #72]	; 0x48
   2b3e8:	add.w	r3, r0, #96	; 0x60
   2b3ec:	ldrd	r1, r4, [r5, #72]	; 0x48
   2b3f0:	mla	r2, ip, r2, r3
   2b3f4:	ldr.w	r2, [r2, #118]	; 0x76
   2b3f8:	add	r3, r2
   2b3fa:	str.w	r1, [r3, #109]	; 0x6d
   2b3fe:	str.w	r4, [r3, #113]	; 0x71
   2b402:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   2b406:	mov	r1, r9
   2b408:	mov	r0, r6
   2b40a:	bl	2b8fc <btrfs_commit_transaction@@Base>
   2b40e:	subs	r4, r0, #0
   2b410:	bge.n	2b42c <btrfs_fix_device_size@@Base+0x130>
   2b412:	blx	897c <__errno_location@plt>
   2b416:	negs	r3, r4
   2b418:	mov	r1, r4
   2b41a:	str	r3, [r0, #0]
   2b41c:	ldr	r0, [pc, #80]	; (2b470 <btrfs_fix_device_size@@Base+0x174>)
   2b41e:	add	r0, pc
   2b420:	bl	17b7c <__btrfs_error@@Base>
   2b424:	mov	r0, r7
   2b426:	bl	18558 <btrfs_release_path@@Base>
   2b42a:	b.n	2b380 <btrfs_fix_device_size@@Base+0x84>
   2b42c:	mov	r0, r7
   2b42e:	mov	r4, r8
   2b430:	bl	18558 <btrfs_release_path@@Base>
   2b434:	ldrd	r2, r3, [r5, #72]	; 0x48
   2b438:	ldr	r1, [pc, #56]	; (2b474 <btrfs_fix_device_size@@Base+0x178>)
   2b43a:	mov	r0, r8
   2b43c:	strd	sl, fp, [sp]
   2b440:	strd	r2, r3, [sp, #8]
   2b444:	add	r1, pc
   2b446:	ldrd	r2, r3, [r5, #64]	; 0x40
   2b44a:	blx	8a30 <__printf_chk@plt+0x4>
   2b44e:	b.n	2b380 <btrfs_fix_device_size@@Base+0x84>
   2b450:	mov	r0, r4
   2b452:	add	sp, #116	; 0x74
   2b454:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b458:	ldr	r2, [sp, #512]	; 0x200
   2b45a:	movs	r3, r0
   2b45c:	lsls	r0, r5, #8
   2b45e:	movs	r0, r0
   2b460:	strh	r3, [r0, r2]
   2b462:	movs	r1, r0
   2b464:	ldr	r1, [sp, #1008]	; 0x3f0
   2b466:	movs	r3, r0
   2b468:	strh	r7, [r4, r1]
   2b46a:	movs	r1, r0
   2b46c:	strh	r0, [r6, r1]
   2b46e:	movs	r1, r0
   2b470:	strh	r7, [r1, r1]
   2b472:	movs	r1, r0
   2b474:	strh	r7, [r2, r1]
   2b476:	movs	r1, r0

0002b478 <btrfs_fix_super_size@@Base>:
   2b478:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2b47c:	sub	sp, #20
   2b47e:	ldr.w	r3, [r0, #352]	; 0x160
   2b482:	mov	r5, r0
   2b484:	movs	r6, #0
   2b486:	movs	r7, #0
   2b488:	add.w	lr, r3, #72	; 0x48
   2b48c:	ldr	r3, [r3, #72]	; 0x48
   2b48e:	cmp	r3, lr
   2b490:	bne.n	2b4ce <btrfs_fix_super_size@@Base+0x56>
   2b492:	ldr.w	r3, [r5, #308]	; 0x134
   2b496:	ldr.w	r9, [r3, #116]	; 0x74
   2b49a:	ldr.w	r8, [r3, #112]	; 0x70
   2b49e:	cmp	r7, r9
   2b4a0:	it	eq
   2b4a2:	cmpeq	r6, r8
   2b4a4:	beq.n	2b548 <btrfs_fix_super_size@@Base+0xd0>
   2b4a6:	str	r6, [r3, #112]	; 0x70
   2b4a8:	movs	r1, #1
   2b4aa:	str	r7, [r3, #116]	; 0x74
   2b4ac:	ldr	r0, [r5, #28]
   2b4ae:	bl	2b67c <btrfs_start_transaction@@Base>
   2b4b2:	cmn.w	r0, #4096	; 0x1000
   2b4b6:	mov	r4, r0
   2b4b8:	bls.n	2b518 <btrfs_fix_super_size@@Base+0xa0>
   2b4ba:	blx	897c <__errno_location@plt>
   2b4be:	negs	r3, r4
   2b4c0:	mov	r1, r4
   2b4c2:	str	r3, [r0, #0]
   2b4c4:	ldr	r0, [pc, #132]	; (2b54c <btrfs_fix_super_size@@Base+0xd4>)
   2b4c6:	add	r0, pc
   2b4c8:	bl	17b7c <__btrfs_error@@Base>
   2b4cc:	b.n	2b506 <btrfs_fix_super_size@@Base+0x8e>
   2b4ce:	ldr.w	ip, [r5, #388]	; 0x184
   2b4d2:	movs	r4, #0
   2b4d4:	ldrd	r1, r0, [r3, #72]	; 0x48
   2b4d8:	adds.w	r2, ip, #4294967295	; 0xffffffff
   2b4dc:	adc.w	r4, r4, #4294967295	; 0xffffffff
   2b4e0:	and.w	r8, r2, r1
   2b4e4:	and.w	r9, r4, r0
   2b4e8:	orrs.w	r2, r8, r9
   2b4ec:	beq.n	2b50e <btrfs_fix_super_size@@Base+0x96>
   2b4ee:	strd	r1, r0, [sp]
   2b4f2:	mvn.w	r4, #116	; 0x74
   2b4f6:	ldr	r0, [pc, #88]	; (2b550 <btrfs_fix_super_size@@Base+0xd8>)
   2b4f8:	str.w	ip, [sp, #8]
   2b4fc:	add	r0, pc
   2b4fe:	ldrd	r2, r3, [r3, #64]	; 0x40
   2b502:	bl	17b7c <__btrfs_error@@Base>
   2b506:	mov	r0, r4
   2b508:	add	sp, #20
   2b50a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2b50e:	adds	r6, r6, r1
   2b510:	ldr	r3, [r3, #0]
   2b512:	adc.w	r7, r0, r7
   2b516:	b.n	2b48e <btrfs_fix_super_size@@Base+0x16>
   2b518:	ldr	r1, [r5, #28]
   2b51a:	bl	2b8fc <btrfs_commit_transaction@@Base>
   2b51e:	subs	r4, r0, #0
   2b520:	bge.n	2b532 <btrfs_fix_super_size@@Base+0xba>
   2b522:	blx	897c <__errno_location@plt>
   2b526:	negs	r3, r4
   2b528:	mov	r1, r4
   2b52a:	str	r3, [r0, #0]
   2b52c:	ldr	r0, [pc, #36]	; (2b554 <btrfs_fix_super_size@@Base+0xdc>)
   2b52e:	add	r0, pc
   2b530:	b.n	2b4c8 <btrfs_fix_super_size@@Base+0x50>
   2b532:	ldr	r1, [pc, #36]	; (2b558 <btrfs_fix_super_size@@Base+0xe0>)
   2b534:	mov	r2, r8
   2b536:	mov	r3, r9
   2b538:	movs	r0, #1
   2b53a:	add	r1, pc
   2b53c:	strd	r6, r7, [sp]
   2b540:	blx	8a30 <__printf_chk@plt+0x4>
   2b544:	movs	r4, #1
   2b546:	b.n	2b506 <btrfs_fix_super_size@@Base+0x8e>
   2b548:	movs	r4, #0
   2b54a:	b.n	2b506 <btrfs_fix_super_size@@Base+0x8e>
   2b54c:	str	r7, [r6, r4]
   2b54e:	movs	r1, r0
   2b550:	str	r0, [r4, r7]
   2b552:	movs	r1, r0
   2b554:	str	r7, [r7, r4]
   2b556:	movs	r1, r0
   2b558:	str	r1, [r2, r7]
   2b55a:	movs	r1, r0

0002b55c <btrfs_fix_device_and_super_size@@Base>:
   2b55c:	push	{r3, r4, r5, r6, r7, lr}
   2b55e:	mov	r5, r0
   2b560:	ldr.w	r3, [r0, #352]	; 0x160
   2b564:	add.w	r7, r3, #72	; 0x48
   2b568:	ldr	r2, [r3, #92]	; 0x5c
   2b56a:	cbz	r2, 2b57a <btrfs_fix_device_and_super_size@@Base+0x1e>
   2b56c:	ldr	r0, [pc, #132]	; (2b5f4 <btrfs_fix_device_and_super_size@@Base+0x98>)
   2b56e:	add	r0, pc
   2b570:	bl	17b7c <__btrfs_error@@Base>
   2b574:	mvn.w	r0, #94	; 0x5e
   2b578:	pop	{r3, r4, r5, r6, r7, pc}
   2b57a:	ldr	r4, [r3, #72]	; 0x48
   2b57c:	cmp	r7, r4
   2b57e:	bne.n	2b5d0 <btrfs_fix_device_and_super_size@@Base+0x74>
   2b580:	ldr	r0, [pc, #116]	; (2b5f8 <btrfs_fix_device_and_super_size@@Base+0x9c>)
   2b582:	add	r0, pc
   2b584:	bl	17b7c <__btrfs_error@@Base>
   2b588:	mvn.w	r0, #18
   2b58c:	b.n	2b578 <btrfs_fix_device_and_super_size@@Base+0x1c>
   2b58e:	ldr	r2, [r3, #24]
   2b590:	adds	r2, #1
   2b592:	bne.n	2b5a6 <btrfs_fix_device_and_super_size@@Base+0x4a>
   2b594:	ldr	r0, [pc, #100]	; (2b5fc <btrfs_fix_device_and_super_size@@Base+0xa0>)
   2b596:	ldrd	r2, r3, [r3, #64]	; 0x40
   2b59a:	add	r0, pc
   2b59c:	bl	17b7c <__btrfs_error@@Base>
   2b5a0:	ldr	r0, [pc, #92]	; (2b600 <btrfs_fix_device_and_super_size@@Base+0xa4>)
   2b5a2:	add	r0, pc
   2b5a4:	b.n	2b584 <btrfs_fix_device_and_super_size@@Base+0x28>
   2b5a6:	ldr	r2, [r3, #28]
   2b5a8:	cmp	r2, #0
   2b5aa:	beq.n	2b594 <btrfs_fix_device_and_super_size@@Base+0x38>
   2b5ac:	ldr	r3, [r3, #0]
   2b5ae:	cmp	r3, r7
   2b5b0:	bne.n	2b58e <btrfs_fix_device_and_super_size@@Base+0x32>
   2b5b2:	movs	r6, #0
   2b5b4:	cmp	r4, r7
   2b5b6:	bne.n	2b5d4 <btrfs_fix_device_and_super_size@@Base+0x78>
   2b5b8:	mov	r0, r5
   2b5ba:	bl	2b478 <btrfs_fix_super_size@@Base>
   2b5be:	cmp	r0, #0
   2b5c0:	bgt.n	2b5c4 <btrfs_fix_device_and_super_size@@Base+0x68>
   2b5c2:	cbz	r6, 2b5e8 <btrfs_fix_device_and_super_size@@Base+0x8c>
   2b5c4:	ldr	r0, [pc, #60]	; (2b604 <btrfs_fix_device_and_super_size@@Base+0xa8>)
   2b5c6:	add	r0, pc
   2b5c8:	blx	8854 <puts@plt+0x4>
   2b5cc:	movs	r0, #1
   2b5ce:	b.n	2b578 <btrfs_fix_device_and_super_size@@Base+0x1c>
   2b5d0:	mov	r3, r4
   2b5d2:	b.n	2b5ae <btrfs_fix_device_and_super_size@@Base+0x52>
   2b5d4:	mov	r1, r4
   2b5d6:	mov	r0, r5
   2b5d8:	bl	2b2fc <btrfs_fix_device_size@@Base>
   2b5dc:	cmp	r0, #0
   2b5de:	blt.n	2b578 <btrfs_fix_device_and_super_size@@Base+0x1c>
   2b5e0:	ldr	r4, [r4, #0]
   2b5e2:	it	ne
   2b5e4:	movne	r6, #1
   2b5e6:	b.n	2b5b4 <btrfs_fix_device_and_super_size@@Base+0x58>
   2b5e8:	ldr	r0, [pc, #28]	; (2b608 <btrfs_fix_device_and_super_size@@Base+0xac>)
   2b5ea:	add	r0, pc
   2b5ec:	blx	8854 <puts@plt+0x4>
   2b5f0:	mov	r0, r6
   2b5f2:	b.n	2b578 <btrfs_fix_device_and_super_size@@Base+0x1c>
   2b5f4:	str	r5, [r2, r7]
   2b5f6:	movs	r1, r0
   2b5f8:	str	r2, [r7, r7]
   2b5fa:	movs	r1, r0
   2b5fc:	str	r2, [r6, r7]
   2b5fe:	movs	r1, r0
   2b600:	strh	r1, [r2, r0]
   2b602:	movs	r1, r0
   2b604:	strh	r0, [r6, r0]
   2b606:	movs	r1, r0
   2b608:	strh	r4, [r2, r1]
   2b60a:	movs	r1, r0
   2b60c:	ldr.w	ip, [pc, #80]	; 2b660 <btrfs_fix_device_and_super_size@@Base+0x104>
   2b610:	ldr	r4, [pc, #80]	; (2b664 <btrfs_fix_device_and_super_size@@Base+0x108>)
   2b612:	add	ip, pc
   2b614:	ldr	r3, [pc, #80]	; (2b668 <btrfs_fix_device_and_super_size@@Base+0x10c>)
   2b616:	push	{lr}
   2b618:	sub	sp, #92	; 0x5c
   2b61a:	ldr.w	r4, [ip, r4]
   2b61e:	add	r3, pc
   2b620:	ldr	r4, [r4, #0]
   2b622:	str	r4, [sp, #84]	; 0x54
   2b624:	mov.w	r4, #0
   2b628:	ldr	r4, [pc, #64]	; (2b66c <btrfs_fix_device_and_super_size@@Base+0x110>)
   2b62a:	ldr	r4, [r3, r4]
   2b62c:	ldr	r3, [pc, #64]	; (2b670 <btrfs_fix_device_and_super_size@@Base+0x114>)
   2b62e:	strd	r0, r2, [sp, #8]
   2b632:	add	r3, pc
   2b634:	ldr	r2, [pc, #60]	; (2b674 <btrfs_fix_device_and_super_size@@Base+0x118>)
   2b636:	strd	r1, r3, [sp]
   2b63a:	movs	r1, #1
   2b63c:	ldr	r3, [pc, #56]	; (2b678 <btrfs_fix_device_and_super_size@@Base+0x11c>)
   2b63e:	add	r2, pc
   2b640:	ldr	r0, [r4, #0]
   2b642:	add	r4, sp, #20
   2b644:	add	r3, pc
   2b646:	blx	8a64 <__fprintf_chk@plt+0x4>
   2b64a:	movs	r1, #16
   2b64c:	mov	r0, r4
   2b64e:	blx	88bc <backtrace@plt>
   2b652:	movs	r2, #2
   2b654:	mov	r1, r0
   2b656:	mov	r0, r4
   2b658:	blx	8bcc <backtrace_symbols_fd@plt>
   2b65c:	blx	8b84 <abort@plt>
   2b660:	str	r7, [sp, #440]	; 0x1b8
   2b662:	movs	r3, r0
   2b664:	lsls	r0, r5, #8
   2b666:	movs	r0, r0
   2b668:	str	r7, [sp, #392]	; 0x188
   2b66a:	movs	r3, r0
   2b66c:	lsls	r0, r7, #8
   2b66e:	movs	r0, r0
   2b670:	strb	r0, [r7, r6]
   2b672:	movs	r1, r0
   2b674:	strd	r0, r0, [r4], #-0
   2b678:	strb	r0, [r6, r2]
   2b67a:	movs	r1, r0

0002b67c <btrfs_start_transaction@@Base>:
   2b67c:	push	{r3, r4, r5, r6, r7, lr}
   2b67e:	mov	r5, r0
   2b680:	ldr.w	r6, [r0, #464]	; 0x1d0
   2b684:	mov	r7, r1
   2b686:	movs	r0, #1
   2b688:	movs	r1, #96	; 0x60
   2b68a:	blx	8588 <calloc@plt+0x4>
   2b68e:	ldr.w	r3, [r6, #368]	; 0x170
   2b692:	mov	r4, r0
   2b694:	cbnz	r3, 2b6f4 <btrfs_start_transaction@@Base+0x78>
   2b696:	cbz	r0, 2b6fa <btrfs_start_transaction@@Base+0x7e>
   2b698:	ldr	r3, [r5, #4]
   2b69a:	cbz	r3, 2b6b2 <btrfs_start_transaction@@Base+0x36>
   2b69c:	ldr	r0, [pc, #96]	; (2b700 <btrfs_start_transaction@@Base+0x84>)
   2b69e:	add	r0, pc
   2b6a0:	bl	17b7c <__btrfs_error@@Base>
   2b6a4:	mov	r0, r4
   2b6a6:	blx	8620 <free@plt+0x4>
   2b6aa:	mvn.w	r4, #21
   2b6ae:	mov	r0, r4
   2b6b0:	pop	{r3, r4, r5, r6, r7, pc}
   2b6b2:	ldr.w	r3, [r6, #304]	; 0x130
   2b6b6:	cbz	r3, 2b6be <btrfs_start_transaction@@Base+0x42>
   2b6b8:	ldr	r0, [pc, #72]	; (2b704 <btrfs_start_transaction@@Base+0x88>)
   2b6ba:	add	r0, pc
   2b6bc:	b.n	2b6a0 <btrfs_start_transaction@@Base+0x24>
   2b6be:	str	r6, [r0, #0]
   2b6c0:	ldrd	r3, r2, [r6, #232]	; 0xe8
   2b6c4:	str.w	r0, [r6, #304]	; 0x130
   2b6c8:	adds	r3, #1
   2b6ca:	adc.w	r2, r2, #0
   2b6ce:	strd	r3, r2, [r6, #232]	; 0xe8
   2b6d2:	strd	r3, r2, [r0, #8]
   2b6d6:	ldrh	r1, [r0, #32]
   2b6d8:	strd	r3, r2, [r5, #480]	; 0x1e0
   2b6dc:	ldr	r3, [r5, #0]
   2b6de:	bic.w	r1, r1, #510	; 0x1fe
   2b6e2:	str	r7, [r0, #48]	; 0x30
   2b6e4:	bic.w	r1, r1, #1
   2b6e8:	strh	r1, [r0, #32]
   2b6ea:	str	r3, [r5, #4]
   2b6ec:	ldr	r2, [r3, #80]	; 0x50
   2b6ee:	adds	r2, #1
   2b6f0:	str	r2, [r3, #80]	; 0x50
   2b6f2:	b.n	2b6ae <btrfs_start_transaction@@Base+0x32>
   2b6f4:	mvn.w	r4, #29
   2b6f8:	b.n	2b6ae <btrfs_start_transaction@@Base+0x32>
   2b6fa:	mvn.w	r4, #11
   2b6fe:	b.n	2b6ae <btrfs_start_transaction@@Base+0x32>
   2b700:	strb	r4, [r4, r1]
   2b702:	movs	r1, r0
   2b704:	strb	r2, [r7, r1]
   2b706:	movs	r1, r0

0002b708 <commit_tree_roots@@Base>:
   2b708:	ldr	r2, [pc, #264]	; (2b814 <commit_tree_roots@@Base+0x10c>)
   2b70a:	ldr	r3, [pc, #268]	; (2b818 <commit_tree_roots@@Base+0x110>)
   2b70c:	add	r2, pc
   2b70e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b712:	sub	sp, #28
   2b714:	ldr	r3, [r2, r3]
   2b716:	mov	r6, r0
   2b718:	mov	r5, r1
   2b71a:	ldr	r3, [r3, #0]
   2b71c:	str	r3, [sp, #20]
   2b71e:	mov.w	r3, #0
   2b722:	ldrb.w	r3, [r1, #364]	; 0x16c
   2b726:	ands.w	r3, r3, #2
   2b72a:	beq.n	2b744 <commit_tree_roots@@Base+0x3c>
   2b72c:	mov.w	sl, #0
   2b730:	ldr	r2, [pc, #232]	; (2b81c <commit_tree_roots@@Base+0x114>)
   2b732:	ldr	r3, [pc, #228]	; (2b818 <commit_tree_roots@@Base+0x110>)
   2b734:	add	r2, pc
   2b736:	ldr	r3, [r2, r3]
   2b738:	ldr	r2, [r3, #0]
   2b73a:	ldr	r3, [sp, #20]
   2b73c:	eors	r2, r3
   2b73e:	beq.n	2b80c <commit_tree_roots@@Base+0x104>
   2b740:	blx	8708 <__stack_chk_fail@plt>
   2b744:	ldr	r2, [r1, #28]
   2b746:	ldr	r2, [r2, #0]
   2b748:	ldr	r1, [r2, #80]	; 0x50
   2b74a:	str	r2, [sp, #16]
   2b74c:	adds	r1, #1
   2b74e:	str	r1, [r2, #80]	; 0x50
   2b750:	add	r1, sp, #16
   2b752:	strd	r3, r1, [sp]
   2b756:	ldr	r1, [r5, #28]
   2b758:	bl	18f84 <btrfs_cow_block@@Base>
   2b75c:	mov	sl, r0
   2b75e:	ldr	r0, [sp, #16]
   2b760:	bl	17320 <free_extent_buffer@@Base>
   2b764:	cmp.w	sl, #0
   2b768:	bne.n	2b730 <commit_tree_roots@@Base+0x28>
   2b76a:	mov.w	r1, #4294967295	; 0xffffffff
   2b76e:	mov	r0, r6
   2b770:	bl	235e4 <btrfs_run_delayed_refs@@Base>
   2b774:	cmp	r0, #0
   2b776:	bne.n	2b808 <commit_tree_roots@@Base+0x100>
   2b778:	add.w	fp, r5, #336	; 0x150
   2b77c:	str	r0, [sp, #12]
   2b77e:	ldr.w	r4, [r5, #336]	; 0x150
   2b782:	cmp	r4, fp
   2b784:	beq.n	2b72c <commit_tree_roots@@Base+0x24>
   2b786:	ldrd	r2, r3, [r4]
   2b78a:	sub.w	r7, r4, #520	; 0x208
   2b78e:	sub.w	r8, r4, #512	; 0x200
   2b792:	str	r3, [r2, #4]
   2b794:	str	r2, [r3, #0]
   2b796:	strd	r4, r4, [r4]
   2b79a:	subs	r4, #73	; 0x49
   2b79c:	ldr.w	r3, [r7, #464]	; 0x1d0
   2b7a0:	ldr.w	r9, [r3, #28]
   2b7a4:	ldr.w	ip, [r7]
   2b7a8:	ldr.w	r1, [r8, #180]	; 0xb4
   2b7ac:	ldr.w	r0, [r8, #176]	; 0xb0
   2b7b0:	ldrd	r2, r3, [ip, #40]	; 0x28
   2b7b4:	cmp	r1, r3
   2b7b6:	it	eq
   2b7b8:	cmpeq	r0, r2
   2b7ba:	beq.n	2b7f2 <commit_tree_roots@@Base+0xea>
   2b7bc:	str.w	r2, [r8, #176]	; 0xb0
   2b7c0:	mov	r1, r9
   2b7c2:	str.w	r3, [r8, #180]	; 0xb4
   2b7c6:	mov	r0, r6
   2b7c8:	ldrd	r3, r2, [r6, #8]
   2b7cc:	str.w	r2, [r8, #164]	; 0xa4
   2b7d0:	mov	r2, r4
   2b7d2:	str.w	r3, [r8, #160]	; 0xa0
   2b7d6:	ldrb.w	r3, [ip, #196]	; 0xc4
   2b7da:	strb.w	r3, [r7, #246]	; 0xf6
   2b7de:	mov	r3, r8
   2b7e0:	bl	28178 <btrfs_update_root@@Base>
   2b7e4:	subs.w	sl, r0, #0
   2b7e8:	blt.n	2b7f6 <commit_tree_roots@@Base+0xee>
   2b7ea:	mov	r0, r6
   2b7ec:	bl	2103c <btrfs_write_dirty_block_groups@@Base>
   2b7f0:	b.n	2b7a4 <commit_tree_roots@@Base+0x9c>
   2b7f2:	mov.w	sl, #0
   2b7f6:	ldr	r0, [r7, #4]
   2b7f8:	bl	17320 <free_extent_buffer@@Base>
   2b7fc:	ldr	r3, [sp, #12]
   2b7fe:	str	r3, [r7, #4]
   2b800:	cmp.w	sl, #0
   2b804:	beq.n	2b77e <commit_tree_roots@@Base+0x76>
   2b806:	b.n	2b730 <commit_tree_roots@@Base+0x28>
   2b808:	mov	sl, r0
   2b80a:	b.n	2b730 <commit_tree_roots@@Base+0x28>
   2b80c:	mov	r0, sl
   2b80e:	add	sp, #28
   2b810:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b814:	str	r6, [sp, #464]	; 0x1d0
   2b816:	movs	r3, r0
   2b818:	lsls	r0, r5, #8
   2b81a:	movs	r0, r0
   2b81c:	str	r6, [sp, #304]	; 0x130
   2b81e:	movs	r3, r0

0002b820 <__commit_transaction@@Base>:
   2b820:	ldr	r2, [pc, #196]	; (2b8e8 <__commit_transaction@@Base+0xc8>)
   2b822:	ldr	r3, [pc, #200]	; (2b8ec <__commit_transaction@@Base+0xcc>)
   2b824:	add	r2, pc
   2b826:	stmdb	sp!, {r4, r5, r6, r7, r9, sl, fp, lr}
   2b82a:	sub	sp, #40	; 0x28
   2b82c:	ldr	r3, [r2, r3]
   2b82e:	add.w	fp, sp, #24
   2b832:	ldr.w	r6, [r1, #464]	; 0x1d0
   2b836:	add.w	sl, sp, #16
   2b83a:	ldr	r3, [r3, #0]
   2b83c:	str	r3, [sp, #36]	; 0x24
   2b83e:	mov.w	r3, #0
   2b842:	mov	r5, r0
   2b844:	add.w	r9, r6, #64	; 0x40
   2b848:	movs	r7, #1
   2b84a:	movs	r2, #0
   2b84c:	movs	r3, #0
   2b84e:	mov	r0, r9
   2b850:	strd	fp, r7, [sp, #4]
   2b854:	str.w	sl, [sp]
   2b858:	bl	17218 <find_first_extent_bit@@Base>
   2b85c:	cbz	r0, 2b89a <__commit_transaction@@Base+0x7a>
   2b85e:	ldr	r2, [pc, #144]	; (2b8f0 <__commit_transaction@@Base+0xd0>)
   2b860:	ldr	r3, [pc, #136]	; (2b8ec <__commit_transaction@@Base+0xcc>)
   2b862:	add	r2, pc
   2b864:	ldr	r3, [r2, r3]
   2b866:	ldr	r2, [r3, #0]
   2b868:	ldr	r3, [sp, #36]	; 0x24
   2b86a:	eors	r2, r3
   2b86c:	beq.n	2b8de <__commit_transaction@@Base+0xbe>
   2b86e:	blx	8708 <__stack_chk_fail@plt>
   2b872:	ldr	r0, [pc, #128]	; (2b8f4 <__commit_transaction@@Base+0xd4>)
   2b874:	movs	r2, #1
   2b876:	movs	r1, #145	; 0x91
   2b878:	add	r0, pc
   2b87a:	bl	2b60c <btrfs_fix_device_and_super_size@@Base+0xb0>
   2b87e:	ldrd	r2, r3, [sp, #16]
   2b882:	mov	r0, r4
   2b884:	ldr	r1, [r4, #76]	; 0x4c
   2b886:	adds	r2, r2, r1
   2b888:	adc.w	r3, r3, #0
   2b88c:	strd	r2, r3, [sp, #16]
   2b890:	bl	179ce <clear_extent_buffer_dirty@@Base>
   2b894:	mov	r0, r4
   2b896:	bl	17320 <free_extent_buffer@@Base>
   2b89a:	ldrd	r2, r3, [sp, #16]
   2b89e:	ldrd	r0, r1, [sp, #24]
   2b8a2:	cmp	r1, r3
   2b8a4:	it	eq
   2b8a6:	cmpeq	r0, r2
   2b8a8:	bcc.n	2b84a <__commit_transaction@@Base+0x2a>
   2b8aa:	mov	r0, r9
   2b8ac:	bl	173f2 <find_first_extent_buffer@@Base>
   2b8b0:	mov	r4, r0
   2b8b2:	cmp	r0, #0
   2b8b4:	beq.n	2b872 <__commit_transaction@@Base+0x52>
   2b8b6:	ldrd	r0, r1, [r0, #40]	; 0x28
   2b8ba:	ldrd	r2, r3, [sp, #16]
   2b8be:	cmp	r1, r3
   2b8c0:	it	eq
   2b8c2:	cmpeq	r0, r2
   2b8c4:	bne.n	2b872 <__commit_transaction@@Base+0x52>
   2b8c6:	mov	r2, r4
   2b8c8:	mov	r1, r6
   2b8ca:	mov	r0, r5
   2b8cc:	bl	1dcdc <write_tree_block@@Base>
   2b8d0:	mov	r2, r0
   2b8d2:	cmp	r0, #0
   2b8d4:	beq.n	2b87e <__commit_transaction@@Base+0x5e>
   2b8d6:	ldr	r0, [pc, #32]	; (2b8f8 <__commit_transaction@@Base+0xd8>)
   2b8d8:	movs	r1, #147	; 0x93
   2b8da:	add	r0, pc
   2b8dc:	b.n	2b87a <__commit_transaction@@Base+0x5a>
   2b8de:	movs	r0, #0
   2b8e0:	add	sp, #40	; 0x28
   2b8e2:	ldmia.w	sp!, {r4, r5, r6, r7, r9, sl, fp, pc}
   2b8e6:	nop
   2b8e8:	str	r5, [sp, #368]	; 0x170
   2b8ea:	movs	r3, r0
   2b8ec:	lsls	r0, r5, #8
   2b8ee:	movs	r0, r0
   2b8f0:	str	r5, [sp, #120]	; 0x78
   2b8f2:	movs	r3, r0
   2b8f4:	strh	r2, [r6, r3]
   2b8f6:	movs	r1, r0
   2b8f8:	stc	0, cr0, [sl], {-0}

0002b8fc <btrfs_commit_transaction@@Base>:
   2b8fc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b900:	mov	r6, r0
   2b902:	ldr	r3, [r0, #0]
   2b904:	sub	sp, #20
   2b906:	ldrd	r8, r9, [r0, #8]
   2b90a:	mov	r5, r1
   2b90c:	ldr.w	r7, [r1, #464]	; 0x1d0
   2b910:	ldr.w	sl, [r3, #368]	; 0x170
   2b914:	cmp.w	sl, #0
   2b918:	bne.w	2ba66 <btrfs_commit_transaction@@Base+0x16a>
   2b91c:	mov.w	r1, #4294967295	; 0xffffffff
   2b920:	bl	235e4 <btrfs_run_delayed_refs@@Base>
   2b924:	subs	r4, r0, #0
   2b926:	blt.n	2b9d6 <btrfs_commit_transaction@@Base+0xda>
   2b928:	ldrd	r3, r0, [r5]
   2b92c:	cmp	r0, r3
   2b92e:	bne.n	2b984 <btrfs_commit_transaction@@Base+0x88>
   2b930:	mov	r1, r7
   2b932:	mov	r0, r6
   2b934:	bl	2b708 <commit_tree_roots@@Base>
   2b938:	subs	r4, r0, #0
   2b93a:	blt.n	2b9d6 <btrfs_commit_transaction@@Base+0xda>
   2b93c:	add.w	sl, r7, #128	; 0x80
   2b940:	mov.w	fp, #1
   2b944:	ldr	r3, [r6, #64]	; 0x40
   2b946:	cmp	r3, #0
   2b948:	bne.n	2b9e4 <btrfs_commit_transaction@@Base+0xe8>
   2b94a:	mov.w	r2, #4294967295	; 0xffffffff
   2b94e:	strd	fp, r3, [sp, #8]
   2b952:	mov	r0, sl
   2b954:	mov.w	r3, #4294967295	; 0xffffffff
   2b958:	strd	r2, r3, [sp]
   2b95c:	movs	r2, #0
   2b95e:	movs	r3, #0
   2b960:	bl	1725a <test_range_bit@@Base>
   2b964:	cmp	r0, #0
   2b966:	bne.n	2b9e4 <btrfs_commit_transaction@@Base+0xe8>
   2b968:	mov	r1, r5
   2b96a:	mov	r0, r6
   2b96c:	bl	2b820 <__commit_transaction@@Base>
   2b970:	ldr.w	sl, [r6, #64]	; 0x40
   2b974:	cmp.w	sl, #0
   2b978:	beq.n	2b9fe <btrfs_commit_transaction@@Base+0x102>
   2b97a:	ldr	r0, [pc, #240]	; (2ba6c <btrfs_commit_transaction@@Base+0x170>)
   2b97c:	add	r0, pc
   2b97e:	bl	17b7c <__btrfs_error@@Base>
   2b982:	b.n	2b9d6 <btrfs_commit_transaction@@Base+0xda>
   2b984:	ldr.w	r3, [r5, #464]	; 0x1d0
   2b988:	ldr	r2, [r3, #28]
   2b98a:	cmp	r2, r5
   2b98c:	beq.n	2b930 <btrfs_commit_transaction@@Base+0x34>
   2b98e:	ldr	r3, [r3, #32]
   2b990:	cmp	r3, r5
   2b992:	beq.n	2b930 <btrfs_commit_transaction@@Base+0x34>
   2b994:	bl	17320 <free_extent_buffer@@Base>
   2b998:	ldr	r3, [r5, #0]
   2b99a:	str.w	sl, [r5, #4]
   2b99e:	mov	r0, r6
   2b9a0:	ldrd	r1, r2, [r3, #40]	; 0x28
   2b9a4:	str.w	r1, [r5, #184]	; 0xb8
   2b9a8:	str.w	r2, [r5, #188]	; 0xbc
   2b9ac:	ldrd	r1, r2, [r6, #8]
   2b9b0:	str.w	r1, [r5, #168]	; 0xa8
   2b9b4:	str.w	r2, [r5, #172]	; 0xac
   2b9b8:	addw	r2, r5, #447	; 0x1bf
   2b9bc:	ldrb.w	r3, [r3, #196]	; 0xc4
   2b9c0:	ldr.w	r1, [r5, #464]	; 0x1d0
   2b9c4:	strb.w	r3, [r5, #246]	; 0xf6
   2b9c8:	add.w	r3, r5, #8
   2b9cc:	ldr	r1, [r1, #28]
   2b9ce:	bl	28178 <btrfs_update_root@@Base>
   2b9d2:	subs	r4, r0, #0
   2b9d4:	bge.n	2b930 <btrfs_commit_transaction@@Base+0x34>
   2b9d6:	mov	r0, r6
   2b9d8:	bl	249e4 <btrfs_destroy_delayed_refs@@Base>
   2b9dc:	mov	r0, r6
   2b9de:	blx	8620 <free@plt+0x4>
   2b9e2:	b.n	2ba38 <btrfs_commit_transaction@@Base+0x13c>
   2b9e4:	mov	r0, r6
   2b9e6:	bl	2103c <btrfs_write_dirty_block_groups@@Base>
   2b9ea:	subs	r4, r0, #0
   2b9ec:	blt.n	2b9d6 <btrfs_commit_transaction@@Base+0xda>
   2b9ee:	mov.w	r1, #4294967295	; 0xffffffff
   2b9f2:	mov	r0, r6
   2b9f4:	bl	235e4 <btrfs_run_delayed_refs@@Base>
   2b9f8:	subs	r4, r0, #0
   2b9fa:	bge.n	2b944 <btrfs_commit_transaction@@Base+0x48>
   2b9fc:	b.n	2b9d6 <btrfs_commit_transaction@@Base+0xda>
   2b9fe:	mov	r0, r6
   2ba00:	add.w	r7, r7, #356	; 0x164
   2ba04:	bl	1d9ec <write_ctree_super@@Base>
   2ba08:	mov	r4, r0
   2ba0a:	mov	r0, r6
   2ba0c:	bl	21288 <btrfs_finish_extent_commit@@Base>
   2ba10:	mov	r0, r6
   2ba12:	blx	8620 <free@plt+0x4>
   2ba16:	ldr	r0, [r5, #4]
   2ba18:	bl	17320 <free_extent_buffer@@Base>
   2ba1c:	str.w	sl, [r5, #4]
   2ba20:	ldr	r5, [r7, #0]
   2ba22:	ldr	r6, [pc, #76]	; (2ba70 <btrfs_commit_transaction@@Base+0x174>)
   2ba24:	subs	r5, #44	; 0x2c
   2ba26:	str.w	sl, [r7, #-52]
   2ba2a:	add	r6, pc
   2ba2c:	strd	r8, r9, [r7, #-116]	; 0x74
   2ba30:	add.w	r3, r5, #44	; 0x2c
   2ba34:	cmp	r3, r7
   2ba36:	bne.n	2ba40 <btrfs_commit_transaction@@Base+0x144>
   2ba38:	mov	r0, r4
   2ba3a:	add	sp, #20
   2ba3c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ba40:	ldrd	r2, r3, [r5, #32]
   2ba44:	orrs.w	r1, r2, r3
   2ba48:	beq.n	2ba60 <btrfs_commit_transaction@@Base+0x164>
   2ba4a:	strd	r2, r3, [sp, #8]
   2ba4e:	mov	r0, r6
   2ba50:	ldrd	r2, r3, [r5]
   2ba54:	strd	r2, r3, [sp]
   2ba58:	mov	r2, r8
   2ba5a:	mov	r3, r9
   2ba5c:	bl	17b00 <__btrfs_warning@@Base>
   2ba60:	ldr	r5, [r5, #44]	; 0x2c
   2ba62:	subs	r5, #44	; 0x2c
   2ba64:	b.n	2ba30 <btrfs_commit_transaction@@Base+0x134>
   2ba66:	mvn.w	r4, #29
   2ba6a:	b.n	2ba38 <btrfs_commit_transaction@@Base+0x13c>
   2ba6c:	strh	r0, [r1, r0]
   2ba6e:	movs	r1, r0
   2ba70:	str	r4, [r7, r5]
   2ba72:	movs	r1, r0

0002ba74 <btrfs_abort_transaction@@Base>:
   2ba74:	ldr	r3, [r0, #0]
   2ba76:	str.w	r1, [r3, #368]	; 0x170
   2ba7a:	bx	lr
   2ba7c:	push	{r4, lr}
   2ba7e:	mov	r4, r1
   2ba80:	ldr	r1, [pc, #84]	; (2bad8 <btrfs_abort_transaction@@Base+0x64>)
   2ba82:	sub	sp, #24
   2ba84:	ldr	r3, [pc, #84]	; (2badc <btrfs_abort_transaction@@Base+0x68>)
   2ba86:	add	r1, pc
   2ba88:	ldr	r3, [r1, r3]
   2ba8a:	mov	r1, sp
   2ba8c:	ldr	r3, [r3, #0]
   2ba8e:	str	r3, [sp, #20]
   2ba90:	mov.w	r3, #0
   2ba94:	movs	r3, #25
   2ba96:	muls	r2, r3
   2ba98:	movs	r3, #17
   2ba9a:	adds	r2, #101	; 0x65
   2ba9c:	bl	17a1a <read_extent_buffer@@Base>
   2baa0:	ldr.w	r3, [sp, #13]
   2baa4:	ldr.w	r2, [sp, #9]
   2baa8:	str.w	r3, [r4, #13]
   2baac:	ldrb.w	r3, [sp, #8]
   2bab0:	str.w	r2, [r4, #9]
   2bab4:	ldr	r2, [pc, #40]	; (2bae0 <btrfs_abort_transaction@@Base+0x6c>)
   2bab6:	strb	r3, [r4, #8]
   2bab8:	ldr	r3, [sp, #0]
   2baba:	add	r2, pc
   2babc:	str	r3, [r4, #0]
   2babe:	ldr	r3, [sp, #4]
   2bac0:	str	r3, [r4, #4]
   2bac2:	ldr	r3, [pc, #24]	; (2badc <btrfs_abort_transaction@@Base+0x68>)
   2bac4:	ldr	r3, [r2, r3]
   2bac6:	ldr	r2, [r3, #0]
   2bac8:	ldr	r3, [sp, #20]
   2baca:	eors	r2, r3
   2bacc:	beq.n	2bad2 <btrfs_abort_transaction@@Base+0x5e>
   2bace:	blx	8708 <__stack_chk_fail@plt>
   2bad2:	add	sp, #24
   2bad4:	pop	{r4, pc}
   2bad6:	nop
   2bad8:	str	r2, [sp, #1000]	; 0x3e8
   2bada:	movs	r3, r0
   2badc:	lsls	r0, r5, #8
   2bade:	movs	r0, r0
   2bae0:	str	r2, [sp, #792]	; 0x318
   2bae2:	movs	r3, r0
   2bae4:	push	{r4, r5, r6, r7, lr}
   2bae6:	sub	sp, #36	; 0x24
   2bae8:	ldr	r6, [pc, #112]	; (2bb5c <btrfs_abort_transaction@@Base+0xe8>)
   2baea:	mov	r4, r3
   2baec:	ldr	r5, [pc, #112]	; (2bb60 <btrfs_abort_transaction@@Base+0xec>)
   2baee:	add	r6, pc
   2baf0:	ldr	r5, [r6, r5]
   2baf2:	ldrd	r6, r7, [r2, #40]	; 0x28
   2baf6:	ldr	r5, [r5, #0]
   2baf8:	str	r5, [sp, #28]
   2bafa:	mov.w	r5, #0
   2bafe:	movs	r5, #198	; 0xc6
   2bb00:	strb.w	r5, [sp, #16]
   2bb04:	strd	r6, r7, [sp, #8]
   2bb08:	ldr.w	r5, [r2, #49]	; 0x31
   2bb0c:	ldr.w	r2, [r2, #53]	; 0x35
   2bb10:	str.w	r5, [sp, #17]
   2bb14:	str.w	r2, [sp, #21]
   2bb18:	ldr	r2, [sp, #56]	; 0x38
   2bb1a:	str	r2, [sp, #4]
   2bb1c:	movs	r2, #0
   2bb1e:	str	r2, [sp, #0]
   2bb20:	add	r2, sp, #8
   2bb22:	bl	1a93c <btrfs_search_slot@@Base>
   2bb26:	cmp	r0, #0
   2bb28:	blt.n	2bb42 <btrfs_abort_transaction@@Base+0xce>
   2bb2a:	ittte	eq
   2bb2c:	ldreq	r3, [r4, #32]
   2bb2e:	moveq	r1, #25
   2bb30:	ldreq	r2, [r4, #0]
   2bb32:	mvnne.w	r0, #1
   2bb36:	ittt	eq
   2bb38:	mlaeq	r3, r1, r3, r2
   2bb3c:	ldreq.w	r0, [r3, #214]	; 0xd6
   2bb40:	addeq	r0, #101	; 0x65
   2bb42:	ldr	r2, [pc, #32]	; (2bb64 <btrfs_abort_transaction@@Base+0xf0>)
   2bb44:	ldr	r3, [pc, #24]	; (2bb60 <btrfs_abort_transaction@@Base+0xec>)
   2bb46:	add	r2, pc
   2bb48:	ldr	r3, [r2, r3]
   2bb4a:	ldr	r2, [r3, #0]
   2bb4c:	ldr	r3, [sp, #28]
   2bb4e:	eors	r2, r3
   2bb50:	beq.n	2bb56 <btrfs_abort_transaction@@Base+0xe2>
   2bb52:	blx	8708 <__stack_chk_fail@plt>
   2bb56:	add	sp, #36	; 0x24
   2bb58:	pop	{r4, r5, r6, r7, pc}
   2bb5a:	nop
   2bb5c:	str	r2, [sp, #584]	; 0x248
   2bb5e:	movs	r3, r0
   2bb60:	lsls	r0, r5, #8
   2bb62:	movs	r0, r0
   2bb64:	str	r2, [sp, #232]	; 0xe8
   2bb66:	movs	r3, r0
   2bb68:	push	{r4}
   2bb6a:	ldr	r4, [r1, #0]
   2bb6c:	ldr	r2, [r1, #32]
   2bb6e:	adds	r2, #1
   2bb70:	str	r2, [r1, #32]
   2bb72:	ldr.w	r4, [r4, #192]	; 0xc0
   2bb76:	cmp	r2, r4
   2bb78:	bcc.n	2bb8c <btrfs_abort_transaction@@Base+0x118>
   2bb7a:	movs	r2, #0
   2bb7c:	ldr.w	r4, [sp], #4
   2bb80:	strb.w	r2, [r1, #65]	; 0x41
   2bb84:	ldr.w	r0, [r0, #464]	; 0x1d0
   2bb88:	b.w	1bd70 <btrfs_next_sibling_tree_block@@Base>
   2bb8c:	movs	r0, #0
   2bb8e:	ldr.w	r4, [sp], #4
   2bb92:	bx	lr
   2bb94:	push	{r4, r5, r6, lr}
   2bb96:	lsrs	r4, r2, #5
   2bb98:	and.w	r6, r2, #31
   2bb9c:	bic.w	r2, r2, #31
   2bba0:	ldr.w	r5, [r0, r4, lsl #2]
   2bba4:	mov.w	r4, #4294967295	; 0xffffffff
   2bba8:	lsls	r4, r6
   2bbaa:	eors	r5, r3
   2bbac:	ands	r4, r5
   2bbae:	cbz	r4, 2bbe4 <btrfs_abort_transaction@@Base+0x170>
   2bbb0:	uxth	r3, r4
   2bbb2:	cbnz	r3, 2bbf4 <btrfs_abort_transaction@@Base+0x180>
   2bbb4:	lsrs	r4, r4, #16
   2bbb6:	movs	r3, #16
   2bbb8:	tst.w	r4, #255	; 0xff
   2bbbc:	itt	eq
   2bbbe:	lsreq	r4, r4, #8
   2bbc0:	addeq	r3, #8
   2bbc2:	lsls	r6, r4, #28
   2bbc4:	itt	eq
   2bbc6:	lsreq	r4, r4, #4
   2bbc8:	addeq	r3, #4
   2bbca:	lsls	r5, r4, #30
   2bbcc:	itt	eq
   2bbce:	lsreq	r4, r4, #2
   2bbd0:	addeq	r3, #2
   2bbd2:	lsls	r0, r4, #31
   2bbd4:	it	pl
   2bbd6:	addpl	r3, #1
   2bbd8:	add	r3, r2
   2bbda:	cmp	r1, r3
   2bbdc:	it	cs
   2bbde:	movcs	r1, r3
   2bbe0:	mov	r0, r1
   2bbe2:	pop	{r4, r5, r6, pc}
   2bbe4:	adds	r2, #32
   2bbe6:	cmp	r2, r1
   2bbe8:	bcs.n	2bbe0 <btrfs_abort_transaction@@Base+0x16c>
   2bbea:	lsrs	r4, r2, #5
   2bbec:	ldr.w	r4, [r0, r4, lsl #2]
   2bbf0:	eors	r4, r3
   2bbf2:	b.n	2bbae <btrfs_abort_transaction@@Base+0x13a>
   2bbf4:	movs	r3, #0
   2bbf6:	b.n	2bbb8 <btrfs_abort_transaction@@Base+0x144>
   2bbf8:	ldr.w	ip, [pc, #80]	; 2bc4c <btrfs_abort_transaction@@Base+0x1d8>
   2bbfc:	ldr	r4, [pc, #80]	; (2bc50 <btrfs_abort_transaction@@Base+0x1dc>)
   2bbfe:	add	ip, pc
   2bc00:	ldr	r3, [pc, #80]	; (2bc54 <btrfs_abort_transaction@@Base+0x1e0>)
   2bc02:	push	{lr}
   2bc04:	sub	sp, #92	; 0x5c
   2bc06:	ldr.w	r4, [ip, r4]
   2bc0a:	add	r3, pc
   2bc0c:	ldr	r4, [r4, #0]
   2bc0e:	str	r4, [sp, #84]	; 0x54
   2bc10:	mov.w	r4, #0
   2bc14:	ldr	r4, [pc, #64]	; (2bc58 <btrfs_abort_transaction@@Base+0x1e4>)
   2bc16:	ldr	r4, [r3, r4]
   2bc18:	movs	r3, #0
   2bc1a:	strd	r2, r1, [sp]
   2bc1e:	movs	r1, #1
   2bc20:	strd	r0, r3, [sp, #8]
   2bc24:	ldr	r2, [pc, #52]	; (2bc5c <btrfs_abort_transaction@@Base+0x1e8>)
   2bc26:	ldr	r3, [pc, #56]	; (2bc60 <btrfs_abort_transaction@@Base+0x1ec>)
   2bc28:	ldr	r0, [r4, #0]
   2bc2a:	add	r4, sp, #20
   2bc2c:	add	r3, pc
   2bc2e:	add	r2, pc
   2bc30:	blx	8a64 <__fprintf_chk@plt+0x4>
   2bc34:	movs	r1, #16
   2bc36:	mov	r0, r4
   2bc38:	blx	88bc <backtrace@plt>
   2bc3c:	movs	r2, #2
   2bc3e:	mov	r1, r0
   2bc40:	mov	r0, r4
   2bc42:	blx	8bcc <backtrace_symbols_fd@plt>
   2bc46:	blx	8b84 <abort@plt>
   2bc4a:	nop
   2bc4c:	str	r1, [sp, #520]	; 0x208
   2bc4e:	movs	r3, r0
   2bc50:	lsls	r0, r5, #8
   2bc52:	movs	r0, r0
   2bc54:	str	r1, [sp, #472]	; 0x1d8
   2bc56:	movs	r3, r0
   2bc58:	lsls	r0, r7, #8
   2bc5a:	movs	r0, r0
   2bc5c:	b.n	2c3a2 <btrfs_abort_transaction@@Base+0x92e>
   2bc5e:	movs	r0, r0
   2bc60:	ldr	r7, [pc, #844]	; (2bfb0 <btrfs_abort_transaction@@Base+0x53c>)
   2bc62:	movs	r1, r0
   2bc64:	push	{r3, lr}
   2bc66:	cbnz	r3, 2bc6c <btrfs_abort_transaction@@Base+0x1f8>
   2bc68:	bl	2bbf8 <btrfs_abort_transaction@@Base+0x184>
   2bc6c:	pop	{r3, pc}
   2bc6e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bc72:	mov	r6, r2
   2bc74:	ldr	r2, [pc, #192]	; (2bd38 <btrfs_abort_transaction@@Base+0x2c4>)
   2bc76:	mov	r7, r3
   2bc78:	ldr	r3, [pc, #192]	; (2bd3c <btrfs_abort_transaction@@Base+0x2c8>)
   2bc7a:	sub	sp, #28
   2bc7c:	add	r2, pc
   2bc7e:	ldr.w	fp, [r0]
   2bc82:	mov	r1, sp
   2bc84:	mov	sl, r0
   2bc86:	ldr	r3, [r2, r3]
   2bc88:	ldr	r2, [r0, #32]
   2bc8a:	mov	r0, fp
   2bc8c:	ldr	r3, [r3, #0]
   2bc8e:	str	r3, [sp, #20]
   2bc90:	mov.w	r3, #0
   2bc94:	bl	2ba7c <btrfs_abort_transaction@@Base+0x8>
   2bc98:	ldrb.w	r3, [sp, #8]
   2bc9c:	ldr	r1, [pc, #160]	; (2bd40 <btrfs_abort_transaction@@Base+0x2cc>)
   2bc9e:	sub.w	r2, r3, #200	; 0xc8
   2bca2:	ldr	r0, [pc, #160]	; (2bd44 <btrfs_abort_transaction@@Base+0x2d0>)
   2bca4:	negs	r3, r2
   2bca6:	add	r1, pc
   2bca8:	adcs	r3, r2
   2bcaa:	add	r0, pc
   2bcac:	movs	r2, #62	; 0x3e
   2bcae:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2bcb2:	ldrd	r4, r5, [sp]
   2bcb6:	ldr.w	r3, [sp, #9]
   2bcba:	cmp	r7, r5
   2bcbc:	ldr.w	r2, [sp, #13]
   2bcc0:	it	eq
   2bcc2:	cmpeq	r6, r4
   2bcc4:	bcc.n	2bd2e <btrfs_abort_transaction@@Base+0x2ba>
   2bcc6:	adds.w	r8, r4, r3
   2bcca:	adc.w	r9, r5, r2
   2bcce:	cmp	r7, r9
   2bcd0:	it	eq
   2bcd2:	cmpeq	r6, r8
   2bcd4:	ite	cc
   2bcd6:	movcc	r3, #1
   2bcd8:	movcs	r3, #0
   2bcda:	ldr	r1, [pc, #108]	; (2bd48 <btrfs_abort_transaction@@Base+0x2d4>)
   2bcdc:	movs	r2, #66	; 0x42
   2bcde:	ldr	r0, [pc, #108]	; (2bd4c <btrfs_abort_transaction@@Base+0x2d8>)
   2bce0:	add	r1, pc
   2bce2:	add	r0, pc
   2bce4:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2bce8:	ldr.w	r3, [fp, #92]	; 0x5c
   2bcec:	subs	r0, r6, r4
   2bcee:	sbc.w	r1, r7, r5
   2bcf2:	ldr.w	r2, [r3, #388]	; 0x184
   2bcf6:	movs	r3, #0
   2bcf8:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2bcfc:	ldr.w	r3, [sl, #32]
   2bd00:	movs	r1, #25
   2bd02:	mla	r3, r1, r3, fp
   2bd06:	ldr.w	r1, [r3, #214]	; 0xd6
   2bd0a:	adds	r1, #101	; 0x65
   2bd0c:	mov	r2, r0
   2bd0e:	mov	r0, fp
   2bd10:	bl	17ab4 <extent_buffer_test_bit@@Base>
   2bd14:	ldr	r2, [pc, #56]	; (2bd50 <btrfs_abort_transaction@@Base+0x2dc>)
   2bd16:	ldr	r3, [pc, #36]	; (2bd3c <btrfs_abort_transaction@@Base+0x2c8>)
   2bd18:	add	r2, pc
   2bd1a:	ldr	r3, [r2, r3]
   2bd1c:	subs	r0, #0
   2bd1e:	it	ne
   2bd20:	movne	r0, #1
   2bd22:	ldr	r2, [r3, #0]
   2bd24:	ldr	r3, [sp, #20]
   2bd26:	eors	r2, r3
   2bd28:	beq.n	2bd32 <btrfs_abort_transaction@@Base+0x2be>
   2bd2a:	blx	8708 <__stack_chk_fail@plt>
   2bd2e:	movs	r3, #0
   2bd30:	b.n	2bcda <btrfs_abort_transaction@@Base+0x266>
   2bd32:	add	sp, #28
   2bd34:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bd38:	str	r1, [sp, #16]
   2bd3a:	movs	r3, r0
   2bd3c:	lsls	r0, r5, #8
   2bd3e:	movs	r0, r0
   2bd40:	strb	r5, [r6, r0]
   2bd42:	movs	r1, r0
   2bd44:	ldr	r7, [pc, #412]	; (2bee4 <btrfs_abort_transaction@@Base+0x470>)
   2bd46:	movs	r1, r0
   2bd48:	strh	r3, [r7, r7]
   2bd4a:	movs	r1, r0
   2bd4c:	ldr	r7, [pc, #348]	; (2beac <btrfs_abort_transaction@@Base+0x438>)
   2bd4e:	movs	r1, r0
   2bd50:	str	r0, [sp, #416]	; 0x1a0
   2bd52:	movs	r3, r0
   2bd54:	push	{r0, r1, r2, r4, r5, lr}
   2bd56:	movs	r5, #1
   2bd58:	str	r5, [sp, #4]
   2bd5a:	mov	r4, r3
   2bd5c:	ldr	r5, [sp, #24]
   2bd5e:	str	r5, [sp, #0]
   2bd60:	bl	1a93c <btrfs_search_slot@@Base>
   2bd64:	cmp	r0, #0
   2bd66:	blt.n	2bd92 <btrfs_abort_transaction@@Base+0x31e>
   2bd68:	bne.n	2bd7a <btrfs_abort_transaction@@Base+0x306>
   2bd6a:	ldr	r1, [pc, #44]	; (2bd98 <btrfs_abort_transaction@@Base+0x324>)
   2bd6c:	movs	r2, #89	; 0x59
   2bd6e:	ldr	r0, [pc, #44]	; (2bd9c <btrfs_abort_transaction@@Base+0x328>)
   2bd70:	add	r1, pc
   2bd72:	adds	r1, #20
   2bd74:	add	r0, pc
   2bd76:	bl	2bbf8 <btrfs_abort_transaction@@Base+0x184>
   2bd7a:	ldr	r3, [r4, #32]
   2bd7c:	cbnz	r3, 2bd8c <btrfs_abort_transaction@@Base+0x318>
   2bd7e:	ldr	r1, [pc, #32]	; (2bda0 <btrfs_abort_transaction@@Base+0x32c>)
   2bd80:	movs	r2, #94	; 0x5e
   2bd82:	ldr	r0, [pc, #32]	; (2bda4 <btrfs_abort_transaction@@Base+0x330>)
   2bd84:	add	r1, pc
   2bd86:	adds	r1, #20
   2bd88:	add	r0, pc
   2bd8a:	b.n	2bd76 <btrfs_abort_transaction@@Base+0x302>
   2bd8c:	movs	r0, #0
   2bd8e:	subs	r3, #1
   2bd90:	str	r3, [r4, #32]
   2bd92:	add	sp, #12
   2bd94:	pop	{r4, r5, pc}
   2bd96:	nop
   2bd98:	strh	r3, [r5, r5]
   2bd9a:	movs	r1, r0
   2bd9c:	lsrs	r2, r7, #27
   2bd9e:	movs	r1, r0
   2bda0:	strh	r7, [r2, r5]
   2bda2:	movs	r1, r0
   2bda4:	lsrs	r6, r4, #27
   2bda6:	movs	r1, r0
   2bda8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2bdac:	mov	r6, r2
   2bdae:	ldr	r2, [pc, #156]	; (2be4c <btrfs_abort_transaction@@Base+0x3d8>)
   2bdb0:	sub	sp, #36	; 0x24
   2bdb2:	ldr	r3, [pc, #156]	; (2be50 <btrfs_abort_transaction@@Base+0x3dc>)
   2bdb4:	mov	r8, r0
   2bdb6:	add	r2, pc
   2bdb8:	ldr	r0, [r6, #0]
   2bdba:	mov	r9, r1
   2bdbc:	ldr	r3, [r2, r3]
   2bdbe:	ldr	r2, [r6, #32]
   2bdc0:	ldr	r3, [r3, #0]
   2bdc2:	str	r3, [sp, #28]
   2bdc4:	mov.w	r3, #0
   2bdc8:	adds	r3, r2, #1
   2bdca:	ldr.w	r1, [r0, #192]	; 0xc0
   2bdce:	cmp	r3, r1
   2bdd0:	bcs.n	2bdea <btrfs_abort_transaction@@Base+0x376>
   2bdd2:	movs	r0, #0
   2bdd4:	str	r3, [r6, #32]
   2bdd6:	ldr	r2, [pc, #124]	; (2be54 <btrfs_abort_transaction@@Base+0x3e0>)
   2bdd8:	ldr	r3, [pc, #116]	; (2be50 <btrfs_abort_transaction@@Base+0x3dc>)
   2bdda:	add	r2, pc
   2bddc:	ldr	r3, [r2, r3]
   2bdde:	ldr	r2, [r3, #0]
   2bde0:	ldr	r3, [sp, #28]
   2bde2:	eors	r2, r3
   2bde4:	beq.n	2be46 <btrfs_abort_transaction@@Base+0x3d2>
   2bde6:	blx	8708 <__stack_chk_fail@plt>
   2bdea:	add	r7, sp, #8
   2bdec:	movs	r5, #255	; 0xff
   2bdee:	mov	r1, r7
   2bdf0:	bl	2ba7c <btrfs_abort_transaction@@Base+0x8>
   2bdf4:	mov	r0, r6
   2bdf6:	bl	18558 <btrfs_release_path@@Base>
   2bdfa:	ldr.w	r1, [sp, #17]
   2bdfe:	ldr	r3, [sp, #8]
   2be00:	ldr.w	r0, [sp, #21]
   2be04:	ldr	r2, [sp, #12]
   2be06:	adds	r3, r3, r1
   2be08:	mov	r1, r9
   2be0a:	strb.w	r5, [sp, #16]
   2be0e:	adc.w	r2, r0, r2
   2be12:	mov	r0, r8
   2be14:	strd	r3, r2, [sp, #8]
   2be18:	movs	r3, #0
   2be1a:	mov	r2, r7
   2be1c:	str	r3, [sp, #0]
   2be1e:	mov	r3, r6
   2be20:	strb.w	r5, [sp, #17]
   2be24:	strb.w	r5, [sp, #18]
   2be28:	strb.w	r5, [sp, #19]
   2be2c:	strb.w	r5, [sp, #20]
   2be30:	strb.w	r5, [sp, #21]
   2be34:	strb.w	r5, [sp, #22]
   2be38:	strb.w	r5, [sp, #23]
   2be3c:	strb.w	r5, [sp, #24]
   2be40:	bl	2bd54 <btrfs_abort_transaction@@Base+0x2e0>
   2be44:	b.n	2bdd6 <btrfs_abort_transaction@@Base+0x362>
   2be46:	add	sp, #36	; 0x24
   2be48:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2be4c:	ldrh	r2, [r1, #62]	; 0x3e
   2be4e:	movs	r3, r0
   2be50:	lsls	r0, r5, #8
   2be52:	movs	r0, r0
   2be54:	ldrh	r6, [r4, #60]	; 0x3c
   2be56:	movs	r3, r0
   2be58:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2be5c:	mov	r7, r3
   2be5e:	vpush	{d8-d9}
   2be62:	mov	r4, r2
   2be64:	ldr.w	r3, [pc, #2080]	; 2c688 <btrfs_abort_transaction@@Base+0xc14>
   2be68:	mov	fp, r1
   2be6a:	ldr.w	r2, [pc, #2080]	; 2c68c <btrfs_abort_transaction@@Base+0xc18>
   2be6e:	mov.w	r8, #1
   2be72:	add	r3, pc
   2be74:	mov	r5, r0
   2be76:	sub	sp, #124	; 0x7c
   2be78:	add	r2, pc
   2be7a:	ldr	r1, [r0, #0]
   2be7c:	str	r3, [sp, #64]	; 0x40
   2be7e:	ldr.w	r3, [pc, #2064]	; 2c690 <btrfs_abort_transaction@@Base+0xc1c>
   2be82:	ldr	r3, [r2, r3]
   2be84:	mov	r2, fp
   2be86:	ldr	r3, [r3, #0]
   2be88:	str	r3, [sp, #116]	; 0x74
   2be8a:	mov.w	r3, #0
   2be8e:	str.w	r8, [sp]
   2be92:	mov	r3, r4
   2be94:	ldr	r1, [r1, #48]	; 0x30
   2be96:	bl	2bae4 <btrfs_abort_transaction@@Base+0x70>
   2be9a:	cmn.w	r0, #4096	; 0x1000
   2be9e:	bls.n	2bebc <btrfs_abort_transaction@@Base+0x448>
   2bea0:	mov	r6, r0
   2bea2:	ldr.w	r2, [pc, #2032]	; 2c694 <btrfs_abort_transaction@@Base+0xc20>
   2bea6:	ldr.w	r3, [pc, #2024]	; 2c690 <btrfs_abort_transaction@@Base+0xc1c>
   2beaa:	add	r2, pc
   2beac:	ldr	r3, [r2, r3]
   2beae:	ldr	r2, [r3, #0]
   2beb0:	ldr	r3, [sp, #116]	; 0x74
   2beb2:	eors	r2, r3
   2beb4:	beq.w	2c67c <btrfs_abort_transaction@@Base+0xc08>
   2beb8:	blx	8708 <__stack_chk_fail@plt>
   2bebc:	ldr	r2, [r4, #0]
   2bebe:	adds	r2, #96	; 0x60
   2bec0:	adds	r3, r2, r0
   2bec2:	ldr.w	sl, [r3, #4]
   2bec6:	ldr	r3, [r3, #0]
   2bec8:	add	r7, r3
   2beca:	str	r7, [r2, r0]
   2becc:	ldr	r0, [r4, #0]
   2bece:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   2bed2:	mov	r0, r4
   2bed4:	bl	18558 <btrfs_release_path@@Base>
   2bed8:	ands.w	sl, sl, #1
   2bedc:	bne.w	2c2c8 <btrfs_abort_transaction@@Base+0x854>
   2bee0:	ldr.w	r3, [fp, #112]	; 0x70
   2bee4:	cmp	r7, r3
   2bee6:	bls.w	2c678 <btrfs_abort_transaction@@Base+0xc04>
   2beea:	ldr	r3, [r5, #0]
   2beec:	str	r3, [sp, #40]	; 0x28
   2beee:	ldr	r3, [r3, #48]	; 0x30
   2bef0:	ldr.w	r6, [fp, #49]	; 0x31
   2bef4:	ldr.w	r7, [fp, #53]	; 0x35
   2bef8:	vmov	s16, r3
   2befc:	ldr	r3, [sp, #40]	; 0x28
   2befe:	mov	r0, r6
   2bf00:	mov	r1, r7
   2bf02:	ldr.w	r2, [r3, #388]	; 0x184
   2bf06:	mov	r3, sl
   2bf08:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2bf0c:	adds	r1, r0, #7
   2bf0e:	mov	r0, r8
   2bf10:	lsrs	r1, r1, #3
   2bf12:	subs	r1, #1
   2bf14:	orr.w	r1, r1, #3
   2bf18:	adds	r1, #1
   2bf1a:	blx	8588 <calloc@plt+0x4>
   2bf1e:	str	r0, [sp, #56]	; 0x38
   2bf20:	cmp	r0, #0
   2bf22:	beq.w	2c2be <btrfs_abort_transaction@@Base+0x84a>
   2bf26:	ldrd	r2, r3, [fp, #40]	; 0x28
   2bf2a:	ldr.w	r8, [pc, #1900]	; 2c698 <btrfs_abort_transaction@@Base+0xc24>
   2bf2e:	strd	r2, r3, [sp, #16]
   2bf32:	add	r8, pc
   2bf34:	ldr	r3, [sp, #16]
   2bf36:	add.w	r8, r8, #43	; 0x2b
   2bf3a:	adds	r3, r6, r3
   2bf3c:	str	r3, [sp, #24]
   2bf3e:	ldr	r3, [sp, #20]
   2bf40:	adc.w	r3, r7, r3
   2bf44:	str	r3, [sp, #28]
   2bf46:	ldr	r3, [sp, #24]
   2bf48:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2bf4c:	ldr	r3, [sp, #28]
   2bf4e:	adc.w	r3, r3, #4294967295	; 0xffffffff
   2bf52:	strd	r2, r3, [sp, #76]	; 0x4c
   2bf56:	movs	r2, #255	; 0xff
   2bf58:	strb.w	r2, [sp, #84]	; 0x54
   2bf5c:	strb.w	r2, [sp, #85]	; 0x55
   2bf60:	strb.w	r2, [sp, #86]	; 0x56
   2bf64:	strb.w	r2, [sp, #87]	; 0x57
   2bf68:	strb.w	r2, [sp, #88]	; 0x58
   2bf6c:	strb.w	r2, [sp, #89]	; 0x59
   2bf70:	strb.w	r2, [sp, #90]	; 0x5a
   2bf74:	strb.w	r2, [sp, #91]	; 0x5b
   2bf78:	strb.w	r2, [sp, #92]	; 0x5c
   2bf7c:	mov.w	r3, #4294967295	; 0xffffffff
   2bf80:	vmov	r1, s16
   2bf84:	str	r3, [sp, #0]
   2bf86:	add	r2, sp, #76	; 0x4c
   2bf88:	mov	r3, r4
   2bf8a:	mov	r0, r5
   2bf8c:	bl	2bd54 <btrfs_abort_transaction@@Base+0x2e0>
   2bf90:	mov	r6, r0
   2bf92:	cmp	r0, #0
   2bf94:	bne.n	2c076 <btrfs_abort_transaction@@Base+0x602>
   2bf96:	ldr	r3, [r4, #0]
   2bf98:	mov	r9, r0
   2bf9a:	vmov	s17, r3
   2bf9e:	ldr	r3, [r4, #32]
   2bfa0:	adds	r3, #1
   2bfa2:	str	r3, [r4, #32]
   2bfa4:	ldr.w	r3, [pc, #1780]	; 2c69c <btrfs_abort_transaction@@Base+0xc28>
   2bfa8:	add	r3, pc
   2bfaa:	vmov	s18, r3
   2bfae:	ldr	r2, [r4, #32]
   2bfb0:	add.w	r7, r9, sl
   2bfb4:	cmp	r2, #0
   2bfb6:	bgt.n	2bfc2 <btrfs_abort_transaction@@Base+0x54e>
   2bfb8:	mov.w	sl, #0
   2bfbc:	b.n	2c032 <btrfs_abort_transaction@@Base+0x5be>
   2bfbe:	mov	sl, r7
   2bfc0:	b.n	2bf7c <btrfs_abort_transaction@@Base+0x508>
   2bfc2:	vmov	r0, s17
   2bfc6:	subs	r2, #1
   2bfc8:	add	r1, sp, #96	; 0x60
   2bfca:	bl	2ba7c <btrfs_abort_transaction@@Base+0x8>
   2bfce:	ldrb.w	r3, [sp, #104]	; 0x68
   2bfd2:	cmp	r3, #198	; 0xc6
   2bfd4:	bne.n	2c08c <btrfs_abort_transaction@@Base+0x618>
   2bfd6:	ldrd	r2, r3, [fp, #40]	; 0x28
   2bfda:	mov.w	sl, #1
   2bfde:	ldrd	r0, r1, [sp, #96]	; 0x60
   2bfe2:	ldr.w	r6, [pc, #1724]	; 2c6a0 <btrfs_abort_transaction@@Base+0xc2c>
   2bfe6:	cmp	r1, r3
   2bfe8:	add	r6, pc
   2bfea:	it	eq
   2bfec:	cmpeq	r0, r2
   2bfee:	add.w	r6, r6, #43	; 0x2b
   2bff2:	ldr.w	r0, [pc, #1712]	; 2c6a4 <btrfs_abort_transaction@@Base+0xc30>
   2bff6:	ite	eq
   2bff8:	moveq	r3, #1
   2bffa:	movne	r3, #0
   2bffc:	add	r0, pc
   2bffe:	movs	r2, #222	; 0xde
   2c000:	mov	r1, r6
   2c002:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2c006:	ldr.w	r3, [fp, #53]	; 0x35
   2c00a:	ldr.w	r1, [sp, #109]	; 0x6d
   2c00e:	ldr.w	r0, [sp, #105]	; 0x69
   2c012:	ldr.w	r2, [fp, #49]	; 0x31
   2c016:	cmp	r1, r3
   2c018:	mov	r1, r6
   2c01a:	it	eq
   2c01c:	cmpeq	r0, r2
   2c01e:	ldr.w	r0, [pc, #1672]	; 2c6a8 <btrfs_abort_transaction@@Base+0xc34>
   2c022:	mov.w	r2, #223	; 0xdf
   2c026:	add	r0, pc
   2c028:	ite	eq
   2c02a:	moveq	r3, #1
   2c02c:	movne	r3, #0
   2c02e:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2c032:	vmov	r1, s16
   2c036:	mov	r2, r4
   2c038:	ldr	r3, [r4, #32]
   2c03a:	mov	r0, r5
   2c03c:	str.w	r9, [sp]
   2c040:	bl	1baf8 <btrfs_del_items@@Base>
   2c044:	mov	r6, r0
   2c046:	cbnz	r0, 2c076 <btrfs_abort_transaction@@Base+0x602>
   2c048:	mov	r0, r4
   2c04a:	bl	18558 <btrfs_release_path@@Base>
   2c04e:	cmp.w	sl, #0
   2c052:	beq.n	2bfbe <btrfs_abort_transaction@@Base+0x54a>
   2c054:	ldr	r1, [sp, #40]	; 0x28
   2c056:	mov	r3, r4
   2c058:	mov.w	r8, #1
   2c05c:	mov	r2, fp
   2c05e:	str.w	r8, [sp]
   2c062:	mov	r0, r5
   2c064:	ldr	r1, [r1, #48]	; 0x30
   2c066:	bl	2bae4 <btrfs_abort_transaction@@Base+0x70>
   2c06a:	cmn.w	r0, #4096	; 0x1000
   2c06e:	mov	r3, r0
   2c070:	bls.w	2c19a <btrfs_abort_transaction@@Base+0x726>
   2c074:	mov	r6, r0
   2c076:	ldr	r0, [sp, #56]	; 0x38
   2c078:	blx	8620 <free@plt+0x4>
   2c07c:	cmp	r6, #0
   2c07e:	beq.w	2bea2 <btrfs_abort_transaction@@Base+0x42e>
   2c082:	mov	r1, r6
   2c084:	mov	r0, r5
   2c086:	bl	2ba74 <btrfs_abort_transaction@@Base>
   2c08a:	b.n	2bea2 <btrfs_abort_transaction@@Base+0x42e>
   2c08c:	cmp	r3, #199	; 0xc7
   2c08e:	bne.n	2c186 <btrfs_abort_transaction@@Base+0x712>
   2c090:	ldrd	r6, r7, [sp, #96]	; 0x60
   2c094:	mov	r1, r8
   2c096:	ldrd	r2, r3, [sp, #16]
   2c09a:	vmov	r0, s18
   2c09e:	cmp	r7, r3
   2c0a0:	it	eq
   2c0a2:	cmpeq	r6, r2
   2c0a4:	mov.w	r2, #229	; 0xe5
   2c0a8:	ite	cs
   2c0aa:	movcs	r3, #1
   2c0ac:	movcc	r3, #0
   2c0ae:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2c0b2:	ldrd	r2, r3, [sp, #24]
   2c0b6:	ldr.w	r0, [pc, #1524]	; 2c6ac <btrfs_abort_transaction@@Base+0xc38>
   2c0ba:	mov	r1, r8
   2c0bc:	cmp	r7, r3
   2c0be:	it	eq
   2c0c0:	cmpeq	r6, r2
   2c0c2:	add	r0, pc
   2c0c4:	mov.w	r2, #230	; 0xe6
   2c0c8:	ite	cc
   2c0ca:	movcc	r3, #1
   2c0cc:	movcs	r3, #0
   2c0ce:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2c0d2:	ldr.w	r3, [sp, #105]	; 0x69
   2c0d6:	ldr.w	r2, [sp, #109]	; 0x6d
   2c0da:	adds	r3, r3, r6
   2c0dc:	str	r3, [sp, #48]	; 0x30
   2c0de:	adc.w	r3, r2, r7
   2c0e2:	str	r3, [sp, #52]	; 0x34
   2c0e4:	ldrd	r0, r1, [sp, #48]	; 0x30
   2c0e8:	ldrd	r2, r3, [sp, #24]
   2c0ec:	cmp	r3, r1
   2c0ee:	mov	r1, r8
   2c0f0:	it	eq
   2c0f2:	cmpeq	r2, r0
   2c0f4:	ldr.w	r0, [pc, #1464]	; 2c6b0 <btrfs_abort_transaction@@Base+0xc3c>
   2c0f8:	mov.w	r2, #231	; 0xe7
   2c0fc:	ite	cs
   2c0fe:	movcs	r3, #1
   2c100:	movcc	r3, #0
   2c102:	add	r0, pc
   2c104:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2c108:	ldr	r3, [sp, #40]	; 0x28
   2c10a:	ldr	r1, [sp, #16]
   2c10c:	ldr.w	r2, [r3, #388]	; 0x184
   2c110:	subs	r0, r6, r1
   2c112:	ldr	r1, [sp, #20]
   2c114:	mov.w	r3, #0
   2c118:	sbc.w	r1, r7, r1
   2c11c:	str	r2, [sp, #68]	; 0x44
   2c11e:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2c122:	ldr	r1, [sp, #48]	; 0x30
   2c124:	ldr	r7, [sp, #20]
   2c126:	movs	r3, #0
   2c128:	ldr	r2, [sp, #68]	; 0x44
   2c12a:	mov	r6, r0
   2c12c:	ldr	r0, [sp, #16]
   2c12e:	subs	r0, r1, r0
   2c130:	ldr	r1, [sp, #52]	; 0x34
   2c132:	sbc.w	r1, r1, r7
   2c136:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2c13a:	ldr	r3, [sp, #56]	; 0x38
   2c13c:	add.w	r2, r3, r6, lsr #3
   2c140:	movs	r3, #255	; 0xff
   2c142:	subs	r7, r0, r6
   2c144:	and.w	r6, r6, #7
   2c148:	rsb	r1, r6, #8
   2c14c:	lsl.w	r6, r3, r6
   2c150:	uxtb	r6, r6
   2c152:	subs	r1, r7, r1
   2c154:	bpl.n	2c176 <btrfs_abort_transaction@@Base+0x702>
   2c156:	cbz	r7, 2c16a <btrfs_abort_transaction@@Base+0x6f6>
   2c158:	negs	r0, r0
   2c15a:	movs	r3, #255	; 0xff
   2c15c:	and.w	r0, r0, #7
   2c160:	ldrb	r1, [r2, #0]
   2c162:	asrs	r3, r0
   2c164:	ands	r3, r6
   2c166:	orrs	r3, r1
   2c168:	strb	r3, [r2, #0]
   2c16a:	ldr	r3, [r4, #32]
   2c16c:	add.w	r9, r9, #1
   2c170:	subs	r3, #1
   2c172:	str	r3, [r4, #32]
   2c174:	b.n	2bfae <btrfs_abort_transaction@@Base+0x53a>
   2c176:	ldrb	r3, [r2, #0]
   2c178:	mov	r7, r1
   2c17a:	movs	r1, #8
   2c17c:	orrs	r3, r6
   2c17e:	movs	r6, #255	; 0xff
   2c180:	strb.w	r3, [r2], #1
   2c184:	b.n	2c152 <btrfs_abort_transaction@@Base+0x6de>
   2c186:	ldr.w	r1, [pc, #1324]	; 2c6b4 <btrfs_abort_transaction@@Base+0xc40>
   2c18a:	movs	r2, #243	; 0xf3
   2c18c:	ldr.w	r0, [pc, #1320]	; 2c6b8 <btrfs_abort_transaction@@Base+0xc44>
   2c190:	add	r1, pc
   2c192:	adds	r1, #43	; 0x2b
   2c194:	add	r0, pc
   2c196:	bl	2bbf8 <btrfs_abort_transaction@@Base+0x184>
   2c19a:	ldr	r0, [r4, #0]
   2c19c:	add.w	r2, r0, #96	; 0x60
   2c1a0:	add	r3, r2
   2c1a2:	ldr	r2, [r3, #4]
   2c1a4:	ldr.w	r9, [r3]
   2c1a8:	orr.w	r2, r2, #1
   2c1ac:	str	r2, [r3, #4]
   2c1ae:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   2c1b2:	mov	r0, r4
   2c1b4:	bl	18558 <btrfs_release_path@@Base>
   2c1b8:	cmp	r9, r7
   2c1ba:	beq.n	2c1f2 <btrfs_abort_transaction@@Base+0x77e>
   2c1bc:	ldr	r2, [sp, #64]	; 0x40
   2c1be:	ldr.w	r3, [pc, #1276]	; 2c6bc <btrfs_abort_transaction@@Base+0xc48>
   2c1c2:	ldr	r3, [r2, r3]
   2c1c4:	strd	r7, r9, [sp, #8]
   2c1c8:	ldrd	r0, r1, [fp, #40]	; 0x28
   2c1cc:	ldr.w	r2, [pc, #1264]	; 2c6c0 <btrfs_abort_transaction@@Base+0xc4c>
   2c1d0:	strd	r0, r1, [sp]
   2c1d4:	add	r2, pc
   2c1d6:	mov	r1, r8
   2c1d8:	ldr	r0, [r3, #0]
   2c1da:	blx	8a64 <__fprintf_chk@plt+0x4>
   2c1de:	ldr.w	r1, [pc, #1252]	; 2c6c4 <btrfs_abort_transaction@@Base+0xc50>
   2c1e2:	ldr.w	r0, [pc, #1252]	; 2c6c8 <btrfs_abort_transaction@@Base+0xc54>
   2c1e6:	movw	r2, #271	; 0x10f
   2c1ea:	add	r1, pc
   2c1ec:	adds	r1, #43	; 0x2b
   2c1ee:	add	r0, pc
   2c1f0:	b.n	2c196 <btrfs_abort_transaction@@Base+0x722>
   2c1f2:	ldr	r3, [sp, #40]	; 0x28
   2c1f4:	mov.w	fp, #0
   2c1f8:	ldr.w	r8, [sp, #56]	; 0x38
   2c1fc:	mov.w	r9, #200	; 0xc8
   2c200:	ldr.w	r3, [r3, #388]	; 0x184
   2c204:	lsls	r3, r3, #11
   2c206:	mov	sl, r3
   2c208:	ldrd	r2, r3, [sp, #16]
   2c20c:	ldrd	r0, r1, [sp, #24]
   2c210:	cmp	r3, r1
   2c212:	it	eq
   2c214:	cmpeq	r2, r0
   2c216:	bcs.w	2c076 <btrfs_abort_transaction@@Base+0x602>
   2c21a:	ldr	r2, [sp, #16]
   2c21c:	ldr	r3, [sp, #24]
   2c21e:	subs	r3, r3, r2
   2c220:	ldr	r2, [sp, #20]
   2c222:	str	r3, [sp, #32]
   2c224:	ldr	r3, [sp, #28]
   2c226:	sbc.w	r3, r3, r2
   2c22a:	str	r3, [sp, #36]	; 0x24
   2c22c:	ldrd	r2, r3, [sp, #32]
   2c230:	cmp	fp, r3
   2c232:	ldr	r3, [sp, #40]	; 0x28
   2c234:	it	eq
   2c236:	cmpeq	sl, r2
   2c238:	it	cc
   2c23a:	strdcc	sl, fp, [sp, #32]
   2c23e:	ldrd	r0, r1, [sp, #32]
   2c242:	ldr.w	r2, [r3, #388]	; 0x184
   2c246:	movs	r3, #0
   2c248:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2c24c:	ldr	r3, [sp, #16]
   2c24e:	vmov	r1, s16
   2c252:	mov	r2, r4
   2c254:	strb.w	r9, [sp, #84]	; 0x54
   2c258:	str	r3, [sp, #76]	; 0x4c
   2c25a:	ldr	r3, [sp, #20]
   2c25c:	str	r3, [sp, #80]	; 0x50
   2c25e:	ldr	r3, [sp, #32]
   2c260:	str.w	r3, [sp, #85]	; 0x55
   2c264:	ldr	r3, [sp, #36]	; 0x24
   2c266:	str.w	r3, [sp, #89]	; 0x59
   2c26a:	movs	r3, #1
   2c26c:	str	r3, [sp, #4]
   2c26e:	add	r3, sp, #72	; 0x48
   2c270:	str	r3, [sp, #0]
   2c272:	add	r3, sp, #76	; 0x4c
   2c274:	adds	r0, #7
   2c276:	lsrs	r7, r0, #3
   2c278:	mov	r0, r5
   2c27a:	str	r7, [sp, #72]	; 0x48
   2c27c:	bl	1b70c <btrfs_insert_empty_items@@Base>
   2c280:	cbnz	r0, 2c2c4 <btrfs_abort_transaction@@Base+0x850>
   2c282:	ldr	r0, [r4, #0]
   2c284:	movs	r2, #25
   2c286:	ldr	r3, [r4, #32]
   2c288:	mov	r1, r8
   2c28a:	add	r8, r7
   2c28c:	str	r0, [sp, #48]	; 0x30
   2c28e:	mla	r3, r2, r3, r0
   2c292:	ldr.w	r2, [r3, #214]	; 0xd6
   2c296:	mov	r3, r7
   2c298:	adds	r2, #101	; 0x65
   2c29a:	bl	17a30 <write_extent_buffer@@Base>
   2c29e:	ldr	r0, [sp, #48]	; 0x30
   2c2a0:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   2c2a4:	mov	r0, r4
   2c2a6:	bl	18558 <btrfs_release_path@@Base>
   2c2aa:	ldr	r3, [sp, #16]
   2c2ac:	ldr	r2, [sp, #32]
   2c2ae:	adds	r3, r3, r2
   2c2b0:	ldr	r2, [sp, #36]	; 0x24
   2c2b2:	str	r3, [sp, #16]
   2c2b4:	ldr	r3, [sp, #20]
   2c2b6:	adc.w	r3, r2, r3
   2c2ba:	str	r3, [sp, #20]
   2c2bc:	b.n	2c208 <btrfs_abort_transaction@@Base+0x794>
   2c2be:	mvn.w	r6, #11
   2c2c2:	b.n	2c076 <btrfs_abort_transaction@@Base+0x602>
   2c2c4:	mov	r6, r0
   2c2c6:	b.n	2c076 <btrfs_abort_transaction@@Base+0x602>
   2c2c8:	ldr.w	r3, [fp, #116]	; 0x74
   2c2cc:	cmp	r7, r3
   2c2ce:	bcs.w	2c678 <btrfs_abort_transaction@@Base+0xc04>
   2c2d2:	ldr	r3, [r5, #0]
   2c2d4:	str	r3, [sp, #16]
   2c2d6:	ldr	r3, [r3, #48]	; 0x30
   2c2d8:	ldr.w	r6, [fp, #49]	; 0x31
   2c2dc:	ldr.w	r7, [fp, #53]	; 0x35
   2c2e0:	vmov	s16, r3
   2c2e4:	ldr	r3, [sp, #16]
   2c2e6:	mov	r0, r6
   2c2e8:	mov	r1, r7
   2c2ea:	ldr.w	r2, [r3, #388]	; 0x184
   2c2ee:	movs	r3, #0
   2c2f0:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2c2f4:	adds	r1, r0, #7
   2c2f6:	mov	r0, r8
   2c2f8:	lsrs	r1, r1, #3
   2c2fa:	subs	r1, #1
   2c2fc:	orr.w	r1, r1, #3
   2c300:	adds	r1, #1
   2c302:	blx	8588 <calloc@plt+0x4>
   2c306:	mov	r8, r0
   2c308:	cmp	r0, #0
   2c30a:	beq.w	2c66e <btrfs_abort_transaction@@Base+0xbfa>
   2c30e:	ldrd	r2, r3, [fp, #40]	; 0x28
   2c312:	ldr.w	r9, [pc, #952]	; 2c6cc <btrfs_abort_transaction@@Base+0xc58>
   2c316:	strd	r2, r3, [sp, #24]
   2c31a:	add	r9, pc
   2c31c:	ldr	r3, [sp, #24]
   2c31e:	add.w	r9, r9, #73	; 0x49
   2c322:	adds	r3, r6, r3
   2c324:	str	r3, [sp, #40]	; 0x28
   2c326:	ldr	r3, [sp, #28]
   2c328:	adc.w	r3, r7, r3
   2c32c:	str	r3, [sp, #44]	; 0x2c
   2c32e:	ldr	r3, [sp, #40]	; 0x28
   2c330:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2c334:	ldr	r3, [sp, #44]	; 0x2c
   2c336:	adc.w	r3, r3, #4294967295	; 0xffffffff
   2c33a:	strd	r2, r3, [sp, #76]	; 0x4c
   2c33e:	movs	r2, #255	; 0xff
   2c340:	strb.w	r2, [sp, #84]	; 0x54
   2c344:	strb.w	r2, [sp, #85]	; 0x55
   2c348:	strb.w	r2, [sp, #86]	; 0x56
   2c34c:	strb.w	r2, [sp, #87]	; 0x57
   2c350:	strb.w	r2, [sp, #88]	; 0x58
   2c354:	strb.w	r2, [sp, #89]	; 0x59
   2c358:	strb.w	r2, [sp, #90]	; 0x5a
   2c35c:	strb.w	r2, [sp, #91]	; 0x5b
   2c360:	strb.w	r2, [sp, #92]	; 0x5c
   2c364:	mov.w	r3, #4294967295	; 0xffffffff
   2c368:	vmov	r1, s16
   2c36c:	str	r3, [sp, #0]
   2c36e:	add	r2, sp, #76	; 0x4c
   2c370:	mov	r3, r4
   2c372:	mov	r0, r5
   2c374:	bl	2bd54 <btrfs_abort_transaction@@Base+0x2e0>
   2c378:	mov	r6, r0
   2c37a:	cmp	r0, #0
   2c37c:	bne.n	2c442 <btrfs_abort_transaction@@Base+0x9ce>
   2c37e:	ldr	r3, [r4, #32]
   2c380:	ldr	r7, [r4, #0]
   2c382:	adds	r3, #1
   2c384:	str	r3, [r4, #32]
   2c386:	ldr	r3, [pc, #840]	; (2c6d0 <btrfs_abort_transaction@@Base+0xc5c>)
   2c388:	str	r0, [sp, #48]	; 0x30
   2c38a:	add	r3, pc
   2c38c:	vmov	s17, r3
   2c390:	ldr	r2, [r4, #32]
   2c392:	cmp	r2, #0
   2c394:	bgt.n	2c39a <btrfs_abort_transaction@@Base+0x926>
   2c396:	movs	r7, #0
   2c398:	b.n	2c406 <btrfs_abort_transaction@@Base+0x992>
   2c39a:	subs	r2, #1
   2c39c:	add	r1, sp, #96	; 0x60
   2c39e:	mov	r0, r7
   2c3a0:	bl	2ba7c <btrfs_abort_transaction@@Base+0x8>
   2c3a4:	ldrb.w	r3, [sp, #104]	; 0x68
   2c3a8:	cmp	r3, #198	; 0xc6
   2c3aa:	bne.n	2c446 <btrfs_abort_transaction@@Base+0x9d2>
   2c3ac:	ldrd	r2, r3, [fp, #40]	; 0x28
   2c3b0:	ldrd	r6, r7, [sp, #96]	; 0x60
   2c3b4:	ldr	r0, [pc, #796]	; (2c6d4 <btrfs_abort_transaction@@Base+0xc60>)
   2c3b6:	cmp	r7, r3
   2c3b8:	mov.w	r7, #1
   2c3bc:	it	eq
   2c3be:	cmpeq	r6, r2
   2c3c0:	ldr	r6, [pc, #788]	; (2c6d8 <btrfs_abort_transaction@@Base+0xc64>)
   2c3c2:	add	r0, pc
   2c3c4:	mov.w	r2, #360	; 0x168
   2c3c8:	add	r6, pc
   2c3ca:	it	eq
   2c3cc:	moveq	r3, #1
   2c3ce:	add.w	r6, r6, #73	; 0x49
   2c3d2:	it	ne
   2c3d4:	movne	r3, #0
   2c3d6:	mov	r1, r6
   2c3d8:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2c3dc:	ldr.w	r3, [fp, #53]	; 0x35
   2c3e0:	ldr.w	r1, [sp, #109]	; 0x6d
   2c3e4:	ldr.w	r0, [sp, #105]	; 0x69
   2c3e8:	ldr.w	r2, [fp, #49]	; 0x31
   2c3ec:	cmp	r1, r3
   2c3ee:	mov	r1, r6
   2c3f0:	it	eq
   2c3f2:	cmpeq	r0, r2
   2c3f4:	ldr	r0, [pc, #740]	; (2c6dc <btrfs_abort_transaction@@Base+0xc68>)
   2c3f6:	movw	r2, #361	; 0x169
   2c3fa:	add	r0, pc
   2c3fc:	ite	eq
   2c3fe:	moveq	r3, #1
   2c400:	movne	r3, #0
   2c402:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2c406:	ldr	r3, [sp, #48]	; 0x30
   2c408:	mov	r2, r4
   2c40a:	vmov	r1, s16
   2c40e:	mov	r0, r5
   2c410:	str	r3, [sp, #0]
   2c412:	ldr	r3, [r4, #32]
   2c414:	bl	1baf8 <btrfs_del_items@@Base>
   2c418:	mov	r6, r0
   2c41a:	cbnz	r0, 2c442 <btrfs_abort_transaction@@Base+0x9ce>
   2c41c:	mov	r0, r4
   2c41e:	bl	18558 <btrfs_release_path@@Base>
   2c422:	cmp	r7, #0
   2c424:	beq.n	2c364 <btrfs_abort_transaction@@Base+0x8f0>
   2c426:	ldr	r1, [sp, #16]
   2c428:	movs	r3, #1
   2c42a:	mov	r2, fp
   2c42c:	str	r3, [sp, #0]
   2c42e:	mov	r0, r5
   2c430:	mov	r3, r4
   2c432:	ldr	r1, [r1, #48]	; 0x30
   2c434:	bl	2bae4 <btrfs_abort_transaction@@Base+0x70>
   2c438:	cmn.w	r0, #4096	; 0x1000
   2c43c:	mov	r3, r0
   2c43e:	bls.n	2c538 <btrfs_abort_transaction@@Base+0xac4>
   2c440:	mov	r6, r0
   2c442:	mov	r0, r8
   2c444:	b.n	2c078 <btrfs_abort_transaction@@Base+0x604>
   2c446:	cmp	r3, #200	; 0xc8
   2c448:	bne.n	2c528 <btrfs_abort_transaction@@Base+0xab4>
   2c44a:	ldrd	r2, r3, [sp, #96]	; 0x60
   2c44e:	ldrd	r0, r1, [sp, #24]
   2c452:	cmp	r3, r1
   2c454:	strd	r2, r3, [sp, #32]
   2c458:	it	eq
   2c45a:	cmpeq	r2, r0
   2c45c:	mov	r1, r9
   2c45e:	vmov	r0, s17
   2c462:	movw	r2, #369	; 0x171
   2c466:	ite	cs
   2c468:	movcs	r3, #1
   2c46a:	movcc	r3, #0
   2c46c:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2c470:	ldrd	r2, r3, [sp, #32]
   2c474:	ldrd	r0, r1, [sp, #40]	; 0x28
   2c478:	cmp	r3, r1
   2c47a:	mov	r1, r9
   2c47c:	it	eq
   2c47e:	cmpeq	r2, r0
   2c480:	ldr	r0, [pc, #604]	; (2c6e0 <btrfs_abort_transaction@@Base+0xc6c>)
   2c482:	mov.w	r2, #370	; 0x172
   2c486:	ite	cc
   2c488:	movcc	r3, #1
   2c48a:	movcs	r3, #0
   2c48c:	add	r0, pc
   2c48e:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2c492:	ldr.w	r6, [sp, #105]	; 0x69
   2c496:	ldr	r3, [sp, #32]
   2c498:	ldr.w	sl, [sp, #109]	; 0x6d
   2c49c:	adds	r3, r3, r6
   2c49e:	str	r3, [sp, #56]	; 0x38
   2c4a0:	ldr	r3, [sp, #36]	; 0x24
   2c4a2:	adc.w	r3, r3, sl
   2c4a6:	str	r3, [sp, #60]	; 0x3c
   2c4a8:	ldrd	r0, r1, [sp, #56]	; 0x38
   2c4ac:	ldrd	r2, r3, [sp, #40]	; 0x28
   2c4b0:	cmp	r3, r1
   2c4b2:	mov	r1, r9
   2c4b4:	it	eq
   2c4b6:	cmpeq	r2, r0
   2c4b8:	ldr	r0, [pc, #552]	; (2c6e4 <btrfs_abort_transaction@@Base+0xc70>)
   2c4ba:	movw	r2, #371	; 0x173
   2c4be:	ite	cs
   2c4c0:	movcs	r3, #1
   2c4c2:	movcc	r3, #0
   2c4c4:	add	r0, pc
   2c4c6:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2c4ca:	ldr	r3, [sp, #16]
   2c4cc:	mov	r0, r6
   2c4ce:	mov	r1, sl
   2c4d0:	ldr.w	r2, [r3, #388]	; 0x184
   2c4d4:	movs	r3, #0
   2c4d6:	str	r2, [sp, #68]	; 0x44
   2c4d8:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2c4dc:	ldr	r3, [r4, #32]
   2c4de:	movs	r1, #25
   2c4e0:	ldr	r2, [sp, #68]	; 0x44
   2c4e2:	subs	r3, #1
   2c4e4:	mla	r3, r1, r3, r7
   2c4e8:	ldr	r1, [sp, #32]
   2c4ea:	lsls	r2, r2, #3
   2c4ec:	ldr.w	sl, [r3, #214]	; 0xd6
   2c4f0:	movs	r3, #0
   2c4f2:	add.w	sl, sl, #101	; 0x65
   2c4f6:	adds	r0, #7
   2c4f8:	lsrs	r6, r0, #3
   2c4fa:	ldr	r0, [sp, #24]
   2c4fc:	subs	r0, r1, r0
   2c4fe:	ldr	r1, [sp, #36]	; 0x24
   2c500:	mov	ip, r1
   2c502:	ldr	r1, [sp, #28]
   2c504:	sbc.w	r1, ip, r1
   2c508:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2c50c:	mov	r3, r6
   2c50e:	mov	r2, sl
   2c510:	add.w	r1, r8, r0
   2c514:	mov	r0, r7
   2c516:	bl	17a1a <read_extent_buffer@@Base>
   2c51a:	ldr	r3, [sp, #48]	; 0x30
   2c51c:	adds	r3, #1
   2c51e:	str	r3, [sp, #48]	; 0x30
   2c520:	ldr	r3, [r4, #32]
   2c522:	subs	r3, #1
   2c524:	str	r3, [r4, #32]
   2c526:	b.n	2c390 <btrfs_abort_transaction@@Base+0x91c>
   2c528:	ldr	r1, [pc, #444]	; (2c6e8 <btrfs_abort_transaction@@Base+0xc74>)
   2c52a:	movw	r2, #387	; 0x183
   2c52e:	ldr	r0, [pc, #444]	; (2c6ec <btrfs_abort_transaction@@Base+0xc78>)
   2c530:	add	r1, pc
   2c532:	adds	r1, #73	; 0x49
   2c534:	add	r0, pc
   2c536:	b.n	2c196 <btrfs_abort_transaction@@Base+0x722>
   2c538:	ldr	r0, [r4, #0]
   2c53a:	add.w	r2, r0, #96	; 0x60
   2c53e:	add	r3, r2
   2c540:	ldr	r2, [r3, #4]
   2c542:	bic.w	r2, r2, #1
   2c546:	str	r2, [r3, #4]
   2c548:	ldr	r3, [r3, #0]
   2c54a:	str	r3, [sp, #40]	; 0x28
   2c54c:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   2c550:	mov	r0, r4
   2c552:	bl	18558 <btrfs_release_path@@Base>
   2c556:	ldr	r3, [sp, #16]
   2c558:	ldr.w	r0, [fp, #49]	; 0x31
   2c55c:	ldr.w	r1, [fp, #53]	; 0x35
   2c560:	ldr.w	r2, [r3, #388]	; 0x184
   2c564:	mov	r3, r6
   2c566:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2c56a:	mov	r9, r0
   2c56c:	cmp	r0, #0
   2c56e:	beq.n	2c66a <btrfs_abort_transaction@@Base+0xbf6>
   2c570:	mov	r3, r6
   2c572:	mov	r1, r0
   2c574:	mov	r2, r6
   2c576:	mov	r0, r8
   2c578:	bl	2bb94 <btrfs_abort_transaction@@Base+0x120>
   2c57c:	ldr	r3, [pc, #368]	; (2c6f0 <btrfs_abort_transaction@@Base+0xc7c>)
   2c57e:	str	r6, [sp, #32]
   2c580:	add	r3, pc
   2c582:	adds	r3, #73	; 0x49
   2c584:	vmov	s17, r3
   2c588:	ldr	r3, [pc, #360]	; (2c6f4 <btrfs_abort_transaction@@Base+0xc80>)
   2c58a:	add	r3, pc
   2c58c:	vmov	s18, r3
   2c590:	mov	r7, r0
   2c592:	cmp	r9, r7
   2c594:	bhi.n	2c5d2 <btrfs_abort_transaction@@Base+0xb5e>
   2c596:	ldr	r3, [sp, #32]
   2c598:	ldr	r2, [sp, #40]	; 0x28
   2c59a:	cmp	r3, r2
   2c59c:	beq.w	2c442 <btrfs_abort_transaction@@Base+0x9ce>
   2c5a0:	ldr	r2, [sp, #64]	; 0x40
   2c5a2:	ldr	r3, [pc, #280]	; (2c6bc <btrfs_abort_transaction@@Base+0xc48>)
   2c5a4:	ldr	r3, [r2, r3]
   2c5a6:	ldr	r2, [sp, #40]	; 0x28
   2c5a8:	str	r2, [sp, #12]
   2c5aa:	ldr	r2, [sp, #32]
   2c5ac:	str	r2, [sp, #8]
   2c5ae:	ldrd	r0, r1, [fp, #40]	; 0x28
   2c5b2:	ldr	r2, [pc, #324]	; (2c6f8 <btrfs_abort_transaction@@Base+0xc84>)
   2c5b4:	strd	r0, r1, [sp]
   2c5b8:	add	r2, pc
   2c5ba:	movs	r1, #1
   2c5bc:	ldr	r0, [r3, #0]
   2c5be:	blx	8a64 <__fprintf_chk@plt+0x4>
   2c5c2:	ldr	r1, [pc, #312]	; (2c6fc <btrfs_abort_transaction@@Base+0xc88>)
   2c5c4:	ldr	r0, [pc, #312]	; (2c700 <btrfs_abort_transaction@@Base+0xc8c>)
   2c5c6:	mov.w	r2, #436	; 0x1b4
   2c5ca:	add	r1, pc
   2c5cc:	adds	r1, #73	; 0x49
   2c5ce:	add	r0, pc
   2c5d0:	b.n	2c196 <btrfs_abort_transaction@@Base+0x722>
   2c5d2:	mov.w	r3, #4294967295	; 0xffffffff
   2c5d6:	mov	r2, r7
   2c5d8:	mov	r1, r9
   2c5da:	mov	r0, r8
   2c5dc:	bl	2bb94 <btrfs_abort_transaction@@Base+0x120>
   2c5e0:	vmov	r1, s17
   2c5e4:	movw	r2, #415	; 0x19f
   2c5e8:	cmp	r7, r0
   2c5ea:	mov	sl, r0
   2c5ec:	vmov	r0, s18
   2c5f0:	ite	cs
   2c5f2:	movcs	r3, #0
   2c5f4:	movcc	r3, #1
   2c5f6:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2c5fa:	ldr	r3, [sp, #16]
   2c5fc:	ldrd	r0, r1, [sp, #24]
   2c600:	ldr.w	r3, [r3, #388]	; 0x184
   2c604:	mul.w	r2, r3, r7
   2c608:	sub.w	r7, sl, r7
   2c60c:	muls	r3, r7
   2c60e:	adds	r0, r0, r2
   2c610:	adc.w	r1, r1, #0
   2c614:	movs	r2, #199	; 0xc7
   2c616:	strd	r0, r1, [sp, #76]	; 0x4c
   2c61a:	mov	r0, r5
   2c61c:	strb.w	r2, [sp, #84]	; 0x54
   2c620:	movs	r2, #0
   2c622:	vmov	r1, s16
   2c626:	str.w	r3, [sp, #85]	; 0x55
   2c62a:	movs	r3, #1
   2c62c:	str.w	r2, [sp, #89]	; 0x59
   2c630:	str	r2, [sp, #72]	; 0x48
   2c632:	mov	r2, r4
   2c634:	str	r3, [sp, #4]
   2c636:	add	r3, sp, #72	; 0x48
   2c638:	str	r3, [sp, #0]
   2c63a:	add	r3, sp, #76	; 0x4c
   2c63c:	bl	1b70c <btrfs_insert_empty_items@@Base>
   2c640:	mov	r7, r0
   2c642:	cbnz	r0, 2c674 <btrfs_abort_transaction@@Base+0xc00>
   2c644:	mov	r0, r4
   2c646:	bl	18558 <btrfs_release_path@@Base>
   2c64a:	ldr	r3, [sp, #32]
   2c64c:	cmp	r9, sl
   2c64e:	add.w	r3, r3, #1
   2c652:	str	r3, [sp, #32]
   2c654:	bls.n	2c666 <btrfs_abort_transaction@@Base+0xbf2>
   2c656:	mov	r3, r7
   2c658:	mov	r2, sl
   2c65a:	mov	r1, r9
   2c65c:	mov	r0, r8
   2c65e:	bl	2bb94 <btrfs_abort_transaction@@Base+0x120>
   2c662:	mov	r7, r0
   2c664:	b.n	2c592 <btrfs_abort_transaction@@Base+0xb1e>
   2c666:	mov	r7, r9
   2c668:	b.n	2c592 <btrfs_abort_transaction@@Base+0xb1e>
   2c66a:	str	r6, [sp, #32]
   2c66c:	b.n	2c596 <btrfs_abort_transaction@@Base+0xb22>
   2c66e:	mvn.w	r6, #11
   2c672:	b.n	2c442 <btrfs_abort_transaction@@Base+0x9ce>
   2c674:	mov	r6, r0
   2c676:	b.n	2c442 <btrfs_abort_transaction@@Base+0x9ce>
   2c678:	movs	r6, #0
   2c67a:	b.n	2bea2 <btrfs_abort_transaction@@Base+0x42e>
   2c67c:	mov	r0, r6
   2c67e:	add	sp, #124	; 0x7c
   2c680:	vpop	{d8-d9}
   2c684:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c688:	ldrh	r6, [r1, #56]	; 0x38
   2c68a:	movs	r3, r0
   2c68c:	ldrh	r0, [r1, #56]	; 0x38
   2c68e:	movs	r3, r0
   2c690:	lsls	r0, r5, #8
   2c692:	movs	r0, r0
   2c694:	ldrh	r6, [r2, #54]	; 0x36
   2c696:	movs	r3, r0
   2c698:	str	r1, [r5, r6]
   2c69a:	movs	r1, r0
   2c69c:	ldr	r5, [pc, #100]	; (2c704 <btrfs_abort_transaction@@Base+0xc90>)
   2c69e:	movs	r1, r0
   2c6a0:	str	r3, [r6, r3]
   2c6a2:	movs	r1, r0
   2c6a4:	ldr	r4, [pc, #420]	; (2c84c <btrfs_abort_transaction@@Base+0xdd8>)
   2c6a6:	movs	r1, r0
   2c6a8:	ldr	r4, [pc, #444]	; (2c868 <btrfs_abort_transaction@@Base+0xdf4>)
   2c6aa:	movs	r1, r0
   2c6ac:	ldr	r4, [pc, #108]	; (2c71c <btrfs_abort_transaction@@Base+0xca8>)
   2c6ae:	movs	r1, r0
   2c6b0:	ldr	r3, [pc, #976]	; (2ca84 <btrfs_abort_transaction@@Base+0x1010>)
   2c6b2:	movs	r1, r0
   2c6b4:	ldr	r7, [pc, #300]	; (2c7e4 <btrfs_abort_transaction@@Base+0xd70>)
   2c6b6:	movs	r1, r0
   2c6b8:	lsrs	r2, r3, #11
   2c6ba:	movs	r1, r0
   2c6bc:	lsls	r0, r7, #8
   2c6be:	movs	r0, r0
   2c6c0:	ldr	r3, [pc, #316]	; (2c800 <btrfs_abort_transaction@@Base+0xd8c>)
   2c6c2:	movs	r1, r0
   2c6c4:	ldr	r6, [pc, #964]	; (2ca8c <btrfs_abort_transaction@@Base+0x1018>)
   2c6c6:	movs	r1, r0
   2c6c8:	lsrs	r0, r0, #10
   2c6ca:	movs	r1, r0
   2c6cc:	ldr	r5, [pc, #772]	; (2c9d4 <btrfs_abort_transaction@@Base+0xf60>)
   2c6ce:	movs	r1, r0
   2c6d0:	ldr	r1, [pc, #220]	; (2c7b0 <btrfs_abort_transaction@@Base+0xd3c>)
   2c6d2:	movs	r1, r0
   2c6d4:	ldr	r0, [pc, #652]	; (2c964 <btrfs_abort_transaction@@Base+0xef0>)
   2c6d6:	movs	r1, r0
   2c6d8:	ldr	r5, [pc, #76]	; (2c728 <btrfs_abort_transaction@@Base+0xcb4>)
   2c6da:	movs	r1, r0
   2c6dc:	ldr	r0, [pc, #620]	; (2c94c <btrfs_abort_transaction@@Base+0xed8>)
   2c6de:	movs	r1, r0
   2c6e0:	ldr	r0, [pc, #324]	; (2c828 <btrfs_abort_transaction@@Base+0xdb4>)
   2c6e2:	movs	r1, r0
   2c6e4:	ldr	r0, [pc, #200]	; (2c7b0 <btrfs_abort_transaction@@Base+0xd3c>)
   2c6e6:	movs	r1, r0
   2c6e8:	ldr	r3, [pc, #684]	; (2c998 <btrfs_abort_transaction@@Base+0xf24>)
   2c6ea:	movs	r1, r0
   2c6ec:	lsls	r2, r7, #28
   2c6ee:	movs	r1, r0
   2c6f0:	ldr	r3, [pc, #364]	; (2c860 <btrfs_abort_transaction@@Base+0xdec>)
   2c6f2:	movs	r1, r0
   2c6f4:			; <UNDEFINED> instruction: 0x47d2
   2c6f6:	movs	r1, r0
   2c6f8:	bx	sp
   2c6fa:	movs	r1, r0
   2c6fc:	ldr	r3, [pc, #68]	; (2c744 <btrfs_abort_transaction@@Base+0xcd0>)
   2c6fe:	movs	r1, r0
   2c700:	lsls	r0, r4, #26
   2c702:	movs	r1, r0
   2c704:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c708:	sub	sp, #156	; 0x9c
   2c70a:	mov	r4, r2
   2c70c:	ldr	r2, [pc, #900]	; (2ca94 <btrfs_abort_transaction@@Base+0x1020>)
   2c70e:	ldr	r3, [sp, #200]	; 0xc8
   2c710:	mov	r5, r1
   2c712:	add	r2, pc
   2c714:	ldrd	r9, sl, [sp, #192]	; 0xc0
   2c718:	ldr	r1, [r0, #0]
   2c71a:	mov	r6, r0
   2c71c:	str	r3, [sp, #92]	; 0x5c
   2c71e:	ldr	r3, [sp, #204]	; 0xcc
   2c720:	ldr.w	r8, [r1, #48]	; 0x30
   2c724:	str	r3, [sp, #96]	; 0x60
   2c726:	ldr	r3, [pc, #880]	; (2ca98 <btrfs_abort_transaction@@Base+0x1024>)
   2c728:	ldr	r3, [r2, r3]
   2c72a:	ldr	r3, [r3, #0]
   2c72c:	str	r3, [sp, #148]	; 0x94
   2c72e:	mov.w	r3, #0
   2c732:	ldrd	r2, r3, [r5, #40]	; 0x28
   2c736:	cmp	r3, sl
   2c738:	it	eq
   2c73a:	cmpeq	r2, r9
   2c73c:	bcs.n	2c7ec <btrfs_abort_transaction@@Base+0xd78>
   2c73e:	ldr.w	r3, [r1, #388]	; 0x184
   2c742:	add	r7, sp, #108	; 0x6c
   2c744:	movs	r2, #255	; 0xff
   2c746:	mov	fp, sl
   2c748:	strb.w	r2, [sp, #116]	; 0x74
   2c74c:	subs.w	sl, r9, r3
   2c750:	strb.w	r2, [sp, #117]	; 0x75
   2c754:	mov.w	r3, #0
   2c758:	strb.w	r2, [sp, #118]	; 0x76
   2c75c:	mov	r1, r8
   2c75e:	strb.w	r2, [sp, #119]	; 0x77
   2c762:	sbc.w	fp, fp, #0
   2c766:	strb.w	r2, [sp, #120]	; 0x78
   2c76a:	strb.w	r2, [sp, #121]	; 0x79
   2c76e:	strb.w	r2, [sp, #122]	; 0x7a
   2c772:	strb.w	r2, [sp, #123]	; 0x7b
   2c776:	strb.w	r2, [sp, #124]	; 0x7c
   2c77a:	mov	r2, r7
   2c77c:	str	r3, [sp, #0]
   2c77e:	mov	r3, r4
   2c780:	strd	sl, fp, [sp, #108]	; 0x6c
   2c784:	bl	2bd54 <btrfs_abort_transaction@@Base+0x2e0>
   2c788:	mov	r3, r0
   2c78a:	cbnz	r0, 2c7d6 <btrfs_abort_transaction@@Base+0xd62>
   2c78c:	mov	r3, fp
   2c78e:	mov	r2, sl
   2c790:	mov	r0, r4
   2c792:	bl	2bc6e <btrfs_abort_transaction@@Base+0x1fa>
   2c796:	ldr	r2, [r4, #32]
   2c798:	mov	r1, r7
   2c79a:	str	r0, [sp, #68]	; 0x44
   2c79c:	ldr	r0, [r4, #0]
   2c79e:	bl	2ba7c <btrfs_abort_transaction@@Base+0x8>
   2c7a2:	ldrd	r3, r0, [sp, #108]	; 0x6c
   2c7a6:	ldr.w	r2, [sp, #117]	; 0x75
   2c7aa:	ldr.w	r1, [sp, #121]	; 0x79
   2c7ae:	adds	r3, r3, r2
   2c7b0:	str	r3, [sp, #8]
   2c7b2:	adc.w	r3, r0, r1
   2c7b6:	str	r3, [sp, #12]
   2c7b8:	ldrd	r0, r1, [sp, #8]
   2c7bc:	ldrd	r2, r3, [sp, #192]	; 0xc0
   2c7c0:	cmp	r3, r1
   2c7c2:	it	eq
   2c7c4:	cmpeq	r2, r0
   2c7c6:	bcc.n	2c834 <btrfs_abort_transaction@@Base+0xdc0>
   2c7c8:	mov	r2, r4
   2c7ca:	mov	r1, r8
   2c7cc:	mov	r0, r6
   2c7ce:	bl	2bda8 <btrfs_abort_transaction@@Base+0x334>
   2c7d2:	mov	r3, r0
   2c7d4:	cbz	r0, 2c834 <btrfs_abort_transaction@@Base+0xdc0>
   2c7d6:	ldr	r1, [pc, #708]	; (2ca9c <btrfs_abort_transaction@@Base+0x1028>)
   2c7d8:	ldr	r2, [pc, #700]	; (2ca98 <btrfs_abort_transaction@@Base+0x1024>)
   2c7da:	add	r1, pc
   2c7dc:	ldr	r2, [r1, r2]
   2c7de:	ldr	r1, [r2, #0]
   2c7e0:	ldr	r2, [sp, #148]	; 0x94
   2c7e2:	eors	r1, r2
   2c7e4:	beq.w	2ca8a <btrfs_abort_transaction@@Base+0x1016>
   2c7e8:	blx	8708 <__stack_chk_fail@plt>
   2c7ec:	ldr	r3, [sp, #192]	; 0xc0
   2c7ee:	movs	r2, #255	; 0xff
   2c7f0:	mov	r1, r8
   2c7f2:	strb.w	r2, [sp, #116]	; 0x74
   2c7f6:	strb.w	r2, [sp, #117]	; 0x75
   2c7fa:	str	r3, [sp, #108]	; 0x6c
   2c7fc:	ldr	r3, [sp, #196]	; 0xc4
   2c7fe:	strb.w	r2, [sp, #118]	; 0x76
   2c802:	strb.w	r2, [sp, #119]	; 0x77
   2c806:	str	r3, [sp, #112]	; 0x70
   2c808:	movs	r3, #0
   2c80a:	strb.w	r2, [sp, #120]	; 0x78
   2c80e:	strb.w	r2, [sp, #121]	; 0x79
   2c812:	strb.w	r2, [sp, #122]	; 0x7a
   2c816:	strb.w	r2, [sp, #123]	; 0x7b
   2c81a:	strb.w	r2, [sp, #124]	; 0x7c
   2c81e:	add	r2, sp, #108	; 0x6c
   2c820:	str	r3, [sp, #0]
   2c822:	mov	r3, r4
   2c824:	bl	2bd54 <btrfs_abort_transaction@@Base+0x2e0>
   2c828:	mov	r3, r0
   2c82a:	cmp	r0, #0
   2c82c:	bne.n	2c7d6 <btrfs_abort_transaction@@Base+0xd62>
   2c82e:	mov.w	r3, #4294967295	; 0xffffffff
   2c832:	str	r3, [sp, #68]	; 0x44
   2c834:	ldr	r3, [sp, #92]	; 0x5c
   2c836:	str	r3, [sp, #8]
   2c838:	ldr	r3, [sp, #96]	; 0x60
   2c83a:	str	r3, [sp, #12]
   2c83c:	ldrd	r2, r3, [sp, #192]	; 0xc0
   2c840:	strd	r2, r3, [sp, #16]
   2c844:	ldr	r3, [pc, #600]	; (2caa0 <btrfs_abort_transaction@@Base+0x102c>)
   2c846:	add	r3, pc
   2c848:	adds	r3, #103	; 0x67
   2c84a:	str	r3, [sp, #88]	; 0x58
   2c84c:	mov	fp, r3
   2c84e:	ldr	r2, [sp, #8]
   2c850:	add	r1, sp, #128	; 0x80
   2c852:	ldr	r3, [sp, #16]
   2c854:	ldr	r7, [r4, #0]
   2c856:	adds	r3, r3, r2
   2c858:	ldr	r2, [sp, #12]
   2c85a:	str	r3, [sp, #56]	; 0x38
   2c85c:	ldr	r3, [sp, #20]
   2c85e:	mov	r0, r7
   2c860:	ldr.w	r9, [r7, #92]	; 0x5c
   2c864:	adcs	r3, r2
   2c866:	ldr	r2, [r4, #32]
   2c868:	str	r3, [sp, #60]	; 0x3c
   2c86a:	bl	2ba7c <btrfs_abort_transaction@@Base+0x8>
   2c86e:	ldrb.w	r3, [sp, #136]	; 0x88
   2c872:	ldr	r0, [pc, #560]	; (2caa4 <btrfs_abort_transaction@@Base+0x1030>)
   2c874:	sub.w	r2, r3, #200	; 0xc8
   2c878:	ldr	r1, [sp, #88]	; 0x58
   2c87a:	negs	r3, r2
   2c87c:	add	r0, pc
   2c87e:	adcs	r3, r2
   2c880:	mov.w	r2, #502	; 0x1f6
   2c884:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2c888:	ldrd	r2, r3, [sp, #128]	; 0x80
   2c88c:	strd	r2, r3, [sp, #24]
   2c890:	ldr	r1, [sp, #24]
   2c892:	ldr.w	r3, [sp, #137]	; 0x89
   2c896:	ldr.w	r2, [sp, #141]	; 0x8d
   2c89a:	adds	r3, r3, r1
   2c89c:	str	r3, [sp, #48]	; 0x30
   2c89e:	ldr	r3, [sp, #28]
   2c8a0:	ldrd	r0, r1, [sp, #24]
   2c8a4:	adc.w	r3, r2, r3
   2c8a8:	str	r3, [sp, #52]	; 0x34
   2c8aa:	ldrd	r2, r3, [sp, #16]
   2c8ae:	cmp	r3, r1
   2c8b0:	it	eq
   2c8b2:	cmpeq	r2, r0
   2c8b4:	bcc.n	2c9b2 <btrfs_abort_transaction@@Base+0xf3e>
   2c8b6:	ldrd	r0, r1, [sp, #48]	; 0x30
   2c8ba:	cmp	r3, r1
   2c8bc:	it	eq
   2c8be:	cmpeq	r2, r0
   2c8c0:	ite	cc
   2c8c2:	movcc	r3, #1
   2c8c4:	movcs	r3, #0
   2c8c6:	ldr	r0, [pc, #480]	; (2caa8 <btrfs_abort_transaction@@Base+0x1034>)
   2c8c8:	mov.w	r2, #506	; 0x1fa
   2c8cc:	mov	r1, fp
   2c8ce:	add	r0, pc
   2c8d0:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2c8d4:	ldrd	r2, r3, [sp, #24]
   2c8d8:	ldrd	r0, r1, [sp, #56]	; 0x38
   2c8dc:	cmp	r3, r1
   2c8de:	mov	r1, fp
   2c8e0:	it	eq
   2c8e2:	cmpeq	r2, r0
   2c8e4:	ldr	r0, [pc, #452]	; (2caac <btrfs_abort_transaction@@Base+0x1038>)
   2c8e6:	movw	r2, #507	; 0x1fb
   2c8ea:	ite	cc
   2c8ec:	movcc	r3, #1
   2c8ee:	movcs	r3, #0
   2c8f0:	add	r0, pc
   2c8f2:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2c8f6:	ldrd	r2, r3, [sp, #56]	; 0x38
   2c8fa:	strd	r2, r3, [sp, #32]
   2c8fe:	ldrd	r0, r1, [sp, #32]
   2c902:	ldrd	r2, r3, [sp, #48]	; 0x30
   2c906:	cmp	r3, r1
   2c908:	ldr	r1, [sp, #16]
   2c90a:	it	eq
   2c90c:	cmpeq	r2, r0
   2c90e:	it	cc
   2c910:	strdcc	r2, r3, [sp, #32]
   2c914:	ldr	r3, [r4, #32]
   2c916:	movs	r2, #25
   2c918:	ldr	r0, [sp, #24]
   2c91a:	mla	r3, r2, r3, r7
   2c91e:	subs	r0, r1, r0
   2c920:	ldr	r1, [sp, #20]
   2c922:	ldr.w	r2, [r9, #388]	; 0x184
   2c926:	mov	ip, r1
   2c928:	ldr	r1, [sp, #28]
   2c92a:	ldr.w	sl, [r3, #214]	; 0xd6
   2c92e:	mov.w	r3, #0
   2c932:	sbc.w	r1, ip, r1
   2c936:	str	r2, [sp, #100]	; 0x64
   2c938:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2c93c:	ldr	r1, [sp, #32]
   2c93e:	ldr	r2, [sp, #100]	; 0x64
   2c940:	movs	r3, #0
   2c942:	add.w	sl, sl, #101	; 0x65
   2c946:	mov	r9, r0
   2c948:	ldr	r0, [sp, #24]
   2c94a:	subs	r0, r1, r0
   2c94c:	ldr	r1, [sp, #36]	; 0x24
   2c94e:	mov	ip, r1
   2c950:	ldr	r1, [sp, #28]
   2c952:	sbc.w	r1, ip, r1
   2c956:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2c95a:	ldr	r2, [sp, #208]	; 0xd0
   2c95c:	sub.w	r3, r0, r9
   2c960:	cbnz	r2, 2c9b6 <btrfs_abort_transaction@@Base+0xf42>
   2c962:	mov	r2, r9
   2c964:	mov	r1, sl
   2c966:	mov	r0, r7
   2c968:	bl	16db2 <extent_buffer_bitmap_set@@Base>
   2c96c:	mov	r0, r7
   2c96e:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   2c972:	ldr	r2, [sp, #32]
   2c974:	ldr	r3, [sp, #16]
   2c976:	ldr	r1, [sp, #36]	; 0x24
   2c978:	subs	r3, r3, r2
   2c97a:	ldr	r2, [sp, #20]
   2c97c:	sbc.w	r2, r2, r1
   2c980:	ldr	r1, [sp, #8]
   2c982:	adds	r3, r1, r3
   2c984:	str	r3, [sp, #8]
   2c986:	ldr	r3, [sp, #12]
   2c988:	adc.w	r3, r2, r3
   2c98c:	str	r3, [sp, #12]
   2c98e:	ldrd	r2, r3, [sp, #8]
   2c992:	orrs	r3, r2
   2c994:	beq.n	2c9c2 <btrfs_abort_transaction@@Base+0xf4e>
   2c996:	mov	r2, r4
   2c998:	mov	r1, r8
   2c99a:	mov	r0, r6
   2c99c:	bl	2bda8 <btrfs_abort_transaction@@Base+0x334>
   2c9a0:	mov	r3, r0
   2c9a2:	cmp	r0, #0
   2c9a4:	bne.w	2c7d6 <btrfs_abort_transaction@@Base+0xd62>
   2c9a8:	ldrd	r2, r3, [sp, #32]
   2c9ac:	strd	r2, r3, [sp, #16]
   2c9b0:	b.n	2c84e <btrfs_abort_transaction@@Base+0xdda>
   2c9b2:	movs	r3, #0
   2c9b4:	b.n	2c8c6 <btrfs_abort_transaction@@Base+0xe52>
   2c9b6:	mov	r2, r9
   2c9b8:	mov	r1, sl
   2c9ba:	mov	r0, r7
   2c9bc:	bl	16dfa <extent_buffer_bitmap_clear@@Base>
   2c9c0:	b.n	2c96c <btrfs_abort_transaction@@Base+0xef8>
   2c9c2:	ldr	r2, [sp, #92]	; 0x5c
   2c9c4:	ldr	r3, [sp, #192]	; 0xc0
   2c9c6:	ldrd	r1, r0, [r5, #40]	; 0x28
   2c9ca:	adds	r3, r3, r2
   2c9cc:	ldr	r2, [sp, #196]	; 0xc4
   2c9ce:	str	r3, [sp, #40]	; 0x28
   2c9d0:	ldr	r3, [sp, #96]	; 0x60
   2c9d2:	adc.w	r3, r2, r3
   2c9d6:	str	r3, [sp, #44]	; 0x2c
   2c9d8:	ldr.w	r3, [r5, #49]	; 0x31
   2c9dc:	ldr.w	r2, [r5, #53]	; 0x35
   2c9e0:	adds	r3, r3, r1
   2c9e2:	str	r3, [sp, #72]	; 0x48
   2c9e4:	adc.w	r3, r2, r0
   2c9e8:	str	r3, [sp, #76]	; 0x4c
   2c9ea:	ldrd	r0, r1, [sp, #72]	; 0x48
   2c9ee:	ldrd	r2, r3, [sp, #40]	; 0x28
   2c9f2:	cmp	r3, r1
   2c9f4:	it	eq
   2c9f6:	cmpeq	r2, r0
   2c9f8:	bcs.n	2ca7a <btrfs_abort_transaction@@Base+0x1006>
   2c9fa:	ldr	r2, [r4, #32]
   2c9fc:	add	r1, sp, #108	; 0x6c
   2c9fe:	ldr	r0, [r4, #0]
   2ca00:	bl	2ba7c <btrfs_abort_transaction@@Base+0x8>
   2ca04:	ldrd	r3, r0, [sp, #108]	; 0x6c
   2ca08:	ldr.w	r2, [sp, #117]	; 0x75
   2ca0c:	ldr.w	r1, [sp, #121]	; 0x79
   2ca10:	adds	r3, r3, r2
   2ca12:	str	r3, [sp, #80]	; 0x50
   2ca14:	adc.w	r3, r0, r1
   2ca18:	str	r3, [sp, #84]	; 0x54
   2ca1a:	ldrd	r0, r1, [sp, #80]	; 0x50
   2ca1e:	ldrd	r2, r3, [sp, #40]	; 0x28
   2ca22:	cmp	r3, r1
   2ca24:	it	eq
   2ca26:	cmpeq	r2, r0
   2ca28:	bcs.n	2ca68 <btrfs_abort_transaction@@Base+0xff4>
   2ca2a:	ldrd	r2, r3, [sp, #40]	; 0x28
   2ca2e:	mov	r0, r4
   2ca30:	bl	2bc6e <btrfs_abort_transaction@@Base+0x1fa>
   2ca34:	ldr	r3, [sp, #68]	; 0x44
   2ca36:	ldr	r2, [sp, #208]	; 0xd0
   2ca38:	subs	r3, #1
   2ca3a:	it	ne
   2ca3c:	movne	r3, #1
   2ca3e:	cbz	r2, 2ca80 <btrfs_abort_transaction@@Base+0x100c>
   2ca40:	cmp	r0, #1
   2ca42:	ite	ne
   2ca44:	negne	r3, r3
   2ca46:	rsbeq	r3, r3, #1
   2ca4a:	mov	r0, r4
   2ca4c:	str	r3, [sp, #8]
   2ca4e:	bl	18558 <btrfs_release_path@@Base>
   2ca52:	ldr	r3, [sp, #8]
   2ca54:	cmp	r3, #0
   2ca56:	beq.w	2c7d6 <btrfs_abort_transaction@@Base+0xd62>
   2ca5a:	mov	r2, r4
   2ca5c:	mov	r1, r5
   2ca5e:	mov	r0, r6
   2ca60:	bl	2be58 <btrfs_abort_transaction@@Base+0x3e4>
   2ca64:	mov	r3, r0
   2ca66:	b.n	2c7d6 <btrfs_abort_transaction@@Base+0xd62>
   2ca68:	mov	r2, r4
   2ca6a:	mov	r1, r8
   2ca6c:	mov	r0, r6
   2ca6e:	bl	2bda8 <btrfs_abort_transaction@@Base+0x334>
   2ca72:	mov	r3, r0
   2ca74:	cmp	r0, #0
   2ca76:	beq.n	2ca2a <btrfs_abort_transaction@@Base+0xfb6>
   2ca78:	b.n	2c7d6 <btrfs_abort_transaction@@Base+0xd62>
   2ca7a:	mov.w	r0, #4294967295	; 0xffffffff
   2ca7e:	b.n	2ca34 <btrfs_abort_transaction@@Base+0xfc0>
   2ca80:	cmp	r0, #1
   2ca82:	it	eq
   2ca84:	addeq.w	r3, r3, #4294967295	; 0xffffffff
   2ca88:	b.n	2ca4a <btrfs_abort_transaction@@Base+0xfd6>
   2ca8a:	mov	r0, r3
   2ca8c:	add	sp, #156	; 0x9c
   2ca8e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ca92:	nop
   2ca94:	strh	r6, [r5, #50]	; 0x32
   2ca96:	movs	r3, r0
   2ca98:	lsls	r0, r5, #8
   2ca9a:	movs	r0, r0
   2ca9c:	strh	r6, [r4, #44]	; 0x2c
   2ca9e:	movs	r3, r0
   2caa0:	ldr	r0, [pc, #596]	; (2ccf8 <btrfs_abort_transaction@@Base+0x1284>)
   2caa2:	movs	r1, r0
   2caa4:	bics	r5, r2
   2caa6:	movs	r1, r0
   2caa8:	add	sl, r4
   2caaa:	movs	r1, r0
   2caac:	add	ip, r5
   2caae:	movs	r1, r0
   2cab0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cab4:	sub	sp, #116	; 0x74
   2cab6:	mov	r5, r2
   2cab8:	ldr	r2, [pc, #1000]	; (2cea4 <btrfs_abort_transaction@@Base+0x1430>)
   2caba:	ldr	r3, [sp, #160]	; 0xa0
   2cabc:	mov	r6, r1
   2cabe:	add	r2, pc
   2cac0:	ldr	r1, [r0, #0]
   2cac2:	mov.w	r8, #0
   2cac6:	mov	r7, r0
   2cac8:	str	r3, [sp, #48]	; 0x30
   2caca:	mov	r0, r8
   2cacc:	ldr	r3, [sp, #164]	; 0xa4
   2cace:	str	r3, [sp, #52]	; 0x34
   2cad0:	ldr	r3, [pc, #980]	; (2cea8 <btrfs_abort_transaction@@Base+0x1434>)
   2cad2:	ldr	r3, [r2, r3]
   2cad4:	mov	r2, r6
   2cad6:	ldr	r3, [r3, #0]
   2cad8:	str	r3, [sp, #108]	; 0x6c
   2cada:	mov.w	r3, #0
   2cade:	str.w	r8, [sp]
   2cae2:	mov	r3, r5
   2cae4:	ldr	r1, [r1, #48]	; 0x30
   2cae6:	bl	2bae4 <btrfs_abort_transaction@@Base+0x70>
   2caea:	cmn.w	r0, #4096	; 0x1000
   2caee:	bls.n	2cb08 <btrfs_abort_transaction@@Base+0x1094>
   2caf0:	mov	r4, r0
   2caf2:	ldr	r2, [pc, #952]	; (2ceac <btrfs_abort_transaction@@Base+0x1438>)
   2caf4:	ldr	r3, [pc, #944]	; (2cea8 <btrfs_abort_transaction@@Base+0x1434>)
   2caf6:	add	r2, pc
   2caf8:	ldr	r3, [r2, r3]
   2cafa:	ldr	r2, [r3, #0]
   2cafc:	ldr	r3, [sp, #108]	; 0x6c
   2cafe:	eors	r2, r3
   2cb00:	beq.w	2ce9a <btrfs_abort_transaction@@Base+0x1426>
   2cb04:	blx	8708 <__stack_chk_fail@plt>
   2cb08:	ldr	r4, [r5, #0]
   2cb0a:	add	r4, r0
   2cb0c:	mov	r0, r5
   2cb0e:	ldr	r4, [r4, #100]	; 0x64
   2cb10:	bl	18558 <btrfs_release_path@@Base>
   2cb14:	lsls	r4, r4, #31
   2cb16:	bpl.n	2cb38 <btrfs_abort_transaction@@Base+0x10c4>
   2cb18:	ldr	r3, [sp, #48]	; 0x30
   2cb1a:	mov	r2, r5
   2cb1c:	mov	r1, r6
   2cb1e:	mov	r0, r7
   2cb20:	str.w	r8, [sp, #16]
   2cb24:	str	r3, [sp, #8]
   2cb26:	ldr	r3, [sp, #52]	; 0x34
   2cb28:	str	r3, [sp, #12]
   2cb2a:	ldrd	r3, r4, [sp, #152]	; 0x98
   2cb2e:	strd	r3, r4, [sp]
   2cb32:	bl	2c704 <btrfs_abort_transaction@@Base+0xc90>
   2cb36:	b.n	2caf0 <btrfs_abort_transaction@@Base+0x107c>
   2cb38:	ldr	r3, [r7, #0]
   2cb3a:	ldrd	r0, r1, [sp, #152]	; 0x98
   2cb3e:	ldr.w	sl, [r3, #48]	; 0x30
   2cb42:	ldrd	r3, r4, [sp, #152]	; 0x98
   2cb46:	strd	r3, r4, [sp, #88]	; 0x58
   2cb4a:	movs	r3, #199	; 0xc7
   2cb4c:	strb.w	r3, [sp, #96]	; 0x60
   2cb50:	ldr	r3, [sp, #48]	; 0x30
   2cb52:	str.w	r3, [sp, #97]	; 0x61
   2cb56:	ldr	r3, [sp, #52]	; 0x34
   2cb58:	str.w	r3, [sp, #101]	; 0x65
   2cb5c:	ldrd	r2, r3, [r6, #40]	; 0x28
   2cb60:	cmp	r1, r3
   2cb62:	it	eq
   2cb64:	cmpeq	r0, r2
   2cb66:	beq.n	2cbec <btrfs_abort_transaction@@Base+0x1178>
   2cb68:	ldr	r3, [sp, #152]	; 0x98
   2cb6a:	add.w	r8, sp, #68	; 0x44
   2cb6e:	mov.w	r1, #4294967295	; 0xffffffff
   2cb72:	mov	r0, r7
   2cb74:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2cb78:	ldr	r3, [sp, #156]	; 0x9c
   2cb7a:	strb.w	r1, [sp, #77]	; 0x4d
   2cb7e:	adc.w	r3, r3, #4294967295	; 0xffffffff
   2cb82:	str	r1, [sp, #0]
   2cb84:	strd	r2, r3, [sp, #68]	; 0x44
   2cb88:	mov	r1, sl
   2cb8a:	movs	r2, #255	; 0xff
   2cb8c:	mov	r3, r5
   2cb8e:	strb.w	r2, [sp, #76]	; 0x4c
   2cb92:	strb.w	r2, [sp, #78]	; 0x4e
   2cb96:	strb.w	r2, [sp, #79]	; 0x4f
   2cb9a:	strb.w	r2, [sp, #80]	; 0x50
   2cb9e:	strb.w	r2, [sp, #81]	; 0x51
   2cba2:	strb.w	r2, [sp, #82]	; 0x52
   2cba6:	strb.w	r2, [sp, #83]	; 0x53
   2cbaa:	strb.w	r2, [sp, #84]	; 0x54
   2cbae:	mov	r2, r8
   2cbb0:	bl	2bd54 <btrfs_abort_transaction@@Base+0x2e0>
   2cbb4:	mov	r4, r0
   2cbb6:	cmp	r0, #0
   2cbb8:	bne.n	2caf2 <btrfs_abort_transaction@@Base+0x107e>
   2cbba:	ldr	r2, [r5, #32]
   2cbbc:	mov	r1, r8
   2cbbe:	ldr	r0, [r5, #0]
   2cbc0:	bl	2ba7c <btrfs_abort_transaction@@Base+0x8>
   2cbc4:	ldrb.w	r3, [sp, #76]	; 0x4c
   2cbc8:	cmp	r3, #199	; 0xc7
   2cbca:	beq.n	2cbf2 <btrfs_abort_transaction@@Base+0x117e>
   2cbcc:	sub.w	r0, r3, #198	; 0xc6
   2cbd0:	ldr	r1, [pc, #732]	; (2ceb0 <btrfs_abort_transaction@@Base+0x143c>)
   2cbd2:	negs	r3, r0
   2cbd4:	movw	r2, #857	; 0x359
   2cbd8:	adcs	r3, r0
   2cbda:	ldr	r0, [pc, #728]	; (2ceb4 <btrfs_abort_transaction@@Base+0x1440>)
   2cbdc:	add	r1, pc
   2cbde:	add	r0, pc
   2cbe0:	adds	r1, #123	; 0x7b
   2cbe2:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2cbe6:	mov	r0, r5
   2cbe8:	bl	18558 <btrfs_release_path@@Base>
   2cbec:	mov.w	fp, #1
   2cbf0:	b.n	2ccc2 <btrfs_abort_transaction@@Base+0x124e>
   2cbf2:	ldrd	r8, r9, [sp, #68]	; 0x44
   2cbf6:	ldr.w	r3, [sp, #77]	; 0x4d
   2cbfa:	ldr.w	r2, [sp, #81]	; 0x51
   2cbfe:	adds.w	r3, r3, r8
   2cc02:	str	r3, [sp, #32]
   2cc04:	adc.w	r3, r2, r9
   2cc08:	str	r3, [sp, #36]	; 0x24
   2cc0a:	ldrd	r2, r3, [r6, #40]	; 0x28
   2cc0e:	cmp	r9, r3
   2cc10:	it	eq
   2cc12:	cmpeq	r8, r2
   2cc14:	bcc.w	2cdb4 <btrfs_abort_transaction@@Base+0x1340>
   2cc18:	ldrd	r0, r1, [sp, #32]
   2cc1c:	cmp	r3, r1
   2cc1e:	it	eq
   2cc20:	cmpeq	r2, r0
   2cc22:	ite	cc
   2cc24:	movcc	r3, #1
   2cc26:	movcs	r3, #0
   2cc28:	ldr	r1, [pc, #652]	; (2ceb8 <btrfs_abort_transaction@@Base+0x1444>)
   2cc2a:	mov.w	r2, #864	; 0x360
   2cc2e:	ldr	r0, [pc, #652]	; (2cebc <btrfs_abort_transaction@@Base+0x1448>)
   2cc30:	add	r1, pc
   2cc32:	adds	r1, #123	; 0x7b
   2cc34:	add	r0, pc
   2cc36:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2cc3a:	ldrd	r2, r3, [sp, #152]	; 0x98
   2cc3e:	cmp	r9, r3
   2cc40:	it	eq
   2cc42:	cmpeq	r8, r2
   2cc44:	bcs.n	2cc5a <btrfs_abort_transaction@@Base+0x11e6>
   2cc46:	mov	r4, r3
   2cc48:	mov	r3, r2
   2cc4a:	ldrd	r1, r2, [sp, #32]
   2cc4e:	cmp	r4, r2
   2cc50:	it	eq
   2cc52:	cmpeq	r3, r1
   2cc54:	ite	cs
   2cc56:	movcs	r4, #1
   2cc58:	movcc	r4, #0
   2cc5a:	ldr	r1, [pc, #612]	; (2cec0 <btrfs_abort_transaction@@Base+0x144c>)
   2cc5c:	mov	r3, r4
   2cc5e:	ldr	r0, [pc, #612]	; (2cec4 <btrfs_abort_transaction@@Base+0x1450>)
   2cc60:	movw	r2, #866	; 0x362
   2cc64:	add	r1, pc
   2cc66:	adds	r1, #123	; 0x7b
   2cc68:	add	r0, pc
   2cc6a:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2cc6e:	ldrd	r3, r4, [sp, #152]	; 0x98
   2cc72:	ldrd	r1, r2, [sp, #32]
   2cc76:	cmp	r4, r2
   2cc78:	mov.w	r4, #1
   2cc7c:	it	eq
   2cc7e:	cmpeq	r3, r1
   2cc80:	bne.n	2ccba <btrfs_abort_transaction@@Base+0x1246>
   2cc82:	str	r4, [sp, #0]
   2cc84:	mov	r2, r5
   2cc86:	ldr	r3, [r5, #32]
   2cc88:	mov	r1, sl
   2cc8a:	mov	r0, r7
   2cc8c:	bl	1baf8 <btrfs_del_items@@Base>
   2cc90:	mov	r4, r0
   2cc92:	cmp	r0, #0
   2cc94:	bne.w	2caf2 <btrfs_abort_transaction@@Base+0x107e>
   2cc98:	ldr.w	r3, [sp, #97]	; 0x61
   2cc9c:	ldr.w	r1, [sp, #77]	; 0x4d
   2cca0:	ldr.w	r2, [sp, #101]	; 0x65
   2cca4:	ldr.w	r0, [sp, #81]	; 0x51
   2cca8:	adds	r3, r3, r1
   2ccaa:	strd	r8, r9, [sp, #88]	; 0x58
   2ccae:	adc.w	r2, r0, r2
   2ccb2:	str.w	r3, [sp, #97]	; 0x61
   2ccb6:	str.w	r2, [sp, #101]	; 0x65
   2ccba:	mov	r0, r5
   2ccbc:	mov	fp, r4
   2ccbe:	bl	18558 <btrfs_release_path@@Base>
   2ccc2:	ldr	r2, [sp, #48]	; 0x30
   2ccc4:	ldr	r3, [sp, #152]	; 0x98
   2ccc6:	ldrd	r1, r0, [r6, #40]	; 0x28
   2ccca:	adds	r3, r3, r2
   2cccc:	ldr	r2, [sp, #156]	; 0x9c
   2ccce:	str	r3, [sp, #24]
   2ccd0:	ldr	r3, [sp, #52]	; 0x34
   2ccd2:	adc.w	r3, r2, r3
   2ccd6:	str	r3, [sp, #28]
   2ccd8:	ldr.w	r3, [r6, #49]	; 0x31
   2ccdc:	ldr.w	r2, [r6, #53]	; 0x35
   2cce0:	adds	r3, r3, r1
   2cce2:	str	r3, [sp, #56]	; 0x38
   2cce4:	adc.w	r3, r2, r0
   2cce8:	str	r3, [sp, #60]	; 0x3c
   2ccea:	ldrd	r1, r2, [sp, #56]	; 0x38
   2ccee:	ldrd	r3, r4, [sp, #24]
   2ccf2:	cmp	r4, r2
   2ccf4:	it	eq
   2ccf6:	cmpeq	r3, r1
   2ccf8:	beq.n	2cd78 <btrfs_abort_transaction@@Base+0x1304>
   2ccfa:	ldr	r3, [sp, #24]
   2ccfc:	add.w	r8, sp, #68	; 0x44
   2cd00:	movs	r2, #255	; 0xff
   2cd02:	mov.w	r1, #4294967295	; 0xffffffff
   2cd06:	strb.w	r2, [sp, #76]	; 0x4c
   2cd0a:	mov	r0, r7
   2cd0c:	str	r3, [sp, #68]	; 0x44
   2cd0e:	ldr	r3, [sp, #28]
   2cd10:	strb.w	r1, [sp, #77]	; 0x4d
   2cd14:	strb.w	r2, [sp, #78]	; 0x4e
   2cd18:	str	r3, [sp, #72]	; 0x48
   2cd1a:	mov	r3, r5
   2cd1c:	strb.w	r2, [sp, #79]	; 0x4f
   2cd20:	strb.w	r2, [sp, #80]	; 0x50
   2cd24:	strb.w	r2, [sp, #81]	; 0x51
   2cd28:	strb.w	r2, [sp, #82]	; 0x52
   2cd2c:	strb.w	r2, [sp, #83]	; 0x53
   2cd30:	strb.w	r2, [sp, #84]	; 0x54
   2cd34:	mov	r2, r8
   2cd36:	str	r1, [sp, #0]
   2cd38:	mov	r1, sl
   2cd3a:	bl	2bd54 <btrfs_abort_transaction@@Base+0x2e0>
   2cd3e:	mov	r4, r0
   2cd40:	cmp	r0, #0
   2cd42:	bne.w	2caf2 <btrfs_abort_transaction@@Base+0x107e>
   2cd46:	ldr	r2, [r5, #32]
   2cd48:	mov	r1, r8
   2cd4a:	ldr	r0, [r5, #0]
   2cd4c:	bl	2ba7c <btrfs_abort_transaction@@Base+0x8>
   2cd50:	ldrb.w	r3, [sp, #76]	; 0x4c
   2cd54:	cmp	r3, #199	; 0xc7
   2cd56:	beq.n	2cdb8 <btrfs_abort_transaction@@Base+0x1344>
   2cd58:	sub.w	r1, r3, #198	; 0xc6
   2cd5c:	ldr	r0, [pc, #360]	; (2cec8 <btrfs_abort_transaction@@Base+0x1454>)
   2cd5e:	negs	r3, r1
   2cd60:	mov.w	r2, #896	; 0x380
   2cd64:	adcs	r3, r1
   2cd66:	ldr	r1, [pc, #356]	; (2cecc <btrfs_abort_transaction@@Base+0x1458>)
   2cd68:	add	r0, pc
   2cd6a:	add	r1, pc
   2cd6c:	adds	r1, #123	; 0x7b
   2cd6e:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2cd72:	mov	r0, r5
   2cd74:	bl	18558 <btrfs_release_path@@Base>
   2cd78:	movs	r3, #0
   2cd7a:	mov	r2, r5
   2cd7c:	str	r3, [sp, #64]	; 0x40
   2cd7e:	mov	r1, sl
   2cd80:	movs	r3, #1
   2cd82:	mov	r0, r7
   2cd84:	str	r3, [sp, #4]
   2cd86:	add	r3, sp, #64	; 0x40
   2cd88:	str	r3, [sp, #0]
   2cd8a:	add	r3, sp, #88	; 0x58
   2cd8c:	bl	1b70c <btrfs_insert_empty_items@@Base>
   2cd90:	mov	r4, r0
   2cd92:	cmp	r0, #0
   2cd94:	bne.w	2caf2 <btrfs_abort_transaction@@Base+0x107e>
   2cd98:	mov	r0, r5
   2cd9a:	bl	18558 <btrfs_release_path@@Base>
   2cd9e:	cmp.w	fp, #0
   2cda2:	beq.w	2caf2 <btrfs_abort_transaction@@Base+0x107e>
   2cda6:	mov	r3, fp
   2cda8:	mov	r2, r5
   2cdaa:	mov	r1, r6
   2cdac:	mov	r0, r7
   2cdae:	bl	2be58 <btrfs_abort_transaction@@Base+0x3e4>
   2cdb2:	b.n	2caf0 <btrfs_abort_transaction@@Base+0x107c>
   2cdb4:	mov	r3, r4
   2cdb6:	b.n	2cc28 <btrfs_abort_transaction@@Base+0x11b4>
   2cdb8:	ldrd	r8, r9, [sp, #68]	; 0x44
   2cdbc:	ldr.w	r3, [sp, #77]	; 0x4d
   2cdc0:	ldr.w	r2, [sp, #81]	; 0x51
   2cdc4:	adds.w	r3, r3, r8
   2cdc8:	str	r3, [sp, #40]	; 0x28
   2cdca:	adc.w	r3, r2, r9
   2cdce:	str	r3, [sp, #44]	; 0x2c
   2cdd0:	ldrd	r2, r3, [r6, #40]	; 0x28
   2cdd4:	cmp	r9, r3
   2cdd6:	it	eq
   2cdd8:	cmpeq	r8, r2
   2cdda:	bcc.n	2ce92 <btrfs_abort_transaction@@Base+0x141e>
   2cddc:	ldrd	r0, r1, [sp, #40]	; 0x28
   2cde0:	cmp	r3, r1
   2cde2:	it	eq
   2cde4:	cmpeq	r2, r0
   2cde6:	ite	cc
   2cde8:	movcc	r3, #1
   2cdea:	movcs	r3, #0
   2cdec:	ldr	r1, [pc, #224]	; (2ced0 <btrfs_abort_transaction@@Base+0x145c>)
   2cdee:	movw	r2, #903	; 0x387
   2cdf2:	ldr	r0, [pc, #224]	; (2ced4 <btrfs_abort_transaction@@Base+0x1460>)
   2cdf4:	add	r1, pc
   2cdf6:	adds	r1, #123	; 0x7b
   2cdf8:	add	r0, pc
   2cdfa:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2cdfe:	ldrd	r2, r3, [sp, #152]	; 0x98
   2ce02:	cmp	r9, r3
   2ce04:	it	eq
   2ce06:	cmpeq	r8, r2
   2ce08:	bcs.n	2ce16 <btrfs_abort_transaction@@Base+0x13a2>
   2ce0a:	ldrd	r0, r1, [sp, #40]	; 0x28
   2ce0e:	cmp	r3, r1
   2ce10:	it	eq
   2ce12:	cmpeq	r2, r0
   2ce14:	bcs.n	2ce96 <btrfs_abort_transaction@@Base+0x1422>
   2ce16:	ldrd	r2, r3, [sp, #24]
   2ce1a:	cmp	r9, r3
   2ce1c:	it	eq
   2ce1e:	cmpeq	r8, r2
   2ce20:	bcc.n	2ce36 <btrfs_abort_transaction@@Base+0x13c2>
   2ce22:	mov	r4, r3
   2ce24:	mov	r3, r2
   2ce26:	ldrd	r1, r2, [sp, #40]	; 0x28
   2ce2a:	cmp	r4, r2
   2ce2c:	it	eq
   2ce2e:	cmpeq	r3, r1
   2ce30:	ite	cc
   2ce32:	movcc	r4, #1
   2ce34:	movcs	r4, #0
   2ce36:	ldr	r1, [pc, #160]	; (2ced8 <btrfs_abort_transaction@@Base+0x1464>)
   2ce38:	mov	r3, r4
   2ce3a:	ldr	r0, [pc, #160]	; (2cedc <btrfs_abort_transaction@@Base+0x1468>)
   2ce3c:	movw	r2, #905	; 0x389
   2ce40:	add	r1, pc
   2ce42:	adds	r1, #123	; 0x7b
   2ce44:	add	r0, pc
   2ce46:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2ce4a:	ldrd	r3, r4, [sp, #24]
   2ce4e:	cmp	r4, r9
   2ce50:	it	eq
   2ce52:	cmpeq	r3, r8
   2ce54:	bne.n	2cd72 <btrfs_abort_transaction@@Base+0x12fe>
   2ce56:	movs	r3, #1
   2ce58:	mov	r2, r5
   2ce5a:	str	r3, [sp, #0]
   2ce5c:	mov	r1, sl
   2ce5e:	ldr	r3, [r5, #32]
   2ce60:	mov	r0, r7
   2ce62:	bl	1baf8 <btrfs_del_items@@Base>
   2ce66:	mov	r4, r0
   2ce68:	cmp	r0, #0
   2ce6a:	bne.w	2caf2 <btrfs_abort_transaction@@Base+0x107e>
   2ce6e:	ldr.w	r3, [sp, #97]	; 0x61
   2ce72:	add.w	fp, fp, #4294967295	; 0xffffffff
   2ce76:	ldr.w	r1, [sp, #77]	; 0x4d
   2ce7a:	ldr.w	r2, [sp, #101]	; 0x65
   2ce7e:	ldr.w	r0, [sp, #81]	; 0x51
   2ce82:	adds	r3, r3, r1
   2ce84:	str.w	r3, [sp, #97]	; 0x61
   2ce88:	adc.w	r2, r0, r2
   2ce8c:	str.w	r2, [sp, #101]	; 0x65
   2ce90:	b.n	2cd72 <btrfs_abort_transaction@@Base+0x12fe>
   2ce92:	mov	r3, r4
   2ce94:	b.n	2cdec <btrfs_abort_transaction@@Base+0x1378>
   2ce96:	movs	r4, #1
   2ce98:	b.n	2ce36 <btrfs_abort_transaction@@Base+0x13c2>
   2ce9a:	mov	r0, r4
   2ce9c:	add	sp, #116	; 0x74
   2ce9e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cea2:	nop
   2cea4:	strh	r2, [r0, #22]
   2cea6:	movs	r3, r0
   2cea8:	lsls	r0, r5, #8
   2ceaa:	movs	r0, r0
   2ceac:	strh	r2, [r1, #20]
   2ceae:	movs	r3, r0
   2ceb0:	add	pc, pc
   2ceb2:	movs	r1, r0
   2ceb4:	rors	r0, r2
   2ceb6:	movs	r1, r0
   2ceb8:	add	fp, r5
   2ceba:	movs	r1, r0
   2cebc:	sbcs	r0, r4
   2cebe:	movs	r1, r0
   2cec0:	add	r7, lr
   2cec2:	movs	r1, r0
   2cec4:	sbcs	r6, r7
   2cec6:	movs	r1, r0
   2cec8:	eors	r6, r0
   2ceca:	movs	r1, r0
   2cecc:	muls	r1, r6
   2cece:	movs	r1, r0
   2ced0:	cmn	r7, r4
   2ced2:	movs	r1, r0
   2ced4:	subs	r7, #220	; 0xdc
   2ced6:	movs	r1, r0
   2ced8:	cmp	r3, r3
   2ceda:	movs	r1, r0
   2cedc:	ands	r4, r1
   2cede:	movs	r1, r0

0002cee0 <remove_from_free_space_tree@@Base>:
   2cee0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cee4:	sub	sp, #92	; 0x5c
   2cee6:	movs	r4, #0
   2cee8:	mov	r6, r0
   2ceea:	strd	r2, r3, [sp, #24]
   2ceee:	ldrd	sl, r3, [sp, #128]	; 0x80
   2cef2:	ldr	r2, [pc, #616]	; (2d15c <remove_from_free_space_tree@@Base+0x27c>)
   2cef4:	str	r3, [sp, #52]	; 0x34
   2cef6:	add	r2, pc
   2cef8:	ldr	r3, [pc, #612]	; (2d160 <remove_from_free_space_tree@@Base+0x280>)
   2cefa:	ldr	r3, [r2, r3]
   2cefc:	ldr	r3, [r3, #0]
   2cefe:	str	r3, [sp, #84]	; 0x54
   2cf00:	mov.w	r3, #0
   2cf04:	ldr	r3, [r0, #0]
   2cf06:	ldr.w	r3, [r3, #308]	; 0x134
   2cf0a:	ldr.w	r1, [r3, #180]	; 0xb4
   2cf0e:	mov	r3, r4
   2cf10:	and.w	r2, r1, #1
   2cf14:	orrs	r3, r2
   2cf16:	beq.w	2d0ca <remove_from_free_space_tree@@Base+0x1ea>
   2cf1a:	bl	18550 <btrfs_alloc_path@@Base>
   2cf1e:	mov	r5, r0
   2cf20:	cmp	r0, #0
   2cf22:	beq.w	2d14e <remove_from_free_space_tree@@Base+0x26e>
   2cf26:	ldrd	r2, r3, [sp, #24]
   2cf2a:	ldr	r0, [r6, #0]
   2cf2c:	bl	1f5b4 <btrfs_lookup_block_group@@Base>
   2cf30:	mov	r8, r0
   2cf32:	cbnz	r0, 2cf46 <remove_from_free_space_tree@@Base+0x66>
   2cf34:	ldr	r1, [pc, #556]	; (2d164 <remove_from_free_space_tree@@Base+0x284>)
   2cf36:	movw	r2, #795	; 0x31b
   2cf3a:	ldr	r0, [pc, #556]	; (2d168 <remove_from_free_space_tree@@Base+0x288>)
   2cf3c:	add	r1, pc
   2cf3e:	adds	r1, #145	; 0x91
   2cf40:	add	r0, pc
   2cf42:	bl	2bbf8 <btrfs_abort_transaction@@Base+0x184>
   2cf46:	ldr	r1, [r6, #0]
   2cf48:	mov	r2, r0
   2cf4a:	str	r4, [sp, #0]
   2cf4c:	mov	r3, r5
   2cf4e:	mov	r0, r4
   2cf50:	ldr	r1, [r1, #48]	; 0x30
   2cf52:	bl	2bae4 <btrfs_abort_transaction@@Base+0x70>
   2cf56:	cmn.w	r0, #4096	; 0x1000
   2cf5a:	bls.n	2cf60 <remove_from_free_space_tree@@Base+0x80>
   2cf5c:	mov	r4, r0
   2cf5e:	b.n	2d0ba <remove_from_free_space_tree@@Base+0x1da>
   2cf60:	ldr	r4, [r5, #0]
   2cf62:	add	r4, r0
   2cf64:	mov	r0, r5
   2cf66:	ldr	r4, [r4, #100]	; 0x64
   2cf68:	bl	18558 <btrfs_release_path@@Base>
   2cf6c:	lsls	r0, r4, #31
   2cf6e:	bpl.n	2cf90 <remove_from_free_space_tree@@Base+0xb0>
   2cf70:	movs	r3, #1
   2cf72:	str	r3, [sp, #16]
   2cf74:	ldr	r3, [sp, #52]	; 0x34
   2cf76:	mov	r2, r5
   2cf78:	mov	r1, r8
   2cf7a:	mov	r0, r6
   2cf7c:	str.w	sl, [sp, #8]
   2cf80:	str	r3, [sp, #12]
   2cf82:	ldrd	r3, r4, [sp, #24]
   2cf86:	strd	r3, r4, [sp]
   2cf8a:	bl	2c704 <btrfs_abort_transaction@@Base+0xc90>
   2cf8e:	b.n	2cf5c <remove_from_free_space_tree@@Base+0x7c>
   2cf90:	ldr	r3, [r6, #0]
   2cf92:	add.w	r7, sp, #73	; 0x49
   2cf96:	add.w	fp, sp, #64	; 0x40
   2cf9a:	mov.w	r2, #4294967295	; 0xffffffff
   2cf9e:	mov	r0, r6
   2cfa0:	strb.w	r2, [sp, #73]	; 0x49
   2cfa4:	ldr.w	r9, [r3, #48]	; 0x30
   2cfa8:	ldrd	r3, r4, [sp, #24]
   2cfac:	mov	r1, r9
   2cfae:	strd	r3, r4, [sp, #64]	; 0x40
   2cfb2:	movs	r3, #255	; 0xff
   2cfb4:	strb	r3, [r7, #1]
   2cfb6:	strb	r3, [r7, #2]
   2cfb8:	strb	r3, [r7, #3]
   2cfba:	strb	r3, [r7, #4]
   2cfbc:	strb	r3, [r7, #5]
   2cfbe:	strb	r3, [r7, #6]
   2cfc0:	strb	r3, [r7, #7]
   2cfc2:	strb.w	r3, [sp, #72]	; 0x48
   2cfc6:	mov	r3, r5
   2cfc8:	str	r2, [sp, #0]
   2cfca:	mov	r2, fp
   2cfcc:	bl	2bd54 <btrfs_abort_transaction@@Base+0x2e0>
   2cfd0:	mov	r4, r0
   2cfd2:	cmp	r0, #0
   2cfd4:	bne.n	2d0ba <remove_from_free_space_tree@@Base+0x1da>
   2cfd6:	ldr	r3, [sp, #24]
   2cfd8:	mov	r1, fp
   2cfda:	ldr	r2, [sp, #28]
   2cfdc:	adds.w	r3, r3, sl
   2cfe0:	str	r3, [sp, #32]
   2cfe2:	ldr	r3, [sp, #52]	; 0x34
   2cfe4:	ldr	r0, [r5, #0]
   2cfe6:	adc.w	r3, r2, r3
   2cfea:	ldr	r2, [r5, #32]
   2cfec:	str	r3, [sp, #36]	; 0x24
   2cfee:	bl	2ba7c <btrfs_abort_transaction@@Base+0x8>
   2cff2:	ldrb.w	r3, [sp, #72]	; 0x48
   2cff6:	movw	r2, #691	; 0x2b3
   2cffa:	ldr	r0, [pc, #368]	; (2d16c <remove_from_free_space_tree@@Base+0x28c>)
   2cffc:	sub.w	r1, r3, #199	; 0xc7
   2d000:	negs	r3, r1
   2d002:	add	r0, pc
   2d004:	adcs	r3, r1
   2d006:	ldr	r1, [pc, #360]	; (2d170 <remove_from_free_space_tree@@Base+0x290>)
   2d008:	add	r1, pc
   2d00a:	adds	r1, #173	; 0xad
   2d00c:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2d010:	ldrd	sl, fp, [sp, #64]	; 0x40
   2d014:	ldr.w	r3, [sp, #73]	; 0x49
   2d018:	ldr.w	r2, [sp, #77]	; 0x4d
   2d01c:	adds.w	r3, r3, sl
   2d020:	str	r3, [sp, #40]	; 0x28
   2d022:	adc.w	r3, r2, fp
   2d026:	str	r3, [sp, #44]	; 0x2c
   2d028:	ldrd	r2, r3, [sp, #24]
   2d02c:	cmp	r3, fp
   2d02e:	it	eq
   2d030:	cmpeq	r2, sl
   2d032:	bcc.n	2d048 <remove_from_free_space_tree@@Base+0x168>
   2d034:	ldrd	r3, r4, [sp, #40]	; 0x28
   2d038:	ldrd	r1, r2, [sp, #32]
   2d03c:	cmp	r4, r2
   2d03e:	it	eq
   2d040:	cmpeq	r3, r1
   2d042:	ite	cs
   2d044:	movcs	r4, #1
   2d046:	movcc	r4, #0
   2d048:	ldr	r1, [pc, #296]	; (2d174 <remove_from_free_space_tree@@Base+0x294>)
   2d04a:	mov	r3, r4
   2d04c:	ldr	r0, [pc, #296]	; (2d178 <remove_from_free_space_tree@@Base+0x298>)
   2d04e:	movw	r2, #695	; 0x2b7
   2d052:	add	r1, pc
   2d054:	adds	r1, #173	; 0xad
   2d056:	add	r0, pc
   2d058:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2d05c:	movs	r3, #1
   2d05e:	mov	r2, r5
   2d060:	str	r3, [sp, #0]
   2d062:	mov	r1, r9
   2d064:	ldr	r3, [r5, #32]
   2d066:	mov	r0, r6
   2d068:	bl	1baf8 <btrfs_del_items@@Base>
   2d06c:	mov	r4, r0
   2d06e:	cbnz	r0, 2d0ba <remove_from_free_space_tree@@Base+0x1da>
   2d070:	ldrd	r2, r3, [sp, #24]
   2d074:	cmp	fp, r3
   2d076:	it	eq
   2d078:	cmpeq	sl, r2
   2d07a:	bcs.n	2d0de <remove_from_free_space_tree@@Base+0x1fe>
   2d07c:	movs	r3, #199	; 0xc7
   2d07e:	strb.w	r3, [sp, #72]	; 0x48
   2d082:	ldr	r3, [sp, #24]
   2d084:	mov	r0, r5
   2d086:	strd	sl, fp, [sp, #64]	; 0x40
   2d08a:	subs.w	r2, r3, sl
   2d08e:	ldr	r3, [sp, #28]
   2d090:	str.w	r2, [sp, #73]	; 0x49
   2d094:	sbc.w	r3, r3, fp
   2d098:	str.w	r3, [sp, #77]	; 0x4d
   2d09c:	bl	18558 <btrfs_release_path@@Base>
   2d0a0:	movs	r3, #1
   2d0a2:	mov	r2, r5
   2d0a4:	str	r3, [sp, #4]
   2d0a6:	mov	r1, r9
   2d0a8:	add	r3, sp, #60	; 0x3c
   2d0aa:	mov	r0, r6
   2d0ac:	str	r3, [sp, #0]
   2d0ae:	add	r3, sp, #64	; 0x40
   2d0b0:	str	r4, [sp, #60]	; 0x3c
   2d0b2:	bl	1b70c <btrfs_insert_empty_items@@Base>
   2d0b6:	mov	r4, r0
   2d0b8:	cbz	r0, 2d0e2 <remove_from_free_space_tree@@Base+0x202>
   2d0ba:	mov	r0, r5
   2d0bc:	bl	1857e <btrfs_free_path@@Base>
   2d0c0:	cbz	r4, 2d0ca <remove_from_free_space_tree@@Base+0x1ea>
   2d0c2:	mov	r1, r4
   2d0c4:	mov	r0, r6
   2d0c6:	bl	2ba74 <btrfs_abort_transaction@@Base>
   2d0ca:	ldr	r2, [pc, #176]	; (2d17c <remove_from_free_space_tree@@Base+0x29c>)
   2d0cc:	ldr	r3, [pc, #144]	; (2d160 <remove_from_free_space_tree@@Base+0x280>)
   2d0ce:	add	r2, pc
   2d0d0:	ldr	r3, [r2, r3]
   2d0d2:	ldr	r2, [r3, #0]
   2d0d4:	ldr	r3, [sp, #84]	; 0x54
   2d0d6:	eors	r2, r3
   2d0d8:	beq.n	2d154 <remove_from_free_space_tree@@Base+0x274>
   2d0da:	blx	8708 <__stack_chk_fail@plt>
   2d0de:	mov.w	r4, #4294967295	; 0xffffffff
   2d0e2:	ldrd	r2, r3, [sp, #32]
   2d0e6:	ldrd	r0, r1, [sp, #40]	; 0x28
   2d0ea:	cmp	r3, r1
   2d0ec:	it	eq
   2d0ee:	cmpeq	r2, r0
   2d0f0:	bcs.n	2d136 <remove_from_free_space_tree@@Base+0x256>
   2d0f2:	strd	r2, r3, [sp, #64]	; 0x40
   2d0f6:	movs	r3, #199	; 0xc7
   2d0f8:	ldr	r2, [sp, #32]
   2d0fa:	mov	r0, r5
   2d0fc:	strb.w	r3, [sp, #72]	; 0x48
   2d100:	ldr	r3, [sp, #40]	; 0x28
   2d102:	ldr	r1, [sp, #36]	; 0x24
   2d104:	subs	r2, r3, r2
   2d106:	ldr	r3, [sp, #44]	; 0x2c
   2d108:	str.w	r2, [sp, #73]	; 0x49
   2d10c:	sbc.w	r3, r3, r1
   2d110:	str	r3, [r7, #4]
   2d112:	bl	18558 <btrfs_release_path@@Base>
   2d116:	movs	r3, #0
   2d118:	mov	r2, r5
   2d11a:	str	r3, [sp, #60]	; 0x3c
   2d11c:	mov	r1, r9
   2d11e:	movs	r3, #1
   2d120:	mov	r0, r6
   2d122:	str	r3, [sp, #4]
   2d124:	add	r3, sp, #60	; 0x3c
   2d126:	str	r3, [sp, #0]
   2d128:	add	r3, sp, #64	; 0x40
   2d12a:	bl	1b70c <btrfs_insert_empty_items@@Base>
   2d12e:	cmp	r0, #0
   2d130:	bne.w	2cf5c <remove_from_free_space_tree@@Base+0x7c>
   2d134:	adds	r4, #1
   2d136:	mov	r0, r5
   2d138:	bl	18558 <btrfs_release_path@@Base>
   2d13c:	cmp	r4, #0
   2d13e:	beq.n	2d0ba <remove_from_free_space_tree@@Base+0x1da>
   2d140:	mov	r3, r4
   2d142:	mov	r2, r5
   2d144:	mov	r1, r8
   2d146:	mov	r0, r6
   2d148:	bl	2be58 <btrfs_abort_transaction@@Base+0x3e4>
   2d14c:	b.n	2cf5c <remove_from_free_space_tree@@Base+0x7c>
   2d14e:	mvn.w	r4, #11
   2d152:	b.n	2d0ba <remove_from_free_space_tree@@Base+0x1da>
   2d154:	mov	r0, r4
   2d156:	add	sp, #92	; 0x5c
   2d158:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d15c:	ldrb	r2, [r1, #26]
   2d15e:	movs	r3, r0
   2d160:	lsls	r0, r5, #8
   2d162:	movs	r0, r0
   2d164:	sbcs	r7, r3
   2d166:	movs	r1, r0
   2d168:	stc2	0, cr0, [lr, #-0]
   2d16c:	subs	r6, #165	; 0xa5
   2d16e:	movs	r1, r0
   2d170:	lsrs	r3, r2
   2d172:	movs	r1, r0
   2d174:	lsls	r1, r1
   2d176:	movs	r1, r0
   2d178:	subs	r6, #121	; 0x79
   2d17a:	movs	r1, r0
   2d17c:	ldrb	r2, [r6, #18]
   2d17e:	movs	r3, r0

0002d180 <add_to_free_space_tree@@Base>:
   2d180:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   2d184:	mov	r7, r3
   2d186:	ldr	r3, [r0, #0]
   2d188:	mov	sl, r2
   2d18a:	movs	r4, #0
   2d18c:	mov	r5, r0
   2d18e:	ldr.w	r3, [r3, #308]	; 0x134
   2d192:	ldr.w	r1, [r3, #180]	; 0xb4
   2d196:	mov	r3, r4
   2d198:	and.w	r2, r1, #1
   2d19c:	orrs	r3, r2
   2d19e:	beq.n	2d1ee <add_to_free_space_tree@@Base+0x6e>
   2d1a0:	bl	18550 <btrfs_alloc_path@@Base>
   2d1a4:	mov	r6, r0
   2d1a6:	cbz	r0, 2d1f6 <add_to_free_space_tree@@Base+0x76>
   2d1a8:	ldr	r0, [r5, #0]
   2d1aa:	mov	r2, sl
   2d1ac:	mov	r3, r7
   2d1ae:	bl	1f5b4 <btrfs_lookup_block_group@@Base>
   2d1b2:	mov	r1, r0
   2d1b4:	cbnz	r0, 2d1c8 <add_to_free_space_tree@@Base+0x48>
   2d1b6:	ldr	r1, [pc, #68]	; (2d1fc <add_to_free_space_tree@@Base+0x7c>)
   2d1b8:	mov.w	r2, #976	; 0x3d0
   2d1bc:	ldr	r0, [pc, #64]	; (2d200 <add_to_free_space_tree@@Base+0x80>)
   2d1be:	add	r1, pc
   2d1c0:	adds	r1, #198	; 0xc6
   2d1c2:	add	r0, pc
   2d1c4:	bl	2bbf8 <btrfs_abort_transaction@@Base+0x184>
   2d1c8:	ldrd	r8, r9, [sp, #48]	; 0x30
   2d1cc:	mov	r2, r6
   2d1ce:	mov	r0, r5
   2d1d0:	strd	sl, r7, [sp]
   2d1d4:	strd	r8, r9, [sp, #8]
   2d1d8:	bl	2cab0 <btrfs_abort_transaction@@Base+0x103c>
   2d1dc:	mov	r4, r0
   2d1de:	mov	r0, r6
   2d1e0:	bl	1857e <btrfs_free_path@@Base>
   2d1e4:	cbz	r4, 2d1ee <add_to_free_space_tree@@Base+0x6e>
   2d1e6:	mov	r1, r4
   2d1e8:	mov	r0, r5
   2d1ea:	bl	2ba74 <btrfs_abort_transaction@@Base>
   2d1ee:	mov	r0, r4
   2d1f0:	add	sp, #16
   2d1f2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   2d1f6:	mvn.w	r4, #11
   2d1fa:	b.n	2d1de <add_to_free_space_tree@@Base+0x5e>
   2d1fc:	subs	r7, #29
   2d1fe:	movs	r1, r0
   2d200:			; <UNDEFINED> instruction: 0xfaac0000

0002d204 <populate_free_space_tree@@Base>:
   2d204:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d208:	mov	r9, r0
   2d20a:	vpush	{d8}
   2d20e:	mov	r5, r1
   2d210:	ldr	r2, [pc, #544]	; (2d434 <populate_free_space_tree@@Base+0x230>)
   2d212:	ldr	r3, [pc, #548]	; (2d438 <populate_free_space_tree@@Base+0x234>)
   2d214:	add	r2, pc
   2d216:	sub	sp, #60	; 0x3c
   2d218:	ldr	r3, [r2, r3]
   2d21a:	ldr	r3, [r3, #0]
   2d21c:	str	r3, [sp, #52]	; 0x34
   2d21e:	mov.w	r3, #0
   2d222:	ldr	r3, [r0, #0]
   2d224:	ldr	r3, [r3, #24]
   2d226:	vmov	s17, r3
   2d22a:	bl	18550 <btrfs_alloc_path@@Base>
   2d22e:	mov	r7, r0
   2d230:	cbz	r0, 2d246 <populate_free_space_tree@@Base+0x42>
   2d232:	movs	r3, #2
   2d234:	strb.w	r3, [r0, #64]	; 0x40
   2d238:	bl	18550 <btrfs_alloc_path@@Base>
   2d23c:	mov	r8, r0
   2d23e:	cbnz	r0, 2d24c <populate_free_space_tree@@Base+0x48>
   2d240:	mov	r0, r7
   2d242:	bl	1857e <btrfs_free_path@@Base>
   2d246:	mvn.w	r4, #11
   2d24a:	b.n	2d3c2 <populate_free_space_tree@@Base+0x1be>
   2d24c:	ldr.w	r3, [r9]
   2d250:	add.w	r6, sp, #41	; 0x29
   2d254:	ldr	r1, [r3, #48]	; 0x30
   2d256:	ldrd	r2, r3, [r5, #40]	; 0x28
   2d25a:	strd	r2, r3, [sp, #32]
   2d25e:	movs	r3, #198	; 0xc6
   2d260:	strb.w	r3, [sp, #40]	; 0x28
   2d264:	ldr.w	r3, [r5, #53]	; 0x35
   2d268:	ldr.w	r2, [r5, #49]	; 0x31
   2d26c:	str.w	r3, [sp, #45]	; 0x2d
   2d270:	movs	r3, #8
   2d272:	str	r3, [sp, #28]
   2d274:	add	r3, sp, #32
   2d276:	str.w	r2, [sp, #41]	; 0x29
   2d27a:	mov	r2, r0
   2d27c:	vmov	s16, r3
   2d280:	mov	r0, r9
   2d282:	movs	r3, #1
   2d284:	str	r3, [sp, #4]
   2d286:	add	r3, sp, #28
   2d288:	str	r3, [sp, #0]
   2d28a:	vmov	r3, s16
   2d28e:	bl	1b70c <btrfs_insert_empty_items@@Base>
   2d292:	mov	r4, r0
   2d294:	cbnz	r0, 2d2c4 <populate_free_space_tree@@Base+0xc0>
   2d296:	ldr.w	r0, [r8]
   2d29a:	movs	r2, #25
   2d29c:	ldr.w	r3, [r8, #32]
   2d2a0:	add.w	r1, r0, #96	; 0x60
   2d2a4:	mla	r3, r2, r3, r1
   2d2a8:	ldr.w	r2, [r3, #118]	; 0x76
   2d2ac:	adds	r2, #101	; 0x65
   2d2ae:	adds	r3, r1, r2
   2d2b0:	strb	r4, [r1, r2]
   2d2b2:	strb	r4, [r3, #1]
   2d2b4:	strb	r4, [r3, #2]
   2d2b6:	strb	r4, [r3, #3]
   2d2b8:	strb	r4, [r3, #4]
   2d2ba:	strb	r4, [r3, #5]
   2d2bc:	strb	r4, [r3, #6]
   2d2be:	strb	r4, [r3, #7]
   2d2c0:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   2d2c4:	mov	r0, r8
   2d2c6:	bl	18558 <btrfs_release_path@@Base>
   2d2ca:	cmp	r4, #0
   2d2cc:	bne.n	2d3b6 <populate_free_space_tree@@Base+0x1b2>
   2d2ce:	ldrd	r2, r3, [r5, #40]	; 0x28
   2d2d2:	strb	r4, [r6, #1]
   2d2d4:	strb	r4, [r6, #2]
   2d2d6:	strd	r2, r3, [sp, #32]
   2d2da:	movs	r3, #168	; 0xa8
   2d2dc:	strb	r4, [r6, #3]
   2d2de:	mov	r2, r7
   2d2e0:	strb.w	r3, [sp, #40]	; 0x28
   2d2e4:	movs	r3, #1
   2d2e6:	strb	r4, [r6, #4]
   2d2e8:	strb	r4, [r6, #5]
   2d2ea:	strb	r4, [r6, #6]
   2d2ec:	strb	r4, [r6, #7]
   2d2ee:	vmov	r1, s16
   2d2f2:	vmov	r0, s17
   2d2f6:	str	r4, [sp, #0]
   2d2f8:	strb.w	r4, [sp, #41]	; 0x29
   2d2fc:	bl	1bf4c <btrfs_search_slot_for_read@@Base>
   2d300:	cmp	r0, #0
   2d302:	blt.n	2d3b4 <populate_free_space_tree@@Base+0x1b0>
   2d304:	ldr	r1, [pc, #308]	; (2d43c <populate_free_space_tree@@Base+0x238>)
   2d306:	it	eq
   2d308:	moveq	r3, #1
   2d30a:	ldr	r0, [pc, #308]	; (2d440 <populate_free_space_tree@@Base+0x23c>)
   2d30c:	it	ne
   2d30e:	movne	r3, #0
   2d310:	add	r1, pc
   2d312:	movw	r2, #1027	; 0x403
   2d316:	adds	r1, #221	; 0xdd
   2d318:	add	r0, pc
   2d31a:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2d31e:	ldrd	sl, fp, [r5, #40]	; 0x28
   2d322:	ldr.w	r3, [r5, #49]	; 0x31
   2d326:	ldr.w	r2, [r5, #53]	; 0x35
   2d32a:	adds.w	r3, r3, sl
   2d32e:	str	r3, [sp, #16]
   2d330:	adc.w	r3, r2, fp
   2d334:	str	r3, [sp, #20]
   2d336:	ldr	r2, [r7, #32]
   2d338:	vmov	r1, s16
   2d33c:	ldr	r0, [r7, #0]
   2d33e:	bl	2ba7c <btrfs_abort_transaction@@Base+0x8>
   2d342:	ldrb.w	r2, [sp, #40]	; 0x28
   2d346:	add.w	r3, r2, #88	; 0x58
   2d34a:	uxtb	r3, r3
   2d34c:	cmp	r3, #1
   2d34e:	bhi.n	2d3e8 <populate_free_space_tree@@Base+0x1e4>
   2d350:	ldrd	r0, r1, [sp, #32]
   2d354:	ldrd	r2, r3, [sp, #16]
   2d358:	cmp	r1, r3
   2d35a:	it	eq
   2d35c:	cmpeq	r0, r2
   2d35e:	bcs.n	2d3fc <populate_free_space_tree@@Base+0x1f8>
   2d360:	cmp	fp, r1
   2d362:	it	eq
   2d364:	cmpeq	sl, r0
   2d366:	bcc.n	2d396 <populate_free_space_tree@@Base+0x192>
   2d368:	ldrb.w	r1, [sp, #40]	; 0x28
   2d36c:	ldrd	r2, r3, [sp, #32]
   2d370:	cmp	r1, #169	; 0xa9
   2d372:	bne.n	2d3d6 <populate_free_space_tree@@Base+0x1d2>
   2d374:	ldr.w	r1, [r9]
   2d378:	ldr.w	r1, [r1, #384]	; 0x180
   2d37c:	adds.w	sl, r2, r1
   2d380:	adc.w	fp, r3, #0
   2d384:	vmov	r0, s17
   2d388:	mov	r1, r7
   2d38a:	bl	2bb68 <btrfs_abort_transaction@@Base+0xf4>
   2d38e:	cmp	r0, #0
   2d390:	blt.n	2d3b4 <populate_free_space_tree@@Base+0x1b0>
   2d392:	beq.n	2d336 <populate_free_space_tree@@Base+0x132>
   2d394:	b.n	2d3fc <populate_free_space_tree@@Base+0x1f8>
   2d396:	subs.w	r2, r0, sl
   2d39a:	strd	sl, fp, [sp]
   2d39e:	sbc.w	r3, r1, fp
   2d3a2:	mov	r0, r9
   2d3a4:	strd	r2, r3, [sp, #8]
   2d3a8:	mov	r1, r5
   2d3aa:	mov	r2, r8
   2d3ac:	bl	2cab0 <btrfs_abort_transaction@@Base+0x103c>
   2d3b0:	cmp	r0, #0
   2d3b2:	beq.n	2d368 <populate_free_space_tree@@Base+0x164>
   2d3b4:	mov	r4, r0
   2d3b6:	mov	r0, r8
   2d3b8:	bl	1857e <btrfs_free_path@@Base>
   2d3bc:	mov	r0, r7
   2d3be:	bl	1857e <btrfs_free_path@@Base>
   2d3c2:	ldr	r2, [pc, #128]	; (2d444 <populate_free_space_tree@@Base+0x240>)
   2d3c4:	ldr	r3, [pc, #112]	; (2d438 <populate_free_space_tree@@Base+0x234>)
   2d3c6:	add	r2, pc
   2d3c8:	ldr	r3, [r2, r3]
   2d3ca:	ldr	r2, [r3, #0]
   2d3cc:	ldr	r3, [sp, #52]	; 0x34
   2d3ce:	eors	r2, r3
   2d3d0:	beq.n	2d428 <populate_free_space_tree@@Base+0x224>
   2d3d2:	blx	8708 <__stack_chk_fail@plt>
   2d3d6:	ldr.w	r1, [sp, #41]	; 0x29
   2d3da:	ldr.w	r0, [sp, #45]	; 0x2d
   2d3de:	adds.w	sl, r1, r2
   2d3e2:	adc.w	fp, r0, r3
   2d3e6:	b.n	2d384 <populate_free_space_tree@@Base+0x180>
   2d3e8:	cmp	r2, #192	; 0xc0
   2d3ea:	bne.n	2d384 <populate_free_space_tree@@Base+0x180>
   2d3ec:	ldrd	r2, r3, [r5, #40]	; 0x28
   2d3f0:	ldrd	r0, r1, [sp, #32]
   2d3f4:	cmp	r1, r3
   2d3f6:	it	eq
   2d3f8:	cmpeq	r0, r2
   2d3fa:	beq.n	2d384 <populate_free_space_tree@@Base+0x180>
   2d3fc:	ldrd	r2, r3, [sp, #16]
   2d400:	cmp	fp, r3
   2d402:	it	eq
   2d404:	cmpeq	sl, r2
   2d406:	bcs.n	2d3b6 <populate_free_space_tree@@Base+0x1b2>
   2d408:	ldr	r3, [sp, #16]
   2d40a:	mov	r1, r5
   2d40c:	mov	r0, r9
   2d40e:	strd	sl, fp, [sp]
   2d412:	subs.w	r2, r3, sl
   2d416:	ldr	r3, [sp, #20]
   2d418:	sbc.w	r3, r3, fp
   2d41c:	strd	r2, r3, [sp, #8]
   2d420:	mov	r2, r8
   2d422:	bl	2cab0 <btrfs_abort_transaction@@Base+0x103c>
   2d426:	b.n	2d3b4 <populate_free_space_tree@@Base+0x1b0>
   2d428:	mov	r0, r4
   2d42a:	add	sp, #60	; 0x3c
   2d42c:	vpop	{d8}
   2d430:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d434:	ldrb	r4, [r5, #13]
   2d436:	movs	r3, r0
   2d438:	lsls	r0, r5, #8
   2d43a:	movs	r0, r0
   2d43c:	subs	r5, #203	; 0xcb
   2d43e:	movs	r1, r0
   2d440:	bvc.n	2d49a <remove_block_group_free_space@@Base+0x52>
   2d442:	movs	r0, r0
   2d444:	ldrb	r2, [r7, #6]
   2d446:	movs	r3, r0

0002d448 <remove_block_group_free_space@@Base>:
   2d448:	ldr	r2, [pc, #536]	; (2d664 <remove_block_group_free_space@@Base+0x21c>)
   2d44a:	ldr	r3, [pc, #540]	; (2d668 <remove_block_group_free_space@@Base+0x220>)
   2d44c:	add	r2, pc
   2d44e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d452:	sub	sp, #92	; 0x5c
   2d454:	ldr	r3, [r2, r3]
   2d456:	mov	r9, r0
   2d458:	mov	r8, r1
   2d45a:	ldr	r3, [r3, #0]
   2d45c:	str	r3, [sp, #84]	; 0x54
   2d45e:	mov.w	r3, #0
   2d462:	ldr	r3, [r0, #0]
   2d464:	ldr.w	fp, [r3, #48]	; 0x30
   2d468:	bl	18550 <btrfs_alloc_path@@Base>
   2d46c:	mov	r5, r0
   2d46e:	cmp	r0, #0
   2d470:	beq.w	2d656 <remove_block_group_free_space@@Base+0x20e>
   2d474:	ldrd	r3, r4, [r8, #40]	; 0x28
   2d478:	ldr.w	r2, [r8, #53]	; 0x35
   2d47c:	ldr.w	sl, [pc, #492]	; 2d66c <remove_block_group_free_space@@Base+0x224>
   2d480:	strd	r3, r4, [sp, #24]
   2d484:	ldr	r1, [sp, #24]
   2d486:	add	sl, pc
   2d488:	ldr.w	r3, [r8, #49]	; 0x31
   2d48c:	add.w	sl, sl, #246	; 0xf6
   2d490:	adds	r3, r3, r1
   2d492:	str	r3, [sp, #8]
   2d494:	ldr	r3, [sp, #28]
   2d496:	adc.w	r3, r2, r3
   2d49a:	str	r3, [sp, #12]
   2d49c:	ldr	r3, [sp, #8]
   2d49e:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2d4a2:	ldr	r3, [sp, #12]
   2d4a4:	adc.w	r3, r3, #4294967295	; 0xffffffff
   2d4a8:	strd	r2, r3, [sp, #44]	; 0x2c
   2d4ac:	movs	r2, #255	; 0xff
   2d4ae:	strb.w	r2, [sp, #52]	; 0x34
   2d4b2:	strb.w	r2, [sp, #53]	; 0x35
   2d4b6:	strb.w	r2, [sp, #54]	; 0x36
   2d4ba:	strb.w	r2, [sp, #55]	; 0x37
   2d4be:	strb.w	r2, [sp, #56]	; 0x38
   2d4c2:	strb.w	r2, [sp, #57]	; 0x39
   2d4c6:	strb.w	r2, [sp, #58]	; 0x3a
   2d4ca:	strb.w	r2, [sp, #59]	; 0x3b
   2d4ce:	strb.w	r2, [sp, #60]	; 0x3c
   2d4d2:	mov.w	r3, #4294967295	; 0xffffffff
   2d4d6:	add	r2, sp, #44	; 0x2c
   2d4d8:	str	r3, [sp, #0]
   2d4da:	mov	r1, fp
   2d4dc:	mov	r3, r5
   2d4de:	mov	r0, r9
   2d4e0:	bl	2bd54 <btrfs_abort_transaction@@Base+0x2e0>
   2d4e4:	mov	r4, r0
   2d4e6:	cmp	r0, #0
   2d4e8:	bne.n	2d590 <remove_block_group_free_space@@Base+0x148>
   2d4ea:	ldr	r7, [pc, #388]	; (2d670 <remove_block_group_free_space@@Base+0x228>)
   2d4ec:	ldr	r6, [r5, #0]
   2d4ee:	ldr	r3, [r5, #32]
   2d4f0:	add	r7, pc
   2d4f2:	adds	r3, #1
   2d4f4:	str	r3, [r5, #32]
   2d4f6:	ldr	r2, [r5, #32]
   2d4f8:	cmp	r2, #0
   2d4fa:	bgt.n	2d500 <remove_block_group_free_space@@Base+0xb8>
   2d4fc:	movs	r6, #0
   2d4fe:	b.n	2d574 <remove_block_group_free_space@@Base+0x12c>
   2d500:	subs	r2, #1
   2d502:	add	r1, sp, #64	; 0x40
   2d504:	mov	r0, r6
   2d506:	bl	2ba7c <btrfs_abort_transaction@@Base+0x8>
   2d50a:	ldrb.w	r3, [sp, #72]	; 0x48
   2d50e:	cmp	r3, #198	; 0xc6
   2d510:	bne.n	2d5b4 <remove_block_group_free_space@@Base+0x16c>
   2d512:	ldrd	r2, r3, [r8, #40]	; 0x28
   2d516:	adds	r4, #1
   2d518:	ldrd	r6, r7, [sp, #64]	; 0x40
   2d51c:	ldr	r0, [pc, #340]	; (2d674 <remove_block_group_free_space@@Base+0x22c>)
   2d51e:	cmp	r7, r3
   2d520:	it	eq
   2d522:	cmpeq	r6, r2
   2d524:	ldr	r6, [pc, #336]	; (2d678 <remove_block_group_free_space@@Base+0x230>)
   2d526:	add	r0, pc
   2d528:	mov.w	r2, #1112	; 0x458
   2d52c:	add	r6, pc
   2d52e:	it	eq
   2d530:	moveq	r3, #1
   2d532:	add.w	r6, r6, #246	; 0xf6
   2d536:	it	ne
   2d538:	movne	r3, #0
   2d53a:	mov	r1, r6
   2d53c:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2d540:	ldr.w	r3, [r8, #53]	; 0x35
   2d544:	ldr.w	r1, [sp, #77]	; 0x4d
   2d548:	ldr.w	r0, [sp, #73]	; 0x49
   2d54c:	ldr.w	r2, [r8, #49]	; 0x31
   2d550:	cmp	r1, r3
   2d552:	mov	r1, r6
   2d554:	mov.w	r6, #1
   2d558:	it	eq
   2d55a:	cmpeq	r0, r2
   2d55c:	ldr	r0, [pc, #284]	; (2d67c <remove_block_group_free_space@@Base+0x234>)
   2d55e:	movw	r2, #1113	; 0x459
   2d562:	ite	eq
   2d564:	moveq	r3, #1
   2d566:	movne	r3, #0
   2d568:	add	r0, pc
   2d56a:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2d56e:	ldr	r3, [r5, #32]
   2d570:	subs	r3, #1
   2d572:	str	r3, [r5, #32]
   2d574:	str	r4, [sp, #0]
   2d576:	mov	r2, r5
   2d578:	ldr	r3, [r5, #32]
   2d57a:	mov	r1, fp
   2d57c:	mov	r0, r9
   2d57e:	bl	1baf8 <btrfs_del_items@@Base>
   2d582:	mov	r4, r0
   2d584:	cbnz	r0, 2d590 <remove_block_group_free_space@@Base+0x148>
   2d586:	mov	r0, r5
   2d588:	bl	18558 <btrfs_release_path@@Base>
   2d58c:	cmp	r6, #0
   2d58e:	beq.n	2d4d2 <remove_block_group_free_space@@Base+0x8a>
   2d590:	mov	r0, r5
   2d592:	bl	1857e <btrfs_free_path@@Base>
   2d596:	cbz	r4, 2d5a0 <remove_block_group_free_space@@Base+0x158>
   2d598:	mov	r1, r4
   2d59a:	mov	r0, r9
   2d59c:	bl	2ba74 <btrfs_abort_transaction@@Base>
   2d5a0:	ldr	r2, [pc, #220]	; (2d680 <remove_block_group_free_space@@Base+0x238>)
   2d5a2:	ldr	r3, [pc, #196]	; (2d668 <remove_block_group_free_space@@Base+0x220>)
   2d5a4:	add	r2, pc
   2d5a6:	ldr	r3, [r2, r3]
   2d5a8:	ldr	r2, [r3, #0]
   2d5aa:	ldr	r3, [sp, #84]	; 0x54
   2d5ac:	eors	r2, r3
   2d5ae:	beq.n	2d65c <remove_block_group_free_space@@Base+0x214>
   2d5b0:	blx	8708 <__stack_chk_fail@plt>
   2d5b4:	adds	r3, #57	; 0x39
   2d5b6:	uxtb	r3, r3
   2d5b8:	cmp	r3, #1
   2d5ba:	bhi.n	2d644 <remove_block_group_free_space@@Base+0x1fc>
   2d5bc:	ldrd	r2, r3, [sp, #64]	; 0x40
   2d5c0:	adds	r4, #1
   2d5c2:	ldrd	r0, r1, [sp, #24]
   2d5c6:	cmp	r3, r1
   2d5c8:	strd	r2, r3, [sp, #16]
   2d5cc:	it	eq
   2d5ce:	cmpeq	r2, r0
   2d5d0:	mov	r1, sl
   2d5d2:	mov.w	r2, #1120	; 0x460
   2d5d6:	mov	r0, r7
   2d5d8:	ite	cs
   2d5da:	movcs	r3, #1
   2d5dc:	movcc	r3, #0
   2d5de:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2d5e2:	ldrd	r2, r3, [sp, #16]
   2d5e6:	ldrd	r0, r1, [sp, #8]
   2d5ea:	cmp	r3, r1
   2d5ec:	mov	r1, sl
   2d5ee:	it	eq
   2d5f0:	cmpeq	r2, r0
   2d5f2:	ldr	r0, [pc, #144]	; (2d684 <remove_block_group_free_space@@Base+0x23c>)
   2d5f4:	movw	r2, #1121	; 0x461
   2d5f8:	ite	cc
   2d5fa:	movcc	r3, #1
   2d5fc:	movcs	r3, #0
   2d5fe:	add	r0, pc
   2d600:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2d604:	ldr.w	r3, [sp, #73]	; 0x49
   2d608:	ldr	r1, [sp, #16]
   2d60a:	ldr.w	r2, [sp, #77]	; 0x4d
   2d60e:	adds	r3, r3, r1
   2d610:	str	r3, [sp, #32]
   2d612:	ldr	r3, [sp, #20]
   2d614:	adc.w	r3, r2, r3
   2d618:	str	r3, [sp, #36]	; 0x24
   2d61a:	ldrd	r0, r1, [sp, #32]
   2d61e:	ldrd	r2, r3, [sp, #8]
   2d622:	cmp	r3, r1
   2d624:	mov	r1, sl
   2d626:	it	eq
   2d628:	cmpeq	r2, r0
   2d62a:	ldr	r0, [pc, #92]	; (2d688 <remove_block_group_free_space@@Base+0x240>)
   2d62c:	movw	r2, #1122	; 0x462
   2d630:	ite	cs
   2d632:	movcs	r3, #1
   2d634:	movcc	r3, #0
   2d636:	add	r0, pc
   2d638:	bl	2bc64 <btrfs_abort_transaction@@Base+0x1f0>
   2d63c:	ldr	r3, [r5, #32]
   2d63e:	subs	r3, #1
   2d640:	str	r3, [r5, #32]
   2d642:	b.n	2d4f6 <remove_block_group_free_space@@Base+0xae>
   2d644:	ldr	r1, [pc, #68]	; (2d68c <remove_block_group_free_space@@Base+0x244>)
   2d646:	movw	r2, #1126	; 0x466
   2d64a:	ldr	r0, [pc, #68]	; (2d690 <remove_block_group_free_space@@Base+0x248>)
   2d64c:	add	r1, pc
   2d64e:	adds	r1, #246	; 0xf6
   2d650:	add	r0, pc
   2d652:	bl	2bbf8 <btrfs_abort_transaction@@Base+0x184>
   2d656:	mvn.w	r4, #11
   2d65a:	b.n	2d590 <remove_block_group_free_space@@Base+0x148>
   2d65c:	mov	r0, r4
   2d65e:	add	sp, #92	; 0x5c
   2d660:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d664:	ldrb	r4, [r6, #4]
   2d666:	movs	r3, r0
   2d668:	lsls	r0, r5, #8
   2d66a:	movs	r0, r0
   2d66c:	subs	r4, #85	; 0x55
   2d66e:	movs	r1, r0
   2d670:	adds	r7, #209	; 0xd1
   2d672:	movs	r1, r0
   2d674:	adds	r7, #63	; 0x3f
   2d676:	movs	r1, r0
   2d678:	subs	r3, #175	; 0xaf
   2d67a:	movs	r1, r0
   2d67c:	adds	r7, #45	; 0x2d
   2d67e:	movs	r1, r0
   2d680:	strb	r4, [r3, #31]
   2d682:	movs	r3, r0
   2d684:	adds	r6, #223	; 0xdf
   2d686:	movs	r1, r0
   2d688:	adds	r6, #192	; 0xc0
   2d68a:	movs	r1, r0
   2d68c:	subs	r2, #143	; 0x8f
   2d68e:	movs	r1, r0
   2d690:			; <UNDEFINED> instruction: 0xf61e0000

0002d694 <btrfs_clear_free_space_tree@@Base>:
   2d694:	ldr	r2, [pc, #352]	; (2d7f8 <btrfs_clear_free_space_tree@@Base+0x164>)
   2d696:	movs	r1, #0
   2d698:	ldr	r3, [pc, #352]	; (2d7fc <btrfs_clear_free_space_tree@@Base+0x168>)
   2d69a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d69e:	add	r2, pc
   2d6a0:	ldr.w	r8, [r0, #28]
   2d6a4:	sub	sp, #44	; 0x2c
   2d6a6:	ldr	r3, [r2, r3]
   2d6a8:	mov	r7, r0
   2d6aa:	ldr	r5, [r0, #48]	; 0x30
   2d6ac:	mov	r0, r8
   2d6ae:	ldr	r3, [r3, #0]
   2d6b0:	str	r3, [sp, #36]	; 0x24
   2d6b2:	mov.w	r3, #0
   2d6b6:	bl	2b67c <btrfs_start_transaction@@Base>
   2d6ba:	cmn.w	r0, #4096	; 0x1000
   2d6be:	mov	r6, r0
   2d6c0:	bls.n	2d6da <btrfs_clear_free_space_tree@@Base+0x46>
   2d6c2:	mov	r4, r0
   2d6c4:	ldr	r2, [pc, #312]	; (2d800 <btrfs_clear_free_space_tree@@Base+0x16c>)
   2d6c6:	ldr	r3, [pc, #308]	; (2d7fc <btrfs_clear_free_space_tree@@Base+0x168>)
   2d6c8:	add	r2, pc
   2d6ca:	ldr	r3, [r2, r3]
   2d6cc:	ldr	r2, [r3, #0]
   2d6ce:	ldr	r3, [sp, #36]	; 0x24
   2d6d0:	eors	r2, r3
   2d6d2:	beq.w	2d7e8 <btrfs_clear_free_space_tree@@Base+0x154>
   2d6d6:	blx	8708 <__stack_chk_fail@plt>
   2d6da:	ldr.w	r3, [r7, #308]	; 0x134
   2d6de:	movs	r4, #0
   2d6e0:	ldr.w	r1, [r3, #184]	; 0xb8
   2d6e4:	ldr.w	r2, [r3, #180]	; 0xb4
   2d6e8:	str.w	r1, [r3, #184]	; 0xb8
   2d6ec:	bic.w	r2, r2, #3
   2d6f0:	str.w	r2, [r3, #180]	; 0xb4
   2d6f4:	str	r4, [r7, #48]	; 0x30
   2d6f6:	bl	18550 <btrfs_alloc_path@@Base>
   2d6fa:	mov	r7, r0
   2d6fc:	cbnz	r0, 2d704 <btrfs_clear_free_space_tree@@Base+0x70>
   2d6fe:	mvn.w	r4, #11
   2d702:	b.n	2d6c4 <btrfs_clear_free_space_tree@@Base+0x30>
   2d704:	add.w	r9, sp, #16
   2d708:	mov.w	sl, #1
   2d70c:	mov.w	fp, #4294967295	; 0xffffffff
   2d710:	movs	r2, #0
   2d712:	movs	r3, #0
   2d714:	strb.w	r4, [sp, #24]
   2d718:	strd	r2, r3, [sp, #16]
   2d71c:	strb.w	r4, [sp, #25]
   2d720:	strb.w	r4, [sp, #26]
   2d724:	strb.w	r4, [sp, #27]
   2d728:	strb.w	r4, [sp, #28]
   2d72c:	strb.w	r4, [sp, #29]
   2d730:	strb.w	r4, [sp, #30]
   2d734:	strb.w	r4, [sp, #31]
   2d738:	strb.w	r4, [sp, #32]
   2d73c:	mov	r3, r7
   2d73e:	mov	r2, r9
   2d740:	mov	r1, r5
   2d742:	mov	r0, r6
   2d744:	strd	fp, sl, [sp]
   2d748:	bl	1a93c <btrfs_search_slot@@Base>
   2d74c:	subs	r4, r0, #0
   2d74e:	blt.n	2d774 <btrfs_clear_free_space_tree@@Base+0xe0>
   2d750:	ldr	r3, [r7, #0]
   2d752:	ldr.w	r4, [r3, #192]	; 0xc0
   2d756:	cbz	r4, 2d774 <btrfs_clear_free_space_tree@@Base+0xe0>
   2d758:	movs	r3, #0
   2d75a:	mov	r2, r7
   2d75c:	str	r3, [r7, #32]
   2d75e:	mov	r1, r5
   2d760:	str	r4, [sp, #0]
   2d762:	mov	r0, r6
   2d764:	bl	1baf8 <btrfs_del_items@@Base>
   2d768:	mov	r4, r0
   2d76a:	cbnz	r0, 2d774 <btrfs_clear_free_space_tree@@Base+0xe0>
   2d76c:	mov	r0, r7
   2d76e:	bl	18558 <btrfs_release_path@@Base>
   2d772:	b.n	2d73c <btrfs_clear_free_space_tree@@Base+0xa8>
   2d774:	mov	r0, r7
   2d776:	bl	1857e <btrfs_free_path@@Base>
   2d77a:	cmp	r4, #0
   2d77c:	bne.n	2d6c4 <btrfs_clear_free_space_tree@@Base+0x30>
   2d77e:	addw	r2, r5, #447	; 0x1bf
   2d782:	mov	r1, r8
   2d784:	mov	r0, r6
   2d786:	bl	282d0 <btrfs_del_root@@Base>
   2d78a:	mov	r4, r0
   2d78c:	cmp	r0, #0
   2d78e:	bne.n	2d6c4 <btrfs_clear_free_space_tree@@Base+0x30>
   2d790:	ldrd	r2, r3, [r5, #520]	; 0x208
   2d794:	str	r3, [r2, #4]
   2d796:	str	r2, [r3, #0]
   2d798:	ldr	r2, [pc, #84]	; (2d7f0 <btrfs_clear_free_space_tree@@Base+0x15c>)
   2d79a:	ldr	r3, [pc, #88]	; (2d7f4 <btrfs_clear_free_space_tree@@Base+0x160>)
   2d79c:	ldr	r0, [r5, #0]
   2d79e:	strd	r2, r3, [r5, #520]	; 0x208
   2d7a2:	bl	1dc0c <clean_tree_block@@Base>
   2d7a6:	mov	r4, r0
   2d7a8:	cmp	r0, #0
   2d7aa:	bne.n	2d6c4 <btrfs_clear_free_space_tree@@Base+0x30>
   2d7ac:	movs	r3, #1
   2d7ae:	movs	r2, #0
   2d7b0:	str	r3, [sp, #8]
   2d7b2:	mov	r1, r5
   2d7b4:	movs	r3, #0
   2d7b6:	mov	r0, r6
   2d7b8:	strd	r2, r3, [sp]
   2d7bc:	ldr	r2, [r5, #0]
   2d7be:	bl	214c0 <btrfs_free_tree_block@@Base>
   2d7c2:	mov	r4, r0
   2d7c4:	cmp	r0, #0
   2d7c6:	bne.w	2d6c4 <btrfs_clear_free_space_tree@@Base+0x30>
   2d7ca:	ldr	r0, [r5, #0]
   2d7cc:	bl	17320 <free_extent_buffer@@Base>
   2d7d0:	ldr	r0, [r5, #4]
   2d7d2:	bl	17320 <free_extent_buffer@@Base>
   2d7d6:	mov	r0, r5
   2d7d8:	blx	8620 <free@plt+0x4>
   2d7dc:	mov	r1, r8
   2d7de:	mov	r0, r6
   2d7e0:	bl	2b8fc <btrfs_commit_transaction@@Base>
   2d7e4:	mov	r4, r0
   2d7e6:	b.n	2d6c4 <btrfs_clear_free_space_tree@@Base+0x30>
   2d7e8:	mov	r0, r4
   2d7ea:	add	sp, #44	; 0x2c
   2d7ec:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d7f0:	lsls	r0, r0, #4
   2d7f2:	movs	r0, r2
   2d7f4:	lsls	r0, r0, #8
   2d7f6:	movs	r0, r4
   2d7f8:	strb	r2, [r4, #27]
   2d7fa:	movs	r3, r0
   2d7fc:	lsls	r0, r5, #8
   2d7fe:	movs	r0, r0
   2d800:	strb	r0, [r7, #26]
   2d802:	movs	r3, r0

0002d804 <btrfs_create_free_space_tree@@Base>:
   2d804:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   2d808:	movs	r1, #0
   2d80a:	ldr	r7, [r0, #28]
   2d80c:	mov	r5, r0
   2d80e:	mov	r0, r7
   2d810:	bl	2b67c <btrfs_start_transaction@@Base>
   2d814:	cmn.w	r0, #4096	; 0x1000
   2d818:	mov	r6, r0
   2d81a:	bls.n	2d824 <btrfs_create_free_space_tree@@Base+0x20>
   2d81c:	mov	r4, r0
   2d81e:	mov	r0, r4
   2d820:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   2d824:	movs	r2, #10
   2d826:	movs	r3, #0
   2d828:	mov	r1, r5
   2d82a:	bl	1ea7c <btrfs_create_tree@@Base>
   2d82e:	cmn.w	r0, #4096	; 0x1000
   2d832:	mov	r4, r0
   2d834:	bhi.n	2d86e <btrfs_create_free_space_tree@@Base+0x6a>
   2d836:	mov.w	r8, #69632	; 0x11000
   2d83a:	mov.w	r9, #0
   2d83e:	str	r0, [r5, #48]	; 0x30
   2d840:	mov	r2, r8
   2d842:	mov	r3, r9
   2d844:	mov	r0, r5
   2d846:	bl	1f530 <btrfs_lookup_first_block_group@@Base>
   2d84a:	mov	r1, r0
   2d84c:	cbz	r0, 2d878 <btrfs_create_free_space_tree@@Base+0x74>
   2d84e:	ldr.w	r2, [r0, #49]	; 0x31
   2d852:	ldr.w	r9, [r0, #53]	; 0x35
   2d856:	ldrd	r0, r3, [r0, #40]	; 0x28
   2d85a:	adds.w	r8, r2, r0
   2d85e:	mov	r0, r6
   2d860:	adc.w	r9, r9, r3
   2d864:	bl	2d204 <populate_free_space_tree@@Base>
   2d868:	mov	r4, r0
   2d86a:	cmp	r0, #0
   2d86c:	beq.n	2d840 <btrfs_create_free_space_tree@@Base+0x3c>
   2d86e:	mov	r1, r4
   2d870:	mov	r0, r6
   2d872:	bl	2ba74 <btrfs_abort_transaction@@Base>
   2d876:	b.n	2d81e <btrfs_create_free_space_tree@@Base+0x1a>
   2d878:	ldr.w	r3, [r5, #308]	; 0x134
   2d87c:	mov	r9, r1
   2d87e:	ldr.w	r2, [r3, #180]	; 0xb4
   2d882:	ldr.w	r0, [r3, #184]	; 0xb8
   2d886:	and.w	r8, r2, #1
   2d88a:	orrs.w	r1, r8, r9
   2d88e:	mov.w	r1, #0
   2d892:	ittt	eq
   2d894:	streq.w	r0, [r3, #184]	; 0xb8
   2d898:	orreq.w	r2, r2, #1
   2d89c:	streq.w	r2, [r3, #180]	; 0xb4
   2d8a0:	ldr.w	r3, [r5, #308]	; 0x134
   2d8a4:	ldr.w	r2, [r3, #180]	; 0xb4
   2d8a8:	ldr.w	r4, [r3, #184]	; 0xb8
   2d8ac:	and.w	r0, r2, #2
   2d8b0:	orrs	r1, r0
   2d8b2:	mov	r1, r7
   2d8b4:	it	eq
   2d8b6:	orreq.w	r2, r2, #2
   2d8ba:	mov	r0, r6
   2d8bc:	itt	eq
   2d8be:	streq.w	r2, [r3, #180]	; 0xb4
   2d8c2:	streq.w	r4, [r3, #184]	; 0xb8
   2d8c6:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   2d8ca:	b.w	2b8fc <btrfs_commit_transaction@@Base>

0002d8ce <load_free_space_tree@@Base>:
   2d8ce:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d8d2:	mov	r9, r0
   2d8d4:	vpush	{d8-d9}
   2d8d8:	mov	r8, r1
   2d8da:	ldr	r2, [pc, #976]	; (2dcac <load_free_space_tree@@Base+0x3de>)
   2d8dc:	ldr	r3, [pc, #976]	; (2dcb0 <load_free_space_tree@@Base+0x3e2>)
   2d8de:	add	r2, pc
   2d8e0:	ldr	r6, [pc, #976]	; (2dcb4 <load_free_space_tree@@Base+0x3e6>)
   2d8e2:	sub	sp, #124	; 0x7c
   2d8e4:	ldr	r3, [r2, r3]
   2d8e6:	add	r6, pc
   2d8e8:	ldr	r3, [r3, #0]
   2d8ea:	str	r3, [sp, #116]	; 0x74
   2d8ec:	mov.w	r3, #0
   2d8f0:	bl	18550 <btrfs_alloc_path@@Base>
   2d8f4:	mov	r5, r0
   2d8f6:	cmp	r0, #0
   2d8f8:	beq.w	2dc9a <load_free_space_tree@@Base+0x3cc>
   2d8fc:	movs	r4, #0
   2d8fe:	movs	r3, #1
   2d900:	mov	r2, r8
   2d902:	strb.w	r3, [r0, #64]	; 0x40
   2d906:	mov	r3, r0
   2d908:	str	r4, [sp, #0]
   2d90a:	mov	r0, r4
   2d90c:	ldr.w	r1, [r9, #48]	; 0x30
   2d910:	bl	2bae4 <btrfs_abort_transaction@@Base+0x70>
   2d914:	cmn.w	r0, #4096	; 0x1000
   2d918:	bls.n	2d942 <load_free_space_tree@@Base+0x74>
   2d91a:	mov	r3, r0
   2d91c:	mov	r0, r5
   2d91e:	str	r3, [sp, #32]
   2d920:	bl	1857e <btrfs_free_path@@Base>
   2d924:	ldr	r3, [sp, #32]
   2d926:	cmp	r3, #0
   2d928:	it	eq
   2d92a:	moveq	r3, r4
   2d92c:	ldr	r1, [pc, #904]	; (2dcb8 <load_free_space_tree@@Base+0x3ea>)
   2d92e:	ldr	r2, [pc, #896]	; (2dcb0 <load_free_space_tree@@Base+0x3e2>)
   2d930:	add	r1, pc
   2d932:	ldr	r2, [r1, r2]
   2d934:	ldr	r1, [r2, #0]
   2d936:	ldr	r2, [sp, #116]	; 0x74
   2d938:	eors	r1, r2
   2d93a:	beq.w	2dca0 <load_free_space_tree@@Base+0x3d2>
   2d93e:	blx	8708 <__stack_chk_fail@plt>
   2d942:	ldr	r3, [r5, #0]
   2d944:	adds	r3, #96	; 0x60
   2d946:	adds	r2, r3, r0
   2d948:	ldr	r3, [r3, r0]
   2d94a:	ldr	r7, [r2, #4]
   2d94c:	str	r3, [sp, #64]	; 0x40
   2d94e:	ldr.w	r3, [r9, #48]	; 0x30
   2d952:	vmov	s18, r3
   2d956:	ldr.w	r3, [r8, #40]	; 0x28
   2d95a:	str	r3, [sp, #48]	; 0x30
   2d95c:	ldr.w	r3, [r8, #44]	; 0x2c
   2d960:	ldr	r1, [sp, #48]	; 0x30
   2d962:	str	r3, [sp, #52]	; 0x34
   2d964:	ldr.w	r3, [r8, #49]	; 0x31
   2d968:	ldr.w	r2, [r8, #53]	; 0x35
   2d96c:	adds	r3, r3, r1
   2d96e:	str	r3, [sp, #32]
   2d970:	ldr	r3, [sp, #52]	; 0x34
   2d972:	adc.w	r3, r2, r3
   2d976:	ands.w	r7, r7, #1
   2d97a:	str	r3, [sp, #36]	; 0x24
   2d97c:	beq.w	2db04 <load_free_space_tree@@Base+0x236>
   2d980:	movs	r3, #0
   2d982:	mov	r7, r4
   2d984:	vmov	s16, r3
   2d988:	str	r4, [sp, #40]	; 0x28
   2d98a:	vmov	s17, r3
   2d98e:	add	r3, sp, #96	; 0x60
   2d990:	vmov	s19, r3
   2d994:	vmov	r0, s18
   2d998:	mov	r1, r5
   2d99a:	bl	2bb68 <btrfs_abort_transaction@@Base+0xf4>
   2d99e:	subs	r3, r0, #0
   2d9a0:	blt.w	2db00 <load_free_space_tree@@Base+0x232>
   2d9a4:	bne.w	2dafc <load_free_space_tree@@Base+0x22e>
   2d9a8:	vmov	r1, s19
   2d9ac:	ldr	r2, [r5, #32]
   2d9ae:	ldr	r0, [r5, #0]
   2d9b0:	bl	2ba7c <btrfs_abort_transaction@@Base+0x8>
   2d9b4:	ldrb.w	r3, [sp, #104]	; 0x68
   2d9b8:	cmp	r3, #198	; 0xc6
   2d9ba:	beq.w	2dafc <load_free_space_tree@@Base+0x22e>
   2d9be:	cmp	r3, #200	; 0xc8
   2d9c0:	beq.n	2da14 <load_free_space_tree@@Base+0x146>
   2d9c2:	ldr	r2, [pc, #760]	; (2dcbc <load_free_space_tree@@Base+0x3ee>)
   2d9c4:	movs	r1, #1
   2d9c6:	ldr	r0, [r6, r2]
   2d9c8:	ldr	r2, [pc, #756]	; (2dcc0 <load_free_space_tree@@Base+0x3f2>)
   2d9ca:	ldr	r0, [r0, #0]
   2d9cc:	add	r2, pc
   2d9ce:	blx	8a64 <__fprintf_chk@plt+0x4>
   2d9d2:	movs	r4, #1
   2d9d4:	ldr	r3, [sp, #40]	; 0x28
   2d9d6:	cmp	r3, #1
   2d9d8:	bne.n	2d9f4 <load_free_space_tree@@Base+0x126>
   2d9da:	ldrd	r2, r3, [sp, #32]
   2d9de:	mov	r1, r9
   2d9e0:	mov	r0, r8
   2d9e2:	adds	r7, #1
   2d9e4:	strd	r2, r3, [sp]
   2d9e8:	vmov	r2, s16
   2d9ec:	vmov	r3, s17
   2d9f0:	bl	233f8 <add_new_free_space@@Base>
   2d9f4:	ldr	r3, [sp, #64]	; 0x40
   2d9f6:	cmp	r3, r7
   2d9f8:	beq.n	2da10 <load_free_space_tree@@Base+0x142>
   2d9fa:	ldr	r3, [pc, #704]	; (2dcbc <load_free_space_tree@@Base+0x3ee>)
   2d9fc:	ldr	r2, [pc, #708]	; (2dcc4 <load_free_space_tree@@Base+0x3f6>)
   2d9fe:	ldr	r0, [r6, r3]
   2da00:	add	r2, pc
   2da02:	ldr	r3, [sp, #64]	; 0x40
   2da04:	str	r7, [sp, #0]
   2da06:	ldr	r0, [r0, #0]
   2da08:	movs	r1, #1
   2da0a:	blx	8a64 <__fprintf_chk@plt+0x4>
   2da0e:	adds	r4, #1
   2da10:	movs	r3, #0
   2da12:	b.n	2d91c <load_free_space_tree@@Base+0x4e>
   2da14:	ldrd	sl, fp, [sp, #96]	; 0x60
   2da18:	ldrd	r3, r4, [sp, #32]
   2da1c:	cmp	fp, r4
   2da1e:	it	eq
   2da20:	cmpeq	sl, r3
   2da22:	bcc.n	2da4a <load_free_space_tree@@Base+0x17c>
   2da24:	ldrd	r1, r2, [sp, #32]
   2da28:	ldr	r3, [pc, #656]	; (2dcbc <load_free_space_tree@@Base+0x3ee>)
   2da2a:	ldr	r3, [r6, r3]
   2da2c:	strd	r1, r2, [sp, #16]
   2da30:	ldr	r2, [sp, #48]	; 0x30
   2da32:	strd	sl, fp, [sp]
   2da36:	str	r2, [sp, #8]
   2da38:	ldr	r2, [sp, #52]	; 0x34
   2da3a:	str	r2, [sp, #12]
   2da3c:	ldr	r2, [pc, #648]	; (2dcc8 <load_free_space_tree@@Base+0x3fa>)
   2da3e:	add	r2, pc
   2da40:	ldr	r0, [r3, #0]
   2da42:	movs	r1, #1
   2da44:	blx	8a64 <__fprintf_chk@plt+0x4>
   2da48:	b.n	2d9d2 <load_free_space_tree@@Base+0x104>
   2da4a:	ldr.w	r3, [sp, #105]	; 0x69
   2da4e:	ldr.w	r2, [sp, #109]	; 0x6d
   2da52:	adds.w	r3, r3, sl
   2da56:	str	r3, [sp, #72]	; 0x48
   2da58:	adc.w	r3, r2, fp
   2da5c:	str	r3, [sp, #76]	; 0x4c
   2da5e:	ldrd	r1, r2, [sp, #72]	; 0x48
   2da62:	ldrd	r3, r4, [sp, #32]
   2da66:	cmp	r4, r2
   2da68:	it	eq
   2da6a:	cmpeq	r3, r1
   2da6c:	bcs.n	2dab6 <load_free_space_tree@@Base+0x1e8>
   2da6e:	ldrd	r1, r2, [sp, #32]
   2da72:	ldr	r3, [pc, #584]	; (2dcbc <load_free_space_tree@@Base+0x3ee>)
   2da74:	ldr	r3, [r6, r3]
   2da76:	strd	r1, r2, [sp, #16]
   2da7a:	ldr	r2, [sp, #48]	; 0x30
   2da7c:	strd	sl, fp, [sp]
   2da80:	str	r2, [sp, #8]
   2da82:	ldr	r2, [sp, #52]	; 0x34
   2da84:	str	r2, [sp, #12]
   2da86:	ldr	r2, [pc, #580]	; (2dccc <load_free_space_tree@@Base+0x3fe>)
   2da88:	add	r2, pc
   2da8a:	b.n	2da40 <load_free_space_tree@@Base+0x172>
   2da8c:	mov	r3, fp
   2da8e:	mov	r2, sl
   2da90:	mov	r0, r5
   2da92:	bl	2bc6e <btrfs_abort_transaction@@Base+0x1fa>
   2da96:	ldr	r3, [sp, #40]	; 0x28
   2da98:	mov	r4, r0
   2da9a:	cbnz	r3, 2dada <load_free_space_tree@@Base+0x20c>
   2da9c:	cmp	r0, #1
   2da9e:	bne.n	2daa8 <load_free_space_tree@@Base+0x1da>
   2daa0:	vmov	s16, sl
   2daa4:	vmov	s17, fp
   2daa8:	ldr.w	r3, [r9, #388]	; 0x184
   2daac:	str	r4, [sp, #40]	; 0x28
   2daae:	adds.w	sl, sl, r3
   2dab2:	adc.w	fp, fp, #0
   2dab6:	ldr.w	r3, [sp, #105]	; 0x69
   2daba:	ldr	r1, [sp, #96]	; 0x60
   2dabc:	ldr.w	r2, [sp, #109]	; 0x6d
   2dac0:	adds	r3, r3, r1
   2dac2:	str	r3, [sp, #80]	; 0x50
   2dac4:	ldr	r3, [sp, #100]	; 0x64
   2dac6:	adc.w	r3, r2, r3
   2daca:	str	r3, [sp, #84]	; 0x54
   2dacc:	ldrd	r3, r4, [sp, #80]	; 0x50
   2dad0:	cmp	fp, r4
   2dad2:	it	eq
   2dad4:	cmpeq	sl, r3
   2dad6:	bcc.n	2da8c <load_free_space_tree@@Base+0x1be>
   2dad8:	b.n	2d994 <load_free_space_tree@@Base+0xc6>
   2dada:	ldr	r3, [sp, #40]	; 0x28
   2dadc:	cmp	r3, #1
   2dade:	bne.n	2daa8 <load_free_space_tree@@Base+0x1da>
   2dae0:	cmp	r0, #0
   2dae2:	bne.n	2daa8 <load_free_space_tree@@Base+0x1da>
   2dae4:	vmov	r2, s16
   2dae8:	mov	r1, r9
   2daea:	vmov	r3, s17
   2daee:	mov	r0, r8
   2daf0:	strd	sl, fp, [sp]
   2daf4:	adds	r7, #1
   2daf6:	bl	233f8 <add_new_free_space@@Base>
   2dafa:	b.n	2daa8 <load_free_space_tree@@Base+0x1da>
   2dafc:	movs	r4, #0
   2dafe:	b.n	2d9d4 <load_free_space_tree@@Base+0x106>
   2db00:	movs	r4, #0
   2db02:	b.n	2d91c <load_free_space_tree@@Base+0x4e>
   2db04:	add	r3, sp, #96	; 0x60
   2db06:	mov	r4, r7
   2db08:	str	r7, [sp, #72]	; 0x48
   2db0a:	vmov	s16, r3
   2db0e:	ldr	r3, [pc, #448]	; (2dcd0 <load_free_space_tree@@Base+0x402>)
   2db10:	add	r3, pc
   2db12:	vmov	s17, r3
   2db16:	ldr	r3, [pc, #444]	; (2dcd4 <load_free_space_tree@@Base+0x406>)
   2db18:	add	r3, pc
   2db1a:	vmov	s19, r3
   2db1e:	vmov	r0, s18
   2db22:	mov	r1, r5
   2db24:	bl	2bb68 <btrfs_abort_transaction@@Base+0xf4>
   2db28:	subs	r3, r0, #0
   2db2a:	blt.w	2d91c <load_free_space_tree@@Base+0x4e>
   2db2e:	bne.n	2db5a <load_free_space_tree@@Base+0x28c>
   2db30:	vmov	r1, s16
   2db34:	ldr	r2, [r5, #32]
   2db36:	ldr	r0, [r5, #0]
   2db38:	bl	2ba7c <btrfs_abort_transaction@@Base+0x8>
   2db3c:	ldrb.w	r3, [sp, #104]	; 0x68
   2db40:	cmp	r3, #198	; 0xc6
   2db42:	beq.n	2db5a <load_free_space_tree@@Base+0x28c>
   2db44:	cmp	r3, #199	; 0xc7
   2db46:	beq.n	2db70 <load_free_space_tree@@Base+0x2a2>
   2db48:	ldr	r2, [pc, #368]	; (2dcbc <load_free_space_tree@@Base+0x3ee>)
   2db4a:	movs	r1, #1
   2db4c:	ldr	r0, [r6, r2]
   2db4e:	ldr	r2, [pc, #392]	; (2dcd8 <load_free_space_tree@@Base+0x40a>)
   2db50:	ldr	r0, [r0, #0]
   2db52:	add	r2, pc
   2db54:	blx	8a64 <__fprintf_chk@plt+0x4>
   2db58:	adds	r4, #1
   2db5a:	ldr	r3, [sp, #64]	; 0x40
   2db5c:	cmp	r3, r7
   2db5e:	beq.w	2da10 <load_free_space_tree@@Base+0x142>
   2db62:	ldr	r3, [pc, #344]	; (2dcbc <load_free_space_tree@@Base+0x3ee>)
   2db64:	ldr	r2, [pc, #372]	; (2dcdc <load_free_space_tree@@Base+0x40e>)
   2db66:	ldr	r0, [r6, r3]
   2db68:	add	r2, pc
   2db6a:	ldr	r3, [sp, #64]	; 0x40
   2db6c:	str	r7, [sp, #0]
   2db6e:	b.n	2da06 <load_free_space_tree@@Base+0x138>
   2db70:	ldrd	r2, r3, [sp, #96]	; 0x60
   2db74:	ldrd	r0, r1, [sp, #32]
   2db78:	cmp	r3, r1
   2db7a:	it	eq
   2db7c:	cmpeq	r2, r0
   2db7e:	bcc.n	2dba6 <load_free_space_tree@@Base+0x2d8>
   2db80:	ldr	r1, [pc, #312]	; (2dcbc <load_free_space_tree@@Base+0x3ee>)
   2db82:	ldrd	r8, r9, [sp, #32]
   2db86:	ldr	r0, [r6, r1]
   2db88:	ldr	r1, [sp, #48]	; 0x30
   2db8a:	strd	r2, r3, [sp]
   2db8e:	ldr	r2, [pc, #336]	; (2dce0 <load_free_space_tree@@Base+0x412>)
   2db90:	str	r1, [sp, #8]
   2db92:	ldr	r1, [sp, #52]	; 0x34
   2db94:	add	r2, pc
   2db96:	strd	r8, r9, [sp, #16]
   2db9a:	str	r1, [sp, #12]
   2db9c:	movs	r1, #1
   2db9e:	ldr	r0, [r0, #0]
   2dba0:	blx	8a64 <__fprintf_chk@plt+0x4>
   2dba4:	b.n	2db58 <load_free_space_tree@@Base+0x28a>
   2dba6:	ldr.w	r1, [sp, #105]	; 0x69
   2dbaa:	ldr.w	r0, [sp, #109]	; 0x6d
   2dbae:	adds	r1, r1, r2
   2dbb0:	str	r1, [sp, #40]	; 0x28
   2dbb2:	adc.w	r1, r0, r3
   2dbb6:	str	r1, [sp, #44]	; 0x2c
   2dbb8:	ldrd	fp, ip, [sp, #40]	; 0x28
   2dbbc:	ldrd	r0, r1, [sp, #32]
   2dbc0:	cmp	r1, ip
   2dbc2:	it	eq
   2dbc4:	cmpeq	r0, fp
   2dbc6:	bcs.n	2dbee <load_free_space_tree@@Base+0x320>
   2dbc8:	ldr	r3, [pc, #240]	; (2dcbc <load_free_space_tree@@Base+0x3ee>)
   2dbca:	mov	r2, r1
   2dbcc:	mov	r1, r0
   2dbce:	ldr	r3, [r6, r3]
   2dbd0:	strd	r1, r2, [sp, #16]
   2dbd4:	mov	r1, fp
   2dbd6:	ldr	r2, [sp, #48]	; 0x30
   2dbd8:	str	r2, [sp, #8]
   2dbda:	ldr	r2, [sp, #52]	; 0x34
   2dbdc:	str	r2, [sp, #12]
   2dbde:	mov	r2, ip
   2dbe0:	strd	r1, r2, [sp]
   2dbe4:	movs	r1, #1
   2dbe6:	ldr	r2, [pc, #252]	; (2dce4 <load_free_space_tree@@Base+0x416>)
   2dbe8:	ldr	r0, [r3, #0]
   2dbea:	add	r2, pc
   2dbec:	b.n	2dba0 <load_free_space_tree@@Base+0x2d2>
   2dbee:	ldr	r1, [sp, #72]	; 0x48
   2dbf0:	cbz	r1, 2dc3e <load_free_space_tree@@Base+0x370>
   2dbf2:	ldr	r1, [sp, #88]	; 0x58
   2dbf4:	ldr	r0, [sp, #68]	; 0x44
   2dbf6:	adds.w	r1, sl, r1
   2dbfa:	str	r1, [sp, #56]	; 0x38
   2dbfc:	ldr	r1, [sp, #92]	; 0x5c
   2dbfe:	adc.w	r1, r0, r1
   2dc02:	str	r1, [sp, #60]	; 0x3c
   2dc04:	ldrd	r0, r1, [sp, #56]	; 0x38
   2dc08:	cmp	r3, r1
   2dc0a:	it	eq
   2dc0c:	cmpeq	r2, r0
   2dc0e:	bcs.n	2dc76 <load_free_space_tree@@Base+0x3a8>
   2dc10:	ldr	r1, [pc, #168]	; (2dcbc <load_free_space_tree@@Base+0x3ee>)
   2dc12:	ldrd	fp, ip, [sp, #56]	; 0x38
   2dc16:	ldr	r0, [r6, r1]
   2dc18:	strd	r2, r3, [sp]
   2dc1c:	vmov	r2, s19
   2dc20:	ldr	r1, [sp, #68]	; 0x44
   2dc22:	strd	fp, ip, [sp, #24]
   2dc26:	str.w	sl, [sp, #16]
   2dc2a:	ldrd	sl, fp, [sp, #40]	; 0x28
   2dc2e:	str	r1, [sp, #20]
   2dc30:	strd	sl, fp, [sp, #8]
   2dc34:	ldr	r0, [r0, #0]
   2dc36:	movs	r1, #1
   2dc38:	blx	8a64 <__fprintf_chk@plt+0x4>
   2dc3c:	adds	r4, #1
   2dc3e:	ldrd	r2, r3, [sp, #96]	; 0x60
   2dc42:	adds	r7, #1
   2dc44:	ldr.w	r1, [sp, #105]	; 0x69
   2dc48:	ldr.w	r0, [sp, #109]	; 0x6d
   2dc4c:	adds	r1, r1, r2
   2dc4e:	adc.w	r0, r3, r0
   2dc52:	strd	r1, r0, [sp]
   2dc56:	mov	r1, r9
   2dc58:	mov	r0, r8
   2dc5a:	bl	233f8 <add_new_free_space@@Base>
   2dc5e:	ldrd	sl, r3, [sp, #96]	; 0x60
   2dc62:	str	r3, [sp, #68]	; 0x44
   2dc64:	ldr.w	r3, [sp, #105]	; 0x69
   2dc68:	str	r3, [sp, #88]	; 0x58
   2dc6a:	ldr.w	r3, [sp, #109]	; 0x6d
   2dc6e:	str	r3, [sp, #92]	; 0x5c
   2dc70:	movs	r3, #1
   2dc72:	str	r3, [sp, #72]	; 0x48
   2dc74:	b.n	2db1e <load_free_space_tree@@Base+0x250>
   2dc76:	bne.n	2dc3e <load_free_space_tree@@Base+0x370>
   2dc78:	ldr	r1, [pc, #64]	; (2dcbc <load_free_space_tree@@Base+0x3ee>)
   2dc7a:	ldr	r0, [r6, r1]
   2dc7c:	ldr	r1, [sp, #68]	; 0x44
   2dc7e:	str.w	sl, [sp, #16]
   2dc82:	ldrd	sl, fp, [sp, #40]	; 0x28
   2dc86:	strd	r2, r3, [sp, #24]
   2dc8a:	strd	r2, r3, [sp]
   2dc8e:	str	r1, [sp, #20]
   2dc90:	vmov	r2, s17
   2dc94:	strd	sl, fp, [sp, #8]
   2dc98:	b.n	2dc34 <load_free_space_tree@@Base+0x366>
   2dc9a:	mvn.w	r3, #11
   2dc9e:	b.n	2d92c <load_free_space_tree@@Base+0x5e>
   2dca0:	mov	r0, r3
   2dca2:	add	sp, #124	; 0x7c
   2dca4:	vpop	{d8-d9}
   2dca8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2dcac:	strb	r2, [r4, #18]
   2dcae:	movs	r3, r0
   2dcb0:	lsls	r0, r5, #8
   2dcb2:	movs	r0, r0
   2dcb4:	strb	r2, [r3, #18]
   2dcb6:	movs	r3, r0
   2dcb8:	strb	r0, [r2, #17]
   2dcba:	movs	r3, r0
   2dcbc:	lsls	r0, r7, #8
   2dcbe:	movs	r0, r0
   2dcc0:	adds	r5, #44	; 0x2c
   2dcc2:	movs	r1, r0
   2dcc4:	adds	r5, #159	; 0x9f
   2dcc6:	movs	r1, r0
   2dcc8:	adds	r4, #213	; 0xd5
   2dcca:	movs	r1, r0
   2dccc:	adds	r4, #210	; 0xd2
   2dcce:	movs	r1, r0
   2dcd0:	adds	r5, #138	; 0x8a
   2dcd2:	movs	r1, r0
   2dcd4:	adds	r5, #68	; 0x44
   2dcd6:	movs	r1, r0
   2dcd8:	adds	r3, #166	; 0xa6
   2dcda:	movs	r1, r0
   2dcdc:	adds	r4, #55	; 0x37
   2dcde:	movs	r1, r0
   2dce0:	adds	r4, #60	; 0x3c
   2dce2:	movs	r1, r0
   2dce4:	adds	r4, #45	; 0x2d
   2dce6:	movs	r1, r0

0002dce8 <btrfs_add_corrupt_extent_record@@Base>:
   2dce8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dcec:	mov	sl, r2
   2dcee:	ldr	r2, [pc, #220]	; (2ddcc <btrfs_add_corrupt_extent_record@@Base+0xe4>)
   2dcf0:	mov	r9, r3
   2dcf2:	ldr	r3, [pc, #220]	; (2ddd0 <btrfs_add_corrupt_extent_record@@Base+0xe8>)
   2dcf4:	sub	sp, #92	; 0x5c
   2dcf6:	add	r2, pc
   2dcf8:	ldr.w	r8, [pc, #216]	; 2ddd4 <btrfs_add_corrupt_extent_record@@Base+0xec>
   2dcfc:	ldr.w	fp, [r0, #380]	; 0x17c
   2dd00:	mov	r4, r1
   2dd02:	ldr	r3, [r2, r3]
   2dd04:	add	r8, pc
   2dd06:	ldr	r3, [r3, #0]
   2dd08:	str	r3, [sp, #84]	; 0x54
   2dd0a:	mov.w	r3, #0
   2dd0e:	cmp.w	fp, #0
   2dd12:	beq.n	2dda6 <btrfs_add_corrupt_extent_record@@Base+0xbe>
   2dd14:	movs	r0, #64	; 0x40
   2dd16:	blx	8870 <malloc@plt+0x4>
   2dd1a:	mov	r5, r0
   2dd1c:	cmp	r0, #0
   2dd1e:	beq.n	2ddbc <btrfs_add_corrupt_extent_record@@Base+0xd4>
   2dd20:	add.w	r6, r0, #40	; 0x28
   2dd24:	add.w	r3, r4, #16
   2dd28:	ldr	r0, [r4, #0]
   2dd2a:	adds	r4, #8
   2dd2c:	ldr.w	r1, [r4, #-4]
   2dd30:	cmp	r4, r3
   2dd32:	mov	r7, r6
   2dd34:	stmia	r7!, {r0, r1}
   2dd36:	mov	r6, r7
   2dd38:	bne.n	2dd28 <btrfs_add_corrupt_extent_record@@Base+0x40>
   2dd3a:	ldrb	r3, [r4, #0]
   2dd3c:	mov	r1, r5
   2dd3e:	mov	r0, fp
   2dd40:	strb	r3, [r7, #0]
   2dd42:	ldrd	r2, r3, [sp, #128]	; 0x80
   2dd46:	strd	sl, r9, [r5, #24]
   2dd4a:	strd	r2, r3, [r5, #32]
   2dd4e:	ldr	r3, [sp, #136]	; 0x88
   2dd50:	str	r3, [r5, #60]	; 0x3c
   2dd52:	bl	1659a <insert_cache_extent@@Base>
   2dd56:	mov	r4, r0
   2dd58:	cbz	r0, 2dda6 <btrfs_add_corrupt_extent_record@@Base+0xbe>
   2dd5a:	mov	r0, r5
   2dd5c:	blx	8620 <free@plt+0x4>
   2dd60:	cmn.w	r4, #17
   2dd64:	beq.n	2dda8 <btrfs_add_corrupt_extent_record@@Base+0xc0>
   2dd66:	ldr	r3, [pc, #112]	; (2ddd8 <btrfs_add_corrupt_extent_record@@Base+0xf0>)
   2dd68:	add	r4, sp, #20
   2dd6a:	ldr	r2, [pc, #112]	; (2dddc <btrfs_add_corrupt_extent_record@@Base+0xf4>)
   2dd6c:	movs	r1, #1
   2dd6e:	ldr.w	r0, [r8, r3]
   2dd72:	add	r2, pc
   2dd74:	ldr	r3, [pc, #104]	; (2dde0 <btrfs_add_corrupt_extent_record@@Base+0xf8>)
   2dd76:	str	r1, [sp, #12]
   2dd78:	add	r3, pc
   2dd7a:	str	r3, [sp, #8]
   2dd7c:	ldr	r3, [pc, #100]	; (2dde4 <btrfs_add_corrupt_extent_record@@Base+0xfc>)
   2dd7e:	add	r3, pc
   2dd80:	str	r3, [sp, #4]
   2dd82:	movs	r3, #49	; 0x31
   2dd84:	str	r3, [sp, #0]
   2dd86:	ldr	r3, [pc, #96]	; (2dde8 <btrfs_add_corrupt_extent_record@@Base+0x100>)
   2dd88:	ldr	r0, [r0, #0]
   2dd8a:	add	r3, pc
   2dd8c:	blx	8a64 <__fprintf_chk@plt+0x4>
   2dd90:	movs	r1, #16
   2dd92:	mov	r0, r4
   2dd94:	blx	88bc <backtrace@plt>
   2dd98:	movs	r2, #2
   2dd9a:	mov	r1, r0
   2dd9c:	mov	r0, r4
   2dd9e:	blx	8bcc <backtrace_symbols_fd@plt>
   2dda2:	blx	8b84 <abort@plt>
   2dda6:	movs	r4, #0
   2dda8:	ldr	r2, [pc, #64]	; (2ddec <btrfs_add_corrupt_extent_record@@Base+0x104>)
   2ddaa:	ldr	r3, [pc, #36]	; (2ddd0 <btrfs_add_corrupt_extent_record@@Base+0xe8>)
   2ddac:	add	r2, pc
   2ddae:	ldr	r3, [r2, r3]
   2ddb0:	ldr	r2, [r3, #0]
   2ddb2:	ldr	r3, [sp, #84]	; 0x54
   2ddb4:	eors	r2, r3
   2ddb6:	beq.n	2ddc2 <btrfs_add_corrupt_extent_record@@Base+0xda>
   2ddb8:	blx	8708 <__stack_chk_fail@plt>
   2ddbc:	mvn.w	r4, #11
   2ddc0:	b.n	2dda8 <btrfs_add_corrupt_extent_record@@Base+0xc0>
   2ddc2:	mov	r0, r4
   2ddc4:	add	sp, #92	; 0x5c
   2ddc6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ddca:	nop
   2ddcc:	strb	r2, [r1, #2]
   2ddce:	movs	r3, r0
   2ddd0:	lsls	r0, r5, #8
   2ddd2:	movs	r0, r0
   2ddd4:	strb	r4, [r7, #1]
   2ddd6:	movs	r3, r0
   2ddd8:	lsls	r0, r7, #8
   2ddda:	movs	r0, r0
   2dddc:	stmia	r1!, {r4, r5}
   2ddde:	movs	r0, r0
   2dde0:	adds	r4, #128	; 0x80
   2dde2:	movs	r1, r0
   2dde4:	adds	r4, #144	; 0x90
   2dde6:	movs	r1, r0
   2dde8:	adds	r4, #101	; 0x65
   2ddea:	movs	r1, r0
   2ddec:	ldr	r4, [r2, #124]	; 0x7c
   2ddee:	movs	r3, r0
   2ddf0:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ddf4:	mov	r7, r3
   2ddf6:	ldr.w	r9, [r0]
   2ddfa:	mov	r5, r2
   2ddfc:	ldr	r3, [r0, #32]
   2ddfe:	movs	r2, #25
   2de00:	add.w	sl, r9, #96	; 0x60
   2de04:	movs	r4, #0
   2de06:	mla	r3, r2, r3, sl
   2de0a:	ldr.w	r6, [r3, #118]	; 0x76
   2de0e:	ldr.w	fp, [r3, #122]	; 0x7a
   2de12:	adds	r6, #101	; 0x65
   2de14:	cmp	r4, fp
   2de16:	bcc.n	2de1c <btrfs_add_corrupt_extent_record@@Base+0x134>
   2de18:	movs	r0, #0
   2de1a:	b.n	2de4a <btrfs_add_corrupt_extent_record@@Base+0x162>
   2de1c:	add.w	r8, r4, r6
   2de20:	add.w	r3, sl, r8
   2de24:	ldrh	r3, [r3, #8]
   2de26:	cmp	r3, r5
   2de28:	add.w	r2, r3, #10
   2de2c:	add	r4, r2
   2de2e:	bne.n	2de14 <btrfs_add_corrupt_extent_record@@Base+0x12c>
   2de30:	add.w	r2, r8, #10
   2de34:	mov	r3, r5
   2de36:	mov	r0, r9
   2de38:	str	r1, [sp, #4]
   2de3a:	bl	17a08 <memcmp_extent_buffer@@Base>
   2de3e:	ldr	r1, [sp, #4]
   2de40:	cmp	r0, #0
   2de42:	bne.n	2de14 <btrfs_add_corrupt_extent_record@@Base+0x12c>
   2de44:	movs	r0, #1
   2de46:	str.w	r8, [r7]
   2de4a:	add	sp, #12
   2de4c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2de50:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2de54:	mov	sl, r2
   2de56:	ldr.w	r8, [r0]
   2de5a:	movs	r1, #25
   2de5c:	ldr	r2, [r0, #32]
   2de5e:	mov	fp, r3
   2de60:	add.w	r9, r8, #96	; 0x60
   2de64:	ldr	r3, [sp, #52]	; 0x34
   2de66:	movs	r4, #0
   2de68:	mla	r2, r1, r2, r9
   2de6c:	ldr.w	r6, [r2, #118]	; 0x76
   2de70:	ldr.w	r1, [r2, #122]	; 0x7a
   2de74:	adds	r6, #101	; 0x65
   2de76:	str	r1, [sp, #4]
   2de78:	ldr	r2, [sp, #4]
   2de7a:	cmp	r4, r2
   2de7c:	bcc.n	2de86 <btrfs_add_corrupt_extent_record@@Base+0x19e>
   2de7e:	movs	r0, #0
   2de80:	add	sp, #12
   2de82:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2de86:	adds	r7, r4, r6
   2de88:	add.w	r2, r9, r7
   2de8c:	ldrh	r5, [r2, #16]
   2de8e:	cmp	r5, r3
   2de90:	bne.n	2deba <btrfs_add_corrupt_extent_record@@Base+0x1d2>
   2de92:	ldr	r1, [r2, #4]
   2de94:	ldr	r0, [r2, #0]
   2de96:	cmp	fp, r1
   2de98:	it	eq
   2de9a:	cmpeq	sl, r0
   2de9c:	bne.n	2deba <btrfs_add_corrupt_extent_record@@Base+0x1d2>
   2de9e:	ldr	r1, [sp, #48]	; 0x30
   2dea0:	add.w	r2, r7, #18
   2dea4:	mov	r0, r8
   2dea6:	str	r3, [sp, #52]	; 0x34
   2dea8:	bl	17a08 <memcmp_extent_buffer@@Base>
   2deac:	ldr	r3, [sp, #52]	; 0x34
   2deae:	cbnz	r0, 2deba <btrfs_add_corrupt_extent_record@@Base+0x1d2>
   2deb0:	ldr	r3, [sp, #56]	; 0x38
   2deb2:	cbz	r3, 2deb6 <btrfs_add_corrupt_extent_record@@Base+0x1ce>
   2deb4:	str	r7, [r3, #0]
   2deb6:	movs	r0, #1
   2deb8:	b.n	2de80 <btrfs_add_corrupt_extent_record@@Base+0x198>
   2deba:	adds	r5, #18
   2debc:	add	r4, r5
   2debe:	b.n	2de78 <btrfs_add_corrupt_extent_record@@Base+0x190>

0002dec0 <btrfs_lookup_inode@@Base>:
   2dec0:	push	{r4, r5, r6, r7, lr}
   2dec2:	mov	r5, r2
   2dec4:	ldr	r6, [pc, #152]	; (2df60 <btrfs_lookup_inode@@Base+0xa0>)
   2dec6:	sub	sp, #36	; 0x24
   2dec8:	ldr	r2, [pc, #152]	; (2df64 <btrfs_lookup_inode@@Base+0xa4>)
   2deca:	mov	r4, r3
   2decc:	add	r6, pc
   2dece:	ldr	r3, [sp, #56]	; 0x38
   2ded0:	ldr	r2, [r6, r2]
   2ded2:	ldr	r2, [r2, #0]
   2ded4:	str	r2, [sp, #28]
   2ded6:	mov.w	r2, #0
   2deda:	subs	r2, r3, #0
   2dedc:	mov.w	r3, r3, asr #31
   2dee0:	str	r3, [sp, #0]
   2dee2:	it	ne
   2dee4:	movne	r2, #1
   2dee6:	mov	r3, r5
   2dee8:	str	r2, [sp, #4]
   2deea:	mov	r2, r4
   2deec:	bl	1a93c <btrfs_search_slot@@Base>
   2def0:	subs	r6, r0, #0
   2def2:	ble.n	2df46 <btrfs_lookup_inode@@Base+0x86>
   2def4:	ldrb	r3, [r4, #8]
   2def6:	cmp	r3, #132	; 0x84
   2def8:	bne.n	2df46 <btrfs_lookup_inode@@Base+0x86>
   2defa:	ldr.w	r3, [r4, #13]
   2defe:	ldr.w	r2, [r4, #9]
   2df02:	adds	r3, #1
   2df04:	it	eq
   2df06:	cmpeq.w	r2, #4294967295	; 0xffffffff
   2df0a:	bne.n	2df46 <btrfs_lookup_inode@@Base+0x86>
   2df0c:	ldr	r2, [r5, #32]
   2df0e:	cbz	r2, 2df46 <btrfs_lookup_inode@@Base+0x86>
   2df10:	subs	r2, #1
   2df12:	movs	r3, #25
   2df14:	ldr	r0, [r5, #0]
   2df16:	add	r1, sp, #8
   2df18:	muls	r2, r3
   2df1a:	movs	r3, #17
   2df1c:	adds	r2, #101	; 0x65
   2df1e:	bl	17a1a <read_extent_buffer@@Base>
   2df22:	ldrd	r2, r3, [sp, #8]
   2df26:	ldr	r1, [r4, #4]
   2df28:	ldr	r0, [r4, #0]
   2df2a:	cmp	r1, r3
   2df2c:	ldrb.w	r7, [sp, #16]
   2df30:	it	eq
   2df32:	cmpeq	r0, r2
   2df34:	bne.n	2df46 <btrfs_lookup_inode@@Base+0x86>
   2df36:	ldrb	r3, [r4, #8]
   2df38:	cmp	r3, r7
   2df3a:	itttt	eq
   2df3c:	ldreq	r3, [r5, #32]
   2df3e:	moveq	r6, #0
   2df40:	addeq.w	r3, r3, #4294967295	; 0xffffffff
   2df44:	streq	r3, [r5, #32]
   2df46:	ldr	r2, [pc, #32]	; (2df68 <btrfs_lookup_inode@@Base+0xa8>)
   2df48:	ldr	r3, [pc, #24]	; (2df64 <btrfs_lookup_inode@@Base+0xa4>)
   2df4a:	add	r2, pc
   2df4c:	ldr	r3, [r2, r3]
   2df4e:	ldr	r2, [r3, #0]
   2df50:	ldr	r3, [sp, #28]
   2df52:	eors	r2, r3
   2df54:	beq.n	2df5a <btrfs_lookup_inode@@Base+0x9a>
   2df56:	blx	8708 <__stack_chk_fail@plt>
   2df5a:	mov	r0, r6
   2df5c:	add	sp, #36	; 0x24
   2df5e:	pop	{r4, r5, r6, r7, pc}
   2df60:	ldr	r4, [r6, #104]	; 0x68
   2df62:	movs	r3, r0
   2df64:	lsls	r0, r5, #8
   2df66:	movs	r0, r0
   2df68:	ldr	r6, [r6, #96]	; 0x60
   2df6a:	movs	r3, r0

0002df6c <btrfs_insert_inode@@Base>:
   2df6c:	push	{lr}
   2df6e:	sub	sp, #36	; 0x24
   2df70:	ldr.w	lr, [pc, #104]	; 2dfdc <btrfs_insert_inode@@Base+0x70>
   2df74:	ldr.w	ip, [pc, #104]	; 2dfe0 <btrfs_insert_inode@@Base+0x74>
   2df78:	add	lr, pc
   2df7a:	ldr.w	ip, [lr, ip]
   2df7e:	ldr.w	ip, [ip]
   2df82:	str.w	ip, [sp, #28]
   2df86:	mov.w	ip, #0
   2df8a:	strd	r2, r3, [sp, #8]
   2df8e:	movs	r2, #0
   2df90:	movs	r3, #1
   2df92:	strb.w	r2, [sp, #17]
   2df96:	strb.w	r3, [sp, #16]
   2df9a:	movs	r3, #160	; 0xa0
   2df9c:	strb.w	r2, [sp, #18]
   2dfa0:	strb.w	r2, [sp, #19]
   2dfa4:	strb.w	r2, [sp, #20]
   2dfa8:	strb.w	r2, [sp, #21]
   2dfac:	strb.w	r2, [sp, #22]
   2dfb0:	strb.w	r2, [sp, #23]
   2dfb4:	strb.w	r2, [sp, #24]
   2dfb8:	add	r2, sp, #8
   2dfba:	str	r3, [sp, #0]
   2dfbc:	ldr	r3, [sp, #40]	; 0x28
   2dfbe:	bl	1b9c8 <btrfs_insert_item@@Base>
   2dfc2:	ldr	r2, [pc, #32]	; (2dfe4 <btrfs_insert_inode@@Base+0x78>)
   2dfc4:	ldr	r3, [pc, #24]	; (2dfe0 <btrfs_insert_inode@@Base+0x74>)
   2dfc6:	add	r2, pc
   2dfc8:	ldr	r3, [r2, r3]
   2dfca:	ldr	r2, [r3, #0]
   2dfcc:	ldr	r3, [sp, #28]
   2dfce:	eors	r2, r3
   2dfd0:	beq.n	2dfd6 <btrfs_insert_inode@@Base+0x6a>
   2dfd2:	blx	8708 <__stack_chk_fail@plt>
   2dfd6:	add	sp, #36	; 0x24
   2dfd8:	ldr.w	pc, [sp], #4
   2dfdc:	ldr	r0, [r1, #96]	; 0x60
   2dfde:	movs	r3, r0
   2dfe0:	lsls	r0, r5, #8
   2dfe2:	movs	r0, r0
   2dfe4:	ldr	r2, [r7, #88]	; 0x58
   2dfe6:	movs	r3, r0

0002dfe8 <btrfs_lookup_inode_ref@@Base>:
   2dfe8:	push	{r4, r5, r6, lr}
   2dfea:	mov	r4, r2
   2dfec:	ldr	r2, [pc, #112]	; (2e060 <btrfs_lookup_inode_ref@@Base+0x78>)
   2dfee:	mov	r5, r3
   2dff0:	ldr	r3, [pc, #112]	; (2e064 <btrfs_lookup_inode_ref@@Base+0x7c>)
   2dff2:	sub	sp, #40	; 0x28
   2dff4:	add	r2, pc
   2dff6:	ldr	r6, [sp, #80]	; 0x50
   2dff8:	ldr	r3, [r2, r3]
   2dffa:	ldr	r3, [r3, #0]
   2dffc:	str	r3, [sp, #36]	; 0x24
   2dffe:	mov.w	r3, #0
   2e002:	movs	r3, #0
   2e004:	str	r3, [sp, #12]
   2e006:	ldrd	r2, r3, [sp, #64]	; 0x40
   2e00a:	strd	r2, r3, [sp, #16]
   2e00e:	movs	r3, #12
   2e010:	strb.w	r3, [sp, #24]
   2e014:	add	r2, sp, #16
   2e016:	ldr	r3, [sp, #72]	; 0x48
   2e018:	str.w	r3, [sp, #25]
   2e01c:	ldr	r3, [sp, #76]	; 0x4c
   2e01e:	str.w	r3, [sp, #29]
   2e022:	subs	r3, r6, #0
   2e024:	it	ne
   2e026:	movne	r3, #1
   2e028:	strd	r6, r3, [sp]
   2e02c:	mov	r3, r4
   2e02e:	bl	1a93c <btrfs_search_slot@@Base>
   2e032:	cmp	r0, #0
   2e034:	bne.n	2e046 <btrfs_lookup_inode_ref@@Base+0x5e>
   2e036:	ldr	r2, [sp, #56]	; 0x38
   2e038:	add	r3, sp, #12
   2e03a:	mov	r1, r5
   2e03c:	mov	r0, r4
   2e03e:	bl	2ddf0 <btrfs_add_corrupt_extent_record@@Base+0x108>
   2e042:	ldr	r0, [sp, #12]
   2e044:	b.n	2e048 <btrfs_lookup_inode_ref@@Base+0x60>
   2e046:	bge.n	2e042 <btrfs_lookup_inode_ref@@Base+0x5a>
   2e048:	ldr	r2, [pc, #28]	; (2e068 <btrfs_lookup_inode_ref@@Base+0x80>)
   2e04a:	ldr	r3, [pc, #24]	; (2e064 <btrfs_lookup_inode_ref@@Base+0x7c>)
   2e04c:	add	r2, pc
   2e04e:	ldr	r3, [r2, r3]
   2e050:	ldr	r2, [r3, #0]
   2e052:	ldr	r3, [sp, #36]	; 0x24
   2e054:	eors	r2, r3
   2e056:	beq.n	2e05c <btrfs_lookup_inode_ref@@Base+0x74>
   2e058:	blx	8708 <__stack_chk_fail@plt>
   2e05c:	add	sp, #40	; 0x28
   2e05e:	pop	{r4, r5, r6, pc}
   2e060:	ldr	r4, [r1, #88]	; 0x58
   2e062:	movs	r3, r0
   2e064:	lsls	r0, r5, #8
   2e066:	movs	r0, r0
   2e068:	ldr	r4, [r6, #80]	; 0x50
   2e06a:	movs	r3, r0

0002e06c <btrfs_lookup_inode_extref@@Base>:
   2e06c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e070:	mov	sl, r2
   2e072:	ldr	r2, [pc, #152]	; (2e10c <btrfs_lookup_inode_extref@@Base+0xa0>)
   2e074:	sub	sp, #52	; 0x34
   2e076:	ldr	r3, [pc, #152]	; (2e110 <btrfs_lookup_inode_extref@@Base+0xa4>)
   2e078:	mov	r5, r0
   2e07a:	add	r2, pc
   2e07c:	ldrd	r7, r8, [sp, #112]	; 0x70
   2e080:	ldrd	r6, r9, [sp, #96]	; 0x60
   2e084:	mov	r4, r1
   2e086:	ldr	r3, [r2, r3]
   2e088:	mov	r1, r7
   2e08a:	ldr.w	fp, [sp, #120]	; 0x78
   2e08e:	ldr	r3, [r3, #0]
   2e090:	str	r3, [sp, #44]	; 0x2c
   2e092:	mov.w	r3, #0
   2e096:	ldrd	r2, r3, [sp, #88]	; 0x58
   2e09a:	mov	r0, r6
   2e09c:	strd	r2, r3, [sp, #24]
   2e0a0:	mov	r2, r8
   2e0a2:	movs	r3, #13
   2e0a4:	strb.w	r3, [sp, #32]
   2e0a8:	bl	17afa <crc32c_le@@Base>
   2e0ac:	movs	r3, #0
   2e0ae:	str.w	r3, [sp, #37]	; 0x25
   2e0b2:	subs.w	r3, fp, r3
   2e0b6:	add	r2, sp, #24
   2e0b8:	mov	r1, sl
   2e0ba:	it	ne
   2e0bc:	movne	r3, #1
   2e0be:	strd	fp, r3, [sp]
   2e0c2:	mov	r3, r4
   2e0c4:	str.w	r0, [sp, #33]	; 0x21
   2e0c8:	mov	r0, r5
   2e0ca:	bl	1a93c <btrfs_search_slot@@Base>
   2e0ce:	cmp	r0, #0
   2e0d0:	blt.n	2e0d6 <btrfs_lookup_inode_extref@@Base+0x6a>
   2e0d2:	beq.n	2e0ea <btrfs_lookup_inode_extref@@Base+0x7e>
   2e0d4:	movs	r0, #0
   2e0d6:	ldr	r2, [pc, #60]	; (2e114 <btrfs_lookup_inode_extref@@Base+0xa8>)
   2e0d8:	ldr	r3, [pc, #52]	; (2e110 <btrfs_lookup_inode_extref@@Base+0xa4>)
   2e0da:	add	r2, pc
   2e0dc:	ldr	r3, [r2, r3]
   2e0de:	ldr	r2, [r3, #0]
   2e0e0:	ldr	r3, [sp, #44]	; 0x2c
   2e0e2:	eors	r2, r3
   2e0e4:	beq.n	2e104 <btrfs_lookup_inode_extref@@Base+0x98>
   2e0e6:	blx	8708 <__stack_chk_fail@plt>
   2e0ea:	add	r3, sp, #20
   2e0ec:	mov	r2, r6
   2e0ee:	strd	r8, r3, [sp, #4]
   2e0f2:	mov	r0, r4
   2e0f4:	mov	r3, r9
   2e0f6:	str	r7, [sp, #0]
   2e0f8:	bl	2de50 <btrfs_add_corrupt_extent_record@@Base+0x168>
   2e0fc:	cmp	r0, #0
   2e0fe:	beq.n	2e0d4 <btrfs_lookup_inode_extref@@Base+0x68>
   2e100:	ldr	r0, [sp, #20]
   2e102:	b.n	2e0d6 <btrfs_lookup_inode_extref@@Base+0x6a>
   2e104:	add	sp, #52	; 0x34
   2e106:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e10a:	nop
   2e10c:	ldr	r6, [r0, #80]	; 0x50
   2e10e:	movs	r3, r0
   2e110:	lsls	r0, r5, #8
   2e112:	movs	r0, r0
   2e114:	ldr	r6, [r4, #72]	; 0x48
   2e116:	movs	r3, r0

0002e118 <btrfs_del_inode_extref@@Base>:
   2e118:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e11c:	mov	r6, r3
   2e11e:	vpush	{d8}
   2e122:	mov	fp, r2
   2e124:	ldr	r2, [pc, #284]	; (2e244 <btrfs_del_inode_extref@@Base+0x12c>)
   2e126:	mov	r8, r0
   2e128:	mov	r7, r1
   2e12a:	mov	r1, fp
   2e12c:	add	r2, pc
   2e12e:	sub	sp, #52	; 0x34
   2e130:	ldrd	sl, r3, [sp, #104]	; 0x68
   2e134:	ldr.w	r9, [sp, #112]	; 0x70
   2e138:	vmov	s16, r3
   2e13c:	ldr	r3, [pc, #264]	; (2e248 <btrfs_del_inode_extref@@Base+0x130>)
   2e13e:	mov	r0, sl
   2e140:	ldr	r3, [r2, r3]
   2e142:	ldr	r3, [r3, #0]
   2e144:	str	r3, [sp, #44]	; 0x2c
   2e146:	mov.w	r3, #0
   2e14a:	ldrd	r2, r3, [sp, #96]	; 0x60
   2e14e:	strd	r2, r3, [sp, #24]
   2e152:	mov	r2, r6
   2e154:	movs	r3, #13
   2e156:	strb.w	r3, [sp, #32]
   2e15a:	bl	17afa <crc32c_le@@Base>
   2e15e:	movs	r3, #0
   2e160:	str.w	r3, [sp, #37]	; 0x25
   2e164:	str.w	r0, [sp, #33]	; 0x21
   2e168:	bl	18550 <btrfs_alloc_path@@Base>
   2e16c:	mov	r4, r0
   2e16e:	cmp	r0, #0
   2e170:	beq.n	2e230 <btrfs_del_inode_extref@@Base+0x118>
   2e172:	mov.w	r3, #4294967295	; 0xffffffff
   2e176:	movs	r2, #1
   2e178:	mov	r1, r7
   2e17a:	strd	r3, r2, [sp]
   2e17e:	mov	r3, r0
   2e180:	add	r2, sp, #24
   2e182:	mov	r0, r8
   2e184:	bl	1a93c <btrfs_search_slot@@Base>
   2e188:	subs	r5, r0, #0
   2e18a:	ble.n	2e1aa <btrfs_del_inode_extref@@Base+0x92>
   2e18c:	mvn.w	r5, #1
   2e190:	mov	r0, r4
   2e192:	bl	1857e <btrfs_free_path@@Base>
   2e196:	ldr	r2, [pc, #180]	; (2e24c <btrfs_del_inode_extref@@Base+0x134>)
   2e198:	ldr	r3, [pc, #172]	; (2e248 <btrfs_del_inode_extref@@Base+0x130>)
   2e19a:	add	r2, pc
   2e19c:	ldr	r3, [r2, r3]
   2e19e:	ldr	r2, [r3, #0]
   2e1a0:	ldr	r3, [sp, #44]	; 0x2c
   2e1a2:	eors	r2, r3
   2e1a4:	beq.n	2e236 <btrfs_del_inode_extref@@Base+0x11e>
   2e1a6:	blx	8708 <__stack_chk_fail@plt>
   2e1aa:	bne.n	2e190 <btrfs_del_inode_extref@@Base+0x78>
   2e1ac:	add	r3, sp, #20
   2e1ae:	mov	r2, sl
   2e1b0:	strd	r6, r3, [sp, #4]
   2e1b4:	mov	r0, r4
   2e1b6:	vmov	r3, s16
   2e1ba:	str.w	fp, [sp]
   2e1be:	bl	2de50 <btrfs_add_corrupt_extent_record@@Base+0x168>
   2e1c2:	cmp	r0, #0
   2e1c4:	beq.n	2e18c <btrfs_del_inode_extref@@Base+0x74>
   2e1c6:	ldr	r0, [r4, #0]
   2e1c8:	movs	r2, #25
   2e1ca:	ldr	r3, [r4, #32]
   2e1cc:	add.w	ip, r0, #96	; 0x60
   2e1d0:	mla	r3, r2, r3, ip
   2e1d4:	ldr.w	sl, [r3, #122]	; 0x7a
   2e1d8:	cmp.w	r9, #0
   2e1dc:	beq.n	2e1ea <btrfs_del_inode_extref@@Base+0xd2>
   2e1de:	ldr	r2, [sp, #20]
   2e1e0:	add	r2, ip
   2e1e2:	ldr	r1, [r2, #8]
   2e1e4:	ldr	r3, [r2, #12]
   2e1e6:	strd	r1, r3, [r9]
   2e1ea:	adds	r6, #18
   2e1ec:	ldr	r3, [r4, #32]
   2e1ee:	cmp	r6, sl
   2e1f0:	bne.n	2e204 <btrfs_del_inode_extref@@Base+0xec>
   2e1f2:	movs	r2, #1
   2e1f4:	mov	r1, r7
   2e1f6:	str	r2, [sp, #0]
   2e1f8:	mov	r0, r8
   2e1fa:	mov	r2, r4
   2e1fc:	bl	1baf8 <btrfs_del_items@@Base>
   2e200:	mov	r5, r0
   2e202:	b.n	2e190 <btrfs_del_inode_extref@@Base+0x78>
   2e204:	mov.w	lr, #25
   2e208:	ldr	r1, [sp, #20]
   2e20a:	mla	r3, lr, r3, ip
   2e20e:	adds	r2, r6, r1
   2e210:	ldr.w	ip, [r3, #118]	; 0x76
   2e214:	rsb	r3, r2, #101	; 0x65
   2e218:	add	r3, sl
   2e21a:	add	r3, ip
   2e21c:	bl	17a8c <memmove_extent_buffer@@Base>
   2e220:	sub.w	r2, sl, r6
   2e224:	movs	r3, #1
   2e226:	mov	r1, r4
   2e228:	mov	r0, r7
   2e22a:	bl	1a57c <btrfs_truncate_item@@Base>
   2e22e:	b.n	2e190 <btrfs_del_inode_extref@@Base+0x78>
   2e230:	mvn.w	r5, #11
   2e234:	b.n	2e196 <btrfs_del_inode_extref@@Base+0x7e>
   2e236:	mov	r0, r5
   2e238:	add	sp, #52	; 0x34
   2e23a:	vpop	{d8}
   2e23e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e242:	nop
   2e244:	ldr	r4, [r2, #68]	; 0x44
   2e246:	movs	r3, r0
   2e248:	lsls	r0, r5, #8
   2e24a:	movs	r0, r0
   2e24c:	ldr	r6, [r4, #60]	; 0x3c
   2e24e:	movs	r3, r0

0002e250 <btrfs_insert_inode_extref@@Base>:
   2e250:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e254:	sub	sp, #68	; 0x44
   2e256:	mov	r6, r3
   2e258:	mov	r7, r2
   2e25a:	ldrd	sl, r3, [sp, #112]	; 0x70
   2e25e:	mov	r5, r0
   2e260:	ldr	r2, [pc, #260]	; (2e368 <btrfs_insert_inode_extref@@Base+0x118>)
   2e262:	mov	r9, r1
   2e264:	mov	r1, r7
   2e266:	mov.w	fp, #0
   2e26a:	str	r3, [sp, #20]
   2e26c:	add	r2, pc
   2e26e:	ldr	r3, [sp, #120]	; 0x78
   2e270:	mov	r0, sl
   2e272:	add.w	r8, r6, #18
   2e276:	str	r3, [sp, #24]
   2e278:	ldr	r3, [sp, #124]	; 0x7c
   2e27a:	str	r3, [sp, #28]
   2e27c:	ldr	r3, [pc, #236]	; (2e36c <btrfs_insert_inode_extref@@Base+0x11c>)
   2e27e:	ldr	r3, [r2, r3]
   2e280:	ldr	r3, [r3, #0]
   2e282:	str	r3, [sp, #60]	; 0x3c
   2e284:	mov.w	r3, #0
   2e288:	ldrd	r2, r3, [sp, #104]	; 0x68
   2e28c:	strd	r2, r3, [sp, #40]	; 0x28
   2e290:	mov	r2, r6
   2e292:	movs	r3, #13
   2e294:	strb.w	r3, [sp, #48]	; 0x30
   2e298:	bl	17afa <crc32c_le@@Base>
   2e29c:	str.w	fp, [sp, #53]	; 0x35
   2e2a0:	str.w	r0, [sp, #49]	; 0x31
   2e2a4:	bl	18550 <btrfs_alloc_path@@Base>
   2e2a8:	mov	r4, r0
   2e2aa:	cmp	r0, #0
   2e2ac:	beq.n	2e358 <btrfs_insert_inode_extref@@Base+0x108>
   2e2ae:	movs	r3, #1
   2e2b0:	mov	r2, r0
   2e2b2:	str	r3, [sp, #4]
   2e2b4:	mov	r0, r5
   2e2b6:	add	r3, sp, #36	; 0x24
   2e2b8:	mov	r1, r9
   2e2ba:	str	r3, [sp, #0]
   2e2bc:	add	r3, sp, #40	; 0x28
   2e2be:	str.w	r8, [sp, #36]	; 0x24
   2e2c2:	bl	1b70c <btrfs_insert_empty_items@@Base>
   2e2c6:	cmn.w	r0, #17
   2e2ca:	mov	r5, r0
   2e2cc:	bne.n	2e33a <btrfs_insert_inode_extref@@Base+0xea>
   2e2ce:	strd	r6, fp, [sp, #4]
   2e2d2:	mov	r2, sl
   2e2d4:	ldr	r3, [sp, #20]
   2e2d6:	mov	r0, r4
   2e2d8:	str	r7, [sp, #0]
   2e2da:	bl	2de50 <btrfs_add_corrupt_extent_record@@Base+0x168>
   2e2de:	mov	fp, r0
   2e2e0:	cbnz	r0, 2e33e <btrfs_insert_inode_extref@@Base+0xee>
   2e2e2:	mov	r2, r8
   2e2e4:	mov	r1, r4
   2e2e6:	mov	r0, r9
   2e2e8:	mov	r5, fp
   2e2ea:	bl	1a730 <btrfs_extend_item@@Base>
   2e2ee:	ldr	r3, [r4, #0]
   2e2f0:	movs	r2, #25
   2e2f2:	ldr	r1, [r4, #32]
   2e2f4:	rsb	r8, r8, #101	; 0x65
   2e2f8:	adds	r3, #96	; 0x60
   2e2fa:	mla	r1, r2, r1, r3
   2e2fe:	ldr.w	r2, [r1, #118]	; 0x76
   2e302:	add	r8, r2
   2e304:	ldr.w	r2, [r1, #122]	; 0x7a
   2e308:	ldr	r1, [sp, #24]
   2e30a:	add	r2, r8
   2e30c:	add	r3, r2
   2e30e:	strh	r6, [r3, #16]
   2e310:	ldr	r3, [r4, #0]
   2e312:	add	r3, r2
   2e314:	str	r1, [r3, #104]	; 0x68
   2e316:	ldr	r1, [sp, #28]
   2e318:	str	r1, [r3, #108]	; 0x6c
   2e31a:	ldr	r3, [r4, #0]
   2e31c:	ldr	r1, [sp, #20]
   2e31e:	add	r3, r2
   2e320:	adds	r2, #18
   2e322:	str.w	sl, [r3, #96]	; 0x60
   2e326:	str	r1, [r3, #100]	; 0x64
   2e328:	mov	r3, r6
   2e32a:	ldr	r0, [r4, #0]
   2e32c:	mov	r1, r7
   2e32e:	bl	17a30 <write_extent_buffer@@Base>
   2e332:	ldr	r0, [r4, #0]
   2e334:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   2e338:	b.n	2e33e <btrfs_insert_inode_extref@@Base+0xee>
   2e33a:	cmp	r0, #0
   2e33c:	bge.n	2e2ee <btrfs_insert_inode_extref@@Base+0x9e>
   2e33e:	mov	r0, r4
   2e340:	bl	1857e <btrfs_free_path@@Base>
   2e344:	ldr	r2, [pc, #40]	; (2e370 <btrfs_insert_inode_extref@@Base+0x120>)
   2e346:	ldr	r3, [pc, #36]	; (2e36c <btrfs_insert_inode_extref@@Base+0x11c>)
   2e348:	add	r2, pc
   2e34a:	ldr	r3, [r2, r3]
   2e34c:	ldr	r2, [r3, #0]
   2e34e:	ldr	r3, [sp, #60]	; 0x3c
   2e350:	eors	r2, r3
   2e352:	beq.n	2e35e <btrfs_insert_inode_extref@@Base+0x10e>
   2e354:	blx	8708 <__stack_chk_fail@plt>
   2e358:	mvn.w	r5, #11
   2e35c:	b.n	2e344 <btrfs_insert_inode_extref@@Base+0xf4>
   2e35e:	mov	r0, r5
   2e360:	add	sp, #68	; 0x44
   2e362:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e366:	nop
   2e368:	ldr	r4, [r2, #48]	; 0x30
   2e36a:	movs	r3, r0
   2e36c:	lsls	r0, r5, #8
   2e36e:	movs	r0, r0
   2e370:	ldr	r0, [r7, #32]
   2e372:	movs	r3, r0

0002e374 <btrfs_insert_inode_ref@@Base>:
   2e374:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e378:	sub	sp, #148	; 0x94
   2e37a:	mov	r6, r3
   2e37c:	mov	r8, r2
   2e37e:	ldr	r3, [sp, #192]	; 0xc0
   2e380:	mov	r9, r0
   2e382:	ldr	r2, [pc, #424]	; (2e52c <btrfs_insert_inode_ref@@Base+0x1b8>)
   2e384:	mov	r7, r1
   2e386:	ldr.w	fp, [sp, #204]	; 0xcc
   2e38a:	str	r3, [sp, #36]	; 0x24
   2e38c:	add	r2, pc
   2e38e:	ldr	r3, [sp, #196]	; 0xc4
   2e390:	str	r3, [sp, #40]	; 0x28
   2e392:	ldr	r3, [sp, #200]	; 0xc8
   2e394:	str	r3, [sp, #24]
   2e396:	ldr	r3, [pc, #408]	; (2e530 <btrfs_insert_inode_ref@@Base+0x1bc>)
   2e398:	add	r3, pc
   2e39a:	str	r3, [sp, #32]
   2e39c:	ldr	r3, [pc, #404]	; (2e534 <btrfs_insert_inode_ref@@Base+0x1c0>)
   2e39e:	ldr	r3, [r2, r3]
   2e3a0:	ldr	r3, [r3, #0]
   2e3a2:	str	r3, [sp, #140]	; 0x8c
   2e3a4:	mov.w	r3, #0
   2e3a8:	add.w	r3, r6, #10
   2e3ac:	str	r3, [sp, #28]
   2e3ae:	ldrd	r3, r4, [sp, #184]	; 0xb8
   2e3b2:	strd	r3, r4, [sp, #56]	; 0x38
   2e3b6:	ldr	r3, [sp, #36]	; 0x24
   2e3b8:	str.w	r3, [sp, #65]	; 0x41
   2e3bc:	ldr	r3, [sp, #40]	; 0x28
   2e3be:	str.w	r3, [sp, #69]	; 0x45
   2e3c2:	movs	r3, #12
   2e3c4:	strb.w	r3, [sp, #64]	; 0x40
   2e3c8:	bl	18550 <btrfs_alloc_path@@Base>
   2e3cc:	mov	r4, r0
   2e3ce:	cmp	r0, #0
   2e3d0:	beq.w	2e51e <btrfs_insert_inode_ref@@Base+0x1aa>
   2e3d4:	ldr	r3, [sp, #28]
   2e3d6:	mov	r2, r0
   2e3d8:	add.w	sl, sp, #52	; 0x34
   2e3dc:	mov	r1, r7
   2e3de:	mov	r0, r9
   2e3e0:	str.w	sl, [sp]
   2e3e4:	str	r3, [sp, #52]	; 0x34
   2e3e6:	movs	r3, #1
   2e3e8:	str	r3, [sp, #4]
   2e3ea:	add	r3, sp, #56	; 0x38
   2e3ec:	bl	1b70c <btrfs_insert_empty_items@@Base>
   2e3f0:	cmn.w	r0, #17
   2e3f4:	mov	r5, r0
   2e3f6:	bne.n	2e4a6 <btrfs_insert_inode_ref@@Base+0x132>
   2e3f8:	mov	r3, sl
   2e3fa:	mov	r2, r6
   2e3fc:	mov	r1, r8
   2e3fe:	mov	r0, r4
   2e400:	bl	2ddf0 <btrfs_add_corrupt_extent_record@@Base+0x108>
   2e404:	cmp	r0, #0
   2e406:	bne.n	2e4b4 <btrfs_insert_inode_ref@@Base+0x140>
   2e408:	ldr	r2, [r4, #0]
   2e40a:	mov.w	sl, #25
   2e40e:	ldr	r3, [r4, #32]
   2e410:	mov	r1, r4
   2e412:	mov	r0, r7
   2e414:	mla	r3, sl, r3, r2
   2e418:	ldr	r2, [sp, #28]
   2e41a:	ldr.w	r3, [r3, #218]	; 0xda
   2e41e:	str	r3, [sp, #44]	; 0x2c
   2e420:	bl	1a730 <btrfs_extend_item@@Base>
   2e424:	ldr	r3, [sp, #44]	; 0x2c
   2e426:	mov	r5, r0
   2e428:	cbz	r0, 2e46a <btrfs_insert_inode_ref@@Base+0xf6>
   2e42a:	ldr	r2, [sp, #32]
   2e42c:	add	r4, sp, #76	; 0x4c
   2e42e:	ldr	r3, [pc, #264]	; (2e538 <btrfs_insert_inode_ref@@Base+0x1c4>)
   2e430:	movs	r1, #1
   2e432:	ldr	r0, [r2, r3]
   2e434:	ldr	r3, [pc, #260]	; (2e53c <btrfs_insert_inode_ref@@Base+0x1c8>)
   2e436:	ldr	r2, [pc, #264]	; (2e540 <btrfs_insert_inode_ref@@Base+0x1cc>)
   2e438:	add	r3, pc
   2e43a:	str	r3, [sp, #8]
   2e43c:	ldr	r3, [pc, #260]	; (2e544 <btrfs_insert_inode_ref@@Base+0x1d0>)
   2e43e:	add	r2, pc
   2e440:	str	r5, [sp, #12]
   2e442:	add	r3, pc
   2e444:	str	r3, [sp, #4]
   2e446:	movs	r3, #83	; 0x53
   2e448:	str	r3, [sp, #0]
   2e44a:	ldr	r3, [pc, #252]	; (2e548 <btrfs_insert_inode_ref@@Base+0x1d4>)
   2e44c:	ldr	r0, [r0, #0]
   2e44e:	add	r3, pc
   2e450:	blx	8a64 <__fprintf_chk@plt+0x4>
   2e454:	movs	r1, #16
   2e456:	mov	r0, r4
   2e458:	blx	88bc <backtrace@plt>
   2e45c:	movs	r2, #2
   2e45e:	mov	r1, r0
   2e460:	mov	r0, r4
   2e462:	blx	8bcc <backtrace_symbols_fd@plt>
   2e466:	blx	8b84 <abort@plt>
   2e46a:	ldr	r2, [r4, #32]
   2e46c:	ldr	r1, [r4, #0]
   2e46e:	mla	r2, sl, r2, r1
   2e472:	ldr.w	r2, [r2, #214]	; 0xd6
   2e476:	add	r3, r2
   2e478:	adds	r3, #101	; 0x65
   2e47a:	str	r3, [sp, #52]	; 0x34
   2e47c:	ldr	r2, [r4, #0]
   2e47e:	mov	r1, r8
   2e480:	add	r2, r3
   2e482:	strh.w	r6, [r2, #104]	; 0x68
   2e486:	ldr	r2, [r4, #0]
   2e488:	add	r3, r2
   2e48a:	ldr	r2, [sp, #24]
   2e48c:	str.w	fp, [r3, #100]	; 0x64
   2e490:	str	r2, [r3, #96]	; 0x60
   2e492:	mov	r3, r6
   2e494:	ldr	r2, [sp, #52]	; 0x34
   2e496:	ldr	r0, [r4, #0]
   2e498:	adds	r2, #10
   2e49a:	bl	17a30 <write_extent_buffer@@Base>
   2e49e:	ldr	r0, [r4, #0]
   2e4a0:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   2e4a4:	b.n	2e4b4 <btrfs_insert_inode_ref@@Base+0x140>
   2e4a6:	cmp	r0, #0
   2e4a8:	bge.n	2e50e <btrfs_insert_inode_ref@@Base+0x19a>
   2e4aa:	cmn.w	r0, #75	; 0x4b
   2e4ae:	it	eq
   2e4b0:	mvneq.w	r5, #30
   2e4b4:	mov	r0, r4
   2e4b6:	bl	1857e <btrfs_free_path@@Base>
   2e4ba:	cmn.w	r5, #31
   2e4be:	bne.n	2e4fa <btrfs_insert_inode_ref@@Base+0x186>
   2e4c0:	ldr.w	r3, [r7, #464]	; 0x1d0
   2e4c4:	ldr.w	r3, [r3, #308]	; 0x134
   2e4c8:	ldr.w	r1, [r3, #188]	; 0xbc
   2e4cc:	movs	r3, #0
   2e4ce:	and.w	r2, r1, #64	; 0x40
   2e4d2:	orrs	r3, r2
   2e4d4:	beq.n	2e4fa <btrfs_insert_inode_ref@@Base+0x186>
   2e4d6:	ldr	r3, [sp, #24]
   2e4d8:	mov	r2, r8
   2e4da:	mov	r1, r7
   2e4dc:	mov	r0, r9
   2e4de:	strd	r3, fp, [sp, #16]
   2e4e2:	ldr	r3, [sp, #36]	; 0x24
   2e4e4:	str	r3, [sp, #8]
   2e4e6:	ldr	r3, [sp, #40]	; 0x28
   2e4e8:	str	r3, [sp, #12]
   2e4ea:	ldrd	r3, r4, [sp, #184]	; 0xb8
   2e4ee:	strd	r3, r4, [sp]
   2e4f2:	mov	r3, r6
   2e4f4:	bl	2e250 <btrfs_insert_inode_extref@@Base>
   2e4f8:	mov	r5, r0
   2e4fa:	ldr	r2, [pc, #80]	; (2e54c <btrfs_insert_inode_ref@@Base+0x1d8>)
   2e4fc:	ldr	r3, [pc, #52]	; (2e534 <btrfs_insert_inode_ref@@Base+0x1c0>)
   2e4fe:	add	r2, pc
   2e500:	ldr	r3, [r2, r3]
   2e502:	ldr	r2, [r3, #0]
   2e504:	ldr	r3, [sp, #140]	; 0x8c
   2e506:	eors	r2, r3
   2e508:	beq.n	2e524 <btrfs_insert_inode_ref@@Base+0x1b0>
   2e50a:	blx	8708 <__stack_chk_fail@plt>
   2e50e:	ldr	r3, [r4, #32]
   2e510:	movs	r1, #25
   2e512:	ldr	r2, [r4, #0]
   2e514:	mla	r3, r1, r3, r2
   2e518:	ldr.w	r3, [r3, #214]	; 0xd6
   2e51c:	b.n	2e478 <btrfs_insert_inode_ref@@Base+0x104>
   2e51e:	mvn.w	r5, #11
   2e522:	b.n	2e4fa <btrfs_insert_inode_ref@@Base+0x186>
   2e524:	mov	r0, r5
   2e526:	add	sp, #148	; 0x94
   2e528:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e52c:	ldr	r4, [r6, #28]
   2e52e:	movs	r3, r0
   2e530:	ldr	r0, [r5, #28]
   2e532:	movs	r3, r0
   2e534:	lsls	r0, r5, #8
   2e536:	movs	r0, r0
   2e538:	lsls	r0, r7, #8
   2e53a:	movs	r0, r0
   2e53c:	stmia	r0!, {r2, r3, r5, r7}
   2e53e:	movs	r0, r0
   2e540:	rev16	r4, r4
   2e542:	movs	r0, r0
   2e544:	cmp	r5, #249	; 0xf9
   2e546:	movs	r1, r0
   2e548:	cmp	r5, #224	; 0xe0
   2e54a:	movs	r1, r0
   2e54c:	ldr	r2, [r0, #8]
   2e54e:	movs	r3, r0

0002e550 <btrfs_del_inode_ref@@Base>:
   2e550:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e554:	sub	sp, #76	; 0x4c
   2e556:	mov	r8, r3
   2e558:	mov	r9, r2
   2e55a:	ldr	r3, [sp, #120]	; 0x78
   2e55c:	mov	r7, r0
   2e55e:	ldr	r2, [pc, #356]	; (2e6c4 <btrfs_del_inode_ref@@Base+0x174>)
   2e560:	mov	r6, r1
   2e562:	ldr.w	sl, [sp, #128]	; 0x80
   2e566:	str	r3, [sp, #32]
   2e568:	add	r2, pc
   2e56a:	ldr	r3, [sp, #124]	; 0x7c
   2e56c:	str	r3, [sp, #36]	; 0x24
   2e56e:	ldr	r3, [pc, #344]	; (2e6c8 <btrfs_del_inode_ref@@Base+0x178>)
   2e570:	ldr	r3, [r2, r3]
   2e572:	ldr	r3, [r3, #0]
   2e574:	str	r3, [sp, #68]	; 0x44
   2e576:	mov.w	r3, #0
   2e57a:	ldrd	r3, r4, [sp, #112]	; 0x70
   2e57e:	strd	r3, r4, [sp, #48]	; 0x30
   2e582:	ldr	r3, [sp, #32]
   2e584:	str.w	r3, [sp, #57]	; 0x39
   2e588:	ldr	r3, [sp, #36]	; 0x24
   2e58a:	str.w	r3, [sp, #61]	; 0x3d
   2e58e:	movs	r3, #12
   2e590:	strb.w	r3, [sp, #56]	; 0x38
   2e594:	bl	18550 <btrfs_alloc_path@@Base>
   2e598:	mov	r5, r0
   2e59a:	cmp	r0, #0
   2e59c:	beq.w	2e6b6 <btrfs_del_inode_ref@@Base+0x166>
   2e5a0:	mov.w	r3, #4294967295	; 0xffffffff
   2e5a4:	movs	r2, #1
   2e5a6:	mov	r1, r6
   2e5a8:	strd	r3, r2, [sp]
   2e5ac:	mov	r3, r0
   2e5ae:	add	r2, sp, #48	; 0x30
   2e5b0:	mov	r0, r7
   2e5b2:	bl	1a93c <btrfs_search_slot@@Base>
   2e5b6:	subs	r4, r0, #0
   2e5b8:	ble.n	2e61a <btrfs_del_inode_ref@@Base+0xca>
   2e5ba:	mov.w	fp, #1
   2e5be:	mvn.w	r4, #1
   2e5c2:	mov	r0, r5
   2e5c4:	bl	1857e <btrfs_free_path@@Base>
   2e5c8:	cmp.w	fp, #0
   2e5cc:	beq.n	2e606 <btrfs_del_inode_ref@@Base+0xb6>
   2e5ce:	ldr.w	r3, [r6, #464]	; 0x1d0
   2e5d2:	ldr.w	r3, [r3, #308]	; 0x134
   2e5d6:	ldr.w	r1, [r3, #188]	; 0xbc
   2e5da:	movs	r3, #0
   2e5dc:	and.w	r2, r1, #64	; 0x40
   2e5e0:	orrs	r3, r2
   2e5e2:	beq.n	2e606 <btrfs_del_inode_ref@@Base+0xb6>
   2e5e4:	ldr	r3, [sp, #32]
   2e5e6:	mov	r2, r9
   2e5e8:	mov	r1, r6
   2e5ea:	mov	r0, r7
   2e5ec:	str.w	sl, [sp, #16]
   2e5f0:	str	r3, [sp, #8]
   2e5f2:	ldr	r3, [sp, #36]	; 0x24
   2e5f4:	str	r3, [sp, #12]
   2e5f6:	ldrd	r3, r4, [sp, #112]	; 0x70
   2e5fa:	strd	r3, r4, [sp]
   2e5fe:	mov	r3, r8
   2e600:	bl	2e118 <btrfs_del_inode_extref@@Base>
   2e604:	mov	r4, r0
   2e606:	ldr	r2, [pc, #196]	; (2e6cc <btrfs_del_inode_ref@@Base+0x17c>)
   2e608:	ldr	r3, [pc, #188]	; (2e6c8 <btrfs_del_inode_ref@@Base+0x178>)
   2e60a:	add	r2, pc
   2e60c:	ldr	r3, [r2, r3]
   2e60e:	ldr	r2, [r3, #0]
   2e610:	ldr	r3, [sp, #68]	; 0x44
   2e612:	eors	r2, r3
   2e614:	beq.n	2e6bc <btrfs_del_inode_ref@@Base+0x16c>
   2e616:	blx	8708 <__stack_chk_fail@plt>
   2e61a:	bne.n	2e6b0 <btrfs_del_inode_ref@@Base+0x160>
   2e61c:	add	r3, sp, #44	; 0x2c
   2e61e:	mov	r2, r8
   2e620:	mov	r1, r9
   2e622:	mov	r0, r5
   2e624:	bl	2ddf0 <btrfs_add_corrupt_extent_record@@Base+0x108>
   2e628:	cmp	r0, #0
   2e62a:	beq.n	2e5ba <btrfs_del_inode_ref@@Base+0x6a>
   2e62c:	ldr	r0, [r5, #0]
   2e62e:	movs	r2, #25
   2e630:	ldr	r3, [r5, #32]
   2e632:	add.w	ip, r0, #96	; 0x60
   2e636:	mla	r3, r2, r3, ip
   2e63a:	ldr.w	r3, [r3, #122]	; 0x7a
   2e63e:	str	r3, [sp, #28]
   2e640:	cmp.w	sl, #0
   2e644:	beq.n	2e656 <btrfs_del_inode_ref@@Base+0x106>
   2e646:	ldr	r3, [sp, #44]	; 0x2c
   2e648:	add.w	r1, ip, r3
   2e64c:	ldr.w	r2, [ip, r3]
   2e650:	ldr	r3, [r1, #4]
   2e652:	strd	r2, r3, [sl]
   2e656:	ldr	r2, [sp, #28]
   2e658:	add.w	fp, r8, #10
   2e65c:	ldr	r3, [r5, #32]
   2e65e:	cmp	fp, r2
   2e660:	bne.n	2e676 <btrfs_del_inode_ref@@Base+0x126>
   2e662:	movs	r2, #1
   2e664:	mov	r1, r6
   2e666:	str	r2, [sp, #0]
   2e668:	mov	r0, r7
   2e66a:	mov	r2, r5
   2e66c:	mov	fp, r4
   2e66e:	bl	1baf8 <btrfs_del_items@@Base>
   2e672:	mov	r4, r0
   2e674:	b.n	2e5c2 <btrfs_del_inode_ref@@Base+0x72>
   2e676:	mov.w	lr, #25
   2e67a:	ldr	r1, [sp, #44]	; 0x2c
   2e67c:	mla	r3, lr, r3, ip
   2e680:	add.w	r2, fp, r1
   2e684:	rsb	lr, r2, #101	; 0x65
   2e688:	ldr.w	ip, [r3, #118]	; 0x76
   2e68c:	ldr	r3, [sp, #28]
   2e68e:	add	r3, lr
   2e690:	add	r3, ip
   2e692:	bl	17a8c <memmove_extent_buffer@@Base>
   2e696:	ldr	r2, [sp, #28]
   2e698:	movs	r3, #1
   2e69a:	mov	r1, r5
   2e69c:	sub.w	r2, r2, fp
   2e6a0:	mov	r0, r6
   2e6a2:	bl	1a57c <btrfs_truncate_item@@Base>
   2e6a6:	ldr	r0, [r5, #0]
   2e6a8:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   2e6ac:	mov	fp, r4
   2e6ae:	b.n	2e5c2 <btrfs_del_inode_ref@@Base+0x72>
   2e6b0:	mov.w	fp, #0
   2e6b4:	b.n	2e5c2 <btrfs_del_inode_ref@@Base+0x72>
   2e6b6:	mvn.w	r4, #11
   2e6ba:	b.n	2e606 <btrfs_del_inode_ref@@Base+0xb6>
   2e6bc:	mov	r0, r4
   2e6be:	add	sp, #76	; 0x4c
   2e6c0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e6c4:	ldr	r0, [r3, #0]
   2e6c6:	movs	r3, r0
   2e6c8:	lsls	r0, r5, #8
   2e6ca:	movs	r0, r0
   2e6cc:	str	r6, [r6, #116]	; 0x74
   2e6ce:	movs	r3, r0
   2e6d0:	ldr	r2, [pc, #60]	; (2e710 <btrfs_del_inode_ref@@Base+0x1c0>)
   2e6d2:	movs	r1, #16
   2e6d4:	ldr	r3, [pc, #60]	; (2e714 <btrfs_del_inode_ref@@Base+0x1c4>)
   2e6d6:	push	{r4, lr}
   2e6d8:	add	r2, pc
   2e6da:	sub	sp, #72	; 0x48
   2e6dc:	add	r4, sp, #4
   2e6de:	ldr	r3, [r2, r3]
   2e6e0:	mov	r0, r4
   2e6e2:	ldr	r3, [r3, #0]
   2e6e4:	str	r3, [sp, #68]	; 0x44
   2e6e6:	mov.w	r3, #0
   2e6ea:	blx	88bc <backtrace@plt>
   2e6ee:	movs	r2, #2
   2e6f0:	mov	r1, r0
   2e6f2:	mov	r0, r4
   2e6f4:	blx	8bcc <backtrace_symbols_fd@plt>
   2e6f8:	ldr	r2, [pc, #28]	; (2e718 <btrfs_del_inode_ref@@Base+0x1c8>)
   2e6fa:	ldr	r3, [pc, #24]	; (2e714 <btrfs_del_inode_ref@@Base+0x1c4>)
   2e6fc:	add	r2, pc
   2e6fe:	ldr	r3, [r2, r3]
   2e700:	ldr	r2, [r3, #0]
   2e702:	ldr	r3, [sp, #68]	; 0x44
   2e704:	eors	r2, r3
   2e706:	beq.n	2e70c <btrfs_del_inode_ref@@Base+0x1bc>
   2e708:	blx	8708 <__stack_chk_fail@plt>
   2e70c:	add	sp, #72	; 0x48
   2e70e:	pop	{r4, pc}
   2e710:	str	r0, [r5, #104]	; 0x68
   2e712:	movs	r3, r0
   2e714:	lsls	r0, r5, #8
   2e716:	movs	r0, r0
   2e718:	str	r4, [r0, #104]	; 0x68
   2e71a:	movs	r3, r0
   2e71c:	push	{r4, lr}
   2e71e:	mov	r4, r1
   2e720:	ldr	r1, [pc, #84]	; (2e778 <btrfs_del_inode_ref@@Base+0x228>)
   2e722:	sub	sp, #24
   2e724:	ldr	r3, [pc, #84]	; (2e77c <btrfs_del_inode_ref@@Base+0x22c>)
   2e726:	add	r1, pc
   2e728:	ldr	r3, [r1, r3]
   2e72a:	mov	r1, sp
   2e72c:	ldr	r3, [r3, #0]
   2e72e:	str	r3, [sp, #20]
   2e730:	mov.w	r3, #0
   2e734:	movs	r3, #25
   2e736:	muls	r2, r3
   2e738:	movs	r3, #17
   2e73a:	adds	r2, #101	; 0x65
   2e73c:	bl	17a1a <read_extent_buffer@@Base>
   2e740:	ldr.w	r3, [sp, #13]
   2e744:	ldr.w	r2, [sp, #9]
   2e748:	str.w	r3, [r4, #13]
   2e74c:	ldrb.w	r3, [sp, #8]
   2e750:	str.w	r2, [r4, #9]
   2e754:	ldr	r2, [pc, #40]	; (2e780 <btrfs_del_inode_ref@@Base+0x230>)
   2e756:	strb	r3, [r4, #8]
   2e758:	ldr	r3, [sp, #0]
   2e75a:	add	r2, pc
   2e75c:	str	r3, [r4, #0]
   2e75e:	ldr	r3, [sp, #4]
   2e760:	str	r3, [r4, #4]
   2e762:	ldr	r3, [pc, #24]	; (2e77c <btrfs_del_inode_ref@@Base+0x22c>)
   2e764:	ldr	r3, [r2, r3]
   2e766:	ldr	r2, [r3, #0]
   2e768:	ldr	r3, [sp, #20]
   2e76a:	eors	r2, r3
   2e76c:	beq.n	2e772 <btrfs_del_inode_ref@@Base+0x222>
   2e76e:	blx	8708 <__stack_chk_fail@plt>
   2e772:	add	sp, #24
   2e774:	pop	{r4, pc}
   2e776:	nop
   2e778:	str	r2, [r3, #100]	; 0x64
   2e77a:	movs	r3, r0
   2e77c:	lsls	r0, r5, #8
   2e77e:	movs	r0, r0
   2e780:	str	r6, [r4, #96]	; 0x60
   2e782:	movs	r3, r0
   2e784:	push	{r0, r1, r2, r3, r4, lr}
   2e786:	ldr	r4, [pc, #40]	; (2e7b0 <btrfs_del_inode_ref@@Base+0x260>)
   2e788:	ldr	r5, [pc, #40]	; (2e7b4 <btrfs_del_inode_ref@@Base+0x264>)
   2e78a:	add	r4, pc
   2e78c:	ldr	r4, [r4, r5]
   2e78e:	strd	r2, r1, [sp]
   2e792:	movs	r1, #1
   2e794:	strd	r0, r3, [sp, #8]
   2e798:	ldr	r2, [pc, #28]	; (2e7b8 <btrfs_del_inode_ref@@Base+0x268>)
   2e79a:	ldr	r3, [pc, #32]	; (2e7bc <btrfs_del_inode_ref@@Base+0x26c>)
   2e79c:	add	r2, pc
   2e79e:	ldr	r0, [r4, #0]
   2e7a0:	add	r3, pc
   2e7a2:	blx	8a64 <__fprintf_chk@plt+0x4>
   2e7a6:	bl	2e6d0 <btrfs_del_inode_ref@@Base+0x180>
   2e7aa:	blx	8b84 <abort@plt>
   2e7ae:	nop
   2e7b0:	str	r6, [r6, #92]	; 0x5c
   2e7b2:	movs	r3, r0
   2e7b4:	lsls	r0, r7, #8
   2e7b6:	movs	r0, r0
   2e7b8:			; <UNDEFINED> instruction: 0xb706
   2e7ba:	movs	r0, r0
   2e7bc:	cmp	r2, #178	; 0xb2
   2e7be:	movs	r1, r0
   2e7c0:	push	{r3, lr}
   2e7c2:	cbz	r3, 2e7c8 <btrfs_del_inode_ref@@Base+0x278>
   2e7c4:	bl	2e784 <btrfs_del_inode_ref@@Base+0x234>
   2e7c8:	pop	{r3, pc}

0002e7ca <btrfs_insert_file_extent@@Base>:
   2e7ca:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e7ce:	sub	sp, #60	; 0x3c
   2e7d0:	mov	r8, r3
   2e7d2:	mov	r6, r1
   2e7d4:	ldr	r3, [sp, #96]	; 0x60
   2e7d6:	mov	r5, r0
   2e7d8:	str	r2, [sp, #16]
   2e7da:	movs	r0, #0
   2e7dc:	ldr	r2, [pc, #312]	; (2e918 <btrfs_insert_file_extent@@Base+0x14e>)
   2e7de:	str	r3, [sp, #12]
   2e7e0:	ldr	r3, [pc, #312]	; (2e91c <btrfs_insert_file_extent@@Base+0x152>)
   2e7e2:	add	r2, pc
   2e7e4:	ldr	r1, [sp, #100]	; 0x64
   2e7e6:	ldrd	r7, fp, [sp, #112]	; 0x70
   2e7ea:	ldr	r3, [r2, r3]
   2e7ec:	ldrd	sl, r9, [sp, #120]	; 0x78
   2e7f0:	ldr	r3, [r3, #0]
   2e7f2:	str	r3, [sp, #52]	; 0x34
   2e7f4:	mov.w	r3, #0
   2e7f8:	ldr.w	r3, [r6, #464]	; 0x1d0
   2e7fc:	ldr.w	r3, [r3, #308]	; 0x134
   2e800:	ldr.w	ip, [r3, #188]	; 0xbc
   2e804:	mov	r3, r0
   2e806:	and.w	r2, ip, #512	; 0x200
   2e80a:	orrs	r3, r2
   2e80c:	ldrd	r3, r4, [sp, #104]	; 0x68
   2e810:	beq.n	2e81a <btrfs_insert_file_extent@@Base+0x50>
   2e812:	orrs	r3, r4
   2e814:	bne.n	2e822 <btrfs_insert_file_extent@@Base+0x58>
   2e816:	mov	r6, r0
   2e818:	b.n	2e8f4 <btrfs_insert_file_extent@@Base+0x12a>
   2e81a:	orrs	r3, r4
   2e81c:	itt	eq
   2e81e:	moveq	r7, r0
   2e820:	moveq	fp, r7
   2e822:	str	r1, [sp, #20]
   2e824:	bl	18550 <btrfs_alloc_path@@Base>
   2e828:	mov	r4, r0
   2e82a:	cmp	r0, #0
   2e82c:	beq.n	2e908 <btrfs_insert_file_extent@@Base+0x13e>
   2e82e:	ldr	r3, [sp, #16]
   2e830:	mov	r2, r0
   2e832:	ldr	r1, [sp, #20]
   2e834:	mov	r0, r5
   2e836:	strd	r3, r8, [sp, #32]
   2e83a:	mov.w	r8, #1
   2e83e:	ldr	r3, [sp, #12]
   2e840:	str.w	r1, [sp, #45]	; 0x2d
   2e844:	mov	r1, r6
   2e846:	str.w	r8, [sp, #4]
   2e84a:	str.w	r3, [sp, #41]	; 0x29
   2e84e:	movs	r3, #108	; 0x6c
   2e850:	strb.w	r3, [sp, #40]	; 0x28
   2e854:	movs	r3, #53	; 0x35
   2e856:	str	r3, [sp, #28]
   2e858:	add	r3, sp, #28
   2e85a:	str	r3, [sp, #0]
   2e85c:	add	r3, sp, #32
   2e85e:	bl	1b70c <btrfs_insert_empty_items@@Base>
   2e862:	subs	r6, r0, #0
   2e864:	blt.n	2e8ee <btrfs_insert_file_extent@@Base+0x124>
   2e866:	ldr	r1, [pc, #184]	; (2e920 <btrfs_insert_file_extent@@Base+0x156>)
   2e868:	mov	r3, r6
   2e86a:	ldr	r0, [pc, #184]	; (2e924 <btrfs_insert_file_extent@@Base+0x15a>)
   2e86c:	movs	r2, #67	; 0x43
   2e86e:	add	r1, pc
   2e870:	add	r0, pc
   2e872:	bl	2e7c0 <btrfs_del_inode_ref@@Base+0x270>
   2e876:	ldr	r0, [r4, #0]
   2e878:	ldr	r3, [r4, #32]
   2e87a:	movs	r2, #25
   2e87c:	add.w	ip, r0, #96	; 0x60
   2e880:	mla	r3, r2, r3, ip
   2e884:	ldr	r2, [sp, #104]	; 0x68
   2e886:	ldr.w	r1, [r3, #118]	; 0x76
   2e88a:	adds	r1, #101	; 0x65
   2e88c:	add.w	r3, ip, r1
   2e890:	str.w	r2, [r3, #21]
   2e894:	ldr	r2, [sp, #108]	; 0x6c
   2e896:	str.w	r7, [r3, #29]
   2e89a:	str.w	fp, [r3, #33]	; 0x21
   2e89e:	str.w	r2, [r3, #25]
   2e8a2:	movs	r2, #0
   2e8a4:	str.w	sl, [r3, #45]	; 0x2d
   2e8a8:	strb.w	r2, [r3, #37]	; 0x25
   2e8ac:	strb.w	r2, [r3, #38]	; 0x26
   2e8b0:	strb.w	r2, [r3, #39]	; 0x27
   2e8b4:	strb.w	r2, [r3, #40]	; 0x28
   2e8b8:	strb.w	r2, [r3, #41]	; 0x29
   2e8bc:	strb.w	r2, [r3, #42]	; 0x2a
   2e8c0:	strb.w	r2, [r3, #43]	; 0x2b
   2e8c4:	strb.w	r2, [r3, #44]	; 0x2c
   2e8c8:	str.w	r9, [r3, #49]	; 0x31
   2e8cc:	str.w	sl, [r3, #8]
   2e8d0:	str.w	r9, [r3, #12]
   2e8d4:	ldrd	r7, r5, [r5, #8]
   2e8d8:	str.w	r7, [ip, r1]
   2e8dc:	str	r5, [r3, #4]
   2e8de:	strb.w	r8, [r3, #20]
   2e8e2:	strb	r2, [r3, #16]
   2e8e4:	strb	r2, [r3, #17]
   2e8e6:	strb	r2, [r3, #18]
   2e8e8:	strb	r2, [r3, #19]
   2e8ea:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   2e8ee:	mov	r0, r4
   2e8f0:	bl	1857e <btrfs_free_path@@Base>
   2e8f4:	ldr	r2, [pc, #48]	; (2e928 <btrfs_insert_file_extent@@Base+0x15e>)
   2e8f6:	ldr	r3, [pc, #36]	; (2e91c <btrfs_insert_file_extent@@Base+0x152>)
   2e8f8:	add	r2, pc
   2e8fa:	ldr	r3, [r2, r3]
   2e8fc:	ldr	r2, [r3, #0]
   2e8fe:	ldr	r3, [sp, #52]	; 0x34
   2e900:	eors	r2, r3
   2e902:	beq.n	2e90e <btrfs_insert_file_extent@@Base+0x144>
   2e904:	blx	8708 <__stack_chk_fail@plt>
   2e908:	mvn.w	r6, #11
   2e90c:	b.n	2e8f4 <btrfs_insert_file_extent@@Base+0x12a>
   2e90e:	mov	r0, r6
   2e910:	add	sp, #60	; 0x3c
   2e912:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e916:	nop
   2e918:	str	r6, [r3, #88]	; 0x58
   2e91a:	movs	r3, r0
   2e91c:	lsls	r0, r5, #8
   2e91e:	movs	r0, r0
   2e920:	cmp	r2, #6
   2e922:	movs	r1, r0
   2e924:	pop	{r2, r4, r5, r6}
   2e926:	movs	r0, r0
   2e928:	str	r0, [r1, #72]	; 0x48
   2e92a:	movs	r3, r0

0002e92c <btrfs_insert_inline_extent@@Base>:
   2e92c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e930:	mov	sl, r2
   2e932:	ldr	r2, [pc, #208]	; (2ea04 <btrfs_insert_inline_extent@@Base+0xd8>)
   2e934:	mov	r4, r3
   2e936:	ldr	r3, [pc, #208]	; (2ea08 <btrfs_insert_inline_extent@@Base+0xdc>)
   2e938:	sub	sp, #52	; 0x34
   2e93a:	add	r2, pc
   2e93c:	mov	r9, r0
   2e93e:	str	r1, [sp, #12]
   2e940:	ldr	r3, [r2, r3]
   2e942:	ldrd	r8, fp, [sp, #88]	; 0x58
   2e946:	ldrd	r7, r6, [sp, #96]	; 0x60
   2e94a:	ldr	r3, [r3, #0]
   2e94c:	str	r3, [sp, #44]	; 0x2c
   2e94e:	mov.w	r3, #0
   2e952:	bl	18550 <btrfs_alloc_path@@Base>
   2e956:	mov	r5, r0
   2e958:	cmp	r0, #0
   2e95a:	beq.n	2e9f4 <btrfs_insert_inline_extent@@Base+0xc8>
   2e95c:	movs	r3, #108	; 0x6c
   2e95e:	mov	r2, r0
   2e960:	strb.w	r3, [sp, #32]
   2e964:	mov	r0, r9
   2e966:	add.w	r3, r6, #21
   2e96a:	ldr	r1, [sp, #12]
   2e96c:	str	r3, [sp, #20]
   2e96e:	movs	r3, #1
   2e970:	str	r3, [sp, #4]
   2e972:	add	r3, sp, #20
   2e974:	str	r3, [sp, #0]
   2e976:	add	r3, sp, #24
   2e978:	strd	sl, r4, [sp, #24]
   2e97c:	str.w	r8, [sp, #33]	; 0x21
   2e980:	str.w	fp, [sp, #37]	; 0x25
   2e984:	bl	1b70c <btrfs_insert_empty_items@@Base>
   2e988:	mov	r4, r0
   2e98a:	cbnz	r0, 2e9da <btrfs_insert_inline_extent@@Base+0xae>
   2e98c:	ldr	r0, [r5, #0]
   2e98e:	movs	r2, #25
   2e990:	ldr	r3, [r5, #32]
   2e992:	add.w	r1, r0, #96	; 0x60
   2e996:	ldrd	sl, lr, [r9, #8]
   2e99a:	str	r0, [sp, #12]
   2e99c:	mla	r3, r2, r3, r1
   2e9a0:	ldr.w	ip, [r3, #118]	; 0x76
   2e9a4:	add.w	r2, ip, #101	; 0x65
   2e9a8:	adds	r3, r1, r2
   2e9aa:	str.w	sl, [r1, r2]
   2e9ae:	mov	r1, r7
   2e9b0:	str.w	lr, [r3, #4]
   2e9b4:	strb	r4, [r3, #20]
   2e9b6:	str	r6, [r3, #8]
   2e9b8:	str	r4, [r3, #12]
   2e9ba:	strb	r4, [r3, #16]
   2e9bc:	strb	r4, [r3, #17]
   2e9be:	strb	r4, [r3, #18]
   2e9c0:	strb	r4, [r3, #19]
   2e9c2:	mov	r3, r6
   2e9c4:	ldr.w	r2, [sp, #33]	; 0x21
   2e9c8:	rsb	r2, r2, #122	; 0x7a
   2e9cc:	add	r2, r8
   2e9ce:	add	r2, ip
   2e9d0:	bl	17a30 <write_extent_buffer@@Base>
   2e9d4:	ldr	r0, [sp, #12]
   2e9d6:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   2e9da:	mov	r0, r5
   2e9dc:	bl	1857e <btrfs_free_path@@Base>
   2e9e0:	ldr	r2, [pc, #40]	; (2ea0c <btrfs_insert_inline_extent@@Base+0xe0>)
   2e9e2:	ldr	r3, [pc, #36]	; (2ea08 <btrfs_insert_inline_extent@@Base+0xdc>)
   2e9e4:	add	r2, pc
   2e9e6:	ldr	r3, [r2, r3]
   2e9e8:	ldr	r2, [r3, #0]
   2e9ea:	ldr	r3, [sp, #44]	; 0x2c
   2e9ec:	eors	r2, r3
   2e9ee:	beq.n	2e9fa <btrfs_insert_inline_extent@@Base+0xce>
   2e9f0:	blx	8708 <__stack_chk_fail@plt>
   2e9f4:	mvn.w	r4, #11
   2e9f8:	b.n	2e9e0 <btrfs_insert_inline_extent@@Base+0xb4>
   2e9fa:	mov	r0, r4
   2e9fc:	add	sp, #52	; 0x34
   2e9fe:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ea02:	nop
   2ea04:	str	r6, [r0, #68]	; 0x44
   2ea06:	movs	r3, r0
   2ea08:	lsls	r0, r5, #8
   2ea0a:	movs	r0, r0
   2ea0c:	str	r4, [r3, #56]	; 0x38
   2ea0e:	movs	r3, r0

0002ea10 <btrfs_csum_file_block@@Base>:
   2ea10:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ea14:	mov	fp, r0
   2ea16:	vpush	{d8-d9}
   2ea1a:	mov	r6, r1
   2ea1c:	sub	sp, #140	; 0x8c
   2ea1e:	strd	r2, r3, [sp, #24]
   2ea22:	ldr	r3, [sp, #200]	; 0xc8
   2ea24:	ldr.w	r2, [pc, #1044]	; 2ee3c <btrfs_csum_file_block@@Base+0x42c>
   2ea28:	ldrd	r7, r8, [sp, #192]	; 0xc0
   2ea2c:	vmov	s18, r3
   2ea30:	ldr.w	r3, [pc, #1036]	; 2ee40 <btrfs_csum_file_block@@Base+0x430>
   2ea34:	add	r2, pc
   2ea36:	add	r3, pc
   2ea38:	str	r3, [sp, #36]	; 0x24
   2ea3a:	ldr.w	r3, [pc, #1032]	; 2ee44 <btrfs_csum_file_block@@Base+0x434>
   2ea3e:	ldr	r3, [r2, r3]
   2ea40:	ldr	r3, [r3, #0]
   2ea42:	str	r3, [sp, #132]	; 0x84
   2ea44:	mov.w	r3, #0
   2ea48:	ldr.w	r3, [r1, #464]	; 0x1d0
   2ea4c:	ldr.w	r2, [r3, #388]	; 0x184
   2ea50:	ldr.w	r0, [r3, #308]	; 0x134
   2ea54:	vmov	s16, r2
   2ea58:	bl	18510 <btrfs_super_csum_size@@Base>
   2ea5c:	ldr.w	r3, [r6, #464]	; 0x1d0
   2ea60:	ldr.w	r3, [r3, #308]	; 0x134
   2ea64:	ldrh.w	r3, [r3, #196]	; 0xc4
   2ea68:	vmov	s17, r3
   2ea6c:	mov	r5, r0
   2ea6e:	bl	18550 <btrfs_alloc_path@@Base>
   2ea72:	mov	r4, r0
   2ea74:	cmp	r0, #0
   2ea76:	beq.w	2ee2a <btrfs_csum_file_block@@Base+0x41a>
   2ea7a:	mvn.w	r2, #9
   2ea7e:	mov.w	r3, #4294967295	; 0xffffffff
   2ea82:	strd	r2, r3, [sp, #40]	; 0x28
   2ea86:	mov.w	r9, #128	; 0x80
   2ea8a:	ldr.w	r3, [r6, #464]	; 0x1d0
   2ea8e:	str.w	r7, [sp, #49]	; 0x31
   2ea92:	str.w	r8, [sp, #53]	; 0x35
   2ea96:	ldr.w	r0, [r3, #308]	; 0x134
   2ea9a:	strb.w	r9, [sp, #48]	; 0x30
   2ea9e:	bl	18510 <btrfs_super_csum_size@@Base>
   2eaa2:	mvn.w	r2, #9
   2eaa6:	mov.w	r3, #4294967295	; 0xffffffff
   2eaaa:	movs	r1, #1
   2eaac:	strd	r2, r3, [sp, #60]	; 0x3c
   2eab0:	movs	r3, #0
   2eab2:	add	r2, sp, #60	; 0x3c
   2eab4:	strd	r3, r1, [sp]
   2eab8:	mov	r3, r4
   2eaba:	mov	r1, r6
   2eabc:	str.w	r7, [sp, #69]	; 0x45
   2eac0:	str.w	r8, [sp, #73]	; 0x49
   2eac4:	strb.w	r9, [sp, #68]	; 0x44
   2eac8:	mov	sl, r0
   2eaca:	mov	r0, fp
   2eacc:	bl	1a93c <btrfs_search_slot@@Base>
   2ead0:	cmp	r0, #0
   2ead2:	blt.n	2eae2 <btrfs_csum_file_block@@Base+0xd2>
   2ead4:	ldr.w	r9, [r4]
   2ead8:	beq.n	2eb40 <btrfs_csum_file_block@@Base+0x130>
   2eada:	ldr	r2, [r4, #32]
   2eadc:	cbnz	r2, 2eae6 <btrfs_csum_file_block@@Base+0xd6>
   2eade:	mvn.w	r0, #1
   2eae2:	mov	r8, r0
   2eae4:	b.n	2eb5e <btrfs_csum_file_block@@Base+0x14e>
   2eae6:	subs	r2, #1
   2eae8:	add	r1, sp, #80	; 0x50
   2eaea:	mov	r0, r9
   2eaec:	str	r2, [r4, #32]
   2eaee:	bl	2e71c <btrfs_del_inode_ref@@Base+0x1cc>
   2eaf2:	ldrb.w	r3, [sp, #88]	; 0x58
   2eaf6:	cmp	r3, #128	; 0x80
   2eaf8:	bne.n	2eade <btrfs_csum_file_block@@Base+0xce>
   2eafa:	ldr.w	r3, [r6, #464]	; 0x1d0
   2eafe:	ldr.w	r0, [sp, #89]	; 0x59
   2eb02:	ldr.w	r1, [sp, #93]	; 0x5d
   2eb06:	subs	r0, r7, r0
   2eb08:	ldr.w	r2, [r3, #388]	; 0x184
   2eb0c:	sbc.w	r1, r8, r1
   2eb10:	movs	r3, #0
   2eb12:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2eb16:	ldr	r3, [r4, #32]
   2eb18:	movs	r2, #25
   2eb1a:	mla	r3, r2, r3, r9
   2eb1e:	strd	r0, r1, [sp, #16]
   2eb22:	mov	r1, sl
   2eb24:	ldr.w	r0, [r3, #218]	; 0xda
   2eb28:	bl	39698 <btrfs_util_strerror@@Base+0x290>
   2eb2c:	ldrd	r2, r3, [sp, #16]
   2eb30:	asrs	r1, r0, #31
   2eb32:	cmp	r3, r1
   2eb34:	it	eq
   2eb36:	cmpeq	r2, r0
   2eb38:	bcc.n	2eb48 <btrfs_csum_file_block@@Base+0x138>
   2eb3a:	mvn.w	r0, #26
   2eb3e:	b.n	2eae2 <btrfs_csum_file_block@@Base+0xd2>
   2eb40:	movs	r2, #0
   2eb42:	movs	r3, #0
   2eb44:	strd	r2, r3, [sp, #16]
   2eb48:	ldr	r3, [r4, #32]
   2eb4a:	movs	r2, #25
   2eb4c:	mla	r3, r2, r3, r9
   2eb50:	ldr.w	r8, [r3, #214]	; 0xd6
   2eb54:	ldr	r3, [sp, #16]
   2eb56:	add.w	r8, r8, #101	; 0x65
   2eb5a:	mla	r8, sl, r3, r8
   2eb5e:	cmn.w	r8, #4096	; 0x1000
   2eb62:	ldr	r2, [r4, #0]
   2eb64:	bhi.n	2eb90 <btrfs_csum_file_block@@Base+0x180>
   2eb66:	mov	r6, r2
   2eb68:	add	r7, sp, #100	; 0x64
   2eb6a:	vmov	r1, s18
   2eb6e:	ldr	r3, [sp, #204]	; 0xcc
   2eb70:	mov	r2, r7
   2eb72:	vmov	r0, s17
   2eb76:	bl	1c746 <btrfs_csum_data@@Base>
   2eb7a:	mov	r1, r7
   2eb7c:	mov	r3, r5
   2eb7e:	mov	r2, r8
   2eb80:	mov	r0, r6
   2eb82:	movs	r7, #0
   2eb84:	bl	17a30 <write_extent_buffer@@Base>
   2eb88:	ldr	r0, [r4, #0]
   2eb8a:	bl	1dc10 <btrfs_mark_buffer_dirty@@Base>
   2eb8e:	b.n	2ed08 <btrfs_csum_file_block@@Base+0x2f8>
   2eb90:	cmn.w	r8, #27
   2eb94:	ldr	r0, [r4, #32]
   2eb96:	bne.n	2ebfc <btrfs_csum_file_block@@Base+0x1ec>
   2eb98:	mov.w	sl, #25
   2eb9c:	mov	r1, r5
   2eb9e:	mla	r0, sl, r0, r2
   2eba2:	ldr.w	r0, [r0, #218]	; 0xda
   2eba6:	bl	39420 <btrfs_util_strerror@@Base+0x18>
   2ebaa:	ldr.w	r3, [r6, #464]	; 0x1d0
   2ebae:	mov	r1, r5
   2ebb0:	mov	r7, r0
   2ebb2:	ldr.w	r0, [r3, #384]	; 0x180
   2ebb6:	subs	r0, #151	; 0x97
   2ebb8:	bl	39420 <btrfs_util_strerror@@Base+0x18>
   2ebbc:	subs	r3, r0, #1
   2ebbe:	cmp	r7, r3
   2ebc0:	bcs.w	2ed4c <btrfs_csum_file_block@@Base+0x33c>
   2ebc4:	mov	r0, r4
   2ebc6:	mov.w	r8, #1
   2ebca:	bl	18558 <btrfs_release_path@@Base>
   2ebce:	add	r2, sp, #40	; 0x28
   2ebd0:	mov	r3, r4
   2ebd2:	mov	r1, r6
   2ebd4:	mov	r0, fp
   2ebd6:	strd	r5, r8, [sp]
   2ebda:	bl	1a93c <btrfs_search_slot@@Base>
   2ebde:	subs	r7, r0, #0
   2ebe0:	blt.w	2ed08 <btrfs_csum_file_block@@Base+0x2f8>
   2ebe4:	bne.w	2ed52 <btrfs_csum_file_block@@Base+0x342>
   2ebe8:	ldr	r1, [pc, #604]	; (2ee48 <btrfs_csum_file_block@@Base+0x438>)
   2ebea:	mov	r3, r8
   2ebec:	ldr	r0, [pc, #604]	; (2ee4c <btrfs_csum_file_block@@Base+0x43c>)
   2ebee:	movw	r2, #265	; 0x109
   2ebf2:	add	r1, pc
   2ebf4:	adds	r1, #25
   2ebf6:	add	r0, pc
   2ebf8:	bl	2e784 <btrfs_del_inode_ref@@Base+0x234>
   2ebfc:	ldr.w	r3, [r2, #192]	; 0xc0
   2ec00:	subs	r3, #1
   2ec02:	cmp	r3, r0
   2ec04:	bls.w	2ed24 <btrfs_csum_file_block@@Base+0x314>
   2ec08:	adds	r2, r0, #1
   2ec0a:	ldr	r0, [r4, #0]
   2ec0c:	add	r1, sp, #80	; 0x50
   2ec0e:	bl	2e71c <btrfs_del_inode_ref@@Base+0x1cc>
   2ec12:	ldrd	r2, r3, [sp, #80]	; 0x50
   2ec16:	mov.w	r1, #4294967295	; 0xffffffff
   2ec1a:	mvn.w	r0, #9
   2ec1e:	cmp	r3, r1
   2ec20:	it	eq
   2ec22:	cmpeq	r2, r0
   2ec24:	bne.w	2ed3a <btrfs_csum_file_block@@Base+0x32a>
   2ec28:	ldrb.w	r3, [sp, #88]	; 0x58
   2ec2c:	cmp	r3, #128	; 0x80
   2ec2e:	bne.w	2ed3a <btrfs_csum_file_block@@Base+0x32a>
   2ec32:	ldr.w	r7, [sp, #89]	; 0x59
   2ec36:	mov.w	r9, #1
   2ec3a:	ldr.w	r8, [sp, #93]	; 0x5d
   2ec3e:	mov	r0, r4
   2ec40:	bl	18558 <btrfs_release_path@@Base>
   2ec44:	cmp.w	r9, #0
   2ec48:	beq.w	2ee20 <btrfs_csum_file_block@@Base+0x410>
   2ec4c:	ldrd	r0, r1, [sp, #24]
   2ec50:	mov	r3, r8
   2ec52:	ldr.w	r9, [sp, #53]	; 0x35
   2ec56:	mov	r2, r7
   2ec58:	cmp	r1, r8
   2ec5a:	ldr.w	r8, [sp, #49]	; 0x31
   2ec5e:	it	eq
   2ec60:	cmpeq	r0, r7
   2ec62:	mov.w	sl, #0
   2ec66:	itt	cc
   2ec68:	movcc	r2, r0
   2ec6a:	movcc	r3, r1
   2ec6c:	subs.w	r8, r2, r8
   2ec70:	mov	r1, r5
   2ec72:	sbc.w	r9, r3, r9
   2ec76:	ldr.w	r3, [r6, #464]	; 0x1d0
   2ec7a:	ldr.w	r0, [r3, #384]	; 0x180
   2ec7e:	subs	r0, #151	; 0x97
   2ec80:	bl	39420 <btrfs_util_strerror@@Base+0x18>
   2ec84:	vmov	r2, s16
   2ec88:	mov	r3, sl
   2ec8a:	mov	r1, r9
   2ec8c:	subs	r7, r0, #1
   2ec8e:	mov	r0, r8
   2ec90:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2ec94:	mov	r2, r7
   2ec96:	mov	r8, r0
   2ec98:	mov	r9, r1
   2ec9a:	orrs.w	r3, r8, r9
   2ec9e:	itt	eq
   2eca0:	moveq.w	r8, #1
   2eca4:	moveq.w	r9, #0
   2eca8:	cmp	r9, sl
   2ecaa:	it	eq
   2ecac:	cmpeq	r8, r7
   2ecae:	it	cc
   2ecb0:	movcc	r2, r8
   2ecb2:	muls	r2, r5
   2ecb4:	add	r3, sp, #60	; 0x3c
   2ecb6:	str	r2, [sp, #60]	; 0x3c
   2ecb8:	mov.w	r8, #1
   2ecbc:	str	r3, [sp, #0]
   2ecbe:	mov	r2, r4
   2ecc0:	add	r3, sp, #40	; 0x28
   2ecc2:	mov	r1, r6
   2ecc4:	mov	r0, fp
   2ecc6:	str.w	r8, [sp, #4]
   2ecca:	bl	1b70c <btrfs_insert_empty_items@@Base>
   2ecce:	subs	r7, r0, #0
   2ecd0:	blt.n	2ed08 <btrfs_csum_file_block@@Base+0x2f8>
   2ecd2:	beq.w	2ee24 <btrfs_csum_file_block@@Base+0x414>
   2ecd6:	ldr	r3, [pc, #376]	; (2ee50 <btrfs_csum_file_block@@Base+0x440>)
   2ecd8:	mov	r1, r8
   2ecda:	ldr	r2, [sp, #36]	; 0x24
   2ecdc:	ldr	r0, [r2, r3]
   2ecde:	ldr	r3, [pc, #372]	; (2ee54 <btrfs_csum_file_block@@Base+0x444>)
   2ece0:	ldr	r2, [pc, #372]	; (2ee58 <btrfs_csum_file_block@@Base+0x448>)
   2ece2:	add	r3, pc
   2ece4:	str	r3, [sp, #8]
   2ece6:	ldr	r3, [pc, #372]	; (2ee5c <btrfs_csum_file_block@@Base+0x44c>)
   2ece8:	add	r2, pc
   2ecea:	str.w	r8, [sp, #12]
   2ecee:	add	r3, pc
   2ecf0:	adds	r3, #25
   2ecf2:	str	r3, [sp, #4]
   2ecf4:	mov.w	r3, #308	; 0x134
   2ecf8:	str	r3, [sp, #0]
   2ecfa:	ldr	r3, [pc, #356]	; (2ee60 <btrfs_csum_file_block@@Base+0x450>)
   2ecfc:	ldr	r0, [r0, #0]
   2ecfe:	add	r3, pc
   2ed00:	blx	8a64 <__fprintf_chk@plt+0x4>
   2ed04:	bl	2e6d0 <btrfs_del_inode_ref@@Base+0x180>
   2ed08:	mov	r0, r4
   2ed0a:	bl	1857e <btrfs_free_path@@Base>
   2ed0e:	ldr	r2, [pc, #340]	; (2ee64 <btrfs_csum_file_block@@Base+0x454>)
   2ed10:	ldr	r3, [pc, #304]	; (2ee44 <btrfs_csum_file_block@@Base+0x434>)
   2ed12:	add	r2, pc
   2ed14:	ldr	r3, [r2, r3]
   2ed16:	ldr	r2, [r3, #0]
   2ed18:	ldr	r3, [sp, #132]	; 0x84
   2ed1a:	eors	r2, r3
   2ed1c:	beq.w	2ee30 <btrfs_csum_file_block@@Base+0x420>
   2ed20:	blx	8708 <__stack_chk_fail@plt>
   2ed24:	movs	r3, #0
   2ed26:	mov	r1, r4
   2ed28:	strb.w	r3, [r4, #65]	; 0x41
   2ed2c:	ldr.w	r0, [r6, #464]	; 0x1d0
   2ed30:	bl	1bd70 <btrfs_next_sibling_tree_block@@Base>
   2ed34:	cmp	r0, #1
   2ed36:	mov	r2, r0
   2ed38:	bne.n	2ed46 <btrfs_csum_file_block@@Base+0x336>
   2ed3a:	mov.w	r9, #1
   2ed3e:	mov.w	r7, #4294967295	; 0xffffffff
   2ed42:	mov	r8, r7
   2ed44:	b.n	2ec3e <btrfs_csum_file_block@@Base+0x22e>
   2ed46:	cmp	r0, #0
   2ed48:	beq.w	2ec0a <btrfs_csum_file_block@@Base+0x1fa>
   2ed4c:	mov.w	r9, #0
   2ed50:	b.n	2ed3e <btrfs_csum_file_block@@Base+0x32e>
   2ed52:	ldr	r2, [r4, #32]
   2ed54:	cmp	r2, #0
   2ed56:	beq.n	2ed4c <btrfs_csum_file_block@@Base+0x33c>
   2ed58:	ldr	r7, [r4, #0]
   2ed5a:	subs	r2, #1
   2ed5c:	add	r1, sp, #80	; 0x50
   2ed5e:	str	r2, [r4, #32]
   2ed60:	mov	r0, r7
   2ed62:	bl	2e71c <btrfs_del_inode_ref@@Base+0x1cc>
   2ed66:	ldrd	r2, r3, [sp, #80]	; 0x50
   2ed6a:	mov.w	r1, #4294967295	; 0xffffffff
   2ed6e:	mvn.w	r0, #9
   2ed72:	cmp	r3, r1
   2ed74:	it	eq
   2ed76:	cmpeq	r2, r0
   2ed78:	bne.n	2ed4c <btrfs_csum_file_block@@Base+0x33c>
   2ed7a:	ldrb.w	r3, [sp, #88]	; 0x58
   2ed7e:	cmp	r3, #128	; 0x80
   2ed80:	bne.n	2ed4c <btrfs_csum_file_block@@Base+0x33c>
   2ed82:	ldr.w	lr, [sp, #49]	; 0x31
   2ed86:	movs	r3, #0
   2ed88:	ldr.w	r0, [sp, #89]	; 0x59
   2ed8c:	ldr.w	ip, [sp, #53]	; 0x35
   2ed90:	ldr.w	r1, [sp, #93]	; 0x5d
   2ed94:	subs.w	r0, lr, r0
   2ed98:	vmov	r2, s16
   2ed9c:	sbc.w	r1, ip, r1
   2eda0:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2eda4:	ldr.w	r3, [r6, #464]	; 0x1d0
   2eda8:	mov	r8, r0
   2edaa:	ldr.w	r0, [r3, #384]	; 0x180
   2edae:	mov	r9, r1
   2edb0:	mov	r1, r5
   2edb2:	subs	r0, #151	; 0x97
   2edb4:	bl	39420 <btrfs_util_strerror@@Base+0x18>
   2edb8:	movs	r1, #0
   2edba:	cmp	r9, r1
   2edbc:	add.w	r0, r0, #4294967295	; 0xffffffff
   2edc0:	it	eq
   2edc2:	cmpeq	r8, r0
   2edc4:	bcs.n	2ed4c <btrfs_csum_file_block@@Base+0x33c>
   2edc6:	ldr	r3, [r4, #32]
   2edc8:	mov	r1, r5
   2edca:	mla	r7, sl, r3, r7
   2edce:	ldr.w	r7, [r7, #218]	; 0xda
   2edd2:	mov	r0, r7
   2edd4:	bl	39420 <btrfs_util_strerror@@Base+0x18>
   2edd8:	movs	r1, #0
   2edda:	cmp	r9, r1
   2eddc:	it	eq
   2edde:	cmpeq	r8, r0
   2ede0:	bcc.n	2ed4c <btrfs_csum_file_block@@Base+0x33c>
   2ede2:	mla	r0, r5, r8, r5
   2ede6:	subs	r0, r0, r7
   2ede8:	cmp	r0, r5
   2edea:	bne.n	2ed4c <btrfs_csum_file_block@@Base+0x33c>
   2edec:	mov	r2, r5
   2edee:	mov	r1, r4
   2edf0:	mov	r0, r6
   2edf2:	bl	1a730 <btrfs_extend_item@@Base>
   2edf6:	ldr	r1, [pc, #112]	; (2ee68 <btrfs_csum_file_block@@Base+0x458>)
   2edf8:	mov.w	r2, #286	; 0x11e
   2edfc:	add	r1, pc
   2edfe:	adds	r1, #25
   2ee00:	mov	r3, r0
   2ee02:	ldr	r0, [pc, #104]	; (2ee6c <btrfs_csum_file_block@@Base+0x45c>)
   2ee04:	add	r0, pc
   2ee06:	bl	2e7c0 <btrfs_del_inode_ref@@Base+0x270>
   2ee0a:	ldr	r6, [r4, #0]
   2ee0c:	movs	r2, #25
   2ee0e:	ldr	r3, [r4, #32]
   2ee10:	mla	r3, r2, r3, r6
   2ee14:	ldr.w	r0, [r3, #214]	; 0xd6
   2ee18:	adds	r0, #101	; 0x65
   2ee1a:	mla	r8, r5, r8, r0
   2ee1e:	b.n	2eb68 <btrfs_csum_file_block@@Base+0x158>
   2ee20:	mov	r2, r5
   2ee22:	b.n	2ecb4 <btrfs_csum_file_block@@Base+0x2a4>
   2ee24:	mov.w	r8, #0
   2ee28:	b.n	2ee0a <btrfs_csum_file_block@@Base+0x3fa>
   2ee2a:	mvn.w	r7, #11
   2ee2e:	b.n	2ed0e <btrfs_csum_file_block@@Base+0x2fe>
   2ee30:	mov	r0, r7
   2ee32:	add	sp, #140	; 0x8c
   2ee34:	vpop	{d8-d9}
   2ee38:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ee3c:	str	r4, [r1, #52]	; 0x34
   2ee3e:	movs	r3, r0
   2ee40:	str	r2, [r1, #52]	; 0x34
   2ee42:	movs	r3, r0
   2ee44:	lsls	r0, r5, #8
   2ee46:	movs	r0, r0
   2ee48:	movs	r6, #130	; 0x82
   2ee4a:	movs	r1, r0
   2ee4c:	ssat	r0, #1, r7
   2ee50:	lsls	r0, r7, #8
   2ee52:	movs	r0, r0
   2ee54:			; <UNDEFINED> instruction: 0xf21b0000
   2ee58:	cbz	r4, 2ee7c <btrfs_del_csums@@Base+0xc>
   2ee5a:	movs	r0, r0
   2ee5c:	movs	r5, #134	; 0x86
   2ee5e:	movs	r1, r0
   2ee60:	movs	r5, #84	; 0x54
   2ee62:	movs	r1, r0
   2ee64:	str	r6, [r5, #4]
   2ee66:	movs	r3, r0
   2ee68:	movs	r4, #120	; 0x78
   2ee6a:	movs	r1, r0
   2ee6c:			; <UNDEFINED> instruction: 0xb6e0
	...

0002ee70 <btrfs_del_csums@@Base>:
   2ee70:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ee74:	sub	sp, #100	; 0x64
   2ee76:	mov	sl, r0
   2ee78:	strd	r2, r3, [sp, #8]
   2ee7c:	ldr	r3, [sp, #136]	; 0x88
   2ee7e:	ldr	r2, [pc, #832]	; (2f1c0 <btrfs_del_csums@@Base+0x350>)
   2ee80:	str	r3, [sp, #60]	; 0x3c
   2ee82:	add	r2, pc
   2ee84:	ldr	r3, [sp, #140]	; 0x8c
   2ee86:	str	r3, [sp, #64]	; 0x40
   2ee88:	ldr	r3, [pc, #824]	; (2f1c4 <btrfs_del_csums@@Base+0x354>)
   2ee8a:	ldr	r3, [r2, r3]
   2ee8c:	ldr	r2, [sp, #60]	; 0x3c
   2ee8e:	ldr	r3, [r3, #0]
   2ee90:	str	r3, [sp, #92]	; 0x5c
   2ee92:	mov.w	r3, #0
   2ee96:	ldr	r3, [sp, #8]
   2ee98:	adds.w	r8, r3, r2
   2ee9c:	ldr	r3, [sp, #12]
   2ee9e:	ldr	r2, [sp, #64]	; 0x40
   2eea0:	adc.w	r9, r3, r2
   2eea4:	ldr	r3, [r0, #0]
   2eea6:	ldr.w	r0, [r3, #308]	; 0x134
   2eeaa:	bl	18510 <btrfs_super_csum_size@@Base>
   2eeae:	ldr.w	r3, [sl]
   2eeb2:	ldr.w	r2, [r3, #388]	; 0x184
   2eeb6:	ldr	r5, [r3, #40]	; 0x28
   2eeb8:	str	r2, [sp, #48]	; 0x30
   2eeba:	str	r0, [sp, #44]	; 0x2c
   2eebc:	bl	18550 <btrfs_alloc_path@@Base>
   2eec0:	mov	r4, r0
   2eec2:	cmp	r0, #0
   2eec4:	beq.w	2f1b4 <btrfs_del_csums@@Base+0x344>
   2eec8:	adds.w	r3, r8, #4294967295	; 0xffffffff
   2eecc:	str	r3, [sp, #52]	; 0x34
   2eece:	adc.w	r3, r9, #4294967295	; 0xffffffff
   2eed2:	str	r3, [sp, #56]	; 0x38
   2eed4:	add.w	r3, sp, #81	; 0x51
   2eed8:	str	r3, [sp, #40]	; 0x28
   2eeda:	mvn.w	r2, #9
   2eede:	mov.w	r3, #4294967295	; 0xffffffff
   2eee2:	strd	r2, r3, [sp, #72]	; 0x48
   2eee6:	mov	r1, r5
   2eee8:	ldr	r2, [sp, #40]	; 0x28
   2eeea:	mov	r0, sl
   2eeec:	ldr	r3, [sp, #52]	; 0x34
   2eeee:	str	r3, [r2, #0]
   2eef0:	ldr	r3, [sp, #56]	; 0x38
   2eef2:	str	r3, [r2, #4]
   2eef4:	movs	r3, #128	; 0x80
   2eef6:	movs	r2, #1
   2eef8:	strb.w	r3, [sp, #80]	; 0x50
   2eefc:	mov.w	r3, #4294967295	; 0xffffffff
   2ef00:	strd	r3, r2, [sp]
   2ef04:	add	r2, sp, #72	; 0x48
   2ef06:	mov	r3, r4
   2ef08:	bl	1a93c <btrfs_search_slot@@Base>
   2ef0c:	cmp	r0, #0
   2ef0e:	ble.n	2ef1c <btrfs_del_csums@@Base+0xac>
   2ef10:	ldr	r3, [r4, #32]
   2ef12:	cmp	r3, #0
   2ef14:	beq.w	2f198 <btrfs_del_csums@@Base+0x328>
   2ef18:	subs	r3, #1
   2ef1a:	str	r3, [r4, #32]
   2ef1c:	ldr	r6, [r4, #0]
   2ef1e:	add	r7, sp, #72	; 0x48
   2ef20:	ldr	r2, [r4, #32]
   2ef22:	mov	r1, r7
   2ef24:	mov	r0, r6
   2ef26:	bl	2e71c <btrfs_del_inode_ref@@Base+0x1cc>
   2ef2a:	ldrd	r2, r3, [sp, #72]	; 0x48
   2ef2e:	mov.w	r1, #4294967295	; 0xffffffff
   2ef32:	mvn.w	r0, #9
   2ef36:	cmp	r3, r1
   2ef38:	it	eq
   2ef3a:	cmpeq	r2, r0
   2ef3c:	bne.w	2f198 <btrfs_del_csums@@Base+0x328>
   2ef40:	ldrb.w	r3, [sp, #80]	; 0x50
   2ef44:	cmp	r3, #128	; 0x80
   2ef46:	bne.w	2f198 <btrfs_del_csums@@Base+0x328>
   2ef4a:	ldr.w	r3, [sp, #81]	; 0x51
   2ef4e:	str	r3, [sp, #16]
   2ef50:	ldr.w	r3, [sp, #85]	; 0x55
   2ef54:	str	r3, [sp, #20]
   2ef56:	ldrd	r2, r3, [sp, #16]
   2ef5a:	cmp	r3, r9
   2ef5c:	it	eq
   2ef5e:	cmpeq	r2, r8
   2ef60:	bcs.w	2f198 <btrfs_del_csums@@Base+0x328>
   2ef64:	ldr	r3, [r4, #32]
   2ef66:	ldr	r1, [sp, #44]	; 0x2c
   2ef68:	mov	fp, r3
   2ef6a:	movs	r3, #25
   2ef6c:	mla	r3, r3, fp, r6
   2ef70:	add.w	r2, r3, #197	; 0xc5
   2ef74:	str	r2, [sp, #68]	; 0x44
   2ef76:	ldr.w	r0, [r3, #218]	; 0xda
   2ef7a:	bl	39420 <btrfs_util_strerror@@Base+0x18>
   2ef7e:	ldr	r3, [sp, #48]	; 0x30
   2ef80:	mov	r1, r3
   2ef82:	asrs	r2, r3, #31
   2ef84:	strd	r1, r2, [sp, #32]
   2ef88:	ldr	r1, [sp, #36]	; 0x24
   2ef8a:	umull	r2, r3, r3, r0
   2ef8e:	mla	r3, r0, r1, r3
   2ef92:	ldr	r1, [sp, #16]
   2ef94:	adds	r1, r1, r2
   2ef96:	str	r1, [sp, #24]
   2ef98:	ldr	r1, [sp, #20]
   2ef9a:	adc.w	r3, r1, r3
   2ef9e:	str	r3, [sp, #28]
   2efa0:	ldrd	r0, r1, [sp, #24]
   2efa4:	ldrd	r2, r3, [sp, #8]
   2efa8:	cmp	r3, r1
   2efaa:	it	eq
   2efac:	cmpeq	r2, r0
   2efae:	bcs.w	2f198 <btrfs_del_csums@@Base+0x328>
   2efb2:	ldrd	r2, r3, [sp, #16]
   2efb6:	ldrd	r0, r1, [sp, #8]
   2efba:	cmp	r3, r1
   2efbc:	it	eq
   2efbe:	cmpeq	r2, r0
   2efc0:	ldrd	r2, r3, [sp, #24]
   2efc4:	bcc.n	2eff4 <btrfs_del_csums@@Base+0x184>
   2efc6:	cmp	r9, r3
   2efc8:	it	eq
   2efca:	cmpeq	r8, r2
   2efcc:	bcc.n	2f088 <btrfs_del_csums@@Base+0x218>
   2efce:	movs	r3, #1
   2efd0:	mov	r2, r4
   2efd2:	mov	r1, r5
   2efd4:	str	r3, [sp, #0]
   2efd6:	mov	r0, sl
   2efd8:	mov	r3, fp
   2efda:	bl	1baf8 <btrfs_del_items@@Base>
   2efde:	ldr	r1, [pc, #488]	; (2f1c8 <btrfs_del_csums@@Base+0x358>)
   2efe0:	mov.w	r2, #450	; 0x1c2
   2efe4:	add	r1, pc
   2efe6:	adds	r1, #47	; 0x2f
   2efe8:	mov	r3, r0
   2efea:	ldr	r0, [pc, #480]	; (2f1cc <btrfs_del_csums@@Base+0x35c>)
   2efec:	add	r0, pc
   2efee:	bl	2e7c0 <btrfs_del_inode_ref@@Base+0x270>
   2eff2:	b.n	2f080 <btrfs_del_csums@@Base+0x210>
   2eff4:	cmp	r9, r3
   2eff6:	it	eq
   2eff8:	cmpeq	r8, r2
   2effa:	bcs.n	2f088 <btrfs_del_csums@@Base+0x218>
   2effc:	ldr	r1, [sp, #8]
   2effe:	ldr	r0, [sp, #16]
   2f000:	ldrd	r2, r3, [sp, #32]
   2f004:	subs	r0, r1, r0
   2f006:	ldr	r1, [sp, #12]
   2f008:	mov	ip, r1
   2f00a:	ldr	r1, [sp, #20]
   2f00c:	sbc.w	r1, ip, r1
   2f010:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2f014:	ldr	r3, [sp, #44]	; 0x2c
   2f016:	muls	r3, r0
   2f018:	ldrd	r0, r1, [sp, #60]	; 0x3c
   2f01c:	mov	fp, r3
   2f01e:	ldrd	r2, r3, [sp, #32]
   2f022:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2f026:	ldr	r3, [sp, #68]	; 0x44
   2f028:	add.w	r2, fp, #101	; 0x65
   2f02c:	ldr.w	r1, [r3, #17]
   2f030:	ldr	r3, [sp, #44]	; 0x2c
   2f032:	add	r2, r1
   2f034:	movs	r1, #0
   2f036:	muls	r3, r0
   2f038:	mov	r0, r6
   2f03a:	bl	17aa2 <memset_extent_buffer@@Base>
   2f03e:	ldr	r2, [sp, #40]	; 0x28
   2f040:	ldr	r3, [sp, #8]
   2f042:	mov	r1, r5
   2f044:	mov	r0, sl
   2f046:	str	r3, [r2, #0]
   2f048:	ldr	r3, [sp, #12]
   2f04a:	str	r3, [r2, #4]
   2f04c:	mov	r3, r7
   2f04e:	mov	r2, r4
   2f050:	str.w	fp, [sp]
   2f054:	bl	1b4c0 <btrfs_split_item@@Base>
   2f058:	mov	r3, r0
   2f05a:	cbz	r0, 2f064 <btrfs_del_csums@@Base+0x1f4>
   2f05c:	adds.w	r3, r0, #11
   2f060:	it	ne
   2f062:	movne	r3, #1
   2f064:	ldr	r1, [pc, #360]	; (2f1d0 <btrfs_del_csums@@Base+0x360>)
   2f066:	movw	r2, #491	; 0x1eb
   2f06a:	ldr	r0, [pc, #360]	; (2f1d4 <btrfs_del_csums@@Base+0x364>)
   2f06c:	add	r1, pc
   2f06e:	adds	r1, #47	; 0x2f
   2f070:	add	r0, pc
   2f072:	bl	2e7c0 <btrfs_del_inode_ref@@Base+0x270>
   2f076:	ldr	r3, [sp, #52]	; 0x34
   2f078:	ldr	r2, [sp, #40]	; 0x28
   2f07a:	str	r3, [r2, #0]
   2f07c:	ldr	r3, [sp, #56]	; 0x38
   2f07e:	str	r3, [r2, #4]
   2f080:	mov	r0, r4
   2f082:	bl	18558 <btrfs_release_path@@Base>
   2f086:	b.n	2eeda <btrfs_del_csums@@Base+0x6a>
   2f088:	ldr.w	r3, [r5, #464]	; 0x1d0
   2f08c:	ldr.w	r0, [r3, #308]	; 0x134
   2f090:	bl	18510 <btrfs_super_csum_size@@Base>
   2f094:	ldr.w	r3, [r5, #464]	; 0x1d0
   2f098:	ldr	r1, [r4, #0]
   2f09a:	ldr.w	r6, [sp, #81]	; 0x51
   2f09e:	ldr.w	r2, [r3, #388]	; 0x184
   2f0a2:	ldr	r3, [r4, #32]
   2f0a4:	ldr.w	r7, [sp, #85]	; 0x55
   2f0a8:	mov	fp, r6
   2f0aa:	str	r2, [sp, #32]
   2f0ac:	str	r0, [sp, #16]
   2f0ae:	movs	r0, #25
   2f0b0:	mla	r3, r0, r3, r1
   2f0b4:	ldr	r1, [sp, #16]
   2f0b6:	ldr.w	r0, [r3, #218]	; 0xda
   2f0ba:	bl	39420 <btrfs_util_strerror@@Base+0x18>
   2f0be:	ldr	r2, [sp, #32]
   2f0c0:	mov	ip, r7
   2f0c2:	umlal	fp, ip, r2, r0
   2f0c6:	ldrd	r0, r1, [sp, #8]
   2f0ca:	cmp	r7, r1
   2f0cc:	it	eq
   2f0ce:	cmpeq	r6, r0
   2f0d0:	bcs.n	2f11e <btrfs_del_csums@@Base+0x2ae>
   2f0d2:	cmp	r9, ip
   2f0d4:	it	eq
   2f0d6:	cmpeq	r8, fp
   2f0d8:	bcc.n	2f184 <btrfs_del_csums@@Base+0x314>
   2f0da:	ldr	r1, [sp, #8]
   2f0dc:	movs	r3, #0
   2f0de:	subs	r0, r1, r6
   2f0e0:	ldr	r1, [sp, #12]
   2f0e2:	sbc.w	r1, r1, r7
   2f0e6:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2f0ea:	ldr	r2, [sp, #16]
   2f0ec:	movs	r3, #1
   2f0ee:	mov	r1, r4
   2f0f0:	muls	r2, r0
   2f0f2:	mov	r0, r5
   2f0f4:	bl	1a57c <btrfs_truncate_item@@Base>
   2f0f8:	ldr	r1, [pc, #220]	; (2f1d8 <btrfs_del_csums@@Base+0x368>)
   2f0fa:	mov.w	r2, #372	; 0x174
   2f0fe:	add	r1, pc
   2f100:	adds	r1, #63	; 0x3f
   2f102:	mov	r3, r0
   2f104:	ldr	r0, [pc, #212]	; (2f1dc <btrfs_del_csums@@Base+0x36c>)
   2f106:	add	r0, pc
   2f108:	bl	2e7c0 <btrfs_del_inode_ref@@Base+0x270>
   2f10c:	ldr	r1, [pc, #208]	; (2f1e0 <btrfs_del_csums@@Base+0x370>)
   2f10e:	ldr	r0, [pc, #212]	; (2f1e4 <btrfs_del_csums@@Base+0x374>)
   2f110:	movs	r3, #0
   2f112:	add	r1, pc
   2f114:	movw	r2, #497	; 0x1f1
   2f118:	adds	r1, #47	; 0x2f
   2f11a:	add	r0, pc
   2f11c:	b.n	2efee <btrfs_del_csums@@Base+0x17e>
   2f11e:	cmp	r9, ip
   2f120:	it	eq
   2f122:	cmpeq	r8, fp
   2f124:	bcs.n	2f184 <btrfs_del_csums@@Base+0x314>
   2f126:	cmp	r7, r9
   2f128:	it	eq
   2f12a:	cmpeq	r6, r8
   2f12c:	bcs.n	2f184 <btrfs_del_csums@@Base+0x314>
   2f12e:	subs.w	r0, fp, r8
   2f132:	mov.w	r3, #0
   2f136:	sbc.w	r1, ip, r9
   2f13a:	ldr	r7, [pc, #172]	; (2f1e8 <btrfs_del_csums@@Base+0x378>)
   2f13c:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2f140:	ldr	r2, [sp, #16]
   2f142:	movs	r3, #0
   2f144:	mov	r1, r4
   2f146:	ldr	r6, [pc, #164]	; (2f1ec <btrfs_del_csums@@Base+0x37c>)
   2f148:	add	r7, pc
   2f14a:	adds	r7, #63	; 0x3f
   2f14c:	add	r6, pc
   2f14e:	muls	r2, r0
   2f150:	mov	r0, r5
   2f152:	bl	1a57c <btrfs_truncate_item@@Base>
   2f156:	movw	r2, #385	; 0x181
   2f15a:	mov	r1, r7
   2f15c:	mov	r3, r0
   2f15e:	mov	r0, r6
   2f160:	bl	2e7c0 <btrfs_del_inode_ref@@Base+0x270>
   2f164:	ldr	r3, [sp, #40]	; 0x28
   2f166:	add	r2, sp, #72	; 0x48
   2f168:	mov	r1, r4
   2f16a:	mov	r0, r5
   2f16c:	str.w	r8, [r3]
   2f170:	str.w	r9, [r3, #4]
   2f174:	bl	19598 <btrfs_set_item_key_safe@@Base>
   2f178:	movw	r2, #389	; 0x185
   2f17c:	mov	r1, r7
   2f17e:	mov	r3, r0
   2f180:	mov	r0, r6
   2f182:	b.n	2f108 <btrfs_del_csums@@Base+0x298>
   2f184:	ldr	r1, [pc, #104]	; (2f1f0 <btrfs_del_csums@@Base+0x380>)
   2f186:	movs	r3, #1
   2f188:	ldr	r0, [pc, #104]	; (2f1f4 <btrfs_del_csums@@Base+0x384>)
   2f18a:	movw	r2, #391	; 0x187
   2f18e:	add	r1, pc
   2f190:	adds	r1, #63	; 0x3f
   2f192:	add	r0, pc
   2f194:	bl	2e784 <btrfs_del_inode_ref@@Base+0x234>
   2f198:	mov	r0, r4
   2f19a:	bl	1857e <btrfs_free_path@@Base>
   2f19e:	movs	r0, #0
   2f1a0:	ldr	r2, [pc, #84]	; (2f1f8 <btrfs_del_csums@@Base+0x388>)
   2f1a2:	ldr	r3, [pc, #32]	; (2f1c4 <btrfs_del_csums@@Base+0x354>)
   2f1a4:	add	r2, pc
   2f1a6:	ldr	r3, [r2, r3]
   2f1a8:	ldr	r2, [r3, #0]
   2f1aa:	ldr	r3, [sp, #92]	; 0x5c
   2f1ac:	eors	r2, r3
   2f1ae:	beq.n	2f1ba <btrfs_del_csums@@Base+0x34a>
   2f1b0:	blx	8708 <__stack_chk_fail@plt>
   2f1b4:	mvn.w	r0, #11
   2f1b8:	b.n	2f1a0 <btrfs_del_csums@@Base+0x330>
   2f1ba:	add	sp, #100	; 0x64
   2f1bc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f1c0:	ldrsh	r6, [r7, r3]
   2f1c2:	movs	r3, r0
   2f1c4:	lsls	r0, r5, #8
   2f1c6:	movs	r0, r0
   2f1c8:	movs	r2, #144	; 0x90
   2f1ca:	movs	r1, r0
   2f1cc:	push	{r3, r4, r5, r6, r7}
   2f1ce:	movs	r0, r0
   2f1d0:	movs	r2, #8
   2f1d2:	movs	r1, r0
   2f1d4:	movs	r1, #238	; 0xee
   2f1d6:	movs	r1, r0
   2f1d8:	movs	r1, #118	; 0x76
   2f1da:	movs	r1, r0
   2f1dc:	cbz	r6, 2f256 <raid6_gen_syndrome@@Base+0x5a>
   2f1de:	movs	r0, r0
   2f1e0:	movs	r1, #98	; 0x62
   2f1e2:	movs	r1, r0
   2f1e4:	cbz	r2, 2f25a <raid6_gen_syndrome@@Base+0x5e>
   2f1e6:	movs	r0, r0
   2f1e8:	movs	r1, #44	; 0x2c
   2f1ea:	movs	r1, r0
   2f1ec:	cbz	r0, 2f256 <raid6_gen_syndrome@@Base+0x5a>
   2f1ee:	movs	r0, r0
   2f1f0:	movs	r0, #230	; 0xe6
   2f1f2:	movs	r1, r0
   2f1f4:	stcl	0, cr0, [fp, #-0]
   2f1f8:	ldrh	r4, [r3, r7]
   2f1fa:	movs	r3, r0

0002f1fc <raid6_gen_syndrome@@Base>:
   2f1fc:	subs	r3, r0, #2
   2f1fe:	sub.w	ip, r0, #3
   2f202:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   2f206:	add.w	ip, r2, ip, lsl #2
   2f20a:	ldr.w	r8, [r2, r3, lsl #2]
   2f20e:	add.w	r3, r2, r3, lsl #2
   2f212:	movs	r4, #0
   2f214:	ldr.w	r9, [r3, #4]
   2f218:	cmp	r1, r4
   2f21a:	bhi.n	2f220 <raid6_gen_syndrome@@Base+0x24>
   2f21c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   2f220:	ldr.w	r3, [ip]
   2f224:	subs	r7, r0, #4
   2f226:	ldr	r6, [r3, r4]
   2f228:	mov	r3, r6
   2f22a:	cmp	r7, #0
   2f22c:	bge.n	2f23a <raid6_gen_syndrome@@Base+0x3e>
   2f22e:	str.w	r6, [r8, r4]
   2f232:	str.w	r3, [r9, r4]
   2f236:	adds	r4, #4
   2f238:	b.n	2f218 <raid6_gen_syndrome@@Base+0x1c>
   2f23a:	ldr.w	r5, [r2, r7, lsl #2]
   2f23e:	and.w	sl, r3, #2155905152	; 0x80808080
   2f242:	lsls	r3, r3, #1
   2f244:	subs	r7, #1
   2f246:	and.w	r3, r3, #4278124286	; 0xfefefefe
   2f24a:	ldr.w	lr, [r5, r4]
   2f24e:	mov.w	r5, sl, lsr #7
   2f252:	rsb	r5, r5, sl, lsl #1
   2f256:	and.w	r5, r5, #488447261	; 0x1d1d1d1d
   2f25a:	eor.w	r6, r6, lr
   2f25e:	eor.w	lr, r5, lr
   2f262:	eor.w	r3, lr, r3
   2f266:	b.n	2f22a <raid6_gen_syndrome@@Base+0x2e>

0002f268 <raid5_gen_result@@Base>:
   2f268:	cmp.w	r1, #65536	; 0x10000
   2f26c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f270:	mov	r6, r0
   2f272:	ldr.w	r8, [r3, r2, lsl #2]
   2f276:	mov	r5, r2
   2f278:	mov	r7, r3
   2f27a:	beq.n	2f292 <raid5_gen_result@@Base+0x2a>
   2f27c:	ldr	r1, [pc, #184]	; (2f338 <raid5_gen_result@@Base+0xd0>)
   2f27e:	ldr	r0, [pc, #188]	; (2f33c <raid5_gen_result@@Base+0xd4>)
   2f280:	add	r1, pc
   2f282:	add	r0, pc
   2f284:	bl	17b7c <__btrfs_error@@Base>
   2f288:	mvn.w	r0, #21
   2f28c:	add	sp, #12
   2f28e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f292:	cmp	r2, r0
   2f294:	bge.n	2f27c <raid5_gen_result@@Base+0x14>
   2f296:	cmp	r0, #1
   2f298:	ble.n	2f27c <raid5_gen_result@@Base+0x14>
   2f29a:	cmp	r0, #2
   2f29c:	bne.n	2f2b2 <raid5_gen_result@@Base+0x4a>
   2f29e:	rsb	r5, r2, #1
   2f2a2:	mov	r0, r8
   2f2a4:	mov	r2, r1
   2f2a6:	ldr.w	r1, [r3, r5, lsl #2]
   2f2aa:	blx	866c <memcpy@plt+0x4>
   2f2ae:	movs	r0, #0
   2f2b0:	b.n	2f28c <raid5_gen_result@@Base+0x24>
   2f2b2:	mov	r2, r1
   2f2b4:	mov	r0, r8
   2f2b6:	movs	r1, #0
   2f2b8:	mvn.w	fp, #3
   2f2bc:	blx	89bc <memset@plt+0x4>
   2f2c0:	movs	r0, #0
   2f2c2:	cmp	r0, r6
   2f2c4:	beq.n	2f2ae <raid5_gen_result@@Base+0x46>
   2f2c6:	cmp	r0, r5
   2f2c8:	bne.n	2f2ce <raid5_gen_result@@Base+0x66>
   2f2ca:	adds	r0, #1
   2f2cc:	b.n	2f2c2 <raid5_gen_result@@Base+0x5a>
   2f2ce:	ldr.w	r1, [r7, r0, lsl #2]
   2f2d2:	mov.w	r2, #65536	; 0x10000
   2f2d6:	mov	r4, r8
   2f2d8:	lsls	r3, r4, #29
   2f2da:	bmi.n	2f310 <raid5_gen_result@@Base+0xa8>
   2f2dc:	bic.w	r9, r2, #3
   2f2e0:	sub.w	ip, r4, #4
   2f2e4:	add.w	sl, r1, r9
   2f2e8:	lsrs	r3, r2, #2
   2f2ea:	str	r3, [sp, #4]
   2f2ec:	cmp	r1, sl
   2f2ee:	bne.n	2f326 <raid5_gen_result@@Base+0xbe>
   2f2f0:	ldr	r3, [sp, #4]
   2f2f2:	add	r4, r9
   2f2f4:	mla	r2, fp, r3, r2
   2f2f8:	add	r2, r1
   2f2fa:	cmp	r1, r2
   2f2fc:	beq.n	2f2ca <raid5_gen_result@@Base+0x62>
   2f2fe:	ldrb.w	ip, [r4], #1
   2f302:	ldrb.w	r3, [r1], #1
   2f306:	eor.w	r3, r3, ip
   2f30a:	strb.w	r3, [r4, #-1]
   2f30e:	b.n	2f2fa <raid5_gen_result@@Base+0x92>
   2f310:	ldrb.w	ip, [r4], #1
   2f314:	subs	r2, #1
   2f316:	ldrb.w	r3, [r1], #1
   2f31a:	eor.w	r3, r3, ip
   2f31e:	strb.w	r3, [r4, #-1]
   2f322:	bne.n	2f2d8 <raid5_gen_result@@Base+0x70>
   2f324:	b.n	2f2ca <raid5_gen_result@@Base+0x62>
   2f326:	ldr.w	lr, [ip, #4]!
   2f32a:	ldr.w	r3, [r1], #4
   2f32e:	eor.w	lr, lr, r3
   2f332:	str.w	lr, [ip]
   2f336:	b.n	2f2ec <raid5_gen_result@@Base+0x84>
   2f338:	movs	r0, #94	; 0x5e
   2f33a:	movs	r1, r0
   2f33c:	movs	r0, #67	; 0x43
   2f33e:	movs	r1, r0

0002f340 <raid6_recov_data2@@Base>:
   2f340:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f344:	mov	r5, r2
   2f346:	ldr.w	sl, [pc, #320]	; 2f488 <raid6_recov_data2@@Base+0x148>
   2f34a:	sub	sp, #28
   2f34c:	cmp	r5, #0
   2f34e:	mov	fp, r1
   2f350:	add	sl, pc
   2f352:	mov	r4, r3
   2f354:	str	r0, [sp, #8]
   2f356:	blt.w	2f482 <raid6_recov_data2@@Base+0x142>
   2f35a:	subs	r3, r0, #2
   2f35c:	cmp	r3, r5
   2f35e:	ble.w	2f482 <raid6_recov_data2@@Base+0x142>
   2f362:	cmp	r4, #0
   2f364:	blt.w	2f482 <raid6_recov_data2@@Base+0x142>
   2f368:	cmp	r3, r4
   2f36a:	ble.w	2f482 <raid6_recov_data2@@Base+0x142>
   2f36e:	cmp	r5, r4
   2f370:	bge.w	2f482 <raid6_recov_data2@@Base+0x142>
   2f374:	movs	r0, #1
   2f376:	blx	8588 <calloc@plt+0x4>
   2f37a:	mov	r1, fp
   2f37c:	mov	r8, r0
   2f37e:	movs	r0, #1
   2f380:	blx	8588 <calloc@plt+0x4>
   2f384:	mov	r7, r0
   2f386:	cmp.w	r8, #0
   2f38a:	beq.n	2f390 <raid6_recov_data2@@Base+0x50>
   2f38c:	ldr	r2, [sp, #64]	; 0x40
   2f38e:	cbnz	r0, 2f3a6 <raid6_recov_data2@@Base+0x66>
   2f390:	mov	r0, r8
   2f392:	blx	8620 <free@plt+0x4>
   2f396:	mov	r0, r7
   2f398:	blx	8620 <free@plt+0x4>
   2f39c:	mvn.w	r0, #11
   2f3a0:	add	sp, #28
   2f3a2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f3a6:	ldr	r3, [sp, #8]
   2f3a8:	str	r2, [sp, #64]	; 0x40
   2f3aa:	add.w	r9, r3, #1073741824	; 0x40000000
   2f3ae:	sub.w	r9, r9, #2
   2f3b2:	ldr.w	r1, [r2, r9, lsl #2]
   2f3b6:	mov.w	r3, r9, lsl #2
   2f3ba:	adds	r3, #4
   2f3bc:	str	r3, [sp, #20]
   2f3be:	str	r1, [sp, #12]
   2f3c0:	ldr	r1, [r2, r3]
   2f3c2:	str	r1, [sp, #16]
   2f3c4:	ldr.w	r1, [r2, r5, lsl #2]
   2f3c8:	str.w	r8, [r2, r5, lsl #2]
   2f3cc:	str.w	r1, [r2, r9, lsl #2]
   2f3d0:	ldr.w	r6, [r2, r4, lsl #2]
   2f3d4:	str	r1, [sp, #4]
   2f3d6:	mov	r1, fp
   2f3d8:	str.w	r0, [r2, r4, lsl #2]
   2f3dc:	str	r6, [r2, r3]
   2f3de:	ldr	r0, [sp, #8]
   2f3e0:	bl	2f1fc <raid6_gen_syndrome@@Base>
   2f3e4:	ldr	r2, [sp, #64]	; 0x40
   2f3e6:	ldr	r3, [sp, #4]
   2f3e8:	str.w	r3, [r2, r5, lsl #2]
   2f3ec:	ldr	r3, [sp, #12]
   2f3ee:	str.w	r6, [r2, r4, lsl #2]
   2f3f2:	str.w	r3, [r2, r9, lsl #2]
   2f3f6:	ldrd	r1, r3, [sp, #16]
   2f3fa:	str	r1, [r2, r3]
   2f3fc:	ldr	r3, [pc, #140]	; (2f48c <raid6_recov_data2@@Base+0x14c>)
   2f3fe:	ldr.w	r2, [sl, r3]
   2f402:	subs	r3, r4, r5
   2f404:	ldrb	r0, [r2, r3]
   2f406:	ldr	r3, [pc, #136]	; (2f490 <raid6_recov_data2@@Base+0x150>)
   2f408:	lsls	r0, r0, #8
   2f40a:	ldr.w	r2, [sl, r3]
   2f40e:	ldr	r3, [pc, #132]	; (2f494 <raid6_recov_data2@@Base+0x154>)
   2f410:	ldr.w	r1, [sl, r3]
   2f414:	ldrb	r3, [r1, r5]
   2f416:	ldrb	r1, [r1, r4]
   2f418:	eors	r3, r1
   2f41a:	add.w	r1, r6, fp
   2f41e:	ldrb	r4, [r2, r3]
   2f420:	ldr	r3, [sp, #12]
   2f422:	subs	r5, r3, #1
   2f424:	ldr	r3, [sp, #4]
   2f426:	lsls	r4, r4, #8
   2f428:	add.w	ip, r3, #4294967295	; 0xffffffff
   2f42c:	ldr	r3, [sp, #16]
   2f42e:	add.w	lr, r3, #4294967295	; 0xffffffff
   2f432:	cmp	r6, r1
   2f434:	bne.n	2f446 <raid6_recov_data2@@Base+0x106>
   2f436:	mov	r0, r8
   2f438:	blx	8620 <free@plt+0x4>
   2f43c:	mov	r0, r7
   2f43e:	blx	8620 <free@plt+0x4>
   2f442:	movs	r0, #0
   2f444:	b.n	2f3a0 <raid6_recov_data2@@Base+0x60>
   2f446:	ldrb.w	r2, [r5, #1]!
   2f44a:	ldrb.w	r3, [ip, #1]!
   2f44e:	ldrb.w	r9, [r6]
   2f452:	eors	r3, r2
   2f454:	ldrb.w	r2, [lr, #1]!
   2f458:	add.w	fp, r3, r0
   2f45c:	eor.w	r2, r2, r9
   2f460:	ldr.w	r9, [pc, #52]	; 2f498 <raid6_recov_data2@@Base+0x158>
   2f464:	add	r2, r4
   2f466:	ldr.w	r9, [sl, r9]
   2f46a:	ldrb.w	r2, [r2, r9]
   2f46e:	ldrb.w	r9, [fp, r9]
   2f472:	eor.w	r2, r2, r9
   2f476:	strb.w	r2, [r6], #1
   2f47a:	eors	r3, r2
   2f47c:	strb.w	r3, [ip]
   2f480:	b.n	2f432 <raid6_recov_data2@@Base+0xf2>
   2f482:	mvn.w	r0, #21
   2f486:	b.n	2f3a0 <raid6_recov_data2@@Base+0x60>
   2f488:	ldrh	r0, [r6, r0]
   2f48a:	movs	r3, r0
   2f48c:	lsls	r0, r5, #9
   2f48e:	movs	r0, r0
   2f490:	lsls	r4, r7, #8
   2f492:	movs	r0, r0
   2f494:	lsls	r0, r6, #8
   2f496:	movs	r0, r0
   2f498:	lsls	r0, r0, #9
	...

0002f49c <raid6_recov_datap@@Base>:
   2f49c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f4a0:	mov	r7, r2
   2f4a2:	add.w	r2, r0, #1073741824	; 0x40000000
   2f4a6:	mov	r4, r3
   2f4a8:	subs	r2, #2
   2f4aa:	ldr.w	sl, [pc, #144]	; 2f53c <raid6_recov_datap@@Base+0xa0>
   2f4ae:	mov	fp, r0
   2f4b0:	movs	r0, #1
   2f4b2:	lsls	r3, r2, #2
   2f4b4:	add	sl, pc
   2f4b6:	add.w	r9, r3, #4
   2f4ba:	ldr.w	r8, [r4, r2, lsl #2]
   2f4be:	mov	r6, r1
   2f4c0:	ldr.w	r3, [r4, r9]
   2f4c4:	str	r3, [sp, #4]
   2f4c6:	blx	8588 <calloc@plt+0x4>
   2f4ca:	cbz	r0, 2f536 <raid6_recov_datap@@Base+0x9a>
   2f4cc:	ldr.w	r5, [r4, r7, lsl #2]
   2f4d0:	mov	r2, r4
   2f4d2:	str.w	r0, [r4, r7, lsl #2]
   2f4d6:	mov	r1, r6
   2f4d8:	mov	r0, fp
   2f4da:	add	r6, r8
   2f4dc:	str.w	r5, [r4, r9]
   2f4e0:	bl	2f1fc <raid6_gen_syndrome@@Base>
   2f4e4:	ldr	r3, [sp, #4]
   2f4e6:	str.w	r5, [r4, r7, lsl #2]
   2f4ea:	subs	r5, #1
   2f4ec:	str.w	r3, [r4, r9]
   2f4f0:	ldr	r3, [pc, #76]	; (2f540 <raid6_recov_datap@@Base+0xa4>)
   2f4f2:	ldr.w	r2, [sl, r3]
   2f4f6:	ldr	r3, [pc, #76]	; (2f544 <raid6_recov_datap@@Base+0xa8>)
   2f4f8:	ldr.w	r3, [sl, r3]
   2f4fc:	ldrb	r3, [r3, r7]
   2f4fe:	ldrb	r2, [r2, r3]
   2f500:	ldr	r3, [sp, #4]
   2f502:	lsls	r2, r2, #8
   2f504:	add.w	r9, r3, #4294967295	; 0xffffffff
   2f508:	cmp	r8, r6
   2f50a:	bne.n	2f514 <raid6_recov_datap@@Base+0x78>
   2f50c:	movs	r0, #0
   2f50e:	add	sp, #12
   2f510:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f514:	ldrb.w	r1, [r5, #1]!
   2f518:	ldrb.w	r3, [r9, #1]!
   2f51c:	eors	r3, r1
   2f51e:	ldr	r1, [pc, #40]	; (2f548 <raid6_recov_datap@@Base+0xac>)
   2f520:	add	r3, r2
   2f522:	ldr.w	r1, [sl, r1]
   2f526:	ldrb	r3, [r3, r1]
   2f528:	strb	r3, [r5, #0]
   2f52a:	ldrb.w	r1, [r8], #1
   2f52e:	eors	r3, r1
   2f530:	strb.w	r3, [r8, #-1]
   2f534:	b.n	2f508 <raid6_recov_datap@@Base+0x6c>
   2f536:	mvn.w	r0, #11
   2f53a:	b.n	2f50e <raid6_recov_datap@@Base+0x72>
   2f53c:	ldr	r4, [r1, r3]
   2f53e:	movs	r3, r0
   2f540:	lsls	r4, r7, #8
   2f542:	movs	r0, r0
   2f544:	lsls	r0, r6, #8
   2f546:	movs	r0, r0
   2f548:	lsls	r0, r0, #9
	...

0002f54c <raid56_recov@@Base>:
   2f54c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   2f550:	mov.w	ip, #0
   2f554:	mov	r5, r0
   2f556:	mov	r0, r2
   2f558:	and.w	r6, r0, #128	; 0x80
   2f55c:	mov	r7, ip
   2f55e:	orrs.w	lr, r6, r7
   2f562:	ldrd	r2, r4, [sp, #40]	; 0x28
   2f566:	ldr	r3, [sp, #48]	; 0x30
   2f568:	bne.n	2f588 <raid56_recov@@Base+0x3c>
   2f56a:	and.w	r8, r0, #256	; 0x100
   2f56e:	mov	r9, ip
   2f570:	orrs.w	r0, r8, r9
   2f574:	beq.n	2f5f4 <raid56_recov@@Base+0xa8>
   2f576:	movs	r0, #3
   2f578:	cmp	r0, r5
   2f57a:	bgt.n	2f5f4 <raid56_recov@@Base+0xa8>
   2f57c:	adds	r0, r2, #1
   2f57e:	bne.n	2f58c <raid56_recov@@Base+0x40>
   2f580:	adds	r2, r4, #1
   2f582:	bne.n	2f5fe <raid56_recov@@Base+0xb2>
   2f584:	movs	r0, #0
   2f586:	b.n	2f5ee <raid56_recov@@Base+0xa2>
   2f588:	movs	r0, #2
   2f58a:	b.n	2f578 <raid56_recov@@Base+0x2c>
   2f58c:	adds	r0, r4, #1
   2f58e:	beq.n	2f628 <raid56_recov@@Base+0xdc>
   2f590:	cmp	r2, r4
   2f592:	bgt.n	2f61a <raid56_recov@@Base+0xce>
   2f594:	orrs.w	r0, r6, r7
   2f598:	bne.n	2f5fa <raid56_recov@@Base+0xae>
   2f59a:	subs	r0, r5, #2
   2f59c:	cmp	r0, r2
   2f59e:	bne.n	2f5a6 <raid56_recov@@Base+0x5a>
   2f5a0:	subs	r6, r5, #1
   2f5a2:	cmp	r6, r4
   2f5a4:	beq.n	2f610 <raid56_recov@@Base+0xc4>
   2f5a6:	cmp	r0, r4
   2f5a8:	ble.n	2f5cc <raid56_recov@@Base+0x80>
   2f5aa:	str	r3, [sp, #40]	; 0x28
   2f5ac:	mov	r0, r5
   2f5ae:	mov	r3, r4
   2f5b0:	add	sp, #12
   2f5b2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2f5b6:	b.w	2f340 <raid6_recov_data2@@Base>
   2f5ba:	mov	r2, r4
   2f5bc:	mov	r0, r5
   2f5be:	add	sp, #12
   2f5c0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2f5c4:	b.w	2f268 <raid5_gen_result@@Base>
   2f5c8:	mov	r2, r4
   2f5ca:	b.n	2f5be <raid56_recov@@Base+0x72>
   2f5cc:	subs	r0, r5, #1
   2f5ce:	cmp	r0, r4
   2f5d0:	bne.n	2f5de <raid56_recov@@Base+0x92>
   2f5d2:	mov	r0, r5
   2f5d4:	add	sp, #12
   2f5d6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2f5da:	b.w	2f49c <raid6_recov_datap@@Base>
   2f5de:	strd	r1, r3, [sp]
   2f5e2:	bl	2f268 <raid5_gen_result@@Base>
   2f5e6:	ldrd	r1, r3, [sp]
   2f5ea:	cmp	r0, #0
   2f5ec:	bge.n	2f610 <raid56_recov@@Base+0xc4>
   2f5ee:	add	sp, #12
   2f5f0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2f5f4:	mvn.w	r0, #21
   2f5f8:	b.n	2f5ee <raid56_recov@@Base+0xa2>
   2f5fa:	movs	r0, #1
   2f5fc:	b.n	2f5ee <raid56_recov@@Base+0xa2>
   2f5fe:	orrs.w	r2, r6, r7
   2f602:	bne.n	2f5ba <raid56_recov@@Base+0x6e>
   2f604:	subs	r0, r5, #1
   2f606:	cmp	r0, r4
   2f608:	beq.n	2f610 <raid56_recov@@Base+0xc4>
   2f60a:	subs	r2, r5, #2
   2f60c:	cmp	r2, r4
   2f60e:	bne.n	2f5c8 <raid56_recov@@Base+0x7c>
   2f610:	mov	r2, r3
   2f612:	mov	r0, r5
   2f614:	bl	2f1fc <raid6_gen_syndrome@@Base>
   2f618:	b.n	2f584 <raid56_recov@@Base+0x38>
   2f61a:	orrs.w	r0, r6, r7
   2f61e:	bne.n	2f5fa <raid56_recov@@Base+0xae>
   2f620:	mov	r0, r2
   2f622:	mov	r2, r4
   2f624:	mov	r4, r0
   2f626:	b.n	2f59a <raid56_recov@@Base+0x4e>
   2f628:	orrs.w	r0, r6, r7
   2f62c:	mov	r4, r2
   2f62e:	b.n	2f602 <raid56_recov@@Base+0xb6>

0002f630 <check_arg_type@@Base>:
   2f630:	ldr	r1, [pc, #128]	; (2f6b4 <check_arg_type@@Base+0x84>)
   2f632:	ldr	r2, [pc, #132]	; (2f6b8 <check_arg_type@@Base+0x88>)
   2f634:	push	{r4, lr}
   2f636:	add	r1, pc
   2f638:	sub.w	sp, sp, #4096	; 0x1000
   2f63c:	sub	sp, #8
   2f63e:	ldr	r2, [r1, r2]
   2f640:	add.w	r3, sp, #4096	; 0x1000
   2f644:	adds	r3, #4
   2f646:	ldr	r2, [r2, #0]
   2f648:	str	r2, [r3, #0]
   2f64a:	mov.w	r2, #0
   2f64e:	cbz	r0, 2f6a2 <check_arg_type@@Base+0x72>
   2f650:	add	r4, sp, #4
   2f652:	mov.w	r2, #4096	; 0x1000
   2f656:	mov	r1, r4
   2f658:	blx	87d8 <__realpath_chk@plt>
   2f65c:	cbz	r0, 2f698 <check_arg_type@@Base+0x68>
   2f65e:	mov	r0, r4
   2f660:	bl	3004c <path_is_block_device@@Base>
   2f664:	cmp	r0, #1
   2f666:	beq.n	2f6a8 <check_arg_type@@Base+0x78>
   2f668:	mov	r0, r4
   2f66a:	bl	300a8 <path_is_mount_point@@Base>
   2f66e:	cmp	r0, #1
   2f670:	beq.n	2f67e <check_arg_type@@Base+0x4e>
   2f672:	mov	r0, r4
   2f674:	bl	300f0 <path_is_reg_file@@Base>
   2f678:	cmp	r0, #0
   2f67a:	it	ne
   2f67c:	movne	r0, #4
   2f67e:	ldr	r1, [pc, #60]	; (2f6bc <check_arg_type@@Base+0x8c>)
   2f680:	add.w	r3, sp, #4096	; 0x1000
   2f684:	ldr	r2, [pc, #48]	; (2f6b8 <check_arg_type@@Base+0x88>)
   2f686:	adds	r3, #4
   2f688:	add	r1, pc
   2f68a:	ldr	r2, [r1, r2]
   2f68c:	ldr	r1, [r2, #0]
   2f68e:	ldr	r2, [r3, #0]
   2f690:	eors	r1, r2
   2f692:	beq.n	2f6ac <check_arg_type@@Base+0x7c>
   2f694:	blx	8708 <__stack_chk_fail@plt>
   2f698:	blx	897c <__errno_location@plt>
   2f69c:	ldr	r0, [r0, #0]
   2f69e:	negs	r0, r0
   2f6a0:	b.n	2f67e <check_arg_type@@Base+0x4e>
   2f6a2:	mvn.w	r0, #21
   2f6a6:	b.n	2f67e <check_arg_type@@Base+0x4e>
   2f6a8:	movs	r0, #3
   2f6aa:	b.n	2f67e <check_arg_type@@Base+0x4e>
   2f6ac:	add.w	sp, sp, #4096	; 0x1000
   2f6b0:	add	sp, #8
   2f6b2:	pop	{r4, pc}
   2f6b4:	ldrsb	r2, [r1, r5]
   2f6b6:	movs	r3, r0
   2f6b8:	lsls	r0, r5, #8
   2f6ba:	movs	r0, r0
   2f6bc:	ldrsb	r0, [r7, r3]
   2f6be:	movs	r3, r0

0002f6c0 <test_uuid_unique@@Base>:
   2f6c0:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   2f6c2:	movs	r1, #0
   2f6c4:	ldr	r2, [pc, #136]	; (2f750 <test_uuid_unique@@Base+0x90>)
   2f6c6:	mov	r4, r0
   2f6c8:	ldr	r3, [pc, #136]	; (2f754 <test_uuid_unique@@Base+0x94>)
   2f6ca:	add	r0, sp, #8
   2f6cc:	add	r2, pc
   2f6ce:	ldr	r3, [r2, r3]
   2f6d0:	ldr	r3, [r3, #0]
   2f6d2:	str	r3, [sp, #12]
   2f6d4:	mov.w	r3, #0
   2f6d8:	strd	r1, r1, [sp, #4]
   2f6dc:	blx	8b5c <blkid_get_cache@plt>
   2f6e0:	cmp	r0, #0
   2f6e2:	bge.n	2f702 <test_uuid_unique@@Base+0x42>
   2f6e4:	ldr	r0, [pc, #112]	; (2f758 <test_uuid_unique@@Base+0x98>)
   2f6e6:	movs	r4, #1
   2f6e8:	add	r0, pc
   2f6ea:	blx	8854 <puts@plt+0x4>
   2f6ee:	ldr	r2, [pc, #108]	; (2f75c <test_uuid_unique@@Base+0x9c>)
   2f6f0:	ldr	r3, [pc, #96]	; (2f754 <test_uuid_unique@@Base+0x94>)
   2f6f2:	add	r2, pc
   2f6f4:	ldr	r3, [r2, r3]
   2f6f6:	ldr	r2, [r3, #0]
   2f6f8:	ldr	r3, [sp, #12]
   2f6fa:	eors	r2, r3
   2f6fc:	beq.n	2f748 <test_uuid_unique@@Base+0x88>
   2f6fe:	blx	8708 <__stack_chk_fail@plt>
   2f702:	ldr	r0, [sp, #8]
   2f704:	add	r6, sp, #4
   2f706:	blx	8ba8 <blkid_probe_all@plt>
   2f70a:	ldr	r0, [sp, #8]
   2f70c:	blx	8714 <blkid_dev_iterate_begin@plt>
   2f710:	ldr	r1, [pc, #76]	; (2f760 <test_uuid_unique@@Base+0xa0>)
   2f712:	mov	r2, r4
   2f714:	add	r1, pc
   2f716:	mov	r5, r0
   2f718:	blx	877c <blkid_dev_set_search@plt>
   2f71c:	mov	r1, r6
   2f71e:	mov	r0, r5
   2f720:	blx	88c8 <blkid_dev_next@plt>
   2f724:	mov	r4, r0
   2f726:	cbz	r0, 2f72c <test_uuid_unique@@Base+0x6c>
   2f728:	movs	r4, #1
   2f72a:	b.n	2f73a <test_uuid_unique@@Base+0x7a>
   2f72c:	ldrd	r1, r0, [sp, #4]
   2f730:	blx	88d4 <blkid_verify@plt>
   2f734:	str	r0, [sp, #4]
   2f736:	cmp	r0, #0
   2f738:	beq.n	2f71c <test_uuid_unique@@Base+0x5c>
   2f73a:	mov	r0, r5
   2f73c:	blx	8a14 <blkid_dev_iterate_end@plt>
   2f740:	ldr	r0, [sp, #8]
   2f742:	blx	86c8 <blkid_put_cache@plt>
   2f746:	b.n	2f6ee <test_uuid_unique@@Base+0x2e>
   2f748:	mov	r0, r4
   2f74a:	add	sp, #16
   2f74c:	pop	{r4, r5, r6, pc}
   2f74e:	nop
   2f750:	ldrsb	r4, [r6, r2]
   2f752:	movs	r3, r0
   2f754:	lsls	r0, r5, #8
   2f756:	movs	r0, r0
   2f758:	subs	r7, #20
   2f75a:	movs	r2, r0
   2f75c:	ldrsb	r6, [r1, r2]
   2f75e:	movs	r3, r0
   2f760:	stmia	r7!, {r0, r1, r2, r4, r5, r6, r7}
	...

0002f764 <btrfs_add_to_fsid@@Base>:
   2f764:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f768:	sub	sp, #132	; 0x84
   2f76a:	mov	fp, r3
   2f76c:	ldr	r3, [pc, #596]	; (2f9c4 <btrfs_add_to_fsid@@Base+0x260>)
   2f76e:	str	r2, [sp, #48]	; 0x30
   2f770:	mov	r9, r0
   2f772:	ldr	r2, [pc, #596]	; (2f9c8 <btrfs_add_to_fsid@@Base+0x264>)
   2f774:	add	r3, pc
   2f776:	str	r3, [sp, #52]	; 0x34
   2f778:	ldr	r3, [pc, #592]	; (2f9cc <btrfs_add_to_fsid@@Base+0x268>)
   2f77a:	add	r2, pc
   2f77c:	ldr.w	r8, [r1, #464]	; 0x1d0
   2f780:	ldr	r7, [sp, #184]	; 0xb8
   2f782:	ldr	r3, [r2, r3]
   2f784:	ldr.w	r6, [r8, #308]	; 0x134
   2f788:	ldr	r3, [r3, #0]
   2f78a:	str	r3, [sp, #124]	; 0x7c
   2f78c:	mov.w	r3, #0
   2f790:	ldrd	r0, r1, [sp, #168]	; 0xa8
   2f794:	mov	r2, r7
   2f796:	ldr	r3, [r6, #112]	; 0x70
   2f798:	str	r3, [sp, #32]
   2f79a:	ldr	r3, [r6, #116]	; 0x74
   2f79c:	str	r3, [sp, #36]	; 0x24
   2f79e:	movs	r3, #0
   2f7a0:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   2f7a4:	umull	r3, r4, r7, r0
   2f7a8:	movs	r0, #1
   2f7aa:	strd	r3, r4, [sp, #16]
   2f7ae:	ldr	r3, [sp, #20]
   2f7b0:	mla	r3, r7, r1, r3
   2f7b4:	movs	r1, #128	; 0x80
   2f7b6:	str	r3, [sp, #20]
   2f7b8:	blx	8588 <calloc@plt+0x4>
   2f7bc:	mov	r4, r0
   2f7be:	cmp	r0, #0
   2f7c0:	beq.w	2f9ac <btrfs_add_to_fsid@@Base+0x248>
   2f7c4:	mov	r1, r7
   2f7c6:	movs	r0, #1
   2f7c8:	blx	8588 <calloc@plt+0x4>
   2f7cc:	mov	r5, r0
   2f7ce:	cmp	r0, #0
   2f7d0:	beq.w	2f9ac <btrfs_add_to_fsid@@Base+0x248>
   2f7d4:	add.w	r3, r4, #112	; 0x70
   2f7d8:	str	r3, [sp, #44]	; 0x2c
   2f7da:	mov	r0, r3
   2f7dc:	blx	8a54 <uuid_generate@plt>
   2f7e0:	ldr	r2, [sp, #176]	; 0xb0
   2f7e2:	movs	r3, #0
   2f7e4:	str	r7, [r4, #96]	; 0x60
   2f7e6:	strd	r3, r3, [r4, #64]	; 0x40
   2f7ea:	mov	r0, fp
   2f7ec:	str	r2, [r4, #92]	; 0x5c
   2f7ee:	mov	sl, r3
   2f7f0:	ldr	r2, [sp, #180]	; 0xb4
   2f7f2:	strd	r3, r3, [r4, #104]	; 0x68
   2f7f6:	strd	r3, r3, [r4, #80]	; 0x50
   2f7fa:	str	r2, [r4, #88]	; 0x58
   2f7fc:	ldr	r2, [sp, #48]	; 0x30
   2f7fe:	strd	r3, r3, [r4, #16]
   2f802:	str	r2, [r4, #24]
   2f804:	movs	r2, #1
   2f806:	str	r2, [r4, #28]
   2f808:	ldrd	r1, r2, [sp, #16]
   2f80c:	strd	r1, r2, [r4, #72]	; 0x48
   2f810:	ldr.w	r2, [r8, #36]	; 0x24
   2f814:	str	r2, [r4, #8]
   2f816:	blx	86f0 <strdup@plt+0x4>
   2f81a:	str	r0, [r4, #32]
   2f81c:	cmp	r0, #0
   2f81e:	beq.w	2f9b4 <btrfs_add_to_fsid@@Base+0x250>
   2f822:	ldrd	r0, r1, [sp, #32]
   2f826:	strd	sl, sl, [sp, #24]
   2f82a:	ldrd	sl, fp, [sp, #16]
   2f82e:	adds.w	r2, sl, r0
   2f832:	adcs.w	r3, fp, r1
   2f836:	mov	fp, r2
   2f838:	itt	cs
   2f83a:	movcs	r0, #1
   2f83c:	movcs	r1, #0
   2f83e:	mov	sl, r3
   2f840:	it	cs
   2f842:	strdcs	r0, r1, [sp, #24]
   2f846:	ldrd	r2, r3, [sp, #24]
   2f84a:	orrs	r3, r2
   2f84c:	beq.n	2f87a <btrfs_add_to_fsid@@Base+0x116>
   2f84e:	ldrd	r0, r1, [sp, #16]
   2f852:	mov.w	r2, #512	; 0x200
   2f856:	bl	30c00 <pretty_size_mode@@Base>
   2f85a:	ldrd	r2, r3, [sp, #16]
   2f85e:	mvn.w	r9, #74	; 0x4a
   2f862:	str	r0, [sp, #0]
   2f864:	ldr	r0, [pc, #360]	; (2f9d0 <btrfs_add_to_fsid@@Base+0x26c>)
   2f866:	add	r0, pc
   2f868:	bl	17b7c <__btrfs_error@@Base>
   2f86c:	mov	r0, r4
   2f86e:	blx	8620 <free@plt+0x4>
   2f872:	mov	r0, r5
   2f874:	blx	8620 <free@plt+0x4>
   2f878:	b.n	2f998 <btrfs_add_to_fsid@@Base+0x234>
   2f87a:	mov	r0, r9
   2f87c:	mov	r2, r4
   2f87e:	mov	r1, r8
   2f880:	strd	r4, r4, [r4]
   2f884:	bl	28b98 <btrfs_add_device@@Base>
   2f888:	mov	r9, r0
   2f88a:	cmp	r0, #0
   2f88c:	bne.n	2f86c <btrfs_add_to_fsid@@Base+0x108>
   2f88e:	ldr.w	r3, [r6, #136]	; 0x88
   2f892:	mov	r1, r6
   2f894:	ldr.w	r2, [r6, #140]	; 0x8c
   2f898:	mov	r0, r5
   2f89a:	adds	r3, #1
   2f89c:	str.w	fp, [r6, #112]	; 0x70
   2f8a0:	adc.w	r2, r2, #0
   2f8a4:	str.w	r3, [r6, #136]	; 0x88
   2f8a8:	str.w	r2, [r6, #140]	; 0x8c
   2f8ac:	movw	r2, #3531	; 0xdcb
   2f8b0:	str.w	sl, [r6, #116]	; 0x74
   2f8b4:	addw	r6, r5, #267	; 0x10b
   2f8b8:	blx	866c <memcpy@plt+0x4>
   2f8bc:	movs	r3, #0
   2f8be:	mov.w	r2, #65536	; 0x10000
   2f8c2:	strd	r2, r3, [r5, #48]	; 0x30
   2f8c6:	ldr	r3, [r4, #64]	; 0x40
   2f8c8:	str.w	r3, [r5, #201]	; 0xc9
   2f8cc:	ldr	r3, [r4, #68]	; 0x44
   2f8ce:	str.w	r3, [r5, #205]	; 0xcd
   2f8d2:	ldr	r3, [r4, #104]	; 0x68
   2f8d4:	str.w	r3, [r5, #237]	; 0xed
   2f8d8:	ldr	r3, [r4, #108]	; 0x6c
   2f8da:	str.w	r3, [r5, #241]	; 0xf1
   2f8de:	ldr	r3, [r4, #88]	; 0x58
   2f8e0:	str.w	r3, [r5, #225]	; 0xe1
   2f8e4:	ldr	r3, [r4, #92]	; 0x5c
   2f8e6:	str.w	r3, [r5, #229]	; 0xe5
   2f8ea:	ldr	r3, [r4, #96]	; 0x60
   2f8ec:	str.w	r3, [r5, #233]	; 0xe9
   2f8f0:	ldr	r3, [r4, #72]	; 0x48
   2f8f2:	str.w	r3, [r5, #209]	; 0xd1
   2f8f6:	ldr	r3, [r4, #76]	; 0x4c
   2f8f8:	str.w	r3, [r5, #213]	; 0xd5
   2f8fc:	ldr	r3, [r4, #80]	; 0x50
   2f8fe:	str.w	r3, [r5, #217]	; 0xd9
   2f902:	ldr	r3, [r4, #84]	; 0x54
   2f904:	str.w	r3, [r5, #221]	; 0xdd
   2f908:	ldr	r3, [sp, #44]	; 0x2c
   2f90a:	add.w	ip, r3, #16
   2f90e:	mov	r2, r3
   2f910:	adds	r6, #8
   2f912:	ldmia	r2!, {r0, r1}
   2f914:	cmp	r2, ip
   2f916:	str.w	r0, [r6, #-8]
   2f91a:	mov	r3, r2
   2f91c:	str.w	r1, [r6, #-4]
   2f920:	bne.n	2f90e <btrfs_add_to_fsid@@Base+0x1aa>
   2f922:	mov.w	r2, #65536	; 0x10000
   2f926:	movs	r3, #0
   2f928:	ldr	r0, [sp, #48]	; 0x30
   2f92a:	mov	r1, r5
   2f92c:	strd	r2, r3, [sp]
   2f930:	mov	r2, r7
   2f932:	blx	8a20 <pwrite64@plt>
   2f936:	cmp	r0, r7
   2f938:	beq.n	2f97a <btrfs_add_to_fsid@@Base+0x216>
   2f93a:	ldr	r2, [sp, #52]	; 0x34
   2f93c:	add	r4, sp, #60	; 0x3c
   2f93e:	ldr	r3, [pc, #148]	; (2f9d4 <btrfs_add_to_fsid@@Base+0x270>)
   2f940:	movs	r1, #1
   2f942:	ldr	r0, [r2, r3]
   2f944:	ldr	r3, [pc, #144]	; (2f9d8 <btrfs_add_to_fsid@@Base+0x274>)
   2f946:	ldr	r2, [pc, #148]	; (2f9dc <btrfs_add_to_fsid@@Base+0x278>)
   2f948:	add	r3, pc
   2f94a:	str	r3, [sp, #8]
   2f94c:	ldr	r3, [pc, #144]	; (2f9e0 <btrfs_add_to_fsid@@Base+0x27c>)
   2f94e:	add	r2, pc
   2f950:	str	r1, [sp, #12]
   2f952:	add	r3, pc
   2f954:	str	r3, [sp, #4]
   2f956:	movs	r3, #192	; 0xc0
   2f958:	str	r3, [sp, #0]
   2f95a:	ldr	r3, [pc, #136]	; (2f9e4 <btrfs_add_to_fsid@@Base+0x280>)
   2f95c:	ldr	r0, [r0, #0]
   2f95e:	add	r3, pc
   2f960:	blx	8a64 <__fprintf_chk@plt+0x4>
   2f964:	movs	r1, #16
   2f966:	mov	r0, r4
   2f968:	blx	88bc <backtrace@plt>
   2f96c:	movs	r2, #2
   2f96e:	mov	r1, r0
   2f970:	mov	r0, r4
   2f972:	blx	8bcc <backtrace_symbols_fd@plt>
   2f976:	blx	8b84 <abort@plt>
   2f97a:	mov	r0, r5
   2f97c:	blx	8620 <free@plt+0x4>
   2f980:	ldr.w	r2, [r8, #352]	; 0x160
   2f984:	mov	r3, r2
   2f986:	ldr.w	r1, [r3, #72]!
   2f98a:	str	r4, [r1, #4]
   2f98c:	strd	r1, r3, [r4]
   2f990:	str	r4, [r2, #72]	; 0x48
   2f992:	ldr.w	r3, [r8, #352]	; 0x160
   2f996:	str	r3, [r4, #12]
   2f998:	ldr	r2, [pc, #76]	; (2f9e8 <btrfs_add_to_fsid@@Base+0x284>)
   2f99a:	ldr	r3, [pc, #48]	; (2f9cc <btrfs_add_to_fsid@@Base+0x268>)
   2f99c:	add	r2, pc
   2f99e:	ldr	r3, [r2, r3]
   2f9a0:	ldr	r2, [r3, #0]
   2f9a2:	ldr	r3, [sp, #124]	; 0x7c
   2f9a4:	eors	r2, r3
   2f9a6:	beq.n	2f9ba <btrfs_add_to_fsid@@Base+0x256>
   2f9a8:	blx	8708 <__stack_chk_fail@plt>
   2f9ac:	mvn.w	r9, #11
   2f9b0:	movs	r5, #0
   2f9b2:	b.n	2f86c <btrfs_add_to_fsid@@Base+0x108>
   2f9b4:	mvn.w	r9, #11
   2f9b8:	b.n	2f86c <btrfs_add_to_fsid@@Base+0x108>
   2f9ba:	mov	r0, r9
   2f9bc:	add	sp, #132	; 0x84
   2f9be:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f9c2:	nop
   2f9c4:	ldrsb	r4, [r1, r0]
   2f9c6:	movs	r3, r0
   2f9c8:	ldrsb	r6, [r0, r0]
   2f9ca:	movs	r3, r0
   2f9cc:	lsls	r0, r5, #8
   2f9ce:	movs	r0, r0
   2f9d0:	subs	r5, #181	; 0xb5
   2f9d2:	movs	r2, r0
   2f9d4:	lsls	r0, r7, #8
   2f9d6:	movs	r0, r0
   2f9d8:	subs	r5, #43	; 0x2b
   2f9da:	movs	r2, r0
   2f9dc:	add	r5, pc, #336	; (adr r5, 2fb30 <btrfs_device_already_in_root@@Base+0x3c>)
   2f9de:	movs	r0, r0
   2f9e0:	subs	r5, #226	; 0xe2
   2f9e2:	movs	r2, r0
   2f9e4:	subs	r5, #0
   2f9e6:	movs	r2, r0
   2f9e8:	strh	r4, [r4, r7]
   2f9ea:	movs	r3, r0

0002f9ec <btrfs_register_one_device@@Base>:
   2f9ec:	ldr	r1, [pc, #168]	; (2fa98 <btrfs_register_one_device@@Base+0xac>)
   2f9ee:	ldr	r2, [pc, #172]	; (2fa9c <btrfs_register_one_device@@Base+0xb0>)
   2f9f0:	push	{r4, r5, r6, r7, lr}
   2f9f2:	add	r1, pc
   2f9f4:	sub.w	sp, sp, #4096	; 0x1000
   2f9f8:	mov	r6, r0
   2f9fa:	sub	sp, #12
   2f9fc:	ldr	r0, [pc, #160]	; (2faa0 <btrfs_register_one_device@@Base+0xb4>)
   2f9fe:	ldr	r2, [r1, r2]
   2fa00:	add.w	r3, sp, #4096	; 0x1000
   2fa04:	add	r0, pc
   2fa06:	movs	r1, #2
   2fa08:	adds	r3, #4
   2fa0a:	ldr	r2, [r2, #0]
   2fa0c:	str	r2, [r3, #0]
   2fa0e:	mov.w	r2, #0
   2fa12:	blx	8844 <open64@plt>
   2fa16:	subs	r5, r0, #0
   2fa18:	bge.n	2fa44 <btrfs_register_one_device@@Base+0x58>
   2fa1a:	ldr	r0, [pc, #136]	; (2faa4 <btrfs_register_one_device@@Base+0xb8>)
   2fa1c:	add	r0, pc
   2fa1e:	bl	17b00 <__btrfs_warning@@Base>
   2fa22:	blx	897c <__errno_location@plt>
   2fa26:	ldr	r4, [r0, #0]
   2fa28:	negs	r4, r4
   2fa2a:	ldr	r1, [pc, #124]	; (2faa8 <btrfs_register_one_device@@Base+0xbc>)
   2fa2c:	add.w	r3, sp, #4096	; 0x1000
   2fa30:	ldr	r2, [pc, #104]	; (2fa9c <btrfs_register_one_device@@Base+0xb0>)
   2fa32:	adds	r3, #4
   2fa34:	add	r1, pc
   2fa36:	ldr	r2, [r1, r2]
   2fa38:	ldr	r1, [r2, #0]
   2fa3a:	ldr	r2, [r3, #0]
   2fa3c:	eors	r1, r2
   2fa3e:	beq.n	2fa88 <btrfs_register_one_device@@Base+0x9c>
   2fa40:	blx	8708 <__stack_chk_fail@plt>
   2fa44:	mov	r4, sp
   2fa46:	add	r7, sp, #8
   2fa48:	mov.w	r2, #4096	; 0x1000
   2fa4c:	movs	r1, #0
   2fa4e:	mov	r0, r4
   2fa50:	blx	89bc <memset@plt+0x4>
   2fa54:	movw	r2, #4088	; 0xff8
   2fa58:	mov	r1, r6
   2fa5a:	mov	r0, r7
   2fa5c:	bl	30280 <__strncpy_null@@Base>
   2fa60:	mov	r2, r4
   2fa62:	ldr	r1, [pc, #48]	; (2fa94 <btrfs_register_one_device@@Base+0xa8>)
   2fa64:	mov	r0, r5
   2fa66:	blx	87b4 <ioctl@plt>
   2fa6a:	subs	r4, r0, #0
   2fa6c:	bge.n	2fa80 <btrfs_register_one_device@@Base+0x94>
   2fa6e:	ldr	r0, [pc, #60]	; (2faac <btrfs_register_one_device@@Base+0xc0>)
   2fa70:	mov	r1, r6
   2fa72:	add	r0, pc
   2fa74:	bl	17b7c <__btrfs_error@@Base>
   2fa78:	blx	897c <__errno_location@plt>
   2fa7c:	ldr	r4, [r0, #0]
   2fa7e:	negs	r4, r4
   2fa80:	mov	r0, r5
   2fa82:	blx	8b9c <close@plt>
   2fa86:	b.n	2fa2a <btrfs_register_one_device@@Base+0x3e>
   2fa88:	mov	r0, r4
   2fa8a:	add.w	sp, sp, #4096	; 0x1000
   2fa8e:	add	sp, #12
   2fa90:	pop	{r4, r5, r6, r7, pc}
   2fa92:	nop
   2fa94:	str	r4, [sp, #16]
   2fa96:	str	r0, [r0, r0]
   2fa98:	strh	r6, [r1, r6]
   2fa9a:	movs	r3, r0
   2fa9c:	lsls	r0, r5, #8
   2fa9e:	movs	r0, r0
   2faa0:	subs	r4, #129	; 0x81
   2faa2:	movs	r2, r0
   2faa4:	subs	r4, #124	; 0x7c
   2faa6:	movs	r2, r0
   2faa8:	strh	r4, [r1, r5]
   2faaa:	movs	r3, r0
   2faac:	subs	r4, #106	; 0x6a
   2faae:	movs	r2, r0

0002fab0 <btrfs_register_all_devices@@Base>:
   2fab0:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   2fab4:	bl	2ae84 <btrfs_scanned_uuids@@Base>
   2fab8:	movs	r5, #0
   2faba:	ldr	r4, [r0, #0]
   2fabc:	mov	r6, r0
   2fabe:	mov	r0, r5
   2fac0:	subs	r4, #80	; 0x50
   2fac2:	add.w	r3, r4, #80	; 0x50
   2fac6:	cmp	r6, r3
   2fac8:	bne.n	2fad0 <btrfs_register_all_devices@@Base+0x20>
   2faca:	mov	r0, r5
   2facc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2fad0:	mov	r8, r4
   2fad2:	ldr.w	r7, [r8, #72]!
   2fad6:	cmp	r7, r8
   2fad8:	bne.n	2fae0 <btrfs_register_all_devices@@Base+0x30>
   2fada:	ldr	r4, [r4, #80]	; 0x50
   2fadc:	subs	r4, #80	; 0x50
   2fade:	b.n	2fac2 <btrfs_register_all_devices@@Base+0x12>
   2fae0:	ldr	r3, [r7, #32]
   2fae2:	ldrb	r2, [r3, #0]
   2fae4:	cbz	r2, 2faec <btrfs_register_all_devices@@Base+0x3c>
   2fae6:	mov	r0, r3
   2fae8:	bl	2f9ec <btrfs_register_one_device@@Base>
   2faec:	cbz	r0, 2faf0 <btrfs_register_all_devices@@Base+0x40>
   2faee:	adds	r5, #1
   2faf0:	ldr	r7, [r7, #0]
   2faf2:	b.n	2fad6 <btrfs_register_all_devices@@Base+0x26>

0002faf4 <btrfs_device_already_in_root@@Base>:
   2faf4:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2faf6:	mov	r6, r0
   2faf8:	mov.w	r0, #4096	; 0x1000
   2fafc:	mov	r7, r1
   2fafe:	mov	r4, r2
   2fb00:	blx	8870 <malloc@plt+0x4>
   2fb04:	mov	r5, r0
   2fb06:	cbz	r0, 2fb6e <btrfs_device_already_in_root@@Base+0x7a>
   2fb08:	asrs	r3, r4, #31
   2fb0a:	mov	r2, r4
   2fb0c:	mov	r1, r0
   2fb0e:	strd	r2, r3, [sp]
   2fb12:	mov	r0, r7
   2fb14:	mov.w	r2, #4096	; 0x1000
   2fb18:	blx	8808 <pread64@plt>
   2fb1c:	cmp.w	r0, #4096	; 0x1000
   2fb20:	mov	r4, r0
   2fb22:	bne.n	2fb5e <btrfs_device_already_in_root@@Base+0x6a>
   2fb24:	ldrd	r2, r3, [r5, #64]	; 0x40
   2fb28:	add	r1, pc, #76	; (adr r1, 2fb78 <btrfs_device_already_in_root@@Base+0x84>)
   2fb2a:	ldrd	r0, r1, [r1]
   2fb2e:	cmp	r3, r1
   2fb30:	it	eq
   2fb32:	cmpeq	r2, r0
   2fb34:	beq.n	2fb44 <btrfs_device_already_in_root@@Base+0x50>
   2fb36:	add	r1, pc, #72	; (adr r1, 2fb80 <btrfs_device_already_in_root@@Base+0x8c>)
   2fb38:	ldrd	r0, r1, [r1]
   2fb3c:	cmp	r3, r1
   2fb3e:	it	eq
   2fb40:	cmpeq	r2, r0
   2fb42:	bne.n	2fb6a <btrfs_device_already_in_root@@Base+0x76>
   2fb44:	ldr.w	r3, [r6, #464]	; 0x1d0
   2fb48:	add.w	r0, r5, #32
   2fb4c:	movs	r2, #16
   2fb4e:	ldr.w	r1, [r3, #308]	; 0x134
   2fb52:	adds	r1, #32
   2fb54:	blx	86a0 <memcmp@plt+0x4>
   2fb58:	clz	r4, r0
   2fb5c:	lsrs	r4, r4, #5
   2fb5e:	mov	r0, r5
   2fb60:	blx	8620 <free@plt+0x4>
   2fb64:	mov	r0, r4
   2fb66:	add	sp, #12
   2fb68:	pop	{r4, r5, r6, r7, pc}
   2fb6a:	movs	r4, #0
   2fb6c:	b.n	2fb5e <btrfs_device_already_in_root@@Base+0x6a>
   2fb6e:	mvn.w	r4, #11
   2fb72:	b.n	2fb64 <btrfs_device_already_in_root@@Base+0x70>
   2fb74:	nop.w
   2fb78:	negs	r7, r3
   2fb7a:	strh	r0, [r1, r1]
   2fb7c:	strh	r6, [r4, r5]
   2fb7e:	ldr	r5, [pc, #380]	; (2fcfc <btrfs_scan_devices@@Base+0xb4>)
   2fb80:	tst	r1, r4
   2fb82:	strh	r0, [r1, r1]
   2fb84:	strh	r6, [r4, r5]
   2fb86:	ldr	r5, [pc, #380]	; (2fd04 <btrfs_scan_devices@@Base+0xbc>)

0002fb88 <is_seen_fsid@@Base>:
   2fb88:	push	{r3, r4, r5, lr}
   2fb8a:	mov	r5, r0
   2fb8c:	ldrb	r3, [r0, #0]
   2fb8e:	ldr.w	r4, [r1, r3, lsl #2]
   2fb92:	cbnz	r4, 2fb98 <is_seen_fsid@@Base+0x10>
   2fb94:	mov	r0, r4
   2fb96:	pop	{r3, r4, r5, pc}
   2fb98:	movs	r2, #16
   2fb9a:	mov	r1, r5
   2fb9c:	mov	r0, r4
   2fb9e:	blx	86a0 <memcmp@plt+0x4>
   2fba2:	cbz	r0, 2fba8 <is_seen_fsid@@Base+0x20>
   2fba4:	ldr	r4, [r4, #16]
   2fba6:	b.n	2fb92 <is_seen_fsid@@Base+0xa>
   2fba8:	movs	r0, #1
   2fbaa:	b.n	2fb96 <is_seen_fsid@@Base+0xe>

0002fbac <add_seen_fsid@@Base>:
   2fbac:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   2fbb0:	mov	r5, r0
   2fbb2:	ldrb.w	sl, [r0]
   2fbb6:	mov	r7, r1
   2fbb8:	mov	r9, r2
   2fbba:	mov	r8, r3
   2fbbc:	ldr.w	r4, [r1, sl, lsl #2]
   2fbc0:	cbnz	r4, 2fbf8 <add_seen_fsid@@Base+0x4c>
   2fbc2:	movs	r0, #28
   2fbc4:	blx	8870 <malloc@plt+0x4>
   2fbc8:	mov	r6, r0
   2fbca:	cbz	r0, 2fc18 <add_seen_fsid@@Base+0x6c>
   2fbcc:	add.w	ip, r5, #16
   2fbd0:	mov	r2, r0
   2fbd2:	movs	r3, #0
   2fbd4:	str	r3, [r0, #16]
   2fbd6:	ldr	r0, [r5, #0]
   2fbd8:	adds	r5, #8
   2fbda:	ldr.w	r1, [r5, #-4]
   2fbde:	cmp	r5, ip
   2fbe0:	mov	r3, r2
   2fbe2:	stmia	r3!, {r0, r1}
   2fbe4:	mov	r2, r3
   2fbe6:	bne.n	2fbd6 <add_seen_fsid@@Base+0x2a>
   2fbe8:	strd	r8, r9, [r6, #20]
   2fbec:	cbz	r4, 2fc0c <add_seen_fsid@@Base+0x60>
   2fbee:	str	r6, [r4, #16]
   2fbf0:	movs	r0, #0
   2fbf2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   2fbf6:	mov	r4, r3
   2fbf8:	movs	r2, #16
   2fbfa:	mov	r1, r5
   2fbfc:	mov	r0, r4
   2fbfe:	blx	86a0 <memcmp@plt+0x4>
   2fc02:	cbz	r0, 2fc12 <add_seen_fsid@@Base+0x66>
   2fc04:	ldr	r3, [r4, #16]
   2fc06:	cmp	r3, #0
   2fc08:	bne.n	2fbf6 <add_seen_fsid@@Base+0x4a>
   2fc0a:	b.n	2fbc2 <add_seen_fsid@@Base+0x16>
   2fc0c:	str.w	r6, [r7, sl, lsl #2]
   2fc10:	b.n	2fbf0 <add_seen_fsid@@Base+0x44>
   2fc12:	mvn.w	r0, #16
   2fc16:	b.n	2fbf2 <add_seen_fsid@@Base+0x46>
   2fc18:	mvn.w	r0, #11
   2fc1c:	b.n	2fbf2 <add_seen_fsid@@Base+0x46>

0002fc1e <free_seen_fsid@@Base>:
   2fc1e:	push	{r3, r4, r5, r6, r7, lr}
   2fc20:	subs	r6, r0, #4
   2fc22:	add.w	r5, r0, #1020	; 0x3fc
   2fc26:	ldr.w	r4, [r6, #4]!
   2fc2a:	cbnz	r4, 2fc34 <free_seen_fsid@@Base+0x16>
   2fc2c:	cmp	r6, r5
   2fc2e:	str	r4, [r6, #0]
   2fc30:	bne.n	2fc26 <free_seen_fsid@@Base+0x8>
   2fc32:	pop	{r3, r4, r5, r6, r7, pc}
   2fc34:	ldrd	r7, r1, [r4, #16]
   2fc38:	ldr	r0, [r4, #24]
   2fc3a:	bl	31460 <close_file_or_dir@@Base>
   2fc3e:	mov	r0, r4
   2fc40:	blx	8620 <free@plt+0x4>
   2fc44:	mov	r4, r7
   2fc46:	b.n	2fc2a <free_seen_fsid@@Base+0xc>

0002fc48 <btrfs_scan_devices@@Base>:
   2fc48:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fc4c:	vpush	{d8}
   2fc50:	ldr	r1, [pc, #324]	; (2fd98 <btrfs_scan_devices@@Base+0x150>)
   2fc52:	ldr	r2, [pc, #328]	; (2fd9c <btrfs_scan_devices@@Base+0x154>)
   2fc54:	add	r1, pc
   2fc56:	sub.w	sp, sp, #4128	; 0x1020
   2fc5a:	sub	sp, #20
   2fc5c:	ldr	r2, [r1, r2]
   2fc5e:	add.w	r3, sp, #4128	; 0x1020
   2fc62:	add	r4, sp, #48	; 0x30
   2fc64:	ldr	r2, [r2, #0]
   2fc66:	str	r2, [r3, #12]
   2fc68:	mov.w	r2, #0
   2fc6c:	ldr	r2, [pc, #304]	; (2fda0 <btrfs_scan_devices@@Base+0x158>)
   2fc6e:	adds	r3, #12
   2fc70:	sub.w	sl, r4, #20
   2fc74:	add	r2, pc
   2fc76:	movs	r3, #0
   2fc78:	str.w	r3, [r4, #-24]
   2fc7c:	ldr	r5, [r2, #0]
   2fc7e:	str.w	r3, [r4, #-20]
   2fc82:	cmp	r5, #0
   2fc84:	bne.n	2fd84 <btrfs_scan_devices@@Base+0x13c>
   2fc86:	mov	r1, r5
   2fc88:	mov	r0, sl
   2fc8a:	blx	8b5c <blkid_get_cache@plt>
   2fc8e:	subs	r6, r0, #0
   2fc90:	bge.n	2fcbe <btrfs_scan_devices@@Base+0x76>
   2fc92:	blx	897c <__errno_location@plt>
   2fc96:	negs	r3, r6
   2fc98:	mov	r5, r6
   2fc9a:	str	r3, [r0, #0]
   2fc9c:	ldr	r0, [pc, #260]	; (2fda4 <btrfs_scan_devices@@Base+0x15c>)
   2fc9e:	add	r0, pc
   2fca0:	bl	17b7c <__btrfs_error@@Base>
   2fca4:	ldr	r1, [pc, #256]	; (2fda8 <btrfs_scan_devices@@Base+0x160>)
   2fca6:	add.w	r3, sp, #4128	; 0x1020
   2fcaa:	ldr	r2, [pc, #240]	; (2fd9c <btrfs_scan_devices@@Base+0x154>)
   2fcac:	adds	r3, #12
   2fcae:	add	r1, pc
   2fcb0:	ldr	r2, [r1, r2]
   2fcb2:	ldr	r1, [r2, #0]
   2fcb4:	ldr	r2, [r3, #0]
   2fcb6:	eors	r1, r2
   2fcb8:	beq.n	2fd88 <btrfs_scan_devices@@Base+0x140>
   2fcba:	blx	8708 <__stack_chk_fail@plt>
   2fcbe:	ldr.w	r0, [sl]
   2fcc2:	blx	8ba8 <blkid_probe_all@plt>
   2fcc6:	ldr.w	r0, [sl]
   2fcca:	blx	8714 <blkid_dev_iterate_begin@plt>
   2fcce:	ldr	r2, [pc, #220]	; (2fdac <btrfs_scan_devices@@Base+0x164>)
   2fcd0:	ldr	r1, [pc, #220]	; (2fdb0 <btrfs_scan_devices@@Base+0x168>)
   2fcd2:	add	r2, pc
   2fcd4:	ldr.w	fp, [pc, #220]	; 2fdb4 <btrfs_scan_devices@@Base+0x16c>
   2fcd8:	add	r1, pc
   2fcda:	add	fp, pc
   2fcdc:	mov	r9, r0
   2fcde:	blx	877c <blkid_dev_set_search@plt>
   2fce2:	ldr	r3, [pc, #212]	; (2fdb8 <btrfs_scan_devices@@Base+0x170>)
   2fce4:	add	r3, pc
   2fce6:	vmov	s16, r3
   2fcea:	sub.w	r7, r4, #24
   2fcee:	mov	r1, r7
   2fcf0:	mov	r0, r9
   2fcf2:	blx	88c8 <blkid_dev_next@plt>
   2fcf6:	mov	r6, r0
   2fcf8:	cbz	r0, 2fd12 <btrfs_scan_devices@@Base+0xca>
   2fcfa:	mov	r0, r9
   2fcfc:	blx	8a14 <blkid_dev_iterate_end@plt>
   2fd00:	ldr.w	r0, [r4, #-20]
   2fd04:	blx	86c8 <blkid_put_cache@plt>
   2fd08:	ldr	r3, [pc, #176]	; (2fdbc <btrfs_scan_devices@@Base+0x174>)
   2fd0a:	movs	r2, #1
   2fd0c:	add	r3, pc
   2fd0e:	str	r2, [r3, #0]
   2fd10:	b.n	2fca4 <btrfs_scan_devices@@Base+0x5c>
   2fd12:	ldr	r1, [r7, #0]
   2fd14:	ldr.w	r0, [sl]
   2fd18:	blx	88d4 <blkid_verify@plt>
   2fd1c:	str	r0, [r7, #0]
   2fd1e:	cmp	r0, #0
   2fd20:	beq.n	2fcee <btrfs_scan_devices@@Base+0xa6>
   2fd22:	blx	8b10 <blkid_dev_devname@plt>
   2fd26:	sub.w	r8, r4, #4
   2fd2a:	mov.w	r2, #4096	; 0x1000
   2fd2e:	mov	r1, r0
   2fd30:	mov	r0, r8
   2fd32:	bl	30280 <__strncpy_null@@Base>
   2fd36:	mov	r1, r6
   2fd38:	mov	r0, r8
   2fd3a:	blx	8844 <open64@plt>
   2fd3e:	subs	r7, r0, #0
   2fd40:	bge.n	2fd4c <btrfs_scan_devices@@Base+0x104>
   2fd42:	mov	r1, r8
   2fd44:	mov	r0, fp
   2fd46:	bl	17b7c <__btrfs_error@@Base>
   2fd4a:	b.n	2fcea <btrfs_scan_devices@@Base+0xa2>
   2fd4c:	mov.w	r2, #65536	; 0x10000
   2fd50:	movs	r3, #0
   2fd52:	str	r6, [sp, #8]
   2fd54:	mov	r1, r8
   2fd56:	strd	r2, r3, [sp]
   2fd5a:	sub.w	r3, r4, #16
   2fd5e:	sub.w	r2, r4, #28
   2fd62:	bl	287ec <btrfs_scan_one_device@@Base>
   2fd66:	mov	r6, r0
   2fd68:	cbz	r0, 2fd7c <btrfs_scan_devices@@Base+0x134>
   2fd6a:	blx	897c <__errno_location@plt>
   2fd6e:	negs	r6, r6
   2fd70:	mov	r1, r8
   2fd72:	str	r6, [r0, #0]
   2fd74:	vmov	r0, s16
   2fd78:	bl	17b7c <__btrfs_error@@Base>
   2fd7c:	mov	r0, r7
   2fd7e:	blx	8b9c <close@plt>
   2fd82:	b.n	2fcea <btrfs_scan_devices@@Base+0xa2>
   2fd84:	mov	r5, r3
   2fd86:	b.n	2fca4 <btrfs_scan_devices@@Base+0x5c>
   2fd88:	mov	r0, r5
   2fd8a:	add.w	sp, sp, #4128	; 0x1020
   2fd8e:	add	sp, #20
   2fd90:	vpop	{d8}
   2fd94:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fd98:	str	r4, [r5, r4]
   2fd9a:	movs	r3, r0
   2fd9c:	lsls	r0, r5, #8
   2fd9e:	movs	r0, r0
   2fda0:	str	r0, [r5, #100]	; 0x64
   2fda2:	movs	r3, r0
   2fda4:	subs	r2, #93	; 0x5d
   2fda6:	movs	r2, r0
   2fda8:	str	r2, [r2, r3]
   2fdaa:	movs	r3, r0
   2fdac:	subs	r2, #68	; 0x44
   2fdae:	movs	r2, r0
   2fdb0:	subs	r2, #68	; 0x44
   2fdb2:	movs	r2, r0
   2fdb4:	subs	r3, #101	; 0x65
   2fdb6:	movs	r2, r0
   2fdb8:	subs	r2, #61	; 0x3d
   2fdba:	movs	r2, r0
   2fdbc:	str	r0, [r2, #92]	; 0x5c
   2fdbe:	movs	r3, r0
   2fdc0:	ldr	r2, [pc, #100]	; (2fe28 <btrfs_scan_devices@@Base+0x1e0>)
   2fdc2:	ldr	r3, [pc, #104]	; (2fe2c <btrfs_scan_devices@@Base+0x1e4>)
   2fdc4:	add	r2, pc
   2fdc6:	push	{lr}
   2fdc8:	sub	sp, #116	; 0x74
   2fdca:	ldr	r3, [r2, r3]
   2fdcc:	mov	r1, sp
   2fdce:	ldr	r3, [r3, #0]
   2fdd0:	str	r3, [sp, #108]	; 0x6c
   2fdd2:	mov.w	r3, #0
   2fdd6:	bl	39db8 <__libc_csu_fini@@Base+0x1c>
   2fdda:	cmp	r0, #0
   2fddc:	bge.n	2fdfa <btrfs_scan_devices@@Base+0x1b2>
   2fdde:	blx	897c <__errno_location@plt>
   2fde2:	ldr	r0, [r0, #0]
   2fde4:	negs	r0, r0
   2fde6:	ldr	r2, [pc, #72]	; (2fe30 <btrfs_scan_devices@@Base+0x1e8>)
   2fde8:	ldr	r3, [pc, #64]	; (2fe2c <btrfs_scan_devices@@Base+0x1e4>)
   2fdea:	add	r2, pc
   2fdec:	ldr	r3, [r2, r3]
   2fdee:	ldr	r2, [r3, #0]
   2fdf0:	ldr	r3, [sp, #108]	; 0x6c
   2fdf2:	eors	r2, r3
   2fdf4:	beq.n	2fe22 <btrfs_scan_devices@@Base+0x1da>
   2fdf6:	blx	8708 <__stack_chk_fail@plt>
   2fdfa:	ldr	r3, [sp, #16]
   2fdfc:	and.w	r3, r3, #61440	; 0xf000
   2fe00:	cmp.w	r3, #24576	; 0x6000
   2fe04:	bne.n	2fe1e <btrfs_scan_devices@@Base+0x1d6>
   2fe06:	ldrd	r0, r1, [sp, #32]
   2fe0a:	lsrs	r2, r0, #8
   2fe0c:	lsrs	r3, r1, #8
   2fe0e:	orr.w	r2, r2, r1, lsl #24
   2fe12:	cmp	r3, #0
   2fe14:	itte	eq
   2fe16:	cmpeq	r2, #7
   2fe18:	moveq	r0, #1
   2fe1a:	movne	r0, #0
   2fe1c:	b.n	2fde6 <btrfs_scan_devices@@Base+0x19e>
   2fe1e:	movs	r0, #0
   2fe20:	b.n	2fde6 <btrfs_scan_devices@@Base+0x19e>
   2fe22:	add	sp, #116	; 0x74
   2fe24:	ldr.w	pc, [sp], #4
   2fe28:	ldr	r7, [pc, #752]	; (3011c <path_is_reg_file@@Base+0x2c>)
   2fe2a:	movs	r3, r0
   2fe2c:	lsls	r0, r5, #8
   2fe2e:	movs	r0, r0
   2fe30:	ldr	r7, [pc, #600]	; (3008c <path_is_block_device@@Base+0x40>)
   2fe32:	movs	r3, r0
   2fe34:	ldr	r1, [pc, #192]	; (2fef8 <btrfs_scan_devices@@Base+0x2b0>)
   2fe36:	ldr	r2, [pc, #196]	; (2fefc <btrfs_scan_devices@@Base+0x2b4>)
   2fe38:	push	{r4, r5, r6, r7, lr}
   2fe3a:	add	r1, pc
   2fe3c:	sub.w	sp, sp, #8192	; 0x2000
   2fe40:	sub	sp, #20
   2fe42:	ldr	r2, [r1, r2]
   2fe44:	add.w	r3, sp, #8192	; 0x2000
   2fe48:	add	r5, sp, #12
   2fe4a:	ldr	r2, [r2, #0]
   2fe4c:	str	r2, [r3, #12]
   2fe4e:	mov.w	r2, #0
   2fe52:	adds	r3, #12
   2fe54:	ldr	r3, [pc, #168]	; (2ff00 <btrfs_scan_devices@@Base+0x2b8>)
   2fe56:	movs	r2, #1
   2fe58:	str	r0, [sp, #4]
   2fe5a:	mov	r0, r5
   2fe5c:	add	r3, pc
   2fe5e:	str	r3, [sp, #0]
   2fe60:	mov.w	r3, #4096	; 0x1000
   2fe64:	mov	r1, r3
   2fe66:	blx	8bc0 <__snprintf_chk@plt>
   2fe6a:	ldr	r1, [pc, #152]	; (2ff04 <btrfs_scan_devices@@Base+0x2bc>)
   2fe6c:	mov	r0, r5
   2fe6e:	add	r1, pc
   2fe70:	blx	8b1c <fopen64@plt>
   2fe74:	mov	r4, r0
   2fe76:	cbz	r0, 2fe96 <btrfs_scan_devices@@Base+0x24e>
   2fe78:	add.w	r6, sp, #4096	; 0x1000
   2fe7c:	mov	r2, r0
   2fe7e:	adds	r6, #12
   2fe80:	mov.w	r1, #4096	; 0x1000
   2fe84:	mov	r0, r6
   2fe86:	blx	862c <fgets@plt>
   2fe8a:	cbnz	r0, 2feb0 <btrfs_scan_devices@@Base+0x268>
   2fe8c:	movs	r5, #0
   2fe8e:	mov	r0, r4
   2fe90:	mov	r4, r5
   2fe92:	blx	8a7c <fclose@plt>
   2fe96:	ldr	r1, [pc, #112]	; (2ff08 <btrfs_scan_devices@@Base+0x2c0>)
   2fe98:	add.w	r3, sp, #8192	; 0x2000
   2fe9c:	ldr	r2, [pc, #92]	; (2fefc <btrfs_scan_devices@@Base+0x2b4>)
   2fe9e:	adds	r3, #12
   2fea0:	add	r1, pc
   2fea2:	ldr	r2, [r1, r2]
   2fea4:	ldr	r1, [r2, #0]
   2fea6:	ldr	r2, [r3, #0]
   2fea8:	eors	r1, r2
   2feaa:	beq.n	2feee <btrfs_scan_devices@@Base+0x2a6>
   2feac:	blx	8708 <__stack_chk_fail@plt>
   2feb0:	mov	r0, r6
   2feb2:	blx	8940 <strlen@plt>
   2feb6:	cmp	r0, #1
   2feb8:	bls.n	2fe8c <btrfs_scan_devices@@Base+0x244>
   2feba:	add	r0, r6
   2febc:	ldr	r3, [pc, #76]	; (2ff0c <btrfs_scan_devices@@Base+0x2c4>)
   2febe:	movs	r7, #0
   2fec0:	movs	r2, #1
   2fec2:	strb.w	r7, [r0, #-1]
   2fec6:	add	r3, pc
   2fec8:	str	r3, [sp, #0]
   2feca:	mov.w	r3, #4096	; 0x1000
   2fece:	mov	r1, r3
   2fed0:	mov	r0, r5
   2fed2:	str	r6, [sp, #4]
   2fed4:	blx	8bc0 <__snprintf_chk@plt>
   2fed8:	mov	r1, r7
   2feda:	mov	r0, r5
   2fedc:	blx	8a70 <access@plt>
   2fee0:	cmp	r0, #0
   2fee2:	bne.n	2fe8c <btrfs_scan_devices@@Base+0x244>
   2fee4:	mov	r0, r5
   2fee6:	blx	86f0 <strdup@plt+0x4>
   2feea:	mov	r5, r0
   2feec:	b.n	2fe8e <btrfs_scan_devices@@Base+0x246>
   2feee:	mov	r0, r4
   2fef0:	add.w	sp, sp, #8192	; 0x2000
   2fef4:	add	sp, #20
   2fef6:	pop	{r4, r5, r6, r7, pc}
   2fef8:	ldr	r7, [pc, #280]	; (30014 <btrfs_scan_devices@@Base+0x3cc>)
   2fefa:	movs	r3, r0
   2fefc:	lsls	r0, r5, #8
   2fefe:	movs	r0, r0
   2ff00:	subs	r0, #234	; 0xea
   2ff02:	movs	r2, r0
   2ff04:	cdp	0, 10, cr0, cr5, cr0, {0}
   2ff08:	ldr	r6, [pc, #896]	; (3028c <__strncpy_null@@Base+0xc>)
   2ff0a:	movs	r3, r0
   2ff0c:	subs	r0, #150	; 0x96
   2ff0e:	movs	r2, r0
   2ff10:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2ff14:	mov	r8, r1
   2ff16:	ldr	r1, [pc, #284]	; (30034 <btrfs_scan_devices@@Base+0x3ec>)
   2ff18:	sub.w	sp, sp, #8448	; 0x2100
   2ff1c:	ldr	r2, [pc, #280]	; (30038 <btrfs_scan_devices@@Base+0x3f0>)
   2ff1e:	sub	sp, #12
   2ff20:	add	r1, pc
   2ff22:	add.w	r4, sp, #4352	; 0x1100
   2ff26:	add.w	r3, sp, #8448	; 0x2100
   2ff2a:	adds	r4, #4
   2ff2c:	ldr	r2, [r1, r2]
   2ff2e:	adds	r3, #4
   2ff30:	mov	r1, r4
   2ff32:	mov	r9, r0
   2ff34:	ldr	r2, [r2, #0]
   2ff36:	str	r2, [r3, #0]
   2ff38:	mov.w	r2, #0
   2ff3c:	mov.w	r2, #4096	; 0x1000
   2ff40:	blx	87d8 <__realpath_chk@plt>
   2ff44:	cbnz	r0, 2ff4e <btrfs_scan_devices@@Base+0x306>
   2ff46:	blx	897c <__errno_location@plt>
   2ff4a:	ldr	r6, [r0, #0]
   2ff4c:	b.n	2ff9e <btrfs_scan_devices@@Base+0x356>
   2ff4e:	movs	r1, #47	; 0x2f
   2ff50:	mov	r0, r4
   2ff52:	blx	8aac <strrchr@plt>
   2ff56:	add	r4, sp, #264	; 0x108
   2ff58:	ldr	r3, [pc, #224]	; (3003c <btrfs_scan_devices@@Base+0x3f4>)
   2ff5a:	subs	r5, r4, #4
   2ff5c:	movs	r2, #1
   2ff5e:	add	r3, pc
   2ff60:	str	r3, [sp, #0]
   2ff62:	mov.w	r3, #4096	; 0x1000
   2ff66:	mov	r1, r3
   2ff68:	str	r0, [sp, #4]
   2ff6a:	mov	r0, r5
   2ff6c:	blx	8bc0 <__snprintf_chk@plt>
   2ff70:	ldr	r1, [pc, #204]	; (30040 <btrfs_scan_devices@@Base+0x3f8>)
   2ff72:	mov	r0, r5
   2ff74:	add	r1, pc
   2ff76:	blx	8b1c <fopen64@plt>
   2ff7a:	mov	r7, r0
   2ff7c:	cmp	r0, #0
   2ff7e:	bne.n	2fff4 <btrfs_scan_devices@@Base+0x3ac>
   2ff80:	blx	897c <__errno_location@plt>
   2ff84:	ldr	r6, [r0, #0]
   2ff86:	mov	r5, r0
   2ff88:	cmp	r6, #2
   2ff8a:	bne.n	2ff9e <btrfs_scan_devices@@Base+0x356>
   2ff8c:	mov	r0, r9
   2ff8e:	mov.w	r1, #2048	; 0x800
   2ff92:	blx	8844 <open64@plt>
   2ff96:	subs.w	r9, r0, #0
   2ff9a:	bge.n	2ffa2 <btrfs_scan_devices@@Base+0x35a>
   2ff9c:	ldr	r6, [r5, #0]
   2ff9e:	negs	r6, r6
   2ffa0:	b.n	2ffbc <btrfs_scan_devices@@Base+0x374>
   2ffa2:	add	r4, sp, #8
   2ffa4:	movw	r1, #19461	; 0x4c05
   2ffa8:	mov	r2, r4
   2ffaa:	blx	87b4 <ioctl@plt>
   2ffae:	subs	r6, r0, #0
   2ffb0:	bge.n	2ffd6 <btrfs_scan_devices@@Base+0x38e>
   2ffb2:	ldr	r6, [r5, #0]
   2ffb4:	negs	r6, r6
   2ffb6:	mov	r0, r9
   2ffb8:	blx	8b9c <close@plt>
   2ffbc:	ldr	r1, [pc, #132]	; (30044 <btrfs_scan_devices@@Base+0x3fc>)
   2ffbe:	add.w	r3, sp, #8448	; 0x2100
   2ffc2:	ldr	r2, [pc, #116]	; (30038 <btrfs_scan_devices@@Base+0x3f0>)
   2ffc4:	adds	r3, #4
   2ffc6:	add	r1, pc
   2ffc8:	ldr	r2, [r1, r2]
   2ffca:	ldr	r1, [r2, #0]
   2ffcc:	ldr	r2, [r3, #0]
   2ffce:	eors	r1, r2
   2ffd0:	beq.n	30028 <btrfs_scan_devices@@Base+0x3e0>
   2ffd2:	blx	8708 <__stack_chk_fail@plt>
   2ffd6:	adds	r4, #56	; 0x38
   2ffd8:	mov	r5, r8
   2ffda:	ldmia	r4!, {r0, r1, r2, r3}
   2ffdc:	stmia	r5!, {r0, r1, r2, r3}
   2ffde:	ldmia	r4!, {r0, r1, r2, r3}
   2ffe0:	stmia	r5!, {r0, r1, r2, r3}
   2ffe2:	ldmia	r4!, {r0, r1, r2, r3}
   2ffe4:	stmia	r5!, {r0, r1, r2, r3}
   2ffe6:	ldmia.w	r4, {r0, r1, r2, r3}
   2ffea:	stmia.w	r5, {r0, r1, r2, r3}
   2ffee:	strb.w	r7, [r8, #64]	; 0x40
   2fff2:	b.n	2ffb6 <btrfs_scan_devices@@Base+0x36e>
   2fff4:	movw	r3, #4095	; 0xfff
   2fff8:	str	r3, [sp, #4]
   2fffa:	ldr	r3, [pc, #76]	; (30048 <btrfs_scan_devices@@Base+0x400>)
   2fffc:	subs	r4, #24
   2fffe:	movs	r2, #1
   30000:	add	r3, pc
   30002:	str	r3, [sp, #0]
   30004:	movs	r3, #20
   30006:	mov	r0, r4
   30008:	mov	r1, r3
   3000a:	blx	8bc0 <__snprintf_chk@plt>
   3000e:	mov	r1, r4
   30010:	mov	r2, r8
   30012:	mov	r0, r7
   30014:	blx	89f0 <fscanf@plt>
   30018:	mov	r4, r0
   3001a:	mov	r0, r7
   3001c:	blx	8a7c <fclose@plt>
   30020:	adds	r4, #1
   30022:	beq.n	2ff46 <btrfs_scan_devices@@Base+0x2fe>
   30024:	movs	r6, #0
   30026:	b.n	2ffbc <btrfs_scan_devices@@Base+0x374>
   30028:	mov	r0, r6
   3002a:	add.w	sp, sp, #8448	; 0x2100
   3002e:	add	sp, #12
   30030:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   30034:	ldr	r6, [pc, #384]	; (301b8 <path_is_reg_or_block_device@@Base+0x14>)
   30036:	movs	r3, r0
   30038:	lsls	r0, r5, #8
   3003a:	movs	r0, r0
   3003c:	subs	r0, #13
   3003e:	movs	r2, r0
   30040:	ldc	0, cr0, [pc]	; 30044 <btrfs_scan_devices@@Base+0x3fc>
   30044:	ldr	r5, [pc, #744]	; (30330 <is_same_loop_file@@Base+0x98>)
   30046:	movs	r3, r0
   30048:	adds	r7, #139	; 0x8b
   3004a:	movs	r2, r0

0003004c <path_is_block_device@@Base>:
   3004c:	ldr	r2, [pc, #76]	; (3009c <path_is_block_device@@Base+0x50>)
   3004e:	ldr	r3, [pc, #80]	; (300a0 <path_is_block_device@@Base+0x54>)
   30050:	add	r2, pc
   30052:	push	{lr}
   30054:	sub	sp, #116	; 0x74
   30056:	ldr	r3, [r2, r3]
   30058:	mov	r1, sp
   3005a:	ldr	r3, [r3, #0]
   3005c:	str	r3, [sp, #108]	; 0x6c
   3005e:	mov.w	r3, #0
   30062:	bl	39db8 <__libc_csu_fini@@Base+0x1c>
   30066:	cmp	r0, #0
   30068:	bge.n	30086 <path_is_block_device@@Base+0x3a>
   3006a:	blx	897c <__errno_location@plt>
   3006e:	ldr	r0, [r0, #0]
   30070:	negs	r0, r0
   30072:	ldr	r2, [pc, #48]	; (300a4 <path_is_block_device@@Base+0x58>)
   30074:	ldr	r3, [pc, #40]	; (300a0 <path_is_block_device@@Base+0x54>)
   30076:	add	r2, pc
   30078:	ldr	r3, [r2, r3]
   3007a:	ldr	r2, [r3, #0]
   3007c:	ldr	r3, [sp, #108]	; 0x6c
   3007e:	eors	r2, r3
   30080:	beq.n	30096 <path_is_block_device@@Base+0x4a>
   30082:	blx	8708 <__stack_chk_fail@plt>
   30086:	ldr	r0, [sp, #16]
   30088:	and.w	r0, r0, #61440	; 0xf000
   3008c:	sub.w	r3, r0, #24576	; 0x6000
   30090:	negs	r0, r3
   30092:	adcs	r0, r3
   30094:	b.n	30072 <path_is_block_device@@Base+0x26>
   30096:	add	sp, #116	; 0x74
   30098:	ldr.w	pc, [sp], #4
   3009c:	ldr	r5, [pc, #192]	; (30160 <path_exists@@Base+0x14>)
   3009e:	movs	r3, r0
   300a0:	lsls	r0, r5, #8
   300a2:	movs	r0, r0
   300a4:	ldr	r5, [pc, #40]	; (300d0 <path_is_mount_point@@Base+0x28>)
   300a6:	movs	r3, r0

000300a8 <path_is_mount_point@@Base>:
   300a8:	push	{r4, r5, r6, lr}
   300aa:	mov	r6, r0
   300ac:	ldr	r1, [pc, #56]	; (300e8 <path_is_mount_point@@Base+0x40>)
   300ae:	ldr	r0, [pc, #60]	; (300ec <path_is_mount_point@@Base+0x44>)
   300b0:	add	r1, pc
   300b2:	add	r0, pc
   300b4:	blx	8b28 <setmntent@plt>
   300b8:	mov	r5, r0
   300ba:	cbnz	r0, 300cc <path_is_mount_point@@Base+0x24>
   300bc:	mov.w	r4, #4294967295	; 0xffffffff
   300c0:	b.n	300de <path_is_mount_point@@Base+0x36>
   300c2:	ldr	r0, [r4, #4]
   300c4:	mov	r1, r6
   300c6:	blx	85ac <strcmp@plt>
   300ca:	cbz	r0, 300e2 <path_is_mount_point@@Base+0x3a>
   300cc:	mov	r0, r5
   300ce:	blx	882c <getmntent@plt>
   300d2:	mov	r4, r0
   300d4:	cmp	r0, #0
   300d6:	bne.n	300c2 <path_is_mount_point@@Base+0x1a>
   300d8:	mov	r0, r5
   300da:	blx	8a88 <endmntent@plt>
   300de:	mov	r0, r4
   300e0:	pop	{r4, r5, r6, pc}
   300e2:	movs	r4, #1
   300e4:	b.n	300d8 <path_is_mount_point@@Base+0x30>
   300e6:	nop
   300e8:	stcl	0, cr0, [r3], #-0
   300ec:	adds	r6, #226	; 0xe2
   300ee:	movs	r2, r0

000300f0 <path_is_reg_file@@Base>:
   300f0:	ldr	r2, [pc, #76]	; (30140 <path_is_reg_file@@Base+0x50>)
   300f2:	ldr	r3, [pc, #80]	; (30144 <path_is_reg_file@@Base+0x54>)
   300f4:	add	r2, pc
   300f6:	push	{lr}
   300f8:	sub	sp, #116	; 0x74
   300fa:	ldr	r3, [r2, r3]
   300fc:	mov	r1, sp
   300fe:	ldr	r3, [r3, #0]
   30100:	str	r3, [sp, #108]	; 0x6c
   30102:	mov.w	r3, #0
   30106:	bl	39db8 <__libc_csu_fini@@Base+0x1c>
   3010a:	cmp	r0, #0
   3010c:	bge.n	3012a <path_is_reg_file@@Base+0x3a>
   3010e:	blx	897c <__errno_location@plt>
   30112:	ldr	r0, [r0, #0]
   30114:	negs	r0, r0
   30116:	ldr	r2, [pc, #48]	; (30148 <path_is_reg_file@@Base+0x58>)
   30118:	ldr	r3, [pc, #40]	; (30144 <path_is_reg_file@@Base+0x54>)
   3011a:	add	r2, pc
   3011c:	ldr	r3, [r2, r3]
   3011e:	ldr	r2, [r3, #0]
   30120:	ldr	r3, [sp, #108]	; 0x6c
   30122:	eors	r2, r3
   30124:	beq.n	3013a <path_is_reg_file@@Base+0x4a>
   30126:	blx	8708 <__stack_chk_fail@plt>
   3012a:	ldr	r0, [sp, #16]
   3012c:	and.w	r0, r0, #61440	; 0xf000
   30130:	sub.w	r3, r0, #32768	; 0x8000
   30134:	negs	r0, r3
   30136:	adcs	r0, r3
   30138:	b.n	30116 <path_is_reg_file@@Base+0x26>
   3013a:	add	sp, #116	; 0x74
   3013c:	ldr.w	pc, [sp], #4
   30140:	ldr	r4, [pc, #560]	; (30374 <is_same_loop_file@@Base+0xdc>)
   30142:	movs	r3, r0
   30144:	lsls	r0, r5, #8
   30146:	movs	r0, r0
   30148:	ldr	r4, [pc, #408]	; (302e4 <is_same_loop_file@@Base+0x4c>)
   3014a:	movs	r3, r0

0003014c <path_exists@@Base>:
   3014c:	ldr	r2, [pc, #72]	; (30198 <path_exists@@Base+0x4c>)
   3014e:	ldr	r3, [pc, #76]	; (3019c <path_exists@@Base+0x50>)
   30150:	add	r2, pc
   30152:	push	{lr}
   30154:	sub	sp, #116	; 0x74
   30156:	ldr	r3, [r2, r3]
   30158:	mov	r1, sp
   3015a:	ldr	r3, [r3, #0]
   3015c:	str	r3, [sp, #108]	; 0x6c
   3015e:	mov.w	r3, #0
   30162:	bl	39db8 <__libc_csu_fini@@Base+0x1c>
   30166:	cmp	r0, #0
   30168:	bge.n	3018a <path_exists@@Base+0x3e>
   3016a:	blx	897c <__errno_location@plt>
   3016e:	ldr	r0, [r0, #0]
   30170:	cmp	r0, #2
   30172:	beq.n	3018e <path_exists@@Base+0x42>
   30174:	negs	r0, r0
   30176:	ldr	r2, [pc, #40]	; (301a0 <path_exists@@Base+0x54>)
   30178:	ldr	r3, [pc, #32]	; (3019c <path_exists@@Base+0x50>)
   3017a:	add	r2, pc
   3017c:	ldr	r3, [r2, r3]
   3017e:	ldr	r2, [r3, #0]
   30180:	ldr	r3, [sp, #108]	; 0x6c
   30182:	eors	r2, r3
   30184:	beq.n	30192 <path_exists@@Base+0x46>
   30186:	blx	8708 <__stack_chk_fail@plt>
   3018a:	movs	r0, #1
   3018c:	b.n	30176 <path_exists@@Base+0x2a>
   3018e:	movs	r0, #0
   30190:	b.n	30176 <path_exists@@Base+0x2a>
   30192:	add	sp, #116	; 0x74
   30194:	ldr.w	pc, [sp], #4
   30198:	ldr	r4, [pc, #192]	; (3025c <canonicalize_path@@Base+0x3c>)
   3019a:	movs	r3, r0
   3019c:	lsls	r0, r5, #8
   3019e:	movs	r0, r0
   301a0:	ldr	r4, [pc, #24]	; (301bc <path_is_reg_or_block_device@@Base+0x18>)
   301a2:	movs	r3, r0

000301a4 <path_is_reg_or_block_device@@Base>:
   301a4:	ldr	r2, [pc, #96]	; (30208 <path_is_reg_or_block_device@@Base+0x64>)
   301a6:	ldr	r3, [pc, #100]	; (3020c <path_is_reg_or_block_device@@Base+0x68>)
   301a8:	add	r2, pc
   301aa:	push	{lr}
   301ac:	sub	sp, #116	; 0x74
   301ae:	ldr	r3, [r2, r3]
   301b0:	mov	r1, sp
   301b2:	ldr	r3, [r3, #0]
   301b4:	str	r3, [sp, #108]	; 0x6c
   301b6:	mov.w	r3, #0
   301ba:	bl	39db8 <__libc_csu_fini@@Base+0x1c>
   301be:	cmp	r0, #0
   301c0:	bge.n	301e2 <path_is_reg_or_block_device@@Base+0x3e>
   301c2:	blx	897c <__errno_location@plt>
   301c6:	ldr	r0, [r0, #0]
   301c8:	cmp	r0, #2
   301ca:	beq.n	301f8 <path_is_reg_or_block_device@@Base+0x54>
   301cc:	negs	r0, r0
   301ce:	ldr	r2, [pc, #64]	; (30210 <path_is_reg_or_block_device@@Base+0x6c>)
   301d0:	ldr	r3, [pc, #56]	; (3020c <path_is_reg_or_block_device@@Base+0x68>)
   301d2:	add	r2, pc
   301d4:	ldr	r3, [r2, r3]
   301d6:	ldr	r2, [r3, #0]
   301d8:	ldr	r3, [sp, #108]	; 0x6c
   301da:	eors	r2, r3
   301dc:	beq.n	30200 <path_is_reg_or_block_device@@Base+0x5c>
   301de:	blx	8708 <__stack_chk_fail@plt>
   301e2:	ldr	r0, [sp, #16]
   301e4:	and.w	r0, r0, #61440	; 0xf000
   301e8:	cmp.w	r0, #24576	; 0x6000
   301ec:	beq.n	301fc <path_is_reg_or_block_device@@Base+0x58>
   301ee:	sub.w	r3, r0, #32768	; 0x8000
   301f2:	negs	r0, r3
   301f4:	adcs	r0, r3
   301f6:	b.n	301ce <path_is_reg_or_block_device@@Base+0x2a>
   301f8:	movs	r0, #0
   301fa:	b.n	301ce <path_is_reg_or_block_device@@Base+0x2a>
   301fc:	movs	r0, #1
   301fe:	b.n	301ce <path_is_reg_or_block_device@@Base+0x2a>
   30200:	add	sp, #116	; 0x74
   30202:	ldr.w	pc, [sp], #4
   30206:	nop
   30208:	ldr	r3, [pc, #864]	; (3056c <test_issubvolname@@Base+0xc6>)
   3020a:	movs	r3, r0
   3020c:	lsls	r0, r5, #8
   3020e:	movs	r0, r0
   30210:	ldr	r3, [pc, #696]	; (304cc <test_issubvolname@@Base+0x26>)
   30212:	movs	r3, r0

00030214 <canonicalize_dm_name@@Base>:
   30214:	cbz	r0, 3021c <canonicalize_dm_name@@Base+0x8>
   30216:	ldrb	r3, [r0, #0]
   30218:	cbz	r3, 3021c <canonicalize_dm_name@@Base+0x8>
   3021a:	b.n	2fe34 <btrfs_scan_devices@@Base+0x1ec>
   3021c:	movs	r0, #0
   3021e:	bx	lr

00030220 <canonicalize_path@@Base>:
   30220:	push	{r3, r4, r5, lr}
   30222:	mov	r5, r0
   30224:	cbz	r0, 30274 <canonicalize_path@@Base+0x54>
   30226:	ldrb	r4, [r0, #0]
   30228:	cbz	r4, 30276 <canonicalize_path@@Base+0x56>
   3022a:	movs	r1, #0
   3022c:	blx	8b90 <realpath@plt>
   30230:	mov	r4, r0
   30232:	cbnz	r0, 3023e <canonicalize_path@@Base+0x1e>
   30234:	mov	r0, r5
   30236:	ldmia.w	sp!, {r3, r4, r5, lr}
   3023a:	b.w	86ec <strdup@plt>
   3023e:	movs	r1, #47	; 0x2f
   30240:	blx	8aac <strrchr@plt>
   30244:	mov	r5, r0
   30246:	cbz	r0, 30276 <canonicalize_path@@Base+0x56>
   30248:	ldr	r1, [pc, #48]	; (3027c <canonicalize_path@@Base+0x5c>)
   3024a:	movs	r2, #4
   3024c:	add	r1, pc
   3024e:	blx	8b78 <strncmp@plt>
   30252:	cbnz	r0, 30276 <canonicalize_path@@Base+0x56>
   30254:	blx	891c <__ctype_b_loc@plt>
   30258:	ldrb	r2, [r5, #4]
   3025a:	ldr	r3, [r0, #0]
   3025c:	ldrh.w	r3, [r3, r2, lsl #1]
   30260:	lsls	r3, r3, #20
   30262:	bpl.n	30276 <canonicalize_path@@Base+0x56>
   30264:	adds	r0, r5, #1
   30266:	bl	30214 <canonicalize_dm_name@@Base>
   3026a:	mov	r5, r0
   3026c:	cbz	r0, 30276 <canonicalize_path@@Base+0x56>
   3026e:	mov	r0, r4
   30270:	blx	8620 <free@plt+0x4>
   30274:	mov	r4, r5
   30276:	mov	r0, r4
   30278:	pop	{r3, r4, r5, pc}
   3027a:	nop
   3027c:	adds	r5, #90	; 0x5a
   3027e:	movs	r2, r0

00030280 <__strncpy_null@@Base>:
   30280:	push	{r3, r4, r5, lr}
   30282:	mov	r4, r2
   30284:	mov	r5, r0
   30286:	blx	89d8 <strncpy@plt>
   3028a:	cbz	r4, 30294 <__strncpy_null@@Base+0x14>
   3028c:	add	r4, r5
   3028e:	movs	r3, #0
   30290:	strb.w	r3, [r4, #-1]
   30294:	mov	r0, r5
   30296:	pop	{r3, r4, r5, pc}

00030298 <is_same_loop_file@@Base>:
   30298:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   3029c:	mov	r5, r1
   3029e:	ldr	r1, [pc, #368]	; (30410 <is_same_loop_file@@Base+0x178>)
   302a0:	sub.w	sp, sp, #16512	; 0x4080
   302a4:	ldr	r2, [pc, #364]	; (30414 <is_same_loop_file@@Base+0x17c>)
   302a6:	sub	sp, #88	; 0x58
   302a8:	add	r1, pc
   302aa:	add.w	r3, sp, #16512	; 0x4080
   302ae:	adds	r3, #84	; 0x54
   302b0:	mov	r6, r0
   302b2:	ldr	r2, [r1, r2]
   302b4:	ldr	r2, [r2, #0]
   302b6:	str	r2, [r3, #0]
   302b8:	mov.w	r2, #0
   302bc:	bl	2fdc0 <btrfs_scan_devices@@Base+0x178>
   302c0:	subs	r4, r0, #0
   302c2:	bge.n	302cc <is_same_loop_file@@Base+0x34>
   302c4:	adds	r3, r4, #2
   302c6:	bne.n	3035e <is_same_loop_file@@Base+0xc6>
   302c8:	movs	r4, #0
   302ca:	b.n	3035e <is_same_loop_file@@Base+0xc6>
   302cc:	beq.n	302e8 <is_same_loop_file@@Base+0x50>
   302ce:	add	r7, sp, #212	; 0xd4
   302d0:	mov	r0, r6
   302d2:	mov	r1, r7
   302d4:	bl	2ff10 <btrfs_scan_devices@@Base+0x2c8>
   302d8:	subs	r4, r0, #0
   302da:	bge.n	30378 <is_same_loop_file@@Base+0xe0>
   302dc:	blx	897c <__errno_location@plt>
   302e0:	ldr	r3, [r0, #0]
   302e2:	cmp	r3, #1
   302e4:	bne.n	3035e <is_same_loop_file@@Base+0xc6>
   302e6:	movs	r6, #0
   302e8:	mov	r0, r5
   302ea:	bl	2fdc0 <btrfs_scan_devices@@Base+0x178>
   302ee:	subs	r4, r0, #0
   302f0:	blt.n	302c4 <is_same_loop_file@@Base+0x2c>
   302f2:	beq.n	30312 <is_same_loop_file@@Base+0x7a>
   302f4:	add.w	r7, sp, #4288	; 0x10c0
   302f8:	mov	r0, r5
   302fa:	adds	r7, #20
   302fc:	mov	r1, r7
   302fe:	bl	2ff10 <btrfs_scan_devices@@Base+0x2c8>
   30302:	subs	r4, r0, #0
   30304:	bge.n	3037c <is_same_loop_file@@Base+0xe4>
   30306:	blx	897c <__errno_location@plt>
   3030a:	ldr	r3, [r0, #0]
   3030c:	cmp	r3, #1
   3030e:	bne.n	3035e <is_same_loop_file@@Base+0xc6>
   30310:	movs	r5, #0
   30312:	add.w	r4, sp, #8384	; 0x20c0
   30316:	mov.w	r2, #4096	; 0x1000
   3031a:	adds	r4, #20
   3031c:	mov	r0, r6
   3031e:	mov	r1, r4
   30320:	blx	87d8 <__realpath_chk@plt>
   30324:	cbnz	r0, 30332 <is_same_loop_file@@Base+0x9a>
   30326:	mov.w	r2, #4096	; 0x1000
   3032a:	mov	r1, r6
   3032c:	mov	r0, r4
   3032e:	bl	30280 <__strncpy_null@@Base>
   30332:	add.w	r7, sp, #12480	; 0x30c0
   30336:	mov.w	r2, #4096	; 0x1000
   3033a:	adds	r7, #20
   3033c:	mov	r0, r5
   3033e:	mov	r1, r7
   30340:	blx	87d8 <__realpath_chk@plt>
   30344:	cbnz	r0, 30352 <is_same_loop_file@@Base+0xba>
   30346:	mov.w	r2, #4096	; 0x1000
   3034a:	mov	r1, r5
   3034c:	mov	r0, r7
   3034e:	bl	30280 <__strncpy_null@@Base>
   30352:	mov	r1, r7
   30354:	mov	r0, r4
   30356:	blx	85ac <strcmp@plt>
   3035a:	cbnz	r0, 30380 <is_same_loop_file@@Base+0xe8>
   3035c:	movs	r4, #1
   3035e:	ldr	r1, [pc, #184]	; (30418 <is_same_loop_file@@Base+0x180>)
   30360:	add.w	r3, sp, #16512	; 0x4080
   30364:	ldr	r2, [pc, #172]	; (30414 <is_same_loop_file@@Base+0x17c>)
   30366:	adds	r3, #84	; 0x54
   30368:	add	r1, pc
   3036a:	ldr	r2, [r1, r2]
   3036c:	ldr	r1, [r2, #0]
   3036e:	ldr	r2, [r3, #0]
   30370:	eors	r1, r2
   30372:	beq.n	30402 <is_same_loop_file@@Base+0x16a>
   30374:	blx	8708 <__stack_chk_fail@plt>
   30378:	mov	r6, r7
   3037a:	b.n	302e8 <is_same_loop_file@@Base+0x50>
   3037c:	mov	r5, r7
   3037e:	b.n	30312 <is_same_loop_file@@Base+0x7a>
   30380:	add	r7, sp, #88	; 0x58
   30382:	mov	r0, r6
   30384:	sub.w	r8, r7, #88	; 0x58
   30388:	mov	r1, r8
   3038a:	bl	39db8 <__libc_csu_fini@@Base+0x1c>
   3038e:	cmp	r0, #0
   30390:	bge.n	303a0 <is_same_loop_file@@Base+0x108>
   30392:	blx	897c <__errno_location@plt>
   30396:	ldr	r4, [r0, #0]
   30398:	cmp	r4, #2
   3039a:	beq.n	302c8 <is_same_loop_file@@Base+0x30>
   3039c:	negs	r4, r4
   3039e:	b.n	3035e <is_same_loop_file@@Base+0xc6>
   303a0:	add	r6, sp, #216	; 0xd8
   303a2:	mov	r0, r5
   303a4:	sub.w	r4, r6, #112	; 0x70
   303a8:	mov	r1, r4
   303aa:	bl	39db8 <__libc_csu_fini@@Base+0x1c>
   303ae:	cmp	r0, #0
   303b0:	blt.n	30392 <is_same_loop_file@@Base+0xfa>
   303b2:	ldr.w	r3, [r8, #16]
   303b6:	and.w	r3, r3, #61440	; 0xf000
   303ba:	cmp.w	r3, #24576	; 0x6000
   303be:	bne.n	303dc <is_same_loop_file@@Base+0x144>
   303c0:	ldr	r3, [r4, #16]
   303c2:	and.w	r3, r3, #61440	; 0xf000
   303c6:	cmp.w	r3, #24576	; 0x6000
   303ca:	bne.n	303dc <is_same_loop_file@@Base+0x144>
   303cc:	ldrd	r0, r1, [r8, #32]
   303d0:	ldrd	r2, r3, [r4, #32]
   303d4:	cmp	r1, r3
   303d6:	it	eq
   303d8:	cmpeq	r0, r2
   303da:	beq.n	3035c <is_same_loop_file@@Base+0xc4>
   303dc:	ldrd	r0, r1, [r7, #-88]	; 0x58
   303e0:	ldrd	r2, r3, [r6, #-112]	; 0x70
   303e4:	cmp	r1, r3
   303e6:	it	eq
   303e8:	cmpeq	r0, r2
   303ea:	bne.w	302c8 <is_same_loop_file@@Base+0x30>
   303ee:	ldrd	r2, r3, [r4, #96]	; 0x60
   303f2:	ldrd	r0, r1, [r8, #96]	; 0x60
   303f6:	cmp	r1, r3
   303f8:	itte	eq
   303fa:	cmpeq	r0, r2
   303fc:	moveq	r4, #1
   303fe:	movne	r4, #0
   30400:	b.n	3035e <is_same_loop_file@@Base+0xc6>
   30402:	mov	r0, r4
   30404:	add.w	sp, sp, #16512	; 0x4080
   30408:	add	sp, #88	; 0x58
   3040a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   3040e:	nop
   30410:	ldr	r2, [pc, #864]	; (30774 <check_mounted_where@@Base>)
   30412:	movs	r3, r0
   30414:	lsls	r0, r5, #8
   30416:	movs	r0, r0
   30418:	ldr	r2, [pc, #96]	; (3047c <arg_copy_path@@Base+0x4>)
   3041a:	movs	r3, r0

0003041c <path_is_dir@@Base>:
   3041c:	ldr	r2, [pc, #76]	; (3046c <path_is_dir@@Base+0x50>)
   3041e:	ldr	r3, [pc, #80]	; (30470 <path_is_dir@@Base+0x54>)
   30420:	add	r2, pc
   30422:	push	{lr}
   30424:	sub	sp, #116	; 0x74
   30426:	ldr	r3, [r2, r3]
   30428:	mov	r1, sp
   3042a:	ldr	r3, [r3, #0]
   3042c:	str	r3, [sp, #108]	; 0x6c
   3042e:	mov.w	r3, #0
   30432:	bl	39db8 <__libc_csu_fini@@Base+0x1c>
   30436:	cmp	r0, #0
   30438:	bge.n	30456 <path_is_dir@@Base+0x3a>
   3043a:	blx	897c <__errno_location@plt>
   3043e:	ldr	r0, [r0, #0]
   30440:	negs	r0, r0
   30442:	ldr	r2, [pc, #48]	; (30474 <path_is_dir@@Base+0x58>)
   30444:	ldr	r3, [pc, #40]	; (30470 <path_is_dir@@Base+0x54>)
   30446:	add	r2, pc
   30448:	ldr	r3, [r2, r3]
   3044a:	ldr	r2, [r3, #0]
   3044c:	ldr	r3, [sp, #108]	; 0x6c
   3044e:	eors	r2, r3
   30450:	beq.n	30466 <path_is_dir@@Base+0x4a>
   30452:	blx	8708 <__stack_chk_fail@plt>
   30456:	ldr	r0, [sp, #16]
   30458:	and.w	r0, r0, #61440	; 0xf000
   3045c:	sub.w	r3, r0, #16384	; 0x4000
   30460:	negs	r0, r3
   30462:	adcs	r0, r3
   30464:	b.n	30442 <path_is_dir@@Base+0x26>
   30466:	add	sp, #116	; 0x74
   30468:	ldr.w	pc, [sp], #4
   3046c:	ldr	r1, [pc, #384]	; (305f0 <test_issubvolname@@Base+0x14a>)
   3046e:	movs	r3, r0
   30470:	lsls	r0, r5, #8
   30472:	movs	r0, r0
   30474:	ldr	r1, [pc, #232]	; (30560 <test_issubvolname@@Base+0xba>)
   30476:	movs	r3, r0

00030478 <arg_copy_path@@Base>:
   30478:	push	{r0, r1, r2, r4, r5, lr}
   3047a:	mov	r5, r0
   3047c:	mov	r0, r1
   3047e:	mov	r4, r2
   30480:	str	r1, [sp, #4]
   30482:	blx	8940 <strlen@plt>
   30486:	cmp.w	r0, #4096	; 0x1000
   3048a:	bcs.n	304a0 <arg_copy_path@@Base+0x28>
   3048c:	cmp	r4, r0
   3048e:	bls.n	304a0 <arg_copy_path@@Base+0x28>
   30490:	ldr	r1, [sp, #4]
   30492:	mov	r2, r4
   30494:	mov	r0, r5
   30496:	bl	30280 <__strncpy_null@@Base>
   3049a:	movs	r0, #0
   3049c:	add	sp, #12
   3049e:	pop	{r4, r5, pc}
   304a0:	mvn.w	r0, #35	; 0x23
   304a4:	b.n	3049c <arg_copy_path@@Base+0x24>

000304a6 <test_issubvolname@@Base>:
   304a6:	push	{r4, lr}
   304a8:	mov	r4, r0
   304aa:	ldrb	r3, [r0, #0]
   304ac:	cbz	r3, 304d4 <test_issubvolname@@Base+0x2e>
   304ae:	movs	r1, #47	; 0x2f
   304b0:	blx	894c <strchr@plt>
   304b4:	cbnz	r0, 304d4 <test_issubvolname@@Base+0x2e>
   304b6:	ldr	r1, [pc, #32]	; (304d8 <test_issubvolname@@Base+0x32>)
   304b8:	mov	r0, r4
   304ba:	add	r1, pc
   304bc:	blx	85ac <strcmp@plt>
   304c0:	cbz	r0, 304d2 <test_issubvolname@@Base+0x2c>
   304c2:	ldr	r1, [pc, #24]	; (304dc <test_issubvolname@@Base+0x36>)
   304c4:	mov	r0, r4
   304c6:	add	r1, pc
   304c8:	blx	85ac <strcmp@plt>
   304cc:	subs	r0, #0
   304ce:	it	ne
   304d0:	movne	r0, #1
   304d2:	pop	{r4, pc}
   304d4:	movs	r0, #0
   304d6:	b.n	304d2 <test_issubvolname@@Base+0x2c>
   304d8:	adds	r2, #242	; 0xf2
   304da:	movs	r2, r0
   304dc:	adds	r2, #229	; 0xe5
   304de:	movs	r2, r0
   304e0:	and.w	r2, r0, #2040	; 0x7f8
   304e4:	movs	r3, #0
   304e6:	cmp	r3, #0
   304e8:	it	eq
   304ea:	cmpeq	r2, #64	; 0x40
   304ec:	beq.n	30568 <test_issubvolname@@Base+0xc2>
   304ee:	cmp	r3, #0
   304f0:	it	eq
   304f2:	cmpeq	r2, #65	; 0x41
   304f4:	bcs.n	30528 <test_issubvolname@@Base+0x82>
   304f6:	cmp	r3, #0
   304f8:	it	eq
   304fa:	cmpeq	r2, #16
   304fc:	beq.n	30574 <test_issubvolname@@Base+0xce>
   304fe:	cmp	r3, #0
   30500:	it	eq
   30502:	cmpeq	r2, #17
   30504:	bcs.n	3051a <test_issubvolname@@Base+0x74>
   30506:	orrs.w	r1, r2, r3
   3050a:	beq.n	3056c <test_issubvolname@@Base+0xc6>
   3050c:	cmp	r3, #0
   3050e:	itet	eq
   30510:	cmpeq	r2, #8
   30512:	movne.w	r0, #4294967295	; 0xffffffff
   30516:	moveq	r0, #2
   30518:	bx	lr
   3051a:	cmp	r3, #0
   3051c:	itet	eq
   3051e:	cmpeq	r2, #32
   30520:	movne.w	r0, #4294967295	; 0xffffffff
   30524:	moveq	r0, #1
   30526:	bx	lr
   30528:	cmp	r3, #0
   3052a:	it	eq
   3052c:	cmpeq.w	r2, #512	; 0x200
   30530:	beq.n	30570 <test_issubvolname@@Base+0xca>
   30532:	movs	r1, #0
   30534:	cmp	r1, r3
   30536:	mov.w	r0, #512	; 0x200
   3053a:	it	eq
   3053c:	cmpeq	r0, r2
   3053e:	bcc.n	30558 <test_issubvolname@@Base+0xb2>
   30540:	cmp	r3, #0
   30542:	it	eq
   30544:	cmpeq	r2, #128	; 0x80
   30546:	beq.n	30574 <test_issubvolname@@Base+0xce>
   30548:	cmp	r3, #0
   3054a:	itet	eq
   3054c:	cmpeq.w	r2, #256	; 0x100
   30550:	movne.w	r0, #4294967295	; 0xffffffff
   30554:	moveq	r0, #3
   30556:	bx	lr
   30558:	cmp	r3, #0
   3055a:	itet	eq
   3055c:	cmpeq.w	r2, #1024	; 0x400
   30560:	movne.w	r0, #4294967295	; 0xffffffff
   30564:	moveq	r0, #4
   30566:	bx	lr
   30568:	movs	r0, #4
   3056a:	bx	lr
   3056c:	movs	r0, #1
   3056e:	bx	lr
   30570:	movs	r0, #3
   30572:	bx	lr
   30574:	movs	r0, #2
   30576:	bx	lr
   30578:	ldr	r2, [pc, #136]	; (30604 <test_issubvolname@@Base+0x15e>)
   3057a:	movs	r1, #0
   3057c:	ldr	r3, [pc, #136]	; (30608 <test_issubvolname@@Base+0x162>)
   3057e:	add	r2, pc
   30580:	ldr	r0, [pc, #136]	; (3060c <test_issubvolname@@Base+0x166>)
   30582:	push	{r4, r5, lr}
   30584:	sub	sp, #20
   30586:	ldr	r3, [r2, r3]
   30588:	add	r0, pc
   3058a:	ldr	r3, [r3, #0]
   3058c:	str	r3, [sp, #12]
   3058e:	mov.w	r3, #0
   30592:	blx	8844 <open64@plt>
   30596:	subs	r4, r0, #0
   30598:	bge.n	305e6 <test_issubvolname@@Base+0x140>
   3059a:	ldr	r0, [pc, #116]	; (30610 <test_issubvolname@@Base+0x16a>)
   3059c:	ldr	r4, [pc, #116]	; (30614 <test_issubvolname@@Base+0x16e>)
   3059e:	add	r0, pc
   305a0:	bl	17b00 <__btrfs_warning@@Base>
   305a4:	movs	r1, #0
   305a6:	add	r0, sp, #4
   305a8:	add	r4, pc
   305aa:	blx	87fc <gettimeofday@plt>
   305ae:	blx	8928 <getpid@plt>
   305b2:	ldr	r3, [sp, #4]
   305b4:	eors	r0, r3
   305b6:	strh	r0, [r4, #0]
   305b8:	blx	8af8 <getppid@plt>
   305bc:	ldr	r3, [sp, #8]
   305be:	ldr	r2, [sp, #4]
   305c0:	eors	r0, r3
   305c2:	eors	r3, r2
   305c4:	strh	r0, [r4, #2]
   305c6:	asrs	r3, r3, #16
   305c8:	strh	r3, [r4, #4]
   305ca:	ldr	r3, [pc, #76]	; (30618 <test_issubvolname@@Base+0x172>)
   305cc:	movs	r2, #1
   305ce:	add	r3, pc
   305d0:	str	r2, [r3, #8]
   305d2:	ldr	r2, [pc, #72]	; (3061c <test_issubvolname@@Base+0x176>)
   305d4:	ldr	r3, [pc, #48]	; (30608 <test_issubvolname@@Base+0x162>)
   305d6:	add	r2, pc
   305d8:	ldr	r3, [r2, r3]
   305da:	ldr	r2, [r3, #0]
   305dc:	ldr	r3, [sp, #12]
   305de:	eors	r2, r3
   305e0:	beq.n	305fe <test_issubvolname@@Base+0x158>
   305e2:	blx	8708 <__stack_chk_fail@plt>
   305e6:	ldr	r1, [pc, #56]	; (30620 <test_issubvolname@@Base+0x17a>)
   305e8:	movs	r2, #6
   305ea:	add	r1, pc
   305ec:	blx	85e8 <read@plt>
   305f0:	mov	r5, r0
   305f2:	mov	r0, r4
   305f4:	blx	8b9c <close@plt>
   305f8:	cmp	r5, #5
   305fa:	bhi.n	305ca <test_issubvolname@@Base+0x124>
   305fc:	b.n	3059a <test_issubvolname@@Base+0xf4>
   305fe:	add	sp, #20
   30600:	pop	{r4, r5, pc}
   30602:	nop
   30604:	ldr	r0, [pc, #8]	; (30610 <test_issubvolname@@Base+0x16a>)
   30606:	movs	r3, r0
   30608:	lsls	r0, r5, #8
   3060a:	movs	r0, r0
   3060c:	adds	r2, #38	; 0x26
   3060e:	movs	r2, r0
   30610:	adds	r2, #29
   30612:	movs	r2, r0
   30614:	ldrb	r0, [r7, r4]
   30616:	movs	r3, r0
   30618:	ldrb	r2, [r2, r4]
   3061a:	movs	r3, r0
   3061c:			; <UNDEFINED> instruction: 0x47aa
   3061e:	movs	r3, r0
   30620:	ldrb	r6, [r6, r3]
   30622:	movs	r3, r0
   30624:	ldr.w	ip, [pc, #76]	; 30674 <test_issubvolname@@Base+0x1ce>
   30628:	ldr	r5, [pc, #76]	; (30678 <test_issubvolname@@Base+0x1d2>)
   3062a:	add	ip, pc
   3062c:	ldr	r4, [pc, #76]	; (3067c <test_issubvolname@@Base+0x1d6>)
   3062e:	push	{lr}
   30630:	sub	sp, #92	; 0x5c
   30632:	ldr.w	r5, [ip, r5]
   30636:	add	r4, pc
   30638:	ldr	r5, [r5, #0]
   3063a:	str	r5, [sp, #84]	; 0x54
   3063c:	mov.w	r5, #0
   30640:	ldr	r5, [pc, #60]	; (30680 <test_issubvolname@@Base+0x1da>)
   30642:	ldr	r4, [r4, r5]
   30644:	strd	r2, r1, [sp]
   30648:	movs	r1, #1
   3064a:	strd	r0, r3, [sp, #8]
   3064e:	ldr	r2, [pc, #52]	; (30684 <test_issubvolname@@Base+0x1de>)
   30650:	ldr	r3, [pc, #52]	; (30688 <test_issubvolname@@Base+0x1e2>)
   30652:	ldr	r0, [r4, #0]
   30654:	add	r4, sp, #20
   30656:	add	r3, pc
   30658:	add	r2, pc
   3065a:	blx	8a64 <__fprintf_chk@plt+0x4>
   3065e:	movs	r1, #16
   30660:	mov	r0, r4
   30662:	blx	88bc <backtrace@plt>
   30666:	movs	r2, #2
   30668:	mov	r1, r0
   3066a:	mov	r0, r4
   3066c:	blx	8bcc <backtrace_symbols_fd@plt>
   30670:	blx	8b84 <abort@plt>
   30674:	bx	sl
   30676:	movs	r3, r0
   30678:	lsls	r0, r5, #8
   3067a:	movs	r0, r0
   3067c:	bx	r9
   3067e:	movs	r3, r0
   30680:	lsls	r0, r7, #8
   30682:	movs	r0, r0
   30684:	ldr	r0, [sp, #296]	; 0x128
   30686:	movs	r0, r0
   30688:	adds	r1, #162	; 0xa2
   3068a:	movs	r2, r0

0003068c <btrfs_make_root_dir@@Base>:
   3068c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   30690:	mov	r6, r2
   30692:	ldr	r2, [pc, #208]	; (30764 <btrfs_make_root_dir@@Base+0xd8>)
   30694:	mov	r5, r3
   30696:	ldr	r3, [pc, #208]	; (30768 <btrfs_make_root_dir@@Base+0xdc>)
   30698:	sub	sp, #192	; 0xc0
   3069a:	add	r2, pc
   3069c:	mov	r8, r0
   3069e:	movs	r0, #0
   306a0:	mov	r4, r1
   306a2:	ldr	r3, [r2, r3]
   306a4:	ldr	r3, [r3, #0]
   306a6:	str	r3, [sp, #188]	; 0xbc
   306a8:	mov.w	r3, #0
   306ac:	blx	8684 <time@plt>
   306b0:	movs	r2, #104	; 0x68
   306b2:	movs	r1, #0
   306b4:	mov	r7, r0
   306b6:	add	r0, sp, #36	; 0x24
   306b8:	blx	89bc <memset@plt+0x4>
   306bc:	ldr.w	r3, [r8, #8]
   306c0:	movs	r2, #1
   306c2:	str	r2, [sp, #68]	; 0x44
   306c4:	ldr.w	r2, [r4, #464]	; 0x1d0
   306c8:	mov	r0, r8
   306ca:	str	r3, [sp, #28]
   306cc:	ldr.w	r3, [r8, #12]
   306d0:	ldr.w	r1, [r2, #384]	; 0x180
   306d4:	str	r3, [sp, #32]
   306d6:	movs	r3, #0
   306d8:	strd	r3, r7, [sp, #172]	; 0xac
   306dc:	strd	r1, r3, [sp, #52]	; 0x34
   306e0:	movw	r1, #16877	; 0x41ed
   306e4:	strd	r3, r7, [sp, #148]	; 0x94
   306e8:	str	r1, [sp, #80]	; 0x50
   306ea:	asrs	r1, r7, #31
   306ec:	strd	r1, r3, [sp, #156]	; 0x9c
   306f0:	strd	r7, r1, [sp, #164]	; 0xa4
   306f4:	strd	r1, r3, [sp, #180]	; 0xb4
   306f8:	strd	r7, r1, [sp, #140]	; 0x8c
   306fc:	mov	r1, r4
   306fe:	ldr	r3, [r2, #28]
   30700:	cmp	r3, r4
   30702:	it	eq
   30704:	ldreq.w	r3, [r2, #308]	; 0x134
   30708:	mov	r2, r6
   3070a:	itt	eq
   3070c:	streq.w	r6, [r3, #128]	; 0x80
   30710:	streq.w	r5, [r3, #132]	; 0x84
   30714:	add	r3, sp, #28
   30716:	str	r3, [sp, #0]
   30718:	mov	r3, r5
   3071a:	bl	2df6c <btrfs_insert_inode@@Base>
   3071e:	cbnz	r0, 30748 <btrfs_make_root_dir@@Base+0xbc>
   30720:	movs	r2, #0
   30722:	movs	r3, #0
   30724:	strd	r2, r3, [sp, #16]
   30728:	mov	r1, r4
   3072a:	ldr	r2, [pc, #64]	; (3076c <btrfs_make_root_dir@@Base+0xe0>)
   3072c:	movs	r3, #2
   3072e:	mov	r0, r8
   30730:	strd	r6, r5, [sp, #8]
   30734:	add	r2, pc
   30736:	strd	r6, r5, [sp]
   3073a:	bl	2e374 <btrfs_insert_inode_ref@@Base>
   3073e:	cbnz	r0, 30748 <btrfs_make_root_dir@@Base+0xbc>
   30740:	str.w	r6, [r4, #176]	; 0xb0
   30744:	str.w	r5, [r4, #180]	; 0xb4
   30748:	ldr	r2, [pc, #36]	; (30770 <btrfs_make_root_dir@@Base+0xe4>)
   3074a:	ldr	r3, [pc, #28]	; (30768 <btrfs_make_root_dir@@Base+0xdc>)
   3074c:	add	r2, pc
   3074e:	ldr	r3, [r2, r3]
   30750:	ldr	r2, [r3, #0]
   30752:	ldr	r3, [sp, #188]	; 0xbc
   30754:	eors	r2, r3
   30756:	beq.n	3075c <btrfs_make_root_dir@@Base+0xd0>
   30758:	blx	8708 <__stack_chk_fail@plt>
   3075c:	add	sp, #192	; 0xc0
   3075e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   30762:	nop
   30764:	mov	lr, ip
   30766:	movs	r3, r0
   30768:	lsls	r0, r5, #8
   3076a:	movs	r0, r0
   3076c:	adds	r0, #119	; 0x77
   3076e:	movs	r2, r0
   30770:	mov	r4, r6
   30772:	movs	r3, r0

00030774 <check_mounted_where@@Base>:
   30774:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30778:	mov	r8, r2
   3077a:	ldr	r2, [pc, #300]	; (308a8 <check_mounted_where@@Base+0x134>)
   3077c:	mov	r6, r3
   3077e:	ldr	r3, [pc, #300]	; (308ac <check_mounted_where@@Base+0x138>)
   30780:	sub	sp, #60	; 0x3c
   30782:	add	r2, pc
   30784:	mov	r9, r1
   30786:	ldr.w	sl, [sp, #96]	; 0x60
   3078a:	ldr	r3, [r2, r3]
   3078c:	movs	r2, #1
   3078e:	ldr	r3, [r3, #0]
   30790:	str	r3, [sp, #52]	; 0x34
   30792:	mov.w	r3, #0
   30796:	movs	r3, #0
   30798:	strd	r2, r3, [sp, #40]	; 0x28
   3079c:	movs	r3, #0
   3079e:	str	r3, [sp, #36]	; 0x24
   307a0:	mov.w	r2, #65536	; 0x10000
   307a4:	ldr	r3, [sp, #100]	; 0x64
   307a6:	str	r3, [sp, #8]
   307a8:	movs	r3, #0
   307aa:	strd	r2, r3, [sp]
   307ae:	add	r3, sp, #40	; 0x28
   307b0:	add	r2, sp, #36	; 0x24
   307b2:	bl	287ec <btrfs_scan_one_device@@Base>
   307b6:	subs	r3, r0, #0
   307b8:	str	r3, [sp, #16]
   307ba:	bge.n	30818 <check_mounted_where@@Base+0xa4>
   307bc:	ldr	r1, [pc, #240]	; (308b0 <check_mounted_where@@Base+0x13c>)
   307be:	ldr	r0, [pc, #244]	; (308b4 <check_mounted_where@@Base+0x140>)
   307c0:	add	r1, pc
   307c2:	add	r0, pc
   307c4:	blx	8b28 <setmntent@plt>
   307c8:	mov	r7, r0
   307ca:	cmp	r0, #0
   307cc:	beq.n	30842 <check_mounted_where@@Base+0xce>
   307ce:	ldr.w	fp, [pc, #232]	; 308b8 <check_mounted_where@@Base+0x144>
   307d2:	add	fp, pc
   307d4:	mov	r0, r7
   307d6:	blx	882c <getmntent@plt>
   307da:	mov	r5, r0
   307dc:	cmp	r0, #0
   307de:	beq.n	30868 <check_mounted_where@@Base+0xf4>
   307e0:	ldr	r3, [sp, #16]
   307e2:	cmp	r3, #0
   307e4:	blt.n	3084c <check_mounted_where@@Base+0xd8>
   307e6:	ldr	r0, [r5, #8]
   307e8:	mov	r1, fp
   307ea:	blx	85ac <strcmp@plt>
   307ee:	cmp	r0, #0
   307f0:	bne.n	307d4 <check_mounted_where@@Base+0x60>
   307f2:	ldr	r2, [sp, #36]	; 0x24
   307f4:	ldr	r1, [r5, #0]
   307f6:	ldr.w	r3, [r2, #72]!
   307fa:	cmp	r3, r2
   307fc:	beq.n	307d4 <check_mounted_where@@Base+0x60>
   307fe:	ldr	r0, [r3, #32]
   30800:	strd	r1, r2, [sp, #24]
   30804:	str	r3, [sp, #20]
   30806:	bl	30298 <is_same_loop_file@@Base>
   3080a:	subs	r4, r0, #0
   3080c:	bne.n	3089c <check_mounted_where@@Base+0x128>
   3080e:	ldr	r3, [sp, #20]
   30810:	ldrd	r1, r2, [sp, #24]
   30814:	ldr	r3, [r3, #0]
   30816:	b.n	307fa <check_mounted_where@@Base+0x86>
   30818:	ldrd	r2, r3, [sp, #40]	; 0x28
   3081c:	cmp	r3, #0
   3081e:	it	eq
   30820:	cmpeq	r2, #2
   30822:	bcc.n	307bc <check_mounted_where@@Base+0x48>
   30824:	bl	2fc48 <btrfs_scan_devices@@Base>
   30828:	mov	r4, r0
   3082a:	cmp	r0, #0
   3082c:	beq.n	307bc <check_mounted_where@@Base+0x48>
   3082e:	ldr	r2, [pc, #140]	; (308bc <check_mounted_where@@Base+0x148>)
   30830:	ldr	r3, [pc, #120]	; (308ac <check_mounted_where@@Base+0x138>)
   30832:	add	r2, pc
   30834:	ldr	r3, [r2, r3]
   30836:	ldr	r2, [r3, #0]
   30838:	ldr	r3, [sp, #52]	; 0x34
   3083a:	eors	r2, r3
   3083c:	beq.n	308a0 <check_mounted_where@@Base+0x12c>
   3083e:	blx	8708 <__stack_chk_fail@plt>
   30842:	blx	897c <__errno_location@plt>
   30846:	ldr	r4, [r0, #0]
   30848:	negs	r4, r4
   3084a:	b.n	3082e <check_mounted_where@@Base+0xba>
   3084c:	ldr	r0, [r5, #0]
   3084e:	bl	301a4 <path_is_reg_or_block_device@@Base>
   30852:	subs	r4, r0, #0
   30854:	blt.n	3087a <check_mounted_where@@Base+0x106>
   30856:	beq.n	307d4 <check_mounted_where@@Base+0x60>
   30858:	ldr	r1, [r5, #0]
   3085a:	mov	r0, r9
   3085c:	bl	30298 <is_same_loop_file@@Base>
   30860:	subs	r4, r0, #0
   30862:	blt.n	3087a <check_mounted_where@@Base+0x106>
   30864:	beq.n	307d4 <check_mounted_where@@Base+0x60>
   30866:	cbnz	r6, 30882 <check_mounted_where@@Base+0x10e>
   30868:	cmp.w	sl, #0
   3086c:	beq.n	30874 <check_mounted_where@@Base+0x100>
   3086e:	ldr	r3, [sp, #36]	; 0x24
   30870:	str.w	r3, [sl]
   30874:	subs	r4, r5, #0
   30876:	it	ne
   30878:	movne	r4, #1
   3087a:	mov	r0, r7
   3087c:	blx	8a88 <endmntent@plt>
   30880:	b.n	3082e <check_mounted_where@@Base+0xba>
   30882:	cmp.w	r8, #0
   30886:	beq.n	30868 <check_mounted_where@@Base+0xf4>
   30888:	mov	r2, r6
   3088a:	add	r6, r8
   3088c:	ldr	r1, [r5, #4]
   3088e:	mov	r0, r8
   30890:	blx	89d8 <strncpy@plt>
   30894:	movs	r3, #0
   30896:	strb.w	r3, [r6, #-1]
   3089a:	b.n	30868 <check_mounted_where@@Base+0xf4>
   3089c:	blt.n	3087a <check_mounted_where@@Base+0x106>
   3089e:	b.n	30866 <check_mounted_where@@Base+0xf2>
   308a0:	mov	r0, r4
   308a2:	add	sp, #60	; 0x3c
   308a4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   308a8:	cmp	lr, pc
   308aa:	movs	r3, r0
   308ac:	lsls	r0, r5, #8
   308ae:	movs	r0, r0
   308b0:	b.n	3035a <is_same_loop_file@@Base+0xc2>
   308b2:	movs	r0, r0
   308b4:	cmp	r7, #210	; 0xd2
   308b6:	movs	r2, r0
   308b8:	cmp	r7, #68	; 0x44
   308ba:	movs	r2, r0
   308bc:	cmp	r6, r9
   308be:	movs	r3, r0

000308c0 <get_btrfs_mount@@Base>:
   308c0:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   308c4:	mov	r5, r0
   308c6:	mov	r7, r1
   308c8:	mov	r8, r2
   308ca:	bl	3004c <path_is_block_device@@Base>
   308ce:	subs	r4, r0, #0
   308d0:	bgt.n	308fe <get_btrfs_mount@@Base+0x3e>
   308d2:	bne.n	308ea <get_btrfs_mount@@Base+0x2a>
   308d4:	ldr	r0, [pc, #108]	; (30944 <get_btrfs_mount@@Base+0x84>)
   308d6:	mov	r1, r5
   308d8:	mvn.w	r4, #21
   308dc:	add	r0, pc
   308de:	bl	17b7c <__btrfs_error@@Base>
   308e2:	mov	r0, r4
   308e4:	add	sp, #8
   308e6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   308ea:	blx	897c <__errno_location@plt>
   308ee:	negs	r3, r4
   308f0:	mov	r1, r5
   308f2:	str	r3, [r0, #0]
   308f4:	ldr	r0, [pc, #80]	; (30948 <get_btrfs_mount@@Base+0x88>)
   308f6:	add	r0, pc
   308f8:	bl	17b7c <__btrfs_error@@Base>
   308fc:	b.n	308e2 <get_btrfs_mount@@Base+0x22>
   308fe:	movs	r1, #0
   30900:	mov	r0, r5
   30902:	blx	8844 <open64@plt>
   30906:	subs	r6, r0, #0
   30908:	bge.n	30928 <get_btrfs_mount@@Base+0x68>
   3090a:	blx	897c <__errno_location@plt>
   3090e:	mov	r1, r5
   30910:	ldr	r4, [r0, #0]
   30912:	ldr	r0, [pc, #56]	; (3094c <get_btrfs_mount@@Base+0x8c>)
   30914:	negs	r4, r4
   30916:	add	r0, pc
   30918:	bl	17b7c <__btrfs_error@@Base>
   3091c:	adds	r3, r6, #1
   3091e:	beq.n	308e2 <get_btrfs_mount@@Base+0x22>
   30920:	mov	r0, r6
   30922:	blx	8b9c <close@plt>
   30926:	b.n	308e2 <get_btrfs_mount@@Base+0x22>
   30928:	movs	r3, #0
   3092a:	mov	r2, r7
   3092c:	strd	r3, r3, [sp]
   30930:	mov	r1, r5
   30932:	mov	r3, r8
   30934:	bl	30774 <check_mounted_where@@Base>
   30938:	cmp	r0, #0
   3093a:	ite	eq
   3093c:	mvneq.w	r4, #21
   30940:	movne	r4, #0
   30942:	b.n	30920 <get_btrfs_mount@@Base+0x60>
   30944:	cmp	r7, #43	; 0x2b
   30946:	movs	r2, r0
   30948:	cmp	r7, #40	; 0x28
   3094a:	movs	r2, r0
   3094c:	cmp	r7, #41	; 0x29
   3094e:	movs	r2, r0

00030950 <check_mounted@@Base>:
   30950:	push	{r0, r1, r2, r4, r5, lr}
   30952:	movs	r1, #0
   30954:	mov	r4, r0
   30956:	blx	8844 <open64@plt>
   3095a:	subs	r5, r0, #0
   3095c:	bge.n	30976 <check_mounted@@Base+0x26>
   3095e:	ldr	r0, [pc, #48]	; (30990 <check_mounted@@Base+0x40>)
   30960:	mov	r1, r4
   30962:	add	r0, pc
   30964:	bl	17b7c <__btrfs_error@@Base>
   30968:	blx	897c <__errno_location@plt>
   3096c:	ldr	r4, [r0, #0]
   3096e:	negs	r4, r4
   30970:	mov	r0, r4
   30972:	add	sp, #12
   30974:	pop	{r4, r5, pc}
   30976:	movs	r3, #0
   30978:	mov	r1, r4
   3097a:	mov	r2, r3
   3097c:	strd	r3, r3, [sp]
   30980:	bl	30774 <check_mounted_where@@Base>
   30984:	mov	r4, r0
   30986:	mov	r0, r5
   30988:	blx	8b9c <close@plt>
   3098c:	b.n	30970 <check_mounted@@Base+0x20>
   3098e:	nop
   30990:	cmp	r6, #208	; 0xd0
   30992:	movs	r2, r0

00030994 <pretty_size_snprintf@@Base>:
   30994:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30998:	mov	r7, r1
   3099a:	vpush	{d8}
   3099e:	mov	r6, r0
   309a0:	mov	r5, r3
   309a2:	vmov	s17, r2
   309a6:	ldr	r2, [pc, #540]	; (30bc4 <pretty_size_snprintf@@Base+0x230>)
   309a8:	sub	sp, #44	; 0x2c
   309aa:	add	r2, pc
   309ac:	ldr	r1, [sp, #88]	; 0x58
   309ae:	cbz	r3, 309e2 <pretty_size_snprintf@@Base+0x4e>
   309b0:	and.w	r3, r1, #1024	; 0x400
   309b4:	str	r3, [sp, #32]
   309b6:	bic.w	r3, r1, #1272	; 0x4f8
   309ba:	bic.w	r3, r3, #7
   309be:	cmp.w	r3, #256	; 0x100
   309c2:	bne.n	309f4 <pretty_size_snprintf@@Base+0x60>
   309c4:	ldr	r3, [sp, #32]
   309c6:	strd	r0, r7, [sp, #8]
   309ca:	cbz	r3, 309ee <pretty_size_snprintf@@Base+0x5a>
   309cc:	ldr	r3, [pc, #504]	; (30bc8 <pretty_size_snprintf@@Base+0x234>)
   309ce:	add	r3, pc
   309d0:	str	r3, [sp, #0]
   309d2:	movs	r2, #1
   309d4:	vmov	r0, s17
   309d8:	mov.w	r3, #4294967295	; 0xffffffff
   309dc:	mov	r1, r5
   309de:	blx	8bc0 <__snprintf_chk@plt>
   309e2:	movs	r0, #0
   309e4:	add	sp, #44	; 0x2c
   309e6:	vpop	{d8}
   309ea:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   309ee:	ldr	r3, [pc, #476]	; (30bcc <pretty_size_snprintf@@Base+0x238>)
   309f0:	add	r3, pc
   309f2:	b.n	309d0 <pretty_size_snprintf@@Base+0x3c>
   309f4:	cmp.w	r3, #512	; 0x200
   309f8:	beq.w	30b88 <pretty_size_snprintf@@Base+0x1f4>
   309fc:	cmp.w	r3, #768	; 0x300
   30a00:	bne.w	30b62 <pretty_size_snprintf@@Base+0x1ce>
   30a04:	ldr	r3, [pc, #456]	; (30bd0 <pretty_size_snprintf@@Base+0x23c>)
   30a06:	mov.w	r2, #1000	; 0x3e8
   30a0a:	mov.w	sl, #1000	; 0x3e8
   30a0e:	add	r3, pc
   30a10:	adds	r3, #28
   30a12:	str	r3, [sp, #36]	; 0x24
   30a14:	b.n	30b96 <pretty_size_snprintf@@Base+0x202>
   30a16:	asrs	r1, r2, #31
   30a18:	movs	r4, #1
   30a1a:	mul.w	r3, sl, r1
   30a1e:	mla	r3, r2, fp, r3
   30a22:	umull	sl, fp, sl, r2
   30a26:	add	fp, r3
   30a28:	asrs	r1, r2, #31
   30a2a:	adds	r4, #1
   30a2c:	mul.w	r3, sl, r1
   30a30:	mla	r3, r2, fp, r3
   30a34:	umull	sl, fp, sl, r2
   30a38:	add	fp, r3
   30a3a:	asrs	r1, r2, #31
   30a3c:	adds	r4, #1
   30a3e:	mul.w	r3, sl, r1
   30a42:	mla	r3, r2, fp, r3
   30a46:	umull	sl, fp, sl, r2
   30a4a:	add	fp, r3
   30a4c:	adds	r4, #1
   30a4e:	cmp	r4, #6
   30a50:	ble.n	30ac6 <pretty_size_snprintf@@Base+0x132>
   30a52:	vmov	r2, s17
   30a56:	movs	r3, #0
   30a58:	ldr	r1, [pc, #376]	; (30bd4 <pretty_size_snprintf@@Base+0x240>)
   30a5a:	movs	r0, #1
   30a5c:	add	r1, pc
   30a5e:	strb	r3, [r2, #0]
   30a60:	mov	r2, r4
   30a62:	blx	8a30 <__printf_chk@plt+0x4>
   30a66:	ldr	r3, [pc, #368]	; (30bd8 <pretty_size_snprintf@@Base+0x244>)
   30a68:	ldr	r1, [pc, #368]	; (30bdc <pretty_size_snprintf@@Base+0x248>)
   30a6a:	movw	r2, #451	; 0x1c3
   30a6e:	ldr	r0, [pc, #368]	; (30be0 <pretty_size_snprintf@@Base+0x24c>)
   30a70:	add	r3, pc
   30a72:	add	r1, pc
   30a74:	add	r0, pc
   30a76:	blx	8bd8 <__assert_fail@plt>
   30a7a:	movs	r4, #0
   30a7c:	b.n	30a28 <pretty_size_snprintf@@Base+0x94>
   30a7e:	movs	r4, #0
   30a80:	b.n	30a3a <pretty_size_snprintf@@Base+0xa6>
   30a82:	movs	r4, #0
   30a84:	b.n	30a4c <pretty_size_snprintf@@Base+0xb8>
   30a86:	mov	r3, r2
   30a88:	asrs	r4, r2, #31
   30a8a:	strd	r3, r4, [sp, #24]
   30a8e:	mov	r8, r6
   30a90:	ldr	r3, [sp, #32]
   30a92:	mov	r9, r7
   30a94:	cmp	r3, #0
   30a96:	beq.n	30b4c <pretty_size_snprintf@@Base+0x1b8>
   30a98:	movs	r4, #0
   30a9a:	cmp.w	r8, #0
   30a9e:	mov	r2, r8
   30aa0:	sbcs.w	r1, r9, #0
   30aa4:	mov	r3, r9
   30aa6:	bge.n	30ab0 <pretty_size_snprintf@@Base+0x11c>
   30aa8:	rsbs	r2, r8, #0
   30aac:	sbc.w	r3, r9, r9, lsl #1
   30ab0:	ldrd	r0, r1, [sp, #24]
   30ab4:	cmp	r2, r0
   30ab6:	sbcs	r3, r1
   30ab8:	bge.n	30b10 <pretty_size_snprintf@@Base+0x17c>
   30aba:	cmp	r4, #0
   30abc:	bne.n	30a4e <pretty_size_snprintf@@Base+0xba>
   30abe:	mov.w	sl, #1
   30ac2:	mov.w	fp, #0
   30ac6:	mov	r1, fp
   30ac8:	mov	r0, sl
   30aca:	bl	39ad8 <btrfs_util_strerror@@Base+0x6d0>
   30ace:	ldr	r3, [sp, #32]
   30ad0:	mov	r1, r7
   30ad2:	vmov	s16, r0
   30ad6:	mov	r0, r6
   30ad8:	cmp	r3, #0
   30ada:	beq.n	30b5c <pretty_size_snprintf@@Base+0x1c8>
   30adc:	bl	39ae8 <btrfs_util_strerror@@Base+0x6e0>
   30ae0:	vmov	s15, r0
   30ae4:	ldr	r3, [sp, #36]	; 0x24
   30ae6:	vmov	r0, s17
   30aea:	movs	r2, #1
   30aec:	vdiv.f32	s14, s15, s16
   30af0:	mov	r1, r5
   30af2:	ldr.w	r3, [r3, r4, lsl #2]
   30af6:	str	r3, [sp, #16]
   30af8:	ldr	r3, [pc, #232]	; (30be4 <pretty_size_snprintf@@Base+0x250>)
   30afa:	add	r3, pc
   30afc:	str	r3, [sp, #0]
   30afe:	mov.w	r3, #4294967295	; 0xffffffff
   30b02:	vcvt.f64.f32	d7, s14
   30b06:	vstr	d7, [sp, #8]
   30b0a:	blx	8bc0 <__snprintf_chk@plt>
   30b0e:	b.n	309e4 <pretty_size_snprintf@@Base+0x50>
   30b10:	mov	r0, r8
   30b12:	mov	r1, r9
   30b14:	ldrd	r2, r3, [sp, #24]
   30b18:	mov	r6, r8
   30b1a:	bl	39b64 <btrfs_util_strerror@@Base+0x75c>
   30b1e:	mov	r7, r9
   30b20:	adds	r4, #1
   30b22:	mov	r8, r0
   30b24:	mov	r9, r1
   30b26:	b.n	30a9a <pretty_size_snprintf@@Base+0x106>
   30b28:	mov	r0, r8
   30b2a:	mov	r1, r9
   30b2c:	ldrd	r2, r3, [sp, #24]
   30b30:	adds	r4, #1
   30b32:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   30b36:	mov	r6, r8
   30b38:	mov	r7, r9
   30b3a:	mov	r8, r0
   30b3c:	mov	r9, r1
   30b3e:	ldrd	r2, r3, [sp, #24]
   30b42:	cmp	r9, r3
   30b44:	it	eq
   30b46:	cmpeq	r8, r2
   30b48:	bcs.n	30b28 <pretty_size_snprintf@@Base+0x194>
   30b4a:	b.n	30aba <pretty_size_snprintf@@Base+0x126>
   30b4c:	ldr	r4, [sp, #32]
   30b4e:	b.n	30b3e <pretty_size_snprintf@@Base+0x1aa>
   30b50:	mov.w	sl, #1
   30b54:	mov.w	fp, #0
   30b58:	movs	r4, #0
   30b5a:	b.n	30ac6 <pretty_size_snprintf@@Base+0x132>
   30b5c:	bl	39ad8 <btrfs_util_strerror@@Base+0x6d0>
   30b60:	b.n	30ae0 <pretty_size_snprintf@@Base+0x14c>
   30b62:	ldr	r3, [pc, #132]	; (30be8 <pretty_size_snprintf@@Base+0x254>)
   30b64:	ldr	r0, [r2, r3]
   30b66:	bic.w	r3, r1, #1024	; 0x400
   30b6a:	ldr	r2, [pc, #128]	; (30bec <pretty_size_snprintf@@Base+0x258>)
   30b6c:	movs	r1, #1
   30b6e:	add	r2, pc
   30b70:	ldr	r0, [r0, #0]
   30b72:	blx	8a64 <__fprintf_chk@plt+0x4>
   30b76:	ldr	r3, [pc, #120]	; (30bf0 <pretty_size_snprintf@@Base+0x25c>)
   30b78:	ldr	r1, [pc, #120]	; (30bf4 <pretty_size_snprintf@@Base+0x260>)
   30b7a:	mov.w	r2, #394	; 0x18a
   30b7e:	ldr	r0, [pc, #120]	; (30bf8 <pretty_size_snprintf@@Base+0x264>)
   30b80:	add	r3, pc
   30b82:	add	r1, pc
   30b84:	add	r0, pc
   30b86:	b.n	30a76 <pretty_size_snprintf@@Base+0xe2>
   30b88:	ldr	r3, [pc, #112]	; (30bfc <pretty_size_snprintf@@Base+0x268>)
   30b8a:	mov.w	r2, #1024	; 0x400
   30b8e:	mov.w	sl, #1024	; 0x400
   30b92:	add	r3, pc
   30b94:	str	r3, [sp, #36]	; 0x24
   30b96:	uxtb	r1, r1
   30b98:	mov.w	fp, #0
   30b9c:	subs	r1, #1
   30b9e:	cmp	r1, #4
   30ba0:	bhi.w	30a86 <pretty_size_snprintf@@Base+0xf2>
   30ba4:	add	r3, pc, #8	; (adr r3, 30bb0 <pretty_size_snprintf@@Base+0x21c>)
   30ba6:	ldr.w	r1, [r3, r1, lsl #2]
   30baa:	add	r3, r1
   30bac:	bx	r3
   30bae:	nop
   30bb0:			; <UNDEFINED> instruction: 0xffa1ffff
   30bb4:	mrc2	15, 6, pc, cr3, cr15, {7}
   30bb8:	mcr2	15, 6, pc, cr15, cr15, {7}	; <UNPREDICTABLE>
   30bbc:	mcr2	15, 6, pc, cr11, cr15, {7}	; <UNPREDICTABLE>
   30bc0:	mcr2	15, 3, pc, cr7, cr15, {7}	; <UNPREDICTABLE>
   30bc4:	mvns	r6, r2
   30bc6:	movs	r3, r0
   30bc8:	cmp	r6, #132	; 0x84
   30bca:	movs	r2, r0
   30bcc:			; <UNDEFINED> instruction: 0xf7e90000
   30bd0:	ldrsb	r2, [r6, r6]
   30bd2:	movs	r3, r0
   30bd4:	cmp	r5, #251	; 0xfb
   30bd6:	movs	r2, r0
   30bd8:	adds	r4, #13
   30bda:	movs	r2, r0
   30bdc:	cmp	r5, #134	; 0x86
   30bde:	movs	r2, r0
   30be0:	stmia	r1!, {r1, r3, r4, r5, r6, r7}
   30be2:	movs	r0, r0
   30be4:	cmp	r5, #144	; 0x90
   30be6:	movs	r2, r0
   30be8:	lsls	r0, r7, #8
   30bea:	movs	r0, r0
   30bec:	cmp	r5, #35	; 0x23
   30bee:	movs	r2, r0
   30bf0:	adds	r2, #253	; 0xfd
   30bf2:	movs	r2, r0
   30bf4:	cmp	r4, #118	; 0x76
   30bf6:	movs	r2, r0
   30bf8:	stmia	r0!, {r1, r3, r5, r6, r7}
   30bfa:	movs	r0, r0
   30bfc:	ldrsb	r6, [r5, r0]
   30bfe:	movs	r3, r0

00030c00 <pretty_size_mode@@Base>:
   30c00:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   30c04:	mov	r7, r0
   30c06:	ldr	r0, [pc, #68]	; (30c4c <pretty_size_mode@@Base+0x4c>)
   30c08:	mov	r8, r2
   30c0a:	mov	r6, r1
   30c0c:	ldr.w	r9, [pc, #64]	; 30c50 <pretty_size_mode@@Base+0x50>
   30c10:	add	r0, pc
   30c12:	blx	8b34 <__tls_get_addr@plt>
   30c16:	movs	r1, #10
   30c18:	add.w	r4, r0, r9
   30c1c:	mov	r5, r0
   30c1e:	ldr.w	r0, [r0, r9]
   30c22:	adds	r4, #4
   30c24:	add.w	r4, r4, r0, lsl #5
   30c28:	adds	r0, #1
   30c2a:	bl	3992c <btrfs_util_strerror@@Base+0x524>
   30c2e:	movs	r3, #32
   30c30:	mov	r2, r4
   30c32:	mov	r0, r7
   30c34:	str.w	r1, [r9, r5]
   30c38:	mov	r1, r6
   30c3a:	str.w	r8, [sp]
   30c3e:	bl	30994 <pretty_size_snprintf@@Base>
   30c42:	mov	r0, r4
   30c44:	add	sp, #12
   30c46:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   30c4a:	nop
   30c4c:	bics	r0, r0
   30c4e:	movs	r3, r0
   30c50:	movs	r0, r0
	...

00030c54 <get_label_unmounted@@Base>:
   30c54:	push	{r0, r1, r4, r5, r6, lr}
   30c56:	mov	r5, r0
   30c58:	mov	r6, r1
   30c5a:	bl	30950 <check_mounted@@Base>
   30c5e:	subs	r2, r0, #0
   30c60:	bge.n	30c72 <get_label_unmounted@@Base+0x1e>
   30c62:	ldr	r0, [pc, #68]	; (30ca8 <get_label_unmounted@@Base+0x54>)
   30c64:	mov	r1, r5
   30c66:	add	r0, pc
   30c68:	bl	17b7c <__btrfs_error@@Base>
   30c6c:	mov.w	r0, #4294967295	; 0xffffffff
   30c70:	b.n	30ca4 <get_label_unmounted@@Base+0x50>
   30c72:	mov	r0, r5
   30c74:	movs	r4, #0
   30c76:	movs	r2, #0
   30c78:	movs	r3, #0
   30c7a:	str	r4, [sp, #0]
   30c7c:	bl	1e9ec <open_ctree@@Base>
   30c80:	mov	r5, r0
   30c82:	cmp	r0, #0
   30c84:	beq.n	30c6c <get_label_unmounted@@Base+0x18>
   30c86:	ldr.w	r3, [r0, #464]	; 0x1d0
   30c8a:	movs	r2, #255	; 0xff
   30c8c:	mov	r0, r6
   30c8e:	ldr.w	r1, [r3, #308]	; 0x134
   30c92:	addw	r1, r1, #299	; 0x12b
   30c96:	bl	30280 <__strncpy_null@@Base>
   30c9a:	ldr.w	r0, [r5, #464]	; 0x1d0
   30c9e:	bl	1da8c <close_ctree_fs_info@@Base>
   30ca2:	mov	r0, r4
   30ca4:	add	sp, #8
   30ca6:	pop	{r4, r5, r6, pc}
   30ca8:	cmp	r4, #87	; 0x57
   30caa:	movs	r2, r0

00030cac <get_label_mounted@@Base>:
   30cac:	ldr	r2, [pc, #160]	; (30d50 <get_label_mounted@@Base+0xa4>)
   30cae:	ldr	r3, [pc, #164]	; (30d54 <get_label_mounted@@Base+0xa8>)
   30cb0:	add	r2, pc
   30cb2:	push	{r4, r5, r6, r7, lr}
   30cb4:	mov	r5, r1
   30cb6:	ldr	r3, [r2, r3]
   30cb8:	sub	sp, #268	; 0x10c
   30cba:	mov.w	r1, #262144	; 0x40000
   30cbe:	mov	r7, r0
   30cc0:	ldr	r3, [r3, #0]
   30cc2:	str	r3, [sp, #260]	; 0x104
   30cc4:	mov.w	r3, #0
   30cc8:	blx	8844 <open64@plt>
   30ccc:	subs	r4, r0, #0
   30cce:	bge.n	30cf2 <get_label_mounted@@Base+0x46>
   30cd0:	ldr	r0, [pc, #132]	; (30d58 <get_label_mounted@@Base+0xac>)
   30cd2:	mov	r1, r7
   30cd4:	mov.w	r5, #4294967295	; 0xffffffff
   30cd8:	add	r0, pc
   30cda:	bl	17b7c <__btrfs_error@@Base>
   30cde:	ldr	r2, [pc, #124]	; (30d5c <get_label_mounted@@Base+0xb0>)
   30ce0:	ldr	r3, [pc, #112]	; (30d54 <get_label_mounted@@Base+0xa8>)
   30ce2:	add	r2, pc
   30ce4:	ldr	r3, [r2, r3]
   30ce6:	ldr	r2, [r3, #0]
   30ce8:	ldr	r3, [sp, #260]	; 0x104
   30cea:	eors	r2, r3
   30cec:	beq.n	30d44 <get_label_mounted@@Base+0x98>
   30cee:	blx	8708 <__stack_chk_fail@plt>
   30cf2:	add	r6, sp, #4
   30cf4:	mov.w	r2, #256	; 0x100
   30cf8:	movs	r1, #0
   30cfa:	mov	r0, r6
   30cfc:	blx	89bc <memset@plt+0x4>
   30d00:	ldr	r1, [pc, #72]	; (30d4c <get_label_mounted@@Base+0xa0>)
   30d02:	mov	r2, r6
   30d04:	mov	r0, r4
   30d06:	blx	87b4 <ioctl@plt>
   30d0a:	cmp	r0, #0
   30d0c:	bge.n	30d30 <get_label_mounted@@Base+0x84>
   30d0e:	blx	897c <__errno_location@plt>
   30d12:	ldr	r3, [r0, #0]
   30d14:	mov	r5, r0
   30d16:	cmp	r3, #25
   30d18:	beq.n	30d24 <get_label_mounted@@Base+0x78>
   30d1a:	ldr	r0, [pc, #68]	; (30d60 <get_label_mounted@@Base+0xb4>)
   30d1c:	mov	r1, r7
   30d1e:	add	r0, pc
   30d20:	bl	17b7c <__btrfs_error@@Base>
   30d24:	ldr	r5, [r5, #0]
   30d26:	mov	r0, r4
   30d28:	negs	r5, r5
   30d2a:	blx	8b9c <close@plt>
   30d2e:	b.n	30cde <get_label_mounted@@Base+0x32>
   30d30:	movs	r2, #255	; 0xff
   30d32:	mov	r1, r6
   30d34:	mov	r0, r5
   30d36:	movs	r5, #0
   30d38:	bl	30280 <__strncpy_null@@Base>
   30d3c:	mov	r0, r4
   30d3e:	blx	8b9c <close@plt>
   30d42:	b.n	30cde <get_label_mounted@@Base+0x32>
   30d44:	mov	r0, r5
   30d46:	add	sp, #268	; 0x10c
   30d48:	pop	{r4, r5, r6, r7, pc}
   30d4a:	nop
   30d4c:	str	r4, [sp, #196]	; 0xc4
   30d4e:	strh	r0, [r0, #8]
   30d50:	lsrs	r0, r2
   30d52:	movs	r3, r0
   30d54:	lsls	r0, r5, #8
   30d56:	movs	r0, r0
   30d58:	cmp	r4, #12
   30d5a:	movs	r2, r0
   30d5c:	lsls	r6, r3
   30d5e:	movs	r3, r0
   30d60:	cmp	r3, #222	; 0xde
   30d62:	movs	r2, r0

00030d64 <get_label@@Base>:
   30d64:	push	{r0, r1, r4, lr}
   30d66:	mov	r4, r0
   30d68:	str	r1, [sp, #4]
   30d6a:	bl	301a4 <path_is_reg_or_block_device@@Base>
   30d6e:	ldr	r1, [sp, #4]
   30d70:	cmp	r0, #0
   30d72:	bne.n	30d80 <get_label@@Base+0x1c>
   30d74:	mov	r0, r4
   30d76:	add	sp, #8
   30d78:	ldmia.w	sp!, {r4, lr}
   30d7c:	b.w	30cac <get_label_mounted@@Base>
   30d80:	ble.n	30d8e <get_label@@Base+0x2a>
   30d82:	mov	r0, r4
   30d84:	add	sp, #8
   30d86:	ldmia.w	sp!, {r4, lr}
   30d8a:	b.w	30c54 <get_label_unmounted@@Base>
   30d8e:	add	sp, #8
   30d90:	pop	{r4, pc}

00030d92 <set_label@@Base>:
   30d92:	ldr	r2, [pc, #312]	; (30ecc <set_label@@Base+0x13a>)
   30d94:	ldr	r3, [pc, #312]	; (30ed0 <set_label@@Base+0x13e>)
   30d96:	add	r2, pc
   30d98:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   30d9c:	mov	r5, r0
   30d9e:	ldr	r3, [r2, r3]
   30da0:	sub	sp, #272	; 0x110
   30da2:	mov	r0, r1
   30da4:	mov	r6, r1
   30da6:	ldr	r3, [r3, #0]
   30da8:	str	r3, [sp, #268]	; 0x10c
   30daa:	mov.w	r3, #0
   30dae:	blx	8940 <strlen@plt>
   30db2:	cmp	r0, #255	; 0xff
   30db4:	bhi.n	30dda <set_label@@Base+0x48>
   30db6:	mov	r0, r5
   30db8:	bl	301a4 <path_is_reg_or_block_device@@Base>
   30dbc:	subs	r4, r0, #0
   30dbe:	bne.n	30e40 <set_label@@Base+0xae>
   30dc0:	mov.w	r1, #262144	; 0x40000
   30dc4:	mov	r0, r5
   30dc6:	blx	8844 <open64@plt>
   30dca:	subs	r7, r0, #0
   30dcc:	bge.n	30de8 <set_label@@Base+0x56>
   30dce:	ldr	r0, [pc, #260]	; (30ed4 <set_label@@Base+0x142>)
   30dd0:	mov	r1, r5
   30dd2:	add	r0, pc
   30dd4:	bl	17b7c <__btrfs_error@@Base>
   30dd8:	b.n	30e20 <set_label@@Base+0x8e>
   30dda:	ldr	r0, [pc, #252]	; (30ed8 <set_label@@Base+0x146>)
   30ddc:	movs	r2, #255	; 0xff
   30dde:	mov	r1, r6
   30de0:	add	r0, pc
   30de2:	bl	17b7c <__btrfs_error@@Base>
   30de6:	b.n	30e20 <set_label@@Base+0x8e>
   30de8:	add.w	r8, sp, #12
   30dec:	mov.w	r2, #256	; 0x100
   30df0:	mov	r1, r4
   30df2:	mov	r0, r8
   30df4:	blx	89bc <memset@plt+0x4>
   30df8:	movs	r2, #255	; 0xff
   30dfa:	mov	r1, r6
   30dfc:	mov	r0, r8
   30dfe:	bl	30280 <__strncpy_null@@Base>
   30e02:	ldr	r1, [pc, #196]	; (30ec8 <set_label@@Base+0x136>)
   30e04:	mov	r2, r8
   30e06:	mov	r0, r7
   30e08:	blx	87b4 <ioctl@plt>
   30e0c:	cmp	r0, #0
   30e0e:	bge.n	30e26 <set_label@@Base+0x94>
   30e10:	ldr	r0, [pc, #200]	; (30edc <set_label@@Base+0x14a>)
   30e12:	mov	r1, r5
   30e14:	add	r0, pc
   30e16:	bl	17b7c <__btrfs_error@@Base>
   30e1a:	mov	r0, r7
   30e1c:	blx	8b9c <close@plt>
   30e20:	mov.w	r4, #4294967295	; 0xffffffff
   30e24:	b.n	30e2c <set_label@@Base+0x9a>
   30e26:	mov	r0, r7
   30e28:	blx	8b9c <close@plt>
   30e2c:	ldr	r2, [pc, #176]	; (30ee0 <set_label@@Base+0x14e>)
   30e2e:	ldr	r3, [pc, #160]	; (30ed0 <set_label@@Base+0x13e>)
   30e30:	add	r2, pc
   30e32:	ldr	r3, [r2, r3]
   30e34:	ldr	r2, [r3, #0]
   30e36:	ldr	r3, [sp, #268]	; 0x10c
   30e38:	eors	r2, r3
   30e3a:	beq.n	30ec0 <set_label@@Base+0x12e>
   30e3c:	blx	8708 <__stack_chk_fail@plt>
   30e40:	ble.n	30e2c <set_label@@Base+0x9a>
   30e42:	mov	r0, r5
   30e44:	bl	30950 <check_mounted@@Base>
   30e48:	subs	r4, r0, #0
   30e4a:	bge.n	30e56 <set_label@@Base+0xc4>
   30e4c:	ldr	r0, [pc, #148]	; (30ee4 <set_label@@Base+0x152>)
   30e4e:	mov	r2, r4
   30e50:	mov	r1, r5
   30e52:	add	r0, pc
   30e54:	b.n	30de2 <set_label@@Base+0x50>
   30e56:	beq.n	30e60 <set_label@@Base+0xce>
   30e58:	ldr	r0, [pc, #140]	; (30ee8 <set_label@@Base+0x156>)
   30e5a:	mov	r1, r5
   30e5c:	add	r0, pc
   30e5e:	b.n	30dd4 <set_label@@Base+0x42>
   30e60:	mov	r0, r5
   30e62:	mov.w	r8, #1
   30e66:	movs	r2, #0
   30e68:	movs	r3, #0
   30e6a:	str.w	r8, [sp]
   30e6e:	bl	1e9ec <open_ctree@@Base>
   30e72:	mov	r5, r0
   30e74:	cmp	r0, #0
   30e76:	beq.n	30e20 <set_label@@Base+0x8e>
   30e78:	mov	r1, r8
   30e7a:	bl	2b67c <btrfs_start_transaction@@Base>
   30e7e:	cmn.w	r0, #4096	; 0x1000
   30e82:	mov	r7, r0
   30e84:	bls.n	30e9a <set_label@@Base+0x108>
   30e86:	ldr	r1, [pc, #100]	; (30eec <set_label@@Base+0x15a>)
   30e88:	mov	r3, r8
   30e8a:	ldr	r0, [pc, #100]	; (30ef0 <set_label@@Base+0x15e>)
   30e8c:	movw	r2, #507	; 0x1fb
   30e90:	add	r1, pc
   30e92:	adds	r1, #21
   30e94:	add	r0, pc
   30e96:	bl	30624 <test_issubvolname@@Base+0x17e>
   30e9a:	ldr.w	r3, [r5, #464]	; 0x1d0
   30e9e:	movs	r2, #255	; 0xff
   30ea0:	mov	r1, r6
   30ea2:	ldr.w	r0, [r3, #308]	; 0x134
   30ea6:	addw	r0, r0, #299	; 0x12b
   30eaa:	bl	30280 <__strncpy_null@@Base>
   30eae:	mov	r1, r5
   30eb0:	mov	r0, r7
   30eb2:	bl	2b8fc <btrfs_commit_transaction@@Base>
   30eb6:	ldr.w	r0, [r5, #464]	; 0x1d0
   30eba:	bl	1da8c <close_ctree_fs_info@@Base>
   30ebe:	b.n	30e2c <set_label@@Base+0x9a>
   30ec0:	mov	r0, r4
   30ec2:	add	sp, #272	; 0x110
   30ec4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   30ec8:	str	r4, [sp, #200]	; 0xc8
   30eca:	asrs	r0, r0
   30ecc:	subs	r7, #234	; 0xea
   30ece:	movs	r3, r0
   30ed0:	lsls	r0, r5, #8
   30ed2:	movs	r0, r0
   30ed4:	cmp	r3, #18
   30ed6:	movs	r2, r0
   30ed8:	cmp	r3, #58	; 0x3a
   30eda:	movs	r2, r0
   30edc:	cmp	r3, #36	; 0x24
   30ede:	movs	r2, r0
   30ee0:	subs	r7, #80	; 0x50
   30ee2:	movs	r3, r0
   30ee4:	cmp	r2, #107	; 0x6b
   30ee6:	movs	r2, r0
   30ee8:	cmp	r2, #250	; 0xfa
   30eea:	movs	r2, r0
   30eec:	cmp	r7, #237	; 0xed
   30eee:	movs	r2, r0
   30ef0:	ldmia	r0!, {r1, r2, r3, r4, r5, r6}
	...

00030ef4 <parse_size@@Base>:
   30ef4:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30ef8:	mov	sl, r0
   30efa:	ldr	r2, [pc, #404]	; (31090 <parse_size@@Base+0x19c>)
   30efc:	ldr	r3, [pc, #404]	; (31094 <parse_size@@Base+0x1a0>)
   30efe:	add	r2, pc
   30f00:	ldr	r3, [r2, r3]
   30f02:	ldr	r3, [r3, #0]
   30f04:	str	r3, [sp, #4]
   30f06:	mov.w	r3, #0
   30f0a:	cbnz	r0, 30f1a <parse_size@@Base+0x26>
   30f0c:	ldr	r0, [pc, #392]	; (31098 <parse_size@@Base+0x1a4>)
   30f0e:	add	r0, pc
   30f10:	bl	17b7c <__btrfs_error@@Base>
   30f14:	movs	r0, #1
   30f16:	blx	8934 <exit@plt>
   30f1a:	ldrb	r3, [r0, #0]
   30f1c:	cmp	r3, #45	; 0x2d
   30f1e:	bne.n	30f2c <parse_size@@Base+0x38>
   30f20:	mov	r1, r0
   30f22:	ldr	r0, [pc, #376]	; (3109c <parse_size@@Base+0x1a8>)
   30f24:	add	r0, pc
   30f26:	bl	17b7c <__btrfs_error@@Base>
   30f2a:	b.n	30f14 <parse_size@@Base+0x20>
   30f2c:	movs	r2, #10
   30f2e:	mov	r1, sp
   30f30:	blx	89fc <strtoull@plt>
   30f34:	mov	r9, r1
   30f36:	ldr	r1, [sp, #0]
   30f38:	mov	r8, r0
   30f3a:	cmp	r1, sl
   30f3c:	bne.n	30f44 <parse_size@@Base+0x50>
   30f3e:	ldr	r0, [pc, #352]	; (310a0 <parse_size@@Base+0x1ac>)
   30f40:	add	r0, pc
   30f42:	b.n	30f26 <parse_size@@Base+0x32>
   30f44:	ldrb.w	fp, [r1]
   30f48:	cmp.w	fp, #0
   30f4c:	beq.n	30f58 <parse_size@@Base+0x64>
   30f4e:	ldrb	r1, [r1, #1]
   30f50:	cbz	r1, 30f58 <parse_size@@Base+0x64>
   30f52:	ldr	r0, [pc, #336]	; (310a4 <parse_size@@Base+0x1b0>)
   30f54:	add	r0, pc
   30f56:	b.n	30f26 <parse_size@@Base+0x32>
   30f58:	blx	897c <__errno_location@plt>
   30f5c:	ldr	r3, [r0, #0]
   30f5e:	cmp	r3, #34	; 0x22
   30f60:	bne.n	30f76 <parse_size@@Base+0x82>
   30f62:	cmp.w	r9, #4294967295	; 0xffffffff
   30f66:	it	eq
   30f68:	cmpeq.w	r8, #4294967295	; 0xffffffff
   30f6c:	bne.n	30f76 <parse_size@@Base+0x82>
   30f6e:	ldr	r0, [pc, #312]	; (310a8 <parse_size@@Base+0x1b4>)
   30f70:	mov	r1, sl
   30f72:	add	r0, pc
   30f74:	b.n	30f26 <parse_size@@Base+0x32>
   30f76:	cmp.w	fp, #0
   30f7a:	beq.n	31078 <parse_size@@Base+0x184>
   30f7c:	blx	88e0 <__ctype_tolower_loc@plt>
   30f80:	ldr	r3, [r0, #0]
   30f82:	ldrb.w	r1, [r3, fp, lsl #2]
   30f86:	sub.w	r3, r1, #98	; 0x62
   30f8a:	cmp	r3, #18
   30f8c:	bhi.n	31072 <parse_size@@Base+0x17e>
   30f8e:	tbb	[pc, r3]
   30f92:	strb	r3, [r6, #1]
   30f94:	lsrs	r0, r6, #9
   30f96:	str	r0, [r6, #116]	; 0x74
   30f98:	strb	r0, [r6, #1]
   30f9a:	ldr	r0, [r6, #84]	; 0x54
   30f9c:	ldr	r0, [r6, #36]	; 0x24
   30f9e:	strb	r0, [r6, #1]
   30fa0:	strb	r2, [r4, #1]
   30fa2:	strb	r0, [r6, #1]
   30fa4:	lsls	r4, r4, #1
   30fa6:	mov.w	r2, #1024	; 0x400
   30faa:	movs	r3, #0
   30fac:	orr.w	r3, r3, r2, lsr #22
   30fb0:	lsls	r2, r2, #10
   30fb2:	lsls	r3, r3, #10
   30fb4:	orr.w	r3, r3, r2, lsr #22
   30fb8:	lsls	r2, r2, #10
   30fba:	lsls	r3, r3, #10
   30fbc:	orr.w	r3, r3, r2, lsr #22
   30fc0:	lsls	r2, r2, #10
   30fc2:	lsls	r3, r3, #10
   30fc4:	orr.w	r3, r3, r2, lsr #22
   30fc8:	lsls	r2, r2, #10
   30fca:	lsls	r3, r3, #10
   30fcc:	orr.w	r3, r3, r2, lsr #22
   30fd0:	lsls	r2, r2, #10
   30fd2:	movs	r1, #0
   30fd4:	sub.w	ip, r1, #32
   30fd8:	rsb	r0, r1, #32
   30fdc:	lsl.w	r7, r9, r1
   30fe0:	lsl.w	ip, r8, ip
   30fe4:	lsr.w	r0, r8, r0
   30fe8:	orr.w	r7, r7, ip
   30fec:	lsl.w	r6, r8, r1
   30ff0:	orrs	r7, r0
   30ff2:	cmp	r6, #0
   30ff4:	sbcs.w	r0, r7, #0
   30ff8:	bge.n	3107e <parse_size@@Base+0x18a>
   30ffa:	rsb	r0, r1, #64	; 0x40
   30ffe:	movs	r1, #0
   31000:	adds	r1, #1
   31002:	cmp	r1, #64	; 0x40
   31004:	beq.n	31034 <parse_size@@Base+0x140>
   31006:	sub.w	r7, r1, #32
   3100a:	rsb	r6, r1, #32
   3100e:	lsl.w	r5, r3, r1
   31012:	lsl.w	r7, r2, r7
   31016:	lsr.w	r6, r2, r6
   3101a:	orrs	r5, r7
   3101c:	lsl.w	r4, r2, r1
   31020:	orrs	r5, r6
   31022:	cmp	r4, #0
   31024:	sbcs.w	r6, r5, #0
   31028:	bge.n	31000 <parse_size@@Base+0x10c>
   3102a:	rsb	r1, r1, #64	; 0x40
   3102e:	add	r1, r0
   31030:	cmp	r1, #65	; 0x41
   31032:	bgt.n	30f6e <parse_size@@Base+0x7a>
   31034:	mul.w	r3, r8, r3
   31038:	mla	r3, r2, r9, r3
   3103c:	umull	r0, r1, r8, r2
   31040:	ldr	r2, [pc, #104]	; (310ac <parse_size@@Base+0x1b8>)
   31042:	add	r1, r3
   31044:	ldr	r3, [pc, #76]	; (31094 <parse_size@@Base+0x1a0>)
   31046:	add	r2, pc
   31048:	ldr	r3, [r2, r3]
   3104a:	ldr	r2, [r3, #0]
   3104c:	ldr	r3, [sp, #4]
   3104e:	eors	r2, r3
   31050:	beq.n	31088 <parse_size@@Base+0x194>
   31052:	blx	8708 <__stack_chk_fail@plt>
   31056:	movs	r2, #1
   31058:	b.n	30faa <parse_size@@Base+0xb6>
   3105a:	movs	r2, #1
   3105c:	movs	r3, #0
   3105e:	b.n	30fb2 <parse_size@@Base+0xbe>
   31060:	movs	r2, #1
   31062:	movs	r3, #0
   31064:	b.n	30fba <parse_size@@Base+0xc6>
   31066:	movs	r2, #1
   31068:	movs	r3, #0
   3106a:	b.n	30fc2 <parse_size@@Base+0xce>
   3106c:	movs	r2, #1
   3106e:	movs	r3, #0
   31070:	b.n	30fca <parse_size@@Base+0xd6>
   31072:	ldr	r0, [pc, #60]	; (310b0 <parse_size@@Base+0x1bc>)
   31074:	add	r0, pc
   31076:	b.n	30f26 <parse_size@@Base+0x32>
   31078:	movs	r2, #1
   3107a:	movs	r3, #0
   3107c:	b.n	30fd2 <parse_size@@Base+0xde>
   3107e:	adds	r1, #1
   31080:	cmp	r1, #64	; 0x40
   31082:	bne.n	30fd4 <parse_size@@Base+0xe0>
   31084:	movs	r0, #0
   31086:	b.n	30ffe <parse_size@@Base+0x10a>
   31088:	add	sp, #12
   3108a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3108e:	nop
   31090:	subs	r6, #130	; 0x82
   31092:	movs	r3, r0
   31094:	lsls	r0, r5, #8
   31096:	movs	r0, r0
   31098:	cmp	r2, #110	; 0x6e
   3109a:	movs	r2, r0
   3109c:	cmp	r2, #108	; 0x6c
   3109e:	movs	r2, r0
   310a0:	cmp	r2, #117	; 0x75
   310a2:	movs	r2, r0
   310a4:	cmp	r2, #124	; 0x7c
   310a6:	movs	r2, r0
   310a8:	cmp	r2, #151	; 0x97
   310aa:	movs	r2, r0
   310ac:	subs	r5, #58	; 0x3a
   310ae:	movs	r3, r0
   310b0:	cmp	r1, #186	; 0xba
   310b2:	movs	r2, r0

000310b4 <parse_qgroupid@@Base>:
   310b4:	ldr	r2, [pc, #220]	; (31194 <parse_qgroupid@@Base+0xe0>)
   310b6:	movs	r1, #47	; 0x2f
   310b8:	ldr	r3, [pc, #220]	; (31198 <parse_qgroupid@@Base+0xe4>)
   310ba:	add	r2, pc
   310bc:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   310c0:	sub	sp, #24
   310c2:	ldr	r3, [r2, r3]
   310c4:	mov	r4, r0
   310c6:	ldr	r3, [r3, #0]
   310c8:	str	r3, [sp, #20]
   310ca:	mov.w	r3, #0
   310ce:	blx	894c <strchr@plt>
   310d2:	mov	r6, r0
   310d4:	mov	r0, r4
   310d6:	blx	8940 <strlen@plt>
   310da:	movs	r3, #0
   310dc:	str	r3, [sp, #4]
   310de:	ldrb	r3, [r4, #0]
   310e0:	cmp	r3, #47	; 0x2f
   310e2:	add.w	r5, r4, r0
   310e6:	beq.n	3113c <parse_qgroupid@@Base+0x88>
   310e8:	add.w	r8, sp, #4
   310ec:	movs	r2, #10
   310ee:	mov	r0, r4
   310f0:	mov	r1, r8
   310f2:	cbnz	r6, 31116 <parse_qgroupid@@Base+0x62>
   310f4:	blx	89fc <strtoull@plt>
   310f8:	ldr	r3, [sp, #4]
   310fa:	cmp	r3, r5
   310fc:	strd	r0, r1, [sp, #8]
   31100:	bne.n	3113c <parse_qgroupid@@Base+0x88>
   31102:	ldr	r2, [pc, #152]	; (3119c <parse_qgroupid@@Base+0xe8>)
   31104:	ldr	r3, [pc, #144]	; (31198 <parse_qgroupid@@Base+0xe4>)
   31106:	add	r2, pc
   31108:	ldr	r3, [r2, r3]
   3110a:	ldr	r2, [r3, #0]
   3110c:	ldr	r3, [sp, #20]
   3110e:	eors	r2, r3
   31110:	beq.n	3118c <parse_qgroupid@@Base+0xd8>
   31112:	blx	8708 <__stack_chk_fail@plt>
   31116:	blx	89fc <strtoull@plt>
   3111a:	mov	r7, r0
   3111c:	ldr	r0, [sp, #4]
   3111e:	cmp	r0, r6
   31120:	bne.n	3113c <parse_qgroupid@@Base+0x88>
   31122:	adds	r0, #1
   31124:	movs	r2, #10
   31126:	mov	r1, r8
   31128:	blx	89fc <strtoull@plt>
   3112c:	ldr	r3, [sp, #4]
   3112e:	cmp	r3, r5
   31130:	strd	r0, r1, [sp, #8]
   31134:	bne.n	3113c <parse_qgroupid@@Base+0x88>
   31136:	orr.w	r1, r1, r7, lsl #16
   3113a:	b.n	31102 <parse_qgroupid@@Base+0x4e>
   3113c:	mov	r0, r4
   3113e:	bl	32af8 <btrfs_util_is_subvolume@@Base>
   31142:	mov	r1, r0
   31144:	cbnz	r0, 3117a <parse_qgroupid@@Base+0xc6>
   31146:	mov	r0, r4
   31148:	blx	8844 <open64@plt>
   3114c:	subs	r6, r0, #0
   3114e:	blt.n	3117a <parse_qgroupid@@Base+0xc6>
   31150:	add	r1, sp, #8
   31152:	bl	17ee4 <lookup_path_rootid@@Base>
   31156:	mov	r5, r0
   31158:	cbz	r0, 3116a <parse_qgroupid@@Base+0xb6>
   3115a:	blx	897c <__errno_location@plt>
   3115e:	negs	r3, r5
   31160:	str	r3, [r0, #0]
   31162:	ldr	r0, [pc, #60]	; (311a0 <parse_qgroupid@@Base+0xec>)
   31164:	add	r0, pc
   31166:	bl	17b7c <__btrfs_error@@Base>
   3116a:	mov	r0, r6
   3116c:	blx	8b9c <close@plt>
   31170:	cmp	r5, #0
   31172:	blt.n	3117a <parse_qgroupid@@Base+0xc6>
   31174:	ldrd	r0, r1, [sp, #8]
   31178:	b.n	31102 <parse_qgroupid@@Base+0x4e>
   3117a:	ldr	r0, [pc, #40]	; (311a4 <parse_qgroupid@@Base+0xf0>)
   3117c:	mov	r1, r4
   3117e:	add	r0, pc
   31180:	bl	17b7c <__btrfs_error@@Base>
   31184:	mov.w	r0, #4294967295	; 0xffffffff
   31188:	blx	8934 <exit@plt>
   3118c:	add	sp, #24
   3118e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   31192:	nop
   31194:	subs	r4, #198	; 0xc6
   31196:	movs	r3, r0
   31198:	lsls	r0, r5, #8
   3119a:	movs	r0, r0
   3119c:	subs	r4, #122	; 0x7a
   3119e:	movs	r3, r0
   311a0:	cmp	r0, #231	; 0xe7
   311a2:	movs	r2, r0
   311a4:	cmp	r0, #234	; 0xea
   311a6:	movs	r2, r0

000311a8 <parse_csum_type@@Base>:
   311a8:	ldr	r1, [pc, #100]	; (31210 <parse_csum_type@@Base+0x68>)
   311aa:	push	{r4, lr}
   311ac:	add	r1, pc
   311ae:	mov	r4, r0
   311b0:	blx	8748 <strcasecmp@plt>
   311b4:	cbz	r0, 31204 <parse_csum_type@@Base+0x5c>
   311b6:	ldr	r1, [pc, #92]	; (31214 <parse_csum_type@@Base+0x6c>)
   311b8:	mov	r0, r4
   311ba:	add	r1, pc
   311bc:	blx	8748 <strcasecmp@plt>
   311c0:	cbz	r0, 31202 <parse_csum_type@@Base+0x5a>
   311c2:	ldr	r1, [pc, #84]	; (31218 <parse_csum_type@@Base+0x70>)
   311c4:	mov	r0, r4
   311c6:	add	r1, pc
   311c8:	blx	8748 <strcasecmp@plt>
   311cc:	cbz	r0, 31202 <parse_csum_type@@Base+0x5a>
   311ce:	ldr	r1, [pc, #76]	; (3121c <parse_csum_type@@Base+0x74>)
   311d0:	mov	r0, r4
   311d2:	add	r1, pc
   311d4:	blx	8748 <strcasecmp@plt>
   311d8:	cbz	r0, 31206 <parse_csum_type@@Base+0x5e>
   311da:	ldr	r1, [pc, #68]	; (31220 <parse_csum_type@@Base+0x78>)
   311dc:	mov	r0, r4
   311de:	add	r1, pc
   311e0:	blx	8748 <strcasecmp@plt>
   311e4:	cbz	r0, 3120a <parse_csum_type@@Base+0x62>
   311e6:	ldr	r1, [pc, #60]	; (31224 <parse_csum_type@@Base+0x7c>)
   311e8:	mov	r0, r4
   311ea:	add	r1, pc
   311ec:	blx	8748 <strcasecmp@plt>
   311f0:	cbz	r0, 3120a <parse_csum_type@@Base+0x62>
   311f2:	ldr	r0, [pc, #52]	; (31228 <parse_csum_type@@Base+0x80>)
   311f4:	mov	r1, r4
   311f6:	add	r0, pc
   311f8:	bl	17b7c <__btrfs_error@@Base>
   311fc:	movs	r0, #1
   311fe:	blx	8934 <exit@plt>
   31202:	movs	r0, #1
   31204:	pop	{r4, pc}
   31206:	movs	r0, #2
   31208:	b.n	31204 <parse_csum_type@@Base+0x5c>
   3120a:	movs	r0, #3
   3120c:	b.n	31204 <parse_csum_type@@Base+0x5c>
   3120e:	nop
   31210:	cmp	r0, #227	; 0xe3
   31212:	movs	r2, r0
   31214:	cmp	r0, #220	; 0xdc
   31216:	movs	r2, r0
   31218:	cmp	r0, #217	; 0xd9
   3121a:	movs	r2, r0
   3121c:	cmp	r0, #212	; 0xd4
   3121e:	movs	r2, r0
   31220:	cmp	r0, #207	; 0xcf
   31222:	movs	r2, r0
   31224:	cmp	r0, #203	; 0xcb
   31226:	movs	r2, r0
   31228:	cmp	r0, #198	; 0xc6
   3122a:	movs	r2, r0

0003122c <open_file_or_dir3@@Base>:
   3122c:	push	{r4, r5, r6, lr}
   3122e:	mov	r6, r2
   31230:	ldr	r2, [pc, #136]	; (312bc <open_file_or_dir3@@Base+0x90>)
   31232:	sub	sp, #112	; 0x70
   31234:	ldr	r3, [pc, #136]	; (312c0 <open_file_or_dir3@@Base+0x94>)
   31236:	mov	r4, r1
   31238:	add	r2, pc
   3123a:	mov	r1, sp
   3123c:	mov	r5, r0
   3123e:	ldr	r3, [r2, r3]
   31240:	ldr	r3, [r3, #0]
   31242:	str	r3, [sp, #108]	; 0x6c
   31244:	mov.w	r3, #0
   31248:	bl	39db8 <__libc_csu_fini@@Base+0x1c>
   3124c:	cmp	r0, #0
   3124e:	bge.n	31268 <open_file_or_dir3@@Base+0x3c>
   31250:	mov.w	r0, #4294967295	; 0xffffffff
   31254:	ldr	r2, [pc, #108]	; (312c4 <open_file_or_dir3@@Base+0x98>)
   31256:	ldr	r3, [pc, #104]	; (312c0 <open_file_or_dir3@@Base+0x94>)
   31258:	add	r2, pc
   3125a:	ldr	r3, [r2, r3]
   3125c:	ldr	r2, [r3, #0]
   3125e:	ldr	r3, [sp, #108]	; 0x6c
   31260:	eors	r2, r3
   31262:	beq.n	312b6 <open_file_or_dir3@@Base+0x8a>
   31264:	blx	8708 <__stack_chk_fail@plt>
   31268:	ldr	r3, [sp, #16]
   3126a:	and.w	r2, r3, #61440	; 0xf000
   3126e:	cmp.w	r2, #16384	; 0x4000
   31272:	bne.n	31298 <open_file_or_dir3@@Base+0x6c>
   31274:	mov	r0, r5
   31276:	blx	8838 <opendir@plt>
   3127a:	str	r0, [r4, #0]
   3127c:	cmp	r0, #0
   3127e:	beq.n	31250 <open_file_or_dir3@@Base+0x24>
   31280:	blx	8aec <dirfd@plt>
   31284:	cmp	r0, #0
   31286:	bge.n	31254 <open_file_or_dir3@@Base+0x28>
   31288:	ldr	r0, [r4, #0]
   3128a:	cmp	r0, #0
   3128c:	beq.n	31250 <open_file_or_dir3@@Base+0x24>
   3128e:	blx	8bb4 <closedir@plt>
   31292:	movs	r3, #0
   31294:	str	r3, [r4, #0]
   31296:	b.n	31250 <open_file_or_dir3@@Base+0x24>
   31298:	and.w	r3, r3, #53248	; 0xd000
   3129c:	cmp.w	r3, #32768	; 0x8000
   312a0:	bne.n	312ac <open_file_or_dir3@@Base+0x80>
   312a2:	mov	r1, r6
   312a4:	mov	r0, r5
   312a6:	blx	8970 <__open64_2@plt>
   312aa:	b.n	31284 <open_file_or_dir3@@Base+0x58>
   312ac:	blx	897c <__errno_location@plt>
   312b0:	movs	r3, #22
   312b2:	str	r3, [r0, #0]
   312b4:	b.n	31250 <open_file_or_dir3@@Base+0x24>
   312b6:	add	sp, #112	; 0x70
   312b8:	pop	{r4, r5, r6, pc}
   312ba:	nop
   312bc:	subs	r3, #72	; 0x48
   312be:	movs	r3, r0
   312c0:	lsls	r0, r5, #8
   312c2:	movs	r0, r0
   312c4:	subs	r3, #40	; 0x28
   312c6:	movs	r3, r0

000312c8 <open_file_or_dir@@Base>:
   312c8:	movs	r2, #2
   312ca:	b.w	3122c <open_file_or_dir3@@Base>

000312ce <btrfs_open@@Base>:
   312ce:	push	{r4, r5, r6, r7, lr}
   312d0:	mov	r6, r2
   312d2:	ldr	r2, [pc, #172]	; (31380 <btrfs_open@@Base+0xb2>)
   312d4:	mov	r7, r3
   312d6:	ldr	r3, [pc, #172]	; (31384 <btrfs_open@@Base+0xb6>)
   312d8:	sub	sp, #204	; 0xcc
   312da:	add	r2, pc
   312dc:	mov	r5, r1
   312de:	add	r1, sp, #104	; 0x68
   312e0:	mov	r4, r0
   312e2:	ldr	r3, [r2, r3]
   312e4:	ldr	r3, [r3, #0]
   312e6:	str	r3, [sp, #196]	; 0xc4
   312e8:	mov.w	r3, #0
   312ec:	blx	8ac4 <statfs64@plt>
   312f0:	cbz	r0, 31316 <btrfs_open@@Base+0x48>
   312f2:	ldr	r1, [pc, #148]	; (31388 <btrfs_open@@Base+0xba>)
   312f4:	mov	r2, r4
   312f6:	mov	r0, r6
   312f8:	mov.w	r5, #4294967295	; 0xffffffff
   312fc:	add	r1, pc
   312fe:	bl	17c74 <__btrfs_error_on@@Base>
   31302:	ldr	r2, [pc, #136]	; (3138c <btrfs_open@@Base+0xbe>)
   31304:	ldr	r3, [pc, #124]	; (31384 <btrfs_open@@Base+0xb6>)
   31306:	add	r2, pc
   31308:	ldr	r3, [r2, r3]
   3130a:	ldr	r2, [r3, #0]
   3130c:	ldr	r3, [sp, #196]	; 0xc4
   3130e:	eors	r2, r3
   31310:	beq.n	31376 <btrfs_open@@Base+0xa8>
   31312:	blx	8708 <__stack_chk_fail@plt>
   31316:	ldr	r3, [pc, #100]	; (3137c <btrfs_open@@Base+0xae>)
   31318:	ldr	r2, [sp, #104]	; 0x68
   3131a:	cmp	r2, r3
   3131c:	beq.n	31330 <btrfs_open@@Base+0x62>
   3131e:	ldr	r1, [pc, #112]	; (31390 <btrfs_open@@Base+0xc2>)
   31320:	mov	r2, r4
   31322:	mov	r0, r6
   31324:	mvn.w	r5, #1
   31328:	add	r1, pc
   3132a:	bl	17c74 <__btrfs_error_on@@Base>
   3132e:	b.n	31302 <btrfs_open@@Base+0x34>
   31330:	mov	r1, sp
   31332:	mov	r0, r4
   31334:	bl	39db8 <__libc_csu_fini@@Base+0x1c>
   31338:	cmp	r0, #0
   3133a:	bne.n	312f2 <btrfs_open@@Base+0x24>
   3133c:	cbz	r7, 3135c <btrfs_open@@Base+0x8e>
   3133e:	ldr	r3, [sp, #16]
   31340:	and.w	r3, r3, #61440	; 0xf000
   31344:	cmp.w	r3, #16384	; 0x4000
   31348:	beq.n	3135c <btrfs_open@@Base+0x8e>
   3134a:	ldr	r1, [pc, #72]	; (31394 <btrfs_open@@Base+0xc6>)
   3134c:	mov	r2, r4
   3134e:	mov	r0, r6
   31350:	mvn.w	r5, #2
   31354:	add	r1, pc
   31356:	bl	17c74 <__btrfs_error_on@@Base>
   3135a:	b.n	31302 <btrfs_open@@Base+0x34>
   3135c:	mov	r1, r5
   3135e:	mov	r0, r4
   31360:	bl	312c8 <open_file_or_dir@@Base>
   31364:	subs	r5, r0, #0
   31366:	bge.n	31302 <btrfs_open@@Base+0x34>
   31368:	ldr	r1, [pc, #44]	; (31398 <btrfs_open@@Base+0xca>)
   3136a:	mov	r2, r4
   3136c:	mov	r0, r6
   3136e:	add	r1, pc
   31370:	bl	17c74 <__btrfs_error_on@@Base>
   31374:	b.n	31302 <btrfs_open@@Base+0x34>
   31376:	mov	r0, r5
   31378:	add	sp, #204	; 0xcc
   3137a:	pop	{r4, r5, r6, r7, pc}
   3137c:	ldr	r6, [r7, #0]
   3137e:	str	r1, [sp, #140]	; 0x8c
   31380:	subs	r2, #166	; 0xa6
   31382:	movs	r3, r0
   31384:	lsls	r0, r5, #8
   31386:	movs	r0, r0
   31388:	movs	r7, #213	; 0xd5
   3138a:	movs	r2, r0
   3138c:	subs	r2, #122	; 0x7a
   3138e:	movs	r3, r0
   31390:	movs	r7, #192	; 0xc0
   31392:	movs	r2, r0
   31394:	movs	r7, #175	; 0xaf
   31396:	movs	r2, r0
   31398:	movs	r7, #99	; 0x63
   3139a:	movs	r2, r0

0003139c <btrfs_open_dir@@Base>:
   3139c:	movs	r3, #1
   3139e:	b.w	312ce <btrfs_open@@Base>

000313a2 <btrfs_open_file_or_dir@@Base>:
   313a2:	movs	r3, #0
   313a4:	b.w	312ce <btrfs_open@@Base>

000313a8 <open_path_or_dev_mnt@@Base>:
   313a8:	push	{r4, r5, r6, r7, lr}
   313aa:	mov	r4, r1
   313ac:	ldr	r1, [pc, #156]	; (3144c <open_path_or_dev_mnt@@Base+0xa4>)
   313ae:	mov	r6, r2
   313b0:	ldr	r2, [pc, #156]	; (31450 <open_path_or_dev_mnt@@Base+0xa8>)
   313b2:	sub.w	sp, sp, #4096	; 0x1000
   313b6:	add	r1, pc
   313b8:	sub	sp, #12
   313ba:	add.w	r3, sp, #4096	; 0x1000
   313be:	mov	r5, r0
   313c0:	ldr	r2, [r1, r2]
   313c2:	adds	r3, #4
   313c4:	ldr	r2, [r2, #0]
   313c6:	str	r2, [r3, #0]
   313c8:	mov.w	r2, #0
   313cc:	bl	3004c <path_is_block_device@@Base>
   313d0:	cbz	r0, 31432 <open_path_or_dev_mnt@@Base+0x8a>
   313d2:	add	r7, sp, #4
   313d4:	mov.w	r2, #4096	; 0x1000
   313d8:	mov	r0, r5
   313da:	mov	r1, r7
   313dc:	bl	308c0 <get_btrfs_mount@@Base>
   313e0:	cmp	r0, #0
   313e2:	bge.n	31416 <open_path_or_dev_mnt@@Base+0x6e>
   313e4:	ldr	r1, [pc, #108]	; (31454 <open_path_or_dev_mnt@@Base+0xac>)
   313e6:	mov	r2, r5
   313e8:	mov	r0, r6
   313ea:	mov.w	r4, #4294967295	; 0xffffffff
   313ee:	add	r1, pc
   313f0:	bl	17c74 <__btrfs_error_on@@Base>
   313f4:	blx	897c <__errno_location@plt>
   313f8:	movs	r3, #22
   313fa:	str	r3, [r0, #0]
   313fc:	ldr	r1, [pc, #88]	; (31458 <open_path_or_dev_mnt@@Base+0xb0>)
   313fe:	add.w	r3, sp, #4096	; 0x1000
   31402:	ldr	r2, [pc, #76]	; (31450 <open_path_or_dev_mnt@@Base+0xa8>)
   31404:	adds	r3, #4
   31406:	add	r1, pc
   31408:	ldr	r2, [r1, r2]
   3140a:	ldr	r1, [r2, #0]
   3140c:	ldr	r2, [r3, #0]
   3140e:	eors	r1, r2
   31410:	beq.n	31440 <open_path_or_dev_mnt@@Base+0x98>
   31412:	blx	8708 <__stack_chk_fail@plt>
   31416:	mov	r1, r4
   31418:	mov	r0, r7
   3141a:	bl	312c8 <open_file_or_dir@@Base>
   3141e:	mov	r4, r0
   31420:	cbz	r6, 31424 <open_path_or_dev_mnt@@Base+0x7c>
   31422:	lsrs	r6, r0, #31
   31424:	ldr	r1, [pc, #52]	; (3145c <open_path_or_dev_mnt@@Base+0xb4>)
   31426:	mov	r2, r5
   31428:	mov	r0, r6
   3142a:	add	r1, pc
   3142c:	bl	17c74 <__btrfs_error_on@@Base>
   31430:	b.n	313fc <open_path_or_dev_mnt@@Base+0x54>
   31432:	mov	r1, r4
   31434:	movs	r2, #1
   31436:	mov	r0, r5
   31438:	bl	3139c <btrfs_open_dir@@Base>
   3143c:	mov	r4, r0
   3143e:	b.n	313fc <open_path_or_dev_mnt@@Base+0x54>
   31440:	mov	r0, r4
   31442:	add.w	sp, sp, #4096	; 0x1000
   31446:	add	sp, #12
   31448:	pop	{r4, r5, r6, r7, pc}
   3144a:	nop
   3144c:	subs	r1, #202	; 0xca
   3144e:	movs	r3, r0
   31450:	lsls	r0, r5, #8
   31452:	movs	r0, r0
   31454:	movs	r7, #41	; 0x29
   31456:	movs	r2, r0
   31458:	subs	r1, #122	; 0x7a
   3145a:	movs	r3, r0
   3145c:	movs	r7, #16
   3145e:	movs	r2, r0

00031460 <close_file_or_dir@@Base>:
   31460:	push	{r3, r4, r5, r6, r7, lr}
   31462:	mov	r5, r0
   31464:	mov	r6, r1
   31466:	blx	897c <__errno_location@plt>
   3146a:	ldr	r7, [r0, #0]
   3146c:	mov	r4, r0
   3146e:	cbz	r6, 3147a <close_file_or_dir@@Base+0x1a>
   31470:	mov	r0, r6
   31472:	blx	8bb4 <closedir@plt>
   31476:	str	r7, [r4, #0]
   31478:	pop	{r3, r4, r5, r6, r7, pc}
   3147a:	cmp	r5, #0
   3147c:	blt.n	31476 <close_file_or_dir@@Base+0x16>
   3147e:	mov	r0, r5
   31480:	blx	8b9c <close@plt>
   31484:	b.n	31476 <close_file_or_dir@@Base+0x16>

00031486 <get_device_info@@Base>:
   31486:	push	{r4, lr}
   31488:	mov	r4, r0
   3148a:	ldr	r0, [sp, #8]
   3148c:	movs	r1, #0
   3148e:	strd	r2, r3, [r0], #8
   31492:	movs	r2, #16
   31494:	blx	89bc <memset@plt+0x4>
   31498:	ldr	r2, [sp, #8]
   3149a:	ldr	r1, [pc, #24]	; (314b4 <get_device_info@@Base+0x2e>)
   3149c:	mov	r0, r4
   3149e:	blx	87b4 <ioctl@plt>
   314a2:	cmp	r0, #0
   314a4:	bge.n	314b0 <get_device_info@@Base+0x2a>
   314a6:	blx	897c <__errno_location@plt>
   314aa:	ldr	r0, [r0, #0]
   314ac:	negs	r0, r0
   314ae:	pop	{r4, pc}
   314b0:	movs	r0, #0
   314b2:	b.n	314ae <get_device_info@@Base+0x28>
   314b4:	str	r4, [sp, #120]	; 0x78
   314b6:	beq.n	314ba <get_df@@Base+0x2>

000314b8 <get_df@@Base>:
   314b8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   314bc:	mov	r5, r0
   314be:	movs	r0, #16
   314c0:	mov	sl, r1
   314c2:	blx	8870 <malloc@plt+0x4>
   314c6:	mov	r4, r0
   314c8:	cbnz	r0, 314d2 <get_df@@Base+0x1a>
   314ca:	mvn.w	r0, #11
   314ce:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   314d2:	mov.w	r8, #0
   314d6:	mov.w	r9, #0
   314da:	mov	r2, r0
   314dc:	strd	r8, r9, [r0]
   314e0:	strd	r8, r9, [r0, #8]
   314e4:	mov	r0, r5
   314e6:	ldr	r1, [pc, #120]	; (31560 <get_df@@Base+0xa8>)
   314e8:	blx	87b4 <ioctl@plt>
   314ec:	cmp	r0, #0
   314ee:	bge.n	31508 <get_df@@Base+0x50>
   314f0:	ldr	r0, [pc, #112]	; (31564 <get_df@@Base+0xac>)
   314f2:	add	r0, pc
   314f4:	bl	17b7c <__btrfs_error@@Base>
   314f8:	mov	r0, r4
   314fa:	blx	8620 <free@plt+0x4>
   314fe:	blx	897c <__errno_location@plt>
   31502:	ldr	r0, [r0, #0]
   31504:	negs	r0, r0
   31506:	b.n	314ce <get_df@@Base+0x16>
   31508:	ldrd	r6, r7, [r4, #8]
   3150c:	mov	r0, r4
   3150e:	orrs.w	r3, r6, r7
   31512:	bne.n	3151e <get_df@@Base+0x66>
   31514:	blx	8620 <free@plt+0x4>
   31518:	mvn.w	r0, #1
   3151c:	b.n	314ce <get_df@@Base+0x16>
   3151e:	blx	8620 <free@plt+0x4>
   31522:	movs	r0, #24
   31524:	muls	r0, r6
   31526:	adds	r0, #16
   31528:	blx	8870 <malloc@plt+0x4>
   3152c:	mov	r4, r0
   3152e:	cmp	r0, #0
   31530:	beq.n	314ca <get_df@@Base+0x12>
   31532:	mov	r2, r0
   31534:	strd	r6, r7, [r0]
   31538:	strd	r8, r9, [r0, #8]
   3153c:	mov	r0, r5
   3153e:	ldr	r1, [pc, #32]	; (31560 <get_df@@Base+0xa8>)
   31540:	blx	87b4 <ioctl@plt>
   31544:	cmp	r0, #0
   31546:	bge.n	31556 <get_df@@Base+0x9e>
   31548:	ldr	r0, [pc, #28]	; (31568 <get_df@@Base+0xb0>)
   3154a:	mov	r2, r6
   3154c:	mov	r3, r7
   3154e:	add	r0, pc
   31550:	bl	17b7c <__btrfs_error@@Base>
   31554:	b.n	314f8 <get_df@@Base+0x40>
   31556:	movs	r0, #0
   31558:	str.w	r4, [sl]
   3155c:	b.n	314ce <get_df@@Base+0x16>
   3155e:	nop
   31560:	str	r4, [sp, #80]	; 0x50
   31562:	stmia	r0!, {r4}
   31564:	movs	r6, #94	; 0x5e
   31566:	movs	r2, r0
   31568:	movs	r6, #28
   3156a:	movs	r2, r0

0003156c <get_fs_info@@Base>:
   3156c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31570:	sub.w	sp, sp, #12288	; 0x3000
   31574:	sub	sp, #44	; 0x2c
   31576:	mov	r5, r1
   31578:	ldr	r1, [pc, #736]	; (3185c <get_fs_info@@Base+0x2f0>)
   3157a:	add.w	r3, sp, #12288	; 0x3000
   3157e:	str	r2, [sp, #20]
   31580:	adds	r3, #36	; 0x24
   31582:	ldr	r2, [pc, #732]	; (31860 <get_fs_info@@Base+0x2f4>)
   31584:	add	r1, pc
   31586:	add	r7, sp, #40	; 0x28
   31588:	mov.w	r9, #0
   3158c:	mov	r8, r0
   3158e:	mov	r0, r5
   31590:	ldr	r2, [r1, r2]
   31592:	mov	r1, r9
   31594:	ldr	r2, [r2, #0]
   31596:	str	r2, [r3, #0]
   31598:	mov.w	r2, #0
   3159c:	mov.w	r2, #1024	; 0x400
   315a0:	sub.w	r3, r7, #16
   315a4:	strd	r9, r9, [r7, #-16]
   315a8:	str	r3, [sp, #12]
   315aa:	blx	89bc <memset@plt+0x4>
   315ae:	mov	r0, r8
   315b0:	bl	3004c <path_is_block_device@@Base>
   315b4:	cmp	r0, #1
   315b6:	bne.n	31694 <get_fs_info@@Base+0x128>
   315b8:	mov	r1, r9
   315ba:	mov	r0, r8
   315bc:	blx	8844 <open64@plt>
   315c0:	subs	r6, r0, #0
   315c2:	bge.n	315fc <get_fs_info@@Base+0x90>
   315c4:	blx	897c <__errno_location@plt>
   315c8:	mov	r1, r8
   315ca:	ldr	r4, [r0, #0]
   315cc:	ldr	r0, [pc, #660]	; (31864 <get_fs_info@@Base+0x2f8>)
   315ce:	negs	r4, r4
   315d0:	add	r0, pc
   315d2:	bl	17b7c <__btrfs_error@@Base>
   315d6:	ldr.w	r1, [r7, #-12]
   315da:	mov	r0, r6
   315dc:	bl	31460 <close_file_or_dir@@Base>
   315e0:	ldr	r1, [pc, #644]	; (31868 <get_fs_info@@Base+0x2fc>)
   315e2:	ldr	r2, [pc, #636]	; (31860 <get_fs_info@@Base+0x2f4>)
   315e4:	add.w	r3, sp, #12288	; 0x3000
   315e8:	add	r1, pc
   315ea:	adds	r3, #36	; 0x24
   315ec:	ldr	r2, [r1, r2]
   315ee:	ldr	r1, [r2, #0]
   315f0:	ldr	r2, [r3, #0]
   315f2:	eors	r1, r2
   315f4:	beq.w	31846 <get_fs_info@@Base+0x2da>
   315f8:	blx	8708 <__stack_chk_fail@plt>
   315fc:	add.w	r3, sp, #4128	; 0x1020
   31600:	mov	r1, r8
   31602:	adds	r3, #4
   31604:	str	r3, [sp, #16]
   31606:	ldr	r3, [sp, #12]
   31608:	ldr	r2, [sp, #16]
   3160a:	str.w	r9, [sp, #4]
   3160e:	str	r3, [sp, #0]
   31610:	mov.w	r3, #4096	; 0x1000
   31614:	bl	30774 <check_mounted_where@@Base>
   31618:	subs	r4, r0, #0
   3161a:	beq.n	31688 <get_fs_info@@Base+0x11c>
   3161c:	blt.n	315d6 <get_fs_info@@Base+0x6a>
   3161e:	add.w	r8, sp, #8192	; 0x2000
   31622:	movs	r2, #1
   31624:	add.w	r8, r8, #36	; 0x24
   31628:	movs	r3, #0
   3162a:	mov	r0, r6
   3162c:	strd	r2, r3, [r5, #8]
   31630:	mov	r1, r8
   31632:	mov.w	r2, #65536	; 0x10000
   31636:	movs	r3, #0
   31638:	str.w	r9, [sp]
   3163c:	bl	1d3c8 <btrfs_read_dev_super@@Base>
   31640:	subs	r4, r0, #0
   31642:	blt.n	3168e <get_fs_info@@Base+0x122>
   31644:	ldr	r2, [sp, #12]
   31646:	mov	r3, r5
   31648:	ldr.w	sl, [r8, #201]	; 0xc9
   3164c:	ldr.w	fp, [r8, #205]	; 0xcd
   31650:	ldr	r2, [r2, #0]
   31652:	add.w	r1, r2, #16
   31656:	strd	sl, fp, [r3], #16
   3165a:	ldr.w	r0, [r2], #4
   3165e:	cmp	r2, r1
   31660:	str.w	r0, [r3], #4
   31664:	bne.n	3165a <get_fs_info@@Base+0xee>
   31666:	mov	r0, r6
   31668:	blx	8b9c <close@plt>
   3166c:	ldr.w	r8, [sp, #16]
   31670:	sub.w	r1, r7, #12
   31674:	mov	r0, r8
   31676:	bl	312c8 <open_file_or_dir@@Base>
   3167a:	subs	r6, r0, #0
   3167c:	bge.n	316a0 <get_fs_info@@Base+0x134>
   3167e:	blx	897c <__errno_location@plt>
   31682:	ldr	r4, [r0, #0]
   31684:	negs	r4, r4
   31686:	b.n	315d6 <get_fs_info@@Base+0x6a>
   31688:	mvn.w	r4, #21
   3168c:	b.n	315d6 <get_fs_info@@Base+0x6a>
   3168e:	mvn.w	r4, #4
   31692:	b.n	315d6 <get_fs_info@@Base+0x6a>
   31694:	mov.w	sl, #0
   31698:	mov.w	fp, #0
   3169c:	mov	r4, r9
   3169e:	b.n	31670 <get_fs_info@@Base+0x104>
   316a0:	ldrd	r2, r3, [r5, #8]
   316a4:	cmp	r3, #0
   316a6:	it	eq
   316a8:	cmpeq	r2, #1
   316aa:	beq.w	31810 <get_fs_info@@Base+0x2a4>
   316ae:	ldr	r1, [pc, #420]	; (31854 <get_fs_info@@Base+0x2e8>)
   316b0:	mov	r2, r5
   316b2:	blx	87b4 <ioctl@plt>
   316b6:	cmp	r0, #0
   316b8:	blt.n	3167e <get_fs_info@@Base+0x112>
   316ba:	mov	r8, r7
   316bc:	movs	r2, #3
   316be:	movs	r3, #0
   316c0:	strd	r2, r3, [r7, #-8]
   316c4:	movs	r2, #1
   316c6:	movs	r3, #0
   316c8:	movs	r4, #216	; 0xd8
   316ca:	strd	r2, r3, [r8], #-8
   316ce:	mov	r9, r3
   316d0:	strd	r4, r4, [r8, #56]	; 0x38
   316d4:	movs	r4, #30
   316d6:	str.w	r4, [r8, #64]	; 0x40
   316da:	mov	r4, r2
   316dc:	movs	r0, #0
   316de:	movs	r1, #0
   316e0:	strd	r2, r3, [r8, #16]
   316e4:	strd	r0, r1, [r5, #8]
   316e8:	strd	r0, r1, [r8, #40]	; 0x28
   316ec:	mov.w	r0, #4294967295	; 0xffffffff
   316f0:	mov.w	r1, #4294967295	; 0xffffffff
   316f4:	strd	r0, r1, [r8, #48]	; 0x30
   316f8:	strd	r0, r1, [r8, #32]
   316fc:	ldr	r1, [pc, #344]	; (31858 <get_fs_info@@Base+0x2ec>)
   316fe:	mov	r2, r8
   31700:	mov	r0, r6
   31702:	strd	r4, r9, [r8, #24]
   31706:	blx	87b4 <ioctl@plt>
   3170a:	cmp	r0, #0
   3170c:	bge.n	317be <get_fs_info@@Base+0x252>
   3170e:	blx	897c <__errno_location@plt>
   31712:	ldr	r3, [r0, #0]
   31714:	negs	r4, r3
   31716:	cmp	r3, #0
   31718:	bne.w	315d6 <get_fs_info@@Base+0x6a>
   3171c:	movs	r2, #0
   3171e:	movs	r3, #0
   31720:	mov	r0, r6
   31722:	str.w	r8, [sp]
   31726:	bl	31486 <get_device_info@@Base>
   3172a:	mov	r4, r0
   3172c:	cmp	r0, #0
   3172e:	bne.n	31810 <get_fs_info@@Base+0x2a4>
   31730:	ldrd	r3, r2, [r5, #8]
   31734:	mov.w	r8, #1
   31738:	adds	r3, #1
   3173a:	adc.w	r2, r2, #0
   3173e:	strd	r3, r2, [r5, #8]
   31742:	orrs.w	r3, sl, fp
   31746:	itt	eq
   31748:	moveq.w	sl, #1
   3174c:	moveq.w	fp, #0
   31750:	ldrd	r0, r1, [r5, #8]
   31754:	orrs.w	r3, r0, r1
   31758:	beq.w	315d6 <get_fs_info@@Base+0x6a>
   3175c:	lsls	r0, r0, #12
   3175e:	blx	8870 <malloc@plt+0x4>
   31762:	ldr	r3, [sp, #20]
   31764:	mov	r9, r0
   31766:	str	r0, [r3, #0]
   31768:	cmp	r0, #0
   3176a:	beq.n	3167e <get_fs_info@@Base+0x112>
   3176c:	cmp.w	r8, #0
   31770:	beq.n	3177e <get_fs_info@@Base+0x212>
   31772:	sub.w	r1, r7, #8
   31776:	mov.w	r2, #4096	; 0x1000
   3177a:	blx	866c <memcpy@plt+0x4>
   3177e:	ldrd	r2, r3, [r5]
   31782:	ldrd	r0, r1, [r5, #8]
   31786:	cmp	r3, fp
   31788:	it	eq
   3178a:	cmpeq	r2, sl
   3178c:	bcc.n	3179a <get_fs_info@@Base+0x22e>
   3178e:	mov	r2, r8
   31790:	asrs	r3, r2, #31
   31792:	cmp	r3, r1
   31794:	it	eq
   31796:	cmpeq	r8, r0
   31798:	bcc.n	31816 <get_fs_info@@Base+0x2aa>
   3179a:	cmp	r1, #0
   3179c:	it	eq
   3179e:	cmpeq	r0, #1
   317a0:	beq.w	315d6 <get_fs_info@@Base+0x6a>
   317a4:	cmp.w	r8, #0
   317a8:	bne.n	31842 <get_fs_info@@Base+0x2d6>
   317aa:	ldr	r1, [pc, #192]	; (3186c <get_fs_info@@Base+0x300>)
   317ac:	movs	r3, #1
   317ae:	ldr	r0, [pc, #192]	; (31870 <get_fs_info@@Base+0x304>)
   317b0:	movw	r2, #1091	; 0x443
   317b4:	add	r1, pc
   317b6:	adds	r1, #41	; 0x29
   317b8:	add	r0, pc
   317ba:	bl	30624 <test_issubvolname@@Base+0x17e>
   317be:	ldrd	r2, r3, [r5, #8]
   317c2:	ldr.w	r1, [r8, #64]	; 0x40
   317c6:	adds	r2, r2, r1
   317c8:	adc.w	r3, r3, #0
   317cc:	cmp	r1, #30
   317ce:	strd	r2, r3, [r5, #8]
   317d2:	bne.n	317e4 <get_fs_info@@Base+0x278>
   317d4:	ldr.w	r4, [r8, #3906]	; 0xf42
   317d8:	ldr.w	r9, [r8, #3910]	; 0xf46
   317dc:	adds	r4, #1
   317de:	adc.w	r9, r9, #0
   317e2:	b.n	316fc <get_fs_info@@Base+0x190>
   317e4:	cbnz	r1, 317f4 <get_fs_info@@Base+0x288>
   317e6:	adds.w	r4, r4, #4294967295	; 0xffffffff
   317ea:	str	r4, [r5, #0]
   317ec:	adc.w	r3, r9, #4294967295	; 0xffffffff
   317f0:	str	r3, [r5, #4]
   317f2:	b.n	3171c <get_fs_info@@Base+0x1b0>
   317f4:	add.w	r2, sp, #12288	; 0x3000
   317f8:	subs	r1, #1
   317fa:	adds	r2, #40	; 0x28
   317fc:	movs	r3, #130	; 0x82
   317fe:	mla	r1, r3, r1, r2
   31802:	sub.w	r1, r1, #12160	; 0x2f80
   31806:	ldr.w	r2, [r1], #-32
   3180a:	ldr	r3, [r1, #36]	; 0x24
   3180c:	str	r2, [r5, #0]
   3180e:	b.n	317f0 <get_fs_info@@Base+0x284>
   31810:	mov.w	r8, #0
   31814:	b.n	31750 <get_fs_info@@Base+0x1e4>
   31816:	add.w	r3, r9, r8, lsl #12
   3181a:	mov	r2, sl
   3181c:	str	r3, [sp, #0]
   3181e:	mov	r0, r6
   31820:	mov	r3, fp
   31822:	bl	31486 <get_device_info@@Base>
   31826:	cmn.w	r0, #19
   3182a:	mov	r4, r0
   3182c:	beq.n	31838 <get_fs_info@@Base+0x2cc>
   3182e:	cmp	r0, #0
   31830:	bne.w	315d6 <get_fs_info@@Base+0x6a>
   31834:	add.w	r8, r8, #1
   31838:	adds.w	sl, sl, #1
   3183c:	adc.w	fp, fp, #0
   31840:	b.n	3177e <get_fs_info@@Base+0x212>
   31842:	movs	r4, #0
   31844:	b.n	315d6 <get_fs_info@@Base+0x6a>
   31846:	mov	r0, r4
   31848:	add.w	sp, sp, #12288	; 0x3000
   3184c:	add	sp, #44	; 0x2c
   3184e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31852:	nop
   31854:	str	r4, [sp, #124]	; 0x7c
   31856:	strh	r0, [r0, #32]
   31858:	str	r4, [sp, #68]	; 0x44
   3185a:	beq.n	3185e <get_fs_info@@Base+0x2f2>
   3185c:	adds	r7, #252	; 0xfc
   3185e:	movs	r3, r0
   31860:	lsls	r0, r5, #8
   31862:	movs	r0, r0
   31864:	movs	r2, #111	; 0x6f
   31866:	movs	r2, r0
   31868:	adds	r7, #152	; 0x98
   3186a:	movs	r3, r0
   3186c:	movs	r6, #201	; 0xc9
   3186e:	movs	r2, r0
   31870:	movs	r3, #220	; 0xdc
   31872:	movs	r2, r0

00031874 <get_fsid@@Base>:
   31874:	push	{r4, r5, r6, r7, lr}
   31876:	mov	r7, r2
   31878:	ldr	r2, [pc, #148]	; (31910 <get_fsid@@Base+0x9c>)
   3187a:	subw	sp, sp, #1036	; 0x40c
   3187e:	ldr	r3, [pc, #148]	; (31914 <get_fsid@@Base+0xa0>)
   31880:	mov	r4, r1
   31882:	add	r2, pc
   31884:	movs	r1, #0
   31886:	mov	r6, r0
   31888:	ldr	r3, [r2, r3]
   3188a:	ldr	r3, [r3, #0]
   3188c:	str.w	r3, [sp, #1028]	; 0x404
   31890:	mov.w	r3, #0
   31894:	blx	8844 <open64@plt>
   31898:	subs	r5, r0, #0
   3189a:	bge.n	318ca <get_fsid@@Base+0x56>
   3189c:	blx	897c <__errno_location@plt>
   318a0:	ldr	r4, [r0, #0]
   318a2:	negs	r4, r4
   318a4:	cbnz	r7, 318b0 <get_fsid@@Base+0x3c>
   318a6:	ldr	r0, [pc, #112]	; (31918 <get_fsid@@Base+0xa4>)
   318a8:	mov	r1, r6
   318aa:	add	r0, pc
   318ac:	bl	17b7c <__btrfs_error@@Base>
   318b0:	adds	r3, r5, #1
   318b2:	bne.n	318de <get_fsid@@Base+0x6a>
   318b4:	ldr	r2, [pc, #100]	; (3191c <get_fsid@@Base+0xa8>)
   318b6:	ldr	r3, [pc, #92]	; (31914 <get_fsid@@Base+0xa0>)
   318b8:	add	r2, pc
   318ba:	ldr	r3, [r2, r3]
   318bc:	ldr	r2, [r3, #0]
   318be:	ldr.w	r3, [sp, #1028]	; 0x404
   318c2:	eors	r2, r3
   318c4:	beq.n	31904 <get_fsid@@Base+0x90>
   318c6:	blx	8708 <__stack_chk_fail@plt>
   318ca:	ldr	r1, [pc, #64]	; (3190c <get_fsid@@Base+0x98>)
   318cc:	mov	r2, sp
   318ce:	blx	87b4 <ioctl@plt>
   318d2:	cmp	r0, #0
   318d4:	bge.n	318e6 <get_fsid@@Base+0x72>
   318d6:	blx	897c <__errno_location@plt>
   318da:	ldr	r4, [r0, #0]
   318dc:	negs	r4, r4
   318de:	mov	r0, r5
   318e0:	blx	8b9c <close@plt>
   318e4:	b.n	318b4 <get_fsid@@Base+0x40>
   318e6:	mov	r3, r4
   318e8:	add	r6, sp, #16
   318ea:	add	r4, sp, #32
   318ec:	mov	r2, r6
   318ee:	adds	r3, #8
   318f0:	ldmia	r2!, {r0, r1}
   318f2:	cmp	r2, r4
   318f4:	str.w	r0, [r3, #-8]
   318f8:	mov	r6, r2
   318fa:	str.w	r1, [r3, #-4]
   318fe:	bne.n	318ec <get_fsid@@Base+0x78>
   31900:	movs	r4, #0
   31902:	b.n	318de <get_fsid@@Base+0x6a>
   31904:	mov	r0, r4
   31906:	addw	sp, sp, #1036	; 0x40c
   3190a:	pop	{r4, r5, r6, r7, pc}
   3190c:	str	r4, [sp, #124]	; 0x7c
   3190e:	strh	r0, [r0, #32]
   31910:	adds	r4, #254	; 0xfe
   31912:	movs	r3, r0
   31914:	lsls	r0, r5, #8
   31916:	movs	r0, r0
   31918:	ldrh	r3, [r6, #22]
   3191a:	movs	r0, r0
   3191c:	adds	r4, #200	; 0xc8
   3191e:	movs	r3, r0

00031920 <group_profile_max_safe_loss@@Base>:
   31920:	movs	r3, #0
   31922:	cmp	r3, #0
   31924:	push	{r4, r5, lr}
   31926:	and.w	r4, r0, #2040	; 0x7f8
   3192a:	it	eq
   3192c:	cmpeq	r4, #128	; 0x80
   3192e:	mov	r5, r3
   31930:	beq.n	319a0 <group_profile_max_safe_loss@@Base+0x80>
   31932:	cmp	r3, #0
   31934:	it	eq
   31936:	cmpeq	r4, #129	; 0x81
   31938:	bcs.n	3196e <group_profile_max_safe_loss@@Base+0x4e>
   3193a:	cmp	r3, #0
   3193c:	it	eq
   3193e:	cmpeq	r4, #16
   31940:	beq.n	319a0 <group_profile_max_safe_loss@@Base+0x80>
   31942:	cmp	r3, #0
   31944:	it	eq
   31946:	cmpeq	r4, #17
   31948:	bcs.n	31958 <group_profile_max_safe_loss@@Base+0x38>
   3194a:	tst.w	r0, #2032	; 0x7f0
   3194e:	ite	ne
   31950:	movne.w	r0, #4294967295	; 0xffffffff
   31954:	moveq	r0, r3
   31956:	pop	{r4, r5, pc}
   31958:	cmp	r3, #0
   3195a:	it	eq
   3195c:	cmpeq	r4, #32
   3195e:	beq.n	319a4 <group_profile_max_safe_loss@@Base+0x84>
   31960:	cmp	r3, #0
   31962:	itet	eq
   31964:	cmpeq	r4, #64	; 0x40
   31966:	movne.w	r0, #4294967295	; 0xffffffff
   3196a:	moveq	r0, #1
   3196c:	b.n	31956 <group_profile_max_safe_loss@@Base+0x36>
   3196e:	cmp	r3, #0
   31970:	it	eq
   31972:	cmpeq.w	r4, #1024	; 0x400
   31976:	beq.n	319a8 <group_profile_max_safe_loss@@Base+0x88>
   31978:	movs	r3, #0
   3197a:	cmp	r3, r5
   3197c:	mov.w	r2, #1024	; 0x400
   31980:	it	eq
   31982:	cmpeq	r2, r4
   31984:	bcc.n	319ac <group_profile_max_safe_loss@@Base+0x8c>
   31986:	cmp	r5, #0
   31988:	it	eq
   3198a:	cmpeq.w	r4, #256	; 0x100
   3198e:	beq.n	319b2 <group_profile_max_safe_loss@@Base+0x92>
   31990:	cmp	r5, #0
   31992:	itet	eq
   31994:	cmpeq.w	r4, #512	; 0x200
   31998:	movne.w	r0, #4294967295	; 0xffffffff
   3199c:	moveq	r0, #2
   3199e:	b.n	31956 <group_profile_max_safe_loss@@Base+0x36>
   319a0:	movs	r0, #1
   319a2:	b.n	31956 <group_profile_max_safe_loss@@Base+0x36>
   319a4:	mov	r0, r3
   319a6:	b.n	31956 <group_profile_max_safe_loss@@Base+0x36>
   319a8:	movs	r0, #3
   319aa:	b.n	31956 <group_profile_max_safe_loss@@Base+0x36>
   319ac:	mov.w	r0, #4294967295	; 0xffffffff
   319b0:	b.n	31956 <group_profile_max_safe_loss@@Base+0x36>
   319b2:	movs	r0, #2
   319b4:	b.n	31956 <group_profile_max_safe_loss@@Base+0x36>

000319b6 <ask_user@@Base>:
   319b6:	ldr	r2, [pc, #148]	; (31a4c <ask_user@@Base+0x96>)
   319b8:	ldr	r3, [pc, #148]	; (31a50 <ask_user@@Base+0x9a>)
   319ba:	add	r2, pc
   319bc:	push	{r4, r5, r6, lr}
   319be:	movs	r5, #0
   319c0:	sub	sp, #40	; 0x28
   319c2:	ldr	r3, [r2, r3]
   319c4:	mov	r4, r0
   319c6:	movs	r2, #26
   319c8:	mov	r1, r5
   319ca:	add	r0, sp, #8
   319cc:	ldr	r3, [r3, #0]
   319ce:	str	r3, [sp, #36]	; 0x24
   319d0:	mov.w	r3, #0
   319d4:	str	r5, [sp, #4]
   319d6:	blx	89bc <memset@plt+0x4>
   319da:	ldr	r1, [pc, #120]	; (31a54 <ask_user@@Base+0x9e>)
   319dc:	mov	r2, r4
   319de:	ldr	r6, [pc, #120]	; (31a58 <ask_user@@Base+0xa2>)
   319e0:	add	r1, pc
   319e2:	movs	r0, #1
   319e4:	str	r5, [sp, #0]
   319e6:	blx	8a30 <__printf_chk@plt+0x4>
   319ea:	ldr	r3, [pc, #112]	; (31a5c <ask_user@@Base+0xa6>)
   319ec:	add	r6, pc
   319ee:	add	r4, sp, #4
   319f0:	movs	r1, #29
   319f2:	ldr	r3, [r6, r3]
   319f4:	mov	r0, r4
   319f6:	ldr	r2, [r3, #0]
   319f8:	blx	862c <fgets@plt>
   319fc:	cbnz	r0, 31a14 <ask_user@@Base+0x5e>
   319fe:	movs	r0, #0
   31a00:	ldr	r2, [pc, #92]	; (31a60 <ask_user@@Base+0xaa>)
   31a02:	ldr	r3, [pc, #76]	; (31a50 <ask_user@@Base+0x9a>)
   31a04:	add	r2, pc
   31a06:	ldr	r3, [r2, r3]
   31a08:	ldr	r2, [r3, #0]
   31a0a:	ldr	r3, [sp, #36]	; 0x24
   31a0c:	eors	r2, r3
   31a0e:	beq.n	31a46 <ask_user@@Base+0x90>
   31a10:	blx	8708 <__stack_chk_fail@plt>
   31a14:	ldr	r1, [pc, #76]	; (31a64 <ask_user@@Base+0xae>)
   31a16:	mov	r0, r4
   31a18:	mov	r2, sp
   31a1a:	add	r1, pc
   31a1c:	blx	8820 <strtok_r@plt>
   31a20:	mov	r4, r0
   31a22:	cmp	r0, #0
   31a24:	beq.n	319fe <ask_user@@Base+0x48>
   31a26:	ldr	r1, [pc, #64]	; (31a68 <ask_user@@Base+0xb2>)
   31a28:	add	r1, pc
   31a2a:	blx	8748 <strcasecmp@plt>
   31a2e:	cbz	r0, 31a42 <ask_user@@Base+0x8c>
   31a30:	ldr	r1, [pc, #56]	; (31a6c <ask_user@@Base+0xb6>)
   31a32:	mov	r0, r4
   31a34:	add	r1, pc
   31a36:	blx	8748 <strcasecmp@plt>
   31a3a:	clz	r0, r0
   31a3e:	lsrs	r0, r0, #5
   31a40:	b.n	31a00 <ask_user@@Base+0x4a>
   31a42:	movs	r0, #1
   31a44:	b.n	31a00 <ask_user@@Base+0x4a>
   31a46:	add	sp, #40	; 0x28
   31a48:	pop	{r4, r5, r6, pc}
   31a4a:	nop
   31a4c:	adds	r3, #198	; 0xc6
   31a4e:	movs	r3, r0
   31a50:	lsls	r0, r5, #8
   31a52:	movs	r0, r0
   31a54:	movs	r1, #191	; 0xbf
   31a56:	movs	r2, r0
   31a58:	adds	r3, #148	; 0x94
   31a5a:	movs	r3, r0
   31a5c:	lsls	r0, r2, #9
   31a5e:	movs	r0, r0
   31a60:	adds	r3, #124	; 0x7c
   31a62:	movs	r3, r0
   31a64:	movs	r1, #144	; 0x90
   31a66:	movs	r2, r0
   31a68:	b.n	31d20 <btrfs_group_profile_str@@Base+0x70>
   31a6a:	movs	r0, r0
   31a6c:	bkpt	0x00d0
	...

00031a70 <find_mount_root@@Base>:
   31a70:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31a74:	mov	r9, r0
   31a76:	str	r1, [sp, #0]
   31a78:	mov.w	r1, #262144	; 0x40000
   31a7c:	blx	8844 <open64@plt>
   31a80:	cmp	r0, #0
   31a82:	bge.n	31a94 <find_mount_root@@Base+0x24>
   31a84:	blx	897c <__errno_location@plt>
   31a88:	ldr	r4, [r0, #0]
   31a8a:	negs	r4, r4
   31a8c:	mov	r0, r4
   31a8e:	add	sp, #12
   31a90:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31a94:	blx	8b9c <close@plt>
   31a98:	ldr	r1, [pc, #172]	; (31b48 <find_mount_root@@Base+0xd8>)
   31a9a:	ldr	r0, [pc, #176]	; (31b4c <find_mount_root@@Base+0xdc>)
   31a9c:	add	r1, pc
   31a9e:	add	r0, pc
   31aa0:	blx	8b28 <setmntent@plt>
   31aa4:	mov	r7, r0
   31aa6:	cmp	r0, #0
   31aa8:	beq.n	31a84 <find_mount_root@@Base+0x14>
   31aaa:	ldr.w	fp, [pc, #164]	; 31b50 <find_mount_root@@Base+0xe0>
   31aae:	movs	r5, #0
   31ab0:	mov	sl, r5
   31ab2:	movs	r6, #1
   31ab4:	add	fp, pc
   31ab6:	b.n	31ac4 <find_mount_root@@Base+0x54>
   31ab8:	ldr	r0, [r4, #8]
   31aba:	mov	r1, fp
   31abc:	blx	85ac <strcmp@plt>
   31ac0:	mov	sl, r8
   31ac2:	mov	r6, r0
   31ac4:	mov	r0, r7
   31ac6:	blx	882c <getmntent@plt>
   31aca:	mov	r4, r0
   31acc:	cbz	r0, 31b08 <find_mount_root@@Base+0x98>
   31ace:	ldr	r3, [r4, #4]
   31ad0:	mov	r0, r3
   31ad2:	str	r3, [sp, #4]
   31ad4:	blx	8940 <strlen@plt>
   31ad8:	ldr	r3, [sp, #4]
   31ada:	mov	r1, r9
   31adc:	mov	r8, r0
   31ade:	mov	r2, r0
   31ae0:	mov	r0, r3
   31ae2:	blx	8b78 <strncmp@plt>
   31ae6:	cmp	r0, #0
   31ae8:	bne.n	31ac4 <find_mount_root@@Base+0x54>
   31aea:	cmp	sl, r8
   31aec:	bgt.n	31ac4 <find_mount_root@@Base+0x54>
   31aee:	mov	r0, r5
   31af0:	blx	8620 <free@plt+0x4>
   31af4:	ldr	r0, [r4, #4]
   31af6:	blx	86f0 <strdup@plt+0x4>
   31afa:	mov	r5, r0
   31afc:	cmp	r0, #0
   31afe:	bne.n	31ab8 <find_mount_root@@Base+0x48>
   31b00:	blx	897c <__errno_location@plt>
   31b04:	ldr	r4, [r0, #0]
   31b06:	negs	r4, r4
   31b08:	mov	r0, r7
   31b0a:	blx	8a88 <endmntent@plt>
   31b0e:	cmp	r4, #0
   31b10:	bne.n	31a8c <find_mount_root@@Base+0x1c>
   31b12:	cbz	r5, 31b40 <find_mount_root@@Base+0xd0>
   31b14:	cbz	r6, 31b20 <find_mount_root@@Base+0xb0>
   31b16:	mov	r0, r5
   31b18:	movs	r4, #1
   31b1a:	blx	8620 <free@plt+0x4>
   31b1e:	b.n	31a8c <find_mount_root@@Base+0x1c>
   31b20:	mov	r1, r6
   31b22:	mov	r0, r5
   31b24:	blx	8b90 <realpath@plt>
   31b28:	ldr	r3, [sp, #0]
   31b2a:	str	r0, [r3, #0]
   31b2c:	cbnz	r0, 31b36 <find_mount_root@@Base+0xc6>
   31b2e:	blx	897c <__errno_location@plt>
   31b32:	ldr	r6, [r0, #0]
   31b34:	negs	r6, r6
   31b36:	mov	r0, r5
   31b38:	mov	r4, r6
   31b3a:	blx	8620 <free@plt+0x4>
   31b3e:	b.n	31a8c <find_mount_root@@Base+0x1c>
   31b40:	mvn.w	r4, #1
   31b44:	b.n	31a8c <find_mount_root@@Base+0x1c>
   31b46:	nop
   31b48:	bcs.n	31c3a <btrfs_group_type_str@@Base+0x1a>
   31b4a:	movs	r0, r0
   31b4c:	adds	r6, r6, #3
   31b4e:	movs	r2, r0
   31b50:	adds	r2, r4, #1
   31b52:	movs	r2, r0

00031b54 <units_set_mode@@Base>:
   31b54:	ldrb	r3, [r0, #0]
   31b56:	orrs	r1, r3
   31b58:	str	r1, [r0, #0]
   31b5a:	bx	lr

00031b5c <units_set_base@@Base>:
   31b5c:	ldr	r3, [r0, #0]
   31b5e:	bic.w	r3, r3, #255	; 0xff
   31b62:	orrs	r3, r1
   31b64:	str	r3, [r0, #0]
   31b66:	bx	lr

00031b68 <find_next_key@@Base>:
   31b68:	ldr	r2, [pc, #168]	; (31c14 <find_next_key@@Base+0xac>)
   31b6a:	ldr	r3, [pc, #172]	; (31c18 <find_next_key@@Base+0xb0>)
   31b6c:	add	r2, pc
   31b6e:	push	{r4, r5, r6, lr}
   31b70:	sub	sp, #24
   31b72:	ldr	r3, [r2, r3]
   31b74:	mov	r4, r1
   31b76:	movs	r5, #0
   31b78:	ldr	r3, [r3, #0]
   31b7a:	str	r3, [sp, #20]
   31b7c:	mov.w	r3, #0
   31b80:	subs	r3, r0, #4
   31b82:	ldr.w	r0, [r3, #4]!
   31b86:	cbz	r0, 31b9a <find_next_key@@Base+0x32>
   31b88:	ldr	r2, [r3, #32]
   31b8a:	ldr.w	r1, [r0, #192]	; 0xc0
   31b8e:	adds	r2, #1
   31b90:	cmp	r2, r1
   31b92:	bcc.n	31b9e <find_next_key@@Base+0x36>
   31b94:	adds	r5, #1
   31b96:	cmp	r5, #8
   31b98:	bne.n	31b82 <find_next_key@@Base+0x1a>
   31b9a:	movs	r5, #1
   31b9c:	b.n	31bce <find_next_key@@Base+0x66>
   31b9e:	add.w	r6, r4, #9
   31ba2:	mov	r1, sp
   31ba4:	cbnz	r5, 31be2 <find_next_key@@Base+0x7a>
   31ba6:	movs	r3, #25
   31ba8:	muls	r2, r3
   31baa:	movs	r3, #17
   31bac:	adds	r2, #101	; 0x65
   31bae:	bl	17a1a <read_extent_buffer@@Base>
   31bb2:	ldr.w	r2, [sp, #9]
   31bb6:	ldr.w	r3, [sp, #13]
   31bba:	str.w	r2, [r4, #9]
   31bbe:	str	r3, [r6, #4]
   31bc0:	ldrb.w	r3, [sp, #8]
   31bc4:	strb	r3, [r4, #8]
   31bc6:	ldr	r3, [sp, #0]
   31bc8:	str	r3, [r4, #0]
   31bca:	ldr	r3, [sp, #4]
   31bcc:	str	r3, [r4, #4]
   31bce:	ldr	r2, [pc, #76]	; (31c1c <find_next_key@@Base+0xb4>)
   31bd0:	ldr	r3, [pc, #68]	; (31c18 <find_next_key@@Base+0xb0>)
   31bd2:	add	r2, pc
   31bd4:	ldr	r3, [r2, r3]
   31bd6:	ldr	r2, [r3, #0]
   31bd8:	ldr	r3, [sp, #20]
   31bda:	eors	r2, r3
   31bdc:	beq.n	31c0e <find_next_key@@Base+0xa6>
   31bde:	blx	8708 <__stack_chk_fail@plt>
   31be2:	add.w	r2, r2, r2, lsl #5
   31be6:	movs	r3, #17
   31be8:	adds	r2, #101	; 0x65
   31bea:	movs	r5, #0
   31bec:	bl	17a1a <read_extent_buffer@@Base>
   31bf0:	ldr.w	r2, [sp, #9]
   31bf4:	ldr.w	r3, [sp, #13]
   31bf8:	str.w	r2, [r4, #9]
   31bfc:	str	r3, [r6, #4]
   31bfe:	ldrb.w	r3, [sp, #8]
   31c02:	strb	r3, [r4, #8]
   31c04:	ldr	r3, [sp, #0]
   31c06:	str	r3, [r4, #0]
   31c08:	ldr	r3, [sp, #4]
   31c0a:	str	r3, [r4, #4]
   31c0c:	b.n	31bce <find_next_key@@Base+0x66>
   31c0e:	mov	r0, r5
   31c10:	add	sp, #24
   31c12:	pop	{r4, r5, r6, pc}
   31c14:	adds	r2, #20
   31c16:	movs	r3, r0
   31c18:	lsls	r0, r5, #8
   31c1a:	movs	r0, r0
   31c1c:	adds	r1, #174	; 0xae
   31c1e:	movs	r3, r0

00031c20 <btrfs_group_type_str@@Base>:
   31c20:	and.w	r3, r1, #131072	; 0x20000
   31c24:	and.w	r2, r0, #7
   31c28:	cmp	r3, #0
   31c2a:	it	eq
   31c2c:	cmpeq	r2, #6
   31c2e:	push	{r4, r5, lr}
   31c30:	bcs.n	31c62 <btrfs_group_type_str@@Base+0x42>
   31c32:	orrs.w	r1, r2, r3
   31c36:	beq.n	31c7e <btrfs_group_type_str@@Base+0x5e>
   31c38:	adds.w	r4, r2, #4294967295	; 0xffffffff
   31c3c:	adc.w	r5, r3, #4294967295	; 0xffffffff
   31c40:	cmp	r5, #0
   31c42:	it	eq
   31c44:	cmpeq	r4, #5
   31c46:	bcs.n	31c5c <btrfs_group_type_str@@Base+0x3c>
   31c48:	cmp	r4, #4
   31c4a:	bhi.n	31c5c <btrfs_group_type_str@@Base+0x3c>
   31c4c:	tbb	[pc, r4]
   31c50:	lsls	r2, r3, #12
   31c52:	asrs	r6, r0, #4
   31c54:	movs	r4, r2
   31c56:	ldr	r0, [pc, #56]	; (31c90 <btrfs_group_type_str@@Base+0x70>)
   31c58:	add	r0, pc
   31c5a:	pop	{r4, r5, pc}
   31c5c:	ldr	r0, [pc, #52]	; (31c94 <btrfs_group_type_str@@Base+0x74>)
   31c5e:	add	r0, pc
   31c60:	b.n	31c5a <btrfs_group_type_str@@Base+0x3a>
   31c62:	cmp.w	r3, #131072	; 0x20000
   31c66:	it	eq
   31c68:	cmpeq	r2, #0
   31c6a:	bne.n	31c8a <btrfs_group_type_str@@Base+0x6a>
   31c6c:	ldr	r0, [pc, #40]	; (31c98 <btrfs_group_type_str@@Base+0x78>)
   31c6e:	add	r0, pc
   31c70:	b.n	31c5a <btrfs_group_type_str@@Base+0x3a>
   31c72:	ldr	r0, [pc, #40]	; (31c9c <btrfs_group_type_str@@Base+0x7c>)
   31c74:	add	r0, pc
   31c76:	b.n	31c5a <btrfs_group_type_str@@Base+0x3a>
   31c78:	ldr	r0, [pc, #36]	; (31ca0 <btrfs_group_type_str@@Base+0x80>)
   31c7a:	add	r0, pc
   31c7c:	b.n	31c5a <btrfs_group_type_str@@Base+0x3a>
   31c7e:	ldr	r0, [pc, #36]	; (31ca4 <btrfs_group_type_str@@Base+0x84>)
   31c80:	add	r0, pc
   31c82:	b.n	31c5a <btrfs_group_type_str@@Base+0x3a>
   31c84:	ldr	r0, [pc, #32]	; (31ca8 <btrfs_group_type_str@@Base+0x88>)
   31c86:	add	r0, pc
   31c88:	b.n	31c5a <btrfs_group_type_str@@Base+0x3a>
   31c8a:	ldr	r0, [pc, #32]	; (31cac <btrfs_group_type_str@@Base+0x8c>)
   31c8c:	add	r0, pc
   31c8e:	b.n	31c5a <btrfs_group_type_str@@Base+0x3a>
   31c90:	subs	r2, r5, #5
   31c92:	movs	r2, r0
   31c94:	beq.n	31c14 <find_next_key@@Base+0xac>
   31c96:	movs	r0, r0
   31c98:	subs	r3, r3, #5
   31c9a:	movs	r2, r0
   31c9c:	subs	r5, r0, #5
   31c9e:	movs	r2, r0
   31ca0:	subs	r2, r7, #4
   31ca2:	movs	r2, r0
   31ca4:	beq.n	31be0 <find_next_key@@Base+0x78>
   31ca6:	movs	r0, r0
   31ca8:	subs	r1, r5, #4
   31caa:	movs	r2, r0
   31cac:	beq.n	31bd0 <find_next_key@@Base+0x68>
	...

00031cb0 <btrfs_group_profile_str@@Base>:
   31cb0:	and.w	r2, r0, #2040	; 0x7f8
   31cb4:	movs	r3, #0
   31cb6:	cmp	r3, #0
   31cb8:	it	eq
   31cba:	cmpeq	r2, #64	; 0x40
   31cbc:	beq.n	31d38 <btrfs_group_profile_str@@Base+0x88>
   31cbe:	cmp	r3, #0
   31cc0:	it	eq
   31cc2:	cmpeq	r2, #65	; 0x41
   31cc4:	bcs.n	31cf8 <btrfs_group_profile_str@@Base+0x48>
   31cc6:	cmp	r3, #0
   31cc8:	it	eq
   31cca:	cmpeq	r2, #16
   31ccc:	beq.n	31d3e <btrfs_group_profile_str@@Base+0x8e>
   31cce:	cmp	r3, #0
   31cd0:	it	eq
   31cd2:	cmpeq	r2, #17
   31cd4:	bcs.n	31cea <btrfs_group_profile_str@@Base+0x3a>
   31cd6:	orrs.w	r1, r2, r3
   31cda:	beq.n	31d44 <btrfs_group_profile_str@@Base+0x94>
   31cdc:	cmp	r3, #0
   31cde:	it	eq
   31ce0:	cmpeq	r2, #8
   31ce2:	bne.n	31d4a <btrfs_group_profile_str@@Base+0x9a>
   31ce4:	ldr	r0, [pc, #136]	; (31d70 <btrfs_group_profile_str@@Base+0xc0>)
   31ce6:	add	r0, pc
   31ce8:	bx	lr
   31cea:	cmp	r3, #0
   31cec:	it	eq
   31cee:	cmpeq	r2, #32
   31cf0:	bne.n	31d50 <btrfs_group_profile_str@@Base+0xa0>
   31cf2:	ldr	r0, [pc, #128]	; (31d74 <btrfs_group_profile_str@@Base+0xc4>)
   31cf4:	add	r0, pc
   31cf6:	bx	lr
   31cf8:	cmp	r3, #0
   31cfa:	it	eq
   31cfc:	cmpeq.w	r2, #512	; 0x200
   31d00:	beq.n	31d56 <btrfs_group_profile_str@@Base+0xa6>
   31d02:	movs	r1, #0
   31d04:	cmp	r1, r3
   31d06:	mov.w	r0, #512	; 0x200
   31d0a:	it	eq
   31d0c:	cmpeq	r0, r2
   31d0e:	bcc.n	31d28 <btrfs_group_profile_str@@Base+0x78>
   31d10:	cmp	r3, #0
   31d12:	it	eq
   31d14:	cmpeq	r2, #128	; 0x80
   31d16:	beq.n	31d5c <btrfs_group_profile_str@@Base+0xac>
   31d18:	cmp	r3, #0
   31d1a:	it	eq
   31d1c:	cmpeq.w	r2, #256	; 0x100
   31d20:	bne.n	31d62 <btrfs_group_profile_str@@Base+0xb2>
   31d22:	ldr	r0, [pc, #84]	; (31d78 <btrfs_group_profile_str@@Base+0xc8>)
   31d24:	add	r0, pc
   31d26:	bx	lr
   31d28:	cmp	r3, #0
   31d2a:	it	eq
   31d2c:	cmpeq.w	r2, #1024	; 0x400
   31d30:	bne.n	31d68 <btrfs_group_profile_str@@Base+0xb8>
   31d32:	ldr	r0, [pc, #72]	; (31d7c <btrfs_group_profile_str@@Base+0xcc>)
   31d34:	add	r0, pc
   31d36:	bx	lr
   31d38:	ldr	r0, [pc, #68]	; (31d80 <btrfs_group_profile_str@@Base+0xd0>)
   31d3a:	add	r0, pc
   31d3c:	bx	lr
   31d3e:	ldr	r0, [pc, #68]	; (31d84 <btrfs_group_profile_str@@Base+0xd4>)
   31d40:	add	r0, pc
   31d42:	bx	lr
   31d44:	ldr	r0, [pc, #64]	; (31d88 <btrfs_group_profile_str@@Base+0xd8>)
   31d46:	add	r0, pc
   31d48:	bx	lr
   31d4a:	ldr	r0, [pc, #64]	; (31d8c <btrfs_group_profile_str@@Base+0xdc>)
   31d4c:	add	r0, pc
   31d4e:	bx	lr
   31d50:	ldr	r0, [pc, #60]	; (31d90 <btrfs_group_profile_str@@Base+0xe0>)
   31d52:	add	r0, pc
   31d54:	bx	lr
   31d56:	ldr	r0, [pc, #60]	; (31d94 <btrfs_group_profile_str@@Base+0xe4>)
   31d58:	add	r0, pc
   31d5a:	bx	lr
   31d5c:	ldr	r0, [pc, #56]	; (31d98 <btrfs_group_profile_str@@Base+0xe8>)
   31d5e:	add	r0, pc
   31d60:	bx	lr
   31d62:	ldr	r0, [pc, #56]	; (31d9c <btrfs_group_profile_str@@Base+0xec>)
   31d64:	add	r0, pc
   31d66:	bx	lr
   31d68:	ldr	r0, [pc, #52]	; (31da0 <btrfs_group_profile_str@@Base+0xf0>)
   31d6a:	add	r0, pc
   31d6c:	bx	lr
   31d6e:	nop
   31d70:	ldmia	r3!, {r0, r6}
   31d72:	movs	r0, r0
   31d74:	ldmia	r3!, {r0, r1, r4, r6}
   31d76:	movs	r0, r0
   31d78:	ldmia	r3!, {r0, r1, r2, r4, r5}
   31d7a:	movs	r0, r0
   31d7c:	ldmia	r3, {r1, r3}
   31d7e:	movs	r0, r0
   31d80:	ldmia	r3!, {r1, r4}
   31d82:	movs	r0, r0
   31d84:	ldmia	r2, {r1, r2, r3, r5, r6, r7}
   31d86:	movs	r0, r0
   31d88:	subs	r1, r2, #2
   31d8a:	movs	r2, r0
   31d8c:	ldmia	r7, {r4, r6, r7}
   31d8e:	movs	r0, r0
   31d90:	ldmia	r7, {r1, r3, r6, r7}
   31d92:	movs	r0, r0
   31d94:	ldmia	r2, {r0, r2, r3, r4, r6, r7}
   31d96:	movs	r0, r0
   31d98:	ldmia	r2, {r1, r2, r4, r5, r6, r7}
   31d9a:	movs	r0, r0
   31d9c:	ldmia	r7, {r3, r4, r5, r7}
   31d9e:	movs	r0, r0
   31da0:	ldmia	r7, {r1, r4, r5, r7}
	...

00031da4 <test_num_disk_vs_raid@@Base>:
   31da4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31da8:	sub	sp, #36	; 0x24
   31daa:	mov	sl, r3
   31dac:	ldr	r3, [pc, #316]	; (31eec <test_num_disk_vs_raid@@Base+0x148>)
   31dae:	ldrd	r6, r7, [sp, #72]	; 0x48
   31db2:	orr.w	fp, r0, r2
   31db6:	add	r3, pc
   31db8:	ldr	r5, [sp, #80]	; 0x50
   31dba:	cmp	r7, #0
   31dbc:	mov	r9, r0
   31dbe:	it	eq
   31dc0:	cmpeq	r6, #2
   31dc2:	mov	r8, r2
   31dc4:	str	r3, [sp, #28]
   31dc6:	beq.n	31e54 <test_num_disk_vs_raid@@Base+0xb0>
   31dc8:	cmp	r7, #0
   31dca:	it	eq
   31dcc:	cmpeq	r6, #3
   31dce:	beq.n	31e50 <test_num_disk_vs_raid@@Base+0xac>
   31dd0:	cmp	r7, #0
   31dd2:	it	eq
   31dd4:	cmpeq	r6, #1
   31dd6:	beq.n	31e58 <test_num_disk_vs_raid@@Base+0xb4>
   31dd8:	mov.w	r4, #1088	; 0x440
   31ddc:	orr.w	r4, r4, #768	; 0x300
   31de0:	orr.w	r4, r4, #152	; 0x98
   31de4:	cmp	r7, #0
   31de6:	orr.w	r4, r4, #32
   31dea:	it	eq
   31dec:	cmpeq	r6, #2
   31dee:	bcc.n	31e06 <test_num_disk_vs_raid@@Base+0x62>
   31df0:	and.w	r2, fp, #32
   31df4:	movs	r3, #0
   31df6:	orrs	r3, r2
   31df8:	beq.n	31e06 <test_num_disk_vs_raid@@Base+0x62>
   31dfa:	ldr	r0, [pc, #244]	; (31ef0 <test_num_disk_vs_raid@@Base+0x14c>)
   31dfc:	str	r1, [sp, #16]
   31dfe:	add	r0, pc
   31e00:	bl	17b00 <__btrfs_warning@@Base>
   31e04:	ldr	r1, [sp, #16]
   31e06:	bic.w	r3, r9, r4
   31e0a:	mvn.w	ip, r4
   31e0e:	strd	r3, r1, [sp, #16]
   31e12:	ldrd	r3, r4, [sp, #16]
   31e16:	orrs	r3, r4
   31e18:	beq.n	31e5c <test_num_disk_vs_raid@@Base+0xb8>
   31e1a:	ldr	r2, [pc, #216]	; (31ef4 <test_num_disk_vs_raid@@Base+0x150>)
   31e1c:	mov	r0, r9
   31e1e:	ldr	r3, [sp, #28]
   31e20:	ldr	r3, [r3, r2]
   31e22:	str	r1, [sp, #28]
   31e24:	ldr	r4, [r3, #0]
   31e26:	bl	31cb0 <btrfs_group_profile_str@@Base>
   31e2a:	ldr	r1, [sp, #28]
   31e2c:	str	r0, [sp, #16]
   31e2e:	mov	r0, r9
   31e30:	bl	304e0 <test_issubvolname@@Base+0x3a>
   31e34:	ldr	r2, [pc, #192]	; (31ef8 <test_num_disk_vs_raid@@Base+0x154>)
   31e36:	ldr	r3, [sp, #16]
   31e38:	add	r2, pc
   31e3a:	strd	r6, r7, [sp]
   31e3e:	str	r0, [sp, #8]
   31e40:	movs	r1, #1
   31e42:	mov	r0, r4
   31e44:	blx	8a64 <__fprintf_chk@plt+0x4>
   31e48:	movs	r0, #1
   31e4a:	add	sp, #36	; 0x24
   31e4c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31e50:	movs	r4, #0
   31e52:	b.n	31ddc <test_num_disk_vs_raid@@Base+0x38>
   31e54:	movs	r4, #0
   31e56:	b.n	31de0 <test_num_disk_vs_raid@@Base+0x3c>
   31e58:	movs	r4, #0
   31e5a:	b.n	31de4 <test_num_disk_vs_raid@@Base+0x40>
   31e5c:	and.w	r0, ip, r8
   31e60:	mov	r1, sl
   31e62:	orrs.w	r3, r0, r1
   31e66:	beq.n	31e8e <test_num_disk_vs_raid@@Base+0xea>
   31e68:	ldr	r2, [pc, #136]	; (31ef4 <test_num_disk_vs_raid@@Base+0x150>)
   31e6a:	mov	r0, r8
   31e6c:	ldr	r3, [sp, #28]
   31e6e:	ldr	r3, [r3, r2]
   31e70:	ldr	r4, [r3, #0]
   31e72:	bl	31cb0 <btrfs_group_profile_str@@Base>
   31e76:	mov	r1, sl
   31e78:	str	r0, [sp, #16]
   31e7a:	mov	r0, r8
   31e7c:	bl	304e0 <test_issubvolname@@Base+0x3a>
   31e80:	ldr	r2, [pc, #120]	; (31efc <test_num_disk_vs_raid@@Base+0x158>)
   31e82:	ldr	r3, [sp, #16]
   31e84:	add	r2, pc
   31e86:	strd	r6, r7, [sp]
   31e8a:	str	r0, [sp, #8]
   31e8c:	b.n	31e40 <test_num_disk_vs_raid@@Base+0x9c>
   31e8e:	cmp	r7, #0
   31e90:	mov.w	r1, #0
   31e94:	it	eq
   31e96:	cmpeq	r6, #3
   31e98:	bne.n	31ece <test_num_disk_vs_raid@@Base+0x12a>
   31e9a:	and.w	r2, fp, #256	; 0x100
   31e9e:	mov	r3, r1
   31ea0:	orrs	r3, r2
   31ea2:	beq.n	31eac <test_num_disk_vs_raid@@Base+0x108>
   31ea4:	ldr	r0, [pc, #88]	; (31f00 <test_num_disk_vs_raid@@Base+0x15c>)
   31ea6:	add	r0, pc
   31ea8:	bl	17b00 <__btrfs_warning@@Base>
   31eac:	cbnz	r5, 31ee6 <test_num_disk_vs_raid@@Base+0x142>
   31eae:	and.w	r2, r8, #32
   31eb2:	mov	r3, r5
   31eb4:	orrs	r3, r2
   31eb6:	beq.n	31ec0 <test_num_disk_vs_raid@@Base+0x11c>
   31eb8:	ldr	r5, [sp, #84]	; 0x54
   31eba:	subs	r5, #0
   31ebc:	it	ne
   31ebe:	movne	r5, #1
   31ec0:	ldr	r1, [pc, #64]	; (31f04 <test_num_disk_vs_raid@@Base+0x160>)
   31ec2:	mov	r0, r5
   31ec4:	add	r1, pc
   31ec6:	bl	17bf8 <__btrfs_warning_on@@Base>
   31eca:	movs	r0, #0
   31ecc:	b.n	31e4a <test_num_disk_vs_raid@@Base+0xa6>
   31ece:	cmp	r7, #0
   31ed0:	it	eq
   31ed2:	cmpeq	r6, #2
   31ed4:	bne.n	31eac <test_num_disk_vs_raid@@Base+0x108>
   31ed6:	and.w	r2, fp, #128	; 0x80
   31eda:	mov	r3, r1
   31edc:	orrs	r3, r2
   31ede:	beq.n	31eac <test_num_disk_vs_raid@@Base+0x108>
   31ee0:	ldr	r0, [pc, #36]	; (31f08 <test_num_disk_vs_raid@@Base+0x164>)
   31ee2:	add	r0, pc
   31ee4:	b.n	31ea8 <test_num_disk_vs_raid@@Base+0x104>
   31ee6:	movs	r5, #0
   31ee8:	b.n	31ec0 <test_num_disk_vs_raid@@Base+0x11c>
   31eea:	nop
   31eec:	cmp	r7, #202	; 0xca
   31eee:	movs	r3, r0
   31ef0:	adds	r0, r4, #7
   31ef2:	movs	r2, r0
   31ef4:	lsls	r0, r7, #8
   31ef6:	movs	r0, r0
   31ef8:	adds	r1, r4, #7
   31efa:	movs	r2, r0
   31efc:	adds	r2, r7, #7
   31efe:	movs	r2, r0
   31f00:	subs	r1, r7, #0
   31f02:	movs	r2, r0
   31f04:	subs	r1, r2, #2
   31f06:	movs	r2, r0
   31f08:	subs	r0, r7, #0
   31f0a:	movs	r2, r0

00031f0c <btrfs_tree_search2_ioctl_supported@@Base>:
   31f0c:	ldr	r2, [pc, #144]	; (31fa0 <btrfs_tree_search2_ioctl_supported@@Base+0x94>)
   31f0e:	ldr	r3, [pc, #148]	; (31fa4 <btrfs_tree_search2_ioctl_supported@@Base+0x98>)
   31f10:	add	r2, pc
   31f12:	ldr	r1, [pc, #136]	; (31f9c <btrfs_tree_search2_ioctl_supported@@Base+0x90>)
   31f14:	push	{r4, r5, r7, lr}
   31f16:	sub	sp, #8
   31f18:	add	r7, sp, #0
   31f1a:	ldr	r3, [r2, r3]
   31f1c:	sub.w	sp, sp, #1024	; 0x400
   31f20:	movs	r2, #1
   31f22:	ldr	r3, [r3, #0]
   31f24:	str	r3, [r7, #4]
   31f26:	mov.w	r3, #0
   31f2a:	movs	r3, #0
   31f2c:	strd	r2, r3, [sp]
   31f30:	movs	r2, #2
   31f32:	movs	r3, #0
   31f34:	strd	r2, r3, [sp, #8]
   31f38:	strd	r2, r3, [sp, #16]
   31f3c:	mov.w	r2, #4294967295	; 0xffffffff
   31f40:	movs	r3, #132	; 0x84
   31f42:	strd	r3, r3, [sp, #56]	; 0x38
   31f46:	mov.w	r3, #4294967295	; 0xffffffff
   31f4a:	strd	r2, r3, [sp, #32]
   31f4e:	strd	r2, r3, [sp, #48]	; 0x30
   31f52:	movs	r3, #1
   31f54:	mov.w	r2, #912	; 0x390
   31f58:	str	r3, [sp, #64]	; 0x40
   31f5a:	movs	r3, #0
   31f5c:	strd	r2, r3, [sp, #104]	; 0x68
   31f60:	mov	r2, sp
   31f62:	movs	r4, #0
   31f64:	movs	r5, #0
   31f66:	strd	r4, r5, [sp, #24]
   31f6a:	strd	r4, r5, [sp, #40]	; 0x28
   31f6e:	blx	87b4 <ioctl@plt>
   31f72:	cmn.w	r0, #95	; 0x5f
   31f76:	beq.n	31f92 <btrfs_tree_search2_ioctl_supported@@Base+0x86>
   31f78:	cmp	r0, #0
   31f7a:	it	eq
   31f7c:	moveq	r0, #1
   31f7e:	ldr	r2, [pc, #40]	; (31fa8 <btrfs_tree_search2_ioctl_supported@@Base+0x9c>)
   31f80:	ldr	r3, [pc, #32]	; (31fa4 <btrfs_tree_search2_ioctl_supported@@Base+0x98>)
   31f82:	add	r2, pc
   31f84:	ldr	r3, [r2, r3]
   31f86:	ldr	r2, [r3, #0]
   31f88:	ldr	r3, [r7, #4]
   31f8a:	eors	r2, r3
   31f8c:	beq.n	31f96 <btrfs_tree_search2_ioctl_supported@@Base+0x8a>
   31f8e:	blx	8708 <__stack_chk_fail@plt>
   31f92:	movs	r0, #0
   31f94:	b.n	31f7e <btrfs_tree_search2_ioctl_supported@@Base+0x72>
   31f96:	adds	r7, #8
   31f98:	mov	sp, r7
   31f9a:	pop	{r4, r5, r7, pc}
   31f9c:	str	r4, [sp, #68]	; 0x44
   31f9e:	stmia	r0!, {r4, r5, r6}
   31fa0:	cmp	r6, #112	; 0x70
   31fa2:	movs	r3, r0
   31fa4:	lsls	r0, r5, #8
   31fa6:	movs	r0, r0
   31fa8:	cmp	r5, #254	; 0xfe
   31faa:	movs	r3, r0

00031fac <get_unit_mode_from_arg@@Base>:
   31fac:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31fb0:	mov	r8, r2
   31fb2:	ldr	r2, [pc, #448]	; (32174 <get_unit_mode_from_arg@@Base+0x1c8>)
   31fb4:	sub	sp, #20
   31fb6:	ldr	r3, [pc, #448]	; (32178 <get_unit_mode_from_arg@@Base+0x1cc>)
   31fb8:	mov	r7, r0
   31fba:	add	r2, pc
   31fbc:	ldr.w	r9, [pc, #444]	; 3217c <get_unit_mode_from_arg@@Base+0x1d0>
   31fc0:	ldr.w	sl, [pc, #444]	; 32180 <get_unit_mode_from_arg@@Base+0x1d4>
   31fc4:	mov	r4, r1
   31fc6:	ldr.w	fp, [pc, #444]	; 32184 <get_unit_mode_from_arg@@Base+0x1d8>
   31fca:	add	r9, pc
   31fcc:	ldr	r3, [r2, r3]
   31fce:	add	sl, pc
   31fd0:	add	fp, pc
   31fd2:	movs	r5, #0
   31fd4:	ldr	r3, [r3, #0]
   31fd6:	str	r3, [sp, #12]
   31fd8:	mov.w	r3, #0
   31fdc:	mov.w	r3, #512	; 0x200
   31fe0:	str	r3, [sp, #8]
   31fe2:	ldr	r3, [r7, #0]
   31fe4:	cmp	r3, r5
   31fe6:	bgt.n	3200e <get_unit_mode_from_arg@@Base+0x62>
   31fe8:	movs	r3, #0
   31fea:	mov	r0, r3
   31fec:	ldr	r2, [r7, #0]
   31fee:	cmp	r2, r0
   31ff0:	bgt.w	3215a <get_unit_mode_from_arg@@Base+0x1ae>
   31ff4:	ldr	r2, [pc, #400]	; (32188 <get_unit_mode_from_arg@@Base+0x1dc>)
   31ff6:	str	r3, [r7, #0]
   31ff8:	ldr	r3, [pc, #380]	; (32178 <get_unit_mode_from_arg@@Base+0x1cc>)
   31ffa:	add	r2, pc
   31ffc:	ldr	r0, [sp, #8]
   31ffe:	ldr	r3, [r2, r3]
   32000:	ldr	r2, [r3, #0]
   32002:	ldr	r3, [sp, #12]
   32004:	eors	r2, r3
   32006:	beq.w	3216e <get_unit_mode_from_arg@@Base+0x1c2>
   3200a:	blx	8708 <__stack_chk_fail@plt>
   3200e:	ldr.w	r6, [r4, r5, lsl #2]
   32012:	mov	r1, r9
   32014:	mov	r0, r6
   32016:	blx	85ac <strcmp@plt>
   3201a:	cmp	r0, #0
   3201c:	beq.w	3216a <get_unit_mode_from_arg@@Base+0x1be>
   32020:	mov	r1, sl
   32022:	mov	r0, r6
   32024:	blx	85ac <strcmp@plt>
   32028:	cbnz	r0, 32030 <get_unit_mode_from_arg@@Base+0x84>
   3202a:	mov.w	r3, #256	; 0x100
   3202e:	b.n	3203e <get_unit_mode_from_arg@@Base+0x92>
   32030:	mov	r1, fp
   32032:	mov	r0, r6
   32034:	blx	85ac <strcmp@plt>
   32038:	cbnz	r0, 32048 <get_unit_mode_from_arg@@Base+0x9c>
   3203a:	mov.w	r3, #512	; 0x200
   3203e:	str	r3, [sp, #8]
   32040:	str.w	r0, [r4, r5, lsl #2]
   32044:	adds	r5, #1
   32046:	b.n	31fe2 <get_unit_mode_from_arg@@Base+0x36>
   32048:	ldr	r1, [pc, #320]	; (3218c <get_unit_mode_from_arg@@Base+0x1e0>)
   3204a:	mov	r0, r6
   3204c:	add	r1, pc
   3204e:	blx	85ac <strcmp@plt>
   32052:	cbnz	r0, 32064 <get_unit_mode_from_arg@@Base+0xb8>
   32054:	mov.w	r1, #512	; 0x200
   32058:	str	r0, [sp, #4]
   3205a:	add	r0, sp, #8
   3205c:	bl	31b54 <units_set_mode@@Base>
   32060:	ldr	r3, [sp, #4]
   32062:	b.n	320d0 <get_unit_mode_from_arg@@Base+0x124>
   32064:	ldr	r1, [pc, #296]	; (32190 <get_unit_mode_from_arg@@Base+0x1e4>)
   32066:	mov	r0, r6
   32068:	add	r1, pc
   3206a:	blx	85ac <strcmp@plt>
   3206e:	cbnz	r0, 32078 <get_unit_mode_from_arg@@Base+0xcc>
   32070:	mov.w	r1, #768	; 0x300
   32074:	str	r0, [sp, #4]
   32076:	b.n	3205a <get_unit_mode_from_arg@@Base+0xae>
   32078:	ldr	r1, [pc, #280]	; (32194 <get_unit_mode_from_arg@@Base+0x1e8>)
   3207a:	mov	r0, r6
   3207c:	add	r1, pc
   3207e:	blx	85ac <strcmp@plt>
   32082:	mov	r3, r0
   32084:	cbnz	r0, 32092 <get_unit_mode_from_arg@@Base+0xe6>
   32086:	movs	r1, #2
   32088:	str	r3, [sp, #4]
   3208a:	add	r0, sp, #8
   3208c:	bl	31b5c <units_set_base@@Base>
   32090:	b.n	32060 <get_unit_mode_from_arg@@Base+0xb4>
   32092:	ldr	r1, [pc, #260]	; (32198 <get_unit_mode_from_arg@@Base+0x1ec>)
   32094:	mov	r0, r6
   32096:	add	r1, pc
   32098:	blx	85ac <strcmp@plt>
   3209c:	mov	r3, r0
   3209e:	cbnz	r0, 320a6 <get_unit_mode_from_arg@@Base+0xfa>
   320a0:	movs	r1, #3
   320a2:	str	r3, [sp, #4]
   320a4:	b.n	3208a <get_unit_mode_from_arg@@Base+0xde>
   320a6:	ldr	r1, [pc, #244]	; (3219c <get_unit_mode_from_arg@@Base+0x1f0>)
   320a8:	mov	r0, r6
   320aa:	add	r1, pc
   320ac:	blx	85ac <strcmp@plt>
   320b0:	mov	r3, r0
   320b2:	cbnz	r0, 320ba <get_unit_mode_from_arg@@Base+0x10e>
   320b4:	movs	r1, #4
   320b6:	str	r3, [sp, #4]
   320b8:	b.n	3208a <get_unit_mode_from_arg@@Base+0xde>
   320ba:	ldr	r1, [pc, #228]	; (321a0 <get_unit_mode_from_arg@@Base+0x1f4>)
   320bc:	mov	r0, r6
   320be:	add	r1, pc
   320c0:	blx	85ac <strcmp@plt>
   320c4:	cbnz	r0, 320d6 <get_unit_mode_from_arg@@Base+0x12a>
   320c6:	add	r0, sp, #8
   320c8:	movs	r1, #5
   320ca:	bl	31b5c <units_set_base@@Base>
   320ce:	movs	r3, #0
   320d0:	str.w	r3, [r4, r5, lsl #2]
   320d4:	b.n	32044 <get_unit_mode_from_arg@@Base+0x98>
   320d6:	cmp.w	r8, #0
   320da:	beq.n	32044 <get_unit_mode_from_arg@@Base+0x98>
   320dc:	ldr	r1, [pc, #196]	; (321a4 <get_unit_mode_from_arg@@Base+0x1f8>)
   320de:	mov	r0, r6
   320e0:	add	r1, pc
   320e2:	blx	85ac <strcmp@plt>
   320e6:	cmp	r0, #0
   320e8:	beq.n	3202a <get_unit_mode_from_arg@@Base+0x7e>
   320ea:	ldr	r1, [pc, #188]	; (321a8 <get_unit_mode_from_arg@@Base+0x1fc>)
   320ec:	mov	r0, r6
   320ee:	add	r1, pc
   320f0:	blx	85ac <strcmp@plt>
   320f4:	cmp	r0, #0
   320f6:	beq.n	3203a <get_unit_mode_from_arg@@Base+0x8e>
   320f8:	ldr	r1, [pc, #176]	; (321ac <get_unit_mode_from_arg@@Base+0x200>)
   320fa:	mov	r0, r6
   320fc:	add	r1, pc
   320fe:	blx	85ac <strcmp@plt>
   32102:	cbnz	r0, 3210a <get_unit_mode_from_arg@@Base+0x15e>
   32104:	mov.w	r3, #768	; 0x300
   32108:	b.n	3203e <get_unit_mode_from_arg@@Base+0x92>
   3210a:	ldr	r1, [pc, #164]	; (321b0 <get_unit_mode_from_arg@@Base+0x204>)
   3210c:	mov	r0, r6
   3210e:	add	r1, pc
   32110:	blx	85ac <strcmp@plt>
   32114:	mov	r3, r0
   32116:	cmp	r0, #0
   32118:	beq.n	32086 <get_unit_mode_from_arg@@Base+0xda>
   3211a:	ldr	r1, [pc, #152]	; (321b4 <get_unit_mode_from_arg@@Base+0x208>)
   3211c:	mov	r0, r6
   3211e:	add	r1, pc
   32120:	blx	85ac <strcmp@plt>
   32124:	mov	r3, r0
   32126:	cmp	r0, #0
   32128:	beq.n	320a0 <get_unit_mode_from_arg@@Base+0xf4>
   3212a:	ldr	r1, [pc, #140]	; (321b8 <get_unit_mode_from_arg@@Base+0x20c>)
   3212c:	mov	r0, r6
   3212e:	add	r1, pc
   32130:	blx	85ac <strcmp@plt>
   32134:	mov	r3, r0
   32136:	cmp	r0, #0
   32138:	beq.n	320b4 <get_unit_mode_from_arg@@Base+0x108>
   3213a:	ldr	r1, [pc, #128]	; (321bc <get_unit_mode_from_arg@@Base+0x210>)
   3213c:	mov	r0, r6
   3213e:	add	r1, pc
   32140:	blx	85ac <strcmp@plt>
   32144:	mov	r6, r0
   32146:	cmp	r0, #0
   32148:	bne.w	32044 <get_unit_mode_from_arg@@Base+0x98>
   3214c:	add	r0, sp, #8
   3214e:	movs	r1, #5
   32150:	bl	31b5c <units_set_base@@Base>
   32154:	str.w	r6, [r4, r5, lsl #2]
   32158:	b.n	32044 <get_unit_mode_from_arg@@Base+0x98>
   3215a:	ldr.w	r2, [r4, r0, lsl #2]
   3215e:	cbz	r2, 32166 <get_unit_mode_from_arg@@Base+0x1ba>
   32160:	str.w	r2, [r4, r3, lsl #2]
   32164:	adds	r3, #1
   32166:	adds	r0, #1
   32168:	b.n	31fec <get_unit_mode_from_arg@@Base+0x40>
   3216a:	mov	r3, r0
   3216c:	b.n	31fec <get_unit_mode_from_arg@@Base+0x40>
   3216e:	add	sp, #20
   32170:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32174:	cmp	r5, #198	; 0xc6
   32176:	movs	r3, r0
   32178:	lsls	r0, r5, #8
   3217a:	movs	r0, r0
   3217c:	strh	r6, [r2, #18]
   3217e:	movs	r0, r0
   32180:	adds	r4, r1, #7
   32182:	movs	r2, r0
   32184:	adds	r0, r2, #7
   32186:	movs	r2, r0
   32188:	cmp	r5, #134	; 0x86
   3218a:	movs	r3, r0
   3218c:	adds	r5, r4, #5
   3218e:	movs	r2, r0
   32190:	adds	r7, r1, #5
   32192:	movs	r2, r0
   32194:	adds	r0, r0, #5
   32196:	movs	r2, r0
   32198:	adds	r7, r5, #4
   3219a:	movs	r2, r0
   3219c:	adds	r4, r4, #4
   3219e:	movs	r2, r0
   321a0:	adds	r1, r3, #4
   321a2:	movs	r2, r0
   321a4:	adds	r0, r0, #4
   321a6:	movs	r2, r0
   321a8:	adds	r5, r6, #3
   321aa:	movs	r2, r0
   321ac:	adds	r2, r5, #3
   321ae:	movs	r2, r0
   321b0:	adds	r3, r3, #3
   321b2:	movs	r2, r0
   321b4:	adds	r6, r1, #3
   321b6:	movs	r2, r0
   321b8:	adds	r1, r0, #3
   321ba:	movs	r2, r0
   321bc:	adds	r4, r6, #2
   321be:	movs	r2, r0

000321c0 <div_factor@@Base>:
   321c0:	cmp	r2, #10
   321c2:	push	{r3, r4, r5, lr}
   321c4:	beq.n	321e0 <div_factor@@Base+0x20>
   321c6:	asrs	r5, r2, #31
   321c8:	movs	r3, #0
   321ca:	muls	r1, r2
   321cc:	mla	r1, r0, r5, r1
   321d0:	umull	r4, r5, r2, r0
   321d4:	movs	r2, #10
   321d6:	add	r5, r1
   321d8:	mov	r1, r5
   321da:	mov	r0, r4
   321dc:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   321e0:	pop	{r3, r4, r5, pc}

000321e2 <count_digits@@Base>:
   321e2:	mov	r2, r0
   321e4:	mov	r3, r1
   321e6:	orrs.w	r1, r2, r3
   321ea:	push	{r4, r6, r7, lr}
   321ec:	beq.n	32214 <count_digits@@Base+0x32>
   321ee:	movs	r4, #0
   321f0:	mov	r6, r2
   321f2:	mov	r7, r3
   321f4:	movs	r2, #10
   321f6:	movs	r3, #0
   321f8:	mov	r0, r6
   321fa:	mov	r1, r7
   321fc:	bl	39c04 <btrfs_util_strerror@@Base+0x7fc>
   32200:	cmp	r7, #0
   32202:	it	eq
   32204:	cmpeq	r6, #10
   32206:	add.w	r4, r4, #1
   3220a:	mov	r2, r0
   3220c:	mov	r3, r1
   3220e:	bcs.n	321f0 <count_digits@@Base+0xe>
   32210:	mov	r0, r4
   32212:	pop	{r4, r6, r7, pc}
   32214:	movs	r4, #1
   32216:	b.n	32210 <count_digits@@Base+0x2e>

00032218 <string_is_numerical@@Base>:
   32218:	cbz	r0, 3223a <string_is_numerical@@Base+0x22>
   3221a:	ldrb	r3, [r0, #0]
   3221c:	subs	r3, #48	; 0x30
   3221e:	cmp	r3, #9
   32220:	bhi.n	32238 <string_is_numerical@@Base+0x20>
   32222:	subs	r3, r0, #1
   32224:	ldrb.w	r0, [r3, #1]!
   32228:	sub.w	r2, r0, #48	; 0x30
   3222c:	cmp	r2, #9
   3222e:	bls.n	32224 <string_is_numerical@@Base+0xc>
   32230:	clz	r0, r0
   32234:	lsrs	r0, r0, #5
   32236:	bx	lr
   32238:	movs	r0, #0
   3223a:	bx	lr

0003223c <prefixcmp@@Base>:
   3223c:	subs	r1, #1
   3223e:	subs	r3, r0, #1
   32240:	ldrb.w	r0, [r1, #1]!
   32244:	cbz	r0, 32250 <prefixcmp@@Base+0x14>
   32246:	ldrb.w	r2, [r3, #1]!
   3224a:	cmp	r0, r2
   3224c:	beq.n	32240 <prefixcmp@@Base+0x4>
   3224e:	subs	r0, r0, r2
   32250:	bx	lr

00032252 <subvol_strip_mountpoint@@Base>:
   32252:	push	{r4, r5, r6, lr}
   32254:	mov	r6, r0
   32256:	mov	r5, r1
   32258:	blx	8940 <strlen@plt>
   3225c:	mov	r4, r0
   3225e:	cbz	r0, 32296 <subvol_strip_mountpoint@@Base+0x44>
   32260:	mov	r2, r0
   32262:	mov	r1, r5
   32264:	mov	r0, r6
   32266:	blx	8b78 <strncmp@plt>
   3226a:	cbnz	r0, 32278 <subvol_strip_mountpoint@@Base+0x26>
   3226c:	cmp	r4, #1
   3226e:	mov	r3, r4
   32270:	beq.n	32288 <subvol_strip_mountpoint@@Base+0x36>
   32272:	ldrb	r2, [r5, r4]
   32274:	cmp	r2, #47	; 0x2f
   32276:	beq.n	32288 <subvol_strip_mountpoint@@Base+0x36>
   32278:	ldr	r0, [pc, #32]	; (3229c <subvol_strip_mountpoint@@Base+0x4a>)
   3227a:	mov	r1, r6
   3227c:	add	r0, pc
   3227e:	bl	17b7c <__btrfs_error@@Base>
   32282:	movs	r0, #1
   32284:	blx	8934 <exit@plt>
   32288:	add	r6, r4
   3228a:	ldrb.w	r2, [r6, #-1]
   3228e:	cmp	r2, #47	; 0x2f
   32290:	it	ne
   32292:	addne	r3, r4, #1
   32294:	add	r5, r3
   32296:	mov	r0, r5
   32298:	pop	{r4, r5, r6, pc}
   3229a:	nop
   3229c:	subs	r1, r7, r5
   3229e:	movs	r2, r0

000322a0 <init_rand_seed@@Base>:
   322a0:	ldr	r3, [pc, #24]	; (322bc <init_rand_seed@@Base+0x1c>)
   322a2:	mvns	r2, r0
   322a4:	lsrs	r0, r0, #16
   322a6:	add	r3, pc
   322a8:	orr.w	r0, r0, r1, lsl #16
   322ac:	mvns	r1, r1
   322ae:	mvns	r0, r0
   322b0:	strh	r2, [r3, #0]
   322b2:	strh	r0, [r3, #2]
   322b4:	movs	r2, #1
   322b6:	strh	r1, [r3, #4]
   322b8:	str	r2, [r3, #8]
   322ba:	bx	lr
   322bc:	ands	r2, r7
   322be:	movs	r3, r0

000322c0 <rand_u32@@Base>:
   322c0:	push	{r3, lr}
   322c2:	ldr	r3, [pc, #24]	; (322dc <rand_u32@@Base+0x1c>)
   322c4:	add	r3, pc
   322c6:	ldr	r3, [r3, #8]
   322c8:	cbnz	r3, 322ce <rand_u32@@Base+0xe>
   322ca:	bl	30578 <test_issubvolname@@Base+0xd2>
   322ce:	ldr	r0, [pc, #16]	; (322e0 <rand_u32@@Base+0x20>)
   322d0:	ldmia.w	sp!, {r3, lr}
   322d4:	add	r0, pc
   322d6:	b.w	86b8 <jrand48@plt>
   322da:	nop
   322dc:	ands	r4, r3
   322de:	movs	r3, r0
   322e0:	ands	r4, r1
   322e2:	movs	r3, r0

000322e4 <rand_range@@Base>:
   322e4:	ldr	r3, [pc, #32]	; (32308 <rand_range@@Base+0x24>)
   322e6:	push	{r4, lr}
   322e8:	add	r3, pc
   322ea:	mov	r4, r0
   322ec:	ldr	r3, [r3, #8]
   322ee:	cbnz	r3, 322f4 <rand_range@@Base+0x10>
   322f0:	bl	30578 <test_issubvolname@@Base+0xd2>
   322f4:	ldr	r0, [pc, #20]	; (3230c <rand_range@@Base+0x28>)
   322f6:	add	r0, pc
   322f8:	blx	86bc <jrand48@plt+0x4>
   322fc:	mov	r1, r4
   322fe:	bl	3967c <btrfs_util_strerror@@Base+0x274>
   32302:	mov	r0, r1
   32304:	pop	{r4, pc}
   32306:	nop
   32308:	subs	r7, #248	; 0xf8
   3230a:	movs	r3, r0
   3230c:	subs	r7, #234	; 0xea
   3230e:	movs	r3, r0

00032310 <rand_int@@Base>:
   32310:	b.w	322c0 <rand_u32@@Base>

00032314 <rand_u64@@Base>:
   32314:	push	{r3, r4, r5, lr}
   32316:	bl	322c0 <rand_u32@@Base>
   3231a:	movs	r4, #0
   3231c:	mov	r5, r0
   3231e:	bl	322c0 <rand_u32@@Base>
   32322:	adds	r0, r4, r0
   32324:	adc.w	r1, r5, #0
   32328:	pop	{r3, r4, r5, pc}

0003232a <rand_u16@@Base>:
   3232a:	push	{r3, lr}
   3232c:	bl	322c0 <rand_u32@@Base>
   32330:	uxth	r0, r0
   32332:	pop	{r3, pc}

00032334 <rand_u8@@Base>:
   32334:	push	{r3, lr}
   32336:	bl	322c0 <rand_u32@@Base>
   3233a:	uxtb	r0, r0
   3233c:	pop	{r3, pc}

0003233e <btrfs_config_init@@Base>:
   3233e:	ldr	r3, [pc, #12]	; (3234c <btrfs_config_init@@Base+0xe>)
   32340:	ldr	r2, [pc, #12]	; (32350 <btrfs_config_init@@Base+0x12>)
   32342:	add	r3, pc
   32344:	ldr	r3, [r3, r2]
   32346:	movs	r2, #4
   32348:	str	r2, [r3, #0]
   3234a:	bx	lr
   3234c:	cmp	r2, #62	; 0x3e
   3234e:	movs	r3, r0
   32350:	lsls	r4, r4, #8
	...

00032354 <total_memory@@Base>:
   32354:	ldr	r2, [pc, #72]	; (323a0 <total_memory@@Base+0x4c>)
   32356:	ldr	r3, [pc, #76]	; (323a4 <total_memory@@Base+0x50>)
   32358:	add	r2, pc
   3235a:	push	{lr}
   3235c:	sub	sp, #76	; 0x4c
   3235e:	ldr	r3, [r2, r3]
   32360:	add	r0, sp, #4
   32362:	ldr	r3, [r3, #0]
   32364:	str	r3, [sp, #68]	; 0x44
   32366:	mov.w	r3, #0
   3236a:	blx	8860 <sysinfo@plt>
   3236e:	cmp	r0, #0
   32370:	bge.n	32392 <total_memory@@Base+0x3e>
   32372:	ldr	r0, [pc, #52]	; (323a8 <total_memory@@Base+0x54>)
   32374:	add	r0, pc
   32376:	bl	17b7c <__btrfs_error@@Base>
   3237a:	mov.w	r0, #4294967295	; 0xffffffff
   3237e:	ldr	r2, [pc, #44]	; (323ac <total_memory@@Base+0x58>)
   32380:	ldr	r3, [pc, #32]	; (323a4 <total_memory@@Base+0x50>)
   32382:	add	r2, pc
   32384:	ldr	r3, [r2, r3]
   32386:	ldr	r2, [r3, #0]
   32388:	ldr	r3, [sp, #68]	; 0x44
   3238a:	eors	r2, r3
   3238c:	beq.n	3239a <total_memory@@Base+0x46>
   3238e:	blx	8708 <__stack_chk_fail@plt>
   32392:	ldr	r3, [sp, #20]
   32394:	ldr	r0, [sp, #56]	; 0x38
   32396:	muls	r0, r3
   32398:	b.n	3237e <total_memory@@Base+0x2a>
   3239a:	add	sp, #76	; 0x4c
   3239c:	ldr.w	pc, [sp], #4
   323a0:	cmp	r2, #40	; 0x28
   323a2:	movs	r3, r0
   323a4:	lsls	r0, r5, #8
   323a6:	movs	r0, r0
   323a8:	subs	r0, r3, r2
   323aa:	movs	r2, r0
   323ac:	cmp	r1, #254	; 0xfe
   323ae:	movs	r3, r0

000323b0 <print_device_info@@Base>:
   323b0:	push	{r0, r1, r4, lr}
   323b2:	mov	r2, r1
   323b4:	mov	r4, r0
   323b6:	cbz	r1, 323c2 <print_device_info@@Base+0x12>
   323b8:	ldr	r1, [pc, #28]	; (323d8 <print_device_info@@Base+0x28>)
   323ba:	movs	r0, #1
   323bc:	add	r1, pc
   323be:	blx	8a30 <__printf_chk@plt+0x4>
   323c2:	ldr	r3, [r4, #32]
   323c4:	movs	r0, #1
   323c6:	ldr	r1, [pc, #20]	; (323dc <print_device_info@@Base+0x2c>)
   323c8:	str	r3, [sp, #0]
   323ca:	add	r1, pc
   323cc:	ldrd	r2, r3, [r4, #64]	; 0x40
   323d0:	blx	8a30 <__printf_chk@plt+0x4>
   323d4:	add	sp, #8
   323d6:	pop	{r4, pc}
   323d8:	b.n	325e4 <print_all_devices@@Base+0x204>
   323da:	movs	r0, r0
   323dc:	subs	r6, r3, r1
   323de:	movs	r2, r0

000323e0 <print_all_devices@@Base>:
   323e0:	push	{r4, r5, r6, lr}
   323e2:	mov	r4, r0
   323e4:	ldr	r0, [pc, #36]	; (3240c <print_all_devices@@Base+0x2c>)
   323e6:	ldr	r6, [pc, #40]	; (32410 <print_all_devices@@Base+0x30>)
   323e8:	add	r0, pc
   323ea:	blx	8854 <puts@plt+0x4>
   323ee:	ldr	r5, [r4, #0]
   323f0:	add	r6, pc
   323f2:	cmp	r5, r4
   323f4:	bne.n	32400 <print_all_devices@@Base+0x20>
   323f6:	ldmia.w	sp!, {r4, r5, r6, lr}
   323fa:	movs	r0, #10
   323fc:	b.w	89c8 <putchar@plt>
   32400:	mov	r0, r5
   32402:	mov	r1, r6
   32404:	bl	323b0 <print_device_info@@Base>
   32408:	ldr	r5, [r5, #0]
   3240a:	b.n	323f2 <print_all_devices@@Base+0x12>
   3240c:	subs	r6, r3, r1
   3240e:	movs	r2, r0
   32410:	strh	r4, [r3, #16]
   32412:	movs	r0, r0
   32414:	ldr	r2, [pc, #284]	; (32534 <print_all_devices@@Base+0x154>)
   32416:	ldr	r3, [pc, #288]	; (32538 <print_all_devices@@Base+0x158>)
   32418:	push	{r4, r5, r6, r7, lr}
   3241a:	add	r2, pc
   3241c:	sub.w	sp, sp, #516	; 0x204
   32420:	mov	r4, r1
   32422:	ldr	r3, [r2, r3]
   32424:	mov	r5, sp
   32426:	ldr	r1, [pc, #264]	; (32530 <print_all_devices@@Base+0x150>)
   32428:	mov	r2, r5
   3242a:	ldr	r3, [r3, #0]
   3242c:	str	r3, [sp, #508]	; 0x1fc
   3242e:	mov.w	r3, #0
   32432:	blx	87b4 <ioctl@plt>
   32436:	adds	r0, #1
   32438:	beq.n	32524 <print_all_devices@@Base+0x144>
   3243a:	ldrd	r2, r3, [sp]
   3243e:	add	r7, sp, #296	; 0x128
   32440:	add.w	r6, r4, #32
   32444:	strd	r2, r3, [r4]
   32448:	ldrd	r2, r3, [r5, #264]	; 0x108
   3244c:	strd	r2, r3, [r4, #8]
   32450:	ldrd	r2, r3, [r5, #272]	; 0x110
   32454:	strd	r2, r3, [r4, #16]
   32458:	ldrd	r2, r3, [r5, #288]	; 0x120
   3245c:	strd	r2, r3, [r4, #24]
   32460:	ldrd	r2, r3, [r5, #280]	; 0x118
   32464:	strd	r2, r3, [r4, #80]	; 0x50
   32468:	add	r2, sp, #312	; 0x138
   3246a:	mov	r3, r7
   3246c:	adds	r6, #8
   3246e:	ldmia	r3!, {r0, r1}
   32470:	cmp	r3, r2
   32472:	str.w	r0, [r6, #-8]
   32476:	mov	r7, r3
   32478:	str.w	r1, [r6, #-4]
   3247c:	bne.n	3246a <print_all_devices@@Base+0x8a>
   3247e:	add.w	r7, r4, #48	; 0x30
   32482:	add	r3, sp, #328	; 0x148
   32484:	mov	r6, r2
   32486:	adds	r7, #8
   32488:	ldmia	r6!, {r0, r1}
   3248a:	cmp	r6, r3
   3248c:	str.w	r0, [r7, #-8]
   32490:	mov	r2, r6
   32492:	str.w	r1, [r7, #-4]
   32496:	bne.n	32484 <print_all_devices@@Base+0xa4>
   32498:	add.w	r6, r4, #64	; 0x40
   3249c:	add	r7, sp, #344	; 0x158
   3249e:	mov	r2, r3
   324a0:	adds	r6, #8
   324a2:	ldmia	r2!, {r0, r1}
   324a4:	cmp	r2, r7
   324a6:	str.w	r0, [r6, #-8]
   324aa:	mov	r3, r2
   324ac:	str.w	r1, [r6, #-4]
   324b0:	bne.n	3249e <print_all_devices@@Base+0xbe>
   324b2:	ldrd	r2, r3, [r5, #344]	; 0x158
   324b6:	movs	r0, #0
   324b8:	strd	r2, r3, [r4, #88]	; 0x58
   324bc:	ldrd	r2, r3, [r5, #352]	; 0x160
   324c0:	strd	r2, r3, [r4, #96]	; 0x60
   324c4:	ldrd	r2, r3, [r5, #360]	; 0x168
   324c8:	strd	r2, r3, [r4, #104]	; 0x68
   324cc:	ldrd	r2, r3, [r5, #368]	; 0x170
   324d0:	strd	r2, r3, [r4, #112]	; 0x70
   324d4:	ldr.w	r3, [r5, #376]	; 0x178
   324d8:	str	r3, [r4, #120]	; 0x78
   324da:	ldr.w	r3, [r5, #384]	; 0x180
   324de:	str	r3, [r4, #124]	; 0x7c
   324e0:	ldr.w	r3, [r5, #392]	; 0x188
   324e4:	str.w	r3, [r4, #128]	; 0x80
   324e8:	ldr.w	r3, [r5, #400]	; 0x190
   324ec:	str.w	r3, [r4, #132]	; 0x84
   324f0:	ldr.w	r3, [r5, #408]	; 0x198
   324f4:	str.w	r3, [r4, #136]	; 0x88
   324f8:	ldr.w	r3, [r5, #416]	; 0x1a0
   324fc:	str.w	r3, [r4, #140]	; 0x8c
   32500:	ldr.w	r3, [r5, #424]	; 0x1a8
   32504:	str.w	r3, [r4, #144]	; 0x90
   32508:	ldr.w	r3, [r5, #432]	; 0x1b0
   3250c:	str.w	r3, [r4, #148]	; 0x94
   32510:	ldr	r2, [pc, #40]	; (3253c <print_all_devices@@Base+0x15c>)
   32512:	ldr	r3, [pc, #36]	; (32538 <print_all_devices@@Base+0x158>)
   32514:	add	r2, pc
   32516:	ldr	r3, [r2, r3]
   32518:	ldr	r2, [r3, #0]
   3251a:	ldr	r3, [sp, #508]	; 0x1fc
   3251c:	eors	r2, r3
   3251e:	beq.n	32528 <print_all_devices@@Base+0x148>
   32520:	blx	8708 <__stack_chk_fail@plt>
   32524:	movs	r0, #23
   32526:	b.n	32510 <print_all_devices@@Base+0x130>
   32528:	add.w	sp, sp, #516	; 0x204
   3252c:	pop	{r4, r5, r6, r7, pc}
   3252e:	nop
   32530:	str	r4, [sp, #240]	; 0xf0
   32532:	strh	r0, [r7, #14]
   32534:	cmp	r1, #102	; 0x66
   32536:	movs	r3, r0
   32538:	lsls	r0, r5, #8
   3253a:	movs	r0, r0
   3253c:	cmp	r0, #108	; 0x6c
   3253e:	movs	r3, r0
   32540:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   32544:	mov	r7, r0
   32546:	mov	r0, r1
   32548:	mov	r9, r1
   3254a:	mov	r6, r2
   3254c:	mov	r8, r3
   3254e:	blx	8940 <strlen@plt>
   32552:	mov	r5, r0
   32554:	cmp	r5, #1
   32556:	bls.n	32562 <print_all_devices@@Base+0x182>
   32558:	subs	r3, r5, #1
   3255a:	ldrb.w	r2, [r9, r3]
   3255e:	cmp	r2, #47	; 0x2f
   32560:	beq.n	325b6 <print_all_devices@@Base+0x1d6>
   32562:	adds	r0, r5, #1
   32564:	blx	8870 <malloc@plt+0x4>
   32568:	mov	r4, r0
   3256a:	cmp	r0, #0
   3256c:	beq.n	32604 <print_all_devices@@Base+0x224>
   3256e:	mov	r2, r5
   32570:	mov	r1, r9
   32572:	blx	866c <memcpy@plt+0x4>
   32576:	mov.w	r9, #0
   3257a:	mov	r2, r5
   3257c:	strb.w	r9, [r4, r5]
   32580:	movs	r1, #47	; 0x2f
   32582:	mov	r0, r4
   32584:	blx	8964 <memrchr@plt>
   32588:	cmp	r4, r0
   3258a:	mov	r5, r0
   3258c:	bne.n	325ba <print_all_devices@@Base+0x1da>
   3258e:	ldr.w	sl, [pc, #120]	; 32608 <print_all_devices@@Base+0x228>
   32592:	adds	r5, r4, #1
   32594:	add	sl, pc
   32596:	mov	r0, r5
   32598:	blx	8940 <strlen@plt>
   3259c:	cmp	r0, r8
   3259e:	mov	r9, r0
   325a0:	bcc.n	325ce <print_all_devices@@Base+0x1ee>
   325a2:	mov	r0, r4
   325a4:	blx	8620 <free@plt+0x4>
   325a8:	blx	897c <__errno_location@plt>
   325ac:	movs	r3, #36	; 0x24
   325ae:	str	r3, [r0, #0]
   325b0:	movs	r0, #3
   325b2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   325b6:	mov	r5, r3
   325b8:	b.n	32554 <print_all_devices@@Base+0x174>
   325ba:	cbz	r0, 325c4 <print_all_devices@@Base+0x1e4>
   325bc:	mov	sl, r4
   325be:	strb.w	r9, [r5], #1
   325c2:	b.n	32596 <print_all_devices@@Base+0x1b6>
   325c4:	ldr.w	sl, [pc, #68]	; 3260c <print_all_devices@@Base+0x22c>
   325c8:	mov	r5, r4
   325ca:	add	sl, pc
   325cc:	b.n	32596 <print_all_devices@@Base+0x1b6>
   325ce:	mov	r2, r0
   325d0:	mov	r1, r5
   325d2:	mov	r0, r6
   325d4:	movs	r5, #0
   325d6:	blx	866c <memcpy@plt+0x4>
   325da:	mov.w	r2, #16384	; 0x4000
   325de:	mov	r1, sl
   325e0:	mov	r0, r7
   325e2:	strb.w	r5, [r6, r9]
   325e6:	blx	86fc <openat@plt>
   325ea:	ldr	r3, [sp, #32]
   325ec:	str	r0, [r3, #0]
   325ee:	adds	r0, #1
   325f0:	mov	r0, r4
   325f2:	bne.n	325fc <print_all_devices@@Base+0x21c>
   325f4:	blx	8620 <free@plt+0x4>
   325f8:	movs	r0, #7
   325fa:	b.n	325b2 <print_all_devices@@Base+0x1d2>
   325fc:	blx	8620 <free@plt+0x4>
   32600:	mov	r0, r5
   32602:	b.n	325b2 <print_all_devices@@Base+0x1d2>
   32604:	movs	r0, #2
   32606:	b.n	325b2 <print_all_devices@@Base+0x1d2>
   32608:	str	r5, [sp, #340]	; 0x154
   3260a:	movs	r0, r0
   3260c:	asrs	r2, r4, #7
   3260e:	movs	r2, r0
   32610:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32614:	sub.w	sp, sp, #4096	; 0x1000
   32618:	sub	sp, #20
   3261a:	ldr	r1, [pc, #528]	; (3282c <print_all_devices@@Base+0x44c>)
   3261c:	mov	r6, r2
   3261e:	mov	r7, r3
   32620:	ldr	r2, [pc, #524]	; (32830 <print_all_devices@@Base+0x450>)
   32622:	add.w	r3, sp, #4128	; 0x1020
   32626:	add	r1, pc
   32628:	add.w	r8, sp, #16
   3262c:	sub.w	r5, r8, #8
   32630:	ldr	r4, [r3, #24]
   32632:	ldr	r2, [r1, r2]
   32634:	adds	r3, #24
   32636:	add.w	r3, sp, #4096	; 0x1000
   3263a:	mov	r9, r0
   3263c:	ldr	r2, [r2, #0]
   3263e:	str	r2, [r3, #12]
   32640:	mov.w	r2, #0
   32644:	mov	r0, r5
   32646:	mov.w	r2, #4096	; 0x1000
   3264a:	movs	r1, #0
   3264c:	adds	r3, #12
   3264e:	blx	89bc <memset@plt+0x4>
   32652:	movs	r2, #1
   32654:	movs	r3, #0
   32656:	strd	r6, r7, [r5, #16]
   3265a:	strd	r2, r3, [r8, #-8]
   3265e:	mov.w	r2, #4294967295	; 0xffffffff
   32662:	mov.w	r3, #4294967295	; 0xffffffff
   32666:	strd	r6, r7, [r5, #8]
   3266a:	strd	r2, r3, [r5, #32]
   3266e:	strd	r2, r3, [r5, #48]	; 0x30
   32672:	movs	r2, #132	; 0x84
   32674:	movs	r3, #144	; 0x90
   32676:	strd	r2, r3, [r5, #56]	; 0x38
   3267a:	cbnz	r4, 326ce <print_all_devices@@Base+0x2ee>
   3267c:	movs	r6, #0
   3267e:	movs	r3, #132	; 0x84
   32680:	str	r3, [r5, #60]	; 0x3c
   32682:	ldr.w	fp, [pc, #432]	; 32834 <print_all_devices@@Base+0x454>
   32686:	movs	r2, #0
   32688:	movs	r7, #1
   3268a:	mov	ip, r2
   3268c:	mov.w	sl, #4096	; 0x1000
   32690:	ldr	r3, [r5, #64]	; 0x40
   32692:	cmp	r3, ip
   32694:	bhi.n	326fe <print_all_devices@@Base+0x31e>
   32696:	mov	r2, r5
   32698:	mov	r1, fp
   3269a:	mov	r0, r9
   3269c:	str.w	sl, [r5, #64]	; 0x40
   326a0:	blx	87b4 <ioctl@plt>
   326a4:	adds	r0, #1
   326a6:	beq.w	3281c <print_all_devices@@Base+0x43c>
   326aa:	ldr	r3, [r5, #64]	; 0x40
   326ac:	cbnz	r3, 326fa <print_all_devices@@Base+0x31a>
   326ae:	cbnz	r7, 326ee <print_all_devices@@Base+0x30e>
   326b0:	movs	r0, #0
   326b2:	ldr	r1, [pc, #388]	; (32838 <print_all_devices@@Base+0x458>)
   326b4:	add.w	r3, sp, #4096	; 0x1000
   326b8:	ldr	r2, [pc, #372]	; (32830 <print_all_devices@@Base+0x450>)
   326ba:	adds	r3, #12
   326bc:	add	r1, pc
   326be:	ldr	r2, [r1, r2]
   326c0:	ldr	r1, [r2, #0]
   326c2:	ldr	r2, [r3, #0]
   326c4:	eors	r1, r2
   326c6:	beq.w	32820 <print_all_devices@@Base+0x440>
   326ca:	blx	8708 <__stack_chk_fail@plt>
   326ce:	cmp	r7, #0
   326d0:	mov.w	r2, #0
   326d4:	it	eq
   326d6:	cmpeq	r6, #5
   326d8:	mov.w	r3, #0
   326dc:	strd	r6, r7, [r4]
   326e0:	strd	r2, r3, [r4, #8]
   326e4:	strd	r2, r3, [r4, #16]
   326e8:	beq.n	3267c <print_all_devices@@Base+0x29c>
   326ea:	movs	r6, #1
   326ec:	b.n	32682 <print_all_devices@@Base+0x2a2>
   326ee:	blx	897c <__errno_location@plt>
   326f2:	movs	r3, #2
   326f4:	str	r3, [r0, #0]
   326f6:	movs	r0, #6
   326f8:	b.n	326b2 <print_all_devices@@Base+0x2d2>
   326fa:	movs	r2, #0
   326fc:	mov	ip, r2
   326fe:	add	r3, sp, #112	; 0x70
   32700:	add	r3, r2
   32702:	ldr	r1, [r3, #24]
   32704:	cmp	r1, #132	; 0x84
   32706:	bne.n	327ee <print_all_devices@@Base+0x40e>
   32708:	cmp	r4, #0
   3270a:	beq.n	327d0 <print_all_devices@@Base+0x3f0>
   3270c:	ldr.w	r0, [r3, #240]	; 0xf0
   32710:	addw	r7, r3, #295	; 0x127
   32714:	ldr.w	r1, [r3, #244]	; 0xf4
   32718:	strd	r0, r1, [r4, #24]
   3271c:	addw	r1, r3, #279	; 0x117
   32720:	add.w	r0, r4, #32
   32724:	ldr.w	lr, [r1], #4
   32728:	cmp	r1, r7
   3272a:	str.w	lr, [r0], #4
   3272e:	bne.n	32724 <print_all_devices@@Base+0x344>
   32730:	add.w	r0, r4, #48	; 0x30
   32734:	addw	r7, r3, #311	; 0x137
   32738:	ldr.w	lr, [r1], #4
   3273c:	cmp	r1, r7
   3273e:	str.w	lr, [r0], #4
   32742:	bne.n	32738 <print_all_devices@@Base+0x358>
   32744:	add.w	r0, r4, #64	; 0x40
   32748:	addw	r7, r3, #327	; 0x147
   3274c:	ldr.w	lr, [r1], #4
   32750:	cmp	r1, r7
   32752:	str.w	lr, [r0], #4
   32756:	bne.n	3274c <print_all_devices@@Base+0x36c>
   32758:	ldr.w	r0, [r3, #192]	; 0xc0
   3275c:	ldr.w	r1, [r3, #196]	; 0xc4
   32760:	strd	r0, r1, [r4, #80]	; 0x50
   32764:	ldr.w	r0, [r3, #327]	; 0x147
   32768:	ldr.w	r1, [r3, #331]	; 0x14b
   3276c:	strd	r0, r1, [r4, #88]	; 0x58
   32770:	ldr.w	r0, [r3, #335]	; 0x14f
   32774:	ldr.w	r1, [r3, #339]	; 0x153
   32778:	strd	r0, r1, [r4, #96]	; 0x60
   3277c:	ldr.w	r0, [r3, #343]	; 0x157
   32780:	ldr.w	r1, [r3, #347]	; 0x15b
   32784:	strd	r0, r1, [r4, #104]	; 0x68
   32788:	ldr.w	r1, [r3, #355]	; 0x163
   3278c:	ldr.w	r0, [r3, #351]	; 0x15f
   32790:	strd	r0, r1, [r4, #112]	; 0x70
   32794:	ldr.w	r1, [r3, #359]	; 0x167
   32798:	str	r1, [r4, #120]	; 0x78
   3279a:	ldr.w	r1, [r3, #367]	; 0x16f
   3279e:	str	r1, [r4, #124]	; 0x7c
   327a0:	ldr.w	r1, [r3, #371]	; 0x173
   327a4:	str.w	r1, [r4, #128]	; 0x80
   327a8:	ldr.w	r1, [r3, #379]	; 0x17b
   327ac:	str.w	r1, [r4, #132]	; 0x84
   327b0:	ldr.w	r1, [r3, #383]	; 0x17f
   327b4:	str.w	r1, [r4, #136]	; 0x88
   327b8:	ldr.w	r1, [r3, #391]	; 0x187
   327bc:	str.w	r1, [r4, #140]	; 0x8c
   327c0:	ldr.w	r1, [r3, #395]	; 0x18b
   327c4:	str.w	r1, [r4, #144]	; 0x90
   327c8:	ldr.w	r1, [r3, #403]	; 0x193
   327cc:	str.w	r1, [r4, #148]	; 0x94
   327d0:	movs	r7, #0
   327d2:	movs	r1, #144	; 0x90
   327d4:	str	r1, [r5, #56]	; 0x38
   327d6:	ldr	r3, [r3, #28]
   327d8:	adds	r2, #32
   327da:	add.w	ip, ip, #1
   327de:	add	r2, r3
   327e0:	cmp	r7, #0
   327e2:	bne.w	32690 <print_all_devices@@Base+0x2b0>
   327e6:	cmp	r6, #0
   327e8:	bne.w	32690 <print_all_devices@@Base+0x2b0>
   327ec:	b.n	326b0 <print_all_devices@@Base+0x2d0>
   327ee:	cmp	r1, #144	; 0x90
   327f0:	bne.n	327d6 <print_all_devices@@Base+0x3f6>
   327f2:	cbz	r4, 32812 <print_all_devices@@Base+0x432>
   327f4:	mov	r1, r3
   327f6:	sub.w	r6, r8, #16
   327fa:	ldr.w	r0, [r1, #16]!
   327fe:	ldr	r1, [r1, #4]
   32800:	stmia	r6!, {r0, r1}
   32802:	ldrd	r0, r1, [r8, #-16]
   32806:	strd	r0, r1, [r4, #8]
   3280a:	ldr	r0, [r3, #32]
   3280c:	ldr	r1, [r3, #36]	; 0x24
   3280e:	strd	r0, r1, [r4, #16]
   32812:	mov.w	r1, #4294967295	; 0xffffffff
   32816:	movs	r6, #0
   32818:	str	r1, [r5, #56]	; 0x38
   3281a:	b.n	327d6 <print_all_devices@@Base+0x3f6>
   3281c:	movs	r0, #12
   3281e:	b.n	326b2 <print_all_devices@@Base+0x2d2>
   32820:	add.w	sp, sp, #4096	; 0x1000
   32824:	add	sp, #20
   32826:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3282a:	nop
   3282c:	movs	r7, #90	; 0x5a
   3282e:	movs	r3, r0
   32830:	lsls	r0, r5, #8
   32832:	movs	r0, r0
   32834:	str	r4, [sp, #68]	; 0x44
   32836:	beq.n	3283a <print_all_devices@@Base+0x45a>
   32838:	movs	r6, #196	; 0xc4
   3283a:	movs	r3, r0
   3283c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32840:	mov	r9, r3
   32842:	ldr	r3, [r0, #20]
   32844:	mov	r5, r2
   32846:	movw	r2, #4112	; 0x1010
   3284a:	ldr	r6, [sp, #40]	; 0x28
   3284c:	mov	r4, r0
   3284e:	mov	r8, r1
   32850:	muls	r2, r3
   32852:	ldr	r3, [r0, #16]
   32854:	sub.w	r2, r2, #4096	; 0x1000
   32858:	subs	r2, #16
   3285a:	add.w	sl, r3, r2
   3285e:	movw	r3, #4108	; 0x100c
   32862:	ldr.w	r3, [sl, r3]
   32866:	cbz	r3, 328dc <print_all_devices@@Base+0x4fc>
   32868:	cbz	r6, 328dc <print_all_devices@@Base+0x4fc>
   3286a:	adds	r2, r3, #1
   3286c:	adds	r7, r2, r6
   3286e:	cbz	r3, 32876 <print_all_devices@@Base+0x496>
   32870:	cbnz	r6, 32876 <print_all_devices@@Base+0x496>
   32872:	cbz	r5, 32876 <print_all_devices@@Base+0x496>
   32874:	adds	r7, r2, #1
   32876:	ldr	r3, [r4, #32]
   32878:	add	r7, r5
   3287a:	add.w	fp, r7, #1
   3287e:	cmp	fp, r3
   32880:	bls.n	32890 <print_all_devices@@Base+0x4b0>
   32882:	ldr	r0, [r4, #28]
   32884:	mov	r1, fp
   32886:	blx	8724 <realloc@plt+0x4>
   3288a:	cbz	r0, 328e0 <print_all_devices@@Base+0x500>
   3288c:	strd	r0, fp, [r4, #28]
   32890:	movw	r3, #4108	; 0x100c
   32894:	ldr	r1, [r4, #28]
   32896:	ldr.w	r2, [sl, r3]
   3289a:	adds	r3, r1, r2
   3289c:	cbz	r2, 328a6 <print_all_devices@@Base+0x4c6>
   3289e:	cbz	r6, 328a6 <print_all_devices@@Base+0x4c6>
   328a0:	adds	r3, #1
   328a2:	movs	r0, #47	; 0x2f
   328a4:	strb	r0, [r1, r2]
   328a6:	mov	r2, r6
   328a8:	mov	r1, r9
   328aa:	mov	r0, r3
   328ac:	blx	866c <memcpy@plt+0x4>
   328b0:	movw	r2, #4108	; 0x100c
   328b4:	ldr.w	r2, [sl, r2]
   328b8:	adds	r4, r0, r6
   328ba:	cbz	r2, 328c6 <print_all_devices@@Base+0x4e6>
   328bc:	cbnz	r6, 328c6 <print_all_devices@@Base+0x4e6>
   328be:	cbz	r5, 328c6 <print_all_devices@@Base+0x4e6>
   328c0:	movs	r2, #47	; 0x2f
   328c2:	strb	r2, [r4, #0]
   328c4:	adds	r4, r0, #1
   328c6:	mov	r2, r5
   328c8:	mov	r1, r8
   328ca:	mov	r0, r4
   328cc:	blx	866c <memcpy@plt+0x4>
   328d0:	ldr	r3, [sp, #44]	; 0x2c
   328d2:	movs	r0, #0
   328d4:	strb	r0, [r4, r5]
   328d6:	str	r7, [r3, #0]
   328d8:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   328dc:	mov	r2, r3
   328de:	b.n	3286c <print_all_devices@@Base+0x48c>
   328e0:	movs	r0, #2
   328e2:	b.n	328d8 <print_all_devices@@Base+0x4f8>
   328e4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   328e8:	mov	r4, r1
   328ea:	ldr	r1, [pc, #172]	; (32998 <print_all_devices@@Base+0x5b8>)
   328ec:	sub.w	sp, sp, #4128	; 0x1020
   328f0:	mov	r5, r2
   328f2:	ldr	r2, [pc, #168]	; (3299c <print_all_devices@@Base+0x5bc>)
   328f4:	add	r1, pc
   328f6:	mov	r9, r3
   328f8:	add.w	r3, sp, #4160	; 0x1040
   328fc:	add	r7, sp, #24
   328fe:	ldr	r2, [r1, r2]
   32900:	mov	r6, r0
   32902:	ldr.w	sl, [r3]
   32906:	add.w	r3, sp, #4096	; 0x1000
   3290a:	ldr	r2, [r2, #0]
   3290c:	str	r2, [r3, #28]
   3290e:	mov.w	r2, #0
   32912:	mov	r0, r7
   32914:	mov.w	r2, #4096	; 0x1000
   32918:	movs	r1, #0
   3291a:	adds	r3, #28
   3291c:	blx	89bc <memset@plt+0x4>
   32920:	mov	r1, r4
   32922:	add.w	r8, sp, #32
   32926:	ldr.w	r0, [r1, #8]!
   3292a:	sub.w	r3, r8, #16
   3292e:	ldr	r1, [r1, #4]
   32930:	stmia	r3!, {r0, r1}
   32932:	ldrd	r2, r3, [r8, #-16]
   32936:	ldr	r1, [pc, #92]	; (32994 <print_all_devices@@Base+0x5b4>)
   32938:	ldr	r0, [r6, #4]
   3293a:	strd	r2, r3, [r8, #-8]
   3293e:	ldr	r2, [r5, #0]
   32940:	ldr	r3, [r5, #4]
   32942:	str	r2, [r7, #8]
   32944:	mov	r2, r7
   32946:	str.w	r3, [r8, #4]
   3294a:	blx	87b4 <ioctl@plt>
   3294e:	adds	r0, #1
   32950:	beq.n	32986 <print_all_devices@@Base+0x5a6>
   32952:	add	r3, sp, #40	; 0x28
   32954:	str	r3, [sp, #12]
   32956:	mov	r0, r3
   32958:	blx	8940 <strlen@plt>
   3295c:	ldr	r3, [sp, #12]
   3295e:	ldrh	r2, [r5, #16]
   32960:	mov	r1, r9
   32962:	strd	r0, sl, [sp]
   32966:	mov	r0, r6
   32968:	bl	3283c <print_all_devices@@Base+0x45c>
   3296c:	ldr	r1, [pc, #48]	; (329a0 <print_all_devices@@Base+0x5c0>)
   3296e:	add.w	r3, sp, #4096	; 0x1000
   32972:	ldr	r2, [pc, #40]	; (3299c <print_all_devices@@Base+0x5bc>)
   32974:	adds	r3, #28
   32976:	add	r1, pc
   32978:	ldr	r2, [r1, r2]
   3297a:	ldr	r1, [r2, #0]
   3297c:	ldr	r2, [r3, #0]
   3297e:	eors	r1, r2
   32980:	beq.n	3298a <print_all_devices@@Base+0x5aa>
   32982:	blx	8708 <__stack_chk_fail@plt>
   32986:	movs	r0, #13
   32988:	b.n	3296c <print_all_devices@@Base+0x58c>
   3298a:	add.w	sp, sp, #4128	; 0x1020
   3298e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   32992:	nop
   32994:	str	r4, [sp, #72]	; 0x48
   32996:	beq.n	3299a <print_all_devices@@Base+0x5ba>
   32998:	movs	r4, #140	; 0x8c
   3299a:	movs	r3, r0
   3299c:	lsls	r0, r5, #8
   3299e:	movs	r0, r0
   329a0:	movs	r4, #10
   329a2:	movs	r3, r0
   329a4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   329a8:	sub.w	sp, sp, #4128	; 0x1020
   329ac:	sub	sp, #4
   329ae:	ldr	r1, [pc, #168]	; (32a58 <print_all_devices@@Base+0x678>)
   329b0:	mov	r7, r2
   329b2:	mov	r6, r3
   329b4:	ldr	r2, [pc, #164]	; (32a5c <print_all_devices@@Base+0x67c>)
   329b6:	add.w	r3, sp, #4160	; 0x1040
   329ba:	add	r1, pc
   329bc:	add	r5, sp, #24
   329be:	ldr.w	r8, [r3, #8]
   329c2:	adds	r3, #8
   329c4:	ldr	r2, [r1, r2]
   329c6:	add.w	r3, sp, #4096	; 0x1000
   329ca:	mov	r4, r0
   329cc:	mov	r0, r5
   329ce:	ldr	r2, [r2, #0]
   329d0:	str	r2, [r3, #28]
   329d2:	mov.w	r2, #0
   329d6:	movs	r1, #0
   329d8:	mov.w	r2, #4096	; 0x1000
   329dc:	adds	r3, #28
   329de:	blx	89bc <memset@plt+0x4>
   329e2:	add.w	r3, sp, #4160	; 0x1040
   329e6:	ldr	r1, [pc, #108]	; (32a54 <print_all_devices@@Base+0x674>)
   329e8:	add.w	r9, sp, #32
   329ec:	ldrd	r2, r3, [r3]
   329f0:	ldr	r0, [r4, #8]
   329f2:	str	r7, [r5, #8]
   329f4:	strd	r2, r3, [r9, #-8]
   329f8:	mov	r2, r5
   329fa:	str.w	r6, [r9, #4]
   329fe:	blx	87b4 <ioctl@plt>
   32a02:	adds	r0, #1
   32a04:	beq.n	32a46 <print_all_devices@@Base+0x666>
   32a06:	add	r1, sp, #40	; 0x28
   32a08:	str	r1, [sp, #20]
   32a0a:	mov	r0, r1
   32a0c:	blx	8940 <strlen@plt>
   32a10:	add	r3, sp, #296	; 0x128
   32a12:	str	r3, [sp, #12]
   32a14:	str	r0, [sp, #16]
   32a16:	mov	r0, r3
   32a18:	blx	8940 <strlen@plt>
   32a1c:	ldrd	r3, r2, [sp, #12]
   32a20:	ldr	r1, [sp, #20]
   32a22:	strd	r0, r8, [sp]
   32a26:	mov	r0, r4
   32a28:	bl	3283c <print_all_devices@@Base+0x45c>
   32a2c:	ldr	r1, [pc, #48]	; (32a60 <print_all_devices@@Base+0x680>)
   32a2e:	add.w	r3, sp, #4096	; 0x1000
   32a32:	ldr	r2, [pc, #40]	; (32a5c <print_all_devices@@Base+0x67c>)
   32a34:	adds	r3, #28
   32a36:	add	r1, pc
   32a38:	ldr	r2, [r1, r2]
   32a3a:	ldr	r1, [r2, #0]
   32a3c:	ldr	r2, [r3, #0]
   32a3e:	eors	r1, r2
   32a40:	beq.n	32a4a <print_all_devices@@Base+0x66a>
   32a42:	blx	8708 <__stack_chk_fail@plt>
   32a46:	movs	r0, #25
   32a48:	b.n	32a2c <print_all_devices@@Base+0x64c>
   32a4a:	add.w	sp, sp, #4128	; 0x1020
   32a4e:	add	sp, #4
   32a50:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   32a54:	str	r4, [sp, #248]	; 0xf8
   32a56:	beq.n	32a5a <print_all_devices@@Base+0x67a>
   32a58:	movs	r3, #198	; 0xc6
   32a5a:	movs	r3, r0
   32a5c:	lsls	r0, r5, #8
   32a5e:	movs	r0, r0
   32a60:	movs	r3, #74	; 0x4a
   32a62:	movs	r3, r0
   32a64:	ldrb	r1, [r0, #0]
   32a66:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32a6a:	mov	r4, r0
   32a6c:	ldr	r3, [r0, #20]
   32a6e:	subs	r2, r3, #1
   32a70:	cbnz	r1, 32a76 <print_all_devices@@Base+0x696>
   32a72:	cmp	r3, #1
   32a74:	bne.n	32a7e <print_all_devices@@Base+0x69e>
   32a76:	str	r2, [r4, #20]
   32a78:	movs	r0, #0
   32a7a:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32a7e:	ldr	r1, [r0, #16]
   32a80:	movw	r0, #4112	; 0x1010
   32a84:	str	r2, [r4, #20]
   32a86:	ldr.w	sl, [pc, #108]	; 32af4 <print_all_devices@@Base+0x714>
   32a8a:	mla	r2, r0, r2, r1
   32a8e:	ldr	r6, [r4, #8]
   32a90:	mla	r3, r0, r3, r1
   32a94:	add	sl, pc
   32a96:	ldr.w	r7, [r2, #-4]
   32a9a:	subs	r5, r3, #4
   32a9c:	ldr	r3, [r5, #0]
   32a9e:	cmp	r3, r7
   32aa0:	bhi.n	32ab2 <print_all_devices@@Base+0x6d2>
   32aa2:	ldrd	r3, r0, [r4, #4]
   32aa6:	cmp	r0, r3
   32aa8:	beq.n	32aae <print_all_devices@@Base+0x6ce>
   32aaa:	blx	8b9c <close@plt>
   32aae:	str	r6, [r4, #8]
   32ab0:	b.n	32a78 <print_all_devices@@Base+0x698>
   32ab2:	cbz	r7, 32abc <print_all_devices@@Base+0x6dc>
   32ab4:	ldr	r3, [r4, #28]
   32ab6:	ldrb	r3, [r3, r7]
   32ab8:	cmp	r3, #47	; 0x2f
   32aba:	bne.n	32aea <print_all_devices@@Base+0x70a>
   32abc:	movs	r2, #0
   32abe:	mov	r1, sl
   32ac0:	mov	r0, r6
   32ac2:	blx	86fc <openat@plt>
   32ac6:	ldr	r3, [r4, #8]
   32ac8:	cmp	r3, r6
   32aca:	mov	r8, r0
   32acc:	beq.n	32ae2 <print_all_devices@@Base+0x702>
   32ace:	blx	897c <__errno_location@plt>
   32ad2:	ldr.w	fp, [r0]
   32ad6:	mov	r9, r0
   32ad8:	mov	r0, r6
   32ada:	blx	8b9c <close@plt>
   32ade:	str.w	fp, [r9]
   32ae2:	cmp.w	r8, #4294967295	; 0xffffffff
   32ae6:	beq.n	32aee <print_all_devices@@Base+0x70e>
   32ae8:	mov	r6, r8
   32aea:	adds	r7, #1
   32aec:	b.n	32a9c <print_all_devices@@Base+0x6bc>
   32aee:	movs	r0, #7
   32af0:	b.n	32a7a <print_all_devices@@Base+0x69a>
   32af2:	nop
   32af4:	lsrs	r7, r2, #20
   32af6:	movs	r2, r0

00032af8 <btrfs_util_is_subvolume@@Base>:
   32af8:	ldr	r2, [pc, #132]	; (32b80 <btrfs_util_is_subvolume@@Base+0x88>)
   32afa:	ldr	r3, [pc, #136]	; (32b84 <btrfs_util_is_subvolume@@Base+0x8c>)
   32afc:	add	r2, pc
   32afe:	push	{r4, lr}
   32b00:	sub	sp, #160	; 0xa0
   32b02:	ldr	r3, [r2, r3]
   32b04:	add	r1, sp, #92	; 0x5c
   32b06:	mov	r4, r0
   32b08:	ldr	r3, [r3, #0]
   32b0a:	str	r3, [sp, #156]	; 0x9c
   32b0c:	mov.w	r3, #0
   32b10:	blx	8644 <statfs@plt>
   32b14:	adds	r0, #1
   32b16:	beq.n	32b6a <btrfs_util_is_subvolume@@Base+0x72>
   32b18:	ldr	r3, [pc, #96]	; (32b7c <btrfs_util_is_subvolume@@Base+0x84>)
   32b1a:	ldr	r2, [sp, #92]	; 0x5c
   32b1c:	cmp	r2, r3
   32b1e:	beq.n	32b3e <btrfs_util_is_subvolume@@Base+0x46>
   32b20:	blx	897c <__errno_location@plt>
   32b24:	movs	r3, #22
   32b26:	str	r3, [r0, #0]
   32b28:	movs	r0, #4
   32b2a:	ldr	r2, [pc, #92]	; (32b88 <btrfs_util_is_subvolume@@Base+0x90>)
   32b2c:	ldr	r3, [pc, #84]	; (32b84 <btrfs_util_is_subvolume@@Base+0x8c>)
   32b2e:	add	r2, pc
   32b30:	ldr	r3, [r2, r3]
   32b32:	ldr	r2, [r3, #0]
   32b34:	ldr	r3, [sp, #156]	; 0x9c
   32b36:	eors	r2, r3
   32b38:	beq.n	32b76 <btrfs_util_is_subvolume@@Base+0x7e>
   32b3a:	blx	8708 <__stack_chk_fail@plt>
   32b3e:	mov	r1, sp
   32b40:	mov	r0, r4
   32b42:	bl	39da0 <__libc_csu_fini@@Base+0x4>
   32b46:	adds	r0, #1
   32b48:	beq.n	32b6e <btrfs_util_is_subvolume@@Base+0x76>
   32b4a:	ldr	r3, [sp, #12]
   32b4c:	cmp.w	r3, #256	; 0x100
   32b50:	bne.n	32b5e <btrfs_util_is_subvolume@@Base+0x66>
   32b52:	ldr	r3, [sp, #16]
   32b54:	and.w	r3, r3, #61440	; 0xf000
   32b58:	cmp.w	r3, #16384	; 0x4000
   32b5c:	beq.n	32b72 <btrfs_util_is_subvolume@@Base+0x7a>
   32b5e:	blx	897c <__errno_location@plt>
   32b62:	movs	r3, #22
   32b64:	str	r3, [r0, #0]
   32b66:	movs	r0, #5
   32b68:	b.n	32b2a <btrfs_util_is_subvolume@@Base+0x32>
   32b6a:	movs	r0, #11
   32b6c:	b.n	32b2a <btrfs_util_is_subvolume@@Base+0x32>
   32b6e:	movs	r0, #10
   32b70:	b.n	32b2a <btrfs_util_is_subvolume@@Base+0x32>
   32b72:	movs	r0, #0
   32b74:	b.n	32b2a <btrfs_util_is_subvolume@@Base+0x32>
   32b76:	add	sp, #160	; 0xa0
   32b78:	pop	{r4, pc}
   32b7a:	nop
   32b7c:	ldr	r6, [r7, #0]
   32b7e:	str	r1, [sp, #140]	; 0x8c
   32b80:	movs	r2, #132	; 0x84
   32b82:	movs	r3, r0
   32b84:	lsls	r0, r5, #8
   32b86:	movs	r0, r0
   32b88:	movs	r2, #82	; 0x52
   32b8a:	movs	r3, r0

00032b8c <btrfs_util_is_subvolume_fd@@Base>:
   32b8c:	ldr	r2, [pc, #132]	; (32c14 <btrfs_util_is_subvolume_fd@@Base+0x88>)
   32b8e:	ldr	r3, [pc, #136]	; (32c18 <btrfs_util_is_subvolume_fd@@Base+0x8c>)
   32b90:	add	r2, pc
   32b92:	push	{r4, lr}
   32b94:	sub	sp, #160	; 0xa0
   32b96:	ldr	r3, [r2, r3]
   32b98:	add	r1, sp, #92	; 0x5c
   32b9a:	mov	r4, r0
   32b9c:	ldr	r3, [r3, #0]
   32b9e:	str	r3, [sp, #156]	; 0x9c
   32ba0:	mov.w	r3, #0
   32ba4:	blx	8a3c <fstatfs@plt>
   32ba8:	adds	r0, #1
   32baa:	beq.n	32bfe <btrfs_util_is_subvolume_fd@@Base+0x72>
   32bac:	ldr	r3, [pc, #96]	; (32c10 <btrfs_util_is_subvolume_fd@@Base+0x84>)
   32bae:	ldr	r2, [sp, #92]	; 0x5c
   32bb0:	cmp	r2, r3
   32bb2:	beq.n	32bd2 <btrfs_util_is_subvolume_fd@@Base+0x46>
   32bb4:	blx	897c <__errno_location@plt>
   32bb8:	movs	r3, #22
   32bba:	str	r3, [r0, #0]
   32bbc:	movs	r0, #4
   32bbe:	ldr	r2, [pc, #92]	; (32c1c <btrfs_util_is_subvolume_fd@@Base+0x90>)
   32bc0:	ldr	r3, [pc, #84]	; (32c18 <btrfs_util_is_subvolume_fd@@Base+0x8c>)
   32bc2:	add	r2, pc
   32bc4:	ldr	r3, [r2, r3]
   32bc6:	ldr	r2, [r3, #0]
   32bc8:	ldr	r3, [sp, #156]	; 0x9c
   32bca:	eors	r2, r3
   32bcc:	beq.n	32c0a <btrfs_util_is_subvolume_fd@@Base+0x7e>
   32bce:	blx	8708 <__stack_chk_fail@plt>
   32bd2:	mov	r1, sp
   32bd4:	mov	r0, r4
   32bd6:	bl	39dac <__libc_csu_fini@@Base+0x10>
   32bda:	adds	r0, #1
   32bdc:	beq.n	32c02 <btrfs_util_is_subvolume_fd@@Base+0x76>
   32bde:	ldr	r3, [sp, #12]
   32be0:	cmp.w	r3, #256	; 0x100
   32be4:	bne.n	32bf2 <btrfs_util_is_subvolume_fd@@Base+0x66>
   32be6:	ldr	r3, [sp, #16]
   32be8:	and.w	r3, r3, #61440	; 0xf000
   32bec:	cmp.w	r3, #16384	; 0x4000
   32bf0:	beq.n	32c06 <btrfs_util_is_subvolume_fd@@Base+0x7a>
   32bf2:	blx	897c <__errno_location@plt>
   32bf6:	movs	r3, #22
   32bf8:	str	r3, [r0, #0]
   32bfa:	movs	r0, #5
   32bfc:	b.n	32bbe <btrfs_util_is_subvolume_fd@@Base+0x32>
   32bfe:	movs	r0, #11
   32c00:	b.n	32bbe <btrfs_util_is_subvolume_fd@@Base+0x32>
   32c02:	movs	r0, #10
   32c04:	b.n	32bbe <btrfs_util_is_subvolume_fd@@Base+0x32>
   32c06:	movs	r0, #0
   32c08:	b.n	32bbe <btrfs_util_is_subvolume_fd@@Base+0x32>
   32c0a:	add	sp, #160	; 0xa0
   32c0c:	pop	{r4, pc}
   32c0e:	nop
   32c10:	ldr	r6, [r7, #0]
   32c12:	str	r1, [sp, #140]	; 0x8c
   32c14:	movs	r1, #240	; 0xf0
   32c16:	movs	r3, r0
   32c18:	lsls	r0, r5, #8
   32c1a:	movs	r0, r0
   32c1c:	movs	r1, #190	; 0xbe
   32c1e:	movs	r3, r0

00032c20 <btrfs_util_subvolume_id_fd@@Base>:
   32c20:	push	{r4, r5, r6, lr}
   32c22:	mov	r4, r1
   32c24:	ldr	r1, [pc, #120]	; (32ca0 <btrfs_util_subvolume_id_fd@@Base+0x80>)
   32c26:	sub.w	sp, sp, #4096	; 0x1000
   32c2a:	ldr	r2, [pc, #120]	; (32ca4 <btrfs_util_subvolume_id_fd@@Base+0x84>)
   32c2c:	sub	sp, #8
   32c2e:	add	r1, pc
   32c30:	add.w	r3, sp, #4096	; 0x1000
   32c34:	adds	r3, #4
   32c36:	mov	r5, r0
   32c38:	ldr	r2, [r1, r2]
   32c3a:	movs	r1, #0
   32c3c:	add	r6, sp, #8
   32c3e:	ldr	r2, [r2, #0]
   32c40:	str	r2, [r3, #0]
   32c42:	mov.w	r2, #0
   32c46:	mov	r3, sp
   32c48:	mov.w	r2, #4096	; 0x1000
   32c4c:	mov	r0, r3
   32c4e:	blx	89bc <memset@plt+0x4>
   32c52:	movs	r1, #0
   32c54:	mov	r3, r0
   32c56:	mov.w	r0, #256	; 0x100
   32c5a:	mov	r2, r3
   32c5c:	strd	r0, r1, [r3, #8]
   32c60:	ldr	r1, [pc, #56]	; (32c9c <btrfs_util_subvolume_id_fd@@Base+0x7c>)
   32c62:	mov	r0, r5
   32c64:	blx	87b4 <ioctl@plt>
   32c68:	ldr	r1, [pc, #60]	; (32ca8 <btrfs_util_subvolume_id_fd@@Base+0x88>)
   32c6a:	add	r1, pc
   32c6c:	adds	r0, #1
   32c6e:	ittet	ne
   32c70:	ldrdne	r2, r3, [r6, #-8]
   32c74:	movne	r0, #0
   32c76:	moveq	r0, #13
   32c78:	strdne	r2, r3, [r4]
   32c7c:	add.w	r3, sp, #4096	; 0x1000
   32c80:	ldr	r2, [pc, #32]	; (32ca4 <btrfs_util_subvolume_id_fd@@Base+0x84>)
   32c82:	adds	r3, #4
   32c84:	ldr	r2, [r1, r2]
   32c86:	ldr	r1, [r2, #0]
   32c88:	ldr	r2, [r3, #0]
   32c8a:	eors	r1, r2
   32c8c:	beq.n	32c92 <btrfs_util_subvolume_id_fd@@Base+0x72>
   32c8e:	blx	8708 <__stack_chk_fail@plt>
   32c92:	add.w	sp, sp, #4096	; 0x1000
   32c96:	add	sp, #8
   32c98:	pop	{r4, r5, r6, pc}
   32c9a:	nop
   32c9c:	str	r4, [sp, #72]	; 0x48
   32c9e:	beq.n	32ca2 <btrfs_util_subvolume_id_fd@@Base+0x82>
   32ca0:	movs	r1, #82	; 0x52
   32ca2:	movs	r3, r0
   32ca4:	lsls	r0, r5, #8
   32ca6:	movs	r0, r0
   32ca8:	movs	r1, #22
   32caa:	movs	r3, r0

00032cac <btrfs_util_subvolume_id@@Base>:
   32cac:	push	{r3, r4, r5, r6, r7, lr}
   32cae:	mov	r4, r1
   32cb0:	movs	r1, #0
   32cb2:	blx	88f8 <open@plt>
   32cb6:	adds	r3, r0, #1
   32cb8:	mov	r6, r0
   32cba:	beq.n	32cd8 <btrfs_util_subvolume_id@@Base+0x2c>
   32cbc:	mov	r1, r4
   32cbe:	bl	32c20 <btrfs_util_subvolume_id_fd@@Base>
   32cc2:	mov	r4, r0
   32cc4:	blx	897c <__errno_location@plt>
   32cc8:	ldr	r7, [r0, #0]
   32cca:	mov	r5, r0
   32ccc:	mov	r0, r6
   32cce:	blx	8b9c <close@plt>
   32cd2:	str	r7, [r5, #0]
   32cd4:	mov	r0, r4
   32cd6:	pop	{r3, r4, r5, r6, r7, pc}
   32cd8:	movs	r4, #7
   32cda:	b.n	32cd4 <btrfs_util_subvolume_id@@Base+0x28>
   32cdc:	push	{r4, r5, r6, r7, lr}
   32cde:	mov	r4, r2
   32ce0:	ldr	r2, [pc, #156]	; (32d80 <btrfs_util_subvolume_id@@Base+0xd4>)
   32ce2:	mov	r5, r3
   32ce4:	ldr	r3, [pc, #156]	; (32d84 <btrfs_util_subvolume_id@@Base+0xd8>)
   32ce6:	subw	sp, sp, #2068	; 0x814
   32cea:	add	r2, pc
   32cec:	mov	r6, r0
   32cee:	mov	r7, r1
   32cf0:	ldr	r3, [r2, r3]
   32cf2:	ldr	r3, [r3, #0]
   32cf4:	str.w	r3, [sp, #2060]	; 0x80c
   32cf8:	mov.w	r3, #0
   32cfc:	bl	32b8c <btrfs_util_is_subvolume_fd@@Base>
   32d00:	subs	r3, r0, #4
   32d02:	cmp	r3, #1
   32d04:	bhi.n	32d12 <btrfs_util_subvolume_id@@Base+0x66>
   32d06:	blx	897c <__errno_location@plt>
   32d0a:	movs	r3, #2
   32d0c:	str	r3, [r0, #0]
   32d0e:	movs	r0, #6
   32d10:	b.n	32d24 <btrfs_util_subvolume_id@@Base+0x78>
   32d12:	cbnz	r0, 32d24 <btrfs_util_subvolume_id@@Base+0x78>
   32d14:	ldr	r1, [pc, #100]	; (32d7c <btrfs_util_subvolume_id@@Base+0xd0>)
   32d16:	add	r2, sp, #8
   32d18:	mov	r0, r7
   32d1a:	blx	87b4 <ioctl@plt>
   32d1e:	adds	r0, #1
   32d20:	bne.n	32d3a <btrfs_util_subvolume_id@@Base+0x8e>
   32d22:	movs	r0, #26
   32d24:	ldr	r2, [pc, #96]	; (32d88 <btrfs_util_subvolume_id@@Base+0xdc>)
   32d26:	ldr	r3, [pc, #92]	; (32d84 <btrfs_util_subvolume_id@@Base+0xd8>)
   32d28:	add	r2, pc
   32d2a:	ldr	r3, [r2, r3]
   32d2c:	ldr	r2, [r3, #0]
   32d2e:	ldr.w	r3, [sp, #2060]	; 0x80c
   32d32:	eors	r2, r3
   32d34:	beq.n	32d76 <btrfs_util_subvolume_id@@Base+0xca>
   32d36:	blx	8708 <__stack_chk_fail@plt>
   32d3a:	ldr	r1, [pc, #64]	; (32d7c <btrfs_util_subvolume_id@@Base+0xd0>)
   32d3c:	add.w	r2, sp, #1032	; 0x408
   32d40:	mov	r0, r6
   32d42:	blx	87b4 <ioctl@plt>
   32d46:	adds	r0, #1
   32d48:	beq.n	32d22 <btrfs_util_subvolume_id@@Base+0x76>
   32d4a:	add.w	r1, sp, #1048	; 0x418
   32d4e:	add	r0, sp, #24
   32d50:	movs	r2, #16
   32d52:	blx	86a0 <memcmp@plt+0x4>
   32d56:	cmp	r0, #0
   32d58:	bne.n	32d06 <btrfs_util_subvolume_id@@Base+0x5a>
   32d5a:	mov	r7, sp
   32d5c:	mov	r0, r6
   32d5e:	mov	r1, r7
   32d60:	bl	32c20 <btrfs_util_subvolume_id_fd@@Base>
   32d64:	cmp	r0, #0
   32d66:	bne.n	32d24 <btrfs_util_subvolume_id@@Base+0x78>
   32d68:	ldrd	r2, r3, [r7]
   32d6c:	cmp	r3, r5
   32d6e:	it	eq
   32d70:	cmpeq	r2, r4
   32d72:	beq.n	32d24 <btrfs_util_subvolume_id@@Base+0x78>
   32d74:	b.n	32d06 <btrfs_util_subvolume_id@@Base+0x5a>
   32d76:	addw	sp, sp, #2068	; 0x814
   32d7a:	pop	{r4, r5, r6, r7, pc}
   32d7c:	str	r4, [sp, #124]	; 0x7c
   32d7e:	strh	r0, [r0, #32]
   32d80:	movs	r0, #150	; 0x96
   32d82:	movs	r3, r0
   32d84:	lsls	r0, r5, #8
   32d86:	movs	r0, r0
   32d88:	movs	r0, #88	; 0x58
   32d8a:	movs	r3, r0
   32d8c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   32d90:	mov	r6, r3
   32d92:	ldrd	r3, r5, [r0, #20]
   32d96:	mov	r4, r0
   32d98:	mov	r7, r2
   32d9a:	cmp	r3, r5
   32d9c:	bcc.n	32db4 <btrfs_util_subvolume_id@@Base+0x108>
   32d9e:	lsls	r5, r5, #1
   32da0:	ldr	r0, [r0, #16]
   32da2:	movw	r2, #4112	; 0x1010
   32da6:	mov	r1, r5
   32da8:	bl	34168 <btrfs_util_deleted_subvolumes@@Base+0x38>
   32dac:	cmp	r0, #0
   32dae:	beq.n	32e6c <btrfs_util_subvolume_id@@Base+0x1c0>
   32db0:	str	r5, [r4, #24]
   32db2:	str	r0, [r4, #16]
   32db4:	ldr	r3, [r4, #16]
   32db6:	movw	r8, #4112	; 0x1010
   32dba:	ldr	r5, [r4, #20]
   32dbc:	mov	r2, r8
   32dbe:	movs	r1, #0
   32dc0:	mla	r5, r8, r5, r3
   32dc4:	mov	r0, r5
   32dc6:	blx	89bc <memset@plt+0x4>
   32dca:	ldr	r2, [sp, #24]
   32dcc:	movw	r3, #4108	; 0x100c
   32dd0:	str	r2, [r5, r3]
   32dd2:	ldrb	r3, [r4, #0]
   32dd4:	cbz	r3, 32e16 <btrfs_util_subvolume_id@@Base+0x16a>
   32dd6:	movs	r2, #1
   32dd8:	movs	r3, #0
   32dda:	movs	r0, #0
   32ddc:	movs	r1, #0
   32dde:	strd	r2, r3, [r5]
   32de2:	movs	r3, #156	; 0x9c
   32de4:	mov.w	r2, #4294967295	; 0xffffffff
   32de8:	strd	r3, r3, [r5, #56]	; 0x38
   32dec:	strd	r7, r6, [r5, #8]
   32df0:	mov.w	r3, #4294967295	; 0xffffffff
   32df4:	strd	r7, r6, [r5, #16]
   32df8:	strd	r2, r3, [r5, #32]
   32dfc:	strd	r2, r3, [r5, #48]	; 0x30
   32e00:	movs	r3, #0
   32e02:	strd	r0, r1, [r5, #24]
   32e06:	strd	r0, r1, [r5, #40]	; 0x28
   32e0a:	str	r3, [r5, #64]	; 0x40
   32e0c:	ldr	r3, [r4, #20]
   32e0e:	movs	r5, #0
   32e10:	adds	r3, #1
   32e12:	str	r3, [r4, #20]
   32e14:	b.n	32e5a <btrfs_util_subvolume_id@@Base+0x1ae>
   32e16:	ldr	r3, [r4, #20]
   32e18:	strd	r7, r6, [r5]
   32e1c:	cmp	r3, #0
   32e1e:	beq.n	32e0c <btrfs_util_subvolume_id@@Base+0x160>
   32e20:	ldr	r2, [r4, #16]
   32e22:	ldr	r0, [r4, #8]
   32e24:	mla	r3, r8, r3, r2
   32e28:	ldr	r2, [r4, #28]
   32e2a:	ldr.w	r3, [r3, #-4]
   32e2e:	adds	r1, r2, r3
   32e30:	ldrb	r3, [r2, r3]
   32e32:	movs	r2, #0
   32e34:	cmp	r3, #47	; 0x2f
   32e36:	it	eq
   32e38:	addeq	r1, #1
   32e3a:	blx	86fc <openat@plt>
   32e3e:	cmp.w	r0, #4294967295	; 0xffffffff
   32e42:	mov	r8, r0
   32e44:	beq.n	32e70 <btrfs_util_subvolume_id@@Base+0x1c4>
   32e46:	ldr	r1, [r4, #8]
   32e48:	mov	r2, r7
   32e4a:	mov	r3, r6
   32e4c:	bl	32cdc <btrfs_util_subvolume_id@@Base+0x30>
   32e50:	mov	r5, r0
   32e52:	cbz	r0, 32e60 <btrfs_util_subvolume_id@@Base+0x1b4>
   32e54:	mov	r0, r8
   32e56:	blx	8b9c <close@plt>
   32e5a:	mov	r0, r5
   32e5c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   32e60:	ldr	r0, [r4, #8]
   32e62:	blx	8b9c <close@plt>
   32e66:	str.w	r8, [r4, #8]
   32e6a:	b.n	32e0c <btrfs_util_subvolume_id@@Base+0x160>
   32e6c:	movs	r5, #2
   32e6e:	b.n	32e5a <btrfs_util_subvolume_id@@Base+0x1ae>
   32e70:	movs	r5, #7
   32e72:	b.n	32e5a <btrfs_util_subvolume_id@@Base+0x1ae>

00032e74 <btrfs_util_subvolume_path_fd@@Base>:
   32e74:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32e78:	sub.w	sp, sp, #8192	; 0x2000
   32e7c:	sub	sp, #44	; 0x2c
   32e7e:	ldr	r5, [pc, #496]	; (33070 <btrfs_util_subvolume_path_fd@@Base+0x1fc>)
   32e80:	add.w	r1, sp, #8256	; 0x2040
   32e84:	ldr	r4, [pc, #492]	; (33074 <btrfs_util_subvolume_path_fd@@Base+0x200>)
   32e86:	adds	r1, #16
   32e88:	add	r5, pc
   32e8a:	strd	r2, r3, [sp, #24]
   32e8e:	orrs	r3, r2
   32e90:	ldr	r1, [r1, #0]
   32e92:	add	r6, sp, #40	; 0x28
   32e94:	sub.w	fp, r6, #16
   32e98:	mov	r7, r0
   32e9a:	str	r1, [sp, #16]
   32e9c:	add.w	r1, sp, #8192	; 0x2000
   32ea0:	ldr	r4, [r5, r4]
   32ea2:	add.w	r1, r1, #36	; 0x24
   32ea6:	ldr	r4, [r4, #0]
   32ea8:	str	r4, [r1, #0]
   32eaa:	mov.w	r4, #0
   32eae:	beq.n	32ec0 <btrfs_util_subvolume_path_fd@@Base+0x4c>
   32eb0:	mov.w	r0, #4096	; 0x1000
   32eb4:	blx	8870 <malloc@plt+0x4>
   32eb8:	mov	r4, r0
   32eba:	cbnz	r0, 32eee <btrfs_util_subvolume_path_fd@@Base+0x7a>
   32ebc:	movs	r0, #2
   32ebe:	b.n	32ed2 <btrfs_util_subvolume_path_fd@@Base+0x5e>
   32ec0:	bl	32b8c <btrfs_util_is_subvolume_fd@@Base>
   32ec4:	cbnz	r0, 32ed2 <btrfs_util_subvolume_path_fd@@Base+0x5e>
   32ec6:	mov	r1, fp
   32ec8:	mov	r0, r7
   32eca:	bl	32c20 <btrfs_util_subvolume_id_fd@@Base>
   32ece:	cmp	r0, #0
   32ed0:	beq.n	32eb0 <btrfs_util_subvolume_path_fd@@Base+0x3c>
   32ed2:	ldr	r1, [pc, #420]	; (33078 <btrfs_util_subvolume_path_fd@@Base+0x204>)
   32ed4:	add.w	r3, sp, #8192	; 0x2000
   32ed8:	ldr	r2, [pc, #408]	; (33074 <btrfs_util_subvolume_path_fd@@Base+0x200>)
   32eda:	adds	r3, #36	; 0x24
   32edc:	add	r1, pc
   32ede:	ldr	r2, [r1, r2]
   32ee0:	ldr	r1, [r2, #0]
   32ee2:	ldr	r2, [r3, #0]
   32ee4:	eors	r1, r2
   32ee6:	beq.w	3305e <btrfs_util_subvolume_path_fd@@Base+0x1ea>
   32eea:	blx	8708 <__stack_chk_fail@plt>
   32eee:	addw	r5, r0, #4095	; 0xfff
   32ef2:	movs	r3, #0
   32ef4:	strb.w	r3, [r0, #4095]	; 0xfff
   32ef8:	mov.w	r3, #4096	; 0x1000
   32efc:	str	r3, [sp, #0]
   32efe:	ldrd	r8, r9, [fp]
   32f02:	cmp.w	r9, #0
   32f06:	it	eq
   32f08:	cmpeq.w	r8, #5
   32f0c:	bne.n	32f28 <btrfs_util_subvolume_path_fd@@Base+0xb4>
   32f0e:	cmp	r4, r5
   32f10:	beq.n	32f20 <btrfs_util_subvolume_path_fd@@Base+0xac>
   32f12:	ldr	r3, [sp, #0]
   32f14:	mov	r1, r5
   32f16:	mov	r0, r4
   32f18:	add	r3, r4
   32f1a:	subs	r2, r3, r5
   32f1c:	blx	8610 <memmove@plt+0x4>
   32f20:	ldr	r3, [sp, #16]
   32f22:	movs	r0, #0
   32f24:	str	r4, [r3, #0]
   32f26:	b.n	32ed2 <btrfs_util_subvolume_path_fd@@Base+0x5e>
   32f28:	sub.w	sl, r6, #8
   32f2c:	mov.w	r2, #4096	; 0x1000
   32f30:	movs	r1, #0
   32f32:	mov	r0, sl
   32f34:	blx	89bc <memset@plt+0x4>
   32f38:	movs	r2, #1
   32f3a:	movs	r3, #0
   32f3c:	ldr	r1, [pc, #296]	; (33068 <btrfs_util_subvolume_path_fd@@Base+0x1f4>)
   32f3e:	strd	r2, r3, [r6, #-8]
   32f42:	mov	r0, r7
   32f44:	mov.w	r2, #4294967295	; 0xffffffff
   32f48:	mov.w	r3, #4294967295	; 0xffffffff
   32f4c:	strd	r2, r3, [sl, #32]
   32f50:	strd	r2, r3, [sl, #48]	; 0x30
   32f54:	mov	r2, sl
   32f56:	movs	r3, #144	; 0x90
   32f58:	strd	r8, r9, [sl, #8]
   32f5c:	strd	r3, r3, [sl, #56]	; 0x38
   32f60:	movs	r3, #1
   32f62:	strd	r8, r9, [sl, #16]
   32f66:	str.w	r3, [sl, #64]	; 0x40
   32f6a:	blx	87b4 <ioctl@plt>
   32f6e:	adds	r0, #1
   32f70:	bne.n	32f7c <btrfs_util_subvolume_path_fd@@Base+0x108>
   32f72:	mov	r0, r4
   32f74:	blx	8620 <free@plt+0x4>
   32f78:	movs	r0, #12
   32f7a:	b.n	32ed2 <btrfs_util_subvolume_path_fd@@Base+0x5e>
   32f7c:	ldr.w	r3, [sl, #64]	; 0x40
   32f80:	cbnz	r3, 32f94 <btrfs_util_subvolume_path_fd@@Base+0x120>
   32f82:	mov	r0, r4
   32f84:	blx	8620 <free@plt+0x4>
   32f88:	blx	897c <__errno_location@plt>
   32f8c:	movs	r3, #2
   32f8e:	str	r3, [r0, #0]
   32f90:	movs	r0, #6
   32f92:	b.n	32ed2 <btrfs_util_subvolume_path_fd@@Base+0x5e>
   32f94:	ldrd	r0, r1, [sl, #120]	; 0x78
   32f98:	add.w	r2, sp, #4128	; 0x1020
   32f9c:	adds	r2, #8
   32f9e:	ldrh.w	r9, [sl, #152]	; 0x98
   32fa2:	strd	r0, r1, [r2, #-8]
   32fa6:	strd	r0, r1, [fp]
   32faa:	ldrd	r0, r1, [sl, #136]	; 0x88
   32fae:	strd	r0, r1, [r2], #-8
   32fb2:	mov	r0, r7
   32fb4:	ldr	r1, [pc, #180]	; (3306c <btrfs_util_subvolume_path_fd@@Base+0x1f8>)
   32fb6:	blx	87b4 <ioctl@plt>
   32fba:	adds	r0, #1
   32fbc:	beq.n	32f72 <btrfs_util_subvolume_path_fd@@Base+0xfe>
   32fbe:	add.w	r0, sp, #4128	; 0x1020
   32fc2:	adds	r0, #16
   32fc4:	blx	8940 <strlen@plt>
   32fc8:	ldrd	r2, r3, [fp]
   32fcc:	cmp	r3, #0
   32fce:	it	eq
   32fd0:	cmpeq	r2, #5
   32fd2:	strd	r2, r3, [sp, #8]
   32fd6:	ite	ne
   32fd8:	movne	r3, #1
   32fda:	moveq	r3, #0
   32fdc:	add	r3, r9
   32fde:	add	r3, r0
   32fe0:	mov	r8, r0
   32fe2:	subs	r3, r5, r3
   32fe4:	cmp	r4, r3
   32fe6:	bls.n	33026 <btrfs_util_subvolume_path_fd@@Base+0x1b2>
   32fe8:	ldr	r3, [sp, #0]
   32fea:	lsls	r3, r3, #1
   32fec:	str	r3, [sp, #4]
   32fee:	mov	r0, r3
   32ff0:	blx	8870 <malloc@plt+0x4>
   32ff4:	cbnz	r0, 32ffe <btrfs_util_subvolume_path_fd@@Base+0x18a>
   32ff6:	mov	r0, r4
   32ff8:	blx	8620 <free@plt+0x4>
   32ffc:	b.n	32ebc <btrfs_util_subvolume_path_fd@@Base+0x48>
   32ffe:	ldr	r2, [sp, #0]
   33000:	ldr	r1, [sp, #4]
   33002:	add	r2, r4
   33004:	str	r0, [sp, #20]
   33006:	subs	r2, r2, r5
   33008:	sub.w	sl, r1, r2
   3300c:	mov	r1, r5
   3300e:	add	sl, r0
   33010:	mov	r0, sl
   33012:	mov	r5, sl
   33014:	blx	866c <memcpy@plt+0x4>
   33018:	mov	r0, r4
   3301a:	blx	8620 <free@plt+0x4>
   3301e:	ldr	r3, [sp, #4]
   33020:	str	r3, [sp, #0]
   33022:	ldr	r3, [sp, #20]
   33024:	mov	r4, r3
   33026:	sub.w	r5, r5, r9
   3302a:	add.w	r1, r6, #146	; 0x92
   3302e:	mov	r2, r9
   33030:	mov	r0, r5
   33032:	sub.w	r5, r5, r8
   33036:	blx	866c <memcpy@plt+0x4>
   3303a:	add.w	r1, sp, #4128	; 0x1020
   3303e:	mov	r2, r8
   33040:	mov	r0, r5
   33042:	adds	r1, #16
   33044:	blx	866c <memcpy@plt+0x4>
   33048:	ldrd	r2, r3, [sp, #8]
   3304c:	cmp	r3, #0
   3304e:	iteee	eq
   33050:	cmpeq	r2, #5
   33052:	movne	r3, #47	; 0x2f
   33054:	strbne.w	r3, [r5, #-1]
   33058:	addne.w	r5, r5, #4294967295	; 0xffffffff
   3305c:	b.n	32efe <btrfs_util_subvolume_path_fd@@Base+0x8a>
   3305e:	add.w	sp, sp, #8192	; 0x2000
   33062:	add	sp, #44	; 0x2c
   33064:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33068:	str	r4, [sp, #68]	; 0x44
   3306a:	beq.n	3306e <btrfs_util_subvolume_path_fd@@Base+0x1fa>
   3306c:	str	r4, [sp, #72]	; 0x48
   3306e:	beq.n	33072 <btrfs_util_subvolume_path_fd@@Base+0x1fe>
   33070:	subs	r0, r7, #3
   33072:	movs	r3, r0
   33074:	lsls	r0, r5, #8
   33076:	movs	r0, r0
   33078:	subs	r4, r4, #2
   3307a:	movs	r3, r0

0003307c <btrfs_util_subvolume_path@@Base>:
   3307c:	push	{r4, r5, r6, r7, lr}
   3307e:	sub	sp, #20
   33080:	movs	r1, #0
   33082:	strd	r3, r2, [sp, #8]
   33086:	blx	88f8 <open@plt>
   3308a:	adds	r3, r0, #1
   3308c:	mov	r6, r0
   3308e:	beq.n	330b4 <btrfs_util_subvolume_path@@Base+0x38>
   33090:	ldr	r1, [sp, #40]	; 0x28
   33092:	ldrd	r3, r2, [sp, #8]
   33096:	str	r1, [sp, #0]
   33098:	bl	32e74 <btrfs_util_subvolume_path_fd@@Base>
   3309c:	mov	r4, r0
   3309e:	blx	897c <__errno_location@plt>
   330a2:	ldr	r7, [r0, #0]
   330a4:	mov	r5, r0
   330a6:	mov	r0, r6
   330a8:	blx	8b9c <close@plt>
   330ac:	str	r7, [r5, #0]
   330ae:	mov	r0, r4
   330b0:	add	sp, #20
   330b2:	pop	{r4, r5, r6, r7, pc}
   330b4:	movs	r4, #7
   330b6:	b.n	330ae <btrfs_util_subvolume_path@@Base+0x32>

000330b8 <btrfs_util_subvolume_info_fd@@Base>:
   330b8:	push	{r4, r5, lr}
   330ba:	sub	sp, #20
   330bc:	mov	r4, r0
   330be:	strd	r2, r3, [sp, #8]
   330c2:	orrs	r3, r2
   330c4:	ldr	r5, [sp, #32]
   330c6:	beq.n	330f0 <btrfs_util_subvolume_info_fd@@Base+0x38>
   330c8:	ldrd	r2, r3, [sp, #8]
   330cc:	cmp	r3, #0
   330ce:	it	eq
   330d0:	cmpeq.w	r2, #256	; 0x100
   330d4:	bcc.n	33116 <btrfs_util_subvolume_info_fd@@Base+0x5e>
   330d6:	mov.w	r1, #4294967295	; 0xffffffff
   330da:	cmp	r1, r3
   330dc:	mvn.w	r0, #255	; 0xff
   330e0:	it	eq
   330e2:	cmpeq	r0, r2
   330e4:	bcc.n	3311e <btrfs_util_subvolume_info_fd@@Base+0x66>
   330e6:	mov	r0, r4
   330e8:	str	r5, [sp, #0]
   330ea:	bl	32610 <print_all_devices@@Base+0x230>
   330ee:	b.n	33104 <btrfs_util_subvolume_info_fd@@Base+0x4c>
   330f0:	bl	32b8c <btrfs_util_is_subvolume_fd@@Base>
   330f4:	cbnz	r0, 33104 <btrfs_util_subvolume_info_fd@@Base+0x4c>
   330f6:	blx	8754 <geteuid@plt>
   330fa:	cbz	r0, 33108 <btrfs_util_subvolume_info_fd@@Base+0x50>
   330fc:	mov	r1, r5
   330fe:	mov	r0, r4
   33100:	bl	32414 <print_all_devices@@Base+0x34>
   33104:	add	sp, #20
   33106:	pop	{r4, r5, pc}
   33108:	add	r1, sp, #8
   3310a:	mov	r0, r4
   3310c:	bl	32c20 <btrfs_util_subvolume_id_fd@@Base>
   33110:	cmp	r0, #0
   33112:	beq.n	330c8 <btrfs_util_subvolume_info_fd@@Base+0x10>
   33114:	b.n	33104 <btrfs_util_subvolume_info_fd@@Base+0x4c>
   33116:	cmp	r3, #0
   33118:	it	eq
   3311a:	cmpeq	r2, #5
   3311c:	beq.n	330e6 <btrfs_util_subvolume_info_fd@@Base+0x2e>
   3311e:	blx	897c <__errno_location@plt>
   33122:	movs	r3, #2
   33124:	str	r3, [r0, #0]
   33126:	movs	r0, #6
   33128:	b.n	33104 <btrfs_util_subvolume_info_fd@@Base+0x4c>

0003312a <btrfs_util_subvolume_info@@Base>:
   3312a:	push	{r4, r5, r6, r7, lr}
   3312c:	sub	sp, #20
   3312e:	movs	r1, #0
   33130:	strd	r3, r2, [sp, #8]
   33134:	blx	88f8 <open@plt>
   33138:	adds	r3, r0, #1
   3313a:	mov	r6, r0
   3313c:	beq.n	33162 <btrfs_util_subvolume_info@@Base+0x38>
   3313e:	ldr	r1, [sp, #40]	; 0x28
   33140:	ldrd	r3, r2, [sp, #8]
   33144:	str	r1, [sp, #0]
   33146:	bl	330b8 <btrfs_util_subvolume_info_fd@@Base>
   3314a:	mov	r4, r0
   3314c:	blx	897c <__errno_location@plt>
   33150:	ldr	r7, [r0, #0]
   33152:	mov	r5, r0
   33154:	mov	r0, r6
   33156:	blx	8b9c <close@plt>
   3315a:	str	r7, [r5, #0]
   3315c:	mov	r0, r4
   3315e:	add	sp, #20
   33160:	pop	{r4, r5, r6, r7, pc}
   33162:	movs	r4, #7
   33164:	b.n	3315c <btrfs_util_subvolume_info@@Base+0x32>

00033166 <btrfs_util_get_subvolume_read_only_fd@@Base>:
   33166:	push	{r0, r1, r2, r3, r4, lr}
   33168:	mov	r4, r1
   3316a:	ldr	r2, [pc, #68]	; (331b0 <btrfs_util_get_subvolume_read_only_fd@@Base+0x4a>)
   3316c:	ldr	r3, [pc, #68]	; (331b4 <btrfs_util_get_subvolume_read_only_fd@@Base+0x4e>)
   3316e:	add	r2, pc
   33170:	ldr	r1, [pc, #56]	; (331ac <btrfs_util_get_subvolume_read_only_fd@@Base+0x46>)
   33172:	ldr	r3, [r2, r3]
   33174:	mov	r2, sp
   33176:	ldr	r3, [r3, #0]
   33178:	str	r3, [sp, #12]
   3317a:	mov.w	r3, #0
   3317e:	blx	87b4 <ioctl@plt>
   33182:	ldr	r2, [pc, #52]	; (331b8 <btrfs_util_get_subvolume_read_only_fd@@Base+0x52>)
   33184:	add	r2, pc
   33186:	adds	r0, #1
   33188:	ittet	ne
   3318a:	ldrne	r3, [sp, #0]
   3318c:	movne	r0, #0
   3318e:	moveq	r0, #14
   33190:	ubfxne	r3, r3, #1, #1
   33194:	it	ne
   33196:	strbne	r3, [r4, #0]
   33198:	ldr	r3, [pc, #24]	; (331b4 <btrfs_util_get_subvolume_read_only_fd@@Base+0x4e>)
   3319a:	ldr	r3, [r2, r3]
   3319c:	ldr	r2, [r3, #0]
   3319e:	ldr	r3, [sp, #12]
   331a0:	eors	r2, r3
   331a2:	beq.n	331a8 <btrfs_util_get_subvolume_read_only_fd@@Base+0x42>
   331a4:	blx	8708 <__stack_chk_fail@plt>
   331a8:	add	sp, #16
   331aa:	pop	{r4, pc}
   331ac:	str	r4, [sp, #100]	; 0x64
   331ae:	strh	r0, [r1, #0]
   331b0:	adds	r2, r2, #0
   331b2:	movs	r3, r0
   331b4:	lsls	r0, r5, #8
   331b6:	movs	r0, r0
   331b8:	subs	r4, r7, r7
   331ba:	movs	r3, r0

000331bc <btrfs_util_get_subvolume_read_only@@Base>:
   331bc:	push	{r3, r4, r5, r6, r7, lr}
   331be:	mov	r4, r1
   331c0:	movs	r1, #0
   331c2:	blx	88f8 <open@plt>
   331c6:	adds	r3, r0, #1
   331c8:	mov	r6, r0
   331ca:	beq.n	331e8 <btrfs_util_get_subvolume_read_only@@Base+0x2c>
   331cc:	mov	r1, r4
   331ce:	bl	33166 <btrfs_util_get_subvolume_read_only_fd@@Base>
   331d2:	mov	r4, r0
   331d4:	blx	897c <__errno_location@plt>
   331d8:	ldr	r7, [r0, #0]
   331da:	mov	r5, r0
   331dc:	mov	r0, r6
   331de:	blx	8b9c <close@plt>
   331e2:	str	r7, [r5, #0]
   331e4:	mov	r0, r4
   331e6:	pop	{r3, r4, r5, r6, r7, pc}
   331e8:	movs	r4, #7
   331ea:	b.n	331e4 <btrfs_util_get_subvolume_read_only@@Base+0x28>

000331ec <btrfs_util_set_subvolume_read_only_fd@@Base>:
   331ec:	ldr	r2, [pc, #108]	; (3325c <btrfs_util_set_subvolume_read_only_fd@@Base+0x70>)
   331ee:	ldr	r3, [pc, #112]	; (33260 <btrfs_util_set_subvolume_read_only_fd@@Base+0x74>)
   331f0:	add	r2, pc
   331f2:	push	{r4, r5, lr}
   331f4:	sub	sp, #28
   331f6:	ldr	r3, [r2, r3]
   331f8:	mov	r5, r1
   331fa:	add	r2, sp, #8
   331fc:	ldr	r1, [pc, #84]	; (33254 <btrfs_util_set_subvolume_read_only_fd@@Base+0x68>)
   331fe:	ldr	r3, [r3, #0]
   33200:	str	r3, [sp, #20]
   33202:	mov.w	r3, #0
   33206:	mov	r4, r0
   33208:	str	r2, [sp, #4]
   3320a:	blx	87b4 <ioctl@plt>
   3320e:	adds	r0, #1
   33210:	beq.n	3324c <btrfs_util_set_subvolume_read_only_fd@@Base+0x60>
   33212:	ldrd	r3, r1, [sp, #8]
   33216:	ldr	r2, [sp, #4]
   33218:	cbz	r5, 33246 <btrfs_util_set_subvolume_read_only_fd@@Base+0x5a>
   3321a:	orr.w	r3, r3, #2
   3321e:	strd	r3, r1, [sp, #8]
   33222:	mov	r0, r4
   33224:	ldr	r1, [pc, #48]	; (33258 <btrfs_util_set_subvolume_read_only_fd@@Base+0x6c>)
   33226:	blx	87b4 <ioctl@plt>
   3322a:	adds	r3, r0, #1
   3322c:	ite	ne
   3322e:	movne	r0, #0
   33230:	moveq	r0, #15
   33232:	ldr	r2, [pc, #48]	; (33264 <btrfs_util_set_subvolume_read_only_fd@@Base+0x78>)
   33234:	ldr	r3, [pc, #40]	; (33260 <btrfs_util_set_subvolume_read_only_fd@@Base+0x74>)
   33236:	add	r2, pc
   33238:	ldr	r3, [r2, r3]
   3323a:	ldr	r2, [r3, #0]
   3323c:	ldr	r3, [sp, #20]
   3323e:	eors	r2, r3
   33240:	beq.n	33250 <btrfs_util_set_subvolume_read_only_fd@@Base+0x64>
   33242:	blx	8708 <__stack_chk_fail@plt>
   33246:	bic.w	r3, r3, #2
   3324a:	b.n	3321e <btrfs_util_set_subvolume_read_only_fd@@Base+0x32>
   3324c:	movs	r0, #14
   3324e:	b.n	33232 <btrfs_util_set_subvolume_read_only_fd@@Base+0x46>
   33250:	add	sp, #28
   33252:	pop	{r4, r5, pc}
   33254:	str	r4, [sp, #100]	; 0x64
   33256:	strh	r0, [r1, #0]
   33258:	str	r4, [sp, #104]	; 0x68
   3325a:	ands	r0, r1
   3325c:	subs	r0, r2, r6
   3325e:	movs	r3, r0
   33260:	lsls	r0, r5, #8
   33262:	movs	r0, r0
   33264:	subs	r2, r1, r5
   33266:	movs	r3, r0

00033268 <btrfs_util_set_subvolume_read_only@@Base>:
   33268:	push	{r3, r4, r5, r6, r7, lr}
   3326a:	mov	r4, r1
   3326c:	movs	r1, #0
   3326e:	blx	88f8 <open@plt>
   33272:	adds	r3, r0, #1
   33274:	mov	r6, r0
   33276:	beq.n	33294 <btrfs_util_set_subvolume_read_only@@Base+0x2c>
   33278:	mov	r1, r4
   3327a:	bl	331ec <btrfs_util_set_subvolume_read_only_fd@@Base>
   3327e:	mov	r4, r0
   33280:	blx	897c <__errno_location@plt>
   33284:	ldr	r7, [r0, #0]
   33286:	mov	r5, r0
   33288:	mov	r0, r6
   3328a:	blx	8b9c <close@plt>
   3328e:	str	r7, [r5, #0]
   33290:	mov	r0, r4
   33292:	pop	{r3, r4, r5, r6, r7, pc}
   33294:	movs	r4, #7
   33296:	b.n	33290 <btrfs_util_set_subvolume_read_only@@Base+0x28>

00033298 <btrfs_util_get_default_subvolume_fd@@Base>:
   33298:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3329c:	mov	r7, r1
   3329e:	ldr	r1, [pc, #256]	; (333a0 <btrfs_util_get_default_subvolume_fd@@Base+0x108>)
   332a0:	sub.w	sp, sp, #4096	; 0x1000
   332a4:	ldr	r2, [pc, #252]	; (333a4 <btrfs_util_get_default_subvolume_fd@@Base+0x10c>)
   332a6:	sub	sp, #20
   332a8:	add	r1, pc
   332aa:	add.w	r9, sp, #16
   332ae:	sub.w	r4, r9, #8
   332b2:	add.w	r3, sp, #4096	; 0x1000
   332b6:	ldr	r2, [r1, r2]
   332b8:	mov	r8, r0
   332ba:	ldr.w	fp, [pc, #236]	; 333a8 <btrfs_util_get_default_subvolume_fd@@Base+0x110>
   332be:	mov	r0, r4
   332c0:	ldr.w	sl, [pc, #232]	; 333ac <btrfs_util_get_default_subvolume_fd@@Base+0x114>
   332c4:	ldr	r2, [r2, #0]
   332c6:	str	r2, [r3, #12]
   332c8:	mov.w	r2, #0
   332cc:	movs	r6, #0
   332ce:	mov.w	r2, #4096	; 0x1000
   332d2:	add	fp, pc
   332d4:	movs	r1, #0
   332d6:	adds	r3, #12
   332d8:	blx	89bc <memset@plt+0x4>
   332dc:	movs	r2, #1
   332de:	movs	r3, #0
   332e0:	strd	r2, r3, [r9, #-8]
   332e4:	movs	r2, #6
   332e6:	movs	r3, #0
   332e8:	strd	r2, r3, [r4, #8]
   332ec:	strd	r2, r3, [r4, #16]
   332f0:	mov.w	r3, #4294967295	; 0xffffffff
   332f4:	mov.w	r2, #4294967295	; 0xffffffff
   332f8:	strd	r2, r3, [r4, #32]
   332fc:	strd	r2, r3, [r4, #48]	; 0x30
   33300:	movs	r3, #84	; 0x54
   33302:	strd	r3, r3, [r4, #56]	; 0x38
   33306:	mov	r3, r6
   33308:	ldr	r2, [r4, #64]	; 0x40
   3330a:	cmp	r2, r3
   3330c:	bhi.n	3334e <btrfs_util_get_default_subvolume_fd@@Base+0xb6>
   3330e:	mov	r2, r4
   33310:	mov	r1, sl
   33312:	mov	r0, r8
   33314:	mov.w	r3, #4096	; 0x1000
   33318:	str	r3, [r4, #64]	; 0x40
   3331a:	blx	87b4 <ioctl@plt>
   3331e:	adds	r0, #1
   33320:	beq.n	33390 <btrfs_util_get_default_subvolume_fd@@Base+0xf8>
   33322:	ldr	r3, [r4, #64]	; 0x40
   33324:	cbnz	r3, 3334a <btrfs_util_get_default_subvolume_fd@@Base+0xb2>
   33326:	blx	897c <__errno_location@plt>
   3332a:	movs	r3, #2
   3332c:	str	r3, [r0, #0]
   3332e:	movs	r0, #6
   33330:	ldr	r1, [pc, #124]	; (333b0 <btrfs_util_get_default_subvolume_fd@@Base+0x118>)
   33332:	add.w	r3, sp, #4096	; 0x1000
   33336:	ldr	r2, [pc, #108]	; (333a4 <btrfs_util_get_default_subvolume_fd@@Base+0x10c>)
   33338:	adds	r3, #12
   3333a:	add	r1, pc
   3333c:	ldr	r2, [r1, r2]
   3333e:	ldr	r1, [r2, #0]
   33340:	ldr	r2, [r3, #0]
   33342:	eors	r1, r2
   33344:	beq.n	33394 <btrfs_util_get_default_subvolume_fd@@Base+0xfc>
   33346:	blx	8708 <__stack_chk_fail@plt>
   3334a:	movs	r6, #0
   3334c:	mov	r3, r6
   3334e:	add.w	r5, r9, #96	; 0x60
   33352:	add	r5, r6
   33354:	ldr	r2, [r5, #24]
   33356:	cmp	r2, #84	; 0x54
   33358:	bne.n	33378 <btrfs_util_get_default_subvolume_fd@@Base+0xe0>
   3335a:	str	r3, [sp, #4]
   3335c:	add.w	r0, r5, #62	; 0x3e
   33360:	ldrh.w	r2, [r5, #59]	; 0x3b
   33364:	mov	r1, fp
   33366:	blx	8b78 <strncmp@plt>
   3336a:	ldr	r3, [sp, #4]
   3336c:	cbnz	r0, 33378 <btrfs_util_get_default_subvolume_fd@@Base+0xe0>
   3336e:	ldr	r2, [r5, #32]
   33370:	ldr	r3, [r5, #36]	; 0x24
   33372:	strd	r2, r3, [r7]
   33376:	b.n	33330 <btrfs_util_get_default_subvolume_fd@@Base+0x98>
   33378:	ldr	r2, [r5, #28]
   3337a:	adds	r6, #32
   3337c:	adds	r3, #1
   3337e:	add	r6, r2
   33380:	ldrd	r2, r1, [r5, #16]
   33384:	adds	r2, #1
   33386:	adc.w	r1, r1, #0
   3338a:	strd	r2, r1, [r4, #24]
   3338e:	b.n	33308 <btrfs_util_get_default_subvolume_fd@@Base+0x70>
   33390:	movs	r0, #12
   33392:	b.n	33330 <btrfs_util_get_default_subvolume_fd@@Base+0x98>
   33394:	add.w	sp, sp, #4096	; 0x1000
   33398:	add	sp, #20
   3339a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3339e:	nop
   333a0:	subs	r0, r3, r3
   333a2:	movs	r3, r0
   333a4:	lsls	r0, r5, #8
   333a6:	movs	r0, r0
   333a8:	ldrh	r2, [r4, #18]
   333aa:	movs	r0, r0
   333ac:	str	r4, [sp, #68]	; 0x44
   333ae:	beq.n	333b2 <btrfs_util_get_default_subvolume_fd@@Base+0x11a>
   333b0:	subs	r6, r0, r1
   333b2:	movs	r3, r0

000333b4 <btrfs_util_get_default_subvolume@@Base>:
   333b4:	push	{r3, r4, r5, r6, r7, lr}
   333b6:	mov	r4, r1
   333b8:	movs	r1, #0
   333ba:	blx	88f8 <open@plt>
   333be:	adds	r3, r0, #1
   333c0:	mov	r6, r0
   333c2:	beq.n	333e0 <btrfs_util_get_default_subvolume@@Base+0x2c>
   333c4:	mov	r1, r4
   333c6:	bl	33298 <btrfs_util_get_default_subvolume_fd@@Base>
   333ca:	mov	r4, r0
   333cc:	blx	897c <__errno_location@plt>
   333d0:	ldr	r7, [r0, #0]
   333d2:	mov	r5, r0
   333d4:	mov	r0, r6
   333d6:	blx	8b9c <close@plt>
   333da:	str	r7, [r5, #0]
   333dc:	mov	r0, r4
   333de:	pop	{r3, r4, r5, r6, r7, pc}
   333e0:	movs	r4, #7
   333e2:	b.n	333dc <btrfs_util_get_default_subvolume@@Base+0x28>

000333e4 <btrfs_util_set_default_subvolume_fd@@Base>:
   333e4:	push	{r0, r1, r4, lr}
   333e6:	mov	r4, r0
   333e8:	strd	r2, r3, [sp]
   333ec:	orrs	r3, r2
   333ee:	beq.n	33406 <btrfs_util_set_default_subvolume_fd@@Base+0x22>
   333f0:	ldr	r1, [pc, #40]	; (3341c <btrfs_util_set_default_subvolume_fd@@Base+0x38>)
   333f2:	mov	r2, sp
   333f4:	mov	r0, r4
   333f6:	blx	87b4 <ioctl@plt>
   333fa:	adds	r3, r0, #1
   333fc:	ite	ne
   333fe:	movne	r0, #0
   33400:	moveq	r0, #19
   33402:	add	sp, #8
   33404:	pop	{r4, pc}
   33406:	bl	32b8c <btrfs_util_is_subvolume_fd@@Base>
   3340a:	cmp	r0, #0
   3340c:	bne.n	33402 <btrfs_util_set_default_subvolume_fd@@Base+0x1e>
   3340e:	mov	r1, sp
   33410:	mov	r0, r4
   33412:	bl	32c20 <btrfs_util_subvolume_id_fd@@Base>
   33416:	cmp	r0, #0
   33418:	beq.n	333f0 <btrfs_util_set_default_subvolume_fd@@Base+0xc>
   3341a:	b.n	33402 <btrfs_util_set_default_subvolume_fd@@Base+0x1e>
   3341c:	str	r4, [sp, #76]	; 0x4c
   3341e:	ands	r0, r1

00033420 <btrfs_util_set_default_subvolume@@Base>:
   33420:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   33422:	movs	r1, #0
   33424:	strd	r3, r2, [sp]
   33428:	blx	88f8 <open@plt>
   3342c:	adds	r3, r0, #1
   3342e:	mov	r6, r0
   33430:	beq.n	33452 <btrfs_util_set_default_subvolume@@Base+0x32>
   33432:	ldrd	r3, r2, [sp]
   33436:	bl	333e4 <btrfs_util_set_default_subvolume_fd@@Base>
   3343a:	mov	r4, r0
   3343c:	blx	897c <__errno_location@plt>
   33440:	ldr	r7, [r0, #0]
   33442:	mov	r5, r0
   33444:	mov	r0, r6
   33446:	blx	8b9c <close@plt>
   3344a:	str	r7, [r5, #0]
   3344c:	mov	r0, r4
   3344e:	add	sp, #12
   33450:	pop	{r4, r5, r6, r7, pc}
   33452:	movs	r4, #7
   33454:	b.n	3344c <btrfs_util_set_default_subvolume@@Base+0x2c>

00033456 <btrfs_util_create_subvolume_fd@@Base>:
   33456:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   3345a:	sub.w	sp, sp, #4096	; 0x1000
   3345e:	sub	sp, #12
   33460:	mov	r8, r1
   33462:	ldr	r1, [pc, #232]	; (3354c <btrfs_util_create_subvolume_fd@@Base+0xf6>)
   33464:	mov	r9, r2
   33466:	mov	r4, r3
   33468:	ldr	r2, [pc, #228]	; (33550 <btrfs_util_create_subvolume_fd@@Base+0xfa>)
   3346a:	add.w	r3, sp, #4128	; 0x1020
   3346e:	add	r1, pc
   33470:	adds	r3, #8
   33472:	mov	r5, sp
   33474:	ldr	r2, [r1, r2]
   33476:	mov	r7, r0
   33478:	ldr	r6, [r3, #0]
   3347a:	add.w	r3, sp, #4096	; 0x1000
   3347e:	ldr	r2, [r2, #0]
   33480:	str	r2, [r3, #4]
   33482:	mov.w	r2, #0
   33486:	movs	r1, #0
   33488:	mov.w	r2, #4096	; 0x1000
   3348c:	mov	r0, r5
   3348e:	adds	r3, #4
   33490:	blx	89bc <memset@plt+0x4>
   33494:	cmp.w	r9, #0
   33498:	beq.n	334be <btrfs_util_create_subvolume_fd@@Base+0x68>
   3349a:	blx	897c <__errno_location@plt>
   3349e:	movs	r3, #22
   334a0:	str	r3, [r0, #0]
   334a2:	movs	r0, #3
   334a4:	ldr	r1, [pc, #172]	; (33554 <btrfs_util_create_subvolume_fd@@Base+0xfe>)
   334a6:	add.w	r3, sp, #4096	; 0x1000
   334aa:	ldr	r2, [pc, #164]	; (33550 <btrfs_util_create_subvolume_fd@@Base+0xfa>)
   334ac:	adds	r3, #4
   334ae:	add	r1, pc
   334b0:	ldr	r2, [r1, r2]
   334b2:	ldr	r1, [r2, #0]
   334b4:	ldr	r2, [r3, #0]
   334b6:	eors	r1, r2
   334b8:	beq.n	3353e <btrfs_util_create_subvolume_fd@@Base+0xe8>
   334ba:	blx	8708 <__stack_chk_fail@plt>
   334be:	cbz	r4, 334c8 <btrfs_util_create_subvolume_fd@@Base+0x72>
   334c0:	movs	r2, #1
   334c2:	movs	r3, #0
   334c4:	strd	r2, r3, [r5, #16]
   334c8:	cbz	r6, 334ea <btrfs_util_create_subvolume_fd@@Base+0x94>
   334ca:	ldr	r3, [r5, #16]
   334cc:	str	r6, [r5, #32]
   334ce:	orr.w	r3, r3, #4
   334d2:	str	r3, [r5, #16]
   334d4:	ldrd	r3, r2, [r6, #8]
   334d8:	adds	r3, #9
   334da:	adc.w	r2, r2, #0
   334de:	lsls	r2, r2, #3
   334e0:	orr.w	r2, r2, r3, lsr #29
   334e4:	lsls	r3, r3, #3
   334e6:	strd	r3, r2, [r5, #24]
   334ea:	mov	r0, r8
   334ec:	blx	8940 <strlen@plt>
   334f0:	movw	r3, #4039	; 0xfc7
   334f4:	cmp	r0, r3
   334f6:	mov	r6, r0
   334f8:	bls.n	33502 <btrfs_util_create_subvolume_fd@@Base+0xac>
   334fa:	blx	897c <__errno_location@plt>
   334fe:	movs	r3, #36	; 0x24
   33500:	b.n	334a0 <btrfs_util_create_subvolume_fd@@Base+0x4a>
   33502:	mov	r2, r0
   33504:	mov	r1, r8
   33506:	movw	r3, #4040	; 0xfc8
   3350a:	add	r0, sp, #56	; 0x38
   3350c:	add	r6, r5
   3350e:	blx	8798 <__memcpy_chk@plt>
   33512:	ldr	r1, [pc, #52]	; (33548 <btrfs_util_create_subvolume_fd@@Base+0xf2>)
   33514:	mov	r2, r5
   33516:	mov	r0, r7
   33518:	mov.w	r8, #0
   3351c:	strb.w	r8, [r6, #56]	; 0x38
   33520:	blx	87b4 <ioctl@plt>
   33524:	adds	r0, #1
   33526:	beq.n	33536 <btrfs_util_create_subvolume_fd@@Base+0xe0>
   33528:	cbz	r4, 3353a <btrfs_util_create_subvolume_fd@@Base+0xe4>
   3352a:	ldrd	r2, r3, [r5, #8]
   3352e:	mov	r0, r8
   33530:	strd	r2, r3, [r4]
   33534:	b.n	334a4 <btrfs_util_create_subvolume_fd@@Base+0x4e>
   33536:	movs	r0, #16
   33538:	b.n	334a4 <btrfs_util_create_subvolume_fd@@Base+0x4e>
   3353a:	mov	r0, r4
   3353c:	b.n	334a4 <btrfs_util_create_subvolume_fd@@Base+0x4e>
   3353e:	add.w	sp, sp, #4096	; 0x1000
   33542:	add	sp, #12
   33544:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   33548:	str	r4, [sp, #96]	; 0x60
   3354a:	str	r0, [r0, r0]
   3354c:	adds	r2, r2, r4
   3354e:	movs	r3, r0
   33550:	lsls	r0, r5, #8
   33552:	movs	r0, r0
   33554:	adds	r2, r2, r3
   33556:	movs	r3, r0

00033558 <btrfs_util_create_subvolume@@Base>:
   33558:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   3355c:	mov	r7, r2
   3355e:	ldr	r2, [pc, #120]	; (335d8 <btrfs_util_create_subvolume@@Base+0x80>)
   33560:	mov	r8, r3
   33562:	ldr	r3, [pc, #120]	; (335dc <btrfs_util_create_subvolume@@Base+0x84>)
   33564:	subw	sp, sp, #4060	; 0xfdc
   33568:	add	r2, pc
   3356a:	add.w	r9, sp, #12
   3356e:	add	r6, sp, #8
   33570:	mov	r5, r1
   33572:	ldr	r3, [r2, r3]
   33574:	mov	r1, r0
   33576:	mvn.w	r0, #99	; 0x63
   3357a:	mov	r2, r9
   3357c:	ldr	r3, [r3, #0]
   3357e:	str.w	r3, [sp, #4052]	; 0xfd4
   33582:	mov.w	r3, #0
   33586:	movw	r3, #4040	; 0xfc8
   3358a:	str	r6, [sp, #0]
   3358c:	bl	32540 <print_all_devices@@Base+0x160>
   33590:	mov	r4, r0
   33592:	cbnz	r0, 335b6 <btrfs_util_create_subvolume@@Base+0x5e>
   33594:	mov	r3, r7
   33596:	mov	r2, r5
   33598:	mov	r1, r9
   3359a:	str.w	r8, [sp]
   3359e:	ldr	r0, [r6, #0]
   335a0:	bl	33456 <btrfs_util_create_subvolume_fd@@Base>
   335a4:	mov	r4, r0
   335a6:	blx	897c <__errno_location@plt>
   335aa:	ldr	r7, [r0, #0]
   335ac:	mov	r5, r0
   335ae:	ldr	r0, [r6, #0]
   335b0:	blx	8b9c <close@plt>
   335b4:	str	r7, [r5, #0]
   335b6:	ldr	r2, [pc, #40]	; (335e0 <btrfs_util_create_subvolume@@Base+0x88>)
   335b8:	ldr	r3, [pc, #32]	; (335dc <btrfs_util_create_subvolume@@Base+0x84>)
   335ba:	add	r2, pc
   335bc:	ldr	r3, [r2, r3]
   335be:	ldr	r2, [r3, #0]
   335c0:	ldr.w	r3, [sp, #4052]	; 0xfd4
   335c4:	eors	r2, r3
   335c6:	beq.n	335cc <btrfs_util_create_subvolume@@Base+0x74>
   335c8:	blx	8708 <__stack_chk_fail@plt>
   335cc:	mov	r0, r4
   335ce:	addw	sp, sp, #4060	; 0xfdc
   335d2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   335d6:	nop
   335d8:	adds	r0, r3, r0
   335da:	movs	r3, r0
   335dc:	lsls	r0, r5, #8
   335de:	movs	r0, r0
   335e0:	asrs	r6, r0, #31
   335e2:	movs	r3, r0

000335e4 <btrfs_util_create_subvolume_iterator_fd@@Base>:
   335e4:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   335e8:	mov	r7, r0
   335ea:	ldr.w	r8, [sp, #40]	; 0x28
   335ee:	strd	r2, r3, [sp, #8]
   335f2:	bics.w	r1, r8, #1
   335f6:	beq.n	3360a <btrfs_util_create_subvolume_iterator_fd@@Base+0x26>
   335f8:	blx	897c <__errno_location@plt>
   335fc:	movs	r5, #3
   335fe:	movs	r3, #22
   33600:	str	r3, [r0, #0]
   33602:	mov	r0, r5
   33604:	add	sp, #16
   33606:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   3360a:	orrs	r3, r2
   3360c:	bne.n	33630 <btrfs_util_create_subvolume_iterator_fd@@Base+0x4c>
   3360e:	blx	8754 <geteuid@plt>
   33612:	ldrd	r2, r3, [sp, #8]
   33616:	orrs	r3, r2
   33618:	clz	r6, r0
   3361c:	mov.w	r6, r6, lsr #5
   33620:	beq.n	33634 <btrfs_util_create_subvolume_iterator_fd@@Base+0x50>
   33622:	movs	r0, #36	; 0x24
   33624:	blx	8870 <malloc@plt+0x4>
   33628:	mov	r4, r0
   3362a:	cbnz	r0, 33650 <btrfs_util_create_subvolume_iterator_fd@@Base+0x6c>
   3362c:	movs	r5, #2
   3362e:	b.n	33602 <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   33630:	movs	r6, #1
   33632:	b.n	33622 <btrfs_util_create_subvolume_iterator_fd@@Base+0x3e>
   33634:	mov	r0, r7
   33636:	bl	32b8c <btrfs_util_is_subvolume_fd@@Base>
   3363a:	mov	r5, r0
   3363c:	cmp	r0, #0
   3363e:	bne.n	33602 <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   33640:	add	r1, sp, #8
   33642:	mov	r0, r7
   33644:	bl	32c20 <btrfs_util_subvolume_id_fd@@Base>
   33648:	mov	r5, r0
   3364a:	cmp	r0, #0
   3364c:	beq.n	33622 <btrfs_util_create_subvolume_iterator_fd@@Base+0x3e>
   3364e:	b.n	33602 <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   33650:	movs	r3, #4
   33652:	strd	r7, r7, [r0, #4]
   33656:	str.w	r8, [r0, #12]
   3365a:	movs	r5, #0
   3365c:	strb	r6, [r0, #0]
   3365e:	strd	r5, r3, [r0, #20]
   33662:	movw	r0, #16448	; 0x4040
   33666:	blx	8870 <malloc@plt+0x4>
   3366a:	str	r0, [r4, #16]
   3366c:	cbz	r0, 336aa <btrfs_util_create_subvolume_iterator_fd@@Base+0xc6>
   3366e:	mov.w	r0, #256	; 0x100
   33672:	str	r0, [r4, #32]
   33674:	blx	8870 <malloc@plt+0x4>
   33678:	str	r0, [r4, #28]
   3367a:	cbz	r0, 336a6 <btrfs_util_create_subvolume_iterator_fd@@Base+0xc2>
   3367c:	str	r5, [sp, #0]
   3367e:	mov	r0, r4
   33680:	ldrd	r2, r3, [sp, #8]
   33684:	bl	32d8c <btrfs_util_subvolume_id@@Base+0xe0>
   33688:	mov	r5, r0
   3368a:	cbz	r0, 336a0 <btrfs_util_create_subvolume_iterator_fd@@Base+0xbc>
   3368c:	ldr	r0, [r4, #28]
   3368e:	blx	8620 <free@plt+0x4>
   33692:	ldr	r0, [r4, #16]
   33694:	blx	8620 <free@plt+0x4>
   33698:	mov	r0, r4
   3369a:	blx	8620 <free@plt+0x4>
   3369e:	b.n	33602 <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   336a0:	ldr	r3, [sp, #44]	; 0x2c
   336a2:	str	r4, [r3, #0]
   336a4:	b.n	33602 <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   336a6:	movs	r5, #2
   336a8:	b.n	33692 <btrfs_util_create_subvolume_iterator_fd@@Base+0xae>
   336aa:	movs	r5, #2
   336ac:	b.n	33698 <btrfs_util_create_subvolume_iterator_fd@@Base+0xb4>

000336ae <btrfs_util_create_subvolume_iterator@@Base>:
   336ae:	push	{r4, r5, r6, r7, lr}
   336b0:	sub	sp, #20
   336b2:	movs	r1, #0
   336b4:	strd	r3, r2, [sp, #8]
   336b8:	ldr	r5, [sp, #44]	; 0x2c
   336ba:	blx	88f8 <open@plt>
   336be:	adds	r3, r0, #1
   336c0:	mov	r6, r0
   336c2:	beq.n	336f8 <btrfs_util_create_subvolume_iterator@@Base+0x4a>
   336c4:	ldr	r1, [sp, #40]	; 0x28
   336c6:	ldrd	r3, r2, [sp, #8]
   336ca:	str	r5, [sp, #4]
   336cc:	str	r1, [sp, #0]
   336ce:	bl	335e4 <btrfs_util_create_subvolume_iterator_fd@@Base>
   336d2:	mov	r4, r0
   336d4:	cbz	r0, 336ec <btrfs_util_create_subvolume_iterator@@Base+0x3e>
   336d6:	blx	897c <__errno_location@plt>
   336da:	ldr	r7, [r0, #0]
   336dc:	mov	r5, r0
   336de:	mov	r0, r6
   336e0:	blx	8b9c <close@plt>
   336e4:	str	r7, [r5, #0]
   336e6:	mov	r0, r4
   336e8:	add	sp, #20
   336ea:	pop	{r4, r5, r6, r7, pc}
   336ec:	ldr	r2, [r5, #0]
   336ee:	ldr	r3, [r2, #12]
   336f0:	orr.w	r3, r3, #1073741824	; 0x40000000
   336f4:	str	r3, [r2, #12]
   336f6:	b.n	336e6 <btrfs_util_create_subvolume_iterator@@Base+0x38>
   336f8:	movs	r4, #7
   336fa:	b.n	336e6 <btrfs_util_create_subvolume_iterator@@Base+0x38>

000336fc <btrfs_util_destroy_subvolume_iterator@@Base>:
   336fc:	push	{r3, r4, r5, r6, r7, lr}
   336fe:	mov	r4, r0
   33700:	cbz	r0, 33746 <btrfs_util_destroy_subvolume_iterator@@Base+0x4a>
   33702:	ldr	r0, [r0, #28]
   33704:	blx	8620 <free@plt+0x4>
   33708:	ldr	r0, [r4, #16]
   3370a:	blx	8620 <free@plt+0x4>
   3370e:	ldrd	r3, r6, [r4, #4]
   33712:	cmp	r6, r3
   33714:	beq.n	33726 <btrfs_util_destroy_subvolume_iterator@@Base+0x2a>
   33716:	blx	897c <__errno_location@plt>
   3371a:	ldr	r7, [r0, #0]
   3371c:	mov	r5, r0
   3371e:	mov	r0, r6
   33720:	blx	8b9c <close@plt>
   33724:	str	r7, [r5, #0]
   33726:	ldr	r3, [r4, #12]
   33728:	lsls	r3, r3, #1
   3372a:	bpl.n	3373c <btrfs_util_destroy_subvolume_iterator@@Base+0x40>
   3372c:	blx	897c <__errno_location@plt>
   33730:	ldr	r6, [r0, #0]
   33732:	mov	r5, r0
   33734:	ldr	r0, [r4, #4]
   33736:	blx	8b9c <close@plt>
   3373a:	str	r6, [r5, #0]
   3373c:	mov	r0, r4
   3373e:	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   33742:	b.w	861c <free@plt>
   33746:	pop	{r3, r4, r5, r6, r7, pc}

00033748 <btrfs_util_subvolume_iterator_fd@@Base>:
   33748:	ldr	r0, [r0, #4]
   3374a:	bx	lr

0003374c <btrfs_util_subvolume_iterator_next@@Base>:
   3374c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33750:	mov	r5, r2
   33752:	ldr	r2, [pc, #696]	; (33a0c <btrfs_util_subvolume_iterator_next@@Base+0x2c0>)
   33754:	sub	sp, #52	; 0x34
   33756:	ldr	r3, [pc, #696]	; (33a10 <btrfs_util_subvolume_iterator_next@@Base+0x2c4>)
   33758:	mov	r4, r0
   3375a:	add	r2, pc
   3375c:	mov	r8, r1
   3375e:	ldr	r3, [r2, r3]
   33760:	ldr	r3, [r3, #0]
   33762:	str	r3, [sp, #44]	; 0x2c
   33764:	mov.w	r3, #0
   33768:	ldrb	r3, [r0, #0]
   3376a:	cmp	r3, #0
   3376c:	beq.n	3382e <btrfs_util_subvolume_iterator_next@@Base+0xe2>
   3376e:	movw	r6, #4112	; 0x1010
   33772:	movw	sl, #4104	; 0x1008
   33776:	ldr	r3, [r4, #20]
   33778:	cmp	r3, #0
   3377a:	beq.w	339ec <btrfs_util_subvolume_iterator_next@@Base+0x2a0>
   3377e:	muls	r3, r6
   33780:	ldr	r2, [r4, #16]
   33782:	sub.w	r3, r3, #4096	; 0x1000
   33786:	subs	r3, #16
   33788:	add.w	fp, r2, r3
   3378c:	add.w	r7, fp, sl
   33790:	ldr.w	r1, [fp, sl]
   33794:	ldr.w	r2, [fp, #64]	; 0x40
   33798:	cmp	r1, r2
   3379a:	bcc.w	338de <btrfs_util_subvolume_iterator_next@@Base+0x192>
   3379e:	mov.w	r2, #4096	; 0x1000
   337a2:	ldr	r1, [pc, #608]	; (33a04 <btrfs_util_subvolume_iterator_next@@Base+0x2b8>)
   337a4:	str.w	r2, [fp, #64]	; 0x40
   337a8:	mov	r2, fp
   337aa:	ldr	r0, [r4, #4]
   337ac:	blx	87b4 <ioctl@plt>
   337b0:	adds	r0, #1
   337b2:	beq.w	33976 <btrfs_util_subvolume_iterator_next@@Base+0x22a>
   337b6:	add.w	r1, fp, #4096	; 0x1000
   337ba:	movs	r2, #0
   337bc:	str	r2, [r7, #0]
   337be:	str	r2, [r1, #0]
   337c0:	ldr.w	r2, [fp, #64]	; 0x40
   337c4:	cmp	r2, #0
   337c6:	bne.n	33776 <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   337c8:	mov	r0, r4
   337ca:	bl	32a64 <print_all_devices@@Base+0x684>
   337ce:	ldr	r2, [r4, #12]
   337d0:	lsls	r0, r2, #31
   337d2:	bpl.n	33776 <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   337d4:	ldr	r2, [r4, #20]
   337d6:	cmp	r2, #0
   337d8:	beq.n	33776 <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   337da:	cmp.w	r8, #0
   337de:	beq.n	3380c <btrfs_util_subvolume_iterator_next@@Base+0xc0>
   337e0:	movw	r7, #4108	; 0x100c
   337e4:	ldr.w	r9, [fp, r7]
   337e8:	add.w	r0, r9, #1
   337ec:	blx	8870 <malloc@plt+0x4>
   337f0:	mov	r6, r0
   337f2:	str.w	r0, [r8]
   337f6:	cmp	r0, #0
   337f8:	beq.w	339f4 <btrfs_util_subvolume_iterator_next@@Base+0x2a8>
   337fc:	ldr	r1, [r4, #28]
   337fe:	mov	r2, r9
   33800:	blx	866c <memcpy@plt+0x4>
   33804:	ldr.w	r2, [fp, r7]
   33808:	movs	r1, #0
   3380a:	strb	r1, [r6, r2]
   3380c:	cbz	r5, 33816 <btrfs_util_subvolume_iterator_next@@Base+0xca>
   3380e:	ldrd	r2, r3, [fp, #8]
   33812:	strd	r2, r3, [r5]
   33816:	movs	r3, #0
   33818:	ldr	r1, [pc, #504]	; (33a14 <btrfs_util_subvolume_iterator_next@@Base+0x2c8>)
   3381a:	ldr	r2, [pc, #500]	; (33a10 <btrfs_util_subvolume_iterator_next@@Base+0x2c4>)
   3381c:	add	r1, pc
   3381e:	ldr	r2, [r1, r2]
   33820:	ldr	r1, [r2, #0]
   33822:	ldr	r2, [sp, #44]	; 0x2c
   33824:	eors	r1, r2
   33826:	beq.w	339fc <btrfs_util_subvolume_iterator_next@@Base+0x2b0>
   3382a:	blx	8708 <__stack_chk_fail@plt>
   3382e:	movw	r9, #4112	; 0x1010
   33832:	movw	sl, #4104	; 0x1008
   33836:	ldr	r3, [r4, #20]
   33838:	cmp	r3, #0
   3383a:	beq.w	339ec <btrfs_util_subvolume_iterator_next@@Base+0x2a0>
   3383e:	mul.w	fp, r9, r3
   33842:	ldr	r3, [r4, #16]
   33844:	sub.w	fp, fp, #4096	; 0x1000
   33848:	sub.w	fp, fp, #16
   3384c:	add	fp, r3
   3384e:	add.w	r6, fp, #4096	; 0x1000
   33852:	add.w	r7, fp, sl
   33856:	ldr.w	r1, [fp, sl]
   3385a:	ldrb	r3, [r6, #0]
   3385c:	cmp	r1, r3
   3385e:	bcc.w	3397a <btrfs_util_subvolume_iterator_next@@Base+0x22e>
   33862:	ldr	r1, [pc, #420]	; (33a08 <btrfs_util_subvolume_iterator_next@@Base+0x2bc>)
   33864:	add.w	r2, fp, #8
   33868:	ldr	r0, [r4, #8]
   3386a:	blx	87b4 <ioctl@plt>
   3386e:	adds	r0, #1
   33870:	bne.n	3387e <btrfs_util_subvolume_iterator_next@@Base+0x132>
   33872:	blx	897c <__errno_location@plt>
   33876:	ldr	r3, [r0, #0]
   33878:	cmp	r3, #75	; 0x4b
   3387a:	bne.w	339f0 <btrfs_util_subvolume_iterator_next@@Base+0x2a4>
   3387e:	movs	r3, #0
   33880:	str	r3, [r7, #0]
   33882:	ldrb	r3, [r6, #0]
   33884:	cmp	r3, #0
   33886:	bne.n	33836 <btrfs_util_subvolume_iterator_next@@Base+0xea>
   33888:	mov	r0, r4
   3388a:	bl	32a64 <print_all_devices@@Base+0x684>
   3388e:	mov	r3, r0
   33890:	cmp	r0, #0
   33892:	bne.n	33818 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   33894:	ldr	r3, [r4, #12]
   33896:	lsls	r2, r3, #31
   33898:	bpl.n	33836 <btrfs_util_subvolume_iterator_next@@Base+0xea>
   3389a:	ldr	r3, [r4, #20]
   3389c:	cmp	r3, #0
   3389e:	beq.n	33836 <btrfs_util_subvolume_iterator_next@@Base+0xea>
   338a0:	cmp.w	r8, #0
   338a4:	beq.n	338d2 <btrfs_util_subvolume_iterator_next@@Base+0x186>
   338a6:	movw	r7, #4108	; 0x100c
   338aa:	ldr.w	r9, [fp, r7]
   338ae:	add.w	r0, r9, #1
   338b2:	blx	8870 <malloc@plt+0x4>
   338b6:	mov	r6, r0
   338b8:	str.w	r0, [r8]
   338bc:	cmp	r0, #0
   338be:	beq.w	339f4 <btrfs_util_subvolume_iterator_next@@Base+0x2a8>
   338c2:	mov	r2, r9
   338c4:	ldr	r1, [r4, #28]
   338c6:	blx	866c <memcpy@plt+0x4>
   338ca:	ldr.w	r3, [fp, r7]
   338ce:	movs	r2, #0
   338d0:	strb	r2, [r6, r3]
   338d2:	cmp	r5, #0
   338d4:	beq.w	339f8 <btrfs_util_subvolume_iterator_next@@Base+0x2ac>
   338d8:	ldrd	r2, r3, [fp]
   338dc:	b.n	33812 <btrfs_util_subvolume_iterator_next@@Base+0xc6>
   338de:	add.w	r0, fp, #4096	; 0x1000
   338e2:	add.w	ip, fp, #104	; 0x68
   338e6:	adds	r1, #1
   338e8:	add	r7, sp, #32
   338ea:	ldr	r2, [r0, #0]
   338ec:	str.w	r1, [fp, sl]
   338f0:	add	ip, r2
   338f2:	adds	r2, #32
   338f4:	ldr.w	r1, [ip, #28]
   338f8:	mov	r9, ip
   338fa:	add	r2, r1
   338fc:	str	r2, [r0, #0]
   338fe:	ldr.w	r0, [r9, #16]!
   33902:	mov	r2, r7
   33904:	ldr.w	r1, [r9, #4]
   33908:	stmia	r2!, {r0, r1}
   3390a:	adds	r2, r0, #1
   3390c:	ldr	r1, [sp, #36]	; 0x24
   3390e:	adc.w	r1, r1, #0
   33912:	strd	r2, r1, [fp, #24]
   33916:	ldr.w	r3, [ip, #24]
   3391a:	cmp	r3, #156	; 0x9c
   3391c:	bne.w	33776 <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   33920:	add	r3, sp, #28
   33922:	add.w	r2, ip, #32
   33926:	str	r3, [sp, #0]
   33928:	mov	r1, ip
   3392a:	add.w	r3, ip, #50	; 0x32
   3392e:	mov	r0, r4
   33930:	bl	328e4 <print_all_devices@@Base+0x504>
   33934:	mov	r3, r0
   33936:	cmp	r0, #0
   33938:	bne.w	33818 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   3393c:	ldr.w	r0, [r9]
   33940:	ldr.w	r1, [r9, #4]
   33944:	ldr	r3, [sp, #28]
   33946:	stmia	r7!, {r0, r1}
   33948:	mov	r0, r4
   3394a:	str	r3, [sp, #0]
   3394c:	ldrd	r2, r3, [sp, #32]
   33950:	bl	32d8c <btrfs_util_subvolume_id@@Base+0xe0>
   33954:	mov	r3, r0
   33956:	cmp	r0, #0
   33958:	bne.w	33818 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   3395c:	ldr	r3, [r4, #12]
   3395e:	lsls	r1, r3, #31
   33960:	bmi.w	33776 <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   33964:	ldr	r3, [r4, #20]
   33966:	muls	r6, r3
   33968:	ldr	r3, [r4, #16]
   3396a:	sub.w	r6, r6, #4096	; 0x1000
   3396e:	subs	r6, #16
   33970:	add.w	fp, r3, r6
   33974:	b.n	337da <btrfs_util_subvolume_iterator_next@@Base+0x8e>
   33976:	movs	r3, #12
   33978:	b.n	33818 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   3397a:	adds	r1, #1
   3397c:	mov	r0, r4
   3397e:	add.w	r3, fp, r1, lsl #4
   33982:	ldrd	r6, r7, [r3]
   33986:	ldrd	r2, r3, [r3, #8]
   3398a:	str.w	r1, [fp, sl]
   3398e:	add	r1, sp, #32
   33990:	str	r1, [sp, #8]
   33992:	strd	r2, r3, [sp]
   33996:	mov	r2, r6
   33998:	mov	r3, r7
   3399a:	bl	329a4 <print_all_devices@@Base+0x5c4>
   3399e:	str	r0, [sp, #20]
   339a0:	cbz	r0, 339b2 <btrfs_util_subvolume_iterator_next@@Base+0x266>
   339a2:	blx	897c <__errno_location@plt>
   339a6:	ldr	r2, [r0, #0]
   339a8:	cmp	r2, #13
   339aa:	ldr	r3, [sp, #20]
   339ac:	bne.w	33818 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   339b0:	b.n	33836 <btrfs_util_subvolume_iterator_next@@Base+0xea>
   339b2:	ldr	r3, [sp, #32]
   339b4:	mov	r2, r6
   339b6:	mov	r0, r4
   339b8:	str	r3, [sp, #0]
   339ba:	mov	r3, r7
   339bc:	bl	32d8c <btrfs_util_subvolume_id@@Base+0xe0>
   339c0:	str	r0, [sp, #20]
   339c2:	cbz	r0, 339d0 <btrfs_util_subvolume_iterator_next@@Base+0x284>
   339c4:	blx	897c <__errno_location@plt>
   339c8:	ldr	r2, [r0, #0]
   339ca:	cmp	r2, #2
   339cc:	bne.n	339a8 <btrfs_util_subvolume_iterator_next@@Base+0x25c>
   339ce:	b.n	33836 <btrfs_util_subvolume_iterator_next@@Base+0xea>
   339d0:	ldr	r3, [r4, #12]
   339d2:	lsls	r3, r3, #31
   339d4:	bmi.w	33836 <btrfs_util_subvolume_iterator_next@@Base+0xea>
   339d8:	ldr	r3, [r4, #20]
   339da:	mul.w	fp, r9, r3
   339de:	ldr	r3, [r4, #16]
   339e0:	sub.w	fp, fp, #4096	; 0x1000
   339e4:	sub.w	fp, fp, #16
   339e8:	add	fp, r3
   339ea:	b.n	338a0 <btrfs_util_subvolume_iterator_next@@Base+0x154>
   339ec:	movs	r3, #1
   339ee:	b.n	33818 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   339f0:	movs	r3, #24
   339f2:	b.n	33818 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   339f4:	movs	r3, #2
   339f6:	b.n	33818 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   339f8:	mov	r3, r5
   339fa:	b.n	33818 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   339fc:	mov	r0, r3
   339fe:	add	sp, #52	; 0x34
   33a00:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33a04:	str	r4, [sp, #68]	; 0x44
   33a06:	beq.n	33a0a <btrfs_util_subvolume_iterator_next@@Base+0x2be>
   33a08:	str	r4, [sp, #244]	; 0xf4
   33a0a:	beq.n	33a0e <btrfs_util_subvolume_iterator_next@@Base+0x2c2>
   33a0c:	asrs	r6, r4, #24
   33a0e:	movs	r3, r0
   33a10:	lsls	r0, r5, #8
   33a12:	movs	r0, r0
   33a14:	asrs	r4, r4, #21
   33a16:	movs	r3, r0

00033a18 <btrfs_util_create_snapshot_fd2@@Base>:
   33a18:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33a1c:	sub.w	sp, sp, #8192	; 0x2000
   33a20:	sub	sp, #4
   33a22:	mov	r6, r3
   33a24:	add.w	r3, sp, #8192	; 0x2000
   33a28:	mov	sl, r1
   33a2a:	ldr	r1, [pc, #604]	; (33c88 <btrfs_util_create_snapshot_fd2@@Base+0x270>)
   33a2c:	adds	r3, #40	; 0x28
   33a2e:	mov	r7, r2
   33a30:	ldr	r5, [r3, #0]
   33a32:	ldr	r2, [pc, #600]	; (33c8c <btrfs_util_create_snapshot_fd2@@Base+0x274>)
   33a34:	add.w	r3, sp, #8192	; 0x2000
   33a38:	add	r1, pc
   33a3a:	add.w	r8, sp, #64	; 0x40
   33a3e:	ldr.w	fp, [r3, #44]	; 0x2c
   33a42:	adds	r3, #44	; 0x2c
   33a44:	ldr	r2, [r1, r2]
   33a46:	add.w	r3, sp, #8160	; 0x1fe0
   33a4a:	sub.w	r4, r8, #16
   33a4e:	mov	r9, r0
   33a50:	ldr	r2, [r2, #0]
   33a52:	str	r2, [r3, #28]
   33a54:	mov.w	r2, #0
   33a58:	mov.w	r2, #4096	; 0x1000
   33a5c:	movs	r1, #0
   33a5e:	mov	r0, r4
   33a60:	adds	r3, #28
   33a62:	blx	89bc <memset@plt+0x4>
   33a66:	mov	r2, r9
   33a68:	asrs	r3, r2, #31
   33a6a:	strd	r2, r3, [r8, #-16]
   33a6e:	bics.w	r3, r6, #3
   33a72:	bne.n	33a78 <btrfs_util_create_snapshot_fd2@@Base+0x60>
   33a74:	cmp	r6, #3
   33a76:	bne.n	33a9e <btrfs_util_create_snapshot_fd2@@Base+0x86>
   33a78:	blx	897c <__errno_location@plt>
   33a7c:	movs	r3, #22
   33a7e:	movs	r6, #3
   33a80:	str	r3, [r0, #0]
   33a82:	ldr	r1, [pc, #524]	; (33c90 <btrfs_util_create_snapshot_fd2@@Base+0x278>)
   33a84:	add.w	r3, sp, #8160	; 0x1fe0
   33a88:	ldr	r2, [pc, #512]	; (33c8c <btrfs_util_create_snapshot_fd2@@Base+0x274>)
   33a8a:	adds	r3, #28
   33a8c:	add	r1, pc
   33a8e:	ldr	r2, [r1, r2]
   33a90:	ldr	r1, [r2, #0]
   33a92:	ldr	r2, [r3, #0]
   33a94:	eors	r1, r2
   33a96:	beq.w	33c76 <btrfs_util_create_snapshot_fd2@@Base+0x25e>
   33a9a:	blx	8708 <__stack_chk_fail@plt>
   33a9e:	lsls	r2, r6, #30
   33aa0:	ittt	mi
   33aa2:	movmi	r2, #2
   33aa4:	movmi	r3, #0
   33aa6:	strdmi	r2, r3, [r4, #16]
   33aaa:	cbz	r5, 33ab4 <btrfs_util_create_snapshot_fd2@@Base+0x9c>
   33aac:	ldr	r3, [r4, #16]
   33aae:	orr.w	r3, r3, #1
   33ab2:	str	r3, [r4, #16]
   33ab4:	cmp.w	fp, #0
   33ab8:	beq.n	33adc <btrfs_util_create_snapshot_fd2@@Base+0xc4>
   33aba:	ldr	r3, [r4, #16]
   33abc:	str.w	fp, [r4, #32]
   33ac0:	orr.w	r3, r3, #4
   33ac4:	str	r3, [r4, #16]
   33ac6:	ldrd	r3, r2, [fp, #8]
   33aca:	adds	r3, #9
   33acc:	adc.w	r2, r2, #0
   33ad0:	lsls	r2, r2, #3
   33ad2:	orr.w	r2, r2, r3, lsr #29
   33ad6:	lsls	r3, r3, #3
   33ad8:	strd	r3, r2, [r4, #24]
   33adc:	mov	r0, r7
   33ade:	blx	8940 <strlen@plt>
   33ae2:	movw	r3, #4039	; 0xfc7
   33ae6:	cmp	r0, r3
   33ae8:	mov	fp, r0
   33aea:	bls.n	33af4 <btrfs_util_create_snapshot_fd2@@Base+0xdc>
   33aec:	blx	897c <__errno_location@plt>
   33af0:	movs	r3, #36	; 0x24
   33af2:	b.n	33a7e <btrfs_util_create_snapshot_fd2@@Base+0x66>
   33af4:	mov	r2, r0
   33af6:	movw	r3, #4040	; 0xfc8
   33afa:	mov	r1, r7
   33afc:	add.w	r0, r8, #40	; 0x28
   33b00:	add	fp, r4
   33b02:	blx	8798 <__memcpy_chk@plt>
   33b06:	ldr	r1, [pc, #380]	; (33c84 <btrfs_util_create_snapshot_fd2@@Base+0x26c>)
   33b08:	mov	r2, r4
   33b0a:	mov	r0, sl
   33b0c:	movs	r3, #0
   33b0e:	strb.w	r3, [fp, #56]	; 0x38
   33b12:	blx	87b4 <ioctl@plt>
   33b16:	adds	r0, #1
   33b18:	beq.w	33c6e <btrfs_util_create_snapshot_fd2@@Base+0x256>
   33b1c:	cbz	r5, 33b26 <btrfs_util_create_snapshot_fd2@@Base+0x10e>
   33b1e:	ldrd	r2, r3, [r4, #8]
   33b22:	strd	r2, r3, [r5]
   33b26:	ands.w	r3, r6, #1
   33b2a:	beq.w	33c72 <btrfs_util_create_snapshot_fd2@@Base+0x25a>
   33b2e:	mov	r1, r7
   33b30:	movs	r2, #0
   33b32:	mov	r0, sl
   33b34:	blx	86fc <openat@plt>
   33b38:	adds	r3, r0, #1
   33b3a:	mov	r7, r0
   33b3c:	beq.w	33c6a <btrfs_util_create_snapshot_fd2@@Base+0x252>
   33b40:	add	r4, sp, #32
   33b42:	movs	r2, #0
   33b44:	subs	r3, r4, #4
   33b46:	mov	r0, r9
   33b48:	str	r3, [sp, #12]
   33b4a:	str	r3, [sp, #4]
   33b4c:	movs	r3, #0
   33b4e:	str	r3, [sp, #0]
   33b50:	movs	r3, #0
   33b52:	bl	335e4 <btrfs_util_create_subvolume_iterator_fd@@Base>
   33b56:	mov	r6, r0
   33b58:	cbnz	r0, 33b98 <btrfs_util_create_snapshot_fd2@@Base+0x180>
   33b5a:	cmp	r5, #0
   33b5c:	add.w	sl, sp, #36	; 0x24
   33b60:	sub.w	r3, r8, #24
   33b64:	str	r3, [sp, #16]
   33b66:	it	eq
   33b68:	moveq	r3, #0
   33b6a:	str	r3, [sp, #20]
   33b6c:	ldr	r3, [sp, #12]
   33b6e:	movs	r2, #0
   33b70:	mov	r1, r4
   33b72:	ldr	r0, [r3, #0]
   33b74:	bl	3374c <btrfs_util_subvolume_iterator_next@@Base>
   33b78:	mov	fp, r0
   33b7a:	blx	897c <__errno_location@plt>
   33b7e:	mov	r6, r0
   33b80:	cmp.w	fp, #0
   33b84:	beq.n	33baa <btrfs_util_create_snapshot_fd2@@Base+0x192>
   33b86:	cmp.w	fp, #1
   33b8a:	it	eq
   33b8c:	moveq.w	fp, #0
   33b90:	ldr	r0, [sp, #28]
   33b92:	mov	r6, fp
   33b94:	bl	336fc <btrfs_util_destroy_subvolume_iterator@@Base>
   33b98:	blx	897c <__errno_location@plt>
   33b9c:	ldr	r5, [r0, #0]
   33b9e:	mov	r4, r0
   33ba0:	mov	r0, r7
   33ba2:	blx	8b9c <close@plt>
   33ba6:	str	r5, [r4, #0]
   33ba8:	b.n	33a82 <btrfs_util_create_snapshot_fd2@@Base+0x6a>
   33baa:	ldr	r1, [r4, #0]
   33bac:	mov.w	r2, #512	; 0x200
   33bb0:	mov	r0, r7
   33bb2:	blx	8600 <unlinkat@plt>
   33bb6:	adds	r0, #1
   33bb8:	bne.n	33bc6 <btrfs_util_create_snapshot_fd2@@Base+0x1ae>
   33bba:	ldr	r0, [r4, #0]
   33bbc:	mov.w	fp, #8
   33bc0:	blx	8620 <free@plt+0x4>
   33bc4:	b.n	33b90 <btrfs_util_create_snapshot_fd2@@Base+0x178>
   33bc6:	ldr	r1, [r4, #0]
   33bc8:	mov	r2, fp
   33bca:	mov	r0, r9
   33bcc:	blx	86fc <openat@plt>
   33bd0:	cmp.w	r0, #4294967295	; 0xffffffff
   33bd4:	mov	r8, r0
   33bd6:	bne.n	33be4 <btrfs_util_create_snapshot_fd2@@Base+0x1cc>
   33bd8:	ldr	r0, [r4, #0]
   33bda:	mov.w	fp, #7
   33bde:	blx	8620 <free@plt+0x4>
   33be2:	b.n	33b90 <btrfs_util_create_snapshot_fd2@@Base+0x178>
   33be4:	add.w	r2, sp, #4128	; 0x1020
   33be8:	movw	r3, #4040	; 0xfc8
   33bec:	adds	r2, #20
   33bee:	str.w	sl, [sp]
   33bf2:	mov	r0, r7
   33bf4:	ldr	r1, [r4, #0]
   33bf6:	str	r2, [sp, #8]
   33bf8:	bl	32540 <print_all_devices@@Base+0x160>
   33bfc:	mov	fp, r0
   33bfe:	ldr	r0, [r4, #0]
   33c00:	blx	8620 <free@plt+0x4>
   33c04:	ldr	r2, [sp, #8]
   33c06:	cmp.w	fp, #0
   33c0a:	beq.n	33c18 <btrfs_util_create_snapshot_fd2@@Base+0x200>
   33c0c:	ldr	r4, [r6, #0]
   33c0e:	mov	r0, r8
   33c10:	blx	8b9c <close@plt>
   33c14:	str	r4, [r6, #0]
   33c16:	b.n	33b90 <btrfs_util_create_snapshot_fd2@@Base+0x178>
   33c18:	ldr	r3, [sp, #20]
   33c1a:	mov	r0, r8
   33c1c:	str.w	fp, [sp, #4]
   33c20:	str	r3, [sp, #0]
   33c22:	mov	r3, fp
   33c24:	ldr.w	r1, [sl]
   33c28:	bl	33a18 <btrfs_util_create_snapshot_fd2@@Base>
   33c2c:	ldr	r3, [r6, #0]
   33c2e:	str	r3, [sp, #8]
   33c30:	mov	fp, r0
   33c32:	mov	r0, r8
   33c34:	blx	8b9c <close@plt>
   33c38:	ldr	r3, [sp, #8]
   33c3a:	ldr.w	r0, [sl]
   33c3e:	str	r3, [r6, #0]
   33c40:	blx	8b9c <close@plt>
   33c44:	ldr	r3, [sp, #8]
   33c46:	str	r3, [r6, #0]
   33c48:	cmp.w	fp, #0
   33c4c:	bne.n	33b90 <btrfs_util_create_snapshot_fd2@@Base+0x178>
   33c4e:	cmp	r5, #0
   33c50:	beq.n	33b6c <btrfs_util_create_snapshot_fd2@@Base+0x154>
   33c52:	ldr	r3, [sp, #16]
   33c54:	ldrd	r0, r1, [r3]
   33c58:	ldrd	r2, r3, [r5]
   33c5c:	cmp	r3, r1
   33c5e:	it	eq
   33c60:	cmpeq	r2, r0
   33c62:	bcs.n	33b6c <btrfs_util_create_snapshot_fd2@@Base+0x154>
   33c64:	strd	r0, r1, [r5]
   33c68:	b.n	33b6c <btrfs_util_create_snapshot_fd2@@Base+0x154>
   33c6a:	movs	r6, #7
   33c6c:	b.n	33a82 <btrfs_util_create_snapshot_fd2@@Base+0x6a>
   33c6e:	movs	r6, #16
   33c70:	b.n	33a82 <btrfs_util_create_snapshot_fd2@@Base+0x6a>
   33c72:	mov	r6, r3
   33c74:	b.n	33a82 <btrfs_util_create_snapshot_fd2@@Base+0x6a>
   33c76:	mov	r0, r6
   33c78:	add.w	sp, sp, #8192	; 0x2000
   33c7c:	add	sp, #4
   33c7e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33c82:	nop
   33c84:	str	r4, [sp, #92]	; 0x5c
   33c86:	str	r0, [r0, r0]
   33c88:	asrs	r0, r1, #13
   33c8a:	movs	r3, r0
   33c8c:	lsls	r0, r5, #8
   33c8e:	movs	r0, r0
   33c90:	asrs	r4, r6, #11
   33c92:	movs	r3, r0

00033c94 <btrfs_util_create_snapshot_fd@@Base>:
   33c94:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   33c98:	subw	sp, sp, #4068	; 0xfe4
   33c9c:	mov	r8, r3
   33c9e:	add.w	r3, sp, #4096	; 0x1000
   33ca2:	mov	r7, r2
   33ca4:	ldr	r2, [pc, #112]	; (33d18 <btrfs_util_create_snapshot_fd@@Base+0x84>)
   33ca6:	ldr.w	r9, [r3]
   33caa:	add	r6, sp, #16
   33cac:	ldr	r3, [pc, #108]	; (33d1c <btrfs_util_create_snapshot_fd@@Base+0x88>)
   33cae:	add	r2, pc
   33cb0:	mov	r5, r0
   33cb2:	mvn.w	r0, #99	; 0x63
   33cb6:	ldr	r3, [r2, r3]
   33cb8:	add	r2, sp, #20
   33cba:	ldr	r3, [r3, #0]
   33cbc:	str.w	r3, [sp, #4060]	; 0xfdc
   33cc0:	mov.w	r3, #0
   33cc4:	movw	r3, #4040	; 0xfc8
   33cc8:	str	r6, [sp, #0]
   33cca:	str	r2, [sp, #12]
   33ccc:	bl	32540 <print_all_devices@@Base+0x160>
   33cd0:	mov	r4, r0
   33cd2:	cbnz	r0, 33cf6 <btrfs_util_create_snapshot_fd@@Base+0x62>
   33cd4:	mov	r3, r7
   33cd6:	ldr	r2, [sp, #12]
   33cd8:	mov	r0, r5
   33cda:	strd	r8, r9, [sp]
   33cde:	ldr	r1, [r6, #0]
   33ce0:	bl	33a18 <btrfs_util_create_snapshot_fd2@@Base>
   33ce4:	mov	r4, r0
   33ce6:	blx	897c <__errno_location@plt>
   33cea:	ldr	r7, [r0, #0]
   33cec:	mov	r5, r0
   33cee:	ldr	r0, [r6, #0]
   33cf0:	blx	8b9c <close@plt>
   33cf4:	str	r7, [r5, #0]
   33cf6:	ldr	r2, [pc, #40]	; (33d20 <btrfs_util_create_snapshot_fd@@Base+0x8c>)
   33cf8:	ldr	r3, [pc, #32]	; (33d1c <btrfs_util_create_snapshot_fd@@Base+0x88>)
   33cfa:	add	r2, pc
   33cfc:	ldr	r3, [r2, r3]
   33cfe:	ldr	r2, [r3, #0]
   33d00:	ldr.w	r3, [sp, #4060]	; 0xfdc
   33d04:	eors	r2, r3
   33d06:	beq.n	33d0c <btrfs_util_create_snapshot_fd@@Base+0x78>
   33d08:	blx	8708 <__stack_chk_fail@plt>
   33d0c:	mov	r0, r4
   33d0e:	addw	sp, sp, #4068	; 0xfe4
   33d12:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   33d16:	nop
   33d18:	asrs	r2, r2, #3
   33d1a:	movs	r3, r0
   33d1c:	lsls	r0, r5, #8
   33d1e:	movs	r0, r0
   33d20:	asrs	r6, r0, #2
   33d22:	movs	r3, r0

00033d24 <btrfs_util_create_snapshot@@Base>:
   33d24:	push	{r4, r5, r6, r7, lr}
   33d26:	sub	sp, #20
   33d28:	mov	r4, r1
   33d2a:	movs	r1, #0
   33d2c:	strd	r3, r2, [sp, #8]
   33d30:	blx	88f8 <open@plt>
   33d34:	adds	r3, r0, #1
   33d36:	mov	r6, r0
   33d38:	beq.n	33d60 <btrfs_util_create_snapshot@@Base+0x3c>
   33d3a:	ldr	r1, [sp, #40]	; 0x28
   33d3c:	ldrd	r3, r2, [sp, #8]
   33d40:	str	r1, [sp, #0]
   33d42:	mov	r1, r4
   33d44:	bl	33c94 <btrfs_util_create_snapshot_fd@@Base>
   33d48:	mov	r4, r0
   33d4a:	blx	897c <__errno_location@plt>
   33d4e:	ldr	r7, [r0, #0]
   33d50:	mov	r5, r0
   33d52:	mov	r0, r6
   33d54:	blx	8b9c <close@plt>
   33d58:	str	r7, [r5, #0]
   33d5a:	mov	r0, r4
   33d5c:	add	sp, #20
   33d5e:	pop	{r4, r5, r6, r7, pc}
   33d60:	movs	r4, #7
   33d62:	b.n	33d5a <btrfs_util_create_snapshot@@Base+0x36>

00033d64 <btrfs_util_delete_subvolume_fd@@Base>:
   33d64:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33d68:	mov	r5, r1
   33d6a:	ldr	r1, [pc, #384]	; (33eec <btrfs_util_delete_subvolume_fd@@Base+0x188>)
   33d6c:	mov	r6, r2
   33d6e:	ldr	r2, [pc, #384]	; (33ef0 <btrfs_util_delete_subvolume_fd@@Base+0x18c>)
   33d70:	sub.w	sp, sp, #8192	; 0x2000
   33d74:	add	r1, pc
   33d76:	sub	sp, #36	; 0x24
   33d78:	add.w	r3, sp, #8192	; 0x2000
   33d7c:	add	r4, sp, #32
   33d7e:	ldr	r2, [r1, r2]
   33d80:	mov	r7, r0
   33d82:	mov	r0, r4
   33d84:	movs	r1, #0
   33d86:	ldr	r2, [r2, #0]
   33d88:	str	r2, [r3, #28]
   33d8a:	mov.w	r2, #0
   33d8e:	mov.w	r2, #4096	; 0x1000
   33d92:	adds	r3, #28
   33d94:	blx	89bc <memset@plt+0x4>
   33d98:	bics.w	r2, r6, #1
   33d9c:	beq.n	33dac <btrfs_util_delete_subvolume_fd@@Base+0x48>
   33d9e:	blx	897c <__errno_location@plt>
   33da2:	movs	r3, #22
   33da4:	mov.w	r8, #3
   33da8:	str	r3, [r0, #0]
   33daa:	b.n	33dd8 <btrfs_util_delete_subvolume_fd@@Base+0x74>
   33dac:	cbnz	r6, 33dc6 <btrfs_util_delete_subvolume_fd@@Base+0x62>
   33dae:	mov	r0, r5
   33db0:	blx	8940 <strlen@plt>
   33db4:	movw	r3, #4087	; 0xff7
   33db8:	cmp	r0, r3
   33dba:	mov	r6, r0
   33dbc:	bls.n	33eac <btrfs_util_delete_subvolume_fd@@Base+0x148>
   33dbe:	blx	897c <__errno_location@plt>
   33dc2:	movs	r3, #36	; 0x24
   33dc4:	b.n	33da4 <btrfs_util_delete_subvolume_fd@@Base+0x40>
   33dc6:	mov	r1, r5
   33dc8:	mov	r0, r7
   33dca:	blx	86fc <openat@plt>
   33dce:	adds	r3, r0, #1
   33dd0:	mov	r6, r0
   33dd2:	bne.n	33df2 <btrfs_util_delete_subvolume_fd@@Base+0x8e>
   33dd4:	mov.w	r8, #7
   33dd8:	ldr	r1, [pc, #280]	; (33ef4 <btrfs_util_delete_subvolume_fd@@Base+0x190>)
   33dda:	add.w	r3, sp, #8192	; 0x2000
   33dde:	ldr	r2, [pc, #272]	; (33ef0 <btrfs_util_delete_subvolume_fd@@Base+0x18c>)
   33de0:	adds	r3, #28
   33de2:	add	r1, pc
   33de4:	ldr	r2, [r1, r2]
   33de6:	ldr	r1, [r2, #0]
   33de8:	ldr	r2, [r3, #0]
   33dea:	eors	r1, r2
   33dec:	beq.n	33eda <btrfs_util_delete_subvolume_fd@@Base+0x176>
   33dee:	blx	8708 <__stack_chk_fail@plt>
   33df2:	sub.w	r3, r4, #12
   33df6:	movs	r2, #0
   33df8:	strd	r3, r3, [sp, #4]
   33dfc:	movs	r3, #1
   33dfe:	str	r3, [sp, #0]
   33e00:	movs	r3, #0
   33e02:	bl	335e4 <btrfs_util_create_subvolume_iterator_fd@@Base>
   33e06:	mov	r8, r0
   33e08:	cbnz	r0, 33e42 <btrfs_util_delete_subvolume_fd@@Base+0xde>
   33e0a:	add.w	sl, sp, #4128	; 0x1020
   33e0e:	sub.w	r9, r4, #8
   33e12:	add.w	sl, sl, #4
   33e16:	ldr	r3, [sp, #8]
   33e18:	movs	r2, #0
   33e1a:	mov	r1, r9
   33e1c:	ldr	r0, [r3, #0]
   33e1e:	bl	3374c <btrfs_util_subvolume_iterator_next@@Base>
   33e22:	mov	r8, r0
   33e24:	blx	897c <__errno_location@plt>
   33e28:	mov	fp, r0
   33e2a:	cmp.w	r8, #0
   33e2e:	beq.n	33e5e <btrfs_util_delete_subvolume_fd@@Base+0xfa>
   33e30:	cmp.w	r8, #1
   33e34:	it	eq
   33e36:	moveq.w	r8, #0
   33e3a:	ldr.w	r0, [r4, #-12]
   33e3e:	bl	336fc <btrfs_util_destroy_subvolume_iterator@@Base>
   33e42:	blx	897c <__errno_location@plt>
   33e46:	ldr.w	sl, [r0]
   33e4a:	mov	r9, r0
   33e4c:	mov	r0, r6
   33e4e:	blx	8b9c <close@plt>
   33e52:	str.w	sl, [r9]
   33e56:	cmp.w	r8, #0
   33e5a:	beq.n	33dae <btrfs_util_delete_subvolume_fd@@Base+0x4a>
   33e5c:	b.n	33dd8 <btrfs_util_delete_subvolume_fd@@Base+0x74>
   33e5e:	subs	r3, r4, #4
   33e60:	mov	r2, sl
   33e62:	str	r3, [sp, #0]
   33e64:	mov	r0, r6
   33e66:	ldr.w	r1, [r9]
   33e6a:	movw	r3, #4088	; 0xff8
   33e6e:	bl	32540 <print_all_devices@@Base+0x160>
   33e72:	mov	r8, r0
   33e74:	ldr.w	r0, [r9]
   33e78:	blx	8620 <free@plt+0x4>
   33e7c:	cmp.w	r8, #0
   33e80:	bne.n	33e3a <btrfs_util_delete_subvolume_fd@@Base+0xd6>
   33e82:	mov	r2, r8
   33e84:	mov	r1, sl
   33e86:	ldr.w	r0, [r4, #-4]
   33e8a:	bl	33d64 <btrfs_util_delete_subvolume_fd@@Base>
   33e8e:	ldr.w	r3, [fp]
   33e92:	str	r3, [sp, #12]
   33e94:	mov	r8, r0
   33e96:	ldr.w	r0, [r4, #-4]
   33e9a:	blx	8b9c <close@plt>
   33e9e:	ldr	r3, [sp, #12]
   33ea0:	str.w	r3, [fp]
   33ea4:	cmp.w	r8, #0
   33ea8:	beq.n	33e16 <btrfs_util_delete_subvolume_fd@@Base+0xb2>
   33eaa:	b.n	33e3a <btrfs_util_delete_subvolume_fd@@Base+0xd6>
   33eac:	mov	r2, r0
   33eae:	movw	r3, #4088	; 0xff8
   33eb2:	mov	r1, r5
   33eb4:	add.w	r0, r4, #8
   33eb8:	add	r6, r4
   33eba:	blx	8798 <__memcpy_chk@plt>
   33ebe:	ldr	r1, [pc, #40]	; (33ee8 <btrfs_util_delete_subvolume_fd@@Base+0x184>)
   33ec0:	mov	r2, r4
   33ec2:	mov	r0, r7
   33ec4:	movs	r3, #0
   33ec6:	strb	r3, [r6, #8]
   33ec8:	blx	87b4 <ioctl@plt>
   33ecc:	adds	r0, #1
   33ece:	ite	ne
   33ed0:	movne.w	r8, #0
   33ed4:	moveq.w	r8, #18
   33ed8:	b.n	33dd8 <btrfs_util_delete_subvolume_fd@@Base+0x74>
   33eda:	mov	r0, r8
   33edc:	add.w	sp, sp, #8192	; 0x2000
   33ee0:	add	sp, #36	; 0x24
   33ee2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33ee6:	nop
   33ee8:	str	r4, [sp, #60]	; 0x3c
   33eea:	str	r0, [r0, r0]
   33eec:	asrs	r4, r1, #32
   33eee:	movs	r3, r0
   33ef0:	lsls	r0, r5, #8
   33ef2:	movs	r0, r0
   33ef4:	lsrs	r6, r3, #30
   33ef6:	movs	r3, r0

00033ef8 <btrfs_util_delete_subvolume@@Base>:
   33ef8:	push	{r4, r5, r6, r7, lr}
   33efa:	mov	r5, r1
   33efc:	ldr	r1, [pc, #116]	; (33f74 <btrfs_util_delete_subvolume@@Base+0x7c>)
   33efe:	sub.w	sp, sp, #4096	; 0x1000
   33f02:	ldr	r2, [pc, #116]	; (33f78 <btrfs_util_delete_subvolume@@Base+0x80>)
   33f04:	sub	sp, #12
   33f06:	add	r1, pc
   33f08:	add.w	r3, sp, #4096	; 0x1000
   33f0c:	add	r7, sp, #12
   33f0e:	adds	r3, #4
   33f10:	ldr	r2, [r1, r2]
   33f12:	add	r6, sp, #8
   33f14:	mov	r1, r0
   33f16:	mvn.w	r0, #99	; 0x63
   33f1a:	ldr	r2, [r2, #0]
   33f1c:	str	r2, [r3, #0]
   33f1e:	mov.w	r2, #0
   33f22:	movw	r3, #4088	; 0xff8
   33f26:	mov	r2, r7
   33f28:	str	r6, [sp, #0]
   33f2a:	bl	32540 <print_all_devices@@Base+0x160>
   33f2e:	mov	r4, r0
   33f30:	cbnz	r0, 33f4e <btrfs_util_delete_subvolume@@Base+0x56>
   33f32:	mov	r2, r5
   33f34:	mov	r1, r7
   33f36:	ldr	r0, [r6, #0]
   33f38:	bl	33d64 <btrfs_util_delete_subvolume_fd@@Base>
   33f3c:	mov	r4, r0
   33f3e:	blx	897c <__errno_location@plt>
   33f42:	ldr	r7, [r0, #0]
   33f44:	mov	r5, r0
   33f46:	ldr	r0, [r6, #0]
   33f48:	blx	8b9c <close@plt>
   33f4c:	str	r7, [r5, #0]
   33f4e:	ldr	r1, [pc, #44]	; (33f7c <btrfs_util_delete_subvolume@@Base+0x84>)
   33f50:	add.w	r3, sp, #4096	; 0x1000
   33f54:	ldr	r2, [pc, #32]	; (33f78 <btrfs_util_delete_subvolume@@Base+0x80>)
   33f56:	adds	r3, #4
   33f58:	add	r1, pc
   33f5a:	ldr	r2, [r1, r2]
   33f5c:	ldr	r1, [r2, #0]
   33f5e:	ldr	r2, [r3, #0]
   33f60:	eors	r1, r2
   33f62:	beq.n	33f68 <btrfs_util_delete_subvolume@@Base+0x70>
   33f64:	blx	8708 <__stack_chk_fail@plt>
   33f68:	mov	r0, r4
   33f6a:	add.w	sp, sp, #4096	; 0x1000
   33f6e:	add	sp, #12
   33f70:	pop	{r4, r5, r6, r7, pc}
   33f72:	nop
   33f74:	lsrs	r2, r7, #25
   33f76:	movs	r3, r0
   33f78:	lsls	r0, r5, #8
   33f7a:	movs	r0, r0
   33f7c:	lsrs	r0, r5, #24
   33f7e:	movs	r3, r0

00033f80 <btrfs_util_subvolume_iterator_next_info@@Base>:
   33f80:	push	{r4, r5, lr}
   33f82:	mov	r5, r2
   33f84:	ldr	r2, [pc, #72]	; (33fd0 <btrfs_util_subvolume_iterator_next_info@@Base+0x50>)
   33f86:	sub	sp, #28
   33f88:	ldr	r3, [pc, #72]	; (33fd4 <btrfs_util_subvolume_iterator_next_info@@Base+0x54>)
   33f8a:	mov	r4, r0
   33f8c:	add	r2, pc
   33f8e:	ldr	r3, [r2, r3]
   33f90:	add	r2, sp, #8
   33f92:	ldr	r3, [r3, #0]
   33f94:	str	r3, [sp, #20]
   33f96:	mov.w	r3, #0
   33f9a:	bl	3374c <btrfs_util_subvolume_iterator_next@@Base>
   33f9e:	cbnz	r0, 33fb0 <btrfs_util_subvolume_iterator_next_info@@Base+0x30>
   33fa0:	ldrb	r3, [r4, #0]
   33fa2:	str	r5, [sp, #0]
   33fa4:	cbz	r3, 33fc4 <btrfs_util_subvolume_iterator_next_info@@Base+0x44>
   33fa6:	ldrd	r2, r3, [sp, #8]
   33faa:	ldr	r0, [r4, #4]
   33fac:	bl	330b8 <btrfs_util_subvolume_info_fd@@Base>
   33fb0:	ldr	r2, [pc, #36]	; (33fd8 <btrfs_util_subvolume_iterator_next_info@@Base+0x58>)
   33fb2:	ldr	r3, [pc, #32]	; (33fd4 <btrfs_util_subvolume_iterator_next_info@@Base+0x54>)
   33fb4:	add	r2, pc
   33fb6:	ldr	r3, [r2, r3]
   33fb8:	ldr	r2, [r3, #0]
   33fba:	ldr	r3, [sp, #20]
   33fbc:	eors	r2, r3
   33fbe:	beq.n	33fcc <btrfs_util_subvolume_iterator_next_info@@Base+0x4c>
   33fc0:	blx	8708 <__stack_chk_fail@plt>
   33fc4:	ldr	r0, [r4, #8]
   33fc6:	movs	r2, #0
   33fc8:	movs	r3, #0
   33fca:	b.n	33fac <btrfs_util_subvolume_iterator_next_info@@Base+0x2c>
   33fcc:	add	sp, #28
   33fce:	pop	{r4, r5, pc}
   33fd0:	lsrs	r4, r6, #23
   33fd2:	movs	r3, r0
   33fd4:	lsls	r0, r5, #8
   33fd6:	movs	r0, r0
   33fd8:	lsrs	r4, r1, #23
   33fda:	movs	r3, r0

00033fdc <btrfs_util_deleted_subvolumes_fd@@Base>:
   33fdc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33fe0:	mov	r6, r1
   33fe2:	ldr	r1, [pc, #320]	; (34124 <btrfs_util_deleted_subvolumes_fd@@Base+0x148>)
   33fe4:	mov	r7, r2
   33fe6:	ldr	r2, [pc, #320]	; (34128 <btrfs_util_deleted_subvolumes_fd@@Base+0x14c>)
   33fe8:	sub.w	sp, sp, #4096	; 0x1000
   33fec:	add	r1, pc
   33fee:	sub	sp, #28
   33ff0:	add	r5, sp, #16
   33ff2:	add.w	r3, sp, #4096	; 0x1000
   33ff6:	ldr	r2, [r1, r2]
   33ff8:	add	r4, sp, #24
   33ffa:	mov	fp, r0
   33ffc:	mov	r0, r5
   33ffe:	ldr	r2, [r2, #0]
   34000:	str	r2, [r3, #20]
   34002:	mov.w	r2, #0
   34006:	movs	r1, #0
   34008:	mov.w	r2, #4096	; 0x1000
   3400c:	adds	r3, #20
   3400e:	blx	89bc <memset@plt+0x4>
   34012:	movs	r2, #1
   34014:	movs	r3, #0
   34016:	strd	r2, r3, [r4, #-8]
   3401a:	movs	r4, #0
   3401c:	mvn.w	r2, #4
   34020:	mov	sl, r4
   34022:	mov	r9, r4
   34024:	mov.w	r3, #4294967295	; 0xffffffff
   34028:	str	r4, [r6, #0]
   3402a:	strd	r2, r3, [r5, #8]
   3402e:	strd	r2, r3, [r5, #16]
   34032:	mov.w	r3, #4294967295	; 0xffffffff
   34036:	mov.w	r2, #4294967295	; 0xffffffff
   3403a:	str	r4, [r7, #0]
   3403c:	strd	r2, r3, [r5, #32]
   34040:	strd	r2, r3, [r5, #48]	; 0x30
   34044:	movs	r3, #48	; 0x30
   34046:	strd	r3, r3, [r5, #56]	; 0x38
   3404a:	ldr	r3, [r5, #64]	; 0x40
   3404c:	cmp	r3, sl
   3404e:	bhi.n	3406e <btrfs_util_deleted_subvolumes_fd@@Base+0x92>
   34050:	ldr	r1, [pc, #204]	; (34120 <btrfs_util_deleted_subvolumes_fd@@Base+0x144>)
   34052:	mov	r2, r5
   34054:	mov	r0, fp
   34056:	mov.w	r3, #4096	; 0x1000
   3405a:	str	r3, [r5, #64]	; 0x40
   3405c:	blx	87b4 <ioctl@plt>
   34060:	adds	r0, #1
   34062:	beq.n	3410a <btrfs_util_deleted_subvolumes_fd@@Base+0x12e>
   34064:	ldr	r3, [r5, #64]	; 0x40
   34066:	cmp	r3, #0
   34068:	beq.n	340f0 <btrfs_util_deleted_subvolumes_fd@@Base+0x114>
   3406a:	movs	r4, #0
   3406c:	mov	sl, r4
   3406e:	add.w	r8, sp, #120	; 0x78
   34072:	movs	r3, #0
   34074:	add	r8, r4
   34076:	str	r3, [sp, #0]
   34078:	mov	r0, fp
   3407a:	ldrd	r2, r3, [r8, #16]
   3407e:	bl	330b8 <btrfs_util_subvolume_info_fd@@Base>
   34082:	mov	r3, r0
   34084:	cbnz	r0, 340dc <btrfs_util_deleted_subvolumes_fd@@Base+0x100>
   34086:	ldr	r3, [r7, #0]
   34088:	cmp	r3, r9
   3408a:	bcc.n	340a6 <btrfs_util_deleted_subvolumes_fd@@Base+0xca>
   3408c:	cmp.w	r9, #0
   34090:	beq.n	340d6 <btrfs_util_deleted_subvolumes_fd@@Base+0xfa>
   34092:	mov.w	r9, r9, lsl #1
   34096:	ldr	r0, [r6, #0]
   34098:	movs	r2, #8
   3409a:	mov	r1, r9
   3409c:	bl	34168 <btrfs_util_deleted_subvolumes@@Base+0x38>
   340a0:	cmp	r0, #0
   340a2:	beq.n	3410e <btrfs_util_deleted_subvolumes_fd@@Base+0x132>
   340a4:	str	r0, [r6, #0]
   340a6:	ldr	r0, [r7, #0]
   340a8:	ldr	r1, [r6, #0]
   340aa:	adds	r3, r0, #1
   340ac:	str	r3, [r7, #0]
   340ae:	ldrd	r2, r3, [r8, #16]
   340b2:	add.w	r1, r1, r0, lsl #3
   340b6:	strd	r2, r3, [r1]
   340ba:	ldr.w	r3, [r8, #28]
   340be:	adds	r4, #32
   340c0:	add.w	sl, sl, #1
   340c4:	add	r4, r3
   340c6:	ldrd	r3, r2, [r8, #16]
   340ca:	adds	r3, #1
   340cc:	adc.w	r2, r2, #0
   340d0:	strd	r3, r2, [r5, #24]
   340d4:	b.n	3404a <btrfs_util_deleted_subvolumes_fd@@Base+0x6e>
   340d6:	mov.w	r9, #1
   340da:	b.n	34096 <btrfs_util_deleted_subvolumes_fd@@Base+0xba>
   340dc:	cmp	r0, #6
   340de:	beq.n	340ba <btrfs_util_deleted_subvolumes_fd@@Base+0xde>
   340e0:	ldr	r0, [r6, #0]
   340e2:	str	r3, [sp, #12]
   340e4:	blx	8620 <free@plt+0x4>
   340e8:	ldr	r3, [sp, #12]
   340ea:	movs	r2, #0
   340ec:	str	r2, [r6, #0]
   340ee:	str	r2, [r7, #0]
   340f0:	ldr	r0, [pc, #56]	; (3412c <btrfs_util_deleted_subvolumes_fd@@Base+0x150>)
   340f2:	add.w	r2, sp, #4096	; 0x1000
   340f6:	ldr	r1, [pc, #48]	; (34128 <btrfs_util_deleted_subvolumes_fd@@Base+0x14c>)
   340f8:	adds	r2, #20
   340fa:	add	r0, pc
   340fc:	ldr	r1, [r0, r1]
   340fe:	ldr	r0, [r1, #0]
   34100:	ldr	r1, [r2, #0]
   34102:	eors	r0, r1
   34104:	beq.n	34112 <btrfs_util_deleted_subvolumes_fd@@Base+0x136>
   34106:	blx	8708 <__stack_chk_fail@plt>
   3410a:	movs	r3, #12
   3410c:	b.n	340e0 <btrfs_util_deleted_subvolumes_fd@@Base+0x104>
   3410e:	movs	r3, #2
   34110:	b.n	340e0 <btrfs_util_deleted_subvolumes_fd@@Base+0x104>
   34112:	mov	r0, r3
   34114:	add.w	sp, sp, #4096	; 0x1000
   34118:	add	sp, #28
   3411a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3411e:	nop
   34120:	str	r4, [sp, #68]	; 0x44
   34122:	beq.n	34126 <btrfs_util_deleted_subvolumes_fd@@Base+0x14a>
   34124:	lsrs	r4, r2, #22
   34126:	movs	r3, r0
   34128:	lsls	r0, r5, #8
   3412a:	movs	r0, r0
   3412c:	lsrs	r6, r0, #18
   3412e:	movs	r3, r0

00034130 <btrfs_util_deleted_subvolumes@@Base>:
   34130:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   34132:	mov	r4, r1
   34134:	movs	r1, #0
   34136:	str	r2, [sp, #4]
   34138:	blx	88f8 <open@plt>
   3413c:	adds	r3, r0, #1
   3413e:	mov	r6, r0
   34140:	beq.n	34162 <btrfs_util_deleted_subvolumes@@Base+0x32>
   34142:	mov	r1, r4
   34144:	ldr	r2, [sp, #4]
   34146:	bl	33fdc <btrfs_util_deleted_subvolumes_fd@@Base>
   3414a:	mov	r4, r0
   3414c:	blx	897c <__errno_location@plt>
   34150:	ldr	r7, [r0, #0]
   34152:	mov	r5, r0
   34154:	mov	r0, r6
   34156:	blx	8b9c <close@plt>
   3415a:	str	r7, [r5, #0]
   3415c:	mov	r0, r4
   3415e:	add	sp, #12
   34160:	pop	{r4, r5, r6, r7, pc}
   34162:	movs	r4, #7
   34164:	b.n	3415c <btrfs_util_deleted_subvolumes@@Base+0x2c>
   34166:	nop
   34168:	push	{r3, lr}
   3416a:	mul.w	r3, r2, r1
   3416e:	cmp	r1, r3
   34170:	bhi.n	34180 <btrfs_util_deleted_subvolumes@@Base+0x50>
   34172:	cmp	r2, r3
   34174:	bhi.n	34180 <btrfs_util_deleted_subvolumes@@Base+0x50>
   34176:	mov	r1, r3
   34178:	ldmia.w	sp!, {r3, lr}
   3417c:	b.w	8720 <realloc@plt>
   34180:	blx	897c <__errno_location@plt>
   34184:	movs	r3, #12
   34186:	str	r3, [r0, #0]
   34188:	movs	r0, #0
   3418a:	pop	{r3, pc}

0003418c <hash_crc32c@@Base>:
   3418c:	push	{r4, lr}
   3418e:	mov	r4, r2
   34190:	mov	r2, r1
   34192:	mov	r1, r0
   34194:	mov.w	r0, #4294967295	; 0xffffffff
   34198:	bl	17afa <crc32c_le@@Base>
   3419c:	mvns	r0, r0
   3419e:	str	r0, [r4, #0]
   341a0:	movs	r0, #0
   341a2:	pop	{r4, pc}

000341a4 <hash_xxhash@@Base>:
   341a4:	push	{r0, r1, r2, r3, r4, lr}
   341a6:	mov	r4, r2
   341a8:	ldr	r2, [pc, #60]	; (341e8 <hash_xxhash@@Base+0x44>)
   341aa:	ldr	r3, [pc, #64]	; (341ec <hash_xxhash@@Base+0x48>)
   341ac:	add	r2, pc
   341ae:	ldr	r3, [r2, r3]
   341b0:	movs	r2, #0
   341b2:	ldr	r3, [r3, #0]
   341b4:	str	r3, [sp, #12]
   341b6:	mov.w	r3, #0
   341ba:	movs	r3, #0
   341bc:	bl	34b60 <XXH64@@Base>
   341c0:	ldr	r2, [pc, #44]	; (341f0 <hash_xxhash@@Base+0x4c>)
   341c2:	mov	r3, sp
   341c4:	add	r2, pc
   341c6:	strd	r0, r1, [sp]
   341ca:	ldmia	r3!, {r0, r1}
   341cc:	ldr	r3, [pc, #28]	; (341ec <hash_xxhash@@Base+0x48>)
   341ce:	str	r0, [r4, #0]
   341d0:	str	r1, [r4, #4]
   341d2:	ldr	r3, [r2, r3]
   341d4:	ldr	r2, [r3, #0]
   341d6:	ldr	r3, [sp, #12]
   341d8:	eors	r2, r3
   341da:	beq.n	341e0 <hash_xxhash@@Base+0x3c>
   341dc:	blx	8708 <__stack_chk_fail@plt>
   341e0:	movs	r0, #0
   341e2:	add	sp, #16
   341e4:	pop	{r4, pc}
   341e6:	nop
   341e8:	lsrs	r4, r2, #15
   341ea:	movs	r3, r0
   341ec:	lsls	r0, r5, #8
   341ee:	movs	r0, r0
   341f0:	lsrs	r4, r7, #14
   341f2:	movs	r3, r0

000341f4 <hash_sha256@@Base>:
   341f4:	push	{r4, r5, r6, r7, lr}
   341f6:	mov	r5, r2
   341f8:	ldr	r2, [pc, #72]	; (34244 <hash_sha256@@Base+0x50>)
   341fa:	sub	sp, #124	; 0x7c
   341fc:	ldr	r3, [pc, #72]	; (34248 <hash_sha256@@Base+0x54>)
   341fe:	mov	r7, r1
   34200:	add	r2, pc
   34202:	mov	r4, sp
   34204:	mov	r6, r0
   34206:	mov	r0, r4
   34208:	ldr	r3, [r2, r3]
   3420a:	ldr	r3, [r3, #0]
   3420c:	str	r3, [sp, #116]	; 0x74
   3420e:	mov.w	r3, #0
   34212:	bl	3540e <SHA256Reset@@Base>
   34216:	mov	r2, r7
   34218:	mov	r1, r6
   3421a:	mov	r0, r4
   3421c:	bl	3544c <SHA256Input@@Base>
   34220:	mov	r1, r5
   34222:	mov	r0, r4
   34224:	bl	35544 <SHA256Result@@Base>
   34228:	ldr	r2, [pc, #32]	; (3424c <hash_sha256@@Base+0x58>)
   3422a:	ldr	r3, [pc, #28]	; (34248 <hash_sha256@@Base+0x54>)
   3422c:	add	r2, pc
   3422e:	ldr	r3, [r2, r3]
   34230:	ldr	r2, [r3, #0]
   34232:	ldr	r3, [sp, #116]	; 0x74
   34234:	eors	r2, r3
   34236:	beq.n	3423c <hash_sha256@@Base+0x48>
   34238:	blx	8708 <__stack_chk_fail@plt>
   3423c:	movs	r0, #0
   3423e:	add	sp, #124	; 0x7c
   34240:	pop	{r4, r5, r6, r7, pc}
   34242:	nop
   34244:	lsrs	r0, r0, #14
   34246:	movs	r3, r0
   34248:	lsls	r0, r5, #8
   3424a:	movs	r0, r0
   3424c:	lsrs	r4, r2, #13
   3424e:	movs	r3, r0

00034250 <hash_blake2b@@Base>:
   34250:	push	{r4, r5, r6, r7, lr}
   34252:	mov	r5, r2
   34254:	ldr	r2, [pc, #76]	; (342a4 <hash_blake2b@@Base+0x54>)
   34256:	sub	sp, #252	; 0xfc
   34258:	ldr	r3, [pc, #76]	; (342a8 <hash_blake2b@@Base+0x58>)
   3425a:	mov	r6, r0
   3425c:	add	r2, pc
   3425e:	mov	r4, sp
   34260:	mov	r7, r1
   34262:	mov	r0, r4
   34264:	ldr	r3, [r2, r3]
   34266:	movs	r1, #32
   34268:	ldr	r3, [r3, #0]
   3426a:	str	r3, [sp, #244]	; 0xf4
   3426c:	mov.w	r3, #0
   34270:	bl	38ffc <blake2b_init@@Base>
   34274:	mov	r2, r7
   34276:	mov	r1, r6
   34278:	mov	r0, r4
   3427a:	bl	39088 <blake2b_update@@Base>
   3427e:	movs	r2, #32
   34280:	mov	r1, r5
   34282:	mov	r0, r4
   34284:	bl	39238 <blake2b_final@@Base>
   34288:	ldr	r2, [pc, #32]	; (342ac <hash_blake2b@@Base+0x5c>)
   3428a:	ldr	r3, [pc, #28]	; (342a8 <hash_blake2b@@Base+0x58>)
   3428c:	add	r2, pc
   3428e:	ldr	r3, [r2, r3]
   34290:	ldr	r2, [r3, #0]
   34292:	ldr	r3, [sp, #244]	; 0xf4
   34294:	eors	r2, r3
   34296:	beq.n	3429c <hash_blake2b@@Base+0x4c>
   34298:	blx	8708 <__stack_chk_fail@plt>
   3429c:	movs	r0, #0
   3429e:	add	sp, #252	; 0xfc
   342a0:	pop	{r4, r5, r6, r7, pc}
   342a2:	nop
   342a4:	lsrs	r4, r4, #12
   342a6:	movs	r3, r0
   342a8:	lsls	r0, r5, #8
   342aa:	movs	r0, r0
   342ac:	lsrs	r4, r6, #11
   342ae:	movs	r3, r0
   342b0:	push	{r4, r5, r6, r7, lr}
   342b2:	and.w	r2, r2, #15
   342b6:	ldr	r6, [pc, #96]	; (34318 <hash_blake2b@@Base+0xc8>)
   342b8:	adds	r5, r1, r2
   342ba:	ldr	r7, [pc, #96]	; (3431c <hash_blake2b@@Base+0xcc>)
   342bc:	mov	r4, r2
   342be:	cmp	r4, #3
   342c0:	sub.w	r3, r5, r4
   342c4:	bhi.n	342f6 <hash_blake2b@@Base+0xa6>
   342c6:	and.w	r4, r2, #12
   342ca:	lsrs	r3, r2, #2
   342cc:	add	r1, r4
   342ce:	mvn.w	r4, #3
   342d2:	mla	r2, r4, r3, r2
   342d6:	ldr	r5, [pc, #72]	; (34320 <hash_blake2b@@Base+0xd0>)
   342d8:	ldr	r4, [pc, #72]	; (34324 <hash_blake2b@@Base+0xd4>)
   342da:	add	r2, r1
   342dc:	cmp	r1, r2
   342de:	bne.n	34306 <hash_blake2b@@Base+0xb6>
   342e0:	ldr	r3, [pc, #68]	; (34328 <hash_blake2b@@Base+0xd8>)
   342e2:	eor.w	r0, r0, r0, lsr #15
   342e6:	muls	r0, r3
   342e8:	ldr	r3, [pc, #44]	; (34318 <hash_blake2b@@Base+0xc8>)
   342ea:	eor.w	r0, r0, r0, lsr #13
   342ee:	muls	r0, r3
   342f0:	eor.w	r0, r0, r0, lsr #16
   342f4:	pop	{r4, r5, r6, r7, pc}
   342f6:	ldr	r3, [r3, #0]
   342f8:	subs	r4, #4
   342fa:	mla	r0, r6, r3, r0
   342fe:	mov.w	r0, r0, ror #15
   34302:	muls	r0, r7
   34304:	b.n	342be <hash_blake2b@@Base+0x6e>
   34306:	ldrb.w	r3, [r1], #1
   3430a:	mla	r0, r4, r3, r0
   3430e:	mov.w	r0, r0, ror #21
   34312:	muls	r0, r5
   34314:	b.n	342dc <hash_blake2b@@Base+0x8c>
   34316:	nop
   34318:	add	r6, sp, #244	; 0xf4
   3431a:	stmia	r2!, {r1, r4, r5, r7}
   3431c:			; <UNDEFINED> instruction: 0xeb2f27d4
   34320:	ldrb	r1, [r6, #6]
   34322:	ldr	r6, [sp, #220]	; 0xdc
   34324:	str	r1, [r6, #120]	; 0x78
   34326:	asrs	r6, r2, #25
   34328:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   3432a:	strh	r3, [r5, #46]	; 0x2e
   3432c:	cmp	r1, #15
   3432e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   34332:	mov	r6, r1
   34334:	bls.n	343c8 <hash_blake2b@@Base+0x178>
   34336:	ldr	r4, [pc, #152]	; (343d0 <hash_blake2b@@Base+0x180>)
   34338:	sub.w	lr, r1, #15
   3433c:	ldr	r7, [pc, #148]	; (343d4 <hash_blake2b@@Base+0x184>)
   3433e:	add	lr, r0
   34340:	ldr.w	ip, [pc, #152]	; 343dc <hash_blake2b@@Base+0x18c>
   34344:	add	r4, r2
   34346:	ldr.w	r9, [pc, #152]	; 343e0 <hash_blake2b@@Base+0x190>
   3434a:	adds	r5, r2, r7
   3434c:	add	ip, r2
   3434e:	mov	r1, r0
   34350:	ldr.w	r8, [r1]
   34354:	adds	r1, #16
   34356:	mla	r4, r7, r8, r4
   3435a:	ldr.w	r8, [r1, #-12]
   3435e:	mla	r5, r7, r8, r5
   34362:	ldr.w	r8, [r1, #-8]
   34366:	mov.w	r4, r4, ror #19
   3436a:	mla	r2, r7, r8, r2
   3436e:	ldr.w	r8, [r1, #-4]
   34372:	mov.w	r5, r5, ror #19
   34376:	cmp	lr, r1
   34378:	mul.w	r4, r9, r4
   3437c:	mla	ip, r7, r8, ip
   34380:	mov.w	r2, r2, ror #19
   34384:	mul.w	r5, r9, r5
   34388:	mul.w	r2, r9, r2
   3438c:	mov.w	ip, ip, ror #19
   34390:	mul.w	ip, r9, ip
   34394:	bhi.n	34350 <hash_blake2b@@Base+0x100>
   34396:	sub.w	r1, r6, #16
   3439a:	mov.w	r5, r5, ror #25
   3439e:	bic.w	r1, r1, #15
   343a2:	adds	r7, r0, #1
   343a4:	adds	r1, #16
   343a6:	add.w	r5, r5, r4, ror #31
   343aa:	cmp	lr, r7
   343ac:	it	cc
   343ae:	movcc	r1, #16
   343b0:	add.w	r4, r5, r2, ror #20
   343b4:	add	r0, r1
   343b6:	add.w	r4, r4, ip, ror #14
   343ba:	and.w	r2, r6, #15
   343be:	mov	r1, r0
   343c0:	adds	r0, r4, r6
   343c2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   343c6:	b.n	342b0 <hash_blake2b@@Base+0x60>
   343c8:	ldr	r4, [pc, #12]	; (343d8 <hash_blake2b@@Base+0x188>)
   343ca:	add	r4, r2
   343cc:	b.n	343ba <hash_blake2b@@Base+0x16a>
   343ce:	nop
   343d0:	add	r0, r5
   343d2:	movs	r4, #35	; 0x23
   343d4:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   343d6:	strh	r3, [r5, #46]	; 0x2e
   343d8:	str	r1, [r6, #120]	; 0x78
   343da:	asrs	r6, r2, #25
   343dc:	strh	r7, [r1, #50]	; 0x32
   343de:	str	r0, [r1, #28]
   343e0:	ldrb	r1, [r6, #6]
   343e2:	ldr	r6, [sp, #220]	; 0xdc
   343e4:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   343e8:	and.w	r3, r3, #31
   343ec:	ldr.w	r8, [pc, #368]	; 34560 <hash_blake2b@@Base+0x310>
   343f0:	add.w	sl, r2, r3
   343f4:	ldr.w	lr, [pc, #352]	; 34558 <hash_blake2b@@Base+0x308>
   343f8:	mov	ip, r3
   343fa:	ldr.w	r9, [pc, #352]	; 3455c <hash_blake2b@@Base+0x30c>
   343fe:	ldr.w	fp, [pc, #376]	; 34578 <hash_blake2b@@Base+0x328>
   34402:	strd	r0, r1, [sp]
   34406:	cmp.w	ip, #7
   3440a:	sub.w	r1, sl, ip
   3440e:	bhi.n	344bc <hash_blake2b@@Base+0x26c>
   34410:	and.w	r0, r3, #24
   34414:	lsrs	r1, r3, #3
   34416:	add	r2, r0
   34418:	mvn.w	r0, #7
   3441c:	mla	r3, r0, r1, r3
   34420:	cmp	r3, #3
   34422:	bls.n	3446a <hash_blake2b@@Base+0x21a>
   34424:	ldr.w	r6, [r2], #4
   34428:	subs	r3, #4
   3442a:	ldr	r0, [pc, #300]	; (34558 <hash_blake2b@@Base+0x308>)
   3442c:	ldr	r7, [pc, #300]	; (3455c <hash_blake2b@@Base+0x30c>)
   3442e:	ldr	r1, [sp, #0]
   34430:	umull	r4, r5, r6, r0
   34434:	eor.w	r0, r4, r1
   34438:	ldr	r1, [sp, #4]
   3443a:	mla	r5, r7, r6, r5
   3443e:	ldr	r7, [pc, #288]	; (34560 <hash_blake2b@@Base+0x310>)
   34440:	eors	r1, r5
   34442:	lsls	r6, r1, #23
   34444:	orr.w	r6, r6, r0, lsr #9
   34448:	lsls	r0, r0, #23
   3444a:	orr.w	r0, r0, r1, lsr #9
   3444e:	ldr	r1, [pc, #276]	; (34564 <hash_blake2b@@Base+0x314>)
   34450:	umull	r4, r5, r0, r7
   34454:	muls	r1, r0
   34456:	ldr	r0, [pc, #272]	; (34568 <hash_blake2b@@Base+0x318>)
   34458:	mla	r6, r7, r6, r1
   3445c:	add	r5, r6
   3445e:	ldr	r6, [pc, #268]	; (3456c <hash_blake2b@@Base+0x31c>)
   34460:	adds	r1, r4, r6
   34462:	str	r1, [sp, #0]
   34464:	adc.w	r1, r5, r0
   34468:	str	r1, [sp, #4]
   3446a:	ldr	r7, [pc, #260]	; (34570 <hash_blake2b@@Base+0x320>)
   3446c:	add	r3, r2
   3446e:	ldr.w	ip, [pc, #268]	; 3457c <hash_blake2b@@Base+0x32c>
   34472:	ldr	r6, [pc, #228]	; (34558 <hash_blake2b@@Base+0x308>)
   34474:	ldr.w	lr, [pc, #228]	; 3455c <hash_blake2b@@Base+0x30c>
   34478:	cmp	r2, r3
   3447a:	bne.n	3451e <hash_blake2b@@Base+0x2ce>
   3447c:	ldrd	r3, r2, [sp]
   34480:	ldr	r1, [pc, #224]	; (34564 <hash_blake2b@@Base+0x314>)
   34482:	ldr	r0, [sp, #4]
   34484:	eor.w	r2, r3, r2, lsr #1
   34488:	ldr	r3, [pc, #212]	; (34560 <hash_blake2b@@Base+0x310>)
   3448a:	muls	r1, r2
   3448c:	mla	r1, r3, r0, r1
   34490:	umull	r2, r3, r2, r3
   34494:	add	r3, r1
   34496:	eor.w	r1, r3, r3, lsr #29
   3449a:	lsrs	r0, r2, #29
   3449c:	orr.w	r0, r0, r3, lsl #3
   344a0:	ldr	r3, [pc, #196]	; (34568 <hash_blake2b@@Base+0x318>)
   344a2:	eors	r0, r2
   344a4:	ldr	r2, [pc, #196]	; (3456c <hash_blake2b@@Base+0x31c>)
   344a6:	muls	r3, r0
   344a8:	umull	r4, r5, r0, r2
   344ac:	mla	r3, r2, r1, r3
   344b0:	adds	r1, r5, r3
   344b2:	eor.w	r0, r4, r1
   344b6:	add	sp, #12
   344b8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   344bc:	ldr	r0, [r1, #0]
   344be:	sub.w	ip, ip, #8
   344c2:	ldr	r6, [r1, #4]
   344c4:	ldr	r1, [pc, #156]	; (34564 <hash_blake2b@@Base+0x314>)
   344c6:	muls	r1, r0
   344c8:	mla	r6, r8, r6, r1
   344cc:	umull	r0, r1, r0, r8
   344d0:	add	r1, r6
   344d2:	lsls	r7, r1, #31
   344d4:	lsls	r6, r0, #31
   344d6:	orr.w	r7, r7, r0, lsr #1
   344da:	orr.w	r6, r6, r1, lsr #1
   344de:	mul.w	r1, r9, r6
   344e2:	mla	r1, lr, r7, r1
   344e6:	umull	r6, r7, r6, lr
   344ea:	add	r7, r1
   344ec:	ldr	r1, [sp, #0]
   344ee:	eor.w	r0, r6, r1
   344f2:	ldr	r1, [sp, #4]
   344f4:	eors	r1, r7
   344f6:	lsls	r6, r1, #27
   344f8:	orr.w	r6, r6, r0, lsr #5
   344fc:	lsls	r0, r0, #27
   344fe:	orr.w	r0, r0, r1, lsr #5
   34502:	mul.w	r1, r9, r0
   34506:	mla	r6, lr, r6, r1
   3450a:	umull	r0, r1, r0, lr
   3450e:	adds.w	r4, r0, fp
   34512:	str	r4, [sp, #0]
   34514:	ldr	r4, [pc, #92]	; (34574 <hash_blake2b@@Base+0x324>)
   34516:	add	r1, r6
   34518:	adcs	r1, r4
   3451a:	str	r1, [sp, #4]
   3451c:	b.n	34406 <hash_blake2b@@Base+0x1b6>
   3451e:	ldrb.w	r8, [r2], #1
   34522:	ldr	r5, [sp, #4]
   34524:	ldr	r4, [sp, #0]
   34526:	umull	r0, r1, r8, r7
   3452a:	eors	r4, r0
   3452c:	mla	r1, ip, r8, r1
   34530:	eors	r5, r1
   34532:	lsls	r1, r5, #11
   34534:	orr.w	r1, r1, r4, lsr #21
   34538:	lsls	r4, r4, #11
   3453a:	orr.w	r4, r4, r5, lsr #21
   3453e:	mul.w	r0, lr, r4
   34542:	umull	r4, r5, r4, r6
   34546:	mla	r1, r6, r1, r0
   3454a:	strd	r4, r5, [sp]
   3454e:	ldr	r0, [sp, #4]
   34550:	add	r0, r1
   34552:	str	r0, [sp, #4]
   34554:	b.n	34478 <hash_blake2b@@Base+0x228>
   34556:	nop
   34558:	ldmia	r2, {r0, r1, r2, r7}
   3455a:	strh	r3, [r5, #46]	; 0x2e
   3455c:	ldrb	r1, [r6, #6]
   3455e:	ldr	r6, [sp, #220]	; 0xdc
   34560:	adc.w	r7, pc, r4, lsr #11
   34564:	add	r6, sp, #244	; 0xf4
   34566:	stmia	r2!, {r1, r4, r5, r7}
   34568:	str	r1, [r6, #120]	; 0x78
   3456a:	asrs	r6, r2, #25
   3456c:	ldrb	r1, [r7, #7]
   3456e:	ldr	r6, [sp, #220]	; 0xdc
   34570:	str	r5, [r0, #124]	; 0x7c
   34572:	asrs	r6, r2, #25
   34574:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   34576:	strh	r3, [r5, #46]	; 0x2e
   34578:	add	r6, sp, #396	; 0x18c
   3457a:	stmia	r2!, {r1, r4, r5, r7}
   3457c:			; <UNDEFINED> instruction: 0xeb2f27d4
   34580:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34584:	sub	sp, #84	; 0x54
   34586:	mov	fp, r3
   34588:	cmp	r1, #31
   3458a:	ldr	r3, [sp, #120]	; 0x78
   3458c:	mov	sl, r2
   3458e:	str	r0, [sp, #40]	; 0x28
   34590:	str	r1, [sp, #52]	; 0x34
   34592:	str	r3, [sp, #76]	; 0x4c
   34594:	bls.w	34904 <hash_blake2b@@Base+0x6b4>
   34598:	sub.w	r3, r1, #32
   3459c:	str	r3, [sp, #56]	; 0x38
   3459e:	ldr	r3, [pc, #820]	; (348d4 <hash_blake2b@@Base+0x684>)
   345a0:	mov	r1, r0
   345a2:	ldr	r2, [sp, #56]	; 0x38
   345a4:	adds.w	r3, sl, r3
   345a8:	str	r3, [sp, #0]
   345aa:	ldr	r3, [pc, #812]	; (348d8 <hash_blake2b@@Base+0x688>)
   345ac:	add.w	r9, r0, r2
   345b0:	ldr	r5, [pc, #808]	; (348dc <hash_blake2b@@Base+0x68c>)
   345b2:	adc.w	r3, fp, r3
   345b6:	str	r3, [sp, #4]
   345b8:	ldr	r3, [pc, #800]	; (348dc <hash_blake2b@@Base+0x68c>)
   345ba:	ldr.w	ip, [pc, #804]	; 348e0 <hash_blake2b@@Base+0x690>
   345be:	adds.w	r3, sl, r3
   345c2:	str	r3, [sp, #8]
   345c4:	ldr	r3, [pc, #792]	; (348e0 <hash_blake2b@@Base+0x690>)
   345c6:	ldr	r2, [pc, #796]	; (348e4 <hash_blake2b@@Base+0x694>)
   345c8:	adc.w	r3, fp, r3
   345cc:	str	r3, [sp, #12]
   345ce:	ldr	r3, [pc, #792]	; (348e8 <hash_blake2b@@Base+0x698>)
   345d0:	adds.w	r3, sl, r3
   345d4:	str	r3, [sp, #16]
   345d6:	ldr	r3, [pc, #788]	; (348ec <hash_blake2b@@Base+0x69c>)
   345d8:	adc.w	r3, fp, r3
   345dc:	str	r3, [sp, #20]
   345de:	ldr	r3, [pc, #784]	; (348f0 <hash_blake2b@@Base+0x6a0>)
   345e0:	ldr	r6, [r1, #0]
   345e2:	adds	r1, #32
   345e4:	ldr.w	r4, [r1, #-28]
   345e8:	ldr.w	lr, [r1, #-12]
   345ec:	mul.w	r0, ip, r6
   345f0:	mla	r0, r5, r4, r0
   345f4:	ldr	r4, [sp, #4]
   345f6:	umull	r6, r7, r6, r5
   345fa:	add	r7, r0
   345fc:	ldr	r0, [sp, #0]
   345fe:	adds	r0, r6, r0
   34600:	adc.w	r4, r7, r4
   34604:	mov.w	r8, r4, lsl #31
   34608:	orr.w	r6, r8, r0, lsr #1
   3460c:	lsls	r0, r0, #31
   3460e:	orr.w	r0, r0, r4, lsr #1
   34612:	str	r0, [sp, #48]	; 0x30
   34614:	str	r6, [sp, #72]	; 0x48
   34616:	mul.w	r4, r2, r0
   3461a:	ldr	r0, [sp, #48]	; 0x30
   3461c:	mla	r4, r3, r6, r4
   34620:	umull	r6, r7, r0, r3
   34624:	strd	r6, r7, [sp]
   34628:	ldr.w	r6, [r1, #-24]
   3462c:	ldr.w	r7, [r1, #-20]
   34630:	ldr	r0, [sp, #4]
   34632:	adds	r0, r4, r0
   34634:	str	r0, [sp, #4]
   34636:	mul.w	r4, ip, r6
   3463a:	ldr	r0, [sp, #8]
   3463c:	mla	r4, r5, r7, r4
   34640:	umull	r6, r7, r6, r5
   34644:	add	r7, r4
   34646:	adds	r4, r6, r0
   34648:	ldr	r0, [sp, #12]
   3464a:	adc.w	r0, r7, r0
   3464e:	lsls	r7, r0, #31
   34650:	mov	r6, r0
   34652:	orr.w	r0, r7, r4, lsr #1
   34656:	lsls	r4, r4, #31
   34658:	orr.w	r4, r4, r6, lsr #1
   3465c:	str	r0, [sp, #68]	; 0x44
   3465e:	umull	r7, r8, r4, r3
   34662:	mul.w	r6, r2, r4
   34666:	mla	r6, r3, r0, r6
   3466a:	strd	r7, r8, [sp, #8]
   3466e:	ldr	r0, [sp, #12]
   34670:	adds	r0, r6, r0
   34672:	ldr.w	r6, [r1, #-16]
   34676:	str	r0, [sp, #12]
   34678:	mul.w	r7, ip, r6
   3467c:	mla	lr, r5, lr, r7
   34680:	umull	r7, r8, r6, r5
   34684:	adds.w	r6, r7, sl
   34688:	add	r8, lr
   3468a:	adc.w	sl, r8, fp
   3468e:	ldr.w	lr, [r1, #-4]
   34692:	mov.w	r7, sl, lsl #31
   34696:	orr.w	r0, r7, r6, lsr #1
   3469a:	lsls	r6, r6, #31
   3469c:	str	r0, [sp, #60]	; 0x3c
   3469e:	orr.w	r0, r6, sl, lsr #1
   346a2:	str	r0, [sp, #44]	; 0x2c
   346a4:	mul.w	r6, r2, r0
   346a8:	ldr	r0, [sp, #60]	; 0x3c
   346aa:	mla	r6, r3, r0, r6
   346ae:	ldr	r0, [sp, #44]	; 0x2c
   346b0:	umull	sl, fp, r0, r3
   346b4:	add	fp, r6
   346b6:	ldr.w	r6, [r1, #-8]
   346ba:	mul.w	r7, ip, r6
   346be:	mla	lr, r5, lr, r7
   346c2:	umull	r6, r7, r6, r5
   346c6:	strd	r6, r7, [sp, #32]
   346ca:	ldr	r0, [sp, #36]	; 0x24
   346cc:	ldr	r6, [sp, #32]
   346ce:	add	r0, lr
   346d0:	str	r0, [sp, #36]	; 0x24
   346d2:	ldr	r0, [sp, #16]
   346d4:	ldr	r7, [sp, #20]
   346d6:	adds	r6, r6, r0
   346d8:	ldr	r0, [sp, #36]	; 0x24
   346da:	adc.w	r7, r0, r7
   346de:	cmp	r9, r1
   346e0:	mov.w	lr, r7, lsl #31
   346e4:	orr.w	r0, lr, r6, lsr #1
   346e8:	mov.w	r6, r6, lsl #31
   346ec:	str	r0, [sp, #64]	; 0x40
   346ee:	orr.w	r0, r6, r7, lsr #1
   346f2:	str	r0, [sp, #32]
   346f4:	mul.w	r6, r2, r0
   346f8:	ldr	r0, [sp, #64]	; 0x40
   346fa:	mla	r6, r3, r0, r6
   346fe:	ldr	r0, [sp, #32]
   34700:	umull	r7, r8, r0, r3
   34704:	strd	r7, r8, [sp, #16]
   34708:	ldr	r0, [sp, #20]
   3470a:	add	r0, r6
   3470c:	str	r0, [sp, #20]
   3470e:	bcs.w	345e0 <hash_blake2b@@Base+0x390>
   34712:	ldr	r1, [sp, #56]	; 0x38
   34714:	add.w	r5, r9, #1
   34718:	ldr	r0, [sp, #40]	; 0x28
   3471a:	bic.w	r1, r1, #31
   3471e:	ldr.w	r9, [pc, #468]	; 348f4 <hash_blake2b@@Base+0x6a4>
   34722:	adds	r6, r0, #1
   34724:	adds	r1, #32
   34726:	cmp	r5, r6
   34728:	it	cc
   3472a:	movcc	r1, #32
   3472c:	ldr.w	lr, [pc, #456]	; 348f8 <hash_blake2b@@Base+0x6a8>
   34730:	adds	r1, r0, r1
   34732:	str	r1, [sp, #40]	; 0x28
   34734:	ldr	r1, [sp, #48]	; 0x30
   34736:	ldr	r0, [sp, #72]	; 0x48
   34738:	mul.w	r1, r9, r1
   3473c:	mla	r8, lr, r0, r1
   34740:	ldr	r1, [sp, #48]	; 0x30
   34742:	umull	r6, r7, r1, lr
   34746:	add	r7, r8
   34748:	lsls	r5, r7, #31
   3474a:	orr.w	r1, r5, r6, lsr #1
   3474e:	str	r1, [sp, #48]	; 0x30
   34750:	ldr	r1, [sp, #4]
   34752:	lsls	r0, r6, #31
   34754:	ldr	r6, [sp, #0]
   34756:	orr.w	r0, r0, r7, lsr #1
   3475a:	ldr	r5, [sp, #12]
   3475c:	lsls	r1, r1, #1
   3475e:	orr.w	r7, r1, r6, lsr #31
   34762:	ldr	r1, [sp, #4]
   34764:	lsls	r6, r6, #1
   34766:	orr.w	r6, r6, r1, lsr #31
   3476a:	ldr	r1, [sp, #12]
   3476c:	mov.w	r8, r1, lsl #7
   34770:	ldr	r1, [sp, #8]
   34772:	orr.w	ip, r8, r1, lsr #25
   34776:	lsls	r1, r1, #7
   34778:	orr.w	r1, r1, r5, lsr #25
   3477c:	ldr	r5, [sp, #20]
   3477e:	adds	r1, r6, r1
   34780:	mov.w	r6, sl, lsl #12
   34784:	orr.w	r6, r6, fp, lsr #20
   34788:	adc.w	r7, r7, ip
   3478c:	adds	r6, r1, r6
   3478e:	ldr	r1, [sp, #20]
   34790:	mov.w	ip, fp, lsl #12
   34794:	orr.w	r8, ip, sl, lsr #20
   34798:	adc.w	r7, r7, r8
   3479c:	mov.w	r8, r1, lsl #18
   347a0:	ldr	r1, [sp, #16]
   347a2:	orr.w	ip, r8, r1, lsr #14
   347a6:	lsls	r1, r1, #18
   347a8:	orr.w	r1, r1, r5, lsr #14
   347ac:	ldr	r5, [sp, #48]	; 0x30
   347ae:	adds	r6, r6, r1
   347b0:	ldr.w	r8, [pc, #328]	; 348fc <hash_blake2b@@Base+0x6ac>
   347b4:	mul.w	r1, r2, r0
   347b8:	adc.w	r7, r7, ip
   347bc:	mla	r5, r3, r5, r1
   347c0:	umull	r0, r1, r0, r3
   347c4:	add	r1, r5
   347c6:	eors	r6, r0
   347c8:	ldr	r0, [sp, #68]	; 0x44
   347ca:	eors	r7, r1
   347cc:	mul.w	r1, r9, r4
   347d0:	umull	r4, r5, r4, lr
   347d4:	mla	r1, lr, r0, r1
   347d8:	mul.w	ip, r2, r6
   347dc:	add	r5, r1
   347de:	lsls	r0, r4, #31
   347e0:	mla	ip, r3, r7, ip
   347e4:	orr.w	r0, r0, r5, lsr #1
   347e8:	lsls	r1, r5, #31
   347ea:	umull	r6, r7, r6, r3
   347ee:	orr.w	r1, r1, r4, lsr #1
   347f2:	mul.w	r4, r2, r0
   347f6:	add	r7, ip
   347f8:	mla	r4, r3, r1, r4
   347fc:	ldr.w	ip, [pc, #256]	; 34900 <hash_blake2b@@Base+0x6b0>
   34800:	umull	r0, r1, r0, r3
   34804:	add	r1, r4
   34806:	adds.w	r4, r6, ip
   3480a:	adc.w	r5, r7, r8
   3480e:	eors	r4, r0
   34810:	eors	r1, r5
   34812:	mul.w	r0, r2, r4
   34816:	mla	r1, r3, r1, r0
   3481a:	umull	r4, r5, r4, r3
   3481e:	add	r5, r1
   34820:	ldr	r1, [sp, #44]	; 0x2c
   34822:	mul.w	r7, r9, r1
   34826:	ldr	r1, [sp, #60]	; 0x3c
   34828:	mla	r7, lr, r1, r7
   3482c:	ldr	r1, [sp, #44]	; 0x2c
   3482e:	umull	r0, r1, r1, lr
   34832:	add	r1, r7
   34834:	lsls	r7, r1, #31
   34836:	lsls	r6, r0, #31
   34838:	orr.w	r7, r7, r0, lsr #1
   3483c:	orr.w	r6, r6, r1, lsr #1
   34840:	adds.w	r0, r4, ip
   34844:	adc.w	r4, r5, r8
   34848:	mul.w	r1, r2, r6
   3484c:	mla	r1, r3, r7, r1
   34850:	umull	r6, r7, r6, r3
   34854:	eors	r0, r6
   34856:	add	r7, r1
   34858:	eors	r4, r7
   3485a:	mul.w	r1, r2, r0
   3485e:	mla	r4, r3, r4, r1
   34862:	ldr	r1, [sp, #32]
   34864:	umull	sl, fp, r0, r3
   34868:	mul.w	r9, r9, r1
   3486c:	ldr	r1, [sp, #64]	; 0x40
   3486e:	add	fp, r4
   34870:	mla	r9, lr, r1, r9
   34874:	ldr	r1, [sp, #32]
   34876:	umull	r0, r1, r1, lr
   3487a:	add	r1, r9
   3487c:	lsls	r6, r1, #31
   3487e:	lsls	r4, r0, #31
   34880:	orr.w	r6, r6, r0, lsr #1
   34884:	orr.w	r4, r4, r1, lsr #1
   34888:	adds.w	r0, sl, ip
   3488c:	adc.w	r1, fp, r8
   34890:	mul.w	r5, r2, r4
   34894:	mla	r6, r3, r6, r5
   34898:	umull	r4, r5, r4, r3
   3489c:	eors	r0, r4
   3489e:	add	r5, r6
   348a0:	eors	r1, r5
   348a2:	muls	r2, r0
   348a4:	mla	r2, r3, r1, r2
   348a8:	umull	r0, r1, r0, r3
   348ac:	adds.w	r3, r0, ip
   348b0:	add	r1, r2
   348b2:	str	r3, [sp, #24]
   348b4:	adc.w	r3, r1, r8
   348b8:	str	r3, [sp, #28]
   348ba:	ldr	r3, [sp, #76]	; 0x4c
   348bc:	ldrd	r0, r1, [sp, #24]
   348c0:	ldr	r2, [sp, #40]	; 0x28
   348c2:	str	r3, [sp, #120]	; 0x78
   348c4:	ldr	r3, [sp, #52]	; 0x34
   348c6:	adds	r0, r0, r3
   348c8:	adc.w	r1, r1, #0
   348cc:	add	sp, #84	; 0x54
   348ce:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   348d2:	b.n	343e4 <hash_blake2b@@Base+0x194>
   348d4:	push	{r1, r2, r4, r6, r7, lr}
   348d6:	add	r5, sp, #768	; 0x300
   348d8:	movs	r7, #238	; 0xee
   348da:	str	r2, [r5, #12]
   348dc:	adc.w	r7, pc, r4, lsr #11
   348e0:	add	r6, sp, #244	; 0xf4
   348e2:	stmia	r2!, {r1, r4, r5, r7}
   348e4:	ldrb	r1, [r6, #6]
   348e6:	ldr	r6, [sp, #220]	; 0xdc
   348e8:	adds	r5, #121	; 0x79
   348ea:	ldrb	r4, [r2, #8]
   348ec:	strh	r6, [r1, #50]	; 0x32
   348ee:	str	r0, [r1, #28]
   348f0:	ldmia	r2, {r0, r1, r2, r7}
   348f2:	strh	r3, [r5, #46]	; 0x2e
   348f4:	ldrh	r1, [r0, r4]
   348f6:	udf	#243	; 0xf3
   348f8:	ldr	r1, [r5, #72]	; 0x48
   348fa:	lsrs	r1, r7, #29
   348fc:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   348fe:	strh	r3, [r5, #46]	; 0x2e
   34900:	add	r6, sp, #396	; 0x18c
   34902:	stmia	r2!, {r1, r4, r5, r7}
   34904:	ldr	r3, [pc, #12]	; (34914 <hash_blake2b@@Base+0x6c4>)
   34906:	adds	r3, r2, r3
   34908:	str	r3, [sp, #24]
   3490a:	ldr	r3, [pc, #12]	; (34918 <hash_blake2b@@Base+0x6c8>)
   3490c:	adc.w	r3, fp, r3
   34910:	b.n	348b8 <hash_blake2b@@Base+0x668>
   34912:	nop
   34914:	str	r5, [r0, #124]	; 0x7c
   34916:	asrs	r6, r2, #25
   34918:			; <UNDEFINED> instruction: 0xeb2f27d4
   3491c:	b.w	8668 <memcpy@plt>

00034920 <XXH_versionNumber@@Base>:
   34920:	movw	r0, #701	; 0x2bd
   34924:	bx	lr

00034926 <XXH32@@Base>:
   34926:	ands.w	r3, r0, #3
   3492a:	it	ne
   3492c:	movne	r3, #1
   3492e:	b.n	3432c <hash_blake2b@@Base+0xdc>

00034930 <XXH32_createState@@Base>:
   34930:	movs	r0, #48	; 0x30
   34932:	b.w	886c <malloc@plt>

00034936 <XXH32_freeState@@Base>:
   34936:	push	{r3, lr}
   34938:	blx	8620 <free@plt+0x4>
   3493c:	movs	r0, #0
   3493e:	pop	{r3, pc}

00034940 <XXH32_copyState@@Base>:
   34940:	add.w	r3, r1, #48	; 0x30
   34944:	ldr.w	r2, [r1], #4
   34948:	cmp	r1, r3
   3494a:	str.w	r2, [r0], #4
   3494e:	bne.n	34944 <XXH32_copyState@@Base+0x4>
   34950:	bx	lr

00034952 <XXH32_reset@@Base>:
   34952:	ldr	r2, [pc, #124]	; (349d0 <XXH32_reset@@Base+0x7e>)
   34954:	ldr	r3, [pc, #124]	; (349d4 <XXH32_reset@@Base+0x82>)
   34956:	add	r2, pc
   34958:	push	{r4, r5, lr}
   3495a:	sub	sp, #60	; 0x3c
   3495c:	ldr	r3, [r2, r3]
   3495e:	mov	r5, r1
   34960:	mov	r4, r0
   34962:	movs	r2, #48	; 0x30
   34964:	ldr	r3, [r3, #0]
   34966:	str	r3, [sp, #52]	; 0x34
   34968:	mov.w	r3, #0
   3496c:	add	r3, sp, #4
   3496e:	movs	r1, #0
   34970:	mov	r0, r3
   34972:	blx	89bc <memset@plt+0x4>
   34976:	ldr	r2, [pc, #76]	; (349c4 <XXH32_reset@@Base+0x72>)
   34978:	mov	r3, r4
   3497a:	add	r2, r5
   3497c:	str	r2, [sp, #12]
   3497e:	ldr	r2, [pc, #72]	; (349c8 <XXH32_reset@@Base+0x76>)
   34980:	add	r2, r5
   34982:	strd	r2, r5, [sp, #16]
   34986:	ldr	r2, [pc, #68]	; (349cc <XXH32_reset@@Base+0x7a>)
   34988:	add	r2, r5
   3498a:	add	r5, sp, #44	; 0x2c
   3498c:	str	r2, [sp, #24]
   3498e:	mov	r2, r0
   34990:	mov	r4, r2
   34992:	adds	r3, #8
   34994:	ldmia	r4!, {r0, r1}
   34996:	cmp	r4, r5
   34998:	str.w	r0, [r3, #-8]
   3499c:	mov	r2, r4
   3499e:	str.w	r1, [r3, #-4]
   349a2:	bne.n	34990 <XXH32_reset@@Base+0x3e>
   349a4:	ldr	r0, [r4, #0]
   349a6:	ldr	r2, [pc, #48]	; (349d8 <XXH32_reset@@Base+0x86>)
   349a8:	str	r0, [r3, #0]
   349aa:	add	r2, pc
   349ac:	ldr	r3, [pc, #36]	; (349d4 <XXH32_reset@@Base+0x82>)
   349ae:	ldr	r3, [r2, r3]
   349b0:	ldr	r2, [r3, #0]
   349b2:	ldr	r3, [sp, #52]	; 0x34
   349b4:	eors	r2, r3
   349b6:	beq.n	349bc <XXH32_reset@@Base+0x6a>
   349b8:	blx	8708 <__stack_chk_fail@plt>
   349bc:	movs	r0, #0
   349be:	add	sp, #60	; 0x3c
   349c0:	pop	{r4, r5, pc}
   349c2:	nop
   349c4:	add	r0, r5
   349c6:	movs	r4, #35	; 0x23
   349c8:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   349ca:	strh	r3, [r5, #46]	; 0x2e
   349cc:	strh	r7, [r1, #50]	; 0x32
   349ce:	str	r0, [r1, #28]
   349d0:	lsls	r2, r5, #16
   349d2:	movs	r3, r0
   349d4:	lsls	r0, r5, #8
   349d6:	movs	r0, r0
   349d8:	lsls	r6, r2, #15
   349da:	movs	r3, r0

000349dc <XXH32_update@@Base>:
   349dc:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   349e0:	mov	r4, r0
   349e2:	mov	r7, r2
   349e4:	mov	r5, r1
   349e6:	cmp	r1, #0
   349e8:	beq.w	34b08 <XXH32_update@@Base+0x12c>
   349ec:	ldr	r3, [r0, #0]
   349ee:	adds	r6, r1, r2
   349f0:	add	r3, r2
   349f2:	str	r3, [r0, #0]
   349f4:	cmp	r3, #15
   349f6:	it	ls
   349f8:	cmpls	r2, #15
   349fa:	ldr	r0, [r0, #4]
   349fc:	ite	hi
   349fe:	movhi	r3, #1
   34a00:	movls	r3, #0
   34a02:	orrs	r3, r0
   34a04:	str	r3, [r4, #4]
   34a06:	ldr	r3, [r4, #40]	; 0x28
   34a08:	adds	r0, r3, r2
   34a0a:	cmp	r0, #15
   34a0c:	bhi.n	34a22 <XXH32_update@@Base+0x46>
   34a0e:	add.w	r0, r4, #24
   34a12:	add	r0, r3
   34a14:	bl	3491c <hash_blake2b@@Base+0x6cc>
   34a18:	ldr	r2, [r4, #40]	; 0x28
   34a1a:	add	r2, r7
   34a1c:	str	r2, [r4, #40]	; 0x28
   34a1e:	movs	r0, #0
   34a20:	b.n	34b0a <XXH32_update@@Base+0x12e>
   34a22:	cbz	r3, 34a82 <XXH32_update@@Base+0xa6>
   34a24:	add.w	r0, r4, #24
   34a28:	rsb	r2, r3, #16
   34a2c:	add	r0, r3
   34a2e:	bl	3491c <hash_blake2b@@Base+0x6cc>
   34a32:	ldr	r1, [pc, #220]	; (34b10 <XXH32_update@@Base+0x134>)
   34a34:	ldr	r2, [r4, #8]
   34a36:	ldr	r3, [r4, #24]
   34a38:	ldr	r0, [r4, #12]
   34a3a:	mla	r3, r1, r3, r2
   34a3e:	ldr	r2, [pc, #212]	; (34b14 <XXH32_update@@Base+0x138>)
   34a40:	mov.w	r3, r3, ror #19
   34a44:	muls	r3, r2
   34a46:	str	r3, [r4, #8]
   34a48:	ldr	r3, [r4, #28]
   34a4a:	mla	r3, r1, r3, r0
   34a4e:	ldr	r0, [r4, #16]
   34a50:	mov.w	r3, r3, ror #19
   34a54:	muls	r3, r2
   34a56:	str	r3, [r4, #12]
   34a58:	ldr	r3, [r4, #32]
   34a5a:	mla	r3, r1, r3, r0
   34a5e:	ldr	r0, [r4, #20]
   34a60:	mov.w	r3, r3, ror #19
   34a64:	muls	r3, r2
   34a66:	str	r3, [r4, #16]
   34a68:	ldr	r3, [r4, #36]	; 0x24
   34a6a:	mla	r1, r1, r3, r0
   34a6e:	ldr	r3, [r4, #40]	; 0x28
   34a70:	rsb	r3, r3, #16
   34a74:	add	r5, r3
   34a76:	movs	r3, #0
   34a78:	str	r3, [r4, #40]	; 0x28
   34a7a:	mov.w	r1, r1, ror #19
   34a7e:	muls	r2, r1
   34a80:	str	r2, [r4, #20]
   34a82:	sub.w	r3, r6, #16
   34a86:	cmp	r3, r5
   34a88:	bcc.n	34af2 <XXH32_update@@Base+0x116>
   34a8a:	ldrd	ip, r7, [r4, #8]
   34a8e:	mov	r1, r5
   34a90:	ldrd	r0, r8, [r4, #16]
   34a94:	ldr.w	r9, [pc, #120]	; 34b10 <XXH32_update@@Base+0x134>
   34a98:	ldr.w	lr, [pc, #120]	; 34b14 <XXH32_update@@Base+0x138>
   34a9c:	ldr	r2, [r1, #0]
   34a9e:	adds	r1, #16
   34aa0:	mla	ip, r9, r2, ip
   34aa4:	ldr.w	r2, [r1, #-12]
   34aa8:	mla	r7, r9, r2, r7
   34aac:	ldr.w	r2, [r1, #-8]
   34ab0:	mov.w	ip, ip, ror #19
   34ab4:	mla	r0, r9, r2, r0
   34ab8:	ldr.w	r2, [r1, #-4]
   34abc:	mov.w	r7, r7, ror #19
   34ac0:	cmp	r3, r1
   34ac2:	mul.w	ip, lr, ip
   34ac6:	mla	r2, r9, r2, r8
   34aca:	mov.w	r0, r0, ror #19
   34ace:	mul.w	r7, lr, r7
   34ad2:	mul.w	r0, lr, r0
   34ad6:	mov.w	r2, r2, ror #19
   34ada:	mul.w	r8, lr, r2
   34ade:	bcs.n	34a9c <XXH32_update@@Base+0xc0>
   34ae0:	subs	r3, r3, r5
   34ae2:	strd	ip, r7, [r4, #8]
   34ae6:	bic.w	r3, r3, #15
   34aea:	strd	r0, r8, [r4, #16]
   34aee:	adds	r3, #16
   34af0:	add	r5, r3
   34af2:	cmp	r5, r6
   34af4:	bcs.n	34a1e <XXH32_update@@Base+0x42>
   34af6:	subs	r6, r6, r5
   34af8:	add.w	r0, r4, #24
   34afc:	mov	r1, r5
   34afe:	mov	r2, r6
   34b00:	bl	3491c <hash_blake2b@@Base+0x6cc>
   34b04:	str	r6, [r4, #40]	; 0x28
   34b06:	b.n	34a1e <XXH32_update@@Base+0x42>
   34b08:	movs	r0, #1
   34b0a:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   34b0e:	nop
   34b10:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   34b12:	strh	r3, [r5, #46]	; 0x2e
   34b14:	ldrb	r1, [r6, #6]
   34b16:	ldr	r6, [sp, #220]	; 0xdc

00034b18 <XXH32_digest@@Base>:
   34b18:	push	{r4, r5}
   34b1a:	ldr	r3, [r0, #4]
   34b1c:	ldr	r2, [r0, #16]
   34b1e:	cbz	r3, 34b48 <XXH32_digest@@Base+0x30>
   34b20:	ldrd	r1, r3, [r0, #8]
   34b24:	mov.w	r4, r3, ror #25
   34b28:	ldr	r3, [r0, #20]
   34b2a:	add.w	r4, r4, r1, ror #31
   34b2e:	add.w	r4, r4, r2, ror #20
   34b32:	add.w	r4, r4, r3, ror #14
   34b36:	mov	r1, r0
   34b38:	ldr	r2, [r0, #40]	; 0x28
   34b3a:	ldr.w	r5, [r1], #24
   34b3e:	movs	r3, #0
   34b40:	adds	r0, r4, r5
   34b42:	pop	{r4, r5}
   34b44:	b.w	342b0 <hash_blake2b@@Base+0x60>
   34b48:	ldr	r4, [pc, #4]	; (34b50 <XXH32_digest@@Base+0x38>)
   34b4a:	add	r4, r2
   34b4c:	b.n	34b36 <XXH32_digest@@Base+0x1e>
   34b4e:	nop
   34b50:	str	r1, [r6, #120]	; 0x78
   34b52:	asrs	r6, r2, #25

00034b54 <XXH32_canonicalFromHash@@Base>:
   34b54:	rev	r1, r1
   34b56:	str	r1, [r0, #0]
   34b58:	bx	lr

00034b5a <XXH32_hashFromCanonical@@Base>:
   34b5a:	ldr	r0, [r0, #0]
   34b5c:	rev	r0, r0
   34b5e:	bx	lr

00034b60 <XXH64@@Base>:
   34b60:	push	{r0, r1, r4, lr}
   34b62:	ands.w	r4, r0, #7
   34b66:	it	ne
   34b68:	movne	r4, #1
   34b6a:	str	r4, [sp, #0]
   34b6c:	bl	34580 <hash_blake2b@@Base+0x330>
   34b70:	add	sp, #8
   34b72:	pop	{r4, pc}

00034b74 <XXH64_createState@@Base>:
   34b74:	movs	r0, #88	; 0x58
   34b76:	b.w	886c <malloc@plt>

00034b7a <XXH64_freeState@@Base>:
   34b7a:	push	{r3, lr}
   34b7c:	blx	8620 <free@plt+0x4>
   34b80:	movs	r0, #0
   34b82:	pop	{r3, pc}

00034b84 <XXH64_copyState@@Base>:
   34b84:	movs	r2, #88	; 0x58
   34b86:	b.w	8668 <memcpy@plt>

00034b8a <XXH64_reset@@Base>:
   34b8a:	push	{r4, r5, r6, r7, lr}
   34b8c:	mov	r4, r2
   34b8e:	ldr	r2, [pc, #140]	; (34c1c <XXH64_reset@@Base+0x92>)
   34b90:	mov	r5, r3
   34b92:	ldr	r3, [pc, #140]	; (34c20 <XXH64_reset@@Base+0x96>)
   34b94:	sub	sp, #100	; 0x64
   34b96:	add	r2, pc
   34b98:	mov	r7, r0
   34b9a:	mov	r6, sp
   34b9c:	movs	r1, #0
   34b9e:	ldr	r3, [r2, r3]
   34ba0:	mov	r0, r6
   34ba2:	movs	r2, #88	; 0x58
   34ba4:	ldr	r3, [r3, #0]
   34ba6:	str	r3, [sp, #92]	; 0x5c
   34ba8:	mov.w	r3, #0
   34bac:	blx	89bc <memset@plt+0x4>
   34bb0:	ldr	r3, [pc, #80]	; (34c04 <XXH64_reset@@Base+0x7a>)
   34bb2:	mov	r1, r6
   34bb4:	ldr	r2, [pc, #80]	; (34c08 <XXH64_reset@@Base+0x7e>)
   34bb6:	mov	r0, r7
   34bb8:	adds	r3, r4, r3
   34bba:	strd	r4, r5, [sp, #24]
   34bbe:	adc.w	r2, r5, r2
   34bc2:	strd	r3, r2, [sp, #8]
   34bc6:	ldr	r3, [pc, #68]	; (34c0c <XXH64_reset@@Base+0x82>)
   34bc8:	ldr	r2, [pc, #68]	; (34c10 <XXH64_reset@@Base+0x86>)
   34bca:	adds	r3, r4, r3
   34bcc:	adc.w	r2, r5, r2
   34bd0:	strd	r3, r2, [sp, #16]
   34bd4:	ldr	r2, [pc, #60]	; (34c14 <XXH64_reset@@Base+0x8a>)
   34bd6:	ldr	r3, [pc, #64]	; (34c18 <XXH64_reset@@Base+0x8e>)
   34bd8:	adds	r4, r4, r2
   34bda:	mov.w	r2, #80	; 0x50
   34bde:	adc.w	r5, r3, r5
   34be2:	strd	r4, r5, [sp, #32]
   34be6:	blx	866c <memcpy@plt+0x4>
   34bea:	ldr	r2, [pc, #56]	; (34c24 <XXH64_reset@@Base+0x9a>)
   34bec:	ldr	r3, [pc, #48]	; (34c20 <XXH64_reset@@Base+0x96>)
   34bee:	add	r2, pc
   34bf0:	ldr	r3, [r2, r3]
   34bf2:	ldr	r2, [r3, #0]
   34bf4:	ldr	r3, [sp, #92]	; 0x5c
   34bf6:	eors	r2, r3
   34bf8:	beq.n	34bfe <XXH64_reset@@Base+0x74>
   34bfa:	blx	8708 <__stack_chk_fail@plt>
   34bfe:	movs	r0, #0
   34c00:	add	sp, #100	; 0x64
   34c02:	pop	{r4, r5, r6, r7, pc}
   34c04:	push	{r1, r2, r4, r6, r7, lr}
   34c06:	add	r5, sp, #768	; 0x300
   34c08:	movs	r7, #238	; 0xee
   34c0a:	str	r2, [r5, #12]
   34c0c:	adc.w	r7, pc, r4, lsr #11
   34c10:	add	r6, sp, #244	; 0xf4
   34c12:	stmia	r2!, {r1, r4, r5, r7}
   34c14:	adds	r5, #121	; 0x79
   34c16:	ldrb	r4, [r2, #8]
   34c18:	strh	r6, [r1, #50]	; 0x32
   34c1a:	str	r0, [r1, #28]
   34c1c:	lsls	r2, r5, #7
   34c1e:	movs	r3, r0
   34c20:	lsls	r0, r5, #8
   34c22:	movs	r0, r0
   34c24:	lsls	r2, r2, #6
   34c26:	movs	r3, r0

00034c28 <XXH64_update@@Base>:
   34c28:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34c2c:	mov	r4, r0
   34c2e:	sub	sp, #36	; 0x24
   34c30:	mov	r5, r2
   34c32:	mov	r8, r1
   34c34:	cmp	r1, #0
   34c36:	beq.w	34f1c <XXH64_update@@Base+0x2f4>
   34c3a:	ldrd	r6, r7, [r0]
   34c3e:	add.w	r9, r1, r2
   34c42:	ldr	r3, [r0, #72]	; 0x48
   34c44:	adds	r6, r6, r2
   34c46:	adc.w	r7, r7, #0
   34c4a:	strd	r6, r7, [r0]
   34c4e:	adds	r0, r3, r2
   34c50:	cmp	r0, #31
   34c52:	bhi.n	34c68 <XXH64_update@@Base+0x40>
   34c54:	add.w	r0, r4, #40	; 0x28
   34c58:	add	r0, r3
   34c5a:	bl	3491c <hash_blake2b@@Base+0x6cc>
   34c5e:	ldr	r2, [r4, #72]	; 0x48
   34c60:	add	r2, r5
   34c62:	str	r2, [r4, #72]	; 0x48
   34c64:	movs	r0, #0
   34c66:	b.n	34f1e <XXH64_update@@Base+0x2f6>
   34c68:	cmp	r3, #0
   34c6a:	beq.w	34d78 <XXH64_update@@Base+0x150>
   34c6e:	add.w	r0, r4, #40	; 0x28
   34c72:	rsb	r2, r3, #32
   34c76:	add	r0, r3
   34c78:	ldr	r5, [pc, #680]	; (34f24 <XXH64_update@@Base+0x2fc>)
   34c7a:	bl	3491c <hash_blake2b@@Base+0x6cc>
   34c7e:	ldr.w	ip, [pc, #688]	; 34f30 <XXH64_update@@Base+0x308>
   34c82:	ldr	r6, [r4, #40]	; 0x28
   34c84:	ldr	r3, [r4, #44]	; 0x2c
   34c86:	mul.w	r2, ip, r6
   34c8a:	mla	r3, r5, r3, r2
   34c8e:	umull	r6, r7, r6, r5
   34c92:	add	r7, r3
   34c94:	ldrd	r3, r2, [r4, #8]
   34c98:	adds	r3, r6, r3
   34c9a:	ldr	r6, [pc, #652]	; (34f28 <XXH64_update@@Base+0x300>)
   34c9c:	adc.w	r0, r7, r2
   34ca0:	ldr	r2, [pc, #648]	; (34f2c <XXH64_update@@Base+0x304>)
   34ca2:	lsls	r1, r0, #31
   34ca4:	orr.w	r1, r1, r3, lsr #1
   34ca8:	lsls	r3, r3, #31
   34caa:	orr.w	r0, r3, r0, lsr #1
   34cae:	mul.w	r3, r6, r0
   34cb2:	mla	r3, r2, r1, r3
   34cb6:	umull	r0, r1, r0, r2
   34cba:	add	r1, r3
   34cbc:	ldr	r3, [r4, #52]	; 0x34
   34cbe:	strd	r0, r1, [r4, #8]
   34cc2:	ldr	r0, [r4, #48]	; 0x30
   34cc4:	mul.w	r1, ip, r0
   34cc8:	mla	r3, r5, r3, r1
   34ccc:	umull	r0, r1, r0, r5
   34cd0:	add	r1, r3
   34cd2:	ldrd	r3, r7, [r4, #16]
   34cd6:	adds	r3, r0, r3
   34cd8:	adc.w	r0, r1, r7
   34cdc:	lsls	r1, r0, #31
   34cde:	orr.w	r1, r1, r3, lsr #1
   34ce2:	lsls	r3, r3, #31
   34ce4:	orr.w	r0, r3, r0, lsr #1
   34ce8:	mul.w	r3, r6, r0
   34cec:	mla	r3, r2, r1, r3
   34cf0:	umull	r0, r1, r0, r2
   34cf4:	add	r1, r3
   34cf6:	ldr	r3, [r4, #60]	; 0x3c
   34cf8:	strd	r0, r1, [r4, #16]
   34cfc:	ldr	r0, [r4, #56]	; 0x38
   34cfe:	mul.w	r1, ip, r0
   34d02:	mla	r3, r5, r3, r1
   34d06:	umull	r0, r1, r0, r5
   34d0a:	add	r1, r3
   34d0c:	ldrd	r3, r7, [r4, #24]
   34d10:	adds	r3, r0, r3
   34d12:	adc.w	r0, r1, r7
   34d16:	lsls	r1, r0, #31
   34d18:	orr.w	r1, r1, r3, lsr #1
   34d1c:	lsls	r3, r3, #31
   34d1e:	orr.w	r0, r3, r0, lsr #1
   34d22:	mul.w	r3, r6, r0
   34d26:	mla	r3, r2, r1, r3
   34d2a:	umull	r0, r1, r0, r2
   34d2e:	add	r1, r3
   34d30:	ldr	r3, [r4, #68]	; 0x44
   34d32:	strd	r0, r1, [r4, #24]
   34d36:	ldr	r0, [r4, #64]	; 0x40
   34d38:	mul.w	ip, ip, r0
   34d3c:	mla	ip, r5, r3, ip
   34d40:	umull	r0, r1, r0, r5
   34d44:	ldrd	r3, r5, [r4, #32]
   34d48:	add	r1, ip
   34d4a:	adds	r3, r0, r3
   34d4c:	adc.w	r5, r1, r5
   34d50:	lsls	r1, r5, #31
   34d52:	orr.w	r1, r1, r3, lsr #1
   34d56:	lsls	r3, r3, #31
   34d58:	orr.w	r5, r3, r5, lsr #1
   34d5c:	muls	r6, r5
   34d5e:	mla	r6, r2, r1, r6
   34d62:	umull	r2, r3, r5, r2
   34d66:	add	r3, r6
   34d68:	strd	r2, r3, [r4, #32]
   34d6c:	ldr	r3, [r4, #72]	; 0x48
   34d6e:	rsb	r3, r3, #32
   34d72:	add	r8, r3
   34d74:	movs	r3, #0
   34d76:	str	r3, [r4, #72]	; 0x48
   34d78:	add.w	r3, r8, #32
   34d7c:	cmp	r9, r3
   34d7e:	bcc.w	34f02 <XXH64_update@@Base+0x2da>
   34d82:	ldrd	r2, r3, [r4, #8]
   34d86:	sub.w	ip, r9, #32
   34d8a:	ldr	r5, [pc, #408]	; (34f24 <XXH64_update@@Base+0x2fc>)
   34d8c:	ldr	r7, [pc, #416]	; (34f30 <XXH64_update@@Base+0x308>)
   34d8e:	strd	r2, r3, [sp]
   34d92:	ldrd	r2, r3, [r4, #16]
   34d96:	strd	r2, r3, [sp, #8]
   34d9a:	ldrd	r2, r3, [r4, #24]
   34d9e:	strd	r2, r3, [sp, #16]
   34da2:	ldrd	r2, r3, [r4, #32]
   34da6:	strd	r2, r3, [sp, #24]
   34daa:	mov	r3, r8
   34dac:	ldr	r2, [pc, #380]	; (34f2c <XXH64_update@@Base+0x304>)
   34dae:	ldr	r0, [r3, #0]
   34db0:	adds	r3, #32
   34db2:	ldr.w	lr, [r3, #-28]
   34db6:	ldr	r6, [pc, #368]	; (34f28 <XXH64_update@@Base+0x300>)
   34db8:	umull	sl, fp, r0, r5
   34dbc:	mul.w	r1, r7, r0
   34dc0:	mla	lr, r5, lr, r1
   34dc4:	ldr	r1, [sp, #0]
   34dc6:	adds.w	r0, sl, r1
   34dca:	ldr	r1, [sp, #4]
   34dcc:	add	fp, lr
   34dce:	adc.w	r1, fp, r1
   34dd2:	mov.w	lr, r1, lsl #31
   34dd6:	orr.w	lr, lr, r0, lsr #1
   34dda:	lsls	r0, r0, #31
   34ddc:	orr.w	r1, r0, r1, lsr #1
   34de0:	ldr	r0, [pc, #324]	; (34f28 <XXH64_update@@Base+0x300>)
   34de2:	muls	r0, r1
   34de4:	mla	lr, r2, lr, r0
   34de8:	umull	r0, r1, r1, r2
   34dec:	strd	r0, r1, [sp]
   34df0:	ldr	r1, [sp, #4]
   34df2:	ldr.w	r0, [r3, #-24]
   34df6:	add	r1, lr
   34df8:	ldr.w	lr, [r3, #-20]
   34dfc:	str	r1, [sp, #4]
   34dfe:	umull	sl, fp, r0, r5
   34e02:	mul.w	r1, r7, r0
   34e06:	mla	lr, r5, lr, r1
   34e0a:	ldr	r1, [sp, #8]
   34e0c:	adds.w	r0, sl, r1
   34e10:	ldr	r1, [sp, #12]
   34e12:	add	fp, lr
   34e14:	adc.w	r1, fp, r1
   34e18:	mov.w	lr, r1, lsl #31
   34e1c:	orr.w	lr, lr, r0, lsr #1
   34e20:	lsls	r0, r0, #31
   34e22:	orr.w	r1, r0, r1, lsr #1
   34e26:	ldr	r0, [pc, #256]	; (34f28 <XXH64_update@@Base+0x300>)
   34e28:	muls	r0, r1
   34e2a:	mla	lr, r2, lr, r0
   34e2e:	umull	r0, r1, r1, r2
   34e32:	strd	r0, r1, [sp, #8]
   34e36:	ldr	r1, [sp, #12]
   34e38:	ldr.w	r0, [r3, #-16]
   34e3c:	add	r1, lr
   34e3e:	ldr.w	lr, [r3, #-12]
   34e42:	str	r1, [sp, #12]
   34e44:	umull	sl, fp, r0, r5
   34e48:	mul.w	r1, r7, r0
   34e4c:	mla	lr, r5, lr, r1
   34e50:	ldr	r1, [sp, #16]
   34e52:	adds.w	r0, sl, r1
   34e56:	ldr	r1, [sp, #20]
   34e58:	add	fp, lr
   34e5a:	adc.w	lr, fp, r1
   34e5e:	mov.w	r1, lr, lsl #31
   34e62:	orr.w	r1, r1, r0, lsr #1
   34e66:	lsls	r0, r0, #31
   34e68:	orr.w	r0, r0, lr, lsr #1
   34e6c:	umull	sl, fp, r0, r2
   34e70:	mul.w	lr, r6, r0
   34e74:	ldr	r6, [sp, #24]
   34e76:	mla	r1, r2, r1, lr
   34e7a:	ldr.w	lr, [r3, #-4]
   34e7e:	strd	sl, fp, [sp, #16]
   34e82:	ldr	r0, [sp, #20]
   34e84:	add	r1, r0
   34e86:	ldr.w	r0, [r3, #-8]
   34e8a:	str	r1, [sp, #20]
   34e8c:	mul.w	r1, r7, r0
   34e90:	mla	lr, r5, lr, r1
   34e94:	umull	r0, r1, r0, r5
   34e98:	adds.w	sl, r0, r6
   34e9c:	ldr	r6, [sp, #28]
   34e9e:	add	r1, lr
   34ea0:	ldr	r0, [pc, #132]	; (34f28 <XXH64_update@@Base+0x300>)
   34ea2:	adc.w	r6, r1, r6
   34ea6:	cmp	ip, r3
   34ea8:	mov.w	r1, r6, lsl #31
   34eac:	orr.w	r1, r1, sl, lsr #1
   34eb0:	mov.w	sl, sl, lsl #31
   34eb4:	orr.w	sl, sl, r6, lsr #1
   34eb8:	mul.w	r0, r0, sl
   34ebc:	umull	sl, fp, sl, r2
   34ec0:	mla	r1, r2, r1, r0
   34ec4:	strd	sl, fp, [sp, #24]
   34ec8:	ldr	r0, [sp, #28]
   34eca:	add	r0, r1
   34ecc:	str	r0, [sp, #28]
   34ece:	bcs.w	34dae <XXH64_update@@Base+0x186>
   34ed2:	sub.w	r3, r9, #32
   34ed6:	sub.w	r3, r3, r8
   34eda:	bic.w	r3, r3, #31
   34ede:	adds	r3, #32
   34ee0:	add	r8, r3
   34ee2:	ldrd	r2, r3, [sp]
   34ee6:	strd	r2, r3, [r4, #8]
   34eea:	ldrd	r2, r3, [sp, #8]
   34eee:	strd	r2, r3, [r4, #16]
   34ef2:	ldrd	r2, r3, [sp, #16]
   34ef6:	strd	r2, r3, [r4, #24]
   34efa:	ldrd	r2, r3, [sp, #24]
   34efe:	strd	r2, r3, [r4, #32]
   34f02:	cmp	r8, r9
   34f04:	bcs.w	34c64 <XXH64_update@@Base+0x3c>
   34f08:	sub.w	r5, r9, r8
   34f0c:	add.w	r0, r4, #40	; 0x28
   34f10:	mov	r1, r8
   34f12:	mov	r2, r5
   34f14:	bl	3491c <hash_blake2b@@Base+0x6cc>
   34f18:	str	r5, [r4, #72]	; 0x48
   34f1a:	b.n	34c64 <XXH64_update@@Base+0x3c>
   34f1c:	movs	r0, #1
   34f1e:	add	sp, #36	; 0x24
   34f20:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34f24:	adc.w	r7, pc, r4, lsr #11
   34f28:	ldrb	r1, [r6, #6]
   34f2a:	ldr	r6, [sp, #220]	; 0xdc
   34f2c:	ldmia	r2, {r0, r1, r2, r7}
   34f2e:	strh	r3, [r5, #46]	; 0x2e
   34f30:	add	r6, sp, #244	; 0xf4
   34f32:	stmia	r2!, {r1, r4, r5, r7}

00034f34 <XXH64_digest@@Base>:
   34f34:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34f38:	sub	sp, #28
   34f3a:	ldrd	r3, r4, [r0]
   34f3e:	strd	r3, r4, [sp, #8]
   34f42:	ldrd	r2, r3, [sp, #8]
   34f46:	ldrd	r4, r5, [r0, #24]
   34f4a:	cmp	r3, #0
   34f4c:	it	eq
   34f4e:	cmpeq	r2, #32
   34f50:	bcc.w	35118 <XXH64_digest@@Base+0x1e4>
   34f54:	ldrd	sl, lr, [r0, #8]
   34f58:	ldr	r6, [pc, #456]	; (35124 <XXH64_digest@@Base+0x1f0>)
   34f5a:	ldr	r7, [pc, #460]	; (35128 <XXH64_digest@@Base+0x1f4>)
   34f5c:	ldrd	r1, ip, [r0, #16]
   34f60:	umull	r2, r3, sl, r6
   34f64:	mul.w	r8, r7, sl
   34f68:	ldr	r7, [r0, #36]	; 0x24
   34f6a:	mla	r8, r6, lr, r8
   34f6e:	add	r3, r8
   34f70:	mov.w	r8, r2, lsl #31
   34f74:	mov.w	fp, r3, lsl #31
   34f78:	orr.w	r8, r8, r3, lsr #1
   34f7c:	mov.w	r3, lr, lsl #1
   34f80:	orr.w	r9, fp, r2, lsr #1
   34f84:	orr.w	r2, r3, sl, lsr #31
   34f88:	mov.w	r3, sl, lsl #1
   34f8c:	orr.w	fp, r3, lr, lsr #31
   34f90:	mov.w	lr, r1, lsl #7
   34f94:	mov.w	r3, ip, lsl #7
   34f98:	orr.w	lr, lr, ip, lsr #25
   34f9c:	orr.w	sl, r3, r1, lsr #25
   34fa0:	adds.w	r3, fp, lr
   34fa4:	mov.w	lr, r4, lsl #12
   34fa8:	adc.w	sl, r2, sl
   34fac:	orr.w	lr, lr, r5, lsr #20
   34fb0:	lsls	r2, r5, #12
   34fb2:	adds.w	lr, r3, lr
   34fb6:	ldr	r3, [r0, #36]	; 0x24
   34fb8:	orr.w	fp, r2, r4, lsr #20
   34fbc:	adc.w	sl, sl, fp
   34fc0:	mov.w	fp, r3, lsl #18
   34fc4:	ldr	r3, [r0, #32]
   34fc6:	orr.w	r2, fp, r3, lsr #14
   34fca:	lsls	r3, r3, #18
   34fcc:	orr.w	r3, r3, r7, lsr #14
   34fd0:	adds.w	lr, lr, r3
   34fd4:	ldr	r3, [pc, #340]	; (3512c <XXH64_digest@@Base+0x1f8>)
   34fd6:	adc.w	sl, sl, r2
   34fda:	ldr	r2, [pc, #340]	; (35130 <XXH64_digest@@Base+0x1fc>)
   34fdc:	mul.w	fp, r2, r8
   34fe0:	mla	fp, r3, r9, fp
   34fe4:	umull	r8, r9, r8, r3
   34fe8:	add	r9, fp
   34fea:	eor.w	lr, lr, r8
   34fee:	eor.w	sl, sl, r9
   34ff2:	mul.w	r8, r2, lr
   34ff6:	mla	sl, r3, sl, r8
   34ffa:	umull	r7, r8, lr, r3
   34ffe:	strd	r7, r8, [sp, #16]
   35002:	ldr	r7, [sp, #20]
   35004:	add	r7, sl
   35006:	str	r7, [sp, #20]
   35008:	ldr	r7, [pc, #284]	; (35128 <XXH64_digest@@Base+0x1f4>)
   3500a:	umull	sl, fp, r1, r6
   3500e:	mul.w	lr, r7, r1
   35012:	ldr	r7, [sp, #16]
   35014:	mla	ip, r6, ip, lr
   35018:	mov.w	r8, sl, lsl #31
   3501c:	add	fp, ip
   3501e:	orr.w	r8, r8, fp, lsr #1
   35022:	mov.w	r1, fp, lsl #31
   35026:	orr.w	r1, r1, sl, lsr #1
   3502a:	mul.w	ip, r2, r8
   3502e:	mla	r1, r3, r1, ip
   35032:	ldr.w	ip, [pc, #268]	; 35140 <XXH64_digest@@Base+0x20c>
   35036:	umull	r8, r9, r8, r3
   3503a:	add	r9, r1
   3503c:	ldr	r1, [pc, #244]	; (35134 <XXH64_digest@@Base+0x200>)
   3503e:	adds.w	sl, r7, r1
   35042:	ldr	r7, [sp, #20]
   35044:	eor.w	sl, r8, sl
   35048:	adc.w	lr, r7, ip
   3504c:	ldr	r7, [pc, #216]	; (35128 <XXH64_digest@@Base+0x1f4>)
   3504e:	eor.w	lr, r9, lr
   35052:	mul.w	r8, r2, sl
   35056:	mla	lr, r3, lr, r8
   3505a:	umull	sl, fp, sl, r3
   3505e:	add	fp, lr
   35060:	mul.w	lr, r7, r4
   35064:	umull	r7, r8, r4, r6
   35068:	mla	lr, r6, r5, lr
   3506c:	add	r8, lr
   3506e:	lsls	r4, r7, #31
   35070:	orr.w	r4, r4, r8, lsr #1
   35074:	mov.w	lr, r8, lsl #31
   35078:	orr.w	lr, lr, r7, lsr #1
   3507c:	adds.w	r8, sl, r1
   35080:	mul.w	r5, r2, r4
   35084:	mla	lr, r3, lr, r5
   35088:	umull	r4, r5, r4, r3
   3508c:	add	r5, lr
   3508e:	eor.w	r8, r4, r8
   35092:	adc.w	lr, fp, ip
   35096:	eor.w	r4, r5, lr
   3509a:	mul.w	r5, r2, r8
   3509e:	mla	r4, r3, r4, r5
   350a2:	ldr	r5, [pc, #132]	; (35128 <XXH64_digest@@Base+0x1f4>)
   350a4:	umull	r8, r9, r8, r3
   350a8:	add	r9, r4
   350aa:	ldr	r4, [r0, #32]
   350ac:	mul.w	r7, r5, r4
   350b0:	ldr	r5, [r0, #32]
   350b2:	ldr	r4, [r0, #36]	; 0x24
   350b4:	umull	sl, fp, r5, r6
   350b8:	mla	r4, r6, r4, r7
   350bc:	add	fp, r4
   350be:	mov.w	r6, sl, lsl #31
   350c2:	orr.w	r6, r6, fp, lsr #1
   350c6:	mov.w	r4, fp, lsl #31
   350ca:	orr.w	r4, r4, sl, lsr #1
   350ce:	mul.w	r5, r2, r6
   350d2:	mla	r4, r3, r4, r5
   350d6:	umull	r6, r7, r6, r3
   350da:	add	r7, r4
   350dc:	adds.w	r4, r8, r1
   350e0:	eor.w	r4, r4, r6
   350e4:	adc.w	r5, r9, ip
   350e8:	eors	r5, r7
   350ea:	muls	r2, r4
   350ec:	mla	r2, r3, r5, r2
   350f0:	umull	r5, r6, r4, r3
   350f4:	add	r6, r2
   350f6:	adds	r4, r5, r1
   350f8:	adc.w	r1, r6, ip
   350fc:	movs	r3, #0
   350fe:	str	r3, [sp, #0]
   35100:	ldr	r3, [sp, #8]
   35102:	add.w	r2, r0, #40	; 0x28
   35106:	adds	r0, r3, r4
   35108:	ldr	r4, [sp, #12]
   3510a:	adc.w	r1, r4, r1
   3510e:	bl	343e4 <hash_blake2b@@Base+0x194>
   35112:	add	sp, #28
   35114:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35118:	ldr	r1, [pc, #28]	; (35138 <XXH64_digest@@Base+0x204>)
   3511a:	adds	r4, r4, r1
   3511c:	ldr	r1, [pc, #28]	; (3513c <XXH64_digest@@Base+0x208>)
   3511e:	adc.w	r1, r5, r1
   35122:	b.n	350fc <XXH64_digest@@Base+0x1c8>
   35124:	adc.w	r7, pc, r4, lsr #11
   35128:	add	r6, sp, #244	; 0xf4
   3512a:	stmia	r2!, {r1, r4, r5, r7}
   3512c:	ldmia	r2, {r0, r1, r2, r7}
   3512e:	strh	r3, [r5, #46]	; 0x2e
   35130:	ldrb	r1, [r6, #6]
   35132:	ldr	r6, [sp, #220]	; 0xdc
   35134:	add	r6, sp, #396	; 0x18c
   35136:	stmia	r2!, {r1, r4, r5, r7}
   35138:	str	r5, [r0, #124]	; 0x7c
   3513a:	asrs	r6, r2, #25
   3513c:			; <UNDEFINED> instruction: 0xeb2f27d4
   35140:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   35142:	strh	r3, [r5, #46]	; 0x2e

00035144 <XXH64_canonicalFromHash@@Base>:
   35144:	push	{r0, r1, r4, lr}
   35146:	mov	r4, r0
   35148:	strd	r2, r3, [sp]
   3514c:	rev	r2, r2
   3514e:	ldr	r3, [sp, #4]
   35150:	rev	r3, r3
   35152:	strd	r3, r2, [sp]
   35156:	mov	r3, sp
   35158:	ldmia	r3!, {r0, r1}
   3515a:	str	r0, [r4, #0]
   3515c:	str	r1, [r4, #4]
   3515e:	add	sp, #8
   35160:	pop	{r4, pc}

00035162 <XXH64_hashFromCanonical@@Base>:
   35162:	ldr	r1, [r0, #0]
   35164:	ldr	r0, [r0, #4]
   35166:	rev	r1, r1
   35168:	rev	r0, r0
   3516a:	bx	lr
   3516c:	ldr	r2, [pc, #372]	; (352e4 <XXH64_hashFromCanonical@@Base+0x182>)
   3516e:	ldr	r3, [pc, #376]	; (352e8 <XXH64_hashFromCanonical@@Base+0x186>)
   35170:	add	r2, pc
   35172:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35176:	sub	sp, #308	; 0x134
   35178:	ldr	r3, [r2, r3]
   3517a:	add	r1, sp, #44	; 0x2c
   3517c:	add.w	r5, r0, #64	; 0x40
   35180:	mov	r2, r0
   35182:	ldr	r3, [r3, #0]
   35184:	str	r3, [sp, #300]	; 0x12c
   35186:	mov.w	r3, #0
   3518a:	mov	r4, r1
   3518c:	ldrb.w	r3, [r2, #43]	; 0x2b
   35190:	adds	r2, #4
   35192:	ldrb.w	r6, [r2, #38]	; 0x26
   35196:	lsls	r3, r3, #16
   35198:	orr.w	r3, r3, r6, lsl #24
   3519c:	ldrb.w	r6, [r2, #41]	; 0x29
   351a0:	orrs	r3, r6
   351a2:	ldrb.w	r6, [r2, #40]	; 0x28
   351a6:	cmp	r5, r2
   351a8:	orr.w	r3, r3, r6, lsl #8
   351ac:	str.w	r3, [r4], #4
   351b0:	bne.n	3518c <XXH64_hashFromCanonical@@Base+0x2a>
   351b2:	movs	r4, #16
   351b4:	ldr	r2, [r1, #56]	; 0x38
   351b6:	mov	r6, r1
   351b8:	ldr.w	r5, [r1, #4]!
   351bc:	adds	r4, #1
   351be:	cmp	r4, #64	; 0x40
   351c0:	mov.w	r3, r2, ror #19
   351c4:	eor.w	r3, r3, r2, ror #17
   351c8:	eor.w	r3, r3, r2, lsr #10
   351cc:	ldr	r2, [r6, #36]	; 0x24
   351ce:	ldr	r6, [r6, #0]
   351d0:	add	r2, r6
   351d2:	add	r3, r2
   351d4:	mov.w	r2, r5, ror #18
   351d8:	eor.w	r2, r2, r5, ror #7
   351dc:	eor.w	r2, r2, r5, lsr #3
   351e0:	add	r3, r2
   351e2:	str	r3, [r1, #60]	; 0x3c
   351e4:	bne.n	351b4 <XXH64_hashFromCanonical@@Base+0x52>
   351e6:	ldr	r3, [r0, #0]
   351e8:	add.w	r9, sp, #44	; 0x2c
   351ec:	mov.w	lr, #0
   351f0:	str	r3, [sp, #0]
   351f2:	ldr	r3, [r0, #4]
   351f4:	str	r3, [sp, #4]
   351f6:	ldr	r3, [r0, #8]
   351f8:	ldrd	r4, r6, [sp]
   351fc:	str	r3, [sp, #8]
   351fe:	ldr	r3, [r0, #12]
   35200:	str	r3, [sp, #12]
   35202:	ldr	r3, [r0, #16]
   35204:	ldrd	r5, r8, [sp, #8]
   35208:	str	r3, [sp, #16]
   3520a:	ldr	r3, [r0, #20]
   3520c:	str	r3, [sp, #20]
   3520e:	ldr	r3, [r0, #24]
   35210:	ldrd	r1, ip, [sp, #16]
   35214:	str	r3, [sp, #24]
   35216:	ldr	r3, [r0, #28]
   35218:	str	r3, [sp, #28]
   3521a:	ldrd	r7, fp, [sp, #24]
   3521e:	ldr	r3, [pc, #204]	; (352ec <XXH64_hashFromCanonical@@Base+0x18a>)
   35220:	add	r3, pc
   35222:	str	r3, [sp, #36]	; 0x24
   35224:	ldr	r3, [sp, #36]	; 0x24
   35226:	ldr.w	r2, [r3], #4
   3522a:	str	r3, [sp, #36]	; 0x24
   3522c:	mov.w	r3, r1, ror #11
   35230:	eor.w	r3, r3, r1, ror #6
   35234:	eor.w	sl, r3, r1, ror #25
   35238:	ldr.w	r3, [r9, lr, lsl #2]
   3523c:	add.w	lr, lr, #1
   35240:	add	r2, r3
   35242:	cmp.w	lr, #64	; 0x40
   35246:	add.w	r3, sl, r2
   3524a:	bic.w	sl, r7, r1
   3524e:	and.w	r2, r1, ip
   35252:	eor.w	r2, sl, r2
   35256:	mov.w	sl, r4, ror #13
   3525a:	add	r2, r3
   3525c:	eor.w	r3, r6, r5
   35260:	add	r2, fp
   35262:	eor.w	sl, sl, r4, ror #2
   35266:	and.w	fp, r6, r5
   3526a:	and.w	r3, r3, r4
   3526e:	eor.w	r3, r3, fp
   35272:	eor.w	sl, sl, r4, ror #22
   35276:	add	sl, r3
   35278:	mov	fp, r7
   3527a:	add.w	r3, r2, r8
   3527e:	add	r2, sl
   35280:	mov	r8, r5
   35282:	str	r3, [sp, #32]
   35284:	bne.n	352d0 <XXH64_hashFromCanonical@@Base+0x16e>
   35286:	ldr	r3, [sp, #0]
   35288:	add	r3, r2
   3528a:	str	r3, [r0, #0]
   3528c:	ldr	r3, [sp, #4]
   3528e:	ldr	r2, [sp, #32]
   35290:	add	r3, r4
   35292:	str	r3, [r0, #4]
   35294:	ldr	r3, [sp, #8]
   35296:	add	r3, r6
   35298:	str	r3, [r0, #8]
   3529a:	ldr	r3, [sp, #12]
   3529c:	add	r3, r5
   3529e:	str	r3, [r0, #12]
   352a0:	ldr	r3, [sp, #16]
   352a2:	add	r3, r2
   352a4:	str	r3, [r0, #16]
   352a6:	ldr	r3, [sp, #20]
   352a8:	ldr	r2, [pc, #68]	; (352f0 <XXH64_hashFromCanonical@@Base+0x18e>)
   352aa:	add	r3, r1
   352ac:	str	r3, [r0, #20]
   352ae:	ldr	r3, [sp, #24]
   352b0:	add	r2, pc
   352b2:	add	r3, ip
   352b4:	str	r3, [r0, #24]
   352b6:	ldr	r3, [sp, #28]
   352b8:	add	r3, r7
   352ba:	str	r3, [r0, #28]
   352bc:	movs	r3, #0
   352be:	strh	r3, [r0, #40]	; 0x28
   352c0:	ldr	r3, [pc, #36]	; (352e8 <XXH64_hashFromCanonical@@Base+0x186>)
   352c2:	ldr	r3, [r2, r3]
   352c4:	ldr	r2, [r3, #0]
   352c6:	ldr	r3, [sp, #300]	; 0x12c
   352c8:	eors	r2, r3
   352ca:	beq.n	352de <XXH64_hashFromCanonical@@Base+0x17c>
   352cc:	blx	8708 <__stack_chk_fail@plt>
   352d0:	mov	r7, ip
   352d2:	mov	r5, r6
   352d4:	mov	ip, r1
   352d6:	mov	r6, r4
   352d8:	ldr	r1, [sp, #32]
   352da:	mov	r4, r2
   352dc:	b.n	35224 <XXH64_hashFromCanonical@@Base+0xc2>
   352de:	add	sp, #308	; 0x134
   352e0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   352e4:	ldc2	0, cr0, [r0], {2}
   352e8:	lsls	r0, r5, #8
   352ea:	movs	r0, r0
   352ec:	ldc	0, cr0, [r4], {1}
   352f0:			; <UNDEFINED> instruction: 0xfad00002
   352f4:	push	{r4, lr}
   352f6:	mov	r4, r0
   352f8:	ldrsh.w	r3, [r0, #40]	; 0x28
   352fc:	adds	r2, r3, #1
   352fe:	cmp	r3, #55	; 0x37
   35300:	add	r3, r0
   35302:	sxth	r2, r2
   35304:	strh	r2, [r0, #40]	; 0x28
   35306:	strb.w	r1, [r3, #42]	; 0x2a
   3530a:	ble.n	3531c <XXH64_hashFromCanonical@@Base+0x1ba>
   3530c:	movs	r2, #0
   3530e:	ldrsh.w	r3, [r4, #40]	; 0x28
   35312:	cmp	r3, #63	; 0x3f
   35314:	ble.n	3535a <XXH64_hashFromCanonical@@Base+0x1f8>
   35316:	mov	r0, r4
   35318:	bl	3516c <XXH64_hashFromCanonical@@Base+0xa>
   3531c:	movs	r2, #0
   3531e:	ldrsh.w	r3, [r4, #40]	; 0x28
   35322:	cmp	r3, #55	; 0x37
   35324:	ble.n	35366 <XXH64_hashFromCanonical@@Base+0x204>
   35326:	ldr	r3, [r4, #32]
   35328:	mov	r0, r4
   3532a:	ldrh	r2, [r4, #32]
   3532c:	lsrs	r1, r3, #24
   3532e:	lsrs	r3, r3, #16
   35330:	strb.w	r3, [r4, #99]	; 0x63
   35334:	rev16	r2, r2
   35336:	ldr	r3, [r4, #36]	; 0x24
   35338:	strh.w	r2, [r4, #100]	; 0x64
   3533c:	ldrh	r2, [r4, #36]	; 0x24
   3533e:	strb.w	r1, [r4, #98]	; 0x62
   35342:	lsrs	r1, r3, #24
   35344:	rev16	r2, r2
   35346:	lsrs	r3, r3, #16
   35348:	strb.w	r1, [r4, #102]	; 0x66
   3534c:	strb.w	r3, [r4, #103]	; 0x67
   35350:	strh.w	r2, [r4, #104]	; 0x68
   35354:	ldmia.w	sp!, {r4, lr}
   35358:	b.n	3516c <XXH64_hashFromCanonical@@Base+0xa>
   3535a:	adds	r1, r3, #1
   3535c:	add	r3, r4
   3535e:	strh	r1, [r4, #40]	; 0x28
   35360:	strb.w	r2, [r3, #42]	; 0x2a
   35364:	b.n	3530e <XXH64_hashFromCanonical@@Base+0x1ac>
   35366:	adds	r1, r3, #1
   35368:	add	r3, r4
   3536a:	strh	r1, [r4, #40]	; 0x28
   3536c:	strb.w	r2, [r3, #42]	; 0x2a
   35370:	b.n	3531e <XXH64_hashFromCanonical@@Base+0x1bc>
   35372:	push	{r3, r4, r5, r6, r7, lr}
   35374:	mov	r4, r0
   35376:	ldr	r5, [r0, #108]	; 0x6c
   35378:	mov	r7, r1
   3537a:	mov	r6, r2
   3537c:	cbnz	r5, 3539c <XXH64_hashFromCanonical@@Base+0x23a>
   3537e:	movs	r1, #128	; 0x80
   35380:	bl	352f4 <XXH64_hashFromCanonical@@Base+0x192>
   35384:	add.w	r2, r4, #42	; 0x2a
   35388:	add.w	r1, r4, #106	; 0x6a
   3538c:	strb.w	r5, [r2], #1
   35390:	cmp	r2, r1
   35392:	bne.n	3538c <XXH64_hashFromCanonical@@Base+0x22a>
   35394:	movs	r3, #1
   35396:	strd	r5, r5, [r4, #32]
   3539a:	str	r3, [r4, #108]	; 0x6c
   3539c:	movs	r3, #0
   3539e:	asrs	r2, r3, #2
   353a0:	mvns	r0, r3
   353a2:	and.w	r0, r0, #3
   353a6:	ldr.w	r2, [r4, r2, lsl #2]
   353aa:	lsls	r0, r0, #3
   353ac:	lsr.w	r0, r2, r0
   353b0:	strb	r0, [r7, r3]
   353b2:	adds	r3, #1
   353b4:	cmp	r3, r6
   353b6:	bne.n	3539e <XXH64_hashFromCanonical@@Base+0x23c>
   353b8:	movs	r0, #0
   353ba:	pop	{r3, r4, r5, r6, r7, pc}

000353bc <SHA224Reset@@Base>:
   353bc:	cbz	r0, 353f2 <SHA224Reset@@Base+0x36>
   353be:	ldr	r2, [pc, #56]	; (353f8 <SHA224Reset@@Base+0x3c>)
   353c0:	movs	r3, #0
   353c2:	strd	r3, r3, [r0, #32]
   353c6:	add	r2, pc
   353c8:	strh	r3, [r0, #40]	; 0x28
   353ca:	strd	r3, r3, [r0, #108]	; 0x6c
   353ce:	ldr	r1, [r2, #0]
   353d0:	str	r1, [r0, #0]
   353d2:	ldr	r1, [r2, #4]
   353d4:	str	r1, [r0, #4]
   353d6:	ldr	r1, [r2, #8]
   353d8:	str	r1, [r0, #8]
   353da:	ldr	r1, [r2, #12]
   353dc:	str	r1, [r0, #12]
   353de:	ldr	r1, [r2, #16]
   353e0:	str	r1, [r0, #16]
   353e2:	ldr	r1, [r2, #20]
   353e4:	str	r1, [r0, #20]
   353e6:	ldr	r1, [r2, #24]
   353e8:	str	r1, [r0, #24]
   353ea:	ldr	r2, [r2, #28]
   353ec:	str	r2, [r0, #28]
   353ee:	mov	r0, r3
   353f0:	bx	lr
   353f2:	movs	r0, #1
   353f4:	bx	lr
   353f6:	nop
   353f8:	lsrs	r2, r6, #24
   353fa:	movs	r3, r0

000353fc <SHA224Result@@Base>:
   353fc:	cbz	r0, 35408 <SHA224Result@@Base+0xc>
   353fe:	cbz	r1, 35408 <SHA224Result@@Base+0xc>
   35400:	ldr	r3, [r0, #112]	; 0x70
   35402:	cbnz	r3, 3540a <SHA224Result@@Base+0xe>
   35404:	movs	r2, #28
   35406:	b.n	35372 <XXH64_hashFromCanonical@@Base+0x210>
   35408:	movs	r3, #1
   3540a:	mov	r0, r3
   3540c:	bx	lr

0003540e <SHA256Reset@@Base>:
   3540e:	cbz	r0, 35444 <SHA256Reset@@Base+0x36>
   35410:	ldr	r2, [pc, #52]	; (35448 <SHA256Reset@@Base+0x3a>)
   35412:	movs	r3, #0
   35414:	strd	r3, r3, [r0, #32]
   35418:	add	r2, pc
   3541a:	strh	r3, [r0, #40]	; 0x28
   3541c:	strd	r3, r3, [r0, #108]	; 0x6c
   35420:	ldr	r1, [r2, #32]
   35422:	str	r1, [r0, #0]
   35424:	ldr	r1, [r2, #36]	; 0x24
   35426:	str	r1, [r0, #4]
   35428:	ldr	r1, [r2, #40]	; 0x28
   3542a:	str	r1, [r0, #8]
   3542c:	ldr	r1, [r2, #44]	; 0x2c
   3542e:	str	r1, [r0, #12]
   35430:	ldr	r1, [r2, #48]	; 0x30
   35432:	str	r1, [r0, #16]
   35434:	ldr	r1, [r2, #52]	; 0x34
   35436:	str	r1, [r0, #20]
   35438:	ldr	r1, [r2, #56]	; 0x38
   3543a:	str	r1, [r0, #24]
   3543c:	ldr	r2, [r2, #60]	; 0x3c
   3543e:	str	r2, [r0, #28]
   35440:	mov	r0, r3
   35442:	bx	lr
   35444:	movs	r0, #1
   35446:	bx	lr
   35448:	lsrs	r0, r4, #23
   3544a:	movs	r3, r0

0003544c <SHA256Input@@Base>:
   3544c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   35450:	mov	r4, r0
   35452:	cmp	r0, #0
   35454:	beq.n	354c2 <SHA256Input@@Base+0x76>
   35456:	cmp	r2, #0
   35458:	beq.n	354be <SHA256Input@@Base+0x72>
   3545a:	cmp	r1, #0
   3545c:	beq.n	354c2 <SHA256Input@@Base+0x76>
   3545e:	ldr	r3, [r0, #108]	; 0x6c
   35460:	cbz	r3, 3546a <SHA256Input@@Base+0x1e>
   35462:	movs	r0, #3
   35464:	str	r0, [r4, #112]	; 0x70
   35466:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   3546a:	ldr	r0, [r0, #112]	; 0x70
   3546c:	cmp	r0, #0
   3546e:	bne.n	35466 <SHA256Input@@Base+0x1a>
   35470:	adds	r6, r1, r2
   35472:	mov	r5, r1
   35474:	movs	r7, #8
   35476:	mov.w	r8, #2
   3547a:	cmp	r5, r6
   3547c:	bne.n	35482 <SHA256Input@@Base+0x36>
   3547e:	ldr	r0, [r4, #112]	; 0x70
   35480:	b.n	35466 <SHA256Input@@Base+0x1a>
   35482:	ldrsh.w	r3, [r4, #40]	; 0x28
   35486:	adds	r2, r3, #1
   35488:	add	r3, r4
   3548a:	sxth	r2, r2
   3548c:	strh	r2, [r4, #40]	; 0x28
   3548e:	ldrb.w	r1, [r5], #1
   35492:	strb.w	r1, [r3, #42]	; 0x2a
   35496:	ldr	r3, [r4, #36]	; 0x24
   35498:	adds	r3, r3, r7
   3549a:	str	r3, [r4, #36]	; 0x24
   3549c:	bcc.n	354ac <SHA256Input@@Base+0x60>
   3549e:	ldr	r3, [r4, #32]
   354a0:	adds	r3, #1
   354a2:	str	r3, [r4, #32]
   354a4:	cbnz	r3, 354ac <SHA256Input@@Base+0x60>
   354a6:	str.w	r8, [r4, #112]	; 0x70
   354aa:	b.n	3547a <SHA256Input@@Base+0x2e>
   354ac:	ldr	r3, [r4, #112]	; 0x70
   354ae:	cmp	r3, #0
   354b0:	bne.n	3547a <SHA256Input@@Base+0x2e>
   354b2:	cmp	r2, #64	; 0x40
   354b4:	bne.n	3547a <SHA256Input@@Base+0x2e>
   354b6:	mov	r0, r4
   354b8:	bl	3516c <XXH64_hashFromCanonical@@Base+0xa>
   354bc:	b.n	3547a <SHA256Input@@Base+0x2e>
   354be:	mov	r0, r2
   354c0:	b.n	35466 <SHA256Input@@Base+0x1a>
   354c2:	movs	r0, #1
   354c4:	b.n	35466 <SHA256Input@@Base+0x1a>

000354c6 <SHA224Input@@Base>:
   354c6:	b.w	3544c <SHA256Input@@Base>

000354ca <SHA256FinalBits@@Base>:
   354ca:	push	{r4, lr}
   354cc:	mov	r4, r0
   354ce:	cbz	r0, 35534 <SHA256FinalBits@@Base+0x6a>
   354d0:	cbz	r2, 35538 <SHA256FinalBits@@Base+0x6e>
   354d2:	ldr	r0, [r0, #112]	; 0x70
   354d4:	cbnz	r0, 354de <SHA256FinalBits@@Base+0x14>
   354d6:	ldr	r0, [r4, #108]	; 0x6c
   354d8:	cbz	r0, 354e0 <SHA256FinalBits@@Base+0x16>
   354da:	movs	r0, #3
   354dc:	str	r0, [r4, #112]	; 0x70
   354de:	pop	{r4, pc}
   354e0:	cmp	r2, #7
   354e2:	bls.n	354e8 <SHA256FinalBits@@Base+0x1e>
   354e4:	movs	r0, #4
   354e6:	b.n	354dc <SHA256FinalBits@@Base+0x12>
   354e8:	ldr	r3, [r4, #36]	; 0x24
   354ea:	adds	r3, r2, r3
   354ec:	str	r3, [r4, #36]	; 0x24
   354ee:	bcc.n	354fc <SHA256FinalBits@@Base+0x32>
   354f0:	ldr	r3, [r4, #32]
   354f2:	adds	r3, #1
   354f4:	str	r3, [r4, #32]
   354f6:	cmp	r3, #0
   354f8:	it	eq
   354fa:	moveq	r0, #2
   354fc:	ldr	r3, [pc, #60]	; (3553c <SHA256FinalBits@@Base+0x72>)
   354fe:	str	r0, [r4, #112]	; 0x70
   35500:	mov	r0, r4
   35502:	add	r3, pc
   35504:	add	r2, r3
   35506:	ldrb.w	r3, [r2, #256]	; 0x100
   3550a:	ands	r1, r3
   3550c:	ldrb.w	r3, [r2, #264]	; 0x108
   35510:	orrs	r1, r3
   35512:	bl	352f4 <XXH64_hashFromCanonical@@Base+0x192>
   35516:	add.w	r2, r4, #42	; 0x2a
   3551a:	add.w	r1, r4, #106	; 0x6a
   3551e:	movs	r3, #0
   35520:	strb.w	r3, [r2], #1
   35524:	cmp	r1, r2
   35526:	bne.n	35520 <SHA256FinalBits@@Base+0x56>
   35528:	strd	r3, r3, [r4, #32]
   3552c:	movs	r3, #1
   3552e:	ldr	r0, [r4, #112]	; 0x70
   35530:	str	r3, [r4, #108]	; 0x6c
   35532:	b.n	354de <SHA256FinalBits@@Base+0x14>
   35534:	movs	r0, #1
   35536:	b.n	354de <SHA256FinalBits@@Base+0x14>
   35538:	mov	r0, r2
   3553a:	b.n	354de <SHA256FinalBits@@Base+0x14>
   3553c:			; <UNDEFINED> instruction: 0xe9b20001

00035540 <SHA224FinalBits@@Base>:
   35540:	b.w	354ca <SHA256FinalBits@@Base>

00035544 <SHA256Result@@Base>:
   35544:	cbz	r0, 35550 <SHA256Result@@Base+0xc>
   35546:	cbz	r1, 35550 <SHA256Result@@Base+0xc>
   35548:	ldr	r3, [r0, #112]	; 0x70
   3554a:	cbnz	r3, 35552 <SHA256Result@@Base+0xe>
   3554c:	movs	r2, #32
   3554e:	b.n	35372 <XXH64_hashFromCanonical@@Base+0x210>
   35550:	movs	r3, #1
   35552:	mov	r0, r3
   35554:	bx	lr
   35556:	nop
   35558:	mov	r3, r0
   3555a:	ldr	r0, [r0, #0]
   3555c:	ldr	r1, [r3, #4]
   3555e:	bx	lr
   35560:	ldr	r2, [pc, #952]	; (3591c <SHA256Result@@Base+0x3d8>)
   35562:	ldr	r3, [pc, #956]	; (35920 <SHA256Result@@Base+0x3dc>)
   35564:	add	r2, pc
   35566:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3556a:	sub.w	sp, sp, #540	; 0x21c
   3556e:	ldr	r3, [r2, r3]
   35570:	add	r5, sp, #272	; 0x110
   35572:	add.w	r7, r1, #128	; 0x80
   35576:	mov	fp, r0
   35578:	ldr	r3, [r3, #0]
   3557a:	str	r3, [sp, #532]	; 0x214
   3557c:	mov.w	r3, #0
   35580:	mov	r2, r1
   35582:	mov	r4, r5
   35584:	mov	r0, r2
   35586:	bl	35558 <SHA256Result@@Base+0x14>
   3558a:	adds	r2, #8
   3558c:	strd	r0, r1, [r5], #8
   35590:	cmp	r2, r7
   35592:	bne.n	35584 <SHA256Result@@Base+0x40>
   35594:	sub.w	r3, fp, #8
   35598:	str	r3, [sp, #132]	; 0x84
   3559a:	add	r3, sp, #400	; 0x190
   3559c:	str	r3, [sp, #136]	; 0x88
   3559e:	ldrd	r1, r0, [sp, #132]	; 0x84
   355a2:	add.w	r3, fp, #56	; 0x38
   355a6:	str	r3, [sp, #140]	; 0x8c
   355a8:	ldrd	r2, r3, [r1, #8]!
   355ac:	strd	r2, r3, [r0], #8
   355b0:	ldr	r3, [sp, #140]	; 0x8c
   355b2:	cmp	r1, r3
   355b4:	bne.n	355a8 <SHA256Result@@Base+0x64>
   355b6:	ldr	r3, [sp, #272]	; 0x110
   355b8:	ldrd	r8, r0, [sp, #432]	; 0x1b0
   355bc:	ldr	r7, [sp, #400]	; 0x190
   355be:	str	r3, [sp, #4]
   355c0:	ldr	r3, [sp, #276]	; 0x114
   355c2:	adds.w	r7, r8, r7
   355c6:	ldr	r6, [r4, #8]
   355c8:	str	r3, [sp, #8]
   355ca:	ldr	r3, [sp, #404]	; 0x194
   355cc:	str	r6, [sp, #12]
   355ce:	adc.w	r9, r0, r3
   355d2:	ldr	r3, [sp, #4]
   355d4:	ldr	r6, [r4, #12]
   355d6:	adds	r7, r7, r3
   355d8:	ldr	r3, [sp, #8]
   355da:	adc.w	r9, r9, r3
   355de:	ldrd	r3, r2, [fp, #64]	; 0x40
   355e2:	str	r6, [sp, #16]
   355e4:	eor.w	r2, r9, r2
   355e8:	eor.w	r5, r7, r3
   355ec:	eor.w	r1, r2, #1358954496	; 0x51000000
   355f0:	eor.w	r3, r5, #2902458368	; 0xad000000
   355f4:	eor.w	r1, r1, #937984	; 0xe5000
   355f8:	ldr	r2, [pc, #768]	; (358fc <SHA256Result@@Base+0x3b8>)
   355fa:	eor.w	r1, r1, #636	; 0x27c
   355fe:	eor.w	r3, r3, #15073280	; 0xe60000
   35602:	eor.w	r1, r1, #3
   35606:	ldr	r5, [pc, #760]	; (35900 <SHA256Result@@Base+0x3bc>)
   35608:	eor.w	r3, r3, #33280	; 0x8200
   3560c:	adds	r2, r1, r2
   3560e:	eor.w	r3, r3, #209	; 0xd1
   35612:	eor.w	r8, r8, r2
   35616:	adc.w	r5, r3, r5
   3561a:	ldr	r6, [sp, #12]
   3561c:	eor.w	ip, r0, r5
   35620:	mov.w	sl, r8, lsr #24
   35624:	adds	r7, r7, r6
   35626:	ldr	r6, [sp, #16]
   35628:	orr.w	lr, sl, ip, lsl #8
   3562c:	mov.w	r0, ip, lsr #24
   35630:	orr.w	r0, r0, r8, lsl #8
   35634:	adc.w	r9, r9, r6
   35638:	adds.w	r6, r7, lr
   3563c:	str	r6, [sp, #76]	; 0x4c
   3563e:	adc.w	r6, r9, r0
   35642:	str	r6, [sp, #80]	; 0x50
   35644:	ldr	r6, [sp, #76]	; 0x4c
   35646:	eors	r1, r6
   35648:	ldr	r6, [sp, #80]	; 0x50
   3564a:	eors	r3, r6
   3564c:	lsrs	r7, r1, #16
   3564e:	orr.w	r6, r7, r3, lsl #16
   35652:	lsrs	r3, r3, #16
   35654:	orr.w	r3, r3, r1, lsl #16
   35658:	str	r3, [sp, #168]	; 0xa8
   3565a:	adds	r3, r2, r6
   3565c:	str	r3, [sp, #108]	; 0x6c
   3565e:	ldr	r3, [sp, #168]	; 0xa8
   35660:	str	r6, [sp, #104]	; 0x68
   35662:	adc.w	r3, r5, r3
   35666:	str	r3, [sp, #112]	; 0x70
   35668:	ldr	r3, [sp, #108]	; 0x6c
   3566a:	eor.w	lr, r3, lr
   3566e:	ldr	r3, [sp, #112]	; 0x70
   35670:	eors	r0, r3
   35672:	lsls	r3, r0, #1
   35674:	orr.w	r3, r3, lr, lsr #31
   35678:	mov.w	lr, lr, lsl #1
   3567c:	str	r3, [sp, #196]	; 0xc4
   3567e:	orr.w	r3, lr, r0, lsr #31
   35682:	str	r3, [sp, #192]	; 0xc0
   35684:	ldrd	r9, ip, [sp, #440]	; 0x1b8
   35688:	ldr	r3, [r4, #16]
   3568a:	ldr	r2, [sp, #408]	; 0x198
   3568c:	ldr	r7, [sp, #412]	; 0x19c
   3568e:	str	r3, [sp, #20]
   35690:	adds.w	r2, r9, r2
   35694:	ldr	r3, [r4, #20]
   35696:	adc.w	r7, ip, r7
   3569a:	ldr	r6, [r4, #24]
   3569c:	str	r3, [sp, #24]
   3569e:	ldr	r3, [sp, #20]
   356a0:	str	r6, [sp, #28]
   356a2:	adds	r2, r2, r3
   356a4:	ldr	r3, [sp, #24]
   356a6:	ldr	r6, [r4, #28]
   356a8:	adc.w	r7, r3, r7
   356ac:	ldrd	r3, r1, [fp, #72]	; 0x48
   356b0:	eor.w	r0, r7, r1
   356b4:	eors	r3, r2
   356b6:	eor.w	r5, r0, #2600468480	; 0x9b000000
   356ba:	eor.w	r1, r3, #721420288	; 0x2b000000
   356be:	eor.w	r5, r5, #354304	; 0x56800
   356c2:	ldr	r3, [pc, #576]	; (35904 <SHA256Result@@Base+0x3c0>)
   356c4:	eor.w	r1, r1, #4079616	; 0x3e4000
   356c8:	eor.w	r5, r5, #140	; 0x8c
   356cc:	ldr	r0, [pc, #568]	; (35908 <SHA256Result@@Base+0x3c4>)
   356ce:	eor.w	r1, r1, #11264	; 0x2c00
   356d2:	adds	r3, r5, r3
   356d4:	eor.w	r1, r1, #31
   356d8:	adc.w	r0, r1, r0
   356dc:	eor.w	r9, r9, r3
   356e0:	str	r6, [sp, #32]
   356e2:	eor.w	ip, ip, r0
   356e6:	ldr	r6, [sp, #28]
   356e8:	mov.w	sl, r9, lsr #24
   356ec:	orr.w	r8, sl, ip, lsl #8
   356f0:	mov.w	ip, ip, lsr #24
   356f4:	adds	r2, r2, r6
   356f6:	ldr	r6, [sp, #32]
   356f8:	orr.w	lr, ip, r9, lsl #8
   356fc:	adc.w	r7, r6, r7
   35700:	adds.w	r2, r2, r8
   35704:	str	r2, [sp, #92]	; 0x5c
   35706:	adc.w	r2, r7, lr
   3570a:	str	r2, [sp, #96]	; 0x60
   3570c:	ldr	r2, [sp, #92]	; 0x5c
   3570e:	eors	r5, r2
   35710:	ldr	r2, [sp, #96]	; 0x60
   35712:	eors	r1, r2
   35714:	lsrs	r2, r5, #16
   35716:	orr.w	r2, r2, r1, lsl #16
   3571a:	lsrs	r1, r1, #16
   3571c:	str	r2, [sp, #184]	; 0xb8
   3571e:	orr.w	r2, r1, r5, lsl #16
   35722:	str	r2, [sp, #188]	; 0xbc
   35724:	ldr	r2, [sp, #184]	; 0xb8
   35726:	adds	r3, r3, r2
   35728:	str	r3, [sp, #124]	; 0x7c
   3572a:	ldr	r3, [sp, #188]	; 0xbc
   3572c:	adc.w	r3, r0, r3
   35730:	str	r3, [sp, #128]	; 0x80
   35732:	ldr	r3, [sp, #124]	; 0x7c
   35734:	eor.w	r8, r3, r8
   35738:	ldr	r3, [sp, #128]	; 0x80
   3573a:	eor.w	lr, r3, lr
   3573e:	mov.w	r3, lr, lsl #1
   35742:	orr.w	r3, r3, r8, lsr #31
   35746:	mov.w	r8, r8, lsl #1
   3574a:	str	r3, [sp, #88]	; 0x58
   3574c:	orr.w	r3, r8, lr, lsr #31
   35750:	str	r3, [sp, #84]	; 0x54
   35752:	ldrd	r8, r7, [sp, #448]	; 0x1c0
   35756:	ldr	r3, [r4, #32]
   35758:	ldr	r2, [sp, #420]	; 0x1a4
   3575a:	ldr	r6, [r4, #40]	; 0x28
   3575c:	str	r3, [sp, #36]	; 0x24
   3575e:	ldr	r3, [r4, #36]	; 0x24
   35760:	ldr	r1, [sp, #36]	; 0x24
   35762:	str	r6, [sp, #44]	; 0x2c
   35764:	str	r3, [sp, #40]	; 0x28
   35766:	ldr	r3, [sp, #416]	; 0x1a0
   35768:	ldr	r6, [r4, #44]	; 0x2c
   3576a:	adds.w	r3, r8, r3
   3576e:	adc.w	r2, r7, r2
   35772:	adds	r3, r3, r1
   35774:	ldr	r1, [sp, #40]	; 0x28
   35776:	str	r6, [sp, #48]	; 0x30
   35778:	adc.w	ip, r2, r1
   3577c:	ldrd	r2, r1, [fp, #80]	; 0x50
   35780:	ldr	r6, [sp, #44]	; 0x2c
   35782:	eor.w	r5, ip, r1
   35786:	eors	r2, r3
   35788:	eor.w	r0, r5, #528482304	; 0x1f800000
   3578c:	eor.w	r1, r2, #4211081216	; 0xfb000000
   35790:	eor.w	r0, r0, #251904	; 0x3d800
   35794:	ldr	r2, [pc, #372]	; (3590c <SHA256Result@@Base+0x3c8>)
   35796:	eor.w	r0, r0, #426	; 0x1aa
   3579a:	eor.w	r1, r1, #4292608	; 0x418000
   3579e:	eor.w	r0, r0, #1
   357a2:	ldr	r5, [pc, #364]	; (35910 <SHA256Result@@Base+0x3cc>)
   357a4:	eor.w	r1, r1, #15680	; 0x3d40
   357a8:	adds	r2, r0, r2
   357aa:	eor.w	r1, r1, #43	; 0x2b
   357ae:	eor.w	r8, r8, r2
   357b2:	adc.w	r5, r1, r5
   357b6:	adds	r3, r3, r6
   357b8:	eor.w	lr, r7, r5
   357bc:	ldr	r6, [sp, #48]	; 0x30
   357be:	mov.w	sl, r8, lsr #24
   357c2:	orr.w	r7, sl, lr, lsl #8
   357c6:	mov.w	lr, lr, lsr #24
   357ca:	orr.w	r9, lr, r8, lsl #8
   357ce:	adc.w	ip, ip, r6
   357d2:	adds	r3, r3, r7
   357d4:	str	r3, [sp, #116]	; 0x74
   357d6:	adc.w	r3, ip, r9
   357da:	str	r3, [sp, #120]	; 0x78
   357dc:	ldr	r3, [sp, #116]	; 0x74
   357de:	ldrd	sl, r8, [sp, #456]	; 0x1c8
   357e2:	eors	r0, r3
   357e4:	ldr	r3, [sp, #120]	; 0x78
   357e6:	eors	r1, r3
   357e8:	lsrs	r3, r0, #16
   357ea:	orr.w	r3, r3, r1, lsl #16
   357ee:	lsrs	r1, r1, #16
   357f0:	str	r3, [sp, #200]	; 0xc8
   357f2:	orr.w	r3, r1, r0, lsl #16
   357f6:	str	r3, [sp, #204]	; 0xcc
   357f8:	ldr	r3, [sp, #200]	; 0xc8
   357fa:	adds	r2, r2, r3
   357fc:	ldr	r3, [sp, #204]	; 0xcc
   357fe:	eor.w	r7, r7, r2
   35802:	adc.w	r5, r3, r5
   35806:	eor.w	r9, r5, r9
   3580a:	mov.w	r3, r9, lsl #1
   3580e:	orr.w	r3, r3, r7, lsr #31
   35812:	lsls	r7, r7, #1
   35814:	str	r3, [sp, #176]	; 0xb0
   35816:	orr.w	r3, r7, r9, lsr #31
   3581a:	str	r3, [sp, #172]	; 0xac
   3581c:	ldr	r3, [r4, #48]	; 0x30
   3581e:	str	r3, [sp, #52]	; 0x34
   35820:	ldr	r3, [r4, #52]	; 0x34
   35822:	str	r3, [sp, #56]	; 0x38
   35824:	ldr	r1, [sp, #424]	; 0x1a8
   35826:	ldr	r3, [sp, #428]	; 0x1ac
   35828:	adds.w	r1, sl, r1
   3582c:	adc.w	r9, r8, r3
   35830:	ldr	r3, [sp, #52]	; 0x34
   35832:	adds	r1, r1, r3
   35834:	ldr	r3, [sp, #56]	; 0x38
   35836:	adc.w	r9, r9, r3
   3583a:	ldrd	r3, r0, [fp, #88]	; 0x58
   3583e:	eor.w	r0, r9, r0
   35842:	eors	r3, r1
   35844:	eor.w	r7, r0, #1535115264	; 0x5b800000
   35848:	eor.w	r6, r3, #325058560	; 0x13600000
   3584c:	eor.w	r7, r7, #6324224	; 0x608000
   35850:	ldr	r3, [pc, #192]	; (35914 <SHA256Result@@Base+0x3d0>)
   35852:	eor.w	r7, r7, #19712	; 0x4d00
   35856:	eor.w	r6, r6, #1974272	; 0x1e2000
   3585a:	eor.w	r7, r7, #25
   3585e:	ldr	r0, [pc, #184]	; (35918 <SHA256Result@@Base+0x3d4>)
   35860:	adds	r3, r7, r3
   35862:	str	r3, [sp, #68]	; 0x44
   35864:	eor.w	sl, sl, r3
   35868:	ldr	r3, [r4, #56]	; 0x38
   3586a:	eor.w	r6, r6, #376	; 0x178
   3586e:	eor.w	r6, r6, #1
   35872:	mov.w	fp, sl, lsr #24
   35876:	str	r3, [sp, #60]	; 0x3c
   35878:	adc.w	r0, r6, r0
   3587c:	ldr	r3, [r4, #60]	; 0x3c
   3587e:	eor.w	r8, r8, r0
   35882:	orr.w	ip, fp, r8, lsl #8
   35886:	mov.w	lr, r8, lsr #24
   3588a:	str	r3, [sp, #64]	; 0x40
   3588c:	orr.w	lr, lr, sl, lsl #8
   35890:	ldr	r3, [sp, #60]	; 0x3c
   35892:	adds	r1, r1, r3
   35894:	ldr	r3, [sp, #64]	; 0x40
   35896:	adc.w	r9, r9, r3
   3589a:	adds.w	r3, r1, ip
   3589e:	str	r3, [sp, #144]	; 0x90
   358a0:	adc.w	r3, r9, lr
   358a4:	str	r3, [sp, #148]	; 0x94
   358a6:	ldr	r3, [sp, #144]	; 0x90
   358a8:	eors	r7, r3
   358aa:	ldr	r3, [sp, #148]	; 0x94
   358ac:	eors	r6, r3
   358ae:	lsrs	r1, r7, #16
   358b0:	ldr	r3, [sp, #68]	; 0x44
   358b2:	orr.w	r8, r1, r6, lsl #16
   358b6:	lsrs	r6, r6, #16
   358b8:	adds.w	r3, r3, r8
   358bc:	orr.w	sl, r6, r7, lsl #16
   358c0:	adc.w	r0, r0, sl
   358c4:	eor.w	ip, r3, ip
   358c8:	eor.w	lr, r0, lr
   358cc:	str	r3, [sp, #100]	; 0x64
   358ce:	mov.w	r1, lr, lsl #1
   358d2:	orr.w	fp, r1, ip, lsr #31
   358d6:	mov.w	ip, ip, lsl #1
   358da:	orr.w	r1, ip, lr, lsr #31
   358de:	str	r1, [sp, #208]	; 0xd0
   358e0:	ldr	r1, [r4, #64]	; 0x40
   358e2:	str	r1, [sp, #68]	; 0x44
   358e4:	ldr	r1, [r4, #68]	; 0x44
   358e6:	ldr	r6, [sp, #68]	; 0x44
   358e8:	str	r1, [sp, #72]	; 0x48
   358ea:	ldr	r1, [sp, #76]	; 0x4c
   358ec:	ldr	r7, [sp, #72]	; 0x48
   358ee:	adds	r1, r1, r6
   358f0:	ldr	r6, [sp, #80]	; 0x50
   358f2:	adc.w	r9, r6, r7
   358f6:	ldr	r6, [sp, #84]	; 0x54
   358f8:	adds	r1, r1, r6
   358fa:	b.n	35924 <SHA256Result@@Base+0x3e0>
   358fc:	ldmia	r1!, {r3}
   358fe:	bfcsel	e, 365ce <SHA256Result@@Base+0x108a>, 10, <und>
   35902:	ldr	r1, [r1, #32]
   35904:	add	r7, pc, #236	; (adr r7, 359f4 <SHA256Result@@Base+0x4b0>)
   35906:	strh	r2, [r1, #38]	; 0x26
   35908:	add	r6, sp, #532	; 0x214
   3590a:	cbnz	r7, 35966 <SHA256Result@@Base+0x422>
   3590c:	strht	pc, [fp, #148]
   35910:			; <UNDEFINED> instruction: 0xf3723c6e
   35914:	adds	r6, #241	; 0xf1
   35916:	ldrsh	r5, [r3, r4]
   35918:	bmi.w	fffb03ba <__bss_end__@@Base+0xfff4a0c6>
   3591c:	ldrb.w	r0, [ip, r2]
   35920:	lsls	r0, r5, #8
   35922:	movs	r0, r0
   35924:	ldr	r6, [sp, #88]	; 0x58
   35926:	eor.w	r7, r1, r8
   3592a:	adc.w	r9, r9, r6
   3592e:	ldr	r6, [sp, #84]	; 0x54
   35930:	eor.w	lr, r9, sl
   35934:	adds.w	r2, r2, lr
   35938:	eor.w	r8, r2, r6
   3593c:	ldr	r6, [sp, #88]	; 0x58
   3593e:	ldr	r3, [r4, #72]	; 0x48
   35940:	adc.w	r5, r7, r5
   35944:	eor.w	ip, r5, r6
   35948:	mov.w	r6, r8, lsr #24
   3594c:	str	r3, [sp, #76]	; 0x4c
   3594e:	orr.w	r6, r6, ip, lsl #8
   35952:	ldr	r3, [r4, #76]	; 0x4c
   35954:	mov.w	ip, ip, lsr #24
   35958:	orr.w	sl, ip, r8, lsl #8
   3595c:	str	r3, [sp, #80]	; 0x50
   3595e:	ldr	r3, [sp, #76]	; 0x4c
   35960:	adds	r1, r1, r3
   35962:	ldr	r3, [sp, #80]	; 0x50
   35964:	adc.w	r9, r9, r3
   35968:	adds	r3, r1, r6
   3596a:	str	r3, [sp, #152]	; 0x98
   3596c:	adc.w	r3, r9, sl
   35970:	str	r3, [sp, #156]	; 0x9c
   35972:	ldr	r3, [sp, #152]	; 0x98
   35974:	eor.w	lr, r3, lr
   35978:	ldr	r3, [sp, #156]	; 0x9c
   3597a:	eors	r7, r3
   3597c:	mov.w	r1, lr, lsr #16
   35980:	orr.w	r3, r1, r7, lsl #16
   35984:	lsrs	r7, r7, #16
   35986:	str	r3, [sp, #212]	; 0xd4
   35988:	orr.w	r3, r7, lr, lsl #16
   3598c:	str	r3, [sp, #216]	; 0xd8
   3598e:	ldr	r3, [sp, #212]	; 0xd4
   35990:	adds	r3, r2, r3
   35992:	str	r3, [sp, #160]	; 0xa0
   35994:	ldr	r3, [sp, #216]	; 0xd8
   35996:	adc.w	r3, r5, r3
   3599a:	str	r3, [sp, #164]	; 0xa4
   3599c:	ldr	r3, [sp, #160]	; 0xa0
   3599e:	eors	r6, r3
   359a0:	ldr	r3, [sp, #164]	; 0xa4
   359a2:	eor.w	sl, r3, sl
   359a6:	mov.w	r2, sl, lsl #1
   359aa:	orr.w	r3, r2, r6, lsr #31
   359ae:	lsls	r6, r6, #1
   359b0:	str	r3, [sp, #224]	; 0xe0
   359b2:	orr.w	r3, r6, sl, lsr #31
   359b6:	str	r3, [sp, #220]	; 0xdc
   359b8:	ldr	r3, [r4, #80]	; 0x50
   359ba:	str	r3, [sp, #84]	; 0x54
   359bc:	ldr	r3, [r4, #84]	; 0x54
   359be:	ldr	r2, [sp, #84]	; 0x54
   359c0:	str	r3, [sp, #88]	; 0x58
   359c2:	ldr	r3, [sp, #92]	; 0x5c
   359c4:	ldr	r1, [sp, #88]	; 0x58
   359c6:	adds	r2, r3, r2
   359c8:	ldr	r3, [sp, #96]	; 0x60
   359ca:	adc.w	r6, r3, r1
   359ce:	ldr	r3, [sp, #172]	; 0xac
   359d0:	adds	r2, r2, r3
   359d2:	ldr	r3, [sp, #176]	; 0xb0
   359d4:	adc.w	r6, r3, r6
   359d8:	ldr	r3, [sp, #168]	; 0xa8
   359da:	eor.w	r5, r6, r3
   359de:	ldr	r3, [sp, #104]	; 0x68
   359e0:	eor.w	r1, r2, r3
   359e4:	ldr	r3, [sp, #100]	; 0x64
   359e6:	ldr	r7, [sp, #172]	; 0xac
   359e8:	adds.w	sl, r3, r5
   359ec:	ldr	r3, [r4, #88]	; 0x58
   359ee:	eor.w	r8, sl, r7
   359f2:	ldr	r7, [sp, #176]	; 0xb0
   359f4:	adc.w	r0, r1, r0
   359f8:	str	r3, [sp, #92]	; 0x5c
   359fa:	eor.w	ip, r0, r7
   359fe:	ldr	r3, [r4, #92]	; 0x5c
   35a00:	mov.w	r9, r8, lsr #24
   35a04:	orr.w	r7, r9, ip, lsl #8
   35a08:	mov.w	ip, ip, lsr #24
   35a0c:	orr.w	lr, ip, r8, lsl #8
   35a10:	str	r3, [sp, #96]	; 0x60
   35a12:	ldr	r3, [sp, #92]	; 0x5c
   35a14:	adds	r2, r2, r3
   35a16:	ldr	r3, [sp, #96]	; 0x60
   35a18:	adc.w	r6, r3, r6
   35a1c:	adds	r3, r2, r7
   35a1e:	str	r3, [sp, #168]	; 0xa8
   35a20:	adc.w	r3, r6, lr
   35a24:	str	r3, [sp, #172]	; 0xac
   35a26:	ldr	r3, [sp, #168]	; 0xa8
   35a28:	eors	r5, r3
   35a2a:	ldr	r3, [sp, #172]	; 0xac
   35a2c:	eors	r1, r3
   35a2e:	lsrs	r2, r5, #16
   35a30:	orr.w	r3, r2, r1, lsl #16
   35a34:	lsrs	r1, r1, #16
   35a36:	str	r3, [sp, #228]	; 0xe4
   35a38:	orr.w	r3, r1, r5, lsl #16
   35a3c:	str	r3, [sp, #232]	; 0xe8
   35a3e:	ldr	r3, [sp, #228]	; 0xe4
   35a40:	adds.w	r3, sl, r3
   35a44:	str	r3, [sp, #176]	; 0xb0
   35a46:	ldr	r3, [sp, #232]	; 0xe8
   35a48:	adc.w	r3, r0, r3
   35a4c:	str	r3, [sp, #180]	; 0xb4
   35a4e:	ldr	r3, [sp, #176]	; 0xb0
   35a50:	eors	r7, r3
   35a52:	ldr	r3, [sp, #180]	; 0xb4
   35a54:	eor.w	lr, r3, lr
   35a58:	mov.w	r3, lr, lsl #1
   35a5c:	orr.w	r3, r3, r7, lsr #31
   35a60:	lsls	r7, r7, #1
   35a62:	str	r3, [sp, #240]	; 0xf0
   35a64:	orr.w	r3, r7, lr, lsr #31
   35a68:	str	r3, [sp, #236]	; 0xec
   35a6a:	ldr	r3, [r4, #96]	; 0x60
   35a6c:	str	r3, [sp, #100]	; 0x64
   35a6e:	ldr	r3, [r4, #100]	; 0x64
   35a70:	ldr	r2, [sp, #100]	; 0x64
   35a72:	str	r3, [sp, #104]	; 0x68
   35a74:	ldr	r3, [sp, #116]	; 0x74
   35a76:	ldr	r1, [sp, #104]	; 0x68
   35a78:	adds	r3, r3, r2
   35a7a:	ldr	r2, [sp, #120]	; 0x78
   35a7c:	adc.w	ip, r2, r1
   35a80:	ldr	r2, [sp, #208]	; 0xd0
   35a82:	adds	r3, r3, r2
   35a84:	ldr	r2, [sp, #188]	; 0xbc
   35a86:	adc.w	ip, ip, fp
   35a8a:	ldr	r0, [sp, #112]	; 0x70
   35a8c:	eor.w	r7, ip, r2
   35a90:	ldr	r2, [sp, #184]	; 0xb8
   35a92:	eor.w	r1, r3, r2
   35a96:	ldr	r2, [sp, #108]	; 0x6c
   35a98:	adds	r2, r2, r7
   35a9a:	adc.w	r5, r0, r1
   35a9e:	ldr	r0, [sp, #208]	; 0xd0
   35aa0:	eor.w	lr, r2, r0
   35aa4:	eor.w	r0, r5, fp
   35aa8:	mov.w	r9, lr, lsr #24
   35aac:	orr.w	r8, r9, r0, lsl #8
   35ab0:	lsrs	r0, r0, #24
   35ab2:	orr.w	r6, r0, lr, lsl #8
   35ab6:	ldr	r0, [r4, #104]	; 0x68
   35ab8:	str	r0, [sp, #108]	; 0x6c
   35aba:	ldr	r0, [r4, #108]	; 0x6c
   35abc:	str	r0, [sp, #112]	; 0x70
   35abe:	ldr	r0, [sp, #108]	; 0x6c
   35ac0:	adds	r3, r3, r0
   35ac2:	ldr	r0, [sp, #112]	; 0x70
   35ac4:	adc.w	ip, ip, r0
   35ac8:	adds.w	r3, r3, r8
   35acc:	str	r3, [sp, #184]	; 0xb8
   35ace:	adc.w	r3, ip, r6
   35ad2:	str	r3, [sp, #188]	; 0xbc
   35ad4:	ldr	r3, [sp, #184]	; 0xb8
   35ad6:	eors	r7, r3
   35ad8:	ldr	r3, [sp, #188]	; 0xbc
   35ada:	eors	r1, r3
   35adc:	lsrs	r3, r7, #16
   35ade:	orr.w	r3, r3, r1, lsl #16
   35ae2:	lsrs	r1, r1, #16
   35ae4:	str	r3, [sp, #208]	; 0xd0
   35ae6:	orr.w	r3, r1, r7, lsl #16
   35aea:	str	r3, [sp, #244]	; 0xf4
   35aec:	ldr	r3, [sp, #208]	; 0xd0
   35aee:	adds	r2, r2, r3
   35af0:	ldr	r3, [sp, #244]	; 0xf4
   35af2:	eor.w	r8, r2, r8
   35af6:	adc.w	r5, r3, r5
   35afa:	eors	r6, r5
   35afc:	lsls	r3, r6, #1
   35afe:	orr.w	r3, r3, r8, lsr #31
   35b02:	mov.w	r8, r8, lsl #1
   35b06:	str	r3, [sp, #252]	; 0xfc
   35b08:	orr.w	r3, r8, r6, lsr #31
   35b0c:	str	r3, [sp, #248]	; 0xf8
   35b0e:	ldr	r3, [r4, #112]	; 0x70
   35b10:	str	r3, [sp, #116]	; 0x74
   35b12:	ldr	r3, [r4, #116]	; 0x74
   35b14:	ldr	r1, [sp, #116]	; 0x74
   35b16:	str	r3, [sp, #120]	; 0x78
   35b18:	ldr	r3, [sp, #144]	; 0x90
   35b1a:	ldr	r0, [sp, #120]	; 0x78
   35b1c:	adds	r1, r3, r1
   35b1e:	ldr	r3, [sp, #148]	; 0x94
   35b20:	adc.w	r9, r3, r0
   35b24:	ldr	r3, [sp, #192]	; 0xc0
   35b26:	adds	r1, r1, r3
   35b28:	ldr	r3, [sp, #196]	; 0xc4
   35b2a:	adc.w	r9, r9, r3
   35b2e:	ldr	r3, [sp, #204]	; 0xcc
   35b30:	eor.w	r7, r9, r3
   35b34:	ldr	r3, [sp, #200]	; 0xc8
   35b36:	ldr	r6, [sp, #192]	; 0xc0
   35b38:	eor.w	sl, r1, r3
   35b3c:	ldr	r3, [sp, #124]	; 0x7c
   35b3e:	ldr	r0, [sp, #128]	; 0x80
   35b40:	adds	r3, r3, r7
   35b42:	eor.w	lr, r3, r6
   35b46:	ldr	r6, [sp, #196]	; 0xc4
   35b48:	adc.w	r0, r0, sl
   35b4c:	eors	r6, r0
   35b4e:	mov.w	fp, lr, lsr #24
   35b52:	orr.w	ip, fp, r6, lsl #8
   35b56:	lsrs	r6, r6, #24
   35b58:	orr.w	r8, r6, lr, lsl #8
   35b5c:	ldr	r6, [r4, #120]	; 0x78
   35b5e:	ldr	r4, [r4, #124]	; 0x7c
   35b60:	adds	r1, r1, r6
   35b62:	str	r6, [sp, #124]	; 0x7c
   35b64:	str	r4, [sp, #128]	; 0x80
   35b66:	ldr	r4, [sp, #128]	; 0x80
   35b68:	adc.w	r9, r9, r4
   35b6c:	adds.w	r1, r1, ip
   35b70:	str	r1, [sp, #144]	; 0x90
   35b72:	adc.w	r1, r9, r8
   35b76:	str	r1, [sp, #148]	; 0x94
   35b78:	ldr	r1, [sp, #144]	; 0x90
   35b7a:	eors	r7, r1
   35b7c:	ldr	r1, [sp, #148]	; 0x94
   35b7e:	eor.w	r1, r1, sl
   35b82:	lsrs	r4, r7, #16
   35b84:	orr.w	fp, r4, r1, lsl #16
   35b88:	mov.w	sl, r1, lsr #16
   35b8c:	adds.w	r3, r3, fp
   35b90:	orr.w	sl, sl, r7, lsl #16
   35b94:	adc.w	r0, r0, sl
   35b98:	eor.w	ip, r3, ip
   35b9c:	eor.w	r8, r0, r8
   35ba0:	ldr	r4, [sp, #116]	; 0x74
   35ba2:	ldr	r7, [sp, #120]	; 0x78
   35ba4:	mov.w	r1, r8, lsl #1
   35ba8:	str	r3, [sp, #192]	; 0xc0
   35baa:	orr.w	r6, r1, ip, lsr #31
   35bae:	ldr	r1, [sp, #152]	; 0x98
   35bb0:	mov.w	ip, ip, lsl #1
   35bb4:	adds	r1, r1, r4
   35bb6:	ldr	r4, [sp, #156]	; 0x9c
   35bb8:	orr.w	lr, ip, r8, lsr #31
   35bbc:	adc.w	r9, r4, r7
   35bc0:	adds.w	r1, r1, lr
   35bc4:	ldr	r4, [sp, #232]	; 0xe8
   35bc6:	adc.w	r9, r9, r6
   35bca:	eor.w	r7, r9, r4
   35bce:	ldr	r4, [sp, #228]	; 0xe4
   35bd0:	adds	r2, r2, r7
   35bd2:	eor.w	r4, r1, r4
   35bd6:	eor.w	ip, r2, lr
   35bda:	adc.w	r5, r4, r5
   35bde:	eors	r6, r5
   35be0:	mov.w	r3, ip, lsr #24
   35be4:	orr.w	lr, r3, r6, lsl #8
   35be8:	ldr	r3, [sp, #84]	; 0x54
   35bea:	lsrs	r6, r6, #24
   35bec:	adds	r1, r3, r1
   35bee:	ldr	r3, [sp, #88]	; 0x58
   35bf0:	orr.w	r8, r6, ip, lsl #8
   35bf4:	adc.w	r9, r3, r9
   35bf8:	adds.w	r3, r1, lr
   35bfc:	str	r3, [sp, #152]	; 0x98
   35bfe:	adc.w	r3, r9, r8
   35c02:	str	r3, [sp, #156]	; 0x9c
   35c04:	ldr	r3, [sp, #152]	; 0x98
   35c06:	eors	r7, r3
   35c08:	ldr	r3, [sp, #156]	; 0x9c
   35c0a:	eors	r4, r3
   35c0c:	lsrs	r1, r7, #16
   35c0e:	orr.w	r3, r1, r4, lsl #16
   35c12:	lsrs	r4, r4, #16
   35c14:	str	r3, [sp, #228]	; 0xe4
   35c16:	orr.w	r3, r4, r7, lsl #16
   35c1a:	str	r3, [sp, #232]	; 0xe8
   35c1c:	ldr	r3, [sp, #228]	; 0xe4
   35c1e:	adds	r3, r2, r3
   35c20:	str	r3, [sp, #196]	; 0xc4
   35c22:	ldr	r3, [sp, #232]	; 0xe8
   35c24:	adc.w	r3, r5, r3
   35c28:	str	r3, [sp, #200]	; 0xc8
   35c2a:	ldr	r3, [sp, #196]	; 0xc4
   35c2c:	ldr	r1, [sp, #172]	; 0xac
   35c2e:	eor.w	lr, r3, lr
   35c32:	ldr	r3, [sp, #200]	; 0xc8
   35c34:	ldr	r4, [sp, #220]	; 0xdc
   35c36:	eor.w	r8, r3, r8
   35c3a:	mov.w	r2, r8, lsl #1
   35c3e:	orr.w	r3, r2, lr, lsr #31
   35c42:	mov.w	lr, lr, lsl #1
   35c46:	ldr	r2, [sp, #168]	; 0xa8
   35c48:	str	r3, [sp, #260]	; 0x104
   35c4a:	orr.w	r3, lr, r8, lsr #31
   35c4e:	str	r3, [sp, #256]	; 0x100
   35c50:	ldr	r3, [sp, #36]	; 0x24
   35c52:	adds	r2, r3, r2
   35c54:	ldr	r3, [sp, #40]	; 0x28
   35c56:	adc.w	r7, r3, r1
   35c5a:	ldr	r3, [sp, #220]	; 0xdc
   35c5c:	adds	r2, r2, r3
   35c5e:	ldr	r3, [sp, #224]	; 0xe0
   35c60:	adc.w	r7, r3, r7
   35c64:	ldr	r3, [sp, #244]	; 0xf4
   35c66:	eor.w	r5, r7, r3
   35c6a:	ldr	r3, [sp, #208]	; 0xd0
   35c6c:	eor.w	r1, r2, r3
   35c70:	ldr	r3, [sp, #192]	; 0xc0
   35c72:	adds	r3, r3, r5
   35c74:	eor.w	r6, r3, r4
   35c78:	ldr	r4, [sp, #224]	; 0xe0
   35c7a:	adc.w	r0, r1, r0
   35c7e:	eors	r4, r0
   35c80:	mov.w	r8, r6, lsr #24
   35c84:	orr.w	ip, r8, r4, lsl #8
   35c88:	lsrs	r4, r4, #24
   35c8a:	orr.w	lr, r4, r6, lsl #8
   35c8e:	ldr	r4, [sp, #68]	; 0x44
   35c90:	adds	r2, r4, r2
   35c92:	ldr	r4, [sp, #72]	; 0x48
   35c94:	adc.w	r7, r4, r7
   35c98:	adds.w	r2, r2, ip
   35c9c:	str	r2, [sp, #168]	; 0xa8
   35c9e:	adc.w	r2, r7, lr
   35ca2:	str	r2, [sp, #172]	; 0xac
   35ca4:	ldr	r2, [sp, #168]	; 0xa8
   35ca6:	eors	r5, r2
   35ca8:	ldr	r2, [sp, #172]	; 0xac
   35caa:	eors	r1, r2
   35cac:	lsrs	r2, r5, #16
   35cae:	orr.w	r2, r2, r1, lsl #16
   35cb2:	lsrs	r1, r1, #16
   35cb4:	str	r2, [sp, #208]	; 0xd0
   35cb6:	orr.w	r2, r1, r5, lsl #16
   35cba:	str	r2, [sp, #220]	; 0xdc
   35cbc:	ldr	r2, [sp, #208]	; 0xd0
   35cbe:	adds	r3, r3, r2
   35cc0:	str	r3, [sp, #192]	; 0xc0
   35cc2:	ldr	r3, [sp, #220]	; 0xdc
   35cc4:	adc.w	r3, r0, r3
   35cc8:	str	r3, [sp, #204]	; 0xcc
   35cca:	ldr	r2, [sp, #204]	; 0xcc
   35ccc:	ldr	r3, [sp, #192]	; 0xc0
   35cce:	eor.w	lr, r2, lr
   35cd2:	eor.w	r3, r3, ip
   35cd6:	mov.w	r2, lr, lsl #1
   35cda:	orr.w	r2, r2, r3, lsr #31
   35cde:	mov.w	ip, r3, lsl #1
   35ce2:	str	r2, [sp, #224]	; 0xe0
   35ce4:	orr.w	ip, ip, lr, lsr #31
   35ce8:	ldr	r3, [sp, #76]	; 0x4c
   35cea:	ldr	r2, [sp, #184]	; 0xb8
   35cec:	adds	r3, r3, r2
   35cee:	ldr	r2, [sp, #80]	; 0x50
   35cf0:	ldr	r1, [sp, #188]	; 0xbc
   35cf2:	adc.w	r8, r2, r1
   35cf6:	ldr	r2, [sp, #236]	; 0xec
   35cf8:	ldr	r1, [sp, #164]	; 0xa4
   35cfa:	adds	r3, r3, r2
   35cfc:	ldr	r2, [sp, #240]	; 0xf0
   35cfe:	eor.w	r0, r3, fp
   35d02:	adc.w	r8, r8, r2
   35d06:	ldr	r2, [sp, #160]	; 0xa0
   35d08:	eor.w	r6, r8, sl
   35d0c:	adds	r2, r2, r6
   35d0e:	adc.w	r5, r1, r0
   35d12:	ldr	r1, [sp, #236]	; 0xec
   35d14:	eor.w	r7, r2, r1
   35d18:	ldr	r1, [sp, #240]	; 0xf0
   35d1a:	eor.w	r4, r5, r1
   35d1e:	mov.w	r9, r7, lsr #24
   35d22:	orr.w	r1, r9, r4, lsl #8
   35d26:	lsrs	r4, r4, #24
   35d28:	orr.w	lr, r4, r7, lsl #8
   35d2c:	ldr	r4, [sp, #124]	; 0x7c
   35d2e:	adds	r3, r4, r3
   35d30:	ldr	r4, [sp, #128]	; 0x80
   35d32:	adc.w	r8, r4, r8
   35d36:	adds	r3, r3, r1
   35d38:	str	r3, [sp, #160]	; 0xa0
   35d3a:	adc.w	r3, r8, lr
   35d3e:	str	r3, [sp, #164]	; 0xa4
   35d40:	ldr	r3, [sp, #160]	; 0xa0
   35d42:	ldr	r4, [sp, #248]	; 0xf8
   35d44:	eors	r6, r3
   35d46:	ldr	r3, [sp, #164]	; 0xa4
   35d48:	eors	r0, r3
   35d4a:	lsrs	r3, r6, #16
   35d4c:	orr.w	r3, r3, r0, lsl #16
   35d50:	lsrs	r0, r0, #16
   35d52:	str	r3, [sp, #236]	; 0xec
   35d54:	orr.w	r3, r0, r6, lsl #16
   35d58:	str	r3, [sp, #240]	; 0xf0
   35d5a:	ldr	r3, [sp, #236]	; 0xec
   35d5c:	ldr	r0, [sp, #148]	; 0x94
   35d5e:	adds	r2, r2, r3
   35d60:	ldr	r3, [sp, #240]	; 0xf0
   35d62:	eor.w	r1, r1, r2
   35d66:	adc.w	r5, r3, r5
   35d6a:	eor.w	lr, r5, lr
   35d6e:	mov.w	r3, lr, lsl #1
   35d72:	orr.w	r3, r3, r1, lsr #31
   35d76:	lsls	r1, r1, #1
   35d78:	str	r3, [sp, #188]	; 0xbc
   35d7a:	orr.w	r3, r1, lr, lsr #31
   35d7e:	ldr	r1, [sp, #144]	; 0x90
   35d80:	str	r3, [sp, #184]	; 0xb8
   35d82:	ldr	r3, [sp, #108]	; 0x6c
   35d84:	adds	r1, r3, r1
   35d86:	ldr	r3, [sp, #112]	; 0x70
   35d88:	adc.w	sl, r3, r0
   35d8c:	ldr	r3, [sp, #248]	; 0xf8
   35d8e:	ldr	r0, [sp, #180]	; 0xb4
   35d90:	adds	r1, r1, r3
   35d92:	ldr	r3, [sp, #252]	; 0xfc
   35d94:	adc.w	sl, sl, r3
   35d98:	ldr	r3, [sp, #216]	; 0xd8
   35d9a:	eor.w	lr, sl, r3
   35d9e:	ldr	r3, [sp, #212]	; 0xd4
   35da0:	eor.w	r6, r1, r3
   35da4:	ldr	r3, [sp, #176]	; 0xb0
   35da6:	adds.w	r3, r3, lr
   35daa:	eor.w	r8, r3, r4
   35dae:	ldr	r4, [sp, #252]	; 0xfc
   35db0:	adcs	r0, r6
   35db2:	eor.w	r7, r0, r4
   35db6:	mov.w	fp, r8, lsr #24
   35dba:	orr.w	r4, fp, r7, lsl #8
   35dbe:	lsrs	r7, r7, #24
   35dc0:	orr.w	r9, r7, r8, lsl #8
   35dc4:	ldr	r7, [sp, #52]	; 0x34
   35dc6:	adds	r1, r7, r1
   35dc8:	ldr	r7, [sp, #56]	; 0x38
   35dca:	adc.w	sl, r7, sl
   35dce:	adds	r1, r1, r4
   35dd0:	str	r1, [sp, #144]	; 0x90
   35dd2:	adc.w	r1, sl, r9
   35dd6:	str	r1, [sp, #148]	; 0x94
   35dd8:	ldr	r1, [sp, #144]	; 0x90
   35dda:	eor.w	lr, r1, lr
   35dde:	ldr	r1, [sp, #148]	; 0x94
   35de0:	eors	r6, r1
   35de2:	mov.w	r1, lr, lsr #16
   35de6:	orr.w	r8, r1, r6, lsl #16
   35dea:	lsrs	r6, r6, #16
   35dec:	adds.w	r3, r3, r8
   35df0:	orr.w	sl, r6, lr, lsl #16
   35df4:	adc.w	r0, r0, sl
   35df8:	eors	r4, r3
   35dfa:	eor.w	r9, r0, r9
   35dfe:	ldr	r6, [sp, #156]	; 0x9c
   35e00:	mov.w	r1, r9, lsl #1
   35e04:	orr.w	r1, r1, r4, lsr #31
   35e08:	lsls	r4, r4, #1
   35e0a:	orr.w	fp, r4, r9, lsr #31
   35e0e:	str	r1, [sp, #212]	; 0xd4
   35e10:	ldr	r4, [sp, #152]	; 0x98
   35e12:	ldr	r1, [sp, #12]
   35e14:	adds	r1, r1, r4
   35e16:	ldr	r4, [sp, #16]
   35e18:	adc.w	r9, r4, r6
   35e1c:	ldr	r4, [sp, #224]	; 0xe0
   35e1e:	adds.w	r1, r1, ip
   35e22:	adc.w	r9, r9, r4
   35e26:	eor.w	r7, r1, r8
   35e2a:	eor.w	lr, r9, sl
   35e2e:	adds.w	r2, r2, lr
   35e32:	adc.w	r5, r7, r5
   35e36:	eor.w	ip, r2, ip
   35e3a:	eor.w	r6, r5, r4
   35e3e:	mov.w	sl, ip, lsr #24
   35e42:	orr.w	r4, sl, r6, lsl #8
   35e46:	lsrs	r6, r6, #24
   35e48:	orr.w	r8, r6, ip, lsl #8
   35e4c:	ldr	r6, [sp, #100]	; 0x64
   35e4e:	adds	r1, r6, r1
   35e50:	ldr	r6, [sp, #104]	; 0x68
   35e52:	adc.w	r9, r6, r9
   35e56:	adds	r1, r1, r4
   35e58:	str	r1, [sp, #152]	; 0x98
   35e5a:	adc.w	r1, r9, r8
   35e5e:	str	r1, [sp, #156]	; 0x9c
   35e60:	ldr	r1, [sp, #152]	; 0x98
   35e62:	eor.w	lr, r1, lr
   35e66:	ldr	r1, [sp, #156]	; 0x9c
   35e68:	eors	r7, r1
   35e6a:	mov.w	r1, lr, lsr #16
   35e6e:	orr.w	r1, r1, r7, lsl #16
   35e72:	lsrs	r7, r7, #16
   35e74:	str	r1, [sp, #216]	; 0xd8
   35e76:	orr.w	r1, r7, lr, lsl #16
   35e7a:	str	r1, [sp, #224]	; 0xe0
   35e7c:	ldr	r1, [sp, #216]	; 0xd8
   35e7e:	adds	r2, r2, r1
   35e80:	str	r2, [sp, #176]	; 0xb0
   35e82:	ldr	r2, [sp, #224]	; 0xe0
   35e84:	ldr	r1, [sp, #168]	; 0xa8
   35e86:	adc.w	r2, r5, r2
   35e8a:	str	r2, [sp, #180]	; 0xb4
   35e8c:	ldr	r2, [sp, #176]	; 0xb0
   35e8e:	eors	r4, r2
   35e90:	ldr	r2, [sp, #180]	; 0xb4
   35e92:	eor.w	r8, r2, r8
   35e96:	mov.w	r2, r8, lsl #1
   35e9a:	orr.w	r2, r2, r4, lsr #31
   35e9e:	lsls	r4, r4, #1
   35ea0:	str	r2, [sp, #248]	; 0xf8
   35ea2:	orr.w	r2, r4, r8, lsr #31
   35ea6:	str	r2, [sp, #244]	; 0xf4
   35ea8:	ldr	r2, [sp, #4]
   35eaa:	ldr	r4, [sp, #172]	; 0xac
   35eac:	adds	r2, r2, r1
   35eae:	ldr	r1, [sp, #8]
   35eb0:	adc.w	r7, r1, r4
   35eb4:	ldr	r1, [sp, #184]	; 0xb8
   35eb6:	adds	r2, r2, r1
   35eb8:	ldr	r1, [sp, #188]	; 0xbc
   35eba:	adc.w	r7, r1, r7
   35ebe:	ldr	r1, [sp, #232]	; 0xe8
   35ec0:	eor.w	r4, r7, r1
   35ec4:	ldr	r1, [sp, #228]	; 0xe4
   35ec6:	adds	r3, r3, r4
   35ec8:	eor.w	r9, r2, r1
   35ecc:	ldr	r1, [sp, #184]	; 0xb8
   35ece:	adc.w	r0, r0, r9
   35ed2:	eor.w	ip, r3, r1
   35ed6:	ldr	r1, [sp, #188]	; 0xbc
   35ed8:	eor.w	r5, r0, r1
   35edc:	mov.w	lr, ip, lsr #24
   35ee0:	orr.w	r1, lr, r5, lsl #8
   35ee4:	lsrs	r5, r5, #24
   35ee6:	orr.w	r6, r5, ip, lsl #8
   35eea:	ldr	r5, [sp, #20]
   35eec:	adds	r2, r5, r2
   35eee:	ldr	r5, [sp, #24]
   35ef0:	adc.w	r7, r5, r7
   35ef4:	adds	r2, r2, r1
   35ef6:	str	r2, [sp, #168]	; 0xa8
   35ef8:	adc.w	r2, r7, r6
   35efc:	str	r2, [sp, #172]	; 0xac
   35efe:	ldr	r2, [sp, #168]	; 0xa8
   35f00:	eors	r4, r2
   35f02:	ldr	r2, [sp, #172]	; 0xac
   35f04:	eor.w	r2, r2, r9
   35f08:	lsrs	r5, r4, #16
   35f0a:	orr.w	r5, r5, r2, lsl #16
   35f0e:	mov.w	r9, r2, lsr #16
   35f12:	orr.w	r9, r9, r4, lsl #16
   35f16:	adds	r3, r3, r5
   35f18:	str	r3, [sp, #184]	; 0xb8
   35f1a:	adc.w	r3, r0, r9
   35f1e:	str	r3, [sp, #188]	; 0xbc
   35f20:	ldr	r3, [sp, #184]	; 0xb8
   35f22:	ldr	r2, [sp, #160]	; 0xa0
   35f24:	eors	r1, r3
   35f26:	ldr	r3, [sp, #188]	; 0xbc
   35f28:	ldr	r0, [sp, #200]	; 0xc8
   35f2a:	eors	r6, r3
   35f2c:	str	r5, [sp, #228]	; 0xe4
   35f2e:	lsls	r3, r6, #1
   35f30:	orr.w	r3, r3, r1, lsr #31
   35f34:	lsls	r1, r1, #1
   35f36:	str	r3, [sp, #252]	; 0xfc
   35f38:	orr.w	r3, r1, r6, lsr #31
   35f3c:	str	r3, [sp, #232]	; 0xe8
   35f3e:	ldr	r3, [sp, #92]	; 0x5c
   35f40:	ldr	r1, [sp, #164]	; 0xa4
   35f42:	adds	r3, r3, r2
   35f44:	ldr	r2, [sp, #96]	; 0x60
   35f46:	adc.w	ip, r2, r1
   35f4a:	ldr	r2, [sp, #212]	; 0xd4
   35f4c:	adds.w	r3, r3, fp
   35f50:	adc.w	ip, ip, r2
   35f54:	ldr	r2, [sp, #220]	; 0xdc
   35f56:	eor.w	r7, ip, r2
   35f5a:	ldr	r2, [sp, #208]	; 0xd0
   35f5c:	eor.w	r1, r3, r2
   35f60:	ldr	r2, [sp, #196]	; 0xc4
   35f62:	adds	r2, r2, r7
   35f64:	adc.w	r5, r0, r1
   35f68:	ldr	r0, [sp, #212]	; 0xd4
   35f6a:	eor.w	fp, r2, fp
   35f6e:	eors	r0, r5
   35f70:	mov.w	r4, fp, lsr #24
   35f74:	orr.w	r8, r4, r0, lsl #8
   35f78:	lsrs	r0, r0, #24
   35f7a:	orr.w	r6, r0, fp, lsl #8
   35f7e:	ldr	r0, [sp, #60]	; 0x3c
   35f80:	adds	r3, r0, r3
   35f82:	ldr	r0, [sp, #64]	; 0x40
   35f84:	adc.w	ip, r0, ip
   35f88:	adds.w	r3, r3, r8
   35f8c:	str	r3, [sp, #160]	; 0xa0
   35f8e:	adc.w	r3, ip, r6
   35f92:	str	r3, [sp, #164]	; 0xa4
   35f94:	ldr	r3, [sp, #160]	; 0xa0
   35f96:	ldr	r0, [sp, #148]	; 0x94
   35f98:	eors	r7, r3
   35f9a:	ldr	r3, [sp, #164]	; 0xa4
   35f9c:	ldr	r4, [sp, #256]	; 0x100
   35f9e:	eors	r1, r3
   35fa0:	lsrs	r3, r7, #16
   35fa2:	orr.w	r3, r3, r1, lsl #16
   35fa6:	lsrs	r1, r1, #16
   35fa8:	str	r3, [sp, #200]	; 0xc8
   35faa:	orr.w	r3, r1, r7, lsl #16
   35fae:	str	r3, [sp, #208]	; 0xd0
   35fb0:	ldr	r3, [sp, #200]	; 0xc8
   35fb2:	ldr	r1, [sp, #144]	; 0x90
   35fb4:	adds	r2, r2, r3
   35fb6:	ldr	r3, [sp, #208]	; 0xd0
   35fb8:	eor.w	r8, r2, r8
   35fbc:	adc.w	r5, r3, r5
   35fc0:	eors	r6, r5
   35fc2:	lsls	r3, r6, #1
   35fc4:	orr.w	r3, r3, r8, lsr #31
   35fc8:	mov.w	r8, r8, lsl #1
   35fcc:	str	r3, [sp, #220]	; 0xdc
   35fce:	orr.w	r3, r8, r6, lsr #31
   35fd2:	str	r3, [sp, #212]	; 0xd4
   35fd4:	ldr	r3, [sp, #44]	; 0x2c
   35fd6:	adds	r1, r3, r1
   35fd8:	ldr	r3, [sp, #48]	; 0x30
   35fda:	adc.w	sl, r3, r0
   35fde:	ldr	r3, [sp, #256]	; 0x100
   35fe0:	ldr	r0, [sp, #204]	; 0xcc
   35fe2:	adds	r1, r1, r3
   35fe4:	ldr	r3, [sp, #260]	; 0x104
   35fe6:	adc.w	sl, sl, r3
   35fea:	ldr	r3, [sp, #240]	; 0xf0
   35fec:	eor.w	ip, sl, r3
   35ff0:	ldr	r3, [sp, #236]	; 0xec
   35ff2:	eor.w	r6, r1, r3
   35ff6:	ldr	r3, [sp, #192]	; 0xc0
   35ff8:	adds.w	r3, r3, ip
   35ffc:	eor.w	lr, r3, r4
   36000:	ldr	r4, [sp, #260]	; 0x104
   36002:	adcs	r0, r6
   36004:	eor.w	r7, r0, r4
   36008:	mov.w	fp, lr, lsr #24
   3600c:	orr.w	r4, fp, r7, lsl #8
   36010:	lsrs	r7, r7, #24
   36012:	orr.w	r8, r7, lr, lsl #8
   36016:	ldr	r7, [sp, #28]
   36018:	adds	r1, r7, r1
   3601a:	ldr	r7, [sp, #32]
   3601c:	adc.w	sl, r7, sl
   36020:	adds	r1, r1, r4
   36022:	str	r1, [sp, #144]	; 0x90
   36024:	adc.w	r1, sl, r8
   36028:	str	r1, [sp, #148]	; 0x94
   3602a:	ldr	r1, [sp, #144]	; 0x90
   3602c:	ldr	r7, [sp, #156]	; 0x9c
   3602e:	eor.w	ip, r1, ip
   36032:	ldr	r1, [sp, #148]	; 0x94
   36034:	eors	r6, r1
   36036:	mov.w	r1, ip, lsr #16
   3603a:	orr.w	r1, r1, r6, lsl #16
   3603e:	lsrs	r6, r6, #16
   36040:	orr.w	fp, r6, ip, lsl #16
   36044:	adds	r3, r3, r1
   36046:	adc.w	r0, r0, fp
   3604a:	eors	r4, r3
   3604c:	eor.w	r8, r0, r8
   36050:	str	r1, [sp, #236]	; 0xec
   36052:	mov.w	r1, r8, lsl #1
   36056:	orr.w	r6, r1, r4, lsr #31
   3605a:	lsls	r4, r4, #1
   3605c:	orr.w	ip, r4, r8, lsr #31
   36060:	ldr	r1, [sp, #92]	; 0x5c
   36062:	ldr	r4, [sp, #152]	; 0x98
   36064:	adds	r1, r1, r4
   36066:	ldr	r4, [sp, #96]	; 0x60
   36068:	adc.w	sl, r4, r7
   3606c:	adds.w	r1, r1, ip
   36070:	adc.w	sl, sl, r6
   36074:	ldr	r4, [sp, #228]	; 0xe4
   36076:	eor.w	lr, sl, r9
   3607a:	adds.w	r2, r2, lr
   3607e:	eor.w	r7, r1, r4
   36082:	adc.w	r5, r7, r5
   36086:	eor.w	r4, r2, ip
   3608a:	eor.w	ip, r5, r6
   3608e:	mov.w	r9, r4, lsr #24
   36092:	orr.w	r6, r9, ip, lsl #8
   36096:	mov.w	ip, ip, lsr #24
   3609a:	orr.w	r8, ip, r4, lsl #8
   3609e:	ldr	r4, [sp, #68]	; 0x44
   360a0:	adds	r1, r4, r1
   360a2:	ldr	r4, [sp, #72]	; 0x48
   360a4:	adc.w	sl, r4, sl
   360a8:	adds	r1, r1, r6
   360aa:	str	r1, [sp, #152]	; 0x98
   360ac:	adc.w	r1, sl, r8
   360b0:	str	r1, [sp, #156]	; 0x9c
   360b2:	ldr	r1, [sp, #152]	; 0x98
   360b4:	ldr	r4, [sp, #172]	; 0xac
   360b6:	eor.w	lr, r1, lr
   360ba:	ldr	r1, [sp, #156]	; 0x9c
   360bc:	eors	r7, r1
   360be:	mov.w	r1, lr, lsr #16
   360c2:	orr.w	r1, r1, r7, lsl #16
   360c6:	lsrs	r7, r7, #16
   360c8:	str	r1, [sp, #228]	; 0xe4
   360ca:	orr.w	r1, r7, lr, lsl #16
   360ce:	str	r1, [sp, #240]	; 0xf0
   360d0:	ldr	r1, [sp, #228]	; 0xe4
   360d2:	adds	r2, r2, r1
   360d4:	str	r2, [sp, #192]	; 0xc0
   360d6:	ldr	r2, [sp, #240]	; 0xf0
   360d8:	ldr	r1, [sp, #168]	; 0xa8
   360da:	adc.w	r2, r5, r2
   360de:	str	r2, [sp, #196]	; 0xc4
   360e0:	ldr	r2, [sp, #192]	; 0xc0
   360e2:	ldr	r5, [sp, #248]	; 0xf8
   360e4:	eors	r6, r2
   360e6:	ldr	r2, [sp, #196]	; 0xc4
   360e8:	eor.w	r8, r2, r8
   360ec:	mov.w	r2, r8, lsl #1
   360f0:	orr.w	r2, r2, r6, lsr #31
   360f4:	lsls	r6, r6, #1
   360f6:	str	r2, [sp, #260]	; 0x104
   360f8:	orr.w	r2, r6, r8, lsr #31
   360fc:	str	r2, [sp, #256]	; 0x100
   360fe:	ldr	r2, [sp, #100]	; 0x64
   36100:	adds	r2, r2, r1
   36102:	ldr	r1, [sp, #104]	; 0x68
   36104:	adc.w	r7, r1, r4
   36108:	ldr	r1, [sp, #244]	; 0xf4
   3610a:	ldr	r4, [sp, #244]	; 0xf4
   3610c:	adds	r2, r2, r1
   3610e:	ldr	r1, [sp, #248]	; 0xf8
   36110:	adc.w	r7, r1, r7
   36114:	ldr	r1, [sp, #208]	; 0xd0
   36116:	eor.w	r6, r7, r1
   3611a:	ldr	r1, [sp, #200]	; 0xc8
   3611c:	adds	r3, r3, r6
   3611e:	eor.w	r1, r2, r1
   36122:	eor.w	r4, r3, r4
   36126:	adc.w	r0, r1, r0
   3612a:	eors	r5, r0
   3612c:	mov.w	r8, r4, lsr #24
   36130:	orr.w	ip, r8, r5, lsl #8
   36134:	lsrs	r5, r5, #24
   36136:	orr.w	lr, r5, r4, lsl #8
   3613a:	ldr	r4, [sp, #4]
   3613c:	adds	r2, r4, r2
   3613e:	ldr	r4, [sp, #8]
   36140:	adc.w	r7, r4, r7
   36144:	adds.w	r2, r2, ip
   36148:	str	r2, [sp, #168]	; 0xa8
   3614a:	adc.w	r2, r7, lr
   3614e:	str	r2, [sp, #172]	; 0xac
   36150:	ldr	r2, [sp, #168]	; 0xa8
   36152:	eors	r6, r2
   36154:	ldr	r2, [sp, #172]	; 0xac
   36156:	eors	r1, r2
   36158:	lsrs	r2, r6, #16
   3615a:	orr.w	r2, r2, r1, lsl #16
   3615e:	lsrs	r1, r1, #16
   36160:	str	r2, [sp, #208]	; 0xd0
   36162:	orr.w	r2, r1, r6, lsl #16
   36166:	str	r2, [sp, #244]	; 0xf4
   36168:	ldr	r2, [sp, #208]	; 0xd0
   3616a:	ldr	r1, [sp, #164]	; 0xa4
   3616c:	adds	r3, r3, r2
   3616e:	str	r3, [sp, #200]	; 0xc8
   36170:	ldr	r3, [sp, #244]	; 0xf4
   36172:	adc.w	r3, r0, r3
   36176:	str	r3, [sp, #204]	; 0xcc
   36178:	ldr	r2, [sp, #204]	; 0xcc
   3617a:	ldr	r3, [sp, #200]	; 0xc8
   3617c:	eor.w	lr, r2, lr
   36180:	eor.w	r3, r3, ip
   36184:	mov.w	r2, lr, lsl #1
   36188:	orr.w	r2, r2, r3, lsr #31
   3618c:	mov.w	ip, r3, lsl #1
   36190:	str	r2, [sp, #248]	; 0xf8
   36192:	orr.w	ip, ip, lr, lsr #31
   36196:	ldr	r2, [sp, #160]	; 0xa0
   36198:	ldr	r3, [sp, #44]	; 0x2c
   3619a:	adds	r3, r3, r2
   3619c:	ldr	r2, [sp, #48]	; 0x30
   3619e:	adc.w	lr, r2, r1
   361a2:	ldr	r2, [sp, #232]	; 0xe8
   361a4:	ldr	r1, [sp, #180]	; 0xb4
   361a6:	adds	r3, r3, r2
   361a8:	ldr	r2, [sp, #252]	; 0xfc
   361aa:	adc.w	lr, lr, r2
   361ae:	ldr	r2, [sp, #236]	; 0xec
   361b0:	eor.w	r6, lr, fp
   361b4:	eor.w	r0, r3, r2
   361b8:	ldr	r2, [sp, #176]	; 0xb0
   361ba:	adds	r2, r2, r6
   361bc:	adc.w	r5, r1, r0
   361c0:	ldr	r1, [sp, #232]	; 0xe8
   361c2:	eor.w	r8, r2, r1
   361c6:	ldr	r1, [sp, #252]	; 0xfc
   361c8:	eor.w	r4, r5, r1
   361cc:	mov.w	r9, r8, lsr #24
   361d0:	orr.w	r1, r9, r4, lsl #8
   361d4:	lsrs	r4, r4, #24
   361d6:	orr.w	r7, r4, r8, lsl #8
   361da:	ldr	r4, [sp, #20]
   361dc:	adds	r3, r4, r3
   361de:	ldr	r4, [sp, #24]
   361e0:	adc.w	lr, r4, lr
   361e4:	adds	r3, r3, r1
   361e6:	str	r3, [sp, #160]	; 0xa0
   361e8:	adc.w	r3, lr, r7
   361ec:	str	r3, [sp, #164]	; 0xa4
   361ee:	ldr	r3, [sp, #160]	; 0xa0
   361f0:	eors	r6, r3
   361f2:	ldr	r3, [sp, #164]	; 0xa4
   361f4:	eors	r0, r3
   361f6:	lsrs	r3, r6, #16
   361f8:	orr.w	r3, r3, r0, lsl #16
   361fc:	lsrs	r0, r0, #16
   361fe:	str	r3, [sp, #232]	; 0xe8
   36200:	orr.w	r3, r0, r6, lsl #16
   36204:	str	r3, [sp, #236]	; 0xec
   36206:	ldr	r3, [sp, #232]	; 0xe8
   36208:	adds	r2, r2, r3
   3620a:	ldr	r3, [sp, #236]	; 0xec
   3620c:	eor.w	r1, r1, r2
   36210:	adc.w	r5, r3, r5
   36214:	eors	r7, r5
   36216:	lsls	r3, r7, #1
   36218:	orr.w	r3, r3, r1, lsr #31
   3621c:	lsls	r1, r1, #1
   3621e:	str	r3, [sp, #264]	; 0x108
   36220:	orr.w	r3, r1, r7, lsr #31
   36224:	str	r3, [sp, #252]	; 0xfc
   36226:	ldr	r3, [sp, #124]	; 0x7c
   36228:	ldr	r1, [sp, #144]	; 0x90
   3622a:	ldr	r0, [sp, #148]	; 0x94
   3622c:	adds	r1, r3, r1
   3622e:	ldr	r3, [sp, #128]	; 0x80
   36230:	ldr	r4, [sp, #212]	; 0xd4
   36232:	adc.w	sl, r3, r0
   36236:	ldr	r3, [sp, #212]	; 0xd4
   36238:	ldr	r0, [sp, #188]	; 0xbc
   3623a:	adds	r1, r1, r3
   3623c:	ldr	r3, [sp, #220]	; 0xdc
   3623e:	adc.w	sl, sl, r3
   36242:	ldr	r3, [sp, #224]	; 0xe0
   36244:	eor.w	lr, sl, r3
   36248:	ldr	r3, [sp, #216]	; 0xd8
   3624a:	eor.w	r6, r1, r3
   3624e:	ldr	r3, [sp, #184]	; 0xb8
   36250:	adds.w	r3, r3, lr
   36254:	eor.w	r8, r3, r4
   36258:	ldr	r4, [sp, #220]	; 0xdc
   3625a:	adcs	r0, r6
   3625c:	eor.w	r7, r0, r4
   36260:	mov.w	fp, r8, lsr #24
   36264:	orr.w	r4, fp, r7, lsl #8
   36268:	lsrs	r7, r7, #24
   3626a:	orr.w	r9, r7, r8, lsl #8
   3626e:	ldr	r7, [sp, #108]	; 0x6c
   36270:	adds	r1, r7, r1
   36272:	ldr	r7, [sp, #112]	; 0x70
   36274:	adc.w	sl, r7, sl
   36278:	adds	r1, r1, r4
   3627a:	str	r1, [sp, #144]	; 0x90
   3627c:	adc.w	r1, sl, r9
   36280:	str	r1, [sp, #148]	; 0x94
   36282:	ldr	r1, [sp, #144]	; 0x90
   36284:	eor.w	lr, r1, lr
   36288:	ldr	r1, [sp, #148]	; 0x94
   3628a:	eors	r6, r1
   3628c:	mov.w	r1, lr, lsr #16
   36290:	orr.w	r8, r1, r6, lsl #16
   36294:	lsrs	r6, r6, #16
   36296:	adds.w	r3, r3, r8
   3629a:	orr.w	sl, r6, lr, lsl #16
   3629e:	adc.w	r0, r0, sl
   362a2:	eors	r4, r3
   362a4:	eor.w	r9, r0, r9
   362a8:	ldr	r6, [sp, #156]	; 0x9c
   362aa:	mov.w	r1, r9, lsl #1
   362ae:	orr.w	r1, r1, r4, lsr #31
   362b2:	lsls	r4, r4, #1
   362b4:	orr.w	fp, r4, r9, lsr #31
   362b8:	str	r1, [sp, #212]	; 0xd4
   362ba:	ldr	r4, [sp, #152]	; 0x98
   362bc:	ldr	r1, [sp, #84]	; 0x54
   362be:	adds	r1, r1, r4
   362c0:	ldr	r4, [sp, #88]	; 0x58
   362c2:	adc.w	r9, r4, r6
   362c6:	ldr	r4, [sp, #248]	; 0xf8
   362c8:	adds.w	r1, r1, ip
   362cc:	adc.w	r9, r9, r4
   362d0:	eor.w	r7, r1, r8
   362d4:	eor.w	lr, r9, sl
   362d8:	adds.w	r2, r2, lr
   362dc:	adc.w	r5, r7, r5
   362e0:	eor.w	ip, r2, ip
   362e4:	eor.w	r6, r5, r4
   362e8:	mov.w	sl, ip, lsr #24
   362ec:	orr.w	r4, sl, r6, lsl #8
   362f0:	lsrs	r6, r6, #24
   362f2:	orr.w	r8, r6, ip, lsl #8
   362f6:	ldr	r6, [sp, #116]	; 0x74
   362f8:	adds	r1, r6, r1
   362fa:	ldr	r6, [sp, #120]	; 0x78
   362fc:	adc.w	r9, r6, r9
   36300:	adds	r1, r1, r4
   36302:	str	r1, [sp, #152]	; 0x98
   36304:	adc.w	r1, r9, r8
   36308:	str	r1, [sp, #156]	; 0x9c
   3630a:	ldr	r1, [sp, #152]	; 0x98
   3630c:	eor.w	lr, r1, lr
   36310:	ldr	r1, [sp, #156]	; 0x9c
   36312:	eors	r7, r1
   36314:	mov.w	r1, lr, lsr #16
   36318:	orr.w	r1, r1, r7, lsl #16
   3631c:	lsrs	r7, r7, #16
   3631e:	str	r1, [sp, #216]	; 0xd8
   36320:	orr.w	r1, r7, lr, lsl #16
   36324:	str	r1, [sp, #220]	; 0xdc
   36326:	ldr	r1, [sp, #216]	; 0xd8
   36328:	adds	r2, r2, r1
   3632a:	str	r2, [sp, #176]	; 0xb0
   3632c:	ldr	r2, [sp, #220]	; 0xdc
   3632e:	ldr	r1, [sp, #168]	; 0xa8
   36330:	adc.w	r2, r5, r2
   36334:	str	r2, [sp, #180]	; 0xb4
   36336:	ldr	r2, [sp, #176]	; 0xb0
   36338:	eors	r4, r2
   3633a:	ldr	r2, [sp, #180]	; 0xb4
   3633c:	eor.w	r8, r2, r8
   36340:	mov.w	r2, r8, lsl #1
   36344:	orr.w	r2, r2, r4, lsr #31
   36348:	lsls	r4, r4, #1
   3634a:	str	r2, [sp, #248]	; 0xf8
   3634c:	orr.w	r2, r4, r8, lsr #31
   36350:	str	r2, [sp, #224]	; 0xe0
   36352:	ldr	r2, [sp, #28]
   36354:	ldr	r4, [sp, #172]	; 0xac
   36356:	adds	r2, r2, r1
   36358:	ldr	r1, [sp, #32]
   3635a:	adc.w	r7, r1, r4
   3635e:	ldr	r1, [sp, #252]	; 0xfc
   36360:	adds	r2, r2, r1
   36362:	ldr	r1, [sp, #264]	; 0x108
   36364:	adc.w	r7, r1, r7
   36368:	ldr	r1, [sp, #240]	; 0xf0
   3636a:	eor.w	r4, r7, r1
   3636e:	ldr	r1, [sp, #228]	; 0xe4
   36370:	adds	r3, r3, r4
   36372:	eor.w	r9, r2, r1
   36376:	ldr	r1, [sp, #252]	; 0xfc
   36378:	adc.w	r0, r0, r9
   3637c:	eor.w	ip, r3, r1
   36380:	ldr	r1, [sp, #264]	; 0x108
   36382:	eor.w	r5, r0, r1
   36386:	mov.w	lr, ip, lsr #24
   3638a:	orr.w	r1, lr, r5, lsl #8
   3638e:	lsrs	r5, r5, #24
   36390:	orr.w	r6, r5, ip, lsl #8
   36394:	ldr	r5, [sp, #52]	; 0x34
   36396:	adds	r2, r5, r2
   36398:	ldr	r5, [sp, #56]	; 0x38
   3639a:	adc.w	r7, r5, r7
   3639e:	adds	r2, r2, r1
   363a0:	str	r2, [sp, #168]	; 0xa8
   363a2:	adc.w	r2, r7, r6
   363a6:	str	r2, [sp, #172]	; 0xac
   363a8:	ldr	r2, [sp, #168]	; 0xa8
   363aa:	eors	r4, r2
   363ac:	ldr	r2, [sp, #172]	; 0xac
   363ae:	eor.w	r2, r2, r9
   363b2:	lsrs	r5, r4, #16
   363b4:	orr.w	r5, r5, r2, lsl #16
   363b8:	mov.w	r9, r2, lsr #16
   363bc:	orr.w	r9, r9, r4, lsl #16
   363c0:	adds	r3, r3, r5
   363c2:	str	r3, [sp, #184]	; 0xb8
   363c4:	adc.w	r3, r0, r9
   363c8:	str	r3, [sp, #188]	; 0xbc
   363ca:	ldr	r3, [sp, #184]	; 0xb8
   363cc:	ldr	r2, [sp, #160]	; 0xa0
   363ce:	eors	r1, r3
   363d0:	ldr	r3, [sp, #188]	; 0xbc
   363d2:	str	r5, [sp, #228]	; 0xe4
   363d4:	eors	r6, r3
   363d6:	lsls	r3, r6, #1
   363d8:	orr.w	r3, r3, r1, lsr #31
   363dc:	lsls	r1, r1, #1
   363de:	str	r3, [sp, #252]	; 0xfc
   363e0:	orr.w	r3, r1, r6, lsr #31
   363e4:	str	r3, [sp, #240]	; 0xf0
   363e6:	ldr	r3, [sp, #60]	; 0x3c
   363e8:	adds	r3, r3, r2
   363ea:	ldr	r2, [sp, #64]	; 0x40
   363ec:	ldr	r1, [sp, #164]	; 0xa4
   363ee:	ldr	r0, [sp, #196]	; 0xc4
   363f0:	adc.w	ip, r2, r1
   363f4:	ldr	r2, [sp, #212]	; 0xd4
   363f6:	adds.w	r3, r3, fp
   363fa:	adc.w	ip, ip, r2
   363fe:	ldr	r2, [sp, #244]	; 0xf4
   36400:	eor.w	r7, ip, r2
   36404:	ldr	r2, [sp, #208]	; 0xd0
   36406:	eor.w	r1, r3, r2
   3640a:	ldr	r2, [sp, #192]	; 0xc0
   3640c:	adds	r2, r2, r7
   3640e:	adc.w	r5, r0, r1
   36412:	ldr	r0, [sp, #212]	; 0xd4
   36414:	eor.w	fp, r2, fp
   36418:	eors	r0, r5
   3641a:	mov.w	r4, fp, lsr #24
   3641e:	orr.w	r8, r4, r0, lsl #8
   36422:	lsrs	r0, r0, #24
   36424:	orr.w	r6, r0, fp, lsl #8
   36428:	ldr	r0, [sp, #12]
   3642a:	ldr	r4, [sp, #256]	; 0x100
   3642c:	adds	r3, r0, r3
   3642e:	ldr	r0, [sp, #16]
   36430:	adc.w	ip, r0, ip
   36434:	adds.w	r3, r3, r8
   36438:	str	r3, [sp, #160]	; 0xa0
   3643a:	adc.w	r3, ip, r6
   3643e:	str	r3, [sp, #164]	; 0xa4
   36440:	ldr	r3, [sp, #160]	; 0xa0
   36442:	ldr	r0, [sp, #148]	; 0x94
   36444:	eors	r7, r3
   36446:	ldr	r3, [sp, #164]	; 0xa4
   36448:	eors	r1, r3
   3644a:	lsrs	r3, r7, #16
   3644c:	orr.w	r3, r3, r1, lsl #16
   36450:	lsrs	r1, r1, #16
   36452:	str	r3, [sp, #208]	; 0xd0
   36454:	orr.w	r3, r1, r7, lsl #16
   36458:	str	r3, [sp, #212]	; 0xd4
   3645a:	ldr	r3, [sp, #208]	; 0xd0
   3645c:	ldr	r1, [sp, #144]	; 0x90
   3645e:	adds	r2, r2, r3
   36460:	ldr	r3, [sp, #212]	; 0xd4
   36462:	eor.w	r8, r2, r8
   36466:	adc.w	r5, r3, r5
   3646a:	eors	r6, r5
   3646c:	lsls	r3, r6, #1
   3646e:	orr.w	r3, r3, r8, lsr #31
   36472:	mov.w	r8, r8, lsl #1
   36476:	str	r3, [sp, #264]	; 0x108
   36478:	orr.w	r3, r8, r6, lsr #31
   3647c:	str	r3, [sp, #244]	; 0xf4
   3647e:	ldr	r3, [sp, #76]	; 0x4c
   36480:	adds	r1, r3, r1
   36482:	ldr	r3, [sp, #80]	; 0x50
   36484:	adc.w	sl, r3, r0
   36488:	ldr	r3, [sp, #256]	; 0x100
   3648a:	ldr	r0, [sp, #204]	; 0xcc
   3648c:	adds	r1, r1, r3
   3648e:	ldr	r3, [sp, #260]	; 0x104
   36490:	adc.w	sl, sl, r3
   36494:	ldr	r3, [sp, #236]	; 0xec
   36496:	eor.w	lr, sl, r3
   3649a:	ldr	r3, [sp, #232]	; 0xe8
   3649c:	eor.w	r7, r1, r3
   364a0:	ldr	r3, [sp, #200]	; 0xc8
   364a2:	adds.w	r3, r3, lr
   364a6:	eor.w	r6, r3, r4
   364aa:	ldr	r4, [sp, #260]	; 0x104
   364ac:	adcs	r0, r7
   364ae:	eor.w	ip, r0, r4
   364b2:	mov.w	fp, r6, lsr #24
   364b6:	orr.w	r4, fp, ip, lsl #8
   364ba:	mov.w	ip, ip, lsr #24
   364be:	orr.w	r8, ip, r6, lsl #8
   364c2:	ldr	r6, [sp, #36]	; 0x24
   364c4:	adds	r1, r6, r1
   364c6:	ldr	r6, [sp, #40]	; 0x28
   364c8:	adc.w	sl, r6, sl
   364cc:	adds	r1, r1, r4
   364ce:	str	r1, [sp, #144]	; 0x90
   364d0:	adc.w	r1, sl, r8
   364d4:	str	r1, [sp, #148]	; 0x94
   364d6:	ldr	r1, [sp, #144]	; 0x90
   364d8:	eor.w	lr, r1, lr
   364dc:	ldr	r1, [sp, #148]	; 0x94
   364de:	eors	r7, r1
   364e0:	mov.w	r1, lr, lsr #16
   364e4:	orr.w	r1, r1, r7, lsl #16
   364e8:	lsrs	r7, r7, #16
   364ea:	str	r1, [sp, #232]	; 0xe8
   364ec:	orr.w	r1, r7, lr, lsl #16
   364f0:	str	r1, [sp, #236]	; 0xec
   364f2:	ldr	r1, [sp, #232]	; 0xe8
   364f4:	ldr	r7, [sp, #156]	; 0x9c
   364f6:	adds	r3, r3, r1
   364f8:	ldr	r1, [sp, #236]	; 0xec
   364fa:	eor.w	r4, r4, r3
   364fe:	adc.w	r0, r1, r0
   36502:	eor.w	r8, r0, r8
   36506:	mov.w	r1, r8, lsl #1
   3650a:	orr.w	r6, r1, r4, lsr #31
   3650e:	lsls	r4, r4, #1
   36510:	orr.w	fp, r4, r8, lsr #31
   36514:	ldr	r1, [sp, #60]	; 0x3c
   36516:	ldr	r4, [sp, #152]	; 0x98
   36518:	adds	r1, r1, r4
   3651a:	ldr	r4, [sp, #64]	; 0x40
   3651c:	adc.w	sl, r4, r7
   36520:	adds.w	r1, r1, fp
   36524:	ldr	r4, [sp, #228]	; 0xe4
   36526:	adc.w	sl, sl, r6
   3652a:	eor.w	lr, sl, r9
   3652e:	adds.w	r2, r2, lr
   36532:	eor.w	r7, r1, r4
   36536:	adc.w	r5, r7, r5
   3653a:	eor.w	fp, r2, fp
   3653e:	eor.w	ip, r5, r6
   36542:	mov.w	r4, fp, lsr #24
   36546:	orr.w	r6, r4, ip, lsl #8
   3654a:	ldr	r4, [sp, #76]	; 0x4c
   3654c:	mov.w	ip, ip, lsr #24
   36550:	adds	r1, r4, r1
   36552:	ldr	r4, [sp, #80]	; 0x50
   36554:	orr.w	r8, ip, fp, lsl #8
   36558:	adc.w	sl, r4, sl
   3655c:	adds	r1, r1, r6
   3655e:	str	r1, [sp, #152]	; 0x98
   36560:	adc.w	r1, sl, r8
   36564:	str	r1, [sp, #156]	; 0x9c
   36566:	ldr	r1, [sp, #152]	; 0x98
   36568:	eor.w	lr, r1, lr
   3656c:	ldr	r1, [sp, #156]	; 0x9c
   3656e:	eors	r7, r1
   36570:	mov.w	r1, lr, lsr #16
   36574:	orr.w	r1, r1, r7, lsl #16
   36578:	lsrs	r7, r7, #16
   3657a:	str	r1, [sp, #228]	; 0xe4
   3657c:	orr.w	r1, r7, lr, lsl #16
   36580:	str	r1, [sp, #256]	; 0x100
   36582:	ldr	r1, [sp, #228]	; 0xe4
   36584:	adds	r2, r2, r1
   36586:	str	r2, [sp, #192]	; 0xc0
   36588:	ldr	r2, [sp, #256]	; 0x100
   3658a:	ldr	r1, [sp, #168]	; 0xa8
   3658c:	adc.w	r2, r5, r2
   36590:	str	r2, [sp, #196]	; 0xc4
   36592:	ldr	r2, [sp, #192]	; 0xc0
   36594:	eors	r6, r2
   36596:	ldr	r2, [sp, #196]	; 0xc4
   36598:	eor.w	r8, r2, r8
   3659c:	mov.w	r2, r8, lsl #1
   365a0:	orr.w	r2, r2, r6, lsr #31
   365a4:	lsls	r6, r6, #1
   365a6:	str	r2, [sp, #268]	; 0x10c
   365a8:	orr.w	r2, r6, r8, lsr #31
   365ac:	str	r2, [sp, #260]	; 0x104
   365ae:	ldr	r2, [sp, #28]
   365b0:	adds	r2, r2, r1
   365b2:	ldr	r1, [sp, #32]
   365b4:	ldr	r4, [sp, #172]	; 0xac
   365b6:	ldr	r5, [sp, #248]	; 0xf8
   365b8:	adc.w	r7, r1, r4
   365bc:	ldr	r1, [sp, #224]	; 0xe0
   365be:	ldr	r4, [sp, #224]	; 0xe0
   365c0:	adds	r2, r2, r1
   365c2:	ldr	r1, [sp, #248]	; 0xf8
   365c4:	adc.w	r7, r1, r7
   365c8:	ldr	r1, [sp, #212]	; 0xd4
   365ca:	eor.w	r6, r7, r1
   365ce:	ldr	r1, [sp, #208]	; 0xd0
   365d0:	adds	r3, r3, r6
   365d2:	eor.w	r1, r2, r1
   365d6:	eor.w	r4, r3, r4
   365da:	adc.w	r0, r1, r0
   365de:	eors	r5, r0
   365e0:	mov.w	r8, r4, lsr #24
   365e4:	orr.w	ip, r8, r5, lsl #8
   365e8:	lsrs	r5, r5, #24
   365ea:	orr.w	lr, r5, r4, lsl #8
   365ee:	ldr	r4, [sp, #12]
   365f0:	adds	r2, r4, r2
   365f2:	ldr	r4, [sp, #16]
   365f4:	adc.w	r7, r4, r7
   365f8:	adds.w	r2, r2, ip
   365fc:	str	r2, [sp, #168]	; 0xa8
   365fe:	adc.w	r2, r7, lr
   36602:	str	r2, [sp, #172]	; 0xac
   36604:	ldr	r2, [sp, #168]	; 0xa8
   36606:	eors	r6, r2
   36608:	ldr	r2, [sp, #172]	; 0xac
   3660a:	eors	r1, r2
   3660c:	lsrs	r2, r6, #16
   3660e:	orr.w	r2, r2, r1, lsl #16
   36612:	lsrs	r1, r1, #16
   36614:	str	r2, [sp, #208]	; 0xd0
   36616:	orr.w	r2, r1, r6, lsl #16
   3661a:	str	r2, [sp, #212]	; 0xd4
   3661c:	ldr	r2, [sp, #208]	; 0xd0
   3661e:	ldr	r1, [sp, #164]	; 0xa4
   36620:	adds	r3, r3, r2
   36622:	str	r3, [sp, #200]	; 0xc8
   36624:	ldr	r3, [sp, #212]	; 0xd4
   36626:	adc.w	r3, r0, r3
   3662a:	str	r3, [sp, #204]	; 0xcc
   3662c:	ldr	r2, [sp, #204]	; 0xcc
   3662e:	ldr	r3, [sp, #200]	; 0xc8
   36630:	eor.w	lr, r2, lr
   36634:	eor.w	r3, r3, ip
   36638:	mov.w	r2, lr, lsl #1
   3663c:	orr.w	r2, r2, r3, lsr #31
   36640:	mov.w	ip, r3, lsl #1
   36644:	str	r2, [sp, #224]	; 0xe0
   36646:	orr.w	ip, ip, lr, lsr #31
   3664a:	ldr	r2, [sp, #160]	; 0xa0
   3664c:	ldr	r3, [sp, #108]	; 0x6c
   3664e:	adds	r3, r3, r2
   36650:	ldr	r2, [sp, #112]	; 0x70
   36652:	adc.w	lr, r2, r1
   36656:	ldr	r2, [sp, #240]	; 0xf0
   36658:	adds	r3, r3, r2
   3665a:	ldr	r2, [sp, #252]	; 0xfc
   3665c:	adc.w	lr, lr, r2
   36660:	ldr	r2, [sp, #236]	; 0xec
   36662:	eor.w	r6, lr, r2
   36666:	ldr	r2, [sp, #232]	; 0xe8
   36668:	eor.w	r0, r3, r2
   3666c:	ldr	r2, [sp, #176]	; 0xb0
   3666e:	ldr	r1, [sp, #180]	; 0xb4
   36670:	adds	r2, r2, r6
   36672:	adc.w	r5, r1, r0
   36676:	ldr	r1, [sp, #240]	; 0xf0
   36678:	eor.w	r8, r2, r1
   3667c:	ldr	r1, [sp, #252]	; 0xfc
   3667e:	eor.w	r4, r5, r1
   36682:	mov.w	r9, r8, lsr #24
   36686:	orr.w	r1, r9, r4, lsl #8
   3668a:	lsrs	r4, r4, #24
   3668c:	orr.w	r7, r4, r8, lsl #8
   36690:	ldr	r4, [sp, #100]	; 0x64
   36692:	adds	r3, r4, r3
   36694:	ldr	r4, [sp, #104]	; 0x68
   36696:	adc.w	lr, r4, lr
   3669a:	adds	r3, r3, r1
   3669c:	str	r3, [sp, #160]	; 0xa0
   3669e:	adc.w	r3, lr, r7
   366a2:	str	r3, [sp, #164]	; 0xa4
   366a4:	ldr	r3, [sp, #160]	; 0xa0
   366a6:	ldr	r4, [sp, #244]	; 0xf4
   366a8:	eors	r6, r3
   366aa:	ldr	r3, [sp, #164]	; 0xa4
   366ac:	eors	r0, r3
   366ae:	lsrs	r3, r6, #16
   366b0:	orr.w	r3, r3, r0, lsl #16
   366b4:	lsrs	r0, r0, #16
   366b6:	str	r3, [sp, #232]	; 0xe8
   366b8:	orr.w	r3, r0, r6, lsl #16
   366bc:	str	r3, [sp, #236]	; 0xec
   366be:	ldr	r3, [sp, #232]	; 0xe8
   366c0:	ldr	r0, [sp, #148]	; 0x94
   366c2:	adds	r2, r2, r3
   366c4:	ldr	r3, [sp, #236]	; 0xec
   366c6:	eor.w	r1, r1, r2
   366ca:	adc.w	r5, r3, r5
   366ce:	eors	r7, r5
   366d0:	lsls	r3, r7, #1
   366d2:	orr.w	r3, r3, r1, lsr #31
   366d6:	lsls	r1, r1, #1
   366d8:	str	r3, [sp, #248]	; 0xf8
   366da:	orr.w	r3, r1, r7, lsr #31
   366de:	ldr	r1, [sp, #144]	; 0x90
   366e0:	str	r3, [sp, #240]	; 0xf0
   366e2:	ldr	r3, [sp, #92]	; 0x5c
   366e4:	adds	r1, r3, r1
   366e6:	ldr	r3, [sp, #96]	; 0x60
   366e8:	adc.w	sl, r3, r0
   366ec:	ldr	r3, [sp, #244]	; 0xf4
   366ee:	ldr	r0, [sp, #188]	; 0xbc
   366f0:	adds	r1, r1, r3
   366f2:	ldr	r3, [sp, #264]	; 0x108
   366f4:	adc.w	sl, sl, r3
   366f8:	ldr	r3, [sp, #220]	; 0xdc
   366fa:	eor.w	lr, sl, r3
   366fe:	ldr	r3, [sp, #216]	; 0xd8
   36700:	eor.w	r6, r1, r3
   36704:	ldr	r3, [sp, #184]	; 0xb8
   36706:	adds.w	r3, r3, lr
   3670a:	eor.w	r8, r3, r4
   3670e:	ldr	r4, [sp, #264]	; 0x108
   36710:	adcs	r0, r6
   36712:	eor.w	r7, r0, r4
   36716:	mov.w	fp, r8, lsr #24
   3671a:	orr.w	r4, fp, r7, lsl #8
   3671e:	lsrs	r7, r7, #24
   36720:	orr.w	r9, r7, r8, lsl #8
   36724:	ldr	r7, [sp, #116]	; 0x74
   36726:	adds	r1, r7, r1
   36728:	ldr	r7, [sp, #120]	; 0x78
   3672a:	adc.w	sl, r7, sl
   3672e:	adds	r1, r1, r4
   36730:	str	r1, [sp, #144]	; 0x90
   36732:	adc.w	r1, sl, r9
   36736:	str	r1, [sp, #148]	; 0x94
   36738:	ldr	r1, [sp, #144]	; 0x90
   3673a:	eor.w	lr, r1, lr
   3673e:	ldr	r1, [sp, #148]	; 0x94
   36740:	eors	r6, r1
   36742:	mov.w	r1, lr, lsr #16
   36746:	orr.w	r8, r1, r6, lsl #16
   3674a:	lsrs	r6, r6, #16
   3674c:	adds.w	r3, r3, r8
   36750:	orr.w	sl, r6, lr, lsl #16
   36754:	adc.w	r0, r0, sl
   36758:	eors	r4, r3
   3675a:	eor.w	r9, r0, r9
   3675e:	ldr	r6, [sp, #156]	; 0x9c
   36760:	mov.w	r1, r9, lsl #1
   36764:	orr.w	r1, r1, r4, lsr #31
   36768:	lsls	r4, r4, #1
   3676a:	orr.w	fp, r4, r9, lsr #31
   3676e:	str	r1, [sp, #216]	; 0xd8
   36770:	ldr	r4, [sp, #152]	; 0x98
   36772:	ldr	r1, [sp, #20]
   36774:	adds	r1, r1, r4
   36776:	ldr	r4, [sp, #24]
   36778:	adc.w	r9, r4, r6
   3677c:	ldr	r4, [sp, #224]	; 0xe0
   3677e:	adds.w	r1, r1, ip
   36782:	adc.w	r9, r9, r4
   36786:	eor.w	r7, r1, r8
   3678a:	eor.w	lr, r9, sl
   3678e:	adds.w	r2, r2, lr
   36792:	adc.w	r5, r7, r5
   36796:	eor.w	ip, r2, ip
   3679a:	eor.w	r6, r5, r4
   3679e:	mov.w	sl, ip, lsr #24
   367a2:	orr.w	r4, sl, r6, lsl #8
   367a6:	lsrs	r6, r6, #24
   367a8:	orr.w	r8, r6, ip, lsl #8
   367ac:	ldr	r6, [sp, #52]	; 0x34
   367ae:	adds	r1, r6, r1
   367b0:	ldr	r6, [sp, #56]	; 0x38
   367b2:	adc.w	r9, r6, r9
   367b6:	adds	r1, r1, r4
   367b8:	str	r1, [sp, #152]	; 0x98
   367ba:	adc.w	r1, r9, r8
   367be:	str	r1, [sp, #156]	; 0x9c
   367c0:	ldr	r1, [sp, #152]	; 0x98
   367c2:	eor.w	lr, r1, lr
   367c6:	ldr	r1, [sp, #156]	; 0x9c
   367c8:	eors	r7, r1
   367ca:	mov.w	r1, lr, lsr #16
   367ce:	orr.w	r1, r1, r7, lsl #16
   367d2:	lsrs	r7, r7, #16
   367d4:	str	r1, [sp, #220]	; 0xdc
   367d6:	orr.w	r1, r7, lr, lsl #16
   367da:	str	r1, [sp, #224]	; 0xe0
   367dc:	ldr	r1, [sp, #220]	; 0xdc
   367de:	adds	r2, r2, r1
   367e0:	str	r2, [sp, #176]	; 0xb0
   367e2:	ldr	r2, [sp, #224]	; 0xe0
   367e4:	ldr	r1, [sp, #168]	; 0xa8
   367e6:	adc.w	r2, r5, r2
   367ea:	str	r2, [sp, #180]	; 0xb4
   367ec:	ldr	r2, [sp, #176]	; 0xb0
   367ee:	eors	r4, r2
   367f0:	ldr	r2, [sp, #180]	; 0xb4
   367f2:	eor.w	r8, r2, r8
   367f6:	mov.w	r2, r8, lsl #1
   367fa:	orr.w	r2, r2, r4, lsr #31
   367fe:	lsls	r4, r4, #1
   36800:	str	r2, [sp, #252]	; 0xfc
   36802:	orr.w	r2, r4, r8, lsr #31
   36806:	str	r2, [sp, #244]	; 0xf4
   36808:	ldr	r2, [sp, #44]	; 0x2c
   3680a:	ldr	r4, [sp, #172]	; 0xac
   3680c:	adds	r2, r2, r1
   3680e:	ldr	r1, [sp, #48]	; 0x30
   36810:	adc.w	r7, r1, r4
   36814:	ldr	r1, [sp, #240]	; 0xf0
   36816:	adds	r2, r2, r1
   36818:	ldr	r1, [sp, #248]	; 0xf8
   3681a:	adc.w	r7, r1, r7
   3681e:	ldr	r1, [sp, #256]	; 0x100
   36820:	eor.w	r4, r7, r1
   36824:	ldr	r1, [sp, #228]	; 0xe4
   36826:	adds	r3, r3, r4
   36828:	eor.w	r9, r2, r1
   3682c:	ldr	r1, [sp, #240]	; 0xf0
   3682e:	adc.w	r0, r0, r9
   36832:	eor.w	ip, r3, r1
   36836:	ldr	r1, [sp, #248]	; 0xf8
   36838:	eor.w	r5, r0, r1
   3683c:	mov.w	lr, ip, lsr #24
   36840:	orr.w	r1, lr, r5, lsl #8
   36844:	lsrs	r5, r5, #24
   36846:	orr.w	r6, r5, ip, lsl #8
   3684a:	ldr	r5, [sp, #84]	; 0x54
   3684c:	adds	r2, r5, r2
   3684e:	ldr	r5, [sp, #88]	; 0x58
   36850:	adc.w	r7, r5, r7
   36854:	adds	r2, r2, r1
   36856:	str	r2, [sp, #168]	; 0xa8
   36858:	adc.w	r2, r7, r6
   3685c:	str	r2, [sp, #172]	; 0xac
   3685e:	ldr	r2, [sp, #168]	; 0xa8
   36860:	eors	r4, r2
   36862:	ldr	r2, [sp, #172]	; 0xac
   36864:	eor.w	r2, r2, r9
   36868:	lsrs	r5, r4, #16
   3686a:	orr.w	r5, r5, r2, lsl #16
   3686e:	mov.w	r9, r2, lsr #16
   36872:	orr.w	r9, r9, r4, lsl #16
   36876:	adds	r3, r3, r5
   36878:	str	r3, [sp, #184]	; 0xb8
   3687a:	adc.w	r3, r0, r9
   3687e:	str	r3, [sp, #188]	; 0xbc
   36880:	ldr	r3, [sp, #184]	; 0xb8
   36882:	ldr	r2, [sp, #160]	; 0xa0
   36884:	eors	r1, r3
   36886:	ldr	r3, [sp, #188]	; 0xbc
   36888:	ldr	r0, [sp, #196]	; 0xc4
   3688a:	eors	r6, r3
   3688c:	str	r5, [sp, #228]	; 0xe4
   3688e:	lsls	r3, r6, #1
   36890:	orr.w	r3, r3, r1, lsr #31
   36894:	lsls	r1, r1, #1
   36896:	str	r3, [sp, #248]	; 0xf8
   36898:	orr.w	r3, r1, r6, lsr #31
   3689c:	str	r3, [sp, #240]	; 0xf0
   3689e:	ldr	r3, [sp, #36]	; 0x24
   368a0:	ldr	r1, [sp, #164]	; 0xa4
   368a2:	adds	r3, r3, r2
   368a4:	ldr	r2, [sp, #40]	; 0x28
   368a6:	adc.w	ip, r2, r1
   368aa:	ldr	r2, [sp, #216]	; 0xd8
   368ac:	adds.w	r3, r3, fp
   368b0:	adc.w	ip, ip, r2
   368b4:	ldr	r2, [sp, #212]	; 0xd4
   368b6:	eor.w	r7, ip, r2
   368ba:	ldr	r2, [sp, #208]	; 0xd0
   368bc:	eor.w	r1, r3, r2
   368c0:	ldr	r2, [sp, #192]	; 0xc0
   368c2:	adds	r2, r2, r7
   368c4:	adc.w	r5, r0, r1
   368c8:	ldr	r0, [sp, #216]	; 0xd8
   368ca:	eor.w	fp, r2, fp
   368ce:	eors	r0, r5
   368d0:	mov.w	r4, fp, lsr #24
   368d4:	orr.w	r8, r4, r0, lsl #8
   368d8:	lsrs	r0, r0, #24
   368da:	orr.w	r6, r0, fp, lsl #8
   368de:	ldr	r0, [sp, #4]
   368e0:	adds	r3, r0, r3
   368e2:	ldr	r0, [sp, #8]
   368e4:	adc.w	ip, r0, ip
   368e8:	adds.w	r3, r3, r8
   368ec:	str	r3, [sp, #160]	; 0xa0
   368ee:	adc.w	r3, ip, r6
   368f2:	str	r3, [sp, #164]	; 0xa4
   368f4:	ldr	r3, [sp, #160]	; 0xa0
   368f6:	eors	r7, r3
   368f8:	ldr	r3, [sp, #164]	; 0xa4
   368fa:	eors	r1, r3
   368fc:	lsrs	r3, r7, #16
   368fe:	orr.w	r3, r3, r1, lsl #16
   36902:	lsrs	r1, r1, #16
   36904:	str	r3, [sp, #208]	; 0xd0
   36906:	orr.w	r3, r1, r7, lsl #16
   3690a:	str	r3, [sp, #212]	; 0xd4
   3690c:	ldr	r3, [sp, #208]	; 0xd0
   3690e:	ldr	r1, [sp, #144]	; 0x90
   36910:	adds	r2, r2, r3
   36912:	ldr	r3, [sp, #212]	; 0xd4
   36914:	eor.w	r8, r2, r8
   36918:	ldr	r0, [sp, #148]	; 0x94
   3691a:	adc.w	r5, r3, r5
   3691e:	ldr	r4, [sp, #260]	; 0x104
   36920:	eors	r6, r5
   36922:	lsls	r3, r6, #1
   36924:	orr.w	r3, r3, r8, lsr #31
   36928:	mov.w	r8, r8, lsl #1
   3692c:	str	r3, [sp, #256]	; 0x100
   3692e:	orr.w	r3, r8, r6, lsr #31
   36932:	str	r3, [sp, #216]	; 0xd8
   36934:	ldr	r3, [sp, #124]	; 0x7c
   36936:	adds	r1, r3, r1
   36938:	ldr	r3, [sp, #128]	; 0x80
   3693a:	adc.w	sl, r3, r0
   3693e:	ldr	r3, [sp, #260]	; 0x104
   36940:	ldr	r0, [sp, #204]	; 0xcc
   36942:	adds	r1, r1, r3
   36944:	ldr	r3, [sp, #268]	; 0x10c
   36946:	adc.w	sl, sl, r3
   3694a:	ldr	r3, [sp, #236]	; 0xec
   3694c:	eor.w	lr, sl, r3
   36950:	ldr	r3, [sp, #232]	; 0xe8
   36952:	eor.w	r7, r1, r3
   36956:	ldr	r3, [sp, #200]	; 0xc8
   36958:	adds.w	r3, r3, lr
   3695c:	eor.w	r6, r3, r4
   36960:	ldr	r4, [sp, #268]	; 0x10c
   36962:	adcs	r0, r7
   36964:	eor.w	ip, r0, r4
   36968:	mov.w	fp, r6, lsr #24
   3696c:	orr.w	r4, fp, ip, lsl #8
   36970:	mov.w	ip, ip, lsr #24
   36974:	orr.w	r8, ip, r6, lsl #8
   36978:	ldr	r6, [sp, #68]	; 0x44
   3697a:	adds	r1, r6, r1
   3697c:	ldr	r6, [sp, #72]	; 0x48
   3697e:	adc.w	sl, r6, sl
   36982:	adds	r1, r1, r4
   36984:	str	r1, [sp, #144]	; 0x90
   36986:	adc.w	r1, sl, r8
   3698a:	str	r1, [sp, #148]	; 0x94
   3698c:	ldr	r1, [sp, #144]	; 0x90
   3698e:	eor.w	lr, r1, lr
   36992:	ldr	r1, [sp, #148]	; 0x94
   36994:	eors	r7, r1
   36996:	mov.w	r1, lr, lsr #16
   3699a:	orr.w	r1, r1, r7, lsl #16
   3699e:	lsrs	r7, r7, #16
   369a0:	str	r1, [sp, #232]	; 0xe8
   369a2:	orr.w	r1, r7, lr, lsl #16
   369a6:	str	r1, [sp, #236]	; 0xec
   369a8:	ldr	r1, [sp, #232]	; 0xe8
   369aa:	ldr	r7, [sp, #156]	; 0x9c
   369ac:	adds	r3, r3, r1
   369ae:	ldr	r1, [sp, #236]	; 0xec
   369b0:	eor.w	r4, r4, r3
   369b4:	adc.w	r0, r1, r0
   369b8:	eor.w	r8, r0, r8
   369bc:	mov.w	r1, r8, lsl #1
   369c0:	orr.w	r6, r1, r4, lsr #31
   369c4:	lsls	r4, r4, #1
   369c6:	orr.w	fp, r4, r8, lsr #31
   369ca:	ldr	r1, [sp, #76]	; 0x4c
   369cc:	ldr	r4, [sp, #152]	; 0x98
   369ce:	adds	r1, r1, r4
   369d0:	ldr	r4, [sp, #80]	; 0x50
   369d2:	adc.w	sl, r4, r7
   369d6:	adds.w	r1, r1, fp
   369da:	adc.w	sl, sl, r6
   369de:	ldr	r4, [sp, #228]	; 0xe4
   369e0:	eor.w	lr, sl, r9
   369e4:	adds.w	r2, r2, lr
   369e8:	eor.w	r7, r1, r4
   369ec:	adc.w	r5, r7, r5
   369f0:	eor.w	fp, r2, fp
   369f4:	eor.w	ip, r5, r6
   369f8:	mov.w	r4, fp, lsr #24
   369fc:	orr.w	r6, r4, ip, lsl #8
   36a00:	ldr	r4, [sp, #4]
   36a02:	mov.w	ip, ip, lsr #24
   36a06:	adds	r1, r4, r1
   36a08:	ldr	r4, [sp, #8]
   36a0a:	orr.w	r8, ip, fp, lsl #8
   36a0e:	adc.w	sl, r4, sl
   36a12:	adds	r1, r1, r6
   36a14:	str	r1, [sp, #152]	; 0x98
   36a16:	adc.w	r1, sl, r8
   36a1a:	str	r1, [sp, #156]	; 0x9c
   36a1c:	ldr	r1, [sp, #152]	; 0x98
   36a1e:	ldr	r4, [sp, #172]	; 0xac
   36a20:	eor.w	lr, r1, lr
   36a24:	ldr	r1, [sp, #156]	; 0x9c
   36a26:	eors	r7, r1
   36a28:	mov.w	r1, lr, lsr #16
   36a2c:	orr.w	r1, r1, r7, lsl #16
   36a30:	lsrs	r7, r7, #16
   36a32:	str	r1, [sp, #228]	; 0xe4
   36a34:	orr.w	r1, r7, lr, lsl #16
   36a38:	str	r1, [sp, #260]	; 0x104
   36a3a:	ldr	r1, [sp, #228]	; 0xe4
   36a3c:	adds	r2, r2, r1
   36a3e:	str	r2, [sp, #192]	; 0xc0
   36a40:	ldr	r2, [sp, #260]	; 0x104
   36a42:	ldr	r1, [sp, #168]	; 0xa8
   36a44:	adc.w	r2, r5, r2
   36a48:	str	r2, [sp, #196]	; 0xc4
   36a4a:	ldr	r2, [sp, #192]	; 0xc0
   36a4c:	ldr	r5, [sp, #252]	; 0xfc
   36a4e:	eors	r6, r2
   36a50:	ldr	r2, [sp, #196]	; 0xc4
   36a52:	eor.w	r8, r2, r8
   36a56:	mov.w	r2, r8, lsl #1
   36a5a:	orr.w	r2, r2, r6, lsr #31
   36a5e:	lsls	r6, r6, #1
   36a60:	str	r2, [sp, #268]	; 0x10c
   36a62:	orr.w	r2, r6, r8, lsr #31
   36a66:	str	r2, [sp, #264]	; 0x108
   36a68:	ldr	r2, [sp, #44]	; 0x2c
   36a6a:	adds	r2, r2, r1
   36a6c:	ldr	r1, [sp, #48]	; 0x30
   36a6e:	adc.w	r7, r1, r4
   36a72:	ldr	r1, [sp, #244]	; 0xf4
   36a74:	ldr	r4, [sp, #244]	; 0xf4
   36a76:	adds	r2, r2, r1
   36a78:	ldr	r1, [sp, #252]	; 0xfc
   36a7a:	adc.w	r7, r1, r7
   36a7e:	ldr	r1, [sp, #212]	; 0xd4
   36a80:	eor.w	r6, r7, r1
   36a84:	ldr	r1, [sp, #208]	; 0xd0
   36a86:	adds	r3, r3, r6
   36a88:	eor.w	r1, r2, r1
   36a8c:	eor.w	r4, r3, r4
   36a90:	adc.w	r0, r1, r0
   36a94:	eors	r5, r0
   36a96:	mov.w	r8, r4, lsr #24
   36a9a:	orr.w	ip, r8, r5, lsl #8
   36a9e:	lsrs	r5, r5, #24
   36aa0:	orr.w	lr, r5, r4, lsl #8
   36aa4:	ldr	r4, [sp, #60]	; 0x3c
   36aa6:	adds	r2, r4, r2
   36aa8:	ldr	r4, [sp, #64]	; 0x40
   36aaa:	adc.w	r7, r4, r7
   36aae:	adds.w	r2, r2, ip
   36ab2:	str	r2, [sp, #168]	; 0xa8
   36ab4:	adc.w	r2, r7, lr
   36ab8:	str	r2, [sp, #172]	; 0xac
   36aba:	ldr	r2, [sp, #168]	; 0xa8
   36abc:	eors	r6, r2
   36abe:	ldr	r2, [sp, #172]	; 0xac
   36ac0:	eors	r1, r2
   36ac2:	lsrs	r2, r6, #16
   36ac4:	orr.w	r2, r2, r1, lsl #16
   36ac8:	lsrs	r1, r1, #16
   36aca:	str	r2, [sp, #208]	; 0xd0
   36acc:	orr.w	r2, r1, r6, lsl #16
   36ad0:	str	r2, [sp, #212]	; 0xd4
   36ad2:	ldr	r2, [sp, #208]	; 0xd0
   36ad4:	ldr	r1, [sp, #164]	; 0xa4
   36ad6:	adds	r3, r3, r2
   36ad8:	str	r3, [sp, #200]	; 0xc8
   36ada:	ldr	r3, [sp, #212]	; 0xd4
   36adc:	adc.w	r3, r0, r3
   36ae0:	str	r3, [sp, #204]	; 0xcc
   36ae2:	ldr	r2, [sp, #204]	; 0xcc
   36ae4:	ldr	r3, [sp, #200]	; 0xc8
   36ae6:	eor.w	lr, r2, lr
   36aea:	eor.w	r3, r3, ip
   36aee:	mov.w	r2, lr, lsl #1
   36af2:	orr.w	r2, r2, r3, lsr #31
   36af6:	mov.w	ip, r3, lsl #1
   36afa:	str	r2, [sp, #244]	; 0xf4
   36afc:	orr.w	ip, ip, lr, lsr #31
   36b00:	ldr	r2, [sp, #160]	; 0xa0
   36b02:	ldr	r3, [sp, #20]
   36b04:	adds	r3, r3, r2
   36b06:	ldr	r2, [sp, #24]
   36b08:	adc.w	lr, r2, r1
   36b0c:	ldr	r2, [sp, #240]	; 0xf0
   36b0e:	ldr	r1, [sp, #180]	; 0xb4
   36b10:	adds	r3, r3, r2
   36b12:	ldr	r2, [sp, #248]	; 0xf8
   36b14:	adc.w	lr, lr, r2
   36b18:	ldr	r2, [sp, #236]	; 0xec
   36b1a:	eor.w	r6, lr, r2
   36b1e:	ldr	r2, [sp, #232]	; 0xe8
   36b20:	eor.w	r0, r3, r2
   36b24:	ldr	r2, [sp, #176]	; 0xb0
   36b26:	adds	r2, r2, r6
   36b28:	adc.w	r5, r1, r0
   36b2c:	ldr	r1, [sp, #240]	; 0xf0
   36b2e:	eor.w	r8, r2, r1
   36b32:	ldr	r1, [sp, #248]	; 0xf8
   36b34:	eor.w	r4, r5, r1
   36b38:	mov.w	r9, r8, lsr #24
   36b3c:	orr.w	r1, r9, r4, lsl #8
   36b40:	lsrs	r4, r4, #24
   36b42:	orr.w	r7, r4, r8, lsl #8
   36b46:	ldr	r4, [sp, #36]	; 0x24
   36b48:	adds	r3, r4, r3
   36b4a:	ldr	r4, [sp, #40]	; 0x28
   36b4c:	adc.w	lr, r4, lr
   36b50:	adds	r3, r3, r1
   36b52:	str	r3, [sp, #160]	; 0xa0
   36b54:	adc.w	r3, lr, r7
   36b58:	str	r3, [sp, #164]	; 0xa4
   36b5a:	ldr	r3, [sp, #160]	; 0xa0
   36b5c:	eors	r6, r3
   36b5e:	ldr	r3, [sp, #164]	; 0xa4
   36b60:	eors	r0, r3
   36b62:	lsrs	r3, r6, #16
   36b64:	orr.w	r3, r3, r0, lsl #16
   36b68:	lsrs	r0, r0, #16
   36b6a:	str	r3, [sp, #232]	; 0xe8
   36b6c:	orr.w	r3, r0, r6, lsl #16
   36b70:	str	r3, [sp, #236]	; 0xec
   36b72:	ldr	r3, [sp, #232]	; 0xe8
   36b74:	adds	r2, r2, r3
   36b76:	ldr	r3, [sp, #236]	; 0xec
   36b78:	eor.w	r1, r1, r2
   36b7c:	adc.w	r5, r3, r5
   36b80:	eors	r7, r5
   36b82:	lsls	r3, r7, #1
   36b84:	orr.w	r3, r3, r1, lsr #31
   36b88:	lsls	r1, r1, #1
   36b8a:	str	r3, [sp, #248]	; 0xf8
   36b8c:	orr.w	r3, r1, r7, lsr #31
   36b90:	str	r3, [sp, #240]	; 0xf0
   36b92:	ldr	r3, [sp, #84]	; 0x54
   36b94:	ldr	r1, [sp, #144]	; 0x90
   36b96:	ldr	r0, [sp, #148]	; 0x94
   36b98:	adds	r1, r3, r1
   36b9a:	ldr	r3, [sp, #88]	; 0x58
   36b9c:	ldr	r4, [sp, #216]	; 0xd8
   36b9e:	adc.w	sl, r3, r0
   36ba2:	ldr	r3, [sp, #216]	; 0xd8
   36ba4:	ldr	r0, [sp, #188]	; 0xbc
   36ba6:	adds	r1, r1, r3
   36ba8:	ldr	r3, [sp, #256]	; 0x100
   36baa:	adc.w	sl, sl, r3
   36bae:	ldr	r3, [sp, #224]	; 0xe0
   36bb0:	eor.w	lr, sl, r3
   36bb4:	ldr	r3, [sp, #220]	; 0xdc
   36bb6:	eor.w	r6, r1, r3
   36bba:	ldr	r3, [sp, #184]	; 0xb8
   36bbc:	adds.w	r3, r3, lr
   36bc0:	eor.w	r8, r3, r4
   36bc4:	ldr	r4, [sp, #256]	; 0x100
   36bc6:	adcs	r0, r6
   36bc8:	eor.w	r7, r0, r4
   36bcc:	mov.w	fp, r8, lsr #24
   36bd0:	orr.w	r4, fp, r7, lsl #8
   36bd4:	lsrs	r7, r7, #24
   36bd6:	orr.w	r9, r7, r8, lsl #8
   36bda:	ldr	r7, [sp, #124]	; 0x7c
   36bdc:	adds	r1, r7, r1
   36bde:	ldr	r7, [sp, #128]	; 0x80
   36be0:	adc.w	sl, r7, sl
   36be4:	adds	r1, r1, r4
   36be6:	str	r1, [sp, #144]	; 0x90
   36be8:	adc.w	r1, sl, r9
   36bec:	str	r1, [sp, #148]	; 0x94
   36bee:	ldr	r1, [sp, #144]	; 0x90
   36bf0:	eor.w	lr, r1, lr
   36bf4:	ldr	r1, [sp, #148]	; 0x94
   36bf6:	eors	r6, r1
   36bf8:	mov.w	r1, lr, lsr #16
   36bfc:	orr.w	r8, r1, r6, lsl #16
   36c00:	lsrs	r6, r6, #16
   36c02:	adds.w	r3, r3, r8
   36c06:	orr.w	sl, r6, lr, lsl #16
   36c0a:	adc.w	r0, r0, sl
   36c0e:	eors	r4, r3
   36c10:	eor.w	r9, r0, r9
   36c14:	ldr	r6, [sp, #156]	; 0x9c
   36c16:	mov.w	r1, r9, lsl #1
   36c1a:	orr.w	r1, r1, r4, lsr #31
   36c1e:	lsls	r4, r4, #1
   36c20:	orr.w	fp, r4, r9, lsr #31
   36c24:	str	r1, [sp, #216]	; 0xd8
   36c26:	ldr	r4, [sp, #152]	; 0x98
   36c28:	ldr	r1, [sp, #116]	; 0x74
   36c2a:	adds	r1, r1, r4
   36c2c:	ldr	r4, [sp, #120]	; 0x78
   36c2e:	adc.w	r9, r4, r6
   36c32:	ldr	r4, [sp, #244]	; 0xf4
   36c34:	adds.w	r1, r1, ip
   36c38:	adc.w	r9, r9, r4
   36c3c:	eor.w	r7, r1, r8
   36c40:	eor.w	lr, r9, sl
   36c44:	adds.w	r2, r2, lr
   36c48:	adc.w	r5, r7, r5
   36c4c:	eor.w	ip, r2, ip
   36c50:	eor.w	r6, r5, r4
   36c54:	mov.w	sl, ip, lsr #24
   36c58:	orr.w	r4, sl, r6, lsl #8
   36c5c:	lsrs	r6, r6, #24
   36c5e:	orr.w	r8, r6, ip, lsl #8
   36c62:	ldr	r6, [sp, #12]
   36c64:	adds	r1, r6, r1
   36c66:	ldr	r6, [sp, #16]
   36c68:	adc.w	r9, r6, r9
   36c6c:	adds	r1, r1, r4
   36c6e:	str	r1, [sp, #152]	; 0x98
   36c70:	adc.w	r1, r9, r8
   36c74:	str	r1, [sp, #156]	; 0x9c
   36c76:	ldr	r1, [sp, #152]	; 0x98
   36c78:	eor.w	lr, r1, lr
   36c7c:	ldr	r1, [sp, #156]	; 0x9c
   36c7e:	eors	r7, r1
   36c80:	mov.w	r1, lr, lsr #16
   36c84:	orr.w	r1, r1, r7, lsl #16
   36c88:	lsrs	r7, r7, #16
   36c8a:	str	r1, [sp, #220]	; 0xdc
   36c8c:	orr.w	r1, r7, lr, lsl #16
   36c90:	str	r1, [sp, #224]	; 0xe0
   36c92:	ldr	r1, [sp, #220]	; 0xdc
   36c94:	adds	r2, r2, r1
   36c96:	str	r2, [sp, #176]	; 0xb0
   36c98:	ldr	r2, [sp, #224]	; 0xe0
   36c9a:	ldr	r1, [sp, #168]	; 0xa8
   36c9c:	adc.w	r2, r5, r2
   36ca0:	str	r2, [sp, #180]	; 0xb4
   36ca2:	ldr	r2, [sp, #176]	; 0xb0
   36ca4:	eors	r4, r2
   36ca6:	ldr	r2, [sp, #180]	; 0xb4
   36ca8:	eor.w	r8, r2, r8
   36cac:	mov.w	r2, r8, lsl #1
   36cb0:	orr.w	r2, r2, r4, lsr #31
   36cb4:	lsls	r4, r4, #1
   36cb6:	str	r2, [sp, #252]	; 0xfc
   36cb8:	orr.w	r2, r4, r8, lsr #31
   36cbc:	str	r2, [sp, #244]	; 0xf4
   36cbe:	ldr	r2, [sp, #92]	; 0x5c
   36cc0:	ldr	r4, [sp, #172]	; 0xac
   36cc2:	adds	r2, r2, r1
   36cc4:	ldr	r1, [sp, #96]	; 0x60
   36cc6:	adc.w	r7, r1, r4
   36cca:	ldr	r1, [sp, #240]	; 0xf0
   36ccc:	adds	r2, r2, r1
   36cce:	ldr	r1, [sp, #248]	; 0xf8
   36cd0:	adc.w	r7, r1, r7
   36cd4:	ldr	r1, [sp, #260]	; 0x104
   36cd6:	eor.w	r4, r7, r1
   36cda:	ldr	r1, [sp, #228]	; 0xe4
   36cdc:	adds	r3, r3, r4
   36cde:	eor.w	r9, r2, r1
   36ce2:	ldr	r1, [sp, #240]	; 0xf0
   36ce4:	adc.w	r0, r0, r9
   36ce8:	eor.w	ip, r3, r1
   36cec:	ldr	r1, [sp, #248]	; 0xf8
   36cee:	eor.w	r5, r0, r1
   36cf2:	mov.w	lr, ip, lsr #24
   36cf6:	orr.w	r1, lr, r5, lsl #8
   36cfa:	lsrs	r5, r5, #24
   36cfc:	orr.w	r6, r5, ip, lsl #8
   36d00:	ldr	r5, [sp, #100]	; 0x64
   36d02:	adds	r2, r5, r2
   36d04:	ldr	r5, [sp, #104]	; 0x68
   36d06:	adc.w	r7, r5, r7
   36d0a:	adds	r2, r2, r1
   36d0c:	str	r2, [sp, #168]	; 0xa8
   36d0e:	adc.w	r2, r7, r6
   36d12:	str	r2, [sp, #172]	; 0xac
   36d14:	ldr	r2, [sp, #168]	; 0xa8
   36d16:	eors	r4, r2
   36d18:	ldr	r2, [sp, #172]	; 0xac
   36d1a:	eor.w	r2, r2, r9
   36d1e:	lsrs	r5, r4, #16
   36d20:	orr.w	r5, r5, r2, lsl #16
   36d24:	mov.w	r9, r2, lsr #16
   36d28:	orr.w	r9, r9, r4, lsl #16
   36d2c:	adds	r3, r3, r5
   36d2e:	str	r3, [sp, #184]	; 0xb8
   36d30:	adc.w	r3, r0, r9
   36d34:	str	r3, [sp, #188]	; 0xbc
   36d36:	ldr	r3, [sp, #184]	; 0xb8
   36d38:	ldr	r2, [sp, #160]	; 0xa0
   36d3a:	eors	r1, r3
   36d3c:	ldr	r3, [sp, #188]	; 0xbc
   36d3e:	str	r5, [sp, #228]	; 0xe4
   36d40:	eors	r6, r3
   36d42:	lsls	r3, r6, #1
   36d44:	orr.w	r3, r3, r1, lsr #31
   36d48:	lsls	r1, r1, #1
   36d4a:	str	r3, [sp, #248]	; 0xf8
   36d4c:	orr.w	r3, r1, r6, lsr #31
   36d50:	str	r3, [sp, #240]	; 0xf0
   36d52:	ldr	r3, [sp, #52]	; 0x34
   36d54:	adds	r3, r3, r2
   36d56:	ldr	r2, [sp, #56]	; 0x38
   36d58:	ldr	r1, [sp, #164]	; 0xa4
   36d5a:	ldr	r0, [sp, #196]	; 0xc4
   36d5c:	adc.w	ip, r2, r1
   36d60:	ldr	r2, [sp, #216]	; 0xd8
   36d62:	adds.w	r3, r3, fp
   36d66:	adc.w	ip, ip, r2
   36d6a:	ldr	r2, [sp, #212]	; 0xd4
   36d6c:	eor.w	r7, ip, r2
   36d70:	ldr	r2, [sp, #208]	; 0xd0
   36d72:	eor.w	r1, r3, r2
   36d76:	ldr	r2, [sp, #192]	; 0xc0
   36d78:	adds	r2, r2, r7
   36d7a:	adc.w	r5, r0, r1
   36d7e:	ldr	r0, [sp, #216]	; 0xd8
   36d80:	eor.w	fp, r2, fp
   36d84:	eors	r0, r5
   36d86:	mov.w	r4, fp, lsr #24
   36d8a:	orr.w	r8, r4, r0, lsl #8
   36d8e:	lsrs	r0, r0, #24
   36d90:	orr.w	r6, r0, fp, lsl #8
   36d94:	ldr	r0, [sp, #68]	; 0x44
   36d96:	ldr	r4, [sp, #264]	; 0x108
   36d98:	adds	r3, r0, r3
   36d9a:	ldr	r0, [sp, #72]	; 0x48
   36d9c:	adc.w	ip, r0, ip
   36da0:	adds.w	r3, r3, r8
   36da4:	str	r3, [sp, #160]	; 0xa0
   36da6:	adc.w	r3, ip, r6
   36daa:	str	r3, [sp, #164]	; 0xa4
   36dac:	ldr	r3, [sp, #160]	; 0xa0
   36dae:	ldr	r0, [sp, #148]	; 0x94
   36db0:	eors	r7, r3
   36db2:	ldr	r3, [sp, #164]	; 0xa4
   36db4:	eors	r1, r3
   36db6:	lsrs	r3, r7, #16
   36db8:	orr.w	r3, r3, r1, lsl #16
   36dbc:	lsrs	r1, r1, #16
   36dbe:	str	r3, [sp, #208]	; 0xd0
   36dc0:	orr.w	r3, r1, r7, lsl #16
   36dc4:	str	r3, [sp, #212]	; 0xd4
   36dc6:	ldr	r3, [sp, #208]	; 0xd0
   36dc8:	ldr	r1, [sp, #144]	; 0x90
   36dca:	adds	r2, r2, r3
   36dcc:	ldr	r3, [sp, #212]	; 0xd4
   36dce:	eor.w	r8, r2, r8
   36dd2:	adc.w	r5, r3, r5
   36dd6:	eors	r6, r5
   36dd8:	lsls	r3, r6, #1
   36dda:	orr.w	r3, r3, r8, lsr #31
   36dde:	mov.w	r8, r8, lsl #1
   36de2:	str	r3, [sp, #256]	; 0x100
   36de4:	orr.w	r3, r8, r6, lsr #31
   36de8:	str	r3, [sp, #216]	; 0xd8
   36dea:	ldr	r3, [sp, #28]
   36dec:	adds	r1, r3, r1
   36dee:	ldr	r3, [sp, #32]
   36df0:	adc.w	sl, r3, r0
   36df4:	ldr	r3, [sp, #264]	; 0x108
   36df6:	ldr	r0, [sp, #204]	; 0xcc
   36df8:	adds	r1, r1, r3
   36dfa:	ldr	r3, [sp, #268]	; 0x10c
   36dfc:	adc.w	sl, sl, r3
   36e00:	ldr	r3, [sp, #236]	; 0xec
   36e02:	eor.w	lr, sl, r3
   36e06:	ldr	r3, [sp, #232]	; 0xe8
   36e08:	eor.w	r7, r1, r3
   36e0c:	ldr	r3, [sp, #200]	; 0xc8
   36e0e:	adds.w	r3, r3, lr
   36e12:	eor.w	r6, r3, r4
   36e16:	ldr	r4, [sp, #268]	; 0x10c
   36e18:	adcs	r0, r7
   36e1a:	eor.w	ip, r0, r4
   36e1e:	mov.w	fp, r6, lsr #24
   36e22:	orr.w	r4, fp, ip, lsl #8
   36e26:	mov.w	ip, ip, lsr #24
   36e2a:	orr.w	r8, ip, r6, lsl #8
   36e2e:	ldr	r6, [sp, #108]	; 0x6c
   36e30:	adds	r1, r6, r1
   36e32:	ldr	r6, [sp, #112]	; 0x70
   36e34:	adc.w	sl, r6, sl
   36e38:	adds	r1, r1, r4
   36e3a:	str	r1, [sp, #144]	; 0x90
   36e3c:	adc.w	r1, sl, r8
   36e40:	str	r1, [sp, #148]	; 0x94
   36e42:	ldr	r1, [sp, #144]	; 0x90
   36e44:	eor.w	lr, r1, lr
   36e48:	ldr	r1, [sp, #148]	; 0x94
   36e4a:	eors	r7, r1
   36e4c:	mov.w	r1, lr, lsr #16
   36e50:	orr.w	r1, r1, r7, lsl #16
   36e54:	lsrs	r7, r7, #16
   36e56:	str	r1, [sp, #232]	; 0xe8
   36e58:	orr.w	r1, r7, lr, lsl #16
   36e5c:	str	r1, [sp, #236]	; 0xec
   36e5e:	ldr	r1, [sp, #232]	; 0xe8
   36e60:	ldr	r7, [sp, #156]	; 0x9c
   36e62:	adds	r3, r3, r1
   36e64:	ldr	r1, [sp, #236]	; 0xec
   36e66:	eor.w	r4, r4, r3
   36e6a:	adc.w	r0, r1, r0
   36e6e:	eor.w	r8, r0, r8
   36e72:	mov.w	r1, r8, lsl #1
   36e76:	orr.w	r6, r1, r4, lsr #31
   36e7a:	lsls	r4, r4, #1
   36e7c:	orr.w	fp, r4, r8, lsr #31
   36e80:	ldr	r1, [sp, #20]
   36e82:	ldr	r4, [sp, #152]	; 0x98
   36e84:	adds	r1, r1, r4
   36e86:	ldr	r4, [sp, #24]
   36e88:	adc.w	sl, r4, r7
   36e8c:	adds.w	r1, r1, fp
   36e90:	ldr	r4, [sp, #228]	; 0xe4
   36e92:	adc.w	sl, sl, r6
   36e96:	eor.w	lr, sl, r9
   36e9a:	adds.w	r2, r2, lr
   36e9e:	eor.w	r7, r1, r4
   36ea2:	adc.w	r5, r7, r5
   36ea6:	eor.w	fp, r2, fp
   36eaa:	eor.w	ip, r5, r6
   36eae:	mov.w	r4, fp, lsr #24
   36eb2:	orr.w	r6, r4, ip, lsl #8
   36eb6:	ldr	r4, [sp, #100]	; 0x64
   36eb8:	mov.w	ip, ip, lsr #24
   36ebc:	adds	r1, r4, r1
   36ebe:	ldr	r4, [sp, #104]	; 0x68
   36ec0:	orr.w	r8, ip, fp, lsl #8
   36ec4:	adc.w	sl, r4, sl
   36ec8:	adds	r1, r1, r6
   36eca:	str	r1, [sp, #152]	; 0x98
   36ecc:	adc.w	r1, sl, r8
   36ed0:	str	r1, [sp, #156]	; 0x9c
   36ed2:	ldr	r1, [sp, #152]	; 0x98
   36ed4:	eor.w	lr, r1, lr
   36ed8:	ldr	r1, [sp, #156]	; 0x9c
   36eda:	eors	r7, r1
   36edc:	mov.w	r1, lr, lsr #16
   36ee0:	orr.w	r1, r1, r7, lsl #16
   36ee4:	lsrs	r7, r7, #16
   36ee6:	str	r1, [sp, #228]	; 0xe4
   36ee8:	orr.w	r1, r7, lr, lsl #16
   36eec:	str	r1, [sp, #260]	; 0x104
   36eee:	ldr	r1, [sp, #228]	; 0xe4
   36ef0:	adds	r2, r2, r1
   36ef2:	str	r2, [sp, #192]	; 0xc0
   36ef4:	ldr	r2, [sp, #260]	; 0x104
   36ef6:	ldr	r1, [sp, #168]	; 0xa8
   36ef8:	adc.w	r2, r5, r2
   36efc:	str	r2, [sp, #196]	; 0xc4
   36efe:	ldr	r2, [sp, #192]	; 0xc0
   36f00:	eors	r6, r2
   36f02:	ldr	r2, [sp, #196]	; 0xc4
   36f04:	eor.w	r8, r2, r8
   36f08:	mov.w	r2, r8, lsl #1
   36f0c:	orr.w	r2, r2, r6, lsr #31
   36f10:	lsls	r6, r6, #1
   36f12:	str	r2, [sp, #268]	; 0x10c
   36f14:	orr.w	r2, r6, r8, lsr #31
   36f18:	str	r2, [sp, #264]	; 0x108
   36f1a:	ldr	r2, [sp, #52]	; 0x34
   36f1c:	adds	r2, r2, r1
   36f1e:	ldr	r1, [sp, #56]	; 0x38
   36f20:	ldr	r4, [sp, #172]	; 0xac
   36f22:	ldr	r5, [sp, #252]	; 0xfc
   36f24:	adc.w	r7, r1, r4
   36f28:	ldr	r1, [sp, #244]	; 0xf4
   36f2a:	ldr	r4, [sp, #244]	; 0xf4
   36f2c:	adds	r2, r2, r1
   36f2e:	ldr	r1, [sp, #252]	; 0xfc
   36f30:	adc.w	r7, r1, r7
   36f34:	ldr	r1, [sp, #212]	; 0xd4
   36f36:	eor.w	r6, r7, r1
   36f3a:	ldr	r1, [sp, #208]	; 0xd0
   36f3c:	adds	r3, r3, r6
   36f3e:	eor.w	r1, r2, r1
   36f42:	eor.w	r4, r3, r4
   36f46:	adc.w	r0, r1, r0
   36f4a:	eors	r5, r0
   36f4c:	mov.w	r8, r4, lsr #24
   36f50:	orr.w	ip, r8, r5, lsl #8
   36f54:	lsrs	r5, r5, #24
   36f56:	orr.w	lr, r5, r4, lsl #8
   36f5a:	ldr	r4, [sp, #84]	; 0x54
   36f5c:	adds	r2, r4, r2
   36f5e:	ldr	r4, [sp, #88]	; 0x58
   36f60:	adc.w	r7, r4, r7
   36f64:	adds.w	r2, r2, ip
   36f68:	str	r2, [sp, #168]	; 0xa8
   36f6a:	adc.w	r2, r7, lr
   36f6e:	str	r2, [sp, #172]	; 0xac
   36f70:	ldr	r2, [sp, #168]	; 0xa8
   36f72:	eors	r6, r2
   36f74:	ldr	r2, [sp, #172]	; 0xac
   36f76:	eors	r1, r2
   36f78:	lsrs	r2, r6, #16
   36f7a:	orr.w	r2, r2, r1, lsl #16
   36f7e:	lsrs	r1, r1, #16
   36f80:	str	r2, [sp, #208]	; 0xd0
   36f82:	orr.w	r2, r1, r6, lsl #16
   36f86:	str	r2, [sp, #212]	; 0xd4
   36f88:	ldr	r2, [sp, #208]	; 0xd0
   36f8a:	ldr	r1, [sp, #164]	; 0xa4
   36f8c:	adds	r3, r3, r2
   36f8e:	str	r3, [sp, #200]	; 0xc8
   36f90:	ldr	r3, [sp, #212]	; 0xd4
   36f92:	adc.w	r3, r0, r3
   36f96:	str	r3, [sp, #204]	; 0xcc
   36f98:	ldr	r2, [sp, #204]	; 0xcc
   36f9a:	ldr	r3, [sp, #200]	; 0xc8
   36f9c:	eor.w	lr, r2, lr
   36fa0:	eor.w	r3, r3, ip
   36fa4:	mov.w	r2, lr, lsl #1
   36fa8:	orr.w	r2, r2, r3, lsr #31
   36fac:	mov.w	ip, r3, lsl #1
   36fb0:	str	r2, [sp, #244]	; 0xf4
   36fb2:	orr.w	ip, ip, lr, lsr #31
   36fb6:	ldr	r2, [sp, #160]	; 0xa0
   36fb8:	ldr	r3, [sp, #4]
   36fba:	adds	r3, r3, r2
   36fbc:	ldr	r2, [sp, #8]
   36fbe:	adc.w	lr, r2, r1
   36fc2:	ldr	r2, [sp, #240]	; 0xf0
   36fc4:	adds	r3, r3, r2
   36fc6:	ldr	r2, [sp, #248]	; 0xf8
   36fc8:	adc.w	lr, lr, r2
   36fcc:	ldr	r2, [sp, #236]	; 0xec
   36fce:	eor.w	r6, lr, r2
   36fd2:	ldr	r2, [sp, #232]	; 0xe8
   36fd4:	eor.w	r0, r3, r2
   36fd8:	ldr	r2, [sp, #176]	; 0xb0
   36fda:	ldr	r1, [sp, #180]	; 0xb4
   36fdc:	adds	r2, r2, r6
   36fde:	adc.w	r5, r1, r0
   36fe2:	ldr	r1, [sp, #240]	; 0xf0
   36fe4:	eor.w	r8, r2, r1
   36fe8:	ldr	r1, [sp, #248]	; 0xf8
   36fea:	eor.w	r4, r5, r1
   36fee:	mov.w	r9, r8, lsr #24
   36ff2:	orr.w	r1, r9, r4, lsl #8
   36ff6:	lsrs	r4, r4, #24
   36ff8:	orr.w	r7, r4, r8, lsl #8
   36ffc:	ldr	r4, [sp, #92]	; 0x5c
   36ffe:	adds	r3, r4, r3
   37000:	ldr	r4, [sp, #96]	; 0x60
   37002:	adc.w	lr, r4, lr
   37006:	adds	r3, r3, r1
   37008:	str	r3, [sp, #160]	; 0xa0
   3700a:	adc.w	r3, lr, r7
   3700e:	str	r3, [sp, #164]	; 0xa4
   37010:	ldr	r3, [sp, #160]	; 0xa0
   37012:	ldr	r4, [sp, #216]	; 0xd8
   37014:	eors	r6, r3
   37016:	ldr	r3, [sp, #164]	; 0xa4
   37018:	eors	r0, r3
   3701a:	lsrs	r3, r6, #16
   3701c:	orr.w	r3, r3, r0, lsl #16
   37020:	lsrs	r0, r0, #16
   37022:	str	r3, [sp, #232]	; 0xe8
   37024:	orr.w	r3, r0, r6, lsl #16
   37028:	str	r3, [sp, #236]	; 0xec
   3702a:	ldr	r3, [sp, #232]	; 0xe8
   3702c:	ldr	r0, [sp, #148]	; 0x94
   3702e:	adds	r2, r2, r3
   37030:	ldr	r3, [sp, #236]	; 0xec
   37032:	eor.w	r1, r1, r2
   37036:	adc.w	r5, r3, r5
   3703a:	eors	r7, r5
   3703c:	lsls	r3, r7, #1
   3703e:	orr.w	r3, r3, r1, lsr #31
   37042:	lsls	r1, r1, #1
   37044:	str	r3, [sp, #248]	; 0xf8
   37046:	orr.w	r3, r1, r7, lsr #31
   3704a:	ldr	r1, [sp, #144]	; 0x90
   3704c:	str	r3, [sp, #240]	; 0xf0
   3704e:	ldr	r3, [sp, #68]	; 0x44
   37050:	adds	r1, r3, r1
   37052:	ldr	r3, [sp, #72]	; 0x48
   37054:	adc.w	sl, r3, r0
   37058:	ldr	r3, [sp, #216]	; 0xd8
   3705a:	ldr	r0, [sp, #188]	; 0xbc
   3705c:	adds	r1, r1, r3
   3705e:	ldr	r3, [sp, #256]	; 0x100
   37060:	adc.w	sl, sl, r3
   37064:	ldr	r3, [sp, #224]	; 0xe0
   37066:	eor.w	lr, sl, r3
   3706a:	ldr	r3, [sp, #220]	; 0xdc
   3706c:	eor.w	r6, r1, r3
   37070:	ldr	r3, [sp, #184]	; 0xb8
   37072:	adds.w	r3, r3, lr
   37076:	eor.w	r8, r3, r4
   3707a:	ldr	r4, [sp, #256]	; 0x100
   3707c:	adcs	r0, r6
   3707e:	eor.w	r7, r0, r4
   37082:	mov.w	fp, r8, lsr #24
   37086:	orr.w	r4, fp, r7, lsl #8
   3708a:	lsrs	r7, r7, #24
   3708c:	orr.w	r9, r7, r8, lsl #8
   37090:	ldr	r7, [sp, #28]
   37092:	adds	r1, r7, r1
   37094:	ldr	r7, [sp, #32]
   37096:	adc.w	sl, r7, sl
   3709a:	adds	r1, r1, r4
   3709c:	str	r1, [sp, #144]	; 0x90
   3709e:	adc.w	r1, sl, r9
   370a2:	str	r1, [sp, #148]	; 0x94
   370a4:	ldr	r1, [sp, #144]	; 0x90
   370a6:	eor.w	lr, r1, lr
   370aa:	ldr	r1, [sp, #148]	; 0x94
   370ac:	eors	r6, r1
   370ae:	mov.w	r1, lr, lsr #16
   370b2:	orr.w	r8, r1, r6, lsl #16
   370b6:	lsrs	r6, r6, #16
   370b8:	adds.w	r3, r3, r8
   370bc:	orr.w	sl, r6, lr, lsl #16
   370c0:	adc.w	r0, r0, sl
   370c4:	eors	r4, r3
   370c6:	eor.w	r9, r0, r9
   370ca:	ldr	r6, [sp, #156]	; 0x9c
   370cc:	mov.w	r1, r9, lsl #1
   370d0:	orr.w	r1, r1, r4, lsr #31
   370d4:	lsls	r4, r4, #1
   370d6:	orr.w	fp, r4, r9, lsr #31
   370da:	str	r1, [sp, #216]	; 0xd8
   370dc:	ldr	r4, [sp, #152]	; 0x98
   370de:	ldr	r1, [sp, #36]	; 0x24
   370e0:	adds	r1, r1, r4
   370e2:	ldr	r4, [sp, #40]	; 0x28
   370e4:	adc.w	r9, r4, r6
   370e8:	ldr	r4, [sp, #244]	; 0xf4
   370ea:	adds.w	r1, r1, ip
   370ee:	adc.w	r9, r9, r4
   370f2:	eor.w	r7, r1, r8
   370f6:	eor.w	lr, r9, sl
   370fa:	adds.w	r2, r2, lr
   370fe:	adc.w	r5, r7, r5
   37102:	eor.w	ip, r2, ip
   37106:	eor.w	r6, r5, r4
   3710a:	mov.w	sl, ip, lsr #24
   3710e:	orr.w	r4, sl, r6, lsl #8
   37112:	lsrs	r6, r6, #24
   37114:	orr.w	r8, r6, ip, lsl #8
   37118:	ldr	r6, [sp, #108]	; 0x6c
   3711a:	adds	r1, r6, r1
   3711c:	ldr	r6, [sp, #112]	; 0x70
   3711e:	adc.w	r9, r6, r9
   37122:	adds	r1, r1, r4
   37124:	str	r1, [sp, #152]	; 0x98
   37126:	adc.w	r1, r9, r8
   3712a:	str	r1, [sp, #156]	; 0x9c
   3712c:	ldr	r1, [sp, #152]	; 0x98
   3712e:	eor.w	lr, r1, lr
   37132:	ldr	r1, [sp, #156]	; 0x9c
   37134:	eors	r7, r1
   37136:	mov.w	r1, lr, lsr #16
   3713a:	orr.w	r1, r1, r7, lsl #16
   3713e:	lsrs	r7, r7, #16
   37140:	str	r1, [sp, #220]	; 0xdc
   37142:	orr.w	r1, r7, lr, lsl #16
   37146:	str	r1, [sp, #224]	; 0xe0
   37148:	ldr	r1, [sp, #220]	; 0xdc
   3714a:	adds	r2, r2, r1
   3714c:	str	r2, [sp, #176]	; 0xb0
   3714e:	ldr	r2, [sp, #224]	; 0xe0
   37150:	ldr	r1, [sp, #168]	; 0xa8
   37152:	adc.w	r2, r5, r2
   37156:	str	r2, [sp, #180]	; 0xb4
   37158:	ldr	r2, [sp, #176]	; 0xb0
   3715a:	eors	r4, r2
   3715c:	ldr	r2, [sp, #180]	; 0xb4
   3715e:	eor.w	r8, r2, r8
   37162:	mov.w	r2, r8, lsl #1
   37166:	orr.w	r2, r2, r4, lsr #31
   3716a:	lsls	r4, r4, #1
   3716c:	str	r2, [sp, #252]	; 0xfc
   3716e:	orr.w	r2, r4, r8, lsr #31
   37172:	str	r2, [sp, #244]	; 0xf4
   37174:	ldr	r2, [sp, #60]	; 0x3c
   37176:	ldr	r4, [sp, #172]	; 0xac
   37178:	adds	r2, r2, r1
   3717a:	ldr	r1, [sp, #64]	; 0x40
   3717c:	adc.w	r7, r1, r4
   37180:	ldr	r1, [sp, #240]	; 0xf0
   37182:	adds	r2, r2, r1
   37184:	ldr	r1, [sp, #248]	; 0xf8
   37186:	adc.w	r7, r1, r7
   3718a:	ldr	r1, [sp, #260]	; 0x104
   3718c:	eor.w	r4, r7, r1
   37190:	ldr	r1, [sp, #228]	; 0xe4
   37192:	adds	r3, r3, r4
   37194:	eor.w	r9, r2, r1
   37198:	ldr	r1, [sp, #240]	; 0xf0
   3719a:	adc.w	r0, r0, r9
   3719e:	eor.w	ip, r3, r1
   371a2:	ldr	r1, [sp, #248]	; 0xf8
   371a4:	eor.w	r5, r0, r1
   371a8:	mov.w	lr, ip, lsr #24
   371ac:	orr.w	r1, lr, r5, lsl #8
   371b0:	lsrs	r5, r5, #24
   371b2:	orr.w	r6, r5, ip, lsl #8
   371b6:	ldr	r5, [sp, #44]	; 0x2c
   371b8:	adds	r2, r5, r2
   371ba:	ldr	r5, [sp, #48]	; 0x30
   371bc:	adc.w	r7, r5, r7
   371c0:	adds	r2, r2, r1
   371c2:	str	r2, [sp, #168]	; 0xa8
   371c4:	adc.w	r2, r7, r6
   371c8:	str	r2, [sp, #172]	; 0xac
   371ca:	ldr	r2, [sp, #168]	; 0xa8
   371cc:	eors	r4, r2
   371ce:	ldr	r2, [sp, #172]	; 0xac
   371d0:	eor.w	r2, r2, r9
   371d4:	lsrs	r5, r4, #16
   371d6:	orr.w	r5, r5, r2, lsl #16
   371da:	mov.w	r9, r2, lsr #16
   371de:	orr.w	r9, r9, r4, lsl #16
   371e2:	adds	r3, r3, r5
   371e4:	str	r3, [sp, #184]	; 0xb8
   371e6:	adc.w	r3, r0, r9
   371ea:	str	r3, [sp, #188]	; 0xbc
   371ec:	ldr	r3, [sp, #184]	; 0xb8
   371ee:	ldr	r2, [sp, #160]	; 0xa0
   371f0:	eors	r1, r3
   371f2:	ldr	r3, [sp, #188]	; 0xbc
   371f4:	ldr	r0, [sp, #196]	; 0xc4
   371f6:	eors	r6, r3
   371f8:	str	r5, [sp, #228]	; 0xe4
   371fa:	lsls	r3, r6, #1
   371fc:	orr.w	r3, r3, r1, lsr #31
   37200:	lsls	r1, r1, #1
   37202:	str	r3, [sp, #248]	; 0xf8
   37204:	orr.w	r3, r1, r6, lsr #31
   37208:	str	r3, [sp, #240]	; 0xf0
   3720a:	ldr	r3, [sp, #124]	; 0x7c
   3720c:	ldr	r1, [sp, #164]	; 0xa4
   3720e:	adds	r3, r3, r2
   37210:	ldr	r2, [sp, #128]	; 0x80
   37212:	adc.w	ip, r2, r1
   37216:	ldr	r2, [sp, #216]	; 0xd8
   37218:	adds.w	r3, r3, fp
   3721c:	adc.w	ip, ip, r2
   37220:	ldr	r2, [sp, #212]	; 0xd4
   37222:	eor.w	r7, ip, r2
   37226:	ldr	r2, [sp, #208]	; 0xd0
   37228:	eor.w	r1, r3, r2
   3722c:	ldr	r2, [sp, #192]	; 0xc0
   3722e:	adds	r2, r2, r7
   37230:	adc.w	r5, r0, r1
   37234:	ldr	r0, [sp, #216]	; 0xd8
   37236:	eor.w	fp, r2, fp
   3723a:	eors	r0, r5
   3723c:	mov.w	r4, fp, lsr #24
   37240:	orr.w	r8, r4, r0, lsl #8
   37244:	lsrs	r0, r0, #24
   37246:	orr.w	r6, r0, fp, lsl #8
   3724a:	ldr	r0, [sp, #116]	; 0x74
   3724c:	adds	r3, r0, r3
   3724e:	ldr	r0, [sp, #120]	; 0x78
   37250:	adc.w	ip, r0, ip
   37254:	adds.w	r3, r3, r8
   37258:	str	r3, [sp, #160]	; 0xa0
   3725a:	adc.w	r3, ip, r6
   3725e:	str	r3, [sp, #164]	; 0xa4
   37260:	ldr	r3, [sp, #160]	; 0xa0
   37262:	eors	r7, r3
   37264:	ldr	r3, [sp, #164]	; 0xa4
   37266:	eors	r1, r3
   37268:	lsrs	r3, r7, #16
   3726a:	orr.w	r3, r3, r1, lsl #16
   3726e:	lsrs	r1, r1, #16
   37270:	str	r3, [sp, #208]	; 0xd0
   37272:	orr.w	r3, r1, r7, lsl #16
   37276:	str	r3, [sp, #212]	; 0xd4
   37278:	ldr	r3, [sp, #208]	; 0xd0
   3727a:	ldr	r1, [sp, #144]	; 0x90
   3727c:	adds	r2, r2, r3
   3727e:	ldr	r3, [sp, #212]	; 0xd4
   37280:	eor.w	r8, r2, r8
   37284:	ldr	r0, [sp, #148]	; 0x94
   37286:	adc.w	r5, r3, r5
   3728a:	ldr	r4, [sp, #264]	; 0x108
   3728c:	eors	r6, r5
   3728e:	lsls	r3, r6, #1
   37290:	orr.w	r3, r3, r8, lsr #31
   37294:	mov.w	r8, r8, lsl #1
   37298:	str	r3, [sp, #256]	; 0x100
   3729a:	orr.w	r3, r8, r6, lsr #31
   3729e:	str	r3, [sp, #216]	; 0xd8
   372a0:	ldr	r3, [sp, #12]
   372a2:	adds	r1, r3, r1
   372a4:	ldr	r3, [sp, #16]
   372a6:	adc.w	sl, r3, r0
   372aa:	ldr	r3, [sp, #264]	; 0x108
   372ac:	ldr	r0, [sp, #204]	; 0xcc
   372ae:	adds	r1, r1, r3
   372b0:	ldr	r3, [sp, #268]	; 0x10c
   372b2:	adc.w	sl, sl, r3
   372b6:	ldr	r3, [sp, #236]	; 0xec
   372b8:	eor.w	lr, sl, r3
   372bc:	ldr	r3, [sp, #232]	; 0xe8
   372be:	eor.w	r7, r1, r3
   372c2:	ldr	r3, [sp, #200]	; 0xc8
   372c4:	adds.w	r3, r3, lr
   372c8:	eor.w	r6, r3, r4
   372cc:	ldr	r4, [sp, #268]	; 0x10c
   372ce:	adcs	r0, r7
   372d0:	eor.w	ip, r0, r4
   372d4:	mov.w	fp, r6, lsr #24
   372d8:	orr.w	r4, fp, ip, lsl #8
   372dc:	mov.w	ip, ip, lsr #24
   372e0:	orr.w	r8, ip, r6, lsl #8
   372e4:	ldr	r6, [sp, #76]	; 0x4c
   372e6:	adds	r1, r6, r1
   372e8:	ldr	r6, [sp, #80]	; 0x50
   372ea:	adc.w	sl, r6, sl
   372ee:	adds	r1, r1, r4
   372f0:	str	r1, [sp, #144]	; 0x90
   372f2:	adc.w	r1, sl, r8
   372f6:	str	r1, [sp, #148]	; 0x94
   372f8:	ldr	r1, [sp, #144]	; 0x90
   372fa:	eor.w	lr, r1, lr
   372fe:	ldr	r1, [sp, #148]	; 0x94
   37300:	eors	r7, r1
   37302:	mov.w	r1, lr, lsr #16
   37306:	orr.w	r1, r1, r7, lsl #16
   3730a:	lsrs	r7, r7, #16
   3730c:	str	r1, [sp, #232]	; 0xe8
   3730e:	orr.w	r1, r7, lr, lsl #16
   37312:	str	r1, [sp, #236]	; 0xec
   37314:	ldr	r1, [sp, #232]	; 0xe8
   37316:	ldr	r7, [sp, #156]	; 0x9c
   37318:	adds	r3, r3, r1
   3731a:	ldr	r1, [sp, #236]	; 0xec
   3731c:	eor.w	r4, r4, r3
   37320:	adc.w	r0, r1, r0
   37324:	eor.w	r8, r0, r8
   37328:	mov.w	r1, r8, lsl #1
   3732c:	orr.w	r6, r1, r4, lsr #31
   37330:	lsls	r4, r4, #1
   37332:	orr.w	fp, r4, r8, lsr #31
   37336:	ldr	r1, [sp, #100]	; 0x64
   37338:	ldr	r4, [sp, #152]	; 0x98
   3733a:	adds	r1, r1, r4
   3733c:	ldr	r4, [sp, #104]	; 0x68
   3733e:	adc.w	sl, r4, r7
   37342:	adds.w	r1, r1, fp
   37346:	adc.w	sl, sl, r6
   3734a:	ldr	r4, [sp, #228]	; 0xe4
   3734c:	eor.w	lr, sl, r9
   37350:	adds.w	r2, r2, lr
   37354:	eor.w	r7, r1, r4
   37358:	adc.w	r5, r7, r5
   3735c:	eor.w	fp, r2, fp
   37360:	eor.w	ip, r5, r6
   37364:	mov.w	r4, fp, lsr #24
   37368:	orr.w	r6, r4, ip, lsl #8
   3736c:	ldr	r4, [sp, #44]	; 0x2c
   3736e:	mov.w	ip, ip, lsr #24
   37372:	adds	r1, r4, r1
   37374:	ldr	r4, [sp, #48]	; 0x30
   37376:	orr.w	r8, ip, fp, lsl #8
   3737a:	adc.w	sl, r4, sl
   3737e:	adds	r1, r1, r6
   37380:	str	r1, [sp, #152]	; 0x98
   37382:	adc.w	r1, sl, r8
   37386:	str	r1, [sp, #156]	; 0x9c
   37388:	ldr	r1, [sp, #152]	; 0x98
   3738a:	ldr	r4, [sp, #172]	; 0xac
   3738c:	eor.w	lr, r1, lr
   37390:	ldr	r1, [sp, #156]	; 0x9c
   37392:	eors	r7, r1
   37394:	mov.w	r1, lr, lsr #16
   37398:	orr.w	r1, r1, r7, lsl #16
   3739c:	lsrs	r7, r7, #16
   3739e:	str	r1, [sp, #228]	; 0xe4
   373a0:	orr.w	r1, r7, lr, lsl #16
   373a4:	str	r1, [sp, #260]	; 0x104
   373a6:	ldr	r1, [sp, #228]	; 0xe4
   373a8:	adds	r2, r2, r1
   373aa:	str	r2, [sp, #192]	; 0xc0
   373ac:	ldr	r2, [sp, #260]	; 0x104
   373ae:	ldr	r1, [sp, #168]	; 0xa8
   373b0:	adc.w	r2, r5, r2
   373b4:	str	r2, [sp, #196]	; 0xc4
   373b6:	ldr	r2, [sp, #192]	; 0xc0
   373b8:	ldr	r5, [sp, #252]	; 0xfc
   373ba:	eors	r6, r2
   373bc:	ldr	r2, [sp, #196]	; 0xc4
   373be:	eor.w	r8, r2, r8
   373c2:	mov.w	r2, r8, lsl #1
   373c6:	orr.w	r2, r2, r6, lsr #31
   373ca:	lsls	r6, r6, #1
   373cc:	str	r2, [sp, #268]	; 0x10c
   373ce:	orr.w	r2, r6, r8, lsr #31
   373d2:	str	r2, [sp, #264]	; 0x108
   373d4:	ldr	r2, [sp, #12]
   373d6:	adds	r2, r2, r1
   373d8:	ldr	r1, [sp, #16]
   373da:	adc.w	r7, r1, r4
   373de:	ldr	r1, [sp, #244]	; 0xf4
   373e0:	ldr	r4, [sp, #244]	; 0xf4
   373e2:	adds	r2, r2, r1
   373e4:	ldr	r1, [sp, #252]	; 0xfc
   373e6:	adc.w	r7, r1, r7
   373ea:	ldr	r1, [sp, #212]	; 0xd4
   373ec:	eor.w	r6, r7, r1
   373f0:	ldr	r1, [sp, #208]	; 0xd0
   373f2:	adds	r3, r3, r6
   373f4:	eor.w	r1, r2, r1
   373f8:	eor.w	r4, r3, r4
   373fc:	adc.w	r0, r1, r0
   37400:	eors	r5, r0
   37402:	mov.w	r8, r4, lsr #24
   37406:	orr.w	ip, r8, r5, lsl #8
   3740a:	lsrs	r5, r5, #24
   3740c:	orr.w	lr, r5, r4, lsl #8
   37410:	ldr	r4, [sp, #124]	; 0x7c
   37412:	adds	r2, r4, r2
   37414:	ldr	r4, [sp, #128]	; 0x80
   37416:	adc.w	r7, r4, r7
   3741a:	adds.w	r2, r2, ip
   3741e:	str	r2, [sp, #168]	; 0xa8
   37420:	adc.w	r2, r7, lr
   37424:	str	r2, [sp, #172]	; 0xac
   37426:	ldr	r2, [sp, #168]	; 0xa8
   37428:	eors	r6, r2
   3742a:	ldr	r2, [sp, #172]	; 0xac
   3742c:	eors	r1, r2
   3742e:	lsrs	r2, r6, #16
   37430:	orr.w	r2, r2, r1, lsl #16
   37434:	lsrs	r1, r1, #16
   37436:	str	r2, [sp, #208]	; 0xd0
   37438:	orr.w	r2, r1, r6, lsl #16
   3743c:	str	r2, [sp, #212]	; 0xd4
   3743e:	ldr	r2, [sp, #208]	; 0xd0
   37440:	ldr	r1, [sp, #164]	; 0xa4
   37442:	adds	r3, r3, r2
   37444:	str	r3, [sp, #200]	; 0xc8
   37446:	ldr	r3, [sp, #212]	; 0xd4
   37448:	adc.w	r3, r0, r3
   3744c:	str	r3, [sp, #204]	; 0xcc
   3744e:	ldr	r2, [sp, #204]	; 0xcc
   37450:	ldr	r3, [sp, #200]	; 0xc8
   37452:	eor.w	lr, r2, lr
   37456:	eor.w	r3, r3, ip
   3745a:	mov.w	r2, lr, lsl #1
   3745e:	orr.w	r2, r2, r3, lsr #31
   37462:	mov.w	ip, r3, lsl #1
   37466:	str	r2, [sp, #244]	; 0xf4
   37468:	orr.w	ip, ip, lr, lsr #31
   3746c:	ldr	r2, [sp, #160]	; 0xa0
   3746e:	ldr	r3, [sp, #116]	; 0x74
   37470:	adds	r3, r3, r2
   37472:	ldr	r2, [sp, #120]	; 0x78
   37474:	adc.w	lr, r2, r1
   37478:	ldr	r2, [sp, #240]	; 0xf0
   3747a:	ldr	r1, [sp, #180]	; 0xb4
   3747c:	adds	r3, r3, r2
   3747e:	ldr	r2, [sp, #248]	; 0xf8
   37480:	adc.w	lr, lr, r2
   37484:	ldr	r2, [sp, #236]	; 0xec
   37486:	eor.w	r6, lr, r2
   3748a:	ldr	r2, [sp, #232]	; 0xe8
   3748c:	eor.w	r0, r3, r2
   37490:	ldr	r2, [sp, #176]	; 0xb0
   37492:	adds	r2, r2, r6
   37494:	adc.w	r5, r1, r0
   37498:	ldr	r1, [sp, #240]	; 0xf0
   3749a:	eor.w	r8, r2, r1
   3749e:	ldr	r1, [sp, #248]	; 0xf8
   374a0:	eor.w	r4, r5, r1
   374a4:	mov.w	r9, r8, lsr #24
   374a8:	orr.w	r1, r9, r4, lsl #8
   374ac:	lsrs	r4, r4, #24
   374ae:	orr.w	r7, r4, r8, lsl #8
   374b2:	ldr	r4, [sp, #108]	; 0x6c
   374b4:	adds	r3, r4, r3
   374b6:	ldr	r4, [sp, #112]	; 0x70
   374b8:	adc.w	lr, r4, lr
   374bc:	adds	r3, r3, r1
   374be:	str	r3, [sp, #160]	; 0xa0
   374c0:	adc.w	r3, lr, r7
   374c4:	str	r3, [sp, #164]	; 0xa4
   374c6:	ldr	r3, [sp, #160]	; 0xa0
   374c8:	eors	r6, r3
   374ca:	ldr	r3, [sp, #164]	; 0xa4
   374cc:	eors	r0, r3
   374ce:	lsrs	r3, r6, #16
   374d0:	orr.w	r3, r3, r0, lsl #16
   374d4:	lsrs	r0, r0, #16
   374d6:	str	r3, [sp, #232]	; 0xe8
   374d8:	orr.w	r3, r0, r6, lsl #16
   374dc:	str	r3, [sp, #236]	; 0xec
   374de:	ldr	r3, [sp, #232]	; 0xe8
   374e0:	adds	r2, r2, r3
   374e2:	ldr	r3, [sp, #236]	; 0xec
   374e4:	eor.w	r1, r1, r2
   374e8:	adc.w	r5, r3, r5
   374ec:	eors	r7, r5
   374ee:	lsls	r3, r7, #1
   374f0:	orr.w	r3, r3, r1, lsr #31
   374f4:	lsls	r1, r1, #1
   374f6:	str	r3, [sp, #248]	; 0xf8
   374f8:	orr.w	r3, r1, r7, lsr #31
   374fc:	str	r3, [sp, #240]	; 0xf0
   374fe:	ldr	r3, [sp, #36]	; 0x24
   37500:	ldr	r1, [sp, #144]	; 0x90
   37502:	ldr	r0, [sp, #148]	; 0x94
   37504:	adds	r1, r3, r1
   37506:	ldr	r3, [sp, #40]	; 0x28
   37508:	ldr	r4, [sp, #216]	; 0xd8
   3750a:	adc.w	sl, r3, r0
   3750e:	ldr	r3, [sp, #216]	; 0xd8
   37510:	ldr	r0, [sp, #188]	; 0xbc
   37512:	adds	r1, r1, r3
   37514:	ldr	r3, [sp, #256]	; 0x100
   37516:	adc.w	sl, sl, r3
   3751a:	ldr	r3, [sp, #224]	; 0xe0
   3751c:	eor.w	lr, sl, r3
   37520:	ldr	r3, [sp, #220]	; 0xdc
   37522:	eor.w	r6, r1, r3
   37526:	ldr	r3, [sp, #184]	; 0xb8
   37528:	adds.w	r3, r3, lr
   3752c:	eor.w	r8, r3, r4
   37530:	ldr	r4, [sp, #256]	; 0x100
   37532:	adcs	r0, r6
   37534:	eor.w	r7, r0, r4
   37538:	mov.w	fp, r8, lsr #24
   3753c:	orr.w	r4, fp, r7, lsl #8
   37540:	lsrs	r7, r7, #24
   37542:	orr.w	r9, r7, r8, lsl #8
   37546:	ldr	r7, [sp, #84]	; 0x54
   37548:	adds	r1, r7, r1
   3754a:	ldr	r7, [sp, #88]	; 0x58
   3754c:	adc.w	sl, r7, sl
   37550:	adds	r1, r1, r4
   37552:	str	r1, [sp, #144]	; 0x90
   37554:	adc.w	r1, sl, r9
   37558:	str	r1, [sp, #148]	; 0x94
   3755a:	ldr	r1, [sp, #144]	; 0x90
   3755c:	eor.w	lr, r1, lr
   37560:	ldr	r1, [sp, #148]	; 0x94
   37562:	eors	r6, r1
   37564:	mov.w	r1, lr, lsr #16
   37568:	orr.w	r8, r1, r6, lsl #16
   3756c:	lsrs	r6, r6, #16
   3756e:	adds.w	r3, r3, r8
   37572:	orr.w	sl, r6, lr, lsl #16
   37576:	adc.w	r0, r0, sl
   3757a:	eors	r4, r3
   3757c:	eor.w	r9, r0, r9
   37580:	ldr	r6, [sp, #156]	; 0x9c
   37582:	mov.w	r1, r9, lsl #1
   37586:	orr.w	r1, r1, r4, lsr #31
   3758a:	lsls	r4, r4, #1
   3758c:	orr.w	fp, r4, r9, lsr #31
   37590:	str	r1, [sp, #216]	; 0xd8
   37592:	ldr	r4, [sp, #152]	; 0x98
   37594:	ldr	r1, [sp, #4]
   37596:	adds	r1, r1, r4
   37598:	ldr	r4, [sp, #8]
   3759a:	adc.w	r9, r4, r6
   3759e:	ldr	r4, [sp, #244]	; 0xf4
   375a0:	adds.w	r1, r1, ip
   375a4:	adc.w	r9, r9, r4
   375a8:	eor.w	r7, r1, r8
   375ac:	eor.w	lr, r9, sl
   375b0:	adds.w	r2, r2, lr
   375b4:	adc.w	r5, r7, r5
   375b8:	eor.w	ip, r2, ip
   375bc:	eor.w	r6, r5, r4
   375c0:	mov.w	sl, ip, lsr #24
   375c4:	orr.w	r4, sl, r6, lsl #8
   375c8:	lsrs	r6, r6, #24
   375ca:	orr.w	r8, r6, ip, lsl #8
   375ce:	ldr	r6, [sp, #60]	; 0x3c
   375d0:	adds	r1, r6, r1
   375d2:	ldr	r6, [sp, #64]	; 0x40
   375d4:	adc.w	r9, r6, r9
   375d8:	adds	r1, r1, r4
   375da:	str	r1, [sp, #152]	; 0x98
   375dc:	adc.w	r1, r9, r8
   375e0:	str	r1, [sp, #156]	; 0x9c
   375e2:	ldr	r1, [sp, #152]	; 0x98
   375e4:	eor.w	lr, r1, lr
   375e8:	ldr	r1, [sp, #156]	; 0x9c
   375ea:	eors	r7, r1
   375ec:	mov.w	r1, lr, lsr #16
   375f0:	orr.w	r1, r1, r7, lsl #16
   375f4:	lsrs	r7, r7, #16
   375f6:	str	r1, [sp, #220]	; 0xdc
   375f8:	orr.w	r1, r7, lr, lsl #16
   375fc:	str	r1, [sp, #224]	; 0xe0
   375fe:	ldr	r1, [sp, #220]	; 0xdc
   37600:	adds	r2, r2, r1
   37602:	str	r2, [sp, #176]	; 0xb0
   37604:	ldr	r2, [sp, #224]	; 0xe0
   37606:	ldr	r1, [sp, #168]	; 0xa8
   37608:	adc.w	r2, r5, r2
   3760c:	str	r2, [sp, #180]	; 0xb4
   3760e:	ldr	r2, [sp, #176]	; 0xb0
   37610:	eors	r4, r2
   37612:	ldr	r2, [sp, #180]	; 0xb4
   37614:	eor.w	r8, r2, r8
   37618:	mov.w	r2, r8, lsl #1
   3761c:	orr.w	r2, r2, r4, lsr #31
   37620:	lsls	r4, r4, #1
   37622:	str	r2, [sp, #252]	; 0xfc
   37624:	orr.w	r2, r4, r8, lsr #31
   37628:	str	r2, [sp, #244]	; 0xf4
   3762a:	ldr	r2, [sp, #52]	; 0x34
   3762c:	ldr	r4, [sp, #172]	; 0xac
   3762e:	adds	r2, r2, r1
   37630:	ldr	r1, [sp, #56]	; 0x38
   37632:	adc.w	r7, r1, r4
   37636:	ldr	r1, [sp, #240]	; 0xf0
   37638:	adds	r2, r2, r1
   3763a:	ldr	r1, [sp, #248]	; 0xf8
   3763c:	adc.w	r7, r1, r7
   37640:	ldr	r1, [sp, #260]	; 0x104
   37642:	eor.w	r4, r7, r1
   37646:	ldr	r1, [sp, #228]	; 0xe4
   37648:	adds	r3, r3, r4
   3764a:	eor.w	r9, r2, r1
   3764e:	ldr	r1, [sp, #240]	; 0xf0
   37650:	adc.w	r0, r0, r9
   37654:	eor.w	ip, r3, r1
   37658:	ldr	r1, [sp, #248]	; 0xf8
   3765a:	eor.w	r5, r0, r1
   3765e:	mov.w	lr, ip, lsr #24
   37662:	orr.w	r1, lr, r5, lsl #8
   37666:	lsrs	r5, r5, #24
   37668:	orr.w	r6, r5, ip, lsl #8
   3766c:	ldr	r5, [sp, #28]
   3766e:	adds	r2, r5, r2
   37670:	ldr	r5, [sp, #32]
   37672:	adc.w	r7, r5, r7
   37676:	adds	r2, r2, r1
   37678:	str	r2, [sp, #168]	; 0xa8
   3767a:	adc.w	r2, r7, r6
   3767e:	str	r2, [sp, #172]	; 0xac
   37680:	ldr	r2, [sp, #168]	; 0xa8
   37682:	eors	r4, r2
   37684:	ldr	r2, [sp, #172]	; 0xac
   37686:	eor.w	r2, r2, r9
   3768a:	lsrs	r5, r4, #16
   3768c:	orr.w	r5, r5, r2, lsl #16
   37690:	mov.w	r9, r2, lsr #16
   37694:	orr.w	r9, r9, r4, lsl #16
   37698:	adds	r3, r3, r5
   3769a:	str	r3, [sp, #184]	; 0xb8
   3769c:	adc.w	r3, r0, r9
   376a0:	str	r3, [sp, #188]	; 0xbc
   376a2:	ldr	r3, [sp, #184]	; 0xb8
   376a4:	ldr	r2, [sp, #160]	; 0xa0
   376a6:	eors	r1, r3
   376a8:	ldr	r3, [sp, #188]	; 0xbc
   376aa:	str	r5, [sp, #228]	; 0xe4
   376ac:	eors	r6, r3
   376ae:	lsls	r3, r6, #1
   376b0:	orr.w	r3, r3, r1, lsr #31
   376b4:	lsls	r1, r1, #1
   376b6:	str	r3, [sp, #248]	; 0xf8
   376b8:	orr.w	r3, r1, r6, lsr #31
   376bc:	str	r3, [sp, #240]	; 0xf0
   376be:	ldr	r3, [sp, #76]	; 0x4c
   376c0:	adds	r3, r3, r2
   376c2:	ldr	r2, [sp, #80]	; 0x50
   376c4:	ldr	r1, [sp, #164]	; 0xa4
   376c6:	ldr	r0, [sp, #196]	; 0xc4
   376c8:	adc.w	ip, r2, r1
   376cc:	ldr	r2, [sp, #216]	; 0xd8
   376ce:	adds.w	r3, r3, fp
   376d2:	adc.w	ip, ip, r2
   376d6:	ldr	r2, [sp, #212]	; 0xd4
   376d8:	eor.w	r7, ip, r2
   376dc:	ldr	r2, [sp, #208]	; 0xd0
   376de:	eor.w	r1, r3, r2
   376e2:	ldr	r2, [sp, #192]	; 0xc0
   376e4:	adds	r2, r2, r7
   376e6:	adc.w	r5, r0, r1
   376ea:	ldr	r0, [sp, #216]	; 0xd8
   376ec:	eor.w	fp, r2, fp
   376f0:	eors	r0, r5
   376f2:	mov.w	r4, fp, lsr #24
   376f6:	orr.w	r8, r4, r0, lsl #8
   376fa:	lsrs	r0, r0, #24
   376fc:	orr.w	r6, r0, fp, lsl #8
   37700:	ldr	r0, [sp, #20]
   37702:	ldr	r4, [sp, #264]	; 0x108
   37704:	adds	r3, r0, r3
   37706:	ldr	r0, [sp, #24]
   37708:	adc.w	ip, r0, ip
   3770c:	adds.w	r3, r3, r8
   37710:	str	r3, [sp, #160]	; 0xa0
   37712:	adc.w	r3, ip, r6
   37716:	str	r3, [sp, #164]	; 0xa4
   37718:	ldr	r3, [sp, #160]	; 0xa0
   3771a:	ldr	r0, [sp, #148]	; 0x94
   3771c:	eors	r7, r3
   3771e:	ldr	r3, [sp, #164]	; 0xa4
   37720:	eors	r1, r3
   37722:	lsrs	r3, r7, #16
   37724:	orr.w	r3, r3, r1, lsl #16
   37728:	lsrs	r1, r1, #16
   3772a:	str	r3, [sp, #208]	; 0xd0
   3772c:	orr.w	r3, r1, r7, lsl #16
   37730:	str	r3, [sp, #212]	; 0xd4
   37732:	ldr	r3, [sp, #208]	; 0xd0
   37734:	ldr	r1, [sp, #144]	; 0x90
   37736:	adds	r2, r2, r3
   37738:	ldr	r3, [sp, #212]	; 0xd4
   3773a:	eor.w	r8, r2, r8
   3773e:	adc.w	r5, r3, r5
   37742:	eors	r6, r5
   37744:	lsls	r3, r6, #1
   37746:	orr.w	r3, r3, r8, lsr #31
   3774a:	mov.w	r8, r8, lsl #1
   3774e:	str	r3, [sp, #256]	; 0x100
   37750:	orr.w	r3, r8, r6, lsr #31
   37754:	str	r3, [sp, #216]	; 0xd8
   37756:	ldr	r3, [sp, #68]	; 0x44
   37758:	adds	r1, r3, r1
   3775a:	ldr	r3, [sp, #72]	; 0x48
   3775c:	adc.w	sl, r3, r0
   37760:	ldr	r3, [sp, #264]	; 0x108
   37762:	ldr	r0, [sp, #204]	; 0xcc
   37764:	adds	r1, r1, r3
   37766:	ldr	r3, [sp, #268]	; 0x10c
   37768:	adc.w	sl, sl, r3
   3776c:	ldr	r3, [sp, #236]	; 0xec
   3776e:	eor.w	lr, sl, r3
   37772:	ldr	r3, [sp, #232]	; 0xe8
   37774:	eor.w	r7, r1, r3
   37778:	ldr	r3, [sp, #200]	; 0xc8
   3777a:	adds.w	r3, r3, lr
   3777e:	eor.w	r6, r3, r4
   37782:	ldr	r4, [sp, #268]	; 0x10c
   37784:	adcs	r0, r7
   37786:	eor.w	ip, r0, r4
   3778a:	mov.w	fp, r6, lsr #24
   3778e:	orr.w	r4, fp, ip, lsl #8
   37792:	mov.w	ip, ip, lsr #24
   37796:	orr.w	r8, ip, r6, lsl #8
   3779a:	ldr	r6, [sp, #92]	; 0x5c
   3779c:	adds	r1, r6, r1
   3779e:	ldr	r6, [sp, #96]	; 0x60
   377a0:	adc.w	sl, r6, sl
   377a4:	adds	r1, r1, r4
   377a6:	str	r1, [sp, #144]	; 0x90
   377a8:	adc.w	r1, sl, r8
   377ac:	str	r1, [sp, #148]	; 0x94
   377ae:	ldr	r1, [sp, #144]	; 0x90
   377b0:	eor.w	lr, r1, lr
   377b4:	ldr	r1, [sp, #148]	; 0x94
   377b6:	eors	r7, r1
   377b8:	mov.w	r1, lr, lsr #16
   377bc:	orr.w	r1, r1, r7, lsl #16
   377c0:	lsrs	r7, r7, #16
   377c2:	str	r1, [sp, #232]	; 0xe8
   377c4:	orr.w	r1, r7, lr, lsl #16
   377c8:	str	r1, [sp, #236]	; 0xec
   377ca:	ldr	r1, [sp, #232]	; 0xe8
   377cc:	ldr	r7, [sp, #156]	; 0x9c
   377ce:	adds	r3, r3, r1
   377d0:	ldr	r1, [sp, #236]	; 0xec
   377d2:	eor.w	r4, r4, r3
   377d6:	adc.w	r0, r1, r0
   377da:	eor.w	r8, r0, r8
   377de:	mov.w	r1, r8, lsl #1
   377e2:	orr.w	r6, r1, r4, lsr #31
   377e6:	lsls	r4, r4, #1
   377e8:	orr.w	fp, r4, r8, lsr #31
   377ec:	ldr	r1, [sp, #108]	; 0x6c
   377ee:	ldr	r4, [sp, #152]	; 0x98
   377f0:	adds	r1, r1, r4
   377f2:	ldr	r4, [sp, #112]	; 0x70
   377f4:	adc.w	sl, r4, r7
   377f8:	adds.w	r1, r1, fp
   377fc:	ldr	r4, [sp, #228]	; 0xe4
   377fe:	adc.w	sl, sl, r6
   37802:	eor.w	lr, sl, r9
   37806:	adds.w	r2, r2, lr
   3780a:	eor.w	r7, r1, r4
   3780e:	adc.w	r5, r7, r5
   37812:	eor.w	fp, r2, fp
   37816:	eor.w	ip, r5, r6
   3781a:	mov.w	r4, fp, lsr #24
   3781e:	orr.w	r6, r4, ip, lsl #8
   37822:	ldr	r4, [sp, #92]	; 0x5c
   37824:	mov.w	ip, ip, lsr #24
   37828:	adds	r1, r4, r1
   3782a:	ldr	r4, [sp, #96]	; 0x60
   3782c:	orr.w	r8, ip, fp, lsl #8
   37830:	adc.w	sl, r4, sl
   37834:	adds	r1, r1, r6
   37836:	str	r1, [sp, #152]	; 0x98
   37838:	adc.w	r1, sl, r8
   3783c:	str	r1, [sp, #156]	; 0x9c
   3783e:	ldr	r1, [sp, #152]	; 0x98
   37840:	eor.w	lr, r1, lr
   37844:	ldr	r1, [sp, #156]	; 0x9c
   37846:	eors	r7, r1
   37848:	mov.w	r1, lr, lsr #16
   3784c:	orr.w	r1, r1, r7, lsl #16
   37850:	lsrs	r7, r7, #16
   37852:	str	r1, [sp, #228]	; 0xe4
   37854:	orr.w	r1, r7, lr, lsl #16
   37858:	str	r1, [sp, #260]	; 0x104
   3785a:	ldr	r1, [sp, #228]	; 0xe4
   3785c:	adds	r2, r2, r1
   3785e:	str	r2, [sp, #192]	; 0xc0
   37860:	ldr	r2, [sp, #260]	; 0x104
   37862:	ldr	r1, [sp, #168]	; 0xa8
   37864:	adc.w	r2, r5, r2
   37868:	str	r2, [sp, #196]	; 0xc4
   3786a:	ldr	r2, [sp, #192]	; 0xc0
   3786c:	eors	r6, r2
   3786e:	ldr	r2, [sp, #196]	; 0xc4
   37870:	eor.w	r8, r2, r8
   37874:	mov.w	r2, r8, lsl #1
   37878:	orr.w	r2, r2, r6, lsr #31
   3787c:	lsls	r6, r6, #1
   3787e:	str	r2, [sp, #268]	; 0x10c
   37880:	orr.w	r2, r6, r8, lsr #31
   37884:	str	r2, [sp, #264]	; 0x108
   37886:	ldr	r2, [sp, #60]	; 0x3c
   37888:	adds	r2, r2, r1
   3788a:	ldr	r1, [sp, #64]	; 0x40
   3788c:	ldr	r4, [sp, #172]	; 0xac
   3788e:	ldr	r5, [sp, #252]	; 0xfc
   37890:	adc.w	r7, r1, r4
   37894:	ldr	r1, [sp, #244]	; 0xf4
   37896:	ldr	r4, [sp, #244]	; 0xf4
   37898:	adds	r2, r2, r1
   3789a:	ldr	r1, [sp, #252]	; 0xfc
   3789c:	adc.w	r7, r1, r7
   378a0:	ldr	r1, [sp, #212]	; 0xd4
   378a2:	eor.w	r6, r7, r1
   378a6:	ldr	r1, [sp, #208]	; 0xd0
   378a8:	adds	r3, r3, r6
   378aa:	eor.w	r1, r2, r1
   378ae:	eor.w	r4, r3, r4
   378b2:	adc.w	r0, r1, r0
   378b6:	eors	r5, r0
   378b8:	mov.w	r8, r4, lsr #24
   378bc:	orr.w	ip, r8, r5, lsl #8
   378c0:	lsrs	r5, r5, #24
   378c2:	orr.w	lr, r5, r4, lsl #8
   378c6:	ldr	r4, [sp, #116]	; 0x74
   378c8:	adds	r2, r4, r2
   378ca:	ldr	r4, [sp, #120]	; 0x78
   378cc:	adc.w	r7, r4, r7
   378d0:	adds.w	r2, r2, ip
   378d4:	str	r2, [sp, #168]	; 0xa8
   378d6:	adc.w	r2, r7, lr
   378da:	str	r2, [sp, #172]	; 0xac
   378dc:	ldr	r2, [sp, #168]	; 0xa8
   378de:	eors	r6, r2
   378e0:	ldr	r2, [sp, #172]	; 0xac
   378e2:	eors	r1, r2
   378e4:	lsrs	r2, r6, #16
   378e6:	orr.w	r2, r2, r1, lsl #16
   378ea:	lsrs	r1, r1, #16
   378ec:	str	r2, [sp, #208]	; 0xd0
   378ee:	orr.w	r2, r1, r6, lsl #16
   378f2:	str	r2, [sp, #212]	; 0xd4
   378f4:	ldr	r2, [sp, #208]	; 0xd0
   378f6:	ldr	r1, [sp, #164]	; 0xa4
   378f8:	adds	r3, r3, r2
   378fa:	str	r3, [sp, #200]	; 0xc8
   378fc:	ldr	r3, [sp, #212]	; 0xd4
   378fe:	adc.w	r3, r0, r3
   37902:	str	r3, [sp, #204]	; 0xcc
   37904:	ldr	r2, [sp, #204]	; 0xcc
   37906:	ldr	r3, [sp, #200]	; 0xc8
   37908:	eor.w	lr, r2, lr
   3790c:	eor.w	r3, r3, ip
   37910:	mov.w	r2, lr, lsl #1
   37914:	orr.w	r2, r2, r3, lsr #31
   37918:	mov.w	ip, r3, lsl #1
   3791c:	str	r2, [sp, #244]	; 0xf4
   3791e:	orr.w	ip, ip, lr, lsr #31
   37922:	ldr	r2, [sp, #160]	; 0xa0
   37924:	ldr	r3, [sp, #100]	; 0x64
   37926:	adds	r3, r3, r2
   37928:	ldr	r2, [sp, #104]	; 0x68
   3792a:	adc.w	lr, r2, r1
   3792e:	ldr	r2, [sp, #240]	; 0xf0
   37930:	adds	r3, r3, r2
   37932:	ldr	r2, [sp, #248]	; 0xf8
   37934:	adc.w	lr, lr, r2
   37938:	ldr	r2, [sp, #236]	; 0xec
   3793a:	eor.w	r6, lr, r2
   3793e:	ldr	r2, [sp, #232]	; 0xe8
   37940:	eor.w	r0, r3, r2
   37944:	ldr	r2, [sp, #176]	; 0xb0
   37946:	ldr	r1, [sp, #180]	; 0xb4
   37948:	adds	r2, r2, r6
   3794a:	adc.w	r5, r1, r0
   3794e:	ldr	r1, [sp, #240]	; 0xf0
   37950:	eor.w	r8, r2, r1
   37954:	ldr	r1, [sp, #248]	; 0xf8
   37956:	eor.w	r4, r5, r1
   3795a:	mov.w	r9, r8, lsr #24
   3795e:	orr.w	r1, r9, r4, lsl #8
   37962:	lsrs	r4, r4, #24
   37964:	orr.w	r7, r4, r8, lsl #8
   37968:	ldr	r4, [sp, #12]
   3796a:	adds	r3, r4, r3
   3796c:	ldr	r4, [sp, #16]
   3796e:	adc.w	lr, r4, lr
   37972:	adds	r3, r3, r1
   37974:	str	r3, [sp, #160]	; 0xa0
   37976:	adc.w	r3, lr, r7
   3797a:	str	r3, [sp, #164]	; 0xa4
   3797c:	ldr	r3, [sp, #160]	; 0xa0
   3797e:	ldr	r4, [sp, #216]	; 0xd8
   37980:	eors	r6, r3
   37982:	ldr	r3, [sp, #164]	; 0xa4
   37984:	eors	r0, r3
   37986:	lsrs	r3, r6, #16
   37988:	orr.w	r3, r3, r0, lsl #16
   3798c:	lsrs	r0, r0, #16
   3798e:	str	r3, [sp, #232]	; 0xe8
   37990:	orr.w	r3, r0, r6, lsl #16
   37994:	str	r3, [sp, #236]	; 0xec
   37996:	ldr	r3, [sp, #232]	; 0xe8
   37998:	ldr	r0, [sp, #148]	; 0x94
   3799a:	adds	r2, r2, r3
   3799c:	ldr	r3, [sp, #236]	; 0xec
   3799e:	eor.w	r1, r1, r2
   379a2:	adc.w	r5, r3, r5
   379a6:	eors	r7, r5
   379a8:	lsls	r3, r7, #1
   379aa:	orr.w	r3, r3, r1, lsr #31
   379ae:	lsls	r1, r1, #1
   379b0:	str	r3, [sp, #248]	; 0xf8
   379b2:	orr.w	r3, r1, r7, lsr #31
   379b6:	ldr	r1, [sp, #144]	; 0x90
   379b8:	str	r3, [sp, #240]	; 0xf0
   379ba:	ldr	r3, [sp, #28]
   379bc:	adds	r1, r3, r1
   379be:	ldr	r3, [sp, #32]
   379c0:	adc.w	sl, r3, r0
   379c4:	ldr	r3, [sp, #216]	; 0xd8
   379c6:	ldr	r0, [sp, #188]	; 0xbc
   379c8:	adds	r1, r1, r3
   379ca:	ldr	r3, [sp, #256]	; 0x100
   379cc:	adc.w	sl, sl, r3
   379d0:	ldr	r3, [sp, #224]	; 0xe0
   379d2:	eor.w	lr, sl, r3
   379d6:	ldr	r3, [sp, #220]	; 0xdc
   379d8:	eor.w	r6, r1, r3
   379dc:	ldr	r3, [sp, #184]	; 0xb8
   379de:	adds.w	r3, r3, lr
   379e2:	eor.w	r8, r3, r4
   379e6:	ldr	r4, [sp, #256]	; 0x100
   379e8:	adcs	r0, r6
   379ea:	eor.w	r7, r0, r4
   379ee:	mov.w	fp, r8, lsr #24
   379f2:	orr.w	r4, fp, r7, lsl #8
   379f6:	lsrs	r7, r7, #24
   379f8:	orr.w	r9, r7, r8, lsl #8
   379fc:	ldr	r7, [sp, #76]	; 0x4c
   379fe:	adds	r1, r7, r1
   37a00:	ldr	r7, [sp, #80]	; 0x50
   37a02:	adc.w	sl, r7, sl
   37a06:	adds	r1, r1, r4
   37a08:	str	r1, [sp, #144]	; 0x90
   37a0a:	adc.w	r1, sl, r9
   37a0e:	str	r1, [sp, #148]	; 0x94
   37a10:	ldr	r1, [sp, #144]	; 0x90
   37a12:	eor.w	lr, r1, lr
   37a16:	ldr	r1, [sp, #148]	; 0x94
   37a18:	eors	r6, r1
   37a1a:	mov.w	r1, lr, lsr #16
   37a1e:	orr.w	r8, r1, r6, lsl #16
   37a22:	lsrs	r6, r6, #16
   37a24:	adds.w	r3, r3, r8
   37a28:	orr.w	sl, r6, lr, lsl #16
   37a2c:	adc.w	r0, r0, sl
   37a30:	eors	r4, r3
   37a32:	eor.w	r9, r0, r9
   37a36:	ldr	r6, [sp, #156]	; 0x9c
   37a38:	mov.w	r1, r9, lsl #1
   37a3c:	orr.w	r1, r1, r4, lsr #31
   37a40:	lsls	r4, r4, #1
   37a42:	orr.w	fp, r4, r9, lsr #31
   37a46:	str	r1, [sp, #216]	; 0xd8
   37a48:	ldr	r4, [sp, #152]	; 0x98
   37a4a:	ldr	r1, [sp, #44]	; 0x2c
   37a4c:	adds	r1, r1, r4
   37a4e:	ldr	r4, [sp, #48]	; 0x30
   37a50:	adc.w	r9, r4, r6
   37a54:	ldr	r4, [sp, #244]	; 0xf4
   37a56:	adds.w	r1, r1, ip
   37a5a:	adc.w	r9, r9, r4
   37a5e:	eor.w	r7, r1, r8
   37a62:	eor.w	lr, r9, sl
   37a66:	adds.w	r2, r2, lr
   37a6a:	adc.w	r5, r7, r5
   37a6e:	eor.w	ip, r2, ip
   37a72:	eor.w	r6, r5, r4
   37a76:	mov.w	sl, ip, lsr #24
   37a7a:	orr.w	r4, sl, r6, lsl #8
   37a7e:	lsrs	r6, r6, #24
   37a80:	orr.w	r8, r6, ip, lsl #8
   37a84:	ldr	r6, [sp, #4]
   37a86:	adds	r1, r6, r1
   37a88:	ldr	r6, [sp, #8]
   37a8a:	adc.w	r9, r6, r9
   37a8e:	adds	r1, r1, r4
   37a90:	str	r1, [sp, #152]	; 0x98
   37a92:	adc.w	r1, r9, r8
   37a96:	str	r1, [sp, #156]	; 0x9c
   37a98:	ldr	r1, [sp, #152]	; 0x98
   37a9a:	eor.w	lr, r1, lr
   37a9e:	ldr	r1, [sp, #156]	; 0x9c
   37aa0:	eors	r7, r1
   37aa2:	mov.w	r1, lr, lsr #16
   37aa6:	orr.w	r1, r1, r7, lsl #16
   37aaa:	lsrs	r7, r7, #16
   37aac:	str	r1, [sp, #220]	; 0xdc
   37aae:	orr.w	r1, r7, lr, lsl #16
   37ab2:	str	r1, [sp, #224]	; 0xe0
   37ab4:	ldr	r1, [sp, #220]	; 0xdc
   37ab6:	adds	r2, r2, r1
   37ab8:	str	r2, [sp, #176]	; 0xb0
   37aba:	ldr	r2, [sp, #224]	; 0xe0
   37abc:	ldr	r1, [sp, #168]	; 0xa8
   37abe:	adc.w	r2, r5, r2
   37ac2:	str	r2, [sp, #180]	; 0xb4
   37ac4:	ldr	r2, [sp, #176]	; 0xb0
   37ac6:	eors	r4, r2
   37ac8:	ldr	r2, [sp, #180]	; 0xb4
   37aca:	eor.w	r8, r2, r8
   37ace:	mov.w	r2, r8, lsl #1
   37ad2:	orr.w	r2, r2, r4, lsr #31
   37ad6:	lsls	r4, r4, #1
   37ad8:	str	r2, [sp, #252]	; 0xfc
   37ada:	orr.w	r2, r4, r8, lsr #31
   37ade:	str	r2, [sp, #244]	; 0xf4
   37ae0:	ldr	r2, [sp, #124]	; 0x7c
   37ae2:	ldr	r4, [sp, #172]	; 0xac
   37ae4:	adds	r2, r2, r1
   37ae6:	ldr	r1, [sp, #128]	; 0x80
   37ae8:	adc.w	r7, r1, r4
   37aec:	ldr	r1, [sp, #240]	; 0xf0
   37aee:	adds	r2, r2, r1
   37af0:	ldr	r1, [sp, #248]	; 0xf8
   37af2:	adc.w	r7, r1, r7
   37af6:	ldr	r1, [sp, #260]	; 0x104
   37af8:	eor.w	r4, r7, r1
   37afc:	ldr	r1, [sp, #228]	; 0xe4
   37afe:	adds	r3, r3, r4
   37b00:	eor.w	r9, r2, r1
   37b04:	ldr	r1, [sp, #240]	; 0xf0
   37b06:	adc.w	r0, r0, r9
   37b0a:	eor.w	ip, r3, r1
   37b0e:	ldr	r1, [sp, #248]	; 0xf8
   37b10:	eor.w	r5, r0, r1
   37b14:	mov.w	lr, ip, lsr #24
   37b18:	orr.w	r1, lr, r5, lsl #8
   37b1c:	lsrs	r5, r5, #24
   37b1e:	orr.w	r6, r5, ip, lsl #8
   37b22:	ldr	r5, [sp, #36]	; 0x24
   37b24:	adds	r2, r5, r2
   37b26:	ldr	r5, [sp, #40]	; 0x28
   37b28:	adc.w	r7, r5, r7
   37b2c:	adds	r2, r2, r1
   37b2e:	str	r2, [sp, #168]	; 0xa8
   37b30:	adc.w	r2, r7, r6
   37b34:	str	r2, [sp, #172]	; 0xac
   37b36:	ldr	r2, [sp, #168]	; 0xa8
   37b38:	eors	r4, r2
   37b3a:	ldr	r2, [sp, #172]	; 0xac
   37b3c:	eor.w	r2, r2, r9
   37b40:	lsrs	r5, r4, #16
   37b42:	orr.w	r5, r5, r2, lsl #16
   37b46:	mov.w	r9, r2, lsr #16
   37b4a:	orr.w	r9, r9, r4, lsl #16
   37b4e:	adds	r3, r3, r5
   37b50:	str	r3, [sp, #184]	; 0xb8
   37b52:	adc.w	r3, r0, r9
   37b56:	str	r3, [sp, #188]	; 0xbc
   37b58:	ldr	r3, [sp, #184]	; 0xb8
   37b5a:	ldr	r2, [sp, #160]	; 0xa0
   37b5c:	eors	r1, r3
   37b5e:	ldr	r3, [sp, #188]	; 0xbc
   37b60:	ldr	r0, [sp, #196]	; 0xc4
   37b62:	eors	r6, r3
   37b64:	str	r5, [sp, #228]	; 0xe4
   37b66:	lsls	r3, r6, #1
   37b68:	orr.w	r3, r3, r1, lsr #31
   37b6c:	lsls	r1, r1, #1
   37b6e:	str	r3, [sp, #248]	; 0xf8
   37b70:	orr.w	r3, r1, r6, lsr #31
   37b74:	str	r3, [sp, #240]	; 0xf0
   37b76:	ldr	r3, [sp, #68]	; 0x44
   37b78:	ldr	r1, [sp, #164]	; 0xa4
   37b7a:	adds	r3, r3, r2
   37b7c:	ldr	r2, [sp, #72]	; 0x48
   37b7e:	adc.w	ip, r2, r1
   37b82:	ldr	r2, [sp, #216]	; 0xd8
   37b84:	adds.w	r3, r3, fp
   37b88:	adc.w	ip, ip, r2
   37b8c:	ldr	r2, [sp, #212]	; 0xd4
   37b8e:	eor.w	r7, ip, r2
   37b92:	ldr	r2, [sp, #208]	; 0xd0
   37b94:	eor.w	r1, r3, r2
   37b98:	ldr	r2, [sp, #192]	; 0xc0
   37b9a:	adds	r2, r2, r7
   37b9c:	adc.w	r5, r0, r1
   37ba0:	ldr	r0, [sp, #216]	; 0xd8
   37ba2:	eor.w	fp, r2, fp
   37ba6:	eors	r0, r5
   37ba8:	mov.w	r4, fp, lsr #24
   37bac:	orr.w	r8, r4, r0, lsl #8
   37bb0:	lsrs	r0, r0, #24
   37bb2:	orr.w	r6, r0, fp, lsl #8
   37bb6:	ldr	r0, [sp, #52]	; 0x34
   37bb8:	adds	r3, r0, r3
   37bba:	ldr	r0, [sp, #56]	; 0x38
   37bbc:	adc.w	ip, r0, ip
   37bc0:	adds.w	r3, r3, r8
   37bc4:	str	r3, [sp, #160]	; 0xa0
   37bc6:	adc.w	r3, ip, r6
   37bca:	str	r3, [sp, #164]	; 0xa4
   37bcc:	ldr	r3, [sp, #160]	; 0xa0
   37bce:	eors	r7, r3
   37bd0:	ldr	r3, [sp, #164]	; 0xa4
   37bd2:	eors	r1, r3
   37bd4:	lsrs	r3, r7, #16
   37bd6:	orr.w	r3, r3, r1, lsl #16
   37bda:	lsrs	r1, r1, #16
   37bdc:	str	r3, [sp, #208]	; 0xd0
   37bde:	orr.w	r3, r1, r7, lsl #16
   37be2:	str	r3, [sp, #212]	; 0xd4
   37be4:	ldr	r3, [sp, #208]	; 0xd0
   37be6:	ldr	r1, [sp, #144]	; 0x90
   37be8:	adds	r2, r2, r3
   37bea:	ldr	r3, [sp, #212]	; 0xd4
   37bec:	eor.w	r8, r2, r8
   37bf0:	ldr	r0, [sp, #148]	; 0x94
   37bf2:	adc.w	r5, r3, r5
   37bf6:	ldr	r4, [sp, #264]	; 0x108
   37bf8:	eors	r6, r5
   37bfa:	lsls	r3, r6, #1
   37bfc:	orr.w	r3, r3, r8, lsr #31
   37c00:	mov.w	r8, r8, lsl #1
   37c04:	str	r3, [sp, #256]	; 0x100
   37c06:	orr.w	r3, r8, r6, lsr #31
   37c0a:	str	r3, [sp, #216]	; 0xd8
   37c0c:	ldr	r3, [sp, #20]
   37c0e:	adds	r1, r3, r1
   37c10:	ldr	r3, [sp, #24]
   37c12:	adc.w	sl, r3, r0
   37c16:	ldr	r3, [sp, #264]	; 0x108
   37c18:	ldr	r0, [sp, #204]	; 0xcc
   37c1a:	adds	r1, r1, r3
   37c1c:	ldr	r3, [sp, #268]	; 0x10c
   37c1e:	adc.w	sl, sl, r3
   37c22:	ldr	r3, [sp, #236]	; 0xec
   37c24:	eor.w	lr, sl, r3
   37c28:	ldr	r3, [sp, #232]	; 0xe8
   37c2a:	eor.w	r7, r1, r3
   37c2e:	ldr	r3, [sp, #200]	; 0xc8
   37c30:	adds.w	r3, r3, lr
   37c34:	eor.w	r6, r3, r4
   37c38:	ldr	r4, [sp, #268]	; 0x10c
   37c3a:	adcs	r0, r7
   37c3c:	eor.w	ip, r0, r4
   37c40:	mov.w	fp, r6, lsr #24
   37c44:	orr.w	r4, fp, ip, lsl #8
   37c48:	mov.w	ip, ip, lsr #24
   37c4c:	orr.w	r8, ip, r6, lsl #8
   37c50:	ldr	r6, [sp, #84]	; 0x54
   37c52:	adds	r1, r6, r1
   37c54:	ldr	r6, [sp, #88]	; 0x58
   37c56:	adc.w	sl, r6, sl
   37c5a:	adds	r1, r1, r4
   37c5c:	str	r1, [sp, #144]	; 0x90
   37c5e:	adc.w	r1, sl, r8
   37c62:	str	r1, [sp, #148]	; 0x94
   37c64:	ldr	r1, [sp, #144]	; 0x90
   37c66:	eor.w	lr, r1, lr
   37c6a:	ldr	r1, [sp, #148]	; 0x94
   37c6c:	eors	r7, r1
   37c6e:	mov.w	r1, lr, lsr #16
   37c72:	orr.w	r1, r1, r7, lsl #16
   37c76:	lsrs	r7, r7, #16
   37c78:	str	r1, [sp, #232]	; 0xe8
   37c7a:	orr.w	r1, r7, lr, lsl #16
   37c7e:	str	r1, [sp, #236]	; 0xec
   37c80:	ldr	r1, [sp, #232]	; 0xe8
   37c82:	ldr	r7, [sp, #156]	; 0x9c
   37c84:	adds	r3, r3, r1
   37c86:	ldr	r1, [sp, #236]	; 0xec
   37c88:	eor.w	r4, r4, r3
   37c8c:	adc.w	r0, r1, r0
   37c90:	eor.w	r8, r0, r8
   37c94:	mov.w	r1, r8, lsl #1
   37c98:	orr.w	r6, r1, r4, lsr #31
   37c9c:	lsls	r4, r4, #1
   37c9e:	orr.w	fp, r4, r8, lsr #31
   37ca2:	ldr	r1, [sp, #52]	; 0x34
   37ca4:	ldr	r4, [sp, #152]	; 0x98
   37ca6:	adds	r1, r1, r4
   37ca8:	ldr	r4, [sp, #56]	; 0x38
   37caa:	adc.w	sl, r4, r7
   37cae:	adds.w	r1, r1, fp
   37cb2:	adc.w	sl, sl, r6
   37cb6:	ldr	r4, [sp, #228]	; 0xe4
   37cb8:	eor.w	lr, sl, r9
   37cbc:	adds.w	r2, r2, lr
   37cc0:	eor.w	r7, r1, r4
   37cc4:	adc.w	r5, r7, r5
   37cc8:	eor.w	fp, r2, fp
   37ccc:	eor.w	ip, r5, r6
   37cd0:	mov.w	r4, fp, lsr #24
   37cd4:	orr.w	r6, r4, ip, lsl #8
   37cd8:	ldr	r4, [sp, #124]	; 0x7c
   37cda:	mov.w	ip, ip, lsr #24
   37cde:	adds	r1, r4, r1
   37ce0:	ldr	r4, [sp, #128]	; 0x80
   37ce2:	orr.w	r8, ip, fp, lsl #8
   37ce6:	adc.w	sl, r4, sl
   37cea:	adds	r1, r1, r6
   37cec:	str	r1, [sp, #152]	; 0x98
   37cee:	adc.w	r1, sl, r8
   37cf2:	str	r1, [sp, #156]	; 0x9c
   37cf4:	ldr	r1, [sp, #152]	; 0x98
   37cf6:	ldr	r4, [sp, #172]	; 0xac
   37cf8:	eor.w	lr, r1, lr
   37cfc:	ldr	r1, [sp, #156]	; 0x9c
   37cfe:	eors	r7, r1
   37d00:	mov.w	r1, lr, lsr #16
   37d04:	orr.w	r1, r1, r7, lsl #16
   37d08:	lsrs	r7, r7, #16
   37d0a:	str	r1, [sp, #228]	; 0xe4
   37d0c:	orr.w	r1, r7, lr, lsl #16
   37d10:	str	r1, [sp, #260]	; 0x104
   37d12:	ldr	r1, [sp, #228]	; 0xe4
   37d14:	adds	r2, r2, r1
   37d16:	str	r2, [sp, #192]	; 0xc0
   37d18:	ldr	r2, [sp, #260]	; 0x104
   37d1a:	ldr	r1, [sp, #168]	; 0xa8
   37d1c:	adc.w	r2, r5, r2
   37d20:	str	r2, [sp, #196]	; 0xc4
   37d22:	ldr	r2, [sp, #192]	; 0xc0
   37d24:	ldr	r5, [sp, #252]	; 0xfc
   37d26:	eors	r6, r2
   37d28:	ldr	r2, [sp, #196]	; 0xc4
   37d2a:	eor.w	r8, r2, r8
   37d2e:	mov.w	r2, r8, lsl #1
   37d32:	orr.w	r2, r2, r6, lsr #31
   37d36:	lsls	r6, r6, #1
   37d38:	str	r2, [sp, #268]	; 0x10c
   37d3a:	orr.w	r2, r6, r8, lsr #31
   37d3e:	str	r2, [sp, #264]	; 0x108
   37d40:	ldr	r2, [sp, #116]	; 0x74
   37d42:	adds	r2, r2, r1
   37d44:	ldr	r1, [sp, #120]	; 0x78
   37d46:	adc.w	r7, r1, r4
   37d4a:	ldr	r1, [sp, #244]	; 0xf4
   37d4c:	ldr	r4, [sp, #244]	; 0xf4
   37d4e:	adds	r2, r2, r1
   37d50:	ldr	r1, [sp, #252]	; 0xfc
   37d52:	adc.w	r7, r1, r7
   37d56:	ldr	r1, [sp, #212]	; 0xd4
   37d58:	eor.w	r6, r7, r1
   37d5c:	ldr	r1, [sp, #208]	; 0xd0
   37d5e:	adds	r3, r3, r6
   37d60:	eor.w	r1, r2, r1
   37d64:	eor.w	r4, r3, r4
   37d68:	adc.w	r0, r1, r0
   37d6c:	eors	r5, r0
   37d6e:	mov.w	r8, r4, lsr #24
   37d72:	orr.w	ip, r8, r5, lsl #8
   37d76:	lsrs	r5, r5, #24
   37d78:	orr.w	lr, r5, r4, lsl #8
   37d7c:	ldr	r4, [sp, #76]	; 0x4c
   37d7e:	adds	r2, r4, r2
   37d80:	ldr	r4, [sp, #80]	; 0x50
   37d82:	adc.w	r7, r4, r7
   37d86:	adds.w	r2, r2, ip
   37d8a:	str	r2, [sp, #168]	; 0xa8
   37d8c:	adc.w	r2, r7, lr
   37d90:	str	r2, [sp, #172]	; 0xac
   37d92:	ldr	r2, [sp, #168]	; 0xa8
   37d94:	eors	r6, r2
   37d96:	ldr	r2, [sp, #172]	; 0xac
   37d98:	eors	r1, r2
   37d9a:	lsrs	r2, r6, #16
   37d9c:	orr.w	r2, r2, r1, lsl #16
   37da0:	lsrs	r1, r1, #16
   37da2:	str	r2, [sp, #208]	; 0xd0
   37da4:	orr.w	r2, r1, r6, lsl #16
   37da8:	str	r2, [sp, #212]	; 0xd4
   37daa:	ldr	r2, [sp, #208]	; 0xd0
   37dac:	ldr	r1, [sp, #164]	; 0xa4
   37dae:	adds	r3, r3, r2
   37db0:	str	r3, [sp, #200]	; 0xc8
   37db2:	ldr	r3, [sp, #212]	; 0xd4
   37db4:	adc.w	r3, r0, r3
   37db8:	str	r3, [sp, #204]	; 0xcc
   37dba:	ldr	r2, [sp, #204]	; 0xcc
   37dbc:	ldr	r3, [sp, #200]	; 0xc8
   37dbe:	eor.w	lr, r2, lr
   37dc2:	eor.w	r3, r3, ip
   37dc6:	mov.w	r2, lr, lsl #1
   37dca:	orr.w	r2, r2, r3, lsr #31
   37dce:	mov.w	ip, r3, lsl #1
   37dd2:	str	r2, [sp, #244]	; 0xf4
   37dd4:	orr.w	ip, ip, lr, lsr #31
   37dd8:	ldr	r2, [sp, #160]	; 0xa0
   37dda:	ldr	r3, [sp, #92]	; 0x5c
   37ddc:	adds	r3, r3, r2
   37dde:	ldr	r2, [sp, #96]	; 0x60
   37de0:	adc.w	lr, r2, r1
   37de4:	ldr	r2, [sp, #240]	; 0xf0
   37de6:	ldr	r1, [sp, #180]	; 0xb4
   37de8:	adds	r3, r3, r2
   37dea:	ldr	r2, [sp, #248]	; 0xf8
   37dec:	adc.w	lr, lr, r2
   37df0:	ldr	r2, [sp, #236]	; 0xec
   37df2:	eor.w	r6, lr, r2
   37df6:	ldr	r2, [sp, #232]	; 0xe8
   37df8:	eor.w	r0, r3, r2
   37dfc:	ldr	r2, [sp, #176]	; 0xb0
   37dfe:	adds	r2, r2, r6
   37e00:	adc.w	r5, r1, r0
   37e04:	ldr	r1, [sp, #240]	; 0xf0
   37e06:	eor.w	r8, r2, r1
   37e0a:	ldr	r1, [sp, #248]	; 0xf8
   37e0c:	eor.w	r4, r5, r1
   37e10:	mov.w	r9, r8, lsr #24
   37e14:	orr.w	r1, r9, r4, lsl #8
   37e18:	lsrs	r4, r4, #24
   37e1a:	orr.w	r7, r4, r8, lsl #8
   37e1e:	ldr	r4, [sp, #28]
   37e20:	adds	r3, r4, r3
   37e22:	ldr	r4, [sp, #32]
   37e24:	adc.w	lr, r4, lr
   37e28:	adds	r3, r3, r1
   37e2a:	str	r3, [sp, #160]	; 0xa0
   37e2c:	adc.w	r3, lr, r7
   37e30:	str	r3, [sp, #164]	; 0xa4
   37e32:	ldr	r3, [sp, #160]	; 0xa0
   37e34:	eors	r6, r3
   37e36:	ldr	r3, [sp, #164]	; 0xa4
   37e38:	eors	r0, r3
   37e3a:	lsrs	r3, r6, #16
   37e3c:	orr.w	r3, r3, r0, lsl #16
   37e40:	lsrs	r0, r0, #16
   37e42:	str	r3, [sp, #232]	; 0xe8
   37e44:	orr.w	r3, r0, r6, lsl #16
   37e48:	str	r3, [sp, #236]	; 0xec
   37e4a:	ldr	r3, [sp, #232]	; 0xe8
   37e4c:	adds	r2, r2, r3
   37e4e:	ldr	r3, [sp, #236]	; 0xec
   37e50:	eor.w	r1, r1, r2
   37e54:	adc.w	r5, r3, r5
   37e58:	eors	r7, r5
   37e5a:	lsls	r3, r7, #1
   37e5c:	orr.w	r3, r3, r1, lsr #31
   37e60:	lsls	r1, r1, #1
   37e62:	str	r3, [sp, #248]	; 0xf8
   37e64:	orr.w	r3, r1, r7, lsr #31
   37e68:	str	r3, [sp, #240]	; 0xf0
   37e6a:	ldr	r3, [sp, #4]
   37e6c:	ldr	r1, [sp, #144]	; 0x90
   37e6e:	ldr	r0, [sp, #148]	; 0x94
   37e70:	adds	r1, r3, r1
   37e72:	ldr	r3, [sp, #8]
   37e74:	ldr	r4, [sp, #216]	; 0xd8
   37e76:	adc.w	sl, r3, r0
   37e7a:	ldr	r3, [sp, #216]	; 0xd8
   37e7c:	ldr	r0, [sp, #188]	; 0xbc
   37e7e:	adds	r1, r1, r3
   37e80:	ldr	r3, [sp, #256]	; 0x100
   37e82:	adc.w	sl, sl, r3
   37e86:	ldr	r3, [sp, #224]	; 0xe0
   37e88:	eor.w	lr, sl, r3
   37e8c:	ldr	r3, [sp, #220]	; 0xdc
   37e8e:	eor.w	r6, r1, r3
   37e92:	ldr	r3, [sp, #184]	; 0xb8
   37e94:	adds.w	r3, r3, lr
   37e98:	eor.w	r8, r3, r4
   37e9c:	ldr	r4, [sp, #256]	; 0x100
   37e9e:	adcs	r0, r6
   37ea0:	eor.w	r7, r0, r4
   37ea4:	mov.w	fp, r8, lsr #24
   37ea8:	orr.w	r4, fp, r7, lsl #8
   37eac:	lsrs	r7, r7, #24
   37eae:	orr.w	r9, r7, r8, lsl #8
   37eb2:	ldr	r7, [sp, #68]	; 0x44
   37eb4:	adds	r1, r7, r1
   37eb6:	ldr	r7, [sp, #72]	; 0x48
   37eb8:	adc.w	sl, r7, sl
   37ebc:	adds	r1, r1, r4
   37ebe:	str	r1, [sp, #144]	; 0x90
   37ec0:	adc.w	r1, sl, r9
   37ec4:	str	r1, [sp, #148]	; 0x94
   37ec6:	ldr	r1, [sp, #144]	; 0x90
   37ec8:	eor.w	lr, r1, lr
   37ecc:	ldr	r1, [sp, #148]	; 0x94
   37ece:	eors	r6, r1
   37ed0:	mov.w	r1, lr, lsr #16
   37ed4:	orr.w	r8, r1, r6, lsl #16
   37ed8:	lsrs	r6, r6, #16
   37eda:	adds.w	r3, r3, r8
   37ede:	orr.w	sl, r6, lr, lsl #16
   37ee2:	adc.w	r0, r0, sl
   37ee6:	eors	r4, r3
   37ee8:	eor.w	r9, r0, r9
   37eec:	ldr	r6, [sp, #156]	; 0x9c
   37eee:	mov.w	r1, r9, lsl #1
   37ef2:	orr.w	r1, r1, r4, lsr #31
   37ef6:	lsls	r4, r4, #1
   37ef8:	orr.w	fp, r4, r9, lsr #31
   37efc:	str	r1, [sp, #216]	; 0xd8
   37efe:	ldr	r4, [sp, #152]	; 0x98
   37f00:	ldr	r1, [sp, #100]	; 0x64
   37f02:	adds	r1, r1, r4
   37f04:	ldr	r4, [sp, #104]	; 0x68
   37f06:	adc.w	r9, r4, r6
   37f0a:	ldr	r4, [sp, #244]	; 0xf4
   37f0c:	adds.w	r1, r1, ip
   37f10:	adc.w	r9, r9, r4
   37f14:	eor.w	r7, r1, r8
   37f18:	eor.w	lr, r9, sl
   37f1c:	adds.w	r2, r2, lr
   37f20:	adc.w	r5, r7, r5
   37f24:	eor.w	ip, r2, ip
   37f28:	eor.w	r6, r5, r4
   37f2c:	mov.w	sl, ip, lsr #24
   37f30:	orr.w	r4, sl, r6, lsl #8
   37f34:	lsrs	r6, r6, #24
   37f36:	orr.w	r8, r6, ip, lsl #8
   37f3a:	ldr	r6, [sp, #20]
   37f3c:	adds	r1, r6, r1
   37f3e:	ldr	r6, [sp, #24]
   37f40:	adc.w	r9, r6, r9
   37f44:	adds	r1, r1, r4
   37f46:	str	r1, [sp, #152]	; 0x98
   37f48:	adc.w	r1, r9, r8
   37f4c:	str	r1, [sp, #156]	; 0x9c
   37f4e:	ldr	r1, [sp, #152]	; 0x98
   37f50:	eor.w	lr, r1, lr
   37f54:	ldr	r1, [sp, #156]	; 0x9c
   37f56:	eors	r7, r1
   37f58:	mov.w	r1, lr, lsr #16
   37f5c:	orr.w	r1, r1, r7, lsl #16
   37f60:	lsrs	r7, r7, #16
   37f62:	str	r1, [sp, #220]	; 0xdc
   37f64:	orr.w	r1, r7, lr, lsl #16
   37f68:	str	r1, [sp, #224]	; 0xe0
   37f6a:	ldr	r1, [sp, #220]	; 0xdc
   37f6c:	adds	r2, r2, r1
   37f6e:	str	r2, [sp, #176]	; 0xb0
   37f70:	ldr	r2, [sp, #224]	; 0xe0
   37f72:	ldr	r1, [sp, #168]	; 0xa8
   37f74:	adc.w	r2, r5, r2
   37f78:	str	r2, [sp, #180]	; 0xb4
   37f7a:	ldr	r2, [sp, #176]	; 0xb0
   37f7c:	eors	r4, r2
   37f7e:	ldr	r2, [sp, #180]	; 0xb4
   37f80:	eor.w	r8, r2, r8
   37f84:	mov.w	r2, r8, lsl #1
   37f88:	orr.w	r2, r2, r4, lsr #31
   37f8c:	lsls	r4, r4, #1
   37f8e:	str	r2, [sp, #252]	; 0xfc
   37f90:	orr.w	r2, r4, r8, lsr #31
   37f94:	str	r2, [sp, #244]	; 0xf4
   37f96:	ldr	r2, [sp, #108]	; 0x6c
   37f98:	ldr	r4, [sp, #172]	; 0xac
   37f9a:	adds	r2, r2, r1
   37f9c:	ldr	r1, [sp, #112]	; 0x70
   37f9e:	adc.w	r7, r1, r4
   37fa2:	ldr	r1, [sp, #240]	; 0xf0
   37fa4:	adds	r2, r2, r1
   37fa6:	ldr	r1, [sp, #248]	; 0xf8
   37fa8:	adc.w	r7, r1, r7
   37fac:	ldr	r1, [sp, #260]	; 0x104
   37fae:	eor.w	r4, r7, r1
   37fb2:	ldr	r1, [sp, #228]	; 0xe4
   37fb4:	adds	r3, r3, r4
   37fb6:	eor.w	r9, r2, r1
   37fba:	ldr	r1, [sp, #240]	; 0xf0
   37fbc:	adc.w	r0, r0, r9
   37fc0:	eor.w	ip, r3, r1
   37fc4:	ldr	r1, [sp, #248]	; 0xf8
   37fc6:	eor.w	r5, r0, r1
   37fca:	mov.w	lr, ip, lsr #24
   37fce:	orr.w	r1, lr, r5, lsl #8
   37fd2:	lsrs	r5, r5, #24
   37fd4:	orr.w	r6, r5, ip, lsl #8
   37fd8:	ldr	r5, [sp, #60]	; 0x3c
   37fda:	adds	r2, r5, r2
   37fdc:	ldr	r5, [sp, #64]	; 0x40
   37fde:	adc.w	r7, r5, r7
   37fe2:	adds	r2, r2, r1
   37fe4:	str	r2, [sp, #168]	; 0xa8
   37fe6:	adc.w	r2, r7, r6
   37fea:	str	r2, [sp, #172]	; 0xac
   37fec:	ldr	r2, [sp, #168]	; 0xa8
   37fee:	eors	r4, r2
   37ff0:	ldr	r2, [sp, #172]	; 0xac
   37ff2:	eor.w	r2, r2, r9
   37ff6:	lsrs	r5, r4, #16
   37ff8:	orr.w	r5, r5, r2, lsl #16
   37ffc:	mov.w	r9, r2, lsr #16
   38000:	orr.w	r9, r9, r4, lsl #16
   38004:	adds	r3, r3, r5
   38006:	str	r3, [sp, #184]	; 0xb8
   38008:	adc.w	r3, r0, r9
   3800c:	str	r3, [sp, #188]	; 0xbc
   3800e:	ldr	r3, [sp, #184]	; 0xb8
   38010:	ldr	r2, [sp, #160]	; 0xa0
   38012:	eors	r1, r3
   38014:	ldr	r3, [sp, #188]	; 0xbc
   38016:	str	r5, [sp, #228]	; 0xe4
   38018:	eors	r6, r3
   3801a:	lsls	r3, r6, #1
   3801c:	orr.w	r3, r3, r1, lsr #31
   38020:	lsls	r1, r1, #1
   38022:	str	r3, [sp, #248]	; 0xf8
   38024:	orr.w	r3, r1, r6, lsr #31
   38028:	str	r3, [sp, #240]	; 0xf0
   3802a:	ldr	r3, [sp, #12]
   3802c:	adds	r3, r3, r2
   3802e:	ldr	r2, [sp, #16]
   38030:	ldr	r1, [sp, #164]	; 0xa4
   38032:	ldr	r0, [sp, #196]	; 0xc4
   38034:	adc.w	ip, r2, r1
   38038:	ldr	r2, [sp, #216]	; 0xd8
   3803a:	adds.w	r3, r3, fp
   3803e:	adc.w	ip, ip, r2
   38042:	ldr	r2, [sp, #212]	; 0xd4
   38044:	eor.w	r7, ip, r2
   38048:	ldr	r2, [sp, #208]	; 0xd0
   3804a:	eor.w	r1, r3, r2
   3804e:	ldr	r2, [sp, #192]	; 0xc0
   38050:	adds	r2, r2, r7
   38052:	adc.w	r5, r0, r1
   38056:	ldr	r0, [sp, #216]	; 0xd8
   38058:	eor.w	fp, r2, fp
   3805c:	eors	r0, r5
   3805e:	mov.w	r4, fp, lsr #24
   38062:	orr.w	r8, r4, r0, lsl #8
   38066:	lsrs	r0, r0, #24
   38068:	orr.w	r6, r0, fp, lsl #8
   3806c:	ldr	r0, [sp, #36]	; 0x24
   3806e:	ldr	r4, [sp, #264]	; 0x108
   38070:	adds	r3, r0, r3
   38072:	ldr	r0, [sp, #40]	; 0x28
   38074:	adc.w	ip, r0, ip
   38078:	adds.w	r3, r3, r8
   3807c:	str	r3, [sp, #160]	; 0xa0
   3807e:	adc.w	r3, ip, r6
   38082:	str	r3, [sp, #164]	; 0xa4
   38084:	ldr	r3, [sp, #160]	; 0xa0
   38086:	ldr	r0, [sp, #148]	; 0x94
   38088:	eors	r7, r3
   3808a:	ldr	r3, [sp, #164]	; 0xa4
   3808c:	eors	r1, r3
   3808e:	lsrs	r3, r7, #16
   38090:	orr.w	r3, r3, r1, lsl #16
   38094:	lsrs	r1, r1, #16
   38096:	str	r3, [sp, #208]	; 0xd0
   38098:	orr.w	r3, r1, r7, lsl #16
   3809c:	str	r3, [sp, #212]	; 0xd4
   3809e:	ldr	r3, [sp, #208]	; 0xd0
   380a0:	ldr	r1, [sp, #144]	; 0x90
   380a2:	adds	r2, r2, r3
   380a4:	ldr	r3, [sp, #212]	; 0xd4
   380a6:	eor.w	r8, r2, r8
   380aa:	adc.w	r5, r3, r5
   380ae:	eors	r6, r5
   380b0:	lsls	r3, r6, #1
   380b2:	orr.w	r3, r3, r8, lsr #31
   380b6:	mov.w	r8, r8, lsl #1
   380ba:	str	r3, [sp, #256]	; 0x100
   380bc:	orr.w	r3, r8, r6, lsr #31
   380c0:	str	r3, [sp, #216]	; 0xd8
   380c2:	ldr	r3, [sp, #84]	; 0x54
   380c4:	adds	r1, r3, r1
   380c6:	ldr	r3, [sp, #88]	; 0x58
   380c8:	adc.w	sl, r3, r0
   380cc:	ldr	r3, [sp, #264]	; 0x108
   380ce:	ldr	r0, [sp, #204]	; 0xcc
   380d0:	adds	r1, r1, r3
   380d2:	ldr	r3, [sp, #268]	; 0x10c
   380d4:	adc.w	sl, sl, r3
   380d8:	ldr	r3, [sp, #236]	; 0xec
   380da:	eor.w	lr, sl, r3
   380de:	ldr	r3, [sp, #232]	; 0xe8
   380e0:	eor.w	r7, r1, r3
   380e4:	ldr	r3, [sp, #200]	; 0xc8
   380e6:	adds.w	r3, r3, lr
   380ea:	eor.w	r6, r3, r4
   380ee:	ldr	r4, [sp, #268]	; 0x10c
   380f0:	adcs	r0, r7
   380f2:	eor.w	ip, r0, r4
   380f6:	mov.w	fp, r6, lsr #24
   380fa:	orr.w	r4, fp, ip, lsl #8
   380fe:	mov.w	ip, ip, lsr #24
   38102:	orr.w	r8, ip, r6, lsl #8
   38106:	ldr	r6, [sp, #44]	; 0x2c
   38108:	adds	r1, r6, r1
   3810a:	ldr	r6, [sp, #48]	; 0x30
   3810c:	adc.w	sl, r6, sl
   38110:	adds	r1, r1, r4
   38112:	str	r1, [sp, #144]	; 0x90
   38114:	adc.w	r1, sl, r8
   38118:	str	r1, [sp, #148]	; 0x94
   3811a:	ldr	r1, [sp, #144]	; 0x90
   3811c:	eor.w	lr, r1, lr
   38120:	ldr	r1, [sp, #148]	; 0x94
   38122:	eors	r7, r1
   38124:	mov.w	r1, lr, lsr #16
   38128:	orr.w	r1, r1, r7, lsl #16
   3812c:	lsrs	r7, r7, #16
   3812e:	str	r1, [sp, #232]	; 0xe8
   38130:	orr.w	r1, r7, lr, lsl #16
   38134:	str	r1, [sp, #236]	; 0xec
   38136:	ldr	r1, [sp, #232]	; 0xe8
   38138:	ldr	r7, [sp, #156]	; 0x9c
   3813a:	adds	r3, r3, r1
   3813c:	ldr	r1, [sp, #236]	; 0xec
   3813e:	eor.w	r4, r4, r3
   38142:	adc.w	r0, r1, r0
   38146:	eor.w	r8, r0, r8
   3814a:	mov.w	r1, r8, lsl #1
   3814e:	orr.w	r6, r1, r4, lsr #31
   38152:	lsls	r4, r4, #1
   38154:	orr.w	fp, r4, r8, lsr #31
   38158:	ldr	r1, [sp, #84]	; 0x54
   3815a:	ldr	r4, [sp, #152]	; 0x98
   3815c:	adds	r1, r1, r4
   3815e:	ldr	r4, [sp, #88]	; 0x58
   38160:	adc.w	sl, r4, r7
   38164:	adds.w	r1, r1, fp
   38168:	ldr	r4, [sp, #228]	; 0xe4
   3816a:	adc.w	sl, sl, r6
   3816e:	eor.w	lr, sl, r9
   38172:	adds.w	r2, r2, lr
   38176:	eor.w	r7, r1, r4
   3817a:	adc.w	r5, r7, r5
   3817e:	eor.w	fp, r2, fp
   38182:	eor.w	ip, r5, r6
   38186:	mov.w	r4, fp, lsr #24
   3818a:	orr.w	r6, r4, ip, lsl #8
   3818e:	ldr	r4, [sp, #20]
   38190:	mov.w	ip, ip, lsr #24
   38194:	adds	r1, r4, r1
   38196:	ldr	r4, [sp, #24]
   38198:	orr.w	r8, ip, fp, lsl #8
   3819c:	adc.w	sl, r4, sl
   381a0:	adds	r1, r1, r6
   381a2:	str	r1, [sp, #152]	; 0x98
   381a4:	adc.w	r1, sl, r8
   381a8:	str	r1, [sp, #156]	; 0x9c
   381aa:	ldr	r1, [sp, #152]	; 0x98
   381ac:	eor.w	lr, r1, lr
   381b0:	ldr	r1, [sp, #156]	; 0x9c
   381b2:	eors	r7, r1
   381b4:	mov.w	r1, lr, lsr #16
   381b8:	orr.w	r1, r1, r7, lsl #16
   381bc:	lsrs	r7, r7, #16
   381be:	str	r1, [sp, #228]	; 0xe4
   381c0:	orr.w	r1, r7, lr, lsl #16
   381c4:	str	r1, [sp, #260]	; 0x104
   381c6:	ldr	r1, [sp, #228]	; 0xe4
   381c8:	adds	r2, r2, r1
   381ca:	str	r2, [sp, #192]	; 0xc0
   381cc:	ldr	r2, [sp, #260]	; 0x104
   381ce:	ldr	r1, [sp, #168]	; 0xa8
   381d0:	adc.w	r2, r5, r2
   381d4:	str	r2, [sp, #196]	; 0xc4
   381d6:	ldr	r2, [sp, #192]	; 0xc0
   381d8:	eors	r6, r2
   381da:	ldr	r2, [sp, #196]	; 0xc4
   381dc:	eor.w	r8, r2, r8
   381e0:	mov.w	r2, r8, lsl #1
   381e4:	orr.w	r2, r2, r6, lsr #31
   381e8:	lsls	r6, r6, #1
   381ea:	str	r2, [sp, #268]	; 0x10c
   381ec:	orr.w	r2, r6, r8, lsr #31
   381f0:	str	r2, [sp, #264]	; 0x108
   381f2:	ldr	r2, [sp, #68]	; 0x44
   381f4:	adds	r2, r2, r1
   381f6:	ldr	r1, [sp, #72]	; 0x48
   381f8:	ldr	r4, [sp, #172]	; 0xac
   381fa:	ldr	r5, [sp, #252]	; 0xfc
   381fc:	adc.w	r7, r1, r4
   38200:	ldr	r1, [sp, #244]	; 0xf4
   38202:	ldr	r4, [sp, #244]	; 0xf4
   38204:	adds	r2, r2, r1
   38206:	ldr	r1, [sp, #252]	; 0xfc
   38208:	adc.w	r7, r1, r7
   3820c:	ldr	r1, [sp, #212]	; 0xd4
   3820e:	eor.w	r6, r7, r1
   38212:	ldr	r1, [sp, #208]	; 0xd0
   38214:	adds	r3, r3, r6
   38216:	eor.w	r1, r2, r1
   3821a:	eor.w	r4, r3, r4
   3821e:	adc.w	r0, r1, r0
   38222:	eors	r5, r0
   38224:	mov.w	r8, r4, lsr #24
   38228:	orr.w	ip, r8, r5, lsl #8
   3822c:	lsrs	r5, r5, #24
   3822e:	orr.w	lr, r5, r4, lsl #8
   38232:	ldr	r4, [sp, #36]	; 0x24
   38234:	adds	r2, r4, r2
   38236:	ldr	r4, [sp, #40]	; 0x28
   38238:	adc.w	r7, r4, r7
   3823c:	adds.w	r2, r2, ip
   38240:	str	r2, [sp, #168]	; 0xa8
   38242:	adc.w	r2, r7, lr
   38246:	str	r2, [sp, #172]	; 0xac
   38248:	ldr	r2, [sp, #168]	; 0xa8
   3824a:	eors	r6, r2
   3824c:	ldr	r2, [sp, #172]	; 0xac
   3824e:	eors	r1, r2
   38250:	lsrs	r2, r6, #16
   38252:	orr.w	r2, r2, r1, lsl #16
   38256:	lsrs	r1, r1, #16
   38258:	str	r2, [sp, #208]	; 0xd0
   3825a:	orr.w	r2, r1, r6, lsl #16
   3825e:	str	r2, [sp, #212]	; 0xd4
   38260:	ldr	r2, [sp, #208]	; 0xd0
   38262:	ldr	r1, [sp, #164]	; 0xa4
   38264:	adds	r3, r3, r2
   38266:	str	r3, [sp, #200]	; 0xc8
   38268:	ldr	r3, [sp, #212]	; 0xd4
   3826a:	adc.w	r3, r0, r3
   3826e:	str	r3, [sp, #204]	; 0xcc
   38270:	ldr	r2, [sp, #204]	; 0xcc
   38272:	ldr	r3, [sp, #200]	; 0xc8
   38274:	eor.w	lr, r2, lr
   38278:	eor.w	r3, r3, ip
   3827c:	mov.w	r2, lr, lsl #1
   38280:	orr.w	r2, r2, r3, lsr #31
   38284:	mov.w	ip, r3, lsl #1
   38288:	str	r2, [sp, #244]	; 0xf4
   3828a:	orr.w	ip, ip, lr, lsr #31
   3828e:	ldr	r2, [sp, #160]	; 0xa0
   38290:	ldr	r3, [sp, #60]	; 0x3c
   38292:	adds	r3, r3, r2
   38294:	ldr	r2, [sp, #64]	; 0x40
   38296:	adc.w	lr, r2, r1
   3829a:	ldr	r2, [sp, #240]	; 0xf0
   3829c:	adds	r3, r3, r2
   3829e:	ldr	r2, [sp, #248]	; 0xf8
   382a0:	adc.w	lr, lr, r2
   382a4:	ldr	r2, [sp, #236]	; 0xec
   382a6:	eor.w	r6, lr, r2
   382aa:	ldr	r2, [sp, #232]	; 0xe8
   382ac:	eor.w	r0, r3, r2
   382b0:	ldr	r2, [sp, #176]	; 0xb0
   382b2:	ldr	r1, [sp, #180]	; 0xb4
   382b4:	adds	r2, r2, r6
   382b6:	adc.w	r5, r1, r0
   382ba:	ldr	r1, [sp, #240]	; 0xf0
   382bc:	eor.w	r8, r2, r1
   382c0:	ldr	r1, [sp, #248]	; 0xf8
   382c2:	eor.w	r4, r5, r1
   382c6:	mov.w	r9, r8, lsr #24
   382ca:	orr.w	r1, r9, r4, lsl #8
   382ce:	lsrs	r4, r4, #24
   382d0:	orr.w	r7, r4, r8, lsl #8
   382d4:	ldr	r4, [sp, #52]	; 0x34
   382d6:	adds	r3, r4, r3
   382d8:	ldr	r4, [sp, #56]	; 0x38
   382da:	adc.w	lr, r4, lr
   382de:	adds	r3, r3, r1
   382e0:	str	r3, [sp, #160]	; 0xa0
   382e2:	adc.w	r3, lr, r7
   382e6:	str	r3, [sp, #164]	; 0xa4
   382e8:	ldr	r3, [sp, #160]	; 0xa0
   382ea:	ldr	r4, [sp, #216]	; 0xd8
   382ec:	eors	r6, r3
   382ee:	ldr	r3, [sp, #164]	; 0xa4
   382f0:	eors	r0, r3
   382f2:	lsrs	r3, r6, #16
   382f4:	orr.w	r3, r3, r0, lsl #16
   382f8:	lsrs	r0, r0, #16
   382fa:	str	r3, [sp, #232]	; 0xe8
   382fc:	orr.w	r3, r0, r6, lsl #16
   38300:	str	r3, [sp, #236]	; 0xec
   38302:	ldr	r3, [sp, #232]	; 0xe8
   38304:	ldr	r0, [sp, #148]	; 0x94
   38306:	adds	r2, r2, r3
   38308:	ldr	r3, [sp, #236]	; 0xec
   3830a:	eor.w	r1, r1, r2
   3830e:	adc.w	r5, r3, r5
   38312:	eors	r7, r5
   38314:	lsls	r3, r7, #1
   38316:	orr.w	r3, r3, r1, lsr #31
   3831a:	lsls	r1, r1, #1
   3831c:	str	r3, [sp, #248]	; 0xf8
   3831e:	orr.w	r3, r1, r7, lsr #31
   38322:	ldr	r1, [sp, #144]	; 0x90
   38324:	str	r3, [sp, #240]	; 0xf0
   38326:	ldr	r3, [sp, #12]
   38328:	adds	r1, r3, r1
   3832a:	ldr	r3, [sp, #16]
   3832c:	adc.w	sl, r3, r0
   38330:	ldr	r3, [sp, #216]	; 0xd8
   38332:	ldr	r0, [sp, #188]	; 0xbc
   38334:	adds	r1, r1, r3
   38336:	ldr	r3, [sp, #256]	; 0x100
   38338:	adc.w	sl, sl, r3
   3833c:	ldr	r3, [sp, #224]	; 0xe0
   3833e:	eor.w	lr, sl, r3
   38342:	ldr	r3, [sp, #220]	; 0xdc
   38344:	eor.w	r6, r1, r3
   38348:	ldr	r3, [sp, #184]	; 0xb8
   3834a:	adds.w	r3, r3, lr
   3834e:	eor.w	r8, r3, r4
   38352:	ldr	r4, [sp, #256]	; 0x100
   38354:	adcs	r0, r6
   38356:	eor.w	r7, r0, r4
   3835a:	mov.w	fp, r8, lsr #24
   3835e:	orr.w	r4, fp, r7, lsl #8
   38362:	lsrs	r7, r7, #24
   38364:	orr.w	r9, r7, r8, lsl #8
   38368:	ldr	r7, [sp, #44]	; 0x2c
   3836a:	adds	r1, r7, r1
   3836c:	ldr	r7, [sp, #48]	; 0x30
   3836e:	adc.w	sl, r7, sl
   38372:	adds	r1, r1, r4
   38374:	str	r1, [sp, #144]	; 0x90
   38376:	adc.w	r1, sl, r9
   3837a:	str	r1, [sp, #148]	; 0x94
   3837c:	ldr	r1, [sp, #144]	; 0x90
   3837e:	eor.w	lr, r1, lr
   38382:	ldr	r1, [sp, #148]	; 0x94
   38384:	eors	r6, r1
   38386:	mov.w	r1, lr, lsr #16
   3838a:	orr.w	r8, r1, r6, lsl #16
   3838e:	lsrs	r6, r6, #16
   38390:	adds.w	r3, r3, r8
   38394:	orr.w	sl, r6, lr, lsl #16
   38398:	adc.w	r0, r0, sl
   3839c:	eors	r4, r3
   3839e:	eor.w	r9, r0, r9
   383a2:	ldr	r6, [sp, #156]	; 0x9c
   383a4:	mov.w	r1, r9, lsl #1
   383a8:	orr.w	r1, r1, r4, lsr #31
   383ac:	lsls	r4, r4, #1
   383ae:	orr.w	fp, r4, r9, lsr #31
   383b2:	str	r1, [sp, #216]	; 0xd8
   383b4:	ldr	r4, [sp, #152]	; 0x98
   383b6:	ldr	r1, [sp, #124]	; 0x7c
   383b8:	adds	r1, r1, r4
   383ba:	ldr	r4, [sp, #128]	; 0x80
   383bc:	adc.w	r9, r4, r6
   383c0:	ldr	r4, [sp, #244]	; 0xf4
   383c2:	adds.w	r1, r1, ip
   383c6:	adc.w	r9, r9, r4
   383ca:	eor.w	r7, r1, r8
   383ce:	eor.w	lr, r9, sl
   383d2:	adds.w	r2, r2, lr
   383d6:	adc.w	r5, r7, r5
   383da:	eor.w	ip, r2, ip
   383de:	eor.w	r6, r5, r4
   383e2:	mov.w	sl, ip, lsr #24
   383e6:	orr.w	r4, sl, r6, lsl #8
   383ea:	lsrs	r6, r6, #24
   383ec:	orr.w	r8, r6, ip, lsl #8
   383f0:	ldr	r6, [sp, #92]	; 0x5c
   383f2:	adds	r1, r6, r1
   383f4:	ldr	r6, [sp, #96]	; 0x60
   383f6:	adc.w	r9, r6, r9
   383fa:	adds	r1, r1, r4
   383fc:	str	r1, [sp, #152]	; 0x98
   383fe:	adc.w	r1, r9, r8
   38402:	str	r1, [sp, #156]	; 0x9c
   38404:	ldr	r1, [sp, #152]	; 0x98
   38406:	eor.w	lr, r1, lr
   3840a:	ldr	r1, [sp, #156]	; 0x9c
   3840c:	eors	r7, r1
   3840e:	mov.w	r1, lr, lsr #16
   38412:	orr.w	r1, r1, r7, lsl #16
   38416:	lsrs	r7, r7, #16
   38418:	str	r1, [sp, #220]	; 0xdc
   3841a:	orr.w	r1, r7, lr, lsl #16
   3841e:	str	r1, [sp, #224]	; 0xe0
   38420:	ldr	r1, [sp, #220]	; 0xdc
   38422:	adds	r2, r2, r1
   38424:	str	r2, [sp, #176]	; 0xb0
   38426:	ldr	r2, [sp, #224]	; 0xe0
   38428:	ldr	r1, [sp, #168]	; 0xa8
   3842a:	adc.w	r2, r5, r2
   3842e:	str	r2, [sp, #180]	; 0xb4
   38430:	ldr	r2, [sp, #176]	; 0xb0
   38432:	eors	r4, r2
   38434:	ldr	r2, [sp, #180]	; 0xb4
   38436:	eor.w	r8, r2, r8
   3843a:	mov.w	r2, r8, lsl #1
   3843e:	orr.w	r2, r2, r4, lsr #31
   38442:	lsls	r4, r4, #1
   38444:	str	r2, [sp, #252]	; 0xfc
   38446:	orr.w	r2, r4, r8, lsr #31
   3844a:	str	r2, [sp, #244]	; 0xf4
   3844c:	ldr	r2, [sp, #76]	; 0x4c
   3844e:	ldr	r4, [sp, #172]	; 0xac
   38450:	adds	r2, r2, r1
   38452:	ldr	r1, [sp, #80]	; 0x50
   38454:	adc.w	r7, r1, r4
   38458:	ldr	r1, [sp, #240]	; 0xf0
   3845a:	adds	r2, r2, r1
   3845c:	ldr	r1, [sp, #248]	; 0xf8
   3845e:	adc.w	r7, r1, r7
   38462:	ldr	r1, [sp, #260]	; 0x104
   38464:	eor.w	r4, r7, r1
   38468:	ldr	r1, [sp, #228]	; 0xe4
   3846a:	adds	r3, r3, r4
   3846c:	eor.w	r9, r2, r1
   38470:	ldr	r1, [sp, #240]	; 0xf0
   38472:	adc.w	r0, r0, r9
   38476:	eor.w	ip, r3, r1
   3847a:	ldr	r1, [sp, #248]	; 0xf8
   3847c:	eor.w	r5, r0, r1
   38480:	mov.w	lr, ip, lsr #24
   38484:	orr.w	r1, lr, r5, lsl #8
   38488:	lsrs	r5, r5, #24
   3848a:	orr.w	r6, r5, ip, lsl #8
   3848e:	ldr	r5, [sp, #116]	; 0x74
   38490:	adds	r2, r5, r2
   38492:	ldr	r5, [sp, #120]	; 0x78
   38494:	adc.w	r7, r5, r7
   38498:	adds	r2, r2, r1
   3849a:	str	r2, [sp, #168]	; 0xa8
   3849c:	adc.w	r2, r7, r6
   384a0:	str	r2, [sp, #172]	; 0xac
   384a2:	ldr	r2, [sp, #168]	; 0xa8
   384a4:	eors	r4, r2
   384a6:	ldr	r2, [sp, #172]	; 0xac
   384a8:	eor.w	r2, r2, r9
   384ac:	lsrs	r5, r4, #16
   384ae:	orr.w	r5, r5, r2, lsl #16
   384b2:	mov.w	r9, r2, lsr #16
   384b6:	orr.w	r9, r9, r4, lsl #16
   384ba:	adds	r3, r3, r5
   384bc:	str	r3, [sp, #184]	; 0xb8
   384be:	adc.w	r3, r0, r9
   384c2:	str	r3, [sp, #188]	; 0xbc
   384c4:	ldr	r3, [sp, #184]	; 0xb8
   384c6:	ldr	r2, [sp, #160]	; 0xa0
   384c8:	eors	r1, r3
   384ca:	ldr	r3, [sp, #188]	; 0xbc
   384cc:	ldr	r0, [sp, #196]	; 0xc4
   384ce:	eors	r6, r3
   384d0:	str	r5, [sp, #228]	; 0xe4
   384d2:	lsls	r3, r6, #1
   384d4:	orr.w	r3, r3, r1, lsr #31
   384d8:	lsls	r1, r1, #1
   384da:	str	r3, [sp, #248]	; 0xf8
   384dc:	orr.w	r3, r1, r6, lsr #31
   384e0:	str	r3, [sp, #240]	; 0xf0
   384e2:	ldr	r3, [sp, #28]
   384e4:	ldr	r1, [sp, #164]	; 0xa4
   384e6:	adds	r3, r3, r2
   384e8:	ldr	r2, [sp, #32]
   384ea:	adc.w	ip, r2, r1
   384ee:	ldr	r2, [sp, #216]	; 0xd8
   384f0:	adds.w	r3, r3, fp
   384f4:	adc.w	ip, ip, r2
   384f8:	ldr	r2, [sp, #212]	; 0xd4
   384fa:	eor.w	r7, ip, r2
   384fe:	ldr	r2, [sp, #208]	; 0xd0
   38500:	eor.w	r1, r3, r2
   38504:	ldr	r2, [sp, #192]	; 0xc0
   38506:	adds	r2, r2, r7
   38508:	adc.w	r5, r0, r1
   3850c:	ldr	r0, [sp, #216]	; 0xd8
   3850e:	eor.w	fp, r2, fp
   38512:	eors	r0, r5
   38514:	mov.w	r4, fp, lsr #24
   38518:	orr.w	r8, r4, r0, lsl #8
   3851c:	lsrs	r0, r0, #24
   3851e:	orr.w	r6, r0, fp, lsl #8
   38522:	ldr	r0, [sp, #100]	; 0x64
   38524:	adds	r3, r0, r3
   38526:	ldr	r0, [sp, #104]	; 0x68
   38528:	adc.w	ip, r0, ip
   3852c:	adds.w	r3, r3, r8
   38530:	str	r3, [sp, #160]	; 0xa0
   38532:	adc.w	r3, ip, r6
   38536:	str	r3, [sp, #164]	; 0xa4
   38538:	ldr	r3, [sp, #160]	; 0xa0
   3853a:	eors	r7, r3
   3853c:	ldr	r3, [sp, #164]	; 0xa4
   3853e:	eors	r1, r3
   38540:	lsrs	r3, r7, #16
   38542:	orr.w	r3, r3, r1, lsl #16
   38546:	lsrs	r1, r1, #16
   38548:	str	r3, [sp, #208]	; 0xd0
   3854a:	orr.w	r3, r1, r7, lsl #16
   3854e:	str	r3, [sp, #212]	; 0xd4
   38550:	ldr	r3, [sp, #208]	; 0xd0
   38552:	ldr	r1, [sp, #144]	; 0x90
   38554:	adds	r2, r2, r3
   38556:	ldr	r3, [sp, #212]	; 0xd4
   38558:	eor.w	r8, r2, r8
   3855c:	ldr	r0, [sp, #148]	; 0x94
   3855e:	adc.w	r5, r3, r5
   38562:	ldr	r4, [sp, #264]	; 0x108
   38564:	eors	r6, r5
   38566:	lsls	r3, r6, #1
   38568:	orr.w	r3, r3, r8, lsr #31
   3856c:	mov.w	r8, r8, lsl #1
   38570:	str	r3, [sp, #256]	; 0x100
   38572:	orr.w	r3, r8, r6, lsr #31
   38576:	str	r3, [sp, #216]	; 0xd8
   38578:	ldr	r3, [sp, #108]	; 0x6c
   3857a:	adds	r1, r3, r1
   3857c:	ldr	r3, [sp, #112]	; 0x70
   3857e:	adc.w	sl, r3, r0
   38582:	ldr	r3, [sp, #264]	; 0x108
   38584:	ldr	r0, [sp, #204]	; 0xcc
   38586:	adds	r1, r1, r3
   38588:	ldr	r3, [sp, #268]	; 0x10c
   3858a:	adc.w	sl, sl, r3
   3858e:	ldr	r3, [sp, #236]	; 0xec
   38590:	eor.w	lr, sl, r3
   38594:	ldr	r3, [sp, #232]	; 0xe8
   38596:	eor.w	r7, r1, r3
   3859a:	ldr	r3, [sp, #200]	; 0xc8
   3859c:	adds.w	r3, r3, lr
   385a0:	eor.w	r6, r3, r4
   385a4:	ldr	r4, [sp, #268]	; 0x10c
   385a6:	adcs	r0, r7
   385a8:	eor.w	ip, r0, r4
   385ac:	mov.w	fp, r6, lsr #24
   385b0:	orr.w	r4, fp, ip, lsl #8
   385b4:	mov.w	ip, ip, lsr #24
   385b8:	orr.w	r8, ip, r6, lsl #8
   385bc:	ldr	r6, [sp, #4]
   385be:	adds	r1, r6, r1
   385c0:	ldr	r6, [sp, #8]
   385c2:	adc.w	sl, r6, sl
   385c6:	adds	r1, r1, r4
   385c8:	str	r1, [sp, #144]	; 0x90
   385ca:	adc.w	r1, sl, r8
   385ce:	str	r1, [sp, #148]	; 0x94
   385d0:	ldr	r1, [sp, #144]	; 0x90
   385d2:	eor.w	lr, r1, lr
   385d6:	ldr	r1, [sp, #148]	; 0x94
   385d8:	eors	r7, r1
   385da:	mov.w	r1, lr, lsr #16
   385de:	orr.w	r1, r1, r7, lsl #16
   385e2:	lsrs	r7, r7, #16
   385e4:	str	r1, [sp, #232]	; 0xe8
   385e6:	orr.w	r1, r7, lr, lsl #16
   385ea:	str	r1, [sp, #236]	; 0xec
   385ec:	ldr	r1, [sp, #232]	; 0xe8
   385ee:	ldr	r7, [sp, #156]	; 0x9c
   385f0:	adds	r3, r3, r1
   385f2:	ldr	r1, [sp, #236]	; 0xec
   385f4:	eor.w	r4, r4, r3
   385f8:	adc.w	r0, r1, r0
   385fc:	eor.w	r8, r0, r8
   38600:	mov.w	r1, r8, lsl #1
   38604:	orr.w	r6, r1, r4, lsr #31
   38608:	lsls	r4, r4, #1
   3860a:	orr.w	fp, r4, r8, lsr #31
   3860e:	ldr	r1, [sp, #4]
   38610:	ldr	r4, [sp, #152]	; 0x98
   38612:	adds	r1, r1, r4
   38614:	ldr	r4, [sp, #8]
   38616:	adc.w	sl, r4, r7
   3861a:	adds.w	r1, r1, fp
   3861e:	adc.w	sl, sl, r6
   38622:	ldr	r4, [sp, #228]	; 0xe4
   38624:	eor.w	lr, sl, r9
   38628:	adds.w	r2, r2, lr
   3862c:	eor.w	r7, r1, r4
   38630:	adc.w	r5, r7, r5
   38634:	eor.w	fp, r2, fp
   38638:	eor.w	ip, r5, r6
   3863c:	mov.w	r4, fp, lsr #24
   38640:	orr.w	r6, r4, ip, lsl #8
   38644:	ldr	r4, [sp, #12]
   38646:	mov.w	ip, ip, lsr #24
   3864a:	adds	r1, r4, r1
   3864c:	ldr	r4, [sp, #16]
   3864e:	orr.w	r8, ip, fp, lsl #8
   38652:	adc.w	sl, r4, sl
   38656:	adds	r1, r1, r6
   38658:	str	r1, [sp, #152]	; 0x98
   3865a:	adc.w	r1, sl, r8
   3865e:	str	r1, [sp, #156]	; 0x9c
   38660:	ldr	r1, [sp, #152]	; 0x98
   38662:	ldr	r4, [sp, #172]	; 0xac
   38664:	eor.w	lr, r1, lr
   38668:	ldr	r1, [sp, #156]	; 0x9c
   3866a:	eors	r7, r1
   3866c:	mov.w	r1, lr, lsr #16
   38670:	orr.w	r1, r1, r7, lsl #16
   38674:	lsrs	r7, r7, #16
   38676:	str	r1, [sp, #228]	; 0xe4
   38678:	orr.w	r1, r7, lr, lsl #16
   3867c:	str	r1, [sp, #260]	; 0x104
   3867e:	ldr	r1, [sp, #228]	; 0xe4
   38680:	adds	r2, r2, r1
   38682:	str	r2, [sp, #192]	; 0xc0
   38684:	ldr	r2, [sp, #260]	; 0x104
   38686:	ldr	r1, [sp, #168]	; 0xa8
   38688:	adc.w	r2, r5, r2
   3868c:	str	r2, [sp, #196]	; 0xc4
   3868e:	ldr	r2, [sp, #192]	; 0xc0
   38690:	ldr	r5, [sp, #252]	; 0xfc
   38692:	eors	r6, r2
   38694:	ldr	r2, [sp, #196]	; 0xc4
   38696:	eor.w	r8, r2, r8
   3869a:	mov.w	r2, r8, lsl #1
   3869e:	orr.w	r2, r2, r6, lsr #31
   386a2:	lsls	r6, r6, #1
   386a4:	str	r2, [sp, #268]	; 0x10c
   386a6:	orr.w	r2, r6, r8, lsr #31
   386aa:	str	r2, [sp, #264]	; 0x108
   386ac:	ldr	r2, [sp, #20]
   386ae:	adds	r2, r2, r1
   386b0:	ldr	r1, [sp, #24]
   386b2:	adc.w	r7, r1, r4
   386b6:	ldr	r1, [sp, #244]	; 0xf4
   386b8:	ldr	r4, [sp, #244]	; 0xf4
   386ba:	adds	r2, r2, r1
   386bc:	ldr	r1, [sp, #252]	; 0xfc
   386be:	adc.w	r7, r1, r7
   386c2:	ldr	r1, [sp, #212]	; 0xd4
   386c4:	eor.w	r6, r7, r1
   386c8:	ldr	r1, [sp, #208]	; 0xd0
   386ca:	adds	r3, r3, r6
   386cc:	eor.w	r1, r2, r1
   386d0:	eor.w	r4, r3, r4
   386d4:	adc.w	r0, r1, r0
   386d8:	eors	r5, r0
   386da:	mov.w	r8, r4, lsr #24
   386de:	orr.w	ip, r8, r5, lsl #8
   386e2:	lsrs	r5, r5, #24
   386e4:	orr.w	lr, r5, r4, lsl #8
   386e8:	ldr	r4, [sp, #28]
   386ea:	adds	r2, r4, r2
   386ec:	ldr	r4, [sp, #32]
   386ee:	adc.w	r7, r4, r7
   386f2:	adds.w	r2, r2, ip
   386f6:	str	r2, [sp, #168]	; 0xa8
   386f8:	adc.w	r2, r7, lr
   386fc:	str	r2, [sp, #172]	; 0xac
   386fe:	ldr	r2, [sp, #168]	; 0xa8
   38700:	eors	r6, r2
   38702:	ldr	r2, [sp, #172]	; 0xac
   38704:	eors	r1, r2
   38706:	lsrs	r2, r6, #16
   38708:	orr.w	r2, r2, r1, lsl #16
   3870c:	lsrs	r1, r1, #16
   3870e:	str	r2, [sp, #208]	; 0xd0
   38710:	orr.w	r2, r1, r6, lsl #16
   38714:	str	r2, [sp, #212]	; 0xd4
   38716:	ldr	r2, [sp, #208]	; 0xd0
   38718:	ldr	r1, [sp, #164]	; 0xa4
   3871a:	adds	r3, r3, r2
   3871c:	str	r3, [sp, #200]	; 0xc8
   3871e:	ldr	r3, [sp, #212]	; 0xd4
   38720:	adc.w	r3, r0, r3
   38724:	str	r3, [sp, #204]	; 0xcc
   38726:	ldr	r2, [sp, #204]	; 0xcc
   38728:	ldr	r3, [sp, #200]	; 0xc8
   3872a:	eor.w	lr, r2, lr
   3872e:	eor.w	r3, r3, ip
   38732:	mov.w	r2, lr, lsl #1
   38736:	orr.w	r2, r2, r3, lsr #31
   3873a:	mov.w	ip, r3, lsl #1
   3873e:	str	r2, [sp, #244]	; 0xf4
   38740:	orr.w	ip, ip, lr, lsr #31
   38744:	ldr	r2, [sp, #160]	; 0xa0
   38746:	ldr	r3, [sp, #36]	; 0x24
   38748:	adds	r3, r3, r2
   3874a:	ldr	r2, [sp, #40]	; 0x28
   3874c:	adc.w	lr, r2, r1
   38750:	ldr	r2, [sp, #240]	; 0xf0
   38752:	ldr	r1, [sp, #180]	; 0xb4
   38754:	adds	r3, r3, r2
   38756:	ldr	r2, [sp, #248]	; 0xf8
   38758:	adc.w	lr, lr, r2
   3875c:	ldr	r2, [sp, #236]	; 0xec
   3875e:	eor.w	r6, lr, r2
   38762:	ldr	r2, [sp, #232]	; 0xe8
   38764:	eor.w	r0, r3, r2
   38768:	ldr	r2, [sp, #176]	; 0xb0
   3876a:	adds	r2, r2, r6
   3876c:	adc.w	r5, r1, r0
   38770:	ldr	r1, [sp, #240]	; 0xf0
   38772:	eor.w	r8, r2, r1
   38776:	ldr	r1, [sp, #248]	; 0xf8
   38778:	eor.w	r4, r5, r1
   3877c:	mov.w	r9, r8, lsr #24
   38780:	orr.w	r1, r9, r4, lsl #8
   38784:	lsrs	r4, r4, #24
   38786:	orr.w	r7, r4, r8, lsl #8
   3878a:	ldr	r4, [sp, #44]	; 0x2c
   3878c:	adds	r3, r4, r3
   3878e:	ldr	r4, [sp, #48]	; 0x30
   38790:	adc.w	lr, r4, lr
   38794:	adds	r3, r3, r1
   38796:	str	r3, [sp, #160]	; 0xa0
   38798:	adc.w	r3, lr, r7
   3879c:	str	r3, [sp, #164]	; 0xa4
   3879e:	ldr	r3, [sp, #160]	; 0xa0
   387a0:	eors	r6, r3
   387a2:	ldr	r3, [sp, #164]	; 0xa4
   387a4:	eors	r0, r3
   387a6:	lsrs	r3, r6, #16
   387a8:	orr.w	r3, r3, r0, lsl #16
   387ac:	lsrs	r0, r0, #16
   387ae:	str	r3, [sp, #232]	; 0xe8
   387b0:	orr.w	r3, r0, r6, lsl #16
   387b4:	str	r3, [sp, #236]	; 0xec
   387b6:	ldr	r3, [sp, #232]	; 0xe8
   387b8:	adds	r2, r2, r3
   387ba:	ldr	r3, [sp, #236]	; 0xec
   387bc:	eor.w	r1, r1, r2
   387c0:	adc.w	r5, r3, r5
   387c4:	eors	r7, r5
   387c6:	lsls	r3, r7, #1
   387c8:	orr.w	r3, r3, r1, lsr #31
   387cc:	lsls	r1, r1, #1
   387ce:	str	r3, [sp, #248]	; 0xf8
   387d0:	orr.w	r3, r1, r7, lsr #31
   387d4:	str	r3, [sp, #240]	; 0xf0
   387d6:	ldr	r3, [sp, #52]	; 0x34
   387d8:	ldr	r1, [sp, #144]	; 0x90
   387da:	ldr	r0, [sp, #148]	; 0x94
   387dc:	adds	r1, r3, r1
   387de:	ldr	r3, [sp, #56]	; 0x38
   387e0:	ldr	r4, [sp, #216]	; 0xd8
   387e2:	adc.w	sl, r3, r0
   387e6:	ldr	r3, [sp, #216]	; 0xd8
   387e8:	ldr	r0, [sp, #188]	; 0xbc
   387ea:	adds	r1, r1, r3
   387ec:	ldr	r3, [sp, #256]	; 0x100
   387ee:	adc.w	sl, sl, r3
   387f2:	ldr	r3, [sp, #224]	; 0xe0
   387f4:	eor.w	lr, sl, r3
   387f8:	ldr	r3, [sp, #220]	; 0xdc
   387fa:	eor.w	r6, r1, r3
   387fe:	ldr	r3, [sp, #184]	; 0xb8
   38800:	adds.w	r3, r3, lr
   38804:	eor.w	r8, r3, r4
   38808:	ldr	r4, [sp, #256]	; 0x100
   3880a:	adcs	r0, r6
   3880c:	eor.w	r7, r0, r4
   38810:	mov.w	fp, r8, lsr #24
   38814:	orr.w	r4, fp, r7, lsl #8
   38818:	lsrs	r7, r7, #24
   3881a:	orr.w	r9, r7, r8, lsl #8
   3881e:	ldr	r7, [sp, #60]	; 0x3c
   38820:	adds	r1, r7, r1
   38822:	ldr	r7, [sp, #64]	; 0x40
   38824:	adc.w	sl, r7, sl
   38828:	adds	r1, r1, r4
   3882a:	str	r1, [sp, #144]	; 0x90
   3882c:	adc.w	r1, sl, r9
   38830:	str	r1, [sp, #148]	; 0x94
   38832:	ldr	r1, [sp, #144]	; 0x90
   38834:	eor.w	lr, r1, lr
   38838:	ldr	r1, [sp, #148]	; 0x94
   3883a:	eors	r6, r1
   3883c:	mov.w	r1, lr, lsr #16
   38840:	orr.w	r8, r1, r6, lsl #16
   38844:	lsrs	r6, r6, #16
   38846:	adds.w	r3, r3, r8
   3884a:	orr.w	sl, r6, lr, lsl #16
   3884e:	adc.w	r0, r0, sl
   38852:	eors	r4, r3
   38854:	eor.w	r9, r0, r9
   38858:	ldr	r6, [sp, #156]	; 0x9c
   3885a:	mov.w	r1, r9, lsl #1
   3885e:	orr.w	r1, r1, r4, lsr #31
   38862:	lsls	r4, r4, #1
   38864:	orr.w	fp, r4, r9, lsr #31
   38868:	str	r1, [sp, #216]	; 0xd8
   3886a:	ldr	r4, [sp, #152]	; 0x98
   3886c:	ldr	r1, [sp, #68]	; 0x44
   3886e:	adds	r1, r1, r4
   38870:	ldr	r4, [sp, #72]	; 0x48
   38872:	adc.w	r9, r4, r6
   38876:	ldr	r4, [sp, #244]	; 0xf4
   38878:	adds.w	r1, r1, ip
   3887c:	adc.w	r9, r9, r4
   38880:	eor.w	r7, r1, r8
   38884:	eor.w	lr, r9, sl
   38888:	adds.w	r2, r2, lr
   3888c:	adc.w	r5, r7, r5
   38890:	eor.w	ip, r2, ip
   38894:	eor.w	r6, r5, r4
   38898:	mov.w	sl, ip, lsr #24
   3889c:	orr.w	r4, sl, r6, lsl #8
   388a0:	lsrs	r6, r6, #24
   388a2:	orr.w	r8, r6, ip, lsl #8
   388a6:	ldr	r6, [sp, #76]	; 0x4c
   388a8:	adds	r1, r6, r1
   388aa:	ldr	r6, [sp, #80]	; 0x50
   388ac:	adc.w	r9, r6, r9
   388b0:	adds	r1, r1, r4
   388b2:	str	r1, [sp, #152]	; 0x98
   388b4:	adc.w	r1, r9, r8
   388b8:	str	r1, [sp, #156]	; 0x9c
   388ba:	ldr	r1, [sp, #152]	; 0x98
   388bc:	eor.w	lr, r1, lr
   388c0:	ldr	r1, [sp, #156]	; 0x9c
   388c2:	eors	r7, r1
   388c4:	mov.w	r1, lr, lsr #16
   388c8:	orr.w	r1, r1, r7, lsl #16
   388cc:	lsrs	r7, r7, #16
   388ce:	str	r1, [sp, #220]	; 0xdc
   388d0:	orr.w	r1, r7, lr, lsl #16
   388d4:	str	r1, [sp, #224]	; 0xe0
   388d6:	ldr	r1, [sp, #220]	; 0xdc
   388d8:	adds	r2, r2, r1
   388da:	str	r2, [sp, #176]	; 0xb0
   388dc:	ldr	r2, [sp, #224]	; 0xe0
   388de:	ldr	r1, [sp, #168]	; 0xa8
   388e0:	adc.w	r2, r5, r2
   388e4:	str	r2, [sp, #180]	; 0xb4
   388e6:	ldr	r2, [sp, #176]	; 0xb0
   388e8:	eors	r4, r2
   388ea:	ldr	r2, [sp, #180]	; 0xb4
   388ec:	eor.w	r8, r2, r8
   388f0:	mov.w	r2, r8, lsl #1
   388f4:	orr.w	r2, r2, r4, lsr #31
   388f8:	lsls	r4, r4, #1
   388fa:	str	r2, [sp, #252]	; 0xfc
   388fc:	orr.w	r2, r4, r8, lsr #31
   38900:	str	r2, [sp, #244]	; 0xf4
   38902:	ldr	r2, [sp, #84]	; 0x54
   38904:	ldr	r4, [sp, #172]	; 0xac
   38906:	adds	r2, r2, r1
   38908:	ldr	r1, [sp, #88]	; 0x58
   3890a:	adc.w	r7, r1, r4
   3890e:	ldr	r1, [sp, #240]	; 0xf0
   38910:	adds	r2, r2, r1
   38912:	ldr	r1, [sp, #248]	; 0xf8
   38914:	adc.w	r7, r1, r7
   38918:	ldr	r1, [sp, #260]	; 0x104
   3891a:	eor.w	r4, r7, r1
   3891e:	ldr	r1, [sp, #228]	; 0xe4
   38920:	adds	r3, r3, r4
   38922:	eor.w	sl, r2, r1
   38926:	ldr	r1, [sp, #240]	; 0xf0
   38928:	adc.w	r0, r0, sl
   3892c:	eor.w	ip, r3, r1
   38930:	ldr	r1, [sp, #248]	; 0xf8
   38932:	eor.w	r5, r0, r1
   38936:	mov.w	lr, ip, lsr #24
   3893a:	orr.w	r1, lr, r5, lsl #8
   3893e:	lsrs	r5, r5, #24
   38940:	orr.w	r6, r5, ip, lsl #8
   38944:	ldr	r5, [sp, #92]	; 0x5c
   38946:	adds	r2, r5, r2
   38948:	ldr	r5, [sp, #96]	; 0x60
   3894a:	adc.w	r7, r5, r7
   3894e:	adds	r2, r2, r1
   38950:	str	r2, [sp, #168]	; 0xa8
   38952:	adc.w	r2, r7, r6
   38956:	str	r2, [sp, #172]	; 0xac
   38958:	ldr	r2, [sp, #168]	; 0xa8
   3895a:	eors	r4, r2
   3895c:	ldr	r2, [sp, #172]	; 0xac
   3895e:	eor.w	r2, r2, sl
   38962:	lsrs	r5, r4, #16
   38964:	orr.w	r5, r5, r2, lsl #16
   38968:	mov.w	sl, r2, lsr #16
   3896c:	orr.w	sl, sl, r4, lsl #16
   38970:	adds	r3, r3, r5
   38972:	str	r3, [sp, #184]	; 0xb8
   38974:	adc.w	r3, r0, sl
   38978:	str	r3, [sp, #188]	; 0xbc
   3897a:	ldr	r3, [sp, #184]	; 0xb8
   3897c:	ldr	r2, [sp, #160]	; 0xa0
   3897e:	eors	r1, r3
   38980:	ldr	r3, [sp, #188]	; 0xbc
   38982:	str	r5, [sp, #228]	; 0xe4
   38984:	eors	r6, r3
   38986:	lsls	r3, r6, #1
   38988:	orr.w	r3, r3, r1, lsr #31
   3898c:	lsls	r1, r1, #1
   3898e:	str	r3, [sp, #248]	; 0xf8
   38990:	orr.w	r3, r1, r6, lsr #31
   38994:	str	r3, [sp, #240]	; 0xf0
   38996:	ldr	r3, [sp, #100]	; 0x64
   38998:	adds	r3, r3, r2
   3899a:	ldr	r2, [sp, #104]	; 0x68
   3899c:	ldr	r1, [sp, #164]	; 0xa4
   3899e:	ldr	r0, [sp, #196]	; 0xc4
   389a0:	adc.w	ip, r2, r1
   389a4:	ldr	r2, [sp, #216]	; 0xd8
   389a6:	adds.w	r3, r3, fp
   389aa:	adc.w	ip, ip, r2
   389ae:	ldr	r2, [sp, #212]	; 0xd4
   389b0:	eor.w	r7, ip, r2
   389b4:	ldr	r2, [sp, #208]	; 0xd0
   389b6:	eor.w	r1, r3, r2
   389ba:	ldr	r2, [sp, #192]	; 0xc0
   389bc:	adds	r2, r2, r7
   389be:	adc.w	r5, r0, r1
   389c2:	ldr	r0, [sp, #216]	; 0xd8
   389c4:	eor.w	fp, r2, fp
   389c8:	eors	r0, r5
   389ca:	mov.w	r4, fp, lsr #24
   389ce:	orr.w	r9, r4, r0, lsl #8
   389d2:	lsrs	r0, r0, #24
   389d4:	orr.w	r6, r0, fp, lsl #8
   389d8:	ldr	r0, [sp, #108]	; 0x6c
   389da:	adds	r3, r0, r3
   389dc:	ldr	r0, [sp, #112]	; 0x70
   389de:	adc.w	ip, r0, ip
   389e2:	adds.w	r3, r3, r9
   389e6:	str	r3, [sp, #160]	; 0xa0
   389e8:	adc.w	r3, ip, r6
   389ec:	str	r3, [sp, #164]	; 0xa4
   389ee:	ldr	r3, [sp, #160]	; 0xa0
   389f0:	ldr	r0, [sp, #148]	; 0x94
   389f2:	eors	r7, r3
   389f4:	ldr	r3, [sp, #164]	; 0xa4
   389f6:	eors	r1, r3
   389f8:	lsrs	r3, r7, #16
   389fa:	orr.w	r3, r3, r1, lsl #16
   389fe:	lsrs	r1, r1, #16
   38a00:	str	r3, [sp, #192]	; 0xc0
   38a02:	orr.w	r3, r1, r7, lsl #16
   38a06:	str	r3, [sp, #196]	; 0xc4
   38a08:	ldr	r3, [sp, #192]	; 0xc0
   38a0a:	ldr	r1, [sp, #144]	; 0x90
   38a0c:	adds	r2, r2, r3
   38a0e:	ldr	r3, [sp, #196]	; 0xc4
   38a10:	eor.w	r9, r2, r9
   38a14:	ldr	r7, [sp, #268]	; 0x10c
   38a16:	adc.w	r5, r3, r5
   38a1a:	eors	r6, r5
   38a1c:	lsls	r3, r6, #1
   38a1e:	orr.w	r3, r3, r9, lsr #31
   38a22:	mov.w	r9, r9, lsl #1
   38a26:	str	r3, [sp, #212]	; 0xd4
   38a28:	orr.w	r3, r9, r6, lsr #31
   38a2c:	str	r3, [sp, #208]	; 0xd0
   38a2e:	ldr	r3, [sp, #116]	; 0x74
   38a30:	ldr	r6, [sp, #264]	; 0x108
   38a32:	adds	r1, r3, r1
   38a34:	ldr	r3, [sp, #120]	; 0x78
   38a36:	adc.w	r4, r3, r0
   38a3a:	ldr	r3, [sp, #264]	; 0x108
   38a3c:	ldr	r0, [sp, #204]	; 0xcc
   38a3e:	adds	r1, r1, r3
   38a40:	ldr	r3, [sp, #268]	; 0x10c
   38a42:	adc.w	r4, r3, r4
   38a46:	ldr	r3, [sp, #236]	; 0xec
   38a48:	eor.w	r8, r4, r3
   38a4c:	ldr	r3, [sp, #232]	; 0xe8
   38a4e:	eor.w	ip, r1, r3
   38a52:	ldr	r3, [sp, #200]	; 0xc8
   38a54:	adds.w	r3, r3, r8
   38a58:	adc.w	r0, r0, ip
   38a5c:	eors	r6, r3
   38a5e:	eor.w	lr, r0, r7
   38a62:	mov.w	fp, r6, lsr #24
   38a66:	orr.w	r7, fp, lr, lsl #8
   38a6a:	mov.w	lr, lr, lsr #24
   38a6e:	orr.w	r9, lr, r6, lsl #8
   38a72:	ldr	r6, [sp, #124]	; 0x7c
   38a74:	adds	r1, r6, r1
   38a76:	ldr	r6, [sp, #128]	; 0x80
   38a78:	adc.w	r4, r6, r4
   38a7c:	adds	r1, r1, r7
   38a7e:	str	r1, [sp, #144]	; 0x90
   38a80:	adc.w	r1, r4, r9
   38a84:	str	r1, [sp, #148]	; 0x94
   38a86:	ldr	r1, [sp, #144]	; 0x90
   38a88:	ldr	r6, [sp, #152]	; 0x98
   38a8a:	eor.w	r8, r1, r8
   38a8e:	ldr	r1, [sp, #148]	; 0x94
   38a90:	eor.w	ip, r1, ip
   38a94:	mov.w	r1, r8, lsr #16
   38a98:	orr.w	r1, r1, ip, lsl #16
   38a9c:	mov.w	ip, ip, lsr #16
   38aa0:	orr.w	fp, ip, r8, lsl #16
   38aa4:	adds	r3, r3, r1
   38aa6:	adc.w	r0, r0, fp
   38aaa:	eors	r7, r3
   38aac:	eor.w	r9, r0, r9
   38ab0:	str	r1, [sp, #200]	; 0xc8
   38ab2:	mov.w	r1, r9, lsl #1
   38ab6:	orr.w	r4, r1, r7, lsr #31
   38aba:	ldr	r1, [sp, #116]	; 0x74
   38abc:	lsls	r7, r7, #1
   38abe:	orr.w	ip, r7, r9, lsr #31
   38ac2:	adds	r1, r1, r6
   38ac4:	ldr	r7, [sp, #156]	; 0x9c
   38ac6:	ldr	r6, [sp, #120]	; 0x78
   38ac8:	adc.w	r9, r6, r7
   38acc:	adds.w	r1, r1, ip
   38ad0:	adc.w	r9, r9, r4
   38ad4:	ldr	r6, [sp, #228]	; 0xe4
   38ad6:	eor.w	lr, r9, sl
   38ada:	adds.w	r2, r2, lr
   38ade:	eor.w	r6, r1, r6
   38ae2:	adc.w	r5, r6, r5
   38ae6:	eor.w	r7, r2, ip
   38aea:	eor.w	ip, r5, r4
   38aee:	mov.w	sl, r7, lsr #24
   38af2:	orr.w	r4, sl, ip, lsl #8
   38af6:	mov.w	ip, ip, lsr #24
   38afa:	orr.w	r8, ip, r7, lsl #8
   38afe:	ldr	r7, [sp, #84]	; 0x54
   38b00:	adds	r1, r7, r1
   38b02:	ldr	r7, [sp, #88]	; 0x58
   38b04:	adc.w	r9, r7, r9
   38b08:	adds	r1, r1, r4
   38b0a:	str	r1, [sp, #84]	; 0x54
   38b0c:	adc.w	r1, r9, r8
   38b10:	str	r1, [sp, #88]	; 0x58
   38b12:	ldr	r1, [sp, #84]	; 0x54
   38b14:	eor.w	lr, r1, lr
   38b18:	ldr	r1, [sp, #88]	; 0x58
   38b1a:	eors	r6, r1
   38b1c:	mov.w	r1, lr, lsr #16
   38b20:	orr.w	r1, r1, r6, lsl #16
   38b24:	lsrs	r6, r6, #16
   38b26:	str	r1, [sp, #152]	; 0x98
   38b28:	orr.w	r1, r6, lr, lsl #16
   38b2c:	str	r1, [sp, #156]	; 0x9c
   38b2e:	ldr	r1, [sp, #152]	; 0x98
   38b30:	adds	r2, r2, r1
   38b32:	str	r2, [sp, #116]	; 0x74
   38b34:	ldr	r2, [sp, #156]	; 0x9c
   38b36:	ldr	r1, [sp, #168]	; 0xa8
   38b38:	adc.w	r2, r5, r2
   38b3c:	str	r2, [sp, #120]	; 0x78
   38b3e:	ldr	r2, [sp, #116]	; 0x74
   38b40:	eors	r4, r2
   38b42:	ldr	r2, [sp, #120]	; 0x78
   38b44:	eor.w	r8, r2, r8
   38b48:	mov.w	r2, r8, lsl #1
   38b4c:	orr.w	r2, r2, r4, lsr #31
   38b50:	lsls	r4, r4, #1
   38b52:	str	r2, [sp, #216]	; 0xd8
   38b54:	orr.w	r2, r4, r8, lsr #31
   38b58:	str	r2, [sp, #204]	; 0xcc
   38b5a:	ldr	r2, [sp, #36]	; 0x24
   38b5c:	ldr	r4, [sp, #172]	; 0xac
   38b5e:	adds	r2, r2, r1
   38b60:	ldr	r1, [sp, #40]	; 0x28
   38b62:	adc.w	r7, r1, r4
   38b66:	ldr	r1, [sp, #244]	; 0xf4
   38b68:	adds	r2, r2, r1
   38b6a:	ldr	r1, [sp, #252]	; 0xfc
   38b6c:	ldr	r4, [sp, #244]	; 0xf4
   38b6e:	adc.w	r7, r1, r7
   38b72:	ldr	r1, [sp, #196]	; 0xc4
   38b74:	ldr	r5, [sp, #252]	; 0xfc
   38b76:	eor.w	r6, r7, r1
   38b7a:	ldr	r1, [sp, #192]	; 0xc0
   38b7c:	adds	r3, r3, r6
   38b7e:	eor.w	r1, r2, r1
   38b82:	eor.w	r4, r3, r4
   38b86:	adc.w	r0, r1, r0
   38b8a:	eors	r5, r0
   38b8c:	mov.w	r8, r4, lsr #24
   38b90:	orr.w	lr, r8, r5, lsl #8
   38b94:	lsrs	r5, r5, #24
   38b96:	orr.w	ip, r5, r4, lsl #8
   38b9a:	ldr	r4, [sp, #68]	; 0x44
   38b9c:	adds	r2, r4, r2
   38b9e:	ldr	r4, [sp, #72]	; 0x48
   38ba0:	adc.w	r7, r4, r7
   38ba4:	adds.w	r2, r2, lr
   38ba8:	str	r2, [sp, #36]	; 0x24
   38baa:	adc.w	r2, r7, ip
   38bae:	str	r2, [sp, #40]	; 0x28
   38bb0:	ldr	r2, [sp, #36]	; 0x24
   38bb2:	eors	r6, r2
   38bb4:	ldr	r2, [sp, #40]	; 0x28
   38bb6:	eors	r1, r2
   38bb8:	lsrs	r2, r6, #16
   38bba:	orr.w	r2, r2, r1, lsl #16
   38bbe:	lsrs	r1, r1, #16
   38bc0:	str	r2, [sp, #168]	; 0xa8
   38bc2:	orr.w	r2, r1, r6, lsl #16
   38bc6:	str	r2, [sp, #172]	; 0xac
   38bc8:	ldr	r2, [sp, #168]	; 0xa8
   38bca:	ldr	r1, [sp, #164]	; 0xa4
   38bcc:	adds	r3, r3, r2
   38bce:	str	r3, [sp, #68]	; 0x44
   38bd0:	ldr	r3, [sp, #172]	; 0xac
   38bd2:	adc.w	r3, r0, r3
   38bd6:	str	r3, [sp, #72]	; 0x48
   38bd8:	ldr	r2, [sp, #72]	; 0x48
   38bda:	ldr	r3, [sp, #68]	; 0x44
   38bdc:	eor.w	ip, r2, ip
   38be0:	eor.w	r3, r3, lr
   38be4:	mov.w	r2, ip, lsl #1
   38be8:	orr.w	r2, r2, r3, lsr #31
   38bec:	mov.w	lr, r3, lsl #1
   38bf0:	str	r2, [sp, #192]	; 0xc0
   38bf2:	orr.w	lr, lr, ip, lsr #31
   38bf6:	ldr	r2, [sp, #160]	; 0xa0
   38bf8:	ldr	r3, [sp, #76]	; 0x4c
   38bfa:	adds	r3, r3, r2
   38bfc:	ldr	r2, [sp, #80]	; 0x50
   38bfe:	adc.w	ip, r2, r1
   38c02:	ldr	r2, [sp, #240]	; 0xf0
   38c04:	ldr	r1, [sp, #180]	; 0xb4
   38c06:	adds	r3, r3, r2
   38c08:	ldr	r2, [sp, #248]	; 0xf8
   38c0a:	adc.w	ip, ip, r2
   38c0e:	ldr	r2, [sp, #200]	; 0xc8
   38c10:	eor.w	r6, ip, fp
   38c14:	eor.w	r0, r3, r2
   38c18:	ldr	r2, [sp, #176]	; 0xb0
   38c1a:	adds	r2, r2, r6
   38c1c:	adc.w	r5, r1, r0
   38c20:	ldr	r1, [sp, #240]	; 0xf0
   38c22:	eor.w	r8, r2, r1
   38c26:	ldr	r1, [sp, #248]	; 0xf8
   38c28:	eor.w	r4, r5, r1
   38c2c:	mov.w	r9, r8, lsr #24
   38c30:	orr.w	r1, r9, r4, lsl #8
   38c34:	lsrs	r4, r4, #24
   38c36:	orr.w	r7, r4, r8, lsl #8
   38c3a:	ldr	r4, [sp, #124]	; 0x7c
   38c3c:	adds	r3, r4, r3
   38c3e:	ldr	r4, [sp, #128]	; 0x80
   38c40:	adc.w	ip, r4, ip
   38c44:	adds	r3, r3, r1
   38c46:	str	r3, [sp, #76]	; 0x4c
   38c48:	adc.w	r3, ip, r7
   38c4c:	str	r3, [sp, #80]	; 0x50
   38c4e:	ldr	r3, [sp, #76]	; 0x4c
   38c50:	eors	r6, r3
   38c52:	ldr	r3, [sp, #80]	; 0x50
   38c54:	eors	r0, r3
   38c56:	lsrs	r3, r6, #16
   38c58:	orr.w	r3, r3, r0, lsl #16
   38c5c:	lsrs	r0, r0, #16
   38c5e:	str	r3, [sp, #124]	; 0x7c
   38c60:	orr.w	r3, r0, r6, lsl #16
   38c64:	str	r3, [sp, #128]	; 0x80
   38c66:	ldr	r3, [sp, #124]	; 0x7c
   38c68:	ldr	r0, [sp, #148]	; 0x94
   38c6a:	adds	r2, r2, r3
   38c6c:	ldr	r3, [sp, #128]	; 0x80
   38c6e:	eor.w	r1, r1, r2
   38c72:	ldr	r6, [sp, #208]	; 0xd0
   38c74:	adc.w	r5, r3, r5
   38c78:	eors	r7, r5
   38c7a:	lsls	r3, r7, #1
   38c7c:	orr.w	r3, r3, r1, lsr #31
   38c80:	lsls	r1, r1, #1
   38c82:	str	r3, [sp, #164]	; 0xa4
   38c84:	orr.w	r3, r1, r7, lsr #31
   38c88:	ldr	r1, [sp, #144]	; 0x90
   38c8a:	str	r3, [sp, #160]	; 0xa0
   38c8c:	ldr	r3, [sp, #108]	; 0x6c
   38c8e:	adds	r1, r3, r1
   38c90:	ldr	r3, [sp, #112]	; 0x70
   38c92:	adc.w	r4, r3, r0
   38c96:	ldr	r3, [sp, #208]	; 0xd0
   38c98:	ldr	r0, [sp, #188]	; 0xbc
   38c9a:	adds	r1, r1, r3
   38c9c:	ldr	r3, [sp, #212]	; 0xd4
   38c9e:	adc.w	r4, r3, r4
   38ca2:	ldr	r3, [sp, #224]	; 0xe0
   38ca4:	eor.w	r8, r4, r3
   38ca8:	ldr	r3, [sp, #220]	; 0xdc
   38caa:	eor.w	r7, r1, r3
   38cae:	ldr	r3, [sp, #184]	; 0xb8
   38cb0:	adds.w	r3, r3, r8
   38cb4:	str	r3, [sp, #108]	; 0x6c
   38cb6:	eor.w	r9, r3, r6
   38cba:	ldr	r6, [sp, #212]	; 0xd4
   38cbc:	ldr	r3, [sp, #52]	; 0x34
   38cbe:	adcs	r0, r7
   38cc0:	eor.w	ip, r0, r6
   38cc4:	mov.w	fp, r9, lsr #24
   38cc8:	adds	r1, r3, r1
   38cca:	ldr	r3, [sp, #56]	; 0x38
   38ccc:	orr.w	r6, fp, ip, lsl #8
   38cd0:	mov.w	ip, ip, lsr #24
   38cd4:	orr.w	sl, ip, r9, lsl #8
   38cd8:	adc.w	r4, r3, r4
   38cdc:	adds	r3, r1, r6
   38cde:	str	r3, [sp, #52]	; 0x34
   38ce0:	adc.w	r3, r4, sl
   38ce4:	str	r3, [sp, #56]	; 0x38
   38ce6:	ldr	r3, [sp, #52]	; 0x34
   38ce8:	eor.w	r8, r3, r8
   38cec:	ldr	r3, [sp, #56]	; 0x38
   38cee:	eors	r7, r3
   38cf0:	mov.w	r1, r8, lsr #16
   38cf4:	ldr	r3, [sp, #108]	; 0x6c
   38cf6:	orr.w	r4, r1, r7, lsl #16
   38cfa:	lsrs	r7, r7, #16
   38cfc:	adds	r3, r3, r4
   38cfe:	orr.w	fp, r7, r8, lsl #16
   38d02:	adc.w	r0, r0, fp
   38d06:	eors	r6, r3
   38d08:	eor.w	sl, r0, sl
   38d0c:	mov.w	r1, sl, lsl #1
   38d10:	orr.w	r1, r1, r6, lsr #31
   38d14:	lsls	r6, r6, #1
   38d16:	str	r1, [sp, #112]	; 0x70
   38d18:	orr.w	r1, r6, sl, lsr #31
   38d1c:	str	r1, [sp, #108]	; 0x6c
   38d1e:	ldr	r6, [sp, #84]	; 0x54
   38d20:	ldr	r1, [sp, #12]
   38d22:	ldr	r7, [sp, #88]	; 0x58
   38d24:	adds	r1, r1, r6
   38d26:	ldr	r6, [sp, #16]
   38d28:	adc.w	r9, r6, r7
   38d2c:	ldr	r6, [sp, #192]	; 0xc0
   38d2e:	adds.w	r1, r1, lr
   38d32:	adc.w	r9, r9, r6
   38d36:	eor.w	r7, r1, r4
   38d3a:	eor.w	r6, r9, fp
   38d3e:	ldr	r4, [sp, #192]	; 0xc0
   38d40:	adds	r2, r2, r6
   38d42:	adc.w	r5, r7, r5
   38d46:	eor.w	lr, r2, lr
   38d4a:	eors	r4, r5
   38d4c:	mov.w	sl, lr, lsr #24
   38d50:	orr.w	ip, sl, r4, lsl #8
   38d54:	lsrs	r4, r4, #24
   38d56:	orr.w	r8, r4, lr, lsl #8
   38d5a:	ldr	r4, [sp, #100]	; 0x64
   38d5c:	adds	r1, r4, r1
   38d5e:	ldr	r4, [sp, #104]	; 0x68
   38d60:	adc.w	r9, r4, r9
   38d64:	adds.w	r1, r1, ip
   38d68:	adc.w	r4, r9, r8
   38d6c:	eors	r6, r1
   38d6e:	eors	r7, r4
   38d70:	strd	r1, r4, [sp, #400]	; 0x190
   38d74:	mov.w	lr, r6, lsr #16
   38d78:	orr.w	r1, lr, r7, lsl #16
   38d7c:	lsrs	r7, r7, #16
   38d7e:	orr.w	r4, r7, r6, lsl #16
   38d82:	adds	r2, r2, r1
   38d84:	adc.w	r5, r4, r5
   38d88:	strd	r2, r5, [sp, #480]	; 0x1e0
   38d8c:	eor.w	r5, r5, r8
   38d90:	eor.w	r2, r2, ip
   38d94:	strd	r1, r4, [sp, #520]	; 0x208
   38d98:	lsls	r6, r5, #1
   38d9a:	ldr	r1, [sp, #36]	; 0x24
   38d9c:	orr.w	r6, r6, r2, lsr #31
   38da0:	lsls	r2, r2, #1
   38da2:	orr.w	r5, r2, r5, lsr #31
   38da6:	ldr	r2, [sp, #4]
   38da8:	ldr	r4, [sp, #40]	; 0x28
   38daa:	adds	r2, r2, r1
   38dac:	ldr	r1, [sp, #8]
   38dae:	strd	r5, r6, [sp, #440]	; 0x1b8
   38db2:	adc.w	r7, r1, r4
   38db6:	ldr	r1, [sp, #160]	; 0xa0
   38db8:	ldr	r5, [sp, #160]	; 0xa0
   38dba:	adds	r2, r2, r1
   38dbc:	ldr	r1, [sp, #164]	; 0xa4
   38dbe:	ldr	r4, [sp, #152]	; 0x98
   38dc0:	adc.w	r7, r1, r7
   38dc4:	ldr	r1, [sp, #156]	; 0x9c
   38dc6:	eors	r4, r2
   38dc8:	eors	r1, r7
   38dca:	adds	r3, r3, r1
   38dcc:	eor.w	lr, r3, r5
   38dd0:	ldr	r5, [sp, #164]	; 0xa4
   38dd2:	adc.w	r0, r4, r0
   38dd6:	eors	r5, r0
   38dd8:	mov.w	r8, lr, lsr #24
   38ddc:	orr.w	r6, r8, r5, lsl #8
   38de0:	lsrs	r5, r5, #24
   38de2:	orr.w	ip, r5, lr, lsl #8
   38de6:	ldr	r5, [sp, #20]
   38de8:	adds	r2, r5, r2
   38dea:	ldr	r5, [sp, #24]
   38dec:	adc.w	r7, r5, r7
   38df0:	adds	r2, r2, r6
   38df2:	adc.w	r7, r7, ip
   38df6:	eors	r1, r2
   38df8:	eors	r4, r7
   38dfa:	strd	r2, r7, [sp, #408]	; 0x198
   38dfe:	lsrs	r7, r1, #16
   38e00:	orr.w	r2, r7, r4, lsl #16
   38e04:	lsrs	r4, r4, #16
   38e06:	orr.w	r5, r4, r1, lsl #16
   38e0a:	adds	r3, r3, r2
   38e0c:	adc.w	r0, r5, r0
   38e10:	strd	r2, r5, [sp, #496]	; 0x1f0
   38e14:	strd	r3, r0, [sp, #488]	; 0x1e8
   38e18:	eor.w	r0, r0, ip
   38e1c:	eors	r3, r6
   38e1e:	ldr	r2, [sp, #76]	; 0x4c
   38e20:	lsls	r1, r0, #1
   38e22:	orr.w	r1, r1, r3, lsr #31
   38e26:	lsls	r3, r3, #1
   38e28:	orr.w	r0, r3, r0, lsr #31
   38e2c:	ldr	r3, [sp, #92]	; 0x5c
   38e2e:	strd	r0, r1, [sp, #448]	; 0x1c0
   38e32:	adds	r3, r3, r2
   38e34:	ldr	r1, [sp, #80]	; 0x50
   38e36:	ldr	r2, [sp, #96]	; 0x60
   38e38:	adc.w	ip, r2, r1
   38e3c:	ldr	r2, [sp, #108]	; 0x6c
   38e3e:	ldr	r1, [sp, #120]	; 0x78
   38e40:	adds	r3, r3, r2
   38e42:	ldr	r2, [sp, #112]	; 0x70
   38e44:	adc.w	ip, ip, r2
   38e48:	ldr	r2, [sp, #172]	; 0xac
   38e4a:	eor.w	r0, ip, r2
   38e4e:	ldr	r2, [sp, #168]	; 0xa8
   38e50:	eor.w	r4, r3, r2
   38e54:	ldr	r2, [sp, #116]	; 0x74
   38e56:	adds	r2, r2, r0
   38e58:	adc.w	r5, r1, r4
   38e5c:	ldr	r1, [sp, #108]	; 0x6c
   38e5e:	eor.w	r6, r2, r1
   38e62:	ldr	r1, [sp, #112]	; 0x70
   38e64:	eors	r1, r5
   38e66:	mov.w	r8, r6, lsr #24
   38e6a:	orr.w	r7, r8, r1, lsl #8
   38e6e:	lsrs	r1, r1, #24
   38e70:	orr.w	lr, r1, r6, lsl #8
   38e74:	ldr	r1, [sp, #60]	; 0x3c
   38e76:	adds	r3, r1, r3
   38e78:	ldr	r1, [sp, #64]	; 0x40
   38e7a:	adc.w	ip, r1, ip
   38e7e:	adds	r3, r3, r7
   38e80:	adc.w	r1, ip, lr
   38e84:	eors	r0, r3
   38e86:	eors	r4, r1
   38e88:	strd	r3, r1, [sp, #416]	; 0x1a0
   38e8c:	lsrs	r6, r0, #16
   38e8e:	orr.w	r3, r6, r4, lsl #16
   38e92:	lsrs	r4, r4, #16
   38e94:	orr.w	r1, r4, r0, lsl #16
   38e98:	adds	r2, r2, r3
   38e9a:	adc.w	r5, r1, r5
   38e9e:	strd	r2, r5, [sp, #464]	; 0x1d0
   38ea2:	eor.w	r5, r5, lr
   38ea6:	eors	r2, r7
   38ea8:	strd	r3, r1, [sp, #504]	; 0x1f8
   38eac:	lsls	r0, r5, #1
   38eae:	ldr	r3, [sp, #44]	; 0x2c
   38eb0:	orr.w	r0, r0, r2, lsr #31
   38eb4:	lsls	r2, r2, #1
   38eb6:	orr.w	r5, r2, r5, lsr #31
   38eba:	ldr	r2, [sp, #52]	; 0x34
   38ebc:	strd	r5, r0, [sp, #456]	; 0x1c8
   38ec0:	adds	r1, r3, r2
   38ec2:	ldr	r3, [sp, #48]	; 0x30
   38ec4:	ldr	r2, [sp, #56]	; 0x38
   38ec6:	adc.w	r4, r3, r2
   38eca:	ldr	r3, [sp, #204]	; 0xcc
   38ecc:	adds	r1, r1, r3
   38ece:	ldr	r3, [sp, #216]	; 0xd8
   38ed0:	adc.w	r2, r4, r3
   38ed4:	ldr	r3, [sp, #128]	; 0x80
   38ed6:	eor.w	r5, r2, r3
   38eda:	ldr	r3, [sp, #124]	; 0x7c
   38edc:	ldr	r0, [sp, #72]	; 0x48
   38ede:	eor.w	r6, r1, r3
   38ee2:	ldr	r3, [sp, #68]	; 0x44
   38ee4:	ldr	r4, [sp, #204]	; 0xcc
   38ee6:	adds	r3, r3, r5
   38ee8:	ldr	r7, [sp, #216]	; 0xd8
   38eea:	adcs	r0, r6
   38eec:	eors	r4, r3
   38eee:	eors	r7, r0
   38ef0:	mov.w	r8, r4, lsr #24
   38ef4:	orr.w	ip, r8, r7, lsl #8
   38ef8:	lsrs	r7, r7, #24
   38efa:	orr.w	lr, r7, r4, lsl #8
   38efe:	ldr	r4, [sp, #28]
   38f00:	adds	r1, r4, r1
   38f02:	ldr	r4, [sp, #32]
   38f04:	adc.w	r2, r4, r2
   38f08:	adds.w	r1, r1, ip
   38f0c:	adc.w	r2, r2, lr
   38f10:	eors	r5, r1
   38f12:	eors	r6, r2
   38f14:	strd	r1, r2, [sp, #424]	; 0x1a8
   38f18:	lsrs	r1, r5, #16
   38f1a:	orr.w	r2, r1, r6, lsl #16
   38f1e:	lsrs	r6, r6, #16
   38f20:	adds	r3, r3, r2
   38f22:	orr.w	r7, r6, r5, lsl #16
   38f26:	adc.w	r0, r7, r0
   38f2a:	strd	r3, r0, [sp, #472]	; 0x1d8
   38f2e:	eor.w	r0, r0, lr
   38f32:	eor.w	ip, r3, ip
   38f36:	strd	r2, r7, [sp, #512]	; 0x200
   38f3a:	lsls	r3, r0, #1
   38f3c:	orr.w	r3, r3, ip, lsr #31
   38f40:	mov.w	ip, ip, lsl #1
   38f44:	orr.w	r0, ip, r0, lsr #31
   38f48:	strd	r0, r3, [sp, #432]	; 0x1b0
   38f4c:	ldr	r1, [sp, #136]	; 0x88
   38f4e:	ldr	r3, [sp, #136]	; 0x88
   38f50:	adds	r1, #8
   38f52:	str	r1, [sp, #136]	; 0x88
   38f54:	ldr	r1, [sp, #132]	; 0x84
   38f56:	ldrd	r2, r3, [r3]
   38f5a:	ldr.w	r0, [r1, #8]!
   38f5e:	eors	r2, r0
   38f60:	str	r1, [sp, #132]	; 0x84
   38f62:	ldr	r1, [r1, #4]
   38f64:	eors	r3, r1
   38f66:	ldr	r1, [sp, #136]	; 0x88
   38f68:	ldrd	r0, r1, [r1, #56]	; 0x38
   38f6c:	eors	r3, r1
   38f6e:	ldr	r1, [sp, #132]	; 0x84
   38f70:	eors	r2, r0
   38f72:	str	r2, [r1, #0]
   38f74:	ldr	r2, [sp, #140]	; 0x8c
   38f76:	str	r3, [r1, #4]
   38f78:	cmp	r1, r2
   38f7a:	bne.n	38f4c <SHA256Result@@Base+0x3a08>
   38f7c:	ldr	r2, [pc, #24]	; (38f98 <SHA256Result@@Base+0x3a54>)
   38f7e:	ldr	r3, [pc, #28]	; (38f9c <SHA256Result@@Base+0x3a58>)
   38f80:	add	r2, pc
   38f82:	ldr	r3, [r2, r3]
   38f84:	ldr	r2, [r3, #0]
   38f86:	ldr	r3, [sp, #532]	; 0x214
   38f88:	eors	r2, r3
   38f8a:	beq.n	38f90 <SHA256Result@@Base+0x3a4c>
   38f8c:	blx	8708 <__stack_chk_fail@plt>
   38f90:	add.w	sp, sp, #540	; 0x21c
   38f94:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38f98:	bkpt	0x0000
   38f9a:	movs	r2, r0
   38f9c:	lsls	r0, r5, #8
	...

00038fa0 <blake2b_init_param@@Base>:
   38fa0:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   38fa4:	movs	r2, #240	; 0xf0
   38fa6:	ldr	r6, [pc, #80]	; (38ff8 <blake2b_init_param@@Base+0x58>)
   38fa8:	mov	r5, r1
   38faa:	movs	r1, #0
   38fac:	mov	r4, r0
   38fae:	blx	89bc <memset@plt+0x4>
   38fb2:	sub.w	r2, r4, #8
   38fb6:	add	r6, pc
   38fb8:	add.w	r8, r4, #56	; 0x38
   38fbc:	mov	r3, r2
   38fbe:	ldrd	r0, r1, [r6], #8
   38fc2:	strd	r0, r1, [r3, #8]!
   38fc6:	cmp	r3, r8
   38fc8:	bne.n	38fbe <blake2b_init_param@@Base+0x1e>
   38fca:	mov	r6, r5
   38fcc:	mov	r0, r6
   38fce:	adds	r6, #8
   38fd0:	bl	35558 <SHA256Result@@Base+0x14>
   38fd4:	ldr.w	r7, [r2, #8]!
   38fd8:	cmp	r2, r8
   38fda:	eor.w	r0, r0, r7
   38fde:	ldr	r3, [r2, #4]
   38fe0:	eor.w	r1, r1, r3
   38fe4:	strd	r0, r1, [r2]
   38fe8:	bne.n	38fcc <blake2b_init_param@@Base+0x2c>
   38fea:	ldrb	r3, [r5, #0]
   38fec:	movs	r0, #0
   38fee:	str.w	r3, [r4, #228]	; 0xe4
   38ff2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   38ff6:	nop
   38ff8:	add	sp, #56	; 0x38
   38ffa:	movs	r1, r0

00038ffc <blake2b_init@@Base>:
   38ffc:	ldr	r2, [pc, #124]	; (3907c <blake2b_init@@Base+0x80>)
   38ffe:	ldr	r3, [pc, #128]	; (39080 <blake2b_init@@Base+0x84>)
   39000:	add	r2, pc
   39002:	push	{r4, r5, lr}
   39004:	sub	sp, #76	; 0x4c
   39006:	ldr	r3, [r2, r3]
   39008:	mov	r5, r0
   3900a:	ldr	r3, [r3, #0]
   3900c:	str	r3, [sp, #68]	; 0x44
   3900e:	mov.w	r3, #0
   39012:	subs	r3, r1, #1
   39014:	cmp	r3, #63	; 0x3f
   39016:	bhi.n	39070 <blake2b_init@@Base+0x74>
   39018:	movs	r4, #0
   3901a:	movs	r2, #14
   3901c:	strb.w	r1, [sp, #4]
   39020:	add.w	r0, sp, #22
   39024:	mov	r1, r4
   39026:	movw	r3, #257	; 0x101
   3902a:	strb.w	r4, [sp, #5]
   3902e:	strh.w	r3, [sp, #6]
   39032:	strd	r4, r4, [sp, #8]
   39036:	str	r4, [sp, #16]
   39038:	strh.w	r4, [sp, #20]
   3903c:	blx	89bc <memset@plt+0x4>
   39040:	movs	r2, #16
   39042:	mov	r1, r4
   39044:	add	r0, sp, #36	; 0x24
   39046:	blx	89bc <memset@plt+0x4>
   3904a:	mov	r1, r4
   3904c:	add	r0, sp, #52	; 0x34
   3904e:	movs	r2, #16
   39050:	blx	89bc <memset@plt+0x4>
   39054:	add	r1, sp, #4
   39056:	mov	r0, r5
   39058:	bl	38fa0 <blake2b_init_param@@Base>
   3905c:	ldr	r2, [pc, #36]	; (39084 <blake2b_init@@Base+0x88>)
   3905e:	ldr	r3, [pc, #32]	; (39080 <blake2b_init@@Base+0x84>)
   39060:	add	r2, pc
   39062:	ldr	r3, [r2, r3]
   39064:	ldr	r2, [r3, #0]
   39066:	ldr	r3, [sp, #68]	; 0x44
   39068:	eors	r2, r3
   3906a:	beq.n	39076 <blake2b_init@@Base+0x7a>
   3906c:	blx	8708 <__stack_chk_fail@plt>
   39070:	mov.w	r0, #4294967295	; 0xffffffff
   39074:	b.n	3905c <blake2b_init@@Base+0x60>
   39076:	add	sp, #76	; 0x4c
   39078:	pop	{r4, r5, pc}
   3907a:	nop
   3907c:	pop	{r7, pc}
   3907e:	movs	r2, r0
   39080:	lsls	r0, r5, #8
   39082:	movs	r0, r0
   39084:	pop	{r5, pc}
   39086:	movs	r2, r0

00039088 <blake2b_update@@Base>:
   39088:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3908c:	mov	r4, r0
   3908e:	mov	sl, r1
   39090:	mov	r5, r2
   39092:	cmp	r2, #0
   39094:	beq.n	39122 <blake2b_update@@Base+0x9a>
   39096:	ldr.w	r3, [r0, #224]	; 0xe0
   3909a:	add.w	fp, r0, #96	; 0x60
   3909e:	rsb	r2, r3, #128	; 0x80
   390a2:	cmp	r5, r2
   390a4:	bls.n	3910a <blake2b_update@@Base+0x82>
   390a6:	movs	r0, #0
   390a8:	str.w	r0, [r4, #224]	; 0xe0
   390ac:	add.w	r0, fp, r3
   390b0:	str	r2, [sp, #4]
   390b2:	str	r3, [sp, #0]
   390b4:	blx	866c <memcpy@plt+0x4>
   390b8:	ldrd	r1, r0, [r4, #64]	; 0x40
   390bc:	adds.w	r8, r1, #128	; 0x80
   390c0:	adc.w	r9, r0, #0
   390c4:	ldrd	r0, r1, [r4, #72]	; 0x48
   390c8:	cmp.w	r9, #0
   390cc:	strd	r8, r9, [r4, #64]	; 0x40
   390d0:	it	eq
   390d2:	cmpeq.w	r8, #128	; 0x80
   390d6:	ite	cc
   390d8:	movcc.w	ip, #1
   390dc:	movcs.w	ip, #0
   390e0:	adds.w	r0, r0, ip
   390e4:	adc.w	r1, r1, #0
   390e8:	strd	r0, r1, [r4, #72]	; 0x48
   390ec:	mov	r1, fp
   390ee:	mov	r0, r4
   390f0:	bl	35560 <SHA256Result@@Base+0x1c>
   390f4:	ldr	r3, [sp, #0]
   390f6:	ldr	r2, [sp, #4]
   390f8:	subs	r3, #128	; 0x80
   390fa:	add	r2, sl
   390fc:	add	r5, r3
   390fe:	add.w	r8, r2, r5
   39102:	cmp	r5, #128	; 0x80
   39104:	sub.w	sl, r8, r5
   39108:	bhi.n	3912a <blake2b_update@@Base+0xa2>
   3910a:	ldr.w	r0, [r4, #224]	; 0xe0
   3910e:	mov	r2, r5
   39110:	mov	r1, sl
   39112:	add	r0, fp
   39114:	blx	866c <memcpy@plt+0x4>
   39118:	ldr.w	r2, [r4, #224]	; 0xe0
   3911c:	add	r2, r5
   3911e:	str.w	r2, [r4, #224]	; 0xe0
   39122:	movs	r0, #0
   39124:	add	sp, #12
   39126:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3912a:	ldrd	r3, r2, [r4, #64]	; 0x40
   3912e:	mov	r0, r4
   39130:	subs	r5, #128	; 0x80
   39132:	adds.w	r6, r3, #128	; 0x80
   39136:	adc.w	r7, r2, #0
   3913a:	ldrd	r2, r3, [r4, #72]	; 0x48
   3913e:	cmp	r7, #0
   39140:	strd	r6, r7, [r4, #64]	; 0x40
   39144:	it	eq
   39146:	cmpeq	r6, #128	; 0x80
   39148:	ite	cc
   3914a:	movcc	r1, #1
   3914c:	movcs	r1, #0
   3914e:	adds	r2, r2, r1
   39150:	mov	r1, sl
   39152:	adc.w	r3, r3, #0
   39156:	strd	r2, r3, [r4, #72]	; 0x48
   3915a:	bl	35560 <SHA256Result@@Base+0x1c>
   3915e:	b.n	39102 <blake2b_update@@Base+0x7a>

00039160 <blake2b_init_key@@Base>:
   39160:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   39164:	mov	r8, r2
   39166:	ldr	r2, [pc, #192]	; (39228 <blake2b_init_key@@Base+0xc8>)
   39168:	mov	r6, r3
   3916a:	ldr	r3, [pc, #192]	; (3922c <blake2b_init_key@@Base+0xcc>)
   3916c:	sub	sp, #200	; 0xc8
   3916e:	add	r2, pc
   39170:	mov	r7, r0
   39172:	ldr	r3, [r2, r3]
   39174:	ldr	r3, [r3, #0]
   39176:	str	r3, [sp, #196]	; 0xc4
   39178:	mov.w	r3, #0
   3917c:	subs	r3, r1, #1
   3917e:	cmp	r3, #63	; 0x3f
   39180:	bls.n	3919a <blake2b_init_key@@Base+0x3a>
   39182:	mov.w	r0, #4294967295	; 0xffffffff
   39186:	ldr	r2, [pc, #168]	; (39230 <blake2b_init_key@@Base+0xd0>)
   39188:	ldr	r3, [pc, #160]	; (3922c <blake2b_init_key@@Base+0xcc>)
   3918a:	add	r2, pc
   3918c:	ldr	r3, [r2, r3]
   3918e:	ldr	r2, [r3, #0]
   39190:	ldr	r3, [sp, #196]	; 0xc4
   39192:	eors	r2, r3
   39194:	beq.n	39222 <blake2b_init_key@@Base+0xc2>
   39196:	blx	8708 <__stack_chk_fail@plt>
   3919a:	cmp.w	r8, #0
   3919e:	beq.n	39182 <blake2b_init_key@@Base+0x22>
   391a0:	subs	r3, r6, #1
   391a2:	cmp	r3, #63	; 0x3f
   391a4:	bhi.n	39182 <blake2b_init_key@@Base+0x22>
   391a6:	movs	r4, #0
   391a8:	movs	r2, #14
   391aa:	strb.w	r1, [sp, #4]
   391ae:	add.w	r0, sp, #22
   391b2:	mov	r1, r4
   391b4:	movw	r3, #257	; 0x101
   391b8:	strb.w	r6, [sp, #5]
   391bc:	strh.w	r3, [sp, #6]
   391c0:	strd	r4, r4, [sp, #8]
   391c4:	str	r4, [sp, #16]
   391c6:	strh.w	r4, [sp, #20]
   391ca:	blx	89bc <memset@plt+0x4>
   391ce:	movs	r2, #16
   391d0:	mov	r1, r4
   391d2:	add	r0, sp, #36	; 0x24
   391d4:	blx	89bc <memset@plt+0x4>
   391d8:	movs	r2, #16
   391da:	mov	r1, r4
   391dc:	add	r0, sp, #52	; 0x34
   391de:	blx	89bc <memset@plt+0x4>
   391e2:	add	r1, sp, #4
   391e4:	mov	r0, r7
   391e6:	bl	38fa0 <blake2b_init_param@@Base>
   391ea:	cmp	r0, r4
   391ec:	blt.n	39182 <blake2b_init_key@@Base+0x22>
   391ee:	add	r5, sp, #68	; 0x44
   391f0:	movs	r2, #128	; 0x80
   391f2:	mov	r1, r4
   391f4:	mov	r0, r5
   391f6:	blx	89bc <memset@plt+0x4>
   391fa:	movs	r3, #128	; 0x80
   391fc:	mov	r2, r6
   391fe:	mov	r1, r8
   39200:	mov	r0, r5
   39202:	blx	8798 <__memcpy_chk@plt>
   39206:	movs	r2, #128	; 0x80
   39208:	mov	r1, r5
   3920a:	mov	r0, r7
   3920c:	bl	39088 <blake2b_update@@Base>
   39210:	ldr	r3, [pc, #32]	; (39234 <blake2b_init_key@@Base+0xd4>)
   39212:	movs	r2, #128	; 0x80
   39214:	mov	r1, r4
   39216:	add	r3, pc
   39218:	mov	r0, r5
   3921a:	ldr	r3, [r3, #0]
   3921c:	blx	r3
   3921e:	mov	r0, r4
   39220:	b.n	39186 <blake2b_init_key@@Base+0x26>
   39222:	add	sp, #200	; 0xc8
   39224:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   39228:	pop	{r1, r4}
   3922a:	movs	r2, r0
   3922c:	lsls	r0, r5, #8
   3922e:	movs	r0, r0
   39230:	cbnz	r6, 392b0 <blake2b_final@@Base+0x78>
   39232:	movs	r2, r0
   39234:	beq.n	3927c <blake2b_final@@Base+0x44>
   39236:	movs	r2, r0

00039238 <blake2b_final@@Base>:
   39238:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   3923c:	mov	r6, r2
   3923e:	ldr	r2, [pc, #280]	; (39358 <blake2b_final@@Base+0x120>)
   39240:	sub	sp, #76	; 0x4c
   39242:	ldr	r3, [pc, #280]	; (3935c <blake2b_final@@Base+0x124>)
   39244:	mov	r5, r1
   39246:	add	r2, pc
   39248:	mov	r4, r0
   3924a:	movs	r1, #0
   3924c:	add	r0, sp, #8
   3924e:	ldr	r3, [r2, r3]
   39250:	movs	r2, #60	; 0x3c
   39252:	ldr	r3, [r3, #0]
   39254:	str	r3, [sp, #68]	; 0x44
   39256:	mov.w	r3, #0
   3925a:	str	r1, [sp, #4]
   3925c:	blx	89bc <memset@plt+0x4>
   39260:	cmp	r5, #0
   39262:	beq.n	3934c <blake2b_final@@Base+0x114>
   39264:	ldr.w	r3, [r4, #228]	; 0xe4
   39268:	cmp	r3, r6
   3926a:	bhi.n	3934c <blake2b_final@@Base+0x114>
   3926c:	ldrd	r2, r3, [r4, #80]	; 0x50
   39270:	orrs	r3, r2
   39272:	bne.n	3934c <blake2b_final@@Base+0x114>
   39274:	ldrd	r2, r3, [r4, #64]	; 0x40
   39278:	movs	r7, #0
   3927a:	ldr.w	r0, [r4, #224]	; 0xe0
   3927e:	adds.w	r8, r0, r2
   39282:	adcs.w	r9, r7, r3
   39286:	ldrd	r2, r3, [r4, #72]	; 0x48
   3928a:	strd	r8, r9, [r4, #64]	; 0x40
   3928e:	ite	cs
   39290:	movcs	r1, #1
   39292:	movcc	r1, #0
   39294:	adds	r2, r2, r1
   39296:	ldrb.w	r1, [r4, #232]	; 0xe8
   3929a:	adc.w	r3, r3, #0
   3929e:	strd	r2, r3, [r4, #72]	; 0x48
   392a2:	mov.w	r2, #4294967295	; 0xffffffff
   392a6:	mov.w	r3, #4294967295	; 0xffffffff
   392aa:	cbz	r1, 392b0 <blake2b_final@@Base+0x78>
   392ac:	strd	r2, r3, [r4, #88]	; 0x58
   392b0:	add.w	r6, r4, #96	; 0x60
   392b4:	strd	r2, r3, [r4, #80]	; 0x50
   392b8:	movs	r1, #0
   392ba:	rsb	r2, r0, #128	; 0x80
   392be:	add	r0, r6
   392c0:	add.w	r7, r4, #56	; 0x38
   392c4:	blx	89bc <memset@plt+0x4>
   392c8:	mov	r1, r6
   392ca:	mov	r0, r4
   392cc:	bl	35560 <SHA256Result@@Base+0x1c>
   392d0:	add	r3, sp, #4
   392d2:	sub.w	r1, r4, #8
   392d6:	mov	r6, r3
   392d8:	ldr.w	r0, [r1, #8]!
   392dc:	adds	r3, #8
   392de:	cmp	r1, r7
   392e0:	ldr	r2, [r1, #4]
   392e2:	mov.w	ip, r0, lsr #8
   392e6:	strb.w	r0, [r3, #-8]
   392ea:	strb.w	ip, [r3, #-7]
   392ee:	mov.w	ip, r0, lsr #16
   392f2:	strb.w	r2, [r3, #-4]
   392f6:	mov.w	r0, r0, lsr #24
   392fa:	strb.w	ip, [r3, #-6]
   392fe:	strb.w	r0, [r3, #-5]
   39302:	mov.w	r0, r2, lsr #8
   39306:	strb.w	r0, [r3, #-3]
   3930a:	mov.w	r0, r2, lsr #16
   3930e:	mov.w	r2, r2, lsr #24
   39312:	strb.w	r0, [r3, #-2]
   39316:	strb.w	r2, [r3, #-1]
   3931a:	bne.n	392d8 <blake2b_final@@Base+0xa0>
   3931c:	ldr.w	r2, [r4, #228]	; 0xe4
   39320:	mov	r1, r6
   39322:	mov	r0, r5
   39324:	blx	866c <memcpy@plt+0x4>
   39328:	ldr	r3, [pc, #52]	; (39360 <blake2b_final@@Base+0x128>)
   3932a:	movs	r2, #64	; 0x40
   3932c:	movs	r1, #0
   3932e:	add	r3, pc
   39330:	mov	r0, r6
   39332:	ldr	r3, [r3, #0]
   39334:	blx	r3
   39336:	movs	r0, #0
   39338:	ldr	r2, [pc, #40]	; (39364 <blake2b_final@@Base+0x12c>)
   3933a:	ldr	r3, [pc, #32]	; (3935c <blake2b_final@@Base+0x124>)
   3933c:	add	r2, pc
   3933e:	ldr	r3, [r2, r3]
   39340:	ldr	r2, [r3, #0]
   39342:	ldr	r3, [sp, #68]	; 0x44
   39344:	eors	r2, r3
   39346:	beq.n	39352 <blake2b_final@@Base+0x11a>
   39348:	blx	8708 <__stack_chk_fail@plt>
   3934c:	mov.w	r0, #4294967295	; 0xffffffff
   39350:	b.n	39338 <blake2b_final@@Base+0x100>
   39352:	add	sp, #76	; 0x4c
   39354:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   39358:	cbnz	r2, 393aa <blake2b@@Base+0x42>
   3935a:	movs	r2, r0
   3935c:	lsls	r0, r5, #8
   3935e:	movs	r0, r0
   39360:	ldmia	r7!, {r1, r3}
   39362:	movs	r2, r0
   39364:	rev16	r4, r0
   39366:	movs	r2, r0

00039368 <blake2b@@Base>:
   39368:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   3936c:	mov	r6, r0
   3936e:	ldr	r5, [pc, #136]	; (393f8 <blake2b@@Base+0x90>)
   39370:	sub	sp, #248	; 0xf8
   39372:	ldr	r0, [pc, #136]	; (393fc <blake2b@@Base+0x94>)
   39374:	mov	r4, r1
   39376:	add	r5, pc
   39378:	mov	r8, r3
   3937a:	mov	r7, r2
   3937c:	ldrd	r1, r3, [sp, #272]	; 0x110
   39380:	ldr	r0, [r5, r0]
   39382:	ldr	r0, [r0, #0]
   39384:	str	r0, [sp, #244]	; 0xf4
   39386:	mov.w	r0, #0
   3938a:	cbnz	r2, 393aa <blake2b@@Base+0x42>
   3938c:	cmp.w	r8, #0
   39390:	beq.n	393aa <blake2b@@Base+0x42>
   39392:	mov.w	r0, #4294967295	; 0xffffffff
   39396:	ldr	r2, [pc, #104]	; (39400 <blake2b@@Base+0x98>)
   39398:	ldr	r3, [pc, #96]	; (393fc <blake2b@@Base+0x94>)
   3939a:	add	r2, pc
   3939c:	ldr	r3, [r2, r3]
   3939e:	ldr	r2, [r3, #0]
   393a0:	ldr	r3, [sp, #244]	; 0xf4
   393a2:	eors	r2, r3
   393a4:	beq.n	393f2 <blake2b@@Base+0x8a>
   393a6:	blx	8708 <__stack_chk_fail@plt>
   393aa:	cmp	r6, #0
   393ac:	beq.n	39392 <blake2b@@Base+0x2a>
   393ae:	cbnz	r1, 393b4 <blake2b@@Base+0x4c>
   393b0:	cmp	r3, #0
   393b2:	bne.n	39392 <blake2b@@Base+0x2a>
   393b4:	subs	r2, r4, #1
   393b6:	cmp	r2, #63	; 0x3f
   393b8:	bhi.n	39392 <blake2b@@Base+0x2a>
   393ba:	cmp	r3, #64	; 0x40
   393bc:	bhi.n	39392 <blake2b@@Base+0x2a>
   393be:	mov	r5, sp
   393c0:	cbz	r3, 393e8 <blake2b@@Base+0x80>
   393c2:	mov	r2, r1
   393c4:	mov	r0, r5
   393c6:	mov	r1, r4
   393c8:	bl	39160 <blake2b_init_key@@Base>
   393cc:	cmp	r0, #0
   393ce:	blt.n	39392 <blake2b@@Base+0x2a>
   393d0:	mov	r2, r8
   393d2:	mov	r1, r7
   393d4:	mov	r0, r5
   393d6:	bl	39088 <blake2b_update@@Base>
   393da:	mov	r2, r4
   393dc:	mov	r1, r6
   393de:	mov	r0, r5
   393e0:	bl	39238 <blake2b_final@@Base>
   393e4:	movs	r0, #0
   393e6:	b.n	39396 <blake2b@@Base+0x2e>
   393e8:	mov	r1, r4
   393ea:	mov	r0, r5
   393ec:	bl	38ffc <blake2b_init@@Base>
   393f0:	b.n	393cc <blake2b@@Base+0x64>
   393f2:	add	sp, #248	; 0xf8
   393f4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   393f8:	rev	r2, r1
   393fa:	movs	r2, r0
   393fc:	lsls	r0, r5, #8
   393fe:	movs	r0, r0
   39400:	cbnz	r6, 3943c <btrfs_util_strerror@@Base+0x34>
   39402:	movs	r2, r0

00039404 <blake2@@Base>:
   39404:	b.w	39368 <blake2b@@Base>

00039408 <btrfs_util_strerror@@Base>:
   39408:	cmp	r0, #26
   3940a:	bhi.n	39416 <btrfs_util_strerror@@Base+0xe>
   3940c:	ldr	r3, [pc, #12]	; (3941c <btrfs_util_strerror@@Base+0x14>)
   3940e:	add	r3, pc
   39410:	ldr.w	r0, [r3, r0, lsl #2]
   39414:	bx	lr
   39416:	movs	r0, #0
   39418:	bx	lr
   3941a:	nop
   3941c:			; <UNDEFINED> instruction: 0xb7ee
   3941e:	movs	r2, r0
   39420:	subs	r2, r1, #1
   39422:	it	eq
   39424:	bxeq	lr
   39426:	bcc.w	39672 <btrfs_util_strerror@@Base+0x26a>
   3942a:	cmp	r0, r1
   3942c:	bls.w	3965c <btrfs_util_strerror@@Base+0x254>
   39430:	tst	r1, r2
   39432:	beq.w	39664 <btrfs_util_strerror@@Base+0x25c>
   39436:	clz	r3, r0
   3943a:	clz	r2, r1
   3943e:	sub.w	r3, r2, r3
   39442:	rsb	r3, r3, #31
   39446:	add	r2, pc, #16	; (adr r2, 39458 <btrfs_util_strerror@@Base+0x50>)
   39448:	add.w	r3, r2, r3, lsl #4
   3944c:	mov.w	r2, #0
   39450:	mov	pc, r3
   39452:	nop
   39454:	nop.w
   39458:	cmp.w	r0, r1, lsl #31
   3945c:	nop
   3945e:	adc.w	r2, r2, r2
   39462:	it	cs
   39464:	subcs.w	r0, r0, r1, lsl #31
   39468:	cmp.w	r0, r1, lsl #30
   3946c:	nop
   3946e:	adc.w	r2, r2, r2
   39472:	it	cs
   39474:	subcs.w	r0, r0, r1, lsl #30
   39478:	cmp.w	r0, r1, lsl #29
   3947c:	nop
   3947e:	adc.w	r2, r2, r2
   39482:	it	cs
   39484:	subcs.w	r0, r0, r1, lsl #29
   39488:	cmp.w	r0, r1, lsl #28
   3948c:	nop
   3948e:	adc.w	r2, r2, r2
   39492:	it	cs
   39494:	subcs.w	r0, r0, r1, lsl #28
   39498:	cmp.w	r0, r1, lsl #27
   3949c:	nop
   3949e:	adc.w	r2, r2, r2
   394a2:	it	cs
   394a4:	subcs.w	r0, r0, r1, lsl #27
   394a8:	cmp.w	r0, r1, lsl #26
   394ac:	nop
   394ae:	adc.w	r2, r2, r2
   394b2:	it	cs
   394b4:	subcs.w	r0, r0, r1, lsl #26
   394b8:	cmp.w	r0, r1, lsl #25
   394bc:	nop
   394be:	adc.w	r2, r2, r2
   394c2:	it	cs
   394c4:	subcs.w	r0, r0, r1, lsl #25
   394c8:	cmp.w	r0, r1, lsl #24
   394cc:	nop
   394ce:	adc.w	r2, r2, r2
   394d2:	it	cs
   394d4:	subcs.w	r0, r0, r1, lsl #24
   394d8:	cmp.w	r0, r1, lsl #23
   394dc:	nop
   394de:	adc.w	r2, r2, r2
   394e2:	it	cs
   394e4:	subcs.w	r0, r0, r1, lsl #23
   394e8:	cmp.w	r0, r1, lsl #22
   394ec:	nop
   394ee:	adc.w	r2, r2, r2
   394f2:	it	cs
   394f4:	subcs.w	r0, r0, r1, lsl #22
   394f8:	cmp.w	r0, r1, lsl #21
   394fc:	nop
   394fe:	adc.w	r2, r2, r2
   39502:	it	cs
   39504:	subcs.w	r0, r0, r1, lsl #21
   39508:	cmp.w	r0, r1, lsl #20
   3950c:	nop
   3950e:	adc.w	r2, r2, r2
   39512:	it	cs
   39514:	subcs.w	r0, r0, r1, lsl #20
   39518:	cmp.w	r0, r1, lsl #19
   3951c:	nop
   3951e:	adc.w	r2, r2, r2
   39522:	it	cs
   39524:	subcs.w	r0, r0, r1, lsl #19
   39528:	cmp.w	r0, r1, lsl #18
   3952c:	nop
   3952e:	adc.w	r2, r2, r2
   39532:	it	cs
   39534:	subcs.w	r0, r0, r1, lsl #18
   39538:	cmp.w	r0, r1, lsl #17
   3953c:	nop
   3953e:	adc.w	r2, r2, r2
   39542:	it	cs
   39544:	subcs.w	r0, r0, r1, lsl #17
   39548:	cmp.w	r0, r1, lsl #16
   3954c:	nop
   3954e:	adc.w	r2, r2, r2
   39552:	it	cs
   39554:	subcs.w	r0, r0, r1, lsl #16
   39558:	cmp.w	r0, r1, lsl #15
   3955c:	nop
   3955e:	adc.w	r2, r2, r2
   39562:	it	cs
   39564:	subcs.w	r0, r0, r1, lsl #15
   39568:	cmp.w	r0, r1, lsl #14
   3956c:	nop
   3956e:	adc.w	r2, r2, r2
   39572:	it	cs
   39574:	subcs.w	r0, r0, r1, lsl #14
   39578:	cmp.w	r0, r1, lsl #13
   3957c:	nop
   3957e:	adc.w	r2, r2, r2
   39582:	it	cs
   39584:	subcs.w	r0, r0, r1, lsl #13
   39588:	cmp.w	r0, r1, lsl #12
   3958c:	nop
   3958e:	adc.w	r2, r2, r2
   39592:	it	cs
   39594:	subcs.w	r0, r0, r1, lsl #12
   39598:	cmp.w	r0, r1, lsl #11
   3959c:	nop
   3959e:	adc.w	r2, r2, r2
   395a2:	it	cs
   395a4:	subcs.w	r0, r0, r1, lsl #11
   395a8:	cmp.w	r0, r1, lsl #10
   395ac:	nop
   395ae:	adc.w	r2, r2, r2
   395b2:	it	cs
   395b4:	subcs.w	r0, r0, r1, lsl #10
   395b8:	cmp.w	r0, r1, lsl #9
   395bc:	nop
   395be:	adc.w	r2, r2, r2
   395c2:	it	cs
   395c4:	subcs.w	r0, r0, r1, lsl #9
   395c8:	cmp.w	r0, r1, lsl #8
   395cc:	nop
   395ce:	adc.w	r2, r2, r2
   395d2:	it	cs
   395d4:	subcs.w	r0, r0, r1, lsl #8
   395d8:	cmp.w	r0, r1, lsl #7
   395dc:	nop
   395de:	adc.w	r2, r2, r2
   395e2:	it	cs
   395e4:	subcs.w	r0, r0, r1, lsl #7
   395e8:	cmp.w	r0, r1, lsl #6
   395ec:	nop
   395ee:	adc.w	r2, r2, r2
   395f2:	it	cs
   395f4:	subcs.w	r0, r0, r1, lsl #6
   395f8:	cmp.w	r0, r1, lsl #5
   395fc:	nop
   395fe:	adc.w	r2, r2, r2
   39602:	it	cs
   39604:	subcs.w	r0, r0, r1, lsl #5
   39608:	cmp.w	r0, r1, lsl #4
   3960c:	nop
   3960e:	adc.w	r2, r2, r2
   39612:	it	cs
   39614:	subcs.w	r0, r0, r1, lsl #4
   39618:	cmp.w	r0, r1, lsl #3
   3961c:	nop
   3961e:	adc.w	r2, r2, r2
   39622:	it	cs
   39624:	subcs.w	r0, r0, r1, lsl #3
   39628:	cmp.w	r0, r1, lsl #2
   3962c:	nop
   3962e:	adc.w	r2, r2, r2
   39632:	it	cs
   39634:	subcs.w	r0, r0, r1, lsl #2
   39638:	cmp.w	r0, r1, lsl #1
   3963c:	nop
   3963e:	adc.w	r2, r2, r2
   39642:	it	cs
   39644:	subcs.w	r0, r0, r1, lsl #1
   39648:	cmp.w	r0, r1
   3964c:	nop
   3964e:	adc.w	r2, r2, r2
   39652:	it	cs
   39654:	subcs.w	r0, r0, r1
   39658:	mov	r0, r2
   3965a:	bx	lr
   3965c:	ite	eq
   3965e:	moveq	r0, #1
   39660:	movne	r0, #0
   39662:	bx	lr
   39664:	clz	r2, r1
   39668:	rsb	r2, r2, #31
   3966c:	lsr.w	r0, r0, r2
   39670:	bx	lr
   39672:	cbz	r0, 39678 <btrfs_util_strerror@@Base+0x270>
   39674:	mov.w	r0, #4294967295	; 0xffffffff
   39678:	b.w	39c34 <btrfs_util_strerror@@Base+0x82c>
   3967c:	cmp	r1, #0
   3967e:	beq.n	39672 <btrfs_util_strerror@@Base+0x26a>
   39680:	stmdb	sp!, {r0, r1, lr}
   39684:	bl	39420 <btrfs_util_strerror@@Base+0x18>
   39688:	ldmia.w	sp!, {r1, r2, lr}
   3968c:	mul.w	r3, r2, r0
   39690:	sub.w	r1, r1, r3
   39694:	bx	lr
   39696:	nop
   39698:	cmp	r1, #0
   3969a:	beq.w	3991a <btrfs_util_strerror@@Base+0x512>
   3969e:	eor.w	ip, r0, r1
   396a2:	it	mi
   396a4:	negmi	r1, r1
   396a6:	subs	r2, r1, #1
   396a8:	beq.w	398ea <btrfs_util_strerror@@Base+0x4e2>
   396ac:	movs	r3, r0
   396ae:	it	mi
   396b0:	negmi	r3, r0
   396b2:	cmp	r3, r1
   396b4:	bls.w	398f4 <btrfs_util_strerror@@Base+0x4ec>
   396b8:	tst	r1, r2
   396ba:	beq.w	39904 <btrfs_util_strerror@@Base+0x4fc>
   396be:	clz	r2, r3
   396c2:	clz	r0, r1
   396c6:	sub.w	r2, r0, r2
   396ca:	rsb	r2, r2, #31
   396ce:	add	r0, pc, #16	; (adr r0, 396e0 <btrfs_util_strerror@@Base+0x2d8>)
   396d0:	add.w	r2, r0, r2, lsl #4
   396d4:	mov.w	r0, #0
   396d8:	mov	pc, r2
   396da:	nop
   396dc:	nop.w
   396e0:	cmp.w	r3, r1, lsl #31
   396e4:	nop
   396e6:	adc.w	r0, r0, r0
   396ea:	it	cs
   396ec:	subcs.w	r3, r3, r1, lsl #31
   396f0:	cmp.w	r3, r1, lsl #30
   396f4:	nop
   396f6:	adc.w	r0, r0, r0
   396fa:	it	cs
   396fc:	subcs.w	r3, r3, r1, lsl #30
   39700:	cmp.w	r3, r1, lsl #29
   39704:	nop
   39706:	adc.w	r0, r0, r0
   3970a:	it	cs
   3970c:	subcs.w	r3, r3, r1, lsl #29
   39710:	cmp.w	r3, r1, lsl #28
   39714:	nop
   39716:	adc.w	r0, r0, r0
   3971a:	it	cs
   3971c:	subcs.w	r3, r3, r1, lsl #28
   39720:	cmp.w	r3, r1, lsl #27
   39724:	nop
   39726:	adc.w	r0, r0, r0
   3972a:	it	cs
   3972c:	subcs.w	r3, r3, r1, lsl #27
   39730:	cmp.w	r3, r1, lsl #26
   39734:	nop
   39736:	adc.w	r0, r0, r0
   3973a:	it	cs
   3973c:	subcs.w	r3, r3, r1, lsl #26
   39740:	cmp.w	r3, r1, lsl #25
   39744:	nop
   39746:	adc.w	r0, r0, r0
   3974a:	it	cs
   3974c:	subcs.w	r3, r3, r1, lsl #25
   39750:	cmp.w	r3, r1, lsl #24
   39754:	nop
   39756:	adc.w	r0, r0, r0
   3975a:	it	cs
   3975c:	subcs.w	r3, r3, r1, lsl #24
   39760:	cmp.w	r3, r1, lsl #23
   39764:	nop
   39766:	adc.w	r0, r0, r0
   3976a:	it	cs
   3976c:	subcs.w	r3, r3, r1, lsl #23
   39770:	cmp.w	r3, r1, lsl #22
   39774:	nop
   39776:	adc.w	r0, r0, r0
   3977a:	it	cs
   3977c:	subcs.w	r3, r3, r1, lsl #22
   39780:	cmp.w	r3, r1, lsl #21
   39784:	nop
   39786:	adc.w	r0, r0, r0
   3978a:	it	cs
   3978c:	subcs.w	r3, r3, r1, lsl #21
   39790:	cmp.w	r3, r1, lsl #20
   39794:	nop
   39796:	adc.w	r0, r0, r0
   3979a:	it	cs
   3979c:	subcs.w	r3, r3, r1, lsl #20
   397a0:	cmp.w	r3, r1, lsl #19
   397a4:	nop
   397a6:	adc.w	r0, r0, r0
   397aa:	it	cs
   397ac:	subcs.w	r3, r3, r1, lsl #19
   397b0:	cmp.w	r3, r1, lsl #18
   397b4:	nop
   397b6:	adc.w	r0, r0, r0
   397ba:	it	cs
   397bc:	subcs.w	r3, r3, r1, lsl #18
   397c0:	cmp.w	r3, r1, lsl #17
   397c4:	nop
   397c6:	adc.w	r0, r0, r0
   397ca:	it	cs
   397cc:	subcs.w	r3, r3, r1, lsl #17
   397d0:	cmp.w	r3, r1, lsl #16
   397d4:	nop
   397d6:	adc.w	r0, r0, r0
   397da:	it	cs
   397dc:	subcs.w	r3, r3, r1, lsl #16
   397e0:	cmp.w	r3, r1, lsl #15
   397e4:	nop
   397e6:	adc.w	r0, r0, r0
   397ea:	it	cs
   397ec:	subcs.w	r3, r3, r1, lsl #15
   397f0:	cmp.w	r3, r1, lsl #14
   397f4:	nop
   397f6:	adc.w	r0, r0, r0
   397fa:	it	cs
   397fc:	subcs.w	r3, r3, r1, lsl #14
   39800:	cmp.w	r3, r1, lsl #13
   39804:	nop
   39806:	adc.w	r0, r0, r0
   3980a:	it	cs
   3980c:	subcs.w	r3, r3, r1, lsl #13
   39810:	cmp.w	r3, r1, lsl #12
   39814:	nop
   39816:	adc.w	r0, r0, r0
   3981a:	it	cs
   3981c:	subcs.w	r3, r3, r1, lsl #12
   39820:	cmp.w	r3, r1, lsl #11
   39824:	nop
   39826:	adc.w	r0, r0, r0
   3982a:	it	cs
   3982c:	subcs.w	r3, r3, r1, lsl #11
   39830:	cmp.w	r3, r1, lsl #10
   39834:	nop
   39836:	adc.w	r0, r0, r0
   3983a:	it	cs
   3983c:	subcs.w	r3, r3, r1, lsl #10
   39840:	cmp.w	r3, r1, lsl #9
   39844:	nop
   39846:	adc.w	r0, r0, r0
   3984a:	it	cs
   3984c:	subcs.w	r3, r3, r1, lsl #9
   39850:	cmp.w	r3, r1, lsl #8
   39854:	nop
   39856:	adc.w	r0, r0, r0
   3985a:	it	cs
   3985c:	subcs.w	r3, r3, r1, lsl #8
   39860:	cmp.w	r3, r1, lsl #7
   39864:	nop
   39866:	adc.w	r0, r0, r0
   3986a:	it	cs
   3986c:	subcs.w	r3, r3, r1, lsl #7
   39870:	cmp.w	r3, r1, lsl #6
   39874:	nop
   39876:	adc.w	r0, r0, r0
   3987a:	it	cs
   3987c:	subcs.w	r3, r3, r1, lsl #6
   39880:	cmp.w	r3, r1, lsl #5
   39884:	nop
   39886:	adc.w	r0, r0, r0
   3988a:	it	cs
   3988c:	subcs.w	r3, r3, r1, lsl #5
   39890:	cmp.w	r3, r1, lsl #4
   39894:	nop
   39896:	adc.w	r0, r0, r0
   3989a:	it	cs
   3989c:	subcs.w	r3, r3, r1, lsl #4
   398a0:	cmp.w	r3, r1, lsl #3
   398a4:	nop
   398a6:	adc.w	r0, r0, r0
   398aa:	it	cs
   398ac:	subcs.w	r3, r3, r1, lsl #3
   398b0:	cmp.w	r3, r1, lsl #2
   398b4:	nop
   398b6:	adc.w	r0, r0, r0
   398ba:	it	cs
   398bc:	subcs.w	r3, r3, r1, lsl #2
   398c0:	cmp.w	r3, r1, lsl #1
   398c4:	nop
   398c6:	adc.w	r0, r0, r0
   398ca:	it	cs
   398cc:	subcs.w	r3, r3, r1, lsl #1
   398d0:	cmp.w	r3, r1
   398d4:	nop
   398d6:	adc.w	r0, r0, r0
   398da:	it	cs
   398dc:	subcs.w	r3, r3, r1
   398e0:	cmp.w	ip, #0
   398e4:	it	mi
   398e6:	negmi	r0, r0
   398e8:	bx	lr
   398ea:	teq	ip, r0
   398ee:	it	mi
   398f0:	negmi	r0, r0
   398f2:	bx	lr
   398f4:	it	cc
   398f6:	movcc	r0, #0
   398f8:	itt	eq
   398fa:	moveq.w	r0, ip, asr #31
   398fe:	orreq.w	r0, r0, #1
   39902:	bx	lr
   39904:	clz	r2, r1
   39908:	rsb	r2, r2, #31
   3990c:	cmp.w	ip, #0
   39910:	lsr.w	r0, r3, r2
   39914:	it	mi
   39916:	negmi	r0, r0
   39918:	bx	lr
   3991a:	cmp	r0, #0
   3991c:	it	gt
   3991e:	mvngt.w	r0, #2147483648	; 0x80000000
   39922:	it	lt
   39924:	movlt.w	r0, #2147483648	; 0x80000000
   39928:	b.w	39c34 <btrfs_util_strerror@@Base+0x82c>
   3992c:	cmp	r1, #0
   3992e:	beq.n	3991a <btrfs_util_strerror@@Base+0x512>
   39930:	stmdb	sp!, {r0, r1, lr}
   39934:	bl	3969e <btrfs_util_strerror@@Base+0x296>
   39938:	ldmia.w	sp!, {r1, r2, lr}
   3993c:	mul.w	r3, r2, r0
   39940:	sub.w	r1, r1, r3
   39944:	bx	lr
   39946:	nop
   39948:	eor.w	r0, r0, #2147483648	; 0x80000000
   3994c:	b.n	39954 <btrfs_util_strerror@@Base+0x54c>
   3994e:	nop
   39950:	eor.w	r1, r1, #2147483648	; 0x80000000
   39954:	lsls	r2, r0, #1
   39956:	itttt	ne
   39958:	movsne.w	r3, r1, lsl #1
   3995c:	teqne	r2, r3
   39960:	mvnsne.w	ip, r2, asr #24
   39964:	mvnsne.w	ip, r3, asr #24
   39968:	beq.n	39a40 <btrfs_util_strerror@@Base+0x638>
   3996a:	mov.w	r2, r2, lsr #24
   3996e:	rsbs	r3, r2, r3, lsr #24
   39972:	itttt	gt
   39974:	addgt	r2, r2, r3
   39976:	eorgt	r1, r0
   39978:	eorgt	r0, r1
   3997a:	eorgt	r1, r0
   3997c:	it	lt
   3997e:	neglt	r3, r3
   39980:	cmp	r3, #25
   39982:	it	hi
   39984:	bxhi	lr
   39986:	tst.w	r0, #2147483648	; 0x80000000
   3998a:	orr.w	r0, r0, #8388608	; 0x800000
   3998e:	bic.w	r0, r0, #4278190080	; 0xff000000
   39992:	it	ne
   39994:	negne	r0, r0
   39996:	tst.w	r1, #2147483648	; 0x80000000
   3999a:	orr.w	r1, r1, #8388608	; 0x800000
   3999e:	bic.w	r1, r1, #4278190080	; 0xff000000
   399a2:	it	ne
   399a4:	negne	r1, r1
   399a6:	teq	r2, r3
   399aa:	beq.n	39a2c <btrfs_util_strerror@@Base+0x624>
   399ac:	sub.w	r2, r2, #1
   399b0:	asr.w	ip, r1, r3
   399b4:	adds.w	r0, r0, ip
   399b8:	rsb	r3, r3, #32
   399bc:	lsl.w	r1, r1, r3
   399c0:	and.w	r3, r0, #2147483648	; 0x80000000
   399c4:	bpl.n	399cc <btrfs_util_strerror@@Base+0x5c4>
   399c6:	negs	r1, r1
   399c8:	sbc.w	r0, r0, r0, lsl #1
   399cc:	cmp.w	r0, #8388608	; 0x800000
   399d0:	bcc.n	399fa <btrfs_util_strerror@@Base+0x5f2>
   399d2:	cmp.w	r0, #16777216	; 0x1000000
   399d6:	bcc.n	399e6 <btrfs_util_strerror@@Base+0x5de>
   399d8:	lsrs	r0, r0, #1
   399da:	mov.w	r1, r1, rrx
   399de:	add.w	r2, r2, #1
   399e2:	cmp	r2, #254	; 0xfe
   399e4:	bcs.n	39a8a <btrfs_util_strerror@@Base+0x682>
   399e6:	cmp.w	r1, #2147483648	; 0x80000000
   399ea:	adc.w	r0, r0, r2, lsl #23
   399ee:	it	eq
   399f0:	biceq.w	r0, r0, #1
   399f4:	orr.w	r0, r0, r3
   399f8:	bx	lr
   399fa:	lsls	r1, r1, #1
   399fc:	adc.w	r0, r0, r0
   39a00:	subs	r2, #1
   39a02:	it	cs
   39a04:	cmpcs.w	r0, #8388608	; 0x800000
   39a08:	bcs.n	399e6 <btrfs_util_strerror@@Base+0x5de>
   39a0a:	clz	ip, r0
   39a0e:	sub.w	ip, ip, #8
   39a12:	subs.w	r2, r2, ip
   39a16:	lsl.w	r0, r0, ip
   39a1a:	itet	ge
   39a1c:	addge.w	r0, r0, r2, lsl #23
   39a20:	neglt	r2, r2
   39a22:	orrge	r0, r3
   39a24:	itt	lt
   39a26:	lsrlt	r0, r2
   39a28:	orrlt	r0, r3
   39a2a:	bx	lr
   39a2c:	teq	r2, #0
   39a30:	eor.w	r1, r1, #8388608	; 0x800000
   39a34:	itte	eq
   39a36:	eoreq.w	r0, r0, #8388608	; 0x800000
   39a3a:	addeq	r2, #1
   39a3c:	subne	r3, #1
   39a3e:	b.n	399ac <btrfs_util_strerror@@Base+0x5a4>
   39a40:	mov.w	r3, r1, lsl #1
   39a44:	mvns.w	ip, r2, asr #24
   39a48:	it	ne
   39a4a:	mvnsne.w	ip, r3, asr #24
   39a4e:	beq.n	39a94 <btrfs_util_strerror@@Base+0x68c>
   39a50:	teq	r2, r3
   39a54:	beq.n	39a60 <btrfs_util_strerror@@Base+0x658>
   39a56:	teq	r2, #0
   39a5a:	it	eq
   39a5c:	moveq	r0, r1
   39a5e:	bx	lr
   39a60:	teq	r0, r1
   39a64:	itt	ne
   39a66:	movne	r0, #0
   39a68:	bxne	lr
   39a6a:	tst.w	r2, #4278190080	; 0xff000000
   39a6e:	bne.n	39a7a <btrfs_util_strerror@@Base+0x672>
   39a70:	lsls	r0, r0, #1
   39a72:	it	cs
   39a74:	orrcs.w	r0, r0, #2147483648	; 0x80000000
   39a78:	bx	lr
   39a7a:	adds.w	r2, r2, #33554432	; 0x2000000
   39a7e:	itt	cc
   39a80:	addcc.w	r0, r0, #8388608	; 0x800000
   39a84:	bxcc	lr
   39a86:	and.w	r3, r0, #2147483648	; 0x80000000
   39a8a:	orr.w	r0, r3, #2130706432	; 0x7f000000
   39a8e:	orr.w	r0, r0, #8388608	; 0x800000
   39a92:	bx	lr
   39a94:	mvns.w	r2, r2, asr #24
   39a98:	itet	ne
   39a9a:	movne	r0, r1
   39a9c:	mvnseq.w	r3, r3, asr #24
   39aa0:	movne	r1, r0
   39aa2:	lsls	r2, r0, #9
   39aa4:	itte	eq
   39aa6:	movseq.w	r3, r1, lsl #9
   39aaa:	teqeq	r0, r1
   39aae:	orrne.w	r0, r0, #4194304	; 0x400000
   39ab2:	bx	lr
   39ab4:	mov.w	r3, #0
   39ab8:	b.n	39ac4 <btrfs_util_strerror@@Base+0x6bc>
   39aba:	nop
   39abc:	ands.w	r3, r0, #2147483648	; 0x80000000
   39ac0:	it	mi
   39ac2:	negmi	r0, r0
   39ac4:	movs.w	ip, r0
   39ac8:	it	eq
   39aca:	bxeq	lr
   39acc:	orr.w	r3, r3, #1258291200	; 0x4b000000
   39ad0:	mov	r1, r0
   39ad2:	mov.w	r0, #0
   39ad6:	b.n	39b12 <btrfs_util_strerror@@Base+0x70a>
   39ad8:	orrs.w	r2, r0, r1
   39adc:	it	eq
   39ade:	bxeq	lr
   39ae0:	mov.w	r3, #0
   39ae4:	b.n	39afc <btrfs_util_strerror@@Base+0x6f4>
   39ae6:	nop
   39ae8:	orrs.w	r2, r0, r1
   39aec:	it	eq
   39aee:	bxeq	lr
   39af0:	ands.w	r3, r1, #2147483648	; 0x80000000
   39af4:	bpl.n	39afc <btrfs_util_strerror@@Base+0x6f4>
   39af6:	negs	r0, r0
   39af8:	sbc.w	r1, r1, r1, lsl #1
   39afc:	movs.w	ip, r1
   39b00:	ittt	eq
   39b02:	moveq	ip, r0
   39b04:	moveq	r1, r0
   39b06:	moveq	r0, #0
   39b08:	orr.w	r3, r3, #1526726656	; 0x5b000000
   39b0c:	it	eq
   39b0e:	subeq.w	r3, r3, #268435456	; 0x10000000
   39b12:	sub.w	r3, r3, #8388608	; 0x800000
   39b16:	clz	r2, ip
   39b1a:	subs	r2, #8
   39b1c:	sub.w	r3, r3, r2, lsl #23
   39b20:	blt.n	39b44 <btrfs_util_strerror@@Base+0x73c>
   39b22:	lsl.w	ip, r1, r2
   39b26:	add	r3, ip
   39b28:	lsl.w	ip, r0, r2
   39b2c:	rsb	r2, r2, #32
   39b30:	cmp.w	ip, #2147483648	; 0x80000000
   39b34:	lsr.w	r2, r0, r2
   39b38:	adc.w	r0, r3, r2
   39b3c:	it	eq
   39b3e:	biceq.w	r0, r0, #1
   39b42:	bx	lr
   39b44:	add.w	r2, r2, #32
   39b48:	lsl.w	ip, r1, r2
   39b4c:	rsb	r2, r2, #32
   39b50:	orrs.w	r0, r0, ip, lsl #1
   39b54:	lsr.w	r2, r1, r2
   39b58:	adc.w	r0, r3, r2
   39b5c:	it	eq
   39b5e:	biceq.w	r0, r0, ip, lsr #31
   39b62:	bx	lr
   39b64:	cbnz	r3, 39b86 <btrfs_util_strerror@@Base+0x77e>
   39b66:	cbnz	r2, 39b86 <btrfs_util_strerror@@Base+0x77e>
   39b68:	cmp	r1, #0
   39b6a:	ittt	lt
   39b6c:	movlt	r0, #0
   39b6e:	movlt.w	r1, #2147483648	; 0x80000000
   39b72:	blt.n	39b82 <btrfs_util_strerror@@Base+0x77a>
   39b74:	it	eq
   39b76:	cmpeq	r0, #0
   39b78:	itt	ne
   39b7a:	mvnne.w	r1, #2147483648	; 0x80000000
   39b7e:	movne.w	r0, #4294967295	; 0xffffffff
   39b82:	b.w	39c34 <btrfs_util_strerror@@Base+0x82c>
   39b86:	sub.w	ip, sp, #8
   39b8a:	strd	ip, lr, [sp, #-16]!
   39b8e:	cmp	r1, #0
   39b90:	blt.n	39ba6 <btrfs_util_strerror@@Base+0x79e>
   39b92:	cmp	r3, #0
   39b94:	blt.n	39bcc <btrfs_util_strerror@@Base+0x7c4>
   39b96:	bl	39c40 <btrfs_util_strerror@@Base+0x838>
   39b9a:	ldr.w	lr, [sp, #4]
   39b9e:	ldrd	r2, r3, [sp, #8]
   39ba2:	add	sp, #16
   39ba4:	bx	lr
   39ba6:	negs	r0, r0
   39ba8:	sbc.w	r1, r1, r1, lsl #1
   39bac:	cmp	r3, #0
   39bae:	blt.n	39be8 <btrfs_util_strerror@@Base+0x7e0>
   39bb0:	bl	39c40 <btrfs_util_strerror@@Base+0x838>
   39bb4:	ldr.w	lr, [sp, #4]
   39bb8:	ldrd	r2, r3, [sp, #8]
   39bbc:	add	sp, #16
   39bbe:	negs	r0, r0
   39bc0:	sbc.w	r1, r1, r1, lsl #1
   39bc4:	negs	r2, r2
   39bc6:	sbc.w	r3, r3, r3, lsl #1
   39bca:	bx	lr
   39bcc:	negs	r2, r2
   39bce:	sbc.w	r3, r3, r3, lsl #1
   39bd2:	bl	39c40 <btrfs_util_strerror@@Base+0x838>
   39bd6:	ldr.w	lr, [sp, #4]
   39bda:	ldrd	r2, r3, [sp, #8]
   39bde:	add	sp, #16
   39be0:	negs	r0, r0
   39be2:	sbc.w	r1, r1, r1, lsl #1
   39be6:	bx	lr
   39be8:	negs	r2, r2
   39bea:	sbc.w	r3, r3, r3, lsl #1
   39bee:	bl	39c40 <btrfs_util_strerror@@Base+0x838>
   39bf2:	ldr.w	lr, [sp, #4]
   39bf6:	ldrd	r2, r3, [sp, #8]
   39bfa:	add	sp, #16
   39bfc:	negs	r2, r2
   39bfe:	sbc.w	r3, r3, r3, lsl #1
   39c02:	bx	lr
   39c04:	cbnz	r3, 39c1c <btrfs_util_strerror@@Base+0x814>
   39c06:	cbnz	r2, 39c1c <btrfs_util_strerror@@Base+0x814>
   39c08:	cmp	r1, #0
   39c0a:	it	eq
   39c0c:	cmpeq	r0, #0
   39c0e:	itt	ne
   39c10:	movne.w	r1, #4294967295	; 0xffffffff
   39c14:	movne.w	r0, #4294967295	; 0xffffffff
   39c18:	b.w	39c34 <btrfs_util_strerror@@Base+0x82c>
   39c1c:	sub.w	ip, sp, #8
   39c20:	strd	ip, lr, [sp, #-16]!
   39c24:	bl	39c40 <btrfs_util_strerror@@Base+0x838>
   39c28:	ldr.w	lr, [sp, #4]
   39c2c:	ldrd	r2, r3, [sp, #8]
   39c30:	add	sp, #16
   39c32:	bx	lr
   39c34:	push	{r1, lr}
   39c36:	mov.w	r0, #8
   39c3a:	blx	8594 <raise@plt>
   39c3e:	pop	{r1, pc}
   39c40:	cmp	r1, r3
   39c42:	it	eq
   39c44:	cmpeq	r0, r2
   39c46:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39c4a:	mov	r4, r0
   39c4c:	it	cc
   39c4e:	movcc	r0, #0
   39c50:	mov	r5, r1
   39c52:	ldr.w	ip, [sp, #36]	; 0x24
   39c56:	it	cc
   39c58:	movcc	r1, r0
   39c5a:	bcc.n	39d34 <btrfs_util_strerror@@Base+0x92c>
   39c5c:	mov	r8, r2
   39c5e:	mov	r9, r3
   39c60:	clz	r2, r3
   39c64:	cmp	r3, #0
   39c66:	beq.n	39d4a <btrfs_util_strerror@@Base+0x942>
   39c68:	clz	r3, r5
   39c6c:	cmp	r5, #0
   39c6e:	beq.n	39d42 <btrfs_util_strerror@@Base+0x93a>
   39c70:	subs	r2, r2, r3
   39c72:	sub.w	lr, r2, #32
   39c76:	lsl.w	fp, r9, r2
   39c7a:	lsl.w	r3, r8, lr
   39c7e:	rsb	r7, r2, #32
   39c82:	orr.w	fp, fp, r3
   39c86:	lsr.w	r3, r8, r7
   39c8a:	orr.w	fp, fp, r3
   39c8e:	lsl.w	sl, r8, r2
   39c92:	cmp	r5, fp
   39c94:	it	eq
   39c96:	cmpeq	r4, sl
   39c98:	itt	cc
   39c9a:	movcc	r0, #0
   39c9c:	movcc	r1, r0
   39c9e:	bcc.n	39cb6 <btrfs_util_strerror@@Base+0x8ae>
   39ca0:	movs	r0, #1
   39ca2:	subs.w	r4, r4, sl
   39ca6:	lsl.w	r1, r0, lr
   39caa:	lsr.w	r3, r0, r7
   39cae:	sbc.w	r5, r5, fp
   39cb2:	orrs	r1, r3
   39cb4:	lsls	r0, r2
   39cb6:	cmp	r2, #0
   39cb8:	beq.n	39d34 <btrfs_util_strerror@@Base+0x92c>
   39cba:	mov.w	r8, sl, lsr #1
   39cbe:	mov.w	r9, fp, lsr #1
   39cc2:	orr.w	r8, r8, fp, lsl #31
   39cc6:	mov	r6, r2
   39cc8:	b.n	39ce2 <btrfs_util_strerror@@Base+0x8da>
   39cca:	subs.w	r3, r4, r8
   39cce:	sbc.w	sl, r5, r9
   39cd2:	adds	r3, r3, r3
   39cd4:	adc.w	sl, sl, sl
   39cd8:	adds	r4, r3, #1
   39cda:	adc.w	r5, sl, #0
   39cde:	subs	r6, #1
   39ce0:	beq.n	39cf2 <btrfs_util_strerror@@Base+0x8ea>
   39ce2:	cmp	r5, r9
   39ce4:	it	eq
   39ce6:	cmpeq	r4, r8
   39ce8:	bcs.n	39cca <btrfs_util_strerror@@Base+0x8c2>
   39cea:	adds	r4, r4, r4
   39cec:	adcs	r5, r5
   39cee:	subs	r6, #1
   39cf0:	bne.n	39ce2 <btrfs_util_strerror@@Base+0x8da>
   39cf2:	lsl.w	r7, r5, r7
   39cf6:	lsr.w	r3, r4, r2
   39cfa:	orrs	r3, r7
   39cfc:	lsr.w	lr, r5, lr
   39d00:	adds	r0, r0, r4
   39d02:	lsr.w	r8, r5, r2
   39d06:	orr.w	r4, r3, lr
   39d0a:	sub.w	r7, r2, #32
   39d0e:	rsb	r6, r2, #32
   39d12:	lsl.w	r3, r8, r2
   39d16:	lsl.w	r7, r4, r7
   39d1a:	lsl.w	r2, r4, r2
   39d1e:	orr.w	r3, r3, r7
   39d22:	lsr.w	r6, r4, r6
   39d26:	adc.w	r1, r5, r1
   39d2a:	orrs	r3, r6
   39d2c:	subs	r0, r0, r2
   39d2e:	mov	r5, r8
   39d30:	sbc.w	r1, r1, r3
   39d34:	cmp.w	ip, #0
   39d38:	beq.n	39d3e <btrfs_util_strerror@@Base+0x936>
   39d3a:	strd	r4, r5, [ip]
   39d3e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39d42:	clz	r3, r4
   39d46:	adds	r3, #32
   39d48:	b.n	39c70 <btrfs_util_strerror@@Base+0x868>
   39d4a:	clz	r2, r8
   39d4e:	clz	r3, r5
   39d52:	adds	r2, #32
   39d54:	cmp	r5, #0
   39d56:	bne.n	39c70 <btrfs_util_strerror@@Base+0x868>
   39d58:	b.n	39d42 <btrfs_util_strerror@@Base+0x93a>
   39d5a:	nop

00039d5c <__libc_csu_init@@Base>:
   39d5c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   39d60:	mov	r7, r0
   39d62:	ldr	r6, [pc, #48]	; (39d94 <__libc_csu_init@@Base+0x38>)
   39d64:	mov	r8, r1
   39d66:	ldr	r5, [pc, #48]	; (39d98 <__libc_csu_init@@Base+0x3c>)
   39d68:	mov	r9, r2
   39d6a:	add	r6, pc
   39d6c:	blx	8564 <calloc@plt-0x20>
   39d70:	add	r5, pc
   39d72:	subs	r6, r6, r5
   39d74:	asrs	r6, r6, #2
   39d76:	beq.n	39d8e <__libc_csu_init@@Base+0x32>
   39d78:	subs	r5, #4
   39d7a:	movs	r4, #0
   39d7c:	ldr.w	r3, [r5, #4]!
   39d80:	adds	r4, #1
   39d82:	mov	r2, r9
   39d84:	mov	r1, r8
   39d86:	mov	r0, r7
   39d88:	blx	r3
   39d8a:	cmp	r6, r4
   39d8c:	bne.n	39d7c <__libc_csu_init@@Base+0x20>
   39d8e:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   39d92:	nop
   39d94:	add	r0, sp, #88	; 0x58
   39d96:	movs	r2, r0
   39d98:	add	r0, sp, #48	; 0x30
   39d9a:	movs	r2, r0

00039d9c <__libc_csu_fini@@Base>:
   39d9c:	bx	lr
   39d9e:	nop
   39da0:	mov	r2, r1
   39da2:	mov	r1, r0
   39da4:	movs	r0, #3
   39da6:	b.w	876c <__xstat@plt>
   39daa:	nop
   39dac:	mov	r2, r1
   39dae:	mov	r1, r0
   39db0:	movs	r0, #3
   39db2:	b.w	8894 <__fxstat@plt>
   39db6:	nop
   39db8:	mov	r2, r1
   39dba:	mov	r1, r0
   39dbc:	movs	r0, #3
   39dbe:	b.w	8b4c <__xstat64@plt>
   39dc2:	nop
   39dc4:	mov	r2, r1
   39dc6:	mov	r1, r0
   39dc8:	movs	r0, #3
   39dca:	b.w	8788 <__fxstat64@plt>
   39dce:	nop

Disassembly of section .fini:

00039dd0 <.fini>:
   39dd0:	push	{r3, lr}
   39dd4:	pop	{r3, pc}
