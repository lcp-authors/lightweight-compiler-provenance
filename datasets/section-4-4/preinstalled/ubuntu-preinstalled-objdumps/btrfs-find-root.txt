
ubuntu-preinstalled/btrfs-find-root:     file format elf32-littlearm


Disassembly of section .init:

00008378 <.init>:
    8378:	push	{r3, lr}
    837c:	bl	8dec <_start@@Base+0x48>
    8380:	pop	{r3, pc}

Disassembly of section .plt:

00008384 <calloc@plt-0x14>:
    8384:	push	{lr}		; (str lr, [sp, #-4]!)
    8388:	ldr	lr, [pc, #4]	; 8394 <calloc@plt-0x4>
    838c:	add	lr, pc, lr
    8390:	ldr	pc, [lr, #8]!
    8394:	strdeq	fp, [r5], -r4

00008398 <calloc@plt>:
    8398:			; <UNDEFINED> instruction: 0xe7fd4778
    839c:	add	ip, pc, #0, 12
    83a0:	add	ip, ip, #372736	; 0x5b000
    83a4:	ldr	pc, [ip, #2544]!	; 0x9f0

000083a8 <raise@plt>:
    83a8:	add	ip, pc, #0, 12
    83ac:	add	ip, ip, #372736	; 0x5b000
    83b0:	ldr	pc, [ip, #2536]!	; 0x9e8

000083b4 <fsync@plt>:
    83b4:	add	ip, pc, #0, 12
    83b8:	add	ip, ip, #372736	; 0x5b000
    83bc:	ldr	pc, [ip, #2528]!	; 0x9e0

000083c0 <strcmp@plt>:
    83c0:	add	ip, pc, #0, 12
    83c4:	add	ip, ip, #372736	; 0x5b000
    83c8:	ldr	pc, [ip, #2520]!	; 0x9d8

000083cc <__cxa_finalize@plt>:
    83cc:	add	ip, pc, #0, 12
    83d0:	add	ip, ip, #372736	; 0x5b000
    83d4:	ldr	pc, [ip, #2512]!	; 0x9d0

000083d8 <uuid_unparse@plt>:
    83d8:	add	ip, pc, #0, 12
    83dc:	add	ip, ip, #372736	; 0x5b000
    83e0:	ldr	pc, [ip, #2504]!	; 0x9c8

000083e4 <posix_fadvise64@plt>:
    83e4:	add	ip, pc, #0, 12
    83e8:	add	ip, ip, #372736	; 0x5b000
    83ec:	ldr	pc, [ip, #2496]!	; 0x9c0

000083f0 <blkid_probe_lookup_value@plt>:
    83f0:	add	ip, pc, #0, 12
    83f4:	add	ip, ip, #372736	; 0x5b000
    83f8:	ldr	pc, [ip, #2488]!	; 0x9b8

000083fc <read@plt>:
    83fc:	add	ip, pc, #0, 12
    8400:	add	ip, ip, #372736	; 0x5b000
    8404:	ldr	pc, [ip, #2480]!	; 0x9b0

00008408 <fflush@plt>:
    8408:	add	ip, pc, #0, 12
    840c:	add	ip, ip, #372736	; 0x5b000
    8410:	ldr	pc, [ip, #2472]!	; 0x9a8

00008414 <unlinkat@plt>:
    8414:	add	ip, pc, #0, 12
    8418:	add	ip, ip, #372736	; 0x5b000
    841c:	ldr	pc, [ip, #2464]!	; 0x9a0

00008420 <memmove@plt>:
    8420:			; <UNDEFINED> instruction: 0xe7fd4778
    8424:	add	ip, pc, #0, 12
    8428:	add	ip, ip, #372736	; 0x5b000
    842c:	ldr	pc, [ip, #2452]!	; 0x994

00008430 <free@plt>:
    8430:			; <UNDEFINED> instruction: 0xe7fd4778
    8434:	add	ip, pc, #0, 12
    8438:	add	ip, ip, #372736	; 0x5b000
    843c:	ldr	pc, [ip, #2440]!	; 0x988

00008440 <fgets@plt>:
    8440:	add	ip, pc, #0, 12
    8444:	add	ip, ip, #372736	; 0x5b000
    8448:	ldr	pc, [ip, #2432]!	; 0x980

0000844c <fgetxattr@plt>:
    844c:	add	ip, pc, #0, 12
    8450:	add	ip, ip, #372736	; 0x5b000
    8454:	ldr	pc, [ip, #2424]!	; 0x978

00008458 <statfs@plt>:
    8458:	add	ip, pc, #0, 12
    845c:	add	ip, ip, #372736	; 0x5b000
    8460:	ldr	pc, [ip, #2416]!	; 0x970

00008464 <strndup@plt>:
    8464:	add	ip, pc, #0, 12
    8468:	add	ip, ip, #372736	; 0x5b000
    846c:	ldr	pc, [ip, #2408]!	; 0x968

00008470 <__vsnprintf_chk@plt>:
    8470:	add	ip, pc, #0, 12
    8474:	add	ip, ip, #372736	; 0x5b000
    8478:	ldr	pc, [ip, #2400]!	; 0x960

0000847c <memcpy@plt>:
    847c:			; <UNDEFINED> instruction: 0xe7fd4778
    8480:	add	ip, pc, #0, 12
    8484:	add	ip, ip, #372736	; 0x5b000
    8488:	ldr	pc, [ip, #2388]!	; 0x954

0000848c <__memset_chk@plt>:
    848c:	add	ip, pc, #0, 12
    8490:	add	ip, ip, #372736	; 0x5b000
    8494:	ldr	pc, [ip, #2380]!	; 0x94c

00008498 <time@plt>:
    8498:	add	ip, pc, #0, 12
    849c:	add	ip, ip, #372736	; 0x5b000
    84a0:	ldr	pc, [ip, #2372]!	; 0x944

000084a4 <memcmp@plt>:
    84a4:			; <UNDEFINED> instruction: 0xe7fd4778
    84a8:	add	ip, pc, #0, 12
    84ac:	add	ip, ip, #372736	; 0x5b000
    84b0:	ldr	pc, [ip, #2360]!	; 0x938

000084b4 <__vprintf_chk@plt>:
    84b4:	add	ip, pc, #0, 12
    84b8:	add	ip, ip, #372736	; 0x5b000
    84bc:	ldr	pc, [ip, #2352]!	; 0x930

000084c0 <jrand48@plt>:
    84c0:			; <UNDEFINED> instruction: 0xe7fd4778
    84c4:	add	ip, pc, #0, 12
    84c8:	add	ip, ip, #372736	; 0x5b000
    84cc:	ldr	pc, [ip, #2340]!	; 0x924

000084d0 <blkid_put_cache@plt>:
    84d0:	add	ip, pc, #0, 12
    84d4:	add	ip, ip, #372736	; 0x5b000
    84d8:	ldr	pc, [ip, #2332]!	; 0x91c

000084dc <uname@plt>:
    84dc:	add	ip, pc, #0, 12
    84e0:	add	ip, ip, #372736	; 0x5b000
    84e4:	ldr	pc, [ip, #2324]!	; 0x914

000084e8 <blkid_probe_set_device@plt>:
    84e8:	add	ip, pc, #0, 12
    84ec:	add	ip, ip, #372736	; 0x5b000
    84f0:	ldr	pc, [ip, #2316]!	; 0x90c

000084f4 <strdup@plt>:
    84f4:			; <UNDEFINED> instruction: 0xe7fd4778
    84f8:	add	ip, pc, #0, 12
    84fc:	add	ip, ip, #372736	; 0x5b000
    8500:	ldr	pc, [ip, #2304]!	; 0x900

00008504 <openat@plt>:
    8504:	add	ip, pc, #0, 12
    8508:	add	ip, ip, #372736	; 0x5b000
    850c:	ldr	pc, [ip, #2296]!	; 0x8f8

00008510 <__stack_chk_fail@plt>:
    8510:	add	ip, pc, #0, 12
    8514:	add	ip, ip, #372736	; 0x5b000
    8518:	ldr	pc, [ip, #2288]!	; 0x8f0

0000851c <blkid_dev_iterate_begin@plt>:
    851c:	add	ip, pc, #0, 12
    8520:	add	ip, ip, #372736	; 0x5b000
    8524:	ldr	pc, [ip, #2280]!	; 0x8e8

00008528 <realloc@plt>:
    8528:			; <UNDEFINED> instruction: 0xe7fd4778
    852c:	add	ip, pc, #0, 12
    8530:	add	ip, ip, #372736	; 0x5b000
    8534:	ldr	pc, [ip, #2268]!	; 0x8dc

00008538 <localtime_r@plt>:
    8538:	add	ip, pc, #0, 12
    853c:	add	ip, ip, #372736	; 0x5b000
    8540:	ldr	pc, [ip, #2260]!	; 0x8d4

00008544 <uuid_compare@plt>:
    8544:	add	ip, pc, #0, 12
    8548:	add	ip, ip, #372736	; 0x5b000
    854c:	ldr	pc, [ip, #2252]!	; 0x8cc

00008550 <strcasecmp@plt>:
    8550:	add	ip, pc, #0, 12
    8554:	add	ip, ip, #372736	; 0x5b000
    8558:	ldr	pc, [ip, #2244]!	; 0x8c4

0000855c <geteuid@plt>:
    855c:	add	ip, pc, #0, 12
    8560:	add	ip, ip, #372736	; 0x5b000
    8564:	ldr	pc, [ip, #2236]!	; 0x8bc

00008568 <perror@plt>:
    8568:	add	ip, pc, #0, 12
    856c:	add	ip, ip, #372736	; 0x5b000
    8570:	ldr	pc, [ip, #2228]!	; 0x8b4

00008574 <__xstat@plt>:
    8574:			; <UNDEFINED> instruction: 0xe7fd4778
    8578:	add	ip, pc, #0, 12
    857c:	add	ip, ip, #372736	; 0x5b000
    8580:	ldr	pc, [ip, #2216]!	; 0x8a8

00008584 <blkid_dev_set_search@plt>:
    8584:	add	ip, pc, #0, 12
    8588:	add	ip, ip, #372736	; 0x5b000
    858c:	ldr	pc, [ip, #2208]!	; 0x8a0

00008590 <__fxstat64@plt>:
    8590:			; <UNDEFINED> instruction: 0xe7fd4778
    8594:	add	ip, pc, #0, 12
    8598:	add	ip, ip, #372736	; 0x5b000
    859c:	ldr	pc, [ip, #2196]!	; 0x894

000085a0 <__memcpy_chk@plt>:
    85a0:	add	ip, pc, #0, 12
    85a4:	add	ip, ip, #372736	; 0x5b000
    85a8:	ldr	pc, [ip, #2188]!	; 0x88c

000085ac <strcat@plt>:
    85ac:			; <UNDEFINED> instruction: 0xe7fd4778
    85b0:	add	ip, pc, #0, 12
    85b4:	add	ip, ip, #372736	; 0x5b000
    85b8:	ldr	pc, [ip, #2176]!	; 0x880

000085bc <ioctl@plt>:
    85bc:	add	ip, pc, #0, 12
    85c0:	add	ip, ip, #372736	; 0x5b000
    85c4:	ldr	pc, [ip, #2168]!	; 0x878

000085c8 <lseek64@plt>:
    85c8:	add	ip, pc, #0, 12
    85cc:	add	ip, ip, #372736	; 0x5b000
    85d0:	ldr	pc, [ip, #2160]!	; 0x870

000085d4 <strtoll@plt>:
    85d4:	add	ip, pc, #0, 12
    85d8:	add	ip, ip, #372736	; 0x5b000
    85dc:	ldr	pc, [ip, #2152]!	; 0x868

000085e0 <__realpath_chk@plt>:
    85e0:	add	ip, pc, #0, 12
    85e4:	add	ip, ip, #372736	; 0x5b000
    85e8:	ldr	pc, [ip, #2144]!	; 0x860

000085ec <readahead@plt>:
    85ec:	add	ip, pc, #0, 12
    85f0:	add	ip, ip, #372736	; 0x5b000
    85f4:	ldr	pc, [ip, #2136]!	; 0x858

000085f8 <strcpy@plt>:
    85f8:	add	ip, pc, #0, 12
    85fc:	add	ip, ip, #372736	; 0x5b000
    8600:	ldr	pc, [ip, #2128]!	; 0x850

00008604 <gettimeofday@plt>:
    8604:	add	ip, pc, #0, 12
    8608:	add	ip, ip, #372736	; 0x5b000
    860c:	ldr	pc, [ip, #2120]!	; 0x848

00008610 <pread64@plt>:
    8610:	add	ip, pc, #0, 12
    8614:	add	ip, ip, #372736	; 0x5b000
    8618:	ldr	pc, [ip, #2112]!	; 0x840

0000861c <pthread_create@plt>:
    861c:	add	ip, pc, #0, 12
    8620:	add	ip, ip, #372736	; 0x5b000
    8624:	ldr	pc, [ip, #2104]!	; 0x838

00008628 <strtok_r@plt>:
    8628:	add	ip, pc, #0, 12
    862c:	add	ip, ip, #372736	; 0x5b000
    8630:	ldr	pc, [ip, #2096]!	; 0x830

00008634 <getmntent@plt>:
    8634:	add	ip, pc, #0, 12
    8638:	add	ip, ip, #372736	; 0x5b000
    863c:	ldr	pc, [ip, #2088]!	; 0x828

00008640 <opendir@plt>:
    8640:	add	ip, pc, #0, 12
    8644:	add	ip, ip, #372736	; 0x5b000
    8648:	ldr	pc, [ip, #2080]!	; 0x820

0000864c <open64@plt>:
    864c:	add	ip, pc, #0, 12
    8650:	add	ip, ip, #372736	; 0x5b000
    8654:	ldr	pc, [ip, #2072]!	; 0x818

00008658 <puts@plt>:
    8658:			; <UNDEFINED> instruction: 0xe7fd4778
    865c:	add	ip, pc, #0, 12
    8660:	add	ip, ip, #372736	; 0x5b000
    8664:	ldr	pc, [ip, #2060]!	; 0x80c

00008668 <sysinfo@plt>:
    8668:	add	ip, pc, #0, 12
    866c:	add	ip, ip, #372736	; 0x5b000
    8670:	ldr	pc, [ip, #2052]!	; 0x804

00008674 <malloc@plt>:
    8674:			; <UNDEFINED> instruction: 0xe7fd4778
    8678:	add	ip, pc, #0, 12
    867c:	add	ip, ip, #372736	; 0x5b000
    8680:	ldr	pc, [ip, #2040]!	; 0x7f8

00008684 <__libc_start_main@plt>:
    8684:	add	ip, pc, #0, 12
    8688:	add	ip, ip, #372736	; 0x5b000
    868c:	ldr	pc, [ip, #2032]!	; 0x7f0

00008690 <strerror@plt>:
    8690:	add	ip, pc, #0, 12
    8694:	add	ip, ip, #372736	; 0x5b000
    8698:	ldr	pc, [ip, #2024]!	; 0x7e8

0000869c <__fxstat@plt>:
    869c:			; <UNDEFINED> instruction: 0xe7fd4778
    86a0:	add	ip, pc, #0, 12
    86a4:	add	ip, ip, #372736	; 0x5b000
    86a8:	ldr	pc, [ip, #2012]!	; 0x7dc

000086ac <strftime@plt>:
    86ac:	add	ip, pc, #0, 12
    86b0:	add	ip, ip, #372736	; 0x5b000
    86b4:	ldr	pc, [ip, #2004]!	; 0x7d4

000086b8 <__vfprintf_chk@plt>:
    86b8:	add	ip, pc, #0, 12
    86bc:	add	ip, ip, #372736	; 0x5b000
    86c0:	ldr	pc, [ip, #1996]!	; 0x7cc

000086c4 <backtrace@plt>:
    86c4:	add	ip, pc, #0, 12
    86c8:	add	ip, ip, #372736	; 0x5b000
    86cc:	ldr	pc, [ip, #1988]!	; 0x7c4

000086d0 <blkid_dev_next@plt>:
    86d0:	add	ip, pc, #0, 12
    86d4:	add	ip, ip, #372736	; 0x5b000
    86d8:	ldr	pc, [ip, #1980]!	; 0x7bc

000086dc <blkid_verify@plt>:
    86dc:	add	ip, pc, #0, 12
    86e0:	add	ip, ip, #372736	; 0x5b000
    86e4:	ldr	pc, [ip, #1972]!	; 0x7b4

000086e8 <__ctype_tolower_loc@plt>:
    86e8:	add	ip, pc, #0, 12
    86ec:	add	ip, ip, #372736	; 0x5b000
    86f0:	ldr	pc, [ip, #1964]!	; 0x7ac

000086f4 <__gmon_start__@plt>:
    86f4:	add	ip, pc, #0, 12
    86f8:	add	ip, ip, #372736	; 0x5b000
    86fc:	ldr	pc, [ip, #1956]!	; 0x7a4

00008700 <open@plt>:
    8700:	add	ip, pc, #0, 12
    8704:	add	ip, ip, #372736	; 0x5b000
    8708:	ldr	pc, [ip, #1948]!	; 0x79c

0000870c <timerfd_create@plt>:
    870c:	add	ip, pc, #0, 12
    8710:	add	ip, ip, #372736	; 0x5b000
    8714:	ldr	pc, [ip, #1940]!	; 0x794

00008718 <getopt_long@plt>:
    8718:	add	ip, pc, #0, 12
    871c:	add	ip, ip, #372736	; 0x5b000
    8720:	ldr	pc, [ip, #1932]!	; 0x78c

00008724 <__ctype_b_loc@plt>:
    8724:	add	ip, pc, #0, 12
    8728:	add	ip, ip, #372736	; 0x5b000
    872c:	ldr	pc, [ip, #1924]!	; 0x784

00008730 <getpid@plt>:
    8730:	add	ip, pc, #0, 12
    8734:	add	ip, ip, #372736	; 0x5b000
    8738:	ldr	pc, [ip, #1916]!	; 0x77c

0000873c <exit@plt>:
    873c:	add	ip, pc, #0, 12
    8740:	add	ip, ip, #372736	; 0x5b000
    8744:	ldr	pc, [ip, #1908]!	; 0x774

00008748 <strlen@plt>:
    8748:	add	ip, pc, #0, 12
    874c:	add	ip, ip, #372736	; 0x5b000
    8750:	ldr	pc, [ip, #1900]!	; 0x76c

00008754 <strchr@plt>:
    8754:	add	ip, pc, #0, 12
    8758:	add	ip, ip, #372736	; 0x5b000
    875c:	ldr	pc, [ip, #1892]!	; 0x764

00008760 <openat64@plt>:
    8760:	add	ip, pc, #0, 12
    8764:	add	ip, ip, #372736	; 0x5b000
    8768:	ldr	pc, [ip, #1884]!	; 0x75c

0000876c <memrchr@plt>:
    876c:	add	ip, pc, #0, 12
    8770:	add	ip, ip, #372736	; 0x5b000
    8774:	ldr	pc, [ip, #1876]!	; 0x754

00008778 <__open64_2@plt>:
    8778:	add	ip, pc, #0, 12
    877c:	add	ip, ip, #372736	; 0x5b000
    8780:	ldr	pc, [ip, #1868]!	; 0x74c

00008784 <__errno_location@plt>:
    8784:	add	ip, pc, #0, 12
    8788:	add	ip, ip, #372736	; 0x5b000
    878c:	ldr	pc, [ip, #1860]!	; 0x744

00008790 <__strcat_chk@plt>:
    8790:	add	ip, pc, #0, 12
    8794:	add	ip, ip, #372736	; 0x5b000
    8798:	ldr	pc, [ip, #1852]!	; 0x73c

0000879c <__sprintf_chk@plt>:
    879c:	add	ip, pc, #0, 12
    87a0:	add	ip, ip, #372736	; 0x5b000
    87a4:	ldr	pc, [ip, #1844]!	; 0x734

000087a8 <blkid_new_probe@plt>:
    87a8:	add	ip, pc, #0, 12
    87ac:	add	ip, ip, #372736	; 0x5b000
    87b0:	ldr	pc, [ip, #1836]!	; 0x72c

000087b4 <uuid_is_null@plt>:
    87b4:	add	ip, pc, #0, 12
    87b8:	add	ip, ip, #372736	; 0x5b000
    87bc:	ldr	pc, [ip, #1828]!	; 0x724

000087c0 <memset@plt>:
    87c0:			; <UNDEFINED> instruction: 0xe7fd4778
    87c4:	add	ip, pc, #0, 12
    87c8:	add	ip, ip, #372736	; 0x5b000
    87cc:	ldr	pc, [ip, #1816]!	; 0x718

000087d0 <putchar@plt>:
    87d0:			; <UNDEFINED> instruction: 0xe7fd4778
    87d4:	add	ip, pc, #0, 12
    87d8:	add	ip, ip, #372736	; 0x5b000
    87dc:	ldr	pc, [ip, #1804]!	; 0x70c

000087e0 <strncpy@plt>:
    87e0:	add	ip, pc, #0, 12
    87e4:	add	ip, ip, #372736	; 0x5b000
    87e8:	ldr	pc, [ip, #1796]!	; 0x704

000087ec <pthread_cancel@plt>:
    87ec:	add	ip, pc, #0, 12
    87f0:	add	ip, ip, #372736	; 0x5b000
    87f4:	ldr	pc, [ip, #1788]!	; 0x6fc

000087f8 <fscanf@plt>:
    87f8:	add	ip, pc, #0, 12
    87fc:	add	ip, ip, #372736	; 0x5b000
    8800:	ldr	pc, [ip, #1780]!	; 0x6f4

00008804 <strtoull@plt>:
    8804:	add	ip, pc, #0, 12
    8808:	add	ip, ip, #372736	; 0x5b000
    880c:	ldr	pc, [ip, #1772]!	; 0x6ec

00008810 <fsetxattr@plt>:
    8810:	add	ip, pc, #0, 12
    8814:	add	ip, ip, #372736	; 0x5b000
    8818:	ldr	pc, [ip, #1764]!	; 0x6e4

0000881c <blkid_dev_iterate_end@plt>:
    881c:	add	ip, pc, #0, 12
    8820:	add	ip, ip, #372736	; 0x5b000
    8824:	ldr	pc, [ip, #1756]!	; 0x6dc

00008828 <pwrite64@plt>:
    8828:	add	ip, pc, #0, 12
    882c:	add	ip, ip, #372736	; 0x5b000
    8830:	ldr	pc, [ip, #1748]!	; 0x6d4

00008834 <__printf_chk@plt>:
    8834:			; <UNDEFINED> instruction: 0xe7fd4778
    8838:	add	ip, pc, #0, 12
    883c:	add	ip, ip, #372736	; 0x5b000
    8840:	ldr	pc, [ip, #1736]!	; 0x6c8

00008844 <fstatfs@plt>:
    8844:	add	ip, pc, #0, 12
    8848:	add	ip, ip, #372736	; 0x5b000
    884c:	ldr	pc, [ip, #1728]!	; 0x6c0

00008850 <uuid_generate@plt>:
    8850:	add	ip, pc, #0, 12
    8854:	add	ip, ip, #372736	; 0x5b000
    8858:	ldr	pc, [ip, #1720]!	; 0x6b8

0000885c <__fprintf_chk@plt>:
    885c:			; <UNDEFINED> instruction: 0xe7fd4778
    8860:	add	ip, pc, #0, 12
    8864:	add	ip, ip, #372736	; 0x5b000
    8868:	ldr	pc, [ip, #1708]!	; 0x6ac

0000886c <access@plt>:
    886c:	add	ip, pc, #0, 12
    8870:	add	ip, ip, #372736	; 0x5b000
    8874:	ldr	pc, [ip, #1700]!	; 0x6a4

00008878 <fclose@plt>:
    8878:	add	ip, pc, #0, 12
    887c:	add	ip, ip, #372736	; 0x5b000
    8880:	ldr	pc, [ip, #1692]!	; 0x69c

00008884 <endmntent@plt>:
    8884:	add	ip, pc, #0, 12
    8888:	add	ip, ip, #372736	; 0x5b000
    888c:	ldr	pc, [ip, #1684]!	; 0x694

00008890 <strtok@plt>:
    8890:	add	ip, pc, #0, 12
    8894:	add	ip, ip, #372736	; 0x5b000
    8898:	ldr	pc, [ip, #1676]!	; 0x68c

0000889c <blkid_free_probe@plt>:
    889c:	add	ip, pc, #0, 12
    88a0:	add	ip, ip, #372736	; 0x5b000
    88a4:	ldr	pc, [ip, #1668]!	; 0x684

000088a8 <strrchr@plt>:
    88a8:	add	ip, pc, #0, 12
    88ac:	add	ip, ip, #372736	; 0x5b000
    88b0:	ldr	pc, [ip, #1660]!	; 0x67c

000088b4 <pthread_join@plt>:
    88b4:	add	ip, pc, #0, 12
    88b8:	add	ip, ip, #372736	; 0x5b000
    88bc:	ldr	pc, [ip, #1652]!	; 0x674

000088c0 <statfs64@plt>:
    88c0:	add	ip, pc, #0, 12
    88c4:	add	ip, ip, #372736	; 0x5b000
    88c8:	ldr	pc, [ip, #1644]!	; 0x66c

000088cc <fputc@plt>:
    88cc:			; <UNDEFINED> instruction: 0xe7fd4778
    88d0:	add	ip, pc, #0, 12
    88d4:	add	ip, ip, #372736	; 0x5b000
    88d8:	ldr	pc, [ip, #1632]!	; 0x660

000088dc <timerfd_settime@plt>:
    88dc:	add	ip, pc, #0, 12
    88e0:	add	ip, ip, #372736	; 0x5b000
    88e4:	ldr	pc, [ip, #1624]!	; 0x658

000088e8 <dirfd@plt>:
    88e8:	add	ip, pc, #0, 12
    88ec:	add	ip, ip, #372736	; 0x5b000
    88f0:	ldr	pc, [ip, #1616]!	; 0x650

000088f4 <getppid@plt>:
    88f4:	add	ip, pc, #0, 12
    88f8:	add	ip, ip, #372736	; 0x5b000
    88fc:	ldr	pc, [ip, #1608]!	; 0x648

00008900 <atoi@plt>:
    8900:	add	ip, pc, #0, 12
    8904:	add	ip, ip, #372736	; 0x5b000
    8908:	ldr	pc, [ip, #1600]!	; 0x640

0000890c <blkid_dev_devname@plt>:
    890c:	add	ip, pc, #0, 12
    8910:	add	ip, ip, #372736	; 0x5b000
    8914:	ldr	pc, [ip, #1592]!	; 0x638

00008918 <fopen64@plt>:
    8918:	add	ip, pc, #0, 12
    891c:	add	ip, ip, #372736	; 0x5b000
    8920:	ldr	pc, [ip, #1584]!	; 0x630

00008924 <setmntent@plt>:
    8924:	add	ip, pc, #0, 12
    8928:	add	ip, ip, #372736	; 0x5b000
    892c:	ldr	pc, [ip, #1576]!	; 0x628

00008930 <__tls_get_addr@plt>:
    8930:	add	ip, pc, #0, 12
    8934:	add	ip, ip, #372736	; 0x5b000
    8938:	ldr	pc, [ip, #1568]!	; 0x620

0000893c <strncat@plt>:
    893c:	add	ip, pc, #0, 12
    8940:	add	ip, ip, #372736	; 0x5b000
    8944:	ldr	pc, [ip, #1560]!	; 0x618

00008948 <__xstat64@plt>:
    8948:			; <UNDEFINED> instruction: 0xe7fd4778
    894c:	add	ip, pc, #0, 12
    8950:	add	ip, ip, #372736	; 0x5b000
    8954:	ldr	pc, [ip, #1548]!	; 0x60c

00008958 <blkid_get_cache@plt>:
    8958:	add	ip, pc, #0, 12
    895c:	add	ip, ip, #372736	; 0x5b000
    8960:	ldr	pc, [ip, #1540]!	; 0x604

00008964 <fputs@plt>:
    8964:			; <UNDEFINED> instruction: 0xe7fd4778
    8968:	add	ip, pc, #0, 12
    896c:	add	ip, ip, #372736	; 0x5b000
    8970:	ldr	pc, [ip, #1528]!	; 0x5f8

00008974 <strncmp@plt>:
    8974:	add	ip, pc, #0, 12
    8978:	add	ip, ip, #372736	; 0x5b000
    897c:	ldr	pc, [ip, #1520]!	; 0x5f0

00008980 <abort@plt>:
    8980:	add	ip, pc, #0, 12
    8984:	add	ip, ip, #372736	; 0x5b000
    8988:	ldr	pc, [ip, #1512]!	; 0x5e8

0000898c <realpath@plt>:
    898c:	add	ip, pc, #0, 12
    8990:	add	ip, ip, #372736	; 0x5b000
    8994:	ldr	pc, [ip, #1504]!	; 0x5e0

00008998 <close@plt>:
    8998:	add	ip, pc, #0, 12
    899c:	add	ip, ip, #372736	; 0x5b000
    89a0:	ldr	pc, [ip, #1496]!	; 0x5d8

000089a4 <blkid_probe_all@plt>:
    89a4:	add	ip, pc, #0, 12
    89a8:	add	ip, ip, #372736	; 0x5b000
    89ac:	ldr	pc, [ip, #1488]!	; 0x5d0

000089b0 <closedir@plt>:
    89b0:	add	ip, pc, #0, 12
    89b4:	add	ip, ip, #372736	; 0x5b000
    89b8:	ldr	pc, [ip, #1480]!	; 0x5c8

000089bc <__snprintf_chk@plt>:
    89bc:	add	ip, pc, #0, 12
    89c0:	add	ip, ip, #372736	; 0x5b000
    89c4:	ldr	pc, [ip, #1472]!	; 0x5c0

000089c8 <backtrace_symbols_fd@plt>:
    89c8:	add	ip, pc, #0, 12
    89cc:	add	ip, ip, #372736	; 0x5b000
    89d0:	ldr	pc, [ip, #1464]!	; 0x5b8

000089d4 <__assert_fail@plt>:
    89d4:	add	ip, pc, #0, 12
    89d8:	add	ip, ip, #372736	; 0x5b000
    89dc:	ldr	pc, [ip, #1456]!	; 0x5b0

Disassembly of section .text:

000089e0 <main@@Base>:
    89e0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    89e4:	mov	r5, r0
    89e6:	vpush	{d8}
    89ea:	mov	r4, r1
    89ec:	ldr	r2, [pc, #860]	; (8d4c <main@@Base+0x36c>)
    89ee:	movs	r1, #0
    89f0:	ldr	r3, [pc, #860]	; (8d50 <main@@Base+0x370>)
    89f2:	add	r2, pc
    89f4:	ldr.w	sl, [pc, #860]	; 8d54 <main@@Base+0x374>
    89f8:	sub	sp, #100	; 0x64
    89fa:	ldr	r6, [pc, #860]	; (8d58 <main@@Base+0x378>)
    89fc:	ldr	r3, [r2, r3]
    89fe:	add	r0, sp, #56	; 0x38
    8a00:	movs	r2, #32
    8a02:	add	sl, pc
    8a04:	ldr	r3, [r3, #0]
    8a06:	str	r3, [sp, #92]	; 0x5c
    8a08:	mov.w	r3, #0
    8a0c:	blx	87c4 <memset@plt+0x4>
    8a10:	movs	r2, #1
    8a12:	movs	r3, #0
    8a14:	strd	r2, r3, [sp, #48]	; 0x30
    8a18:	mov.w	r2, #4294967295	; 0xffffffff
    8a1c:	mov.w	r3, #4294967295	; 0xffffffff
    8a20:	strd	r2, r3, [sp, #72]	; 0x48
    8a24:	movs	r3, #255	; 0xff
    8a26:	strb.w	r3, [sp, #65]	; 0x41
    8a2a:	ldr	r3, [pc, #816]	; (8d5c <main@@Base+0x37c>)
    8a2c:	add	r6, pc
    8a2e:	ldr	r7, [pc, #816]	; (8d60 <main@@Base+0x380>)
    8a30:	ldr.w	r2, [sl, r3]
    8a34:	add	r7, pc
    8a36:	movs	r3, #0
    8a38:	mov	r8, r3
    8a3a:	str	r3, [r2, #0]
    8a3c:	mov	r3, r6
    8a3e:	mov	r2, r7
    8a40:	mov	r1, r4
    8a42:	mov	r0, r5
    8a44:	str.w	r8, [sp]
    8a48:	blx	8718 <getopt_long@plt>
    8a4c:	subs	r3, r0, #0
    8a4e:	blt.n	8ad4 <main@@Base+0xf4>
    8a50:	cmp	r3, #108	; 0x6c
    8a52:	beq.n	8ac2 <main@@Base+0xe2>
    8a54:	bgt.n	8a6a <main@@Base+0x8a>
    8a56:	cmp	r3, #97	; 0x61
    8a58:	beq.n	8a98 <main@@Base+0xb8>
    8a5a:	cmp	r3, #103	; 0x67
    8a5c:	beq.n	8ab0 <main@@Base+0xd0>
    8a5e:	ldr	r0, [pc, #772]	; (8d64 <main@@Base+0x384>)
    8a60:	mov	r1, r4
    8a62:	add	r0, pc
    8a64:	adds	r0, #32
    8a66:	bl	10898 <usage_unknown_option@@Base>
    8a6a:	cmp	r3, #111	; 0x6f
    8a6c:	beq.n	8a9e <main@@Base+0xbe>
    8a6e:	cmp.w	r3, #270	; 0x10e
    8a72:	bne.n	8a5e <main@@Base+0x7e>
    8a74:	movs	r2, #0
    8a76:	add.w	r0, r6, #32
    8a7a:	mov	r1, r2
    8a7c:	movs	r6, #0
    8a7e:	bl	1084c <usage_command@@Base>
    8a82:	ldr	r2, [pc, #740]	; (8d68 <main@@Base+0x388>)
    8a84:	ldr	r3, [pc, #712]	; (8d50 <main@@Base+0x370>)
    8a86:	add	r2, pc
    8a88:	ldr	r3, [r2, r3]
    8a8a:	ldr	r2, [r3, #0]
    8a8c:	ldr	r3, [sp, #92]	; 0x5c
    8a8e:	eors	r2, r3
    8a90:	beq.w	8d3e <main@@Base+0x35e>
    8a94:	blx	8510 <__stack_chk_fail@plt>
    8a98:	movs	r3, #1
    8a9a:	str	r3, [sp, #80]	; 0x50
    8a9c:	b.n	8a3c <main@@Base+0x5c>
    8a9e:	ldr	r3, [pc, #716]	; (8d6c <main@@Base+0x38c>)
    8aa0:	ldr.w	r3, [sl, r3]
    8aa4:	ldr	r0, [r3, #0]
    8aa6:	bl	16e30 <arg_strtou64@@Base>
    8aaa:	strd	r0, r1, [sp, #48]	; 0x30
    8aae:	b.n	8a3c <main@@Base+0x5c>
    8ab0:	ldr	r3, [pc, #696]	; (8d6c <main@@Base+0x38c>)
    8ab2:	ldr.w	r3, [sl, r3]
    8ab6:	ldr	r0, [r3, #0]
    8ab8:	bl	16e30 <arg_strtou64@@Base>
    8abc:	strd	r0, r1, [sp, #56]	; 0x38
    8ac0:	b.n	8a3c <main@@Base+0x5c>
    8ac2:	ldr	r3, [pc, #680]	; (8d6c <main@@Base+0x38c>)
    8ac4:	ldr.w	r3, [sl, r3]
    8ac8:	ldr	r0, [r3, #0]
    8aca:	bl	16e30 <arg_strtou64@@Base>
    8ace:	strb.w	r0, [sp, #64]	; 0x40
    8ad2:	b.n	8a3c <main@@Base+0x5c>
    8ad4:	mov	r0, r4
    8ad6:	bl	106f8 <set_argv0@@Base>
    8ada:	ldr	r3, [pc, #660]	; (8d70 <main@@Base+0x390>)
    8adc:	movs	r1, #1
    8ade:	ldr.w	r7, [sl, r3]
    8ae2:	ldr	r0, [r7, #0]
    8ae4:	subs	r0, r5, r0
    8ae6:	bl	10774 <check_argc_min@@Base>
    8aea:	mov	r6, r0
    8aec:	cbnz	r0, 8b16 <main@@Base+0x136>
    8aee:	ldr	r1, [r7, #0]
    8af0:	movs	r2, #0
    8af2:	movw	r3, #2818	; 0xb02
    8af6:	str	r3, [sp, #16]
    8af8:	movs	r3, #0
    8afa:	strd	r2, r3, [sp, #8]
    8afe:	strd	r2, r3, [sp]
    8b02:	ldr.w	r0, [r4, r1, lsl #2]
    8b06:	bl	1d920 <open_ctree_fs_info@@Base>
    8b0a:	str	r0, [sp, #28]
    8b0c:	cbnz	r0, 8b1a <main@@Base+0x13a>
    8b0e:	ldr	r0, [pc, #612]	; (8d74 <main@@Base+0x394>)
    8b10:	add	r0, pc
    8b12:	bl	16b70 <__btrfs_error@@Base>
    8b16:	movs	r6, #1
    8b18:	b.n	8a82 <main@@Base+0xa2>
    8b1a:	add.w	fp, sp, #40	; 0x28
    8b1e:	mov	r0, fp
    8b20:	bl	15588 <cache_tree_init@@Base>
    8b24:	ldrd	r8, r9, [sp, #48]	; 0x30
    8b28:	ldr	r3, [sp, #28]
    8b2a:	cmp.w	r9, #0
    8b2e:	it	eq
    8b30:	cmpeq.w	r8, #9
    8b34:	ldr.w	r3, [r3, #308]	; 0x134
    8b38:	beq.n	8c16 <main@@Base+0x236>
    8b3a:	cmp.w	r9, #0
    8b3e:	it	eq
    8b40:	cmpeq.w	r8, #10
    8b44:	bcs.n	8b70 <main@@Base+0x190>
    8b46:	cmp.w	r9, #0
    8b4a:	it	eq
    8b4c:	cmpeq.w	r8, #1
    8b50:	beq.n	8b8a <main@@Base+0x1aa>
    8b52:	cmp.w	r9, #0
    8b56:	it	eq
    8b58:	cmpeq.w	r8, #3
    8b5c:	beq.n	8c08 <main@@Base+0x228>
    8b5e:	movs	r7, #255	; 0xff
    8b60:	ldr	r1, [pc, #532]	; (8d78 <main@@Base+0x398>)
    8b62:	mov	r2, r8
    8b64:	mov	r3, r9
    8b66:	movs	r0, #1
    8b68:	add	r1, pc
    8b6a:	blx	8838 <__printf_chk@plt+0x4>
    8b6e:	b.n	8bae <main@@Base+0x1ce>
    8b70:	mov.w	r1, #4294967295	; 0xffffffff
    8b74:	cmp	r9, r1
    8b76:	mvn.w	r0, #5
    8b7a:	it	eq
    8b7c:	cmpeq	r8, r0
    8b7e:	bne.n	8b5e <main@@Base+0x17e>
    8b80:	ldrb.w	r7, [r3, #200]	; 0xc8
    8b84:	ldr	r4, [r3, #104]	; 0x68
    8b86:	ldr	r5, [r3, #108]	; 0x6c
    8b88:	b.n	8b92 <main@@Base+0x1b2>
    8b8a:	ldrb.w	r7, [r3, #198]	; 0xc6
    8b8e:	ldr	r4, [r3, #72]	; 0x48
    8b90:	ldr	r5, [r3, #76]	; 0x4c
    8b92:	adds	r2, r5, #1
    8b94:	it	eq
    8b96:	cmpeq.w	r4, #4294967295	; 0xffffffff
    8b9a:	beq.n	8b60 <main@@Base+0x180>
    8b9c:	ldr	r1, [pc, #476]	; (8d7c <main@@Base+0x39c>)
    8b9e:	mov	r2, r4
    8ba0:	mov	r3, r5
    8ba2:	movs	r0, #1
    8ba4:	add	r1, pc
    8ba6:	blx	8838 <__printf_chk@plt+0x4>
    8baa:	strd	r4, r5, [sp, #72]	; 0x48
    8bae:	cmp	r7, #255	; 0xff
    8bb0:	beq.n	8c22 <main@@Base+0x242>
    8bb2:	ldr	r1, [pc, #460]	; (8d80 <main@@Base+0x3a0>)
    8bb4:	mov	r2, r7
    8bb6:	movs	r0, #1
    8bb8:	add	r1, pc
    8bba:	blx	8838 <__printf_chk@plt+0x4>
    8bbe:	strb.w	r7, [sp, #65]	; 0x41
    8bc2:	ldr	r0, [sp, #28]
    8bc4:	add	r3, sp, #44	; 0x2c
    8bc6:	add	r1, sp, #48	; 0x30
    8bc8:	mov	r2, fp
    8bca:	bl	10134 <btrfs_find_root_search@@Base>
    8bce:	subs	r4, r0, #0
    8bd0:	bge.n	8c32 <main@@Base+0x252>
    8bd2:	blx	8784 <__errno_location@plt>
    8bd6:	negs	r3, r4
    8bd8:	ldr	r2, [pc, #424]	; (8d84 <main@@Base+0x3a4>)
    8bda:	movs	r1, #1
    8bdc:	mov	r6, r4
    8bde:	add	r2, pc
    8be0:	str	r3, [r0, #0]
    8be2:	ldr	r3, [pc, #420]	; (8d88 <main@@Base+0x3a8>)
    8be4:	ldr.w	r3, [sl, r3]
    8be8:	ldr	r0, [r3, #0]
    8bea:	blx	8860 <__fprintf_chk@plt+0x4>
    8bee:	mov	r0, fp
    8bf0:	bl	15798 <first_cache_extent@@Base>
    8bf4:	mov	r4, r0
    8bf6:	cmp	r0, #0
    8bf8:	bne.w	8d26 <main@@Base+0x346>
    8bfc:	ldr	r0, [sp, #28]
    8bfe:	bl	1ca84 <close_ctree_fs_info@@Base>
    8c02:	bl	276f8 <btrfs_close_all_devices@@Base>
    8c06:	b.n	8a82 <main@@Base+0xa2>
    8c08:	ldrb.w	r7, [r3, #199]	; 0xc7
    8c0c:	ldr.w	r4, [r3, #164]	; 0xa4
    8c10:	ldr.w	r5, [r3, #168]	; 0xa8
    8c14:	b.n	8b92 <main@@Base+0x1b2>
    8c16:	ldr.w	r4, [r3, #563]	; 0x233
    8c1a:	movs	r7, #255	; 0xff
    8c1c:	ldr.w	r5, [r3, #567]	; 0x237
    8c20:	b.n	8b92 <main@@Base+0x1b2>
    8c22:	ldr	r1, [pc, #360]	; (8d8c <main@@Base+0x3ac>)
    8c24:	mov	r2, r8
    8c26:	mov	r3, r9
    8c28:	movs	r0, #1
    8c2a:	add	r1, pc
    8c2c:	blx	8838 <__printf_chk@plt+0x4>
    8c30:	b.n	8bc2 <main@@Base+0x1e2>
    8c32:	beq.n	8c52 <main@@Base+0x272>
    8c34:	ldrb.w	r3, [sp, #65]	; 0x41
    8c38:	movs	r0, #1
    8c3a:	ldr	r1, [pc, #340]	; (8d90 <main@@Base+0x3b0>)
    8c3c:	str	r3, [sp, #8]
    8c3e:	add	r1, pc
    8c40:	ldrd	r2, r3, [sp, #72]	; 0x48
    8c44:	strd	r2, r3, [sp]
    8c48:	ldr	r3, [sp, #44]	; 0x2c
    8c4a:	ldrd	r2, r3, [r3, #24]
    8c4e:	blx	8838 <__printf_chk@plt+0x4>
    8c52:	mov	r0, fp
    8c54:	ldr.w	sl, [pc, #316]	; 8d94 <main@@Base+0x3b4>
    8c58:	bl	1579c <last_cache_extent@@Base>
    8c5c:	ldr	r3, [pc, #312]	; (8d98 <main@@Base+0x3b8>)
    8c5e:	add	sl, pc
    8c60:	add	r3, pc
    8c62:	vmov	s16, r3
    8c66:	mov	r4, r0
    8c68:	cmp	r4, #0
    8c6a:	beq.n	8bee <main@@Base+0x20e>
    8c6c:	ldrd	r2, r3, [r4, #24]
    8c70:	ldrb.w	r8, [r4, #40]	; 0x28
    8c74:	strd	r2, r3, [sp, #32]
    8c78:	ldrb.w	r3, [sp, #65]	; 0x41
    8c7c:	cmp	r3, r8
    8c7e:	bne.n	8c9e <main@@Base+0x2be>
    8c80:	ldrd	r2, r3, [sp, #72]	; 0x48
    8c84:	ldrd	r0, r1, [sp, #32]
    8c88:	cmp	r1, r3
    8c8a:	it	eq
    8c8c:	cmpeq	r0, r2
    8c8e:	bne.n	8c9e <main@@Base+0x2be>
    8c90:	ldr	r3, [sp, #80]	; 0x50
    8c92:	cbnz	r3, 8c9e <main@@Base+0x2be>
    8c94:	mov	r0, r4
    8c96:	bl	157a0 <prev_cache_extent@@Base>
    8c9a:	mov	r4, r0
    8c9c:	b.n	8c68 <main@@Base+0x288>
    8c9e:	add.w	r0, r4, #48	; 0x30
    8ca2:	ldr.w	r9, [pc, #248]	; 8d9c <main@@Base+0x3bc>
    8ca6:	bl	1579c <last_cache_extent@@Base>
    8caa:	add	r9, pc
    8cac:	mov	r5, r0
    8cae:	cmp	r5, #0
    8cb0:	beq.n	8c94 <main@@Base+0x2b4>
    8cb2:	ldrd	r2, r3, [sp, #72]	; 0x48
    8cb6:	adds	r3, #1
    8cb8:	it	eq
    8cba:	cmpeq.w	r2, #4294967295	; 0xffffffff
    8cbe:	beq.n	8cfa <main@@Base+0x31a>
    8cc0:	ldrb.w	r7, [sp, #65]	; 0x41
    8cc4:	sub.w	r3, r7, #255	; 0xff
    8cc8:	negs	r7, r3
    8cca:	adcs	r7, r3
    8ccc:	ldrd	r2, r3, [sp, #32]
    8cd0:	movs	r0, #1
    8cd2:	str.w	r8, [sp, #8]
    8cd6:	vmov	r1, s16
    8cda:	strd	r2, r3, [sp]
    8cde:	ldrd	r2, r3, [r5, #24]
    8ce2:	blx	8838 <__printf_chk@plt+0x4>
    8ce6:	cbz	r7, 8cfe <main@@Base+0x31e>
    8ce8:	ldr	r0, [pc, #180]	; (8da0 <main@@Base+0x3c0>)
    8cea:	add	r0, pc
    8cec:	blx	865c <puts@plt+0x4>
    8cf0:	mov	r0, r5
    8cf2:	bl	157a0 <prev_cache_extent@@Base>
    8cf6:	mov	r5, r0
    8cf8:	b.n	8cae <main@@Base+0x2ce>
    8cfa:	movs	r7, #1
    8cfc:	b.n	8ccc <main@@Base+0x2ec>
    8cfe:	ldrb.w	r7, [sp, #65]	; 0x41
    8d02:	ldrd	r2, r3, [sp, #72]	; 0x48
    8d06:	cmp	r8, r7
    8d08:	bne.n	8d1a <main@@Base+0x33a>
    8d0a:	ldrd	r0, r1, [sp, #32]
    8d0e:	cmp	r1, r3
    8d10:	it	eq
    8d12:	cmpeq	r0, r2
    8d14:	bne.n	8d1a <main@@Base+0x33a>
    8d16:	mov	r0, r9
    8d18:	b.n	8cec <main@@Base+0x30c>
    8d1a:	mov	r1, sl
    8d1c:	str	r7, [sp, #0]
    8d1e:	movs	r0, #1
    8d20:	blx	8838 <__printf_chk@plt+0x4>
    8d24:	b.n	8cf0 <main@@Base+0x310>
    8d26:	add.w	r0, r4, #48	; 0x30
    8d2a:	bl	157d2 <free_extent_cache_tree@@Base>
    8d2e:	mov	r0, fp
    8d30:	mov	r1, r4
    8d32:	bl	157a8 <remove_cache_extent@@Base>
    8d36:	mov	r0, r4
    8d38:	blx	8434 <free@plt+0x4>
    8d3c:	b.n	8bee <main@@Base+0x20e>
    8d3e:	mov	r0, r6
    8d40:	add	sp, #100	; 0x64
    8d42:	vpop	{d8}
    8d46:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8d4a:	nop
    8d4c:	cbz	r2, 8db4 <_start@@Base+0x10>
    8d4e:	movs	r5, r0
    8d50:	lsls	r0, r4, #8
    8d52:	movs	r0, r0
    8d54:	cbz	r2, 8db8 <_start@@Base+0x14>
    8d56:	movs	r5, r0
    8d58:	add	r5, sp, #224	; 0xe0
    8d5a:	movs	r5, r0
    8d5c:	lsls	r4, r4, #9
    8d5e:	movs	r0, r0
    8d60:	subs	r5, r5, #0
    8d62:	movs	r3, r0
    8d64:	add	r5, sp, #8
    8d66:	movs	r5, r0
    8d68:	uxtb	r6, r7
    8d6a:	movs	r5, r0
    8d6c:	lsls	r0, r6, #9
    8d6e:	movs	r0, r0
    8d70:	lsls	r4, r4, #8
    8d72:	movs	r0, r0
    8d74:	adds	r1, r3, #5
    8d76:	movs	r3, r0
    8d78:	adds	r5, r7, #4
    8d7a:	movs	r3, r0
    8d7c:	adds	r7, r2, #3
    8d7e:	movs	r3, r0
    8d80:	adds	r7, r4, #4
    8d82:	movs	r3, r0
    8d84:	adds	r5, r3, #5
    8d86:	movs	r3, r0
    8d88:	lsls	r0, r6, #8
    8d8a:	movs	r0, r0
    8d8c:	adds	r0, r3, #3
    8d8e:	movs	r3, r0
    8d90:	adds	r7, r3, #4
    8d92:	movs	r3, r0
    8d94:	adds	r3, r5, #6
    8d96:	movs	r3, r0
    8d98:	adds	r0, r5, #4
    8d9a:	movs	r3, r0
    8d9c:	adds	r5, r0, #5
    8d9e:	movs	r3, r0
    8da0:	adds	r0, r2, #3
    8da2:	movs	r3, r0

00008da4 <_start@@Base>:
    8da4:	mov.w	fp, #0
    8da8:	mov.w	lr, #0
    8dac:	pop	{r1}
    8dae:	mov	r2, sp
    8db0:	push	{r2}
    8db2:	push	{r0}
    8db4:	ldr.w	sl, [pc, #36]	; 8ddc <_start@@Base+0x38>
    8db8:	add	r3, pc, #32	; (adr r3, 8ddc <_start@@Base+0x38>)
    8dba:	add	sl, r3
    8dbc:	ldr.w	ip, [pc, #32]	; 8de0 <_start@@Base+0x3c>
    8dc0:	ldr.w	ip, [sl, ip]
    8dc4:	str.w	ip, [sp, #-4]!
    8dc8:	ldr	r3, [pc, #24]	; (8de4 <_start@@Base+0x40>)
    8dca:	ldr.w	r3, [sl, r3]
    8dce:	ldr	r0, [pc, #24]	; (8de8 <_start@@Base+0x44>)
    8dd0:	ldr.w	r0, [sl, r0]
    8dd4:	blx	8684 <__libc_start_main@plt>
    8dd8:	blx	8980 <abort@plt>
    8ddc:	add	r7, sp, #688	; 0x2b0
    8dde:	movs	r5, r0
    8de0:	lsls	r0, r2, #8
    8de2:	movs	r0, r0
    8de4:	lsls	r4, r1, #9
    8de6:	movs	r0, r0
    8de8:	lsls	r4, r3, #9
    8dea:	movs	r0, r0
    8dec:	adds	r0, #20
    8dee:	b.n	8930 <__tls_get_addr@plt>
    8df0:	movs	r0, #20
    8df2:	b.n	8934 <__tls_get_addr@plt+0x4>
    8df4:	adds	r0, #3
    8df6:	b.n	8f18 <btrfs_delete_one_dir_name@@Base+0x18>
    8df8:	movs	r0, #2
    8dfa:	b.n	8d24 <main@@Base+0x344>
    8dfc:	movs	r0, r0
    8dfe:	b.n	94a6 <btrfs_insert_dir_item@@Base+0x176>
    8e00:	vrhadd.u16	d0, d14, d31
    8e04:	mrc2	10, 1, lr, cr10, cr15, {7}	; <UNPREDICTABLE>
    8e08:	add	r7, sp, #560	; 0x230
    8e0a:	movs	r5, r0
    8e0c:	lsls	r4, r7, #8
    8e0e:	movs	r0, r0
    8e10:	ldr	r0, [pc, #24]	; (8e2c <_start@@Base+0x88>)
    8e12:	ldr	r3, [pc, #28]	; (8e30 <_start@@Base+0x8c>)
    8e14:	add	r0, pc
    8e16:	ldr	r2, [pc, #28]	; (8e34 <_start@@Base+0x90>)
    8e18:	add	r3, pc
    8e1a:	cmp	r3, r0
    8e1c:	add	r2, pc
    8e1e:	beq.n	8e28 <_start@@Base+0x84>
    8e20:	ldr	r3, [pc, #20]	; (8e38 <_start@@Base+0x94>)
    8e22:	ldr	r3, [r2, r3]
    8e24:	cbz	r3, 8e28 <_start@@Base+0x84>
    8e26:	bx	r3
    8e28:	bx	lr
    8e2a:	nop
    8e2c:	stmia	r4!, {r2, r6}
    8e2e:	movs	r5, r0
    8e30:	stmia	r4!, {r6}
    8e32:	movs	r5, r0
    8e34:	add	r7, sp, #416	; 0x1a0
    8e36:	movs	r5, r0
    8e38:	lsls	r0, r3, #8
    8e3a:	movs	r0, r0
    8e3c:	ldr	r0, [pc, #32]	; (8e60 <_start@@Base+0xbc>)
    8e3e:	ldr	r1, [pc, #36]	; (8e64 <_start@@Base+0xc0>)
    8e40:	add	r0, pc
    8e42:	ldr	r2, [pc, #36]	; (8e68 <_start@@Base+0xc4>)
    8e44:	add	r1, pc
    8e46:	subs	r1, r1, r0
    8e48:	add	r2, pc
    8e4a:	lsrs	r3, r1, #31
    8e4c:	add.w	r1, r3, r1, asr #2
    8e50:	asrs	r1, r1, #1
    8e52:	beq.n	8e5c <_start@@Base+0xb8>
    8e54:	ldr	r3, [pc, #20]	; (8e6c <_start@@Base+0xc8>)
    8e56:	ldr	r3, [r2, r3]
    8e58:	cbz	r3, 8e5c <_start@@Base+0xb8>
    8e5a:	bx	r3
    8e5c:	bx	lr
    8e5e:	nop
    8e60:	stmia	r4!, {r3, r4}
    8e62:	movs	r5, r0
    8e64:	stmia	r4!, {r2, r4}
    8e66:	movs	r5, r0
    8e68:	add	r7, sp, #240	; 0xf0
    8e6a:	movs	r5, r0
    8e6c:	lsls	r0, r5, #9
    8e6e:	movs	r0, r0
    8e70:	push	{r3, lr}
    8e72:	ldr	r3, [pc, #40]	; (8e9c <_start@@Base+0xf8>)
    8e74:	ldr	r2, [pc, #40]	; (8ea0 <_start@@Base+0xfc>)
    8e76:	add	r3, pc
    8e78:	add	r2, pc
    8e7a:	ldrb	r3, [r3, #0]
    8e7c:	cbnz	r3, 8e9a <_start@@Base+0xf6>
    8e7e:	ldr	r3, [pc, #36]	; (8ea4 <_start@@Base+0x100>)
    8e80:	ldr	r3, [r2, r3]
    8e82:	cbz	r3, 8e8e <_start@@Base+0xea>
    8e84:	ldr	r3, [pc, #32]	; (8ea8 <_start@@Base+0x104>)
    8e86:	add	r3, pc
    8e88:	ldr	r0, [r3, #0]
    8e8a:	blx	83cc <__cxa_finalize@plt>
    8e8e:	bl	8e10 <_start@@Base+0x6c>
    8e92:	ldr	r3, [pc, #24]	; (8eac <_start@@Base+0x108>)
    8e94:	movs	r2, #1
    8e96:	add	r3, pc
    8e98:	strb	r2, [r3, #0]
    8e9a:	pop	{r3, pc}
    8e9c:	stmia	r3!, {r1, r2, r5, r6, r7}
    8e9e:	movs	r5, r0
    8ea0:	add	r7, sp, #48	; 0x30
    8ea2:	movs	r5, r0
    8ea4:	lsls	r4, r2, #8
    8ea6:	movs	r0, r0
    8ea8:	cbz	r2, 8eca <_start@@Base+0x126>
    8eaa:	movs	r5, r0
    8eac:	stmia	r3!, {r1, r2, r6, r7}
    8eae:	movs	r5, r0
    8eb0:	b.n	8e3c <_start@@Base+0x98>
    8eb2:	nop
    8eb4:	ldr	r2, [pc, #60]	; (8ef4 <_start@@Base+0x150>)
    8eb6:	movs	r1, #16
    8eb8:	ldr	r3, [pc, #60]	; (8ef8 <_start@@Base+0x154>)
    8eba:	push	{r4, lr}
    8ebc:	add	r2, pc
    8ebe:	sub	sp, #72	; 0x48
    8ec0:	add	r4, sp, #4
    8ec2:	ldr	r3, [r2, r3]
    8ec4:	mov	r0, r4
    8ec6:	ldr	r3, [r3, #0]
    8ec8:	str	r3, [sp, #68]	; 0x44
    8eca:	mov.w	r3, #0
    8ece:	blx	86c4 <backtrace@plt>
    8ed2:	movs	r2, #2
    8ed4:	mov	r1, r0
    8ed6:	mov	r0, r4
    8ed8:	blx	89c8 <backtrace_symbols_fd@plt>
    8edc:	ldr	r2, [pc, #28]	; (8efc <_start@@Base+0x158>)
    8ede:	ldr	r3, [pc, #24]	; (8ef8 <_start@@Base+0x154>)
    8ee0:	add	r2, pc
    8ee2:	ldr	r3, [r2, r3]
    8ee4:	ldr	r2, [r3, #0]
    8ee6:	ldr	r3, [sp, #68]	; 0x44
    8ee8:	eors	r2, r3
    8eea:	beq.n	8ef0 <_start@@Base+0x14c>
    8eec:	blx	8510 <__stack_chk_fail@plt>
    8ef0:	add	sp, #72	; 0x48
    8ef2:	pop	{r4, pc}
    8ef4:	add	r6, sp, #800	; 0x320
    8ef6:	movs	r5, r0
    8ef8:	lsls	r0, r4, #8
    8efa:	movs	r0, r0
    8efc:	add	r6, sp, #656	; 0x290
    8efe:	movs	r5, r0

00008f00 <btrfs_delete_one_dir_name@@Base>:
    8f00:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    8f04:	mov	r6, r3
    8f06:	ldr.w	ip, [r2]
    8f0a:	movs	r7, #25
    8f0c:	mov	r8, r1
    8f0e:	mov	r5, r2
    8f10:	add.w	lr, ip, #96	; 0x60
    8f14:	add	r3, lr
    8f16:	ldrh.w	r4, [r3, #27]
    8f1a:	ldrh.w	r3, [r3, #25]
    8f1e:	add	r4, r3
    8f20:	ldr	r3, [r2, #32]
    8f22:	adds	r4, #30
    8f24:	mla	r7, r7, r3, lr
    8f28:	add.w	lr, r7, #101	; 0x65
    8f2c:	ldr.w	r7, [r7, #122]	; 0x7a
    8f30:	cmp	r4, r7
    8f32:	bcc.n	8f42 <btrfs_delete_one_dir_name@@Base+0x42>
    8f34:	movs	r4, #1
    8f36:	str	r4, [sp, #0]
    8f38:	bl	1aaec <btrfs_del_items@@Base>
    8f3c:	add	sp, #8
    8f3e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    8f42:	ldr.w	r3, [lr, #17]
    8f46:	adds	r2, r4, r6
    8f48:	mov	r0, ip
    8f4a:	mov	r1, r6
    8f4c:	add	r3, r7
    8f4e:	adds	r3, #101	; 0x65
    8f50:	subs	r3, r3, r2
    8f52:	bl	16a80 <memmove_extent_buffer@@Base>
    8f56:	subs	r2, r7, r4
    8f58:	movs	r3, #1
    8f5a:	mov	r1, r5
    8f5c:	mov	r0, r8
    8f5e:	bl	19570 <btrfs_truncate_item@@Base>
    8f62:	movs	r0, #0
    8f64:	b.n	8f3c <btrfs_delete_one_dir_name@@Base+0x3c>

00008f66 <btrfs_match_dir_item_name@@Base>:
    8f66:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8f6a:	mov	r4, r1
    8f6c:	ldr.w	fp, [r4]
    8f70:	mov	r7, r3
    8f72:	ldr	r3, [r4, #32]
    8f74:	mov	r1, r2
    8f76:	add.w	r9, fp, #96	; 0x60
    8f7a:	movs	r2, #25
    8f7c:	ldr.w	r8, [pc, #188]	; 903c <btrfs_match_dir_item_name@@Base+0xd6>
    8f80:	sub	sp, #20
    8f82:	mla	r3, r2, r3, r9
    8f86:	add	r8, pc
    8f88:	add.w	r5, r3, #101	; 0x65
    8f8c:	ldr.w	r4, [r3, #118]	; 0x76
    8f90:	adds	r4, #101	; 0x65
    8f92:	add.w	r2, r9, r4
    8f96:	ldrh.w	r3, [r2, #27]
    8f9a:	ldrh.w	r2, [r2, #25]
    8f9e:	cmp	r3, #255	; 0xff
    8fa0:	bls.n	8fba <btrfs_match_dir_item_name@@Base+0x54>
    8fa2:	ldr	r3, [pc, #156]	; (9040 <btrfs_match_dir_item_name@@Base+0xda>)
    8fa4:	movs	r1, #1
    8fa6:	ldr.w	r0, [r8, r3]
    8faa:	mov	r3, r2
    8fac:	ldr	r2, [pc, #148]	; (9044 <btrfs_match_dir_item_name@@Base+0xde>)
    8fae:	ldr	r0, [r0, #0]
    8fb0:	add	r2, pc
    8fb2:	blx	8860 <__fprintf_chk@plt+0x4>
    8fb6:	movs	r4, #0
    8fb8:	b.n	9032 <btrfs_match_dir_item_name@@Base+0xcc>
    8fba:	ldr.w	r0, [r0, #464]	; 0x1d0
    8fbe:	adds	r6, r2, r3
    8fc0:	ldr.w	r0, [r0, #384]	; 0x180
    8fc4:	subs	r0, #156	; 0x9c
    8fc6:	cmp	r6, r0
    8fc8:	bhi.n	8ffe <btrfs_match_dir_item_name@@Base+0x98>
    8fca:	ldr.w	sl, [r5, #21]
    8fce:	movs	r6, #0
    8fd0:	cmp	r6, sl
    8fd2:	bcs.n	8fb6 <btrfs_match_dir_item_name@@Base+0x50>
    8fd4:	add.w	r2, r9, r4
    8fd8:	ldrh.w	r3, [r2, #27]
    8fdc:	ldrh.w	r5, [r2, #25]
    8fe0:	sub.w	r2, sl, r6
    8fe4:	add	r5, r3
    8fe6:	adds	r5, #30
    8fe8:	cmp	r2, r5
    8fea:	bcs.n	9014 <btrfs_match_dir_item_name@@Base+0xae>
    8fec:	ldr	r3, [pc, #80]	; (9040 <btrfs_match_dir_item_name@@Base+0xda>)
    8fee:	ldr	r0, [pc, #88]	; (9048 <btrfs_match_dir_item_name@@Base+0xe2>)
    8ff0:	ldr.w	r3, [r8, r3]
    8ff4:	add	r0, pc
    8ff6:	ldr	r1, [r3, #0]
    8ff8:	blx	8968 <fputs@plt+0x4>
    8ffc:	b.n	8fb6 <btrfs_match_dir_item_name@@Base+0x50>
    8ffe:	ldr	r1, [pc, #64]	; (9040 <btrfs_match_dir_item_name@@Base+0xda>)
    9000:	ldr.w	r0, [r8, r1]
    9004:	movs	r1, #1
    9006:	str	r2, [sp, #0]
    9008:	ldr	r2, [pc, #64]	; (904c <btrfs_match_dir_item_name@@Base+0xe6>)
    900a:	ldr	r0, [r0, #0]
    900c:	add	r2, pc
    900e:	blx	8860 <__fprintf_chk@plt+0x4>
    9012:	b.n	8fb6 <btrfs_match_dir_item_name@@Base+0x50>
    9014:	cmp	r3, r7
    9016:	beq.n	901e <btrfs_match_dir_item_name@@Base+0xb8>
    9018:	add	r6, r5
    901a:	add	r4, r5
    901c:	b.n	8fd0 <btrfs_match_dir_item_name@@Base+0x6a>
    901e:	add.w	r2, r4, #30
    9022:	mov	r3, r7
    9024:	mov	r0, fp
    9026:	str	r1, [sp, #12]
    9028:	bl	169fc <memcmp_extent_buffer@@Base>
    902c:	ldr	r1, [sp, #12]
    902e:	cmp	r0, #0
    9030:	bne.n	9018 <btrfs_match_dir_item_name@@Base+0xb2>
    9032:	mov	r0, r4
    9034:	add	sp, #20
    9036:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    903a:	nop
    903c:	add	r5, sp, #1016	; 0x3f8
    903e:	movs	r5, r0
    9040:	lsls	r0, r6, #8
    9042:	movs	r0, r0
    9044:	cdp2	0, 5, cr0, cr0, cr2, {0}
    9048:	cdp2	0, 5, cr0, cr6, cr2, {0}
    904c:	cdp2	0, 1, cr0, cr3, cr2, {0}
    9050:	ldr.w	ip, [pc, #292]	; 9178 <btrfs_match_dir_item_name@@Base+0x212>
    9054:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    9058:	add	ip, pc
    905a:	ldr	r4, [pc, #288]	; (917c <btrfs_match_dir_item_name@@Base+0x216>)
    905c:	sub	sp, #24
    905e:	mov.w	r9, #1
    9062:	mov	r8, r1
    9064:	ldrd	r6, sl, [sp, #56]	; 0x38
    9068:	mov	r5, r2
    906a:	ldr.w	r4, [ip, r4]
    906e:	ldr	r7, [pc, #272]	; (9180 <btrfs_match_dir_item_name@@Base+0x21a>)
    9070:	ldr	r4, [r4, #0]
    9072:	str	r4, [sp, #20]
    9074:	mov.w	r4, #0
    9078:	add	r4, sp, #16
    907a:	str.w	r9, [sp, #4]
    907e:	add	r7, pc
    9080:	str	r4, [sp, #0]
    9082:	str	r6, [sp, #16]
    9084:	bl	1a700 <btrfs_insert_empty_items@@Base>
    9088:	cmn.w	r0, #17
    908c:	mov	r4, r0
    908e:	bne.n	9106 <btrfs_match_dir_item_name@@Base+0x1a0>
    9090:	ldr	r3, [sp, #64]	; 0x40
    9092:	mov	r2, sl
    9094:	mov	r1, r5
    9096:	mov	r0, r8
    9098:	bl	8f66 <btrfs_match_dir_item_name@@Base>
    909c:	cmp	r0, #0
    909e:	bne.n	910a <btrfs_match_dir_item_name@@Base+0x1a4>
    90a0:	mov	r2, r6
    90a2:	mov	r1, r5
    90a4:	mov	r0, r8
    90a6:	bl	19724 <btrfs_extend_item@@Base>
    90aa:	subs	r4, r0, #0
    90ac:	ble.n	9106 <btrfs_match_dir_item_name@@Base+0x1a0>
    90ae:	ldr	r3, [pc, #212]	; (9184 <btrfs_match_dir_item_name@@Base+0x21e>)
    90b0:	mov	r1, r9
    90b2:	ldr	r2, [pc, #212]	; (9188 <btrfs_match_dir_item_name@@Base+0x222>)
    90b4:	ldr	r0, [r7, r3]
    90b6:	add	r2, pc
    90b8:	ldr	r3, [pc, #208]	; (918c <btrfs_match_dir_item_name@@Base+0x226>)
    90ba:	str.w	r9, [sp, #12]
    90be:	add	r3, pc
    90c0:	str	r3, [sp, #8]
    90c2:	ldr	r3, [pc, #204]	; (9190 <btrfs_match_dir_item_name@@Base+0x22a>)
    90c4:	add	r3, pc
    90c6:	str	r3, [sp, #4]
    90c8:	movs	r3, #46	; 0x2e
    90ca:	str	r3, [sp, #0]
    90cc:	ldr	r3, [pc, #196]	; (9194 <btrfs_match_dir_item_name@@Base+0x22e>)
    90ce:	ldr	r0, [r0, #0]
    90d0:	add	r3, pc
    90d2:	blx	8860 <__fprintf_chk@plt+0x4>
    90d6:	bl	8eb4 <_start@@Base+0x110>
    90da:	ldr	r3, [pc, #168]	; (9184 <btrfs_match_dir_item_name@@Base+0x21e>)
    90dc:	movs	r1, #1
    90de:	ldr	r2, [pc, #184]	; (9198 <btrfs_match_dir_item_name@@Base+0x232>)
    90e0:	ldr	r0, [r7, r3]
    90e2:	add	r2, pc
    90e4:	ldr	r3, [pc, #180]	; (919c <btrfs_match_dir_item_name@@Base+0x236>)
    90e6:	str	r1, [sp, #12]
    90e8:	add	r3, pc
    90ea:	str	r3, [sp, #8]
    90ec:	ldr	r3, [pc, #176]	; (91a0 <btrfs_match_dir_item_name@@Base+0x23a>)
    90ee:	add	r3, pc
    90f0:	str	r3, [sp, #4]
    90f2:	movs	r3, #50	; 0x32
    90f4:	str	r3, [sp, #0]
    90f6:	ldr	r3, [pc, #172]	; (91a4 <btrfs_match_dir_item_name@@Base+0x23e>)
    90f8:	ldr	r0, [r0, #0]
    90fa:	add	r3, pc
    90fc:	blx	8860 <__fprintf_chk@plt+0x4>
    9100:	bl	8eb4 <_start@@Base+0x110>
    9104:	b.n	9110 <btrfs_match_dir_item_name@@Base+0x1aa>
    9106:	cmp	r4, #0
    9108:	bge.n	910e <btrfs_match_dir_item_name@@Base+0x1a8>
    910a:	mov	r0, r4
    910c:	b.n	915c <btrfs_match_dir_item_name@@Base+0x1f6>
    910e:	bne.n	90da <btrfs_match_dir_item_name@@Base+0x174>
    9110:	ldr	r2, [r5, #0]
    9112:	movs	r1, #25
    9114:	ldr	r3, [r5, #32]
    9116:	mla	r3, r1, r3, r2
    911a:	ldr.w	r0, [r3, #214]	; 0xd6
    911e:	add.w	r4, r0, #101	; 0x65
    9122:	ldr.w	r0, [r3, #218]	; 0xda
    9126:	cmp	r6, r0
    9128:	bls.n	9158 <btrfs_match_dir_item_name@@Base+0x1f2>
    912a:	ldr	r3, [pc, #88]	; (9184 <btrfs_match_dir_item_name@@Base+0x21e>)
    912c:	movs	r1, #1
    912e:	ldr	r2, [pc, #120]	; (91a8 <btrfs_match_dir_item_name@@Base+0x242>)
    9130:	ldr	r0, [r7, r3]
    9132:	add	r2, pc
    9134:	ldr	r3, [pc, #116]	; (91ac <btrfs_match_dir_item_name@@Base+0x246>)
    9136:	str	r1, [sp, #12]
    9138:	add	r3, pc
    913a:	str	r3, [sp, #8]
    913c:	ldr	r3, [pc, #112]	; (91b0 <btrfs_match_dir_item_name@@Base+0x24a>)
    913e:	add	r3, pc
    9140:	str	r3, [sp, #4]
    9142:	movs	r3, #54	; 0x36
    9144:	str	r3, [sp, #0]
    9146:	ldr	r3, [pc, #108]	; (91b4 <btrfs_match_dir_item_name@@Base+0x24e>)
    9148:	ldr	r0, [r0, #0]
    914a:	add	r3, pc
    914c:	blx	8860 <__fprintf_chk@plt+0x4>
    9150:	bl	8eb4 <_start@@Base+0x110>
    9154:	blx	8980 <abort@plt>
    9158:	subs	r0, r0, r6
    915a:	add	r0, r4
    915c:	ldr	r2, [pc, #88]	; (91b8 <btrfs_match_dir_item_name@@Base+0x252>)
    915e:	ldr	r3, [pc, #28]	; (917c <btrfs_match_dir_item_name@@Base+0x216>)
    9160:	add	r2, pc
    9162:	ldr	r3, [r2, r3]
    9164:	ldr	r2, [r3, #0]
    9166:	ldr	r3, [sp, #20]
    9168:	eors	r2, r3
    916a:	beq.n	9170 <btrfs_match_dir_item_name@@Base+0x20a>
    916c:	blx	8510 <__stack_chk_fail@plt>
    9170:	add	sp, #24
    9172:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    9176:	nop
    9178:	add	r5, sp, #176	; 0xb0
    917a:	movs	r5, r0
    917c:	lsls	r0, r4, #8
    917e:	movs	r0, r0
    9180:	add	r5, sp, #24
    9182:	movs	r5, r0
    9184:	lsls	r0, r6, #8
    9186:	movs	r0, r0
    9188:	ldc2	0, cr0, [r6, #8]!
    918c:	cmp	r4, #167	; 0xa7
    918e:	movs	r3, r0
    9190:	cdp2	0, 4, cr0, cr4, cr2, {0}
    9194:	ldc2	0, cr0, [r1, #8]
    9198:	stc2	0, cr0, [sl, #8]
    919c:	cmp	r4, #125	; 0x7d
    919e:	movs	r3, r0
    91a0:	cdp2	0, 1, cr0, cr10, cr2, {0}
    91a4:	stc2l	0, cr0, [r7, #-8]!
    91a8:	ldc2l	0, cr0, [r0, #-8]!
    91ac:	ldc2	0, cr0, [r7, #8]
    91b0:	stc2l	0, cr0, [sl, #8]
    91b4:	ldc2	0, cr0, [r7, #-8]
    91b8:	add	r4, sp, #144	; 0x90
    91ba:	movs	r5, r0

000091bc <btrfs_insert_xattr_item@@Base>:
    91bc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    91c0:	mov	r5, r3
    91c2:	vpush	{d8}
    91c6:	mov	r7, r2
    91c8:	ldr	r2, [pc, #320]	; (930c <btrfs_insert_xattr_item@@Base+0x150>)
    91ca:	mov	r9, r0
    91cc:	mov	sl, r1
    91ce:	mvn.w	r0, #1
    91d2:	add	r2, pc
    91d4:	mov	r1, r7
    91d6:	sub	sp, #76	; 0x4c
    91d8:	movs	r4, #0
    91da:	ldr.w	fp, [pc, #308]	; 9310 <btrfs_insert_xattr_item@@Base+0x154>
    91de:	ldr	r3, [sp, #120]	; 0x78
    91e0:	ldrh.w	r8, [sp, #124]	; 0x7c
    91e4:	add	fp, pc
    91e6:	vmov	s16, r3
    91ea:	ldr	r3, [pc, #296]	; (9314 <btrfs_insert_xattr_item@@Base+0x158>)
    91ec:	ldr	r3, [r2, r3]
    91ee:	mov	r2, r5
    91f0:	ldr	r3, [r3, #0]
    91f2:	str	r3, [sp, #68]	; 0x44
    91f4:	mov.w	r3, #0
    91f8:	ldr	r3, [sp, #128]	; 0x80
    91fa:	str	r3, [sp, #28]
    91fc:	ldr	r3, [sp, #132]	; 0x84
    91fe:	str	r3, [sp, #32]
    9200:	movs	r3, #24
    9202:	strb.w	r3, [sp, #36]	; 0x24
    9206:	bl	16aee <crc32c_le@@Base>
    920a:	str.w	r4, [sp, #41]	; 0x29
    920e:	str.w	r0, [sp, #37]	; 0x25
    9212:	bl	17544 <btrfs_alloc_path@@Base>
    9216:	mov	r6, r0
    9218:	cmp	r0, #0
    921a:	beq.n	92fc <btrfs_insert_xattr_item@@Base+0x140>
    921c:	add.w	r3, r8, #30
    9220:	mov	r2, r0
    9222:	add	r3, r5
    9224:	mov	r0, r9
    9226:	str	r3, [sp, #0]
    9228:	mov	r1, sl
    922a:	add	r3, sp, #28
    922c:	strd	r7, r5, [sp, #4]
    9230:	bl	9050 <btrfs_match_dir_item_name@@Base+0xea>
    9234:	cmn.w	r0, #4096	; 0x1000
    9238:	mov	r9, r0
    923a:	bls.n	926e <btrfs_insert_xattr_item@@Base+0xb2>
    923c:	ldr	r3, [pc, #216]	; (9318 <btrfs_insert_xattr_item@@Base+0x15c>)
    923e:	movs	r1, #1
    9240:	ldr	r2, [pc, #216]	; (931c <btrfs_insert_xattr_item@@Base+0x160>)
    9242:	ldr.w	r0, [fp, r3]
    9246:	add	r2, pc
    9248:	ldr	r3, [pc, #212]	; (9320 <btrfs_insert_xattr_item@@Base+0x164>)
    924a:	str	r1, [sp, #12]
    924c:	add	r3, pc
    924e:	str	r3, [sp, #8]
    9250:	ldr	r3, [pc, #208]	; (9324 <btrfs_insert_xattr_item@@Base+0x168>)
    9252:	add	r3, pc
    9254:	adds	r3, #21
    9256:	str	r3, [sp, #4]
    9258:	movs	r3, #89	; 0x59
    925a:	str	r3, [sp, #0]
    925c:	ldr	r3, [pc, #200]	; (9328 <btrfs_insert_xattr_item@@Base+0x16c>)
    925e:	ldr	r0, [r0, #0]
    9260:	add	r3, pc
    9262:	blx	8860 <__fprintf_chk@plt+0x4>
    9266:	bl	8eb4 <_start@@Base+0x110>
    926a:	blx	8980 <abort@plt>
    926e:	ldr	r0, [r6, #0]
    9270:	add	r1, sp, #48	; 0x30
    9272:	movs	r2, #0
    9274:	movs	r3, #0
    9276:	strd	r2, r3, [sp, #48]	; 0x30
    927a:	movs	r3, #17
    927c:	mov	r2, r9
    927e:	str	r0, [sp, #20]
    9280:	strb.w	r4, [sp, #57]	; 0x39
    9284:	strb.w	r4, [sp, #58]	; 0x3a
    9288:	strb.w	r4, [sp, #59]	; 0x3b
    928c:	strb.w	r4, [sp, #60]	; 0x3c
    9290:	strb.w	r4, [sp, #61]	; 0x3d
    9294:	strb.w	r4, [sp, #62]	; 0x3e
    9298:	strb.w	r4, [sp, #63]	; 0x3f
    929c:	strb.w	r4, [sp, #64]	; 0x40
    92a0:	strb.w	r4, [sp, #56]	; 0x38
    92a4:	bl	16a24 <write_extent_buffer@@Base>
    92a8:	ldr	r0, [sp, #20]
    92aa:	movs	r2, #8
    92ac:	mov	r1, r7
    92ae:	add.w	r3, r0, #96	; 0x60
    92b2:	add	r3, r9
    92b4:	strb	r2, [r3, #29]
    92b6:	add.w	r2, r9, #30
    92ba:	add.w	sl, r2, r5
    92be:	strh.w	r5, [r3, #27]
    92c2:	strh.w	r8, [r3, #25]
    92c6:	mov	r3, r5
    92c8:	bl	16a24 <write_extent_buffer@@Base>
    92cc:	vmov	r1, s16
    92d0:	mov	r3, r8
    92d2:	mov	r2, sl
    92d4:	ldr	r0, [sp, #20]
    92d6:	bl	16a24 <write_extent_buffer@@Base>
    92da:	ldr	r0, [r6, #0]
    92dc:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
    92e0:	mov	r0, r6
    92e2:	bl	17572 <btrfs_free_path@@Base>
    92e6:	mov	r0, r4
    92e8:	ldr	r2, [pc, #64]	; (932c <btrfs_insert_xattr_item@@Base+0x170>)
    92ea:	ldr	r3, [pc, #40]	; (9314 <btrfs_insert_xattr_item@@Base+0x158>)
    92ec:	add	r2, pc
    92ee:	ldr	r3, [r2, r3]
    92f0:	ldr	r2, [r3, #0]
    92f2:	ldr	r3, [sp, #68]	; 0x44
    92f4:	eors	r2, r3
    92f6:	beq.n	9302 <btrfs_insert_xattr_item@@Base+0x146>
    92f8:	blx	8510 <__stack_chk_fail@plt>
    92fc:	mvn.w	r0, #11
    9300:	b.n	92e8 <btrfs_insert_xattr_item@@Base+0x12c>
    9302:	add	sp, #76	; 0x4c
    9304:	vpop	{d8}
    9308:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    930c:	add	r3, sp, #712	; 0x2c8
    930e:	movs	r5, r0
    9310:	add	r3, sp, #640	; 0x280
    9312:	movs	r5, r0
    9314:	lsls	r0, r4, #8
    9316:	movs	r0, r0
    9318:	lsls	r0, r6, #8
    931a:	movs	r0, r0
    931c:	mrrc2	0, 0, r0, ip, cr2
    9320:	stc2	0, cr0, [fp], #8
    9324:	ldc2	0, cr0, [r6], #8
    9328:	stc2	0, cr0, [r1], {2}
    932c:	add	r2, sp, #608	; 0x260
    932e:	movs	r5, r0

00009330 <btrfs_insert_dir_item@@Base>:
    9330:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9334:	sub	sp, #92	; 0x5c
    9336:	mov	r5, r3
    9338:	mov	r8, r2
    933a:	ldr	r3, [sp, #144]	; 0x90
    933c:	mov	sl, r0
    933e:	ldr	r2, [pc, #404]	; (94d4 <btrfs_insert_dir_item@@Base+0x1a4>)
    9340:	mov	r9, r1
    9342:	mvn.w	r0, #1
    9346:	mov	r1, r8
    9348:	str	r3, [sp, #24]
    934a:	add	r2, pc
    934c:	ldr	r3, [sp, #148]	; 0x94
    934e:	movs	r4, #0
    9350:	ldr	r6, [sp, #136]	; 0x88
    9352:	ldrb.w	fp, [sp, #140]	; 0x8c
    9356:	str	r3, [sp, #28]
    9358:	ldr	r3, [pc, #380]	; (94d8 <btrfs_insert_dir_item@@Base+0x1a8>)
    935a:	ldr	r3, [r2, r3]
    935c:	mov	r2, r5
    935e:	ldr	r3, [r3, #0]
    9360:	str	r3, [sp, #84]	; 0x54
    9362:	mov.w	r3, #0
    9366:	ldr	r3, [sp, #128]	; 0x80
    9368:	str	r3, [sp, #44]	; 0x2c
    936a:	ldr	r3, [sp, #132]	; 0x84
    936c:	str	r3, [sp, #48]	; 0x30
    936e:	movs	r3, #84	; 0x54
    9370:	strb.w	r3, [sp, #52]	; 0x34
    9374:	bl	16aee <crc32c_le@@Base>
    9378:	str.w	r4, [sp, #57]	; 0x39
    937c:	str.w	r0, [sp, #53]	; 0x35
    9380:	bl	17544 <btrfs_alloc_path@@Base>
    9384:	mov	r7, r0
    9386:	cmp	r0, #0
    9388:	beq.w	94c6 <btrfs_insert_dir_item@@Base+0x196>
    938c:	add.w	r3, r5, #30
    9390:	mov	r2, r0
    9392:	str	r3, [sp, #20]
    9394:	mov	r1, r9
    9396:	str	r3, [sp, #0]
    9398:	mov	r0, sl
    939a:	add	r3, sp, #44	; 0x2c
    939c:	strd	r8, r5, [sp, #4]
    93a0:	bl	9050 <btrfs_match_dir_item_name@@Base+0xea>
    93a4:	cmn.w	r0, #4096	; 0x1000
    93a8:	mov	r2, r0
    93aa:	bls.n	93d4 <btrfs_insert_dir_item@@Base+0xa4>
    93ac:	cmn.w	r0, #17
    93b0:	beq.n	9426 <btrfs_insert_dir_item@@Base+0xf6>
    93b2:	mov	r5, r0
    93b4:	mov	r0, r7
    93b6:	cmp	r5, #0
    93b8:	it	ne
    93ba:	movne	r4, r5
    93bc:	bl	17572 <btrfs_free_path@@Base>
    93c0:	ldr	r2, [pc, #280]	; (94dc <btrfs_insert_dir_item@@Base+0x1ac>)
    93c2:	ldr	r3, [pc, #276]	; (94d8 <btrfs_insert_dir_item@@Base+0x1a8>)
    93c4:	add	r2, pc
    93c6:	ldr	r3, [r2, r3]
    93c8:	ldr	r2, [r3, #0]
    93ca:	ldr	r3, [sp, #84]	; 0x54
    93cc:	eors	r2, r3
    93ce:	beq.n	94cc <btrfs_insert_dir_item@@Base+0x19c>
    93d0:	blx	8510 <__stack_chk_fail@plt>
    93d4:	ldr.w	r3, [r6, #13]
    93d8:	ldr.w	r1, [r6, #9]
    93dc:	ldr	r0, [r7, #0]
    93de:	str.w	r3, [sp, #77]	; 0x4d
    93e2:	ldrb	r3, [r6, #8]
    93e4:	str.w	r1, [sp, #73]	; 0x49
    93e8:	ldr	r1, [r6, #0]
    93ea:	strb.w	r3, [sp, #72]	; 0x48
    93ee:	ldr	r3, [r6, #4]
    93f0:	str	r2, [sp, #36]	; 0x24
    93f2:	str	r0, [sp, #32]
    93f4:	strd	r1, r3, [sp, #64]	; 0x40
    93f8:	add	r1, sp, #64	; 0x40
    93fa:	movs	r3, #17
    93fc:	bl	16a24 <write_extent_buffer@@Base>
    9400:	ldr	r0, [sp, #32]
    9402:	ldr	r2, [sp, #36]	; 0x24
    9404:	mov	r1, r8
    9406:	add.w	r3, r0, #96	; 0x60
    940a:	add	r3, r2
    940c:	adds	r2, #30
    940e:	strb.w	fp, [r3, #29]
    9412:	strb	r4, [r3, #25]
    9414:	strb	r4, [r3, #26]
    9416:	strh.w	r5, [r3, #27]
    941a:	mov	r3, r5
    941c:	bl	16a24 <write_extent_buffer@@Base>
    9420:	ldr	r0, [sp, #32]
    9422:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
    9426:	ldr.w	r3, [r9, #464]	; 0x1d0
    942a:	ldr	r3, [r3, #28]
    942c:	cmp	r3, r9
    942e:	beq.n	94c0 <btrfs_insert_dir_item@@Base+0x190>
    9430:	mov	r0, r7
    9432:	bl	1754c <btrfs_release_path@@Base>
    9436:	movs	r3, #96	; 0x60
    9438:	strb.w	r3, [sp, #52]	; 0x34
    943c:	mov	r1, r9
    943e:	ldr	r3, [sp, #24]
    9440:	mov	r2, r7
    9442:	mov	r0, sl
    9444:	strd	r8, r5, [sp, #4]
    9448:	str.w	r3, [sp, #53]	; 0x35
    944c:	ldr	r3, [sp, #28]
    944e:	str.w	r3, [sp, #57]	; 0x39
    9452:	ldr	r3, [sp, #20]
    9454:	str	r3, [sp, #0]
    9456:	add	r3, sp, #44	; 0x2c
    9458:	bl	9050 <btrfs_match_dir_item_name@@Base+0xea>
    945c:	cmn.w	r0, #4096	; 0x1000
    9460:	mov	r9, r0
    9462:	bls.n	946a <btrfs_insert_dir_item@@Base+0x13a>
    9464:	mov	r4, r0
    9466:	movs	r5, #0
    9468:	b.n	93b4 <btrfs_insert_dir_item@@Base+0x84>
    946a:	ldr.w	r3, [r6, #13]
    946e:	add	r1, sp, #64	; 0x40
    9470:	ldr	r0, [r7, #0]
    9472:	movs	r4, #0
    9474:	ldr.w	r2, [r6, #9]
    9478:	str.w	r3, [sp, #77]	; 0x4d
    947c:	ldrb	r3, [r6, #8]
    947e:	str.w	r2, [sp, #73]	; 0x49
    9482:	ldr	r2, [r6, #0]
    9484:	strb.w	r3, [sp, #72]	; 0x48
    9488:	ldr	r3, [r6, #4]
    948a:	str	r0, [sp, #20]
    948c:	strd	r2, r3, [sp, #64]	; 0x40
    9490:	mov	r2, r9
    9492:	movs	r3, #17
    9494:	bl	16a24 <write_extent_buffer@@Base>
    9498:	ldr	r0, [sp, #20]
    949a:	add.w	r2, r9, #30
    949e:	mov	r1, r8
    94a0:	add.w	r3, r0, #96	; 0x60
    94a4:	add	r3, r9
    94a6:	strb.w	fp, [r3, #29]
    94aa:	strb	r4, [r3, #25]
    94ac:	strb	r4, [r3, #26]
    94ae:	strh.w	r5, [r3, #27]
    94b2:	mov	r3, r5
    94b4:	bl	16a24 <write_extent_buffer@@Base>
    94b8:	ldr	r0, [sp, #20]
    94ba:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
    94be:	b.n	9466 <btrfs_insert_dir_item@@Base+0x136>
    94c0:	movs	r4, #0
    94c2:	mov	r5, r4
    94c4:	b.n	93b4 <btrfs_insert_dir_item@@Base+0x84>
    94c6:	mvn.w	r4, #11
    94ca:	b.n	93c0 <btrfs_insert_dir_item@@Base+0x90>
    94cc:	mov	r0, r4
    94ce:	add	sp, #92	; 0x5c
    94d0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    94d4:	add	r2, sp, #232	; 0xe8
    94d6:	movs	r5, r0
    94d8:	lsls	r0, r4, #8
    94da:	movs	r0, r0
    94dc:	add	r1, sp, #768	; 0x300
    94de:	movs	r5, r0

000094e0 <btrfs_lookup_dir_item@@Base>:
    94e0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    94e4:	mov	r4, r2
    94e6:	sub	sp, #60	; 0x3c
    94e8:	ldr	r2, [pc, #208]	; (95bc <btrfs_lookup_dir_item@@Base+0xdc>)
    94ea:	ldr	r3, [pc, #212]	; (95c0 <btrfs_lookup_dir_item@@Base+0xe0>)
    94ec:	mov	fp, r0
    94ee:	ldrd	r8, r9, [sp, #104]	; 0x68
    94f2:	add	r2, pc
    94f4:	ldrd	r6, r7, [sp, #96]	; 0x60
    94f8:	mov	r5, r1
    94fa:	ldr	r3, [r2, r3]
    94fc:	mvn.w	r0, #1
    9500:	mov	r1, r8
    9502:	mov	r2, r9
    9504:	ldr	r3, [r3, #0]
    9506:	str	r3, [sp, #52]	; 0x34
    9508:	mov.w	r3, #0
    950c:	ldr.w	sl, [sp, #112]	; 0x70
    9510:	movs	r3, #84	; 0x54
    9512:	strd	r6, r7, [sp, #12]
    9516:	strb.w	r3, [sp, #20]
    951a:	bl	16aee <crc32c_le@@Base>
    951e:	movs	r3, #0
    9520:	str.w	r3, [sp, #25]
    9524:	subs.w	r3, sl, r3
    9528:	add	r2, sp, #12
    952a:	mov	r1, r5
    952c:	it	ne
    952e:	movne	r3, #1
    9530:	str	r3, [sp, #4]
    9532:	mov.w	r3, sl, asr #31
    9536:	str	r3, [sp, #0]
    9538:	mov	r3, r4
    953a:	str.w	r0, [sp, #21]
    953e:	mov	r0, fp
    9540:	bl	19930 <btrfs_search_slot@@Base>
    9544:	cmp	r0, #0
    9546:	blt.n	9550 <btrfs_lookup_dir_item@@Base+0x70>
    9548:	beq.n	9568 <btrfs_lookup_dir_item@@Base+0x88>
    954a:	ldr	r3, [r4, #32]
    954c:	cbnz	r3, 9564 <btrfs_lookup_dir_item@@Base+0x84>
    954e:	movs	r0, #0
    9550:	ldr	r2, [pc, #112]	; (95c4 <btrfs_lookup_dir_item@@Base+0xe4>)
    9552:	ldr	r3, [pc, #108]	; (95c0 <btrfs_lookup_dir_item@@Base+0xe0>)
    9554:	add	r2, pc
    9556:	ldr	r3, [r2, r3]
    9558:	ldr	r2, [r3, #0]
    955a:	ldr	r3, [sp, #52]	; 0x34
    955c:	eors	r2, r3
    955e:	beq.n	95b6 <btrfs_lookup_dir_item@@Base+0xd6>
    9560:	blx	8510 <__stack_chk_fail@plt>
    9564:	subs	r3, #1
    9566:	str	r3, [r4, #32]
    9568:	ldr	r3, [r4, #32]
    956a:	movs	r2, #25
    956c:	ldr	r0, [r4, #0]
    956e:	add	r1, sp, #32
    9570:	muls	r2, r3
    9572:	movs	r3, #17
    9574:	adds	r2, #101	; 0x65
    9576:	bl	16a0e <read_extent_buffer@@Base>
    957a:	ldrd	r2, r3, [sp, #32]
    957e:	ldr.w	r0, [sp, #41]	; 0x29
    9582:	cmp	r7, r3
    9584:	ldr.w	r1, [sp, #45]	; 0x2d
    9588:	it	eq
    958a:	cmpeq	r6, r2
    958c:	ldrb.w	ip, [sp, #40]	; 0x28
    9590:	bne.n	954e <btrfs_lookup_dir_item@@Base+0x6e>
    9592:	cmp.w	ip, #84	; 0x54
    9596:	bne.n	954e <btrfs_lookup_dir_item@@Base+0x6e>
    9598:	ldr.w	r3, [sp, #25]
    959c:	ldr.w	r2, [sp, #21]
    95a0:	cmp	r3, r1
    95a2:	it	eq
    95a4:	cmpeq	r2, r0
    95a6:	bne.n	954e <btrfs_lookup_dir_item@@Base+0x6e>
    95a8:	mov	r3, r9
    95aa:	mov	r2, r8
    95ac:	mov	r1, r4
    95ae:	mov	r0, r5
    95b0:	bl	8f66 <btrfs_match_dir_item_name@@Base>
    95b4:	b.n	9550 <btrfs_lookup_dir_item@@Base+0x70>
    95b6:	add	sp, #60	; 0x3c
    95b8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    95bc:	add	r0, sp, #584	; 0x248
    95be:	movs	r5, r0
    95c0:	lsls	r0, r4, #8
    95c2:	movs	r0, r0
    95c4:	add	r0, sp, #192	; 0xc0
    95c6:	movs	r5, r0

000095c8 <btrfs_lookup_dir_index@@Base>:
    95c8:	ldr.w	ip, [pc, #128]	; 964c <btrfs_lookup_dir_index@@Base+0x84>
    95cc:	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
    95d0:	mov	r4, r2
    95d2:	ldr	r2, [pc, #124]	; (9650 <btrfs_lookup_dir_index@@Base+0x88>)
    95d4:	add	ip, pc
    95d6:	sub	sp, #32
    95d8:	mov	r5, r1
    95da:	ldr.w	r2, [ip, r2]
    95de:	ldr	r3, [sp, #80]	; 0x50
    95e0:	ldr	r2, [r2, #0]
    95e2:	str	r2, [sp, #28]
    95e4:	mov.w	r2, #0
    95e8:	movs	r2, #96	; 0x60
    95ea:	strb.w	r2, [sp, #16]
    95ee:	ldr	r2, [sp, #72]	; 0x48
    95f0:	ldrd	r8, r9, [sp, #56]	; 0x38
    95f4:	ldr	r6, [sp, #64]	; 0x40
    95f6:	str.w	r2, [sp, #17]
    95fa:	ldr	r2, [sp, #76]	; 0x4c
    95fc:	strd	r8, r9, [sp, #8]
    9600:	str.w	r2, [sp, #21]
    9604:	subs	r2, r3, #0
    9606:	mov.w	r3, r3, asr #31
    960a:	str	r3, [sp, #0]
    960c:	it	ne
    960e:	movne	r2, #1
    9610:	mov	r3, r4
    9612:	str	r2, [sp, #4]
    9614:	add	r2, sp, #8
    9616:	bl	19930 <btrfs_search_slot@@Base>
    961a:	cmp	r0, #0
    961c:	blt.n	962c <btrfs_lookup_dir_index@@Base+0x64>
    961e:	bne.n	9640 <btrfs_lookup_dir_index@@Base+0x78>
    9620:	ldr	r3, [sp, #68]	; 0x44
    9622:	mov	r2, r6
    9624:	mov	r1, r4
    9626:	mov	r0, r5
    9628:	bl	8f66 <btrfs_match_dir_item_name@@Base>
    962c:	ldr	r2, [pc, #36]	; (9654 <btrfs_lookup_dir_index@@Base+0x8c>)
    962e:	ldr	r3, [pc, #32]	; (9650 <btrfs_lookup_dir_index@@Base+0x88>)
    9630:	add	r2, pc
    9632:	ldr	r3, [r2, r3]
    9634:	ldr	r2, [r3, #0]
    9636:	ldr	r3, [sp, #28]
    9638:	eors	r2, r3
    963a:	beq.n	9646 <btrfs_lookup_dir_index@@Base+0x7e>
    963c:	blx	8510 <__stack_chk_fail@plt>
    9640:	mvn.w	r0, #1
    9644:	b.n	962c <btrfs_lookup_dir_index@@Base+0x64>
    9646:	add	sp, #32
    9648:	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    964c:	add	r7, pc, #704	; (adr r7, 9910 <btrfs_find_free_objectid@@Base+0x2b8>)
    964e:	movs	r5, r0
    9650:	lsls	r0, r4, #8
    9652:	movs	r0, r0
    9654:	add	r7, pc, #336	; (adr r7, 97a8 <btrfs_find_free_objectid@@Base+0x150>)
    9656:	movs	r5, r0

00009658 <btrfs_find_free_objectid@@Base>:
    9658:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    965c:	mov	sl, r0
    965e:	vpush	{d8}
    9662:	mov	r5, r1
    9664:	ldr	r3, [pc, #444]	; (9824 <btrfs_find_free_objectid@@Base+0x1cc>)
    9666:	ldr	r2, [pc, #448]	; (9828 <btrfs_find_free_objectid@@Base+0x1d0>)
    9668:	add	r3, pc
    966a:	sub	sp, #140	; 0x8c
    966c:	add	r2, pc
    966e:	str	r3, [sp, #20]
    9670:	ldr	r3, [pc, #440]	; (982c <btrfs_find_free_objectid@@Base+0x1d4>)
    9672:	ldr.w	r8, [sp, #184]	; 0xb8
    9676:	ldr	r3, [r2, r3]
    9678:	ldr	r3, [r3, #0]
    967a:	str	r3, [sp, #132]	; 0x84
    967c:	mov.w	r3, #0
    9680:	bl	17544 <btrfs_alloc_path@@Base>
    9684:	mov	r4, r0
    9686:	cmp	r0, #0
    9688:	beq.w	980e <btrfs_find_free_objectid@@Base+0x1b6>
    968c:	ldrd	r6, r7, [r5, #504]	; 0x1f8
    9690:	mov.w	r9, #0
    9694:	strb.w	r9, [sp, #37]	; 0x25
    9698:	cmp	r7, #0
    969a:	strb.w	r9, [sp, #38]	; 0x26
    969e:	it	eq
    96a0:	cmpeq.w	r6, #256	; 0x100
    96a4:	strb.w	r9, [sp, #39]	; 0x27
    96a8:	strb.w	r9, [sp, #40]	; 0x28
    96ac:	itt	cc
    96ae:	movcc.w	r6, #256	; 0x100
    96b2:	movcc	r7, #0
    96b4:	strb.w	r9, [sp, #41]	; 0x29
    96b8:	strd	r6, r7, [sp, #28]
    96bc:	strb.w	r9, [sp, #42]	; 0x2a
    96c0:	strb.w	r9, [sp, #43]	; 0x2b
    96c4:	strb.w	r9, [sp, #44]	; 0x2c
    96c8:	strb.w	r9, [sp, #36]	; 0x24
    96cc:	bl	1753c <btrfs_init_path@@Base>
    96d0:	mov	r3, r4
    96d2:	add	r2, sp, #28
    96d4:	mov	r1, r5
    96d6:	mov	r0, sl
    96d8:	strd	r9, r9, [sp]
    96dc:	bl	19930 <btrfs_search_slot@@Base>
    96e0:	subs	r3, r0, #0
    96e2:	blt.w	97f0 <btrfs_find_free_objectid@@Base+0x198>
    96e6:	ldr	r3, [r4, #32]
    96e8:	cmp	r3, r9
    96ea:	mov.w	r9, #0
    96ee:	itt	gt
    96f0:	addgt.w	r3, r3, #4294967295	; 0xffffffff
    96f4:	strgt	r3, [r4, #32]
    96f6:	add	r3, sp, #48	; 0x30
    96f8:	mov	fp, r9
    96fa:	mov	sl, r9
    96fc:	vmov	s16, r3
    9700:	ldr	r0, [r4, #0]
    9702:	ldr	r2, [r4, #32]
    9704:	ldr.w	r3, [r0, #192]	; 0xc0
    9708:	cmp	r2, r3
    970a:	bcc.n	979c <btrfs_find_free_objectid@@Base+0x144>
    970c:	movs	r3, #0
    970e:	mov	r1, r4
    9710:	strb.w	r3, [r4, #65]	; 0x41
    9714:	ldr.w	r0, [r5, #464]	; 0x1d0
    9718:	bl	1ad64 <btrfs_next_sibling_tree_block@@Base>
    971c:	subs	r3, r0, #0
    971e:	beq.n	9700 <btrfs_find_free_objectid@@Base+0xa8>
    9720:	blt.n	97f0 <btrfs_find_free_objectid@@Base+0x198>
    9722:	cmp.w	r9, #0
    9726:	bne.n	9786 <btrfs_find_free_objectid@@Base+0x12e>
    9728:	strd	r6, r7, [r8]
    972c:	ldrd	r2, r3, [r8]
    9730:	mov	r0, r4
    9732:	strd	r2, r3, [r5, #504]	; 0x1f8
    9736:	bl	17572 <btrfs_free_path@@Base>
    973a:	ldrd	r2, r3, [r8]
    973e:	cmp	r3, r7
    9740:	it	eq
    9742:	cmpeq	r2, r6
    9744:	bcs.n	9814 <btrfs_find_free_objectid@@Base+0x1bc>
    9746:	ldr	r2, [sp, #20]
    9748:	add	r4, sp, #68	; 0x44
    974a:	ldr	r3, [pc, #228]	; (9830 <btrfs_find_free_objectid@@Base+0x1d8>)
    974c:	movs	r1, #1
    974e:	ldr	r0, [r2, r3]
    9750:	ldr	r3, [pc, #224]	; (9834 <btrfs_find_free_objectid@@Base+0x1dc>)
    9752:	ldr	r2, [pc, #228]	; (9838 <btrfs_find_free_objectid@@Base+0x1e0>)
    9754:	add	r3, pc
    9756:	str	r3, [sp, #8]
    9758:	ldr	r3, [pc, #224]	; (983c <btrfs_find_free_objectid@@Base+0x1e4>)
    975a:	add	r2, pc
    975c:	str	r1, [sp, #12]
    975e:	add	r3, pc
    9760:	str	r3, [sp, #4]
    9762:	movs	r3, #98	; 0x62
    9764:	str	r3, [sp, #0]
    9766:	ldr	r3, [pc, #216]	; (9840 <btrfs_find_free_objectid@@Base+0x1e8>)
    9768:	ldr	r0, [r0, #0]
    976a:	add	r3, pc
    976c:	blx	8860 <__fprintf_chk@plt+0x4>
    9770:	movs	r1, #16
    9772:	mov	r0, r4
    9774:	blx	86c4 <backtrace@plt>
    9778:	movs	r2, #2
    977a:	mov	r1, r0
    977c:	mov	r0, r4
    977e:	blx	89c8 <backtrace_symbols_fd@plt>
    9782:	blx	8980 <abort@plt>
    9786:	cmp	sl, r7
    9788:	mov	r2, fp
    978a:	it	eq
    978c:	cmpeq	fp, r6
    978e:	mov	r3, sl
    9790:	itt	cc
    9792:	movcc	r2, r6
    9794:	movcc	r3, r7
    9796:	strd	r2, r3, [r8]
    979a:	b.n	972c <btrfs_find_free_objectid@@Base+0xd4>
    979c:	movs	r3, #25
    979e:	vmov	r1, s16
    97a2:	muls	r2, r3
    97a4:	movs	r3, #17
    97a6:	adds	r2, #101	; 0x65
    97a8:	bl	16a0e <read_extent_buffer@@Base>
    97ac:	ldrd	r2, r3, [sp, #48]	; 0x30
    97b0:	cmp	r3, r7
    97b2:	it	eq
    97b4:	cmpeq	r2, r6
    97b6:	bcc.n	97dc <btrfs_find_free_objectid@@Base+0x184>
    97b8:	cmp.w	r9, #0
    97bc:	beq.n	97dc <btrfs_find_free_objectid@@Base+0x184>
    97be:	cmp	sl, r7
    97c0:	mov	r0, fp
    97c2:	it	eq
    97c4:	cmpeq	fp, r6
    97c6:	mov	r1, sl
    97c8:	itt	cc
    97ca:	movcc	r0, r6
    97cc:	movcc	r1, r7
    97ce:	cmp	r1, r3
    97d0:	it	eq
    97d2:	cmpeq	r0, r2
    97d4:	bcs.n	97dc <btrfs_find_free_objectid@@Base+0x184>
    97d6:	strd	r0, r1, [r8]
    97da:	b.n	972c <btrfs_find_free_objectid@@Base+0xd4>
    97dc:	adds.w	fp, r2, #1
    97e0:	mov.w	r9, #1
    97e4:	adc.w	sl, r3, #0
    97e8:	ldr	r3, [r4, #32]
    97ea:	adds	r3, #1
    97ec:	str	r3, [r4, #32]
    97ee:	b.n	9700 <btrfs_find_free_objectid@@Base+0xa8>
    97f0:	mov	r0, r4
    97f2:	str	r3, [sp, #20]
    97f4:	bl	17572 <btrfs_free_path@@Base>
    97f8:	ldr	r3, [sp, #20]
    97fa:	ldr	r1, [pc, #72]	; (9844 <btrfs_find_free_objectid@@Base+0x1ec>)
    97fc:	ldr	r2, [pc, #44]	; (982c <btrfs_find_free_objectid@@Base+0x1d4>)
    97fe:	add	r1, pc
    9800:	ldr	r2, [r1, r2]
    9802:	ldr	r1, [r2, #0]
    9804:	ldr	r2, [sp, #132]	; 0x84
    9806:	eors	r1, r2
    9808:	beq.n	9818 <btrfs_find_free_objectid@@Base+0x1c0>
    980a:	blx	8510 <__stack_chk_fail@plt>
    980e:	mvn.w	r3, #11
    9812:	b.n	97fa <btrfs_find_free_objectid@@Base+0x1a2>
    9814:	movs	r3, #0
    9816:	b.n	97fa <btrfs_find_free_objectid@@Base+0x1a2>
    9818:	mov	r0, r3
    981a:	add	sp, #140	; 0x8c
    981c:	vpop	{d8}
    9820:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9824:	add	r7, pc, #112	; (adr r7, 9898 <btrfs_find_free_objectid@@Base+0x240>)
    9826:	movs	r5, r0
    9828:	add	r7, pc, #96	; (adr r7, 988c <btrfs_find_free_objectid@@Base+0x234>)
    982a:	movs	r5, r0
    982c:	lsls	r0, r4, #8
    982e:	movs	r0, r0
    9830:	lsls	r0, r6, #8
    9832:	movs	r0, r0
    9834:			; <UNDEFINED> instruction: 0xf7ed0002
    9838:			; <UNDEFINED> instruction: 0xf7480002
    983c:			; <UNDEFINED> instruction: 0xf7fc0002
    9840:			; <UNDEFINED> instruction: 0xf7cb0002
    9844:	add	r5, pc, #536	; (adr r5, 9a60 <btrfs_find_free_objectid@@Base+0x408>)
    9846:	movs	r5, r0
    9848:	push	{r4, r5, lr}
    984a:	ldrd	r4, r5, [r0, #40]	; 0x28
    984e:	ldrd	r0, r1, [r1, #40]	; 0x28
    9852:	cmp	r1, r5
    9854:	it	eq
    9856:	cmpeq	r0, r4
    9858:	bcc.n	986e <btrfs_find_free_objectid@@Base+0x216>
    985a:	cmp	r5, r1
    985c:	it	eq
    985e:	cmpeq	r4, r0
    9860:	ite	cc
    9862:	movcc.w	r0, #4294967295	; 0xffffffff
    9866:	movcs	r0, #0
    9868:	cbz	r2, 986c <btrfs_find_free_objectid@@Base+0x214>
    986a:	negs	r0, r0
    986c:	pop	{r4, r5, pc}
    986e:	movs	r0, #1
    9870:	b.n	9868 <btrfs_find_free_objectid@@Base+0x210>
    9872:	push	{r4, r5, lr}
    9874:	ldrd	r4, r5, [r0, #56]	; 0x38
    9878:	ldrd	r0, r1, [r1, #56]	; 0x38
    987c:	cmp	r1, r5
    987e:	it	eq
    9880:	cmpeq	r0, r4
    9882:	bcc.n	9898 <btrfs_find_free_objectid@@Base+0x240>
    9884:	cmp	r5, r1
    9886:	it	eq
    9888:	cmpeq	r4, r0
    988a:	ite	cc
    988c:	movcc.w	r0, #4294967295	; 0xffffffff
    9890:	movcs	r0, #0
    9892:	cbz	r2, 9896 <btrfs_find_free_objectid@@Base+0x23e>
    9894:	negs	r0, r0
    9896:	pop	{r4, r5, pc}
    9898:	movs	r0, #1
    989a:	b.n	9892 <btrfs_find_free_objectid@@Base+0x23a>
    989c:	push	{r4, r5, lr}
    989e:	ldrd	r4, r5, [r0, #72]	; 0x48
    98a2:	ldrd	r0, r1, [r1, #72]	; 0x48
    98a6:	cmp	r1, r5
    98a8:	it	eq
    98aa:	cmpeq	r0, r4
    98ac:	bcc.n	98c2 <btrfs_find_free_objectid@@Base+0x26a>
    98ae:	cmp	r5, r1
    98b0:	it	eq
    98b2:	cmpeq	r4, r0
    98b4:	ite	cc
    98b6:	movcc.w	r0, #4294967295	; 0xffffffff
    98ba:	movcs	r0, #0
    98bc:	cbz	r2, 98c0 <btrfs_find_free_objectid@@Base+0x268>
    98be:	negs	r0, r0
    98c0:	pop	{r4, r5, pc}
    98c2:	movs	r0, #1
    98c4:	b.n	98bc <btrfs_find_free_objectid@@Base+0x264>
    98c6:	push	{r4, r5, lr}
    98c8:	ldrd	r4, r5, [r0, #96]	; 0x60
    98cc:	ldrd	r0, r1, [r1, #96]	; 0x60
    98d0:	cmp	r1, r5
    98d2:	it	eq
    98d4:	cmpeq	r0, r4
    98d6:	bcc.n	98ec <btrfs_find_free_objectid@@Base+0x294>
    98d8:	cmp	r5, r1
    98da:	it	eq
    98dc:	cmpeq	r4, r0
    98de:	ite	cc
    98e0:	movcc.w	r0, #4294967295	; 0xffffffff
    98e4:	movcs	r0, #0
    98e6:	cbz	r2, 98ea <btrfs_find_free_objectid@@Base+0x292>
    98e8:	negs	r0, r0
    98ea:	pop	{r4, r5, pc}
    98ec:	movs	r0, #1
    98ee:	b.n	98e6 <btrfs_find_free_objectid@@Base+0x28e>
    98f0:	push	{r4, r5, lr}
    98f2:	ldrd	r4, r5, [r0, #104]	; 0x68
    98f6:	ldrd	r0, r1, [r1, #104]	; 0x68
    98fa:	cmp	r1, r5
    98fc:	it	eq
    98fe:	cmpeq	r0, r4
    9900:	bcc.n	9916 <btrfs_find_free_objectid@@Base+0x2be>
    9902:	cmp	r5, r1
    9904:	it	eq
    9906:	cmpeq	r4, r0
    9908:	ite	cc
    990a:	movcc.w	r0, #4294967295	; 0xffffffff
    990e:	movcs	r0, #0
    9910:	cbz	r2, 9914 <btrfs_find_free_objectid@@Base+0x2bc>
    9912:	negs	r0, r0
    9914:	pop	{r4, r5, pc}
    9916:	movs	r0, #1
    9918:	b.n	9910 <btrfs_find_free_objectid@@Base+0x2b8>
    991a:	push	{r4, r5, lr}
    991c:	mov	r4, r2
    991e:	mov	r5, r3
    9920:	orrs.w	r3, r4, r5
    9924:	beq.n	993a <btrfs_find_free_objectid@@Base+0x2e2>
    9926:	ldrd	r4, r5, [r2, #40]	; 0x28
    992a:	ldrd	r2, r3, [r0, #40]	; 0x28
    992e:	cmp	r5, r3
    9930:	itte	eq
    9932:	cmpeq	r4, r2
    9934:	moveq	r0, #1
    9936:	movne	r0, #0
    9938:	pop	{r4, r5, pc}
    993a:	movs	r0, #0
    993c:	b.n	9938 <btrfs_find_free_objectid@@Base+0x2e0>
    993e:	push	{r3, r4, r5, lr}
    9940:	mov	r2, r0
    9942:	mov	r3, r1
    9944:	mov	r5, r0
    9946:	movs	r1, #0
    9948:	ldr	r4, [r2, #0]
    994a:	cbnz	r4, 9962 <btrfs_find_free_objectid@@Base+0x30a>
    994c:	add.w	r0, r3, #24
    9950:	strd	r1, r4, [r3, #24]
    9954:	str	r4, [r3, #32]
    9956:	mov	r1, r5
    9958:	str	r0, [r2, #0]
    995a:	bl	1321e <rb_insert_color@@Base>
    995e:	mov	r0, r4
    9960:	pop	{r3, r4, r5, pc}
    9962:	sub.w	r1, r4, #24
    9966:	movs	r2, #0
    9968:	mov	r0, r3
    996a:	bl	9848 <btrfs_find_free_objectid@@Base+0x1f0>
    996e:	cmp	r0, #0
    9970:	bge.n	997a <btrfs_find_free_objectid@@Base+0x322>
    9972:	add.w	r2, r4, #8
    9976:	mov	r1, r4
    9978:	b.n	9948 <btrfs_find_free_objectid@@Base+0x2f0>
    997a:	beq.n	9980 <btrfs_find_free_objectid@@Base+0x328>
    997c:	adds	r2, r4, #4
    997e:	b.n	9976 <btrfs_find_free_objectid@@Base+0x31e>
    9980:	mvn.w	r0, #16
    9984:	b.n	9960 <btrfs_find_free_objectid@@Base+0x308>
    9986:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, sl, fp, lr}
    998a:	mov	r5, r0
    998c:	mov	r0, r2
    998e:	ldr	r2, [pc, #144]	; (9a20 <btrfs_find_free_objectid@@Base+0x3c8>)
    9990:	mov	r1, r3
    9992:	ldr	r3, [pc, #144]	; (9a24 <btrfs_find_free_objectid@@Base+0x3cc>)
    9994:	add	r2, pc
    9996:	ldr	r3, [r2, r3]
    9998:	ldr	r3, [r3, #0]
    999a:	str	r3, [sp, #4]
    999c:	mov.w	r3, #0
    99a0:	orrs.w	r3, r0, r1
    99a4:	bne.n	99bc <btrfs_find_free_objectid@@Base+0x364>
    99a6:	movs	r0, #0
    99a8:	ldr	r2, [pc, #124]	; (9a28 <btrfs_find_free_objectid@@Base+0x3d0>)
    99aa:	ldr	r3, [pc, #120]	; (9a24 <btrfs_find_free_objectid@@Base+0x3cc>)
    99ac:	add	r2, pc
    99ae:	ldr	r3, [r2, r3]
    99b0:	ldr	r2, [r3, #0]
    99b2:	ldr	r3, [sp, #4]
    99b4:	eors	r2, r3
    99b6:	beq.n	9a1a <btrfs_find_free_objectid@@Base+0x3c2>
    99b8:	blx	8510 <__stack_chk_fail@plt>
    99bc:	ldrd	r2, r3, [r5, #40]	; 0x28
    99c0:	ldrd	r6, r7, [r0, #40]	; 0x28
    99c4:	cmp	r3, r7
    99c6:	it	eq
    99c8:	cmpeq	r2, r6
    99ca:	bne.n	99d0 <btrfs_find_free_objectid@@Base+0x378>
    99cc:	movs	r0, #1
    99ce:	b.n	99a8 <btrfs_find_free_objectid@@Base+0x350>
    99d0:	mov	r8, sp
    99d2:	mov	r1, r0
    99d4:	mov	r0, r8
    99d6:	movs	r3, #0
    99d8:	str	r3, [sp, #0]
    99da:	bl	993e <btrfs_find_free_objectid@@Base+0x2e6>
    99de:	mov	r0, r8
    99e0:	bl	1353a <rb_first@@Base>
    99e4:	mov	r4, r0
    99e6:	cmp	r0, #0
    99e8:	beq.n	99a6 <btrfs_find_free_objectid@@Base+0x34e>
    99ea:	ldr	r6, [r4, #104]	; 0x68
    99ec:	add.w	sl, r4, #104	; 0x68
    99f0:	cmp	sl, r6
    99f2:	bne.n	99fe <btrfs_find_free_objectid@@Base+0x3a6>
    99f4:	mov	r1, r8
    99f6:	mov	r0, r4
    99f8:	bl	132c4 <rb_erase@@Base>
    99fc:	b.n	99de <btrfs_find_free_objectid@@Base+0x386>
    99fe:	ldr	r1, [r6, #16]
    9a00:	ldrd	r2, r3, [r5, #40]	; 0x28
    9a04:	ldrd	fp, ip, [r1, #40]	; 0x28
    9a08:	cmp	ip, r3
    9a0a:	it	eq
    9a0c:	cmpeq	fp, r2
    9a0e:	beq.n	99cc <btrfs_find_free_objectid@@Base+0x374>
    9a10:	mov	r0, r8
    9a12:	bl	993e <btrfs_find_free_objectid@@Base+0x2e6>
    9a16:	ldr	r6, [r6, #0]
    9a18:	b.n	99f0 <btrfs_find_free_objectid@@Base+0x398>
    9a1a:	add	sp, #8
    9a1c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, sl, fp, pc}
    9a20:	add	r3, pc, #960	; (adr r3, 9de4 <btrfs_find_free_objectid@@Base+0x78c>)
    9a22:	movs	r5, r0
    9a24:	lsls	r0, r4, #8
    9a26:	movs	r0, r0
    9a28:	add	r3, pc, #864	; (adr r3, 9d8c <btrfs_find_free_objectid@@Base+0x734>)
    9a2a:	movs	r5, r0
    9a2c:	ldr	r3, [pc, #28]	; (9a4c <btrfs_find_free_objectid@@Base+0x3f4>)
    9a2e:	movs	r2, #20
    9a30:	push	{r4, lr}
    9a32:	add	r3, pc
    9a34:	mla	r0, r2, r0, r3
    9a38:	ldr	r4, [r0, #16]
    9a3a:	subs	r4, r4, r1
    9a3c:	subs	r4, #1
    9a3e:	bcs.n	9a42 <btrfs_find_free_objectid@@Base+0x3ea>
    9a40:	pop	{r4, pc}
    9a42:	movs	r0, #32
    9a44:	blx	87d4 <putchar@plt+0x4>
    9a48:	b.n	9a3c <btrfs_find_free_objectid@@Base+0x3e4>
    9a4a:	nop
    9a4c:	add	r5, pc, #840	; (adr r5, 9d98 <btrfs_find_free_objectid@@Base+0x740>)
    9a4e:	movs	r5, r0
    9a50:	push	{r4, lr}
    9a52:	mov	r4, r3
    9a54:	bl	2fbf8 <pretty_size_mode@@Base>
    9a58:	ldr	r1, [pc, #16]	; (9a6c <btrfs_find_free_objectid@@Base+0x414>)
    9a5a:	mov	r2, r4
    9a5c:	ldmia.w	sp!, {r4, lr}
    9a60:	add	r1, pc
    9a62:	mov	r3, r0
    9a64:	movs	r0, #1
    9a66:	b.w	8834 <__printf_chk@plt>
    9a6a:	nop
    9a6c:	adds.w	r0, r3, #8519680	; 0x820000
    9a70:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9a74:	mov	r9, r0
    9a76:	ldr	r4, [r0, #0]
    9a78:	mov	r7, r1
    9a7a:	mov	r8, r2
    9a7c:	cbz	r4, 9aa8 <btrfs_find_free_objectid@@Base+0x450>
    9a7e:	ldr	r2, [r4, #16]
    9a80:	ldr	r5, [r4, #8]
    9a82:	add	r5, r2
    9a84:	ldr	r2, [r4, #24]
    9a86:	add	r5, r2
    9a88:	adds	r0, r5, r7
    9a8a:	movs	r1, #1
    9a8c:	adds	r0, #9
    9a8e:	lsls	r0, r0, #3
    9a90:	blx	839c <calloc@plt+0x4>
    9a94:	mov	r6, r0
    9a96:	cbnz	r0, 9aac <btrfs_find_free_objectid@@Base+0x454>
    9a98:	ldr	r0, [pc, #104]	; (9b04 <btrfs_find_free_objectid@@Base+0x4ac>)
    9a9a:	add	r0, pc
    9a9c:	bl	16b70 <__btrfs_error@@Base>
    9aa0:	mvn.w	r0, #11
    9aa4:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9aa8:	mov	r5, r4
    9aaa:	b.n	9a88 <btrfs_find_free_objectid@@Base+0x430>
    9aac:	cbz	r4, 9af4 <btrfs_find_free_objectid@@Base+0x49c>
    9aae:	ldrd	r2, r3, [r4, #8]
    9ab2:	add.w	fp, r4, #72	; 0x48
    9ab6:	mov.w	sl, r8, lsl #3
    9aba:	mov	r1, fp
    9abc:	strd	r2, r3, [r0, #8]
    9ac0:	ldrd	r2, r3, [r4, #16]
    9ac4:	strd	r2, r3, [r0, #16]
    9ac8:	ldrd	r2, r3, [r4, #24]
    9acc:	strd	r2, r3, [r0, #24]
    9ad0:	add.w	r3, r0, #72	; 0x48
    9ad4:	mov	r2, sl
    9ad6:	mov	r0, r3
    9ad8:	blx	8480 <memcpy@plt+0x4>
    9adc:	sub.w	r2, r5, r8
    9ae0:	add.w	r1, fp, sl
    9ae4:	lsls	r2, r2, #3
    9ae6:	mov	r3, r0
    9ae8:	add.w	r0, r8, r7
    9aec:	add.w	r0, r3, r0, lsl #3
    9af0:	blx	8480 <memcpy@plt+0x4>
    9af4:	mov	r0, r4
    9af6:	blx	8434 <free@plt+0x4>
    9afa:	movs	r0, #0
    9afc:	str.w	r6, [r9]
    9b00:	b.n	9aa4 <btrfs_find_free_objectid@@Base+0x44c>
    9b02:	nop
    9b04:			; <UNDEFINED> instruction: 0xf4dd0002
    9b08:	push	{r4, lr}
    9b0a:	sub	sp, #152	; 0x98
    9b0c:	ldr	r4, [pc, #72]	; (9b58 <btrfs_find_free_objectid@@Base+0x500>)
    9b0e:	ldr	r1, [pc, #76]	; (9b5c <btrfs_find_free_objectid@@Base+0x504>)
    9b10:	add	r4, pc
    9b12:	ldr	r1, [r4, r1]
    9b14:	mov	r4, sp
    9b16:	ldr	r1, [r1, #0]
    9b18:	str	r1, [sp, #148]	; 0x94
    9b1a:	mov.w	r1, #0
    9b1e:	strd	r2, r3, [sp, #40]	; 0x28
    9b22:	mov	r3, r0
    9b24:	cbnz	r3, 9b3a <btrfs_find_free_objectid@@Base+0x4e2>
    9b26:	ldr	r1, [pc, #56]	; (9b60 <btrfs_find_free_objectid@@Base+0x508>)
    9b28:	ldr	r2, [pc, #48]	; (9b5c <btrfs_find_free_objectid@@Base+0x504>)
    9b2a:	add	r1, pc
    9b2c:	ldr	r2, [r1, r2]
    9b2e:	ldr	r1, [r2, #0]
    9b30:	ldr	r2, [sp, #148]	; 0x94
    9b32:	eors	r1, r2
    9b34:	beq.n	9b52 <btrfs_find_free_objectid@@Base+0x4fa>
    9b36:	blx	8510 <__stack_chk_fail@plt>
    9b3a:	movs	r2, #0
    9b3c:	mov	r1, r3
    9b3e:	mov	r0, r4
    9b40:	bl	9848 <btrfs_find_free_objectid@@Base+0x1f0>
    9b44:	cmp	r0, #0
    9b46:	bge.n	9b4c <btrfs_find_free_objectid@@Base+0x4f4>
    9b48:	ldr	r3, [r3, #8]
    9b4a:	b.n	9b24 <btrfs_find_free_objectid@@Base+0x4cc>
    9b4c:	beq.n	9b26 <btrfs_find_free_objectid@@Base+0x4ce>
    9b4e:	ldr	r3, [r3, #4]
    9b50:	b.n	9b24 <btrfs_find_free_objectid@@Base+0x4cc>
    9b52:	mov	r0, r3
    9b54:	add	sp, #152	; 0x98
    9b56:	pop	{r4, pc}
    9b58:	add	r2, pc, #464	; (adr r2, 9d2c <btrfs_find_free_objectid@@Base+0x6d4>)
    9b5a:	movs	r5, r0
    9b5c:	lsls	r0, r4, #8
    9b5e:	movs	r0, r0
    9b60:	add	r2, pc, #360	; (adr r2, 9ccc <btrfs_find_free_objectid@@Base+0x674>)
    9b62:	movs	r5, r0
    9b64:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    9b68:	movs	r1, #144	; 0x90
    9b6a:	mov	r8, r0
    9b6c:	movs	r0, #1
    9b6e:	mov	r7, r2
    9b70:	mov	r6, r3
    9b72:	blx	839c <calloc@plt+0x4>
    9b76:	mov	r4, r0
    9b78:	cbnz	r0, 9b8c <btrfs_find_free_objectid@@Base+0x534>
    9b7a:	ldr	r0, [pc, #124]	; (9bf8 <btrfs_find_free_objectid@@Base+0x5a0>)
    9b7c:	mvn.w	r4, #11
    9b80:	add	r0, pc
    9b82:	bl	16b70 <__btrfs_error@@Base>
    9b86:	mov	r0, r4
    9b88:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    9b8c:	add.w	r3, r0, #128	; 0x80
    9b90:	movs	r2, #0
    9b92:	strd	r3, r3, [r0, #128]	; 0x80
    9b96:	add.w	r3, r0, #136	; 0x88
    9b9a:	strd	r3, r3, [r0, #136]	; 0x88
    9b9e:	mov	r3, r8
    9ba0:	strd	r7, r6, [r0, #40]	; 0x28
    9ba4:	ldr	r5, [r3, #0]
    9ba6:	cbnz	r5, 9bba <btrfs_find_free_objectid@@Base+0x562>
    9ba8:	strd	r2, r5, [r4]
    9bac:	mov	r1, r8
    9bae:	str	r5, [r4, #8]
    9bb0:	mov	r0, r4
    9bb2:	str	r4, [r3, #0]
    9bb4:	bl	1321e <rb_insert_color@@Base>
    9bb8:	b.n	9b86 <btrfs_find_free_objectid@@Base+0x52e>
    9bba:	movs	r2, #0
    9bbc:	mov	r1, r5
    9bbe:	mov	r0, r4
    9bc0:	bl	9848 <btrfs_find_free_objectid@@Base+0x1f0>
    9bc4:	cmp	r0, #0
    9bc6:	bge.n	9bd0 <btrfs_find_free_objectid@@Base+0x578>
    9bc8:	add.w	r3, r5, #8
    9bcc:	mov	r2, r5
    9bce:	b.n	9ba4 <btrfs_find_free_objectid@@Base+0x54c>
    9bd0:	beq.n	9bd6 <btrfs_find_free_objectid@@Base+0x57e>
    9bd2:	adds	r3, r5, #4
    9bd4:	b.n	9bcc <btrfs_find_free_objectid@@Base+0x574>
    9bd6:	blx	8784 <__errno_location@plt>
    9bda:	movs	r3, #17
    9bdc:	mov	r2, r7
    9bde:	str	r3, [r0, #0]
    9be0:	mov	r3, r6
    9be2:	ldr	r0, [pc, #24]	; (9bfc <btrfs_find_free_objectid@@Base+0x5a4>)
    9be4:	add	r0, pc
    9be6:	bl	16b70 <__btrfs_error@@Base>
    9bea:	mov	r0, r4
    9bec:	blx	8434 <free@plt+0x4>
    9bf0:	mvn.w	r4, #16
    9bf4:	b.n	9b86 <btrfs_find_free_objectid@@Base+0x52e>
    9bf6:	nop
    9bf8:	and.w	r0, r9, #8519680	; 0x820000
    9bfc:			; <UNDEFINED> instruction: 0xf3be0002
    9c00:	ldr.w	ip, [pc, #104]	; 9c6c <btrfs_find_free_objectid@@Base+0x614>
    9c04:	push	{r4, r5, lr}
    9c06:	add	ip, pc
    9c08:	ldr	r5, [pc, #100]	; (9c70 <btrfs_find_free_objectid@@Base+0x618>)
    9c0a:	sub	sp, #92	; 0x5c
    9c0c:	ldr	r4, [pc, #100]	; (9c74 <btrfs_find_free_objectid@@Base+0x61c>)
    9c0e:	ldr.w	r5, [ip, r5]
    9c12:	add	r4, pc
    9c14:	ldr	r5, [r5, #0]
    9c16:	str	r5, [sp, #84]	; 0x54
    9c18:	mov.w	r5, #0
    9c1c:	cbnz	r3, 9c52 <btrfs_find_free_objectid@@Base+0x5fa>
    9c1e:	ldr	r5, [pc, #88]	; (9c78 <btrfs_find_free_objectid@@Base+0x620>)
    9c20:	ldr	r4, [r4, r5]
    9c22:	strd	r2, r1, [sp]
    9c26:	movs	r1, #1
    9c28:	strd	r0, r3, [sp, #8]
    9c2c:	ldr	r2, [pc, #76]	; (9c7c <btrfs_find_free_objectid@@Base+0x624>)
    9c2e:	ldr	r3, [pc, #80]	; (9c80 <btrfs_find_free_objectid@@Base+0x628>)
    9c30:	ldr	r0, [r4, #0]
    9c32:	add	r4, sp, #20
    9c34:	add	r3, pc
    9c36:	add	r2, pc
    9c38:	blx	8860 <__fprintf_chk@plt+0x4>
    9c3c:	movs	r1, #16
    9c3e:	mov	r0, r4
    9c40:	blx	86c4 <backtrace@plt>
    9c44:	movs	r2, #2
    9c46:	mov	r1, r0
    9c48:	mov	r0, r4
    9c4a:	blx	89c8 <backtrace_symbols_fd@plt>
    9c4e:	blx	8980 <abort@plt>
    9c52:	ldr	r2, [pc, #48]	; (9c84 <btrfs_find_free_objectid@@Base+0x62c>)
    9c54:	ldr	r3, [pc, #24]	; (9c70 <btrfs_find_free_objectid@@Base+0x618>)
    9c56:	add	r2, pc
    9c58:	ldr	r3, [r2, r3]
    9c5a:	ldr	r2, [r3, #0]
    9c5c:	ldr	r3, [sp, #84]	; 0x54
    9c5e:	eors	r2, r3
    9c60:	beq.n	9c66 <btrfs_find_free_objectid@@Base+0x60e>
    9c62:	blx	8510 <__stack_chk_fail@plt>
    9c66:	add	sp, #92	; 0x5c
    9c68:	pop	{r4, r5, pc}
    9c6a:	nop
    9c6c:	add	r1, pc, #504	; (adr r1, 9e68 <btrfs_find_free_objectid@@Base+0x810>)
    9c6e:	movs	r5, r0
    9c70:	lsls	r0, r4, #8
    9c72:	movs	r0, r0
    9c74:	add	r1, pc, #456	; (adr r1, 9e40 <btrfs_find_free_objectid@@Base+0x7e8>)
    9c76:	movs	r5, r0
    9c78:	lsls	r0, r6, #8
    9c7a:	movs	r0, r0
    9c7c:			; <UNDEFINED> instruction: 0xf3990002
    9c80:			; <UNDEFINED> instruction: 0xf3920002
    9c84:	add	r1, pc, #184	; (adr r1, 9d40 <btrfs_find_free_objectid@@Base+0x6e8>)
    9c86:	movs	r5, r0
    9c88:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    9c8c:	mov	r5, r0
    9c8e:	bl	1353a <rb_first@@Base>
    9c92:	ldr	r6, [pc, #112]	; (9d04 <btrfs_find_free_objectid@@Base+0x6ac>)
    9c94:	ldr	r7, [pc, #112]	; (9d08 <btrfs_find_free_objectid@@Base+0x6b0>)
    9c96:	mov	r4, r0
    9c98:	cbnz	r4, 9c9e <btrfs_find_free_objectid@@Base+0x646>
    9c9a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    9c9e:	mov	r1, r5
    9ca0:	mov	r0, r4
    9ca2:	bl	132c4 <rb_erase@@Base>
    9ca6:	add.w	r8, r4, #128	; 0x80
    9caa:	ldr.w	r0, [r4, #128]	; 0x80
    9cae:	cmp	r0, r8
    9cb0:	bne.n	9cce <btrfs_find_free_objectid@@Base+0x676>
    9cb2:	add.w	r8, r4, #136	; 0x88
    9cb6:	ldr.w	r0, [r4, #136]	; 0x88
    9cba:	cmp	r0, r8
    9cbc:	bne.n	9ce4 <btrfs_find_free_objectid@@Base+0x68c>
    9cbe:	mov	r0, r4
    9cc0:	blx	8434 <free@plt+0x4>
    9cc4:	mov	r0, r5
    9cc6:	bl	1353a <rb_first@@Base>
    9cca:	mov	r4, r0
    9ccc:	b.n	9c98 <btrfs_find_free_objectid@@Base+0x640>
    9cce:	ldrd	r2, r3, [r0]
    9cd2:	str	r3, [r2, #4]
    9cd4:	str	r2, [r3, #0]
    9cd6:	ldrd	r2, r3, [r0, #8]
    9cda:	str	r3, [r2, #4]
    9cdc:	str	r2, [r3, #0]
    9cde:	blx	8434 <free@plt+0x4>
    9ce2:	b.n	9caa <btrfs_find_free_objectid@@Base+0x652>
    9ce4:	ldrd	r1, r2, [r0, #-8]
    9ce8:	str	r2, [r1, #4]
    9cea:	str	r1, [r2, #0]
    9cec:	ldrd	r1, r2, [r0]
    9cf0:	strd	r6, r7, [r0, #-8]
    9cf4:	str	r2, [r1, #4]
    9cf6:	str	r1, [r2, #0]
    9cf8:	strd	r6, r7, [r0]
    9cfc:	subs	r0, #8
    9cfe:	blx	8434 <free@plt+0x4>
    9d02:	b.n	9cb6 <btrfs_find_free_objectid@@Base+0x65e>
    9d04:	lsls	r0, r0, #4
    9d06:	movs	r0, r2
    9d08:	lsls	r0, r0, #8
    9d0a:	movs	r0, r4
    9d0c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9d10:	mov	r7, r2
    9d12:	vpush	{d8-d9}
    9d16:	mov	r4, r1
    9d18:	vmov	s16, r0
    9d1c:	ldrd	r2, r3, [r1, #8]
    9d20:	sub	sp, #92	; 0x5c
    9d22:	strd	r2, r3, [sp, #56]	; 0x38
    9d26:	ldrd	r2, r3, [r1, #16]
    9d2a:	strd	r2, r3, [sp, #48]	; 0x30
    9d2e:	ldrd	r2, r3, [r1, #24]
    9d32:	strd	r2, r3, [sp, #64]	; 0x40
    9d36:	ldrd	r2, r3, [r1, #32]
    9d3a:	strd	r2, r3, [sp, #80]	; 0x50
    9d3e:	ldr	r3, [r1, #56]	; 0x38
    9d40:	str	r3, [sp, #76]	; 0x4c
    9d42:	ldr	r3, [r1, #60]	; 0x3c
    9d44:	str	r3, [sp, #72]	; 0x48
    9d46:	movs	r3, #0
    9d48:	str	r3, [r7, #0]
    9d4a:	ldr	r3, [pc, #716]	; (a018 <btrfs_find_free_objectid@@Base+0x9c0>)
    9d4c:	add	r3, pc
    9d4e:	vmov	s19, r3
    9d52:	vmov	r0, s16
    9d56:	mov	r2, r4
    9d58:	ldr	r1, [pc, #696]	; (a014 <btrfs_find_free_objectid@@Base+0x9bc>)
    9d5a:	blx	85bc <ioctl@plt>
    9d5e:	subs.w	fp, r0, #0
    9d62:	bge.n	9d80 <btrfs_find_free_objectid@@Base+0x728>
    9d64:	blx	8784 <__errno_location@plt>
    9d68:	ldr	r0, [r0, #0]
    9d6a:	cmp	r0, #2
    9d6c:	beq.w	a00c <btrfs_find_free_objectid@@Base+0x9b4>
    9d70:	rsb	fp, r0, #0
    9d74:	mov	r0, fp
    9d76:	add	sp, #92	; 0x5c
    9d78:	vpop	{d8-d9}
    9d7c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9d80:	ldr	r3, [r4, #64]	; 0x40
    9d82:	cmp	r3, #0
    9d84:	beq.n	9d74 <btrfs_find_free_objectid@@Base+0x71c>
    9d86:	movs	r3, #0
    9d88:	str	r3, [sp, #16]
    9d8a:	mov	r5, r3
    9d8c:	ldr	r3, [pc, #652]	; (a01c <btrfs_find_free_objectid@@Base+0x9c4>)
    9d8e:	add	r3, pc
    9d90:	vmov	s17, r3
    9d94:	ldr	r3, [pc, #648]	; (a020 <btrfs_find_free_objectid@@Base+0x9c8>)
    9d96:	add	r3, pc
    9d98:	vmov	s18, r3
    9d9c:	ldr	r3, [r4, #64]	; 0x40
    9d9e:	ldr	r2, [sp, #16]
    9da0:	cmp	r2, r3
    9da2:	bcc.n	9dc4 <btrfs_find_free_objectid@@Base+0x76c>
    9da4:	ldrd	r0, r1, [r4, #24]
    9da8:	mov.w	r3, #4096	; 0x1000
    9dac:	str	r3, [r4, #64]	; 0x40
    9dae:	adds	r3, r1, #1
    9db0:	it	eq
    9db2:	cmpeq.w	r0, #4294967295	; 0xffffffff
    9db6:	beq.n	9d74 <btrfs_find_free_objectid@@Base+0x71c>
    9db8:	adds	r2, r0, #1
    9dba:	adc.w	r3, r1, #0
    9dbe:	strd	r2, r3, [r4, #24]
    9dc2:	b.n	9d52 <btrfs_find_free_objectid@@Base+0x6fa>
    9dc4:	add.w	r6, r4, #104	; 0x68
    9dc8:	ldrd	r0, r1, [sp, #56]	; 0x38
    9dcc:	add.w	r8, r6, r5
    9dd0:	adds	r5, #32
    9dd2:	ldr.w	r3, [r8, #8]
    9dd6:	ldr.w	r9, [r8, #16]
    9dda:	ldr.w	sl, [r8, #20]
    9dde:	str	r3, [sp, #8]
    9de0:	ldr.w	r3, [r8, #12]
    9de4:	str	r3, [sp, #12]
    9de6:	ldr.w	r3, [r8, #24]
    9dea:	uxtb	r3, r3
    9dec:	str	r3, [sp, #20]
    9dee:	ldrd	r2, r3, [sp, #8]
    9df2:	cmp	r3, r1
    9df4:	it	eq
    9df6:	cmpeq	r2, r0
    9df8:	bcc.w	9f04 <btrfs_find_free_objectid@@Base+0x8ac>
    9dfc:	ldrd	r2, r3, [sp, #48]	; 0x30
    9e00:	ldrd	r0, r1, [sp, #8]
    9e04:	cmp	r3, r1
    9e06:	it	eq
    9e08:	cmpeq	r2, r0
    9e0a:	bcc.n	9f04 <btrfs_find_free_objectid@@Base+0x8ac>
    9e0c:	ldr	r3, [sp, #20]
    9e0e:	ldr	r2, [sp, #76]	; 0x4c
    9e10:	cmp	r3, r2
    9e12:	bcc.n	9f04 <btrfs_find_free_objectid@@Base+0x8ac>
    9e14:	ldr	r3, [sp, #72]	; 0x48
    9e16:	ldr	r2, [sp, #20]
    9e18:	cmp	r3, r2
    9e1a:	bcc.n	9f04 <btrfs_find_free_objectid@@Base+0x8ac>
    9e1c:	ldrd	r2, r3, [sp, #64]	; 0x40
    9e20:	cmp	sl, r3
    9e22:	it	eq
    9e24:	cmpeq	r9, r2
    9e26:	bcc.n	9f04 <btrfs_find_free_objectid@@Base+0x8ac>
    9e28:	ldrd	r2, r3, [sp, #80]	; 0x50
    9e2c:	cmp	r3, sl
    9e2e:	it	eq
    9e30:	cmpeq	r2, r9
    9e32:	bcc.n	9f04 <btrfs_find_free_objectid@@Base+0x8ac>
    9e34:	ldr	r3, [sp, #20]
    9e36:	subs	r3, #240	; 0xf0
    9e38:	cmp	r3, #6
    9e3a:	bhi.n	9d74 <btrfs_find_free_objectid@@Base+0x71c>
    9e3c:	add	r2, pc, #8	; (adr r2, 9e48 <btrfs_find_free_objectid@@Base+0x7f0>)
    9e3e:	ldr.w	r3, [r2, r3, lsl #2]
    9e42:	add	r2, r3
    9e44:	bx	r2
    9e46:	nop
    9e48:	movs	r5, r3
    9e4a:	movs	r0, r0
    9e4c:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
    9e50:	lsls	r7, r5, #1
    9e52:	movs	r0, r0
    9e54:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
    9e58:	lsls	r3, r3, #3
    9e5a:	movs	r0, r0
    9e5c:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
    9e60:	lsls	r1, r5, #4
    9e62:	movs	r0, r0
    9e64:	add	r6, r5
    9e66:	movs	r3, #0
    9e68:	ldr	r2, [r6, #16]
    9e6a:	and.w	r1, r2, #1
    9e6e:	strd	r1, r3, [sp, #24]
    9e72:	ldrd	r0, r1, [sp, #24]
    9e76:	orrs	r1, r0
    9e78:	bne.n	9e8a <btrfs_find_free_objectid@@Base+0x832>
    9e7a:	vmov	r0, s18
    9e7e:	bl	16af4 <__btrfs_warning@@Base>
    9e82:	cmp.w	fp, #0
    9e86:	beq.n	9f04 <btrfs_find_free_objectid@@Base+0x8ac>
    9e88:	b.n	9d74 <btrfs_find_free_objectid@@Base+0x71c>
    9e8a:	and.w	r1, r2, #2
    9e8e:	strd	r1, r3, [sp, #32]
    9e92:	ldrd	r0, r1, [sp, #32]
    9e96:	orrs	r1, r0
    9e98:	beq.n	9ea0 <btrfs_find_free_objectid@@Base+0x848>
    9e9a:	vmov	r0, s17
    9e9e:	b.n	9e7e <btrfs_find_free_objectid@@Base+0x826>
    9ea0:	and.w	r2, r2, #4
    9ea4:	strd	r2, r3, [sp, #40]	; 0x28
    9ea8:	ldrd	r2, r3, [sp, #40]	; 0x28
    9eac:	orrs	r3, r2
    9eae:	beq.n	9e82 <btrfs_find_free_objectid@@Base+0x82a>
    9eb0:	vmov	r0, s19
    9eb4:	b.n	9e7e <btrfs_find_free_objectid@@Base+0x826>
    9eb6:	ldr	r0, [r7, #0]
    9eb8:	mov	r2, r9
    9eba:	mov	r3, sl
    9ebc:	bl	9b08 <btrfs_find_free_objectid@@Base+0x4b0>
    9ec0:	cbnz	r0, 9ed0 <btrfs_find_free_objectid@@Base+0x878>
    9ec2:	mov	r2, r9
    9ec4:	mov	r3, sl
    9ec6:	mov	r0, r7
    9ec8:	bl	9b64 <btrfs_find_free_objectid@@Base+0x50c>
    9ecc:	cmp	r0, #0
    9ece:	beq.n	9f6c <btrfs_find_free_objectid@@Base+0x914>
    9ed0:	cmn.w	r0, #4096	; 0x1000
    9ed4:	bhi.n	9f6c <btrfs_find_free_objectid@@Base+0x914>
    9ed6:	adds	r3, r6, r5
    9ed8:	ldr	r1, [r6, r5]
    9eda:	ldr	r2, [r3, #4]
    9edc:	strd	r1, r2, [r0, #48]	; 0x30
    9ee0:	ldr	r1, [r3, #8]
    9ee2:	ldr	r2, [r3, #12]
    9ee4:	strd	r1, r2, [r0, #56]	; 0x38
    9ee8:	ldr	r1, [r3, #16]
    9eea:	ldr	r2, [r3, #20]
    9eec:	strd	r1, r2, [r0, #64]	; 0x40
    9ef0:	ldr	r2, [r3, #28]
    9ef2:	ldr	r1, [r3, #24]
    9ef4:	strd	r1, r2, [r0, #72]	; 0x48
    9ef8:	ldr	r2, [r3, #32]
    9efa:	ldr	r3, [r3, #36]	; 0x24
    9efc:	strd	r2, r3, [r0, #80]	; 0x50
    9f00:	mov.w	fp, #0
    9f04:	ldr.w	r3, [r8, #28]
    9f08:	strd	r9, sl, [r4, #24]
    9f0c:	add	r5, r3
    9f0e:	ldr	r3, [sp, #20]
    9f10:	str	r3, [r4, #56]	; 0x38
    9f12:	ldrd	r2, r3, [sp, #8]
    9f16:	strd	r2, r3, [r4, #8]
    9f1a:	ldr	r3, [sp, #16]
    9f1c:	adds	r3, #1
    9f1e:	str	r3, [sp, #16]
    9f20:	b.n	9d9c <btrfs_find_free_objectid@@Base+0x744>
    9f22:	ldr	r0, [r7, #0]
    9f24:	mov	r2, r9
    9f26:	mov	r3, sl
    9f28:	bl	9b08 <btrfs_find_free_objectid@@Base+0x4b0>
    9f2c:	cbnz	r0, 9f3a <btrfs_find_free_objectid@@Base+0x8e2>
    9f2e:	mov	r2, r9
    9f30:	mov	r3, sl
    9f32:	mov	r0, r7
    9f34:	bl	9b64 <btrfs_find_free_objectid@@Base+0x50c>
    9f38:	cbz	r0, 9f6c <btrfs_find_free_objectid@@Base+0x914>
    9f3a:	cmn.w	r0, #4096	; 0x1000
    9f3e:	bhi.n	9f6c <btrfs_find_free_objectid@@Base+0x914>
    9f40:	adds	r3, r6, r5
    9f42:	ldr	r1, [r6, r5]
    9f44:	ldr	r2, [r3, #4]
    9f46:	strd	r1, r2, [r0, #88]	; 0x58
    9f4a:	ldr	r1, [r3, #8]
    9f4c:	ldr	r2, [r3, #12]
    9f4e:	strd	r1, r2, [r0, #96]	; 0x60
    9f52:	ldr	r1, [r3, #16]
    9f54:	ldr	r2, [r3, #20]
    9f56:	strd	r1, r2, [r0, #104]	; 0x68
    9f5a:	ldr	r2, [r3, #28]
    9f5c:	ldr	r1, [r3, #24]
    9f5e:	strd	r1, r2, [r0, #112]	; 0x70
    9f62:	ldr	r2, [r3, #32]
    9f64:	ldr	r3, [r3, #36]	; 0x24
    9f66:	strd	r2, r3, [r0, #120]	; 0x78
    9f6a:	b.n	9f00 <btrfs_find_free_objectid@@Base+0x8a8>
    9f6c:	mov	fp, r0
    9f6e:	b.n	9e82 <btrfs_find_free_objectid@@Base+0x82a>
    9f70:	ldrd	r2, r3, [sp, #8]
    9f74:	cmp	sl, r3
    9f76:	it	eq
    9f78:	cmpeq	r9, r2
    9f7a:	bcs.n	9e82 <btrfs_find_free_objectid@@Base+0x82a>
    9f7c:	ldr.w	fp, [r7]
    9f80:	mov	r2, r9
    9f82:	mov	r3, sl
    9f84:	mov	r0, fp
    9f86:	bl	9b08 <btrfs_find_free_objectid@@Base+0x4b0>
    9f8a:	mov	r6, r0
    9f8c:	cbnz	r0, 9faa <btrfs_find_free_objectid@@Base+0x952>
    9f8e:	uxth.w	r3, sl
    9f92:	strd	r9, r3, [sp]
    9f96:	mov	r3, r0
    9f98:	ldr	r0, [pc, #136]	; (a024 <btrfs_find_free_objectid@@Base+0x9cc>)
    9f9a:	mov.w	r2, sl, lsr #16
    9f9e:	add	r0, pc
    9fa0:	bl	16b70 <__btrfs_error@@Base>
    9fa4:	mvn.w	fp, #1
    9fa8:	b.n	9d74 <btrfs_find_free_objectid@@Base+0x71c>
    9faa:	mov	r0, fp
    9fac:	ldrd	r2, r3, [sp, #8]
    9fb0:	bl	9b08 <btrfs_find_free_objectid@@Base+0x4b0>
    9fb4:	mov	fp, r0
    9fb6:	cbnz	r0, 9fce <btrfs_find_free_objectid@@Base+0x976>
    9fb8:	ldrh.w	r3, [sp, #12]
    9fbc:	ldr	r2, [sp, #8]
    9fbe:	strd	r2, r3, [sp]
    9fc2:	ldr	r3, [sp, #12]
    9fc4:	lsrs	r2, r3, #16
    9fc6:	mov	r3, r0
    9fc8:	ldr	r0, [pc, #92]	; (a028 <btrfs_find_free_objectid@@Base+0x9d0>)
    9fca:	add	r0, pc
    9fcc:	b.n	9fa0 <btrfs_find_free_objectid@@Base+0x948>
    9fce:	movs	r0, #24
    9fd0:	blx	8678 <malloc@plt+0x4>
    9fd4:	cbnz	r0, 9fe4 <btrfs_find_free_objectid@@Base+0x98c>
    9fd6:	ldr	r0, [pc, #84]	; (a02c <btrfs_find_free_objectid@@Base+0x9d4>)
    9fd8:	mvn.w	fp, #11
    9fdc:	add	r0, pc
    9fde:	bl	16b70 <__btrfs_error@@Base>
    9fe2:	b.n	9d74 <btrfs_find_free_objectid@@Base+0x71c>
    9fe4:	strd	fp, r6, [r0, #16]
    9fe8:	adds	r6, #128	; 0x80
    9fea:	ldr	r3, [r6, #4]
    9fec:	add.w	r1, r0, #8
    9ff0:	str	r0, [r6, #4]
    9ff2:	strd	r6, r3, [r0]
    9ff6:	str	r0, [r3, #0]
    9ff8:	add.w	r3, fp, #136	; 0x88
    9ffc:	ldr.w	r2, [fp, #140]	; 0x8c
    a000:	str.w	r1, [fp, #140]	; 0x8c
    a004:	strd	r3, r2, [r0, #8]
    a008:	str	r1, [r2, #0]
    a00a:	b.n	9f00 <btrfs_find_free_objectid@@Base+0x8a8>
    a00c:	mvn.w	fp, #24
    a010:	b.n	9d74 <btrfs_find_free_objectid@@Base+0x71c>
    a012:	nop
    a014:	str	r4, [sp, #68]	; 0x44
    a016:	beq.n	a01a <btrfs_find_free_objectid@@Base+0x9c2>
    a018:	ssat	r0, #3, pc
    a01c:			; <UNDEFINED> instruction: 0xf29d0002
    a020:			; <UNDEFINED> instruction: 0xf2660002
    a024:			; <UNDEFINED> instruction: 0xf0ea0002
    a028:			; <UNDEFINED> instruction: 0xf0be0002
    a02c:	vaddl.s32	q0, d13, d2
    a030:	push	{r4, r5, r6, r7, lr}
    a032:	mov	r5, r1
    a034:	ldr	r1, [pc, #168]	; (a0e0 <btrfs_find_free_objectid@@Base+0xa88>)
    a036:	sub.w	sp, sp, #4096	; 0x1000
    a03a:	ldr	r2, [pc, #168]	; (a0e4 <btrfs_find_free_objectid@@Base+0xa8c>)
    a03c:	sub	sp, #12
    a03e:	add	r1, pc
    a040:	add.w	r3, sp, #4096	; 0x1000
    a044:	adds	r3, #4
    a046:	mov.w	r6, #4096	; 0x1000
    a04a:	ldr	r2, [r1, r2]
    a04c:	mov	r4, r0
    a04e:	movs	r1, #0
    a050:	add	r7, sp, #8
    a052:	ldr	r2, [r2, #0]
    a054:	str	r2, [r3, #0]
    a056:	mov.w	r2, #0
    a05a:	mov	r3, sp
    a05c:	mov	r2, r6
    a05e:	mov	r0, r3
    a060:	blx	87c4 <memset@plt+0x4>
    a064:	movs	r1, #0
    a066:	movs	r2, #246	; 0xf6
    a068:	mov	r3, r0
    a06a:	movs	r0, #8
    a06c:	strd	r0, r1, [r7, #-8]
    a070:	mov.w	r0, #4294967295	; 0xffffffff
    a074:	mov.w	r1, #4294967295	; 0xffffffff
    a078:	strd	r0, r1, [r3, #16]
    a07c:	strd	r0, r1, [r3, #32]
    a080:	strd	r0, r1, [r3, #48]	; 0x30
    a084:	movs	r1, #240	; 0xf0
    a086:	mov	r0, r4
    a088:	strd	r1, r2, [r3, #56]	; 0x38
    a08c:	mov	r2, r5
    a08e:	mov	r1, r3
    a090:	str	r6, [r3, #64]	; 0x40
    a092:	bl	9d0c <btrfs_find_free_objectid@@Base+0x6b4>
    a096:	cmn.w	r0, #25
    a09a:	mov	r4, r0
    a09c:	bne.n	a0c0 <btrfs_find_free_objectid@@Base+0xa68>
    a09e:	ldr	r0, [pc, #72]	; (a0e8 <btrfs_find_free_objectid@@Base+0xa90>)
    a0a0:	add	r0, pc
    a0a2:	bl	16b70 <__btrfs_error@@Base>
    a0a6:	ldr	r1, [pc, #68]	; (a0ec <btrfs_find_free_objectid@@Base+0xa94>)
    a0a8:	add.w	r3, sp, #4096	; 0x1000
    a0ac:	ldr	r2, [pc, #52]	; (a0e4 <btrfs_find_free_objectid@@Base+0xa8c>)
    a0ae:	adds	r3, #4
    a0b0:	add	r1, pc
    a0b2:	ldr	r2, [r1, r2]
    a0b4:	ldr	r1, [r2, #0]
    a0b6:	ldr	r2, [r3, #0]
    a0b8:	eors	r1, r2
    a0ba:	beq.n	a0d6 <btrfs_find_free_objectid@@Base+0xa7e>
    a0bc:	blx	8510 <__stack_chk_fail@plt>
    a0c0:	cmp	r0, #0
    a0c2:	bge.n	a0a6 <btrfs_find_free_objectid@@Base+0xa4e>
    a0c4:	negs	r0, r0
    a0c6:	blx	8690 <strerror@plt>
    a0ca:	mov	r1, r0
    a0cc:	ldr	r0, [pc, #32]	; (a0f0 <btrfs_find_free_objectid@@Base+0xa98>)
    a0ce:	add	r0, pc
    a0d0:	bl	16b70 <__btrfs_error@@Base>
    a0d4:	b.n	a0a6 <btrfs_find_free_objectid@@Base+0xa4e>
    a0d6:	mov	r0, r4
    a0d8:	add.w	sp, sp, #4096	; 0x1000
    a0dc:	add	sp, #12
    a0de:	pop	{r4, r5, r6, r7, pc}
    a0e0:	ldr	r5, [sp, #280]	; 0x118
    a0e2:	movs	r5, r0
    a0e4:	lsls	r0, r4, #8
    a0e6:	movs	r0, r0
    a0e8:	and.w	r0, r9, #2
    a0ec:	ldr	r4, [sp, #848]	; 0x350
    a0ee:	movs	r5, r0
    a0f0:	and.w	r0, r2, #2

0000a0f4 <btrfs_qgroup_setup_print_column@@Base>:
    a0f4:	cmp	r0, #7
    a0f6:	ldr	r1, [pc, #68]	; (a13c <btrfs_qgroup_setup_print_column@@Base+0x48>)
    a0f8:	push	{r4, lr}
    a0fa:	mov	r4, r0
    a0fc:	ldr	r0, [pc, #64]	; (a140 <btrfs_qgroup_setup_print_column@@Base+0x4c>)
    a0fe:	ite	hi
    a100:	movhi	r3, #0
    a102:	movls	r3, #1
    a104:	add	r1, pc
    a106:	add	r0, pc
    a108:	movs	r2, #143	; 0x8f
    a10a:	bl	9c00 <btrfs_find_free_objectid@@Base+0x5a8>
    a10e:	cmp	r4, #6
    a110:	bls.n	a12a <btrfs_qgroup_setup_print_column@@Base+0x36>
    a112:	ldr	r3, [pc, #48]	; (a144 <btrfs_qgroup_setup_print_column@@Base+0x50>)
    a114:	movs	r2, #1
    a116:	add	r3, pc
    a118:	str	r2, [r3, #8]
    a11a:	str	r2, [r3, #28]
    a11c:	str	r2, [r3, #48]	; 0x30
    a11e:	str	r2, [r3, #68]	; 0x44
    a120:	str	r2, [r3, #88]	; 0x58
    a122:	str	r2, [r3, #108]	; 0x6c
    a124:	str.w	r2, [r3, #128]	; 0x80
    a128:	pop	{r4, pc}
    a12a:	ldr	r0, [pc, #28]	; (a148 <btrfs_qgroup_setup_print_column@@Base+0x54>)
    a12c:	movs	r3, #20
    a12e:	add	r0, pc
    a130:	mla	r4, r3, r4, r0
    a134:	movs	r3, #1
    a136:	str	r3, [r4, #8]
    a138:	b.n	a128 <btrfs_qgroup_setup_print_column@@Base+0x34>
    a13a:	nop
    a13c:	rsbs	r0, r4, #2
    a140:	vaddl.s32	q8, d1, d2
    a144:	ldr	r6, [sp, #952]	; 0x3b8
    a146:	movs	r5, r0
    a148:	ldr	r6, [sp, #856]	; 0x358
    a14a:	movs	r5, r0

0000a14c <btrfs_qgroup_setup_units@@Base>:
    a14c:	ldr	r3, [pc, #12]	; (a15c <btrfs_qgroup_setup_units@@Base+0x10>)
    a14e:	add	r3, pc
    a150:	str	r0, [r3, #32]
    a152:	str	r0, [r3, #52]	; 0x34
    a154:	str	r0, [r3, #72]	; 0x48
    a156:	str	r0, [r3, #92]	; 0x5c
    a158:	bx	lr
    a15a:	nop
    a15c:	ldr	r6, [sp, #728]	; 0x2d8
    a15e:	movs	r5, r0

0000a160 <btrfs_qgroup_alloc_comparer_set@@Base>:
    a160:	push	{r3, lr}
    a162:	movs	r1, #88	; 0x58
    a164:	movs	r0, #1
    a166:	blx	839c <calloc@plt+0x4>
    a16a:	cbnz	r0, a17a <btrfs_qgroup_alloc_comparer_set@@Base+0x1a>
    a16c:	ldr	r0, [pc, #16]	; (a180 <btrfs_qgroup_alloc_comparer_set@@Base+0x20>)
    a16e:	add	r0, pc
    a170:	bl	16b70 <__btrfs_error@@Base>
    a174:	movs	r0, #1
    a176:	blx	873c <exit@plt>
    a17a:	movs	r2, #10
    a17c:	str	r2, [r0, #0]
    a17e:	pop	{r3, pc}
    a180:	cdp	0, 1, cr0, cr11, cr2, {0}

0000a184 <btrfs_qgroup_setup_comparer@@Base>:
    a184:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    a188:	mov	r6, r1
    a18a:	ldr	r4, [r0, #0]
    a18c:	mov	r7, r0
    a18e:	ldr	r1, [pc, #188]	; (a24c <btrfs_qgroup_setup_comparer@@Base+0xc8>)
    a190:	mov	r8, r2
    a192:	subs	r3, r4, #0
    a194:	ldr	r0, [pc, #184]	; (a250 <btrfs_qgroup_setup_comparer@@Base+0xcc>)
    a196:	add	r1, pc
    a198:	movw	r2, #457	; 0x1c9
    a19c:	it	ne
    a19e:	movne	r3, #1
    a1a0:	adds	r1, #32
    a1a2:	add	r0, pc
    a1a4:	str	r1, [sp, #4]
    a1a6:	bl	9c00 <btrfs_find_free_objectid@@Base+0x5a8>
    a1aa:	cmp	r6, #4
    a1ac:	ldr	r0, [pc, #164]	; (a254 <btrfs_qgroup_setup_comparer@@Base+0xd0>)
    a1ae:	mov.w	r2, #458	; 0x1ca
    a1b2:	ite	hi
    a1b4:	movhi	r3, #0
    a1b6:	movls	r3, #1
    a1b8:	ldr	r1, [sp, #4]
    a1ba:	add	r0, pc
    a1bc:	bl	9c00 <btrfs_find_free_objectid@@Base+0x5a8>
    a1c0:	ldrd	r9, r5, [r4]
    a1c4:	ldr	r0, [pc, #144]	; (a258 <btrfs_qgroup_setup_comparer@@Base+0xd4>)
    a1c6:	movw	r2, #459	; 0x1cb
    a1ca:	cmp	r5, r9
    a1cc:	ldr	r1, [sp, #4]
    a1ce:	add	r0, pc
    a1d0:	ite	gt
    a1d2:	movgt	r3, #0
    a1d4:	movle	r3, #1
    a1d6:	bl	9c00 <btrfs_find_free_objectid@@Base+0x5a8>
    a1da:	cmp	r5, r9
    a1dc:	bne.n	a216 <btrfs_qgroup_setup_comparer@@Base+0x92>
    a1de:	adds	r5, #11
    a1e0:	mov	r0, r4
    a1e2:	lsls	r1, r5, #3
    a1e4:	blx	852c <realloc@plt+0x4>
    a1e8:	mov	r5, r0
    a1ea:	cbnz	r0, a1fc <btrfs_qgroup_setup_comparer@@Base+0x78>
    a1ec:	mov	r0, r4
    a1ee:	blx	8434 <free@plt+0x4>
    a1f2:	mvn.w	r0, #11
    a1f6:	add	sp, #12
    a1f8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    a1fc:	ldr	r0, [r0, #0]
    a1fe:	movs	r2, #80	; 0x50
    a200:	movs	r1, #0
    a202:	mov	r4, r5
    a204:	adds	r0, #1
    a206:	add.w	r0, r5, r0, lsl #3
    a20a:	blx	87c4 <memset@plt+0x4>
    a20e:	ldr	r3, [r5, #0]
    a210:	adds	r3, #10
    a212:	str	r3, [r5, #0]
    a214:	str	r5, [r7, #0]
    a216:	ldr	r5, [r4, #4]
    a218:	movw	r2, #481	; 0x1e1
    a21c:	ldr	r1, [pc, #60]	; (a25c <btrfs_qgroup_setup_comparer@@Base+0xd8>)
    a21e:	ldr	r0, [pc, #64]	; (a260 <btrfs_qgroup_setup_comparer@@Base+0xdc>)
    a220:	add.w	r7, r4, r5, lsl #3
    a224:	add	r1, pc
    a226:	add	r0, pc
    a228:	adds	r1, #32
    a22a:	ldr	r3, [r7, #8]
    a22c:	adds	r5, #1
    a22e:	clz	r3, r3
    a232:	lsrs	r3, r3, #5
    a234:	bl	9c00 <btrfs_find_free_objectid@@Base+0x5a8>
    a238:	ldr	r3, [pc, #40]	; (a264 <btrfs_qgroup_setup_comparer@@Base+0xe0>)
    a23a:	movs	r0, #0
    a23c:	add	r3, pc
    a23e:	ldr.w	r3, [r3, r6, lsl #2]
    a242:	strd	r3, r8, [r7, #8]
    a246:	str	r5, [r4, #4]
    a248:	b.n	a1f6 <btrfs_qgroup_setup_comparer@@Base+0x72>
    a24a:	nop
    a24c:	adc.w	r0, r2, #2
    a250:	vhadd.s32	d16, d15, d2
    a254:	vhadd.s32	d16, d3, d2
    a258:	vhadd.s<illegal width 64>	d16, d0, d2
    a25c:			; <UNDEFINED> instruction: 0xf0b40002
    a260:	vhadd.s<illegal width 64>	d0, d2, d2
    a264:	str	r3, [sp, #416]	; 0x1a0
    a266:	movs	r5, r0

0000a268 <btrfs_qgroup_alloc_filter_set@@Base>:
    a268:	push	{r3, lr}
    a26a:	movs	r1, #72	; 0x48
    a26c:	movs	r0, #1
    a26e:	blx	839c <calloc@plt+0x4>
    a272:	cbnz	r0, a282 <btrfs_qgroup_alloc_filter_set@@Base+0x1a>
    a274:	ldr	r0, [pc, #16]	; (a288 <btrfs_qgroup_alloc_filter_set@@Base+0x20>)
    a276:	add	r0, pc
    a278:	bl	16b70 <__btrfs_error@@Base>
    a27c:	movs	r0, #1
    a27e:	blx	873c <exit@plt>
    a282:	movs	r2, #4
    a284:	str	r2, [r0, #0]
    a286:	pop	{r3, pc}
    a288:	ldc	0, cr0, [r3, #-8]

0000a28c <btrfs_qgroup_setup_filter@@Base>:
    a28c:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
    a290:	mov	r8, r1
    a292:	ldr	r4, [r0, #0]
    a294:	mov	r9, r0
    a296:	ldr	r1, [pc, #216]	; (a370 <btrfs_qgroup_setup_filter@@Base+0xe4>)
    a298:	mov	r6, r3
    a29a:	ldr	r0, [pc, #216]	; (a374 <btrfs_qgroup_setup_filter@@Base+0xe8>)
    a29c:	subs	r3, r4, #0
    a29e:	add	r1, pc
    a2a0:	mov	r7, r2
    a2a2:	it	ne
    a2a4:	movne	r3, #1
    a2a6:	adds	r1, #60	; 0x3c
    a2a8:	add	r0, pc
    a2aa:	mov.w	r2, #836	; 0x344
    a2ae:	str	r1, [sp, #4]
    a2b0:	bl	9c00 <btrfs_find_free_objectid@@Base+0x5a8>
    a2b4:	cmp.w	r8, #1
    a2b8:	ldr	r0, [pc, #188]	; (a378 <btrfs_qgroup_setup_filter@@Base+0xec>)
    a2ba:	ldr	r1, [sp, #4]
    a2bc:	movw	r2, #837	; 0x345
    a2c0:	ite	hi
    a2c2:	movhi	r3, #0
    a2c4:	movls	r3, #1
    a2c6:	add	r0, pc
    a2c8:	bl	9c00 <btrfs_find_free_objectid@@Base+0x5a8>
    a2cc:	ldrd	sl, r5, [r4]
    a2d0:	ldr	r0, [pc, #168]	; (a37c <btrfs_qgroup_setup_filter@@Base+0xf0>)
    a2d2:	movw	r2, #838	; 0x346
    a2d6:	cmp	r5, sl
    a2d8:	ldr	r1, [sp, #4]
    a2da:	add	r0, pc
    a2dc:	ite	gt
    a2de:	movgt	r3, #0
    a2e0:	movle	r3, #1
    a2e2:	bl	9c00 <btrfs_find_free_objectid@@Base+0x5a8>
    a2e6:	cmp	r5, sl
    a2e8:	bne.n	a32a <btrfs_qgroup_setup_filter@@Base+0x9e>
    a2ea:	lsls	r5, r5, #4
    a2ec:	mov	r0, r4
    a2ee:	add.w	r1, r5, #72	; 0x48
    a2f2:	blx	852c <realloc@plt+0x4>
    a2f6:	mov	r5, r0
    a2f8:	cbnz	r0, a30e <btrfs_qgroup_setup_filter@@Base+0x82>
    a2fa:	ldr	r0, [pc, #132]	; (a380 <btrfs_qgroup_setup_filter@@Base+0xf4>)
    a2fc:	add	r0, pc
    a2fe:	bl	16b70 <__btrfs_error@@Base>
    a302:	mov	r0, r4
    a304:	blx	8434 <free@plt+0x4>
    a308:	movs	r0, #1
    a30a:	blx	873c <exit@plt>
    a30e:	ldr	r0, [r0, #0]
    a310:	movs	r2, #64	; 0x40
    a312:	movs	r1, #0
    a314:	mov	r4, r5
    a316:	add.w	r0, r5, r0, lsl #4
    a31a:	adds	r0, #8
    a31c:	blx	87c4 <memset@plt+0x4>
    a320:	ldr	r3, [r5, #0]
    a322:	adds	r3, #4
    a324:	str	r3, [r5, #0]
    a326:	str.w	r5, [r9]
    a32a:	ldr	r5, [r4, #4]
    a32c:	mov.w	r2, #860	; 0x35c
    a330:	ldr	r1, [pc, #80]	; (a384 <btrfs_qgroup_setup_filter@@Base+0xf8>)
    a332:	ldr	r0, [pc, #84]	; (a388 <btrfs_qgroup_setup_filter@@Base+0xfc>)
    a334:	add.w	r9, r4, r5, lsl #4
    a338:	add	r1, pc
    a33a:	adds	r1, #60	; 0x3c
    a33c:	add	r0, pc
    a33e:	ldr.w	r3, [r9, #8]
    a342:	adds	r5, #1
    a344:	clz	r3, r3
    a348:	lsrs	r3, r3, #5
    a34a:	bl	9c00 <btrfs_find_free_objectid@@Base+0x5a8>
    a34e:	ldr	r1, [pc, #60]	; (a38c <btrfs_qgroup_setup_filter@@Base+0x100>)
    a350:	movs	r0, #0
    a352:	add	r1, pc
    a354:	add.w	r8, r1, r8, lsl #2
    a358:	ldr.w	r3, [r8, #20]
    a35c:	str.w	r3, [r9, #8]
    a360:	add.w	r3, r4, r5, lsl #4
    a364:	strd	r7, r6, [r3]
    a368:	str	r5, [r4, #4]
    a36a:	add	sp, #8
    a36c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    a370:	bics.w	r0, sl, #2
    a374:	cdp	0, 6, cr0, cr9, cr2, {0}
    a378:	cdp	0, 11, cr0, cr12, cr2, {0}
    a37c:	cdp	0, 12, cr0, cr9, cr2, {0}
    a380:	stc	0, cr0, [sp], {2}
    a384:	vaddl.s32	q0, d0, d2
    a388:	cdp	0, 8, cr0, cr3, cr2, {0}
    a38c:	str	r2, [sp, #328]	; 0x148
    a38e:	movs	r5, r0

0000a390 <btrfs_qgroup_query@@Base>:
    a390:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    a394:	sub.w	sp, sp, #4096	; 0x1000
    a398:	sub	sp, #16
    a39a:	ldr	r1, [pc, #224]	; (a47c <btrfs_qgroup_query@@Base+0xec>)
    a39c:	mov	r7, r2
    a39e:	mov	r6, r3
    a3a0:	ldr	r2, [pc, #220]	; (a480 <btrfs_qgroup_query@@Base+0xf0>)
    a3a2:	add.w	r3, sp, #4128	; 0x1020
    a3a6:	add	r1, pc
    a3a8:	add	r4, sp, #8
    a3aa:	ldr	r5, [r3, #16]
    a3ac:	adds	r3, #16
    a3ae:	ldr	r2, [r1, r2]
    a3b0:	add.w	r3, sp, #4096	; 0x1000
    a3b4:	add.w	r8, sp, #16
    a3b8:	mov.w	sl, #4096	; 0x1000
    a3bc:	ldr	r2, [r2, #0]
    a3be:	str	r2, [r3, #12]
    a3c0:	mov.w	r2, #0
    a3c4:	mov	r9, r0
    a3c6:	mov	r2, sl
    a3c8:	mov	r0, r4
    a3ca:	movs	r1, #0
    a3cc:	adds	r3, #12
    a3ce:	blx	87c4 <memset@plt+0x4>
    a3d2:	movs	r0, #8
    a3d4:	movs	r1, #0
    a3d6:	mov.w	r2, #4294967295	; 0xffffffff
    a3da:	strd	r0, r1, [r8, #-8]
    a3de:	mov.w	r3, #4294967295	; 0xffffffff
    a3e2:	strd	r7, r6, [r8, #16]
    a3e6:	mov	r1, r4
    a3e8:	strd	r2, r3, [r8, #40]	; 0x28
    a3ec:	movs	r2, #242	; 0xf2
    a3ee:	movs	r3, #244	; 0xf4
    a3f0:	strd	r7, r6, [r8, #24]
    a3f4:	strd	r2, r3, [r8, #48]	; 0x30
    a3f8:	mov	r0, r9
    a3fa:	str.w	sl, [r8, #56]	; 0x38
    a3fe:	sub.w	r8, r8, #12
    a402:	mov	r2, r8
    a404:	bl	9d0c <btrfs_find_free_objectid@@Base+0x6b4>
    a408:	subs	r4, r0, #0
    a40a:	blt.n	a450 <btrfs_qgroup_query@@Base+0xc0>
    a40c:	mov	r0, r8
    a40e:	bl	1353a <rb_first@@Base>
    a412:	mov	r4, r0
    a414:	cbz	r0, a46a <btrfs_qgroup_query@@Base+0xda>
    a416:	ldrd	r2, r3, [r0, #40]	; 0x28
    a41a:	add.w	r7, r0, #48	; 0x30
    a41e:	mov	r6, r5
    a420:	adds	r4, #88	; 0x58
    a422:	adds	r5, #48	; 0x30
    a424:	strd	r2, r3, [r6], #8
    a428:	ldmia	r7!, {r0, r1, r2, r3}
    a42a:	stmia	r6!, {r0, r1, r2, r3}
    a42c:	ldmia	r7!, {r0, r1, r2, r3}
    a42e:	stmia	r6!, {r0, r1, r2, r3}
    a430:	ldmia.w	r7, {r0, r1}
    a434:	stmia.w	r6, {r0, r1}
    a438:	ldmia	r4!, {r0, r1, r2, r3}
    a43a:	stmia	r5!, {r0, r1, r2, r3}
    a43c:	ldmia	r4!, {r0, r1, r2, r3}
    a43e:	stmia	r5!, {r0, r1, r2, r3}
    a440:	ldmia.w	r4, {r0, r1}
    a444:	movs	r4, #0
    a446:	stmia.w	r5, {r0, r1}
    a44a:	mov	r0, r8
    a44c:	bl	9c88 <btrfs_find_free_objectid@@Base+0x630>
    a450:	ldr	r1, [pc, #48]	; (a484 <btrfs_qgroup_query@@Base+0xf4>)
    a452:	add.w	r3, sp, #4096	; 0x1000
    a456:	ldr	r2, [pc, #40]	; (a480 <btrfs_qgroup_query@@Base+0xf0>)
    a458:	adds	r3, #12
    a45a:	add	r1, pc
    a45c:	ldr	r2, [r1, r2]
    a45e:	ldr	r1, [r2, #0]
    a460:	ldr	r2, [r3, #0]
    a462:	eors	r1, r2
    a464:	beq.n	a470 <btrfs_qgroup_query@@Base+0xe0>
    a466:	blx	8510 <__stack_chk_fail@plt>
    a46a:	mvn.w	r4, #60	; 0x3c
    a46e:	b.n	a44a <btrfs_qgroup_query@@Base+0xba>
    a470:	mov	r0, r4
    a472:	add.w	sp, sp, #4096	; 0x1000
    a476:	add	sp, #16
    a478:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    a47c:	ldr	r1, [sp, #888]	; 0x378
    a47e:	movs	r5, r0
    a480:	lsls	r0, r4, #8
    a482:	movs	r0, r0
    a484:	ldr	r1, [sp, #168]	; 0xa8
    a486:	movs	r5, r0

0000a488 <btrfs_show_qgroups@@Base>:
    a488:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a48c:	mov	fp, r1
    a48e:	vpush	{d8}
    a492:	ldr.w	r3, [pc, #1460]	; aa48 <btrfs_show_qgroups@@Base+0x5c0>
    a496:	sub	sp, #164	; 0xa4
    a498:	add	r6, sp, #48	; 0x30
    a49a:	str	r2, [sp, #20]
    a49c:	ldr.w	r2, [pc, #1452]	; aa4c <btrfs_show_qgroups@@Base+0x5c4>
    a4a0:	mov	r1, r6
    a4a2:	add	r2, pc
    a4a4:	ldr	r3, [r2, r3]
    a4a6:	ldr	r3, [r3, #0]
    a4a8:	str	r3, [sp, #156]	; 0x9c
    a4aa:	mov.w	r3, #0
    a4ae:	bl	a030 <btrfs_find_free_objectid@@Base+0x9d8>
    a4b2:	str	r0, [sp, #16]
    a4b4:	cmp	r0, #0
    a4b6:	bne.n	a59a <btrfs_show_qgroups@@Base+0x112>
    a4b8:	ldr.w	r9, [pc, #1428]	; aa50 <btrfs_show_qgroups@@Base+0x5c8>
    a4bc:	mov	r4, fp
    a4be:	ldr.w	sl, [pc, #1428]	; aa54 <btrfs_show_qgroups@@Base+0x5cc>
    a4c2:	mov	r5, r0
    a4c4:	ldr.w	r7, [fp, #4]
    a4c8:	add	r9, pc
    a4ca:	ldr.w	r8, [sp, #48]	; 0x30
    a4ce:	add	sl, pc
    a4d0:	str	r0, [sp, #52]	; 0x34
    a4d2:	cmp	r5, r7
    a4d4:	blt.n	a5b4 <btrfs_show_qgroups@@Base+0x12c>
    a4d6:	mov	r0, r6
    a4d8:	bl	1354a <rb_last@@Base>
    a4dc:	ldr.w	r3, [pc, #1400]	; aa58 <btrfs_show_qgroups@@Base+0x5d0>
    a4e0:	add	r3, pc
    a4e2:	adds	r3, #86	; 0x56
    a4e4:	vmov	s17, r3
    a4e8:	mov	r4, r0
    a4ea:	cmp	r4, #0
    a4ec:	bne.n	a5d4 <btrfs_show_qgroups@@Base+0x14c>
    a4ee:	ldr.w	r3, [pc, #1388]	; aa5c <btrfs_show_qgroups@@Base+0x5d4>
    a4f2:	ldr.w	r6, [pc, #1388]	; aa60 <btrfs_show_qgroups@@Base+0x5d8>
    a4f6:	ldr.w	r7, [pc, #1388]	; aa64 <btrfs_show_qgroups@@Base+0x5dc>
    a4fa:	add	r3, pc
    a4fc:	add	r6, pc
    a4fe:	str	r3, [sp, #20]
    a500:	add	r7, pc
    a502:	mov	r5, r3
    a504:	ldr	r3, [r5, #8]
    a506:	cbz	r3, a526 <btrfs_show_qgroups@@Base+0x9e>
    a508:	subs	r3, r4, #5
    a50a:	ldr	r2, [r5, #16]
    a50c:	cmp	r3, #1
    a50e:	ldr	r3, [r5, #0]
    a510:	bls.n	a518 <btrfs_show_qgroups@@Base+0x90>
    a512:	cmp	r4, #0
    a514:	bne.w	a834 <btrfs_show_qgroups@@Base+0x3ac>
    a518:	mov	r1, r6
    a51a:	movs	r0, #1
    a51c:	blx	8838 <__printf_chk@plt+0x4>
    a520:	movs	r0, #32
    a522:	blx	87d4 <putchar@plt+0x4>
    a526:	adds	r4, #1
    a528:	adds	r5, #20
    a52a:	cmp	r4, #7
    a52c:	bne.n	a504 <btrfs_show_qgroups@@Base+0x7c>
    a52e:	movs	r0, #10
    a530:	movs	r6, #0
    a532:	blx	87d4 <putchar@plt+0x4>
    a536:	ldr	r4, [sp, #20]
    a538:	ldr	r3, [r4, #8]
    a53a:	cbz	r3, a56c <btrfs_show_qgroups@@Base+0xe4>
    a53c:	subs	r3, r6, #5
    a53e:	ldr	r5, [r4, #16]
    a540:	cmp	r3, #1
    a542:	ldr	r0, [r4, #0]
    a544:	bls.n	a54c <btrfs_show_qgroups@@Base+0xc4>
    a546:	cmp	r6, #0
    a548:	bne.w	a848 <btrfs_show_qgroups@@Base+0x3c0>
    a54c:	blx	8748 <strlen@plt>
    a550:	mov	r7, r0
    a552:	subs	r7, #1
    a554:	bcs.w	a838 <btrfs_show_qgroups@@Base+0x3b0>
    a558:	ldr	r0, [r4, #0]
    a55a:	blx	8748 <strlen@plt>
    a55e:	subs	r5, r5, r0
    a560:	subs	r5, #1
    a562:	bcs.w	a840 <btrfs_show_qgroups@@Base+0x3b8>
    a566:	movs	r0, #32
    a568:	blx	87d4 <putchar@plt+0x4>
    a56c:	adds	r6, #1
    a56e:	adds	r4, #20
    a570:	cmp	r6, #7
    a572:	bne.n	a538 <btrfs_show_qgroups@@Base+0xb0>
    a574:	movs	r0, #10
    a576:	blx	87d4 <putchar@plt+0x4>
    a57a:	add	r0, sp, #52	; 0x34
    a57c:	bl	1353a <rb_first@@Base>
    a580:	ldr.w	r3, [pc, #1252]	; aa68 <btrfs_show_qgroups@@Base+0x5e0>
    a584:	add	r3, pc
    a586:	adds	r3, #111	; 0x6f
    a588:	vmov	s17, r3
    a58c:	mov	r4, r0
    a58e:	cmp	r4, #0
    a590:	bne.w	a870 <btrfs_show_qgroups@@Base+0x3e8>
    a594:	add	r0, sp, #48	; 0x30
    a596:	bl	9c88 <btrfs_find_free_objectid@@Base+0x630>
    a59a:	ldr.w	r2, [pc, #1232]	; aa6c <btrfs_show_qgroups@@Base+0x5e4>
    a59e:	ldr.w	r3, [pc, #1192]	; aa48 <btrfs_show_qgroups@@Base+0x5c0>
    a5a2:	add	r2, pc
    a5a4:	ldr	r3, [r2, r3]
    a5a6:	ldr	r2, [r3, #0]
    a5a8:	ldr	r3, [sp, #156]	; 0x9c
    a5aa:	eors	r2, r3
    a5ac:	beq.w	aa3c <btrfs_show_qgroups@@Base+0x5b4>
    a5b0:	blx	8510 <__stack_chk_fail@plt>
    a5b4:	ldr	r3, [r4, #8]
    a5b6:	cmp	r3, r9
    a5b8:	beq.n	a5be <btrfs_show_qgroups@@Base+0x136>
    a5ba:	cmp	r3, sl
    a5bc:	bne.n	a5ce <btrfs_show_qgroups@@Base+0x146>
    a5be:	ldrd	r2, r3, [r4, #16]
    a5c2:	mov	r0, r8
    a5c4:	bl	9b08 <btrfs_find_free_objectid@@Base+0x4b0>
    a5c8:	movs	r1, #0
    a5ca:	str	r1, [r4, #20]
    a5cc:	str	r0, [r4, #16]
    a5ce:	adds	r5, #1
    a5d0:	adds	r4, #16
    a5d2:	b.n	a4d2 <btrfs_show_qgroups@@Base+0x4a>
    a5d4:	ldr.w	r3, [fp, #4]
    a5d8:	cbnz	r3, a626 <btrfs_show_qgroups@@Base+0x19e>
    a5da:	add	r5, sp, #52	; 0x34
    a5dc:	ldr.w	r2, [pc, #1168]	; aa70 <btrfs_show_qgroups@@Base+0x5e8>
    a5e0:	movs	r3, #0
    a5e2:	mov	sl, r5
    a5e4:	add	r2, pc
    a5e6:	str	r2, [sp, #40]	; 0x28
    a5e8:	ldr	r6, [r5, #0]
    a5ea:	cbnz	r6, a62c <btrfs_show_qgroups@@Base+0x1a4>
    a5ec:	add.w	r0, r4, #12
    a5f0:	strd	r3, r6, [r4, #12]
    a5f4:	str	r6, [r4, #20]
    a5f6:	mov	r1, sl
    a5f8:	str	r0, [r5, #0]
    a5fa:	bl	1321e <rb_insert_color@@Base>
    a5fe:	b.n	a668 <btrfs_show_qgroups@@Base+0x1e0>
    a600:	adds	r5, #1
    a602:	ldr.w	r3, [fp, #4]
    a606:	cmp	r5, r3
    a608:	bge.n	a5da <btrfs_show_qgroups@@Base+0x152>
    a60a:	ldr	r1, [r6, #8]
    a60c:	cmp	r1, #0
    a60e:	beq.n	a5da <btrfs_show_qgroups@@Base+0x152>
    a610:	ldrd	r2, r3, [r6, #16]!
    a614:	mov	r0, r4
    a616:	blx	r1
    a618:	cmp	r0, #0
    a61a:	bne.n	a600 <btrfs_show_qgroups@@Base+0x178>
    a61c:	mov	r0, r4
    a61e:	bl	13586 <rb_prev@@Base>
    a622:	mov	r4, r0
    a624:	b.n	a4ea <btrfs_show_qgroups@@Base+0x62>
    a626:	mov	r6, fp
    a628:	movs	r5, #0
    a62a:	b.n	a602 <btrfs_show_qgroups@@Base+0x17a>
    a62c:	ldr	r3, [sp, #20]
    a62e:	sub.w	r1, r6, #12
    a632:	cbnz	r3, a64a <btrfs_show_qgroups@@Base+0x1c2>
    a634:	movs	r2, #0
    a636:	mov	r0, r4
    a638:	bl	9848 <btrfs_find_free_objectid@@Base+0x1f0>
    a63c:	cmp	r0, #0
    a63e:	blt.w	aa34 <btrfs_show_qgroups@@Base+0x5ac>
    a642:	beq.n	a668 <btrfs_show_qgroups@@Base+0x1e0>
    a644:	ldr	r5, [r5, #0]
    a646:	adds	r5, #4
    a648:	b.n	aa38 <btrfs_show_qgroups@@Base+0x5b0>
    a64a:	ldr	r3, [sp, #20]
    a64c:	ldr	r3, [r3, #4]
    a64e:	cmp	r3, #0
    a650:	beq.n	a634 <btrfs_show_qgroups@@Base+0x1ac>
    a652:	ldr.w	r8, [sp, #20]
    a656:	movs	r7, #0
    a658:	mov	r9, r7
    a65a:	ldr	r3, [sp, #20]
    a65c:	ldr	r3, [r3, #4]
    a65e:	cmp	r7, r3
    a660:	blt.n	a6a8 <btrfs_show_qgroups@@Base+0x220>
    a662:	cmp.w	r9, #0
    a666:	beq.n	a634 <btrfs_show_qgroups@@Base+0x1ac>
    a668:	ldr.w	r3, [pc, #1032]	; aa74 <btrfs_show_qgroups@@Base+0x5ec>
    a66c:	movs	r7, #0
    a66e:	ldr.w	r8, [pc, #1032]	; aa78 <btrfs_show_qgroups@@Base+0x5f0>
    a672:	add	r3, pc
    a674:	add	r8, pc
    a676:	vmov	s16, r3
    a67a:	ldr.w	r3, [r8, #8]
    a67e:	cmp	r3, #0
    a680:	beq.n	a708 <btrfs_show_qgroups@@Base+0x280>
    a682:	movs	r3, #1
    a684:	vmov	r1, s17
    a688:	vmov	r0, s16
    a68c:	mov.w	r2, #936	; 0x3a8
    a690:	bl	9c00 <btrfs_find_free_objectid@@Base+0x5a8>
    a694:	subs	r3, r7, #1
    a696:	ldr.w	r5, [r8, #12]
    a69a:	cmp	r3, #5
    a69c:	bhi.n	a6d4 <btrfs_show_qgroups@@Base+0x24c>
    a69e:	tbb	[pc, r3]
    a6a2:	bx	r7
    a6a4:	str	r5, [r2, #52]	; 0x34
    a6a6:	ldr	r1, [sp, #452]	; 0x1c4
    a6a8:	ldr.w	r3, [r8, #8]
    a6ac:	cmp	r3, #0
    a6ae:	beq.n	a662 <btrfs_show_qgroups@@Base+0x1da>
    a6b0:	ldr.w	r2, [r8, #12]
    a6b4:	mov	r0, r4
    a6b6:	str	r1, [sp, #44]	; 0x2c
    a6b8:	blx	r3
    a6ba:	cmp	r0, #0
    a6bc:	bne.w	aa30 <btrfs_show_qgroups@@Base+0x5a8>
    a6c0:	ldr.w	r3, [r8, #8]!
    a6c4:	adds	r7, #1
    a6c6:	ldr	r2, [sp, #40]	; 0x28
    a6c8:	ldr	r1, [sp, #44]	; 0x2c
    a6ca:	cmp	r3, r2
    a6cc:	it	eq
    a6ce:	moveq.w	r9, #1
    a6d2:	b.n	a65a <btrfs_show_qgroups@@Base+0x1d2>
    a6d4:	ldrd	r1, r3, [r4, #40]	; 0x28
    a6d8:	add	r5, sp, #56	; 0x38
    a6da:	mov	r0, r5
    a6dc:	uxth	r2, r3
    a6de:	lsrs	r3, r3, #16
    a6e0:	str	r3, [sp, #0]
    a6e2:	movs	r3, #0
    a6e4:	str	r3, [sp, #4]
    a6e6:	ldr	r3, [pc, #916]	; (aa7c <btrfs_show_qgroups@@Base+0x5f4>)
    a6e8:	strd	r1, r2, [sp, #8]
    a6ec:	movs	r2, #100	; 0x64
    a6ee:	add	r3, pc
    a6f0:	movs	r1, #1
    a6f2:	blx	879c <__sprintf_chk@plt>
    a6f6:	mov	r0, r5
    a6f8:	blx	8748 <strlen@plt>
    a6fc:	ldr	r3, [pc, #896]	; (aa80 <btrfs_show_qgroups@@Base+0x5f8>)
    a6fe:	add	r3, pc
    a700:	ldr	r2, [r3, #16]
    a702:	cmp	r0, r2
    a704:	ble.n	a708 <btrfs_show_qgroups@@Base+0x280>
    a706:	str	r0, [r3, #16]
    a708:	adds	r7, #1
    a70a:	add.w	r8, r8, #20
    a70e:	cmp	r7, #7
    a710:	bne.n	a67a <btrfs_show_qgroups@@Base+0x1f2>
    a712:	b.n	a61c <btrfs_show_qgroups@@Base+0x194>
    a714:	mov	r2, r5
    a716:	ldrd	r0, r1, [r4, #56]	; 0x38
    a71a:	bl	2fbf8 <pretty_size_mode@@Base>
    a71e:	blx	8748 <strlen@plt>
    a722:	ldr	r3, [pc, #864]	; (aa84 <btrfs_show_qgroups@@Base+0x5fc>)
    a724:	add	r3, pc
    a726:	ldr	r2, [r3, #36]	; 0x24
    a728:	cmp	r0, r2
    a72a:	ble.n	a708 <btrfs_show_qgroups@@Base+0x280>
    a72c:	str	r0, [r3, #36]	; 0x24
    a72e:	b.n	a708 <btrfs_show_qgroups@@Base+0x280>
    a730:	mov	r2, r5
    a732:	ldrd	r0, r1, [r4, #72]	; 0x48
    a736:	bl	2fbf8 <pretty_size_mode@@Base>
    a73a:	blx	8748 <strlen@plt>
    a73e:	ldr	r3, [pc, #840]	; (aa88 <btrfs_show_qgroups@@Base+0x600>)
    a740:	add	r3, pc
    a742:	ldr	r2, [r3, #56]	; 0x38
    a744:	cmp	r0, r2
    a746:	ble.n	a708 <btrfs_show_qgroups@@Base+0x280>
    a748:	str	r0, [r3, #56]	; 0x38
    a74a:	b.n	a708 <btrfs_show_qgroups@@Base+0x280>
    a74c:	mov	r2, r5
    a74e:	ldrd	r0, r1, [r4, #96]	; 0x60
    a752:	bl	2fbf8 <pretty_size_mode@@Base>
    a756:	blx	8748 <strlen@plt>
    a75a:	ldr	r3, [pc, #816]	; (aa8c <btrfs_show_qgroups@@Base+0x604>)
    a75c:	add	r3, pc
    a75e:	ldr	r2, [r3, #76]	; 0x4c
    a760:	cmp	r0, r2
    a762:	ble.n	a708 <btrfs_show_qgroups@@Base+0x280>
    a764:	str	r0, [r3, #76]	; 0x4c
    a766:	b.n	a708 <btrfs_show_qgroups@@Base+0x280>
    a768:	mov	r2, r5
    a76a:	ldrd	r0, r1, [r4, #104]	; 0x68
    a76e:	bl	2fbf8 <pretty_size_mode@@Base>
    a772:	blx	8748 <strlen@plt>
    a776:	ldr	r3, [pc, #792]	; (aa90 <btrfs_show_qgroups@@Base+0x608>)
    a778:	add	r3, pc
    a77a:	ldr	r2, [r3, #96]	; 0x60
    a77c:	cmp	r0, r2
    a77e:	ble.n	a708 <btrfs_show_qgroups@@Base+0x280>
    a780:	str	r0, [r3, #96]	; 0x60
    a782:	b.n	a708 <btrfs_show_qgroups@@Base+0x280>
    a784:	ldr	r3, [pc, #780]	; (aa94 <btrfs_show_qgroups@@Base+0x60c>)
    a786:	mov	r9, r4
    a788:	ldr.w	r6, [r9, #128]!
    a78c:	add.w	sl, sp, #56	; 0x38
    a790:	add	r3, pc
    a792:	movs	r5, #0
    a794:	cmp	r9, r6
    a796:	bne.n	a7a6 <btrfs_show_qgroups@@Base+0x31e>
    a798:	ldr	r3, [pc, #764]	; (aa98 <btrfs_show_qgroups@@Base+0x610>)
    a79a:	add	r3, pc
    a79c:	ldr	r2, [r3, #116]	; 0x74
    a79e:	cmp	r5, r2
    a7a0:	ble.n	a708 <btrfs_show_qgroups@@Base+0x280>
    a7a2:	str	r5, [r3, #116]	; 0x74
    a7a4:	b.n	a708 <btrfs_show_qgroups@@Base+0x280>
    a7a6:	ldr	r2, [r6, #16]
    a7a8:	str	r3, [sp, #40]	; 0x28
    a7aa:	ldrd	r0, r2, [r2, #40]	; 0x28
    a7ae:	uxth	r1, r2
    a7b0:	lsrs	r2, r2, #16
    a7b2:	strd	r0, r1, [sp, #8]
    a7b6:	movs	r1, #1
    a7b8:	str	r2, [sp, #0]
    a7ba:	mov	r0, sl
    a7bc:	movs	r2, #0
    a7be:	str	r2, [sp, #4]
    a7c0:	movs	r2, #100	; 0x64
    a7c2:	blx	879c <__sprintf_chk@plt>
    a7c6:	ldr	r6, [r6, #0]
    a7c8:	ldr	r3, [sp, #40]	; 0x28
    a7ca:	cmp	r6, r9
    a7cc:	add	r5, r0
    a7ce:	it	ne
    a7d0:	addne	r5, #1
    a7d2:	b.n	a794 <btrfs_show_qgroups@@Base+0x30c>
    a7d4:	mov	r9, r4
    a7d6:	ldr	r3, [pc, #708]	; (aa9c <btrfs_show_qgroups@@Base+0x614>)
    a7d8:	ldr.w	r5, [r9, #136]!
    a7dc:	add.w	sl, sp, #56	; 0x38
    a7e0:	add	r3, pc
    a7e2:	movs	r6, #0
    a7e4:	subs	r5, #8
    a7e6:	add.w	r2, r5, #8
    a7ea:	cmp	r9, r2
    a7ec:	bne.n	a800 <btrfs_show_qgroups@@Base+0x378>
    a7ee:	ldr	r3, [pc, #688]	; (aaa0 <btrfs_show_qgroups@@Base+0x618>)
    a7f0:	add	r3, pc
    a7f2:	ldr.w	r2, [r3, #136]	; 0x88
    a7f6:	cmp	r6, r2
    a7f8:	it	gt
    a7fa:	strgt.w	r6, [r3, #136]	; 0x88
    a7fe:	b.n	a708 <btrfs_show_qgroups@@Base+0x280>
    a800:	ldr	r2, [r5, #20]
    a802:	str	r3, [sp, #40]	; 0x28
    a804:	ldrd	r0, r2, [r2, #40]	; 0x28
    a808:	uxth	r1, r2
    a80a:	lsrs	r2, r2, #16
    a80c:	strd	r0, r1, [sp, #8]
    a810:	movs	r1, #1
    a812:	str	r2, [sp, #0]
    a814:	mov	r0, sl
    a816:	movs	r2, #0
    a818:	str	r2, [sp, #4]
    a81a:	movs	r2, #100	; 0x64
    a81c:	blx	879c <__sprintf_chk@plt>
    a820:	ldr	r2, [r5, #8]
    a822:	ldr	r5, [r5, #8]
    a824:	cmp	r2, r9
    a826:	ldr	r3, [sp, #40]	; 0x28
    a828:	sub.w	r5, r5, #8
    a82c:	add	r6, r0
    a82e:	it	ne
    a830:	addne	r6, #1
    a832:	b.n	a7e6 <btrfs_show_qgroups@@Base+0x35e>
    a834:	mov	r1, r7
    a836:	b.n	a51a <btrfs_show_qgroups@@Base+0x92>
    a838:	movs	r0, #45	; 0x2d
    a83a:	blx	87d4 <putchar@plt+0x4>
    a83e:	b.n	a552 <btrfs_show_qgroups@@Base+0xca>
    a840:	movs	r0, #32
    a842:	blx	87d4 <putchar@plt+0x4>
    a846:	b.n	a560 <btrfs_show_qgroups@@Base+0xd8>
    a848:	blx	8748 <strlen@plt>
    a84c:	subs	r5, r5, r0
    a84e:	subs	r5, #1
    a850:	bcs.n	a868 <btrfs_show_qgroups@@Base+0x3e0>
    a852:	ldr	r0, [r4, #0]
    a854:	blx	8748 <strlen@plt>
    a858:	mov	r5, r0
    a85a:	subs	r5, #1
    a85c:	bcc.w	a566 <btrfs_show_qgroups@@Base+0xde>
    a860:	movs	r0, #45	; 0x2d
    a862:	blx	87d4 <putchar@plt+0x4>
    a866:	b.n	a85a <btrfs_show_qgroups@@Base+0x3d2>
    a868:	movs	r0, #32
    a86a:	blx	87d4 <putchar@plt+0x4>
    a86e:	b.n	a84e <btrfs_show_qgroups@@Base+0x3c6>
    a870:	ldr	r3, [pc, #560]	; (aaa4 <btrfs_show_qgroups@@Base+0x61c>)
    a872:	mov.w	r9, #0
    a876:	ldr	r7, [sp, #20]
    a878:	add	r3, pc
    a87a:	vmov	s16, r3
    a87e:	ldr	r3, [r7, #8]
    a880:	cmp	r3, #0
    a882:	beq.w	a9e2 <btrfs_show_qgroups@@Base+0x55a>
    a886:	movs	r3, #1
    a888:	vmov	r1, s17
    a88c:	vmov	r0, s16
    a890:	movs	r2, #217	; 0xd9
    a892:	bl	9c00 <btrfs_find_free_objectid@@Base+0x5a8>
    a896:	add.w	r3, r9, #4294967295	; 0xffffffff
    a89a:	ldrd	r6, r5, [r7, #12]
    a89e:	cmp	r3, #5
    a8a0:	bhi.n	a8ac <btrfs_show_qgroups@@Base+0x424>
    a8a2:	tbb	[pc, r3]
    a8a6:	subs	r7, r2, #0
    a8a8:	ldr	r5, [r2, #84]	; 0x54
    a8aa:	strh	r3, [r4, #16]
    a8ac:	ldrd	r1, r2, [r4, #28]
    a8b0:	movs	r0, #1
    a8b2:	uxth	r3, r2
    a8b4:	strd	r1, r3, [sp]
    a8b8:	ldr	r1, [pc, #492]	; (aaa8 <btrfs_show_qgroups@@Base+0x620>)
    a8ba:	lsrs	r2, r2, #16
    a8bc:	movs	r3, #0
    a8be:	add	r1, pc
    a8c0:	blx	8838 <__printf_chk@plt+0x4>
    a8c4:	mov	r1, r0
    a8c6:	movs	r0, #0
    a8c8:	bl	9a2c <btrfs_find_free_objectid@@Base+0x3d4>
    a8cc:	movs	r0, #32
    a8ce:	blx	87d4 <putchar@plt+0x4>
    a8d2:	b.n	a9e2 <btrfs_show_qgroups@@Base+0x55a>
    a8d4:	ldrd	r0, r1, [r4, #44]	; 0x2c
    a8d8:	mov	r3, r5
    a8da:	mov	r2, r6
    a8dc:	bl	9a50 <btrfs_find_free_objectid@@Base+0x3f8>
    a8e0:	b.n	a8cc <btrfs_show_qgroups@@Base+0x444>
    a8e2:	ldrd	r0, r1, [r4, #60]	; 0x3c
    a8e6:	mov	r3, r5
    a8e8:	mov	r2, r6
    a8ea:	b.n	a8dc <btrfs_show_qgroups@@Base+0x454>
    a8ec:	ldr.w	sl, [pc, #444]	; aaac <btrfs_show_qgroups@@Base+0x624>
    a8f0:	mov	r6, r4
    a8f2:	ldr.w	fp, [pc, #444]	; aab0 <btrfs_show_qgroups@@Base+0x628>
    a8f6:	movs	r5, #0
    a8f8:	ldr.w	r8, [r6, #116]!
    a8fc:	add	sl, pc
    a8fe:	add	fp, pc
    a900:	cmp	r6, r8
    a902:	bne.n	a91c <btrfs_show_qgroups@@Base+0x494>
    a904:	ldr	r3, [r4, #116]	; 0x74
    a906:	cmp	r6, r3
    a908:	bne.n	a916 <btrfs_show_qgroups@@Base+0x48e>
    a90a:	ldr	r1, [pc, #424]	; (aab4 <btrfs_show_qgroups@@Base+0x62c>)
    a90c:	movs	r0, #1
    a90e:	add	r1, pc
    a910:	blx	8838 <__printf_chk@plt+0x4>
    a914:	add	r5, r0
    a916:	mov	r1, r5
    a918:	movs	r0, #5
    a91a:	b.n	a8c8 <btrfs_show_qgroups@@Base+0x440>
    a91c:	ldr.w	r3, [r8, #16]
    a920:	movs	r0, #1
    a922:	ldrd	r1, r2, [r3, #40]	; 0x28
    a926:	uxth	r3, r2
    a928:	lsrs	r2, r2, #16
    a92a:	strd	r1, r3, [sp]
    a92e:	movs	r3, #0
    a930:	mov	r1, sl
    a932:	blx	8838 <__printf_chk@plt+0x4>
    a936:	ldr.w	r3, [r8]
    a93a:	cmp	r3, r6
    a93c:	add	r5, r0
    a93e:	beq.n	a94a <btrfs_show_qgroups@@Base+0x4c2>
    a940:	mov	r1, fp
    a942:	movs	r0, #1
    a944:	blx	8838 <__printf_chk@plt+0x4>
    a948:	add	r5, r0
    a94a:	ldr.w	r8, [r8]
    a94e:	b.n	a900 <btrfs_show_qgroups@@Base+0x478>
    a950:	ldr	r3, [r4, #76]	; 0x4c
    a952:	and.w	r3, r3, #1
    a956:	str	r3, [sp, #24]
    a958:	movs	r3, #0
    a95a:	str	r3, [sp, #28]
    a95c:	ldrd	r2, r3, [sp, #24]
    a960:	orrs	r3, r2
    a962:	beq.n	a96e <btrfs_show_qgroups@@Base+0x4e6>
    a964:	ldrd	r0, r1, [r4, #84]	; 0x54
    a968:	mov	r3, r5
    a96a:	mov	r2, r6
    a96c:	b.n	a8dc <btrfs_show_qgroups@@Base+0x454>
    a96e:	ldr	r3, [pc, #328]	; (aab8 <btrfs_show_qgroups@@Base+0x630>)
    a970:	mov	r2, r5
    a972:	ldr	r1, [pc, #328]	; (aabc <btrfs_show_qgroups@@Base+0x634>)
    a974:	add	r3, pc
    a976:	add	r1, pc
    a978:	movs	r0, #1
    a97a:	blx	8838 <__printf_chk@plt+0x4>
    a97e:	b.n	a8cc <btrfs_show_qgroups@@Base+0x444>
    a980:	ldr	r3, [r4, #76]	; 0x4c
    a982:	and.w	r3, r3, #2
    a986:	str	r3, [sp, #32]
    a988:	movs	r3, #0
    a98a:	str	r3, [sp, #36]	; 0x24
    a98c:	ldrd	r2, r3, [sp, #32]
    a990:	orrs	r3, r2
    a992:	beq.n	a99e <btrfs_show_qgroups@@Base+0x516>
    a994:	ldrd	r0, r1, [r4, #92]	; 0x5c
    a998:	mov	r3, r5
    a99a:	mov	r2, r6
    a99c:	b.n	a8dc <btrfs_show_qgroups@@Base+0x454>
    a99e:	ldr	r3, [pc, #288]	; (aac0 <btrfs_show_qgroups@@Base+0x638>)
    a9a0:	mov	r2, r5
    a9a2:	ldr	r1, [pc, #288]	; (aac4 <btrfs_show_qgroups@@Base+0x63c>)
    a9a4:	add	r3, pc
    a9a6:	add	r1, pc
    a9a8:	b.n	a978 <btrfs_show_qgroups@@Base+0x4f0>
    a9aa:	mov	r8, r4
    a9ac:	ldr.w	sl, [pc, #280]	; aac8 <btrfs_show_qgroups@@Base+0x640>
    a9b0:	ldr.w	r5, [r8, #124]!
    a9b4:	movs	r6, #0
    a9b6:	ldr.w	fp, [pc, #276]	; aacc <btrfs_show_qgroups@@Base+0x644>
    a9ba:	add	sl, pc
    a9bc:	subs	r5, #8
    a9be:	add	fp, pc
    a9c0:	add.w	r3, r5, #8
    a9c4:	cmp	r8, r3
    a9c6:	bne.n	aa00 <btrfs_show_qgroups@@Base+0x578>
    a9c8:	ldr	r3, [r4, #124]	; 0x7c
    a9ca:	cmp	r8, r3
    a9cc:	bne.n	a9da <btrfs_show_qgroups@@Base+0x552>
    a9ce:	ldr	r1, [pc, #256]	; (aad0 <btrfs_show_qgroups@@Base+0x648>)
    a9d0:	movs	r0, #1
    a9d2:	add	r1, pc
    a9d4:	blx	8838 <__printf_chk@plt+0x4>
    a9d8:	add	r6, r0
    a9da:	mov	r1, r6
    a9dc:	movs	r0, #6
    a9de:	bl	9a2c <btrfs_find_free_objectid@@Base+0x3d4>
    a9e2:	add.w	r9, r9, #1
    a9e6:	adds	r7, #20
    a9e8:	cmp.w	r9, #7
    a9ec:	bne.w	a87e <btrfs_show_qgroups@@Base+0x3f6>
    a9f0:	movs	r0, #10
    a9f2:	blx	87d4 <putchar@plt+0x4>
    a9f6:	mov	r0, r4
    a9f8:	bl	1355a <rb_next@@Base>
    a9fc:	mov	r4, r0
    a9fe:	b.n	a58e <btrfs_show_qgroups@@Base+0x106>
    aa00:	ldr	r3, [r5, #20]
    aa02:	movs	r0, #1
    aa04:	ldrd	r1, r2, [r3, #40]	; 0x28
    aa08:	uxth	r3, r2
    aa0a:	lsrs	r2, r2, #16
    aa0c:	strd	r1, r3, [sp]
    aa10:	movs	r3, #0
    aa12:	mov	r1, sl
    aa14:	blx	8838 <__printf_chk@plt+0x4>
    aa18:	ldr	r3, [r5, #8]
    aa1a:	cmp	r3, r8
    aa1c:	add	r6, r0
    aa1e:	beq.n	aa2a <btrfs_show_qgroups@@Base+0x5a2>
    aa20:	mov	r1, fp
    aa22:	movs	r0, #1
    aa24:	blx	8838 <__printf_chk@plt+0x4>
    aa28:	add	r6, r0
    aa2a:	ldr	r5, [r5, #8]
    aa2c:	subs	r5, #8
    aa2e:	b.n	a9c0 <btrfs_show_qgroups@@Base+0x538>
    aa30:	bge.w	a644 <btrfs_show_qgroups@@Base+0x1bc>
    aa34:	ldr	r5, [r5, #0]
    aa36:	adds	r5, #8
    aa38:	mov	r3, r6
    aa3a:	b.n	a5e8 <btrfs_show_qgroups@@Base+0x160>
    aa3c:	ldr	r0, [sp, #16]
    aa3e:	add	sp, #164	; 0xa4
    aa40:	vpop	{d8}
    aa44:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    aa48:	lsls	r0, r4, #8
    aa4a:	movs	r0, r0
    aa4c:	ldr	r0, [sp, #904]	; 0x388
    aa4e:	movs	r5, r0
    aa50:	bl	ffcc6a52 <__bss_end__@@Base+0xffc617aa>
    aa54:	bl	ffc54a56 <__bss_end__@@Base+0xffbef7ae>
    aa58:	ldcl	0, cr0, [r8, #8]!
    aa5c:	ldr	r3, [sp, #40]	; 0x28
    aa5e:	movs	r5, r0
    aa60:	ldc	0, cr0, [ip, #-8]
    aa64:	orns	r0, r3, r2
    aa68:	ldcl	0, cr0, [r4, #-8]
    aa6c:	str	r7, [sp, #904]	; 0x388
    aa6e:	movs	r5, r0
    aa70:	bl	26ca72 <__bss_end__@@Base+0x2077ca>
    aa74:	sbcs.w	r0, sp, r2
    aa78:	ldr	r1, [sp, #576]	; 0x240
    aa7a:	movs	r5, r0
    aa7c:			; <UNDEFINED> instruction: 0xe9b10002
    aa80:	ldr	r1, [sp, #24]
    aa82:	movs	r5, r0
    aa84:	ldr	r0, [sp, #896]	; 0x380
    aa86:	movs	r5, r0
    aa88:	ldr	r0, [sp, #784]	; 0x310
    aa8a:	movs	r5, r0
    aa8c:	ldr	r0, [sp, #672]	; 0x2a0
    aa8e:	movs	r5, r0
    aa90:	ldr	r0, [sp, #560]	; 0x230
    aa92:	movs	r5, r0
    aa94:	stmdb	pc, {r1}
    aa98:	ldr	r0, [sp, #424]	; 0x1a8
    aa9a:	movs	r5, r0
    aa9c:	ldmia.w	pc!, {r1}
    aaa0:	ldr	r0, [sp, #80]	; 0x50
    aaa2:	movs	r5, r0
    aaa4:	ldrd	r0, r0, [r7, #-8]!
    aaa8:	b.n	aa6e <btrfs_show_qgroups@@Base+0x5e6>
    aaaa:	movs	r2, r0
    aaac:	b.n	a9f6 <btrfs_show_qgroups@@Base+0x56e>
    aaae:	movs	r2, r0
    aab0:	ldmdb	pc, {r1}
    aab4:	ldmdb	r1, {r1}
    aab8:	ldc2	0, cr0, [sp, #8]
    aabc:	b.n	a6ba <btrfs_show_qgroups@@Base+0x232>
    aabe:	movs	r2, r0
    aac0:	stc2l	0, cr0, [sp, #-8]!
    aac4:	b.n	a662 <btrfs_show_qgroups@@Base+0x1da>
    aac6:	movs	r2, r0
    aac8:	b.n	a896 <btrfs_show_qgroups@@Base+0x40e>
    aaca:	movs	r2, r0
    aacc:			; <UNDEFINED> instruction: 0xe85f0002
    aad0:	strex	r0, r0, [sp, #8]

0000aad4 <btrfs_qgroup_parse_sort_string@@Base>:
    aad4:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    aad8:	mov	r7, r1
    aada:	blx	84f8 <strdup@plt+0x4>
    aade:	mov	r5, r0
    aae0:	cmp	r0, #0
    aae2:	beq.n	ab68 <btrfs_qgroup_parse_sort_string@@Base+0x94>
    aae4:	ldr	r1, [pc, #160]	; (ab88 <btrfs_qgroup_parse_sort_string@@Base+0xb4>)
    aae6:	ldr.w	r8, [pc, #164]	; ab8c <btrfs_qgroup_parse_sort_string@@Base+0xb8>
    aaea:	add	r1, pc
    aaec:	ldr.w	r9, [pc, #160]	; ab90 <btrfs_qgroup_parse_sort_string@@Base+0xbc>
    aaf0:	blx	8890 <strtok@plt>
    aaf4:	add	r8, pc
    aaf6:	add	r9, pc
    aaf8:	mov	r4, r0
    aafa:	cbz	r4, ab2a <btrfs_qgroup_parse_sort_string@@Base+0x56>
    aafc:	add.w	fp, r8, #160	; 0xa0
    ab00:	add.w	sl, r4, #1
    ab04:	mov	r6, fp
    ab06:	b.n	ab20 <btrfs_qgroup_parse_sort_string@@Base+0x4c>
    ab08:	mov	r1, r4
    ab0a:	mov	r0, r3
    ab0c:	str	r3, [sp, #4]
    ab0e:	blx	83c0 <strcmp@plt>
    ab12:	cbz	r0, ab38 <btrfs_qgroup_parse_sort_string@@Base+0x64>
    ab14:	ldr	r3, [sp, #4]
    ab16:	mov	r1, sl
    ab18:	mov	r0, r3
    ab1a:	blx	83c0 <strcmp@plt>
    ab1e:	cbz	r0, ab38 <btrfs_qgroup_parse_sort_string@@Base+0x64>
    ab20:	ldr.w	r3, [r6], #4
    ab24:	cmp	r3, #0
    ab26:	bne.n	ab08 <btrfs_qgroup_parse_sort_string@@Base+0x34>
    ab28:	movs	r4, #1
    ab2a:	mov	r0, r5
    ab2c:	blx	8434 <free@plt+0x4>
    ab30:	mov	r0, r4
    ab32:	add	sp, #12
    ab34:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ab38:	ldrb	r3, [r4, #0]
    ab3a:	cmp	r3, #43	; 0x2b
    ab3c:	bne.n	ab44 <btrfs_qgroup_parse_sort_string@@Base+0x70>
    ab3e:	adds	r4, #1
    ab40:	movs	r2, #0
    ab42:	b.n	ab4c <btrfs_qgroup_parse_sort_string@@Base+0x78>
    ab44:	cmp	r3, #45	; 0x2d
    ab46:	bne.n	ab40 <btrfs_qgroup_parse_sort_string@@Base+0x6c>
    ab48:	adds	r4, #1
    ab4a:	movs	r2, #1
    ab4c:	movs	r6, #0
    ab4e:	ldr.w	r1, [fp], #4
    ab52:	mov	r0, r4
    ab54:	str	r2, [sp, #4]
    ab56:	blx	83c0 <strcmp@plt>
    ab5a:	ldr	r2, [sp, #4]
    ab5c:	mov	sl, r0
    ab5e:	cbz	r0, ab6e <btrfs_qgroup_parse_sort_string@@Base+0x9a>
    ab60:	adds	r6, #1
    ab62:	cmp	r6, #5
    ab64:	bne.n	ab4e <btrfs_qgroup_parse_sort_string@@Base+0x7a>
    ab66:	b.n	ab28 <btrfs_qgroup_parse_sort_string@@Base+0x54>
    ab68:	mvn.w	r4, #11
    ab6c:	b.n	ab30 <btrfs_qgroup_parse_sort_string@@Base+0x5c>
    ab6e:	mov	r1, r6
    ab70:	mov	r0, r7
    ab72:	bl	a184 <btrfs_qgroup_setup_comparer@@Base>
    ab76:	subs	r4, r0, #0
    ab78:	blt.n	ab2a <btrfs_qgroup_parse_sort_string@@Base+0x56>
    ab7a:	mov	r1, r9
    ab7c:	mov	r0, sl
    ab7e:	blx	8890 <strtok@plt>
    ab82:	mov	r4, r0
    ab84:	b.n	aafa <btrfs_qgroup_parse_sort_string@@Base+0x26>
    ab86:	nop
    ab88:	b.n	a9f2 <btrfs_show_qgroups@@Base+0x56a>
    ab8a:	movs	r2, r0
    ab8c:	str	r5, [sp, #64]	; 0x40
    ab8e:	movs	r5, r0
    ab90:	b.n	a9e2 <btrfs_show_qgroups@@Base+0x55a>
    ab92:	movs	r2, r0

0000ab94 <qgroup_inherit_size@@Base>:
    ab94:	ldr	r3, [r0, #24]
    ab96:	ldr	r2, [r0, #16]
    ab98:	adds	r2, r3, r2
    ab9a:	ldr	r3, [r0, #8]
    ab9c:	adds	r3, #9
    ab9e:	add.w	r0, r3, r2, lsl #1
    aba2:	lsls	r0, r0, #3
    aba4:	bx	lr

0000aba6 <qgroup_inherit_add_group@@Base>:
    aba6:	push	{r4, r5, r6, lr}
    aba8:	mov	r6, r0
    abaa:	mov	r0, r1
    abac:	bl	300ac <parse_qgroupid@@Base>
    abb0:	mov	r4, r0
    abb2:	mov	r5, r1
    abb4:	orrs.w	r3, r4, r5
    abb8:	bne.n	abc8 <qgroup_inherit_add_group@@Base+0x22>
    abba:	ldr	r0, [pc, #56]	; (abf4 <qgroup_inherit_add_group@@Base+0x4e>)
    abbc:	add	r0, pc
    abbe:	bl	16b70 <__btrfs_error@@Base>
    abc2:	mvn.w	r0, #21
    abc6:	pop	{r4, r5, r6, pc}
    abc8:	ldr	r2, [r6, #0]
    abca:	cbz	r2, abce <qgroup_inherit_add_group@@Base+0x28>
    abcc:	ldr	r2, [r2, #8]
    abce:	movs	r1, #1
    abd0:	mov	r0, r6
    abd2:	bl	9a70 <btrfs_find_free_objectid@@Base+0x418>
    abd6:	cmp	r0, #0
    abd8:	bne.n	abc6 <qgroup_inherit_add_group@@Base+0x20>
    abda:	ldr	r3, [r6, #0]
    abdc:	ldrd	r2, r1, [r3, #8]
    abe0:	adds	r6, r2, #1
    abe2:	adc.w	r1, r1, #0
    abe6:	strd	r6, r1, [r3, #8]
    abea:	add.w	r3, r3, r2, lsl #3
    abee:	strd	r4, r5, [r3, #72]	; 0x48
    abf2:	b.n	abc6 <qgroup_inherit_add_group@@Base+0x20>
    abf4:	b.n	a8c6 <btrfs_show_qgroups@@Base+0x43e>
    abf6:	movs	r2, r0

0000abf8 <qgroup_inherit_add_copy@@Base>:
    abf8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    abfc:	mov	r6, r1
    abfe:	mov	sl, r0
    ac00:	movs	r1, #58	; 0x3a
    ac02:	mov	r0, r6
    ac04:	mov	r5, r2
    ac06:	blx	8754 <strchr@plt>
    ac0a:	mov	r4, r0
    ac0c:	cbnz	r0, ac1e <qgroup_inherit_add_copy@@Base+0x26>
    ac0e:	ldr	r0, [pc, #152]	; (aca8 <qgroup_inherit_add_copy@@Base+0xb0>)
    ac10:	add	r0, pc
    ac12:	bl	16b70 <__btrfs_error@@Base>
    ac16:	mvn.w	r0, #21
    ac1a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    ac1e:	mov	r8, r0
    ac20:	movs	r3, #0
    ac22:	mov	r0, r6
    ac24:	strb.w	r3, [r8], #1
    ac28:	bl	300ac <parse_qgroupid@@Base>
    ac2c:	mov	r6, r0
    ac2e:	mov	r0, r8
    ac30:	mov	r7, r1
    ac32:	bl	300ac <parse_qgroupid@@Base>
    ac36:	movs	r3, #58	; 0x3a
    ac38:	strb	r3, [r4, #0]
    ac3a:	orrs.w	r3, r6, r7
    ac3e:	mov	r8, r0
    ac40:	mov	r9, r1
    ac42:	beq.n	ac0e <qgroup_inherit_add_copy@@Base+0x16>
    ac44:	orrs.w	r3, r8, r9
    ac48:	beq.n	ac0e <qgroup_inherit_add_copy@@Base+0x16>
    ac4a:	ldr.w	r4, [sl]
    ac4e:	cbz	r4, ac5a <qgroup_inherit_add_copy@@Base+0x62>
    ac50:	ldr	r2, [r4, #16]
    ac52:	ldr	r4, [r4, #8]
    ac54:	muls	r2, r5
    ac56:	add.w	r4, r4, r2, lsl #1
    ac5a:	mov	r2, r4
    ac5c:	movs	r1, #2
    ac5e:	mov	r0, sl
    ac60:	bl	9a70 <btrfs_find_free_objectid@@Base+0x418>
    ac64:	cmp	r0, #0
    ac66:	bne.n	ac1a <qgroup_inherit_add_copy@@Base+0x22>
    ac68:	ldr.w	r3, [sl]
    ac6c:	add.w	r3, r3, r4, lsl #3
    ac70:	strd	r6, r7, [r3, #72]	; 0x48
    ac74:	ldr.w	r2, [sl]
    ac78:	add.w	r2, r2, r4, lsl #3
    ac7c:	strd	r8, r9, [r2, #80]	; 0x50
    ac80:	ldr.w	r3, [sl]
    ac84:	cbnz	r5, ac96 <qgroup_inherit_add_copy@@Base+0x9e>
    ac86:	ldrd	r2, r1, [r3, #16]
    ac8a:	adds	r2, #1
    ac8c:	adc.w	r1, r1, #0
    ac90:	strd	r2, r1, [r3, #16]
    ac94:	b.n	ac1a <qgroup_inherit_add_copy@@Base+0x22>
    ac96:	ldrd	r2, r1, [r3, #24]
    ac9a:	adds	r2, #1
    ac9c:	adc.w	r1, r1, #0
    aca0:	strd	r2, r1, [r3, #24]
    aca4:	b.n	ac1a <qgroup_inherit_add_copy@@Base+0x22>
    aca6:	nop
    aca8:	b.n	a936 <btrfs_show_qgroups@@Base+0x4ae>
    acaa:	movs	r2, r0
    acac:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
    acb0:	mov	r5, r2
    acb2:	ldr	r2, [pc, #84]	; (ad08 <qgroup_inherit_add_copy@@Base+0x110>)
    acb4:	mov	r4, r3
    acb6:	ldr	r3, [pc, #84]	; (ad0c <qgroup_inherit_add_copy@@Base+0x114>)
    acb8:	add	r6, sp, #4
    acba:	add	r2, pc
    acbc:	mov	r7, r0
    acbe:	mov	r8, r1
    acc0:	ldr	r3, [r2, r3]
    acc2:	ldr	r3, [r3, #0]
    acc4:	str	r3, [sp, #12]
    acc6:	mov.w	r3, #0
    acca:	cbz	r5, acd0 <qgroup_inherit_add_copy@@Base+0xd8>
    accc:	cbnz	r4, ace8 <qgroup_inherit_add_copy@@Base+0xf0>
    acce:	mov	r4, r5
    acd0:	ldr	r2, [pc, #60]	; (ad10 <qgroup_inherit_add_copy@@Base+0x118>)
    acd2:	ldr	r3, [pc, #56]	; (ad0c <qgroup_inherit_add_copy@@Base+0x114>)
    acd4:	add	r2, pc
    acd6:	str	r4, [r6, #0]
    acd8:	ldr	r0, [sp, #4]
    acda:	ldr	r3, [r2, r3]
    acdc:	ldr	r2, [r3, #0]
    acde:	ldr	r3, [sp, #12]
    ace0:	eors	r2, r3
    ace2:	beq.n	ad00 <qgroup_inherit_add_copy@@Base+0x108>
    ace4:	blx	8510 <__stack_chk_fail@plt>
    ace8:	mov	r2, r4
    acea:	mov	r1, r5
    acec:	mov	r0, r7
    acee:	blx	r8
    acf0:	cmp	r0, #0
    acf2:	itete	le
    acf4:	strle	r5, [r6, #0]
    acf6:	strgt	r4, [r6, #0]
    acf8:	ldrle	r5, [r5, #0]
    acfa:	ldrgt	r4, [r4, #0]
    acfc:	ldr	r6, [r6, #0]
    acfe:	b.n	acca <qgroup_inherit_add_copy@@Base+0xd2>
    ad00:	add	sp, #16
    ad02:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ad06:	nop
    ad08:	str	r0, [sp, #808]	; 0x328
    ad0a:	movs	r5, r0
    ad0c:	lsls	r0, r4, #8
    ad0e:	movs	r0, r0
    ad10:	str	r0, [sp, #704]	; 0x2c0
    ad12:	movs	r5, r0

0000ad14 <list_sort@@Base>:
    ad14:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ad18:	mov	r7, r2
    ad1a:	ldr	r2, [pc, #268]	; (ae28 <list_sort@@Base+0x114>)
    ad1c:	sub	sp, #100	; 0x64
    ad1e:	ldr	r3, [pc, #268]	; (ae2c <list_sort@@Base+0x118>)
    ad20:	mov	r8, r0
    ad22:	add	r2, pc
    ad24:	mov	r4, r1
    ad26:	ldr	r3, [r2, r3]
    ad28:	ldr	r3, [r3, #0]
    ad2a:	str	r3, [sp, #92]	; 0x5c
    ad2c:	mov.w	r3, #0
    ad30:	ldr	r3, [r1, #0]
    ad32:	cmp	r1, r3
    ad34:	beq.n	ad88 <list_sort@@Base+0x74>
    ad36:	add.w	r9, sp, #8
    ad3a:	movs	r2, #84	; 0x54
    ad3c:	movs	r1, #0
    ad3e:	ldr.w	fp, [pc, #240]	; ae30 <list_sort@@Base+0x11c>
    ad42:	mov	r0, r9
    ad44:	movs	r5, #0
    ad46:	blx	87c4 <memset@plt+0x4>
    ad4a:	ldr	r3, [r4, #4]
    ad4c:	add	fp, pc
    ad4e:	str	r5, [r3, #0]
    ad50:	ldr	r3, [r4, #0]
    ad52:	cbnz	r3, ad9c <list_sort@@Base+0x88>
    ad54:	mov	r6, r3
    ad56:	cmp	r6, r5
    ad58:	bne.n	adea <list_sort@@Base+0xd6>
    ad5a:	add	r2, sp, #96	; 0x60
    ad5c:	mov	r5, r4
    ad5e:	add.w	r6, r2, r6, lsl #2
    ad62:	ldr.w	r6, [r6, #-88]
    ad66:	cbz	r6, ad6e <list_sort@@Base+0x5a>
    ad68:	cmp	r3, #0
    ad6a:	bne.n	adfe <list_sort@@Base+0xea>
    ad6c:	mov	r3, r6
    ad6e:	str	r3, [r5, #0]
    ad70:	ldr	r2, [r5, #0]
    ad72:	mov	r0, r8
    ad74:	mov	r1, r2
    ad76:	blx	r7
    ad78:	ldr	r3, [r5, #0]
    ad7a:	str	r5, [r3, #4]
    ad7c:	ldr	r5, [r5, #0]
    ad7e:	ldr	r3, [r5, #0]
    ad80:	cmp	r3, #0
    ad82:	bne.n	ad70 <list_sort@@Base+0x5c>
    ad84:	str	r4, [r5, #0]
    ad86:	str	r5, [r4, #4]
    ad88:	ldr	r2, [pc, #168]	; (ae34 <list_sort@@Base+0x120>)
    ad8a:	ldr	r3, [pc, #160]	; (ae2c <list_sort@@Base+0x118>)
    ad8c:	add	r2, pc
    ad8e:	ldr	r3, [r2, r3]
    ad90:	ldr	r2, [r3, #0]
    ad92:	ldr	r3, [sp, #92]	; 0x5c
    ad94:	eors	r2, r3
    ad96:	beq.n	ae20 <list_sort@@Base+0x10c>
    ad98:	blx	8510 <__stack_chk_fail@plt>
    ad9c:	ldr	r2, [r3, #0]
    ad9e:	mov	sl, r9
    ada0:	str	r2, [sp, #0]
    ada2:	movs	r2, #0
    ada4:	mov	r6, r2
    ada6:	str	r2, [r3, #0]
    ada8:	ldr.w	r2, [sl], #4
    adac:	cbnz	r2, add2 <list_sort@@Base+0xbe>
    adae:	cmp	r6, r5
    adb0:	ble.n	adc4 <list_sort@@Base+0xb0>
    adb2:	cmp	r6, #20
    adb4:	bne.n	ade6 <list_sort@@Base+0xd2>
    adb6:	mov	r0, fp
    adb8:	str	r3, [sp, #4]
    adba:	blx	865c <puts@plt+0x4>
    adbe:	ldr	r3, [sp, #4]
    adc0:	movs	r5, #19
    adc2:	mov	r6, r5
    adc4:	add	r2, sp, #96	; 0x60
    adc6:	add.w	r6, r2, r6, lsl #2
    adca:	str.w	r3, [r6, #-88]
    adce:	ldr	r3, [sp, #0]
    add0:	b.n	ad52 <list_sort@@Base+0x3e>
    add2:	mov	r1, r7
    add4:	mov	r0, r8
    add6:	bl	acac <qgroup_inherit_add_copy@@Base+0xb4>
    adda:	adds	r6, #1
    addc:	movs	r2, #0
    adde:	str.w	r2, [sl, #-4]
    ade2:	mov	r3, r0
    ade4:	b.n	ada8 <list_sort@@Base+0x94>
    ade6:	mov	r5, r6
    ade8:	b.n	adc4 <list_sort@@Base+0xb0>
    adea:	ldr.w	r2, [r9, r6, lsl #2]
    adee:	cbz	r2, adfa <list_sort@@Base+0xe6>
    adf0:	mov	r1, r7
    adf2:	mov	r0, r8
    adf4:	bl	acac <qgroup_inherit_add_copy@@Base+0xb4>
    adf8:	mov	r3, r0
    adfa:	adds	r6, #1
    adfc:	b.n	ad56 <list_sort@@Base+0x42>
    adfe:	mov	r2, r3
    ae00:	mov	r1, r6
    ae02:	mov	r0, r8
    ae04:	str	r3, [sp, #0]
    ae06:	blx	r7
    ae08:	ldr	r3, [sp, #0]
    ae0a:	cmp	r0, #0
    ae0c:	itete	le
    ae0e:	strle	r6, [r5, #0]
    ae10:	strgt	r3, [r5, #0]
    ae12:	strle	r5, [r6, #4]
    ae14:	strgt	r5, [r3, #4]
    ae16:	ite	le
    ae18:	ldrle	r6, [r6, #0]
    ae1a:	ldrgt	r3, [r3, #0]
    ae1c:	ldr	r5, [r5, #0]
    ae1e:	b.n	ad66 <list_sort@@Base+0x52>
    ae20:	add	sp, #100	; 0x64
    ae22:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ae26:	nop
    ae28:	str	r0, [sp, #392]	; 0x188
    ae2a:	movs	r5, r0
    ae2c:	lsls	r0, r4, #8
    ae2e:	movs	r0, r0
    ae30:	b.n	aa52 <btrfs_show_qgroups@@Base+0x5ca>
    ae32:	movs	r2, r0
    ae34:	ldrh	r0, [r7, #62]	; 0x3e
    ae36:	movs	r5, r0
    ae38:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    ae3c:	mov	r8, r1
    ae3e:	ldr	r1, [pc, #392]	; (afc8 <list_sort@@Base+0x2b4>)
    ae40:	mov	r5, r2
    ae42:	ldr	r2, [pc, #392]	; (afcc <list_sort@@Base+0x2b8>)
    ae44:	subs	r4, r3, #0
    ae46:	add	r1, pc
    ae48:	sub	sp, #24
    ae4a:	mov.w	r9, #0
    ae4e:	mov	r0, r8
    ae50:	ldr	r2, [r1, r2]
    ae52:	add	r1, sp, #16
    ae54:	ldr.w	sl, [pc, #376]	; afd0 <list_sort@@Base+0x2bc>
    ae58:	ldr	r2, [r2, #0]
    ae5a:	str	r2, [sp, #20]
    ae5c:	mov.w	r2, #0
    ae60:	ite	ne
    ae62:	movne	r2, #2
    ae64:	moveq	r2, r9
    ae66:	str.w	r9, [sp, #16]
    ae6a:	bl	30224 <open_file_or_dir3@@Base>
    ae6e:	add	sl, pc
    ae70:	adds	r3, r0, #1
    ae72:	mov	r7, r0
    ae74:	bne.n	aeba <list_sort@@Base+0x1a6>
    ae76:	blx	8784 <__errno_location@plt>
    ae7a:	mov	r1, r8
    ae7c:	mov	r6, r9
    ae7e:	ldr	r4, [r0, #0]
    ae80:	ldr	r0, [pc, #336]	; (afd4 <list_sort@@Base+0x2c0>)
    ae82:	negs	r4, r4
    ae84:	add	r0, pc
    ae86:	bl	16b70 <__btrfs_error@@Base>
    ae8a:	movs	r5, #0
    ae8c:	mov	r0, r6
    ae8e:	blx	8434 <free@plt+0x4>
    ae92:	mov	r0, r5
    ae94:	blx	8434 <free@plt+0x4>
    ae98:	cmp	r7, #0
    ae9a:	blt.n	aea4 <list_sort@@Base+0x190>
    ae9c:	ldr	r1, [sp, #16]
    ae9e:	mov	r0, r7
    aea0:	bl	30458 <close_file_or_dir@@Base>
    aea4:	ldr	r2, [pc, #304]	; (afd8 <list_sort@@Base+0x2c4>)
    aea6:	ldr	r3, [pc, #292]	; (afcc <list_sort@@Base+0x2b8>)
    aea8:	add	r2, pc
    aeaa:	ldr	r3, [r2, r3]
    aeac:	ldr	r2, [r3, #0]
    aeae:	ldr	r3, [sp, #20]
    aeb0:	eors	r2, r3
    aeb2:	beq.w	afc0 <list_sort@@Base+0x2ac>
    aeb6:	blx	8510 <__stack_chk_fail@plt>
    aeba:	mov	r0, r5
    aebc:	blx	8748 <strlen@plt>
    aec0:	adds	r0, #7
    aec2:	blx	8678 <malloc@plt+0x4>
    aec6:	mov	r6, r0
    aec8:	cmp	r0, #0
    aeca:	beq.n	afb4 <list_sort@@Base+0x2a0>
    aecc:	ldr	r3, [pc, #268]	; (afdc <list_sort@@Base+0x2c8>)
    aece:	add	r3, pc
    aed0:	ldr	r0, [r3, #0]
    aed2:	ldrh	r3, [r3, #4]
    aed4:	str	r0, [r6, #0]
    aed6:	mov	r0, r5
    aed8:	strh	r3, [r6, #4]
    aeda:	blx	8748 <strlen@plt>
    aede:	mov	r1, r5
    aee0:	mov	r2, r0
    aee2:	adds	r0, r6, #6
    aee4:	blx	8480 <memcpy@plt+0x4>
    aee8:	mov	r0, r5
    aeea:	blx	8748 <strlen@plt>
    aeee:	add	r0, r6
    aef0:	strb.w	r9, [r0, #6]
    aef4:	cbz	r4, af38 <list_sort@@Base+0x224>
    aef6:	ldr	r1, [pc, #232]	; (afe0 <list_sort@@Base+0x2cc>)
    aef8:	mov	r0, r4
    aefa:	add	r1, pc
    aefc:	blx	83c0 <strcmp@plt>
    af00:	cbz	r0, af2c <list_sort@@Base+0x218>
    af02:	ldr	r1, [pc, #224]	; (afe4 <list_sort@@Base+0x2d0>)
    af04:	mov	r0, r4
    af06:	add	r1, pc
    af08:	blx	83c0 <strcmp@plt>
    af0c:	cbz	r0, af32 <list_sort@@Base+0x21e>
    af0e:	mov	r0, r4
    af10:	movs	r5, #0
    af12:	blx	8748 <strlen@plt>
    af16:	mov	r2, r4
    af18:	mov	r1, r6
    af1a:	str	r5, [sp, #0]
    af1c:	mov	r3, r0
    af1e:	mov	r0, r7
    af20:	blx	8810 <fsetxattr@plt>
    af24:	cmp	r0, r5
    af26:	blt.n	af48 <list_sort@@Base+0x234>
    af28:	mov	r4, r5
    af2a:	b.n	ae8c <list_sort@@Base+0x178>
    af2c:	ldr	r4, [pc, #184]	; (afe8 <list_sort@@Base+0x2d4>)
    af2e:	add	r4, pc
    af30:	b.n	af0e <list_sort@@Base+0x1fa>
    af32:	ldr	r4, [pc, #184]	; (afec <list_sort@@Base+0x2d8>)
    af34:	add	r4, pc
    af36:	b.n	af0e <list_sort@@Base+0x1fa>
    af38:	mov	r3, r4
    af3a:	mov	r2, r4
    af3c:	mov	r1, r6
    af3e:	mov	r0, r7
    af40:	blx	844c <fgetxattr@plt>
    af44:	subs	r3, r0, #0
    af46:	bge.n	af6c <list_sort@@Base+0x258>
    af48:	blx	8784 <__errno_location@plt>
    af4c:	ldr	r3, [r0, #0]
    af4e:	cmp	r3, #61	; 0x3d
    af50:	beq.n	afbc <list_sort@@Base+0x2a8>
    af52:	cbnz	r4, af66 <list_sort@@Base+0x252>
    af54:	ldr	r1, [pc, #152]	; (aff0 <list_sort@@Base+0x2dc>)
    af56:	add	r1, pc
    af58:	ldr	r0, [pc, #152]	; (aff4 <list_sort@@Base+0x2e0>)
    af5a:	mov	r2, r8
    af5c:	negs	r4, r3
    af5e:	add	r0, pc
    af60:	bl	16b70 <__btrfs_error@@Base>
    af64:	b.n	ae8a <list_sort@@Base+0x176>
    af66:	ldr	r1, [pc, #144]	; (aff8 <list_sort@@Base+0x2e4>)
    af68:	add	r1, pc
    af6a:	b.n	af58 <list_sort@@Base+0x244>
    af6c:	str	r3, [sp, #12]
    af6e:	blx	8678 <malloc@plt+0x4>
    af72:	mov	r5, r0
    af74:	cbz	r0, afb6 <list_sort@@Base+0x2a2>
    af76:	ldr	r3, [sp, #12]
    af78:	mov	r2, r0
    af7a:	mov	r1, r6
    af7c:	mov	r0, r7
    af7e:	blx	844c <fgetxattr@plt>
    af82:	ldr	r3, [sp, #12]
    af84:	cmp	r0, #0
    af86:	bge.n	af9c <list_sort@@Base+0x288>
    af88:	blx	8784 <__errno_location@plt>
    af8c:	mov	r1, r8
    af8e:	ldr	r4, [r0, #0]
    af90:	ldr	r0, [pc, #104]	; (affc <list_sort@@Base+0x2e8>)
    af92:	negs	r4, r4
    af94:	add	r0, pc
    af96:	bl	16b70 <__btrfs_error@@Base>
    af9a:	b.n	ae8c <list_sort@@Base+0x178>
    af9c:	ldr	r2, [pc, #96]	; (b000 <list_sort@@Base+0x2ec>)
    af9e:	movs	r1, #1
    afa0:	ldr.w	r2, [sl, r2]
    afa4:	str	r5, [sp, #0]
    afa6:	mov	r0, r2
    afa8:	ldr	r2, [pc, #88]	; (b004 <list_sort@@Base+0x2f0>)
    afaa:	ldr	r0, [r0, #0]
    afac:	add	r2, pc
    afae:	blx	8860 <__fprintf_chk@plt+0x4>
    afb2:	b.n	ae8c <list_sort@@Base+0x178>
    afb4:	mov	r5, r0
    afb6:	mvn.w	r4, #11
    afba:	b.n	ae8c <list_sort@@Base+0x178>
    afbc:	movs	r5, #0
    afbe:	b.n	af28 <list_sort@@Base+0x214>
    afc0:	mov	r0, r4
    afc2:	add	sp, #24
    afc4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    afc8:	ldrh	r6, [r7, #56]	; 0x38
    afca:	movs	r5, r0
    afcc:	lsls	r0, r4, #8
    afce:	movs	r0, r0
    afd0:	ldrh	r6, [r2, #56]	; 0x38
    afd2:	movs	r5, r0
    afd4:	b.n	aa0a <btrfs_show_qgroups@@Base+0x582>
    afd6:	movs	r2, r0
    afd8:	ldrh	r4, [r3, #54]	; 0x36
    afda:	movs	r5, r0
    afdc:	b.n	a9aa <btrfs_show_qgroups@@Base+0x522>
    afde:	movs	r2, r0
    afe0:	b.n	a964 <btrfs_show_qgroups@@Base+0x4dc>
    afe2:	movs	r2, r0
    afe4:	strb.w	r0, [fp, r2]
    afe8:	b.n	adaa <list_sort@@Base+0x96>
    afea:	movs	r2, r0
    afec:	b.n	ada2 <list_sort@@Base+0x8e>
    afee:	movs	r2, r0
    aff0:	b.n	a87a <btrfs_show_qgroups@@Base+0x3f2>
    aff2:	movs	r2, r0
    aff4:	b.n	a8b6 <btrfs_show_qgroups@@Base+0x42e>
    aff6:	movs	r2, r0
    aff8:	subs	r3, #204	; 0xcc
    affa:	movs	r3, r0
    affc:	b.n	a89a <btrfs_show_qgroups@@Base+0x412>
    affe:	movs	r2, r0
    b000:	lsls	r4, r2, #9
    b002:	movs	r0, r0
    b004:	b.n	a8bc <btrfs_show_qgroups@@Base+0x434>
    b006:	movs	r2, r0
    b008:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    b00a:	mov	r5, r1
    b00c:	ldr	r1, [pc, #268]	; (b11c <list_sort@@Base+0x408>)
    b00e:	mov	r4, r3
    b010:	ldr	r2, [pc, #268]	; (b120 <list_sort@@Base+0x40c>)
    b012:	add	r1, pc
    b014:	ldr	r2, [r1, r2]
    b016:	ldr	r2, [r2, #0]
    b018:	str	r2, [sp, #12]
    b01a:	mov.w	r2, #0
    b01e:	cmp	r3, #0
    b020:	beq.n	b0b2 <list_sort@@Base+0x39e>
    b022:	ldr	r1, [pc, #256]	; (b124 <list_sort@@Base+0x410>)
    b024:	mov	r0, r3
    b026:	add	r1, pc
    b028:	blx	83c0 <strcmp@plt>
    b02c:	cbnz	r0, b074 <list_sort@@Base+0x360>
    b02e:	movs	r3, #1
    b030:	strb.w	r3, [sp, #11]
    b034:	ldrb.w	r1, [sp, #11]
    b038:	mov	r0, r5
    b03a:	bl	32260 <btrfs_util_set_subvolume_read_only@@Base>
    b03e:	mov	r4, r0
    b040:	cbz	r0, b094 <list_sort@@Base+0x380>
    b042:	blx	8784 <__errno_location@plt>
    b046:	mov	r5, r0
    b048:	ldr	r0, [r0, #0]
    b04a:	blx	8690 <strerror@plt>
    b04e:	mov	r6, r0
    b050:	mov	r0, r4
    b052:	bl	38400 <btrfs_util_strerror@@Base>
    b056:	mov	r1, r0
    b058:	cbz	r0, b0a8 <list_sort@@Base+0x394>
    b05a:	str	r0, [sp, #4]
    b05c:	mov	r0, r6
    b05e:	blx	83c0 <strcmp@plt>
    b062:	ldr	r1, [sp, #4]
    b064:	cbz	r0, b0a8 <list_sort@@Base+0x394>
    b066:	ldr	r0, [pc, #192]	; (b128 <list_sort@@Base+0x414>)
    b068:	add	r0, pc
    b06a:	bl	16b70 <__btrfs_error@@Base>
    b06e:	ldr	r0, [r5, #0]
    b070:	negs	r0, r0
    b072:	b.n	b094 <list_sort@@Base+0x380>
    b074:	ldr	r1, [pc, #180]	; (b12c <list_sort@@Base+0x418>)
    b076:	mov	r0, r4
    b078:	add	r1, pc
    b07a:	blx	83c0 <strcmp@plt>
    b07e:	cbnz	r0, b086 <list_sort@@Base+0x372>
    b080:	strb.w	r0, [sp, #11]
    b084:	b.n	b034 <list_sort@@Base+0x320>
    b086:	ldr	r0, [pc, #168]	; (b130 <list_sort@@Base+0x41c>)
    b088:	mov	r1, r4
    b08a:	add	r0, pc
    b08c:	bl	16b70 <__btrfs_error@@Base>
    b090:	mvn.w	r0, #21
    b094:	ldr	r2, [pc, #156]	; (b134 <list_sort@@Base+0x420>)
    b096:	ldr	r3, [pc, #136]	; (b120 <list_sort@@Base+0x40c>)
    b098:	add	r2, pc
    b09a:	ldr	r3, [r2, r3]
    b09c:	ldr	r2, [r3, #0]
    b09e:	ldr	r3, [sp, #12]
    b0a0:	eors	r2, r3
    b0a2:	beq.n	b118 <list_sort@@Base+0x404>
    b0a4:	blx	8510 <__stack_chk_fail@plt>
    b0a8:	ldr	r0, [pc, #140]	; (b138 <list_sort@@Base+0x424>)
    b0aa:	add	r0, pc
    b0ac:	bl	16b70 <__btrfs_error@@Base>
    b0b0:	b.n	b06e <list_sort@@Base+0x35a>
    b0b2:	mov	r0, r5
    b0b4:	add.w	r1, sp, #11
    b0b8:	bl	321b4 <btrfs_util_get_subvolume_read_only@@Base>
    b0bc:	mov	r5, r0
    b0be:	cbz	r0, b0fa <list_sort@@Base+0x3e6>
    b0c0:	blx	8784 <__errno_location@plt>
    b0c4:	mov	r4, r0
    b0c6:	ldr	r0, [r0, #0]
    b0c8:	blx	8690 <strerror@plt>
    b0cc:	mov	r6, r0
    b0ce:	mov	r0, r5
    b0d0:	bl	38400 <btrfs_util_strerror@@Base>
    b0d4:	mov	r1, r0
    b0d6:	cbz	r0, b0f0 <list_sort@@Base+0x3dc>
    b0d8:	str	r0, [sp, #4]
    b0da:	mov	r0, r6
    b0dc:	blx	83c0 <strcmp@plt>
    b0e0:	ldr	r1, [sp, #4]
    b0e2:	cbz	r0, b0f0 <list_sort@@Base+0x3dc>
    b0e4:	ldr	r0, [pc, #84]	; (b13c <list_sort@@Base+0x428>)
    b0e6:	add	r0, pc
    b0e8:	bl	16b70 <__btrfs_error@@Base>
    b0ec:	ldr	r0, [r4, #0]
    b0ee:	b.n	b070 <list_sort@@Base+0x35c>
    b0f0:	ldr	r0, [pc, #76]	; (b140 <list_sort@@Base+0x42c>)
    b0f2:	add	r0, pc
    b0f4:	bl	16b70 <__btrfs_error@@Base>
    b0f8:	b.n	b0ec <list_sort@@Base+0x3d8>
    b0fa:	ldrb.w	r3, [sp, #11]
    b0fe:	cbnz	r3, b112 <list_sort@@Base+0x3fe>
    b100:	ldr	r2, [pc, #64]	; (b144 <list_sort@@Base+0x430>)
    b102:	add	r2, pc
    b104:	ldr	r1, [pc, #64]	; (b148 <list_sort@@Base+0x434>)
    b106:	movs	r0, #1
    b108:	add	r1, pc
    b10a:	blx	8838 <__printf_chk@plt+0x4>
    b10e:	movs	r0, #0
    b110:	b.n	b094 <list_sort@@Base+0x380>
    b112:	ldr	r2, [pc, #56]	; (b14c <list_sort@@Base+0x438>)
    b114:	add	r2, pc
    b116:	b.n	b104 <list_sort@@Base+0x3f0>
    b118:	add	sp, #16
    b11a:	pop	{r4, r5, r6, pc}
    b11c:	ldrh	r2, [r6, #42]	; 0x2a
    b11e:	movs	r5, r0
    b120:	lsls	r0, r4, #8
    b122:	movs	r0, r0
    b124:	b.n	b90c <ulist_next@@Base+0x4a4>
    b126:	movs	r2, r0
    b128:	ldrb	r3, [r5, #2]
    b12a:	movs	r4, r0
    b12c:	b.n	b87a <ulist_next@@Base+0x412>
    b12e:	movs	r2, r0
    b130:	b.n	b866 <ulist_next@@Base+0x3fe>
    b132:	movs	r2, r0
    b134:	ldrh	r4, [r5, #38]	; 0x26
    b136:	movs	r5, r0
    b138:	eors	r7, r5
    b13a:	movs	r3, r0
    b13c:	ldrb	r5, [r5, #0]
    b13e:	movs	r4, r0
    b140:	ands	r7, r4
    b142:	movs	r3, r0
    b144:	b.n	b77e <ulist_next@@Base+0x316>
    b146:	movs	r2, r0
    b148:	b.n	b7c0 <ulist_next@@Base+0x358>
    b14a:	movs	r2, r0
    b14c:	b.n	b758 <ulist_next@@Base+0x2f0>
    b14e:	movs	r2, r0
    b150:	mov	r0, r1
    b152:	ldr	r1, [pc, #96]	; (b1b4 <list_sort@@Base+0x4a0>)
    b154:	ldr	r2, [pc, #96]	; (b1b8 <list_sort@@Base+0x4a4>)
    b156:	add	r1, pc
    b158:	push	{r4, r5, lr}
    b15a:	sub	sp, #276	; 0x114
    b15c:	ldr	r2, [r1, r2]
    b15e:	mov	r1, r3
    b160:	ldr	r5, [pc, #88]	; (b1bc <list_sort@@Base+0x4a8>)
    b162:	ldr	r2, [r2, #0]
    b164:	str	r2, [sp, #268]	; 0x10c
    b166:	mov.w	r2, #0
    b16a:	add	r5, pc
    b16c:	cbz	r3, b188 <list_sort@@Base+0x474>
    b16e:	bl	2fd8a <set_label@@Base>
    b172:	mov	r4, r0
    b174:	ldr	r2, [pc, #72]	; (b1c0 <list_sort@@Base+0x4ac>)
    b176:	ldr	r3, [pc, #64]	; (b1b8 <list_sort@@Base+0x4a4>)
    b178:	add	r2, pc
    b17a:	ldr	r3, [r2, r3]
    b17c:	ldr	r2, [r3, #0]
    b17e:	ldr	r3, [sp, #268]	; 0x10c
    b180:	eors	r2, r3
    b182:	beq.n	b1ac <list_sort@@Base+0x498>
    b184:	blx	8510 <__stack_chk_fail@plt>
    b188:	add	r3, sp, #12
    b18a:	str	r3, [sp, #4]
    b18c:	mov	r1, r3
    b18e:	bl	2fd5c <get_label@@Base>
    b192:	ldr	r3, [sp, #4]
    b194:	mov	r4, r0
    b196:	cmp	r0, #0
    b198:	bne.n	b174 <list_sort@@Base+0x460>
    b19a:	ldr	r2, [pc, #40]	; (b1c4 <list_sort@@Base+0x4b0>)
    b19c:	movs	r1, #1
    b19e:	ldr	r0, [r5, r2]
    b1a0:	ldr	r2, [pc, #36]	; (b1c8 <list_sort@@Base+0x4b4>)
    b1a2:	ldr	r0, [r0, #0]
    b1a4:	add	r2, pc
    b1a6:	blx	8860 <__fprintf_chk@plt+0x4>
    b1aa:	b.n	b174 <list_sort@@Base+0x460>
    b1ac:	mov	r0, r4
    b1ae:	add	sp, #276	; 0x114
    b1b0:	pop	{r4, r5, pc}
    b1b2:	nop
    b1b4:	ldrh	r6, [r5, #32]
    b1b6:	movs	r5, r0
    b1b8:	lsls	r0, r4, #8
    b1ba:	movs	r0, r0
    b1bc:	ldrh	r2, [r3, #32]
    b1be:	movs	r5, r0
    b1c0:	ldrh	r4, [r1, #32]
    b1c2:	movs	r5, r0
    b1c4:	lsls	r4, r2, #9
    b1c6:	movs	r0, r0
    b1c8:	b.n	b716 <ulist_next@@Base+0x2ae>
    b1ca:	movs	r2, r0
    b1cc:	ldr	r2, [pc, #60]	; (b20c <list_sort@@Base+0x4f8>)
    b1ce:	movs	r1, #16
    b1d0:	ldr	r3, [pc, #60]	; (b210 <list_sort@@Base+0x4fc>)
    b1d2:	push	{r4, lr}
    b1d4:	add	r2, pc
    b1d6:	sub	sp, #72	; 0x48
    b1d8:	add	r4, sp, #4
    b1da:	ldr	r3, [r2, r3]
    b1dc:	mov	r0, r4
    b1de:	ldr	r3, [r3, #0]
    b1e0:	str	r3, [sp, #68]	; 0x44
    b1e2:	mov.w	r3, #0
    b1e6:	blx	86c4 <backtrace@plt>
    b1ea:	movs	r2, #2
    b1ec:	mov	r1, r0
    b1ee:	mov	r0, r4
    b1f0:	blx	89c8 <backtrace_symbols_fd@plt>
    b1f4:	ldr	r2, [pc, #28]	; (b214 <list_sort@@Base+0x500>)
    b1f6:	ldr	r3, [pc, #24]	; (b210 <list_sort@@Base+0x4fc>)
    b1f8:	add	r2, pc
    b1fa:	ldr	r3, [r2, r3]
    b1fc:	ldr	r2, [r3, #0]
    b1fe:	ldr	r3, [sp, #68]	; 0x44
    b200:	eors	r2, r3
    b202:	beq.n	b208 <list_sort@@Base+0x4f4>
    b204:	blx	8510 <__stack_chk_fail@plt>
    b208:	add	sp, #72	; 0x48
    b20a:	pop	{r4, pc}
    b20c:	ldrh	r0, [r6, #28]
    b20e:	movs	r5, r0
    b210:	lsls	r0, r4, #8
    b212:	movs	r0, r0
    b214:	ldrh	r4, [r1, #28]
    b216:	movs	r5, r0

0000b218 <ulist_init@@Base>:
    b218:	adds	r3, r0, #4
    b21a:	strd	r3, r3, [r0, #4]
    b21e:	movs	r3, #0
    b220:	str	r3, [r0, #12]
    b222:	str	r3, [r0, #0]
    b224:	bx	lr

0000b226 <ulist_release@@Base>:
    b226:	push	{r4, r5, r6, lr}
    b228:	mov	r5, r0
    b22a:	mov	r4, r0
    b22c:	ldr.w	r0, [r5, #4]!
    b230:	ldr.w	r6, [r0], #-16
    b234:	subs	r6, #16
    b236:	add.w	r3, r0, #16
    b23a:	cmp	r5, r3
    b23c:	bne.n	b248 <ulist_release@@Base+0x22>
    b23e:	movs	r3, #0
    b240:	strd	r5, r5, [r4, #4]
    b244:	str	r3, [r4, #12]
    b246:	pop	{r4, r5, r6, pc}
    b248:	blx	8434 <free@plt+0x4>
    b24c:	ldr	r3, [r6, #16]
    b24e:	mov	r0, r6
    b250:	sub.w	r6, r3, #16
    b254:	b.n	b236 <ulist_release@@Base+0x10>

0000b256 <ulist_reinit@@Base>:
    b256:	push	{r4, lr}
    b258:	mov	r4, r0
    b25a:	bl	b226 <ulist_release@@Base>
    b25e:	mov	r0, r4
    b260:	ldmia.w	sp!, {r4, lr}
    b264:	b.w	b218 <ulist_init@@Base>

0000b268 <ulist_alloc@@Base>:
    b268:	push	{r4, lr}
    b26a:	movs	r0, #16
    b26c:	blx	8678 <malloc@plt+0x4>
    b270:	mov	r4, r0
    b272:	cbz	r0, b278 <ulist_alloc@@Base+0x10>
    b274:	bl	b218 <ulist_init@@Base>
    b278:	mov	r0, r4
    b27a:	pop	{r4, pc}

0000b27c <ulist_free@@Base>:
    b27c:	push	{r4, lr}
    b27e:	mov	r4, r0
    b280:	cbz	r0, b290 <ulist_free@@Base+0x14>
    b282:	bl	b226 <ulist_release@@Base>
    b286:	mov	r0, r4
    b288:	ldmia.w	sp!, {r4, lr}
    b28c:	b.w	8430 <free@plt>
    b290:	pop	{r4, pc}

0000b292 <ulist_add_merge@@Base>:
    b292:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    b296:	sub	sp, #20
    b298:	mov	r6, r0
    b29a:	ldr	r7, [pc, #220]	; (b378 <ulist_add_merge@@Base+0xe6>)
    b29c:	ldr	r0, [sp, #56]	; 0x38
    b29e:	mov	r8, r2
    b2a0:	ldr	r5, [r6, #12]
    b2a2:	mov	r9, r3
    b2a4:	add	r7, pc
    b2a6:	cbnz	r5, b2b8 <ulist_add_merge@@Base+0x26>
    b2a8:	movs	r0, #40	; 0x28
    b2aa:	blx	8678 <malloc@plt+0x4>
    b2ae:	mov	r4, r0
    b2b0:	cbnz	r0, b2d4 <ulist_add_merge@@Base+0x42>
    b2b2:	mvn.w	r0, #11
    b2b6:	b.n	b372 <ulist_add_merge@@Base+0xe0>
    b2b8:	ldrd	r2, r3, [r5, #-24]
    b2bc:	cmp	r3, r9
    b2be:	it	eq
    b2c0:	cmpeq	r2, r8
    b2c2:	bcs.n	b2c8 <ulist_add_merge@@Base+0x36>
    b2c4:	ldr	r5, [r5, #4]
    b2c6:	b.n	b2a6 <ulist_add_merge@@Base+0x14>
    b2c8:	cmp	r9, r3
    b2ca:	it	eq
    b2cc:	cmpeq	r8, r2
    b2ce:	bcs.n	b366 <ulist_add_merge@@Base+0xd4>
    b2d0:	ldr	r5, [r5, #8]
    b2d2:	b.n	b2a6 <ulist_add_merge@@Base+0x14>
    b2d4:	ldrd	r2, r3, [sp, #48]	; 0x30
    b2d8:	add.w	ip, r6, #12
    b2dc:	strd	r8, r9, [r4]
    b2e0:	strd	r2, r3, [r4, #8]
    b2e4:	mov	r2, ip
    b2e6:	ldr	r3, [r2, #0]
    b2e8:	cbnz	r3, b316 <ulist_add_merge@@Base+0x84>
    b2ea:	add.w	r0, r4, #24
    b2ee:	strd	r5, r3, [r4, #24]
    b2f2:	str	r3, [r4, #32]
    b2f4:	mov	r1, ip
    b2f6:	str	r0, [r2, #0]
    b2f8:	bl	1321e <rb_insert_color@@Base>
    b2fc:	ldr	r3, [r6, #8]
    b2fe:	add.w	r2, r4, #16
    b302:	adds	r1, r6, #4
    b304:	str	r2, [r6, #8]
    b306:	movs	r0, #1
    b308:	strd	r1, r3, [r4, #16]
    b30c:	str	r2, [r3, #0]
    b30e:	ldr	r3, [r6, #0]
    b310:	adds	r3, #1
    b312:	str	r3, [r6, #0]
    b314:	b.n	b372 <ulist_add_merge@@Base+0xe0>
    b316:	ldrd	r0, r1, [r3, #-24]
    b31a:	cmp	r1, r9
    b31c:	it	eq
    b31e:	cmpeq	r0, r8
    b320:	bcs.n	b328 <ulist_add_merge@@Base+0x96>
    b322:	adds	r2, r3, #4
    b324:	mov	r5, r3
    b326:	b.n	b2e6 <ulist_add_merge@@Base+0x54>
    b328:	cmp	r9, r1
    b32a:	it	eq
    b32c:	cmpeq	r8, r0
    b32e:	bcs.n	b336 <ulist_add_merge@@Base+0xa4>
    b330:	add.w	r2, r3, #8
    b334:	b.n	b324 <ulist_add_merge@@Base+0x92>
    b336:	ldr	r3, [pc, #68]	; (b37c <ulist_add_merge@@Base+0xea>)
    b338:	movs	r1, #1
    b33a:	ldr	r2, [pc, #68]	; (b380 <ulist_add_merge@@Base+0xee>)
    b33c:	ldr	r0, [r7, r3]
    b33e:	movs	r3, #0
    b340:	str	r3, [sp, #12]
    b342:	add	r2, pc
    b344:	ldr	r3, [pc, #60]	; (b384 <ulist_add_merge@@Base+0xf2>)
    b346:	add	r3, pc
    b348:	str	r3, [sp, #8]
    b34a:	ldr	r3, [pc, #60]	; (b388 <ulist_add_merge@@Base+0xf6>)
    b34c:	add	r3, pc
    b34e:	str	r3, [sp, #4]
    b350:	movs	r3, #211	; 0xd3
    b352:	str	r3, [sp, #0]
    b354:	ldr	r3, [pc, #52]	; (b38c <ulist_add_merge@@Base+0xfa>)
    b356:	ldr	r0, [r0, #0]
    b358:	add	r3, pc
    b35a:	blx	8860 <__fprintf_chk@plt+0x4>
    b35e:	bl	b1cc <list_sort@@Base+0x4b8>
    b362:	blx	8980 <abort@plt>
    b366:	cbz	r0, b372 <ulist_add_merge@@Base+0xe0>
    b368:	ldrd	r2, r3, [r5, #-16]
    b36c:	strd	r2, r3, [r0]
    b370:	movs	r0, #0
    b372:	add	sp, #20
    b374:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    b378:	ldrh	r0, [r4, #22]
    b37a:	movs	r5, r0
    b37c:	lsls	r0, r6, #8
    b37e:	movs	r0, r0
    b380:	bgt.n	b29e <ulist_add_merge@@Base+0xc>
    b382:	movs	r2, r0
    b384:	b.n	b6c2 <ulist_next@@Base+0x25a>
    b386:	movs	r2, r0
    b388:	b.n	b6ea <ulist_next@@Base+0x282>
    b38a:	movs	r2, r0
    b38c:	b.n	b67a <ulist_next@@Base+0x212>
    b38e:	movs	r2, r0

0000b390 <ulist_add@@Base>:
    b390:	push	{r4, r5, lr}
    b392:	sub	sp, #20
    b394:	ldr	r1, [sp, #40]	; 0x28
    b396:	ldrd	r4, r5, [sp, #32]
    b39a:	str	r1, [sp, #12]
    b39c:	movs	r1, #0
    b39e:	strd	r4, r5, [sp]
    b3a2:	str	r1, [sp, #8]
    b3a4:	bl	b292 <ulist_add_merge@@Base>
    b3a8:	add	sp, #20
    b3aa:	pop	{r4, r5, pc}

0000b3ac <ulist_del@@Base>:
    b3ac:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
    b3b0:	mov	r5, r0
    b3b2:	ldr	r4, [r5, #12]
    b3b4:	mov	r0, r2
    b3b6:	ldr.w	r8, [pc, #152]	; b450 <ulist_del@@Base+0xa4>
    b3ba:	mov	r1, r3
    b3bc:	add	r8, pc
    b3be:	cbnz	r4, b3c4 <ulist_del@@Base+0x18>
    b3c0:	movs	r0, #1
    b3c2:	b.n	b3e6 <ulist_del@@Base+0x3a>
    b3c4:	ldrd	r2, r3, [r4, #-24]
    b3c8:	cmp	r3, r1
    b3ca:	it	eq
    b3cc:	cmpeq	r2, r0
    b3ce:	bcs.n	b3d4 <ulist_del@@Base+0x28>
    b3d0:	ldr	r4, [r4, #4]
    b3d2:	b.n	b3be <ulist_del@@Base+0x12>
    b3d4:	cmp	r1, r3
    b3d6:	it	eq
    b3d8:	cmpeq	r0, r2
    b3da:	bcs.n	b3ec <ulist_del@@Base+0x40>
    b3dc:	ldr	r4, [r4, #8]
    b3de:	b.n	b3be <ulist_del@@Base+0x12>
    b3e0:	movs	r0, #0
    b3e2:	subs	r3, #1
    b3e4:	str	r3, [r5, #0]
    b3e6:	add	sp, #16
    b3e8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    b3ec:	ldrd	r6, r7, [r4, #-16]
    b3f0:	ldrd	r2, r3, [sp, #40]	; 0x28
    b3f4:	cmp	r7, r3
    b3f6:	it	eq
    b3f8:	cmpeq	r6, r2
    b3fa:	bne.n	b3c0 <ulist_del@@Base+0x14>
    b3fc:	add.w	r1, r5, #12
    b400:	mov	r0, r4
    b402:	bl	132c4 <rb_erase@@Base>
    b406:	ldrd	r2, r3, [r4, #-8]
    b40a:	sub.w	r6, r4, #24
    b40e:	str	r3, [r2, #4]
    b410:	mov	r0, r6
    b412:	str	r2, [r3, #0]
    b414:	blx	8434 <free@plt+0x4>
    b418:	ldr	r3, [r5, #0]
    b41a:	cmp	r3, #0
    b41c:	bne.n	b3e0 <ulist_del@@Base+0x34>
    b41e:	ldr	r3, [pc, #52]	; (b454 <ulist_del@@Base+0xa8>)
    b420:	movs	r1, #1
    b422:	ldr	r2, [pc, #52]	; (b458 <ulist_del@@Base+0xac>)
    b424:	ldr.w	r0, [r8, r3]
    b428:	add	r2, pc
    b42a:	ldr	r3, [pc, #48]	; (b45c <ulist_del@@Base+0xb0>)
    b42c:	str	r1, [sp, #12]
    b42e:	add	r3, pc
    b430:	str	r3, [sp, #8]
    b432:	ldr	r3, [pc, #44]	; (b460 <ulist_del@@Base+0xb4>)
    b434:	add	r3, pc
    b436:	adds	r3, #16
    b438:	str	r3, [sp, #4]
    b43a:	movs	r3, #140	; 0x8c
    b43c:	str	r3, [sp, #0]
    b43e:	ldr	r3, [pc, #36]	; (b464 <ulist_del@@Base+0xb8>)
    b440:	ldr	r0, [r0, #0]
    b442:	add	r3, pc
    b444:	blx	8860 <__fprintf_chk@plt+0x4>
    b448:	bl	b1cc <list_sort@@Base+0x4b8>
    b44c:	blx	8980 <abort@plt>
    b450:	ldrh	r0, [r1, #14]
    b452:	movs	r5, r0
    b454:	lsls	r0, r6, #8
    b456:	movs	r0, r0
    b458:	bge.n	b550 <ulist_next@@Base+0xe8>
    b45a:	movs	r2, r0
    b45c:	b.n	b5d4 <ulist_next@@Base+0x16c>
    b45e:	movs	r2, r0
    b460:	b.n	b5f2 <ulist_next@@Base+0x18a>
    b462:	movs	r2, r0
    b464:	b.n	b57e <ulist_next@@Base+0x116>
    b466:	movs	r2, r0

0000b468 <ulist_next@@Base>:
    b468:	ldr	r3, [r0, #4]
    b46a:	adds	r2, r0, #4
    b46c:	cmp	r2, r3
    b46e:	beq.n	b482 <ulist_next@@Base+0x1a>
    b470:	ldr	r0, [r1, #0]
    b472:	cbz	r0, b47a <ulist_next@@Base+0x12>
    b474:	ldr	r3, [r0, #0]
    b476:	cmp	r2, r3
    b478:	beq.n	b482 <ulist_next@@Base+0x1a>
    b47a:	str	r3, [r1, #0]
    b47c:	ldr	r0, [r1, #0]
    b47e:	subs	r0, #16
    b480:	bx	lr
    b482:	movs	r0, #0
    b484:	bx	lr
    b486:	nop
    b488:	ldrd	r2, r3, [r0]
    b48c:	str	r3, [r2, #4]
    b48e:	str	r2, [r3, #0]
    b490:	ldr	r2, [pc, #8]	; (b49c <ulist_next@@Base+0x34>)
    b492:	ldr	r3, [pc, #12]	; (b4a0 <ulist_next@@Base+0x38>)
    b494:	strd	r2, r3, [r0]
    b498:	bx	lr
    b49a:	nop
    b49c:	lsls	r0, r0, #4
    b49e:	movs	r0, r2
    b4a0:	lsls	r0, r0, #8
    b4a2:	movs	r0, r4
    b4a4:	mov	r3, r1
    b4a6:	ldr	r1, [pc, #44]	; (b4d4 <ulist_next@@Base+0x6c>)
    b4a8:	mov	r2, r0
    b4aa:	add	r1, pc
    b4ac:	push	{r4, r5, lr}
    b4ae:	ldr	r0, [r1, #0]
    b4b0:	cbz	r0, b4cc <ulist_next@@Base+0x64>
    b4b2:	ldrd	r4, r5, [r0, #-96]	; 0x60
    b4b6:	cmp	r3, r5
    b4b8:	it	eq
    b4ba:	cmpeq	r2, r4
    b4bc:	bcs.n	b4c2 <ulist_next@@Base+0x5a>
    b4be:	ldr	r0, [r0, #8]
    b4c0:	b.n	b4b0 <ulist_next@@Base+0x48>
    b4c2:	cmp	r5, r3
    b4c4:	it	eq
    b4c6:	cmpeq	r4, r2
    b4c8:	bcc.n	b4ce <ulist_next@@Base+0x66>
    b4ca:	subs	r0, #96	; 0x60
    b4cc:	pop	{r4, r5, pc}
    b4ce:	ldr	r0, [r0, #4]
    b4d0:	b.n	b4b0 <ulist_next@@Base+0x48>
    b4d2:	nop
    b4d4:	ldr	r5, [sp, #744]	; 0x2e8
    b4d6:	movs	r5, r0
    b4d8:	subs	r0, #32
    b4da:	b.w	8430 <free@plt>
    b4de:	ldr	r3, [pc, #92]	; (b53c <ulist_next@@Base+0xd4>)
    b4e0:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    b4e4:	add	r3, pc
    b4e6:	mov	r4, r0
    b4e8:	mov	r5, r1
    b4ea:	ldr	r3, [r3, #24]
    b4ec:	cbz	r3, b518 <ulist_next@@Base+0xb0>
    b4ee:	ldrd	r0, r1, [r3, #-32]
    b4f2:	cmp	r5, r1
    b4f4:	it	eq
    b4f6:	cmpeq	r4, r0
    b4f8:	bcs.n	b4fe <ulist_next@@Base+0x96>
    b4fa:	ldr	r3, [r3, #8]
    b4fc:	b.n	b4ec <ulist_next@@Base+0x84>
    b4fe:	cmp	r1, r5
    b500:	it	eq
    b502:	cmpeq	r0, r4
    b504:	bcs.n	b50a <ulist_next@@Base+0xa2>
    b506:	ldr	r3, [r3, #4]
    b508:	b.n	b4ec <ulist_next@@Base+0x84>
    b50a:	sub.w	r4, r3, #32
    b50e:	mov	r0, r3
    b510:	bl	13586 <rb_prev@@Base>
    b514:	mov	r3, r4
    b516:	cbnz	r0, b51e <ulist_next@@Base+0xb6>
    b518:	mov	r0, r3
    b51a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    b51e:	ldrd	r6, r7, [r0, #-32]
    b522:	sub.w	r8, r0, #32
    b526:	ldrd	r4, r5, [r3]
    b52a:	cmp	r7, r5
    b52c:	it	eq
    b52e:	cmpeq	r6, r4
    b530:	bne.n	b518 <ulist_next@@Base+0xb0>
    b532:	bl	13586 <rb_prev@@Base>
    b536:	mov	r3, r8
    b538:	b.n	b516 <ulist_next@@Base+0xae>
    b53a:	nop
    b53c:	ldr	r5, [sp, #512]	; 0x200
    b53e:	movs	r5, r0
    b540:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b544:	mov	r1, r3
    b546:	sub	sp, #28
    b548:	mov	r5, r0
    b54a:	mov	r0, r2
    b54c:	mov	r6, r2
    b54e:	mov	r7, r3
    b550:	bl	b4de <ulist_next@@Base+0x76>
    b554:	cbnz	r0, b564 <ulist_next@@Base+0xfc>
    b556:	ldr	r0, [pc, #208]	; (b628 <ulist_next@@Base+0x1c0>)
    b558:	mov	r2, r6
    b55a:	mov	r3, r7
    b55c:	add	r0, pc
    b55e:	bl	16b70 <__btrfs_error@@Base>
    b562:	b.n	b582 <ulist_next@@Base+0x11a>
    b564:	mov	r4, r0
    b566:	ldrd	r8, r9, [r4], #32
    b56a:	cmp	r9, r7
    b56c:	it	eq
    b56e:	cmpeq	r8, r6
    b570:	beq.n	b58c <ulist_next@@Base+0x124>
    b572:	ldr	r0, [pc, #184]	; (b62c <ulist_next@@Base+0x1c4>)
    b574:	mov	r2, r8
    b576:	mov	r3, r9
    b578:	strd	r6, r7, [sp]
    b57c:	add	r0, pc
    b57e:	bl	16b70 <__btrfs_error@@Base>
    b582:	mvn.w	r0, #4
    b586:	add	sp, #28
    b588:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b58c:	str	r0, [sp, #20]
    b58e:	mov	r0, r4
    b590:	bl	13586 <rb_prev@@Base>
    b594:	ldr	r1, [sp, #20]
    b596:	cbz	r0, b5aa <ulist_next@@Base+0x142>
    b598:	ldrd	r2, r3, [r0, #-32]
    b59c:	cmp	r3, r9
    b59e:	it	eq
    b5a0:	cmpeq	r2, r8
    b5a2:	bne.n	b5aa <ulist_next@@Base+0x142>
    b5a4:	ldr	r0, [pc, #136]	; (b630 <ulist_next@@Base+0x1c8>)
    b5a6:	add	r0, pc
    b5a8:	b.n	b55e <ulist_next@@Base+0xf6>
    b5aa:	mov.w	sl, #0
    b5ae:	mov.w	fp, #0
    b5b2:	ldrd	r2, r3, [r1, #24]
    b5b6:	orrs.w	r0, r2, r3
    b5ba:	beq.n	b5e2 <ulist_next@@Base+0x17a>
    b5bc:	cmp	r3, #0
    b5be:	it	eq
    b5c0:	cmpeq	r2, #5
    b5c2:	beq.n	b5ce <ulist_next@@Base+0x166>
    b5c4:	cmp.w	r2, #256	; 0x100
    b5c8:	sbcs.w	r1, r3, #0
    b5cc:	blt.n	b5fe <ulist_next@@Base+0x196>
    b5ce:	movs	r1, #0
    b5d0:	mov	r0, r5
    b5d2:	str	r1, [sp, #8]
    b5d4:	strd	sl, fp, [sp]
    b5d8:	bl	b390 <ulist_add@@Base>
    b5dc:	cmp	r0, #0
    b5de:	bge.n	b5fe <ulist_next@@Base+0x196>
    b5e0:	b.n	b586 <ulist_next@@Base+0x11e>
    b5e2:	ldrd	r2, r3, [r1, #16]
    b5e6:	ldrd	r8, r9, [r1]
    b5ea:	cmp	r3, r9
    b5ec:	it	eq
    b5ee:	cmpeq	r2, r8
    b5f0:	bne.n	b61e <ulist_next@@Base+0x1b6>
    b5f2:	mvn.w	r2, #7
    b5f6:	mov.w	r3, #4294967295	; 0xffffffff
    b5fa:	strd	r2, r3, [r1, #24]
    b5fe:	mov	r0, r4
    b600:	bl	1355a <rb_next@@Base>
    b604:	mov	r4, r0
    b606:	cmp	r0, #0
    b608:	beq.n	b586 <ulist_next@@Base+0x11e>
    b60a:	ldrd	r2, r3, [r0, #-32]
    b60e:	sub.w	r1, r0, #32
    b612:	cmp	r3, r7
    b614:	it	eq
    b616:	cmpeq	r2, r6
    b618:	beq.n	b5b2 <ulist_next@@Base+0x14a>
    b61a:	movs	r0, #0
    b61c:	b.n	b586 <ulist_next@@Base+0x11e>
    b61e:	mov	r0, r5
    b620:	bl	b540 <ulist_next@@Base+0xd8>
    b624:	b.n	b5dc <ulist_next@@Base+0x174>
    b626:	nop
    b628:	svc	194	; 0xc2
    b62a:	movs	r2, r0
    b62c:	svc	199	; 0xc7
    b62e:	movs	r2, r0
    b630:	svc	210	; 0xd2
    b632:	movs	r2, r0
    b634:	ldr	r2, [pc, #80]	; (b688 <ulist_next@@Base+0x220>)
    b636:	ldr	r3, [pc, #84]	; (b68c <ulist_next@@Base+0x224>)
    b638:	push	{r0, r1, r4, r5, r6, lr}
    b63a:	add	r2, pc
    b63c:	ldr	r4, [pc, #80]	; (b690 <ulist_next@@Base+0x228>)
    b63e:	ldr	r3, [r2, r3]
    b640:	add	r4, pc
    b642:	ldr	r3, [r3, #0]
    b644:	str	r3, [sp, #4]
    b646:	mov.w	r3, #0
    b64a:	ldr	r3, [r4, #28]
    b64c:	cbz	r3, b668 <ulist_next@@Base+0x200>
    b64e:	mov	r6, sp
    b650:	movs	r3, #0
    b652:	str	r3, [sp, #0]
    b654:	ldr	r0, [r4, #28]
    b656:	mov	r1, r6
    b658:	bl	b468 <ulist_next@@Base>
    b65c:	mov	r5, r0
    b65e:	cbnz	r0, b67c <ulist_next@@Base+0x214>
    b660:	ldr	r0, [r4, #28]
    b662:	bl	b27c <ulist_free@@Base>
    b666:	str	r5, [r4, #28]
    b668:	ldr	r2, [pc, #40]	; (b694 <ulist_next@@Base+0x22c>)
    b66a:	ldr	r3, [pc, #32]	; (b68c <ulist_next@@Base+0x224>)
    b66c:	add	r2, pc
    b66e:	ldr	r3, [r2, r3]
    b670:	ldr	r2, [r3, #0]
    b672:	ldr	r3, [sp, #4]
    b674:	eors	r2, r3
    b676:	beq.n	b684 <ulist_next@@Base+0x21c>
    b678:	blx	8510 <__stack_chk_fail@plt>
    b67c:	ldr	r0, [r5, #8]
    b67e:	blx	8434 <free@plt+0x4>
    b682:	b.n	b654 <ulist_next@@Base+0x1ec>
    b684:	add	sp, #8
    b686:	pop	{r4, r5, r6, pc}
    b688:	strh	r2, [r1, #58]	; 0x3a
    b68a:	movs	r5, r0
    b68c:	lsls	r0, r4, #8
    b68e:	movs	r0, r0
    b690:	ldr	r4, [sp, #144]	; 0x90
    b692:	movs	r5, r0
    b694:	strh	r0, [r3, #56]	; 0x38
    b696:	movs	r5, r0
    b698:	ldr.w	ip, [pc, #76]	; b6e8 <ulist_next@@Base+0x280>
    b69c:	ldr	r5, [pc, #76]	; (b6ec <ulist_next@@Base+0x284>)
    b69e:	add	ip, pc
    b6a0:	ldr	r4, [pc, #76]	; (b6f0 <ulist_next@@Base+0x288>)
    b6a2:	push	{lr}
    b6a4:	sub	sp, #92	; 0x5c
    b6a6:	ldr.w	r5, [ip, r5]
    b6aa:	add	r4, pc
    b6ac:	ldr	r5, [r5, #0]
    b6ae:	str	r5, [sp, #84]	; 0x54
    b6b0:	mov.w	r5, #0
    b6b4:	ldr	r5, [pc, #60]	; (b6f4 <ulist_next@@Base+0x28c>)
    b6b6:	ldr	r4, [r4, r5]
    b6b8:	ldr	r5, [sp, #96]	; 0x60
    b6ba:	strd	r3, r2, [sp]
    b6be:	mov	r3, r1
    b6c0:	ldr	r2, [pc, #52]	; (b6f8 <ulist_next@@Base+0x290>)
    b6c2:	movs	r1, #1
    b6c4:	strd	r0, r5, [sp, #8]
    b6c8:	ldr	r0, [r4, #0]
    b6ca:	add	r4, sp, #20
    b6cc:	add	r2, pc
    b6ce:	blx	8860 <__fprintf_chk@plt+0x4>
    b6d2:	movs	r1, #16
    b6d4:	mov	r0, r4
    b6d6:	blx	86c4 <backtrace@plt>
    b6da:	movs	r2, #2
    b6dc:	mov	r1, r0
    b6de:	mov	r0, r4
    b6e0:	blx	89c8 <backtrace_symbols_fd@plt>
    b6e4:	blx	8980 <abort@plt>
    b6e8:	strh	r6, [r4, #54]	; 0x36
    b6ea:	movs	r5, r0
    b6ec:	lsls	r0, r4, #8
    b6ee:	movs	r0, r0
    b6f0:	strh	r2, [r3, #54]	; 0x36
    b6f2:	movs	r5, r0
    b6f4:	lsls	r0, r6, #8
    b6f6:	movs	r0, r0
    b6f8:	bvc.n	b6a8 <ulist_next@@Base+0x240>
    b6fa:	movs	r2, r0
    b6fc:	push	{r0, r1, r2, lr}
    b6fe:	cbz	r3, b710 <ulist_next@@Base+0x2a8>
    b700:	movs	r3, #1
    b702:	str	r3, [sp, #0]
    b704:	mov	r3, r2
    b706:	mov	r2, r1
    b708:	ldr	r1, [pc, #12]	; (b718 <ulist_next@@Base+0x2b0>)
    b70a:	add	r1, pc
    b70c:	bl	b698 <ulist_next@@Base+0x230>
    b710:	add	sp, #12
    b712:	ldr.w	pc, [sp], #4
    b716:	nop
    b718:	udf	#155	; 0x9b
    b71a:	movs	r2, r0
    b71c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b720:	vpush	{d8-d9}
    b724:	sub	sp, #76	; 0x4c
    b726:	strd	r2, r3, [sp, #24]
    b72a:	ldr.w	r2, [pc, #1040]	; bb3c <ulist_next@@Base+0x6d4>
    b72e:	ldr.w	r3, [pc, #1040]	; bb40 <ulist_next@@Base+0x6d8>
    b732:	add	r2, pc
    b734:	str	r0, [sp, #52]	; 0x34
    b736:	movs	r0, #0
    b738:	ldr	r3, [r2, r3]
    b73a:	ldr	r3, [r3, #0]
    b73c:	str	r3, [sp, #68]	; 0x44
    b73e:	mov.w	r3, #0
    b742:	bl	b268 <ulist_alloc@@Base>
    b746:	mov	r4, r0
    b748:	ldr	r0, [pc, #1016]	; (bb44 <ulist_next@@Base+0x6dc>)
    b74a:	add	r0, pc
    b74c:	adds	r0, #24
    b74e:	bl	1353a <rb_first@@Base>
    b752:	ldr	r3, [pc, #1012]	; (bb48 <ulist_next@@Base+0x6e0>)
    b754:	add	r3, pc
    b756:	adds	r3, #17
    b758:	vmov	s18, r3
    b75c:	mov	fp, r0
    b75e:	mov	r0, r4
    b760:	cmp.w	fp, #0
    b764:	bne.n	b782 <ulist_next@@Base+0x31a>
    b766:	bl	b27c <ulist_free@@Base>
    b76a:	mov	r0, fp
    b76c:	ldr	r2, [pc, #988]	; (bb4c <ulist_next@@Base+0x6e4>)
    b76e:	ldr	r3, [pc, #976]	; (bb40 <ulist_next@@Base+0x6d8>)
    b770:	add	r2, pc
    b772:	ldr	r3, [r2, r3]
    b774:	ldr	r2, [r3, #0]
    b776:	ldr	r3, [sp, #68]	; 0x44
    b778:	eors	r2, r3
    b77a:	beq.w	bb30 <ulist_next@@Base+0x6c8>
    b77e:	blx	8510 <__stack_chk_fail@plt>
    b782:	ldr	r6, [pc, #972]	; (bb50 <ulist_next@@Base+0x6e8>)
    b784:	bl	b256 <ulist_reinit@@Base>
    b788:	ldr	r7, [pc, #968]	; (bb54 <ulist_next@@Base+0x6ec>)
    b78a:	sub.w	r5, fp, #32
    b78e:	ldr.w	sl, [pc, #968]	; bb58 <ulist_next@@Base+0x6f0>
    b792:	add	r6, pc
    b794:	ldrd	r2, r3, [fp, #-24]
    b798:	add	r7, pc
    b79a:	ldrd	r8, r9, [fp, #-32]
    b79e:	add	sl, pc
    b7a0:	strd	r2, r3, [sp, #16]
    b7a4:	ldrd	r2, r3, [r5]
    b7a8:	mov	r1, r6
    b7aa:	mov	r0, r7
    b7ac:	cmp	r3, r9
    b7ae:	it	eq
    b7b0:	cmpeq	r2, r8
    b7b2:	movw	r2, #545	; 0x221
    b7b6:	ite	ne
    b7b8:	movne	r3, #1
    b7ba:	moveq	r3, #0
    b7bc:	bl	b6fc <ulist_next@@Base+0x294>
    b7c0:	ldrd	r2, r3, [r5, #8]
    b7c4:	ldrd	r0, r1, [sp, #16]
    b7c8:	cmp	r3, r1
    b7ca:	mov	r1, r6
    b7cc:	it	eq
    b7ce:	cmpeq	r2, r0
    b7d0:	movw	r2, #546	; 0x222
    b7d4:	mov	r0, sl
    b7d6:	ite	ne
    b7d8:	movne	r3, #1
    b7da:	moveq	r3, #0
    b7dc:	bl	b6fc <ulist_next@@Base+0x294>
    b7e0:	ldrd	r2, r3, [r5, #24]
    b7e4:	orrs.w	r1, r2, r3
    b7e8:	beq.n	b8cc <ulist_next@@Base+0x464>
    b7ea:	cmp	r3, #0
    b7ec:	it	eq
    b7ee:	cmpeq	r2, #5
    b7f0:	beq.n	b8a8 <ulist_next@@Base+0x440>
    b7f2:	cmp.w	r2, #256	; 0x100
    b7f6:	sbcs.w	r1, r3, #0
    b7fa:	bge.n	b8a8 <ulist_next@@Base+0x440>
    b7fc:	mov	r0, fp
    b7fe:	bl	1355a <rb_next@@Base>
    b802:	mov	fp, r0
    b804:	cmp	r0, #0
    b806:	bne.n	b8d8 <ulist_next@@Base+0x470>
    b808:	ldrd	r2, r3, [sp, #24]
    b80c:	orrs	r3, r2
    b80e:	beq.n	b87e <ulist_next@@Base+0x416>
    b810:	ldr	r5, [pc, #840]	; (bb5c <ulist_next@@Base+0x6f4>)
    b812:	movs	r3, #0
    b814:	str	r3, [sp, #60]	; 0x3c
    b816:	add	r5, pc
    b818:	add	r1, sp, #60	; 0x3c
    b81a:	mov	r0, r4
    b81c:	bl	b468 <ulist_next@@Base>
    b820:	cbz	r0, b87e <ulist_next@@Base+0x416>
    b822:	ldrd	r6, r7, [r0]
    b826:	movw	r2, #1465	; 0x5b9
    b82a:	vmov	r1, s18
    b82e:	mov	r0, r5
    b830:	orrs.w	r3, r6, r7
    b834:	ite	eq
    b836:	moveq	r3, #1
    b838:	movne	r3, #0
    b83a:	bl	b6fc <ulist_next@@Base+0x294>
    b83e:	ldrd	r2, r3, [sp, #24]
    b842:	cmp	r3, r7
    b844:	it	eq
    b846:	cmpeq	r2, r6
    b848:	bne.n	b818 <ulist_next@@Base+0x3b0>
    b84a:	ldr	r3, [r4, #0]
    b84c:	add	r5, sp, #64	; 0x40
    b84e:	ldr	r6, [pc, #784]	; (bb60 <ulist_next@@Base+0x6f8>)
    b850:	movs	r0, #1
    b852:	ldr	r1, [pc, #784]	; (bb64 <ulist_next@@Base+0x6fc>)
    b854:	str	r3, [sp, #8]
    b856:	add	r6, pc
    b858:	ldrd	r2, r3, [sp, #16]
    b85c:	add	r1, pc
    b85e:	strd	r2, r3, [sp]
    b862:	mov	r3, r9
    b864:	mov	r2, r8
    b866:	blx	8838 <__printf_chk@plt+0x4>
    b86a:	movs	r3, #0
    b86c:	str	r3, [sp, #64]	; 0x40
    b86e:	mov	r1, r5
    b870:	mov	r0, r4
    b872:	bl	b468 <ulist_next@@Base>
    b876:	cbnz	r0, b8ec <ulist_next@@Base+0x484>
    b878:	movs	r0, #10
    b87a:	blx	87d4 <putchar@plt+0x4>
    b87e:	ldr	r3, [sp, #52]	; 0x34
    b880:	cmp	r3, #0
    b882:	beq.w	b75e <ulist_next@@Base+0x2f6>
    b886:	movs	r0, #0
    b888:	bl	b268 <ulist_alloc@@Base>
    b88c:	mov	r7, r0
    b88e:	movs	r0, #0
    b890:	bl	b268 <ulist_alloc@@Base>
    b894:	mov	r5, r0
    b896:	cbz	r7, b89a <ulist_next@@Base+0x432>
    b898:	cbnz	r0, b8fa <ulist_next@@Base+0x492>
    b89a:	mov	r0, r7
    b89c:	bl	b27c <ulist_free@@Base>
    b8a0:	mov	r0, r5
    b8a2:	bl	b27c <ulist_free@@Base>
    b8a6:	b.n	b8be <ulist_next@@Base+0x456>
    b8a8:	movs	r1, #0
    b8aa:	movs	r0, #0
    b8ac:	str	r1, [sp, #8]
    b8ae:	movs	r1, #0
    b8b0:	strd	r0, r1, [sp]
    b8b4:	mov	r0, r4
    b8b6:	bl	b390 <ulist_add@@Base>
    b8ba:	cmp	r0, #0
    b8bc:	bge.n	b7fc <ulist_next@@Base+0x394>
    b8be:	ldr	r0, [pc, #680]	; (bb68 <ulist_next@@Base+0x700>)
    b8c0:	add	r0, pc
    b8c2:	bl	16b70 <__btrfs_error@@Base>
    b8c6:	mvn.w	r0, #11
    b8ca:	b.n	b76c <ulist_next@@Base+0x304>
    b8cc:	ldrd	r2, r3, [r5, #16]
    b8d0:	mov	r0, r4
    b8d2:	bl	b540 <ulist_next@@Base+0xd8>
    b8d6:	b.n	b8ba <ulist_next@@Base+0x452>
    b8d8:	ldrd	r2, r3, [r0, #-32]
    b8dc:	sub.w	r5, r0, #32
    b8e0:	cmp	r3, r9
    b8e2:	it	eq
    b8e4:	cmpeq	r2, r8
    b8e6:	beq.w	b7a4 <ulist_next@@Base+0x33c>
    b8ea:	b.n	b808 <ulist_next@@Base+0x3a0>
    b8ec:	ldrd	r2, r3, [r0]
    b8f0:	mov	r1, r6
    b8f2:	movs	r0, #1
    b8f4:	blx	8838 <__printf_chk@plt+0x4>
    b8f8:	b.n	b86e <ulist_next@@Base+0x406>
    b8fa:	movs	r3, #0
    b8fc:	str	r3, [sp, #60]	; 0x3c
    b8fe:	ldr	r3, [pc, #620]	; (bb6c <ulist_next@@Base+0x704>)
    b900:	add	r3, pc
    b902:	adds	r3, #35	; 0x23
    b904:	vmov	s17, r3
    b908:	ldr.w	sl, [pc, #612]	; bb70 <ulist_next@@Base+0x708>
    b90c:	add	sl, pc
    b90e:	add.w	r8, sp, #60	; 0x3c
    b912:	mov	r0, r4
    b914:	mov	r1, r8
    b916:	bl	b468 <ulist_next@@Base>
    b91a:	cbnz	r0, b96a <ulist_next@@Base+0x502>
    b91c:	ldr	r3, [r4, #0]
    b91e:	mov.w	sl, #0
    b922:	str	r0, [sp, #60]	; 0x3c
    b924:	mov	r9, r3
    b926:	ldr	r3, [pc, #588]	; (bb74 <ulist_next@@Base+0x70c>)
    b928:	add	r3, pc
    b92a:	str	r3, [sp, #32]
    b92c:	mov	r1, r8
    b92e:	mov	r0, r7
    b930:	bl	b468 <ulist_next@@Base>
    b934:	cmp	r0, #0
    b936:	bne.w	baac <ulist_next@@Base+0x644>
    b93a:	ldr	r6, [pc, #572]	; (bb78 <ulist_next@@Base+0x710>)
    b93c:	ldr	r1, [r4, #0]
    b93e:	add	r6, pc
    b940:	adds	r1, #1
    b942:	ldrd	r2, r3, [r6]
    b946:	adds	r2, r2, r1
    b948:	adc.w	r3, r3, r1, asr #31
    b94c:	strd	r2, r3, [r6]
    b950:	mov	r3, r0
    b952:	mov	r0, r7
    b954:	str	r3, [sp, #16]
    b956:	bl	b27c <ulist_free@@Base>
    b95a:	mov	r0, r5
    b95c:	bl	b27c <ulist_free@@Base>
    b960:	ldr	r3, [sp, #16]
    b962:	cmp	r3, #0
    b964:	beq.w	b75e <ulist_next@@Base+0x2f6>
    b968:	b.n	b8be <ulist_next@@Base+0x456>
    b96a:	ldrd	r8, r9, [r0]
    b96e:	mov.w	r2, #422	; 0x1a6
    b972:	vmov	r1, s17
    b976:	mov	r0, sl
    b978:	orrs.w	r3, r8, r9
    b97c:	ite	eq
    b97e:	moveq	r3, #1
    b980:	movne	r3, #0
    b982:	bl	b6fc <ulist_next@@Base+0x294>
    b986:	mov	r0, r8
    b988:	mov	r1, r9
    b98a:	bl	b4a4 <ulist_next@@Base+0x3c>
    b98e:	mov	r6, r0
    b990:	cmp	r0, #0
    b992:	beq.n	b90e <ulist_next@@Base+0x4a6>
    b994:	cmp.w	r9, #0
    b998:	it	eq
    b99a:	cmpeq.w	r8, #5
    b99e:	beq.w	baa8 <ulist_next@@Base+0x640>
    b9a2:	cmp.w	r8, #256	; 0x100
    b9a6:	sbcs.w	r3, r9, #0
    b9aa:	ite	ge
    b9ac:	movge	r3, #1
    b9ae:	movlt	r3, #0
    b9b0:	ldr	r1, [pc, #456]	; (bb7c <ulist_next@@Base+0x714>)
    b9b2:	eor.w	r3, r3, #1
    b9b6:	ldr	r0, [pc, #456]	; (bb80 <ulist_next@@Base+0x718>)
    b9b8:	mov.w	r2, #432	; 0x1b0
    b9bc:	add	r1, pc
    b9be:	mov.w	r8, #0
    b9c2:	adds	r1, #35	; 0x23
    b9c4:	add	r0, pc
    b9c6:	bl	b6fc <ulist_next@@Base+0x294>
    b9ca:	str.w	r8, [sp, #8]
    b9ce:	strd	r6, r8, [sp]
    b9d2:	mov	r0, r7
    b9d4:	ldrd	r2, r3, [r6]
    b9d8:	bl	b390 <ulist_add@@Base>
    b9dc:	subs	r3, r0, #0
    b9de:	blt.n	b952 <ulist_next@@Base+0x4ea>
    b9e0:	mov	r0, r5
    b9e2:	bl	b256 <ulist_reinit@@Base>
    b9e6:	str.w	r8, [sp, #8]
    b9ea:	strd	r6, r8, [sp]
    b9ee:	mov	r0, r5
    b9f0:	ldrd	r2, r3, [r6]
    b9f4:	bl	b390 <ulist_add@@Base>
    b9f8:	subs	r3, r0, #0
    b9fa:	blt.n	b952 <ulist_next@@Base+0x4ea>
    b9fc:	ldr	r3, [pc, #388]	; (bb84 <ulist_next@@Base+0x71c>)
    b9fe:	str.w	r8, [sp, #64]	; 0x40
    ba02:	add	r3, pc
    ba04:	adds	r3, #35	; 0x23
    ba06:	vmov	s16, r3
    ba0a:	add	r1, sp, #64	; 0x40
    ba0c:	mov	r0, r5
    ba0e:	bl	b468 <ulist_next@@Base>
    ba12:	cmp	r0, #0
    ba14:	beq.w	b908 <ulist_next@@Base+0x4a0>
    ba18:	ldr	r3, [pc, #364]	; (bb88 <ulist_next@@Base+0x720>)
    ba1a:	ldr	r6, [r0, #8]
    ba1c:	add	r3, pc
    ba1e:	ldr.w	sl, [pc, #364]	; bb8c <ulist_next@@Base+0x724>
    ba22:	ldrd	r0, r1, [r3]
    ba26:	add	sl, pc
    ba28:	ldrd	r2, r3, [r6, #128]	; 0x80
    ba2c:	ldr.w	r8, [r6, #108]	; 0x6c
    ba30:	cmp	r3, r1
    ba32:	it	eq
    ba34:	cmpeq	r2, r0
    ba36:	it	cc
    ba38:	strdcc	r0, r1, [r6, #128]	; 0x80
    ba3c:	ldrd	r3, r2, [r6, #128]	; 0x80
    ba40:	adds	r3, #1
    ba42:	adc.w	r2, r2, #0
    ba46:	strd	r3, r2, [r6, #128]	; 0x80
    ba4a:	add.w	r3, r6, #108	; 0x6c
    ba4e:	cmp	r8, r3
    ba50:	beq.n	ba0a <ulist_next@@Base+0x5a2>
    ba52:	ldr.w	r9, [r8, #16]
    ba56:	mov	r0, sl
    ba58:	vmov	r1, s16
    ba5c:	ldrd	r2, r3, [r9]
    ba60:	strd	r2, r3, [sp, #32]
    ba64:	clz	r3, r6
    ba68:	mov.w	r2, #458	; 0x1ca
    ba6c:	lsrs	r3, r3, #5
    ba6e:	bl	b6fc <ulist_next@@Base+0x294>
    ba72:	movs	r1, #0
    ba74:	ldrd	r2, r3, [sp, #32]
    ba78:	mov	r0, r7
    ba7a:	str	r1, [sp, #8]
    ba7c:	strd	r9, r1, [sp]
    ba80:	bl	b390 <ulist_add@@Base>
    ba84:	subs	r3, r0, #0
    ba86:	blt.w	b952 <ulist_next@@Base+0x4ea>
    ba8a:	movs	r1, #0
    ba8c:	ldrd	r2, r3, [sp, #32]
    ba90:	mov	r0, r5
    ba92:	str	r1, [sp, #8]
    ba94:	strd	r9, r1, [sp]
    ba98:	bl	b390 <ulist_add@@Base>
    ba9c:	subs	r3, r0, #0
    ba9e:	blt.w	b952 <ulist_next@@Base+0x4ea>
    baa2:	ldr.w	r8, [r8]
    baa6:	b.n	ba4a <ulist_next@@Base+0x5e2>
    baa8:	ldr	r3, [sp, #52]	; 0x34
    baaa:	b.n	b9b0 <ulist_next@@Base+0x548>
    baac:	ldr.w	ip, [r0, #8]
    bab0:	ldr	r3, [sp, #32]
    bab2:	ldrd	r0, r1, [ip, #128]	; 0x80
    bab6:	ldrd	r2, r3, [r3]
    baba:	cmp	r1, r3
    babc:	it	eq
    babe:	cmpeq	r0, r2
    bac0:	bcc.w	b92c <ulist_next@@Base+0x4c4>
    bac4:	subs	r6, r0, r2
    bac6:	str	r6, [sp, #40]	; 0x28
    bac8:	sbc.w	r6, r1, r3
    bacc:	cmp	r1, r3
    bace:	it	eq
    bad0:	cmpeq	r0, r2
    bad2:	str	r6, [sp, #44]	; 0x2c
    bad4:	beq.w	b92c <ulist_next@@Base+0x4c4>
    bad8:	ldrd	r3, r2, [ip, #64]	; 0x40
    badc:	ldr	r1, [sp, #16]
    bade:	adds	r3, r3, r1
    bae0:	ldr	r1, [sp, #20]
    bae2:	adc.w	r2, r1, r2
    bae6:	ldr	r1, [sp, #16]
    bae8:	strd	r3, r2, [ip, #64]	; 0x40
    baec:	ldrd	r3, r2, [ip, #72]	; 0x48
    baf0:	adds	r3, r3, r1
    baf2:	ldr	r1, [sp, #20]
    baf4:	adc.w	r2, r1, r2
    baf8:	strd	r3, r2, [ip, #72]	; 0x48
    bafc:	ldrd	r2, r3, [sp, #40]	; 0x28
    bb00:	cmp	sl, r3
    bb02:	it	eq
    bb04:	cmpeq	r9, r2
    bb06:	bne.w	b92c <ulist_next@@Base+0x4c4>
    bb0a:	ldrd	r3, r2, [ip, #80]	; 0x50
    bb0e:	ldr	r1, [sp, #16]
    bb10:	adds	r3, r3, r1
    bb12:	ldr	r1, [sp, #20]
    bb14:	adc.w	r2, r1, r2
    bb18:	ldr	r1, [sp, #16]
    bb1a:	strd	r3, r2, [ip, #80]	; 0x50
    bb1e:	ldrd	r3, r2, [ip, #88]	; 0x58
    bb22:	adds	r3, r3, r1
    bb24:	ldr	r1, [sp, #20]
    bb26:	adc.w	r2, r1, r2
    bb2a:	strd	r3, r2, [ip, #88]	; 0x58
    bb2e:	b.n	b92c <ulist_next@@Base+0x4c4>
    bb30:	add	sp, #76	; 0x4c
    bb32:	vpop	{d8-d9}
    bb36:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bb3a:	nop
    bb3c:	strh	r2, [r2, #50]	; 0x32
    bb3e:	movs	r5, r0
    bb40:	lsls	r0, r4, #8
    bb42:	movs	r0, r0
    bb44:	ldr	r3, [sp, #104]	; 0x68
    bb46:	movs	r5, r0
    bb48:	b.n	c020 <ulist_next@@Base+0xbb8>
    bb4a:	movs	r2, r0
    bb4c:	strh	r4, [r2, #48]	; 0x30
    bb4e:	movs	r5, r0
    bb50:	b.n	bfac <ulist_next@@Base+0xb44>
    bb52:	movs	r2, r0
    bb54:	udf	#35	; 0x23
    bb56:	movs	r2, r0
    bb58:	udf	#51	; 0x33
    bb5a:	movs	r2, r0
    bb5c:	ble.n	bb0e <ulist_next@@Base+0x6a6>
    bb5e:	movs	r2, r0
    bb60:	ble.n	bad4 <ulist_next@@Base+0x66c>
    bb62:	movs	r2, r0
    bb64:	ble.n	bab0 <ulist_next@@Base+0x648>
    bb66:	movs	r2, r0
    bb68:	ble.n	bc50 <ulist_next@@Base+0x7e8>
    bb6a:	movs	r2, r0
    bb6c:	b.n	bcec <ulist_next@@Base+0x884>
    bb6e:	movs	r2, r0
    bb70:	bgt.n	bb36 <ulist_next@@Base+0x6ce>
    bb72:	movs	r2, r0
    bb74:	strh	r4, [r2, #60]	; 0x3c
    bb76:	movs	r5, r0
    bb78:	strh	r6, [r7, #58]	; 0x3a
    bb7a:	movs	r5, r0
    bb7c:	b.n	bb84 <ulist_next@@Base+0x71c>
    bb7e:	movs	r2, r0
    bb80:	bgt.n	bc24 <ulist_next@@Base+0x7bc>
    bb82:	movs	r2, r0
    bb84:	svc	188	; 0xbc
    bb86:	movs	r2, r0
    bb88:	strh	r0, [r4, #52]	; 0x34
    bb8a:	movs	r5, r0
    bb8c:	bgt.n	bb9a <ulist_next@@Base+0x732>
    bb8e:	movs	r2, r0
    bb90:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bb94:	mov	r5, r3
    bb96:	ldr	r3, [pc, #292]	; (bcbc <ulist_next@@Base+0x854>)
    bb98:	mov	r6, r0
    bb9a:	ldrd	r8, r9, [sp, #40]	; 0x28
    bb9e:	mov	r7, r1
    bba0:	add	r3, pc
    bba2:	mov	r4, r2
    bba4:	ldr.w	sl, [r3, #24]
    bba8:	cmp.w	sl, #0
    bbac:	beq.n	bbee <ulist_next@@Base+0x786>
    bbae:	ldrd	r2, r3, [sl, #-32]
    bbb2:	cmp	r7, r3
    bbb4:	it	eq
    bbb6:	cmpeq	r6, r2
    bbb8:	bcc.n	bc5e <ulist_next@@Base+0x7f6>
    bbba:	cmp	r3, r7
    bbbc:	it	eq
    bbbe:	cmpeq	r2, r6
    bbc0:	bcc.n	bcb4 <ulist_next@@Base+0x84c>
    bbc2:	ldrd	r2, r3, [sl, #-16]
    bbc6:	cmp	r9, r3
    bbc8:	it	eq
    bbca:	cmpeq	r8, r2
    bbcc:	bcc.n	bc5e <ulist_next@@Base+0x7f6>
    bbce:	cmp	r3, r9
    bbd0:	it	eq
    bbd2:	cmpeq	r2, r8
    bbd4:	bcc.n	bcb4 <ulist_next@@Base+0x84c>
    bbd6:	ldrd	r2, r3, [sl, #-8]
    bbda:	cmp	r5, r3
    bbdc:	it	eq
    bbde:	cmpeq	r4, r2
    bbe0:	bcc.n	bc5e <ulist_next@@Base+0x7f6>
    bbe2:	cmp	r3, r5
    bbe4:	it	eq
    bbe6:	cmpeq	r2, r4
    bbe8:	bcc.n	bcb4 <ulist_next@@Base+0x84c>
    bbea:	sub.w	sl, sl, #32
    bbee:	orrs.w	r3, r8, r9
    bbf2:	beq.n	bc64 <ulist_next@@Base+0x7fc>
    bbf4:	orrs.w	r3, r4, r5
    bbf8:	ite	ne
    bbfa:	movne	r3, #1
    bbfc:	moveq	r3, #0
    bbfe:	ldr	r1, [pc, #192]	; (bcc0 <ulist_next@@Base+0x858>)
    bc00:	mov.w	r2, #302	; 0x12e
    bc04:	ldr	r0, [pc, #188]	; (bcc4 <ulist_next@@Base+0x85c>)
    bc06:	add	r1, pc
    bc08:	adds	r1, #54	; 0x36
    bc0a:	add	r0, pc
    bc0c:	bl	b6fc <ulist_next@@Base+0x294>
    bc10:	cmp.w	sl, #0
    bc14:	bne.n	bcb0 <ulist_next@@Base+0x848>
    bc16:	movs	r1, #48	; 0x30
    bc18:	movs	r0, #1
    bc1a:	blx	839c <calloc@plt+0x4>
    bc1e:	mov	fp, r0
    bc20:	cbz	r0, bc58 <ulist_next@@Base+0x7f0>
    bc22:	ldrd	r2, r3, [sp, #48]	; 0x30
    bc26:	strd	r6, r7, [r0]
    bc2a:	strd	r4, r5, [r0, #24]
    bc2e:	strd	r2, r3, [r0, #8]
    bc32:	ldr	r3, [pc, #148]	; (bcc8 <ulist_next@@Base+0x860>)
    bc34:	strd	r8, r9, [r0, #16]
    bc38:	add	r3, pc
    bc3a:	adds	r3, #24
    bc3c:	ldr	r1, [r3, #0]
    bc3e:	cbnz	r1, bc68 <ulist_next@@Base+0x800>
    bc40:	strd	sl, r1, [fp, #32]
    bc44:	add.w	r0, fp, #32
    bc48:	str.w	r1, [fp, #40]	; 0x28
    bc4c:	ldr	r1, [pc, #124]	; (bccc <ulist_next@@Base+0x864>)
    bc4e:	str	r0, [r3, #0]
    bc50:	add	r1, pc
    bc52:	adds	r1, #24
    bc54:	bl	1321e <rb_insert_color@@Base>
    bc58:	mov	r0, fp
    bc5a:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bc5e:	ldr.w	sl, [sl, #8]
    bc62:	b.n	bba8 <ulist_next@@Base+0x740>
    bc64:	movs	r3, #0
    bc66:	b.n	bbfe <ulist_next@@Base+0x796>
    bc68:	ldrd	r2, r3, [r1, #-32]
    bc6c:	cmp	r7, r3
    bc6e:	it	eq
    bc70:	cmpeq	r6, r2
    bc72:	bcc.n	bca8 <ulist_next@@Base+0x840>
    bc74:	cmp	r3, r7
    bc76:	it	eq
    bc78:	cmpeq	r2, r6
    bc7a:	bcc.n	bca4 <ulist_next@@Base+0x83c>
    bc7c:	ldrd	r2, r3, [r1, #-16]
    bc80:	cmp	r9, r3
    bc82:	it	eq
    bc84:	cmpeq	r8, r2
    bc86:	bcc.n	bca8 <ulist_next@@Base+0x840>
    bc88:	cmp	r3, r9
    bc8a:	it	eq
    bc8c:	cmpeq	r2, r8
    bc8e:	bcc.n	bca4 <ulist_next@@Base+0x83c>
    bc90:	ldrd	r2, r3, [r1, #-8]
    bc94:	cmp	r5, r3
    bc96:	it	eq
    bc98:	cmpeq	r4, r2
    bc9a:	bcc.n	bca8 <ulist_next@@Base+0x840>
    bc9c:	cmp	r3, r5
    bc9e:	it	eq
    bca0:	cmpeq	r2, r4
    bca2:	bcs.n	bc58 <ulist_next@@Base+0x7f0>
    bca4:	adds	r3, r1, #4
    bca6:	b.n	bcac <ulist_next@@Base+0x844>
    bca8:	add.w	r3, r1, #8
    bcac:	mov	sl, r1
    bcae:	b.n	bc3c <ulist_next@@Base+0x7d4>
    bcb0:	mov	fp, sl
    bcb2:	b.n	bc58 <ulist_next@@Base+0x7f0>
    bcb4:	ldr.w	sl, [sl, #4]
    bcb8:	b.n	bba8 <ulist_next@@Base+0x740>
    bcba:	nop
    bcbc:	str	r6, [sp, #784]	; 0x310
    bcbe:	movs	r5, r0
    bcc0:	ble.n	bc34 <ulist_next@@Base+0x7cc>
    bcc2:	movs	r2, r0
    bcc4:	bge.n	bd78 <ulist_next@@Base+0x910>
    bcc6:	movs	r2, r0
    bcc8:	str	r6, [sp, #176]	; 0xb0
    bcca:	movs	r5, r0
    bccc:	str	r6, [sp, #80]	; 0x50
    bcce:	movs	r5, r0
    bcd0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bcd4:	movs	r6, #0
    bcd6:	vpush	{d8}
    bcda:	mov	r4, r6
    bcdc:	ldr	r3, [pc, #864]	; (c040 <ulist_next@@Base+0xbd8>)
    bcde:	ldr	r2, [pc, #868]	; (c044 <ulist_next@@Base+0xbdc>)
    bce0:	add	r3, pc
    bce2:	sub	sp, #180	; 0xb4
    bce4:	add	r2, pc
    bce6:	str	r3, [sp, #32]
    bce8:	ldr	r3, [pc, #860]	; (c048 <ulist_next@@Base+0xbe0>)
    bcea:	str	r0, [sp, #56]	; 0x38
    bcec:	ldr	r3, [r2, r3]
    bcee:	ldr	r3, [r3, #0]
    bcf0:	str	r3, [sp, #172]	; 0xac
    bcf2:	mov.w	r3, #0
    bcf6:	ldr	r3, [r0, #24]
    bcf8:	str	r3, [sp, #36]	; 0x24
    bcfa:	add	r3, sp, #104	; 0x68
    bcfc:	str	r3, [sp, #16]
    bcfe:	mov	r0, r3
    bd00:	bl	1753c <btrfs_init_path@@Base>
    bd04:	ldr	r3, [sp, #16]
    bd06:	ldr	r1, [sp, #36]	; 0x24
    bd08:	add	r2, sp, #64	; 0x40
    bd0a:	mov	r0, r6
    bd0c:	strd	r6, r6, [sp]
    bd10:	strd	r6, r6, [sp, #64]	; 0x40
    bd14:	strb.w	r6, [sp, #72]	; 0x48
    bd18:	strb.w	r6, [sp, #73]	; 0x49
    bd1c:	strb.w	r6, [sp, #74]	; 0x4a
    bd20:	strb.w	r6, [sp, #75]	; 0x4b
    bd24:	strb.w	r6, [sp, #76]	; 0x4c
    bd28:	strb.w	r6, [sp, #77]	; 0x4d
    bd2c:	strb.w	r6, [sp, #78]	; 0x4e
    bd30:	strb.w	r6, [sp, #79]	; 0x4f
    bd34:	strb.w	r6, [sp, #80]	; 0x50
    bd38:	bl	19930 <btrfs_search_slot@@Base>
    bd3c:	subs	r7, r0, #0
    bd3e:	bge.n	bd56 <ulist_next@@Base+0x8ee>
    bd40:	ldr	r3, [pc, #776]	; (c04c <ulist_next@@Base+0xbe4>)
    bd42:	ldr	r2, [sp, #32]
    bd44:	ldr	r0, [r2, r3]
    bd46:	mov	r3, r7
    bd48:	ldr	r2, [pc, #772]	; (c050 <ulist_next@@Base+0xbe8>)
    bd4a:	add	r2, pc
    bd4c:	movs	r1, #1
    bd4e:	ldr	r0, [r0, #0]
    bd50:	blx	8860 <__fprintf_chk@plt+0x4>
    bd54:	b.n	bf0c <ulist_next@@Base+0xaa4>
    bd56:	movs	r3, #1
    bd58:	strb.w	r3, [sp, #168]	; 0xa8
    bd5c:	ldr	r3, [pc, #756]	; (c054 <ulist_next@@Base+0xbec>)
    bd5e:	mov	sl, r6
    bd60:	mov	fp, r6
    bd62:	str	r6, [sp, #24]
    bd64:	add	r3, pc
    bd66:	adds	r3, #93	; 0x5d
    bd68:	vmov	s16, r3
    bd6c:	ldr	r7, [sp, #104]	; 0x68
    bd6e:	mov.w	r8, #197	; 0xc5
    bd72:	ldr.w	r3, [r7, #192]	; 0xc0
    bd76:	str	r3, [sp, #60]	; 0x3c
    bd78:	movs	r3, #0
    bd7a:	str	r3, [sp, #28]
    bd7c:	ldr	r3, [pc, #728]	; (c058 <ulist_next@@Base+0xbf0>)
    bd7e:	add	r3, pc
    bd80:	vmov	s17, r3
    bd84:	ldr	r3, [sp, #60]	; 0x3c
    bd86:	ldr	r2, [sp, #28]
    bd88:	cmp	r3, r2
    bd8a:	bgt.n	bdb4 <ulist_next@@Base+0x94c>
    bd8c:	ldr	r3, [sp, #36]	; 0x24
    bd8e:	add	r1, sp, #104	; 0x68
    bd90:	movs	r5, #0
    bd92:	strb.w	r5, [sp, #169]	; 0xa9
    bd96:	ldr.w	r0, [r3, #464]	; 0x1d0
    bd9a:	bl	1ad64 <btrfs_next_sibling_tree_block@@Base>
    bd9e:	subs	r7, r0, #0
    bda0:	beq.n	bd6c <ulist_next@@Base+0x904>
    bda2:	bge.w	c02e <ulist_next@@Base+0xbc6>
    bda6:	ldr	r3, [pc, #676]	; (c04c <ulist_next@@Base+0xbe4>)
    bda8:	ldr	r2, [sp, #32]
    bdaa:	ldr	r0, [r2, r3]
    bdac:	mov	r3, r7
    bdae:	ldr	r2, [pc, #684]	; (c05c <ulist_next@@Base+0xbf4>)
    bdb0:	add	r2, pc
    bdb2:	b.n	bd4c <ulist_next@@Base+0x8e4>
    bdb4:	sub.w	r2, r8, #96	; 0x60
    bdb8:	movs	r3, #17
    bdba:	add	r1, sp, #84	; 0x54
    bdbc:	mov	r0, r7
    bdbe:	bl	16a0e <read_extent_buffer@@Base>
    bdc2:	ldr	r3, [sp, #84]	; 0x54
    bdc4:	ldrb.w	r5, [sp, #92]	; 0x5c
    bdc8:	ldr.w	r6, [sp, #93]	; 0x5d
    bdcc:	str	r3, [sp, #16]
    bdce:	ldr	r3, [sp, #88]	; 0x58
    bdd0:	ldr.w	r9, [sp, #97]	; 0x61
    bdd4:	str.w	r6, [sp, #73]	; 0x49
    bdd8:	str	r3, [sp, #20]
    bdda:	ldrd	r2, r3, [sp, #16]
    bdde:	str.w	r9, [sp, #77]	; 0x4d
    bde2:	strb.w	r5, [sp, #72]	; 0x48
    bde6:	strd	r2, r3, [sp, #64]	; 0x40
    bdea:	add.w	r3, r5, #88	; 0x58
    bdee:	uxtb	r3, r3
    bdf0:	cmp	r3, #1
    bdf2:	bhi.w	bf80 <ulist_next@@Base+0xb18>
    bdf6:	ldr	r2, [pc, #616]	; (c060 <ulist_next@@Base+0xbf8>)
    bdf8:	cmp	r5, #169	; 0xa9
    bdfa:	add.w	sl, r7, r8
    bdfe:	it	ne
    be00:	strne.w	r9, [sp, #24]
    be04:	add	r2, pc
    be06:	it	ne
    be08:	movne	r4, r6
    be0a:	ldr.w	r5, [sl, #17]
    be0e:	add.w	r6, r7, #96	; 0x60
    be12:	ldr	r3, [r2, #32]
    be14:	ldr.w	fp, [sl, #21]
    be18:	add.w	r3, r3, #1
    be1c:	str	r3, [r2, #32]
    be1e:	ittet	eq
    be20:	ldreq	r3, [sp, #56]	; 0x38
    be22:	moveq	r2, #1
    be24:	movne	r2, #0
    be26:	ldreq.w	r4, [r3, #384]	; 0x180
    be2a:	itt	eq
    be2c:	moveq	r3, #0
    be2e:	streq	r3, [sp, #24]
    be30:	add.w	r3, r5, #101	; 0x65
    be34:	adds	r1, r6, r3
    be36:	ldr	r1, [r1, #16]
    be38:	and.w	r1, r1, #2
    be3c:	str	r1, [sp, #40]	; 0x28
    be3e:	movs	r1, #0
    be40:	str	r1, [sp, #44]	; 0x2c
    be42:	ldrd	r0, r1, [sp, #40]	; 0x28
    be46:	orrs	r1, r0
    be48:	beq.n	bec0 <ulist_next@@Base+0xa58>
    be4a:	cmp	r2, #0
    be4c:	bne.n	bec0 <ulist_next@@Base+0xa58>
    be4e:	adds	r5, #143	; 0x8f
    be50:	add	fp, r3
    be52:	cmp	fp, r5
    be54:	bhi.n	bec6 <ulist_next@@Base+0xa5e>
    be56:	ldr.w	r3, [sl, #17]
    be5a:	ldrb.w	r2, [sp, #72]	; 0x48
    be5e:	adds	r3, #101	; 0x65
    be60:	add	r6, r3
    be62:	ldr	r3, [r6, #16]
    be64:	and.w	r3, r3, #2
    be68:	str	r3, [sp, #48]	; 0x30
    be6a:	movs	r3, #0
    be6c:	str	r3, [sp, #52]	; 0x34
    be6e:	ldrd	r0, r1, [sp, #48]	; 0x30
    be72:	orrs.w	r3, r0, r1
    be76:	beq.n	bf76 <ulist_next@@Base+0xb0e>
    be78:	cmp	r2, #169	; 0xa9
    be7a:	beq.n	bf7a <ulist_next@@Base+0xb12>
    be7c:	ldrb.w	r6, [r6, #41]	; 0x29
    be80:	cmp	r6, #0
    be82:	beq.w	c006 <ulist_next@@Base+0xb9e>
    be86:	movs	r1, #16
    be88:	movs	r0, #1
    be8a:	blx	839c <calloc@plt+0x4>
    be8e:	mov	r5, r0
    be90:	cbz	r0, bebc <ulist_next@@Base+0xa54>
    be92:	ldr	r1, [pc, #464]	; (c064 <ulist_next@@Base+0xbfc>)
    be94:	ldr	r3, [sp, #24]
    be96:	add	r1, pc
    be98:	str	r4, [r0, #8]
    be9a:	str	r6, [r0, #0]
    be9c:	str	r3, [r0, #12]
    be9e:	movs	r3, #0
    bea0:	str	r3, [sp, #8]
    bea2:	strd	r0, r3, [sp]
    bea6:	ldrd	r2, r3, [sp, #16]
    beaa:	ldr	r0, [r1, #28]
    beac:	bl	b390 <ulist_add@@Base>
    beb0:	cmp	r0, #0
    beb2:	bge.w	c006 <ulist_next@@Base+0xb9e>
    beb6:	mov	r0, r5
    beb8:	blx	8434 <free@plt+0x4>
    bebc:	movs	r7, #12
    bebe:	b.n	bf12 <ulist_next@@Base+0xaaa>
    bec0:	add.w	r5, r3, #24
    bec4:	b.n	be50 <ulist_next@@Base+0x9e8>
    bec6:	adds	r1, r6, r5
    bec8:	ldrb.w	r9, [r6, r5]
    becc:	mov	r3, r1
    bece:	sub.w	r0, r9, #176	; 0xb0
    bed2:	ldr.w	r2, [r3, #1]!
    bed6:	ldr	r3, [r3, #4]
    bed8:	cmp	r0, #8
    beda:	bhi.n	bf0a <ulist_next@@Base+0xaa2>
    bedc:	tbb	[pc, r0]
    bee0:	asrs	r0, r5, #20
    bee2:	asrs	r4, r4, #20
    bee4:	asrs	r5, r2, #20
    bee6:	asrs	r5, r0, #20
    bee8:	movs	r5, r0
    beea:	mov	r1, r2
    beec:	movs	r2, #0
    beee:	mov	ip, r3
    bef0:	mov	r3, r2
    bef2:	ldr	r0, [sp, #24]
    bef4:	strd	r1, ip, [sp]
    bef8:	str	r4, [sp, #8]
    befa:	str	r0, [sp, #12]
    befc:	ldrd	r0, r1, [sp, #16]
    bf00:	bl	bb90 <ulist_next@@Base+0x728>
    bf04:	cbnz	r0, bf36 <ulist_next@@Base+0xace>
    bf06:	movs	r7, #12
    bf08:	b.n	bf0c <ulist_next@@Base+0xaa4>
    bf0a:	movs	r7, #1
    bf0c:	add	r0, sp, #104	; 0x68
    bf0e:	bl	1754c <btrfs_release_path@@Base>
    bf12:	ldr	r2, [pc, #340]	; (c068 <ulist_next@@Base+0xc00>)
    bf14:	ldr	r3, [pc, #304]	; (c048 <ulist_next@@Base+0xbe0>)
    bf16:	add	r2, pc
    bf18:	ldr	r3, [r2, r3]
    bf1a:	ldr	r2, [r3, #0]
    bf1c:	ldr	r3, [sp, #172]	; 0xac
    bf1e:	eors	r2, r3
    bf20:	beq.w	c032 <ulist_next@@Base+0xbca>
    bf24:	blx	8510 <__stack_chk_fail@plt>
    bf28:	mov	r3, r1
    bf2a:	ldr.w	r2, [r3, #1]!
    bf2e:	ldr	r3, [r3, #4]
    bf30:	movs	r1, #0
    bf32:	mov	ip, r1
    bf34:	b.n	bef2 <ulist_next@@Base+0xa8a>
    bf36:	cmp.w	r9, #176	; 0xb0
    bf3a:	beq.n	bf68 <ulist_next@@Base+0xb00>
    bf3c:	cmp.w	r9, #182	; 0xb6
    bf40:	beq.n	bf68 <ulist_next@@Base+0xb00>
    bf42:	cmp.w	r9, #184	; 0xb8
    bf46:	beq.n	bf6e <ulist_next@@Base+0xb06>
    bf48:	cmp.w	r9, #178	; 0xb2
    bf4c:	beq.n	bf72 <ulist_next@@Base+0xb0a>
    bf4e:	ldr	r2, [pc, #284]	; (c06c <ulist_next@@Base+0xc04>)
    bf50:	movs	r3, #1
    bf52:	ldr	r1, [pc, #284]	; (c070 <ulist_next@@Base+0xc08>)
    bf54:	ldr	r0, [pc, #284]	; (c074 <ulist_next@@Base+0xc0c>)
    bf56:	add	r2, pc
    bf58:	str	r3, [sp, #0]
    bf5a:	adds	r2, #64	; 0x40
    bf5c:	add	r1, pc
    bf5e:	add	r0, pc
    bf60:	movw	r3, #1818	; 0x71a
    bf64:	bl	b698 <ulist_next@@Base+0x230>
    bf68:	movs	r3, #9
    bf6a:	add	r5, r3
    bf6c:	b.n	be52 <ulist_next@@Base+0x9ea>
    bf6e:	movs	r3, #13
    bf70:	b.n	bf6a <ulist_next@@Base+0xb02>
    bf72:	movs	r3, #29
    bf74:	b.n	bf6a <ulist_next@@Base+0xb02>
    bf76:	cmp	r2, #169	; 0xa9
    bf78:	bne.n	c006 <ulist_next@@Base+0xb9e>
    bf7a:	ldr.w	r6, [sp, #73]	; 0x49
    bf7e:	b.n	be80 <ulist_next@@Base+0xa18>
    bf80:	add.w	r3, r5, #80	; 0x50
    bf84:	uxtb	r3, r3
    bf86:	cmp	r3, #8
    bf88:	bhi.n	c002 <ulist_next@@Base+0xb9a>
    bf8a:	ldrd	r2, r3, [sp, #16]
    bf8e:	subs	r5, #176	; 0xb0
    bf90:	vmov	r1, s16
    bf94:	cmp	fp, r3
    bf96:	vmov	r0, s17
    bf9a:	it	eq
    bf9c:	cmpeq	sl, r2
    bf9e:	movw	r2, #1229	; 0x4cd
    bfa2:	ite	ne
    bfa4:	movne	r3, #1
    bfa6:	moveq	r3, #0
    bfa8:	bl	b6fc <ulist_next@@Base+0x294>
    bfac:	cmp	r5, #8
    bfae:	bhi.n	bf0a <ulist_next@@Base+0xaa2>
    bfb0:	add	r3, pc, #8	; (adr r3, bfbc <ulist_next@@Base+0xb54>)
    bfb2:	ldr.w	r2, [r3, r5, lsl #2]
    bfb6:	add	r3, r2
    bfb8:	bx	r3
    bfba:	nop
    bfbc:	lsls	r5, r5, #1
    bfbe:	movs	r0, r0
    bfc0:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    bfc4:	lsls	r3, r3, #1
    bfc6:	movs	r0, r0
    bfc8:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    bfcc:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    bfd0:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    bfd4:	movs	r5, r4
    bfd6:	movs	r0, r0
    bfd8:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    bfdc:	movs	r5, r4
    bfde:	movs	r0, r0
    bfe0:	mov	r3, r6
    bfe2:	movs	r6, #0
    bfe4:	mov	r2, r9
    bfe6:	mov	r9, r6
    bfe8:	ldr	r1, [sp, #24]
    bfea:	mov	r0, sl
    bfec:	strd	r3, r2, [sp]
    bff0:	mov	r2, r6
    bff2:	mov	r3, r9
    bff4:	str	r4, [sp, #8]
    bff6:	str	r1, [sp, #12]
    bff8:	mov	r1, fp
    bffa:	bl	bb90 <ulist_next@@Base+0x728>
    bffe:	cmp	r0, #0
    c000:	beq.n	bf06 <ulist_next@@Base+0xa9e>
    c002:	strd	sl, fp, [sp, #16]
    c006:	ldr	r3, [sp, #28]
    c008:	add.w	r8, r8, #25
    c00c:	ldrd	sl, fp, [sp, #16]
    c010:	adds	r3, #1
    c012:	str	r3, [sp, #28]
    c014:	b.n	bd84 <ulist_next@@Base+0x91c>
    c016:	add.w	r3, r7, r8
    c01a:	ldr.w	r3, [r3, #17]
    c01e:	add	r3, r7
    c020:	ldr.w	r6, [r3, #197]!
    c024:	ldr.w	r9, [r3, #4]
    c028:	movs	r3, #0
    c02a:	mov	r2, r3
    c02c:	b.n	bfe8 <ulist_next@@Base+0xb80>
    c02e:	mov	r7, r5
    c030:	b.n	bf0c <ulist_next@@Base+0xaa4>
    c032:	mov	r0, r7
    c034:	add	sp, #180	; 0xb4
    c036:	vpop	{d8}
    c03a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c03e:	nop
    c040:	strh	r4, [r4, #4]
    c042:	movs	r5, r0
    c044:	strh	r0, [r4, #4]
    c046:	movs	r5, r0
    c048:	lsls	r0, r4, #8
    c04a:	movs	r0, r0
    c04c:	lsls	r0, r6, #8
    c04e:	movs	r0, r0
    c050:	bls.n	c0a2 <ulist_next@@Base+0xc3a>
    c052:	movs	r2, r0
    c054:	bgt.n	c10c <ulist_next@@Base+0xca4>
    c056:	movs	r2, r0
    c058:	bls.n	c098 <ulist_next@@Base+0xc30>
    c05a:	movs	r2, r0
    c05c:	bls.n	c066 <ulist_next@@Base+0xbfe>
    c05e:	movs	r2, r0
    c060:	str	r4, [sp, #384]	; 0x180
    c062:	movs	r5, r0
    c064:	str	r3, [sp, #824]	; 0x338
    c066:	movs	r5, r0
    c068:	ldrb	r6, [r5, #25]
    c06a:	movs	r5, r0
    c06c:	bge.n	c140 <ulist_next@@Base+0xcd8>
    c06e:	movs	r2, r0
    c070:	bvc.n	c0e0 <ulist_next@@Base+0xc78>
    c072:	movs	r2, r0
    c074:	lsrs	r3, r6, #29
    c076:	movs	r3, r0
    c078:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c07c:	mov	r7, r1
    c07e:	ldr	r4, [pc, #352]	; (c1e0 <ulist_next@@Base+0xd78>)
    c080:	sub	sp, #44	; 0x2c
    c082:	ldr	r1, [pc, #352]	; (c1e4 <ulist_next@@Base+0xd7c>)
    c084:	mov.w	sl, #0
    c088:	add	r4, pc
    c08a:	mov.w	fp, #0
    c08e:	mov	r6, r0
    c090:	mov	r8, r2
    c092:	ldr	r1, [r4, r1]
    c094:	mov	r9, r3
    c096:	ldr	r1, [r1, #0]
    c098:	str	r1, [sp, #36]	; 0x24
    c09a:	mov.w	r1, #0
    c09e:	strd	sl, fp, [sp]
    c0a2:	bl	1cd7c <read_tree_block@@Base>
    c0a6:	mov	r4, r0
    c0a8:	cmp	r0, #0
    c0aa:	beq.w	c1d2 <ulist_next@@Base+0xd6a>
    c0ae:	cmn.w	r0, #4096	; 0x1000
    c0b2:	bhi.w	c1d2 <ulist_next@@Base+0xd6a>
    c0b6:	ldr	r3, [r0, #84]	; 0x54
    c0b8:	lsls	r3, r3, #29
    c0ba:	bpl.w	c1d2 <ulist_next@@Base+0xd6a>
    c0be:	ldrd	r2, r3, [sp, #88]	; 0x58
    c0c2:	cmp	r9, r3
    c0c4:	it	eq
    c0c6:	cmpeq	r8, r2
    c0c8:	bne.n	c122 <ulist_next@@Base+0xcba>
    c0ca:	ldrb.w	r5, [r4, #196]	; 0xc4
    c0ce:	ldr.w	r8, [r4, #192]	; 0xc0
    c0d2:	cmp	r5, #0
    c0d4:	beq.n	c1cc <ulist_next@@Base+0xd64>
    c0d6:	ldr.w	r9, [pc, #272]	; c1e8 <ulist_next@@Base+0xd80>
    c0da:	movs	r5, #0
    c0dc:	mov	fp, r5
    c0de:	mov	sl, r5
    c0e0:	add	r9, pc
    c0e2:	cmp	r5, r8
    c0e4:	bge.n	c16c <ulist_next@@Base+0xd04>
    c0e6:	ldr.w	r2, [r9, #36]	; 0x24
    c0ea:	ldrd	r3, r1, [r2]
    c0ee:	adds	r3, #1
    c0f0:	adc.w	r1, r1, #0
    c0f4:	strd	r3, r1, [r2]
    c0f8:	add.w	r3, r5, r5, lsl #5
    c0fc:	ldrd	r0, r1, [sp, #88]	; 0x58
    c100:	add	r3, r4
    c102:	adds	r5, #1
    c104:	ldr.w	r2, [r3, #214]!
    c108:	ldr	r3, [r3, #4]
    c10a:	strd	r0, r1, [sp, #8]
    c10e:	mov	r0, r6
    c110:	ldr.w	r1, [r6, #384]	; 0x180
    c114:	strd	r1, sl, [sp]
    c118:	mov	r1, r7
    c11a:	bl	c078 <ulist_next@@Base+0xc10>
    c11e:	mov	fp, r0
    c120:	b.n	c0e2 <ulist_next@@Base+0xc7a>
    c122:	ldrd	r2, r3, [sp, #80]	; 0x50
    c126:	mov	r0, r8
    c128:	mov	r1, r9
    c12a:	strd	r2, r3, [sp, #8]
    c12e:	ldrd	r2, r3, [sp, #88]	; 0x58
    c132:	strd	r2, r3, [sp]
    c136:	mov	r2, sl
    c138:	mov	r3, fp
    c13a:	bl	bb90 <ulist_next@@Base+0x728>
    c13e:	cmp	r0, #0
    c140:	bne.n	c0ca <ulist_next@@Base+0xc62>
    c142:	mov.w	fp, #12
    c146:	b.n	c172 <ulist_next@@Base+0xd0a>
    c148:	mul.w	r9, r6, r5
    c14c:	movs	r3, #17
    c14e:	mov	r1, r7
    c150:	mov	r0, r4
    c152:	add.w	r2, r9, #101	; 0x65
    c156:	bl	16a0e <read_extent_buffer@@Base>
    c15a:	ldrb.w	r3, [sp, #24]
    c15e:	cmp	r3, #108	; 0x6c
    c160:	beq.n	c186 <ulist_next@@Base+0xd1e>
    c162:	adds	r5, #1
    c164:	cmp	r5, r8
    c166:	blt.n	c148 <ulist_next@@Base+0xce0>
    c168:	mov.w	fp, #0
    c16c:	mov	r0, r4
    c16e:	bl	16314 <free_extent_buffer@@Base>
    c172:	ldr	r2, [pc, #120]	; (c1ec <ulist_next@@Base+0xd84>)
    c174:	ldr	r3, [pc, #108]	; (c1e4 <ulist_next@@Base+0xd7c>)
    c176:	add	r2, pc
    c178:	ldr	r3, [r2, r3]
    c17a:	ldr	r2, [r3, #0]
    c17c:	ldr	r3, [sp, #36]	; 0x24
    c17e:	eors	r2, r3
    c180:	beq.n	c1d8 <ulist_next@@Base+0xd70>
    c182:	blx	8510 <__stack_chk_fail@plt>
    c186:	add	r9, r4
    c188:	ldr.w	r2, [r9, #214]	; 0xd6
    c18c:	add	r2, r4
    c18e:	add.w	r3, r2, #197	; 0xc5
    c192:	ldrb.w	r2, [r2, #217]	; 0xd9
    c196:	cmp	r2, #0
    c198:	beq.n	c162 <ulist_next@@Base+0xcfa>
    c19a:	mov	r2, r3
    c19c:	ldr.w	r0, [r2, #21]!
    c1a0:	ldr	r1, [r2, #4]
    c1a2:	orrs.w	r2, r0, r1
    c1a6:	beq.n	c162 <ulist_next@@Base+0xcfa>
    c1a8:	ldr.w	r2, [r3, #29]!
    c1ac:	ldr	r3, [r3, #4]
    c1ae:	strd	r2, r3, [sp, #8]
    c1b2:	ldrd	r2, r3, [sp, #88]	; 0x58
    c1b6:	strd	r2, r3, [sp]
    c1ba:	movs	r2, #0
    c1bc:	movs	r3, #0
    c1be:	bl	bb90 <ulist_next@@Base+0x728>
    c1c2:	cmp	r0, #0
    c1c4:	bne.n	c162 <ulist_next@@Base+0xcfa>
    c1c6:	mov.w	fp, #12
    c1ca:	b.n	c16c <ulist_next@@Base+0xd04>
    c1cc:	add	r7, sp, #16
    c1ce:	movs	r6, #25
    c1d0:	b.n	c164 <ulist_next@@Base+0xcfc>
    c1d2:	mvn.w	fp, #4
    c1d6:	b.n	c172 <ulist_next@@Base+0xd0a>
    c1d8:	mov	r0, fp
    c1da:	add	sp, #44	; 0x2c
    c1dc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c1e0:	ldrb	r4, [r7, #19]
    c1e2:	movs	r5, r0
    c1e4:	lsls	r0, r4, #8
    c1e6:	movs	r0, r0
    c1e8:	str	r1, [sp, #528]	; 0x210
    c1ea:	movs	r5, r0
    c1ec:	ldrb	r6, [r1, #16]
    c1ee:	movs	r5, r0
    c1f0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c1f4:	mov	r4, r0
    c1f6:	vpush	{d8}
    c1fa:	ldr	r2, [pc, #264]	; (c304 <ulist_next@@Base+0xe9c>)
    c1fc:	ldr	r3, [pc, #264]	; (c308 <ulist_next@@Base+0xea0>)
    c1fe:	add	r2, pc
    c200:	ldr	r5, [pc, #264]	; (c30c <ulist_next@@Base+0xea4>)
    c202:	sub	sp, #60	; 0x3c
    c204:	ldr	r3, [r2, r3]
    c206:	add	r5, pc
    c208:	adds	r5, #106	; 0x6a
    c20a:	ldr	r3, [r3, #0]
    c20c:	str	r3, [sp, #52]	; 0x34
    c20e:	mov.w	r3, #0
    c212:	movs	r3, #0
    c214:	str	r3, [sp, #28]
    c216:	ldr	r3, [pc, #248]	; (c310 <ulist_next@@Base+0xea8>)
    c218:	add	r3, pc
    c21a:	str	r3, [sp, #20]
    c21c:	ldr	r3, [sp, #20]
    c21e:	add	r1, sp, #28
    c220:	ldr	r0, [r3, #28]
    c222:	bl	b468 <ulist_next@@Base>
    c226:	cmp	r0, #0
    c228:	beq.n	c2c4 <ulist_next@@Base+0xe5c>
    c22a:	ldr	r3, [pc, #232]	; (c314 <ulist_next@@Base+0xeac>)
    c22c:	ldrd	r7, r6, [r0]
    c230:	add	r3, pc
    c232:	ldr.w	r9, [r0, #8]
    c236:	vmov	s16, r3
    c23a:	mov	sl, r7
    c23c:	mov	fp, r6
    c23e:	mov	r1, fp
    c240:	mov	r0, sl
    c242:	bl	b4de <ulist_next@@Base+0x76>
    c246:	movw	r2, #590	; 0x24e
    c24a:	mov	r1, r5
    c24c:	clz	r3, r0
    c250:	mov	r8, r0
    c252:	vmov	r0, s16
    c256:	lsrs	r3, r3, #5
    c258:	bl	b6fc <ulist_next@@Base+0x294>
    c25c:	ldrd	r2, r3, [r8, #24]
    c260:	orrs.w	r1, r2, r3
    c264:	bne.n	c278 <ulist_next@@Base+0xe10>
    c266:	ldrd	r2, r3, [r8, #16]
    c26a:	cmp	fp, r3
    c26c:	it	eq
    c26e:	cmpeq	sl, r2
    c270:	beq.n	c21c <ulist_next@@Base+0xdb4>
    c272:	mov	sl, r2
    c274:	mov	fp, r3
    c276:	b.n	c23e <ulist_next@@Base+0xdd6>
    c278:	mov.w	r1, #4294967295	; 0xffffffff
    c27c:	cmp	r3, r1
    c27e:	mvn.w	r0, #7
    c282:	it	eq
    c284:	cmpeq	r2, r0
    c286:	beq.n	c21c <ulist_next@@Base+0xdb4>
    c288:	add	r1, sp, #32
    c28a:	mov	r0, r4
    c28c:	strd	r2, r3, [sp, #32]
    c290:	mov.w	r2, #4294967295	; 0xffffffff
    c294:	movs	r3, #132	; 0x84
    c296:	strb.w	r2, [sp, #41]	; 0x29
    c29a:	strb.w	r3, [sp, #40]	; 0x28
    c29e:	strb.w	r2, [sp, #42]	; 0x2a
    c2a2:	strb.w	r2, [sp, #43]	; 0x2b
    c2a6:	strb.w	r2, [sp, #44]	; 0x2c
    c2aa:	strb.w	r2, [sp, #45]	; 0x2d
    c2ae:	strb.w	r2, [sp, #46]	; 0x2e
    c2b2:	strb.w	r2, [sp, #47]	; 0x2f
    c2b6:	strb.w	r2, [sp, #48]	; 0x30
    c2ba:	bl	1d0fe <btrfs_read_fs_root@@Base>
    c2be:	mov	r1, r0
    c2c0:	cbnz	r0, c2d8 <ulist_next@@Base+0xe70>
    c2c2:	movs	r0, #2
    c2c4:	ldr	r2, [pc, #80]	; (c318 <ulist_next@@Base+0xeb0>)
    c2c6:	ldr	r3, [pc, #64]	; (c308 <ulist_next@@Base+0xea0>)
    c2c8:	add	r2, pc
    c2ca:	ldr	r3, [r2, r3]
    c2cc:	ldr	r2, [r3, #0]
    c2ce:	ldr	r3, [sp, #52]	; 0x34
    c2d0:	eors	r2, r3
    c2d2:	beq.n	c2fa <ulist_next@@Base+0xe92>
    c2d4:	blx	8510 <__stack_chk_fail@plt>
    c2d8:	cmn.w	r0, #4096	; 0x1000
    c2dc:	bhi.n	c2c2 <ulist_next@@Base+0xe5a>
    c2de:	strd	r7, r6, [sp, #8]
    c2e2:	mov	r0, r4
    c2e4:	ldrd	r2, r3, [r9, #8]
    c2e8:	strd	r2, r3, [sp]
    c2ec:	mov	r2, r7
    c2ee:	mov	r3, r6
    c2f0:	bl	c078 <ulist_next@@Base+0xc10>
    c2f4:	cmp	r0, #0
    c2f6:	beq.n	c21c <ulist_next@@Base+0xdb4>
    c2f8:	b.n	c2c4 <ulist_next@@Base+0xe5c>
    c2fa:	add	sp, #60	; 0x3c
    c2fc:	vpop	{d8}
    c300:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c304:	ldrb	r6, [r0, #14]
    c306:	movs	r5, r0
    c308:	lsls	r0, r4, #8
    c30a:	movs	r0, r0
    c30c:	bvc.n	c280 <ulist_next@@Base+0xe18>
    c30e:	movs	r2, r0
    c310:	str	r0, [sp, #304]	; 0x130
    c312:	movs	r5, r0
    c314:	bmi.n	c258 <ulist_next@@Base+0xdf0>
    c316:	movs	r2, r0
    c318:	ldrb	r4, [r7, #10]
    c31a:	movs	r5, r0

0000c31c <qgroup_set_item_count_ptr@@Base>:
    c31c:	ldr	r3, [pc, #4]	; (c324 <qgroup_set_item_count_ptr@@Base+0x8>)
    c31e:	add	r3, pc
    c320:	str	r0, [r3, #36]	; 0x24
    c322:	bx	lr
    c324:	ldrh	r6, [r0, #58]	; 0x3a
    c326:	movs	r5, r0

0000c328 <report_qgroups@@Base>:
    c328:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c32c:	mov	r5, r0
    c32e:	ldr	r4, [pc, #552]	; (c558 <report_qgroups@@Base+0x230>)
    c330:	sub	sp, #60	; 0x3c
    c332:	ldr	r3, [pc, #552]	; (c55c <report_qgroups@@Base+0x234>)
    c334:	add	r4, pc
    c336:	ldr	r3, [r4, r3]
    c338:	ldr	r3, [r3, #0]
    c33a:	cbnz	r3, c350 <report_qgroups@@Base+0x28>
    c33c:	ldr	r3, [pc, #544]	; (c560 <report_qgroups@@Base+0x238>)
    c33e:	add	r3, pc
    c340:	ldrb	r3, [r3, #8]
    c342:	lsls	r3, r3, #31
    c344:	bpl.n	c350 <report_qgroups@@Base+0x28>
    c346:	cbz	r0, c384 <report_qgroups@@Base+0x5c>
    c348:	ldr	r0, [pc, #536]	; (c564 <report_qgroups@@Base+0x23c>)
    c34a:	add	r0, pc
    c34c:	blx	865c <puts@plt+0x4>
    c350:	ldr	r6, [pc, #532]	; (c568 <report_qgroups@@Base+0x240>)
    c352:	add	r6, pc
    c354:	ldrb	r3, [r6, #8]
    c356:	and.w	r3, r3, #3
    c35a:	cmp	r3, #2
    c35c:	bne.n	c394 <report_qgroups@@Base+0x6c>
    c35e:	ldr	r0, [pc, #524]	; (c56c <report_qgroups@@Base+0x244>)
    c360:	add	r0, pc
    c362:	blx	865c <puts@plt+0x4>
    c366:	ldrb	r3, [r6, #8]
    c368:	and.w	r3, r3, #3
    c36c:	cmp	r3, #2
    c36e:	bne.n	c37e <report_qgroups@@Base+0x56>
    c370:	ldr	r3, [pc, #508]	; (c570 <report_qgroups@@Base+0x248>)
    c372:	ldr	r0, [pc, #512]	; (c574 <report_qgroups@@Base+0x24c>)
    c374:	ldr	r3, [r4, r3]
    c376:	add	r0, pc
    c378:	ldr	r1, [r3, #0]
    c37a:	blx	8968 <fputs@plt+0x4>
    c37e:	mov.w	r8, #1
    c382:	b.n	c398 <report_qgroups@@Base+0x70>
    c384:	ldr	r0, [pc, #496]	; (c578 <report_qgroups@@Base+0x250>)
    c386:	add	r0, pc
    c388:	blx	865c <puts@plt+0x4>
    c38c:	mov	r0, r5
    c38e:	add	sp, #60	; 0x3c
    c390:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c394:	mov.w	r8, #0
    c398:	ldr	r0, [pc, #480]	; (c57c <report_qgroups@@Base+0x254>)
    c39a:	movs	r7, #0
    c39c:	ldr.w	r9, [pc, #480]	; c580 <report_qgroups@@Base+0x258>
    c3a0:	add	r0, pc
    c3a2:	ldr.w	sl, [pc, #480]	; c584 <report_qgroups@@Base+0x25c>
    c3a6:	bl	1353a <rb_first@@Base>
    c3aa:	ldr	r6, [pc, #476]	; (c588 <report_qgroups@@Base+0x260>)
    c3ac:	add	r9, pc
    c3ae:	add	sl, pc
    c3b0:	add	r6, pc
    c3b2:	mov	r4, r0
    c3b4:	cbnz	r4, c3ca <report_qgroups@@Base+0xa2>
    c3b6:	cmp	r7, #0
    c3b8:	beq.w	c554 <report_qgroups@@Base+0x22c>
    c3bc:	cmp.w	r8, #0
    c3c0:	ite	ne
    c3c2:	movne	r5, #0
    c3c4:	mvneq.w	r5, #116	; 0x74
    c3c8:	b.n	c38c <report_qgroups@@Base+0x64>
    c3ca:	ldrd	r2, r0, [r4, #-16]
    c3ce:	ldrd	r3, r1, [r4, #-48]	; 0x30
    c3d2:	subs	r3, r2, r3
    c3d4:	str	r3, [sp, #24]
    c3d6:	sbc.w	r3, r0, r1
    c3da:	ldrd	r2, r0, [r4, #-32]
    c3de:	str	r3, [sp, #28]
    c3e0:	ldrd	r3, r1, [r4, #-64]	; 0x40
    c3e4:	subs	r3, r2, r3
    c3e6:	str	r3, [sp, #32]
    c3e8:	ldr	r2, [sp, #32]
    c3ea:	sbc.w	r3, r0, r1
    c3ee:	str	r3, [sp, #36]	; 0x24
    c3f0:	ldr	r3, [sp, #24]
    c3f2:	orrs	r3, r2
    c3f4:	ldr	r2, [sp, #36]	; 0x24
    c3f6:	str	r3, [sp, #40]	; 0x28
    c3f8:	ldr	r3, [sp, #28]
    c3fa:	orrs	r3, r2
    c3fc:	str	r3, [sp, #44]	; 0x2c
    c3fe:	cbnz	r5, c41c <report_qgroups@@Base+0xf4>
    c400:	ldrd	r2, r3, [sp, #40]	; 0x28
    c404:	orrs	r3, r2
    c406:	beq.w	c54a <report_qgroups@@Base+0x222>
    c40a:	ldr.w	r3, [r4, #-88]
    c40e:	cbnz	r3, c41c <report_qgroups@@Base+0xf4>
    c410:	ldrh.w	r2, [r4, #-90]
    c414:	mov	r3, r5
    c416:	orrs	r3, r2
    c418:	beq.w	c526 <report_qgroups@@Base+0x1fe>
    c41c:	ldrd	fp, ip, [sp, #40]	; 0x28
    c420:	ldrd	r0, r3, [r4, #-96]	; 0x60
    c424:	orrs.w	r1, fp, ip
    c428:	mov.w	r2, r3, lsr #16
    c42c:	uxth	r3, r3
    c42e:	bne.w	c53c <report_qgroups@@Base+0x214>
    c432:	ldr	r1, [pc, #344]	; (c58c <report_qgroups@@Base+0x264>)
    c434:	add	r1, pc
    c436:	strd	r0, r3, [sp]
    c43a:	movs	r3, #0
    c43c:	str	r1, [sp, #8]
    c43e:	movs	r0, #1
    c440:	mov	r1, sl
    c442:	blx	8838 <__printf_chk@plt+0x4>
    c446:	ldrd	r2, r3, [r4, #-24]
    c44a:	str	r6, [sp, #8]
    c44c:	movs	r0, #1
    c44e:	ldr	r1, [pc, #320]	; (c590 <report_qgroups@@Base+0x268>)
    c450:	strd	r2, r3, [sp, #16]
    c454:	ldrd	r2, r3, [r4, #-32]
    c458:	add	r1, pc
    c45a:	str	r1, [sp, #52]	; 0x34
    c45c:	strd	r2, r3, [sp]
    c460:	mov	r3, r6
    c462:	ldr	r2, [pc, #304]	; (c594 <report_qgroups@@Base+0x26c>)
    c464:	add	r2, pc
    c466:	blx	8838 <__printf_chk@plt+0x4>
    c46a:	ldrd	r2, r3, [r4, #-56]	; 0x38
    c46e:	str	r6, [sp, #8]
    c470:	movs	r0, #1
    c472:	ldr	r1, [sp, #52]	; 0x34
    c474:	strd	r2, r3, [sp, #16]
    c478:	ldrd	r2, r3, [r4, #-64]	; 0x40
    c47c:	strd	r2, r3, [sp]
    c480:	mov	r3, r6
    c482:	ldr	r2, [pc, #276]	; (c598 <report_qgroups@@Base+0x270>)
    c484:	add	r2, pc
    c486:	blx	8838 <__printf_chk@plt+0x4>
    c48a:	ldrd	r2, r3, [sp, #32]
    c48e:	orrs	r3, r2
    c490:	beq.n	c4b0 <report_qgroups@@Base+0x188>
    c492:	ldrd	r2, r3, [sp, #32]
    c496:	movs	r0, #1
    c498:	ldr	r1, [pc, #256]	; (c59c <report_qgroups@@Base+0x274>)
    c49a:	str	r6, [sp, #8]
    c49c:	strd	r2, r3, [sp, #16]
    c4a0:	add	r1, pc
    c4a2:	strd	r2, r3, [sp]
    c4a6:	mov	r3, r6
    c4a8:	ldr	r2, [pc, #244]	; (c5a0 <report_qgroups@@Base+0x278>)
    c4aa:	add	r2, pc
    c4ac:	blx	8838 <__printf_chk@plt+0x4>
    c4b0:	ldrd	r2, r3, [r4, #-8]
    c4b4:	movs	r0, #1
    c4b6:	ldr.w	fp, [pc, #236]	; c5a4 <report_qgroups@@Base+0x27c>
    c4ba:	ldr	r1, [pc, #236]	; (c5a8 <report_qgroups@@Base+0x280>)
    c4bc:	add	fp, pc
    c4be:	strd	r2, r3, [sp, #16]
    c4c2:	str.w	fp, [sp, #8]
    c4c6:	add	r1, pc
    c4c8:	ldrd	r2, r3, [r4, #-16]
    c4cc:	str	r1, [sp, #52]	; 0x34
    c4ce:	strd	r2, r3, [sp]
    c4d2:	mov	r3, fp
    c4d4:	ldr	r2, [pc, #212]	; (c5ac <report_qgroups@@Base+0x284>)
    c4d6:	add	r2, pc
    c4d8:	blx	8838 <__printf_chk@plt+0x4>
    c4dc:	ldrd	r2, r3, [r4, #-40]	; 0x28
    c4e0:	str.w	fp, [sp, #8]
    c4e4:	movs	r0, #1
    c4e6:	ldr	r1, [sp, #52]	; 0x34
    c4e8:	strd	r2, r3, [sp, #16]
    c4ec:	ldrd	r2, r3, [r4, #-48]	; 0x30
    c4f0:	strd	r2, r3, [sp]
    c4f4:	mov	r3, fp
    c4f6:	ldr	r2, [pc, #184]	; (c5b0 <report_qgroups@@Base+0x288>)
    c4f8:	add	r2, pc
    c4fa:	blx	8838 <__printf_chk@plt+0x4>
    c4fe:	ldrd	r2, r3, [sp, #24]
    c502:	orrs	r3, r2
    c504:	beq.n	c542 <report_qgroups@@Base+0x21a>
    c506:	ldrd	r2, r3, [sp, #24]
    c50a:	movs	r0, #1
    c50c:	ldr	r1, [pc, #164]	; (c5b4 <report_qgroups@@Base+0x28c>)
    c50e:	str.w	fp, [sp, #8]
    c512:	strd	r2, r3, [sp, #16]
    c516:	add	r1, pc
    c518:	strd	r2, r3, [sp]
    c51c:	mov	r3, fp
    c51e:	ldr	r2, [pc, #152]	; (c5b8 <report_qgroups@@Base+0x290>)
    c520:	add	r2, pc
    c522:	blx	8838 <__printf_chk@plt+0x4>
    c526:	ldr.w	r2, [r9, #4]
    c52a:	add.w	r3, r4, #40	; 0x28
    c52e:	movs	r7, #1
    c530:	str.w	r3, [r9, #4]
    c534:	strd	r9, r2, [r4, #40]	; 0x28
    c538:	str	r3, [r2, #0]
    c53a:	b.n	c54a <report_qgroups@@Base+0x222>
    c53c:	ldr	r1, [pc, #124]	; (c5bc <report_qgroups@@Base+0x294>)
    c53e:	add	r1, pc
    c540:	b.n	c436 <report_qgroups@@Base+0x10e>
    c542:	ldrd	r2, r3, [sp, #40]	; 0x28
    c546:	orrs	r3, r2
    c548:	bne.n	c526 <report_qgroups@@Base+0x1fe>
    c54a:	mov	r0, r4
    c54c:	bl	1355a <rb_next@@Base>
    c550:	mov	r4, r0
    c552:	b.n	c3b4 <report_qgroups@@Base+0x8c>
    c554:	mov	r5, r7
    c556:	b.n	c38c <report_qgroups@@Base+0x64>
    c558:	ldrb	r0, [r2, #9]
    c55a:	movs	r5, r0
    c55c:	lsls	r0, r0, #9
    c55e:	movs	r0, r0
    c560:	ldrh	r6, [r4, #56]	; 0x38
    c562:	movs	r5, r0
    c564:	bcc.n	c4a8 <report_qgroups@@Base+0x180>
    c566:	movs	r2, r0
    c568:	ldrh	r2, [r2, #56]	; 0x38
    c56a:	movs	r5, r0
    c56c:	bmi.n	c57a <report_qgroups@@Base+0x252>
    c56e:	movs	r2, r0
    c570:	lsls	r0, r6, #8
    c572:	movs	r0, r0
    c574:	bmi.n	c5f2 <free_qgroup_counts@@Base+0x32>
    c576:	movs	r2, r0
    c578:	bcc.n	c4cc <report_qgroups@@Base+0x1a4>
    c57a:	movs	r2, r0
    c57c:	ldrh	r4, [r0, #54]	; 0x36
    c57e:	movs	r5, r0
    c580:	ldrb	r0, [r3, #20]
    c582:	movs	r5, r0
    c584:	bmi.n	c5da <free_qgroup_counts@@Base+0x1a>
    c586:	movs	r2, r0
    c588:	bmi.n	c622 <free_qgroup_counts@@Base+0x62>
    c58a:	movs	r2, r0
    c58c:	bne.n	c542 <report_qgroups@@Base+0x21a>
    c58e:	movs	r2, r0
    c590:	bcc.n	c4fa <report_qgroups@@Base+0x1d2>
    c592:	movs	r2, r0
    c594:	bcc.n	c4dc <report_qgroups@@Base+0x1b4>
    c596:	movs	r2, r0
    c598:	bcc.n	c4ea <report_qgroups@@Base+0x1c2>
    c59a:	movs	r2, r0
    c59c:	bcc.n	c4ce <report_qgroups@@Base+0x1a6>
    c59e:	movs	r2, r0
    c5a0:	bcc.n	c4b2 <report_qgroups@@Base+0x18a>
    c5a2:	movs	r2, r0
    c5a4:	bcc.n	c4de <report_qgroups@@Base+0x1b6>
    c5a6:	movs	r2, r0
    c5a8:	bcc.n	c636 <free_qgroup_counts@@Base+0x76>
    c5aa:	movs	r2, r0
    c5ac:	bcc.n	c610 <free_qgroup_counts@@Base+0x50>
    c5ae:	movs	r2, r0
    c5b0:	bcc.n	c61a <free_qgroup_counts@@Base+0x5a>
    c5b2:	movs	r2, r0
    c5b4:	bcc.n	c5fa <free_qgroup_counts@@Base+0x3a>
    c5b6:	movs	r2, r0
    c5b8:	bcc.n	c5de <free_qgroup_counts@@Base+0x1e>
    c5ba:	movs	r2, r0
    c5bc:	bne.n	c4fc <report_qgroups@@Base+0x1d4>
    c5be:	movs	r2, r0

0000c5c0 <free_qgroup_counts@@Base>:
    c5c0:	ldr	r0, [pc, #144]	; (c654 <free_qgroup_counts@@Base+0x94>)
    c5c2:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    c5c6:	add	r0, pc
    c5c8:	bl	1353a <rb_first@@Base>
    c5cc:	ldr	r6, [pc, #136]	; (c658 <free_qgroup_counts@@Base+0x98>)
    c5ce:	add	r6, pc
    c5d0:	mov	r4, r0
    c5d2:	cbnz	r4, c5d8 <free_qgroup_counts@@Base+0x18>
    c5d4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    c5d8:	add.w	r0, r4, #40	; 0x28
    c5dc:	mov	r5, r4
    c5de:	bl	b488 <ulist_next@@Base+0x20>
    c5e2:	ldr.w	r1, [r5, #12]!
    c5e6:	sub.w	r7, r4, #96	; 0x60
    c5ea:	ldr.w	r8, [r1]
    c5ee:	cmp	r1, r5
    c5f0:	bne.n	c61a <free_qgroup_counts@@Base+0x5a>
    c5f2:	mov	r5, r4
    c5f4:	ldr.w	r1, [r5, #20]!
    c5f8:	ldr.w	r8, [r1]
    c5fc:	cmp	r1, r5
    c5fe:	bne.n	c636 <free_qgroup_counts@@Base+0x76>
    c600:	mov	r0, r4
    c602:	bl	1355a <rb_next@@Base>
    c606:	mov	r1, r6
    c608:	mov	r5, r0
    c60a:	mov	r0, r4
    c60c:	bl	132c4 <rb_erase@@Base>
    c610:	mov	r0, r7
    c612:	blx	8434 <free@plt+0x4>
    c616:	mov	r4, r5
    c618:	b.n	c5d2 <free_qgroup_counts@@Base+0x12>
    c61a:	mov	r0, r1
    c61c:	bl	b488 <ulist_next@@Base+0x20>
    c620:	add.w	r0, r1, #8
    c624:	bl	b488 <ulist_next@@Base+0x20>
    c628:	mov	r0, r1
    c62a:	blx	8434 <free@plt+0x4>
    c62e:	mov	r1, r8
    c630:	ldr.w	r8, [r8]
    c634:	b.n	c5ee <free_qgroup_counts@@Base+0x2e>
    c636:	mov	r0, r1
    c638:	bl	b488 <ulist_next@@Base+0x20>
    c63c:	add.w	r0, r1, #8
    c640:	bl	b488 <ulist_next@@Base+0x20>
    c644:	mov	r0, r1
    c646:	blx	8434 <free@plt+0x4>
    c64a:	mov	r1, r8
    c64c:	ldr.w	r8, [r8]
    c650:	b.n	c5fc <free_qgroup_counts@@Base+0x3c>
    c652:	nop
    c654:	ldrh	r6, [r3, #36]	; 0x24
    c656:	movs	r5, r0
    c658:	ldrh	r6, [r2, #36]	; 0x24
    c65a:	movs	r5, r0

0000c65c <qgroup_verify_all@@Base>:
    c65c:	ldr	r2, [pc, #956]	; (ca1c <qgroup_verify_all@@Base+0x3c0>)
    c65e:	ldr	r3, [pc, #960]	; (ca20 <qgroup_verify_all@@Base+0x3c4>)
    c660:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c664:	add	r2, pc
    c666:	ldrb.w	r4, [r0, #364]	; 0x16c
    c66a:	mov	r9, r0
    c66c:	ldr.w	r8, [pc, #948]	; ca24 <qgroup_verify_all@@Base+0x3c8>
    c670:	sub	sp, #196	; 0xc4
    c672:	ldr	r3, [r2, r3]
    c674:	ands.w	r0, r4, #16
    c678:	add	r8, pc
    c67a:	ldr	r3, [r3, #0]
    c67c:	str	r3, [sp, #188]	; 0xbc
    c67e:	mov.w	r3, #0
    c682:	beq.w	ca0e <qgroup_verify_all@@Base+0x3b2>
    c686:	movs	r0, #0
    c688:	bl	b268 <ulist_alloc@@Base>
    c68c:	ldr	r3, [pc, #920]	; (ca28 <qgroup_verify_all@@Base+0x3cc>)
    c68e:	add	r3, pc
    c690:	str	r0, [r3, #28]
    c692:	cbnz	r0, c6bc <qgroup_verify_all@@Base+0x60>
    c694:	ldr	r3, [pc, #916]	; (ca2c <qgroup_verify_all@@Base+0x3d0>)
    c696:	movs	r4, #12
    c698:	ldr	r0, [pc, #916]	; (ca30 <qgroup_verify_all@@Base+0x3d4>)
    c69a:	ldr.w	r3, [r8, r3]
    c69e:	add	r0, pc
    c6a0:	ldr	r1, [r3, #0]
    c6a2:	blx	8968 <fputs@plt+0x4>
    c6a6:	ldr	r2, [pc, #908]	; (ca34 <qgroup_verify_all@@Base+0x3d8>)
    c6a8:	ldr	r3, [pc, #884]	; (ca20 <qgroup_verify_all@@Base+0x3c4>)
    c6aa:	add	r2, pc
    c6ac:	ldr	r3, [r2, r3]
    c6ae:	ldr	r2, [r3, #0]
    c6b0:	ldr	r3, [sp, #188]	; 0xbc
    c6b2:	eors	r2, r3
    c6b4:	beq.w	ca12 <qgroup_verify_all@@Base+0x3b6>
    c6b8:	blx	8510 <__stack_chk_fail@plt>
    c6bc:	ldr.w	r3, [r9, #44]	; 0x2c
    c6c0:	mov.w	fp, #0
    c6c4:	mov.w	sl, #2
    c6c8:	mov	r6, fp
    c6ca:	str	r3, [sp, #40]	; 0x28
    c6cc:	ldr	r3, [pc, #872]	; (ca38 <qgroup_verify_all@@Base+0x3dc>)
    c6ce:	add	r3, pc
    c6d0:	str	r3, [sp, #52]	; 0x34
    c6d2:	add	r3, sp, #120	; 0x78
    c6d4:	str	r3, [sp, #8]
    c6d6:	mov	r0, r3
    c6d8:	bl	1753c <btrfs_init_path@@Base>
    c6dc:	ldr	r3, [sp, #8]
    c6de:	strb.w	r6, [sp, #69]	; 0x45
    c6e2:	strb.w	r6, [sp, #70]	; 0x46
    c6e6:	strb.w	r6, [sp, #71]	; 0x47
    c6ea:	strb.w	r6, [sp, #72]	; 0x48
    c6ee:	strb.w	r6, [sp, #73]	; 0x49
    c6f2:	strb.w	r6, [sp, #74]	; 0x4a
    c6f6:	strb.w	r6, [sp, #75]	; 0x4b
    c6fa:	strb.w	r6, [sp, #76]	; 0x4c
    c6fe:	cmp.w	fp, #0
    c702:	bne.n	c790 <qgroup_verify_all@@Base+0x134>
    c704:	movs	r2, #246	; 0xf6
    c706:	mov	r1, fp
    c708:	strd	r2, r1, [sp, #60]	; 0x3c
    c70c:	movs	r0, #0
    c70e:	movs	r2, #0
    c710:	ldr	r1, [sp, #40]	; 0x28
    c712:	strd	r2, r2, [sp]
    c716:	add	r2, sp, #60	; 0x3c
    c718:	strb.w	r6, [sp, #68]	; 0x44
    c71c:	bl	19930 <btrfs_search_slot@@Base>
    c720:	subs	r4, r0, #0
    c722:	blt.n	c796 <qgroup_verify_all@@Base+0x13a>
    c724:	ldr	r3, [pc, #788]	; (ca3c <qgroup_verify_all@@Base+0x3e0>)
    c726:	add	r3, pc
    c728:	str	r3, [sp, #36]	; 0x24
    c72a:	ldr	r3, [sp, #120]	; 0x78
    c72c:	str	r3, [sp, #20]
    c72e:	ldr.w	r3, [r3, #192]	; 0xc0
    c732:	str	r3, [sp, #44]	; 0x2c
    c734:	ldr	r3, [sp, #20]
    c736:	adds	r3, #197	; 0xc5
    c738:	str	r3, [sp, #28]
    c73a:	movs	r3, #0
    c73c:	str	r3, [sp, #24]
    c73e:	ldr	r3, [pc, #768]	; (ca40 <qgroup_verify_all@@Base+0x3e4>)
    c740:	add	r3, pc
    c742:	str	r3, [sp, #32]
    c744:	ldr	r3, [sp, #44]	; 0x2c
    c746:	ldr	r2, [sp, #24]
    c748:	cmp	r3, r2
    c74a:	bgt.n	c7d2 <qgroup_verify_all@@Base+0x176>
    c74c:	ldr	r3, [sp, #40]	; 0x28
    c74e:	add	r4, sp, #120	; 0x78
    c750:	strb.w	r6, [sp, #185]	; 0xb9
    c754:	mov	r1, r4
    c756:	ldr.w	r0, [r3, #464]	; 0x1d0
    c75a:	bl	1ad64 <btrfs_next_sibling_tree_block@@Base>
    c75e:	cmp	r0, #0
    c760:	beq.n	c72a <qgroup_verify_all@@Base+0xce>
    c762:	mov	r0, r4
    c764:	mov.w	fp, #1
    c768:	bl	1754c <btrfs_release_path@@Base>
    c76c:	cmp	sl, fp
    c76e:	bne.n	c78c <qgroup_verify_all@@Base+0x130>
    c770:	mov	r0, r9
    c772:	bl	bcd0 <ulist_next@@Base+0x868>
    c776:	mov	r4, r0
    c778:	cmp	r0, #0
    c77a:	beq.w	c9e8 <qgroup_verify_all@@Base+0x38c>
    c77e:	ldr	r3, [pc, #684]	; (ca2c <qgroup_verify_all@@Base+0x3d0>)
    c780:	ldr	r2, [pc, #704]	; (ca44 <qgroup_verify_all@@Base+0x3e8>)
    c782:	ldr.w	r0, [r8, r3]
    c786:	add	r2, pc
    c788:	mov	r3, r4
    c78a:	b.n	c7b6 <qgroup_verify_all@@Base+0x15a>
    c78c:	mov	sl, fp
    c78e:	b.n	c6d2 <qgroup_verify_all@@Base+0x76>
    c790:	movs	r2, #0
    c792:	mov	r1, r2
    c794:	b.n	c708 <qgroup_verify_all@@Base+0xac>
    c796:	ldr	r3, [pc, #660]	; (ca2c <qgroup_verify_all@@Base+0x3d0>)
    c798:	movs	r1, #1
    c79a:	ldr	r2, [pc, #684]	; (ca48 <qgroup_verify_all@@Base+0x3ec>)
    c79c:	ldr.w	r0, [r8, r3]
    c7a0:	add	r2, pc
    c7a2:	mov	r3, r4
    c7a4:	ldr	r0, [r0, #0]
    c7a6:	blx	8860 <__fprintf_chk@plt+0x4>
    c7aa:	ldr	r3, [pc, #640]	; (ca2c <qgroup_verify_all@@Base+0x3d0>)
    c7ac:	ldr	r2, [pc, #668]	; (ca4c <qgroup_verify_all@@Base+0x3f0>)
    c7ae:	add	r2, pc
    c7b0:	ldr.w	r0, [r8, r3]
    c7b4:	mov	r3, r4
    c7b6:	ldr	r0, [r0, #0]
    c7b8:	movs	r1, #1
    c7ba:	blx	8860 <__fprintf_chk@plt+0x4>
    c7be:	bl	b634 <ulist_next@@Base+0x1cc>
    c7c2:	ldr	r0, [pc, #652]	; (ca50 <qgroup_verify_all@@Base+0x3f4>)
    c7c4:	ldr	r1, [pc, #652]	; (ca54 <qgroup_verify_all@@Base+0x3f8>)
    c7c6:	add	r0, pc
    c7c8:	add	r1, pc
    c7ca:	adds	r0, #24
    c7cc:	bl	16ff2 <rb_free_nodes@@Base>
    c7d0:	b.n	c6a6 <qgroup_verify_all@@Base+0x4a>
    c7d2:	ldr	r3, [sp, #24]
    c7d4:	movs	r2, #25
    c7d6:	add	r7, sp, #100	; 0x64
    c7d8:	ldr	r0, [sp, #20]
    c7da:	muls	r2, r3
    c7dc:	mov	r1, r7
    c7de:	movs	r3, #17
    c7e0:	adds	r2, #101	; 0x65
    c7e2:	bl	16a0e <read_extent_buffer@@Base>
    c7e6:	ldr.w	r3, [sp, #109]	; 0x6d
    c7ea:	ldrd	r0, r1, [sp, #100]	; 0x64
    c7ee:	str	r3, [sp, #8]
    c7f0:	ldr.w	r3, [sp, #113]	; 0x71
    c7f4:	strd	r0, r1, [sp, #60]	; 0x3c
    c7f8:	str	r3, [sp, #12]
    c7fa:	ldr	r3, [sp, #8]
    c7fc:	str.w	r3, [sp, #69]	; 0x45
    c800:	ldr	r3, [sp, #12]
    c802:	str.w	r3, [sp, #73]	; 0x49
    c806:	ldrb.w	r3, [sp, #108]	; 0x6c
    c80a:	strb.w	r3, [sp, #68]	; 0x44
    c80e:	cmp.w	fp, #0
    c812:	beq.n	c884 <qgroup_verify_all@@Base+0x228>
    c814:	cmp	r3, #246	; 0xf6
    c816:	bne.n	c862 <qgroup_verify_all@@Base+0x206>
    c818:	ldrd	r3, r4, [sp, #8]
    c81c:	cmp	r4, r1
    c81e:	it	eq
    c820:	cmpeq	r3, r0
    c822:	bcc.n	c862 <qgroup_verify_all@@Base+0x206>
    c824:	bl	b4a4 <ulist_next@@Base+0x3c>
    c828:	mov	r5, r0
    c82a:	ldrd	r0, r1, [sp, #8]
    c82e:	bl	b4a4 <ulist_next@@Base+0x3c>
    c832:	mov	r4, r0
    c834:	cbz	r5, c870 <qgroup_verify_all@@Base+0x214>
    c836:	cbz	r0, c870 <qgroup_verify_all@@Base+0x214>
    c838:	movs	r1, #24
    c83a:	movs	r0, #1
    c83c:	blx	839c <calloc@plt+0x4>
    c840:	cbz	r0, c87e <qgroup_verify_all@@Base+0x222>
    c842:	strd	r4, r5, [r0, #16]
    c846:	adds	r5, #108	; 0x6c
    c848:	ldr	r3, [r5, #4]
    c84a:	add.w	r1, r0, #8
    c84e:	str	r0, [r5, #4]
    c850:	adds	r4, #116	; 0x74
    c852:	strd	r5, r3, [r0]
    c856:	str	r0, [r3, #0]
    c858:	ldr	r2, [r4, #4]
    c85a:	str	r1, [r4, #4]
    c85c:	strd	r4, r2, [r0, #8]
    c860:	str	r1, [r2, #0]
    c862:	ldr	r3, [sp, #24]
    c864:	adds	r3, #1
    c866:	str	r3, [sp, #24]
    c868:	ldr	r3, [sp, #28]
    c86a:	adds	r3, #25
    c86c:	str	r3, [sp, #28]
    c86e:	b.n	c744 <qgroup_verify_all@@Base+0xe8>
    c870:	mvn.w	r4, #1
    c874:	ldr	r0, [pc, #480]	; (ca58 <qgroup_verify_all@@Base+0x3fc>)
    c876:	add	r0, pc
    c878:	bl	16b70 <__btrfs_error@@Base>
    c87c:	b.n	c7aa <qgroup_verify_all@@Base+0x14e>
    c87e:	mvn.w	r4, #11
    c882:	b.n	c874 <qgroup_verify_all@@Base+0x218>
    c884:	cmp	r3, #240	; 0xf0
    c886:	bne.n	c8b6 <qgroup_verify_all@@Base+0x25a>
    c888:	ldr	r3, [sp, #28]
    c88a:	ldr	r2, [sp, #20]
    c88c:	ldr	r1, [sp, #32]
    c88e:	ldr.w	r3, [r3, #17]
    c892:	add	r3, r2
    c894:	ldrb	r1, [r1, #8]
    c896:	ldr.w	r2, [r3, #213]	; 0xd5
    c89a:	bic.w	r1, r1, #3
    c89e:	ubfx	r2, r2, #1, #2
    c8a2:	orrs	r2, r1
    c8a4:	ldr	r1, [sp, #32]
    c8a6:	strb	r2, [r1, #8]
    c8a8:	ldr.w	r2, [r3, #221]	; 0xdd
    c8ac:	ldr.w	r3, [r3, #225]	; 0xe1
    c8b0:	str	r2, [r1, #16]
    c8b2:	str	r3, [r1, #20]
    c8b4:	b.n	c862 <qgroup_verify_all@@Base+0x206>
    c8b6:	cmp	r3, #242	; 0xf2
    c8b8:	bne.n	c862 <qgroup_verify_all@@Base+0x206>
    c8ba:	ldr	r3, [sp, #20]
    c8bc:	movs	r1, #144	; 0x90
    c8be:	movs	r0, #1
    c8c0:	adds	r3, #96	; 0x60
    c8c2:	str	r3, [sp, #48]	; 0x30
    c8c4:	ldr	r3, [sp, #28]
    c8c6:	ldr.w	r5, [r3, #17]
    c8ca:	blx	839c <calloc@plt+0x4>
    c8ce:	adds	r5, #101	; 0x65
    c8d0:	mov	r4, r0
    c8d2:	cmp	r0, #0
    c8d4:	beq.n	c9d4 <qgroup_verify_all@@Base+0x378>
    c8d6:	ldrd	r2, r3, [sp, #8]
    c8da:	mov	ip, r0
    c8dc:	strd	r2, r3, [ip], #12
    c8e0:	ldmia	r7!, {r0, r1, r2, r3}
    c8e2:	stmia.w	ip!, {r0, r1, r2, r3}
    c8e6:	ldr	r3, [r7, #0]
    c8e8:	strb.w	r3, [ip]
    c8ec:	ldr	r3, [sp, #48]	; 0x30
    c8ee:	add	r3, r5
    c8f0:	ldr	r2, [r3, #8]
    c8f2:	mov	r5, r3
    c8f4:	ldr	r3, [r3, #12]
    c8f6:	strd	r2, r3, [r4, #32]
    c8fa:	ldr	r2, [r5, #16]
    c8fc:	ldr	r3, [r5, #20]
    c8fe:	strd	r2, r3, [r4, #40]	; 0x28
    c902:	ldr	r2, [r5, #24]
    c904:	ldr	r3, [r5, #28]
    c906:	strd	r2, r3, [r4, #48]	; 0x30
    c90a:	ldr	r2, [r5, #32]
    c90c:	ldr	r3, [r5, #36]	; 0x24
    c90e:	mov	r5, fp
    c910:	strd	r2, r3, [r4, #56]	; 0x38
    c914:	add.w	r3, r4, #108	; 0x6c
    c918:	strd	r3, r3, [r4, #108]	; 0x6c
    c91c:	add.w	r3, r4, #116	; 0x74
    c920:	strd	r3, r3, [r4, #116]	; 0x74
    c924:	add.w	r3, r4, #136	; 0x88
    c928:	ldr	r2, [sp, #52]	; 0x34
    c92a:	strd	r3, r3, [r4, #136]	; 0x88
    c92e:	ldr	r7, [r2, #0]
    c930:	cmp	r7, #0
    c932:	bne.n	c9a6 <qgroup_verify_all@@Base+0x34a>
    c934:	ldr	r1, [sp, #36]	; 0x24
    c936:	ldr	r0, [sp, #36]	; 0x24
    c938:	strd	r5, r7, [r4, #96]	; 0x60
    c93c:	ldr	r1, [r1, #4]
    c93e:	str	r7, [r4, #104]	; 0x68
    c940:	adds	r1, #1
    c942:	str	r1, [r0, #4]
    c944:	add.w	r0, r4, #96	; 0x60
    c948:	ldr	r1, [sp, #36]	; 0x24
    c94a:	str	r0, [r2, #0]
    c94c:	bl	1321e <rb_insert_color@@Base>
    c950:	ldr.w	r2, [sp, #69]	; 0x45
    c954:	ldr.w	r3, [sp, #73]	; 0x49
    c958:	add	r1, sp, #80	; 0x50
    c95a:	mov	r0, r9
    c95c:	strd	r2, r3, [sp, #80]	; 0x50
    c960:	mov.w	r2, #4294967295	; 0xffffffff
    c964:	movs	r3, #132	; 0x84
    c966:	strb.w	r2, [sp, #89]	; 0x59
    c96a:	strb.w	r3, [sp, #88]	; 0x58
    c96e:	strb.w	r2, [sp, #90]	; 0x5a
    c972:	strb.w	r2, [sp, #91]	; 0x5b
    c976:	strb.w	r2, [sp, #92]	; 0x5c
    c97a:	strb.w	r2, [sp, #93]	; 0x5d
    c97e:	strb.w	r2, [sp, #94]	; 0x5e
    c982:	strb.w	r2, [sp, #95]	; 0x5f
    c986:	strb.w	r2, [sp, #96]	; 0x60
    c98a:	bl	1cffc <btrfs_read_fs_root_no_cache@@Base>
    c98e:	cmp	r0, #0
    c990:	beq.w	c862 <qgroup_verify_all@@Base+0x206>
    c994:	cmn.w	r0, #4096	; 0x1000
    c998:	bhi.w	c862 <qgroup_verify_all@@Base+0x206>
    c99c:	movs	r3, #1
    c99e:	str	r3, [r4, #8]
    c9a0:	bl	1bce2 <btrfs_free_fs_root@@Base>
    c9a4:	b.n	c862 <qgroup_verify_all@@Base+0x206>
    c9a6:	ldrd	r0, r1, [r7, #-96]	; 0x60
    c9aa:	ldrd	r2, r3, [sp, #8]
    c9ae:	cmp	r3, r1
    c9b0:	it	eq
    c9b2:	cmpeq	r2, r0
    c9b4:	bcs.n	c9be <qgroup_verify_all@@Base+0x362>
    c9b6:	add.w	r2, r7, #8
    c9ba:	mov	r5, r7
    c9bc:	b.n	c92e <qgroup_verify_all@@Base+0x2d2>
    c9be:	ldrd	r2, r3, [sp, #8]
    c9c2:	cmp	r1, r3
    c9c4:	it	eq
    c9c6:	cmpeq	r0, r2
    c9c8:	bcs.n	c9ce <qgroup_verify_all@@Base+0x372>
    c9ca:	adds	r2, r7, #4
    c9cc:	b.n	c9ba <qgroup_verify_all@@Base+0x35e>
    c9ce:	mov	r0, r4
    c9d0:	blx	8434 <free@plt+0x4>
    c9d4:	ldr	r3, [pc, #84]	; (ca2c <qgroup_verify_all@@Base+0x3d0>)
    c9d6:	movs	r4, #12
    c9d8:	ldr	r0, [pc, #128]	; (ca5c <qgroup_verify_all@@Base+0x400>)
    c9da:	ldr.w	r3, [r8, r3]
    c9de:	add	r0, pc
    c9e0:	ldr	r1, [r3, #0]
    c9e2:	blx	8968 <fputs@plt+0x4>
    c9e6:	b.n	c7aa <qgroup_verify_all@@Base+0x14e>
    c9e8:	mov	r0, r9
    c9ea:	bl	c1f0 <ulist_next@@Base+0xd88>
    c9ee:	mov	r4, r0
    c9f0:	cbz	r0, ca00 <qgroup_verify_all@@Base+0x3a4>
    c9f2:	ldr	r3, [pc, #56]	; (ca2c <qgroup_verify_all@@Base+0x3d0>)
    c9f4:	ldr	r2, [pc, #104]	; (ca60 <qgroup_verify_all@@Base+0x404>)
    c9f6:	ldr.w	r0, [r8, r3]
    c9fa:	add	r2, pc
    c9fc:	mov	r3, r4
    c9fe:	b.n	c7b6 <qgroup_verify_all@@Base+0x15a>
    ca00:	movs	r2, #0
    ca02:	movs	r3, #0
    ca04:	mov	r0, sl
    ca06:	bl	b71c <ulist_next@@Base+0x2b4>
    ca0a:	mov	r4, r0
    ca0c:	b.n	c7be <qgroup_verify_all@@Base+0x162>
    ca0e:	mov	r4, r0
    ca10:	b.n	c6a6 <qgroup_verify_all@@Base+0x4a>
    ca12:	mov	r0, r4
    ca14:	add	sp, #196	; 0xc4
    ca16:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ca1a:	nop
    ca1c:	strb	r0, [r4, #28]
    ca1e:	movs	r5, r0
    ca20:	lsls	r0, r4, #8
    ca22:	movs	r0, r0
    ca24:	strb	r4, [r1, #28]
    ca26:	movs	r5, r0
    ca28:	ldrh	r6, [r2, #30]
    ca2a:	movs	r5, r0
    ca2c:	lsls	r0, r6, #8
    ca2e:	movs	r0, r0
    ca30:	bne.n	c9ba <qgroup_verify_all@@Base+0x35e>
    ca32:	movs	r2, r0
    ca34:	strb	r2, [r3, #27]
    ca36:	movs	r5, r0
    ca38:	ldrh	r6, [r2, #28]
    ca3a:	movs	r5, r0
    ca3c:	ldrh	r6, [r7, #24]
    ca3e:	movs	r5, r0
    ca40:	ldrh	r4, [r4, #24]
    ca42:	movs	r5, r0
    ca44:	bne.n	caee <print_extent_state@@Base+0x8a>
    ca46:	movs	r2, r0
    ca48:	ldmia	r6, {r0, r4, r6, r7}
    ca4a:	movs	r2, r0
    ca4c:	bne.n	ca5a <qgroup_verify_all@@Base+0x3fe>
    ca4e:	movs	r2, r0
    ca50:	ldrh	r6, [r3, #20]
    ca52:	movs	r5, r0
    ca54:	stc	15, cr15, [sp, #-1020]	; 0xfffffc04
    ca58:	beq.n	ca8e <print_extent_state@@Base+0x2a>
    ca5a:	movs	r2, r0
    ca5c:	ldmia	r6!, {r0, r1, r2, r3, r4, r5, r7}
    ca5e:	movs	r2, r0
    ca60:	ldmia	r7!, {r1, r2}
    ca62:	movs	r2, r0

0000ca64 <print_extent_state@@Base>:
    ca64:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    ca68:	mov	r6, r0
    ca6a:	movs	r0, #0
    ca6c:	mov	r7, r3
    ca6e:	mov	r8, r2
    ca70:	bl	b268 <ulist_alloc@@Base>
    ca74:	ldr	r3, [pc, #124]	; (caf4 <print_extent_state@@Base+0x90>)
    ca76:	ldr	r5, [pc, #128]	; (caf8 <print_extent_state@@Base+0x94>)
    ca78:	add	r3, pc
    ca7a:	add	r5, pc
    ca7c:	str	r0, [r3, #28]
    ca7e:	cbnz	r0, ca96 <print_extent_state@@Base+0x32>
    ca80:	ldr	r3, [pc, #120]	; (cafc <print_extent_state@@Base+0x98>)
    ca82:	movs	r4, #12
    ca84:	ldr	r0, [pc, #120]	; (cb00 <print_extent_state@@Base+0x9c>)
    ca86:	ldr	r3, [r5, r3]
    ca88:	add	r0, pc
    ca8a:	ldr	r1, [r3, #0]
    ca8c:	blx	8968 <fputs@plt+0x4>
    ca90:	mov	r0, r4
    ca92:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ca96:	mov	r0, r6
    ca98:	bl	bcd0 <ulist_next@@Base+0x868>
    ca9c:	mov	r4, r0
    ca9e:	cbz	r0, cac6 <print_extent_state@@Base+0x62>
    caa0:	ldr	r3, [pc, #88]	; (cafc <print_extent_state@@Base+0x98>)
    caa2:	ldr	r2, [pc, #96]	; (cb04 <print_extent_state@@Base+0xa0>)
    caa4:	add	r2, pc
    caa6:	ldr	r0, [r5, r3]
    caa8:	mov	r3, r4
    caaa:	ldr	r0, [r0, #0]
    caac:	movs	r1, #1
    caae:	blx	8860 <__fprintf_chk@plt+0x4>
    cab2:	bl	b634 <ulist_next@@Base+0x1cc>
    cab6:	ldr	r0, [pc, #80]	; (cb08 <print_extent_state@@Base+0xa4>)
    cab8:	ldr	r1, [pc, #80]	; (cb0c <print_extent_state@@Base+0xa8>)
    caba:	add	r0, pc
    cabc:	add	r1, pc
    cabe:	adds	r0, #24
    cac0:	bl	16ff2 <rb_free_nodes@@Base>
    cac4:	b.n	ca90 <print_extent_state@@Base+0x2c>
    cac6:	mov	r0, r6
    cac8:	bl	c1f0 <ulist_next@@Base+0xd88>
    cacc:	mov	r4, r0
    cace:	cbz	r0, cadc <print_extent_state@@Base+0x78>
    cad0:	ldr	r3, [pc, #40]	; (cafc <print_extent_state@@Base+0x98>)
    cad2:	ldr	r2, [pc, #60]	; (cb10 <print_extent_state@@Base+0xac>)
    cad4:	ldr	r0, [r5, r3]
    cad6:	add	r2, pc
    cad8:	mov	r3, r4
    cada:	b.n	caaa <print_extent_state@@Base+0x46>
    cadc:	ldr	r0, [pc, #52]	; (cb14 <print_extent_state@@Base+0xb0>)
    cade:	add	r0, pc
    cae0:	blx	865c <puts@plt+0x4>
    cae4:	mov	r0, r4
    cae6:	mov	r2, r8
    cae8:	mov	r3, r7
    caea:	bl	b71c <ulist_next@@Base+0x2b4>
    caee:	mov	r4, r0
    caf0:	b.n	cab2 <print_extent_state@@Base+0x4e>
    caf2:	nop
    caf4:	strh	r4, [r5, #62]	; 0x3e
    caf6:	movs	r5, r0
    caf8:	strb	r2, [r1, #12]
    cafa:	movs	r5, r0
    cafc:	lsls	r0, r6, #8
    cafe:	movs	r0, r0
    cb00:	ldmia	r5!, {r0, r3, r4, r6, r7}
    cb02:	movs	r2, r0
    cb04:	ldmia	r6!, {r0, r2, r4, r5}
    cb06:	movs	r2, r0
    cb08:	strh	r2, [r5, #60]	; 0x3c
    cb0a:	movs	r5, r0
    cb0c:			; <UNDEFINED> instruction: 0xea19ffff
    cb10:	ldmia	r6!, {r1, r3, r5}
    cb12:	movs	r2, r0
    cb14:	ldmia	r6, {r0, r6}
    cb16:	movs	r2, r0

0000cb18 <repair_qgroups@@Base>:
    cb18:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cb1c:	mov	r6, r1
    cb1e:	vpush	{d8}
    cb22:	ldr	r1, [pc, #620]	; (cd90 <repair_qgroups@@Base+0x278>)
    cb24:	ldr	r2, [pc, #620]	; (cd94 <repair_qgroups@@Base+0x27c>)
    cb26:	add	r1, pc
    cb28:	ldr	r3, [pc, #620]	; (cd98 <repair_qgroups@@Base+0x280>)
    cb2a:	sub	sp, #124	; 0x7c
    cb2c:	add	r3, pc
    cb2e:	str	r0, [sp, #16]
    cb30:	ldr	r2, [r1, r2]
    cb32:	ldr	r2, [r2, #0]
    cb34:	str	r2, [sp, #116]	; 0x74
    cb36:	mov.w	r2, #0
    cb3a:	movs	r2, #0
    cb3c:	str	r2, [r6, #0]
    cb3e:	ldr	r2, [pc, #604]	; (cd9c <repair_qgroups@@Base+0x284>)
    cb40:	ldr	r3, [r3, r2]
    cb42:	ldr	r3, [r3, #0]
    cb44:	cbnz	r3, cb5e <repair_qgroups@@Base+0x46>
    cb46:	movs	r4, #0
    cb48:	ldr	r2, [pc, #596]	; (cda0 <repair_qgroups@@Base+0x288>)
    cb4a:	ldr	r3, [pc, #584]	; (cd94 <repair_qgroups@@Base+0x27c>)
    cb4c:	add	r2, pc
    cb4e:	ldr	r3, [r2, r3]
    cb50:	ldr	r2, [r3, #0]
    cb52:	ldr	r3, [sp, #116]	; 0x74
    cb54:	eors	r2, r3
    cb56:	beq.w	cd82 <repair_qgroups@@Base+0x26a>
    cb5a:	blx	8510 <__stack_chk_fail@plt>
    cb5e:	ldr	r3, [pc, #580]	; (cda4 <repair_qgroups@@Base+0x28c>)
    cb60:	add	r3, pc
    cb62:	str	r3, [sp, #20]
    cb64:	ldr	r5, [r3, #0]
    cb66:	ldr	r3, [pc, #576]	; (cda8 <repair_qgroups@@Base+0x290>)
    cb68:	add	r3, pc
    cb6a:	ldr.w	r2, [r5], #-136
    cb6e:	vmov	s16, r3
    cb72:	ldr	r3, [pc, #568]	; (cdac <repair_qgroups@@Base+0x294>)
    cb74:	sub.w	r8, r2, #136	; 0x88
    cb78:	add	r3, pc
    cb7a:	vmov	s17, r3
    cb7e:	ldr	r2, [sp, #20]
    cb80:	add.w	r3, r5, #136	; 0x88
    cb84:	str	r3, [sp, #12]
    cb86:	cmp	r3, r2
    cb88:	bne.n	cbc6 <repair_qgroups@@Base+0xae>
    cb8a:	ldr	r3, [r6, #0]
    cb8c:	cbnz	r3, cb98 <repair_qgroups@@Base+0x80>
    cb8e:	ldr	r3, [pc, #544]	; (cdb0 <repair_qgroups@@Base+0x298>)
    cb90:	add	r3, pc
    cb92:	ldrb	r3, [r3, #8]
    cb94:	lsls	r3, r3, #30
    cb96:	beq.n	cb46 <repair_qgroups@@Base+0x2e>
    cb98:	ldr	r3, [sp, #16]
    cb9a:	ldr	r0, [pc, #536]	; (cdb4 <repair_qgroups@@Base+0x29c>)
    cb9c:	ldr.w	r8, [r3, #44]	; 0x2c
    cba0:	add	r0, pc
    cba2:	blx	865c <puts@plt+0x4>
    cba6:	movs	r1, #1
    cba8:	mov	r0, r8
    cbaa:	bl	2a674 <btrfs_start_transaction@@Base>
    cbae:	cmn.w	r0, #4096	; 0x1000
    cbb2:	mov	r5, r0
    cbb4:	bls.w	ccd0 <repair_qgroups@@Base+0x1b8>
    cbb8:	mov	r4, r0
    cbba:	cmp	r4, #0
    cbbc:	bne.n	cb48 <repair_qgroups@@Base+0x30>
    cbbe:	ldr	r3, [r6, #0]
    cbc0:	adds	r3, #1
    cbc2:	str	r3, [r6, #0]
    cbc4:	b.n	cb48 <repair_qgroups@@Base+0x30>
    cbc6:	ldr	r3, [sp, #16]
    cbc8:	mov.w	r9, #0
    cbcc:	ldrd	r1, r2, [r5]
    cbd0:	movs	r0, #1
    cbd2:	ldr.w	fp, [r3, #44]	; 0x2c
    cbd6:	uxth	r3, r2
    cbd8:	lsrs	r2, r2, #16
    cbda:	strd	r1, r3, [sp]
    cbde:	mov	r3, r9
    cbe0:	vmov	r1, s16
    cbe4:	blx	8838 <__printf_chk@plt+0x4>
    cbe8:	movs	r1, #1
    cbea:	mov	r0, fp
    cbec:	bl	2a674 <btrfs_start_transaction@@Base>
    cbf0:	cmn.w	r0, #4096	; 0x1000
    cbf4:	mov	r7, r0
    cbf6:	bls.n	cc1e <repair_qgroups@@Base+0x106>
    cbf8:	mov	r4, r0
    cbfa:	cmp	r4, #0
    cbfc:	bne.n	cb48 <repair_qgroups@@Base+0x30>
    cbfe:	ldr	r3, [r6, #0]
    cc00:	adds	r3, #1
    cc02:	str	r3, [r6, #0]
    cc04:	ldrd	r2, r3, [r5, #136]	; 0x88
    cc08:	str	r3, [r2, #4]
    cc0a:	str	r2, [r3, #0]
    cc0c:	ldr	r3, [sp, #12]
    cc0e:	strd	r3, r3, [r5, #136]	; 0x88
    cc12:	mov	r5, r8
    cc14:	ldr.w	r3, [r8, #136]	; 0x88
    cc18:	sub.w	r8, r3, #136	; 0x88
    cc1c:	b.n	cb7e <repair_qgroups@@Base+0x66>
    cc1e:	add.w	sl, sp, #48	; 0x30
    cc22:	mov	r0, sl
    cc24:	bl	1753c <btrfs_init_path@@Base>
    cc28:	movs	r3, #242	; 0xf2
    cc2a:	strd	r9, r9, [sp, #28]
    cc2e:	mov	r1, fp
    cc30:	strb.w	r3, [sp, #36]	; 0x24
    cc34:	mov	r0, r7
    cc36:	ldrd	r2, r3, [r5]
    cc3a:	str.w	r2, [sp, #37]	; 0x25
    cc3e:	add	r2, sp, #28
    cc40:	str.w	r3, [sp, #41]	; 0x29
    cc44:	movs	r3, #1
    cc46:	strd	r9, r3, [sp]
    cc4a:	mov	r3, sl
    cc4c:	bl	19930 <btrfs_search_slot@@Base>
    cc50:	mov	r4, r0
    cc52:	cbz	r0, cc82 <repair_qgroups@@Base+0x16a>
    cc54:	ldrd	r1, r2, [r5]
    cc58:	vmov	r0, s17
    cc5c:	uxth	r3, r2
    cc5e:	lsrs	r2, r2, #16
    cc60:	strd	r1, r3, [sp]
    cc64:	mov	r3, r9
    cc66:	bl	16b70 <__btrfs_error@@Base>
    cc6a:	cmp	r4, #0
    cc6c:	it	gt
    cc6e:	mvngt.w	r4, #1
    cc72:	mov	r1, fp
    cc74:	mov	r0, r7
    cc76:	bl	2a8f4 <btrfs_commit_transaction@@Base>
    cc7a:	mov	r0, sl
    cc7c:	bl	1754c <btrfs_release_path@@Base>
    cc80:	b.n	cbfa <repair_qgroups@@Base+0xe2>
    cc82:	ldr	r2, [sp, #48]	; 0x30
    cc84:	movs	r1, #25
    cc86:	ldr	r3, [sp, #80]	; 0x50
    cc88:	adds	r2, #96	; 0x60
    cc8a:	ldr	r0, [r7, #12]
    cc8c:	mla	r3, r1, r3, r2
    cc90:	ldr	r1, [r7, #8]
    cc92:	ldr.w	r3, [r3, #118]	; 0x76
    cc96:	adds	r3, #101	; 0x65
    cc98:	add.w	ip, r2, r3
    cc9c:	str	r1, [r2, r3]
    cc9e:	str.w	r0, [ip, #4]
    cca2:	ldr	r0, [sp, #48]	; 0x30
    cca4:	ldrd	r2, r1, [r5, #64]	; 0x40
    cca8:	add.w	ip, r0, #96	; 0x60
    ccac:	add	r3, ip
    ccae:	str	r2, [r3, #8]
    ccb0:	str	r1, [r3, #12]
    ccb2:	ldrd	r1, r2, [r5, #72]	; 0x48
    ccb6:	str	r1, [r3, #16]
    ccb8:	str	r2, [r3, #20]
    ccba:	ldrd	r1, r2, [r5, #80]	; 0x50
    ccbe:	str	r1, [r3, #24]
    ccc0:	str	r2, [r3, #28]
    ccc2:	ldrd	r1, r2, [r5, #88]	; 0x58
    ccc6:	str	r1, [r3, #32]
    ccc8:	str	r2, [r3, #36]	; 0x24
    ccca:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
    ccce:	b.n	cc72 <repair_qgroups@@Base+0x15a>
    ccd0:	add	r7, sp, #48	; 0x30
    ccd2:	mov.w	r9, #1
    ccd6:	mov	r0, r7
    ccd8:	bl	1753c <btrfs_init_path@@Base>
    ccdc:	movs	r3, #0
    ccde:	movs	r2, #240	; 0xf0
    cce0:	strd	r3, r3, [sp, #28]
    cce4:	strb.w	r2, [sp, #36]	; 0x24
    cce8:	mov	r1, r8
    ccea:	strb.w	r3, [sp, #37]	; 0x25
    ccee:	add	r2, sp, #28
    ccf0:	strb.w	r3, [sp, #38]	; 0x26
    ccf4:	mov	r0, r5
    ccf6:	strb.w	r3, [sp, #39]	; 0x27
    ccfa:	strb.w	r3, [sp, #40]	; 0x28
    ccfe:	strb.w	r3, [sp, #41]	; 0x29
    cd02:	strb.w	r3, [sp, #42]	; 0x2a
    cd06:	strb.w	r3, [sp, #43]	; 0x2b
    cd0a:	strb.w	r3, [sp, #44]	; 0x2c
    cd0e:	strd	r3, r9, [sp]
    cd12:	mov	r3, r7
    cd14:	bl	19930 <btrfs_search_slot@@Base>
    cd18:	mov	r4, r0
    cd1a:	cbz	r0, cd3c <repair_qgroups@@Base+0x224>
    cd1c:	ldr	r0, [pc, #152]	; (cdb8 <repair_qgroups@@Base+0x2a0>)
    cd1e:	add	r0, pc
    cd20:	bl	16b70 <__btrfs_error@@Base>
    cd24:	cmp	r4, #0
    cd26:	it	gt
    cd28:	mvngt.w	r4, #1
    cd2c:	mov	r1, r8
    cd2e:	mov	r0, r5
    cd30:	bl	2a8f4 <btrfs_commit_transaction@@Base>
    cd34:	mov	r0, r7
    cd36:	bl	1754c <btrfs_release_path@@Base>
    cd3a:	b.n	cbba <repair_qgroups@@Base+0xa2>
    cd3c:	ldr	r0, [sp, #48]	; 0x30
    cd3e:	movs	r1, #25
    cd40:	ldr	r2, [sp, #80]	; 0x50
    cd42:	add.w	r3, r0, #96	; 0x60
    cd46:	mla	r2, r1, r2, r3
    cd4a:	ldr.w	r2, [r2, #118]	; 0x76
    cd4e:	adds	r2, #101	; 0x65
    cd50:	add	r3, r2
    cd52:	strb.w	r9, [r3, #16]
    cd56:	strb	r4, [r3, #17]
    cd58:	strb	r4, [r3, #18]
    cd5a:	strb	r4, [r3, #19]
    cd5c:	strb	r4, [r3, #20]
    cd5e:	strb	r4, [r3, #21]
    cd60:	strb	r4, [r3, #22]
    cd62:	strb	r4, [r3, #23]
    cd64:	strb	r4, [r3, #24]
    cd66:	strb	r4, [r3, #25]
    cd68:	strb	r4, [r3, #26]
    cd6a:	strb	r4, [r3, #27]
    cd6c:	strb	r4, [r3, #28]
    cd6e:	strb	r4, [r3, #29]
    cd70:	strb	r4, [r3, #30]
    cd72:	strb	r4, [r3, #31]
    cd74:	ldrd	r1, r2, [r5, #8]
    cd78:	str	r1, [r3, #8]
    cd7a:	str	r2, [r3, #12]
    cd7c:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
    cd80:	b.n	cd2c <repair_qgroups@@Base+0x214>
    cd82:	mov	r0, r4
    cd84:	add	sp, #124	; 0x7c
    cd86:	vpop	{d8}
    cd8a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cd8e:	nop
    cd90:	strb	r6, [r3, #9]
    cd92:	movs	r5, r0
    cd94:	lsls	r0, r4, #8
    cd96:	movs	r0, r0
    cd98:	strb	r0, [r3, #9]
    cd9a:	movs	r5, r0
    cd9c:	lsls	r0, r0, #9
    cd9e:	movs	r0, r0
    cda0:	strb	r0, [r7, #8]
    cda2:	movs	r5, r0
    cda4:	strb	r4, [r4, #21]
    cda6:	movs	r5, r0
    cda8:	ldmia	r5!, {r0, r1, r4, r6, r7}
    cdaa:	movs	r2, r0
    cdac:	ldmia	r5!, {r2, r3, r4, r6, r7}
    cdae:	movs	r2, r0
    cdb0:	strh	r4, [r2, #54]	; 0x36
    cdb2:	movs	r5, r0
    cdb4:	ldmia	r5, {r1, r5, r6, r7}
    cdb6:	movs	r2, r0
    cdb8:	ldmia	r4, {r1, r2, r3, r4, r5, r6}
    cdba:	movs	r2, r0
    cdbc:	push	{r4, lr}
    cdbe:	cbnz	r0, cdc2 <repair_qgroups@@Base+0x2aa>
    cdc0:	pop	{r4, pc}
    cdc2:	ldr	r4, [r0, #16]
    cdc4:	blx	8434 <free@plt+0x4>
    cdc8:	mov	r0, r4
    cdca:	b.n	cdbe <repair_qgroups@@Base+0x2a6>
    cdcc:	ldr	r2, [pc, #92]	; (ce2c <repair_qgroups@@Base+0x314>)
    cdce:	ldr	r3, [pc, #96]	; (ce30 <repair_qgroups@@Base+0x318>)
    cdd0:	add	r2, pc
    cdd2:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    cdd6:	mov	r5, r0
    cdd8:	ldr	r3, [r2, r3]
    cdda:	mov	r8, sp
    cddc:	movs	r6, #0
    cdde:	movs	r7, #0
    cde0:	ldr	r3, [r3, #0]
    cde2:	str	r3, [sp, #4]
    cde4:	mov.w	r3, #0
    cde8:	movs	r3, #0
    cdea:	str	r3, [sp, #0]
    cdec:	mov	r1, r8
    cdee:	mov	r0, r5
    cdf0:	bl	b468 <ulist_next@@Base>
    cdf4:	mov	r4, r0
    cdf6:	cbnz	r0, ce12 <repair_qgroups@@Base+0x2fa>
    cdf8:	mov	r0, r5
    cdfa:	bl	b27c <ulist_free@@Base>
    cdfe:	ldr	r2, [pc, #52]	; (ce34 <repair_qgroups@@Base+0x31c>)
    ce00:	ldr	r3, [pc, #44]	; (ce30 <repair_qgroups@@Base+0x318>)
    ce02:	add	r2, pc
    ce04:	ldr	r3, [r2, r3]
    ce06:	ldr	r2, [r3, #0]
    ce08:	ldr	r3, [sp, #4]
    ce0a:	eors	r2, r3
    ce0c:	beq.n	ce26 <repair_qgroups@@Base+0x30e>
    ce0e:	blx	8510 <__stack_chk_fail@plt>
    ce12:	ldrd	r0, r1, [r4, #8]
    ce16:	orrs.w	r3, r0, r1
    ce1a:	beq.n	cdec <repair_qgroups@@Base+0x2d4>
    ce1c:	bl	cdbc <repair_qgroups@@Base+0x2a4>
    ce20:	strd	r6, r7, [r4, #8]
    ce24:	b.n	cdec <repair_qgroups@@Base+0x2d4>
    ce26:	add	sp, #8
    ce28:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ce2c:	ldr	r4, [r6, #120]	; 0x78
    ce2e:	movs	r5, r0
    ce30:	lsls	r0, r4, #8
    ce32:	movs	r0, r0
    ce34:	ldr	r2, [r0, #120]	; 0x78
    ce36:	movs	r5, r0
    ce38:	push	{r4, lr}
    ce3a:	mov	r4, r1
    ce3c:	ldr	r1, [pc, #84]	; (ce94 <repair_qgroups@@Base+0x37c>)
    ce3e:	sub	sp, #24
    ce40:	ldr	r3, [pc, #84]	; (ce98 <repair_qgroups@@Base+0x380>)
    ce42:	add	r1, pc
    ce44:	ldr	r3, [r1, r3]
    ce46:	mov	r1, sp
    ce48:	ldr	r3, [r3, #0]
    ce4a:	str	r3, [sp, #20]
    ce4c:	mov.w	r3, #0
    ce50:	movs	r3, #25
    ce52:	muls	r2, r3
    ce54:	movs	r3, #17
    ce56:	adds	r2, #101	; 0x65
    ce58:	bl	16a0e <read_extent_buffer@@Base>
    ce5c:	ldr.w	r3, [sp, #13]
    ce60:	ldr.w	r2, [sp, #9]
    ce64:	str.w	r3, [r4, #13]
    ce68:	ldrb.w	r3, [sp, #8]
    ce6c:	str.w	r2, [r4, #9]
    ce70:	ldr	r2, [pc, #40]	; (ce9c <repair_qgroups@@Base+0x384>)
    ce72:	strb	r3, [r4, #8]
    ce74:	ldr	r3, [sp, #0]
    ce76:	add	r2, pc
    ce78:	str	r3, [r4, #0]
    ce7a:	ldr	r3, [sp, #4]
    ce7c:	str	r3, [r4, #4]
    ce7e:	ldr	r3, [pc, #24]	; (ce98 <repair_qgroups@@Base+0x380>)
    ce80:	ldr	r3, [r2, r3]
    ce82:	ldr	r2, [r3, #0]
    ce84:	ldr	r3, [sp, #20]
    ce86:	eors	r2, r3
    ce88:	beq.n	ce8e <repair_qgroups@@Base+0x376>
    ce8a:	blx	8510 <__stack_chk_fail@plt>
    ce8e:	add	sp, #24
    ce90:	pop	{r4, pc}
    ce92:	nop
    ce94:	ldr	r2, [r0, #116]	; 0x74
    ce96:	movs	r5, r0
    ce98:	lsls	r0, r4, #8
    ce9a:	movs	r0, r0
    ce9c:	ldr	r6, [r1, #112]	; 0x70
    ce9e:	movs	r5, r0
    cea0:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cea4:	adds	r1, #96	; 0x60
    cea6:	add	r2, r1
    cea8:	ldrd	r8, r9, [sp, #48]	; 0x30
    ceac:	ldr.w	fp, [sp, #56]	; 0x38
    ceb0:	mov	sl, r0
    ceb2:	ldrb	r3, [r2, #16]
    ceb4:	cmp	r3, #0
    ceb6:	bne.n	cf30 <repair_qgroups@@Base+0x418>
    ceb8:	ldrb	r3, [r2, #17]
    ceba:	cmp	r3, #0
    cebc:	bne.n	cf30 <repair_qgroups@@Base+0x418>
    cebe:	ldrh	r3, [r2, #18]
    cec0:	cbnz	r3, cf30 <repair_qgroups@@Base+0x418>
    cec2:	mov	r3, r2
    cec4:	ldr.w	r1, [r3, #37]!
    cec8:	ldr	r3, [r3, #4]
    ceca:	str	r1, [sp, #0]
    cecc:	str	r3, [sp, #4]
    cece:	ldrd	r4, r5, [sp]
    ced2:	ldr.w	r3, [r2, #45]!
    ced6:	cmp	r9, r5
    ced8:	it	eq
    ceda:	cmpeq	r8, r4
    cedc:	ldr	r1, [r2, #4]
    cede:	bcc.n	cf36 <repair_qgroups@@Base+0x41e>
    cee0:	ldr	r2, [sp, #0]
    cee2:	adds	r6, r3, r2
    cee4:	ldr	r3, [sp, #4]
    cee6:	adc.w	r7, r1, r3
    ceea:	cmp	r9, r7
    ceec:	it	eq
    ceee:	cmpeq	r8, r6
    cef0:	bcs.n	cf36 <repair_qgroups@@Base+0x41e>
    cef2:	ldr	r3, [sp, #4]
    cef4:	subs.w	r4, r8, r2
    cef8:	sbc.w	r5, r9, r3
    cefc:	movs	r0, #24
    cefe:	blx	8678 <malloc@plt+0x4>
    cf02:	cbz	r0, cf3a <repair_qgroups@@Base+0x422>
    cf04:	ldr.w	r3, [fp]
    cf08:	str	r3, [r0, #16]
    cf0a:	ldrd	r2, r3, [sl]
    cf0e:	strd	r2, r3, [r0]
    cf12:	ldr.w	r3, [sl, #9]
    cf16:	ldr.w	r2, [sl, #13]
    cf1a:	adds	r3, r3, r4
    cf1c:	str.w	r0, [fp]
    cf20:	adc.w	r2, r5, r2
    cf24:	strd	r3, r2, [r0, #8]
    cf28:	movs	r0, #0
    cf2a:	add	sp, #12
    cf2c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cf30:	movs	r4, #0
    cf32:	mov	r5, r4
    cf34:	b.n	cefc <repair_qgroups@@Base+0x3e4>
    cf36:	movs	r0, #1
    cf38:	b.n	cf2a <repair_qgroups@@Base+0x412>
    cf3a:	mvn.w	r0, #11
    cf3e:	b.n	cf2a <repair_qgroups@@Base+0x412>
    cf40:	ldr	r2, [pc, #60]	; (cf80 <repair_qgroups@@Base+0x468>)
    cf42:	movs	r1, #16
    cf44:	ldr	r3, [pc, #60]	; (cf84 <repair_qgroups@@Base+0x46c>)
    cf46:	push	{r4, lr}
    cf48:	add	r2, pc
    cf4a:	sub	sp, #72	; 0x48
    cf4c:	add	r4, sp, #4
    cf4e:	ldr	r3, [r2, r3]
    cf50:	mov	r0, r4
    cf52:	ldr	r3, [r3, #0]
    cf54:	str	r3, [sp, #68]	; 0x44
    cf56:	mov.w	r3, #0
    cf5a:	blx	86c4 <backtrace@plt>
    cf5e:	movs	r2, #2
    cf60:	mov	r1, r0
    cf62:	mov	r0, r4
    cf64:	blx	89c8 <backtrace_symbols_fd@plt>
    cf68:	ldr	r2, [pc, #28]	; (cf88 <repair_qgroups@@Base+0x470>)
    cf6a:	ldr	r3, [pc, #24]	; (cf84 <repair_qgroups@@Base+0x46c>)
    cf6c:	add	r2, pc
    cf6e:	ldr	r3, [r2, r3]
    cf70:	ldr	r2, [r3, #0]
    cf72:	ldr	r3, [sp, #68]	; 0x44
    cf74:	eors	r2, r3
    cf76:	beq.n	cf7c <repair_qgroups@@Base+0x464>
    cf78:	blx	8510 <__stack_chk_fail@plt>
    cf7c:	add	sp, #72	; 0x48
    cf7e:	pop	{r4, pc}
    cf80:	ldr	r4, [r7, #96]	; 0x60
    cf82:	movs	r5, r0
    cf84:	lsls	r0, r4, #8
    cf86:	movs	r0, r0
    cf88:	ldr	r0, [r3, #96]	; 0x60
    cf8a:	movs	r5, r0
    cf8c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    cf90:	mov	r8, r0
    cf92:	movs	r0, #64	; 0x40
    cf94:	ldr	r5, [sp, #32]
    cf96:	ldrd	r6, r7, [sp, #40]	; 0x28
    cf9a:	mov	sl, r2
    cf9c:	mov	r9, r3
    cf9e:	blx	8678 <malloc@plt+0x4>
    cfa2:	mov	r4, r0
    cfa4:	cbz	r0, d004 <repair_qgroups@@Base+0x4ec>
    cfa6:	strd	sl, r9, [r0, #8]
    cfaa:	adds	r0, #16
    cfac:	cbz	r5, cfe8 <repair_qgroups@@Base+0x4d0>
    cfae:	mov	ip, r0
    cfb0:	ldmia	r5!, {r0, r1, r2, r3}
    cfb2:	stmia.w	ip!, {r0, r1, r2, r3}
    cfb6:	ldr	r3, [r5, #0]
    cfb8:	strb.w	r3, [ip]
    cfbc:	ldr	r3, [sp, #36]	; 0x24
    cfbe:	movs	r1, #0
    cfc0:	mov	r0, r1
    cfc2:	str	r1, [r4, #44]	; 0x2c
    cfc4:	strd	r6, r7, [r4, #48]	; 0x30
    cfc8:	str	r3, [r4, #36]	; 0x24
    cfca:	ldr	r3, [sp, #56]	; 0x38
    cfcc:	str	r3, [r4, #40]	; 0x28
    cfce:	ldrd	r2, r3, [sp, #48]	; 0x30
    cfd2:	strd	r2, r3, [r4, #56]	; 0x38
    cfd6:	ldr.w	r3, [r8, #4]
    cfda:	str.w	r4, [r8, #4]
    cfde:	strd	r8, r3, [r4]
    cfe2:	str	r4, [r3, #0]
    cfe4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    cfe8:	orrs.w	r3, r6, r7
    cfec:	mov.w	r2, #17
    cff0:	mov	r1, r5
    cff2:	beq.n	cffa <repair_qgroups@@Base+0x4e2>
    cff4:	blx	87c4 <memset@plt+0x4>
    cff8:	b.n	cfbc <repair_qgroups@@Base+0x4a4>
    cffa:	blx	87c4 <memset@plt+0x4>
    cffe:	add.w	r8, r8, #8
    d002:	b.n	cfbc <repair_qgroups@@Base+0x4a4>
    d004:	mvn.w	r0, #11
    d008:	b.n	cfe4 <repair_qgroups@@Base+0x4cc>
    d00a:	push	{r0, r1, r2, r3, r4, lr}
    d00c:	ldr	r4, [pc, #36]	; (d034 <repair_qgroups@@Base+0x51c>)
    d00e:	ldr	r5, [pc, #40]	; (d038 <repair_qgroups@@Base+0x520>)
    d010:	add	r4, pc
    d012:	ldr	r4, [r4, r5]
    d014:	ldr	r5, [sp, #24]
    d016:	strd	r3, r2, [sp]
    d01a:	mov	r3, r1
    d01c:	ldr	r2, [pc, #28]	; (d03c <repair_qgroups@@Base+0x524>)
    d01e:	movs	r1, #1
    d020:	strd	r0, r5, [sp, #8]
    d024:	add	r2, pc
    d026:	ldr	r0, [r4, #0]
    d028:	blx	8860 <__fprintf_chk@plt+0x4>
    d02c:	bl	cf40 <repair_qgroups@@Base+0x428>
    d030:	blx	8980 <abort@plt>
    d034:	ldr	r4, [r6, #84]	; 0x54
    d036:	movs	r5, r0
    d038:	lsls	r0, r6, #8
    d03a:	movs	r0, r0
    d03c:	bkpt	0x007e
    d03e:	movs	r2, r0
    d040:	push	{r0, r1, r2, lr}
    d042:	movs	r3, #1
    d044:	ldr	r2, [pc, #20]	; (d05c <repair_qgroups@@Base+0x544>)
    d046:	ldr	r1, [pc, #24]	; (d060 <repair_qgroups@@Base+0x548>)
    d048:	ldr	r0, [pc, #24]	; (d064 <repair_qgroups@@Base+0x54c>)
    d04a:	add	r2, pc
    d04c:	str	r3, [sp, #0]
    d04e:	add	r1, pc
    d050:	add	r0, pc
    d052:	movw	r3, #1818	; 0x71a
    d056:	bl	d00a <repair_qgroups@@Base+0x4f2>
    d05a:	nop
    d05c:	ldmia	r3, {r0, r1, r2, r3, r5}
    d05e:	movs	r2, r0
    d060:	stmia	r6!, {r1, r2, r6}
    d062:	movs	r2, r0
    d064:	cdp2	0, 8, cr0, cr1, cr2, {0}
    d068:	push	{r0, r1, r2, r3, r4, lr}
    d06a:	ldr	r3, [pc, #40]	; (d094 <repair_qgroups@@Base+0x57c>)
    d06c:	ldr	r4, [pc, #40]	; (d098 <repair_qgroups@@Base+0x580>)
    d06e:	add	r3, pc
    d070:	ldr	r4, [r3, r4]
    d072:	movs	r3, #0
    d074:	strd	r2, r1, [sp]
    d078:	movs	r1, #1
    d07a:	strd	r0, r3, [sp, #8]
    d07e:	ldr	r2, [pc, #28]	; (d09c <repair_qgroups@@Base+0x584>)
    d080:	ldr	r3, [pc, #28]	; (d0a0 <repair_qgroups@@Base+0x588>)
    d082:	add	r2, pc
    d084:	ldr	r0, [r4, #0]
    d086:	add	r3, pc
    d088:	blx	8860 <__fprintf_chk@plt+0x4>
    d08c:	bl	cf40 <repair_qgroups@@Base+0x428>
    d090:	blx	8980 <abort@plt>
    d094:	ldr	r6, [r2, #80]	; 0x50
    d096:	movs	r5, r0
    d098:	lsls	r0, r6, #8
    d09a:	movs	r0, r0
    d09c:	iteet	mi
    d09e:	movmi	r2, r0
    d0a0:	ldmiapl	r1, {r0, r1, r4, r5, r7}
    d0a2:	movpl	r2, r0
    d0a4:	pushmi	{r0, r1, r2, lr}
    d0a6:	cbz	r3, d0b8 <repair_qgroups@@Base+0x5a0>
    d0a8:	movs	r3, #1
    d0aa:	str	r3, [sp, #0]
    d0ac:	mov	r3, r2
    d0ae:	mov	r2, r1
    d0b0:	ldr	r1, [pc, #12]	; (d0c0 <repair_qgroups@@Base+0x5a8>)
    d0b2:	add	r1, pc
    d0b4:	bl	d00a <repair_qgroups@@Base+0x4f2>
    d0b8:	add	sp, #12
    d0ba:	ldr.w	pc, [sp], #4
    d0be:	nop
    d0c0:	ldmia	r1, {r0, r1, r2, r7}
    d0c2:	movs	r2, r0
    d0c4:	push	{r4, r5, lr}
    d0c6:	sub	sp, #20
    d0c8:	ldr	r4, [pc, #36]	; (d0f0 <repair_qgroups@@Base+0x5d8>)
    d0ca:	ldr	r5, [pc, #40]	; (d0f4 <repair_qgroups@@Base+0x5dc>)
    d0cc:	add	r4, pc
    d0ce:	ldr	r4, [r4, r5]
    d0d0:	strd	r2, r1, [sp]
    d0d4:	movs	r1, #1
    d0d6:	strd	r0, r3, [sp, #8]
    d0da:	ldr	r2, [pc, #28]	; (d0f8 <repair_qgroups@@Base+0x5e0>)
    d0dc:	ldr	r3, [pc, #28]	; (d0fc <repair_qgroups@@Base+0x5e4>)
    d0de:	ldr	r0, [r4, #0]
    d0e0:	add	r2, pc
    d0e2:	add	r3, pc
    d0e4:	blx	8860 <__fprintf_chk@plt+0x4>
    d0e8:	add	sp, #20
    d0ea:	ldmia.w	sp!, {r4, r5, lr}
    d0ee:	b.n	cf40 <repair_qgroups@@Base+0x428>
    d0f0:	ldr	r0, [r7, #72]	; 0x48
    d0f2:	movs	r5, r0
    d0f4:	lsls	r0, r6, #8
    d0f6:	movs	r0, r0
    d0f8:	pop	{r2, r3, r7, pc}
    d0fa:	movs	r2, r0
    d0fc:	ldmia	r1, {r0, r1, r2, r4, r6}
    d0fe:	movs	r2, r0
    d100:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    d104:	mov	r5, r0
    d106:	ldr	r4, [r0, #0]
    d108:	mov	r9, r1
    d10a:	cmp	r4, r5
    d10c:	bne.n	d112 <repair_qgroups@@Base+0x5fa>
    d10e:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    d112:	ldr	r0, [r4, #0]
    d114:	ldr.w	r8, [r0]
    d118:	cmp	r0, r5
    d11a:	bne.n	d120 <repair_qgroups@@Base+0x608>
    d11c:	ldr	r4, [r4, #0]
    d11e:	b.n	d10a <repair_qgroups@@Base+0x5f2>
    d120:	cmp.w	r9, #1
    d124:	bne.n	d1a0 <repair_qgroups@@Base+0x688>
    d126:	ldr	r2, [r4, #36]	; 0x24
    d128:	ldr	r3, [r0, #36]	; 0x24
    d12a:	cmp	r2, r3
    d12c:	bne.n	d1b4 <repair_qgroups@@Base+0x69c>
    d12e:	ldrd	r6, r7, [r4, #8]
    d132:	ldrd	r2, r3, [r0, #8]
    d136:	cmp	r7, r3
    d138:	it	eq
    d13a:	cmpeq	r6, r2
    d13c:	bne.n	d1b4 <repair_qgroups@@Base+0x69c>
    d13e:	ldrb	r2, [r4, #24]
    d140:	ldrb	r3, [r0, #24]
    d142:	cmp	r2, r3
    d144:	bne.n	d1b4 <repair_qgroups@@Base+0x69c>
    d146:	ldrd	r6, r7, [r4, #16]
    d14a:	ldrd	r2, r3, [r0, #16]
    d14e:	cmp	r7, r3
    d150:	it	eq
    d152:	cmpeq	r6, r2
    d154:	bne.n	d1b4 <repair_qgroups@@Base+0x69c>
    d156:	ldr.w	r7, [r4, #29]
    d15a:	ldr.w	r3, [r0, #29]
    d15e:	ldr.w	r6, [r4, #25]
    d162:	ldr.w	r2, [r0, #25]
    d166:	cmp	r7, r3
    d168:	it	eq
    d16a:	cmpeq	r6, r2
    d16c:	bne.n	d1b4 <repair_qgroups@@Base+0x69c>
    d16e:	ldrd	r6, r7, [r4, #48]	; 0x30
    d172:	ldrd	r2, r3, [r0, #48]	; 0x30
    d176:	cmp	r7, r3
    d178:	it	eq
    d17a:	cmpeq	r6, r2
    d17c:	bne.n	d1b4 <repair_qgroups@@Base+0x69c>
    d17e:	ldr	r3, [r4, #44]	; 0x2c
    d180:	cbz	r3, d1c0 <repair_qgroups@@Base+0x6a8>
    d182:	ldr	r2, [r3, #16]
    d184:	cbnz	r2, d1bc <repair_qgroups@@Base+0x6a4>
    d186:	ldr	r2, [r0, #44]	; 0x2c
    d188:	str	r2, [r3, #16]
    d18a:	ldr	r2, [r0, #40]	; 0x28
    d18c:	ldr	r3, [r4, #40]	; 0x28
    d18e:	add	r3, r2
    d190:	str	r3, [r4, #40]	; 0x28
    d192:	ldrd	r2, r3, [r0]
    d196:	str	r3, [r2, #4]
    d198:	str	r2, [r3, #0]
    d19a:	blx	8434 <free@plt+0x4>
    d19e:	b.n	d1b4 <repair_qgroups@@Base+0x69c>
    d1a0:	ldrd	r6, r7, [r4, #48]	; 0x30
    d1a4:	orrs.w	r3, r6, r7
    d1a8:	beq.n	d1b4 <repair_qgroups@@Base+0x69c>
    d1aa:	ldrd	r2, r3, [r0, #48]	; 0x30
    d1ae:	orrs.w	r1, r2, r3
    d1b2:	bne.n	d176 <repair_qgroups@@Base+0x65e>
    d1b4:	mov	r0, r8
    d1b6:	ldr.w	r8, [r8]
    d1ba:	b.n	d118 <repair_qgroups@@Base+0x600>
    d1bc:	mov	r3, r2
    d1be:	b.n	d180 <repair_qgroups@@Base+0x668>
    d1c0:	ldr	r3, [r0, #44]	; 0x2c
    d1c2:	str	r3, [r4, #44]	; 0x2c
    d1c4:	b.n	d18a <repair_qgroups@@Base+0x672>
    d1c6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d1ca:	movs	r6, #0
    d1cc:	vpush	{d8}
    d1d0:	mov	r5, r0
    d1d2:	sub	sp, #204	; 0xcc
    d1d4:	strd	r2, r3, [sp, #32]
    d1d8:	ldr	r3, [sp, #248]	; 0xf8
    d1da:	ldr.w	r2, [pc, #2924]	; dd48 <repair_qgroups@@Base+0x1230>
    d1de:	str	r1, [sp, #44]	; 0x2c
    d1e0:	vmov	s17, r3
    d1e4:	ldr	r3, [sp, #252]	; 0xfc
    d1e6:	add	r2, pc
    d1e8:	str	r3, [sp, #76]	; 0x4c
    d1ea:	ldr	r3, [sp, #256]	; 0x100
    d1ec:	str	r3, [sp, #72]	; 0x48
    d1ee:	ldr.w	r3, [pc, #2908]	; dd4c <repair_qgroups@@Base+0x1234>
    d1f2:	ldr	r3, [r2, r3]
    d1f4:	mov.w	r2, #4294967295	; 0xffffffff
    d1f8:	ldr	r3, [r3, #0]
    d1fa:	str	r3, [sp, #196]	; 0xc4
    d1fc:	mov.w	r3, #0
    d200:	add	r3, sp, #172	; 0xac
    d202:	strd	r3, r3, [sp, #172]	; 0xac
    d206:	add	r3, sp, #180	; 0xb4
    d208:	strd	r3, r3, [sp, #180]	; 0xb4
    d20c:	add	r3, sp, #188	; 0xbc
    d20e:	strd	r3, r3, [sp, #188]	; 0xbc
    d212:	ldrd	r3, r4, [sp, #32]
    d216:	strb.w	r2, [sp, #121]	; 0x79
    d21a:	strb.w	r2, [sp, #122]	; 0x7a
    d21e:	strd	r3, r4, [sp, #112]	; 0x70
    d222:	ldr.w	r3, [r1, #308]	; 0x134
    d226:	strb.w	r2, [sp, #123]	; 0x7b
    d22a:	strb.w	r2, [sp, #124]	; 0x7c
    d22e:	strb.w	r2, [sp, #125]	; 0x7d
    d232:	strb.w	r2, [sp, #126]	; 0x7e
    d236:	strb.w	r2, [sp, #127]	; 0x7f
    d23a:	strb.w	r2, [sp, #128]	; 0x80
    d23e:	str	r6, [sp, #92]	; 0x5c
    d240:	ldr.w	r1, [r3, #188]	; 0xbc
    d244:	mov	r3, r6
    d246:	and.w	r2, r1, #256	; 0x100
    d24a:	orrs	r3, r2
    d24c:	ite	ne
    d24e:	movne	r3, #169	; 0xa9
    d250:	moveq	r3, #168	; 0xa8
    d252:	strb.w	r3, [sp, #120]	; 0x78
    d256:	bl	17544 <btrfs_alloc_path@@Base>
    d25a:	mov	r4, r0
    d25c:	cmp	r0, #0
    d25e:	beq.w	dd2c <repair_qgroups@@Base+0x1214>
    d262:	ldr	r1, [sp, #44]	; 0x2c
    d264:	add	r7, sp, #112	; 0x70
    d266:	mov	r3, r0
    d268:	strd	r6, r6, [sp]
    d26c:	mov	r2, r7
    d26e:	mov	r0, r5
    d270:	ldr	r1, [r1, #24]
    d272:	bl	19930 <btrfs_search_slot@@Base>
    d276:	subs.w	r8, r0, #0
    d27a:	blt.w	d410 <repair_qgroups@@Base+0x8f8>
    d27e:	ldr.w	r5, [pc, #2768]	; dd50 <repair_qgroups@@Base+0x1238>
    d282:	movw	r2, #762	; 0x2fa
    d286:	ldr.w	r0, [pc, #2764]	; dd54 <repair_qgroups@@Base+0x123c>
    d28a:	it	eq
    d28c:	moveq	r3, #1
    d28e:	add	r5, pc
    d290:	it	ne
    d292:	movne	r3, r6
    d294:	add.w	r1, r5, #29
    d298:	add	r0, pc
    d29a:	bl	d0a4 <repair_qgroups@@Base+0x58c>
    d29e:	ldr	r2, [r4, #32]
    d2a0:	cmp	r2, #0
    d2a2:	beq.w	d702 <repair_qgroups@@Base+0xbea>
    d2a6:	subs	r2, #1
    d2a8:	ldr	r0, [r4, #0]
    d2aa:	mov	r1, r7
    d2ac:	str	r2, [r4, #32]
    d2ae:	bl	ce38 <repair_qgroups@@Base+0x320>
    d2b2:	ldrd	r2, r3, [sp, #112]	; 0x70
    d2b6:	ldrd	r0, r1, [sp, #32]
    d2ba:	cmp	r1, r3
    d2bc:	it	eq
    d2be:	cmpeq	r0, r2
    d2c0:	bne.w	d702 <repair_qgroups@@Base+0xbea>
    d2c4:	ldrb.w	r3, [sp, #120]	; 0x78
    d2c8:	adds	r3, #88	; 0x58
    d2ca:	uxtb	r3, r3
    d2cc:	cmp	r3, #1
    d2ce:	bhi.w	d702 <repair_qgroups@@Base+0xbea>
    d2d2:	ldr.w	sl, [r4]
    d2d6:	movs	r3, #25
    d2d8:	ldr.w	r9, [r4, #32]
    d2dc:	adds	r5, #47	; 0x2f
    d2de:	add.w	fp, sl, #96	; 0x60
    d2e2:	ldr.w	r0, [pc, #2676]	; dd58 <repair_qgroups@@Base+0x1240>
    d2e6:	movw	r2, #559	; 0x22f
    d2ea:	mov	r1, r5
    d2ec:	mla	r3, r3, r9, fp
    d2f0:	add	r0, pc
    d2f2:	add.w	r7, r3, #101	; 0x65
    d2f6:	ldr.w	r3, [r3, #122]	; 0x7a
    d2fa:	cmp	r3, #23
    d2fc:	str	r3, [sp, #48]	; 0x30
    d2fe:	ite	hi
    d300:	movhi	r3, #0
    d302:	movls	r3, #1
    d304:	bl	d0a4 <repair_qgroups@@Base+0x58c>
    d308:	ldr.w	r8, [r7, #17]
    d30c:	mov	r0, sl
    d30e:	add	r1, sp, #152	; 0x98
    d310:	add.w	r3, r8, #101	; 0x65
    d314:	str	r3, [sp, #64]	; 0x40
    d316:	add.w	r2, fp, r3
    d31a:	add.w	sl, r8, #125	; 0x7d
    d31e:	ldr	r3, [r2, #0]
    d320:	ldr	r7, [r2, #16]
    d322:	str	r3, [sp, #56]	; 0x38
    d324:	ldr	r3, [r2, #4]
    d326:	mov	r2, r9
    d328:	str	r3, [sp, #60]	; 0x3c
    d32a:	bl	ce38 <repair_qgroups@@Base+0x320>
    d32e:	ldr	r3, [sp, #48]	; 0x30
    d330:	mov	r2, r3
    d332:	ldr	r3, [sp, #64]	; 0x40
    d334:	add.w	r9, r2, r3
    d338:	ldrb.w	r3, [sp, #160]	; 0xa0
    d33c:	cmp	r3, #168	; 0xa8
    d33e:	bne.n	d394 <repair_qgroups@@Base+0x87c>
    d340:	and.w	r2, r7, #2
    d344:	mov	r3, r6
    d346:	orrs	r3, r2
    d348:	beq.n	d39e <repair_qgroups@@Base+0x886>
    d34a:	add	sl, fp
    d34c:	ldr.w	r0, [pc, #2572]	; dd5c <repair_qgroups@@Base+0x1244>
    d350:	mov.w	r2, #576	; 0x240
    d354:	mov	r1, r5
    d356:	ldrb.w	r6, [sl, #17]
    d35a:	add.w	sl, r8, #143	; 0x8f
    d35e:	cmp	r9, sl
    d360:	add	r0, pc
    d362:	ite	cs
    d364:	movcs	r3, #0
    d366:	movcc	r3, #1
    d368:	bl	d0a4 <repair_qgroups@@Base+0x58c>
    d36c:	ldr.w	r5, [pc, #2544]	; dd60 <repair_qgroups@@Base+0x1248>
    d370:	ldr.w	r7, [pc, #2544]	; dd64 <repair_qgroups@@Base+0x124c>
    d374:	add	r5, pc
    d376:	adds	r5, #47	; 0x2f
    d378:	add	r7, pc
    d37a:	cmp	r9, sl
    d37c:	bhi.n	d3be <repair_qgroups@@Base+0x8a6>
    d37e:	ldr	r3, [sp, #44]	; 0x2c
    d380:	ldr.w	r5, [pc, #2532]	; dd68 <repair_qgroups@@Base+0x1250>
    d384:	ldr.w	r7, [pc, #2532]	; dd6c <repair_qgroups@@Base+0x1254>
    d388:	ldr	r3, [r3, #24]
    d38a:	add	r5, pc
    d38c:	adds	r5, #65	; 0x41
    d38e:	add	r7, pc
    d390:	str	r3, [sp, #48]	; 0x30
    d392:	b.n	d5aa <repair_qgroups@@Base+0xa92>
    d394:	cmp	r3, #169	; 0xa9
    d396:	bne.n	d39e <repair_qgroups@@Base+0x886>
    d398:	ldr.w	r6, [sp, #161]	; 0xa1
    d39c:	b.n	d36c <repair_qgroups@@Base+0x854>
    d39e:	ldr.w	r1, [pc, #2512]	; dd70 <repair_qgroups@@Base+0x1258>
    d3a2:	mvns	r3, r7
    d3a4:	ldr.w	r0, [pc, #2508]	; dd74 <repair_qgroups@@Base+0x125c>
    d3a8:	and.w	r3, r3, #1
    d3ac:	add	r1, pc
    d3ae:	mov.w	r2, #580	; 0x244
    d3b2:	adds	r1, #47	; 0x2f
    d3b4:	add	r0, pc
    d3b6:	bl	d0a4 <repair_qgroups@@Base+0x58c>
    d3ba:	movs	r6, #0
    d3bc:	b.n	d36c <repair_qgroups@@Base+0x854>
    d3be:	add.w	r0, fp, sl
    d3c2:	ldrb.w	r8, [fp, sl]
    d3c6:	mov	r1, r0
    d3c8:	ldr.w	r2, [r1, #1]!
    d3cc:	ldr	r3, [r1, #4]
    d3ce:	sub.w	r1, r8, #176	; 0xb0
    d3d2:	cmp	r1, #8
    d3d4:	bhi.w	d50c <repair_qgroups@@Base+0x9f4>
    d3d8:	tbb	[pc, r1]
    d3dc:	ldr	r0, [sp, #300]	; 0x12c
    d3de:	ldr	r0, [sp, #392]	; 0x188
    d3e0:	ldr	r0, [sp, #608]	; 0x260
    d3e2:	ldr	r0, [sp, #20]
    d3e4:	movs	r5, r6
    d3e6:	movs	r1, #1
    d3e8:	str	r1, [sp, #24]
    d3ea:	ldrd	r0, r1, [sp, #32]
    d3ee:	strd	r2, r3, [sp, #8]
    d3f2:	adds	r3, r6, #1
    d3f4:	movs	r2, #0
    d3f6:	str	r3, [sp, #4]
    d3f8:	movs	r3, #0
    d3fa:	str	r3, [sp, #0]
    d3fc:	movs	r3, #0
    d3fe:	strd	r0, r1, [sp, #16]
    d402:	add	r0, sp, #172	; 0xac
    d404:	bl	cf8c <repair_qgroups@@Base+0x474>
    d408:	mov	r8, r0
    d40a:	cmp	r0, #0
    d40c:	beq.w	d536 <repair_qgroups@@Base+0xa1e>
    d410:	mov	r0, r4
    d412:	add	r4, sp, #172	; 0xac
    d414:	bl	17572 <btrfs_free_path@@Base>
    d418:	ldr	r0, [sp, #172]	; 0xac
    d41a:	cmp	r0, r4
    d41c:	bne.w	dd1c <repair_qgroups@@Base+0x1204>
    d420:	cmp.w	r8, #0
    d424:	bge.n	d42c <repair_qgroups@@Base+0x914>
    d426:	ldr	r0, [sp, #92]	; 0x5c
    d428:	bl	cdbc <repair_qgroups@@Base+0x2a4>
    d42c:	ldr.w	r2, [pc, #2376]	; dd78 <repair_qgroups@@Base+0x1260>
    d430:	ldr.w	r3, [pc, #2328]	; dd4c <repair_qgroups@@Base+0x1234>
    d434:	add	r2, pc
    d436:	ldr	r3, [r2, r3]
    d438:	ldr	r2, [r3, #0]
    d43a:	ldr	r3, [sp, #196]	; 0xc4
    d43c:	eors	r2, r3
    d43e:	beq.w	dd3a <repair_qgroups@@Base+0x1222>
    d442:	blx	8510 <__stack_chk_fail@plt>
    d446:	ldr.w	r1, [r0, #9]
    d44a:	strd	r2, r3, [sp, #8]
    d44e:	movs	r3, #0
    d450:	movs	r2, #0
    d452:	strd	r3, r3, [sp]
    d456:	str	r1, [sp, #24]
    d458:	movs	r3, #0
    d45a:	ldrd	r0, r1, [sp, #32]
    d45e:	strd	r0, r1, [sp, #16]
    d462:	add	r0, sp, #172	; 0xac
    d464:	bl	cf8c <repair_qgroups@@Base+0x474>
    d468:	mov	r8, r0
    d46a:	cmp	r0, #0
    d46c:	bne.n	d410 <repair_qgroups@@Base+0x8f8>
    d46e:	movs	r3, #13
    d470:	b.n	d4da <repair_qgroups@@Base+0x9c2>
    d472:	mov.w	r1, #4294967295	; 0xffffffff
    d476:	cmp	r3, r1
    d478:	mvn.w	r0, #8
    d47c:	it	eq
    d47e:	cmpeq	r2, r0
    d480:	beq.n	d536 <repair_qgroups@@Base+0xa1e>
    d482:	movs	r1, #1
    d484:	str	r1, [sp, #24]
    d486:	ldrd	r0, r1, [sp, #32]
    d48a:	strd	r0, r1, [sp, #16]
    d48e:	movs	r1, #0
    d490:	movs	r0, #0
    d492:	strd	r0, r1, [sp, #8]
    d496:	adds	r1, r6, #1
    d498:	str	r1, [sp, #4]
    d49a:	movs	r1, #0
    d49c:	str	r1, [sp, #0]
    d49e:	b.n	d402 <repair_qgroups@@Base+0x8ea>
    d4a0:	add.w	r3, sl, #1
    d4a4:	add	r3, fp
    d4a6:	ldr	r1, [r3, #8]
    d4a8:	ldr	r2, [r3, #12]
    d4aa:	ldr.w	ip, [r3, #24]
    d4ae:	strd	r1, r2, [sp, #132]	; 0x84
    d4b2:	movs	r2, #108	; 0x6c
    d4b4:	strb.w	r2, [sp, #140]	; 0x8c
    d4b8:	ldr	r1, [r3, #16]
    d4ba:	ldr	r2, [r3, #20]
    d4bc:	str.w	r1, [sp, #141]	; 0x8d
    d4c0:	str.w	r2, [sp, #145]	; 0x91
    d4c4:	mvn.w	r2, #8
    d4c8:	ldr	r1, [r3, #4]
    d4ca:	ldr	r0, [r3, #0]
    d4cc:	mov.w	r3, #4294967295	; 0xffffffff
    d4d0:	cmp	r1, r3
    d4d2:	it	eq
    d4d4:	cmpeq	r0, r2
    d4d6:	bne.n	d4de <repair_qgroups@@Base+0x9c6>
    d4d8:	movs	r3, #29
    d4da:	add	sl, r3
    d4dc:	b.n	d37a <repair_qgroups@@Base+0x862>
    d4de:	ldrd	r2, r3, [sp, #32]
    d4e2:	str.w	ip, [sp, #24]
    d4e6:	strd	r2, r3, [sp, #16]
    d4ea:	movs	r2, #0
    d4ec:	movs	r3, #0
    d4ee:	strd	r2, r3, [sp, #8]
    d4f2:	movs	r3, #0
    d4f4:	mov	r2, r0
    d4f6:	str	r3, [sp, #4]
    d4f8:	add	r0, sp, #172	; 0xac
    d4fa:	add	r3, sp, #132	; 0x84
    d4fc:	str	r3, [sp, #0]
    d4fe:	mov	r3, r1
    d500:	bl	cf8c <repair_qgroups@@Base+0x474>
    d504:	mov	r8, r0
    d506:	cmp	r0, #0
    d508:	beq.n	d4d8 <repair_qgroups@@Base+0x9c0>
    d50a:	b.n	d410 <repair_qgroups@@Base+0x8f8>
    d50c:	movs	r3, #1
    d50e:	movw	r2, #630	; 0x276
    d512:	mov	r1, r5
    d514:	mov	r0, r7
    d516:	bl	d0c4 <repair_qgroups@@Base+0x5ac>
    d51a:	cmp.w	r8, #176	; 0xb0
    d51e:	beq.n	d536 <repair_qgroups@@Base+0xa1e>
    d520:	cmp.w	r8, #182	; 0xb6
    d524:	beq.n	d536 <repair_qgroups@@Base+0xa1e>
    d526:	cmp.w	r8, #184	; 0xb8
    d52a:	beq.n	d46e <repair_qgroups@@Base+0x956>
    d52c:	cmp.w	r8, #178	; 0xb2
    d530:	beq.n	d4d8 <repair_qgroups@@Base+0x9c0>
    d532:	bl	d040 <repair_qgroups@@Base+0x528>
    d536:	movs	r3, #9
    d538:	b.n	d4da <repair_qgroups@@Base+0x9c2>
    d53a:	ldr	r3, [sp, #48]	; 0x30
    d53c:	mov	r1, r4
    d53e:	strb.w	r9, [r4, #65]	; 0x41
    d542:	ldr.w	r0, [r3, #464]	; 0x1d0
    d546:	bl	1ad64 <btrfs_next_sibling_tree_block@@Base>
    d54a:	subs.w	r8, r0, #0
    d54e:	blt.w	d410 <repair_qgroups@@Base+0x8f8>
    d552:	beq.n	d5c2 <repair_qgroups@@Base+0xaaa>
    d554:	b.n	d5e4 <repair_qgroups@@Base+0xacc>
    d556:	ldrb.w	r3, [sp, #160]	; 0xa0
    d55a:	cmp	r3, #175	; 0xaf
    d55c:	bls.n	d5b2 <repair_qgroups@@Base+0xa9a>
    d55e:	cmp	r3, #184	; 0xb8
    d560:	bhi.n	d5e4 <repair_qgroups@@Base+0xacc>
    d562:	subs	r3, #176	; 0xb0
    d564:	cmp	r3, #8
    d566:	bhi.w	d6f2 <repair_qgroups@@Base+0xbda>
    d56a:	tbb	[pc, r3]
    d56e:	stmia	r2!, {r4, r5, r6}
    d570:	stmia	r2!, {r0, r1, r3, r7}
    d572:	stmia	r2!, {r1, r6, r7}
    d574:	stmia	r2!, {r0, r2}
    d576:	lsls	r0, r3, #1
    d578:	movs	r3, #1
    d57a:	str	r3, [sp, #24]
    d57c:	ldrd	r2, r3, [sp, #32]
    d580:	strd	r2, r3, [sp, #16]
    d584:	ldr.w	r3, [sp, #165]	; 0xa5
    d588:	ldr.w	r2, [sp, #161]	; 0xa1
    d58c:	strd	r2, r3, [sp, #8]
    d590:	adds	r3, r6, #1
    d592:	str	r3, [sp, #4]
    d594:	movs	r3, #0
    d596:	str	r3, [sp, #0]
    d598:	movs	r2, #0
    d59a:	movs	r3, #0
    d59c:	add	r0, sp, #172	; 0xac
    d59e:	bl	cf8c <repair_qgroups@@Base+0x474>
    d5a2:	mov	r8, r0
    d5a4:	cmp	r0, #0
    d5a6:	bne.w	d410 <repair_qgroups@@Base+0x8f8>
    d5aa:	add.w	sl, sp, #152	; 0x98
    d5ae:	mov.w	r9, #0
    d5b2:	ldr	r2, [r4, #0]
    d5b4:	ldr	r3, [r4, #32]
    d5b6:	adds	r3, #1
    d5b8:	str	r3, [r4, #32]
    d5ba:	ldr.w	r2, [r2, #192]	; 0xc0
    d5be:	cmp	r3, r2
    d5c0:	bcs.n	d53a <repair_qgroups@@Base+0xa22>
    d5c2:	ldr.w	fp, [r4, #32]
    d5c6:	mov	r1, sl
    d5c8:	ldr.w	r8, [r4]
    d5cc:	mov	r2, fp
    d5ce:	mov	r0, r8
    d5d0:	bl	ce38 <repair_qgroups@@Base+0x320>
    d5d4:	ldrd	r2, r3, [sp, #32]
    d5d8:	ldrd	r0, r1, [sp, #152]	; 0x98
    d5dc:	cmp	r3, r1
    d5de:	it	eq
    d5e0:	cmpeq	r2, r0
    d5e2:	beq.n	d556 <repair_qgroups@@Base+0xa3e>
    d5e4:	mov	r0, r4
    d5e6:	ldr.w	r6, [pc, #1940]	; dd7c <repair_qgroups@@Base+0x1264>
    d5ea:	bl	1754c <btrfs_release_path@@Base>
    d5ee:	ldr.w	fp, [pc, #1936]	; dd80 <repair_qgroups@@Base+0x1268>
    d5f2:	add	r6, pc
    d5f4:	adds	r6, #82	; 0x52
    d5f6:	add	fp, pc
    d5f8:	ldr	r5, [sp, #180]	; 0xb4
    d5fa:	add	r3, sp, #180	; 0xb4
    d5fc:	cmp	r5, r3
    d5fe:	bne.w	d70c <repair_qgroups@@Base+0xbf4>
    d602:	add	r0, sp, #172	; 0xac
    d604:	movs	r1, #1
    d606:	bl	d100 <repair_qgroups@@Base+0x5e8>
    d60a:	movs	r0, #0
    d60c:	bl	b268 <ulist_alloc@@Base>
    d610:	mov	r7, r0
    d612:	cmp	r0, #0
    d614:	bne.w	d8e0 <repair_qgroups@@Base+0xdc8>
    d618:	mvn.w	r8, #11
    d61c:	b.n	d410 <repair_qgroups@@Base+0x8f8>
    d61e:	add.w	r8, r8, #96	; 0x60
    d622:	movs	r2, #25
    d624:	mla	r2, r2, fp, r8
    d628:	ldr.w	r0, [r2, #118]	; 0x76
    d62c:	add	r8, r0
    d62e:	ldr.w	r3, [r8, #101]	; 0x65
    d632:	str	r3, [sp, #24]
    d634:	ldrd	r2, r3, [sp, #32]
    d638:	strd	r2, r3, [sp, #16]
    d63c:	ldr.w	r3, [sp, #165]	; 0xa5
    d640:	ldr.w	r2, [sp, #161]	; 0xa1
    d644:	strd	r2, r3, [sp, #8]
    d648:	movs	r3, #0
    d64a:	str	r3, [sp, #4]
    d64c:	b.n	d596 <repair_qgroups@@Base+0xa7e>
    d64e:	ldr.w	r3, [sp, #165]	; 0xa5
    d652:	mov.w	r1, #4294967295	; 0xffffffff
    d656:	ldr.w	r2, [sp, #161]	; 0xa1
    d65a:	mvn.w	r0, #8
    d65e:	cmp	r3, r1
    d660:	it	eq
    d662:	cmpeq	r2, r0
    d664:	beq.n	d5aa <repair_qgroups@@Base+0xa92>
    d666:	movs	r1, #1
    d668:	str	r1, [sp, #24]
    d66a:	ldrd	r0, r1, [sp, #32]
    d66e:	strd	r0, r1, [sp, #16]
    d672:	movs	r1, #0
    d674:	movs	r0, #0
    d676:	strd	r0, r1, [sp, #8]
    d67a:	adds	r1, r6, #1
    d67c:	str	r1, [sp, #4]
    d67e:	movs	r1, #0
    d680:	str	r1, [sp, #0]
    d682:	b.n	d59c <repair_qgroups@@Base+0xa84>
    d684:	add.w	r8, r8, #96	; 0x60
    d688:	movs	r2, #25
    d68a:	mov.w	r1, #4294967295	; 0xffffffff
    d68e:	mla	fp, r2, fp, r8
    d692:	ldr.w	r0, [fp, #118]	; 0x76
    d696:	adds	r0, #101	; 0x65
    d698:	add	r8, r0
    d69a:	mvn.w	r0, #8
    d69e:	ldr.w	r2, [r8, #8]
    d6a2:	ldr.w	r3, [r8, #12]
    d6a6:	ldr.w	ip, [r8, #24]
    d6aa:	strd	r2, r3, [sp, #152]	; 0x98
    d6ae:	movs	r3, #108	; 0x6c
    d6b0:	strb.w	r3, [sp, #160]	; 0xa0
    d6b4:	ldr.w	r2, [r8, #16]
    d6b8:	ldr.w	r3, [r8, #20]
    d6bc:	str.w	r2, [sp, #161]	; 0xa1
    d6c0:	str.w	r3, [sp, #165]	; 0xa5
    d6c4:	ldr.w	r3, [r8, #4]
    d6c8:	ldr.w	r2, [r8]
    d6cc:	cmp	r3, r1
    d6ce:	it	eq
    d6d0:	cmpeq	r2, r0
    d6d2:	beq.w	d5aa <repair_qgroups@@Base+0xa92>
    d6d6:	ldrd	r0, r1, [sp, #32]
    d6da:	str.w	ip, [sp, #24]
    d6de:	strd	r0, r1, [sp, #16]
    d6e2:	movs	r1, #0
    d6e4:	movs	r0, #0
    d6e6:	strd	r0, r1, [sp, #8]
    d6ea:	movs	r1, #0
    d6ec:	str	r1, [sp, #4]
    d6ee:	add	r1, sp, #152	; 0x98
    d6f0:	b.n	d680 <repair_qgroups@@Base+0xb68>
    d6f2:	movs	r3, #1
    d6f4:	movw	r2, #714	; 0x2ca
    d6f8:	mov	r1, r5
    d6fa:	mov	r0, r7
    d6fc:	bl	d0c4 <repair_qgroups@@Base+0x5ac>
    d700:	b.n	d5aa <repair_qgroups@@Base+0xa92>
    d702:	movs	r2, #0
    d704:	movs	r3, #0
    d706:	strd	r2, r3, [sp, #56]	; 0x38
    d70a:	b.n	d5e4 <repair_qgroups@@Base+0xacc>
    d70c:	ldr	r3, [r5, #8]
    d70e:	cbnz	r3, d726 <repair_qgroups@@Base+0xc0e>
    d710:	ldr.w	r1, [pc, #1648]	; dd84 <repair_qgroups@@Base+0x126c>
    d714:	mov.w	r2, #456	; 0x1c8
    d718:	ldr.w	r0, [pc, #1644]	; dd88 <repair_qgroups@@Base+0x1270>
    d71c:	add	r1, pc
    d71e:	adds	r1, #82	; 0x52
    d720:	add	r0, pc
    d722:	bl	d068 <repair_qgroups@@Base+0x550>
    d726:	ldrd	r8, r9, [r5, #48]	; 0x30
    d72a:	orrs.w	r3, r8, r9
    d72e:	beq.n	d744 <repair_qgroups@@Base+0xc2c>
    d730:	ldr.w	r1, [pc, #1624]	; dd8c <repair_qgroups@@Base+0x1274>
    d734:	movw	r2, #457	; 0x1c9
    d738:	ldr.w	r0, [pc, #1620]	; dd90 <repair_qgroups@@Base+0x1278>
    d73c:	add	r1, pc
    d73e:	adds	r1, #82	; 0x52
    d740:	add	r0, pc
    d742:	b.n	d722 <repair_qgroups@@Base+0xc0a>
    d744:	ldrb	r3, [r5, #24]
    d746:	cbz	r3, d75c <repair_qgroups@@Base+0xc44>
    d748:	ldr.w	r1, [pc, #1608]	; dd94 <repair_qgroups@@Base+0x127c>
    d74c:	mov.w	r2, #458	; 0x1ca
    d750:	ldr.w	r0, [pc, #1604]	; dd98 <repair_qgroups@@Base+0x1280>
    d754:	add	r1, pc
    d756:	adds	r1, #82	; 0x52
    d758:	add	r0, pc
    d75a:	b.n	d722 <repair_qgroups@@Base+0xc0a>
    d75c:	ldrd	sl, r7, [r5, #56]	; 0x38
    d760:	movw	r2, #459	; 0x1cb
    d764:	mov	r1, r6
    d766:	mov	r0, fp
    d768:	orrs.w	r3, sl, r7
    d76c:	ite	eq
    d76e:	moveq	r3, #1
    d770:	movne	r3, #0
    d772:	bl	d0a4 <repair_qgroups@@Base+0x58c>
    d776:	mov	r3, r7
    d778:	ldr	r0, [sp, #44]	; 0x2c
    d77a:	mov	r2, sl
    d77c:	strd	r8, r9, [sp]
    d780:	bl	1cd7c <read_tree_block@@Base>
    d784:	mov	r7, r0
    d786:	cbz	r0, d7c4 <repair_qgroups@@Base+0xcac>
    d788:	cmn.w	r0, #4096	; 0x1000
    d78c:	bhi.n	d7c4 <repair_qgroups@@Base+0xcac>
    d78e:	ldr	r3, [r0, #84]	; 0x54
    d790:	lsls	r2, r3, #29
    d792:	bpl.n	d7c4 <repair_qgroups@@Base+0xcac>
    d794:	ldrb.w	r2, [r0, #196]	; 0xc4
    d798:	cbz	r2, d7d0 <repair_qgroups@@Base+0xcb8>
    d79a:	movs	r3, #17
    d79c:	movs	r2, #101	; 0x65
    d79e:	add	r1, sp, #152	; 0x98
    d7a0:	bl	16a0e <read_extent_buffer@@Base>
    d7a4:	ldr.w	r3, [sp, #165]	; 0xa5
    d7a8:	ldr.w	r2, [sp, #161]	; 0xa1
    d7ac:	str.w	r3, [r5, #29]
    d7b0:	str.w	r2, [r5, #25]
    d7b4:	ldrb.w	r3, [sp, #160]	; 0xa0
    d7b8:	strb	r3, [r5, #24]
    d7ba:	ldr	r3, [sp, #152]	; 0x98
    d7bc:	str	r3, [r5, #16]
    d7be:	ldr	r3, [sp, #156]	; 0x9c
    d7c0:	str	r3, [r5, #20]
    d7c2:	b.n	d7d8 <repair_qgroups@@Base+0xcc0>
    d7c4:	mov	r0, r7
    d7c6:	bl	16314 <free_extent_buffer@@Base>
    d7ca:	mvn.w	r8, #4
    d7ce:	b.n	d410 <repair_qgroups@@Base+0x8f8>
    d7d0:	add.w	r1, r5, #16
    d7d4:	bl	ce38 <repair_qgroups@@Base+0x320>
    d7d8:	mov	r0, r7
    d7da:	bl	16314 <free_extent_buffer@@Base>
    d7de:	ldrd	r2, r3, [r5]
    d7e2:	str	r3, [r2, #4]
    d7e4:	str	r2, [r3, #0]
    d7e6:	ldr	r3, [sp, #172]	; 0xac
    d7e8:	str	r5, [r3, #4]
    d7ea:	str	r3, [r5, #0]
    d7ec:	add	r3, sp, #172	; 0xac
    d7ee:	str	r5, [sp, #172]	; 0xac
    d7f0:	str	r3, [r5, #4]
    d7f2:	b.n	d5f8 <repair_qgroups@@Base+0xae0>
    d7f4:	ldrd	r2, r3, [r5]
    d7f8:	str	r3, [r2, #4]
    d7fa:	str	r2, [r3, #0]
    d7fc:	ldr	r3, [sp, #172]	; 0xac
    d7fe:	str	r5, [r3, #4]
    d800:	str	r3, [r5, #0]
    d802:	add	r3, sp, #172	; 0xac
    d804:	str	r3, [r5, #4]
    d806:	ldrd	r2, r3, [r5, #48]	; 0x30
    d80a:	str	r5, [sp, #172]	; 0xac
    d80c:	strd	r2, r3, [sp, #64]	; 0x40
    d810:	orrs	r3, r2
    d812:	beq.n	d828 <repair_qgroups@@Base+0xd10>
    d814:	ldr.w	r1, [pc, #1412]	; dd9c <repair_qgroups@@Base+0x1284>
    d818:	movw	r2, #381	; 0x17d
    d81c:	ldr.w	r0, [pc, #1408]	; dda0 <repair_qgroups@@Base+0x1288>
    d820:	add	r1, pc
    d822:	adds	r1, #101	; 0x65
    d824:	add	r0, pc
    d826:	b.n	d722 <repair_qgroups@@Base+0xc0a>
    d828:	ldr	r3, [r5, #40]	; 0x28
    d82a:	cbnz	r3, d840 <repair_qgroups@@Base+0xd28>
    d82c:	ldr.w	r1, [pc, #1396]	; dda4 <repair_qgroups@@Base+0x128c>
    d830:	mov.w	r2, #382	; 0x17e
    d834:	ldr.w	r0, [pc, #1392]	; dda8 <repair_qgroups@@Base+0x1290>
    d838:	add	r1, pc
    d83a:	adds	r1, #101	; 0x65
    d83c:	add	r0, pc
    d83e:	b.n	d722 <repair_qgroups@@Base+0xc0a>
    d840:	ldr	r3, [r5, #8]
    d842:	add	r1, sp, #132	; 0x84
    d844:	ldr	r6, [r5, #36]	; 0x24
    d846:	mov.w	r2, #4294967295	; 0xffffffff
    d84a:	ldr	r0, [sp, #44]	; 0x2c
    d84c:	str	r3, [sp, #132]	; 0x84
    d84e:	ldr	r3, [r5, #12]
    d850:	strb.w	r2, [sp, #141]	; 0x8d
    d854:	strb.w	r2, [sp, #142]	; 0x8e
    d858:	str	r3, [sp, #136]	; 0x88
    d85a:	movs	r3, #132	; 0x84
    d85c:	strb.w	r2, [sp, #143]	; 0x8f
    d860:	strb.w	r3, [sp, #140]	; 0x8c
    d864:	strb.w	r2, [sp, #144]	; 0x90
    d868:	strb.w	r2, [sp, #145]	; 0x91
    d86c:	strb.w	r2, [sp, #146]	; 0x92
    d870:	strb.w	r2, [sp, #147]	; 0x93
    d874:	strb.w	r2, [sp, #148]	; 0x94
    d878:	bl	1d0fe <btrfs_read_fs_root@@Base>
    d87c:	cmn.w	r0, #4096	; 0x1000
    d880:	mov	r9, r0
    d882:	bls.w	da26 <repair_qgroups@@Base+0xf0e>
    d886:	mov	r8, r0
    d888:	movs	r3, #0
    d88a:	mov	r0, r4
    d88c:	strb.w	r3, [r4, #65]	; 0x41
    d890:	bl	1754c <btrfs_release_path@@Base>
    d894:	cmn.w	r8, #2
    d898:	beq.n	d8e0 <repair_qgroups@@Base+0xdc8>
    d89a:	cmp.w	r8, #0
    d89e:	bne.n	d8ec <repair_qgroups@@Base+0xdd4>
    d8a0:	add	r1, sp, #96	; 0x60
    d8a2:	mov	r0, r7
    d8a4:	str.w	r8, [sp, #96]	; 0x60
    d8a8:	bl	b468 <ulist_next@@Base>
    d8ac:	cbz	r0, d8b6 <repair_qgroups@@Base+0xd9e>
    d8ae:	ldrd	r2, r3, [r0]
    d8b2:	strd	r2, r3, [sp, #64]	; 0x40
    d8b6:	ldrd	r2, r3, [sp, #64]	; 0x40
    d8ba:	strd	r2, r3, [r5, #48]	; 0x30
    d8be:	cbz	r0, d8c2 <repair_qgroups@@Base+0xdaa>
    d8c0:	ldr	r0, [r0, #8]
    d8c2:	add	r6, sp, #96	; 0x60
    d8c4:	add.w	r8, r5, #64	; 0x40
    d8c8:	str	r0, [r5, #44]	; 0x2c
    d8ca:	mov	r1, r6
    d8cc:	mov	r0, r7
    d8ce:	bl	b468 <ulist_next@@Base>
    d8d2:	mov	r9, r0
    d8d4:	cmp	r0, #0
    d8d6:	bne.w	dbea <repair_qgroups@@Base+0x10d2>
    d8da:	mov	r0, r7
    d8dc:	bl	b256 <ulist_reinit@@Base>
    d8e0:	ldr	r5, [sp, #188]	; 0xbc
    d8e2:	add	r3, sp, #188	; 0xbc
    d8e4:	cmp	r5, r3
    d8e6:	bne.n	d7f4 <repair_qgroups@@Base+0xcdc>
    d8e8:	mov.w	r8, #0
    d8ec:	mov	r0, r7
    d8ee:	bl	b27c <ulist_free@@Base>
    d8f2:	cmp.w	r8, #0
    d8f6:	bne.w	d410 <repair_qgroups@@Base+0x8f8>
    d8fa:	add	r0, sp, #172	; 0xac
    d8fc:	movs	r1, #2
    d8fe:	bl	d100 <repair_qgroups@@Base+0x5e8>
    d902:	ldr	r2, [sp, #180]	; 0xb4
    d904:	ldr.w	r1, [pc, #1188]	; ddac <repair_qgroups@@Base+0x1294>
    d908:	add	r3, sp, #180	; 0xb4
    d90a:	subs	r3, r2, r3
    d90c:	ldr.w	r0, [pc, #1184]	; ddb0 <repair_qgroups@@Base+0x1298>
    d910:	add	r1, pc
    d912:	movw	r2, #801	; 0x321
    d916:	add.w	r1, r1, #29
    d91a:	it	ne
    d91c:	movne	r3, #1
    d91e:	add	r0, pc
    d920:	str	r1, [sp, #48]	; 0x30
    d922:	bl	d0a4 <repair_qgroups@@Base+0x58c>
    d926:	ldr	r2, [sp, #188]	; 0xbc
    d928:	add	r3, sp, #188	; 0xbc
    d92a:	ldr.w	r0, [pc, #1160]	; ddb4 <repair_qgroups@@Base+0x129c>
    d92e:	subs	r3, r2, r3
    d930:	ldr	r1, [sp, #48]	; 0x30
    d932:	add	r0, pc
    d934:	movw	r2, #802	; 0x322
    d938:	it	ne
    d93a:	movne	r3, #1
    d93c:	ldr.w	r6, [pc, #1144]	; ddb8 <repair_qgroups@@Base+0x12a0>
    d940:	bl	d0a4 <repair_qgroups@@Base+0x58c>
    d944:	ldr.w	r3, [pc, #1140]	; ddbc <repair_qgroups@@Base+0x12a4>
    d948:	add	r6, pc
    d94a:	add	r3, pc
    d94c:	adds	r6, #29
    d94e:	vmov	s16, r3
    d952:	ldr	r5, [sp, #172]	; 0xac
    d954:	add	r3, sp, #172	; 0xac
    d956:	cmp	r5, r3
    d958:	beq.w	d410 <repair_qgroups@@Base+0x8f8>
    d95c:	ldr	r3, [r5, #40]	; 0x28
    d95e:	cmp	r3, #0
    d960:	bge.n	d972 <repair_qgroups@@Base+0xe5a>
    d962:	vmov	r0, s16
    d966:	movs	r3, #1
    d968:	movw	r2, #806	; 0x326
    d96c:	mov	r1, r6
    d96e:	bl	d0c4 <repair_qgroups@@Base+0x5ac>
    d972:	ldr	r3, [sp, #76]	; 0x4c
    d974:	cbz	r3, d9a8 <repair_qgroups@@Base+0xe90>
    d976:	ldr	r3, [r5, #40]	; 0x28
    d978:	cbz	r3, d9a8 <repair_qgroups@@Base+0xe90>
    d97a:	ldrd	r2, r3, [r5, #8]
    d97e:	orrs.w	r1, r2, r3
    d982:	beq.n	d9a8 <repair_qgroups@@Base+0xe90>
    d984:	ldrd	r0, r1, [r5, #48]	; 0x30
    d988:	orrs.w	r7, r0, r1
    d98c:	bne.n	d9a8 <repair_qgroups@@Base+0xe90>
    d98e:	mov.w	ip, #0
    d992:	strd	r0, r1, [sp]
    d996:	str.w	ip, [sp, #8]
    d99a:	ldr	r0, [sp, #76]	; 0x4c
    d99c:	bl	b390 <ulist_add@@Base>
    d9a0:	subs.w	r8, r0, #0
    d9a4:	blt.w	d410 <repair_qgroups@@Base+0x8f8>
    d9a8:	ldr	r3, [r5, #40]	; 0x28
    d9aa:	cmp	r3, #0
    d9ac:	beq.w	dd0c <repair_qgroups@@Base+0x11f4>
    d9b0:	ldrd	r2, r3, [r5, #48]	; 0x30
    d9b4:	orrs.w	r1, r2, r3
    d9b8:	beq.w	dd0c <repair_qgroups@@Base+0x11f4>
    d9bc:	ldr	r0, [sp, #72]	; 0x48
    d9be:	ldr	r1, [r5, #44]	; 0x2c
    d9c0:	cmp	r0, #0
    d9c2:	beq.w	dca4 <repair_qgroups@@Base+0x118c>
    d9c6:	cmp	r1, #0
    d9c8:	bne.w	dca4 <repair_qgroups@@Base+0x118c>
    d9cc:	ldr.w	sl, [r5, #36]	; 0x24
    d9d0:	cmp.w	sl, #0
    d9d4:	bne.w	dca4 <repair_qgroups@@Base+0x118c>
    d9d8:	movs	r0, #0
    d9da:	movs	r1, #0
    d9dc:	strd	r0, r1, [sp]
    d9e0:	ldr	r0, [sp, #44]	; 0x2c
    d9e2:	bl	1cd7c <read_tree_block@@Base>
    d9e6:	mov	r9, r0
    d9e8:	cmp	r0, #0
    d9ea:	beq.w	dc2e <repair_qgroups@@Base+0x1116>
    d9ee:	cmn.w	r0, #4096	; 0x1000
    d9f2:	bhi.w	dc2e <repair_qgroups@@Base+0x1116>
    d9f6:	ldr	r3, [r0, #84]	; 0x54
    d9f8:	lsls	r3, r3, #29
    d9fa:	bpl.w	dc2e <repair_qgroups@@Base+0x1116>
    d9fe:	ldr	r3, [sp, #72]	; 0x48
    da00:	add.w	fp, sp, #152	; 0x98
    da04:	ldrd	r2, r3, [r3]
    da08:	strd	r2, r3, [sp, #48]	; 0x30
    da0c:	ldr.w	r3, [r0, #192]	; 0xc0
    da10:	str	r3, [sp, #56]	; 0x38
    da12:	add.w	r3, r0, #197	; 0xc5
    da16:	str	r3, [sp, #64]	; 0x40
    da18:	ldr	r3, [sp, #56]	; 0x38
    da1a:	cmp	r3, sl
    da1c:	bgt.w	dc32 <repair_qgroups@@Base+0x111a>
    da20:	mov.w	r8, #0
    da24:	b.n	dc92 <repair_qgroups@@Base+0x117a>
    da26:	ldrb.w	r3, [r0, #246]	; 0xf6
    da2a:	movs	r0, #0
    da2c:	adds	r3, #1
    da2e:	cmp	r6, r3
    da30:	beq.w	dbe6 <repair_qgroups@@Base+0x10ce>
    da34:	strb.w	r6, [r4, #65]	; 0x41
    da38:	add.w	r2, r5, #16
    da3c:	mov	r3, r4
    da3e:	mov	r1, r9
    da40:	strd	r0, r0, [sp]
    da44:	bl	19930 <btrfs_search_slot@@Base>
    da48:	subs.w	r8, r0, #0
    da4c:	blt.w	d888 <repair_qgroups@@Base+0xd70>
    da50:	ldr.w	r3, [r4, r6, lsl #2]
    da54:	cbz	r3, da7c <repair_qgroups@@Base+0xf64>
    da56:	movs	r3, #0
    da58:	str	r3, [sp, #100]	; 0x64
    da5a:	cbz	r6, da9c <repair_qgroups@@Base+0xf84>
    da5c:	ldr.w	r2, [r4, r6, lsl #2]
    da60:	movs	r0, #0
    da62:	movs	r1, #0
    da64:	str	r3, [sp, #8]
    da66:	strd	r0, r1, [sp]
    da6a:	mov	r0, r7
    da6c:	ldrd	r2, r3, [r2, #40]	; 0x28
    da70:	bl	b390 <ulist_add@@Base>
    da74:	and.w	r6, r0, r0, asr #31
    da78:	mov	r8, r6
    da7a:	b.n	d888 <repair_qgroups@@Base+0xd70>
    da7c:	cbnz	r6, da98 <repair_qgroups@@Base+0xf80>
    da7e:	ldr	r1, [pc, #832]	; (ddc0 <repair_qgroups@@Base+0x12a8>)
    da80:	movs	r3, #1
    da82:	ldr	r0, [pc, #832]	; (ddc4 <repair_qgroups@@Base+0x12ac>)
    da84:	mov.w	r2, #342	; 0x156
    da88:	add	r1, pc
    da8a:	mov.w	r8, #1
    da8e:	adds	r1, #125	; 0x7d
    da90:	add	r0, pc
    da92:	bl	d0c4 <repair_qgroups@@Base+0x5ac>
    da96:	b.n	d888 <repair_qgroups@@Base+0xd70>
    da98:	subs	r6, #1
    da9a:	b.n	da50 <repair_qgroups@@Base+0xf38>
    da9c:	ldrd	r2, r3, [r5, #56]	; 0x38
    daa0:	strd	r2, r3, [sp, #80]	; 0x50
    daa4:	ldr	r3, [r4, #0]
    daa6:	ldr	r2, [r4, #32]
    daa8:	ldr.w	r3, [r3, #192]	; 0xc0
    daac:	cmp	r2, r3
    daae:	bcc.w	dbe2 <repair_qgroups@@Base+0x10ca>
    dab2:	strb.w	r6, [r4, #65]	; 0x41
    dab6:	mov	r1, r4
    dab8:	ldr.w	r0, [r9, #464]	; 0x1d0
    dabc:	bl	1ad64 <btrfs_next_sibling_tree_block@@Base>
    dac0:	mov	r8, r0
    dac2:	movs	r3, #0
    dac4:	movs	r2, #0
    dac6:	strd	r2, r3, [sp, #48]	; 0x30
    daca:	add	r3, sp, #152	; 0x98
    dacc:	vmov	s16, r3
    dad0:	b.n	db14 <repair_qgroups@@Base+0xffc>
    dad2:	add	r3, sp, #100	; 0x64
    dad4:	str	r3, [sp, #8]
    dad6:	ldr	r3, [sp, #72]	; 0x48
    dad8:	ldrd	r0, r1, [r3]
    dadc:	strd	r0, r1, [sp]
    dae0:	mov	r1, sl
    dae2:	vmov	r0, s16
    dae6:	bl	cea0 <repair_qgroups@@Base+0x388>
    daea:	subs.w	r8, r0, #0
    daee:	blt.n	dbc0 <repair_qgroups@@Base+0x10a8>
    daf0:	beq.n	db94 <repair_qgroups@@Base+0x107c>
    daf2:	ldr	r2, [r4, #0]
    daf4:	ldr	r3, [r4, #32]
    daf6:	adds	r3, #1
    daf8:	str	r3, [r4, #32]
    dafa:	ldr.w	r2, [r2, #192]	; 0xc0
    dafe:	cmp	r3, r2
    db00:	bcc.n	db1c <repair_qgroups@@Base+0x1004>
    db02:	movs	r3, #0
    db04:	mov	r1, r4
    db06:	strb.w	r3, [r4, #65]	; 0x41
    db0a:	ldr.w	r0, [r9, #464]	; 0x1d0
    db0e:	bl	1ad64 <btrfs_next_sibling_tree_block@@Base>
    db12:	mov	r8, r0
    db14:	cmp.w	r8, #0
    db18:	bne.w	dd34 <repair_qgroups@@Base+0x121c>
    db1c:	ldrd	r2, r3, [sp, #48]	; 0x30
    db20:	ldrd	r0, r1, [sp, #56]	; 0x38
    db24:	cmp	r3, r1
    db26:	it	eq
    db28:	cmpeq	r2, r0
    db2a:	bcs.n	da78 <repair_qgroups@@Base+0xf60>
    db2c:	ldr.w	sl, [r4]
    db30:	ldr.w	fp, [r4, #32]
    db34:	vmov	r1, s16
    db38:	mov	r0, sl
    db3a:	mov	r2, fp
    db3c:	bl	ce38 <repair_qgroups@@Base+0x320>
    db40:	ldrd	r0, r1, [sp, #152]	; 0x98
    db44:	ldr	r3, [r5, #20]
    db46:	ldr	r2, [r5, #16]
    db48:	cmp	r1, r3
    db4a:	it	eq
    db4c:	cmpeq	r0, r2
    db4e:	bne.n	da78 <repair_qgroups@@Base+0xf60>
    db50:	ldrb.w	r3, [sp, #160]	; 0xa0
    db54:	cmp	r3, #108	; 0x6c
    db56:	bne.n	da78 <repair_qgroups@@Base+0xf60>
    db58:	add.w	r3, sl, #96	; 0x60
    db5c:	movs	r2, #25
    db5e:	mla	fp, r2, fp, r3
    db62:	ldr.w	r2, [fp, #118]	; 0x76
    db66:	ldrd	fp, ip, [sp, #80]	; 0x50
    db6a:	adds	r2, #101	; 0x65
    db6c:	add	r3, r2
    db6e:	ldr.w	r0, [r3, #21]!
    db72:	ldr	r1, [r3, #4]
    db74:	cmp	ip, r1
    db76:	it	eq
    db78:	cmpeq	fp, r0
    db7a:	bne.n	daf2 <repair_qgroups@@Base+0xfda>
    db7c:	movs	r3, #0
    db7e:	str	r3, [sp, #100]	; 0x64
    db80:	ldr	r3, [sp, #48]	; 0x30
    db82:	adds	r3, #1
    db84:	str	r3, [sp, #48]	; 0x30
    db86:	ldr	r3, [sp, #52]	; 0x34
    db88:	adc.w	r3, r3, #0
    db8c:	str	r3, [sp, #52]	; 0x34
    db8e:	ldr	r3, [sp, #72]	; 0x48
    db90:	cmp	r3, #0
    db92:	bne.n	dad2 <repair_qgroups@@Base+0xfba>
    db94:	ldrd	r0, r1, [sl, #40]	; 0x28
    db98:	movs	r2, #0
    db9a:	movs	r3, #0
    db9c:	strd	r2, r3, [sp, #104]	; 0x68
    dba0:	add	r2, sp, #104	; 0x68
    dba2:	str	r2, [sp, #8]
    dba4:	ldr	r2, [sp, #100]	; 0x64
    dba6:	movs	r3, #0
    dba8:	str	r3, [sp, #12]
    dbaa:	strd	r2, r3, [sp]
    dbae:	mov	r2, r0
    dbb0:	mov	r3, r1
    dbb2:	mov	r0, r7
    dbb4:	bl	b292 <ulist_add_merge@@Base>
    dbb8:	ldr	r3, [sp, #104]	; 0x68
    dbba:	subs.w	r8, r0, #0
    dbbe:	bge.n	dbca <repair_qgroups@@Base+0x10b2>
    dbc0:	ldr	r0, [sp, #100]	; 0x64
    dbc2:	mov	r6, r8
    dbc4:	bl	cdbc <repair_qgroups@@Base+0x2a4>
    dbc8:	b.n	da78 <repair_qgroups@@Base+0xf60>
    dbca:	bne.n	dbdc <repair_qgroups@@Base+0x10c4>
    dbcc:	ldr	r2, [sp, #72]	; 0x48
    dbce:	cbz	r2, dbdc <repair_qgroups@@Base+0x10c4>
    dbd0:	mov	r2, r3
    dbd2:	ldr	r3, [r3, #16]
    dbd4:	cmp	r3, #0
    dbd6:	bne.n	dbd0 <repair_qgroups@@Base+0x10b8>
    dbd8:	ldr	r3, [sp, #100]	; 0x64
    dbda:	str	r3, [r2, #16]
    dbdc:	movs	r3, #0
    dbde:	str	r3, [sp, #100]	; 0x64
    dbe0:	b.n	daf2 <repair_qgroups@@Base+0xfda>
    dbe2:	mov	r8, r6
    dbe4:	b.n	dac2 <repair_qgroups@@Base+0xfaa>
    dbe6:	mov	r8, r0
    dbe8:	b.n	d888 <repair_qgroups@@Base+0xd70>
    dbea:	movs	r0, #64	; 0x40
    dbec:	blx	8678 <malloc@plt+0x4>
    dbf0:	mov	r3, r0
    dbf2:	cbz	r0, dc28 <repair_qgroups@@Base+0x1110>
    dbf4:	mov	r2, r5
    dbf6:	mov	lr, r0
    dbf8:	ldr	r0, [r2, #0]
    dbfa:	adds	r2, #8
    dbfc:	ldr.w	r1, [r2, #-4]
    dc00:	cmp	r2, r8
    dc02:	mov	ip, lr
    dc04:	stmia.w	ip!, {r0, r1}
    dc08:	mov	lr, ip
    dc0a:	bne.n	dbf8 <repair_qgroups@@Base+0x10e0>
    dc0c:	ldrd	r0, r1, [r9]
    dc10:	strd	r0, r1, [r3, #48]	; 0x30
    dc14:	add	r1, sp, #172	; 0xac
    dc16:	ldr.w	r2, [r9, #8]
    dc1a:	str	r2, [r3, #44]	; 0x2c
    dc1c:	ldr	r2, [sp, #176]	; 0xb0
    dc1e:	str	r3, [sp, #176]	; 0xb0
    dc20:	strd	r1, r2, [r3]
    dc24:	str	r3, [r2, #0]
    dc26:	b.n	d8ca <repair_qgroups@@Base+0xdb2>
    dc28:	mvn.w	r8, #11
    dc2c:	b.n	d8ec <repair_qgroups@@Base+0xdd4>
    dc2e:	mov	r0, r9
    dc30:	b.n	d7c6 <repair_qgroups@@Base+0xcae>
    dc32:	mov	r2, sl
    dc34:	mov	r1, fp
    dc36:	mov	r0, r9
    dc38:	bl	ce38 <repair_qgroups@@Base+0x320>
    dc3c:	ldrb.w	r2, [sp, #160]	; 0xa0
    dc40:	cmp	r2, #108	; 0x6c
    dc42:	beq.n	dc4a <repair_qgroups@@Base+0x1132>
    dc44:	add.w	sl, sl, #1
    dc48:	b.n	da18 <repair_qgroups@@Base+0xf00>
    dc4a:	ldr	r3, [sp, #64]	; 0x40
    dc4c:	movs	r2, #25
    dc4e:	add.w	r1, r9, #96	; 0x60
    dc52:	mla	r2, r2, sl, r3
    dc56:	ldr.w	r2, [r2, #17]
    dc5a:	adds	r2, #101	; 0x65
    dc5c:	add	r1, r2
    dc5e:	ldrb	r0, [r1, #20]
    dc60:	cmp	r0, #0
    dc62:	beq.n	dc44 <repair_qgroups@@Base+0x112c>
    dc64:	ldr.w	r3, [r1, #21]!
    dc68:	mov	r7, r3
    dc6a:	ldr	r3, [r1, #4]
    dc6c:	ldrd	r0, r1, [sp, #32]
    dc70:	cmp	r1, r3
    dc72:	it	eq
    dc74:	cmpeq	r0, r7
    dc76:	bne.n	dc44 <repair_qgroups@@Base+0x112c>
    dc78:	add	r1, sp, #92	; 0x5c
    dc7a:	str	r1, [sp, #8]
    dc7c:	ldrd	r0, r1, [sp, #48]	; 0x30
    dc80:	strd	r0, r1, [sp]
    dc84:	mov	r1, r9
    dc86:	mov	r0, fp
    dc88:	bl	cea0 <repair_qgroups@@Base+0x388>
    dc8c:	subs.w	r8, r0, #0
    dc90:	bge.n	dc44 <repair_qgroups@@Base+0x112c>
    dc92:	mov	r0, r9
    dc94:	bl	16314 <free_extent_buffer@@Base>
    dc98:	cmp.w	r8, #0
    dc9c:	bne.w	d410 <repair_qgroups@@Base+0x8f8>
    dca0:	ldr	r3, [sp, #92]	; 0x5c
    dca2:	str	r3, [r5, #44]	; 0x2c
    dca4:	ldrd	r0, r1, [r5, #48]	; 0x30
    dca8:	movs	r3, #0
    dcaa:	ldr.w	ip, [r5, #44]	; 0x2c
    dcae:	ldr	r2, [sp, #92]	; 0x5c
    dcb0:	str	r3, [sp, #12]
    dcb2:	strd	ip, r3, [sp]
    dcb6:	strd	r2, r3, [sp, #152]	; 0x98
    dcba:	add	r2, sp, #152	; 0x98
    dcbc:	mov	r3, r1
    dcbe:	str	r2, [sp, #8]
    dcc0:	mov	r2, r0
    dcc2:	vmov	r0, s17
    dcc6:	bl	b292 <ulist_add_merge@@Base>
    dcca:	ldr.w	r9, [sp, #152]	; 0x98
    dcce:	str.w	r9, [sp, #92]	; 0x5c
    dcd2:	subs.w	r8, r0, #0
    dcd6:	blt.w	d410 <repair_qgroups@@Base+0x8f8>
    dcda:	bne.n	dd08 <repair_qgroups@@Base+0x11f0>
    dcdc:	ldr	r3, [sp, #72]	; 0x48
    dcde:	cbz	r3, dd08 <repair_qgroups@@Base+0x11f0>
    dce0:	ldr	r1, [pc, #228]	; (ddc8 <repair_qgroups@@Base+0x12b0>)
    dce2:	clz	r3, r9
    dce6:	ldr	r0, [pc, #228]	; (ddcc <repair_qgroups@@Base+0x12b4>)
    dce8:	movw	r2, #841	; 0x349
    dcec:	add	r1, pc
    dcee:	lsrs	r3, r3, #5
    dcf0:	adds	r1, #29
    dcf2:	add	r0, pc
    dcf4:	bl	d0a4 <repair_qgroups@@Base+0x58c>
    dcf8:	mov	r3, r9
    dcfa:	ldr.w	r9, [r9, #16]
    dcfe:	cmp.w	r9, #0
    dd02:	bne.n	dcf8 <repair_qgroups@@Base+0x11e0>
    dd04:	ldr	r2, [r5, #44]	; 0x2c
    dd06:	str	r2, [r3, #16]
    dd08:	movs	r3, #0
    dd0a:	str	r3, [sp, #92]	; 0x5c
    dd0c:	ldrd	r2, r3, [r5]
    dd10:	mov	r0, r5
    dd12:	str	r3, [r2, #4]
    dd14:	str	r2, [r3, #0]
    dd16:	blx	8434 <free@plt+0x4>
    dd1a:	b.n	d952 <repair_qgroups@@Base+0xe3a>
    dd1c:	ldrd	r2, r3, [r0]
    dd20:	str	r3, [r2, #4]
    dd22:	str	r2, [r3, #0]
    dd24:	blx	8434 <free@plt+0x4>
    dd28:	b.w	d418 <repair_qgroups@@Base+0x900>
    dd2c:	mvn.w	r8, #11
    dd30:	b.w	d42c <repair_qgroups@@Base+0x914>
    dd34:	bgt.w	da78 <repair_qgroups@@Base+0xf60>
    dd38:	b.n	dbc0 <repair_qgroups@@Base+0x10a8>
    dd3a:	mov	r0, r8
    dd3c:	add	sp, #204	; 0xcc
    dd3e:	vpop	{d8}
    dd42:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dd46:	nop
    dd48:	ldr	r6, [r3, #56]	; 0x38
    dd4a:	movs	r5, r0
    dd4c:	lsls	r0, r4, #8
    dd4e:	movs	r0, r0
    dd50:	ldmia	r0, {r0, r1, r3, r5, r6, r7}
    dd52:	movs	r2, r0
    dd54:	stmia	r7!, {r0, r1, r3, r5, r7}
    dd56:	movs	r2, r0
    dd58:	stmia	r7!, {r2, r3, r4, r6}
    dd5a:	movs	r2, r0
    dd5c:	ldmia	r0, {r0, r1, r2, r3}
    dd5e:	movs	r2, r0
    dd60:	ldmia	r0, {r0, r2}
    dd62:	movs	r2, r0
    dd64:	smmla	r0, r9, r2, r0
    dd68:	stmia	r7!, {r0, r1, r2, r3, r5, r6, r7}
    dd6a:	movs	r2, r0
    dd6c:	smlsd	r0, r3, r2, r0
    dd70:	stmia	r7!, {r0, r2, r3, r6, r7}
    dd72:	movs	r2, r0
    dd74:	stmia	r6!, {r4, r5, r7}
    dd76:	movs	r2, r0
    dd78:	ldr	r0, [r2, #20]
    dd7a:	movs	r5, r0
    dd7c:	stmia	r5!, {r0, r1, r2, r7}
    dd7e:	movs	r2, r0
    dd80:	stmia	r4!, {r2, r6, r7}
    dd82:	movs	r2, r0
    dd84:	stmia	r4!, {r0, r2, r3, r4, r6}
    dd86:	movs	r2, r0
    dd88:	stmia	r3!, {r1, r2, r5, r6}
    dd8a:	movs	r2, r0
    dd8c:	stmia	r4!, {r0, r2, r3, r4, r5}
    dd8e:	movs	r2, r0
    dd90:	stmia	r3!, {r0, r1, r4, r6}
    dd92:	movs	r2, r0
    dd94:	stmia	r4!, {r0, r2, r5}
    dd96:	movs	r2, r0
    dd98:	stmia	r3!, {r3, r6}
    dd9a:	movs	r2, r0
    dd9c:	stmia	r3!, {r0, r3, r4, r6}
    dd9e:	movs	r2, r0
    dda0:	stmia	r2!, {r0, r1, r2, r3, r5, r6}
    dda2:	movs	r2, r0
    dda4:	stmia	r3!, {r0, r6}
    dda6:	movs	r2, r0
    dda8:	stmia	r2!, {r0, r2, r4, r7}
    ddaa:	movs	r2, r0
    ddac:	stmia	r2!, {r0, r3, r5, r6}
    ddae:	movs	r2, r0
    ddb0:	stmia	r1!, {r1, r2, r3, r4, r5, r7}
    ddb2:	movs	r2, r0
    ddb4:	stmia	r1!, {r0, r1, r2, r4, r6, r7}
    ddb6:	movs	r2, r0
    ddb8:	stmia	r2!, {r0, r4, r5}
    ddba:	movs	r2, r0
    ddbc:	stmia	r1!, {r0, r2, r3, r5, r6, r7}
    ddbe:	movs	r2, r0
    ddc0:	stmia	r0!, {r0, r4, r5, r6, r7}
    ddc2:	movs	r2, r0
    ddc4:	orr.w	r0, r1, #8519680	; 0x820000
    ddc8:	bkpt	0x008d
    ddca:	movs	r2, r0
    ddcc:	bkpt	0x0054
    ddce:	movs	r2, r0
    ddd0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ddd4:	mov	fp, r2
    ddd6:	ldr	r2, [pc, #164]	; (de7c <repair_qgroups@@Base+0x1364>)
    ddd8:	mov	r4, r3
    ddda:	ldr	r3, [pc, #164]	; (de80 <repair_qgroups@@Base+0x1368>)
    dddc:	sub	sp, #28
    ddde:	add	r2, pc
    dde0:	mov	r7, r0
    dde2:	movs	r0, #0
    dde4:	ldr.w	r9, [sp, #64]	; 0x40
    dde8:	ldr	r3, [r2, r3]
    ddea:	mov	r8, r1
    ddec:	ldr	r3, [r3, #0]
    ddee:	str	r3, [sp, #20]
    ddf0:	mov.w	r3, #0
    ddf4:	bl	b268 <ulist_alloc@@Base>
    ddf8:	mov	r5, r0
    ddfa:	cbz	r0, de0e <repair_qgroups@@Base+0x12f6>
    ddfc:	movs	r0, #0
    ddfe:	bl	b268 <ulist_alloc@@Base>
    de02:	str.w	r0, [r9]
    de06:	cbnz	r0, de14 <repair_qgroups@@Base+0x12fc>
    de08:	mov	r0, r5
    de0a:	bl	b27c <ulist_free@@Base>
    de0e:	mvn.w	r4, #11
    de12:	b.n	de48 <repair_qgroups@@Base+0x1330>
    de14:	add.w	sl, sp, #16
    de18:	movs	r6, #0
    de1a:	str	r6, [sp, #16]
    de1c:	str	r6, [sp, #8]
    de1e:	mov	r2, fp
    de20:	ldr.w	r3, [r9]
    de24:	mov	r1, r8
    de26:	mov	r0, r7
    de28:	strd	r5, r3, [sp]
    de2c:	mov	r3, r4
    de2e:	bl	d1c6 <repair_qgroups@@Base+0x6ae>
    de32:	subs	r4, r0, #0
    de34:	bge.n	de5c <repair_qgroups@@Base+0x1344>
    de36:	adds	r3, r4, #2
    de38:	beq.n	de5c <repair_qgroups@@Base+0x1344>
    de3a:	mov	r0, r5
    de3c:	bl	b27c <ulist_free@@Base>
    de40:	ldr.w	r0, [r9]
    de44:	bl	b27c <ulist_free@@Base>
    de48:	ldr	r2, [pc, #56]	; (de84 <repair_qgroups@@Base+0x136c>)
    de4a:	ldr	r3, [pc, #52]	; (de80 <repair_qgroups@@Base+0x1368>)
    de4c:	add	r2, pc
    de4e:	ldr	r3, [r2, r3]
    de50:	ldr	r2, [r3, #0]
    de52:	ldr	r3, [sp, #20]
    de54:	eors	r2, r3
    de56:	beq.n	de72 <repair_qgroups@@Base+0x135a>
    de58:	blx	8510 <__stack_chk_fail@plt>
    de5c:	mov	r1, sl
    de5e:	mov	r0, r5
    de60:	bl	b468 <ulist_next@@Base>
    de64:	mov	r4, r0
    de66:	cbz	r0, de6e <repair_qgroups@@Base+0x1356>
    de68:	ldrd	fp, r4, [r0]
    de6c:	b.n	de1c <repair_qgroups@@Base+0x1304>
    de6e:	mov	r0, r5
    de70:	b.n	de44 <repair_qgroups@@Base+0x132c>
    de72:	mov	r0, r4
    de74:	add	sp, #28
    de76:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    de7a:	nop
    de7c:	ldrsh	r6, [r4, r6]
    de7e:	movs	r5, r0
    de80:	lsls	r0, r4, #8
    de82:	movs	r0, r0
    de84:	ldrsh	r0, [r7, r4]
    de86:	movs	r5, r0

0000de88 <btrfs_find_all_roots@@Base>:
    de88:	push	{r4}
    de8a:	ldr	r4, [sp, #12]
    de8c:	str	r4, [sp, #4]
    de8e:	ldr.w	r4, [sp], #4
    de92:	b.n	ddd0 <repair_qgroups@@Base+0x12b8>

0000de94 <inode_item_info@@Base>:
    de94:	ldr.w	ip, [pc, #68]	; dedc <inode_item_info@@Base+0x48>
    de98:	push	{r4, lr}
    de9a:	add	ip, pc
    de9c:	ldr	r4, [pc, #64]	; (dee0 <inode_item_info@@Base+0x4c>)
    de9e:	sub	sp, #40	; 0x28
    dea0:	ldr.w	r4, [ip, r4]
    dea4:	ldr	r4, [r4, #0]
    dea6:	str	r4, [sp, #36]	; 0x24
    dea8:	mov.w	r4, #0
    deac:	strd	r2, r3, [sp]
    deb0:	add	r4, sp, #16
    deb2:	mov	r2, r0
    deb4:	mov	r3, r1
    deb6:	str	r4, [sp, #12]
    deb8:	ldrd	r0, r1, [sp, #48]	; 0x30
    debc:	movs	r4, #1
    debe:	str	r4, [sp, #8]
    dec0:	bl	1ae64 <btrfs_find_item@@Base>
    dec4:	ldr	r2, [pc, #28]	; (dee4 <inode_item_info@@Base+0x50>)
    dec6:	ldr	r3, [pc, #24]	; (dee0 <inode_item_info@@Base+0x4c>)
    dec8:	add	r2, pc
    deca:	ldr	r3, [r2, r3]
    decc:	ldr	r2, [r3, #0]
    dece:	ldr	r3, [sp, #36]	; 0x24
    ded0:	eors	r2, r3
    ded2:	beq.n	ded8 <inode_item_info@@Base+0x44>
    ded4:	blx	8510 <__stack_chk_fail@plt>
    ded8:	add	sp, #40	; 0x28
    deda:	pop	{r4, pc}
    dedc:	ldrsh	r2, [r5, r3]
    dede:	movs	r5, r0
    dee0:	lsls	r0, r4, #8
    dee2:	movs	r0, r0
    dee4:	ldrsh	r4, [r7, r2]
    dee6:	movs	r5, r0

0000dee8 <btrfs_find_one_extref@@Base>:
    dee8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    deec:	mov	r6, r2
    deee:	ldr	r2, [pc, #204]	; (dfbc <btrfs_find_one_extref@@Base+0xd4>)
    def0:	mov	r7, r3
    def2:	ldr	r3, [pc, #204]	; (dfc0 <btrfs_find_one_extref@@Base+0xd8>)
    def4:	sub	sp, #60	; 0x3c
    def6:	add	r2, pc
    def8:	mov.w	sl, #0
    defc:	ldrd	r4, r9, [sp, #104]	; 0x68
    df00:	mov	r1, r0
    df02:	ldr	r3, [r2, r3]
    df04:	mov	r8, r0
    df06:	mov	r0, sl
    df08:	add	r2, sp, #12
    df0a:	ldr	r3, [r3, #0]
    df0c:	str	r3, [sp, #52]	; 0x34
    df0e:	mov.w	r3, #0
    df12:	movs	r3, #13
    df14:	strb.w	r3, [sp, #20]
    df18:	ldr	r3, [sp, #96]	; 0x60
    df1a:	strd	sl, sl, [sp]
    df1e:	ldr	r5, [sp, #112]	; 0x70
    df20:	str.w	r3, [sp, #21]
    df24:	ldr	r3, [sp, #100]	; 0x64
    df26:	strd	r6, r7, [sp, #12]
    df2a:	str.w	r3, [sp, #25]
    df2e:	mov	r3, r4
    df30:	bl	19930 <btrfs_search_slot@@Base>
    df34:	cmp	r0, #0
    df36:	blt.n	df5e <btrfs_find_one_extref@@Base+0x76>
    df38:	ldr.w	fp, [r4]
    df3c:	ldr	r2, [r4, #32]
    df3e:	ldr.w	r3, [fp, #192]	; 0xc0
    df42:	cmp	r3, r2
    df44:	bhi.n	df72 <btrfs_find_one_extref@@Base+0x8a>
    df46:	strb.w	sl, [r4, #65]	; 0x41
    df4a:	mov	r1, r4
    df4c:	ldr.w	r0, [r8, #464]	; 0x1d0
    df50:	bl	1ad64 <btrfs_next_sibling_tree_block@@Base>
    df54:	cmp	r0, #0
    df56:	beq.n	df38 <btrfs_find_one_extref@@Base+0x50>
    df58:	ble.n	df5e <btrfs_find_one_extref@@Base+0x76>
    df5a:	mvn.w	r0, #1
    df5e:	ldr	r2, [pc, #100]	; (dfc4 <btrfs_find_one_extref@@Base+0xdc>)
    df60:	ldr	r3, [pc, #92]	; (dfc0 <btrfs_find_one_extref@@Base+0xd8>)
    df62:	add	r2, pc
    df64:	ldr	r3, [r2, r3]
    df66:	ldr	r2, [r3, #0]
    df68:	ldr	r3, [sp, #52]	; 0x34
    df6a:	eors	r2, r3
    df6c:	beq.n	dfb6 <btrfs_find_one_extref@@Base+0xce>
    df6e:	blx	8510 <__stack_chk_fail@plt>
    df72:	add	r1, sp, #32
    df74:	mov	r0, fp
    df76:	bl	ce38 <repair_qgroups@@Base+0x320>
    df7a:	ldrd	r2, r3, [sp, #32]
    df7e:	cmp	r7, r3
    df80:	it	eq
    df82:	cmpeq	r6, r2
    df84:	bne.n	df5a <btrfs_find_one_extref@@Base+0x72>
    df86:	ldrb.w	r3, [sp, #40]	; 0x28
    df8a:	cmp	r3, #13
    df8c:	bne.n	df5a <btrfs_find_one_extref@@Base+0x72>
    df8e:	ldr	r3, [r4, #32]
    df90:	movs	r0, #25
    df92:	mla	r3, r0, r3, fp
    df96:	ldr.w	r3, [r3, #214]	; 0xd6
    df9a:	adds	r3, #101	; 0x65
    df9c:	str.w	r3, [r9]
    dfa0:	cbz	r5, dfb2 <btrfs_find_one_extref@@Base+0xca>
    dfa2:	ldr.w	r2, [sp, #41]	; 0x29
    dfa6:	movs	r0, #0
    dfa8:	ldr.w	r3, [sp, #45]	; 0x2d
    dfac:	strd	r2, r3, [r5]
    dfb0:	b.n	df5e <btrfs_find_one_extref@@Base+0x76>
    dfb2:	mov	r0, r5
    dfb4:	b.n	df5e <btrfs_find_one_extref@@Base+0x76>
    dfb6:	add	sp, #60	; 0x3c
    dfb8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dfbc:	ldrsh	r6, [r1, r2]
    dfbe:	movs	r5, r0
    dfc0:	lsls	r0, r4, #8
    dfc2:	movs	r0, r0
    dfc4:	ldrsh	r2, [r4, r0]
    dfc6:	movs	r5, r0

0000dfc8 <btrfs_ref_to_path@@Base>:
    dfc8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dfcc:	mov	r7, r0
    dfce:	ldr	r0, [pc, #304]	; (e100 <btrfs_ref_to_path@@Base+0x138>)
    dfd0:	sub	sp, #68	; 0x44
    dfd2:	mov	r5, r1
    dfd4:	ldr	r1, [pc, #300]	; (e104 <btrfs_ref_to_path@@Base+0x13c>)
    dfd6:	add	r0, pc
    dfd8:	mov	ip, r2
    dfda:	mov	r2, r3
    dfdc:	ldrd	r6, r3, [sp, #120]	; 0x78
    dfe0:	ldr	r1, [r0, r1]
    dfe2:	adds.w	r9, r3, #4294967295	; 0xffffffff
    dfe6:	ldr.w	r8, [sp, #104]	; 0x68
    dfea:	ldr	r1, [r1, #0]
    dfec:	str	r1, [sp, #60]	; 0x3c
    dfee:	mov.w	r1, #0
    dff2:	mov	r0, r3
    dff4:	mov.w	r1, #0
    dff8:	adc.w	sl, r1, #4294967295	; 0xffffffff
    dffc:	orrs	r1, r0
    dffe:	mov	r4, r8
    e000:	ittt	ne
    e002:	addne	r3, r3, r6
    e004:	movne	r1, #0
    e006:	strbne.w	r1, [r3, #-1]
    e00a:	add	r3, sp, #40	; 0x28
    e00c:	str	r3, [sp, #36]	; 0x24
    e00e:	subs.w	r0, r9, ip
    e012:	sbc.w	r1, sl, #0
    e016:	cmp	r0, #0
    e018:	sbcs.w	r3, r1, #0
    e01c:	strd	r0, r1, [sp, #16]
    e020:	blt.n	e02e <btrfs_ref_to_path@@Base+0x66>
    e022:	ldr	r1, [sp, #16]
    e024:	mov	r3, ip
    e026:	mov	r0, r4
    e028:	adds	r1, r6, r1
    e02a:	bl	16a0e <read_extent_buffer@@Base>
    e02e:	cmp	r4, r8
    e030:	beq.n	e038 <btrfs_ref_to_path@@Base+0x70>
    e032:	mov	r0, r4
    e034:	bl	16314 <free_extent_buffer@@Base>
    e038:	ldr	r3, [sp, #36]	; 0x24
    e03a:	movs	r4, #0
    e03c:	mov	r1, r5
    e03e:	mov	r0, r7
    e040:	str	r3, [sp, #12]
    e042:	movs	r3, #12
    e044:	str	r3, [sp, #8]
    e046:	movs	r3, #0
    e048:	strd	r3, r4, [sp]
    e04c:	ldrd	r2, r3, [sp, #112]	; 0x70
    e050:	bl	1ae64 <btrfs_find_item@@Base>
    e054:	subs	r4, r0, #0
    e056:	bgt.n	e0ce <btrfs_ref_to_path@@Base+0x106>
    e058:	bne.n	e0d2 <btrfs_ref_to_path@@Base+0x10a>
    e05a:	ldr.w	r3, [sp, #49]	; 0x31
    e05e:	str	r3, [sp, #24]
    e060:	ldr.w	r3, [sp, #53]	; 0x35
    e064:	str	r3, [sp, #28]
    e066:	ldrd	r0, r1, [sp, #24]
    e06a:	ldrd	r2, r3, [sp, #112]	; 0x70
    e06e:	cmp	r3, r1
    e070:	it	eq
    e072:	cmpeq	r2, r0
    e074:	beq.n	e0d2 <btrfs_ref_to_path@@Base+0x10a>
    e076:	ldr	r4, [r5, #0]
    e078:	mov	r0, r5
    e07a:	ldr.w	fp, [r5, #32]
    e07e:	cmp	r8, r4
    e080:	ittt	ne
    e082:	ldrne	r3, [r4, #80]	; 0x50
    e084:	addne	r3, #1
    e086:	strne	r3, [r4, #80]	; 0x50
    e088:	bl	1754c <btrfs_release_path@@Base>
    e08c:	add.w	r1, r4, #96	; 0x60
    e090:	movs	r3, #25
    e092:	mla	fp, r3, fp, r1
    e096:	ldr.w	r2, [fp, #118]	; 0x76
    e09a:	add.w	r3, r2, #101	; 0x65
    e09e:	adds	r2, #111	; 0x6f
    e0a0:	add	r1, r3
    e0a2:	ldr	r3, [sp, #16]
    e0a4:	adds.w	r9, r3, #4294967295	; 0xffffffff
    e0a8:	ldr	r3, [sp, #20]
    e0aa:	ldrh.w	ip, [r1, #8]
    e0ae:	adc.w	sl, r3, #4294967295	; 0xffffffff
    e0b2:	cmp.w	r9, #0
    e0b6:	sbcs.w	r3, sl, #0
    e0ba:	blt.n	e0c4 <btrfs_ref_to_path@@Base+0xfc>
    e0bc:	add.w	r3, r6, r9
    e0c0:	movs	r1, #47	; 0x2f
    e0c2:	strb	r1, [r3, #0]
    e0c4:	ldrd	r0, r1, [sp, #24]
    e0c8:	strd	r0, r1, [sp, #112]	; 0x70
    e0cc:	b.n	e00e <btrfs_ref_to_path@@Base+0x46>
    e0ce:	mvn.w	r4, #1
    e0d2:	mov	r0, r5
    e0d4:	bl	1754c <btrfs_release_path@@Base>
    e0d8:	cbz	r4, e0f0 <btrfs_ref_to_path@@Base+0x128>
    e0da:	mov	r0, r4
    e0dc:	ldr	r2, [pc, #40]	; (e108 <btrfs_ref_to_path@@Base+0x140>)
    e0de:	ldr	r3, [pc, #36]	; (e104 <btrfs_ref_to_path@@Base+0x13c>)
    e0e0:	add	r2, pc
    e0e2:	ldr	r3, [r2, r3]
    e0e4:	ldr	r2, [r3, #0]
    e0e6:	ldr	r3, [sp, #60]	; 0x3c
    e0e8:	eors	r2, r3
    e0ea:	beq.n	e0f8 <btrfs_ref_to_path@@Base+0x130>
    e0ec:	blx	8510 <__stack_chk_fail@plt>
    e0f0:	ldr	r3, [sp, #16]
    e0f2:	add	r3, r6
    e0f4:	mov	r0, r3
    e0f6:	b.n	e0dc <btrfs_ref_to_path@@Base+0x114>
    e0f8:	add	sp, #68	; 0x44
    e0fa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e0fe:	nop
    e100:	ldrb	r6, [r5, r6]
    e102:	movs	r5, r0
    e104:	lsls	r0, r4, #8
    e106:	movs	r0, r0
    e108:	ldrb	r4, [r4, r2]
    e10a:	movs	r5, r0
    e10c:	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
    e110:	sub	sp, #24
    e112:	mov	r9, r1
    e114:	mov	r8, r0
    e116:	ldr	r4, [sp, #52]	; 0x34
    e118:	ldr	r1, [r4, #8]
    e11a:	ldr	r6, [r1, #8]
    e11c:	add.w	r5, r1, r6, lsl #2
    e120:	ldr	r1, [r1, #0]
    e122:	adds	r5, #20
    e124:	strd	r8, r9, [sp, #8]
    e128:	cmp	r1, #4
    e12a:	it	cc
    e12c:	movcc	r1, #4
    e12e:	subs	r1, #4
    e130:	strd	r5, r1, [sp, #16]
    e134:	ldr	r1, [sp, #48]	; 0x30
    e136:	str	r1, [sp, #0]
    e138:	ldrd	r1, r0, [r4]
    e13c:	bl	dfc8 <btrfs_ref_to_path@@Base>
    e140:	cmn.w	r0, #4096	; 0x1000
    e144:	bhi.n	e16a <btrfs_ref_to_path@@Base+0x1a2>
    e146:	cmp	r5, r0
    e148:	ldr	r2, [r4, #8]
    e14a:	bcs.n	e170 <btrfs_ref_to_path@@Base+0x1a8>
    e14c:	adds	r6, #2
    e14e:	movs	r3, #0
    e150:	add.w	r1, r2, r6, lsl #3
    e154:	str.w	r0, [r2, r6, lsl #3]
    e158:	subs	r0, r0, r5
    e15a:	str	r3, [r1, #4]
    e15c:	ldr	r1, [r4, #8]
    e15e:	ldr	r2, [r1, #8]
    e160:	adds	r2, #1
    e162:	str	r2, [r1, #8]
    e164:	ldr	r2, [r4, #8]
    e166:	str	r0, [r2, #0]
    e168:	mov	r0, r3
    e16a:	add	sp, #24
    e16c:	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    e170:	ldr	r3, [r2, #12]
    e172:	subs	r0, r5, r0
    e174:	adds	r3, #1
    e176:	str	r3, [r2, #12]
    e178:	ldr	r3, [r4, #8]
    e17a:	ldr	r5, [r3, #4]
    e17c:	add	r0, r5
    e17e:	str	r0, [r3, #4]
    e180:	ldr	r3, [r4, #8]
    e182:	movs	r0, #0
    e184:	str	r0, [r3, #0]
    e186:	b.n	e16a <btrfs_ref_to_path@@Base+0x1a2>

0000e188 <extent_from_logical@@Base>:
    e188:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    e18c:	mov	r8, r2
    e18e:	ldr	r2, [pc, #380]	; (e30c <extent_from_logical@@Base+0x184>)
    e190:	mov	r9, r3
    e192:	ldr	r3, [pc, #380]	; (e310 <extent_from_logical@@Base+0x188>)
    e194:	sub	sp, #40	; 0x28
    e196:	add	r2, pc
    e198:	mov	r7, r0
    e19a:	ldrd	r5, r6, [sp, #72]	; 0x48
    e19e:	ldr	r3, [r2, r3]
    e1a0:	ldr.w	sl, [sp, #80]	; 0x50
    e1a4:	ldr	r3, [r3, #0]
    e1a6:	str	r3, [sp, #36]	; 0x24
    e1a8:	mov.w	r3, #0
    e1ac:	ldr.w	r3, [r0, #308]	; 0x134
    e1b0:	movs	r0, #0
    e1b2:	ldr.w	r1, [r3, #188]	; 0xbc
    e1b6:	mov	r3, r0
    e1b8:	strd	r0, r0, [sp]
    e1bc:	and.w	r2, r1, #256	; 0x100
    e1c0:	ldr	r1, [r7, #24]
    e1c2:	orrs	r3, r2
    e1c4:	mov.w	r2, #4294967295	; 0xffffffff
    e1c8:	strb.w	r2, [sp, #25]
    e1cc:	ite	ne
    e1ce:	movne	r3, #169	; 0xa9
    e1d0:	moveq	r3, #168	; 0xa8
    e1d2:	strb.w	r2, [sp, #26]
    e1d6:	strb.w	r3, [sp, #24]
    e1da:	mov	r3, r5
    e1dc:	strb.w	r2, [sp, #27]
    e1e0:	strb.w	r2, [sp, #28]
    e1e4:	strb.w	r2, [sp, #29]
    e1e8:	strb.w	r2, [sp, #30]
    e1ec:	strb.w	r2, [sp, #31]
    e1f0:	strb.w	r2, [sp, #32]
    e1f4:	add	r2, sp, #16
    e1f6:	strd	r8, r9, [sp, #16]
    e1fa:	bl	19930 <btrfs_search_slot@@Base>
    e1fe:	subs	r4, r0, #0
    e200:	blt.n	e218 <extent_from_logical@@Base+0x90>
    e202:	ldr	r0, [r7, #24]
    e204:	movs	r2, #0
    e206:	movs	r3, #0
    e208:	mov	r1, r5
    e20a:	bl	1b08c <btrfs_previous_extent_item@@Base>
    e20e:	subs	r4, r0, #0
    e210:	beq.n	e22c <extent_from_logical@@Base+0xa4>
    e212:	ble.n	e218 <extent_from_logical@@Base+0x90>
    e214:	mvn.w	r4, #1
    e218:	ldr	r2, [pc, #248]	; (e314 <extent_from_logical@@Base+0x18c>)
    e21a:	ldr	r3, [pc, #244]	; (e310 <extent_from_logical@@Base+0x188>)
    e21c:	add	r2, pc
    e21e:	ldr	r3, [r2, r3]
    e220:	ldr	r2, [r3, #0]
    e222:	ldr	r3, [sp, #36]	; 0x24
    e224:	eors	r2, r3
    e226:	beq.n	e304 <extent_from_logical@@Base+0x17c>
    e228:	blx	8510 <__stack_chk_fail@plt>
    e22c:	ldr	r2, [r5, #32]
    e22e:	mov	r1, r6
    e230:	ldr	r0, [r5, #0]
    e232:	bl	ce38 <repair_qgroups@@Base+0x320>
    e236:	ldrb	r3, [r6, #8]
    e238:	cmp	r3, #169	; 0xa9
    e23a:	bne.n	e2ba <extent_from_logical@@Base+0x132>
    e23c:	ldr.w	r1, [r7, #384]	; 0x180
    e240:	movs	r0, #0
    e242:	ldr	r3, [r6, #4]
    e244:	ldr	r2, [r6, #0]
    e246:	cmp	r9, r3
    e248:	it	eq
    e24a:	cmpeq	r8, r2
    e24c:	bcc.n	e214 <extent_from_logical@@Base+0x8c>
    e24e:	adds	r1, r2, r1
    e250:	str	r1, [sp, #8]
    e252:	adcs	r3, r0
    e254:	str	r3, [sp, #12]
    e256:	ldrd	r2, r3, [sp, #8]
    e25a:	cmp	r9, r3
    e25c:	it	eq
    e25e:	cmpeq	r8, r2
    e260:	bcs.n	e214 <extent_from_logical@@Base+0x8c>
    e262:	ldr	r6, [r5, #0]
    e264:	movs	r2, #25
    e266:	ldr	r3, [r5, #32]
    e268:	adds	r6, #96	; 0x60
    e26a:	ldr	r1, [pc, #172]	; (e318 <extent_from_logical@@Base+0x190>)
    e26c:	ldr	r0, [pc, #172]	; (e31c <extent_from_logical@@Base+0x194>)
    e26e:	mla	r3, r2, r3, r6
    e272:	add	r1, pc
    e274:	adds	r1, #148	; 0x94
    e276:	add	r0, pc
    e278:	movw	r2, #1178	; 0x49a
    e27c:	str	r1, [sp, #8]
    e27e:	add.w	r5, r3, #101	; 0x65
    e282:	ldr.w	r3, [r3, #122]	; 0x7a
    e286:	cmp	r3, #23
    e288:	ite	hi
    e28a:	movhi	r3, #0
    e28c:	movls	r3, #1
    e28e:	bl	d0a4 <repair_qgroups@@Base+0x58c>
    e292:	ldr.w	r3, [r5, #17]
    e296:	ldr	r1, [sp, #8]
    e298:	add	r6, r3
    e29a:	ldr.w	r5, [r6, #117]	; 0x75
    e29e:	cmp.w	sl, #0
    e2a2:	beq.n	e2f0 <extent_from_logical@@Base+0x168>
    e2a4:	and.w	r2, r5, #2
    e2a8:	movs	r0, #0
    e2aa:	mov	r3, r0
    e2ac:	orrs	r3, r2
    e2ae:	beq.n	e2cc <extent_from_logical@@Base+0x144>
    e2b0:	movs	r2, #2
    e2b2:	movs	r3, #0
    e2b4:	strd	r2, r3, [sl]
    e2b8:	b.n	e218 <extent_from_logical@@Base+0x90>
    e2ba:	cmp	r3, #168	; 0xa8
    e2bc:	iteet	ne
    e2be:	movne	r1, #0
    e2c0:	ldreq.w	r1, [r6, #9]
    e2c4:	ldreq.w	r0, [r6, #13]
    e2c8:	movne	r0, r1
    e2ca:	b.n	e242 <extent_from_logical@@Base+0xba>
    e2cc:	and.w	r2, r5, #1
    e2d0:	mov	r3, r0
    e2d2:	orrs	r3, r2
    e2d4:	beq.n	e2da <extent_from_logical@@Base+0x152>
    e2d6:	movs	r2, #1
    e2d8:	b.n	e2b2 <extent_from_logical@@Base+0x12a>
    e2da:	ldr	r0, [pc, #68]	; (e320 <extent_from_logical@@Base+0x198>)
    e2dc:	mov	r2, r1
    e2de:	ldr	r1, [pc, #68]	; (e324 <extent_from_logical@@Base+0x19c>)
    e2e0:	movs	r3, #1
    e2e2:	add	r0, pc
    e2e4:	str	r3, [sp, #0]
    e2e6:	add	r1, pc
    e2e8:	movw	r3, #1194	; 0x4aa
    e2ec:	bl	d00a <repair_qgroups@@Base+0x4f2>
    e2f0:	ldr	r0, [pc, #52]	; (e328 <extent_from_logical@@Base+0x1a0>)
    e2f2:	movs	r3, #1
    e2f4:	movw	r2, #1197	; 0x4ad
    e2f8:	mvn.w	r4, #4
    e2fc:	add	r0, pc
    e2fe:	bl	d0c4 <repair_qgroups@@Base+0x5ac>
    e302:	b.n	e218 <extent_from_logical@@Base+0x90>
    e304:	mov	r0, r4
    e306:	add	sp, #40	; 0x28
    e308:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    e30c:	ldrh	r6, [r5, r7]
    e30e:	movs	r5, r0
    e310:	lsls	r0, r4, #8
    e312:	movs	r0, r0
    e314:	ldrh	r0, [r5, r5]
    e316:	movs	r5, r0
    e318:	cbnz	r7, e31c <extent_from_logical@@Base+0x194>
    e31a:	movs	r2, r0
    e31c:			; <UNDEFINED> instruction: 0xb7d6
    e31e:	movs	r2, r0
    e320:			; <UNDEFINED> instruction: 0xebef0002
    e324:			; <UNDEFINED> instruction: 0xb753
    e326:	movs	r2, r0
    e328:	rsbs	r0, r5, r2

0000e32c <tree_backref_for_extent@@Base>:
    e32c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e330:	mov	r5, r3
    e332:	ldr	r3, [r0, #0]
    e334:	sub	sp, #20
    e336:	mov	r4, r0
    e338:	adds	r3, #1
    e33a:	strd	r1, r2, [sp, #8]
    e33e:	beq.n	e398 <tree_backref_for_extent@@Base+0x6c>
    e340:	ldr.w	sl, [pc, #228]	; e428 <tree_backref_for_extent@@Base+0xfc>
    e344:	ldr.w	fp, [pc, #228]	; e42c <tree_backref_for_extent@@Base+0x100>
    e348:	add	sl, pc
    e34a:	add.w	sl, sl, #168	; 0xa8
    e34e:	add	fp, pc
    e350:	ldr	r3, [sp, #8]
    e352:	add.w	r6, r3, #96	; 0x60
    e356:	ldr	r3, [r4, #0]
    e358:	cbz	r3, e3a0 <tree_backref_for_extent@@Base+0x74>
    e35a:	ldr	r3, [sp, #56]	; 0x38
    e35c:	add.w	r9, r5, r3
    e360:	ldr	r3, [r4, #0]
    e362:	add.w	r8, r6, r3
    e366:	ldrb	r7, [r6, r3]
    e368:	cmp	r7, #176	; 0xb0
    e36a:	bne.n	e3e8 <tree_backref_for_extent@@Base+0xbc>
    e36c:	movs	r2, #9
    e36e:	add	r3, r2
    e370:	str	r3, [r4, #0]
    e372:	cmp	r9, r3
    e374:	bcs.n	e38a <tree_backref_for_extent@@Base+0x5e>
    e376:	ldr	r1, [pc, #184]	; (e430 <tree_backref_for_extent@@Base+0x104>)
    e378:	movs	r3, #1
    e37a:	ldr	r0, [pc, #184]	; (e434 <tree_backref_for_extent@@Base+0x108>)
    e37c:	movw	r2, #1247	; 0x4df
    e380:	add	r1, pc
    e382:	adds	r1, #168	; 0xa8
    e384:	add	r0, pc
    e386:	bl	d0c4 <repair_qgroups@@Base+0x5ac>
    e38a:	cmp	r7, #176	; 0xb0
    e38c:	ldr	r3, [r4, #0]
    e38e:	beq.n	e400 <tree_backref_for_extent@@Base+0xd4>
    e390:	cmp	r7, #182	; 0xb6
    e392:	beq.n	e400 <tree_backref_for_extent@@Base+0xd4>
    e394:	cmp	r9, r3
    e396:	bne.n	e350 <tree_backref_for_extent@@Base+0x24>
    e398:	movs	r0, #1
    e39a:	add	sp, #20
    e39c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e3a0:	adds	r2, r6, r5
    e3a2:	ldr	r2, [r2, #16]
    e3a4:	and.w	r2, r2, #2
    e3a8:	strd	r2, r3, [sp]
    e3ac:	ldrd	r2, r3, [sp]
    e3b0:	orrs	r3, r2
    e3b2:	beq.n	e3bc <tree_backref_for_extent@@Base+0x90>
    e3b4:	ldr	r3, [sp, #12]
    e3b6:	ldrb	r3, [r3, #8]
    e3b8:	cmp	r3, #169	; 0xa9
    e3ba:	bne.n	e3d0 <tree_backref_for_extent@@Base+0xa4>
    e3bc:	add.w	r3, r5, #24
    e3c0:	ldr	r2, [sp, #56]	; 0x38
    e3c2:	str	r3, [r4, #0]
    e3c4:	adds	r2, r5, r2
    e3c6:	cmp	r3, r2
    e3c8:	bcc.n	e35a <tree_backref_for_extent@@Base+0x2e>
    e3ca:	mvn.w	r0, #1
    e3ce:	b.n	e39a <tree_backref_for_extent@@Base+0x6e>
    e3d0:	cmp	r3, #168	; 0xa8
    e3d2:	beq.n	e3e2 <tree_backref_for_extent@@Base+0xb6>
    e3d4:	movs	r3, #1
    e3d6:	movw	r2, #1229	; 0x4cd
    e3da:	mov	r1, sl
    e3dc:	mov	r0, fp
    e3de:	bl	d0c4 <repair_qgroups@@Base+0x5ac>
    e3e2:	add.w	r3, r5, #42	; 0x2a
    e3e6:	b.n	e3c0 <tree_backref_for_extent@@Base+0x94>
    e3e8:	cmp	r7, #182	; 0xb6
    e3ea:	beq.n	e36c <tree_backref_for_extent@@Base+0x40>
    e3ec:	cmp	r7, #184	; 0xb8
    e3ee:	beq.n	e3f8 <tree_backref_for_extent@@Base+0xcc>
    e3f0:	cmp	r7, #178	; 0xb2
    e3f2:	beq.n	e3fc <tree_backref_for_extent@@Base+0xd0>
    e3f4:	bl	d040 <repair_qgroups@@Base+0x528>
    e3f8:	movs	r2, #13
    e3fa:	b.n	e36e <tree_backref_for_extent@@Base+0x42>
    e3fc:	movs	r2, #29
    e3fe:	b.n	e36e <tree_backref_for_extent@@Base+0x42>
    e400:	ldr.w	r1, [r8, #1]!
    e404:	add	r5, r6
    e406:	ldr	r0, [sp, #60]	; 0x3c
    e408:	cmp	r9, r3
    e40a:	ldr.w	r2, [r8, #4]
    e40e:	str	r1, [r0, #0]
    e410:	str	r2, [r0, #4]
    e412:	ldr	r2, [sp, #64]	; 0x40
    e414:	ldrb.w	r1, [r5, #41]	; 0x29
    e418:	strb	r1, [r2, #0]
    e41a:	bne.n	e422 <tree_backref_for_extent@@Base+0xf6>
    e41c:	mov.w	r3, #4294967295	; 0xffffffff
    e420:	str	r3, [r4, #0]
    e422:	movs	r0, #0
    e424:	b.n	e39a <tree_backref_for_extent@@Base+0x6e>
    e426:	nop
    e428:			; <UNDEFINED> instruction: 0xb831
    e42a:	movs	r2, r0
    e42c:			; <UNDEFINED> instruction: 0xb7fd
    e42e:	movs	r2, r0
    e430:			; <UNDEFINED> instruction: 0xb7f9
    e432:	movs	r2, r0
    e434:			; <UNDEFINED> instruction: 0xb7ea
    e436:	movs	r2, r0

0000e438 <iterate_extent_inodes@@Base>:
    e438:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e43c:	movs	r5, #0
    e43e:	vpush	{d8}
    e442:	vmov	s16, r0
    e446:	mov	r0, r5
    e448:	sub	sp, #60	; 0x3c
    e44a:	str	r3, [sp, #16]
    e44c:	ldr	r3, [sp, #116]	; 0x74
    e44e:	str	r2, [sp, #36]	; 0x24
    e450:	ldr	r2, [pc, #240]	; (e544 <iterate_extent_inodes@@Base+0x10c>)
    e452:	str	r3, [sp, #28]
    e454:	ldr	r3, [sp, #120]	; 0x78
    e456:	add	r2, pc
    e458:	str	r3, [sp, #32]
    e45a:	ldr	r3, [pc, #236]	; (e548 <iterate_extent_inodes@@Base+0x110>)
    e45c:	ldr	r3, [r2, r3]
    e45e:	ldr	r3, [r3, #0]
    e460:	str	r3, [sp, #52]	; 0x34
    e462:	mov.w	r3, #0
    e466:	str	r5, [sp, #40]	; 0x28
    e468:	bl	b268 <ulist_alloc@@Base>
    e46c:	mov	r4, r0
    e46e:	cmp	r0, #0
    e470:	beq.n	e532 <iterate_extent_inodes@@Base+0xfa>
    e472:	add	r3, sp, #104	; 0x68
    e474:	str	r0, [sp, #0]
    e476:	strd	r5, r3, [sp, #4]
    e47a:	mov	r0, r5
    e47c:	vmov	r1, s16
    e480:	ldr	r2, [sp, #36]	; 0x24
    e482:	ldr	r3, [sp, #16]
    e484:	bl	d1c6 <repair_qgroups@@Base+0x6ae>
    e488:	subs.w	r9, r0, #0
    e48c:	bge.n	e4ae <iterate_extent_inodes@@Base+0x76>
    e48e:	cmn.w	r9, #2
    e492:	beq.n	e4ae <iterate_extent_inodes@@Base+0x76>
    e494:	mov	r0, r4
    e496:	bl	cdcc <repair_qgroups@@Base+0x2b4>
    e49a:	ldr	r2, [pc, #176]	; (e54c <iterate_extent_inodes@@Base+0x114>)
    e49c:	ldr	r3, [pc, #168]	; (e548 <iterate_extent_inodes@@Base+0x110>)
    e49e:	add	r2, pc
    e4a0:	ldr	r3, [r2, r3]
    e4a2:	ldr	r2, [r3, #0]
    e4a4:	ldr	r3, [sp, #52]	; 0x34
    e4a6:	eors	r2, r3
    e4a8:	beq.n	e538 <iterate_extent_inodes@@Base+0x100>
    e4aa:	blx	8510 <__stack_chk_fail@plt>
    e4ae:	add.w	r8, sp, #44	; 0x2c
    e4b2:	add.w	sl, sp, #40	; 0x28
    e4b6:	movs	r3, #0
    e4b8:	str	r3, [sp, #44]	; 0x2c
    e4ba:	mov	r1, r8
    e4bc:	mov	r0, r4
    e4be:	bl	b468 <ulist_next@@Base>
    e4c2:	mov	r5, r0
    e4c4:	cbnz	r0, e4ca <iterate_extent_inodes@@Base+0x92>
    e4c6:	mov	r9, r0
    e4c8:	b.n	e494 <iterate_extent_inodes@@Base+0x5c>
    e4ca:	str.w	sl, [sp]
    e4ce:	movs	r0, #0
    e4d0:	vmov	r1, s16
    e4d4:	ldrd	r2, r3, [r5]
    e4d8:	bl	ddd0 <repair_qgroups@@Base+0x12b8>
    e4dc:	cbnz	r0, e52e <iterate_extent_inodes@@Base+0xf6>
    e4de:	add.w	fp, sp, #48	; 0x30
    e4e2:	str	r0, [sp, #48]	; 0x30
    e4e4:	ldr	r0, [sp, #40]	; 0x28
    e4e6:	mov	r1, fp
    e4e8:	bl	b468 <ulist_next@@Base>
    e4ec:	cbnz	r0, e4fe <iterate_extent_inodes@@Base+0xc6>
    e4ee:	mov	r9, r0
    e4f0:	ldr	r0, [sp, #40]	; 0x28
    e4f2:	bl	b27c <ulist_free@@Base>
    e4f6:	cmp.w	r9, #0
    e4fa:	beq.n	e4ba <iterate_extent_inodes@@Base+0x82>
    e4fc:	b.n	e494 <iterate_extent_inodes@@Base+0x5c>
    e4fe:	ldrd	r2, r3, [r0]
    e502:	ldr	r6, [r5, #8]
    e504:	strd	r2, r3, [sp, #16]
    e508:	cmp	r6, #0
    e50a:	beq.n	e4e4 <iterate_extent_inodes@@Base+0xac>
    e50c:	ldr	r3, [sp, #32]
    e50e:	ldr	r7, [sp, #28]
    e510:	str	r3, [sp, #8]
    e512:	ldrd	r2, r3, [sp, #16]
    e516:	strd	r2, r3, [sp]
    e51a:	ldrd	r2, r3, [r6, #8]
    e51e:	ldrd	r0, r1, [r6]
    e522:	blx	r7
    e524:	mov	r9, r0
    e526:	cmp	r0, #0
    e528:	bne.n	e4f0 <iterate_extent_inodes@@Base+0xb8>
    e52a:	ldr	r6, [r6, #16]
    e52c:	b.n	e508 <iterate_extent_inodes@@Base+0xd0>
    e52e:	mov	r9, r0
    e530:	b.n	e494 <iterate_extent_inodes@@Base+0x5c>
    e532:	mvn.w	r9, #11
    e536:	b.n	e49a <iterate_extent_inodes@@Base+0x62>
    e538:	mov	r0, r9
    e53a:	add	sp, #60	; 0x3c
    e53c:	vpop	{d8}
    e540:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e544:	ldr	r6, [r5, r4]
    e546:	movs	r5, r0
    e548:	lsls	r0, r4, #8
    e54a:	movs	r0, r0
    e54c:	ldr	r6, [r4, r3]
    e54e:	movs	r5, r0

0000e550 <iterate_inodes_from_logical@@Base>:
    e550:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    e554:	mov	r7, r2
    e556:	ldr	r2, [pc, #144]	; (e5e8 <iterate_inodes_from_logical@@Base+0x98>)
    e558:	mov	r8, r3
    e55a:	ldr	r3, [pc, #144]	; (e5ec <iterate_inodes_from_logical@@Base+0x9c>)
    e55c:	sub	sp, #56	; 0x38
    e55e:	add	r2, pc
    e560:	mov	r5, r0
    e562:	mov	r6, r1
    e564:	ldrd	r9, sl, [sp, #88]	; 0x58
    e568:	ldr	r3, [r2, r3]
    e56a:	movs	r2, #0
    e56c:	ldr	r3, [r3, #0]
    e56e:	str	r3, [sp, #52]	; 0x34
    e570:	mov.w	r3, #0
    e574:	movs	r3, #0
    e576:	strd	r2, r3, [sp, #24]
    e57a:	mov	r2, r0
    e57c:	add	r3, sp, #24
    e57e:	mov	r0, r7
    e580:	str	r3, [sp, #8]
    e582:	add	r3, sp, #32
    e584:	strd	r8, r3, [sp]
    e588:	mov	r3, r1
    e58a:	bl	e188 <extent_from_logical@@Base>
    e58e:	mov	r4, r0
    e590:	mov	r0, r8
    e592:	bl	1754c <btrfs_release_path@@Base>
    e596:	cmp	r4, #0
    e598:	blt.n	e5c4 <iterate_inodes_from_logical@@Base+0x74>
    e59a:	ldr	r1, [sp, #24]
    e59c:	movs	r0, #0
    e59e:	mov	r3, r0
    e5a0:	and.w	r2, r1, #2
    e5a4:	orrs	r3, r2
    e5a6:	bne.n	e5d8 <iterate_inodes_from_logical@@Base+0x88>
    e5a8:	ldrd	r2, r3, [sp, #32]
    e5ac:	str	r0, [sp, #8]
    e5ae:	mov	r0, r7
    e5b0:	subs	r5, r5, r2
    e5b2:	strd	r9, sl, [sp, #12]
    e5b6:	sbc.w	r6, r6, r3
    e5ba:	strd	r5, r6, [sp]
    e5be:	bl	e438 <iterate_extent_inodes@@Base>
    e5c2:	mov	r4, r0
    e5c4:	ldr	r2, [pc, #40]	; (e5f0 <iterate_inodes_from_logical@@Base+0xa0>)
    e5c6:	ldr	r3, [pc, #36]	; (e5ec <iterate_inodes_from_logical@@Base+0x9c>)
    e5c8:	add	r2, pc
    e5ca:	ldr	r3, [r2, r3]
    e5cc:	ldr	r2, [r3, #0]
    e5ce:	ldr	r3, [sp, #52]	; 0x34
    e5d0:	eors	r2, r3
    e5d2:	beq.n	e5de <iterate_inodes_from_logical@@Base+0x8e>
    e5d4:	blx	8510 <__stack_chk_fail@plt>
    e5d8:	mvn.w	r4, #21
    e5dc:	b.n	e5c4 <iterate_inodes_from_logical@@Base+0x74>
    e5de:	mov	r0, r4
    e5e0:	add	sp, #56	; 0x38
    e5e2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    e5e6:	nop
    e5e8:	ldr	r6, [r4, r0]
    e5ea:	movs	r5, r0
    e5ec:	lsls	r0, r4, #8
    e5ee:	movs	r0, r0
    e5f0:	ldrsb	r4, [r7, r6]
    e5f2:	movs	r5, r0

0000e5f4 <paths_from_inode@@Base>:
    e5f4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e5f8:	mov.w	r8, #0
    e5fc:	vpush	{d8-d9}
    e600:	mov.w	r9, #0
    e604:	ldr	r3, [pc, #552]	; (e830 <paths_from_inode@@Base+0x23c>)
    e606:	vmov	s17, r0
    e60a:	sub	sp, #84	; 0x54
    e60c:	vmov	s18, r1
    e610:	str	r2, [sp, #24]
    e612:	ldr	r2, [pc, #544]	; (e834 <paths_from_inode@@Base+0x240>)
    e614:	add	r2, pc
    e616:	ldr	r3, [r2, r3]
    e618:	ldr	r3, [r3, #0]
    e61a:	str	r3, [sp, #76]	; 0x4c
    e61c:	mov.w	r3, #0
    e620:	ldr	r3, [sp, #24]
    e622:	ldr	r3, [r3, #4]
    e624:	vmov	s16, r3
    e628:	ldr	r3, [sp, #24]
    e62a:	ldr	r4, [r3, #0]
    e62c:	movs	r3, #0
    e62e:	str	r3, [sp, #28]
    e630:	add	r3, sp, #56	; 0x38
    e632:	str	r3, [sp, #40]	; 0x28
    e634:	ldr	r3, [sp, #40]	; 0x28
    e636:	mov	r1, r4
    e638:	vmov	r2, s17
    e63c:	vmov	r0, s16
    e640:	str	r3, [sp, #12]
    e642:	movs	r3, #12
    e644:	strd	r8, r9, [sp]
    e648:	str	r3, [sp, #8]
    e64a:	vmov	r3, s18
    e64e:	bl	1ae64 <btrfs_find_item@@Base>
    e652:	subs	r6, r0, #0
    e654:	blt.w	e78c <paths_from_inode@@Base+0x198>
    e658:	ldr	r3, [sp, #28]
    e65a:	beq.n	e6f8 <paths_from_inode@@Base+0x104>
    e65c:	cmp	r3, #0
    e65e:	ite	ne
    e660:	movne.w	fp, #0
    e664:	mvneq.w	fp, #1
    e668:	mov	r0, r4
    e66a:	bl	1754c <btrfs_release_path@@Base>
    e66e:	cmp.w	fp, #0
    e672:	beq.w	e796 <paths_from_inode@@Base+0x1a2>
    e676:	cmn.w	fp, #2
    e67a:	bne.n	e6e2 <paths_from_inode@@Base+0xee>
    e67c:	mov.w	r9, #0
    e680:	mov.w	r8, #0
    e684:	movs	r3, #0
    e686:	movs	r2, #0
    e688:	strd	r2, r3, [sp, #56]	; 0x38
    e68c:	add	r3, sp, #56	; 0x38
    e68e:	str	r3, [sp, #32]
    e690:	add	r3, sp, #52	; 0x34
    e692:	str	r3, [sp, #36]	; 0x24
    e694:	ldr	r3, [sp, #32]
    e696:	vmov	r0, s16
    e69a:	str	r3, [sp, #16]
    e69c:	ldr	r3, [sp, #36]	; 0x24
    e69e:	strd	r4, r3, [sp, #8]
    e6a2:	ldrd	r2, r3, [sp, #56]	; 0x38
    e6a6:	strd	r2, r3, [sp]
    e6aa:	vmov	r2, s17
    e6ae:	vmov	r3, s18
    e6b2:	bl	dee8 <btrfs_find_one_extref@@Base>
    e6b6:	subs.w	fp, r0, #0
    e6ba:	blt.n	e6cc <paths_from_inode@@Base+0xd8>
    e6bc:	beq.n	e79c <paths_from_inode@@Base+0x1a8>
    e6be:	cmp.w	r8, #0
    e6c2:	ite	ne
    e6c4:	movne.w	fp, #0
    e6c8:	mvneq.w	fp, #1
    e6cc:	mov	r0, r4
    e6ce:	bl	1754c <btrfs_release_path@@Base>
    e6d2:	cmn.w	fp, #2
    e6d6:	bne.n	e6e2 <paths_from_inode@@Base+0xee>
    e6d8:	cmp.w	r9, #0
    e6dc:	it	ne
    e6de:	movne.w	fp, #0
    e6e2:	ldr	r2, [pc, #340]	; (e838 <paths_from_inode@@Base+0x244>)
    e6e4:	ldr	r3, [pc, #328]	; (e830 <paths_from_inode@@Base+0x23c>)
    e6e6:	add	r2, pc
    e6e8:	ldr	r3, [r2, r3]
    e6ea:	ldr	r2, [r3, #0]
    e6ec:	ldr	r3, [sp, #76]	; 0x4c
    e6ee:	eors	r2, r3
    e6f0:	beq.w	e822 <paths_from_inode@@Base+0x22e>
    e6f4:	blx	8510 <__stack_chk_fail@plt>
    e6f8:	ldr	r0, [r4, #0]
    e6fa:	adds	r3, #1
    e6fc:	ldr.w	r8, [sp, #65]	; 0x41
    e700:	ldr.w	r9, [sp, #69]	; 0x45
    e704:	ldr	r7, [r4, #32]
    e706:	str	r3, [sp, #28]
    e708:	bl	16a4c <btrfs_clone_extent_buffer@@Base>
    e70c:	mov	r5, r0
    e70e:	cmp	r0, #0
    e710:	beq.n	e790 <paths_from_inode@@Base+0x19c>
    e712:	ldr	r3, [r0, #80]	; 0x50
    e714:	mov	sl, r6
    e716:	adds	r3, #1
    e718:	str	r3, [r0, #80]	; 0x50
    e71a:	mov	r0, r4
    e71c:	bl	1754c <btrfs_release_path@@Base>
    e720:	add.w	r3, r5, #96	; 0x60
    e724:	movs	r2, #25
    e726:	str	r3, [sp, #32]
    e728:	mla	r7, r2, r7, r3
    e72c:	add.w	r3, r7, #101	; 0x65
    e730:	str	r3, [sp, #36]	; 0x24
    e732:	ldr.w	r7, [r7, #118]	; 0x76
    e736:	adds	r7, #101	; 0x65
    e738:	ldr	r3, [sp, #36]	; 0x24
    e73a:	ldr.w	r3, [r3, #21]
    e73e:	cmp	sl, r3
    e740:	bcc.n	e762 <paths_from_inode@@Base+0x16e>
    e742:	mov	fp, r6
    e744:	mov	r0, r5
    e746:	bl	16314 <free_extent_buffer@@Base>
    e74a:	cmp.w	fp, #0
    e74e:	bne.n	e668 <paths_from_inode@@Base+0x74>
    e750:	orrs.w	r3, r8, r9
    e754:	beq.w	e634 <paths_from_inode@@Base+0x40>
    e758:	adds.w	r8, r8, #1
    e75c:	adc.w	r9, r9, #0
    e760:	b.n	e634 <paths_from_inode@@Base+0x40>
    e762:	ldr	r3, [sp, #32]
    e764:	mov	r0, r8
    e766:	mov	r1, r9
    e768:	add	r3, r7
    e76a:	ldrh	r2, [r3, #8]
    e76c:	ldr	r3, [sp, #24]
    e76e:	str	r2, [sp, #44]	; 0x2c
    e770:	strd	r5, r3, [sp]
    e774:	add.w	r3, r7, #10
    e778:	bl	e10c <btrfs_ref_to_path@@Base+0x144>
    e77c:	mov	fp, r0
    e77e:	cmp	r0, #0
    e780:	bne.n	e744 <paths_from_inode@@Base+0x150>
    e782:	ldr	r2, [sp, #44]	; 0x2c
    e784:	adds	r2, #10
    e786:	add	r7, r2
    e788:	add	sl, r2
    e78a:	b.n	e738 <paths_from_inode@@Base+0x144>
    e78c:	mov	fp, r6
    e78e:	b.n	e668 <paths_from_inode@@Base+0x74>
    e790:	mvn.w	fp, #11
    e794:	b.n	e668 <paths_from_inode@@Base+0x74>
    e796:	mov.w	r9, #1
    e79a:	b.n	e680 <paths_from_inode@@Base+0x8c>
    e79c:	ldr	r0, [r4, #0]
    e79e:	add.w	r8, r8, #1
    e7a2:	ldr	r5, [r4, #32]
    e7a4:	bl	16a4c <btrfs_clone_extent_buffer@@Base>
    e7a8:	mov	r6, r0
    e7aa:	cmp	r0, #0
    e7ac:	beq.n	e81c <paths_from_inode@@Base+0x228>
    e7ae:	ldr	r2, [r0, #80]	; 0x50
    e7b0:	adds	r2, #1
    e7b2:	str	r2, [r0, #80]	; 0x50
    e7b4:	mov	r0, r4
    e7b6:	bl	1754c <btrfs_release_path@@Base>
    e7ba:	ldr	r7, [r4, #0]
    e7bc:	movs	r3, #25
    e7be:	adds	r7, #96	; 0x60
    e7c0:	mla	sl, r3, r5, r7
    e7c4:	ldr.w	r3, [sl, #118]	; 0x76
    e7c8:	ldr.w	r5, [sl, #122]	; 0x7a
    e7cc:	add.w	sl, r6, #96	; 0x60
    e7d0:	adds	r3, #101	; 0x65
    e7d2:	str	r3, [sp, #28]
    e7d4:	cmp	r5, fp
    e7d6:	bls.n	e7fa <paths_from_inode@@Base+0x206>
    e7d8:	ldr	r3, [sp, #28]
    e7da:	ldr	r2, [sp, #24]
    e7dc:	add	r3, fp
    e7de:	str	r3, [sp, #52]	; 0x34
    e7e0:	add.w	r1, sl, r3
    e7e4:	adds	r3, #18
    e7e6:	ldrh.w	ip, [r1, #16]
    e7ea:	ldr	r0, [r1, #0]
    e7ec:	ldr	r1, [r1, #4]
    e7ee:	strd	r6, r2, [sp]
    e7f2:	mov	r2, ip
    e7f4:	bl	e10c <btrfs_ref_to_path@@Base+0x144>
    e7f8:	cbz	r0, e810 <paths_from_inode@@Base+0x21c>
    e7fa:	mov	r0, r6
    e7fc:	bl	16314 <free_extent_buffer@@Base>
    e800:	ldr	r3, [sp, #56]	; 0x38
    e802:	ldr	r2, [sp, #60]	; 0x3c
    e804:	adds	r3, #1
    e806:	adc.w	r2, r2, #0
    e80a:	strd	r3, r2, [sp, #56]	; 0x38
    e80e:	b.n	e694 <paths_from_inode@@Base+0xa0>
    e810:	ldr	r3, [sp, #52]	; 0x34
    e812:	add	r3, r7
    e814:	ldrh	r3, [r3, #16]
    e816:	adds	r3, #18
    e818:	add	fp, r3
    e81a:	b.n	e7d4 <paths_from_inode@@Base+0x1e0>
    e81c:	mvn.w	fp, #11
    e820:	b.n	e6cc <paths_from_inode@@Base+0xd8>
    e822:	mov	r0, fp
    e824:	add	sp, #84	; 0x54
    e826:	vpop	{d8-d9}
    e82a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e82e:	nop
    e830:	lsls	r0, r4, #8
    e832:	movs	r0, r0
    e834:	ldrsb	r0, [r6, r5]
    e836:	movs	r5, r0
    e838:	ldrsb	r6, [r3, r2]
    e83a:	movs	r5, r0

0000e83c <init_data_container@@Base>:
    e83c:	cmp	r0, #16
    e83e:	push	{r4, lr}
    e840:	mov	r4, r0
    e842:	it	cc
    e844:	movcc	r0, #16
    e846:	blx	8678 <malloc@plt+0x4>
    e84a:	cbz	r0, e86a <init_data_container@@Base+0x2e>
    e84c:	cmp	r4, #15
    e84e:	mov.w	r3, #0
    e852:	itete	hi
    e854:	subhi	r4, #16
    e856:	rsbls	r4, r4, #16
    e85a:	strdhi	r4, r3, [r0]
    e85e:	strdls	r3, r4, [r0]
    e862:	movs	r3, #0
    e864:	strd	r3, r3, [r0, #8]
    e868:	pop	{r4, pc}
    e86a:	mvn.w	r0, #11
    e86e:	b.n	e868 <init_data_container@@Base+0x2c>

0000e870 <init_ipath@@Base>:
    e870:	push	{r4, r5, r6, lr}
    e872:	mov	r5, r1
    e874:	mov	r6, r2
    e876:	bl	e83c <init_data_container@@Base>
    e87a:	cmn.w	r0, #4096	; 0x1000
    e87e:	mov	r4, r0
    e880:	bhi.n	e894 <init_ipath@@Base+0x24>
    e882:	movs	r0, #12
    e884:	blx	8678 <malloc@plt+0x4>
    e888:	cbnz	r0, e898 <init_ipath@@Base+0x28>
    e88a:	mov	r0, r4
    e88c:	mvn.w	r4, #11
    e890:	blx	8434 <free@plt+0x4>
    e894:	mov	r0, r4
    e896:	pop	{r4, r5, r6, pc}
    e898:	strd	r5, r4, [r0, #4]
    e89c:	mov	r4, r0
    e89e:	str	r6, [r0, #0]
    e8a0:	b.n	e894 <init_ipath@@Base+0x24>

0000e8a2 <free_ipath@@Base>:
    e8a2:	push	{r4, lr}
    e8a4:	mov	r4, r0
    e8a6:	cbz	r0, e8b8 <free_ipath@@Base+0x16>
    e8a8:	ldr	r0, [r0, #8]
    e8aa:	blx	8434 <free@plt+0x4>
    e8ae:	mov	r0, r4
    e8b0:	ldmia.w	sp!, {r4, lr}
    e8b4:	b.w	8430 <free@plt>
    e8b8:	pop	{r4, pc}
    e8ba:	nop

0000e8bc <table_create@@Base>:
    e8bc:	push	{r3, r4, r5, lr}
    e8be:	mov	r4, r1
    e8c0:	muls	r1, r0
    e8c2:	mov	r5, r0
    e8c4:	movs	r0, #1
    e8c6:	adds	r1, #2
    e8c8:	lsls	r1, r1, #2
    e8ca:	blx	839c <calloc@plt+0x4>
    e8ce:	cbz	r0, e8d4 <table_create@@Base+0x18>
    e8d0:	strd	r5, r4, [r0]
    e8d4:	pop	{r3, r4, r5, pc}

0000e8d6 <table_vprintf@@Base>:
    e8d6:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    e8d8:	mov	r4, r0
    e8da:	ldr	r7, [r0, #0]
    e8dc:	movs	r0, #100	; 0x64
    e8de:	mov	r6, r3
    e8e0:	mla	r7, r7, r2, r1
    e8e4:	movs	r1, #1
    e8e6:	blx	839c <calloc@plt+0x4>
    e8ea:	mov	r5, r0
    e8ec:	cbz	r0, e90e <table_vprintf@@Base+0x38>
    e8ee:	add.w	r4, r4, r7, lsl #2
    e8f2:	ldr	r0, [r4, #8]
    e8f4:	cbz	r0, e8fa <table_vprintf@@Base+0x24>
    e8f6:	blx	8434 <free@plt+0x4>
    e8fa:	ldr	r3, [sp, #32]
    e8fc:	movs	r2, #1
    e8fe:	str	r5, [r4, #8]
    e900:	movs	r1, #99	; 0x63
    e902:	mov	r0, r5
    e904:	strd	r6, r3, [sp]
    e908:	movs	r3, #100	; 0x64
    e90a:	blx	8470 <__vsnprintf_chk@plt>
    e90e:	mov	r0, r5
    e910:	add	sp, #12
    e912:	pop	{r4, r5, r6, r7, pc}

0000e914 <table_printf@@Base>:
    e914:	push	{r3}
    e916:	push	{r4, lr}
    e918:	sub	sp, #20
    e91a:	ldr.w	lr, [pc, #68]	; e960 <table_printf@@Base+0x4c>
    e91e:	add	r4, sp, #28
    e920:	ldr.w	ip, [pc, #64]	; e964 <table_printf@@Base+0x50>
    e924:	add	lr, pc
    e926:	ldr.w	r3, [r4], #4
    e92a:	ldr.w	ip, [lr, ip]
    e92e:	ldr.w	ip, [ip]
    e932:	str.w	ip, [sp, #12]
    e936:	mov.w	ip, #0
    e93a:	str	r4, [sp, #0]
    e93c:	str	r4, [sp, #8]
    e93e:	bl	e8d6 <table_vprintf@@Base>
    e942:	ldr	r2, [pc, #36]	; (e968 <table_printf@@Base+0x54>)
    e944:	ldr	r3, [pc, #28]	; (e964 <table_printf@@Base+0x50>)
    e946:	add	r2, pc
    e948:	ldr	r3, [r2, r3]
    e94a:	ldr	r2, [r3, #0]
    e94c:	ldr	r3, [sp, #12]
    e94e:	eors	r2, r3
    e950:	beq.n	e956 <table_printf@@Base+0x42>
    e952:	blx	8510 <__stack_chk_fail@plt>
    e956:	add	sp, #20
    e958:	ldmia.w	sp!, {r4, lr}
    e95c:	add	sp, #4
    e95e:	bx	lr
    e960:	strb	r0, [r4, r1]
    e962:	movs	r5, r0
    e964:	lsls	r0, r4, #8
    e966:	movs	r0, r0
    e968:	strb	r6, [r7, r0]
    e96a:	movs	r5, r0

0000e96c <table_dump@@Base>:
    e96c:	ldr	r2, [pc, #296]	; (ea98 <table_dump@@Base+0x12c>)
    e96e:	ldr	r3, [pc, #300]	; (ea9c <table_dump@@Base+0x130>)
    e970:	add	r2, pc
    e972:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e976:	sub	sp, #28
    e978:	ldr	r3, [r2, r3]
    e97a:	add	r7, sp, #0
    e97c:	movs	r5, #0
    e97e:	mov	r4, r0
    e980:	ldr	r3, [r3, #0]
    e982:	str	r3, [r7, #20]
    e984:	mov.w	r3, #0
    e988:	ldr	r3, [r0, #0]
    e98a:	mov	lr, r5
    e98c:	lsls	r2, r3, #2
    e98e:	adds	r1, r2, #7
    e990:	bic.w	r1, r1, #7
    e994:	sub.w	sp, sp, r1
    e998:	ldr	r1, [r0, #4]
    e99a:	mov	fp, sp
    e99c:	sub.w	r6, fp, #4
    e9a0:	str	r1, [r7, #12]
    e9a2:	cmp	r5, r3
    e9a4:	blt.n	e9ce <table_dump@@Base+0x62>
    e9a6:	ldr.w	r8, [pc, #248]	; eaa0 <table_dump@@Base+0x134>
    e9aa:	movs	r6, #0
    e9ac:	ldr.w	r9, [pc, #244]	; eaa4 <table_dump@@Base+0x138>
    e9b0:	add	r8, pc
    e9b2:	add	r9, pc
    e9b4:	ldr	r3, [r4, #4]
    e9b6:	cmp	r6, r3
    e9b8:	blt.n	ea86 <table_dump@@Base+0x11a>
    e9ba:	ldr	r2, [pc, #236]	; (eaa8 <table_dump@@Base+0x13c>)
    e9bc:	ldr	r3, [pc, #220]	; (ea9c <table_dump@@Base+0x130>)
    e9be:	add	r2, pc
    e9c0:	ldr	r3, [r2, r3]
    e9c2:	ldr	r2, [r3, #0]
    e9c4:	ldr	r3, [r7, #20]
    e9c6:	eors	r2, r3
    e9c8:	beq.n	ea90 <table_dump@@Base+0x124>
    e9ca:	blx	8510 <__stack_chk_fail@plt>
    e9ce:	add.w	r9, r4, r5, lsl #2
    e9d2:	mov.w	r8, #0
    e9d6:	str.w	lr, [r6, #4]!
    e9da:	ldr	r1, [r7, #12]
    e9dc:	cmp	r8, r1
    e9de:	blt.n	e9e4 <table_dump@@Base+0x78>
    e9e0:	adds	r5, #1
    e9e2:	b.n	e9a2 <table_dump@@Base+0x36>
    e9e4:	ldr.w	sl, [r9, #8]
    e9e8:	cmp.w	sl, #0
    e9ec:	beq.n	ea16 <table_dump@@Base+0xaa>
    e9ee:	mov	r0, sl
    e9f0:	strd	r2, r3, [r7, #4]
    e9f4:	blx	8748 <strlen@plt>
    e9f8:	ldrd	r2, r3, [r7, #4]
    e9fc:	mov.w	lr, #0
    ea00:	subs	r0, #1
    ea02:	beq.n	ea16 <table_dump@@Base+0xaa>
    ea04:	ldrb.w	ip, [sl]
    ea08:	cmp.w	ip, #42	; 0x2a
    ea0c:	beq.n	ea16 <table_dump@@Base+0xaa>
    ea0e:	ldr	r1, [r6, #0]
    ea10:	cmp	r1, r0
    ea12:	it	lt
    ea14:	strlt	r0, [r6, #0]
    ea16:	add.w	r8, r8, #1
    ea1a:	add	r9, r2
    ea1c:	b.n	e9da <table_dump@@Base+0x6e>
    ea1e:	mla	r3, r3, r6, r5
    ea22:	ldr.w	r2, [fp, r5, lsl #2]
    ea26:	adds	r3, #2
    ea28:	ldr.w	r3, [r4, r3, lsl #2]
    ea2c:	cbz	r3, ea32 <table_dump@@Base+0xc6>
    ea2e:	ldrb	r1, [r3, #0]
    ea30:	cbnz	r1, ea3e <table_dump@@Base+0xd2>
    ea32:	mov	r3, r8
    ea34:	mov	r1, r9
    ea36:	movs	r0, #1
    ea38:	blx	8838 <__printf_chk@plt+0x4>
    ea3c:	b.n	ea4a <table_dump@@Base+0xde>
    ea3e:	cmp	r1, #42	; 0x2a
    ea40:	bne.n	ea7a <table_dump@@Base+0x10e>
    ea42:	ldrb	r1, [r3, #1]
    ea44:	cbz	r1, ea80 <table_dump@@Base+0x114>
    ea46:	subs	r2, #1
    ea48:	bcs.n	ea6a <table_dump@@Base+0xfe>
    ea4a:	ldr	r3, [r4, #0]
    ea4c:	subs	r3, #1
    ea4e:	cmp	r5, r3
    ea50:	beq.n	ea58 <table_dump@@Base+0xec>
    ea52:	movs	r0, #32
    ea54:	blx	87d4 <putchar@plt+0x4>
    ea58:	adds	r5, #1
    ea5a:	ldr	r3, [r4, #0]
    ea5c:	cmp	r5, r3
    ea5e:	blt.n	ea1e <table_dump@@Base+0xb2>
    ea60:	movs	r0, #10
    ea62:	adds	r6, #1
    ea64:	blx	87d4 <putchar@plt+0x4>
    ea68:	b.n	e9b4 <table_dump@@Base+0x48>
    ea6a:	ldrb	r0, [r3, #1]
    ea6c:	str	r2, [r7, #8]
    ea6e:	str	r3, [r7, #12]
    ea70:	blx	87d4 <putchar@plt+0x4>
    ea74:	ldrd	r2, r3, [r7, #8]
    ea78:	b.n	ea46 <table_dump@@Base+0xda>
    ea7a:	cmp	r1, #60	; 0x3c
    ea7c:	it	eq
    ea7e:	negeq	r2, r2
    ea80:	adds	r3, #1
    ea82:	mov	r1, sl
    ea84:	b.n	ea36 <table_dump@@Base+0xca>
    ea86:	ldr.w	sl, [pc, #36]	; eaac <table_dump@@Base+0x140>
    ea8a:	movs	r5, #0
    ea8c:	add	sl, pc
    ea8e:	b.n	ea5a <table_dump@@Base+0xee>
    ea90:	adds	r7, #28
    ea92:	mov	sp, r7
    ea94:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ea98:	strb	r4, [r2, r0]
    ea9a:	movs	r5, r0
    ea9c:	lsls	r0, r4, #8
    ea9e:	movs	r0, r0
    eaa0:	add	r4, sp, #372	; 0x174
    eaa2:	movs	r2, r0
    eaa4:	add	r5, pc, #772	; (adr r5, edac <check_dir_conflict@@Base+0xb4>)
    eaa6:	movs	r2, r0
    eaa8:	strh	r6, [r0, r7]
    eaaa:	movs	r5, r0
    eaac:	add	r4, pc, #924	; (adr r4, ee4c <btrfs_add_link@@Base+0x28>)
    eaae:	movs	r2, r0

0000eab0 <table_free@@Base>:
    eab0:	push	{r3, r4, r5, r6, r7, lr}
    eab2:	add.w	r7, r0, #8
    eab6:	ldrd	r5, r3, [r0]
    eaba:	mov	r4, r0
    eabc:	movs	r6, #0
    eabe:	muls	r5, r3
    eac0:	cmp	r6, r5
    eac2:	blt.n	eace <table_free@@Base+0x1e>
    eac4:	mov	r0, r4
    eac6:	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    eaca:	b.w	8430 <free@plt>
    eace:	ldr.w	r0, [r7], #4
    ead2:	cbz	r0, ead8 <table_free@@Base+0x28>
    ead4:	blx	8434 <free@plt+0x4>
    ead8:	adds	r6, #1
    eada:	b.n	eac0 <table_free@@Base+0x10>

0000eadc <task_init@@Base>:
    eadc:	push	{r4, r5, r6, lr}
    eade:	mov	r5, r0
    eae0:	mov	r4, r1
    eae2:	movs	r0, #1
    eae4:	movs	r1, #32
    eae6:	mov	r6, r2
    eae8:	blx	839c <calloc@plt+0x4>
    eaec:	cbz	r0, eaf4 <task_init@@Base+0x18>
    eaee:	strd	r6, r5, [r0, #20]
    eaf2:	str	r4, [r0, #28]
    eaf4:	pop	{r4, r5, r6, pc}

0000eaf6 <task_start@@Base>:
    eaf6:	push	{r4, r5, r6, lr}
    eaf8:	mov	r6, r1
    eafa:	mov	r5, r2
    eafc:	mov	r4, r0
    eafe:	cbz	r0, eb2e <task_start@@Base+0x38>
    eb00:	ldr	r3, [r0, #24]
    eb02:	cbz	r3, eb2e <task_start@@Base+0x38>
    eb04:	cbz	r1, eb0e <task_start@@Base+0x18>
    eb06:	movs	r0, #0
    eb08:	blx	8498 <time@plt>
    eb0c:	str	r0, [r6, #0]
    eb0e:	cbz	r5, eb18 <task_start@@Base+0x22>
    eb10:	movs	r2, #0
    eb12:	movs	r3, #0
    eb14:	strd	r2, r3, [r5]
    eb18:	ldrd	r3, r2, [r4, #20]
    eb1c:	add.w	r0, r4, #16
    eb20:	movs	r1, #0
    eb22:	blx	861c <pthread_create@plt>
    eb26:	cbz	r0, eb2c <task_start@@Base+0x36>
    eb28:	movs	r3, #0
    eb2a:	str	r3, [r4, #16]
    eb2c:	pop	{r4, r5, r6, pc}
    eb2e:	mov.w	r0, #4294967295	; 0xffffffff
    eb32:	b.n	eb2c <task_start@@Base+0x36>

0000eb34 <task_stop@@Base>:
    eb34:	push	{r4, lr}
    eb36:	mov	r4, r0
    eb38:	cbz	r0, eb66 <task_stop@@Base+0x32>
    eb3a:	ldr	r0, [r0, #16]
    eb3c:	cbz	r0, eb4e <task_stop@@Base+0x1a>
    eb3e:	blx	87ec <pthread_cancel@plt>
    eb42:	ldr	r0, [r4, #16]
    eb44:	movs	r1, #0
    eb46:	blx	88b4 <pthread_join@plt>
    eb4a:	movs	r3, #0
    eb4c:	str	r3, [r4, #16]
    eb4e:	ldr	r0, [r4, #0]
    eb50:	cbz	r0, eb5a <task_stop@@Base+0x26>
    eb52:	blx	8998 <close@plt>
    eb56:	movs	r3, #0
    eb58:	str	r3, [r4, #0]
    eb5a:	ldr	r3, [r4, #28]
    eb5c:	cbz	r3, eb66 <task_stop@@Base+0x32>
    eb5e:	ldr	r0, [r4, #20]
    eb60:	ldmia.w	sp!, {r4, lr}
    eb64:	bx	r3
    eb66:	pop	{r4, pc}

0000eb68 <task_deinit@@Base>:
    eb68:	cbz	r0, eb6e <task_deinit@@Base+0x6>
    eb6a:	b.w	8430 <free@plt>
    eb6e:	bx	lr

0000eb70 <task_period_start@@Base>:
    eb70:	ldr	r2, [pc, #128]	; (ebf4 <task_period_start@@Base+0x84>)
    eb72:	ldr	r3, [pc, #132]	; (ebf8 <task_period_start@@Base+0x88>)
    eb74:	add	r2, pc
    eb76:	push	{r4, r5, lr}
    eb78:	sub	sp, #28
    eb7a:	ldr	r3, [r2, r3]
    eb7c:	mov	r5, r1
    eb7e:	mov	r4, r0
    eb80:	ldr	r3, [r3, #0]
    eb82:	str	r3, [sp, #20]
    eb84:	mov.w	r3, #0
    eb88:	cbz	r0, ebe2 <task_period_start@@Base+0x72>
    eb8a:	movs	r1, #0
    eb8c:	movs	r0, #1
    eb8e:	blx	870c <timerfd_create@plt>
    eb92:	mov	r3, r0
    eb94:	adds	r3, #1
    eb96:	str	r0, [r4, #0]
    eb98:	bne.n	ebb2 <task_period_start@@Base+0x42>
    eb9a:	movs	r0, #0
    eb9c:	str	r0, [r4, #0]
    eb9e:	ldr	r2, [pc, #92]	; (ebfc <task_period_start@@Base+0x8c>)
    eba0:	ldr	r3, [pc, #84]	; (ebf8 <task_period_start@@Base+0x88>)
    eba2:	add	r2, pc
    eba4:	ldr	r3, [r2, r3]
    eba6:	ldr	r2, [r3, #0]
    eba8:	ldr	r3, [sp, #20]
    ebaa:	eors	r2, r3
    ebac:	beq.n	ebe8 <task_period_start@@Base+0x78>
    ebae:	blx	8510 <__stack_chk_fail@plt>
    ebb2:	movs	r2, #0
    ebb4:	movs	r3, #0
    ebb6:	strd	r2, r3, [r4, #8]
    ebba:	mov.w	r1, #1000	; 0x3e8
    ebbe:	ldr	r2, [pc, #44]	; (ebec <task_period_start@@Base+0x7c>)
    ebc0:	umull	r2, r3, r5, r2
    ebc4:	lsrs	r2, r3, #6
    ebc6:	ldr	r3, [pc, #40]	; (ebf0 <task_period_start@@Base+0x80>)
    ebc8:	str	r2, [sp, #4]
    ebca:	mls	r1, r1, r2, r5
    ebce:	muls	r1, r3
    ebd0:	movs	r3, #0
    ebd2:	strd	r1, r2, [sp, #8]
    ebd6:	add	r2, sp, #4
    ebd8:	str	r1, [sp, #16]
    ebda:	mov	r1, r3
    ebdc:	blx	88dc <timerfd_settime@plt>
    ebe0:	b.n	eb9e <task_period_start@@Base+0x2e>
    ebe2:	mov.w	r0, #4294967295	; 0xffffffff
    ebe6:	b.n	eb9e <task_period_start@@Base+0x2e>
    ebe8:	add	sp, #28
    ebea:	pop	{r4, r5, pc}
    ebec:	ldr	r5, [pc, #844]	; (ef3c <btrfs_add_link@@Base+0x118>)
    ebee:	asrs	r2, r4, #1
    ebf0:	negs	r0, r0
    ebf2:	movs	r7, r1
    ebf4:	strh	r0, [r2, r0]
    ebf6:	movs	r5, r0
    ebf8:	lsls	r0, r4, #8
    ebfa:	movs	r0, r0
    ebfc:	str	r2, [r4, r7]
    ebfe:	movs	r5, r0

0000ec00 <task_period_wait@@Base>:
    ec00:	push	{r0, r1, r2, r3, r4, lr}
    ec02:	mov	r4, r0
    ec04:	ldr	r2, [pc, #88]	; (ec60 <task_period_wait@@Base+0x60>)
    ec06:	ldr	r3, [pc, #92]	; (ec64 <task_period_wait@@Base+0x64>)
    ec08:	add	r2, pc
    ec0a:	ldr	r3, [r2, r3]
    ec0c:	ldr	r3, [r3, #0]
    ec0e:	str	r3, [sp, #12]
    ec10:	mov.w	r3, #0
    ec14:	cbz	r0, ec46 <task_period_wait@@Base+0x46>
    ec16:	ldr	r0, [r0, #0]
    ec18:	cbz	r0, ec46 <task_period_wait@@Base+0x46>
    ec1a:	movs	r2, #8
    ec1c:	mov	r1, sp
    ec1e:	blx	83fc <read@plt>
    ec22:	adds	r0, #1
    ec24:	beq.n	ec46 <task_period_wait@@Base+0x46>
    ec26:	ldrd	r2, r3, [sp]
    ec2a:	orrs.w	r1, r2, r3
    ec2e:	beq.n	ec46 <task_period_wait@@Base+0x46>
    ec30:	adds.w	r1, r2, #4294967295	; 0xffffffff
    ec34:	adc.w	r0, r3, #4294967295	; 0xffffffff
    ec38:	ldrd	r3, r2, [r4, #8]
    ec3c:	adds	r3, r3, r1
    ec3e:	adc.w	r2, r0, r2
    ec42:	strd	r3, r2, [r4, #8]
    ec46:	ldr	r2, [pc, #32]	; (ec68 <task_period_wait@@Base+0x68>)
    ec48:	ldr	r3, [pc, #24]	; (ec64 <task_period_wait@@Base+0x64>)
    ec4a:	add	r2, pc
    ec4c:	ldr	r3, [r2, r3]
    ec4e:	ldr	r2, [r3, #0]
    ec50:	ldr	r3, [sp, #12]
    ec52:	eors	r2, r3
    ec54:	beq.n	ec5a <task_period_wait@@Base+0x5a>
    ec56:	blx	8510 <__stack_chk_fail@plt>
    ec5a:	add	sp, #16
    ec5c:	pop	{r4, pc}
    ec5e:	nop
    ec60:	str	r4, [r7, r5]
    ec62:	movs	r5, r0
    ec64:	lsls	r0, r4, #8
    ec66:	movs	r0, r0
    ec68:	str	r2, [r7, r4]
    ec6a:	movs	r5, r0

0000ec6c <task_period_stop@@Base>:
    ec6c:	push	{r4, lr}
    ec6e:	mov	r4, r0
    ec70:	cbz	r0, ec8c <task_period_stop@@Base+0x20>
    ec72:	ldr	r0, [r0, #0]
    ec74:	cbz	r0, ec8c <task_period_stop@@Base+0x20>
    ec76:	movs	r3, #0
    ec78:	mov	r2, r3
    ec7a:	mov	r1, r3
    ec7c:	blx	88dc <timerfd_settime@plt>
    ec80:	ldr	r0, [r4, #0]
    ec82:	blx	8998 <close@plt>
    ec86:	mov.w	r3, #4294967295	; 0xffffffff
    ec8a:	str	r3, [r4, #0]
    ec8c:	pop	{r4, pc}
    ec8e:	nop
    ec90:	push	{r4, lr}
    ec92:	mov	r4, r1
    ec94:	ldr	r1, [pc, #84]	; (ecec <task_period_stop@@Base+0x80>)
    ec96:	sub	sp, #24
    ec98:	ldr	r3, [pc, #84]	; (ecf0 <task_period_stop@@Base+0x84>)
    ec9a:	add	r1, pc
    ec9c:	ldr	r3, [r1, r3]
    ec9e:	mov	r1, sp
    eca0:	ldr	r3, [r3, #0]
    eca2:	str	r3, [sp, #20]
    eca4:	mov.w	r3, #0
    eca8:	movs	r3, #25
    ecaa:	muls	r2, r3
    ecac:	movs	r3, #17
    ecae:	adds	r2, #101	; 0x65
    ecb0:	bl	16a0e <read_extent_buffer@@Base>
    ecb4:	ldr.w	r3, [sp, #13]
    ecb8:	ldr.w	r2, [sp, #9]
    ecbc:	str.w	r3, [r4, #13]
    ecc0:	ldrb.w	r3, [sp, #8]
    ecc4:	str.w	r2, [r4, #9]
    ecc8:	ldr	r2, [pc, #40]	; (ecf4 <task_period_stop@@Base+0x88>)
    ecca:	strb	r3, [r4, #8]
    eccc:	ldr	r3, [sp, #0]
    ecce:	add	r2, pc
    ecd0:	str	r3, [r4, #0]
    ecd2:	ldr	r3, [sp, #4]
    ecd4:	str	r3, [r4, #4]
    ecd6:	ldr	r3, [pc, #24]	; (ecf0 <task_period_stop@@Base+0x84>)
    ecd8:	ldr	r3, [r2, r3]
    ecda:	ldr	r2, [r3, #0]
    ecdc:	ldr	r3, [sp, #20]
    ecde:	eors	r2, r3
    ece0:	beq.n	ece6 <task_period_stop@@Base+0x7a>
    ece2:	blx	8510 <__stack_chk_fail@plt>
    ece6:	add	sp, #24
    ece8:	pop	{r4, pc}
    ecea:	nop
    ecec:	str	r2, [r5, r3]
    ecee:	movs	r5, r0
    ecf0:	lsls	r0, r4, #8
    ecf2:	movs	r0, r0
    ecf4:	str	r6, [r6, r2]
    ecf6:	movs	r5, r0

0000ecf8 <check_dir_conflict@@Base>:
    ecf8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    ecfc:	mov	sl, r2
    ecfe:	ldr	r2, [pc, #280]	; (ee18 <check_dir_conflict@@Base+0x120>)
    ed00:	sub	sp, #56	; 0x38
    ed02:	ldr	r3, [pc, #280]	; (ee1c <check_dir_conflict@@Base+0x124>)
    ed04:	mov	r8, r0
    ed06:	add	r2, pc
    ed08:	ldrd	r6, r7, [sp, #88]	; 0x58
    ed0c:	mov	r9, r1
    ed0e:	ldr	r3, [r2, r3]
    ed10:	ldr	r3, [r3, #0]
    ed12:	str	r3, [sp, #52]	; 0x34
    ed14:	mov.w	r3, #0
    ed18:	bl	17544 <btrfs_alloc_path@@Base>
    ed1c:	mov	r5, r0
    ed1e:	cmp	r0, #0
    ed20:	beq.n	ee08 <check_dir_conflict@@Base+0x110>
    ed22:	movs	r0, #0
    ed24:	movs	r3, #1
    ed26:	add	r2, sp, #32
    ed28:	strb.w	r3, [sp, #40]	; 0x28
    ed2c:	mov	r1, r8
    ed2e:	mov	r3, r5
    ed30:	strd	r0, r0, [sp]
    ed34:	strd	r6, r7, [sp, #32]
    ed38:	strb.w	r0, [sp, #41]	; 0x29
    ed3c:	strb.w	r0, [sp, #42]	; 0x2a
    ed40:	strb.w	r0, [sp, #43]	; 0x2b
    ed44:	strb.w	r0, [sp, #44]	; 0x2c
    ed48:	strb.w	r0, [sp, #45]	; 0x2d
    ed4c:	strb.w	r0, [sp, #46]	; 0x2e
    ed50:	strb.w	r0, [sp, #47]	; 0x2f
    ed54:	strb.w	r0, [sp, #48]	; 0x30
    ed58:	bl	19930 <btrfs_search_slot@@Base>
    ed5c:	subs	r4, r0, #0
    ed5e:	blt.n	eda0 <check_dir_conflict@@Base+0xa8>
    ed60:	bne.n	edfc <check_dir_conflict@@Base+0x104>
    ed62:	ldr	r3, [r5, #0]
    ed64:	movs	r1, #25
    ed66:	ldr	r2, [r5, #32]
    ed68:	adds	r3, #96	; 0x60
    ed6a:	mla	r2, r1, r2, r3
    ed6e:	ldr.w	r2, [r2, #118]	; 0x76
    ed72:	add	r3, r2
    ed74:	ldr.w	r3, [r3, #153]	; 0x99
    ed78:	lsls	r3, r3, #17
    ed7a:	bpl.n	ee02 <check_dir_conflict@@Base+0x10a>
    ed7c:	mov	r0, r5
    ed7e:	bl	1754c <btrfs_release_path@@Base>
    ed82:	mov	r2, r5
    ed84:	mov	r1, r8
    ed86:	mov	r0, r4
    ed88:	strd	sl, r4, [sp, #12]
    ed8c:	str.w	r9, [sp, #8]
    ed90:	strd	r6, r7, [sp]
    ed94:	bl	94e0 <btrfs_lookup_dir_item@@Base>
    ed98:	cmn.w	r0, #4096	; 0x1000
    ed9c:	bls.n	edba <check_dir_conflict@@Base+0xc2>
    ed9e:	mov	r4, r0
    eda0:	mov	r0, r5
    eda2:	bl	17572 <btrfs_free_path@@Base>
    eda6:	ldr	r2, [pc, #120]	; (ee20 <check_dir_conflict@@Base+0x128>)
    eda8:	ldr	r3, [pc, #112]	; (ee1c <check_dir_conflict@@Base+0x124>)
    edaa:	add	r2, pc
    edac:	ldr	r3, [r2, r3]
    edae:	ldr	r2, [r3, #0]
    edb0:	ldr	r3, [sp, #52]	; 0x34
    edb2:	eors	r2, r3
    edb4:	beq.n	ee0e <check_dir_conflict@@Base+0x116>
    edb6:	blx	8510 <__stack_chk_fail@plt>
    edba:	cbnz	r0, edf6 <check_dir_conflict@@Base+0xfe>
    edbc:	mov	r0, r5
    edbe:	bl	1754c <btrfs_release_path@@Base>
    edc2:	ldrd	r2, r3, [sp, #96]	; 0x60
    edc6:	mov	r1, r8
    edc8:	mov	r0, r4
    edca:	str	r4, [sp, #24]
    edcc:	strd	r2, r3, [sp, #16]
    edd0:	mov	r2, r5
    edd2:	strd	r9, sl, [sp, #8]
    edd6:	strd	r6, r7, [sp]
    edda:	bl	95c8 <btrfs_lookup_dir_index@@Base>
    edde:	cmn.w	r0, #4096	; 0x1000
    ede2:	bls.n	edf2 <check_dir_conflict@@Base+0xfa>
    ede4:	cmn.w	r0, #2
    ede8:	it	eq
    edea:	moveq	r0, r4
    edec:	cmn.w	r0, #4096	; 0x1000
    edf0:	bhi.n	ed9e <check_dir_conflict@@Base+0xa6>
    edf2:	cmp	r0, #0
    edf4:	beq.n	eda0 <check_dir_conflict@@Base+0xa8>
    edf6:	mvn.w	r4, #16
    edfa:	b.n	eda0 <check_dir_conflict@@Base+0xa8>
    edfc:	mvn.w	r4, #1
    ee00:	b.n	eda0 <check_dir_conflict@@Base+0xa8>
    ee02:	mvn.w	r4, #19
    ee06:	b.n	eda0 <check_dir_conflict@@Base+0xa8>
    ee08:	mvn.w	r4, #11
    ee0c:	b.n	eda6 <check_dir_conflict@@Base+0xae>
    ee0e:	mov	r0, r4
    ee10:	add	sp, #56	; 0x38
    ee12:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    ee16:	nop
    ee18:	str	r6, [r7, r1]
    ee1a:	movs	r5, r0
    ee1c:	lsls	r0, r4, #8
    ee1e:	movs	r0, r0
    ee20:	ldr	r7, [pc, #872]	; (f18c <btrfs_add_orphan_item@@Base+0x48>)
    ee22:	movs	r5, r0

0000ee24 <btrfs_add_link@@Base>:
    ee24:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ee28:	sub	sp, #92	; 0x5c
    ee2a:	mov	r4, r3
    ee2c:	mov	r6, r2
    ee2e:	ldr	r3, [sp, #148]	; 0x94
    ee30:	mov	r8, r0
    ee32:	ldr	r2, [pc, #772]	; (f138 <btrfs_add_link@@Base+0x314>)
    ee34:	mov	r7, r1
    ee36:	ldr.w	sl, [sp, #136]	; 0x88
    ee3a:	str	r3, [sp, #32]
    ee3c:	add	r2, pc
    ee3e:	ldr	r3, [pc, #764]	; (f13c <btrfs_add_link@@Base+0x318>)
    ee40:	ldr	r3, [r2, r3]
    ee42:	ldr	r3, [r3, #0]
    ee44:	str	r3, [sp, #84]	; 0x54
    ee46:	mov.w	r3, #0
    ee4a:	bl	17544 <btrfs_alloc_path@@Base>
    ee4e:	mov	r5, r0
    ee50:	cmp	r0, #0
    ee52:	beq.w	f11e <btrfs_add_link@@Base+0x2fa>
    ee56:	ldr	r3, [sp, #32]
    ee58:	cbz	r3, ee68 <btrfs_add_link@@Base+0x44>
    ee5a:	ldrd	r2, r3, [r3]
    ee5e:	strd	r2, r3, [sp, #24]
    ee62:	orrs	r3, r2
    ee64:	bne.w	ef6c <btrfs_add_link@@Base+0x148>
    ee68:	bl	17544 <btrfs_alloc_path@@Base>
    ee6c:	mov	r9, r0
    ee6e:	cbnz	r0, eeac <btrfs_add_link@@Base+0x88>
    ee70:	mvn.w	fp, #11
    ee74:	movs	r3, #0
    ee76:	movs	r4, #0
    ee78:	strd	r3, r4, [sp, #24]
    ee7c:	mov	r0, r5
    ee7e:	bl	17572 <btrfs_free_path@@Base>
    ee82:	cmp.w	fp, #0
    ee86:	bne.n	ee96 <btrfs_add_link@@Base+0x72>
    ee88:	ldr	r3, [sp, #32]
    ee8a:	cbz	r3, ee96 <btrfs_add_link@@Base+0x72>
    ee8c:	mov	r1, r3
    ee8e:	ldrd	r2, r3, [sp, #24]
    ee92:	strd	r2, r3, [r1]
    ee96:	ldr	r2, [pc, #680]	; (f140 <btrfs_add_link@@Base+0x31c>)
    ee98:	ldr	r3, [pc, #672]	; (f13c <btrfs_add_link@@Base+0x318>)
    ee9a:	add	r2, pc
    ee9c:	ldr	r3, [r2, r3]
    ee9e:	ldr	r2, [r3, #0]
    eea0:	ldr	r3, [sp, #84]	; 0x54
    eea2:	eors	r2, r3
    eea4:	beq.w	f12e <btrfs_add_link@@Base+0x30a>
    eea8:	blx	8510 <__stack_chk_fail@plt>
    eeac:	ldr	r3, [sp, #128]	; 0x80
    eeae:	mov.w	r1, #4294967295	; 0xffffffff
    eeb2:	movs	r2, #96	; 0x60
    eeb4:	movs	r0, #0
    eeb6:	strb.w	r2, [sp, #52]	; 0x34
    eeba:	add	r2, sp, #44	; 0x2c
    eebc:	str	r3, [sp, #44]	; 0x2c
    eebe:	ldr	r3, [sp, #132]	; 0x84
    eec0:	strb.w	r1, [sp, #53]	; 0x35
    eec4:	strb.w	r1, [sp, #54]	; 0x36
    eec8:	str	r3, [sp, #48]	; 0x30
    eeca:	mov	r3, r9
    eecc:	strb.w	r1, [sp, #55]	; 0x37
    eed0:	strb.w	r1, [sp, #56]	; 0x38
    eed4:	strb.w	r1, [sp, #57]	; 0x39
    eed8:	strb.w	r1, [sp, #58]	; 0x3a
    eedc:	strb.w	r1, [sp, #59]	; 0x3b
    eee0:	strb.w	r1, [sp, #60]	; 0x3c
    eee4:	mov	r1, r7
    eee6:	strd	r0, r0, [sp]
    eeea:	bl	19930 <btrfs_search_slot@@Base>
    eeee:	subs.w	fp, r0, #0
    eef2:	blt.n	ef0e <btrfs_add_link@@Base+0xea>
    eef4:	ldr.w	r2, [r9, #32]
    eef8:	cbnz	r2, ef18 <btrfs_add_link@@Base+0xf4>
    eefa:	mov	r1, r9
    eefc:	mov	r0, r7
    eefe:	bl	1acdc <btrfs_prev_leaf@@Base>
    ef02:	subs.w	fp, r0, #0
    ef06:	blt.n	ef0e <btrfs_add_link@@Base+0xea>
    ef08:	beq.n	ef1e <btrfs_add_link@@Base+0xfa>
    ef0a:	mvn.w	fp, #4
    ef0e:	movs	r2, #2
    ef10:	movs	r3, #0
    ef12:	strd	r2, r3, [sp, #24]
    ef16:	b.n	ef5e <btrfs_add_link@@Base+0x13a>
    ef18:	subs	r2, #1
    ef1a:	str.w	r2, [r9, #32]
    ef1e:	ldr.w	r2, [r9, #32]
    ef22:	add	r1, sp, #64	; 0x40
    ef24:	ldr.w	r0, [r9]
    ef28:	bl	ec90 <task_period_stop@@Base+0x24>
    ef2c:	ldrd	r0, r1, [sp, #64]	; 0x40
    ef30:	ldrd	r2, r3, [sp, #128]	; 0x80
    ef34:	cmp	r3, r1
    ef36:	it	eq
    ef38:	cmpeq	r2, r0
    ef3a:	bne.w	f0a4 <btrfs_add_link@@Base+0x280>
    ef3e:	ldrb.w	r2, [sp, #72]	; 0x48
    ef42:	cmp	r2, #96	; 0x60
    ef44:	bne.w	f0a4 <btrfs_add_link@@Base+0x280>
    ef48:	ldr.w	r2, [sp, #73]	; 0x49
    ef4c:	mov.w	fp, #0
    ef50:	ldr.w	r1, [sp, #77]	; 0x4d
    ef54:	adds	r3, r2, #1
    ef56:	str	r3, [sp, #24]
    ef58:	adc.w	r3, r1, #0
    ef5c:	str	r3, [sp, #28]
    ef5e:	mov	r0, r9
    ef60:	bl	17572 <btrfs_free_path@@Base>
    ef64:	cmp.w	fp, #0
    ef68:	bne.w	f124 <btrfs_add_link@@Base+0x300>
    ef6c:	ldrd	r2, r3, [sp, #24]
    ef70:	mov	r1, sl
    ef72:	mov	r0, r7
    ef74:	strd	r2, r3, [sp, #8]
    ef78:	ldrd	r2, r3, [sp, #128]	; 0x80
    ef7c:	strd	r2, r3, [sp]
    ef80:	ldr	r2, [sp, #140]	; 0x8c
    ef82:	bl	ecf8 <check_dir_conflict@@Base>
    ef86:	subs.w	fp, r0, #0
    ef8a:	bge.n	ef9c <btrfs_add_link@@Base+0x178>
    ef8c:	ldr	r3, [sp, #156]	; 0x9c
    ef8e:	cmp	r3, #0
    ef90:	beq.w	ee7c <btrfs_add_link@@Base+0x58>
    ef94:	cmn.w	fp, #17
    ef98:	bne.w	ee7c <btrfs_add_link@@Base+0x58>
    ef9c:	ldr	r3, [sp, #152]	; 0x98
    ef9e:	cbz	r3, efd6 <btrfs_add_link@@Base+0x1b2>
    efa0:	ldrd	r2, r3, [sp, #24]
    efa4:	mov	r1, r7
    efa6:	mov	r0, r8
    efa8:	strd	r6, r4, [sp]
    efac:	strd	r2, r3, [sp, #16]
    efb0:	ldrd	r2, r3, [sp, #128]	; 0x80
    efb4:	strd	r2, r3, [sp, #8]
    efb8:	mov	r2, sl
    efba:	ldr	r3, [sp, #140]	; 0x8c
    efbc:	bl	2d36c <btrfs_insert_inode_ref@@Base>
    efc0:	subs.w	fp, r0, #0
    efc4:	bge.n	f0aa <btrfs_add_link@@Base+0x286>
    efc6:	ldr	r3, [sp, #156]	; 0x9c
    efc8:	cmp	r3, #0
    efca:	beq.w	ee7c <btrfs_add_link@@Base+0x58>
    efce:	cmn.w	fp, #17
    efd2:	bne.w	ee7c <btrfs_add_link@@Base+0x58>
    efd6:	ldrd	r2, r3, [sp, #24]
    efda:	mov	r1, r7
    efdc:	mov	r0, r8
    efde:	strd	r6, r4, [sp, #64]	; 0x40
    efe2:	mov.w	r9, #1
    efe6:	movs	r4, #0
    efe8:	strd	r2, r3, [sp, #16]
    efec:	add.w	r6, sp, #73	; 0x49
    eff0:	ldrb.w	r3, [sp, #144]	; 0x90
    eff4:	strb.w	r9, [sp, #72]	; 0x48
    eff8:	strb.w	r4, [sp, #73]	; 0x49
    effc:	str	r3, [sp, #12]
    effe:	add	r3, sp, #64	; 0x40
    f000:	str	r3, [sp, #36]	; 0x24
    f002:	str	r3, [sp, #8]
    f004:	ldrd	r2, r3, [sp, #128]	; 0x80
    f008:	strb.w	r4, [sp, #74]	; 0x4a
    f00c:	strb.w	r4, [sp, #75]	; 0x4b
    f010:	strd	r2, r3, [sp]
    f014:	mov	r2, sl
    f016:	ldr	r3, [sp, #140]	; 0x8c
    f018:	strb.w	r4, [sp, #76]	; 0x4c
    f01c:	strb.w	r4, [sp, #77]	; 0x4d
    f020:	strb.w	r4, [sp, #78]	; 0x4e
    f024:	strb.w	r4, [sp, #79]	; 0x4f
    f028:	strb.w	r4, [sp, #80]	; 0x50
    f02c:	bl	9330 <btrfs_insert_dir_item@@Base>
    f030:	subs.w	fp, r0, #0
    f034:	blt.w	ee7c <btrfs_add_link@@Base+0x58>
    f038:	ldrd	r2, r3, [sp, #128]	; 0x80
    f03c:	mov	r1, r7
    f03e:	strb	r4, [r6, #1]
    f040:	mov	r0, r8
    f042:	strb	r4, [r6, #2]
    f044:	strd	r2, r3, [sp, #64]	; 0x40
    f048:	mov	r3, r5
    f04a:	strb	r4, [r6, #3]
    f04c:	strb	r4, [r6, #4]
    f04e:	strb	r4, [r6, #5]
    f050:	strb	r4, [r6, #6]
    f052:	strb	r4, [r6, #7]
    f054:	ldr	r2, [sp, #36]	; 0x24
    f056:	strd	r9, r9, [sp]
    f05a:	strb.w	r9, [sp, #72]	; 0x48
    f05e:	strb.w	r4, [sp, #73]	; 0x49
    f062:	bl	19930 <btrfs_search_slot@@Base>
    f066:	mov	fp, r0
    f068:	cmp	r0, #0
    f06a:	bne.w	ee7c <btrfs_add_link@@Base+0x58>
    f06e:	ldr	r3, [r5, #0]
    f070:	movs	r0, #25
    f072:	ldr	r1, [r5, #32]
    f074:	adds	r3, #96	; 0x60
    f076:	ldr	r2, [sp, #140]	; 0x8c
    f078:	mla	r1, r0, r1, r3
    f07c:	lsl.w	r4, r2, r9
    f080:	ldr.w	r1, [r1, #118]	; 0x76
    f084:	adds	r1, #101	; 0x65
    f086:	add	r3, r1
    f088:	ldr	r0, [r3, #16]
    f08a:	ldr	r1, [r3, #20]
    f08c:	adds	r0, r0, r4
    f08e:	str	r0, [r3, #16]
    f090:	adc.w	r1, r1, r4, asr #31
    f094:	str	r1, [r3, #20]
    f096:	ldr	r0, [r5, #0]
    f098:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
    f09c:	mov	r0, r5
    f09e:	bl	1754c <btrfs_release_path@@Base>
    f0a2:	b.n	ee7c <btrfs_add_link@@Base+0x58>
    f0a4:	mov.w	fp, #0
    f0a8:	b.n	ef0e <btrfs_add_link@@Base+0xea>
    f0aa:	bne.n	efd6 <btrfs_add_link@@Base+0x1b2>
    f0ac:	movs	r1, #1
    f0ae:	add	r2, sp, #64	; 0x40
    f0b0:	strb.w	r1, [sp, #72]	; 0x48
    f0b4:	mov	r3, r5
    f0b6:	strd	r1, r1, [sp]
    f0ba:	mov	r0, r8
    f0bc:	mov	r1, r7
    f0be:	strb.w	fp, [sp, #73]	; 0x49
    f0c2:	strb.w	fp, [sp, #74]	; 0x4a
    f0c6:	strb.w	fp, [sp, #75]	; 0x4b
    f0ca:	strb.w	fp, [sp, #76]	; 0x4c
    f0ce:	strb.w	fp, [sp, #77]	; 0x4d
    f0d2:	strb.w	fp, [sp, #78]	; 0x4e
    f0d6:	strb.w	fp, [sp, #79]	; 0x4f
    f0da:	strb.w	fp, [sp, #80]	; 0x50
    f0de:	strd	r6, r4, [sp, #64]	; 0x40
    f0e2:	bl	19930 <btrfs_search_slot@@Base>
    f0e6:	subs.w	fp, r0, #0
    f0ea:	beq.n	f0f6 <btrfs_add_link@@Base+0x2d2>
    f0ec:	ble.w	ee7c <btrfs_add_link@@Base+0x58>
    f0f0:	mvn.w	fp, #1
    f0f4:	b.n	ee7c <btrfs_add_link@@Base+0x58>
    f0f6:	ldr	r3, [r5, #0]
    f0f8:	movs	r1, #25
    f0fa:	ldr	r2, [r5, #32]
    f0fc:	adds	r3, #96	; 0x60
    f0fe:	mla	r2, r1, r2, r3
    f102:	ldr.w	r2, [r2, #118]	; 0x76
    f106:	adds	r2, #101	; 0x65
    f108:	add	r3, r2
    f10a:	ldr	r2, [r3, #40]	; 0x28
    f10c:	adds	r2, #1
    f10e:	str	r2, [r3, #40]	; 0x28
    f110:	ldr	r0, [r5, #0]
    f112:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
    f116:	mov	r0, r5
    f118:	bl	1754c <btrfs_release_path@@Base>
    f11c:	b.n	efd6 <btrfs_add_link@@Base+0x1b2>
    f11e:	mvn.w	fp, #11
    f122:	b.n	ee96 <btrfs_add_link@@Base+0x72>
    f124:	movs	r3, #0
    f126:	movs	r4, #0
    f128:	strd	r3, r4, [sp, #24]
    f12c:	b.n	ee7c <btrfs_add_link@@Base+0x58>
    f12e:	mov	r0, fp
    f130:	add	sp, #92	; 0x5c
    f132:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f136:	nop
    f138:	ldr	r7, [pc, #288]	; (f25c <btrfs_unlink@@Base+0xb0>)
    f13a:	movs	r5, r0
    f13c:	lsls	r0, r4, #8
    f13e:	movs	r0, r0
    f140:	ldr	r6, [pc, #936]	; (f4ec <btrfs_unlink@@Base+0x340>)
    f142:	movs	r5, r0

0000f144 <btrfs_add_orphan_item@@Base>:
    f144:	push	{r4, r5, lr}
    f146:	sub	sp, #44	; 0x2c
    f148:	ldr	r4, [pc, #84]	; (f1a0 <btrfs_add_orphan_item@@Base+0x5c>)
    f14a:	mov.w	r5, #4294967295	; 0xffffffff
    f14e:	ldr	r3, [pc, #84]	; (f1a4 <btrfs_add_orphan_item@@Base+0x60>)
    f150:	add	r4, pc
    f152:	ldr	r3, [r4, r3]
    f154:	mvn.w	r4, #4
    f158:	ldr	r3, [r3, #0]
    f15a:	str	r3, [sp, #36]	; 0x24
    f15c:	mov.w	r3, #0
    f160:	movs	r3, #48	; 0x30
    f162:	strb.w	r3, [sp, #24]
    f166:	ldr	r3, [sp, #56]	; 0x38
    f168:	strd	r4, r5, [sp, #16]
    f16c:	str.w	r3, [sp, #25]
    f170:	ldr	r3, [sp, #60]	; 0x3c
    f172:	str.w	r3, [sp, #29]
    f176:	movs	r3, #0
    f178:	str	r3, [sp, #12]
    f17a:	movs	r3, #1
    f17c:	str	r3, [sp, #4]
    f17e:	add	r3, sp, #12
    f180:	str	r3, [sp, #0]
    f182:	add	r3, sp, #16
    f184:	bl	1a700 <btrfs_insert_empty_items@@Base>
    f188:	ldr	r2, [pc, #28]	; (f1a8 <btrfs_add_orphan_item@@Base+0x64>)
    f18a:	ldr	r3, [pc, #24]	; (f1a4 <btrfs_add_orphan_item@@Base+0x60>)
    f18c:	add	r2, pc
    f18e:	ldr	r3, [r2, r3]
    f190:	ldr	r2, [r3, #0]
    f192:	ldr	r3, [sp, #36]	; 0x24
    f194:	eors	r2, r3
    f196:	beq.n	f19c <btrfs_add_orphan_item@@Base+0x58>
    f198:	blx	8510 <__stack_chk_fail@plt>
    f19c:	add	sp, #44	; 0x2c
    f19e:	pop	{r4, r5, pc}
    f1a0:	ldr	r4, [pc, #208]	; (f274 <btrfs_unlink@@Base+0xc8>)
    f1a2:	movs	r5, r0
    f1a4:	lsls	r0, r4, #8
    f1a6:	movs	r0, r0
    f1a8:	ldr	r3, [pc, #992]	; (f58c <btrfs_new_inode@@Base+0x44>)
    f1aa:	movs	r5, r0

0000f1ac <btrfs_unlink@@Base>:
    f1ac:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f1b0:	sub	sp, #76	; 0x4c
    f1b2:	mov	r6, r0
    f1b4:	mov	sl, r1
    f1b6:	strd	r2, r3, [sp, #40]	; 0x28
    f1ba:	ldr	r2, [pc, #896]	; (f53c <btrfs_unlink@@Base+0x390>)
    f1bc:	ldr	r3, [pc, #896]	; (f540 <btrfs_unlink@@Base+0x394>)
    f1be:	add	r2, pc
    f1c0:	ldrd	r7, r5, [sp, #128]	; 0x80
    f1c4:	ldr	r3, [r2, r3]
    f1c6:	ldr	r3, [r3, #0]
    f1c8:	str	r3, [sp, #68]	; 0x44
    f1ca:	mov.w	r3, #0
    f1ce:	bl	17544 <btrfs_alloc_path@@Base>
    f1d2:	mov	r4, r0
    f1d4:	cmp	r0, #0
    f1d6:	beq.w	f522 <btrfs_unlink@@Base+0x376>
    f1da:	ldrd	r2, r3, [sp, #112]	; 0x70
    f1de:	mov.w	r9, #0
    f1e2:	mov	r1, sl
    f1e4:	str.w	r9, [sp, #24]
    f1e8:	str	r5, [sp, #0]
    f1ea:	strd	r2, r3, [sp, #16]
    f1ee:	mov	r2, r0
    f1f0:	ldr	r3, [sp, #40]	; 0x28
    f1f2:	mov	r0, r6
    f1f4:	str	r3, [sp, #8]
    f1f6:	ldr	r3, [sp, #44]	; 0x2c
    f1f8:	str	r3, [sp, #12]
    f1fa:	mov	r3, r7
    f1fc:	bl	2cfe0 <btrfs_lookup_inode_ref@@Base>
    f200:	cmn.w	r0, #4096	; 0x1000
    f204:	mov	fp, r0
    f206:	bhi.n	f2e4 <btrfs_unlink@@Base+0x138>
    f208:	mov	r0, r4
    f20a:	bl	1754c <btrfs_release_path@@Base>
    f20e:	ldrd	r2, r3, [sp, #112]	; 0x70
    f212:	mov	r1, sl
    f214:	mov	r0, r9
    f216:	strd	r5, r9, [sp, #12]
    f21a:	strd	r2, r3, [sp]
    f21e:	mov	r2, r4
    f220:	str	r7, [sp, #8]
    f222:	bl	94e0 <btrfs_lookup_dir_item@@Base>
    f226:	cmn.w	r0, #4096	; 0x1000
    f22a:	mov	r3, r0
    f22c:	str	r0, [sp, #36]	; 0x24
    f22e:	bls.n	f234 <btrfs_unlink@@Base+0x88>
    f230:	mov	fp, r3
    f232:	b.n	f2e4 <btrfs_unlink@@Base+0x138>
    f234:	mov	r0, r4
    f236:	bl	1754c <btrfs_release_path@@Base>
    f23a:	ldrd	r2, r3, [sp, #120]	; 0x78
    f23e:	mov	r1, sl
    f240:	mov	r0, r9
    f242:	str.w	r9, [sp, #24]
    f246:	strd	r2, r3, [sp, #16]
    f24a:	ldrd	r2, r3, [sp, #112]	; 0x70
    f24e:	strd	r7, r5, [sp, #8]
    f252:	strd	r2, r3, [sp]
    f256:	mov	r2, r4
    f258:	bl	95c8 <btrfs_lookup_dir_index@@Base>
    f25c:	cmn.w	r0, #4096	; 0x1000
    f260:	mov	r8, r0
    f262:	bls.n	f26c <btrfs_unlink@@Base+0xc0>
    f264:	cmn.w	r0, #2
    f268:	bne.n	f2dc <btrfs_unlink@@Base+0x130>
    f26a:	mov	r8, r9
    f26c:	ldr	r3, [sp, #36]	; 0x24
    f26e:	mov	r0, r4
    f270:	orr.w	r9, fp, r3
    f274:	orr.w	r9, r8, r9
    f278:	bl	1754c <btrfs_release_path@@Base>
    f27c:	cmp.w	r9, #0
    f280:	beq.n	f2d6 <btrfs_unlink@@Base+0x12a>
    f282:	cmp.w	fp, #0
    f286:	beq.w	f528 <btrfs_unlink@@Base+0x37c>
    f28a:	ldr	r3, [sp, #40]	; 0x28
    f28c:	movs	r2, #0
    f28e:	movs	r1, #1
    f290:	strb.w	r2, [sp, #57]	; 0x39
    f294:	strb.w	r1, [sp, #56]	; 0x38
    f298:	mov	r0, r6
    f29a:	str	r3, [sp, #48]	; 0x30
    f29c:	ldr	r3, [sp, #44]	; 0x2c
    f29e:	strb.w	r2, [sp, #58]	; 0x3a
    f2a2:	strb.w	r2, [sp, #59]	; 0x3b
    f2a6:	str	r3, [sp, #52]	; 0x34
    f2a8:	mov.w	r3, #4294967295	; 0xffffffff
    f2ac:	strb.w	r2, [sp, #60]	; 0x3c
    f2b0:	strb.w	r2, [sp, #61]	; 0x3d
    f2b4:	strb.w	r2, [sp, #62]	; 0x3e
    f2b8:	strb.w	r2, [sp, #63]	; 0x3f
    f2bc:	strb.w	r2, [sp, #64]	; 0x40
    f2c0:	add	r2, sp, #48	; 0x30
    f2c2:	str	r1, [sp, #4]
    f2c4:	mov	r1, sl
    f2c6:	str	r3, [sp, #0]
    f2c8:	mov	r3, r4
    f2ca:	bl	19930 <btrfs_search_slot@@Base>
    f2ce:	subs.w	fp, r0, #0
    f2d2:	beq.n	f300 <btrfs_unlink@@Base+0x154>
    f2d4:	ble.n	f2e4 <btrfs_unlink@@Base+0x138>
    f2d6:	mvn.w	fp, #1
    f2da:	b.n	f2e4 <btrfs_unlink@@Base+0x138>
    f2dc:	cmn.w	r0, #4096	; 0x1000
    f2e0:	bls.n	f26c <btrfs_unlink@@Base+0xc0>
    f2e2:	mov	fp, r0
    f2e4:	mov	r0, r4
    f2e6:	bl	17572 <btrfs_free_path@@Base>
    f2ea:	ldr	r2, [pc, #600]	; (f544 <btrfs_unlink@@Base+0x398>)
    f2ec:	ldr	r3, [pc, #592]	; (f540 <btrfs_unlink@@Base+0x394>)
    f2ee:	add	r2, pc
    f2f0:	ldr	r3, [r2, r3]
    f2f2:	ldr	r2, [r3, #0]
    f2f4:	ldr	r3, [sp, #68]	; 0x44
    f2f6:	eors	r2, r3
    f2f8:	beq.w	f532 <btrfs_unlink@@Base+0x386>
    f2fc:	blx	8510 <__stack_chk_fail@plt>
    f300:	ldr	r3, [r4, #0]
    f302:	movs	r1, #25
    f304:	ldr	r2, [r4, #32]
    f306:	adds	r3, #96	; 0x60
    f308:	mla	r2, r1, r2, r3
    f30c:	ldr.w	r2, [r2, #118]	; 0x76
    f310:	adds	r2, #101	; 0x65
    f312:	add	r3, r2
    f314:	ldr.w	r9, [r3, #40]	; 0x28
    f318:	cmp.w	r9, #0
    f31c:	beq.n	f322 <btrfs_unlink@@Base+0x176>
    f31e:	add.w	r9, r9, #4294967295	; 0xffffffff
    f322:	str.w	r9, [r3, #40]	; 0x28
    f326:	ldr	r0, [r4, #0]
    f328:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
    f32c:	mov	r0, r4
    f32e:	bl	1754c <btrfs_release_path@@Base>
    f332:	cmp.w	r9, #0
    f336:	bne.n	f360 <btrfs_unlink@@Base+0x1b4>
    f338:	ldr	r3, [sp, #136]	; 0x88
    f33a:	cbz	r3, f360 <btrfs_unlink@@Base+0x1b4>
    f33c:	ldr	r3, [sp, #40]	; 0x28
    f33e:	mov	r2, r4
    f340:	mov	r1, sl
    f342:	mov	r0, r6
    f344:	str	r3, [sp, #0]
    f346:	ldr	r3, [sp, #44]	; 0x2c
    f348:	str	r3, [sp, #4]
    f34a:	bl	f144 <btrfs_add_orphan_item@@Base>
    f34e:	subs.w	fp, r0, #0
    f352:	blt.n	f2e4 <btrfs_unlink@@Base+0x138>
    f354:	ldr	r0, [r4, #0]
    f356:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
    f35a:	mov	r0, r4
    f35c:	bl	1754c <btrfs_release_path@@Base>
    f360:	add	r3, sp, #120	; 0x78
    f362:	str	r3, [sp, #16]
    f364:	ldrd	r2, r3, [sp, #112]	; 0x70
    f368:	mov	r1, sl
    f36a:	mov	r0, r6
    f36c:	strd	r2, r3, [sp, #8]
    f370:	mov	r2, r7
    f372:	ldr	r3, [sp, #40]	; 0x28
    f374:	str	r3, [sp, #0]
    f376:	ldr	r3, [sp, #44]	; 0x2c
    f378:	str	r3, [sp, #4]
    f37a:	mov	r3, r5
    f37c:	bl	2d548 <btrfs_del_inode_ref@@Base>
    f380:	subs.w	fp, r0, #0
    f384:	blt.n	f2e4 <btrfs_unlink@@Base+0x138>
    f386:	cmp.w	r8, #0
    f38a:	beq.n	f454 <btrfs_unlink@@Base+0x2a8>
    f38c:	mov.w	r3, #4294967295	; 0xffffffff
    f390:	str	r3, [sp, #24]
    f392:	ldrd	r2, r3, [sp, #120]	; 0x78
    f396:	mov	r1, sl
    f398:	mov	r0, r6
    f39a:	strd	r7, r5, [sp, #8]
    f39e:	strd	r2, r3, [sp, #16]
    f3a2:	ldrd	r2, r3, [sp, #112]	; 0x70
    f3a6:	strd	r2, r3, [sp]
    f3aa:	mov	r2, r4
    f3ac:	bl	95c8 <btrfs_lookup_dir_index@@Base>
    f3b0:	cmn.w	r0, #4096	; 0x1000
    f3b4:	mov	r3, r0
    f3b6:	bhi.w	f230 <btrfs_unlink@@Base+0x84>
    f3ba:	cmp	r0, #0
    f3bc:	beq.n	f2d6 <btrfs_unlink@@Base+0x12a>
    f3be:	mov	r2, r4
    f3c0:	mov	r1, sl
    f3c2:	mov	r0, r6
    f3c4:	bl	8f00 <btrfs_delete_one_dir_name@@Base>
    f3c8:	mov	fp, r0
    f3ca:	cmp	r0, #0
    f3cc:	bne.n	f2e4 <btrfs_unlink@@Base+0x138>
    f3ce:	mov	r0, r4
    f3d0:	bl	1754c <btrfs_release_path@@Base>
    f3d4:	ldrd	r2, r3, [sp, #112]	; 0x70
    f3d8:	mov	r1, sl
    f3da:	mov	r0, r6
    f3dc:	strb.w	fp, [sp, #57]	; 0x39
    f3e0:	strd	r2, r3, [sp, #48]	; 0x30
    f3e4:	movs	r2, #1
    f3e6:	mov	r3, r4
    f3e8:	strb.w	r2, [sp, #56]	; 0x38
    f3ec:	strd	r2, r2, [sp]
    f3f0:	add	r2, sp, #48	; 0x30
    f3f2:	strb.w	fp, [sp, #58]	; 0x3a
    f3f6:	strb.w	fp, [sp, #59]	; 0x3b
    f3fa:	strb.w	fp, [sp, #60]	; 0x3c
    f3fe:	strb.w	fp, [sp, #61]	; 0x3d
    f402:	strb.w	fp, [sp, #62]	; 0x3e
    f406:	strb.w	fp, [sp, #63]	; 0x3f
    f40a:	strb.w	fp, [sp, #64]	; 0x40
    f40e:	bl	19930 <btrfs_search_slot@@Base>
    f412:	mov	fp, r0
    f414:	cmp	r0, #0
    f416:	bne.w	f2e4 <btrfs_unlink@@Base+0x138>
    f41a:	ldr	r1, [r4, #0]
    f41c:	movs	r2, #25
    f41e:	ldr	r3, [r4, #32]
    f420:	mov.w	r9, r5, asr #31
    f424:	adds	r1, #96	; 0x60
    f426:	mla	r3, r2, r3, r1
    f42a:	ldr.w	r3, [r3, #118]	; 0x76
    f42e:	adds	r3, #101	; 0x65
    f430:	add	r1, r3
    f432:	ldr	r3, [r1, #20]
    f434:	ldr	r2, [r1, #16]
    f436:	cmp	r3, r9
    f438:	it	eq
    f43a:	cmpeq	r2, r5
    f43c:	bcc.n	f444 <btrfs_unlink@@Base+0x298>
    f43e:	subs	r2, r2, r5
    f440:	sbc.w	r3, r3, r9
    f444:	str	r2, [r1, #16]
    f446:	str	r3, [r1, #20]
    f448:	ldr	r0, [r4, #0]
    f44a:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
    f44e:	mov	r0, r4
    f450:	bl	1754c <btrfs_release_path@@Base>
    f454:	ldr	r3, [sp, #36]	; 0x24
    f456:	cmp	r3, #0
    f458:	beq.w	f2e4 <btrfs_unlink@@Base+0x138>
    f45c:	mov.w	r3, #4294967295	; 0xffffffff
    f460:	strd	r5, r3, [sp, #12]
    f464:	ldrd	r2, r3, [sp, #112]	; 0x70
    f468:	mov	r1, sl
    f46a:	mov	r0, r6
    f46c:	str	r7, [sp, #8]
    f46e:	strd	r2, r3, [sp]
    f472:	mov	r2, r4
    f474:	bl	94e0 <btrfs_lookup_dir_item@@Base>
    f478:	cmn.w	r0, #4096	; 0x1000
    f47c:	mov	r3, r0
    f47e:	bhi.w	f230 <btrfs_unlink@@Base+0x84>
    f482:	cmp	r0, #0
    f484:	beq.w	f2d6 <btrfs_unlink@@Base+0x12a>
    f488:	mov	r2, r4
    f48a:	mov	r1, sl
    f48c:	mov	r0, r6
    f48e:	bl	8f00 <btrfs_delete_one_dir_name@@Base>
    f492:	subs.w	fp, r0, #0
    f496:	blt.w	f2e4 <btrfs_unlink@@Base+0x138>
    f49a:	mov	r0, r4
    f49c:	bl	1754c <btrfs_release_path@@Base>
    f4a0:	ldrd	r2, r3, [sp, #112]	; 0x70
    f4a4:	movs	r1, #1
    f4a6:	mov	r0, r6
    f4a8:	strb.w	r1, [sp, #56]	; 0x38
    f4ac:	strd	r2, r3, [sp, #48]	; 0x30
    f4b0:	movs	r2, #0
    f4b2:	strd	r1, r1, [sp]
    f4b6:	mov	r3, r4
    f4b8:	strb.w	r2, [sp, #57]	; 0x39
    f4bc:	mov	r1, sl
    f4be:	strb.w	r2, [sp, #58]	; 0x3a
    f4c2:	strb.w	r2, [sp, #59]	; 0x3b
    f4c6:	strb.w	r2, [sp, #60]	; 0x3c
    f4ca:	strb.w	r2, [sp, #61]	; 0x3d
    f4ce:	strb.w	r2, [sp, #62]	; 0x3e
    f4d2:	strb.w	r2, [sp, #63]	; 0x3f
    f4d6:	strb.w	r2, [sp, #64]	; 0x40
    f4da:	add	r2, sp, #48	; 0x30
    f4dc:	bl	19930 <btrfs_search_slot@@Base>
    f4e0:	mov	fp, r0
    f4e2:	cmp	r0, #0
    f4e4:	bne.w	f2e4 <btrfs_unlink@@Base+0x138>
    f4e8:	ldr	r1, [r4, #0]
    f4ea:	movs	r2, #25
    f4ec:	ldr	r3, [r4, #32]
    f4ee:	asrs	r7, r5, #31
    f4f0:	adds	r1, #96	; 0x60
    f4f2:	mla	r3, r2, r3, r1
    f4f6:	ldr.w	r3, [r3, #118]	; 0x76
    f4fa:	adds	r3, #101	; 0x65
    f4fc:	add	r1, r3
    f4fe:	ldr	r3, [r1, #20]
    f500:	ldr	r2, [r1, #16]
    f502:	cmp	r3, r7
    f504:	it	eq
    f506:	cmpeq	r2, r5
    f508:	bcc.n	f510 <btrfs_unlink@@Base+0x364>
    f50a:	subs	r2, r2, r5
    f50c:	sbc.w	r3, r3, r7
    f510:	str	r2, [r1, #16]
    f512:	str	r3, [r1, #20]
    f514:	ldr	r0, [r4, #0]
    f516:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
    f51a:	mov	r0, r4
    f51c:	bl	1754c <btrfs_release_path@@Base>
    f520:	b.n	f2e4 <btrfs_unlink@@Base+0x138>
    f522:	mvn.w	fp, #11
    f526:	b.n	f2ea <btrfs_unlink@@Base+0x13e>
    f528:	cmp.w	r8, #0
    f52c:	bne.w	f38c <btrfs_unlink@@Base+0x1e0>
    f530:	b.n	f45c <btrfs_unlink@@Base+0x2b0>
    f532:	mov	r0, fp
    f534:	add	sp, #76	; 0x4c
    f536:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f53a:	nop
    f53c:	ldr	r3, [pc, #792]	; (f858 <btrfs_mksubvol@@Base+0x88>)
    f53e:	movs	r5, r0
    f540:	lsls	r0, r4, #8
    f542:	movs	r0, r0
    f544:	ldr	r2, [pc, #600]	; (f7a0 <btrfs_mkdir@@Base+0x100>)
    f546:	movs	r5, r0

0000f548 <btrfs_new_inode@@Base>:
    f548:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    f54c:	mov	r9, r2
    f54e:	ldr	r2, [pc, #124]	; (f5cc <btrfs_new_inode@@Base+0x84>)
    f550:	mov	r8, r3
    f552:	ldr	r3, [pc, #124]	; (f5d0 <btrfs_new_inode@@Base+0x88>)
    f554:	sub	sp, #180	; 0xb4
    f556:	add	r2, pc
    f558:	add	r6, sp, #12
    f55a:	mov	r5, r0
    f55c:	mov	r7, r1
    f55e:	ldr	r3, [r2, r3]
    f560:	movs	r1, #0
    f562:	mov	r0, r6
    f564:	movs	r2, #160	; 0xa0
    f566:	ldr	r3, [r3, #0]
    f568:	str	r3, [sp, #172]	; 0xac
    f56a:	mov.w	r3, #0
    f56e:	blx	87c4 <memset@plt+0x4>
    f572:	movs	r0, #0
    f574:	movs	r4, #0
    f576:	blx	8498 <time@plt>
    f57a:	ldr	r3, [r5, #8]
    f57c:	mov	r2, r9
    f57e:	mov	r1, r7
    f580:	str	r6, [sp, #0]
    f582:	str	r3, [sp, #12]
    f584:	ldr	r3, [r5, #12]
    f586:	strd	r4, r4, [sp, #56]	; 0x38
    f58a:	strd	r4, r4, [sp, #28]
    f58e:	str	r3, [sp, #16]
    f590:	ldr	r3, [sp, #208]	; 0xd0
    f592:	str	r4, [sp, #52]	; 0x34
    f594:	str	r4, [sp, #132]	; 0x84
    f596:	str	r3, [sp, #64]	; 0x40
    f598:	str	r4, [sp, #156]	; 0x9c
    f59a:	str	r4, [sp, #144]	; 0x90
    f59c:	asrs	r3, r0, #31
    f59e:	strd	r0, r3, [sp, #124]	; 0x7c
    f5a2:	strd	r0, r3, [sp, #148]	; 0x94
    f5a6:	strd	r0, r3, [sp, #136]	; 0x88
    f5aa:	mov	r3, r8
    f5ac:	mov	r0, r5
    f5ae:	bl	2cf64 <btrfs_insert_inode@@Base>
    f5b2:	ldr	r2, [pc, #32]	; (f5d4 <btrfs_new_inode@@Base+0x8c>)
    f5b4:	ldr	r3, [pc, #24]	; (f5d0 <btrfs_new_inode@@Base+0x88>)
    f5b6:	add	r2, pc
    f5b8:	ldr	r3, [r2, r3]
    f5ba:	ldr	r2, [r3, #0]
    f5bc:	ldr	r3, [sp, #172]	; 0xac
    f5be:	eors	r2, r3
    f5c0:	beq.n	f5c6 <btrfs_new_inode@@Base+0x7e>
    f5c2:	blx	8510 <__stack_chk_fail@plt>
    f5c6:	add	sp, #180	; 0xb4
    f5c8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    f5cc:	ldr	r0, [pc, #184]	; (f688 <btrfs_change_inode_flags@@Base+0xb0>)
    f5ce:	movs	r5, r0
    f5d0:	lsls	r0, r4, #8
    f5d2:	movs	r0, r0
    f5d4:			; <UNDEFINED> instruction: 0x47ce
    f5d6:	movs	r5, r0

0000f5d8 <btrfs_change_inode_flags@@Base>:
    f5d8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    f5dc:	mov	r9, r2
    f5de:	ldr	r2, [pc, #180]	; (f694 <btrfs_change_inode_flags@@Base+0xbc>)
    f5e0:	mov	r4, r3
    f5e2:	ldr	r3, [pc, #180]	; (f698 <btrfs_change_inode_flags@@Base+0xc0>)
    f5e4:	sub	sp, #44	; 0x2c
    f5e6:	add	r2, pc
    f5e8:	mov	r8, r0
    f5ea:	str	r1, [sp, #12]
    f5ec:	ldr	r3, [r2, r3]
    f5ee:	ldrd	r7, r6, [sp, #72]	; 0x48
    f5f2:	ldr	r3, [r3, #0]
    f5f4:	str	r3, [sp, #36]	; 0x24
    f5f6:	mov.w	r3, #0
    f5fa:	bl	17544 <btrfs_alloc_path@@Base>
    f5fe:	mov	r5, r0
    f600:	cmp	r0, #0
    f602:	beq.n	f686 <btrfs_change_inode_flags@@Base+0xae>
    f604:	movs	r2, #0
    f606:	movs	r3, #1
    f608:	strb.w	r2, [sp, #25]
    f60c:	strd	r2, r3, [sp]
    f610:	strb.w	r3, [sp, #24]
    f614:	mov	r3, r0
    f616:	strb.w	r2, [sp, #26]
    f61a:	mov	r0, r8
    f61c:	strb.w	r2, [sp, #27]
    f620:	strb.w	r2, [sp, #28]
    f624:	strb.w	r2, [sp, #29]
    f628:	strb.w	r2, [sp, #30]
    f62c:	strb.w	r2, [sp, #31]
    f630:	strb.w	r2, [sp, #32]
    f634:	add	r2, sp, #16
    f636:	ldr	r1, [sp, #12]
    f638:	strd	r9, r4, [sp, #16]
    f63c:	bl	19930 <btrfs_search_slot@@Base>
    f640:	subs	r4, r0, #0
    f642:	bgt.n	f680 <btrfs_change_inode_flags@@Base+0xa8>
    f644:	bne.n	f666 <btrfs_change_inode_flags@@Base+0x8e>
    f646:	ldr	r3, [r5, #0]
    f648:	movs	r1, #25
    f64a:	ldr	r2, [r5, #32]
    f64c:	adds	r3, #96	; 0x60
    f64e:	mla	r2, r1, r2, r3
    f652:	ldr.w	r2, [r2, #118]	; 0x76
    f656:	add	r3, r2
    f658:	str.w	r7, [r3, #165]	; 0xa5
    f65c:	str.w	r6, [r3, #169]	; 0xa9
    f660:	ldr	r0, [r5, #0]
    f662:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
    f666:	mov	r0, r5
    f668:	bl	17572 <btrfs_free_path@@Base>
    f66c:	ldr	r2, [pc, #44]	; (f69c <btrfs_change_inode_flags@@Base+0xc4>)
    f66e:	ldr	r3, [pc, #40]	; (f698 <btrfs_change_inode_flags@@Base+0xc0>)
    f670:	add	r2, pc
    f672:	ldr	r3, [r2, r3]
    f674:	ldr	r2, [r3, #0]
    f676:	ldr	r3, [sp, #36]	; 0x24
    f678:	eors	r2, r3
    f67a:	beq.n	f68c <btrfs_change_inode_flags@@Base+0xb4>
    f67c:	blx	8510 <__stack_chk_fail@plt>
    f680:	mvn.w	r4, #1
    f684:	b.n	f666 <btrfs_change_inode_flags@@Base+0x8e>
    f686:	mvn.w	r4, #11
    f68a:	b.n	f66c <btrfs_change_inode_flags@@Base+0x94>
    f68c:	mov	r0, r4
    f68e:	add	sp, #44	; 0x2c
    f690:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    f694:			; <UNDEFINED> instruction: 0x479e
    f696:	movs	r5, r0
    f698:	lsls	r0, r4, #8
    f69a:	movs	r0, r0
    f69c:	bxns	r2
    f69e:	movs	r5, r0

0000f6a0 <btrfs_mkdir@@Base>:
    f6a0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f6a4:	mov	sl, r2
    f6a6:	ldr	r2, [pc, #284]	; (f7c4 <btrfs_mkdir@@Base+0x124>)
    f6a8:	mov	fp, r3
    f6aa:	ldr	r3, [pc, #284]	; (f7c8 <btrfs_mkdir@@Base+0x128>)
    f6ac:	sub	sp, #76	; 0x4c
    f6ae:	add	r2, pc
    f6b0:	mov	r7, r0
    f6b2:	str	r1, [sp, #36]	; 0x24
    f6b4:	ldr	r3, [r2, r3]
    f6b6:	movs	r2, #0
    f6b8:	ldrd	r8, r9, [sp, #112]	; 0x70
    f6bc:	ldr	r3, [r3, #0]
    f6be:	str	r3, [sp, #68]	; 0x44
    f6c0:	mov.w	r3, #0
    f6c4:	ldr	r6, [sp, #120]	; 0x78
    f6c6:	movs	r3, #0
    f6c8:	strd	r2, r3, [sp, #40]	; 0x28
    f6cc:	bl	17544 <btrfs_alloc_path@@Base>
    f6d0:	mov	r5, r0
    f6d2:	cmp	r0, #0
    f6d4:	beq.n	f7b6 <btrfs_mkdir@@Base+0x116>
    f6d6:	ldr	r1, [sp, #36]	; 0x24
    f6d8:	cbz	r6, f6e8 <btrfs_mkdir@@Base+0x48>
    f6da:	ldrd	r2, r3, [r6]
    f6de:	orrs.w	r0, r2, r3
    f6e2:	it	ne
    f6e4:	strdne	r2, r3, [sp, #40]	; 0x28
    f6e8:	movs	r0, #0
    f6ea:	mov	r2, r5
    f6ec:	strd	fp, r0, [sp, #12]
    f6f0:	str.w	sl, [sp, #8]
    f6f4:	strd	r8, r9, [sp]
    f6f8:	str	r1, [sp, #36]	; 0x24
    f6fa:	bl	94e0 <btrfs_lookup_dir_item@@Base>
    f6fe:	ldr	r1, [sp, #36]	; 0x24
    f700:	cmn.w	r0, #4096	; 0x1000
    f704:	mov	r4, r0
    f706:	bhi.n	f730 <btrfs_mkdir@@Base+0x90>
    f708:	cbz	r0, f756 <btrfs_mkdir@@Base+0xb6>
    f70a:	mov	r2, r0
    f70c:	movs	r3, #17
    f70e:	ldr	r0, [r5, #0]
    f710:	add	r1, sp, #48	; 0x30
    f712:	bl	16a0e <read_extent_buffer@@Base>
    f716:	ldrd	r2, r3, [sp, #48]	; 0x30
    f71a:	strd	r2, r3, [sp, #40]	; 0x28
    f71e:	ldr	r2, [r5, #0]
    f720:	add	r4, r2
    f722:	ldrb.w	r3, [r4, #125]	; 0x7d
    f726:	cmp	r3, #2
    f728:	ite	eq
    f72a:	moveq	r4, #0
    f72c:	mvnne.w	r4, #16
    f730:	mov	r0, r5
    f732:	bl	17572 <btrfs_free_path@@Base>
    f736:	cbnz	r4, f742 <btrfs_mkdir@@Base+0xa2>
    f738:	cbz	r6, f742 <btrfs_mkdir@@Base+0xa2>
    f73a:	ldrd	r2, r3, [sp, #40]	; 0x28
    f73e:	strd	r2, r3, [r6]
    f742:	ldr	r2, [pc, #136]	; (f7cc <btrfs_mkdir@@Base+0x12c>)
    f744:	ldr	r3, [pc, #128]	; (f7c8 <btrfs_mkdir@@Base+0x128>)
    f746:	add	r2, pc
    f748:	ldr	r3, [r2, r3]
    f74a:	ldr	r2, [r3, #0]
    f74c:	ldr	r3, [sp, #68]	; 0x44
    f74e:	eors	r2, r3
    f750:	beq.n	f7bc <btrfs_mkdir@@Base+0x11c>
    f752:	blx	8510 <__stack_chk_fail@plt>
    f756:	ldrd	r2, r3, [sp, #40]	; 0x28
    f75a:	orrs	r3, r2
    f75c:	beq.n	f79e <btrfs_mkdir@@Base+0xfe>
    f75e:	ldr	r3, [sp, #124]	; 0x7c
    f760:	mov	r0, r7
    f762:	str	r1, [sp, #36]	; 0x24
    f764:	orr.w	r3, r3, #16384	; 0x4000
    f768:	str	r3, [sp, #0]
    f76a:	ldrd	r2, r3, [sp, #40]	; 0x28
    f76e:	bl	f548 <btrfs_new_inode@@Base>
    f772:	mov	r4, r0
    f774:	cmp	r0, #0
    f776:	bne.n	f730 <btrfs_mkdir@@Base+0x90>
    f778:	movs	r3, #1
    f77a:	str	r0, [sp, #28]
    f77c:	strd	r0, r3, [sp, #20]
    f780:	movs	r3, #2
    f782:	ldr	r1, [sp, #36]	; 0x24
    f784:	mov	r0, r7
    f786:	strd	fp, r3, [sp, #12]
    f78a:	str.w	sl, [sp, #8]
    f78e:	ldrd	r2, r3, [sp, #40]	; 0x28
    f792:	strd	r8, r9, [sp]
    f796:	bl	ee24 <btrfs_add_link@@Base>
    f79a:	mov	r4, r0
    f79c:	b.n	f730 <btrfs_mkdir@@Base+0x90>
    f79e:	add	r3, sp, #40	; 0x28
    f7a0:	mov	r2, r8
    f7a2:	str	r3, [sp, #0]
    f7a4:	mov	r3, r9
    f7a6:	str	r1, [sp, #36]	; 0x24
    f7a8:	bl	9658 <btrfs_find_free_objectid@@Base>
    f7ac:	ldr	r1, [sp, #36]	; 0x24
    f7ae:	mov	r4, r0
    f7b0:	cmp	r0, #0
    f7b2:	beq.n	f75e <btrfs_mkdir@@Base+0xbe>
    f7b4:	b.n	f730 <btrfs_mkdir@@Base+0x90>
    f7b6:	mvn.w	r4, #11
    f7ba:	b.n	f742 <btrfs_mkdir@@Base+0xa2>
    f7bc:	mov	r0, r4
    f7be:	add	sp, #76	; 0x4c
    f7c0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f7c4:	mov	lr, sl
    f7c6:	movs	r5, r0
    f7c8:	lsls	r0, r4, #8
    f7ca:	movs	r0, r0
    f7cc:	mov	r6, r7
    f7ce:	movs	r5, r0

0000f7d0 <btrfs_mksubvol@@Base>:
    f7d0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f7d4:	mov	r5, r0
    f7d6:	vpush	{d8}
    f7da:	mov	r0, r1
    f7dc:	vmov	s16, r1
    f7e0:	sub	sp, #436	; 0x1b4
    f7e2:	strd	r2, r3, [sp, #56]	; 0x38
    f7e6:	ldrb.w	r3, [sp, #480]	; 0x1e0
    f7ea:	ldr	r2, [pc, #808]	; (fb14 <btrfs_mksubvol@@Base+0x344>)
    f7ec:	str	r3, [sp, #76]	; 0x4c
    f7ee:	add	r2, pc
    f7f0:	ldr	r3, [pc, #804]	; (fb18 <btrfs_mksubvol@@Base+0x348>)
    f7f2:	ldr	r3, [r2, r3]
    f7f4:	ldr	r3, [r3, #0]
    f7f6:	str	r3, [sp, #428]	; 0x1ac
    f7f8:	mov.w	r3, #0
    f7fc:	blx	8748 <strlen@plt>
    f800:	mov	r4, r0
    f802:	str	r0, [sp, #40]	; 0x28
    f804:	cmp	r0, #0
    f806:	beq.w	fb02 <btrfs_mksubvol@@Base+0x332>
    f80a:	cmp	r0, #255	; 0xff
    f80c:	bgt.w	fb02 <btrfs_mksubvol@@Base+0x332>
    f810:	ldr.w	r3, [r5, #464]	; 0x1d0
    f814:	add.w	r8, sp, #104	; 0x68
    f818:	ldr.w	r9, [r5, #176]	; 0xb0
    f81c:	add	r6, sp, #84	; 0x54
    f81e:	ldr.w	sl, [r5, #180]	; 0xb4
    f822:	mov	r0, r8
    f824:	str	r3, [sp, #64]	; 0x40
    f826:	movs	r7, #0
    f828:	ldr	r3, [r3, #28]
    f82a:	vmov	s17, r3
    f82e:	bl	1753c <btrfs_init_path@@Base>
    f832:	mov.w	r2, #4294967295	; 0xffffffff
    f836:	movs	r3, #96	; 0x60
    f838:	strd	r9, sl, [r6]
    f83c:	mov	r1, r5
    f83e:	strb	r3, [r6, #8]
    f840:	mov	r0, r7
    f842:	strb.w	r2, [sp, #93]	; 0x5d
    f846:	mov	r3, r8
    f848:	strb.w	r2, [sp, #94]	; 0x5e
    f84c:	strb.w	r2, [sp, #95]	; 0x5f
    f850:	strb.w	r2, [sp, #96]	; 0x60
    f854:	strb.w	r2, [sp, #97]	; 0x61
    f858:	strb.w	r2, [sp, #98]	; 0x62
    f85c:	strb.w	r2, [sp, #99]	; 0x63
    f860:	strb.w	r2, [sp, #100]	; 0x64
    f864:	mov	r2, r6
    f866:	strd	r7, r7, [sp]
    f86a:	bl	19930 <btrfs_search_slot@@Base>
    f86e:	cmp	r0, #0
    f870:	bgt.n	f89c <btrfs_mksubvol@@Base+0xcc>
    f872:	str	r0, [sp, #0]
    f874:	mov	r2, r9
    f876:	ldr	r0, [pc, #676]	; (fb1c <btrfs_mksubvol@@Base+0x34c>)
    f878:	mov	r3, sl
    f87a:	add	r0, pc
    f87c:	bl	16b70 <__btrfs_error@@Base>
    f880:	add	r0, sp, #104	; 0x68
    f882:	bl	1753c <btrfs_init_path@@Base>
    f886:	ldr	r2, [pc, #664]	; (fb20 <btrfs_mksubvol@@Base+0x350>)
    f888:	ldr	r3, [pc, #652]	; (fb18 <btrfs_mksubvol@@Base+0x348>)
    f88a:	add	r2, pc
    f88c:	ldr	r3, [r2, r3]
    f88e:	ldr	r2, [r3, #0]
    f890:	ldr	r3, [sp, #428]	; 0x1ac
    f892:	eors	r2, r3
    f894:	beq.w	fb06 <btrfs_mksubvol@@Base+0x336>
    f898:	blx	8510 <__stack_chk_fail@plt>
    f89c:	ldr.w	r2, [r8, #32]
    f8a0:	cmp	r2, #0
    f8a2:	bgt.n	f8d4 <btrfs_mksubvol@@Base+0x104>
    f8a4:	movs	r3, #2
    f8a6:	str	r3, [sp, #48]	; 0x30
    f8a8:	movs	r3, #0
    f8aa:	add	r2, sp, #104	; 0x68
    f8ac:	str	r3, [sp, #52]	; 0x34
    f8ae:	str	r2, [sp, #44]	; 0x2c
    f8b0:	mov	r0, r2
    f8b2:	bl	1754c <btrfs_release_path@@Base>
    f8b6:	movs	r1, #1
    f8b8:	mov	r0, r5
    f8ba:	bl	2a674 <btrfs_start_transaction@@Base>
    f8be:	ldr	r2, [sp, #44]	; 0x2c
    f8c0:	cmn.w	r0, #4096	; 0x1000
    f8c4:	mov	r8, r0
    f8c6:	bls.n	f908 <btrfs_mksubvol@@Base+0x138>
    f8c8:	ldr	r0, [pc, #600]	; (fb24 <btrfs_mksubvol@@Base+0x354>)
    f8ca:	add	r0, pc
    f8cc:	bl	16b70 <__btrfs_error@@Base>
    f8d0:	movs	r7, #0
    f8d2:	b.n	f880 <btrfs_mksubvol@@Base+0xb0>
    f8d4:	subs	r2, #1
    f8d6:	ldr.w	r0, [r8]
    f8da:	mov	r1, r6
    f8dc:	str.w	r2, [r8, #32]
    f8e0:	bl	ec90 <task_period_stop@@Base+0x24>
    f8e4:	ldrd	r2, r3, [r6]
    f8e8:	cmp	r3, sl
    f8ea:	it	eq
    f8ec:	cmpeq	r2, r9
    f8ee:	bne.n	f8a4 <btrfs_mksubvol@@Base+0xd4>
    f8f0:	ldrb	r3, [r6, #8]
    f8f2:	cmp	r3, #96	; 0x60
    f8f4:	bne.n	f8a4 <btrfs_mksubvol@@Base+0xd4>
    f8f6:	ldr.w	r3, [r6, #9]
    f8fa:	ldr.w	r2, [r6, #13]
    f8fe:	adds	r3, #1
    f900:	str	r3, [sp, #48]	; 0x30
    f902:	adc.w	r3, r2, #0
    f906:	b.n	f8aa <btrfs_mksubvol@@Base+0xda>
    f908:	add.w	r6, sp, #93	; 0x5d
    f90c:	add.w	fp, sp, #84	; 0x54
    f910:	movs	r7, #0
    f912:	movs	r3, #1
    f914:	strd	r9, sl, [fp]
    f918:	mov	r1, r5
    f91a:	strb.w	r3, [fp, #8]
    f91e:	strb	r7, [r6, #0]
    f920:	strb	r7, [r6, #1]
    f922:	strb	r7, [r6, #2]
    f924:	strb	r7, [r6, #3]
    f926:	strb	r7, [r6, #4]
    f928:	strb	r7, [r6, #5]
    f92a:	strb	r7, [r6, #6]
    f92c:	strb	r7, [r6, #7]
    f92e:	str	r3, [sp, #0]
    f930:	mov	r3, fp
    f932:	str	r2, [sp, #68]	; 0x44
    f934:	bl	2ceb8 <btrfs_lookup_inode@@Base>
    f938:	ldr	r2, [sp, #68]	; 0x44
    f93a:	str	r0, [sp, #44]	; 0x2c
    f93c:	cbz	r0, f94a <btrfs_mksubvol@@Base+0x17a>
    f93e:	str	r0, [sp, #0]
    f940:	mov	r2, r9
    f942:	ldr	r0, [pc, #484]	; (fb28 <btrfs_mksubvol@@Base+0x358>)
    f944:	mov	r3, sl
    f946:	add	r0, pc
    f948:	b.n	f87c <btrfs_mksubvol@@Base+0xac>
    f94a:	ldr	r7, [r2, #0]
    f94c:	add.w	r3, r7, #96	; 0x60
    f950:	str	r3, [sp, #68]	; 0x44
    f952:	ldr	r1, [sp, #68]	; 0x44
    f954:	ldr	r3, [r2, #32]
    f956:	movs	r2, #25
    f958:	mla	r3, r2, r3, r1
    f95c:	vmov	r1, s16
    f960:	mov	r2, r4
    f962:	ldr.w	r3, [r3, #118]	; 0x76
    f966:	str	r3, [sp, #72]	; 0x48
    f968:	ldr	r3, [sp, #56]	; 0x38
    f96a:	str.w	r3, [fp]
    f96e:	ldr	r3, [sp, #60]	; 0x3c
    f970:	str.w	r3, [fp, #4]
    f974:	mov.w	r3, #4294967295	; 0xffffffff
    f978:	strb	r3, [r6, #0]
    f97a:	strb	r3, [r6, #1]
    f97c:	strb	r3, [r6, #2]
    f97e:	strb	r3, [r6, #3]
    f980:	strb	r3, [r6, #4]
    f982:	strb	r3, [r6, #5]
    f984:	strb	r3, [r6, #6]
    f986:	strb	r3, [r6, #7]
    f988:	add	r6, sp, #172	; 0xac
    f98a:	movs	r3, #132	; 0x84
    f98c:	strb.w	r3, [fp, #8]
    f990:	mov	r0, r6
    f992:	mov.w	r3, #256	; 0x100
    f996:	blx	85a0 <__memcpy_chk@plt>
    f99a:	ldr	r3, [sp, #76]	; 0x4c
    f99c:	cbz	r3, fa00 <btrfs_mksubvol@@Base+0x230>
    f99e:	ldr.w	fp, [pc, #396]	; fb2c <btrfs_mksubvol@@Base+0x35c>
    f9a2:	mov	r4, r6
    f9a4:	add	fp, pc
    f9a6:	ldr	r3, [sp, #48]	; 0x30
    f9a8:	mov	r2, r4
    f9aa:	mov	r1, r5
    f9ac:	mov	r0, r8
    f9ae:	strd	r9, sl, [sp]
    f9b2:	str	r3, [sp, #16]
    f9b4:	ldr	r3, [sp, #52]	; 0x34
    f9b6:	str	r3, [sp, #20]
    f9b8:	movs	r3, #2
    f9ba:	str	r3, [sp, #12]
    f9bc:	add	r3, sp, #84	; 0x54
    f9be:	str	r3, [sp, #8]
    f9c0:	ldr	r3, [sp, #40]	; 0x28
    f9c2:	bl	9330 <btrfs_insert_dir_item@@Base>
    f9c6:	cmn.w	r0, #17
    f9ca:	mov	r6, r0
    f9cc:	bne.n	fa20 <btrfs_mksubvol@@Base+0x250>
    f9ce:	ldr	r3, [sp, #44]	; 0x2c
    f9d0:	movs	r2, #1
    f9d2:	mov	r0, r4
    f9d4:	str	r3, [sp, #8]
    f9d6:	vmov	r3, s16
    f9da:	strd	fp, r3, [sp]
    f9de:	mov.w	r3, #256	; 0x100
    f9e2:	mov	r1, r3
    f9e4:	blx	89bc <__snprintf_chk@plt>
    f9e8:	subs	r3, r0, #1
    f9ea:	str	r0, [sp, #40]	; 0x28
    f9ec:	cmp	r3, #254	; 0xfe
    f9ee:	bhi.w	f8d0 <btrfs_mksubvol@@Base+0x100>
    f9f2:	ldr	r3, [sp, #44]	; 0x2c
    f9f4:	adds	r3, #1
    f9f6:	str	r3, [sp, #44]	; 0x2c
    f9f8:	cmp.w	r3, #1024	; 0x400
    f9fc:	bne.n	f9a6 <btrfs_mksubvol@@Base+0x1d6>
    f9fe:	b.n	f8d0 <btrfs_mksubvol@@Base+0x100>
    fa00:	ldr	r3, [sp, #48]	; 0x30
    fa02:	mov	r2, r6
    fa04:	mov	r1, r5
    fa06:	mov	r0, r8
    fa08:	strd	r9, sl, [sp]
    fa0c:	str	r3, [sp, #16]
    fa0e:	ldr	r3, [sp, #52]	; 0x34
    fa10:	str	r3, [sp, #20]
    fa12:	movs	r3, #2
    fa14:	strd	fp, r3, [sp, #8]
    fa18:	mov	r3, r4
    fa1a:	bl	9330 <btrfs_insert_dir_item@@Base>
    fa1e:	mov	r6, r0
    fa20:	cmp	r6, #0
    fa22:	bne.w	f8d0 <btrfs_mksubvol@@Base+0x100>
    fa26:	ldr	r3, [sp, #72]	; 0x48
    fa28:	add	r4, sp, #172	; 0xac
    fa2a:	ldr	r2, [sp, #68]	; 0x44
    fa2c:	adds	r3, #101	; 0x65
    fa2e:	add	r2, r3
    fa30:	mov	r3, r2
    fa32:	ldr	r0, [r2, #16]
    fa34:	ldr	r1, [r2, #20]
    fa36:	ldr	r2, [sp, #40]	; 0x28
    fa38:	lsls	r2, r2, #1
    fa3a:	adds	r0, r0, r2
    fa3c:	str	r0, [r3, #16]
    fa3e:	adc.w	r1, r1, r2, asr #31
    fa42:	mov	r0, r7
    fa44:	str	r1, [r3, #20]
    fa46:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
    fa4a:	add	r0, sp, #104	; 0x68
    fa4c:	bl	1754c <btrfs_release_path@@Base>
    fa50:	ldr	r3, [sp, #40]	; 0x28
    fa52:	ldr.w	r2, [r5, #447]	; 0x1bf
    fa56:	mov	r0, r8
    fa58:	vmov	r1, s17
    fa5c:	str	r3, [sp, #36]	; 0x24
    fa5e:	ldr	r3, [sp, #48]	; 0x30
    fa60:	str	r4, [sp, #32]
    fa62:	strd	r9, sl, [sp, #16]
    fa66:	str	r3, [sp, #24]
    fa68:	ldr	r3, [sp, #52]	; 0x34
    fa6a:	str	r3, [sp, #28]
    fa6c:	ldr.w	r3, [r5, #451]	; 0x1c3
    fa70:	strd	r2, r3, [sp, #8]
    fa74:	movs	r3, #144	; 0x90
    fa76:	str	r3, [sp, #0]
    fa78:	ldrd	r2, r3, [sp, #56]	; 0x38
    fa7c:	bl	27320 <btrfs_add_root_ref@@Base>
    fa80:	ldr.w	r2, [r5, #447]	; 0x1bf
    fa84:	ldr.w	r3, [r5, #451]	; 0x1c3
    fa88:	cbz	r0, fa98 <btrfs_mksubvol@@Base+0x2c8>
    fa8a:	str	r0, [sp, #0]
    fa8c:	ldr	r0, [pc, #160]	; (fb30 <btrfs_mksubvol@@Base+0x360>)
    fa8e:	add	r0, pc
    fa90:	bl	16b70 <__btrfs_error@@Base>
    fa94:	mov	r7, r6
    fa96:	b.n	f880 <btrfs_mksubvol@@Base+0xb0>
    fa98:	ldr	r1, [sp, #40]	; 0x28
    fa9a:	mov	r0, r8
    fa9c:	strd	r9, sl, [sp, #16]
    faa0:	strd	r4, r1, [sp, #32]
    faa4:	ldr	r1, [sp, #48]	; 0x30
    faa6:	str	r1, [sp, #24]
    faa8:	ldr	r1, [sp, #52]	; 0x34
    faaa:	str	r1, [sp, #28]
    faac:	ldr	r1, [sp, #56]	; 0x38
    faae:	str	r1, [sp, #8]
    fab0:	ldr	r1, [sp, #60]	; 0x3c
    fab2:	str	r1, [sp, #12]
    fab4:	movs	r1, #156	; 0x9c
    fab6:	str	r1, [sp, #0]
    fab8:	vmov	r1, s17
    fabc:	bl	27320 <btrfs_add_root_ref@@Base>
    fac0:	cbz	r0, fad2 <btrfs_mksubvol@@Base+0x302>
    fac2:	str	r0, [sp, #0]
    fac4:	ldr	r0, [pc, #108]	; (fb34 <btrfs_mksubvol@@Base+0x364>)
    fac6:	ldr.w	r2, [r5, #447]	; 0x1bf
    faca:	ldr.w	r3, [r5, #451]	; 0x1c3
    face:	add	r0, pc
    fad0:	b.n	fa90 <btrfs_mksubvol@@Base+0x2c0>
    fad2:	mov	r1, r5
    fad4:	mov	r0, r8
    fad6:	bl	2a8f4 <btrfs_commit_transaction@@Base>
    fada:	mov	r1, r0
    fadc:	cbz	r0, fae8 <btrfs_mksubvol@@Base+0x318>
    fade:	ldr	r0, [pc, #88]	; (fb38 <btrfs_mksubvol@@Base+0x368>)
    fae0:	add	r0, pc
    fae2:	bl	16b70 <__btrfs_error@@Base>
    fae6:	b.n	fa94 <btrfs_mksubvol@@Base+0x2c4>
    fae8:	ldr	r0, [sp, #64]	; 0x40
    faea:	add	r1, sp, #84	; 0x54
    faec:	bl	1d0fe <btrfs_read_fs_root@@Base>
    faf0:	cmn.w	r0, #4096	; 0x1000
    faf4:	mov	r7, r0
    faf6:	bls.w	f880 <btrfs_mksubvol@@Base+0xb0>
    fafa:	mov	r1, r0
    fafc:	ldr	r0, [pc, #60]	; (fb3c <btrfs_mksubvol@@Base+0x36c>)
    fafe:	add	r0, pc
    fb00:	b.n	fae2 <btrfs_mksubvol@@Base+0x312>
    fb02:	movs	r7, #0
    fb04:	b.n	f886 <btrfs_mksubvol@@Base+0xb6>
    fb06:	mov	r0, r7
    fb08:	add	sp, #436	; 0x1b4
    fb0a:	vpop	{d8}
    fb0e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fb12:	nop
    fb14:	cmp	lr, r2
    fb16:	movs	r5, r0
    fb18:	lsls	r0, r4, #8
    fb1a:	movs	r0, r0
    fb1c:	add	r3, pc, #764	; (adr r3, fe1c <btrfs_read_file@@Base+0x6c>)
    fb1e:	movs	r2, r0
    fb20:	add	sl, pc
    fb22:	movs	r5, r0
    fb24:	add	r3, pc, #616	; (adr r3, fd90 <btrfs_punch_hole@@Base+0x5c>)
    fb26:	movs	r2, r0
    fb28:	add	r3, pc, #232	; (adr r3, fc14 <btrfs_get_extent@@Base+0x6c>)
    fb2a:	movs	r2, r0
    fb2c:	add	r3, pc, #8	; (adr r3, fb38 <btrfs_mksubvol@@Base+0x368>)
    fb2e:	movs	r2, r0
    fb30:	add	r2, pc, #116	; (adr r2, fba8 <btrfs_get_extent@@Base>)
    fb32:	movs	r2, r0
    fb34:	add	r2, pc, #20	; (adr r2, fb4c <btrfs_mksubvol@@Base+0x37c>)
    fb36:	movs	r2, r0
    fb38:	add	r2, pc, #92	; (adr r2, fb98 <btrfs_mksubvol@@Base+0x3c8>)
    fb3a:	movs	r2, r0
    fb3c:	add	r2, pc, #92	; (adr r2, fb9c <btrfs_mksubvol@@Base+0x3cc>)
    fb3e:	movs	r2, r0
    fb40:	push	{r4, lr}
    fb42:	mov	r4, r1
    fb44:	ldr	r1, [pc, #84]	; (fb9c <btrfs_mksubvol@@Base+0x3cc>)
    fb46:	sub	sp, #24
    fb48:	ldr	r3, [pc, #84]	; (fba0 <btrfs_mksubvol@@Base+0x3d0>)
    fb4a:	add	r1, pc
    fb4c:	ldr	r3, [r1, r3]
    fb4e:	mov	r1, sp
    fb50:	ldr	r3, [r3, #0]
    fb52:	str	r3, [sp, #20]
    fb54:	mov.w	r3, #0
    fb58:	movs	r3, #25
    fb5a:	muls	r2, r3
    fb5c:	movs	r3, #17
    fb5e:	adds	r2, #101	; 0x65
    fb60:	bl	16a0e <read_extent_buffer@@Base>
    fb64:	ldr.w	r3, [sp, #13]
    fb68:	ldr.w	r2, [sp, #9]
    fb6c:	str.w	r3, [r4, #13]
    fb70:	ldrb.w	r3, [sp, #8]
    fb74:	str.w	r2, [r4, #9]
    fb78:	ldr	r2, [pc, #40]	; (fba4 <btrfs_mksubvol@@Base+0x3d4>)
    fb7a:	strb	r3, [r4, #8]
    fb7c:	ldr	r3, [sp, #0]
    fb7e:	add	r2, pc
    fb80:	str	r3, [r4, #0]
    fb82:	ldr	r3, [sp, #4]
    fb84:	str	r3, [r4, #4]
    fb86:	ldr	r3, [pc, #24]	; (fba0 <btrfs_mksubvol@@Base+0x3d0>)
    fb88:	ldr	r3, [r2, r3]
    fb8a:	ldr	r2, [r3, #0]
    fb8c:	ldr	r3, [sp, #20]
    fb8e:	eors	r2, r3
    fb90:	beq.n	fb96 <btrfs_mksubvol@@Base+0x3c6>
    fb92:	blx	8510 <__stack_chk_fail@plt>
    fb96:	add	sp, #24
    fb98:	pop	{r4, pc}
    fb9a:	nop
    fb9c:	tst	r2, r7
    fb9e:	movs	r5, r0
    fba0:	lsls	r0, r4, #8
    fba2:	movs	r0, r0
    fba4:	tst	r6, r0
    fba6:	movs	r5, r0

0000fba8 <btrfs_get_extent@@Base>:
    fba8:	ldr.w	ip, [pc, #380]	; fd28 <btrfs_get_extent@@Base+0x180>
    fbac:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fbb0:	mov	r4, r2
    fbb2:	ldr	r2, [pc, #376]	; (fd2c <btrfs_get_extent@@Base+0x184>)
    fbb4:	add	ip, pc
    fbb6:	sub	sp, #76	; 0x4c
    fbb8:	mov	r5, r1
    fbba:	mov.w	r9, #108	; 0x6c
    fbbe:	ldr.w	r2, [ip, r2]
    fbc2:	ldr	r3, [sp, #136]	; 0x88
    fbc4:	ldr	r2, [r2, #0]
    fbc6:	str	r2, [sp, #68]	; 0x44
    fbc8:	mov.w	r2, #0
    fbcc:	ldr	r2, [sp, #120]	; 0x78
    fbce:	ldrd	r6, r7, [sp, #112]	; 0x70
    fbd2:	ldrd	r8, sl, [sp, #128]	; 0x80
    fbd6:	str.w	r2, [sp, #37]	; 0x25
    fbda:	ldr	r2, [sp, #124]	; 0x7c
    fbdc:	strd	r6, r7, [sp, #28]
    fbe0:	strb.w	r9, [sp, #36]	; 0x24
    fbe4:	str.w	r2, [sp, #41]	; 0x29
    fbe8:	subs	r2, r3, #0
    fbea:	it	ne
    fbec:	movne	r2, #1
    fbee:	strd	r3, r2, [sp]
    fbf2:	add	r2, sp, #28
    fbf4:	mov	r3, r4
    fbf6:	bl	19930 <btrfs_search_slot@@Base>
    fbfa:	subs.w	fp, r0, #0
    fbfe:	ble.w	fd12 <btrfs_get_extent@@Base+0x16a>
    fc02:	mov	r2, r6
    fc04:	mov	r3, r7
    fc06:	mov	r1, r4
    fc08:	mov	r0, r5
    fc0a:	str.w	r9, [sp]
    fc0e:	bl	1afe8 <btrfs_previous_item@@Base>
    fc12:	subs.w	fp, r0, #0
    fc16:	blt.n	fcfe <btrfs_get_extent@@Base+0x156>
    fc18:	beq.n	fca6 <btrfs_get_extent@@Base+0xfe>
    fc1a:	ldr	r2, [r4, #0]
    fc1c:	ldr	r3, [r4, #32]
    fc1e:	adds	r3, #1
    fc20:	str	r3, [r4, #32]
    fc22:	ldr.w	r2, [r2, #192]	; 0xc0
    fc26:	cmp	r3, r2
    fc28:	bcc.n	fc40 <btrfs_get_extent@@Base+0x98>
    fc2a:	movs	r3, #0
    fc2c:	mov	r1, r4
    fc2e:	strb.w	r3, [r4, #65]	; 0x41
    fc32:	ldr.w	r0, [r5, #464]	; 0x1d0
    fc36:	bl	1ad64 <btrfs_next_sibling_tree_block@@Base>
    fc3a:	mov	fp, r0
    fc3c:	cmp	r0, #0
    fc3e:	bne.n	fcfe <btrfs_get_extent@@Base+0x156>
    fc40:	ldr	r2, [r4, #32]
    fc42:	add	r1, sp, #48	; 0x30
    fc44:	ldr	r0, [r4, #0]
    fc46:	bl	fb40 <btrfs_mksubvol@@Base+0x370>
    fc4a:	ldrd	r2, r3, [sp, #48]	; 0x30
    fc4e:	cmp	r3, r7
    fc50:	it	eq
    fc52:	cmpeq	r2, r6
    fc54:	bne.n	fd14 <btrfs_get_extent@@Base+0x16c>
    fc56:	ldrb.w	r3, [sp, #56]	; 0x38
    fc5a:	cmp	r3, #108	; 0x6c
    fc5c:	bne.n	fd14 <btrfs_get_extent@@Base+0x16c>
    fc5e:	ldr	r1, [sp, #120]	; 0x78
    fc60:	ldr.w	r3, [sp, #61]	; 0x3d
    fc64:	adds.w	r1, r1, r8
    fc68:	str	r1, [sp, #16]
    fc6a:	ldr	r1, [sp, #124]	; 0x7c
    fc6c:	ldr.w	r2, [sp, #57]	; 0x39
    fc70:	adc.w	r1, r1, sl
    fc74:	str	r1, [sp, #20]
    fc76:	ldrd	r0, r1, [sp, #16]
    fc7a:	cmp	r3, r1
    fc7c:	ldr	r3, [r4, #32]
    fc7e:	it	eq
    fc80:	cmpeq	r2, r0
    fc82:	ite	cs
    fc84:	movcs.w	fp, #1
    fc88:	movcc.w	fp, #0
    fc8c:	cmp	r3, #0
    fc8e:	bne.n	fcfe <btrfs_get_extent@@Base+0x156>
    fc90:	mov	r1, r4
    fc92:	mov	r0, r5
    fc94:	bl	1acdc <btrfs_prev_leaf@@Base>
    fc98:	cmp	r0, #0
    fc9a:	bne.n	fd1a <btrfs_get_extent@@Base+0x172>
    fc9c:	ldr	r3, [r4, #0]
    fc9e:	ldr.w	r3, [r3, #192]	; 0xc0
    fca2:	str	r3, [r4, #32]
    fca4:	b.n	fcfe <btrfs_get_extent@@Base+0x156>
    fca6:	ldr	r2, [r4, #32]
    fca8:	add	r1, sp, #48	; 0x30
    fcaa:	ldr	r0, [r4, #0]
    fcac:	bl	fb40 <btrfs_mksubvol@@Base+0x370>
    fcb0:	ldrd	r2, r3, [sp, #48]	; 0x30
    fcb4:	cmp	r3, r7
    fcb6:	it	eq
    fcb8:	cmpeq	r2, r6
    fcba:	bne.n	fc1a <btrfs_get_extent@@Base+0x72>
    fcbc:	ldrb.w	r3, [sp, #56]	; 0x38
    fcc0:	cmp	r3, #108	; 0x6c
    fcc2:	bne.n	fc1a <btrfs_get_extent@@Base+0x72>
    fcc4:	ldr	r3, [r4, #0]
    fcc6:	movs	r1, #25
    fcc8:	ldr	r2, [r4, #32]
    fcca:	adds	r3, #96	; 0x60
    fccc:	mla	r2, r1, r2, r3
    fcd0:	ldr.w	r1, [sp, #61]	; 0x3d
    fcd4:	ldr.w	r2, [r2, #118]	; 0x76
    fcd8:	add	r3, r2
    fcda:	ldr.w	r2, [r3, #109]!
    fcde:	ldr	r0, [r3, #4]
    fce0:	ldr.w	r3, [sp, #57]	; 0x39
    fce4:	adds	r3, r2, r3
    fce6:	str	r3, [sp, #8]
    fce8:	adc.w	r3, r0, r1
    fcec:	str	r3, [sp, #12]
    fcee:	ldrd	r0, r1, [sp, #8]
    fcf2:	ldrd	r2, r3, [sp, #120]	; 0x78
    fcf6:	cmp	r3, r1
    fcf8:	it	eq
    fcfa:	cmpeq	r2, r0
    fcfc:	bcs.n	fc1a <btrfs_get_extent@@Base+0x72>
    fcfe:	ldr	r2, [pc, #48]	; (fd30 <btrfs_get_extent@@Base+0x188>)
    fd00:	ldr	r3, [pc, #40]	; (fd2c <btrfs_get_extent@@Base+0x184>)
    fd02:	add	r2, pc
    fd04:	ldr	r3, [r2, r3]
    fd06:	ldr	r2, [r3, #0]
    fd08:	ldr	r3, [sp, #68]	; 0x44
    fd0a:	eors	r2, r3
    fd0c:	beq.n	fd1e <btrfs_get_extent@@Base+0x176>
    fd0e:	blx	8510 <__stack_chk_fail@plt>
    fd12:	bne.n	fcfe <btrfs_get_extent@@Base+0x156>
    fd14:	mov.w	fp, #1
    fd18:	b.n	fcfe <btrfs_get_extent@@Base+0x156>
    fd1a:	mov	fp, r0
    fd1c:	b.n	fcfe <btrfs_get_extent@@Base+0x156>
    fd1e:	mov	r0, fp
    fd20:	add	sp, #76	; 0x4c
    fd22:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fd26:	nop
    fd28:	rors	r0, r2
    fd2a:	movs	r5, r0
    fd2c:	lsls	r0, r4, #8
    fd2e:	movs	r0, r0
    fd30:	lsls	r2, r0
    fd32:	movs	r5, r0

0000fd34 <btrfs_punch_hole@@Base>:
    fd34:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    fd38:	sub	sp, #40	; 0x28
    fd3a:	mov	sl, r0
    fd3c:	mov	r5, r2
    fd3e:	ldrd	r8, r9, [sp, #80]	; 0x50
    fd42:	mov	r7, r3
    fd44:	str	r1, [sp, #36]	; 0x24
    fd46:	bl	17544 <btrfs_alloc_path@@Base>
    fd4a:	mov	r4, r0
    fd4c:	cbz	r0, fdaa <btrfs_punch_hole@@Base+0x76>
    fd4e:	ldrd	r2, r3, [sp, #72]	; 0x48
    fd52:	movs	r0, #0
    fd54:	ldr	r1, [sp, #36]	; 0x24
    fd56:	str	r0, [sp, #24]
    fd58:	strd	r2, r3, [sp, #8]
    fd5c:	mov	r2, r4
    fd5e:	strd	r8, r9, [sp, #16]
    fd62:	strd	r5, r7, [sp]
    fd66:	bl	fba8 <btrfs_get_extent@@Base>
    fd6a:	subs	r6, r0, #0
    fd6c:	blt.n	fd96 <btrfs_punch_hole@@Base+0x62>
    fd6e:	beq.n	fda4 <btrfs_punch_hole@@Base+0x70>
    fd70:	movs	r2, #0
    fd72:	movs	r3, #0
    fd74:	strd	r2, r3, [sp, #16]
    fd78:	mov	r0, sl
    fd7a:	strd	r2, r3, [sp, #8]
    fd7e:	ldrd	r2, r3, [sp, #72]	; 0x48
    fd82:	ldr	r1, [sp, #36]	; 0x24
    fd84:	strd	r8, r9, [sp, #24]
    fd88:	strd	r2, r3, [sp]
    fd8c:	mov	r2, r5
    fd8e:	mov	r3, r7
    fd90:	bl	2d7c2 <btrfs_insert_file_extent@@Base>
    fd94:	mov	r6, r0
    fd96:	mov	r0, r4
    fd98:	bl	17572 <btrfs_free_path@@Base>
    fd9c:	mov	r0, r6
    fd9e:	add	sp, #40	; 0x28
    fda0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    fda4:	mvn.w	r6, #16
    fda8:	b.n	fd96 <btrfs_punch_hole@@Base+0x62>
    fdaa:	mvn.w	r6, #11
    fdae:	b.n	fd9c <btrfs_punch_hole@@Base+0x68>

0000fdb0 <btrfs_read_file@@Base>:
    fdb0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fdb4:	mov	r6, r0
    fdb6:	vpush	{d8}
    fdba:	sub	sp, #180	; 0xb4
    fdbc:	ldr.w	r8, [r0, #464]	; 0x1d0
    fdc0:	strd	r2, r3, [sp, #8]
    fdc4:	ldr	r3, [sp, #236]	; 0xec
    fdc6:	ldr	r2, [pc, #856]	; (10120 <btrfs_read_file@@Base+0x370>)
    fdc8:	ldr.w	r4, [r8, #388]	; 0x184
    fdcc:	vmov	s16, r3
    fdd0:	ldr	r3, [pc, #848]	; (10124 <btrfs_read_file@@Base+0x374>)
    fdd2:	add	r2, pc
    fdd4:	ldrd	sl, fp, [sp, #224]	; 0xe0
    fdd8:	ldr	r3, [r2, r3]
    fdda:	movs	r2, #0
    fddc:	ldr	r3, [r3, #0]
    fdde:	str	r3, [sp, #172]	; 0xac
    fde0:	mov.w	r3, #0
    fde4:	ldr.w	r3, [r8, #308]	; 0x134
    fde8:	ldr.w	r3, [r3, #188]	; 0xbc
    fdec:	str	r3, [sp, #68]	; 0x44
    fdee:	adds.w	r3, r4, #4294967295	; 0xffffffff
    fdf2:	adc.w	r2, r2, #4294967295	; 0xffffffff
    fdf6:	and.w	r0, r3, sl
    fdfa:	and.w	r1, r2, fp
    fdfe:	orrs.w	r3, r0, r1
    fe02:	bne.n	fe0c <btrfs_read_file@@Base+0x5c>
    fe04:	ldr	r3, [sp, #232]	; 0xe8
    fe06:	subs	r5, r4, #1
    fe08:	ands	r5, r3
    fe0a:	beq.n	fe34 <btrfs_read_file@@Base+0x84>
    fe0c:	ldr	r2, [pc, #792]	; (10128 <btrfs_read_file@@Base+0x378>)
    fe0e:	mov	r1, r4
    fe10:	ldr	r0, [pc, #792]	; (1012c <btrfs_read_file@@Base+0x37c>)
    fe12:	mvn.w	r4, #21
    fe16:	add	r2, pc
    fe18:	add	r0, pc
    fe1a:	bl	16af4 <__btrfs_warning@@Base>
    fe1e:	ldr	r2, [pc, #784]	; (10130 <btrfs_read_file@@Base+0x380>)
    fe20:	ldr	r3, [pc, #768]	; (10124 <btrfs_read_file@@Base+0x374>)
    fe22:	add	r2, pc
    fe24:	ldr	r3, [r2, r3]
    fe26:	ldr	r2, [r3, #0]
    fe28:	ldr	r3, [sp, #172]	; 0xac
    fe2a:	eors	r2, r3
    fe2c:	beq.w	10112 <btrfs_read_file@@Base+0x362>
    fe30:	blx	8510 <__stack_chk_fail@plt>
    fe34:	add.w	r9, sp, #104	; 0x68
    fe38:	movs	r7, #108	; 0x6c
    fe3a:	mov	r0, r9
    fe3c:	bl	1753c <btrfs_init_path@@Base>
    fe40:	ldr	r3, [sp, #8]
    fe42:	add	r2, sp, #84	; 0x54
    fe44:	mov	r1, r6
    fe46:	mov	r0, r5
    fe48:	strd	r5, r5, [sp]
    fe4c:	str	r3, [sp, #84]	; 0x54
    fe4e:	ldr	r3, [sp, #12]
    fe50:	str.w	sl, [sp, #93]	; 0x5d
    fe54:	str.w	fp, [sp, #97]	; 0x61
    fe58:	str	r3, [sp, #88]	; 0x58
    fe5a:	mov	r3, r9
    fe5c:	strb.w	r7, [sp, #92]	; 0x5c
    fe60:	bl	19930 <btrfs_search_slot@@Base>
    fe64:	subs	r4, r0, #0
    fe66:	blt.w	fffc <btrfs_read_file@@Base+0x24c>
    fe6a:	beq.n	fe80 <btrfs_read_file@@Base+0xd0>
    fe6c:	ldrd	r2, r3, [sp, #8]
    fe70:	mov	r1, r9
    fe72:	mov	r0, r6
    fe74:	str	r7, [sp, #0]
    fe76:	bl	1afe8 <btrfs_previous_item@@Base>
    fe7a:	subs	r4, r0, #0
    fe7c:	bgt.w	1010c <btrfs_read_file@@Base+0x35c>
    fe80:	ldr	r2, [sp, #232]	; 0xe8
    fe82:	movs	r1, #0
    fe84:	vmov	r0, s16
    fe88:	movs	r5, #0
    fe8a:	blx	87c4 <memset@plt+0x4>
    fe8e:	ldr	r3, [sp, #232]	; 0xe8
    fe90:	adds.w	r2, sl, r3
    fe94:	adc.w	r3, fp, r3, asr #31
    fe98:	strd	r2, r3, [sp, #40]	; 0x28
    fe9c:	ldr	r7, [sp, #136]	; 0x88
    fe9e:	add	r1, sp, #84	; 0x54
    fea0:	ldr	r0, [sp, #104]	; 0x68
    fea2:	mov	r2, r7
    fea4:	str	r0, [sp, #52]	; 0x34
    fea6:	bl	fb40 <btrfs_mksubvol@@Base+0x370>
    feaa:	ldrd	r2, r3, [sp, #84]	; 0x54
    feae:	ldrd	r0, r1, [sp, #8]
    feb2:	cmp	r1, r3
    feb4:	it	eq
    feb6:	cmpeq	r0, r2
    feb8:	bcc.n	ff4c <btrfs_read_file@@Base+0x19c>
    feba:	ldrb.w	r1, [sp, #92]	; 0x5c
    febe:	cmp	r1, #108	; 0x6c
    fec0:	bne.w	1007e <btrfs_read_file@@Base+0x2ce>
    fec4:	ldrd	r0, r1, [sp, #8]
    fec8:	cmp	r3, r1
    feca:	it	eq
    fecc:	cmpeq	r2, r0
    fece:	bne.w	1007e <btrfs_read_file@@Base+0x2ce>
    fed2:	ldrd	r0, r1, [sp, #40]	; 0x28
    fed6:	ldr.w	r3, [sp, #97]	; 0x61
    feda:	ldr.w	r2, [sp, #93]	; 0x5d
    fede:	cmp	r3, r1
    fee0:	it	eq
    fee2:	cmpeq	r2, r0
    fee4:	bcs.n	ff4c <btrfs_read_file@@Base+0x19c>
    fee6:	ldr	r0, [sp, #52]	; 0x34
    fee8:	movs	r1, #25
    feea:	add.w	ip, r0, #96	; 0x60
    feee:	mla	r7, r1, r7, ip
    fef2:	ldr.w	r1, [r7, #118]	; 0x76
    fef6:	add.w	r7, r1, #101	; 0x65
    fefa:	add	ip, r7
    fefc:	str	r1, [sp, #52]	; 0x34
    fefe:	ldrb.w	r7, [ip, #16]
    ff02:	cmp	r7, #0
    ff04:	bne.w	10106 <btrfs_read_file@@Base+0x356>
    ff08:	ldrb.w	r7, [ip, #20]
    ff0c:	cmp	r7, #0
    ff0e:	bne.n	1000a <btrfs_read_file@@Base+0x25a>
    ff10:	ldr.w	r7, [ip, #8]
    ff14:	ldr.w	lr, [ip, #12]
    ff18:	adds	r1, r2, r7
    ff1a:	str	r1, [sp, #56]	; 0x38
    ff1c:	adc.w	r3, r3, lr
    ff20:	str	r3, [sp, #60]	; 0x3c
    ff22:	ldrd	r2, r3, [sp, #56]	; 0x38
    ff26:	cmp	fp, r3
    ff28:	it	eq
    ff2a:	cmpeq	sl, r2
    ff2c:	bcs.w	1007e <btrfs_read_file@@Base+0x2ce>
    ff30:	ldr	r2, [sp, #52]	; 0x34
    ff32:	mov	r3, r7
    ff34:	vmov	r1, s16
    ff38:	subs	r7, #1
    ff3a:	adds	r2, #122	; 0x7a
    ff3c:	adds	r5, #1
    ff3e:	bl	16a0e <read_extent_buffer@@Base>
    ff42:	ldr.w	r3, [r8, #388]	; 0x184
    ff46:	subs	r3, #1
    ff48:	orrs	r3, r7
    ff4a:	add	r5, r3
    ff4c:	ldr	r1, [sp, #68]	; 0x44
    ff4e:	movs	r7, #0
    ff50:	mov	r3, r7
    ff52:	and.w	r2, r1, #512	; 0x200
    ff56:	orrs	r3, r2
    ff58:	beq.n	fffc <btrfs_read_file@@Base+0x24c>
    ff5a:	mov	r0, r9
    ff5c:	bl	1754c <btrfs_release_path@@Base>
    ff60:	ldr	r3, [sp, #8]
    ff62:	mov	r2, r9
    ff64:	mov	r1, r6
    ff66:	mov	r0, r7
    ff68:	str	r7, [sp, #0]
    ff6a:	str	r3, [sp, #84]	; 0x54
    ff6c:	ldr	r3, [sp, #12]
    ff6e:	strb.w	r7, [sp, #93]	; 0x5d
    ff72:	strb.w	r7, [sp, #94]	; 0x5e
    ff76:	str	r3, [sp, #88]	; 0x58
    ff78:	movs	r3, #1
    ff7a:	strb.w	r3, [sp, #92]	; 0x5c
    ff7e:	add	r3, sp, #84	; 0x54
    ff80:	strb.w	r7, [sp, #95]	; 0x5f
    ff84:	strb.w	r7, [sp, #96]	; 0x60
    ff88:	strb.w	r7, [sp, #97]	; 0x61
    ff8c:	strb.w	r7, [sp, #98]	; 0x62
    ff90:	strb.w	r7, [sp, #99]	; 0x63
    ff94:	strb.w	r7, [sp, #100]	; 0x64
    ff98:	bl	2ceb8 <btrfs_lookup_inode@@Base>
    ff9c:	subs	r4, r0, #0
    ff9e:	blt.n	fffc <btrfs_read_file@@Base+0x24c>
    ffa0:	bne.w	1010c <btrfs_read_file@@Base+0x35c>
    ffa4:	ldr	r3, [sp, #104]	; 0x68
    ffa6:	movs	r1, #25
    ffa8:	ldr	r2, [sp, #136]	; 0x88
    ffaa:	adds	r3, #96	; 0x60
    ffac:	ldr.w	r5, [r8, #388]	; 0x184
    ffb0:	mla	r2, r1, r2, r3
    ffb4:	subs	r5, #1
    ffb6:	ldr.w	r2, [r2, #118]	; 0x76
    ffba:	add	r3, r2
    ffbc:	ldr.w	r2, [r3, #117]!
    ffc0:	adds.w	r2, r2, #4294967295	; 0xffffffff
    ffc4:	ldr	r1, [r3, #4]
    ffc6:	ldr	r3, [sp, #232]	; 0xe8
    ffc8:	adc.w	r0, r1, #4294967295	; 0xffffffff
    ffcc:	orr.w	r1, r2, r5
    ffd0:	subs.w	r1, r1, sl
    ffd4:	sbc.w	r0, r0, fp
    ffd8:	adds	r1, #1
    ffda:	str	r1, [sp, #32]
    ffdc:	adc.w	r1, r0, r7
    ffe0:	str	r1, [sp, #36]	; 0x24
    ffe2:	asrs	r6, r3, #31
    ffe4:	ldrd	r0, r1, [sp, #32]
    ffe8:	mov	r5, r3
    ffea:	mov	r2, r3
    ffec:	mov	r3, r6
    ffee:	cmp	r6, r1
    fff0:	it	eq
    fff2:	cmpeq	r5, r0
    fff4:	it	cc
    fff6:	strdcc	r2, r3, [sp, #32]
    fffa:	ldr	r5, [sp, #32]
    fffc:	add	r0, sp, #104	; 0x68
    fffe:	cmp	r4, #0
   10000:	it	eq
   10002:	moveq	r4, r5
   10004:	bl	1754c <btrfs_release_path@@Base>
   10008:	b.n	fe1e <btrfs_read_file@@Base+0x6e>
   1000a:	mov	r0, ip
   1000c:	ldr.w	r1, [r0, #45]!
   10010:	adds	r1, r1, r2
   10012:	str	r1, [sp, #16]
   10014:	ldr	r4, [r0, #4]
   10016:	adc.w	r1, r4, r3
   1001a:	str	r1, [sp, #20]
   1001c:	ldrd	r0, r1, [sp, #16]
   10020:	cmp	fp, r1
   10022:	it	eq
   10024:	cmpeq	sl, r0
   10026:	bcs.n	1007e <btrfs_read_file@@Base+0x2ce>
   10028:	cmp	fp, r3
   1002a:	mov	r0, fp
   1002c:	it	eq
   1002e:	cmpeq	sl, r2
   10030:	mov	lr, sl
   10032:	it	cc
   10034:	movcc	r0, r3
   10036:	ldr	r3, [sp, #40]	; 0x28
   10038:	it	cc
   1003a:	movcc	lr, r2
   1003c:	ldrd	r1, r2, [sp, #40]	; 0x28
   10040:	str	r3, [sp, #52]	; 0x34
   10042:	ldr	r3, [sp, #44]	; 0x2c
   10044:	str	r3, [sp, #64]	; 0x40
   10046:	ldrd	r3, r4, [sp, #16]
   1004a:	cmp	r4, r2
   1004c:	it	eq
   1004e:	cmpeq	r3, r1
   10050:	itttt	cc
   10052:	ldrcc	r3, [sp, #16]
   10054:	strcc	r3, [sp, #52]	; 0x34
   10056:	ldrcc	r3, [sp, #20]
   10058:	strcc	r3, [sp, #64]	; 0x40
   1005a:	ldr	r3, [sp, #52]	; 0x34
   1005c:	subs.w	r3, r3, lr
   10060:	str	r3, [sp, #24]
   10062:	ldr	r3, [sp, #64]	; 0x40
   10064:	sbc.w	r3, r3, r0
   10068:	cmp	r7, #2
   1006a:	str	r3, [sp, #28]
   1006c:	beq.n	1007a <btrfs_read_file@@Base+0x2ca>
   1006e:	mov	r0, ip
   10070:	ldr.w	r2, [r0, #29]!
   10074:	ldr	r3, [r0, #4]
   10076:	orrs	r3, r2
   10078:	bne.n	100a8 <btrfs_read_file@@Base+0x2f8>
   1007a:	ldr	r3, [sp, #24]
   1007c:	add	r5, r3
   1007e:	ldr	r2, [sp, #104]	; 0x68
   10080:	movs	r7, #0
   10082:	ldr	r3, [sp, #136]	; 0x88
   10084:	adds	r3, #1
   10086:	str	r3, [sp, #136]	; 0x88
   10088:	ldr.w	r2, [r2, #192]	; 0xc0
   1008c:	cmp	r3, r2
   1008e:	bcc.n	10102 <btrfs_read_file@@Base+0x352>
   10090:	ldr.w	r0, [r6, #464]	; 0x1d0
   10094:	add	r1, sp, #104	; 0x68
   10096:	strb.w	r7, [sp, #169]	; 0xa9
   1009a:	bl	1ad64 <btrfs_next_sibling_tree_block@@Base>
   1009e:	subs	r4, r0, #0
   100a0:	ble.w	fe9c <btrfs_read_file@@Base+0xec>
   100a4:	mov	r4, r7
   100a6:	b.n	ff4c <btrfs_read_file@@Base+0x19c>
   100a8:	mov	r3, ip
   100aa:	ldr.w	r4, [ip, #21]!
   100ae:	ldr.w	r2, [r3, #37]!
   100b2:	movs	r7, #0
   100b4:	str	r2, [sp, #52]	; 0x34
   100b6:	ldrd	r1, r2, [sp, #24]
   100ba:	ldr	r0, [r3, #4]
   100bc:	ldr.w	r3, [ip, #4]
   100c0:	strd	r1, r2, [sp, #72]	; 0x48
   100c4:	sub.w	r1, lr, sl
   100c8:	ldr	r2, [sp, #52]	; 0x34
   100ca:	str	r7, [sp, #4]
   100cc:	add	r7, sp, #72	; 0x48
   100ce:	adds	r2, r2, r4
   100d0:	str	r7, [sp, #0]
   100d2:	adc.w	r3, r0, r3
   100d6:	vmov	r0, s16
   100da:	add	r1, r0
   100dc:	mov	r0, r8
   100de:	bl	1baa0 <read_extent_data@@Base>
   100e2:	subs	r4, r0, #0
   100e4:	blt.w	ff4c <btrfs_read_file@@Base+0x19c>
   100e8:	ldrd	r2, r3, [sp, #72]	; 0x48
   100ec:	ldrd	r0, r1, [sp, #24]
   100f0:	cmp	r3, r1
   100f2:	it	eq
   100f4:	cmpeq	r2, r0
   100f6:	beq.n	100fe <btrfs_read_file@@Base+0x34e>
   100f8:	mvn.w	r4, #4
   100fc:	b.n	fe1e <btrfs_read_file@@Base+0x6e>
   100fe:	add	r5, r2
   10100:	b.n	1007e <btrfs_read_file@@Base+0x2ce>
   10102:	mov	r4, r7
   10104:	b.n	fe9c <btrfs_read_file@@Base+0xec>
   10106:	mvn.w	r4, #24
   1010a:	b.n	ff4c <btrfs_read_file@@Base+0x19c>
   1010c:	mvn.w	r4, #1
   10110:	b.n	fffc <btrfs_read_file@@Base+0x24c>
   10112:	mov	r0, r4
   10114:	add	sp, #180	; 0xb4
   10116:	vpop	{d8}
   1011a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1011e:	nop
   10120:	subs	r7, #178	; 0xb2
   10122:	movs	r5, r0
   10124:	lsls	r0, r4, #8
   10126:	movs	r0, r0
   10128:	ldr	r7, [sp, #324]	; 0x144
   1012a:	movs	r2, r0
   1012c:	ldr	r7, [sp, #100]	; 0x64
   1012e:	movs	r2, r0
   10130:	subs	r7, #98	; 0x62
   10132:	movs	r5, r0

00010134 <btrfs_find_root_search@@Base>:
   10134:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10138:	sub	sp, #180	; 0xb4
   1013a:	mov	sl, r2
   1013c:	ldr	r2, [pc, #644]	; (103c4 <btrfs_find_root_search@@Base+0x290>)
   1013e:	str	r3, [sp, #56]	; 0x38
   10140:	mov	r7, r1
   10142:	ldr	r3, [pc, #644]	; (103c8 <btrfs_find_root_search@@Base+0x294>)
   10144:	add	r2, pc
   10146:	movs	r1, #0
   10148:	mov	r6, r0
   1014a:	add	r3, pc
   1014c:	str	r3, [sp, #60]	; 0x3c
   1014e:	ldr	r3, [pc, #636]	; (103cc <btrfs_find_root_search@@Base+0x298>)
   10150:	ldr	r3, [r2, r3]
   10152:	ldr	r3, [r3, #0]
   10154:	str	r3, [sp, #172]	; 0xac
   10156:	mov.w	r3, #0
   1015a:	ldr.w	r3, [r0, #308]	; 0x134
   1015e:	strd	r1, r1, [sp, #88]	; 0x58
   10162:	strd	r1, r1, [sp, #96]	; 0x60
   10166:	ldr.w	r3, [r3, #148]	; 0x94
   1016a:	strd	r1, r1, [sp, #36]	; 0x24
   1016e:	strd	r1, r1, [sp, #80]	; 0x50
   10172:	str	r3, [sp, #44]	; 0x2c
   10174:	ldrb.w	r3, [r0, #364]	; 0x16c
   10178:	ubfx	r0, r3, #5, #1
   1017c:	orr.w	r3, r3, #32
   10180:	str	r0, [sp, #72]	; 0x48
   10182:	strb.w	r3, [r6, #364]	; 0x16c
   10186:	ldrd	r2, r3, [r7]
   1018a:	add	r1, sp, #88	; 0x58
   1018c:	mov	r0, r6
   1018e:	cmp	r3, #0
   10190:	it	eq
   10192:	cmpeq	r2, #3
   10194:	add	r2, sp, #96	; 0x60
   10196:	ittee	ne
   10198:	movne	r4, #4
   1019a:	movne	r5, #0
   1019c:	moveq	r3, #2
   1019e:	moveq	r4, #0
   101a0:	ite	ne
   101a2:	strdne	r4, r5, [sp]
   101a6:	strdeq	r3, r4, [sp]
   101aa:	bl	28d94 <btrfs_next_bg@@Base>
   101ae:	cbz	r0, 101dc <btrfs_find_root_search@@Base+0xa8>
   101b0:	adds	r3, r0, #2
   101b2:	ite	ne
   101b4:	movne	r4, r0
   101b6:	moveq	r4, #0
   101b8:	ldrb.w	r3, [r6, #364]	; 0x16c
   101bc:	ldr	r2, [sp, #72]	; 0x48
   101be:	bfi	r3, r2, #5, #1
   101c2:	ldr	r2, [pc, #524]	; (103d0 <btrfs_find_root_search@@Base+0x29c>)
   101c4:	strb.w	r3, [r6, #364]	; 0x16c
   101c8:	ldr	r3, [pc, #512]	; (103cc <btrfs_find_root_search@@Base+0x298>)
   101ca:	add	r2, pc
   101cc:	ldr	r3, [r2, r3]
   101ce:	ldr	r2, [r3, #0]
   101d0:	ldr	r3, [sp, #172]	; 0xac
   101d2:	eors	r2, r3
   101d4:	beq.w	103bc <btrfs_find_root_search@@Base+0x288>
   101d8:	blx	8510 <__stack_chk_fail@plt>
   101dc:	ldrd	r3, r4, [sp, #88]	; 0x58
   101e0:	strd	r3, r4, [sp, #24]
   101e4:	ldr	r3, [sp, #44]	; 0x2c
   101e6:	str	r3, [sp, #76]	; 0x4c
   101e8:	ldr	r2, [sp, #96]	; 0x60
   101ea:	ldr	r3, [sp, #88]	; 0x58
   101ec:	adds	r3, r3, r2
   101ee:	ldr	r2, [sp, #92]	; 0x5c
   101f0:	str	r3, [sp, #64]	; 0x40
   101f2:	ldr	r3, [sp, #100]	; 0x64
   101f4:	adc.w	r3, r2, r3
   101f8:	str	r3, [sp, #68]	; 0x44
   101fa:	ldrd	r1, r2, [sp, #64]	; 0x40
   101fe:	ldrd	r3, r4, [sp, #24]
   10202:	cmp	r4, r2
   10204:	it	eq
   10206:	cmpeq	r3, r1
   10208:	bcs.n	10186 <btrfs_find_root_search@@Base+0x52>
   1020a:	ldr	r3, [sp, #80]	; 0x50
   1020c:	mov	r0, r6
   1020e:	str	r3, [sp, #0]
   10210:	ldr	r3, [sp, #84]	; 0x54
   10212:	str	r3, [sp, #4]
   10214:	ldrd	r2, r3, [sp, #24]
   10218:	bl	1cd7c <read_tree_block@@Base>
   1021c:	mov	r5, r0
   1021e:	cbnz	r0, 10232 <btrfs_find_root_search@@Base+0xfe>
   10220:	ldr	r3, [sp, #24]
   10222:	ldr	r2, [sp, #76]	; 0x4c
   10224:	adds	r3, r3, r2
   10226:	str	r3, [sp, #24]
   10228:	ldr	r3, [sp, #28]
   1022a:	adc.w	r3, r3, #0
   1022e:	str	r3, [sp, #28]
   10230:	b.n	101e8 <btrfs_find_root_search@@Base+0xb4>
   10232:	cmn.w	r0, #4096	; 0x1000
   10236:	bhi.n	10220 <btrfs_find_root_search@@Base+0xec>
   10238:	ldrd	r2, r3, [r7]
   1023c:	ldr.w	r1, [r5, #188]	; 0xbc
   10240:	ldr.w	r0, [r0, #184]	; 0xb8
   10244:	cmp	r1, r3
   10246:	it	eq
   10248:	cmpeq	r0, r2
   1024a:	bne.w	103b8 <btrfs_find_root_search@@Base+0x284>
   1024e:	ldrb.w	r3, [r5, #196]	; 0xc4
   10252:	str	r3, [sp, #32]
   10254:	ldr	r2, [sp, #32]
   10256:	ldrb	r3, [r7, #16]
   10258:	cmp	r3, r2
   1025a:	bhi.w	103b8 <btrfs_find_root_search@@Base+0x284>
   1025e:	ldr.w	r3, [r5, #176]	; 0xb0
   10262:	str	r3, [sp, #16]
   10264:	ldr.w	r3, [r5, #180]	; 0xb4
   10268:	str	r3, [sp, #20]
   1026a:	ldrd	r0, r1, [sp, #16]
   1026e:	ldrd	r2, r3, [r7, #8]
   10272:	cmp	r1, r3
   10274:	it	eq
   10276:	cmpeq	r0, r2
   10278:	bcc.w	103b8 <btrfs_find_root_search@@Base+0x284>
   1027c:	ldrd	r3, r4, [r5, #40]	; 0x28
   10280:	mov	r2, r0
   10282:	mov	r0, sl
   10284:	strd	r3, r4, [sp, #48]	; 0x30
   10288:	mov	r3, r1
   1028a:	bl	156d0 <search_cache_extent@@Base>
   1028e:	mov	fp, r0
   10290:	cbz	r0, 102a2 <btrfs_find_root_search@@Base+0x16e>
   10292:	ldrd	r2, r3, [r0, #24]
   10296:	ldrd	r0, r1, [sp, #16]
   1029a:	cmp	r1, r3
   1029c:	it	eq
   1029e:	cmpeq	r0, r2
   102a0:	beq.n	10334 <btrfs_find_root_search@@Base+0x200>
   102a2:	movs	r0, #56	; 0x38
   102a4:	blx	8678 <malloc@plt+0x4>
   102a8:	cbnz	r0, 102ea <btrfs_find_root_search@@Base+0x1b6>
   102aa:	ldr	r2, [sp, #60]	; 0x3c
   102ac:	add	r4, sp, #108	; 0x6c
   102ae:	ldr	r3, [pc, #292]	; (103d4 <btrfs_find_root_search@@Base+0x2a0>)
   102b0:	movs	r1, #1
   102b2:	ldr	r0, [r2, r3]
   102b4:	ldr	r3, [pc, #288]	; (103d8 <btrfs_find_root_search@@Base+0x2a4>)
   102b6:	ldr	r2, [pc, #292]	; (103dc <btrfs_find_root_search@@Base+0x2a8>)
   102b8:	add	r3, pc
   102ba:	str	r3, [sp, #8]
   102bc:	ldr	r3, [pc, #288]	; (103e0 <btrfs_find_root_search@@Base+0x2ac>)
   102be:	add	r2, pc
   102c0:	str	r1, [sp, #12]
   102c2:	add	r3, pc
   102c4:	str	r3, [sp, #4]
   102c6:	movs	r3, #58	; 0x3a
   102c8:	str	r3, [sp, #0]
   102ca:	ldr	r3, [pc, #280]	; (103e4 <btrfs_find_root_search@@Base+0x2b0>)
   102cc:	ldr	r0, [r0, #0]
   102ce:	add	r3, pc
   102d0:	blx	8860 <__fprintf_chk@plt+0x4>
   102d4:	movs	r1, #16
   102d6:	mov	r0, r4
   102d8:	blx	86c4 <backtrace@plt>
   102dc:	movs	r2, #2
   102de:	mov	r1, r0
   102e0:	mov	r0, r4
   102e2:	blx	89c8 <backtrace_symbols_fd@plt>
   102e6:	blx	8980 <abort@plt>
   102ea:	ldrd	r3, r4, [sp, #16]
   102ee:	mov	fp, r0
   102f0:	adds	r0, #48	; 0x30
   102f2:	strd	r3, r4, [r0, #-24]
   102f6:	movs	r3, #1
   102f8:	movs	r4, #0
   102fa:	strd	r3, r4, [r0, #-16]
   102fe:	ldr	r3, [sp, #36]	; 0x24
   10300:	str.w	r3, [r0, #-32]
   10304:	ldr	r3, [sp, #40]	; 0x28
   10306:	str.w	r3, [r0, #-28]
   1030a:	ldr	r3, [sp, #36]	; 0x24
   1030c:	str.w	r3, [r0, #-8]
   10310:	ldr	r3, [sp, #40]	; 0x28
   10312:	str.w	r3, [r0, #-4]
   10316:	bl	15588 <cache_tree_init@@Base>
   1031a:	mov	r1, fp
   1031c:	mov	r0, sl
   1031e:	bl	1558e <insert_cache_extent@@Base>
   10322:	subs	r4, r0, #0
   10324:	bge.n	10336 <btrfs_find_root_search@@Base+0x202>
   10326:	mov	r0, r5
   10328:	bl	16314 <free_extent_buffer@@Base>
   1032c:	cmp	r4, #0
   1032e:	beq.w	10220 <btrfs_find_root_search@@Base+0xec>
   10332:	b.n	101b8 <btrfs_find_root_search@@Base+0x84>
   10334:	movs	r4, #0
   10336:	ldrd	r2, r3, [fp, #40]	; 0x28
   1033a:	mov.w	r9, #0
   1033e:	ldrb.w	r8, [sp, #32]
   10342:	cmp	r3, r9
   10344:	it	eq
   10346:	cmpeq	r2, r8
   10348:	bcs.n	1037a <btrfs_find_root_search@@Base+0x246>
   1034a:	add.w	r0, fp, #48	; 0x30
   1034e:	bl	157d2 <free_extent_cache_tree@@Base>
   10352:	strd	r8, r9, [fp, #40]	; 0x28
   10356:	ldr	r3, [sp, #44]	; 0x2c
   10358:	add.w	r0, fp, #48	; 0x30
   1035c:	mov.w	r8, #0
   10360:	strd	r3, r8, [sp]
   10364:	ldrd	r2, r3, [sp, #48]	; 0x30
   10368:	bl	1559c <add_cache_extent@@Base>
   1036c:	subs	r4, r0, #0
   1036e:	bge.n	10376 <btrfs_find_root_search@@Base+0x242>
   10370:	cmn.w	r4, #17
   10374:	bne.n	10326 <btrfs_find_root_search@@Base+0x1f2>
   10376:	mov	r4, r8
   10378:	b.n	10382 <btrfs_find_root_search@@Base+0x24e>
   1037a:	cmp	r9, r3
   1037c:	it	eq
   1037e:	cmpeq	r8, r2
   10380:	beq.n	10356 <btrfs_find_root_search@@Base+0x222>
   10382:	ldrd	r2, r3, [r7, #24]
   10386:	ldrd	r0, r1, [sp, #16]
   1038a:	cmp	r1, r3
   1038c:	it	eq
   1038e:	cmpeq	r0, r2
   10390:	bne.n	10326 <btrfs_find_root_search@@Base+0x1f2>
   10392:	ldrb	r3, [r7, #17]
   10394:	ldr	r2, [sp, #32]
   10396:	cmp	r3, r2
   10398:	bne.n	10326 <btrfs_find_root_search@@Base+0x1f2>
   1039a:	ldr	r3, [r7, #32]
   1039c:	cmp	r3, #0
   1039e:	bne.n	10326 <btrfs_find_root_search@@Base+0x1f2>
   103a0:	ldr	r3, [sp, #56]	; 0x38
   103a2:	cbz	r3, 103b4 <btrfs_find_root_search@@Base+0x280>
   103a4:	ldrd	r2, r3, [sp, #48]	; 0x30
   103a8:	add.w	r0, fp, #48	; 0x30
   103ac:	bl	156d0 <search_cache_extent@@Base>
   103b0:	ldr	r3, [sp, #56]	; 0x38
   103b2:	str	r0, [r3, #0]
   103b4:	movs	r4, #1
   103b6:	b.n	10326 <btrfs_find_root_search@@Base+0x1f2>
   103b8:	movs	r4, #0
   103ba:	b.n	10326 <btrfs_find_root_search@@Base+0x1f2>
   103bc:	mov	r0, r4
   103be:	add	sp, #180	; 0xb4
   103c0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   103c4:	subs	r4, #64	; 0x40
   103c6:	movs	r5, r0
   103c8:	subs	r4, #58	; 0x3a
   103ca:	movs	r5, r0
   103cc:	lsls	r0, r4, #8
   103ce:	movs	r0, r0
   103d0:	subs	r3, #186	; 0xba
   103d2:	movs	r5, r0
   103d4:	lsls	r0, r6, #8
   103d6:	movs	r0, r0
   103d8:	ldr	r2, [sp, #812]	; 0x32c
   103da:	movs	r2, r0
   103dc:	ldrh	r4, [r4, #30]
   103de:	movs	r2, r0
   103e0:	ldr	r2, [sp, #816]	; 0x330
   103e2:	movs	r2, r0
   103e4:	ldr	r2, [sp, #676]	; 0x2a4
   103e6:	movs	r2, r0
   103e8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   103ec:	sub	sp, #20
   103ee:	ldr	r7, [pc, #500]	; (105e4 <btrfs_find_root_search@@Base+0x4b0>)
   103f0:	mov	r5, r0
   103f2:	ldrb.w	r8, [sp, #60]	; 0x3c
   103f6:	mov	r6, r1
   103f8:	add	r7, pc
   103fa:	str	r2, [sp, #8]
   103fc:	ldr	r4, [sp, #64]	; 0x40
   103fe:	eor.w	r8, r8, #1
   10402:	ldrb.w	r2, [sp, #56]	; 0x38
   10406:	cbz	r3, 1040c <btrfs_find_root_search@@Base+0x2d8>
   10408:	orr.w	r8, r8, #22
   1040c:	cbz	r2, 10412 <btrfs_find_root_search@@Base+0x2de>
   1040e:	orr.w	r8, r8, #8
   10412:	cmp	r5, #0
   10414:	beq.w	105d0 <btrfs_find_root_search@@Base+0x49c>
   10418:	ldr	r3, [r5, #0]
   1041a:	cmp	r3, #0
   1041c:	beq.w	105d0 <btrfs_find_root_search@@Base+0x49c>
   10420:	ands.w	r9, r8, #8
   10424:	beq.n	10454 <btrfs_find_root_search@@Base+0x320>
   10426:	ldr	r0, [pc, #448]	; (105e8 <btrfs_find_root_search@@Base+0x4b4>)
   10428:	add	r0, pc
   1042a:	mov	r1, r4
   1042c:	blx	8968 <fputs@plt+0x4>
   10430:	ldr.w	fp, [r5]
   10434:	movs	r1, #10
   10436:	mov	r0, fp
   10438:	blx	8754 <strchr@plt>
   1043c:	cbnz	r0, 1045a <btrfs_find_root_search@@Base+0x326>
   1043e:	mov	r1, r4
   10440:	mov	r0, fp
   10442:	blx	8968 <fputs@plt+0x4>
   10446:	tst.w	r8, #1
   1044a:	bne.n	10492 <btrfs_find_root_search@@Base+0x35e>
   1044c:	movs	r0, #0
   1044e:	add	sp, #20
   10450:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10454:	ldr	r0, [pc, #404]	; (105ec <btrfs_find_root_search@@Base+0x4b8>)
   10456:	add	r0, pc
   10458:	b.n	1042a <btrfs_find_root_search@@Base+0x2f6>
   1045a:	cmp.w	r9, #0
   1045e:	beq.n	1048a <btrfs_find_root_search@@Base+0x356>
   10460:	ldr.w	sl, [pc, #396]	; 105f0 <btrfs_find_root_search@@Base+0x4bc>
   10464:	add	sl, pc
   10466:	add.w	fp, fp, #4294967295	; 0xffffffff
   1046a:	ldrb.w	r0, [fp, #1]!
   1046e:	cmp	r0, #0
   10470:	beq.n	10446 <btrfs_find_root_search@@Base+0x312>
   10472:	mov	r1, r4
   10474:	blx	88d0 <fputc@plt+0x4>
   10478:	ldrb.w	r3, [fp]
   1047c:	cmp	r3, #10
   1047e:	bne.n	1046a <btrfs_find_root_search@@Base+0x336>
   10480:	mov	r1, r4
   10482:	mov	r0, sl
   10484:	blx	8968 <fputs@plt+0x4>
   10488:	b.n	1046a <btrfs_find_root_search@@Base+0x336>
   1048a:	ldr.w	sl, [pc, #360]	; 105f4 <btrfs_find_root_search@@Base+0x4c0>
   1048e:	add	sl, pc
   10490:	b.n	10466 <btrfs_find_root_search@@Base+0x332>
   10492:	ldr	r3, [r5, #4]
   10494:	cbnz	r3, 104aa <btrfs_find_root_search@@Base+0x376>
   10496:	ldr	r2, [pc, #352]	; (105f8 <btrfs_find_root_search@@Base+0x4c4>)
   10498:	mov	r3, r6
   1049a:	movs	r1, #1
   1049c:	mov	r0, r4
   1049e:	add	r2, pc
   104a0:	blx	8860 <__fprintf_chk@plt+0x4>
   104a4:	mvn.w	r0, #1
   104a8:	b.n	1044e <btrfs_find_root_search@@Base+0x31a>
   104aa:	mov	r1, r4
   104ac:	movs	r0, #10
   104ae:	blx	88d0 <fputc@plt+0x4>
   104b2:	cmp.w	r9, #0
   104b6:	bne.n	10502 <btrfs_find_root_search@@Base+0x3ce>
   104b8:	mov	r1, r4
   104ba:	movs	r0, #10
   104bc:	blx	88d0 <fputc@plt+0x4>
   104c0:	movs	r6, #4
   104c2:	ldr	r3, [r5, #4]
   104c4:	movs	r1, #1
   104c6:	ldr	r2, [pc, #308]	; (105fc <btrfs_find_root_search@@Base+0x4c8>)
   104c8:	mov	r0, r4
   104ca:	str	r3, [sp, #4]
   104cc:	add	r2, pc
   104ce:	ldr	r3, [pc, #304]	; (10600 <btrfs_find_root_search@@Base+0x4cc>)
   104d0:	add	r3, pc
   104d2:	str	r3, [sp, #0]
   104d4:	mov	r3, r6
   104d6:	blx	8860 <__fprintf_chk@plt+0x4>
   104da:	ldr	r3, [r5, #8]
   104dc:	cmp	r3, #0
   104de:	beq.n	1044c <btrfs_find_root_search@@Base+0x318>
   104e0:	tst.w	r8, #2
   104e4:	beq.n	1044c <btrfs_find_root_search@@Base+0x318>
   104e6:	ldrb	r3, [r3, #0]
   104e8:	cbz	r3, 104f2 <btrfs_find_root_search@@Base+0x3be>
   104ea:	mov	r1, r4
   104ec:	movs	r0, #10
   104ee:	blx	88d0 <fputc@plt+0x4>
   104f2:	ldr.w	fp, [pc, #272]	; 10604 <btrfs_find_root_search@@Base+0x4d0>
   104f6:	adds	r5, #8
   104f8:	ldr.w	sl, [pc, #268]	; 10608 <btrfs_find_root_search@@Base+0x4d4>
   104fc:	add	fp, pc
   104fe:	add	sl, pc
   10500:	b.n	10518 <btrfs_find_root_search@@Base+0x3e4>
   10502:	movs	r6, #8
   10504:	b.n	104c2 <btrfs_find_root_search@@Base+0x38e>
   10506:	strd	sl, r3, [sp]
   1050a:	mov	r2, fp
   1050c:	mov	r3, r6
   1050e:	movs	r1, #1
   10510:	mov	r0, r4
   10512:	mov	r5, r9
   10514:	blx	8860 <__fprintf_chk@plt+0x4>
   10518:	mov	r9, r5
   1051a:	ldr.w	r3, [r9], #4
   1051e:	cmp	r3, #0
   10520:	beq.n	1044c <btrfs_find_root_search@@Base+0x318>
   10522:	ldrb	r2, [r3, #0]
   10524:	cmp	r2, #0
   10526:	bne.n	10506 <btrfs_find_root_search@@Base+0x3d2>
   10528:	tst.w	r8, #4
   1052c:	beq.n	1044c <btrfs_find_root_search@@Base+0x318>
   1052e:	ldr.w	sl, [pc, #220]	; 1060c <btrfs_find_root_search@@Base+0x4d8>
   10532:	mov	r1, r4
   10534:	ldr.w	fp, [pc, #216]	; 10610 <btrfs_find_root_search@@Base+0x4dc>
   10538:	movs	r0, #10
   1053a:	blx	88d0 <fputc@plt+0x4>
   1053e:	add	sl, pc
   10540:	ldr	r3, [pc, #208]	; (10614 <btrfs_find_root_search@@Base+0x4e0>)
   10542:	add	fp, pc
   10544:	add	r3, pc
   10546:	str	r3, [sp, #12]
   10548:	ldr.w	r8, [r5, #4]!
   1054c:	cmp.w	r8, #0
   10550:	beq.w	1044c <btrfs_find_root_search@@Base+0x318>
   10554:	mov	r1, sl
   10556:	mov	r0, r8
   10558:	blx	83c0 <strcmp@plt>
   1055c:	cbnz	r0, 105ba <btrfs_find_root_search@@Base+0x486>
   1055e:	mov	r1, r4
   10560:	movs	r0, #10
   10562:	blx	88d0 <fputc@plt+0x4>
   10566:	ldr.w	r9, [pc, #176]	; 10618 <btrfs_find_root_search@@Base+0x4e4>
   1056a:	ldr	r2, [pc, #176]	; (1061c <btrfs_find_root_search@@Base+0x4e8>)
   1056c:	mov	r3, r6
   1056e:	add	r9, pc
   10570:	movs	r1, #1
   10572:	add	r2, pc
   10574:	mov	r0, r4
   10576:	str.w	r9, [sp]
   1057a:	blx	8860 <__fprintf_chk@plt+0x4>
   1057e:	ldr	r3, [pc, #160]	; (10620 <btrfs_find_root_search@@Base+0x4ec>)
   10580:	ldr	r2, [pc, #160]	; (10624 <btrfs_find_root_search@@Base+0x4f0>)
   10582:	movs	r1, #1
   10584:	mov	r0, r4
   10586:	ldr.w	r8, [r7, r3]
   1058a:	add	r2, pc
   1058c:	add.w	r3, r8, #4
   10590:	strd	r9, r3, [sp]
   10594:	mov	r3, r6
   10596:	blx	8860 <__fprintf_chk@plt+0x4>
   1059a:	ldr	r3, [sp, #8]
   1059c:	lsls	r3, r3, #28
   1059e:	bpl.n	105b0 <btrfs_find_root_search@@Base+0x47c>
   105a0:	ldr	r2, [pc, #132]	; (10628 <btrfs_find_root_search@@Base+0x4f4>)
   105a2:	add.w	r3, r8, #16
   105a6:	movs	r1, #1
   105a8:	mov	r0, r4
   105aa:	add	r2, pc
   105ac:	blx	8860 <__fprintf_chk@plt+0x4>
   105b0:	mov	r1, r4
   105b2:	movs	r0, #10
   105b4:	blx	88d0 <fputc@plt+0x4>
   105b8:	b.n	10548 <btrfs_find_root_search@@Base+0x414>
   105ba:	ldr	r3, [sp, #12]
   105bc:	mov	r2, fp
   105be:	movs	r1, #1
   105c0:	mov	r0, r4
   105c2:	str.w	r8, [sp, #4]
   105c6:	str	r3, [sp, #0]
   105c8:	mov	r3, r6
   105ca:	blx	8860 <__fprintf_chk@plt+0x4>
   105ce:	b.n	10548 <btrfs_find_root_search@@Base+0x414>
   105d0:	ldr	r2, [pc, #88]	; (1062c <btrfs_find_root_search@@Base+0x4f8>)
   105d2:	mov	r3, r6
   105d4:	movs	r1, #1
   105d6:	mov	r0, r4
   105d8:	add	r2, pc
   105da:	blx	8860 <__fprintf_chk@plt+0x4>
   105de:	mov.w	r0, #4294967295	; 0xffffffff
   105e2:	b.n	1044e <btrfs_find_root_search@@Base+0x31a>
   105e4:	subs	r1, #140	; 0x8c
   105e6:	movs	r5, r0
   105e8:	ldr	r1, [sp, #520]	; 0x208
   105ea:	movs	r2, r0
   105ec:	ldr	r1, [sp, #292]	; 0x124
   105ee:	movs	r2, r0
   105f0:	ldr	r1, [sp, #280]	; 0x118
   105f2:	movs	r2, r0
   105f4:	ldr	r1, [sp, #100]	; 0x64
   105f6:	movs	r2, r0
   105f8:	ldr	r1, [sp, #68]	; 0x44
   105fa:	movs	r2, r0
   105fc:	ldr	r1, [sp, #8]
   105fe:	movs	r2, r0
   10600:	str	r1, [sp, #244]	; 0xf4
   10602:	movs	r2, r0
   10604:	ldr	r0, [sp, #840]	; 0x348
   10606:	movs	r2, r0
   10608:	str	r1, [sp, #60]	; 0x3c
   1060a:	movs	r2, r0
   1060c:	ldr	r0, [sp, #604]	; 0x25c
   1060e:	movs	r2, r0
   10610:	ldr	r0, [sp, #560]	; 0x230
   10612:	movs	r2, r0
   10614:	str	r0, [sp, #804]	; 0x324
   10616:	movs	r2, r0
   10618:	str	r0, [sp, #636]	; 0x27c
   1061a:	movs	r2, r0
   1061c:	ldr	r0, [sp, #456]	; 0x1c8
   1061e:	movs	r2, r0
   10620:	lsls	r0, r2, #9
   10622:	movs	r0, r0
   10624:	ldr	r0, [sp, #440]	; 0x1b8
   10626:	movs	r2, r0
   10628:	cdp	0, 14, cr0, cr8, cr2, {0}
   1062c:	ldr	r0, [sp, #288]	; 0x120
   1062e:	movs	r2, r0
   10630:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   10634:	movs	r4, #0
   10636:	add.w	r8, r0, #8
   1063a:	mov	r6, r1
   1063c:	mov	r7, r2
   1063e:	mov	r9, r4
   10640:	mov.w	sl, #1
   10644:	ldr.w	r5, [r8], #4
   10648:	cbnz	r5, 10650 <btrfs_find_root_search@@Base+0x51c>
   1064a:	add	sp, #16
   1064c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   10650:	ldr	r3, [r5, #16]
   10652:	lsls	r3, r3, #31
   10654:	bmi.n	1069a <btrfs_find_root_search@@Base+0x566>
   10656:	cbz	r6, 10666 <btrfs_find_root_search@@Base+0x532>
   10658:	cmp.w	r9, #0
   1065c:	beq.n	10666 <btrfs_find_root_search@@Base+0x532>
   1065e:	mov	r1, r7
   10660:	movs	r0, #10
   10662:	blx	88d0 <fputc@plt+0x4>
   10666:	ldr	r3, [r5, #12]
   10668:	cbnz	r3, 106a0 <btrfs_find_root_search@@Base+0x56c>
   1066a:	cbz	r4, 10674 <btrfs_find_root_search@@Base+0x540>
   1066c:	mov	r1, r7
   1066e:	movs	r0, #10
   10670:	blx	88d0 <fputc@plt+0x4>
   10674:	ldr	r2, [r5, #16]
   10676:	str	r7, [sp, #8]
   10678:	ubfx	r3, r2, #1, #1
   1067c:	strd	sl, r3, [sp]
   10680:	mov	r3, r6
   10682:	ldr	r1, [r5, #0]
   10684:	ldr	r0, [r5, #8]
   10686:	bl	103e8 <btrfs_find_root_search@@Base+0x2b4>
   1068a:	ldr	r4, [r5, #16]
   1068c:	ands.w	r4, r4, #2
   10690:	beq.n	1069a <btrfs_find_root_search@@Base+0x566>
   10692:	movs	r0, #10
   10694:	movs	r4, #0
   10696:	blx	87d4 <putchar@plt+0x4>
   1069a:	add.w	r9, r9, #1
   1069e:	b.n	10644 <btrfs_find_root_search@@Base+0x510>
   106a0:	cbnz	r6, 106b0 <btrfs_find_root_search@@Base+0x57c>
   106a2:	cmp.w	r9, #0
   106a6:	beq.n	106b0 <btrfs_find_root_search@@Base+0x57c>
   106a8:	mov	r1, r7
   106aa:	movs	r0, #10
   106ac:	blx	88d0 <fputc@plt+0x4>
   106b0:	ldr	r0, [r5, #12]
   106b2:	mov	r2, r7
   106b4:	mov	r1, r6
   106b6:	bl	10630 <btrfs_find_root_search@@Base+0x4fc>
   106ba:	cmp	r6, #0
   106bc:	it	eq
   106be:	moveq	r4, #1
   106c0:	b.n	1069a <btrfs_find_root_search@@Base+0x566>

000106c2 <fixup_argv0@@Base>:
   106c2:	push	{r0, r1, r4, r5, r6, lr}
   106c4:	mov	r4, r0
   106c6:	ldr	r5, [pc, #40]	; (106f0 <fixup_argv0@@Base+0x2e>)
   106c8:	mov	r6, r1
   106ca:	add	r5, pc
   106cc:	mov	r0, r5
   106ce:	blx	8748 <strlen@plt>
   106d2:	ldr	r3, [pc, #32]	; (106f4 <fixup_argv0@@Base+0x32>)
   106d4:	movs	r2, #1
   106d6:	str	r6, [sp, #4]
   106d8:	add	r3, pc
   106da:	str	r3, [sp, #0]
   106dc:	mov.w	r3, #4294967295	; 0xffffffff
   106e0:	rsb	r1, r0, #4096	; 0x1000
   106e4:	add	r0, r5
   106e6:	blx	89bc <__snprintf_chk@plt>
   106ea:	str	r5, [r4, #0]
   106ec:	add	sp, #8
   106ee:	pop	{r4, r5, r6, pc}
   106f0:	subs	r2, #2
   106f2:	movs	r5, r0
   106f4:	ldc	0, cr0, [fp, #8]!

000106f8 <set_argv0@@Base>:
   106f8:	push	{r3, lr}
   106fa:	mov.w	r2, #4096	; 0x1000
   106fe:	ldr	r3, [pc, #20]	; (10714 <set_argv0@@Base+0x1c>)
   10700:	ldr	r1, [r0, #0]
   10702:	add	r3, pc
   10704:	mov	r0, r3
   10706:	blx	87e0 <strncpy@plt>
   1070a:	movs	r2, #0
   1070c:	strb.w	r2, [r0, #4095]	; 0xfff
   10710:	pop	{r3, pc}
   10712:	nop
   10714:	subs	r1, #202	; 0xca
   10716:	movs	r5, r0

00010718 <check_argc_exact@@Base>:
   10718:	ldr	r3, [pc, #64]	; (1075c <check_argc_exact@@Base+0x44>)
   1071a:	cmp	r0, r1
   1071c:	push	{r4, r5, lr}
   1071e:	add	r3, pc
   10720:	sub	sp, #20
   10722:	mov	r5, r0
   10724:	mov	r4, r1
   10726:	beq.n	1074a <check_argc_exact@@Base+0x32>
   10728:	ldr	r2, [pc, #52]	; (10760 <check_argc_exact@@Base+0x48>)
   1072a:	cmp	r1, #1
   1072c:	ldr	r3, [r3, r2]
   1072e:	ldr	r0, [r3, #0]
   10730:	bgt.n	10754 <check_argc_exact@@Base+0x3c>
   10732:	ldr	r3, [pc, #48]	; (10764 <check_argc_exact@@Base+0x4c>)
   10734:	add	r3, pc
   10736:	ldr	r2, [pc, #48]	; (10768 <check_argc_exact@@Base+0x50>)
   10738:	movs	r1, #1
   1073a:	strd	r3, r5, [sp, #4]
   1073e:	ldr	r3, [pc, #44]	; (1076c <check_argc_exact@@Base+0x54>)
   10740:	add	r2, pc
   10742:	str	r4, [sp, #0]
   10744:	add	r3, pc
   10746:	blx	8860 <__fprintf_chk@plt+0x4>
   1074a:	subs	r0, r5, r4
   1074c:	it	ne
   1074e:	movne	r0, #1
   10750:	add	sp, #20
   10752:	pop	{r4, r5, pc}
   10754:	ldr	r3, [pc, #24]	; (10770 <check_argc_exact@@Base+0x58>)
   10756:	add	r3, pc
   10758:	b.n	10736 <check_argc_exact@@Base+0x1e>
   1075a:	nop
   1075c:	adds	r6, #102	; 0x66
   1075e:	movs	r5, r0
   10760:	lsls	r0, r6, #8
   10762:	movs	r0, r0
   10764:	ldrh	r1, [r3, #54]	; 0x36
   10766:	movs	r2, r0
   10768:	str	r6, [sp, #972]	; 0x3cc
   1076a:	movs	r2, r0
   1076c:	subs	r1, #136	; 0x88
   1076e:	movs	r5, r0
   10770:	ldc	0, cr0, [pc, #-8]!	; 1076c <check_argc_exact@@Base+0x54>

00010774 <check_argc_min@@Base>:
   10774:	ldr	r3, [pc, #40]	; (107a0 <check_argc_min@@Base+0x2c>)
   10776:	cmp	r0, r1
   10778:	push	{r0, r1, r4, lr}
   1077a:	add	r3, pc
   1077c:	bge.n	1079c <check_argc_min@@Base+0x28>
   1077e:	ldr	r2, [pc, #36]	; (107a4 <check_argc_min@@Base+0x30>)
   10780:	ldr	r4, [r3, r2]
   10782:	ldr	r3, [pc, #36]	; (107a8 <check_argc_min@@Base+0x34>)
   10784:	ldr	r2, [pc, #36]	; (107ac <check_argc_min@@Base+0x38>)
   10786:	strd	r0, r1, [sp]
   1078a:	add	r3, pc
   1078c:	ldr	r0, [r4, #0]
   1078e:	add	r2, pc
   10790:	movs	r1, #1
   10792:	blx	8860 <__fprintf_chk@plt+0x4>
   10796:	movs	r0, #1
   10798:	add	sp, #8
   1079a:	pop	{r4, pc}
   1079c:	movs	r0, #0
   1079e:	b.n	10798 <check_argc_min@@Base+0x24>
   107a0:	adds	r6, #10
   107a2:	movs	r5, r0
   107a4:	lsls	r0, r6, #8
   107a6:	movs	r0, r0
   107a8:	subs	r1, #66	; 0x42
   107aa:	movs	r5, r0
   107ac:	str	r6, [sp, #844]	; 0x34c
   107ae:	movs	r2, r0

000107b0 <check_argc_max@@Base>:
   107b0:	ldr	r3, [pc, #40]	; (107dc <check_argc_max@@Base+0x2c>)
   107b2:	cmp	r0, r1
   107b4:	push	{r0, r1, r4, lr}
   107b6:	add	r3, pc
   107b8:	ble.n	107d8 <check_argc_max@@Base+0x28>
   107ba:	ldr	r2, [pc, #36]	; (107e0 <check_argc_max@@Base+0x30>)
   107bc:	ldr	r4, [r3, r2]
   107be:	ldr	r3, [pc, #36]	; (107e4 <check_argc_max@@Base+0x34>)
   107c0:	ldr	r2, [pc, #36]	; (107e8 <check_argc_max@@Base+0x38>)
   107c2:	strd	r0, r1, [sp]
   107c6:	add	r3, pc
   107c8:	ldr	r0, [r4, #0]
   107ca:	add	r2, pc
   107cc:	movs	r1, #1
   107ce:	blx	8860 <__fprintf_chk@plt+0x4>
   107d2:	movs	r0, #1
   107d4:	add	sp, #8
   107d6:	pop	{r4, pc}
   107d8:	movs	r0, #0
   107da:	b.n	107d4 <check_argc_max@@Base+0x24>
   107dc:	adds	r5, #206	; 0xce
   107de:	movs	r5, r0
   107e0:	lsls	r0, r6, #8
   107e2:	movs	r0, r0
   107e4:	subs	r1, #6
   107e6:	movs	r5, r0
   107e8:	str	r6, [sp, #824]	; 0x338
   107ea:	movs	r2, r0

000107ec <clean_args_no_options_relaxed@@Base>:
   107ec:	push	{r4, lr}
   107ee:	cmp	r1, #1
   107f0:	ldr	r4, [pc, #24]	; (1080c <clean_args_no_options_relaxed@@Base+0x20>)
   107f2:	add	r4, pc
   107f4:	ble.n	1080a <clean_args_no_options_relaxed@@Base+0x1e>
   107f6:	ldr	r1, [pc, #24]	; (10810 <clean_args_no_options_relaxed@@Base+0x24>)
   107f8:	ldr	r0, [r2, #4]
   107fa:	add	r1, pc
   107fc:	blx	83c0 <strcmp@plt>
   10800:	cbnz	r0, 1080a <clean_args_no_options_relaxed@@Base+0x1e>
   10802:	ldr	r3, [pc, #16]	; (10814 <clean_args_no_options_relaxed@@Base+0x28>)
   10804:	movs	r2, #2
   10806:	ldr	r3, [r4, r3]
   10808:	str	r2, [r3, #0]
   1080a:	pop	{r4, pc}
   1080c:	adds	r5, #146	; 0x92
   1080e:	movs	r5, r0
   10810:	ldrh	r6, [r4, #16]
   10812:	movs	r2, r0
   10814:	lsls	r4, r4, #8
	...

00010818 <output_format_name@@Base>:
   10818:	ldr	r3, [pc, #36]	; (10840 <output_format_name@@Base+0x28>)
   1081a:	cmp	r0, #4
   1081c:	add	r3, pc
   1081e:	beq.n	10834 <output_format_name@@Base+0x1c>
   10820:	cmp	r0, #8
   10822:	bne.n	10838 <output_format_name@@Base+0x20>
   10824:	movs	r2, #1
   10826:	movs	r0, #12
   10828:	muls	r0, r2
   1082a:	ldr	r2, [pc, #24]	; (10844 <output_format_name@@Base+0x2c>)
   1082c:	ldr	r3, [r3, r2]
   1082e:	adds	r0, #4
   10830:	add	r0, r3
   10832:	bx	lr
   10834:	movs	r2, #0
   10836:	b.n	10826 <output_format_name@@Base+0xe>
   10838:	ldr	r0, [pc, #12]	; (10848 <output_format_name@@Base+0x30>)
   1083a:	add	r0, pc
   1083c:	bx	lr
   1083e:	nop
   10840:	adds	r5, #104	; 0x68
   10842:	movs	r5, r0
   10844:	lsls	r0, r2, #9
   10846:	movs	r0, r0
   10848:	str	r6, [sp, #584]	; 0x248
   1084a:	movs	r2, r0

0001084c <usage_command@@Base>:
   1084c:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   1084e:	mov	r4, r0
   10850:	ldr	r5, [pc, #56]	; (1088c <usage_command@@Base+0x40>)
   10852:	mov	r6, r2
   10854:	mov	r3, r1
   10856:	ldr	r0, [r0, #8]
   10858:	add	r5, pc
   1085a:	ldr	r1, [r4, #0]
   1085c:	ldr	r2, [r4, #16]
   1085e:	cbz	r6, 10882 <usage_command@@Base+0x36>
   10860:	ldr	r4, [pc, #44]	; (10890 <usage_command@@Base+0x44>)
   10862:	ldr	r4, [r5, r4]
   10864:	movs	r5, #0
   10866:	ldr	r4, [r4, #0]
   10868:	strd	r5, r5, [sp]
   1086c:	str	r4, [sp, #8]
   1086e:	bl	103e8 <btrfs_find_root_search@@Base+0x2b4>
   10872:	cbnz	r0, 10886 <usage_command@@Base+0x3a>
   10874:	mov	r1, r4
   10876:	movs	r0, #10
   10878:	add	sp, #16
   1087a:	ldmia.w	sp!, {r4, r5, r6, lr}
   1087e:	b.w	88cc <fputc@plt>
   10882:	ldr	r4, [pc, #16]	; (10894 <usage_command@@Base+0x48>)
   10884:	b.n	10862 <usage_command@@Base+0x16>
   10886:	add	sp, #16
   10888:	pop	{r4, r5, r6, pc}
   1088a:	nop
   1088c:	adds	r5, #44	; 0x2c
   1088e:	movs	r5, r0
   10890:	lsls	r0, r6, #8
   10892:	movs	r0, r0
   10894:	lsls	r4, r2, #9
	...

00010898 <usage_unknown_option@@Base>:
   10898:	push	{r0, r1, r7, lr}
   1089a:	mov	r6, r0
   1089c:	ldr	r3, [r0, #8]
   1089e:	mov	r8, r1
   108a0:	ldr	r7, [pc, #124]	; (10920 <usage_unknown_option@@Base+0x88>)
   108a2:	ldr	r2, [r3, #0]
   108a4:	movs	r3, #0
   108a6:	mov	r4, r3
   108a8:	add	r7, pc
   108aa:	mov	r1, r3
   108ac:	ldrb	r3, [r2, r4]
   108ae:	cmp	r3, #60	; 0x3c
   108b0:	bne.n	10906 <usage_unknown_option@@Base+0x6e>
   108b2:	subs	r4, #1
   108b4:	ldr	r3, [pc, #108]	; (10924 <usage_unknown_option@@Base+0x8c>)
   108b6:	movs	r1, #1
   108b8:	ldr	r5, [r7, r3]
   108ba:	mov	r3, r4
   108bc:	str	r2, [sp, #0]
   108be:	ldr	r2, [pc, #104]	; (10928 <usage_unknown_option@@Base+0x90>)
   108c0:	ldr	r0, [r5, #0]
   108c2:	add	r2, pc
   108c4:	blx	8860 <__fprintf_chk@plt+0x4>
   108c8:	ldr	r3, [pc, #96]	; (1092c <usage_unknown_option@@Base+0x94>)
   108ca:	ldr	r3, [r7, r3]
   108cc:	ldr	r3, [r3, #0]
   108ce:	cbnz	r3, 1091a <usage_unknown_option@@Base+0x82>
   108d0:	ldr	r3, [pc, #92]	; (10930 <usage_unknown_option@@Base+0x98>)
   108d2:	ldr	r2, [pc, #96]	; (10934 <usage_unknown_option@@Base+0x9c>)
   108d4:	ldr	r3, [r7, r3]
   108d6:	add	r2, pc
   108d8:	ldr	r3, [r3, #0]
   108da:	add.w	r3, r3, #1073741824	; 0x40000000
   108de:	subs	r3, #1
   108e0:	ldr.w	r3, [r8, r3, lsl #2]
   108e4:	movs	r1, #1
   108e6:	ldr	r0, [r5, #0]
   108e8:	blx	8860 <__fprintf_chk@plt+0x4>
   108ec:	ldr	r3, [r6, #8]
   108ee:	ldr	r2, [pc, #72]	; (10938 <usage_unknown_option@@Base+0xa0>)
   108f0:	movs	r1, #1
   108f2:	ldr	r3, [r3, #0]
   108f4:	add	r2, pc
   108f6:	str	r3, [sp, #0]
   108f8:	mov	r3, r4
   108fa:	ldr	r0, [r5, #0]
   108fc:	blx	8860 <__fprintf_chk@plt+0x4>
   10900:	movs	r0, #1
   10902:	blx	873c <exit@plt>
   10906:	cmp	r3, #91	; 0x5b
   10908:	beq.n	108b2 <usage_unknown_option@@Base+0x1a>
   1090a:	cmp	r1, #32
   1090c:	bne.n	10912 <usage_unknown_option@@Base+0x7a>
   1090e:	cmp	r3, #45	; 0x2d
   10910:	beq.n	108b2 <usage_unknown_option@@Base+0x1a>
   10912:	adds	r4, #1
   10914:	cmp	r3, #0
   10916:	bne.n	108aa <usage_unknown_option@@Base+0x12>
   10918:	b.n	108b4 <usage_unknown_option@@Base+0x1c>
   1091a:	ldr	r2, [pc, #32]	; (1093c <usage_unknown_option@@Base+0xa4>)
   1091c:	add	r2, pc
   1091e:	b.n	108e4 <usage_unknown_option@@Base+0x4c>
   10920:	adds	r4, #220	; 0xdc
   10922:	movs	r5, r0
   10924:	lsls	r0, r6, #8
   10926:	movs	r0, r0
   10928:	str	r6, [sp, #72]	; 0x48
   1092a:	movs	r2, r0
   1092c:	lsls	r4, r5, #8
   1092e:	movs	r0, r0
   10930:	lsls	r4, r4, #8
   10932:	movs	r0, r0
   10934:	str	r6, [sp, #20]
   10936:	movs	r2, r0
   10938:	str	r6, [sp, #88]	; 0x58
   1093a:	movs	r2, r0
   1093c:	str	r5, [sp, #868]	; 0x364
   1093e:	movs	r2, r0

00010940 <usage@@Base>:
   10940:	push	{r0, r1, r2, r3, r4, lr}
   10942:	ldr	r3, [pc, #44]	; (10970 <usage@@Base+0x30>)
   10944:	ldr	r2, [pc, #44]	; (10974 <usage@@Base+0x34>)
   10946:	add	r3, pc
   10948:	ldr	r3, [r3, r2]
   1094a:	movs	r2, #0
   1094c:	mov	r1, r2
   1094e:	ldr	r4, [r3, #0]
   10950:	movs	r3, #1
   10952:	strd	r2, r2, [sp]
   10956:	str	r4, [sp, #8]
   10958:	ldr	r0, [r0, #8]
   1095a:	bl	103e8 <btrfs_find_root_search@@Base+0x2b4>
   1095e:	cbnz	r0, 10968 <usage@@Base+0x28>
   10960:	mov	r1, r4
   10962:	movs	r0, #10
   10964:	blx	88d0 <fputc@plt+0x4>
   10968:	movs	r0, #1
   1096a:	blx	873c <exit@plt>
   1096e:	nop
   10970:	adds	r4, #62	; 0x3e
   10972:	movs	r5, r0
   10974:	lsls	r0, r6, #8
	...

00010978 <clean_args_no_options@@Base>:
   10978:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1097c:	mov	r4, r0
   1097e:	ldr	r7, [pc, #56]	; (109b8 <clean_args_no_options@@Base+0x40>)
   10980:	mov	r5, r1
   10982:	ldr.w	r8, [pc, #56]	; 109bc <clean_args_no_options@@Base+0x44>
   10986:	mov	r6, r2
   10988:	add	r7, pc
   1098a:	mov.w	r9, #0
   1098e:	add	r8, pc
   10990:	mov	r3, r7
   10992:	mov	r2, r8
   10994:	mov	r1, r6
   10996:	mov	r0, r5
   10998:	str.w	r9, [sp]
   1099c:	blx	8718 <getopt_long@plt>
   109a0:	cmp	r0, #0
   109a2:	blt.n	109b0 <clean_args_no_options@@Base+0x38>
   109a4:	ldr	r1, [r4, #8]
   109a6:	cmp	r1, #0
   109a8:	beq.n	10990 <clean_args_no_options@@Base+0x18>
   109aa:	mov	r0, r4
   109ac:	bl	10940 <usage@@Base>
   109b0:	add	sp, #12
   109b2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   109b6:	nop
   109b8:	str	r7, [sp, #592]	; 0x250
   109ba:	movs	r2, r0
   109bc:	ldrh	r7, [r7, #34]	; 0x22
   109be:	movs	r2, r0

000109c0 <usage_command_group_short@@Base>:
   109c0:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   109c4:	mov	r5, r0
   109c6:	ldr	r7, [pc, #248]	; (10ac0 <usage_command_group_short@@Base+0x100>)
   109c8:	ldr	r3, [pc, #248]	; (10ac4 <usage_command_group_short@@Base+0x104>)
   109ca:	add	r7, pc
   109cc:	ldr	r6, [r0, #0]
   109ce:	ldr	r3, [r7, r3]
   109d0:	ldr	r4, [r3, #0]
   109d2:	cmp	r6, #0
   109d4:	bne.n	10a54 <usage_command_group_short@@Base+0x94>
   109d6:	mov	r1, r4
   109d8:	movs	r0, #10
   109da:	blx	88d0 <fputc@plt+0x4>
   109de:	ldr	r0, [pc, #232]	; (10ac8 <usage_command_group_short@@Base+0x108>)
   109e0:	mov	r1, r4
   109e2:	ldr.w	r8, [pc, #232]	; 10acc <usage_command_group_short@@Base+0x10c>
   109e6:	add	r0, pc
   109e8:	adds	r5, #8
   109ea:	blx	8968 <fputs@plt+0x4>
   109ee:	add	r8, pc
   109f0:	mov	r6, r5
   109f2:	ldr.w	r3, [r6], #4
   109f6:	cmp	r3, #0
   109f8:	bne.n	10a80 <usage_command_group_short@@Base+0xc0>
   109fa:	ldr	r0, [pc, #212]	; (10ad0 <usage_command_group_short@@Base+0x110>)
   109fc:	mov	r1, r4
   109fe:	ldr	r6, [pc, #212]	; (10ad4 <usage_command_group_short@@Base+0x114>)
   10a00:	add	r0, pc
   10a02:	blx	8968 <fputs@plt+0x4>
   10a06:	add	r6, pc
   10a08:	ldr.w	r3, [r5], #4
   10a0c:	cmp	r3, #0
   10a0e:	bne.n	10a9e <usage_command_group_short@@Base+0xde>
   10a10:	mov	r1, r4
   10a12:	movs	r0, #10
   10a14:	blx	88d0 <fputc@plt+0x4>
   10a18:	ldr	r3, [pc, #188]	; (10ad8 <usage_command_group_short@@Base+0x118>)
   10a1a:	ldr	r0, [pc, #192]	; (10adc <usage_command_group_short@@Base+0x11c>)
   10a1c:	ldr	r4, [r7, r3]
   10a1e:	add	r0, pc
   10a20:	ldr	r1, [r4, #0]
   10a22:	blx	8968 <fputs@plt+0x4>
   10a26:	ldr	r0, [pc, #184]	; (10ae0 <usage_command_group_short@@Base+0x120>)
   10a28:	ldr	r1, [r4, #0]
   10a2a:	add	r0, pc
   10a2c:	blx	8968 <fputs@plt+0x4>
   10a30:	ldr	r0, [pc, #176]	; (10ae4 <usage_command_group_short@@Base+0x124>)
   10a32:	ldr	r1, [r4, #0]
   10a34:	add	r0, pc
   10a36:	blx	8968 <fputs@plt+0x4>
   10a3a:	ldr	r0, [pc, #172]	; (10ae8 <usage_command_group_short@@Base+0x128>)
   10a3c:	ldr	r1, [r4, #0]
   10a3e:	add	r0, pc
   10a40:	blx	8968 <fputs@plt+0x4>
   10a44:	ldr	r0, [pc, #164]	; (10aec <usage_command_group_short@@Base+0x12c>)
   10a46:	ldr	r1, [r4, #0]
   10a48:	add	r0, pc
   10a4a:	add	sp, #8
   10a4c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   10a50:	b.w	8964 <fputs@plt>
   10a54:	ldr	r3, [r6, #0]
   10a56:	cmp	r3, #0
   10a58:	beq.n	109d6 <usage_command_group_short@@Base+0x16>
   10a5a:	ldr	r2, [pc, #148]	; (10af0 <usage_command_group_short@@Base+0x130>)
   10a5c:	movs	r1, #1
   10a5e:	mov	r0, r4
   10a60:	ldr.w	r8, [pc, #144]	; 10af4 <usage_command_group_short@@Base+0x134>
   10a64:	add	r2, pc
   10a66:	blx	8860 <__fprintf_chk@plt+0x4>
   10a6a:	add	r8, pc
   10a6c:	ldr.w	r3, [r6, #4]!
   10a70:	cmp	r3, #0
   10a72:	beq.n	109d6 <usage_command_group_short@@Base+0x16>
   10a74:	mov	r2, r8
   10a76:	movs	r1, #1
   10a78:	mov	r0, r4
   10a7a:	blx	8860 <__fprintf_chk@plt+0x4>
   10a7e:	b.n	10a6c <usage_command_group_short@@Base+0xac>
   10a80:	ldr	r2, [r3, #16]
   10a82:	lsls	r1, r2, #31
   10a84:	bmi.n	109f2 <usage_command_group_short@@Base+0x32>
   10a86:	ldr	r1, [r3, #12]
   10a88:	cmp	r1, #0
   10a8a:	beq.n	109f2 <usage_command_group_short@@Base+0x32>
   10a8c:	ldr	r2, [r1, #4]
   10a8e:	mov	r0, r4
   10a90:	movs	r1, #1
   10a92:	str	r2, [sp, #0]
   10a94:	mov	r2, r8
   10a96:	ldr	r3, [r3, #0]
   10a98:	blx	8860 <__fprintf_chk@plt+0x4>
   10a9c:	b.n	109f2 <usage_command_group_short@@Base+0x32>
   10a9e:	ldr	r2, [r3, #16]
   10aa0:	lsls	r2, r2, #31
   10aa2:	bmi.n	10a08 <usage_command_group_short@@Base+0x48>
   10aa4:	ldr	r2, [r3, #12]
   10aa6:	cmp	r2, #0
   10aa8:	bne.n	10a08 <usage_command_group_short@@Base+0x48>
   10aaa:	ldr	r2, [r3, #8]
   10aac:	movs	r1, #1
   10aae:	mov	r0, r4
   10ab0:	ldr	r2, [r2, #4]
   10ab2:	str	r2, [sp, #0]
   10ab4:	mov	r2, r6
   10ab6:	ldr	r3, [r3, #0]
   10ab8:	blx	8860 <__fprintf_chk@plt+0x4>
   10abc:	b.n	10a08 <usage_command_group_short@@Base+0x48>
   10abe:	nop
   10ac0:	adds	r3, #186	; 0xba
   10ac2:	movs	r5, r0
   10ac4:	lsls	r4, r2, #9
   10ac6:	movs	r0, r0
   10ac8:	str	r5, [sp, #304]	; 0x130
   10aca:	movs	r2, r0
   10acc:	str	r5, [sp, #428]	; 0x1ac
   10ace:	movs	r2, r0
   10ad0:	str	r5, [sp, #408]	; 0x198
   10ad2:	movs	r2, r0
   10ad4:	str	r5, [sp, #332]	; 0x14c
   10ad6:	movs	r2, r0
   10ad8:	lsls	r0, r6, #8
   10ada:	movs	r0, r0
   10adc:	str	r5, [sp, #336]	; 0x150
   10ade:	movs	r2, r0
   10ae0:	str	r5, [sp, #540]	; 0x21c
   10ae2:	movs	r2, r0
   10ae4:	str	r5, [sp, #784]	; 0x310
   10ae6:	movs	r2, r0
   10ae8:	str	r5, [sp, #1012]	; 0x3f4
   10aea:	movs	r2, r0
   10aec:	str	r6, [sp, #208]	; 0xd0
   10aee:	movs	r2, r0
   10af0:	str	r4, [sp, #892]	; 0x37c
   10af2:	movs	r2, r0
   10af4:	str	r4, [sp, #912]	; 0x390
   10af6:	movs	r2, r0

00010af8 <usage_command_group@@Base>:
   10af8:	ldr	r3, [pc, #120]	; (10b74 <usage_command_group@@Base+0x7c>)
   10afa:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   10afe:	add	r3, pc
   10b00:	ldr	r5, [r0, #0]
   10b02:	mov	r6, r0
   10b04:	mov	r7, r1
   10b06:	cbz	r2, 10b32 <usage_command_group@@Base+0x3a>
   10b08:	ldr	r2, [pc, #108]	; (10b78 <usage_command_group@@Base+0x80>)
   10b0a:	ldr	r3, [r3, r2]
   10b0c:	ldr	r4, [r3, #0]
   10b0e:	cbnz	r5, 10b36 <usage_command_group@@Base+0x3e>
   10b10:	mov	r1, r4
   10b12:	movs	r0, #10
   10b14:	blx	88d0 <fputc@plt+0x4>
   10b18:	mov	r2, r4
   10b1a:	mov	r1, r7
   10b1c:	mov	r0, r6
   10b1e:	bl	10630 <btrfs_find_root_search@@Base+0x4fc>
   10b22:	mov	r1, r4
   10b24:	movs	r0, #10
   10b26:	blx	88d0 <fputc@plt+0x4>
   10b2a:	ldr	r3, [r6, #4]
   10b2c:	cbnz	r3, 10b62 <usage_command_group@@Base+0x6a>
   10b2e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   10b32:	ldr	r2, [pc, #72]	; (10b7c <usage_command_group@@Base+0x84>)
   10b34:	b.n	10b0a <usage_command_group@@Base+0x12>
   10b36:	ldr	r3, [r5, #0]
   10b38:	cmp	r3, #0
   10b3a:	beq.n	10b10 <usage_command_group@@Base+0x18>
   10b3c:	ldr	r2, [pc, #64]	; (10b80 <usage_command_group@@Base+0x88>)
   10b3e:	movs	r1, #1
   10b40:	mov	r0, r4
   10b42:	ldr.w	r8, [pc, #64]	; 10b84 <usage_command_group@@Base+0x8c>
   10b46:	add	r2, pc
   10b48:	blx	8860 <__fprintf_chk@plt+0x4>
   10b4c:	add	r8, pc
   10b4e:	ldr.w	r3, [r5, #4]!
   10b52:	cmp	r3, #0
   10b54:	beq.n	10b10 <usage_command_group@@Base+0x18>
   10b56:	mov	r2, r8
   10b58:	movs	r1, #1
   10b5a:	mov	r0, r4
   10b5c:	blx	8860 <__fprintf_chk@plt+0x4>
   10b60:	b.n	10b4e <usage_command_group@@Base+0x56>
   10b62:	ldr	r2, [pc, #36]	; (10b88 <usage_command_group@@Base+0x90>)
   10b64:	mov	r0, r4
   10b66:	movs	r1, #1
   10b68:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   10b6c:	add	r2, pc
   10b6e:	b.w	885c <__fprintf_chk@plt>
   10b72:	nop
   10b74:	adds	r2, #134	; 0x86
   10b76:	movs	r5, r0
   10b78:	lsls	r0, r6, #8
   10b7a:	movs	r0, r0
   10b7c:	lsls	r4, r2, #9
   10b7e:	movs	r0, r0
   10b80:	str	r3, [sp, #1012]	; 0x3f4
   10b82:	movs	r2, r0
   10b84:	str	r4, [sp, #8]
   10b86:	movs	r2, r0
   10b88:	str	r5, [sp, #652]	; 0x28c
   10b8a:	movs	r2, r0

00010b8c <help_unknown_token@@Base>:
   10b8c:	ldr	r3, [pc, #44]	; (10bbc <help_unknown_token@@Base+0x30>)
   10b8e:	mov	r4, r1
   10b90:	push	{r0, r1, r2, lr}
   10b92:	add	r3, pc
   10b94:	ldr	r2, [pc, #40]	; (10bc0 <help_unknown_token@@Base+0x34>)
   10b96:	movs	r1, #1
   10b98:	ldr	r5, [r3, r2]
   10b9a:	ldr	r3, [pc, #40]	; (10bc4 <help_unknown_token@@Base+0x38>)
   10b9c:	ldr	r2, [pc, #40]	; (10bc8 <help_unknown_token@@Base+0x3c>)
   10b9e:	add	r3, pc
   10ba0:	str	r0, [sp, #0]
   10ba2:	add	r2, pc
   10ba4:	ldr	r0, [r5, #0]
   10ba6:	blx	8860 <__fprintf_chk@plt+0x4>
   10baa:	mov	r0, r4
   10bac:	movs	r2, #1
   10bae:	movs	r1, #0
   10bb0:	bl	10af8 <usage_command_group@@Base>
   10bb4:	movs	r0, #1
   10bb6:	blx	873c <exit@plt>
   10bba:	nop
   10bbc:	adds	r1, #242	; 0xf2
   10bbe:	movs	r5, r0
   10bc0:	lsls	r0, r6, #8
   10bc2:	movs	r0, r0
   10bc4:	adds	r5, #46	; 0x2e
   10bc6:	movs	r5, r0
   10bc8:	str	r5, [sp, #112]	; 0x70
   10bca:	movs	r2, r0

00010bcc <help_ambiguous_token@@Base>:
   10bcc:	ldr	r3, [pc, #84]	; (10c24 <help_ambiguous_token@@Base+0x58>)
   10bce:	mov	r4, r1
   10bd0:	ldr	r2, [pc, #84]	; (10c28 <help_ambiguous_token@@Base+0x5c>)
   10bd2:	mov	r5, r0
   10bd4:	add	r3, pc
   10bd6:	ldr.w	r8, [pc, #84]	; 10c2c <help_ambiguous_token@@Base+0x60>
   10bda:	push	{r0, r1, r7, lr}
   10bdc:	movs	r1, #1
   10bde:	ldr	r7, [r3, r2]
   10be0:	adds	r4, #8
   10be2:	ldr	r3, [pc, #76]	; (10c30 <help_ambiguous_token@@Base+0x64>)
   10be4:	add	r8, pc
   10be6:	ldr	r2, [pc, #76]	; (10c34 <help_ambiguous_token@@Base+0x68>)
   10be8:	str	r0, [sp, #0]
   10bea:	add	r3, pc
   10bec:	add	r2, pc
   10bee:	ldr	r0, [r7, #0]
   10bf0:	blx	8860 <__fprintf_chk@plt+0x4>
   10bf4:	ldr	r0, [pc, #64]	; (10c38 <help_ambiguous_token@@Base+0x6c>)
   10bf6:	ldr	r1, [r7, #0]
   10bf8:	add	r0, pc
   10bfa:	blx	8968 <fputs@plt+0x4>
   10bfe:	ldr.w	r6, [r4], #4
   10c02:	cbnz	r6, 10c0a <help_ambiguous_token@@Base+0x3e>
   10c04:	movs	r0, #1
   10c06:	blx	873c <exit@plt>
   10c0a:	ldr	r0, [r6, #0]
   10c0c:	mov	r1, r5
   10c0e:	bl	31234 <prefixcmp@@Base>
   10c12:	cmp	r0, #0
   10c14:	bne.n	10bfe <help_ambiguous_token@@Base+0x32>
   10c16:	ldr	r3, [r6, #0]
   10c18:	mov	r2, r8
   10c1a:	ldr	r0, [r7, #0]
   10c1c:	movs	r1, #1
   10c1e:	blx	8860 <__fprintf_chk@plt+0x4>
   10c22:	b.n	10bfe <help_ambiguous_token@@Base+0x32>
   10c24:	adds	r1, #176	; 0xb0
   10c26:	movs	r5, r0
   10c28:	lsls	r0, r6, #8
   10c2a:	movs	r0, r0
   10c2c:	str	r5, [sp, #168]	; 0xa8
   10c2e:	movs	r2, r0
   10c30:	adds	r4, #226	; 0xe2
   10c32:	movs	r5, r0
   10c34:	str	r4, [sp, #936]	; 0x3a8
   10c36:	movs	r2, r0
   10c38:	str	r4, [sp, #992]	; 0x3e0
   10c3a:	movs	r2, r0

00010c3c <help_command_group@@Base>:
   10c3c:	cmp	r1, #1
   10c3e:	push	{r4, lr}
   10c40:	mov	r4, r0
   10c42:	ble.n	10c60 <help_command_group@@Base+0x24>
   10c44:	ldr	r1, [pc, #28]	; (10c64 <help_command_group@@Base+0x28>)
   10c46:	ldr	r0, [r2, #4]
   10c48:	add	r1, pc
   10c4a:	blx	83c0 <strcmp@plt>
   10c4e:	clz	r1, r0
   10c52:	lsrs	r1, r1, #5
   10c54:	mov	r0, r4
   10c56:	movs	r2, #0
   10c58:	ldmia.w	sp!, {r4, lr}
   10c5c:	b.w	10af8 <usage_command_group@@Base>
   10c60:	movs	r1, #0
   10c62:	b.n	10c54 <help_command_group@@Base+0x18>
   10c64:	str	r4, [sp, #812]	; 0x32c
   10c66:	movs	r2, r0
   10c68:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c6c:	sub.w	sp, sp, #4096	; 0x1000
   10c70:	sub	sp, #20
   10c72:	mov	r4, r1
   10c74:	ldr	r1, [pc, #448]	; (10e38 <help_command_group@@Base+0x1fc>)
   10c76:	mov	r5, r2
   10c78:	mov	r9, r3
   10c7a:	ldr	r2, [pc, #448]	; (10e3c <help_command_group@@Base+0x200>)
   10c7c:	add.w	r3, sp, #4128	; 0x1020
   10c80:	add	r1, pc
   10c82:	add	r6, sp, #16
   10c84:	adds	r3, #24
   10c86:	ldr	r2, [r1, r2]
   10c88:	mov	fp, r0
   10c8a:	ldr	r7, [r3, #0]
   10c8c:	add.w	r3, sp, #4096	; 0x1000
   10c90:	ldr	r2, [r2, #0]
   10c92:	str	r2, [r3, #12]
   10c94:	mov.w	r2, #0
   10c98:	mov	r0, r6
   10c9a:	movw	r2, #4092	; 0xffc
   10c9e:	movs	r1, #0
   10ca0:	adds	r3, #12
   10ca2:	str.w	r1, [r6, #-4]
   10ca6:	sub.w	sl, r6, #4
   10caa:	blx	87c4 <memset@plt+0x4>
   10cae:	mov	r8, r4
   10cb0:	mov	r2, r5
   10cb2:	cmp.w	fp, #0
   10cb6:	beq.n	10cee <help_command_group@@Base+0xb2>
   10cb8:	add.w	r1, r4, #4096	; 0x1000
   10cbc:	mov	r0, r4
   10cbe:	bl	12fc4 <path_cat_out@@Base>
   10cc2:	subs	r4, r0, #0
   10cc4:	bge.n	10d06 <help_command_group@@Base+0xca>
   10cc6:	ldr	r0, [pc, #376]	; (10e40 <help_command_group@@Base+0x204>)
   10cc8:	mov	r2, r5
   10cca:	mov	r1, r9
   10ccc:	add	r0, pc
   10cce:	bl	16b70 <__btrfs_error@@Base>
   10cd2:	ldr	r1, [pc, #368]	; (10e44 <help_command_group@@Base+0x208>)
   10cd4:	add.w	r3, sp, #4096	; 0x1000
   10cd8:	ldr	r2, [pc, #352]	; (10e3c <help_command_group@@Base+0x200>)
   10cda:	adds	r3, #12
   10cdc:	add	r1, pc
   10cde:	ldr	r2, [r1, r2]
   10ce0:	ldr	r1, [r2, #0]
   10ce2:	ldr	r2, [r3, #0]
   10ce4:	eors	r1, r2
   10ce6:	beq.w	10e2a <help_command_group@@Base+0x1ee>
   10cea:	blx	8510 <__stack_chk_fail@plt>
   10cee:	mov	r1, r4
   10cf0:	mov	r0, sl
   10cf2:	bl	12fc4 <path_cat_out@@Base>
   10cf6:	subs	r4, r0, #0
   10cf8:	bge.n	10d04 <help_command_group@@Base+0xc8>
   10cfa:	ldr	r0, [pc, #332]	; (10e48 <help_command_group@@Base+0x20c>)
   10cfc:	mov	r2, r5
   10cfe:	mov	r1, r9
   10d00:	add	r0, pc
   10d02:	b.n	10cce <help_command_group@@Base+0x92>
   10d04:	mov	r8, sl
   10d06:	ldr	r1, [pc, #324]	; (10e4c <help_command_group@@Base+0x210>)
   10d08:	mov	r2, r9
   10d0a:	movs	r0, #1
   10d0c:	ldr.w	sl, [pc, #320]	; 10e50 <help_command_group@@Base+0x214>
   10d10:	add	r1, pc
   10d12:	movs	r4, #0
   10d14:	blx	8838 <__printf_chk@plt+0x4>
   10d18:	mov	r0, r8
   10d1a:	blx	8748 <strlen@plt>
   10d1e:	add	sl, pc
   10d20:	add.w	r9, r8, r0
   10d24:	cmp	r8, r9
   10d26:	bne.n	10d36 <help_command_group@@Base+0xfa>
   10d28:	cmp	r7, #0
   10d2a:	bne.n	10e0a <help_command_group@@Base+0x1ce>
   10d2c:	movs	r0, #10
   10d2e:	movs	r4, #0
   10d30:	blx	87d4 <putchar@plt+0x4>
   10d34:	b.n	10cd2 <help_command_group@@Base+0x96>
   10d36:	ldrb.w	r5, [r8], #1
   10d3a:	cmp	r5, #32
   10d3c:	bhi.n	10d66 <help_command_group@@Base+0x12a>
   10d3e:	cmp	r5, #6
   10d40:	bls.n	10d6a <help_command_group@@Base+0x12e>
   10d42:	subs	r3, r5, #7
   10d44:	cmp	r3, #25
   10d46:	bhi.n	10d6a <help_command_group@@Base+0x12e>
   10d48:	tbb	[pc, r3]
   10d4c:	cmp	r5, #37	; 0x25
   10d4e:	subs	r4, #70	; 0x46
   10d50:	adds	r7, #75	; 0x4b
   10d52:	lsrs	r1, r0, #29
   10d54:	lsrs	r7, r1, #28
   10d56:	lsrs	r7, r1, #28
   10d58:	lsrs	r7, r1, #28
   10d5a:	lsrs	r7, r1, #28
   10d5c:	lsrs	r7, r1, #28
   10d5e:	lsrs	r7, r1, #28
   10d60:	lsrs	r2, r6, #28
   10d62:	lsrs	r7, r1, #28
   10d64:	str	r7, [r1, r0]
   10d66:	cmp	r5, #92	; 0x5c
   10d68:	beq.n	10df6 <help_command_group@@Base+0x1ba>
   10d6a:	blx	8724 <__ctype_b_loc@plt>
   10d6e:	ldr	r3, [r0, #0]
   10d70:	ldrh.w	r3, [r3, r5, lsl #1]
   10d74:	lsls	r3, r3, #17
   10d76:	bmi.n	10e00 <help_command_group@@Base+0x1c4>
   10d78:	ubfx	r3, r5, #3, #3
   10d7c:	lsrs	r2, r5, #6
   10d7e:	and.w	r5, r5, #7
   10d82:	adds	r3, #48	; 0x30
   10d84:	adds	r5, #48	; 0x30
   10d86:	adds	r2, #48	; 0x30
   10d88:	mov	r1, sl
   10d8a:	movs	r0, #1
   10d8c:	str	r5, [sp, #0]
   10d8e:	adds	r4, #4
   10d90:	blx	8838 <__printf_chk@plt+0x4>
   10d94:	b.n	10d24 <help_command_group@@Base+0xe8>
   10d96:	movs	r0, #92	; 0x5c
   10d98:	blx	87d4 <putchar@plt+0x4>
   10d9c:	movs	r0, #97	; 0x61
   10d9e:	blx	87d4 <putchar@plt+0x4>
   10da2:	adds	r4, #2
   10da4:	b.n	10d24 <help_command_group@@Base+0xe8>
   10da6:	movs	r0, #92	; 0x5c
   10da8:	blx	87d4 <putchar@plt+0x4>
   10dac:	movs	r0, #98	; 0x62
   10dae:	b.n	10d9e <help_command_group@@Base+0x162>
   10db0:	movs	r0, #92	; 0x5c
   10db2:	blx	87d4 <putchar@plt+0x4>
   10db6:	movs	r0, #101	; 0x65
   10db8:	b.n	10d9e <help_command_group@@Base+0x162>
   10dba:	movs	r0, #92	; 0x5c
   10dbc:	blx	87d4 <putchar@plt+0x4>
   10dc0:	movs	r0, #102	; 0x66
   10dc2:	b.n	10d9e <help_command_group@@Base+0x162>
   10dc4:	movs	r0, #92	; 0x5c
   10dc6:	blx	87d4 <putchar@plt+0x4>
   10dca:	movs	r0, #110	; 0x6e
   10dcc:	b.n	10d9e <help_command_group@@Base+0x162>
   10dce:	movs	r0, #92	; 0x5c
   10dd0:	blx	87d4 <putchar@plt+0x4>
   10dd4:	movs	r0, #114	; 0x72
   10dd6:	b.n	10d9e <help_command_group@@Base+0x162>
   10dd8:	movs	r0, #92	; 0x5c
   10dda:	blx	87d4 <putchar@plt+0x4>
   10dde:	movs	r0, #116	; 0x74
   10de0:	b.n	10d9e <help_command_group@@Base+0x162>
   10de2:	movs	r0, #92	; 0x5c
   10de4:	blx	87d4 <putchar@plt+0x4>
   10de8:	movs	r0, #118	; 0x76
   10dea:	b.n	10d9e <help_command_group@@Base+0x162>
   10dec:	movs	r0, #92	; 0x5c
   10dee:	blx	87d4 <putchar@plt+0x4>
   10df2:	movs	r0, #32
   10df4:	b.n	10d9e <help_command_group@@Base+0x162>
   10df6:	mov	r0, r5
   10df8:	blx	87d4 <putchar@plt+0x4>
   10dfc:	mov	r0, r5
   10dfe:	b.n	10d9e <help_command_group@@Base+0x162>
   10e00:	mov	r0, r5
   10e02:	adds	r4, #1
   10e04:	blx	87d4 <putchar@plt+0x4>
   10e08:	b.n	10d24 <help_command_group@@Base+0xe8>
   10e0a:	adds	r4, #1
   10e0c:	movs	r0, #32
   10e0e:	blx	87d4 <putchar@plt+0x4>
   10e12:	cmp	r4, #31
   10e14:	ble.n	10e0a <help_command_group@@Base+0x1ce>
   10e16:	add.w	r2, sp, #4128	; 0x1020
   10e1a:	mov	r1, r7
   10e1c:	adds	r2, #28
   10e1e:	movs	r0, #1
   10e20:	str.w	r2, [r6, #-8]
   10e24:	blx	84b4 <__vprintf_chk@plt>
   10e28:	b.n	10d2c <help_command_group@@Base+0xf0>
   10e2a:	mov	r0, r4
   10e2c:	add.w	sp, sp, #4096	; 0x1000
   10e30:	add	sp, #20
   10e32:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e36:	nop
   10e38:	adds	r1, #4
   10e3a:	movs	r5, r0
   10e3c:	lsls	r0, r4, #8
   10e3e:	movs	r0, r0
   10e40:	str	r4, [sp, #480]	; 0x1e0
   10e42:	movs	r2, r0
   10e44:	adds	r0, #168	; 0xa8
   10e46:	movs	r5, r0
   10e48:	str	r4, [sp, #272]	; 0x110
   10e4a:	movs	r2, r0
   10e4c:	str	r4, [sp, #296]	; 0x128
   10e4e:	movs	r2, r0
   10e50:	str	r4, [sp, #264]	; 0x108
   10e52:	movs	r2, r0
   10e54:	push	{r4, r5, lr}
   10e56:	sub	sp, #28
   10e58:	strd	r2, r3, [sp, #8]
   10e5c:	mov	r2, r0
   10e5e:	ldr	r3, [pc, #28]	; (10e7c <help_command_group@@Base+0x240>)
   10e60:	movs	r0, #0
   10e62:	ldrd	r4, r5, [sp, #40]	; 0x28
   10e66:	add	r3, pc
   10e68:	str	r3, [sp, #0]
   10e6a:	ldr	r3, [pc, #20]	; (10e80 <help_command_group@@Base+0x244>)
   10e6c:	ldr	r1, [sp, #48]	; 0x30
   10e6e:	add	r3, pc
   10e70:	strd	r4, r5, [sp, #16]
   10e74:	bl	10c68 <help_command_group@@Base+0x2c>
   10e78:	add	sp, #28
   10e7a:	pop	{r4, r5, pc}
   10e7c:	str	r3, [sp, #64]	; 0x40
   10e7e:	movs	r2, r0
   10e80:	str	r2, [sp, #1000]	; 0x3e8
   10e82:	movs	r2, r0
   10e84:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   10e86:	strd	r2, r3, [sp, #16]
   10e8a:	ldrd	r2, r3, [sp, #32]
   10e8e:	ldr	r1, [sp, #40]	; 0x28
   10e90:	strd	r2, r3, [sp, #8]
   10e94:	mov	r2, r0
   10e96:	ldr	r3, [pc, #20]	; (10eac <help_command_group@@Base+0x270>)
   10e98:	movs	r0, #0
   10e9a:	add	r3, pc
   10e9c:	str	r3, [sp, #0]
   10e9e:	ldr	r3, [pc, #16]	; (10eb0 <help_command_group@@Base+0x274>)
   10ea0:	add	r3, pc
   10ea2:	bl	10c68 <help_command_group@@Base+0x2c>
   10ea6:	add	sp, #28
   10ea8:	ldr.w	pc, [sp], #4
   10eac:	str	r2, [sp, #988]	; 0x3dc
   10eae:	movs	r2, r0
   10eb0:	str	r2, [sp, #940]	; 0x3ac
   10eb2:	movs	r2, r0
   10eb4:	push	{r0, r1, r2, r3, r4, lr}
   10eb6:	strd	r2, r3, [sp, #8]
   10eba:	mov	r2, r0
   10ebc:	ldr	r3, [pc, #20]	; (10ed4 <help_command_group@@Base+0x298>)
   10ebe:	movs	r0, #0
   10ec0:	ldr	r1, [sp, #24]
   10ec2:	add	r3, pc
   10ec4:	str	r3, [sp, #0]
   10ec6:	ldr	r3, [pc, #16]	; (10ed8 <help_command_group@@Base+0x29c>)
   10ec8:	add	r3, pc
   10eca:	bl	10c68 <help_command_group@@Base+0x2c>
   10ece:	add	sp, #20
   10ed0:	ldr.w	pc, [sp], #4
   10ed4:	str	r2, [sp, #924]	; 0x39c
   10ed6:	movs	r2, r0
   10ed8:	str	r2, [sp, #876]	; 0x36c
   10eda:	movs	r2, r0
   10edc:	push	{r0, r1, r2, r3, r4, lr}
   10ede:	strd	r2, r3, [sp, #8]
   10ee2:	mov	r2, r0
   10ee4:	ldr	r3, [pc, #20]	; (10efc <help_command_group@@Base+0x2c0>)
   10ee6:	movs	r0, #0
   10ee8:	ldr	r1, [sp, #24]
   10eea:	add	r3, pc
   10eec:	str	r3, [sp, #0]
   10eee:	ldr	r3, [pc, #16]	; (10f00 <help_command_group@@Base+0x2c4>)
   10ef0:	add	r3, pc
   10ef2:	bl	10c68 <help_command_group@@Base+0x2c>
   10ef6:	add	sp, #20
   10ef8:	ldr.w	pc, [sp], #4
   10efc:	str	r2, [sp, #840]	; 0x348
   10efe:	movs	r2, r0
   10f00:	str	r2, [sp, #780]	; 0x30c
   10f02:	movs	r2, r0
   10f04:	push	{r0, r1, r2, lr}
   10f06:	mov	r3, r1
   10f08:	str	r3, [sp, #4]
   10f0a:	mov	r1, r2
   10f0c:	ldr	r3, [pc, #20]	; (10f24 <help_command_group@@Base+0x2e8>)
   10f0e:	mov	r2, r0
   10f10:	movs	r0, #0
   10f12:	add	r3, pc
   10f14:	str	r3, [sp, #0]
   10f16:	ldr	r3, [pc, #16]	; (10f28 <help_command_group@@Base+0x2ec>)
   10f18:	add	r3, pc
   10f1a:	bl	10c68 <help_command_group@@Base+0x2c>
   10f1e:	add	sp, #12
   10f20:	ldr.w	pc, [sp], #4
   10f24:	str	r2, [sp, #772]	; 0x304
   10f26:	movs	r2, r0
   10f28:	str	r2, [sp, #696]	; 0x2b8
   10f2a:	movs	r2, r0
   10f2c:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   10f2e:	strd	r2, r3, [sp, #12]
   10f32:	mov	r2, r0
   10f34:	strd	r1, r3, [sp, #4]
   10f38:	movs	r0, #0
   10f3a:	ldr	r3, [pc, #20]	; (10f50 <help_command_group@@Base+0x314>)
   10f3c:	ldr	r1, [sp, #32]
   10f3e:	add	r3, pc
   10f40:	str	r3, [sp, #0]
   10f42:	ldr	r3, [pc, #16]	; (10f54 <help_command_group@@Base+0x318>)
   10f44:	add	r3, pc
   10f46:	bl	10c68 <help_command_group@@Base+0x2c>
   10f4a:	add	sp, #28
   10f4c:	ldr.w	pc, [sp], #4
   10f50:	str	r2, [sp, #668]	; 0x29c
   10f52:	movs	r2, r0
   10f54:	str	r2, [sp, #604]	; 0x25c
   10f56:	movs	r2, r0
   10f58:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   10f5c:	sub.w	sp, sp, #4128	; 0x1020
   10f60:	sub	sp, #24
   10f62:	mov	r6, r3
   10f64:	add.w	r3, sp, #4192	; 0x1060
   10f68:	ldr	r4, [pc, #164]	; (11010 <help_command_group@@Base+0x3d4>)
   10f6a:	adds	r3, #8
   10f6c:	mov	r5, r0
   10f6e:	mov	r7, r2
   10f70:	ldr	r0, [pc, #160]	; (11014 <help_command_group@@Base+0x3d8>)
   10f72:	ldr	r2, [r3, #0]
   10f74:	add.w	r3, sp, #4192	; 0x1060
   10f78:	add	r4, pc
   10f7a:	adds	r3, #24
   10f7c:	add.w	r8, sp, #52	; 0x34
   10f80:	ldr	r1, [r3, #0]
   10f82:	ldr	r0, [r4, r0]
   10f84:	add.w	r3, sp, #4128	; 0x1020
   10f88:	adds	r3, #20
   10f8a:	ldr	r0, [r0, #0]
   10f8c:	str	r0, [r3, #0]
   10f8e:	mov.w	r0, #0
   10f92:	mov	r0, r8
   10f94:	strd	r1, r2, [sp, #40]	; 0x28
   10f98:	bl	12fc4 <path_cat_out@@Base>
   10f9c:	ldrd	r1, r2, [sp, #40]	; 0x28
   10fa0:	subs	r4, r0, #0
   10fa2:	bge.n	10fca <help_command_group@@Base+0x38e>
   10fa4:	ldr	r1, [pc, #112]	; (11018 <help_command_group@@Base+0x3dc>)
   10fa6:	ldr	r0, [pc, #116]	; (1101c <help_command_group@@Base+0x3e0>)
   10fa8:	add	r1, pc
   10faa:	add	r0, pc
   10fac:	bl	16b70 <__btrfs_error@@Base>
   10fb0:	ldr	r1, [pc, #108]	; (11020 <help_command_group@@Base+0x3e4>)
   10fb2:	add.w	r3, sp, #4128	; 0x1020
   10fb6:	ldr	r2, [pc, #92]	; (11014 <help_command_group@@Base+0x3d8>)
   10fb8:	adds	r3, #20
   10fba:	add	r1, pc
   10fbc:	ldr	r2, [r1, r2]
   10fbe:	ldr	r1, [r2, #0]
   10fc0:	ldr	r2, [r3, #0]
   10fc2:	eors	r1, r2
   10fc4:	beq.n	11004 <help_command_group@@Base+0x3c8>
   10fc6:	blx	8510 <__stack_chk_fail@plt>
   10fca:	add.w	r3, sp, #4192	; 0x1060
   10fce:	movs	r0, #0
   10fd0:	adds	r3, #16
   10fd2:	ldrd	r2, r3, [r3]
   10fd6:	str.w	r8, [sp, #24]
   10fda:	strd	r2, r3, [sp, #32]
   10fde:	add.w	r3, sp, #4160	; 0x1040
   10fe2:	adds	r3, #16
   10fe4:	ldrd	r2, r3, [r3]
   10fe8:	strd	r7, r6, [sp, #8]
   10fec:	strd	r2, r3, [sp, #16]
   10ff0:	mov	r2, r5
   10ff2:	ldr	r3, [pc, #48]	; (11024 <help_command_group@@Base+0x3e8>)
   10ff4:	add	r3, pc
   10ff6:	str	r3, [sp, #0]
   10ff8:	ldr	r3, [pc, #44]	; (11028 <help_command_group@@Base+0x3ec>)
   10ffa:	add	r3, pc
   10ffc:	bl	10c68 <help_command_group@@Base+0x2c>
   11000:	mov	r4, r0
   11002:	b.n	10fb0 <help_command_group@@Base+0x374>
   11004:	mov	r0, r4
   11006:	add.w	sp, sp, #4128	; 0x1020
   1100a:	add	sp, #24
   1100c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   11010:	cmp	r6, #12
   11012:	movs	r5, r0
   11014:	lsls	r0, r4, #8
   11016:	movs	r0, r0
   11018:	str	r2, [sp, #344]	; 0x158
   1101a:	movs	r2, r0
   1101c:	str	r1, [sp, #616]	; 0x268
   1101e:	movs	r2, r0
   11020:	cmp	r5, #202	; 0xca
   11022:	movs	r5, r0
   11024:	str	r2, [sp, #64]	; 0x40
   11026:	movs	r2, r0
   11028:	str	r2, [sp, #16]
   1102a:	movs	r2, r0
   1102c:	push	{r4, r5, lr}
   1102e:	sub	sp, #28
   11030:	strd	r2, r3, [sp, #8]
   11034:	mov	r2, r0
   11036:	ldr	r3, [pc, #28]	; (11054 <help_command_group@@Base+0x418>)
   11038:	movs	r0, #0
   1103a:	ldrd	r4, r5, [sp, #40]	; 0x28
   1103e:	add	r3, pc
   11040:	str	r3, [sp, #0]
   11042:	ldr	r3, [pc, #20]	; (11058 <help_command_group@@Base+0x41c>)
   11044:	ldr	r1, [sp, #48]	; 0x30
   11046:	add	r3, pc
   11048:	strd	r4, r5, [sp, #16]
   1104c:	bl	10c68 <help_command_group@@Base+0x2c>
   11050:	add	sp, #28
   11052:	pop	{r4, r5, pc}
   11054:	str	r1, [sp, #224]	; 0xe0
   11056:	movs	r2, r0
   11058:	str	r1, [sp, #948]	; 0x3b4
   1105a:	movs	r2, r0
   1105c:	ldr	r3, [pc, #20]	; (11074 <help_command_group@@Base+0x438>)
   1105e:	push	{r0, r1, r2, lr}
   11060:	add	r3, pc
   11062:	mov	r2, r0
   11064:	movs	r0, #0
   11066:	str	r0, [sp, #0]
   11068:	bl	10c68 <help_command_group@@Base+0x2c>
   1106c:	add	sp, #12
   1106e:	ldr.w	pc, [sp], #4
   11072:	nop
   11074:	movs	r0, #61	; 0x3d
   11076:	movs	r4, r0
   11078:	ldr	r3, [pc, #20]	; (11090 <help_command_group@@Base+0x454>)
   1107a:	push	{r0, r1, r2, lr}
   1107c:	add	r3, pc
   1107e:	mov	r2, r0
   11080:	movs	r0, #0
   11082:	str	r0, [sp, #0]
   11084:	bl	10c68 <help_command_group@@Base+0x2c>
   11088:	add	sp, #12
   1108a:	ldr.w	pc, [sp], #4
   1108e:	nop
   11090:	movs	r0, #49	; 0x31
   11092:	movs	r4, r0
   11094:	push	{r0, r1, r2, lr}
   11096:	mov	r3, r1
   11098:	str	r3, [sp, #4]
   1109a:	mov	r1, r2
   1109c:	ldr	r3, [pc, #20]	; (110b4 <help_command_group@@Base+0x478>)
   1109e:	mov	r2, r0
   110a0:	movs	r0, #0
   110a2:	add	r3, pc
   110a4:	str	r3, [sp, #0]
   110a6:	ldr	r3, [pc, #16]	; (110b8 <help_command_group@@Base+0x47c>)
   110a8:	add	r3, pc
   110aa:	bl	10c68 <help_command_group@@Base+0x2c>
   110ae:	add	sp, #12
   110b0:	ldr.w	pc, [sp], #4
   110b4:	str	r1, [sp, #604]	; 0x25c
   110b6:	movs	r2, r0
   110b8:	str	r1, [sp, #652]	; 0x28c
   110ba:	movs	r2, r0
   110bc:	push	{r4, r5, r6, r7, lr}
   110be:	mov	r6, r0
   110c0:	ldr	r0, [pc, #120]	; (1113c <help_command_group@@Base+0x500>)
   110c2:	mov	r5, r1
   110c4:	mov	r1, r2
   110c6:	ldr	r2, [pc, #120]	; (11140 <help_command_group@@Base+0x504>)
   110c8:	add	r0, pc
   110ca:	sub.w	sp, sp, #4096	; 0x1000
   110ce:	sub	sp, #28
   110d0:	ldr	r2, [r0, r2]
   110d2:	add.w	r3, sp, #4096	; 0x1000
   110d6:	add	r7, sp, #20
   110d8:	adds	r3, #20
   110da:	ldr	r2, [r2, #0]
   110dc:	str	r2, [r3, #0]
   110de:	mov.w	r2, #0
   110e2:	mov	r2, r5
   110e4:	mov	r0, r7
   110e6:	str	r1, [sp, #12]
   110e8:	bl	12fc4 <path_cat_out@@Base>
   110ec:	ldr	r1, [sp, #12]
   110ee:	subs	r4, r0, #0
   110f0:	bge.n	1111a <help_command_group@@Base+0x4de>
   110f2:	ldr	r1, [pc, #80]	; (11144 <help_command_group@@Base+0x508>)
   110f4:	mov	r2, r5
   110f6:	ldr	r0, [pc, #80]	; (11148 <help_command_group@@Base+0x50c>)
   110f8:	add	r1, pc
   110fa:	add	r0, pc
   110fc:	bl	16b70 <__btrfs_error@@Base>
   11100:	ldr	r1, [pc, #72]	; (1114c <help_command_group@@Base+0x510>)
   11102:	add.w	r3, sp, #4096	; 0x1000
   11106:	ldr	r2, [pc, #56]	; (11140 <help_command_group@@Base+0x504>)
   11108:	adds	r3, #20
   1110a:	add	r1, pc
   1110c:	ldr	r2, [r1, r2]
   1110e:	ldr	r1, [r2, #0]
   11110:	ldr	r2, [r3, #0]
   11112:	eors	r1, r2
   11114:	beq.n	11132 <help_command_group@@Base+0x4f6>
   11116:	blx	8510 <__stack_chk_fail@plt>
   1111a:	ldr	r3, [pc, #52]	; (11150 <help_command_group@@Base+0x514>)
   1111c:	mov	r2, r6
   1111e:	movs	r0, #0
   11120:	str	r7, [sp, #4]
   11122:	add	r3, pc
   11124:	str	r3, [sp, #0]
   11126:	ldr	r3, [pc, #44]	; (11154 <help_command_group@@Base+0x518>)
   11128:	add	r3, pc
   1112a:	bl	10c68 <help_command_group@@Base+0x2c>
   1112e:	mov	r4, r0
   11130:	b.n	11100 <help_command_group@@Base+0x4c4>
   11132:	mov	r0, r4
   11134:	add.w	sp, sp, #4096	; 0x1000
   11138:	add	sp, #28
   1113a:	pop	{r4, r5, r6, r7, pc}
   1113c:	cmp	r4, #188	; 0xbc
   1113e:	movs	r5, r0
   11140:	lsls	r0, r4, #8
   11142:	movs	r0, r0
   11144:	str	r1, [sp, #292]	; 0x124
   11146:	movs	r2, r0
   11148:	str	r0, [sp, #296]	; 0x128
   1114a:	movs	r2, r0
   1114c:	cmp	r4, #122	; 0x7a
   1114e:	movs	r5, r0
   11150:	str	r1, [sp, #92]	; 0x5c
   11152:	movs	r2, r0
   11154:	str	r1, [sp, #100]	; 0x64
   11156:	movs	r2, r0
   11158:	push	{r0, r1, r2, lr}
   1115a:	mov	r3, r1
   1115c:	str	r3, [sp, #4]
   1115e:	mov	r1, r2
   11160:	ldr	r3, [pc, #20]	; (11178 <help_command_group@@Base+0x53c>)
   11162:	mov	r2, r0
   11164:	movs	r0, #0
   11166:	add	r3, pc
   11168:	str	r3, [sp, #0]
   1116a:	ldr	r3, [pc, #16]	; (1117c <help_command_group@@Base+0x540>)
   1116c:	add	r3, pc
   1116e:	bl	10c68 <help_command_group@@Base+0x2c>
   11172:	add	sp, #12
   11174:	ldr.w	pc, [sp], #4
   11178:	str	r0, [sp, #844]	; 0x34c
   1117a:	movs	r2, r0
   1117c:	str	r0, [sp, #880]	; 0x370
   1117e:	movs	r2, r0
   11180:	ldr	r3, [pc, #20]	; (11198 <help_command_group@@Base+0x55c>)
   11182:	push	{r0, r1, r2, lr}
   11184:	add	r3, pc
   11186:	mov	r2, r0
   11188:	movs	r0, #0
   1118a:	str	r0, [sp, #0]
   1118c:	bl	10c68 <help_command_group@@Base+0x2c>
   11190:	add	sp, #12
   11192:	ldr.w	pc, [sp], #4
   11196:	nop
   11198:	str	r0, [sp, #816]	; 0x330
   1119a:	movs	r2, r0
   1119c:	ldr	r3, [pc, #20]	; (111b4 <help_command_group@@Base+0x578>)
   1119e:	push	{r0, r1, r2, lr}
   111a0:	add	r3, pc
   111a2:	mov	r2, r0
   111a4:	movs	r0, #0
   111a6:	str	r0, [sp, #0]
   111a8:	bl	10c68 <help_command_group@@Base+0x2c>
   111ac:	add	sp, #12
   111ae:	ldr.w	pc, [sp], #4
   111b2:	nop
   111b4:	str	r0, [sp, #732]	; 0x2dc
   111b6:	movs	r2, r0
   111b8:	push	{r4, r5, lr}
   111ba:	sub	sp, #28
   111bc:	strd	r2, r3, [sp, #8]
   111c0:	mov	r2, r0
   111c2:	ldr	r3, [pc, #28]	; (111e0 <help_command_group@@Base+0x5a4>)
   111c4:	movs	r0, #0
   111c6:	ldrd	r4, r5, [sp, #40]	; 0x28
   111ca:	add	r3, pc
   111cc:	str	r3, [sp, #0]
   111ce:	ldr	r3, [pc, #20]	; (111e4 <help_command_group@@Base+0x5a8>)
   111d0:	ldr	r1, [sp, #48]	; 0x30
   111d2:	add	r3, pc
   111d4:	strd	r4, r5, [sp, #16]
   111d8:	bl	10c68 <help_command_group@@Base+0x2c>
   111dc:	add	sp, #28
   111de:	pop	{r4, r5, pc}
   111e0:	str	r0, [sp, #616]	; 0x268
   111e2:	movs	r2, r0
   111e4:	str	r0, [sp, #560]	; 0x230
   111e6:	movs	r2, r0
   111e8:	ldr	r3, [pc, #20]	; (11200 <help_command_group@@Base+0x5c4>)
   111ea:	push	{r0, r1, r2, lr}
   111ec:	add	r3, pc
   111ee:	mov	r2, r0
   111f0:	movs	r0, #0
   111f2:	str	r0, [sp, #0]
   111f4:	bl	10c68 <help_command_group@@Base+0x2c>
   111f8:	add	sp, #12
   111fa:	ldr.w	pc, [sp], #4
   111fe:	nop
   11200:	str	r0, [sp, #564]	; 0x234
   11202:	movs	r2, r0
   11204:	ldr	r3, [pc, #20]	; (1121c <help_command_group@@Base+0x5e0>)
   11206:	push	{r0, r1, r2, lr}
   11208:	add	r3, pc
   1120a:	mov	r2, r0
   1120c:	movs	r0, #0
   1120e:	str	r0, [sp, #0]
   11210:	bl	10c68 <help_command_group@@Base+0x2c>
   11214:	add	sp, #12
   11216:	ldr.w	pc, [sp], #4
   1121a:	nop
   1121c:	str	r0, [sp, #476]	; 0x1dc
   1121e:	movs	r2, r0
   11220:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   11224:	mov	r6, r2
   11226:	ldr	r2, [pc, #116]	; (1129c <help_command_group@@Base+0x660>)
   11228:	sub	sp, #120	; 0x78
   1122a:	mov	r5, r3
   1122c:	ldr	r3, [pc, #112]	; (112a0 <help_command_group@@Base+0x664>)
   1122e:	add	r2, pc
   11230:	ldr.w	sl, [sp, #152]	; 0x98
   11234:	add	r7, sp, #36	; 0x24
   11236:	add.w	r8, sp, #76	; 0x4c
   1123a:	ldr	r3, [r2, r3]
   1123c:	mov	r4, r0
   1123e:	mov	r0, r1
   11240:	mov	r1, r7
   11242:	ldr	r3, [r3, #0]
   11244:	str	r3, [sp, #116]	; 0x74
   11246:	mov.w	r3, #0
   1124a:	ldr.w	r9, [sp, #168]	; 0xa8
   1124e:	blx	83d8 <uuid_unparse@plt>
   11252:	mov	r1, r8
   11254:	mov	r0, sl
   11256:	blx	83d8 <uuid_unparse@plt>
   1125a:	ldrd	r2, r3, [sp, #160]	; 0xa0
   1125e:	mov	r1, r9
   11260:	movs	r0, #1
   11262:	str.w	r8, [sp, #16]
   11266:	strd	r2, r3, [sp, #24]
   1126a:	mov	r2, r4
   1126c:	ldr	r3, [pc, #52]	; (112a4 <help_command_group@@Base+0x668>)
   1126e:	strd	r6, r5, [sp, #8]
   11272:	add	r3, pc
   11274:	str	r3, [sp, #0]
   11276:	ldr	r3, [pc, #48]	; (112a8 <help_command_group@@Base+0x66c>)
   11278:	str	r7, [sp, #4]
   1127a:	add	r3, pc
   1127c:	bl	10c68 <help_command_group@@Base+0x2c>
   11280:	ldr	r2, [pc, #40]	; (112ac <help_command_group@@Base+0x670>)
   11282:	ldr	r3, [pc, #28]	; (112a0 <help_command_group@@Base+0x664>)
   11284:	add	r2, pc
   11286:	ldr	r3, [r2, r3]
   11288:	ldr	r2, [r3, #0]
   1128a:	ldr	r3, [sp, #116]	; 0x74
   1128c:	eors	r2, r3
   1128e:	beq.n	11294 <help_command_group@@Base+0x658>
   11290:	blx	8510 <__stack_chk_fail@plt>
   11294:	add	sp, #120	; 0x78
   11296:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1129a:	nop
   1129c:	cmp	r3, #86	; 0x56
   1129e:	movs	r5, r0
   112a0:	lsls	r0, r4, #8
   112a2:	movs	r0, r0
   112a4:	str	r0, [sp, #80]	; 0x50
   112a6:	movs	r2, r0
   112a8:	subs	r1, r6, #3
   112aa:	movs	r4, r0
   112ac:	cmp	r3, #0
   112ae:	movs	r5, r0
   112b0:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   112b4:	mov	r6, r2
   112b6:	ldr	r2, [pc, #88]	; (11310 <help_command_group@@Base+0x6d4>)
   112b8:	mov	r5, r3
   112ba:	ldr	r3, [pc, #88]	; (11314 <help_command_group@@Base+0x6d8>)
   112bc:	sub	sp, #64	; 0x40
   112be:	add	r2, pc
   112c0:	add	r7, sp, #20
   112c2:	mov	r4, r0
   112c4:	mov	r0, r1
   112c6:	ldr	r3, [r2, r3]
   112c8:	mov	r1, r7
   112ca:	ldr.w	r8, [sp, #88]	; 0x58
   112ce:	ldr	r3, [r3, #0]
   112d0:	str	r3, [sp, #60]	; 0x3c
   112d2:	mov.w	r3, #0
   112d6:	blx	83d8 <uuid_unparse@plt>
   112da:	ldr	r3, [pc, #60]	; (11318 <help_command_group@@Base+0x6dc>)
   112dc:	mov	r2, r4
   112de:	mov	r1, r8
   112e0:	movs	r0, #1
   112e2:	add	r3, pc
   112e4:	str	r3, [sp, #0]
   112e6:	ldr	r3, [pc, #52]	; (1131c <help_command_group@@Base+0x6e0>)
   112e8:	strd	r6, r5, [sp, #8]
   112ec:	add	r3, pc
   112ee:	str	r7, [sp, #4]
   112f0:	bl	10c68 <help_command_group@@Base+0x2c>
   112f4:	ldr	r2, [pc, #40]	; (11320 <help_command_group@@Base+0x6e4>)
   112f6:	ldr	r3, [pc, #28]	; (11314 <help_command_group@@Base+0x6d8>)
   112f8:	add	r2, pc
   112fa:	ldr	r3, [r2, r3]
   112fc:	ldr	r2, [r3, #0]
   112fe:	ldr	r3, [sp, #60]	; 0x3c
   11300:	eors	r2, r3
   11302:	beq.n	11308 <help_command_group@@Base+0x6cc>
   11304:	blx	8510 <__stack_chk_fail@plt>
   11308:	add	sp, #64	; 0x40
   1130a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1130e:	nop
   11310:	cmp	r2, #198	; 0xc6
   11312:	movs	r5, r0
   11314:	lsls	r0, r4, #8
   11316:	movs	r0, r0
   11318:	ldrh	r3, [r4, #62]	; 0x3e
   1131a:	movs	r2, r0
   1131c:	ldrh	r2, [r2, #62]	; 0x3e
   1131e:	movs	r2, r0
   11320:	cmp	r2, #140	; 0x8c
   11322:	movs	r5, r0
   11324:	ldr	r2, [pc, #112]	; (11398 <help_command_group@@Base+0x75c>)
   11326:	ldr	r3, [pc, #116]	; (1139c <help_command_group@@Base+0x760>)
   11328:	add	r2, pc
   1132a:	push	{r4, r5, lr}
   1132c:	sub	sp, #68	; 0x44
   1132e:	ldr	r3, [r2, r3]
   11330:	mov	r5, r1
   11332:	mov	r4, r0
   11334:	ldr	r3, [r3, #0]
   11336:	str	r3, [sp, #60]	; 0x3c
   11338:	mov.w	r3, #0
   1133c:	add	r3, sp, #16
   1133e:	str	r3, [sp, #12]
   11340:	mov	r1, r3
   11342:	blx	8538 <localtime_r@plt>
   11346:	ldr	r3, [sp, #12]
   11348:	cbnz	r0, 11372 <help_command_group@@Base+0x736>
   1134a:	ldrd	r2, r3, [r4]
   1134e:	ldr	r0, [pc, #80]	; (113a0 <help_command_group@@Base+0x764>)
   11350:	str	r3, [sp, #0]
   11352:	add	r0, pc
   11354:	asrs	r3, r2, #31
   11356:	bl	16b70 <__btrfs_error@@Base>
   1135a:	mvn.w	r0, #21
   1135e:	ldr	r2, [pc, #68]	; (113a4 <help_command_group@@Base+0x768>)
   11360:	ldr	r3, [pc, #56]	; (1139c <help_command_group@@Base+0x760>)
   11362:	add	r2, pc
   11364:	ldr	r3, [r2, r3]
   11366:	ldr	r2, [r3, #0]
   11368:	ldr	r3, [sp, #60]	; 0x3c
   1136a:	eors	r2, r3
   1136c:	beq.n	11392 <help_command_group@@Base+0x756>
   1136e:	blx	8510 <__stack_chk_fail@plt>
   11372:	ldr	r2, [pc, #52]	; (113a8 <help_command_group@@Base+0x76c>)
   11374:	movs	r1, #63	; 0x3f
   11376:	mov	r0, r5
   11378:	add	r2, pc
   1137a:	blx	86ac <strftime@plt>
   1137e:	cbnz	r0, 1138e <help_command_group@@Base+0x752>
   11380:	ldrd	r2, r3, [r4]
   11384:	ldr	r0, [pc, #36]	; (113ac <help_command_group@@Base+0x770>)
   11386:	str	r3, [sp, #0]
   11388:	add	r0, pc
   1138a:	asrs	r3, r2, #31
   1138c:	b.n	11356 <help_command_group@@Base+0x71a>
   1138e:	movs	r0, #0
   11390:	b.n	1135e <help_command_group@@Base+0x722>
   11392:	add	sp, #68	; 0x44
   11394:	pop	{r4, r5, pc}
   11396:	nop
   11398:	cmp	r2, #92	; 0x5c
   1139a:	movs	r5, r0
   1139c:	lsls	r0, r4, #8
   1139e:	movs	r0, r0
   113a0:	ldrh	r0, [r1, #60]	; 0x3c
   113a2:	movs	r2, r0
   113a4:	cmp	r2, #34	; 0x22
   113a6:	movs	r5, r0
   113a8:	ldrh	r2, [r2, #60]	; 0x3c
   113aa:	movs	r2, r0
   113ac:	ldrh	r2, [r1, #60]	; 0x3c
   113ae:	movs	r2, r0
   113b0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   113b4:	mov	r6, r2
   113b6:	ldr	r2, [pc, #128]	; (11438 <help_command_group@@Base+0x7fc>)
   113b8:	mov	r5, r3
   113ba:	ldr	r3, [pc, #128]	; (1143c <help_command_group@@Base+0x800>)
   113bc:	sub	sp, #220	; 0xdc
   113be:	add	r2, pc
   113c0:	add	r7, sp, #20
   113c2:	mov	r4, r0
   113c4:	mov	r0, r1
   113c6:	ldr	r3, [r2, r3]
   113c8:	mov	r1, r7
   113ca:	ldr.w	r9, [sp, #248]	; 0xf8
   113ce:	ldr	r3, [r3, #0]
   113d0:	str	r3, [sp, #212]	; 0xd4
   113d2:	mov.w	r3, #0
   113d6:	bl	11324 <help_command_group@@Base+0x6e8>
   113da:	cmp	r0, #0
   113dc:	bge.n	113f6 <help_command_group@@Base+0x7ba>
   113de:	mvn.w	r0, #21
   113e2:	ldr	r2, [pc, #92]	; (11440 <help_command_group@@Base+0x804>)
   113e4:	ldr	r3, [pc, #84]	; (1143c <help_command_group@@Base+0x800>)
   113e6:	add	r2, pc
   113e8:	ldr	r3, [r2, r3]
   113ea:	ldr	r2, [r3, #0]
   113ec:	ldr	r3, [sp, #212]	; 0xd4
   113ee:	eors	r2, r3
   113f0:	beq.n	11430 <help_command_group@@Base+0x7f4>
   113f2:	blx	8510 <__stack_chk_fail@plt>
   113f6:	add.w	r8, sp, #84	; 0x54
   113fa:	mov	r0, r6
   113fc:	mov	r1, r8
   113fe:	bl	11324 <help_command_group@@Base+0x6e8>
   11402:	cmp	r0, #0
   11404:	blt.n	113de <help_command_group@@Base+0x7a2>
   11406:	add	r6, sp, #148	; 0x94
   11408:	mov	r0, r5
   1140a:	mov	r1, r6
   1140c:	bl	11324 <help_command_group@@Base+0x6e8>
   11410:	cmp	r0, #0
   11412:	blt.n	113de <help_command_group@@Base+0x7a2>
   11414:	ldr	r3, [pc, #44]	; (11444 <help_command_group@@Base+0x808>)
   11416:	mov	r2, r4
   11418:	mov	r1, r9
   1141a:	strd	r8, r6, [sp, #8]
   1141e:	add	r3, pc
   11420:	str	r3, [sp, #0]
   11422:	ldr	r3, [pc, #36]	; (11448 <help_command_group@@Base+0x80c>)
   11424:	movs	r0, #0
   11426:	str	r7, [sp, #4]
   11428:	add	r3, pc
   1142a:	bl	10c68 <help_command_group@@Base+0x2c>
   1142e:	b.n	113e2 <help_command_group@@Base+0x7a6>
   11430:	add	sp, #220	; 0xdc
   11432:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   11436:	nop
   11438:	cmp	r1, #198	; 0xc6
   1143a:	movs	r5, r0
   1143c:	lsls	r0, r4, #8
   1143e:	movs	r0, r0
   11440:	cmp	r1, #158	; 0x9e
   11442:	movs	r5, r0
   11444:	ldrh	r5, [r6, #56]	; 0x38
   11446:	movs	r2, r0
   11448:	ldrh	r4, [r4, #56]	; 0x38
   1144a:	movs	r2, r0

0001144c <btrfs_parse_features_to_string@@Base>:
   1144c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11450:	mov	r5, r0
   11452:	ldr.w	r8, [pc, #72]	; 1149c <btrfs_parse_features_to_string@@Base+0x50>
   11456:	mov	r9, r2
   11458:	ldr.w	fp, [pc, #68]	; 114a0 <btrfs_parse_features_to_string@@Base+0x54>
   1145c:	mov	sl, r3
   1145e:	add	r8, pc
   11460:	movs	r4, #0
   11462:	add	fp, pc
   11464:	strb	r4, [r0, #0]
   11466:	ldrd	r2, r3, [r8, #8]
   1146a:	and.w	r6, r9, r2
   1146e:	and.w	r7, sl, r3
   11472:	orrs.w	r3, r6, r7
   11476:	beq.n	1148e <btrfs_parse_features_to_string@@Base+0x42>
   11478:	ldrb	r3, [r5, #0]
   1147a:	cbz	r3, 11484 <btrfs_parse_features_to_string@@Base+0x38>
   1147c:	mov	r1, fp
   1147e:	mov	r0, r5
   11480:	blx	85b0 <strcat@plt+0x4>
   11484:	ldr.w	r1, [r8]
   11488:	mov	r0, r5
   1148a:	blx	85b0 <strcat@plt+0x4>
   1148e:	adds	r4, #1
   11490:	add.w	r8, r8, #48	; 0x30
   11494:	cmp	r4, #7
   11496:	bne.n	11466 <btrfs_parse_features_to_string@@Base+0x1a>
   11498:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1149c:	movs	r1, #182	; 0xb6
   1149e:	movs	r5, r0
   114a0:	str	r5, [sp, #340]	; 0x154
   114a2:	movs	r2, r0

000114a4 <btrfs_process_fs_features@@Base>:
   114a4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   114a8:	mov	r6, r0
   114aa:	ldr	r4, [pc, #56]	; (114e4 <btrfs_process_fs_features@@Base+0x40>)
   114ac:	mov	r7, r1
   114ae:	ldr.w	sl, [pc, #56]	; 114e8 <btrfs_process_fs_features@@Base+0x44>
   114b2:	movs	r5, #0
   114b4:	add	r4, pc
   114b6:	add	sl, pc
   114b8:	ldrd	r2, r3, [r4, #8]
   114bc:	and.w	r8, r6, r2
   114c0:	and.w	r9, r7, r3
   114c4:	orrs.w	r3, r8, r9
   114c8:	beq.n	114d6 <btrfs_process_fs_features@@Base+0x32>
   114ca:	ldr	r3, [r4, #44]	; 0x2c
   114cc:	mov	r1, sl
   114ce:	ldr	r2, [r4, #0]
   114d0:	movs	r0, #1
   114d2:	blx	8838 <__printf_chk@plt+0x4>
   114d6:	adds	r5, #1
   114d8:	adds	r4, #48	; 0x30
   114da:	cmp	r5, #7
   114dc:	bne.n	114b8 <btrfs_process_fs_features@@Base+0x14>
   114de:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   114e2:	nop
   114e4:	movs	r1, #96	; 0x60
   114e6:	movs	r5, r0
   114e8:	ldrh	r0, [r7, #52]	; 0x34
   114ea:	movs	r2, r0

000114ec <btrfs_list_all_fs_features@@Base>:
   114ec:	ldr	r3, [pc, #168]	; (11598 <btrfs_list_all_fs_features@@Base+0xac>)
   114ee:	ldr	r2, [pc, #172]	; (1159c <btrfs_list_all_fs_features@@Base+0xb0>)
   114f0:	add	r3, pc
   114f2:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   114f6:	mov	r7, r0
   114f8:	ldr	r5, [r3, r2]
   114fa:	sub	sp, #28
   114fc:	ldr	r0, [pc, #160]	; (115a0 <btrfs_list_all_fs_features@@Base+0xb4>)
   114fe:	mov	r8, r1
   11500:	ldr	r4, [pc, #160]	; (115a4 <btrfs_list_all_fs_features@@Base+0xb8>)
   11502:	movs	r6, #0
   11504:	ldr	r1, [r5, #0]
   11506:	add	r0, pc
   11508:	blx	8968 <fputs@plt+0x4>
   1150c:	ldr.w	r9, [pc, #152]	; 115a8 <btrfs_list_all_fs_features@@Base+0xbc>
   11510:	ldr.w	sl, [pc, #152]	; 115ac <btrfs_list_all_fs_features@@Base+0xc0>
   11514:	add	r4, pc
   11516:	ldr.w	fp, [pc, #152]	; 115b0 <btrfs_list_all_fs_features@@Base+0xc4>
   1151a:	add	r9, pc
   1151c:	add	sl, pc
   1151e:	add	fp, pc
   11520:	ldrd	r2, r3, [r4, #8]
   11524:	and.w	r1, r2, r7
   11528:	str	r1, [sp, #16]
   1152a:	and.w	r1, r3, r8
   1152e:	str	r1, [sp, #20]
   11530:	ldrd	r0, r1, [sp, #16]
   11534:	orrs	r1, r0
   11536:	bne.n	11588 <btrfs_list_all_fs_features@@Base+0x9c>
   11538:	strd	r2, r3, [sp, #8]
   1153c:	movs	r1, #1
   1153e:	ldr	r3, [r4, #44]	; 0x2c
   11540:	mov	r2, r9
   11542:	str	r3, [sp, #0]
   11544:	ldr	r3, [r4, #0]
   11546:	ldr	r0, [r5, #0]
   11548:	blx	8860 <__fprintf_chk@plt+0x4>
   1154c:	ldr	r3, [r4, #24]
   1154e:	cbz	r3, 1155e <btrfs_list_all_fs_features@@Base+0x72>
   11550:	ldr	r2, [pc, #96]	; (115b4 <btrfs_list_all_fs_features@@Base+0xc8>)
   11552:	movs	r1, #1
   11554:	ldr	r3, [r4, #20]
   11556:	ldr	r0, [r5, #0]
   11558:	add	r2, pc
   1155a:	blx	8860 <__fprintf_chk@plt+0x4>
   1155e:	ldr	r3, [r4, #32]
   11560:	cbz	r3, 11570 <btrfs_list_all_fs_features@@Base+0x84>
   11562:	ldr	r2, [pc, #84]	; (115b8 <btrfs_list_all_fs_features@@Base+0xcc>)
   11564:	movs	r1, #1
   11566:	ldr	r3, [r4, #28]
   11568:	ldr	r0, [r5, #0]
   1156a:	add	r2, pc
   1156c:	blx	8860 <__fprintf_chk@plt+0x4>
   11570:	ldr	r3, [r4, #40]	; 0x28
   11572:	cbz	r3, 11580 <btrfs_list_all_fs_features@@Base+0x94>
   11574:	ldr	r3, [r4, #36]	; 0x24
   11576:	mov	r2, fp
   11578:	ldr	r0, [r5, #0]
   1157a:	movs	r1, #1
   1157c:	blx	8860 <__fprintf_chk@plt+0x4>
   11580:	ldr	r1, [r5, #0]
   11582:	mov	r0, sl
   11584:	blx	8968 <fputs@plt+0x4>
   11588:	adds	r6, #1
   1158a:	adds	r4, #48	; 0x30
   1158c:	cmp	r6, #6
   1158e:	bne.n	11520 <btrfs_list_all_fs_features@@Base+0x34>
   11590:	add	sp, #28
   11592:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11596:	nop
   11598:	cmp	r0, #148	; 0x94
   1159a:	movs	r5, r0
   1159c:	lsls	r0, r6, #8
   1159e:	movs	r0, r0
   115a0:	ldrh	r6, [r1, #52]	; 0x34
   115a2:	movs	r2, r0
   115a4:	movs	r1, #0
   115a6:	movs	r5, r0
   115a8:	ldrh	r2, [r3, #52]	; 0x34
   115aa:	movs	r2, r0
   115ac:	asrs	r0, r0, #31
   115ae:	movs	r4, r0
   115b0:	ldrh	r6, [r7, #52]	; 0x34
   115b2:	movs	r2, r0
   115b4:	ldrh	r6, [r5, #50]	; 0x32
   115b6:	movs	r2, r0
   115b8:	ldrh	r0, [r5, #50]	; 0x32
   115ba:	movs	r2, r0

000115bc <btrfs_parse_fs_features@@Base>:
   115bc:	ldr	r2, [pc, #188]	; (1167c <btrfs_parse_fs_features@@Base+0xc0>)
   115be:	ldr	r3, [pc, #192]	; (11680 <btrfs_parse_fs_features@@Base+0xc4>)
   115c0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115c4:	add	r2, pc
   115c6:	sub	sp, #20
   115c8:	mov	r5, r1
   115ca:	add	r7, sp, #8
   115cc:	ldr	r1, [pc, #180]	; (11684 <btrfs_parse_fs_features@@Base+0xc8>)
   115ce:	ldr	r3, [r2, r3]
   115d0:	add	r1, pc
   115d2:	mov	r2, r7
   115d4:	ldr	r3, [r3, #0]
   115d6:	str	r3, [sp, #12]
   115d8:	mov.w	r3, #0
   115dc:	movs	r3, #0
   115de:	str	r3, [sp, #8]
   115e0:	blx	8628 <strtok_r@plt>
   115e4:	ldr.w	r9, [pc, #160]	; 11688 <btrfs_parse_fs_features@@Base+0xcc>
   115e8:	add	r9, pc
   115ea:	mov	r4, r0
   115ec:	cbnz	r4, 11602 <btrfs_parse_fs_features@@Base+0x46>
   115ee:	ldr	r2, [pc, #156]	; (1168c <btrfs_parse_fs_features@@Base+0xd0>)
   115f0:	ldr	r3, [pc, #140]	; (11680 <btrfs_parse_fs_features@@Base+0xc4>)
   115f2:	add	r2, pc
   115f4:	ldr	r3, [r2, r3]
   115f6:	ldr	r2, [r3, #0]
   115f8:	ldr	r3, [sp, #12]
   115fa:	eors	r2, r3
   115fc:	beq.n	11674 <btrfs_parse_fs_features@@Base+0xb8>
   115fe:	blx	8510 <__stack_chk_fail@plt>
   11602:	ldr	r6, [pc, #140]	; (11690 <btrfs_parse_fs_features@@Base+0xd4>)
   11604:	add.w	r8, r4, #1
   11608:	mov.w	fp, #0
   1160c:	add	r6, pc
   1160e:	add.w	sl, r6, #336	; 0x150
   11612:	ldrb	r2, [r4, #0]
   11614:	ldr	r3, [r6, #0]
   11616:	cmp	r2, #94	; 0x5e
   11618:	bne.n	1165a <btrfs_parse_fs_features@@Base+0x9e>
   1161a:	mov	r0, r3
   1161c:	mov	r1, r8
   1161e:	str	r3, [sp, #4]
   11620:	blx	83c0 <strcmp@plt>
   11624:	ldr	r3, [sp, #4]
   11626:	cbnz	r0, 1165a <btrfs_parse_fs_features@@Base+0x9e>
   11628:	ldrd	r0, r1, [r6, #8]
   1162c:	ldrd	r2, r3, [r5]
   11630:	bic.w	r2, r2, r0
   11634:	bic.w	r3, r3, r1
   11638:	mov.w	fp, #1
   1163c:	strd	r2, r3, [r5]
   11640:	adds	r6, #48	; 0x30
   11642:	cmp	sl, r6
   11644:	bne.n	11612 <btrfs_parse_fs_features@@Base+0x56>
   11646:	cmp.w	fp, #0
   1164a:	beq.n	115ee <btrfs_parse_fs_features@@Base+0x32>
   1164c:	mov	r2, r7
   1164e:	mov	r1, r9
   11650:	movs	r0, #0
   11652:	blx	8628 <strtok_r@plt>
   11656:	mov	r4, r0
   11658:	b.n	115ec <btrfs_parse_fs_features@@Base+0x30>
   1165a:	mov	r1, r4
   1165c:	mov	r0, r3
   1165e:	blx	83c0 <strcmp@plt>
   11662:	cmp	r0, #0
   11664:	bne.n	11640 <btrfs_parse_fs_features@@Base+0x84>
   11666:	ldrd	r2, r3, [r5]
   1166a:	ldrd	r0, r1, [r6, #8]
   1166e:	orrs	r2, r0
   11670:	orrs	r3, r1
   11672:	b.n	11638 <btrfs_parse_fs_features@@Base+0x7c>
   11674:	mov	r0, r4
   11676:	add	sp, #20
   11678:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1167c:	movs	r7, #192	; 0xc0
   1167e:	movs	r5, r0
   11680:	lsls	r0, r4, #8
   11682:	movs	r0, r0
   11684:	ldrb	r5, [r1, #17]
   11686:	movs	r2, r0
   11688:	ldrb	r5, [r6, #16]
   1168a:	movs	r2, r0
   1168c:	movs	r7, #146	; 0x92
   1168e:	movs	r5, r0
   11690:	movs	r0, #8
   11692:	movs	r5, r0

00011694 <print_kernel_version@@Base>:
   11694:	push	{r0, r1, r2, r4, r5, lr}
   11696:	uxtb	r5, r1
   11698:	ldr	r2, [pc, #44]	; (116c8 <print_kernel_version@@Base+0x34>)
   1169a:	ubfx	r3, r1, #8, #8
   1169e:	str	r3, [sp, #0]
   116a0:	lsrs	r3, r1, #16
   116a2:	add	r2, pc
   116a4:	movs	r1, #1
   116a6:	mov	r4, r0
   116a8:	blx	8860 <__fprintf_chk@plt+0x4>
   116ac:	cbz	r5, 116c2 <print_kernel_version@@Base+0x2e>
   116ae:	ldr	r2, [pc, #28]	; (116cc <print_kernel_version@@Base+0x38>)
   116b0:	mov	r3, r5
   116b2:	movs	r1, #1
   116b4:	mov	r0, r4
   116b6:	add	r2, pc
   116b8:	add	sp, #12
   116ba:	ldmia.w	sp!, {r4, r5, lr}
   116be:	b.w	885c <__fprintf_chk@plt>
   116c2:	add	sp, #12
   116c4:	pop	{r4, r5, pc}
   116c6:	nop
   116c8:	ldrh	r7, [r0, #42]	; 0x2a
   116ca:	movs	r2, r0
   116cc:	ldmia	r0, {r0, r1, r3, r4, r6, r7}
   116ce:	movs	r2, r0

000116d0 <get_running_kernel_version@@Base>:
   116d0:	ldr	r2, [pc, #204]	; (117a0 <get_running_kernel_version@@Base+0xd0>)
   116d2:	ldr	r3, [pc, #208]	; (117a4 <get_running_kernel_version@@Base+0xd4>)
   116d4:	push	{r4, r5, r6, r7, lr}
   116d6:	add	r2, pc
   116d8:	sub	sp, #404	; 0x194
   116da:	add	r6, sp, #4
   116dc:	ldr	r3, [r2, r3]
   116de:	mov	r5, sp
   116e0:	mov	r0, r6
   116e2:	ldr	r3, [r3, #0]
   116e4:	str	r3, [sp, #396]	; 0x18c
   116e6:	mov.w	r3, #0
   116ea:	movs	r3, #0
   116ec:	str	r3, [r5, #0]
   116ee:	blx	84dc <uname@plt>
   116f2:	ldr	r1, [pc, #180]	; (117a8 <get_running_kernel_version@@Base+0xd8>)
   116f4:	mov	r0, r6
   116f6:	add	r1, pc
   116f8:	blx	83c0 <strcmp@plt>
   116fc:	mov	r4, r0
   116fe:	cbz	r0, 11710 <get_running_kernel_version@@Base+0x40>
   11700:	ldr	r0, [pc, #168]	; (117ac <get_running_kernel_version@@Base+0xdc>)
   11702:	mov	r1, r6
   11704:	add	r0, pc
   11706:	bl	16b70 <__btrfs_error@@Base>
   1170a:	movs	r0, #1
   1170c:	blx	873c <exit@plt>
   11710:	add.w	r7, sp, #134	; 0x86
   11714:	movs	r1, #45	; 0x2d
   11716:	mov	r0, r7
   11718:	blx	8754 <strchr@plt>
   1171c:	cbz	r0, 11720 <get_running_kernel_version@@Base+0x50>
   1171e:	strb	r4, [r0, #0]
   11720:	ldr	r6, [pc, #140]	; (117b0 <get_running_kernel_version@@Base+0xe0>)
   11722:	mov	r2, r5
   11724:	mov	r0, r7
   11726:	add	r6, pc
   11728:	mov	r1, r6
   1172a:	blx	8628 <strtok_r@plt>
   1172e:	mov	r4, r0
   11730:	bl	31210 <string_is_numerical@@Base>
   11734:	cbnz	r0, 1174e <get_running_kernel_version@@Base+0x7e>
   11736:	mov.w	r4, #4294967295	; 0xffffffff
   1173a:	ldr	r2, [pc, #120]	; (117b4 <get_running_kernel_version@@Base+0xe4>)
   1173c:	ldr	r3, [pc, #100]	; (117a4 <get_running_kernel_version@@Base+0xd4>)
   1173e:	add	r2, pc
   11740:	ldr	r3, [r2, r3]
   11742:	ldr	r2, [r3, #0]
   11744:	ldr	r3, [sp, #396]	; 0x18c
   11746:	eors	r2, r3
   11748:	beq.n	11798 <get_running_kernel_version@@Base+0xc8>
   1174a:	blx	8510 <__stack_chk_fail@plt>
   1174e:	mov	r0, r4
   11750:	blx	8900 <atoi@plt>
   11754:	mov	r2, r5
   11756:	mov	r1, r6
   11758:	mov	r4, r0
   1175a:	movs	r0, #0
   1175c:	blx	8628 <strtok_r@plt>
   11760:	mov	r7, r0
   11762:	bl	31210 <string_is_numerical@@Base>
   11766:	cmp	r0, #0
   11768:	beq.n	11736 <get_running_kernel_version@@Base+0x66>
   1176a:	mov	r0, r7
   1176c:	blx	8900 <atoi@plt>
   11770:	mov	r2, r5
   11772:	mov	r1, r6
   11774:	lsls	r3, r0, #8
   11776:	movs	r0, #0
   11778:	orr.w	r4, r3, r4, lsl #16
   1177c:	blx	8628 <strtok_r@plt>
   11780:	mov	r5, r0
   11782:	cmp	r0, #0
   11784:	beq.n	1173a <get_running_kernel_version@@Base+0x6a>
   11786:	bl	31210 <string_is_numerical@@Base>
   1178a:	cmp	r0, #0
   1178c:	beq.n	1173a <get_running_kernel_version@@Base+0x6a>
   1178e:	mov	r0, r5
   11790:	blx	8900 <atoi@plt>
   11794:	orrs	r4, r0
   11796:	b.n	1173a <get_running_kernel_version@@Base+0x6a>
   11798:	mov	r0, r4
   1179a:	add	sp, #404	; 0x194
   1179c:	pop	{r4, r5, r6, r7, pc}
   1179e:	nop
   117a0:	movs	r6, #174	; 0xae
   117a2:	movs	r5, r0
   117a4:	lsls	r0, r4, #8
   117a6:	movs	r0, r0
   117a8:	ldrh	r1, [r7, #38]	; 0x26
   117aa:	movs	r2, r0
   117ac:	ldrh	r1, [r6, #38]	; 0x26
   117ae:	movs	r2, r0
   117b0:	asrs	r6, r0, #2
   117b2:	movs	r4, r0
   117b4:	movs	r6, #70	; 0x46
   117b6:	movs	r5, r0

000117b8 <btrfs_check_nodesize@@Base>:
   117b8:	cmp	r0, r1
   117ba:	push	{r4, r6, r7, lr}
   117bc:	mov	r4, r0
   117be:	bcs.n	117d2 <btrfs_check_nodesize@@Base+0x1a>
   117c0:	mov	r2, r1
   117c2:	mov	r1, r0
   117c4:	ldr	r0, [pc, #72]	; (11810 <btrfs_check_nodesize@@Base+0x58>)
   117c6:	add	r0, pc
   117c8:	bl	16b70 <__btrfs_error@@Base>
   117cc:	mov.w	r0, #4294967295	; 0xffffffff
   117d0:	pop	{r4, r6, r7, pc}
   117d2:	cmp.w	r0, #65536	; 0x10000
   117d6:	bls.n	117e4 <btrfs_check_nodesize@@Base+0x2c>
   117d8:	mov	r1, r0
   117da:	ldr	r0, [pc, #56]	; (11814 <btrfs_check_nodesize@@Base+0x5c>)
   117dc:	mov.w	r2, #65536	; 0x10000
   117e0:	add	r0, pc
   117e2:	b.n	117c8 <btrfs_check_nodesize@@Base+0x10>
   117e4:	subs	r3, r1, #1
   117e6:	ands	r0, r3
   117e8:	beq.n	117f4 <btrfs_check_nodesize@@Base+0x3c>
   117ea:	ldr	r0, [pc, #44]	; (11818 <btrfs_check_nodesize@@Base+0x60>)
   117ec:	mov	r2, r1
   117ee:	mov	r1, r4
   117f0:	add	r0, pc
   117f2:	b.n	117c8 <btrfs_check_nodesize@@Base+0x10>
   117f4:	and.w	r6, r2, #4
   117f8:	mov	r7, r0
   117fa:	orrs.w	r3, r6, r7
   117fe:	beq.n	117d0 <btrfs_check_nodesize@@Base+0x18>
   11800:	cmp	r4, r1
   11802:	beq.n	117d0 <btrfs_check_nodesize@@Base+0x18>
   11804:	ldr	r0, [pc, #20]	; (1181c <btrfs_check_nodesize@@Base+0x64>)
   11806:	mov	r2, r1
   11808:	mov	r1, r4
   1180a:	add	r0, pc
   1180c:	b.n	117c8 <btrfs_check_nodesize@@Base+0x10>
   1180e:	nop
   11810:	ldrh	r6, [r0, #34]	; 0x22
   11812:	movs	r2, r0
   11814:	ldrh	r2, [r2, #34]	; 0x22
   11816:	movs	r2, r0
   11818:	ldrh	r7, [r4, #34]	; 0x22
   1181a:	movs	r2, r0
   1181c:	ldrh	r5, [r6, #34]	; 0x22
   1181e:	movs	r2, r0
   11820:	push	{r4, lr}
   11822:	mov	r4, r0
   11824:	subs	r4, #1
   11826:	bcs.n	1182a <btrfs_check_nodesize@@Base+0x72>
   11828:	pop	{r4, pc}
   1182a:	movs	r0, #32
   1182c:	blx	87d4 <putchar@plt+0x4>
   11830:	movs	r0, #32
   11832:	blx	87d4 <putchar@plt+0x4>
   11836:	b.n	11824 <btrfs_check_nodesize@@Base+0x6c>
   11838:	push	{r4, lr}
   1183a:	mov	r4, r0
   1183c:	subs	r4, #1
   1183e:	bcs.n	11842 <btrfs_check_nodesize@@Base+0x8a>
   11840:	pop	{r4, pc}
   11842:	movs	r0, #32
   11844:	blx	87d4 <putchar@plt+0x4>
   11848:	b.n	1183c <btrfs_check_nodesize@@Base+0x84>
   1184a:	ldr	r3, [pc, #92]	; (118a8 <btrfs_check_nodesize@@Base+0xf0>)
   1184c:	ldr	r2, [pc, #92]	; (118ac <btrfs_check_nodesize@@Base+0xf4>)
   1184e:	add	r3, pc
   11850:	push	{r4, lr}
   11852:	mov	r4, r0
   11854:	ldr	r3, [r3, r2]
   11856:	ldr	r3, [r3, #0]
   11858:	cmp	r3, #8
   1185a:	bne.n	1187c <btrfs_check_nodesize@@Base+0xc4>
   1185c:	ldr	r3, [r0, #8]
   1185e:	adds	r3, #8
   11860:	ldr.w	r3, [r0, r3, lsl #2]
   11864:	cbnz	r3, 1187e <btrfs_check_nodesize@@Base+0xc6>
   11866:	movs	r0, #10
   11868:	blx	87d4 <putchar@plt+0x4>
   1186c:	ldr	r0, [r4, #8]
   1186e:	bl	11820 <btrfs_check_nodesize@@Base+0x68>
   11872:	ldr	r3, [r4, #8]
   11874:	movs	r2, #1
   11876:	adds	r3, #8
   11878:	str.w	r2, [r4, r3, lsl #2]
   1187c:	pop	{r4, pc}
   1187e:	cmp	r3, #1
   11880:	bne.n	11898 <btrfs_check_nodesize@@Base+0xe0>
   11882:	ldr	r0, [pc, #44]	; (118b0 <btrfs_check_nodesize@@Base+0xf8>)
   11884:	add	r0, pc
   11886:	blx	865c <puts@plt+0x4>
   1188a:	ldr	r0, [r4, #8]
   1188c:	bl	11820 <btrfs_check_nodesize@@Base+0x68>
   11890:	ldr	r3, [r4, #8]
   11892:	movs	r2, #2
   11894:	adds	r3, #8
   11896:	b.n	11878 <btrfs_check_nodesize@@Base+0xc0>
   11898:	ldr	r0, [pc, #24]	; (118b4 <btrfs_check_nodesize@@Base+0xfc>)
   1189a:	add	r0, pc
   1189c:	blx	865c <puts@plt+0x4>
   118a0:	ldr	r0, [r4, #8]
   118a2:	ldmia.w	sp!, {r4, lr}
   118a6:	b.n	11820 <btrfs_check_nodesize@@Base+0x68>
   118a8:	movs	r5, #54	; 0x36
   118aa:	movs	r5, r0
   118ac:	lsls	r4, r3, #8
   118ae:	movs	r0, r0
   118b0:	ldrb	r1, [r3, #6]
   118b2:	movs	r2, r0
   118b4:	ldrb	r3, [r0, #6]
   118b6:	movs	r2, r0
   118b8:	push	{r4, lr}
   118ba:	ldr	r4, [r0, #4]
   118bc:	ldr	r1, [pc, #32]	; (118e0 <btrfs_check_nodesize@@Base+0x128>)
   118be:	mov	r0, r4
   118c0:	add	r1, pc
   118c2:	blx	83c0 <strcmp@plt>
   118c6:	cbz	r0, 118de <btrfs_check_nodesize@@Base+0x126>
   118c8:	ldr	r1, [pc, #24]	; (118e4 <btrfs_check_nodesize@@Base+0x12c>)
   118ca:	mov	r0, r4
   118cc:	add	r1, pc
   118ce:	blx	83c0 <strcmp@plt>
   118d2:	cbz	r0, 118de <btrfs_check_nodesize@@Base+0x126>
   118d4:	ldmia.w	sp!, {r4, lr}
   118d8:	movs	r0, #34	; 0x22
   118da:	b.w	87d0 <putchar@plt>
   118de:	pop	{r4, pc}
   118e0:	ldrh	r1, [r4, #42]	; 0x2a
   118e2:	movs	r2, r0
   118e4:	ldmia	r2!, {r0, r3, r4, r5, r6}
   118e6:	movs	r2, r0

000118e8 <fmt_end@@Base>:
   118e8:	push	{r3, r4, r5, lr}
   118ea:	mov	r4, r0
   118ec:	ldr	r3, [r0, #8]
   118ee:	ldr	r5, [pc, #88]	; (11948 <fmt_end@@Base+0x60>)
   118f0:	cmp	r3, #1
   118f2:	add	r5, pc
   118f4:	beq.n	11904 <fmt_end@@Base+0x1c>
   118f6:	ldr	r3, [pc, #84]	; (1194c <fmt_end@@Base+0x64>)
   118f8:	ldr	r0, [pc, #84]	; (11950 <fmt_end@@Base+0x68>)
   118fa:	ldr	r3, [r5, r3]
   118fc:	add	r0, pc
   118fe:	ldr	r1, [r3, #0]
   11900:	blx	8968 <fputs@plt+0x4>
   11904:	ldr	r3, [pc, #76]	; (11954 <fmt_end@@Base+0x6c>)
   11906:	ldr	r3, [r5, r3]
   11908:	ldr	r3, [r3, #0]
   1190a:	lsls	r2, r3, #29
   1190c:	bpl.n	11918 <fmt_end@@Base+0x30>
   1190e:	ldmia.w	sp!, {r3, r4, r5, lr}
   11912:	movs	r0, #10
   11914:	b.w	87d0 <putchar@plt>
   11918:	lsls	r3, r3, #28
   1191a:	bpl.n	11946 <fmt_end@@Base+0x5e>
   1191c:	ldr	r3, [r4, #8]
   1191e:	cmp	r3, #0
   11920:	bgt.n	11930 <fmt_end@@Base+0x48>
   11922:	ldr	r0, [pc, #52]	; (11958 <fmt_end@@Base+0x70>)
   11924:	add	r0, pc
   11926:	blx	865c <puts@plt+0x4>
   1192a:	movs	r0, #1
   1192c:	blx	873c <exit@plt>
   11930:	subs	r3, #1
   11932:	mov	r0, r4
   11934:	str	r3, [r4, #8]
   11936:	bl	1184a <btrfs_check_nodesize@@Base+0x92>
   1193a:	ldr	r0, [pc, #32]	; (1195c <fmt_end@@Base+0x74>)
   1193c:	ldmia.w	sp!, {r3, r4, r5, lr}
   11940:	add	r0, pc
   11942:	b.w	8658 <puts@plt>
   11946:	pop	{r3, r4, r5, pc}
   11948:	movs	r4, #146	; 0x92
   1194a:	movs	r5, r0
   1194c:	lsls	r0, r6, #8
   1194e:	movs	r0, r0
   11950:	ldrh	r2, [r5, #40]	; 0x28
   11952:	movs	r2, r0
   11954:	lsls	r4, r3, #8
   11956:	movs	r0, r0
   11958:	ldrh	r2, [r3, #40]	; 0x28
   1195a:	movs	r2, r0
   1195c:	ldrh	r0, [r5, #40]	; 0x28
   1195e:	movs	r2, r0

00011960 <fmt_start_list_value@@Base>:
   11960:	ldr	r3, [pc, #48]	; (11994 <fmt_start_list_value@@Base+0x34>)
   11962:	ldr	r2, [pc, #52]	; (11998 <fmt_start_list_value@@Base+0x38>)
   11964:	add	r3, pc
   11966:	push	{r4, lr}
   11968:	mov	r4, r0
   1196a:	ldr	r3, [r3, r2]
   1196c:	ldr	r3, [r3, #0]
   1196e:	cmp	r3, #4
   11970:	bne.n	1197a <fmt_start_list_value@@Base+0x1a>
   11972:	ldmia.w	sp!, {r4, lr}
   11976:	ldr	r0, [r0, #4]
   11978:	b.n	11838 <btrfs_check_nodesize@@Base+0x80>
   1197a:	cmp	r3, #8
   1197c:	bne.n	11992 <fmt_start_list_value@@Base+0x32>
   1197e:	bl	1184a <btrfs_check_nodesize@@Base+0x92>
   11982:	ldr	r0, [r4, #8]
   11984:	bl	11820 <btrfs_check_nodesize@@Base+0x68>
   11988:	ldmia.w	sp!, {r4, lr}
   1198c:	movs	r0, #34	; 0x22
   1198e:	b.w	87d0 <putchar@plt>
   11992:	pop	{r4, pc}
   11994:	movs	r4, #32
   11996:	movs	r5, r0
   11998:	lsls	r4, r3, #8
	...

0001199c <fmt_end_list_value@@Base>:
   1199c:	ldr	r3, [pc, #28]	; (119bc <fmt_end_list_value@@Base+0x20>)
   1199e:	ldr	r2, [pc, #32]	; (119c0 <fmt_end_list_value@@Base+0x24>)
   119a0:	add	r3, pc
   119a2:	ldr	r3, [r3, r2]
   119a4:	ldr	r3, [r3, #0]
   119a6:	cmp	r3, #4
   119a8:	bne.n	119b0 <fmt_end_list_value@@Base+0x14>
   119aa:	movs	r0, #10
   119ac:	b.w	87d0 <putchar@plt>
   119b0:	cmp	r3, #8
   119b2:	bne.n	119b8 <fmt_end_list_value@@Base+0x1c>
   119b4:	movs	r0, #34	; 0x22
   119b6:	b.n	119ac <fmt_end_list_value@@Base+0x10>
   119b8:	bx	lr
   119ba:	nop
   119bc:	movs	r3, #228	; 0xe4
   119be:	movs	r5, r0
   119c0:	lsls	r4, r3, #8
	...

000119c4 <fmt_start_value@@Base>:
   119c4:	ldr	r3, [pc, #64]	; (11a08 <fmt_start_value@@Base+0x44>)
   119c6:	mov	r0, r1
   119c8:	ldr	r2, [pc, #64]	; (11a0c <fmt_start_value@@Base+0x48>)
   119ca:	add	r3, pc
   119cc:	push	{r4, lr}
   119ce:	ldr	r3, [r3, r2]
   119d0:	ldr	r3, [r3, #0]
   119d2:	cmp	r3, #4
   119d4:	bne.n	119fe <fmt_start_value@@Base+0x3a>
   119d6:	ldr	r4, [r1, #4]
   119d8:	ldr	r1, [pc, #52]	; (11a10 <fmt_start_value@@Base+0x4c>)
   119da:	mov	r0, r4
   119dc:	add	r1, pc
   119de:	blx	83c0 <strcmp@plt>
   119e2:	cbnz	r0, 119ee <fmt_start_value@@Base+0x2a>
   119e4:	ldmia.w	sp!, {r4, lr}
   119e8:	movs	r0, #10
   119ea:	b.w	87d0 <putchar@plt>
   119ee:	ldr	r1, [pc, #36]	; (11a14 <fmt_start_value@@Base+0x50>)
   119f0:	mov	r0, r4
   119f2:	add	r1, pc
   119f4:	blx	83c0 <strcmp@plt>
   119f8:	cmp	r0, #0
   119fa:	beq.n	119e4 <fmt_start_value@@Base+0x20>
   119fc:	pop	{r4, pc}
   119fe:	cmp	r3, #8
   11a00:	bne.n	119fc <fmt_start_value@@Base+0x38>
   11a02:	ldmia.w	sp!, {r4, lr}
   11a06:	b.n	118b8 <btrfs_check_nodesize@@Base+0x100>
   11a08:	movs	r3, #186	; 0xba
   11a0a:	movs	r5, r0
   11a0c:	lsls	r4, r3, #8
   11a0e:	movs	r0, r0
   11a10:	ldrh	r5, [r0, #34]	; 0x22
   11a12:	movs	r2, r0
   11a14:	ldmia	r1, {r0, r1, r4, r6}
   11a16:	movs	r2, r0

00011a18 <fmt_end_value@@Base>:
   11a18:	ldr	r3, [pc, #16]	; (11a2c <fmt_end_value@@Base+0x14>)
   11a1a:	mov	r0, r1
   11a1c:	ldr	r2, [pc, #16]	; (11a30 <fmt_end_value@@Base+0x18>)
   11a1e:	add	r3, pc
   11a20:	ldr	r3, [r3, r2]
   11a22:	ldr	r3, [r3, #0]
   11a24:	cmp	r3, #8
   11a26:	bne.n	11a2a <fmt_end_value@@Base+0x12>
   11a28:	b.n	118b8 <btrfs_check_nodesize@@Base+0x100>
   11a2a:	bx	lr
   11a2c:	movs	r3, #102	; 0x66
   11a2e:	movs	r5, r0
   11a30:	lsls	r4, r3, #8
	...

00011a34 <fmt_print_start_group@@Base>:
   11a34:	ldr	r3, [pc, #108]	; (11aa4 <fmt_print_start_group@@Base+0x70>)
   11a36:	push	{r4, r5, r6, lr}
   11a38:	mov	r4, r2
   11a3a:	ldr	r2, [pc, #108]	; (11aa8 <fmt_print_start_group@@Base+0x74>)
   11a3c:	add	r3, pc
   11a3e:	mov	r5, r0
   11a40:	mov	r6, r1
   11a42:	ldr	r3, [r3, r2]
   11a44:	ldr	r3, [r3, #0]
   11a46:	cmp	r3, #8
   11a48:	bne.n	11aa2 <fmt_print_start_group@@Base+0x6e>
   11a4a:	bl	1184a <btrfs_check_nodesize@@Base+0x92>
   11a4e:	ldr	r3, [r5, #8]
   11a50:	cmp	r3, #14
   11a52:	ble.n	11a66 <fmt_print_start_group@@Base+0x32>
   11a54:	ldr	r1, [pc, #84]	; (11aac <fmt_print_start_group@@Base+0x78>)
   11a56:	movs	r2, #16
   11a58:	add	r1, pc
   11a5a:	movs	r0, #1
   11a5c:	blx	8838 <__printf_chk@plt+0x4>
   11a60:	movs	r0, #1
   11a62:	blx	873c <exit@plt>
   11a66:	adds	r2, r3, #1
   11a68:	cmp	r4, #1
   11a6a:	add.w	r1, r5, r2
   11a6e:	add.w	r3, r3, #9
   11a72:	str	r2, [r5, #8]
   11a74:	strb	r4, [r1, #16]
   11a76:	mov.w	r1, #0
   11a7a:	str.w	r1, [r5, r3, lsl #2]
   11a7e:	bne.n	11a90 <fmt_print_start_group@@Base+0x5c>
   11a80:	ldr	r1, [pc, #44]	; (11ab0 <fmt_print_start_group@@Base+0x7c>)
   11a82:	mov	r2, r6
   11a84:	add	r1, pc
   11a86:	ldmia.w	sp!, {r4, r5, r6, lr}
   11a8a:	movs	r0, #1
   11a8c:	b.w	8834 <__printf_chk@plt>
   11a90:	cmp	r4, #2
   11a92:	bne.n	11a9c <fmt_print_start_group@@Base+0x68>
   11a94:	ldr	r1, [pc, #28]	; (11ab4 <fmt_print_start_group@@Base+0x80>)
   11a96:	mov	r2, r6
   11a98:	add	r1, pc
   11a9a:	b.n	11a86 <fmt_print_start_group@@Base+0x52>
   11a9c:	ldr	r1, [pc, #24]	; (11ab8 <fmt_print_start_group@@Base+0x84>)
   11a9e:	add	r1, pc
   11aa0:	b.n	11a5a <fmt_print_start_group@@Base+0x26>
   11aa2:	pop	{r4, r5, r6, pc}
   11aa4:	movs	r3, #72	; 0x48
   11aa6:	movs	r5, r0
   11aa8:	lsls	r4, r3, #8
   11aaa:	movs	r0, r0
   11aac:	ldrh	r2, [r2, #32]
   11aae:	movs	r2, r0
   11ab0:	ldrh	r2, [r2, #32]
   11ab2:	movs	r2, r0
   11ab4:	ldrh	r6, [r0, #32]
   11ab6:	movs	r2, r0
   11ab8:	ldrh	r0, [r1, #32]
   11aba:	movs	r2, r0

00011abc <fmt_print_end_group@@Base>:
   11abc:	push	{r3, r4, r5, lr}
   11abe:	mov	r4, r0
   11ac0:	ldr	r3, [pc, #88]	; (11b1c <fmt_print_end_group@@Base+0x60>)
   11ac2:	ldr	r2, [pc, #92]	; (11b20 <fmt_print_end_group@@Base+0x64>)
   11ac4:	add	r3, pc
   11ac6:	ldr	r3, [r3, r2]
   11ac8:	ldr	r3, [r3, #0]
   11aca:	cmp	r3, #8
   11acc:	bne.n	11b1a <fmt_print_end_group@@Base+0x5e>
   11ace:	ldr	r3, [r0, #8]
   11ad0:	adds	r2, r0, r3
   11ad2:	cmp	r3, #0
   11ad4:	ldrb	r5, [r2, #16]
   11ad6:	bgt.n	11ae6 <fmt_print_end_group@@Base+0x2a>
   11ad8:	ldr	r0, [pc, #72]	; (11b24 <fmt_print_end_group@@Base+0x68>)
   11ada:	add	r0, pc
   11adc:	blx	865c <puts@plt+0x4>
   11ae0:	movs	r0, #1
   11ae2:	blx	873c <exit@plt>
   11ae6:	subs	r3, #1
   11ae8:	str	r3, [r0, #8]
   11aea:	movs	r0, #10
   11aec:	blx	87d4 <putchar@plt+0x4>
   11af0:	ldr	r0, [r4, #8]
   11af2:	bl	11820 <btrfs_check_nodesize@@Base+0x68>
   11af6:	cmp	r5, #1
   11af8:	bne.n	11b04 <fmt_print_end_group@@Base+0x48>
   11afa:	movs	r0, #125	; 0x7d
   11afc:	ldmia.w	sp!, {r3, r4, r5, lr}
   11b00:	b.w	87d0 <putchar@plt>
   11b04:	cmp	r5, #2
   11b06:	bne.n	11b0c <fmt_print_end_group@@Base+0x50>
   11b08:	movs	r0, #93	; 0x5d
   11b0a:	b.n	11afc <fmt_print_end_group@@Base+0x40>
   11b0c:	ldr	r1, [pc, #24]	; (11b28 <fmt_print_end_group@@Base+0x6c>)
   11b0e:	movs	r0, #1
   11b10:	ldr	r2, [r4, #8]
   11b12:	add	r1, pc
   11b14:	blx	8838 <__printf_chk@plt+0x4>
   11b18:	b.n	11ae0 <fmt_print_end_group@@Base+0x24>
   11b1a:	pop	{r3, r4, r5, pc}
   11b1c:	movs	r2, #192	; 0xc0
   11b1e:	movs	r5, r0
   11b20:	lsls	r4, r3, #8
   11b22:	movs	r0, r0
   11b24:	ldrh	r4, [r4, #26]
   11b26:	movs	r2, r0
   11b28:	ldrh	r4, [r2, #28]
   11b2a:	movs	r2, r0

00011b2c <fmt_start@@Base>:
   11b2c:	push	{r4, r5, r6, lr}
   11b2e:	mov	r4, r0
   11b30:	ldr	r0, [pc, #92]	; (11b90 <fmt_start@@Base+0x64>)
   11b32:	movs	r5, #1
   11b34:	strd	r2, r3, [r4]
   11b38:	ldr	r3, [pc, #88]	; (11b94 <fmt_start@@Base+0x68>)
   11b3a:	add	r0, pc
   11b3c:	str	r1, [r4, #12]
   11b3e:	str	r5, [r4, #8]
   11b40:	ldr	r3, [r0, r3]
   11b42:	ldr	r3, [r3, #0]
   11b44:	lsls	r3, r3, #28
   11b46:	bpl.n	11b8e <fmt_start@@Base+0x62>
   11b48:	movs	r0, #123	; 0x7b
   11b4a:	ldr	r6, [pc, #76]	; (11b98 <fmt_start@@Base+0x6c>)
   11b4c:	blx	87d4 <putchar@plt+0x4>
   11b50:	ldr	r3, [r4, #8]
   11b52:	add	r6, pc
   11b54:	mov	r0, r4
   11b56:	adds	r2, r4, r3
   11b58:	adds	r3, #8
   11b5a:	mov	r1, r6
   11b5c:	strb	r5, [r2, #16]
   11b5e:	movs	r2, #0
   11b60:	str.w	r2, [r4, r3, lsl #2]
   11b64:	mov	r2, r5
   11b66:	bl	11a34 <fmt_print_start_group@@Base>
   11b6a:	mov	r0, r4
   11b6c:	bl	1184a <btrfs_check_nodesize@@Base+0x92>
   11b70:	ldr	r1, [pc, #40]	; (11b9c <fmt_start@@Base+0x70>)
   11b72:	mov	r0, r5
   11b74:	add	r1, pc
   11b76:	blx	8838 <__printf_chk@plt+0x4>
   11b7a:	ldr	r3, [r4, #8]
   11b7c:	mov	r1, r6
   11b7e:	mov	r0, r4
   11b80:	adds	r3, #8
   11b82:	str.w	r5, [r4, r3, lsl #2]
   11b86:	ldmia.w	sp!, {r4, r5, r6, lr}
   11b8a:	b.w	11abc <fmt_print_end_group@@Base>
   11b8e:	pop	{r4, r5, r6, pc}
   11b90:	movs	r2, #74	; 0x4a
   11b92:	movs	r5, r0
   11b94:	lsls	r4, r3, #8
   11b96:	movs	r0, r0
   11b98:	ldrh	r7, [r7, #26]
   11b9a:	movs	r2, r0
   11b9c:	ldrh	r6, [r4, #26]
   11b9e:	movs	r2, r0

00011ba0 <fmt_print@@Base>:
   11ba0:	push	{r1, r2, r3}
   11ba2:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   11ba6:	mov	r5, r0
   11ba8:	sub	sp, #332	; 0x14c
   11baa:	ldr	r0, [pc, #572]	; (11de8 <fmt_print@@Base+0x248>)
   11bac:	add	r3, sp, #356	; 0x164
   11bae:	ldr	r1, [pc, #572]	; (11dec <fmt_print@@Base+0x24c>)
   11bb0:	add	r0, pc
   11bb2:	ldr	r4, [r5, #12]
   11bb4:	ldr.w	r2, [r3], #4
   11bb8:	add	r6, sp, #16
   11bba:	ldr	r1, [r0, r1]
   11bbc:	ldr	r7, [pc, #560]	; (11df0 <fmt_print@@Base+0x250>)
   11bbe:	ldr	r1, [r1, #0]
   11bc0:	str	r1, [sp, #324]	; 0x144
   11bc2:	mov.w	r1, #0
   11bc6:	str	r3, [r6, #0]
   11bc8:	add	r7, pc
   11bca:	ldr	r1, [r4, #0]
   11bcc:	cbnz	r1, 11bde <fmt_print@@Base+0x3e>
   11bce:	ldr	r1, [pc, #548]	; (11df4 <fmt_print@@Base+0x254>)
   11bd0:	movs	r0, #1
   11bd2:	add	r1, pc
   11bd4:	blx	8838 <__printf_chk@plt+0x4>
   11bd8:	movs	r0, #1
   11bda:	blx	873c <exit@plt>
   11bde:	mov	r0, r2
   11be0:	str	r2, [sp, #12]
   11be2:	blx	83c0 <strcmp@plt>
   11be6:	cmp	r0, #0
   11be8:	beq.w	11d5a <fmt_print@@Base+0x1ba>
   11bec:	ldr	r2, [sp, #12]
   11bee:	adds	r4, #16
   11bf0:	b.n	11bca <fmt_print@@Base+0x2a>
   11bf2:	cmp	r3, #8
   11bf4:	bne.w	11da6 <fmt_print@@Base+0x206>
   11bf8:	ldr	r7, [r4, #4]
   11bfa:	ldr	r1, [pc, #508]	; (11df8 <fmt_print@@Base+0x258>)
   11bfc:	mov	r0, r7
   11bfe:	add	r1, pc
   11c00:	blx	83c0 <strcmp@plt>
   11c04:	cbnz	r0, 11c12 <fmt_print@@Base+0x72>
   11c06:	movs	r2, #2
   11c08:	ldr	r1, [r4, #12]
   11c0a:	mov	r0, r5
   11c0c:	bl	11a34 <fmt_print_start_group@@Base>
   11c10:	b.n	11da6 <fmt_print@@Base+0x206>
   11c12:	ldr	r1, [pc, #488]	; (11dfc <fmt_print@@Base+0x25c>)
   11c14:	mov	r0, r7
   11c16:	add	r1, pc
   11c18:	blx	83c0 <strcmp@plt>
   11c1c:	cbnz	r0, 11c22 <fmt_print@@Base+0x82>
   11c1e:	movs	r2, #1
   11c20:	b.n	11c08 <fmt_print@@Base+0x68>
   11c22:	mov	r0, r5
   11c24:	bl	1184a <btrfs_check_nodesize@@Base+0x92>
   11c28:	ldr	r1, [pc, #468]	; (11e00 <fmt_print@@Base+0x260>)
   11c2a:	ldr	r2, [r4, #12]
   11c2c:	movs	r0, #1
   11c2e:	add	r1, pc
   11c30:	blx	8838 <__printf_chk@plt+0x4>
   11c34:	b.n	11da6 <fmt_print@@Base+0x206>
   11c36:	ldr	r1, [pc, #460]	; (11e04 <fmt_print@@Base+0x264>)
   11c38:	mov	r0, r7
   11c3a:	add	r1, pc
   11c3c:	blx	83c0 <strcmp@plt>
   11c40:	cbnz	r0, 11c74 <fmt_print@@Base+0xd4>
   11c42:	ldr	r3, [r6, #0]
   11c44:	adds	r2, r3, #4
   11c46:	str	r2, [r6, #0]
   11c48:	ldr	r6, [r3, #0]
   11c4a:	mov	r0, r6
   11c4c:	blx	87b4 <uuid_is_null@plt>
   11c50:	cbz	r0, 11c5a <fmt_print@@Base+0xba>
   11c52:	movs	r0, #45	; 0x2d
   11c54:	blx	87d4 <putchar@plt+0x4>
   11c58:	b.n	11dc2 <fmt_print@@Base+0x222>
   11c5a:	add	r2, sp, #68	; 0x44
   11c5c:	mov	r0, r6
   11c5e:	str	r2, [sp, #12]
   11c60:	mov	r1, r2
   11c62:	blx	83d8 <uuid_unparse@plt>
   11c66:	ldr	r1, [pc, #416]	; (11e08 <fmt_print@@Base+0x268>)
   11c68:	ldr	r2, [sp, #12]
   11c6a:	add	r1, pc
   11c6c:	movs	r0, #1
   11c6e:	blx	8838 <__printf_chk@plt+0x4>
   11c72:	b.n	11dc2 <fmt_print@@Base+0x222>
   11c74:	ldr	r1, [pc, #404]	; (11e0c <fmt_print@@Base+0x26c>)
   11c76:	mov	r0, r7
   11c78:	add	r1, pc
   11c7a:	blx	83c0 <strcmp@plt>
   11c7e:	cbnz	r0, 11cb4 <fmt_print@@Base+0x114>
   11c80:	ldr	r3, [r6, #0]
   11c82:	add	r0, sp, #20
   11c84:	adds	r2, r3, #4
   11c86:	str	r2, [r6, #0]
   11c88:	ldr	r3, [r3, #0]
   11c8a:	str	r3, [r0, #0]
   11c8c:	cmp	r3, #0
   11c8e:	beq.n	11c52 <fmt_print@@Base+0xb2>
   11c90:	add	r3, sp, #24
   11c92:	add	r6, sp, #68	; 0x44
   11c94:	str	r3, [sp, #12]
   11c96:	mov	r1, r3
   11c98:	blx	8538 <localtime_r@plt>
   11c9c:	ldr	r2, [pc, #368]	; (11e10 <fmt_print@@Base+0x270>)
   11c9e:	mov.w	r1, #256	; 0x100
   11ca2:	ldr	r3, [sp, #12]
   11ca4:	add	r2, pc
   11ca6:	mov	r0, r6
   11ca8:	blx	86ac <strftime@plt>
   11cac:	ldr	r1, [pc, #356]	; (11e14 <fmt_print@@Base+0x274>)
   11cae:	mov	r2, r6
   11cb0:	add	r1, pc
   11cb2:	b.n	11c6c <fmt_print@@Base+0xcc>
   11cb4:	ldr	r1, [pc, #352]	; (11e18 <fmt_print@@Base+0x278>)
   11cb6:	mov	r0, r7
   11cb8:	add	r1, pc
   11cba:	blx	83c0 <strcmp@plt>
   11cbe:	cmp	r0, #0
   11cc0:	beq.n	11dc2 <fmt_print@@Base+0x222>
   11cc2:	ldr	r1, [pc, #344]	; (11e1c <fmt_print@@Base+0x27c>)
   11cc4:	mov	r0, r7
   11cc6:	add	r1, pc
   11cc8:	blx	83c0 <strcmp@plt>
   11ccc:	cmp	r0, #0
   11cce:	beq.n	11dc2 <fmt_print@@Base+0x222>
   11cd0:	ldr	r1, [pc, #332]	; (11e20 <fmt_print@@Base+0x280>)
   11cd2:	mov	r0, r7
   11cd4:	add	r1, pc
   11cd6:	blx	83c0 <strcmp@plt>
   11cda:	cbnz	r0, 11cfc <fmt_print@@Base+0x15c>
   11cdc:	ldr	r1, [r6, #0]
   11cde:	movs	r0, #1
   11ce0:	adds	r1, #7
   11ce2:	bic.w	r1, r1, #7
   11ce6:	ldrd	r2, r3, [r1, #8]
   11cea:	strd	r2, r3, [sp]
   11cee:	ldrd	r2, r3, [r1]
   11cf2:	ldr	r1, [pc, #304]	; (11e24 <fmt_print@@Base+0x284>)
   11cf4:	add	r1, pc
   11cf6:	blx	8838 <__printf_chk@plt+0x4>
   11cfa:	b.n	11dc2 <fmt_print@@Base+0x222>
   11cfc:	ldr	r1, [pc, #296]	; (11e28 <fmt_print@@Base+0x288>)
   11cfe:	mov	r0, r7
   11d00:	add	r1, pc
   11d02:	blx	83c0 <strcmp@plt>
   11d06:	cbnz	r0, 11d2c <fmt_print@@Base+0x18c>
   11d08:	ldr	r3, [r6, #0]
   11d0a:	adds	r3, #7
   11d0c:	bic.w	r3, r3, #7
   11d10:	mov	r2, r3
   11d12:	ldrd	r0, r1, [r2], #12
   11d16:	str	r2, [r6, #0]
   11d18:	orrs.w	r2, r0, r1
   11d1c:	beq.n	11c52 <fmt_print@@Base+0xb2>
   11d1e:	ldr	r2, [r3, #8]
   11d20:	bl	2fbf8 <pretty_size_mode@@Base>
   11d24:	ldr	r1, [pc, #260]	; (11e2c <fmt_print@@Base+0x28c>)
   11d26:	add	r1, pc
   11d28:	mov	r2, r0
   11d2a:	b.n	11c6c <fmt_print@@Base+0xcc>
   11d2c:	ldr	r1, [pc, #256]	; (11e30 <fmt_print@@Base+0x290>)
   11d2e:	mov	r0, r7
   11d30:	add	r1, pc
   11d32:	blx	83c0 <strcmp@plt>
   11d36:	cbnz	r0, 11d52 <fmt_print@@Base+0x1b2>
   11d38:	ldr	r3, [r6, #0]
   11d3a:	adds	r3, #7
   11d3c:	bic.w	r3, r3, #7
   11d40:	ldr	r2, [r3, #8]
   11d42:	ldrd	r0, r1, [r3]
   11d46:	bl	2fbf8 <pretty_size_mode@@Base>
   11d4a:	ldr	r1, [pc, #232]	; (11e34 <fmt_print@@Base+0x294>)
   11d4c:	add	r1, pc
   11d4e:	mov	r2, r0
   11d50:	b.n	11c6c <fmt_print@@Base+0xcc>
   11d52:	ldr	r1, [pc, #228]	; (11e38 <fmt_print@@Base+0x298>)
   11d54:	mov	r2, r7
   11d56:	add	r1, pc
   11d58:	b.n	11c6c <fmt_print@@Base+0xcc>
   11d5a:	ldr	r3, [pc, #224]	; (11e3c <fmt_print@@Base+0x29c>)
   11d5c:	ldr	r3, [r7, r3]
   11d5e:	ldr	r3, [r3, #0]
   11d60:	cmp	r3, #4
   11d62:	bne.w	11bf2 <fmt_print@@Base+0x52>
   11d66:	ldr	r3, [r4, #8]
   11d68:	movs	r0, #10
   11d6a:	ldrb.w	r8, [r3]
   11d6e:	blx	87d4 <putchar@plt+0x4>
   11d72:	ldr	r0, [r5, #4]
   11d74:	bl	11838 <btrfs_check_nodesize@@Base+0x80>
   11d78:	ldr	r2, [r4, #8]
   11d7a:	mov	r0, r2
   11d7c:	str	r2, [sp, #12]
   11d7e:	blx	8748 <strlen@plt>
   11d82:	ldr	r1, [pc, #188]	; (11e40 <fmt_print@@Base+0x2a0>)
   11d84:	ldr	r2, [sp, #12]
   11d86:	add	r1, pc
   11d88:	mov	r7, r0
   11d8a:	movs	r0, #1
   11d8c:	blx	8838 <__printf_chk@plt+0x4>
   11d90:	cmp.w	r8, #0
   11d94:	beq.n	11d9e <fmt_print@@Base+0x1fe>
   11d96:	movs	r0, #58	; 0x3a
   11d98:	adds	r7, #1
   11d9a:	blx	87d4 <putchar@plt+0x4>
   11d9e:	ldr	r0, [r5, #0]
   11da0:	subs	r0, r0, r7
   11da2:	bl	11838 <btrfs_check_nodesize@@Base+0x80>
   11da6:	mov	r1, r4
   11da8:	mov	r0, r5
   11daa:	bl	119c4 <fmt_start_value@@Base>
   11dae:	ldr	r7, [r4, #4]
   11db0:	ldrb	r3, [r7, #0]
   11db2:	cmp	r3, #37	; 0x25
   11db4:	bne.w	11c36 <fmt_print@@Base+0x96>
   11db8:	ldr	r2, [r6, #0]
   11dba:	mov	r1, r7
   11dbc:	movs	r0, #1
   11dbe:	blx	84b4 <__vprintf_chk@plt>
   11dc2:	mov	r1, r4
   11dc4:	mov	r0, r5
   11dc6:	bl	11a18 <fmt_end_value@@Base>
   11dca:	ldr	r2, [pc, #120]	; (11e44 <fmt_print@@Base+0x2a4>)
   11dcc:	ldr	r3, [pc, #28]	; (11dec <fmt_print@@Base+0x24c>)
   11dce:	add	r2, pc
   11dd0:	ldr	r3, [r2, r3]
   11dd2:	ldr	r2, [r3, #0]
   11dd4:	ldr	r3, [sp, #324]	; 0x144
   11dd6:	eors	r2, r3
   11dd8:	beq.n	11dde <fmt_print@@Base+0x23e>
   11dda:	blx	8510 <__stack_chk_fail@plt>
   11dde:	add	sp, #332	; 0x14c
   11de0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   11de4:	add	sp, #12
   11de6:	bx	lr
   11de8:	movs	r1, #212	; 0xd4
   11dea:	movs	r5, r0
   11dec:	lsls	r0, r4, #8
   11dee:	movs	r0, r0
   11df0:	movs	r1, #188	; 0xbc
   11df2:	movs	r5, r0
   11df4:	ldrh	r7, [r4, #26]
   11df6:	movs	r2, r0
   11df8:	ldrh	r3, [r4, #16]
   11dfa:	movs	r2, r0
   11dfc:	stmia	r7!, {r0, r1, r2, r3, r5}
   11dfe:	movs	r2, r0
   11e00:	ldrh	r3, [r7, #20]
   11e02:	movs	r2, r0
   11e04:	str	r3, [sp, #788]	; 0x314
   11e06:	movs	r2, r0
   11e08:	bhi.n	11e60 <fmt_print@@Base+0x2c0>
   11e0a:	movs	r2, r0
   11e0c:	ldrh	r0, [r7, #18]
   11e0e:	movs	r2, r0
   11e10:	ldrh	r6, [r2, #18]
   11e12:	movs	r2, r0
   11e14:	bvc.n	11de0 <fmt_print@@Base+0x240>
   11e16:	movs	r2, r0
   11e18:	ldrh	r1, [r5, #10]
   11e1a:	movs	r2, r0
   11e1c:	stmia	r6!, {r0, r1, r2, r3, r4, r5, r6}
   11e1e:	movs	r2, r0
   11e20:	strb	r1, [r6, #22]
   11e22:	movs	r2, r0
   11e24:	strb	r3, [r5, #14]
   11e26:	movs	r2, r0
   11e28:	ldrh	r1, [r1, #16]
   11e2a:	movs	r2, r0
   11e2c:	bvc.n	11f0c <fmt_print@@Base+0x36c>
   11e2e:	movs	r2, r0
   11e30:	lsrs	r1, r5, #4
   11e32:	movs	r4, r0
   11e34:	bvc.n	11ec8 <fmt_print@@Base+0x328>
   11e36:	movs	r2, r0
   11e38:	ldrh	r0, [r0, #14]
   11e3a:	movs	r2, r0
   11e3c:	lsls	r4, r3, #8
   11e3e:	movs	r0, r0
   11e40:	bvc.n	11e60 <fmt_print@@Base+0x2c0>
   11e42:	movs	r2, r0
   11e44:	subs	r6, r6, #6
   11e46:	movs	r5, r0
   11e48:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   11e4c:	mov	r6, r0
   11e4e:	ldr	r5, [sp, #32]
   11e50:	mov	r8, r2
   11e52:	mov	r7, r3
   11e54:	mov	r0, r5
   11e56:	blx	8678 <malloc@plt+0x4>
   11e5a:	mov	r4, r0
   11e5c:	cbz	r0, 11e8c <fmt_print@@Base+0x2ec>
   11e5e:	mov	r2, r5
   11e60:	movs	r1, #0
   11e62:	blx	87c4 <memset@plt+0x4>
   11e66:	mov	r2, r5
   11e68:	mov	r1, r4
   11e6a:	mov	r0, r6
   11e6c:	strd	r8, r7, [sp]
   11e70:	blx	8828 <pwrite64@plt>
   11e74:	cmp	r0, r5
   11e76:	mov	r0, r4
   11e78:	ite	eq
   11e7a:	moveq	r5, #0
   11e7c:	mvnne.w	r5, #4
   11e80:	blx	8434 <free@plt+0x4>
   11e84:	mov	r0, r5
   11e86:	add	sp, #8
   11e88:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   11e8c:	mvn.w	r5, #11
   11e90:	b.n	11e84 <fmt_print@@Base+0x2e4>
   11e92:	ldr	r1, [pc, #292]	; (11fb8 <fmt_print@@Base+0x418>)
   11e94:	ldr	r2, [pc, #292]	; (11fbc <fmt_print@@Base+0x41c>)
   11e96:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   11e9a:	add	r1, pc
   11e9c:	sub.w	sp, sp, #8192	; 0x2000
   11ea0:	mov	r7, r0
   11ea2:	sub	sp, #36	; 0x24
   11ea4:	ldr	r2, [r1, r2]
   11ea6:	add	r5, sp, #32
   11ea8:	add.w	r3, sp, #8192	; 0x2000
   11eac:	ldr	r2, [r2, #0]
   11eae:	str	r2, [r3, #28]
   11eb0:	mov.w	r2, #0
   11eb4:	adds	r3, #28
   11eb6:	movs	r3, #0
   11eb8:	str.w	r3, [r5, #-12]
   11ebc:	str.w	r3, [r5, #-8]
   11ec0:	blx	87a8 <blkid_new_probe@plt>
   11ec4:	sub.w	r8, r5, #12
   11ec8:	sub.w	r4, r5, #8
   11ecc:	mov	r6, r0
   11ece:	cmp	r0, #0
   11ed0:	beq.n	11fa4 <fmt_print@@Base+0x404>
   11ed2:	movs	r3, #0
   11ed4:	movs	r2, #0
   11ed6:	mov	r1, r7
   11ed8:	strd	r2, r3, [sp]
   11edc:	blx	84e8 <blkid_probe_set_device@plt>
   11ee0:	mov	r3, r0
   11ee2:	cmp	r0, #0
   11ee4:	bne.n	11f9e <fmt_print@@Base+0x3fe>
   11ee6:	ldr	r1, [pc, #216]	; (11fc0 <fmt_print@@Base+0x420>)
   11ee8:	mov	r2, r8
   11eea:	mov	r0, r6
   11eec:	add	r1, pc
   11eee:	blx	83f0 <blkid_probe_lookup_value@plt>
   11ef2:	mov	r2, r0
   11ef4:	cbz	r0, 11f18 <fmt_print@@Base+0x378>
   11ef6:	movs	r4, #1
   11ef8:	mov	r0, r6
   11efa:	blx	889c <blkid_free_probe@plt>
   11efe:	ldr	r1, [pc, #196]	; (11fc4 <fmt_print@@Base+0x424>)
   11f00:	add.w	r3, sp, #8192	; 0x2000
   11f04:	ldr	r2, [pc, #180]	; (11fbc <fmt_print@@Base+0x41c>)
   11f06:	adds	r3, #28
   11f08:	add	r1, pc
   11f0a:	ldr	r2, [r1, r2]
   11f0c:	ldr	r1, [r2, #0]
   11f0e:	ldr	r2, [r3, #0]
   11f10:	eors	r1, r2
   11f12:	beq.n	11faa <fmt_print@@Base+0x40a>
   11f14:	blx	8510 <__stack_chk_fail@plt>
   11f18:	ldr	r1, [pc, #172]	; (11fc8 <fmt_print@@Base+0x428>)
   11f1a:	mov	r3, r4
   11f1c:	mov	r0, r6
   11f1e:	add	r1, pc
   11f20:	blx	83f0 <blkid_probe_lookup_value@plt>
   11f24:	mov	r1, r0
   11f26:	cmp	r0, #0
   11f28:	bne.n	11ef6 <fmt_print@@Base+0x356>
   11f2a:	ldr	r3, [r4, #0]
   11f2c:	cmp	r3, #0
   11f2e:	beq.n	11ef6 <fmt_print@@Base+0x356>
   11f30:	ldr.w	r0, [r8]
   11f34:	cmp	r0, #0
   11f36:	beq.n	11ef6 <fmt_print@@Base+0x356>
   11f38:	movs	r2, #10
   11f3a:	blx	85d4 <strtoll@plt>
   11f3e:	ldr	r3, [r4, #0]
   11f40:	cmp.w	r3, #8192	; 0x2000
   11f44:	itt	hi
   11f46:	movhi.w	r3, #8192	; 0x2000
   11f4a:	strhi	r3, [r4, #0]
   11f4c:	subs	r4, r5, #4
   11f4e:	ldr.w	r2, [r5, #-8]
   11f52:	mov.w	r3, #8192	; 0x2000
   11f56:	str	r2, [sp, #12]
   11f58:	mov	r9, r0
   11f5a:	mov	r8, r1
   11f5c:	mov	r0, r4
   11f5e:	movs	r1, #0
   11f60:	blx	848c <__memset_chk@plt>
   11f64:	mov	r1, r4
   11f66:	ldr	r2, [sp, #12]
   11f68:	mov	r0, r7
   11f6a:	strd	r9, r8, [sp]
   11f6e:	blx	8828 <pwrite64@plt>
   11f72:	subs	r4, r0, #0
   11f74:	bge.n	11f8a <fmt_print@@Base+0x3ea>
   11f76:	ldr	r0, [pc, #84]	; (11fcc <fmt_print@@Base+0x42c>)
   11f78:	add	r0, pc
   11f7a:	bl	16b70 <__btrfs_error@@Base>
   11f7e:	mov.w	r4, #4294967295	; 0xffffffff
   11f82:	mov	r0, r7
   11f84:	blx	83b4 <fsync@plt>
   11f88:	b.n	11ef8 <fmt_print@@Base+0x358>
   11f8a:	ldr.w	r2, [r5, #-8]
   11f8e:	cmp	r4, r2
   11f90:	beq.n	11f82 <fmt_print@@Base+0x3e2>
   11f92:	ldr	r0, [pc, #60]	; (11fd0 <fmt_print@@Base+0x430>)
   11f94:	mov	r1, r4
   11f96:	add	r0, pc
   11f98:	bl	16b70 <__btrfs_error@@Base>
   11f9c:	b.n	11f7e <fmt_print@@Base+0x3de>
   11f9e:	mov.w	r4, #4294967295	; 0xffffffff
   11fa2:	b.n	11ef8 <fmt_print@@Base+0x358>
   11fa4:	mov.w	r4, #4294967295	; 0xffffffff
   11fa8:	b.n	11efe <fmt_print@@Base+0x35e>
   11faa:	mov	r0, r4
   11fac:	add.w	sp, sp, #8192	; 0x2000
   11fb0:	add	sp, #36	; 0x24
   11fb2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   11fb6:	nop
   11fb8:	subs	r2, r5, #3
   11fba:	movs	r5, r0
   11fbc:	lsls	r0, r4, #8
   11fbe:	movs	r0, r0
   11fc0:	ldrh	r6, [r5, #2]
   11fc2:	movs	r2, r0
   11fc4:	subs	r4, r7, #1
   11fc6:	movs	r5, r0
   11fc8:	ldrh	r3, [r1, #2]
   11fca:	movs	r2, r0
   11fcc:	strh	r1, [r7, #62]	; 0x3e
   11fce:	movs	r2, r0
   11fd0:	strh	r7, [r7, #62]	; 0x3e
   11fd2:	movs	r2, r0

00011fd4 <btrfs_device_size@@Base>:
   11fd4:	push	{r0, r1, r2, r3, r4, lr}
   11fd6:	ldr	r2, [pc, #92]	; (12034 <btrfs_device_size@@Base+0x60>)
   11fd8:	ldr	r3, [pc, #92]	; (12038 <btrfs_device_size@@Base+0x64>)
   11fda:	add	r2, pc
   11fdc:	ldr	r3, [r2, r3]
   11fde:	ldr	r3, [r3, #0]
   11fe0:	str	r3, [sp, #12]
   11fe2:	mov.w	r3, #0
   11fe6:	ldr	r3, [r1, #16]
   11fe8:	and.w	r3, r3, #61440	; 0xf000
   11fec:	cmp.w	r3, #32768	; 0x8000
   11ff0:	bne.n	1200a <btrfs_device_size@@Base+0x36>
   11ff2:	ldrd	r0, r1, [r1, #48]	; 0x30
   11ff6:	ldr	r2, [pc, #68]	; (1203c <btrfs_device_size@@Base+0x68>)
   11ff8:	ldr	r3, [pc, #60]	; (12038 <btrfs_device_size@@Base+0x64>)
   11ffa:	add	r2, pc
   11ffc:	ldr	r3, [r2, r3]
   11ffe:	ldr	r2, [r3, #0]
   12000:	ldr	r3, [sp, #12]
   12002:	eors	r2, r3
   12004:	beq.n	12028 <btrfs_device_size@@Base+0x54>
   12006:	blx	8510 <__stack_chk_fail@plt>
   1200a:	cmp.w	r3, #24576	; 0x6000
   1200e:	bne.n	12022 <btrfs_device_size@@Base+0x4e>
   12010:	ldr	r1, [pc, #28]	; (12030 <btrfs_device_size@@Base+0x5c>)
   12012:	mov	r2, sp
   12014:	blx	85bc <ioctl@plt>
   12018:	cmp	r0, #0
   1201a:	blt.n	12022 <btrfs_device_size@@Base+0x4e>
   1201c:	ldrd	r0, r1, [sp]
   12020:	b.n	11ff6 <btrfs_device_size@@Base+0x22>
   12022:	movs	r0, #0
   12024:	movs	r1, #0
   12026:	b.n	11ff6 <btrfs_device_size@@Base+0x22>
   12028:	add	sp, #20
   1202a:	ldr.w	pc, [sp], #4
   1202e:	nop
   12030:	asrs	r2, r6, #9
   12032:	strh	r4, [r0, #0]
   12034:	adds	r2, r5, #6
   12036:	movs	r5, r0
   12038:	lsls	r0, r4, #8
   1203a:	movs	r0, r0
   1203c:	adds	r2, r1, #6
   1203e:	movs	r5, r0

00012040 <btrfs_prepare_device@@Base>:
   12040:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12044:	sub	sp, #180	; 0xb4
   12046:	ldr	r3, [pc, #588]	; (12294 <btrfs_prepare_device@@Base+0x254>)
   12048:	mov	r7, r1
   1204a:	str	r2, [sp, #40]	; 0x28
   1204c:	add	r1, sp, #48	; 0x30
   1204e:	ldr	r2, [pc, #584]	; (12298 <btrfs_prepare_device@@Base+0x258>)
   12050:	mov	r6, r0
   12052:	ldrd	r8, r9, [sp, #216]	; 0xd8
   12056:	add	r2, pc
   12058:	ldr	r3, [r2, r3]
   1205a:	ldr	r3, [r3, #0]
   1205c:	str	r3, [sp, #172]	; 0xac
   1205e:	mov.w	r3, #0
   12062:	str	r1, [sp, #32]
   12064:	bl	38dbc <__libc_csu_fini@@Base+0x28>
   12068:	ldr	r1, [sp, #32]
   1206a:	cmp	r0, #0
   1206c:	bge.n	12090 <btrfs_prepare_device@@Base+0x50>
   1206e:	ldr	r0, [pc, #556]	; (1229c <btrfs_prepare_device@@Base+0x25c>)
   12070:	mov	r1, r7
   12072:	add	r0, pc
   12074:	bl	16b70 <__btrfs_error@@Base>
   12078:	movs	r0, #1
   1207a:	ldr	r2, [pc, #548]	; (122a0 <btrfs_prepare_device@@Base+0x260>)
   1207c:	ldr	r3, [pc, #532]	; (12294 <btrfs_prepare_device@@Base+0x254>)
   1207e:	add	r2, pc
   12080:	ldr	r3, [r2, r3]
   12082:	ldr	r2, [r3, #0]
   12084:	ldr	r3, [sp, #172]	; 0xac
   12086:	eors	r2, r3
   12088:	beq.w	1228e <btrfs_prepare_device@@Base+0x24e>
   1208c:	blx	8510 <__stack_chk_fail@plt>
   12090:	mov	r0, r6
   12092:	bl	11fd4 <btrfs_device_size@@Base>
   12096:	mov	r4, r0
   12098:	mov	r5, r1
   1209a:	orrs.w	r3, r4, r5
   1209e:	bne.n	120a8 <btrfs_prepare_device@@Base+0x68>
   120a0:	ldr	r0, [pc, #512]	; (122a4 <btrfs_prepare_device@@Base+0x264>)
   120a2:	mov	r1, r7
   120a4:	add	r0, pc
   120a6:	b.n	12074 <btrfs_prepare_device@@Base+0x34>
   120a8:	orrs.w	r3, r8, r9
   120ac:	beq.n	120ba <btrfs_prepare_device@@Base+0x7a>
   120ae:	cmp	r9, r1
   120b0:	it	eq
   120b2:	cmpeq	r8, r0
   120b4:	itt	cc
   120b6:	movcc	r4, r8
   120b8:	movcc	r5, r9
   120ba:	ldr	r3, [sp, #224]	; 0xe0
   120bc:	lsls	r1, r3, #30
   120be:	bpl.n	12174 <btrfs_prepare_device@@Base+0x134>
   120c0:	movs	r2, #0
   120c2:	movs	r3, #0
   120c4:	movw	r1, #4727	; 0x1277
   120c8:	strd	r2, r3, [sp, #152]	; 0x98
   120cc:	strd	r2, r3, [sp, #160]	; 0xa0
   120d0:	mov	r0, r6
   120d2:	add	r2, sp, #152	; 0x98
   120d4:	blx	85bc <ioctl@plt>
   120d8:	cmp	r0, #0
   120da:	bge.n	120e6 <btrfs_prepare_device@@Base+0xa6>
   120dc:	blx	8784 <__errno_location@plt>
   120e0:	ldr	r3, [r0, #0]
   120e2:	cmp	r3, #0
   120e4:	bne.n	12174 <btrfs_prepare_device@@Base+0x134>
   120e6:	ldr	r3, [sp, #224]	; 0xe0
   120e8:	lsls	r2, r3, #29
   120ea:	bpl.n	12106 <btrfs_prepare_device@@Base+0xc6>
   120ec:	mov.w	r2, #512	; 0x200
   120f0:	mov	r1, r5
   120f2:	mov	r0, r4
   120f4:	bl	2fbf8 <pretty_size_mode@@Base>
   120f8:	ldr	r1, [pc, #428]	; (122a8 <btrfs_prepare_device@@Base+0x268>)
   120fa:	mov	r2, r7
   120fc:	add	r1, pc
   120fe:	mov	r3, r0
   12100:	movs	r0, #1
   12102:	blx	8838 <__printf_chk@plt+0x4>
   12106:	add	r2, sp, #152	; 0x98
   12108:	mov	r8, r4
   1210a:	mov	r9, r5
   1210c:	movs	r3, #0
   1210e:	strd	r3, r3, [sp, #32]
   12112:	ldr	r3, [sp, #32]
   12114:	movs	r1, #0
   12116:	cmp	r1, r9
   12118:	mov.w	r0, #1073741824	; 0x40000000
   1211c:	it	eq
   1211e:	cmpeq	r0, r8
   12120:	movw	r1, #4727	; 0x1277
   12124:	str	r3, [sp, #152]	; 0x98
   12126:	mov	r0, r6
   12128:	ldr	r3, [sp, #36]	; 0x24
   1212a:	mov	fp, r8
   1212c:	mov	sl, r9
   1212e:	itt	cc
   12130:	movcc.w	fp, #1073741824	; 0x40000000
   12134:	movcc.w	sl, #0
   12138:	str	r2, [sp, #44]	; 0x2c
   1213a:	strd	r3, fp, [sp, #156]	; 0x9c
   1213e:	str.w	sl, [sp, #164]	; 0xa4
   12142:	blx	85bc <ioctl@plt>
   12146:	ldr	r2, [sp, #44]	; 0x2c
   12148:	cmp	r0, #0
   1214a:	bge.n	12156 <btrfs_prepare_device@@Base+0x116>
   1214c:	blx	8784 <__errno_location@plt>
   12150:	ldr	r2, [sp, #44]	; 0x2c
   12152:	ldr	r3, [r0, #0]
   12154:	cbnz	r3, 12174 <btrfs_prepare_device@@Base+0x134>
   12156:	ldr	r3, [sp, #32]
   12158:	subs.w	r8, r8, fp
   1215c:	sbc.w	r9, r9, sl
   12160:	adds.w	r3, r3, fp
   12164:	str	r3, [sp, #32]
   12166:	ldr	r3, [sp, #36]	; 0x24
   12168:	adc.w	r3, r3, sl
   1216c:	str	r3, [sp, #36]	; 0x24
   1216e:	orrs.w	r3, r8, r9
   12172:	bne.n	12112 <btrfs_prepare_device@@Base+0xd2>
   12174:	movs	r1, #0
   12176:	cmp	r1, r5
   12178:	mov.w	r0, #2097152	; 0x200000
   1217c:	it	eq
   1217e:	cmpeq	r0, r4
   12180:	mov	r3, r4
   12182:	mov.w	r2, #0
   12186:	it	cc
   12188:	movcc	r3, r0
   1218a:	mov	r0, r6
   1218c:	str	r3, [sp, #0]
   1218e:	movs	r3, #0
   12190:	bl	11e48 <fmt_print@@Base+0x2a8>
   12194:	mov.w	r8, #0
   12198:	mov.w	sl, #12
   1219c:	mov.w	r9, #16384	; 0x4000
   121a0:	mov	fp, r0
   121a2:	cmp.w	fp, #0
   121a6:	bne.n	121e2 <btrfs_prepare_device@@Base+0x1a2>
   121a8:	cmp.w	r8, #3
   121ac:	bne.n	121fa <btrfs_prepare_device@@Base+0x1ba>
   121ae:	ldr	r3, [sp, #224]	; 0xe0
   121b0:	lsls	r3, r3, #31
   121b2:	bpl.n	12272 <btrfs_prepare_device@@Base+0x232>
   121b4:	subs.w	r3, r4, #2097152	; 0x200000
   121b8:	str	r3, [sp, #16]
   121ba:	adc.w	r3, r5, #4294967295	; 0xffffffff
   121be:	str	r3, [sp, #20]
   121c0:	ldrd	r2, r3, [sp, #16]
   121c4:	mov	r0, r6
   121c6:	cmp	r5, r3
   121c8:	it	eq
   121ca:	cmpeq	r4, r2
   121cc:	it	cc
   121ce:	strdcc	r4, r5, [sp, #16]
   121d2:	ldr	r3, [sp, #16]
   121d4:	subs	r3, r4, r3
   121d6:	str	r3, [sp, #0]
   121d8:	ldrd	r2, r3, [sp, #16]
   121dc:	bl	11e48 <fmt_print@@Base+0x2a8>
   121e0:	mov	fp, r0
   121e2:	cmp.w	fp, #0
   121e6:	bge.n	12272 <btrfs_prepare_device@@Base+0x232>
   121e8:	blx	8784 <__errno_location@plt>
   121ec:	rsb	r3, fp, #0
   121f0:	mov	r1, r7
   121f2:	str	r3, [r0, #0]
   121f4:	ldr	r0, [pc, #180]	; (122ac <btrfs_prepare_device@@Base+0x26c>)
   121f6:	add	r0, pc
   121f8:	b.n	12074 <btrfs_prepare_device@@Base+0x34>
   121fa:	cmp.w	r8, #0
   121fe:	beq.n	12266 <btrfs_prepare_device@@Base+0x226>
   12200:	mul.w	r3, sl, r8
   12204:	sub.w	r1, r3, #32
   12208:	rsb	r2, r3, #32
   1220c:	lsl.w	r1, r9, r1
   12210:	lsr.w	r2, r9, r2
   12214:	orrs	r1, r2
   12216:	lsl.w	r3, r9, r3
   1221a:	str	r1, [sp, #12]
   1221c:	str	r3, [sp, #8]
   1221e:	ldrd	r0, r1, [sp, #8]
   12222:	mov	r2, r4
   12224:	mov	r3, r5
   12226:	add.w	r8, r8, #1
   1222a:	cmp	r1, r5
   1222c:	ldr	r1, [sp, #8]
   1222e:	it	eq
   12230:	cmpeq	r0, r4
   12232:	it	cc
   12234:	ldrdcc	r2, r3, [sp, #8]
   12238:	adds.w	r1, r1, #4096	; 0x1000
   1223c:	str	r1, [sp, #24]
   1223e:	ldr	r1, [sp, #12]
   12240:	adc.w	r1, r1, #0
   12244:	str	r1, [sp, #28]
   12246:	ldrd	r0, r1, [sp, #24]
   1224a:	cmp	r5, r1
   1224c:	it	eq
   1224e:	cmpeq	r4, r0
   12250:	it	cc
   12252:	strdcc	r4, r5, [sp, #24]
   12256:	ldr	r1, [sp, #24]
   12258:	mov	r0, r6
   1225a:	subs	r1, r1, r2
   1225c:	str	r1, [sp, #0]
   1225e:	bl	11e48 <fmt_print@@Base+0x2a8>
   12262:	mov	fp, r0
   12264:	b.n	121a2 <btrfs_prepare_device@@Base+0x162>
   12266:	mov.w	r2, #65536	; 0x10000
   1226a:	movs	r3, #0
   1226c:	strd	r2, r3, [sp, #8]
   12270:	b.n	1221e <btrfs_prepare_device@@Base+0x1de>
   12272:	mov	r0, r6
   12274:	bl	11e92 <fmt_print@@Base+0x2f2>
   12278:	cmp	r0, #0
   1227a:	bge.n	12284 <btrfs_prepare_device@@Base+0x244>
   1227c:	ldr	r0, [pc, #48]	; (122b0 <btrfs_prepare_device@@Base+0x270>)
   1227e:	mov	r1, r7
   12280:	add	r0, pc
   12282:	b.n	12074 <btrfs_prepare_device@@Base+0x34>
   12284:	ldr	r3, [sp, #40]	; 0x28
   12286:	movs	r0, #0
   12288:	strd	r4, r5, [r3]
   1228c:	b.n	1207a <btrfs_prepare_device@@Base+0x3a>
   1228e:	add	sp, #180	; 0xb4
   12290:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12294:	lsls	r0, r4, #8
   12296:	movs	r0, r0
   12298:	adds	r6, r5, #4
   1229a:	movs	r5, r0
   1229c:	strh	r4, [r2, #58]	; 0x3a
   1229e:	movs	r2, r0
   122a0:	adds	r6, r0, #4
   122a2:	movs	r5, r0
   122a4:	strh	r0, [r7, #56]	; 0x38
   122a6:	movs	r2, r0
   122a8:	strh	r7, [r7, #54]	; 0x36
   122aa:	movs	r2, r0
   122ac:	strh	r6, [r5, #48]	; 0x30
   122ae:	movs	r2, r0
   122b0:	strh	r3, [r0, #46]	; 0x2e
   122b2:	movs	r2, r0

000122b4 <disk_size@@Base>:
   122b4:	ldr	r2, [pc, #76]	; (12304 <disk_size@@Base+0x50>)
   122b6:	ldr	r3, [pc, #80]	; (12308 <disk_size@@Base+0x54>)
   122b8:	add	r2, pc
   122ba:	push	{r4, lr}
   122bc:	sub	sp, #96	; 0x60
   122be:	ldr	r3, [r2, r3]
   122c0:	mov	r1, sp
   122c2:	ldr	r3, [r3, #0]
   122c4:	str	r3, [sp, #92]	; 0x5c
   122c6:	mov.w	r3, #0
   122ca:	blx	88c0 <statfs64@plt>
   122ce:	cmp	r0, #0
   122d0:	blt.n	122fa <disk_size@@Base+0x46>
   122d2:	ldr	r2, [sp, #4]
   122d4:	ldrd	r4, r3, [sp, #8]
   122d8:	asrs	r1, r2, #31
   122da:	muls	r3, r2
   122dc:	mla	r3, r4, r1, r3
   122e0:	umull	r0, r1, r4, r2
   122e4:	add	r1, r3
   122e6:	ldr	r2, [pc, #36]	; (1230c <disk_size@@Base+0x58>)
   122e8:	ldr	r3, [pc, #28]	; (12308 <disk_size@@Base+0x54>)
   122ea:	add	r2, pc
   122ec:	ldr	r3, [r2, r3]
   122ee:	ldr	r2, [r3, #0]
   122f0:	ldr	r3, [sp, #92]	; 0x5c
   122f2:	eors	r2, r3
   122f4:	beq.n	12300 <disk_size@@Base+0x4c>
   122f6:	blx	8510 <__stack_chk_fail@plt>
   122fa:	movs	r0, #0
   122fc:	movs	r1, #0
   122fe:	b.n	122e6 <disk_size@@Base+0x32>
   12300:	add	sp, #96	; 0x60
   12302:	pop	{r4, pc}
   12304:	subs	r4, r1, r3
   12306:	movs	r5, r0
   12308:	lsls	r0, r4, #8
   1230a:	movs	r0, r0
   1230c:	subs	r2, r3, r2
   1230e:	movs	r5, r0

00012310 <get_partition_size@@Base>:
   12310:	push	{r0, r1, r2, r3, r4, lr}
   12312:	movs	r1, #0
   12314:	ldr	r2, [pc, #80]	; (12368 <get_partition_size@@Base+0x58>)
   12316:	ldr	r3, [pc, #84]	; (1236c <get_partition_size@@Base+0x5c>)
   12318:	add	r2, pc
   1231a:	ldr	r3, [r2, r3]
   1231c:	ldr	r3, [r3, #0]
   1231e:	str	r3, [sp, #12]
   12320:	mov.w	r3, #0
   12324:	blx	864c <open64@plt>
   12328:	subs	r4, r0, #0
   1232a:	blt.n	1233e <get_partition_size@@Base+0x2e>
   1232c:	ldr	r1, [pc, #52]	; (12364 <get_partition_size@@Base+0x54>)
   1232e:	mov	r2, sp
   12330:	blx	85bc <ioctl@plt>
   12334:	cmp	r0, #0
   12336:	mov	r0, r4
   12338:	bge.n	12344 <get_partition_size@@Base+0x34>
   1233a:	blx	8998 <close@plt>
   1233e:	movs	r0, #0
   12340:	movs	r1, #0
   12342:	b.n	1234c <get_partition_size@@Base+0x3c>
   12344:	blx	8998 <close@plt>
   12348:	ldrd	r0, r1, [sp]
   1234c:	ldr	r2, [pc, #32]	; (12370 <get_partition_size@@Base+0x60>)
   1234e:	ldr	r3, [pc, #28]	; (1236c <get_partition_size@@Base+0x5c>)
   12350:	add	r2, pc
   12352:	ldr	r3, [r2, r3]
   12354:	ldr	r2, [r3, #0]
   12356:	ldr	r3, [sp, #12]
   12358:	eors	r2, r3
   1235a:	beq.n	12360 <get_partition_size@@Base+0x50>
   1235c:	blx	8510 <__stack_chk_fail@plt>
   12360:	add	sp, #16
   12362:	pop	{r4, pc}
   12364:	asrs	r2, r6, #9
   12366:	strh	r4, [r0, #0]
   12368:	subs	r4, r5, r1
   1236a:	movs	r5, r0
   1236c:	lsls	r0, r4, #8
   1236e:	movs	r0, r0
   12370:	subs	r4, r6, r0
   12372:	movs	r5, r0
   12374:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12378:	sub.w	sp, sp, #8192	; 0x2000
   1237c:	sub	sp, #36	; 0x24
   1237e:	mov	r5, r1
   12380:	add.w	r3, sp, #8256	; 0x2040
   12384:	ldr	r1, [pc, #476]	; (12564 <get_partition_size@@Base+0x254>)
   12386:	mov	r4, r2
   12388:	ldr	r2, [pc, #476]	; (12568 <get_partition_size@@Base+0x258>)
   1238a:	ldrd	r8, r9, [r3, #8]
   1238e:	add	r1, pc
   12390:	adds	r3, #8
   12392:	ldr	r7, [pc, #472]	; (1256c <get_partition_size@@Base+0x25c>)
   12394:	cmp.w	r9, #0
   12398:	add.w	r3, sp, #8192	; 0x2000
   1239c:	ldr	r2, [r1, r2]
   1239e:	it	eq
   123a0:	cmpeq.w	r8, #5
   123a4:	add	r7, pc
   123a6:	add.w	r3, r3, #28
   123aa:	mov	r6, r0
   123ac:	ldr	r2, [r2, #0]
   123ae:	str	r2, [r3, #0]
   123b0:	mov.w	r2, #0
   123b4:	bne.n	123ea <get_partition_size@@Base+0xda>
   123b6:	ldr	r3, [r4, #0]
   123b8:	cbnz	r3, 123da <get_partition_size@@Base+0xca>
   123ba:	mvn.w	fp, #74	; 0x4a
   123be:	ldr	r1, [pc, #432]	; (12570 <get_partition_size@@Base+0x260>)
   123c0:	add.w	r3, sp, #8192	; 0x2000
   123c4:	ldr	r2, [pc, #416]	; (12568 <get_partition_size@@Base+0x258>)
   123c6:	adds	r3, #28
   123c8:	add	r1, pc
   123ca:	ldr	r2, [r1, r2]
   123cc:	ldr	r1, [r2, #0]
   123ce:	ldr	r2, [r3, #0]
   123d0:	eors	r1, r2
   123d2:	beq.w	1254e <get_partition_size@@Base+0x23e>
   123d6:	blx	8510 <__stack_chk_fail@plt>
   123da:	mov.w	fp, #0
   123de:	strb.w	fp, [r5]
   123e2:	ldr	r2, [r4, #0]
   123e4:	subs	r2, #1
   123e6:	str	r2, [r4, #0]
   123e8:	b.n	123be <get_partition_size@@Base+0xae>
   123ea:	add	r3, sp, #32
   123ec:	mov.w	r2, #4096	; 0x1000
   123f0:	sub.w	sl, r3, #8
   123f4:	movs	r1, #0
   123f6:	str	r3, [sp, #16]
   123f8:	mov	r0, sl
   123fa:	blx	87c4 <memset@plt+0x4>
   123fe:	ldr	r1, [sp, #16]
   12400:	movs	r2, #1
   12402:	movs	r3, #0
   12404:	mov	r0, r6
   12406:	strd	r8, r9, [sl, #8]
   1240a:	strd	r2, r3, [r1, #-8]
   1240e:	mov.w	r2, #4294967295	; 0xffffffff
   12412:	movs	r3, #144	; 0x90
   12414:	ldr	r1, [pc, #324]	; (1255c <get_partition_size@@Base+0x24c>)
   12416:	strd	r3, r3, [sl, #56]	; 0x38
   1241a:	mov.w	r3, #4294967295	; 0xffffffff
   1241e:	strd	r2, r3, [sl, #32]
   12422:	strd	r2, r3, [sl, #48]	; 0x30
   12426:	mov	r2, sl
   12428:	movs	r3, #1
   1242a:	strd	r8, r9, [sl, #16]
   1242e:	str.w	r3, [sl, #64]	; 0x40
   12432:	blx	85bc <ioctl@plt>
   12436:	movs	r3, #1
   12438:	subs.w	fp, r0, #0
   1243c:	bge.n	12458 <get_partition_size@@Base+0x148>
   1243e:	ldr	r2, [pc, #308]	; (12574 <get_partition_size@@Base+0x264>)
   12440:	mov	r1, r3
   12442:	ldr	r0, [r7, r2]
   12444:	ldr	r2, [pc, #304]	; (12578 <get_partition_size@@Base+0x268>)
   12446:	str.w	fp, [sp, #8]
   1244a:	strd	r8, r9, [sp]
   1244e:	add	r2, pc
   12450:	ldr	r0, [r0, #0]
   12452:	blx	8860 <__fprintf_chk@plt+0x4>
   12456:	b.n	123be <get_partition_size@@Base+0xae>
   12458:	ldr.w	r2, [sl, #64]	; 0x40
   1245c:	cbnz	r2, 12478 <get_partition_size@@Base+0x168>
   1245e:	ldr	r2, [pc, #276]	; (12574 <get_partition_size@@Base+0x264>)
   12460:	mov	r1, r3
   12462:	mvn.w	fp, #1
   12466:	ldr	r0, [r7, r2]
   12468:	ldr	r2, [pc, #272]	; (1257c <get_partition_size@@Base+0x26c>)
   1246a:	strd	r8, r9, [sp]
   1246e:	add	r2, pc
   12470:	ldr	r0, [r0, #0]
   12472:	blx	8860 <__fprintf_chk@plt+0x4>
   12476:	b.n	123be <get_partition_size@@Base+0xae>
   12478:	ldrd	r2, r3, [sl, #120]	; 0x78
   1247c:	cmp	r3, #0
   1247e:	it	eq
   12480:	cmpeq	r2, #5
   12482:	beq.n	124ae <get_partition_size@@Base+0x19e>
   12484:	strd	r2, r3, [sp]
   12488:	mov	r1, r5
   1248a:	mov	r2, r4
   1248c:	mov	r0, r6
   1248e:	bl	12374 <get_partition_size@@Base+0x64>
   12492:	mov	fp, r0
   12494:	cmp	r0, #0
   12496:	bne.n	123be <get_partition_size@@Base+0xae>
   12498:	ldr	r3, [r4, #0]
   1249a:	cmp	r3, #0
   1249c:	beq.n	123ba <get_partition_size@@Base+0xaa>
   1249e:	ldr	r1, [pc, #224]	; (12580 <get_partition_size@@Base+0x270>)
   124a0:	mov	r0, r5
   124a2:	add	r1, pc
   124a4:	blx	85b0 <strcat@plt+0x4>
   124a8:	ldr	r3, [r4, #0]
   124aa:	subs	r3, #1
   124ac:	str	r3, [r4, #0]
   124ae:	ldrd	r8, r9, [sl, #136]	; 0x88
   124b2:	cmp.w	r9, #0
   124b6:	it	eq
   124b8:	cmpeq.w	r8, #256	; 0x100
   124bc:	beq.n	1252a <get_partition_size@@Base+0x21a>
   124be:	add.w	fp, sp, #4128	; 0x1020
   124c2:	mov.w	r2, #4096	; 0x1000
   124c6:	sub.w	r3, fp, #8
   124ca:	movs	r1, #0
   124cc:	mov	r0, r3
   124ce:	blx	87c4 <memset@plt+0x4>
   124d2:	mov	r3, r0
   124d4:	ldrd	r0, r1, [sl, #120]	; 0x78
   124d8:	mov	r2, r3
   124da:	strd	r8, r9, [r3, #8]
   124de:	strd	r0, r1, [fp, #-8]
   124e2:	mov	r0, r6
   124e4:	ldr	r1, [pc, #120]	; (12560 <get_partition_size@@Base+0x250>)
   124e6:	blx	85bc <ioctl@plt>
   124ea:	subs.w	fp, r0, #0
   124ee:	bge.n	12504 <get_partition_size@@Base+0x1f4>
   124f0:	ldr	r3, [pc, #128]	; (12574 <get_partition_size@@Base+0x264>)
   124f2:	movs	r1, #1
   124f4:	ldr	r2, [pc, #140]	; (12584 <get_partition_size@@Base+0x274>)
   124f6:	ldr	r0, [r7, r3]
   124f8:	add	r2, pc
   124fa:	mov	r3, fp
   124fc:	ldr	r0, [r0, #0]
   124fe:	blx	8860 <__fprintf_chk@plt+0x4>
   12502:	b.n	123be <get_partition_size@@Base+0xae>
   12504:	add.w	r1, sp, #4128	; 0x1020
   12508:	adds	r1, #8
   1250a:	str	r1, [sp, #20]
   1250c:	mov	r0, r1
   1250e:	blx	8748 <strlen@plt>
   12512:	ldr	r3, [r4, #0]
   12514:	cmp	r0, r3
   12516:	mov	r6, r0
   12518:	bhi.w	123ba <get_partition_size@@Base+0xaa>
   1251c:	ldr	r1, [sp, #20]
   1251e:	mov	r0, r5
   12520:	blx	85b0 <strcat@plt+0x4>
   12524:	ldr	r0, [r4, #0]
   12526:	subs	r0, r0, r6
   12528:	str	r0, [r4, #0]
   1252a:	ldrh.w	r6, [sl, #152]	; 0x98
   1252e:	ldr	r3, [r4, #0]
   12530:	cmp	r3, r6
   12532:	bcc.w	123ba <get_partition_size@@Base+0xaa>
   12536:	ldr	r1, [sp, #16]
   12538:	mov	r2, r6
   1253a:	mov	r0, r5
   1253c:	mov.w	fp, #0
   12540:	adds	r1, #146	; 0x92
   12542:	blx	893c <strncat@plt>
   12546:	ldr	r3, [r4, #0]
   12548:	subs	r3, r3, r6
   1254a:	str	r3, [r4, #0]
   1254c:	b.n	123be <get_partition_size@@Base+0xae>
   1254e:	mov	r0, fp
   12550:	add.w	sp, sp, #8192	; 0x2000
   12554:	add	sp, #36	; 0x24
   12556:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1255a:	nop
   1255c:	str	r4, [sp, #68]	; 0x44
   1255e:	beq.n	12562 <get_partition_size@@Base+0x252>
   12560:	str	r4, [sp, #72]	; 0x48
   12562:	beq.n	12566 <get_partition_size@@Base+0x256>
   12564:	adds	r6, r6, r7
   12566:	movs	r5, r0
   12568:	lsls	r0, r4, #8
   1256a:	movs	r0, r0
   1256c:	adds	r0, r4, r7
   1256e:	movs	r5, r0
   12570:	adds	r4, r7, r6
   12572:	movs	r5, r0
   12574:	lsls	r0, r6, #8
   12576:	movs	r0, r0
   12578:	strh	r3, [r7, #56]	; 0x38
   1257a:	movs	r2, r0
   1257c:	strh	r3, [r3, #58]	; 0x3a
   1257e:	movs	r2, r0
   12580:	strh	r1, [r1, #58]	; 0x3a
   12582:	movs	r2, r0
   12584:	strh	r5, [r6, #54]	; 0x36
   12586:	movs	r2, r0

00012588 <btrfs_subvolid_resolve@@Base>:
   12588:	push	{r0, r1, r2, r3, r4, lr}
   1258a:	cbz	r2, 125a8 <btrfs_subvolid_resolve@@Base+0x20>
   1258c:	subs	r2, #1
   1258e:	movs	r4, #0
   12590:	str	r2, [sp, #12]
   12592:	strb	r4, [r1, #0]
   12594:	strb	r4, [r1, r2]
   12596:	ldrd	r2, r3, [sp, #24]
   1259a:	strd	r2, r3, [sp]
   1259e:	add	r2, sp, #12
   125a0:	bl	12374 <get_partition_size@@Base+0x64>
   125a4:	add	sp, #16
   125a6:	pop	{r4, pc}
   125a8:	mvn.w	r0, #74	; 0x4a
   125ac:	b.n	125a4 <btrfs_subvolid_resolve@@Base+0x1c>

000125ae <subvol_uuid_search_add@@Base>:
   125ae:	add.w	ip, r0, #8
   125b2:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   125b6:	mov	r5, r0
   125b8:	mov	r4, r1
   125ba:	mov	r0, ip
   125bc:	movs	r6, #0
   125be:	ldr	r1, [r0, #0]
   125c0:	cmp	r1, #0
   125c2:	bne.n	12672 <subvol_uuid_search_add@@Base+0xc4>
   125c4:	strd	r6, r1, [r4]
   125c8:	str	r1, [r4, #8]
   125ca:	mov	r1, ip
   125cc:	str	r4, [r0, #0]
   125ce:	mov	r0, r4
   125d0:	bl	1321e <rb_insert_color@@Base>
   125d4:	add.w	r7, r5, #20
   125d8:	movs	r2, #0
   125da:	mov	r3, r7
   125dc:	ldr	r6, [r3, #0]
   125de:	cmp	r6, #0
   125e0:	bne.n	1269a <subvol_uuid_search_add@@Base+0xec>
   125e2:	add.w	r0, r4, #36	; 0x24
   125e6:	strd	r2, r6, [r4, #36]	; 0x24
   125ea:	str	r6, [r4, #44]	; 0x2c
   125ec:	mov	r1, r7
   125ee:	str	r0, [r3, #0]
   125f0:	bl	1321e <rb_insert_color@@Base>
   125f4:	add.w	r8, r4, #56	; 0x38
   125f8:	add.w	r2, r4, #55	; 0x37
   125fc:	add.w	r1, r4, #71	; 0x47
   12600:	movs	r3, #0
   12602:	ldrb.w	r0, [r2, #1]!
   12606:	cbnz	r0, 1260a <subvol_uuid_search_add@@Base+0x5c>
   12608:	adds	r3, #1
   1260a:	cmp	r2, r1
   1260c:	bne.n	12602 <subvol_uuid_search_add@@Base+0x54>
   1260e:	cmp	r3, #16
   12610:	beq.n	12632 <subvol_uuid_search_add@@Base+0x84>
   12612:	add.w	r7, r5, #12
   12616:	movs	r2, #0
   12618:	mov	r3, r7
   1261a:	ldr	r6, [r3, #0]
   1261c:	cmp	r6, #0
   1261e:	bne.n	126be <subvol_uuid_search_add@@Base+0x110>
   12620:	add.w	r0, r4, #12
   12624:	strd	r2, r6, [r4, #12]
   12628:	str	r6, [r4, #20]
   1262a:	mov	r1, r7
   1262c:	str	r0, [r3, #0]
   1262e:	bl	1321e <rb_insert_color@@Base>
   12632:	add.w	r7, r4, #88	; 0x58
   12636:	add.w	r2, r4, #87	; 0x57
   1263a:	add.w	r1, r4, #103	; 0x67
   1263e:	movs	r3, #0
   12640:	ldrb.w	r0, [r2, #1]!
   12644:	cbnz	r0, 12648 <subvol_uuid_search_add@@Base+0x9a>
   12646:	adds	r3, #1
   12648:	cmp	r2, r1
   1264a:	bne.n	12640 <subvol_uuid_search_add@@Base+0x92>
   1264c:	cmp	r3, #16
   1264e:	beq.n	1270c <subvol_uuid_search_add@@Base+0x15e>
   12650:	adds	r5, #16
   12652:	movs	r2, #0
   12654:	mov	r3, r5
   12656:	ldr	r6, [r3, #0]
   12658:	cmp	r6, #0
   1265a:	bne.n	126e4 <subvol_uuid_search_add@@Base+0x136>
   1265c:	add.w	r0, r4, #24
   12660:	strd	r2, r6, [r4, #24]
   12664:	str	r6, [r4, #32]
   12666:	mov	r1, r5
   12668:	str	r0, [r3, #0]
   1266a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1266e:	b.w	1321e <rb_insert_color@@Base>
   12672:	ldrd	r0, r7, [r4, #48]	; 0x30
   12676:	ldr	r6, [r1, #48]	; 0x30
   12678:	subs	r2, r6, r0
   1267a:	ldr	r0, [r1, #52]	; 0x34
   1267c:	sbc.w	r3, r0, r7
   12680:	cmp	r2, #0
   12682:	sbcs.w	r0, r3, #0
   12686:	bge.n	12690 <subvol_uuid_search_add@@Base+0xe2>
   12688:	add.w	r0, r1, #8
   1268c:	mov	r6, r1
   1268e:	b.n	125be <subvol_uuid_search_add@@Base+0x10>
   12690:	orrs.w	r0, r2, r3
   12694:	beq.n	125d4 <subvol_uuid_search_add@@Base+0x26>
   12696:	adds	r0, r1, #4
   12698:	b.n	1268c <subvol_uuid_search_add@@Base+0xde>
   1269a:	ldr.w	r1, [r4, #136]	; 0x88
   1269e:	ldr	r0, [r6, #100]	; 0x64
   126a0:	blx	83c0 <strcmp@plt>
   126a4:	cmp	r0, #0
   126a6:	mov.w	r3, r0, asr #31
   126aa:	mov	r2, r0
   126ac:	bge.n	126b6 <subvol_uuid_search_add@@Base+0x108>
   126ae:	add.w	r3, r6, #8
   126b2:	mov	r2, r6
   126b4:	b.n	125dc <subvol_uuid_search_add@@Base+0x2e>
   126b6:	orrs	r3, r2
   126b8:	beq.n	125f4 <subvol_uuid_search_add@@Base+0x46>
   126ba:	adds	r3, r6, #4
   126bc:	b.n	126b2 <subvol_uuid_search_add@@Base+0x104>
   126be:	movs	r2, #16
   126c0:	add.w	r0, r6, #44	; 0x2c
   126c4:	mov	r1, r8
   126c6:	blx	84a8 <memcmp@plt+0x4>
   126ca:	cmp	r0, #0
   126cc:	mov.w	r3, r0, asr #31
   126d0:	mov	r2, r0
   126d2:	bge.n	126dc <subvol_uuid_search_add@@Base+0x12e>
   126d4:	add.w	r3, r6, #8
   126d8:	mov	r2, r6
   126da:	b.n	1261a <subvol_uuid_search_add@@Base+0x6c>
   126dc:	orrs	r3, r2
   126de:	beq.n	12632 <subvol_uuid_search_add@@Base+0x84>
   126e0:	adds	r3, r6, #4
   126e2:	b.n	126d8 <subvol_uuid_search_add@@Base+0x12a>
   126e4:	add.w	r0, r6, #64	; 0x40
   126e8:	movs	r2, #16
   126ea:	mov	r1, r7
   126ec:	blx	84a8 <memcmp@plt+0x4>
   126f0:	asrs	r3, r0, #31
   126f2:	cbnz	r0, 12710 <subvol_uuid_search_add@@Base+0x162>
   126f4:	ldrd	r2, r3, [r6, #96]	; 0x60
   126f8:	ldrd	r0, r1, [r4, #120]	; 0x78
   126fc:	cmp	r3, r1
   126fe:	it	eq
   12700:	cmpeq	r2, r0
   12702:	bcc.n	12718 <subvol_uuid_search_add@@Base+0x16a>
   12704:	cmp	r1, r3
   12706:	it	eq
   12708:	cmpeq	r0, r2
   1270a:	bcc.n	12720 <subvol_uuid_search_add@@Base+0x172>
   1270c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   12710:	cmp	r0, #0
   12712:	sbcs.w	r3, r3, #0
   12716:	bge.n	12720 <subvol_uuid_search_add@@Base+0x172>
   12718:	add.w	r3, r6, #8
   1271c:	mov	r2, r6
   1271e:	b.n	12656 <subvol_uuid_search_add@@Base+0xa8>
   12720:	adds	r3, r6, #4
   12722:	b.n	1271c <subvol_uuid_search_add@@Base+0x16e>

00012724 <subvol_uuid_search2@@Base>:
   12724:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12728:	mov	r4, r0
   1272a:	vpush	{d8-d9}
   1272e:	ldr.w	ip, [pc, #1180]	; 12bcc <subvol_uuid_search2@@Base+0x4a8>
   12732:	ldr.w	r0, [pc, #1180]	; 12bd0 <subvol_uuid_search2@@Base+0x4ac>
   12736:	add	ip, pc
   12738:	ldr.w	r5, [pc, #1176]	; 12bd4 <subvol_uuid_search2@@Base+0x4b0>
   1273c:	sub.w	sp, sp, #4576	; 0x11e0
   12740:	sub	sp, #20
   12742:	add	r5, pc
   12744:	add.w	r1, sp, #4640	; 0x1220
   12748:	add.w	sl, sp, #48	; 0x30
   1274c:	adds	r1, #8
   1274e:	strd	r2, r3, [sl, #-8]
   12752:	ldr.w	r8, [r1]
   12756:	add.w	r1, sp, #4640	; 0x1220
   1275a:	adds	r1, #24
   1275c:	ldr.w	r0, [ip, r0]
   12760:	vldr	s16, [r1]
   12764:	add.w	r1, sp, #4640	; 0x1220
   12768:	adds	r1, #28
   1276a:	ldr.w	fp, [r1]
   1276e:	add.w	r1, sp, #4576	; 0x11e0
   12772:	ldr	r0, [r0, #0]
   12774:	str	r0, [r1, #12]
   12776:	mov.w	r0, #0
   1277a:	ldr	r0, [r4, #4]
   1277c:	adds	r1, #12
   1277e:	cmp	r0, #0
   12780:	bne.w	128b2 <subvol_uuid_search2@@Base+0x18e>
   12784:	cmp.w	fp, #2
   12788:	mov	r9, r2
   1278a:	str	r3, [sp, #16]
   1278c:	bne.n	12796 <subvol_uuid_search2@@Base+0x72>
   1278e:	ldr	r4, [r4, #16]
   12790:	cbnz	r4, 127b6 <subvol_uuid_search2@@Base+0x92>
   12792:	mov	sl, r4
   12794:	b.n	127fc <subvol_uuid_search2@@Base+0xd8>
   12796:	cmp.w	fp, #1
   1279a:	bne.n	127a0 <subvol_uuid_search2@@Base+0x7c>
   1279c:	ldr	r4, [r4, #12]
   1279e:	b.n	12790 <subvol_uuid_search2@@Base+0x6c>
   127a0:	cmp.w	fp, #0
   127a4:	bne.n	127aa <subvol_uuid_search2@@Base+0x86>
   127a6:	ldr	r4, [r4, #8]
   127a8:	b.n	12790 <subvol_uuid_search2@@Base+0x6c>
   127aa:	cmp.w	fp, #3
   127ae:	bne.w	12ba8 <subvol_uuid_search2@@Base+0x484>
   127b2:	ldr	r4, [r4, #20]
   127b4:	b.n	12790 <subvol_uuid_search2@@Base+0x6c>
   127b6:	cmp.w	fp, #2
   127ba:	bne.n	12818 <subvol_uuid_search2@@Base+0xf4>
   127bc:	add.w	r0, r4, #64	; 0x40
   127c0:	movs	r2, #16
   127c2:	mov	r1, r8
   127c4:	sub.w	sl, r4, #24
   127c8:	blx	84a8 <memcmp@plt+0x4>
   127cc:	asrs	r3, r0, #31
   127ce:	cmp	r0, #0
   127d0:	bne.w	12bac <subvol_uuid_search2@@Base+0x488>
   127d4:	add.w	r3, sp, #4640	; 0x1220
   127d8:	ldrd	r0, r1, [r4, #96]	; 0x60
   127dc:	adds	r3, #16
   127de:	ldrd	r2, r3, [r3]
   127e2:	cmp	r1, r3
   127e4:	it	eq
   127e6:	cmpeq	r0, r2
   127e8:	bcc.n	127a6 <subvol_uuid_search2@@Base+0x82>
   127ea:	add.w	r3, sp, #4640	; 0x1220
   127ee:	adds	r3, #16
   127f0:	ldrd	r2, r3, [r3]
   127f4:	cmp	r3, r1
   127f6:	it	eq
   127f8:	cmpeq	r2, r0
   127fa:	bcc.n	12858 <subvol_uuid_search2@@Base+0x134>
   127fc:	ldr	r1, [pc, #984]	; (12bd8 <subvol_uuid_search2@@Base+0x4b4>)
   127fe:	add.w	r3, sp, #4576	; 0x11e0
   12802:	ldr	r2, [pc, #972]	; (12bd0 <subvol_uuid_search2@@Base+0x4ac>)
   12804:	adds	r3, #12
   12806:	add	r1, pc
   12808:	ldr	r2, [r1, r2]
   1280a:	ldr	r1, [r2, #0]
   1280c:	ldr	r2, [r3, #0]
   1280e:	eors	r1, r2
   12810:	beq.w	12bb8 <subvol_uuid_search2@@Base+0x494>
   12814:	blx	8510 <__stack_chk_fail@plt>
   12818:	cmp.w	fp, #1
   1281c:	bne.n	12834 <subvol_uuid_search2@@Base+0x110>
   1281e:	add.w	r0, r4, #44	; 0x2c
   12822:	movs	r2, #16
   12824:	mov	r1, r8
   12826:	sub.w	sl, r4, #12
   1282a:	blx	84a8 <memcmp@plt+0x4>
   1282e:	asrs	r7, r0, #31
   12830:	mov	r6, r0
   12832:	b.n	1284a <subvol_uuid_search2@@Base+0x126>
   12834:	cmp.w	fp, #0
   12838:	bne.n	1285c <subvol_uuid_search2@@Base+0x138>
   1283a:	ldrd	r3, r2, [r4, #48]	; 0x30
   1283e:	mov	sl, r4
   12840:	subs.w	r6, r3, r9
   12844:	ldr	r3, [sp, #16]
   12846:	sbc.w	r7, r2, r3
   1284a:	cmp	r6, #0
   1284c:	sbcs.w	r3, r7, #0
   12850:	blt.n	127a6 <subvol_uuid_search2@@Base+0x82>
   12852:	orrs.w	r3, r6, r7
   12856:	beq.n	127fc <subvol_uuid_search2@@Base+0xd8>
   12858:	ldr	r4, [r4, #4]
   1285a:	b.n	12790 <subvol_uuid_search2@@Base+0x6c>
   1285c:	cmp.w	fp, #3
   12860:	bne.n	12872 <subvol_uuid_search2@@Base+0x14e>
   12862:	vmov	r1, s16
   12866:	sub.w	sl, r4, #36	; 0x24
   1286a:	ldr	r0, [r4, #100]	; 0x64
   1286c:	blx	83c0 <strcmp@plt>
   12870:	b.n	1282e <subvol_uuid_search2@@Base+0x10a>
   12872:	ldr	r3, [pc, #872]	; (12bdc <subvol_uuid_search2@@Base+0x4b8>)
   12874:	add	r4, sp, #488	; 0x1e8
   12876:	ldr	r2, [pc, #872]	; (12be0 <subvol_uuid_search2@@Base+0x4bc>)
   12878:	movs	r1, #1
   1287a:	ldr	r0, [r5, r3]
   1287c:	add	r2, pc
   1287e:	ldr	r3, [pc, #868]	; (12be4 <subvol_uuid_search2@@Base+0x4c0>)
   12880:	str	r1, [sp, #12]
   12882:	add	r3, pc
   12884:	str	r3, [sp, #8]
   12886:	ldr	r3, [pc, #864]	; (12be8 <subvol_uuid_search2@@Base+0x4c4>)
   12888:	add	r3, pc
   1288a:	str	r3, [sp, #4]
   1288c:	mov.w	r3, #402	; 0x192
   12890:	str	r3, [sp, #0]
   12892:	ldr	r3, [pc, #856]	; (12bec <subvol_uuid_search2@@Base+0x4c8>)
   12894:	ldr	r0, [r0, #0]
   12896:	add	r3, pc
   12898:	blx	8860 <__fprintf_chk@plt+0x4>
   1289c:	movs	r1, #16
   1289e:	mov	r0, r4
   128a0:	blx	86c4 <backtrace@plt>
   128a4:	movs	r2, #2
   128a6:	mov	r1, r0
   128a8:	mov	r0, r4
   128aa:	blx	89c8 <backtrace_symbols_fd@plt>
   128ae:	blx	8980 <abort@plt>
   128b2:	cmp.w	fp, #3
   128b6:	bhi.w	12b9c <subvol_uuid_search2@@Base+0x478>
   128ba:	tbb	[pc, fp]
   128be:	ldmia	r3, {r2, r3}
   128c0:	bcs.n	128c8 <subvol_uuid_search2@@Base+0x1a4>
   128c2:	ldr	r0, [r4, #0]
   128c4:	sub.w	r2, sl, #8
   128c8:	mov	r1, r8
   128ca:	bl	16e2a <btrfs_lookup_uuid_received_subvol_item@@Base>
   128ce:	mov	r6, r0
   128d0:	cmp	r6, #0
   128d2:	bne.w	12b28 <subvol_uuid_search2@@Base+0x404>
   128d6:	ldr	r3, [r4, #0]
   128d8:	add	r6, sp, #488	; 0x1e8
   128da:	add	r7, sp, #496	; 0x1f0
   128dc:	mov.w	r8, #4096	; 0x1000
   128e0:	movs	r1, #0
   128e2:	mov	r0, r6
   128e4:	vmov	s17, r3
   128e8:	ldrd	r2, r3, [sl, #-8]
   128ec:	strd	r2, r3, [sp, #16]
   128f0:	mov	r2, r8
   128f2:	blx	87c4 <memset@plt+0x4>
   128f6:	movs	r2, #1
   128f8:	movs	r3, #0
   128fa:	strd	r2, r3, [r7, #-8]
   128fe:	ldrd	r2, r3, [sp, #16]
   12902:	movs	r7, #0
   12904:	str.w	r8, [r6, #64]	; 0x40
   12908:	strd	r2, r3, [r6, #8]
   1290c:	strd	r2, r3, [r6, #16]
   12910:	mov.w	r2, #4294967295	; 0xffffffff
   12914:	movs	r3, #132	; 0x84
   12916:	strd	r3, r3, [r6, #56]	; 0x38
   1291a:	mov.w	r3, #4294967295	; 0xffffffff
   1291e:	strd	r2, r3, [r6, #32]
   12922:	strd	r2, r3, [r6, #48]	; 0x30
   12926:	add	r2, sp, #48	; 0x30
   12928:	mov	r3, r7
   1292a:	vmov	s18, r2
   1292e:	vmov	r0, s17
   12932:	mov	r2, r6
   12934:	ldr	r1, [pc, #656]	; (12bc8 <subvol_uuid_search2@@Base+0x4a4>)
   12936:	str	r3, [sp, #28]
   12938:	blx	85bc <ioctl@plt>
   1293c:	ldr	r3, [sp, #28]
   1293e:	cmp	r0, #0
   12940:	bge.w	12aa2 <subvol_uuid_search2@@Base+0x37e>
   12944:	ldr	r3, [pc, #660]	; (12bdc <subvol_uuid_search2@@Base+0x4b8>)
   12946:	movs	r1, #1
   12948:	ldr	r2, [pc, #676]	; (12bf0 <subvol_uuid_search2@@Base+0x4cc>)
   1294a:	ldr	r3, [r5, r3]
   1294c:	add	r2, pc
   1294e:	ldr	r0, [r3, #0]
   12950:	blx	8860 <__fprintf_chk@plt+0x4>
   12954:	movw	r3, #439	; 0x1b7
   12958:	cmp	r7, r3
   1295a:	add	r5, sp, #48	; 0x30
   1295c:	bne.n	12972 <subvol_uuid_search2@@Base+0x24e>
   1295e:	ldrd	r2, r3, [r5, #160]	; 0xa0
   12962:	ldr.w	r1, [r5, #243]	; 0xf3
   12966:	ldr.w	r0, [r5, #239]	; 0xef
   1296a:	cmp	r3, r1
   1296c:	it	eq
   1296e:	cmpeq	r2, r0
   12970:	beq.n	1297e <subvol_uuid_search2@@Base+0x25a>
   12972:	add.w	r0, r5, #239	; 0xef
   12976:	movs	r2, #200	; 0xc8
   12978:	movs	r1, #0
   1297a:	blx	87c4 <memset@plt+0x4>
   1297e:	movs	r1, #144	; 0x90
   12980:	movs	r0, #1
   12982:	blx	839c <calloc@plt+0x4>
   12986:	mov	sl, r0
   12988:	cmp	r0, #0
   1298a:	beq.w	12ba2 <subvol_uuid_search2@@Base+0x47e>
   1298e:	ldrd	r6, r7, [r5, #-8]
   12992:	add.w	r2, r5, #247	; 0xf7
   12996:	add.w	lr, r0, #56	; 0x38
   1299a:	addw	r8, r5, #263	; 0x107
   1299e:	strd	r6, r7, [r0, #48]	; 0x30
   129a2:	ldr	r0, [r2, #0]
   129a4:	adds	r2, #8
   129a6:	ldr.w	r1, [r2, #-4]
   129aa:	cmp	r2, r8
   129ac:	mov	ip, lr
   129ae:	stmia.w	ip!, {r0, r1}
   129b2:	mov	lr, ip
   129b4:	bne.n	129a2 <subvol_uuid_search2@@Base+0x27e>
   129b6:	addw	r2, r5, #279	; 0x117
   129ba:	add.w	lr, sl, #88	; 0x58
   129be:	addw	r8, r5, #295	; 0x127
   129c2:	ldr	r0, [r2, #0]
   129c4:	adds	r2, #8
   129c6:	ldr.w	r1, [r2, #-4]
   129ca:	cmp	r2, r8
   129cc:	mov	ip, lr
   129ce:	stmia.w	ip!, {r0, r1}
   129d2:	mov	lr, ip
   129d4:	bne.n	129c2 <subvol_uuid_search2@@Base+0x29e>
   129d6:	addw	r2, r5, #263	; 0x107
   129da:	add.w	lr, sl, #72	; 0x48
   129de:	addw	r8, r5, #279	; 0x117
   129e2:	ldr	r0, [r2, #0]
   129e4:	adds	r2, #8
   129e6:	ldr.w	r1, [r2, #-4]
   129ea:	cmp	r2, r8
   129ec:	mov	ip, lr
   129ee:	stmia.w	ip!, {r0, r1}
   129f2:	mov	lr, ip
   129f4:	bne.n	129e2 <subvol_uuid_search2@@Base+0x2be>
   129f6:	ldr.w	r1, [r5, #295]	; 0x127
   129fa:	cmp.w	fp, #3
   129fe:	ldr.w	r2, [r5, #299]	; 0x12b
   12a02:	strd	r1, r2, [sl, #104]	; 0x68
   12a06:	ldr.w	r1, [r5, #303]	; 0x12f
   12a0a:	ldr.w	r2, [r5, #307]	; 0x133
   12a0e:	strd	r1, r2, [sl, #112]	; 0x70
   12a12:	ldr.w	r1, [r5, #311]	; 0x137
   12a16:	ldr.w	r2, [r5, #315]	; 0x13b
   12a1a:	strd	r1, r2, [sl, #120]	; 0x78
   12a1e:	ldr.w	r1, [r5, #319]	; 0x13f
   12a22:	ldr.w	r2, [r5, #323]	; 0x143
   12a26:	strd	r1, r2, [sl, #128]	; 0x80
   12a2a:	bne.w	12b70 <subvol_uuid_search2@@Base+0x44c>
   12a2e:	vmov	r0, s16
   12a32:	blx	84f8 <strdup@plt+0x4>
   12a36:	str.w	r0, [sl, #136]	; 0x88
   12a3a:	cmp	r0, #0
   12a3c:	bne.w	127fc <subvol_uuid_search2@@Base+0xd8>
   12a40:	mvn.w	r6, #11
   12a44:	ldr.w	r0, [sl, #136]	; 0x88
   12a48:	blx	8434 <free@plt+0x4>
   12a4c:	mov	r0, sl
   12a4e:	blx	8434 <free@plt+0x4>
   12a52:	b.n	12b28 <subvol_uuid_search2@@Base+0x404>
   12a54:	ldr	r0, [r4, #0]
   12a56:	sub.w	r2, sl, #8
   12a5a:	mov	r1, r8
   12a5c:	bl	16e24 <btrfs_lookup_uuid_subvol_item@@Base>
   12a60:	b.n	128ce <subvol_uuid_search2@@Base+0x1aa>
   12a62:	vmov	r1, s16
   12a66:	movs	r2, #0
   12a68:	ldr	r0, [r4, #0]
   12a6a:	blx	8760 <openat64@plt>
   12a6e:	subs	r7, r0, #0
   12a70:	bge.n	12a90 <subvol_uuid_search2@@Base+0x36c>
   12a72:	blx	8784 <__errno_location@plt>
   12a76:	ldr	r3, [pc, #356]	; (12bdc <subvol_uuid_search2@@Base+0x4b8>)
   12a78:	ldr	r2, [pc, #376]	; (12bf4 <subvol_uuid_search2@@Base+0x4d0>)
   12a7a:	movs	r1, #1
   12a7c:	add	r2, pc
   12a7e:	ldr	r6, [r0, #0]
   12a80:	ldr	r0, [r5, r3]
   12a82:	vmov	r3, s16
   12a86:	negs	r6, r6
   12a88:	ldr	r0, [r0, #0]
   12a8a:	blx	8860 <__fprintf_chk@plt+0x4>
   12a8e:	b.n	128d0 <subvol_uuid_search2@@Base+0x1ac>
   12a90:	sub.w	r1, sl, #8
   12a94:	bl	14db4 <btrfs_list_get_path_rootid@@Base>
   12a98:	mov	r6, r0
   12a9a:	mov	r0, r7
   12a9c:	blx	8998 <close@plt>
   12aa0:	b.n	128d0 <subvol_uuid_search2@@Base+0x1ac>
   12aa2:	ldr	r2, [r6, #64]	; 0x40
   12aa4:	str	r2, [sp, #32]
   12aa6:	cbz	r2, 12afa <subvol_uuid_search2@@Base+0x3d6>
   12aa8:	add	r2, sp, #592	; 0x250
   12aaa:	mov.w	sl, #0
   12aae:	str	r2, [sp, #36]	; 0x24
   12ab0:	str.w	sl, [sp, #28]
   12ab4:	ldr	r1, [sp, #28]
   12ab6:	ldr	r2, [sp, #36]	; 0x24
   12ab8:	add.w	ip, r1, #32
   12abc:	add	r2, r1
   12abe:	ldr.w	r8, [r2, #28]
   12ac2:	ldr	r0, [r2, #8]
   12ac4:	add.w	r1, r8, ip
   12ac8:	str	r1, [sp, #28]
   12aca:	ldr	r1, [r2, #12]
   12acc:	ldrd	r8, r9, [sp, #16]
   12ad0:	strd	r0, r1, [r6, #8]
   12ad4:	ldr	r1, [r2, #24]
   12ad6:	str	r1, [r6, #56]	; 0x38
   12ad8:	ldr	r0, [r2, #16]
   12ada:	ldr	r1, [r2, #20]
   12adc:	strd	r0, r1, [r6, #24]
   12ae0:	ldr	r1, [r2, #12]
   12ae2:	ldr	r0, [r2, #8]
   12ae4:	cmp	r9, r1
   12ae6:	it	eq
   12ae8:	cmpeq	r8, r0
   12aea:	bcs.n	12b06 <subvol_uuid_search2@@Base+0x3e2>
   12aec:	ldrd	r1, r2, [r6, #24]
   12af0:	adds	r0, r2, #1
   12af2:	it	eq
   12af4:	cmpeq.w	r1, #4294967295	; 0xffffffff
   12af8:	bne.n	12b4c <subvol_uuid_search2@@Base+0x428>
   12afa:	cmp	r3, #0
   12afc:	bne.w	12954 <subvol_uuid_search2@@Base+0x230>
   12b00:	mvn.w	r6, #1
   12b04:	b.n	12b28 <subvol_uuid_search2@@Base+0x404>
   12b06:	bne.n	12b40 <subvol_uuid_search2@@Base+0x41c>
   12b08:	ldr	r1, [r2, #24]
   12b0a:	cmp	r1, #132	; 0x84
   12b0c:	bne.n	12b40 <subvol_uuid_search2@@Base+0x41c>
   12b0e:	ldr	r7, [r2, #28]
   12b10:	cmp.w	r7, #440	; 0x1b8
   12b14:	bcc.n	12b2c <subvol_uuid_search2@@Base+0x408>
   12b16:	ldr	r3, [pc, #196]	; (12bdc <subvol_uuid_search2@@Base+0x4b8>)
   12b18:	mvn.w	r6, #74	; 0x4a
   12b1c:	ldr	r0, [pc, #216]	; (12bf8 <subvol_uuid_search2@@Base+0x4d4>)
   12b1e:	ldr	r3, [r5, r3]
   12b20:	add	r0, pc
   12b22:	ldr	r1, [r3, #0]
   12b24:	blx	8968 <fputs@plt+0x4>
   12b28:	mov	sl, r6
   12b2a:	b.n	127fc <subvol_uuid_search2@@Base+0xd8>
   12b2c:	ldr	r1, [sp, #36]	; 0x24
   12b2e:	movw	r3, #439	; 0x1b7
   12b32:	vmov	r0, s18
   12b36:	mov	r2, r7
   12b38:	add	r1, ip
   12b3a:	blx	85a0 <__memcpy_chk@plt>
   12b3e:	movs	r3, #1
   12b40:	ldr	r2, [sp, #32]
   12b42:	add.w	sl, sl, #1
   12b46:	cmp	r2, sl
   12b48:	bne.n	12ab4 <subvol_uuid_search2@@Base+0x390>
   12b4a:	b.n	12aec <subvol_uuid_search2@@Base+0x3c8>
   12b4c:	adds	r0, r1, #1
   12b4e:	adc.w	r2, r2, #0
   12b52:	strd	r0, r2, [r6, #24]
   12b56:	ldr	r2, [r6, #56]	; 0x38
   12b58:	cmp	r2, #132	; 0x84
   12b5a:	bne.n	12afa <subvol_uuid_search2@@Base+0x3d6>
   12b5c:	ldrd	r0, r1, [r6, #8]
   12b60:	ldrd	r8, r9, [sp, #16]
   12b64:	cmp	r9, r1
   12b66:	it	eq
   12b68:	cmpeq	r8, r0
   12b6a:	beq.w	1292e <subvol_uuid_search2@@Base+0x20a>
   12b6e:	b.n	12afa <subvol_uuid_search2@@Base+0x3d6>
   12b70:	mov.w	r0, #4096	; 0x1000
   12b74:	blx	8678 <malloc@plt+0x4>
   12b78:	mov	r1, r0
   12b7a:	str.w	r0, [sl, #136]	; 0x88
   12b7e:	cmp	r0, #0
   12b80:	beq.w	12a40 <subvol_uuid_search2@@Base+0x31c>
   12b84:	strd	r6, r7, [sp]
   12b88:	mov.w	r2, #4096	; 0x1000
   12b8c:	ldr	r0, [r4, #0]
   12b8e:	bl	12588 <btrfs_subvolid_resolve@@Base>
   12b92:	mov	r6, r0
   12b94:	cmp	r0, #0
   12b96:	beq.w	127fc <subvol_uuid_search2@@Base+0xd8>
   12b9a:	b.n	12a44 <subvol_uuid_search2@@Base+0x320>
   12b9c:	mvn.w	r6, #21
   12ba0:	b.n	12b28 <subvol_uuid_search2@@Base+0x404>
   12ba2:	mvn.w	r6, #11
   12ba6:	b.n	12b28 <subvol_uuid_search2@@Base+0x404>
   12ba8:	mov	sl, r0
   12baa:	b.n	127fc <subvol_uuid_search2@@Base+0xd8>
   12bac:	cmp	r0, #0
   12bae:	sbcs.w	r3, r3, #0
   12bb2:	bge.w	12858 <subvol_uuid_search2@@Base+0x134>
   12bb6:	b.n	127a6 <subvol_uuid_search2@@Base+0x82>
   12bb8:	mov	r0, sl
   12bba:	add.w	sp, sp, #4576	; 0x11e0
   12bbe:	add	sp, #20
   12bc0:	vpop	{d8-d9}
   12bc4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12bc8:	str	r4, [sp, #68]	; 0x44
   12bca:	beq.n	12bce <subvol_uuid_search2@@Base+0x4aa>
   12bcc:	asrs	r6, r1, #25
   12bce:	movs	r5, r0
   12bd0:	lsls	r0, r4, #8
   12bd2:	movs	r0, r0
   12bd4:	asrs	r2, r0, #25
   12bd6:	movs	r5, r0
   12bd8:	asrs	r6, r7, #21
   12bda:	movs	r5, r0
   12bdc:	lsls	r0, r6, #8
   12bde:	movs	r0, r0
   12be0:	str	r6, [r4, #96]	; 0x60
   12be2:	movs	r2, r0
   12be4:	add	r6, pc, #316	; (adr r6, 12d24 <subvol_uuid_search_init@@Base+0x100>)
   12be6:	movs	r2, r0
   12be8:	strh	r1, [r3, #36]	; 0x24
   12bea:	movs	r2, r0
   12bec:	strh	r6, [r0, #28]
   12bee:	movs	r2, r0
   12bf0:	strh	r0, [r7, #22]
   12bf2:	movs	r2, r0
   12bf4:	strh	r5, [r5, #12]
   12bf6:	movs	r2, r0
   12bf8:	strh	r2, [r1, #10]
   12bfa:	movs	r2, r0

00012bfc <subvol_uuid_search@@Base>:
   12bfc:	push	{r4, r5, lr}
   12bfe:	sub	sp, #28
   12c00:	ldr	r1, [sp, #60]	; 0x3c
   12c02:	ldrd	r4, r5, [sp, #48]	; 0x30
   12c06:	str	r1, [sp, #20]
   12c08:	ldr	r1, [sp, #56]	; 0x38
   12c0a:	strd	r4, r5, [sp, #8]
   12c0e:	str	r1, [sp, #16]
   12c10:	ldr	r1, [sp, #40]	; 0x28
   12c12:	str	r1, [sp, #0]
   12c14:	bl	12724 <subvol_uuid_search2@@Base>
   12c18:	cmn.w	r0, #4096	; 0x1000
   12c1c:	it	hi
   12c1e:	movhi	r0, #0
   12c20:	add	sp, #28
   12c22:	pop	{r4, r5, pc}

00012c24 <subvol_uuid_search_init@@Base>:
   12c24:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c28:	mov	r9, r1
   12c2a:	vpush	{d8}
   12c2e:	movs	r6, #0
   12c30:	ldr	r1, [pc, #820]	; (12f68 <subvol_uuid_search_init@@Base+0x344>)
   12c32:	mov.w	r5, #4096	; 0x1000
   12c36:	ldr	r2, [pc, #820]	; (12f6c <subvol_uuid_search_init@@Base+0x348>)
   12c38:	mov.w	sl, #4294967295	; 0xffffffff
   12c3c:	add	r1, pc
   12c3e:	ldr	r3, [pc, #816]	; (12f70 <subvol_uuid_search_init@@Base+0x34c>)
   12c40:	sub.w	sp, sp, #4608	; 0x1200
   12c44:	vmov	s16, r0
   12c48:	sub	sp, #4
   12c4a:	add	r3, pc
   12c4c:	add	r4, sp, #504	; 0x1f8
   12c4e:	add	r7, sp, #512	; 0x200
   12c50:	str	r3, [sp, #12]
   12c52:	add.w	r3, sp, #4576	; 0x11e0
   12c56:	ldr	r2, [r1, r2]
   12c58:	add	r0, sp, #64	; 0x40
   12c5a:	movs	r1, #0
   12c5c:	adds	r3, #28
   12c5e:	ldr	r2, [r2, #0]
   12c60:	str	r2, [r3, #0]
   12c62:	mov.w	r2, #0
   12c66:	movw	r2, #439	; 0x1b7
   12c6a:	blx	87c4 <memset@plt+0x4>
   12c6e:	mov	r2, r5
   12c70:	mov	r1, r6
   12c72:	vstr	s16, [r9]
   12c76:	mov	r0, r4
   12c78:	strd	r6, r6, [r9, #8]
   12c7c:	strd	r6, r6, [r9, #16]
   12c80:	mov.w	fp, #4294967295	; 0xffffffff
   12c84:	blx	87c4 <memset@plt+0x4>
   12c88:	movs	r2, #1
   12c8a:	movs	r3, #0
   12c8c:	vmov	r0, s16
   12c90:	strd	r2, r3, [r7, #-8]
   12c94:	movs	r2, #9
   12c96:	movs	r3, #0
   12c98:	ldr	r1, [pc, #712]	; (12f64 <subvol_uuid_search_init@@Base+0x340>)
   12c9a:	strd	r2, r3, [r4, #8]
   12c9e:	movs	r7, #1
   12ca0:	strd	r2, r3, [r4, #16]
   12ca4:	mov	r2, r4
   12ca6:	movs	r3, #132	; 0x84
   12ca8:	strd	sl, fp, [r4, #32]
   12cac:	strd	r3, r3, [r4, #56]	; 0x38
   12cb0:	strd	sl, fp, [r4, #48]	; 0x30
   12cb4:	str	r7, [r4, #64]	; 0x40
   12cb6:	blx	85bc <ioctl@plt>
   12cba:	subs	r3, r0, #0
   12cbc:	str	r3, [sp, #8]
   12cbe:	blt.n	12d48 <subvol_uuid_search_init@@Base+0x124>
   12cc0:	ldr.w	r8, [r4, #64]	; 0x40
   12cc4:	cmp.w	r8, #0
   12cc8:	beq.n	12cec <subvol_uuid_search_init@@Base+0xc8>
   12cca:	str.w	r7, [r9, #4]
   12cce:	str	r6, [sp, #8]
   12cd0:	ldr	r1, [pc, #672]	; (12f74 <subvol_uuid_search_init@@Base+0x350>)
   12cd2:	add.w	r3, sp, #4576	; 0x11e0
   12cd6:	ldr	r2, [pc, #660]	; (12f6c <subvol_uuid_search_init@@Base+0x348>)
   12cd8:	adds	r3, #28
   12cda:	add	r1, pc
   12cdc:	ldr	r2, [r1, r2]
   12cde:	ldr	r1, [r2, #0]
   12ce0:	ldr	r2, [r3, #0]
   12ce2:	eors	r1, r2
   12ce4:	beq.w	12f52 <subvol_uuid_search_init@@Base+0x32e>
   12ce8:	blx	8510 <__stack_chk_fail@plt>
   12cec:	mov	r2, r5
   12cee:	mov	r1, r8
   12cf0:	mov	r0, r4
   12cf2:	blx	87c4 <memset@plt+0x4>
   12cf6:	str	r5, [r4, #64]	; 0x40
   12cf8:	mov	r5, r8
   12cfa:	movs	r3, #0
   12cfc:	movs	r2, #1
   12cfe:	movs	r1, #132	; 0x84
   12d00:	strd	r2, r3, [r4]
   12d04:	movs	r3, #144	; 0x90
   12d06:	strd	sl, fp, [r4, #16]
   12d0a:	strd	r1, r3, [r4, #56]	; 0x38
   12d0e:	add	r3, sp, #608	; 0x260
   12d10:	strd	sl, fp, [r4, #32]
   12d14:	strd	sl, fp, [r4, #48]	; 0x30
   12d18:	str.w	r8, [sp, #52]	; 0x34
   12d1c:	strd	r8, r8, [sp, #28]
   12d20:	strd	r8, r8, [sp, #44]	; 0x2c
   12d24:	strd	r8, r8, [sp, #36]	; 0x24
   12d28:	str	r3, [sp, #60]	; 0x3c
   12d2a:	vmov	r0, s16
   12d2e:	mov	r2, r4
   12d30:	ldr	r1, [pc, #560]	; (12f64 <subvol_uuid_search_init@@Base+0x340>)
   12d32:	blx	85bc <ioctl@plt>
   12d36:	subs	r3, r0, #0
   12d38:	str	r3, [sp, #8]
   12d3a:	bge.n	12d5c <subvol_uuid_search_init@@Base+0x138>
   12d3c:	ldr	r2, [sp, #12]
   12d3e:	ldr	r3, [pc, #568]	; (12f78 <subvol_uuid_search_init@@Base+0x354>)
   12d40:	ldr	r3, [r2, r3]
   12d42:	ldr	r2, [pc, #568]	; (12f7c <subvol_uuid_search_init@@Base+0x358>)
   12d44:	add	r2, pc
   12d46:	b.n	12d52 <subvol_uuid_search_init@@Base+0x12e>
   12d48:	ldr	r2, [sp, #12]
   12d4a:	ldr	r3, [pc, #556]	; (12f78 <subvol_uuid_search_init@@Base+0x354>)
   12d4c:	ldr	r3, [r2, r3]
   12d4e:	ldr	r2, [pc, #560]	; (12f80 <subvol_uuid_search_init@@Base+0x35c>)
   12d50:	add	r2, pc
   12d52:	ldr	r0, [r3, #0]
   12d54:	movs	r1, #1
   12d56:	blx	8860 <__fprintf_chk@plt+0x4>
   12d5a:	b.n	12cd0 <subvol_uuid_search_init@@Base+0xac>
   12d5c:	ldr	r3, [r4, #64]	; 0x40
   12d5e:	cmp	r3, #0
   12d60:	beq.n	12cd0 <subvol_uuid_search_init@@Base+0xac>
   12d62:	mov.w	fp, #0
   12d66:	add	r7, sp, #64	; 0x40
   12d68:	mov	sl, fp
   12d6a:	addw	r3, r7, #263	; 0x107
   12d6e:	str	r3, [sp, #56]	; 0x38
   12d70:	ldr	r3, [r4, #64]	; 0x40
   12d72:	cmp	r3, sl
   12d74:	bhi.n	12d98 <subvol_uuid_search_init@@Base+0x174>
   12d76:	ldrd	r0, r1, [r4, #24]
   12d7a:	mov.w	r3, #4096	; 0x1000
   12d7e:	str	r3, [r4, #64]	; 0x40
   12d80:	adds	r2, r1, #1
   12d82:	it	eq
   12d84:	cmpeq.w	r0, #4294967295	; 0xffffffff
   12d88:	beq.w	12f2a <subvol_uuid_search_init@@Base+0x306>
   12d8c:	adds	r2, r0, #1
   12d8e:	adc.w	r3, r1, #0
   12d92:	strd	r2, r3, [r4, #24]
   12d96:	b.n	12d2a <subvol_uuid_search_init@@Base+0x106>
   12d98:	ldr	r3, [sp, #60]	; 0x3c
   12d9a:	add.w	r6, r3, fp
   12d9e:	add.w	r3, fp, #32
   12da2:	str	r3, [sp, #24]
   12da4:	ldr	r3, [r6, #12]
   12da6:	ldr	r2, [r6, #8]
   12da8:	cmp	r3, #0
   12daa:	it	eq
   12dac:	cmpeq	r2, #5
   12dae:	beq.n	12dd0 <subvol_uuid_search_init@@Base+0x1ac>
   12db0:	subs.w	r1, r2, #256	; 0x100
   12db4:	str	r1, [sp, #16]
   12db6:	adc.w	r1, r3, #4294967295	; 0xffffffff
   12dba:	str	r1, [sp, #20]
   12dbc:	ldrd	fp, ip, [sp, #16]
   12dc0:	mov.w	r1, #4294967295	; 0xffffffff
   12dc4:	mvn.w	r0, #510	; 0x1fe
   12dc8:	cmp	ip, r1
   12dca:	it	eq
   12dcc:	cmpeq	fp, r0
   12dce:	bcs.n	12e26 <subvol_uuid_search_init@@Base+0x202>
   12dd0:	ldr	r1, [r6, #24]
   12dd2:	cmp	r1, #132	; 0x84
   12dd4:	bne.n	12e48 <subvol_uuid_search_init@@Base+0x224>
   12dd6:	ldr	r3, [r6, #28]
   12dd8:	cmp.w	r3, #438	; 0x1b6
   12ddc:	bls.w	12f24 <subvol_uuid_search_init@@Base+0x300>
   12de0:	ldr	r3, [sp, #24]
   12de2:	add.w	r8, sp, #608	; 0x260
   12de6:	movw	r2, #439	; 0x1b7
   12dea:	mov	r0, r7
   12dec:	add	r8, r3
   12dee:	mov	r1, r8
   12df0:	blx	8480 <memcpy@plt+0x4>
   12df4:	ldr.w	r3, [r8, #295]	; 0x127
   12df8:	ldr.w	r5, [r8, #319]	; 0x13f
   12dfc:	str	r3, [sp, #36]	; 0x24
   12dfe:	ldr.w	r3, [r8, #299]	; 0x12b
   12e02:	str	r3, [sp, #40]	; 0x28
   12e04:	ldr.w	r3, [r8, #303]	; 0x12f
   12e08:	str	r3, [sp, #44]	; 0x2c
   12e0a:	ldr.w	r3, [r8, #307]	; 0x133
   12e0e:	str	r3, [sp, #48]	; 0x30
   12e10:	ldr.w	r3, [r8, #311]	; 0x137
   12e14:	str	r3, [sp, #28]
   12e16:	ldr.w	r3, [r8, #315]	; 0x13b
   12e1a:	str	r3, [sp, #32]
   12e1c:	ldr.w	r3, [r8, #323]	; 0x143
   12e20:	mov.w	r8, #1
   12e24:	str	r3, [sp, #52]	; 0x34
   12e26:	ldr	r3, [r6, #28]
   12e28:	add.w	sl, sl, #1
   12e2c:	ldr	r2, [sp, #24]
   12e2e:	add	r2, r3
   12e30:	ldr	r3, [r6, #12]
   12e32:	mov	fp, r2
   12e34:	ldr	r2, [r6, #8]
   12e36:	strd	r2, r3, [r4, #8]
   12e3a:	ldr	r3, [r6, #20]
   12e3c:	ldr	r2, [r6, #16]
   12e3e:	strd	r2, r3, [r4, #24]
   12e42:	ldr	r3, [r6, #24]
   12e44:	str	r3, [r4, #56]	; 0x38
   12e46:	b.n	12d70 <subvol_uuid_search_init@@Base+0x14c>
   12e48:	cmp.w	r8, #0
   12e4c:	beq.n	12e26 <subvol_uuid_search_init@@Base+0x202>
   12e4e:	vmov	r0, s16
   12e52:	bl	1530c <btrfs_list_path_for_root@@Base>
   12e56:	mov	r8, r0
   12e58:	cbnz	r0, 12e64 <subvol_uuid_search_init@@Base+0x240>
   12e5a:	ldr	r0, [pc, #296]	; (12f84 <subvol_uuid_search_init@@Base+0x360>)
   12e5c:	add	r0, pc
   12e5e:	blx	84f8 <strdup@plt+0x4>
   12e62:	mov	r8, r0
   12e64:	cmn.w	r8, #4096	; 0x1000
   12e68:	bls.n	12e8a <subvol_uuid_search_init@@Base+0x266>
   12e6a:	ldr	r2, [sp, #12]
   12e6c:	ldr	r3, [pc, #264]	; (12f78 <subvol_uuid_search_init@@Base+0x354>)
   12e6e:	ldr	r1, [r6, #8]
   12e70:	str.w	r8, [sp, #8]
   12e74:	ldr	r3, [r2, r3]
   12e76:	ldr	r2, [r6, #12]
   12e78:	strd	r1, r2, [sp]
   12e7c:	movs	r1, #1
   12e7e:	ldr	r2, [pc, #264]	; (12f88 <subvol_uuid_search_init@@Base+0x364>)
   12e80:	ldr	r0, [r3, #0]
   12e82:	add	r2, pc
   12e84:	blx	8860 <__fprintf_chk@plt+0x4>
   12e88:	b.n	12cd0 <subvol_uuid_search_init@@Base+0xac>
   12e8a:	movs	r1, #144	; 0x90
   12e8c:	movs	r0, #1
   12e8e:	blx	839c <calloc@plt+0x4>
   12e92:	ldr	r2, [r6, #12]
   12e94:	ldr	r1, [r6, #8]
   12e96:	add.w	lr, r0, #56	; 0x38
   12e9a:	strd	r1, r2, [r0, #48]	; 0x30
   12e9e:	add.w	r2, r7, #247	; 0xf7
   12ea2:	mov	r3, r0
   12ea4:	ldr	r1, [r2, #4]
   12ea6:	mov	ip, lr
   12ea8:	ldr	r0, [r2, #0]
   12eaa:	adds	r2, #8
   12eac:	stmia.w	ip!, {r0, r1}
   12eb0:	mov	lr, ip
   12eb2:	ldr	r1, [sp, #56]	; 0x38
   12eb4:	cmp	r2, r1
   12eb6:	bne.n	12ea4 <subvol_uuid_search_init@@Base+0x280>
   12eb8:	addw	r1, r7, #279	; 0x117
   12ebc:	addw	r2, r7, #263	; 0x107
   12ec0:	add.w	lr, r3, #72	; 0x48
   12ec4:	mov	fp, r1
   12ec6:	ldr	r0, [r2, #0]
   12ec8:	adds	r2, #8
   12eca:	ldr.w	r1, [r2, #-4]
   12ece:	cmp	r2, fp
   12ed0:	mov	ip, lr
   12ed2:	stmia.w	ip!, {r0, r1}
   12ed6:	mov	lr, ip
   12ed8:	bne.n	12ec6 <subvol_uuid_search_init@@Base+0x2a2>
   12eda:	addw	r1, r7, #295	; 0x127
   12ede:	addw	r2, r7, #279	; 0x117
   12ee2:	add.w	lr, r3, #88	; 0x58
   12ee6:	mov	fp, r1
   12ee8:	ldr	r0, [r2, #0]
   12eea:	adds	r2, #8
   12eec:	ldr.w	r1, [r2, #-4]
   12ef0:	cmp	r2, fp
   12ef2:	mov	ip, lr
   12ef4:	stmia.w	ip!, {r0, r1}
   12ef8:	mov	lr, ip
   12efa:	bne.n	12ee8 <subvol_uuid_search_init@@Base+0x2c4>
   12efc:	ldr	r2, [sp, #36]	; 0x24
   12efe:	mov	r1, r3
   12f00:	mov	r0, r9
   12f02:	str	r2, [r3, #104]	; 0x68
   12f04:	ldr	r2, [sp, #40]	; 0x28
   12f06:	str	r2, [r3, #108]	; 0x6c
   12f08:	ldr	r2, [sp, #44]	; 0x2c
   12f0a:	str	r2, [r3, #112]	; 0x70
   12f0c:	ldr	r2, [sp, #48]	; 0x30
   12f0e:	str	r2, [r3, #116]	; 0x74
   12f10:	ldr	r2, [sp, #28]
   12f12:	str	r2, [r3, #120]	; 0x78
   12f14:	ldr	r2, [sp, #32]
   12f16:	strd	r2, r5, [r3, #124]	; 0x7c
   12f1a:	ldr	r2, [sp, #52]	; 0x34
   12f1c:	strd	r2, r8, [r3, #132]	; 0x84
   12f20:	bl	125ae <subvol_uuid_search_add@@Base>
   12f24:	mov.w	r8, #0
   12f28:	b.n	12e26 <subvol_uuid_search_init@@Base+0x202>
   12f2a:	ldrd	r0, r1, [r4, #8]
   12f2e:	adds	r3, r1, #1
   12f30:	it	eq
   12f32:	cmpeq.w	r0, #4294967295	; 0xffffffff
   12f36:	beq.w	12cd0 <subvol_uuid_search_init@@Base+0xac>
   12f3a:	adds	r2, r0, #1
   12f3c:	adc.w	r3, r1, #0
   12f40:	strd	r2, r3, [r4, #8]
   12f44:	movs	r3, #0
   12f46:	movs	r2, #0
   12f48:	strd	r2, r3, [r4, #24]
   12f4c:	movs	r3, #0
   12f4e:	str	r3, [r4, #56]	; 0x38
   12f50:	b.n	12d2a <subvol_uuid_search_init@@Base+0x106>
   12f52:	ldr	r0, [sp, #8]
   12f54:	add.w	sp, sp, #4608	; 0x1200
   12f58:	add	sp, #4
   12f5a:	vpop	{d8}
   12f5e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f62:	nop
   12f64:	str	r4, [sp, #68]	; 0x44
   12f66:	beq.n	12f6a <subvol_uuid_search_init@@Base+0x346>
   12f68:	asrs	r0, r1, #5
   12f6a:	movs	r5, r0
   12f6c:	lsls	r0, r4, #8
   12f6e:	movs	r0, r0
   12f70:	asrs	r2, r7, #4
   12f72:	movs	r5, r0
   12f74:	asrs	r2, r5, #2
   12f76:	movs	r5, r0
   12f78:	lsls	r0, r6, #8
   12f7a:	movs	r0, r0
   12f7c:	ldrb	r0, [r0, #28]
   12f7e:	movs	r2, r0
   12f80:	ldrb	r4, [r4, #29]
   12f82:	movs	r2, r0
   12f84:	str	r1, [r6, #120]	; 0x78
   12f86:	movs	r2, r0
   12f88:	ldrb	r3, [r4, #25]
   12f8a:	movs	r2, r0

00012f8c <subvol_uuid_search_finit@@Base>:
   12f8c:	push	{r4, r5, r6, lr}
   12f8e:	mov	r5, r0
   12f90:	ldr	r3, [r0, #4]
   12f92:	cbz	r3, 12faa <subvol_uuid_search_finit@@Base+0x1e>
   12f94:	add.w	r6, r0, #8
   12f98:	mov	r0, r6
   12f9a:	bl	1353a <rb_first@@Base>
   12f9e:	mov	r4, r0
   12fa0:	cbnz	r0, 12fac <subvol_uuid_search_finit@@Base+0x20>
   12fa2:	strd	r0, r0, [r5, #8]
   12fa6:	strd	r0, r0, [r5, #16]
   12faa:	pop	{r4, r5, r6, pc}
   12fac:	ldr.w	r0, [r4, #136]	; 0x88
   12fb0:	blx	8434 <free@plt+0x4>
   12fb4:	mov	r0, r4
   12fb6:	mov	r1, r6
   12fb8:	bl	132c4 <rb_erase@@Base>
   12fbc:	mov	r0, r4
   12fbe:	blx	8434 <free@plt+0x4>
   12fc2:	b.n	12f98 <subvol_uuid_search_finit@@Base+0xc>

00012fc4 <path_cat_out@@Base>:
   12fc4:	push	{r4, r5, r6, r7, lr}
   12fc6:	mov	r7, r0
   12fc8:	sub	sp, #20
   12fca:	mov	r0, r1
   12fcc:	mov	r6, r2
   12fce:	mov	r5, r1
   12fd0:	blx	8748 <strlen@plt>
   12fd4:	mov	r4, r0
   12fd6:	mov	r0, r6
   12fd8:	blx	8748 <strlen@plt>
   12fdc:	movw	r2, #4093	; 0xffd
   12fe0:	adds	r1, r4, r0
   12fe2:	mov	r3, r0
   12fe4:	cmp	r1, r2
   12fe6:	bgt.n	13028 <path_cat_out@@Base+0x64>
   12fe8:	cbz	r4, 12ff8 <path_cat_out@@Base+0x34>
   12fea:	adds	r2, r5, r4
   12fec:	ldrb.w	r2, [r2, #-1]
   12ff0:	cmp	r2, #47	; 0x2f
   12ff2:	it	eq
   12ff4:	addeq.w	r4, r4, #4294967295	; 0xffffffff
   12ff8:	cbz	r0, 13024 <path_cat_out@@Base+0x60>
   12ffa:	adds	r2, r6, r0
   12ffc:	ldrb.w	r2, [r2, #-1]
   13000:	cmp	r2, #47	; 0x2f
   13002:	bne.n	13006 <path_cat_out@@Base+0x42>
   13004:	subs	r3, r0, #1
   13006:	strd	r3, r6, [sp, #8]
   1300a:	mov.w	r2, #4294967295	; 0xffffffff
   1300e:	ldr	r3, [pc, #32]	; (13030 <path_cat_out@@Base+0x6c>)
   13010:	movs	r1, #1
   13012:	mov	r0, r7
   13014:	strd	r4, r5, [sp]
   13018:	add	r3, pc
   1301a:	blx	879c <__sprintf_chk@plt>
   1301e:	movs	r0, #0
   13020:	add	sp, #20
   13022:	pop	{r4, r5, r6, r7, pc}
   13024:	mov	r3, r0
   13026:	b.n	13006 <path_cat_out@@Base+0x42>
   13028:	mvn.w	r0, #35	; 0x23
   1302c:	b.n	13020 <path_cat_out@@Base+0x5c>
   1302e:	nop
   13030:	ldrb	r7, [r7, #19]
   13032:	movs	r2, r0

00013034 <path_cat3_out@@Base>:
   13034:	stmdb	sp!, {r4, r6, r7, r8, r9, sl, fp, lr}
   13038:	mov	sl, r0
   1303a:	sub	sp, #24
   1303c:	mov	r0, r1
   1303e:	mov	r8, r2
   13040:	mov	r9, r3
   13042:	mov	r7, r1
   13044:	blx	8748 <strlen@plt>
   13048:	mov	r4, r0
   1304a:	mov	r0, r8
   1304c:	blx	8748 <strlen@plt>
   13050:	mov	r6, r0
   13052:	mov	fp, r0
   13054:	mov	r0, r9
   13056:	blx	8748 <strlen@plt>
   1305a:	adds	r2, r4, r6
   1305c:	movw	r1, #4092	; 0xffc
   13060:	add	r2, r0
   13062:	mov	r3, r0
   13064:	cmp	r2, r1
   13066:	bgt.n	130c6 <path_cat3_out@@Base+0x92>
   13068:	cbz	r4, 13078 <path_cat3_out@@Base+0x44>
   1306a:	adds	r2, r7, r4
   1306c:	ldrb.w	r2, [r2, #-1]
   13070:	cmp	r2, #47	; 0x2f
   13072:	it	eq
   13074:	addeq.w	r4, r4, #4294967295	; 0xffffffff
   13078:	cbz	r6, 130be <path_cat3_out@@Base+0x8a>
   1307a:	add.w	r2, r8, r6
   1307e:	ldrb.w	r2, [r2, #-1]
   13082:	cmp	r2, #47	; 0x2f
   13084:	bne.n	1308a <path_cat3_out@@Base+0x56>
   13086:	add.w	fp, r6, #4294967295	; 0xffffffff
   1308a:	cbz	r0, 130c2 <path_cat3_out@@Base+0x8e>
   1308c:	add.w	r2, r9, r0
   13090:	ldrb.w	r2, [r2, #-1]
   13094:	cmp	r2, #47	; 0x2f
   13096:	bne.n	1309a <path_cat3_out@@Base+0x66>
   13098:	subs	r3, r0, #1
   1309a:	strd	r3, r9, [sp, #16]
   1309e:	mov.w	r2, #4294967295	; 0xffffffff
   130a2:	ldr	r3, [pc, #40]	; (130cc <path_cat3_out@@Base+0x98>)
   130a4:	movs	r1, #1
   130a6:	mov	r0, sl
   130a8:	strd	fp, r8, [sp, #8]
   130ac:	add	r3, pc
   130ae:	strd	r4, r7, [sp]
   130b2:	blx	879c <__sprintf_chk@plt>
   130b6:	movs	r0, #0
   130b8:	add	sp, #24
   130ba:	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, pc}
   130be:	mov	fp, r6
   130c0:	b.n	1308a <path_cat3_out@@Base+0x56>
   130c2:	mov	r3, r0
   130c4:	b.n	1309a <path_cat3_out@@Base+0x66>
   130c6:	mvn.w	r0, #35	; 0x23
   130ca:	b.n	130b8 <path_cat3_out@@Base+0x84>
   130cc:	ldrb	r6, [r4, #17]
   130ce:	movs	r2, r0
   130d0:	push	{r4, lr}
   130d2:	orrs	r3, r1
   130d4:	ldr	r4, [r0, #0]
   130d6:	str	r4, [r1, #0]
   130d8:	bics.w	r4, r4, #3
   130dc:	str	r3, [r0, #0]
   130de:	beq.n	130ec <path_cat3_out@@Base+0xb8>
   130e0:	ldr	r3, [r4, #8]
   130e2:	cmp	r0, r3
   130e4:	ite	eq
   130e6:	streq	r1, [r4, #8]
   130e8:	strne	r1, [r4, #4]
   130ea:	pop	{r4, pc}
   130ec:	str	r1, [r2, #0]
   130ee:	b.n	130ea <path_cat3_out@@Base+0xb6>

000130f0 <__rb_erase_color@@Base>:
   130f0:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   130f4:	mov	r6, r2
   130f6:	mov	r4, r0
   130f8:	mov	r7, r1
   130fa:	movs	r2, #0
   130fc:	ldr	r5, [r4, #4]
   130fe:	cmp	r5, r2
   13100:	beq.n	131a4 <__rb_erase_color@@Base+0xb4>
   13102:	ldr	r3, [r5, #0]
   13104:	ands.w	r3, r3, #1
   13108:	bne.n	1312a <__rb_erase_color@@Base+0x3a>
   1310a:	ldr.w	r8, [r5, #8]
   1310e:	mov	r1, r5
   13110:	orr.w	r2, r4, #1
   13114:	mov	r0, r4
   13116:	str.w	r8, [r4, #4]
   1311a:	str	r4, [r5, #8]
   1311c:	mov	r5, r8
   1311e:	str.w	r2, [r8]
   13122:	mov	r2, r7
   13124:	bl	130d0 <path_cat3_out@@Base+0x9c>
   13128:	blx	r6
   1312a:	ldr	r3, [r5, #4]
   1312c:	cbz	r3, 13134 <__rb_erase_color@@Base+0x44>
   1312e:	ldr	r2, [r3, #0]
   13130:	lsls	r2, r2, #31
   13132:	bpl.n	13178 <__rb_erase_color@@Base+0x88>
   13134:	ldr.w	r8, [r5, #8]
   13138:	cmp.w	r8, #0
   1313c:	beq.n	13146 <__rb_erase_color@@Base+0x56>
   1313e:	ldr.w	r3, [r8]
   13142:	lsls	r3, r3, #31
   13144:	bpl.n	13158 <__rb_erase_color@@Base+0x68>
   13146:	str	r4, [r5, #0]
   13148:	ldr	r3, [r4, #0]
   1314a:	lsls	r2, r3, #31
   1314c:	bmi.n	13212 <__rb_erase_color@@Base+0x122>
   1314e:	orr.w	r3, r3, #1
   13152:	str	r3, [r4, #0]
   13154:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   13158:	ldr.w	r3, [r8, #4]
   1315c:	str	r3, [r5, #8]
   1315e:	str.w	r5, [r8, #4]
   13162:	str.w	r8, [r4, #4]
   13166:	cbz	r3, 1316e <__rb_erase_color@@Base+0x7e>
   13168:	orr.w	r2, r5, #1
   1316c:	str	r2, [r3, #0]
   1316e:	mov	r0, r5
   13170:	mov	r1, r8
   13172:	blx	r6
   13174:	mov	r3, r5
   13176:	mov	r5, r8
   13178:	ldr	r2, [r5, #8]
   1317a:	str	r2, [r4, #4]
   1317c:	str	r4, [r5, #8]
   1317e:	orr.w	r1, r5, #1
   13182:	str	r1, [r3, #0]
   13184:	cbz	r2, 13190 <__rb_erase_color@@Base+0xa0>
   13186:	ldr	r3, [r2, #0]
   13188:	and.w	r3, r3, #1
   1318c:	orrs	r3, r4
   1318e:	str	r3, [r2, #0]
   13190:	movs	r3, #1
   13192:	mov	r2, r7
   13194:	mov	r1, r5
   13196:	mov	r0, r4
   13198:	bl	130d0 <path_cat3_out@@Base+0x9c>
   1319c:	mov	r3, r6
   1319e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   131a2:	bx	r3
   131a4:	ldr	r5, [r4, #8]
   131a6:	ldr	r3, [r5, #0]
   131a8:	ands.w	r3, r3, #1
   131ac:	bne.n	131ce <__rb_erase_color@@Base+0xde>
   131ae:	ldr.w	r8, [r5, #4]
   131b2:	mov	r1, r5
   131b4:	orr.w	r2, r4, #1
   131b8:	mov	r0, r4
   131ba:	str.w	r8, [r4, #8]
   131be:	str	r4, [r5, #4]
   131c0:	mov	r5, r8
   131c2:	str.w	r2, [r8]
   131c6:	mov	r2, r7
   131c8:	bl	130d0 <path_cat3_out@@Base+0x9c>
   131cc:	blx	r6
   131ce:	ldr	r3, [r5, #8]
   131d0:	cbz	r3, 131d8 <__rb_erase_color@@Base+0xe8>
   131d2:	ldr	r2, [r3, #0]
   131d4:	lsls	r0, r2, #31
   131d6:	bpl.n	1320a <__rb_erase_color@@Base+0x11a>
   131d8:	ldr.w	r8, [r5, #4]
   131dc:	cmp.w	r8, #0
   131e0:	beq.n	13146 <__rb_erase_color@@Base+0x56>
   131e2:	ldr.w	r3, [r8]
   131e6:	lsls	r1, r3, #31
   131e8:	bmi.n	13146 <__rb_erase_color@@Base+0x56>
   131ea:	ldr.w	r3, [r8, #8]
   131ee:	str	r3, [r5, #4]
   131f0:	str.w	r5, [r8, #8]
   131f4:	str.w	r8, [r4, #8]
   131f8:	cbz	r3, 13200 <__rb_erase_color@@Base+0x110>
   131fa:	orr.w	r2, r5, #1
   131fe:	str	r2, [r3, #0]
   13200:	mov	r0, r5
   13202:	mov	r1, r8
   13204:	blx	r6
   13206:	mov	r3, r5
   13208:	mov	r5, r8
   1320a:	ldr	r2, [r5, #4]
   1320c:	str	r2, [r4, #8]
   1320e:	str	r4, [r5, #4]
   13210:	b.n	1317e <__rb_erase_color@@Base+0x8e>
   13212:	bics.w	r3, r3, #3
   13216:	beq.n	13154 <__rb_erase_color@@Base+0x64>
   13218:	mov	r2, r4
   1321a:	mov	r4, r3
   1321c:	b.n	130fc <__rb_erase_color@@Base+0xc>

0001321e <rb_insert_color@@Base>:
   1321e:	push	{r4, r5, r6}
   13220:	mov	r3, r0
   13222:	ldr	r4, [r0, #0]
   13224:	mov	r2, r1
   13226:	cbnz	r4, 13230 <rb_insert_color@@Base+0x12>
   13228:	movs	r2, #1
   1322a:	str	r2, [r3, #0]
   1322c:	pop	{r4, r5, r6}
   1322e:	bx	lr
   13230:	ldr	r0, [r4, #0]
   13232:	lsls	r5, r0, #31
   13234:	bmi.n	1322c <rb_insert_color@@Base+0xe>
   13236:	ldr	r5, [r0, #4]
   13238:	cmp	r4, r5
   1323a:	beq.n	13286 <rb_insert_color@@Base+0x68>
   1323c:	cbz	r5, 13258 <rb_insert_color@@Base+0x3a>
   1323e:	ldr	r1, [r5, #0]
   13240:	lsls	r1, r1, #31
   13242:	bmi.n	13258 <rb_insert_color@@Base+0x3a>
   13244:	orr.w	r3, r0, #1
   13248:	str	r3, [r5, #0]
   1324a:	str	r3, [r4, #0]
   1324c:	mov	r3, r0
   1324e:	ldr	r4, [r0, #0]
   13250:	bic.w	r4, r4, #3
   13254:	str	r4, [r0, #0]
   13256:	b.n	13226 <rb_insert_color@@Base+0x8>
   13258:	ldr	r5, [r4, #4]
   1325a:	cmp	r5, r3
   1325c:	bne.n	13272 <rb_insert_color@@Base+0x54>
   1325e:	ldr	r1, [r3, #8]
   13260:	str	r1, [r4, #4]
   13262:	str	r4, [r3, #8]
   13264:	cbz	r1, 1326c <rb_insert_color@@Base+0x4e>
   13266:	orr.w	r5, r4, #1
   1326a:	str	r5, [r1, #0]
   1326c:	str	r3, [r4, #0]
   1326e:	mov	r4, r3
   13270:	ldr	r5, [r3, #4]
   13272:	str	r5, [r0, #8]
   13274:	str	r0, [r4, #4]
   13276:	cbz	r5, 1327e <rb_insert_color@@Base+0x60>
   13278:	orr.w	r3, r0, #1
   1327c:	str	r3, [r5, #0]
   1327e:	movs	r3, #0
   13280:	mov	r1, r4
   13282:	pop	{r4, r5, r6}
   13284:	b.n	130d0 <path_cat3_out@@Base+0x9c>
   13286:	ldr	r1, [r0, #8]
   13288:	cbz	r1, 13298 <rb_insert_color@@Base+0x7a>
   1328a:	ldr	r6, [r1, #0]
   1328c:	lsls	r6, r6, #31
   1328e:	bmi.n	13298 <rb_insert_color@@Base+0x7a>
   13290:	orr.w	r3, r0, #1
   13294:	str	r3, [r1, #0]
   13296:	b.n	1324a <rb_insert_color@@Base+0x2c>
   13298:	ldr	r4, [r5, #8]
   1329a:	cmp	r4, r3
   1329c:	bne.n	132b2 <rb_insert_color@@Base+0x94>
   1329e:	ldr	r1, [r3, #4]
   132a0:	str	r1, [r5, #8]
   132a2:	str	r5, [r3, #4]
   132a4:	cbz	r1, 132ac <rb_insert_color@@Base+0x8e>
   132a6:	orr.w	r4, r5, #1
   132aa:	str	r4, [r1, #0]
   132ac:	str	r3, [r5, #0]
   132ae:	mov	r5, r3
   132b0:	ldr	r4, [r3, #8]
   132b2:	str	r4, [r0, #4]
   132b4:	str	r0, [r5, #8]
   132b6:	cbz	r4, 132be <rb_insert_color@@Base+0xa0>
   132b8:	orr.w	r3, r0, #1
   132bc:	str	r3, [r4, #0]
   132be:	movs	r3, #0
   132c0:	mov	r1, r5
   132c2:	b.n	13282 <rb_insert_color@@Base+0x64>

000132c4 <rb_erase@@Base>:
   132c4:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   132c8:	mov	r2, r1
   132ca:	mov	r4, r0
   132cc:	ldrd	r1, r0, [r0, #4]
   132d0:	cbnz	r0, 132fc <rb_erase@@Base+0x38>
   132d2:	ldr	r5, [r4, #0]
   132d4:	bic.w	r3, r5, #3
   132d8:	mov	r0, r3
   132da:	cbz	r3, 132ee <rb_erase@@Base+0x2a>
   132dc:	ldr	r6, [r3, #8]
   132de:	cmp	r4, r6
   132e0:	ite	eq
   132e2:	streq	r1, [r3, #8]
   132e4:	strne	r1, [r3, #4]
   132e6:	cbz	r1, 132f2 <rb_erase@@Base+0x2e>
   132e8:	str	r5, [r1, #0]
   132ea:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   132ee:	str	r1, [r2, #0]
   132f0:	b.n	132e6 <rb_erase@@Base+0x22>
   132f2:	lsls	r5, r5, #31
   132f4:	bpl.n	132ea <rb_erase@@Base+0x26>
   132f6:	cmp	r3, #0
   132f8:	bne.n	13378 <rb_erase@@Base+0xb4>
   132fa:	b.n	132ea <rb_erase@@Base+0x26>
   132fc:	cbnz	r1, 13318 <rb_erase@@Base+0x54>
   132fe:	ldr	r3, [r4, #0]
   13300:	str	r3, [r0, #0]
   13302:	bics.w	r3, r3, #3
   13306:	beq.n	13314 <rb_erase@@Base+0x50>
   13308:	ldr	r2, [r3, #8]
   1330a:	cmp	r4, r2
   1330c:	ite	eq
   1330e:	streq	r0, [r3, #8]
   13310:	strne	r0, [r3, #4]
   13312:	b.n	132ea <rb_erase@@Base+0x26>
   13314:	str	r0, [r2, #0]
   13316:	b.n	132ea <rb_erase@@Base+0x26>
   13318:	ldr	r3, [r1, #8]
   1331a:	cbnz	r3, 1334e <rb_erase@@Base+0x8a>
   1331c:	ldr	r6, [r1, #4]
   1331e:	mov	r3, r1
   13320:	mov	r0, r1
   13322:	ldr	r5, [r4, #8]
   13324:	str	r5, [r3, #8]
   13326:	ldr	r1, [r5, #0]
   13328:	and.w	r1, r1, #1
   1332c:	orrs	r1, r3
   1332e:	str	r1, [r5, #0]
   13330:	ldr	r1, [r4, #0]
   13332:	bics.w	r5, r1, #3
   13336:	beq.n	1336c <rb_erase@@Base+0xa8>
   13338:	ldr	r7, [r5, #8]
   1333a:	cmp	r4, r7
   1333c:	ite	eq
   1333e:	streq	r3, [r5, #8]
   13340:	strne	r3, [r5, #4]
   13342:	cbz	r6, 13370 <rb_erase@@Base+0xac>
   13344:	orr.w	r0, r0, #1
   13348:	str	r1, [r3, #0]
   1334a:	str	r0, [r6, #0]
   1334c:	b.n	132ea <rb_erase@@Base+0x26>
   1334e:	mov	r0, r1
   13350:	ldr	r5, [r3, #8]
   13352:	cbnz	r5, 13366 <rb_erase@@Base+0xa2>
   13354:	ldr	r6, [r3, #4]
   13356:	str	r6, [r0, #8]
   13358:	str	r1, [r3, #4]
   1335a:	ldr	r5, [r1, #0]
   1335c:	and.w	r5, r5, #1
   13360:	orrs	r5, r3
   13362:	str	r5, [r1, #0]
   13364:	b.n	13322 <rb_erase@@Base+0x5e>
   13366:	mov	r0, r3
   13368:	mov	r3, r5
   1336a:	b.n	13350 <rb_erase@@Base+0x8c>
   1336c:	str	r3, [r2, #0]
   1336e:	b.n	13342 <rb_erase@@Base+0x7e>
   13370:	ldr	r4, [r3, #0]
   13372:	str	r1, [r3, #0]
   13374:	lsls	r4, r4, #31
   13376:	bpl.n	132ea <rb_erase@@Base+0x26>
   13378:	movs	r1, #0
   1337a:	ldr	r4, [r0, #4]
   1337c:	cmp	r4, r1
   1337e:	beq.n	133f6 <rb_erase@@Base+0x132>
   13380:	ldr	r3, [r4, #0]
   13382:	ands.w	r3, r3, #1
   13386:	bne.n	1339c <rb_erase@@Base+0xd8>
   13388:	ldr	r5, [r4, #8]
   1338a:	orr.w	r1, r0, #1
   1338e:	str	r5, [r0, #4]
   13390:	str	r0, [r4, #8]
   13392:	str	r1, [r5, #0]
   13394:	mov	r1, r4
   13396:	bl	130d0 <path_cat3_out@@Base+0x9c>
   1339a:	mov	r4, r5
   1339c:	ldr	r3, [r4, #4]
   1339e:	cbz	r3, 133a6 <rb_erase@@Base+0xe2>
   133a0:	ldr	r1, [r3, #0]
   133a2:	lsls	r1, r1, #31
   133a4:	bpl.n	133f0 <rb_erase@@Base+0x12c>
   133a6:	ldr	r1, [r4, #8]
   133a8:	cbz	r1, 133b0 <rb_erase@@Base+0xec>
   133aa:	ldr	r3, [r1, #0]
   133ac:	lsls	r7, r3, #31
   133ae:	bpl.n	133c0 <rb_erase@@Base+0xfc>
   133b0:	str	r0, [r4, #0]
   133b2:	ldr	r3, [r0, #0]
   133b4:	lsls	r1, r3, #31
   133b6:	bmi.n	1342a <rb_erase@@Base+0x166>
   133b8:	orr.w	r3, r3, #1
   133bc:	str	r3, [r0, #0]
   133be:	b.n	132ea <rb_erase@@Base+0x26>
   133c0:	ldr	r3, [r1, #4]
   133c2:	str	r3, [r4, #8]
   133c4:	str	r4, [r1, #4]
   133c6:	str	r1, [r0, #4]
   133c8:	cbz	r3, 133d0 <rb_erase@@Base+0x10c>
   133ca:	orr.w	r5, r4, #1
   133ce:	str	r5, [r3, #0]
   133d0:	ldr	r5, [r1, #8]
   133d2:	orr.w	r3, r1, #1
   133d6:	str	r5, [r0, #4]
   133d8:	str	r0, [r1, #8]
   133da:	str	r3, [r4, #0]
   133dc:	cbz	r5, 133e8 <rb_erase@@Base+0x124>
   133de:	ldr	r3, [r5, #0]
   133e0:	and.w	r3, r3, #1
   133e4:	orrs	r3, r0
   133e6:	str	r3, [r5, #0]
   133e8:	movs	r3, #1
   133ea:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   133ee:	b.n	130d0 <path_cat3_out@@Base+0x9c>
   133f0:	mov	r1, r4
   133f2:	mov	r4, r3
   133f4:	b.n	133d0 <rb_erase@@Base+0x10c>
   133f6:	ldr	r1, [r0, #8]
   133f8:	ldr	r3, [r1, #0]
   133fa:	ands.w	r3, r3, #1
   133fe:	bne.n	13412 <rb_erase@@Base+0x14e>
   13400:	ldr	r4, [r1, #4]
   13402:	orr.w	r5, r0, #1
   13406:	str	r4, [r0, #8]
   13408:	str	r0, [r1, #4]
   1340a:	str	r5, [r4, #0]
   1340c:	bl	130d0 <path_cat3_out@@Base+0x9c>
   13410:	mov	r1, r4
   13412:	ldr	r3, [r1, #8]
   13414:	cbz	r3, 1341c <rb_erase@@Base+0x158>
   13416:	ldr	r4, [r3, #0]
   13418:	lsls	r6, r4, #31
   1341a:	bpl.n	13466 <rb_erase@@Base+0x1a2>
   1341c:	ldr	r4, [r1, #4]
   1341e:	cbz	r4, 13426 <rb_erase@@Base+0x162>
   13420:	ldr	r3, [r4, #0]
   13422:	lsls	r5, r3, #31
   13424:	bpl.n	13438 <rb_erase@@Base+0x174>
   13426:	str	r0, [r1, #0]
   13428:	b.n	133b2 <rb_erase@@Base+0xee>
   1342a:	bics.w	r3, r3, #3
   1342e:	beq.w	132ea <rb_erase@@Base+0x26>
   13432:	mov	r1, r0
   13434:	mov	r0, r3
   13436:	b.n	1337a <rb_erase@@Base+0xb6>
   13438:	ldr	r3, [r4, #8]
   1343a:	str	r3, [r1, #4]
   1343c:	str	r1, [r4, #8]
   1343e:	str	r4, [r0, #8]
   13440:	cbz	r3, 13448 <rb_erase@@Base+0x184>
   13442:	orr.w	r5, r1, #1
   13446:	str	r5, [r3, #0]
   13448:	ldr	r5, [r4, #4]
   1344a:	orr.w	r3, r4, #1
   1344e:	str	r5, [r0, #8]
   13450:	str	r0, [r4, #4]
   13452:	str	r3, [r1, #0]
   13454:	cbz	r5, 13460 <rb_erase@@Base+0x19c>
   13456:	ldr	r3, [r5, #0]
   13458:	and.w	r3, r3, #1
   1345c:	orrs	r3, r0
   1345e:	str	r3, [r5, #0]
   13460:	movs	r3, #1
   13462:	mov	r1, r4
   13464:	b.n	133ea <rb_erase@@Base+0x126>
   13466:	mov	r4, r1
   13468:	mov	r1, r3
   1346a:	b.n	13448 <rb_erase@@Base+0x184>

0001346c <__rb_insert_augmented@@Base>:
   1346c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   13470:	mov	r6, r0
   13472:	ldr	r4, [r0, #0]
   13474:	mov	r9, r1
   13476:	mov	r8, r2
   13478:	cbnz	r4, 13482 <__rb_insert_augmented@@Base+0x16>
   1347a:	movs	r3, #1
   1347c:	str	r3, [r6, #0]
   1347e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   13482:	ldr	r5, [r4, #0]
   13484:	lsls	r0, r5, #31
   13486:	bmi.n	1347e <__rb_insert_augmented@@Base+0x12>
   13488:	ldr	r7, [r5, #4]
   1348a:	cmp	r4, r7
   1348c:	beq.n	134ec <__rb_insert_augmented@@Base+0x80>
   1348e:	cbz	r7, 134aa <__rb_insert_augmented@@Base+0x3e>
   13490:	ldr	r3, [r7, #0]
   13492:	lsls	r1, r3, #31
   13494:	bmi.n	134aa <__rb_insert_augmented@@Base+0x3e>
   13496:	orr.w	r3, r5, #1
   1349a:	str	r3, [r7, #0]
   1349c:	str	r3, [r4, #0]
   1349e:	ldr	r4, [r5, #0]
   134a0:	mov	r6, r5
   134a2:	bic.w	r4, r4, #3
   134a6:	str	r4, [r5, #0]
   134a8:	b.n	13478 <__rb_insert_augmented@@Base+0xc>
   134aa:	ldr	r3, [r4, #4]
   134ac:	cmp	r3, r6
   134ae:	bne.n	134ca <__rb_insert_augmented@@Base+0x5e>
   134b0:	ldr	r3, [r6, #8]
   134b2:	str	r3, [r4, #4]
   134b4:	str	r4, [r6, #8]
   134b6:	cbz	r3, 134be <__rb_insert_augmented@@Base+0x52>
   134b8:	orr.w	r2, r4, #1
   134bc:	str	r2, [r3, #0]
   134be:	mov	r0, r4
   134c0:	str	r6, [r4, #0]
   134c2:	mov	r1, r6
   134c4:	mov	r4, r6
   134c6:	blx	r8
   134c8:	ldr	r3, [r6, #4]
   134ca:	str	r3, [r5, #8]
   134cc:	str	r5, [r4, #4]
   134ce:	cbz	r3, 134d6 <__rb_insert_augmented@@Base+0x6a>
   134d0:	orr.w	r2, r5, #1
   134d4:	str	r2, [r3, #0]
   134d6:	movs	r3, #0
   134d8:	mov	r2, r9
   134da:	mov	r1, r4
   134dc:	mov	r0, r5
   134de:	bl	130d0 <path_cat3_out@@Base+0x9c>
   134e2:	mov	r0, r5
   134e4:	mov	r3, r8
   134e6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   134ea:	bx	r3
   134ec:	ldr	r3, [r5, #8]
   134ee:	cbz	r3, 13500 <__rb_insert_augmented@@Base+0x94>
   134f0:	ldr	r2, [r3, #0]
   134f2:	lsls	r2, r2, #31
   134f4:	bmi.n	13500 <__rb_insert_augmented@@Base+0x94>
   134f6:	orr.w	r2, r5, #1
   134fa:	str	r2, [r3, #0]
   134fc:	str	r2, [r4, #0]
   134fe:	b.n	1349e <__rb_insert_augmented@@Base+0x32>
   13500:	ldr	r3, [r7, #8]
   13502:	cmp	r3, r6
   13504:	bne.n	13520 <__rb_insert_augmented@@Base+0xb4>
   13506:	ldr	r3, [r6, #4]
   13508:	str	r3, [r7, #8]
   1350a:	str	r7, [r6, #4]
   1350c:	cbz	r3, 13514 <__rb_insert_augmented@@Base+0xa8>
   1350e:	orr.w	r2, r7, #1
   13512:	str	r2, [r3, #0]
   13514:	mov	r0, r7
   13516:	str	r6, [r7, #0]
   13518:	mov	r1, r6
   1351a:	mov	r7, r6
   1351c:	blx	r8
   1351e:	ldr	r3, [r6, #8]
   13520:	str	r3, [r5, #4]
   13522:	str	r5, [r7, #8]
   13524:	cbz	r3, 1352c <__rb_insert_augmented@@Base+0xc0>
   13526:	orr.w	r2, r5, #1
   1352a:	str	r2, [r3, #0]
   1352c:	movs	r3, #0
   1352e:	mov	r2, r9
   13530:	mov	r1, r7
   13532:	mov	r0, r5
   13534:	bl	130d0 <path_cat3_out@@Base+0x9c>
   13538:	b.n	134e2 <__rb_insert_augmented@@Base+0x76>

0001353a <rb_first@@Base>:
   1353a:	ldr	r0, [r0, #0]
   1353c:	cbz	r0, 13548 <rb_first@@Base+0xe>
   1353e:	mov	r3, r0
   13540:	ldr	r0, [r0, #8]
   13542:	cmp	r0, #0
   13544:	bne.n	1353e <rb_first@@Base+0x4>
   13546:	mov	r0, r3
   13548:	bx	lr

0001354a <rb_last@@Base>:
   1354a:	ldr	r0, [r0, #0]
   1354c:	cbz	r0, 13558 <rb_last@@Base+0xe>
   1354e:	mov	r3, r0
   13550:	ldr	r0, [r0, #4]
   13552:	cmp	r0, #0
   13554:	bne.n	1354e <rb_last@@Base+0x4>
   13556:	mov	r0, r3
   13558:	bx	lr

0001355a <rb_next@@Base>:
   1355a:	ldr	r3, [r0, #0]
   1355c:	cmp	r0, r3
   1355e:	beq.n	13582 <rb_next@@Base+0x28>
   13560:	ldr	r3, [r0, #4]
   13562:	cbz	r3, 1356e <rb_next@@Base+0x14>
   13564:	mov	r0, r3
   13566:	ldr	r3, [r3, #8]
   13568:	cmp	r3, #0
   1356a:	bne.n	13564 <rb_next@@Base+0xa>
   1356c:	bx	lr
   1356e:	ldr	r3, [r0, #0]
   13570:	mov	r2, r0
   13572:	bic.w	r3, r3, #3
   13576:	mov	r0, r3
   13578:	cbz	r3, 13584 <rb_next@@Base+0x2a>
   1357a:	ldr	r3, [r3, #4]
   1357c:	cmp	r3, r2
   1357e:	beq.n	1356e <rb_next@@Base+0x14>
   13580:	bx	lr
   13582:	movs	r0, #0
   13584:	bx	lr

00013586 <rb_prev@@Base>:
   13586:	ldr	r3, [r0, #0]
   13588:	cmp	r0, r3
   1358a:	beq.n	135ae <rb_prev@@Base+0x28>
   1358c:	ldr	r3, [r0, #8]
   1358e:	cbz	r3, 1359a <rb_prev@@Base+0x14>
   13590:	mov	r0, r3
   13592:	ldr	r3, [r3, #4]
   13594:	cmp	r3, #0
   13596:	bne.n	13590 <rb_prev@@Base+0xa>
   13598:	bx	lr
   1359a:	ldr	r3, [r0, #0]
   1359c:	mov	r2, r0
   1359e:	bic.w	r3, r3, #3
   135a2:	mov	r0, r3
   135a4:	cbz	r3, 135b0 <rb_prev@@Base+0x2a>
   135a6:	ldr	r3, [r3, #8]
   135a8:	cmp	r3, r2
   135aa:	beq.n	1359a <rb_prev@@Base+0x14>
   135ac:	bx	lr
   135ae:	movs	r0, #0
   135b0:	bx	lr

000135b2 <rb_replace_node@@Base>:
   135b2:	mov	r3, r1
   135b4:	ldr	r1, [r0, #0]
   135b6:	bics.w	r1, r1, #3
   135ba:	beq.n	135ea <rb_replace_node@@Base+0x38>
   135bc:	ldr	r2, [r1, #8]
   135be:	cmp	r0, r2
   135c0:	ite	eq
   135c2:	streq	r3, [r1, #8]
   135c4:	strne	r3, [r1, #4]
   135c6:	ldr	r1, [r0, #8]
   135c8:	cbz	r1, 135d4 <rb_replace_node@@Base+0x22>
   135ca:	ldr	r2, [r1, #0]
   135cc:	and.w	r2, r2, #1
   135d0:	orrs	r2, r3
   135d2:	str	r2, [r1, #0]
   135d4:	ldr	r1, [r0, #4]
   135d6:	cbz	r1, 135e2 <rb_replace_node@@Base+0x30>
   135d8:	ldr	r2, [r1, #0]
   135da:	and.w	r2, r2, #1
   135de:	orrs	r2, r3
   135e0:	str	r2, [r1, #0]
   135e2:	ldmia	r0, {r0, r1, r2}
   135e4:	stmia.w	r3, {r0, r1, r2}
   135e8:	bx	lr
   135ea:	str	r3, [r2, #0]
   135ec:	b.n	135c6 <rb_replace_node@@Base+0x14>

000135ee <rb_next_postorder@@Base>:
   135ee:	mov	r2, r0
   135f0:	cbz	r0, 13614 <rb_next_postorder@@Base+0x26>
   135f2:	ldr	r3, [r0, #0]
   135f4:	bics.w	r0, r3, #3
   135f8:	beq.n	13614 <rb_next_postorder@@Base+0x26>
   135fa:	ldr	r3, [r0, #8]
   135fc:	cmp	r3, r2
   135fe:	bne.n	13614 <rb_next_postorder@@Base+0x26>
   13600:	ldr	r3, [r0, #4]
   13602:	cbz	r3, 13614 <rb_next_postorder@@Base+0x26>
   13604:	mov	r0, r3
   13606:	ldr	r3, [r3, #8]
   13608:	cmp	r3, #0
   1360a:	bne.n	13604 <rb_next_postorder@@Base+0x16>
   1360c:	ldr	r3, [r0, #4]
   1360e:	cmp	r3, #0
   13610:	bne.n	13604 <rb_next_postorder@@Base+0x16>
   13612:	bx	lr
   13614:	bx	lr

00013616 <rb_first_postorder@@Base>:
   13616:	ldr	r0, [r0, #0]
   13618:	cbz	r0, 1362a <rb_first_postorder@@Base+0x14>
   1361a:	mov	r3, r0
   1361c:	ldr	r0, [r0, #8]
   1361e:	cmp	r0, #0
   13620:	bne.n	1361a <rb_first_postorder@@Base+0x4>
   13622:	ldr	r0, [r3, #4]
   13624:	cmp	r0, #0
   13626:	bne.n	1361a <rb_first_postorder@@Base+0x4>
   13628:	mov	r0, r3
   1362a:	bx	lr
   1362c:	push	{r4, r5, lr}
   1362e:	ldrd	r4, r5, [r0, #24]
   13632:	ldrd	r0, r1, [r1, #24]
   13636:	cmp	r1, r5
   13638:	it	eq
   1363a:	cmpeq	r0, r4
   1363c:	bcc.n	13652 <rb_first_postorder@@Base+0x3c>
   1363e:	cmp	r5, r1
   13640:	it	eq
   13642:	cmpeq	r4, r0
   13644:	ite	cc
   13646:	movcc.w	r0, #4294967295	; 0xffffffff
   1364a:	movcs	r0, #0
   1364c:	cbz	r2, 13650 <rb_first_postorder@@Base+0x3a>
   1364e:	negs	r0, r0
   13650:	pop	{r4, r5, pc}
   13652:	movs	r0, #1
   13654:	b.n	1364c <rb_first_postorder@@Base+0x36>
   13656:	push	{r4, r5, lr}
   13658:	ldrd	r4, r5, [r0, #72]	; 0x48
   1365c:	ldrd	r0, r1, [r1, #72]	; 0x48
   13660:	cmp	r1, r5
   13662:	it	eq
   13664:	cmpeq	r0, r4
   13666:	bcc.n	1367c <rb_first_postorder@@Base+0x66>
   13668:	cmp	r5, r1
   1366a:	it	eq
   1366c:	cmpeq	r4, r0
   1366e:	ite	cc
   13670:	movcc.w	r0, #4294967295	; 0xffffffff
   13674:	movcs	r0, #0
   13676:	cbz	r2, 1367a <rb_first_postorder@@Base+0x64>
   13678:	negs	r0, r0
   1367a:	pop	{r4, r5, pc}
   1367c:	movs	r0, #1
   1367e:	b.n	13676 <rb_first_postorder@@Base+0x60>
   13680:	push	{r4, r5, lr}
   13682:	ldrd	r4, r5, [r0, #80]	; 0x50
   13686:	ldrd	r0, r1, [r1, #80]	; 0x50
   1368a:	cmp	r1, r5
   1368c:	it	eq
   1368e:	cmpeq	r0, r4
   13690:	bcc.n	136a6 <rb_first_postorder@@Base+0x90>
   13692:	cmp	r5, r1
   13694:	it	eq
   13696:	cmpeq	r4, r0
   13698:	ite	cc
   1369a:	movcc.w	r0, #4294967295	; 0xffffffff
   1369e:	movcs	r0, #0
   136a0:	cbz	r2, 136a4 <rb_first_postorder@@Base+0x8e>
   136a2:	negs	r0, r0
   136a4:	pop	{r4, r5, pc}
   136a6:	movs	r0, #1
   136a8:	b.n	136a0 <rb_first_postorder@@Base+0x8a>
   136aa:	ldrd	r0, r1, [r0, #24]
   136ae:	cmp	r1, r3
   136b0:	itte	eq
   136b2:	cmpeq	r0, r2
   136b4:	moveq	r0, #1
   136b6:	movne	r0, #0
   136b8:	bx	lr
   136ba:	ldrd	r2, r3, [r0, #32]
   136be:	orrs	r3, r2
   136c0:	ite	ne
   136c2:	movne	r0, #1
   136c4:	moveq	r0, #0
   136c6:	bx	lr
   136c8:	ldr	r0, [r0, #40]	; 0x28
   136ca:	ands	r0, r2
   136cc:	bx	lr
   136ce:	ldrd	r0, r1, [r0, #72]	; 0x48
   136d2:	cmp	r1, r3
   136d4:	it	eq
   136d6:	cmpeq	r0, r2
   136d8:	ite	cs
   136da:	movcs	r0, #1
   136dc:	movcc	r0, #0
   136de:	bx	lr
   136e0:	ldrd	r0, r1, [r0, #72]	; 0x48
   136e4:	cmp	r3, r1
   136e6:	it	eq
   136e8:	cmpeq	r2, r0
   136ea:	ite	cs
   136ec:	movcs	r0, #1
   136ee:	movcc	r0, #0
   136f0:	bx	lr
   136f2:	ldrd	r0, r1, [r0, #72]	; 0x48
   136f6:	cmp	r1, r3
   136f8:	itte	eq
   136fa:	cmpeq	r0, r2
   136fc:	moveq	r0, #1
   136fe:	movne	r0, #0
   13700:	bx	lr
   13702:	ldrd	r0, r1, [r0, #80]	; 0x50
   13706:	cmp	r1, r3
   13708:	it	eq
   1370a:	cmpeq	r0, r2
   1370c:	ite	cs
   1370e:	movcs	r0, #1
   13710:	movcc	r0, #0
   13712:	bx	lr
   13714:	ldrd	r0, r1, [r0, #80]	; 0x50
   13718:	cmp	r3, r1
   1371a:	it	eq
   1371c:	cmpeq	r2, r0
   1371e:	ite	cs
   13720:	movcs	r0, #1
   13722:	movcc	r0, #0
   13724:	bx	lr
   13726:	ldrd	r0, r1, [r0, #80]	; 0x50
   1372a:	cmp	r1, r3
   1372c:	itte	eq
   1372e:	cmpeq	r0, r2
   13730:	moveq	r0, #1
   13732:	movne	r0, #0
   13734:	bx	lr
   13736:	ldrd	r0, r1, [r0, #64]	; 0x40
   1373a:	cmp	r1, r3
   1373c:	itte	eq
   1373e:	cmpeq	r0, r2
   13740:	moveq	r0, #1
   13742:	movne	r0, #0
   13744:	bx	lr
   13746:	ldr.w	r0, [r0, #152]	; 0x98
   1374a:	bx	lr
   1374c:	ldr	r2, [pc, #60]	; (1378c <rb_first_postorder@@Base+0x176>)
   1374e:	movs	r1, #16
   13750:	ldr	r3, [pc, #60]	; (13790 <rb_first_postorder@@Base+0x17a>)
   13752:	push	{r4, lr}
   13754:	add	r2, pc
   13756:	sub	sp, #72	; 0x48
   13758:	add	r4, sp, #4
   1375a:	ldr	r3, [r2, r3]
   1375c:	mov	r0, r4
   1375e:	ldr	r3, [r3, #0]
   13760:	str	r3, [sp, #68]	; 0x44
   13762:	mov.w	r3, #0
   13766:	blx	86c4 <backtrace@plt>
   1376a:	movs	r2, #2
   1376c:	mov	r1, r0
   1376e:	mov	r0, r4
   13770:	blx	89c8 <backtrace_symbols_fd@plt>
   13774:	ldr	r2, [pc, #28]	; (13794 <rb_first_postorder@@Base+0x17e>)
   13776:	ldr	r3, [pc, #24]	; (13790 <rb_first_postorder@@Base+0x17a>)
   13778:	add	r2, pc
   1377a:	ldr	r3, [r2, r3]
   1377c:	ldr	r2, [r3, #0]
   1377e:	ldr	r3, [sp, #68]	; 0x44
   13780:	eors	r2, r3
   13782:	beq.n	13788 <rb_first_postorder@@Base+0x172>
   13784:	blx	8510 <__stack_chk_fail@plt>
   13788:	add	sp, #72	; 0x48
   1378a:	pop	{r4, pc}
   1378c:	lsls	r0, r6, #24
   1378e:	movs	r5, r0
   13790:	lsls	r0, r4, #8
   13792:	movs	r0, r0
   13794:	lsls	r4, r1, #24
   13796:	movs	r5, r0
   13798:	push	{r4, lr}
   1379a:	mov	r4, r0
   1379c:	ldr.w	r0, [r0, #144]	; 0x90
   137a0:	blx	8434 <free@plt+0x4>
   137a4:	ldr.w	r0, [r4, #140]	; 0x8c
   137a8:	blx	8434 <free@plt+0x4>
   137ac:	ldr.w	r0, [r4, #148]	; 0x94
   137b0:	blx	8434 <free@plt+0x4>
   137b4:	mov	r0, r4
   137b6:	ldmia.w	sp!, {r4, lr}
   137ba:	b.w	8430 <free@plt>
   137be:	mov	r1, r2
   137c0:	adds	r0, #108	; 0x6c
   137c2:	push	{r3, lr}
   137c4:	blx	8544 <uuid_compare@plt>
   137c8:	clz	r0, r0
   137cc:	lsrs	r0, r0, #5
   137ce:	pop	{r3, pc}
   137d0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137d4:	mov	r6, r0
   137d6:	mov	r0, r2
   137d8:	ldr	r2, [pc, #188]	; (13898 <rb_first_postorder@@Base+0x282>)
   137da:	mov	r1, r3
   137dc:	ldr	r3, [pc, #188]	; (1389c <rb_first_postorder@@Base+0x286>)
   137de:	add	r2, pc
   137e0:	ldr.w	r7, [r6, #148]	; 0x94
   137e4:	ldr.w	r8, [pc, #184]	; 138a0 <rb_first_postorder@@Base+0x28a>
   137e8:	sub	sp, #20
   137ea:	ldr	r3, [r2, r3]
   137ec:	add	r8, pc
   137ee:	ldr	r3, [r3, #0]
   137f0:	str	r3, [sp, #12]
   137f2:	mov.w	r3, #0
   137f6:	cmp	r7, #0
   137f8:	beq.n	1387a <rb_first_postorder@@Base+0x264>
   137fa:	ldrd	r2, r3, [r6, #64]	; 0x40
   137fe:	cmp	r3, r1
   13800:	it	eq
   13802:	cmpeq	r2, r0
   13804:	beq.n	1387a <rb_first_postorder@@Base+0x264>
   13806:	ldr	r2, [pc, #156]	; (138a4 <rb_first_postorder@@Base+0x28e>)
   13808:	mov	r3, sp
   1380a:	mov	fp, sp
   1380c:	add	r2, pc
   1380e:	ldr	r1, [r2, #4]
   13810:	ldr	r0, [r2, #0]
   13812:	ldrh	r2, [r2, #8]
   13814:	stmia	r3!, {r0, r1}
   13816:	mov	r0, fp
   13818:	strh	r2, [r3, #0]
   1381a:	blx	8748 <strlen@plt>
   1381e:	mov	r5, r0
   13820:	mov	r0, r7
   13822:	blx	8748 <strlen@plt>
   13826:	add.w	r9, r5, r0
   1382a:	mov	sl, r0
   1382c:	add.w	r0, r9, #2
   13830:	blx	8678 <malloc@plt+0x4>
   13834:	mov	r4, r0
   13836:	cbnz	r0, 1384e <rb_first_postorder@@Base+0x238>
   13838:	ldr	r3, [pc, #108]	; (138a8 <rb_first_postorder@@Base+0x292>)
   1383a:	ldr	r0, [pc, #112]	; (138ac <rb_first_postorder@@Base+0x296>)
   1383c:	ldr.w	r3, [r8, r3]
   13840:	add	r0, pc
   13842:	ldr	r1, [r3, #0]
   13844:	blx	8968 <fputs@plt+0x4>
   13848:	movs	r0, #1
   1384a:	blx	873c <exit@plt>
   1384e:	adds	r0, r5, #1
   13850:	add	r9, r4
   13852:	mov	r2, sl
   13854:	mov	r1, r7
   13856:	add	r0, r4
   13858:	blx	8480 <memcpy@plt+0x4>
   1385c:	movs	r3, #0
   1385e:	mov	r2, r5
   13860:	strb.w	r3, [r9, #1]
   13864:	mov	r1, fp
   13866:	movs	r3, #47	; 0x2f
   13868:	mov	r0, r4
   1386a:	strb	r3, [r4, r5]
   1386c:	blx	8480 <memcpy@plt+0x4>
   13870:	mov	r0, r7
   13872:	blx	8434 <free@plt+0x4>
   13876:	str.w	r4, [r6, #148]	; 0x94
   1387a:	ldr	r2, [pc, #52]	; (138b0 <rb_first_postorder@@Base+0x29a>)
   1387c:	ldr	r3, [pc, #28]	; (1389c <rb_first_postorder@@Base+0x286>)
   1387e:	add	r2, pc
   13880:	ldr	r3, [r2, r3]
   13882:	ldr	r2, [r3, #0]
   13884:	ldr	r3, [sp, #12]
   13886:	eors	r2, r3
   13888:	beq.n	1388e <rb_first_postorder@@Base+0x278>
   1388a:	blx	8510 <__stack_chk_fail@plt>
   1388e:	movs	r0, #1
   13890:	add	sp, #20
   13892:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13896:	nop
   13898:	lsls	r6, r4, #22
   1389a:	movs	r5, r0
   1389c:	lsls	r0, r4, #8
   1389e:	movs	r0, r0
   138a0:	lsls	r0, r3, #22
   138a2:	movs	r5, r0
   138a4:	strb	r3, [r7, #20]
   138a6:	movs	r2, r0
   138a8:	lsls	r0, r6, #8
   138aa:	movs	r0, r0
   138ac:	strb	r5, [r5, #19]
   138ae:	movs	r2, r0
   138b0:	lsls	r6, r0, #20
   138b2:	movs	r5, r0
   138b4:	push	{r4, lr}
   138b6:	mov	r4, r2
   138b8:	ldr.w	r1, [r1, #148]	; 0x94
   138bc:	ldr.w	r0, [r0, #148]	; 0x94
   138c0:	blx	83c0 <strcmp@plt>
   138c4:	cmp	r0, #0
   138c6:	bgt.n	138d6 <rb_first_postorder@@Base+0x2c0>
   138c8:	ite	ne
   138ca:	movne.w	r0, #4294967295	; 0xffffffff
   138ce:	moveq	r0, #0
   138d0:	cbz	r4, 138d4 <rb_first_postorder@@Base+0x2be>
   138d2:	negs	r0, r0
   138d4:	pop	{r4, pc}
   138d6:	movs	r0, #1
   138d8:	b.n	138d0 <rb_first_postorder@@Base+0x2ba>
   138da:	push	{r4, lr}
   138dc:	sub	sp, #168	; 0xa8
   138de:	ldr	r4, [pc, #76]	; (1392c <rb_first_postorder@@Base+0x316>)
   138e0:	ldr	r1, [pc, #76]	; (13930 <rb_first_postorder@@Base+0x31a>)
   138e2:	add	r4, pc
   138e4:	ldr	r1, [r4, r1]
   138e6:	mov	r4, sp
   138e8:	ldr	r1, [r1, #0]
   138ea:	str	r1, [sp, #164]	; 0xa4
   138ec:	mov.w	r1, #0
   138f0:	strd	r2, r3, [sp, #24]
   138f4:	mov	r3, r0
   138f6:	cbnz	r3, 1390c <rb_first_postorder@@Base+0x2f6>
   138f8:	ldr	r1, [pc, #56]	; (13934 <rb_first_postorder@@Base+0x31e>)
   138fa:	ldr	r2, [pc, #52]	; (13930 <rb_first_postorder@@Base+0x31a>)
   138fc:	add	r1, pc
   138fe:	ldr	r2, [r1, r2]
   13900:	ldr	r1, [r2, #0]
   13902:	ldr	r2, [sp, #164]	; 0xa4
   13904:	eors	r1, r2
   13906:	beq.n	13924 <rb_first_postorder@@Base+0x30e>
   13908:	blx	8510 <__stack_chk_fail@plt>
   1390c:	movs	r2, #0
   1390e:	mov	r1, r3
   13910:	mov	r0, r4
   13912:	bl	1362c <rb_first_postorder@@Base+0x16>
   13916:	cmp	r0, #0
   13918:	bge.n	1391e <rb_first_postorder@@Base+0x308>
   1391a:	ldr	r3, [r3, #8]
   1391c:	b.n	138f6 <rb_first_postorder@@Base+0x2e0>
   1391e:	beq.n	138f8 <rb_first_postorder@@Base+0x2e2>
   13920:	ldr	r3, [r3, #4]
   13922:	b.n	138f6 <rb_first_postorder@@Base+0x2e0>
   13924:	mov	r0, r3
   13926:	add	sp, #168	; 0xa8
   13928:	pop	{r4, pc}
   1392a:	nop
   1392c:	lsls	r2, r4, #18
   1392e:	movs	r5, r0
   13930:	lsls	r0, r4, #8
   13932:	movs	r0, r0
   13934:	lsls	r0, r1, #18
   13936:	movs	r5, r0
   13938:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1393c:	sub	sp, #20
   1393e:	mov	r9, r0
   13940:	ldr	r0, [r0, #0]
   13942:	strd	r2, r3, [sp]
   13946:	bl	138da <rb_first_postorder@@Base+0x2c4>
   1394a:	ldr.w	fp, [pc, #656]	; 13bdc <rb_first_postorder@@Base+0x5c6>
   1394e:	ldrd	r6, r7, [sp, #64]	; 0x40
   13952:	add	fp, pc
   13954:	ldrd	sl, r8, [sp, #88]	; 0x58
   13958:	ldr	r5, [sp, #124]	; 0x7c
   1395a:	mov	r4, r0
   1395c:	cmp	r0, #0
   1395e:	beq.w	13a96 <rb_first_postorder@@Base+0x480>
   13962:	ldrd	r2, r3, [r0, #24]
   13966:	ldrd	r0, r1, [sp]
   1396a:	cmp	r1, r3
   1396c:	it	eq
   1396e:	cmpeq	r0, r2
   13970:	bne.w	13a96 <rb_first_postorder@@Base+0x480>
   13974:	cmp.w	sl, #0
   13978:	beq.n	139ba <rb_first_postorder@@Base+0x3a4>
   1397a:	cmp.w	r8, #0
   1397e:	beq.n	139ba <rb_first_postorder@@Base+0x3a4>
   13980:	ldr.w	r0, [r4, #144]	; 0x90
   13984:	blx	8434 <free@plt+0x4>
   13988:	add.w	r0, r8, #1
   1398c:	blx	8678 <malloc@plt+0x4>
   13990:	str.w	r0, [r4, #144]	; 0x90
   13994:	cbnz	r0, 139a8 <rb_first_postorder@@Base+0x392>
   13996:	ldr	r3, [pc, #584]	; (13be0 <rb_first_postorder@@Base+0x5ca>)
   13998:	ldr	r0, [pc, #584]	; (13be4 <rb_first_postorder@@Base+0x5ce>)
   1399a:	ldr.w	r3, [fp, r3]
   1399e:	add	r0, pc
   139a0:	ldr	r1, [r3, #0]
   139a2:	blx	8968 <fputs@plt+0x4>
   139a6:	b.n	13aaa <rb_first_postorder@@Base+0x494>
   139a8:	mov	r2, r8
   139aa:	mov	r1, sl
   139ac:	blx	87e0 <strncpy@plt>
   139b0:	ldr.w	r3, [r4, #144]	; 0x90
   139b4:	movs	r2, #0
   139b6:	strb.w	r2, [r3, r8]
   139ba:	ldrd	r2, r3, [sp, #56]	; 0x38
   139be:	orrs	r3, r2
   139c0:	itt	ne
   139c2:	ldrdne	r2, r3, [sp, #56]	; 0x38
   139c6:	strdne	r2, r3, [r4, #48]	; 0x30
   139ca:	orrs.w	r3, r6, r7
   139ce:	ldrd	r2, r3, [sp, #72]	; 0x48
   139d2:	it	ne
   139d4:	strdne	r6, r7, [r4, #32]
   139d8:	orrs	r3, r2
   139da:	itt	ne
   139dc:	ldrdne	r2, r3, [sp, #72]	; 0x48
   139e0:	strdne	r2, r3, [r4, #40]	; 0x28
   139e4:	ldrd	r2, r3, [sp, #80]	; 0x50
   139e8:	orrs	r3, r2
   139ea:	itt	ne
   139ec:	ldrdne	r2, r3, [sp, #80]	; 0x50
   139f0:	strdne	r2, r3, [r4, #56]	; 0x38
   139f4:	ldrd	r2, r3, [sp, #104]	; 0x68
   139f8:	orrs	r3, r2
   139fa:	itt	ne
   139fc:	ldrdne	r2, r3, [sp, #104]	; 0x68
   13a00:	strdne	r2, r3, [r4, #72]	; 0x48
   13a04:	ldrd	r2, r3, [sp, #96]	; 0x60
   13a08:	orrs	r3, r2
   13a0a:	beq.n	13a82 <rb_first_postorder@@Base+0x46c>
   13a0c:	ldrd	r2, r3, [sp, #96]	; 0x60
   13a10:	strd	r2, r3, [r4, #80]	; 0x50
   13a14:	ldr	r3, [sp, #112]	; 0x70
   13a16:	cbz	r3, 13a1a <rb_first_postorder@@Base+0x404>
   13a18:	str	r3, [r4, #88]	; 0x58
   13a1a:	ldr	r3, [sp, #116]	; 0x74
   13a1c:	cbz	r3, 13a3c <rb_first_postorder@@Base+0x426>
   13a1e:	add.w	r2, r4, #92	; 0x5c
   13a22:	add.w	ip, r3, #16
   13a26:	mov	r7, r3
   13a28:	mov	r3, r7
   13a2a:	adds	r2, #8
   13a2c:	ldmia	r3!, {r0, r1}
   13a2e:	cmp	r3, ip
   13a30:	str.w	r0, [r2, #-8]
   13a34:	mov	r7, r3
   13a36:	str.w	r1, [r2, #-4]
   13a3a:	bne.n	13a28 <rb_first_postorder@@Base+0x412>
   13a3c:	ldr	r3, [sp, #120]	; 0x78
   13a3e:	cbz	r3, 13a5e <rb_first_postorder@@Base+0x448>
   13a40:	add.w	r2, r4, #108	; 0x6c
   13a44:	add.w	r7, r3, #16
   13a48:	mov	r6, r3
   13a4a:	mov	r3, r6
   13a4c:	adds	r2, #8
   13a4e:	ldmia	r3!, {r0, r1}
   13a50:	cmp	r3, r7
   13a52:	str.w	r0, [r2, #-8]
   13a56:	mov	r6, r3
   13a58:	str.w	r1, [r2, #-4]
   13a5c:	bne.n	13a4a <rb_first_postorder@@Base+0x434>
   13a5e:	cbz	r5, 13a7a <rb_first_postorder@@Base+0x464>
   13a60:	adds	r4, #124	; 0x7c
   13a62:	add.w	r2, r5, #16
   13a66:	mov	r3, r5
   13a68:	adds	r4, #8
   13a6a:	ldmia	r3!, {r0, r1}
   13a6c:	cmp	r3, r2
   13a6e:	str.w	r0, [r4, #-8]
   13a72:	mov	r5, r3
   13a74:	str.w	r1, [r4, #-4]
   13a78:	bne.n	13a66 <rb_first_postorder@@Base+0x450>
   13a7a:	movs	r0, #0
   13a7c:	add	sp, #20
   13a7e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a82:	ldrd	r2, r3, [r4, #80]	; 0x50
   13a86:	orrs	r3, r2
   13a88:	bne.n	13a14 <rb_first_postorder@@Base+0x3fe>
   13a8a:	orrs.w	r3, r6, r7
   13a8e:	it	ne
   13a90:	strdne	r6, r7, [r4, #80]	; 0x50
   13a94:	b.n	13a14 <rb_first_postorder@@Base+0x3fe>
   13a96:	movs	r1, #160	; 0xa0
   13a98:	movs	r0, #1
   13a9a:	blx	839c <calloc@plt+0x4>
   13a9e:	mov	r4, r0
   13aa0:	cbnz	r0, 13ab0 <rb_first_postorder@@Base+0x49a>
   13aa2:	ldr	r0, [pc, #324]	; (13be8 <rb_first_postorder@@Base+0x5d2>)
   13aa4:	add	r0, pc
   13aa6:	blx	865c <puts@plt+0x4>
   13aaa:	movs	r0, #1
   13aac:	blx	873c <exit@plt>
   13ab0:	ldrd	r2, r3, [sp]
   13ab4:	strd	r2, r3, [r0, #24]
   13ab8:	cmp.w	sl, #0
   13abc:	beq.n	13af2 <rb_first_postorder@@Base+0x4dc>
   13abe:	cmp.w	r8, #0
   13ac2:	beq.n	13af2 <rb_first_postorder@@Base+0x4dc>
   13ac4:	add.w	r0, r8, #1
   13ac8:	blx	8678 <malloc@plt+0x4>
   13acc:	str.w	r0, [r4, #144]	; 0x90
   13ad0:	cbnz	r0, 13ae0 <rb_first_postorder@@Base+0x4ca>
   13ad2:	ldr	r3, [pc, #268]	; (13be0 <rb_first_postorder@@Base+0x5ca>)
   13ad4:	ldr	r0, [pc, #276]	; (13bec <rb_first_postorder@@Base+0x5d6>)
   13ad6:	ldr.w	r3, [fp, r3]
   13ada:	add	r0, pc
   13adc:	ldr	r1, [r3, #0]
   13ade:	b.n	139a2 <rb_first_postorder@@Base+0x38c>
   13ae0:	mov	r2, r8
   13ae2:	mov	r1, sl
   13ae4:	str	r0, [sp, #12]
   13ae6:	blx	87e0 <strncpy@plt>
   13aea:	ldr	r3, [sp, #12]
   13aec:	movs	r2, #0
   13aee:	strb.w	r2, [r3, r8]
   13af2:	ldrd	r2, r3, [sp, #56]	; 0x38
   13af6:	orrs	r3, r2
   13af8:	itt	ne
   13afa:	ldrdne	r2, r3, [sp, #56]	; 0x38
   13afe:	strdne	r2, r3, [r4, #48]	; 0x30
   13b02:	ldrd	r2, r3, [sp, #80]	; 0x50
   13b06:	orrs	r3, r2
   13b08:	itt	ne
   13b0a:	ldrdne	r2, r3, [sp, #80]	; 0x50
   13b0e:	strdne	r2, r3, [r4, #56]	; 0x38
   13b12:	orrs.w	r3, r6, r7
   13b16:	ldrd	r2, r3, [sp, #72]	; 0x48
   13b1a:	it	ne
   13b1c:	strdne	r6, r7, [r4, #32]
   13b20:	orrs	r3, r2
   13b22:	itt	ne
   13b24:	ldrdne	r2, r3, [sp, #72]	; 0x48
   13b28:	strdne	r2, r3, [r4, #40]	; 0x28
   13b2c:	ldrd	r2, r3, [sp, #104]	; 0x68
   13b30:	orrs	r3, r2
   13b32:	itt	ne
   13b34:	ldrdne	r2, r3, [sp, #104]	; 0x68
   13b38:	strdne	r2, r3, [r4, #72]	; 0x48
   13b3c:	ldrd	r2, r3, [sp, #96]	; 0x60
   13b40:	orrs	r3, r2
   13b42:	beq.n	13b96 <rb_first_postorder@@Base+0x580>
   13b44:	ldrd	r2, r3, [sp, #96]	; 0x60
   13b48:	strd	r2, r3, [r4, #80]	; 0x50
   13b4c:	ldr	r3, [sp, #112]	; 0x70
   13b4e:	cbz	r3, 13b52 <rb_first_postorder@@Base+0x53c>
   13b50:	str	r3, [r4, #88]	; 0x58
   13b52:	ldr	r3, [sp, #116]	; 0x74
   13b54:	cbz	r3, 13b60 <rb_first_postorder@@Base+0x54a>
   13b56:	ldmia	r3, {r0, r1, r2, r3}
   13b58:	add.w	ip, r4, #92	; 0x5c
   13b5c:	stmia.w	ip, {r0, r1, r2, r3}
   13b60:	ldr	r3, [sp, #120]	; 0x78
   13b62:	cbz	r3, 13b6e <rb_first_postorder@@Base+0x558>
   13b64:	ldmia	r3, {r0, r1, r2, r3}
   13b66:	add.w	r7, r4, #108	; 0x6c
   13b6a:	stmia.w	r7, {r0, r1, r2, r3}
   13b6e:	cbz	r5, 13b7c <rb_first_postorder@@Base+0x566>
   13b70:	ldmia.w	r5, {r0, r1, r2, r3}
   13b74:	add.w	r6, r4, #124	; 0x7c
   13b78:	stmia.w	r6, {r0, r1, r2, r3}
   13b7c:	mov	r2, r9
   13b7e:	movs	r1, #0
   13b80:	ldr	r3, [r2, #0]
   13b82:	cbnz	r3, 13baa <rb_first_postorder@@Base+0x594>
   13b84:	strd	r1, r3, [r4]
   13b88:	mov	r0, r4
   13b8a:	str	r3, [r4, #8]
   13b8c:	mov	r1, r9
   13b8e:	str	r4, [r2, #0]
   13b90:	bl	1321e <rb_insert_color@@Base>
   13b94:	b.n	13a7a <rb_first_postorder@@Base+0x464>
   13b96:	ldrd	r2, r3, [r4, #80]	; 0x50
   13b9a:	orrs	r3, r2
   13b9c:	bne.n	13b4c <rb_first_postorder@@Base+0x536>
   13b9e:	orrs.w	r3, r6, r7
   13ba2:	it	ne
   13ba4:	strdne	r6, r7, [r4, #80]	; 0x50
   13ba8:	b.n	13b4c <rb_first_postorder@@Base+0x536>
   13baa:	movs	r2, #0
   13bac:	mov	r1, r3
   13bae:	mov	r0, r4
   13bb0:	bl	1362c <rb_first_postorder@@Base+0x16>
   13bb4:	cmp	r0, #0
   13bb6:	bge.n	13bc0 <rb_first_postorder@@Base+0x5aa>
   13bb8:	add.w	r2, r3, #8
   13bbc:	mov	r1, r3
   13bbe:	b.n	13b80 <rb_first_postorder@@Base+0x56a>
   13bc0:	beq.n	13bc6 <rb_first_postorder@@Base+0x5b0>
   13bc2:	adds	r2, r3, #4
   13bc4:	b.n	13bbc <rb_first_postorder@@Base+0x5a6>
   13bc6:	blx	8784 <__errno_location@plt>
   13bca:	movs	r3, #17
   13bcc:	str	r3, [r0, #0]
   13bce:	ldr	r0, [pc, #32]	; (13bf0 <rb_first_postorder@@Base+0x5da>)
   13bd0:	ldrd	r2, r3, [sp]
   13bd4:	add	r0, pc
   13bd6:	bl	16b70 <__btrfs_error@@Base>
   13bda:	b.n	13aaa <rb_first_postorder@@Base+0x494>
   13bdc:	lsls	r2, r6, #16
   13bde:	movs	r5, r0
   13be0:	lsls	r0, r6, #8
   13be2:	movs	r0, r0
   13be4:	strb	r7, [r1, #14]
   13be6:	movs	r2, r0
   13be8:	strb	r5, [r4, r3]
   13bea:	movs	r2, r0
   13bec:	strb	r3, [r2, #9]
   13bee:	movs	r2, r0
   13bf0:	strb	r5, [r7, #5]
   13bf2:	movs	r2, r0
   13bf4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13bf8:	sub	sp, #20
   13bfa:	movs	r6, #0
   13bfc:	mov	r9, r1
   13bfe:	mov	r5, r1
   13c00:	mov	r4, r6
   13c02:	mov.w	sl, #47	; 0x2f
   13c06:	mov	fp, r6
   13c08:	str	r0, [sp, #8]
   13c0a:	strd	r2, r3, [sp]
   13c0e:	ldrd	r2, r3, [r5, #48]	; 0x30
   13c12:	orrs	r3, r2
   13c14:	bne.n	13c26 <rb_first_postorder@@Base+0x610>
   13c16:	mov	r0, r4
   13c18:	blx	8434 <free@plt+0x4>
   13c1c:	mvn.w	r0, #1
   13c20:	add	sp, #20
   13c22:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c26:	ldr.w	r8, [r5, #140]	; 0x8c
   13c2a:	mov	r0, r8
   13c2c:	blx	8748 <strlen@plt>
   13c30:	mov	r7, r0
   13c32:	cmp	r4, #0
   13c34:	beq.n	13cbc <rb_first_postorder@@Base+0x6a6>
   13c36:	adds	r0, #2
   13c38:	add	r0, r6
   13c3a:	blx	8678 <malloc@plt+0x4>
   13c3e:	mov	r8, r0
   13c40:	cbnz	r0, 13c50 <rb_first_postorder@@Base+0x63a>
   13c42:	ldr	r0, [pc, #140]	; (13cd0 <rb_first_postorder@@Base+0x6ba>)
   13c44:	add	r0, pc
   13c46:	blx	8568 <perror@plt>
   13c4a:	movs	r0, #1
   13c4c:	blx	873c <exit@plt>
   13c50:	adds	r3, r7, #1
   13c52:	mov	r2, r6
   13c54:	add	r0, r3
   13c56:	mov	r1, r4
   13c58:	str	r3, [sp, #12]
   13c5a:	blx	8480 <memcpy@plt+0x4>
   13c5e:	mov	r2, r7
   13c60:	strb.w	sl, [r8, r7]
   13c64:	mov	r0, r8
   13c66:	ldr.w	r1, [r5, #140]	; 0x8c
   13c6a:	blx	8480 <memcpy@plt+0x4>
   13c6e:	add.w	r0, r8, r6
   13c72:	add	r7, r0
   13c74:	mov	r0, r4
   13c76:	mov	r4, r8
   13c78:	strb.w	fp, [r7, #1]
   13c7c:	blx	8434 <free@plt+0x4>
   13c80:	ldr	r3, [sp, #12]
   13c82:	add	r6, r3
   13c84:	ldrd	r2, r3, [r9, #64]	; 0x40
   13c88:	ldrd	r0, r1, [sp]
   13c8c:	orrs	r3, r2
   13c8e:	itt	eq
   13c90:	ldrdeq	r2, r3, [r5, #48]	; 0x30
   13c94:	strdeq	r2, r3, [r9, #64]	; 0x40
   13c98:	ldrd	r2, r3, [r5, #48]	; 0x30
   13c9c:	cmp	r3, r1
   13c9e:	it	eq
   13ca0:	cmpeq	r2, r0
   13ca2:	beq.n	13cc8 <rb_first_postorder@@Base+0x6b2>
   13ca4:	cmp	r3, #0
   13ca6:	it	eq
   13ca8:	cmpeq	r2, #5
   13caa:	beq.n	13cc8 <rb_first_postorder@@Base+0x6b2>
   13cac:	ldr	r1, [sp, #8]
   13cae:	ldr	r0, [r1, #0]
   13cb0:	bl	138da <rb_first_postorder@@Base+0x2c4>
   13cb4:	mov	r5, r0
   13cb6:	cmp	r0, #0
   13cb8:	bne.n	13c0e <rb_first_postorder@@Base+0x5f8>
   13cba:	b.n	13c16 <rb_first_postorder@@Base+0x600>
   13cbc:	mov	r0, r8
   13cbe:	mov	r6, r7
   13cc0:	blx	84f8 <strdup@plt+0x4>
   13cc4:	mov	r4, r0
   13cc6:	b.n	13c84 <rb_first_postorder@@Base+0x66e>
   13cc8:	movs	r0, #0
   13cca:	str.w	r4, [r9, #148]	; 0x94
   13cce:	b.n	13c20 <rb_first_postorder@@Base+0x60a>
   13cd0:	strb	r1, [r7, #4]
   13cd2:	movs	r2, r0
   13cd4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   13cd8:	mov	r4, r1
   13cda:	ldr	r1, [pc, #260]	; (13de0 <rb_first_postorder@@Base+0x7ca>)
   13cdc:	sub.w	sp, sp, #4096	; 0x1000
   13ce0:	ldr	r2, [pc, #256]	; (13de4 <rb_first_postorder@@Base+0x7ce>)
   13ce2:	sub	sp, #16
   13ce4:	add	r1, pc
   13ce6:	ldr.w	r6, [r4, #140]	; 0x8c
   13cea:	add.w	r3, sp, #4096	; 0x1000
   13cee:	mov	r5, r0
   13cf0:	ldr	r2, [r1, r2]
   13cf2:	adds	r3, #12
   13cf4:	ldr	r2, [r2, #0]
   13cf6:	str	r2, [r3, #0]
   13cf8:	mov.w	r2, #0
   13cfc:	cmp	r6, #0
   13cfe:	bne.n	13dba <rb_first_postorder@@Base+0x7a4>
   13d00:	ldrd	r8, r9, [r4, #48]	; 0x30
   13d04:	orrs.w	r3, r8, r9
   13d08:	beq.n	13d48 <rb_first_postorder@@Base+0x732>
   13d0a:	add	r7, sp, #8
   13d0c:	mov.w	r2, #4096	; 0x1000
   13d10:	mov	r1, r6
   13d12:	add.w	sl, sp, #16
   13d16:	mov	r0, r7
   13d18:	blx	87c4 <memset@plt+0x4>
   13d1c:	ldrd	r2, r3, [r4, #56]	; 0x38
   13d20:	mov	r0, r5
   13d22:	ldr	r1, [pc, #184]	; (13ddc <rb_first_postorder@@Base+0x7c6>)
   13d24:	strd	r8, r9, [sl, #-8]
   13d28:	strd	r2, r3, [r7, #8]
   13d2c:	mov	r2, r7
   13d2e:	blx	85bc <ioctl@plt>
   13d32:	subs	r5, r0, #0
   13d34:	bge.n	13d74 <rb_first_postorder@@Base+0x75e>
   13d36:	blx	8784 <__errno_location@plt>
   13d3a:	ldr	r3, [r0, #0]
   13d3c:	cmp	r3, #2
   13d3e:	bne.n	13d4e <rb_first_postorder@@Base+0x738>
   13d40:	movs	r2, #0
   13d42:	movs	r3, #0
   13d44:	strd	r2, r3, [r4, #48]	; 0x30
   13d48:	mvn.w	r5, #1
   13d4c:	b.n	13d5a <rb_first_postorder@@Base+0x744>
   13d4e:	ldr	r0, [pc, #152]	; (13de8 <rb_first_postorder@@Base+0x7d2>)
   13d50:	ldrd	r2, r3, [r4, #48]	; 0x30
   13d54:	add	r0, pc
   13d56:	bl	16b70 <__btrfs_error@@Base>
   13d5a:	ldr	r1, [pc, #144]	; (13dec <rb_first_postorder@@Base+0x7d6>)
   13d5c:	add.w	r3, sp, #4096	; 0x1000
   13d60:	ldr	r2, [pc, #128]	; (13de4 <rb_first_postorder@@Base+0x7ce>)
   13d62:	adds	r3, #12
   13d64:	add	r1, pc
   13d66:	ldr	r2, [r1, r2]
   13d68:	ldr	r1, [r2, #0]
   13d6a:	ldr	r2, [r3, #0]
   13d6c:	eors	r1, r2
   13d6e:	beq.n	13dd0 <rb_first_postorder@@Base+0x7ba>
   13d70:	blx	8510 <__stack_chk_fail@plt>
   13d74:	ldr.w	r8, [r4, #144]	; 0x90
   13d78:	ldrb	r3, [r7, #16]
   13d7a:	mov	r0, r8
   13d7c:	cbz	r3, 13dbe <rb_first_postorder@@Base+0x7a8>
   13d7e:	blx	8748 <strlen@plt>
   13d82:	add	r1, sp, #24
   13d84:	str	r1, [sp, #4]
   13d86:	mov	r5, r0
   13d88:	mov	r0, r1
   13d8a:	blx	8748 <strlen@plt>
   13d8e:	add	r0, r5
   13d90:	adds	r0, #1
   13d92:	blx	8678 <malloc@plt+0x4>
   13d96:	ldr	r1, [sp, #4]
   13d98:	mov	r5, r0
   13d9a:	str.w	r0, [r4, #140]	; 0x8c
   13d9e:	cbnz	r0, 13dae <rb_first_postorder@@Base+0x798>
   13da0:	ldr	r0, [pc, #76]	; (13df0 <rb_first_postorder@@Base+0x7da>)
   13da2:	add	r0, pc
   13da4:	blx	8568 <perror@plt>
   13da8:	movs	r0, #1
   13daa:	blx	873c <exit@plt>
   13dae:	blx	85f8 <strcpy@plt>
   13db2:	mov	r1, r8
   13db4:	mov	r0, r5
   13db6:	blx	85b0 <strcat@plt+0x4>
   13dba:	movs	r5, #0
   13dbc:	b.n	13d5a <rb_first_postorder@@Base+0x744>
   13dbe:	blx	84f8 <strdup@plt+0x4>
   13dc2:	str.w	r0, [r4, #140]	; 0x8c
   13dc6:	cmp	r0, #0
   13dc8:	bne.n	13dba <rb_first_postorder@@Base+0x7a4>
   13dca:	ldr	r0, [pc, #40]	; (13df4 <rb_first_postorder@@Base+0x7de>)
   13dcc:	add	r0, pc
   13dce:	b.n	13da4 <rb_first_postorder@@Base+0x78e>
   13dd0:	mov	r0, r5
   13dd2:	add.w	sp, sp, #4096	; 0x1000
   13dd6:	add	sp, #16
   13dd8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   13ddc:	str	r4, [sp, #72]	; 0x48
   13dde:	beq.n	13de2 <rb_first_postorder@@Base+0x7cc>
   13de0:	lsls	r0, r4, #2
   13de2:	movs	r5, r0
   13de4:	lsls	r0, r4, #8
   13de6:	movs	r0, r0
   13de8:	strb	r7, [r6, #0]
   13dea:	movs	r2, r0
   13dec:	movs	r0, r4
   13dee:	movs	r5, r0
   13df0:	ldr	r3, [r3, #124]	; 0x7c
   13df2:	movs	r2, r0
   13df4:	ldr	r7, [r4, #124]	; 0x7c
   13df6:	movs	r2, r0
   13df8:	push	{r3, r4, r5, lr}
   13dfa:	mov	r5, r0
   13dfc:	mov	r0, r1
   13dfe:	bl	1353a <rb_first@@Base>
   13e02:	mov	r4, r0
   13e04:	cbnz	r0, 13e08 <rb_first_postorder@@Base+0x7f2>
   13e06:	pop	{r3, r4, r5, pc}
   13e08:	mov	r1, r4
   13e0a:	mov	r0, r5
   13e0c:	bl	13cd4 <rb_first_postorder@@Base+0x6be>
   13e10:	cbz	r0, 13e16 <rb_first_postorder@@Base+0x800>
   13e12:	adds	r3, r0, #2
   13e14:	bne.n	13e06 <rb_first_postorder@@Base+0x7f0>
   13e16:	mov	r0, r4
   13e18:	bl	1355a <rb_next@@Base>
   13e1c:	b.n	13e02 <rb_first_postorder@@Base+0x7ec>
   13e1e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e22:	mov	r6, r1
   13e24:	vpush	{d8}
   13e28:	ldr	r1, [pc, #748]	; (14118 <rb_first_postorder@@Base+0xb02>)
   13e2a:	ldr	r2, [pc, #752]	; (1411c <rb_first_postorder@@Base+0xb06>)
   13e2c:	add	r1, pc
   13e2e:	vmov	s16, r0
   13e32:	sub.w	sp, sp, #4288	; 0x10c0
   13e36:	sub	sp, #28
   13e38:	ldr	r2, [r1, r2]
   13e3a:	add	r4, sp, #160	; 0xa0
   13e3c:	add.w	r3, sp, #4288	; 0x10c0
   13e40:	add	r5, sp, #184	; 0xb8
   13e42:	ldr	r2, [r2, #0]
   13e44:	str	r2, [r3, #20]
   13e46:	mov.w	r2, #0
   13e4a:	movs	r1, #0
   13e4c:	mov.w	r2, #4096	; 0x1000
   13e50:	mov	r0, r4
   13e52:	str	r1, [r6, #0]
   13e54:	adds	r3, #20
   13e56:	blx	87c4 <memset@plt+0x4>
   13e5a:	movs	r2, #1
   13e5c:	movs	r3, #0
   13e5e:	strd	r2, r3, [r5, #-24]
   13e62:	movs	r2, #132	; 0x84
   13e64:	movs	r3, #144	; 0x90
   13e66:	strd	r2, r3, [r4, #56]	; 0x38
   13e6a:	movs	r2, #5
   13e6c:	movs	r3, #0
   13e6e:	strd	r2, r3, [r4, #8]
   13e72:	mvn.w	r2, #255	; 0xff
   13e76:	mov.w	r3, #4294967295	; 0xffffffff
   13e7a:	strd	r2, r3, [r4, #16]
   13e7e:	mov.w	r2, #4294967295	; 0xffffffff
   13e82:	mov.w	r3, #4294967295	; 0xffffffff
   13e86:	strd	r2, r3, [r4, #32]
   13e8a:	strd	r2, r3, [r4, #48]	; 0x30
   13e8e:	vmov	r0, s16
   13e92:	mov	r2, r4
   13e94:	ldr	r1, [pc, #636]	; (14114 <rb_first_postorder@@Base+0xafe>)
   13e96:	mov.w	r3, #4096	; 0x1000
   13e9a:	str	r3, [r4, #64]	; 0x40
   13e9c:	blx	85bc <ioctl@plt>
   13ea0:	cmp	r0, #0
   13ea2:	blt.n	13eae <rb_first_postorder@@Base+0x898>
   13ea4:	ldr	r3, [r4, #64]	; 0x40
   13ea6:	cmp	r3, #0
   13ea8:	bne.w	140f6 <rb_first_postorder@@Base+0xae0>
   13eac:	movs	r0, #0
   13eae:	ldr	r1, [pc, #624]	; (14120 <rb_first_postorder@@Base+0xb0a>)
   13eb0:	add.w	r3, sp, #4288	; 0x10c0
   13eb4:	ldr	r2, [pc, #612]	; (1411c <rb_first_postorder@@Base+0xb06>)
   13eb6:	adds	r3, #20
   13eb8:	add	r1, pc
   13eba:	ldr	r2, [r1, r2]
   13ebc:	ldr	r1, [r2, #0]
   13ebe:	ldr	r2, [r3, #0]
   13ec0:	eors	r1, r2
   13ec2:	beq.w	14104 <rb_first_postorder@@Base+0xaee>
   13ec6:	blx	8510 <__stack_chk_fail@plt>
   13eca:	ldr	r3, [sp, #104]	; 0x68
   13ecc:	add	r5, sp, #128	; 0x80
   13ece:	adds	r3, #80	; 0x50
   13ed0:	mov	lr, r5
   13ed2:	add	r3, r2
   13ed4:	add.w	r8, r3, #32
   13ed8:	ldr	r0, [r3, #0]
   13eda:	adds	r3, #8
   13edc:	ldr.w	r1, [r3, #-4]
   13ee0:	cmp	r3, r8
   13ee2:	mov	ip, lr
   13ee4:	stmia.w	ip!, {r0, r1}
   13ee8:	mov	lr, ip
   13eea:	bne.n	13ed8 <rb_first_postorder@@Base+0x8c2>
   13eec:	ldr.w	r8, [r5, #24]
   13ef0:	add.w	r9, r2, #32
   13ef4:	cmp.w	r8, #144	; 0x90
   13ef8:	bne.n	13fb2 <rb_first_postorder@@Base+0x99c>
   13efa:	ldr	r3, [sp, #124]	; 0x7c
   13efc:	movs	r0, #0
   13efe:	movs	r1, #0
   13f00:	movs	r2, #0
   13f02:	add	r3, r9
   13f04:	strd	r2, r2, [sp, #64]	; 0x40
   13f08:	strd	r2, r2, [sp, #56]	; 0x38
   13f0c:	strd	r0, r1, [sp, #48]	; 0x30
   13f10:	strd	r0, r1, [sp, #40]	; 0x28
   13f14:	ldrh	r2, [r3, #16]
   13f16:	str	r2, [sp, #36]	; 0x24
   13f18:	add.w	r2, r3, #18
   13f1c:	str	r2, [sp, #32]
   13f1e:	ldr	r2, [r3, #0]
   13f20:	ldr	r3, [r3, #4]
   13f22:	strd	r0, r1, [sp, #16]
   13f26:	strd	r0, r1, [sp, #8]
   13f2a:	strd	r2, r3, [sp, #24]
   13f2e:	ldrd	r2, r3, [r5, #16]
   13f32:	strd	r2, r3, [sp]
   13f36:	ldrd	r2, r3, [r5, #8]
   13f3a:	mov	r0, r6
   13f3c:	bl	13938 <rb_first_postorder@@Base+0x322>
   13f40:	ldrd	r0, r1, [r5, #8]
   13f44:	adds	r7, #1
   13f46:	ldr	r2, [r5, #28]
   13f48:	str.w	r8, [r4, #56]	; 0x38
   13f4c:	strd	r0, r1, [r4, #8]
   13f50:	add	r2, r9
   13f52:	ldrd	r0, r1, [r5, #16]
   13f56:	strd	r0, r1, [r4, #24]
   13f5a:	ldr	r3, [r4, #64]	; 0x40
   13f5c:	cmp	r7, r3
   13f5e:	bcc.n	13eca <rb_first_postorder@@Base+0x8b4>
   13f60:	ldrd	r3, r2, [r4, #24]
   13f64:	adds	r3, #1
   13f66:	str	r3, [sp, #72]	; 0x48
   13f68:	adc.w	r3, r2, #0
   13f6c:	str	r3, [sp, #76]	; 0x4c
   13f6e:	ldrd	r2, r3, [sp, #72]	; 0x48
   13f72:	strd	r2, r3, [r4, #24]
   13f76:	orrs	r3, r2
   13f78:	bne.n	13e8e <rb_first_postorder@@Base+0x878>
   13f7a:	ldr	r3, [r4, #56]	; 0x38
   13f7c:	adds	r3, #1
   13f7e:	str	r3, [r4, #56]	; 0x38
   13f80:	cmp	r3, #144	; 0x90
   13f82:	bls.n	13e8e <rb_first_postorder@@Base+0x878>
   13f84:	movs	r3, #132	; 0x84
   13f86:	str	r3, [r4, #56]	; 0x38
   13f88:	ldrd	r3, r2, [r4, #8]
   13f8c:	adds	r3, #1
   13f8e:	str	r3, [sp, #80]	; 0x50
   13f90:	adc.w	r3, r2, #0
   13f94:	str	r3, [sp, #84]	; 0x54
   13f96:	ldrd	r2, r3, [sp, #80]	; 0x50
   13f9a:	ldrd	r0, r1, [sp, #80]	; 0x50
   13f9e:	strd	r2, r3, [r4, #8]
   13fa2:	ldrd	r2, r3, [r4, #16]
   13fa6:	cmp	r3, r1
   13fa8:	it	eq
   13faa:	cmpeq	r2, r0
   13fac:	bcs.w	13e8e <rb_first_postorder@@Base+0x878>
   13fb0:	b.n	13eac <rb_first_postorder@@Base+0x896>
   13fb2:	cmp.w	r8, #132	; 0x84
   13fb6:	bne.n	13f40 <rb_first_postorder@@Base+0x92a>
   13fb8:	ldrd	r2, r3, [r5, #8]
   13fbc:	cmp	r3, #0
   13fbe:	it	eq
   13fc0:	cmpeq.w	r2, #256	; 0x100
   13fc4:	strd	r2, r3, [sp, #88]	; 0x58
   13fc8:	bcs.n	13fd2 <rb_first_postorder@@Base+0x9bc>
   13fca:	cmp	r3, #0
   13fcc:	it	eq
   13fce:	cmpeq	r2, #5
   13fd0:	bne.n	13f40 <rb_first_postorder@@Base+0x92a>
   13fd2:	add	r3, sp, #264	; 0x108
   13fd4:	add	r3, r9
   13fd6:	ldr.w	r2, [r3, #160]	; 0xa0
   13fda:	str	r2, [sp, #116]	; 0x74
   13fdc:	ldr.w	r2, [r3, #164]	; 0xa4
   13fe0:	str	r2, [sp, #120]	; 0x78
   13fe2:	ldr.w	r2, [r3, #208]	; 0xd0
   13fe6:	str	r2, [sp, #108]	; 0x6c
   13fe8:	ldr.w	r2, [r3, #212]	; 0xd4
   13fec:	str	r2, [sp, #112]	; 0x70
   13fee:	ldr	r2, [r5, #28]
   13ff0:	cmp	r2, #239	; 0xef
   13ff2:	bls.n	140c2 <rb_first_postorder@@Base+0xaac>
   13ff4:	ldr.w	r2, [r3, #303]	; 0x12f
   13ff8:	add.w	sl, sp, #4256	; 0x10a0
   13ffc:	ldr.w	ip, [r3, #339]	; 0x153
   14000:	add.w	sl, sl, #4
   14004:	addw	fp, r3, #263	; 0x107
   14008:	str	r2, [sp, #96]	; 0x60
   1400a:	ldr.w	r2, [r3, #307]	; 0x133
   1400e:	str	r2, [sp, #100]	; 0x64
   14010:	add.w	r2, r3, #247	; 0xf7
   14014:	ldr	r0, [r2, #0]
   14016:	adds	r2, #8
   14018:	ldr.w	r1, [r2, #-4]
   1401c:	cmp	r2, fp
   1401e:	mov	lr, sl
   14020:	stmia.w	lr!, {r0, r1}
   14024:	mov	sl, lr
   14026:	bne.n	14014 <rb_first_postorder@@Base+0x9fe>
   14028:	add.w	sl, sp, #4256	; 0x10a0
   1402c:	addw	r2, r3, #263	; 0x107
   14030:	add.w	sl, sl, #20
   14034:	addw	fp, r3, #279	; 0x117
   14038:	ldr	r0, [r2, #0]
   1403a:	adds	r2, #8
   1403c:	ldr.w	r1, [r2, #-4]
   14040:	cmp	r2, fp
   14042:	mov	lr, sl
   14044:	stmia.w	lr!, {r0, r1}
   14048:	mov	sl, lr
   1404a:	bne.n	14038 <rb_first_postorder@@Base+0xa22>
   1404c:	add.w	lr, sp, #4288	; 0x10c0
   14050:	addw	r2, r3, #279	; 0x117
   14054:	add.w	lr, lr, #4
   14058:	addw	r3, r3, #295	; 0x127
   1405c:	ldr	r0, [r2, #0]
   1405e:	adds	r2, #8
   14060:	ldr.w	r1, [r2, #-4]
   14064:	cmp	r2, r3
   14066:	mov	sl, lr
   14068:	stmia.w	sl!, {r0, r1}
   1406c:	mov	lr, sl
   1406e:	bne.n	1405c <rb_first_postorder@@Base+0xa46>
   14070:	add.w	r3, sp, #4288	; 0x10c0
   14074:	movs	r0, #0
   14076:	adds	r3, #4
   14078:	str	r3, [sp, #68]	; 0x44
   1407a:	add.w	r3, sp, #4256	; 0x10a0
   1407e:	movs	r1, #0
   14080:	adds	r3, #20
   14082:	str	r3, [sp, #64]	; 0x40
   14084:	add.w	r3, sp, #4256	; 0x10a0
   14088:	strd	r0, r1, [sp, #24]
   1408c:	adds	r3, #4
   1408e:	strd	ip, r3, [sp, #56]	; 0x38
   14092:	ldr	r3, [sp, #116]	; 0x74
   14094:	str	r3, [sp, #48]	; 0x30
   14096:	ldr	r3, [sp, #120]	; 0x78
   14098:	str	r3, [sp, #52]	; 0x34
   1409a:	ldr	r3, [sp, #96]	; 0x60
   1409c:	str	r3, [sp, #40]	; 0x28
   1409e:	ldr	r3, [sp, #100]	; 0x64
   140a0:	str	r3, [sp, #44]	; 0x2c
   140a2:	movs	r3, #0
   140a4:	strd	r3, r3, [sp, #32]
   140a8:	ldr	r3, [sp, #108]	; 0x6c
   140aa:	str	r3, [sp, #16]
   140ac:	ldr	r3, [sp, #112]	; 0x70
   140ae:	str	r3, [sp, #20]
   140b0:	ldrd	r2, r3, [r5, #16]
   140b4:	strd	r0, r1, [sp]
   140b8:	strd	r2, r3, [sp, #8]
   140bc:	ldrd	r2, r3, [sp, #88]	; 0x58
   140c0:	b.n	13f3a <rb_first_postorder@@Base+0x924>
   140c2:	add.w	r0, sp, #4256	; 0x10a0
   140c6:	movs	r2, #16
   140c8:	movs	r1, #0
   140ca:	adds	r0, #4
   140cc:	blx	87c4 <memset@plt+0x4>
   140d0:	add.w	r0, sp, #4256	; 0x10a0
   140d4:	movs	r2, #16
   140d6:	movs	r1, #0
   140d8:	adds	r0, #20
   140da:	blx	87c4 <memset@plt+0x4>
   140de:	add.w	r0, sp, #4288	; 0x10c0
   140e2:	adds	r0, #4
   140e4:	movs	r2, #16
   140e6:	movs	r1, #0
   140e8:	blx	87c4 <memset@plt+0x4>
   140ec:	mov.w	ip, #0
   140f0:	strd	ip, ip, [sp, #96]	; 0x60
   140f4:	b.n	14070 <rb_first_postorder@@Base+0xa5a>
   140f6:	movs	r7, #0
   140f8:	add	r3, sp, #184	; 0xb8
   140fa:	mov	r2, r7
   140fc:	str	r3, [sp, #104]	; 0x68
   140fe:	add	r3, sp, #264	; 0x108
   14100:	str	r3, [sp, #124]	; 0x7c
   14102:	b.n	13f5a <rb_first_postorder@@Base+0x944>
   14104:	add.w	sp, sp, #4288	; 0x10c0
   14108:	add	sp, #28
   1410a:	vpop	{d8}
   1410e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14112:	nop
   14114:	str	r4, [sp, #68]	; 0x44
   14116:	beq.n	1411a <rb_first_postorder@@Base+0xb04>
   14118:	vhadd.u16	d16, d8, d4
   1411c:	lsls	r0, r4, #8
   1411e:	movs	r0, r0
   14120:	cdp2	0, 12, cr0, cr12, cr4, {0}
   14124:	push	{r4, r5, r6, lr}
   14126:	mov	r5, r0
   14128:	mov	r6, r1
   1412a:	bl	13e1e <rb_first_postorder@@Base+0x808>
   1412e:	mov	r4, r0
   14130:	cbnz	r0, 1413c <rb_first_postorder@@Base+0xb26>
   14132:	mov	r1, r6
   14134:	mov	r0, r5
   14136:	ldmia.w	sp!, {r4, r5, r6, lr}
   1413a:	b.n	13df8 <rb_first_postorder@@Base+0x7e2>
   1413c:	ldr	r0, [pc, #8]	; (14148 <rb_first_postorder@@Base+0xb32>)
   1413e:	add	r0, pc
   14140:	bl	16b70 <__btrfs_error@@Base>
   14144:	mov	r0, r4
   14146:	pop	{r4, r5, r6, pc}
   14148:	ldr	r3, [r0, #72]	; 0x48
   1414a:	movs	r2, r0
   1414c:	push	{r0, r1, r2, r3, r4, lr}
   1414e:	ldr	r3, [pc, #40]	; (14178 <rb_first_postorder@@Base+0xb62>)
   14150:	ldr	r4, [pc, #40]	; (1417c <rb_first_postorder@@Base+0xb66>)
   14152:	add	r3, pc
   14154:	ldr	r4, [r3, r4]
   14156:	movs	r3, #0
   14158:	strd	r2, r1, [sp]
   1415c:	movs	r1, #1
   1415e:	strd	r0, r3, [sp, #8]
   14162:	ldr	r2, [pc, #28]	; (14180 <rb_first_postorder@@Base+0xb6a>)
   14164:	ldr	r3, [pc, #28]	; (14184 <rb_first_postorder@@Base+0xb6e>)
   14166:	add	r2, pc
   14168:	ldr	r0, [r4, #0]
   1416a:	add	r3, pc
   1416c:	blx	8860 <__fprintf_chk@plt+0x4>
   14170:	bl	1374c <rb_first_postorder@@Base+0x136>
   14174:	blx	8980 <abort@plt>
   14178:	ldc2	0, cr0, [r2], #-16
   1417c:	lsls	r0, r6, #8
   1417e:	movs	r0, r0
   14180:	ldr	r6, [pc, #420]	; (14328 <btrfs_list_setup_print_column@@Base+0x28>)
   14182:	movs	r2, r0
   14184:	ldr	r4, [r6, #68]	; 0x44
   14186:	movs	r2, r0
   14188:	push	{r4, lr}
   1418a:	subs	r1, #1
   1418c:	ldr	r4, [pc, #288]	; (142b0 <rb_first_postorder@@Base+0xc9a>)
   1418e:	sub	sp, #328	; 0x148
   14190:	ldr	r2, [pc, #288]	; (142b4 <rb_first_postorder@@Base+0xc9e>)
   14192:	add	r4, pc
   14194:	ldr	r3, [pc, #288]	; (142b8 <rb_first_postorder@@Base+0xca2>)
   14196:	ldr	r2, [r4, r2]
   14198:	add	r3, pc
   1419a:	ldr	r2, [r2, #0]
   1419c:	str	r2, [sp, #324]	; 0x144
   1419e:	mov.w	r2, #0
   141a2:	cmp	r1, #8
   141a4:	bhi.n	141b4 <rb_first_postorder@@Base+0xb9e>
   141a6:	tbb	[pc, r1]
   141aa:	subs	r6, r2, r4
   141ac:	movs	r5, #32
   141ae:	ldrb	r2, [r5, r0]
   141b0:	ldr	r0, [pc, #380]	; (14330 <btrfs_list_setup_print_column@@Base+0x30>)
   141b2:	lsls	r2, r4, #1
   141b4:	ldr	r1, [pc, #260]	; (142bc <rb_first_postorder@@Base+0xca6>)
   141b6:	ldrd	r2, r3, [r0, #24]
   141ba:	add	r1, pc
   141bc:	movs	r0, #1
   141be:	blx	8838 <__printf_chk@plt+0x4>
   141c2:	ldr	r2, [pc, #252]	; (142c0 <rb_first_postorder@@Base+0xcaa>)
   141c4:	ldr	r3, [pc, #236]	; (142b4 <rb_first_postorder@@Base+0xc9e>)
   141c6:	add	r2, pc
   141c8:	ldr	r3, [r2, r3]
   141ca:	ldr	r2, [r3, #0]
   141cc:	ldr	r3, [sp, #324]	; 0x144
   141ce:	eors	r2, r3
   141d0:	beq.n	142aa <rb_first_postorder@@Base+0xc94>
   141d2:	blx	8510 <__stack_chk_fail@plt>
   141d6:	ldr	r1, [pc, #236]	; (142c4 <rb_first_postorder@@Base+0xcae>)
   141d8:	ldrd	r2, r3, [r0, #72]	; 0x48
   141dc:	add	r1, pc
   141de:	b.n	141bc <rb_first_postorder@@Base+0xba6>
   141e0:	ldr	r1, [pc, #228]	; (142c8 <rb_first_postorder@@Base+0xcb2>)
   141e2:	ldrd	r2, r3, [r0, #80]	; 0x50
   141e6:	add	r1, pc
   141e8:	b.n	141bc <rb_first_postorder@@Base+0xba6>
   141ea:	ldr	r1, [pc, #224]	; (142cc <rb_first_postorder@@Base+0xcb6>)
   141ec:	ldrd	r2, r3, [r0, #48]	; 0x30
   141f0:	add	r1, pc
   141f2:	b.n	141bc <rb_first_postorder@@Base+0xba6>
   141f4:	ldr	r1, [pc, #216]	; (142d0 <rb_first_postorder@@Base+0xcba>)
   141f6:	ldrd	r2, r3, [r0, #64]	; 0x40
   141fa:	add	r1, pc
   141fc:	b.n	141bc <rb_first_postorder@@Base+0xba6>
   141fe:	ldr	r3, [r0, #88]	; 0x58
   14200:	add	r4, sp, #68	; 0x44
   14202:	cbz	r3, 1422e <rb_first_postorder@@Base+0xc18>
   14204:	add	r3, sp, #24
   14206:	adds	r0, #88	; 0x58
   14208:	str	r3, [sp, #20]
   1420a:	mov	r1, r3
   1420c:	blx	8538 <localtime_r@plt>
   14210:	ldr	r2, [pc, #192]	; (142d4 <rb_first_postorder@@Base+0xcbe>)
   14212:	ldr	r3, [sp, #20]
   14214:	mov.w	r1, #256	; 0x100
   14218:	add	r2, pc
   1421a:	mov	r0, r4
   1421c:	blx	86ac <strftime@plt>
   14220:	ldr	r1, [pc, #180]	; (142d8 <rb_first_postorder@@Base+0xcc2>)
   14222:	mov	r2, r4
   14224:	add	r1, pc
   14226:	movs	r0, #1
   14228:	blx	8838 <__printf_chk@plt+0x4>
   1422c:	b.n	141c2 <rb_first_postorder@@Base+0xbac>
   1422e:	ldr	r1, [pc, #172]	; (142dc <rb_first_postorder@@Base+0xcc6>)
   14230:	mov	r0, r4
   14232:	add	r1, pc
   14234:	blx	85f8 <strcpy@plt>
   14238:	b.n	14220 <rb_first_postorder@@Base+0xc0a>
   1423a:	add.w	r4, r0, #92	; 0x5c
   1423e:	mov	r0, r4
   14240:	blx	87b4 <uuid_is_null@plt>
   14244:	cbz	r0, 14258 <rb_first_postorder@@Base+0xc42>
   14246:	ldr	r1, [pc, #152]	; (142e0 <rb_first_postorder@@Base+0xcca>)
   14248:	add	r0, sp, #68	; 0x44
   1424a:	add	r1, pc
   1424c:	blx	85f8 <strcpy@plt>
   14250:	ldr	r1, [pc, #144]	; (142e4 <rb_first_postorder@@Base+0xcce>)
   14252:	add	r2, sp, #68	; 0x44
   14254:	add	r1, pc
   14256:	b.n	14226 <rb_first_postorder@@Base+0xc10>
   14258:	add	r1, sp, #68	; 0x44
   1425a:	mov	r0, r4
   1425c:	blx	83d8 <uuid_unparse@plt>
   14260:	b.n	14250 <rb_first_postorder@@Base+0xc3a>
   14262:	add.w	r4, r0, #108	; 0x6c
   14266:	b.n	1423e <rb_first_postorder@@Base+0xc28>
   14268:	add.w	r4, r0, #124	; 0x7c
   1426c:	b.n	1423e <rb_first_postorder@@Base+0xc28>
   1426e:	ldr.w	r2, [r0, #148]	; 0x94
   14272:	cbnz	r2, 142a4 <rb_first_postorder@@Base+0xc8e>
   14274:	ldr	r2, [pc, #112]	; (142e8 <rb_first_postorder@@Base+0xcd2>)
   14276:	movs	r1, #1
   14278:	ldr	r0, [r3, r2]
   1427a:	ldr	r3, [pc, #112]	; (142ec <rb_first_postorder@@Base+0xcd6>)
   1427c:	ldr	r2, [pc, #112]	; (142f0 <rb_first_postorder@@Base+0xcda>)
   1427e:	add	r3, pc
   14280:	str	r3, [sp, #8]
   14282:	ldr	r3, [pc, #112]	; (142f4 <rb_first_postorder@@Base+0xcde>)
   14284:	add	r2, pc
   14286:	str	r1, [sp, #12]
   14288:	add	r3, pc
   1428a:	str	r3, [sp, #4]
   1428c:	movw	r3, #1380	; 0x564
   14290:	str	r3, [sp, #0]
   14292:	ldr	r3, [pc, #100]	; (142f8 <rb_first_postorder@@Base+0xce2>)
   14294:	ldr	r0, [r0, #0]
   14296:	add	r3, pc
   14298:	blx	8860 <__fprintf_chk@plt+0x4>
   1429c:	bl	1374c <rb_first_postorder@@Base+0x136>
   142a0:	blx	8980 <abort@plt>
   142a4:	ldr	r1, [pc, #84]	; (142fc <rb_first_postorder@@Base+0xce6>)
   142a6:	add	r1, pc
   142a8:	b.n	14226 <rb_first_postorder@@Base+0xc10>
   142aa:	add	sp, #328	; 0x148
   142ac:	pop	{r4, pc}
   142ae:	nop
   142b0:			; <UNDEFINED> instruction: 0xfbf20004
   142b4:	lsls	r0, r4, #8
   142b6:	movs	r0, r0
   142b8:	umlal	r0, r0, ip, r4
   142bc:	add	r7, sp, #972	; 0x3cc
   142be:	movs	r2, r0
   142c0:			; <UNDEFINED> instruction: 0xfbbe0004
   142c4:	add	r7, sp, #836	; 0x344
   142c6:	movs	r2, r0
   142c8:	add	r7, sp, #796	; 0x31c
   142ca:	movs	r2, r0
   142cc:	add	r7, sp, #756	; 0x2f4
   142ce:	movs	r2, r0
   142d0:	add	r7, sp, #716	; 0x2cc
   142d2:	movs	r2, r0
   142d4:	ldr	r3, [r2, #60]	; 0x3c
   142d6:	movs	r2, r0
   142d8:	sxtb	r0, r6
   142da:	movs	r2, r0
   142dc:	ldr	r7, [pc, #956]	; (1469c <btrfs_list_find_updated_files@@Base+0x100>)
   142de:	movs	r2, r0
   142e0:	ldr	r7, [pc, #860]	; (14640 <btrfs_list_find_updated_files@@Base+0xa4>)
   142e2:	movs	r2, r0
   142e4:	ldr	r3, [r4, #56]	; 0x38
   142e6:	movs	r2, r0
   142e8:	lsls	r0, r6, #8
   142ea:	movs	r0, r0
   142ec:	ldr	r7, [r7, #52]	; 0x34
   142ee:	movs	r2, r0
   142f0:	ldr	r4, [pc, #120]	; (1436c <btrfs_list_alloc_comparer_set@@Base+0x1c>)
   142f2:	movs	r2, r0
   142f4:	ldr	r7, [r1, #88]	; 0x58
   142f6:	movs	r2, r0
   142f8:	ldr	r0, [r1, #52]	; 0x34
   142fa:	movs	r2, r0
   142fc:	cbz	r6, 1433a <btrfs_list_setup_print_column@@Base+0x3a>
   142fe:	movs	r2, r0

00014300 <btrfs_list_setup_print_column@@Base>:
   14300:	cmp	r0, #10
   14302:	push	{r3, lr}
   14304:	bls.n	14316 <btrfs_list_setup_print_column@@Base+0x16>
   14306:	ldr	r1, [pc, #56]	; (14340 <btrfs_list_setup_print_column@@Base+0x40>)
   14308:	movs	r2, #126	; 0x7e
   1430a:	ldr	r0, [pc, #56]	; (14344 <btrfs_list_setup_print_column@@Base+0x44>)
   1430c:	add	r1, pc
   1430e:	adds	r1, #23
   14310:	add	r0, pc
   14312:	bl	1414c <rb_first_postorder@@Base+0xb36>
   14316:	beq.n	14328 <btrfs_list_setup_print_column@@Base+0x28>
   14318:	ldr	r3, [pc, #44]	; (14348 <btrfs_list_setup_print_column@@Base+0x48>)
   1431a:	movs	r2, #12
   1431c:	add	r3, pc
   1431e:	mla	r0, r2, r0, r3
   14322:	movs	r3, #1
   14324:	str	r3, [r0, #8]
   14326:	pop	{r3, pc}
   14328:	ldr	r2, [pc, #32]	; (1434c <btrfs_list_setup_print_column@@Base+0x4c>)
   1432a:	movs	r3, #0
   1432c:	movs	r1, #1
   1432e:	add	r2, pc
   14330:	adds	r3, #1
   14332:	str	r1, [r2, #8]
   14334:	cmp	r3, #10
   14336:	add.w	r2, r2, #12
   1433a:	bne.n	14330 <btrfs_list_setup_print_column@@Base+0x30>
   1433c:	b.n	14326 <btrfs_list_setup_print_column@@Base+0x26>
   1433e:	nop
   14340:	ldr	r3, [r1, #80]	; 0x50
   14342:	movs	r2, r0
   14344:	ldr	r6, [r7, #44]	; 0x2c
   14346:	movs	r2, r0
   14348:	lsrs	r0, r4, #24
   1434a:	movs	r5, r0
   1434c:	lsrs	r6, r1, #24
   1434e:	movs	r5, r0

00014350 <btrfs_list_alloc_comparer_set@@Base>:
   14350:	push	{r4, lr}
   14352:	movs	r1, #72	; 0x48
   14354:	ldr	r4, [pc, #36]	; (1437c <btrfs_list_alloc_comparer_set@@Base+0x2c>)
   14356:	movs	r0, #1
   14358:	add	r4, pc
   1435a:	blx	839c <calloc@plt+0x4>
   1435e:	cbnz	r0, 14374 <btrfs_list_alloc_comparer_set@@Base+0x24>
   14360:	ldr	r3, [pc, #28]	; (14380 <btrfs_list_alloc_comparer_set@@Base+0x30>)
   14362:	ldr	r0, [pc, #32]	; (14384 <btrfs_list_alloc_comparer_set@@Base+0x34>)
   14364:	ldr	r3, [r4, r3]
   14366:	add	r0, pc
   14368:	ldr	r1, [r3, #0]
   1436a:	blx	8968 <fputs@plt+0x4>
   1436e:	movs	r0, #1
   14370:	blx	873c <exit@plt>
   14374:	movs	r2, #8
   14376:	str	r2, [r0, #0]
   14378:	pop	{r4, pc}
   1437a:	nop
   1437c:			; <UNDEFINED> instruction: 0xfa2c0004
   14380:	lsls	r0, r6, #8
   14382:	movs	r0, r0
   14384:	ldr	r7, [r0, #28]
   14386:	movs	r2, r0

00014388 <btrfs_list_get_default_subvolume@@Base>:
   14388:	push	{r4, r5, r6, r7, lr}
   1438a:	mov	r5, r1
   1438c:	ldr	r1, [pc, #184]	; (14448 <btrfs_list_get_default_subvolume@@Base+0xc0>)
   1438e:	sub.w	sp, sp, #4096	; 0x1000
   14392:	ldr	r2, [pc, #184]	; (1444c <btrfs_list_get_default_subvolume@@Base+0xc4>)
   14394:	sub	sp, #12
   14396:	add	r1, pc
   14398:	add.w	r3, sp, #4096	; 0x1000
   1439c:	add	r7, sp, #8
   1439e:	adds	r3, #4
   143a0:	ldr	r2, [r1, r2]
   143a2:	mov	r4, sp
   143a4:	mov	r6, r0
   143a6:	mov	r0, r4
   143a8:	ldr	r2, [r2, #0]
   143aa:	str	r2, [r3, #0]
   143ac:	mov.w	r2, #0
   143b0:	movs	r1, #0
   143b2:	mov.w	r2, #4096	; 0x1000
   143b6:	blx	87c4 <memset@plt+0x4>
   143ba:	movs	r2, #1
   143bc:	movs	r3, #0
   143be:	ldr	r1, [pc, #132]	; (14444 <btrfs_list_get_default_subvolume@@Base+0xbc>)
   143c0:	strd	r2, r3, [r7, #-8]
   143c4:	mov	r0, r6
   143c6:	movs	r2, #6
   143c8:	movs	r3, #1
   143ca:	str	r3, [r7, #56]	; 0x38
   143cc:	movs	r3, #0
   143ce:	strd	r2, r3, [r7, #8]
   143d2:	strd	r2, r3, [r4, #8]
   143d6:	mov.w	r2, #4294967295	; 0xffffffff
   143da:	movs	r3, #84	; 0x54
   143dc:	strd	r3, r3, [r7, #48]	; 0x30
   143e0:	mov.w	r3, #4294967295	; 0xffffffff
   143e4:	strd	r2, r3, [r7, #24]
   143e8:	strd	r2, r3, [r7, #40]	; 0x28
   143ec:	mov	r2, r4
   143ee:	blx	85bc <ioctl@plt>
   143f2:	cmp	r0, #0
   143f4:	blt.n	1441c <btrfs_list_get_default_subvolume@@Base+0x94>
   143f6:	ldr	r3, [r7, #56]	; 0x38
   143f8:	cbz	r3, 14436 <btrfs_list_get_default_subvolume@@Base+0xae>
   143fa:	ldr	r3, [r7, #120]	; 0x78
   143fc:	cmp	r3, #84	; 0x54
   143fe:	bne.n	14436 <btrfs_list_get_default_subvolume@@Base+0xae>
   14400:	ldr	r0, [pc, #76]	; (14450 <btrfs_list_get_default_subvolume@@Base+0xc8>)
   14402:	add.w	r1, sp, #166	; 0xa6
   14406:	ldrh.w	r2, [r7, #155]	; 0x9b
   1440a:	add	r0, pc
   1440c:	blx	8974 <strncmp@plt>
   14410:	cbnz	r0, 14436 <btrfs_list_get_default_subvolume@@Base+0xae>
   14412:	ldrd	r2, r3, [r7, #128]	; 0x80
   14416:	movs	r0, #0
   14418:	strd	r2, r3, [r5]
   1441c:	ldr	r1, [pc, #52]	; (14454 <btrfs_list_get_default_subvolume@@Base+0xcc>)
   1441e:	add.w	r3, sp, #4096	; 0x1000
   14422:	ldr	r2, [pc, #40]	; (1444c <btrfs_list_get_default_subvolume@@Base+0xc4>)
   14424:	adds	r3, #4
   14426:	add	r1, pc
   14428:	ldr	r2, [r1, r2]
   1442a:	ldr	r1, [r2, #0]
   1442c:	ldr	r2, [r3, #0]
   1442e:	eors	r1, r2
   14430:	beq.n	1443c <btrfs_list_get_default_subvolume@@Base+0xb4>
   14432:	blx	8510 <__stack_chk_fail@plt>
   14436:	movs	r2, #0
   14438:	movs	r3, #0
   1443a:	b.n	14416 <btrfs_list_get_default_subvolume@@Base+0x8e>
   1443c:	add.w	sp, sp, #4096	; 0x1000
   14440:	add	sp, #12
   14442:	pop	{r4, r5, r6, r7, pc}
   14444:	str	r4, [sp, #68]	; 0x44
   14446:	beq.n	1444a <btrfs_list_get_default_subvolume@@Base+0xc2>
   14448:	vld1.8	{d16[0]}, [lr], r4
   1444c:	lsls	r0, r4, #8
   1444e:	movs	r0, r0
   14450:	ldr	r4, [r5, #32]
   14452:	movs	r2, r0
   14454:	ldr??.w	r0, [lr, r4]

00014458 <btrfs_list_alloc_filter_set@@Base>:
   14458:	push	{r4, lr}
   1445a:	mov.w	r1, #432	; 0x1b0
   1445e:	ldr	r4, [pc, #36]	; (14484 <btrfs_list_alloc_filter_set@@Base+0x2c>)
   14460:	movs	r0, #1
   14462:	add	r4, pc
   14464:	blx	839c <calloc@plt+0x4>
   14468:	cbnz	r0, 1447e <btrfs_list_alloc_filter_set@@Base+0x26>
   1446a:	ldr	r3, [pc, #28]	; (14488 <btrfs_list_alloc_filter_set@@Base+0x30>)
   1446c:	ldr	r0, [pc, #28]	; (1448c <btrfs_list_alloc_filter_set@@Base+0x34>)
   1446e:	ldr	r3, [r4, r3]
   14470:	add	r0, pc
   14472:	ldr	r1, [r3, #0]
   14474:	blx	8968 <fputs@plt+0x4>
   14478:	movs	r0, #1
   1447a:	blx	873c <exit@plt>
   1447e:	movs	r2, #26
   14480:	str	r2, [r0, #0]
   14482:	pop	{r4, pc}
   14484:	vld4.8	{d0-d3}, [r2], r4
   14488:	lsls	r0, r6, #8
   1448a:	movs	r0, r0
   1448c:	ldr	r5, [r7, #8]
   1448e:	movs	r2, r0

00014490 <btrfs_list_setup_filter@@Base>:
   14490:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   14494:	mov	r9, r0
   14496:	ldr	r4, [r0, #0]
   14498:	mov	r6, r1
   1449a:	ldr.w	sl, [pc, #208]	; 1456c <btrfs_list_setup_filter@@Base+0xdc>
   1449e:	mov	r8, r2
   144a0:	mov	r7, r3
   144a2:	add	sl, pc
   144a4:	cbnz	r4, 144b8 <btrfs_list_setup_filter@@Base+0x28>
   144a6:	ldr	r1, [pc, #200]	; (14570 <btrfs_list_setup_filter@@Base+0xe0>)
   144a8:	movw	r2, #1210	; 0x4ba
   144ac:	ldr	r0, [pc, #196]	; (14574 <btrfs_list_setup_filter@@Base+0xe4>)
   144ae:	add	r1, pc
   144b0:	adds	r1, #53	; 0x35
   144b2:	add	r0, pc
   144b4:	bl	1414c <rb_first_postorder@@Base+0xb36>
   144b8:	cmp	r1, #12
   144ba:	bls.n	144cc <btrfs_list_setup_filter@@Base+0x3c>
   144bc:	ldr	r1, [pc, #184]	; (14578 <btrfs_list_setup_filter@@Base+0xe8>)
   144be:	movw	r2, #1211	; 0x4bb
   144c2:	ldr	r0, [pc, #184]	; (1457c <btrfs_list_setup_filter@@Base+0xec>)
   144c4:	add	r1, pc
   144c6:	adds	r1, #53	; 0x35
   144c8:	add	r0, pc
   144ca:	b.n	144b4 <btrfs_list_setup_filter@@Base+0x24>
   144cc:	ldrd	r3, r1, [r4]
   144d0:	cmp	r1, r3
   144d2:	ble.n	144e4 <btrfs_list_setup_filter@@Base+0x54>
   144d4:	ldr	r1, [pc, #168]	; (14580 <btrfs_list_setup_filter@@Base+0xf0>)
   144d6:	movw	r2, #1212	; 0x4bc
   144da:	ldr	r0, [pc, #168]	; (14584 <btrfs_list_setup_filter@@Base+0xf4>)
   144dc:	add	r1, pc
   144de:	adds	r1, #53	; 0x35
   144e0:	add	r0, pc
   144e2:	b.n	144b4 <btrfs_list_setup_filter@@Base+0x24>
   144e4:	bne.n	1452e <btrfs_list_setup_filter@@Base+0x9e>
   144e6:	adds	r1, #27
   144e8:	mov	r0, r4
   144ea:	lsls	r1, r1, #4
   144ec:	blx	852c <realloc@plt+0x4>
   144f0:	mov	r5, r0
   144f2:	cbnz	r0, 14510 <btrfs_list_setup_filter@@Base+0x80>
   144f4:	ldr	r3, [pc, #144]	; (14588 <btrfs_list_setup_filter@@Base+0xf8>)
   144f6:	ldr	r0, [pc, #148]	; (1458c <btrfs_list_setup_filter@@Base+0xfc>)
   144f8:	ldr.w	r3, [sl, r3]
   144fc:	add	r0, pc
   144fe:	ldr	r1, [r3, #0]
   14500:	blx	8968 <fputs@plt+0x4>
   14504:	mov	r0, r4
   14506:	blx	8434 <free@plt+0x4>
   1450a:	movs	r0, #1
   1450c:	blx	873c <exit@plt>
   14510:	ldr	r0, [r0, #0]
   14512:	mov.w	r2, #416	; 0x1a0
   14516:	movs	r1, #0
   14518:	mov	r4, r5
   1451a:	adds	r0, #1
   1451c:	add.w	r0, r5, r0, lsl #4
   14520:	blx	87c4 <memset@plt+0x4>
   14524:	ldr	r3, [r5, #0]
   14526:	adds	r3, #26
   14528:	str	r3, [r5, #0]
   1452a:	str.w	r5, [r9]
   1452e:	ldr	r0, [r4, #4]
   14530:	add.w	r3, r4, r0, lsl #4
   14534:	lsls	r1, r0, #4
   14536:	ldr	r2, [r3, #16]
   14538:	cbz	r2, 1454a <btrfs_list_setup_filter@@Base+0xba>
   1453a:	ldr	r1, [pc, #84]	; (14590 <btrfs_list_setup_filter@@Base+0x100>)
   1453c:	movw	r2, #1234	; 0x4d2
   14540:	ldr	r0, [pc, #80]	; (14594 <btrfs_list_setup_filter@@Base+0x104>)
   14542:	add	r1, pc
   14544:	adds	r1, #53	; 0x35
   14546:	add	r0, pc
   14548:	b.n	144b4 <btrfs_list_setup_filter@@Base+0x24>
   1454a:	cmp	r6, #12
   1454c:	add	r1, r4
   1454e:	add.w	r0, r0, #1
   14552:	itt	eq
   14554:	moveq	r2, #1
   14556:	streq	r2, [r4, #8]
   14558:	ldr	r2, [pc, #60]	; (14598 <btrfs_list_setup_filter@@Base+0x108>)
   1455a:	add	r2, pc
   1455c:	ldr.w	r2, [r2, r6, lsl #2]
   14560:	str	r2, [r3, #16]
   14562:	strd	r8, r7, [r1, #24]
   14566:	str	r0, [r4, #4]
   14568:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1456c:	str??.w	r0, [r2, #4]
   14570:	ldr	r1, [r5, #52]	; 0x34
   14572:	movs	r2, r0
   14574:	ldr	r4, [pc, #380]	; (146f4 <btrfs_list_find_updated_files@@Base+0x158>)
   14576:	movs	r2, r0
   14578:	ldr	r3, [r2, #52]	; 0x34
   1457a:	movs	r2, r0
   1457c:	ldr	r6, [r6, #20]
   1457e:	movs	r2, r0
   14580:	ldr	r3, [r7, #48]	; 0x30
   14582:	movs	r2, r0
   14584:	ldr	r4, [pc, #780]	; (14894 <btrfs_list_find_updated_files@@Base+0x2f8>)
   14586:	movs	r2, r0
   14588:	lsls	r0, r6, #8
   1458a:	movs	r0, r0
   1458c:	ldr	r1, [r6, #0]
   1458e:	movs	r2, r0
   14590:	ldr	r5, [r2, #44]	; 0x2c
   14592:	movs	r2, r0
   14594:	ldr	r4, [pc, #484]	; (1477c <btrfs_list_find_updated_files@@Base+0x1e0>)
   14596:	movs	r2, r0
   14598:			; <UNDEFINED> instruction: 0xf23e0004

0001459c <btrfs_list_find_updated_files@@Base>:
   1459c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145a0:	mov	r7, r2
   145a2:	vpush	{d8-d9}
   145a6:	mov	r6, r3
   145a8:	ldr	r1, [pc, #904]	; (14934 <btrfs_list_find_updated_files@@Base+0x398>)
   145aa:	mov.w	r9, #4096	; 0x1000
   145ae:	ldr	r2, [pc, #904]	; (14938 <btrfs_list_find_updated_files@@Base+0x39c>)
   145b0:	add	r1, pc
   145b2:	vmov	s16, r0
   145b6:	sub.w	sp, sp, #12480	; 0x30c0
   145ba:	sub	sp, #20
   145bc:	ldr	r2, [r1, r2]
   145be:	add.w	r3, sp, #12480	; 0x30c0
   145c2:	add.w	r8, sp, #200	; 0xc8
   145c6:	ldr	r2, [r2, #0]
   145c8:	str	r2, [r3, #12]
   145ca:	mov.w	r2, #0
   145ce:	adds	r3, #12
   145d0:	add	r3, sp, #144	; 0x90
   145d2:	movs	r2, #53	; 0x35
   145d4:	movs	r1, #0
   145d6:	str	r3, [sp, #40]	; 0x28
   145d8:	mov	r0, r3
   145da:	add	r4, sp, #208	; 0xd0
   145dc:	blx	87c4 <memset@plt+0x4>
   145e0:	mov	r2, r9
   145e2:	movs	r1, #0
   145e4:	mov	r0, r8
   145e6:	blx	87c4 <memset@plt+0x4>
   145ea:	movs	r3, #108	; 0x6c
   145ec:	str.w	r3, [r8, #60]	; 0x3c
   145f0:	add.w	r3, sp, #12544	; 0x3100
   145f4:	adds	r3, #8
   145f6:	add.w	r5, sp, #4288	; 0x10c0
   145fa:	adds	r5, #16
   145fc:	strd	r7, r6, [r4, #-8]
   14600:	sub.w	fp, r5, #8
   14604:	ldrd	r3, r4, [r3]
   14608:	mov	r2, r9
   1460a:	movs	r1, #0
   1460c:	mov	r0, fp
   1460e:	mov.w	r6, #4294967295	; 0xffffffff
   14612:	mov.w	r7, #4294967295	; 0xffffffff
   14616:	strd	r3, r4, [r8, #40]	; 0x28
   1461a:	strd	r6, r7, [r8, #16]
   1461e:	movs	r4, #0
   14620:	strd	r6, r7, [r8, #32]
   14624:	strd	r6, r7, [r8, #48]	; 0x30
   14628:	str.w	r9, [r8, #64]	; 0x40
   1462c:	blx	87c4 <memset@plt+0x4>
   14630:	vmov	r0, s16
   14634:	mov	r2, fp
   14636:	ldr	r1, [pc, #756]	; (1492c <btrfs_list_find_updated_files@@Base+0x390>)
   14638:	mov.w	r3, #256	; 0x100
   1463c:	strd	r3, r4, [fp, #8]
   14640:	blx	85bc <ioctl@plt>
   14644:	movs	r4, #0
   14646:	mov.w	r3, #256	; 0x100
   1464a:	cmp	r0, #0
   1464c:	bge.n	146ce <btrfs_list_find_updated_files@@Base+0x132>
   1464e:	ldr	r0, [pc, #748]	; (1493c <btrfs_list_find_updated_files@@Base+0x3a0>)
   14650:	mov	r2, r3
   14652:	mov	r3, r4
   14654:	add	r0, pc
   14656:	bl	16b70 <__btrfs_error@@Base>
   1465a:	movs	r3, #0
   1465c:	movs	r4, #0
   1465e:	strd	r3, r4, [sp, #56]	; 0x38
   14662:	movs	r3, #0
   14664:	movs	r2, #0
   14666:	strd	r2, r3, [sp, #72]	; 0x48
   1466a:	movs	r4, #0
   1466c:	strd	r2, r3, [sp, #88]	; 0x58
   14670:	mov	r7, r4
   14672:	ldr	r3, [pc, #716]	; (14940 <btrfs_list_find_updated_files@@Base+0x3a4>)
   14674:	add	r3, pc
   14676:	vmov	s18, r3
   1467a:	vmov	r0, s16
   1467e:	mov	r2, r8
   14680:	ldr	r1, [pc, #684]	; (14930 <btrfs_list_find_updated_files@@Base+0x394>)
   14682:	blx	85bc <ioctl@plt>
   14686:	subs	r3, r0, #0
   14688:	vmov	s17, r3
   1468c:	bge.w	147fc <btrfs_list_find_updated_files@@Base+0x260>
   14690:	ldr	r0, [pc, #688]	; (14944 <btrfs_list_find_updated_files@@Base+0x3a8>)
   14692:	add	r0, pc
   14694:	bl	16b70 <__btrfs_error@@Base>
   14698:	mov	r0, r7
   1469a:	blx	8434 <free@plt+0x4>
   1469e:	mov	r0, r4
   146a0:	blx	8434 <free@plt+0x4>
   146a4:	ldr	r1, [pc, #672]	; (14948 <btrfs_list_find_updated_files@@Base+0x3ac>)
   146a6:	ldrd	r2, r3, [sp, #56]	; 0x38
   146aa:	movs	r0, #1
   146ac:	add	r1, pc
   146ae:	blx	8838 <__printf_chk@plt+0x4>
   146b2:	ldr	r1, [pc, #664]	; (1494c <btrfs_list_find_updated_files@@Base+0x3b0>)
   146b4:	ldr	r2, [pc, #640]	; (14938 <btrfs_list_find_updated_files@@Base+0x39c>)
   146b6:	add.w	r3, sp, #12480	; 0x30c0
   146ba:	add	r1, pc
   146bc:	adds	r3, #12
   146be:	ldr	r2, [r1, r2]
   146c0:	ldr	r1, [r2, #0]
   146c2:	ldr	r2, [r3, #0]
   146c4:	eors	r1, r2
   146c6:	beq.w	14ba6 <btrfs_list_find_updated_files@@Base+0x60a>
   146ca:	blx	8510 <__stack_chk_fail@plt>
   146ce:	add.w	sl, sp, #8384	; 0x20c0
   146d2:	mov	r2, r9
   146d4:	add.w	sl, sl, #16
   146d8:	movs	r1, #0
   146da:	sub.w	r4, sl, #8
   146de:	mov	r0, r4
   146e0:	blx	87c4 <memset@plt+0x4>
   146e4:	ldrd	r2, r3, [r5, #-8]
   146e8:	movs	r0, #1
   146ea:	movs	r1, #0
   146ec:	strd	r0, r1, [sl, #-8]
   146f0:	strd	r2, r3, [r4, #8]
   146f4:	strd	r2, r3, [r4, #16]
   146f8:	movs	r3, #132	; 0x84
   146fa:	movs	r2, #0
   146fc:	strd	r3, r3, [r4, #56]	; 0x38
   14700:	movs	r3, #0
   14702:	strd	r2, r3, [sp, #56]	; 0x38
   14706:	ldr	r3, [sp, #40]	; 0x28
   14708:	strd	r6, r7, [r4, #32]
   1470c:	sub.w	r5, r3, #32
   14710:	strd	r6, r7, [r4, #48]	; 0x30
   14714:	str.w	r9, [r4, #64]	; 0x40
   14718:	vmov	r0, s16
   1471c:	mov	r2, r4
   1471e:	ldr	r1, [pc, #528]	; (14930 <btrfs_list_find_updated_files@@Base+0x394>)
   14720:	blx	85bc <ioctl@plt>
   14724:	cmp	r0, #0
   14726:	bge.n	14732 <btrfs_list_find_updated_files@@Base+0x196>
   14728:	ldr	r0, [pc, #548]	; (14950 <btrfs_list_find_updated_files@@Base+0x3b4>)
   1472a:	add	r0, pc
   1472c:	bl	16b70 <__btrfs_error@@Base>
   14730:	b.n	1465a <btrfs_list_find_updated_files@@Base+0xbe>
   14732:	ldr.w	ip, [r4, #64]	; 0x40
   14736:	cmp.w	ip, #0
   1473a:	beq.n	14662 <btrfs_list_find_updated_files@@Base+0xc6>
   1473c:	movs	r7, #0
   1473e:	add.w	r3, sl, #96	; 0x60
   14742:	mov	r6, r7
   14744:	str	r3, [sp, #40]	; 0x28
   14746:	add.w	r3, sp, #8448	; 0x2100
   1474a:	adds	r3, #48	; 0x30
   1474c:	str	r3, [sp, #48]	; 0x30
   1474e:	ldr	r3, [sp, #40]	; 0x28
   14750:	mov	lr, r5
   14752:	add	r3, r6
   14754:	add.w	r9, r3, #32
   14758:	ldr	r0, [r3, #0]
   1475a:	adds	r3, #8
   1475c:	ldr.w	r1, [r3, #-4]
   14760:	cmp	r3, r9
   14762:	mov	r2, lr
   14764:	stmia	r2!, {r0, r1}
   14766:	mov	lr, r2
   14768:	bne.n	14758 <btrfs_list_find_updated_files@@Base+0x1bc>
   1476a:	ldrd	r0, r1, [r5, #16]
   1476e:	add.w	lr, r6, #32
   14772:	ldrd	r2, r3, [r5, #8]
   14776:	ldr.w	r9, [r5, #24]
   1477a:	strd	r0, r1, [r4, #24]
   1477e:	ldrd	r0, r1, [fp]
   14782:	ldr	r6, [r5, #28]
   14784:	cmp	r1, r3
   14786:	strd	r2, r3, [r4, #8]
   1478a:	it	eq
   1478c:	cmpeq	r0, r2
   1478e:	add	r6, lr
   14790:	str.w	r9, [r4, #56]	; 0x38
   14794:	bcs.n	147ca <btrfs_list_find_updated_files@@Base+0x22e>
   14796:	ldrd	r0, r1, [r4, #24]
   1479a:	adds	r6, r1, #1
   1479c:	it	eq
   1479e:	cmpeq.w	r0, #4294967295	; 0xffffffff
   147a2:	beq.w	14662 <btrfs_list_find_updated_files@@Base+0xc6>
   147a6:	adds	r2, r0, #1
   147a8:	adc.w	r3, r1, #0
   147ac:	strd	r2, r3, [r4, #24]
   147b0:	ldr	r3, [r4, #56]	; 0x38
   147b2:	cmp	r3, #132	; 0x84
   147b4:	bne.w	14662 <btrfs_list_find_updated_files@@Base+0xc6>
   147b8:	ldrd	r0, r1, [r4, #8]
   147bc:	ldrd	r2, r3, [fp]
   147c0:	cmp	r1, r3
   147c2:	it	eq
   147c4:	cmpeq	r0, r2
   147c6:	beq.n	14718 <btrfs_list_find_updated_files@@Base+0x17c>
   147c8:	b.n	14662 <btrfs_list_find_updated_files@@Base+0xc6>
   147ca:	cmp	r3, r1
   147cc:	it	eq
   147ce:	cmpeq	r2, r0
   147d0:	bne.n	147f4 <btrfs_list_find_updated_files@@Base+0x258>
   147d2:	cmp.w	r9, #132	; 0x84
   147d6:	bne.n	147f4 <btrfs_list_find_updated_files@@Base+0x258>
   147d8:	ldr	r3, [sp, #48]	; 0x30
   147da:	ldrd	r0, r1, [sp, #56]	; 0x38
   147de:	add	lr, r3
   147e0:	ldr.w	r2, [lr, #160]	; 0xa0
   147e4:	ldr.w	r3, [lr, #164]	; 0xa4
   147e8:	cmp	r1, r3
   147ea:	it	eq
   147ec:	cmpeq	r0, r2
   147ee:	it	cc
   147f0:	strdcc	r2, r3, [sp, #56]	; 0x38
   147f4:	adds	r7, #1
   147f6:	cmp	r7, ip
   147f8:	bne.n	1474e <btrfs_list_find_updated_files@@Base+0x1b2>
   147fa:	b.n	14796 <btrfs_list_find_updated_files@@Base+0x1fa>
   147fc:	ldr.w	r3, [r8, #64]	; 0x40
   14800:	cmp	r3, #0
   14802:	beq.w	14698 <btrfs_list_find_updated_files@@Base+0xfc>
   14806:	movs	r3, #0
   14808:	str	r3, [sp, #84]	; 0x54
   1480a:	mov	r5, r3
   1480c:	add	r3, sp, #304	; 0x130
   1480e:	str	r3, [sp, #108]	; 0x6c
   14810:	ldr.w	r3, [r8, #64]	; 0x40
   14814:	ldr	r2, [sp, #84]	; 0x54
   14816:	cmp	r3, r2
   14818:	bhi.n	1483e <btrfs_list_find_updated_files@@Base+0x2a2>
   1481a:	ldrd	r0, r1, [r8, #24]
   1481e:	mov.w	r3, #4096	; 0x1000
   14822:	str.w	r3, [r8, #64]	; 0x40
   14826:	adds	r2, r1, #1
   14828:	it	eq
   1482a:	cmpeq.w	r0, #4294967295	; 0xffffffff
   1482e:	beq.w	14b54 <btrfs_list_find_updated_files@@Base+0x5b8>
   14832:	adds	r2, r0, #1
   14834:	adc.w	r3, r1, #0
   14838:	strd	r2, r3, [r8, #24]
   1483c:	b.n	1467a <btrfs_list_find_updated_files@@Base+0xde>
   1483e:	ldr	r3, [sp, #108]	; 0x6c
   14840:	add.w	sl, sp, #112	; 0x70
   14844:	add	r3, r5
   14846:	mov	r6, sl
   14848:	add.w	ip, r3, #32
   1484c:	ldr	r0, [r3, #0]
   1484e:	adds	r3, #8
   14850:	ldr.w	r1, [r3, #-4]
   14854:	cmp	r3, ip
   14856:	mov	r2, r6
   14858:	stmia	r2!, {r0, r1}
   1485a:	mov	r6, r2
   1485c:	bne.n	1484c <btrfs_list_find_updated_files@@Base+0x2b0>
   1485e:	add.w	r3, r5, #32
   14862:	str	r3, [sp, #104]	; 0x68
   14864:	ldr.w	r3, [sl, #28]
   14868:	str	r3, [sp, #96]	; 0x60
   1486a:	cmp	r3, #0
   1486c:	beq.n	1491c <btrfs_list_find_updated_files@@Base+0x380>
   1486e:	ldrd	r2, r3, [sp, #104]	; 0x68
   14872:	adds	r5, r3, r2
   14874:	ldr.w	r3, [sl, #24]
   14878:	str	r3, [sp, #100]	; 0x64
   1487a:	ldrd	r2, r3, [sl, #8]
   1487e:	strd	r2, r3, [sp, #40]	; 0x28
   14882:	ldr	r3, [sp, #100]	; 0x64
   14884:	cmp	r3, #108	; 0x6c
   14886:	bne.w	14b16 <btrfs_list_find_updated_files@@Base+0x57a>
   1488a:	ldr	r3, [r5, #0]
   1488c:	add.w	r1, sp, #12544	; 0x3100
   14890:	adds	r1, #8
   14892:	str	r3, [sp, #48]	; 0x30
   14894:	ldr	r3, [r5, #4]
   14896:	ldrd	r0, r1, [r1]
   1489a:	str	r3, [sp, #52]	; 0x34
   1489c:	ldrd	r2, r3, [sp, #48]	; 0x30
   148a0:	cmp	r3, r1
   148a2:	it	eq
   148a4:	cmpeq	r2, r0
   148a6:	bcc.w	14b16 <btrfs_list_find_updated_files@@Base+0x57a>
   148aa:	ldrd	r2, r3, [sp, #72]	; 0x48
   148ae:	ldrd	r0, r1, [sp, #40]	; 0x28
   148b2:	cmp	r3, r1
   148b4:	it	eq
   148b6:	cmpeq	r2, r0
   148b8:	bne.n	14920 <btrfs_list_find_updated_files@@Base+0x384>
   148ba:	cmp	r4, #0
   148bc:	bne.w	14a32 <btrfs_list_find_updated_files@@Base+0x496>
   148c0:	mov.w	r2, #4096	; 0x1000
   148c4:	movs	r1, #0
   148c6:	mov	r0, fp
   148c8:	blx	87c4 <memset@plt+0x4>
   148cc:	ldrd	r3, r4, [sp, #40]	; 0x28
   148d0:	movs	r1, #12
   148d2:	mov.w	r2, #4294967295	; 0xffffffff
   148d6:	str.w	r1, [fp, #60]	; 0x3c
   148da:	strd	r3, r4, [fp, #8]
   148de:	strd	r3, r4, [fp, #16]
   148e2:	mov.w	r3, #4294967295	; 0xffffffff
   148e6:	str.w	r1, [fp, #56]	; 0x38
   148ea:	strd	r2, r3, [fp, #32]
   148ee:	strd	r2, r3, [fp, #48]	; 0x30
   148f2:	movs	r3, #1
   148f4:	vmov	r0, s16
   148f8:	mov	r2, fp
   148fa:	ldr	r1, [pc, #52]	; (14930 <btrfs_list_find_updated_files@@Base+0x394>)
   148fc:	str.w	r3, [fp, #64]	; 0x40
   14900:	blx	85bc <ioctl@plt>
   14904:	cmp	r0, #0
   14906:	bge.n	14958 <btrfs_list_find_updated_files@@Base+0x3bc>
   14908:	ldr	r0, [pc, #72]	; (14954 <btrfs_list_find_updated_files@@Base+0x3b8>)
   1490a:	add	r0, pc
   1490c:	bl	16b70 <__btrfs_error@@Base>
   14910:	ldrd	r3, r4, [sp, #40]	; 0x28
   14914:	strd	r3, r4, [sp, #72]	; 0x48
   14918:	movs	r4, #0
   1491a:	b.n	14b16 <btrfs_list_find_updated_files@@Base+0x57a>
   1491c:	add	r5, sp, #144	; 0x90
   1491e:	b.n	14874 <btrfs_list_find_updated_files@@Base+0x2d8>
   14920:	cmp	r4, #0
   14922:	beq.n	148c0 <btrfs_list_find_updated_files@@Base+0x324>
   14924:	mov	r0, r4
   14926:	blx	8434 <free@plt+0x4>
   1492a:	b.n	148c0 <btrfs_list_find_updated_files@@Base+0x324>
   1492c:	str	r4, [sp, #72]	; 0x48
   1492e:	beq.n	14932 <btrfs_list_find_updated_files@@Base+0x396>
   14930:	str	r4, [sp, #68]	; 0x44
   14932:	beq.n	14936 <btrfs_list_find_updated_files@@Base+0x39a>
   14934:			; <UNDEFINED> instruction: 0xf7d40004
   14938:	lsls	r0, r4, #8
   1493a:	movs	r0, r0
   1493c:	ldr	r3, [r1, #0]
   1493e:	movs	r2, r0
   14940:	ldr	r6, [r2, #4]
   14942:	movs	r2, r0
   14944:	str	r7, [r5, #112]	; 0x70
   14946:	movs	r2, r0
   14948:	ldr	r0, [r1, #8]
   1494a:	movs	r2, r0
   1494c:	movt	r0, #43012	; 0xa804
   14950:	str	r7, [r2, #104]	; 0x68
   14952:	movs	r2, r0
   14954:	str	r7, [r6, #72]	; 0x48
   14956:	movs	r2, r0
   14958:	ldr.w	r3, [fp, #64]	; 0x40
   1495c:	cmp	r3, #0
   1495e:	beq.n	14910 <btrfs_list_find_updated_files@@Base+0x374>
   14960:	ldr.w	r3, [fp, #128]	; 0x80
   14964:	cmp	r3, #12
   14966:	bne.n	14910 <btrfs_list_find_updated_files@@Base+0x374>
   14968:	ldrd	r3, r4, [fp, #120]	; 0x78
   1496c:	add.w	r0, sp, #4288	; 0x10c0
   14970:	adds	r0, #16
   14972:	ldrh.w	r1, [fp, #144]	; 0x90
   14976:	adds	r0, #138	; 0x8a
   14978:	strd	r3, r4, [sp, #64]	; 0x40
   1497c:	blx	8464 <strndup@plt>
   14980:	ldrd	r3, r4, [sp, #64]	; 0x40
   14984:	ldrd	r1, r2, [sp, #88]	; 0x58
   14988:	cmp	r4, r2
   1498a:	it	eq
   1498c:	cmpeq	r3, r1
   1498e:	mov	r6, r0
   14990:	bne.n	14998 <btrfs_list_find_updated_files@@Base+0x3fc>
   14992:	cmp	r7, #0
   14994:	bne.w	14ada <btrfs_list_find_updated_files@@Base+0x53e>
   14998:	add.w	r4, sp, #8384	; 0x20c0
   1499c:	mov.w	r2, #4096	; 0x1000
   149a0:	adds	r4, #8
   149a2:	movs	r1, #0
   149a4:	mov	r0, r4
   149a6:	blx	87c4 <memset@plt+0x4>
   149aa:	ldrd	r2, r3, [sp, #64]	; 0x40
   149ae:	vmov	r0, s16
   149b2:	ldr	r1, [pc, #516]	; (14bb8 <btrfs_list_find_updated_files@@Base+0x61c>)
   149b4:	strd	r2, r3, [r4, #8]
   149b8:	mov	r2, r4
   149ba:	blx	85bc <ioctl@plt>
   149be:	subs.w	r9, r0, #0
   149c2:	bge.n	14a08 <btrfs_list_find_updated_files@@Base+0x46c>
   149c4:	ldr	r0, [pc, #500]	; (14bbc <btrfs_list_find_updated_files@@Base+0x620>)
   149c6:	ldrd	r2, r3, [sp, #64]	; 0x40
   149ca:	add	r0, pc
   149cc:	bl	16b70 <__btrfs_error@@Base>
   149d0:	mov	r0, r9
   149d2:	blx	8748 <strlen@plt>
   149d6:	mov	r4, r0
   149d8:	mov	r0, r6
   149da:	blx	8748 <strlen@plt>
   149de:	add	r0, r4
   149e0:	adds	r0, #1
   149e2:	blx	8678 <malloc@plt+0x4>
   149e6:	mov	r4, r0
   149e8:	cbz	r0, 149f8 <btrfs_list_find_updated_files@@Base+0x45c>
   149ea:	mov	r1, r9
   149ec:	blx	85f8 <strcpy@plt>
   149f0:	mov	r1, r6
   149f2:	mov	r0, r4
   149f4:	blx	85b0 <strcat@plt+0x4>
   149f8:	cbz	r7, 14a04 <btrfs_list_find_updated_files@@Base+0x468>
   149fa:	cmp	r9, r7
   149fc:	beq.n	14a1e <btrfs_list_find_updated_files@@Base+0x482>
   149fe:	mov	r0, r7
   14a00:	blx	8434 <free@plt+0x4>
   14a04:	mov	r7, r9
   14a06:	b.n	14a1e <btrfs_list_find_updated_files@@Base+0x482>
   14a08:	ldrb.w	r9, [r4, #16]
   14a0c:	cmp.w	r9, #0
   14a10:	bne.n	14abc <btrfs_list_find_updated_files@@Base+0x520>
   14a12:	mov	r0, r6
   14a14:	blx	84f8 <strdup@plt+0x4>
   14a18:	mov	r4, r0
   14a1a:	cmp	r7, #0
   14a1c:	bne.n	149fe <btrfs_list_find_updated_files@@Base+0x462>
   14a1e:	mov	r0, r6
   14a20:	blx	8434 <free@plt+0x4>
   14a24:	cmp	r4, #0
   14a26:	beq.w	14b42 <btrfs_list_find_updated_files@@Base+0x5a6>
   14a2a:	ldrd	r2, r3, [sp, #64]	; 0x40
   14a2e:	strd	r2, r3, [sp, #88]	; 0x58
   14a32:	ldrd	r2, r3, [sl, #16]
   14a36:	ldrb	r6, [r5, #20]
   14a38:	ldrb.w	r9, [r5, #16]
   14a3c:	strd	r2, r3, [sp, #64]	; 0x40
   14a40:	subs	r3, r6, #1
   14a42:	cmp	r3, #1
   14a44:	bhi.n	14ade <btrfs_list_find_updated_files@@Base+0x542>
   14a46:	ldr.w	r3, [r5, #45]	; 0x2d
   14a4a:	ldr.w	r0, [r5, #21]
   14a4e:	ldr.w	r1, [r5, #25]
   14a52:	ldr.w	lr, [r5, #37]	; 0x25
   14a56:	ldr.w	ip, [r5, #41]	; 0x29
   14a5a:	str	r3, [sp, #72]	; 0x48
   14a5c:	ldr.w	r5, [r5, #49]	; 0x31
   14a60:	ldrd	r2, r3, [sp, #48]	; 0x30
   14a64:	strd	r0, r1, [sp, #16]
   14a68:	movs	r0, #1
   14a6a:	vmov	r1, s18
   14a6e:	strd	r2, r3, [sp, #32]
   14a72:	ldr	r3, [sp, #72]	; 0x48
   14a74:	strd	lr, ip, [sp, #24]
   14a78:	strd	r3, r5, [sp, #8]
   14a7c:	ldrd	r2, r3, [sp, #64]	; 0x40
   14a80:	strd	r2, r3, [sp]
   14a84:	ldrd	r2, r3, [sp, #40]	; 0x28
   14a88:	blx	8838 <__printf_chk@plt+0x4>
   14a8c:	cmp.w	r9, #0
   14a90:	beq.n	14b7e <btrfs_list_find_updated_files@@Base+0x5e2>
   14a92:	ldr	r1, [pc, #300]	; (14bc0 <btrfs_list_find_updated_files@@Base+0x624>)
   14a94:	movs	r0, #1
   14a96:	add	r1, pc
   14a98:	blx	8838 <__printf_chk@plt+0x4>
   14a9c:	cmp	r6, #2
   14a9e:	bne.n	14b88 <btrfs_list_find_updated_files@@Base+0x5ec>
   14aa0:	ldr	r2, [pc, #288]	; (14bc4 <btrfs_list_find_updated_files@@Base+0x628>)
   14aa2:	add	r2, pc
   14aa4:	ldr	r1, [pc, #288]	; (14bc8 <btrfs_list_find_updated_files@@Base+0x62c>)
   14aa6:	add	r1, pc
   14aa8:	movs	r0, #1
   14aaa:	blx	8838 <__printf_chk@plt+0x4>
   14aae:	ldr	r1, [pc, #284]	; (14bcc <btrfs_list_find_updated_files@@Base+0x630>)
   14ab0:	mov	r2, r4
   14ab2:	movs	r0, #1
   14ab4:	add	r1, pc
   14ab6:	blx	8838 <__printf_chk@plt+0x4>
   14aba:	b.n	14b0e <btrfs_list_find_updated_files@@Base+0x572>
   14abc:	add.w	r0, sp, #8384	; 0x20c0
   14ac0:	adds	r0, #24
   14ac2:	blx	84f8 <strdup@plt+0x4>
   14ac6:	mov	r9, r0
   14ac8:	cmp	r0, #0
   14aca:	bne.n	149d0 <btrfs_list_find_updated_files@@Base+0x434>
   14acc:	ldr	r0, [pc, #256]	; (14bd0 <btrfs_list_find_updated_files@@Base+0x634>)
   14ace:	mvn.w	r9, #11
   14ad2:	add	r0, pc
   14ad4:	blx	8568 <perror@plt>
   14ad8:	b.n	149d0 <btrfs_list_find_updated_files@@Base+0x434>
   14ada:	mov	r9, r7
   14adc:	b.n	149d0 <btrfs_list_find_updated_files@@Base+0x434>
   14ade:	cbnz	r6, 14af0 <btrfs_list_find_updated_files@@Base+0x554>
   14ae0:	ldr	r3, [r5, #8]
   14ae2:	mov	lr, r6
   14ae4:	mov	ip, r6
   14ae6:	mov	r0, r6
   14ae8:	mov	r1, r6
   14aea:	str	r3, [sp, #72]	; 0x48
   14aec:	ldr	r5, [r5, #12]
   14aee:	b.n	14a60 <btrfs_list_find_updated_files@@Base+0x4c4>
   14af0:	ldrd	r2, r3, [sp, #48]	; 0x30
   14af4:	mov	r1, r6
   14af6:	ldr	r0, [pc, #220]	; (14bd4 <btrfs_list_find_updated_files@@Base+0x638>)
   14af8:	strd	r2, r3, [sp, #8]
   14afc:	add	r0, pc
   14afe:	ldrd	r2, r3, [sp, #64]	; 0x40
   14b02:	strd	r2, r3, [sp]
   14b06:	ldrd	r2, r3, [sp, #40]	; 0x28
   14b0a:	bl	16b70 <__btrfs_error@@Base>
   14b0e:	ldrd	r2, r3, [sp, #40]	; 0x28
   14b12:	strd	r2, r3, [sp, #72]	; 0x48
   14b16:	ldr	r2, [sp, #104]	; 0x68
   14b18:	ldr	r3, [sp, #96]	; 0x60
   14b1a:	add	r3, r2
   14b1c:	mov	r5, r3
   14b1e:	ldrd	r2, r3, [sp, #40]	; 0x28
   14b22:	strd	r2, r3, [r8, #8]
   14b26:	ldrd	r2, r3, [sl, #16]
   14b2a:	strd	r2, r3, [r8, #24]
   14b2e:	ldr	r3, [sp, #100]	; 0x64
   14b30:	str.w	r3, [r8, #56]	; 0x38
   14b34:	ldr	r3, [sp, #84]	; 0x54
   14b36:	adds	r3, #1
   14b38:	str	r3, [sp, #84]	; 0x54
   14b3a:	b.n	14810 <btrfs_list_find_updated_files@@Base+0x274>
   14b3c:	ldr	r2, [pc, #152]	; (14bd8 <btrfs_list_find_updated_files@@Base+0x63c>)
   14b3e:	add	r2, pc
   14b40:	b.n	14b90 <btrfs_list_find_updated_files@@Base+0x5f4>
   14b42:	ldrd	r2, r3, [sp, #40]	; 0x28
   14b46:	strd	r2, r3, [sp, #72]	; 0x48
   14b4a:	ldrd	r2, r3, [sp, #64]	; 0x40
   14b4e:	strd	r2, r3, [sp, #88]	; 0x58
   14b52:	b.n	14b16 <btrfs_list_find_updated_files@@Base+0x57a>
   14b54:	ldrd	r0, r1, [r8, #8]
   14b58:	adds	r3, r1, #1
   14b5a:	it	eq
   14b5c:	cmpeq.w	r0, #4294967295	; 0xffffffff
   14b60:	beq.w	14698 <btrfs_list_find_updated_files@@Base+0xfc>
   14b64:	adds	r2, r0, #1
   14b66:	adc.w	r3, r1, #0
   14b6a:	strd	r2, r3, [r8, #8]
   14b6e:	movs	r3, #0
   14b70:	movs	r2, #0
   14b72:	strd	r2, r3, [r8, #24]
   14b76:	movs	r3, #0
   14b78:	str.w	r3, [r8, #56]	; 0x38
   14b7c:	b.n	1467a <btrfs_list_find_updated_files@@Base+0xde>
   14b7e:	cmp	r6, #2
   14b80:	bne.n	14b96 <btrfs_list_find_updated_files@@Base+0x5fa>
   14b82:	ldr	r2, [pc, #88]	; (14bdc <btrfs_list_find_updated_files@@Base+0x640>)
   14b84:	add	r2, pc
   14b86:	b.n	14aa4 <btrfs_list_find_updated_files@@Base+0x508>
   14b88:	cmp	r6, #0
   14b8a:	bne.n	14aae <btrfs_list_find_updated_files@@Base+0x512>
   14b8c:	ldr	r2, [pc, #80]	; (14be0 <btrfs_list_find_updated_files@@Base+0x644>)
   14b8e:	add	r2, pc
   14b90:	ldr	r1, [pc, #80]	; (14be4 <btrfs_list_find_updated_files@@Base+0x648>)
   14b92:	add	r1, pc
   14b94:	b.n	14aa8 <btrfs_list_find_updated_files@@Base+0x50c>
   14b96:	cmp	r6, #0
   14b98:	beq.n	14b3c <btrfs_list_find_updated_files@@Base+0x5a0>
   14b9a:	ldr	r1, [pc, #76]	; (14be8 <btrfs_list_find_updated_files@@Base+0x64c>)
   14b9c:	movs	r0, #1
   14b9e:	add	r1, pc
   14ba0:	blx	8838 <__printf_chk@plt+0x4>
   14ba4:	b.n	14aae <btrfs_list_find_updated_files@@Base+0x512>
   14ba6:	vmov	r0, s17
   14baa:	add.w	sp, sp, #12480	; 0x30c0
   14bae:	add	sp, #20
   14bb0:	vpop	{d8-d9}
   14bb4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14bb8:	str	r4, [sp, #72]	; 0x48
   14bba:	beq.n	14bbe <btrfs_list_find_updated_files@@Base+0x622>
   14bbc:	str	r5, [r2, #72]	; 0x48
   14bbe:	movs	r2, r0
   14bc0:	str	r3, [sp, #704]	; 0x2c0
   14bc2:	movs	r2, r0
   14bc4:	str	r3, [r7, #56]	; 0x38
   14bc6:	movs	r2, r0
   14bc8:	str	r5, [r6, #68]	; 0x44
   14bca:	movs	r2, r0
   14bcc:	strb	r5, [r5, r2]
   14bce:	movs	r2, r0
   14bd0:	str	r3, [r5, #40]	; 0x28
   14bd2:	movs	r2, r0
   14bd4:	str	r4, [r1, #56]	; 0x38
   14bd6:	movs	r2, r0
   14bd8:	ldr	r2, [pc, #828]	; (14f18 <btrfs_list_subvols_print@@Base+0x148>)
   14bda:	movs	r2, r0
   14bdc:	ldr	r2, [pc, #548]	; (14e04 <btrfs_list_subvols_print@@Base+0x34>)
   14bde:	movs	r2, r0
   14be0:	str	r7, [r1, #44]	; 0x2c
   14be2:	movs	r2, r0
   14be4:	str	r4, [r2, #56]	; 0x38
   14be6:	movs	r2, r0
   14be8:	str	r1, [r2, #56]	; 0x38
   14bea:	movs	r2, r0

00014bec <btrfs_list_parse_sort_string@@Base>:
   14bec:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14bf0:	mov	r4, r1
   14bf2:	ldr.w	sl, [pc, #324]	; 14d38 <btrfs_list_parse_sort_string@@Base+0x14c>
   14bf6:	ldr.w	fp, [pc, #324]	; 14d3c <btrfs_list_parse_sort_string@@Base+0x150>
   14bfa:	ldr	r7, [pc, #324]	; (14d40 <btrfs_list_parse_sort_string@@Base+0x154>)
   14bfc:	add	sl, pc
   14bfe:	ldr	r3, [pc, #324]	; (14d44 <btrfs_list_parse_sort_string@@Base+0x158>)
   14c00:	add	fp, pc
   14c02:	add	r7, pc
   14c04:	add	r3, pc
   14c06:	str	r3, [sp, #0]
   14c08:	mov	r1, sl
   14c0a:	blx	8890 <strtok@plt>
   14c0e:	mov	r9, r0
   14c10:	cbz	r0, 14c44 <btrfs_list_parse_sort_string@@Base+0x58>
   14c12:	ldr	r3, [sp, #0]
   14c14:	add.w	r8, r0, #1
   14c18:	add.w	r5, r3, #132	; 0x84
   14c1c:	mov	r6, r5
   14c1e:	b.n	14c38 <btrfs_list_parse_sort_string@@Base+0x4c>
   14c20:	mov	r1, r9
   14c22:	mov	r0, r2
   14c24:	str	r2, [sp, #4]
   14c26:	blx	83c0 <strcmp@plt>
   14c2a:	cbz	r0, 14c4a <btrfs_list_parse_sort_string@@Base+0x5e>
   14c2c:	ldr	r2, [sp, #4]
   14c2e:	mov	r1, r8
   14c30:	mov	r0, r2
   14c32:	blx	83c0 <strcmp@plt>
   14c36:	cbz	r0, 14c4a <btrfs_list_parse_sort_string@@Base+0x5e>
   14c38:	ldr.w	r2, [r6], #4
   14c3c:	cmp	r2, #0
   14c3e:	bne.n	14c20 <btrfs_list_parse_sort_string@@Base+0x34>
   14c40:	mov.w	r0, #4294967295	; 0xffffffff
   14c44:	add	sp, #12
   14c46:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c4a:	ldrb.w	r2, [r9]
   14c4e:	cmp	r2, #43	; 0x2b
   14c50:	bne.n	14c5a <btrfs_list_parse_sort_string@@Base+0x6e>
   14c52:	add.w	r9, r9, #1
   14c56:	movs	r6, #0
   14c58:	b.n	14c64 <btrfs_list_parse_sort_string@@Base+0x78>
   14c5a:	cmp	r2, #45	; 0x2d
   14c5c:	bne.n	14c56 <btrfs_list_parse_sort_string@@Base+0x6a>
   14c5e:	add.w	r9, r9, #1
   14c62:	movs	r6, #1
   14c64:	mov.w	r8, #0
   14c68:	ldr.w	r1, [r5], #4
   14c6c:	mov	r0, r9
   14c6e:	blx	83c0 <strcmp@plt>
   14c72:	cbz	r0, 14c82 <btrfs_list_parse_sort_string@@Base+0x96>
   14c74:	add.w	r8, r8, #1
   14c78:	cmp.w	r8, #4
   14c7c:	bne.n	14c68 <btrfs_list_parse_sort_string@@Base+0x7c>
   14c7e:	mov.w	r8, #4294967295	; 0xffffffff
   14c82:	ldr	r5, [r4, #0]
   14c84:	cbnz	r5, 14c96 <btrfs_list_parse_sort_string@@Base+0xaa>
   14c86:	ldr	r1, [pc, #192]	; (14d48 <btrfs_list_parse_sort_string@@Base+0x15c>)
   14c88:	movs	r2, #251	; 0xfb
   14c8a:	ldr	r0, [pc, #192]	; (14d4c <btrfs_list_parse_sort_string@@Base+0x160>)
   14c8c:	add	r1, pc
   14c8e:	adds	r1, #77	; 0x4d
   14c90:	add	r0, pc
   14c92:	bl	1414c <rb_first_postorder@@Base+0xb36>
   14c96:	cmp.w	r8, #3
   14c9a:	bls.n	14caa <btrfs_list_parse_sort_string@@Base+0xbe>
   14c9c:	ldr	r1, [pc, #176]	; (14d50 <btrfs_list_parse_sort_string@@Base+0x164>)
   14c9e:	movs	r2, #252	; 0xfc
   14ca0:	ldr	r0, [pc, #176]	; (14d54 <btrfs_list_parse_sort_string@@Base+0x168>)
   14ca2:	add	r1, pc
   14ca4:	adds	r1, #77	; 0x4d
   14ca6:	add	r0, pc
   14ca8:	b.n	14c92 <btrfs_list_parse_sort_string@@Base+0xa6>
   14caa:	ldrd	r3, r1, [r5]
   14cae:	cmp	r1, r3
   14cb0:	ble.n	14cc0 <btrfs_list_parse_sort_string@@Base+0xd4>
   14cb2:	ldr	r1, [pc, #164]	; (14d58 <btrfs_list_parse_sort_string@@Base+0x16c>)
   14cb4:	movs	r2, #253	; 0xfd
   14cb6:	ldr	r0, [pc, #164]	; (14d5c <btrfs_list_parse_sort_string@@Base+0x170>)
   14cb8:	add	r1, pc
   14cba:	adds	r1, #77	; 0x4d
   14cbc:	add	r0, pc
   14cbe:	b.n	14c92 <btrfs_list_parse_sort_string@@Base+0xa6>
   14cc0:	bne.n	14d0a <btrfs_list_parse_sort_string@@Base+0x11e>
   14cc2:	adds	r1, #9
   14cc4:	mov	r0, r5
   14cc6:	lsls	r1, r1, #3
   14cc8:	blx	852c <realloc@plt+0x4>
   14ccc:	mov	r9, r0
   14cce:	cbnz	r0, 14cea <btrfs_list_parse_sort_string@@Base+0xfe>
   14cd0:	ldr	r3, [pc, #140]	; (14d60 <btrfs_list_parse_sort_string@@Base+0x174>)
   14cd2:	ldr	r0, [pc, #144]	; (14d64 <btrfs_list_parse_sort_string@@Base+0x178>)
   14cd4:	ldr	r3, [r7, r3]
   14cd6:	add	r0, pc
   14cd8:	ldr	r1, [r3, #0]
   14cda:	blx	8968 <fputs@plt+0x4>
   14cde:	mov	r0, r5
   14ce0:	blx	8434 <free@plt+0x4>
   14ce4:	movs	r0, #1
   14ce6:	blx	873c <exit@plt>
   14cea:	ldr	r0, [r0, #0]
   14cec:	movs	r2, #64	; 0x40
   14cee:	movs	r1, #0
   14cf0:	mov	r5, r9
   14cf2:	adds	r0, #1
   14cf4:	add.w	r0, r9, r0, lsl #3
   14cf8:	blx	87c4 <memset@plt+0x4>
   14cfc:	ldr.w	r2, [r9]
   14d00:	adds	r2, #8
   14d02:	str.w	r2, [r9]
   14d06:	str.w	r9, [r4]
   14d0a:	ldr	r3, [r5, #4]
   14d0c:	add.w	r1, r5, r3, lsl #3
   14d10:	ldr	r0, [r1, #8]
   14d12:	cbz	r0, 14d24 <btrfs_list_parse_sort_string@@Base+0x138>
   14d14:	ldr	r1, [pc, #80]	; (14d68 <btrfs_list_parse_sort_string@@Base+0x17c>)
   14d16:	movw	r2, #275	; 0x113
   14d1a:	ldr	r0, [pc, #80]	; (14d6c <btrfs_list_parse_sort_string@@Base+0x180>)
   14d1c:	add	r1, pc
   14d1e:	adds	r1, #77	; 0x4d
   14d20:	add	r0, pc
   14d22:	b.n	14c92 <btrfs_list_parse_sort_string@@Base+0xa6>
   14d24:	add.w	r8, fp, r8, lsl #2
   14d28:	adds	r3, #1
   14d2a:	ldr.w	r2, [r8, #52]	; 0x34
   14d2e:	strd	r2, r6, [r1, #8]
   14d32:	str	r3, [r5, #4]
   14d34:	b.n	14c08 <btrfs_list_parse_sort_string@@Base+0x1c>
   14d36:	nop
   14d38:	mov	r1, r4
   14d3a:	movs	r2, r0
   14d3c:			; <UNDEFINED> instruction: 0xeb980004
   14d40:			; <UNDEFINED> instruction: 0xf1820004
   14d44:	lsls	r0, r7, #20
   14d46:	movs	r5, r0
   14d48:	str	r3, [r1, #56]	; 0x38
   14d4a:	movs	r2, r0
   14d4c:	add	r9, r0
   14d4e:	movs	r2, r0
   14d50:	str	r5, [r6, #52]	; 0x34
   14d52:	movs	r2, r0
   14d54:	str	r7, [r4, #40]	; 0x28
   14d56:	movs	r2, r0
   14d58:	str	r7, [r3, #52]	; 0x34
   14d5a:	movs	r2, r0
   14d5c:	add	sl, r0
   14d5e:	movs	r2, r0
   14d60:	lsls	r0, r6, #8
   14d62:	movs	r0, r0
   14d64:	str	r7, [r2, #4]
   14d66:	movs	r2, r0
   14d68:	str	r3, [r7, #44]	; 0x2c
   14d6a:	movs	r2, r0
   14d6c:	add	r0, r7
   14d6e:	movs	r2, r0

00014d70 <btrfs_list_parse_filter_string@@Base>:
   14d70:	push	{r3, r4, r5, lr}
   14d72:	mov	r3, r0
   14d74:	mov	r5, r2
   14d76:	ldrb.w	r2, [r3], #1
   14d7a:	mov	r4, r1
   14d7c:	cmp	r2, #43	; 0x2b
   14d7e:	beq.n	14d90 <btrfs_list_parse_filter_string@@Base+0x20>
   14d80:	cmp	r2, #45	; 0x2d
   14d82:	beq.n	14da6 <btrfs_list_parse_filter_string@@Base+0x36>
   14d84:	bl	16e30 <arg_strtou64@@Base>
   14d88:	mov	r3, r1
   14d8a:	mov	r2, r0
   14d8c:	mov	r1, r5
   14d8e:	b.n	14d9c <btrfs_list_parse_filter_string@@Base+0x2c>
   14d90:	mov	r0, r3
   14d92:	bl	16e30 <arg_strtou64@@Base>
   14d96:	mov	r3, r1
   14d98:	adds	r1, r5, #2
   14d9a:	mov	r2, r0
   14d9c:	mov	r0, r4
   14d9e:	bl	14490 <btrfs_list_setup_filter@@Base>
   14da2:	movs	r0, #0
   14da4:	pop	{r3, r4, r5, pc}
   14da6:	mov	r0, r3
   14da8:	bl	16e30 <arg_strtou64@@Base>
   14dac:	mov	r3, r1
   14dae:	mov	r2, r0
   14db0:	adds	r1, r5, #1
   14db2:	b.n	14d9c <btrfs_list_parse_filter_string@@Base+0x2c>

00014db4 <btrfs_list_get_path_rootid@@Base>:
   14db4:	push	{r4, lr}
   14db6:	bl	16ed8 <lookup_path_rootid@@Base>
   14dba:	subs	r4, r0, #0
   14dbc:	bge.n	14dc6 <btrfs_list_get_path_rootid@@Base+0x12>
   14dbe:	ldr	r0, [pc, #12]	; (14dcc <btrfs_list_get_path_rootid@@Base+0x18>)
   14dc0:	add	r0, pc
   14dc2:	bl	16b70 <__btrfs_error@@Base>
   14dc6:	mov	r0, r4
   14dc8:	pop	{r4, pc}
   14dca:	nop
   14dcc:	str	r4, [r5, #24]
   14dce:	movs	r2, r0

00014dd0 <btrfs_list_subvols_print@@Base>:
   14dd0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14dd4:	sub	sp, #76	; 0x4c
   14dd6:	mov	r9, r2
   14dd8:	mov	r7, r3
   14dda:	ldrd	r3, r2, [sp, #112]	; 0x70
   14dde:	mov	r8, r1
   14de0:	ldr	r1, [pc, #828]	; (15120 <btrfs_list_subvols_print@@Base+0x350>)
   14de2:	mov.w	sl, #0
   14de6:	mov.w	fp, #0
   14dea:	mov	r4, r0
   14dec:	str	r2, [sp, #12]
   14dee:	add	r1, pc
   14df0:	ldr	r2, [pc, #816]	; (15124 <btrfs_list_subvols_print@@Base+0x354>)
   14df2:	ldr	r2, [r1, r2]
   14df4:	ldr	r2, [r2, #0]
   14df6:	str	r2, [sp, #68]	; 0x44
   14df8:	mov.w	r2, #0
   14dfc:	strd	sl, fp, [sp, #40]	; 0x28
   14e00:	cmp	r3, #0
   14e02:	bne.n	14ede <btrfs_list_subvols_print@@Base+0x10e>
   14e04:	add	r5, sp, #32
   14e06:	mov	r0, r4
   14e08:	mov	r1, r5
   14e0a:	bl	14124 <rb_first_postorder@@Base+0xb0e>
   14e0e:	mov	r6, r0
   14e10:	cmp	r0, #0
   14e12:	bne.n	14eea <btrfs_list_subvols_print@@Base+0x11a>
   14e14:	ldrd	r3, r4, [sp, #40]	; 0x28
   14e18:	str	r0, [sp, #36]	; 0x24
   14e1a:	mov	r0, r5
   14e1c:	strd	r3, r4, [sp, #16]
   14e20:	bl	1354a <rb_last@@Base>
   14e24:	ldr	r3, [pc, #768]	; (15128 <btrfs_list_subvols_print@@Base+0x358>)
   14e26:	add	r3, pc
   14e28:	str	r3, [sp, #24]
   14e2a:	mov	r4, r0
   14e2c:	cmp	r4, #0
   14e2e:	bne.n	14f00 <btrfs_list_subvols_print@@Base+0x130>
   14e30:	cmp	r7, #1
   14e32:	bne.n	14eb8 <btrfs_list_subvols_print@@Base+0xe8>
   14e34:	ldr	r5, [pc, #756]	; (1512c <btrfs_list_subvols_print@@Base+0x35c>)
   14e36:	ldr.w	r9, [pc, #760]	; 15130 <btrfs_list_subvols_print@@Base+0x360>
   14e3a:	add	r5, pc
   14e3c:	add	r9, pc
   14e3e:	mov	r8, r5
   14e40:	ldr.w	r3, [r8, #8]
   14e44:	cbz	r3, 14e52 <btrfs_list_subvols_print@@Base+0x82>
   14e46:	ldr.w	r2, [r8]
   14e4a:	mov	r1, r9
   14e4c:	movs	r0, #1
   14e4e:	blx	8838 <__printf_chk@plt+0x4>
   14e52:	cmp	r4, #9
   14e54:	bne.n	14e5c <btrfs_list_subvols_print@@Base+0x8c>
   14e56:	movs	r0, #10
   14e58:	blx	87d4 <putchar@plt+0x4>
   14e5c:	adds	r4, #1
   14e5e:	add.w	r8, r8, #12
   14e62:	cmp	r4, #10
   14e64:	bne.n	14e40 <btrfs_list_subvols_print@@Base+0x70>
   14e66:	ldr.w	r9, [pc, #716]	; 15134 <btrfs_list_subvols_print@@Base+0x364>
   14e6a:	mov.w	r8, #0
   14e6e:	ldr.w	sl, [pc, #712]	; 15138 <btrfs_list_subvols_print@@Base+0x368>
   14e72:	add	r9, pc
   14e74:	add	sl, pc
   14e76:	add.w	fp, sp, #48	; 0x30
   14e7a:	movs	r2, #20
   14e7c:	movs	r1, #0
   14e7e:	mov	r0, fp
   14e80:	blx	87c4 <memset@plt+0x4>
   14e84:	ldr	r3, [r5, #8]
   14e86:	cbz	r3, 14ea0 <btrfs_list_subvols_print@@Base+0xd0>
   14e88:	ldr	r0, [r5, #0]
   14e8a:	blx	8748 <strlen@plt>
   14e8e:	mov	r4, r0
   14e90:	subs	r4, #1
   14e92:	bcs.w	15028 <btrfs_list_subvols_print@@Base+0x258>
   14e96:	mov	r2, fp
   14e98:	mov	r1, sl
   14e9a:	movs	r0, #1
   14e9c:	blx	8838 <__printf_chk@plt+0x4>
   14ea0:	cmp.w	r8, #9
   14ea4:	bne.n	14eac <btrfs_list_subvols_print@@Base+0xdc>
   14ea6:	movs	r0, #10
   14ea8:	blx	87d4 <putchar@plt+0x4>
   14eac:	add.w	r8, r8, #1
   14eb0:	adds	r5, #12
   14eb2:	cmp.w	r8, #10
   14eb6:	bne.n	14e76 <btrfs_list_subvols_print@@Base+0xa6>
   14eb8:	add	r0, sp, #36	; 0x24
   14eba:	ldr.w	r9, [pc, #640]	; 1513c <btrfs_list_subvols_print@@Base+0x36c>
   14ebe:	bl	1353a <rb_first@@Base>
   14ec2:	ldr.w	sl, [pc, #636]	; 15140 <btrfs_list_subvols_print@@Base+0x370>
   14ec6:	add	r9, pc
   14ec8:	add	sl, pc
   14eca:	mov	r4, r0
   14ecc:	cmp	r4, #0
   14ece:	bne.w	15034 <btrfs_list_subvols_print@@Base+0x264>
   14ed2:	ldr	r1, [pc, #624]	; (15144 <btrfs_list_subvols_print@@Base+0x374>)
   14ed4:	add	r0, sp, #32
   14ed6:	add	r1, pc
   14ed8:	bl	16ff2 <rb_free_nodes@@Base>
   14edc:	b.n	14eea <btrfs_list_subvols_print@@Base+0x11a>
   14ede:	add	r1, sp, #40	; 0x28
   14ee0:	bl	14db4 <btrfs_list_get_path_rootid@@Base>
   14ee4:	mov	r6, r0
   14ee6:	cmp	r0, #0
   14ee8:	beq.n	14e04 <btrfs_list_subvols_print@@Base+0x34>
   14eea:	ldr	r2, [pc, #604]	; (15148 <btrfs_list_subvols_print@@Base+0x378>)
   14eec:	ldr	r3, [pc, #564]	; (15124 <btrfs_list_subvols_print@@Base+0x354>)
   14eee:	add	r2, pc
   14ef0:	ldr	r3, [r2, r3]
   14ef2:	ldr	r2, [r3, #0]
   14ef4:	ldr	r3, [sp, #68]	; 0x44
   14ef6:	eors	r2, r3
   14ef8:	beq.w	15116 <btrfs_list_subvols_print@@Base+0x346>
   14efc:	blx	8510 <__stack_chk_fail@plt>
   14f00:	ldrd	r2, r3, [sp, #16]
   14f04:	add	r0, sp, #32
   14f06:	mov	r1, r4
   14f08:	bl	13bf4 <rb_first_postorder@@Base+0x5de>
   14f0c:	adds	r0, #2
   14f0e:	bne.n	14f2e <btrfs_list_subvols_print@@Base+0x15e>
   14f10:	ldrd	r2, r3, [r4, #24]
   14f14:	cmp	r3, #0
   14f16:	it	eq
   14f18:	cmpeq	r2, #5
   14f1a:	beq.n	14f58 <btrfs_list_subvols_print@@Base+0x188>
   14f1c:	ldr	r0, [pc, #556]	; (1514c <btrfs_list_subvols_print@@Base+0x37c>)
   14f1e:	add	r0, pc
   14f20:	blx	84f8 <strdup@plt+0x4>
   14f24:	movs	r3, #1
   14f26:	str.w	r0, [r4, #148]	; 0x94
   14f2a:	str.w	r3, [r4, #152]	; 0x98
   14f2e:	cmp.w	r8, #0
   14f32:	bne.n	14f68 <btrfs_list_subvols_print@@Base+0x198>
   14f34:	add	r5, sp, #36	; 0x24
   14f36:	movs	r3, #0
   14f38:	ldr.w	sl, [r5]
   14f3c:	cmp.w	sl, #0
   14f40:	bne.n	14faa <btrfs_list_subvols_print@@Base+0x1da>
   14f42:	add.w	r0, r4, #12
   14f46:	strd	r3, sl, [r4, #12]
   14f4a:	str.w	sl, [r4, #20]
   14f4e:	add	r1, sp, #36	; 0x24
   14f50:	str	r0, [r5, #0]
   14f52:	bl	1321e <rb_insert_color@@Base>
   14f56:	b.n	14f74 <btrfs_list_subvols_print@@Base+0x1a4>
   14f58:	ldr	r0, [pc, #500]	; (15150 <btrfs_list_subvols_print@@Base+0x380>)
   14f5a:	add	r0, pc
   14f5c:	blx	84f8 <strdup@plt+0x4>
   14f60:	movs	r3, #0
   14f62:	str.w	r0, [r4, #148]	; 0x94
   14f66:	b.n	14f2a <btrfs_list_subvols_print@@Base+0x15a>
   14f68:	ldr.w	r2, [r8, #8]
   14f6c:	ldr.w	r3, [r4, #152]	; 0x98
   14f70:	cbz	r2, 14f7e <btrfs_list_subvols_print@@Base+0x1ae>
   14f72:	cbnz	r3, 14f82 <btrfs_list_subvols_print@@Base+0x1b2>
   14f74:	mov	r0, r4
   14f76:	bl	13586 <rb_prev@@Base>
   14f7a:	mov	r4, r0
   14f7c:	b.n	14e2c <btrfs_list_subvols_print@@Base+0x5c>
   14f7e:	cmp	r3, #0
   14f80:	bne.n	14f74 <btrfs_list_subvols_print@@Base+0x1a4>
   14f82:	mov	r5, r8
   14f84:	mov.w	sl, #0
   14f88:	ldr.w	r3, [r8, #4]
   14f8c:	cmp	sl, r3
   14f8e:	bge.n	14f34 <btrfs_list_subvols_print@@Base+0x164>
   14f90:	ldr	r1, [r5, #16]
   14f92:	cmp	r1, #0
   14f94:	beq.n	14f34 <btrfs_list_subvols_print@@Base+0x164>
   14f96:	ldrd	r2, r3, [r5, #24]
   14f9a:	mov	r0, r4
   14f9c:	blx	r1
   14f9e:	adds	r5, #16
   14fa0:	cmp	r0, #0
   14fa2:	beq.n	14f74 <btrfs_list_subvols_print@@Base+0x1a4>
   14fa4:	add.w	sl, sl, #1
   14fa8:	b.n	14f88 <btrfs_list_subvols_print@@Base+0x1b8>
   14faa:	sub.w	r1, sl, #12
   14fae:	cmp.w	r9, #0
   14fb2:	beq.n	14fd8 <btrfs_list_subvols_print@@Base+0x208>
   14fb4:	ldr.w	r3, [r9, #4]
   14fb8:	cbz	r3, 14fd8 <btrfs_list_subvols_print@@Base+0x208>
   14fba:	movs	r3, #0
   14fbc:	str.w	r9, [sp, #8]
   14fc0:	mov	fp, r3
   14fc2:	str	r3, [sp, #4]
   14fc4:	ldr.w	r3, [r9, #4]
   14fc8:	ldr	r2, [sp, #4]
   14fca:	cmp	r2, r3
   14fcc:	blt.n	14fec <btrfs_list_subvols_print@@Base+0x21c>
   14fce:	cmp.w	fp, #0
   14fd2:	bne.n	14f74 <btrfs_list_subvols_print@@Base+0x1a4>
   14fd4:	mov	r2, fp
   14fd6:	b.n	14fda <btrfs_list_subvols_print@@Base+0x20a>
   14fd8:	movs	r2, #0
   14fda:	mov	r0, r4
   14fdc:	bl	1362c <rb_first_postorder@@Base+0x16>
   14fe0:	cmp	r0, #0
   14fe2:	bge.n	15020 <btrfs_list_subvols_print@@Base+0x250>
   14fe4:	ldr	r5, [r5, #0]
   14fe6:	adds	r5, #8
   14fe8:	mov	r3, sl
   14fea:	b.n	14f38 <btrfs_list_subvols_print@@Base+0x168>
   14fec:	ldr	r3, [sp, #8]
   14fee:	ldr	r3, [r3, #8]
   14ff0:	cmp	r3, #0
   14ff2:	beq.n	14fce <btrfs_list_subvols_print@@Base+0x1fe>
   14ff4:	ldr	r2, [sp, #8]
   14ff6:	mov	r0, r4
   14ff8:	str	r1, [sp, #28]
   14ffa:	ldr	r2, [r2, #12]
   14ffc:	blx	r3
   14ffe:	cmp	r0, #0
   15000:	bne.w	15110 <btrfs_list_subvols_print@@Base+0x340>
   15004:	ldr	r2, [sp, #8]
   15006:	ldr	r1, [sp, #28]
   15008:	ldr.w	r3, [r2, #8]!
   1500c:	str	r2, [sp, #8]
   1500e:	ldr	r2, [sp, #24]
   15010:	cmp	r3, r2
   15012:	it	eq
   15014:	moveq.w	fp, #1
   15018:	ldr	r3, [sp, #4]
   1501a:	adds	r3, #1
   1501c:	str	r3, [sp, #4]
   1501e:	b.n	14fc4 <btrfs_list_subvols_print@@Base+0x1f4>
   15020:	beq.n	14f74 <btrfs_list_subvols_print@@Base+0x1a4>
   15022:	ldr	r5, [r5, #0]
   15024:	adds	r5, #4
   15026:	b.n	14fe8 <btrfs_list_subvols_print@@Base+0x218>
   15028:	movs	r2, #20
   1502a:	mov	r1, r9
   1502c:	mov	r0, fp
   1502e:	blx	8790 <__strcat_chk@plt>
   15032:	b.n	14e90 <btrfs_list_subvols_print@@Base+0xc0>
   15034:	ldrd	r2, r3, [r4, #12]
   15038:	sub.w	r5, r4, #12
   1503c:	cmp	r3, #0
   1503e:	it	eq
   15040:	cmpeq	r2, #5
   15042:	beq.n	15090 <btrfs_list_subvols_print@@Base+0x2c0>
   15044:	cmp	r7, #1
   15046:	beq.n	1509a <btrfs_list_subvols_print@@Base+0x2ca>
   15048:	cmp	r7, #2
   1504a:	beq.n	150da <btrfs_list_subvols_print@@Base+0x30a>
   1504c:	cbnz	r7, 15090 <btrfs_list_subvols_print@@Base+0x2c0>
   1504e:	ldr.w	fp, [pc, #260]	; 15154 <btrfs_list_subvols_print@@Base+0x384>
   15052:	mov	r8, r7
   15054:	add	fp, pc
   15056:	ldr.w	r3, [fp, #8]
   1505a:	cbz	r3, 1507c <btrfs_list_subvols_print@@Base+0x2ac>
   1505c:	ldr.w	r2, [fp]
   15060:	mov	r1, sl
   15062:	movs	r0, #1
   15064:	blx	8838 <__printf_chk@plt+0x4>
   15068:	mov	r1, r8
   1506a:	mov	r0, r5
   1506c:	bl	14188 <rb_first_postorder@@Base+0xb72>
   15070:	cmp.w	r8, #9
   15074:	beq.n	1507c <btrfs_list_subvols_print@@Base+0x2ac>
   15076:	movs	r0, #32
   15078:	blx	87d4 <putchar@plt+0x4>
   1507c:	add.w	r8, r8, #1
   15080:	add.w	fp, fp, #12
   15084:	cmp.w	r8, #10
   15088:	bne.n	15056 <btrfs_list_subvols_print@@Base+0x286>
   1508a:	movs	r0, #10
   1508c:	blx	87d4 <putchar@plt+0x4>
   15090:	mov	r0, r4
   15092:	bl	1355a <rb_next@@Base>
   15096:	mov	r4, r0
   15098:	b.n	14ecc <btrfs_list_subvols_print@@Base+0xfc>
   1509a:	ldr.w	r8, [pc, #188]	; 15158 <btrfs_list_subvols_print@@Base+0x388>
   1509e:	mov.w	fp, #0
   150a2:	add	r8, pc
   150a4:	ldr.w	r3, [r8, #8]
   150a8:	cbz	r3, 150ca <btrfs_list_subvols_print@@Base+0x2fa>
   150aa:	mov	r1, fp
   150ac:	mov	r0, r5
   150ae:	bl	14188 <rb_first_postorder@@Base+0xb72>
   150b2:	cmp.w	fp, #9
   150b6:	beq.n	150ca <btrfs_list_subvols_print@@Base+0x2fa>
   150b8:	movs	r0, #9
   150ba:	blx	87d4 <putchar@plt+0x4>
   150be:	cmp.w	fp, #4
   150c2:	bne.n	150ca <btrfs_list_subvols_print@@Base+0x2fa>
   150c4:	movs	r0, #9
   150c6:	blx	87d4 <putchar@plt+0x4>
   150ca:	add.w	fp, fp, #1
   150ce:	add.w	r8, r8, #12
   150d2:	cmp.w	fp, #10
   150d6:	bne.n	150a4 <btrfs_list_subvols_print@@Base+0x2d4>
   150d8:	b.n	1508a <btrfs_list_subvols_print@@Base+0x2ba>
   150da:	ldr.w	fp, [pc, #128]	; 1515c <btrfs_list_subvols_print@@Base+0x38c>
   150de:	mov.w	r8, #0
   150e2:	add	fp, pc
   150e4:	ldr.w	r3, [fp, #8]
   150e8:	cbz	r3, 15100 <btrfs_list_subvols_print@@Base+0x330>
   150ea:	ldr	r3, [sp, #12]
   150ec:	cbz	r3, 150f8 <btrfs_list_subvols_print@@Base+0x328>
   150ee:	mov	r2, r3
   150f0:	mov	r1, r9
   150f2:	movs	r0, #1
   150f4:	blx	8838 <__printf_chk@plt+0x4>
   150f8:	mov	r1, r8
   150fa:	mov	r0, r5
   150fc:	bl	14188 <rb_first_postorder@@Base+0xb72>
   15100:	add.w	r8, r8, #1
   15104:	add.w	fp, fp, #12
   15108:	cmp.w	r8, #10
   1510c:	bne.n	150e4 <btrfs_list_subvols_print@@Base+0x314>
   1510e:	b.n	1508a <btrfs_list_subvols_print@@Base+0x2ba>
   15110:	blt.w	14fe4 <btrfs_list_subvols_print@@Base+0x214>
   15114:	b.n	15022 <btrfs_list_subvols_print@@Base+0x252>
   15116:	mov	r0, r6
   15118:	add	sp, #76	; 0x4c
   1511a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1511e:	nop
   15120:	vaddl.s16	q0, d6, d4
   15124:	lsls	r0, r4, #8
   15126:	movs	r0, r0
   15128:			; <UNDEFINED> instruction: 0xe803ffff
   1512c:	lsls	r2, r0, #12
   1512e:	movs	r5, r0
   15130:	str	r4, [r4, #20]
   15132:	movs	r2, r0
   15134:	bics	r7, r5
   15136:	movs	r2, r0
   15138:	str	r4, [r5, #16]
   1513a:	movs	r2, r0
   1513c:	add	r5, pc, #824	; (adr r5, 15478 <btrfs_list_path_for_root@@Base+0x16c>)
   1513e:	movs	r2, r0
   15140:	str	r4, [r3, #12]
   15142:	movs	r2, r0
   15144:	ldmia.w	pc!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
   15148:	cdp	0, 9, cr0, cr6, cr4, {0}
   1514c:	str	r1, [r6, #4]
   1514e:	movs	r2, r0
   15150:	str	r5, [r7, #0]
   15152:	movs	r2, r0
   15154:	lsls	r0, r5, #3
   15156:	movs	r5, r0
   15158:	lsls	r2, r3, #2
   1515a:	movs	r5, r0
   1515c:	lsls	r2, r3, #1
   1515e:	movs	r5, r0

00015160 <btrfs_get_toplevel_subvol@@Base>:
   15160:	ldr	r2, [pc, #152]	; (151fc <btrfs_get_toplevel_subvol@@Base+0x9c>)
   15162:	ldr	r3, [pc, #156]	; (15200 <btrfs_get_toplevel_subvol@@Base+0xa0>)
   15164:	add	r2, pc
   15166:	push	{r4, r5, r6, r7, lr}
   15168:	sub	sp, #28
   1516a:	ldr	r3, [r2, r3]
   1516c:	mov	r5, r1
   1516e:	add	r1, sp, #8
   15170:	mov	r7, r0
   15172:	ldr	r3, [r3, #0]
   15174:	str	r3, [sp, #20]
   15176:	mov.w	r3, #0
   1517a:	bl	14db4 <btrfs_list_get_path_rootid@@Base>
   1517e:	mov	r4, r0
   15180:	cbnz	r0, 151da <btrfs_get_toplevel_subvol@@Base+0x7a>
   15182:	add	r6, sp, #4
   15184:	mov	r0, r7
   15186:	mov	r1, r6
   15188:	bl	14124 <rb_first_postorder@@Base+0xb0e>
   1518c:	mov	r4, r0
   1518e:	cbnz	r0, 151da <btrfs_get_toplevel_subvol@@Base+0x7a>
   15190:	mov	r0, r6
   15192:	bl	1353a <rb_first@@Base>
   15196:	ldrd	r2, r3, [r0, #24]
   1519a:	mov	r1, r0
   1519c:	cmp	r3, #0
   1519e:	it	eq
   151a0:	cmpeq	r2, #5
   151a2:	bne.n	151ee <btrfs_get_toplevel_subvol@@Base+0x8e>
   151a4:	ldr	r7, [pc, #92]	; (15204 <btrfs_get_toplevel_subvol@@Base+0xa4>)
   151a6:	movs	r2, #140	; 0x8c
   151a8:	mov	r0, r5
   151aa:	add	r7, pc
   151ac:	blx	8480 <memcpy@plt+0x4>
   151b0:	mov	r0, r7
   151b2:	blx	84f8 <strdup@plt+0x4>
   151b6:	str.w	r0, [r5, #140]	; 0x8c
   151ba:	ldr	r0, [pc, #76]	; (15208 <btrfs_get_toplevel_subvol@@Base+0xa8>)
   151bc:	add	r0, pc
   151be:	blx	84f8 <strdup@plt+0x4>
   151c2:	str.w	r0, [r5, #144]	; 0x90
   151c6:	mov	r0, r7
   151c8:	blx	84f8 <strdup@plt+0x4>
   151cc:	ldr	r1, [pc, #60]	; (1520c <btrfs_get_toplevel_subvol@@Base+0xac>)
   151ce:	add	r1, pc
   151d0:	str.w	r0, [r5, #148]	; 0x94
   151d4:	mov	r0, r6
   151d6:	bl	16ff2 <rb_free_nodes@@Base>
   151da:	ldr	r2, [pc, #52]	; (15210 <btrfs_get_toplevel_subvol@@Base+0xb0>)
   151dc:	ldr	r3, [pc, #32]	; (15200 <btrfs_get_toplevel_subvol@@Base+0xa0>)
   151de:	add	r2, pc
   151e0:	ldr	r3, [r2, r3]
   151e2:	ldr	r2, [r3, #0]
   151e4:	ldr	r3, [sp, #20]
   151e6:	eors	r2, r3
   151e8:	beq.n	151f4 <btrfs_get_toplevel_subvol@@Base+0x94>
   151ea:	blx	8510 <__stack_chk_fail@plt>
   151ee:	mvn.w	r4, #1
   151f2:	b.n	151da <btrfs_get_toplevel_subvol@@Base+0x7a>
   151f4:	mov	r0, r4
   151f6:	add	sp, #28
   151f8:	pop	{r4, r5, r6, r7, pc}
   151fa:	nop
   151fc:	stc	0, cr0, [r0], #-16
   15200:	lsls	r0, r4, #8
   15202:	movs	r0, r0
   15204:	ldrh	r1, [r0, r1]
   15206:	movs	r2, r0
   15208:	ldrh	r3, [r1, r6]
   1520a:	movs	r2, r0
   1520c:	b.n	14d9e <btrfs_list_parse_filter_string@@Base+0x2e>
   1520e:	vtbl.8	d30, {d31-<overflow reg d34}, d22
   15212:	movs	r4, r0

00015214 <btrfs_get_subvol@@Base>:
   15214:	ldr	r2, [pc, #228]	; (152fc <btrfs_get_subvol@@Base+0xe8>)
   15216:	ldr	r3, [pc, #232]	; (15300 <btrfs_get_subvol@@Base+0xec>)
   15218:	add	r2, pc
   1521a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1521e:	sub	sp, #28
   15220:	ldr	r3, [r2, r3]
   15222:	mov	r6, r1
   15224:	add	r1, sp, #8
   15226:	mov	r4, r0
   15228:	ldr	r3, [r3, #0]
   1522a:	str	r3, [sp, #20]
   1522c:	mov.w	r3, #0
   15230:	bl	14db4 <btrfs_list_get_path_rootid@@Base>
   15234:	mov	r5, r0
   15236:	cmp	r0, #0
   15238:	bne.n	152be <btrfs_get_subvol@@Base+0xaa>
   1523a:	add	r7, sp, #4
   1523c:	mov	r0, r4
   1523e:	mov	r1, r7
   15240:	bl	14124 <rb_first_postorder@@Base+0xb0e>
   15244:	mov	r5, r0
   15246:	cbnz	r0, 152be <btrfs_get_subvol@@Base+0xaa>
   15248:	mov	r0, r7
   1524a:	add.w	r9, r6, #92	; 0x5c
   1524e:	bl	1353a <rb_first@@Base>
   15252:	mov	r4, r0
   15254:	cbz	r4, 152b4 <btrfs_get_subvol@@Base+0xa0>
   15256:	ldrd	r2, r3, [sp, #8]
   1525a:	mov	r1, r4
   1525c:	mov	r0, r7
   1525e:	bl	13bf4 <rb_first_postorder@@Base+0x5de>
   15262:	cmn.w	r0, #2
   15266:	mov	r8, r0
   15268:	bne.n	15276 <btrfs_get_subvol@@Base+0x62>
   1526a:	mov	r0, r4
   1526c:	bl	1355a <rb_next@@Base>
   15270:	mov	r4, r0
   15272:	mov	r5, r8
   15274:	b.n	15254 <btrfs_get_subvol@@Base+0x40>
   15276:	movs	r2, #0
   15278:	mov	r1, r4
   1527a:	mov	r0, r6
   1527c:	bl	1362c <rb_first_postorder@@Base+0x16>
   15280:	cbnz	r0, 152d2 <btrfs_get_subvol@@Base+0xbe>
   15282:	movs	r2, #140	; 0x8c
   15284:	mov	r1, r4
   15286:	mov	r0, r6
   15288:	blx	8480 <memcpy@plt+0x4>
   1528c:	ldr.w	r0, [r4, #140]	; 0x8c
   15290:	cbnz	r0, 152ec <btrfs_get_subvol@@Base+0xd8>
   15292:	str.w	r0, [r6, #140]	; 0x8c
   15296:	ldr.w	r0, [r4, #144]	; 0x90
   1529a:	cbz	r0, 152a0 <btrfs_get_subvol@@Base+0x8c>
   1529c:	blx	84f8 <strdup@plt+0x4>
   152a0:	str.w	r0, [r6, #144]	; 0x90
   152a4:	ldr.w	r0, [r4, #148]	; 0x94
   152a8:	cbz	r0, 152ae <btrfs_get_subvol@@Base+0x9a>
   152aa:	blx	84f8 <strdup@plt+0x4>
   152ae:	movs	r5, #0
   152b0:	str.w	r0, [r6, #148]	; 0x94
   152b4:	ldr	r1, [pc, #76]	; (15304 <btrfs_get_subvol@@Base+0xf0>)
   152b6:	mov	r0, r7
   152b8:	add	r1, pc
   152ba:	bl	16ff2 <rb_free_nodes@@Base>
   152be:	ldr	r2, [pc, #72]	; (15308 <btrfs_get_subvol@@Base+0xf4>)
   152c0:	ldr	r3, [pc, #60]	; (15300 <btrfs_get_subvol@@Base+0xec>)
   152c2:	add	r2, pc
   152c4:	ldr	r3, [r2, r3]
   152c6:	ldr	r2, [r3, #0]
   152c8:	ldr	r3, [sp, #20]
   152ca:	eors	r2, r3
   152cc:	beq.n	152f2 <btrfs_get_subvol@@Base+0xde>
   152ce:	blx	8510 <__stack_chk_fail@plt>
   152d2:	add.w	r1, r4, #92	; 0x5c
   152d6:	mov	r0, r9
   152d8:	blx	8544 <uuid_compare@plt>
   152dc:	cmp	r0, #0
   152de:	beq.n	15282 <btrfs_get_subvol@@Base+0x6e>
   152e0:	mov	r0, r4
   152e2:	mov	r8, r5
   152e4:	bl	1355a <rb_next@@Base>
   152e8:	mov	r4, r0
   152ea:	b.n	15272 <btrfs_get_subvol@@Base+0x5e>
   152ec:	blx	84f8 <strdup@plt+0x4>
   152f0:	b.n	15292 <btrfs_get_subvol@@Base+0x7e>
   152f2:	mov	r0, r5
   152f4:	add	sp, #28
   152f6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   152fa:	nop
   152fc:	sbc.w	r0, ip, r4
   15300:	lsls	r0, r4, #8
   15302:	movs	r0, r0
   15304:	b.n	14cc2 <btrfs_list_parse_sort_string@@Base+0xd6>
   15306:	vtbx.8	d30, {d31-<overflow reg d33}, d2
   1530a:	movs	r4, r0

0001530c <btrfs_list_path_for_root@@Base>:
   1530c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   15310:	mov	r6, r2
   15312:	ldr	r2, [pc, #168]	; (153bc <btrfs_list_path_for_root@@Base+0xb0>)
   15314:	mov	r7, r3
   15316:	ldr	r3, [pc, #168]	; (153c0 <btrfs_list_path_for_root@@Base+0xb4>)
   15318:	sub	sp, #28
   1531a:	add	r2, pc
   1531c:	add	r1, sp, #8
   1531e:	mov	r5, r0
   15320:	ldr	r3, [r2, r3]
   15322:	ldr	r3, [r3, #0]
   15324:	str	r3, [sp, #20]
   15326:	mov.w	r3, #0
   1532a:	bl	14db4 <btrfs_list_get_path_rootid@@Base>
   1532e:	mov	r9, r0
   15330:	cbz	r0, 15348 <btrfs_list_path_for_root@@Base+0x3c>
   15332:	mov	r4, r0
   15334:	ldr	r2, [pc, #140]	; (153c4 <btrfs_list_path_for_root@@Base+0xb8>)
   15336:	ldr	r3, [pc, #136]	; (153c0 <btrfs_list_path_for_root@@Base+0xb4>)
   15338:	add	r2, pc
   1533a:	ldr	r3, [r2, r3]
   1533c:	ldr	r2, [r3, #0]
   1533e:	ldr	r3, [sp, #20]
   15340:	eors	r2, r3
   15342:	beq.n	153b4 <btrfs_list_path_for_root@@Base+0xa8>
   15344:	blx	8510 <__stack_chk_fail@plt>
   15348:	add.w	r8, sp, #4
   1534c:	mov	r0, r5
   1534e:	mov	r1, r8
   15350:	bl	13e1e <rb_first_postorder@@Base+0x808>
   15354:	subs	r4, r0, #0
   15356:	blt.n	15334 <btrfs_list_path_for_root@@Base+0x28>
   15358:	mov	r1, r8
   1535a:	mov	r0, r5
   1535c:	bl	13df8 <rb_first_postorder@@Base+0x7e2>
   15360:	subs	r4, r0, #0
   15362:	blt.n	15334 <btrfs_list_path_for_root@@Base+0x28>
   15364:	mov	r0, r8
   15366:	mov	r4, r9
   15368:	bl	1354a <rb_last@@Base>
   1536c:	mov	r5, r0
   1536e:	cbnz	r5, 1537c <btrfs_list_path_for_root@@Base+0x70>
   15370:	ldr	r1, [pc, #84]	; (153c8 <btrfs_list_path_for_root@@Base+0xbc>)
   15372:	mov	r0, r8
   15374:	add	r1, pc
   15376:	bl	16ff2 <rb_free_nodes@@Base>
   1537a:	b.n	15334 <btrfs_list_path_for_root@@Base+0x28>
   1537c:	ldrd	r2, r3, [sp, #8]
   15380:	mov	r1, r5
   15382:	mov	r0, r8
   15384:	bl	13bf4 <rb_first_postorder@@Base+0x5de>
   15388:	ldrd	r2, r3, [r5, #24]
   1538c:	adds	r0, #2
   1538e:	bne.n	1539c <btrfs_list_path_for_root@@Base+0x90>
   15390:	cmp	r3, r7
   15392:	it	eq
   15394:	cmpeq	r2, r6
   15396:	bne.n	153aa <btrfs_list_path_for_root@@Base+0x9e>
   15398:	movs	r4, #0
   1539a:	b.n	15370 <btrfs_list_path_for_root@@Base+0x64>
   1539c:	cmp	r3, r7
   1539e:	ittt	eq
   153a0:	cmpeq	r2, r6
   153a2:	ldreq.w	r4, [r5, #148]	; 0x94
   153a6:	streq.w	r9, [r5, #148]	; 0x94
   153aa:	mov	r0, r5
   153ac:	bl	13586 <rb_prev@@Base>
   153b0:	mov	r5, r0
   153b2:	b.n	1536e <btrfs_list_path_for_root@@Base+0x62>
   153b4:	mov	r0, r4
   153b6:	add	sp, #28
   153b8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   153bc:	orn	r0, sl, r4
   153c0:	lsls	r0, r4, #8
   153c2:	movs	r0, r0
   153c4:	orr.w	r0, ip, r4
   153c8:	b.n	14c0e <btrfs_list_parse_sort_string@@Base+0x22>
   153ca:	vtbl.8	d30, {d15-d16}, d29
   153ce:	mvns	r0, r6
   153d0:	ldrd	r2, r3, [r0, #24]
   153d4:	ldrd	ip, r0, [r0, #32]
   153d8:	ldrd	r4, r5, [r1, #8]
   153dc:	adds.w	r8, r2, ip
   153e0:	adc.w	r9, r3, r0
   153e4:	cmp	r5, r9
   153e6:	it	eq
   153e8:	cmpeq	r4, r8
   153ea:	bcs.n	15408 <btrfs_list_path_for_root@@Base+0xfc>
   153ec:	ldrd	r0, r1, [r1, #16]
   153f0:	adds	r6, r4, r0
   153f2:	adc.w	r7, r5, r1
   153f6:	cmp	r3, r7
   153f8:	it	eq
   153fa:	cmpeq	r2, r6
   153fc:	ite	cs
   153fe:	movcs.w	r0, #4294967295	; 0xffffffff
   15402:	movcc	r0, #0
   15404:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   15408:	movs	r0, #1
   1540a:	b.n	15404 <btrfs_list_path_for_root@@Base+0xf8>
   1540c:	ldr	r2, [pc, #64]	; (15450 <btrfs_list_path_for_root@@Base+0x144>)
   1540e:	ldr	r3, [pc, #68]	; (15454 <btrfs_list_path_for_root@@Base+0x148>)
   15410:	add	r2, pc
   15412:	push	{lr}
   15414:	sub	sp, #36	; 0x24
   15416:	ldr	r3, [r2, r3]
   15418:	ldr	r3, [r3, #0]
   1541a:	str	r3, [sp, #28]
   1541c:	mov.w	r3, #0
   15420:	ldrd	r2, r3, [r1, #24]
   15424:	strd	r2, r3, [sp, #8]
   15428:	ldrd	r2, r3, [r1, #32]
   1542c:	mov	r1, sp
   1542e:	strd	r2, r3, [sp, #16]
   15432:	bl	153cc <btrfs_list_path_for_root@@Base+0xc0>
   15436:	ldr	r2, [pc, #32]	; (15458 <btrfs_list_path_for_root@@Base+0x14c>)
   15438:	ldr	r3, [pc, #24]	; (15454 <btrfs_list_path_for_root@@Base+0x148>)
   1543a:	add	r2, pc
   1543c:	ldr	r3, [r2, r3]
   1543e:	ldr	r2, [r3, #0]
   15440:	ldr	r3, [sp, #28]
   15442:	eors	r2, r3
   15444:	beq.n	1544a <btrfs_list_path_for_root@@Base+0x13e>
   15446:	blx	8510 <__stack_chk_fail@plt>
   1544a:	add	sp, #36	; 0x24
   1544c:	ldr.w	pc, [sp], #4
   15450:	ldrd	r0, r0, [r4, #-16]!
   15454:	lsls	r0, r4, #8
   15456:	movs	r0, r0
   15458:	strd	r0, r0, [sl, #-16]
   1545c:	b.w	8430 <free@plt>
   15460:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   15464:	ldrd	r2, r3, [r0, #16]
   15468:	ldrd	r8, r9, [r1]
   1546c:	cmp	r3, r9
   1546e:	it	eq
   15470:	cmpeq	r2, r8
   15472:	bcc.n	154bc <btrfs_list_path_for_root@@Base+0x1b0>
   15474:	cmp	r9, r3
   15476:	it	eq
   15478:	cmpeq	r8, r2
   1547a:	bcc.n	154b6 <btrfs_list_path_for_root@@Base+0x1aa>
   1547c:	ldrd	r2, r3, [r0, #24]
   15480:	ldrd	ip, r0, [r0, #32]
   15484:	ldrd	r8, r9, [r1, #8]
   15488:	adds.w	r6, r2, ip
   1548c:	adc.w	r7, r3, r0
   15490:	cmp	r9, r7
   15492:	it	eq
   15494:	cmpeq	r8, r6
   15496:	bcs.n	154bc <btrfs_list_path_for_root@@Base+0x1b0>
   15498:	ldrd	r0, r1, [r1, #16]
   1549c:	adds.w	r4, r8, r0
   154a0:	adc.w	r5, r9, r1
   154a4:	cmp	r3, r5
   154a6:	it	eq
   154a8:	cmpeq	r2, r4
   154aa:	ite	cs
   154ac:	movcs.w	r0, #4294967295	; 0xffffffff
   154b0:	movcc	r0, #0
   154b2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   154b6:	mov.w	r0, #4294967295	; 0xffffffff
   154ba:	b.n	154b2 <btrfs_list_path_for_root@@Base+0x1a6>
   154bc:	movs	r0, #1
   154be:	b.n	154b2 <btrfs_list_path_for_root@@Base+0x1a6>
   154c0:	ldr	r2, [pc, #72]	; (1550c <btrfs_list_path_for_root@@Base+0x200>)
   154c2:	ldr	r3, [pc, #76]	; (15510 <btrfs_list_path_for_root@@Base+0x204>)
   154c4:	add	r2, pc
   154c6:	push	{lr}
   154c8:	sub	sp, #36	; 0x24
   154ca:	ldr	r3, [r2, r3]
   154cc:	ldr	r3, [r3, #0]
   154ce:	str	r3, [sp, #28]
   154d0:	mov.w	r3, #0
   154d4:	ldrd	r2, r3, [r1, #16]
   154d8:	strd	r2, r3, [sp]
   154dc:	ldrd	r2, r3, [r1, #24]
   154e0:	strd	r2, r3, [sp, #8]
   154e4:	ldrd	r2, r3, [r1, #32]
   154e8:	mov	r1, sp
   154ea:	strd	r2, r3, [sp, #16]
   154ee:	bl	15460 <btrfs_list_path_for_root@@Base+0x154>
   154f2:	ldr	r2, [pc, #32]	; (15514 <btrfs_list_path_for_root@@Base+0x208>)
   154f4:	ldr	r3, [pc, #24]	; (15510 <btrfs_list_path_for_root@@Base+0x204>)
   154f6:	add	r2, pc
   154f8:	ldr	r3, [r2, r3]
   154fa:	ldr	r2, [r3, #0]
   154fc:	ldr	r3, [sp, #28]
   154fe:	eors	r2, r3
   15500:	beq.n	15506 <btrfs_list_path_for_root@@Base+0x1fa>
   15502:	blx	8510 <__stack_chk_fail@plt>
   15506:	add	sp, #36	; 0x24
   15508:	ldr.w	pc, [sp], #4
   1550c:			; <UNDEFINED> instruction: 0xe8c00004
   15510:	lsls	r0, r4, #8
   15512:	movs	r0, r0
   15514:	stmia.w	lr, {r2}
   15518:	ldr.w	ip, [pc, #80]	; 1556c <btrfs_list_path_for_root@@Base+0x260>
   1551c:	ldr	r4, [pc, #80]	; (15570 <btrfs_list_path_for_root@@Base+0x264>)
   1551e:	add	ip, pc
   15520:	ldr	r3, [pc, #80]	; (15574 <btrfs_list_path_for_root@@Base+0x268>)
   15522:	push	{lr}
   15524:	sub	sp, #92	; 0x5c
   15526:	ldr.w	r4, [ip, r4]
   1552a:	add	r3, pc
   1552c:	ldr	r4, [r4, #0]
   1552e:	str	r4, [sp, #84]	; 0x54
   15530:	mov.w	r4, #0
   15534:	ldr	r4, [pc, #64]	; (15578 <btrfs_list_path_for_root@@Base+0x26c>)
   15536:	ldr	r4, [r3, r4]
   15538:	ldr	r3, [pc, #64]	; (1557c <btrfs_list_path_for_root@@Base+0x270>)
   1553a:	strd	r0, r2, [sp, #8]
   1553e:	add	r3, pc
   15540:	ldr	r2, [pc, #60]	; (15580 <btrfs_list_path_for_root@@Base+0x274>)
   15542:	strd	r1, r3, [sp]
   15546:	movs	r1, #1
   15548:	ldr	r3, [pc, #56]	; (15584 <btrfs_list_path_for_root@@Base+0x278>)
   1554a:	add	r2, pc
   1554c:	ldr	r0, [r4, #0]
   1554e:	add	r4, sp, #20
   15550:	add	r3, pc
   15552:	blx	8860 <__fprintf_chk@plt+0x4>
   15556:	movs	r1, #16
   15558:	mov	r0, r4
   1555a:	blx	86c4 <backtrace@plt>
   1555e:	movs	r2, #2
   15560:	mov	r1, r0
   15562:	mov	r0, r4
   15564:	blx	89c8 <backtrace_symbols_fd@plt>
   15568:	blx	8980 <abort@plt>
   1556c:	strd	r0, r0, [r6], #-16
   15570:	lsls	r0, r4, #8
   15572:	movs	r0, r0
   15574:			; <UNDEFINED> instruction: 0xe85a0004
   15578:	lsls	r0, r6, #8
   1557a:	movs	r0, r0
   1557c:	ldrh	r3, [r3, r6]
   1557e:	movs	r2, r0
   15580:	subs	r1, #88	; 0x58
   15582:	movs	r2, r0
   15584:	ldrh	r6, [r5, r4]
   15586:	movs	r2, r0

00015588 <cache_tree_init@@Base>:
   15588:	movs	r3, #0
   1558a:	str	r3, [r0, #0]
   1558c:	bx	lr

0001558e <insert_cache_extent@@Base>:
   1558e:	ldr	r2, [pc, #8]	; (15598 <insert_cache_extent@@Base+0xa>)
   15590:	add	r2, pc
   15592:	b.w	16f6c <rb_insert@@Base>
   15596:	nop
   15598:	mrc2	15, 3, pc, cr9, cr15, {7}

0001559c <add_cache_extent@@Base>:
   1559c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   155a0:	mov	r5, r0
   155a2:	movs	r0, #40	; 0x28
   155a4:	mov	r7, r2
   155a6:	mov	r6, r3
   155a8:	blx	8678 <malloc@plt+0x4>
   155ac:	ldr.w	r8, [pc, #72]	; 155f8 <add_cache_extent@@Base+0x5c>
   155b0:	add	r8, pc
   155b2:	mov	r4, r0
   155b4:	cbz	r0, 155e2 <add_cache_extent@@Base+0x46>
   155b6:	movs	r2, #0
   155b8:	movs	r3, #0
   155ba:	strd	r2, r3, [r0, #16]
   155be:	mov	r1, r0
   155c0:	ldrd	r2, r3, [sp, #24]
   155c4:	strd	r7, r6, [r0, #24]
   155c8:	strd	r2, r3, [r0, #32]
   155cc:	mov	r0, r5
   155ce:	bl	1558e <insert_cache_extent@@Base>
   155d2:	mov	r5, r0
   155d4:	cbz	r0, 155dc <add_cache_extent@@Base+0x40>
   155d6:	mov	r0, r4
   155d8:	blx	8434 <free@plt+0x4>
   155dc:	mov	r0, r5
   155de:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   155e2:	ldr	r3, [pc, #24]	; (155fc <add_cache_extent@@Base+0x60>)
   155e4:	ldr	r0, [pc, #24]	; (15600 <add_cache_extent@@Base+0x64>)
   155e6:	ldr.w	r3, [r8, r3]
   155ea:	add	r0, pc
   155ec:	ldr	r1, [r3, #0]
   155ee:	blx	8968 <fputs@plt+0x4>
   155f2:	movs	r0, #1
   155f4:	blx	873c <exit@plt>
   155f8:	b.n	155a4 <add_cache_extent@@Base+0x8>
   155fa:	movs	r4, r0
   155fc:	lsls	r0, r6, #8
   155fe:	movs	r0, r0
   15600:	ldrsb	r3, [r0, r5]
   15602:	movs	r2, r0

00015604 <insert_cache_extent2@@Base>:
   15604:	ldr	r2, [pc, #4]	; (1560c <insert_cache_extent2@@Base+0x8>)
   15606:	add	r2, pc
   15608:	b.w	16f6c <rb_insert@@Base>
   1560c:	mrc2	15, 5, pc, cr7, cr15, {7}

00015610 <lookup_cache_extent@@Base>:
   15610:	ldr.w	ip, [pc, #72]	; 1565c <lookup_cache_extent@@Base+0x4c>
   15614:	ldr	r1, [pc, #72]	; (15660 <lookup_cache_extent@@Base+0x50>)
   15616:	add	ip, pc
   15618:	push	{lr}
   1561a:	sub	sp, #36	; 0x24
   1561c:	ldr.w	r1, [ip, r1]
   15620:	ldr	r1, [r1, #0]
   15622:	str	r1, [sp, #28]
   15624:	mov.w	r1, #0
   15628:	strd	r2, r3, [sp, #8]
   1562c:	ldrd	r2, r3, [sp, #40]	; 0x28
   15630:	mov	r1, sp
   15632:	strd	r2, r3, [sp, #16]
   15636:	movs	r3, #0
   15638:	ldr	r2, [pc, #40]	; (15664 <lookup_cache_extent@@Base+0x54>)
   1563a:	add	r2, pc
   1563c:	bl	16fb4 <rb_search@@Base>
   15640:	ldr	r2, [pc, #36]	; (15668 <lookup_cache_extent@@Base+0x58>)
   15642:	ldr	r3, [pc, #28]	; (15660 <lookup_cache_extent@@Base+0x50>)
   15644:	add	r2, pc
   15646:	ldr	r3, [r2, r3]
   15648:	ldr	r2, [r3, #0]
   1564a:	ldr	r3, [sp, #28]
   1564c:	eors	r2, r3
   1564e:	beq.n	15654 <lookup_cache_extent@@Base+0x44>
   15650:	blx	8510 <__stack_chk_fail@plt>
   15654:	add	sp, #36	; 0x24
   15656:	ldr.w	pc, [sp], #4
   1565a:	nop
   1565c:	b.n	1553c <btrfs_list_path_for_root@@Base+0x230>
   1565e:	movs	r4, r0
   15660:	lsls	r0, r4, #8
   15662:	movs	r0, r0
   15664:	stc2	15, cr15, [pc, #1020]	; 15a64 <add_merge_cache_extent@@Base+0x284>
   15668:	b.n	154ec <btrfs_list_path_for_root@@Base+0x1e0>
   1566a:	movs	r4, r0

0001566c <lookup_cache_extent2@@Base>:
   1566c:	ldr.w	ip, [pc, #80]	; 156c0 <lookup_cache_extent2@@Base+0x54>
   15670:	ldr	r1, [pc, #80]	; (156c4 <lookup_cache_extent2@@Base+0x58>)
   15672:	add	ip, pc
   15674:	push	{lr}
   15676:	sub	sp, #36	; 0x24
   15678:	ldr.w	r1, [ip, r1]
   1567c:	ldr	r1, [r1, #0]
   1567e:	str	r1, [sp, #28]
   15680:	mov.w	r1, #0
   15684:	strd	r2, r3, [sp]
   15688:	ldrd	r2, r3, [sp, #40]	; 0x28
   1568c:	mov	r1, sp
   1568e:	strd	r2, r3, [sp, #8]
   15692:	ldrd	r2, r3, [sp, #48]	; 0x30
   15696:	strd	r2, r3, [sp, #16]
   1569a:	movs	r3, #0
   1569c:	ldr	r2, [pc, #40]	; (156c8 <lookup_cache_extent2@@Base+0x5c>)
   1569e:	add	r2, pc
   156a0:	bl	16fb4 <rb_search@@Base>
   156a4:	ldr	r2, [pc, #36]	; (156cc <lookup_cache_extent2@@Base+0x60>)
   156a6:	ldr	r3, [pc, #28]	; (156c4 <lookup_cache_extent2@@Base+0x58>)
   156a8:	add	r2, pc
   156aa:	ldr	r3, [r2, r3]
   156ac:	ldr	r2, [r3, #0]
   156ae:	ldr	r3, [sp, #28]
   156b0:	eors	r2, r3
   156b2:	beq.n	156b8 <lookup_cache_extent2@@Base+0x4c>
   156b4:	blx	8510 <__stack_chk_fail@plt>
   156b8:	add	sp, #36	; 0x24
   156ba:	ldr.w	pc, [sp], #4
   156be:	nop
   156c0:	b.n	154e8 <btrfs_list_path_for_root@@Base+0x1dc>
   156c2:	movs	r4, r0
   156c4:	lsls	r0, r4, #8
   156c6:	movs	r0, r0
   156c8:	ldc2	15, cr15, [pc, #1020]!	; 15ac8 <add_merge_cache_extent@@Base+0x2e8>
   156cc:	b.n	15488 <btrfs_list_path_for_root@@Base+0x17c>
   156ce:	movs	r4, r0

000156d0 <search_cache_extent@@Base>:
   156d0:	ldr.w	ip, [pc, #76]	; 15720 <search_cache_extent@@Base+0x50>
   156d4:	ldr	r1, [pc, #76]	; (15724 <search_cache_extent@@Base+0x54>)
   156d6:	add	ip, pc
   156d8:	push	{lr}
   156da:	sub	sp, #44	; 0x2c
   156dc:	ldr.w	r1, [ip, r1]
   156e0:	ldr	r1, [r1, #0]
   156e2:	str	r1, [sp, #36]	; 0x24
   156e4:	mov.w	r1, #0
   156e8:	strd	r2, r3, [sp, #16]
   156ec:	movs	r2, #1
   156ee:	movs	r3, #0
   156f0:	strd	r2, r3, [sp, #24]
   156f4:	add	r1, sp, #8
   156f6:	ldr	r2, [pc, #48]	; (15728 <search_cache_extent@@Base+0x58>)
   156f8:	add	r3, sp, #4
   156fa:	add	r2, pc
   156fc:	bl	16fb4 <rb_search@@Base>
   15700:	cbnz	r0, 15704 <search_cache_extent@@Base+0x34>
   15702:	ldr	r0, [sp, #4]
   15704:	ldr	r2, [pc, #36]	; (1572c <search_cache_extent@@Base+0x5c>)
   15706:	ldr	r3, [pc, #28]	; (15724 <search_cache_extent@@Base+0x54>)
   15708:	add	r2, pc
   1570a:	ldr	r3, [r2, r3]
   1570c:	ldr	r2, [r3, #0]
   1570e:	ldr	r3, [sp, #36]	; 0x24
   15710:	eors	r2, r3
   15712:	beq.n	15718 <search_cache_extent@@Base+0x48>
   15714:	blx	8510 <__stack_chk_fail@plt>
   15718:	add	sp, #44	; 0x2c
   1571a:	ldr.w	pc, [sp], #4
   1571e:	nop
   15720:	b.n	15480 <btrfs_list_path_for_root@@Base+0x174>
   15722:	movs	r4, r0
   15724:	lsls	r0, r4, #8
   15726:	movs	r0, r0
   15728:	stc2l	15, cr15, [pc], {255}	; 0xff
   1572c:	b.n	15428 <btrfs_list_path_for_root@@Base+0x11c>
   1572e:	movs	r4, r0

00015730 <search_cache_extent2@@Base>:
   15730:	ldr.w	ip, [pc, #84]	; 15788 <search_cache_extent2@@Base+0x58>
   15734:	ldr	r1, [pc, #84]	; (1578c <search_cache_extent2@@Base+0x5c>)
   15736:	add	ip, pc
   15738:	push	{lr}
   1573a:	sub	sp, #44	; 0x2c
   1573c:	ldr.w	r1, [ip, r1]
   15740:	ldr	r1, [r1, #0]
   15742:	str	r1, [sp, #36]	; 0x24
   15744:	mov.w	r1, #0
   15748:	strd	r2, r3, [sp, #8]
   1574c:	ldrd	r2, r3, [sp, #48]	; 0x30
   15750:	add	r1, sp, #8
   15752:	strd	r2, r3, [sp, #16]
   15756:	movs	r2, #1
   15758:	movs	r3, #0
   1575a:	strd	r2, r3, [sp, #24]
   1575e:	ldr	r2, [pc, #48]	; (15790 <search_cache_extent2@@Base+0x60>)
   15760:	add	r3, sp, #4
   15762:	add	r2, pc
   15764:	bl	16fb4 <rb_search@@Base>
   15768:	cbnz	r0, 1576c <search_cache_extent2@@Base+0x3c>
   1576a:	ldr	r0, [sp, #4]
   1576c:	ldr	r2, [pc, #36]	; (15794 <search_cache_extent2@@Base+0x64>)
   1576e:	ldr	r3, [pc, #28]	; (1578c <search_cache_extent2@@Base+0x5c>)
   15770:	add	r2, pc
   15772:	ldr	r3, [r2, r3]
   15774:	ldr	r2, [r3, #0]
   15776:	ldr	r3, [sp, #36]	; 0x24
   15778:	eors	r2, r3
   1577a:	beq.n	15780 <search_cache_extent2@@Base+0x50>
   1577c:	blx	8510 <__stack_chk_fail@plt>
   15780:	add	sp, #44	; 0x2c
   15782:	ldr.w	pc, [sp], #4
   15786:	nop
   15788:	b.n	15428 <btrfs_list_path_for_root@@Base+0x11c>
   1578a:	movs	r4, r0
   1578c:	lsls	r0, r4, #8
   1578e:	movs	r0, r0
   15790:	ldc2l	15, cr15, [fp], #1020	; 0x3fc
   15794:	b.n	153c0 <btrfs_list_path_for_root@@Base+0xb4>
   15796:	movs	r4, r0

00015798 <first_cache_extent@@Base>:
   15798:	b.w	1353a <rb_first@@Base>

0001579c <last_cache_extent@@Base>:
   1579c:	b.w	1354a <rb_last@@Base>

000157a0 <prev_cache_extent@@Base>:
   157a0:	b.w	13586 <rb_prev@@Base>

000157a4 <next_cache_extent@@Base>:
   157a4:	b.w	1355a <rb_next@@Base>

000157a8 <remove_cache_extent@@Base>:
   157a8:	mov	r3, r1
   157aa:	mov	r1, r0
   157ac:	mov	r0, r3
   157ae:	b.w	132c4 <rb_erase@@Base>

000157b2 <cache_tree_free_extents@@Base>:
   157b2:	push	{r4, r5, r6, lr}
   157b4:	mov	r5, r0
   157b6:	mov	r6, r1
   157b8:	mov	r0, r5
   157ba:	bl	15798 <first_cache_extent@@Base>
   157be:	mov	r4, r0
   157c0:	cbnz	r0, 157c4 <cache_tree_free_extents@@Base+0x12>
   157c2:	pop	{r4, r5, r6, pc}
   157c4:	mov	r0, r5
   157c6:	mov	r1, r4
   157c8:	bl	157a8 <remove_cache_extent@@Base>
   157cc:	mov	r0, r4
   157ce:	blx	r6
   157d0:	b.n	157b8 <cache_tree_free_extents@@Base+0x6>

000157d2 <free_extent_cache_tree@@Base>:
   157d2:	ldr	r1, [pc, #8]	; (157dc <free_extent_cache_tree@@Base+0xa>)
   157d4:	add	r1, pc
   157d6:	b.w	157b2 <cache_tree_free_extents@@Base>
   157da:	nop
   157dc:	stc2	15, cr15, [r5], {255}	; 0xff

000157e0 <add_merge_cache_extent@@Base>:
   157e0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157e4:	sub	sp, #36	; 0x24
   157e6:	ldr	r4, [r0, #0]
   157e8:	mov	r5, r0
   157ea:	ldr	r1, [sp, #72]	; 0x48
   157ec:	mov	sl, r2
   157ee:	mov	fp, r3
   157f0:	str	r1, [sp, #0]
   157f2:	ldr	r1, [sp, #76]	; 0x4c
   157f4:	str	r1, [sp, #4]
   157f6:	cmp	r4, #0
   157f8:	beq.w	15952 <add_merge_cache_extent@@Base+0x172>
   157fc:	bl	156d0 <search_cache_extent@@Base>
   15800:	mov	r7, r0
   15802:	cbnz	r0, 15814 <add_merge_cache_extent@@Base+0x34>
   15804:	mov	r0, r5
   15806:	bl	1579c <last_cache_extent@@Base>
   1580a:	mov	r4, r0
   1580c:	cmp	r0, #0
   1580e:	bne.n	15884 <add_merge_cache_extent@@Base+0xa4>
   15810:	movs	r7, #0
   15812:	b.n	158c2 <add_merge_cache_extent@@Base+0xe2>
   15814:	ldrd	r2, r3, [r0, #24]
   15818:	cmp	r3, fp
   1581a:	it	eq
   1581c:	cmpeq	r2, sl
   1581e:	bcc.n	1584e <add_merge_cache_extent@@Base+0x6e>
   15820:	bl	157a0 <prev_cache_extent@@Base>
   15824:	mov	r4, r0
   15826:	mov	r0, r7
   15828:	ldr	r3, [sp, #0]
   1582a:	adds.w	r3, sl, r3
   1582e:	str	r3, [sp, #8]
   15830:	ldr	r3, [sp, #4]
   15832:	adc.w	r3, fp, r3
   15836:	str	r3, [sp, #12]
   15838:	ldrd	r6, r7, [sp, #8]
   1583c:	ldrd	r2, r3, [r0, #24]
   15840:	cmp	r3, r7
   15842:	it	eq
   15844:	cmpeq	r2, r6
   15846:	bcc.w	1595a <add_merge_cache_extent@@Base+0x17a>
   1584a:	cbz	r4, 1588c <add_merge_cache_extent@@Base+0xac>
   1584c:	b.n	15858 <add_merge_cache_extent@@Base+0x78>
   1584e:	bl	157a4 <next_cache_extent@@Base>
   15852:	mov	r4, r7
   15854:	cmp	r0, #0
   15856:	bne.n	15828 <add_merge_cache_extent@@Base+0x48>
   15858:	ldrd	r2, r1, [r4, #32]
   1585c:	ldrd	r3, r7, [r4, #24]
   15860:	adds	r3, r3, r2
   15862:	str	r3, [sp, #16]
   15864:	adc.w	r3, r7, r1
   15868:	str	r3, [sp, #20]
   1586a:	ldrd	r2, r3, [sp, #16]
   1586e:	cmp	fp, r3
   15870:	it	eq
   15872:	cmpeq	sl, r2
   15874:	bcs.n	15888 <add_merge_cache_extent@@Base+0xa8>
   15876:	ldr	r0, [pc, #248]	; (15970 <add_merge_cache_extent@@Base+0x190>)
   15878:	movs	r2, #1
   1587a:	mov.w	r1, #306	; 0x132
   1587e:	add	r0, pc
   15880:	bl	15518 <btrfs_list_path_for_root@@Base+0x20c>
   15884:	mov	r0, r7
   15886:	b.n	15858 <add_merge_cache_extent@@Base+0x78>
   15888:	cmp	r0, #0
   1588a:	beq.n	15810 <add_merge_cache_extent@@Base+0x30>
   1588c:	ldr	r1, [sp, #0]
   1588e:	ldrd	r2, r3, [r0, #24]
   15892:	adds.w	r8, sl, r1
   15896:	ldr	r1, [sp, #4]
   15898:	adc.w	r9, fp, r1
   1589c:	cmp	r9, r3
   1589e:	it	eq
   158a0:	cmpeq	r8, r2
   158a2:	bne.n	15810 <add_merge_cache_extent@@Base+0x30>
   158a4:	ldrd	r3, r2, [r0, #32]
   158a8:	movs	r7, #1
   158aa:	strd	sl, fp, [r0, #24]
   158ae:	adds.w	r3, r8, r3
   158b2:	adc.w	r2, r9, r2
   158b6:	subs.w	r3, r3, sl
   158ba:	sbc.w	r2, r2, fp
   158be:	strd	r3, r2, [r0, #32]
   158c2:	cbz	r4, 15918 <add_merge_cache_extent@@Base+0x138>
   158c4:	ldrd	ip, lr, [r4, #24]
   158c8:	ldr	r3, [r4, #32]
   158ca:	adds.w	r3, ip, r3
   158ce:	str	r3, [sp, #24]
   158d0:	ldr	r3, [r4, #36]	; 0x24
   158d2:	adc.w	r3, lr, r3
   158d6:	str	r3, [sp, #28]
   158d8:	ldrd	r2, r3, [sp, #24]
   158dc:	cmp	r3, fp
   158de:	it	eq
   158e0:	cmpeq	r2, sl
   158e2:	bne.n	15956 <add_merge_cache_extent@@Base+0x176>
   158e4:	cbz	r7, 15936 <add_merge_cache_extent@@Base+0x156>
   158e6:	ldrd	r3, r2, [r0, #24]
   158ea:	ldr	r1, [r0, #32]
   158ec:	adds	r3, r3, r1
   158ee:	ldr	r1, [r0, #36]	; 0x24
   158f0:	adc.w	r2, r1, r2
   158f4:	subs.w	r3, r3, ip
   158f8:	sbc.w	r2, r2, lr
   158fc:	strd	r3, r2, [r0, #32]
   15900:	ldrd	r2, r3, [r4, #24]
   15904:	mov	r1, r4
   15906:	strd	r2, r3, [r0, #24]
   1590a:	mov	r0, r5
   1590c:	bl	157a8 <remove_cache_extent@@Base>
   15910:	mov	r0, r4
   15912:	blx	8434 <free@plt+0x4>
   15916:	mov	r4, r7
   15918:	orrs.w	r3, r7, r4
   1591c:	bne.n	15966 <add_merge_cache_extent@@Base+0x186>
   1591e:	ldr	r3, [sp, #0]
   15920:	mov	r2, sl
   15922:	mov	r0, r5
   15924:	str	r3, [sp, #72]	; 0x48
   15926:	ldr	r3, [sp, #4]
   15928:	str	r3, [sp, #76]	; 0x4c
   1592a:	mov	r3, fp
   1592c:	add	sp, #36	; 0x24
   1592e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15932:	b.w	1559c <add_cache_extent@@Base>
   15936:	ldr	r3, [sp, #0]
   15938:	adds.w	r1, sl, r3
   1593c:	ldr	r3, [sp, #4]
   1593e:	adc.w	r2, fp, r3
   15942:	subs.w	r1, r1, ip
   15946:	sbc.w	r2, r2, lr
   1594a:	strd	r1, r2, [r4, #32]
   1594e:	movs	r4, #1
   15950:	b.n	15918 <add_merge_cache_extent@@Base+0x138>
   15952:	mov	r7, r4
   15954:	b.n	15918 <add_merge_cache_extent@@Base+0x138>
   15956:	movs	r4, #0
   15958:	b.n	15918 <add_merge_cache_extent@@Base+0x138>
   1595a:	ldr	r0, [pc, #24]	; (15974 <add_merge_cache_extent@@Base+0x194>)
   1595c:	movs	r2, #1
   1595e:	movw	r1, #305	; 0x131
   15962:	add	r0, pc
   15964:	b.n	15880 <add_merge_cache_extent@@Base+0xa0>
   15966:	movs	r0, #0
   15968:	add	sp, #36	; 0x24
   1596a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1596e:	nop
   15970:	ldr	r7, [r1, r0]
   15972:	movs	r2, r0
   15974:	ldrsb	r4, [r2, r5]
   15976:	movs	r2, r0
   15978:	ldrd	r3, r2, [r0, #48]	; 0x30
   1597c:	push	{r4, lr}
   1597e:	adds	r3, #1
   15980:	ldrd	r1, r4, [r0, #40]	; 0x28
   15984:	adc.w	r2, r2, #0
   15988:	subs	r3, r3, r1
   1598a:	sbc.w	r2, r2, r4
   1598e:	strd	r1, r4, [r0, #24]
   15992:	strd	r3, r2, [r0, #32]
   15996:	pop	{r4, pc}
   15998:	push	{r3, lr}
   1599a:	movs	r0, #72	; 0x48
   1599c:	blx	8678 <malloc@plt+0x4>
   159a0:	cbz	r0, 159b8 <add_merge_cache_extent@@Base+0x1d8>
   159a2:	movs	r2, #0
   159a4:	movs	r3, #0
   159a6:	mov.w	ip, #1
   159aa:	movs	r1, #0
   159ac:	strd	r2, r3, [r0, #16]
   159b0:	strd	ip, r1, [r0, #56]	; 0x38
   159b4:	strd	r2, r3, [r0, #64]	; 0x40
   159b8:	pop	{r3, pc}
   159ba:	push	{r3, r4, r5, r6, r7, lr}
   159bc:	mov	r4, r0
   159be:	ldr	r7, [sp, #24]
   159c0:	movs	r0, #1
   159c2:	mov	r6, r2
   159c4:	mov	r5, r3
   159c6:	add.w	r1, r7, #96	; 0x60
   159ca:	blx	839c <calloc@plt+0x4>
   159ce:	cbz	r0, 15a0e <add_merge_cache_extent@@Base+0x22e>
   159d0:	movs	r3, #1
   159d2:	movs	r1, #0
   159d4:	mov.w	r2, #4294967295	; 0xffffffff
   159d8:	strd	r3, r1, [r0, #80]	; 0x50
   159dc:	str	r4, [r0, #92]	; 0x5c
   159de:	mov.w	r3, #4294967295	; 0xffffffff
   159e2:	adds	r4, #64	; 0x40
   159e4:	str	r3, [r0, #88]	; 0x58
   159e6:	strd	r6, r5, [r0, #40]	; 0x28
   159ea:	mov.w	r3, #4294967295	; 0xffffffff
   159ee:	str	r7, [r0, #76]	; 0x4c
   159f0:	strd	r2, r3, [r0, #48]	; 0x30
   159f4:	add.w	r3, r0, #68	; 0x44
   159f8:	strd	r6, r5, [r0, #24]
   159fc:	strd	r3, r3, [r0, #68]	; 0x44
   15a00:	add.w	r3, r0, #60	; 0x3c
   15a04:	strd	r7, r1, [r0, #32]
   15a08:	str	r4, [r0, #56]	; 0x38
   15a0a:	strd	r3, r3, [r0, #60]	; 0x3c
   15a0e:	pop	{r3, r4, r5, r6, r7, pc}
   15a10:	ldr.w	ip, [pc, #104]	; 15a7c <add_merge_cache_extent@@Base+0x29c>
   15a14:	push	{r4, r5, lr}
   15a16:	add	ip, pc
   15a18:	ldr	r5, [pc, #100]	; (15a80 <add_merge_cache_extent@@Base+0x2a0>)
   15a1a:	sub	sp, #92	; 0x5c
   15a1c:	ldr	r4, [pc, #100]	; (15a84 <add_merge_cache_extent@@Base+0x2a4>)
   15a1e:	ldr.w	r5, [ip, r5]
   15a22:	add	r4, pc
   15a24:	ldr	r5, [r5, #0]
   15a26:	str	r5, [sp, #84]	; 0x54
   15a28:	mov.w	r5, #0
   15a2c:	cbz	r3, 15a62 <add_merge_cache_extent@@Base+0x282>
   15a2e:	ldr	r5, [pc, #88]	; (15a88 <add_merge_cache_extent@@Base+0x2a8>)
   15a30:	ldr	r4, [r4, r5]
   15a32:	strd	r2, r1, [sp]
   15a36:	movs	r1, #1
   15a38:	strd	r0, r3, [sp, #8]
   15a3c:	ldr	r2, [pc, #76]	; (15a8c <add_merge_cache_extent@@Base+0x2ac>)
   15a3e:	ldr	r3, [pc, #80]	; (15a90 <add_merge_cache_extent@@Base+0x2b0>)
   15a40:	ldr	r0, [r4, #0]
   15a42:	add	r4, sp, #20
   15a44:	add	r3, pc
   15a46:	add	r2, pc
   15a48:	blx	8860 <__fprintf_chk@plt+0x4>
   15a4c:	movs	r1, #16
   15a4e:	mov	r0, r4
   15a50:	blx	86c4 <backtrace@plt>
   15a54:	movs	r2, #2
   15a56:	mov	r1, r0
   15a58:	mov	r0, r4
   15a5a:	blx	89c8 <backtrace_symbols_fd@plt>
   15a5e:	blx	8980 <abort@plt>
   15a62:	ldr	r2, [pc, #48]	; (15a94 <add_merge_cache_extent@@Base+0x2b4>)
   15a64:	ldr	r3, [pc, #24]	; (15a80 <add_merge_cache_extent@@Base+0x2a0>)
   15a66:	add	r2, pc
   15a68:	ldr	r3, [r2, r3]
   15a6a:	ldr	r2, [r3, #0]
   15a6c:	ldr	r3, [sp, #84]	; 0x54
   15a6e:	eors	r2, r3
   15a70:	beq.n	15a76 <add_merge_cache_extent@@Base+0x296>
   15a72:	blx	8510 <__stack_chk_fail@plt>
   15a76:	add	sp, #92	; 0x5c
   15a78:	pop	{r4, r5, pc}
   15a7a:	nop
   15a7c:	b.n	1615c <set_extent_bits@@Base+0x1ac>
   15a7e:	movs	r4, r0
   15a80:	lsls	r0, r4, #8
   15a82:	movs	r0, r0
   15a84:	b.n	1614c <set_extent_bits@@Base+0x19c>
   15a86:	movs	r4, r0
   15a88:	lsls	r0, r6, #8
   15a8a:	movs	r0, r0
   15a8c:	adds	r4, #92	; 0x5c
   15a8e:	movs	r2, r0
   15a90:	ldrsb	r4, [r5, r2]
   15a92:	movs	r2, r0
   15a94:	b.n	160d4 <set_extent_bits@@Base+0x124>
   15a96:	movs	r4, r0
   15a98:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   15a9c:	mov	r4, r2
   15a9e:	ldrd	r2, r3, [r1, #40]	; 0x28
   15aa2:	mov	r5, r1
   15aa4:	ldrd	r6, r8, [sp, #24]
   15aa8:	mov	r7, r0
   15aaa:	mov	r0, r4
   15aac:	strd	r2, r3, [r4, #40]	; 0x28
   15ab0:	adds.w	r2, r6, #4294967295	; 0xffffffff
   15ab4:	adc.w	r3, r8, #4294967295	; 0xffffffff
   15ab8:	strd	r2, r3, [r4, #48]	; 0x30
   15abc:	ldr	r3, [r1, #60]	; 0x3c
   15abe:	str	r3, [r4, #60]	; 0x3c
   15ac0:	bl	15978 <add_merge_cache_extent@@Base+0x198>
   15ac4:	mov	r0, r5
   15ac6:	strd	r6, r8, [r5, #40]	; 0x28
   15aca:	bl	15978 <add_merge_cache_extent@@Base+0x198>
   15ace:	mov	r1, r4
   15ad0:	mov	r0, r7
   15ad2:	bl	1558e <insert_cache_extent@@Base>
   15ad6:	ldr	r1, [pc, #20]	; (15aec <add_merge_cache_extent@@Base+0x30c>)
   15ad8:	movs	r2, #185	; 0xb9
   15ada:	add	r1, pc
   15adc:	mov	r3, r0
   15ade:	ldr	r0, [pc, #16]	; (15af0 <add_merge_cache_extent@@Base+0x310>)
   15ae0:	add	r0, pc
   15ae2:	bl	15a10 <add_merge_cache_extent@@Base+0x230>
   15ae6:	movs	r0, #0
   15ae8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   15aec:	ldrsb	r2, [r3, r6]
   15aee:	movs	r2, r0
   15af0:	subs	r2, #4
   15af2:	movs	r2, r0
   15af4:	ldr	r1, [pc, #124]	; (15b74 <add_merge_cache_extent@@Base+0x394>)
   15af6:	movw	r2, #649	; 0x289
   15afa:	push	{r3, r4, r5, lr}
   15afc:	mov	r4, r0
   15afe:	ldr	r5, [r0, #56]	; 0x38
   15b00:	add	r1, pc
   15b02:	ldr	r3, [r0, #80]	; 0x50
   15b04:	adds	r1, #12
   15b06:	ldr	r0, [pc, #112]	; (15b78 <add_merge_cache_extent@@Base+0x398>)
   15b08:	add	r0, pc
   15b0a:	bl	15a10 <add_merge_cache_extent@@Base+0x230>
   15b0e:	cbz	r5, 15b6e <add_merge_cache_extent@@Base+0x38e>
   15b10:	ldrd	r2, r3, [r5, #16]
   15b14:	movs	r1, #0
   15b16:	ldr	r0, [r4, #76]	; 0x4c
   15b18:	cmp	r3, r1
   15b1a:	it	eq
   15b1c:	cmpeq	r2, r0
   15b1e:	ite	cc
   15b20:	movcc	r3, #1
   15b22:	movcs	r3, #0
   15b24:	ldr	r1, [pc, #84]	; (15b7c <add_merge_cache_extent@@Base+0x39c>)
   15b26:	movw	r2, #650	; 0x28a
   15b2a:	ldr	r0, [pc, #84]	; (15b80 <add_merge_cache_extent@@Base+0x3a0>)
   15b2c:	add	r1, pc
   15b2e:	adds	r1, #12
   15b30:	add	r0, pc
   15b32:	bl	15a10 <add_merge_cache_extent@@Base+0x230>
   15b36:	ldrd	r1, r2, [r4, #60]	; 0x3c
   15b3a:	add.w	r3, r4, #60	; 0x3c
   15b3e:	str	r2, [r1, #4]
   15b40:	str	r1, [r2, #0]
   15b42:	strd	r3, r3, [r4, #60]	; 0x3c
   15b46:	ldr	r3, [r4, #84]	; 0x54
   15b48:	lsls	r3, r3, #20
   15b4a:	bmi.n	15b64 <add_merge_cache_extent@@Base+0x384>
   15b4c:	mov	r1, r4
   15b4e:	adds	r0, r5, #4
   15b50:	bl	157a8 <remove_cache_extent@@Base>
   15b54:	ldrd	r2, r3, [r5, #16]
   15b58:	ldr	r1, [r4, #76]	; 0x4c
   15b5a:	subs	r2, r2, r1
   15b5c:	sbc.w	r3, r3, #0
   15b60:	strd	r2, r3, [r5, #16]
   15b64:	mov	r0, r4
   15b66:	ldmia.w	sp!, {r3, r4, r5, lr}
   15b6a:	b.w	8430 <free@plt>
   15b6e:	mov	r3, r5
   15b70:	b.n	15b24 <add_merge_cache_extent@@Base+0x344>
   15b72:	nop
   15b74:	ldrsb	r4, [r6, r5]
   15b76:	movs	r2, r0
   15b78:	strb	r4, [r6, r7]
   15b7a:	movs	r2, r0
   15b7c:	ldrsb	r0, [r1, r5]
   15b7e:	movs	r2, r0
   15b80:	strb	r5, [r2, r7]
   15b82:	movs	r2, r0
   15b84:	push	{r3, r4, r5, lr}
   15b86:	mov	r4, r0
   15b88:	ldr	r5, [r0, #56]	; 0x38
   15b8a:	movs	r2, #67	; 0x43
   15b8c:	ldr	r1, [pc, #32]	; (15bb0 <add_merge_cache_extent@@Base+0x3d0>)
   15b8e:	subs	r5, #1
   15b90:	str	r5, [r0, #56]	; 0x38
   15b92:	ldr	r0, [pc, #32]	; (15bb4 <add_merge_cache_extent@@Base+0x3d4>)
   15b94:	add	r1, pc
   15b96:	lsrs	r3, r5, #31
   15b98:	adds	r1, #37	; 0x25
   15b9a:	add	r0, pc
   15b9c:	bl	15a10 <add_merge_cache_extent@@Base+0x230>
   15ba0:	cbnz	r5, 15bac <add_merge_cache_extent@@Base+0x3cc>
   15ba2:	mov	r0, r4
   15ba4:	ldmia.w	sp!, {r3, r4, r5, lr}
   15ba8:	b.w	8430 <free@plt>
   15bac:	pop	{r3, r4, r5, pc}
   15bae:	nop
   15bb0:	ldrsb	r0, [r4, r3]
   15bb2:	movs	r2, r0
   15bb4:	strb	r6, [r1, r6]
   15bb6:	movs	r2, r0
   15bb8:	b.n	15b84 <add_merge_cache_extent@@Base+0x3a4>
   15bba:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   15bbe:	mov	r5, r0
   15bc0:	ldr	r3, [r1, #60]	; 0x3c
   15bc2:	mov	r4, r1
   15bc4:	tst.w	r3, #10
   15bc8:	bne.n	15c50 <add_merge_cache_extent@@Base+0x470>
   15bca:	mov	r0, r1
   15bcc:	bl	157a0 <prev_cache_extent@@Base>
   15bd0:	mov	sl, r0
   15bd2:	cbz	r0, 15c10 <add_merge_cache_extent@@Base+0x430>
   15bd4:	ldrd	r3, r2, [r4, #40]	; 0x28
   15bd8:	adds.w	r8, r3, #4294967295	; 0xffffffff
   15bdc:	adc.w	r9, r2, #4294967295	; 0xffffffff
   15be0:	ldrd	r2, r3, [r0, #48]	; 0x30
   15be4:	cmp	r3, r9
   15be6:	it	eq
   15be8:	cmpeq	r2, r8
   15bea:	bne.n	15c10 <add_merge_cache_extent@@Base+0x430>
   15bec:	ldr	r2, [r0, #60]	; 0x3c
   15bee:	ldr	r3, [r4, #60]	; 0x3c
   15bf0:	cmp	r2, r3
   15bf2:	bne.n	15c10 <add_merge_cache_extent@@Base+0x430>
   15bf4:	ldrd	r2, r3, [r0, #40]	; 0x28
   15bf8:	mov	r0, r4
   15bfa:	strd	r2, r3, [r4, #40]	; 0x28
   15bfe:	bl	15978 <add_merge_cache_extent@@Base+0x198>
   15c02:	mov	r0, r5
   15c04:	mov	r1, sl
   15c06:	bl	157a8 <remove_cache_extent@@Base>
   15c0a:	mov	r0, sl
   15c0c:	bl	15b84 <add_merge_cache_extent@@Base+0x3a4>
   15c10:	mov	r0, r4
   15c12:	bl	157a4 <next_cache_extent@@Base>
   15c16:	cbz	r0, 15c50 <add_merge_cache_extent@@Base+0x470>
   15c18:	ldrd	r3, r2, [r4, #48]	; 0x30
   15c1c:	adds	r6, r3, #1
   15c1e:	adc.w	r7, r2, #0
   15c22:	ldrd	r2, r3, [r0, #40]	; 0x28
   15c26:	cmp	r3, r7
   15c28:	it	eq
   15c2a:	cmpeq	r2, r6
   15c2c:	bne.n	15c50 <add_merge_cache_extent@@Base+0x470>
   15c2e:	ldr	r2, [r0, #60]	; 0x3c
   15c30:	ldr	r3, [r4, #60]	; 0x3c
   15c32:	cmp	r2, r3
   15c34:	bne.n	15c50 <add_merge_cache_extent@@Base+0x470>
   15c36:	ldrd	r2, r3, [r4, #40]	; 0x28
   15c3a:	strd	r2, r3, [r0, #40]	; 0x28
   15c3e:	bl	15978 <add_merge_cache_extent@@Base+0x198>
   15c42:	mov	r0, r5
   15c44:	mov	r1, r4
   15c46:	bl	157a8 <remove_cache_extent@@Base>
   15c4a:	mov	r0, r4
   15c4c:	bl	15b84 <add_merge_cache_extent@@Base+0x3a4>
   15c50:	movs	r0, #0
   15c52:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   15c56:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   15c5a:	mov	r5, r0
   15c5c:	ldrd	r8, r9, [sp, #32]
   15c60:	mov	r4, r1
   15c62:	ldr.w	sl, [pc, #96]	; 15cc4 <add_merge_cache_extent@@Base+0x4e4>
   15c66:	mov	r7, r3
   15c68:	cmp	r9, r3
   15c6a:	ldr	r0, [pc, #92]	; (15cc8 <add_merge_cache_extent@@Base+0x4e8>)
   15c6c:	add	sl, pc
   15c6e:	it	eq
   15c70:	cmpeq	r8, r2
   15c72:	add.w	sl, sl, #61	; 0x3d
   15c76:	mov	r6, r2
   15c78:	ite	cc
   15c7a:	movcc	r3, #1
   15c7c:	movcs	r3, #0
   15c7e:	mov	r1, sl
   15c80:	add	r0, pc
   15c82:	movs	r2, #158	; 0x9e
   15c84:	bl	15a10 <add_merge_cache_extent@@Base+0x230>
   15c88:	ldr	r2, [sp, #40]	; 0x28
   15c8a:	ldr	r3, [r4, #60]	; 0x3c
   15c8c:	mov	r0, r4
   15c8e:	strd	r6, r7, [r4, #40]	; 0x28
   15c92:	orrs	r3, r2
   15c94:	strd	r8, r9, [r4, #48]	; 0x30
   15c98:	str	r3, [r4, #60]	; 0x3c
   15c9a:	bl	15978 <add_merge_cache_extent@@Base+0x198>
   15c9e:	mov	r1, r4
   15ca0:	mov	r0, r5
   15ca2:	bl	1558e <insert_cache_extent@@Base>
   15ca6:	movs	r2, #164	; 0xa4
   15ca8:	mov	r1, sl
   15caa:	mov	r3, r0
   15cac:	ldr	r0, [pc, #28]	; (15ccc <add_merge_cache_extent@@Base+0x4ec>)
   15cae:	add	r0, pc
   15cb0:	bl	15a10 <add_merge_cache_extent@@Base+0x230>
   15cb4:	mov	r1, r4
   15cb6:	mov	r0, r5
   15cb8:	bl	15bba <add_merge_cache_extent@@Base+0x3da>
   15cbc:	movs	r0, #0
   15cbe:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   15cc2:	nop
   15cc4:	ldrsb	r0, [r1, r0]
   15cc6:	movs	r2, r0
   15cc8:	strb	r0, [r7, r2]
   15cca:	movs	r2, r0
   15ccc:	subs	r0, #54	; 0x36
   15cce:	movs	r2, r0
   15cd0:	push	{r3, r4, r5, lr}
   15cd2:	mov	r4, r1
   15cd4:	ldr	r3, [r1, #60]	; 0x3c
   15cd6:	and.w	r5, r2, r3
   15cda:	bic.w	r2, r3, r2
   15cde:	str	r2, [r1, #60]	; 0x3c
   15ce0:	cbnz	r2, 15cf0 <add_merge_cache_extent@@Base+0x510>
   15ce2:	bl	157a8 <remove_cache_extent@@Base>
   15ce6:	mov	r0, r4
   15ce8:	bl	15b84 <add_merge_cache_extent@@Base+0x3a4>
   15cec:	mov	r0, r5
   15cee:	pop	{r3, r4, r5, pc}
   15cf0:	bl	15bba <add_merge_cache_extent@@Base+0x3da>
   15cf4:	b.n	15cec <add_merge_cache_extent@@Base+0x50c>
   15cf6:	push	{r0, r1, r4, r5, r6, lr}
   15cf8:	mov	r6, r1
   15cfa:	mov	r4, r0
   15cfc:	cbz	r0, 15d58 <add_merge_cache_extent@@Base+0x578>
   15cfe:	cmn.w	r0, #4096	; 0x1000
   15d02:	bhi.n	15d58 <add_merge_cache_extent@@Base+0x578>
   15d04:	ldr	r5, [r0, #80]	; 0x50
   15d06:	movw	r2, #665	; 0x299
   15d0a:	ldr	r1, [pc, #80]	; (15d5c <add_merge_cache_extent@@Base+0x57c>)
   15d0c:	subs	r5, #1
   15d0e:	str	r5, [r0, #80]	; 0x50
   15d10:	ldr	r0, [pc, #76]	; (15d60 <add_merge_cache_extent@@Base+0x580>)
   15d12:	add	r1, pc
   15d14:	lsrs	r3, r5, #31
   15d16:	adds	r1, #74	; 0x4a
   15d18:	add	r0, pc
   15d1a:	bl	15a10 <add_merge_cache_extent@@Base+0x230>
   15d1e:	cbnz	r5, 15d58 <add_merge_cache_extent@@Base+0x578>
   15d20:	ldr	r3, [r4, #84]	; 0x54
   15d22:	lsls	r2, r3, #31
   15d24:	bpl.n	15d36 <add_merge_cache_extent@@Base+0x556>
   15d26:	ldr	r3, [r4, #76]	; 0x4c
   15d28:	ldr	r0, [pc, #56]	; (15d64 <add_merge_cache_extent@@Base+0x584>)
   15d2a:	str	r3, [sp, #0]
   15d2c:	add	r0, pc
   15d2e:	ldrd	r2, r3, [r4, #40]	; 0x28
   15d32:	bl	16af4 <__btrfs_warning@@Base>
   15d36:	ldrd	r1, r2, [r4, #68]	; 0x44
   15d3a:	add.w	r3, r4, #68	; 0x44
   15d3e:	str	r2, [r1, #4]
   15d40:	str	r1, [r2, #0]
   15d42:	strd	r3, r3, [r4, #68]	; 0x44
   15d46:	ldr	r3, [r4, #84]	; 0x54
   15d48:	lsls	r3, r3, #20
   15d4a:	bmi.n	15d4e <add_merge_cache_extent@@Base+0x56e>
   15d4c:	cbz	r6, 15d58 <add_merge_cache_extent@@Base+0x578>
   15d4e:	mov	r0, r4
   15d50:	add	sp, #8
   15d52:	ldmia.w	sp!, {r4, r5, r6, lr}
   15d56:	b.n	15af4 <add_merge_cache_extent@@Base+0x314>
   15d58:	add	sp, #8
   15d5a:	pop	{r4, r5, r6, pc}
   15d5c:	strb	r2, [r4, r5]
   15d5e:	movs	r2, r0
   15d60:	strb	r4, [r5, r0]
   15d62:	movs	r2, r0
   15d64:	strb	r5, [r4, r0]
   15d66:	movs	r2, r0

00015d68 <extent_io_tree_init@@Base>:
   15d68:	push	{r4, lr}
   15d6a:	mov	r4, r0
   15d6c:	bl	15588 <cache_tree_init@@Base>
   15d70:	adds	r0, r4, #4
   15d72:	bl	15588 <cache_tree_init@@Base>
   15d76:	add.w	r3, r4, #8
   15d7a:	movs	r2, #0
   15d7c:	strd	r3, r3, [r4, #8]
   15d80:	movs	r3, #0
   15d82:	strd	r2, r3, [r4, #16]
   15d86:	bl	3134c <total_memory@@Base>
   15d8a:	movs	r3, #0
   15d8c:	str	r3, [r4, #28]
   15d8e:	lsrs	r0, r0, #2
   15d90:	str	r0, [r4, #24]
   15d92:	pop	{r4, pc}

00015d94 <extent_io_tree_init_cache_max@@Base>:
   15d94:	push	{r4, r5, r6, lr}
   15d96:	mov	r4, r0
   15d98:	mov	r6, r2
   15d9a:	mov	r5, r3
   15d9c:	bl	15d68 <extent_io_tree_init@@Base>
   15da0:	strd	r6, r5, [r4, #24]
   15da4:	pop	{r4, r5, r6, pc}

00015da6 <extent_buffer_bitmap_set@@Base>:
   15da6:	adds	r0, #96	; 0x60
   15da8:	add.w	r1, r1, r2, lsr #3
   15dac:	push	{r4, r5, r6, lr}
   15dae:	add	r1, r0
   15db0:	movs	r4, #255	; 0xff
   15db2:	and.w	r0, r2, #7
   15db6:	lsls	r4, r0
   15db8:	rsb	r5, r0, #8
   15dbc:	mov	r0, r3
   15dbe:	uxtb	r4, r4
   15dc0:	cmp	r5, r0
   15dc2:	bls.n	15dde <extent_buffer_bitmap_set@@Base+0x38>
   15dc4:	cbz	r0, 15ddc <extent_buffer_bitmap_set@@Base+0x36>
   15dc6:	add	r2, r3
   15dc8:	movs	r3, #255	; 0xff
   15dca:	negs	r2, r2
   15dcc:	and.w	r2, r2, #7
   15dd0:	asr.w	r2, r3, r2
   15dd4:	ands	r4, r2
   15dd6:	ldrb	r2, [r1, #0]
   15dd8:	orrs	r4, r2
   15dda:	strb	r4, [r1, #0]
   15ddc:	pop	{r4, r5, r6, pc}
   15dde:	ldrb	r6, [r1, #0]
   15de0:	subs	r0, r0, r5
   15de2:	movs	r5, #8
   15de4:	orrs	r4, r6
   15de6:	strb.w	r4, [r1], #1
   15dea:	movs	r4, #255	; 0xff
   15dec:	b.n	15dc0 <extent_buffer_bitmap_set@@Base+0x1a>

00015dee <extent_buffer_bitmap_clear@@Base>:
   15dee:	adds	r0, #96	; 0x60
   15df0:	add.w	r1, r1, r2, lsr #3
   15df4:	push	{r4, r5, r6, lr}
   15df6:	add	r1, r0
   15df8:	and.w	r4, r2, #7
   15dfc:	movs	r0, #255	; 0xff
   15dfe:	lsls	r0, r4
   15e00:	rsb	r5, r4, #8
   15e04:	mov	r4, r3
   15e06:	uxtb	r0, r0
   15e08:	cmp	r5, r4
   15e0a:	bls.n	15e28 <extent_buffer_bitmap_clear@@Base+0x3a>
   15e0c:	cbz	r4, 15e26 <extent_buffer_bitmap_clear@@Base+0x38>
   15e0e:	add	r2, r3
   15e10:	movs	r3, #255	; 0xff
   15e12:	negs	r2, r2
   15e14:	and.w	r2, r2, #7
   15e18:	asr.w	r2, r3, r2
   15e1c:	ands	r0, r2
   15e1e:	ldrb	r2, [r1, #0]
   15e20:	bic.w	r0, r2, r0
   15e24:	strb	r0, [r1, #0]
   15e26:	pop	{r4, r5, r6, pc}
   15e28:	ldrb	r6, [r1, #0]
   15e2a:	subs	r4, r4, r5
   15e2c:	movs	r5, #8
   15e2e:	bic.w	r0, r6, r0
   15e32:	strb.w	r0, [r1], #1
   15e36:	movs	r0, #255	; 0xff
   15e38:	b.n	15e08 <extent_buffer_bitmap_clear@@Base+0x1a>

00015e3a <clear_extent_bits@@Base>:
   15e3a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e3e:	mov	r7, r3
   15e40:	ldr	r3, [pc, #348]	; (15fa0 <clear_extent_bits@@Base+0x166>)
   15e42:	mov.w	r8, #0
   15e46:	vpush	{d8}
   15e4a:	mov	r9, r0
   15e4c:	add	r3, pc
   15e4e:	mov	r6, r2
   15e50:	adds	r3, #102	; 0x66
   15e52:	mov	r4, r8
   15e54:	vmov	s16, r3
   15e58:	ldr	r3, [pc, #328]	; (15fa4 <clear_extent_bits@@Base+0x16a>)
   15e5a:	sub	sp, #12
   15e5c:	add	r3, pc
   15e5e:	vmov	s17, r3
   15e62:	cbnz	r4, 15e70 <clear_extent_bits@@Base+0x36>
   15e64:	bl	15998 <add_merge_cache_extent@@Base+0x1b8>
   15e68:	mov	r4, r0
   15e6a:	cmp	r0, #0
   15e6c:	beq.w	15f98 <clear_extent_bits@@Base+0x15e>
   15e70:	mov	r2, r6
   15e72:	mov	r3, r7
   15e74:	mov	r0, r9
   15e76:	bl	156d0 <search_cache_extent@@Base>
   15e7a:	mov	r5, r0
   15e7c:	cmp	r0, #0
   15e7e:	beq.w	15f90 <clear_extent_bits@@Base+0x156>
   15e82:	ldrd	r2, r3, [r0, #40]	; 0x28
   15e86:	ldrd	r0, r1, [sp, #56]	; 0x38
   15e8a:	cmp	r1, r3
   15e8c:	it	eq
   15e8e:	cmpeq	r0, r2
   15e90:	bcc.n	15f90 <clear_extent_bits@@Base+0x156>
   15e92:	cmp	r3, r7
   15e94:	ldrd	sl, fp, [r5, #48]	; 0x30
   15e98:	it	eq
   15e9a:	cmpeq	r2, r6
   15e9c:	bcs.n	15f14 <clear_extent_bits@@Base+0xda>
   15e9e:	mov	r2, r4
   15ea0:	mov	r1, r5
   15ea2:	mov	r0, r9
   15ea4:	strd	r6, r7, [sp]
   15ea8:	bl	15a98 <add_merge_cache_extent@@Base+0x2b8>
   15eac:	vmov	r1, s16
   15eb0:	movw	r2, #311	; 0x137
   15eb4:	cmn.w	r0, #17
   15eb8:	mov	r4, r0
   15eba:	vmov	r0, s17
   15ebe:	ite	ne
   15ec0:	movne	r3, #0
   15ec2:	moveq	r3, #1
   15ec4:	bl	15a10 <add_merge_cache_extent@@Base+0x230>
   15ec8:	cmp	r4, #0
   15eca:	bne.n	15f62 <clear_extent_bits@@Base+0x128>
   15ecc:	ldrd	r2, r3, [r5, #48]	; 0x30
   15ed0:	ldrd	r0, r1, [sp, #56]	; 0x38
   15ed4:	cmp	r1, r3
   15ed6:	it	eq
   15ed8:	cmpeq	r0, r2
   15eda:	bcc.n	15f0e <clear_extent_bits@@Base+0xd4>
   15edc:	ldr	r2, [sp, #64]	; 0x40
   15ede:	mov	r1, r5
   15ee0:	mov	r0, r9
   15ee2:	bl	15cd0 <add_merge_cache_extent@@Base+0x4f0>
   15ee6:	cmp.w	fp, #4294967295	; 0xffffffff
   15eea:	it	eq
   15eec:	cmpeq.w	sl, #4294967295	; 0xffffffff
   15ef0:	orr.w	r8, r8, r0
   15ef4:	beq.n	15f62 <clear_extent_bits@@Base+0x128>
   15ef6:	adds.w	r6, sl, #1
   15efa:	adc.w	r7, fp, #0
   15efe:	ldrd	r2, r3, [sp, #56]	; 0x38
   15f02:	cmp	r3, r7
   15f04:	it	eq
   15f06:	cmpeq	r2, r6
   15f08:	bcs.n	15e62 <clear_extent_bits@@Base+0x28>
   15f0a:	cbz	r4, 15f62 <clear_extent_bits@@Base+0x128>
   15f0c:	b.n	15f90 <clear_extent_bits@@Base+0x156>
   15f0e:	ldrd	r6, r7, [r5, #40]	; 0x28
   15f12:	b.n	15efe <clear_extent_bits@@Base+0xc4>
   15f14:	ldrd	r2, r3, [sp, #56]	; 0x38
   15f18:	cmp	r3, fp
   15f1a:	it	eq
   15f1c:	cmpeq	r2, sl
   15f1e:	bcs.n	15f6e <clear_extent_bits@@Base+0x134>
   15f20:	ldr	r3, [sp, #56]	; 0x38
   15f22:	mov	r1, r5
   15f24:	mov	r0, r9
   15f26:	adds	r2, r3, #1
   15f28:	ldr	r3, [sp, #60]	; 0x3c
   15f2a:	adc.w	r3, r3, #0
   15f2e:	strd	r2, r3, [sp]
   15f32:	mov	r2, r4
   15f34:	bl	15a98 <add_merge_cache_extent@@Base+0x2b8>
   15f38:	ldr	r1, [pc, #108]	; (15fa8 <clear_extent_bits@@Base+0x16e>)
   15f3a:	movw	r2, #333	; 0x14d
   15f3e:	add	r1, pc
   15f40:	adds	r1, #102	; 0x66
   15f42:	adds	r0, #17
   15f44:	ldr	r0, [pc, #100]	; (15fac <clear_extent_bits@@Base+0x172>)
   15f46:	it	ne
   15f48:	movne	r3, #0
   15f4a:	add	r0, pc
   15f4c:	it	eq
   15f4e:	moveq	r3, #1
   15f50:	bl	15a10 <add_merge_cache_extent@@Base+0x230>
   15f54:	ldr	r2, [sp, #64]	; 0x40
   15f56:	mov	r1, r4
   15f58:	mov	r0, r9
   15f5a:	bl	15cd0 <add_merge_cache_extent@@Base+0x4f0>
   15f5e:	orr.w	r8, r8, r0
   15f62:	mov	r0, r8
   15f64:	add	sp, #12
   15f66:	vpop	{d8}
   15f6a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f6e:	adds.w	r6, sl, #1
   15f72:	ldr	r2, [sp, #64]	; 0x40
   15f74:	mov	r1, r5
   15f76:	mov	r0, r9
   15f78:	adc.w	r7, fp, #0
   15f7c:	bl	15cd0 <add_merge_cache_extent@@Base+0x4f0>
   15f80:	cmp.w	fp, #4294967295	; 0xffffffff
   15f84:	it	eq
   15f86:	cmpeq.w	sl, #4294967295	; 0xffffffff
   15f8a:	orr.w	r8, r8, r0
   15f8e:	bne.n	15efe <clear_extent_bits@@Base+0xc4>
   15f90:	mov	r0, r4
   15f92:	bl	15b84 <add_merge_cache_extent@@Base+0x3a4>
   15f96:	b.n	15f62 <clear_extent_bits@@Base+0x128>
   15f98:	mvn.w	r8, #11
   15f9c:	b.n	15f62 <clear_extent_bits@@Base+0x128>
   15f9e:	nop
   15fa0:	strb	r0, [r5, r0]
   15fa2:	movs	r2, r0
   15fa4:	strh	r6, [r4, r4]
   15fa6:	movs	r2, r0
   15fa8:	strh	r6, [r6, r4]
   15faa:	movs	r2, r0
   15fac:	strh	r0, [r7, r0]
   15fae:	movs	r2, r0

00015fb0 <set_extent_bits@@Base>:
   15fb0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15fb4:	mov	r7, r3
   15fb6:	ldr	r3, [pc, #516]	; (161bc <set_extent_bits@@Base+0x20c>)
   15fb8:	mov	r9, r0
   15fba:	vpush	{d8}
   15fbe:	mov	r6, r2
   15fc0:	add	r3, pc
   15fc2:	mov.w	r8, #0
   15fc6:	adds	r3, #120	; 0x78
   15fc8:	vmov	s16, r3
   15fcc:	ldr	r3, [pc, #496]	; (161c0 <set_extent_bits@@Base+0x210>)
   15fce:	sub	sp, #28
   15fd0:	add	r3, pc
   15fd2:	ldrd	sl, fp, [sp, #72]	; 0x48
   15fd6:	vmov	s17, r3
   15fda:	cmp.w	r8, #0
   15fde:	bne.n	15fec <set_extent_bits@@Base+0x3c>
   15fe0:	bl	15998 <add_merge_cache_extent@@Base+0x1b8>
   15fe4:	mov	r8, r0
   15fe6:	cmp	r0, #0
   15fe8:	beq.w	161b4 <set_extent_bits@@Base+0x204>
   15fec:	mov	r2, r6
   15fee:	mov	r3, r7
   15ff0:	mov	r0, r9
   15ff2:	bl	156d0 <search_cache_extent@@Base>
   15ff6:	mov	r5, r0
   15ff8:	cbnz	r0, 16038 <set_extent_bits@@Base+0x88>
   15ffa:	ldr	r3, [sp, #80]	; 0x50
   15ffc:	mov	r2, r6
   15ffe:	mov	r1, r8
   16000:	mov	r0, r9
   16002:	strd	sl, fp, [sp]
   16006:	str	r3, [sp, #8]
   16008:	mov	r3, r7
   1600a:	bl	15c56 <add_merge_cache_extent@@Base+0x476>
   1600e:	ldr	r1, [pc, #436]	; (161c4 <set_extent_bits@@Base+0x214>)
   16010:	mov.w	r2, #382	; 0x17e
   16014:	add	r1, pc
   16016:	adds	r1, #120	; 0x78
   16018:	cmn.w	r0, #17
   1601c:	mov	r4, r0
   1601e:	ldr	r0, [pc, #424]	; (161c8 <set_extent_bits@@Base+0x218>)
   16020:	ite	ne
   16022:	movne	r3, #0
   16024:	moveq	r3, #1
   16026:	add	r0, pc
   16028:	bl	15a10 <add_merge_cache_extent@@Base+0x230>
   1602c:	mov	r0, r4
   1602e:	add	sp, #28
   16030:	vpop	{d8}
   16034:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16038:	ldrd	r2, r3, [r0, #40]	; 0x28
   1603c:	ldrd	r0, r1, [r0, #48]	; 0x30
   16040:	cmp	r7, r3
   16042:	it	eq
   16044:	cmpeq	r6, r2
   16046:	strd	r0, r1, [sp, #16]
   1604a:	bne.n	16094 <set_extent_bits@@Base+0xe4>
   1604c:	cmp	fp, r1
   1604e:	it	eq
   16050:	cmpeq	sl, r0
   16052:	bcc.w	1616e <set_extent_bits@@Base+0x1be>
   16056:	ldr	r3, [r5, #60]	; 0x3c
   16058:	mov	r1, r5
   1605a:	ldr	r2, [sp, #80]	; 0x50
   1605c:	mov	r0, r9
   1605e:	orrs	r3, r2
   16060:	str	r3, [r5, #60]	; 0x3c
   16062:	bl	15bba <add_merge_cache_extent@@Base+0x3da>
   16066:	ldrd	r3, r4, [sp, #16]
   1606a:	adds	r4, #1
   1606c:	it	eq
   1606e:	cmpeq.w	r3, #4294967295	; 0xffffffff
   16072:	beq.n	1608c <set_extent_bits@@Base+0xdc>
   16074:	ldr	r3, [sp, #16]
   16076:	adds	r6, r3, #1
   16078:	ldr	r3, [sp, #20]
   1607a:	adc.w	r7, r3, #0
   1607e:	cmp	fp, r7
   16080:	it	eq
   16082:	cmpeq	sl, r6
   16084:	bcs.n	15fda <set_extent_bits@@Base+0x2a>
   16086:	cmp.w	r8, #0
   1608a:	beq.n	160f6 <set_extent_bits@@Base+0x146>
   1608c:	mov	r0, r8
   1608e:	bl	15b84 <add_merge_cache_extent@@Base+0x3a4>
   16092:	b.n	160f6 <set_extent_bits@@Base+0x146>
   16094:	cmp	r3, r7
   16096:	it	eq
   16098:	cmpeq	r2, r6
   1609a:	bcs.n	1610e <set_extent_bits@@Base+0x15e>
   1609c:	mov	r2, r8
   1609e:	mov	r1, r5
   160a0:	mov	r0, r9
   160a2:	strd	r6, r7, [sp]
   160a6:	bl	15a98 <add_merge_cache_extent@@Base+0x2b8>
   160aa:	ldr	r1, [pc, #288]	; (161cc <set_extent_bits@@Base+0x21c>)
   160ac:	movw	r2, #423	; 0x1a7
   160b0:	add	r1, pc
   160b2:	adds	r1, #120	; 0x78
   160b4:	cmn.w	r0, #17
   160b8:	mov	r4, r0
   160ba:	ldr	r0, [pc, #276]	; (161d0 <set_extent_bits@@Base+0x220>)
   160bc:	ite	ne
   160be:	movne	r3, #0
   160c0:	moveq	r3, #1
   160c2:	add	r0, pc
   160c4:	bl	15a10 <add_merge_cache_extent@@Base+0x230>
   160c8:	cmp	r4, #0
   160ca:	bne.n	1602c <set_extent_bits@@Base+0x7c>
   160cc:	ldrd	r2, r3, [r5, #48]	; 0x30
   160d0:	cmp	fp, r3
   160d2:	it	eq
   160d4:	cmpeq	sl, r2
   160d6:	bcc.n	16106 <set_extent_bits@@Base+0x156>
   160d8:	ldr	r3, [r5, #60]	; 0x3c
   160da:	mov	r1, r5
   160dc:	ldr	r2, [sp, #80]	; 0x50
   160de:	mov	r0, r9
   160e0:	orrs	r3, r2
   160e2:	str	r3, [r5, #60]	; 0x3c
   160e4:	bl	15bba <add_merge_cache_extent@@Base+0x3da>
   160e8:	ldrd	r2, r3, [sp, #16]
   160ec:	adds	r3, #1
   160ee:	it	eq
   160f0:	cmpeq.w	r2, #4294967295	; 0xffffffff
   160f4:	bne.n	160fa <set_extent_bits@@Base+0x14a>
   160f6:	movs	r4, #0
   160f8:	b.n	1602c <set_extent_bits@@Base+0x7c>
   160fa:	ldr	r3, [sp, #16]
   160fc:	adds	r6, r3, #1
   160fe:	ldr	r3, [sp, #20]
   16100:	adc.w	r7, r3, #0
   16104:	b.n	1610a <set_extent_bits@@Base+0x15a>
   16106:	ldrd	r6, r7, [r5, #40]	; 0x28
   1610a:	mov	r8, r4
   1610c:	b.n	1607e <set_extent_bits@@Base+0xce>
   1610e:	cmp	r7, r3
   16110:	it	eq
   16112:	cmpeq	r6, r2
   16114:	bcs.n	1616e <set_extent_bits@@Base+0x1be>
   16116:	cmp	fp, r3
   16118:	it	eq
   1611a:	cmpeq	sl, r2
   1611c:	bcc.n	16166 <set_extent_bits@@Base+0x1b6>
   1611e:	adds.w	r5, r2, #4294967295	; 0xffffffff
   16122:	adc.w	r3, r3, #4294967295	; 0xffffffff
   16126:	str	r3, [sp, #16]
   16128:	ldr	r3, [sp, #80]	; 0x50
   1612a:	mov	r2, r6
   1612c:	mov	r1, r8
   1612e:	mov	r0, r9
   16130:	str	r5, [sp, #0]
   16132:	str	r3, [sp, #8]
   16134:	ldr	r3, [sp, #16]
   16136:	str	r3, [sp, #4]
   16138:	mov	r3, r7
   1613a:	bl	15c56 <add_merge_cache_extent@@Base+0x476>
   1613e:	vmov	r1, s16
   16142:	mov.w	r2, #454	; 0x1c6
   16146:	cmn.w	r0, #17
   1614a:	mov	r4, r0
   1614c:	vmov	r0, s17
   16150:	ite	ne
   16152:	movne	r3, #0
   16154:	moveq	r3, #1
   16156:	bl	15a10 <add_merge_cache_extent@@Base+0x230>
   1615a:	cmp	r4, #0
   1615c:	bne.w	1602c <set_extent_bits@@Base+0x7c>
   16160:	ldr	r3, [sp, #16]
   16162:	adds	r6, r5, #1
   16164:	b.n	16100 <set_extent_bits@@Base+0x150>
   16166:	mov	r5, sl
   16168:	str.w	fp, [sp, #16]
   1616c:	b.n	16128 <set_extent_bits@@Base+0x178>
   1616e:	adds.w	r2, sl, #1
   16172:	mov	r1, r5
   16174:	adc.w	r3, fp, #0
   16178:	mov	r0, r9
   1617a:	strd	r2, r3, [sp]
   1617e:	mov	r2, r8
   16180:	bl	15a98 <add_merge_cache_extent@@Base+0x2b8>
   16184:	ldr	r1, [pc, #76]	; (161d4 <set_extent_bits@@Base+0x224>)
   16186:	mov.w	r2, #468	; 0x1d4
   1618a:	add	r1, pc
   1618c:	adds	r1, #120	; 0x78
   1618e:	cmn.w	r0, #17
   16192:	mov	r4, r0
   16194:	ldr	r0, [pc, #64]	; (161d8 <set_extent_bits@@Base+0x228>)
   16196:	ite	ne
   16198:	movne	r3, #0
   1619a:	moveq	r3, #1
   1619c:	add	r0, pc
   1619e:	bl	15a10 <add_merge_cache_extent@@Base+0x230>
   161a2:	ldr	r3, [r5, #60]	; 0x3c
   161a4:	ldr	r2, [sp, #80]	; 0x50
   161a6:	mov	r1, r8
   161a8:	mov	r0, r9
   161aa:	orrs	r3, r2
   161ac:	str	r3, [r5, #60]	; 0x3c
   161ae:	bl	15bba <add_merge_cache_extent@@Base+0x3da>
   161b2:	b.n	1602c <set_extent_bits@@Base+0x7c>
   161b4:	mvn.w	r4, #11
   161b8:	b.n	1602c <set_extent_bits@@Base+0x7c>
   161ba:	nop
   161bc:	strh	r4, [r6, r2]
   161be:	movs	r2, r0
   161c0:	str	r2, [r6, r6]
   161c2:	movs	r2, r0
   161c4:	strh	r0, [r4, r1]
   161c6:	movs	r2, r0
   161c8:	str	r4, [r3, r5]
   161ca:	movs	r2, r0
   161cc:	str	r4, [r0, r7]
   161ce:	movs	r2, r0
   161d0:	str	r0, [r0, r3]
   161d2:	movs	r2, r0
   161d4:	str	r2, [r5, r3]
   161d6:	movs	r2, r0
   161d8:	ldr	r7, [pc, #920]	; (16574 <write_extent_to_disk@@Base+0x2>)
   161da:	movs	r2, r0

000161dc <set_extent_dirty@@Base>:
   161dc:	push	{r4, r5, lr}
   161de:	sub	sp, #20
   161e0:	movs	r1, #1
   161e2:	ldrd	r4, r5, [sp, #32]
   161e6:	str	r1, [sp, #8]
   161e8:	strd	r4, r5, [sp]
   161ec:	bl	15fb0 <set_extent_bits@@Base>
   161f0:	add	sp, #20
   161f2:	pop	{r4, r5, pc}

000161f4 <clear_extent_dirty@@Base>:
   161f4:	push	{r4, r5, lr}
   161f6:	sub	sp, #20
   161f8:	movs	r1, #1
   161fa:	ldrd	r4, r5, [sp, #32]
   161fe:	str	r1, [sp, #8]
   16200:	strd	r4, r5, [sp]
   16204:	bl	15e3a <clear_extent_bits@@Base>
   16208:	add	sp, #20
   1620a:	pop	{r4, r5, pc}

0001620c <find_first_extent_bit@@Base>:
   1620c:	push	{r3, r4, r5, r6, r7, lr}
   1620e:	mov	r6, r2
   16210:	ldr	r4, [sp, #32]
   16212:	mov	r7, r3
   16214:	bl	156d0 <search_cache_extent@@Base>
   16218:	cbz	r0, 1624a <find_first_extent_bit@@Base+0x3e>
   1621a:	ldrd	r2, r3, [r0, #48]	; 0x30
   1621e:	cmp	r3, r7
   16220:	it	eq
   16222:	cmpeq	r2, r6
   16224:	bcc.n	16244 <find_first_extent_bit@@Base+0x38>
   16226:	ldr	r3, [r0, #60]	; 0x3c
   16228:	tst	r4, r3
   1622a:	beq.n	16244 <find_first_extent_bit@@Base+0x38>
   1622c:	ldrd	r4, r5, [r0, #40]	; 0x28
   16230:	ldr	r3, [sp, #24]
   16232:	strd	r4, r5, [r3]
   16236:	ldr	r3, [sp, #28]
   16238:	ldrd	r0, r1, [r0, #48]	; 0x30
   1623c:	strd	r0, r1, [r3]
   16240:	movs	r0, #0
   16242:	pop	{r3, r4, r5, r6, r7, pc}
   16244:	bl	157a4 <next_cache_extent@@Base>
   16248:	b.n	16218 <find_first_extent_bit@@Base+0xc>
   1624a:	movs	r0, #1
   1624c:	b.n	16242 <find_first_extent_bit@@Base+0x36>

0001624e <test_range_bit@@Base>:
   1624e:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   16252:	mov	r4, r2
   16254:	ldrd	r8, r9, [sp, #32]
   16258:	mov	r5, r3
   1625a:	ldr	r7, [sp, #44]	; 0x2c
   1625c:	bl	156d0 <search_cache_extent@@Base>
   16260:	movs	r6, #0
   16262:	cbnz	r0, 162a2 <test_range_bit@@Base+0x54>
   16264:	mov	r0, r6
   16266:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1626a:	cmp	r9, r3
   1626c:	it	eq
   1626e:	cmpeq	r8, r2
   16270:	bcc.n	16264 <test_range_bit@@Base+0x16>
   16272:	ldr	r3, [r0, #60]	; 0x3c
   16274:	ldr	r2, [sp, #40]	; 0x28
   16276:	tst	r2, r3
   16278:	beq.n	1629c <test_range_bit@@Base+0x4e>
   1627a:	movs	r6, #1
   1627c:	cmp	r7, #0
   1627e:	beq.n	16264 <test_range_bit@@Base+0x16>
   16280:	ldrd	r3, r2, [r0, #48]	; 0x30
   16284:	adds	r4, r3, #1
   16286:	adc.w	r5, r2, #0
   1628a:	cmp	r9, r5
   1628c:	it	eq
   1628e:	cmpeq	r8, r4
   16290:	bcc.n	16264 <test_range_bit@@Base+0x16>
   16292:	bl	157a4 <next_cache_extent@@Base>
   16296:	cbnz	r0, 162a2 <test_range_bit@@Base+0x54>
   16298:	cbnz	r7, 162ba <test_range_bit@@Base+0x6c>
   1629a:	b.n	16264 <test_range_bit@@Base+0x16>
   1629c:	cmp	r7, #0
   1629e:	beq.n	16280 <test_range_bit@@Base+0x32>
   162a0:	b.n	162ba <test_range_bit@@Base+0x6c>
   162a2:	cmp	r9, r5
   162a4:	it	eq
   162a6:	cmpeq	r8, r4
   162a8:	bcc.n	16264 <test_range_bit@@Base+0x16>
   162aa:	ldrd	r2, r3, [r0, #40]	; 0x28
   162ae:	cmp	r7, #0
   162b0:	beq.n	1626a <test_range_bit@@Base+0x1c>
   162b2:	cmp	r5, r3
   162b4:	it	eq
   162b6:	cmpeq	r4, r2
   162b8:	bcs.n	16272 <test_range_bit@@Base+0x24>
   162ba:	movs	r6, #0
   162bc:	b.n	16264 <test_range_bit@@Base+0x16>

000162be <set_state_private@@Base>:
   162be:	push	{r3, r4, r5, lr}
   162c0:	mov	r4, r2
   162c2:	mov	r5, r3
   162c4:	bl	156d0 <search_cache_extent@@Base>
   162c8:	cbz	r0, 162e2 <set_state_private@@Base+0x24>
   162ca:	ldrd	r2, r3, [r0, #40]	; 0x28
   162ce:	cmp	r3, r5
   162d0:	it	eq
   162d2:	cmpeq	r2, r4
   162d4:	bne.n	162e2 <set_state_private@@Base+0x24>
   162d6:	ldrd	r2, r3, [sp, #16]
   162da:	strd	r2, r3, [r0, #64]	; 0x40
   162de:	movs	r0, #0
   162e0:	pop	{r3, r4, r5, pc}
   162e2:	mvn.w	r0, #1
   162e6:	b.n	162e0 <set_state_private@@Base+0x22>

000162e8 <get_state_private@@Base>:
   162e8:	push	{r3, r4, r5, lr}
   162ea:	mov	r4, r2
   162ec:	mov	r5, r3
   162ee:	bl	156d0 <search_cache_extent@@Base>
   162f2:	cbz	r0, 1630e <get_state_private@@Base+0x26>
   162f4:	ldrd	r2, r3, [r0, #40]	; 0x28
   162f8:	cmp	r3, r5
   162fa:	it	eq
   162fc:	cmpeq	r2, r4
   162fe:	bne.n	1630e <get_state_private@@Base+0x26>
   16300:	ldrd	r0, r1, [r0, #64]	; 0x40
   16304:	ldr	r3, [sp, #16]
   16306:	strd	r0, r1, [r3]
   1630a:	movs	r0, #0
   1630c:	pop	{r3, r4, r5, pc}
   1630e:	mvn.w	r0, #1
   16312:	b.n	1630c <get_state_private@@Base+0x24>

00016314 <free_extent_buffer@@Base>:
   16314:	movs	r1, #0
   16316:	b.n	15cf6 <add_merge_cache_extent@@Base+0x516>

00016318 <free_extent_buffer_nocache@@Base>:
   16318:	movs	r1, #1
   1631a:	b.n	15cf6 <add_merge_cache_extent@@Base+0x516>

0001631c <extent_io_tree_cleanup@@Base>:
   1631c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   16320:	add.w	r8, r0, #8
   16324:	ldr.w	r9, [pc, #84]	; 1637c <extent_io_tree_cleanup@@Base+0x60>
   16328:	sub	sp, #20
   1632a:	ldr	r5, [pc, #84]	; (16380 <extent_io_tree_cleanup@@Base+0x64>)
   1632c:	mov	r4, r0
   1632e:	add	r9, pc
   16330:	add	r5, pc
   16332:	ldr	r3, [r4, #8]
   16334:	cmp	r3, r8
   16336:	bne.n	16348 <extent_io_tree_cleanup@@Base+0x2c>
   16338:	ldr	r1, [pc, #72]	; (16384 <extent_io_tree_cleanup@@Base+0x68>)
   1633a:	mov	r0, r4
   1633c:	add	r1, pc
   1633e:	add	sp, #20
   16340:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   16344:	b.w	157b2 <cache_tree_free_extents@@Base>
   16348:	ldr	r2, [r3, #20]
   1634a:	sub.w	r7, r3, #60	; 0x3c
   1634e:	cbz	r2, 16372 <extent_io_tree_cleanup@@Base+0x56>
   16350:	ldr	r2, [pc, #52]	; (16388 <extent_io_tree_cleanup@@Base+0x6c>)
   16352:	ldr	r6, [r5, r2]
   16354:	ldr	r2, [r3, #16]
   16356:	str	r2, [sp, #8]
   16358:	mov	r2, r9
   1635a:	ldrd	r0, r1, [r3, #-20]
   1635e:	strd	r0, r1, [sp]
   16362:	movs	r1, #1
   16364:	ldr	r0, [r6, #0]
   16366:	blx	8860 <__fprintf_chk@plt+0x4>
   1636a:	mov	r0, r7
   1636c:	bl	16318 <free_extent_buffer_nocache@@Base>
   16370:	b.n	16332 <extent_io_tree_cleanup@@Base+0x16>
   16372:	mov	r0, r7
   16374:	bl	15af4 <add_merge_cache_extent@@Base+0x314>
   16378:	b.n	16332 <extent_io_tree_cleanup@@Base+0x16>
   1637a:	nop
   1637c:	ldr	r6, [pc, #396]	; (1650c <alloc_extent_buffer@@Base+0xfa>)
   1637e:	movs	r2, r0
   16380:	bge.n	1642c <alloc_extent_buffer@@Base+0x1a>
   16382:	movs	r4, r0
   16384:	ldr??.w	pc, [r9, #255]!
   16388:	lsls	r0, r6, #8
	...

0001638c <find_extent_buffer@@Base>:
   1638c:	stmdb	sp!, {r0, r1, r4, r6, r7, r8, r9, lr}
   16390:	mov	r4, r0
   16392:	ldr	r6, [sp, #32]
   16394:	movs	r7, #0
   16396:	adds	r0, #4
   16398:	mov	r8, r2
   1639a:	mov	r9, r3
   1639c:	strd	r6, r7, [sp]
   163a0:	bl	15610 <lookup_cache_extent@@Base>
   163a4:	cbz	r0, 163dc <find_extent_buffer@@Base+0x50>
   163a6:	ldrd	r2, r3, [r0, #24]
   163aa:	cmp	r3, r9
   163ac:	it	eq
   163ae:	cmpeq	r2, r8
   163b0:	bne.n	163e2 <find_extent_buffer@@Base+0x56>
   163b2:	ldrd	r2, r3, [r0, #32]
   163b6:	cmp	r7, r3
   163b8:	it	eq
   163ba:	cmpeq	r6, r2
   163bc:	bne.n	163e2 <find_extent_buffer@@Base+0x56>
   163be:	ldrd	r1, r2, [r0, #60]	; 0x3c
   163c2:	add.w	r3, r0, #60	; 0x3c
   163c6:	adds	r4, #8
   163c8:	str	r2, [r1, #4]
   163ca:	str	r1, [r2, #0]
   163cc:	ldr	r2, [r4, #4]
   163ce:	str	r3, [r4, #4]
   163d0:	strd	r4, r2, [r0, #60]	; 0x3c
   163d4:	str	r3, [r2, #0]
   163d6:	ldr	r3, [r0, #80]	; 0x50
   163d8:	adds	r3, #1
   163da:	str	r3, [r0, #80]	; 0x50
   163dc:	add	sp, #8
   163de:	ldmia.w	sp!, {r4, r6, r7, r8, r9, pc}
   163e2:	movs	r0, #0
   163e4:	b.n	163dc <find_extent_buffer@@Base+0x50>

000163e6 <find_first_extent_buffer@@Base>:
   163e6:	push	{r4, lr}
   163e8:	mov	r4, r0
   163ea:	adds	r0, #4
   163ec:	bl	156d0 <search_cache_extent@@Base>
   163f0:	cbz	r0, 16410 <find_first_extent_buffer@@Base+0x2a>
   163f2:	ldrd	r1, r2, [r0, #60]	; 0x3c
   163f6:	add.w	r3, r0, #60	; 0x3c
   163fa:	adds	r4, #8
   163fc:	str	r2, [r1, #4]
   163fe:	str	r1, [r2, #0]
   16400:	ldr	r2, [r4, #4]
   16402:	str	r3, [r4, #4]
   16404:	strd	r4, r2, [r0, #60]	; 0x3c
   16408:	str	r3, [r2, #0]
   1640a:	ldr	r3, [r0, #80]	; 0x50
   1640c:	adds	r3, #1
   1640e:	str	r3, [r0, #80]	; 0x50
   16410:	pop	{r4, pc}

00016412 <alloc_extent_buffer@@Base>:
   16412:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16416:	sub	sp, #20
   16418:	add.w	sl, r0, #68	; 0x44
   1641c:	mov	r5, r0
   1641e:	ldr.w	fp, [sp, #56]	; 0x38
   16422:	movs	r7, #0
   16424:	mov	r0, sl
   16426:	mov	r8, r2
   16428:	mov	r9, r3
   1642a:	mov	r6, fp
   1642c:	strd	r6, r7, [sp]
   16430:	bl	15610 <lookup_cache_extent@@Base>
   16434:	mov	r4, r0
   16436:	cbz	r0, 1647c <alloc_extent_buffer@@Base+0x6a>
   16438:	ldrd	r2, r3, [r0, #24]
   1643c:	cmp	r3, r9
   1643e:	it	eq
   16440:	cmpeq	r2, r8
   16442:	bne.n	16476 <alloc_extent_buffer@@Base+0x64>
   16444:	ldrd	r2, r3, [r0, #32]
   16448:	cmp	r7, r3
   1644a:	it	eq
   1644c:	cmpeq	fp, r2
   1644e:	bne.n	16476 <alloc_extent_buffer@@Base+0x64>
   16450:	ldrd	r1, r2, [r0, #60]	; 0x3c
   16454:	add.w	r3, r0, #60	; 0x3c
   16458:	adds	r5, #72	; 0x48
   1645a:	str	r2, [r1, #4]
   1645c:	str	r1, [r2, #0]
   1645e:	ldr	r2, [r5, #4]
   16460:	str	r3, [r5, #4]
   16462:	strd	r5, r2, [r0, #60]	; 0x3c
   16466:	str	r3, [r2, #0]
   16468:	ldr	r3, [r0, #80]	; 0x50
   1646a:	adds	r3, #1
   1646c:	str	r3, [r0, #80]	; 0x50
   1646e:	mov	r0, r4
   16470:	add	sp, #20
   16472:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16476:	mov	r0, r4
   16478:	bl	16314 <free_extent_buffer@@Base>
   1647c:	mov	r2, r8
   1647e:	mov	r3, r9
   16480:	mov	r0, r5
   16482:	str.w	fp, [sp]
   16486:	bl	159ba <add_merge_cache_extent@@Base+0x1da>
   1648a:	mov	r4, r0
   1648c:	cmp	r0, #0
   1648e:	beq.n	1646e <alloc_extent_buffer@@Base+0x5c>
   16490:	mov	r1, r0
   16492:	mov	r0, sl
   16494:	bl	1558e <insert_cache_extent@@Base>
   16498:	cbz	r0, 164a4 <alloc_extent_buffer@@Base+0x92>
   1649a:	mov	r0, r4
   1649c:	movs	r4, #0
   1649e:	blx	8434 <free@plt+0x4>
   164a2:	b.n	1646e <alloc_extent_buffer@@Base+0x5c>
   164a4:	ldr	r2, [r5, #76]	; 0x4c
   164a6:	add.w	r3, r4, #60	; 0x3c
   164aa:	add.w	r8, r5, #72	; 0x48
   164ae:	str	r3, [r5, #76]	; 0x4c
   164b0:	strd	r8, r2, [r4, #60]	; 0x3c
   164b4:	str	r3, [r2, #0]
   164b6:	ldrd	r3, r2, [r5, #80]	; 0x50
   164ba:	adds	r3, r6, r3
   164bc:	str	r3, [sp, #8]
   164be:	adc.w	r3, r7, r2
   164c2:	str	r3, [sp, #12]
   164c4:	ldrd	r2, r3, [sp, #8]
   164c8:	ldrd	r0, r1, [sp, #8]
   164cc:	strd	r2, r3, [r5, #80]	; 0x50
   164d0:	ldrd	r2, r3, [r5, #88]	; 0x58
   164d4:	cmp	r1, r3
   164d6:	it	eq
   164d8:	cmpeq	r0, r2
   164da:	bcc.n	1646e <alloc_extent_buffer@@Base+0x5c>
   164dc:	ldr	r0, [r5, #72]	; 0x48
   164de:	movs	r7, #9
   164e0:	ldr.w	r6, [r0], #-60
   164e4:	subs	r6, #60	; 0x3c
   164e6:	add.w	r3, r0, #60	; 0x3c
   164ea:	cmp	r8, r3
   164ec:	beq.n	1646e <alloc_extent_buffer@@Base+0x5c>
   164ee:	ldr	r3, [r0, #80]	; 0x50
   164f0:	cbnz	r3, 164f6 <alloc_extent_buffer@@Base+0xe4>
   164f2:	bl	15af4 <add_merge_cache_extent@@Base+0x314>
   164f6:	ldrd	r0, r3, [r5, #88]	; 0x58
   164fa:	movs	r2, #10
   164fc:	umull	r0, r1, r0, r7
   16500:	mla	r1, r7, r3, r1
   16504:	movs	r3, #0
   16506:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   1650a:	ldrd	r2, r3, [r5, #80]	; 0x50
   1650e:	cmp	r1, r3
   16510:	it	eq
   16512:	cmpeq	r0, r2
   16514:	bcs.n	1646e <alloc_extent_buffer@@Base+0x5c>
   16516:	ldr	r3, [r6, #60]	; 0x3c
   16518:	mov	r0, r6
   1651a:	sub.w	r6, r3, #60	; 0x3c
   1651e:	b.n	164e6 <alloc_extent_buffer@@Base+0xd4>

00016520 <alloc_dummy_extent_buffer@@Base>:
   16520:	push	{r0, r1, r2, lr}
   16522:	ldr	r1, [sp, #16]
   16524:	str	r1, [sp, #0]
   16526:	bl	159ba <add_merge_cache_extent@@Base+0x1da>
   1652a:	cbz	r0, 16538 <alloc_dummy_extent_buffer@@Base+0x18>
   1652c:	movs	r3, #0
   1652e:	str	r3, [r0, #56]	; 0x38
   16530:	ldr	r3, [r0, #84]	; 0x54
   16532:	orr.w	r3, r3, #2048	; 0x800
   16536:	str	r3, [r0, #84]	; 0x54
   16538:	add	sp, #12
   1653a:	ldr.w	pc, [sp], #4

0001653e <read_extent_from_disk@@Base>:
   1653e:	push	{r0, r1, r4, r6, r7, lr}
   16540:	add.w	r3, r0, #96	; 0x60
   16544:	ldrd	r6, r7, [r0, #48]	; 0x30
   16548:	add	r1, r3
   1654a:	mov	r4, r2
   1654c:	strd	r6, r7, [sp]
   16550:	ldr	r0, [r0, #88]	; 0x58
   16552:	blx	8610 <pread64@plt>
   16556:	cmp	r0, #0
   16558:	bge.n	16566 <read_extent_from_disk@@Base+0x28>
   1655a:	blx	8784 <__errno_location@plt>
   1655e:	ldr	r0, [r0, #0]
   16560:	negs	r0, r0
   16562:	add	sp, #8
   16564:	pop	{r4, r6, r7, pc}
   16566:	cmp	r0, r4
   16568:	ite	eq
   1656a:	moveq	r0, #0
   1656c:	mvnne.w	r0, #4
   16570:	b.n	16562 <read_extent_from_disk@@Base+0x24>

00016572 <write_extent_to_disk@@Base>:
   16572:	push	{r0, r1, r4, lr}
   16574:	add.w	r1, r0, #96	; 0x60
   16578:	ldrd	r2, r3, [r0, #48]	; 0x30
   1657c:	mov	r4, r0
   1657e:	strd	r2, r3, [sp]
   16582:	ldr	r2, [r0, #76]	; 0x4c
   16584:	ldr	r0, [r0, #88]	; 0x58
   16586:	blx	8828 <pwrite64@plt>
   1658a:	cmp	r0, #0
   1658c:	blt.n	1659a <write_extent_to_disk@@Base+0x28>
   1658e:	ldr	r3, [r4, #76]	; 0x4c
   16590:	cmp	r3, r0
   16592:	ite	eq
   16594:	moveq	r0, #0
   16596:	mvnne.w	r0, #4
   1659a:	add	sp, #8
   1659c:	pop	{r4, pc}

0001659e <read_data_from_disk@@Base>:
   1659e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   165a2:	mov	r5, r2
   165a4:	ldr	r2, [pc, #292]	; (166cc <read_data_from_disk@@Base+0x12e>)
   165a6:	mov	r8, r3
   165a8:	ldr	r3, [pc, #292]	; (166d0 <read_data_from_disk@@Base+0x132>)
   165aa:	sub	sp, #68	; 0x44
   165ac:	add	r2, pc
   165ae:	ldr	r7, [pc, #292]	; (166d4 <read_data_from_disk@@Base+0x136>)
   165b0:	str	r1, [sp, #24]
   165b2:	mov	r9, r0
   165b4:	ldr	r3, [r2, r3]
   165b6:	add	r7, pc
   165b8:	ldrd	sl, fp, [sp, #104]	; 0x68
   165bc:	ldr	r3, [r3, #0]
   165be:	str	r3, [sp, #60]	; 0x3c
   165c0:	mov.w	r3, #0
   165c4:	movs	r3, #0
   165c6:	mov	r6, r3
   165c8:	str	r3, [sp, #44]	; 0x2c
   165ca:	str	r3, [sp, #28]
   165cc:	add	r3, sp, #44	; 0x2c
   165ce:	str	r3, [sp, #32]
   165d0:	add	r3, sp, #48	; 0x30
   165d2:	str	r3, [sp, #36]	; 0x24
   165d4:	orrs.w	r3, sl, fp
   165d8:	bne.n	165de <read_data_from_disk@@Base+0x40>
   165da:	movs	r4, #0
   165dc:	b.n	16618 <read_data_from_disk@@Base+0x7a>
   165de:	ldr	r3, [sp, #28]
   165e0:	mov	r2, r5
   165e2:	movs	r1, #0
   165e4:	mov	r0, r9
   165e6:	strd	sl, fp, [sp, #48]	; 0x30
   165ea:	str	r3, [sp, #12]
   165ec:	ldr	r3, [sp, #112]	; 0x70
   165ee:	str	r3, [sp, #8]
   165f0:	ldr	r3, [sp, #32]
   165f2:	str	r3, [sp, #4]
   165f4:	ldr	r3, [sp, #36]	; 0x24
   165f6:	str	r3, [sp, #0]
   165f8:	mov	r3, r8
   165fa:	bl	29520 <btrfs_map_block@@Base>
   165fe:	cbz	r0, 1662c <read_data_from_disk@@Base+0x8e>
   16600:	ldr	r3, [pc, #212]	; (166d8 <read_data_from_disk@@Base+0x13a>)
   16602:	movs	r1, #1
   16604:	ldr	r2, [pc, #212]	; (166dc <read_data_from_disk@@Base+0x13e>)
   16606:	ldr	r3, [r7, r3]
   16608:	add	r2, pc
   1660a:	strd	r5, r8, [sp]
   1660e:	ldr	r0, [r3, #0]
   16610:	blx	8860 <__fprintf_chk@plt+0x4>
   16614:	mvn.w	r4, #4
   16618:	ldr	r2, [pc, #196]	; (166e0 <read_data_from_disk@@Base+0x142>)
   1661a:	ldr	r3, [pc, #180]	; (166d0 <read_data_from_disk@@Base+0x132>)
   1661c:	add	r2, pc
   1661e:	ldr	r3, [r2, r3]
   16620:	ldr	r2, [r3, #0]
   16622:	ldr	r3, [sp, #60]	; 0x3c
   16624:	eors	r2, r3
   16626:	beq.n	166c4 <read_data_from_disk@@Base+0x126>
   16628:	blx	8510 <__stack_chk_fail@plt>
   1662c:	ldr	r1, [sp, #44]	; 0x2c
   1662e:	ldrd	r2, r3, [sp, #48]	; 0x30
   16632:	ldr	r0, [r1, #8]
   16634:	cmp	fp, r3
   16636:	it	eq
   16638:	cmpeq	sl, r2
   1663a:	ldr	r4, [r0, #24]
   1663c:	itt	cc
   1663e:	movcc	r2, sl
   16640:	movcc	r3, fp
   16642:	strd	r2, r3, [sp, #48]	; 0x30
   16646:	cmp	r4, #0
   16648:	bgt.n	16652 <read_data_from_disk@@Base+0xb4>
   1664a:	mov	r0, r1
   1664c:	blx	8434 <free@plt+0x4>
   16650:	b.n	16614 <read_data_from_disk@@Base+0x76>
   16652:	ldrd	r0, r1, [r1, #16]
   16656:	ldr	r3, [sp, #24]
   16658:	strd	r0, r1, [sp]
   1665c:	adds	r1, r3, r6
   1665e:	mov	r0, r4
   16660:	blx	8610 <pread64@plt>
   16664:	mov	r4, r0
   16666:	ldr	r0, [sp, #44]	; 0x2c
   16668:	blx	8434 <free@plt+0x4>
   1666c:	cmp	r4, #0
   1666e:	bge.n	16688 <read_data_from_disk@@Base+0xea>
   16670:	ldr	r3, [pc, #100]	; (166d8 <read_data_from_disk@@Base+0x13a>)
   16672:	movs	r1, #1
   16674:	ldr	r2, [pc, #108]	; (166e4 <read_data_from_disk@@Base+0x146>)
   16676:	ldr	r3, [r7, r3]
   16678:	add	r2, pc
   1667a:	str	r4, [sp, #8]
   1667c:	strd	r5, r8, [sp]
   16680:	ldr	r0, [r3, #0]
   16682:	blx	8860 <__fprintf_chk@plt+0x4>
   16686:	b.n	16618 <read_data_from_disk@@Base+0x7a>
   16688:	ldrd	r0, r1, [sp, #48]	; 0x30
   1668c:	asrs	r3, r4, #31
   1668e:	cmp	r3, r1
   16690:	it	eq
   16692:	cmpeq	r4, r0
   16694:	beq.n	166b2 <read_data_from_disk@@Base+0x114>
   16696:	ldr	r3, [pc, #64]	; (166d8 <read_data_from_disk@@Base+0x13a>)
   16698:	ldr	r2, [pc, #76]	; (166e8 <read_data_from_disk@@Base+0x14a>)
   1669a:	ldr	r3, [r7, r3]
   1669c:	add	r2, pc
   1669e:	strd	r0, r1, [sp, #16]
   166a2:	movs	r1, #1
   166a4:	str	r4, [sp, #8]
   166a6:	strd	r5, r8, [sp]
   166aa:	ldr	r0, [r3, #0]
   166ac:	blx	8860 <__fprintf_chk@plt+0x4>
   166b0:	b.n	16614 <read_data_from_disk@@Base+0x76>
   166b2:	subs.w	sl, sl, r4
   166b6:	sbc.w	fp, fp, r3
   166ba:	adds	r5, r5, r4
   166bc:	adc.w	r8, r8, r3
   166c0:	adds	r6, r6, r4
   166c2:	b.n	165d4 <read_data_from_disk@@Base+0x36>
   166c4:	mov	r0, r4
   166c6:	add	sp, #68	; 0x44
   166c8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   166cc:	bvc.n	16680 <read_data_from_disk@@Base+0xe2>
   166ce:	movs	r4, r0
   166d0:	lsls	r0, r4, #8
   166d2:	movs	r0, r0
   166d4:	bvc.n	16674 <read_data_from_disk@@Base+0xd6>
   166d6:	movs	r4, r0
   166d8:	lsls	r0, r6, #8
   166da:	movs	r0, r0
   166dc:	ldr	r3, [pc, #704]	; (169a0 <set_extent_buffer_dirty@@Base+0x18>)
   166de:	movs	r2, r0
   166e0:	bvc.n	167b4 <write_data_to_disk@@Base+0xc8>
   166e2:	movs	r4, r0
   166e4:	ldr	r3, [pc, #368]	; (16858 <write_data_to_disk@@Base+0x16c>)
   166e6:	movs	r2, r0
   166e8:	ldr	r3, [pc, #316]	; (16828 <write_data_to_disk@@Base+0x13c>)
   166ea:	movs	r2, r0

000166ec <write_data_to_disk@@Base>:
   166ec:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   166f0:	mov	r6, r2
   166f2:	vpush	{d8}
   166f6:	mov	r7, r3
   166f8:	ldr	r2, [pc, #600]	; (16954 <write_data_to_disk@@Base+0x268>)
   166fa:	mov	r8, r0
   166fc:	ldr	r3, [pc, #600]	; (16958 <write_data_to_disk@@Base+0x26c>)
   166fe:	add	r2, pc
   16700:	ldr.w	r9, [pc, #600]	; 1695c <write_data_to_disk@@Base+0x270>
   16704:	sub	sp, #68	; 0x44
   16706:	add	r9, pc
   16708:	str	r1, [sp, #32]
   1670a:	ldr	r3, [r2, r3]
   1670c:	ldr	r3, [r3, #0]
   1670e:	str	r3, [sp, #60]	; 0x3c
   16710:	mov.w	r3, #0
   16714:	movs	r3, #0
   16716:	strd	r3, r3, [sp, #40]	; 0x28
   1671a:	str	r3, [sp, #20]
   1671c:	ldr	r3, [pc, #576]	; (16960 <write_data_to_disk@@Base+0x274>)
   1671e:	add	r3, pc
   16720:	adds	r3, #136	; 0x88
   16722:	vmov	s16, r3
   16726:	ldr	r3, [pc, #572]	; (16964 <write_data_to_disk@@Base+0x278>)
   16728:	add	r3, pc
   1672a:	vmov	s17, r3
   1672e:	ldrd	r3, r4, [sp, #112]	; 0x70
   16732:	orrs	r3, r4
   16734:	bne.n	1673a <write_data_to_disk@@Base+0x4e>
   16736:	movs	r4, #0
   16738:	b.n	1680e <write_data_to_disk@@Base+0x122>
   1673a:	ldrd	r3, r4, [sp, #112]	; 0x70
   1673e:	mov	r2, r6
   16740:	movs	r1, #1
   16742:	mov	r0, r8
   16744:	strd	r3, r4, [sp, #48]	; 0x30
   16748:	add	r3, sp, #44	; 0x2c
   1674a:	str	r3, [sp, #12]
   1674c:	ldr	r3, [sp, #120]	; 0x78
   1674e:	str	r3, [sp, #8]
   16750:	add	r3, sp, #40	; 0x28
   16752:	str	r3, [sp, #4]
   16754:	add	r3, sp, #48	; 0x30
   16756:	str	r3, [sp, #0]
   16758:	mov	r3, r7
   1675a:	bl	29520 <btrfs_map_block@@Base>
   1675e:	mov	sl, r0
   16760:	cbz	r0, 1677e <write_data_to_disk@@Base+0x92>
   16762:	ldr	r3, [pc, #516]	; (16968 <write_data_to_disk@@Base+0x27c>)
   16764:	movs	r1, #1
   16766:	ldr	r2, [pc, #516]	; (1696c <write_data_to_disk@@Base+0x280>)
   16768:	ldr.w	r3, [r9, r3]
   1676c:	add	r2, pc
   1676e:	strd	r6, r7, [sp]
   16772:	ldr	r0, [r3, #0]
   16774:	blx	8860 <__fprintf_chk@plt+0x4>
   16778:	mvn.w	r4, #4
   1677c:	b.n	1680e <write_data_to_disk@@Base+0x122>
   1677e:	ldr.w	fp, [sp, #44]	; 0x2c
   16782:	cmp.w	fp, #0
   16786:	bne.n	167ae <write_data_to_disk@@Base+0xc2>
   16788:	ldr	r3, [sp, #32]
   1678a:	ldr	r2, [sp, #20]
   1678c:	add.w	fp, r3, r2
   16790:	ldr	r3, [sp, #40]	; 0x28
   16792:	ldr	r2, [r3, #4]
   16794:	cmp	r2, sl
   16796:	ble.n	1687a <write_data_to_disk@@Base+0x18e>
   16798:	add.w	r2, r3, sl, lsl #4
   1679c:	ldr	r2, [r2, #8]
   1679e:	ldr	r0, [r2, #24]
   167a0:	cmp	r0, #0
   167a2:	bgt.w	168c8 <write_data_to_disk@@Base+0x1dc>
   167a6:	mov	r0, r3
   167a8:	blx	8434 <free@plt+0x4>
   167ac:	b.n	16778 <write_data_to_disk@@Base+0x8c>
   167ae:	ldrd	r3, r4, [sp, #48]	; 0x30
   167b2:	mov	r5, r0
   167b4:	strd	r3, r4, [sp, #24]
   167b8:	ldrd	r2, r3, [sp, #24]
   167bc:	ldr.w	r4, [r8, #384]	; 0x180
   167c0:	cmp	r3, r0
   167c2:	it	eq
   167c4:	cmpeq	r2, r4
   167c6:	itt	cc
   167c8:	movcc	r4, r2
   167ca:	movcc	r5, r3
   167cc:	ldrd	r2, r3, [sp, #112]	; 0x70
   167d0:	cmp	r3, r5
   167d2:	it	eq
   167d4:	cmpeq	r2, r4
   167d6:	it	cc
   167d8:	movcc	r4, r2
   167da:	add.w	r2, r4, #96	; 0x60
   167de:	it	cc
   167e0:	movcc	r5, r3
   167e2:	str	r2, [sp, #36]	; 0x24
   167e4:	mov	r0, r2
   167e6:	strd	r4, r5, [sp, #48]	; 0x30
   167ea:	blx	8678 <malloc@plt+0x4>
   167ee:	ldr	r2, [sp, #36]	; 0x24
   167f0:	mov	sl, r0
   167f2:	cbnz	r0, 16824 <write_data_to_disk@@Base+0x138>
   167f4:	ldr	r3, [pc, #368]	; (16968 <write_data_to_disk@@Base+0x27c>)
   167f6:	mvn.w	r4, #11
   167fa:	ldr	r0, [pc, #372]	; (16970 <write_data_to_disk@@Base+0x284>)
   167fc:	ldr.w	r3, [r9, r3]
   16800:	add	r0, pc
   16802:	ldr	r1, [r3, #0]
   16804:	blx	8968 <fputs@plt+0x4>
   16808:	ldr	r0, [sp, #44]	; 0x2c
   1680a:	blx	8434 <free@plt+0x4>
   1680e:	ldr	r2, [pc, #356]	; (16974 <write_data_to_disk@@Base+0x288>)
   16810:	ldr	r3, [pc, #324]	; (16958 <write_data_to_disk@@Base+0x26c>)
   16812:	add	r2, pc
   16814:	ldr	r3, [r2, r3]
   16816:	ldr	r2, [r3, #0]
   16818:	ldr	r3, [sp, #60]	; 0x3c
   1681a:	eors	r2, r3
   1681c:	beq.w	16946 <write_data_to_disk@@Base+0x25a>
   16820:	blx	8510 <__stack_chk_fail@plt>
   16824:	movs	r1, #0
   16826:	blx	87c4 <memset@plt+0x4>
   1682a:	ldr	r3, [sp, #32]
   1682c:	ldr	r1, [sp, #20]
   1682e:	mov	r2, r4
   16830:	str.w	r4, [sl, #76]	; 0x4c
   16834:	add.w	r0, sl, #96	; 0x60
   16838:	adds	r1, r3, r1
   1683a:	strd	r6, r7, [sl, #40]	; 0x28
   1683e:	blx	8480 <memcpy@plt+0x4>
   16842:	ldrd	r3, r4, [sp, #24]
   16846:	ldr	r2, [sp, #40]	; 0x28
   16848:	mov	r1, sl
   1684a:	mov	r0, r8
   1684c:	str.w	fp, [sp, #8]
   16850:	strd	r3, r4, [sp]
   16854:	bl	29e88 <write_raid56_with_parity@@Base>
   16858:	vmov	r1, s16
   1685c:	movw	r2, #922	; 0x39a
   16860:	mov	r3, r0
   16862:	vmov	r0, s17
   16866:	bl	15a10 <add_merge_cache_extent@@Base+0x230>
   1686a:	mov	r0, sl
   1686c:	blx	8434 <free@plt+0x4>
   16870:	ldr	r0, [sp, #44]	; 0x2c
   16872:	blx	8434 <free@plt+0x4>
   16876:	movs	r3, #0
   16878:	str	r3, [sp, #44]	; 0x2c
   1687a:	ldrd	r2, r3, [sp, #112]	; 0x70
   1687e:	ldrd	r4, r5, [sp, #48]	; 0x30
   16882:	ldr	r1, [pc, #244]	; (16978 <write_data_to_disk@@Base+0x28c>)
   16884:	cmp	r3, r5
   16886:	ldr	r0, [pc, #244]	; (1697c <write_data_to_disk@@Base+0x290>)
   16888:	it	eq
   1688a:	cmpeq	r2, r4
   1688c:	add	r1, pc
   1688e:	add.w	r1, r1, #136	; 0x88
   16892:	add	r0, pc
   16894:	ite	cc
   16896:	movcc	r3, #1
   16898:	movcs	r3, #0
   1689a:	movw	r2, #954	; 0x3ba
   1689e:	bl	15a10 <add_merge_cache_extent@@Base+0x230>
   168a2:	ldr	r3, [sp, #112]	; 0x70
   168a4:	ldr	r0, [sp, #40]	; 0x28
   168a6:	subs	r3, r3, r4
   168a8:	str	r3, [sp, #112]	; 0x70
   168aa:	ldr	r3, [sp, #116]	; 0x74
   168ac:	sbc.w	r3, r3, r5
   168b0:	str	r3, [sp, #116]	; 0x74
   168b2:	ldr	r3, [sp, #20]
   168b4:	adds	r6, r6, r4
   168b6:	adc.w	r7, r5, r7
   168ba:	adds	r3, r3, r4
   168bc:	str	r3, [sp, #20]
   168be:	blx	8434 <free@plt+0x4>
   168c2:	movs	r3, #0
   168c4:	str	r3, [sp, #40]	; 0x28
   168c6:	b.n	1672e <write_data_to_disk@@Base+0x42>
   168c8:	add.w	sl, sl, #1
   168cc:	mov	r1, fp
   168ce:	add.w	r3, r3, sl, lsl #4
   168d2:	ldrd	r3, r4, [r3]
   168d6:	strd	r3, r4, [sp, #24]
   168da:	ldrd	r2, r3, [sp, #48]	; 0x30
   168de:	ldrd	r4, r5, [sp, #112]	; 0x70
   168e2:	cmp	r5, r3
   168e4:	it	eq
   168e6:	cmpeq	r4, r2
   168e8:	itt	cc
   168ea:	movcc	r2, r4
   168ec:	movcc	r3, r5
   168ee:	ldrd	r4, r5, [sp, #24]
   168f2:	strd	r2, r3, [sp, #48]	; 0x30
   168f6:	strd	r4, r5, [sp]
   168fa:	blx	8828 <pwrite64@plt>
   168fe:	ldrd	r2, r3, [sp, #48]	; 0x30
   16902:	asrs	r5, r0, #31
   16904:	cmp	r5, r3
   16906:	it	eq
   16908:	cmpeq	r0, r2
   1690a:	beq.w	16790 <write_data_to_disk@@Base+0xa4>
   1690e:	ldr	r3, [pc, #88]	; (16968 <write_data_to_disk@@Base+0x27c>)
   16910:	cmp	r0, #0
   16912:	ldr.w	r3, [r9, r3]
   16916:	ldr	r5, [r3, #0]
   16918:	bge.n	16938 <write_data_to_disk@@Base+0x24c>
   1691a:	blx	8784 <__errno_location@plt>
   1691e:	ldr	r2, [pc, #96]	; (16980 <write_data_to_disk@@Base+0x294>)
   16920:	movs	r1, #1
   16922:	add	r2, pc
   16924:	ldr	r3, [r0, #0]
   16926:	mov	r4, r0
   16928:	mov	r0, r5
   1692a:	blx	8860 <__fprintf_chk@plt+0x4>
   1692e:	ldr	r0, [sp, #40]	; 0x28
   16930:	ldr	r4, [r4, #0]
   16932:	blx	8434 <free@plt+0x4>
   16936:	b.n	1680e <write_data_to_disk@@Base+0x122>
   16938:	ldr	r0, [pc, #72]	; (16984 <write_data_to_disk@@Base+0x298>)
   1693a:	mov	r1, r5
   1693c:	add	r0, pc
   1693e:	blx	8968 <fputs@plt+0x4>
   16942:	ldr	r0, [sp, #40]	; 0x28
   16944:	b.n	167a8 <write_data_to_disk@@Base+0xbc>
   16946:	mov	r0, r4
   16948:	add	sp, #68	; 0x44
   1694a:	vpop	{d8}
   1694e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16952:	nop
   16954:	bvs.n	16864 <write_data_to_disk@@Base+0x178>
   16956:	movs	r4, r0
   16958:	lsls	r0, r4, #8
   1695a:	movs	r0, r0
   1695c:	bvs.n	16a5c <btrfs_clone_extent_buffer@@Base+0x10>
   1695e:	movs	r4, r0
   16960:	ldr	r3, [pc, #344]	; (16abc <extent_buffer_test_bit@@Base+0x14>)
   16962:	movs	r2, r0
   16964:	cmp	r5, #188	; 0xbc
   16966:	movs	r2, r0
   16968:	lsls	r0, r6, #8
   1696a:	movs	r0, r0
   1696c:	ldr	r2, [pc, #304]	; (16aa0 <memset_extent_buffer@@Base+0xa>)
   1696e:	movs	r2, r0
   16970:	ldr	r2, [pc, #88]	; (169cc <clear_extent_buffer_dirty@@Base+0xa>)
   16972:	movs	r2, r0
   16974:	bpl.n	16a5c <btrfs_clone_extent_buffer@@Base+0x10>
   16976:	movs	r4, r0
   16978:	ldr	r1, [pc, #928]	; (16d1c <btrfs_uuid_to_key@@Base+0x38>)
   1697a:	movs	r2, r0
   1697c:	ldr	r1, [pc, #816]	; (16cb0 <__btrfs_error_on@@Base+0x48>)
   1697e:	movs	r2, r0
   16980:	ldr	r1, [pc, #76]	; (169d0 <clear_extent_buffer_dirty@@Base+0xe>)
   16982:	movs	r2, r0
   16984:	ldr	r1, [pc, #84]	; (169dc <clear_extent_buffer_dirty@@Base+0x1a>)
   16986:	movs	r2, r0

00016988 <set_extent_buffer_dirty@@Base>:
   16988:	push	{r0, r1, r4, r6, r7, lr}
   1698a:	mov	r4, r0
   1698c:	ldr	r3, [r0, #84]	; 0x54
   1698e:	lsls	r2, r3, #31
   16990:	bmi.n	169bc <set_extent_buffer_dirty@@Base+0x34>
   16992:	orr.w	r3, r3, #1
   16996:	str	r3, [r0, #84]	; 0x54
   16998:	ldrd	r2, r3, [r0, #40]	; 0x28
   1699c:	ldr	r1, [r0, #76]	; 0x4c
   1699e:	adds.w	r6, r2, #4294967295	; 0xffffffff
   169a2:	adc.w	r7, r3, #4294967295	; 0xffffffff
   169a6:	adds	r6, r6, r1
   169a8:	adc.w	r7, r7, #0
   169ac:	strd	r6, r7, [sp]
   169b0:	ldr	r0, [r0, #56]	; 0x38
   169b2:	bl	161dc <set_extent_dirty@@Base>
   169b6:	ldr	r3, [r4, #80]	; 0x50
   169b8:	adds	r3, #1
   169ba:	str	r3, [r4, #80]	; 0x50
   169bc:	movs	r0, #0
   169be:	add	sp, #8
   169c0:	pop	{r4, r6, r7, pc}

000169c2 <clear_extent_buffer_dirty@@Base>:
   169c2:	push	{r0, r1, r4, r6, r7, lr}
   169c4:	mov	r4, r0
   169c6:	ldr	r3, [r0, #84]	; 0x54
   169c8:	lsls	r2, r3, #31
   169ca:	bpl.n	169f6 <clear_extent_buffer_dirty@@Base+0x34>
   169cc:	bic.w	r3, r3, #1
   169d0:	str	r3, [r0, #84]	; 0x54
   169d2:	ldrd	r2, r3, [r0, #40]	; 0x28
   169d6:	ldr	r1, [r0, #76]	; 0x4c
   169d8:	adds.w	r6, r2, #4294967295	; 0xffffffff
   169dc:	adc.w	r7, r3, #4294967295	; 0xffffffff
   169e0:	adds	r6, r6, r1
   169e2:	adc.w	r7, r7, #0
   169e6:	strd	r6, r7, [sp]
   169ea:	ldr	r0, [r0, #56]	; 0x38
   169ec:	bl	161f4 <clear_extent_dirty@@Base>
   169f0:	mov	r0, r4
   169f2:	bl	16314 <free_extent_buffer@@Base>
   169f6:	movs	r0, #0
   169f8:	add	sp, #8
   169fa:	pop	{r4, r6, r7, pc}

000169fc <memcmp_extent_buffer@@Base>:
   169fc:	push	{r5}
   169fe:	adds	r0, #96	; 0x60
   16a00:	mov	r5, r2
   16a02:	mov	r2, r3
   16a04:	add	r0, r5
   16a06:	ldr.w	r5, [sp], #4
   16a0a:	b.w	84a4 <memcmp@plt>

00016a0e <read_extent_buffer@@Base>:
   16a0e:	adds	r0, #96	; 0x60
   16a10:	push	{r5}
   16a12:	mov	r5, r1
   16a14:	mov	r1, r2
   16a16:	mov	r2, r3
   16a18:	add	r1, r0
   16a1a:	mov	r0, r5
   16a1c:	ldr.w	r5, [sp], #4
   16a20:	b.w	847c <memcpy@plt>

00016a24 <write_extent_buffer@@Base>:
   16a24:	push	{r5}
   16a26:	adds	r0, #96	; 0x60
   16a28:	mov	r5, r2
   16a2a:	mov	r2, r3
   16a2c:	add	r0, r5
   16a2e:	ldr.w	r5, [sp], #4
   16a32:	b.w	847c <memcpy@plt>

00016a36 <copy_extent_buffer@@Base>:
   16a36:	push	{r6}
   16a38:	adds	r0, #96	; 0x60
   16a3a:	adds	r1, #96	; 0x60
   16a3c:	mov	r6, r2
   16a3e:	add	r1, r3
   16a40:	ldr	r2, [sp, #4]
   16a42:	add	r0, r6
   16a44:	ldr.w	r6, [sp], #4
   16a48:	b.w	847c <memcpy@plt>

00016a4c <btrfs_clone_extent_buffer@@Base>:
   16a4c:	push	{r0, r1, r2, r4, r5, lr}
   16a4e:	mov	r5, r0
   16a50:	ldr	r3, [r0, #76]	; 0x4c
   16a52:	str	r3, [sp, #0]
   16a54:	ldrd	r2, r3, [r0, #40]	; 0x28
   16a58:	ldr	r0, [r0, #92]	; 0x5c
   16a5a:	bl	159ba <add_merge_cache_extent@@Base+0x1da>
   16a5e:	mov	r4, r0
   16a60:	cbz	r0, 16a7a <btrfs_clone_extent_buffer@@Base+0x2e>
   16a62:	movs	r3, #0
   16a64:	str	r3, [r0, #56]	; 0x38
   16a66:	ldr	r2, [r5, #76]	; 0x4c
   16a68:	mov	r1, r5
   16a6a:	str	r2, [sp, #0]
   16a6c:	mov	r2, r3
   16a6e:	bl	16a36 <copy_extent_buffer@@Base>
   16a72:	ldr	r3, [r4, #84]	; 0x54
   16a74:	orr.w	r3, r3, #2048	; 0x800
   16a78:	str	r3, [r4, #84]	; 0x54
   16a7a:	mov	r0, r4
   16a7c:	add	sp, #12
   16a7e:	pop	{r4, r5, pc}

00016a80 <memmove_extent_buffer@@Base>:
   16a80:	adds	r0, #96	; 0x60
   16a82:	push	{r5}
   16a84:	mov	r5, r1
   16a86:	mov	r1, r2
   16a88:	mov	r2, r3
   16a8a:	add	r1, r0
   16a8c:	add	r0, r5
   16a8e:	ldr.w	r5, [sp], #4
   16a92:	b.w	8420 <memmove@plt>

00016a96 <memset_extent_buffer@@Base>:
   16a96:	push	{r5}
   16a98:	adds	r0, #96	; 0x60
   16a9a:	mov	r5, r2
   16a9c:	mov	r2, r3
   16a9e:	add	r0, r5
   16aa0:	ldr.w	r5, [sp], #4
   16aa4:	b.w	87c0 <memset@plt>

00016aa8 <extent_buffer_test_bit@@Base>:
   16aa8:	cmp	r2, #0
   16aaa:	mov	r3, r2
   16aac:	it	lt
   16aae:	addlt	r3, r2, #7
   16ab0:	add	r1, r0
   16ab2:	and.w	r2, r2, #7
   16ab6:	add.w	r0, r1, r3, asr #3
   16aba:	ldrb.w	r0, [r0, #96]	; 0x60
   16abe:	asrs	r0, r2
   16ac0:	and.w	r0, r0, #1
   16ac4:	bx	lr
   16ac6:	nop

00016ac8 <__crc32c_le@@Base>:
   16ac8:	push	{r4, lr}
   16aca:	add	r2, r1
   16acc:	ldr	r4, [pc, #24]	; (16ae8 <__crc32c_le@@Base+0x20>)
   16ace:	add	r4, pc
   16ad0:	cmp	r1, r2
   16ad2:	bne.n	16ad6 <__crc32c_le@@Base+0xe>
   16ad4:	pop	{r4, pc}
   16ad6:	ldrb.w	r3, [r1], #1
   16ada:	eors	r3, r0
   16adc:	uxtb	r3, r3
   16ade:	ldr.w	r3, [r4, r3, lsl #2]
   16ae2:	eor.w	r0, r3, r0, lsr #8
   16ae6:	b.n	16ad0 <__crc32c_le@@Base+0x8>
   16ae8:	ldr	r0, [pc, #264]	; (16bf4 <__btrfs_warning_on@@Base+0x8>)
   16aea:	movs	r2, r0

00016aec <crc32c_optimization_init@@Base>:
   16aec:	bx	lr

00016aee <crc32c_le@@Base>:
   16aee:	b.w	16ac8 <__crc32c_le@@Base>
   16af2:	nop

00016af4 <__btrfs_warning@@Base>:
   16af4:	push	{r0, r1, r2, r3}
   16af6:	push	{r4, r5, lr}
   16af8:	sub	sp, #20
   16afa:	add	r4, sp, #32
   16afc:	ldr	r1, [pc, #88]	; (16b58 <__btrfs_warning@@Base+0x64>)
   16afe:	ldr	r3, [pc, #92]	; (16b5c <__btrfs_warning@@Base+0x68>)
   16b00:	ldr.w	r2, [r4], #4
   16b04:	add	r1, pc
   16b06:	add	r3, pc
   16b08:	ldr	r0, [pc, #84]	; (16b60 <__btrfs_warning@@Base+0x6c>)
   16b0a:	str	r2, [sp, #4]
   16b0c:	add	r0, pc
   16b0e:	ldr	r2, [pc, #84]	; (16b64 <__btrfs_warning@@Base+0x70>)
   16b10:	ldr	r2, [r1, r2]
   16b12:	ldr	r1, [pc, #84]	; (16b68 <__btrfs_warning@@Base+0x74>)
   16b14:	ldr	r2, [r2, #0]
   16b16:	str	r2, [sp, #12]
   16b18:	mov.w	r2, #0
   16b1c:	ldr	r5, [r3, r1]
   16b1e:	ldr	r1, [r5, #0]
   16b20:	blx	8968 <fputs@plt+0x4>
   16b24:	ldr	r2, [sp, #4]
   16b26:	mov	r3, r4
   16b28:	movs	r1, #1
   16b2a:	ldr	r0, [r5, #0]
   16b2c:	str	r4, [sp, #8]
   16b2e:	blx	86b8 <__vfprintf_chk@plt>
   16b32:	ldr	r1, [r5, #0]
   16b34:	movs	r0, #10
   16b36:	blx	88d0 <fputc@plt+0x4>
   16b3a:	ldr	r2, [pc, #48]	; (16b6c <__btrfs_warning@@Base+0x78>)
   16b3c:	ldr	r3, [pc, #36]	; (16b64 <__btrfs_warning@@Base+0x70>)
   16b3e:	add	r2, pc
   16b40:	ldr	r3, [r2, r3]
   16b42:	ldr	r2, [r3, #0]
   16b44:	ldr	r3, [sp, #12]
   16b46:	eors	r2, r3
   16b48:	beq.n	16b4e <__btrfs_warning@@Base+0x5a>
   16b4a:	blx	8510 <__stack_chk_fail@plt>
   16b4e:	add	sp, #20
   16b50:	ldmia.w	sp!, {r4, r5, lr}
   16b54:	add	sp, #16
   16b56:	bx	lr
   16b58:	bcs.n	16a5c <btrfs_clone_extent_buffer@@Base+0x10>
   16b5a:	movs	r4, r0
   16b5c:	bcs.n	16c5c <__btrfs_warning_on@@Base+0x70>
   16b5e:	movs	r4, r0
   16b60:	ldr	r4, [pc, #16]	; (16b74 <__btrfs_error@@Base+0x4>)
   16b62:	movs	r2, r0
   16b64:	lsls	r0, r4, #8
   16b66:	movs	r0, r0
   16b68:	lsls	r0, r6, #8
   16b6a:	movs	r0, r0
   16b6c:	bcs.n	16bfc <__btrfs_warning_on@@Base+0x10>
   16b6e:	movs	r4, r0

00016b70 <__btrfs_error@@Base>:
   16b70:	push	{r0, r1, r2, r3}
   16b72:	push	{r4, r5, lr}
   16b74:	sub	sp, #20
   16b76:	add	r4, sp, #32
   16b78:	ldr	r1, [pc, #88]	; (16bd4 <__btrfs_error@@Base+0x64>)
   16b7a:	ldr	r3, [pc, #92]	; (16bd8 <__btrfs_error@@Base+0x68>)
   16b7c:	ldr.w	r2, [r4], #4
   16b80:	add	r1, pc
   16b82:	add	r3, pc
   16b84:	ldr	r0, [pc, #84]	; (16bdc <__btrfs_error@@Base+0x6c>)
   16b86:	str	r2, [sp, #4]
   16b88:	add	r0, pc
   16b8a:	ldr	r2, [pc, #84]	; (16be0 <__btrfs_error@@Base+0x70>)
   16b8c:	ldr	r2, [r1, r2]
   16b8e:	ldr	r1, [pc, #84]	; (16be4 <__btrfs_error@@Base+0x74>)
   16b90:	ldr	r2, [r2, #0]
   16b92:	str	r2, [sp, #12]
   16b94:	mov.w	r2, #0
   16b98:	ldr	r5, [r3, r1]
   16b9a:	ldr	r1, [r5, #0]
   16b9c:	blx	8968 <fputs@plt+0x4>
   16ba0:	ldr	r2, [sp, #4]
   16ba2:	mov	r3, r4
   16ba4:	movs	r1, #1
   16ba6:	ldr	r0, [r5, #0]
   16ba8:	str	r4, [sp, #8]
   16baa:	blx	86b8 <__vfprintf_chk@plt>
   16bae:	ldr	r1, [r5, #0]
   16bb0:	movs	r0, #10
   16bb2:	blx	88d0 <fputc@plt+0x4>
   16bb6:	ldr	r2, [pc, #48]	; (16be8 <__btrfs_error@@Base+0x78>)
   16bb8:	ldr	r3, [pc, #36]	; (16be0 <__btrfs_error@@Base+0x70>)
   16bba:	add	r2, pc
   16bbc:	ldr	r3, [r2, r3]
   16bbe:	ldr	r2, [r3, #0]
   16bc0:	ldr	r3, [sp, #12]
   16bc2:	eors	r2, r3
   16bc4:	beq.n	16bca <__btrfs_error@@Base+0x5a>
   16bc6:	blx	8510 <__stack_chk_fail@plt>
   16bca:	add	sp, #20
   16bcc:	ldmia.w	sp!, {r4, r5, lr}
   16bd0:	add	sp, #16
   16bd2:	bx	lr
   16bd4:	bcs.n	16be0 <__btrfs_error@@Base+0x70>
   16bd6:	movs	r4, r0
   16bd8:	bcs.n	16be0 <__btrfs_error@@Base+0x70>
   16bda:	movs	r4, r0
   16bdc:	ldr	r3, [pc, #584]	; (16e28 <btrfs_lookup_uuid_subvol_item@@Base+0x4>)
   16bde:	movs	r2, r0
   16be0:	lsls	r0, r4, #8
   16be2:	movs	r0, r0
   16be4:	lsls	r0, r6, #8
   16be6:	movs	r0, r0
   16be8:	bne.n	16b80 <__btrfs_error@@Base+0x10>
   16bea:	movs	r4, r0

00016bec <__btrfs_warning_on@@Base>:
   16bec:	push	{r1, r2, r3}
   16bee:	push	{r4, lr}
   16bf0:	sub	sp, #20
   16bf2:	ldr	r1, [pc, #92]	; (16c50 <__btrfs_warning_on@@Base+0x64>)
   16bf4:	ldr	r2, [sp, #28]
   16bf6:	add	r1, pc
   16bf8:	ldr	r3, [pc, #88]	; (16c54 <__btrfs_warning_on@@Base+0x68>)
   16bfa:	str	r2, [sp, #4]
   16bfc:	add	r3, pc
   16bfe:	ldr	r2, [pc, #88]	; (16c58 <__btrfs_warning_on@@Base+0x6c>)
   16c00:	ldr	r2, [r1, r2]
   16c02:	ldr	r2, [r2, #0]
   16c04:	str	r2, [sp, #12]
   16c06:	mov.w	r2, #0
   16c0a:	cbz	r0, 16c32 <__btrfs_warning_on@@Base+0x46>
   16c0c:	ldr	r1, [pc, #76]	; (16c5c <__btrfs_warning_on@@Base+0x70>)
   16c0e:	ldr	r0, [pc, #80]	; (16c60 <__btrfs_warning_on@@Base+0x74>)
   16c10:	ldr	r4, [r3, r1]
   16c12:	add	r0, pc
   16c14:	ldr	r1, [r4, #0]
   16c16:	blx	8968 <fputs@plt+0x4>
   16c1a:	add	r3, sp, #32
   16c1c:	ldr	r2, [sp, #4]
   16c1e:	movs	r1, #1
   16c20:	ldr	r0, [r4, #0]
   16c22:	str	r3, [sp, #8]
   16c24:	blx	86b8 <__vfprintf_chk@plt>
   16c28:	ldr	r1, [r4, #0]
   16c2a:	movs	r0, #10
   16c2c:	blx	88d0 <fputc@plt+0x4>
   16c30:	movs	r0, #1
   16c32:	ldr	r2, [pc, #48]	; (16c64 <__btrfs_warning_on@@Base+0x78>)
   16c34:	ldr	r3, [pc, #32]	; (16c58 <__btrfs_warning_on@@Base+0x6c>)
   16c36:	add	r2, pc
   16c38:	ldr	r3, [r2, r3]
   16c3a:	ldr	r2, [r3, #0]
   16c3c:	ldr	r3, [sp, #12]
   16c3e:	eors	r2, r3
   16c40:	beq.n	16c46 <__btrfs_warning_on@@Base+0x5a>
   16c42:	blx	8510 <__stack_chk_fail@plt>
   16c46:	add	sp, #20
   16c48:	ldmia.w	sp!, {r4, lr}
   16c4c:	add	sp, #12
   16c4e:	bx	lr
   16c50:	bne.n	16b70 <__btrfs_error@@Base>
   16c52:	movs	r4, r0
   16c54:	bne.n	16b68 <__btrfs_warning@@Base+0x74>
   16c56:	movs	r4, r0
   16c58:	lsls	r0, r4, #8
   16c5a:	movs	r0, r0
   16c5c:	lsls	r0, r6, #8
   16c5e:	movs	r0, r0
   16c60:	ldr	r2, [pc, #1016]	; (1705c <rb_free_nodes@@Base+0x6a>)
   16c62:	movs	r2, r0
   16c64:	bne.n	16d04 <btrfs_uuid_to_key@@Base+0x20>
   16c66:	movs	r4, r0

00016c68 <__btrfs_error_on@@Base>:
   16c68:	push	{r1, r2, r3}
   16c6a:	push	{r4, lr}
   16c6c:	sub	sp, #20
   16c6e:	ldr	r1, [pc, #92]	; (16ccc <__btrfs_error_on@@Base+0x64>)
   16c70:	ldr	r2, [sp, #28]
   16c72:	add	r1, pc
   16c74:	ldr	r3, [pc, #88]	; (16cd0 <__btrfs_error_on@@Base+0x68>)
   16c76:	str	r2, [sp, #4]
   16c78:	add	r3, pc
   16c7a:	ldr	r2, [pc, #88]	; (16cd4 <__btrfs_error_on@@Base+0x6c>)
   16c7c:	ldr	r2, [r1, r2]
   16c7e:	ldr	r2, [r2, #0]
   16c80:	str	r2, [sp, #12]
   16c82:	mov.w	r2, #0
   16c86:	cbz	r0, 16cae <__btrfs_error_on@@Base+0x46>
   16c88:	ldr	r1, [pc, #76]	; (16cd8 <__btrfs_error_on@@Base+0x70>)
   16c8a:	ldr	r0, [pc, #80]	; (16cdc <__btrfs_error_on@@Base+0x74>)
   16c8c:	ldr	r4, [r3, r1]
   16c8e:	add	r0, pc
   16c90:	ldr	r1, [r4, #0]
   16c92:	blx	8968 <fputs@plt+0x4>
   16c96:	add	r3, sp, #32
   16c98:	ldr	r2, [sp, #4]
   16c9a:	movs	r1, #1
   16c9c:	ldr	r0, [r4, #0]
   16c9e:	str	r3, [sp, #8]
   16ca0:	blx	86b8 <__vfprintf_chk@plt>
   16ca4:	ldr	r1, [r4, #0]
   16ca6:	movs	r0, #10
   16ca8:	blx	88d0 <fputc@plt+0x4>
   16cac:	movs	r0, #1
   16cae:	ldr	r2, [pc, #48]	; (16ce0 <__btrfs_error_on@@Base+0x78>)
   16cb0:	ldr	r3, [pc, #32]	; (16cd4 <__btrfs_error_on@@Base+0x6c>)
   16cb2:	add	r2, pc
   16cb4:	ldr	r3, [r2, r3]
   16cb6:	ldr	r2, [r3, #0]
   16cb8:	ldr	r3, [sp, #12]
   16cba:	eors	r2, r3
   16cbc:	beq.n	16cc2 <__btrfs_error_on@@Base+0x5a>
   16cbe:	blx	8510 <__stack_chk_fail@plt>
   16cc2:	add	sp, #20
   16cc4:	ldmia.w	sp!, {r4, lr}
   16cc8:	add	sp, #12
   16cca:	bx	lr
   16ccc:	bne.n	16cf4 <btrfs_uuid_to_key@@Base+0x10>
   16cce:	movs	r4, r0
   16cd0:	bne.n	16cec <btrfs_uuid_to_key@@Base+0x8>
   16cd2:	movs	r4, r0
   16cd4:	lsls	r0, r4, #8
   16cd6:	movs	r0, r0
   16cd8:	lsls	r0, r6, #8
   16cda:	movs	r0, r0
   16cdc:	ldr	r2, [pc, #560]	; (16f10 <lookup_path_rootid@@Base+0x38>)
   16cde:	movs	r2, r0
   16ce0:	beq.n	16c88 <__btrfs_error_on@@Base+0x20>
   16ce2:	movs	r4, r0

00016ce4 <btrfs_uuid_to_key@@Base>:
   16ce4:	ldr	r2, [r0, #0]
   16ce6:	ldr	r3, [r0, #4]
   16ce8:	str	r2, [r1, #0]
   16cea:	str	r3, [r1, #4]
   16cec:	ldr	r2, [r0, #8]
   16cee:	ldr	r3, [r0, #12]
   16cf0:	str.w	r2, [r1, #9]
   16cf4:	str.w	r3, [r1, #13]
   16cf8:	bx	lr
   16cfa:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   16cfe:	mov	r9, r0
   16d00:	mov	r0, r1
   16d02:	ldr	r1, [pc, #260]	; (16e08 <btrfs_uuid_to_key@@Base+0x124>)
   16d04:	mov	r7, r2
   16d06:	sub.w	sp, sp, #4128	; 0x1020
   16d0a:	ldr	r2, [pc, #256]	; (16e0c <btrfs_uuid_to_key@@Base+0x128>)
   16d0c:	sub	sp, #24
   16d0e:	add	r1, pc
   16d10:	add	r6, sp, #56	; 0x38
   16d12:	add	r5, sp, #28
   16d14:	sub.w	r4, r6, #8
   16d18:	ldr	r2, [r1, r2]
   16d1a:	mov	r8, r3
   16d1c:	add.w	r3, sp, #4128	; 0x1020
   16d20:	mov	r1, r5
   16d22:	ldr	r2, [r2, #0]
   16d24:	str	r2, [r3, #20]
   16d26:	mov.w	r2, #0
   16d2a:	adds	r3, #20
   16d2c:	strb.w	r7, [sp, #36]	; 0x24
   16d30:	bl	16ce4 <btrfs_uuid_to_key@@Base>
   16d34:	mov.w	r2, #4096	; 0x1000
   16d38:	movs	r1, #0
   16d3a:	mov	r0, r4
   16d3c:	ldr.w	sl, [pc, #208]	; 16e10 <btrfs_uuid_to_key@@Base+0x12c>
   16d40:	blx	87c4 <memset@plt+0x4>
   16d44:	movs	r2, #9
   16d46:	movs	r3, #0
   16d48:	strd	r2, r3, [r6, #-8]
   16d4c:	ldrd	r2, r3, [r6, #-28]
   16d50:	mov	r0, r9
   16d52:	strd	r7, r7, [r4, #56]	; 0x38
   16d56:	movs	r7, #1
   16d58:	ldr	r1, [pc, #168]	; (16e04 <btrfs_uuid_to_key@@Base+0x120>)
   16d5a:	add	sl, pc
   16d5c:	strd	r2, r3, [r4, #8]
   16d60:	strd	r2, r3, [r4, #16]
   16d64:	ldr.w	r2, [r6, #-19]
   16d68:	ldr.w	r3, [r6, #-15]
   16d6c:	str	r7, [r4, #64]	; 0x40
   16d6e:	strd	r2, r3, [r4, #24]
   16d72:	strd	r2, r3, [r4, #32]
   16d76:	mov.w	r2, #4294967295	; 0xffffffff
   16d7a:	mov.w	r3, #4294967295	; 0xffffffff
   16d7e:	strd	r2, r3, [r4, #48]	; 0x30
   16d82:	mov	r2, r4
   16d84:	blx	85bc <ioctl@plt>
   16d88:	cmp	r0, #0
   16d8a:	bge.n	16dba <btrfs_uuid_to_key@@Base+0xd6>
   16d8c:	ldr	r3, [pc, #132]	; (16e14 <btrfs_uuid_to_key@@Base+0x130>)
   16d8e:	ldr.w	r3, [sl, r3]
   16d92:	str	r0, [sp, #16]
   16d94:	ldr.w	r1, [r6, #-19]
   16d98:	ldr.w	r2, [r6, #-15]
   16d9c:	strd	r1, r2, [sp, #8]
   16da0:	ldrd	r1, r2, [r6, #-28]
   16da4:	strd	r1, r2, [sp]
   16da8:	mov	r1, r7
   16daa:	ldr	r2, [pc, #108]	; (16e18 <btrfs_uuid_to_key@@Base+0x134>)
   16dac:	ldr	r0, [r3, #0]
   16dae:	add	r2, pc
   16db0:	blx	8860 <__fprintf_chk@plt+0x4>
   16db4:	mvn.w	r0, #1
   16db8:	b.n	16de0 <btrfs_uuid_to_key@@Base+0xfc>
   16dba:	ldr	r3, [r4, #64]	; 0x40
   16dbc:	cmp	r3, #0
   16dbe:	beq.n	16db4 <btrfs_uuid_to_key@@Base+0xd0>
   16dc0:	ldr.w	r2, [r4, #132]	; 0x84
   16dc4:	ands.w	r0, r2, #7
   16dc8:	bne.n	16dcc <btrfs_uuid_to_key@@Base+0xe8>
   16dca:	cbnz	r2, 16dd8 <btrfs_uuid_to_key@@Base+0xf4>
   16dcc:	ldr	r1, [pc, #76]	; (16e1c <btrfs_uuid_to_key@@Base+0x138>)
   16dce:	movs	r0, #1
   16dd0:	add	r1, pc
   16dd2:	blx	8838 <__printf_chk@plt+0x4>
   16dd6:	b.n	16db4 <btrfs_uuid_to_key@@Base+0xd0>
   16dd8:	ldrd	r2, r3, [r4, #136]	; 0x88
   16ddc:	strd	r2, r3, [r8]
   16de0:	ldr	r1, [pc, #60]	; (16e20 <btrfs_uuid_to_key@@Base+0x13c>)
   16de2:	add.w	r3, sp, #4128	; 0x1020
   16de6:	ldr	r2, [pc, #36]	; (16e0c <btrfs_uuid_to_key@@Base+0x128>)
   16de8:	adds	r3, #20
   16dea:	add	r1, pc
   16dec:	ldr	r2, [r1, r2]
   16dee:	ldr	r1, [r2, #0]
   16df0:	ldr	r2, [r3, #0]
   16df2:	eors	r1, r2
   16df4:	beq.n	16dfa <btrfs_uuid_to_key@@Base+0x116>
   16df6:	blx	8510 <__stack_chk_fail@plt>
   16dfa:	add.w	sp, sp, #4128	; 0x1020
   16dfe:	add	sp, #24
   16e00:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   16e04:	str	r4, [sp, #68]	; 0x44
   16e06:	beq.n	16e0a <btrfs_uuid_to_key@@Base+0x126>
   16e08:	beq.n	16ef8 <lookup_path_rootid@@Base+0x20>
   16e0a:	movs	r4, r0
   16e0c:	lsls	r0, r4, #8
   16e0e:	movs	r0, r0
   16e10:	beq.n	16e68 <arg_strtou64@@Base+0x38>
   16e12:	movs	r4, r0
   16e14:	lsls	r0, r6, #8
   16e16:	movs	r0, r0
   16e18:	ldr	r1, [pc, #464]	; (16fec <rb_search@@Base+0x38>)
   16e1a:	movs	r2, r0
   16e1c:	ldr	r1, [pc, #672]	; (170c0 <rb_free_nodes@@Base+0xce>)
   16e1e:	movs	r2, r0
   16e20:	ldmia	r7, {r1, r3, r4, r7}
   16e22:	movs	r4, r0

00016e24 <btrfs_lookup_uuid_subvol_item@@Base>:
   16e24:	mov	r3, r2
   16e26:	movs	r2, #251	; 0xfb
   16e28:	b.n	16cfa <btrfs_uuid_to_key@@Base+0x16>

00016e2a <btrfs_lookup_uuid_received_subvol_item@@Base>:
   16e2a:	mov	r3, r2
   16e2c:	movs	r2, #252	; 0xfc
   16e2e:	b.n	16cfa <btrfs_uuid_to_key@@Base+0x16>

00016e30 <arg_strtou64@@Base>:
   16e30:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   16e32:	add	r1, sp, #8
   16e34:	ldr	r2, [pc, #128]	; (16eb8 <arg_strtou64@@Base+0x88>)
   16e36:	ldr	r3, [pc, #132]	; (16ebc <arg_strtou64@@Base+0x8c>)
   16e38:	add	r2, pc
   16e3a:	str	r0, [sp, #4]
   16e3c:	ldr	r6, [pc, #128]	; (16ec0 <arg_strtou64@@Base+0x90>)
   16e3e:	ldr	r3, [r2, r3]
   16e40:	movs	r2, #0
   16e42:	add	r6, pc
   16e44:	ldr	r3, [r3, #0]
   16e46:	str	r3, [sp, #12]
   16e48:	mov.w	r3, #0
   16e4c:	str	r2, [sp, #8]
   16e4e:	blx	8804 <strtoull@plt>
   16e52:	ldrd	r3, r2, [sp, #4]
   16e56:	mov	r4, r0
   16e58:	mov	r5, r1
   16e5a:	cbz	r2, 16e76 <arg_strtou64@@Base+0x46>
   16e5c:	ldrb	r2, [r2, #0]
   16e5e:	cbz	r2, 16e76 <arg_strtou64@@Base+0x46>
   16e60:	ldr	r2, [pc, #96]	; (16ec4 <arg_strtou64@@Base+0x94>)
   16e62:	ldr	r0, [r6, r2]
   16e64:	ldr	r2, [pc, #96]	; (16ec8 <arg_strtou64@@Base+0x98>)
   16e66:	add	r2, pc
   16e68:	ldr	r0, [r0, #0]
   16e6a:	movs	r1, #1
   16e6c:	blx	8860 <__fprintf_chk@plt+0x4>
   16e70:	movs	r0, #1
   16e72:	blx	873c <exit@plt>
   16e76:	ldrb	r2, [r3, #0]
   16e78:	cmp	r2, #45	; 0x2d
   16e7a:	bne.n	16e86 <arg_strtou64@@Base+0x56>
   16e7c:	ldr	r2, [pc, #68]	; (16ec4 <arg_strtou64@@Base+0x94>)
   16e7e:	ldr	r0, [r6, r2]
   16e80:	ldr	r2, [pc, #72]	; (16ecc <arg_strtou64@@Base+0x9c>)
   16e82:	add	r2, pc
   16e84:	b.n	16e68 <arg_strtou64@@Base+0x38>
   16e86:	adds	r2, r5, #1
   16e88:	it	eq
   16e8a:	cmpeq.w	r4, #4294967295	; 0xffffffff
   16e8e:	bne.n	16e9a <arg_strtou64@@Base+0x6a>
   16e90:	ldr	r2, [pc, #48]	; (16ec4 <arg_strtou64@@Base+0x94>)
   16e92:	ldr	r0, [r6, r2]
   16e94:	ldr	r2, [pc, #56]	; (16ed0 <arg_strtou64@@Base+0xa0>)
   16e96:	add	r2, pc
   16e98:	b.n	16e68 <arg_strtou64@@Base+0x38>
   16e9a:	ldr	r2, [pc, #56]	; (16ed4 <arg_strtou64@@Base+0xa4>)
   16e9c:	ldr	r3, [pc, #28]	; (16ebc <arg_strtou64@@Base+0x8c>)
   16e9e:	add	r2, pc
   16ea0:	ldr	r3, [r2, r3]
   16ea2:	ldr	r2, [r3, #0]
   16ea4:	ldr	r3, [sp, #12]
   16ea6:	eors	r2, r3
   16ea8:	beq.n	16eae <arg_strtou64@@Base+0x7e>
   16eaa:	blx	8510 <__stack_chk_fail@plt>
   16eae:	mov	r0, r4
   16eb0:	mov	r1, r5
   16eb2:	add	sp, #16
   16eb4:	pop	{r4, r5, r6, pc}
   16eb6:	nop
   16eb8:	ldmia	r7!, {r2, r3, r6}
   16eba:	movs	r4, r0
   16ebc:	lsls	r0, r4, #8
   16ebe:	movs	r0, r0
   16ec0:	ldmia	r7!, {r1, r6}
   16ec2:	movs	r4, r0
   16ec4:	lsls	r0, r6, #8
   16ec6:	movs	r0, r0
   16ec8:	ldr	r1, [pc, #236]	; (16fb8 <rb_search@@Base+0x4>)
   16eca:	movs	r2, r0
   16ecc:	ldr	r1, [pc, #288]	; (16ff0 <rb_search@@Base+0x3c>)
   16ece:	movs	r2, r0
   16ed0:	ldr	r1, [pc, #364]	; (17040 <rb_free_nodes@@Base+0x4e>)
   16ed2:	movs	r2, r0
   16ed4:	ldmia	r6, {r1, r2, r5, r6, r7}
   16ed6:	movs	r4, r0

00016ed8 <lookup_path_rootid@@Base>:
   16ed8:	push	{r4, r5, r6, lr}
   16eda:	mov	r4, r1
   16edc:	ldr	r1, [pc, #128]	; (16f60 <lookup_path_rootid@@Base+0x88>)
   16ede:	sub.w	sp, sp, #4096	; 0x1000
   16ee2:	ldr	r2, [pc, #128]	; (16f64 <lookup_path_rootid@@Base+0x8c>)
   16ee4:	sub	sp, #8
   16ee6:	add	r1, pc
   16ee8:	add.w	r3, sp, #4096	; 0x1000
   16eec:	adds	r3, #4
   16eee:	add	r6, sp, #8
   16ef0:	ldr	r2, [r1, r2]
   16ef2:	mov	r5, r0
   16ef4:	movs	r1, #0
   16ef6:	ldr	r2, [r2, #0]
   16ef8:	str	r2, [r3, #0]
   16efa:	mov.w	r2, #0
   16efe:	sub.w	r3, r6, #8
   16f02:	mov.w	r2, #4096	; 0x1000
   16f06:	mov	r0, r3
   16f08:	blx	87c4 <memset@plt+0x4>
   16f0c:	movs	r1, #0
   16f0e:	mov	r3, r0
   16f10:	mov.w	r0, #256	; 0x100
   16f14:	mov	r2, r3
   16f16:	strd	r0, r1, [r3, #8]
   16f1a:	ldr	r1, [pc, #64]	; (16f5c <lookup_path_rootid@@Base+0x84>)
   16f1c:	mov	r0, r5
   16f1e:	blx	85bc <ioctl@plt>
   16f22:	cmp	r0, #0
   16f24:	bge.n	16f48 <lookup_path_rootid@@Base+0x70>
   16f26:	blx	8784 <__errno_location@plt>
   16f2a:	ldr	r0, [r0, #0]
   16f2c:	negs	r0, r0
   16f2e:	ldr	r1, [pc, #56]	; (16f68 <lookup_path_rootid@@Base+0x90>)
   16f30:	add.w	r3, sp, #4096	; 0x1000
   16f34:	ldr	r2, [pc, #44]	; (16f64 <lookup_path_rootid@@Base+0x8c>)
   16f36:	adds	r3, #4
   16f38:	add	r1, pc
   16f3a:	ldr	r2, [r1, r2]
   16f3c:	ldr	r1, [r2, #0]
   16f3e:	ldr	r2, [r3, #0]
   16f40:	eors	r1, r2
   16f42:	beq.n	16f54 <lookup_path_rootid@@Base+0x7c>
   16f44:	blx	8510 <__stack_chk_fail@plt>
   16f48:	ldrd	r2, r3, [r6, #-8]
   16f4c:	movs	r0, #0
   16f4e:	strd	r2, r3, [r4]
   16f52:	b.n	16f2e <lookup_path_rootid@@Base+0x56>
   16f54:	add.w	sp, sp, #4096	; 0x1000
   16f58:	add	sp, #8
   16f5a:	pop	{r4, r5, r6, pc}
   16f5c:	str	r4, [sp, #72]	; 0x48
   16f5e:	beq.n	16f62 <lookup_path_rootid@@Base+0x8a>
   16f60:	ldmia	r6!, {r1, r2, r3, r4, r7}
   16f62:	movs	r4, r0
   16f64:	lsls	r0, r4, #8
   16f66:	movs	r0, r0
   16f68:	ldmia	r6, {r2, r3, r6}
   16f6a:	movs	r4, r0

00016f6c <rb_insert@@Base>:
   16f6c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   16f70:	movs	r3, #0
   16f72:	mov	r7, r0
   16f74:	mov	r6, r1
   16f76:	mov	r8, r2
   16f78:	mov	r4, r0
   16f7a:	ldr	r5, [r4, #0]
   16f7c:	cbnz	r5, 16f94 <rb_insert@@Base+0x28>
   16f7e:	mov	r0, r6
   16f80:	strd	r3, r5, [r6]
   16f84:	str	r5, [r6, #8]
   16f86:	mov	r1, r7
   16f88:	str	r6, [r4, #0]
   16f8a:	bl	1321e <rb_insert_color@@Base>
   16f8e:	mov	r0, r5
   16f90:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   16f94:	mov	r1, r6
   16f96:	mov	r0, r5
   16f98:	blx	r8
   16f9a:	cmp	r0, #0
   16f9c:	bge.n	16fa6 <rb_insert@@Base+0x3a>
   16f9e:	ldr	r4, [r4, #0]
   16fa0:	adds	r4, #8
   16fa2:	mov	r3, r5
   16fa4:	b.n	16f7a <rb_insert@@Base+0xe>
   16fa6:	beq.n	16fae <rb_insert@@Base+0x42>
   16fa8:	ldr	r4, [r4, #0]
   16faa:	adds	r4, #4
   16fac:	b.n	16fa2 <rb_insert@@Base+0x36>
   16fae:	mvn.w	r0, #16
   16fb2:	b.n	16f90 <rb_insert@@Base+0x24>

00016fb4 <rb_search@@Base>:
   16fb4:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   16fb8:	movs	r5, #0
   16fba:	ldr	r4, [r0, #0]
   16fbc:	mov	r8, r1
   16fbe:	mov	r7, r2
   16fc0:	mov	r6, r3
   16fc2:	mov	r0, r5
   16fc4:	cbnz	r4, 16fda <rb_search@@Base+0x26>
   16fc6:	cbz	r6, 16fd4 <rb_search@@Base+0x20>
   16fc8:	cbz	r0, 16fd2 <rb_search@@Base+0x1e>
   16fca:	cmp	r5, #0
   16fcc:	ble.n	16fd2 <rb_search@@Base+0x1e>
   16fce:	bl	1355a <rb_next@@Base>
   16fd2:	str	r0, [r6, #0]
   16fd4:	mov	r0, r4
   16fd6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   16fda:	mov	r1, r8
   16fdc:	mov	r0, r4
   16fde:	blx	r7
   16fe0:	subs	r5, r0, #0
   16fe2:	bge.n	16fec <rb_search@@Base+0x38>
   16fe4:	ldr	r3, [r4, #8]
   16fe6:	mov	r0, r4
   16fe8:	mov	r4, r3
   16fea:	b.n	16fc4 <rb_search@@Base+0x10>
   16fec:	beq.n	16fd4 <rb_search@@Base+0x20>
   16fee:	ldr	r3, [r4, #4]
   16ff0:	b.n	16fe6 <rb_search@@Base+0x32>

00016ff2 <rb_free_nodes@@Base>:
   16ff2:	push	{r4, r5, r6, lr}
   16ff4:	mov	r5, r0
   16ff6:	mov	r6, r1
   16ff8:	mov	r0, r5
   16ffa:	bl	1353a <rb_first@@Base>
   16ffe:	mov	r4, r0
   17000:	cbnz	r0, 17004 <rb_free_nodes@@Base+0x12>
   17002:	pop	{r4, r5, r6, pc}
   17004:	mov	r1, r5
   17006:	bl	132c4 <rb_erase@@Base>
   1700a:	mov	r0, r4
   1700c:	blx	r6
   1700e:	b.n	16ff8 <rb_free_nodes@@Base+0x6>
   17010:	movs	r3, #25
   17012:	mla	r1, r3, r1, r0
   17016:	ldr.w	r0, [r1, #214]	; 0xd6
   1701a:	ldr.w	r3, [r1, #218]	; 0xda
   1701e:	add	r0, r3
   17020:	bx	lr
   17022:	add.w	r2, r2, r2, lsl #5
   17026:	movs	r3, #17
   17028:	adds	r2, #101	; 0x65
   1702a:	b.w	16a24 <write_extent_buffer@@Base>
   1702e:	movs	r3, #25
   17030:	muls	r2, r3
   17032:	movs	r3, #17
   17034:	adds	r2, #101	; 0x65
   17036:	b.w	16a24 <write_extent_buffer@@Base>
   1703a:	movs	r3, #25
   1703c:	muls	r2, r3
   1703e:	movs	r3, #17
   17040:	adds	r2, #101	; 0x65
   17042:	b.w	16a0e <read_extent_buffer@@Base>
   17046:	add.w	r2, r2, r2, lsl #5
   1704a:	movs	r3, #17
   1704c:	adds	r2, #101	; 0x65
   1704e:	b.w	16a0e <read_extent_buffer@@Base>
   17052:	ldr	r2, [pc, #64]	; (17094 <rb_free_nodes@@Base+0xa2>)
   17054:	movs	r1, #16
   17056:	ldr	r3, [pc, #64]	; (17098 <rb_free_nodes@@Base+0xa6>)
   17058:	push	{r4, lr}
   1705a:	add	r2, pc
   1705c:	sub	sp, #72	; 0x48
   1705e:	add	r4, sp, #4
   17060:	ldr	r3, [r2, r3]
   17062:	mov	r0, r4
   17064:	ldr	r3, [r3, #0]
   17066:	str	r3, [sp, #68]	; 0x44
   17068:	mov.w	r3, #0
   1706c:	blx	86c4 <backtrace@plt>
   17070:	movs	r2, #2
   17072:	mov	r1, r0
   17074:	mov	r0, r4
   17076:	blx	89c8 <backtrace_symbols_fd@plt>
   1707a:	ldr	r2, [pc, #32]	; (1709c <rb_free_nodes@@Base+0xaa>)
   1707c:	ldr	r3, [pc, #24]	; (17098 <rb_free_nodes@@Base+0xa6>)
   1707e:	add	r2, pc
   17080:	ldr	r3, [r2, r3]
   17082:	ldr	r2, [r3, #0]
   17084:	ldr	r3, [sp, #68]	; 0x44
   17086:	eors	r2, r3
   17088:	beq.n	1708e <rb_free_nodes@@Base+0x9c>
   1708a:	blx	8510 <__stack_chk_fail@plt>
   1708e:	add	sp, #72	; 0x48
   17090:	pop	{r4, pc}
   17092:	nop
   17094:	ldmia	r5, {r1, r3, r5}
   17096:	movs	r4, r0
   17098:	lsls	r0, r4, #8
   1709a:	movs	r0, r0
   1709c:	ldmia	r5!, {r1, r2}
   1709e:	movs	r4, r0
   170a0:	cbz	r0, 170b2 <rb_free_nodes@@Base+0xc0>
   170a2:	cmn.w	r0, #4096	; 0x1000
   170a6:	bhi.n	170b0 <rb_free_nodes@@Base+0xbe>
   170a8:	ldr	r0, [r0, #84]	; 0x54
   170aa:	ubfx	r0, r0, #2, #1
   170ae:	bx	lr
   170b0:	movs	r0, #0
   170b2:	bx	lr
   170b4:	ldr.w	r3, [r1, #192]	; 0xc0
   170b8:	cbnz	r3, 170c0 <rb_free_nodes@@Base+0xce>
   170ba:	ldr	r0, [r0, #0]
   170bc:	subs	r0, #101	; 0x65
   170be:	bx	lr
   170c0:	subs	r3, #1
   170c2:	movs	r2, #25
   170c4:	mla	r1, r2, r3, r1
   170c8:	ldr.w	r0, [r1, #214]	; 0xd6
   170cc:	bx	lr
   170ce:	push	{r0, r1, r2, r3, r4, lr}
   170d0:	ldr	r4, [pc, #36]	; (170f8 <rb_free_nodes@@Base+0x106>)
   170d2:	ldr	r5, [pc, #40]	; (170fc <rb_free_nodes@@Base+0x10a>)
   170d4:	add	r4, pc
   170d6:	ldr	r4, [r4, r5]
   170d8:	strd	r2, r1, [sp]
   170dc:	movs	r1, #1
   170de:	strd	r0, r3, [sp, #8]
   170e2:	ldr	r2, [pc, #28]	; (17100 <rb_free_nodes@@Base+0x10e>)
   170e4:	ldr	r3, [pc, #28]	; (17104 <rb_free_nodes@@Base+0x112>)
   170e6:	add	r2, pc
   170e8:	ldr	r0, [r4, #0]
   170ea:	add	r3, pc
   170ec:	blx	8860 <__fprintf_chk@plt+0x4>
   170f0:	bl	17052 <rb_free_nodes@@Base+0x60>
   170f4:	blx	8980 <abort@plt>
   170f8:	ldmia	r4, {r4, r5, r7}
   170fa:	movs	r4, r0
   170fc:	lsls	r0, r6, #8
   170fe:	movs	r0, r0
   17100:	adds	r4, r7, #6
   17102:	movs	r2, r0
   17104:	bx	r4
   17106:	movs	r2, r0
   17108:	push	{r3, lr}
   1710a:	cbz	r3, 17110 <rb_free_nodes@@Base+0x11e>
   1710c:	bl	170ce <rb_free_nodes@@Base+0xdc>
   17110:	pop	{r3, pc}
   17112:	push	{r4, r5, lr}
   17114:	sub	sp, #20
   17116:	ldr	r4, [pc, #40]	; (17140 <rb_free_nodes@@Base+0x14e>)
   17118:	ldr	r5, [pc, #40]	; (17144 <rb_free_nodes@@Base+0x152>)
   1711a:	add	r4, pc
   1711c:	ldr	r4, [r4, r5]
   1711e:	strd	r2, r1, [sp]
   17122:	movs	r1, #1
   17124:	strd	r0, r3, [sp, #8]
   17128:	ldr	r2, [pc, #28]	; (17148 <rb_free_nodes@@Base+0x156>)
   1712a:	ldr	r3, [pc, #32]	; (1714c <rb_free_nodes@@Base+0x15a>)
   1712c:	ldr	r0, [r4, #0]
   1712e:	add	r2, pc
   17130:	add	r3, pc
   17132:	blx	8860 <__fprintf_chk@plt+0x4>
   17136:	add	sp, #20
   17138:	ldmia.w	sp!, {r4, r5, lr}
   1713c:	b.n	17052 <rb_free_nodes@@Base+0x60>
   1713e:	nop
   17140:	ldmia	r4!, {r1, r3, r5, r6}
   17142:	movs	r4, r0
   17144:	lsls	r0, r6, #8
   17146:	movs	r0, r0
   17148:	adds	r6, r7, #4
   1714a:	movs	r2, r0
   1714c:	mov	sl, fp
   1714e:	movs	r2, r0
   17150:	cbz	r3, 17156 <rb_free_nodes@@Base+0x164>
   17152:	movs	r3, #1
   17154:	b.n	17112 <rb_free_nodes@@Base+0x120>
   17156:	bx	lr
   17158:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1715c:	mov	r8, r3
   1715e:	ldrd	r6, r3, [sp, #56]	; 0x38
   17162:	mov	r7, r0
   17164:	mov	fp, r1
   17166:	ldr	r0, [pc, #204]	; (17234 <rb_free_nodes@@Base+0x242>)
   17168:	ldr	r1, [pc, #204]	; (17238 <rb_free_nodes@@Base+0x246>)
   1716a:	ldr.w	r4, [r2, r3, lsl #2]
   1716e:	add	r0, pc
   17170:	add	r1, pc
   17172:	mov.w	r2, #1624	; 0x658
   17176:	clz	r3, r4
   1717a:	str	r1, [sp, #4]
   1717c:	ldrd	sl, r9, [sp, #48]	; 0x30
   17180:	lsrs	r3, r3, #5
   17182:	bl	17108 <rb_free_nodes@@Base+0x116>
   17186:	ldr.w	r5, [r4, #192]	; 0xc0
   1718a:	ldr	r1, [sp, #4]
   1718c:	cmp	r5, r6
   1718e:	bge.n	1719e <rb_free_nodes@@Base+0x1ac>
   17190:	ldr	r0, [pc, #168]	; (1723c <rb_free_nodes@@Base+0x24a>)
   17192:	movs	r3, #1
   17194:	movw	r2, #1628	; 0x65c
   17198:	add	r0, pc
   1719a:	bl	170ce <rb_free_nodes@@Base+0xdc>
   1719e:	ldr.w	r3, [fp]
   171a2:	ldr.w	r2, [r3, #384]	; 0x180
   171a6:	ldr	r3, [pc, #136]	; (17230 <rb_free_nodes@@Base+0x23e>)
   171a8:	subs	r2, #101	; 0x65
   171aa:	umull	r2, r3, r2, r3
   171ae:	cmp.w	r5, r3, lsr #3
   171b2:	bne.n	171c0 <rb_free_nodes@@Base+0x1ce>
   171b4:	ldr	r0, [pc, #136]	; (17240 <rb_free_nodes@@Base+0x24e>)
   171b6:	movs	r3, #1
   171b8:	movw	r2, #1630	; 0x65e
   171bc:	add	r0, pc
   171be:	b.n	1719a <rb_free_nodes@@Base+0x1a8>
   171c0:	cmp	r5, r6
   171c2:	add.w	r1, r6, r6, lsl #5
   171c6:	add.w	fp, r1, #101	; 0x65
   171ca:	ble.n	171dc <rb_free_nodes@@Base+0x1ea>
   171cc:	subs	r3, r5, r6
   171ce:	adds	r1, #134	; 0x86
   171d0:	mov	r2, fp
   171d2:	mov	r0, r4
   171d4:	add.w	r3, r3, r3, lsl #5
   171d8:	bl	16a80 <memmove_extent_buffer@@Base>
   171dc:	mov	r2, r6
   171de:	add.w	r6, r4, #96	; 0x60
   171e2:	add	r6, fp
   171e4:	mov	r1, r8
   171e6:	mov	r0, r4
   171e8:	adds	r5, #1
   171ea:	bl	17022 <rb_free_nodes@@Base+0x30>
   171ee:	str.w	sl, [r6, #17]
   171f2:	str.w	r9, [r6, #21]
   171f6:	ldrd	r2, r3, [r7]
   171fa:	ldr	r1, [pc, #72]	; (17244 <rb_free_nodes@@Base+0x252>)
   171fc:	orrs	r3, r2
   171fe:	ldr	r0, [pc, #72]	; (17248 <rb_free_nodes@@Base+0x256>)
   17200:	add	r1, pc
   17202:	mov.w	r2, #1640	; 0x668
   17206:	ite	eq
   17208:	moveq	r3, #1
   1720a:	movne	r3, #0
   1720c:	add	r0, pc
   1720e:	bl	17150 <rb_free_nodes@@Base+0x15e>
   17212:	ldrd	r2, r3, [r7]
   17216:	mov	r0, r4
   17218:	str.w	r2, [r6, #25]
   1721c:	str.w	r3, [r6, #29]
   17220:	str.w	r5, [r4, #192]	; 0xc0
   17224:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   17228:	movs	r0, #0
   1722a:	add	sp, #12
   1722c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17230:	strh	r1, [r4, #30]
   17232:	subs	r6, #15
   17234:	mov	ip, r4
   17236:	movs	r2, r0
   17238:	ldr	r5, [pc, #672]	; (174dc <rb_free_nodes@@Base+0x4ea>)
   1723a:	movs	r2, r0
   1723c:	ldrb	r1, [r7, r4]
   1723e:	movs	r2, r0
   17240:	ldrb	r5, [r2, r4]
   17242:	movs	r2, r0
   17244:	ldr	r5, [pc, #96]	; (172a8 <rb_free_nodes@@Base+0x2b6>)
   17246:	movs	r2, r0
   17248:	mov	r2, r3
   1724a:	movs	r2, r0
   1724c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   17250:	mov	r6, r0
   17252:	mov	r4, r2
   17254:	ldr.w	r0, [r3, #176]	; 0xb0
   17258:	mov	r7, r1
   1725a:	mov	r5, r3
   1725c:	ldr.w	r1, [r3, #180]	; 0xb4
   17260:	sub	sp, #20
   17262:	ldrd	r2, r3, [r6]
   17266:	cmp	r1, r3
   17268:	ldr	r3, [pc, #196]	; (17330 <rb_free_nodes@@Base+0x33e>)
   1726a:	it	eq
   1726c:	cmpeq	r0, r2
   1726e:	ldr	r0, [pc, #196]	; (17334 <rb_free_nodes@@Base+0x342>)
   17270:	add	r3, pc
   17272:	movw	r2, #1494	; 0x5d6
   17276:	add.w	r1, r3, #11
   1727a:	add	r0, pc
   1727c:	ite	ne
   1727e:	movne	r3, #1
   17280:	moveq	r3, #0
   17282:	str	r1, [sp, #12]
   17284:	bl	17150 <rb_free_nodes@@Base+0x15e>
   17288:	ldr.w	r3, [r4, #180]	; 0xb4
   1728c:	ldrd	r8, r9, [r6]
   17290:	ldr.w	r2, [r4, #176]	; 0xb0
   17294:	cmp	r3, r9
   17296:	ldr	r0, [pc, #160]	; (17338 <rb_free_nodes@@Base+0x346>)
   17298:	it	eq
   1729a:	cmpeq	r2, r8
   1729c:	ldr	r1, [sp, #12]
   1729e:	movw	r2, #1495	; 0x5d7
   172a2:	add	r0, pc
   172a4:	ite	ne
   172a6:	movne	r3, #1
   172a8:	moveq	r3, #0
   172aa:	bl	17150 <rb_free_nodes@@Base+0x15e>
   172ae:	ldr	r3, [r7, #0]
   172b0:	ldr.w	r8, [r4, #192]	; 0xc0
   172b4:	ldr.w	r2, [r3, #384]	; 0x180
   172b8:	ldr	r3, [pc, #112]	; (1732c <rb_free_nodes@@Base+0x33a>)
   172ba:	subs	r2, #101	; 0x65
   172bc:	umull	r2, r3, r2, r3
   172c0:	rsb	r7, r8, r3, lsr #3
   172c4:	cmp	r7, #0
   172c6:	ble.n	17328 <rb_free_nodes@@Base+0x336>
   172c8:	ldr.w	r6, [r5, #192]	; 0xc0
   172cc:	cmp	r6, #3
   172ce:	ble.n	17328 <rb_free_nodes@@Base+0x336>
   172d0:	asrs	r3, r6, #1
   172d2:	adds	r3, #1
   172d4:	cmp	r6, r3
   172d6:	ble.n	17328 <rb_free_nodes@@Base+0x336>
   172d8:	cmp	r7, r3
   172da:	mov.w	r2, #101	; 0x65
   172de:	mov	r0, r4
   172e0:	it	ge
   172e2:	movge	r7, r3
   172e4:	subs	r6, r6, r7
   172e6:	add.w	r9, r7, r7, lsl #5
   172ea:	add.w	r3, r8, r8, lsl #5
   172ee:	add.w	r1, r9, r2
   172f2:	add	r7, r8
   172f4:	bl	16a80 <memmove_extent_buffer@@Base>
   172f8:	add.w	r3, r6, r6, lsl #5
   172fc:	adds	r3, #101	; 0x65
   172fe:	movs	r2, #101	; 0x65
   17300:	mov	r1, r5
   17302:	mov	r0, r4
   17304:	str.w	r9, [sp]
   17308:	bl	16a36 <copy_extent_buffer@@Base>
   1730c:	mov	r0, r5
   1730e:	str.w	r6, [r5, #192]	; 0xc0
   17312:	str.w	r7, [r4, #192]	; 0xc0
   17316:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   1731a:	mov	r0, r4
   1731c:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   17320:	movs	r0, #0
   17322:	add	sp, #20
   17324:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   17328:	movs	r0, #1
   1732a:	b.n	17322 <rb_free_nodes@@Base+0x330>
   1732c:	strh	r1, [r4, #30]
   1732e:	subs	r6, #15
   17330:	ldr	r4, [pc, #672]	; (175d4 <add_root_to_dirty_list@@Base+0x4c>)
   17332:	movs	r2, r0
   17334:	cmp	r8, r8
   17336:	movs	r2, r0
   17338:	cmp	pc, r8
   1733a:	movs	r2, r0
   1733c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17340:	mov	r5, r2
   17342:	ldr.w	r9, [r2, #192]	; 0xc0
   17346:	mov	r4, r3
   17348:	ldr.w	r2, [r1, #384]	; 0x180
   1734c:	mov	sl, r0
   1734e:	ldr.w	r6, [r3, #192]	; 0xc0
   17352:	sub	sp, #20
   17354:	ldr	r3, [pc, #236]	; (17444 <rb_free_nodes@@Base+0x452>)
   17356:	subs	r2, #101	; 0x65
   17358:	ldr.w	r1, [r4, #180]	; 0xb4
   1735c:	ldr.w	r0, [r4, #176]	; 0xb0
   17360:	umull	r2, r3, r2, r3
   17364:	ldr	r7, [sp, #56]	; 0x38
   17366:	rsb	r8, r9, r3, lsr #3
   1736a:	ldrd	r2, r3, [sl]
   1736e:	cmp	r1, r3
   17370:	ldr	r1, [pc, #212]	; (17448 <rb_free_nodes@@Base+0x456>)
   17372:	it	eq
   17374:	cmpeq	r0, r2
   17376:	ldr	r0, [pc, #212]	; (1744c <rb_free_nodes@@Base+0x45a>)
   17378:	add	r1, pc
   1737a:	movw	r2, #1430	; 0x596
   1737e:	ite	ne
   17380:	movne	r3, #1
   17382:	moveq	r3, #0
   17384:	adds	r1, #30
   17386:	add	r0, pc
   17388:	str	r1, [sp, #12]
   1738a:	bl	17150 <rb_free_nodes@@Base+0x15e>
   1738e:	ldrd	r2, r3, [sl]
   17392:	ldr.w	ip, [r5, #180]	; 0xb4
   17396:	ldr.w	fp, [r5, #176]	; 0xb0
   1739a:	cmp	ip, r3
   1739c:	ldr	r0, [pc, #176]	; (17450 <rb_free_nodes@@Base+0x45e>)
   1739e:	it	eq
   173a0:	cmpeq	fp, r2
   173a2:	ldr	r1, [sp, #12]
   173a4:	add	r0, pc
   173a6:	movw	r2, #1431	; 0x597
   173aa:	ite	ne
   173ac:	movne	r3, #1
   173ae:	moveq	r3, #0
   173b0:	bl	17150 <rb_free_nodes@@Base+0x15e>
   173b4:	cbnz	r7, 173d0 <rb_free_nodes@@Base+0x3de>
   173b6:	cmp	r6, #8
   173b8:	bgt.n	173be <rb_free_nodes@@Base+0x3cc>
   173ba:	movs	r7, #1
   173bc:	b.n	1743a <rb_free_nodes@@Base+0x448>
   173be:	cmp.w	r8, #0
   173c2:	ble.n	173ba <rb_free_nodes@@Base+0x3c8>
   173c4:	sub.w	r3, r6, #8
   173c8:	cmp	r8, r3
   173ca:	it	ge
   173cc:	movge	r8, r3
   173ce:	b.n	173f2 <rb_free_nodes@@Base+0x400>
   173d0:	cmp.w	r8, #0
   173d4:	ble.n	1743a <rb_free_nodes@@Base+0x448>
   173d6:	cmp	r8, r6
   173d8:	it	ge
   173da:	movge	r8, r6
   173dc:	cmp	r6, r8
   173de:	ble.n	173f2 <rb_free_nodes@@Base+0x400>
   173e0:	sub.w	r3, r6, r8
   173e4:	cmp	r3, #7
   173e6:	bgt.n	173f2 <rb_free_nodes@@Base+0x400>
   173e8:	cmp.w	r8, #8
   173ec:	ble.n	1743a <rb_free_nodes@@Base+0x448>
   173ee:	sub.w	r8, r8, #8
   173f2:	add.w	r2, r9, r9, lsl #5
   173f6:	movs	r3, #101	; 0x65
   173f8:	add.w	sl, r8, r8, lsl #5
   173fc:	add	r2, r3
   173fe:	mov	r1, r4
   17400:	mov	r0, r5
   17402:	str.w	sl, [sp]
   17406:	sub.w	r7, r6, r8
   1740a:	bl	16a36 <copy_extent_buffer@@Base>
   1740e:	cmp	r6, r8
   17410:	ble.n	17422 <rb_free_nodes@@Base+0x430>
   17412:	add.w	r3, r7, r7, lsl #5
   17416:	add.w	r2, sl, #101	; 0x65
   1741a:	movs	r1, #101	; 0x65
   1741c:	mov	r0, r4
   1741e:	bl	16a80 <memmove_extent_buffer@@Base>
   17422:	str.w	r7, [r4, #192]	; 0xc0
   17426:	mov	r0, r4
   17428:	add	r8, r9
   1742a:	str.w	r8, [r5, #192]	; 0xc0
   1742e:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   17432:	mov	r0, r5
   17434:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   17438:	movs	r7, #0
   1743a:	mov	r0, r7
   1743c:	add	sp, #20
   1743e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17442:	nop
   17444:	strh	r1, [r4, #30]
   17446:	subs	r6, #15
   17448:	ldr	r3, [pc, #640]	; (176cc <add_root_to_dirty_list@@Base+0x144>)
   1744a:	movs	r2, r0
   1744c:	add	ip, r6
   1744e:	movs	r2, r0
   17450:	add	sp, r8
   17452:	movs	r2, r0
   17454:	push	{r3, r4, r5, r6, r7, lr}
   17456:	mov	r6, r0
   17458:	mov	r4, r1
   1745a:	mov	r5, r2
   1745c:	cbz	r2, 17498 <rb_free_nodes@@Base+0x4a6>
   1745e:	bl	17010 <rb_free_nodes@@Base+0x1e>
   17462:	ldr.w	r3, [r6, #192]	; 0xc0
   17466:	mov.w	ip, #25
   1746a:	ldr	r1, [pc, #48]	; (1749c <rb_free_nodes@@Base+0x4aa>)
   1746c:	add	r1, pc
   1746e:	adds	r1, #45	; 0x2d
   17470:	mul.w	r7, ip, r2
   17474:	adds	r2, r4, r2
   17476:	cmp	r2, r3
   17478:	it	ge
   1747a:	movge	r2, r3
   1747c:	subs	r2, #1
   1747e:	mla	r3, ip, r2, r6
   17482:	ldr.w	r2, [r3, #214]	; 0xd6
   17486:	subs	r2, r7, r2
   17488:	adds	r5, r2, r0
   1748a:	ldr	r0, [pc, #20]	; (174a0 <rb_free_nodes@@Base+0x4ae>)
   1748c:	mov.w	r2, #1752	; 0x6d8
   17490:	lsrs	r3, r5, #31
   17492:	add	r0, pc
   17494:	bl	17150 <rb_free_nodes@@Base+0x15e>
   17498:	mov	r0, r5
   1749a:	pop	{r3, r4, r5, r6, r7, pc}
   1749c:	ldr	r2, [pc, #688]	; (17750 <add_root_to_dirty_list@@Base+0x1c8>)
   1749e:	movs	r2, r0
   174a0:	add	r6, r0
   174a2:	movs	r2, r0
   174a4:	push	{r4, lr}
   174a6:	mov	r4, r1
   174a8:	ldr	r1, [pc, #76]	; (174f8 <rb_free_nodes@@Base+0x506>)
   174aa:	sub	sp, #24
   174ac:	ldr	r3, [pc, #76]	; (174fc <rb_free_nodes@@Base+0x50a>)
   174ae:	add	r1, pc
   174b0:	ldr	r3, [r1, r3]
   174b2:	mov	r1, sp
   174b4:	ldr	r3, [r3, #0]
   174b6:	str	r3, [sp, #20]
   174b8:	mov.w	r3, #0
   174bc:	bl	1703a <rb_free_nodes@@Base+0x48>
   174c0:	ldr.w	r3, [sp, #13]
   174c4:	ldr.w	r2, [sp, #9]
   174c8:	str.w	r3, [r4, #13]
   174cc:	ldrb.w	r3, [sp, #8]
   174d0:	str.w	r2, [r4, #9]
   174d4:	ldr	r2, [pc, #40]	; (17500 <rb_free_nodes@@Base+0x50e>)
   174d6:	strb	r3, [r4, #8]
   174d8:	ldr	r3, [sp, #0]
   174da:	add	r2, pc
   174dc:	str	r3, [r4, #0]
   174de:	ldr	r3, [sp, #4]
   174e0:	str	r3, [r4, #4]
   174e2:	ldr	r3, [pc, #24]	; (174fc <rb_free_nodes@@Base+0x50a>)
   174e4:	ldr	r3, [r2, r3]
   174e6:	ldr	r2, [r3, #0]
   174e8:	ldr	r3, [sp, #20]
   174ea:	eors	r2, r3
   174ec:	beq.n	174f2 <rb_free_nodes@@Base+0x500>
   174ee:	blx	8510 <__stack_chk_fail@plt>
   174f2:	add	sp, #24
   174f4:	pop	{r4, pc}
   174f6:	nop
   174f8:	ldmia	r0!, {r1, r2, r4, r6, r7}
   174fa:	movs	r4, r0
   174fc:	lsls	r0, r4, #8
   174fe:	movs	r0, r0
   17500:	ldmia	r0!, {r1, r3, r5, r7}
   17502:	movs	r4, r0

00017504 <btrfs_super_csum_size@@Base>:
   17504:	ldrh.w	r2, [r0, #196]	; 0xc4
   17508:	ldr	r3, [pc, #8]	; (17514 <btrfs_super_csum_size@@Base+0x10>)
   1750a:	add	r3, pc
   1750c:	add.w	r3, r3, r2, lsl #4
   17510:	ldrh	r0, [r3, #62]	; 0x3e
   17512:	bx	lr
   17514:	ldr	r2, [pc, #56]	; (17550 <btrfs_release_path@@Base+0x4>)
   17516:	movs	r2, r0

00017518 <btrfs_super_csum_name@@Base>:
   17518:	ldr	r3, [pc, #8]	; (17524 <btrfs_super_csum_name@@Base+0xc>)
   1751a:	add	r3, pc
   1751c:	add.w	r0, r3, r0, lsl #4
   17520:	adds	r0, #64	; 0x40
   17522:	bx	lr
   17524:	ldr	r1, [pc, #1016]	; (17920 <btrfs_copy_root@@Base+0x16c>)
   17526:	movs	r2, r0

00017528 <btrfs_super_num_csums@@Base>:
   17528:	movs	r0, #4
   1752a:	bx	lr

0001752c <btrfs_csum_type_size@@Base>:
   1752c:	ldr	r3, [pc, #8]	; (17538 <btrfs_csum_type_size@@Base+0xc>)
   1752e:	add	r3, pc
   17530:	add.w	r0, r3, r0, lsl #4
   17534:	ldrh	r0, [r0, #62]	; 0x3e
   17536:	bx	lr
   17538:	ldr	r1, [pc, #936]	; (178e4 <btrfs_copy_root@@Base+0x130>)
   1753a:	movs	r2, r0

0001753c <btrfs_init_path@@Base>:
   1753c:	movs	r2, #68	; 0x44
   1753e:	movs	r1, #0
   17540:	b.w	87c0 <memset@plt>

00017544 <btrfs_alloc_path@@Base>:
   17544:	movs	r1, #68	; 0x44
   17546:	movs	r0, #1
   17548:	b.w	8398 <calloc@plt>

0001754c <btrfs_release_path@@Base>:
   1754c:	push	{r4, r5, r6, lr}
   1754e:	subs	r5, r0, #4
   17550:	add.w	r6, r0, #28
   17554:	mov	r4, r0
   17556:	ldr.w	r0, [r5, #4]!
   1755a:	cbz	r0, 17560 <btrfs_release_path@@Base+0x14>
   1755c:	bl	16314 <free_extent_buffer@@Base>
   17560:	cmp	r5, r6
   17562:	bne.n	17556 <btrfs_release_path@@Base+0xa>
   17564:	mov	r0, r4
   17566:	movs	r2, #68	; 0x44
   17568:	ldmia.w	sp!, {r4, r5, r6, lr}
   1756c:	movs	r1, #0
   1756e:	b.w	87c0 <memset@plt>

00017572 <btrfs_free_path@@Base>:
   17572:	push	{r4, lr}
   17574:	mov	r4, r0
   17576:	cbz	r0, 17586 <btrfs_free_path@@Base+0x14>
   17578:	bl	1754c <btrfs_release_path@@Base>
   1757c:	mov	r0, r4
   1757e:	ldmia.w	sp!, {r4, lr}
   17582:	b.w	8430 <free@plt>
   17586:	pop	{r4, pc}

00017588 <add_root_to_dirty_list@@Base>:
   17588:	ldr.w	r3, [r0, #492]	; 0x1ec
   1758c:	cbz	r3, 175b4 <add_root_to_dirty_list@@Base+0x2c>
   1758e:	ldr.w	r3, [r0, #520]	; 0x208
   17592:	add.w	r2, r0, #520	; 0x208
   17596:	cmp	r2, r3
   17598:	bne.n	175b4 <add_root_to_dirty_list@@Base+0x2c>
   1759a:	ldr.w	r3, [r0, #464]	; 0x1d0
   1759e:	ldr.w	r1, [r3, #336]	; 0x150
   175a2:	str	r2, [r1, #4]
   175a4:	str.w	r1, [r0, #520]	; 0x208
   175a8:	add.w	r1, r3, #336	; 0x150
   175ac:	str.w	r1, [r0, #524]	; 0x20c
   175b0:	str.w	r2, [r3, #336]	; 0x150
   175b4:	bx	lr
   175b6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   175ba:	sub	sp, #76	; 0x4c
   175bc:	mov	r7, r3
   175be:	ldr	r3, [pc, #468]	; (17794 <add_root_to_dirty_list@@Base+0x20c>)
   175c0:	str	r2, [sp, #36]	; 0x24
   175c2:	mov	r5, r1
   175c4:	ldr	r2, [pc, #464]	; (17798 <add_root_to_dirty_list@@Base+0x210>)
   175c6:	mov	fp, r0
   175c8:	ldr	r1, [pc, #464]	; (1779c <add_root_to_dirty_list@@Base+0x214>)
   175ca:	add.w	r8, sp, #48	; 0x30
   175ce:	add	r2, pc
   175d0:	ldr	r0, [pc, #460]	; (177a0 <add_root_to_dirty_list@@Base+0x218>)
   175d2:	add	r1, pc
   175d4:	ldr	r3, [r2, r3]
   175d6:	adds	r1, #126	; 0x7e
   175d8:	add	r0, pc
   175da:	movw	r2, #1553	; 0x611
   175de:	ldr	r3, [r3, #0]
   175e0:	str	r3, [sp, #68]	; 0x44
   175e2:	mov.w	r3, #0
   175e6:	ldr	r3, [sp, #36]	; 0x24
   175e8:	str	r1, [sp, #44]	; 0x2c
   175ea:	add.w	r3, r3, r7, lsl #2
   175ee:	str	r3, [sp, #40]	; 0x28
   175f0:	ldr	r3, [sp, #36]	; 0x24
   175f2:	ldr.w	r3, [r3, r7, lsl #2]
   175f6:	bl	17108 <rb_free_nodes@@Base+0x116>
   175fa:	ldr	r3, [sp, #40]	; 0x28
   175fc:	ldr	r0, [pc, #420]	; (177a4 <add_root_to_dirty_list@@Base+0x21c>)
   175fe:	movw	r2, #1554	; 0x612
   17602:	ldr	r1, [sp, #44]	; 0x2c
   17604:	ldr.w	sl, [r3, #-4]
   17608:	add	r0, pc
   1760a:	ldr	r3, [r5, #0]
   1760c:	subs.w	r3, r3, sl
   17610:	it	ne
   17612:	movne	r3, #1
   17614:	bl	17108 <rb_free_nodes@@Base+0x116>
   17618:	cmp	r7, #1
   1761a:	mov.w	r2, #0
   1761e:	mov	r1, r8
   17620:	mov	r0, sl
   17622:	bne.n	17678 <add_root_to_dirty_list@@Base+0xf0>
   17624:	bl	1703a <rb_free_nodes@@Base+0x48>
   17628:	movs	r2, #0
   1762a:	movs	r3, #0
   1762c:	strd	r2, r3, [sp, #24]
   17630:	mov	r0, fp
   17632:	ldr	r3, [r5, #0]
   17634:	ldr.w	r1, [r5, #464]	; 0x1d0
   17638:	ldrd	r2, r3, [r3, #40]	; 0x28
   1763c:	strd	r8, r7, [sp, #8]
   17640:	strd	r2, r3, [sp, #16]
   17644:	ldr.w	r2, [r5, #447]	; 0x1bf
   17648:	ldr.w	r3, [r5, #451]	; 0x1c3
   1764c:	strd	r2, r3, [sp]
   17650:	ldr.w	r2, [r1, #384]	; 0x180
   17654:	mov	r1, r5
   17656:	bl	2215c <btrfs_alloc_free_block@@Base>
   1765a:	cmn.w	r0, #4096	; 0x1000
   1765e:	mov	r4, r0
   17660:	bls.n	1767e <add_root_to_dirty_list@@Base+0xf6>
   17662:	ldr	r2, [pc, #324]	; (177a8 <add_root_to_dirty_list@@Base+0x220>)
   17664:	ldr	r3, [pc, #300]	; (17794 <add_root_to_dirty_list@@Base+0x20c>)
   17666:	add	r2, pc
   17668:	ldr	r3, [r2, r3]
   1766a:	ldr	r2, [r3, #0]
   1766c:	ldr	r3, [sp, #68]	; 0x44
   1766e:	eors	r2, r3
   17670:	beq.w	1778c <add_root_to_dirty_list@@Base+0x204>
   17674:	blx	8510 <__stack_chk_fail@plt>
   17678:	bl	17046 <rb_free_nodes@@Base+0x54>
   1767c:	b.n	17628 <add_root_to_dirty_list@@Base+0xa0>
   1767e:	movs	r2, #0
   17680:	movs	r3, #101	; 0x65
   17682:	mov	r1, r2
   17684:	movs	r6, #0
   17686:	bl	16a96 <memset_extent_buffer@@Base>
   1768a:	movs	r3, #1
   1768c:	strb.w	r3, [r4, #192]	; 0xc0
   17690:	ldr	r3, [r4, #40]	; 0x28
   17692:	strb.w	r6, [r4, #193]	; 0xc1
   17696:	strb.w	r6, [r4, #194]	; 0xc2
   1769a:	str.w	r3, [r4, #144]	; 0x90
   1769e:	ldr	r3, [r4, #44]	; 0x2c
   176a0:	strb.w	r6, [r4, #195]	; 0xc3
   176a4:	strb.w	r7, [r4, #196]	; 0xc4
   176a8:	str.w	r3, [r4, #148]	; 0x94
   176ac:	ldrd	r2, r3, [fp, #8]
   176b0:	str.w	r2, [r4, #176]	; 0xb0
   176b4:	str.w	r3, [r4, #180]	; 0xb4
   176b8:	ldr.w	r2, [r4, #152]	; 0x98
   176bc:	ldr.w	r3, [r4, #156]	; 0x9c
   176c0:	bic.w	r3, r3, #4278190080	; 0xff000000
   176c4:	str.w	r2, [r4, #152]	; 0x98
   176c8:	orr.w	r3, r3, #16777216	; 0x1000000
   176cc:	str.w	r3, [r4, #156]	; 0x9c
   176d0:	ldr.w	r2, [r5, #447]	; 0x1bf
   176d4:	ldr.w	r3, [r5, #451]	; 0x1c3
   176d8:	str.w	r2, [r4, #184]	; 0xb8
   176dc:	str.w	r3, [r4, #188]	; 0xbc
   176e0:	ldr.w	r0, [r5, #464]	; 0x1d0
   176e4:	ldr.w	r2, [r5, #200]	; 0xc8
   176e8:	ldr.w	r3, [r5, #204]	; 0xcc
   176ec:	ldr.w	r1, [r0, #384]	; 0x180
   176f0:	adds	r2, r2, r1
   176f2:	str.w	r2, [r5, #200]	; 0xc8
   176f6:	adc.w	r3, r3, #0
   176fa:	str.w	r3, [r5, #204]	; 0xcc
   176fe:	ldr.w	r1, [r0, #352]	; 0x160
   17702:	movs	r3, #16
   17704:	movs	r2, #32
   17706:	mov	r0, r4
   17708:	add	r1, r3
   1770a:	bl	16a24 <write_extent_buffer@@Base>
   1770e:	movs	r3, #16
   17710:	ldr.w	r1, [r5, #464]	; 0x1d0
   17714:	movs	r2, #64	; 0x40
   17716:	mov	r0, r4
   17718:	bl	16a24 <write_extent_buffer@@Base>
   1771c:	mov	r1, r8
   1771e:	mov	r2, r6
   17720:	mov	r0, r4
   17722:	bl	17022 <rb_free_nodes@@Base+0x30>
   17726:	ldrd	r2, r3, [sl, #40]	; 0x28
   1772a:	ldr	r1, [pc, #128]	; (177ac <add_root_to_dirty_list@@Base+0x224>)
   1772c:	ldr	r0, [pc, #128]	; (177b0 <add_root_to_dirty_list@@Base+0x228>)
   1772e:	str.w	r2, [r4, #214]	; 0xd6
   17732:	add	r1, pc
   17734:	str.w	r3, [r4, #218]	; 0xda
   17738:	adds	r1, #126	; 0x7e
   1773a:	ldrd	r2, r3, [fp, #8]
   1773e:	add	r0, pc
   17740:	ldr.w	r9, [sl, #180]	; 0xb4
   17744:	ldr.w	r8, [sl, #176]	; 0xb0
   17748:	cmp	r3, r9
   1774a:	it	eq
   1774c:	cmpeq	r2, r8
   1774e:	movw	r2, #1589	; 0x635
   17752:	ite	ne
   17754:	movne	r3, #1
   17756:	moveq	r3, r6
   17758:	bl	17150 <rb_free_nodes@@Base+0x15e>
   1775c:	mov	r0, r4
   1775e:	str.w	r8, [r4, #222]	; 0xde
   17762:	str.w	r9, [r4, #226]	; 0xe2
   17766:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   1776a:	ldr	r0, [r5, #0]
   1776c:	str	r4, [r5, #0]
   1776e:	bl	16314 <free_extent_buffer@@Base>
   17772:	mov	r0, r5
   17774:	bl	17588 <add_root_to_dirty_list@@Base>
   17778:	ldr	r3, [r4, #80]	; 0x50
   1777a:	mov	r0, r6
   1777c:	adds	r3, #1
   1777e:	str	r3, [r4, #80]	; 0x50
   17780:	ldr	r3, [sp, #36]	; 0x24
   17782:	str.w	r4, [r3, r7, lsl #2]
   17786:	ldr	r3, [sp, #40]	; 0x28
   17788:	str	r6, [r3, #32]
   1778a:	b.n	17662 <add_root_to_dirty_list@@Base+0xda>
   1778c:	add	sp, #76	; 0x4c
   1778e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17792:	nop
   17794:	lsls	r0, r4, #8
   17796:	movs	r0, r0
   17798:	stmia	r7!, {r1, r2, r4, r5, r7}
   1779a:	movs	r4, r0
   1779c:	ldr	r1, [pc, #280]	; (178b8 <btrfs_copy_root@@Base+0x104>)
   1779e:	movs	r2, r0
   177a0:	tst	r3, r7
   177a2:	movs	r2, r0
   177a4:	cmp	r5, r3
   177a6:	movs	r2, r0
   177a8:	stmia	r7!, {r1, r2, r3, r4}
   177aa:	movs	r4, r0
   177ac:			; <UNDEFINED> instruction: 0x47e6
   177ae:	movs	r2, r0
   177b0:	sbcs	r2, r1
   177b2:	movs	r2, r0

000177b4 <btrfs_copy_root@@Base>:
   177b4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   177b8:	sub	sp, #68	; 0x44
   177ba:	mov	r4, r2
   177bc:	ldr	r2, [pc, #460]	; (1798c <btrfs_copy_root@@Base+0x1d8>)
   177be:	str	r3, [sp, #36]	; 0x24
   177c0:	mov	r8, r0
   177c2:	ldr	r3, [pc, #460]	; (17990 <btrfs_copy_root@@Base+0x1dc>)
   177c4:	add	r2, pc
   177c6:	mov.w	r0, #544	; 0x220
   177ca:	ldrd	sl, fp, [sp, #104]	; 0x68
   177ce:	mov	r9, r1
   177d0:	ldr	r3, [r2, r3]
   177d2:	ldr	r3, [r3, #0]
   177d4:	str	r3, [sp, #60]	; 0x3c
   177d6:	mov.w	r3, #0
   177da:	blx	8678 <malloc@plt+0x4>
   177de:	mov	r5, r0
   177e0:	cmp	r0, #0
   177e2:	beq.w	1797e <btrfs_copy_root@@Base+0x1ca>
   177e6:	mov.w	r2, #544	; 0x220
   177ea:	mov	r1, r9
   177ec:	blx	8480 <memcpy@plt+0x4>
   177f0:	ldr.w	r3, [r9, #488]	; 0x1e8
   177f4:	str.w	sl, [r5, #447]	; 0x1bf
   177f8:	str.w	fp, [r5, #451]	; 0x1c3
   177fc:	cbz	r3, 17818 <btrfs_copy_root@@Base+0x64>
   177fe:	ldr.w	r3, [r9, #464]	; 0x1d0
   17802:	ldr.w	r3, [r3, #304]	; 0x130
   17806:	ldrd	r0, r1, [r3, #8]
   1780a:	ldrd	r2, r3, [r8, #8]
   1780e:	cmp	r1, r3
   17810:	itet	eq
   17812:	cmpeq	r0, r2
   17814:	movne	r3, #1
   17816:	moveq	r3, #0
   17818:	ldr	r1, [pc, #376]	; (17994 <btrfs_copy_root@@Base+0x1e0>)
   1781a:	movs	r2, #142	; 0x8e
   1781c:	ldr	r0, [pc, #376]	; (17998 <btrfs_copy_root@@Base+0x1e4>)
   1781e:	add	r1, pc
   17820:	add	r1, r2
   17822:	add	r0, pc
   17824:	bl	17150 <rb_free_nodes@@Base+0x15e>
   17828:	ldr.w	r3, [r9, #488]	; 0x1e8
   1782c:	cbz	r3, 17840 <btrfs_copy_root@@Base+0x8c>
   1782e:	ldrd	r2, r3, [r9, #480]	; 0x1e0
   17832:	ldrd	r6, r7, [r8, #8]
   17836:	cmp	r7, r3
   17838:	itet	eq
   1783a:	cmpeq	r6, r2
   1783c:	movne	r3, #1
   1783e:	moveq	r3, #0
   17840:	ldr	r1, [pc, #344]	; (1799c <btrfs_copy_root@@Base+0x1e8>)
   17842:	movs	r2, #144	; 0x90
   17844:	ldr	r0, [pc, #344]	; (179a0 <btrfs_copy_root@@Base+0x1ec>)
   17846:	add	r7, sp, #40	; 0x28
   17848:	add	r1, pc
   1784a:	adds	r1, #142	; 0x8e
   1784c:	add	r0, pc
   1784e:	bl	17150 <rb_free_nodes@@Base+0x15e>
   17852:	ldrb.w	r6, [r4, #196]	; 0xc4
   17856:	cbnz	r6, 178a8 <btrfs_copy_root@@Base+0xf4>
   17858:	mov	r2, r6
   1785a:	mov	r1, r7
   1785c:	mov	r0, r4
   1785e:	bl	1703a <rb_free_nodes@@Base+0x48>
   17862:	movs	r2, #0
   17864:	movs	r3, #0
   17866:	strd	r2, r3, [sp, #24]
   1786a:	mov	r1, r5
   1786c:	ldrd	r2, r3, [r4, #40]	; 0x28
   17870:	mov	r0, r8
   17872:	strd	r7, r6, [sp, #8]
   17876:	strd	sl, fp, [sp]
   1787a:	strd	r2, r3, [sp, #16]
   1787e:	ldr	r2, [r4, #76]	; 0x4c
   17880:	bl	2215c <btrfs_alloc_free_block@@Base>
   17884:	cmn.w	r0, #4096	; 0x1000
   17888:	mov	r6, r0
   1788a:	bls.n	178b4 <btrfs_copy_root@@Base+0x100>
   1788c:	mov	r0, r5
   1788e:	mov	r4, r6
   17890:	blx	8434 <free@plt+0x4>
   17894:	ldr	r2, [pc, #268]	; (179a4 <btrfs_copy_root@@Base+0x1f0>)
   17896:	ldr	r3, [pc, #248]	; (17990 <btrfs_copy_root@@Base+0x1dc>)
   17898:	add	r2, pc
   1789a:	ldr	r3, [r2, r3]
   1789c:	ldr	r2, [r3, #0]
   1789e:	ldr	r3, [sp, #60]	; 0x3c
   178a0:	eors	r2, r3
   178a2:	beq.n	17984 <btrfs_copy_root@@Base+0x1d0>
   178a4:	blx	8510 <__stack_chk_fail@plt>
   178a8:	movs	r2, #0
   178aa:	mov	r1, r7
   178ac:	mov	r0, r4
   178ae:	bl	17046 <rb_free_nodes@@Base+0x54>
   178b2:	b.n	17862 <btrfs_copy_root@@Base+0xae>
   178b4:	ldr	r3, [r0, #76]	; 0x4c
   178b6:	mov	r1, r4
   178b8:	str	r3, [sp, #0]
   178ba:	movs	r3, #0
   178bc:	mov	r2, r3
   178be:	bl	16a36 <copy_extent_buffer@@Base>
   178c2:	ldr	r3, [r6, #40]	; 0x28
   178c4:	mov.w	r1, #4294967295	; 0xffffffff
   178c8:	cmp	fp, r1
   178ca:	mvn.w	r0, #7
   178ce:	it	eq
   178d0:	cmpeq	sl, r0
   178d2:	str.w	r3, [r6, #144]	; 0x90
   178d6:	mov	r0, r6
   178d8:	ldr	r3, [r6, #44]	; 0x2c
   178da:	str.w	r3, [r6, #148]	; 0x94
   178de:	ldrd	r2, r3, [r8, #8]
   178e2:	itt	ne
   178e4:	strne.w	sl, [r6, #184]	; 0xb8
   178e8:	strne.w	fp, [r6, #188]	; 0xbc
   178ec:	str.w	r2, [r6, #176]	; 0xb0
   178f0:	str.w	r3, [r6, #180]	; 0xb4
   178f4:	ldr.w	r2, [r6, #156]	; 0x9c
   178f8:	ldr.w	r3, [r6, #152]	; 0x98
   178fc:	bic.w	r2, r2, #4278190080	; 0xff000000
   17900:	bic.w	r3, r3, #3
   17904:	orr.w	r2, r2, #16777216	; 0x1000000
   17908:	str.w	r3, [r6, #152]	; 0x98
   1790c:	it	eq
   1790e:	orreq.w	r3, r3, #2
   17912:	str.w	r2, [r6, #156]	; 0x9c
   17916:	mov.w	r2, #32
   1791a:	it	eq
   1791c:	streq.w	r3, [r6, #152]	; 0x98
   17920:	ldr.w	r3, [r9, #464]	; 0x1d0
   17924:	ldr.w	r1, [r3, #352]	; 0x160
   17928:	movs	r3, #16
   1792a:	add	r1, r3
   1792c:	bl	16a24 <write_extent_buffer@@Base>
   17930:	ldrd	r2, r3, [r8, #8]
   17934:	ldr.w	r1, [r4, #180]	; 0xb4
   17938:	ldr.w	r0, [r4, #176]	; 0xb0
   1793c:	cmp	r3, r1
   1793e:	ldr	r1, [pc, #104]	; (179a8 <btrfs_copy_root@@Base+0x1f4>)
   17940:	it	eq
   17942:	cmpeq	r2, r0
   17944:	ldr	r0, [pc, #100]	; (179ac <btrfs_copy_root@@Base+0x1f8>)
   17946:	add	r1, pc
   17948:	mov.w	r2, #173	; 0xad
   1794c:	ite	cc
   1794e:	movcc	r3, #1
   17950:	movcs	r3, #0
   17952:	adds	r1, #142	; 0x8e
   17954:	add	r0, pc
   17956:	bl	17150 <rb_free_nodes@@Base+0x15e>
   1795a:	movs	r3, #0
   1795c:	mov	r2, r6
   1795e:	mov	r1, r5
   17960:	mov	r0, r8
   17962:	bl	20018 <btrfs_inc_ref@@Base>
   17966:	mov	r4, r0
   17968:	mov	r0, r5
   1796a:	blx	8434 <free@plt+0x4>
   1796e:	cmp	r4, #0
   17970:	bne.n	17894 <btrfs_copy_root@@Base+0xe0>
   17972:	mov	r0, r6
   17974:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   17978:	ldr	r3, [sp, #36]	; 0x24
   1797a:	str	r6, [r3, #0]
   1797c:	b.n	17894 <btrfs_copy_root@@Base+0xe0>
   1797e:	mvn.w	r4, #11
   17982:	b.n	17894 <btrfs_copy_root@@Base+0xe0>
   17984:	mov	r0, r4
   17986:	add	sp, #68	; 0x44
   17988:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1798c:	stmia	r5!, {r6, r7}
   1798e:	movs	r4, r0
   17990:	lsls	r0, r4, #8
   17992:	movs	r0, r0
   17994:	mov	sl, pc
   17996:	movs	r2, r0
   17998:	lsrs	r2, r0
   1799a:	movs	r2, r0
   1799c:	mov	r8, sl
   1799e:	movs	r2, r0
   179a0:	lsrs	r0, r5
   179a2:	movs	r2, r0
   179a4:	stmia	r4!, {r2, r3, r5, r6, r7}
   179a6:	movs	r4, r0
   179a8:	cmp	sl, sl
   179aa:	movs	r2, r0
   179ac:	ands	r3, r7
   179ae:	movs	r2, r0

000179b0 <__btrfs_cow_block@@Base>:
   179b0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   179b4:	sub	sp, #100	; 0x64
   179b6:	mov	r5, r2
   179b8:	ldr.w	r2, [pc, #1368]	; 17f14 <__btrfs_cow_block@@Base+0x564>
   179bc:	str	r3, [sp, #48]	; 0x30
   179be:	mov	sl, r0
   179c0:	ldrd	fp, r3, [sp, #136]	; 0x88
   179c4:	add	r2, pc
   179c6:	mov	r4, r1
   179c8:	str	r3, [sp, #52]	; 0x34
   179ca:	ldr.w	r3, [pc, #1356]	; 17f18 <__btrfs_cow_block@@Base+0x568>
   179ce:	ldr	r3, [r2, r3]
   179d0:	ldr	r3, [r3, #0]
   179d2:	str	r3, [sp, #92]	; 0x5c
   179d4:	mov.w	r3, #0
   179d8:	ldr.w	r3, [r1, #488]	; 0x1e8
   179dc:	cbz	r3, 179f8 <__btrfs_cow_block@@Base+0x48>
   179de:	ldr.w	r3, [r1, #464]	; 0x1d0
   179e2:	ldr.w	r3, [r3, #304]	; 0x130
   179e6:	ldrd	r0, r1, [r3, #8]
   179ea:	ldrd	r2, r3, [sl, #8]
   179ee:	cmp	r1, r3
   179f0:	itet	eq
   179f2:	cmpeq	r0, r2
   179f4:	movne	r3, #1
   179f6:	moveq	r3, #0
   179f8:	ldr.w	r1, [pc, #1312]	; 17f1c <__btrfs_cow_block@@Base+0x56c>
   179fc:	movw	r2, #311	; 0x137
   17a00:	ldr.w	r0, [pc, #1308]	; 17f20 <__btrfs_cow_block@@Base+0x570>
   17a04:	add	r1, pc
   17a06:	adds	r1, #158	; 0x9e
   17a08:	add	r0, pc
   17a0a:	bl	17150 <rb_free_nodes@@Base+0x15e>
   17a0e:	ldr.w	r3, [r4, #488]	; 0x1e8
   17a12:	cbz	r3, 17a26 <__btrfs_cow_block@@Base+0x76>
   17a14:	ldrd	r8, r9, [sl, #8]
   17a18:	ldrd	r6, r7, [r4, #480]	; 0x1e0
   17a1c:	cmp	r9, r7
   17a1e:	itet	eq
   17a20:	cmpeq	r8, r6
   17a22:	movne	r3, #1
   17a24:	moveq	r3, #0
   17a26:	ldr.w	r1, [pc, #1276]	; 17f24 <__btrfs_cow_block@@Base+0x574>
   17a2a:	movw	r2, #313	; 0x139
   17a2e:	ldr.w	r0, [pc, #1272]	; 17f28 <__btrfs_cow_block@@Base+0x578>
   17a32:	add	r6, sp, #72	; 0x48
   17a34:	add	r1, pc
   17a36:	adds	r1, #158	; 0x9e
   17a38:	add	r0, pc
   17a3a:	bl	17150 <rb_free_nodes@@Base+0x15e>
   17a3e:	ldrb.w	r7, [r5, #196]	; 0xc4
   17a42:	cbnz	r7, 17a9a <__btrfs_cow_block@@Base+0xea>
   17a44:	mov	r2, r7
   17a46:	mov	r1, r6
   17a48:	mov	r0, r5
   17a4a:	bl	1703a <rb_free_nodes@@Base+0x48>
   17a4e:	ldrd	r2, r3, [sp, #152]	; 0x98
   17a52:	mov	r1, r4
   17a54:	strd	r6, r7, [sp, #8]
   17a58:	mov	r0, sl
   17a5a:	strd	r2, r3, [sp, #24]
   17a5e:	ldrd	r2, r3, [sp, #144]	; 0x90
   17a62:	strd	r2, r3, [sp, #16]
   17a66:	ldr.w	r2, [r4, #447]	; 0x1bf
   17a6a:	ldr.w	r3, [r4, #451]	; 0x1c3
   17a6e:	strd	r2, r3, [sp]
   17a72:	ldr	r2, [r5, #76]	; 0x4c
   17a74:	bl	2215c <btrfs_alloc_free_block@@Base>
   17a78:	cmn.w	r0, #4096	; 0x1000
   17a7c:	mov	r6, r0
   17a7e:	bls.n	17aa6 <__btrfs_cow_block@@Base+0xf6>
   17a80:	ldr.w	r2, [pc, #1192]	; 17f2c <__btrfs_cow_block@@Base+0x57c>
   17a84:	ldr.w	r3, [pc, #1168]	; 17f18 <__btrfs_cow_block@@Base+0x568>
   17a88:	add	r2, pc
   17a8a:	ldr	r3, [r2, r3]
   17a8c:	ldr	r2, [r3, #0]
   17a8e:	ldr	r3, [sp, #92]	; 0x5c
   17a90:	eors	r2, r3
   17a92:	beq.w	17f0e <__btrfs_cow_block@@Base+0x55e>
   17a96:	blx	8510 <__stack_chk_fail@plt>
   17a9a:	movs	r2, #0
   17a9c:	mov	r1, r6
   17a9e:	mov	r0, r5
   17aa0:	bl	17046 <rb_free_nodes@@Base+0x54>
   17aa4:	b.n	17a4e <__btrfs_cow_block@@Base+0x9e>
   17aa6:	ldr	r3, [r0, #76]	; 0x4c
   17aa8:	mov	r1, r5
   17aaa:	str	r3, [sp, #0]
   17aac:	movs	r3, #0
   17aae:	mov	r2, r3
   17ab0:	bl	16a36 <copy_extent_buffer@@Base>
   17ab4:	ldr	r3, [r6, #40]	; 0x28
   17ab6:	ldr.w	ip, [r6, #152]	; 0x98
   17aba:	mov.w	r1, #4294967295	; 0xffffffff
   17abe:	mvn.w	r0, #7
   17ac2:	str.w	r3, [r6, #144]	; 0x90
   17ac6:	bic.w	ip, ip, #3
   17aca:	ldr	r3, [r6, #44]	; 0x2c
   17acc:	str.w	r3, [r6, #148]	; 0x94
   17ad0:	ldrd	r2, r3, [sl, #8]
   17ad4:	str.w	ip, [r6, #152]	; 0x98
   17ad8:	str.w	r3, [r6, #180]	; 0xb4
   17adc:	ldr.w	r3, [r6, #156]	; 0x9c
   17ae0:	str.w	r2, [r6, #176]	; 0xb0
   17ae4:	bic.w	r3, r3, #4278190080	; 0xff000000
   17ae8:	orr.w	r3, r3, #16777216	; 0x1000000
   17aec:	str.w	r3, [r6, #156]	; 0x9c
   17af0:	ldr.w	r3, [r4, #451]	; 0x1c3
   17af4:	ldr.w	r2, [r4, #447]	; 0x1bf
   17af8:	cmp	r3, r1
   17afa:	iteet	eq
   17afc:	cmpeq	r2, r0
   17afe:	strne.w	r3, [r6, #188]	; 0xbc
   17b02:	strne.w	r2, [r6, #184]	; 0xb8
   17b06:	orreq.w	ip, ip, #2
   17b0a:	it	eq
   17b0c:	streq.w	ip, [r6, #152]	; 0x98
   17b10:	movs	r2, #32
   17b12:	ldr.w	r3, [r4, #464]	; 0x1d0
   17b16:	mov	r0, r6
   17b18:	ldr.w	r1, [r3, #352]	; 0x160
   17b1c:	movs	r3, #16
   17b1e:	add	r1, r3
   17b20:	bl	16a24 <write_extent_buffer@@Base>
   17b24:	ldr	r3, [r5, #84]	; 0x54
   17b26:	lsls	r3, r3, #21
   17b28:	bmi.w	17c66 <__btrfs_cow_block@@Base+0x2b6>
   17b2c:	ldrd	r2, r3, [sl, #8]
   17b30:	ldr.w	r1, [r5, #180]	; 0xb4
   17b34:	ldr.w	r0, [r5, #176]	; 0xb0
   17b38:	cmp	r3, r1
   17b3a:	it	eq
   17b3c:	cmpeq	r2, r0
   17b3e:	ite	cc
   17b40:	movcc	r3, #1
   17b42:	movcs	r3, #0
   17b44:	ldr	r1, [pc, #1000]	; (17f30 <__btrfs_cow_block@@Base+0x580>)
   17b46:	mov.w	r2, #342	; 0x156
   17b4a:	ldr	r0, [pc, #1000]	; (17f34 <__btrfs_cow_block@@Base+0x584>)
   17b4c:	add	r1, pc
   17b4e:	adds	r1, #158	; 0x9e
   17b50:	add	r0, pc
   17b52:	bl	17150 <rb_free_nodes@@Base+0x15e>
   17b56:	ldr.w	r3, [r4, #488]	; 0x1e8
   17b5a:	cmp	r3, #0
   17b5c:	beq.w	17c6a <__btrfs_cow_block@@Base+0x2ba>
   17b60:	ldr	r3, [r4, #0]
   17b62:	cmp	r5, r3
   17b64:	beq.w	17c6a <__btrfs_cow_block@@Base+0x2ba>
   17b68:	ldr	r3, [r4, #4]
   17b6a:	cmp	r5, r3
   17b6c:	beq.n	17c6a <__btrfs_cow_block@@Base+0x2ba>
   17b6e:	ldr.w	r3, [r5, #180]	; 0xb4
   17b72:	ldr.w	r1, [r4, #212]	; 0xd4
   17b76:	ldr.w	r2, [r5, #176]	; 0xb0
   17b7a:	ldr.w	r0, [r4, #208]	; 0xd0
   17b7e:	cmp	r1, r3
   17b80:	it	eq
   17b82:	cmpeq	r0, r2
   17b84:	bcs.n	17b94 <__btrfs_cow_block@@Base+0x1e4>
   17b86:	ldr.w	r1, [r5, #152]	; 0x98
   17b8a:	movs	r3, #0
   17b8c:	and.w	r2, r1, #2
   17b90:	orrs	r3, r2
   17b92:	beq.n	17c6a <__btrfs_cow_block@@Base+0x2ba>
   17b94:	ldrb.w	r2, [r5, #196]	; 0xc4
   17b98:	add	r3, sp, #64	; 0x40
   17b9a:	ldr.w	r1, [sl]
   17b9e:	mov	r0, sl
   17ba0:	str	r3, [sp, #16]
   17ba2:	add	r3, sp, #56	; 0x38
   17ba4:	str	r3, [sp, #12]
   17ba6:	movs	r3, #1
   17ba8:	str	r3, [sp, #8]
   17baa:	movs	r3, #0
   17bac:	strd	r2, r3, [sp]
   17bb0:	ldrd	r2, r3, [r5, #40]	; 0x28
   17bb4:	bl	1fc84 <btrfs_lookup_extent_info@@Base>
   17bb8:	ldr	r1, [pc, #892]	; (17f38 <__btrfs_cow_block@@Base+0x588>)
   17bba:	movs	r2, #239	; 0xef
   17bbc:	add	r1, pc
   17bbe:	adds	r1, #176	; 0xb0
   17bc0:	str	r1, [sp, #40]	; 0x28
   17bc2:	mov	r3, r0
   17bc4:	ldr	r0, [pc, #884]	; (17f3c <__btrfs_cow_block@@Base+0x58c>)
   17bc6:	add	r0, pc
   17bc8:	bl	17108 <rb_free_nodes@@Base+0x116>
   17bcc:	ldrd	r2, r3, [sp, #56]	; 0x38
   17bd0:	ldr	r0, [pc, #876]	; (17f40 <__btrfs_cow_block@@Base+0x590>)
   17bd2:	orrs	r3, r2
   17bd4:	ldr	r1, [sp, #40]	; 0x28
   17bd6:	add	r0, pc
   17bd8:	mov.w	r2, #240	; 0xf0
   17bdc:	ite	eq
   17bde:	moveq	r3, #1
   17be0:	movne	r3, #0
   17be2:	bl	17108 <rb_free_nodes@@Base+0x116>
   17be6:	ldr.w	r3, [r5, #184]	; 0xb8
   17bea:	ldr	r2, [sp, #64]	; 0x40
   17bec:	str	r3, [sp, #40]	; 0x28
   17bee:	and.w	r8, r2, #256	; 0x100
   17bf2:	ldr.w	r3, [r5, #188]	; 0xbc
   17bf6:	str	r3, [sp, #44]	; 0x2c
   17bf8:	movs	r3, #0
   17bfa:	mov	r9, r3
   17bfc:	orrs.w	r2, r8, r9
   17c00:	bne.n	17c18 <__btrfs_cow_block@@Base+0x268>
   17c02:	ldrd	r0, r1, [sp, #40]	; 0x28
   17c06:	mov.w	r3, #4294967295	; 0xffffffff
   17c0a:	mvn.w	r2, #7
   17c0e:	cmp	r1, r3
   17c10:	itte	eq
   17c12:	cmpeq	r0, r2
   17c14:	moveq	r3, #1
   17c16:	movne	r3, r9
   17c18:	ldr	r1, [pc, #808]	; (17f44 <__btrfs_cow_block@@Base+0x594>)
   17c1a:	movs	r2, #251	; 0xfb
   17c1c:	ldr	r0, [pc, #808]	; (17f48 <__btrfs_cow_block@@Base+0x598>)
   17c1e:	add	r1, pc
   17c20:	adds	r1, #176	; 0xb0
   17c22:	add	r0, pc
   17c24:	bl	17108 <rb_free_nodes@@Base+0x116>
   17c28:	ldrd	r2, r3, [sp, #56]	; 0x38
   17c2c:	cmp	r3, #0
   17c2e:	it	eq
   17c30:	cmpeq	r2, #2
   17c32:	bcc.w	17dfe <__btrfs_cow_block@@Base+0x44e>
   17c36:	ldrd	r0, r1, [sp, #40]	; 0x28
   17c3a:	ldr.w	r3, [r4, #451]	; 0x1c3
   17c3e:	ldr.w	r2, [r4, #447]	; 0x1bf
   17c42:	cmp	r1, r3
   17c44:	mov.w	r1, #4294967295	; 0xffffffff
   17c48:	it	eq
   17c4a:	cmpeq	r0, r2
   17c4c:	mvn.w	r0, #7
   17c50:	beq.n	17ca2 <__btrfs_cow_block@@Base+0x2f2>
   17c52:	cmp	r3, r1
   17c54:	it	eq
   17c56:	cmpeq	r2, r0
   17c58:	bne.w	17dfa <__btrfs_cow_block@@Base+0x44a>
   17c5c:	orrs.w	r3, r8, r9
   17c60:	bne.w	17ddc <__btrfs_cow_block@@Base+0x42c>
   17c64:	b.n	17caa <__btrfs_cow_block@@Base+0x2fa>
   17c66:	movs	r3, #0
   17c68:	b.n	17b44 <__btrfs_cow_block@@Base+0x194>
   17c6a:	movs	r2, #1
   17c6c:	movs	r3, #0
   17c6e:	strd	r2, r3, [sp, #56]	; 0x38
   17c72:	mov.w	r1, #4294967295	; 0xffffffff
   17c76:	ldr.w	r3, [r4, #451]	; 0x1c3
   17c7a:	mvn.w	r0, #7
   17c7e:	ldr.w	r2, [r4, #447]	; 0x1bf
   17c82:	cmp	r3, r1
   17c84:	it	eq
   17c86:	cmpeq	r2, r0
   17c88:	beq.n	17c92 <__btrfs_cow_block@@Base+0x2e2>
   17c8a:	ldr.w	r3, [r5, #156]	; 0x9c
   17c8e:	lsrs	r3, r3, #24
   17c90:	bne.n	17c9e <__btrfs_cow_block@@Base+0x2ee>
   17c92:	mov.w	r2, #256	; 0x100
   17c96:	movs	r3, #0
   17c98:	strd	r2, r3, [sp, #64]	; 0x40
   17c9c:	b.n	17be6 <__btrfs_cow_block@@Base+0x236>
   17c9e:	movs	r2, #0
   17ca0:	b.n	17c96 <__btrfs_cow_block@@Base+0x2e6>
   17ca2:	orrs.w	r3, r8, r9
   17ca6:	bne.w	17dd0 <__btrfs_cow_block@@Base+0x420>
   17caa:	movs	r3, #1
   17cac:	mov	r2, r5
   17cae:	mov	r1, r4
   17cb0:	mov	r0, sl
   17cb2:	bl	20018 <btrfs_inc_ref@@Base>
   17cb6:	ldr.w	r8, [pc, #660]	; 17f4c <__btrfs_cow_block@@Base+0x59c>
   17cba:	ldr.w	r9, [pc, #660]	; 17f50 <__btrfs_cow_block@@Base+0x5a0>
   17cbe:	movw	r2, #259	; 0x103
   17cc2:	add	r8, pc
   17cc4:	add.w	r8, r8, #176	; 0xb0
   17cc8:	add	r9, pc
   17cca:	mov	r1, r8
   17ccc:	mov	r3, r0
   17cce:	mov	r0, r9
   17cd0:	bl	17108 <rb_free_nodes@@Base+0x116>
   17cd4:	ldr.w	r3, [r4, #451]	; 0x1c3
   17cd8:	ldr.w	r2, [r4, #447]	; 0x1bf
   17cdc:	mov.w	r1, #4294967295	; 0xffffffff
   17ce0:	cmp	r3, r1
   17ce2:	mvn.w	r0, #7
   17ce6:	it	eq
   17ce8:	cmpeq	r2, r0
   17cea:	bne.n	17d20 <__btrfs_cow_block@@Base+0x370>
   17cec:	movs	r3, #0
   17cee:	mov	r2, r5
   17cf0:	mov	r1, r4
   17cf2:	mov	r0, sl
   17cf4:	bl	20026 <btrfs_dec_ref@@Base>
   17cf8:	mov.w	r2, #264	; 0x108
   17cfc:	mov	r1, r8
   17cfe:	mov	r3, r0
   17d00:	mov	r0, r9
   17d02:	bl	17108 <rb_free_nodes@@Base+0x116>
   17d06:	movs	r3, #1
   17d08:	mov	r2, r6
   17d0a:	mov	r1, r4
   17d0c:	mov	r0, sl
   17d0e:	bl	20018 <btrfs_inc_ref@@Base>
   17d12:	mov.w	r2, #266	; 0x10a
   17d16:	mov	r1, r8
   17d18:	mov	r3, r0
   17d1a:	mov	r0, r9
   17d1c:	bl	17108 <rb_free_nodes@@Base+0x116>
   17d20:	mov.w	r2, #256	; 0x100
   17d24:	movs	r3, #0
   17d26:	strd	r2, r3, [sp, #8]
   17d2a:	mov	r0, sl
   17d2c:	ldrb.w	r3, [r5, #196]	; 0xc4
   17d30:	str	r3, [sp, #0]
   17d32:	ldrd	r2, r3, [r5, #40]	; 0x28
   17d36:	bl	1fe34 <btrfs_set_block_flags@@Base>
   17d3a:	ldr	r1, [pc, #536]	; (17f54 <__btrfs_cow_block@@Base+0x5a4>)
   17d3c:	mov.w	r2, #282	; 0x11a
   17d40:	add	r1, pc
   17d42:	adds	r1, #176	; 0xb0
   17d44:	mov	r3, r0
   17d46:	ldr	r0, [pc, #528]	; (17f58 <__btrfs_cow_block@@Base+0x5a8>)
   17d48:	add	r0, pc
   17d4a:	bl	17108 <rb_free_nodes@@Base+0x116>
   17d4e:	ldr	r3, [r4, #0]
   17d50:	uxtb.w	r8, r7
   17d54:	mov.w	r9, #0
   17d58:	cmp	r3, r5
   17d5a:	bne.w	17e6a <__btrfs_cow_block@@Base+0x4ba>
   17d5e:	str	r6, [r4, #0]
   17d60:	movs	r2, #0
   17d62:	ldr	r3, [r6, #80]	; 0x50
   17d64:	adds	r3, #1
   17d66:	str	r3, [r6, #80]	; 0x50
   17d68:	movs	r3, #0
   17d6a:	ldr.w	r0, [r4, #447]	; 0x1bf
   17d6e:	ldr.w	r1, [r4, #451]	; 0x1c3
   17d72:	strd	r2, r3, [sp, #32]
   17d76:	strd	r2, r3, [sp, #8]
   17d7a:	ldr	r3, [r5, #76]	; 0x4c
   17d7c:	strd	r0, r1, [sp, #16]
   17d80:	mov	r1, r4
   17d82:	mov	r0, sl
   17d84:	strd	r8, r9, [sp, #24]
   17d88:	str	r3, [sp, #0]
   17d8a:	movs	r3, #0
   17d8c:	str	r3, [sp, #4]
   17d8e:	ldrd	r2, r3, [r5, #40]	; 0x28
   17d92:	bl	20344 <btrfs_free_extent@@Base>
   17d96:	mov	r0, r5
   17d98:	bl	16314 <free_extent_buffer@@Base>
   17d9c:	mov	r0, r4
   17d9e:	bl	17588 <add_root_to_dirty_list@@Base>
   17da2:	ldr	r2, [r5, #68]	; 0x44
   17da4:	add.w	r3, r5, #68	; 0x44
   17da8:	cmp	r3, r2
   17daa:	beq.n	17dbc <__btrfs_cow_block@@Base+0x40c>
   17dac:	ldr	r1, [r5, #72]	; 0x48
   17dae:	mov	r0, r5
   17db0:	str	r1, [r2, #4]
   17db2:	str	r2, [r1, #0]
   17db4:	strd	r3, r3, [r5, #68]	; 0x44
   17db8:	bl	16314 <free_extent_buffer@@Base>
   17dbc:	mov	r0, r5
   17dbe:	bl	16314 <free_extent_buffer@@Base>
   17dc2:	mov	r0, r6
   17dc4:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   17dc8:	ldr	r3, [sp, #52]	; 0x34
   17dca:	movs	r0, #0
   17dcc:	str	r6, [r3, #0]
   17dce:	b.n	17a80 <__btrfs_cow_block@@Base+0xd0>
   17dd0:	ldrd	r2, r3, [sp, #40]	; 0x28
   17dd4:	cmp	r3, r1
   17dd6:	it	eq
   17dd8:	cmpeq	r2, r0
   17dda:	bne.n	17dfa <__btrfs_cow_block@@Base+0x44a>
   17ddc:	movs	r3, #1
   17dde:	mov	r2, r6
   17de0:	mov	r1, r4
   17de2:	mov	r0, sl
   17de4:	bl	20018 <btrfs_inc_ref@@Base>
   17de8:	ldr	r1, [pc, #368]	; (17f5c <__btrfs_cow_block@@Base+0x5ac>)
   17dea:	mov.w	r2, #276	; 0x114
   17dee:	add	r1, pc
   17df0:	adds	r1, #176	; 0xb0
   17df2:	mov	r3, r0
   17df4:	ldr	r0, [pc, #360]	; (17f60 <__btrfs_cow_block@@Base+0x5b0>)
   17df6:	add	r0, pc
   17df8:	b.n	17d4a <__btrfs_cow_block@@Base+0x39a>
   17dfa:	movs	r3, #0
   17dfc:	b.n	17dde <__btrfs_cow_block@@Base+0x42e>
   17dfe:	orrs.w	r3, r8, r9
   17e02:	beq.n	17e62 <__btrfs_cow_block@@Base+0x4b2>
   17e04:	ldr.w	r3, [r4, #451]	; 0x1c3
   17e08:	mov.w	r1, #4294967295	; 0xffffffff
   17e0c:	ldr.w	r2, [r4, #447]	; 0x1bf
   17e10:	mvn.w	r0, #7
   17e14:	cmp	r3, r1
   17e16:	mov	r1, r4
   17e18:	it	eq
   17e1a:	cmpeq	r2, r0
   17e1c:	mov	r2, r6
   17e1e:	mov	r0, sl
   17e20:	ldr.w	r9, [pc, #320]	; 17f64 <__btrfs_cow_block@@Base+0x5b4>
   17e24:	ite	eq
   17e26:	moveq	r3, #1
   17e28:	movne	r3, #0
   17e2a:	bl	20018 <btrfs_inc_ref@@Base>
   17e2e:	ldr.w	r8, [pc, #312]	; 17f68 <__btrfs_cow_block@@Base+0x5b8>
   17e32:	add	r9, pc
   17e34:	movw	r2, #291	; 0x123
   17e38:	add.w	r9, r9, #176	; 0xb0
   17e3c:	add	r8, pc
   17e3e:	mov	r1, r9
   17e40:	mov	r3, r0
   17e42:	mov	r0, r8
   17e44:	bl	17108 <rb_free_nodes@@Base+0x116>
   17e48:	movs	r3, #1
   17e4a:	mov	r2, r5
   17e4c:	mov	r1, r4
   17e4e:	mov	r0, sl
   17e50:	bl	20026 <btrfs_dec_ref@@Base>
   17e54:	movw	r2, #293	; 0x125
   17e58:	mov	r1, r9
   17e5a:	mov	r3, r0
   17e5c:	mov	r0, r8
   17e5e:	bl	17108 <rb_free_nodes@@Base+0x116>
   17e62:	mov	r0, r5
   17e64:	bl	1cc04 <clean_tree_block@@Base>
   17e68:	b.n	17d4e <__btrfs_cow_block@@Base+0x39e>
   17e6a:	ldr	r3, [sp, #48]	; 0x30
   17e6c:	add.w	fp, fp, fp, lsl #5
   17e70:	ldrd	r1, r2, [r6, #40]	; 0x28
   17e74:	add	r3, fp
   17e76:	ldr	r7, [pc, #244]	; (17f6c <__btrfs_cow_block@@Base+0x5bc>)
   17e78:	add.w	fp, r3, #197	; 0xc5
   17e7c:	ldr	r0, [pc, #240]	; (17f70 <__btrfs_cow_block@@Base+0x5c0>)
   17e7e:	str.w	r1, [r3, #214]	; 0xd6
   17e82:	add	r7, pc
   17e84:	str.w	r2, [r3, #218]	; 0xda
   17e88:	adds	r7, #158	; 0x9e
   17e8a:	ldrd	r2, r3, [sl, #8]
   17e8e:	add	r0, pc
   17e90:	mov	r1, r7
   17e92:	orrs	r3, r2
   17e94:	mov.w	r2, #358	; 0x166
   17e98:	ite	eq
   17e9a:	moveq	r3, #1
   17e9c:	movne	r3, #0
   17e9e:	bl	17150 <rb_free_nodes@@Base+0x15e>
   17ea2:	ldrd	r2, r3, [sl, #8]
   17ea6:	ldr	r0, [sp, #48]	; 0x30
   17ea8:	str.w	r2, [fp, #25]
   17eac:	str.w	r3, [fp, #29]
   17eb0:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   17eb4:	ldr	r3, [sp, #48]	; 0x30
   17eb6:	ldr.w	r0, [r3, #176]	; 0xb0
   17eba:	ldr.w	r1, [r3, #180]	; 0xb4
   17ebe:	ldrd	r2, r3, [sl, #8]
   17ec2:	cmp	r3, r1
   17ec4:	mov	r1, r7
   17ec6:	it	eq
   17ec8:	cmpeq	r2, r0
   17eca:	ldr	r0, [pc, #168]	; (17f74 <__btrfs_cow_block@@Base+0x5c4>)
   17ecc:	mov.w	r2, #362	; 0x16a
   17ed0:	ite	ne
   17ed2:	movne	r3, #1
   17ed4:	moveq	r3, #0
   17ed6:	add	r0, pc
   17ed8:	bl	17150 <rb_free_nodes@@Base+0x15e>
   17edc:	ldr.w	r0, [r4, #447]	; 0x1bf
   17ee0:	ldr.w	r1, [r4, #451]	; 0x1c3
   17ee4:	movs	r2, #0
   17ee6:	movs	r3, #0
   17ee8:	strd	r2, r3, [sp, #32]
   17eec:	strd	r2, r3, [sp, #8]
   17ef0:	ldr	r3, [r5, #76]	; 0x4c
   17ef2:	strd	r0, r1, [sp, #16]
   17ef6:	mov	r1, r4
   17ef8:	mov	r0, sl
   17efa:	strd	r8, r9, [sp, #24]
   17efe:	str	r3, [sp, #0]
   17f00:	movs	r3, #0
   17f02:	str	r3, [sp, #4]
   17f04:	ldrd	r2, r3, [r5, #40]	; 0x28
   17f08:	bl	20344 <btrfs_free_extent@@Base>
   17f0c:	b.n	17da2 <__btrfs_cow_block@@Base+0x3f2>
   17f0e:	add	sp, #100	; 0x64
   17f10:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17f14:	stmia	r3!, {r6, r7}
   17f16:	movs	r4, r0
   17f18:	lsls	r0, r4, #8
   17f1a:	movs	r0, r0
   17f1c:	cmp	r4, r2
   17f1e:	movs	r2, r0
   17f20:	subs	r6, #220	; 0xdc
   17f22:	movs	r2, r0
   17f24:	add	ip, ip
   17f26:	movs	r2, r0
   17f28:	subs	r6, #252	; 0xfc
   17f2a:	movs	r2, r0
   17f2c:	stmia	r2!, {r2, r3, r4, r5, r6, r7}
   17f2e:	movs	r4, r0
   17f30:	mvns	r4, r1
   17f32:	movs	r2, r0
   17f34:	subs	r6, #25
   17f36:	movs	r2, r0
   17f38:	muls	r4, r3
   17f3a:	movs	r2, r0
   17f3c:	adds	r6, r3, r4
   17f3e:	movs	r2, r0
   17f40:	str	r4, [r5, r1]
   17f42:	movs	r2, r0
   17f44:	cmn	r2, r7
   17f46:	movs	r2, r0
   17f48:	subs	r5, #155	; 0x9b
   17f4a:	movs	r2, r0
   17f4c:	negs	r6, r2
   17f4e:	movs	r2, r0
   17f50:	adds	r4, r3, r0
   17f52:	movs	r2, r0
   17f54:	rors	r0, r3
   17f56:	movs	r2, r0
   17f58:	asrs	r4, r3, #30
   17f5a:	movs	r2, r0
   17f5c:	asrs	r2, r5
   17f5e:	movs	r2, r0
   17f60:	asrs	r6, r5, #27
   17f62:	movs	r2, r0
   17f64:	lsrs	r6, r4
   17f66:	movs	r2, r0
   17f68:	asrs	r0, r5, #26
   17f6a:	movs	r2, r0
   17f6c:	lsls	r6, r2
   17f6e:	movs	r2, r0
   17f70:	subs	r1, #152	; 0x98
   17f72:	movs	r2, r0
   17f74:	subs	r3, #54	; 0x36
   17f76:	movs	r2, r0

00017f78 <btrfs_cow_block@@Base>:
   17f78:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   17f7c:	mov	r4, r2
   17f7e:	ldr.w	r2, [r1, #464]	; 0x1d0
   17f82:	mov	r6, r0
   17f84:	ldrd	r8, r9, [r0, #8]
   17f88:	mov	r5, r1
   17f8a:	sub	sp, #24
   17f8c:	mov	r7, r3
   17f8e:	ldrd	r0, r1, [r2, #232]	; 0xe8
   17f92:	ldr	r3, [pc, #184]	; (1804c <btrfs_cow_block@@Base+0xd4>)
   17f94:	cmp	r9, r1
   17f96:	ldr.w	sl, [sp, #60]	; 0x3c
   17f9a:	it	eq
   17f9c:	cmpeq	r8, r0
   17f9e:	add	r3, pc
   17fa0:	beq.n	17fce <btrfs_cow_block@@Base+0x56>
   17fa2:	ldr	r2, [pc, #172]	; (18050 <btrfs_cow_block@@Base+0xd8>)
   17fa4:	ldr	r3, [r3, r2]
   17fa6:	ldr	r2, [pc, #172]	; (18054 <btrfs_cow_block@@Base+0xdc>)
   17fa8:	strd	r0, r1, [sp, #8]
   17fac:	movs	r1, #1
   17fae:	add	r2, pc
   17fb0:	strd	r8, r9, [sp]
   17fb4:	ldr	r0, [r3, #0]
   17fb6:	blx	8860 <__fprintf_chk@plt+0x4>
   17fba:	ldr	r1, [pc, #156]	; (18058 <btrfs_cow_block@@Base+0xe0>)
   17fbc:	ldr	r0, [pc, #156]	; (1805c <btrfs_cow_block@@Base+0xe4>)
   17fbe:	movs	r3, #1
   17fc0:	add	r1, pc
   17fc2:	movw	r2, #407	; 0x197
   17fc6:	adds	r1, #195	; 0xc3
   17fc8:	add	r0, pc
   17fca:	bl	17112 <rb_free_nodes@@Base+0x120>
   17fce:	ldrd	r2, r3, [r6, #8]
   17fd2:	ldr.w	r1, [r4, #180]	; 0xb4
   17fd6:	ldr.w	r0, [r4, #176]	; 0xb0
   17fda:	cmp	r1, r3
   17fdc:	it	eq
   17fde:	cmpeq	r0, r2
   17fe0:	bne.n	18022 <btrfs_cow_block@@Base+0xaa>
   17fe2:	ldr.w	lr, [r4, #152]	; 0x98
   17fe6:	mov.w	ip, #0
   17fea:	mov	r3, ip
   17fec:	and.w	r2, lr, #1
   17ff0:	orrs	r3, r2
   17ff2:	bne.n	18022 <btrfs_cow_block@@Base+0xaa>
   17ff4:	ldr.w	r3, [r5, #451]	; 0x1c3
   17ff8:	mov.w	r1, #4294967295	; 0xffffffff
   17ffc:	ldr.w	r2, [r5, #447]	; 0x1bf
   18000:	mvn.w	r0, #7
   18004:	cmp	r3, r1
   18006:	it	eq
   18008:	cmpeq	r2, r0
   1800a:	beq.n	18016 <btrfs_cow_block@@Base+0x9e>
   1800c:	and.w	r2, lr, #2
   18010:	mov	r3, ip
   18012:	orrs	r3, r2
   18014:	bne.n	18022 <btrfs_cow_block@@Base+0xaa>
   18016:	movs	r0, #0
   18018:	str.w	r4, [sl]
   1801c:	add	sp, #24
   1801e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   18022:	movs	r2, #0
   18024:	movs	r3, #0
   18026:	strd	r2, r3, [sp, #16]
   1802a:	mov	r1, r5
   1802c:	ldrd	r3, r2, [r4, #40]	; 0x28
   18030:	mov	r0, r6
   18032:	str.w	sl, [sp, #4]
   18036:	and.w	r3, r3, #3221225472	; 0xc0000000
   1803a:	strd	r3, r2, [sp, #8]
   1803e:	mov	r2, r4
   18040:	ldr	r3, [sp, #56]	; 0x38
   18042:	str	r3, [sp, #0]
   18044:	mov	r3, r7
   18046:	bl	179b0 <__btrfs_cow_block@@Base>
   1804a:	b.n	1801c <btrfs_cow_block@@Base+0xa4>
   1804c:	pop	{r1, r2, r5, r6, r7, pc}
   1804e:	movs	r4, r0
   18050:	lsls	r0, r6, #8
   18052:	movs	r0, r0
   18054:	subs	r2, #144	; 0x90
   18056:	movs	r2, r0
   18058:	subs	r7, #88	; 0x58
   1805a:	movs	r2, r0
   1805c:	ldr	r7, [pc, #36]	; (18084 <btrfs_comp_cpu_keys@@Base+0x24>)
   1805e:	movs	r2, r0

00018060 <btrfs_comp_cpu_keys@@Base>:
   18060:	push	{r4, r5, lr}
   18062:	ldr	r3, [r1, #4]
   18064:	ldr	r5, [r0, #4]
   18066:	ldr	r4, [r0, #0]
   18068:	ldr	r2, [r1, #0]
   1806a:	cmp	r3, r5
   1806c:	it	eq
   1806e:	cmpeq	r2, r4
   18070:	bcc.n	180b2 <btrfs_comp_cpu_keys@@Base+0x52>
   18072:	cmp	r5, r3
   18074:	it	eq
   18076:	cmpeq	r4, r2
   18078:	bcc.n	180ac <btrfs_comp_cpu_keys@@Base+0x4c>
   1807a:	ldrb	r2, [r0, #8]
   1807c:	ldrb	r3, [r1, #8]
   1807e:	cmp	r2, r3
   18080:	bhi.n	180b2 <btrfs_comp_cpu_keys@@Base+0x52>
   18082:	bcc.n	180ac <btrfs_comp_cpu_keys@@Base+0x4c>
   18084:	ldr.w	r5, [r0, #13]
   18088:	ldr.w	r3, [r1, #13]
   1808c:	ldr.w	r4, [r0, #9]
   18090:	ldr.w	r2, [r1, #9]
   18094:	cmp	r3, r5
   18096:	it	eq
   18098:	cmpeq	r2, r4
   1809a:	bcc.n	180b2 <btrfs_comp_cpu_keys@@Base+0x52>
   1809c:	cmp	r5, r3
   1809e:	it	eq
   180a0:	cmpeq	r4, r2
   180a2:	ite	cc
   180a4:	movcc.w	r0, #4294967295	; 0xffffffff
   180a8:	movcs	r0, #0
   180aa:	pop	{r4, r5, pc}
   180ac:	mov.w	r0, #4294967295	; 0xffffffff
   180b0:	b.n	180aa <btrfs_comp_cpu_keys@@Base+0x4a>
   180b2:	movs	r0, #1
   180b4:	b.n	180aa <btrfs_comp_cpu_keys@@Base+0x4a>
   180b6:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   180b8:	ldr	r2, [pc, #76]	; (18108 <btrfs_comp_cpu_keys@@Base+0xa8>)
   180ba:	ldr	r3, [pc, #80]	; (1810c <btrfs_comp_cpu_keys@@Base+0xac>)
   180bc:	add	r2, pc
   180be:	ldr	r3, [r2, r3]
   180c0:	ldr	r3, [r3, #0]
   180c2:	str	r3, [sp, #20]
   180c4:	mov.w	r3, #0
   180c8:	ldr.w	r3, [r0, #13]
   180cc:	ldr.w	r2, [r0, #9]
   180d0:	str.w	r3, [sp, #13]
   180d4:	ldrb	r3, [r0, #8]
   180d6:	str.w	r2, [sp, #9]
   180da:	ldr	r2, [r0, #0]
   180dc:	strb.w	r3, [sp, #8]
   180e0:	ldr	r3, [r0, #4]
   180e2:	mov	r0, sp
   180e4:	strd	r2, r3, [sp]
   180e8:	bl	18060 <btrfs_comp_cpu_keys@@Base>
   180ec:	ldr	r2, [pc, #32]	; (18110 <btrfs_comp_cpu_keys@@Base+0xb0>)
   180ee:	ldr	r3, [pc, #28]	; (1810c <btrfs_comp_cpu_keys@@Base+0xac>)
   180f0:	add	r2, pc
   180f2:	ldr	r3, [r2, r3]
   180f4:	ldr	r2, [r3, #0]
   180f6:	ldr	r3, [sp, #20]
   180f8:	eors	r2, r3
   180fa:	beq.n	18100 <btrfs_comp_cpu_keys@@Base+0xa0>
   180fc:	blx	8510 <__stack_chk_fail@plt>
   18100:	add	sp, #28
   18102:	ldr.w	pc, [sp], #4
   18106:	nop
   18108:	pop	{r3, r6, r7}
   1810a:	movs	r4, r0
   1810c:	lsls	r0, r4, #8
   1810e:	movs	r0, r0
   18110:	pop	{r2, r4, r7}
   18112:	movs	r4, r0

00018114 <btrfs_check_node@@Base>:
   18114:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18118:	mov	r4, r2
   1811a:	ldr	r2, [pc, #340]	; (18270 <btrfs_check_node@@Base+0x15c>)
   1811c:	sub	sp, #92	; 0x5c
   1811e:	ldr	r3, [pc, #340]	; (18274 <btrfs_check_node@@Base+0x160>)
   18120:	mov	r7, r0
   18122:	add	r2, pc
   18124:	ldr.w	r8, [r4, #192]	; 0xc0
   18128:	mov	r5, r1
   1812a:	ldr	r3, [r2, r3]
   1812c:	ldr	r3, [r3, #0]
   1812e:	str	r3, [sp, #84]	; 0x54
   18130:	mov.w	r3, #0
   18134:	cmp.w	r8, #0
   18138:	beq.n	181d4 <btrfs_check_node@@Base+0xc0>
   1813a:	ldr.w	r2, [r0, #384]	; 0x180
   1813e:	ldr	r3, [pc, #300]	; (1826c <btrfs_check_node@@Base+0x158>)
   18140:	subs	r2, #101	; 0x65
   18142:	umull	r2, r3, r2, r3
   18146:	cmp.w	r8, r3, lsr #3
   1814a:	bhi.n	181d4 <btrfs_check_node@@Base+0xc0>
   1814c:	cbnz	r1, 1816a <btrfs_check_node@@Base+0x56>
   1814e:	sub.w	sl, r8, #2
   18152:	add.w	r9, sp, #44	; 0x2c
   18156:	add.w	fp, sp, #64	; 0x40
   1815a:	movs	r6, #0
   1815c:	cmp.w	r8, #1
   18160:	beq.n	18166 <btrfs_check_node@@Base+0x52>
   18162:	cmp	sl, r6
   18164:	bhi.n	1818e <btrfs_check_node@@Base+0x7a>
   18166:	movs	r6, #0
   18168:	b.n	18224 <btrfs_check_node@@Base+0x110>
   1816a:	ldrb	r3, [r1, #8]
   1816c:	cmp	r3, #0
   1816e:	beq.n	1814e <btrfs_check_node@@Base+0x3a>
   18170:	add	r1, sp, #44	; 0x2c
   18172:	movs	r2, #0
   18174:	mov	r0, r4
   18176:	str	r1, [sp, #20]
   18178:	bl	17046 <rb_free_nodes@@Base+0x54>
   1817c:	ldr	r1, [sp, #20]
   1817e:	movs	r2, #17
   18180:	mov	r0, r5
   18182:	blx	84a8 <memcmp@plt+0x4>
   18186:	cmp	r0, #0
   18188:	beq.n	1814e <btrfs_check_node@@Base+0x3a>
   1818a:	movs	r6, #2
   1818c:	b.n	181d6 <btrfs_check_node@@Base+0xc2>
   1818e:	mov	r2, r6
   18190:	adds	r6, #1
   18192:	mov	r1, r9
   18194:	mov	r0, r4
   18196:	bl	17046 <rb_free_nodes@@Base+0x54>
   1819a:	mov	r2, r6
   1819c:	mov	r1, fp
   1819e:	mov	r0, r4
   181a0:	bl	17046 <rb_free_nodes@@Base+0x54>
   181a4:	ldr.w	r3, [sp, #77]	; 0x4d
   181a8:	ldr.w	r2, [sp, #73]	; 0x49
   181ac:	add	r1, sp, #24
   181ae:	mov	r0, r9
   181b0:	str.w	r3, [sp, #37]	; 0x25
   181b4:	ldrb.w	r3, [sp, #72]	; 0x48
   181b8:	str.w	r2, [sp, #33]	; 0x21
   181bc:	strb.w	r3, [sp, #32]
   181c0:	ldrd	r2, r3, [sp, #64]	; 0x40
   181c4:	strd	r2, r3, [sp, #24]
   181c8:	bl	180b6 <btrfs_comp_cpu_keys@@Base+0x56>
   181cc:	cmp	r0, #0
   181ce:	blt.n	1815c <btrfs_check_node@@Base+0x48>
   181d0:	movs	r6, #3
   181d2:	b.n	181d6 <btrfs_check_node@@Base+0xc2>
   181d4:	movs	r6, #1
   181d6:	ldr.w	r3, [r4, #188]	; 0xbc
   181da:	ldr.w	r2, [r4, #184]	; 0xb8
   181de:	cmp	r3, #0
   181e0:	it	eq
   181e2:	cmpeq	r2, #2
   181e4:	bne.n	18224 <btrfs_check_node@@Base+0x110>
   181e6:	add.w	r8, sp, #33	; 0x21
   181ea:	cbz	r5, 18238 <btrfs_check_node@@Base+0x124>
   181ec:	ldr.w	r3, [r5, #13]
   181f0:	ldr.w	r2, [r5, #9]
   181f4:	str.w	r3, [r8, #4]
   181f8:	ldrb	r3, [r5, #8]
   181fa:	str.w	r2, [sp, #33]	; 0x21
   181fe:	ldr	r2, [r5, #0]
   18200:	strb.w	r3, [sp, #32]
   18204:	ldr	r3, [r5, #4]
   18206:	strd	r2, r3, [sp, #24]
   1820a:	ldrb.w	r3, [r4, #196]	; 0xc4
   1820e:	add	r1, sp, #24
   18210:	mov	r0, r7
   18212:	str	r3, [sp, #8]
   18214:	ldr	r3, [r4, #76]	; 0x4c
   18216:	str	r3, [sp, #0]
   18218:	movs	r3, #0
   1821a:	str	r3, [sp, #4]
   1821c:	ldrd	r2, r3, [r4, #40]	; 0x28
   18220:	bl	2cce0 <btrfs_add_corrupt_extent_record@@Base>
   18224:	ldr	r2, [pc, #80]	; (18278 <btrfs_check_node@@Base+0x164>)
   18226:	ldr	r3, [pc, #76]	; (18274 <btrfs_check_node@@Base+0x160>)
   18228:	add	r2, pc
   1822a:	ldr	r3, [r2, r3]
   1822c:	ldr	r2, [r3, #0]
   1822e:	ldr	r3, [sp, #84]	; 0x54
   18230:	eors	r2, r3
   18232:	beq.n	18264 <btrfs_check_node@@Base+0x150>
   18234:	blx	8510 <__stack_chk_fail@plt>
   18238:	mov	r2, r5
   1823a:	add	r1, sp, #64	; 0x40
   1823c:	mov	r0, r4
   1823e:	bl	17046 <rb_free_nodes@@Base+0x54>
   18242:	ldr.w	r3, [sp, #77]	; 0x4d
   18246:	ldr.w	r2, [sp, #73]	; 0x49
   1824a:	str.w	r3, [r8, #4]
   1824e:	ldrb.w	r3, [sp, #72]	; 0x48
   18252:	str.w	r2, [sp, #33]	; 0x21
   18256:	strb.w	r3, [sp, #32]
   1825a:	ldrd	r2, r3, [sp, #64]	; 0x40
   1825e:	strd	r2, r3, [sp, #24]
   18262:	b.n	1820a <btrfs_check_node@@Base+0xf6>
   18264:	mov	r0, r6
   18266:	add	sp, #92	; 0x5c
   18268:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1826c:	strh	r1, [r4, #30]
   1826e:	subs	r6, #15
   18270:	pop	{r1, r5, r6}
   18272:	movs	r4, r0
   18274:	lsls	r0, r4, #8
   18276:	movs	r0, r0
   18278:	cbnz	r4, 182d2 <btrfs_bin_search@@Base+0x56>
   1827a:	movs	r4, r0

0001827c <btrfs_bin_search@@Base>:
   1827c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   18280:	mov	r6, r1
   18282:	ldr.w	r5, [r0, #192]	; 0xc0
   18286:	mov	r7, r3
   18288:	mov	r9, r2
   1828a:	cbnz	r2, 182a0 <btrfs_bin_search@@Base+0x24>
   1828c:	add.w	r8, r0, #96	; 0x60
   18290:	mov.w	sl, #25
   18294:	cmp	r9, r5
   18296:	blt.n	182d2 <btrfs_bin_search@@Base+0x56>
   18298:	movs	r0, #1
   1829a:	str.w	r9, [r7]
   1829e:	b.n	182fa <btrfs_bin_search@@Base+0x7e>
   182a0:	add.w	r8, r0, #96	; 0x60
   182a4:	mov.w	r9, #0
   182a8:	cmp	r9, r5
   182aa:	bge.n	18298 <btrfs_bin_search@@Base+0x1c>
   182ac:	add.w	r4, r9, r5
   182b0:	mov	r1, r6
   182b2:	add.w	r4, r4, r4, lsr #31
   182b6:	asrs	r4, r4, #1
   182b8:	add.w	r0, r4, r4, lsl #5
   182bc:	adds	r0, #101	; 0x65
   182be:	add	r0, r8
   182c0:	bl	180b6 <btrfs_comp_cpu_keys@@Base+0x56>
   182c4:	cmp	r0, #0
   182c6:	bge.n	182fe <btrfs_bin_search@@Base+0x82>
   182c8:	add.w	r9, r4, #1
   182cc:	mov	r4, r5
   182ce:	mov	r5, r4
   182d0:	b.n	182a8 <btrfs_bin_search@@Base+0x2c>
   182d2:	add.w	r4, r9, r5
   182d6:	mov	r1, r6
   182d8:	add.w	r4, r4, r4, lsr #31
   182dc:	asrs	r4, r4, #1
   182de:	mla	r0, sl, r4, r8
   182e2:	adds	r0, #101	; 0x65
   182e4:	bl	180b6 <btrfs_comp_cpu_keys@@Base+0x56>
   182e8:	cmp	r0, #0
   182ea:	bge.n	182f6 <btrfs_bin_search@@Base+0x7a>
   182ec:	add.w	r9, r4, #1
   182f0:	mov	r4, r5
   182f2:	mov	r5, r4
   182f4:	b.n	18294 <btrfs_bin_search@@Base+0x18>
   182f6:	bne.n	182f2 <btrfs_bin_search@@Base+0x76>
   182f8:	str	r4, [r7, #0]
   182fa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   182fe:	bne.n	182ce <btrfs_bin_search@@Base+0x52>
   18300:	b.n	182f8 <btrfs_bin_search@@Base+0x7c>

00018302 <read_node_slot@@Base>:
   18302:	push	{r4, r5, r6, r7, lr}
   18304:	subs	r6, r2, #0
   18306:	sub	sp, #20
   18308:	mov	r5, r1
   1830a:	blt.n	18370 <read_node_slot@@Base+0x6e>
   1830c:	ldr.w	r3, [r1, #192]	; 0xc0
   18310:	cmp	r6, r3
   18312:	bcs.n	18370 <read_node_slot@@Base+0x6e>
   18314:	ldrb.w	r7, [r1, #196]	; 0xc4
   18318:	cbz	r7, 18370 <read_node_slot@@Base+0x6e>
   1831a:	add.w	r3, r6, r6, lsl #5
   1831e:	add	r3, r1
   18320:	adds	r3, #197	; 0xc5
   18322:	mov	r1, r3
   18324:	ldr.w	r4, [r3, #25]!
   18328:	ldr.w	r2, [r1, #17]!
   1832c:	ldr	r3, [r3, #4]
   1832e:	strd	r4, r3, [sp]
   18332:	ldr	r3, [r1, #4]
   18334:	bl	1cd7c <read_tree_block@@Base>
   18338:	mov	r4, r0
   1833a:	bl	170a0 <rb_free_nodes@@Base+0xae>
   1833e:	cbz	r0, 1836a <read_node_slot@@Base+0x68>
   18340:	ldrb.w	r3, [r4, #196]	; 0xc4
   18344:	subs	r7, #1
   18346:	cmp	r3, r7
   18348:	beq.n	18372 <read_node_slot@@Base+0x70>
   1834a:	str	r3, [sp, #8]
   1834c:	ldrb.w	r3, [r5, #196]	; 0xc4
   18350:	ldr	r0, [pc, #36]	; (18378 <read_node_slot@@Base+0x76>)
   18352:	ldr.w	r2, [r5, #144]	; 0x90
   18356:	add	r0, pc
   18358:	strd	r6, r3, [sp]
   1835c:	ldr.w	r3, [r5, #148]	; 0x94
   18360:	bl	16b70 <__btrfs_error@@Base>
   18364:	mov	r0, r4
   18366:	bl	16314 <free_extent_buffer@@Base>
   1836a:	mvn.w	r4, #4
   1836e:	b.n	18372 <read_node_slot@@Base+0x70>
   18370:	movs	r4, #0
   18372:	mov	r0, r4
   18374:	add	sp, #20
   18376:	pop	{r4, r5, r6, r7, pc}
   18378:	adds	r7, #1
   1837a:	movs	r2, r0

0001837c <reada_for_search@@Base>:
   1837c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18380:	sub	sp, #92	; 0x5c
   18382:	ldr	r4, [pc, #452]	; (18548 <reada_for_search@@Base+0x1cc>)
   18384:	cmp	r2, #1
   18386:	str	r1, [sp, #32]
   18388:	mov	r9, r0
   1838a:	ldr	r1, [pc, #448]	; (1854c <reada_for_search@@Base+0x1d0>)
   1838c:	add	r4, pc
   1838e:	ldr	r1, [r4, r1]
   18390:	ldr	r1, [r1, #0]
   18392:	str	r1, [sp, #84]	; 0x54
   18394:	mov.w	r1, #0
   18398:	bne.n	183d6 <reada_for_search@@Base+0x5a>
   1839a:	ldr	r2, [sp, #32]
   1839c:	ldr	r2, [r2, #4]
   1839e:	str	r2, [sp, #24]
   183a0:	cbz	r2, 183d6 <reada_for_search@@Base+0x5a>
   183a2:	ldr	r2, [sp, #32]
   183a4:	mov	r6, r3
   183a6:	ldr	r3, [sp, #24]
   183a8:	ldrsb.w	r2, [r2, #64]	; 0x40
   183ac:	adds	r3, #96	; 0x60
   183ae:	str	r3, [sp, #36]	; 0x24
   183b0:	add.w	r3, r6, r6, lsl #5
   183b4:	str	r2, [sp, #56]	; 0x38
   183b6:	ldr	r2, [sp, #36]	; 0x24
   183b8:	add	r3, r2
   183ba:	ldr.w	sl, [r3, #118]!
   183be:	ldr.w	fp, [r3, #4]
   183c2:	mov	r2, sl
   183c4:	ldr.w	r3, [r0, #384]	; 0x180
   183c8:	str	r3, [sp, #0]
   183ca:	mov	r3, fp
   183cc:	bl	1b920 <btrfs_find_tree_block@@Base>
   183d0:	cbz	r0, 183ec <reada_for_search@@Base+0x70>
   183d2:	bl	16314 <free_extent_buffer@@Base>
   183d6:	ldr	r2, [pc, #376]	; (18550 <reada_for_search@@Base+0x1d4>)
   183d8:	ldr	r3, [pc, #368]	; (1854c <reada_for_search@@Base+0x1d0>)
   183da:	add	r2, pc
   183dc:	ldr	r3, [r2, r3]
   183de:	ldr	r2, [r3, #0]
   183e0:	ldr	r3, [sp, #84]	; 0x54
   183e2:	eors	r2, r3
   183e4:	beq.w	18542 <reada_for_search@@Base+0x1c6>
   183e8:	blx	8510 <__stack_chk_fail@plt>
   183ec:	ldr	r3, [sp, #24]
   183ee:	movs	r4, #0
   183f0:	ldr.w	r3, [r3, #192]	; 0xc0
   183f4:	strd	sl, fp, [sp, #8]
   183f8:	str	r0, [sp, #28]
   183fa:	str	r3, [sp, #60]	; 0x3c
   183fc:	movs	r3, #0
   183fe:	strd	r3, r4, [sp, #16]
   18402:	ldr	r3, [sp, #56]	; 0x38
   18404:	cmp	r3, #0
   18406:	bge.n	184a2 <reada_for_search@@Base+0x126>
   18408:	cmp	r6, #0
   1840a:	beq.n	183d6 <reada_for_search@@Base+0x5a>
   1840c:	subs	r6, #1
   1840e:	ldr	r3, [sp, #32]
   18410:	ldrsb.w	r3, [r3, #64]	; 0x40
   18414:	cmp	r3, #0
   18416:	blt.n	184ae <reada_for_search@@Base+0x132>
   18418:	ldr	r2, [sp, #36]	; 0x24
   1841a:	add.w	r3, r6, r6, lsl #5
   1841e:	adds	r3, #101	; 0x65
   18420:	add	r3, r2
   18422:	mov	r2, r3
   18424:	ldr.w	r4, [r2, #17]!
   18428:	ldr	r5, [r2, #4]
   1842a:	cmp	r5, fp
   1842c:	it	eq
   1842e:	cmpeq	r4, sl
   18430:	bcs.n	184d2 <reada_for_search@@Base+0x156>
   18432:	subs.w	r2, sl, r4
   18436:	str	r2, [sp, #40]	; 0x28
   18438:	sbc.w	r2, fp, r5
   1843c:	str	r2, [sp, #44]	; 0x2c
   1843e:	ldrd	r7, r8, [sp, #40]	; 0x28
   18442:	movs	r2, #0
   18444:	mov.w	r1, #32768	; 0x8000
   18448:	cmp	r2, r8
   1844a:	it	eq
   1844c:	cmpeq	r1, r7
   1844e:	bcs.n	184fe <reada_for_search@@Base+0x182>
   18450:	ldrd	r1, r2, [sp, #8]
   18454:	cmp	r2, r5
   18456:	it	eq
   18458:	cmpeq	r1, r4
   1845a:	bcc.n	184de <reada_for_search@@Base+0x162>
   1845c:	ldr	r3, [sp, #28]
   1845e:	adds	r3, #1
   18460:	str	r3, [sp, #28]
   18462:	ldr	r3, [sp, #32]
   18464:	ldrsb.w	r3, [r3, #64]	; 0x40
   18468:	cmp	r3, #1
   1846a:	bgt.n	18526 <reada_for_search@@Base+0x1aa>
   1846c:	ldrd	r0, r1, [sp, #16]
   18470:	movs	r3, #0
   18472:	mov.w	r2, #262144	; 0x40000
   18476:	cmp	r3, r1
   18478:	it	eq
   1847a:	cmpeq	r2, r0
   1847c:	bcc.n	183d6 <reada_for_search@@Base+0x5a>
   1847e:	ldr	r3, [sp, #28]
   18480:	cmp	r3, #32
   18482:	bhi.n	183d6 <reada_for_search@@Base+0x5a>
   18484:	cmp	r5, fp
   18486:	ldrd	r2, r3, [sp, #8]
   1848a:	it	eq
   1848c:	cmpeq	r4, sl
   1848e:	itt	cc
   18490:	movcc	sl, r4
   18492:	movcc	fp, r5
   18494:	cmp	r3, r5
   18496:	it	eq
   18498:	cmpeq	r2, r4
   1849a:	bcs.n	18402 <reada_for_search@@Base+0x86>
   1849c:	strd	r4, r5, [sp, #8]
   184a0:	b.n	18402 <reada_for_search@@Base+0x86>
   184a2:	beq.n	1840e <reada_for_search@@Base+0x92>
   184a4:	ldr	r3, [sp, #60]	; 0x3c
   184a6:	adds	r6, #1
   184a8:	cmp	r6, r3
   184aa:	bcc.n	1840e <reada_for_search@@Base+0x92>
   184ac:	b.n	183d6 <reada_for_search@@Base+0x5a>
   184ae:	ldrd	r3, r4, [sp, #128]	; 0x80
   184b2:	orrs	r3, r4
   184b4:	beq.n	18418 <reada_for_search@@Base+0x9c>
   184b6:	ldr	r0, [sp, #24]
   184b8:	add	r1, sp, #64	; 0x40
   184ba:	mov	r2, r6
   184bc:	bl	17046 <rb_free_nodes@@Base+0x54>
   184c0:	ldrd	r2, r3, [sp, #64]	; 0x40
   184c4:	ldrd	r0, r1, [sp, #128]	; 0x80
   184c8:	cmp	r1, r3
   184ca:	it	eq
   184cc:	cmpeq	r0, r2
   184ce:	beq.n	18418 <reada_for_search@@Base+0x9c>
   184d0:	b.n	183d6 <reada_for_search@@Base+0x5a>
   184d2:	ldrd	r1, r2, [sp, #8]
   184d6:	cmp	r2, r5
   184d8:	it	eq
   184da:	cmpeq	r1, r4
   184dc:	bcs.n	184fe <reada_for_search@@Base+0x182>
   184de:	ldr	r2, [sp, #8]
   184e0:	mov.w	r1, #32768	; 0x8000
   184e4:	subs	r2, r4, r2
   184e6:	str	r2, [sp, #48]	; 0x30
   184e8:	ldr	r2, [sp, #12]
   184ea:	sbc.w	r2, r5, r2
   184ee:	str	r2, [sp, #52]	; 0x34
   184f0:	ldrd	r7, r8, [sp, #48]	; 0x30
   184f4:	movs	r2, #0
   184f6:	cmp	r2, r8
   184f8:	it	eq
   184fa:	cmpeq	r1, r7
   184fc:	bcc.n	1845c <reada_for_search@@Base+0xe0>
   184fe:	ldr.w	r2, [r3, #25]!
   18502:	mov	r0, r9
   18504:	ldr	r3, [r3, #4]
   18506:	strd	r2, r3, [sp]
   1850a:	mov	r2, r4
   1850c:	mov	r3, r5
   1850e:	bl	1cc2c <readahead_tree_block@@Base>
   18512:	ldrd	r1, r2, [sp, #16]
   18516:	ldr.w	r3, [r9, #384]	; 0x180
   1851a:	adds	r1, r1, r3
   1851c:	adc.w	r2, r2, #0
   18520:	strd	r1, r2, [sp, #16]
   18524:	b.n	1845c <reada_for_search@@Base+0xe0>
   18526:	ldrd	r0, r1, [sp, #16]
   1852a:	movs	r3, #0
   1852c:	mov.w	r2, #1048576	; 0x100000
   18530:	cmp	r3, r1
   18532:	it	eq
   18534:	cmpeq	r2, r0
   18536:	bcc.w	183d6 <reada_for_search@@Base+0x5a>
   1853a:	ldr	r3, [sp, #28]
   1853c:	cmp	r3, #129	; 0x81
   1853e:	bne.n	18484 <reada_for_search@@Base+0x108>
   18540:	b.n	183d6 <reada_for_search@@Base+0x5a>
   18542:	add	sp, #92	; 0x5c
   18544:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18548:	cbnz	r0, 1858a <btrfs_fixup_low_keys@@Base+0x36>
   1854a:	movs	r4, r0
   1854c:	lsls	r0, r4, #8
   1854e:	movs	r0, r0
   18550:	cbnz	r2, 1857e <btrfs_fixup_low_keys@@Base+0x2a>
   18552:	movs	r4, r0

00018554 <btrfs_fixup_low_keys@@Base>:
   18554:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18558:	add.w	r4, r1, r3, lsl #2
   1855c:	mov	r6, r2
   1855e:	mov	r5, r3
   18560:	cmp	r5, #7
   18562:	ble.n	18568 <btrfs_fixup_low_keys@@Base+0x14>
   18564:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   18568:	ldr	r0, [r4, #0]
   1856a:	mov	r8, r4
   1856c:	ldr	r7, [r4, #32]
   1856e:	cmp	r0, #0
   18570:	beq.n	18564 <btrfs_fixup_low_keys@@Base+0x10>
   18572:	mov	r2, r7
   18574:	mov	r1, r6
   18576:	bl	17022 <rb_free_nodes@@Base+0x30>
   1857a:	ldr.w	r0, [r8]
   1857e:	adds	r4, #4
   18580:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   18584:	cmp	r7, #0
   18586:	bne.n	18564 <btrfs_fixup_low_keys@@Base+0x10>
   18588:	adds	r5, #1
   1858a:	b.n	18560 <btrfs_fixup_low_keys@@Base+0xc>

0001858c <btrfs_set_item_key_safe@@Base>:
   1858c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   18590:	mov	r5, r2
   18592:	ldr	r2, [pc, #188]	; (18650 <btrfs_set_item_key_safe@@Base+0xc4>)
   18594:	sub	sp, #28
   18596:	ldr	r3, [pc, #188]	; (18654 <btrfs_set_item_key_safe@@Base+0xc8>)
   18598:	mov	r9, r0
   1859a:	add	r2, pc
   1859c:	ldr	r4, [r1, #32]
   1859e:	ldr.w	r8, [r1]
   185a2:	mov	r7, r1
   185a4:	ldr	r3, [r2, r3]
   185a6:	cmp	r4, #0
   185a8:	mov	r6, sp
   185aa:	ldr	r3, [r3, #0]
   185ac:	str	r3, [sp, #20]
   185ae:	mov.w	r3, #0
   185b2:	bgt.n	185f2 <btrfs_set_item_key_safe@@Base+0x66>
   185b4:	ldr.w	r3, [r8, #192]	; 0xc0
   185b8:	subs	r3, #1
   185ba:	cmp	r3, r4
   185bc:	bhi.n	18620 <btrfs_set_item_key_safe@@Base+0x94>
   185be:	ldr.w	r3, [r5, #13]
   185c2:	mov	r0, r8
   185c4:	ldr.w	r2, [r5, #9]
   185c8:	mov	r1, r6
   185ca:	str.w	r3, [sp, #13]
   185ce:	ldrb	r3, [r5, #8]
   185d0:	str.w	r2, [sp, #9]
   185d4:	ldr	r2, [r5, #0]
   185d6:	strb.w	r3, [sp, #8]
   185da:	ldr	r3, [r5, #4]
   185dc:	strd	r2, r3, [sp]
   185e0:	mov	r2, r4
   185e2:	bl	1702e <rb_free_nodes@@Base+0x3c>
   185e6:	mov	r0, r8
   185e8:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   185ec:	cbz	r4, 18638 <btrfs_set_item_key_safe@@Base+0xac>
   185ee:	movs	r4, #0
   185f0:	b.n	1860c <btrfs_set_item_key_safe@@Base+0x80>
   185f2:	subs	r2, r4, #1
   185f4:	mov	r1, r6
   185f6:	mov	r0, r8
   185f8:	bl	1703a <rb_free_nodes@@Base+0x48>
   185fc:	mov	r1, r5
   185fe:	mov	r0, r6
   18600:	bl	180b6 <btrfs_comp_cpu_keys@@Base+0x56>
   18604:	cmp	r0, #0
   18606:	blt.n	185b4 <btrfs_set_item_key_safe@@Base+0x28>
   18608:	mov.w	r4, #4294967295	; 0xffffffff
   1860c:	ldr	r2, [pc, #72]	; (18658 <btrfs_set_item_key_safe@@Base+0xcc>)
   1860e:	ldr	r3, [pc, #68]	; (18654 <btrfs_set_item_key_safe@@Base+0xc8>)
   18610:	add	r2, pc
   18612:	ldr	r3, [r2, r3]
   18614:	ldr	r2, [r3, #0]
   18616:	ldr	r3, [sp, #20]
   18618:	eors	r2, r3
   1861a:	beq.n	18646 <btrfs_set_item_key_safe@@Base+0xba>
   1861c:	blx	8510 <__stack_chk_fail@plt>
   18620:	adds	r2, r4, #1
   18622:	mov	r1, r6
   18624:	mov	r0, r8
   18626:	bl	1703a <rb_free_nodes@@Base+0x48>
   1862a:	mov	r1, r5
   1862c:	mov	r0, r6
   1862e:	bl	180b6 <btrfs_comp_cpu_keys@@Base+0x56>
   18632:	cmp	r0, #0
   18634:	bgt.n	185be <btrfs_set_item_key_safe@@Base+0x32>
   18636:	b.n	18608 <btrfs_set_item_key_safe@@Base+0x7c>
   18638:	movs	r3, #1
   1863a:	mov	r2, r6
   1863c:	mov	r1, r7
   1863e:	mov	r0, r9
   18640:	bl	18554 <btrfs_fixup_low_keys@@Base>
   18644:	b.n	1860c <btrfs_set_item_key_safe@@Base+0x80>
   18646:	mov	r0, r4
   18648:	add	sp, #28
   1864a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1864e:	nop
   18650:			; <UNDEFINED> instruction: 0xb7ea
   18652:	movs	r4, r0
   18654:	lsls	r0, r4, #8
   18656:	movs	r0, r0
   18658:			; <UNDEFINED> instruction: 0xb774
   1865a:	movs	r4, r0

0001865c <btrfs_set_item_key_unsafe@@Base>:
   1865c:	push	{r4, r5, r6, r7, lr}
   1865e:	mov	r4, r1
   18660:	ldr	r1, [pc, #108]	; (186d0 <btrfs_set_item_key_unsafe@@Base+0x74>)
   18662:	sub	sp, #36	; 0x24
   18664:	ldr	r3, [pc, #108]	; (186d4 <btrfs_set_item_key_unsafe@@Base+0x78>)
   18666:	add	r6, sp, #8
   18668:	add	r1, pc
   1866a:	ldr	r7, [r4, #32]
   1866c:	mov	r5, r0
   1866e:	ldr	r0, [r4, #0]
   18670:	ldr	r3, [r1, r3]
   18672:	ldr	r3, [r3, #0]
   18674:	str	r3, [sp, #28]
   18676:	mov.w	r3, #0
   1867a:	ldr.w	r3, [r2, #13]
   1867e:	ldr.w	r1, [r2, #9]
   18682:	str	r0, [sp, #4]
   18684:	str.w	r3, [sp, #21]
   18688:	ldrb	r3, [r2, #8]
   1868a:	str.w	r1, [sp, #17]
   1868e:	ldr	r1, [r2, #0]
   18690:	strb.w	r3, [sp, #16]
   18694:	ldr	r3, [r2, #4]
   18696:	mov	r2, r7
   18698:	strd	r1, r3, [sp, #8]
   1869c:	mov	r1, r6
   1869e:	bl	1702e <rb_free_nodes@@Base+0x3c>
   186a2:	ldr	r0, [sp, #4]
   186a4:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   186a8:	cbnz	r7, 186b6 <btrfs_set_item_key_unsafe@@Base+0x5a>
   186aa:	movs	r3, #1
   186ac:	mov	r2, r6
   186ae:	mov	r1, r4
   186b0:	mov	r0, r5
   186b2:	bl	18554 <btrfs_fixup_low_keys@@Base>
   186b6:	ldr	r2, [pc, #32]	; (186d8 <btrfs_set_item_key_unsafe@@Base+0x7c>)
   186b8:	ldr	r3, [pc, #24]	; (186d4 <btrfs_set_item_key_unsafe@@Base+0x78>)
   186ba:	add	r2, pc
   186bc:	ldr	r3, [r2, r3]
   186be:	ldr	r2, [r3, #0]
   186c0:	ldr	r3, [sp, #28]
   186c2:	eors	r2, r3
   186c4:	beq.n	186ca <btrfs_set_item_key_unsafe@@Base+0x6e>
   186c6:	blx	8510 <__stack_chk_fail@plt>
   186ca:	add	sp, #36	; 0x24
   186cc:	pop	{r4, r5, r6, r7, pc}
   186ce:	nop
   186d0:			; <UNDEFINED> instruction: 0xb71c
   186d2:	movs	r4, r0
   186d4:	lsls	r0, r4, #8
   186d6:	movs	r0, r0
   186d8:			; <UNDEFINED> instruction: 0xb6ca
   186da:	movs	r4, r0

000186dc <btrfs_leaf_free_space@@Base>:
   186dc:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   186e0:	mov	r4, r0
   186e2:	ldr	r3, [r0, #92]	; 0x5c
   186e4:	ldr	r7, [pc, #104]	; (18750 <btrfs_leaf_free_space@@Base+0x74>)
   186e6:	ldr.w	r6, [r0, #192]	; 0xc0
   186ea:	add	r7, pc
   186ec:	cbz	r3, 186fa <btrfs_leaf_free_space@@Base+0x1e>
   186ee:	ldr.w	r3, [r3, #384]	; 0x180
   186f2:	ldr	r2, [r0, #76]	; 0x4c
   186f4:	subs	r3, r3, r2
   186f6:	it	ne
   186f8:	movne	r3, #1
   186fa:	ldr	r1, [pc, #88]	; (18754 <btrfs_leaf_free_space@@Base+0x78>)
   186fc:	movw	r2, #1767	; 0x6e7
   18700:	ldr	r0, [pc, #84]	; (18758 <btrfs_leaf_free_space@@Base+0x7c>)
   18702:	add	r1, pc
   18704:	adds	r1, #211	; 0xd3
   18706:	add	r0, pc
   18708:	bl	17108 <rb_free_nodes@@Base+0x116>
   1870c:	ldr	r3, [r4, #76]	; 0x4c
   1870e:	mov	r2, r6
   18710:	movs	r1, #0
   18712:	mov	r0, r4
   18714:	sub.w	r8, r3, #101	; 0x65
   18718:	bl	17454 <rb_free_nodes@@Base+0x462>
   1871c:	subs.w	r5, r8, r0
   18720:	bpl.n	18748 <btrfs_leaf_free_space@@Base+0x6c>
   18722:	ldr	r3, [pc, #56]	; (1875c <btrfs_leaf_free_space@@Base+0x80>)
   18724:	mov	r2, r6
   18726:	movs	r1, #0
   18728:	mov	r0, r4
   1872a:	ldr	r3, [r7, r3]
   1872c:	ldr	r7, [r3, #0]
   1872e:	bl	17454 <rb_free_nodes@@Base+0x462>
   18732:	ldr	r2, [pc, #44]	; (18760 <btrfs_leaf_free_space@@Base+0x84>)
   18734:	mov	r3, r5
   18736:	movs	r1, #1
   18738:	str.w	r8, [sp]
   1873c:	add	r2, pc
   1873e:	strd	r0, r6, [sp, #4]
   18742:	mov	r0, r7
   18744:	blx	8860 <__fprintf_chk@plt+0x4>
   18748:	mov	r0, r5
   1874a:	add	sp, #16
   1874c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   18750:			; <UNDEFINED> instruction: 0xb69a
   18752:	movs	r4, r0
   18754:	subs	r0, #22
   18756:	movs	r2, r0
   18758:	adds	r3, #159	; 0x9f
   1875a:	movs	r2, r0
   1875c:	lsls	r0, r6, #8
   1875e:	movs	r0, r0
   18760:	adds	r3, #159	; 0x9f
   18762:	movs	r2, r0

00018764 <btrfs_check_leaf@@Base>:
   18764:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18768:	mov	r4, r2
   1876a:	ldr	r2, [pc, #640]	; (189ec <btrfs_check_leaf@@Base+0x288>)
   1876c:	sub	sp, #84	; 0x54
   1876e:	ldr	r3, [pc, #640]	; (189f0 <btrfs_check_leaf@@Base+0x28c>)
   18770:	mov	r8, r0
   18772:	add	r2, pc
   18774:	ldr.w	sl, [r4, #192]	; 0xc0
   18778:	ldr	r7, [pc, #632]	; (189f4 <btrfs_check_leaf@@Base+0x290>)
   1877a:	mov	r6, r1
   1877c:	ldr	r3, [r2, r3]
   1877e:	ldr	r2, [r4, #76]	; 0x4c
   18780:	add	r7, pc
   18782:	ldr	r3, [r3, #0]
   18784:	str	r3, [sp, #76]	; 0x4c
   18786:	mov.w	r3, #0
   1878a:	movs	r3, #25
   1878c:	mul.w	r3, r3, sl
   18790:	cmp	r3, r2
   18792:	bls.n	187fa <btrfs_check_leaf@@Base+0x96>
   18794:	ldr	r3, [pc, #608]	; (189f8 <btrfs_check_leaf@@Base+0x294>)
   18796:	movs	r1, #1
   18798:	movs	r5, #1
   1879a:	ldr	r0, [r7, r3]
   1879c:	ldrd	r2, r3, [r4, #40]	; 0x28
   187a0:	strd	r2, r3, [sp]
   187a4:	ldr	r2, [pc, #596]	; (189fc <btrfs_check_leaf@@Base+0x298>)
   187a6:	ldr	r0, [r0, #0]
   187a8:	add	r2, pc
   187aa:	blx	8860 <__fprintf_chk@plt+0x4>
   187ae:	ldr.w	r3, [r4, #188]	; 0xbc
   187b2:	ldr.w	r2, [r4, #184]	; 0xb8
   187b6:	cmp	r3, #0
   187b8:	it	eq
   187ba:	cmpeq	r2, #2
   187bc:	bne.n	1885c <btrfs_check_leaf@@Base+0xf8>
   187be:	add	r1, sp, #36	; 0x24
   187c0:	cmp	r6, #0
   187c2:	beq.w	189d6 <btrfs_check_leaf@@Base+0x272>
   187c6:	ldr.w	r3, [r6, #13]
   187ca:	ldr.w	r2, [r6, #9]
   187ce:	str.w	r3, [sp, #49]	; 0x31
   187d2:	ldrb	r3, [r6, #8]
   187d4:	str.w	r2, [sp, #45]	; 0x2d
   187d8:	ldr	r2, [r6, #0]
   187da:	strb.w	r3, [sp, #44]	; 0x2c
   187de:	ldr	r3, [r6, #4]
   187e0:	strd	r2, r3, [sp, #36]	; 0x24
   187e4:	ldr	r2, [r4, #76]	; 0x4c
   187e6:	movs	r3, #0
   187e8:	mov	r0, r8
   187ea:	str	r3, [sp, #8]
   187ec:	strd	r2, r3, [sp]
   187f0:	ldrd	r2, r3, [r4, #40]	; 0x28
   187f4:	bl	2cce0 <btrfs_add_corrupt_extent_record@@Base>
   187f8:	b.n	1885c <btrfs_check_leaf@@Base+0xf8>
   187fa:	ldrb.w	r5, [r4, #196]	; 0xc4
   187fe:	cbz	r5, 18820 <btrfs_check_leaf@@Base+0xbc>
   18800:	ldr	r3, [pc, #500]	; (189f8 <btrfs_check_leaf@@Base+0x294>)
   18802:	movs	r5, #4
   18804:	ldr.w	r1, [r4, #144]	; 0x90
   18808:	ldr.w	r2, [r4, #148]	; 0x94
   1880c:	ldr	r3, [r7, r3]
   1880e:	strd	r1, r2, [sp]
   18812:	movs	r1, #1
   18814:	ldr	r2, [pc, #488]	; (18a00 <btrfs_check_leaf@@Base+0x29c>)
   18816:	ldr	r0, [r3, #0]
   18818:	add	r2, pc
   1881a:	blx	8860 <__fprintf_chk@plt+0x4>
   1881e:	b.n	187ae <btrfs_check_leaf@@Base+0x4a>
   18820:	mov	r0, r4
   18822:	bl	186dc <btrfs_leaf_free_space@@Base>
   18826:	cmp	r0, #0
   18828:	bge.n	18854 <btrfs_check_leaf@@Base+0xf0>
   1882a:	ldr	r3, [pc, #460]	; (189f8 <btrfs_check_leaf@@Base+0x294>)
   1882c:	mov	r0, r4
   1882e:	ldr.w	r9, [r4, #144]	; 0x90
   18832:	ldr	r3, [r7, r3]
   18834:	ldr.w	r7, [r4, #148]	; 0x94
   18838:	ldr	r5, [r3, #0]
   1883a:	bl	186dc <btrfs_leaf_free_space@@Base>
   1883e:	ldr	r2, [pc, #452]	; (18a04 <btrfs_check_leaf@@Base+0x2a0>)
   18840:	movs	r1, #1
   18842:	strd	r9, r7, [sp]
   18846:	add	r2, pc
   18848:	str	r0, [sp, #8]
   1884a:	mov	r0, r5
   1884c:	blx	8860 <__fprintf_chk@plt+0x4>
   18850:	movs	r5, #5
   18852:	b.n	187ae <btrfs_check_leaf@@Base+0x4a>
   18854:	cmp.w	sl, #0
   18858:	bne.n	18872 <btrfs_check_leaf@@Base+0x10e>
   1885a:	movs	r5, #0
   1885c:	ldr	r2, [pc, #424]	; (18a08 <btrfs_check_leaf@@Base+0x2a4>)
   1885e:	ldr	r3, [pc, #400]	; (189f0 <btrfs_check_leaf@@Base+0x28c>)
   18860:	add	r2, pc
   18862:	ldr	r3, [r2, r3]
   18864:	ldr	r2, [r3, #0]
   18866:	ldr	r3, [sp, #76]	; 0x4c
   18868:	eors	r2, r3
   1886a:	beq.w	189e4 <btrfs_check_leaf@@Base+0x280>
   1886e:	blx	8510 <__stack_chk_fail@plt>
   18872:	add.w	r9, sp, #56	; 0x38
   18876:	mov	r2, r5
   18878:	mov	r0, r4
   1887a:	mov	r1, r9
   1887c:	bl	1703a <rb_free_nodes@@Base+0x48>
   18880:	cmp	r6, #0
   18882:	beq.w	189c0 <btrfs_check_leaf@@Base+0x25c>
   18886:	ldrb	r5, [r6, #8]
   18888:	cmp	r5, #0
   1888a:	beq.w	189c2 <btrfs_check_leaf@@Base+0x25e>
   1888e:	movs	r2, #17
   18890:	mov	r1, r9
   18892:	mov	r0, r6
   18894:	blx	84a8 <memcmp@plt+0x4>
   18898:	mov	r5, r0
   1889a:	cmp	r0, #0
   1889c:	beq.w	189c2 <btrfs_check_leaf@@Base+0x25e>
   188a0:	ldr	r3, [pc, #340]	; (189f8 <btrfs_check_leaf@@Base+0x294>)
   188a2:	movs	r5, #2
   188a4:	ldr.w	r1, [r4, #144]	; 0x90
   188a8:	ldr.w	r2, [r4, #148]	; 0x94
   188ac:	ldr	r3, [r7, r3]
   188ae:	strd	r1, r2, [sp]
   188b2:	movs	r1, #1
   188b4:	ldr	r2, [pc, #340]	; (18a0c <btrfs_check_leaf@@Base+0x2a8>)
   188b6:	ldr	r0, [r3, #0]
   188b8:	add	r2, pc
   188ba:	blx	8860 <__fprintf_chk@plt+0x4>
   188be:	b.n	187ae <btrfs_check_leaf@@Base+0x4a>
   188c0:	mov	r2, r5
   188c2:	mov	r1, r9
   188c4:	mov	r0, r4
   188c6:	bl	1703a <rb_free_nodes@@Base+0x48>
   188ca:	adds	r2, r5, #1
   188cc:	mov	r1, fp
   188ce:	mov	r0, r4
   188d0:	str	r2, [sp, #24]
   188d2:	bl	174a4 <rb_free_nodes@@Base+0x4b2>
   188d6:	mov	r1, fp
   188d8:	mov	r0, r9
   188da:	bl	180b6 <btrfs_comp_cpu_keys@@Base+0x56>
   188de:	ldr	r2, [sp, #24]
   188e0:	cmp	r0, #0
   188e2:	blt.n	188fc <btrfs_check_leaf@@Base+0x198>
   188e4:	ldr	r3, [pc, #272]	; (189f8 <btrfs_check_leaf@@Base+0x294>)
   188e6:	movs	r1, #1
   188e8:	ldr	r0, [r7, r3]
   188ea:	mov	r3, r5
   188ec:	str	r2, [sp, #0]
   188ee:	movs	r5, #3
   188f0:	ldr	r2, [pc, #284]	; (18a10 <btrfs_check_leaf@@Base+0x2ac>)
   188f2:	ldr	r0, [r0, #0]
   188f4:	add	r2, pc
   188f6:	blx	8860 <__fprintf_chk@plt+0x4>
   188fa:	b.n	187ae <btrfs_check_leaf@@Base+0x4a>
   188fc:	movs	r3, #25
   188fe:	mov	r1, r2
   18900:	mla	r3, r3, r5, r4
   18904:	mov	r0, r4
   18906:	str	r2, [sp, #24]
   18908:	ldr.w	r3, [r3, #214]	; 0xd6
   1890c:	str	r3, [sp, #28]
   1890e:	bl	17010 <rb_free_nodes@@Base+0x1e>
   18912:	ldr	r3, [sp, #28]
   18914:	ldr	r2, [sp, #24]
   18916:	cmp	r0, r3
   18918:	beq.n	18930 <btrfs_check_leaf@@Base+0x1cc>
   1891a:	ldr	r2, [pc, #220]	; (189f8 <btrfs_check_leaf@@Base+0x294>)
   1891c:	movs	r1, #1
   1891e:	ldr	r5, [r7, r2]
   18920:	ldr	r2, [pc, #240]	; (18a14 <btrfs_check_leaf@@Base+0x2b0>)
   18922:	str	r0, [sp, #0]
   18924:	ldr	r0, [r5, #0]
   18926:	add	r2, pc
   18928:	blx	8860 <__fprintf_chk@plt+0x4>
   1892c:	movs	r5, #6
   1892e:	b.n	187ae <btrfs_check_leaf@@Base+0x4a>
   18930:	cbnz	r5, 18958 <btrfs_check_leaf@@Base+0x1f4>
   18932:	ldr.w	r2, [r4, #218]	; 0xda
   18936:	ldr.w	r3, [r4, #214]	; 0xd6
   1893a:	add	r3, r2
   1893c:	ldr.w	r2, [r8, #384]	; 0x180
   18940:	subs	r2, #101	; 0x65
   18942:	cmp	r2, r3
   18944:	beq.n	18956 <btrfs_check_leaf@@Base+0x1f2>
   18946:	ldr	r1, [pc, #176]	; (189f8 <btrfs_check_leaf@@Base+0x294>)
   18948:	ldr	r0, [r7, r1]
   1894a:	movs	r1, #1
   1894c:	str	r2, [sp, #0]
   1894e:	ldr	r2, [pc, #200]	; (18a18 <btrfs_check_leaf@@Base+0x2b4>)
   18950:	ldr	r0, [r0, #0]
   18952:	add	r2, pc
   18954:	b.n	18928 <btrfs_check_leaf@@Base+0x1c4>
   18956:	movs	r2, #1
   18958:	mov	r5, r2
   1895a:	cmp.w	sl, #1
   1895e:	bls.n	18966 <btrfs_check_leaf@@Base+0x202>
   18960:	ldr	r3, [sp, #20]
   18962:	cmp	r3, r5
   18964:	bhi.n	188c0 <btrfs_check_leaf@@Base+0x15c>
   18966:	movs	r5, #0
   18968:	mov	r1, r5
   1896a:	mov	r0, r4
   1896c:	bl	17010 <rb_free_nodes@@Base+0x1e>
   18970:	ldr.w	r3, [r8, #384]	; 0x180
   18974:	subs	r3, #101	; 0x65
   18976:	cmp	r0, r3
   18978:	bls.n	189ce <btrfs_check_leaf@@Base+0x26a>
   1897a:	movs	r2, #0
   1897c:	mov	r1, r9
   1897e:	mov	r0, r4
   18980:	bl	1703a <rb_free_nodes@@Base+0x48>
   18984:	mov	r0, r9
   18986:	bl	2431c <btrfs_print_key@@Base>
   1898a:	ldr	r3, [pc, #144]	; (18a1c <btrfs_check_leaf@@Base+0x2b8>)
   1898c:	ldr	r3, [r7, r3]
   1898e:	ldr	r0, [r3, #0]
   18990:	blx	8408 <fflush@plt>
   18994:	ldr	r3, [pc, #96]	; (189f8 <btrfs_check_leaf@@Base+0x294>)
   18996:	mov	r1, r5
   18998:	mov	r0, r4
   1899a:	ldr	r3, [r7, r3]
   1899c:	ldr	r7, [r3, #0]
   1899e:	bl	17010 <rb_free_nodes@@Base+0x1e>
   189a2:	ldr.w	r3, [r8, #384]	; 0x180
   189a6:	movs	r2, #0
   189a8:	movs	r1, #1
   189aa:	subs	r3, #101	; 0x65
   189ac:	strd	r3, r2, [sp, #8]
   189b0:	strd	r0, r2, [sp]
   189b4:	mov	r0, r7
   189b6:	ldr	r2, [pc, #104]	; (18a20 <btrfs_check_leaf@@Base+0x2bc>)
   189b8:	add	r2, pc
   189ba:	blx	8860 <__fprintf_chk@plt+0x4>
   189be:	b.n	1892c <btrfs_check_leaf@@Base+0x1c8>
   189c0:	mov	r5, r6
   189c2:	add.w	r3, sl, #4294967295	; 0xffffffff
   189c6:	add.w	fp, sp, #36	; 0x24
   189ca:	str	r3, [sp, #20]
   189cc:	b.n	1895a <btrfs_check_leaf@@Base+0x1f6>
   189ce:	adds	r5, #1
   189d0:	cmp	r5, sl
   189d2:	bne.n	18968 <btrfs_check_leaf@@Base+0x204>
   189d4:	b.n	1885a <btrfs_check_leaf@@Base+0xf6>
   189d6:	mov	r2, r6
   189d8:	mov	r0, r4
   189da:	str	r1, [sp, #20]
   189dc:	bl	174a4 <rb_free_nodes@@Base+0x4b2>
   189e0:	ldr	r1, [sp, #20]
   189e2:	b.n	187e4 <btrfs_check_leaf@@Base+0x80>
   189e4:	mov	r0, r5
   189e6:	add	sp, #84	; 0x54
   189e8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   189ec:			; <UNDEFINED> instruction: 0xb612
   189ee:	movs	r4, r0
   189f0:	lsls	r0, r4, #8
   189f2:	movs	r0, r0
   189f4:			; <UNDEFINED> instruction: 0xb604
   189f6:	movs	r4, r0
   189f8:	lsls	r0, r6, #8
   189fa:	movs	r0, r0
   189fc:	adds	r3, #114	; 0x72
   189fe:	movs	r2, r0
   18a00:	adds	r3, #32
   18a02:	movs	r2, r0
   18a04:	adds	r3, #11
   18a06:	movs	r2, r0
   18a08:	push	{r2, r5, lr}
   18a0a:	movs	r4, r0
   18a0c:	adds	r2, #188	; 0xbc
   18a0e:	movs	r2, r0
   18a10:	adds	r2, #160	; 0xa0
   18a12:	movs	r2, r0
   18a14:	adds	r2, #134	; 0x86
   18a16:	movs	r2, r0
   18a18:	adds	r2, #115	; 0x73
   18a1a:	movs	r2, r0
   18a1c:	lsls	r4, r2, #9
   18a1e:	movs	r0, r0
   18a20:	adds	r2, #40	; 0x28
   18a22:	movs	r2, r0
   18a24:	push	{r4, r5, r6, r7, lr}
   18a26:	mov	r5, r2
   18a28:	ldr	r2, [pc, #100]	; (18a90 <btrfs_check_leaf@@Base+0x32c>)
   18a2a:	sub	sp, #28
   18a2c:	ldr	r3, [pc, #100]	; (18a94 <btrfs_check_leaf@@Base+0x330>)
   18a2e:	mov	r6, r0
   18a30:	add	r2, pc
   18a32:	mov	r4, r1
   18a34:	ldr	r3, [r2, r3]
   18a36:	ldr	r3, [r3, #0]
   18a38:	str	r3, [sp, #20]
   18a3a:	mov.w	r3, #0
   18a3e:	add.w	r3, r1, r5, lsl #2
   18a42:	ldr	r0, [r3, #4]
   18a44:	cbz	r0, 18a52 <btrfs_check_leaf@@Base+0x2ee>
   18a46:	mov	r7, sp
   18a48:	ldr	r2, [r3, #36]	; 0x24
   18a4a:	mov	r1, r7
   18a4c:	bl	17046 <rb_free_nodes@@Base+0x54>
   18a50:	mov	r0, r7
   18a52:	cbnz	r5, 18a7c <btrfs_check_leaf@@Base+0x318>
   18a54:	mov	r1, r0
   18a56:	ldr	r2, [r4, #0]
   18a58:	mov	r0, r6
   18a5a:	bl	18764 <btrfs_check_leaf@@Base>
   18a5e:	ldr	r2, [pc, #56]	; (18a98 <btrfs_check_leaf@@Base+0x334>)
   18a60:	cmp	r0, #0
   18a62:	ldr	r3, [pc, #48]	; (18a94 <btrfs_check_leaf@@Base+0x330>)
   18a64:	add	r2, pc
   18a66:	ite	ne
   18a68:	mvnne.w	r0, #4
   18a6c:	moveq	r0, #0
   18a6e:	ldr	r3, [r2, r3]
   18a70:	ldr	r2, [r3, #0]
   18a72:	ldr	r3, [sp, #20]
   18a74:	eors	r2, r3
   18a76:	beq.n	18a8a <btrfs_check_leaf@@Base+0x326>
   18a78:	blx	8510 <__stack_chk_fail@plt>
   18a7c:	mov	r1, r0
   18a7e:	ldr.w	r2, [r4, r5, lsl #2]
   18a82:	mov	r0, r6
   18a84:	bl	18114 <btrfs_check_node@@Base>
   18a88:	b.n	18a5e <btrfs_check_leaf@@Base+0x2fa>
   18a8a:	add	sp, #28
   18a8c:	pop	{r4, r5, r6, r7, pc}
   18a8e:	nop
   18a90:	cbz	r4, 18ae8 <btrfs_check_leaf@@Base+0x384>
   18a92:	movs	r4, r0
   18a94:	lsls	r0, r4, #8
   18a96:	movs	r0, r0
   18a98:	cbz	r0, 18ae4 <btrfs_check_leaf@@Base+0x380>
   18a9a:	movs	r4, r0
   18a9c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18aa0:	mov	r5, r2
   18aa2:	vpush	{d8}
   18aa6:	mov	r7, r3
   18aa8:	ldr	r2, [pc, #596]	; (18d00 <btrfs_check_leaf@@Base+0x59c>)
   18aaa:	mov	r9, r0
   18aac:	ldr	r3, [pc, #596]	; (18d04 <btrfs_check_leaf@@Base+0x5a0>)
   18aae:	add	r2, pc
   18ab0:	ldr.w	r8, [r5, #4]
   18ab4:	sub	sp, #68	; 0x44
   18ab6:	str	r1, [sp, #16]
   18ab8:	ldr	r3, [r2, r3]
   18aba:	ldr	r3, [r3, #0]
   18abc:	str	r3, [sp, #60]	; 0x3c
   18abe:	mov.w	r3, #0
   18ac2:	cmp.w	r8, #0
   18ac6:	beq.n	18b40 <btrfs_check_leaf@@Base+0x3dc>
   18ac8:	ldr.w	r3, [r8, #192]	; 0xc0
   18acc:	ldr	r2, [r5, #36]	; 0x24
   18ace:	subs	r3, #1
   18ad0:	cmp	r3, r2
   18ad2:	bls.n	18b40 <btrfs_check_leaf@@Base+0x3dc>
   18ad4:	ldr.w	sl, [r1, #464]	; 0x1d0
   18ad8:	adds	r3, r2, #1
   18ada:	mov	r1, r8
   18adc:	ldr	r6, [r5, #0]
   18ade:	mov	r2, r3
   18ae0:	vmov	s16, r3
   18ae4:	mov	r0, sl
   18ae6:	bl	18302 <read_node_slot@@Base>
   18aea:	mov	r4, r0
   18aec:	str	r0, [sp, #36]	; 0x24
   18aee:	bl	170a0 <rb_free_nodes@@Base+0xae>
   18af2:	cbnz	r0, 18b14 <btrfs_check_leaf@@Base+0x3b0>
   18af4:	cmn.w	r4, #4096	; 0x1000
   18af8:	it	ls
   18afa:	mvnls.w	r4, #4
   18afe:	ldr	r2, [pc, #520]	; (18d08 <btrfs_check_leaf@@Base+0x5a4>)
   18b00:	ldr	r3, [pc, #512]	; (18d04 <btrfs_check_leaf@@Base+0x5a0>)
   18b02:	add	r2, pc
   18b04:	ldr	r3, [r2, r3]
   18b06:	ldr	r2, [r3, #0]
   18b08:	ldr	r3, [sp, #60]	; 0x3c
   18b0a:	eors	r2, r3
   18b0c:	beq.w	18cf4 <btrfs_check_leaf@@Base+0x590>
   18b10:	blx	8510 <__stack_chk_fail@plt>
   18b14:	mov	r0, r4
   18b16:	bl	186dc <btrfs_leaf_free_space@@Base>
   18b1a:	cmp	r0, r7
   18b1c:	bge.n	18b22 <btrfs_check_leaf@@Base+0x3be>
   18b1e:	ldr	r0, [sp, #36]	; 0x24
   18b20:	b.n	18b3c <btrfs_check_leaf@@Base+0x3d8>
   18b22:	add	r3, sp, #36	; 0x24
   18b24:	vstr	s16, [sp]
   18b28:	str	r3, [sp, #4]
   18b2a:	mov	r0, r9
   18b2c:	ldr	r2, [sp, #36]	; 0x24
   18b2e:	mov	r3, r8
   18b30:	ldr	r1, [sp, #16]
   18b32:	bl	17f78 <btrfs_cow_block@@Base>
   18b36:	mov	r4, r0
   18b38:	ldr	r0, [sp, #36]	; 0x24
   18b3a:	cbz	r4, 18b44 <btrfs_check_leaf@@Base+0x3e0>
   18b3c:	bl	16314 <free_extent_buffer@@Base>
   18b40:	movs	r4, #1
   18b42:	b.n	18afe <btrfs_check_leaf@@Base+0x39a>
   18b44:	bl	186dc <btrfs_leaf_free_space@@Base>
   18b48:	cmp	r7, r0
   18b4a:	bgt.n	18b1e <btrfs_check_leaf@@Base+0x3ba>
   18b4c:	ldr.w	r3, [r6, #192]	; 0xc0
   18b50:	str	r3, [sp, #12]
   18b52:	cmp	r3, #0
   18b54:	beq.n	18b1e <btrfs_check_leaf@@Base+0x3ba>
   18b56:	ldr	r3, [sp, #112]	; 0x70
   18b58:	adds	r7, #25
   18b5a:	mov	fp, r4
   18b5c:	mov	r1, r4
   18b5e:	rsb	lr, r3, #1
   18b62:	ldr	r3, [sp, #12]
   18b64:	mov.w	r9, #25
   18b68:	subs	r2, r3, #1
   18b6a:	cmp	r2, lr
   18b6c:	bcs.w	18cb2 <btrfs_check_leaf@@Base+0x54e>
   18b70:	cmp.w	fp, #0
   18b74:	beq.n	18b1e <btrfs_check_leaf@@Base+0x3ba>
   18b76:	ldr	r3, [sp, #112]	; 0x70
   18b78:	cbnz	r3, 18b94 <btrfs_check_leaf@@Base+0x430>
   18b7a:	ldr	r3, [sp, #12]
   18b7c:	cmp	r3, fp
   18b7e:	bne.n	18b94 <btrfs_check_leaf@@Base+0x430>
   18b80:	ldr	r1, [pc, #392]	; (18d0c <btrfs_check_leaf@@Base+0x5a8>)
   18b82:	movs	r3, #1
   18b84:	ldr	r0, [pc, #392]	; (18d10 <btrfs_check_leaf@@Base+0x5ac>)
   18b86:	movw	r2, #1874	; 0x752
   18b8a:	add	r1, pc
   18b8c:	adds	r1, #233	; 0xe9
   18b8e:	add	r0, pc
   18b90:	bl	17112 <rb_free_nodes@@Base+0x120>
   18b94:	ldr	r3, [sp, #36]	; 0x24
   18b96:	mov	r0, r6
   18b98:	add.w	sl, sl, #384	; 0x180
   18b9c:	vmov	s15, r3
   18ba0:	ldr.w	r3, [r3, #192]	; 0xc0
   18ba4:	str	r3, [sp, #20]
   18ba6:	ldr	r3, [sp, #12]
   18ba8:	sub.w	r9, r3, fp
   18bac:	mov	r1, r9
   18bae:	bl	17010 <rb_free_nodes@@Base+0x1e>
   18bb2:	mov	r1, r6
   18bb4:	mov	r7, r0
   18bb6:	mov	r0, sl
   18bb8:	bl	170b4 <rb_free_nodes@@Base+0xc2>
   18bbc:	vmov	r1, s15
   18bc0:	subs	r2, r7, r0
   18bc2:	strd	r2, r0, [sp, #24]
   18bc6:	mov	r0, sl
   18bc8:	bl	170b4 <rb_free_nodes@@Base+0xc2>
   18bcc:	ldr	r3, [sp, #28]
   18bce:	subs	r7, r3, r7
   18bd0:	ldr	r3, [sp, #16]
   18bd2:	ldr.w	r3, [r3, #464]	; 0x1d0
   18bd6:	ldr.w	r3, [r3, #384]	; 0x180
   18bda:	subs	r3, #101	; 0x65
   18bdc:	add.w	r2, r0, #101	; 0x65
   18be0:	subs	r3, r3, r0
   18be2:	adds	r1, r2, r7
   18be4:	vmov	r0, s15
   18be8:	bl	16a80 <memmove_extent_buffer@@Base>
   18bec:	ldr	r3, [sp, #16]
   18bee:	mov	r1, r6
   18bf0:	mov	r0, sl
   18bf2:	ldr.w	r3, [r3, #464]	; 0x1d0
   18bf6:	ldr.w	r2, [r3, #384]	; 0x180
   18bfa:	add	r2, r7
   18bfc:	str	r2, [sp, #28]
   18bfe:	bl	170b4 <rb_free_nodes@@Base+0xc2>
   18c02:	ldr	r3, [sp, #24]
   18c04:	movs	r7, #25
   18c06:	ldr	r2, [sp, #28]
   18c08:	mul.w	sl, r7, fp
   18c0c:	mov	r1, r6
   18c0e:	str	r3, [sp, #0]
   18c10:	add.w	r3, r0, #101	; 0x65
   18c14:	ldr	r0, [sp, #36]	; 0x24
   18c16:	bl	16a36 <copy_extent_buffer@@Base>
   18c1a:	ldr	r3, [sp, #20]
   18c1c:	movs	r2, #101	; 0x65
   18c1e:	ldr	r0, [sp, #36]	; 0x24
   18c20:	add.w	r1, sl, r2
   18c24:	muls	r3, r7
   18c26:	bl	16a80 <memmove_extent_buffer@@Base>
   18c2a:	ldr	r0, [sp, #36]	; 0x24
   18c2c:	mul.w	r3, r7, r9
   18c30:	movs	r2, #101	; 0x65
   18c32:	mov	r1, r6
   18c34:	str.w	sl, [sp]
   18c38:	adds	r3, #101	; 0x65
   18c3a:	bl	16a36 <copy_extent_buffer@@Base>
   18c3e:	ldr	r3, [sp, #20]
   18c40:	ldr	r2, [sp, #16]
   18c42:	movs	r1, #0
   18c44:	add.w	r0, r3, fp
   18c48:	ldr	r3, [sp, #36]	; 0x24
   18c4a:	adds	r3, #197	; 0xc5
   18c4c:	str.w	r0, [r3, #-5]
   18c50:	ldr.w	r2, [r2, #464]	; 0x1d0
   18c54:	ldr.w	r2, [r2, #384]	; 0x180
   18c58:	subs	r2, #101	; 0x65
   18c5a:	cmp	r1, r0
   18c5c:	bne.n	18cdc <btrfs_check_leaf@@Base+0x578>
   18c5e:	str.w	r9, [r6, #192]	; 0xc0
   18c62:	cmp.w	r9, #0
   18c66:	beq.n	18c6e <btrfs_check_leaf@@Base+0x50a>
   18c68:	mov	r0, r6
   18c6a:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   18c6e:	ldr	r0, [sp, #36]	; 0x24
   18c70:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   18c74:	add	r1, sp, #40	; 0x28
   18c76:	ldr	r0, [sp, #36]	; 0x24
   18c78:	movs	r2, #0
   18c7a:	str	r1, [sp, #16]
   18c7c:	bl	1703a <rb_free_nodes@@Base+0x48>
   18c80:	vmov	r2, s16
   18c84:	mov	r0, r8
   18c86:	ldr	r1, [sp, #16]
   18c88:	bl	17022 <rb_free_nodes@@Base+0x30>
   18c8c:	mov	r0, r8
   18c8e:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   18c92:	ldr	r3, [r5, #32]
   18c94:	cmp	r9, r3
   18c96:	bhi.n	18cec <btrfs_check_leaf@@Base+0x588>
   18c98:	ldr	r2, [sp, #12]
   18c9a:	ldr	r0, [r5, #0]
   18c9c:	subs	r3, r3, r2
   18c9e:	add	r3, fp
   18ca0:	str	r3, [r5, #32]
   18ca2:	bl	16314 <free_extent_buffer@@Base>
   18ca6:	ldr	r3, [sp, #36]	; 0x24
   18ca8:	str	r3, [r5, #0]
   18caa:	ldr	r3, [r5, #36]	; 0x24
   18cac:	adds	r3, #1
   18cae:	str	r3, [r5, #36]	; 0x24
   18cb0:	b.n	18afe <btrfs_check_leaf@@Base+0x39a>
   18cb2:	mla	ip, r9, r2, r6
   18cb6:	ldr	r3, [r5, #32]
   18cb8:	cmp	r3, r2
   18cba:	it	eq
   18cbc:	addeq	r1, r1, r7
   18cbe:	ldr.w	ip, [ip, #218]	; 0xda
   18cc2:	add.w	ip, ip, #25
   18cc6:	add	r1, ip
   18cc8:	cmp	r1, r0
   18cca:	bhi.w	18b70 <btrfs_check_leaf@@Base+0x40c>
   18cce:	add.w	fp, fp, #1
   18cd2:	cmp	r2, #0
   18cd4:	beq.w	18b76 <btrfs_check_leaf@@Base+0x412>
   18cd8:	subs	r2, #1
   18cda:	b.n	18b6a <btrfs_check_leaf@@Base+0x406>
   18cdc:	ldr.w	r7, [r3, #21]
   18ce0:	adds	r1, #1
   18ce2:	adds	r3, #25
   18ce4:	subs	r2, r2, r7
   18ce6:	str.w	r2, [r3, #-8]
   18cea:	b.n	18c5a <btrfs_check_leaf@@Base+0x4f6>
   18cec:	ldr	r0, [sp, #36]	; 0x24
   18cee:	bl	16314 <free_extent_buffer@@Base>
   18cf2:	b.n	18afe <btrfs_check_leaf@@Base+0x39a>
   18cf4:	mov	r0, r4
   18cf6:	add	sp, #68	; 0x44
   18cf8:	vpop	{d8}
   18cfc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d00:	uxtb	r6, r2
   18d02:	movs	r4, r0
   18d04:	lsls	r0, r4, #8
   18d06:	movs	r0, r0
   18d08:	uxth	r2, r0
   18d0a:	movs	r4, r0
   18d0c:	adds	r3, #142	; 0x8e
   18d0e:	movs	r2, r0
   18d10:	muls	r3, r0
   18d12:	movs	r2, r0
   18d14:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18d18:	mov	sl, r3
   18d1a:	vpush	{d8}
   18d1e:	mov	r4, r2
   18d20:	ldr	r3, [pc, #744]	; (1900c <btrfs_check_leaf@@Base+0x8a8>)
   18d22:	mov	r5, r0
   18d24:	ldr	r2, [pc, #744]	; (19010 <btrfs_check_leaf@@Base+0x8ac>)
   18d26:	mov	r8, r1
   18d28:	add	r3, pc
   18d2a:	ldr	r7, [r4, #36]	; 0x24
   18d2c:	sub	sp, #76	; 0x4c
   18d2e:	add	r2, pc
   18d30:	str	r3, [sp, #20]
   18d32:	ldr	r3, [pc, #736]	; (19014 <btrfs_check_leaf@@Base+0x8b0>)
   18d34:	ldr.w	fp, [sp, #120]	; 0x78
   18d38:	ldr	r3, [r2, r3]
   18d3a:	ldr	r3, [r3, #0]
   18d3c:	str	r3, [sp, #68]	; 0x44
   18d3e:	mov.w	r3, #0
   18d42:	cbz	r7, 18d8a <btrfs_check_leaf@@Base+0x626>
   18d44:	ldr	r1, [r4, #4]
   18d46:	cbz	r1, 18d8a <btrfs_check_leaf@@Base+0x626>
   18d48:	ldr	r6, [r4, #0]
   18d4a:	ldr.w	r3, [r6, #192]	; 0xc0
   18d4e:	str	r3, [sp, #12]
   18d50:	cbz	r3, 18d8a <btrfs_check_leaf@@Base+0x626>
   18d52:	ldr.w	r9, [r8, #464]	; 0x1d0
   18d56:	subs	r7, #1
   18d58:	mov	r2, r7
   18d5a:	mov	r0, r9
   18d5c:	bl	18302 <read_node_slot@@Base>
   18d60:	str	r0, [sp, #44]	; 0x2c
   18d62:	bl	186dc <btrfs_leaf_free_space@@Base>
   18d66:	cmp	r0, sl
   18d68:	bge.n	18d6e <btrfs_check_leaf@@Base+0x60a>
   18d6a:	ldr	r0, [sp, #44]	; 0x2c
   18d6c:	b.n	18d86 <btrfs_check_leaf@@Base+0x622>
   18d6e:	add	r3, sp, #44	; 0x2c
   18d70:	ldr	r2, [sp, #44]	; 0x2c
   18d72:	strd	r7, r3, [sp]
   18d76:	mov	r1, r8
   18d78:	ldr	r3, [r4, #4]
   18d7a:	mov	r0, r5
   18d7c:	bl	17f78 <btrfs_cow_block@@Base>
   18d80:	mov	r7, r0
   18d82:	ldr	r0, [sp, #44]	; 0x2c
   18d84:	cbz	r7, 18d8e <btrfs_check_leaf@@Base+0x62a>
   18d86:	bl	16314 <free_extent_buffer@@Base>
   18d8a:	movs	r7, #1
   18d8c:	b.n	18f88 <btrfs_check_leaf@@Base+0x824>
   18d8e:	bl	186dc <btrfs_leaf_free_space@@Base>
   18d92:	cmp	sl, r0
   18d94:	bgt.n	18d6a <btrfs_check_leaf@@Base+0x606>
   18d96:	cmp.w	fp, #0
   18d9a:	bne.w	18f9c <btrfs_check_leaf@@Base+0x838>
   18d9e:	ldr	r3, [sp, #12]
   18da0:	add.w	ip, r3, #4294967295	; 0xffffffff
   18da4:	movs	r2, #0
   18da6:	add.w	r1, r6, #197	; 0xc5
   18daa:	add.w	sl, sl, #25
   18dae:	mov	r5, r2
   18db0:	cmp	r5, ip
   18db2:	bne.w	18fa2 <btrfs_check_leaf@@Base+0x83e>
   18db6:	cmp	r5, #0
   18db8:	beq.n	18d6a <btrfs_check_leaf@@Base+0x606>
   18dba:	cmp.w	fp, #0
   18dbe:	bne.n	18ddc <btrfs_check_leaf@@Base+0x678>
   18dc0:	ldr.w	r3, [r6, #192]	; 0xc0
   18dc4:	cmp	r3, r5
   18dc6:	bne.n	18ddc <btrfs_check_leaf@@Base+0x678>
   18dc8:	ldr	r1, [pc, #588]	; (19018 <btrfs_check_leaf@@Base+0x8b4>)
   18dca:	movs	r3, #1
   18dcc:	ldr	r0, [pc, #588]	; (1901c <btrfs_check_leaf@@Base+0x8b8>)
   18dce:	movw	r2, #2018	; 0x7e2
   18dd2:	add	r1, pc
   18dd4:	adds	r1, #249	; 0xf9
   18dd6:	add	r0, pc
   18dd8:	bl	17112 <rb_free_nodes@@Base+0x120>
   18ddc:	mov.w	sl, #25
   18de0:	ldr	r0, [sp, #44]	; 0x2c
   18de2:	mul.w	r3, sl, r5
   18de6:	mov	r1, r6
   18de8:	str	r3, [sp, #16]
   18dea:	ldr.w	r2, [r0, #192]	; 0xc0
   18dee:	str	r3, [sp, #0]
   18df0:	movs	r3, #101	; 0x65
   18df2:	mul.w	r2, sl, r2
   18df6:	add	r2, r3
   18df8:	bl	16a36 <copy_extent_buffer@@Base>
   18dfc:	subs	r3, r5, #1
   18dfe:	ldr.w	fp, [sp, #44]	; 0x2c
   18e02:	mla	r3, sl, r3, r6
   18e06:	add.w	r2, r3, #197	; 0xc5
   18e0a:	str	r2, [sp, #28]
   18e0c:	ldr.w	r2, [r3, #214]	; 0xd6
   18e10:	ldr.w	r3, [r8, #464]	; 0x1d0
   18e14:	ldr.w	r3, [r3, #384]	; 0x180
   18e18:	subs	r3, #101	; 0x65
   18e1a:	strd	r3, r2, [sp, #32]
   18e1e:	subs	r1, r3, r2
   18e20:	add.w	r3, r9, #384	; 0x180
   18e24:	str	r1, [sp, #24]
   18e26:	mov	r1, fp
   18e28:	mov	r0, r3
   18e2a:	vmov	s16, r3
   18e2e:	bl	170b4 <rb_free_nodes@@Base+0xc2>
   18e32:	ldr	r3, [sp, #32]
   18e34:	ldr	r2, [sp, #36]	; 0x24
   18e36:	rsb	r3, r3, #101	; 0x65
   18e3a:	adds	r1, r3, r2
   18e3c:	ldr	r3, [sp, #24]
   18e3e:	str	r3, [sp, #0]
   18e40:	add.w	r3, r2, #101	; 0x65
   18e44:	adds	r2, r1, r0
   18e46:	mov	r0, fp
   18e48:	mov	r1, r6
   18e4a:	bl	16a36 <copy_extent_buffer@@Base>
   18e4e:	ldr.w	r9, [sp, #44]	; 0x2c
   18e52:	ldr	r1, [pc, #460]	; (19020 <btrfs_check_leaf@@Base+0x8bc>)
   18e54:	movw	r2, #2035	; 0x7f3
   18e58:	ldr	r0, [pc, #456]	; (19024 <btrfs_check_leaf@@Base+0x8c0>)
   18e5a:	ldr.w	fp, [r9, #192]	; 0xc0
   18e5e:	add	r1, pc
   18e60:	adds	r1, #249	; 0xf9
   18e62:	add	r0, pc
   18e64:	clz	r3, fp
   18e68:	lsrs	r3, r3, #5
   18e6a:	bl	17108 <rb_free_nodes@@Base+0x116>
   18e6e:	add.w	r3, fp, #4294967295	; 0xffffffff
   18e72:	add.w	r0, fp, r5
   18e76:	mov	r2, fp
   18e78:	mla	r3, sl, r3, r9
   18e7c:	ldr.w	r1, [r3, #214]	; 0xd6
   18e80:	add.w	r3, r9, #197	; 0xc5
   18e84:	str	r3, [sp, #24]
   18e86:	adds	r1, #101	; 0x65
   18e88:	cmp	r0, r2
   18e8a:	bhi.w	18fbe <btrfs_check_leaf@@Base+0x85a>
   18e8e:	ldr	r3, [sp, #12]
   18e90:	str.w	r0, [r9, #192]	; 0xc0
   18e94:	cmp	r3, r5
   18e96:	bcs.n	18ec4 <btrfs_check_leaf@@Base+0x760>
   18e98:	ldr	r2, [sp, #20]
   18e9a:	movs	r1, #1
   18e9c:	ldr	r3, [pc, #392]	; (19028 <btrfs_check_leaf@@Base+0x8c4>)
   18e9e:	ldr	r0, [r2, r3]
   18ea0:	ldr	r3, [sp, #12]
   18ea2:	ldr	r2, [pc, #392]	; (1902c <btrfs_check_leaf@@Base+0x8c8>)
   18ea4:	str	r3, [sp, #0]
   18ea6:	add	r2, pc
   18ea8:	mov	r3, r5
   18eaa:	ldr	r0, [r0, #0]
   18eac:	blx	8860 <__fprintf_chk@plt+0x4>
   18eb0:	ldr	r1, [pc, #380]	; (19030 <btrfs_check_leaf@@Base+0x8cc>)
   18eb2:	ldr	r0, [pc, #384]	; (19034 <btrfs_check_leaf@@Base+0x8d0>)
   18eb4:	movs	r3, #1
   18eb6:	add	r1, pc
   18eb8:	movw	r2, #2052	; 0x804
   18ebc:	adds	r1, #249	; 0xf9
   18ebe:	add	r0, pc
   18ec0:	bl	17112 <rb_free_nodes@@Base+0x120>
   18ec4:	ldr	r3, [sp, #12]
   18ec6:	cmp	r3, r5
   18ec8:	bls.n	18f0c <btrfs_check_leaf@@Base+0x7a8>
   18eca:	ldr	r3, [sp, #28]
   18ecc:	mov	r1, r6
   18ece:	vmov	r0, s16
   18ed2:	ldr.w	sl, [r3, #17]
   18ed6:	bl	170b4 <rb_free_nodes@@Base+0xc2>
   18eda:	ldr.w	r3, [r8, #464]	; 0x1d0
   18ede:	ldr.w	r1, [r3, #384]	; 0x180
   18ee2:	sub.w	r1, r1, sl
   18ee6:	sub.w	r3, sl, r0
   18eea:	add.w	r2, r0, #101	; 0x65
   18eee:	add	r1, r0
   18ef0:	mov	r0, r6
   18ef2:	bl	16a80 <memmove_extent_buffer@@Base>
   18ef6:	ldr.w	r3, [r6, #192]	; 0xc0
   18efa:	movs	r2, #25
   18efc:	movs	r1, #101	; 0x65
   18efe:	subs	r3, r3, r5
   18f00:	mov	r0, r6
   18f02:	muls	r3, r2
   18f04:	ldr	r2, [sp, #16]
   18f06:	adds	r2, #101	; 0x65
   18f08:	bl	16a80 <memmove_extent_buffer@@Base>
   18f0c:	ldr	r3, [sp, #12]
   18f0e:	add.w	ip, r6, #197	; 0xc5
   18f12:	movs	r2, #0
   18f14:	movs	r0, #25
   18f16:	sub.w	r9, r3, r5
   18f1a:	str.w	r9, [r6, #192]	; 0xc0
   18f1e:	ldr.w	r3, [r8, #464]	; 0x1d0
   18f22:	ldr.w	r3, [r3, #384]	; 0x180
   18f26:	subs	r3, #101	; 0x65
   18f28:	cmp	r9, r2
   18f2a:	bne.n	18fdc <btrfs_check_leaf@@Base+0x878>
   18f2c:	ldr	r0, [sp, #44]	; 0x2c
   18f2e:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   18f32:	cmp.w	r9, #0
   18f36:	beq.n	18f3e <btrfs_check_leaf@@Base+0x7da>
   18f38:	mov	r0, r6
   18f3a:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   18f3e:	add.w	r9, sp, #48	; 0x30
   18f42:	movs	r2, #0
   18f44:	mov	r0, r6
   18f46:	mov	r1, r9
   18f48:	bl	1703a <rb_free_nodes@@Base+0x48>
   18f4c:	movs	r3, #1
   18f4e:	mov	r2, r9
   18f50:	mov	r1, r4
   18f52:	mov	r0, r8
   18f54:	bl	18554 <btrfs_fixup_low_keys@@Base>
   18f58:	ldr	r3, [r4, #32]
   18f5a:	cmp	r5, r3
   18f5c:	ble.n	18ff0 <btrfs_check_leaf@@Base+0x88c>
   18f5e:	add	r3, fp
   18f60:	ldr	r0, [r4, #0]
   18f62:	str	r3, [r4, #32]
   18f64:	bl	16314 <free_extent_buffer@@Base>
   18f68:	ldr	r3, [sp, #44]	; 0x2c
   18f6a:	str	r3, [r4, #0]
   18f6c:	ldr	r3, [r4, #36]	; 0x24
   18f6e:	subs	r3, #1
   18f70:	str	r3, [r4, #36]	; 0x24
   18f72:	ldr	r3, [r4, #32]
   18f74:	mov.w	r2, #2096	; 0x830
   18f78:	ldr	r1, [pc, #188]	; (19038 <btrfs_check_leaf@@Base+0x8d4>)
   18f7a:	ldr	r0, [pc, #192]	; (1903c <btrfs_check_leaf@@Base+0x8d8>)
   18f7c:	add	r1, pc
   18f7e:	lsrs	r3, r3, #31
   18f80:	adds	r1, #249	; 0xf9
   18f82:	add	r0, pc
   18f84:	bl	17108 <rb_free_nodes@@Base+0x116>
   18f88:	ldr	r2, [pc, #180]	; (19040 <btrfs_check_leaf@@Base+0x8dc>)
   18f8a:	ldr	r3, [pc, #136]	; (19014 <btrfs_check_leaf@@Base+0x8b0>)
   18f8c:	add	r2, pc
   18f8e:	ldr	r3, [r2, r3]
   18f90:	ldr	r2, [r3, #0]
   18f92:	ldr	r3, [sp, #68]	; 0x44
   18f94:	eors	r2, r3
   18f96:	beq.n	18ffe <btrfs_check_leaf@@Base+0x89a>
   18f98:	blx	8510 <__stack_chk_fail@plt>
   18f9c:	ldr.w	ip, [sp, #12]
   18fa0:	b.n	18da4 <btrfs_check_leaf@@Base+0x640>
   18fa2:	ldr	r3, [r4, #32]
   18fa4:	adds	r1, #25
   18fa6:	cmp	r3, r5
   18fa8:	ldr.w	r3, [r1, #-4]
   18fac:	it	eq
   18fae:	addeq	r2, sl
   18fb0:	adds	r3, #25
   18fb2:	add	r2, r3
   18fb4:	cmp	r2, r0
   18fb6:	bhi.w	18db6 <btrfs_check_leaf@@Base+0x652>
   18fba:	adds	r5, #1
   18fbc:	b.n	18db0 <btrfs_check_leaf@@Base+0x64c>
   18fbe:	ldr	r3, [sp, #24]
   18fc0:	mla	ip, sl, r2, r3
   18fc4:	ldr.w	r3, [r8, #464]	; 0x1d0
   18fc8:	adds	r2, #1
   18fca:	ldr.w	r3, [r3, #384]	; 0x180
   18fce:	ldr.w	lr, [ip, #17]
   18fd2:	subs	r3, r1, r3
   18fd4:	add	r3, lr
   18fd6:	str.w	r3, [ip, #17]
   18fda:	b.n	18e88 <btrfs_check_leaf@@Base+0x724>
   18fdc:	mla	r1, r0, r2, ip
   18fe0:	adds	r2, #1
   18fe2:	ldr.w	lr, [r1, #21]
   18fe6:	sub.w	r3, r3, lr
   18fea:	str.w	r3, [r1, #17]
   18fee:	b.n	18f28 <btrfs_check_leaf@@Base+0x7c4>
   18ff0:	ldr	r0, [sp, #44]	; 0x2c
   18ff2:	bl	16314 <free_extent_buffer@@Base>
   18ff6:	ldr	r3, [r4, #32]
   18ff8:	subs	r5, r3, r5
   18ffa:	str	r5, [r4, #32]
   18ffc:	b.n	18f72 <btrfs_check_leaf@@Base+0x80e>
   18ffe:	mov	r0, r7
   19000:	add	sp, #76	; 0x4c
   19002:	vpop	{d8}
   19006:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1900a:	nop
   1900c:	add	sp, #368	; 0x170
   1900e:	movs	r4, r0
   19010:	add	sp, #344	; 0x158
   19012:	movs	r4, r0
   19014:	lsls	r0, r4, #8
   19016:	movs	r0, r0
   19018:	adds	r1, #70	; 0x46
   1901a:	movs	r2, r0
   1901c:	lsrs	r3, r7
   1901e:	movs	r2, r0
   19020:	adds	r0, #186	; 0xba
   19022:	movs	r2, r0
   19024:	cmp	r5, #164	; 0xa4
   19026:	movs	r2, r0
   19028:	lsls	r0, r6, #8
   1902a:	movs	r0, r0
   1902c:	cmp	r5, #118	; 0x76
   1902e:	movs	r2, r0
   19030:	adds	r0, #98	; 0x62
   19032:	movs	r2, r0
   19034:	ands	r3, r2
   19036:	movs	r2, r0
   19038:	cmp	r7, #156	; 0x9c
   1903a:	movs	r2, r0
   1903c:	cmp	r4, #175	; 0xaf
   1903e:	movs	r2, r0
   19040:	add	r5, sp, #992	; 0x3e0
   19042:	movs	r4, r0
   19044:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19048:	mov	r5, r3
   1904a:	vpush	{d8}
   1904e:	mov	r6, r1
   19050:	ldr.w	r3, [pc, #1264]	; 19544 <btrfs_check_leaf@@Base+0xde0>
   19054:	sub	sp, #116	; 0x74
   19056:	str	r2, [sp, #48]	; 0x30
   19058:	ldr.w	r2, [pc, #1260]	; 19548 <btrfs_check_leaf@@Base+0xde4>
   1905c:	str	r0, [sp, #44]	; 0x2c
   1905e:	add	r2, pc
   19060:	ldr	r3, [r2, r3]
   19062:	ldr	r3, [r3, #0]
   19064:	str	r3, [sp, #108]	; 0x6c
   19066:	mov.w	r3, #0
   1906a:	ldr	r3, [sp, #164]	; 0xa4
   1906c:	cbz	r3, 19092 <btrfs_check_leaf@@Base+0x92e>
   1906e:	ldr	r2, [r5, #0]
   19070:	movs	r1, #25
   19072:	ldr	r3, [r5, #32]
   19074:	mla	r3, r1, r3, r2
   19078:	ldr.w	r2, [r3, #218]	; 0xda
   1907c:	ldr	r3, [sp, #160]	; 0xa0
   1907e:	add	r3, r1
   19080:	add	r2, r3
   19082:	ldr.w	r3, [r6, #464]	; 0x1d0
   19086:	ldr.w	r3, [r3, #384]	; 0x180
   1908a:	subs	r3, #101	; 0x65
   1908c:	cmp	r2, r3
   1908e:	bhi.w	19530 <btrfs_check_leaf@@Base+0xdcc>
   19092:	ldr	r3, [sp, #160]	; 0xa0
   19094:	cmp	r3, #0
   19096:	bne.n	1916c <btrfs_check_leaf@@Base+0xa08>
   19098:	ldr	r3, [r5, #4]
   1909a:	cbnz	r3, 190b0 <btrfs_check_leaf@@Base+0x94c>
   1909c:	ldr	r0, [sp, #44]	; 0x2c
   1909e:	movs	r3, #1
   190a0:	mov	r2, r5
   190a2:	mov	r1, r6
   190a4:	bl	175b6 <add_root_to_dirty_list@@Base+0x2e>
   190a8:	mov	r9, r0
   190aa:	cmp	r0, #0
   190ac:	bne.w	191b4 <btrfs_check_leaf@@Base+0xa50>
   190b0:	movs	r3, #0
   190b2:	str	r3, [sp, #52]	; 0x34
   190b4:	mov	r9, r3
   190b6:	add	r3, sp, #68	; 0x44
   190b8:	vmov	s16, r3
   190bc:	ldr.w	r3, [pc, #1164]	; 1954c <btrfs_check_leaf@@Base+0xde8>
   190c0:	add	r3, pc
   190c2:	addw	r3, r3, #275	; 0x113
   190c6:	vmov	s17, r3
   190ca:	ldr.w	r8, [r5]
   190ce:	ldr.w	fp, [r5, #32]
   190d2:	ldr.w	r3, [r8, #192]	; 0xc0
   190d6:	str	r3, [sp, #32]
   190d8:	adds	r3, #1
   190da:	cmp.w	fp, r3, lsr #1
   190de:	mov.w	sl, r3, lsr #1
   190e2:	blt.w	19222 <btrfs_check_leaf@@Base+0xabe>
   190e6:	ldr	r3, [sp, #32]
   190e8:	cmp	r3, #1
   190ea:	bne.n	191ca <btrfs_check_leaf@@Base+0xa66>
   190ec:	ldr	r3, [sp, #32]
   190ee:	cmp	fp, r3
   190f0:	bcc.n	191ee <btrfs_check_leaf@@Base+0xa8a>
   190f2:	ldr	r3, [sp, #48]	; 0x30
   190f4:	movs	r7, #0
   190f6:	ldr.w	r2, [r3, #9]
   190fa:	ldr.w	r3, [r3, #13]
   190fe:	str.w	r2, [sp, #77]	; 0x4d
   19102:	str.w	r3, [sp, #81]	; 0x51
   19106:	ldr	r3, [sp, #48]	; 0x30
   19108:	ldrb	r3, [r3, #8]
   1910a:	strb.w	r3, [sp, #76]	; 0x4c
   1910e:	ldr	r3, [sp, #48]	; 0x30
   19110:	ldr	r2, [r3, #0]
   19112:	ldr	r3, [r3, #4]
   19114:	strd	r2, r3, [sp, #68]	; 0x44
   19118:	movs	r2, #0
   1911a:	movs	r3, #0
   1911c:	strd	r2, r3, [sp, #24]
   19120:	ldrd	r2, r3, [r8, #40]	; 0x28
   19124:	vstr	s16, [sp, #8]
   19128:	ldr.w	r1, [r6, #464]	; 0x1d0
   1912c:	strd	r2, r3, [sp, #16]
   19130:	movs	r3, #0
   19132:	ldr.w	r2, [r6, #447]	; 0x1bf
   19136:	str	r3, [sp, #12]
   19138:	ldr.w	r3, [r6, #451]	; 0x1c3
   1913c:	ldr	r0, [sp, #44]	; 0x2c
   1913e:	strd	r2, r3, [sp]
   19142:	ldr.w	r2, [r1, #384]	; 0x180
   19146:	mov	r1, r6
   19148:	bl	2215c <btrfs_alloc_free_block@@Base>
   1914c:	cmn.w	r0, #4096	; 0x1000
   19150:	mov	r4, r0
   19152:	bls.w	1928a <btrfs_check_leaf@@Base+0xb26>
   19156:	ldr	r1, [pc, #1016]	; (19550 <btrfs_check_leaf@@Base+0xdec>)
   19158:	movs	r3, #1
   1915a:	ldr	r0, [pc, #1016]	; (19554 <btrfs_check_leaf@@Base+0xdf0>)
   1915c:	mov.w	r2, #2272	; 0x8e0
   19160:	add	r1, pc
   19162:	add.w	r1, r1, #264	; 0x108
   19166:	add	r0, pc
   19168:	bl	170ce <rb_free_nodes@@Base+0xdc>
   1916c:	ldr	r3, [sp, #48]	; 0x30
   1916e:	ldrb	r3, [r3, #8]
   19170:	cmp	r3, #84	; 0x54
   19172:	beq.n	19098 <btrfs_check_leaf@@Base+0x934>
   19174:	ldr	r3, [sp, #160]	; 0xa0
   19176:	movs	r4, #0
   19178:	ldr	r0, [sp, #44]	; 0x2c
   1917a:	mov	r2, r5
   1917c:	mov	r1, r6
   1917e:	str	r4, [sp, #0]
   19180:	bl	18a9c <btrfs_check_leaf@@Base+0x338>
   19184:	subs.w	r9, r0, #0
   19188:	blt.n	191b4 <btrfs_check_leaf@@Base+0xa50>
   1918a:	bne.n	191a0 <btrfs_check_leaf@@Base+0xa3c>
   1918c:	ldr	r0, [r5, #0]
   1918e:	bl	186dc <btrfs_leaf_free_space@@Base>
   19192:	ldr	r3, [sp, #160]	; 0xa0
   19194:	cmp	r0, r3
   19196:	blt.w	19098 <btrfs_check_leaf@@Base+0x934>
   1919a:	mov.w	r9, #0
   1919e:	b.n	191b4 <btrfs_check_leaf@@Base+0xa50>
   191a0:	ldr	r3, [sp, #160]	; 0xa0
   191a2:	mov	r2, r5
   191a4:	ldr	r0, [sp, #44]	; 0x2c
   191a6:	mov	r1, r6
   191a8:	str	r4, [sp, #0]
   191aa:	bl	18d14 <btrfs_check_leaf@@Base+0x5b0>
   191ae:	subs.w	r9, r0, #0
   191b2:	bge.n	1918c <btrfs_check_leaf@@Base+0xa28>
   191b4:	ldr	r2, [pc, #928]	; (19558 <btrfs_check_leaf@@Base+0xdf4>)
   191b6:	ldr	r3, [pc, #908]	; (19544 <btrfs_check_leaf@@Base+0xde0>)
   191b8:	add	r2, pc
   191ba:	ldr	r3, [r2, r3]
   191bc:	ldr	r2, [r3, #0]
   191be:	ldr	r3, [sp, #108]	; 0x6c
   191c0:	eors	r2, r3
   191c2:	beq.w	19536 <btrfs_check_leaf@@Base+0xdd2>
   191c6:	blx	8510 <__stack_chk_fail@plt>
   191ca:	ldr	r3, [sp, #32]
   191cc:	mov	r1, sl
   191ce:	mov	r0, r8
   191d0:	sub.w	r2, r3, sl
   191d4:	bl	17454 <rb_free_nodes@@Base+0x462>
   191d8:	ldr	r3, [sp, #160]	; 0xa0
   191da:	add	r0, r3
   191dc:	ldr.w	r3, [r6, #464]	; 0x1d0
   191e0:	ldr.w	r3, [r3, #384]	; 0x180
   191e4:	subs	r3, #101	; 0x65
   191e6:	cmp	r0, r3
   191e8:	bhi.n	190ec <btrfs_check_leaf@@Base+0x988>
   191ea:	movs	r7, #1
   191ec:	b.n	19214 <btrfs_check_leaf@@Base+0xab0>
   191ee:	ldr	r3, [sp, #32]
   191f0:	mov	r1, fp
   191f2:	mov	r0, r8
   191f4:	mov	sl, fp
   191f6:	sub.w	r2, r3, fp
   191fa:	bl	17454 <rb_free_nodes@@Base+0x462>
   191fe:	ldr	r3, [sp, #160]	; 0xa0
   19200:	add	r0, r3
   19202:	ldr.w	r3, [r6, #464]	; 0x1d0
   19206:	ldr.w	r3, [r3, #384]	; 0x180
   1920a:	subs	r3, #101	; 0x65
   1920c:	cmp	r0, r3
   1920e:	ite	hi
   19210:	movhi	r7, #2
   19212:	movls	r7, #1
   19214:	vmov	r1, s16
   19218:	mov	r2, sl
   1921a:	mov	r0, r8
   1921c:	bl	1703a <rb_free_nodes@@Base+0x48>
   19220:	b.n	19118 <btrfs_check_leaf@@Base+0x9b4>
   19222:	mov	r2, sl
   19224:	movs	r1, #0
   19226:	mov	r0, r8
   19228:	bl	17454 <rb_free_nodes@@Base+0x462>
   1922c:	ldr	r3, [sp, #160]	; 0xa0
   1922e:	add	r0, r3
   19230:	ldr.w	r3, [r6, #464]	; 0x1d0
   19234:	ldr.w	r3, [r3, #384]	; 0x180
   19238:	subs	r3, #101	; 0x65
   1923a:	cmp	r0, r3
   1923c:	bls.n	191ea <btrfs_check_leaf@@Base+0xa86>
   1923e:	ldr	r3, [sp, #164]	; 0xa4
   19240:	cbnz	r3, 1927a <btrfs_check_leaf@@Base+0xb16>
   19242:	ldr	r3, [sp, #160]	; 0xa0
   19244:	cbz	r3, 1927a <btrfs_check_leaf@@Base+0xb16>
   19246:	cmp.w	fp, #0
   1924a:	beq.w	190f2 <btrfs_check_leaf@@Base+0x98e>
   1924e:	ldr	r3, [sp, #32]
   19250:	cmp	fp, r3
   19252:	beq.n	19286 <btrfs_check_leaf@@Base+0xb22>
   19254:	sub.w	r2, r3, fp
   19258:	mov	r1, fp
   1925a:	mov	r0, r8
   1925c:	mov	sl, fp
   1925e:	bl	17454 <rb_free_nodes@@Base+0x462>
   19262:	ldr	r3, [sp, #160]	; 0xa0
   19264:	add	r0, r3
   19266:	ldr.w	r3, [r6, #464]	; 0x1d0
   1926a:	ldr.w	r3, [r3, #384]	; 0x180
   1926e:	subs	r3, #101	; 0x65
   19270:	cmp	r0, r3
   19272:	ite	ls
   19274:	movls	r7, #1
   19276:	movhi	r7, #2
   19278:	b.n	19214 <btrfs_check_leaf@@Base+0xab0>
   1927a:	cmp.w	fp, #0
   1927e:	bne.n	1924e <btrfs_check_leaf@@Base+0xaea>
   19280:	movs	r7, #1
   19282:	mov	sl, r7
   19284:	b.n	19214 <btrfs_check_leaf@@Base+0xab0>
   19286:	mov	sl, fp
   19288:	b.n	191ea <btrfs_check_leaf@@Base+0xa86>
   1928a:	movs	r2, #0
   1928c:	movs	r3, #101	; 0x65
   1928e:	mov	r1, r2
   19290:	bl	16a96 <memset_extent_buffer@@Base>
   19294:	ldr	r3, [r4, #40]	; 0x28
   19296:	mov	r0, r4
   19298:	str.w	r3, [r4, #144]	; 0x90
   1929c:	ldr	r3, [r4, #44]	; 0x2c
   1929e:	str.w	r3, [r4, #148]	; 0x94
   192a2:	ldr	r3, [sp, #44]	; 0x2c
   192a4:	ldrd	r2, r3, [r3, #8]
   192a8:	str.w	r2, [r4, #176]	; 0xb0
   192ac:	str.w	r3, [r4, #180]	; 0xb4
   192b0:	ldr.w	r2, [r4, #152]	; 0x98
   192b4:	ldr.w	r3, [r4, #156]	; 0x9c
   192b8:	bic.w	r3, r3, #4278190080	; 0xff000000
   192bc:	str.w	r2, [r4, #152]	; 0x98
   192c0:	orr.w	r3, r3, #16777216	; 0x1000000
   192c4:	str.w	r3, [r4, #156]	; 0x9c
   192c8:	ldr.w	r2, [r6, #447]	; 0x1bf
   192cc:	ldr.w	r3, [r6, #451]	; 0x1c3
   192d0:	str.w	r2, [r4, #184]	; 0xb8
   192d4:	movs	r2, #32
   192d6:	str.w	r3, [r4, #188]	; 0xbc
   192da:	mov.w	r3, #0
   192de:	strb.w	r3, [r4, #196]	; 0xc4
   192e2:	ldr.w	r3, [r6, #464]	; 0x1d0
   192e6:	ldr.w	r1, [r3, #352]	; 0x160
   192ea:	movs	r3, #16
   192ec:	add	r1, r3
   192ee:	bl	16a24 <write_extent_buffer@@Base>
   192f2:	ldr.w	r1, [r6, #464]	; 0x1d0
   192f6:	movs	r3, #16
   192f8:	movs	r2, #64	; 0x40
   192fa:	mov	r0, r4
   192fc:	bl	16a24 <write_extent_buffer@@Base>
   19300:	ldr.w	r1, [r6, #464]	; 0x1d0
   19304:	ldr.w	r2, [r6, #200]	; 0xc8
   19308:	ldr.w	r3, [r6, #204]	; 0xcc
   1930c:	ldr.w	r1, [r1, #384]	; 0x180
   19310:	adds	r2, r2, r1
   19312:	str.w	r2, [r6, #200]	; 0xc8
   19316:	adc.w	r3, r3, #0
   1931a:	str.w	r3, [r6, #204]	; 0xcc
   1931e:	cmp	r7, #0
   19320:	bne.n	193c6 <btrfs_check_leaf@@Base+0xc62>
   19322:	ldrd	r2, r3, [r4, #40]	; 0x28
   19326:	cmp	fp, sl
   19328:	ldr	r0, [sp, #44]	; 0x2c
   1932a:	add.w	r1, r6, #464	; 0x1d0
   1932e:	strb.w	r7, [r4, #192]	; 0xc0
   19332:	add.w	r0, r0, #8
   19336:	strd	r2, r3, [sp, #32]
   1933a:	strb.w	r7, [r4, #193]	; 0xc1
   1933e:	strb.w	r7, [r4, #194]	; 0xc2
   19342:	strb.w	r7, [r4, #195]	; 0xc3
   19346:	blt.n	19382 <btrfs_check_leaf@@Base+0xc1e>
   19348:	movs	r3, #1
   1934a:	str	r3, [sp, #12]
   1934c:	ldr	r3, [r5, #36]	; 0x24
   1934e:	adds	r3, #1
   19350:	str	r3, [sp, #8]
   19352:	ldrd	r2, r3, [sp, #32]
   19356:	strd	r2, r3, [sp]
   1935a:	mov	r2, r5
   1935c:	vmov	r3, s16
   19360:	bl	17158 <rb_free_nodes@@Base+0x166>
   19364:	cmp	r0, #0
   19366:	it	ne
   19368:	movne	r9, r0
   1936a:	ldr	r0, [r5, #0]
   1936c:	bl	16314 <free_extent_buffer@@Base>
   19370:	ldr	r3, [r5, #36]	; 0x24
   19372:	str	r4, [r5, #0]
   19374:	adds	r3, #1
   19376:	str	r7, [r5, #32]
   19378:	str	r3, [r5, #36]	; 0x24
   1937a:	mov	r0, r4
   1937c:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   19380:	b.n	191b4 <btrfs_check_leaf@@Base+0xa50>
   19382:	ldr	r3, [r5, #36]	; 0x24
   19384:	mov.w	r8, #1
   19388:	str.w	r8, [sp, #12]
   1938c:	str	r3, [sp, #8]
   1938e:	ldrd	r2, r3, [sp, #32]
   19392:	strd	r2, r3, [sp]
   19396:	mov	r2, r5
   19398:	vmov	r3, s16
   1939c:	bl	17158 <rb_free_nodes@@Base+0x166>
   193a0:	cmp	r0, #0
   193a2:	it	ne
   193a4:	movne	r9, r0
   193a6:	ldr	r0, [r5, #0]
   193a8:	bl	16314 <free_extent_buffer@@Base>
   193ac:	ldr	r3, [r5, #36]	; 0x24
   193ae:	str	r4, [r5, #0]
   193b0:	str	r7, [r5, #32]
   193b2:	cmp	r3, #0
   193b4:	bne.n	1937a <btrfs_check_leaf@@Base+0xc16>
   193b6:	vmov	r2, s16
   193ba:	mov	r3, r8
   193bc:	mov	r1, r5
   193be:	mov	r0, r6
   193c0:	bl	18554 <btrfs_fixup_low_keys@@Base>
   193c4:	b.n	1937a <btrfs_check_leaf@@Base+0xc16>
   193c6:	ldr	r3, [sp, #32]
   193c8:	mov	r1, sl
   193ca:	mov	r0, r8
   193cc:	sub.w	r9, r3, sl
   193d0:	str.w	r9, [r4, #192]	; 0xc0
   193d4:	bl	17010 <rb_free_nodes@@Base+0x1e>
   193d8:	mov	r1, r8
   193da:	str	r0, [sp, #32]
   193dc:	ldr.w	r0, [r6, #464]	; 0x1d0
   193e0:	add.w	r0, r0, #384	; 0x180
   193e4:	bl	170b4 <rb_free_nodes@@Base+0xc2>
   193e8:	ldr	r3, [sp, #32]
   193ea:	movs	r2, #25
   193ec:	mov	r1, r8
   193ee:	subs	r3, r3, r0
   193f0:	str	r3, [sp, #60]	; 0x3c
   193f2:	mul.w	r3, r2, sl
   193f6:	str	r0, [sp, #56]	; 0x38
   193f8:	mul.w	r2, r2, r9
   193fc:	mov	r0, r4
   193fe:	adds	r3, #101	; 0x65
   19400:	str	r2, [sp, #0]
   19402:	movs	r2, #101	; 0x65
   19404:	bl	16a36 <copy_extent_buffer@@Base>
   19408:	ldr.w	r0, [r6, #464]	; 0x1d0
   1940c:	ldr	r3, [sp, #56]	; 0x38
   1940e:	mov	r1, r8
   19410:	add.w	r0, r0, #384	; 0x180
   19414:	ldr	r2, [r0, #0]
   19416:	add	r2, r3
   19418:	ldr	r3, [sp, #32]
   1941a:	subs	r2, r2, r3
   1941c:	str	r2, [sp, #32]
   1941e:	bl	170b4 <rb_free_nodes@@Base+0xc2>
   19422:	ldr	r3, [sp, #60]	; 0x3c
   19424:	ldr	r2, [sp, #32]
   19426:	mov	r1, r8
   19428:	str	r3, [sp, #0]
   1942a:	add.w	r3, r0, #101	; 0x65
   1942e:	mov	r0, r4
   19430:	bl	16a36 <copy_extent_buffer@@Base>
   19434:	mov	r1, sl
   19436:	mov	r0, r8
   19438:	bl	17010 <rb_free_nodes@@Base+0x1e>
   1943c:	ldr.w	r3, [r6, #464]	; 0x1d0
   19440:	add.w	r2, r4, #197	; 0xc5
   19444:	ldr.w	r3, [r3, #384]	; 0x180
   19448:	subs	r3, #101	; 0x65
   1944a:	subs	r0, r3, r0
   1944c:	movs	r3, #0
   1944e:	cmp	r9, r3
   19450:	bgt.n	19518 <btrfs_check_leaf@@Base+0xdb4>
   19452:	add	r3, sp, #88	; 0x58
   19454:	movs	r2, #0
   19456:	mov	r0, r4
   19458:	str.w	sl, [r8, #192]	; 0xc0
   1945c:	mov	r1, r3
   1945e:	str	r3, [sp, #32]
   19460:	bl	1703a <rb_free_nodes@@Base+0x48>
   19464:	movs	r2, #1
   19466:	str	r2, [sp, #12]
   19468:	ldr	r2, [r5, #36]	; 0x24
   1946a:	ldr	r3, [sp, #32]
   1946c:	adds	r2, #1
   1946e:	str	r2, [sp, #8]
   19470:	ldrd	r0, r1, [r4, #40]	; 0x28
   19474:	mov	r2, r5
   19476:	strd	r0, r1, [sp]
   1947a:	add.w	r1, r6, #464	; 0x1d0
   1947e:	ldr	r0, [sp, #44]	; 0x2c
   19480:	adds	r0, #8
   19482:	bl	17158 <rb_free_nodes@@Base+0x166>
   19486:	mov	r9, r0
   19488:	mov	r0, r4
   1948a:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   1948e:	mov	r0, r8
   19490:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   19494:	ldr	r3, [r5, #32]
   19496:	ldr	r0, [pc, #196]	; (1955c <btrfs_check_leaf@@Base+0xdf8>)
   19498:	movw	r2, #2154	; 0x86a
   1949c:	subs.w	r3, r3, fp
   194a0:	vmov	r1, s17
   194a4:	add	r0, pc
   194a6:	it	ne
   194a8:	movne	r3, #1
   194aa:	bl	17108 <rb_free_nodes@@Base+0x116>
   194ae:	cmp	fp, sl
   194b0:	blt.n	19528 <btrfs_check_leaf@@Base+0xdc4>
   194b2:	ldr	r0, [r5, #0]
   194b4:	bl	16314 <free_extent_buffer@@Base>
   194b8:	ldr	r3, [r5, #32]
   194ba:	str	r4, [r5, #0]
   194bc:	sub.w	r3, r3, sl
   194c0:	str	r3, [r5, #32]
   194c2:	ldr	r3, [r5, #36]	; 0x24
   194c4:	adds	r3, #1
   194c6:	str	r3, [r5, #36]	; 0x24
   194c8:	ldr	r3, [r5, #32]
   194ca:	movw	r2, #2165	; 0x875
   194ce:	ldr	r4, [pc, #144]	; (19560 <btrfs_check_leaf@@Base+0xdfc>)
   194d0:	ldr	r0, [pc, #144]	; (19564 <btrfs_check_leaf@@Base+0xe00>)
   194d2:	add	r4, pc
   194d4:	lsrs	r3, r3, #31
   194d6:	addw	r1, r4, #275	; 0x113
   194da:	add	r0, pc
   194dc:	bl	17108 <rb_free_nodes@@Base+0x116>
   194e0:	ldr	r0, [pc, #132]	; (19568 <btrfs_check_leaf@@Base+0xe04>)
   194e2:	add.w	r1, r4, #264	; 0x108
   194e6:	mov	r3, r9
   194e8:	add	r0, pc
   194ea:	movw	r2, #2325	; 0x915
   194ee:	str	r1, [sp, #32]
   194f0:	bl	17108 <rb_free_nodes@@Base+0x116>
   194f4:	cmp	r7, #2
   194f6:	bne.w	191b4 <btrfs_check_leaf@@Base+0xa50>
   194fa:	ldr	r3, [sp, #52]	; 0x34
   194fc:	movw	r2, #2328	; 0x918
   19500:	ldr	r0, [pc, #104]	; (1956c <btrfs_check_leaf@@Base+0xe08>)
   19502:	subs	r3, #0
   19504:	ldr	r1, [sp, #32]
   19506:	add	r0, pc
   19508:	it	ne
   1950a:	movne	r3, #1
   1950c:	bl	17108 <rb_free_nodes@@Base+0x116>
   19510:	ldr	r3, [sp, #52]	; 0x34
   19512:	adds	r3, #1
   19514:	str	r3, [sp, #52]	; 0x34
   19516:	b.n	190ca <btrfs_check_leaf@@Base+0x966>
   19518:	ldr.w	r1, [r2, #17]
   1951c:	adds	r3, #1
   1951e:	adds	r2, #25
   19520:	add	r1, r0
   19522:	str.w	r1, [r2, #-8]
   19526:	b.n	1944e <btrfs_check_leaf@@Base+0xcea>
   19528:	mov	r0, r4
   1952a:	bl	16314 <free_extent_buffer@@Base>
   1952e:	b.n	194c8 <btrfs_check_leaf@@Base+0xd64>
   19530:	mvn.w	r9, #74	; 0x4a
   19534:	b.n	191b4 <btrfs_check_leaf@@Base+0xa50>
   19536:	mov	r0, r9
   19538:	add	sp, #116	; 0x74
   1953a:	vpop	{d8}
   1953e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19542:	nop
   19544:	lsls	r0, r4, #8
   19546:	movs	r0, r0
   19548:	add	r5, sp, #152	; 0x98
   1954a:	movs	r4, r0
   1954c:	cmp	r6, #88	; 0x58
   1954e:	movs	r2, r0
   19550:	cmp	r5, #184	; 0xb8
   19552:	movs	r2, r0
   19554:	subs	r5, #107	; 0x6b
   19556:	movs	r2, r0
   19558:	add	r3, sp, #816	; 0x330
   1955a:	movs	r4, r0
   1955c:	movs	r7, #160	; 0xa0
   1955e:	movs	r2, r0
   19560:	cmp	r2, #70	; 0x46
   19562:	movs	r2, r0
   19564:	movs	r7, #87	; 0x57
   19566:	movs	r2, r0
   19568:	vrev64.<illegal width 64>	d16, d1
   1956c:	movs	r7, #85	; 0x55
   1956e:	movs	r2, r0

00019570 <btrfs_truncate_item@@Base>:
   19570:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19574:	sub	sp, #60	; 0x3c
   19576:	mov	r6, r2
   19578:	ldr	r2, [pc, #392]	; (19704 <btrfs_truncate_item@@Base+0x194>)
   1957a:	str	r3, [sp, #24]
   1957c:	mov.w	sl, #25
   19580:	ldr	r3, [pc, #388]	; (19708 <btrfs_truncate_item@@Base+0x198>)
   19582:	add	r2, pc
   19584:	ldr	r4, [r1, #0]
   19586:	mov	r9, r0
   19588:	ldr	r7, [r1, #32]
   1958a:	mov	r8, r1
   1958c:	ldr	r3, [r2, r3]
   1958e:	ldr	r3, [r3, #0]
   19590:	str	r3, [sp, #52]	; 0x34
   19592:	mov.w	r3, #0
   19596:	add.w	r3, r4, #96	; 0x60
   1959a:	str	r3, [sp, #16]
   1959c:	mla	r3, sl, r7, r3
   195a0:	add.w	r2, r3, #101	; 0x65
   195a4:	str	r2, [sp, #12]
   195a6:	ldr.w	r5, [r3, #122]	; 0x7a
   195aa:	cmp	r6, r5
   195ac:	beq.w	196e8 <btrfs_truncate_item@@Base+0x178>
   195b0:	ldr.w	r0, [r0, #464]	; 0x1d0
   195b4:	mov	r1, r4
   195b6:	ldr.w	fp, [r4, #192]	; 0xc0
   195ba:	add.w	r0, r0, #384	; 0x180
   195be:	bl	170b4 <rb_free_nodes@@Base+0xc2>
   195c2:	ldr	r3, [sp, #12]
   195c4:	ldr	r1, [pc, #324]	; (1970c <btrfs_truncate_item@@Base+0x19c>)
   195c6:	mov.w	r2, #2480	; 0x9b0
   195ca:	ldr.w	r3, [r3, #17]
   195ce:	add	r1, pc
   195d0:	add.w	r1, r1, #290	; 0x122
   195d4:	str	r1, [sp, #28]
   195d6:	str	r3, [sp, #20]
   195d8:	subs	r3, r5, r6
   195da:	str	r3, [sp, #8]
   195dc:	lsrs	r3, r7, #31
   195de:	str	r0, [sp, #4]
   195e0:	ldr	r0, [pc, #300]	; (19710 <btrfs_truncate_item@@Base+0x1a0>)
   195e2:	add	r0, pc
   195e4:	bl	17108 <rb_free_nodes@@Base+0x116>
   195e8:	cmp	r7, fp
   195ea:	ldr	r0, [pc, #296]	; (19714 <btrfs_truncate_item@@Base+0x1a4>)
   195ec:	movw	r2, #2481	; 0x9b1
   195f0:	ite	cc
   195f2:	movcc	r3, #0
   195f4:	movcs	r3, #1
   195f6:	add	r0, pc
   195f8:	ldr	r1, [sp, #28]
   195fa:	bl	17108 <rb_free_nodes@@Base+0x116>
   195fe:	add.w	r0, r4, #197	; 0xc5
   19602:	mov	r3, r7
   19604:	cmp	r3, fp
   19606:	bcc.n	1965c <btrfs_truncate_item@@Base+0xec>
   19608:	ldr	r3, [sp, #4]
   1960a:	add.w	sl, r3, #101	; 0x65
   1960e:	ldr	r3, [sp, #8]
   19610:	add.w	fp, r3, sl
   19614:	ldr	r3, [sp, #24]
   19616:	cbz	r3, 19670 <btrfs_truncate_item@@Base+0x100>
   19618:	ldr	r3, [sp, #20]
   1961a:	mov	r1, fp
   1961c:	ldr	r2, [sp, #4]
   1961e:	mov	r0, r4
   19620:	add	r3, r6
   19622:	subs	r3, r3, r2
   19624:	mov	r2, sl
   19626:	bl	16a80 <memmove_extent_buffer@@Base>
   1962a:	ldr	r3, [sp, #12]
   1962c:	mov	r0, r4
   1962e:	str.w	r6, [r3, #21]
   19632:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   19636:	mov	r0, r4
   19638:	bl	186dc <btrfs_leaf_free_space@@Base>
   1963c:	cmp	r0, #0
   1963e:	bge.n	196e8 <btrfs_truncate_item@@Base+0x178>
   19640:	mov	r0, r4
   19642:	bl	24718 <btrfs_print_leaf@@Base>
   19646:	ldr	r1, [pc, #208]	; (19718 <btrfs_truncate_item@@Base+0x1a8>)
   19648:	ldr	r0, [pc, #208]	; (1971c <btrfs_truncate_item@@Base+0x1ac>)
   1964a:	movs	r3, #1
   1964c:	add	r1, pc
   1964e:	movw	r2, #2542	; 0x9ee
   19652:	add.w	r1, r1, #290	; 0x122
   19656:	add	r0, pc
   19658:	bl	170ce <rb_free_nodes@@Base+0xdc>
   1965c:	mla	r1, sl, r3, r0
   19660:	ldr	r2, [sp, #8]
   19662:	adds	r3, #1
   19664:	ldr.w	ip, [r1, #17]
   19668:	add	r2, ip
   1966a:	str.w	r2, [r1, #17]
   1966e:	b.n	19604 <btrfs_truncate_item@@Base+0x94>
   19670:	add	r1, sp, #32
   19672:	mov	r2, r7
   19674:	mov	r0, r4
   19676:	bl	1703a <rb_free_nodes@@Base+0x48>
   1967a:	ldrb.w	r3, [sp, #40]	; 0x28
   1967e:	cmp	r3, #108	; 0x6c
   19680:	bne.n	1969e <btrfs_truncate_item@@Base+0x12e>
   19682:	ldr	r3, [sp, #12]
   19684:	ldr.w	r1, [r3, #17]
   19688:	ldr	r3, [sp, #16]
   1968a:	adds	r1, #101	; 0x65
   1968c:	subs	r2, r1, r5
   1968e:	add	r2, r6
   19690:	add	r3, r2
   19692:	ldrb	r3, [r3, #20]
   19694:	cbnz	r3, 1969e <btrfs_truncate_item@@Base+0x12e>
   19696:	movs	r3, #21
   19698:	mov	r0, r4
   1969a:	bl	16a80 <memmove_extent_buffer@@Base>
   1969e:	ldr	r2, [sp, #4]
   196a0:	mov	r1, fp
   196a2:	ldr	r3, [sp, #20]
   196a4:	mov	r0, r4
   196a6:	add	r5, sp, #32
   196a8:	subs	r3, r3, r2
   196aa:	mov	r2, sl
   196ac:	bl	16a80 <memmove_extent_buffer@@Base>
   196b0:	ldr.w	r2, [sp, #41]	; 0x29
   196b4:	ldr.w	r3, [sp, #45]	; 0x2d
   196b8:	mov	r0, r4
   196ba:	mov	r1, r2
   196bc:	mov	r2, r3
   196be:	ldr	r3, [sp, #8]
   196c0:	adds	r1, r1, r3
   196c2:	str.w	r1, [sp, #41]	; 0x29
   196c6:	adc.w	r2, r2, #0
   196ca:	mov	r1, r5
   196cc:	str.w	r2, [sp, #45]	; 0x2d
   196d0:	mov	r2, r7
   196d2:	bl	1702e <rb_free_nodes@@Base+0x3c>
   196d6:	cmp	r7, #0
   196d8:	bne.n	1962a <btrfs_truncate_item@@Base+0xba>
   196da:	movs	r3, #1
   196dc:	mov	r2, r5
   196de:	mov	r1, r8
   196e0:	mov	r0, r9
   196e2:	bl	18554 <btrfs_fixup_low_keys@@Base>
   196e6:	b.n	1962a <btrfs_truncate_item@@Base+0xba>
   196e8:	ldr	r2, [pc, #52]	; (19720 <btrfs_truncate_item@@Base+0x1b0>)
   196ea:	ldr	r3, [pc, #28]	; (19708 <btrfs_truncate_item@@Base+0x198>)
   196ec:	add	r2, pc
   196ee:	ldr	r3, [r2, r3]
   196f0:	ldr	r2, [r3, #0]
   196f2:	ldr	r3, [sp, #52]	; 0x34
   196f4:	eors	r2, r3
   196f6:	beq.n	196fc <btrfs_truncate_item@@Base+0x18c>
   196f8:	blx	8510 <__stack_chk_fail@plt>
   196fc:	movs	r0, #0
   196fe:	add	sp, #60	; 0x3c
   19700:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19704:	add	r0, sp, #8
   19706:	movs	r4, r0
   19708:	lsls	r0, r4, #8
   1970a:	movs	r0, r0
   1970c:	cmp	r1, #74	; 0x4a
   1970e:	movs	r2, r0
   19710:	movs	r6, #138	; 0x8a
   19712:	movs	r2, r0
   19714:	movs	r6, #127	; 0x7f
   19716:	movs	r2, r0
   19718:	cmp	r0, #204	; 0xcc
   1971a:	movs	r2, r0
   1971c:	subs	r0, #123	; 0x7b
   1971e:	movs	r2, r0
   19720:	add	r6, pc, #608	; (adr r6, 19984 <btrfs_search_slot@@Base+0x54>)
   19722:	movs	r4, r0

00019724 <btrfs_extend_item@@Base>:
   19724:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19728:	mov	r5, r1
   1972a:	ldr	r4, [r1, #0]
   1972c:	sub	sp, #20
   1972e:	ldr.w	r0, [r0, #464]	; 0x1d0
   19732:	mov	r6, r2
   19734:	ldr.w	fp, [pc, #256]	; 19838 <btrfs_extend_item@@Base+0x114>
   19738:	mov	r1, r4
   1973a:	add.w	r0, r0, #384	; 0x180
   1973e:	bl	170b4 <rb_free_nodes@@Base+0xc2>
   19742:	ldr.w	sl, [r4, #192]	; 0xc0
   19746:	add	fp, pc
   19748:	mov	r7, r0
   1974a:	mov	r0, r4
   1974c:	bl	186dc <btrfs_leaf_free_space@@Base>
   19750:	cmp	r0, r6
   19752:	bcs.n	19770 <btrfs_extend_item@@Base+0x4c>
   19754:	mov	r0, r4
   19756:	bl	24718 <btrfs_print_leaf@@Base>
   1975a:	ldr	r1, [pc, #224]	; (1983c <btrfs_extend_item@@Base+0x118>)
   1975c:	ldr	r0, [pc, #224]	; (19840 <btrfs_extend_item@@Base+0x11c>)
   1975e:	movs	r3, #1
   19760:	add	r1, pc
   19762:	movw	r2, #2567	; 0xa07
   19766:	add.w	r1, r1, #310	; 0x136
   1976a:	add	r0, pc
   1976c:	bl	170ce <rb_free_nodes@@Base+0xdc>
   19770:	ldr	r5, [r5, #32]
   19772:	mov	r0, r4
   19774:	ldr.w	r8, [pc, #204]	; 19844 <btrfs_extend_item@@Base+0x120>
   19778:	mov	r1, r5
   1977a:	add	r8, pc
   1977c:	bl	17010 <rb_free_nodes@@Base+0x1e>
   19780:	add.w	r8, r8, #310	; 0x136
   19784:	lsrs	r3, r5, #31
   19786:	movw	r2, #2572	; 0xa0c
   1978a:	mov	r1, r8
   1978c:	mov	r9, r0
   1978e:	ldr	r0, [pc, #184]	; (19848 <btrfs_extend_item@@Base+0x124>)
   19790:	add	r0, pc
   19792:	bl	17108 <rb_free_nodes@@Base+0x116>
   19796:	cmp	r5, sl
   19798:	str	r5, [sp, #12]
   1979a:	bcs.n	197f2 <btrfs_extend_item@@Base+0xce>
   1979c:	add.w	r1, r4, #197	; 0xc5
   197a0:	movs	r0, #25
   197a2:	cmp	r5, sl
   197a4:	bne.n	1981e <btrfs_extend_item@@Base+0xfa>
   197a6:	add.w	r2, r7, #101	; 0x65
   197aa:	sub.w	r3, r9, r7
   197ae:	subs	r1, r2, r6
   197b0:	mov	r0, r4
   197b2:	bl	16a80 <memmove_extent_buffer@@Base>
   197b6:	ldr	r2, [sp, #12]
   197b8:	movs	r3, #25
   197ba:	mov	r0, r4
   197bc:	mla	r3, r3, r2, r4
   197c0:	ldr.w	r2, [r3, #218]	; 0xda
   197c4:	add	r6, r2
   197c6:	str.w	r6, [r3, #218]	; 0xda
   197ca:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   197ce:	mov	r0, r4
   197d0:	bl	186dc <btrfs_leaf_free_space@@Base>
   197d4:	cmp	r0, #0
   197d6:	bge.n	19830 <btrfs_extend_item@@Base+0x10c>
   197d8:	mov	r0, r4
   197da:	bl	24718 <btrfs_print_leaf@@Base>
   197de:	ldr	r1, [pc, #108]	; (1984c <btrfs_extend_item@@Base+0x128>)
   197e0:	ldr	r0, [pc, #108]	; (19850 <btrfs_extend_item@@Base+0x12c>)
   197e2:	movs	r3, #1
   197e4:	add	r1, pc
   197e6:	movw	r2, #2604	; 0xa2c
   197ea:	add.w	r1, r1, #310	; 0x136
   197ee:	add	r0, pc
   197f0:	b.n	1976c <btrfs_extend_item@@Base+0x48>
   197f2:	mov	r0, r4
   197f4:	bl	24718 <btrfs_print_leaf@@Base>
   197f8:	ldr	r3, [pc, #88]	; (19854 <btrfs_extend_item@@Base+0x130>)
   197fa:	ldr	r2, [pc, #92]	; (19858 <btrfs_extend_item@@Base+0x134>)
   197fc:	movs	r1, #1
   197fe:	ldr.w	r0, [fp, r3]
   19802:	add	r2, pc
   19804:	mov	r3, r5
   19806:	str.w	sl, [sp]
   1980a:	ldr	r0, [r0, #0]
   1980c:	blx	8860 <__fprintf_chk@plt+0x4>
   19810:	ldr	r0, [pc, #72]	; (1985c <btrfs_extend_item@@Base+0x138>)
   19812:	movs	r3, #1
   19814:	mov.w	r2, #2576	; 0xa10
   19818:	add	r0, pc
   1981a:	mov	r1, r8
   1981c:	b.n	1976c <btrfs_extend_item@@Base+0x48>
   1981e:	mla	r2, r0, r5, r1
   19822:	adds	r5, #1
   19824:	ldr.w	r3, [r2, #17]
   19828:	subs	r3, r3, r6
   1982a:	str.w	r3, [r2, #17]
   1982e:	b.n	197a2 <btrfs_extend_item@@Base+0x7e>
   19830:	movs	r0, #0
   19832:	add	sp, #20
   19834:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19838:	add	r6, pc, #248	; (adr r6, 19934 <btrfs_search_slot@@Base+0x4>)
   1983a:	movs	r4, r0
   1983c:	movs	r7, #184	; 0xb8
   1983e:	movs	r2, r0
   19840:	adds	r7, #103	; 0x67
   19842:	movs	r2, r0
   19844:	movs	r7, #158	; 0x9e
   19846:	movs	r2, r0
   19848:	movs	r4, #220	; 0xdc
   1984a:	movs	r2, r0
   1984c:	movs	r7, #52	; 0x34
   1984e:	movs	r2, r0
   19850:	adds	r6, #227	; 0xe3
   19852:	movs	r2, r0
   19854:	lsls	r0, r6, #8
   19856:	movs	r0, r0
   19858:	movs	r4, #131	; 0x83
   1985a:	movs	r2, r0
   1985c:	adds	r6, #185	; 0xb9
   1985e:	movs	r2, r0

00019860 <btrfs_del_ptr@@Base>:
   19860:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   19864:	mov	r8, r2
   19866:	ldr	r2, [pc, #180]	; (1991c <btrfs_del_ptr@@Base+0xbc>)
   19868:	mov	r5, r3
   1986a:	ldr	r3, [pc, #180]	; (19920 <btrfs_del_ptr@@Base+0xc0>)
   1986c:	sub	sp, #28
   1986e:	add	r2, pc
   19870:	ldr.w	r4, [r1, r8, lsl #2]
   19874:	mov	r6, r0
   19876:	mov	r7, r1
   19878:	ldr	r3, [r2, r3]
   1987a:	ldr	r3, [r3, #0]
   1987c:	str	r3, [sp, #20]
   1987e:	mov.w	r3, #0
   19882:	ldr.w	r3, [r4, #192]	; 0xc0
   19886:	add.w	r9, r3, #4294967295	; 0xffffffff
   1988a:	cmp	r9, r5
   1988c:	bls.n	198a6 <btrfs_del_ptr@@Base+0x46>
   1988e:	subs	r3, r3, r5
   19890:	add.w	r1, r5, r5, lsl #5
   19894:	add.w	r2, r1, #134	; 0x86
   19898:	mov	r0, r4
   1989a:	add.w	r3, r3, r3, lsl #5
   1989e:	adds	r1, #101	; 0x65
   198a0:	subs	r3, #33	; 0x21
   198a2:	bl	16a80 <memmove_extent_buffer@@Base>
   198a6:	str.w	r9, [r4, #192]	; 0xc0
   198aa:	cmp.w	r9, #0
   198ae:	bne.n	198f2 <btrfs_del_ptr@@Base+0x92>
   198b0:	ldr	r3, [r6, #0]
   198b2:	cmp	r3, r4
   198b4:	bne.n	198f2 <btrfs_del_ptr@@Base+0x92>
   198b6:	ldrb.w	r3, [r4, #196]	; 0xc4
   198ba:	movw	r2, #2775	; 0xad7
   198be:	ldr	r1, [pc, #100]	; (19924 <btrfs_del_ptr@@Base+0xc4>)
   198c0:	subs	r3, #1
   198c2:	ldr	r0, [pc, #100]	; (19928 <btrfs_del_ptr@@Base+0xc8>)
   198c4:	add	r1, pc
   198c6:	add.w	r1, r1, #328	; 0x148
   198ca:	add	r0, pc
   198cc:	it	ne
   198ce:	movne	r3, #1
   198d0:	bl	17108 <rb_free_nodes@@Base+0x116>
   198d4:	strb.w	r9, [r4, #196]	; 0xc4
   198d8:	mov	r0, r4
   198da:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   198de:	ldr	r2, [pc, #76]	; (1992c <btrfs_del_ptr@@Base+0xcc>)
   198e0:	ldr	r3, [pc, #60]	; (19920 <btrfs_del_ptr@@Base+0xc0>)
   198e2:	add	r2, pc
   198e4:	ldr	r3, [r2, r3]
   198e6:	ldr	r2, [r3, #0]
   198e8:	ldr	r3, [sp, #20]
   198ea:	eors	r2, r3
   198ec:	beq.n	19912 <btrfs_del_ptr@@Base+0xb2>
   198ee:	blx	8510 <__stack_chk_fail@plt>
   198f2:	cmp	r5, #0
   198f4:	bne.n	198d8 <btrfs_del_ptr@@Base+0x78>
   198f6:	mov	r2, r5
   198f8:	mov	r5, sp
   198fa:	mov	r1, r5
   198fc:	mov	r0, r4
   198fe:	bl	17046 <rb_free_nodes@@Base+0x54>
   19902:	add.w	r3, r8, #1
   19906:	mov	r2, r5
   19908:	mov	r1, r7
   1990a:	mov	r0, r6
   1990c:	bl	18554 <btrfs_fixup_low_keys@@Base>
   19910:	b.n	198d8 <btrfs_del_ptr@@Base+0x78>
   19912:	movs	r0, #0
   19914:	add	sp, #28
   19916:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1991a:	nop
   1991c:	add	r5, pc, #88	; (adr r5, 19978 <btrfs_search_slot@@Base+0x48>)
   1991e:	movs	r4, r0
   19920:	lsls	r0, r4, #8
   19922:	movs	r0, r0
   19924:	movs	r6, #84	; 0x54
   19926:	movs	r2, r0
   19928:	movs	r3, #218	; 0xda
   1992a:	movs	r2, r0
   1992c:	add	r4, pc, #648	; (adr r4, 19bb8 <btrfs_search_slot@@Base+0x288>)
   1992e:	movs	r4, r0

00019930 <btrfs_search_slot@@Base>:
   19930:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19934:	mov	fp, r3
   19936:	vpush	{d8-d9}
   1993a:	mov	sl, r0
   1993c:	ldr.w	r3, [pc, #1208]	; 19df8 <btrfs_search_slot@@Base+0x4c8>
   19940:	mov	r4, r1
   19942:	sub	sp, #140	; 0x8c
   19944:	str	r2, [sp, #56]	; 0x38
   19946:	ldr.w	r2, [pc, #1204]	; 19dfc <btrfs_search_slot@@Base+0x4cc>
   1994a:	add	r2, pc
   1994c:	ldr	r3, [r2, r3]
   1994e:	ldr	r3, [r3, #0]
   19950:	str	r3, [sp, #132]	; 0x84
   19952:	mov.w	r3, #0
   19956:	ldrsb.w	r3, [fp, #64]	; 0x40
   1995a:	str	r3, [sp, #88]	; 0x58
   1995c:	ldr.w	r3, [r1, #464]	; 0x1d0
   19960:	vmov	s16, r3
   19964:	ldrb.w	r3, [fp, #65]	; 0x41
   19968:	str	r3, [sp, #60]	; 0x3c
   1996a:	cmp	r3, #0
   1996c:	beq.n	19a1a <btrfs_search_slot@@Base+0xea>
   1996e:	ldr	r3, [sp, #192]	; 0xc0
   19970:	cmp	r3, #0
   19972:	ite	le
   19974:	movle	r3, #0
   19976:	movgt	r3, #1
   19978:	ldr.w	r1, [pc, #1156]	; 19e00 <btrfs_search_slot@@Base+0x4d0>
   1997c:	movw	r2, #1173	; 0x495
   19980:	ldr.w	r0, [pc, #1152]	; 19e04 <btrfs_search_slot@@Base+0x4d4>
   19984:	add	r1, pc
   19986:	add.w	r1, r1, #342	; 0x156
   1998a:	add	r0, pc
   1998c:	str	r1, [sp, #40]	; 0x28
   1998e:	bl	17150 <rb_free_nodes@@Base+0x15e>
   19992:	ldr.w	r3, [fp]
   19996:	movw	r2, #1174	; 0x496
   1999a:	ldr.w	r0, [pc, #1132]	; 19e08 <btrfs_search_slot@@Base+0x4d8>
   1999e:	subs	r3, #0
   199a0:	ldr	r1, [sp, #40]	; 0x28
   199a2:	add	r0, pc
   199a4:	it	ne
   199a6:	movne	r3, #1
   199a8:	bl	17150 <rb_free_nodes@@Base+0x15e>
   199ac:	ldr	r3, [sp, #192]	; 0xc0
   199ae:	ldr	r2, [sp, #196]	; 0xc4
   199b0:	subs	r3, #0
   199b2:	it	ne
   199b4:	movne	r3, #1
   199b6:	cmp	r2, #0
   199b8:	it	ne
   199ba:	movne	r3, #0
   199bc:	vmov	s19, r3
   199c0:	ldr	r3, [r4, #0]
   199c2:	ldr	r2, [r3, #80]	; 0x50
   199c4:	str	r3, [sp, #96]	; 0x60
   199c6:	adds	r2, #1
   199c8:	str	r2, [r3, #80]	; 0x50
   199ca:	ldr.w	r3, [pc, #1088]	; 19e0c <btrfs_search_slot@@Base+0x4dc>
   199ce:	add	r3, pc
   199d0:	str	r3, [sp, #92]	; 0x5c
   199d2:	ldr	r2, [sp, #96]	; 0x60
   199d4:	cmp	r2, #0
   199d6:	beq.w	19bb8 <btrfs_search_slot@@Base+0x288>
   199da:	ldr	r3, [sp, #196]	; 0xc4
   199dc:	ldrb.w	r5, [r2, #196]	; 0xc4
   199e0:	cbz	r3, 19a1e <btrfs_search_slot@@Base+0xee>
   199e2:	add.w	r3, fp, r5, lsl #2
   199e6:	add	r1, sp, #96	; 0x60
   199e8:	str	r1, [sp, #4]
   199ea:	mov	r0, sl
   199ec:	ldr	r1, [r3, #36]	; 0x24
   199ee:	str	r1, [sp, #0]
   199f0:	mov	r1, r4
   199f2:	ldr	r3, [r3, #4]
   199f4:	bl	17f78 <btrfs_cow_block@@Base>
   199f8:	mov	r9, r0
   199fa:	cbz	r0, 19a1e <btrfs_search_slot@@Base+0xee>
   199fc:	ldr	r0, [sp, #96]	; 0x60
   199fe:	bl	16314 <free_extent_buffer@@Base>
   19a02:	ldr.w	r2, [pc, #1036]	; 19e10 <btrfs_search_slot@@Base+0x4e0>
   19a06:	ldr	r3, [pc, #1008]	; (19df8 <btrfs_search_slot@@Base+0x4c8>)
   19a08:	add	r2, pc
   19a0a:	ldr	r3, [r2, r3]
   19a0c:	ldr	r2, [r3, #0]
   19a0e:	ldr	r3, [sp, #132]	; 0x84
   19a10:	eors	r2, r3
   19a12:	beq.w	1a49e <btrfs_search_slot@@Base+0xb6e>
   19a16:	blx	8510 <__stack_chk_fail@plt>
   19a1a:	ldr	r3, [sp, #60]	; 0x3c
   19a1c:	b.n	19978 <btrfs_search_slot@@Base+0x48>
   19a1e:	ldr	r3, [sp, #92]	; 0x5c
   19a20:	movw	r2, #1194	; 0x4aa
   19a24:	ldr	r0, [pc, #1004]	; (19e14 <btrfs_search_slot@@Base+0x4e4>)
   19a26:	add.w	r1, r3, #342	; 0x156
   19a2a:	vmov	r3, s19
   19a2e:	add	r0, pc
   19a30:	str	r1, [sp, #40]	; 0x28
   19a32:	bl	17108 <rb_free_nodes@@Base+0x116>
   19a36:	ldr	r3, [sp, #96]	; 0x60
   19a38:	ldrb.w	r3, [r3, #196]	; 0xc4
   19a3c:	cmp	r3, r5
   19a3e:	beq.n	19a50 <btrfs_search_slot@@Base+0x120>
   19a40:	ldr	r0, [pc, #980]	; (19e18 <btrfs_search_slot@@Base+0x4e8>)
   19a42:	movs	r3, #1
   19a44:	ldr	r1, [sp, #40]	; 0x28
   19a46:	movw	r2, #1196	; 0x4ac
   19a4a:	add	r0, pc
   19a4c:	bl	17112 <rb_free_nodes@@Base+0x120>
   19a50:	ldr	r3, [sp, #96]	; 0x60
   19a52:	ldrb.w	r2, [r3, #196]	; 0xc4
   19a56:	str.w	r3, [fp, r2, lsl #2]
   19a5a:	add.w	r8, fp, r2, lsl #2
   19a5e:	ldrb.w	r3, [fp, #67]	; 0x43
   19a62:	strd	r2, r2, [sp, #40]	; 0x28
   19a66:	cmp	r3, #0
   19a68:	beq.n	19ad4 <btrfs_search_slot@@Base+0x1a4>
   19a6a:	ldr	r2, [sp, #44]	; 0x2c
   19a6c:	add	r3, sp, #100	; 0x64
   19a6e:	ldr	r1, [sp, #56]	; 0x38
   19a70:	ldr	r0, [sp, #96]	; 0x60
   19a72:	bl	1827c <btrfs_bin_search@@Base>
   19a76:	ldr	r2, [sp, #44]	; 0x2c
   19a78:	ldr	r3, [sp, #100]	; 0x64
   19a7a:	mov	r9, r0
   19a7c:	cmp	r2, #0
   19a7e:	bne.n	19aea <btrfs_search_slot@@Base+0x1ba>
   19a80:	str.w	r3, [fp, #32]
   19a84:	ldr	r3, [sp, #192]	; 0xc0
   19a86:	cmp	r3, #0
   19a88:	ble.n	19a02 <btrfs_search_slot@@Base+0xd2>
   19a8a:	ldr	r0, [sp, #96]	; 0x60
   19a8c:	bl	186dc <btrfs_leaf_free_space@@Base>
   19a90:	ldr	r3, [sp, #192]	; 0xc0
   19a92:	cmp	r0, r3
   19a94:	bge.n	19a02 <btrfs_search_slot@@Base+0xd2>
   19a96:	clz	r3, r9
   19a9a:	mov	r1, r4
   19a9c:	ldr	r2, [sp, #56]	; 0x38
   19a9e:	mov	r0, sl
   19aa0:	lsrs	r3, r3, #5
   19aa2:	str	r3, [sp, #4]
   19aa4:	ldr	r3, [sp, #192]	; 0xc0
   19aa6:	str	r3, [sp, #0]
   19aa8:	mov	r3, fp
   19aaa:	bl	19044 <btrfs_check_leaf@@Base+0x8e0>
   19aae:	ldr	r1, [pc, #876]	; (19e1c <btrfs_search_slot@@Base+0x4ec>)
   19ab0:	movw	r2, #1246	; 0x4de
   19ab4:	add	r1, pc
   19ab6:	add.w	r1, r1, #342	; 0x156
   19aba:	cmp	r0, #0
   19abc:	mov	r4, r0
   19abe:	ldr	r0, [pc, #864]	; (19e20 <btrfs_search_slot@@Base+0x4f0>)
   19ac0:	ite	le
   19ac2:	movle	r3, #0
   19ac4:	movgt	r3, #1
   19ac6:	add	r0, pc
   19ac8:	cmp	r4, #0
   19aca:	it	ne
   19acc:	movne	r9, r4
   19ace:	bl	17108 <rb_free_nodes@@Base+0x116>
   19ad2:	b.n	19a02 <btrfs_search_slot@@Base+0xd2>
   19ad4:	vmov	r0, s16
   19ad8:	mov	r1, fp
   19ada:	ldr	r2, [sp, #44]	; 0x2c
   19adc:	bl	18a24 <btrfs_check_leaf@@Base+0x2c0>
   19ae0:	cmp	r0, #0
   19ae2:	beq.n	19a6a <btrfs_search_slot@@Base+0x13a>
   19ae4:	mov.w	r9, #4294967295	; 0xffffffff
   19ae8:	b.n	19a02 <btrfs_search_slot@@Base+0xd2>
   19aea:	cbz	r0, 19af6 <btrfs_search_slot@@Base+0x1c6>
   19aec:	cmp	r3, #0
   19aee:	itt	gt
   19af0:	addgt.w	r3, r3, #4294967295	; 0xffffffff
   19af4:	strgt	r3, [sp, #100]	; 0x64
   19af6:	ldr	r3, [sp, #100]	; 0x64
   19af8:	str	r3, [sp, #48]	; 0x30
   19afa:	str.w	r3, [r8, #32]
   19afe:	ldrb.w	r3, [fp, #66]	; 0x42
   19b02:	cbnz	r3, 19b0c <btrfs_search_slot@@Base+0x1dc>
   19b04:	ldr	r3, [sp, #192]	; 0xc0
   19b06:	cmp	r3, #0
   19b08:	ble.w	19f5a <btrfs_search_slot@@Base+0x62a>
   19b0c:	vmov	r3, s16
   19b10:	ldr.w	r2, [r3, #384]	; 0x180
   19b14:	ldr	r3, [pc, #732]	; (19df4 <btrfs_search_slot@@Base+0x4c4>)
   19b16:	subs	r2, #101	; 0x65
   19b18:	umull	r2, r3, r2, r3
   19b1c:	ldr	r2, [sp, #96]	; 0x60
   19b1e:	ldr.w	r2, [r2, #192]	; 0xc0
   19b22:	lsrs	r3, r3, #3
   19b24:	subs	r3, #3
   19b26:	cmp	r3, r2
   19b28:	bhi.w	19f5a <btrfs_search_slot@@Base+0x62a>
   19b2c:	ldr	r3, [sp, #40]	; 0x28
   19b2e:	ldr	r7, [pc, #756]	; (19e24 <btrfs_search_slot@@Base+0x4f4>)
   19b30:	ldr.w	r6, [fp, r3, lsl #2]
   19b34:	add	r7, pc
   19b36:	ldrd	r2, r3, [sl, #8]
   19b3a:	ldr.w	r1, [r6, #180]	; 0xb4
   19b3e:	ldr.w	r0, [r6, #176]	; 0xb0
   19b42:	cmp	r1, r3
   19b44:	add.w	r1, r7, #360	; 0x168
   19b48:	it	eq
   19b4a:	cmpeq	r0, r2
   19b4c:	ldr	r0, [pc, #728]	; (19e28 <btrfs_search_slot@@Base+0x4f8>)
   19b4e:	movw	r2, #1668	; 0x684
   19b52:	ite	ne
   19b54:	movne	r3, #1
   19b56:	moveq	r3, #0
   19b58:	add	r0, pc
   19b5a:	bl	17150 <rb_free_nodes@@Base+0x15e>
   19b5e:	ldr	r3, [r4, #0]
   19b60:	cmp	r6, r3
   19b62:	bne.n	19bbe <btrfs_search_slot@@Base+0x28e>
   19b64:	ldr	r3, [sp, #44]	; 0x2c
   19b66:	mov	r2, fp
   19b68:	mov	r1, r4
   19b6a:	mov	r0, sl
   19b6c:	adds	r3, #1
   19b6e:	bl	175b6 <add_root_to_dirty_list@@Base+0x2e>
   19b72:	mov	r9, r0
   19b74:	cmp	r0, #0
   19b76:	beq.w	19cec <btrfs_search_slot@@Base+0x3bc>
   19b7a:	ldr	r1, [pc, #688]	; (19e2c <btrfs_search_slot@@Base+0x4fc>)
   19b7c:	cmp.w	r9, #0
   19b80:	ldr	r0, [pc, #684]	; (19e30 <btrfs_search_slot@@Base+0x500>)
   19b82:	movw	r2, #1211	; 0x4bb
   19b86:	add	r1, pc
   19b88:	ite	le
   19b8a:	movle	r3, #0
   19b8c:	movgt	r3, #1
   19b8e:	add.w	r1, r1, #342	; 0x156
   19b92:	add	r0, pc
   19b94:	bl	17108 <rb_free_nodes@@Base+0x116>
   19b98:	cmp.w	r9, #0
   19b9c:	bne.w	19a02 <btrfs_search_slot@@Base+0xd2>
   19ba0:	ldr	r3, [sp, #40]	; 0x28
   19ba2:	ldr.w	r3, [fp, r3, lsl #2]
   19ba6:	str	r3, [sp, #96]	; 0x60
   19ba8:	ldr.w	r3, [r8, #32]
   19bac:	str	r3, [sp, #100]	; 0x64
   19bae:	ldr	r3, [sp, #60]	; 0x3c
   19bb0:	ldr	r2, [sp, #44]	; 0x2c
   19bb2:	cmp	r3, r2
   19bb4:	bne.w	1a462 <btrfs_search_slot@@Base+0xb32>
   19bb8:	mov.w	r9, #1
   19bbc:	b.n	19a02 <btrfs_search_slot@@Base+0xd2>
   19bbe:	movs	r3, #0
   19bc0:	strd	r3, r3, [sp, #104]	; 0x68
   19bc4:	ldr.w	r3, [r8, #32]
   19bc8:	ldr.w	r9, [r4, #464]	; 0x1d0
   19bcc:	str	r3, [sp, #48]	; 0x30
   19bce:	ldr	r3, [sp, #40]	; 0x28
   19bd0:	ldr.w	r5, [fp, r3, lsl #2]
   19bd4:	ldrd	r2, r3, [sl, #8]
   19bd8:	ldr.w	r1, [r5, #180]	; 0xb4
   19bdc:	ldr.w	r0, [r5, #176]	; 0xb0
   19be0:	cmp	r1, r3
   19be2:	addw	r1, r7, #371	; 0x173
   19be6:	it	eq
   19be8:	cmpeq	r0, r2
   19bea:	ldr	r0, [pc, #584]	; (19e34 <btrfs_search_slot@@Base+0x504>)
   19bec:	mov.w	r2, #932	; 0x3a4
   19bf0:	ite	ne
   19bf2:	movne	r3, #1
   19bf4:	moveq	r3, #0
   19bf6:	add	r0, pc
   19bf8:	bl	17150 <rb_free_nodes@@Base+0x15e>
   19bfc:	ldr	r3, [sp, #44]	; 0x2c
   19bfe:	cmp	r3, #6
   19c00:	ble.n	19c0a <btrfs_search_slot@@Base+0x2da>
   19c02:	ldr	r3, [sp, #40]	; 0x28
   19c04:	ldr.w	r6, [fp, r3, lsl #2]
   19c08:	b.n	19cec <btrfs_search_slot@@Base+0x3bc>
   19c0a:	ldr.w	r6, [r8, #4]
   19c0e:	cmp	r6, #0
   19c10:	beq.n	19c02 <btrfs_search_slot@@Base+0x2d2>
   19c12:	ldr.w	r3, [r8, #36]	; 0x24
   19c16:	mov	r1, r6
   19c18:	mov	r0, r9
   19c1a:	subs	r7, r3, #1
   19c1c:	str	r3, [sp, #52]	; 0x34
   19c1e:	mov	r2, r7
   19c20:	bl	18302 <read_node_slot@@Base>
   19c24:	mov	r2, r0
   19c26:	str	r0, [sp, #108]	; 0x6c
   19c28:	bl	170a0 <rb_free_nodes@@Base+0xae>
   19c2c:	cmp	r0, #0
   19c2e:	beq.w	19d48 <btrfs_search_slot@@Base+0x418>
   19c32:	ldr.w	r3, [r2, #192]	; 0xc0
   19c36:	ldr.w	r0, [r9, #384]	; 0x180
   19c3a:	str	r3, [sp, #64]	; 0x40
   19c3c:	subs	r0, #101	; 0x65
   19c3e:	ldr	r3, [pc, #436]	; (19df4 <btrfs_search_slot@@Base+0x4c4>)
   19c40:	umull	r0, r1, r0, r3
   19c44:	lsrs	r3, r1, #3
   19c46:	ldr	r1, [sp, #64]	; 0x40
   19c48:	subs	r3, #1
   19c4a:	cmp	r1, r3
   19c4c:	bcs.n	19d42 <btrfs_search_slot@@Base+0x412>
   19c4e:	add	r3, sp, #108	; 0x6c
   19c50:	mov	r1, r4
   19c52:	strd	r7, r3, [sp]
   19c56:	mov	r0, sl
   19c58:	mov	r3, r6
   19c5a:	bl	17f78 <btrfs_cow_block@@Base>
   19c5e:	cmp	r0, #0
   19c60:	bne.n	19d42 <btrfs_search_slot@@Base+0x412>
   19c62:	str	r0, [sp, #0]
   19c64:	mov	r3, r5
   19c66:	ldr	r2, [sp, #108]	; 0x6c
   19c68:	add.w	r0, sl, #8
   19c6c:	ldr.w	r1, [r4, #464]	; 0x1d0
   19c70:	bl	1733c <rb_free_nodes@@Base+0x34a>
   19c74:	mov	r2, r0
   19c76:	cmp	r0, #0
   19c78:	bne.n	19d42 <btrfs_search_slot@@Base+0x412>
   19c7a:	ldr	r3, [sp, #48]	; 0x30
   19c7c:	mov	r0, r5
   19c7e:	ldr	r1, [sp, #64]	; 0x40
   19c80:	add	r3, r1
   19c82:	add	r1, sp, #112	; 0x70
   19c84:	str	r1, [sp, #48]	; 0x30
   19c86:	mov	r7, r3
   19c88:	bl	17046 <rb_free_nodes@@Base+0x54>
   19c8c:	ldrd	r1, r2, [sp, #48]	; 0x30
   19c90:	mov	r0, r6
   19c92:	bl	17022 <rb_free_nodes@@Base+0x30>
   19c96:	mov	r0, r6
   19c98:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   19c9c:	ldr	r0, [sp, #108]	; 0x6c
   19c9e:	ldr.w	r3, [r0, #192]	; 0xc0
   19ca2:	cmp	r7, r3
   19ca4:	bcs.n	19cbe <btrfs_search_slot@@Base+0x38e>
   19ca6:	ldr	r3, [sp, #40]	; 0x28
   19ca8:	str.w	r0, [fp, r3, lsl #2]
   19cac:	ldr.w	r3, [r8, #36]	; 0x24
   19cb0:	subs	r3, #1
   19cb2:	str.w	r3, [r8, #36]	; 0x24
   19cb6:	mov	r0, r5
   19cb8:	str.w	r7, [r8, #32]
   19cbc:	b.n	19cc4 <btrfs_search_slot@@Base+0x394>
   19cbe:	subs	r7, r7, r3
   19cc0:	str.w	r7, [r8, #32]
   19cc4:	bl	16314 <free_extent_buffer@@Base>
   19cc8:	ldr	r3, [sp, #40]	; 0x28
   19cca:	ldr.w	r6, [fp, r3, lsl #2]
   19cce:	ldr.w	r3, [r4, #464]	; 0x1d0
   19cd2:	ldr.w	r1, [r6, #192]	; 0xc0
   19cd6:	ldr.w	r2, [r3, #384]	; 0x180
   19cda:	ldr	r3, [pc, #280]	; (19df4 <btrfs_search_slot@@Base+0x4c4>)
   19cdc:	subs	r2, #101	; 0x65
   19cde:	umull	r2, r3, r2, r3
   19ce2:	lsrs	r3, r3, #3
   19ce4:	subs	r3, #3
   19ce6:	cmp	r1, r3
   19ce8:	bcc.w	19f54 <btrfs_search_slot@@Base+0x624>
   19cec:	ldr.w	r3, [r6, #192]	; 0xc0
   19cf0:	add.w	r9, sp, #112	; 0x70
   19cf4:	mov	r0, r6
   19cf6:	adds	r7, r3, #1
   19cf8:	mov	r1, r9
   19cfa:	str	r3, [sp, #48]	; 0x30
   19cfc:	lsrs	r7, r7, #1
   19cfe:	mov	r2, r7
   19d00:	bl	17046 <rb_free_nodes@@Base+0x54>
   19d04:	ldr.w	r1, [r4, #464]	; 0x1d0
   19d08:	movs	r2, #0
   19d0a:	movs	r3, #0
   19d0c:	strd	r2, r3, [sp, #24]
   19d10:	mov	r0, sl
   19d12:	ldrd	r2, r3, [r6, #40]	; 0x28
   19d16:	strd	r2, r3, [sp, #16]
   19d1a:	ldr	r3, [sp, #44]	; 0x2c
   19d1c:	strd	r9, r3, [sp, #8]
   19d20:	ldr.w	r2, [r4, #447]	; 0x1bf
   19d24:	ldr.w	r3, [r4, #451]	; 0x1c3
   19d28:	strd	r2, r3, [sp]
   19d2c:	ldr.w	r2, [r1, #384]	; 0x180
   19d30:	mov	r1, r4
   19d32:	bl	2215c <btrfs_alloc_free_block@@Base>
   19d36:	cmn.w	r0, #4096	; 0x1000
   19d3a:	mov	r5, r0
   19d3c:	bls.n	19e38 <btrfs_search_slot@@Base+0x508>
   19d3e:	mov	r9, r0
   19d40:	b.n	19b7a <btrfs_search_slot@@Base+0x24a>
   19d42:	ldr	r0, [sp, #108]	; 0x6c
   19d44:	bl	16314 <free_extent_buffer@@Base>
   19d48:	ldr	r7, [sp, #52]	; 0x34
   19d4a:	mov	r1, r6
   19d4c:	mov	r0, r9
   19d4e:	adds	r7, #1
   19d50:	mov	r2, r7
   19d52:	bl	18302 <read_node_slot@@Base>
   19d56:	mov	r2, r0
   19d58:	str	r0, [sp, #104]	; 0x68
   19d5a:	bl	170a0 <rb_free_nodes@@Base+0xae>
   19d5e:	cmp	r0, #0
   19d60:	beq.w	19c02 <btrfs_search_slot@@Base+0x2d2>
   19d64:	ldr.w	r3, [r4, #464]	; 0x1d0
   19d68:	ldr.w	ip, [r2, #192]	; 0xc0
   19d6c:	ldr.w	r0, [r3, #384]	; 0x180
   19d70:	ldr	r3, [pc, #128]	; (19df4 <btrfs_search_slot@@Base+0x4c4>)
   19d72:	subs	r0, #101	; 0x65
   19d74:	umull	r0, r1, r0, r3
   19d78:	lsrs	r3, r1, #3
   19d7a:	subs	r3, #1
   19d7c:	cmp	ip, r3
   19d7e:	bcs.n	19dea <btrfs_search_slot@@Base+0x4ba>
   19d80:	add	r3, sp, #104	; 0x68
   19d82:	mov	r1, r4
   19d84:	strd	r7, r3, [sp]
   19d88:	mov	r0, sl
   19d8a:	mov	r3, r6
   19d8c:	bl	17f78 <btrfs_cow_block@@Base>
   19d90:	cbnz	r0, 19dea <btrfs_search_slot@@Base+0x4ba>
   19d92:	ldr	r2, [sp, #104]	; 0x68
   19d94:	add.w	r1, r4, #464	; 0x1d0
   19d98:	add.w	r0, sl, #8
   19d9c:	mov	r3, r5
   19d9e:	bl	1724c <rb_free_nodes@@Base+0x25a>
   19da2:	mov	r2, r0
   19da4:	cbnz	r0, 19dea <btrfs_search_slot@@Base+0x4ba>
   19da6:	add	r1, sp, #112	; 0x70
   19da8:	ldr	r0, [sp, #104]	; 0x68
   19daa:	str	r1, [sp, #52]	; 0x34
   19dac:	bl	17046 <rb_free_nodes@@Base+0x54>
   19db0:	mov	r2, r7
   19db2:	ldr	r1, [sp, #52]	; 0x34
   19db4:	mov	r0, r6
   19db6:	bl	17022 <rb_free_nodes@@Base+0x30>
   19dba:	mov	r0, r6
   19dbc:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   19dc0:	ldr.w	r3, [r5, #192]	; 0xc0
   19dc4:	ldr	r2, [sp, #48]	; 0x30
   19dc6:	cmp	r3, r2
   19dc8:	bhi.n	19de6 <btrfs_search_slot@@Base+0x4b6>
   19dca:	ldr	r3, [sp, #104]	; 0x68
   19dcc:	ldr	r2, [sp, #40]	; 0x28
   19dce:	str.w	r3, [fp, r2, lsl #2]
   19dd2:	ldr.w	r3, [r8, #36]	; 0x24
   19dd6:	adds	r3, #1
   19dd8:	str.w	r3, [r8, #36]	; 0x24
   19ddc:	ldr	r3, [sp, #48]	; 0x30
   19dde:	ldr.w	r7, [r5, #192]	; 0xc0
   19de2:	subs	r7, r3, r7
   19de4:	b.n	19cb6 <btrfs_search_slot@@Base+0x386>
   19de6:	ldr	r0, [sp, #104]	; 0x68
   19de8:	b.n	19cc4 <btrfs_search_slot@@Base+0x394>
   19dea:	ldr	r0, [sp, #104]	; 0x68
   19dec:	bl	16314 <free_extent_buffer@@Base>
   19df0:	b.n	19c02 <btrfs_search_slot@@Base+0x2d2>
   19df2:	nop
   19df4:	strh	r1, [r4, #30]
   19df6:	subs	r6, #15
   19df8:	lsls	r0, r4, #8
   19dfa:	movs	r0, r0
   19dfc:	add	r4, pc, #232	; (adr r4, 19ee8 <btrfs_search_slot@@Base+0x5b8>)
   19dfe:	movs	r4, r0
   19e00:	movs	r5, #148	; 0x94
   19e02:	movs	r2, r0
   19e04:	movs	r3, #62	; 0x3e
   19e06:	movs	r2, r0
   19e08:	movs	r3, #66	; 0x42
   19e0a:	movs	r2, r0
   19e0c:	movs	r5, #74	; 0x4a
   19e0e:	movs	r2, r0
   19e10:	add	r3, pc, #496	; (adr r3, 1a004 <btrfs_search_slot@@Base+0x6d4>)
   19e12:	movs	r4, r0
   19e14:	movs	r2, #202	; 0xca
   19e16:	movs	r2, r0
   19e18:	adds	r4, #135	; 0x87
   19e1a:	movs	r2, r0
   19e1c:	movs	r4, #100	; 0x64
   19e1e:	movs	r2, r0
   19e20:	movs	r2, #158	; 0x9e
   19e22:	movs	r2, r0
   19e24:	movs	r3, #228	; 0xe4
   19e26:	movs	r2, r0
   19e28:	movs	r1, #176	; 0xb0
   19e2a:	movs	r2, r0
   19e2c:	movs	r3, #146	; 0x92
   19e2e:	movs	r2, r0
   19e30:	movs	r1, #210	; 0xd2
   19e32:	movs	r2, r0
   19e34:	movs	r1, #63	; 0x3f
   19e36:	movs	r2, r0
   19e38:	movs	r2, #0
   19e3a:	movs	r3, #101	; 0x65
   19e3c:	mov	r1, r2
   19e3e:	bl	16a96 <memset_extent_buffer@@Base>
   19e42:	ldrb.w	r3, [r6, #196]	; 0xc4
   19e46:	mov	r0, r5
   19e48:	strb.w	r3, [r5, #196]	; 0xc4
   19e4c:	ldr	r3, [r5, #40]	; 0x28
   19e4e:	str.w	r3, [r5, #144]	; 0x90
   19e52:	ldr	r3, [r5, #44]	; 0x2c
   19e54:	str.w	r3, [r5, #148]	; 0x94
   19e58:	ldrd	r2, r3, [sl, #8]
   19e5c:	str.w	r2, [r5, #176]	; 0xb0
   19e60:	str.w	r3, [r5, #180]	; 0xb4
   19e64:	ldr.w	r2, [r5, #152]	; 0x98
   19e68:	ldr.w	r3, [r5, #156]	; 0x9c
   19e6c:	bic.w	r3, r3, #4278190080	; 0xff000000
   19e70:	str.w	r2, [r5, #152]	; 0x98
   19e74:	orr.w	r3, r3, #16777216	; 0x1000000
   19e78:	str.w	r3, [r5, #156]	; 0x9c
   19e7c:	ldr.w	r2, [r4, #447]	; 0x1bf
   19e80:	ldr.w	r3, [r4, #451]	; 0x1c3
   19e84:	str.w	r2, [r5, #184]	; 0xb8
   19e88:	movs	r2, #32
   19e8a:	str.w	r3, [r5, #188]	; 0xbc
   19e8e:	ldr.w	r3, [r4, #464]	; 0x1d0
   19e92:	ldr.w	r1, [r3, #352]	; 0x160
   19e96:	movs	r3, #16
   19e98:	add	r1, r3
   19e9a:	bl	16a24 <write_extent_buffer@@Base>
   19e9e:	ldr.w	r1, [r4, #464]	; 0x1d0
   19ea2:	movs	r3, #16
   19ea4:	movs	r2, #64	; 0x40
   19ea6:	mov	r0, r5
   19ea8:	bl	16a24 <write_extent_buffer@@Base>
   19eac:	ldr.w	r1, [r4, #464]	; 0x1d0
   19eb0:	ldr.w	r2, [r4, #200]	; 0xc8
   19eb4:	mov	r0, r5
   19eb6:	ldr.w	r3, [r4, #204]	; 0xcc
   19eba:	ldr.w	r1, [r1, #384]	; 0x180
   19ebe:	adds	r2, r2, r1
   19ec0:	str.w	r2, [r4, #200]	; 0xc8
   19ec4:	adc.w	r3, r3, #0
   19ec8:	str.w	r3, [r4, #204]	; 0xcc
   19ecc:	ldr	r3, [sp, #48]	; 0x30
   19ece:	mov	r1, r6
   19ed0:	subs	r3, r3, r7
   19ed2:	str	r3, [sp, #48]	; 0x30
   19ed4:	ldr	r2, [sp, #48]	; 0x30
   19ed6:	add.w	r3, r7, r7, lsl #5
   19eda:	adds	r3, #101	; 0x65
   19edc:	add.w	r2, r2, r2, lsl #5
   19ee0:	str	r2, [sp, #0]
   19ee2:	movs	r2, #101	; 0x65
   19ee4:	bl	16a36 <copy_extent_buffer@@Base>
   19ee8:	ldr	r3, [sp, #48]	; 0x30
   19eea:	mov	r0, r6
   19eec:	str.w	r3, [r5, #192]	; 0xc0
   19ef0:	str.w	r7, [r6, #192]	; 0xc0
   19ef4:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   19ef8:	mov	r0, r5
   19efa:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   19efe:	ldr	r3, [sp, #44]	; 0x2c
   19f00:	add.w	r1, r4, #464	; 0x1d0
   19f04:	add.w	r0, sl, #8
   19f08:	adds	r3, #1
   19f0a:	str	r3, [sp, #12]
   19f0c:	ldr.w	r3, [r8, #36]	; 0x24
   19f10:	adds	r3, #1
   19f12:	str	r3, [sp, #8]
   19f14:	ldrd	r2, r3, [r5, #40]	; 0x28
   19f18:	strd	r2, r3, [sp]
   19f1c:	mov	r3, r9
   19f1e:	mov	r2, fp
   19f20:	bl	17158 <rb_free_nodes@@Base+0x166>
   19f24:	ldr.w	r3, [r8, #32]
   19f28:	cmp	r7, r3
   19f2a:	mov	r9, r0
   19f2c:	bgt.n	19f4c <btrfs_search_slot@@Base+0x61c>
   19f2e:	subs	r7, r3, r7
   19f30:	mov	r0, r6
   19f32:	str.w	r7, [r8, #32]
   19f36:	bl	16314 <free_extent_buffer@@Base>
   19f3a:	ldr	r3, [sp, #40]	; 0x28
   19f3c:	str.w	r5, [fp, r3, lsl #2]
   19f40:	ldr.w	r3, [r8, #36]	; 0x24
   19f44:	adds	r3, #1
   19f46:	str.w	r3, [r8, #36]	; 0x24
   19f4a:	b.n	19b7a <btrfs_search_slot@@Base+0x24a>
   19f4c:	mov	r0, r5
   19f4e:	bl	16314 <free_extent_buffer@@Base>
   19f52:	b.n	19b7a <btrfs_search_slot@@Base+0x24a>
   19f54:	mov.w	r9, #0
   19f58:	b.n	19b7a <btrfs_search_slot@@Base+0x24a>
   19f5a:	ldr	r3, [sp, #192]	; 0xc0
   19f5c:	cmp	r3, #0
   19f5e:	bge.w	19bae <btrfs_search_slot@@Base+0x27e>
   19f62:	movs	r3, #0
   19f64:	strd	r3, r3, [sp, #104]	; 0x68
   19f68:	ldr	r3, [sp, #40]	; 0x28
   19f6a:	ldr.w	r6, [r4, #464]	; 0x1d0
   19f6e:	ldr.w	r5, [fp, r3, lsl #2]
   19f72:	ldrd	r2, r3, [sl, #8]
   19f76:	ldr.w	r1, [r5, #180]	; 0xb4
   19f7a:	ldr.w	r0, [r5, #176]	; 0xb0
   19f7e:	cmp	r1, r3
   19f80:	ldr.w	r1, [pc, #1092]	; 1a3c8 <btrfs_search_slot@@Base+0xa98>
   19f84:	it	eq
   19f86:	cmpeq	r0, r2
   19f88:	ldr.w	r0, [pc, #1088]	; 1a3cc <btrfs_search_slot@@Base+0xa9c>
   19f8c:	add	r1, pc
   19f8e:	movw	r2, #734	; 0x2de
   19f92:	ite	ne
   19f94:	movne	r3, #1
   19f96:	moveq	r3, #0
   19f98:	addw	r1, r1, #393	; 0x189
   19f9c:	add	r0, pc
   19f9e:	bl	17150 <rb_free_nodes@@Base+0x15e>
   19fa2:	ldr	r3, [sp, #44]	; 0x2c
   19fa4:	cmp	r3, #6
   19fa6:	bgt.n	19fb6 <btrfs_search_slot@@Base+0x686>
   19fa8:	ldr.w	r7, [r8, #4]
   19fac:	adds	r3, #1
   19fae:	vmov	s18, r3
   19fb2:	cmp	r7, #0
   19fb4:	bne.n	1a08c <btrfs_search_slot@@Base+0x75c>
   19fb6:	ldr.w	r3, [r5, #192]	; 0xc0
   19fba:	cmp	r3, #1
   19fbc:	bne.w	1a38c <btrfs_search_slot@@Base+0xa5c>
   19fc0:	movs	r2, #0
   19fc2:	mov	r1, r5
   19fc4:	mov	r0, r6
   19fc6:	ldr.w	r6, [pc, #1032]	; 1a3d0 <btrfs_search_slot@@Base+0xaa0>
   19fca:	bl	18302 <read_node_slot@@Base>
   19fce:	mov.w	r9, #0
   19fd2:	add	r6, pc
   19fd4:	addw	r6, r6, #393	; 0x189
   19fd8:	mov	r7, r0
   19fda:	str	r0, [sp, #112]	; 0x70
   19fdc:	bl	170a0 <rb_free_nodes@@Base+0xae>
   19fe0:	movw	r2, #755	; 0x2f3
   19fe4:	mov	r1, r6
   19fe6:	clz	r3, r0
   19fea:	ldr	r0, [pc, #1000]	; (1a3d4 <btrfs_search_slot@@Base+0xaa4>)
   19fec:	lsrs	r3, r3, #5
   19fee:	add	r0, pc
   19ff0:	bl	17108 <rb_free_nodes@@Base+0x116>
   19ff4:	add	r3, sp, #112	; 0x70
   19ff6:	mov	r2, r7
   19ff8:	mov	r1, r4
   19ffa:	str	r3, [sp, #4]
   19ffc:	mov	r0, sl
   19ffe:	mov	r3, r5
   1a000:	str.w	r9, [sp]
   1a004:	bl	17f78 <btrfs_cow_block@@Base>
   1a008:	movw	r2, #757	; 0x2f5
   1a00c:	mov	r1, r6
   1a00e:	mov	r3, r0
   1a010:	ldr	r0, [pc, #964]	; (1a3d8 <btrfs_search_slot@@Base+0xaa8>)
   1a012:	add	r0, pc
   1a014:	bl	17108 <rb_free_nodes@@Base+0x116>
   1a018:	ldr	r3, [sp, #112]	; 0x70
   1a01a:	mov	r0, r4
   1a01c:	str	r3, [r4, #0]
   1a01e:	bl	17588 <add_root_to_dirty_list@@Base>
   1a022:	ldr	r3, [sp, #40]	; 0x28
   1a024:	mov	r0, r5
   1a026:	str.w	r9, [fp, r3, lsl #2]
   1a02a:	bl	1cc04 <clean_tree_block@@Base>
   1a02e:	mov	r0, r5
   1a030:	bl	16314 <free_extent_buffer@@Base>
   1a034:	ldr	r1, [r5, #76]	; 0x4c
   1a036:	ldr.w	r2, [r4, #200]	; 0xc8
   1a03a:	ldrb.w	r0, [sp, #44]	; 0x2c
   1a03e:	ldr.w	r3, [r4, #204]	; 0xcc
   1a042:	subs	r2, r2, r1
   1a044:	mov.w	r1, #0
   1a048:	str.w	r2, [r4, #200]	; 0xc8
   1a04c:	sbc.w	r3, r3, #0
   1a050:	movs	r2, #0
   1a052:	str.w	r3, [r4, #204]	; 0xcc
   1a056:	movs	r3, #0
   1a058:	strd	r0, r1, [sp, #24]
   1a05c:	strd	r2, r3, [sp, #32]
   1a060:	ldr.w	r0, [r4, #447]	; 0x1bf
   1a064:	ldr.w	r1, [r4, #451]	; 0x1c3
   1a068:	strd	r2, r3, [sp, #8]
   1a06c:	strd	r0, r1, [sp, #16]
   1a070:	mov	r1, r4
   1a072:	ldr	r3, [r5, #76]	; 0x4c
   1a074:	mov	r0, sl
   1a076:	strd	r3, r9, [sp]
   1a07a:	ldrd	r2, r3, [r5, #40]	; 0x28
   1a07e:	bl	20344 <btrfs_free_extent@@Base>
   1a082:	mov	r9, r0
   1a084:	mov	r0, r5
   1a086:	bl	16314 <free_extent_buffer@@Base>
   1a08a:	b.n	1a384 <btrfs_search_slot@@Base+0xa54>
   1a08c:	ldr.w	r2, [r6, #384]	; 0x180
   1a090:	ldr	r3, [pc, #816]	; (1a3c4 <btrfs_search_slot@@Base+0xa94>)
   1a092:	subs	r2, #101	; 0x65
   1a094:	umull	r0, r1, r2, r3
   1a098:	ldr.w	r2, [r5, #192]	; 0xc0
   1a09c:	cmp.w	r2, r1, lsr #5
   1a0a0:	bhi.w	1a38c <btrfs_search_slot@@Base+0xa5c>
   1a0a4:	ldr	r3, [sp, #48]	; 0x30
   1a0a6:	mov	r1, r7
   1a0a8:	mov	r0, r6
   1a0aa:	add.w	r3, r3, r3, lsl #5
   1a0ae:	add	r3, r5
   1a0b0:	ldr.w	r2, [r3, #214]!
   1a0b4:	ldr	r3, [r3, #4]
   1a0b6:	str	r2, [sp, #64]	; 0x40
   1a0b8:	str	r3, [sp, #68]	; 0x44
   1a0ba:	ldr.w	r3, [r8, #36]	; 0x24
   1a0be:	add.w	r9, r3, #4294967295	; 0xffffffff
   1a0c2:	str	r3, [sp, #52]	; 0x34
   1a0c4:	mov	r2, r9
   1a0c6:	bl	18302 <read_node_slot@@Base>
   1a0ca:	mov	r2, r0
   1a0cc:	str	r0, [sp, #108]	; 0x6c
   1a0ce:	bl	170a0 <rb_free_nodes@@Base+0xae>
   1a0d2:	cmp	r0, #0
   1a0d4:	bne.w	1a35c <btrfs_search_slot@@Base+0xa2c>
   1a0d8:	ldr	r3, [sp, #52]	; 0x34
   1a0da:	mov	r1, r7
   1a0dc:	mov	r0, r6
   1a0de:	adds	r3, #1
   1a0e0:	mov	r2, r3
   1a0e2:	vmov	s17, r3
   1a0e6:	bl	18302 <read_node_slot@@Base>
   1a0ea:	mov	r2, r0
   1a0ec:	str	r0, [sp, #104]	; 0x68
   1a0ee:	bl	170a0 <rb_free_nodes@@Base+0xae>
   1a0f2:	cbz	r0, 1a10e <btrfs_search_slot@@Base+0x7de>
   1a0f4:	add	r3, sp, #104	; 0x68
   1a0f6:	vstr	s17, [sp]
   1a0fa:	str	r3, [sp, #4]
   1a0fc:	mov	r1, r4
   1a0fe:	mov	r3, r7
   1a100:	mov	r0, sl
   1a102:	bl	17f78 <btrfs_cow_block@@Base>
   1a106:	mov	r9, r0
   1a108:	cmp	r0, #0
   1a10a:	bne.w	1a374 <btrfs_search_slot@@Base+0xa44>
   1a10e:	ldr	r2, [sp, #108]	; 0x6c
   1a110:	cmp	r2, #0
   1a112:	bne.w	1a3a2 <btrfs_search_slot@@Base+0xa72>
   1a116:	mov	r6, r2
   1a118:	ldr	r3, [sp, #104]	; 0x68
   1a11a:	cmp	r3, #0
   1a11c:	beq.n	1a1d0 <btrfs_search_slot@@Base+0x8a0>
   1a11e:	movs	r2, #1
   1a120:	add.w	r0, sl, #8
   1a124:	str	r2, [sp, #0]
   1a126:	mov	r2, r5
   1a128:	ldr.w	r1, [r4, #464]	; 0x1d0
   1a12c:	bl	1733c <rb_free_nodes@@Base+0x34a>
   1a130:	cmp	r0, #0
   1a132:	bge.n	1a13c <btrfs_search_slot@@Base+0x80c>
   1a134:	cmn.w	r0, #28
   1a138:	it	ne
   1a13a:	movne	r6, r0
   1a13c:	ldr	r0, [sp, #104]	; 0x68
   1a13e:	ldr.w	r9, [r0, #192]	; 0xc0
   1a142:	cmp.w	r9, #0
   1a146:	bne.w	1a3f4 <btrfs_search_slot@@Base+0xac4>
   1a14a:	ldrd	r2, r3, [r0, #40]	; 0x28
   1a14e:	strd	r2, r3, [sp, #72]	; 0x48
   1a152:	ldr	r3, [r0, #76]	; 0x4c
   1a154:	str	r3, [sp, #80]	; 0x50
   1a156:	bl	1cc04 <clean_tree_block@@Base>
   1a15a:	ldr	r0, [sp, #104]	; 0x68
   1a15c:	bl	16314 <free_extent_buffer@@Base>
   1a160:	vmov	r3, s17
   1a164:	vmov	r2, s18
   1a168:	mov	r1, fp
   1a16a:	mov	r0, r4
   1a16c:	str.w	r9, [sp, #104]	; 0x68
   1a170:	bl	19860 <btrfs_del_ptr@@Base>
   1a174:	ldr	r1, [sp, #104]	; 0x68
   1a176:	ldr.w	r2, [r4, #200]	; 0xc8
   1a17a:	ldr.w	r3, [r4, #204]	; 0xcc
   1a17e:	ldr	r1, [r1, #76]	; 0x4c
   1a180:	cmp	r0, #0
   1a182:	it	ne
   1a184:	movne	r6, r0
   1a186:	ldrb.w	r0, [sp, #44]	; 0x2c
   1a18a:	subs	r2, r2, r1
   1a18c:	mov.w	r1, #0
   1a190:	str.w	r2, [r4, #200]	; 0xc8
   1a194:	sbc.w	r3, r3, #0
   1a198:	movs	r2, #0
   1a19a:	str.w	r3, [r4, #204]	; 0xcc
   1a19e:	movs	r3, #0
   1a1a0:	strd	r0, r1, [sp, #24]
   1a1a4:	strd	r2, r3, [sp, #32]
   1a1a8:	ldr.w	r0, [r4, #447]	; 0x1bf
   1a1ac:	ldr.w	r1, [r4, #451]	; 0x1c3
   1a1b0:	strd	r2, r3, [sp, #8]
   1a1b4:	ldr	r3, [sp, #80]	; 0x50
   1a1b6:	strd	r0, r1, [sp, #16]
   1a1ba:	mov	r1, r4
   1a1bc:	mov	r0, sl
   1a1be:	strd	r3, r9, [sp]
   1a1c2:	ldrd	r2, r3, [sp, #72]	; 0x48
   1a1c6:	bl	20344 <btrfs_free_extent@@Base>
   1a1ca:	cmp	r0, #0
   1a1cc:	it	ne
   1a1ce:	movne	r6, r0
   1a1d0:	ldr.w	r3, [r5, #192]	; 0xc0
   1a1d4:	cmp	r3, #1
   1a1d6:	bne.n	1a254 <btrfs_search_slot@@Base+0x924>
   1a1d8:	ldr.w	r9, [sp, #108]	; 0x6c
   1a1dc:	mov.w	r2, #848	; 0x350
   1a1e0:	ldr	r1, [pc, #504]	; (1a3dc <btrfs_search_slot@@Base+0xaac>)
   1a1e2:	clz	r3, r9
   1a1e6:	ldr	r0, [pc, #504]	; (1a3e0 <btrfs_search_slot@@Base+0xab0>)
   1a1e8:	add	r1, pc
   1a1ea:	lsrs	r3, r3, #5
   1a1ec:	addw	r1, r1, #393	; 0x189
   1a1f0:	add	r0, pc
   1a1f2:	bl	17108 <rb_free_nodes@@Base+0x116>
   1a1f6:	add.w	r3, sl, #8
   1a1fa:	add.w	r1, r4, #464	; 0x1d0
   1a1fe:	mov	r2, r5
   1a200:	vmov	s17, r3
   1a204:	mov	r3, r9
   1a206:	vmov	r0, s17
   1a20a:	bl	1724c <rb_free_nodes@@Base+0x25a>
   1a20e:	subs.w	r9, r0, #0
   1a212:	blt.w	1a374 <btrfs_search_slot@@Base+0xa44>
   1a216:	cmp.w	r9, #1
   1a21a:	bne.n	1a238 <btrfs_search_slot@@Base+0x908>
   1a21c:	str.w	r9, [sp]
   1a220:	mov	r3, r5
   1a222:	vmov	r0, s17
   1a226:	ldr	r2, [sp, #108]	; 0x6c
   1a228:	ldr.w	r1, [r4, #464]	; 0x1d0
   1a22c:	bl	1733c <rb_free_nodes@@Base+0x34a>
   1a230:	subs.w	r9, r0, #0
   1a234:	it	lt
   1a236:	movlt	r6, r9
   1a238:	add.w	r1, r9, #4294967295	; 0xffffffff
   1a23c:	ldr	r0, [pc, #420]	; (1a3e4 <btrfs_search_slot@@Base+0xab4>)
   1a23e:	negs	r3, r1
   1a240:	movw	r2, #859	; 0x35b
   1a244:	adcs	r3, r1
   1a246:	ldr	r1, [pc, #416]	; (1a3e8 <btrfs_search_slot@@Base+0xab8>)
   1a248:	add	r0, pc
   1a24a:	add	r1, pc
   1a24c:	addw	r1, r1, #393	; 0x189
   1a250:	bl	17108 <rb_free_nodes@@Base+0x116>
   1a254:	ldr.w	r3, [r5, #192]	; 0xc0
   1a258:	mov	r9, r6
   1a25a:	str	r3, [sp, #72]	; 0x48
   1a25c:	cmp	r3, #0
   1a25e:	bne.w	1a412 <btrfs_search_slot@@Base+0xae2>
   1a262:	ldrd	r2, r3, [r5, #40]	; 0x28
   1a266:	mov	r0, r5
   1a268:	ldr	r7, [r5, #76]	; 0x4c
   1a26a:	strd	r2, r3, [sp, #80]	; 0x50
   1a26e:	bl	1cc04 <clean_tree_block@@Base>
   1a272:	mov	r0, r5
   1a274:	bl	16314 <free_extent_buffer@@Base>
   1a278:	vmov	r2, s18
   1a27c:	ldr	r3, [sp, #52]	; 0x34
   1a27e:	mov	r1, fp
   1a280:	mov	r0, r4
   1a282:	bl	19860 <btrfs_del_ptr@@Base>
   1a286:	ldr.w	r2, [r4, #200]	; 0xc8
   1a28a:	ldr.w	r3, [r4, #204]	; 0xcc
   1a28e:	movs	r1, #0
   1a290:	cmp	r0, #0
   1a292:	ite	ne
   1a294:	movne	r9, r0
   1a296:	moveq	r9, r6
   1a298:	ldrb.w	r0, [sp, #44]	; 0x2c
   1a29c:	subs	r2, r2, r7
   1a29e:	str.w	r2, [r4, #200]	; 0xc8
   1a2a2:	sbc.w	r3, r3, #0
   1a2a6:	movs	r2, #0
   1a2a8:	str.w	r3, [r4, #204]	; 0xcc
   1a2ac:	movs	r3, #0
   1a2ae:	strd	r0, r1, [sp, #24]
   1a2b2:	strd	r2, r3, [sp, #32]
   1a2b6:	ldr.w	r0, [r4, #447]	; 0x1bf
   1a2ba:	ldr.w	r1, [r4, #451]	; 0x1c3
   1a2be:	strd	r2, r3, [sp, #8]
   1a2c2:	movs	r3, #0
   1a2c4:	str	r7, [sp, #0]
   1a2c6:	strd	r0, r1, [sp, #16]
   1a2ca:	mov	r1, r4
   1a2cc:	str	r3, [sp, #4]
   1a2ce:	mov	r0, sl
   1a2d0:	ldrd	r2, r3, [sp, #80]	; 0x50
   1a2d4:	bl	20344 <btrfs_free_extent@@Base>
   1a2d8:	ldr	r5, [sp, #72]	; 0x48
   1a2da:	cmp	r0, #0
   1a2dc:	it	ne
   1a2de:	movne	r9, r0
   1a2e0:	ldr	r2, [sp, #108]	; 0x6c
   1a2e2:	cbz	r2, 1a312 <btrfs_search_slot@@Base+0x9e2>
   1a2e4:	ldr.w	r3, [r2, #192]	; 0xc0
   1a2e8:	ldr	r1, [sp, #48]	; 0x30
   1a2ea:	cmp	r3, r1
   1a2ec:	bls.w	1a430 <btrfs_search_slot@@Base+0xb00>
   1a2f0:	ldr	r3, [r2, #80]	; 0x50
   1a2f2:	adds	r3, #1
   1a2f4:	str	r3, [r2, #80]	; 0x50
   1a2f6:	ldr	r3, [sp, #40]	; 0x28
   1a2f8:	str.w	r2, [fp, r3, lsl #2]
   1a2fc:	ldr.w	r3, [r8, #36]	; 0x24
   1a300:	str.w	r1, [r8, #32]
   1a304:	subs	r3, #1
   1a306:	str.w	r3, [r8, #36]	; 0x24
   1a30a:	cbz	r5, 1a312 <btrfs_search_slot@@Base+0x9e2>
   1a30c:	mov	r0, r5
   1a30e:	bl	16314 <free_extent_buffer@@Base>
   1a312:	ldrb.w	r3, [fp, #67]	; 0x43
   1a316:	cbnz	r3, 1a324 <btrfs_search_slot@@Base+0x9f4>
   1a318:	ldr	r2, [sp, #44]	; 0x2c
   1a31a:	mov	r1, fp
   1a31c:	ldr.w	r0, [r4, #464]	; 0x1d0
   1a320:	bl	18a24 <btrfs_check_leaf@@Base+0x2c0>
   1a324:	ldr	r3, [sp, #40]	; 0x28
   1a326:	ldr.w	r2, [r8, #32]
   1a32a:	ldr.w	r3, [fp, r3, lsl #2]
   1a32e:	add.w	r2, r2, r2, lsl #5
   1a332:	add	r3, r2
   1a334:	ldr.w	r0, [r3, #214]!
   1a338:	ldr	r1, [r3, #4]
   1a33a:	ldrd	r2, r3, [sp, #64]	; 0x40
   1a33e:	cmp	r3, r1
   1a340:	it	eq
   1a342:	cmpeq	r2, r0
   1a344:	beq.n	1a374 <btrfs_search_slot@@Base+0xa44>
   1a346:	ldr	r1, [pc, #164]	; (1a3ec <btrfs_search_slot@@Base+0xabc>)
   1a348:	movs	r3, #1
   1a34a:	ldr	r0, [pc, #164]	; (1a3f0 <btrfs_search_slot@@Base+0xac0>)
   1a34c:	mov.w	r2, #904	; 0x388
   1a350:	add	r1, pc
   1a352:	addw	r1, r1, #393	; 0x189
   1a356:	add	r0, pc
   1a358:	bl	170ce <rb_free_nodes@@Base+0xdc>
   1a35c:	add	r3, sp, #108	; 0x6c
   1a35e:	mov	r1, r4
   1a360:	strd	r9, r3, [sp]
   1a364:	mov	r0, sl
   1a366:	mov	r3, r7
   1a368:	bl	17f78 <btrfs_cow_block@@Base>
   1a36c:	mov	r9, r0
   1a36e:	cmp	r0, #0
   1a370:	beq.w	1a0d8 <btrfs_search_slot@@Base+0x7a8>
   1a374:	ldr	r0, [sp, #104]	; 0x68
   1a376:	cbz	r0, 1a37c <btrfs_search_slot@@Base+0xa4c>
   1a378:	bl	16314 <free_extent_buffer@@Base>
   1a37c:	ldr	r0, [sp, #108]	; 0x6c
   1a37e:	cmp	r0, #0
   1a380:	bne.w	1a086 <btrfs_search_slot@@Base+0x756>
   1a384:	cmp.w	r9, #0
   1a388:	bne.w	19a02 <btrfs_search_slot@@Base+0xd2>
   1a38c:	ldr	r3, [sp, #40]	; 0x28
   1a38e:	ldr.w	r3, [fp, r3, lsl #2]
   1a392:	str	r3, [sp, #96]	; 0x60
   1a394:	cmp	r3, #0
   1a396:	bne.n	1a43a <btrfs_search_slot@@Base+0xb0a>
   1a398:	mov	r0, fp
   1a39a:	bl	1754c <btrfs_release_path@@Base>
   1a39e:	b.w	199c0 <btrfs_search_slot@@Base+0x90>
   1a3a2:	ldr.w	r3, [r2, #192]	; 0xc0
   1a3a6:	add.w	r0, sl, #8
   1a3aa:	ldr	r1, [sp, #48]	; 0x30
   1a3ac:	add	r1, r3
   1a3ae:	movs	r3, #1
   1a3b0:	str	r1, [sp, #48]	; 0x30
   1a3b2:	str	r3, [sp, #0]
   1a3b4:	mov	r3, r5
   1a3b6:	ldr.w	r1, [r4, #464]	; 0x1d0
   1a3ba:	bl	1733c <rb_free_nodes@@Base+0x34a>
   1a3be:	and.w	r6, r0, r0, asr #31
   1a3c2:	b.n	1a118 <btrfs_search_slot@@Base+0x7e8>
   1a3c4:	strh	r1, [r4, #30]
   1a3c6:	subs	r6, #15
   1a3c8:	subs	r4, r1, #6
   1a3ca:	movs	r2, r0
   1a3cc:	adds	r1, r3, #6
   1a3ce:	movs	r2, r0
   1a3d0:	subs	r6, r0, #5
   1a3d2:	movs	r2, r0
   1a3d4:	adds	r7, r7, #5
   1a3d6:	movs	r2, r0
   1a3d8:			; <UNDEFINED> instruction: 0xf4d20001
   1a3dc:	adds	r0, r6, #4
   1a3de:	movs	r2, r0
   1a3e0:	subs	r4, r3, r6
   1a3e2:	movs	r2, r0
   1a3e4:	subs	r2, r1, r5
   1a3e6:	movs	r2, r0
   1a3e8:	adds	r6, r1, #3
   1a3ea:	movs	r2, r0
   1a3ec:	subs	r0, r1, r7
   1a3ee:	movs	r2, r0
   1a3f0:	cmp	r3, #123	; 0x7b
   1a3f2:	movs	r2, r0
   1a3f4:	add	r1, sp, #112	; 0x70
   1a3f6:	movs	r2, #0
   1a3f8:	str	r1, [sp, #72]	; 0x48
   1a3fa:	bl	17046 <rb_free_nodes@@Base+0x54>
   1a3fe:	mov	r0, r7
   1a400:	vmov	r2, s17
   1a404:	ldr	r1, [sp, #72]	; 0x48
   1a406:	bl	17022 <rb_free_nodes@@Base+0x30>
   1a40a:	mov	r0, r7
   1a40c:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   1a410:	b.n	1a1d0 <btrfs_search_slot@@Base+0x8a0>
   1a412:	add	r1, sp, #112	; 0x70
   1a414:	mov	r0, r5
   1a416:	movs	r2, #0
   1a418:	str	r1, [sp, #72]	; 0x48
   1a41a:	bl	17046 <rb_free_nodes@@Base+0x54>
   1a41e:	mov	r0, r7
   1a420:	ldr	r2, [sp, #52]	; 0x34
   1a422:	ldr	r1, [sp, #72]	; 0x48
   1a424:	bl	17022 <rb_free_nodes@@Base+0x30>
   1a428:	mov	r0, r7
   1a42a:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   1a42e:	b.n	1a2e0 <btrfs_search_slot@@Base+0x9b0>
   1a430:	ldr	r2, [sp, #48]	; 0x30
   1a432:	subs	r3, r2, r3
   1a434:	str.w	r3, [r8, #32]
   1a438:	b.n	1a312 <btrfs_search_slot@@Base+0x9e2>
   1a43a:	ldr.w	r2, [r8, #32]
   1a43e:	ldr	r1, [pc, #108]	; (1a4ac <btrfs_search_slot@@Base+0xb7c>)
   1a440:	ldr	r0, [pc, #108]	; (1a4b0 <btrfs_search_slot@@Base+0xb80>)
   1a442:	str	r2, [sp, #100]	; 0x64
   1a444:	add	r1, pc
   1a446:	ldr.w	r3, [r3, #192]	; 0xc0
   1a44a:	add.w	r1, r1, #342	; 0x156
   1a44e:	add	r0, pc
   1a450:	subs	r2, r3, #1
   1a452:	negs	r3, r2
   1a454:	adcs	r3, r2
   1a456:	movw	r2, #1227	; 0x4cb
   1a45a:	bl	17108 <rb_free_nodes@@Base+0x116>
   1a45e:	b.w	19bae <btrfs_search_slot@@Base+0x27e>
   1a462:	ldr	r3, [sp, #88]	; 0x58
   1a464:	cbz	r3, 1a47e <btrfs_search_slot@@Base+0xb4e>
   1a466:	ldr	r3, [sp, #56]	; 0x38
   1a468:	mov	r1, fp
   1a46a:	vmov	r0, s16
   1a46e:	ldr	r2, [r3, #0]
   1a470:	ldr	r3, [r3, #4]
   1a472:	strd	r2, r3, [sp]
   1a476:	ldr	r3, [sp, #100]	; 0x64
   1a478:	ldr	r2, [sp, #44]	; 0x2c
   1a47a:	bl	1837c <reada_for_search@@Base>
   1a47e:	vmov	r0, s16
   1a482:	ldrd	r1, r2, [sp, #96]	; 0x60
   1a486:	bl	18302 <read_node_slot@@Base>
   1a48a:	str	r0, [sp, #96]	; 0x60
   1a48c:	bl	170a0 <rb_free_nodes@@Base+0xae>
   1a490:	cmp	r0, #0
   1a492:	bne.w	199d2 <btrfs_search_slot@@Base+0xa2>
   1a496:	mvn.w	r9, #4
   1a49a:	b.w	19a02 <btrfs_search_slot@@Base+0xd2>
   1a49e:	mov	r0, r9
   1a4a0:	add	sp, #140	; 0x8c
   1a4a2:	vpop	{d8-d9}
   1a4a6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a4aa:	nop
   1a4ac:	subs	r4, r2, r3
   1a4ae:	movs	r2, r0
   1a4b0:	adds	r6, r1, r5
   1a4b2:	movs	r2, r0

0001a4b4 <btrfs_split_item@@Base>:
   1a4b4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a4b8:	sub	sp, #76	; 0x4c
   1a4ba:	mov	r4, r2
   1a4bc:	ldr	r2, [pc, #536]	; (1a6d8 <btrfs_split_item@@Base+0x224>)
   1a4be:	str	r3, [sp, #12]
   1a4c0:	add.w	r8, sp, #28
   1a4c4:	ldr	r3, [pc, #532]	; (1a6dc <btrfs_split_item@@Base+0x228>)
   1a4c6:	add	r2, pc
   1a4c8:	ldr	r5, [r4, #0]
   1a4ca:	mov	r6, r0
   1a4cc:	mov	r7, r1
   1a4ce:	mov	r1, r8
   1a4d0:	ldr	r3, [r2, r3]
   1a4d2:	mov	r0, r5
   1a4d4:	ldr	r2, [r4, #32]
   1a4d6:	ldr	r3, [r3, #0]
   1a4d8:	str	r3, [sp, #68]	; 0x44
   1a4da:	mov.w	r3, #0
   1a4de:	bl	174a4 <rb_free_nodes@@Base+0x4b2>
   1a4e2:	mov	r0, r5
   1a4e4:	bl	186dc <btrfs_leaf_free_space@@Base>
   1a4e8:	cmp	r0, #24
   1a4ea:	bhi.n	1a580 <btrfs_split_item@@Base+0xcc>
   1a4ec:	ldr	r3, [r4, #32]
   1a4ee:	mov.w	r9, #25
   1a4f2:	mov	r0, r4
   1a4f4:	mov.w	sl, #0
   1a4f8:	mla	r3, r9, r3, r5
   1a4fc:	ldr.w	fp, [r3, #218]	; 0xda
   1a500:	bl	1754c <btrfs_release_path@@Base>
   1a504:	movs	r3, #1
   1a506:	mov	r2, r8
   1a508:	strb.w	r3, [r4, #66]	; 0x42
   1a50c:	mov	r1, r7
   1a50e:	str	r3, [sp, #4]
   1a510:	mov	r0, r6
   1a512:	mov	r3, r4
   1a514:	str.w	sl, [sp]
   1a518:	bl	19930 <btrfs_search_slot@@Base>
   1a51c:	strb.w	sl, [r4, #66]	; 0x42
   1a520:	cmp	r0, #0
   1a522:	bne.w	1a6cc <btrfs_split_item@@Base+0x218>
   1a526:	ldr	r3, [r4, #32]
   1a528:	ldr	r2, [r4, #0]
   1a52a:	mla	r3, r9, r3, r2
   1a52e:	ldr.w	r3, [r3, #218]	; 0xda
   1a532:	cmp	r3, fp
   1a534:	bne.w	1a6cc <btrfs_split_item@@Base+0x218>
   1a538:	mov	r3, r4
   1a53a:	mov	r2, r8
   1a53c:	mov	r1, r7
   1a53e:	strd	r0, r0, [sp]
   1a542:	mov	r0, r6
   1a544:	bl	19044 <btrfs_check_leaf@@Base+0x8e0>
   1a548:	ldr	r1, [pc, #404]	; (1a6e0 <btrfs_split_item@@Base+0x22c>)
   1a54a:	movw	r2, #2390	; 0x956
   1a54e:	add	r1, pc
   1a550:	addw	r1, r1, #407	; 0x197
   1a554:	str	r1, [sp, #16]
   1a556:	mov	r3, r0
   1a558:	ldr	r0, [pc, #392]	; (1a6e4 <btrfs_split_item@@Base+0x230>)
   1a55a:	add	r0, pc
   1a55c:	bl	17108 <rb_free_nodes@@Base+0x116>
   1a560:	mov	r0, r5
   1a562:	bl	186dc <btrfs_leaf_free_space@@Base>
   1a566:	ldr	r1, [sp, #16]
   1a568:	movw	r2, #2392	; 0x958
   1a56c:	cmp	r0, #24
   1a56e:	ldr	r0, [pc, #376]	; (1a6e8 <btrfs_split_item@@Base+0x234>)
   1a570:	it	hi
   1a572:	movhi	r3, #0
   1a574:	add	r0, pc
   1a576:	it	ls
   1a578:	movls	r3, #1
   1a57a:	bl	17108 <rb_free_nodes@@Base+0x116>
   1a57e:	ldr	r5, [r4, #0]
   1a580:	ldr	r3, [r4, #32]
   1a582:	mov.w	sl, #25
   1a586:	mul.w	r3, sl, r3
   1a58a:	adds	r3, #101	; 0x65
   1a58c:	str	r3, [sp, #20]
   1a58e:	ldr	r2, [sp, #20]
   1a590:	add.w	r3, r5, #96	; 0x60
   1a594:	add	r3, r2
   1a596:	ldr.w	r6, [r3, #21]
   1a59a:	ldr.w	r2, [r3, #17]
   1a59e:	mov	r0, r6
   1a5a0:	str	r2, [sp, #16]
   1a5a2:	blx	8678 <malloc@plt+0x4>
   1a5a6:	ldr	r1, [pc, #324]	; (1a6ec <btrfs_split_item@@Base+0x238>)
   1a5a8:	movw	r2, #2402	; 0x962
   1a5ac:	add	r1, pc
   1a5ae:	addw	r1, r1, #407	; 0x197
   1a5b2:	clz	r3, r0
   1a5b6:	mov	r9, r0
   1a5b8:	ldr	r0, [pc, #308]	; (1a6f0 <btrfs_split_item@@Base+0x23c>)
   1a5ba:	lsrs	r3, r3, #5
   1a5bc:	add	r0, pc
   1a5be:	bl	17108 <rb_free_nodes@@Base+0x116>
   1a5c2:	ldr	r2, [sp, #16]
   1a5c4:	mov	r1, r9
   1a5c6:	mov	r0, r5
   1a5c8:	adds	r2, #101	; 0x65
   1a5ca:	mov	r3, r6
   1a5cc:	bl	16a0e <read_extent_buffer@@Base>
   1a5d0:	ldr	r1, [r4, #32]
   1a5d2:	ldr	r5, [r4, #0]
   1a5d4:	add.w	fp, r1, #1
   1a5d8:	mla	r1, r1, sl, sl
   1a5dc:	ldr.w	r8, [r5, #192]	; 0xc0
   1a5e0:	cmp	fp, r8
   1a5e2:	add.w	r7, r1, #101	; 0x65
   1a5e6:	bcs.n	1a5fa <btrfs_split_item@@Base+0x146>
   1a5e8:	sub.w	r3, r8, fp
   1a5ec:	adds	r1, #126	; 0x7e
   1a5ee:	mov	r2, r7
   1a5f0:	mov	r0, r5
   1a5f2:	mul.w	r3, sl, r3
   1a5f6:	bl	16a80 <memmove_extent_buffer@@Base>
   1a5fa:	ldr	r3, [sp, #12]
   1a5fc:	add	r1, sp, #48	; 0x30
   1a5fe:	mov	r0, r5
   1a600:	add.w	r8, r8, #1
   1a604:	ldr.w	r2, [r3, #9]
   1a608:	ldr.w	r3, [r3, #13]
   1a60c:	str.w	r2, [sp, #57]	; 0x39
   1a610:	str.w	r3, [sp, #61]	; 0x3d
   1a614:	ldr	r3, [sp, #12]
   1a616:	ldrb	r3, [r3, #8]
   1a618:	strb.w	r3, [sp, #56]	; 0x38
   1a61c:	ldr	r3, [sp, #12]
   1a61e:	ldr	r2, [r3, #0]
   1a620:	ldr	r3, [r3, #4]
   1a622:	strd	r2, r3, [sp, #48]	; 0x30
   1a626:	mov	r2, fp
   1a628:	bl	1702e <rb_free_nodes@@Base+0x3c>
   1a62c:	add.w	r2, r5, #96	; 0x60
   1a630:	ldr	r3, [sp, #16]
   1a632:	add	r7, r2
   1a634:	ldr	r1, [sp, #16]
   1a636:	mov	r0, r5
   1a638:	str.w	r3, [r7, #17]
   1a63c:	ldr	r3, [sp, #112]	; 0x70
   1a63e:	sub.w	sl, r6, r3
   1a642:	ldr	r3, [sp, #20]
   1a644:	add	r6, r1
   1a646:	ldr	r1, [sp, #112]	; 0x70
   1a648:	add	r3, r2
   1a64a:	str.w	sl, [r7, #21]
   1a64e:	subs	r6, r6, r1
   1a650:	str.w	r1, [r3, #21]
   1a654:	movs	r1, #25
   1a656:	str.w	r6, [r3, #17]
   1a65a:	str.w	r8, [r5, #192]	; 0xc0
   1a65e:	ldr	r3, [r4, #32]
   1a660:	mla	r3, r1, r3, r2
   1a664:	mov	r1, r9
   1a666:	ldr.w	r2, [r3, #118]	; 0x76
   1a66a:	ldr	r3, [sp, #112]	; 0x70
   1a66c:	adds	r2, #101	; 0x65
   1a66e:	bl	16a24 <write_extent_buffer@@Base>
   1a672:	ldr.w	r2, [r7, #17]
   1a676:	ldr	r1, [sp, #112]	; 0x70
   1a678:	mov	r3, sl
   1a67a:	adds	r2, #101	; 0x65
   1a67c:	mov	r0, r5
   1a67e:	add	r1, r9
   1a680:	bl	16a24 <write_extent_buffer@@Base>
   1a684:	mov	r0, r5
   1a686:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   1a68a:	mov	r0, r5
   1a68c:	bl	186dc <btrfs_leaf_free_space@@Base>
   1a690:	cmp	r0, #0
   1a692:	bge.n	1a6b0 <btrfs_split_item@@Base+0x1fc>
   1a694:	mov	r0, r5
   1a696:	bl	24718 <btrfs_print_leaf@@Base>
   1a69a:	ldr	r1, [pc, #88]	; (1a6f4 <btrfs_split_item@@Base+0x240>)
   1a69c:	ldr	r0, [pc, #88]	; (1a6f8 <btrfs_split_item@@Base+0x244>)
   1a69e:	movs	r3, #1
   1a6a0:	add	r1, pc
   1a6a2:	movw	r2, #2446	; 0x98e
   1a6a6:	addw	r1, r1, #407	; 0x197
   1a6aa:	add	r0, pc
   1a6ac:	bl	170ce <rb_free_nodes@@Base+0xdc>
   1a6b0:	mov	r0, r9
   1a6b2:	blx	8434 <free@plt+0x4>
   1a6b6:	movs	r0, #0
   1a6b8:	ldr	r2, [pc, #64]	; (1a6fc <btrfs_split_item@@Base+0x248>)
   1a6ba:	ldr	r3, [pc, #32]	; (1a6dc <btrfs_split_item@@Base+0x228>)
   1a6bc:	add	r2, pc
   1a6be:	ldr	r3, [r2, r3]
   1a6c0:	ldr	r2, [r3, #0]
   1a6c2:	ldr	r3, [sp, #68]	; 0x44
   1a6c4:	eors	r2, r3
   1a6c6:	beq.n	1a6d2 <btrfs_split_item@@Base+0x21e>
   1a6c8:	blx	8510 <__stack_chk_fail@plt>
   1a6cc:	mvn.w	r0, #10
   1a6d0:	b.n	1a6b8 <btrfs_split_item@@Base+0x204>
   1a6d2:	add	sp, #76	; 0x4c
   1a6d4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a6d8:	ldr	r0, [sp, #760]	; 0x2f8
   1a6da:	movs	r4, r0
   1a6dc:	lsls	r0, r4, #8
   1a6de:	movs	r0, r0
   1a6e0:	adds	r2, r1, r7
   1a6e2:	movs	r2, r0
   1a6e4:	vaddl.s8	q0, d10, d1
   1a6e8:	adds	r5, r0, r1
   1a6ea:	movs	r2, r0
   1a6ec:	adds	r4, r5, r5
   1a6ee:	movs	r2, r0
   1a6f0:	adds	r5, r6, r0
   1a6f2:	movs	r2, r0
   1a6f4:	adds	r0, r7, r1
   1a6f6:	movs	r2, r0
   1a6f8:	cmp	r0, #39	; 0x27
   1a6fa:	movs	r2, r0
   1a6fc:	str	r6, [sp, #800]	; 0x320
   1a6fe:	movs	r4, r0

0001a700 <btrfs_insert_empty_items@@Base>:
   1a700:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a704:	sub	sp, #60	; 0x3c
   1a706:	mov	fp, r3
   1a708:	mov.w	r8, #0
   1a70c:	ldr	r3, [sp, #96]	; 0x60
   1a70e:	strd	r1, r2, [sp, #16]
   1a712:	ldr	r2, [pc, #616]	; (1a97c <btrfs_insert_empty_items@@Base+0x27c>)
   1a714:	str	r3, [sp, #24]
   1a716:	ldr	r3, [pc, #616]	; (1a980 <btrfs_insert_empty_items@@Base+0x280>)
   1a718:	add	r2, pc
   1a71a:	add	r3, pc
   1a71c:	str	r3, [sp, #28]
   1a71e:	ldr	r3, [pc, #612]	; (1a984 <btrfs_insert_empty_items@@Base+0x284>)
   1a720:	ldr	r3, [r2, r3]
   1a722:	ldr	r3, [r3, #0]
   1a724:	str	r3, [sp, #52]	; 0x34
   1a726:	mov.w	r3, #0
   1a72a:	mov	r3, r8
   1a72c:	ldr	r2, [sp, #100]	; 0x64
   1a72e:	cmp	r3, r2
   1a730:	blt.n	1a74e <btrfs_insert_empty_items@@Base+0x4e>
   1a732:	ldr	r3, [sp, #16]
   1a734:	ldr	r3, [r3, #0]
   1a736:	cbnz	r3, 1a75a <btrfs_insert_empty_items@@Base+0x5a>
   1a738:	ldr	r1, [pc, #588]	; (1a988 <btrfs_insert_empty_items@@Base+0x288>)
   1a73a:	movs	r3, #1
   1a73c:	ldr	r0, [pc, #588]	; (1a98c <btrfs_insert_empty_items@@Base+0x28c>)
   1a73e:	movw	r2, #2636	; 0xa4c
   1a742:	add	r1, pc
   1a744:	add.w	r1, r1, #424	; 0x1a8
   1a748:	add	r0, pc
   1a74a:	bl	170ce <rb_free_nodes@@Base+0xdc>
   1a74e:	ldr	r2, [sp, #24]
   1a750:	ldr.w	r2, [r2, r3, lsl #2]
   1a754:	adds	r3, #1
   1a756:	add	r8, r2
   1a758:	b.n	1a72c <btrfs_insert_empty_items@@Base+0x2c>
   1a75a:	ldr	r3, [sp, #100]	; 0x64
   1a75c:	movs	r2, #25
   1a75e:	ldr	r1, [sp, #16]
   1a760:	mov.w	r9, #1
   1a764:	mla	r5, r2, r3, r8
   1a768:	ldr	r3, [sp, #20]
   1a76a:	mov	r2, fp
   1a76c:	strd	r5, r9, [sp]
   1a770:	bl	19930 <btrfs_search_slot@@Base>
   1a774:	cmp	r0, #0
   1a776:	beq.w	1a95a <btrfs_insert_empty_items@@Base+0x25a>
   1a77a:	blt.w	1a95e <btrfs_insert_empty_items@@Base+0x25e>
   1a77e:	ldr	r3, [sp, #20]
   1a780:	ldr	r4, [r3, #0]
   1a782:	ldr.w	r3, [r4, #192]	; 0xc0
   1a786:	mov	r1, r4
   1a788:	str	r3, [sp, #12]
   1a78a:	ldr	r3, [sp, #16]
   1a78c:	ldr.w	r0, [r3, #464]	; 0x1d0
   1a790:	add.w	r0, r0, #384	; 0x180
   1a794:	bl	170b4 <rb_free_nodes@@Base+0xc2>
   1a798:	mov	r6, r0
   1a79a:	mov	r0, r4
   1a79c:	bl	186dc <btrfs_leaf_free_space@@Base>
   1a7a0:	cmp	r0, r5
   1a7a2:	bcs.n	1a7dc <btrfs_insert_empty_items@@Base+0xdc>
   1a7a4:	mov	r0, r4
   1a7a6:	bl	24718 <btrfs_print_leaf@@Base>
   1a7aa:	ldr	r2, [sp, #28]
   1a7ac:	ldr	r3, [pc, #480]	; (1a990 <btrfs_insert_empty_items@@Base+0x290>)
   1a7ae:	mov	r0, r4
   1a7b0:	ldr	r3, [r2, r3]
   1a7b2:	ldr	r6, [r3, #0]
   1a7b4:	bl	186dc <btrfs_leaf_free_space@@Base>
   1a7b8:	ldr	r2, [pc, #472]	; (1a994 <btrfs_insert_empty_items@@Base+0x294>)
   1a7ba:	mov	r3, r5
   1a7bc:	mov	r1, r9
   1a7be:	add	r2, pc
   1a7c0:	str	r0, [sp, #0]
   1a7c2:	mov	r0, r6
   1a7c4:	blx	8860 <__fprintf_chk@plt+0x4>
   1a7c8:	ldr	r1, [pc, #460]	; (1a998 <btrfs_insert_empty_items@@Base+0x298>)
   1a7ca:	ldr	r0, [pc, #464]	; (1a99c <btrfs_insert_empty_items@@Base+0x29c>)
   1a7cc:	mov	r3, r9
   1a7ce:	add	r1, pc
   1a7d0:	movw	r2, #2655	; 0xa5f
   1a7d4:	add.w	r1, r1, #424	; 0x1a8
   1a7d8:	add	r0, pc
   1a7da:	b.n	1a74a <btrfs_insert_empty_items@@Base+0x4a>
   1a7dc:	ldr	r3, [sp, #20]
   1a7de:	movw	r2, #2659	; 0xa63
   1a7e2:	ldr.w	sl, [pc, #444]	; 1a9a0 <btrfs_insert_empty_items@@Base+0x2a0>
   1a7e6:	ldr	r0, [pc, #444]	; (1a9a4 <btrfs_insert_empty_items@@Base+0x2a4>)
   1a7e8:	ldr	r5, [r3, #32]
   1a7ea:	add	sl, pc
   1a7ec:	add.w	sl, sl, #424	; 0x1a8
   1a7f0:	add	r0, pc
   1a7f2:	lsrs	r3, r5, #31
   1a7f4:	mov	r1, sl
   1a7f6:	bl	17108 <rb_free_nodes@@Base+0x116>
   1a7fa:	ldr	r3, [sp, #12]
   1a7fc:	cmp	r5, r3
   1a7fe:	bcs.n	1a846 <btrfs_insert_empty_items@@Base+0x146>
   1a800:	mov	r1, r5
   1a802:	mov	r0, r4
   1a804:	bl	17010 <rb_free_nodes@@Base+0x1e>
   1a808:	cmp	r6, r0
   1a80a:	mov	r7, r0
   1a80c:	bhi.n	1a8c6 <btrfs_insert_empty_items@@Base+0x1c6>
   1a80e:	add.w	ip, r4, #197	; 0xc5
   1a812:	mov	r2, r5
   1a814:	movs	r3, #25
   1a816:	ldr	r1, [sp, #12]
   1a818:	cmp	r2, r1
   1a81a:	bne.n	1a8f2 <btrfs_insert_empty_items@@Base+0x1f2>
   1a81c:	subs	r0, r1, r5
   1a81e:	ldr	r1, [sp, #100]	; 0x64
   1a820:	mul.w	r2, r3, r5
   1a824:	add	r1, r5
   1a826:	muls	r1, r3
   1a828:	adds	r2, #101	; 0x65
   1a82a:	muls	r3, r0
   1a82c:	mov	r0, r4
   1a82e:	adds	r1, #101	; 0x65
   1a830:	bl	16a80 <memmove_extent_buffer@@Base>
   1a834:	add.w	r2, r6, #101	; 0x65
   1a838:	subs	r3, r7, r6
   1a83a:	sub.w	r1, r2, r8
   1a83e:	mov	r0, r4
   1a840:	mov	r6, r7
   1a842:	bl	16a80 <memmove_extent_buffer@@Base>
   1a846:	mov.w	r9, #25
   1a84a:	add	r1, sp, #32
   1a84c:	mla	r9, r9, r5, r4
   1a850:	mov	r7, fp
   1a852:	mov.w	r8, #0
   1a856:	ldr	r3, [sp, #100]	; 0x64
   1a858:	add.w	sl, r9, #25
   1a85c:	cmp	r8, r3
   1a85e:	blt.n	1a906 <btrfs_insert_empty_items@@Base+0x206>
   1a860:	ldr	r3, [sp, #12]
   1a862:	mov	r0, r4
   1a864:	ldr	r2, [sp, #100]	; 0x64
   1a866:	add	r3, r2
   1a868:	str.w	r3, [r4, #192]	; 0xc0
   1a86c:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   1a870:	cbnz	r5, 1a8a2 <btrfs_insert_empty_items@@Base+0x1a2>
   1a872:	ldr.w	r3, [fp, #13]
   1a876:	ldr.w	r2, [fp, #9]
   1a87a:	ldrd	r0, r1, [sp, #16]
   1a87e:	str.w	r3, [sp, #45]	; 0x2d
   1a882:	ldrb.w	r3, [fp, #8]
   1a886:	str.w	r2, [sp, #41]	; 0x29
   1a88a:	ldr.w	r2, [fp]
   1a88e:	strb.w	r3, [sp, #40]	; 0x28
   1a892:	ldr.w	r3, [fp, #4]
   1a896:	strd	r2, r3, [sp, #32]
   1a89a:	add	r2, sp, #32
   1a89c:	movs	r3, #1
   1a89e:	bl	18554 <btrfs_fixup_low_keys@@Base>
   1a8a2:	mov	r0, r4
   1a8a4:	bl	186dc <btrfs_leaf_free_space@@Base>
   1a8a8:	cmp	r0, #0
   1a8aa:	bge.n	1a972 <btrfs_insert_empty_items@@Base+0x272>
   1a8ac:	mov	r0, r4
   1a8ae:	bl	24718 <btrfs_print_leaf@@Base>
   1a8b2:	ldr	r1, [pc, #244]	; (1a9a8 <btrfs_insert_empty_items@@Base+0x2a8>)
   1a8b4:	ldr	r0, [pc, #244]	; (1a9ac <btrfs_insert_empty_items@@Base+0x2ac>)
   1a8b6:	movs	r3, #1
   1a8b8:	add	r1, pc
   1a8ba:	movw	r2, #2714	; 0xa9a
   1a8be:	add.w	r1, r1, #424	; 0x1a8
   1a8c2:	add	r0, pc
   1a8c4:	b.n	1a74a <btrfs_insert_empty_items@@Base+0x4a>
   1a8c6:	mov	r0, r4
   1a8c8:	bl	24718 <btrfs_print_leaf@@Base>
   1a8cc:	ldr	r2, [sp, #28]
   1a8ce:	ldr	r3, [pc, #192]	; (1a990 <btrfs_insert_empty_items@@Base+0x290>)
   1a8d0:	mov	r1, r9
   1a8d2:	ldr	r0, [r2, r3]
   1a8d4:	mov	r3, r5
   1a8d6:	ldr	r2, [pc, #216]	; (1a9b0 <btrfs_insert_empty_items@@Base+0x2b0>)
   1a8d8:	strd	r7, r6, [sp]
   1a8dc:	add	r2, pc
   1a8de:	ldr	r0, [r0, #0]
   1a8e0:	blx	8860 <__fprintf_chk@plt+0x4>
   1a8e4:	ldr	r0, [pc, #204]	; (1a9b4 <btrfs_insert_empty_items@@Base+0x2b4>)
   1a8e6:	mov	r3, r9
   1a8e8:	movw	r2, #2668	; 0xa6c
   1a8ec:	add	r0, pc
   1a8ee:	mov	r1, sl
   1a8f0:	b.n	1a74a <btrfs_insert_empty_items@@Base+0x4a>
   1a8f2:	mla	r0, r3, r2, ip
   1a8f6:	adds	r2, #1
   1a8f8:	ldr.w	r1, [r0, #17]
   1a8fc:	sub.w	r1, r1, r8
   1a900:	str.w	r1, [r0, #17]
   1a904:	b.n	1a816 <btrfs_insert_empty_items@@Base+0x116>
   1a906:	ldr.w	r3, [r7, #13]
   1a90a:	mov	r0, r4
   1a90c:	ldr.w	r2, [r7, #9]
   1a910:	adds	r7, #17
   1a912:	str	r1, [sp, #28]
   1a914:	str.w	r3, [sp, #45]	; 0x2d
   1a918:	ldrb.w	r3, [r7, #-9]
   1a91c:	str.w	r2, [sp, #41]	; 0x29
   1a920:	ldr.w	r2, [r7, #-17]
   1a924:	strb.w	r3, [sp, #40]	; 0x28
   1a928:	ldr.w	r3, [r7, #-13]
   1a92c:	strd	r2, r3, [sp, #32]
   1a930:	add.w	r2, r5, r8
   1a934:	bl	1702e <rb_free_nodes@@Base+0x3c>
   1a938:	ldr	r3, [sp, #24]
   1a93a:	ldr	r1, [sp, #28]
   1a93c:	ldr.w	r3, [r3, r8, lsl #2]
   1a940:	subs	r3, r6, r3
   1a942:	str.w	r3, [r9, #214]	; 0xd6
   1a946:	ldr	r3, [sp, #24]
   1a948:	ldr.w	r3, [r3, r8, lsl #2]
   1a94c:	add.w	r8, r8, #1
   1a950:	subs	r6, r6, r3
   1a952:	str.w	r3, [r9, #218]	; 0xda
   1a956:	mov	r9, sl
   1a958:	b.n	1a856 <btrfs_insert_empty_items@@Base+0x156>
   1a95a:	mvn.w	r0, #16
   1a95e:	ldr	r2, [pc, #88]	; (1a9b8 <btrfs_insert_empty_items@@Base+0x2b8>)
   1a960:	ldr	r3, [pc, #32]	; (1a984 <btrfs_insert_empty_items@@Base+0x284>)
   1a962:	add	r2, pc
   1a964:	ldr	r3, [r2, r3]
   1a966:	ldr	r2, [r3, #0]
   1a968:	ldr	r3, [sp, #52]	; 0x34
   1a96a:	eors	r2, r3
   1a96c:	beq.n	1a976 <btrfs_insert_empty_items@@Base+0x276>
   1a96e:	blx	8510 <__stack_chk_fail@plt>
   1a972:	movs	r0, #0
   1a974:	b.n	1a95e <btrfs_insert_empty_items@@Base+0x25e>
   1a976:	add	sp, #60	; 0x3c
   1a978:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a97c:	str	r6, [sp, #432]	; 0x1b0
   1a97e:	movs	r4, r0
   1a980:	str	r6, [sp, #424]	; 0x1a8
   1a982:	movs	r4, r0
   1a984:	lsls	r0, r4, #8
   1a986:	movs	r0, r0
   1a988:	asrs	r6, r2, #31
   1a98a:	movs	r2, r0
   1a98c:	movs	r7, #137	; 0x89
   1a98e:	movs	r2, r0
   1a990:	lsls	r0, r6, #8
   1a992:	movs	r0, r0
   1a994:	asrs	r0, r7, #24
   1a996:	movs	r2, r0
   1a998:	asrs	r2, r1, #29
   1a99a:	movs	r2, r0
   1a99c:	movs	r6, #249	; 0xf9
   1a99e:	movs	r2, r0
   1a9a0:	asrs	r6, r5, #28
   1a9a2:	movs	r2, r0
   1a9a4:	asrs	r4, r7, #17
   1a9a6:	movs	r2, r0
   1a9a8:	asrs	r0, r4, #25
   1a9aa:	movs	r2, r0
   1a9ac:	movs	r6, #15
   1a9ae:	movs	r2, r0
   1a9b0:	asrs	r0, r0, #21
   1a9b2:	movs	r2, r0
   1a9b4:	movs	r5, #229	; 0xe5
   1a9b6:	movs	r2, r0
   1a9b8:	str	r4, [sp, #136]	; 0x88
   1a9ba:	movs	r4, r0

0001a9bc <btrfs_insert_item@@Base>:
   1a9bc:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1a9c0:	mov	r8, r2
   1a9c2:	ldr	r2, [pc, #132]	; (1aa48 <btrfs_insert_item@@Base+0x8c>)
   1a9c4:	mov	r6, r3
   1a9c6:	ldr	r3, [pc, #132]	; (1aa4c <btrfs_insert_item@@Base+0x90>)
   1a9c8:	sub	sp, #24
   1a9ca:	add	r2, pc
   1a9cc:	mov	r5, r0
   1a9ce:	str	r1, [sp, #12]
   1a9d0:	ldr	r3, [r2, r3]
   1a9d2:	ldr	r7, [sp, #48]	; 0x30
   1a9d4:	ldr	r3, [r3, #0]
   1a9d6:	str	r3, [sp, #20]
   1a9d8:	mov.w	r3, #0
   1a9dc:	bl	17544 <btrfs_alloc_path@@Base>
   1a9e0:	mov	r4, r0
   1a9e2:	cbz	r0, 1aa38 <btrfs_insert_item@@Base+0x7c>
   1a9e4:	movs	r3, #1
   1a9e6:	mov	r2, r0
   1a9e8:	str	r3, [sp, #4]
   1a9ea:	mov	r0, r5
   1a9ec:	add	r3, sp, #16
   1a9ee:	ldr	r1, [sp, #12]
   1a9f0:	str	r3, [sp, #0]
   1a9f2:	mov	r3, r8
   1a9f4:	str	r7, [sp, #16]
   1a9f6:	bl	1a700 <btrfs_insert_empty_items@@Base>
   1a9fa:	mov	r5, r0
   1a9fc:	cbnz	r0, 1aa1e <btrfs_insert_item@@Base+0x62>
   1a9fe:	ldr	r0, [r4, #0]
   1aa00:	movs	r2, #25
   1aa02:	ldr	r3, [r4, #32]
   1aa04:	mov	r1, r6
   1aa06:	str	r0, [sp, #12]
   1aa08:	mla	r3, r2, r3, r0
   1aa0c:	ldr.w	r2, [r3, #214]	; 0xd6
   1aa10:	mov	r3, r7
   1aa12:	adds	r2, #101	; 0x65
   1aa14:	bl	16a24 <write_extent_buffer@@Base>
   1aa18:	ldr	r0, [sp, #12]
   1aa1a:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   1aa1e:	mov	r0, r4
   1aa20:	bl	17572 <btrfs_free_path@@Base>
   1aa24:	ldr	r2, [pc, #40]	; (1aa50 <btrfs_insert_item@@Base+0x94>)
   1aa26:	ldr	r3, [pc, #36]	; (1aa4c <btrfs_insert_item@@Base+0x90>)
   1aa28:	add	r2, pc
   1aa2a:	ldr	r3, [r2, r3]
   1aa2c:	ldr	r2, [r3, #0]
   1aa2e:	ldr	r3, [sp, #20]
   1aa30:	eors	r2, r3
   1aa32:	beq.n	1aa3e <btrfs_insert_item@@Base+0x82>
   1aa34:	blx	8510 <__stack_chk_fail@plt>
   1aa38:	mvn.w	r5, #11
   1aa3c:	b.n	1aa24 <btrfs_insert_item@@Base+0x68>
   1aa3e:	mov	r0, r5
   1aa40:	add	sp, #24
   1aa42:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1aa46:	nop
   1aa48:	str	r3, [sp, #744]	; 0x2e8
   1aa4a:	movs	r4, r0
   1aa4c:	lsls	r0, r4, #8
   1aa4e:	movs	r0, r0
   1aa50:	str	r3, [sp, #368]	; 0x170
   1aa52:	movs	r4, r0
   1aa54:	push	{r4, r5, r6, r7, lr}
   1aa56:	mov	r6, r0
   1aa58:	mov	r7, r2
   1aa5a:	ldr.w	r0, [r3, #176]	; 0xb0
   1aa5e:	mov	r4, r1
   1aa60:	mov	r5, r3
   1aa62:	ldr.w	r1, [r3, #180]	; 0xb4
   1aa66:	sub	sp, #44	; 0x2c
   1aa68:	ldrd	r2, r3, [r6, #8]
   1aa6c:	cmp	r3, r1
   1aa6e:	ldr	r1, [pc, #116]	; (1aae4 <btrfs_insert_item@@Base+0x128>)
   1aa70:	it	eq
   1aa72:	cmpeq	r2, r0
   1aa74:	ldr	r0, [pc, #112]	; (1aae8 <btrfs_insert_item@@Base+0x12c>)
   1aa76:	add	r1, pc
   1aa78:	movw	r2, #2805	; 0xaf5
   1aa7c:	ite	ne
   1aa7e:	movne	r3, #1
   1aa80:	moveq	r3, #0
   1aa82:	addw	r1, r1, #449	; 0x1c1
   1aa86:	add	r0, pc
   1aa88:	bl	17150 <rb_free_nodes@@Base+0x15e>
   1aa8c:	ldr	r3, [r7, #36]	; 0x24
   1aa8e:	movs	r2, #1
   1aa90:	mov	r1, r7
   1aa92:	mov	r0, r4
   1aa94:	bl	19860 <btrfs_del_ptr@@Base>
   1aa98:	cbnz	r0, 1aae0 <btrfs_insert_item@@Base+0x124>
   1aa9a:	ldr	r1, [r5, #76]	; 0x4c
   1aa9c:	ldr.w	r2, [r4, #200]	; 0xc8
   1aaa0:	ldr.w	r3, [r4, #204]	; 0xcc
   1aaa4:	subs	r2, r2, r1
   1aaa6:	ldr.w	r7, [r4, #447]	; 0x1bf
   1aaaa:	str.w	r2, [r4, #200]	; 0xc8
   1aaae:	sbc.w	r3, r3, #0
   1aab2:	movs	r2, #0
   1aab4:	str.w	r3, [r4, #204]	; 0xcc
   1aab8:	ldr.w	r1, [r4, #451]	; 0x1c3
   1aabc:	movs	r3, #0
   1aabe:	strd	r2, r3, [sp, #32]
   1aac2:	strd	r2, r3, [sp, #24]
   1aac6:	strd	r2, r3, [sp, #8]
   1aaca:	ldr	r3, [r5, #76]	; 0x4c
   1aacc:	strd	r7, r1, [sp, #16]
   1aad0:	mov	r1, r4
   1aad2:	strd	r3, r0, [sp]
   1aad6:	mov	r0, r6
   1aad8:	ldrd	r2, r3, [r5, #40]	; 0x28
   1aadc:	bl	20344 <btrfs_free_extent@@Base>
   1aae0:	add	sp, #44	; 0x2c
   1aae2:	pop	{r4, r5, r6, r7, pc}
   1aae4:	asrs	r2, r4, #18
   1aae6:	movs	r2, r0
   1aae8:	asrs	r7, r6, #14
   1aaea:	movs	r2, r0

0001aaec <btrfs_del_items@@Base>:
   1aaec:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aaf0:	mov	r6, r2
   1aaf2:	ldr	r2, [pc, #468]	; (1acc8 <btrfs_del_items@@Base+0x1dc>)
   1aaf4:	mov	r8, r3
   1aaf6:	ldr	r3, [pc, #468]	; (1accc <btrfs_del_items@@Base+0x1e0>)
   1aaf8:	sub	sp, #52	; 0x34
   1aafa:	add	r2, pc
   1aafc:	ldr	r5, [r6, #0]
   1aafe:	mov	sl, r0
   1ab00:	mov	r7, r1
   1ab02:	ldr	r3, [r2, r3]
   1ab04:	ldr	r3, [r3, #0]
   1ab06:	str	r3, [sp, #44]	; 0x2c
   1ab08:	mov.w	r3, #0
   1ab0c:	ldr	r3, [sp, #88]	; 0x58
   1ab0e:	add.w	r9, r8, r3
   1ab12:	add.w	r3, r5, #96	; 0x60
   1ab16:	str	r3, [sp, #20]
   1ab18:	movs	r3, #25
   1ab1a:	mul.w	r3, r3, r8
   1ab1e:	adds	r2, r5, r3
   1ab20:	str	r3, [sp, #12]
   1ab22:	movs	r3, #0
   1ab24:	mov	fp, r3
   1ab26:	ldr	r0, [sp, #88]	; 0x58
   1ab28:	add.w	r1, r2, #25
   1ab2c:	cmp	r3, r0
   1ab2e:	blt.n	1aba8 <btrfs_del_items@@Base+0xbc>
   1ab30:	ldr.w	r4, [r5, #192]	; 0xc0
   1ab34:	str.w	r9, [sp, #16]
   1ab38:	cmp	r9, r4
   1ab3a:	beq.n	1ab90 <btrfs_del_items@@Base+0xa4>
   1ab3c:	ldr.w	r0, [r7, #464]	; 0x1d0
   1ab40:	mov	r1, r5
   1ab42:	add.w	r0, r0, #384	; 0x180
   1ab46:	bl	170b4 <rb_free_nodes@@Base+0xc2>
   1ab4a:	ldr	r3, [sp, #20]
   1ab4c:	add.w	r1, r9, #4294967295	; 0xffffffff
   1ab50:	mov.w	ip, #25
   1ab54:	mla	r1, ip, r1, r3
   1ab58:	ldr.w	r3, [r1, #118]	; 0x76
   1ab5c:	add.w	r2, r0, #101	; 0x65
   1ab60:	subs	r3, r3, r0
   1ab62:	add.w	r1, r2, fp
   1ab66:	mov	r0, r5
   1ab68:	bl	16a80 <memmove_extent_buffer@@Base>
   1ab6c:	add.w	r0, r5, #197	; 0xc5
   1ab70:	movs	r3, #25
   1ab72:	cmp	r4, r9
   1ab74:	bhi.n	1abb4 <btrfs_del_items@@Base+0xc8>
   1ab76:	ldr	r2, [sp, #88]	; 0x58
   1ab78:	mov	r0, r5
   1ab7a:	add.w	r1, r2, r8
   1ab7e:	ldr	r2, [sp, #16]
   1ab80:	subs	r1, r4, r1
   1ab82:	muls	r2, r3
   1ab84:	muls	r3, r1
   1ab86:	ldr	r1, [sp, #12]
   1ab88:	adds	r2, #101	; 0x65
   1ab8a:	adds	r1, #101	; 0x65
   1ab8c:	bl	16a80 <memmove_extent_buffer@@Base>
   1ab90:	ldr	r3, [sp, #88]	; 0x58
   1ab92:	subs	r2, r4, r3
   1ab94:	str.w	r2, [r5, #192]	; 0xc0
   1ab98:	cbnz	r2, 1abf0 <btrfs_del_items@@Base+0x104>
   1ab9a:	ldr	r3, [r7, #0]
   1ab9c:	cmp	r3, r5
   1ab9e:	bne.n	1abc8 <btrfs_del_items@@Base+0xdc>
   1aba0:	strb.w	r2, [r5, #196]	; 0xc4
   1aba4:	movs	r4, #0
   1aba6:	b.n	1abdc <btrfs_del_items@@Base+0xf0>
   1aba8:	ldr.w	r2, [r2, #218]	; 0xda
   1abac:	adds	r3, #1
   1abae:	add	fp, r2
   1abb0:	mov	r2, r1
   1abb2:	b.n	1ab26 <btrfs_del_items@@Base+0x3a>
   1abb4:	mla	r1, r3, r9, r0
   1abb8:	add.w	r9, r9, #1
   1abbc:	ldr.w	r2, [r1, #17]
   1abc0:	add	r2, fp
   1abc2:	str.w	r2, [r1, #17]
   1abc6:	b.n	1ab72 <btrfs_del_items@@Base+0x86>
   1abc8:	mov	r0, r5
   1abca:	bl	1cc04 <clean_tree_block@@Base>
   1abce:	mov	r3, r5
   1abd0:	mov	r2, r6
   1abd2:	mov	r1, r7
   1abd4:	mov	r0, sl
   1abd6:	bl	1aa54 <btrfs_insert_item@@Base+0x98>
   1abda:	mov	r4, r0
   1abdc:	ldr	r2, [pc, #240]	; (1acd0 <btrfs_del_items@@Base+0x1e4>)
   1abde:	ldr	r3, [pc, #236]	; (1accc <btrfs_del_items@@Base+0x1e0>)
   1abe0:	add	r2, pc
   1abe2:	ldr	r3, [r2, r3]
   1abe4:	ldr	r2, [r3, #0]
   1abe6:	ldr	r3, [sp, #44]	; 0x2c
   1abe8:	eors	r2, r3
   1abea:	beq.n	1acc0 <btrfs_del_items@@Base+0x1d4>
   1abec:	blx	8510 <__stack_chk_fail@plt>
   1abf0:	movs	r1, #0
   1abf2:	mov	r0, r5
   1abf4:	bl	17454 <rb_free_nodes@@Base+0x462>
   1abf8:	mov	r9, r0
   1abfa:	cmp.w	r8, #0
   1abfe:	bne.n	1ac18 <btrfs_del_items@@Base+0x12c>
   1ac00:	add	r4, sp, #24
   1ac02:	mov	r2, r8
   1ac04:	mov	r0, r5
   1ac06:	mov	r1, r4
   1ac08:	bl	1703a <rb_free_nodes@@Base+0x48>
   1ac0c:	movs	r3, #1
   1ac0e:	mov	r2, r4
   1ac10:	mov	r1, r6
   1ac12:	mov	r0, r7
   1ac14:	bl	18554 <btrfs_fixup_low_keys@@Base>
   1ac18:	ldr.w	r3, [r7, #464]	; 0x1d0
   1ac1c:	ldr.w	r3, [r3, #384]	; 0x180
   1ac20:	subs	r3, #101	; 0x65
   1ac22:	cmp.w	r9, r3, lsr #2
   1ac26:	bcs.n	1acb8 <btrfs_del_items@@Base+0x1cc>
   1ac28:	ldr	r3, [r5, #80]	; 0x50
   1ac2a:	mov	r2, r6
   1ac2c:	ldr.w	r8, [r6, #36]	; 0x24
   1ac30:	mov	r1, r7
   1ac32:	adds	r3, #1
   1ac34:	mov	r0, sl
   1ac36:	str	r3, [r5, #80]	; 0x50
   1ac38:	movs	r3, #1
   1ac3a:	str	r3, [sp, #0]
   1ac3c:	bl	18d14 <btrfs_check_leaf@@Base+0x5b0>
   1ac40:	subs	r4, r0, #0
   1ac42:	bge.n	1acae <btrfs_del_items@@Base+0x1c2>
   1ac44:	cmn.w	r4, #28
   1ac48:	it	eq
   1ac4a:	moveq	r4, #0
   1ac4c:	ldr	r3, [r6, #0]
   1ac4e:	cmp	r3, r5
   1ac50:	bne.n	1ac72 <btrfs_del_items@@Base+0x186>
   1ac52:	ldr.w	r3, [r5, #192]	; 0xc0
   1ac56:	cbz	r3, 1ac72 <btrfs_del_items@@Base+0x186>
   1ac58:	movs	r3, #1
   1ac5a:	mov	r2, r6
   1ac5c:	mov	r1, r7
   1ac5e:	mov	r0, sl
   1ac60:	str	r3, [sp, #0]
   1ac62:	bl	18a9c <btrfs_check_leaf@@Base+0x338>
   1ac66:	cmp	r0, #0
   1ac68:	bge.n	1ac72 <btrfs_del_items@@Base+0x186>
   1ac6a:	cmn.w	r0, #28
   1ac6e:	it	ne
   1ac70:	movne	r4, r0
   1ac72:	ldr.w	r3, [r5, #192]	; 0xc0
   1ac76:	mov	r0, r5
   1ac78:	cbnz	r3, 1acb2 <btrfs_del_items@@Base+0x1c6>
   1ac7a:	bl	1cc04 <clean_tree_block@@Base>
   1ac7e:	mov	r3, r5
   1ac80:	mov	r2, r6
   1ac82:	mov	r1, r7
   1ac84:	mov	r0, sl
   1ac86:	str.w	r8, [r6, #36]	; 0x24
   1ac8a:	bl	1aa54 <btrfs_insert_item@@Base+0x98>
   1ac8e:	ldr	r1, [pc, #68]	; (1acd4 <btrfs_del_items@@Base+0x1e8>)
   1ac90:	movw	r2, #2909	; 0xb5d
   1ac94:	add	r1, pc
   1ac96:	add.w	r1, r1, #464	; 0x1d0
   1ac9a:	mov	r4, r0
   1ac9c:	mov	r3, r0
   1ac9e:	ldr	r0, [pc, #56]	; (1acd8 <btrfs_del_items@@Base+0x1ec>)
   1aca0:	add	r0, pc
   1aca2:	bl	17108 <rb_free_nodes@@Base+0x116>
   1aca6:	mov	r0, r5
   1aca8:	bl	16314 <free_extent_buffer@@Base>
   1acac:	b.n	1abdc <btrfs_del_items@@Base+0xf0>
   1acae:	movs	r4, #0
   1acb0:	b.n	1ac4c <btrfs_del_items@@Base+0x160>
   1acb2:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   1acb6:	b.n	1aca6 <btrfs_del_items@@Base+0x1ba>
   1acb8:	mov	r0, r5
   1acba:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   1acbe:	b.n	1aba4 <btrfs_del_items@@Base+0xb8>
   1acc0:	mov	r0, r4
   1acc2:	add	sp, #52	; 0x34
   1acc4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1acc8:	str	r2, [sp, #552]	; 0x228
   1acca:	movs	r4, r0
   1accc:	lsls	r0, r4, #8
   1acce:	movs	r0, r0
   1acd0:	str	r1, [sp, #656]	; 0x290
   1acd2:	movs	r4, r0
   1acd4:	asrs	r4, r0, #10
   1acd6:	movs	r2, r0
   1acd8:	strex	r0, r0, [r4, #4]

0001acdc <btrfs_prev_leaf@@Base>:
   1acdc:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1ace0:	adds	r3, r1, #4
   1ace2:	mov	r5, r1
   1ace4:	movs	r6, #1
   1ace6:	mov	r9, r3
   1ace8:	ldr.w	r1, [r3], #4
   1acec:	cbz	r1, 1acf8 <btrfs_prev_leaf@@Base+0x1c>
   1acee:	ldr	r7, [r3, #28]
   1acf0:	cbnz	r7, 1acfc <btrfs_prev_leaf@@Base+0x20>
   1acf2:	adds	r6, #1
   1acf4:	cmp	r6, #8
   1acf6:	bne.n	1ace8 <btrfs_prev_leaf@@Base+0xc>
   1acf8:	movs	r0, #1
   1acfa:	b.n	1ad1c <btrfs_prev_leaf@@Base+0x40>
   1acfc:	ldr.w	r8, [r0, #464]	; 0x1d0
   1ad00:	subs	r7, #1
   1ad02:	mov	r2, r7
   1ad04:	mov	r0, r8
   1ad06:	bl	18302 <read_node_slot@@Base>
   1ad0a:	mov	r4, r0
   1ad0c:	bl	170a0 <rb_free_nodes@@Base+0xae>
   1ad10:	cbnz	r0, 1ad20 <btrfs_prev_leaf@@Base+0x44>
   1ad12:	cmn.w	r4, #4096	; 0x1000
   1ad16:	bhi.n	1ad5c <btrfs_prev_leaf@@Base+0x80>
   1ad18:	mvn.w	r0, #4
   1ad1c:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1ad20:	add.w	r3, r6, #8
   1ad24:	str.w	r7, [r5, r3, lsl #2]
   1ad28:	add.w	r5, r5, r6, lsl #2
   1ad2c:	ldr.w	r0, [r5, #-4]
   1ad30:	bl	16314 <free_extent_buffer@@Base>
   1ad34:	ldr.w	r2, [r4, #192]	; 0xc0
   1ad38:	cbz	r2, 1ad3c <btrfs_prev_leaf@@Base+0x60>
   1ad3a:	subs	r2, #1
   1ad3c:	cmp	r5, r9
   1ad3e:	str.w	r4, [r5, #-4]
   1ad42:	str	r2, [r5, #28]
   1ad44:	beq.n	1ad60 <btrfs_prev_leaf@@Base+0x84>
   1ad46:	mov	r1, r4
   1ad48:	mov	r0, r8
   1ad4a:	bl	18302 <read_node_slot@@Base>
   1ad4e:	subs	r5, #4
   1ad50:	mov	r4, r0
   1ad52:	bl	170a0 <rb_free_nodes@@Base+0xae>
   1ad56:	cmp	r0, #0
   1ad58:	bne.n	1ad2c <btrfs_prev_leaf@@Base+0x50>
   1ad5a:	b.n	1ad12 <btrfs_prev_leaf@@Base+0x36>
   1ad5c:	mov	r0, r4
   1ad5e:	b.n	1ad1c <btrfs_prev_leaf@@Base+0x40>
   1ad60:	movs	r0, #0
   1ad62:	b.n	1ad1c <btrfs_prev_leaf@@Base+0x40>

0001ad64 <btrfs_next_sibling_tree_block@@Base>:
   1ad64:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ad68:	mov	r5, r1
   1ad6a:	ldrb.w	r3, [r1, #65]	; 0x41
   1ad6e:	mov	r7, r0
   1ad70:	ldr	r1, [pc, #232]	; (1ae5c <btrfs_next_sibling_tree_block@@Base+0xf8>)
   1ad72:	movw	r2, #2996	; 0xbb4
   1ad76:	cmp	r3, #6
   1ad78:	ldr	r0, [pc, #228]	; (1ae60 <btrfs_next_sibling_tree_block@@Base+0xfc>)
   1ad7a:	add	r1, pc
   1ad7c:	add.w	r4, r3, #1
   1ad80:	add.w	r1, r1, #480	; 0x1e0
   1ad84:	add	r0, pc
   1ad86:	ite	ls
   1ad88:	movls	r3, #0
   1ad8a:	movhi	r3, #1
   1ad8c:	bl	17108 <rb_free_nodes@@Base+0x116>
   1ad90:	add.w	r2, r5, #32
   1ad94:	ldr.w	r6, [r5, r4, lsl #2]
   1ad98:	cmp	r6, #0
   1ad9a:	beq.n	1ae52 <btrfs_next_sibling_tree_block@@Base+0xee>
   1ad9c:	ldr.w	r3, [r2, r4, lsl #2]
   1ada0:	add.w	r8, r3, #1
   1ada4:	ldr.w	r3, [r6, #192]	; 0xc0
   1ada8:	cmp	r8, r3
   1adaa:	bcc.n	1ae1a <btrfs_next_sibling_tree_block@@Base+0xb6>
   1adac:	adds	r4, #1
   1adae:	cmp	r4, #8
   1adb0:	beq.n	1ae52 <btrfs_next_sibling_tree_block@@Base+0xee>
   1adb2:	cmp	r4, #7
   1adb4:	ble.n	1ad94 <btrfs_next_sibling_tree_block@@Base+0x30>
   1adb6:	movs	r6, #0
   1adb8:	add.w	r3, r4, #8
   1adbc:	add.w	sl, r5, r4, lsl #2
   1adc0:	mov.w	fp, #0
   1adc4:	mov.w	r9, #0
   1adc8:	str.w	r8, [r5, r3, lsl #2]
   1adcc:	mov.w	r8, #0
   1add0:	ldr.w	r0, [sl, #-4]
   1add4:	subs	r4, #1
   1add6:	bl	16314 <free_extent_buffer@@Base>
   1adda:	str.w	r6, [sl, #-4]
   1adde:	str.w	fp, [sl, #28]
   1ade2:	ldrb.w	r3, [r5, #65]	; 0x41
   1ade6:	cmp	r3, r4
   1ade8:	beq.n	1ae56 <btrfs_next_sibling_tree_block@@Base+0xf2>
   1adea:	ldrsb.w	r3, [r5, #64]	; 0x40
   1adee:	cbz	r3, 1ae00 <btrfs_next_sibling_tree_block@@Base+0x9c>
   1adf0:	movs	r3, #0
   1adf2:	mov	r2, r4
   1adf4:	mov	r1, r5
   1adf6:	mov	r0, r7
   1adf8:	strd	r8, r9, [sp]
   1adfc:	bl	1837c <reada_for_search@@Base>
   1ae00:	mov	r1, r6
   1ae02:	movs	r2, #0
   1ae04:	mov	r0, r7
   1ae06:	sub.w	sl, sl, #4
   1ae0a:	bl	18302 <read_node_slot@@Base>
   1ae0e:	mov	r6, r0
   1ae10:	bl	170a0 <rb_free_nodes@@Base+0xae>
   1ae14:	cmp	r0, #0
   1ae16:	bne.n	1add0 <btrfs_next_sibling_tree_block@@Base+0x6c>
   1ae18:	b.n	1ae48 <btrfs_next_sibling_tree_block@@Base+0xe4>
   1ae1a:	ldrsb.w	r3, [r5, #64]	; 0x40
   1ae1e:	cbz	r3, 1ae34 <btrfs_next_sibling_tree_block@@Base+0xd0>
   1ae20:	movs	r2, #0
   1ae22:	movs	r3, #0
   1ae24:	mov	r1, r5
   1ae26:	strd	r2, r3, [sp]
   1ae2a:	mov	r0, r7
   1ae2c:	mov	r3, r8
   1ae2e:	mov	r2, r4
   1ae30:	bl	1837c <reada_for_search@@Base>
   1ae34:	mov	r1, r6
   1ae36:	mov	r2, r8
   1ae38:	mov	r0, r7
   1ae3a:	bl	18302 <read_node_slot@@Base>
   1ae3e:	mov	r6, r0
   1ae40:	bl	170a0 <rb_free_nodes@@Base+0xae>
   1ae44:	cmp	r0, #0
   1ae46:	bne.n	1adb8 <btrfs_next_sibling_tree_block@@Base+0x54>
   1ae48:	mvn.w	r0, #4
   1ae4c:	add	sp, #12
   1ae4e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ae52:	movs	r0, #1
   1ae54:	b.n	1ae4c <btrfs_next_sibling_tree_block@@Base+0xe8>
   1ae56:	movs	r0, #0
   1ae58:	b.n	1ae4c <btrfs_next_sibling_tree_block@@Base+0xe8>
   1ae5a:	nop
   1ae5c:	asrs	r6, r3, #6
   1ae5e:	movs	r2, r0
   1ae60:	asrs	r1, r5, #3
   1ae62:	movs	r2, r0

0001ae64 <btrfs_find_item@@Base>:
   1ae64:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1ae68:	mov	r8, r0
   1ae6a:	ldr	r4, [pc, #200]	; (1af34 <btrfs_find_item@@Base+0xd0>)
   1ae6c:	sub	sp, #36	; 0x24
   1ae6e:	ldr	r0, [pc, #200]	; (1af38 <btrfs_find_item@@Base+0xd4>)
   1ae70:	mov	r6, r1
   1ae72:	add	r4, pc
   1ae74:	ldr	r7, [sp, #76]	; 0x4c
   1ae76:	ldr	r0, [r4, r0]
   1ae78:	ldr	r0, [r0, #0]
   1ae7a:	str	r0, [sp, #28]
   1ae7c:	mov.w	r0, #0
   1ae80:	strd	r2, r3, [sp, #8]
   1ae84:	ldr	r3, [sp, #64]	; 0x40
   1ae86:	ldrb.w	r0, [sp, #72]	; 0x48
   1ae8a:	str.w	r3, [sp, #17]
   1ae8e:	ldr	r3, [sp, #68]	; 0x44
   1ae90:	strb.w	r0, [sp, #16]
   1ae94:	str.w	r3, [sp, #21]
   1ae98:	cbnz	r1, 1aea8 <btrfs_find_item@@Base+0x44>
   1ae9a:	bl	17544 <btrfs_alloc_path@@Base>
   1ae9e:	mov	r5, r0
   1aea0:	cbnz	r0, 1aeaa <btrfs_find_item@@Base+0x46>
   1aea2:	mvn.w	r4, #11
   1aea6:	b.n	1af12 <btrfs_find_item@@Base+0xae>
   1aea8:	mov	r5, r1
   1aeaa:	mov.w	r9, #0
   1aeae:	add	r2, sp, #8
   1aeb0:	mov	r3, r5
   1aeb2:	mov	r1, r8
   1aeb4:	mov	r0, r9
   1aeb6:	strd	r9, r9, [sp]
   1aeba:	bl	19930 <btrfs_search_slot@@Base>
   1aebe:	subs	r4, r0, #0
   1aec0:	blt.n	1af08 <btrfs_find_item@@Base+0xa4>
   1aec2:	cbz	r7, 1af08 <btrfs_find_item@@Base+0xa4>
   1aec4:	ldr	r0, [r5, #0]
   1aec6:	cbz	r4, 1aee6 <btrfs_find_item@@Base+0x82>
   1aec8:	ldr.w	r3, [r0, #192]	; 0xc0
   1aecc:	ldr	r2, [r5, #32]
   1aece:	cmp	r2, r3
   1aed0:	bcc.n	1aee6 <btrfs_find_item@@Base+0x82>
   1aed2:	strb.w	r9, [r5, #65]	; 0x41
   1aed6:	mov	r1, r5
   1aed8:	ldr.w	r0, [r8, #464]	; 0x1d0
   1aedc:	bl	1ad64 <btrfs_next_sibling_tree_block@@Base>
   1aee0:	mov	r4, r0
   1aee2:	cbnz	r0, 1af08 <btrfs_find_item@@Base+0xa4>
   1aee4:	ldr	r0, [r5, #0]
   1aee6:	ldr	r2, [r5, #32]
   1aee8:	mov	r1, r7
   1aeea:	bl	174a4 <rb_free_nodes@@Base+0x4b2>
   1aeee:	ldrb	r2, [r7, #8]
   1aef0:	ldrb.w	r3, [sp, #16]
   1aef4:	cmp	r2, r3
   1aef6:	bne.n	1af26 <btrfs_find_item@@Base+0xc2>
   1aef8:	ldrd	r2, r3, [sp, #8]
   1aefc:	ldr	r1, [r7, #4]
   1aefe:	ldr	r0, [r7, #0]
   1af00:	cmp	r1, r3
   1af02:	ite	eq
   1af04:	cmpeq	r0, r2
   1af06:	movne	r4, #1
   1af08:	cmp	r5, r6
   1af0a:	beq.n	1af12 <btrfs_find_item@@Base+0xae>
   1af0c:	mov	r0, r5
   1af0e:	bl	17572 <btrfs_free_path@@Base>
   1af12:	ldr	r2, [pc, #40]	; (1af3c <btrfs_find_item@@Base+0xd8>)
   1af14:	ldr	r3, [pc, #32]	; (1af38 <btrfs_find_item@@Base+0xd4>)
   1af16:	add	r2, pc
   1af18:	ldr	r3, [r2, r3]
   1af1a:	ldr	r2, [r3, #0]
   1af1c:	ldr	r3, [sp, #28]
   1af1e:	eors	r2, r3
   1af20:	beq.n	1af2a <btrfs_find_item@@Base+0xc6>
   1af22:	blx	8510 <__stack_chk_fail@plt>
   1af26:	movs	r4, #1
   1af28:	b.n	1af08 <btrfs_find_item@@Base+0xa4>
   1af2a:	mov	r0, r4
   1af2c:	add	sp, #36	; 0x24
   1af2e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1af32:	nop
   1af34:	ldrh	r2, [r2, #56]	; 0x38
   1af36:	movs	r4, r0
   1af38:	lsls	r0, r4, #8
   1af3a:	movs	r0, r0
   1af3c:	ldrh	r6, [r5, #50]	; 0x32
   1af3e:	movs	r4, r0

0001af40 <btrfs_search_slot_for_read@@Base>:
   1af40:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1af44:	mov	r5, r0
   1af46:	ldr.w	r8, [sp, #40]	; 0x28
   1af4a:	mov	r6, r1
   1af4c:	mov	r4, r2
   1af4e:	mov	r9, r3
   1af50:	movs	r7, #0
   1af52:	mov	r3, r4
   1af54:	mov	r2, r6
   1af56:	mov	r1, r5
   1af58:	movs	r0, #0
   1af5a:	strd	r7, r7, [sp]
   1af5e:	bl	19930 <btrfs_search_slot@@Base>
   1af62:	cmp	r0, #0
   1af64:	ble.n	1af7a <btrfs_search_slot_for_read@@Base+0x3a>
   1af66:	ldr	r3, [r4, #32]
   1af68:	cmp.w	r9, #0
   1af6c:	beq.n	1afac <btrfs_search_slot_for_read@@Base+0x6c>
   1af6e:	ldr	r2, [r4, #0]
   1af70:	ldr.w	r2, [r2, #192]	; 0xc0
   1af74:	cmp	r3, r2
   1af76:	bcs.n	1af80 <btrfs_search_slot_for_read@@Base+0x40>
   1af78:	movs	r0, #0
   1af7a:	add	sp, #12
   1af7c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1af80:	strb.w	r7, [r4, #65]	; 0x41
   1af84:	mov	r1, r4
   1af86:	ldr.w	r0, [r5, #464]	; 0x1d0
   1af8a:	bl	1ad64 <btrfs_next_sibling_tree_block@@Base>
   1af8e:	cmp	r0, #0
   1af90:	ble.n	1af7a <btrfs_search_slot_for_read@@Base+0x3a>
   1af92:	cmp.w	r8, #0
   1af96:	bne.n	1af9c <btrfs_search_slot_for_read@@Base+0x5c>
   1af98:	movs	r0, #1
   1af9a:	b.n	1af7a <btrfs_search_slot_for_read@@Base+0x3a>
   1af9c:	mov	r0, r4
   1af9e:	mov.w	r9, #0
   1afa2:	bl	1754c <btrfs_release_path@@Base>
   1afa6:	mov.w	r8, #0
   1afaa:	b.n	1af52 <btrfs_search_slot_for_read@@Base+0x12>
   1afac:	cbnz	r3, 1afe0 <btrfs_search_slot_for_read@@Base+0xa0>
   1afae:	mov	r1, r4
   1afb0:	mov	r0, r5
   1afb2:	bl	1acdc <btrfs_prev_leaf@@Base>
   1afb6:	cmp	r0, #0
   1afb8:	blt.n	1af7a <btrfs_search_slot_for_read@@Base+0x3a>
   1afba:	bne.n	1afce <btrfs_search_slot_for_read@@Base+0x8e>
   1afbc:	ldr	r2, [r4, #0]
   1afbe:	ldr	r3, [r4, #32]
   1afc0:	ldr.w	r2, [r2, #192]	; 0xc0
   1afc4:	cmp	r3, r2
   1afc6:	bne.n	1af78 <btrfs_search_slot_for_read@@Base+0x38>
   1afc8:	subs	r3, #1
   1afca:	str	r3, [r4, #32]
   1afcc:	b.n	1af7a <btrfs_search_slot_for_read@@Base+0x3a>
   1afce:	cmp.w	r8, #0
   1afd2:	beq.n	1af98 <btrfs_search_slot_for_read@@Base+0x58>
   1afd4:	mov	r0, r4
   1afd6:	mov.w	r9, #1
   1afda:	bl	1754c <btrfs_release_path@@Base>
   1afde:	b.n	1afa6 <btrfs_search_slot_for_read@@Base+0x66>
   1afe0:	subs	r3, #1
   1afe2:	mov	r0, r9
   1afe4:	str	r3, [r4, #32]
   1afe6:	b.n	1af7a <btrfs_search_slot_for_read@@Base+0x3a>

0001afe8 <btrfs_previous_item@@Base>:
   1afe8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1afec:	mov	r6, r2
   1afee:	ldr	r2, [pc, #144]	; (1b080 <btrfs_previous_item@@Base+0x98>)
   1aff0:	mov	r7, r3
   1aff2:	ldr	r3, [pc, #144]	; (1b084 <btrfs_previous_item@@Base+0x9c>)
   1aff4:	sub	sp, #28
   1aff6:	add	r2, pc
   1aff8:	mov	r5, r0
   1affa:	ldr.w	r8, [sp, #56]	; 0x38
   1affe:	mov	r4, r1
   1b000:	ldr	r3, [r2, r3]
   1b002:	mov	r9, sp
   1b004:	ldr	r3, [r3, #0]
   1b006:	str	r3, [sp, #20]
   1b008:	mov.w	r3, #0
   1b00c:	ldr	r3, [r4, #32]
   1b00e:	cbnz	r3, 1b02e <btrfs_previous_item@@Base+0x46>
   1b010:	mov	r1, r4
   1b012:	mov	r0, r5
   1b014:	bl	1acdc <btrfs_prev_leaf@@Base>
   1b018:	cbz	r0, 1b032 <btrfs_previous_item@@Base+0x4a>
   1b01a:	ldr	r2, [pc, #108]	; (1b088 <btrfs_previous_item@@Base+0xa0>)
   1b01c:	ldr	r3, [pc, #100]	; (1b084 <btrfs_previous_item@@Base+0x9c>)
   1b01e:	add	r2, pc
   1b020:	ldr	r3, [r2, r3]
   1b022:	ldr	r2, [r3, #0]
   1b024:	ldr	r3, [sp, #20]
   1b026:	eors	r2, r3
   1b028:	beq.n	1b078 <btrfs_previous_item@@Base+0x90>
   1b02a:	blx	8510 <__stack_chk_fail@plt>
   1b02e:	subs	r3, #1
   1b030:	str	r3, [r4, #32]
   1b032:	ldr	r0, [r4, #0]
   1b034:	ldr.w	r2, [r0, #192]	; 0xc0
   1b038:	cbnz	r2, 1b03e <btrfs_previous_item@@Base+0x56>
   1b03a:	movs	r0, #1
   1b03c:	b.n	1b01a <btrfs_previous_item@@Base+0x32>
   1b03e:	ldr	r3, [r4, #32]
   1b040:	mov	r1, r9
   1b042:	cmp	r3, r2
   1b044:	itt	eq
   1b046:	addeq.w	r3, r3, #4294967295	; 0xffffffff
   1b04a:	streq	r3, [r4, #32]
   1b04c:	ldr	r2, [r4, #32]
   1b04e:	bl	174a4 <rb_free_nodes@@Base+0x4b2>
   1b052:	ldrd	r0, r1, [sp]
   1b056:	cmp	r1, r7
   1b058:	it	eq
   1b05a:	cmpeq	r0, r6
   1b05c:	bcc.n	1b03a <btrfs_previous_item@@Base+0x52>
   1b05e:	ldrb.w	r3, [sp, #8]
   1b062:	cmp	r3, r8
   1b064:	beq.n	1b074 <btrfs_previous_item@@Base+0x8c>
   1b066:	cmp	r1, r7
   1b068:	it	eq
   1b06a:	cmpeq	r0, r6
   1b06c:	bne.n	1b00c <btrfs_previous_item@@Base+0x24>
   1b06e:	cmp	r3, r8
   1b070:	bge.n	1b00c <btrfs_previous_item@@Base+0x24>
   1b072:	b.n	1b03a <btrfs_previous_item@@Base+0x52>
   1b074:	movs	r0, #0
   1b076:	b.n	1b01a <btrfs_previous_item@@Base+0x32>
   1b078:	add	sp, #28
   1b07a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1b07e:	nop
   1b080:	ldrh	r6, [r1, #44]	; 0x2c
   1b082:	movs	r4, r0
   1b084:	lsls	r0, r4, #8
   1b086:	movs	r0, r0
   1b088:	ldrh	r6, [r4, #42]	; 0x2a
   1b08a:	movs	r4, r0

0001b08c <btrfs_previous_extent_item@@Base>:
   1b08c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1b090:	mov	r6, r2
   1b092:	ldr	r2, [pc, #144]	; (1b124 <btrfs_previous_extent_item@@Base+0x98>)
   1b094:	mov	r7, r3
   1b096:	ldr	r3, [pc, #144]	; (1b128 <btrfs_previous_extent_item@@Base+0x9c>)
   1b098:	sub	sp, #24
   1b09a:	add	r2, pc
   1b09c:	mov	r5, r0
   1b09e:	mov	r4, r1
   1b0a0:	mov	r8, sp
   1b0a2:	ldr	r3, [r2, r3]
   1b0a4:	ldr	r3, [r3, #0]
   1b0a6:	str	r3, [sp, #20]
   1b0a8:	mov.w	r3, #0
   1b0ac:	ldr	r3, [r4, #32]
   1b0ae:	cbnz	r3, 1b0ce <btrfs_previous_extent_item@@Base+0x42>
   1b0b0:	mov	r1, r4
   1b0b2:	mov	r0, r5
   1b0b4:	bl	1acdc <btrfs_prev_leaf@@Base>
   1b0b8:	cbz	r0, 1b0d2 <btrfs_previous_extent_item@@Base+0x46>
   1b0ba:	ldr	r2, [pc, #112]	; (1b12c <btrfs_previous_extent_item@@Base+0xa0>)
   1b0bc:	ldr	r3, [pc, #104]	; (1b128 <btrfs_previous_extent_item@@Base+0x9c>)
   1b0be:	add	r2, pc
   1b0c0:	ldr	r3, [r2, r3]
   1b0c2:	ldr	r2, [r3, #0]
   1b0c4:	ldr	r3, [sp, #20]
   1b0c6:	eors	r2, r3
   1b0c8:	beq.n	1b11e <btrfs_previous_extent_item@@Base+0x92>
   1b0ca:	blx	8510 <__stack_chk_fail@plt>
   1b0ce:	subs	r3, #1
   1b0d0:	str	r3, [r4, #32]
   1b0d2:	ldr	r0, [r4, #0]
   1b0d4:	ldr.w	r2, [r0, #192]	; 0xc0
   1b0d8:	cbnz	r2, 1b0de <btrfs_previous_extent_item@@Base+0x52>
   1b0da:	movs	r0, #1
   1b0dc:	b.n	1b0ba <btrfs_previous_extent_item@@Base+0x2e>
   1b0de:	ldr	r3, [r4, #32]
   1b0e0:	mov	r1, r8
   1b0e2:	cmp	r3, r2
   1b0e4:	itt	eq
   1b0e6:	addeq.w	r3, r3, #4294967295	; 0xffffffff
   1b0ea:	streq	r3, [r4, #32]
   1b0ec:	ldr	r2, [r4, #32]
   1b0ee:	bl	174a4 <rb_free_nodes@@Base+0x4b2>
   1b0f2:	ldrd	r0, r1, [sp]
   1b0f6:	cmp	r1, r7
   1b0f8:	it	eq
   1b0fa:	cmpeq	r0, r6
   1b0fc:	bcc.n	1b0da <btrfs_previous_extent_item@@Base+0x4e>
   1b0fe:	ldrb.w	r2, [sp, #8]
   1b102:	add.w	r3, r2, #88	; 0x58
   1b106:	uxtb	r3, r3
   1b108:	cmp	r3, #1
   1b10a:	bls.n	1b11a <btrfs_previous_extent_item@@Base+0x8e>
   1b10c:	cmp	r1, r7
   1b10e:	it	eq
   1b110:	cmpeq	r0, r6
   1b112:	bne.n	1b0ac <btrfs_previous_extent_item@@Base+0x20>
   1b114:	cmp	r2, #167	; 0xa7
   1b116:	bhi.n	1b0ac <btrfs_previous_extent_item@@Base+0x20>
   1b118:	b.n	1b0da <btrfs_previous_extent_item@@Base+0x4e>
   1b11a:	movs	r0, #0
   1b11c:	b.n	1b0ba <btrfs_previous_extent_item@@Base+0x2e>
   1b11e:	add	sp, #24
   1b120:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1b124:	ldrh	r2, [r5, #38]	; 0x26
   1b126:	movs	r4, r0
   1b128:	lsls	r0, r4, #8
   1b12a:	movs	r0, r0
   1b12c:	ldrh	r6, [r0, #38]	; 0x26
   1b12e:	movs	r4, r0

0001b130 <btrfs_next_extent_item@@Base>:
   1b130:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1b134:	mov	r6, r2
   1b136:	ldr	r2, [pc, #132]	; (1b1bc <btrfs_next_extent_item@@Base+0x8c>)
   1b138:	mov	r7, r3
   1b13a:	ldr	r3, [pc, #132]	; (1b1c0 <btrfs_next_extent_item@@Base+0x90>)
   1b13c:	sub	sp, #28
   1b13e:	add	r2, pc
   1b140:	mov	r5, r0
   1b142:	mov	r4, r1
   1b144:	mov.w	r8, #0
   1b148:	ldr	r3, [r2, r3]
   1b14a:	mov	r9, sp
   1b14c:	ldr	r3, [r3, #0]
   1b14e:	str	r3, [sp, #20]
   1b150:	mov.w	r3, #0
   1b154:	ldr	r2, [r4, #0]
   1b156:	ldr	r3, [r4, #32]
   1b158:	adds	r3, #1
   1b15a:	str	r3, [r4, #32]
   1b15c:	ldr.w	r2, [r2, #192]	; 0xc0
   1b160:	cmp	r3, r2
   1b162:	bcs.n	1b17e <btrfs_next_extent_item@@Base+0x4e>
   1b164:	ldr	r2, [r4, #32]
   1b166:	mov	r1, r9
   1b168:	ldr	r0, [r4, #0]
   1b16a:	bl	174a4 <rb_free_nodes@@Base+0x4b2>
   1b16e:	ldrd	r2, r3, [sp]
   1b172:	cmp	r7, r3
   1b174:	it	eq
   1b176:	cmpeq	r6, r2
   1b178:	bcs.n	1b1a4 <btrfs_next_extent_item@@Base+0x74>
   1b17a:	movs	r0, #1
   1b17c:	b.n	1b190 <btrfs_next_extent_item@@Base+0x60>
   1b17e:	strb.w	r8, [r4, #65]	; 0x41
   1b182:	mov	r1, r4
   1b184:	ldr.w	r0, [r5, #464]	; 0x1d0
   1b188:	bl	1ad64 <btrfs_next_sibling_tree_block@@Base>
   1b18c:	cmp	r0, #0
   1b18e:	beq.n	1b164 <btrfs_next_extent_item@@Base+0x34>
   1b190:	ldr	r2, [pc, #48]	; (1b1c4 <btrfs_next_extent_item@@Base+0x94>)
   1b192:	ldr	r3, [pc, #44]	; (1b1c0 <btrfs_next_extent_item@@Base+0x90>)
   1b194:	add	r2, pc
   1b196:	ldr	r3, [r2, r3]
   1b198:	ldr	r2, [r3, #0]
   1b19a:	ldr	r3, [sp, #20]
   1b19c:	eors	r2, r3
   1b19e:	beq.n	1b1b4 <btrfs_next_extent_item@@Base+0x84>
   1b1a0:	blx	8510 <__stack_chk_fail@plt>
   1b1a4:	ldrb.w	r3, [sp, #8]
   1b1a8:	adds	r3, #88	; 0x58
   1b1aa:	uxtb	r3, r3
   1b1ac:	cmp	r3, #1
   1b1ae:	bhi.n	1b154 <btrfs_next_extent_item@@Base+0x24>
   1b1b0:	movs	r0, #0
   1b1b2:	b.n	1b190 <btrfs_next_extent_item@@Base+0x60>
   1b1b4:	add	sp, #28
   1b1b6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1b1ba:	nop
   1b1bc:	ldrh	r6, [r0, #34]	; 0x22
   1b1be:	movs	r4, r0
   1b1c0:	lsls	r0, r4, #8
   1b1c2:	movs	r0, r0
   1b1c4:	ldrh	r0, [r6, #30]
   1b1c6:	movs	r4, r0

0001b1c8 <btrfs_uuid_tree_add@@Base>:
   1b1c8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b1cc:	mov	sl, r2
   1b1ce:	ldr	r2, [pc, #408]	; (1b368 <btrfs_uuid_tree_add@@Base+0x1a0>)
   1b1d0:	sub	sp, #60	; 0x3c
   1b1d2:	ldr	r3, [pc, #408]	; (1b36c <btrfs_uuid_tree_add@@Base+0x1a4>)
   1b1d4:	mov	r8, r0
   1b1d6:	add	r2, pc
   1b1d8:	mov	r9, r1
   1b1da:	ldr	r3, [r2, r3]
   1b1dc:	ldr	r3, [r3, #0]
   1b1de:	str	r3, [sp, #52]	; 0x34
   1b1e0:	mov.w	r3, #0
   1b1e4:	ldr	r3, [r0, #0]
   1b1e6:	ldr	r7, [r3, #52]	; 0x34
   1b1e8:	cbnz	r7, 1b214 <btrfs_uuid_tree_add@@Base+0x4c>
   1b1ea:	ldr	r1, [pc, #388]	; (1b370 <btrfs_uuid_tree_add@@Base+0x1a8>)
   1b1ec:	mvn.w	r4, #21
   1b1f0:	ldr	r0, [pc, #384]	; (1b374 <btrfs_uuid_tree_add@@Base+0x1ac>)
   1b1f2:	add	r1, pc
   1b1f4:	add.w	r1, r1, #510	; 0x1fe
   1b1f8:	add	r0, pc
   1b1fa:	bl	16af4 <__btrfs_warning@@Base>
   1b1fe:	ldr	r2, [pc, #376]	; (1b378 <btrfs_uuid_tree_add@@Base+0x1b0>)
   1b200:	ldr	r3, [pc, #360]	; (1b36c <btrfs_uuid_tree_add@@Base+0x1a4>)
   1b202:	add	r2, pc
   1b204:	ldr	r3, [r2, r3]
   1b206:	ldr	r2, [r3, #0]
   1b208:	ldr	r3, [sp, #52]	; 0x34
   1b20a:	eors	r2, r3
   1b20c:	beq.w	1b360 <btrfs_uuid_tree_add@@Base+0x198>
   1b210:	blx	8510 <__stack_chk_fail@plt>
   1b214:	bl	17544 <btrfs_alloc_path@@Base>
   1b218:	mov	r5, r0
   1b21a:	cmp	r0, #0
   1b21c:	beq.n	1b29a <btrfs_uuid_tree_add@@Base+0xd2>
   1b21e:	add	r2, sp, #32
   1b220:	mov	r0, r9
   1b222:	str	r2, [sp, #16]
   1b224:	mov	r1, r2
   1b226:	bl	16ce4 <btrfs_uuid_to_key@@Base>
   1b22a:	movs	r0, #0
   1b22c:	ldr	r2, [sp, #16]
   1b22e:	mov	r3, r5
   1b230:	mov	r1, r7
   1b232:	strd	r0, r0, [sp]
   1b236:	strb.w	sl, [sp, #40]	; 0x28
   1b23a:	bl	19930 <btrfs_search_slot@@Base>
   1b23e:	subs	r4, r0, #0
   1b240:	blt.n	1b29e <btrfs_uuid_tree_add@@Base+0xd6>
   1b242:	bne.n	1b294 <btrfs_uuid_tree_add@@Base+0xcc>
   1b244:	ldr	r0, [r5, #0]
   1b246:	movs	r2, #25
   1b248:	ldr	r3, [r5, #32]
   1b24a:	mla	r3, r2, r3, r0
   1b24e:	ldr.w	r6, [r3, #218]	; 0xda
   1b252:	ldr.w	fp, [r3, #214]	; 0xd6
   1b256:	lsls	r2, r6, #29
   1b258:	add.w	fp, fp, #101	; 0x65
   1b25c:	bne.n	1b28a <btrfs_uuid_tree_add@@Base+0xc2>
   1b25e:	add	r1, sp, #24
   1b260:	cbz	r6, 1b294 <btrfs_uuid_tree_add@@Base+0xcc>
   1b262:	movs	r3, #8
   1b264:	mov	r2, fp
   1b266:	strd	r0, r1, [sp, #16]
   1b26a:	bl	16a0e <read_extent_buffer@@Base>
   1b26e:	ldrd	r2, r3, [sp, #24]
   1b272:	ldrd	r0, r1, [sp, #96]	; 0x60
   1b276:	cmp	r1, r3
   1b278:	it	eq
   1b27a:	cmpeq	r0, r2
   1b27c:	beq.n	1b29e <btrfs_uuid_tree_add@@Base+0xd6>
   1b27e:	ldrd	r0, r1, [sp, #16]
   1b282:	add.w	fp, fp, #8
   1b286:	subs	r6, #8
   1b288:	b.n	1b260 <btrfs_uuid_tree_add@@Base+0x98>
   1b28a:	ldr	r0, [pc, #240]	; (1b37c <btrfs_uuid_tree_add@@Base+0x1b4>)
   1b28c:	mov	r1, r6
   1b28e:	add	r0, pc
   1b290:	bl	16af4 <__btrfs_warning@@Base>
   1b294:	mvn.w	r4, #1
   1b298:	b.n	1b29e <btrfs_uuid_tree_add@@Base+0xd6>
   1b29a:	mvn.w	r4, #11
   1b29e:	mov	r0, r5
   1b2a0:	bl	17572 <btrfs_free_path@@Base>
   1b2a4:	adds	r3, r4, #2
   1b2a6:	bne.n	1b1fe <btrfs_uuid_tree_add@@Base+0x36>
   1b2a8:	add	r3, sp, #32
   1b2aa:	mov	r0, r9
   1b2ac:	str	r3, [sp, #16]
   1b2ae:	mov	r1, r3
   1b2b0:	strb.w	sl, [sp, #40]	; 0x28
   1b2b4:	bl	16ce4 <btrfs_uuid_to_key@@Base>
   1b2b8:	bl	17544 <btrfs_alloc_path@@Base>
   1b2bc:	mov	r5, r0
   1b2be:	cmp	r0, #0
   1b2c0:	beq.n	1b35a <btrfs_uuid_tree_add@@Base+0x192>
   1b2c2:	movs	r2, #1
   1b2c4:	ldr	r3, [sp, #16]
   1b2c6:	str	r2, [sp, #4]
   1b2c8:	add	r6, sp, #24
   1b2ca:	mov	r2, r0
   1b2cc:	mov	r1, r7
   1b2ce:	mov	r0, r8
   1b2d0:	str	r6, [sp, #0]
   1b2d2:	mov.w	r9, #8
   1b2d6:	str.w	r9, [sp, #24]
   1b2da:	bl	1a700 <btrfs_insert_empty_items@@Base>
   1b2de:	subs	r4, r0, #0
   1b2e0:	blt.n	1b30e <btrfs_uuid_tree_add@@Base+0x146>
   1b2e2:	ldr	r4, [r5, #0]
   1b2e4:	movs	r2, #25
   1b2e6:	ldr	r3, [r5, #32]
   1b2e8:	mla	r3, r2, r3, r4
   1b2ec:	ldr.w	r2, [r3, #214]	; 0xd6
   1b2f0:	adds	r2, #101	; 0x65
   1b2f2:	ldrd	r0, r1, [sp, #96]	; 0x60
   1b2f6:	movs	r3, #8
   1b2f8:	strd	r0, r1, [sp, #24]
   1b2fc:	mov	r0, r4
   1b2fe:	mov	r1, r6
   1b300:	bl	16a24 <write_extent_buffer@@Base>
   1b304:	mov	r0, r4
   1b306:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   1b30a:	movs	r4, #0
   1b30c:	b.n	1b352 <btrfs_uuid_tree_add@@Base+0x18a>
   1b30e:	cmn.w	r4, #17
   1b312:	bne.n	1b336 <btrfs_uuid_tree_add@@Base+0x16e>
   1b314:	mov	r2, r9
   1b316:	mov	r1, r5
   1b318:	mov	r0, r7
   1b31a:	bl	19724 <btrfs_extend_item@@Base>
   1b31e:	ldr	r4, [r5, #0]
   1b320:	ldr	r3, [r5, #32]
   1b322:	movs	r2, #25
   1b324:	mla	r3, r2, r3, r4
   1b328:	ldr.w	r2, [r3, #218]	; 0xda
   1b32c:	ldr.w	r3, [r3, #214]	; 0xd6
   1b330:	add	r2, r3
   1b332:	adds	r2, #93	; 0x5d
   1b334:	b.n	1b2f2 <btrfs_uuid_tree_add@@Base+0x12a>
   1b336:	ldr.w	r2, [sp, #41]	; 0x29
   1b33a:	ldr.w	r3, [sp, #45]	; 0x2d
   1b33e:	ldr	r0, [pc, #64]	; (1b380 <btrfs_uuid_tree_add@@Base+0x1b8>)
   1b340:	strd	sl, r4, [sp, #8]
   1b344:	strd	r2, r3, [sp]
   1b348:	add	r0, pc
   1b34a:	ldrd	r2, r3, [sp, #32]
   1b34e:	bl	16af4 <__btrfs_warning@@Base>
   1b352:	mov	r0, r5
   1b354:	bl	17572 <btrfs_free_path@@Base>
   1b358:	b.n	1b1fe <btrfs_uuid_tree_add@@Base+0x36>
   1b35a:	mvn.w	r4, #11
   1b35e:	b.n	1b352 <btrfs_uuid_tree_add@@Base+0x18a>
   1b360:	mov	r0, r4
   1b362:	add	sp, #60	; 0x3c
   1b364:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b368:	ldrh	r6, [r5, #28]
   1b36a:	movs	r4, r0
   1b36c:	lsls	r0, r4, #8
   1b36e:	movs	r0, r0
   1b370:	lsrs	r6, r4, #20
   1b372:	movs	r2, r0
   1b374:	lsrs	r7, r3, #18
   1b376:	movs	r2, r0
   1b378:	ldrh	r2, [r0, #28]
   1b37a:	movs	r4, r0
   1b37c:	lsrs	r2, r5, #16
   1b37e:	movs	r2, r0
   1b380:	lsrs	r1, r2, #14
   1b382:	movs	r2, r0
   1b384:	movs	r0, r0
   1b386:	movs	r0, r0
   1b388:	push	{r4, r5, lr}
   1b38a:	ldrd	r4, r5, [r1]
   1b38e:	ldrd	r2, r3, [r0, #-56]	; 0x38
   1b392:	cmp	r3, r5
   1b394:	it	eq
   1b396:	cmpeq	r2, r4
   1b398:	bcc.n	1b3aa <btrfs_uuid_tree_add@@Base+0x1e2>
   1b39a:	cmp	r5, r3
   1b39c:	it	eq
   1b39e:	cmpeq	r4, r2
   1b3a0:	ite	cc
   1b3a2:	movcc.w	r0, #4294967295	; 0xffffffff
   1b3a6:	movcs	r0, #0
   1b3a8:	pop	{r4, r5, pc}
   1b3aa:	movs	r0, #1
   1b3ac:	b.n	1b3a8 <btrfs_uuid_tree_add@@Base+0x1e0>

0001b3ae <btrfs_fs_roots_compare_roots@@Base>:
   1b3ae:	subs	r1, #56	; 0x38
   1b3b0:	b.n	1b388 <btrfs_uuid_tree_add@@Base+0x1c0>
   1b3b2:	movs	r2, #0
   1b3b4:	addw	r3, r0, #2859	; 0xb2b
   1b3b8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1b3bc:	mov.w	r8, #0
   1b3c0:	ldr	r6, [r0, #72]	; 0x48
   1b3c2:	mov.w	r9, #0
   1b3c6:	ldr	r7, [r0, #76]	; 0x4c
   1b3c8:	mov	r0, r2
   1b3ca:	ldr	r5, [r3, #12]
   1b3cc:	ldr	r4, [r3, #8]
   1b3ce:	cmp	r5, r7
   1b3d0:	it	eq
   1b3d2:	cmpeq	r4, r6
   1b3d4:	beq.n	1b3e4 <btrfs_fs_roots_compare_roots@@Base+0x36>
   1b3d6:	cmp	r9, r5
   1b3d8:	it	eq
   1b3da:	cmpeq	r8, r4
   1b3dc:	ittt	cc
   1b3de:	movcc	r0, r2
   1b3e0:	movcc	r8, r4
   1b3e2:	movcc	r9, r5
   1b3e4:	adds	r2, #1
   1b3e6:	adds	r3, #168	; 0xa8
   1b3e8:	cmp	r2, #4
   1b3ea:	bne.n	1b3ca <btrfs_fs_roots_compare_roots@@Base+0x1c>
   1b3ec:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1b3f0:	ldr	r2, [pc, #60]	; (1b430 <btrfs_fs_roots_compare_roots@@Base+0x82>)
   1b3f2:	movs	r1, #16
   1b3f4:	ldr	r3, [pc, #60]	; (1b434 <btrfs_fs_roots_compare_roots@@Base+0x86>)
   1b3f6:	push	{r4, lr}
   1b3f8:	add	r2, pc
   1b3fa:	sub	sp, #72	; 0x48
   1b3fc:	add	r4, sp, #4
   1b3fe:	ldr	r3, [r2, r3]
   1b400:	mov	r0, r4
   1b402:	ldr	r3, [r3, #0]
   1b404:	str	r3, [sp, #68]	; 0x44
   1b406:	mov.w	r3, #0
   1b40a:	blx	86c4 <backtrace@plt>
   1b40e:	movs	r2, #2
   1b410:	mov	r1, r0
   1b412:	mov	r0, r4
   1b414:	blx	89c8 <backtrace_symbols_fd@plt>
   1b418:	ldr	r2, [pc, #28]	; (1b438 <btrfs_fs_roots_compare_roots@@Base+0x8a>)
   1b41a:	ldr	r3, [pc, #24]	; (1b434 <btrfs_fs_roots_compare_roots@@Base+0x86>)
   1b41c:	add	r2, pc
   1b41e:	ldr	r3, [r2, r3]
   1b420:	ldr	r2, [r3, #0]
   1b422:	ldr	r3, [sp, #68]	; 0x44
   1b424:	eors	r2, r3
   1b426:	beq.n	1b42c <btrfs_fs_roots_compare_roots@@Base+0x7e>
   1b428:	blx	8510 <__stack_chk_fail@plt>
   1b42c:	add	sp, #72	; 0x48
   1b42e:	pop	{r4, pc}
   1b430:	ldrh	r4, [r1, #12]
   1b432:	movs	r4, r0
   1b434:	lsls	r0, r4, #8
   1b436:	movs	r0, r0
   1b438:	ldrh	r0, [r5, #10]
   1b43a:	movs	r4, r0
   1b43c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b440:	mov	r5, r0
   1b442:	ldr.w	sl, [r1, #144]	; 0x90
   1b446:	mov	r4, r1
   1b448:	ldr.w	fp, [r1, #148]	; 0x94
   1b44c:	ldr.w	r8, [r0, #352]	; 0x160
   1b450:	ldr.w	r2, [r0, #384]	; 0x180
   1b454:	ldrd	r0, r1, [r1, #40]	; 0x28
   1b458:	cmp	r1, fp
   1b45a:	it	eq
   1b45c:	cmpeq	r0, sl
   1b45e:	bne.n	1b4e8 <btrfs_fs_roots_compare_roots@@Base+0x13a>
   1b460:	ldrb.w	r1, [r4, #196]	; 0xc4
   1b464:	cmp	r1, #7
   1b466:	bhi.n	1b4ee <btrfs_fs_roots_compare_roots@@Base+0x140>
   1b468:	ldr.w	r0, [r4, #192]	; 0xc0
   1b46c:	subs	r2, #101	; 0x65
   1b46e:	cbnz	r1, 1b486 <btrfs_fs_roots_compare_roots@@Base+0xd8>
   1b470:	ldr	r3, [pc, #136]	; (1b4fc <btrfs_fs_roots_compare_roots@@Base+0x14e>)
   1b472:	umull	r2, r3, r2, r3
   1b476:	lsrs	r3, r3, #3
   1b478:	cmp	r0, r3
   1b47a:	bhi.n	1b480 <btrfs_fs_roots_compare_roots@@Base+0xd2>
   1b47c:	cbnz	r0, 1b4e2 <btrfs_fs_roots_compare_roots@@Base+0x134>
   1b47e:	cbz	r1, 1b4e2 <btrfs_fs_roots_compare_roots@@Base+0x134>
   1b480:	mvn.w	r0, #3
   1b484:	b.n	1b4d6 <btrfs_fs_roots_compare_roots@@Base+0x128>
   1b486:	ldr	r3, [pc, #120]	; (1b500 <btrfs_fs_roots_compare_roots@@Base+0x152>)
   1b488:	b.n	1b472 <btrfs_fs_roots_compare_roots@@Base+0xc4>
   1b48a:	ldr.w	r3, [r5, #352]	; 0x160
   1b48e:	cmp	r3, r8
   1b490:	bne.n	1b4da <btrfs_fs_roots_compare_roots@@Base+0x12c>
   1b492:	ldr.w	r3, [r5, #308]	; 0x134
   1b496:	mov	r7, r9
   1b498:	ldr.w	r3, [r3, #188]	; 0xbc
   1b49c:	and.w	r6, r3, #1024	; 0x400
   1b4a0:	orrs.w	r3, r6, r7
   1b4a4:	beq.n	1b4da <btrfs_fs_roots_compare_roots@@Base+0x12c>
   1b4a6:	movs	r3, #16
   1b4a8:	add.w	r1, r8, r3
   1b4ac:	movs	r2, #32
   1b4ae:	mov	r0, r4
   1b4b0:	bl	169fc <memcmp_extent_buffer@@Base>
   1b4b4:	ldrb.w	r3, [r5, #364]	; 0x16c
   1b4b8:	ands.w	r3, r3, #64	; 0x40
   1b4bc:	clz	r0, r0
   1b4c0:	mov.w	r0, r0, lsr #5
   1b4c4:	bne.n	1b4f4 <btrfs_fs_roots_compare_roots@@Base+0x146>
   1b4c6:	cbnz	r0, 1b4f8 <btrfs_fs_roots_compare_roots@@Base+0x14a>
   1b4c8:	ldr.w	r8, [r8, #92]	; 0x5c
   1b4cc:	cmp.w	r8, #0
   1b4d0:	bne.n	1b48a <btrfs_fs_roots_compare_roots@@Base+0xdc>
   1b4d2:	mvn.w	r0, #1
   1b4d6:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b4da:	movs	r3, #16
   1b4dc:	movs	r2, #32
   1b4de:	mov	r1, r8
   1b4e0:	b.n	1b4ae <btrfs_fs_roots_compare_roots@@Base+0x100>
   1b4e2:	mov.w	r9, #0
   1b4e6:	b.n	1b4cc <btrfs_fs_roots_compare_roots@@Base+0x11e>
   1b4e8:	mov.w	r0, #4294967295	; 0xffffffff
   1b4ec:	b.n	1b4d6 <btrfs_fs_roots_compare_roots@@Base+0x128>
   1b4ee:	mvn.w	r0, #2
   1b4f2:	b.n	1b4d6 <btrfs_fs_roots_compare_roots@@Base+0x128>
   1b4f4:	movs	r0, #0
   1b4f6:	b.n	1b4d6 <btrfs_fs_roots_compare_roots@@Base+0x128>
   1b4f8:	mov	r0, r3
   1b4fa:	b.n	1b4d6 <btrfs_fs_roots_compare_roots@@Base+0x128>
   1b4fc:	strh	r7, [r3, #40]	; 0x28
   1b4fe:	str	r3, [r5, r7]
   1b500:	strh	r1, [r4, #30]
   1b502:	subs	r6, #15
   1b504:	b.w	8430 <free@plt>
   1b508:	cbz	r0, 1b51a <btrfs_fs_roots_compare_roots@@Base+0x16c>
   1b50a:	cmn.w	r0, #4096	; 0x1000
   1b50e:	bhi.n	1b518 <btrfs_fs_roots_compare_roots@@Base+0x16a>
   1b510:	ldr	r0, [r0, #84]	; 0x54
   1b512:	ubfx	r0, r0, #2, #1
   1b516:	bx	lr
   1b518:	movs	r0, #0
   1b51a:	bx	lr
   1b51c:	push	{r4, r5, r6, r7, lr}
   1b51e:	mov	r1, r3
   1b520:	ldr	r6, [pc, #100]	; (1b588 <btrfs_fs_roots_compare_roots@@Base+0x1da>)
   1b522:	sub	sp, #28
   1b524:	mov	r4, r0
   1b526:	mov	r0, r2
   1b528:	orrs.w	r3, r0, r1
   1b52c:	add	r6, pc
   1b52e:	ldr	r5, [sp, #48]	; 0x30
   1b530:	beq.n	1b576 <btrfs_fs_roots_compare_roots@@Base+0x1c8>
   1b532:	ldr.w	r3, [r4, #180]	; 0xb4
   1b536:	ldr.w	r2, [r4, #176]	; 0xb0
   1b53a:	cmp	r1, r3
   1b53c:	it	eq
   1b53e:	cmpeq	r0, r2
   1b540:	beq.n	1b576 <btrfs_fs_roots_compare_roots@@Base+0x1c8>
   1b542:	ldr	r7, [pc, #72]	; (1b58c <btrfs_fs_roots_compare_roots@@Base+0x1de>)
   1b544:	ldr	r6, [r6, r7]
   1b546:	strd	r2, r3, [sp, #16]
   1b54a:	ldrd	r2, r3, [r4, #40]	; 0x28
   1b54e:	strd	r0, r1, [sp, #8]
   1b552:	movs	r1, #1
   1b554:	strd	r2, r3, [sp]
   1b558:	ldr	r2, [pc, #52]	; (1b590 <btrfs_fs_roots_compare_roots@@Base+0x1e2>)
   1b55a:	ldr	r0, [r6, #0]
   1b55c:	add	r2, pc
   1b55e:	blx	8860 <__fprintf_chk@plt+0x4>
   1b562:	ldr	r3, [r4, #84]	; 0x54
   1b564:	cbz	r5, 1b57a <btrfs_fs_roots_compare_roots@@Base+0x1cc>
   1b566:	ldr	r0, [pc, #44]	; (1b594 <btrfs_fs_roots_compare_roots@@Base+0x1e6>)
   1b568:	orr.w	r3, r3, #1024	; 0x400
   1b56c:	ldr	r1, [r6, #0]
   1b56e:	add	r0, pc
   1b570:	str	r3, [r4, #84]	; 0x54
   1b572:	blx	8968 <fputs@plt+0x4>
   1b576:	movs	r0, #0
   1b578:	b.n	1b582 <btrfs_fs_roots_compare_roots@@Base+0x1d4>
   1b57a:	movs	r0, #1
   1b57c:	bic.w	r3, r3, #4
   1b580:	str	r3, [r4, #84]	; 0x54
   1b582:	add	sp, #28
   1b584:	pop	{r4, r5, r6, r7, pc}
   1b586:	nop
   1b588:	ldrh	r0, [r3, #2]
   1b58a:	movs	r4, r0
   1b58c:	lsls	r0, r6, #8
   1b58e:	movs	r0, r0
   1b590:	lsrs	r6, r1, #15
   1b592:	movs	r2, r0
   1b594:	lsrs	r1, r7, #15
   1b596:	movs	r2, r0
   1b598:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1b59c:	mov	r5, r2
   1b59e:	ldr	r2, [pc, #244]	; (1b694 <btrfs_fs_roots_compare_roots@@Base+0x2e6>)
   1b5a0:	sub	sp, #128	; 0x80
   1b5a2:	ldr	r3, [pc, #244]	; (1b698 <btrfs_fs_roots_compare_roots@@Base+0x2ea>)
   1b5a4:	movs	r6, #0
   1b5a6:	add	r2, pc
   1b5a8:	ldr.w	r8, [pc, #240]	; 1b69c <btrfs_fs_roots_compare_roots@@Base+0x2ee>
   1b5ac:	mov	r7, r0
   1b5ae:	mov	r4, r1
   1b5b0:	ldr	r3, [r2, r3]
   1b5b2:	mov	r1, r6
   1b5b4:	add	r0, sp, #48	; 0x30
   1b5b6:	movs	r2, #33	; 0x21
   1b5b8:	ldr	r3, [r3, #0]
   1b5ba:	str	r3, [sp, #124]	; 0x7c
   1b5bc:	mov.w	r3, #0
   1b5c0:	str	r6, [sp, #44]	; 0x2c
   1b5c2:	blx	87c4 <memset@plt+0x4>
   1b5c6:	add	r0, sp, #88	; 0x58
   1b5c8:	movs	r2, #33	; 0x21
   1b5ca:	mov	r1, r6
   1b5cc:	add	r8, pc
   1b5ce:	str	r6, [sp, #84]	; 0x54
   1b5d0:	blx	87c4 <memset@plt+0x4>
   1b5d4:	cmp	r5, #0
   1b5d6:	beq.n	1b658 <btrfs_fs_roots_compare_roots@@Base+0x2aa>
   1b5d8:	ldr	r3, [pc, #196]	; (1b6a0 <btrfs_fs_roots_compare_roots@@Base+0x2f2>)
   1b5da:	movs	r1, #1
   1b5dc:	adds	r5, #4
   1b5de:	ldr.w	r6, [r8, r3]
   1b5e2:	ldrd	r2, r3, [r4, #40]	; 0x28
   1b5e6:	strd	r2, r3, [sp]
   1b5ea:	ldr	r2, [pc, #184]	; (1b6a4 <btrfs_fs_roots_compare_roots@@Base+0x2f6>)
   1b5ec:	ldr	r0, [r6, #0]
   1b5ee:	add	r2, pc
   1b5f0:	blx	8860 <__fprintf_chk@plt+0x4>
   1b5f4:	cmp	r5, #3
   1b5f6:	bhi.n	1b658 <btrfs_fs_roots_compare_roots@@Base+0x2aa>
   1b5f8:	tbb	[pc, r5]
   1b5fc:	subs	r0, #63	; 0x3f
   1b5fe:	subs	r2, r0, #0
   1b600:	add	r5, sp, #28
   1b602:	mov	r0, r4
   1b604:	add	r4, sp, #84	; 0x54
   1b606:	movs	r2, #32
   1b608:	movs	r3, #16
   1b60a:	mov	r1, r5
   1b60c:	bl	16a0e <read_extent_buffer@@Base>
   1b610:	mov	r1, r4
   1b612:	mov	r0, r5
   1b614:	blx	83d8 <uuid_unparse@plt>
   1b618:	add	r3, sp, #44	; 0x2c
   1b61a:	ldr	r0, [r7, #0]
   1b61c:	mov	r1, r3
   1b61e:	str	r3, [sp, #20]
   1b620:	adds	r0, #16
   1b622:	blx	83d8 <uuid_unparse@plt>
   1b626:	ldr	r2, [pc, #128]	; (1b6a8 <btrfs_fs_roots_compare_roots@@Base+0x2fa>)
   1b628:	ldr	r3, [sp, #20]
   1b62a:	add	r2, pc
   1b62c:	str	r4, [sp, #0]
   1b62e:	ldr	r0, [r6, #0]
   1b630:	movs	r1, #1
   1b632:	blx	8860 <__fprintf_chk@plt+0x4>
   1b636:	b.n	1b658 <btrfs_fs_roots_compare_roots@@Base+0x2aa>
   1b638:	ldr.w	r2, [r4, #144]	; 0x90
   1b63c:	movs	r1, #1
   1b63e:	ldr.w	r3, [r4, #148]	; 0x94
   1b642:	strd	r2, r3, [sp, #8]
   1b646:	ldrd	r2, r3, [r4, #40]	; 0x28
   1b64a:	strd	r2, r3, [sp]
   1b64e:	ldr	r2, [pc, #92]	; (1b6ac <btrfs_fs_roots_compare_roots@@Base+0x2fe>)
   1b650:	ldr	r0, [r6, #0]
   1b652:	add	r2, pc
   1b654:	blx	8860 <__fprintf_chk@plt+0x4>
   1b658:	ldr	r2, [pc, #84]	; (1b6b0 <btrfs_fs_roots_compare_roots@@Base+0x302>)
   1b65a:	ldr	r3, [pc, #60]	; (1b698 <btrfs_fs_roots_compare_roots@@Base+0x2ea>)
   1b65c:	add	r2, pc
   1b65e:	ldr	r3, [r2, r3]
   1b660:	ldr	r2, [r3, #0]
   1b662:	ldr	r3, [sp, #124]	; 0x7c
   1b664:	eors	r2, r3
   1b666:	beq.n	1b68c <btrfs_fs_roots_compare_roots@@Base+0x2de>
   1b668:	blx	8510 <__stack_chk_fail@plt>
   1b66c:	ldr	r2, [pc, #68]	; (1b6b4 <btrfs_fs_roots_compare_roots@@Base+0x306>)
   1b66e:	movs	r3, #8
   1b670:	str	r3, [sp, #0]
   1b672:	add	r2, pc
   1b674:	ldrb.w	r3, [r4, #196]	; 0xc4
   1b678:	b.n	1b62e <btrfs_fs_roots_compare_roots@@Base+0x280>
   1b67a:	ldr	r2, [pc, #60]	; (1b6b8 <btrfs_fs_roots_compare_roots@@Base+0x30a>)
   1b67c:	movs	r1, #1
   1b67e:	ldr.w	r3, [r4, #192]	; 0xc0
   1b682:	ldr	r0, [r6, #0]
   1b684:	add	r2, pc
   1b686:	blx	8860 <__fprintf_chk@plt+0x4>
   1b68a:	b.n	1b658 <btrfs_fs_roots_compare_roots@@Base+0x2aa>
   1b68c:	add	sp, #128	; 0x80
   1b68e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1b692:	nop
   1b694:	strh	r6, [r3, #62]	; 0x3e
   1b696:	movs	r4, r0
   1b698:	lsls	r0, r4, #8
   1b69a:	movs	r0, r0
   1b69c:	strh	r0, [r7, #60]	; 0x3c
   1b69e:	movs	r4, r0
   1b6a0:	lsls	r0, r6, #8
   1b6a2:	movs	r0, r0
   1b6a4:	lsrs	r3, r2, #14
   1b6a6:	movs	r2, r0
   1b6a8:	lsrs	r5, r5, #13
   1b6aa:	movs	r2, r0
   1b6ac:	lsrs	r6, r4, #13
   1b6ae:	movs	r2, r0
   1b6b0:	strh	r0, [r5, #56]	; 0x38
   1b6b2:	movs	r4, r0
   1b6b4:	lsrs	r5, r5, #13
   1b6b6:	movs	r2, r0
   1b6b8:	lsrs	r7, r5, #13
   1b6ba:	movs	r2, r0
   1b6bc:	push	{r0, r1, r2, r3, r4, lr}
   1b6be:	ldr	r3, [pc, #40]	; (1b6e8 <btrfs_fs_roots_compare_roots@@Base+0x33a>)
   1b6c0:	ldr	r4, [pc, #40]	; (1b6ec <btrfs_fs_roots_compare_roots@@Base+0x33e>)
   1b6c2:	add	r3, pc
   1b6c4:	ldr	r4, [r3, r4]
   1b6c6:	movs	r3, #0
   1b6c8:	strd	r2, r1, [sp]
   1b6cc:	movs	r1, #1
   1b6ce:	strd	r0, r3, [sp, #8]
   1b6d2:	ldr	r2, [pc, #28]	; (1b6f0 <btrfs_fs_roots_compare_roots@@Base+0x342>)
   1b6d4:	ldr	r3, [pc, #28]	; (1b6f4 <btrfs_fs_roots_compare_roots@@Base+0x346>)
   1b6d6:	add	r2, pc
   1b6d8:	ldr	r0, [r4, #0]
   1b6da:	add	r3, pc
   1b6dc:	blx	8860 <__fprintf_chk@plt+0x4>
   1b6e0:	bl	1b3f0 <btrfs_fs_roots_compare_roots@@Base+0x42>
   1b6e4:	blx	8980 <abort@plt>
   1b6e8:	strh	r2, [r0, #54]	; 0x36
   1b6ea:	movs	r4, r0
   1b6ec:	lsls	r0, r6, #8
   1b6ee:	movs	r0, r0
   1b6f0:	bhi.n	1b6e6 <btrfs_fs_roots_compare_roots@@Base+0x338>
   1b6f2:	movs	r1, r0
   1b6f4:	lsrs	r7, r5, #12
   1b6f6:	movs	r2, r0
   1b6f8:	push	{r0, r1, r2, r3, r4, lr}
   1b6fa:	ldr	r4, [pc, #40]	; (1b724 <btrfs_fs_roots_compare_roots@@Base+0x376>)
   1b6fc:	ldr	r5, [pc, #40]	; (1b728 <btrfs_fs_roots_compare_roots@@Base+0x37a>)
   1b6fe:	add	r4, pc
   1b700:	ldr	r4, [r4, r5]
   1b702:	strd	r2, r1, [sp]
   1b706:	movs	r1, #1
   1b708:	strd	r0, r3, [sp, #8]
   1b70c:	ldr	r2, [pc, #28]	; (1b72c <btrfs_fs_roots_compare_roots@@Base+0x37e>)
   1b70e:	ldr	r3, [pc, #32]	; (1b730 <btrfs_fs_roots_compare_roots@@Base+0x382>)
   1b710:	add	r2, pc
   1b712:	ldr	r0, [r4, #0]
   1b714:	add	r3, pc
   1b716:	blx	8860 <__fprintf_chk@plt+0x4>
   1b71a:	bl	1b3f0 <btrfs_fs_roots_compare_roots@@Base+0x42>
   1b71e:	blx	8980 <abort@plt>
   1b722:	nop
   1b724:	strh	r6, [r0, #52]	; 0x34
   1b726:	movs	r4, r0
   1b728:	lsls	r0, r6, #8
   1b72a:	movs	r0, r0
   1b72c:	bvc.n	1b654 <btrfs_fs_roots_compare_roots@@Base+0x2a6>
   1b72e:	movs	r1, r0
   1b730:	lsrs	r5, r6, #11
   1b732:	movs	r2, r0
   1b734:	push	{r3, lr}
   1b736:	cbz	r3, 1b73c <btrfs_fs_roots_compare_roots@@Base+0x38e>
   1b738:	bl	1b6f8 <btrfs_fs_roots_compare_roots@@Base+0x34a>
   1b73c:	pop	{r3, pc}

0001b73e <btrfs_csum_data@@Base>:
   1b73e:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1b742:	mov	r4, r2
   1b744:	ldr.w	r8, [pc, #120]	; 1b7c0 <btrfs_csum_data@@Base+0x82>
   1b748:	mov	r7, r0
   1b74a:	mov	r5, r1
   1b74c:	movs	r2, #32
   1b74e:	movs	r1, #0
   1b750:	mov	r0, r4
   1b752:	add	r8, pc
   1b754:	mov	r6, r3
   1b756:	blx	87c4 <memset@plt+0x4>
   1b75a:	cmp	r7, #3
   1b75c:	bhi.n	1b79e <btrfs_csum_data@@Base+0x60>
   1b75e:	tbb	[pc, r7]
   1b762:	lsrs	r2, r0, #4
   1b764:	asrs	r0, r2, #28
   1b766:	mov	r2, r4
   1b768:	mov	r1, r6
   1b76a:	mov	r0, r5
   1b76c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1b770:	b.w	33184 <hash_crc32c@@Base>
   1b774:	mov	r2, r4
   1b776:	mov	r1, r6
   1b778:	mov	r0, r5
   1b77a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1b77e:	b.w	3319c <hash_xxhash@@Base>
   1b782:	mov	r2, r4
   1b784:	mov	r1, r6
   1b786:	mov	r0, r5
   1b788:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1b78c:	b.w	331ec <hash_sha256@@Base>
   1b790:	mov	r2, r4
   1b792:	mov	r1, r6
   1b794:	mov	r0, r5
   1b796:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1b79a:	b.w	33248 <hash_blake2b@@Base>
   1b79e:	ldr	r3, [pc, #36]	; (1b7c4 <btrfs_csum_data@@Base+0x86>)
   1b7a0:	movs	r1, #1
   1b7a2:	ldr	r2, [pc, #36]	; (1b7c8 <btrfs_csum_data@@Base+0x8a>)
   1b7a4:	ldr.w	r0, [r8, r3]
   1b7a8:	add	r2, pc
   1b7aa:	mov	r3, r7
   1b7ac:	ldr	r0, [r0, #0]
   1b7ae:	blx	8860 <__fprintf_chk@plt+0x4>
   1b7b2:	ldr	r1, [pc, #24]	; (1b7cc <btrfs_csum_data@@Base+0x8e>)
   1b7b4:	ldr	r0, [pc, #24]	; (1b7d0 <btrfs_csum_data@@Base+0x92>)
   1b7b6:	movs	r2, #157	; 0x9d
   1b7b8:	add	r1, pc
   1b7ba:	add	r0, pc
   1b7bc:	bl	1b6bc <btrfs_fs_roots_compare_roots@@Base+0x30e>
   1b7c0:	strh	r2, [r6, #48]	; 0x30
   1b7c2:	movs	r4, r0
   1b7c4:	lsls	r0, r6, #8
   1b7c6:	movs	r0, r0
   1b7c8:	lsrs	r3, r5, #9
   1b7ca:	movs	r2, r0
   1b7cc:	asrs	r5, r0, #13
   1b7ce:	movs	r2, r0
   1b7d0:	lsls	r0, r1, #18
   1b7d2:	movs	r2, r0

0001b7d4 <csum_tree_block_size@@Base>:
   1b7d4:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1b7d8:	mov	r4, r2
   1b7da:	ldr	r2, [pc, #144]	; (1b86c <csum_tree_block_size@@Base+0x98>)
   1b7dc:	mov	r5, r0
   1b7de:	mov	r0, r3
   1b7e0:	ldr	r3, [pc, #140]	; (1b870 <csum_tree_block_size@@Base+0x9c>)
   1b7e2:	add	r2, pc
   1b7e4:	sub	sp, #56	; 0x38
   1b7e6:	add	r7, sp, #20
   1b7e8:	ldr.w	r8, [pc, #136]	; 1b874 <csum_tree_block_size@@Base+0xa0>
   1b7ec:	ldr	r3, [r2, r3]
   1b7ee:	mov	r6, r1
   1b7f0:	add.w	r1, r5, #128	; 0x80
   1b7f4:	mov	r2, r7
   1b7f6:	ldr	r3, [r3, #0]
   1b7f8:	str	r3, [sp, #52]	; 0x34
   1b7fa:	mov.w	r3, #0
   1b7fe:	ldr	r3, [r5, #76]	; 0x4c
   1b800:	add	r8, pc
   1b802:	subs	r3, #32
   1b804:	bl	1b73e <btrfs_csum_data@@Base>
   1b808:	mov	r3, r6
   1b80a:	cbz	r4, 1b856 <csum_tree_block_size@@Base+0x82>
   1b80c:	movs	r2, #0
   1b80e:	mov	r1, r7
   1b810:	mov	r0, r5
   1b812:	bl	169fc <memcmp_extent_buffer@@Base>
   1b816:	mov	r4, r0
   1b818:	cbz	r0, 1b842 <csum_tree_block_size@@Base+0x6e>
   1b81a:	ldrb.w	r2, [r5, #96]	; 0x60
   1b81e:	movs	r4, #1
   1b820:	ldr	r3, [pc, #84]	; (1b878 <csum_tree_block_size@@Base+0xa4>)
   1b822:	ldrd	r0, r1, [r5, #40]	; 0x28
   1b826:	ldr.w	r3, [r8, r3]
   1b82a:	str	r2, [sp, #12]
   1b82c:	ldrb.w	r2, [sp, #20]
   1b830:	strd	r0, r1, [sp]
   1b834:	movs	r1, #1
   1b836:	str	r2, [sp, #8]
   1b838:	ldr	r2, [pc, #64]	; (1b87c <csum_tree_block_size@@Base+0xa8>)
   1b83a:	ldr	r0, [r3, #0]
   1b83c:	add	r2, pc
   1b83e:	blx	8860 <__fprintf_chk@plt+0x4>
   1b842:	ldr	r2, [pc, #60]	; (1b880 <csum_tree_block_size@@Base+0xac>)
   1b844:	ldr	r3, [pc, #40]	; (1b870 <csum_tree_block_size@@Base+0x9c>)
   1b846:	add	r2, pc
   1b848:	ldr	r3, [r2, r3]
   1b84a:	ldr	r2, [r3, #0]
   1b84c:	ldr	r3, [sp, #52]	; 0x34
   1b84e:	eors	r2, r3
   1b850:	beq.n	1b862 <csum_tree_block_size@@Base+0x8e>
   1b852:	blx	8510 <__stack_chk_fail@plt>
   1b856:	mov	r2, r4
   1b858:	mov	r1, r7
   1b85a:	mov	r0, r5
   1b85c:	bl	16a24 <write_extent_buffer@@Base>
   1b860:	b.n	1b842 <csum_tree_block_size@@Base+0x6e>
   1b862:	mov	r0, r4
   1b864:	add	sp, #56	; 0x38
   1b866:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1b86a:	nop
   1b86c:	strh	r2, [r4, #44]	; 0x2c
   1b86e:	movs	r4, r0
   1b870:	lsls	r0, r4, #8
   1b872:	movs	r0, r0
   1b874:	strh	r4, [r0, #44]	; 0x2c
   1b876:	movs	r4, r0
   1b878:	lsls	r0, r6, #8
   1b87a:	movs	r0, r0
   1b87c:	lsrs	r5, r6, #7
   1b87e:	movs	r2, r0
   1b880:	strh	r6, [r7, #40]	; 0x28
   1b882:	movs	r4, r0

0001b884 <verify_tree_block_csum_silent@@Base>:
   1b884:	push	{r4, r5, r6, lr}
   1b886:	mov	r4, r0
   1b888:	mov	r0, r2
   1b88a:	ldr	r2, [pc, #76]	; (1b8d8 <verify_tree_block_csum_silent@@Base+0x54>)
   1b88c:	ldr	r3, [pc, #76]	; (1b8dc <verify_tree_block_csum_silent@@Base+0x58>)
   1b88e:	sub	sp, #40	; 0x28
   1b890:	add	r2, pc
   1b892:	add	r5, sp, #4
   1b894:	mov	r6, r1
   1b896:	add.w	r1, r4, #128	; 0x80
   1b89a:	ldr	r3, [r2, r3]
   1b89c:	mov	r2, r5
   1b89e:	ldr	r3, [r3, #0]
   1b8a0:	str	r3, [sp, #36]	; 0x24
   1b8a2:	mov.w	r3, #0
   1b8a6:	ldr	r3, [r4, #76]	; 0x4c
   1b8a8:	subs	r3, #32
   1b8aa:	bl	1b73e <btrfs_csum_data@@Base>
   1b8ae:	mov	r3, r6
   1b8b0:	movs	r2, #0
   1b8b2:	mov	r1, r5
   1b8b4:	mov	r0, r4
   1b8b6:	bl	169fc <memcmp_extent_buffer@@Base>
   1b8ba:	ldr	r2, [pc, #36]	; (1b8e0 <verify_tree_block_csum_silent@@Base+0x5c>)
   1b8bc:	ldr	r3, [pc, #28]	; (1b8dc <verify_tree_block_csum_silent@@Base+0x58>)
   1b8be:	add	r2, pc
   1b8c0:	ldr	r3, [r2, r3]
   1b8c2:	subs	r0, #0
   1b8c4:	it	ne
   1b8c6:	movne	r0, #1
   1b8c8:	ldr	r2, [r3, #0]
   1b8ca:	ldr	r3, [sp, #36]	; 0x24
   1b8cc:	eors	r2, r3
   1b8ce:	beq.n	1b8d4 <verify_tree_block_csum_silent@@Base+0x50>
   1b8d0:	blx	8510 <__stack_chk_fail@plt>
   1b8d4:	add	sp, #40	; 0x28
   1b8d6:	pop	{r4, r5, r6, pc}
   1b8d8:	strh	r4, [r6, #38]	; 0x26
   1b8da:	movs	r4, r0
   1b8dc:	lsls	r0, r4, #8
   1b8de:	movs	r0, r0
   1b8e0:	strh	r6, [r0, #38]	; 0x26
   1b8e2:	movs	r4, r0

0001b8e4 <csum_tree_block@@Base>:
   1b8e4:	push	{r4, r5, r6, lr}
   1b8e6:	mov	r4, r0
   1b8e8:	ldr.w	r0, [r0, #308]	; 0x134
   1b8ec:	mov	r5, r1
   1b8ee:	mov	r6, r2
   1b8f0:	bl	17504 <btrfs_super_csum_size@@Base>
   1b8f4:	ldr.w	r3, [r4, #308]	; 0x134
   1b8f8:	ldrh.w	r3, [r3, #196]	; 0xc4
   1b8fc:	mov	r1, r0
   1b8fe:	cbz	r6, 1b914 <csum_tree_block@@Base+0x30>
   1b900:	ldrb.w	r2, [r4, #364]	; 0x16c
   1b904:	lsls	r2, r2, #26
   1b906:	bpl.n	1b914 <csum_tree_block@@Base+0x30>
   1b908:	mov	r0, r5
   1b90a:	mov	r2, r3
   1b90c:	ldmia.w	sp!, {r4, r5, r6, lr}
   1b910:	b.w	1b884 <verify_tree_block_csum_silent@@Base>
   1b914:	mov	r2, r6
   1b916:	mov	r0, r5
   1b918:	ldmia.w	sp!, {r4, r5, r6, lr}
   1b91c:	b.w	1b7d4 <csum_tree_block_size@@Base>

0001b920 <btrfs_find_tree_block@@Base>:
   1b920:	adds	r0, #64	; 0x40
   1b922:	b.w	1638c <find_extent_buffer@@Base>

0001b926 <btrfs_find_create_tree_block@@Base>:
   1b926:	push	{r0, r1, r2, lr}
   1b928:	ldr.w	r1, [r0, #384]	; 0x180
   1b92c:	str	r1, [sp, #0]
   1b92e:	bl	16412 <alloc_extent_buffer@@Base>
   1b932:	add	sp, #12
   1b934:	ldr.w	pc, [sp], #4

0001b938 <read_whole_eb@@Base>:
   1b938:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b93c:	sub	sp, #60	; 0x3c
   1b93e:	ldr	r3, [pc, #328]	; (1ba88 <read_whole_eb@@Base+0x150>)
   1b940:	mov	r7, r0
   1b942:	str	r2, [sp, #16]
   1b944:	mov	r4, r1
   1b946:	ldr	r2, [pc, #324]	; (1ba8c <read_whole_eb@@Base+0x154>)
   1b948:	movs	r6, #0
   1b94a:	ldr	r5, [r1, #76]	; 0x4c
   1b94c:	add	r2, pc
   1b94e:	ldr.w	r9, [pc, #320]	; 1ba90 <read_whole_eb@@Base+0x158>
   1b952:	ldr	r3, [r2, r3]
   1b954:	add	r9, pc
   1b956:	ldr	r3, [r3, #0]
   1b958:	str	r3, [sp, #52]	; 0x34
   1b95a:	mov.w	r3, #0
   1b95e:	add	r3, sp, #36	; 0x24
   1b960:	str	r6, [sp, #36]	; 0x24
   1b962:	str	r3, [sp, #20]
   1b964:	add	r3, sp, #40	; 0x28
   1b966:	str	r3, [sp, #24]
   1b968:	cbnz	r5, 1b982 <read_whole_eb@@Base+0x4a>
   1b96a:	mov	r0, r5
   1b96c:	ldr	r2, [pc, #292]	; (1ba94 <read_whole_eb@@Base+0x15c>)
   1b96e:	ldr	r3, [pc, #280]	; (1ba88 <read_whole_eb@@Base+0x150>)
   1b970:	add	r2, pc
   1b972:	ldr	r3, [r2, r3]
   1b974:	ldr	r2, [r3, #0]
   1b976:	ldr	r3, [sp, #52]	; 0x34
   1b978:	eors	r2, r3
   1b97a:	beq.w	1ba80 <read_whole_eb@@Base+0x148>
   1b97e:	blx	8510 <__stack_chk_fail@plt>
   1b982:	ldrb.w	r1, [r7, #364]	; 0x16c
   1b986:	mov	sl, r5
   1b988:	mov.w	fp, #0
   1b98c:	ldrd	r2, r3, [r4, #40]	; 0x28
   1b990:	ands.w	r1, r1, #4
   1b994:	strd	sl, fp, [sp, #40]	; 0x28
   1b998:	bne.n	1ba42 <read_whole_eb@@Base+0x10a>
   1b99a:	cmp	r3, #0
   1b99c:	it	eq
   1b99e:	cmpeq.w	r2, #65536	; 0x10000
   1b9a2:	beq.n	1ba42 <read_whole_eb@@Base+0x10a>
   1b9a4:	ldr	r0, [sp, #16]
   1b9a6:	adds	r2, r2, r6
   1b9a8:	str	r1, [sp, #12]
   1b9aa:	adc.w	r3, r3, #0
   1b9ae:	str	r0, [sp, #8]
   1b9b0:	ldr	r0, [sp, #20]
   1b9b2:	str	r0, [sp, #4]
   1b9b4:	ldr	r0, [sp, #24]
   1b9b6:	str	r0, [sp, #0]
   1b9b8:	mov	r0, r7
   1b9ba:	bl	29520 <btrfs_map_block@@Base>
   1b9be:	mov	r1, r0
   1b9c0:	cbz	r0, 1b9f0 <read_whole_eb@@Base+0xb8>
   1b9c2:	ldr	r3, [pc, #212]	; (1ba98 <read_whole_eb@@Base+0x160>)
   1b9c4:	movs	r2, #0
   1b9c6:	ldr.w	r0, [r9, r3]
   1b9ca:	ldrd	r3, r1, [r4, #40]	; 0x28
   1b9ce:	adds	r3, r6, r3
   1b9d0:	adc.w	r2, r1, r2
   1b9d4:	strd	r3, r2, [sp]
   1b9d8:	ldr	r2, [pc, #192]	; (1ba9c <read_whole_eb@@Base+0x164>)
   1b9da:	movs	r1, #1
   1b9dc:	ldr	r0, [r0, #0]
   1b9de:	add	r2, pc
   1b9e0:	blx	8860 <__fprintf_chk@plt+0x4>
   1b9e4:	ldr	r0, [sp, #36]	; 0x24
   1b9e6:	blx	8434 <free@plt+0x4>
   1b9ea:	mvn.w	r0, #4
   1b9ee:	b.n	1b96c <read_whole_eb@@Base+0x34>
   1b9f0:	ldr	r0, [sp, #36]	; 0x24
   1b9f2:	ldr.w	ip, [r0, #8]
   1b9f6:	ldr.w	r3, [ip, #24]
   1b9fa:	cmp	r3, #0
   1b9fc:	ble.n	1b9e6 <read_whole_eb@@Base+0xae>
   1b9fe:	str	r3, [r4, #88]	; 0x58
   1ba00:	ldrd	r3, r2, [ip, #16]
   1ba04:	str	r1, [sp, #28]
   1ba06:	adds	r3, #1
   1ba08:	adc.w	r2, r2, #0
   1ba0c:	strd	r3, r2, [ip, #16]
   1ba10:	ldrd	r2, r3, [r0, #16]
   1ba14:	strd	r2, r3, [r4, #48]	; 0x30
   1ba18:	blx	8434 <free@plt+0x4>
   1ba1c:	ldrd	r2, r3, [sp, #40]	; 0x28
   1ba20:	ldr	r1, [sp, #28]
   1ba22:	cmp	fp, r3
   1ba24:	it	eq
   1ba26:	cmpeq	r5, r2
   1ba28:	str	r1, [sp, #36]	; 0x24
   1ba2a:	bcc.n	1ba7a <read_whole_eb@@Base+0x142>
   1ba2c:	ldr	r2, [sp, #40]	; 0x28
   1ba2e:	mov	r1, r6
   1ba30:	mov	r0, r4
   1ba32:	bl	1653e <read_extent_from_disk@@Base>
   1ba36:	cmp	r0, #0
   1ba38:	bne.n	1b9ea <read_whole_eb@@Base+0xb2>
   1ba3a:	ldr	r3, [sp, #40]	; 0x28
   1ba3c:	add	r6, r3
   1ba3e:	subs	r5, r5, r3
   1ba40:	b.n	1b968 <read_whole_eb@@Base+0x30>
   1ba42:	ldr.w	r0, [r7, #352]	; 0x160
   1ba46:	ldr.w	r1, [r0, #72]!
   1ba4a:	cmp	r1, r0
   1ba4c:	bne.n	1ba66 <read_whole_eb@@Base+0x12e>
   1ba4e:	ldr	r0, [r1, #24]
   1ba50:	strd	r2, r3, [r4, #48]	; 0x30
   1ba54:	str	r0, [r4, #88]	; 0x58
   1ba56:	ldrd	r3, r2, [r1, #16]
   1ba5a:	adds	r3, #1
   1ba5c:	adc.w	r2, r2, #0
   1ba60:	strd	r3, r2, [r1, #16]
   1ba64:	b.n	1ba2c <read_whole_eb@@Base+0xf4>
   1ba66:	ldrd	sl, fp, [r1, #64]	; 0x40
   1ba6a:	cmp.w	fp, #0
   1ba6e:	it	eq
   1ba70:	cmpeq.w	sl, #1
   1ba74:	beq.n	1ba4e <read_whole_eb@@Base+0x116>
   1ba76:	ldr	r1, [r1, #0]
   1ba78:	b.n	1ba4a <read_whole_eb@@Base+0x112>
   1ba7a:	strd	sl, fp, [sp, #40]	; 0x28
   1ba7e:	b.n	1ba2c <read_whole_eb@@Base+0xf4>
   1ba80:	add	sp, #60	; 0x3c
   1ba82:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ba86:	nop
   1ba88:	lsls	r0, r4, #8
   1ba8a:	movs	r0, r0
   1ba8c:	strh	r0, [r7, #32]
   1ba8e:	movs	r4, r0
   1ba90:	strh	r0, [r6, #32]
   1ba92:	movs	r4, r0
   1ba94:	strh	r4, [r2, #32]
   1ba96:	movs	r4, r0
   1ba98:	lsls	r0, r6, #8
   1ba9a:	movs	r0, r0
   1ba9c:			; <UNDEFINED> instruction: 0xf7da0001

0001baa0 <read_extent_data@@Base>:
   1baa0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1baa4:	mov	r6, r1
   1baa6:	ldr	r5, [pc, #176]	; (1bb58 <read_extent_data@@Base+0xb8>)
   1baa8:	sub	sp, #28
   1baaa:	ldr	r1, [pc, #176]	; (1bb5c <read_extent_data@@Base+0xbc>)
   1baac:	mov	sl, r2
   1baae:	add	r5, pc
   1bab0:	ldr	r4, [sp, #64]	; 0x40
   1bab2:	mov	r7, r3
   1bab4:	ldr.w	fp, [pc, #168]	; 1bb60 <read_extent_data@@Base+0xc0>
   1bab8:	ldr	r1, [r5, r1]
   1baba:	ldr	r5, [sp, #68]	; 0x44
   1babc:	add	fp, pc
   1babe:	ldr	r1, [r1, #0]
   1bac0:	str	r1, [sp, #20]
   1bac2:	mov.w	r1, #0
   1bac6:	ldrd	r8, r9, [r4]
   1baca:	movs	r1, #0
   1bacc:	str	r1, [sp, #12]
   1bace:	str	r5, [sp, #8]
   1bad0:	add	r5, sp, #16
   1bad2:	strd	r4, r5, [sp]
   1bad6:	str	r1, [sp, #16]
   1bad8:	bl	29520 <btrfs_map_block@@Base>
   1badc:	mov	r5, r0
   1bade:	cbz	r0, 1bb10 <read_extent_data@@Base+0x70>
   1bae0:	ldr	r3, [pc, #128]	; (1bb64 <read_extent_data@@Base+0xc4>)
   1bae2:	movs	r1, #1
   1bae4:	ldr	r2, [pc, #128]	; (1bb68 <read_extent_data@@Base+0xc8>)
   1bae6:	ldr.w	r3, [fp, r3]
   1baea:	add	r2, pc
   1baec:	strd	sl, r7, [sp]
   1baf0:	ldr	r0, [r3, #0]
   1baf2:	blx	8860 <__fprintf_chk@plt+0x4>
   1baf6:	ldr	r0, [sp, #16]
   1baf8:	blx	8434 <free@plt+0x4>
   1bafc:	ldr	r2, [pc, #108]	; (1bb6c <read_extent_data@@Base+0xcc>)
   1bafe:	ldr	r3, [pc, #92]	; (1bb5c <read_extent_data@@Base+0xbc>)
   1bb00:	add	r2, pc
   1bb02:	ldr	r3, [r2, r3]
   1bb04:	ldr	r2, [r3, #0]
   1bb06:	ldr	r3, [sp, #20]
   1bb08:	eors	r2, r3
   1bb0a:	beq.n	1bb50 <read_extent_data@@Base+0xb0>
   1bb0c:	blx	8510 <__stack_chk_fail@plt>
   1bb10:	ldr	r1, [sp, #16]
   1bb12:	ldrd	r2, r3, [r4]
   1bb16:	ldr	r0, [r1, #8]
   1bb18:	cmp	r9, r3
   1bb1a:	it	eq
   1bb1c:	cmpeq	r8, r2
   1bb1e:	it	cc
   1bb20:	strdcc	r8, r9, [r4]
   1bb24:	ldr	r0, [r0, #24]
   1bb26:	cmp	r0, #0
   1bb28:	bge.n	1bb30 <read_extent_data@@Base+0x90>
   1bb2a:	mvn.w	r5, #4
   1bb2e:	b.n	1baf6 <read_extent_data@@Base+0x56>
   1bb30:	ldrd	r2, r3, [r1, #16]
   1bb34:	mov	r1, r6
   1bb36:	strd	r2, r3, [sp]
   1bb3a:	ldr	r2, [r4, #0]
   1bb3c:	blx	8610 <pread64@plt>
   1bb40:	ldrd	r2, r3, [r4]
   1bb44:	asrs	r1, r0, #31
   1bb46:	cmp	r1, r3
   1bb48:	it	eq
   1bb4a:	cmpeq	r0, r2
   1bb4c:	beq.n	1baf6 <read_extent_data@@Base+0x56>
   1bb4e:	b.n	1bb2a <read_extent_data@@Base+0x8a>
   1bb50:	mov	r0, r5
   1bb52:	add	sp, #28
   1bb54:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bb58:	strh	r6, [r2, #22]
   1bb5a:	movs	r4, r0
   1bb5c:	lsls	r0, r4, #8
   1bb5e:	movs	r0, r0
   1bb60:	strh	r0, [r1, #22]
   1bb62:	movs	r4, r0
   1bb64:	lsls	r0, r6, #8
   1bb66:	movs	r0, r0
   1bb68:	lsls	r6, r7, #29
   1bb6a:	movs	r2, r0
   1bb6c:	strh	r4, [r0, #20]
   1bb6e:	movs	r4, r0

0001bb70 <write_and_map_eb@@Base>:
   1bb70:	ldr	r2, [pc, #248]	; (1bc6c <write_and_map_eb@@Base+0xfc>)
   1bb72:	ldr	r3, [pc, #252]	; (1bc70 <write_and_map_eb@@Base+0x100>)
   1bb74:	add	r2, pc
   1bb76:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1bb7a:	sub	sp, #48	; 0x30
   1bb7c:	ldr	r3, [r2, r3]
   1bb7e:	mov	r5, r1
   1bb80:	ldr	r2, [r1, #76]	; 0x4c
   1bb82:	mov	r6, r0
   1bb84:	ldr	r3, [r3, #0]
   1bb86:	str	r3, [sp, #44]	; 0x2c
   1bb88:	mov.w	r3, #0
   1bb8c:	movs	r3, #0
   1bb8e:	strd	r3, r3, [sp, #24]
   1bb92:	strd	r2, r3, [sp, #32]
   1bb96:	add	r2, sp, #24
   1bb98:	strd	r3, r2, [sp, #8]
   1bb9c:	add	r3, sp, #28
   1bb9e:	str	r3, [sp, #4]
   1bba0:	add	r3, sp, #32
   1bba2:	str	r3, [sp, #0]
   1bba4:	ldrd	r2, r3, [r1, #40]	; 0x28
   1bba8:	movs	r1, #1
   1bbaa:	bl	29520 <btrfs_map_block@@Base>
   1bbae:	ldr	r4, [sp, #24]
   1bbb0:	mov	r3, r0
   1bbb2:	cmp	r4, #0
   1bbb4:	beq.n	1bc58 <write_and_map_eb@@Base+0xe8>
   1bbb6:	ldrd	r2, r3, [sp, #32]
   1bbba:	mov	r1, r5
   1bbbc:	mov	r0, r6
   1bbbe:	str	r4, [sp, #8]
   1bbc0:	strd	r2, r3, [sp]
   1bbc4:	ldr	r2, [sp, #28]
   1bbc6:	bl	29e88 <write_raid56_with_parity@@Base>
   1bbca:	ldr	r1, [pc, #168]	; (1bc74 <write_and_map_eb@@Base+0x104>)
   1bbcc:	mov.w	r2, #494	; 0x1ee
   1bbd0:	add	r1, pc
   1bbd2:	adds	r1, #16
   1bbd4:	mov	r3, r0
   1bbd6:	ldr	r0, [pc, #160]	; (1bc78 <write_and_map_eb@@Base+0x108>)
   1bbd8:	add	r0, pc
   1bbda:	bl	1b734 <btrfs_fs_roots_compare_roots@@Base+0x386>
   1bbde:	ldr	r0, [sp, #24]
   1bbe0:	blx	8434 <free@plt+0x4>
   1bbe4:	ldr	r0, [sp, #28]
   1bbe6:	blx	8434 <free@plt+0x4>
   1bbea:	ldr	r2, [pc, #144]	; (1bc7c <write_and_map_eb@@Base+0x10c>)
   1bbec:	ldr	r3, [pc, #128]	; (1bc70 <write_and_map_eb@@Base+0x100>)
   1bbee:	add	r2, pc
   1bbf0:	ldr	r3, [r2, r3]
   1bbf2:	ldr	r2, [r3, #0]
   1bbf4:	ldr	r3, [sp, #44]	; 0x2c
   1bbf6:	eors	r2, r3
   1bbf8:	beq.n	1bc64 <write_and_map_eb@@Base+0xf4>
   1bbfa:	blx	8510 <__stack_chk_fail@plt>
   1bbfe:	mov.w	r2, #496	; 0x1f0
   1bc02:	mov	r1, r7
   1bc04:	mov	r0, r6
   1bc06:	bl	1b734 <btrfs_fs_roots_compare_roots@@Base+0x386>
   1bc0a:	add.w	r1, r8, r4, lsl #4
   1bc0e:	adds	r4, #1
   1bc10:	mov	r0, r5
   1bc12:	ldr	r3, [r1, #8]
   1bc14:	add.w	r8, r8, r4, lsl #4
   1bc18:	ldr	r3, [r3, #24]
   1bc1a:	str	r3, [r5, #88]	; 0x58
   1bc1c:	ldrd	r2, r3, [r8]
   1bc20:	strd	r2, r3, [r5, #48]	; 0x30
   1bc24:	ldr	r2, [r1, #8]
   1bc26:	ldrd	r3, r1, [r2, #16]
   1bc2a:	adds	r3, #1
   1bc2c:	adc.w	r1, r1, #0
   1bc30:	strd	r3, r1, [r2, #16]
   1bc34:	bl	16572 <write_extent_to_disk@@Base>
   1bc38:	mov.w	r2, #502	; 0x1f6
   1bc3c:	mov	r1, r7
   1bc3e:	mov	r3, r0
   1bc40:	str	r0, [sp, #20]
   1bc42:	mov	r0, r6
   1bc44:	bl	1b734 <btrfs_fs_roots_compare_roots@@Base+0x386>
   1bc48:	ldr	r3, [sp, #20]
   1bc4a:	ldr.w	r8, [sp, #28]
   1bc4e:	ldr.w	r2, [r8, #4]
   1bc52:	cmp	r2, r4
   1bc54:	bgt.n	1bbfe <write_and_map_eb@@Base+0x8e>
   1bc56:	b.n	1bbde <write_and_map_eb@@Base+0x6e>
   1bc58:	ldr	r7, [pc, #36]	; (1bc80 <write_and_map_eb@@Base+0x110>)
   1bc5a:	ldr	r6, [pc, #40]	; (1bc84 <write_and_map_eb@@Base+0x114>)
   1bc5c:	add	r7, pc
   1bc5e:	adds	r7, #16
   1bc60:	add	r6, pc
   1bc62:	b.n	1bc4a <write_and_map_eb@@Base+0xda>
   1bc64:	movs	r0, #0
   1bc66:	add	sp, #48	; 0x30
   1bc68:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1bc6c:	strh	r0, [r2, #16]
   1bc6e:	movs	r4, r0
   1bc70:	lsls	r0, r4, #8
   1bc72:	movs	r0, r0
   1bc74:	lsrs	r5, r5, #28
   1bc76:	movs	r2, r0
   1bc78:	bls.n	1bc94 <btrfs_setup_root@@Base+0xc>
   1bc7a:	movs	r1, r0
   1bc7c:	strh	r6, [r2, #12]
   1bc7e:	movs	r4, r0
   1bc80:	lsrs	r1, r4, #26
   1bc82:	movs	r2, r0
   1bc84:	bhi.n	1bb90 <write_and_map_eb@@Base+0x20>
   1bc86:	movs	r1, r0

0001bc88 <btrfs_setup_root@@Base>:
   1bc88:	push	{r4, r5, r6, lr}
   1bc8a:	mov	r4, r0
   1bc8c:	movs	r0, #0
   1bc8e:	strd	r2, r3, [r4, #472]	; 0x1d8
   1bc92:	mov	r6, r2
   1bc94:	mov	r5, r3
   1bc96:	movs	r2, #0
   1bc98:	movs	r3, #0
   1bc9a:	strd	r0, r0, [r4]
   1bc9e:	strd	r2, r3, [r4, #480]	; 0x1e0
   1bca2:	strd	r2, r3, [r4, #504]	; 0x1f8
   1bca6:	add.w	r3, r4, #520	; 0x208
   1bcaa:	strd	r0, r0, [r4, #488]	; 0x1e8
   1bcae:	movw	r2, #439	; 0x1b7
   1bcb2:	str.w	r1, [r4, #464]	; 0x1d0
   1bcb6:	mov	r1, r0
   1bcb8:	strd	r3, r3, [r4, #520]	; 0x208
   1bcbc:	add.w	r3, r4, #512	; 0x200
   1bcc0:	str.w	r0, [r4, #455]	; 0x1c7
   1bcc4:	str.w	r0, [r4, #459]	; 0x1cb
   1bcc8:	strb.w	r0, [r4, #463]	; 0x1cf
   1bccc:	add.w	r0, r4, #8
   1bcd0:	strd	r3, r3, [r4, #512]	; 0x200
   1bcd4:	blx	87c4 <memset@plt+0x4>
   1bcd8:	str.w	r6, [r4, #447]	; 0x1bf
   1bcdc:	str.w	r5, [r4, #451]	; 0x1c3
   1bce0:	pop	{r4, r5, r6, pc}

0001bce2 <btrfs_free_fs_root@@Base>:
   1bce2:	push	{r4, lr}
   1bce4:	mov	r4, r0
   1bce6:	ldr	r0, [r0, #0]
   1bce8:	cbz	r0, 1bcee <btrfs_free_fs_root@@Base+0xc>
   1bcea:	bl	16314 <free_extent_buffer@@Base>
   1bcee:	ldr	r0, [r4, #4]
   1bcf0:	cbz	r0, 1bcf6 <btrfs_free_fs_root@@Base+0x14>
   1bcf2:	bl	16314 <free_extent_buffer@@Base>
   1bcf6:	mov	r0, r4
   1bcf8:	blx	8434 <free@plt+0x4>
   1bcfc:	movs	r0, #0
   1bcfe:	pop	{r4, pc}
   1bd00:	sub.w	r0, r0, #528	; 0x210
   1bd04:	b.w	1bce2 <btrfs_free_fs_root@@Base>

0001bd08 <btrfs_free_fs_info@@Base>:
   1bd08:	push	{r4, lr}
   1bd0a:	mov	r4, r0
   1bd0c:	ldr	r0, [r0, #44]	; 0x2c
   1bd0e:	cbz	r0, 1bd14 <btrfs_free_fs_info@@Base+0xc>
   1bd10:	blx	8434 <free@plt+0x4>
   1bd14:	ldr	r0, [r4, #28]
   1bd16:	blx	8434 <free@plt+0x4>
   1bd1a:	ldr	r0, [r4, #24]
   1bd1c:	blx	8434 <free@plt+0x4>
   1bd20:	ldr	r0, [r4, #32]
   1bd22:	blx	8434 <free@plt+0x4>
   1bd26:	ldr	r0, [r4, #36]	; 0x24
   1bd28:	blx	8434 <free@plt+0x4>
   1bd2c:	ldr	r0, [r4, #40]	; 0x28
   1bd2e:	blx	8434 <free@plt+0x4>
   1bd32:	ldr	r0, [r4, #48]	; 0x30
   1bd34:	blx	8434 <free@plt+0x4>
   1bd38:	ldr	r0, [r4, #52]	; 0x34
   1bd3a:	blx	8434 <free@plt+0x4>
   1bd3e:	ldr.w	r0, [r4, #308]	; 0x134
   1bd42:	blx	8434 <free@plt+0x4>
   1bd46:	ldr	r0, [r4, #60]	; 0x3c
   1bd48:	blx	8434 <free@plt+0x4>
   1bd4c:	mov	r0, r4
   1bd4e:	ldmia.w	sp!, {r4, lr}
   1bd52:	b.w	8430 <free@plt>

0001bd56 <btrfs_new_fs_info@@Base>:
   1bd56:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bd5a:	sub	sp, #20
   1bd5c:	mov	fp, r0
   1bd5e:	mov.w	r1, #400	; 0x190
   1bd62:	movs	r0, #1
   1bd64:	strd	r2, r3, [sp]
   1bd68:	blx	839c <calloc@plt+0x4>
   1bd6c:	mov	r4, r0
   1bd6e:	cmp	r0, #0
   1bd70:	beq.n	1be1a <btrfs_new_fs_info@@Base+0xc4>
   1bd72:	mov.w	r1, #544	; 0x220
   1bd76:	movs	r0, #1
   1bd78:	blx	839c <calloc@plt+0x4>
   1bd7c:	mov.w	r1, #544	; 0x220
   1bd80:	str	r0, [r4, #28]
   1bd82:	str	r0, [sp, #12]
   1bd84:	movs	r0, #1
   1bd86:	blx	839c <calloc@plt+0x4>
   1bd8a:	mov.w	r1, #544	; 0x220
   1bd8e:	str	r0, [r4, #24]
   1bd90:	str	r0, [sp, #8]
   1bd92:	movs	r0, #1
   1bd94:	blx	839c <calloc@plt+0x4>
   1bd98:	mov.w	r1, #544	; 0x220
   1bd9c:	str	r0, [r4, #32]
   1bd9e:	mov	sl, r0
   1bda0:	movs	r0, #1
   1bda2:	blx	839c <calloc@plt+0x4>
   1bda6:	mov.w	r1, #544	; 0x220
   1bdaa:	str	r0, [r4, #36]	; 0x24
   1bdac:	mov	r9, r0
   1bdae:	movs	r0, #1
   1bdb0:	blx	839c <calloc@plt+0x4>
   1bdb4:	mov.w	r1, #544	; 0x220
   1bdb8:	str	r0, [r4, #40]	; 0x28
   1bdba:	mov	r8, r0
   1bdbc:	movs	r0, #1
   1bdbe:	blx	839c <calloc@plt+0x4>
   1bdc2:	mov.w	r1, #544	; 0x220
   1bdc6:	str	r0, [r4, #44]	; 0x2c
   1bdc8:	mov	r7, r0
   1bdca:	movs	r0, #1
   1bdcc:	blx	839c <calloc@plt+0x4>
   1bdd0:	mov.w	r1, #544	; 0x220
   1bdd4:	str	r0, [r4, #48]	; 0x30
   1bdd6:	mov	r6, r0
   1bdd8:	movs	r0, #1
   1bdda:	blx	839c <calloc@plt+0x4>
   1bdde:	mov.w	r1, #4096	; 0x1000
   1bde2:	str	r0, [r4, #52]	; 0x34
   1bde4:	mov	r5, r0
   1bde6:	movs	r0, #1
   1bde8:	blx	839c <calloc@plt+0x4>
   1bdec:	ldr	r2, [sp, #12]
   1bdee:	str.w	r0, [r4, #308]	; 0x134
   1bdf2:	cbz	r2, 1be12 <btrfs_new_fs_info@@Base+0xbc>
   1bdf4:	ldr	r3, [sp, #8]
   1bdf6:	cbz	r3, 1be12 <btrfs_new_fs_info@@Base+0xbc>
   1bdf8:	cmp.w	sl, #0
   1bdfc:	beq.n	1be12 <btrfs_new_fs_info@@Base+0xbc>
   1bdfe:	cmp.w	r9, #0
   1be02:	beq.n	1be12 <btrfs_new_fs_info@@Base+0xbc>
   1be04:	cmp.w	r8, #0
   1be08:	beq.n	1be12 <btrfs_new_fs_info@@Base+0xbc>
   1be0a:	cbz	r7, 1be12 <btrfs_new_fs_info@@Base+0xbc>
   1be0c:	cbz	r6, 1be12 <btrfs_new_fs_info@@Base+0xbc>
   1be0e:	cbz	r5, 1be12 <btrfs_new_fs_info@@Base+0xbc>
   1be10:	cbnz	r0, 1be22 <btrfs_new_fs_info@@Base+0xcc>
   1be12:	mov	r0, r4
   1be14:	movs	r4, #0
   1be16:	bl	1bd08 <btrfs_free_fs_info@@Base>
   1be1a:	mov	r0, r4
   1be1c:	add	sp, #20
   1be1e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1be22:	add.w	r0, r4, #64	; 0x40
   1be26:	bl	15d68 <extent_io_tree_init@@Base>
   1be2a:	add.w	r0, r4, #96	; 0x60
   1be2e:	bl	15d68 <extent_io_tree_init@@Base>
   1be32:	add.w	r0, r4, #128	; 0x80
   1be36:	bl	15d68 <extent_io_tree_init@@Base>
   1be3a:	add.w	r0, r4, #160	; 0xa0
   1be3e:	bl	15d68 <extent_io_tree_init@@Base>
   1be42:	add.w	r0, r4, #192	; 0xc0
   1be46:	bl	15d68 <extent_io_tree_init@@Base>
   1be4a:	movs	r3, #0
   1be4c:	add.w	r0, r4, #228	; 0xe4
   1be50:	str.w	r3, [r4, #224]	; 0xe0
   1be54:	str	r3, [r4, #56]	; 0x38
   1be56:	bl	15588 <cache_tree_init@@Base>
   1be5a:	movs	r3, #1
   1be5c:	str.w	r3, [r4, #312]	; 0x138
   1be60:	add.w	r3, r4, #336	; 0x150
   1be64:	strd	r3, r3, [r4, #336]	; 0x150
   1be68:	add.w	r3, r4, #356	; 0x164
   1be6c:	strd	r3, r3, [r4, #356]	; 0x164
   1be70:	add.w	r3, r4, #344	; 0x158
   1be74:	strd	r3, r3, [r4, #344]	; 0x158
   1be78:	cmp.w	fp, #0
   1be7c:	bne.n	1be8a <btrfs_new_fs_info@@Base+0x134>
   1be7e:	ldrb.w	r3, [r4, #364]	; 0x16c
   1be82:	orr.w	r3, r3, #2
   1be86:	strb.w	r3, [r4, #364]	; 0x16c
   1be8a:	ldr	r3, [sp, #0]
   1be8c:	mov.w	r2, #4294967295	; 0xffffffff
   1be90:	str.w	r3, [r4, #320]	; 0x140
   1be94:	ldr	r3, [sp, #4]
   1be96:	str.w	r3, [r4, #324]	; 0x144
   1be9a:	mov.w	r3, #4294967295	; 0xffffffff
   1be9e:	strd	r2, r3, [r4, #272]	; 0x110
   1bea2:	strd	r2, r3, [r4, #280]	; 0x118
   1bea6:	strd	r2, r3, [r4, #288]	; 0x120
   1beaa:	b.n	1be1a <btrfs_new_fs_info@@Base+0xc4>

0001beac <btrfs_check_fs_compatibility@@Base>:
   1beac:	push	{r0, r1, r4, r5, r6, lr}
   1beae:	ldr.w	r4, [r0, #188]	; 0xbc
   1beb2:	ldr.w	r5, [r0, #192]	; 0xc0
   1beb6:	bic.w	r2, r4, #4080	; 0xff0
   1beba:	ldr	r6, [pc, #128]	; (1bf3c <btrfs_check_fs_compatibility@@Base+0x90>)
   1bebc:	bic.w	r2, r2, #15
   1bec0:	mov	r3, r5
   1bec2:	orrs.w	ip, r2, r3
   1bec6:	add	r6, pc
   1bec8:	beq.n	1bee4 <btrfs_check_fs_compatibility@@Base+0x38>
   1beca:	ldr	r1, [pc, #116]	; (1bf40 <btrfs_check_fs_compatibility@@Base+0x94>)
   1becc:	ldr	r0, [r6, r1]
   1bece:	strd	r2, r3, [sp]
   1bed2:	ldr	r2, [pc, #112]	; (1bf44 <btrfs_check_fs_compatibility@@Base+0x98>)
   1bed4:	add	r2, pc
   1bed6:	ldr	r0, [r0, #0]
   1bed8:	movs	r1, #1
   1beda:	blx	8860 <__fprintf_chk@plt+0x4>
   1bede:	mvn.w	r0, #94	; 0x5e
   1bee2:	b.n	1bf00 <btrfs_check_fs_compatibility@@Base+0x54>
   1bee4:	and.w	r2, r4, #1
   1bee8:	movs	r3, #0
   1beea:	orrs	r3, r2
   1beec:	ittt	eq
   1beee:	streq.w	r5, [r0, #192]	; 0xc0
   1bef2:	orreq.w	r4, r4, #1
   1bef6:	streq.w	r4, [r0, #188]	; 0xbc
   1befa:	lsls	r4, r1, #31
   1befc:	bmi.n	1bf04 <btrfs_check_fs_compatibility@@Base+0x58>
   1befe:	movs	r0, #0
   1bf00:	add	sp, #8
   1bf02:	pop	{r4, r5, r6, pc}
   1bf04:	ldr.w	r3, [r0, #180]	; 0xb4
   1bf08:	lsls	r1, r1, #18
   1bf0a:	ldr.w	r2, [r0, #184]	; 0xb8
   1bf0e:	bic.w	r4, r3, #3
   1bf12:	itt	mi
   1bf14:	bicmi.w	r3, r3, #2
   1bf18:	strmi.w	r3, [r0, #180]	; 0xb4
   1bf1c:	mov	r5, r2
   1bf1e:	itt	mi
   1bf20:	movmi	r3, r4
   1bf22:	strmi.w	r2, [r0, #184]	; 0xb8
   1bf26:	orrs.w	r1, r4, r5
   1bf2a:	beq.n	1befe <btrfs_check_fs_compatibility@@Base+0x52>
   1bf2c:	ldr	r1, [pc, #16]	; (1bf40 <btrfs_check_fs_compatibility@@Base+0x94>)
   1bf2e:	ldr	r0, [r6, r1]
   1bf30:	strd	r3, r2, [sp]
   1bf34:	ldr	r2, [pc, #16]	; (1bf48 <btrfs_check_fs_compatibility@@Base+0x9c>)
   1bf36:	add	r2, pc
   1bf38:	b.n	1bed6 <btrfs_check_fs_compatibility@@Base+0x2a>
   1bf3a:	nop
   1bf3c:	ldrb	r6, [r7, #26]
   1bf3e:	movs	r4, r0
   1bf40:	lsls	r0, r6, #8
   1bf42:	movs	r0, r0
   1bf44:	lsls	r1, r6, #14
   1bf46:	movs	r2, r0
   1bf48:	lsls	r5, r1, #14
   1bf4a:	movs	r2, r0

0001bf4c <btrfs_release_all_roots@@Base>:
   1bf4c:	push	{r4, lr}
   1bf4e:	mov	r4, r0
   1bf50:	ldr	r3, [r0, #48]	; 0x30
   1bf52:	cbz	r3, 1bf5a <btrfs_release_all_roots@@Base+0xe>
   1bf54:	ldr	r0, [r3, #0]
   1bf56:	bl	16314 <free_extent_buffer@@Base>
   1bf5a:	ldr	r3, [r4, #44]	; 0x2c
   1bf5c:	cbz	r3, 1bf64 <btrfs_release_all_roots@@Base+0x18>
   1bf5e:	ldr	r0, [r3, #0]
   1bf60:	bl	16314 <free_extent_buffer@@Base>
   1bf64:	ldr	r3, [r4, #40]	; 0x28
   1bf66:	cbz	r3, 1bf6e <btrfs_release_all_roots@@Base+0x22>
   1bf68:	ldr	r0, [r3, #0]
   1bf6a:	bl	16314 <free_extent_buffer@@Base>
   1bf6e:	ldr	r3, [r4, #36]	; 0x24
   1bf70:	cbz	r3, 1bf78 <btrfs_release_all_roots@@Base+0x2c>
   1bf72:	ldr	r0, [r3, #0]
   1bf74:	bl	16314 <free_extent_buffer@@Base>
   1bf78:	ldr	r3, [r4, #24]
   1bf7a:	cbz	r3, 1bf82 <btrfs_release_all_roots@@Base+0x36>
   1bf7c:	ldr	r0, [r3, #0]
   1bf7e:	bl	16314 <free_extent_buffer@@Base>
   1bf82:	ldr	r3, [r4, #28]
   1bf84:	cbz	r3, 1bf8c <btrfs_release_all_roots@@Base+0x40>
   1bf86:	ldr	r0, [r3, #0]
   1bf88:	bl	16314 <free_extent_buffer@@Base>
   1bf8c:	ldr	r3, [r4, #60]	; 0x3c
   1bf8e:	cbz	r3, 1bf96 <btrfs_release_all_roots@@Base+0x4a>
   1bf90:	ldr	r0, [r3, #0]
   1bf92:	bl	16314 <free_extent_buffer@@Base>
   1bf96:	ldr	r3, [r4, #32]
   1bf98:	cbz	r3, 1bfa0 <btrfs_release_all_roots@@Base+0x54>
   1bf9a:	ldr	r0, [r3, #0]
   1bf9c:	bl	16314 <free_extent_buffer@@Base>
   1bfa0:	ldr	r3, [r4, #52]	; 0x34
   1bfa2:	cbz	r3, 1bfae <btrfs_release_all_roots@@Base+0x62>
   1bfa4:	ldmia.w	sp!, {r4, lr}
   1bfa8:	ldr	r0, [r3, #0]
   1bfaa:	b.w	16314 <free_extent_buffer@@Base>
   1bfae:	pop	{r4, pc}

0001bfb0 <btrfs_cleanup_all_caches@@Base>:
   1bfb0:	push	{r3, r4, r5, lr}
   1bfb2:	add.w	r5, r0, #344	; 0x158
   1bfb6:	mov	r4, r0
   1bfb8:	ldr.w	r0, [r4, #344]	; 0x158
   1bfbc:	cmp	r0, r5
   1bfbe:	bne.n	1bff8 <btrfs_cleanup_all_caches@@Base+0x48>
   1bfc0:	ldr	r1, [pc, #72]	; (1c00c <btrfs_cleanup_all_caches@@Base+0x5c>)
   1bfc2:	add.w	r0, r4, #228	; 0xe4
   1bfc6:	add	r1, pc
   1bfc8:	bl	157b2 <cache_tree_free_extents@@Base>
   1bfcc:	add.w	r0, r4, #64	; 0x40
   1bfd0:	bl	1631c <extent_io_tree_cleanup@@Base>
   1bfd4:	add.w	r0, r4, #96	; 0x60
   1bfd8:	bl	1631c <extent_io_tree_cleanup@@Base>
   1bfdc:	add.w	r0, r4, #128	; 0x80
   1bfe0:	bl	1631c <extent_io_tree_cleanup@@Base>
   1bfe4:	add.w	r0, r4, #160	; 0xa0
   1bfe8:	bl	1631c <extent_io_tree_cleanup@@Base>
   1bfec:	add.w	r0, r4, #192	; 0xc0
   1bff0:	ldmia.w	sp!, {r3, r4, r5, lr}
   1bff4:	b.w	1631c <extent_io_tree_cleanup@@Base>
   1bff8:	ldrd	r2, r3, [r0]
   1bffc:	str	r3, [r2, #4]
   1bffe:	str	r2, [r3, #0]
   1c000:	strd	r0, r0, [r0]
   1c004:	subs	r0, #68	; 0x44
   1c006:	bl	16314 <free_extent_buffer@@Base>
   1c00a:	b.n	1bfb8 <btrfs_cleanup_all_caches@@Base+0x8>
   1c00c:	bl	ffd5800e <__bss_end__@@Base+0xffcf2d66>

0001c010 <btrfs_scan_fs_devices@@Base>:
   1c010:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c014:	mov	fp, r2
   1c016:	ldr	r2, [pc, #220]	; (1c0f4 <btrfs_scan_fs_devices@@Base+0xe4>)
   1c018:	sub	sp, #36	; 0x24
   1c01a:	ldr	r3, [pc, #220]	; (1c0f8 <btrfs_scan_fs_devices@@Base+0xe8>)
   1c01c:	mov	r7, r0
   1c01e:	add	r2, pc
   1c020:	ldrd	r4, r5, [sp, #72]	; 0x48
   1c024:	mov	sl, r1
   1c026:	ldr	r6, [pc, #212]	; (1c0fc <btrfs_scan_fs_devices@@Base+0xec>)
   1c028:	ldr	r3, [r2, r3]
   1c02a:	movs	r2, #0
   1c02c:	add	r6, pc
   1c02e:	ldr	r3, [r3, #0]
   1c030:	str	r3, [sp, #28]
   1c032:	mov.w	r3, #0
   1c036:	orrs.w	r3, r4, r5
   1c03a:	mov.w	r3, #2
   1c03e:	str	r3, [sp, #0]
   1c040:	mov.w	r3, #0
   1c044:	itt	eq
   1c046:	moveq.w	r4, #65536	; 0x10000
   1c04a:	moveq	r5, #0
   1c04c:	blx	85c8 <lseek64@plt>
   1c050:	cmp	r0, #0
   1c052:	mov	r8, r0
   1c054:	sbcs.w	r3, r1, #0
   1c058:	mov	r9, r1
   1c05a:	bge.n	1c078 <btrfs_scan_fs_devices@@Base+0x68>
   1c05c:	blx	8784 <__errno_location@plt>
   1c060:	ldr	r4, [r0, #0]
   1c062:	negs	r4, r4
   1c064:	ldr	r2, [pc, #152]	; (1c100 <btrfs_scan_fs_devices@@Base+0xf0>)
   1c066:	ldr	r3, [pc, #144]	; (1c0f8 <btrfs_scan_fs_devices@@Base+0xe8>)
   1c068:	add	r2, pc
   1c06a:	ldr	r3, [r2, r3]
   1c06c:	ldr	r2, [r3, #0]
   1c06e:	ldr	r3, [sp, #28]
   1c070:	eors	r2, r3
   1c072:	beq.n	1c0ea <btrfs_scan_fs_devices@@Base+0xda>
   1c074:	blx	8510 <__stack_chk_fail@plt>
   1c078:	movs	r3, #0
   1c07a:	movs	r2, #0
   1c07c:	str	r3, [sp, #0]
   1c07e:	mov	r0, r7
   1c080:	movs	r3, #0
   1c082:	blx	85c8 <lseek64@plt>
   1c086:	cmp	r9, r5
   1c088:	it	eq
   1c08a:	cmpeq	r8, r4
   1c08c:	bcs.n	1c0a4 <btrfs_scan_fs_devices@@Base+0x94>
   1c08e:	ldr	r0, [pc, #116]	; (1c104 <btrfs_scan_fs_devices@@Base+0xf4>)
   1c090:	mov	r2, r4
   1c092:	mov	r3, r5
   1c094:	strd	r8, r9, [sp]
   1c098:	add	r0, pc
   1c09a:	mvn.w	r4, #21
   1c09e:	bl	16b70 <__btrfs_error@@Base>
   1c0a2:	b.n	1c064 <btrfs_scan_fs_devices@@Base+0x54>
   1c0a4:	ldr	r3, [sp, #80]	; 0x50
   1c0a6:	mov	r2, fp
   1c0a8:	strd	r4, r5, [sp]
   1c0ac:	mov	r1, sl
   1c0ae:	mov	r0, r7
   1c0b0:	str	r3, [sp, #8]
   1c0b2:	add	r3, sp, #16
   1c0b4:	bl	277e4 <btrfs_scan_one_device@@Base>
   1c0b8:	mov	r4, r0
   1c0ba:	cbz	r0, 1c0d0 <btrfs_scan_fs_devices@@Base+0xc0>
   1c0bc:	ldr	r3, [pc, #72]	; (1c108 <btrfs_scan_fs_devices@@Base+0xf8>)
   1c0be:	movs	r1, #1
   1c0c0:	ldr	r2, [pc, #72]	; (1c10c <btrfs_scan_fs_devices@@Base+0xfc>)
   1c0c2:	ldr	r0, [r6, r3]
   1c0c4:	add	r2, pc
   1c0c6:	mov	r3, sl
   1c0c8:	ldr	r0, [r0, #0]
   1c0ca:	blx	8860 <__fprintf_chk@plt+0x4>
   1c0ce:	b.n	1c064 <btrfs_scan_fs_devices@@Base+0x54>
   1c0d0:	ldr	r3, [sp, #84]	; 0x54
   1c0d2:	cmp	r3, #0
   1c0d4:	bne.n	1c064 <btrfs_scan_fs_devices@@Base+0x54>
   1c0d6:	ldrd	r2, r3, [sp, #16]
   1c0da:	cmp	r3, #0
   1c0dc:	it	eq
   1c0de:	cmpeq	r2, #1
   1c0e0:	beq.n	1c064 <btrfs_scan_fs_devices@@Base+0x54>
   1c0e2:	bl	2ec40 <btrfs_scan_devices@@Base>
   1c0e6:	mov	r4, r0
   1c0e8:	b.n	1c064 <btrfs_scan_fs_devices@@Base+0x54>
   1c0ea:	mov	r0, r4
   1c0ec:	add	sp, #36	; 0x24
   1c0ee:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c0f2:	nop
   1c0f4:	ldrb	r6, [r4, #21]
   1c0f6:	movs	r4, r0
   1c0f8:	lsls	r0, r4, #8
   1c0fa:	movs	r0, r0
   1c0fc:	ldrb	r0, [r3, #21]
   1c0fe:	movs	r4, r0
   1c100:	ldrb	r4, [r3, #20]
   1c102:	movs	r4, r0
   1c104:	lsls	r7, r5, #9
   1c106:	movs	r2, r0
   1c108:	lsls	r0, r6, #8
   1c10a:	movs	r0, r0
   1c10c:	lsls	r2, r7, #9
   1c10e:	movs	r2, r0

0001c110 <btrfs_check_super@@Base>:
   1c110:	ldr	r2, [pc, #580]	; (1c358 <btrfs_check_super@@Base+0x248>)
   1c112:	ldr	r3, [pc, #584]	; (1c35c <btrfs_check_super@@Base+0x24c>)
   1c114:	add	r2, pc
   1c116:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1c11a:	sub	sp, #132	; 0x84
   1c11c:	ldr	r3, [r2, r3]
   1c11e:	mov	r4, r0
   1c120:	mov	r7, r1
   1c122:	ldr	r3, [r3, #0]
   1c124:	str	r3, [sp, #124]	; 0x7c
   1c126:	mov.w	r3, #0
   1c12a:	ldr	r2, [r0, #64]	; 0x40
   1c12c:	ldr	r3, [r0, #68]	; 0x44
   1c12e:	add	r1, pc, #544	; (adr r1, 1c350 <btrfs_check_super@@Base+0x240>)
   1c130:	ldrd	r0, r1, [r1]
   1c134:	cmp	r3, r1
   1c136:	it	eq
   1c138:	cmpeq	r2, r0
   1c13a:	bne.n	1c14a <btrfs_check_super@@Base+0x3a>
   1c13c:	lsls	r3, r7, #30
   1c13e:	bmi.n	1c14a <btrfs_check_super@@Base+0x3a>
   1c140:	ldr	r0, [pc, #540]	; (1c360 <btrfs_check_super@@Base+0x250>)
   1c142:	add	r0, pc
   1c144:	bl	16b70 <__btrfs_error@@Base>
   1c148:	b.n	1c160 <btrfs_check_super@@Base+0x50>
   1c14a:	ldrh.w	r9, [r4, #196]	; 0xc4
   1c14e:	bl	17528 <btrfs_super_num_csums@@Base>
   1c152:	cmp	r9, r0
   1c154:	bcc.n	1c17a <btrfs_check_super@@Base+0x6a>
   1c156:	ldr	r0, [pc, #524]	; (1c364 <btrfs_check_super@@Base+0x254>)
   1c158:	mov	r1, r9
   1c15a:	add	r0, pc
   1c15c:	bl	16b70 <__btrfs_error@@Base>
   1c160:	mvn.w	r5, #4
   1c164:	ldr	r2, [pc, #512]	; (1c368 <btrfs_check_super@@Base+0x258>)
   1c166:	ldr	r3, [pc, #500]	; (1c35c <btrfs_check_super@@Base+0x24c>)
   1c168:	add	r2, pc
   1c16a:	ldr	r3, [r2, r3]
   1c16c:	ldr	r2, [r3, #0]
   1c16e:	ldr	r3, [sp, #124]	; 0x7c
   1c170:	eors	r2, r3
   1c172:	beq.w	1c346 <btrfs_check_super@@Base+0x236>
   1c176:	blx	8510 <__stack_chk_fail@plt>
   1c17a:	mov	r0, r4
   1c17c:	add	r5, sp, #12
   1c17e:	bl	17504 <btrfs_super_csum_size@@Base>
   1c182:	add.w	r6, r4, #32
   1c186:	mov	r2, r5
   1c188:	mov.w	r3, #4064	; 0xfe0
   1c18c:	mov	r1, r6
   1c18e:	mov	r8, r0
   1c190:	mov	r0, r9
   1c192:	bl	1b73e <btrfs_csum_data@@Base>
   1c196:	mov	r0, r5
   1c198:	mov	r2, r8
   1c19a:	mov	r1, r4
   1c19c:	blx	84a8 <memcmp@plt+0x4>
   1c1a0:	mov	r5, r0
   1c1a2:	cbz	r0, 1c1aa <btrfs_check_super@@Base+0x9a>
   1c1a4:	ldr	r0, [pc, #452]	; (1c36c <btrfs_check_super@@Base+0x25c>)
   1c1a6:	add	r0, pc
   1c1a8:	b.n	1c144 <btrfs_check_super@@Base+0x34>
   1c1aa:	ldrb.w	r1, [r4, #198]	; 0xc6
   1c1ae:	cmp	r1, #7
   1c1b0:	bls.n	1c1be <btrfs_check_super@@Base+0xae>
   1c1b2:	ldr	r0, [pc, #444]	; (1c370 <btrfs_check_super@@Base+0x260>)
   1c1b4:	movs	r2, #8
   1c1b6:	add	r0, pc
   1c1b8:	bl	16b70 <__btrfs_error@@Base>
   1c1bc:	b.n	1c1f4 <btrfs_check_super@@Base+0xe4>
   1c1be:	ldrb.w	r1, [r4, #199]	; 0xc7
   1c1c2:	cmp	r1, #7
   1c1c4:	bls.n	1c1ce <btrfs_check_super@@Base+0xbe>
   1c1c6:	ldr	r0, [pc, #428]	; (1c374 <btrfs_check_super@@Base+0x264>)
   1c1c8:	movs	r2, #8
   1c1ca:	add	r0, pc
   1c1cc:	b.n	1c1b8 <btrfs_check_super@@Base+0xa8>
   1c1ce:	ldrb.w	r1, [r4, #200]	; 0xc8
   1c1d2:	cmp	r1, #7
   1c1d4:	bls.n	1c1de <btrfs_check_super@@Base+0xce>
   1c1d6:	ldr	r0, [pc, #416]	; (1c378 <btrfs_check_super@@Base+0x268>)
   1c1d8:	movs	r2, #8
   1c1da:	add	r0, pc
   1c1dc:	b.n	1c1b8 <btrfs_check_super@@Base+0xa8>
   1c1de:	ldr	r2, [r4, #80]	; 0x50
   1c1e0:	mov	r1, r5
   1c1e2:	ldr	r3, [r4, #84]	; 0x54
   1c1e4:	ubfx	r0, r2, #0, #12
   1c1e8:	orrs	r1, r0
   1c1ea:	beq.n	1c1fa <btrfs_check_super@@Base+0xea>
   1c1ec:	ldr	r0, [pc, #396]	; (1c37c <btrfs_check_super@@Base+0x26c>)
   1c1ee:	add	r0, pc
   1c1f0:	bl	16b70 <__btrfs_error@@Base>
   1c1f4:	ldr	r0, [pc, #392]	; (1c380 <btrfs_check_super@@Base+0x270>)
   1c1f6:	add	r0, pc
   1c1f8:	b.n	1c144 <btrfs_check_super@@Base+0x34>
   1c1fa:	ldr	r2, [r4, #88]	; 0x58
   1c1fc:	mov	r1, r5
   1c1fe:	ldr	r3, [r4, #92]	; 0x5c
   1c200:	ubfx	r0, r2, #0, #12
   1c204:	orrs	r1, r0
   1c206:	beq.n	1c20e <btrfs_check_super@@Base+0xfe>
   1c208:	ldr	r0, [pc, #376]	; (1c384 <btrfs_check_super@@Base+0x274>)
   1c20a:	add	r0, pc
   1c20c:	b.n	1c1f0 <btrfs_check_super@@Base+0xe0>
   1c20e:	ldr	r2, [r4, #96]	; 0x60
   1c210:	mov	r1, r5
   1c212:	ldr	r3, [r4, #100]	; 0x64
   1c214:	ubfx	r0, r2, #0, #12
   1c218:	orrs	r1, r0
   1c21a:	beq.n	1c222 <btrfs_check_super@@Base+0x112>
   1c21c:	ldr	r0, [pc, #360]	; (1c388 <btrfs_check_super@@Base+0x278>)
   1c21e:	add	r0, pc
   1c220:	b.n	1c1f0 <btrfs_check_super@@Base+0xe0>
   1c222:	ldr.w	r1, [r4, #148]	; 0x94
   1c226:	cmp.w	r1, #4096	; 0x1000
   1c22a:	bcs.n	1c236 <btrfs_check_super@@Base+0x126>
   1c22c:	ldr	r0, [pc, #348]	; (1c38c <btrfs_check_super@@Base+0x27c>)
   1c22e:	add	r0, pc
   1c230:	bl	16b70 <__btrfs_error@@Base>
   1c234:	b.n	1c1f4 <btrfs_check_super@@Base+0xe4>
   1c236:	ubfx	r3, r1, #0, #12
   1c23a:	cbz	r3, 1c242 <btrfs_check_super@@Base+0x132>
   1c23c:	ldr	r0, [pc, #336]	; (1c390 <btrfs_check_super@@Base+0x280>)
   1c23e:	add	r0, pc
   1c240:	b.n	1c230 <btrfs_check_super@@Base+0x120>
   1c242:	ldr.w	ip, [r4, #144]	; 0x90
   1c246:	cmp.w	ip, #4096	; 0x1000
   1c24a:	bcs.n	1c254 <btrfs_check_super@@Base+0x144>
   1c24c:	ldr	r0, [pc, #324]	; (1c394 <btrfs_check_super@@Base+0x284>)
   1c24e:	mov	r1, ip
   1c250:	add	r0, pc
   1c252:	b.n	1c230 <btrfs_check_super@@Base+0x120>
   1c254:	ubfx	r3, ip, #0, #12
   1c258:	cbz	r3, 1c262 <btrfs_check_super@@Base+0x152>
   1c25a:	ldr	r0, [pc, #316]	; (1c398 <btrfs_check_super@@Base+0x288>)
   1c25c:	mov	r1, ip
   1c25e:	add	r0, pc
   1c260:	b.n	1c230 <btrfs_check_super@@Base+0x120>
   1c262:	ldr	r2, [r4, #112]	; 0x70
   1c264:	ldr	r3, [r4, #116]	; 0x74
   1c266:	orrs	r3, r2
   1c268:	bne.n	1c274 <btrfs_check_super@@Base+0x164>
   1c26a:	ldr	r0, [pc, #304]	; (1c39c <btrfs_check_super@@Base+0x28c>)
   1c26c:	add	r0, pc
   1c26e:	bl	16b70 <__btrfs_error@@Base>
   1c272:	b.n	1c1f4 <btrfs_check_super@@Base+0xe4>
   1c274:	movs	r0, #6
   1c276:	ldr	r3, [r4, #124]	; 0x7c
   1c278:	muls	r0, r1
   1c27a:	ldr	r2, [r4, #120]	; 0x78
   1c27c:	movs	r1, #0
   1c27e:	cmp	r3, r1
   1c280:	it	eq
   1c282:	cmpeq	r2, r0
   1c284:	bcs.n	1c28c <btrfs_check_super@@Base+0x17c>
   1c286:	ldr	r0, [pc, #280]	; (1c3a0 <btrfs_check_super@@Base+0x290>)
   1c288:	add	r0, pc
   1c28a:	b.n	1c1f0 <btrfs_check_super@@Base+0xe0>
   1c28c:	ldr.w	r1, [r4, #156]	; 0x9c
   1c290:	cmp.w	r1, #4096	; 0x1000
   1c294:	beq.n	1c2a0 <btrfs_check_super@@Base+0x190>
   1c296:	cmp	r1, ip
   1c298:	beq.n	1c2a0 <btrfs_check_super@@Base+0x190>
   1c29a:	ldr	r0, [pc, #264]	; (1c3a4 <btrfs_check_super@@Base+0x294>)
   1c29c:	add	r0, pc
   1c29e:	b.n	1c230 <btrfs_check_super@@Base+0x120>
   1c2a0:	ldr.w	r1, [r4, #188]	; 0xbc
   1c2a4:	movs	r3, #0
   1c2a6:	and.w	r2, r1, #1024	; 0x400
   1c2aa:	orrs	r3, r2
   1c2ac:	mov.w	r2, #16
   1c2b0:	ite	ne
   1c2b2:	addwne	r0, r4, #571	; 0x23b
   1c2b6:	moveq	r0, r6
   1c2b8:	addw	r6, r4, #283	; 0x11b
   1c2bc:	mov	r1, r6
   1c2be:	blx	84a8 <memcmp@plt+0x4>
   1c2c2:	cbz	r0, 1c2ee <btrfs_check_super@@Base+0x1de>
   1c2c4:	add	r2, sp, #44	; 0x2c
   1c2c6:	addw	r0, r4, #571	; 0x23b
   1c2ca:	str	r2, [sp, #4]
   1c2cc:	mov	r1, r2
   1c2ce:	blx	83d8 <uuid_unparse@plt>
   1c2d2:	add	r1, sp, #84	; 0x54
   1c2d4:	mov	r0, r6
   1c2d6:	str	r1, [sp, #0]
   1c2d8:	blx	83d8 <uuid_unparse@plt>
   1c2dc:	tst.w	r7, #4
   1c2e0:	ldrd	r1, r2, [sp]
   1c2e4:	beq.n	1c31e <btrfs_check_super@@Base+0x20e>
   1c2e6:	ldr	r0, [pc, #192]	; (1c3a8 <btrfs_check_super@@Base+0x298>)
   1c2e8:	add	r0, pc
   1c2ea:	bl	16af4 <__btrfs_warning@@Base>
   1c2ee:	ldr.w	r3, [r4, #140]	; 0x8c
   1c2f2:	movs	r1, #0
   1c2f4:	ldr.w	r2, [r4, #136]	; 0x88
   1c2f8:	mov.w	r0, #2147483648	; 0x80000000
   1c2fc:	cmp	r1, r3
   1c2fe:	it	eq
   1c300:	cmpeq	r0, r2
   1c302:	bcs.n	1c30c <btrfs_check_super@@Base+0x1fc>
   1c304:	ldr	r0, [pc, #164]	; (1c3ac <btrfs_check_super@@Base+0x29c>)
   1c306:	add	r0, pc
   1c308:	bl	16af4 <__btrfs_warning@@Base>
   1c30c:	ldr.w	r2, [r4, #136]	; 0x88
   1c310:	ldr.w	r3, [r4, #140]	; 0x8c
   1c314:	orrs	r3, r2
   1c316:	bne.n	1c324 <btrfs_check_super@@Base+0x214>
   1c318:	ldr	r0, [pc, #148]	; (1c3b0 <btrfs_check_super@@Base+0x2a0>)
   1c31a:	add	r0, pc
   1c31c:	b.n	1c26e <btrfs_check_super@@Base+0x15e>
   1c31e:	ldr	r0, [pc, #148]	; (1c3b4 <btrfs_check_super@@Base+0x2a4>)
   1c320:	add	r0, pc
   1c322:	b.n	1c1b8 <btrfs_check_super@@Base+0xa8>
   1c324:	ldr.w	r1, [r4, #160]	; 0xa0
   1c328:	cmp.w	r1, #2048	; 0x800
   1c32c:	bls.n	1c338 <btrfs_check_super@@Base+0x228>
   1c32e:	ldr	r0, [pc, #136]	; (1c3b8 <btrfs_check_super@@Base+0x2a8>)
   1c330:	mov.w	r2, #2048	; 0x800
   1c334:	add	r0, pc
   1c336:	b.n	1c1b8 <btrfs_check_super@@Base+0xa8>
   1c338:	cmp	r1, #96	; 0x60
   1c33a:	bhi.w	1c164 <btrfs_check_super@@Base+0x54>
   1c33e:	ldr	r0, [pc, #124]	; (1c3bc <btrfs_check_super@@Base+0x2ac>)
   1c340:	movs	r2, #97	; 0x61
   1c342:	add	r0, pc
   1c344:	b.n	1c1b8 <btrfs_check_super@@Base+0xa8>
   1c346:	mov	r0, r5
   1c348:	add	sp, #132	; 0x84
   1c34a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1c34e:	nop
   1c350:	tst	r1, r4
   1c352:	strh	r0, [r1, r1]
   1c354:	strh	r6, [r4, r5]
   1c356:	ldr	r5, [pc, #380]	; (1c4d4 <btrfs_read_dev_super@@Base+0x114>)
   1c358:	ldrb	r0, [r6, #17]
   1c35a:	movs	r4, r0
   1c35c:	lsls	r0, r4, #8
   1c35e:	movs	r0, r0
   1c360:	lsls	r0, r3, #8
   1c362:	movs	r2, r0
   1c364:	lsls	r7, r3, #8
   1c366:	movs	r2, r0
   1c368:	ldrb	r4, [r3, #16]
   1c36a:	movs	r4, r0
   1c36c:	lsls	r5, r6, #7
   1c36e:	movs	r2, r0
   1c370:	lsls	r2, r0, #8
   1c372:	movs	r2, r0
   1c374:	lsls	r0, r2, #8
   1c376:	movs	r2, r0
   1c378:	lsls	r3, r4, #8
   1c37a:	movs	r2, r0
   1c37c:	lsls	r0, r6, #8
   1c37e:	movs	r2, r0
   1c380:	lsls	r3, r2, #16
   1c382:	movs	r2, r0
   1c384:	lsls	r4, r6, #8
   1c386:	movs	r2, r0
   1c388:	lsls	r1, r0, #9
   1c38a:	movs	r2, r0
   1c38c:	lsls	r0, r2, #9
   1c38e:	movs	r2, r0
   1c390:	lsls	r6, r3, #9
   1c392:	movs	r2, r0
   1c394:	lsls	r3, r4, #9
   1c396:	movs	r2, r0
   1c398:	lsls	r5, r6, #9
   1c39a:	movs	r2, r0
   1c39c:	lsls	r0, r0, #10
   1c39e:	movs	r2, r0
   1c3a0:	lsls	r2, r7, #9
   1c3a2:	movs	r2, r0
   1c3a4:	lsls	r6, r7, #9
   1c3a6:	movs	r2, r0
   1c3a8:	lsls	r0, r1, #9
   1c3aa:	movs	r2, r0
   1c3ac:	lsls	r0, r0, #10
   1c3ae:	movs	r2, r0
   1c3b0:	lsls	r7, r1, #10
   1c3b2:	movs	r2, r0
   1c3b4:	lsls	r2, r7, #8
   1c3b6:	movs	r2, r0
   1c3b8:	lsls	r4, r1, #10
   1c3ba:	movs	r2, r0
   1c3bc:	lsls	r1, r4, #10
   1c3be:	movs	r2, r0

0001c3c0 <btrfs_read_dev_super@@Base>:
   1c3c0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c3c4:	mov	sl, r2
   1c3c6:	vpush	{d8-d9}
   1c3ca:	mov	fp, r3
   1c3cc:	ldr	r2, [pc, #496]	; (1c5c0 <btrfs_read_dev_super@@Base+0x200>)
   1c3ce:	vmov	s16, r1
   1c3d2:	ldr	r1, [pc, #496]	; (1c5c4 <btrfs_read_dev_super@@Base+0x204>)
   1c3d4:	sub.w	sp, sp, #4160	; 0x1040
   1c3d8:	vmov	s17, r0
   1c3dc:	add	r1, pc
   1c3de:	sub	sp, #12
   1c3e0:	add.w	r3, sp, #4160	; 0x1040
   1c3e4:	add	r4, sp, #68	; 0x44
   1c3e6:	ldr	r2, [r1, r2]
   1c3e8:	adds	r3, #4
   1c3ea:	ldr	r2, [r2, #0]
   1c3ec:	str	r2, [r3, #0]
   1c3ee:	mov.w	r2, #0
   1c3f2:	add.w	r3, sp, #4224	; 0x1080
   1c3f6:	ldr	r3, [r3, #0]
   1c3f8:	tst.w	r3, #1
   1c3fc:	ite	ne
   1c3fe:	movne	r3, #3
   1c400:	moveq	r3, #1
   1c402:	cmp.w	fp, #0
   1c406:	str	r3, [sp, #28]
   1c408:	it	eq
   1c40a:	cmpeq.w	sl, #65536	; 0x10000
   1c40e:	beq.w	1c54e <btrfs_read_dev_super@@Base+0x18e>
   1c412:	mov.w	r2, #4096	; 0x1000
   1c416:	mov	r1, r4
   1c418:	strd	sl, fp, [sp]
   1c41c:	blx	8610 <pread64@plt>
   1c420:	cmp	r0, #0
   1c422:	bge.n	1c448 <btrfs_read_dev_super@@Base+0x88>
   1c424:	blx	8784 <__errno_location@plt>
   1c428:	ldr	r0, [r0, #0]
   1c42a:	negs	r0, r0
   1c42c:	ldr	r1, [pc, #408]	; (1c5c8 <btrfs_read_dev_super@@Base+0x208>)
   1c42e:	add.w	r3, sp, #4160	; 0x1040
   1c432:	ldr	r2, [pc, #396]	; (1c5c0 <btrfs_read_dev_super@@Base+0x200>)
   1c434:	adds	r3, #4
   1c436:	add	r1, pc
   1c438:	ldr	r2, [r1, r2]
   1c43a:	ldr	r1, [r2, #0]
   1c43c:	ldr	r2, [r3, #0]
   1c43e:	eors	r1, r2
   1c440:	beq.w	1c5b0 <btrfs_read_dev_super@@Base+0x1f0>
   1c444:	blx	8510 <__stack_chk_fail@plt>
   1c448:	cmp.w	r0, #4096	; 0x1000
   1c44c:	blt.w	1c5a4 <btrfs_read_dev_super@@Base+0x1e4>
   1c450:	ldrd	r2, r3, [r4, #48]	; 0x30
   1c454:	cmp	fp, r3
   1c456:	it	eq
   1c458:	cmpeq	sl, r2
   1c45a:	bne.w	1c5aa <btrfs_read_dev_super@@Base+0x1ea>
   1c45e:	add.w	r3, sp, #4224	; 0x1080
   1c462:	mov	r0, r4
   1c464:	ldr	r1, [r3, #0]
   1c466:	bl	1c110 <btrfs_check_super@@Base>
   1c46a:	cmp	r0, #0
   1c46c:	blt.n	1c42c <btrfs_read_dev_super@@Base+0x6c>
   1c46e:	vmov	r0, s16
   1c472:	mov.w	r2, #4096	; 0x1000
   1c476:	mov	r1, r4
   1c478:	blx	8480 <memcpy@plt+0x4>
   1c47c:	movs	r0, #0
   1c47e:	b.n	1c42c <btrfs_read_dev_super@@Base+0x6c>
   1c480:	movs	r3, #12
   1c482:	mov.w	r2, #16384	; 0x4000
   1c486:	muls	r3, r5
   1c488:	sub.w	r0, r3, #32
   1c48c:	rsb	r1, r3, #32
   1c490:	lsl.w	fp, r2, r0
   1c494:	lsr.w	r1, r2, r1
   1c498:	orr.w	fp, fp, r1
   1c49c:	lsl.w	sl, r2, r3
   1c4a0:	vmov	r0, s17
   1c4a4:	mov.w	r2, #4096	; 0x1000
   1c4a8:	mov	r1, r4
   1c4aa:	strd	sl, fp, [sp]
   1c4ae:	blx	8610 <pread64@plt>
   1c4b2:	cmp.w	r0, #4096	; 0x1000
   1c4b6:	blt.n	1c594 <btrfs_read_dev_super@@Base+0x1d4>
   1c4b8:	ldrd	r2, r3, [r4, #48]	; 0x30
   1c4bc:	cmp	fp, r3
   1c4be:	it	eq
   1c4c0:	cmpeq	sl, r2
   1c4c2:	bne.n	1c58a <btrfs_read_dev_super@@Base+0x1ca>
   1c4c4:	ldrd	r2, r3, [r4, #64]	; 0x40
   1c4c8:	orrs	r3, r2
   1c4ca:	bne.n	1c4d0 <btrfs_read_dev_super@@Base+0x110>
   1c4cc:	cmp	r5, #0
   1c4ce:	beq.n	1c594 <btrfs_read_dev_super@@Base+0x1d4>
   1c4d0:	add.w	r3, sp, #4224	; 0x1080
   1c4d4:	mov	r0, r4
   1c4d6:	ldr	r1, [r3, #0]
   1c4d8:	bl	1c110 <btrfs_check_super@@Base>
   1c4dc:	cmp	r0, #0
   1c4de:	bne.n	1c58a <btrfs_read_dev_super@@Base+0x1ca>
   1c4e0:	cmp.w	r8, #0
   1c4e4:	bne.n	1c566 <btrfs_read_dev_super@@Base+0x1a6>
   1c4e6:	ldr.w	r3, [r4, #188]	; 0xbc
   1c4ea:	and.w	r3, r3, #1024	; 0x400
   1c4ee:	strd	r3, r8, [sp, #16]
   1c4f2:	ldrd	r2, r3, [sp, #16]
   1c4f6:	orrs	r3, r2
   1c4f8:	beq.n	1c51a <btrfs_read_dev_super@@Base+0x15a>
   1c4fa:	addw	r3, r6, #567	; 0x237
   1c4fe:	sub.w	r7, r6, #20
   1c502:	addw	ip, r6, #583	; 0x247
   1c506:	ldr	r0, [r3, #0]
   1c508:	adds	r3, #8
   1c50a:	ldr.w	r1, [r3, #-4]
   1c50e:	cmp	r3, ip
   1c510:	mov	r2, r7
   1c512:	stmia	r2!, {r0, r1}
   1c514:	mov	r7, r2
   1c516:	bne.n	1c506 <btrfs_read_dev_super@@Base+0x146>
   1c518:	movs	r7, #1
   1c51a:	add	r3, sp, #100	; 0x64
   1c51c:	add.w	ip, sp, #36	; 0x24
   1c520:	ldmia	r3, {r0, r1, r2, r3}
   1c522:	stmia.w	ip, {r0, r1, r2, r3}
   1c526:	ldrd	r8, r9, [r4, #72]	; 0x48
   1c52a:	ldrd	r2, r3, [sp, #8]
   1c52e:	cmp	r3, r9
   1c530:	it	eq
   1c532:	cmpeq	r2, r8
   1c534:	bcs.n	1c548 <btrfs_read_dev_super@@Base+0x188>
   1c536:	vmov	r0, s16
   1c53a:	mov.w	r2, #4096	; 0x1000
   1c53e:	mov	r1, r4
   1c540:	blx	8480 <memcpy@plt+0x4>
   1c544:	strd	r8, r9, [sp, #8]
   1c548:	mov.w	r8, #1
   1c54c:	b.n	1c58a <btrfs_read_dev_super@@Base+0x1ca>
   1c54e:	movs	r3, #0
   1c550:	movs	r2, #0
   1c552:	strd	r2, r3, [sp, #8]
   1c556:	add	r3, sp, #100	; 0x64
   1c558:	movs	r7, #0
   1c55a:	add	r6, sp, #72	; 0x48
   1c55c:	vmov	s18, r3
   1c560:	mov	r5, r7
   1c562:	mov	r8, r7
   1c564:	b.n	1c4a0 <btrfs_read_dev_super@@Base+0xe0>
   1c566:	vmov	r1, s18
   1c56a:	add	r0, sp, #36	; 0x24
   1c56c:	movs	r2, #16
   1c56e:	blx	84a8 <memcmp@plt+0x4>
   1c572:	cbnz	r0, 1c58a <btrfs_read_dev_super@@Base+0x1ca>
   1c574:	cmp	r7, #0
   1c576:	beq.n	1c526 <btrfs_read_dev_super@@Base+0x166>
   1c578:	addw	r1, r6, #567	; 0x237
   1c57c:	sub.w	r0, r6, #20
   1c580:	movs	r2, #16
   1c582:	blx	84a8 <memcmp@plt+0x4>
   1c586:	cmp	r0, #0
   1c588:	beq.n	1c526 <btrfs_read_dev_super@@Base+0x166>
   1c58a:	ldr	r3, [sp, #28]
   1c58c:	adds	r5, #1
   1c58e:	cmp	r3, r5
   1c590:	bne.w	1c480 <btrfs_read_dev_super@@Base+0xc0>
   1c594:	ldrd	r3, r2, [sp, #8]
   1c598:	orrs	r3, r2
   1c59a:	ite	eq
   1c59c:	moveq.w	r0, #4294967295	; 0xffffffff
   1c5a0:	movne	r0, #0
   1c5a2:	b.n	1c42c <btrfs_read_dev_super@@Base+0x6c>
   1c5a4:	mvn.w	r0, #1
   1c5a8:	b.n	1c42c <btrfs_read_dev_super@@Base+0x6c>
   1c5aa:	mvn.w	r0, #4
   1c5ae:	b.n	1c42c <btrfs_read_dev_super@@Base+0x6c>
   1c5b0:	add.w	sp, sp, #4160	; 0x1040
   1c5b4:	add	sp, #12
   1c5b6:	vpop	{d8-d9}
   1c5ba:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c5be:	nop
   1c5c0:	lsls	r0, r4, #8
   1c5c2:	movs	r0, r0
   1c5c4:	ldrb	r0, [r5, #6]
   1c5c6:	movs	r4, r0
   1c5c8:	ldrb	r6, [r1, #5]
   1c5ca:	movs	r4, r0

0001c5cc <write_all_supers@@Base>:
   1c5cc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c5d0:	mov	r4, r0
   1c5d2:	vpush	{d8}
   1c5d6:	ldr	r2, [pc, #1004]	; (1c9c4 <write_all_supers@@Base+0x3f8>)
   1c5d8:	ldr	r3, [pc, #1004]	; (1c9c8 <write_all_supers@@Base+0x3fc>)
   1c5da:	add	r2, pc
   1c5dc:	ldr.w	r5, [r0, #308]	; 0x134
   1c5e0:	sub	sp, #68	; 0x44
   1c5e2:	ldr	r3, [r2, r3]
   1c5e4:	ldr.w	r7, [r0, #352]	; 0x160
   1c5e8:	mov	r0, r5
   1c5ea:	ldr	r3, [r3, #0]
   1c5ec:	str	r3, [sp, #60]	; 0x3c
   1c5ee:	mov.w	r3, #0
   1c5f2:	add.w	r3, r7, #72	; 0x48
   1c5f6:	str	r3, [sp, #20]
   1c5f8:	bl	1b3b2 <btrfs_fs_roots_compare_roots@@Base+0x4>
   1c5fc:	addw	r5, r5, #2859	; 0xb2b
   1c600:	movs	r3, #168	; 0xa8
   1c602:	mla	r3, r3, r0, r5
   1c606:	ldr.w	r8, [r3, #8]
   1c60a:	ldr.w	r9, [r3, #12]
   1c60e:	ldr	r3, [r4, #28]
   1c610:	ldr	r1, [r3, #0]
   1c612:	ldr.w	r3, [r1, #180]	; 0xb4
   1c616:	ldr.w	r2, [r1, #176]	; 0xb0
   1c61a:	cmp	r9, r3
   1c61c:	it	eq
   1c61e:	cmpeq	r8, r2
   1c620:	beq.n	1c632 <write_all_supers@@Base+0x66>
   1c622:	adds	r0, #1
   1c624:	negs	r3, r0
   1c626:	and.w	r0, r0, #3
   1c62a:	and.w	r3, r3, #3
   1c62e:	it	pl
   1c630:	negpl	r0, r3
   1c632:	movs	r2, #168	; 0xa8
   1c634:	movs	r1, #0
   1c636:	mul.w	r6, r2, r0
   1c63a:	adds	r3, r5, r6
   1c63c:	mov	r0, r3
   1c63e:	blx	87c4 <memset@plt+0x4>
   1c642:	ldr	r2, [r4, #28]
   1c644:	ldr	r2, [r2, #0]
   1c646:	ldrd	r1, r2, [r2, #40]	; 0x28
   1c64a:	str	r1, [r5, r6]
   1c64c:	str	r2, [r0, #4]
   1c64e:	mov	r3, r0
   1c650:	ldr	r2, [r4, #28]
   1c652:	ldr	r2, [r2, #0]
   1c654:	ldr.w	r1, [r2, #176]	; 0xb0
   1c658:	ldr.w	r2, [r2, #180]	; 0xb4
   1c65c:	str	r1, [r0, #8]
   1c65e:	str	r2, [r0, #12]
   1c660:	ldr	r2, [r4, #28]
   1c662:	ldr	r2, [r2, #0]
   1c664:	ldrb.w	r2, [r2, #196]	; 0xc4
   1c668:	strb.w	r2, [r0, #152]	; 0x98
   1c66c:	ldr	r2, [r4, #32]
   1c66e:	ldr	r2, [r2, #0]
   1c670:	ldrd	r1, r2, [r2, #40]	; 0x28
   1c674:	str	r1, [r0, #16]
   1c676:	str	r2, [r0, #20]
   1c678:	ldr	r2, [r4, #32]
   1c67a:	ldr	r2, [r2, #0]
   1c67c:	ldr.w	r1, [r2, #176]	; 0xb0
   1c680:	ldr.w	r2, [r2, #180]	; 0xb4
   1c684:	str	r1, [r0, #24]
   1c686:	str	r2, [r0, #28]
   1c688:	ldr	r2, [r4, #32]
   1c68a:	ldr	r2, [r2, #0]
   1c68c:	ldrb.w	r2, [r2, #196]	; 0xc4
   1c690:	strb.w	r2, [r0, #153]	; 0x99
   1c694:	ldr	r2, [r4, #24]
   1c696:	ldr	r2, [r2, #0]
   1c698:	ldrd	r1, r2, [r2, #40]	; 0x28
   1c69c:	str	r1, [r0, #32]
   1c69e:	str	r2, [r0, #36]	; 0x24
   1c6a0:	ldr	r2, [r4, #24]
   1c6a2:	ldr	r2, [r2, #0]
   1c6a4:	ldr.w	r1, [r2, #176]	; 0xb0
   1c6a8:	ldr.w	r2, [r2, #180]	; 0xb4
   1c6ac:	str	r1, [r0, #40]	; 0x28
   1c6ae:	str	r2, [r0, #44]	; 0x2c
   1c6b0:	ldr	r2, [r4, #24]
   1c6b2:	ldr	r2, [r2, #0]
   1c6b4:	ldrb.w	r2, [r2, #196]	; 0xc4
   1c6b8:	strb.w	r2, [r0, #154]	; 0x9a
   1c6bc:	ldr	r2, [r4, #20]
   1c6be:	cbz	r2, 1c6e8 <write_all_supers@@Base+0x11c>
   1c6c0:	ldr	r2, [r2, #0]
   1c6c2:	cbz	r2, 1c6e8 <write_all_supers@@Base+0x11c>
   1c6c4:	ldrd	r1, r2, [r2, #40]	; 0x28
   1c6c8:	str	r1, [r0, #48]	; 0x30
   1c6ca:	str	r2, [r0, #52]	; 0x34
   1c6cc:	ldr	r2, [r4, #20]
   1c6ce:	ldr	r2, [r2, #0]
   1c6d0:	ldr.w	r1, [r2, #176]	; 0xb0
   1c6d4:	ldr.w	r2, [r2, #180]	; 0xb4
   1c6d8:	str	r1, [r0, #56]	; 0x38
   1c6da:	str	r2, [r0, #60]	; 0x3c
   1c6dc:	ldr	r2, [r4, #20]
   1c6de:	ldr	r2, [r2, #0]
   1c6e0:	ldrb.w	r2, [r2, #196]	; 0xc4
   1c6e4:	strb.w	r2, [r0, #155]	; 0x9b
   1c6e8:	ldr	r2, [r4, #36]	; 0x24
   1c6ea:	add.w	sl, sp, #28
   1c6ee:	ldr	r2, [r2, #0]
   1c6f0:	ldrd	r1, r2, [r2, #40]	; 0x28
   1c6f4:	str	r1, [r3, #64]	; 0x40
   1c6f6:	str	r2, [r3, #68]	; 0x44
   1c6f8:	ldr	r2, [r4, #36]	; 0x24
   1c6fa:	ldr	r2, [r2, #0]
   1c6fc:	ldr.w	r1, [r2, #176]	; 0xb0
   1c700:	ldr.w	r2, [r2, #180]	; 0xb4
   1c704:	str	r1, [r3, #72]	; 0x48
   1c706:	str	r2, [r3, #76]	; 0x4c
   1c708:	ldr	r2, [r4, #36]	; 0x24
   1c70a:	ldr	r2, [r2, #0]
   1c70c:	ldrb.w	r2, [r2, #196]	; 0xc4
   1c710:	strb.w	r2, [r3, #156]	; 0x9c
   1c714:	ldr	r2, [r4, #40]	; 0x28
   1c716:	ldr	r2, [r2, #0]
   1c718:	ldrd	r1, r2, [r2, #40]	; 0x28
   1c71c:	str	r1, [r3, #80]	; 0x50
   1c71e:	str	r2, [r3, #84]	; 0x54
   1c720:	ldr	r2, [r4, #40]	; 0x28
   1c722:	ldr	r2, [r2, #0]
   1c724:	ldr.w	r1, [r2, #176]	; 0xb0
   1c728:	ldr.w	r2, [r2, #180]	; 0xb4
   1c72c:	str	r1, [r3, #88]	; 0x58
   1c72e:	str	r2, [r3, #92]	; 0x5c
   1c730:	ldr	r2, [r4, #40]	; 0x28
   1c732:	ldr	r2, [r2, #0]
   1c734:	ldrb.w	r2, [r2, #196]	; 0xc4
   1c738:	strb.w	r2, [r3, #157]	; 0x9d
   1c73c:	ldr.w	r2, [r4, #308]	; 0x134
   1c740:	ldr	r1, [r2, #112]	; 0x70
   1c742:	ldr	r2, [r2, #116]	; 0x74
   1c744:	str	r1, [r3, #96]	; 0x60
   1c746:	str	r2, [r3, #100]	; 0x64
   1c748:	ldr.w	r2, [r4, #308]	; 0x134
   1c74c:	ldr	r1, [r2, #120]	; 0x78
   1c74e:	ldr	r2, [r2, #124]	; 0x7c
   1c750:	str	r1, [r3, #104]	; 0x68
   1c752:	str	r2, [r3, #108]	; 0x6c
   1c754:	ldr.w	r2, [r4, #308]	; 0x134
   1c758:	ldr.w	r1, [r2, #136]	; 0x88
   1c75c:	ldr.w	r2, [r2, #140]	; 0x8c
   1c760:	str	r1, [r3, #112]	; 0x70
   1c762:	str	r2, [r3, #116]	; 0x74
   1c764:	ldr	r3, [pc, #612]	; (1c9cc <write_all_supers@@Base+0x400>)
   1c766:	ldr.w	r6, [r4, #308]	; 0x134
   1c76a:	add	r3, pc
   1c76c:	ldr	r5, [r7, #72]	; 0x48
   1c76e:	vmov	s17, r3
   1c772:	ldr	r3, [sp, #20]
   1c774:	cmp	r5, r3
   1c776:	bne.n	1c77c <write_all_supers@@Base+0x1b0>
   1c778:	movs	r0, #0
   1c77a:	b.n	1c8c6 <write_all_supers@@Base+0x2fa>
   1c77c:	ldr	r3, [r5, #28]
   1c77e:	cmp	r3, #0
   1c780:	beq.n	1c84a <write_all_supers@@Base+0x27e>
   1c782:	movs	r2, #0
   1c784:	strb.w	r2, [r6, #245]	; 0xf5
   1c788:	strb.w	r2, [r6, #246]	; 0xf6
   1c78c:	strb.w	r2, [r6, #247]	; 0xf7
   1c790:	strb.w	r2, [r6, #248]	; 0xf8
   1c794:	strb.w	r2, [r6, #249]	; 0xf9
   1c798:	strb.w	r2, [r6, #250]	; 0xfa
   1c79c:	strb.w	r2, [r6, #251]	; 0xfb
   1c7a0:	strb.w	r2, [r6, #252]	; 0xfc
   1c7a4:	ldrd	r1, r2, [r5, #104]	; 0x68
   1c7a8:	str.w	r1, [r6, #237]	; 0xed
   1c7ac:	str.w	r2, [r6, #241]	; 0xf1
   1c7b0:	ldrd	r1, r2, [r5, #64]	; 0x40
   1c7b4:	str.w	r1, [r6, #201]	; 0xc9
   1c7b8:	str.w	r2, [r6, #205]	; 0xcd
   1c7bc:	ldrd	r1, r2, [r5, #72]	; 0x48
   1c7c0:	str.w	r1, [r6, #209]	; 0xd1
   1c7c4:	str.w	r2, [r6, #213]	; 0xd5
   1c7c8:	ldrd	r1, r2, [r5, #80]	; 0x50
   1c7cc:	str.w	r1, [r6, #217]	; 0xd9
   1c7d0:	add.w	r1, r5, #128	; 0x80
   1c7d4:	str.w	r2, [r6, #221]	; 0xdd
   1c7d8:	addw	r2, r6, #267	; 0x10b
   1c7dc:	ldr	r3, [r5, #88]	; 0x58
   1c7de:	str.w	r3, [r6, #225]	; 0xe1
   1c7e2:	ldr	r3, [r5, #92]	; 0x5c
   1c7e4:	str.w	r3, [r6, #229]	; 0xe5
   1c7e8:	ldr	r3, [r5, #96]	; 0x60
   1c7ea:	str.w	r3, [r6, #233]	; 0xe9
   1c7ee:	add.w	r3, r5, #112	; 0x70
   1c7f2:	ldr.w	r0, [r3], #4
   1c7f6:	cmp	r3, r1
   1c7f8:	str.w	r0, [r2], #4
   1c7fc:	bne.n	1c7f2 <write_all_supers@@Base+0x226>
   1c7fe:	ldr.w	r3, [r4, #352]	; 0x160
   1c802:	addw	r1, r6, #283	; 0x11b
   1c806:	add.w	r2, r3, #16
   1c80a:	adds	r3, #32
   1c80c:	ldr.w	r0, [r2], #4
   1c810:	cmp	r2, r3
   1c812:	str.w	r0, [r1], #4
   1c816:	bne.n	1c80c <write_all_supers@@Base+0x240>
   1c818:	ldr	r2, [r6, #60]	; 0x3c
   1c81a:	ldr	r3, [r6, #56]	; 0x38
   1c81c:	ldrh.w	fp, [r6, #196]	; 0xc4
   1c820:	orr.w	r3, r3, #1
   1c824:	str	r2, [r6, #60]	; 0x3c
   1c826:	str	r3, [r6, #56]	; 0x38
   1c828:	ldr	r0, [r5, #24]
   1c82a:	blx	83b4 <fsync@plt>
   1c82e:	cmp	r0, #0
   1c830:	bge.n	1c84e <write_all_supers@@Base+0x282>
   1c832:	ldr	r0, [pc, #412]	; (1c9d0 <write_all_supers@@Base+0x404>)
   1c834:	ldrd	r2, r3, [r5, #64]	; 0x40
   1c838:	add	r0, pc
   1c83a:	bl	16b70 <__btrfs_error@@Base>
   1c83e:	blx	8784 <__errno_location@plt>
   1c842:	ldr	r0, [r0, #0]
   1c844:	negs	r0, r0
   1c846:	cmp	r0, #0
   1c848:	blt.n	1c8c6 <write_all_supers@@Base+0x2fa>
   1c84a:	ldr	r5, [r5, #0]
   1c84c:	b.n	1c772 <write_all_supers@@Base+0x1a6>
   1c84e:	ldrd	r8, r9, [r4, #320]	; 0x140
   1c852:	cmp.w	r9, #0
   1c856:	it	eq
   1c858:	cmpeq.w	r8, #65536	; 0x10000
   1c85c:	beq.n	1c8ee <write_all_supers@@Base+0x322>
   1c85e:	mov	r2, sl
   1c860:	add.w	r1, r6, #32
   1c864:	mov.w	r3, #4064	; 0xfe0
   1c868:	mov	r0, fp
   1c86a:	str.w	r8, [r6, #48]	; 0x30
   1c86e:	mov	r7, sl
   1c870:	str.w	r9, [r6, #52]	; 0x34
   1c874:	bl	1b73e <btrfs_csum_data@@Base>
   1c878:	add.w	ip, sp, #60	; 0x3c
   1c87c:	mov	r2, r6
   1c87e:	mov	r3, r7
   1c880:	adds	r2, #8
   1c882:	ldmia	r3!, {r0, r1}
   1c884:	cmp	r3, ip
   1c886:	str.w	r0, [r2, #-8]
   1c88a:	mov	r7, r3
   1c88c:	str.w	r1, [r2, #-4]
   1c890:	bne.n	1c87e <write_all_supers@@Base+0x2b2>
   1c892:	ldrd	r2, r3, [r4, #320]	; 0x140
   1c896:	ldr.w	r1, [r4, #308]	; 0x134
   1c89a:	strd	r2, r3, [sp]
   1c89e:	mov.w	r2, #4096	; 0x1000
   1c8a2:	ldr	r0, [r5, #24]
   1c8a4:	blx	8828 <pwrite64@plt>
   1c8a8:	cmp.w	r0, #4096	; 0x1000
   1c8ac:	beq.n	1c8da <write_all_supers@@Base+0x30e>
   1c8ae:	blx	8784 <__errno_location@plt>
   1c8b2:	movs	r3, #5
   1c8b4:	str	r3, [r0, #0]
   1c8b6:	ldr	r0, [pc, #284]	; (1c9d4 <write_all_supers@@Base+0x408>)
   1c8b8:	ldrd	r2, r3, [r5, #64]	; 0x40
   1c8bc:	add	r0, pc
   1c8be:	bl	16b70 <__btrfs_error@@Base>
   1c8c2:	mvn.w	r0, #4
   1c8c6:	ldr	r2, [pc, #272]	; (1c9d8 <write_all_supers@@Base+0x40c>)
   1c8c8:	ldr	r3, [pc, #252]	; (1c9c8 <write_all_supers@@Base+0x3fc>)
   1c8ca:	add	r2, pc
   1c8cc:	ldr	r3, [r2, r3]
   1c8ce:	ldr	r2, [r3, #0]
   1c8d0:	ldr	r3, [sp, #60]	; 0x3c
   1c8d2:	eors	r2, r3
   1c8d4:	beq.n	1c9ba <write_all_supers@@Base+0x3ee>
   1c8d6:	blx	8510 <__stack_chk_fail@plt>
   1c8da:	ldr	r0, [r5, #24]
   1c8dc:	blx	83b4 <fsync@plt>
   1c8e0:	cmp	r0, #0
   1c8e2:	bge.n	1c84a <write_all_supers@@Base+0x27e>
   1c8e4:	ldr	r0, [pc, #244]	; (1c9dc <write_all_supers@@Base+0x410>)
   1c8e6:	ldrd	r2, r3, [r5, #64]	; 0x40
   1c8ea:	add	r0, pc
   1c8ec:	b.n	1c83a <write_all_supers@@Base+0x26e>
   1c8ee:	add.w	r3, r6, #32
   1c8f2:	movs	r7, #0
   1c8f4:	vmov	s16, r3
   1c8f8:	b.n	1c936 <write_all_supers@@Base+0x36a>
   1c8fa:	cbnz	r7, 1c910 <write_all_supers@@Base+0x344>
   1c8fc:	ldr	r0, [r5, #24]
   1c8fe:	blx	83b4 <fsync@plt>
   1c902:	cmp	r0, #0
   1c904:	bge.n	1c910 <write_all_supers@@Base+0x344>
   1c906:	vmov	r0, s17
   1c90a:	ldrd	r2, r3, [r5, #64]	; 0x40
   1c90e:	b.n	1c83a <write_all_supers@@Base+0x26e>
   1c910:	adds	r7, #1
   1c912:	cmp	r7, #3
   1c914:	beq.n	1c84a <write_all_supers@@Base+0x27e>
   1c916:	movs	r3, #12
   1c918:	mov.w	r2, #16384	; 0x4000
   1c91c:	muls	r3, r7
   1c91e:	sub.w	r0, r3, #32
   1c922:	rsb	r1, r3, #32
   1c926:	lsl.w	r9, r2, r0
   1c92a:	lsr.w	r1, r2, r1
   1c92e:	orr.w	r9, r9, r1
   1c932:	lsl.w	r8, r2, r3
   1c936:	adds.w	r3, r8, #4096	; 0x1000
   1c93a:	str	r3, [sp, #8]
   1c93c:	adc.w	r3, r9, #0
   1c940:	str	r3, [sp, #12]
   1c942:	ldrd	r0, r1, [sp, #8]
   1c946:	ldrd	r2, r3, [r5, #72]	; 0x48
   1c94a:	cmp	r3, r1
   1c94c:	it	eq
   1c94e:	cmpeq	r2, r0
   1c950:	bcc.w	1c84a <write_all_supers@@Base+0x27e>
   1c954:	mov	r2, sl
   1c956:	vmov	r1, s16
   1c95a:	mov.w	r3, #4064	; 0xfe0
   1c95e:	mov	r0, fp
   1c960:	str.w	r8, [r6, #48]	; 0x30
   1c964:	str.w	r9, [r6, #52]	; 0x34
   1c968:	bl	1b73e <btrfs_csum_data@@Base>
   1c96c:	add.w	lr, sp, #60	; 0x3c
   1c970:	mov	ip, sl
   1c972:	mov	r2, r6
   1c974:	mov	r3, ip
   1c976:	adds	r2, #8
   1c978:	ldmia	r3!, {r0, r1}
   1c97a:	cmp	r3, lr
   1c97c:	str.w	r0, [r2, #-8]
   1c980:	mov	ip, r3
   1c982:	str.w	r1, [r2, #-4]
   1c986:	bne.n	1c974 <write_all_supers@@Base+0x3a8>
   1c988:	strd	r8, r9, [sp]
   1c98c:	mov.w	r2, #4096	; 0x1000
   1c990:	ldr.w	r1, [r4, #308]	; 0x134
   1c994:	ldr	r0, [r5, #24]
   1c996:	blx	8828 <pwrite64@plt>
   1c99a:	cmp.w	r0, #4096	; 0x1000
   1c99e:	beq.n	1c8fa <write_all_supers@@Base+0x32e>
   1c9a0:	blx	8784 <__errno_location@plt>
   1c9a4:	movs	r3, #5
   1c9a6:	mov	r7, r0
   1c9a8:	str	r3, [r0, #0]
   1c9aa:	ldr	r0, [pc, #52]	; (1c9e0 <write_all_supers@@Base+0x414>)
   1c9ac:	ldrd	r2, r3, [r5, #64]	; 0x40
   1c9b0:	add	r0, pc
   1c9b2:	bl	16b70 <__btrfs_error@@Base>
   1c9b6:	ldr	r0, [r7, #0]
   1c9b8:	b.n	1c844 <write_all_supers@@Base+0x278>
   1c9ba:	add	sp, #68	; 0x44
   1c9bc:	vpop	{d8}
   1c9c0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c9c4:	strb	r2, [r5, #30]
   1c9c6:	movs	r4, r0
   1c9c8:	lsls	r0, r4, #8
   1c9ca:	movs	r0, r0
   1c9cc:	cdp2	0, 13, cr0, cr6, cr1, {0}
   1c9d0:	cdp2	0, 0, cr0, cr8, cr1, {0}
   1c9d4:	stc2l	0, cr0, [r0, #4]
   1c9d8:	strb	r2, [r7, #18]
   1c9da:	movs	r4, r0
   1c9dc:	ldc2l	0, cr0, [r6, #-4]
   1c9e0:	stc2l	0, cr0, [ip], {1}

0001c9e4 <write_ctree_super@@Base>:
   1c9e4:	push	{r4, r5, r6, lr}
   1c9e6:	mov	r3, r0
   1c9e8:	ldr	r0, [r0, #0]
   1c9ea:	ldr	r5, [pc, #140]	; (1ca78 <write_ctree_super@@Base+0x94>)
   1c9ec:	ldrb.w	r2, [r0, #364]	; 0x16c
   1c9f0:	add	r5, pc
   1c9f2:	lsls	r2, r2, #30
   1c9f4:	bmi.n	1ca72 <write_ctree_super@@Base+0x8e>
   1c9f6:	ldrd	r1, r2, [r0, #28]
   1c9fa:	ldr.w	r4, [r0, #308]	; 0x134
   1c9fe:	ldrd	r6, r3, [r3, #8]
   1ca02:	str	r6, [r4, #72]	; 0x48
   1ca04:	str	r3, [r4, #76]	; 0x4c
   1ca06:	ldr	r4, [r1, #0]
   1ca08:	ldr.w	r3, [r0, #308]	; 0x134
   1ca0c:	ldrd	r6, r4, [r4, #40]	; 0x28
   1ca10:	str	r6, [r3, #80]	; 0x50
   1ca12:	str	r4, [r3, #84]	; 0x54
   1ca14:	ldr	r1, [r1, #0]
   1ca16:	ldr.w	r3, [r0, #308]	; 0x134
   1ca1a:	ldrb.w	r1, [r1, #196]	; 0xc4
   1ca1e:	strb.w	r1, [r3, #198]	; 0xc6
   1ca22:	ldr	r1, [r2, #0]
   1ca24:	ldr.w	r3, [r0, #308]	; 0x134
   1ca28:	ldrd	r4, r1, [r1, #40]	; 0x28
   1ca2c:	str	r4, [r3, #88]	; 0x58
   1ca2e:	str	r1, [r3, #92]	; 0x5c
   1ca30:	ldr	r1, [r2, #0]
   1ca32:	ldr.w	r3, [r0, #308]	; 0x134
   1ca36:	ldrb.w	r1, [r1, #196]	; 0xc4
   1ca3a:	strb.w	r1, [r3, #199]	; 0xc7
   1ca3e:	ldr	r2, [r2, #0]
   1ca40:	ldr.w	r3, [r0, #308]	; 0x134
   1ca44:	ldr.w	r1, [r2, #176]	; 0xb0
   1ca48:	ldr.w	r2, [r2, #180]	; 0xb4
   1ca4c:	str.w	r1, [r3, #164]	; 0xa4
   1ca50:	str.w	r2, [r3, #168]	; 0xa8
   1ca54:	bl	1c5cc <write_all_supers@@Base>
   1ca58:	mov	r4, r0
   1ca5a:	cbz	r0, 1ca6e <write_ctree_super@@Base+0x8a>
   1ca5c:	ldr	r3, [pc, #28]	; (1ca7c <write_ctree_super@@Base+0x98>)
   1ca5e:	movs	r1, #1
   1ca60:	ldr	r2, [pc, #28]	; (1ca80 <write_ctree_super@@Base+0x9c>)
   1ca62:	ldr	r0, [r5, r3]
   1ca64:	add	r2, pc
   1ca66:	mov	r3, r4
   1ca68:	ldr	r0, [r0, #0]
   1ca6a:	blx	8860 <__fprintf_chk@plt+0x4>
   1ca6e:	mov	r0, r4
   1ca70:	pop	{r4, r5, r6, pc}
   1ca72:	movs	r4, #0
   1ca74:	b.n	1ca6e <write_ctree_super@@Base+0x8a>
   1ca76:	nop
   1ca78:	strb	r4, [r2, #14]
   1ca7a:	movs	r4, r0
   1ca7c:	lsls	r0, r6, #8
   1ca7e:	movs	r0, r0
   1ca80:	mrrc2	0, 0, r0, r4, cr1

0001ca84 <close_ctree_fs_info@@Base>:
   1ca84:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1ca88:	mov	r5, r0
   1ca8a:	ldrd	r2, r3, [r5, #232]	; 0xe8
   1ca8e:	ldr	r6, [r0, #28]
   1ca90:	ldrd	r0, r1, [r0, #240]	; 0xf0
   1ca94:	ldr	r7, [pc, #332]	; (1cbe4 <close_ctree_fs_info@@Base+0x160>)
   1ca96:	cmp	r1, r3
   1ca98:	it	eq
   1ca9a:	cmpeq	r0, r2
   1ca9c:	add	r7, pc
   1ca9e:	bne.n	1cb0c <close_ctree_fs_info@@Base+0x88>
   1caa0:	ldrb.w	r3, [r5, #365]	; 0x16d
   1caa4:	lsls	r3, r3, #29
   1caa6:	bpl.w	1cbe0 <close_ctree_fs_info@@Base+0x15c>
   1caaa:	ldr.w	r3, [r5, #308]	; 0x134
   1caae:	movs	r2, #95	; 0x5f
   1cab0:	movs	r1, #66	; 0x42
   1cab2:	movs	r4, #0
   1cab4:	mov	r0, r5
   1cab6:	strb.w	r2, [r3, #64]	; 0x40
   1caba:	strb.w	r1, [r3, #65]	; 0x41
   1cabe:	movs	r1, #72	; 0x48
   1cac0:	strb.w	r2, [r3, #70]	; 0x46
   1cac4:	movs	r2, #77	; 0x4d
   1cac6:	strb.w	r1, [r3, #66]	; 0x42
   1caca:	movs	r1, #82	; 0x52
   1cacc:	strb.w	r2, [r3, #71]	; 0x47
   1cad0:	strb.w	r1, [r3, #67]	; 0x43
   1cad4:	movs	r1, #102	; 0x66
   1cad6:	strb.w	r1, [r3, #68]	; 0x44
   1cada:	movs	r1, #83	; 0x53
   1cadc:	strb.w	r1, [r3, #69]	; 0x45
   1cae0:	ldr.w	r3, [r6, #464]	; 0x1d0
   1cae4:	ldrb.w	r2, [r3, #365]	; 0x16d
   1cae8:	bfi	r2, r4, #2, #1
   1caec:	strb.w	r2, [r3, #365]	; 0x16d
   1caf0:	bl	1c5cc <write_all_supers@@Base>
   1caf4:	cmp	r0, #0
   1caf6:	beq.n	1cbe0 <close_ctree_fs_info@@Base+0x15c>
   1caf8:	ldr	r3, [pc, #236]	; (1cbe8 <close_ctree_fs_info@@Base+0x164>)
   1cafa:	movs	r1, #1
   1cafc:	ldr	r2, [pc, #236]	; (1cbec <close_ctree_fs_info@@Base+0x168>)
   1cafe:	ldr	r6, [r7, r3]
   1cb00:	add	r2, pc
   1cb02:	mov	r3, r0
   1cb04:	ldr	r0, [r6, #0]
   1cb06:	blx	8860 <__fprintf_chk@plt+0x4>
   1cb0a:	b.n	1cba6 <close_ctree_fs_info@@Base+0x122>
   1cb0c:	ldr.w	r9, [pc, #224]	; 1cbf0 <close_ctree_fs_info@@Base+0x16c>
   1cb10:	clz	r3, r6
   1cb14:	ldr	r0, [pc, #220]	; (1cbf4 <close_ctree_fs_info@@Base+0x170>)
   1cb16:	movw	r2, #1870	; 0x74e
   1cb1a:	add	r9, pc
   1cb1c:	lsrs	r3, r3, #5
   1cb1e:	add.w	r9, r9, #33	; 0x21
   1cb22:	add	r0, pc
   1cb24:	mov	r1, r9
   1cb26:	bl	1b734 <btrfs_fs_roots_compare_roots@@Base+0x386>
   1cb2a:	movs	r1, #1
   1cb2c:	mov	r0, r6
   1cb2e:	bl	2a674 <btrfs_start_transaction@@Base>
   1cb32:	cmn.w	r0, #4096	; 0x1000
   1cb36:	mov	r4, r0
   1cb38:	bhi.n	1cba6 <close_ctree_fs_info@@Base+0x122>
   1cb3a:	mov	r1, r6
   1cb3c:	ldr	r4, [pc, #184]	; (1cbf8 <close_ctree_fs_info@@Base+0x174>)
   1cb3e:	bl	2a8f4 <btrfs_commit_transaction@@Base>
   1cb42:	movs	r1, #1
   1cb44:	mov	r0, r6
   1cb46:	add	r4, pc
   1cb48:	bl	2a674 <btrfs_start_transaction@@Base>
   1cb4c:	movw	r2, #1878	; 0x756
   1cb50:	mov	r1, r9
   1cb52:	cmn.w	r0, #4096	; 0x1000
   1cb56:	mov	r8, r0
   1cb58:	ldr	r0, [pc, #160]	; (1cbfc <close_ctree_fs_info@@Base+0x178>)
   1cb5a:	ite	ls
   1cb5c:	movls	r3, #0
   1cb5e:	movhi	r3, #1
   1cb60:	add	r0, pc
   1cb62:	bl	1b734 <btrfs_fs_roots_compare_roots@@Base+0x386>
   1cb66:	mov	r1, r5
   1cb68:	mov	r0, r8
   1cb6a:	bl	2a700 <commit_tree_roots@@Base>
   1cb6e:	mov.w	r2, #1880	; 0x758
   1cb72:	mov	r1, r9
   1cb74:	mov	r3, r0
   1cb76:	mov	r0, r4
   1cb78:	bl	1b734 <btrfs_fs_roots_compare_roots@@Base+0x386>
   1cb7c:	mov	r1, r6
   1cb7e:	mov	r0, r8
   1cb80:	bl	2a818 <__commit_transaction@@Base>
   1cb84:	movw	r2, #1882	; 0x75a
   1cb88:	mov	r1, r9
   1cb8a:	mov	r3, r0
   1cb8c:	mov	r0, r4
   1cb8e:	bl	1b734 <btrfs_fs_roots_compare_roots@@Base+0x386>
   1cb92:	mov	r0, r8
   1cb94:	bl	1c9e4 <write_ctree_super@@Base>
   1cb98:	mov	r4, r0
   1cb9a:	mov	r0, r8
   1cb9c:	blx	8434 <free@plt+0x4>
   1cba0:	cmp	r4, #0
   1cba2:	beq.w	1caa0 <close_ctree_fs_info@@Base+0x1c>
   1cba6:	mov	r0, r5
   1cba8:	bl	204f6 <btrfs_free_block_groups@@Base>
   1cbac:	ldr	r1, [pc, #80]	; (1cc00 <close_ctree_fs_info@@Base+0x17c>)
   1cbae:	add.w	r0, r5, #56	; 0x38
   1cbb2:	add	r1, pc
   1cbb4:	bl	16ff2 <rb_free_nodes@@Base>
   1cbb8:	mov	r0, r5
   1cbba:	bl	1bf4c <btrfs_release_all_roots@@Base>
   1cbbe:	ldr.w	r0, [r5, #352]	; 0x160
   1cbc2:	bl	27624 <btrfs_close_devices@@Base>
   1cbc6:	mov	r6, r0
   1cbc8:	mov	r0, r5
   1cbca:	bl	1bfb0 <btrfs_cleanup_all_caches@@Base>
   1cbce:	mov	r0, r5
   1cbd0:	bl	1bd08 <btrfs_free_fs_info@@Base>
   1cbd4:	cmp	r4, #0
   1cbd6:	ite	ne
   1cbd8:	movne	r0, r4
   1cbda:	moveq	r0, r6
   1cbdc:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1cbe0:	movs	r4, #0
   1cbe2:	b.n	1cba6 <close_ctree_fs_info@@Base+0x122>
   1cbe4:	strb	r0, [r5, #11]
   1cbe6:	movs	r4, r0
   1cbe8:	lsls	r0, r6, #8
   1cbea:	movs	r0, r0
   1cbec:			; <UNDEFINED> instruction: 0xfbb80001
   1cbf0:	vaddl.u32	q8, d3, d1
   1cbf4:			; <UNDEFINED> instruction: 0xfbbe0001
   1cbf8:	ldmia	r1, {r1, r2, r3, r4, r7}
   1cbfa:	movs	r1, r0
   1cbfc:	smull	r0, r0, r6, r1
   1cc00:	bl	168c02 <__bss_end__@@Base+0x10395a>

0001cc04 <clean_tree_block@@Base>:
   1cc04:	b.w	169c2 <clear_extent_buffer_dirty@@Base>

0001cc08 <btrfs_mark_buffer_dirty@@Base>:
   1cc08:	b.w	16988 <set_extent_buffer_dirty@@Base>

0001cc0c <btrfs_buffer_uptodate@@Base>:
   1cc0c:	push	{r0, r1, r2, lr}
   1cc0e:	mov	r1, r0
   1cc10:	bl	1b508 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1cc14:	cbz	r0, 1cc26 <btrfs_buffer_uptodate@@Base+0x1a>
   1cc16:	movs	r0, #1
   1cc18:	str	r0, [sp, #0]
   1cc1a:	mov	r0, r1
   1cc1c:	bl	1b51c <btrfs_fs_roots_compare_roots@@Base+0x16e>
   1cc20:	clz	r0, r0
   1cc24:	lsrs	r0, r0, #5
   1cc26:	add	sp, #12
   1cc28:	ldr.w	pc, [sp], #4

0001cc2c <readahead_tree_block@@Base>:
   1cc2c:	push	{r4, r5, r6, r7, lr}
   1cc2e:	sub	sp, #44	; 0x2c
   1cc30:	ldr	r5, [pc, #148]	; (1ccc8 <readahead_tree_block@@Base+0x9c>)
   1cc32:	mov	r4, r0
   1cc34:	ldr	r1, [pc, #148]	; (1cccc <readahead_tree_block@@Base+0xa0>)
   1cc36:	mov	r6, r2
   1cc38:	add	r5, pc
   1cc3a:	mov	r7, r3
   1cc3c:	ldr	r1, [r5, r1]
   1cc3e:	ldr	r1, [r1, #0]
   1cc40:	str	r1, [sp, #36]	; 0x24
   1cc42:	mov.w	r1, #0
   1cc46:	movs	r1, #0
   1cc48:	str	r1, [sp, #20]
   1cc4a:	ldr.w	r1, [r0, #384]	; 0x180
   1cc4e:	str	r1, [sp, #0]
   1cc50:	bl	1b920 <btrfs_find_tree_block@@Base>
   1cc54:	mov	r5, r0
   1cc56:	cbnz	r0, 1cc96 <readahead_tree_block@@Base+0x6a>
   1cc58:	add	r3, sp, #20
   1cc5a:	movs	r1, #0
   1cc5c:	str	r3, [sp, #4]
   1cc5e:	mov	r2, r6
   1cc60:	add	r3, sp, #24
   1cc62:	mov	r0, r4
   1cc64:	str	r3, [sp, #0]
   1cc66:	mov	r3, r7
   1cc68:	strd	r1, r1, [sp, #8]
   1cc6c:	bl	29520 <btrfs_map_block@@Base>
   1cc70:	cbnz	r0, 1cca2 <readahead_tree_block@@Base+0x76>
   1cc72:	ldr	r0, [sp, #20]
   1cc74:	ldr	r1, [r0, #8]
   1cc76:	ldrd	r3, r2, [r1, #16]
   1cc7a:	adds	r3, #1
   1cc7c:	adc.w	r2, r2, #0
   1cc80:	strd	r3, r2, [r1, #16]
   1cc84:	ldr.w	r3, [r4, #384]	; 0x180
   1cc88:	str	r3, [sp, #0]
   1cc8a:	ldrd	r2, r3, [r0, #16]
   1cc8e:	ldr	r0, [r1, #24]
   1cc90:	blx	85ec <readahead@plt>
   1cc94:	b.n	1cca2 <readahead_tree_block@@Base+0x76>
   1cc96:	ldrd	r2, r3, [sp, #64]	; 0x40
   1cc9a:	bl	1cc0c <btrfs_buffer_uptodate@@Base>
   1cc9e:	cmp	r0, #0
   1cca0:	beq.n	1cc58 <readahead_tree_block@@Base+0x2c>
   1cca2:	mov	r0, r5
   1cca4:	bl	16314 <free_extent_buffer@@Base>
   1cca8:	ldr	r0, [sp, #20]
   1ccaa:	blx	8434 <free@plt+0x4>
   1ccae:	ldr	r2, [pc, #32]	; (1ccd0 <readahead_tree_block@@Base+0xa4>)
   1ccb0:	ldr	r3, [pc, #24]	; (1cccc <readahead_tree_block@@Base+0xa0>)
   1ccb2:	add	r2, pc
   1ccb4:	ldr	r3, [r2, r3]
   1ccb6:	ldr	r2, [r3, #0]
   1ccb8:	ldr	r3, [sp, #36]	; 0x24
   1ccba:	eors	r2, r3
   1ccbc:	beq.n	1ccc2 <readahead_tree_block@@Base+0x96>
   1ccbe:	blx	8510 <__stack_chk_fail@plt>
   1ccc2:	add	sp, #44	; 0x2c
   1ccc4:	pop	{r4, r5, r6, r7, pc}
   1ccc6:	nop
   1ccc8:	strb	r4, [r1, #5]
   1ccca:	movs	r4, r0
   1cccc:	lsls	r0, r4, #8
   1ccce:	movs	r0, r0
   1ccd0:	strb	r2, [r2, #3]
   1ccd2:	movs	r4, r0

0001ccd4 <write_tree_block@@Base>:
   1ccd4:	push	{r0, r1, r2, r4, r5, lr}
   1ccd6:	mov	r4, r1
   1ccd8:	mov	r5, r0
   1ccda:	mov	r1, r2
   1ccdc:	mov	r0, r4
   1ccde:	str	r2, [sp, #4]
   1cce0:	bl	1b43c <btrfs_fs_roots_compare_roots@@Base+0x8e>
   1cce4:	ldr	r1, [sp, #4]
   1cce6:	cbz	r0, 1cd0e <write_tree_block@@Base+0x3a>
   1cce8:	mov	r0, r4
   1ccea:	bl	1b43c <btrfs_fs_roots_compare_roots@@Base+0x8e>
   1ccee:	ldr	r1, [sp, #4]
   1ccf0:	mov	r2, r0
   1ccf2:	add.w	r0, r4, #352	; 0x160
   1ccf6:	bl	1b598 <btrfs_fs_roots_compare_roots@@Base+0x1ea>
   1ccfa:	ldr	r1, [pc, #100]	; (1cd60 <write_tree_block@@Base+0x8c>)
   1ccfc:	ldr	r0, [pc, #100]	; (1cd64 <write_tree_block@@Base+0x90>)
   1ccfe:	movs	r3, #1
   1cd00:	add	r1, pc
   1cd02:	mov.w	r2, #516	; 0x204
   1cd06:	adds	r1, #53	; 0x35
   1cd08:	add	r0, pc
   1cd0a:	bl	1b6f8 <btrfs_fs_roots_compare_roots@@Base+0x34a>
   1cd0e:	cbz	r5, 1cd32 <write_tree_block@@Base+0x5e>
   1cd10:	mov	r0, r1
   1cd12:	ldrd	r2, r3, [r5, #8]
   1cd16:	str	r1, [sp, #4]
   1cd18:	bl	1cc0c <btrfs_buffer_uptodate@@Base>
   1cd1c:	ldr	r1, [sp, #4]
   1cd1e:	cbnz	r0, 1cd32 <write_tree_block@@Base+0x5e>
   1cd20:	ldr	r1, [pc, #68]	; (1cd68 <write_tree_block@@Base+0x94>)
   1cd22:	movs	r3, #1
   1cd24:	ldr	r0, [pc, #68]	; (1cd6c <write_tree_block@@Base+0x98>)
   1cd26:	mov.w	r2, #520	; 0x208
   1cd2a:	add	r1, pc
   1cd2c:	adds	r1, #53	; 0x35
   1cd2e:	add	r0, pc
   1cd30:	b.n	1cd0a <write_tree_block@@Base+0x36>
   1cd32:	ldr.w	r2, [r1, #156]	; 0x9c
   1cd36:	mov	r0, r4
   1cd38:	ldr.w	r3, [r1, #152]	; 0x98
   1cd3c:	str	r1, [sp, #4]
   1cd3e:	orr.w	r3, r3, #1
   1cd42:	str.w	r2, [r1, #156]	; 0x9c
   1cd46:	str.w	r3, [r1, #152]	; 0x98
   1cd4a:	movs	r2, #0
   1cd4c:	bl	1b8e4 <csum_tree_block@@Base>
   1cd50:	ldr	r1, [sp, #4]
   1cd52:	mov	r0, r4
   1cd54:	add	sp, #12
   1cd56:	ldmia.w	sp!, {r4, r5, lr}
   1cd5a:	b.w	1bb70 <write_and_map_eb@@Base>
   1cd5e:	nop
   1cd60:	ldc2l	0, cr0, [sp, #4]!
   1cd64:	lsls	r1, r1, #7
   1cd66:	movs	r2, r0
   1cd68:	ldc2l	0, cr0, [r3, #4]
   1cd6c:	lsls	r3, r4, #6
   1cd6e:	movs	r2, r0

0001cd70 <btrfs_set_buffer_uptodate@@Base>:
   1cd70:	ldr	r3, [r0, #84]	; 0x54
   1cd72:	orr.w	r3, r3, #4
   1cd76:	str	r3, [r0, #84]	; 0x54
   1cd78:	movs	r0, #0
   1cd7a:	bx	lr

0001cd7c <read_tree_block@@Base>:
   1cd7c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cd80:	mov.w	r9, #0
   1cd84:	ldr.w	r1, [r0, #388]	; 0x184
   1cd88:	cmp	r3, r9
   1cd8a:	ldr.w	fp, [pc, #416]	; 1cf2c <read_tree_block@@Base+0x1b0>
   1cd8e:	sub	sp, #28
   1cd90:	it	eq
   1cd92:	cmpeq	r2, r1
   1cd94:	mov	r5, r0
   1cd96:	add	fp, pc
   1cd98:	mov	r6, r2
   1cd9a:	mov	r7, r3
   1cd9c:	bcc.n	1cdba <read_tree_block@@Base+0x3e>
   1cd9e:	adds.w	r4, r1, #4294967295	; 0xffffffff
   1cda2:	adc.w	ip, r9, #4294967295	; 0xffffffff
   1cda6:	ands	r4, r2
   1cda8:	str	r4, [sp, #8]
   1cdaa:	and.w	r4, ip, r3
   1cdae:	str	r4, [sp, #12]
   1cdb0:	ldrd	r8, r9, [sp, #8]
   1cdb4:	orrs.w	r4, r8, r9
   1cdb8:	beq.n	1cdce <read_tree_block@@Base+0x52>
   1cdba:	ldr	r0, [pc, #372]	; (1cf30 <read_tree_block@@Base+0x1b4>)
   1cdbc:	mov	r2, r6
   1cdbe:	mov	r3, r7
   1cdc0:	str	r1, [sp, #0]
   1cdc2:	add	r0, pc
   1cdc4:	bl	16b70 <__btrfs_error@@Base>
   1cdc8:	mvn.w	r4, #4
   1cdcc:	b.n	1ce7a <read_tree_block@@Base+0xfe>
   1cdce:	bl	1b926 <btrfs_find_create_tree_block@@Base>
   1cdd2:	mov	r4, r0
   1cdd4:	cmp	r0, #0
   1cdd6:	beq.w	1cf1c <read_tree_block@@Base+0x1a0>
   1cdda:	ldrd	r2, r3, [sp, #64]	; 0x40
   1cdde:	bl	1cc0c <btrfs_buffer_uptodate@@Base>
   1cde2:	mov	r6, r0
   1cde4:	cmp	r0, #0
   1cde6:	bne.n	1ce7a <read_tree_block@@Base+0xfe>
   1cde8:	ldr	r3, [r4, #76]	; 0x4c
   1cdea:	add.w	sl, r4, #68	; 0x44
   1cdee:	mov	r8, r6
   1cdf0:	movs	r7, #1
   1cdf2:	strd	r3, r0, [sp]
   1cdf6:	mov	r0, r5
   1cdf8:	ldrd	r2, r3, [r4, #40]	; 0x28
   1cdfc:	bl	28cac <btrfs_num_copies@@Base>
   1ce00:	str	r6, [sp, #20]
   1ce02:	mov	r9, r0
   1ce04:	mov	r2, r7
   1ce06:	mov	r1, r4
   1ce08:	mov	r0, r5
   1ce0a:	bl	1b938 <read_whole_eb@@Base>
   1ce0e:	cmp	r0, #0
   1ce10:	bne.n	1ce9c <read_tree_block@@Base+0x120>
   1ce12:	movs	r2, #1
   1ce14:	mov	r1, r4
   1ce16:	mov	r0, r5
   1ce18:	bl	1b8e4 <csum_tree_block@@Base>
   1ce1c:	cmp	r0, #0
   1ce1e:	bne.n	1ce9c <read_tree_block@@Base+0x120>
   1ce20:	mov	r1, r4
   1ce22:	mov	r0, r5
   1ce24:	bl	1b43c <btrfs_fs_roots_compare_roots@@Base+0x8e>
   1ce28:	cbnz	r0, 1ce9c <read_tree_block@@Base+0x120>
   1ce2a:	ldrd	r2, r3, [sp, #64]	; 0x40
   1ce2e:	mov	r0, r4
   1ce30:	str	r6, [sp, #0]
   1ce32:	bl	1b51c <btrfs_fs_roots_compare_roots@@Base+0x16e>
   1ce36:	cbnz	r0, 1ce9c <read_tree_block@@Base+0x120>
   1ce38:	ldr	r3, [r4, #84]	; 0x54
   1ce3a:	lsls	r1, r3, #21
   1ce3c:	bpl.n	1ce5e <read_tree_block@@Base+0xe2>
   1ce3e:	ldr	r3, [r4, #68]	; 0x44
   1ce40:	cmp	sl, r3
   1ce42:	bne.n	1ce5e <read_tree_block@@Base+0xe2>
   1ce44:	ldr.w	r3, [r5, #348]	; 0x15c
   1ce48:	add.w	r2, r5, #344	; 0x158
   1ce4c:	str.w	sl, [r5, #348]	; 0x15c
   1ce50:	strd	r2, r3, [r4, #68]	; 0x44
   1ce54:	str.w	sl, [r3]
   1ce58:	ldr	r3, [r4, #80]	; 0x50
   1ce5a:	adds	r3, #1
   1ce5c:	str	r3, [r4, #80]	; 0x50
   1ce5e:	ldrb.w	r1, [r4, #196]	; 0xc4
   1ce62:	mov	r2, r4
   1ce64:	cbz	r1, 1ce8c <read_tree_block@@Base+0x110>
   1ce66:	movs	r1, #0
   1ce68:	mov	r0, r5
   1ce6a:	bl	18114 <btrfs_check_node@@Base>
   1ce6e:	cbz	r0, 1ce74 <read_tree_block@@Base+0xf8>
   1ce70:	cmp	r7, r8
   1ce72:	bne.n	1ce94 <read_tree_block@@Base+0x118>
   1ce74:	mov	r0, r4
   1ce76:	bl	1cd70 <btrfs_set_buffer_uptodate@@Base>
   1ce7a:	mov	r0, r4
   1ce7c:	add	sp, #28
   1ce7e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ce82:	movs	r6, #0
   1ce84:	b.n	1ce04 <read_tree_block@@Base+0x88>
   1ce86:	mov	r7, r8
   1ce88:	movs	r6, #1
   1ce8a:	b.n	1ce04 <read_tree_block@@Base+0x88>
   1ce8c:	mov	r0, r5
   1ce8e:	bl	18764 <btrfs_check_leaf@@Base>
   1ce92:	b.n	1ce6e <read_tree_block@@Base+0xf2>
   1ce94:	cmp.w	r8, #0
   1ce98:	bgt.n	1cf22 <read_tree_block@@Base+0x1a6>
   1ce9a:	mov	r8, r7
   1ce9c:	cbz	r6, 1cee8 <read_tree_block@@Base+0x16c>
   1ce9e:	cmp.w	r8, #0
   1cea2:	bgt.n	1cf26 <read_tree_block@@Base+0x1aa>
   1cea4:	mov	r1, r4
   1cea6:	mov	r0, r5
   1cea8:	bl	1b43c <btrfs_fs_roots_compare_roots@@Base+0x8e>
   1ceac:	ldrb.w	r3, [r5, #364]	; 0x16c
   1ceb0:	cbz	r0, 1ced2 <read_tree_block@@Base+0x156>
   1ceb2:	lsls	r2, r3, #26
   1ceb4:	bmi.n	1ceca <read_tree_block@@Base+0x14e>
   1ceb6:	mov	r1, r4
   1ceb8:	mov	r0, r5
   1ceba:	bl	1b43c <btrfs_fs_roots_compare_roots@@Base+0x8e>
   1cebe:	mov	r1, r4
   1cec0:	mov	r2, r0
   1cec2:	add.w	r0, r5, #352	; 0x160
   1cec6:	bl	1b598 <btrfs_fs_roots_compare_roots@@Base+0x1ea>
   1ceca:	mov	r0, r4
   1cecc:	bl	16318 <free_extent_buffer_nocache@@Base>
   1ced0:	b.n	1cdc8 <read_tree_block@@Base+0x4c>
   1ced2:	lsls	r3, r3, #26
   1ced4:	bmi.n	1ceca <read_tree_block@@Base+0x14e>
   1ced6:	ldr	r3, [pc, #92]	; (1cf34 <read_tree_block@@Base+0x1b8>)
   1ced8:	ldr	r0, [pc, #92]	; (1cf38 <read_tree_block@@Base+0x1bc>)
   1ceda:	ldr.w	r3, [fp, r3]
   1cede:	add	r0, pc
   1cee0:	ldr	r1, [r3, #0]
   1cee2:	blx	8968 <fputs@plt+0x4>
   1cee6:	b.n	1ceca <read_tree_block@@Base+0x14e>
   1cee8:	cmp.w	r9, #1
   1ceec:	beq.n	1ce88 <read_tree_block@@Base+0x10c>
   1ceee:	ldr.w	r3, [r4, #180]	; 0xb4
   1cef2:	ldrd	r0, r1, [sp, #8]
   1cef6:	ldr.w	r2, [r4, #176]	; 0xb0
   1cefa:	cmp	r1, r3
   1cefc:	it	eq
   1cefe:	cmpeq	r0, r2
   1cf00:	it	cc
   1cf02:	strcc	r7, [sp, #20]
   1cf04:	add.w	r7, r7, #1
   1cf08:	it	cc
   1cf0a:	strdcc	r2, r3, [sp, #8]
   1cf0e:	cmp	r9, r7
   1cf10:	bge.n	1ce82 <read_tree_block@@Base+0x106>
   1cf12:	cmp.w	r8, #0
   1cf16:	bgt.n	1ce86 <read_tree_block@@Base+0x10a>
   1cf18:	ldr	r7, [sp, #20]
   1cf1a:	b.n	1ce88 <read_tree_block@@Base+0x10c>
   1cf1c:	mvn.w	r4, #11
   1cf20:	b.n	1ce7a <read_tree_block@@Base+0xfe>
   1cf22:	cmp	r6, #0
   1cf24:	beq.n	1cee8 <read_tree_block@@Base+0x16c>
   1cf26:	mov	r7, r8
   1cf28:	b.n	1ce04 <read_tree_block@@Base+0x88>
   1cf2a:	nop
   1cf2c:	ldr	r6, [r5, #124]	; 0x7c
   1cf2e:	movs	r4, r0
   1cf30:	ldrsh.w	r0, [r2, r1]
   1cf34:	lsls	r0, r6, #8
   1cf36:	movs	r0, r0
   1cf38:	str.w	r0, [sp, r1]
   1cf3c:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   1cf40:	mov	r5, r0
   1cf42:	ldr	r4, [sp, #32]
   1cf44:	mov	r7, r3
   1cf46:	mov	r8, r2
   1cf48:	mov	r6, r1
   1cf4a:	mov	r0, r4
   1cf4c:	bl	1bc88 <btrfs_setup_root@@Base>
   1cf50:	addw	r3, r4, #447	; 0x1bf
   1cf54:	mov	r0, r5
   1cf56:	str	r3, [sp, #4]
   1cf58:	mov	r2, r8
   1cf5a:	add.w	r3, r4, #8
   1cf5e:	str	r3, [sp, #0]
   1cf60:	mov	r3, r7
   1cf62:	bl	27040 <btrfs_find_last_root@@Base>
   1cf66:	mov	r5, r0
   1cf68:	cbnz	r0, 1cf92 <read_tree_block@@Base+0x216>
   1cf6a:	ldr.w	r2, [r4, #168]	; 0xa8
   1cf6e:	mov	r0, r6
   1cf70:	ldr.w	r3, [r4, #172]	; 0xac
   1cf74:	strd	r2, r3, [sp]
   1cf78:	ldr.w	r2, [r4, #184]	; 0xb8
   1cf7c:	ldr.w	r3, [r4, #188]	; 0xbc
   1cf80:	bl	1cd7c <read_tree_block@@Base>
   1cf84:	str	r0, [r4, #0]
   1cf86:	bl	1b508 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1cf8a:	cmp	r0, #0
   1cf8c:	it	eq
   1cf8e:	mvneq.w	r5, #4
   1cf92:	mov	r0, r5
   1cf94:	add	sp, #8
   1cf96:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1cf9a:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1cf9c:	mov	r4, r0
   1cf9e:	str	r2, [sp, #0]
   1cfa0:	mov	r6, r1
   1cfa2:	mov	r5, r2
   1cfa4:	mov	r1, r0
   1cfa6:	ldrd	r2, r3, [sp, #32]
   1cfaa:	ldr	r0, [r0, #28]
   1cfac:	ldr	r7, [sp, #40]	; 0x28
   1cfae:	bl	1cf3c <read_tree_block@@Base+0x1c0>
   1cfb2:	cbz	r0, 1cfc6 <read_tree_block@@Base+0x24a>
   1cfb4:	lsls	r3, r6, #30
   1cfb6:	mov	r1, r7
   1cfb8:	bmi.n	1cfca <read_tree_block@@Base+0x24e>
   1cfba:	ldr	r0, [pc, #56]	; (1cff4 <read_tree_block@@Base+0x278>)
   1cfbc:	add	r0, pc
   1cfbe:	bl	16b70 <__btrfs_error@@Base>
   1cfc2:	mvn.w	r0, #4
   1cfc6:	add	sp, #12
   1cfc8:	pop	{r4, r5, r6, r7, pc}
   1cfca:	ldr	r0, [pc, #44]	; (1cff8 <read_tree_block@@Base+0x27c>)
   1cfcc:	add	r0, pc
   1cfce:	bl	16af4 <__btrfs_warning@@Base>
   1cfd2:	movs	r2, #0
   1cfd4:	movs	r3, #0
   1cfd6:	mov	r0, r4
   1cfd8:	bl	1b926 <btrfs_find_create_tree_block@@Base>
   1cfdc:	str	r0, [r5, #0]
   1cfde:	cbz	r0, 1cfec <read_tree_block@@Base+0x270>
   1cfe0:	ldr	r3, [r0, #84]	; 0x54
   1cfe2:	bic.w	r3, r3, #4
   1cfe6:	str	r3, [r0, #84]	; 0x54
   1cfe8:	movs	r0, #0
   1cfea:	b.n	1cfc6 <read_tree_block@@Base+0x24a>
   1cfec:	mvn.w	r0, #11
   1cff0:	b.n	1cfc6 <read_tree_block@@Base+0x24a>
   1cff2:	nop
   1cff4:			; <UNDEFINED> instruction: 0xf7820001
   1cff8:			; <UNDEFINED> instruction: 0xf78a0001

0001cffc <btrfs_read_fs_root_no_cache@@Base>:
   1cffc:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   1d000:	mov	r7, r0
   1d002:	ldr.w	sl, [r0, #28]
   1d006:	mov	r5, r1
   1d008:	movs	r0, #1
   1d00a:	mov.w	r1, #544	; 0x220
   1d00e:	blx	839c <calloc@plt+0x4>
   1d012:	mov	r4, r0
   1d014:	cbz	r0, 1d062 <btrfs_read_fs_root_no_cache@@Base+0x66>
   1d016:	ldr.w	r9, [r5, #13]
   1d01a:	ldr.w	r8, [r5, #9]
   1d01e:	cmp.w	r9, #4294967295	; 0xffffffff
   1d022:	ldr	r2, [r5, #0]
   1d024:	it	eq
   1d026:	cmpeq.w	r8, #4294967295	; 0xffffffff
   1d02a:	ldr	r3, [r5, #4]
   1d02c:	bne.n	1d04e <btrfs_read_fs_root_no_cache@@Base+0x52>
   1d02e:	str	r0, [sp, #0]
   1d030:	mov	r1, r7
   1d032:	mov	r0, sl
   1d034:	bl	1cf3c <read_tree_block@@Base+0x1c0>
   1d038:	mov	r5, r0
   1d03a:	cmp	r0, #0
   1d03c:	beq.n	1d0f6 <btrfs_read_fs_root_no_cache@@Base+0xfa>
   1d03e:	mov	r0, r4
   1d040:	mov	r4, r5
   1d042:	blx	8434 <free@plt+0x4>
   1d046:	mov	r0, r4
   1d048:	add	sp, #8
   1d04a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d04e:	mov	r1, r7
   1d050:	bl	1bc88 <btrfs_setup_root@@Base>
   1d054:	bl	17544 <btrfs_alloc_path@@Base>
   1d058:	mov	r6, r0
   1d05a:	cbnz	r0, 1d068 <btrfs_read_fs_root_no_cache@@Base+0x6c>
   1d05c:	mov	r0, r4
   1d05e:	blx	8434 <free@plt+0x4>
   1d062:	mvn.w	r4, #11
   1d066:	b.n	1d046 <btrfs_read_fs_root_no_cache@@Base+0x4a>
   1d068:	movs	r0, #0
   1d06a:	mov	r3, r6
   1d06c:	mov	r2, r5
   1d06e:	mov	r1, sl
   1d070:	strd	r0, r0, [sp]
   1d074:	bl	19930 <btrfs_search_slot@@Base>
   1d078:	subs.w	r8, r0, #0
   1d07c:	beq.n	1d09a <btrfs_read_fs_root_no_cache@@Base+0x9e>
   1d07e:	ble.n	1d084 <btrfs_read_fs_root_no_cache@@Base+0x88>
   1d080:	mvn.w	r8, #1
   1d084:	mov	r0, r6
   1d086:	bl	17572 <btrfs_free_path@@Base>
   1d08a:	cmp.w	r8, #0
   1d08e:	beq.n	1d0d0 <btrfs_read_fs_root_no_cache@@Base+0xd4>
   1d090:	mov	r0, r4
   1d092:	mov	r4, r8
   1d094:	blx	8434 <free@plt+0x4>
   1d098:	b.n	1d046 <btrfs_read_fs_root_no_cache@@Base+0x4a>
   1d09a:	ldr	r0, [r6, #0]
   1d09c:	movs	r2, #25
   1d09e:	ldr	r3, [r6, #32]
   1d0a0:	add.w	r1, r4, #8
   1d0a4:	mla	r3, r2, r3, r0
   1d0a8:	ldr.w	r2, [r3, #214]	; 0xd6
   1d0ac:	movw	r3, #439	; 0x1b7
   1d0b0:	adds	r2, #101	; 0x65
   1d0b2:	bl	16a0e <read_extent_buffer@@Base>
   1d0b6:	addw	r3, r4, #447	; 0x1bf
   1d0ba:	add.w	r2, r5, #16
   1d0be:	ldr.w	r1, [r5], #4
   1d0c2:	cmp	r5, r2
   1d0c4:	str.w	r1, [r3], #4
   1d0c8:	bne.n	1d0be <btrfs_read_fs_root_no_cache@@Base+0xc2>
   1d0ca:	ldrb	r2, [r5, #0]
   1d0cc:	strb	r2, [r3, #0]
   1d0ce:	b.n	1d084 <btrfs_read_fs_root_no_cache@@Base+0x88>
   1d0d0:	ldrd	r2, r3, [r4, #168]	; 0xa8
   1d0d4:	mov	r0, r7
   1d0d6:	strd	r2, r3, [sp]
   1d0da:	ldrd	r2, r3, [r4, #184]	; 0xb8
   1d0de:	bl	1cd7c <read_tree_block@@Base>
   1d0e2:	str	r0, [r4, #0]
   1d0e4:	bl	1b508 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1d0e8:	cbnz	r0, 1d0f6 <btrfs_read_fs_root_no_cache@@Base+0xfa>
   1d0ea:	mov	r0, r4
   1d0ec:	mvn.w	r4, #4
   1d0f0:	blx	8434 <free@plt+0x4>
   1d0f4:	b.n	1d046 <btrfs_read_fs_root_no_cache@@Base+0x4a>
   1d0f6:	movs	r3, #1
   1d0f8:	str.w	r3, [r4, #488]	; 0x1e8
   1d0fc:	b.n	1d046 <btrfs_read_fs_root_no_cache@@Base+0x4a>

0001d0fe <btrfs_read_fs_root@@Base>:
   1d0fe:	ldr	r2, [pc, #320]	; (1d240 <btrfs_read_fs_root@@Base+0x142>)
   1d100:	ldr	r3, [pc, #320]	; (1d244 <btrfs_read_fs_root@@Base+0x146>)
   1d102:	add	r2, pc
   1d104:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1d108:	sub	sp, #28
   1d10a:	ldr	r3, [r2, r3]
   1d10c:	mov	r5, r0
   1d10e:	ldr	r2, [r1, #0]
   1d110:	mov	r9, r1
   1d112:	ldr	r3, [r3, #0]
   1d114:	str	r3, [sp, #20]
   1d116:	mov.w	r3, #0
   1d11a:	ldr	r3, [r1, #4]
   1d11c:	ldr.w	r8, [pc, #296]	; 1d248 <btrfs_read_fs_root@@Base+0x14a>
   1d120:	cmp	r3, #0
   1d122:	it	eq
   1d124:	cmpeq	r2, #1
   1d126:	add	r8, pc
   1d128:	strd	r2, r3, [sp, #8]
   1d12c:	bne.n	1d144 <btrfs_read_fs_root@@Base+0x46>
   1d12e:	ldr	r4, [r0, #28]
   1d130:	ldr	r2, [pc, #280]	; (1d24c <btrfs_read_fs_root@@Base+0x14e>)
   1d132:	ldr	r3, [pc, #272]	; (1d244 <btrfs_read_fs_root@@Base+0x146>)
   1d134:	add	r2, pc
   1d136:	ldr	r3, [r2, r3]
   1d138:	ldr	r2, [r3, #0]
   1d13a:	ldr	r3, [sp, #20]
   1d13c:	eors	r2, r3
   1d13e:	beq.n	1d236 <btrfs_read_fs_root@@Base+0x138>
   1d140:	blx	8510 <__stack_chk_fail@plt>
   1d144:	cmp	r3, #0
   1d146:	it	eq
   1d148:	cmpeq	r2, #2
   1d14a:	bne.n	1d150 <btrfs_read_fs_root@@Base+0x52>
   1d14c:	ldr	r4, [r0, #24]
   1d14e:	b.n	1d130 <btrfs_read_fs_root@@Base+0x32>
   1d150:	cmp	r3, #0
   1d152:	it	eq
   1d154:	cmpeq	r2, #3
   1d156:	bne.n	1d15c <btrfs_read_fs_root@@Base+0x5e>
   1d158:	ldr	r4, [r0, #32]
   1d15a:	b.n	1d130 <btrfs_read_fs_root@@Base+0x32>
   1d15c:	cmp	r3, #0
   1d15e:	it	eq
   1d160:	cmpeq	r2, #4
   1d162:	bne.n	1d168 <btrfs_read_fs_root@@Base+0x6a>
   1d164:	ldr	r4, [r0, #36]	; 0x24
   1d166:	b.n	1d130 <btrfs_read_fs_root@@Base+0x32>
   1d168:	cmp	r3, #0
   1d16a:	it	eq
   1d16c:	cmpeq	r2, #7
   1d16e:	bne.n	1d174 <btrfs_read_fs_root@@Base+0x76>
   1d170:	ldr	r4, [r0, #40]	; 0x28
   1d172:	b.n	1d130 <btrfs_read_fs_root@@Base+0x32>
   1d174:	cmp	r3, #0
   1d176:	it	eq
   1d178:	cmpeq	r2, #9
   1d17a:	bne.n	1d188 <btrfs_read_fs_root@@Base+0x8a>
   1d17c:	ldr	r4, [r0, #52]	; 0x34
   1d17e:	cmp	r4, #0
   1d180:	it	eq
   1d182:	mvneq.w	r4, #1
   1d186:	b.n	1d130 <btrfs_read_fs_root@@Base+0x32>
   1d188:	cmp	r3, #0
   1d18a:	it	eq
   1d18c:	cmpeq	r2, #8
   1d18e:	bne.n	1d19c <btrfs_read_fs_root@@Base+0x9e>
   1d190:	ldrb.w	r3, [r0, #364]	; 0x16c
   1d194:	lsls	r3, r3, #27
   1d196:	bpl.n	1d230 <btrfs_read_fs_root@@Base+0x132>
   1d198:	ldr	r4, [r0, #44]	; 0x2c
   1d19a:	b.n	1d130 <btrfs_read_fs_root@@Base+0x32>
   1d19c:	cmp	r3, #0
   1d19e:	it	eq
   1d1a0:	cmpeq	r2, #10
   1d1a2:	bne.n	1d1a8 <btrfs_read_fs_root@@Base+0xaa>
   1d1a4:	ldr	r4, [r0, #48]	; 0x30
   1d1a6:	b.n	1d17e <btrfs_read_fs_root@@Base+0x80>
   1d1a8:	mov.w	r1, #4294967295	; 0xffffffff
   1d1ac:	cmp	r3, r1
   1d1ae:	mvn.w	r0, #7
   1d1b2:	it	eq
   1d1b4:	cmpeq	r2, r0
   1d1b6:	beq.n	1d1f6 <btrfs_read_fs_root@@Base+0xf8>
   1d1b8:	ldr.w	r3, [r9, #9]
   1d1bc:	ldr.w	r2, [r9, #13]
   1d1c0:	ands	r3, r2
   1d1c2:	adds	r3, #1
   1d1c4:	it	ne
   1d1c6:	movne	r3, #1
   1d1c8:	ldr	r6, [pc, #132]	; (1d250 <btrfs_read_fs_root@@Base+0x152>)
   1d1ca:	movw	r2, #735	; 0x2df
   1d1ce:	ldr	r0, [pc, #132]	; (1d254 <btrfs_read_fs_root@@Base+0x156>)
   1d1d0:	add.w	r7, r5, #56	; 0x38
   1d1d4:	add	r6, pc
   1d1d6:	adds	r6, #70	; 0x46
   1d1d8:	add	r0, pc
   1d1da:	mov	r1, r6
   1d1dc:	bl	1b734 <btrfs_fs_roots_compare_roots@@Base+0x386>
   1d1e0:	ldr	r2, [pc, #116]	; (1d258 <btrfs_read_fs_root@@Base+0x15a>)
   1d1e2:	add	r1, sp, #8
   1d1e4:	movs	r3, #0
   1d1e6:	add	r2, pc
   1d1e8:	mov	r0, r7
   1d1ea:	bl	16fb4 <rb_search@@Base>
   1d1ee:	cbz	r0, 1d1fa <btrfs_read_fs_root@@Base+0xfc>
   1d1f0:	sub.w	r4, r0, #528	; 0x210
   1d1f4:	b.n	1d130 <btrfs_read_fs_root@@Base+0x32>
   1d1f6:	movs	r3, #1
   1d1f8:	b.n	1d1c8 <btrfs_read_fs_root@@Base+0xca>
   1d1fa:	mov	r1, r9
   1d1fc:	mov	r0, r5
   1d1fe:	bl	1cffc <btrfs_read_fs_root_no_cache@@Base>
   1d202:	cmn.w	r0, #4096	; 0x1000
   1d206:	mov	r4, r0
   1d208:	bhi.n	1d130 <btrfs_read_fs_root@@Base+0x32>
   1d20a:	ldr	r3, [pc, #80]	; (1d25c <btrfs_read_fs_root@@Base+0x15e>)
   1d20c:	add.w	r1, r0, #528	; 0x210
   1d210:	mov	r0, r7
   1d212:	ldr.w	r3, [r8, r3]
   1d216:	mov	r2, r3
   1d218:	str	r3, [sp, #4]
   1d21a:	bl	16f6c <rb_insert@@Base>
   1d21e:	movw	r2, #749	; 0x2ed
   1d222:	mov	r1, r6
   1d224:	mov	r3, r0
   1d226:	ldr	r0, [pc, #56]	; (1d260 <btrfs_read_fs_root@@Base+0x162>)
   1d228:	add	r0, pc
   1d22a:	bl	1b734 <btrfs_fs_roots_compare_roots@@Base+0x386>
   1d22e:	b.n	1d130 <btrfs_read_fs_root@@Base+0x32>
   1d230:	mvn.w	r4, #1
   1d234:	b.n	1d130 <btrfs_read_fs_root@@Base+0x32>
   1d236:	mov	r0, r4
   1d238:	add	sp, #28
   1d23a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1d23e:	nop
   1d240:	ldr	r2, [r0, #72]	; 0x48
   1d242:	movs	r4, r0
   1d244:	lsls	r0, r4, #8
   1d246:	movs	r0, r0
   1d248:	ldr	r6, [r3, #68]	; 0x44
   1d24a:	movs	r4, r0
   1d24c:	ldr	r0, [r2, #68]	; 0x44
   1d24e:	movs	r4, r0
   1d250:	vld4.8	{d0-d3}, [r9], r1
   1d254:	sub.w	r0, r3, #8454144	; 0x810000
   1d258:	b.n	1d59a <btrfs_setup_chunk_tree_and_device_map@@Base+0x2e>
   1d25a:	vmlal.u<illegal width 64>	q8, d15, d28[0]
   1d25e:	movs	r0, r0
   1d260:	stmia	r2!, {r2, r3, r4, r5, r7}
   1d262:	movs	r1, r0

0001d264 <btrfs_setup_all_roots@@Base>:
   1d264:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d268:	mov	r6, r2
   1d26a:	ldr	r2, [pc, #716]	; (1d538 <btrfs_setup_all_roots@@Base+0x2d4>)
   1d26c:	mov	r7, r3
   1d26e:	ldr	r3, [pc, #716]	; (1d53c <btrfs_setup_all_roots@@Base+0x2d8>)
   1d270:	sub	sp, #60	; 0x3c
   1d272:	add	r2, pc
   1d274:	ldr.w	r9, [r0, #28]
   1d278:	ldr.w	r5, [r0, #308]	; 0x134
   1d27c:	mov	r1, r0
   1d27e:	ldr	r3, [r2, r3]
   1d280:	mov	r4, r0
   1d282:	mov	r0, r9
   1d284:	movs	r2, #1
   1d286:	ldr	r3, [r3, #0]
   1d288:	str	r3, [sp, #52]	; 0x34
   1d28a:	mov.w	r3, #0
   1d28e:	movs	r3, #0
   1d290:	ldr.w	sl, [sp, #96]	; 0x60
   1d294:	bl	1bc88 <btrfs_setup_root@@Base>
   1d298:	ldr	r3, [r5, #76]	; 0x4c
   1d29a:	orrs.w	r2, r6, r7
   1d29e:	ldr.w	r8, [pc, #672]	; 1d540 <btrfs_setup_all_roots@@Base+0x2dc>
   1d2a2:	ldr.w	fp, [r5, #72]	; 0x48
   1d2a6:	add	r8, pc
   1d2a8:	str	r3, [sp, #28]
   1d2aa:	and.w	r3, sl, #4
   1d2ae:	bne.n	1d2e0 <btrfs_setup_all_roots@@Base+0x7c>
   1d2b0:	cbnz	r3, 1d2e4 <btrfs_setup_all_roots@@Base+0x80>
   1d2b2:	ldr	r6, [r5, #80]	; 0x50
   1d2b4:	ldr	r7, [r5, #84]	; 0x54
   1d2b6:	ldr	r3, [sp, #28]
   1d2b8:	mov	r2, r6
   1d2ba:	mov	r0, r4
   1d2bc:	str.w	fp, [sp]
   1d2c0:	str	r3, [sp, #4]
   1d2c2:	mov	r3, r7
   1d2c4:	bl	1cd7c <read_tree_block@@Base>
   1d2c8:	str.w	r0, [r9]
   1d2cc:	bl	1b508 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1d2d0:	cbnz	r0, 1d334 <btrfs_setup_all_roots@@Base+0xd0>
   1d2d2:	ldr	r3, [pc, #624]	; (1d544 <btrfs_setup_all_roots@@Base+0x2e0>)
   1d2d4:	ldr	r0, [pc, #624]	; (1d548 <btrfs_setup_all_roots@@Base+0x2e4>)
   1d2d6:	ldr.w	r3, [r8, r3]
   1d2da:	add	r0, pc
   1d2dc:	ldr	r1, [r3, #0]
   1d2de:	b.n	1d2fa <btrfs_setup_all_roots@@Base+0x96>
   1d2e0:	cmp	r3, #0
   1d2e2:	beq.n	1d2b6 <btrfs_setup_all_roots@@Base+0x52>
   1d2e4:	mov	r0, r5
   1d2e6:	bl	1b3b2 <btrfs_fs_roots_compare_roots@@Base+0x4>
   1d2ea:	cmp	r0, #3
   1d2ec:	ble.n	1d318 <btrfs_setup_all_roots@@Base+0xb4>
   1d2ee:	ldr	r3, [pc, #596]	; (1d544 <btrfs_setup_all_roots@@Base+0x2e0>)
   1d2f0:	ldr	r0, [pc, #600]	; (1d54c <btrfs_setup_all_roots@@Base+0x2e8>)
   1d2f2:	ldr.w	r3, [r8, r3]
   1d2f6:	add	r0, pc
   1d2f8:	ldr	r1, [r3, #0]
   1d2fa:	blx	8968 <fputs@plt+0x4>
   1d2fe:	mvn.w	r6, #4
   1d302:	ldr	r2, [pc, #588]	; (1d550 <btrfs_setup_all_roots@@Base+0x2ec>)
   1d304:	ldr	r3, [pc, #564]	; (1d53c <btrfs_setup_all_roots@@Base+0x2d8>)
   1d306:	add	r2, pc
   1d308:	ldr	r3, [r2, r3]
   1d30a:	ldr	r2, [r3, #0]
   1d30c:	ldr	r3, [sp, #52]	; 0x34
   1d30e:	eors	r2, r3
   1d310:	beq.w	1d530 <btrfs_setup_all_roots@@Base+0x2cc>
   1d314:	blx	8510 <__stack_chk_fail@plt>
   1d318:	ldr.w	r3, [r4, #308]	; 0x134
   1d31c:	movs	r2, #168	; 0xa8
   1d31e:	addw	r3, r3, #2859	; 0xb2b
   1d322:	mla	r0, r2, r0, r3
   1d326:	ldr	r3, [r0, #12]
   1d328:	ldr.w	fp, [r0, #8]
   1d32c:	ldr	r6, [r0, #0]
   1d32e:	ldr	r7, [r0, #4]
   1d330:	str	r3, [sp, #28]
   1d332:	b.n	1d2b6 <btrfs_setup_all_roots@@Base+0x52>
   1d334:	ldr	r3, [pc, #540]	; (1d554 <btrfs_setup_all_roots@@Base+0x2f0>)
   1d336:	movs	r2, #2
   1d338:	mov	r1, sl
   1d33a:	mov	r0, r4
   1d33c:	add	r3, pc
   1d33e:	str	r3, [sp, #8]
   1d340:	movs	r3, #0
   1d342:	strd	r2, r3, [sp]
   1d346:	ldr	r2, [r4, #24]
   1d348:	bl	1cf9a <read_tree_block@@Base+0x21e>
   1d34c:	mov	r6, r0
   1d34e:	cmp	r0, #0
   1d350:	bne.n	1d302 <btrfs_setup_all_roots@@Base+0x9e>
   1d352:	ldr	r3, [r4, #24]
   1d354:	movs	r7, #1
   1d356:	movs	r2, #4
   1d358:	mov	r1, r4
   1d35a:	mov	r0, r9
   1d35c:	str.w	r7, [r3, #492]	; 0x1ec
   1d360:	ldr	r3, [r4, #36]	; 0x24
   1d362:	str	r3, [sp, #0]
   1d364:	movs	r3, #0
   1d366:	bl	1cf3c <read_tree_block@@Base+0x1c0>
   1d36a:	cbz	r0, 1d37a <btrfs_setup_all_roots@@Base+0x116>
   1d36c:	ldr	r3, [pc, #468]	; (1d544 <btrfs_setup_all_roots@@Base+0x2e0>)
   1d36e:	ldr	r0, [pc, #488]	; (1d558 <btrfs_setup_all_roots@@Base+0x2f4>)
   1d370:	ldr.w	r3, [r8, r3]
   1d374:	add	r0, pc
   1d376:	ldr	r1, [r3, #0]
   1d378:	b.n	1d2fa <btrfs_setup_all_roots@@Base+0x96>
   1d37a:	ldr	r3, [r4, #36]	; 0x24
   1d37c:	movs	r2, #7
   1d37e:	mov	r1, sl
   1d380:	mov	r0, r4
   1d382:	str.w	r7, [r3, #492]	; 0x1ec
   1d386:	ldr	r3, [pc, #468]	; (1d55c <btrfs_setup_all_roots@@Base+0x2f8>)
   1d388:	add	r3, pc
   1d38a:	str	r3, [sp, #8]
   1d38c:	movs	r3, #0
   1d38e:	strd	r2, r3, [sp]
   1d392:	ldr	r2, [r4, #40]	; 0x28
   1d394:	bl	1cf9a <read_tree_block@@Base+0x21e>
   1d398:	mov	r6, r0
   1d39a:	cmp	r0, #0
   1d39c:	bne.n	1d302 <btrfs_setup_all_roots@@Base+0x9e>
   1d39e:	ldr	r3, [r4, #40]	; 0x28
   1d3a0:	movs	r2, #9
   1d3a2:	mov	r1, r4
   1d3a4:	mov	r0, r9
   1d3a6:	str.w	r7, [r3, #492]	; 0x1ec
   1d3aa:	ldr	r3, [r4, #52]	; 0x34
   1d3ac:	str	r3, [sp, #0]
   1d3ae:	movs	r3, #0
   1d3b0:	bl	1cf3c <read_tree_block@@Base+0x1c0>
   1d3b4:	cbz	r0, 1d40c <btrfs_setup_all_roots@@Base+0x1a8>
   1d3b6:	ldr	r0, [r4, #52]	; 0x34
   1d3b8:	blx	8434 <free@plt+0x4>
   1d3bc:	str	r6, [r4, #52]	; 0x34
   1d3be:	ldr	r3, [r4, #44]	; 0x2c
   1d3c0:	movs	r2, #8
   1d3c2:	mov	r1, r4
   1d3c4:	mov	r0, r9
   1d3c6:	str	r3, [sp, #0]
   1d3c8:	movs	r3, #0
   1d3ca:	bl	1cf3c <read_tree_block@@Base+0x1c0>
   1d3ce:	cbz	r0, 1d414 <btrfs_setup_all_roots@@Base+0x1b0>
   1d3d0:	ldr	r0, [r4, #44]	; 0x2c
   1d3d2:	blx	8434 <free@plt+0x4>
   1d3d6:	movs	r3, #0
   1d3d8:	str	r3, [r4, #44]	; 0x2c
   1d3da:	ldr.w	r3, [r4, #308]	; 0x134
   1d3de:	ldr.w	r1, [r3, #180]	; 0xb4
   1d3e2:	movs	r3, #0
   1d3e4:	and.w	r2, r1, #1
   1d3e8:	orrs	r3, r2
   1d3ea:	beq.n	1d42a <btrfs_setup_all_roots@@Base+0x1c6>
   1d3ec:	ldr	r3, [r4, #48]	; 0x30
   1d3ee:	movs	r2, #10
   1d3f0:	mov	r1, r4
   1d3f2:	mov	r0, r9
   1d3f4:	str	r3, [sp, #0]
   1d3f6:	movs	r3, #0
   1d3f8:	bl	1cf3c <read_tree_block@@Base+0x1c0>
   1d3fc:	cbz	r0, 1d422 <btrfs_setup_all_roots@@Base+0x1be>
   1d3fe:	ldr	r3, [pc, #324]	; (1d544 <btrfs_setup_all_roots@@Base+0x2e0>)
   1d400:	ldr	r0, [pc, #348]	; (1d560 <btrfs_setup_all_roots@@Base+0x2fc>)
   1d402:	ldr.w	r3, [r8, r3]
   1d406:	add	r0, pc
   1d408:	ldr	r1, [r3, #0]
   1d40a:	b.n	1d2fa <btrfs_setup_all_roots@@Base+0x96>
   1d40c:	ldr	r3, [r4, #52]	; 0x34
   1d40e:	str.w	r7, [r3, #492]	; 0x1ec
   1d412:	b.n	1d3be <btrfs_setup_all_roots@@Base+0x15a>
   1d414:	ldrb.w	r3, [r4, #364]	; 0x16c
   1d418:	orr.w	r3, r3, #16
   1d41c:	strb.w	r3, [r4, #364]	; 0x16c
   1d420:	b.n	1d3da <btrfs_setup_all_roots@@Base+0x176>
   1d422:	ldr	r3, [r4, #48]	; 0x30
   1d424:	movs	r2, #1
   1d426:	str.w	r2, [r3, #492]	; 0x1ec
   1d42a:	ldr	r3, [r5, #96]	; 0x60
   1d42c:	mov.w	r0, #544	; 0x220
   1d430:	str	r3, [sp, #16]
   1d432:	ldr	r3, [r5, #100]	; 0x64
   1d434:	str	r3, [sp, #20]
   1d436:	blx	8678 <malloc@plt+0x4>
   1d43a:	mov	r7, r0
   1d43c:	cmp	r0, #0
   1d43e:	beq.n	1d4d2 <btrfs_setup_all_roots@@Base+0x26e>
   1d440:	ldrd	r2, r3, [sp, #16]
   1d444:	orrs	r3, r2
   1d446:	bne.n	1d48e <btrfs_setup_all_roots@@Base+0x22a>
   1d448:	blx	8434 <free@plt+0x4>
   1d44c:	ldr	r3, [sp, #28]
   1d44e:	str.w	fp, [r4, #232]	; 0xe8
   1d452:	strd	r3, fp, [r4, #236]	; 0xec
   1d456:	str.w	r3, [r4, #244]	; 0xf4
   1d45a:	ldr	r3, [r4, #24]
   1d45c:	ldr	r0, [r3, #0]
   1d45e:	bl	1b508 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1d462:	cmp	r0, #0
   1d464:	beq.n	1d4ea <btrfs_setup_all_roots@@Base+0x286>
   1d466:	tst.w	sl, #32
   1d46a:	bne.n	1d4ea <btrfs_setup_all_roots@@Base+0x286>
   1d46c:	mov	r0, r4
   1d46e:	bl	21188 <btrfs_read_block_groups@@Base>
   1d472:	subs	r5, r0, #0
   1d474:	bge.n	1d4ea <btrfs_setup_all_roots@@Base+0x286>
   1d476:	adds	r3, r5, #2
   1d478:	beq.n	1d4ea <btrfs_setup_all_roots@@Base+0x286>
   1d47a:	blx	8784 <__errno_location@plt>
   1d47e:	negs	r3, r5
   1d480:	mov	r6, r5
   1d482:	str	r3, [r0, #0]
   1d484:	ldr	r0, [pc, #220]	; (1d564 <btrfs_setup_all_roots@@Base+0x300>)
   1d486:	add	r0, pc
   1d488:	bl	16b70 <__btrfs_error@@Base>
   1d48c:	b.n	1d302 <btrfs_setup_all_roots@@Base+0x9e>
   1d48e:	mov	r1, r4
   1d490:	mvn.w	r2, #5
   1d494:	mov.w	r3, #4294967295	; 0xffffffff
   1d498:	bl	1bc88 <btrfs_setup_root@@Base>
   1d49c:	ldr	r3, [r5, #72]	; 0x48
   1d49e:	ldr	r2, [r5, #76]	; 0x4c
   1d4a0:	mov	r0, r4
   1d4a2:	adds	r3, #1
   1d4a4:	adc.w	r2, r2, #0
   1d4a8:	strd	r3, r2, [sp]
   1d4ac:	ldrd	r2, r3, [sp, #16]
   1d4b0:	bl	1cd7c <read_tree_block@@Base>
   1d4b4:	str	r7, [r4, #60]	; 0x3c
   1d4b6:	str	r0, [r7, #0]
   1d4b8:	mov	r3, r0
   1d4ba:	bl	1b508 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1d4be:	mov	r5, r0
   1d4c0:	cmp	r0, #0
   1d4c2:	bne.n	1d44c <btrfs_setup_all_roots@@Base+0x1e8>
   1d4c4:	mov	r0, r3
   1d4c6:	bl	16314 <free_extent_buffer@@Base>
   1d4ca:	mov	r0, r7
   1d4cc:	blx	8434 <free@plt+0x4>
   1d4d0:	str	r5, [r4, #60]	; 0x3c
   1d4d2:	ldr	r3, [pc, #112]	; (1d544 <btrfs_setup_all_roots@@Base+0x2e0>)
   1d4d4:	ldr	r0, [pc, #144]	; (1d568 <btrfs_setup_all_roots@@Base+0x304>)
   1d4d6:	ldr.w	r3, [r8, r3]
   1d4da:	add	r0, pc
   1d4dc:	ldr	r1, [r3, #0]
   1d4de:	blx	8968 <fputs@plt+0x4>
   1d4e2:	tst.w	sl, #2
   1d4e6:	bne.n	1d44c <btrfs_setup_all_roots@@Base+0x1e8>
   1d4e8:	b.n	1d2fe <btrfs_setup_all_roots@@Base+0x9a>
   1d4ea:	add	r1, sp, #32
   1d4ec:	mov	r0, r4
   1d4ee:	movs	r2, #5
   1d4f0:	movs	r3, #0
   1d4f2:	strd	r2, r3, [sp, #32]
   1d4f6:	mov.w	r2, #4294967295	; 0xffffffff
   1d4fa:	movs	r3, #132	; 0x84
   1d4fc:	strb.w	r2, [sp, #41]	; 0x29
   1d500:	strb.w	r3, [sp, #40]	; 0x28
   1d504:	strb.w	r2, [sp, #42]	; 0x2a
   1d508:	strb.w	r2, [sp, #43]	; 0x2b
   1d50c:	strb.w	r2, [sp, #44]	; 0x2c
   1d510:	strb.w	r2, [sp, #45]	; 0x2d
   1d514:	strb.w	r2, [sp, #46]	; 0x2e
   1d518:	strb.w	r2, [sp, #47]	; 0x2f
   1d51c:	strb.w	r2, [sp, #48]	; 0x30
   1d520:	bl	1d0fe <btrfs_read_fs_root@@Base>
   1d524:	cmn.w	r0, #4096	; 0x1000
   1d528:	str	r0, [r4, #20]
   1d52a:	bls.w	1d302 <btrfs_setup_all_roots@@Base+0x9e>
   1d52e:	b.n	1d2fe <btrfs_setup_all_roots@@Base+0x9a>
   1d530:	mov	r0, r6
   1d532:	add	sp, #60	; 0x3c
   1d534:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d538:	ldr	r2, [r2, #48]	; 0x30
   1d53a:	movs	r4, r0
   1d53c:	lsls	r0, r4, #8
   1d53e:	movs	r0, r0
   1d540:	ldr	r6, [r3, #44]	; 0x2c
   1d542:	movs	r4, r0
   1d544:	lsls	r0, r6, #8
   1d546:	movs	r0, r0
   1d548:	add.w	r0, ip, #8454144	; 0x810000
   1d54c:			; <UNDEFINED> instruction: 0xf4d40001
   1d550:	ldr	r6, [r7, #36]	; 0x24
   1d552:	movs	r4, r0
   1d554:	lsrs	r2, r6, #31
   1d556:	movs	r2, r0
   1d558:	eor.w	r0, fp, #8454144	; 0x810000
   1d55c:	eors.w	r0, r3, #8454144	; 0x810000
   1d560:	ands.w	r0, sl, #8454144	; 0x810000
   1d564:			; <UNDEFINED> instruction: 0xf3d70001
   1d568:	bfi	r0, r5, #0, #2

0001d56c <btrfs_setup_chunk_tree_and_device_map@@Base>:
   1d56c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d570:	mov	r1, r0
   1d572:	ldr.w	r8, [r0, #308]	; 0x134
   1d576:	mov	r4, r0
   1d578:	mov	r6, r2
   1d57a:	ldr	r0, [r0, #32]
   1d57c:	movs	r2, #3
   1d57e:	mov	r7, r3
   1d580:	movs	r3, #0
   1d582:	ldr.w	r9, [pc, #212]	; 1d658 <btrfs_setup_chunk_tree_and_device_map@@Base+0xec>
   1d586:	bl	1bc88 <btrfs_setup_root@@Base>
   1d58a:	mov	r0, r4
   1d58c:	bl	29a60 <btrfs_read_sys_array@@Base>
   1d590:	add	r9, pc
   1d592:	mov	r5, r0
   1d594:	cmp	r0, #0
   1d596:	bne.n	1d614 <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   1d598:	orrs.w	r3, r6, r7
   1d59c:	ldr.w	fp, [r8, #164]	; 0xa4
   1d5a0:	ldr.w	sl, [r8, #168]	; 0xa8
   1d5a4:	beq.n	1d5d2 <btrfs_setup_chunk_tree_and_device_map@@Base+0x66>
   1d5a6:	ldr.w	ip, [r4, #388]	; 0x184
   1d5aa:	movs	r0, #0
   1d5ac:	adds.w	r1, ip, #4294967295	; 0xffffffff
   1d5b0:	adc.w	r0, r0, #4294967295	; 0xffffffff
   1d5b4:	and.w	r2, r1, r6
   1d5b8:	and.w	r3, r0, r7
   1d5bc:	orrs.w	r1, r2, r3
   1d5c0:	beq.n	1d5de <btrfs_setup_chunk_tree_and_device_map@@Base+0x72>
   1d5c2:	ldr	r0, [pc, #152]	; (1d65c <btrfs_setup_chunk_tree_and_device_map@@Base+0xf0>)
   1d5c4:	mov	r2, r6
   1d5c6:	mov	r3, r7
   1d5c8:	str.w	ip, [sp]
   1d5cc:	add	r0, pc
   1d5ce:	bl	16af4 <__btrfs_warning@@Base>
   1d5d2:	ldr.w	r6, [r8, #88]	; 0x58
   1d5d6:	mov	r2, fp
   1d5d8:	ldr.w	r7, [r8, #92]	; 0x5c
   1d5dc:	mov	r3, sl
   1d5de:	strd	r2, r3, [sp]
   1d5e2:	mov	r0, r4
   1d5e4:	mov	r2, r6
   1d5e6:	mov	r3, r7
   1d5e8:	ldr.w	sl, [r4, #32]
   1d5ec:	bl	1cd7c <read_tree_block@@Base>
   1d5f0:	str.w	r0, [sl]
   1d5f4:	ldr	r3, [r4, #32]
   1d5f6:	ldr	r0, [r3, #0]
   1d5f8:	bl	1b508 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1d5fc:	mov	r6, r0
   1d5fe:	cbnz	r0, 1d62a <btrfs_setup_chunk_tree_and_device_map@@Base+0xbe>
   1d600:	ldrsb.w	r3, [r4, #364]	; 0x16c
   1d604:	cmp	r3, #0
   1d606:	bge.n	1d61c <btrfs_setup_chunk_tree_and_device_map@@Base+0xb0>
   1d608:	ldr	r0, [pc, #84]	; (1d660 <btrfs_setup_chunk_tree_and_device_map@@Base+0xf4>)
   1d60a:	mov	r5, r6
   1d60c:	add	r0, pc
   1d60e:	bl	16af4 <__btrfs_warning@@Base>
   1d612:	str	r6, [r4, #32]
   1d614:	mov	r0, r5
   1d616:	add	sp, #12
   1d618:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d61c:	ldr	r0, [pc, #68]	; (1d664 <btrfs_setup_chunk_tree_and_device_map@@Base+0xf8>)
   1d61e:	mvn.w	r5, #4
   1d622:	add	r0, pc
   1d624:	bl	16b70 <__btrfs_error@@Base>
   1d628:	b.n	1d614 <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   1d62a:	ldr.w	r1, [r8, #60]	; 0x3c
   1d62e:	movs	r2, #0
   1d630:	and.w	r3, r1, #2
   1d634:	orrs	r3, r2
   1d636:	bne.n	1d614 <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   1d638:	mov	r0, r4
   1d63a:	bl	29c08 <btrfs_read_chunk_tree@@Base>
   1d63e:	mov	r5, r0
   1d640:	cmp	r0, #0
   1d642:	beq.n	1d614 <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   1d644:	ldr	r3, [pc, #32]	; (1d668 <btrfs_setup_chunk_tree_and_device_map@@Base+0xfc>)
   1d646:	ldr	r0, [pc, #36]	; (1d66c <btrfs_setup_chunk_tree_and_device_map@@Base+0x100>)
   1d648:	ldr.w	r3, [r9, r3]
   1d64c:	add	r0, pc
   1d64e:	ldr	r1, [r3, #0]
   1d650:	blx	8968 <fputs@plt+0x4>
   1d654:	b.n	1d614 <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   1d656:	nop
   1d658:	str	r4, [r6, #124]	; 0x7c
   1d65a:	movs	r4, r0
   1d65c:			; <UNDEFINED> instruction: 0xf2b10001
   1d660:	subw	r0, r6, #1
   1d664:			; <UNDEFINED> instruction: 0xf2b80001
   1d668:	lsls	r0, r6, #8
   1d66a:	movs	r0, r0
   1d66c:	subw	r0, r5, #1
   1d670:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d674:	mov	r8, r2
   1d676:	ldr	r2, [pc, #624]	; (1d8e8 <btrfs_setup_chunk_tree_and_device_map@@Base+0x37c>)
   1d678:	mov	r9, r3
   1d67a:	ldr	r3, [pc, #624]	; (1d8ec <btrfs_setup_chunk_tree_and_device_map@@Base+0x380>)
   1d67c:	sub	sp, #36	; 0x24
   1d67e:	add	r2, pc
   1d680:	ldr	r7, [pc, #620]	; (1d8f0 <btrfs_setup_chunk_tree_and_device_map@@Base+0x384>)
   1d682:	ldr	r5, [sp, #88]	; 0x58
   1d684:	mov	sl, r0
   1d686:	ldr	r3, [r2, r3]
   1d688:	movs	r2, #0
   1d68a:	add	r7, pc
   1d68c:	mov	r6, r1
   1d68e:	ldr	r3, [r3, #0]
   1d690:	str	r3, [sp, #28]
   1d692:	mov.w	r3, #0
   1d696:	movs	r3, #0
   1d698:	str	r3, [sp, #24]
   1d69a:	orrs.w	r3, r8, r9
   1d69e:	mov.w	r3, #4
   1d6a2:	str	r3, [sp, #8]
   1d6a4:	mov.w	r3, #0
   1d6a8:	strd	r2, r3, [sp]
   1d6ac:	itt	eq
   1d6ae:	moveq.w	r8, #65536	; 0x10000
   1d6b2:	moveq.w	r9, #0
   1d6b6:	blx	83e4 <posix_fadvise64@plt>
   1d6ba:	cbz	r0, 1d6ca <btrfs_setup_chunk_tree_and_device_map@@Base+0x15e>
   1d6bc:	ldr	r3, [pc, #564]	; (1d8f4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   1d6be:	ldr	r0, [pc, #568]	; (1d8f8 <btrfs_setup_chunk_tree_and_device_map@@Base+0x38c>)
   1d6c0:	ldr	r3, [r7, r3]
   1d6c2:	add	r0, pc
   1d6c4:	ldr	r1, [r3, #0]
   1d6c6:	blx	8968 <fputs@plt+0x4>
   1d6ca:	and.w	fp, r5, #1
   1d6ce:	mov	r2, r8
   1d6d0:	mov	r3, r9
   1d6d2:	mov	r0, fp
   1d6d4:	bl	1bd56 <btrfs_new_fs_info@@Base>
   1d6d8:	mov	r4, r0
   1d6da:	cbnz	r0, 1d700 <btrfs_setup_chunk_tree_and_device_map@@Base+0x194>
   1d6dc:	ldr	r3, [pc, #532]	; (1d8f4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   1d6de:	ldr	r0, [pc, #540]	; (1d8fc <btrfs_setup_chunk_tree_and_device_map@@Base+0x390>)
   1d6e0:	ldr	r3, [r7, r3]
   1d6e2:	add	r0, pc
   1d6e4:	ldr	r1, [r3, #0]
   1d6e6:	blx	8968 <fputs@plt+0x4>
   1d6ea:	ldr	r2, [pc, #532]	; (1d900 <btrfs_setup_chunk_tree_and_device_map@@Base+0x394>)
   1d6ec:	ldr	r3, [pc, #508]	; (1d8ec <btrfs_setup_chunk_tree_and_device_map@@Base+0x380>)
   1d6ee:	add	r2, pc
   1d6f0:	ldr	r3, [r2, r3]
   1d6f2:	ldr	r2, [r3, #0]
   1d6f4:	ldr	r3, [sp, #28]
   1d6f6:	eors	r2, r3
   1d6f8:	beq.w	1d8e0 <btrfs_setup_chunk_tree_and_device_map@@Base+0x374>
   1d6fc:	blx	8510 <__stack_chk_fail@plt>
   1d700:	lsls	r3, r5, #27
   1d702:	ittt	mi
   1d704:	ldrbmi.w	r3, [r0, #364]	; 0x16c
   1d708:	orrmi.w	r3, r3, #4
   1d70c:	strbmi.w	r3, [r0, #364]	; 0x16c
   1d710:	lsls	r0, r5, #23
   1d712:	ittt	mi
   1d714:	ldrbmi.w	r3, [r4, #364]	; 0x16c
   1d718:	orrmi.w	r3, r3, #32
   1d71c:	strbmi.w	r3, [r4, #364]	; 0x16c
   1d720:	ands.w	r2, r5, #1024	; 0x400
   1d724:	ittt	ne
   1d726:	ldrbne.w	r3, [r4, #364]	; 0x16c
   1d72a:	orrne.w	r3, r3, #64	; 0x40
   1d72e:	strbne.w	r3, [r4, #364]	; 0x16c
   1d732:	lsls	r1, r5, #20
   1d734:	ittt	mi
   1d736:	ldrbmi.w	r3, [r4, #364]	; 0x16c
   1d73a:	orrmi.w	r3, r3, #128	; 0x80
   1d73e:	strbmi.w	r3, [r4, #364]	; 0x16c
   1d742:	movw	r3, #4104	; 0x1008
   1d746:	bics	r3, r5
   1d748:	bne.n	1d762 <btrfs_setup_chunk_tree_and_device_map@@Base+0x1f6>
   1d74a:	ldr	r3, [pc, #424]	; (1d8f4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   1d74c:	ldr	r0, [pc, #436]	; (1d904 <btrfs_setup_chunk_tree_and_device_map@@Base+0x398>)
   1d74e:	ldr	r3, [r7, r3]
   1d750:	add	r0, pc
   1d752:	ldr	r1, [r3, #0]
   1d754:	blx	8968 <fputs@plt+0x4>
   1d758:	mov	r0, r4
   1d75a:	movs	r4, #0
   1d75c:	bl	1bd08 <btrfs_free_fs_info@@Base>
   1d760:	b.n	1d6ea <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   1d762:	ands.w	r3, r5, #4096	; 0x1000
   1d766:	it	ne
   1d768:	movne	r3, #2
   1d76a:	cbz	r2, 1d770 <btrfs_setup_chunk_tree_and_device_map@@Base+0x204>
   1d76c:	orr.w	r3, r3, #4
   1d770:	and.w	r2, r5, #128	; 0x80
   1d774:	mov	r1, r6
   1d776:	strd	r3, r2, [sp, #8]
   1d77a:	mov	r0, sl
   1d77c:	add	r2, sp, #24
   1d77e:	strd	r8, r9, [sp]
   1d782:	str	r3, [sp, #20]
   1d784:	bl	1c010 <btrfs_scan_fs_devices@@Base>
   1d788:	mov	r1, r0
   1d78a:	cmp	r0, #0
   1d78c:	bne.n	1d758 <btrfs_setup_chunk_tree_and_device_map@@Base+0x1ec>
   1d78e:	cmp.w	fp, #0
   1d792:	ldr	r0, [sp, #24]
   1d794:	ldr	r3, [sp, #20]
   1d796:	it	ne
   1d798:	movne	r1, #2
   1d79a:	tst.w	r5, #64	; 0x40
   1d79e:	it	ne
   1d7a0:	orrne.w	r1, r1, #128	; 0x80
   1d7a4:	str.w	r0, [r4, #352]	; 0x160
   1d7a8:	str	r3, [sp, #20]
   1d7aa:	bl	27714 <btrfs_open_devices@@Base>
   1d7ae:	cmp	r0, #0
   1d7b0:	bne.n	1d758 <btrfs_setup_chunk_tree_and_device_map@@Base+0x1ec>
   1d7b2:	tst.w	r5, #8
   1d7b6:	ldr.w	r6, [r4, #308]	; 0x134
   1d7ba:	ldr	r3, [sp, #20]
   1d7bc:	beq.n	1d7e8 <btrfs_setup_chunk_tree_and_device_map@@Base+0x27c>
   1d7be:	ldr	r0, [sp, #24]
   1d7c0:	movs	r3, #1
   1d7c2:	str	r3, [sp, #0]
   1d7c4:	mov	r2, r8
   1d7c6:	mov	r3, r9
   1d7c8:	mov	r1, r6
   1d7ca:	ldr	r0, [r0, #64]	; 0x40
   1d7cc:	bl	1c3c0 <btrfs_read_dev_super@@Base>
   1d7d0:	cbz	r0, 1d7f4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x288>
   1d7d2:	ldr	r3, [pc, #288]	; (1d8f4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   1d7d4:	ldr	r0, [pc, #304]	; (1d908 <btrfs_setup_chunk_tree_and_device_map@@Base+0x39c>)
   1d7d6:	ldr	r3, [r7, r3]
   1d7d8:	add	r0, pc
   1d7da:	ldr	r1, [r3, #0]
   1d7dc:	blx	8968 <fputs@plt+0x4>
   1d7e0:	ldr	r0, [sp, #24]
   1d7e2:	bl	27624 <btrfs_close_devices@@Base>
   1d7e6:	b.n	1d758 <btrfs_setup_chunk_tree_and_device_map@@Base+0x1ec>
   1d7e8:	str	r3, [sp, #0]
   1d7ea:	mov	r2, r8
   1d7ec:	mov	r3, r9
   1d7ee:	mov	r1, r6
   1d7f0:	mov	r0, sl
   1d7f2:	b.n	1d7cc <btrfs_setup_chunk_tree_and_device_map@@Base+0x260>
   1d7f4:	ldr	r1, [r6, #60]	; 0x3c
   1d7f6:	mov	r2, r0
   1d7f8:	and.w	r3, r1, #8
   1d7fc:	orrs	r3, r2
   1d7fe:	beq.n	1d814 <btrfs_setup_chunk_tree_and_device_map@@Base+0x2a8>
   1d800:	ldrb.w	r3, [r4, #364]	; 0x16c
   1d804:	lsls	r2, r3, #25
   1d806:	bmi.n	1d814 <btrfs_setup_chunk_tree_and_device_map@@Base+0x2a8>
   1d808:	ldr	r3, [pc, #232]	; (1d8f4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   1d80a:	ldr	r0, [pc, #256]	; (1d90c <btrfs_setup_chunk_tree_and_device_map@@Base+0x3a0>)
   1d80c:	ldr	r3, [r7, r3]
   1d80e:	add	r0, pc
   1d810:	ldr	r1, [r3, #0]
   1d812:	b.n	1d7dc <btrfs_setup_chunk_tree_and_device_map@@Base+0x270>
   1d814:	ldr.w	r8, [sp, #24]
   1d818:	add.w	r0, r6, #32
   1d81c:	movs	r2, #16
   1d81e:	mov	r1, r8
   1d820:	blx	84a8 <memcmp@plt+0x4>
   1d824:	cbz	r0, 1d838 <btrfs_setup_chunk_tree_and_device_map@@Base+0x2cc>
   1d826:	ldr	r1, [pc, #232]	; (1d910 <btrfs_setup_chunk_tree_and_device_map@@Base+0x3a4>)
   1d828:	movw	r2, #1251	; 0x4e3
   1d82c:	ldr	r0, [pc, #228]	; (1d914 <btrfs_setup_chunk_tree_and_device_map@@Base+0x3a8>)
   1d82e:	add	r1, pc
   1d830:	adds	r1, #89	; 0x59
   1d832:	add	r0, pc
   1d834:	bl	1b6bc <btrfs_fs_roots_compare_roots@@Base+0x30e>
   1d838:	ldr.w	r7, [r4, #308]	; 0x134
   1d83c:	mov	r3, r0
   1d83e:	ldr.w	r1, [r7, #188]	; 0xbc
   1d842:	and.w	r2, r1, #1024	; 0x400
   1d846:	orrs	r3, r2
   1d848:	beq.n	1d86a <btrfs_setup_chunk_tree_and_device_map@@Base+0x2fe>
   1d84a:	movs	r2, #16
   1d84c:	addw	r0, r6, #571	; 0x23b
   1d850:	add.w	r1, r8, r2
   1d854:	blx	84a8 <memcmp@plt+0x4>
   1d858:	cbz	r0, 1d86a <btrfs_setup_chunk_tree_and_device_map@@Base+0x2fe>
   1d85a:	ldr	r1, [pc, #188]	; (1d918 <btrfs_setup_chunk_tree_and_device_map@@Base+0x3ac>)
   1d85c:	movw	r2, #1253	; 0x4e5
   1d860:	ldr	r0, [pc, #184]	; (1d91c <btrfs_setup_chunk_tree_and_device_map@@Base+0x3b0>)
   1d862:	add	r1, pc
   1d864:	adds	r1, #89	; 0x59
   1d866:	add	r0, pc
   1d868:	b.n	1d834 <btrfs_setup_chunk_tree_and_device_map@@Base+0x2c8>
   1d86a:	ldr.w	r3, [r6, #144]	; 0x90
   1d86e:	mov	r1, r5
   1d870:	mov	r0, r7
   1d872:	str.w	r3, [r4, #388]	; 0x184
   1d876:	ldr.w	r3, [r6, #148]	; 0x94
   1d87a:	str.w	r3, [r4, #384]	; 0x180
   1d87e:	ldr.w	r3, [r6, #156]	; 0x9c
   1d882:	str.w	r3, [r4, #392]	; 0x188
   1d886:	bl	1beac <btrfs_check_fs_compatibility@@Base>
   1d88a:	cmp	r0, #0
   1d88c:	bne.n	1d7e0 <btrfs_setup_chunk_tree_and_device_map@@Base+0x274>
   1d88e:	ldrd	r2, r3, [sp, #80]	; 0x50
   1d892:	mov	r0, r4
   1d894:	bl	1d56c <btrfs_setup_chunk_tree_and_device_map@@Base>
   1d898:	cbz	r0, 1d8a8 <btrfs_setup_chunk_tree_and_device_map@@Base+0x33c>
   1d89a:	mov	r0, r4
   1d89c:	bl	1bf4c <btrfs_release_all_roots@@Base>
   1d8a0:	mov	r0, r4
   1d8a2:	bl	1bfb0 <btrfs_cleanup_all_caches@@Base>
   1d8a6:	b.n	1d7e0 <btrfs_setup_chunk_tree_and_device_map@@Base+0x274>
   1d8a8:	ldr	r0, [r4, #32]
   1d8aa:	cmp	r0, #0
   1d8ac:	beq.w	1d6ea <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   1d8b0:	ldr	r0, [r0, #0]
   1d8b2:	movs	r3, #16
   1d8b4:	movs	r2, #64	; 0x40
   1d8b6:	mov	r1, r4
   1d8b8:	bl	16a0e <read_extent_buffer@@Base>
   1d8bc:	ldrd	r2, r3, [sp, #72]	; 0x48
   1d8c0:	mov	r0, r4
   1d8c2:	str	r5, [sp, #0]
   1d8c4:	bl	1d264 <btrfs_setup_all_roots@@Base>
   1d8c8:	cmp	r0, #0
   1d8ca:	beq.w	1d6ea <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   1d8ce:	lsls	r3, r5, #22
   1d8d0:	bmi.w	1d6ea <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   1d8d4:	ldrsb.w	r3, [r4, #364]	; 0x16c
   1d8d8:	cmp	r3, #0
   1d8da:	blt.w	1d6ea <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   1d8de:	b.n	1d89a <btrfs_setup_chunk_tree_and_device_map@@Base+0x32e>
   1d8e0:	mov	r0, r4
   1d8e2:	add	sp, #36	; 0x24
   1d8e4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d8e8:	str	r6, [r0, #112]	; 0x70
   1d8ea:	movs	r4, r0
   1d8ec:	lsls	r0, r4, #8
   1d8ee:	movs	r0, r0
   1d8f0:	str	r2, [r7, #108]	; 0x6c
   1d8f2:	movs	r4, r0
   1d8f4:	lsls	r0, r6, #8
   1d8f6:	movs	r0, r0
   1d8f8:	movw	r0, #36865	; 0x9001
   1d8fc:	movw	r0, #36865	; 0x9001
   1d900:	str	r6, [r2, #104]	; 0x68
   1d902:	movs	r4, r0
   1d904:	addw	r0, r2, #1
   1d908:	subs.w	r0, fp, #1
   1d90c:			; <UNDEFINED> instruction: 0xf19b0001
   1d910:	movt	r0, #61441	; 0xf001
   1d914:	sub.w	r0, r2, #1
   1d918:			; <UNDEFINED> instruction: 0xf29b0001
   1d91c:	sub.w	r0, fp, #1

0001d920 <open_ctree_fs_info@@Base>:
   1d920:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1d924:	mov	r9, r2
   1d926:	ldr	r2, [pc, #164]	; (1d9cc <open_ctree_fs_info@@Base+0xac>)
   1d928:	mov	r8, r3
   1d92a:	ldr	r3, [pc, #164]	; (1d9d0 <open_ctree_fs_info@@Base+0xb0>)
   1d92c:	sub	sp, #140	; 0x8c
   1d92e:	add	r2, pc
   1d930:	add	r1, sp, #24
   1d932:	ldr	r6, [sp, #184]	; 0xb8
   1d934:	mov	r4, r0
   1d936:	ldr	r3, [r2, r3]
   1d938:	ldr	r3, [r3, #0]
   1d93a:	str	r3, [sp, #132]	; 0x84
   1d93c:	mov.w	r3, #0
   1d940:	bl	38db0 <__libc_csu_fini@@Base+0x1c>
   1d944:	cmp	r0, #0
   1d946:	bge.n	1d968 <open_ctree_fs_info@@Base+0x48>
   1d948:	ldr	r0, [pc, #136]	; (1d9d4 <open_ctree_fs_info@@Base+0xb4>)
   1d94a:	mov	r1, r4
   1d94c:	add	r0, pc
   1d94e:	bl	16b70 <__btrfs_error@@Base>
   1d952:	movs	r4, #0
   1d954:	ldr	r2, [pc, #128]	; (1d9d8 <open_ctree_fs_info@@Base+0xb8>)
   1d956:	ldr	r3, [pc, #120]	; (1d9d0 <open_ctree_fs_info@@Base+0xb0>)
   1d958:	add	r2, pc
   1d95a:	ldr	r3, [r2, r3]
   1d95c:	ldr	r2, [r3, #0]
   1d95e:	ldr	r3, [sp, #132]	; 0x84
   1d960:	eors	r2, r3
   1d962:	beq.n	1d9c4 <open_ctree_fs_info@@Base+0xa4>
   1d964:	blx	8510 <__stack_chk_fail@plt>
   1d968:	ldr	r1, [sp, #40]	; 0x28
   1d96a:	and.w	r1, r1, #61440	; 0xf000
   1d96e:	cmp.w	r1, #32768	; 0x8000
   1d972:	beq.n	1d982 <open_ctree_fs_info@@Base+0x62>
   1d974:	cmp.w	r1, #24576	; 0x6000
   1d978:	beq.n	1d982 <open_ctree_fs_info@@Base+0x62>
   1d97a:	ldr	r0, [pc, #96]	; (1d9dc <open_ctree_fs_info@@Base+0xbc>)
   1d97c:	mov	r1, r4
   1d97e:	add	r0, pc
   1d980:	b.n	1d94e <open_ctree_fs_info@@Base+0x2e>
   1d982:	tst.w	r6, #1
   1d986:	mov	r0, r4
   1d988:	ite	ne
   1d98a:	movne	r1, #2
   1d98c:	moveq	r1, #0
   1d98e:	blx	8778 <__open64_2@plt>
   1d992:	subs	r5, r0, #0
   1d994:	bge.n	1d99e <open_ctree_fs_info@@Base+0x7e>
   1d996:	ldr	r0, [pc, #72]	; (1d9e0 <open_ctree_fs_info@@Base+0xc0>)
   1d998:	mov	r1, r4
   1d99a:	add	r0, pc
   1d99c:	b.n	1d94e <open_ctree_fs_info@@Base+0x2e>
   1d99e:	str	r6, [sp, #16]
   1d9a0:	mov	r1, r4
   1d9a2:	ldrd	r6, r7, [sp, #176]	; 0xb0
   1d9a6:	mov	r2, r9
   1d9a8:	mov	r3, r8
   1d9aa:	strd	r6, r7, [sp, #8]
   1d9ae:	ldrd	r6, r7, [sp, #168]	; 0xa8
   1d9b2:	strd	r6, r7, [sp]
   1d9b6:	bl	1d670 <btrfs_setup_chunk_tree_and_device_map@@Base+0x104>
   1d9ba:	mov	r4, r0
   1d9bc:	mov	r0, r5
   1d9be:	blx	8998 <close@plt>
   1d9c2:	b.n	1d954 <open_ctree_fs_info@@Base+0x34>
   1d9c4:	mov	r0, r4
   1d9c6:	add	sp, #140	; 0x8c
   1d9c8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1d9cc:	str	r6, [r2, #68]	; 0x44
   1d9ce:	movs	r4, r0
   1d9d0:	lsls	r0, r4, #8
   1d9d2:	movs	r0, r0
   1d9d4:	adds.w	r0, r4, #1
   1d9d8:	str	r4, [r5, #64]	; 0x40
   1d9da:	movs	r4, r0
   1d9dc:			; <UNDEFINED> instruction: 0xf0f70001
   1d9e0:	add.w	r0, r2, #1

0001d9e4 <open_ctree@@Base>:
   1d9e4:	push	{r4, r5, r6, r7, lr}
   1d9e6:	sub	sp, #28
   1d9e8:	ldr	r1, [pc, #64]	; (1da2c <open_ctree@@Base+0x48>)
   1d9ea:	mov	r5, r0
   1d9ec:	ldr	r4, [sp, #48]	; 0x30
   1d9ee:	mov	r7, r2
   1d9f0:	ldr	r0, [pc, #60]	; (1da30 <open_ctree@@Base+0x4c>)
   1d9f2:	add	r1, pc
   1d9f4:	mov	r6, r3
   1d9f6:	movw	r2, #1335	; 0x537
   1d9fa:	and.w	r3, r4, #2048	; 0x800
   1d9fe:	add	r0, pc
   1da00:	adds	r1, #105	; 0x69
   1da02:	bl	1b734 <btrfs_fs_roots_compare_roots@@Base+0x386>
   1da06:	movs	r2, #0
   1da08:	movs	r3, #0
   1da0a:	mov	r0, r5
   1da0c:	strd	r2, r3, [sp, #8]
   1da10:	strd	r2, r3, [sp]
   1da14:	mov	r2, r7
   1da16:	mov	r3, r6
   1da18:	str	r4, [sp, #16]
   1da1a:	bl	1d920 <open_ctree_fs_info@@Base>
   1da1e:	cbz	r0, 1da28 <open_ctree@@Base+0x44>
   1da20:	lsls	r3, r4, #22
   1da22:	ite	mi
   1da24:	ldrmi	r0, [r0, #32]
   1da26:	ldrpl	r0, [r0, #20]
   1da28:	add	sp, #28
   1da2a:	pop	{r4, r5, r6, r7, pc}
   1da2c:	add.w	r0, fp, #1
   1da30:			; <UNDEFINED> instruction: 0xf0b30001

0001da34 <open_ctree_fd@@Base>:
   1da34:	push	{r4, r6, r7, lr}
   1da36:	sub	sp, #24
   1da38:	ldr	r4, [sp, #40]	; 0x28
   1da3a:	lsls	r6, r4, #20
   1da3c:	bpl.n	1da50 <open_ctree_fd@@Base+0x1c>
   1da3e:	ldr	r0, [pc, #48]	; (1da70 <open_ctree_fd@@Base+0x3c>)
   1da40:	mov	r2, r4
   1da42:	movs	r3, #0
   1da44:	add	r0, pc
   1da46:	bl	16b70 <__btrfs_error@@Base>
   1da4a:	movs	r0, #0
   1da4c:	add	sp, #24
   1da4e:	pop	{r4, r6, r7, pc}
   1da50:	movs	r6, #0
   1da52:	movs	r7, #0
   1da54:	str	r4, [sp, #16]
   1da56:	strd	r6, r7, [sp, #8]
   1da5a:	strd	r6, r7, [sp]
   1da5e:	bl	1d670 <btrfs_setup_chunk_tree_and_device_map@@Base+0x104>
   1da62:	cmp	r0, #0
   1da64:	beq.n	1da4c <open_ctree_fd@@Base+0x18>
   1da66:	lsls	r3, r4, #22
   1da68:	ite	mi
   1da6a:	ldrmi	r0, [r0, #32]
   1da6c:	ldrpl	r0, [r0, #20]
   1da6e:	b.n	1da4c <open_ctree_fd@@Base+0x18>
   1da70:	eors.w	r0, r8, #1

0001da74 <btrfs_create_tree@@Base>:
   1da74:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1da78:	mov	r9, r2
   1da7a:	vpush	{d8}
   1da7e:	mov	r8, r3
   1da80:	ldr	r2, [pc, #428]	; (1dc30 <btrfs_create_tree@@Base+0x1bc>)
   1da82:	mov	r7, r0
   1da84:	ldr	r3, [pc, #428]	; (1dc34 <btrfs_create_tree@@Base+0x1c0>)
   1da86:	mov	sl, r1
   1da88:	add	r2, pc
   1da8a:	movs	r0, #1
   1da8c:	sub	sp, #60	; 0x3c
   1da8e:	ldr	r3, [r2, r3]
   1da90:	ldr	r3, [r3, #0]
   1da92:	str	r3, [sp, #52]	; 0x34
   1da94:	mov.w	r3, #0
   1da98:	ldr	r3, [r1, #28]
   1da9a:	mov.w	r1, #544	; 0x220
   1da9e:	vmov	s16, r3
   1daa2:	blx	839c <calloc@plt+0x4>
   1daa6:	mov	r4, r0
   1daa8:	cmp	r0, #0
   1daaa:	beq.w	1dc1c <btrfs_create_tree@@Base+0x1a8>
   1daae:	mov	r2, r9
   1dab0:	mov	r3, r8
   1dab2:	mov	r1, sl
   1dab4:	mov.w	fp, #132	; 0x84
   1dab8:	bl	1bc88 <btrfs_setup_root@@Base>
   1dabc:	movs	r6, #0
   1dabe:	str.w	r9, [r4, #447]	; 0x1bf
   1dac2:	movs	r2, #0
   1dac4:	str.w	r8, [r4, #451]	; 0x1c3
   1dac8:	movs	r3, #0
   1daca:	strb.w	fp, [r4, #455]	; 0x1c7
   1dace:	mov	r1, r4
   1dad0:	strd	r2, r3, [r4, #456]	; 0x1c8
   1dad4:	mov	r0, r7
   1dad6:	strd	r2, r3, [sp, #24]
   1dada:	strd	r2, r3, [sp, #16]
   1dade:	strd	r6, r6, [sp, #8]
   1dae2:	ldr.w	r2, [sl, #384]	; 0x180
   1dae6:	strd	r9, r8, [sp]
   1daea:	bl	2215c <btrfs_alloc_free_block@@Base>
   1daee:	cmn.w	r0, #4096	; 0x1000
   1daf2:	mov	r5, r0
   1daf4:	bls.n	1db16 <btrfs_create_tree@@Base+0xa2>
   1daf6:	mov	r6, r0
   1daf8:	mov	r0, r4
   1dafa:	mov	r4, r6
   1dafc:	blx	8434 <free@plt+0x4>
   1db00:	ldr	r2, [pc, #308]	; (1dc38 <btrfs_create_tree@@Base+0x1c4>)
   1db02:	ldr	r3, [pc, #304]	; (1dc34 <btrfs_create_tree@@Base+0x1c0>)
   1db04:	add	r2, pc
   1db06:	ldr	r3, [r2, r3]
   1db08:	ldr	r2, [r3, #0]
   1db0a:	ldr	r3, [sp, #52]	; 0x34
   1db0c:	eors	r2, r3
   1db0e:	beq.w	1dc22 <btrfs_create_tree@@Base+0x1ae>
   1db12:	blx	8510 <__stack_chk_fail@plt>
   1db16:	mov	r2, r6
   1db18:	mov	r1, r6
   1db1a:	movs	r3, #101	; 0x65
   1db1c:	bl	16a96 <memset_extent_buffer@@Base>
   1db20:	ldr	r3, [r5, #40]	; 0x28
   1db22:	mov	r0, r5
   1db24:	str.w	r3, [r5, #144]	; 0x90
   1db28:	ldr	r3, [r5, #44]	; 0x2c
   1db2a:	str.w	r3, [r5, #148]	; 0x94
   1db2e:	ldrd	r2, r3, [r7, #8]
   1db32:	str.w	r9, [r5, #184]	; 0xb8
   1db36:	str.w	r8, [r5, #188]	; 0xbc
   1db3a:	str.w	r2, [r5, #176]	; 0xb0
   1db3e:	str.w	r3, [r5, #180]	; 0xb4
   1db42:	ldr.w	r2, [r5, #152]	; 0x98
   1db46:	ldr.w	r3, [r5, #156]	; 0x9c
   1db4a:	bic.w	r3, r3, #4278190080	; 0xff000000
   1db4e:	str.w	r2, [r5, #152]	; 0x98
   1db52:	orr.w	r3, r3, #16777216	; 0x1000000
   1db56:	str.w	r3, [r5, #156]	; 0x9c
   1db5a:	ldr.w	r1, [sl, #352]	; 0x160
   1db5e:	movs	r3, #16
   1db60:	movs	r2, #32
   1db62:	str	r5, [r4, #0]
   1db64:	add	r1, r3
   1db66:	bl	16a24 <write_extent_buffer@@Base>
   1db6a:	movs	r3, #16
   1db6c:	movs	r2, #64	; 0x40
   1db6e:	mov	r1, sl
   1db70:	mov	r0, r5
   1db72:	bl	16a24 <write_extent_buffer@@Base>
   1db76:	mov	r0, r5
   1db78:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   1db7c:	ldr	r2, [r4, #0]
   1db7e:	movs	r1, #1
   1db80:	add.w	r0, r4, #255	; 0xff
   1db84:	ldr	r3, [r2, #80]	; 0x50
   1db86:	adds	r3, #1
   1db88:	str	r3, [r2, #80]	; 0x50
   1db8a:	ldr	r3, [r4, #0]
   1db8c:	movs	r2, #0
   1db8e:	str.w	r1, [r4, #492]	; 0x1ec
   1db92:	str	r3, [r4, #4]
   1db94:	movs	r3, #0
   1db96:	strd	r2, r3, [r4, #216]	; 0xd8
   1db9a:	strd	r2, r3, [r4, #192]	; 0xc0
   1db9e:	ldrd	r2, r3, [r5, #40]	; 0x28
   1dba2:	strb.w	r6, [r4, #246]	; 0xf6
   1dba6:	str.w	r1, [r4, #224]	; 0xe0
   1dbaa:	mov	r1, r6
   1dbac:	strd	r2, r3, [r4, #184]	; 0xb8
   1dbb0:	ldrd	r2, r3, [r7, #8]
   1dbb4:	strd	r2, r3, [r4, #168]	; 0xa8
   1dbb8:	movs	r2, #0
   1dbba:	ldr	r3, [r5, #76]	; 0x4c
   1dbbc:	strd	r3, r6, [r4, #200]	; 0xc8
   1dbc0:	movs	r3, #0
   1dbc2:	strd	r2, r3, [r4, #208]	; 0xd0
   1dbc6:	strd	r2, r3, [r4, #176]	; 0xb0
   1dbca:	movs	r2, #16
   1dbcc:	blx	87c4 <memset@plt+0x4>
   1dbd0:	strb.w	r6, [r4, #245]	; 0xf5
   1dbd4:	vmov	r1, s16
   1dbd8:	add.w	r3, r4, #8
   1dbdc:	add	r2, sp, #32
   1dbde:	mov	r0, r7
   1dbe0:	strb.w	r6, [sp, #41]	; 0x29
   1dbe4:	strb.w	r6, [sp, #42]	; 0x2a
   1dbe8:	strb.w	r6, [sp, #43]	; 0x2b
   1dbec:	strb.w	r6, [sp, #44]	; 0x2c
   1dbf0:	strb.w	r6, [sp, #45]	; 0x2d
   1dbf4:	strb.w	r6, [sp, #46]	; 0x2e
   1dbf8:	strb.w	r6, [sp, #47]	; 0x2f
   1dbfc:	strb.w	r6, [sp, #48]	; 0x30
   1dc00:	strd	r9, r8, [sp, #32]
   1dc04:	strb.w	fp, [sp, #40]	; 0x28
   1dc08:	bl	272a8 <btrfs_insert_root@@Base>
   1dc0c:	mov	r6, r0
   1dc0e:	cmp	r0, #0
   1dc10:	beq.w	1db00 <btrfs_create_tree@@Base+0x8c>
   1dc14:	mov	r0, r5
   1dc16:	bl	16314 <free_extent_buffer@@Base>
   1dc1a:	b.n	1daf8 <btrfs_create_tree@@Base+0x84>
   1dc1c:	mvn.w	r4, #11
   1dc20:	b.n	1db00 <btrfs_create_tree@@Base+0x8c>
   1dc22:	mov	r0, r4
   1dc24:	add	sp, #60	; 0x3c
   1dc26:	vpop	{d8}
   1dc2a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dc2e:	nop
   1dc30:	str	r4, [r7, #44]	; 0x2c
   1dc32:	movs	r4, r0
   1dc34:	lsls	r0, r4, #8
   1dc36:	movs	r0, r0
   1dc38:	str	r0, [r0, #40]	; 0x28
   1dc3a:	movs	r4, r0
   1dc3c:	push	{r4, r5, lr}
   1dc3e:	mov	r1, r0
   1dc40:	ldr.w	r3, [r0, #356]	; 0x164
   1dc44:	and.w	r2, r2, #7
   1dc48:	add.w	r1, r1, #356	; 0x164
   1dc4c:	sub.w	r0, r3, #44	; 0x2c
   1dc50:	add.w	r3, r0, #44	; 0x2c
   1dc54:	cmp	r3, r1
   1dc56:	bne.n	1dc5c <btrfs_create_tree@@Base+0x1e8>
   1dc58:	movs	r0, #0
   1dc5a:	pop	{r4, r5, pc}
   1dc5c:	ldr	r3, [r0, #0]
   1dc5e:	movs	r5, #0
   1dc60:	and.w	r4, r2, r3
   1dc64:	orrs.w	r3, r4, r5
   1dc68:	bne.n	1dc5a <btrfs_create_tree@@Base+0x1e6>
   1dc6a:	ldr	r0, [r0, #44]	; 0x2c
   1dc6c:	subs	r0, #44	; 0x2c
   1dc6e:	b.n	1dc50 <btrfs_create_tree@@Base+0x1dc>
   1dc70:	push	{r4, r5, r6, r7, lr}
   1dc72:	movs	r3, #0
   1dc74:	and.w	r4, r2, #2040	; 0x7f8
   1dc78:	mov	r5, r3
   1dc7a:	orrs.w	r1, r4, r5
   1dc7e:	beq.n	1dcca <btrfs_create_tree@@Base+0x256>
   1dc80:	and.w	r6, r2, #1
   1dc84:	mov	r7, r3
   1dc86:	orrs.w	r3, r6, r7
   1dc8a:	and.w	r6, r2, #4
   1dc8e:	mov.w	r7, #0
   1dc92:	ittt	ne
   1dc94:	ldrne.w	r3, [r0, #248]	; 0xf8
   1dc98:	orrne	r3, r4
   1dc9a:	strne.w	r3, [r0, #248]	; 0xf8
   1dc9e:	orrs.w	r3, r6, r7
   1dca2:	and.w	r6, r2, #2
   1dca6:	mov.w	r7, #0
   1dcaa:	itttt	ne
   1dcac:	ldrdne	r1, r3, [r0, #256]	; 0x100
   1dcb0:	orrne	r3, r5
   1dcb2:	orrne	r1, r4
   1dcb4:	strdne	r1, r3, [r0, #256]	; 0x100
   1dcb8:	orrs.w	r3, r6, r7
   1dcbc:	itttt	ne
   1dcbe:	ldrdne	r2, r3, [r0, #264]	; 0x108
   1dcc2:	orrne	r2, r4
   1dcc4:	orrne	r3, r5
   1dcc6:	strdne	r2, r3, [r0, #264]	; 0x108
   1dcca:	pop	{r4, r5, r6, r7, pc}
   1dccc:	push	{r4, lr}
   1dcce:	mov	r4, r1
   1dcd0:	ldr	r1, [pc, #84]	; (1dd28 <btrfs_create_tree@@Base+0x2b4>)
   1dcd2:	sub	sp, #24
   1dcd4:	ldr	r3, [pc, #84]	; (1dd2c <btrfs_create_tree@@Base+0x2b8>)
   1dcd6:	add	r1, pc
   1dcd8:	ldr	r3, [r1, r3]
   1dcda:	mov	r1, sp
   1dcdc:	ldr	r3, [r3, #0]
   1dcde:	str	r3, [sp, #20]
   1dce0:	mov.w	r3, #0
   1dce4:	movs	r3, #25
   1dce6:	muls	r2, r3
   1dce8:	movs	r3, #17
   1dcea:	adds	r2, #101	; 0x65
   1dcec:	bl	16a0e <read_extent_buffer@@Base>
   1dcf0:	ldr.w	r3, [sp, #13]
   1dcf4:	ldr.w	r2, [sp, #9]
   1dcf8:	str.w	r3, [r4, #13]
   1dcfc:	ldrb.w	r3, [sp, #8]
   1dd00:	str.w	r2, [r4, #9]
   1dd04:	ldr	r2, [pc, #40]	; (1dd30 <btrfs_create_tree@@Base+0x2bc>)
   1dd06:	strb	r3, [r4, #8]
   1dd08:	ldr	r3, [sp, #0]
   1dd0a:	add	r2, pc
   1dd0c:	str	r3, [r4, #0]
   1dd0e:	ldr	r3, [sp, #4]
   1dd10:	str	r3, [r4, #4]
   1dd12:	ldr	r3, [pc, #24]	; (1dd2c <btrfs_create_tree@@Base+0x2b8>)
   1dd14:	ldr	r3, [r2, r3]
   1dd16:	ldr	r2, [r3, #0]
   1dd18:	ldr	r3, [sp, #20]
   1dd1a:	eors	r2, r3
   1dd1c:	beq.n	1dd22 <btrfs_create_tree@@Base+0x2ae>
   1dd1e:	blx	8510 <__stack_chk_fail@plt>
   1dd22:	add	sp, #24
   1dd24:	pop	{r4, pc}
   1dd26:	nop
   1dd28:	str	r6, [r5, #8]
   1dd2a:	movs	r4, r0
   1dd2c:	lsls	r0, r4, #8
   1dd2e:	movs	r0, r0
   1dd30:	str	r2, [r7, #4]
   1dd32:	movs	r4, r0
   1dd34:	ldr	r2, [pc, #60]	; (1dd74 <btrfs_create_tree@@Base+0x300>)
   1dd36:	movs	r1, #16
   1dd38:	ldr	r3, [pc, #60]	; (1dd78 <btrfs_create_tree@@Base+0x304>)
   1dd3a:	push	{r4, lr}
   1dd3c:	add	r2, pc
   1dd3e:	sub	sp, #72	; 0x48
   1dd40:	add	r4, sp, #4
   1dd42:	ldr	r3, [r2, r3]
   1dd44:	mov	r0, r4
   1dd46:	ldr	r3, [r3, #0]
   1dd48:	str	r3, [sp, #68]	; 0x44
   1dd4a:	mov.w	r3, #0
   1dd4e:	blx	86c4 <backtrace@plt>
   1dd52:	movs	r2, #2
   1dd54:	mov	r1, r0
   1dd56:	mov	r0, r4
   1dd58:	blx	89c8 <backtrace_symbols_fd@plt>
   1dd5c:	ldr	r2, [pc, #28]	; (1dd7c <btrfs_create_tree@@Base+0x308>)
   1dd5e:	ldr	r3, [pc, #24]	; (1dd78 <btrfs_create_tree@@Base+0x304>)
   1dd60:	add	r2, pc
   1dd62:	ldr	r3, [r2, r3]
   1dd64:	ldr	r2, [r3, #0]
   1dd66:	ldr	r3, [sp, #68]	; 0x44
   1dd68:	eors	r2, r3
   1dd6a:	beq.n	1dd70 <btrfs_create_tree@@Base+0x2fc>
   1dd6c:	blx	8510 <__stack_chk_fail@plt>
   1dd70:	add	sp, #72	; 0x48
   1dd72:	pop	{r4, pc}
   1dd74:	str	r0, [r1, #4]
   1dd76:	movs	r4, r0
   1dd78:	lsls	r0, r4, #8
   1dd7a:	movs	r0, r0
   1dd7c:	str	r4, [r4, #0]
   1dd7e:	movs	r4, r0
   1dd80:	push	{r0, r1, r2, lr}
   1dd82:	movs	r3, #1
   1dd84:	str	r3, [sp, #0]
   1dd86:	ldr	r3, [r2, #32]
   1dd88:	bl	1aaec <btrfs_del_items@@Base>
   1dd8c:	add	sp, #12
   1dd8e:	ldr.w	pc, [sp], #4
   1dd92:	push	{r4, r5, lr}
   1dd94:	sub	sp, #20
   1dd96:	ldr	r4, [pc, #40]	; (1ddc0 <btrfs_create_tree@@Base+0x34c>)
   1dd98:	ldr	r5, [pc, #40]	; (1ddc4 <btrfs_create_tree@@Base+0x350>)
   1dd9a:	add	r4, pc
   1dd9c:	ldr	r4, [r4, r5]
   1dd9e:	ldr	r5, [sp, #32]
   1dda0:	strd	r3, r2, [sp]
   1dda4:	mov	r3, r1
   1dda6:	ldr	r2, [pc, #32]	; (1ddc8 <btrfs_create_tree@@Base+0x354>)
   1dda8:	movs	r1, #1
   1ddaa:	strd	r0, r5, [sp, #8]
   1ddae:	add	r2, pc
   1ddb0:	ldr	r0, [r4, #0]
   1ddb2:	blx	8860 <__fprintf_chk@plt+0x4>
   1ddb6:	add	sp, #20
   1ddb8:	ldmia.w	sp!, {r4, r5, lr}
   1ddbc:	b.n	1dd34 <btrfs_create_tree@@Base+0x2c0>
   1ddbe:	nop
   1ddc0:	ldrsh	r2, [r5, r7]
   1ddc2:	movs	r4, r0
   1ddc4:	lsls	r0, r6, #8
   1ddc6:	movs	r0, r0
   1ddc8:	sub	sp, #248	; 0xf8
   1ddca:	movs	r1, r0
   1ddcc:	push	{r4}
   1ddce:	ldr	r4, [sp, #4]
   1ddd0:	cbz	r4, 1dddc <btrfs_create_tree@@Base+0x368>
   1ddd2:	movs	r4, #1
   1ddd4:	str	r4, [sp, #4]
   1ddd6:	ldr.w	r4, [sp], #4
   1ddda:	b.n	1dd92 <btrfs_create_tree@@Base+0x31e>
   1dddc:	ldr.w	r4, [sp], #4
   1dde0:	bx	lr
   1dde2:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dde6:	mov	r7, r0
   1dde8:	ldr	r5, [pc, #452]	; (1dfb0 <btrfs_create_tree@@Base+0x53c>)
   1ddea:	sub	sp, #100	; 0x64
   1ddec:	ldr	r0, [pc, #452]	; (1dfb4 <btrfs_create_tree@@Base+0x540>)
   1ddee:	mov	r6, r1
   1ddf0:	add	r5, pc
   1ddf2:	mov	r4, r2
   1ddf4:	ldrb.w	r9, [r4, #196]	; 0xc4
   1ddf8:	ldr	r0, [r5, r0]
   1ddfa:	ldr	r2, [pc, #444]	; (1dfb8 <btrfs_create_tree@@Base+0x544>)
   1ddfc:	ldr	r0, [r0, #0]
   1ddfe:	str	r0, [sp, #92]	; 0x5c
   1de00:	mov.w	r0, #0
   1de04:	ldr.w	r0, [r6, #488]	; 0x1e8
   1de08:	add	r2, pc
   1de0a:	ldr	r1, [sp, #136]	; 0x88
   1de0c:	orrs.w	r0, r9, r0
   1de10:	bne.n	1de2c <btrfs_create_tree@@Base+0x3b8>
   1de12:	mov.w	sl, #0
   1de16:	ldr	r2, [pc, #420]	; (1dfbc <btrfs_create_tree@@Base+0x548>)
   1de18:	ldr	r3, [pc, #408]	; (1dfb4 <btrfs_create_tree@@Base+0x540>)
   1de1a:	add	r2, pc
   1de1c:	ldr	r3, [r2, r3]
   1de1e:	ldr	r2, [r3, #0]
   1de20:	ldr	r3, [sp, #92]	; 0x5c
   1de22:	eors	r2, r3
   1de24:	beq.w	1dfa6 <btrfs_create_tree@@Base+0x532>
   1de28:	blx	8510 <__stack_chk_fail@plt>
   1de2c:	cmp	r1, #0
   1de2e:	bne.w	1df3e <btrfs_create_tree@@Base+0x4ca>
   1de32:	ldr	r1, [pc, #396]	; (1dfc0 <btrfs_create_tree@@Base+0x54c>)
   1de34:	ldr.w	r8, [r2, r1]
   1de38:	cmp	r3, #0
   1de3a:	beq.w	1df42 <btrfs_create_tree@@Base+0x4ce>
   1de3e:	ldrd	r2, r3, [r4, #40]	; 0x28
   1de42:	strd	r2, r3, [sp, #40]	; 0x28
   1de46:	movs	r5, #0
   1de48:	ldr.w	r3, [r4, #184]	; 0xb8
   1de4c:	str	r3, [sp, #48]	; 0x30
   1de4e:	ldr.w	r3, [r4, #188]	; 0xbc
   1de52:	str	r3, [sp, #52]	; 0x34
   1de54:	ldr.w	r3, [r4, #192]	; 0xc0
   1de58:	str	r3, [sp, #56]	; 0x38
   1de5a:	add.w	r3, r9, #4294967295	; 0xffffffff
   1de5e:	asrs	r2, r3, #31
   1de60:	mov	r1, r3
   1de62:	strd	r1, r2, [sp, #64]	; 0x40
   1de66:	ldr	r3, [sp, #56]	; 0x38
   1de68:	cmp	r5, r3
   1de6a:	beq.n	1de12 <btrfs_create_tree@@Base+0x39e>
   1de6c:	cmp.w	r9, #0
   1de70:	bne.n	1df48 <btrfs_create_tree@@Base+0x4d4>
   1de72:	add	r1, sp, #72	; 0x48
   1de74:	mov	r2, r5
   1de76:	mov	r0, r4
   1de78:	bl	1dccc <btrfs_create_tree@@Base+0x258>
   1de7c:	ldrb.w	r3, [sp, #80]	; 0x50
   1de80:	cmp	r3, #108	; 0x6c
   1de82:	bne.w	1dfa2 <btrfs_create_tree@@Base+0x52e>
   1de86:	movs	r3, #25
   1de88:	mla	r3, r3, r5, r4
   1de8c:	ldr.w	r2, [r3, #214]	; 0xd6
   1de90:	add	r2, r4
   1de92:	add.w	r3, r2, #197	; 0xc5
   1de96:	ldrb.w	r2, [r2, #217]	; 0xd9
   1de9a:	cmp	r2, #0
   1de9c:	beq.w	1dfa2 <btrfs_create_tree@@Base+0x52e>
   1dea0:	mov	r2, r3
   1dea2:	ldr.w	sl, [r2, #21]!
   1dea6:	ldr.w	fp, [r2, #4]
   1deaa:	orrs.w	r2, sl, fp
   1deae:	beq.n	1dfa2 <btrfs_create_tree@@Base+0x52e>
   1deb0:	mov	r2, r3
   1deb2:	ldr.w	r0, [r3, #37]!
   1deb6:	ldr.w	r1, [r2, #29]!
   1deba:	ldr.w	ip, [r3, #4]
   1debe:	ldr.w	lr, [r2, #4]
   1dec2:	ldr.w	r2, [sp, #81]	; 0x51
   1dec6:	str	r1, [sp, #60]	; 0x3c
   1dec8:	ldr.w	r1, [sp, #85]	; 0x55
   1decc:	subs	r2, r2, r0
   1dece:	str.w	r2, [sp, #81]	; 0x51
   1ded2:	mov	r0, r7
   1ded4:	sbc.w	r1, r1, ip
   1ded8:	strd	r2, r1, [sp, #32]
   1dedc:	ldrd	r2, r3, [sp, #72]	; 0x48
   1dee0:	str.w	r1, [sp, #85]	; 0x55
   1dee4:	mov	r1, r6
   1dee6:	strd	r2, r3, [sp, #24]
   1deea:	ldr	r3, [sp, #48]	; 0x30
   1deec:	str	r3, [sp, #16]
   1deee:	ldr	r3, [sp, #52]	; 0x34
   1def0:	str	r3, [sp, #20]
   1def2:	ldrd	r2, r3, [sp, #40]	; 0x28
   1def6:	strd	r2, r3, [sp, #8]
   1defa:	mov	r2, sl
   1defc:	ldr	r3, [sp, #60]	; 0x3c
   1defe:	strd	r3, lr, [sp]
   1df02:	mov	r3, fp
   1df04:	blx	r8
   1df06:	mov	sl, r0
   1df08:	cmp	r0, #0
   1df0a:	beq.n	1dfa2 <btrfs_create_tree@@Base+0x52e>
   1df0c:	ldr	r2, [pc, #180]	; (1dfc4 <btrfs_create_tree@@Base+0x550>)
   1df0e:	movs	r3, #1
   1df10:	ldr	r1, [pc, #180]	; (1dfc8 <btrfs_create_tree@@Base+0x554>)
   1df12:	ldr	r0, [pc, #184]	; (1dfcc <btrfs_create_tree@@Base+0x558>)
   1df14:	add	r2, pc
   1df16:	add	r1, pc
   1df18:	str	r3, [sp, #0]
   1df1a:	add	r0, pc
   1df1c:	movw	r3, #1502	; 0x5de
   1df20:	bl	1dd92 <btrfs_create_tree@@Base+0x31e>
   1df24:	ldr	r2, [pc, #168]	; (1dfd0 <btrfs_create_tree@@Base+0x55c>)
   1df26:	ldr	r1, [pc, #172]	; (1dfd4 <btrfs_create_tree@@Base+0x560>)
   1df28:	movs	r3, #1
   1df2a:	ldr	r0, [pc, #172]	; (1dfd8 <btrfs_create_tree@@Base+0x564>)
   1df2c:	add	r2, pc
   1df2e:	str	r3, [sp, #0]
   1df30:	add	r1, pc
   1df32:	add	r0, pc
   1df34:	movw	r3, #1518	; 0x5ee
   1df38:	bl	1dd92 <btrfs_create_tree@@Base+0x31e>
   1df3c:	b.n	1de16 <btrfs_create_tree@@Base+0x3a2>
   1df3e:	ldr	r1, [pc, #156]	; (1dfdc <btrfs_create_tree@@Base+0x568>)
   1df40:	b.n	1de34 <btrfs_create_tree@@Base+0x3c0>
   1df42:	movs	r2, #0
   1df44:	movs	r3, #0
   1df46:	b.n	1de42 <btrfs_create_tree@@Base+0x3ce>
   1df48:	add.w	r3, r5, r5, lsl #5
   1df4c:	movs	r0, #0
   1df4e:	add	r3, r4
   1df50:	movs	r1, #0
   1df52:	ldr.w	r2, [r3, #214]!
   1df56:	ldr	r3, [r3, #4]
   1df58:	strd	r0, r1, [sp, #32]
   1df5c:	ldrd	r0, r1, [sp, #64]	; 0x40
   1df60:	strd	r0, r1, [sp, #24]
   1df64:	ldr	r1, [sp, #48]	; 0x30
   1df66:	str	r1, [sp, #16]
   1df68:	ldr	r1, [sp, #52]	; 0x34
   1df6a:	str	r1, [sp, #20]
   1df6c:	ldrd	r0, r1, [sp, #40]	; 0x28
   1df70:	strd	r0, r1, [sp, #8]
   1df74:	mov	r0, r7
   1df76:	ldr.w	r1, [r6, #464]	; 0x1d0
   1df7a:	ldr.w	r1, [r1, #384]	; 0x180
   1df7e:	str	r1, [sp, #0]
   1df80:	movs	r1, #0
   1df82:	str	r1, [sp, #4]
   1df84:	mov	r1, r6
   1df86:	blx	r8
   1df88:	mov	sl, r0
   1df8a:	cbz	r0, 1dfa2 <btrfs_create_tree@@Base+0x52e>
   1df8c:	ldr	r2, [pc, #80]	; (1dfe0 <btrfs_create_tree@@Base+0x56c>)
   1df8e:	movs	r3, #1
   1df90:	ldr	r1, [pc, #80]	; (1dfe4 <btrfs_create_tree@@Base+0x570>)
   1df92:	ldr	r0, [pc, #84]	; (1dfe8 <btrfs_create_tree@@Base+0x574>)
   1df94:	add	r2, pc
   1df96:	str	r3, [sp, #0]
   1df98:	add	r1, pc
   1df9a:	add	r0, pc
   1df9c:	movw	r3, #1511	; 0x5e7
   1dfa0:	b.n	1df20 <btrfs_create_tree@@Base+0x4ac>
   1dfa2:	adds	r5, #1
   1dfa4:	b.n	1de66 <btrfs_create_tree@@Base+0x3f2>
   1dfa6:	mov	r0, sl
   1dfa8:	add	sp, #100	; 0x64
   1dfaa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dfae:	nop
   1dfb0:	ldrsh	r4, [r2, r6]
   1dfb2:	movs	r4, r0
   1dfb4:	lsls	r0, r4, #8
   1dfb6:	movs	r0, r0
   1dfb8:	ldrsh	r4, [r7, r5]
   1dfba:	movs	r4, r0
   1dfbc:	ldrsh	r2, [r5, r5]
   1dfbe:	movs	r4, r0
   1dfc0:	lsls	r4, r0, #9
   1dfc2:	movs	r0, r0
   1dfc4:	usat	r0, #1, lr
   1dfc8:	mrrc	0, 0, r0, fp, cr1
   1dfcc:	vext.8	d0, d7, d1, #0
   1dfd0:			; <UNDEFINED> instruction: 0xf3760001
   1dfd4:	mcrr	0, 0, r0, r1, cr1
   1dfd8:	vaddl.s16	q0, d15, d1
   1dfdc:	lsls	r0, r3, #9
   1dfde:	movs	r0, r0
   1dfe0:	ssat	r0, #2, lr
   1dfe4:	rsbs	r0, r9, r1
   1dfe8:	vhadd.s<illegal width 64>	d0, d7, d1
   1dfec:	push	{r0, r1, r2, r3, r4, lr}
   1dfee:	ldr	r4, [pc, #40]	; (1e018 <btrfs_create_tree@@Base+0x5a4>)
   1dff0:	ldr	r5, [pc, #40]	; (1e01c <btrfs_create_tree@@Base+0x5a8>)
   1dff2:	add	r4, pc
   1dff4:	ldr	r4, [r4, r5]
   1dff6:	ldr	r5, [sp, #24]
   1dff8:	strd	r3, r2, [sp]
   1dffc:	mov	r3, r1
   1dffe:	ldr	r2, [pc, #32]	; (1e020 <btrfs_create_tree@@Base+0x5ac>)
   1e000:	movs	r1, #1
   1e002:	strd	r0, r5, [sp, #8]
   1e006:	add	r2, pc
   1e008:	ldr	r0, [r4, #0]
   1e00a:	blx	8860 <__fprintf_chk@plt+0x4>
   1e00e:	bl	1dd34 <btrfs_create_tree@@Base+0x2c0>
   1e012:	blx	8980 <abort@plt>
   1e016:	nop
   1e018:	ldrb	r2, [r2, r6]
   1e01a:	movs	r4, r0
   1e01c:	lsls	r0, r6, #8
   1e01e:	movs	r0, r0
   1e020:	add	r6, sp, #624	; 0x270
   1e022:	movs	r1, r0
   1e024:	push	{r0, r1, r4, lr}
   1e026:	ldr	r4, [sp, #16]
   1e028:	cbz	r4, 1e030 <btrfs_create_tree@@Base+0x5bc>
   1e02a:	str	r4, [sp, #0]
   1e02c:	bl	1dfec <btrfs_create_tree@@Base+0x578>
   1e030:	add	sp, #8
   1e032:	pop	{r4, pc}
   1e034:	cmp	r0, #176	; 0xb0
   1e036:	push	{r0, r1, r2, lr}
   1e038:	beq.n	1e060 <btrfs_create_tree@@Base+0x5ec>
   1e03a:	cmp	r0, #182	; 0xb6
   1e03c:	beq.n	1e060 <btrfs_create_tree@@Base+0x5ec>
   1e03e:	cmp	r0, #184	; 0xb8
   1e040:	beq.n	1e068 <btrfs_create_tree@@Base+0x5f4>
   1e042:	cmp	r0, #178	; 0xb2
   1e044:	beq.n	1e06c <btrfs_create_tree@@Base+0x5f8>
   1e046:	ldr	r2, [pc, #40]	; (1e070 <btrfs_create_tree@@Base+0x5fc>)
   1e048:	movs	r3, #1
   1e04a:	ldr	r1, [pc, #40]	; (1e074 <btrfs_create_tree@@Base+0x600>)
   1e04c:	ldr	r0, [pc, #40]	; (1e078 <btrfs_create_tree@@Base+0x604>)
   1e04e:	add	r2, pc
   1e050:	str	r3, [sp, #0]
   1e052:	adds	r2, #16
   1e054:	add	r1, pc
   1e056:	add	r0, pc
   1e058:	movw	r3, #1818	; 0x71a
   1e05c:	bl	1dfec <btrfs_create_tree@@Base+0x578>
   1e060:	movs	r0, #9
   1e062:	add	sp, #12
   1e064:	ldr.w	pc, [sp], #4
   1e068:	movs	r0, #13
   1e06a:	b.n	1e062 <btrfs_create_tree@@Base+0x5ee>
   1e06c:	movs	r0, #29
   1e06e:	b.n	1e062 <btrfs_create_tree@@Base+0x5ee>
   1e070:			; <UNDEFINED> instruction: 0xf2540001
   1e074:			; <UNDEFINED> instruction: 0xb640
   1e076:	movs	r1, r0
   1e078:	cdp	0, 7, cr0, cr11, cr1, {0}
   1e07c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e080:	mov	r5, r3
   1e082:	vpush	{d8}
   1e086:	mov	r6, r2
   1e088:	movs	r2, #25
   1e08a:	mov	r7, r1
   1e08c:	vmov	s16, r0
   1e090:	ldr.w	fp, [r1]
   1e094:	sub	sp, #44	; 0x2c
   1e096:	ldr	r3, [r1, #32]
   1e098:	add.w	r4, fp, #96	; 0x60
   1e09c:	mla	r3, r2, r3, r4
   1e0a0:	adds	r2, r5, #1
   1e0a2:	ldr.w	r3, [r3, #118]	; 0x76
   1e0a6:	add.w	r3, r3, #101	; 0x65
   1e0aa:	str	r3, [sp, #12]
   1e0ac:	add.w	r8, r4, r3
   1e0b0:	ldr.w	r9, [r4, r3]
   1e0b4:	ldr.w	sl, [r8, #4]
   1e0b8:	bne.n	1e130 <btrfs_create_tree@@Base+0x6bc>
   1e0ba:	cmp.w	sl, #0
   1e0be:	itte	eq
   1e0c0:	cmpeq.w	r9, #1
   1e0c4:	moveq	r3, #1
   1e0c6:	movne	r3, #0
   1e0c8:	ldr	r2, [pc, #336]	; (1e21c <btrfs_create_tree@@Base+0x7a8>)
   1e0ca:	ldr	r1, [pc, #340]	; (1e220 <btrfs_create_tree@@Base+0x7ac>)
   1e0cc:	ldr	r0, [pc, #340]	; (1e224 <btrfs_create_tree@@Base+0x7b0>)
   1e0ce:	add	r2, pc
   1e0d0:	adds	r2, #45	; 0x2d
   1e0d2:	add	r1, pc
   1e0d4:	str	r3, [sp, #0]
   1e0d6:	add	r0, pc
   1e0d8:	movw	r3, #1129	; 0x469
   1e0dc:	strd	r1, r2, [sp, #16]
   1e0e0:	bl	1ddcc <btrfs_create_tree@@Base+0x358>
   1e0e4:	asrs	r3, r5, #31
   1e0e6:	mov	r2, r5
   1e0e8:	strd	r2, r3, [sp, #32]
   1e0ec:	ldr	r3, [sp, #12]
   1e0ee:	adds.w	r9, r9, r5
   1e0f2:	adc.w	sl, sl, r5, asr #31
   1e0f6:	ldrd	r1, r2, [sp, #16]
   1e0fa:	str.w	r9, [r4, r3]
   1e0fe:	str.w	sl, [r8, #4]
   1e102:	ldrb.w	sl, [r4, r6]
   1e106:	cmp.w	sl, #178	; 0xb2
   1e10a:	bne.n	1e134 <btrfs_create_tree@@Base+0x6c0>
   1e10c:	add.w	r9, r6, #1
   1e110:	add.w	r3, r4, r9
   1e114:	ldr	r3, [r3, #24]
   1e116:	str	r3, [sp, #16]
   1e118:	movs	r3, #0
   1e11a:	mov	r8, r3
   1e11c:	str	r3, [sp, #20]
   1e11e:	adds	r5, #1
   1e120:	bne.n	1e1c4 <btrfs_create_tree@@Base+0x750>
   1e122:	ldrd	r3, r2, [sp, #16]
   1e126:	orrs	r3, r2
   1e128:	ite	eq
   1e12a:	moveq	r3, #1
   1e12c:	movne	r3, #0
   1e12e:	b.n	1e170 <btrfs_create_tree@@Base+0x6fc>
   1e130:	movs	r3, #0
   1e132:	b.n	1e0c8 <btrfs_create_tree@@Base+0x654>
   1e134:	cmp.w	sl, #184	; 0xb8
   1e138:	bne.n	1e14c <btrfs_create_tree@@Base+0x6d8>
   1e13a:	add.w	r8, r6, #9
   1e13e:	ldr.w	r3, [r4, r8]
   1e142:	str	r3, [sp, #16]
   1e144:	movs	r3, #0
   1e146:	mov	r9, r3
   1e148:	str	r3, [sp, #20]
   1e14a:	b.n	1e11e <btrfs_create_tree@@Base+0x6aa>
   1e14c:	adds	r5, #1
   1e14e:	ldr	r0, [pc, #216]	; (1e228 <btrfs_create_tree@@Base+0x7b4>)
   1e150:	mov.w	r8, #0
   1e154:	movw	r3, #1143	; 0x477
   1e158:	it	ne
   1e15a:	movne	r5, #1
   1e15c:	add	r0, pc
   1e15e:	str	r5, [sp, #0]
   1e160:	mov	r9, r8
   1e162:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1e166:	movs	r3, #1
   1e168:	str	r3, [sp, #16]
   1e16a:	mov	r3, r8
   1e16c:	str.w	r8, [sp, #20]
   1e170:	ldr	r2, [pc, #184]	; (1e22c <btrfs_create_tree@@Base+0x7b8>)
   1e172:	ldr	r1, [pc, #188]	; (1e230 <btrfs_create_tree@@Base+0x7bc>)
   1e174:	ldr	r0, [pc, #188]	; (1e234 <btrfs_create_tree@@Base+0x7c0>)
   1e176:	add	r2, pc
   1e178:	adds	r2, #45	; 0x2d
   1e17a:	str	r3, [sp, #0]
   1e17c:	add	r1, pc
   1e17e:	movw	r3, #1146	; 0x47a
   1e182:	add	r0, pc
   1e184:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1e188:	ldr	r2, [sp, #16]
   1e18a:	ldr	r3, [sp, #32]
   1e18c:	adds	r3, r3, r2
   1e18e:	ldr	r2, [sp, #36]	; 0x24
   1e190:	str	r3, [sp, #24]
   1e192:	ldr	r3, [sp, #20]
   1e194:	adc.w	r3, r2, r3
   1e198:	str	r3, [sp, #28]
   1e19a:	ldrd	r2, r3, [sp, #24]
   1e19e:	orrs	r3, r2
   1e1a0:	beq.n	1e1c8 <btrfs_create_tree@@Base+0x754>
   1e1a2:	cmp.w	sl, #178	; 0xb2
   1e1a6:	ldr	r3, [sp, #24]
   1e1a8:	itet	eq
   1e1aa:	addeq	r4, r9
   1e1ac:	strne.w	r3, [r4, r8]
   1e1b0:	streq	r3, [r4, #24]
   1e1b2:	mov	r0, fp
   1e1b4:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   1e1b8:	movs	r0, #0
   1e1ba:	add	sp, #44	; 0x2c
   1e1bc:	vpop	{d8}
   1e1c0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e1c4:	movs	r3, #0
   1e1c6:	b.n	1e170 <btrfs_create_tree@@Base+0x6fc>
   1e1c8:	mov	r0, sl
   1e1ca:	bl	1e034 <btrfs_create_tree@@Base+0x5c0>
   1e1ce:	ldr	r3, [r7, #32]
   1e1d0:	movs	r2, #25
   1e1d2:	mla	r4, r2, r3, r4
   1e1d6:	ldr	r3, [sp, #12]
   1e1d8:	ldr.w	r4, [r4, #122]	; 0x7a
   1e1dc:	add	r3, r4
   1e1de:	adds	r2, r6, r0
   1e1e0:	mov	r5, r0
   1e1e2:	cmp	r3, r2
   1e1e4:	bls.n	1e1f2 <btrfs_create_tree@@Base+0x77e>
   1e1e6:	subs	r3, r3, r6
   1e1e8:	mov	r1, r6
   1e1ea:	subs	r3, r3, r0
   1e1ec:	mov	r0, fp
   1e1ee:	bl	16a80 <memmove_extent_buffer@@Base>
   1e1f2:	subs	r2, r4, r5
   1e1f4:	mov	r1, r7
   1e1f6:	vmov	r0, s16
   1e1fa:	movs	r3, #1
   1e1fc:	bl	19570 <btrfs_truncate_item@@Base>
   1e200:	ldr	r2, [pc, #52]	; (1e238 <btrfs_create_tree@@Base+0x7c4>)
   1e202:	ldr	r1, [pc, #56]	; (1e23c <btrfs_create_tree@@Base+0x7c8>)
   1e204:	movw	r3, #1164	; 0x48c
   1e208:	add	r2, pc
   1e20a:	adds	r2, #45	; 0x2d
   1e20c:	add	r1, pc
   1e20e:	str	r0, [sp, #0]
   1e210:	ldr	r0, [pc, #44]	; (1e240 <btrfs_create_tree@@Base+0x7cc>)
   1e212:	add	r0, pc
   1e214:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1e218:	b.n	1e1b2 <btrfs_create_tree@@Base+0x73e>
   1e21a:	nop
   1e21c:	rsbs	r0, r4, #1
   1e220:	eors.w	r0, pc, r1
   1e224:			; <UNDEFINED> instruction: 0xeaa90001
   1e228:	orr.w	r0, lr, r1
   1e22c:			; <UNDEFINED> instruction: 0xf12c0001
   1e230:	ldrd	r0, r0, [r5, #4]!
   1e234:	bics.w	r0, sl, r1
   1e238:	eors.w	r0, sl, #1
   1e23c:	strd	r0, r0, [r5, #-4]!
   1e240:	uxtb	r2, r2
   1e242:	movs	r1, r0
   1e244:	push	{r4, r5, r6, r7, lr}
   1e246:	mov	r7, r2
   1e248:	ldr	r2, [pc, #132]	; (1e2d0 <btrfs_create_tree@@Base+0x85c>)
   1e24a:	mov	r4, r3
   1e24c:	ldr	r3, [pc, #132]	; (1e2d4 <btrfs_create_tree@@Base+0x860>)
   1e24e:	sub	sp, #36	; 0x24
   1e250:	add	r2, pc
   1e252:	mov	r5, r1
   1e254:	mov	r6, r0
   1e256:	ldr	r0, [r5, #0]
   1e258:	ldr	r3, [r2, r3]
   1e25a:	ldr	r2, [r1, #32]
   1e25c:	add	r1, sp, #8
   1e25e:	ldr	r3, [r3, #0]
   1e260:	str	r3, [sp, #28]
   1e262:	mov.w	r3, #0
   1e266:	bl	1dccc <btrfs_create_tree@@Base+0x258>
   1e26a:	ldrb.w	r5, [sp, #16]
   1e26e:	movw	r3, #3377	; 0xd31
   1e272:	ldr	r2, [pc, #100]	; (1e2d8 <btrfs_create_tree@@Base+0x864>)
   1e274:	add.w	r1, r5, #88	; 0x58
   1e278:	ldr	r0, [pc, #96]	; (1e2dc <btrfs_create_tree@@Base+0x868>)
   1e27a:	add	r2, pc
   1e27c:	uxtb	r1, r1
   1e27e:	adds	r2, #74	; 0x4a
   1e280:	cmp	r1, #1
   1e282:	add	r0, pc
   1e284:	ite	ls
   1e286:	movls	r1, #0
   1e288:	movhi	r1, #1
   1e28a:	str	r1, [sp, #0]
   1e28c:	ldr	r1, [pc, #80]	; (1e2e0 <btrfs_create_tree@@Base+0x86c>)
   1e28e:	add	r1, pc
   1e290:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1e294:	ldrd	r2, r3, [sp, #8]
   1e298:	cmp	r5, #168	; 0xa8
   1e29a:	strd	r2, r3, [r7]
   1e29e:	iteet	ne
   1e2a0:	ldrne	r3, [r6, #0]
   1e2a2:	ldreq.w	r2, [sp, #17]
   1e2a6:	ldreq.w	r3, [sp, #21]
   1e2aa:	ldrne.w	r2, [r3, #384]	; 0x180
   1e2ae:	it	ne
   1e2b0:	movne	r3, #0
   1e2b2:	strd	r2, r3, [r4]
   1e2b6:	ldr	r2, [pc, #44]	; (1e2e4 <btrfs_create_tree@@Base+0x870>)
   1e2b8:	ldr	r3, [pc, #24]	; (1e2d4 <btrfs_create_tree@@Base+0x860>)
   1e2ba:	add	r2, pc
   1e2bc:	ldr	r3, [r2, r3]
   1e2be:	ldr	r2, [r3, #0]
   1e2c0:	ldr	r3, [sp, #28]
   1e2c2:	eors	r2, r3
   1e2c4:	beq.n	1e2ca <btrfs_create_tree@@Base+0x856>
   1e2c6:	blx	8510 <__stack_chk_fail@plt>
   1e2ca:	add	sp, #36	; 0x24
   1e2cc:	pop	{r4, r5, r6, r7, pc}
   1e2ce:	nop
   1e2d0:	ldrh	r4, [r6, r4]
   1e2d2:	movs	r4, r0
   1e2d4:	lsls	r0, r4, #8
   1e2d6:	movs	r0, r0
   1e2d8:	bic.w	r0, r8, #1
   1e2dc:	strd	r0, r0, [r1, #-4]!
   1e2e0:	strd	r0, r0, [r3], #4
   1e2e4:	ldrh	r2, [r1, r3]
   1e2e6:	movs	r4, r0
   1e2e8:	push	{r0, r1, r2, r3, r4, r6, r7, lr}
   1e2ea:	mov	r4, r0
   1e2ec:	ldrd	r0, r3, [r0, #48]	; 0x30
   1e2f0:	ldr	r2, [pc, #140]	; (1e380 <btrfs_create_tree@@Base+0x90c>)
   1e2f2:	orrs	r3, r0
   1e2f4:	ldr	r1, [pc, #140]	; (1e384 <btrfs_create_tree@@Base+0x910>)
   1e2f6:	ldr	r0, [pc, #144]	; (1e388 <btrfs_create_tree@@Base+0x914>)
   1e2f8:	add	r2, pc
   1e2fa:	ite	eq
   1e2fc:	moveq	r3, #1
   1e2fe:	movne	r3, #0
   1e300:	adds	r2, #92	; 0x5c
   1e302:	add	r1, pc
   1e304:	add	r0, pc
   1e306:	str	r3, [sp, #0]
   1e308:	movs	r3, #163	; 0xa3
   1e30a:	strd	r1, r2, [sp, #8]
   1e30e:	bl	1ddcc <btrfs_create_tree@@Base+0x358>
   1e312:	ldrd	r3, r0, [r4, #48]	; 0x30
   1e316:	ldrd	r1, r2, [sp, #8]
   1e31a:	adds.w	r6, r3, #4294967295	; 0xffffffff
   1e31e:	adc.w	r7, r0, #4294967295	; 0xffffffff
   1e322:	strd	r6, r7, [r4, #48]	; 0x30
   1e326:	orrs.w	r3, r6, r7
   1e32a:	bne.n	1e37c <btrfs_create_tree@@Base+0x908>
   1e32c:	ldrb.w	r3, [r4, #62]	; 0x3e
   1e330:	ldr	r0, [pc, #88]	; (1e38c <btrfs_create_tree@@Base+0x918>)
   1e332:	ubfx	r3, r3, #1, #1
   1e336:	str	r3, [sp, #0]
   1e338:	add	r0, pc
   1e33a:	movs	r3, #165	; 0xa5
   1e33c:	bl	1ddcc <btrfs_create_tree@@Base+0x358>
   1e340:	ldrb.w	r3, [r4, #61]	; 0x3d
   1e344:	subs	r3, #176	; 0xb0
   1e346:	cmp	r3, #8
   1e348:	bhi.n	1e364 <btrfs_create_tree@@Base+0x8f0>
   1e34a:	tbb	[pc, r3]
   1e34e:	lsrs	r5, r0, #12
   1e350:	lsrs	r5, r0, #12
   1e352:	lsrs	r3, r1, #12
   1e354:	lsrs	r5, r0, #12
   1e356:	movs	r5, r0
   1e358:	mov	r0, r4
   1e35a:	add	sp, #16
   1e35c:	ldmia.w	sp!, {r4, r6, r7, lr}
   1e360:	b.w	8430 <free@plt>
   1e364:	ldr	r2, [pc, #40]	; (1e390 <btrfs_create_tree@@Base+0x91c>)
   1e366:	movs	r3, #1
   1e368:	ldr	r1, [pc, #40]	; (1e394 <btrfs_create_tree@@Base+0x920>)
   1e36a:	ldr	r0, [pc, #44]	; (1e398 <btrfs_create_tree@@Base+0x924>)
   1e36c:	add	r2, pc
   1e36e:	str	r3, [sp, #0]
   1e370:	adds	r2, #92	; 0x5c
   1e372:	add	r1, pc
   1e374:	add	r0, pc
   1e376:	movs	r3, #176	; 0xb0
   1e378:	bl	1dfec <btrfs_create_tree@@Base+0x578>
   1e37c:	add	sp, #16
   1e37e:	pop	{r4, r6, r7, pc}
   1e380:	vaddl.s32	q0, d10, d1
   1e384:	stmdb	sp!, {r0}
   1e388:	ldmdb	r9!, {r0}
   1e38c:	ldmdb	r4, {r0}
   1e390:	vhadd.s<illegal width 64>	d0, d6, d1
   1e394:	ldmia.w	sp!, {r0}
   1e398:	adcs.w	r0, sp, r1
   1e39c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e3a0:	mov	r4, r2
   1e3a2:	ldr	r2, [pc, #288]	; (1e4c4 <btrfs_create_tree@@Base+0xa50>)
   1e3a4:	mov	r5, r3
   1e3a6:	ldr	r3, [pc, #288]	; (1e4c8 <btrfs_create_tree@@Base+0xa54>)
   1e3a8:	sub	sp, #36	; 0x24
   1e3aa:	add	r2, pc
   1e3ac:	ldr.w	r9, [pc, #284]	; 1e4cc <btrfs_create_tree@@Base+0xa58>
   1e3b0:	ldr.w	sl, [pc, #284]	; 1e4d0 <btrfs_create_tree@@Base+0xa5c>
   1e3b4:	mov	r8, r0
   1e3b6:	ldr	r3, [r2, r3]
   1e3b8:	add	r9, pc
   1e3ba:	ldr	r0, [pc, #280]	; (1e4d4 <btrfs_create_tree@@Base+0xa60>)
   1e3bc:	add	sl, pc
   1e3be:	ldr	r3, [r3, #0]
   1e3c0:	str	r3, [sp, #28]
   1e3c2:	mov.w	r3, #0
   1e3c6:	mov	r6, r1
   1e3c8:	movs	r3, #0
   1e3ca:	str	r3, [sp, #0]
   1e3cc:	add.w	r2, sl, #114	; 0x72
   1e3d0:	add	r0, pc
   1e3d2:	movw	r3, #1223	; 0x4c7
   1e3d6:	mov	r1, r9
   1e3d8:	ldr	r7, [sp, #72]	; 0x48
   1e3da:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1e3de:	cbz	r5, 1e402 <btrfs_create_tree@@Base+0x98e>
   1e3e0:	mov.w	r3, #4294967295	; 0xffffffff
   1e3e4:	mov	r2, r5
   1e3e6:	mov	r1, r4
   1e3e8:	mov	r0, r6
   1e3ea:	bl	1e07c <btrfs_create_tree@@Base+0x608>
   1e3ee:	ldr	r2, [pc, #232]	; (1e4d8 <btrfs_create_tree@@Base+0xa64>)
   1e3f0:	ldr	r3, [pc, #212]	; (1e4c8 <btrfs_create_tree@@Base+0xa54>)
   1e3f2:	add	r2, pc
   1e3f4:	ldr	r3, [r2, r3]
   1e3f6:	ldr	r2, [r3, #0]
   1e3f8:	ldr	r3, [sp, #28]
   1e3fa:	eors	r2, r3
   1e3fc:	beq.n	1e4bc <btrfs_create_tree@@Base+0xa48>
   1e3fe:	blx	8510 <__stack_chk_fail@plt>
   1e402:	cbz	r7, 1e45a <btrfs_create_tree@@Base+0x9e6>
   1e404:	ldr	r7, [r4, #0]
   1e406:	add	r1, sp, #8
   1e408:	ldr	r2, [r4, #32]
   1e40a:	mov	r0, r7
   1e40c:	bl	1dccc <btrfs_create_tree@@Base+0x258>
   1e410:	ldrb.w	fp, [sp, #16]
   1e414:	add.w	r3, r7, #96	; 0x60
   1e418:	cmp.w	fp, #178	; 0xb2
   1e41c:	bne.n	1e466 <btrfs_create_tree@@Base+0x9f2>
   1e41e:	ldr	r2, [r4, #32]
   1e420:	movs	r1, #25
   1e422:	mov	r9, r5
   1e424:	mla	r2, r1, r2, r3
   1e428:	ldr.w	r2, [r2, #118]	; 0x76
   1e42c:	adds	r2, #101	; 0x65
   1e42e:	add	r3, r2
   1e430:	mov	r5, r2
   1e432:	ldr.w	sl, [r3, #24]
   1e436:	ldr	r2, [pc, #164]	; (1e4dc <btrfs_create_tree@@Base+0xa68>)
   1e438:	clz	r3, sl
   1e43c:	ldr	r1, [pc, #160]	; (1e4e0 <btrfs_create_tree@@Base+0xa6c>)
   1e43e:	ldr	r0, [pc, #164]	; (1e4e4 <btrfs_create_tree@@Base+0xa70>)
   1e440:	add	r2, pc
   1e442:	lsrs	r3, r3, #5
   1e444:	adds	r2, #136	; 0x88
   1e446:	str	r3, [sp, #0]
   1e448:	add	r1, pc
   1e44a:	add	r0, pc
   1e44c:	movw	r3, #733	; 0x2dd
   1e450:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1e454:	subs.w	sl, sl, #1
   1e458:	bne.n	1e498 <btrfs_create_tree@@Base+0xa24>
   1e45a:	mov	r2, r4
   1e45c:	mov	r1, r6
   1e45e:	mov	r0, r8
   1e460:	bl	1dd80 <btrfs_create_tree@@Base+0x30c>
   1e464:	b.n	1e3ee <btrfs_create_tree@@Base+0x97a>
   1e466:	cmp.w	fp, #184	; 0xb8
   1e46a:	bne.n	1e482 <btrfs_create_tree@@Base+0xa0e>
   1e46c:	ldr	r2, [r4, #32]
   1e46e:	movs	r1, #25
   1e470:	mla	r2, r1, r2, r3
   1e474:	ldr.w	r9, [r2, #118]	; 0x76
   1e478:	add.w	r9, r9, #101	; 0x65
   1e47c:	ldr.w	sl, [r3, r9]
   1e480:	b.n	1e436 <btrfs_create_tree@@Base+0x9c2>
   1e482:	ldr	r0, [pc, #100]	; (1e4e8 <btrfs_create_tree@@Base+0xa74>)
   1e484:	movs	r3, #1
   1e486:	add.w	r2, sl, #136	; 0x88
   1e48a:	str	r3, [sp, #0]
   1e48c:	add	r0, pc
   1e48e:	movw	r3, #730	; 0x2da
   1e492:	mov	r1, r9
   1e494:	bl	1dfec <btrfs_create_tree@@Base+0x578>
   1e498:	cmp.w	fp, #178	; 0xb2
   1e49c:	bne.n	1e4ae <btrfs_create_tree@@Base+0xa3a>
   1e49e:	add	r5, r7
   1e4a0:	str.w	sl, [r5, #120]	; 0x78
   1e4a4:	mov	r0, r7
   1e4a6:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   1e4aa:	movs	r0, #0
   1e4ac:	b.n	1e3ee <btrfs_create_tree@@Base+0x97a>
   1e4ae:	cmp.w	fp, #184	; 0xb8
   1e4b2:	itt	eq
   1e4b4:	addeq	r9, r7
   1e4b6:	streq.w	sl, [r9, #96]	; 0x60
   1e4ba:	b.n	1e4a4 <btrfs_create_tree@@Base+0xa30>
   1e4bc:	add	sp, #36	; 0x24
   1e4be:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e4c2:	nop
   1e4c4:	ldr	r2, [r3, r7]
   1e4c6:	movs	r4, r0
   1e4c8:	lsls	r0, r4, #8
   1e4ca:	movs	r0, r0
   1e4cc:	b.n	1e442 <btrfs_create_tree@@Base+0x9ce>
   1e4ce:	movs	r1, r0
   1e4d0:	cdp	0, 14, cr0, cr6, cr1, {0}
   1e4d4:	stmia.w	r9, {r0}
   1e4d8:	ldr	r2, [r2, r6]
   1e4da:	movs	r4, r0
   1e4dc:	cdp	0, 6, cr0, cr2, cr1, {0}
   1e4e0:	b.n	1e336 <btrfs_create_tree@@Base+0x8c2>
   1e4e2:	movs	r1, r0
   1e4e4:			; <UNDEFINED> instruction: 0xe82d0001
   1e4e8:	orr.w	r0, r5, r1
   1e4ec:	push	{r0, r1, r2, r3, r4, lr}
   1e4ee:	ldr	r3, [pc, #40]	; (1e518 <btrfs_create_tree@@Base+0xaa4>)
   1e4f0:	ldr	r4, [pc, #40]	; (1e51c <btrfs_create_tree@@Base+0xaa8>)
   1e4f2:	add	r3, pc
   1e4f4:	ldr	r4, [r3, r4]
   1e4f6:	movs	r3, #0
   1e4f8:	strd	r2, r1, [sp]
   1e4fc:	movs	r1, #1
   1e4fe:	strd	r0, r3, [sp, #8]
   1e502:	ldr	r2, [pc, #28]	; (1e520 <btrfs_create_tree@@Base+0xaac>)
   1e504:	ldr	r3, [pc, #28]	; (1e524 <btrfs_create_tree@@Base+0xab0>)
   1e506:	add	r2, pc
   1e508:	ldr	r0, [r4, #0]
   1e50a:	add	r3, pc
   1e50c:	blx	8860 <__fprintf_chk@plt+0x4>
   1e510:	bl	1dd34 <btrfs_create_tree@@Base+0x2c0>
   1e514:	blx	8980 <abort@plt>
   1e518:	ldr	r2, [r2, r2]
   1e51a:	movs	r4, r0
   1e51c:	lsls	r0, r6, #8
   1e51e:	movs	r0, r0
   1e520:	add	r2, sp, #804	; 0x324
   1e522:	movs	r1, r0
   1e524:	b.n	1e1f6 <btrfs_create_tree@@Base+0x782>
   1e526:	movs	r1, r0

0001e528 <btrfs_lookup_first_block_group@@Base>:
   1e528:	push	{r4, r5, r6, lr}
   1e52a:	cmp	r3, #0
   1e52c:	ldr	r4, [pc, #112]	; (1e5a0 <btrfs_lookup_first_block_group@@Base+0x78>)
   1e52e:	it	eq
   1e530:	cmpeq.w	r2, #69632	; 0x11000
   1e534:	ldr	r1, [pc, #108]	; (1e5a4 <btrfs_lookup_first_block_group@@Base+0x7c>)
   1e536:	sub	sp, #48	; 0x30
   1e538:	add	r4, pc
   1e53a:	add.w	r6, r0, #128	; 0x80
   1e53e:	mov	r5, r3
   1e540:	it	cc
   1e542:	movcc	r5, #0
   1e544:	ldr	r1, [r4, r1]
   1e546:	mov	r4, r2
   1e548:	it	cc
   1e54a:	movcc.w	r4, #69632	; 0x11000
   1e54e:	movs	r3, #22
   1e550:	ldr	r1, [r1, #0]
   1e552:	str	r1, [sp, #44]	; 0x2c
   1e554:	mov.w	r1, #0
   1e558:	mov	r2, r4
   1e55a:	str	r3, [sp, #8]
   1e55c:	mov	r0, r6
   1e55e:	add	r3, sp, #32
   1e560:	str	r3, [sp, #4]
   1e562:	add	r3, sp, #24
   1e564:	str	r3, [sp, #0]
   1e566:	mov	r3, r5
   1e568:	bl	1620c <find_first_extent_bit@@Base>
   1e56c:	cbz	r0, 1e584 <btrfs_lookup_first_block_group@@Base+0x5c>
   1e56e:	movs	r0, #0
   1e570:	ldr	r2, [pc, #52]	; (1e5a8 <btrfs_lookup_first_block_group@@Base+0x80>)
   1e572:	ldr	r3, [pc, #48]	; (1e5a4 <btrfs_lookup_first_block_group@@Base+0x7c>)
   1e574:	add	r2, pc
   1e576:	ldr	r3, [r2, r3]
   1e578:	ldr	r2, [r3, #0]
   1e57a:	ldr	r3, [sp, #44]	; 0x2c
   1e57c:	eors	r2, r3
   1e57e:	beq.n	1e59a <btrfs_lookup_first_block_group@@Base+0x72>
   1e580:	blx	8510 <__stack_chk_fail@plt>
   1e584:	add	r3, sp, #16
   1e586:	mov	r0, r6
   1e588:	str	r3, [sp, #0]
   1e58a:	ldrd	r2, r3, [sp, #24]
   1e58e:	bl	162e8 <get_state_private@@Base>
   1e592:	cmp	r0, #0
   1e594:	bne.n	1e56e <btrfs_lookup_first_block_group@@Base+0x46>
   1e596:	ldr	r0, [sp, #16]
   1e598:	b.n	1e570 <btrfs_lookup_first_block_group@@Base+0x48>
   1e59a:	add	sp, #48	; 0x30
   1e59c:	pop	{r4, r5, r6, pc}
   1e59e:	nop
   1e5a0:	ldr	r4, [r1, r1]
   1e5a2:	movs	r4, r0
   1e5a4:	lsls	r0, r4, #8
   1e5a6:	movs	r0, r0
   1e5a8:	ldr	r0, [r2, r0]
   1e5aa:	movs	r4, r0

0001e5ac <btrfs_lookup_block_group@@Base>:
   1e5ac:	ldr.w	ip, [pc, #136]	; 1e638 <btrfs_lookup_block_group@@Base+0x8c>
   1e5b0:	ldr	r1, [pc, #136]	; (1e63c <btrfs_lookup_block_group@@Base+0x90>)
   1e5b2:	add	ip, pc
   1e5b4:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1e5b8:	add.w	r8, r0, #128	; 0x80
   1e5bc:	sub	sp, #48	; 0x30
   1e5be:	ldr.w	r1, [ip, r1]
   1e5c2:	mov	r0, r8
   1e5c4:	mov	r4, r2
   1e5c6:	ldr	r1, [r1, #0]
   1e5c8:	str	r1, [sp, #44]	; 0x2c
   1e5ca:	mov.w	r1, #0
   1e5ce:	movs	r1, #22
   1e5d0:	str	r1, [sp, #8]
   1e5d2:	add	r1, sp, #32
   1e5d4:	str	r1, [sp, #4]
   1e5d6:	add	r1, sp, #24
   1e5d8:	str	r1, [sp, #0]
   1e5da:	mov	r5, r3
   1e5dc:	bl	1620c <find_first_extent_bit@@Base>
   1e5e0:	cbz	r0, 1e5f8 <btrfs_lookup_block_group@@Base+0x4c>
   1e5e2:	movs	r0, #0
   1e5e4:	ldr	r2, [pc, #88]	; (1e640 <btrfs_lookup_block_group@@Base+0x94>)
   1e5e6:	ldr	r3, [pc, #84]	; (1e63c <btrfs_lookup_block_group@@Base+0x90>)
   1e5e8:	add	r2, pc
   1e5ea:	ldr	r3, [r2, r3]
   1e5ec:	ldr	r2, [r3, #0]
   1e5ee:	ldr	r3, [sp, #44]	; 0x2c
   1e5f0:	eors	r2, r3
   1e5f2:	beq.n	1e630 <btrfs_lookup_block_group@@Base+0x84>
   1e5f4:	blx	8510 <__stack_chk_fail@plt>
   1e5f8:	add	r3, sp, #16
   1e5fa:	mov	r0, r8
   1e5fc:	str	r3, [sp, #0]
   1e5fe:	ldrd	r2, r3, [sp, #24]
   1e602:	bl	162e8 <get_state_private@@Base>
   1e606:	cmp	r0, #0
   1e608:	bne.n	1e5e2 <btrfs_lookup_block_group@@Base+0x36>
   1e60a:	ldr	r0, [sp, #16]
   1e60c:	ldrd	r2, r3, [r0, #40]	; 0x28
   1e610:	cmp	r5, r3
   1e612:	it	eq
   1e614:	cmpeq	r4, r2
   1e616:	bcc.n	1e5e2 <btrfs_lookup_block_group@@Base+0x36>
   1e618:	ldr.w	r1, [r0, #49]	; 0x31
   1e61c:	ldr.w	ip, [r0, #53]	; 0x35
   1e620:	adds	r6, r1, r2
   1e622:	adc.w	r7, ip, r3
   1e626:	cmp	r5, r7
   1e628:	it	eq
   1e62a:	cmpeq	r4, r6
   1e62c:	bcc.n	1e5e4 <btrfs_lookup_block_group@@Base+0x38>
   1e62e:	b.n	1e5e2 <btrfs_lookup_block_group@@Base+0x36>
   1e630:	add	sp, #48	; 0x30
   1e632:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1e636:	nop
   1e638:	ldrsb	r2, [r2, r7]
   1e63a:	movs	r4, r0
   1e63c:	lsls	r0, r4, #8
   1e63e:	movs	r0, r0
   1e640:	ldrsb	r4, [r3, r6]
   1e642:	movs	r4, r0
   1e644:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e648:	mov	r8, r0
   1e64a:	ldrd	r6, r7, [sp, #48]	; 0x30
   1e64e:	adds	r0, #160	; 0xa0
   1e650:	ldr.w	sl, [sp, #56]	; 0x38
   1e654:	mov	r9, r2
   1e656:	adds.w	r1, r6, #4294967295	; 0xffffffff
   1e65a:	mov	fp, r3
   1e65c:	adc.w	ip, r7, #4294967295	; 0xffffffff
   1e660:	adds	r1, r1, r2
   1e662:	adc.w	ip, ip, r3
   1e666:	strd	r1, ip, [sp]
   1e66a:	cmp.w	sl, #0
   1e66e:	beq.n	1e682 <btrfs_lookup_block_group@@Base+0xd6>
   1e670:	bl	161dc <set_extent_dirty@@Base>
   1e674:	orrs.w	r3, r6, r7
   1e678:	bne.n	1e688 <btrfs_lookup_block_group@@Base+0xdc>
   1e67a:	movs	r0, #0
   1e67c:	add	sp, #12
   1e67e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e682:	bl	161f4 <clear_extent_dirty@@Base>
   1e686:	b.n	1e674 <btrfs_lookup_block_group@@Base+0xc8>
   1e688:	mov	r2, r9
   1e68a:	mov	r3, fp
   1e68c:	mov	r0, r8
   1e68e:	bl	1e5ac <btrfs_lookup_block_group@@Base>
   1e692:	cbnz	r0, 1e6b6 <btrfs_lookup_block_group@@Base+0x10a>
   1e694:	ldr.w	r4, [r8, #388]	; 0x184
   1e698:	cmp	r7, r0
   1e69a:	mov	r5, r0
   1e69c:	it	eq
   1e69e:	cmpeq	r6, r4
   1e6a0:	bcs.n	1e6a6 <btrfs_lookup_block_group@@Base+0xfa>
   1e6a2:	mov	r4, r6
   1e6a4:	mov	r5, r7
   1e6a6:	adds.w	r9, r9, r4
   1e6aa:	adc.w	fp, fp, r5
   1e6ae:	subs	r6, r6, r4
   1e6b0:	sbc.w	r7, r7, r5
   1e6b4:	b.n	1e674 <btrfs_lookup_block_group@@Base+0xc8>
   1e6b6:	ldr.w	r1, [r0, #49]	; 0x31
   1e6ba:	ldrd	r3, r2, [r0, #40]	; 0x28
   1e6be:	ldr.w	ip, [r0, #53]	; 0x35
   1e6c2:	adds	r3, r1, r3
   1e6c4:	adc.w	r2, ip, r2
   1e6c8:	subs.w	r4, r3, r9
   1e6cc:	sbc.w	r5, r2, fp
   1e6d0:	ldrd	r3, r1, [r0, #88]	; 0x58
   1e6d4:	cmp	r7, r5
   1e6d6:	ldr	r2, [r0, #60]	; 0x3c
   1e6d8:	it	eq
   1e6da:	cmpeq	r6, r4
   1e6dc:	itt	cc
   1e6de:	movcc	r4, r6
   1e6e0:	movcc	r5, r7
   1e6e2:	cmp.w	sl, #0
   1e6e6:	beq.n	1e710 <btrfs_lookup_block_group@@Base+0x164>
   1e6e8:	adds	r3, r3, r4
   1e6ea:	adc.w	r1, r5, r1
   1e6ee:	strd	r3, r1, [r0, #88]	; 0x58
   1e6f2:	ldrd	r3, r1, [r2, #24]
   1e6f6:	adds	r3, r3, r4
   1e6f8:	adc.w	r1, r5, r1
   1e6fc:	strd	r3, r1, [r2, #24]
   1e700:	ldrd	r3, r2, [r8, #328]	; 0x148
   1e704:	adds	r3, r3, r4
   1e706:	adc.w	r2, r5, r2
   1e70a:	strd	r3, r2, [r8, #328]	; 0x148
   1e70e:	b.n	1e6a6 <btrfs_lookup_block_group@@Base+0xfa>
   1e710:	subs	r3, r3, r4
   1e712:	sbc.w	r1, r1, r5
   1e716:	strd	r3, r1, [r0, #88]	; 0x58
   1e71a:	ldrd	r3, r1, [r2, #24]
   1e71e:	subs	r3, r3, r4
   1e720:	sbc.w	r1, r1, r5
   1e724:	strd	r3, r1, [r2, #24]
   1e728:	ldrd	r3, r2, [r8, #328]	; 0x148
   1e72c:	subs	r3, r3, r4
   1e72e:	sbc.w	r2, r2, r5
   1e732:	b.n	1e70a <btrfs_lookup_block_group@@Base+0x15e>
   1e734:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e738:	mov	r9, r0
   1e73a:	vpush	{d8}
   1e73e:	mov	r7, r2
   1e740:	mov	r8, r3
   1e742:	sub	sp, #28
   1e744:	ldr.w	r1, [r0, #308]	; 0x134
   1e748:	ldr	r0, [sp, #80]	; 0x50
   1e74a:	ldr	r3, [r1, #120]	; 0x78
   1e74c:	ldr	r2, [r1, #124]	; 0x7c
   1e74e:	cbz	r0, 1e784 <btrfs_lookup_block_group@@Base+0x1d8>
   1e750:	ldr	r0, [sp, #72]	; 0x48
   1e752:	adds	r3, r0, r3
   1e754:	ldr	r0, [sp, #76]	; 0x4c
   1e756:	adc.w	r2, r0, r2
   1e75a:	str	r3, [r1, #120]	; 0x78
   1e75c:	ldr	r3, [pc, #332]	; (1e8ac <btrfs_lookup_block_group@@Base+0x300>)
   1e75e:	str	r2, [r1, #124]	; 0x7c
   1e760:	add	r3, pc
   1e762:	adds	r3, #159	; 0x9f
   1e764:	vmov	s16, r3
   1e768:	ldr	r3, [pc, #324]	; (1e8b0 <btrfs_lookup_block_group@@Base+0x304>)
   1e76a:	add	r3, pc
   1e76c:	vmov	s17, r3
   1e770:	ldrd	r2, r3, [sp, #72]	; 0x48
   1e774:	orrs	r3, r2
   1e776:	bne.n	1e790 <btrfs_lookup_block_group@@Base+0x1e4>
   1e778:	movs	r0, #0
   1e77a:	add	sp, #28
   1e77c:	vpop	{d8}
   1e780:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e784:	ldr	r0, [sp, #72]	; 0x48
   1e786:	subs	r3, r3, r0
   1e788:	ldr	r0, [sp, #76]	; 0x4c
   1e78a:	sbc.w	r2, r2, r0
   1e78e:	b.n	1e75a <btrfs_lookup_block_group@@Base+0x1ae>
   1e790:	mov	r2, r7
   1e792:	mov	r3, r8
   1e794:	mov	r0, r9
   1e796:	bl	1e5ac <btrfs_lookup_block_group@@Base>
   1e79a:	mov	r6, r0
   1e79c:	cmp	r0, #0
   1e79e:	beq.w	1e8a6 <btrfs_lookup_block_group@@Base+0x2fa>
   1e7a2:	ldrd	sl, fp, [r0, #40]	; 0x28
   1e7a6:	ldr.w	r3, [r0, #53]	; 0x35
   1e7aa:	subs.w	r1, r7, sl
   1e7ae:	ldr.w	r2, [r0, #49]	; 0x31
   1e7b2:	str	r1, [sp, #16]
   1e7b4:	sbc.w	r1, r8, fp
   1e7b8:	str	r1, [sp, #20]
   1e7ba:	ldrd	r0, r1, [sp, #16]
   1e7be:	cmp	r3, r1
   1e7c0:	vmov	r1, s17
   1e7c4:	it	eq
   1e7c6:	cmpeq	r2, r0
   1e7c8:	ldr	r0, [pc, #232]	; (1e8b4 <btrfs_lookup_block_group@@Base+0x308>)
   1e7ca:	vmov	r2, s16
   1e7ce:	ite	cc
   1e7d0:	movcc	r3, #1
   1e7d2:	movcs	r3, #0
   1e7d4:	add	r0, pc
   1e7d6:	str	r3, [sp, #0]
   1e7d8:	mov.w	r3, #1784	; 0x6f8
   1e7dc:	bl	1ddcc <btrfs_create_tree@@Base+0x358>
   1e7e0:	ldrd	r2, r3, [r6, #40]	; 0x28
   1e7e4:	movs	r1, #1
   1e7e6:	str	r1, [sp, #8]
   1e7e8:	ldr.w	r1, [r6, #49]	; 0x31
   1e7ec:	ldr.w	r0, [r6, #53]	; 0x35
   1e7f0:	adds	r1, r1, r2
   1e7f2:	adc.w	r0, r3, r0
   1e7f6:	adds.w	r1, r1, #4294967295	; 0xffffffff
   1e7fa:	adc.w	r0, r0, #4294967295	; 0xffffffff
   1e7fe:	strd	r1, r0, [sp]
   1e802:	add.w	r0, r9, #128	; 0x80
   1e806:	bl	15fb0 <set_extent_bits@@Base>
   1e80a:	ldr.w	r3, [r6, #49]	; 0x31
   1e80e:	ldr.w	r0, [r6, #53]	; 0x35
   1e812:	adds.w	r3, r3, sl
   1e816:	ldrd	r2, r1, [r6, #72]	; 0x48
   1e81a:	adc.w	fp, r0, fp
   1e81e:	subs	r4, r3, r7
   1e820:	sbc.w	r5, fp, r8
   1e824:	ldrd	sl, fp, [sp, #72]	; 0x48
   1e828:	ldr	r0, [sp, #80]	; 0x50
   1e82a:	cmp	fp, r5
   1e82c:	ldr	r3, [r6, #60]	; 0x3c
   1e82e:	it	eq
   1e830:	cmpeq	sl, r4
   1e832:	itt	cc
   1e834:	movcc	r4, sl
   1e836:	movcc	r5, fp
   1e838:	cbz	r0, 1e86a <btrfs_lookup_block_group@@Base+0x2be>
   1e83a:	adds.w	sl, r2, r4
   1e83e:	adc.w	fp, r1, r5
   1e842:	ldrd	r2, r1, [r3, #16]
   1e846:	adds	r2, r2, r4
   1e848:	adc.w	r1, r5, r1
   1e84c:	strd	r2, r1, [r3, #16]
   1e850:	ldr	r3, [sp, #72]	; 0x48
   1e852:	strd	sl, fp, [r6, #72]	; 0x48
   1e856:	subs	r3, r3, r4
   1e858:	str	r3, [sp, #72]	; 0x48
   1e85a:	ldr	r3, [sp, #76]	; 0x4c
   1e85c:	sbc.w	r3, r3, r5
   1e860:	adds	r7, r7, r4
   1e862:	adc.w	r8, r8, r5
   1e866:	str	r3, [sp, #76]	; 0x4c
   1e868:	b.n	1e770 <btrfs_lookup_block_group@@Base+0x1c4>
   1e86a:	subs.w	sl, r2, r4
   1e86e:	sbc.w	fp, r1, r5
   1e872:	ldrd	r2, r1, [r3, #16]
   1e876:	subs	r2, r2, r4
   1e878:	sbc.w	r1, r1, r5
   1e87c:	strd	r2, r1, [r3, #16]
   1e880:	ldr	r3, [sp, #84]	; 0x54
   1e882:	cmp	r3, #0
   1e884:	beq.n	1e850 <btrfs_lookup_block_group@@Base+0x2a4>
   1e886:	adds.w	r3, r7, #4294967295	; 0xffffffff
   1e88a:	add.w	r0, r9, #96	; 0x60
   1e88e:	adc.w	r2, r8, #4294967295	; 0xffffffff
   1e892:	adds	r3, r3, r4
   1e894:	adc.w	r2, r5, r2
   1e898:	strd	r3, r2, [sp]
   1e89c:	mov	r2, r7
   1e89e:	mov	r3, r8
   1e8a0:	bl	161dc <set_extent_dirty@@Base>
   1e8a4:	b.n	1e850 <btrfs_lookup_block_group@@Base+0x2a4>
   1e8a6:	mov.w	r0, #4294967295	; 0xffffffff
   1e8aa:	b.n	1e77a <btrfs_lookup_block_group@@Base+0x1ce>
   1e8ac:	adc.w	r0, r2, r1
   1e8b0:	b.n	1e0c2 <btrfs_create_tree@@Base+0x64e>
   1e8b2:	movs	r1, r0
   1e8b4:	b.n	1e22e <btrfs_create_tree@@Base+0x7ba>
   1e8b6:	movs	r1, r0
   1e8b8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e8bc:	sub	sp, #108	; 0x6c
   1e8be:	add.w	fp, r0, #128	; 0x80
   1e8c2:	mov	r5, r1
   1e8c4:	strd	r2, r3, [sp, #16]
   1e8c8:	ldr	r2, [pc, #504]	; (1eac4 <btrfs_lookup_block_group@@Base+0x518>)
   1e8ca:	ldr	r6, [sp, #144]	; 0x90
   1e8cc:	ldr	r3, [pc, #504]	; (1eac8 <btrfs_lookup_block_group@@Base+0x51c>)
   1e8ce:	add	r2, pc
   1e8d0:	ands.w	r8, r6, #1
   1e8d4:	mov.w	r4, r6, asr #31
   1e8d8:	ldr	r3, [r2, r3]
   1e8da:	it	ne
   1e8dc:	movne.w	r8, #2
   1e8e0:	lsls	r2, r6, #29
   1e8e2:	ldr	r3, [r3, #0]
   1e8e4:	str	r3, [sp, #100]	; 0x64
   1e8e6:	mov.w	r3, #0
   1e8ea:	it	mi
   1e8ec:	orrmi.w	r8, r8, #4
   1e8f0:	mov	r3, r6
   1e8f2:	strd	r3, r4, [sp, #24]
   1e8f6:	lsls	r3, r6, #30
   1e8f8:	ldrd	r3, r4, [sp, #16]
   1e8fc:	it	mi
   1e8fe:	orrmi.w	r8, r8, #16
   1e902:	orrs	r3, r4
   1e904:	bne.n	1e9be <btrfs_lookup_block_group@@Base+0x412>
   1e906:	cmp	r5, #0
   1e908:	bne.w	1ea2e <btrfs_lookup_block_group@@Base+0x482>
   1e90c:	ldrd	r9, sl, [sp, #16]
   1e910:	movs	r5, #0
   1e912:	add	r3, sp, #80	; 0x50
   1e914:	str	r3, [sp, #32]
   1e916:	add	r3, sp, #72	; 0x48
   1e918:	str	r3, [sp, #40]	; 0x28
   1e91a:	ldr	r3, [sp, #32]
   1e91c:	mov	r2, r9
   1e91e:	mov	r0, fp
   1e920:	str.w	r8, [sp, #8]
   1e924:	str	r3, [sp, #4]
   1e926:	ldr	r3, [sp, #40]	; 0x28
   1e928:	str	r3, [sp, #0]
   1e92a:	mov	r3, sl
   1e92c:	bl	1620c <find_first_extent_bit@@Base>
   1e930:	cmp	r0, #0
   1e932:	bne.w	1eab0 <btrfs_lookup_block_group@@Base+0x504>
   1e936:	add	r3, sp, #88	; 0x58
   1e938:	mov	r0, fp
   1e93a:	str	r3, [sp, #0]
   1e93c:	ldrd	r2, r3, [sp, #72]	; 0x48
   1e940:	bl	162e8 <get_state_private@@Base>
   1e944:	cmp	r0, #0
   1e946:	bne.w	1eab0 <btrfs_lookup_block_group@@Base+0x504>
   1e94a:	ldr	r4, [sp, #88]	; 0x58
   1e94c:	ldrd	r3, r2, [r4, #40]	; 0x28
   1e950:	ldr.w	r6, [r4, #49]	; 0x31
   1e954:	ldr.w	r7, [r4, #53]	; 0x35
   1e958:	adds.w	r9, r6, r3
   1e95c:	ldr	r3, [r4, #108]	; 0x6c
   1e95e:	adc.w	sl, r7, r2
   1e962:	cmp	r3, #0
   1e964:	bne.n	1e91a <btrfs_lookup_block_group@@Base+0x36e>
   1e966:	ldrd	r2, r3, [r4, #96]	; 0x60
   1e96a:	ldr	r1, [sp, #24]
   1e96c:	ands	r2, r1
   1e96e:	str	r2, [sp, #48]	; 0x30
   1e970:	ldr	r2, [sp, #28]
   1e972:	ands	r3, r2
   1e974:	str	r3, [sp, #52]	; 0x34
   1e976:	ldrd	r0, r1, [sp, #48]	; 0x30
   1e97a:	ldrd	r2, r3, [sp, #24]
   1e97e:	cmp	r3, r1
   1e980:	it	eq
   1e982:	cmpeq	r2, r0
   1e984:	bne.n	1e91a <btrfs_lookup_block_group@@Base+0x36e>
   1e986:	ldr	r3, [r4, #72]	; 0x48
   1e988:	str	r3, [sp, #64]	; 0x40
   1e98a:	ldr	r3, [r4, #76]	; 0x4c
   1e98c:	str	r3, [sp, #68]	; 0x44
   1e98e:	cbnz	r5, 1e99e <btrfs_lookup_block_group@@Base+0x3f2>
   1e990:	mov	r0, r6
   1e992:	mov	r1, r7
   1e994:	movs	r2, #10
   1e996:	bl	311b8 <div_factor@@Base>
   1e99a:	mov	r6, r0
   1e99c:	mov	r7, r1
   1e99e:	ldrd	r3, r2, [r4, #88]	; 0x58
   1e9a2:	ldr	r1, [sp, #64]	; 0x40
   1e9a4:	adds	r3, r1, r3
   1e9a6:	str	r3, [sp, #56]	; 0x38
   1e9a8:	ldr	r3, [sp, #68]	; 0x44
   1e9aa:	adc.w	r3, r2, r3
   1e9ae:	str	r3, [sp, #60]	; 0x3c
   1e9b0:	ldrd	r2, r3, [sp, #56]	; 0x38
   1e9b4:	cmp	r3, r7
   1e9b6:	it	eq
   1e9b8:	cmpeq	r2, r6
   1e9ba:	bcs.n	1e91a <btrfs_lookup_block_group@@Base+0x36e>
   1e9bc:	b.n	1ea1a <btrfs_lookup_block_group@@Base+0x46e>
   1e9be:	ldrd	r2, r3, [sp, #16]
   1e9c2:	bl	1e5ac <btrfs_lookup_block_group@@Base>
   1e9c6:	mov	r4, r0
   1e9c8:	cmp	r0, #0
   1e9ca:	beq.n	1e906 <btrfs_lookup_block_group@@Base+0x35a>
   1e9cc:	ldr	r3, [r0, #108]	; 0x6c
   1e9ce:	cmp	r3, #0
   1e9d0:	bne.n	1e906 <btrfs_lookup_block_group@@Base+0x35a>
   1e9d2:	ldrd	r0, r1, [r0, #96]	; 0x60
   1e9d6:	and.w	r2, r6, r0
   1e9da:	ldr	r0, [sp, #28]
   1e9dc:	and.w	r3, r0, r1
   1e9e0:	asrs	r1, r6, #31
   1e9e2:	cmp	r1, r3
   1e9e4:	it	eq
   1e9e6:	cmpeq	r6, r2
   1e9e8:	bne.n	1e906 <btrfs_lookup_block_group@@Base+0x35a>
   1e9ea:	ldrd	r2, r1, [r4, #88]	; 0x58
   1e9ee:	ldrd	r3, r0, [r4, #72]	; 0x48
   1e9f2:	adds	r3, r3, r2
   1e9f4:	mov.w	r2, #10
   1e9f8:	str	r3, [sp, #32]
   1e9fa:	adc.w	r3, r0, r1
   1e9fe:	str	r3, [sp, #36]	; 0x24
   1ea00:	ldr.w	r0, [r4, #49]	; 0x31
   1ea04:	ldr.w	r1, [r4, #53]	; 0x35
   1ea08:	bl	311b8 <div_factor@@Base>
   1ea0c:	ldrd	r2, r3, [sp, #32]
   1ea10:	cmp	r3, r1
   1ea12:	it	eq
   1ea14:	cmpeq	r2, r0
   1ea16:	bcs.w	1e906 <btrfs_lookup_block_group@@Base+0x35a>
   1ea1a:	ldr	r2, [pc, #176]	; (1eacc <btrfs_lookup_block_group@@Base+0x520>)
   1ea1c:	ldr	r3, [pc, #168]	; (1eac8 <btrfs_lookup_block_group@@Base+0x51c>)
   1ea1e:	add	r2, pc
   1ea20:	ldr	r3, [r2, r3]
   1ea22:	ldr	r2, [r3, #0]
   1ea24:	ldr	r3, [sp, #100]	; 0x64
   1ea26:	eors	r2, r3
   1ea28:	beq.n	1eabc <btrfs_lookup_block_group@@Base+0x510>
   1ea2a:	blx	8510 <__stack_chk_fail@plt>
   1ea2e:	ldr	r3, [r5, #108]	; 0x6c
   1ea30:	cbnz	r3, 1ea90 <btrfs_lookup_block_group@@Base+0x4e4>
   1ea32:	ldrd	r0, r1, [r5, #96]	; 0x60
   1ea36:	and.w	r2, r6, r0
   1ea3a:	ldr	r0, [sp, #28]
   1ea3c:	and.w	r3, r0, r1
   1ea40:	ldrd	r0, r1, [sp, #24]
   1ea44:	cmp	r1, r3
   1ea46:	it	eq
   1ea48:	cmpeq	r0, r2
   1ea4a:	bne.n	1ea90 <btrfs_lookup_block_group@@Base+0x4e4>
   1ea4c:	ldrd	r2, r1, [r5, #88]	; 0x58
   1ea50:	ldrd	r3, r0, [r5, #72]	; 0x48
   1ea54:	adds	r3, r3, r2
   1ea56:	mov.w	r2, #10
   1ea5a:	str	r3, [sp, #40]	; 0x28
   1ea5c:	adc.w	r3, r0, r1
   1ea60:	str	r3, [sp, #44]	; 0x2c
   1ea62:	ldr.w	r0, [r5, #49]	; 0x31
   1ea66:	ldr.w	r1, [r5, #53]	; 0x35
   1ea6a:	bl	311b8 <div_factor@@Base>
   1ea6e:	ldrd	r3, r4, [sp, #40]	; 0x28
   1ea72:	cmp	r4, r1
   1ea74:	it	eq
   1ea76:	cmpeq	r3, r0
   1ea78:	bcc.n	1eab8 <btrfs_lookup_block_group@@Base+0x50c>
   1ea7a:	ldrd	r1, r0, [r5, #40]	; 0x28
   1ea7e:	ldr.w	r3, [r5, #49]	; 0x31
   1ea82:	ldr.w	r2, [r5, #53]	; 0x35
   1ea86:	adds.w	r9, r3, r1
   1ea8a:	adc.w	sl, r2, r0
   1ea8e:	b.n	1e910 <btrfs_lookup_block_group@@Base+0x364>
   1ea90:	ldrd	r9, sl, [r5, #40]	; 0x28
   1ea94:	ldrd	r3, r4, [sp, #16]
   1ea98:	cmp	sl, r4
   1ea9a:	it	eq
   1ea9c:	cmpeq	r9, r3
   1ea9e:	bcs.w	1e910 <btrfs_lookup_block_group@@Base+0x364>
   1eaa2:	mov	r9, r3
   1eaa4:	mov	sl, r4
   1eaa6:	b.n	1e910 <btrfs_lookup_block_group@@Base+0x364>
   1eaa8:	ldrd	r9, sl, [sp, #16]
   1eaac:	movs	r5, #1
   1eaae:	b.n	1e91a <btrfs_lookup_block_group@@Base+0x36e>
   1eab0:	cmp	r5, #0
   1eab2:	beq.n	1eaa8 <btrfs_lookup_block_group@@Base+0x4fc>
   1eab4:	movs	r4, #0
   1eab6:	b.n	1ea1a <btrfs_lookup_block_group@@Base+0x46e>
   1eab8:	mov	r4, r5
   1eaba:	b.n	1ea1a <btrfs_lookup_block_group@@Base+0x46e>
   1eabc:	mov	r0, r4
   1eabe:	add	sp, #108	; 0x6c
   1eac0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eac4:	strb	r6, [r6, r2]
   1eac6:	movs	r4, r0
   1eac8:	lsls	r0, r4, #8
   1eaca:	movs	r0, r0
   1eacc:	strh	r6, [r4, r5]
   1eace:	movs	r4, r0

0001ead0 <hash_extent_data_ref@@Base>:
   1ead0:	push	{r4, r5, r6, lr}
   1ead2:	mov	r6, r2
   1ead4:	ldr	r2, [pc, #100]	; (1eb3c <hash_extent_data_ref@@Base+0x6c>)
   1ead6:	mov	r5, r3
   1ead8:	ldr	r3, [pc, #100]	; (1eb40 <hash_extent_data_ref@@Base+0x70>)
   1eada:	sub	sp, #24
   1eadc:	add	r2, pc
   1eade:	ldr	r3, [r2, r3]
   1eae0:	movs	r2, #8
   1eae2:	ldr	r3, [r3, #0]
   1eae4:	str	r3, [sp, #20]
   1eae6:	mov.w	r3, #0
   1eaea:	strd	r0, r1, [sp, #8]
   1eaee:	add.w	r1, sp, r2
   1eaf2:	mov.w	r0, #4294967295	; 0xffffffff
   1eaf6:	str	r1, [sp, #4]
   1eaf8:	bl	16aee <crc32c_le@@Base>
   1eafc:	ldr	r1, [sp, #4]
   1eafe:	movs	r2, #8
   1eb00:	strd	r6, r5, [sp, #8]
   1eb04:	mov	r4, r0
   1eb06:	mov.w	r0, #4294967295	; 0xffffffff
   1eb0a:	bl	16aee <crc32c_le@@Base>
   1eb0e:	ldrd	r2, r3, [sp, #40]	; 0x28
   1eb12:	ldr	r1, [sp, #4]
   1eb14:	strd	r2, r3, [sp, #8]
   1eb18:	movs	r2, #8
   1eb1a:	bl	16aee <crc32c_le@@Base>
   1eb1e:	ldr	r2, [pc, #36]	; (1eb44 <hash_extent_data_ref@@Base+0x74>)
   1eb20:	ldr	r3, [pc, #28]	; (1eb40 <hash_extent_data_ref@@Base+0x70>)
   1eb22:	lsrs	r1, r4, #1
   1eb24:	add	r2, pc
   1eb26:	ldr	r3, [r2, r3]
   1eb28:	ldr	r2, [r3, #0]
   1eb2a:	ldr	r3, [sp, #20]
   1eb2c:	eors	r2, r3
   1eb2e:	eor.w	r0, r0, r4, lsl #31
   1eb32:	beq.n	1eb38 <hash_extent_data_ref@@Base+0x68>
   1eb34:	blx	8510 <__stack_chk_fail@plt>
   1eb38:	add	sp, #24
   1eb3a:	pop	{r4, r5, r6, pc}
   1eb3c:	strh	r0, [r5, r2]
   1eb3e:	movs	r4, r0
   1eb40:	lsls	r0, r4, #8
   1eb42:	movs	r0, r0
   1eb44:	strh	r0, [r4, r1]
   1eb46:	movs	r4, r0
   1eb48:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eb4c:	sub	sp, #68	; 0x44
   1eb4e:	mov	r5, r2
   1eb50:	ldr	r2, [pc, #836]	; (1ee98 <hash_extent_data_ref@@Base+0x3c8>)
   1eb52:	str	r3, [sp, #36]	; 0x24
   1eb54:	mov	r4, r0
   1eb56:	ldr	r3, [pc, #836]	; (1ee9c <hash_extent_data_ref@@Base+0x3cc>)
   1eb58:	add	r2, pc
   1eb5a:	str	r1, [sp, #28]
   1eb5c:	mov.w	r9, #0
   1eb60:	ldrd	sl, fp, [sp, #112]	; 0x70
   1eb64:	ldr	r3, [r2, r3]
   1eb66:	ldr	r3, [r3, #0]
   1eb68:	str	r3, [sp, #60]	; 0x3c
   1eb6a:	mov.w	r3, #0
   1eb6e:	ldr.w	r3, [r1, #464]	; 0x1d0
   1eb72:	ldr.w	r3, [r3, #308]	; 0x134
   1eb76:	ldr.w	r3, [r3, #188]	; 0xbc
   1eb7a:	str.w	sl, [sp, #49]	; 0x31
   1eb7e:	and.w	r8, r3, #256	; 0x100
   1eb82:	ldrd	r2, r3, [sp, #104]	; 0x68
   1eb86:	str.w	fp, [sp, #53]	; 0x35
   1eb8a:	strd	r2, r3, [sp, #40]	; 0x28
   1eb8e:	movs	r3, #168	; 0xa8
   1eb90:	strb.w	r3, [sp, #48]	; 0x30
   1eb94:	ldrd	r2, r3, [sp, #136]	; 0x88
   1eb98:	cmp	r3, #0
   1eb9a:	it	eq
   1eb9c:	cmpeq.w	r2, #256	; 0x100
   1eba0:	ldrd	r2, r3, [sp, #120]	; 0x78
   1eba4:	bcs.n	1ec2c <hash_extent_data_ref@@Base+0x15c>
   1eba6:	orrs	r3, r2
   1eba8:	ite	ne
   1ebaa:	movne	r3, #182	; 0xb6
   1ebac:	moveq	r3, #176	; 0xb0
   1ebae:	str	r3, [sp, #24]
   1ebb0:	ldr	r3, [sp, #152]	; 0x98
   1ebb2:	cmp	r3, #0
   1ebb4:	beq.w	1ee88 <hash_extent_data_ref@@Base+0x3b8>
   1ebb8:	ldr	r0, [sp, #24]
   1ebba:	bl	1e034 <btrfs_create_tree@@Base+0x5c0>
   1ebbe:	ldrd	r2, r3, [sp, #136]	; 0x88
   1ebc2:	cmp	r3, #0
   1ebc4:	it	eq
   1ebc6:	cmpeq.w	r2, #256	; 0x100
   1ebca:	str	r0, [sp, #20]
   1ebcc:	bcs.n	1ec42 <hash_extent_data_ref@@Base+0x172>
   1ebce:	orrs.w	r3, r8, r9
   1ebd2:	beq.n	1ec42 <hash_extent_data_ref@@Base+0x172>
   1ebd4:	movs	r3, #169	; 0xa9
   1ebd6:	strb.w	r3, [sp, #48]	; 0x30
   1ebda:	ldr	r3, [sp, #136]	; 0x88
   1ebdc:	mov.w	r8, #1
   1ebe0:	str.w	r3, [sp, #49]	; 0x31
   1ebe4:	ldr	r3, [sp, #140]	; 0x8c
   1ebe6:	str.w	r3, [sp, #53]	; 0x35
   1ebea:	add	r6, sp, #40	; 0x28
   1ebec:	movs	r7, #1
   1ebee:	mov.w	r9, #168	; 0xa8
   1ebf2:	ldr	r3, [sp, #20]
   1ebf4:	mov	r2, r6
   1ebf6:	ldr	r1, [sp, #28]
   1ebf8:	mov	r0, r4
   1ebfa:	str	r7, [sp, #4]
   1ebfc:	str	r3, [sp, #0]
   1ebfe:	mov	r3, r5
   1ec00:	bl	19930 <btrfs_search_slot@@Base>
   1ec04:	cmp	r0, #0
   1ec06:	blt.n	1ecda <hash_extent_data_ref@@Base+0x20a>
   1ec08:	beq.n	1ec80 <hash_extent_data_ref@@Base+0x1b0>
   1ec0a:	cmp.w	r8, #0
   1ec0e:	beq.n	1ecb6 <hash_extent_data_ref@@Base+0x1e6>
   1ec10:	ldr	r2, [r5, #32]
   1ec12:	cbnz	r2, 1ec48 <hash_extent_data_ref@@Base+0x178>
   1ec14:	mov	r0, r5
   1ec16:	strb.w	r9, [sp, #48]	; 0x30
   1ec1a:	str.w	sl, [sp, #49]	; 0x31
   1ec1e:	mov.w	r8, #0
   1ec22:	str.w	fp, [sp, #53]	; 0x35
   1ec26:	bl	1754c <btrfs_release_path@@Base>
   1ec2a:	b.n	1ebf2 <hash_extent_data_ref@@Base+0x122>
   1ec2c:	orrs	r3, r2
   1ec2e:	ite	ne
   1ec30:	movne	r3, #184	; 0xb8
   1ec32:	moveq	r3, #178	; 0xb2
   1ec34:	str	r3, [sp, #24]
   1ec36:	ldr	r3, [sp, #152]	; 0x98
   1ec38:	cmp	r3, #0
   1ec3a:	bne.n	1ebb8 <hash_extent_data_ref@@Base+0xe8>
   1ec3c:	mov.w	r3, #4294967295	; 0xffffffff
   1ec40:	str	r3, [sp, #20]
   1ec42:	mov.w	r8, #0
   1ec46:	b.n	1ebea <hash_extent_data_ref@@Base+0x11a>
   1ec48:	subs	r2, #1
   1ec4a:	ldr	r0, [r5, #0]
   1ec4c:	mov	r1, r6
   1ec4e:	str	r2, [r5, #32]
   1ec50:	bl	1dccc <btrfs_create_tree@@Base+0x258>
   1ec54:	ldrd	r2, r3, [sp, #40]	; 0x28
   1ec58:	ldrd	r0, r1, [sp, #104]	; 0x68
   1ec5c:	cmp	r3, r1
   1ec5e:	it	eq
   1ec60:	cmpeq	r2, r0
   1ec62:	bne.n	1ec14 <hash_extent_data_ref@@Base+0x144>
   1ec64:	ldrb.w	r3, [sp, #48]	; 0x30
   1ec68:	cmp	r3, #168	; 0xa8
   1ec6a:	bne.n	1ec14 <hash_extent_data_ref@@Base+0x144>
   1ec6c:	ldr.w	r3, [sp, #53]	; 0x35
   1ec70:	ldr.w	r2, [sp, #49]	; 0x31
   1ec74:	cmp	r3, fp
   1ec76:	it	eq
   1ec78:	cmpeq	r2, sl
   1ec7a:	bne.n	1ec14 <hash_extent_data_ref@@Base+0x144>
   1ec7c:	mov.w	r8, #0
   1ec80:	ldr	r4, [r5, #0]
   1ec82:	movs	r3, #25
   1ec84:	ldr	r2, [r5, #32]
   1ec86:	add.w	r7, r4, #96	; 0x60
   1ec8a:	mla	r3, r3, r2, r7
   1ec8e:	add.w	r1, r3, #101	; 0x65
   1ec92:	ldr.w	r6, [r3, #122]	; 0x7a
   1ec96:	cmp	r6, #23
   1ec98:	bhi.n	1ecf0 <hash_extent_data_ref@@Base+0x220>
   1ec9a:	ldr	r1, [pc, #516]	; (1eea0 <hash_extent_data_ref@@Base+0x3d0>)
   1ec9c:	movs	r3, #24
   1ec9e:	str	r2, [sp, #0]
   1eca0:	movs	r0, #1
   1eca2:	add	r1, pc
   1eca4:	mov	r2, r6
   1eca6:	blx	8838 <__printf_chk@plt+0x4>
   1ecaa:	mov	r0, r4
   1ecac:	bl	24718 <btrfs_print_leaf@@Base>
   1ecb0:	mvn.w	r0, #21
   1ecb4:	b.n	1ecda <hash_extent_data_ref@@Base+0x20a>
   1ecb6:	ldr.w	r2, [sp, #49]	; 0x31
   1ecba:	movs	r0, #1
   1ecbc:	ldr.w	r3, [sp, #53]	; 0x35
   1ecc0:	ldr	r1, [pc, #480]	; (1eea4 <hash_extent_data_ref@@Base+0x3d4>)
   1ecc2:	strd	r2, r3, [sp, #8]
   1ecc6:	add	r1, pc
   1ecc8:	ldrb.w	r3, [sp, #48]	; 0x30
   1eccc:	str	r3, [sp, #0]
   1ecce:	ldrd	r2, r3, [sp, #40]	; 0x28
   1ecd2:	blx	8838 <__printf_chk@plt+0x4>
   1ecd6:	mvn.w	r0, #1
   1ecda:	ldr	r2, [pc, #460]	; (1eea8 <hash_extent_data_ref@@Base+0x3d8>)
   1ecdc:	ldr	r3, [pc, #444]	; (1ee9c <hash_extent_data_ref@@Base+0x3cc>)
   1ecde:	add	r2, pc
   1ece0:	ldr	r3, [r2, r3]
   1ece2:	ldr	r2, [r3, #0]
   1ece4:	ldr	r3, [sp, #60]	; 0x3c
   1ece6:	eors	r2, r3
   1ece8:	beq.w	1ee90 <hash_extent_data_ref@@Base+0x3c0>
   1ecec:	blx	8510 <__stack_chk_fail@plt>
   1ecf0:	ldr.w	ip, [r1, #17]
   1ecf4:	movs	r1, #0
   1ecf6:	add.w	fp, ip, #101	; 0x65
   1ecfa:	add.w	r4, ip, #125	; 0x7d
   1ecfe:	add.w	r3, r7, fp
   1ed02:	ldr	r0, [r3, #16]
   1ed04:	add.w	r3, fp, r6
   1ed08:	str	r3, [sp, #32]
   1ed0a:	mov	r3, r1
   1ed0c:	and.w	r2, r0, #2
   1ed10:	orrs	r3, r2
   1ed12:	beq.n	1ed76 <hash_extent_data_ref@@Base+0x2a6>
   1ed14:	cmp.w	r8, #0
   1ed18:	bne.n	1ed40 <hash_extent_data_ref@@Base+0x270>
   1ed1a:	ldr	r3, [sp, #32]
   1ed1c:	add.w	r4, ip, #143	; 0x8f
   1ed20:	ldr	r2, [pc, #392]	; (1eeac <hash_extent_data_ref@@Base+0x3dc>)
   1ed22:	cmp	r3, r4
   1ed24:	ldr	r1, [pc, #392]	; (1eeb0 <hash_extent_data_ref@@Base+0x3e0>)
   1ed26:	ldr	r0, [pc, #396]	; (1eeb4 <hash_extent_data_ref@@Base+0x3e4>)
   1ed28:	add	r2, pc
   1ed2a:	ite	cs
   1ed2c:	movcs	r3, #0
   1ed2e:	movcc	r3, #1
   1ed30:	adds	r2, #178	; 0xb2
   1ed32:	str	r3, [sp, #0]
   1ed34:	add	r1, pc
   1ed36:	add	r0, pc
   1ed38:	movw	r3, #943	; 0x3af
   1ed3c:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1ed40:	ldr	r3, [sp, #32]
   1ed42:	cmp	r4, r3
   1ed44:	bcc.n	1ed86 <hash_extent_data_ref@@Base+0x2b6>
   1ed46:	ldr	r2, [pc, #368]	; (1eeb8 <hash_extent_data_ref@@Base+0x3e8>)
   1ed48:	it	hi
   1ed4a:	movhi	r3, #1
   1ed4c:	ldr	r1, [pc, #364]	; (1eebc <hash_extent_data_ref@@Base+0x3ec>)
   1ed4e:	it	ls
   1ed50:	movls	r3, #0
   1ed52:	ldr	r0, [pc, #364]	; (1eec0 <hash_extent_data_ref@@Base+0x3f0>)
   1ed54:	add	r2, pc
   1ed56:	str	r3, [sp, #0]
   1ed58:	adds	r2, #178	; 0xb2
   1ed5a:	add	r1, pc
   1ed5c:	add	r0, pc
   1ed5e:	movw	r3, #953	; 0x3b9
   1ed62:	bl	1ddcc <btrfs_create_tree@@Base+0x358>
   1ed66:	ldr	r3, [sp, #152]	; 0x98
   1ed68:	cmp	r3, #0
   1ed6a:	bne.n	1ee3a <hash_extent_data_ref@@Base+0x36a>
   1ed6c:	mvn.w	r0, #1
   1ed70:	ldr	r3, [sp, #36]	; 0x24
   1ed72:	str	r4, [r3, #0]
   1ed74:	b.n	1ecda <hash_extent_data_ref@@Base+0x20a>
   1ed76:	and.w	r2, r0, #1
   1ed7a:	mov	r3, r1
   1ed7c:	orrs	r3, r2
   1ed7e:	bne.n	1ed40 <hash_extent_data_ref@@Base+0x270>
   1ed80:	mvn.w	r0, #4
   1ed84:	b.n	1ecda <hash_extent_data_ref@@Base+0x20a>
   1ed86:	ldrb.w	sl, [r7, r4]
   1ed8a:	adds	r1, r7, r4
   1ed8c:	ldr	r3, [sp, #24]
   1ed8e:	cmp	sl, r3
   1ed90:	bgt.n	1ed66 <hash_extent_data_ref@@Base+0x296>
   1ed92:	bge.n	1ed9e <hash_extent_data_ref@@Base+0x2ce>
   1ed94:	mov	r0, sl
   1ed96:	bl	1e034 <btrfs_create_tree@@Base+0x5c0>
   1ed9a:	add	r4, r0
   1ed9c:	b.n	1ed40 <hash_extent_data_ref@@Base+0x270>
   1ed9e:	cmp.w	sl, #178	; 0xb2
   1eda2:	bne.n	1ee14 <hash_extent_data_ref@@Base+0x344>
   1eda4:	adds	r3, r4, #1
   1eda6:	add.w	ip, r7, r3
   1edaa:	ldr.w	r8, [r7, r3]
   1edae:	ldr.w	r9, [ip, #4]
   1edb2:	ldr.w	r2, [ip, #8]
   1edb6:	ldr.w	r3, [ip, #12]
   1edba:	ldr.w	r0, [ip, #16]
   1edbe:	ldr.w	r1, [ip, #20]
   1edc2:	ldrd	fp, ip, [sp, #128]	; 0x80
   1edc6:	cmp	ip, r9
   1edc8:	it	eq
   1edca:	cmpeq	fp, r8
   1edcc:	bne.n	1ede6 <hash_extent_data_ref@@Base+0x316>
   1edce:	ldrd	fp, ip, [sp, #136]	; 0x88
   1edd2:	cmp	ip, r3
   1edd4:	it	eq
   1edd6:	cmpeq	fp, r2
   1edd8:	bne.n	1ede6 <hash_extent_data_ref@@Base+0x316>
   1edda:	ldrd	fp, ip, [sp, #144]	; 0x90
   1edde:	cmp	ip, r1
   1ede0:	it	eq
   1ede2:	cmpeq	fp, r0
   1ede4:	beq.n	1ee84 <hash_extent_data_ref@@Base+0x3b4>
   1ede6:	strd	r0, r1, [sp]
   1edea:	mov	r0, r8
   1edec:	mov	r1, r9
   1edee:	bl	1ead0 <hash_extent_data_ref@@Base>
   1edf2:	ldrd	r2, r3, [sp, #144]	; 0x90
   1edf6:	strd	r2, r3, [sp]
   1edfa:	ldrd	r2, r3, [sp, #136]	; 0x88
   1edfe:	mov	r8, r0
   1ee00:	mov	r9, r1
   1ee02:	ldrd	r0, r1, [sp, #128]	; 0x80
   1ee06:	bl	1ead0 <hash_extent_data_ref@@Base>
   1ee0a:	cmp	r9, r1
   1ee0c:	it	eq
   1ee0e:	cmpeq	r8, r0
   1ee10:	bcs.n	1ed94 <hash_extent_data_ref@@Base+0x2c4>
   1ee12:	b.n	1ed66 <hash_extent_data_ref@@Base+0x296>
   1ee14:	ldr.w	r2, [r1, #1]!
   1ee18:	ldr	r3, [r1, #4]
   1ee1a:	ldrd	r0, r1, [sp, #120]	; 0x78
   1ee1e:	orrs	r1, r0
   1ee20:	ite	ne
   1ee22:	ldrdne	r0, r1, [sp, #120]	; 0x78
   1ee26:	ldrdeq	r0, r1, [sp, #128]	; 0x80
   1ee2a:	cmp	r1, r3
   1ee2c:	it	eq
   1ee2e:	cmpeq	r0, r2
   1ee30:	beq.n	1ee84 <hash_extent_data_ref@@Base+0x3b4>
   1ee32:	cmp	r3, r1
   1ee34:	it	eq
   1ee36:	cmpeq	r2, r0
   1ee38:	b.n	1ee10 <hash_extent_data_ref@@Base+0x340>
   1ee3a:	ldr	r3, [sp, #20]
   1ee3c:	add	r3, r6
   1ee3e:	mov	r6, r3
   1ee40:	ldr	r3, [sp, #28]
   1ee42:	ldr.w	r3, [r3, #464]	; 0x1d0
   1ee46:	ldr.w	r3, [r3, #384]	; 0x180
   1ee4a:	subs	r3, #101	; 0x65
   1ee4c:	lsrs	r3, r3, #4
   1ee4e:	subs	r3, #25
   1ee50:	cmp	r6, r3
   1ee52:	bcc.n	1ee5a <hash_extent_data_ref@@Base+0x38a>
   1ee54:	mvn.w	r0, #10
   1ee58:	b.n	1ecda <hash_extent_data_ref@@Base+0x20a>
   1ee5a:	add	r1, sp, #40	; 0x28
   1ee5c:	mov	r0, r5
   1ee5e:	bl	30b60 <find_next_key@@Base>
   1ee62:	cmp	r0, #0
   1ee64:	bne.n	1ed6c <hash_extent_data_ref@@Base+0x29c>
   1ee66:	ldrd	r2, r3, [sp, #40]	; 0x28
   1ee6a:	ldrd	r0, r1, [sp, #104]	; 0x68
   1ee6e:	cmp	r3, r1
   1ee70:	it	eq
   1ee72:	cmpeq	r2, r0
   1ee74:	bne.w	1ed6c <hash_extent_data_ref@@Base+0x29c>
   1ee78:	ldrb.w	r3, [sp, #48]	; 0x30
   1ee7c:	cmp	r3, #191	; 0xbf
   1ee7e:	bhi.w	1ed6c <hash_extent_data_ref@@Base+0x29c>
   1ee82:	b.n	1ee54 <hash_extent_data_ref@@Base+0x384>
   1ee84:	movs	r0, #0
   1ee86:	b.n	1ed70 <hash_extent_data_ref@@Base+0x2a0>
   1ee88:	mov.w	r3, #4294967295	; 0xffffffff
   1ee8c:	str	r3, [sp, #20]
   1ee8e:	b.n	1ebce <hash_extent_data_ref@@Base+0xfe>
   1ee90:	add	sp, #68	; 0x44
   1ee92:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ee96:	nop
   1ee98:	strh	r4, [r5, r0]
   1ee9a:	movs	r4, r0
   1ee9c:	lsls	r0, r4, #8
   1ee9e:	movs	r0, r0
   1eea0:	b.n	1ef04 <hash_extent_data_ref@@Base+0x434>
   1eea2:	movs	r1, r0
   1eea4:	svc	235	; 0xeb
   1eea6:	movs	r1, r0
   1eea8:	str	r6, [r4, r2]
   1eeaa:	movs	r4, r0
   1eeac:	b.n	1e9a4 <btrfs_lookup_block_group@@Base+0x3f8>
   1eeae:	movs	r1, r0
   1eeb0:	udf	#61	; 0x3d
   1eeb2:	movs	r1, r0
   1eeb4:	add	r6, sp, #228	; 0xe4
   1eeb6:	movs	r1, r0
   1eeb8:	b.n	1e958 <btrfs_lookup_block_group@@Base+0x3ac>
   1eeba:	movs	r1, r0
   1eebc:	udf	#23
   1eebe:	movs	r1, r0
   1eec0:	add	r6, sp, #76	; 0x4c
   1eec2:	movs	r1, r0
   1eec4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eec8:	mov	r6, r0
   1eeca:	vpush	{d8}
   1eece:	ldr.w	r1, [pc, #2168]	; 1f748 <hash_extent_data_ref@@Base+0xc78>
   1eed2:	ldr.w	r0, [pc, #2168]	; 1f74c <hash_extent_data_ref@@Base+0xc7c>
   1eed6:	add	r1, pc
   1eed8:	sub	sp, #148	; 0x94
   1eeda:	add	r0, pc
   1eedc:	str	r1, [sp, #72]	; 0x48
   1eede:	ldr.w	r1, [pc, #2160]	; 1f750 <hash_extent_data_ref@@Base+0xc80>
   1eee2:	strd	r2, r3, [sp, #56]	; 0x38
   1eee6:	ldrd	r8, r9, [sp, #200]	; 0xc8
   1eeea:	ldr	r1, [r0, r1]
   1eeec:	ldr	r0, [r6, #0]
   1eeee:	ldr	r1, [r1, #0]
   1eef0:	str	r1, [sp, #140]	; 0x8c
   1eef2:	mov.w	r1, #0
   1eef6:	ldr.w	sl, [r0, #24]
   1eefa:	ldr.w	r1, [sl, #464]	; 0x1d0
   1eefe:	ldr.w	r1, [r1, #308]	; 0x134
   1ef02:	ldr.w	r5, [r1, #188]	; 0xbc
   1ef06:	ldr.w	r1, [r0, #372]	; 0x174
   1ef0a:	cbz	r1, 1ef36 <hash_extent_data_ref@@Base+0x466>
   1ef0c:	ldrd	fp, ip, [sp, #224]	; 0xe0
   1ef10:	movs	r4, #1
   1ef12:	strd	r8, r9, [sp, #8]
   1ef16:	str	r4, [sp, #40]	; 0x28
   1ef18:	strd	fp, ip, [sp, #32]
   1ef1c:	ldrd	fp, ip, [sp, #216]	; 0xd8
   1ef20:	strd	fp, ip, [sp, #24]
   1ef24:	ldrd	fp, ip, [sp, #208]	; 0xd0
   1ef28:	strd	fp, ip, [sp, #16]
   1ef2c:	ldrd	fp, ip, [sp, #192]	; 0xc0
   1ef30:	strd	fp, ip, [sp]
   1ef34:	blx	r1
   1ef36:	bl	17544 <btrfs_alloc_path@@Base>
   1ef3a:	mov	r4, r0
   1ef3c:	cmp	r0, #0
   1ef3e:	beq.w	1f6da <hash_extent_data_ref@@Base+0xc0a>
   1ef42:	movs	r3, #1
   1ef44:	strb.w	r3, [r0, #64]	; 0x40
   1ef48:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1ef4c:	movs	r7, #0
   1ef4e:	ldr.w	r1, [pc, #2052]	; 1f754 <hash_extent_data_ref@@Base+0xc84>
   1ef52:	cmp	r3, #0
   1ef54:	ldr.w	r0, [pc, #2048]	; 1f758 <hash_extent_data_ref@@Base+0xc88>
   1ef58:	it	eq
   1ef5a:	cmpeq.w	r2, #256	; 0x100
   1ef5e:	ldr.w	r2, [pc, #2044]	; 1f75c <hash_extent_data_ref@@Base+0xc8c>
   1ef62:	add	r1, pc
   1ef64:	add	r0, pc
   1ef66:	add	r2, pc
   1ef68:	ite	cs
   1ef6a:	movcs	r3, #1
   1ef6c:	movcc	r3, #0
   1ef6e:	add.w	r2, r2, #207	; 0xcf
   1ef72:	str	r3, [sp, #76]	; 0x4c
   1ef74:	ite	cc
   1ef76:	ubfxcc	r3, r5, #8, #1
   1ef7a:	movcs	r3, #0
   1ef7c:	str	r7, [sp, #0]
   1ef7e:	str	r3, [sp, #64]	; 0x40
   1ef80:	movw	r3, #1959	; 0x7a7
   1ef84:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1ef88:	ldrd	r2, r3, [sp, #224]	; 0xe0
   1ef8c:	mov	r1, sl
   1ef8e:	mov	r0, r6
   1ef90:	str	r7, [sp, #48]	; 0x30
   1ef92:	strd	r2, r3, [sp, #40]	; 0x28
   1ef96:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1ef9a:	strd	r8, r9, [sp, #16]
   1ef9e:	strd	r2, r3, [sp, #32]
   1efa2:	ldrd	r2, r3, [sp, #208]	; 0xd0
   1efa6:	strd	r2, r3, [sp, #24]
   1efaa:	ldrd	r2, r3, [sp, #192]	; 0xc0
   1efae:	strd	r2, r3, [sp, #8]
   1efb2:	ldrd	r2, r3, [sp, #56]	; 0x38
   1efb6:	strd	r2, r3, [sp]
   1efba:	add	r3, sp, #96	; 0x60
   1efbc:	mov	r2, r4
   1efbe:	bl	1eb48 <hash_extent_data_ref@@Base+0x78>
   1efc2:	adds	r3, r0, #2
   1efc4:	mov	r5, r0
   1efc6:	bne.w	1f0da <hash_extent_data_ref@@Base+0x60a>
   1efca:	mov	r0, r4
   1efcc:	bl	1754c <btrfs_release_path@@Base>
   1efd0:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1efd4:	str	r7, [sp, #96]	; 0x60
   1efd6:	cmp	r3, #0
   1efd8:	it	eq
   1efda:	cmpeq.w	r2, #256	; 0x100
   1efde:	ldrd	r2, r3, [sp, #56]	; 0x38
   1efe2:	strd	r2, r3, [sp, #120]	; 0x78
   1efe6:	bcs.n	1f09e <hash_extent_data_ref@@Base+0x5ce>
   1efe8:	orrs.w	r3, r8, r9
   1efec:	add.w	r3, sp, #129	; 0x81
   1eff0:	beq.n	1f08c <hash_extent_data_ref@@Base+0x5bc>
   1eff2:	movs	r2, #182	; 0xb6
   1eff4:	str.w	r8, [sp, #129]	; 0x81
   1eff8:	strb.w	r2, [sp, #128]	; 0x80
   1effc:	str.w	r9, [r3, #4]
   1f000:	mov.w	r3, #4294967295	; 0xffffffff
   1f004:	movs	r5, #1
   1f006:	add	r2, sp, #120	; 0x78
   1f008:	strd	r3, r5, [sp]
   1f00c:	mov	r1, sl
   1f00e:	mov	r3, r4
   1f010:	mov	r0, r6
   1f012:	bl	19930 <btrfs_search_slot@@Base>
   1f016:	subs	r5, r0, #0
   1f018:	ble.n	1f0da <hash_extent_data_ref@@Base+0x60a>
   1f01a:	ldr	r2, [sp, #72]	; 0x48
   1f01c:	mvn.w	r5, #4
   1f020:	ldr.w	r3, [pc, #1852]	; 1f760 <hash_extent_data_ref@@Base+0xc90>
   1f024:	ldr	r3, [r2, r3]
   1f026:	ldrd	r1, r2, [sp, #224]	; 0xe0
   1f02a:	strd	r8, r9, [sp, #8]
   1f02e:	strd	r1, r2, [sp, #32]
   1f032:	ldrd	r1, r2, [sp, #216]	; 0xd8
   1f036:	strd	r1, r2, [sp, #24]
   1f03a:	ldrd	r1, r2, [sp, #208]	; 0xd0
   1f03e:	strd	r1, r2, [sp, #16]
   1f042:	ldrd	r1, r2, [sp, #56]	; 0x38
   1f046:	strd	r1, r2, [sp]
   1f04a:	movs	r1, #1
   1f04c:	ldr.w	r2, [pc, #1812]	; 1f764 <hash_extent_data_ref@@Base+0xc94>
   1f050:	ldr	r0, [r3, #0]
   1f052:	add	r2, pc
   1f054:	blx	8860 <__fprintf_chk@plt+0x4>
   1f058:	ldr.w	r1, [pc, #1804]	; 1f768 <hash_extent_data_ref@@Base+0xc98>
   1f05c:	ldr	r2, [r4, #32]
   1f05e:	movs	r0, #1
   1f060:	add	r1, pc
   1f062:	blx	8838 <__printf_chk@plt+0x4>
   1f066:	ldr	r0, [r4, #0]
   1f068:	bl	24718 <btrfs_print_leaf@@Base>
   1f06c:	mov	r0, r4
   1f06e:	bl	17572 <btrfs_free_path@@Base>
   1f072:	ldr.w	r2, [pc, #1784]	; 1f76c <hash_extent_data_ref@@Base+0xc9c>
   1f076:	ldr.w	r3, [pc, #1752]	; 1f750 <hash_extent_data_ref@@Base+0xc80>
   1f07a:	add	r2, pc
   1f07c:	ldr	r3, [r2, r3]
   1f07e:	ldr	r2, [r3, #0]
   1f080:	ldr	r3, [sp, #140]	; 0x8c
   1f082:	eors	r2, r3
   1f084:	beq.w	1f73a <hash_extent_data_ref@@Base+0xc6a>
   1f088:	blx	8510 <__stack_chk_fail@plt>
   1f08c:	movs	r2, #176	; 0xb0
   1f08e:	strb.w	r2, [sp, #128]	; 0x80
   1f092:	ldr	r2, [sp, #208]	; 0xd0
   1f094:	str.w	r2, [sp, #129]	; 0x81
   1f098:	ldr	r2, [sp, #212]	; 0xd4
   1f09a:	str	r2, [r3, #4]
   1f09c:	b.n	1f000 <hash_extent_data_ref@@Base+0x530>
   1f09e:	orrs.w	r3, r8, r9
   1f0a2:	beq.n	1f0e0 <hash_extent_data_ref@@Base+0x610>
   1f0a4:	movs	r3, #184	; 0xb8
   1f0a6:	str.w	r8, [sp, #129]	; 0x81
   1f0aa:	strb.w	r3, [sp, #128]	; 0x80
   1f0ae:	str.w	r9, [sp, #133]	; 0x85
   1f0b2:	add	r3, sp, #120	; 0x78
   1f0b4:	vmov	s16, r3
   1f0b8:	mov.w	r3, #4294967295	; 0xffffffff
   1f0bc:	movs	r0, #1
   1f0be:	vmov	r2, s16
   1f0c2:	mov	r1, sl
   1f0c4:	strd	r3, r0, [sp]
   1f0c8:	mov	r3, r4
   1f0ca:	mov	r0, r6
   1f0cc:	bl	19930 <btrfs_search_slot@@Base>
   1f0d0:	subs	r5, r0, #0
   1f0d2:	blt.n	1f01a <hash_extent_data_ref@@Base+0x54a>
   1f0d4:	orrs.w	r3, r8, r9
   1f0d8:	beq.n	1f104 <hash_extent_data_ref@@Base+0x634>
   1f0da:	cmp	r5, #0
   1f0dc:	beq.n	1f1b2 <hash_extent_data_ref@@Base+0x6e2>
   1f0de:	b.n	1f01a <hash_extent_data_ref@@Base+0x54a>
   1f0e0:	movs	r3, #178	; 0xb2
   1f0e2:	strb.w	r3, [sp, #128]	; 0x80
   1f0e6:	ldrd	r2, r3, [sp, #224]	; 0xe0
   1f0ea:	ldrd	r0, r1, [sp, #208]	; 0xd0
   1f0ee:	strd	r2, r3, [sp]
   1f0f2:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1f0f6:	bl	1ead0 <hash_extent_data_ref@@Base>
   1f0fa:	str.w	r0, [sp, #129]	; 0x81
   1f0fe:	str.w	r1, [sp, #133]	; 0x85
   1f102:	b.n	1f0b2 <hash_extent_data_ref@@Base+0x5e2>
   1f104:	ldr	r7, [r4, #0]
   1f106:	movs	r5, #0
   1f108:	ldr.w	r3, [r7, #192]	; 0xc0
   1f10c:	str	r3, [sp, #80]	; 0x50
   1f10e:	ldr	r3, [r4, #32]
   1f110:	ldr	r2, [sp, #80]	; 0x50
   1f112:	cmp	r3, r2
   1f114:	bcc.n	1f13c <hash_extent_data_ref@@Base+0x66c>
   1f116:	mov.w	r3, #0
   1f11a:	mov	r1, r4
   1f11c:	strb.w	r3, [r4, #65]	; 0x41
   1f120:	ldr.w	r0, [sl, #464]	; 0x1d0
   1f124:	bl	1ad64 <btrfs_next_sibling_tree_block@@Base>
   1f128:	cmp	r0, #0
   1f12a:	blt.w	1f01a <hash_extent_data_ref@@Base+0x54a>
   1f12e:	bne.w	1f01a <hash_extent_data_ref@@Base+0x54a>
   1f132:	ldr	r7, [r4, #0]
   1f134:	movs	r5, #1
   1f136:	ldr.w	r3, [r7, #192]	; 0xc0
   1f13a:	str	r3, [sp, #80]	; 0x50
   1f13c:	vmov	r1, s16
   1f140:	mov	r0, r7
   1f142:	ldr	r2, [r4, #32]
   1f144:	bl	1dccc <btrfs_create_tree@@Base+0x258>
   1f148:	ldrd	r2, r3, [sp, #120]	; 0x78
   1f14c:	ldrd	r0, r1, [sp, #56]	; 0x38
   1f150:	cmp	r1, r3
   1f152:	it	eq
   1f154:	cmpeq	r0, r2
   1f156:	bne.w	1f01a <hash_extent_data_ref@@Base+0x54a>
   1f15a:	ldrb.w	r3, [sp, #128]	; 0x80
   1f15e:	cmp	r3, #178	; 0xb2
   1f160:	bne.w	1f01a <hash_extent_data_ref@@Base+0x54a>
   1f164:	ldr	r0, [r4, #32]
   1f166:	add.w	ip, r7, #96	; 0x60
   1f16a:	movs	r3, #25
   1f16c:	mla	r3, r3, r0, ip
   1f170:	ldr.w	lr, [r3, #118]	; 0x76
   1f174:	add.w	lr, lr, #101	; 0x65
   1f178:	add.w	r1, ip, lr
   1f17c:	ldr.w	r2, [ip, lr]
   1f180:	ldr	r3, [r1, #4]
   1f182:	ldrd	fp, ip, [sp, #208]	; 0xd0
   1f186:	cmp	ip, r3
   1f188:	it	eq
   1f18a:	cmpeq	fp, r2
   1f18c:	bne.n	1f228 <hash_extent_data_ref@@Base+0x758>
   1f18e:	ldrd	fp, ip, [sp, #216]	; 0xd8
   1f192:	ldr	r3, [r1, #12]
   1f194:	ldr	r2, [r1, #8]
   1f196:	cmp	ip, r3
   1f198:	it	eq
   1f19a:	cmpeq	fp, r2
   1f19c:	bne.n	1f228 <hash_extent_data_ref@@Base+0x758>
   1f19e:	ldrd	fp, ip, [sp, #224]	; 0xe0
   1f1a2:	ldr	r3, [r1, #20]
   1f1a4:	ldr	r2, [r1, #16]
   1f1a6:	cmp	ip, r3
   1f1a8:	it	eq
   1f1aa:	cmpeq	fp, r2
   1f1ac:	bne.n	1f228 <hash_extent_data_ref@@Base+0x758>
   1f1ae:	cmp	r5, #0
   1f1b0:	bne.n	1f22e <hash_extent_data_ref@@Base+0x75e>
   1f1b2:	ldr	r7, [r4, #32]
   1f1b4:	add	r5, sp, #100	; 0x64
   1f1b6:	cmp	r7, #0
   1f1b8:	bge.n	1f236 <hash_extent_data_ref@@Base+0x766>
   1f1ba:	ldr.w	r7, [pc, #1460]	; 1f770 <hash_extent_data_ref@@Base+0xca0>
   1f1be:	ldr.w	r5, [pc, #1460]	; 1f774 <hash_extent_data_ref@@Base+0xca4>
   1f1c2:	ldr	r3, [sp, #96]	; 0x60
   1f1c4:	add	r7, pc
   1f1c6:	adds	r7, #207	; 0xcf
   1f1c8:	add	r5, pc
   1f1ca:	ldr.w	r0, [pc, #1452]	; 1f778 <hash_extent_data_ref@@Base+0xca8>
   1f1ce:	mov	r2, r7
   1f1d0:	mov	r1, r5
   1f1d2:	add	r0, pc
   1f1d4:	str	r3, [sp, #0]
   1f1d6:	movw	r3, #1987	; 0x7c3
   1f1da:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1f1de:	ldr	r3, [sp, #76]	; 0x4c
   1f1e0:	mov	r2, r4
   1f1e2:	mov	r1, sl
   1f1e4:	mov	r0, r6
   1f1e6:	str	r3, [sp, #0]
   1f1e8:	movs	r3, #0
   1f1ea:	bl	1e39c <btrfs_create_tree@@Base+0x928>
   1f1ee:	movw	r3, #1991	; 0x7c7
   1f1f2:	mov	r2, r7
   1f1f4:	mov	r1, r5
   1f1f6:	str	r0, [sp, #0]
   1f1f8:	ldr.w	r0, [pc, #1408]	; 1f77c <hash_extent_data_ref@@Base+0xcac>
   1f1fc:	add	r0, pc
   1f1fe:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1f202:	mov	r0, r4
   1f204:	bl	1754c <btrfs_release_path@@Base>
   1f208:	ldr	r3, [sp, #56]	; 0x38
   1f20a:	ldr	r2, [sp, #64]	; 0x40
   1f20c:	str	r3, [sp, #100]	; 0x64
   1f20e:	ldr	r3, [sp, #60]	; 0x3c
   1f210:	str	r3, [sp, #104]	; 0x68
   1f212:	add.w	r3, sp, #109	; 0x6d
   1f216:	cbnz	r2, 1f28a <hash_extent_data_ref@@Base+0x7ba>
   1f218:	movs	r2, #168	; 0xa8
   1f21a:	strb.w	r2, [sp, #108]	; 0x6c
   1f21e:	ldr	r2, [sp, #192]	; 0xc0
   1f220:	str.w	r2, [sp, #109]	; 0x6d
   1f224:	ldr	r2, [sp, #196]	; 0xc4
   1f226:	b.n	1f298 <hash_extent_data_ref@@Base+0x7c8>
   1f228:	adds	r0, #1
   1f22a:	str	r0, [r4, #32]
   1f22c:	b.n	1f10e <hash_extent_data_ref@@Base+0x63e>
   1f22e:	mov	r0, r4
   1f230:	bl	1754c <btrfs_release_path@@Base>
   1f234:	b.n	1f0b8 <hash_extent_data_ref@@Base+0x5e8>
   1f236:	ldr	r0, [r4, #0]
   1f238:	mov	r2, r7
   1f23a:	mov	r1, r5
   1f23c:	bl	1dccc <btrfs_create_tree@@Base+0x258>
   1f240:	ldrd	r2, r3, [sp, #100]	; 0x64
   1f244:	ldrd	r0, r1, [sp, #56]	; 0x38
   1f248:	cmp	r1, r3
   1f24a:	it	eq
   1f24c:	cmpeq	r0, r2
   1f24e:	bne.n	1f1ba <hash_extent_data_ref@@Base+0x6ea>
   1f250:	ldrb.w	r3, [sp, #108]	; 0x6c
   1f254:	cmp	r3, #168	; 0xa8
   1f256:	bne.n	1f278 <hash_extent_data_ref@@Base+0x7a8>
   1f258:	ldr.w	r2, [sp, #109]	; 0x6d
   1f25c:	ldr.w	r3, [sp, #113]	; 0x71
   1f260:	ldrd	r0, r1, [sp, #192]	; 0xc0
   1f264:	cmp	r1, r3
   1f266:	it	eq
   1f268:	cmpeq	r0, r2
   1f26a:	beq.n	1f358 <hash_extent_data_ref@@Base+0x888>
   1f26c:	ldr	r3, [r4, #32]
   1f26e:	subs	r3, r3, r7
   1f270:	cmp	r3, #5
   1f272:	bgt.n	1f1ba <hash_extent_data_ref@@Base+0x6ea>
   1f274:	subs	r7, #1
   1f276:	b.n	1f1b6 <hash_extent_data_ref@@Base+0x6e6>
   1f278:	cmp	r3, #169	; 0xa9
   1f27a:	bne.n	1f26c <hash_extent_data_ref@@Base+0x79c>
   1f27c:	ldr.w	r2, [sp, #109]	; 0x6d
   1f280:	ldr.w	r3, [sp, #113]	; 0x71
   1f284:	ldrd	r0, r1, [sp, #216]	; 0xd8
   1f288:	b.n	1f264 <hash_extent_data_ref@@Base+0x794>
   1f28a:	movs	r2, #169	; 0xa9
   1f28c:	strb.w	r2, [sp, #108]	; 0x6c
   1f290:	ldr	r2, [sp, #216]	; 0xd8
   1f292:	str.w	r2, [sp, #109]	; 0x6d
   1f296:	ldr	r2, [sp, #220]	; 0xdc
   1f298:	add	r7, sp, #100	; 0x64
   1f29a:	str	r2, [r3, #4]
   1f29c:	movs	r1, #1
   1f29e:	mov.w	r3, #4294967295	; 0xffffffff
   1f2a2:	mov	r2, r7
   1f2a4:	strd	r3, r1, [sp]
   1f2a8:	mov	r0, r6
   1f2aa:	mov	r3, r4
   1f2ac:	mov	r1, sl
   1f2ae:	bl	19930 <btrfs_search_slot@@Base>
   1f2b2:	subs	r5, r0, #0
   1f2b4:	ble.w	1f710 <hash_extent_data_ref@@Base+0xc40>
   1f2b8:	ldr	r3, [sp, #64]	; 0x40
   1f2ba:	cmp	r3, #0
   1f2bc:	beq.w	1f716 <hash_extent_data_ref@@Base+0xc46>
   1f2c0:	ldr	r2, [r4, #32]
   1f2c2:	cmp	r2, #0
   1f2c4:	beq.w	1f6e0 <hash_extent_data_ref@@Base+0xc10>
   1f2c8:	subs	r2, #1
   1f2ca:	ldr	r0, [r4, #0]
   1f2cc:	mov	r1, r7
   1f2ce:	str	r2, [r4, #32]
   1f2d0:	bl	1dccc <btrfs_create_tree@@Base+0x258>
   1f2d4:	ldrd	r2, r3, [sp, #100]	; 0x64
   1f2d8:	ldrd	r0, r1, [sp, #56]	; 0x38
   1f2dc:	cmp	r1, r3
   1f2de:	it	eq
   1f2e0:	cmpeq	r0, r2
   1f2e2:	bne.w	1f6e0 <hash_extent_data_ref@@Base+0xc10>
   1f2e6:	ldrb.w	r3, [sp, #108]	; 0x6c
   1f2ea:	cmp	r3, #168	; 0xa8
   1f2ec:	bne.w	1f6e0 <hash_extent_data_ref@@Base+0xc10>
   1f2f0:	ldrd	r0, r1, [sp, #192]	; 0xc0
   1f2f4:	ldr.w	r3, [sp, #113]	; 0x71
   1f2f8:	ldr.w	r2, [sp, #109]	; 0x6d
   1f2fc:	cmp	r1, r3
   1f2fe:	it	eq
   1f300:	cmpeq	r0, r2
   1f302:	bne.w	1f6e0 <hash_extent_data_ref@@Base+0xc10>
   1f306:	movs	r5, #0
   1f308:	ldr.w	r2, [pc, #1140]	; 1f780 <hash_extent_data_ref@@Base+0xcb0>
   1f30c:	mov.w	r3, #2032	; 0x7f0
   1f310:	ldr.w	r1, [pc, #1136]	; 1f784 <hash_extent_data_ref@@Base+0xcb4>
   1f314:	mov.w	r8, #0
   1f318:	ldr.w	r0, [pc, #1132]	; 1f788 <hash_extent_data_ref@@Base+0xcb8>
   1f31c:	add	r2, pc
   1f31e:	adds	r2, #207	; 0xcf
   1f320:	add	r1, pc
   1f322:	add	r0, pc
   1f324:	str	r5, [sp, #0]
   1f326:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1f32a:	ldr	r7, [r4, #32]
   1f32c:	ldr	r3, [r4, #0]
   1f32e:	add.w	fp, r3, #96	; 0x60
   1f332:	str	r3, [sp, #80]	; 0x50
   1f334:	movs	r3, #25
   1f336:	mla	r3, r3, r7, fp
   1f33a:	add.w	r2, r3, #101	; 0x65
   1f33e:	ldr.w	r1, [r3, #122]	; 0x7a
   1f342:	cmp	r1, #23
   1f344:	bhi.n	1f360 <hash_extent_data_ref@@Base+0x890>
   1f346:	ldr.w	r0, [pc, #1092]	; 1f78c <hash_extent_data_ref@@Base+0xcbc>
   1f34a:	movs	r2, #24
   1f34c:	mvn.w	r5, #116	; 0x74
   1f350:	add	r0, pc
   1f352:	bl	16b70 <__btrfs_error@@Base>
   1f356:	b.n	1f06c <hash_extent_data_ref@@Base+0x59c>
   1f358:	mov.w	r8, #1
   1f35c:	movs	r5, #0
   1f35e:	b.n	1f32c <hash_extent_data_ref@@Base+0x85c>
   1f360:	ldr.w	r3, [r2, #17]
   1f364:	adds	r3, #101	; 0x65
   1f366:	str	r3, [sp, #72]	; 0x48
   1f368:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1f36c:	cmp	r3, #0
   1f36e:	it	eq
   1f370:	cmpeq.w	r2, #256	; 0x100
   1f374:	bcs.n	1f3d4 <hash_extent_data_ref@@Base+0x904>
   1f376:	ldrb.w	r3, [sp, #108]	; 0x6c
   1f37a:	cmp	r3, #168	; 0xa8
   1f37c:	bne.n	1f3d4 <hash_extent_data_ref@@Base+0x904>
   1f37e:	ldr.w	r0, [pc, #1040]	; 1f790 <hash_extent_data_ref@@Base+0xcc0>
   1f382:	cmp	r1, #41	; 0x29
   1f384:	ldr.w	r2, [pc, #1036]	; 1f794 <hash_extent_data_ref@@Base+0xcc4>
   1f388:	movw	r3, #2063	; 0x80f
   1f38c:	add	r0, pc
   1f38e:	ite	hi
   1f390:	movhi	r1, #0
   1f392:	movls	r1, #1
   1f394:	str	r0, [sp, #64]	; 0x40
   1f396:	str	r1, [sp, #0]
   1f398:	mov	r1, r0
   1f39a:	ldr	r0, [pc, #1020]	; (1f798 <hash_extent_data_ref@@Base+0xcc8>)
   1f39c:	add	r2, pc
   1f39e:	adds	r2, #207	; 0xcf
   1f3a0:	str	r2, [sp, #84]	; 0x54
   1f3a2:	add	r0, pc
   1f3a4:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1f3a8:	ldr	r3, [sp, #72]	; 0x48
   1f3aa:	ldrd	r0, r1, [sp, #216]	; 0xd8
   1f3ae:	add	r3, fp
   1f3b0:	ldrb.w	r2, [r3, #41]	; 0x29
   1f3b4:	movs	r3, #0
   1f3b6:	cmp	r3, r1
   1f3b8:	ldr	r1, [sp, #64]	; 0x40
   1f3ba:	it	eq
   1f3bc:	cmpeq	r2, r0
   1f3be:	ldr	r0, [pc, #988]	; (1f79c <hash_extent_data_ref@@Base+0xccc>)
   1f3c0:	ldr	r2, [sp, #84]	; 0x54
   1f3c2:	ite	ne
   1f3c4:	movne	r3, #1
   1f3c6:	moveq	r3, #0
   1f3c8:	add	r0, pc
   1f3ca:	str	r3, [sp, #0]
   1f3cc:	movw	r3, #2065	; 0x811
   1f3d0:	bl	1ddcc <btrfs_create_tree@@Base+0x358>
   1f3d4:	ldr	r3, [sp, #72]	; 0x48
   1f3d6:	ldr.w	r9, [pc, #968]	; 1f7a0 <hash_extent_data_ref@@Base+0xcd0>
   1f3da:	add	r3, fp
   1f3dc:	str	r3, [sp, #84]	; 0x54
   1f3de:	ldr	r3, [sp, #72]	; 0x48
   1f3e0:	add	r9, pc
   1f3e2:	ldr	r0, [pc, #960]	; (1f7a4 <hash_extent_data_ref@@Base+0xcd4>)
   1f3e4:	ldr.w	r3, [fp, r3]
   1f3e8:	add	r0, pc
   1f3ea:	str	r3, [sp, #64]	; 0x40
   1f3ec:	ldr	r3, [sp, #84]	; 0x54
   1f3ee:	ldr	r3, [r3, #4]
   1f3f0:	str	r3, [sp, #68]	; 0x44
   1f3f2:	ldr	r3, [pc, #948]	; (1f7a8 <hash_extent_data_ref@@Base+0xcd8>)
   1f3f4:	add	r3, pc
   1f3f6:	str	r3, [sp, #88]	; 0x58
   1f3f8:	add.w	r2, r3, #207	; 0xcf
   1f3fc:	ldrd	r3, r1, [sp, #64]	; 0x40
   1f400:	str	r2, [sp, #92]	; 0x5c
   1f402:	orrs	r3, r1
   1f404:	mov	r1, r9
   1f406:	ite	eq
   1f408:	moveq	r3, #1
   1f40a:	movne	r3, #0
   1f40c:	str	r3, [sp, #0]
   1f40e:	movw	r3, #2069	; 0x815
   1f412:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1f416:	ldr	r3, [sp, #64]	; 0x40
   1f418:	adds.w	r1, r3, #4294967295	; 0xffffffff
   1f41c:	ldr	r3, [sp, #68]	; 0x44
   1f41e:	adc.w	ip, r3, #4294967295	; 0xffffffff
   1f422:	ldrd	r2, r3, [sp, #64]	; 0x40
   1f426:	cmp	r3, #0
   1f428:	it	eq
   1f42a:	cmpeq	r2, #1
   1f42c:	beq.n	1f490 <hash_extent_data_ref@@Base+0x9c0>
   1f42e:	ldr	r0, [sp, #96]	; 0x60
   1f430:	cbz	r0, 1f47c <hash_extent_data_ref@@Base+0x9ac>
   1f432:	ldr	r0, [pc, #888]	; (1f7ac <hash_extent_data_ref@@Base+0xcdc>)
   1f434:	eor.w	r3, r8, #1
   1f438:	ldr	r2, [sp, #92]	; 0x5c
   1f43a:	mov	r1, r9
   1f43c:	str	r3, [sp, #0]
   1f43e:	add	r0, pc
   1f440:	movw	r3, #2078	; 0x81e
   1f444:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1f448:	cmp.w	r8, #0
   1f44c:	beq.w	1f06c <hash_extent_data_ref@@Base+0x59c>
   1f450:	ldr	r3, [sp, #76]	; 0x4c
   1f452:	mov	r2, r4
   1f454:	mov	r1, sl
   1f456:	mov	r0, r6
   1f458:	str	r3, [sp, #0]
   1f45a:	ldr	r3, [sp, #96]	; 0x60
   1f45c:	bl	1e39c <btrfs_create_tree@@Base+0x928>
   1f460:	ldr	r2, [pc, #844]	; (1f7b0 <hash_extent_data_ref@@Base+0xce0>)
   1f462:	ldr	r1, [pc, #848]	; (1f7b4 <hash_extent_data_ref@@Base+0xce4>)
   1f464:	movw	r3, #2087	; 0x827
   1f468:	add	r2, pc
   1f46a:	adds	r2, #207	; 0xcf
   1f46c:	add	r1, pc
   1f46e:	mov	r5, r0
   1f470:	str	r0, [sp, #0]
   1f472:	ldr	r0, [pc, #836]	; (1f7b8 <hash_extent_data_ref@@Base+0xce8>)
   1f474:	add	r0, pc
   1f476:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1f47a:	b.n	1f06c <hash_extent_data_ref@@Base+0x59c>
   1f47c:	ldr	r3, [sp, #72]	; 0x48
   1f47e:	ldr	r0, [sp, #80]	; 0x50
   1f480:	str.w	r1, [fp, r3]
   1f484:	ldr	r3, [sp, #84]	; 0x54
   1f486:	str.w	ip, [r3, #4]
   1f48a:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   1f48e:	b.n	1f448 <hash_extent_data_ref@@Base+0x978>
   1f490:	cmp.w	r8, #0
   1f494:	beq.w	1f6b2 <hash_extent_data_ref@@Base+0xbe2>
   1f498:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1f49c:	cmp	r3, #0
   1f49e:	it	eq
   1f4a0:	cmpeq.w	r2, #256	; 0x100
   1f4a4:	bcc.w	1f690 <hash_extent_data_ref@@Base+0xbc0>
   1f4a8:	ldr.w	fp, [r4]
   1f4ac:	add	r1, sp, #120	; 0x78
   1f4ae:	ldr	r5, [sp, #96]	; 0x60
   1f4b0:	ldr	r2, [r4, #32]
   1f4b2:	mov	r0, fp
   1f4b4:	bl	1dccc <btrfs_create_tree@@Base+0x258>
   1f4b8:	add.w	r0, fp, #96	; 0x60
   1f4bc:	cmp	r5, #0
   1f4be:	beq.w	1f646 <hash_extent_data_ref@@Base+0xb76>
   1f4c2:	ldrb	r3, [r0, r5]
   1f4c4:	add	r0, r5
   1f4c6:	cmp	r3, #178	; 0xb2
   1f4c8:	ite	eq
   1f4ca:	ldreq.w	r3, [r0, #25]
   1f4ce:	ldrne.w	r3, [r0, #9]
   1f4d2:	subs	r3, #1
   1f4d4:	it	ne
   1f4d6:	movne	r3, #1
   1f4d8:	ldr	r2, [pc, #736]	; (1f7bc <hash_extent_data_ref@@Base+0xcec>)
   1f4da:	ldr	r1, [pc, #740]	; (1f7c0 <hash_extent_data_ref@@Base+0xcf0>)
   1f4dc:	ldr	r0, [pc, #740]	; (1f7c4 <hash_extent_data_ref@@Base+0xcf4>)
   1f4de:	add	r2, pc
   1f4e0:	adds	r2, #207	; 0xcf
   1f4e2:	add	r1, pc
   1f4e4:	add	r0, pc
   1f4e6:	str	r3, [sp, #0]
   1f4e8:	movw	r3, #2093	; 0x82d
   1f4ec:	str	r2, [sp, #72]	; 0x48
   1f4ee:	str	r1, [sp, #64]	; 0x40
   1f4f0:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1f4f4:	ldr	r0, [sp, #96]	; 0x60
   1f4f6:	ldr	r3, [r4, #32]
   1f4f8:	ldr	r1, [sp, #64]	; 0x40
   1f4fa:	ldr	r2, [sp, #72]	; 0x48
   1f4fc:	cmp	r0, #0
   1f4fe:	beq.w	1f694 <hash_extent_data_ref@@Base+0xbc4>
   1f502:	subs	r7, r7, r3
   1f504:	ldr	r0, [pc, #704]	; (1f7c8 <hash_extent_data_ref@@Base+0xcf8>)
   1f506:	mov.w	r3, #2096	; 0x830
   1f50a:	it	ne
   1f50c:	movne	r7, #1
   1f50e:	add	r0, pc
   1f510:	str	r7, [sp, #0]
   1f512:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1f516:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1f51a:	cmp	r3, #0
   1f51c:	it	eq
   1f51e:	cmpeq.w	r2, #256	; 0x100
   1f522:	bcs.w	1f6be <hash_extent_data_ref@@Base+0xbee>
   1f526:	ldr	r3, [sp, #192]	; 0xc0
   1f528:	ldr	r0, [r6, #0]
   1f52a:	str	r3, [sp, #0]
   1f52c:	ldrd	r2, r3, [sp, #56]	; 0x38
   1f530:	bl	1b920 <btrfs_find_tree_block@@Base>
   1f534:	mov	r5, r0
   1f536:	cmp	r0, #0
   1f538:	beq.w	1f6be <hash_extent_data_ref@@Base+0xbee>
   1f53c:	movs	r2, #0
   1f53e:	movs	r3, #0
   1f540:	bl	1cc0c <btrfs_buffer_uptodate@@Base>
   1f544:	cmp	r0, #0
   1f546:	beq.w	1f6b8 <hash_extent_data_ref@@Base+0xbe8>
   1f54a:	ldr.w	r3, [r5, #188]	; 0xbc
   1f54e:	mov.w	r1, #4294967295	; 0xffffffff
   1f552:	ldr.w	r2, [r5, #184]	; 0xb8
   1f556:	mvn.w	r0, #5
   1f55a:	cmp	r3, r1
   1f55c:	it	eq
   1f55e:	cmpeq	r2, r0
   1f560:	beq.w	1f6b8 <hash_extent_data_ref@@Base+0xbe8>
   1f564:	ldrd	r2, r3, [r6, #8]
   1f568:	ldr.w	r1, [r5, #180]	; 0xb4
   1f56c:	ldr.w	r0, [r5, #176]	; 0xb0
   1f570:	cmp	r1, r3
   1f572:	it	eq
   1f574:	cmpeq	r0, r2
   1f576:	bne.w	1f6b8 <hash_extent_data_ref@@Base+0xbe8>
   1f57a:	ldr.w	r1, [r5, #152]	; 0x98
   1f57e:	movs	r3, #0
   1f580:	and.w	r2, r1, #1
   1f584:	orrs	r3, r2
   1f586:	bne.w	1f6b8 <hash_extent_data_ref@@Base+0xbe8>
   1f58a:	mov	r0, r5
   1f58c:	mov.w	r9, #1
   1f590:	bl	1cc04 <clean_tree_block@@Base>
   1f594:	mov	r0, r5
   1f596:	bl	16314 <free_extent_buffer@@Base>
   1f59a:	ldr	r5, [pc, #560]	; (1f7cc <hash_extent_data_ref@@Base+0xcfc>)
   1f59c:	movs	r3, #0
   1f59e:	ldr	r7, [pc, #560]	; (1f7d0 <hash_extent_data_ref@@Base+0xd00>)
   1f5a0:	add	r5, pc
   1f5a2:	ldr	r0, [pc, #560]	; (1f7d4 <hash_extent_data_ref@@Base+0xd04>)
   1f5a4:	adds	r5, #207	; 0xcf
   1f5a6:	add	r7, pc
   1f5a8:	add	r0, pc
   1f5aa:	str	r3, [sp, #0]
   1f5ac:	mov	r2, r5
   1f5ae:	movw	r3, #2108	; 0x83c
   1f5b2:	mov	r1, r7
   1f5b4:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1f5b8:	str.w	r8, [sp]
   1f5bc:	mov	r2, r4
   1f5be:	ldr	r3, [r4, #32]
   1f5c0:	mov	r1, sl
   1f5c2:	mov	r0, r6
   1f5c4:	bl	1aaec <btrfs_del_items@@Base>
   1f5c8:	ldr.w	r8, [pc, #524]	; 1f7d8 <hash_extent_data_ref@@Base+0xd08>
   1f5cc:	mov.w	r3, #2112	; 0x840
   1f5d0:	mov	r2, r5
   1f5d2:	add	r8, pc
   1f5d4:	mov	r1, r7
   1f5d6:	str	r0, [sp, #0]
   1f5d8:	mov	r0, r8
   1f5da:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1f5de:	mov	r0, r4
   1f5e0:	bl	1754c <btrfs_release_path@@Base>
   1f5e4:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1f5e8:	cmp	r3, #0
   1f5ea:	it	eq
   1f5ec:	cmpeq.w	r2, #256	; 0x100
   1f5f0:	bcc.n	1f614 <hash_extent_data_ref@@Base+0xb44>
   1f5f2:	ldrd	r2, r3, [sp, #192]	; 0xc0
   1f5f6:	mov	r0, r6
   1f5f8:	strd	r2, r3, [sp]
   1f5fc:	ldrd	r2, r3, [sp, #56]	; 0x38
   1f600:	bl	2de68 <btrfs_del_csums@@Base>
   1f604:	movw	r3, #2117	; 0x845
   1f608:	mov	r2, r5
   1f60a:	mov	r1, r7
   1f60c:	str	r0, [sp, #0]
   1f60e:	mov	r0, r8
   1f610:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1f614:	ldrd	r2, r3, [sp, #192]	; 0xc0
   1f618:	mov	r0, r6
   1f61a:	strd	r2, r3, [sp]
   1f61e:	ldrd	r2, r3, [sp, #56]	; 0x38
   1f622:	bl	2c178 <add_to_free_space_tree@@Base>
   1f626:	mov	r5, r0
   1f628:	cmp	r0, #0
   1f62a:	bne.w	1f06c <hash_extent_data_ref@@Base+0x59c>
   1f62e:	ldrd	r2, r3, [sp, #192]	; 0xc0
   1f632:	strd	r0, r9, [sp, #8]
   1f636:	ldr	r0, [r6, #0]
   1f638:	strd	r2, r3, [sp]
   1f63c:	ldrd	r2, r3, [sp, #56]	; 0x38
   1f640:	bl	1e734 <btrfs_lookup_block_group@@Base+0x188>
   1f644:	b.n	1f06c <hash_extent_data_ref@@Base+0x59c>
   1f646:	ldrb.w	r3, [sp, #128]	; 0x80
   1f64a:	cmp	r3, #178	; 0xb2
   1f64c:	bne.n	1f662 <hash_extent_data_ref@@Base+0xb92>
   1f64e:	ldr	r3, [r4, #32]
   1f650:	movs	r2, #25
   1f652:	mla	r3, r2, r3, r0
   1f656:	ldr.w	r5, [r3, #118]	; 0x76
   1f65a:	add	r0, r5
   1f65c:	ldr.w	r3, [r0, #125]	; 0x7d
   1f660:	b.n	1f4d2 <hash_extent_data_ref@@Base+0xa02>
   1f662:	cmp	r3, #184	; 0xb8
   1f664:	bne.n	1f67a <hash_extent_data_ref@@Base+0xbaa>
   1f666:	ldr	r3, [r4, #32]
   1f668:	movs	r2, #25
   1f66a:	mla	r3, r2, r3, r0
   1f66e:	ldr.w	r5, [r3, #118]	; 0x76
   1f672:	add	r0, r5
   1f674:	ldr.w	r3, [r0, #101]	; 0x65
   1f678:	b.n	1f4d2 <hash_extent_data_ref@@Base+0xa02>
   1f67a:	ldr	r2, [sp, #88]	; 0x58
   1f67c:	movs	r3, #1
   1f67e:	ldr	r0, [pc, #348]	; (1f7dc <hash_extent_data_ref@@Base+0xd0c>)
   1f680:	mov	r1, r9
   1f682:	str	r3, [sp, #0]
   1f684:	adds	r2, #221	; 0xdd
   1f686:	add	r0, pc
   1f688:	movw	r3, #777	; 0x309
   1f68c:	bl	1dfec <btrfs_create_tree@@Base+0x578>
   1f690:	movs	r3, #0
   1f692:	b.n	1f4d8 <hash_extent_data_ref@@Base+0xa08>
   1f694:	adds	r0, r7, #1
   1f696:	mov.w	r8, #2
   1f69a:	subs	r3, r0, r3
   1f69c:	ldr	r0, [pc, #320]	; (1f7e0 <hash_extent_data_ref@@Base+0xd10>)
   1f69e:	it	ne
   1f6a0:	movne	r3, #1
   1f6a2:	add	r0, pc
   1f6a4:	str	r3, [sp, #0]
   1f6a6:	movw	r3, #2098	; 0x832
   1f6aa:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1f6ae:	str	r7, [r4, #32]
   1f6b0:	b.n	1f516 <hash_extent_data_ref@@Base+0xa46>
   1f6b2:	mov.w	r8, #1
   1f6b6:	b.n	1f516 <hash_extent_data_ref@@Base+0xa46>
   1f6b8:	mov	r0, r5
   1f6ba:	bl	16314 <free_extent_buffer@@Base>
   1f6be:	movs	r3, #1
   1f6c0:	str	r3, [sp, #8]
   1f6c2:	ldrd	r2, r3, [sp, #192]	; 0xc0
   1f6c6:	mov.w	r9, #0
   1f6ca:	ldr	r0, [r6, #0]
   1f6cc:	strd	r2, r3, [sp]
   1f6d0:	ldrd	r2, r3, [sp, #56]	; 0x38
   1f6d4:	bl	1e644 <btrfs_lookup_block_group@@Base+0x98>
   1f6d8:	b.n	1f59a <hash_extent_data_ref@@Base+0xaca>
   1f6da:	mvn.w	r5, #11
   1f6de:	b.n	1f072 <hash_extent_data_ref@@Base+0x5a2>
   1f6e0:	mov	r0, r4
   1f6e2:	bl	1754c <btrfs_release_path@@Base>
   1f6e6:	movs	r3, #168	; 0xa8
   1f6e8:	strb.w	r3, [sp, #108]	; 0x6c
   1f6ec:	movs	r2, #1
   1f6ee:	ldr	r3, [sp, #192]	; 0xc0
   1f6f0:	mov	r1, sl
   1f6f2:	mov	r0, r6
   1f6f4:	str.w	r3, [sp, #109]	; 0x6d
   1f6f8:	ldr	r3, [sp, #196]	; 0xc4
   1f6fa:	str.w	r3, [sp, #113]	; 0x71
   1f6fe:	mov.w	r3, #4294967295	; 0xffffffff
   1f702:	strd	r3, r2, [sp]
   1f706:	add	r2, sp, #100	; 0x64
   1f708:	mov	r3, r4
   1f70a:	bl	19930 <btrfs_search_slot@@Base>
   1f70e:	mov	r5, r0
   1f710:	cmp	r5, #0
   1f712:	beq.w	1f306 <hash_extent_data_ref@@Base+0x836>
   1f716:	ldr	r2, [sp, #72]	; 0x48
   1f718:	movs	r1, #1
   1f71a:	ldr	r3, [pc, #68]	; (1f760 <hash_extent_data_ref@@Base+0xc90>)
   1f71c:	ldr	r0, [r2, r3]
   1f71e:	ldrd	r2, r3, [sp, #56]	; 0x38
   1f722:	strd	r2, r3, [sp]
   1f726:	mov	r3, r5
   1f728:	ldr	r2, [pc, #184]	; (1f7e4 <hash_extent_data_ref@@Base+0xd14>)
   1f72a:	ldr	r0, [r0, #0]
   1f72c:	add	r2, pc
   1f72e:	blx	8860 <__fprintf_chk@plt+0x4>
   1f732:	ldr	r0, [r4, #0]
   1f734:	bl	24718 <btrfs_print_leaf@@Base>
   1f738:	b.n	1f308 <hash_extent_data_ref@@Base+0x838>
   1f73a:	mov	r0, r5
   1f73c:	add	sp, #148	; 0x94
   1f73e:	vpop	{d8}
   1f742:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f746:	nop
   1f748:	ldr	r6, [pc, #696]	; (1fa04 <btrfs_inc_extent_ref@@Base+0x21c>)
   1f74a:	movs	r4, r0
   1f74c:	ldr	r6, [pc, #680]	; (1f9f8 <btrfs_inc_extent_ref@@Base+0x210>)
   1f74e:	movs	r4, r0
   1f750:	lsls	r0, r4, #8
   1f752:	movs	r0, r0
   1f754:	bgt.n	1f776 <hash_extent_data_ref@@Base+0xca6>
   1f756:	movs	r1, r0
   1f758:	bgt.n	1f746 <hash_extent_data_ref@@Base+0xc76>
   1f75a:	movs	r1, r0
   1f75c:	b.n	1fdd8 <btrfs_lookup_extent_info@@Base+0x154>
   1f75e:	movs	r1, r0
   1f760:	lsls	r0, r6, #8
   1f762:	movs	r0, r0
   1f764:	bgt.n	1f71a <hash_extent_data_ref@@Base+0xc4a>
   1f766:	movs	r1, r0
   1f768:	ble.n	1f7ac <hash_extent_data_ref@@Base+0xcdc>
   1f76a:	movs	r1, r0
   1f76c:	ldr	r5, [pc, #40]	; (1f798 <hash_extent_data_ref@@Base+0xcc8>)
   1f76e:	movs	r4, r0
   1f770:	b.n	1f930 <btrfs_inc_extent_ref@@Base+0x148>
   1f772:	movs	r1, r0
   1f774:	bls.n	1f6ca <hash_extent_data_ref@@Base+0xbfa>
   1f776:	movs	r1, r0
   1f778:	cbz	r3, 1f7ca <hash_extent_data_ref@@Base+0xcfa>
   1f77a:	movs	r1, r0
   1f77c:	add	r2, pc, #928	; (adr r2, 1fb20 <btrfs_inc_extent_ref@@Base+0x338>)
   1f77e:	movs	r1, r0
   1f780:	svc	134	; 0x86
   1f782:	movs	r1, r0
   1f784:	bhi.n	1f82a <btrfs_inc_extent_ref@@Base+0x42>
   1f786:	movs	r1, r0
   1f788:	add	r1, pc, #776	; (adr r1, 1fa94 <btrfs_inc_extent_ref@@Base+0x2ac>)
   1f78a:	movs	r1, r0
   1f78c:	bge.n	1f838 <btrfs_inc_extent_ref@@Base+0x50>
   1f78e:	movs	r1, r0
   1f790:	bvc.n	1f75e <hash_extent_data_ref@@Base+0xc8e>
   1f792:	movs	r1, r0
   1f794:	svc	6
   1f796:	movs	r1, r0
   1f798:	bge.n	1f836 <btrfs_inc_extent_ref@@Base+0x4e>
   1f79a:	movs	r1, r0
   1f79c:	bge.n	1f83a <btrfs_inc_extent_ref@@Base+0x52>
   1f79e:	movs	r1, r0
   1f7a0:	bvc.n	1f6c6 <hash_extent_data_ref@@Base+0xbf6>
   1f7a2:	movs	r1, r0
   1f7a4:	bhi.n	1f6ce <hash_extent_data_ref@@Base+0xbfe>
   1f7a6:	movs	r1, r0
   1f7a8:	udf	#174	; 0xae
   1f7aa:	movs	r1, r0
   1f7ac:	bge.n	1f7c4 <hash_extent_data_ref@@Base+0xcf4>
   1f7ae:	movs	r1, r0
   1f7b0:	udf	#58	; 0x3a
   1f7b2:	movs	r1, r0
   1f7b4:	bvc.n	1f7c2 <hash_extent_data_ref@@Base+0xcf2>
   1f7b6:	movs	r1, r0
   1f7b8:	add	r0, pc, #448	; (adr r0, 1f97c <btrfs_inc_extent_ref@@Base+0x194>)
   1f7ba:	movs	r1, r0
   1f7bc:	ble.n	1f748 <hash_extent_data_ref@@Base+0xc78>
   1f7be:	movs	r1, r0
   1f7c0:	bvs.n	1f6e2 <hash_extent_data_ref@@Base+0xc12>
   1f7c2:	movs	r1, r0
   1f7c4:	bls.n	1f8ac <btrfs_inc_extent_ref@@Base+0xc4>
   1f7c6:	movs	r1, r0
   1f7c8:	bls.n	1f6d6 <hash_extent_data_ref@@Base+0xc06>
   1f7ca:	movs	r1, r0
   1f7cc:	ble.n	1f7d4 <hash_extent_data_ref@@Base+0xd04>
   1f7ce:	movs	r1, r0
   1f7d0:	bpl.n	1f76a <hash_extent_data_ref@@Base+0xc9a>
   1f7d2:	movs	r1, r0
   1f7d4:	bls.n	1f82e <btrfs_inc_extent_ref@@Base+0x46>
   1f7d6:	movs	r1, r0
   1f7d8:	ldr	r7, [sp, #72]	; 0x48
   1f7da:	movs	r1, r0
   1f7dc:	bhi.n	1f876 <btrfs_inc_extent_ref@@Base+0x8e>
   1f7de:	movs	r1, r0
   1f7e0:	bhi.n	1f802 <btrfs_inc_extent_ref@@Base+0x1a>
   1f7e2:	movs	r1, r0
   1f7e4:	bpl.n	1f77e <hash_extent_data_ref@@Base+0xcae>
   1f7e6:	movs	r1, r0

0001f7e8 <btrfs_inc_extent_ref@@Base>:
   1f7e8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f7ec:	sub	sp, #100	; 0x64
   1f7ee:	mov	r6, r0
   1f7f0:	mov	r7, r1
   1f7f2:	strd	r2, r3, [sp, #56]	; 0x38
   1f7f6:	ldr.w	r2, [pc, #1104]	; 1fc48 <btrfs_inc_extent_ref@@Base+0x460>
   1f7fa:	ldr.w	r3, [pc, #1104]	; 1fc4c <btrfs_inc_extent_ref@@Base+0x464>
   1f7fe:	add	r2, pc
   1f800:	ldrd	sl, fp, [sp, #144]	; 0x90
   1f804:	ldr	r3, [r2, r3]
   1f806:	ldr	r3, [r3, #0]
   1f808:	str	r3, [sp, #92]	; 0x5c
   1f80a:	mov.w	r3, #0
   1f80e:	bl	17544 <btrfs_alloc_path@@Base>
   1f812:	mov	r5, r0
   1f814:	cmp	r0, #0
   1f816:	beq.w	1fc3a <btrfs_inc_extent_ref@@Base+0x452>
   1f81a:	mov.w	r8, #1
   1f81e:	strb.w	r8, [r0, #64]	; 0x40
   1f822:	ldr.w	r3, [r7, #464]	; 0x1d0
   1f826:	ldr.w	r9, [r3, #24]
   1f82a:	ldrd	r3, r4, [sp, #168]	; 0xa8
   1f82e:	str.w	r8, [sp, #48]	; 0x30
   1f832:	mov	r1, r9
   1f834:	strd	sl, fp, [sp, #16]
   1f838:	strd	r3, r4, [sp, #40]	; 0x28
   1f83c:	ldrd	r3, r4, [sp, #160]	; 0xa0
   1f840:	strd	r3, r4, [sp, #32]
   1f844:	ldrd	r3, r4, [sp, #152]	; 0x98
   1f848:	strd	r3, r4, [sp, #24]
   1f84c:	ldrd	r2, r3, [sp, #136]	; 0x88
   1f850:	strd	r2, r3, [sp, #8]
   1f854:	mov	r2, r0
   1f856:	ldr	r3, [sp, #56]	; 0x38
   1f858:	mov	r0, r6
   1f85a:	str	r3, [sp, #0]
   1f85c:	ldr	r3, [sp, #60]	; 0x3c
   1f85e:	str	r3, [sp, #4]
   1f860:	add	r3, sp, #72	; 0x48
   1f862:	bl	1eb48 <hash_extent_data_ref@@Base+0x78>
   1f866:	mov	r4, r0
   1f868:	cmp	r0, #0
   1f86a:	bne.w	1f9a8 <btrfs_inc_extent_ref@@Base+0x1c0>
   1f86e:	ldrd	r3, r4, [sp, #160]	; 0xa0
   1f872:	ldr	r2, [pc, #988]	; (1fc50 <btrfs_inc_extent_ref@@Base+0x468>)
   1f874:	cmp	r4, #0
   1f876:	ldr	r1, [pc, #988]	; (1fc54 <btrfs_inc_extent_ref@@Base+0x46c>)
   1f878:	it	eq
   1f87a:	cmpeq.w	r3, #256	; 0x100
   1f87e:	ldr	r0, [pc, #984]	; (1fc58 <btrfs_inc_extent_ref@@Base+0x470>)
   1f880:	add	r2, pc
   1f882:	add	r1, pc
   1f884:	ite	cc
   1f886:	movcc	r3, r8
   1f888:	movcs	r3, #0
   1f88a:	adds	r2, #243	; 0xf3
   1f88c:	add	r0, pc
   1f88e:	str	r3, [sp, #0]
   1f890:	mov.w	r3, #1184	; 0x4a0
   1f894:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1f898:	ldr	r2, [sp, #72]	; 0x48
   1f89a:	mov	r3, r8
   1f89c:	mov	r1, r5
   1f89e:	mov	r0, r9
   1f8a0:	bl	1e07c <btrfs_create_tree@@Base+0x608>
   1f8a4:	mov	r4, r0
   1f8a6:	cmp	r0, #0
   1f8a8:	beq.w	1fa8e <btrfs_inc_extent_ref@@Base+0x2a6>
   1f8ac:	cmn.w	r4, #11
   1f8b0:	bne.w	1fa8e <btrfs_inc_extent_ref@@Base+0x2a6>
   1f8b4:	ldr	r0, [r5, #0]
   1f8b6:	movs	r2, #25
   1f8b8:	ldr	r3, [r5, #32]
   1f8ba:	add.w	r4, r0, #96	; 0x60
   1f8be:	mla	r3, r2, r3, r4
   1f8c2:	ldr.w	r2, [r3, #118]	; 0x76
   1f8c6:	adds	r2, #101	; 0x65
   1f8c8:	add.w	ip, r4, r2
   1f8cc:	ldr	r3, [r4, r2]
   1f8ce:	ldr.w	r1, [ip, #4]
   1f8d2:	adds	r3, #1
   1f8d4:	str	r3, [r4, r2]
   1f8d6:	adc.w	r1, r1, #0
   1f8da:	str.w	r1, [ip, #4]
   1f8de:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   1f8e2:	mov	r0, r5
   1f8e4:	bl	1754c <btrfs_release_path@@Base>
   1f8e8:	movs	r3, #1
   1f8ea:	strb.w	r3, [r5, #64]	; 0x40
   1f8ee:	ldr.w	r3, [r7, #464]	; 0x1d0
   1f8f2:	ldr	r7, [r3, #24]
   1f8f4:	ldrd	r3, r4, [sp, #160]	; 0xa0
   1f8f8:	cmp	r4, #0
   1f8fa:	add.w	r4, sp, #81	; 0x51
   1f8fe:	it	eq
   1f900:	cmpeq.w	r3, #256	; 0x100
   1f904:	bcc.w	1fbd4 <btrfs_inc_extent_ref@@Base+0x3ec>
   1f908:	ldr	r3, [sp, #56]	; 0x38
   1f90a:	str	r3, [sp, #72]	; 0x48
   1f90c:	ldr	r3, [sp, #60]	; 0x3c
   1f90e:	str	r3, [sp, #76]	; 0x4c
   1f910:	orrs.w	r3, sl, fp
   1f914:	beq.w	1fafe <btrfs_inc_extent_ref@@Base+0x316>
   1f918:	mov.w	r8, #4
   1f91c:	movs	r3, #184	; 0xb8
   1f91e:	str.w	sl, [sp, #81]	; 0x51
   1f922:	strb.w	r3, [sp, #80]	; 0x50
   1f926:	str.w	fp, [r4, #4]
   1f92a:	movs	r3, #1
   1f92c:	mov	r2, r5
   1f92e:	str	r3, [sp, #4]
   1f930:	mov	r1, r7
   1f932:	add	r3, sp, #68	; 0x44
   1f934:	mov	r0, r6
   1f936:	str	r3, [sp, #0]
   1f938:	add	r3, sp, #72	; 0x48
   1f93a:	str.w	r8, [sp, #68]	; 0x44
   1f93e:	bl	1a700 <btrfs_insert_empty_items@@Base>
   1f942:	mov	r4, r0
   1f944:	cbz	r0, 1f94e <btrfs_inc_extent_ref@@Base+0x166>
   1f946:	cmn.w	r0, #17
   1f94a:	bne.w	1fb4a <btrfs_inc_extent_ref@@Base+0x362>
   1f94e:	orrs.w	r3, sl, fp
   1f952:	ldr	r0, [r5, #0]
   1f954:	bne.w	1fb24 <btrfs_inc_extent_ref@@Base+0x33c>
   1f958:	add.w	r9, sp, #72	; 0x48
   1f95c:	mov.w	sl, #1
   1f960:	ldr	r3, [r5, #32]
   1f962:	add.w	r1, r0, #96	; 0x60
   1f966:	movs	r2, #25
   1f968:	cmn.w	r4, #17
   1f96c:	mla	r3, r2, r3, r1
   1f970:	ldr.w	r3, [r3, #118]	; 0x76
   1f974:	add.w	r3, r3, #101	; 0x65
   1f978:	add	r1, r3
   1f97a:	beq.w	1fb5a <btrfs_inc_extent_ref@@Base+0x372>
   1f97e:	cmp	r4, #0
   1f980:	bne.w	1fbcc <btrfs_inc_extent_ref@@Base+0x3e4>
   1f984:	ldr	r3, [sp, #152]	; 0x98
   1f986:	strb	r4, [r1, #25]
   1f988:	strb	r4, [r1, #26]
   1f98a:	str	r3, [r1, #0]
   1f98c:	ldr	r3, [sp, #156]	; 0x9c
   1f98e:	strb	r4, [r1, #27]
   1f990:	str	r3, [r1, #4]
   1f992:	ldr	r3, [sp, #160]	; 0xa0
   1f994:	str	r3, [r1, #8]
   1f996:	ldr	r3, [sp, #164]	; 0xa4
   1f998:	str	r3, [r1, #12]
   1f99a:	ldr	r3, [sp, #168]	; 0xa8
   1f99c:	str	r3, [r1, #16]
   1f99e:	ldr	r3, [sp, #172]	; 0xac
   1f9a0:	str	r3, [r1, #20]
   1f9a2:	movs	r3, #1
   1f9a4:	strb	r3, [r1, #24]
   1f9a6:	b.n	1fb44 <btrfs_inc_extent_ref@@Base+0x35c>
   1f9a8:	adds	r1, r0, #2
   1f9aa:	bne.w	1f8ac <btrfs_inc_extent_ref@@Base+0xc4>
   1f9ae:	ldr.w	r8, [r5]
   1f9b2:	movs	r2, #25
   1f9b4:	ldr	r3, [r5, #32]
   1f9b6:	add.w	r6, r8, #96	; 0x60
   1f9ba:	ldr	r4, [sp, #72]	; 0x48
   1f9bc:	mla	r3, r2, r3, r6
   1f9c0:	subs	r4, #101	; 0x65
   1f9c2:	ldr.w	r2, [r3, #118]	; 0x76
   1f9c6:	subs	r4, r4, r2
   1f9c8:	ldrd	r2, r3, [sp, #160]	; 0xa0
   1f9cc:	cmp	r3, #0
   1f9ce:	it	eq
   1f9d0:	cmpeq.w	r2, #256	; 0x100
   1f9d4:	bcs.n	1fac4 <btrfs_inc_extent_ref@@Base+0x2dc>
   1f9d6:	orrs.w	r3, sl, fp
   1f9da:	ite	ne
   1f9dc:	movne	r7, #182	; 0xb6
   1f9de:	moveq	r7, #176	; 0xb0
   1f9e0:	mov	r0, r7
   1f9e2:	bl	1e034 <btrfs_create_tree@@Base+0x5c0>
   1f9e6:	mov	r1, r5
   1f9e8:	mov	r2, r0
   1f9ea:	str	r0, [sp, #56]	; 0x38
   1f9ec:	mov	r0, r9
   1f9ee:	bl	19724 <btrfs_extend_item@@Base>
   1f9f2:	ldr	r2, [pc, #616]	; (1fc5c <btrfs_inc_extent_ref@@Base+0x474>)
   1f9f4:	ldr	r1, [pc, #616]	; (1fc60 <btrfs_inc_extent_ref@@Base+0x478>)
   1f9f6:	movw	r3, #1044	; 0x414
   1f9fa:	add	r2, pc
   1f9fc:	add.w	r2, r2, #272	; 0x110
   1fa00:	add	r1, pc
   1fa02:	str	r0, [sp, #0]
   1fa04:	ldr	r0, [pc, #604]	; (1fc64 <btrfs_inc_extent_ref@@Base+0x47c>)
   1fa06:	add	r0, pc
   1fa08:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1fa0c:	ldr	r3, [r5, #32]
   1fa0e:	movs	r0, #25
   1fa10:	mla	r3, r0, r3, r6
   1fa14:	ldr.w	r3, [r3, #118]	; 0x76
   1fa18:	adds	r3, #101	; 0x65
   1fa1a:	add.w	ip, r6, r3
   1fa1e:	add	r4, r3
   1fa20:	ldr	r2, [r6, r3]
   1fa22:	ldr.w	r1, [ip, #4]
   1fa26:	adds	r2, #1
   1fa28:	str	r2, [r6, r3]
   1fa2a:	adc.w	r1, r1, #0
   1fa2e:	str.w	r1, [ip, #4]
   1fa32:	ldr	r2, [r5, #32]
   1fa34:	mla	r0, r0, r2, r6
   1fa38:	ldr.w	r2, [r0, #122]	; 0x7a
   1fa3c:	add	r3, r2
   1fa3e:	ldr	r2, [sp, #56]	; 0x38
   1fa40:	subs	r3, r3, r2
   1fa42:	cmp	r4, r3
   1fa44:	bcs.n	1fa54 <btrfs_inc_extent_ref@@Base+0x26c>
   1fa46:	ldr	r1, [sp, #56]	; 0x38
   1fa48:	subs	r3, r3, r4
   1fa4a:	mov	r2, r4
   1fa4c:	mov	r0, r8
   1fa4e:	add	r1, r4
   1fa50:	bl	16a80 <memmove_extent_buffer@@Base>
   1fa54:	cmp	r7, #178	; 0xb2
   1fa56:	add.w	r3, r6, r4
   1fa5a:	strb	r7, [r6, r4]
   1fa5c:	bne.n	1fad0 <btrfs_inc_extent_ref@@Base+0x2e8>
   1fa5e:	ldr	r2, [sp, #152]	; 0x98
   1fa60:	adds	r4, #1
   1fa62:	adds	r3, r6, r4
   1fa64:	movs	r1, #1
   1fa66:	str	r2, [r6, r4]
   1fa68:	ldr	r2, [sp, #156]	; 0x9c
   1fa6a:	strb	r1, [r3, #24]
   1fa6c:	str	r2, [r3, #4]
   1fa6e:	ldr	r2, [sp, #160]	; 0xa0
   1fa70:	str	r2, [r3, #8]
   1fa72:	ldr	r2, [sp, #164]	; 0xa4
   1fa74:	str	r2, [r3, #12]
   1fa76:	ldr	r2, [sp, #168]	; 0xa8
   1fa78:	str	r2, [r3, #16]
   1fa7a:	ldr	r2, [sp, #172]	; 0xac
   1fa7c:	str	r2, [r3, #20]
   1fa7e:	movs	r2, #0
   1fa80:	strb	r2, [r3, #25]
   1fa82:	strb	r2, [r3, #26]
   1fa84:	strb	r2, [r3, #27]
   1fa86:	mov	r0, r8
   1fa88:	movs	r4, #0
   1fa8a:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   1fa8e:	mov	r0, r5
   1fa90:	bl	17572 <btrfs_free_path@@Base>
   1fa94:	ldr	r2, [pc, #464]	; (1fc68 <btrfs_inc_extent_ref@@Base+0x480>)
   1fa96:	ldr	r1, [pc, #468]	; (1fc6c <btrfs_inc_extent_ref@@Base+0x484>)
   1fa98:	movw	r3, #1282	; 0x502
   1fa9c:	ldr	r0, [pc, #464]	; (1fc70 <btrfs_inc_extent_ref@@Base+0x488>)
   1fa9e:	add	r2, pc
   1faa0:	add.w	r2, r2, #322	; 0x142
   1faa4:	add	r1, pc
   1faa6:	add	r0, pc
   1faa8:	str	r4, [sp, #0]
   1faaa:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1faae:	ldr	r2, [pc, #452]	; (1fc74 <btrfs_inc_extent_ref@@Base+0x48c>)
   1fab0:	ldr	r3, [pc, #408]	; (1fc4c <btrfs_inc_extent_ref@@Base+0x464>)
   1fab2:	add	r2, pc
   1fab4:	ldr	r3, [r2, r3]
   1fab6:	ldr	r2, [r3, #0]
   1fab8:	ldr	r3, [sp, #92]	; 0x5c
   1faba:	eors	r2, r3
   1fabc:	beq.w	1fc40 <btrfs_inc_extent_ref@@Base+0x458>
   1fac0:	blx	8510 <__stack_chk_fail@plt>
   1fac4:	orrs.w	r3, sl, fp
   1fac8:	ite	ne
   1faca:	movne	r7, #184	; 0xb8
   1facc:	moveq	r7, #178	; 0xb2
   1face:	b.n	1f9e0 <btrfs_inc_extent_ref@@Base+0x1f8>
   1fad0:	cmp	r7, #184	; 0xb8
   1fad2:	add.w	r2, r3, #1
   1fad6:	bne.n	1faee <btrfs_inc_extent_ref@@Base+0x306>
   1fad8:	movs	r1, #0
   1fada:	movs	r0, #1
   1fadc:	strb	r1, [r3, #10]
   1fade:	strb	r0, [r3, #9]
   1fae0:	strb	r1, [r3, #11]
   1fae2:	strb	r1, [r3, #12]
   1fae4:	str.w	sl, [r3, #1]
   1fae8:	str.w	fp, [r2, #4]
   1faec:	b.n	1fa86 <btrfs_inc_extent_ref@@Base+0x29e>
   1faee:	cmp	r7, #182	; 0xb6
   1faf0:	beq.n	1fae4 <btrfs_inc_extent_ref@@Base+0x2fc>
   1faf2:	ldr	r1, [sp, #152]	; 0x98
   1faf4:	str.w	r1, [r3, #1]
   1faf8:	ldr	r3, [sp, #156]	; 0x9c
   1fafa:	str	r3, [r2, #4]
   1fafc:	b.n	1fa86 <btrfs_inc_extent_ref@@Base+0x29e>
   1fafe:	movs	r3, #178	; 0xb2
   1fb00:	strb.w	r3, [sp, #80]	; 0x50
   1fb04:	ldrd	r2, r3, [sp, #168]	; 0xa8
   1fb08:	mov.w	r8, #28
   1fb0c:	ldrd	r0, r1, [sp, #152]	; 0x98
   1fb10:	strd	r2, r3, [sp]
   1fb14:	ldrd	r2, r3, [sp, #160]	; 0xa0
   1fb18:	bl	1ead0 <hash_extent_data_ref@@Base>
   1fb1c:	str.w	r0, [sp, #81]	; 0x51
   1fb20:	str	r1, [r4, #4]
   1fb22:	b.n	1f92a <btrfs_inc_extent_ref@@Base+0x142>
   1fb24:	ldr	r3, [r5, #32]
   1fb26:	add.w	r2, r0, #96	; 0x60
   1fb2a:	movs	r1, #25
   1fb2c:	mla	r3, r1, r3, r2
   1fb30:	ldr.w	r3, [r3, #118]	; 0x76
   1fb34:	adds	r3, #101	; 0x65
   1fb36:	adds	r1, r2, r3
   1fb38:	cbnz	r4, 1fb52 <btrfs_inc_extent_ref@@Base+0x36a>
   1fb3a:	movs	r6, #1
   1fb3c:	strb	r6, [r2, r3]
   1fb3e:	strb	r4, [r1, #1]
   1fb40:	strb	r4, [r1, #2]
   1fb42:	strb	r4, [r1, #3]
   1fb44:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   1fb48:	movs	r4, #0
   1fb4a:	mov	r0, r5
   1fb4c:	bl	1754c <btrfs_release_path@@Base>
   1fb50:	b.n	1fa8e <btrfs_inc_extent_ref@@Base+0x2a6>
   1fb52:	ldr	r1, [r1, #0]
   1fb54:	adds	r1, #1
   1fb56:	str	r1, [r2, r3]
   1fb58:	b.n	1fb44 <btrfs_inc_extent_ref@@Base+0x35c>
   1fb5a:	ldrd	fp, ip, [sp, #152]	; 0x98
   1fb5e:	ldr	r3, [r1, #4]
   1fb60:	ldr	r2, [r1, #0]
   1fb62:	cmp	ip, r3
   1fb64:	it	eq
   1fb66:	cmpeq	fp, r2
   1fb68:	bne.n	1fb8a <btrfs_inc_extent_ref@@Base+0x3a2>
   1fb6a:	ldrd	fp, ip, [sp, #160]	; 0xa0
   1fb6e:	ldr	r3, [r1, #12]
   1fb70:	ldr	r2, [r1, #8]
   1fb72:	cmp	ip, r3
   1fb74:	it	eq
   1fb76:	cmpeq	fp, r2
   1fb78:	bne.n	1fb8a <btrfs_inc_extent_ref@@Base+0x3a2>
   1fb7a:	ldrd	fp, ip, [sp, #168]	; 0xa8
   1fb7e:	ldr	r3, [r1, #20]
   1fb80:	ldr	r2, [r1, #16]
   1fb82:	cmp	ip, r3
   1fb84:	it	eq
   1fb86:	cmpeq	fp, r2
   1fb88:	beq.n	1fbcc <btrfs_inc_extent_ref@@Base+0x3e4>
   1fb8a:	mov	r0, r5
   1fb8c:	bl	1754c <btrfs_release_path@@Base>
   1fb90:	ldr.w	r3, [sp, #81]	; 0x51
   1fb94:	ldr.w	r2, [sp, #85]	; 0x55
   1fb98:	mov	r1, r7
   1fb9a:	adds	r3, #1
   1fb9c:	mov	r0, r6
   1fb9e:	adc.w	r2, r2, #0
   1fba2:	str.w	r3, [sp, #81]	; 0x51
   1fba6:	str.w	r2, [sp, #85]	; 0x55
   1fbaa:	add	r3, sp, #68	; 0x44
   1fbac:	mov	r2, r5
   1fbae:	str	r3, [sp, #0]
   1fbb0:	str.w	sl, [sp, #4]
   1fbb4:	mov	r3, r9
   1fbb6:	str.w	r8, [sp, #68]	; 0x44
   1fbba:	bl	1a700 <btrfs_insert_empty_items@@Base>
   1fbbe:	mov	r4, r0
   1fbc0:	cbz	r0, 1fbc8 <btrfs_inc_extent_ref@@Base+0x3e0>
   1fbc2:	cmn.w	r0, #17
   1fbc6:	bne.n	1fb4a <btrfs_inc_extent_ref@@Base+0x362>
   1fbc8:	ldr	r0, [r5, #0]
   1fbca:	b.n	1f960 <btrfs_inc_extent_ref@@Base+0x178>
   1fbcc:	ldr	r3, [r1, #24]
   1fbce:	adds	r3, #1
   1fbd0:	str	r3, [r1, #24]
   1fbd2:	b.n	1fb44 <btrfs_inc_extent_ref@@Base+0x35c>
   1fbd4:	ldr	r2, [pc, #160]	; (1fc78 <btrfs_inc_extent_ref@@Base+0x490>)
   1fbd6:	movs	r3, #0
   1fbd8:	ldr	r1, [pc, #160]	; (1fc7c <btrfs_inc_extent_ref@@Base+0x494>)
   1fbda:	ldr	r0, [pc, #164]	; (1fc80 <btrfs_inc_extent_ref@@Base+0x498>)
   1fbdc:	add	r2, pc
   1fbde:	str	r3, [sp, #0]
   1fbe0:	add.w	r2, r2, #300	; 0x12c
   1fbe4:	mov.w	r3, #1208	; 0x4b8
   1fbe8:	add	r1, pc
   1fbea:	add	r0, pc
   1fbec:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   1fbf0:	ldr	r3, [sp, #56]	; 0x38
   1fbf2:	str	r3, [sp, #72]	; 0x48
   1fbf4:	ldr	r3, [sp, #60]	; 0x3c
   1fbf6:	str	r3, [sp, #76]	; 0x4c
   1fbf8:	orrs.w	r3, sl, fp
   1fbfc:	beq.n	1fc28 <btrfs_inc_extent_ref@@Base+0x440>
   1fbfe:	movs	r3, #182	; 0xb6
   1fc00:	str.w	sl, [sp, #81]	; 0x51
   1fc04:	strb.w	r3, [sp, #80]	; 0x50
   1fc08:	str.w	fp, [r4, #4]
   1fc0c:	movs	r3, #0
   1fc0e:	mov	r2, r5
   1fc10:	str	r3, [sp, #68]	; 0x44
   1fc12:	mov	r1, r7
   1fc14:	movs	r3, #1
   1fc16:	mov	r0, r6
   1fc18:	str	r3, [sp, #4]
   1fc1a:	add	r3, sp, #68	; 0x44
   1fc1c:	str	r3, [sp, #0]
   1fc1e:	add	r3, sp, #72	; 0x48
   1fc20:	bl	1a700 <btrfs_insert_empty_items@@Base>
   1fc24:	mov	r4, r0
   1fc26:	b.n	1fb4a <btrfs_inc_extent_ref@@Base+0x362>
   1fc28:	movs	r3, #176	; 0xb0
   1fc2a:	strb.w	r3, [sp, #80]	; 0x50
   1fc2e:	ldr	r3, [sp, #152]	; 0x98
   1fc30:	str.w	r3, [sp, #81]	; 0x51
   1fc34:	ldr	r3, [sp, #156]	; 0x9c
   1fc36:	str	r3, [r4, #4]
   1fc38:	b.n	1fc0c <btrfs_inc_extent_ref@@Base+0x424>
   1fc3a:	mvn.w	r4, #11
   1fc3e:	b.n	1faae <btrfs_inc_extent_ref@@Base+0x2c6>
   1fc40:	mov	r0, r4
   1fc42:	add	sp, #100	; 0x64
   1fc44:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fc48:	cmp	lr, r0
   1fc4a:	movs	r4, r0
   1fc4c:	lsls	r0, r4, #8
   1fc4e:	movs	r0, r0
   1fc50:	bge.n	1fc98 <btrfs_lookup_extent_info@@Base+0x14>
   1fc52:	movs	r1, r0
   1fc54:	bcs.n	1fc36 <btrfs_inc_extent_ref@@Base+0x44e>
   1fc56:	movs	r1, r0
   1fc58:	bvs.n	1fcfa <btrfs_lookup_extent_info@@Base+0x76>
   1fc5a:	movs	r1, r0
   1fc5c:	bhi.n	1fbb0 <btrfs_inc_extent_ref@@Base+0x3c8>
   1fc5e:	movs	r1, r0
   1fc60:	bne.n	1fd46 <btrfs_lookup_extent_info@@Base+0xc2>
   1fc62:	movs	r1, r0
   1fc64:	ldr	r2, [sp, #888]	; 0x378
   1fc66:	movs	r1, r0
   1fc68:	bhi.n	1fc74 <btrfs_inc_extent_ref@@Base+0x48c>
   1fc6a:	movs	r1, r0
   1fc6c:	beq.n	1fc0a <btrfs_inc_extent_ref@@Base+0x422>
   1fc6e:	movs	r1, r0
   1fc70:	bmi.n	1fd44 <btrfs_lookup_extent_info@@Base+0xc0>
   1fc72:	movs	r1, r0
   1fc74:	cmn	r2, r2
   1fc76:	movs	r4, r0
   1fc78:	bvs.n	1fc08 <btrfs_inc_extent_ref@@Base+0x420>
   1fc7a:	movs	r1, r0
   1fc7c:	ldmia	r7, {r0, r3, r7}
   1fc7e:	movs	r1, r0
   1fc80:	bcc.n	1fcaa <btrfs_lookup_extent_info@@Base+0x26>
   1fc82:	movs	r1, r0

0001fc84 <btrfs_lookup_extent_info@@Base>:
   1fc84:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fc88:	mov	r5, r1
   1fc8a:	vpush	{d8}
   1fc8e:	vmov	s16, r0
   1fc92:	sub	sp, #44	; 0x2c
   1fc94:	strd	r2, r3, [sp, #8]
   1fc98:	ldr	r2, [pc, #384]	; (1fe1c <btrfs_lookup_extent_info@@Base+0x198>)
   1fc9a:	ldr	r3, [pc, #388]	; (1fe20 <btrfs_lookup_extent_info@@Base+0x19c>)
   1fc9c:	add	r2, pc
   1fc9e:	ldrd	fp, r7, [sp, #96]	; 0x60
   1fca2:	ldrd	sl, r8, [sp, #88]	; 0x58
   1fca6:	ldr	r3, [r2, r3]
   1fca8:	ldr	r6, [sp, #104]	; 0x68
   1fcaa:	ldr	r3, [r3, #0]
   1fcac:	str	r3, [sp, #36]	; 0x24
   1fcae:	mov.w	r3, #0
   1fcb2:	cmp.w	fp, #0
   1fcb6:	beq.n	1fcd4 <btrfs_lookup_extent_info@@Base+0x50>
   1fcb8:	ldr.w	r3, [r1, #308]	; 0x134
   1fcbc:	movs	r1, #0
   1fcbe:	ldr.w	r0, [r3, #188]	; 0xbc
   1fcc2:	mov	r3, r1
   1fcc4:	and.w	r2, r0, #256	; 0x100
   1fcc8:	orrs	r3, r2
   1fcca:	ittt	eq
   1fccc:	ldreq.w	sl, [r5, #384]	; 0x180
   1fcd0:	moveq	r8, r1
   1fcd2:	moveq	fp, r8
   1fcd4:	bl	17544 <btrfs_alloc_path@@Base>
   1fcd8:	mov	r4, r0
   1fcda:	cmp	r0, #0
   1fcdc:	beq.w	1fe08 <btrfs_lookup_extent_info@@Base+0x184>
   1fce0:	movs	r3, #1
   1fce2:	strb.w	r3, [r0, #64]	; 0x40
   1fce6:	ldrd	r2, r3, [sp, #8]
   1fcea:	cmp.w	fp, #0
   1fcee:	str.w	sl, [sp, #25]
   1fcf2:	add.w	r9, sp, #25
   1fcf6:	add.w	sl, sp, #16
   1fcfa:	str.w	r8, [sp, #29]
   1fcfe:	mov.w	r8, #0
   1fd02:	strd	r2, r3, [sp, #16]
   1fd06:	ite	eq
   1fd08:	moveq	r3, #168	; 0xa8
   1fd0a:	movne	r3, #169	; 0xa9
   1fd0c:	strb.w	r3, [sp, #24]
   1fd10:	mov	r3, r4
   1fd12:	vmov	r0, s16
   1fd16:	ldr	r1, [r5, #24]
   1fd18:	mov	r2, sl
   1fd1a:	strd	r8, r8, [sp]
   1fd1e:	bl	19930 <btrfs_search_slot@@Base>
   1fd22:	subs	r3, r0, #0
   1fd24:	blt.n	1fdba <btrfs_lookup_extent_info@@Base+0x136>
   1fd26:	beq.n	1fd8c <btrfs_lookup_extent_info@@Base+0x108>
   1fd28:	cmp.w	fp, #0
   1fd2c:	beq.n	1fdfe <btrfs_lookup_extent_info@@Base+0x17a>
   1fd2e:	ldr	r2, [r4, #32]
   1fd30:	cbnz	r2, 1fd52 <btrfs_lookup_extent_info@@Base+0xce>
   1fd32:	mov	r0, r4
   1fd34:	mov.w	fp, #0
   1fd38:	bl	1754c <btrfs_release_path@@Base>
   1fd3c:	mvn.w	r3, #87	; 0x57
   1fd40:	strb.w	r3, [sp, #24]
   1fd44:	ldr.w	r3, [r5, #384]	; 0x180
   1fd48:	str.w	r8, [r9, #4]
   1fd4c:	str.w	r3, [r9]
   1fd50:	b.n	1fd10 <btrfs_lookup_extent_info@@Base+0x8c>
   1fd52:	subs	r2, #1
   1fd54:	ldr	r0, [r4, #0]
   1fd56:	mov	r1, sl
   1fd58:	str	r2, [r4, #32]
   1fd5a:	bl	1dccc <btrfs_create_tree@@Base+0x258>
   1fd5e:	ldrd	r2, r3, [sp, #16]
   1fd62:	ldrd	r0, r1, [sp, #8]
   1fd66:	cmp	r3, r1
   1fd68:	it	eq
   1fd6a:	cmpeq	r2, r0
   1fd6c:	bne.n	1fd32 <btrfs_lookup_extent_info@@Base+0xae>
   1fd6e:	ldrb.w	r3, [sp, #24]
   1fd72:	cmp	r3, #168	; 0xa8
   1fd74:	bne.n	1fd32 <btrfs_lookup_extent_info@@Base+0xae>
   1fd76:	ldr.w	r1, [sp, #29]
   1fd7a:	movs	r3, #0
   1fd7c:	ldr.w	r0, [sp, #25]
   1fd80:	ldr.w	r2, [r5, #384]	; 0x180
   1fd84:	cmp	r1, r3
   1fd86:	it	eq
   1fd88:	cmpeq	r0, r2
   1fd8a:	bne.n	1fd32 <btrfs_lookup_extent_info@@Base+0xae>
   1fd8c:	ldr	r3, [r4, #0]
   1fd8e:	movs	r1, #25
   1fd90:	ldr	r2, [r4, #32]
   1fd92:	adds	r3, #96	; 0x60
   1fd94:	mla	r2, r1, r2, r3
   1fd98:	add.w	r1, r2, #101	; 0x65
   1fd9c:	ldr.w	r2, [r2, #122]	; 0x7a
   1fda0:	cmp	r2, #23
   1fda2:	bls.n	1fdd8 <btrfs_lookup_extent_info@@Base+0x154>
   1fda4:	ldr.w	r2, [r1, #17]
   1fda8:	adds	r2, #101	; 0x65
   1fdaa:	add	r3, r2
   1fdac:	ldr	r1, [r3, #16]
   1fdae:	ldr	r2, [r3, #20]
   1fdb0:	cbnz	r7, 1fdf4 <btrfs_lookup_extent_info@@Base+0x170>
   1fdb2:	cbz	r6, 1fe04 <btrfs_lookup_extent_info@@Base+0x180>
   1fdb4:	movs	r3, #0
   1fdb6:	strd	r1, r2, [r6]
   1fdba:	mov	r0, r4
   1fdbc:	str	r3, [sp, #8]
   1fdbe:	bl	17572 <btrfs_free_path@@Base>
   1fdc2:	ldr	r3, [sp, #8]
   1fdc4:	ldr	r1, [pc, #92]	; (1fe24 <btrfs_lookup_extent_info@@Base+0x1a0>)
   1fdc6:	ldr	r2, [pc, #88]	; (1fe20 <btrfs_lookup_extent_info@@Base+0x19c>)
   1fdc8:	add	r1, pc
   1fdca:	ldr	r2, [r1, r2]
   1fdcc:	ldr	r1, [r2, #0]
   1fdce:	ldr	r2, [sp, #36]	; 0x24
   1fdd0:	eors	r1, r2
   1fdd2:	beq.n	1fe0e <btrfs_lookup_extent_info@@Base+0x18a>
   1fdd4:	blx	8510 <__stack_chk_fail@plt>
   1fdd8:	ldr	r2, [pc, #76]	; (1fe28 <btrfs_lookup_extent_info@@Base+0x1a4>)
   1fdda:	movs	r3, #1
   1fddc:	ldr	r1, [pc, #76]	; (1fe2c <btrfs_lookup_extent_info@@Base+0x1a8>)
   1fdde:	ldr	r0, [pc, #80]	; (1fe30 <btrfs_lookup_extent_info@@Base+0x1ac>)
   1fde0:	add	r2, pc
   1fde2:	str	r3, [sp, #0]
   1fde4:	addw	r2, r2, #343	; 0x157
   1fde8:	add	r1, pc
   1fdea:	add	r0, pc
   1fdec:	mov.w	r3, #1360	; 0x550
   1fdf0:	bl	1dfec <btrfs_create_tree@@Base+0x578>
   1fdf4:	ldr	r0, [r3, #0]
   1fdf6:	ldr	r3, [r3, #4]
   1fdf8:	strd	r0, r3, [r7]
   1fdfc:	b.n	1fdb2 <btrfs_lookup_extent_info@@Base+0x12e>
   1fdfe:	mvn.w	r3, #4
   1fe02:	b.n	1fdba <btrfs_lookup_extent_info@@Base+0x136>
   1fe04:	mov	r3, r6
   1fe06:	b.n	1fdba <btrfs_lookup_extent_info@@Base+0x136>
   1fe08:	mvn.w	r3, #11
   1fe0c:	b.n	1fdc4 <btrfs_lookup_extent_info@@Base+0x140>
   1fe0e:	mov	r0, r3
   1fe10:	add	sp, #44	; 0x2c
   1fe12:	vpop	{d8}
   1fe16:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fe1a:	nop
   1fe1c:	lsrs	r0, r5
   1fe1e:	movs	r4, r0
   1fe20:	lsls	r0, r4, #8
   1fe22:	movs	r0, r0
   1fe24:	subs	r7, #188	; 0xbc
   1fe26:	movs	r4, r0
   1fe28:	bmi.n	1fdb0 <btrfs_lookup_extent_info@@Base+0x12c>
   1fe2a:	movs	r1, r0
   1fe2c:	ldmia	r5!, {r0, r3, r7}
   1fe2e:	movs	r1, r0
   1fe30:	beq.n	1fe02 <btrfs_lookup_extent_info@@Base+0x17e>
   1fe32:	movs	r1, r0

0001fe34 <btrfs_set_block_flags@@Base>:
   1fe34:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fe38:	sub	sp, #52	; 0x34
   1fe3a:	ldr	r4, [r0, #0]
   1fe3c:	mov	r5, r0
   1fe3e:	strd	r2, r3, [sp, #8]
   1fe42:	movs	r7, #0
   1fe44:	ldr	r3, [sp, #96]	; 0x60
   1fe46:	mov	r9, r7
   1fe48:	ldr	r2, [pc, #420]	; (1fff0 <btrfs_set_block_flags@@Base+0x1bc>)
   1fe4a:	ldr	r6, [sp, #88]	; 0x58
   1fe4c:	str	r3, [sp, #16]
   1fe4e:	add	r2, pc
   1fe50:	ldr	r3, [sp, #100]	; 0x64
   1fe52:	ldr.w	fp, [pc, #416]	; 1fff4 <btrfs_set_block_flags@@Base+0x1c0>
   1fe56:	str	r3, [sp, #20]
   1fe58:	add	fp, pc
   1fe5a:	ldr	r3, [pc, #412]	; (1fff8 <btrfs_set_block_flags@@Base+0x1c4>)
   1fe5c:	ldr	r3, [r2, r3]
   1fe5e:	ldr	r3, [r3, #0]
   1fe60:	str	r3, [sp, #44]	; 0x2c
   1fe62:	mov.w	r3, #0
   1fe66:	ldr.w	r3, [r4, #308]	; 0x134
   1fe6a:	ldr.w	r3, [r3, #188]	; 0xbc
   1fe6e:	and.w	r8, r3, #256	; 0x100
   1fe72:	bl	17544 <btrfs_alloc_path@@Base>
   1fe76:	mov	sl, r0
   1fe78:	cmp	r0, #0
   1fe7a:	beq.w	1ffe0 <btrfs_set_block_flags@@Base+0x1ac>
   1fe7e:	ldrd	r1, r2, [sp, #8]
   1fe82:	movs	r3, #1
   1fe84:	strb.w	r3, [r0, #64]	; 0x40
   1fe88:	strd	r1, r2, [sp, #24]
   1fe8c:	orrs.w	r2, r8, r9
   1fe90:	add.w	r2, sp, #33	; 0x21
   1fe94:	beq.n	1feee <btrfs_set_block_flags@@Base+0xba>
   1fe96:	mov	r8, r3
   1fe98:	asrs	r1, r6, #31
   1fe9a:	str.w	r6, [sp, #33]	; 0x21
   1fe9e:	str	r1, [r2, #4]
   1fea0:	movs	r2, #169	; 0xa9
   1fea2:	strb.w	r2, [sp, #32]
   1fea6:	add	r7, sp, #24
   1fea8:	movs	r6, #0
   1feaa:	strd	r6, r6, [sp]
   1feae:	mov	r3, sl
   1feb0:	ldr	r1, [r4, #24]
   1feb2:	mov	r2, r7
   1feb4:	mov	r0, r5
   1feb6:	bl	19930 <btrfs_search_slot@@Base>
   1feba:	subs.w	r9, r0, #0
   1febe:	blt.n	1ff6a <btrfs_set_block_flags@@Base+0x136>
   1fec0:	beq.n	1ff40 <btrfs_set_block_flags@@Base+0x10c>
   1fec2:	cmp.w	r8, #0
   1fec6:	beq.n	1ff84 <btrfs_set_block_flags@@Base+0x150>
   1fec8:	ldr.w	r2, [sl, #32]
   1fecc:	cbnz	r2, 1ff02 <btrfs_set_block_flags@@Base+0xce>
   1fece:	mov	r0, sl
   1fed0:	mov.w	r8, #0
   1fed4:	bl	1754c <btrfs_release_path@@Base>
   1fed8:	ldr.w	r3, [r4, #384]	; 0x180
   1fedc:	str.w	r6, [sp, #37]	; 0x25
   1fee0:	str.w	r3, [sp, #33]	; 0x21
   1fee4:	mvn.w	r3, #87	; 0x57
   1fee8:	strb.w	r3, [sp, #32]
   1feec:	b.n	1feaa <btrfs_set_block_flags@@Base+0x76>
   1feee:	ldr.w	r3, [r4, #384]	; 0x180
   1fef2:	mov	r8, r7
   1fef4:	str	r7, [r2, #4]
   1fef6:	str.w	r3, [sp, #33]	; 0x21
   1fefa:	movs	r3, #168	; 0xa8
   1fefc:	strb.w	r3, [sp, #32]
   1ff00:	b.n	1fea6 <btrfs_set_block_flags@@Base+0x72>
   1ff02:	subs	r2, #1
   1ff04:	ldr.w	r0, [sl]
   1ff08:	mov	r1, r7
   1ff0a:	str.w	r2, [sl, #32]
   1ff0e:	bl	1dccc <btrfs_create_tree@@Base+0x258>
   1ff12:	ldrd	r2, r3, [sp, #24]
   1ff16:	ldrd	r0, r1, [sp, #8]
   1ff1a:	cmp	r3, r1
   1ff1c:	it	eq
   1ff1e:	cmpeq	r2, r0
   1ff20:	bne.n	1fece <btrfs_set_block_flags@@Base+0x9a>
   1ff22:	ldr.w	r9, [sp, #37]	; 0x25
   1ff26:	movs	r3, #0
   1ff28:	ldr.w	r8, [sp, #33]	; 0x21
   1ff2c:	ldr.w	r2, [r4, #384]	; 0x180
   1ff30:	cmp	r9, r3
   1ff32:	it	eq
   1ff34:	cmpeq	r8, r2
   1ff36:	bne.n	1fece <btrfs_set_block_flags@@Base+0x9a>
   1ff38:	ldrb.w	r3, [sp, #32]
   1ff3c:	cmp	r3, #168	; 0xa8
   1ff3e:	bne.n	1fece <btrfs_set_block_flags@@Base+0x9a>
   1ff40:	ldr.w	r3, [sl]
   1ff44:	movs	r1, #25
   1ff46:	ldr.w	r2, [sl, #32]
   1ff4a:	adds	r3, #96	; 0x60
   1ff4c:	mla	r2, r1, r2, r3
   1ff50:	add.w	r0, r2, #101	; 0x65
   1ff54:	ldr.w	r1, [r2, #122]	; 0x7a
   1ff58:	cmp	r1, #23
   1ff5a:	bhi.n	1ffc2 <btrfs_set_block_flags@@Base+0x18e>
   1ff5c:	ldr	r0, [pc, #156]	; (1fffc <btrfs_set_block_flags@@Base+0x1c8>)
   1ff5e:	movs	r2, #24
   1ff60:	mvn.w	r9, #116	; 0x74
   1ff64:	add	r0, pc
   1ff66:	bl	16b70 <__btrfs_error@@Base>
   1ff6a:	mov	r0, sl
   1ff6c:	bl	17572 <btrfs_free_path@@Base>
   1ff70:	ldr	r2, [pc, #140]	; (20000 <btrfs_set_block_flags@@Base+0x1cc>)
   1ff72:	ldr	r3, [pc, #132]	; (1fff8 <btrfs_set_block_flags@@Base+0x1c4>)
   1ff74:	add	r2, pc
   1ff76:	ldr	r3, [r2, r3]
   1ff78:	ldr	r2, [r3, #0]
   1ff7a:	ldr	r3, [sp, #44]	; 0x2c
   1ff7c:	eors	r2, r3
   1ff7e:	beq.n	1ffe6 <btrfs_set_block_flags@@Base+0x1b2>
   1ff80:	blx	8510 <__stack_chk_fail@plt>
   1ff84:	ldr.w	r0, [sl]
   1ff88:	bl	24718 <btrfs_print_leaf@@Base>
   1ff8c:	ldr	r3, [pc, #116]	; (20004 <btrfs_set_block_flags@@Base+0x1d0>)
   1ff8e:	ldrd	r1, r2, [sp, #8]
   1ff92:	ldr.w	r3, [fp, r3]
   1ff96:	strd	r1, r2, [sp]
   1ff9a:	movs	r1, #1
   1ff9c:	ldr	r2, [pc, #104]	; (20008 <btrfs_set_block_flags@@Base+0x1d4>)
   1ff9e:	ldr	r0, [r3, #0]
   1ffa0:	add	r2, pc
   1ffa2:	blx	8860 <__fprintf_chk@plt+0x4>
   1ffa6:	ldr	r2, [pc, #100]	; (2000c <btrfs_set_block_flags@@Base+0x1d8>)
   1ffa8:	ldr	r1, [pc, #100]	; (20010 <btrfs_set_block_flags@@Base+0x1dc>)
   1ffaa:	movs	r3, #1
   1ffac:	ldr	r0, [pc, #100]	; (20014 <btrfs_set_block_flags@@Base+0x1e0>)
   1ffae:	add	r2, pc
   1ffb0:	str	r3, [sp, #0]
   1ffb2:	add.w	r2, r2, #368	; 0x170
   1ffb6:	add	r1, pc
   1ffb8:	add	r0, pc
   1ffba:	movw	r3, #1426	; 0x592
   1ffbe:	bl	1dfec <btrfs_create_tree@@Base+0x578>
   1ffc2:	ldr.w	r2, [r0, #17]
   1ffc6:	mov.w	r9, #0
   1ffca:	ldr	r0, [sp, #16]
   1ffcc:	adds	r2, #101	; 0x65
   1ffce:	add	r3, r2
   1ffd0:	ldr	r1, [r3, #16]
   1ffd2:	ldr	r2, [r3, #20]
   1ffd4:	orrs	r1, r0
   1ffd6:	ldr	r0, [sp, #20]
   1ffd8:	str	r1, [r3, #16]
   1ffda:	orrs	r2, r0
   1ffdc:	str	r2, [r3, #20]
   1ffde:	b.n	1ff6a <btrfs_set_block_flags@@Base+0x136>
   1ffe0:	mvn.w	r9, #11
   1ffe4:	b.n	1ff70 <btrfs_set_block_flags@@Base+0x13c>
   1ffe6:	mov	r0, r9
   1ffe8:	add	sp, #52	; 0x34
   1ffea:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ffee:	nop
   1fff0:	subs	r7, #54	; 0x36
   1fff2:	movs	r4, r0
   1fff4:	subs	r7, #44	; 0x2c
   1fff6:	movs	r4, r0
   1fff8:	lsls	r0, r4, #8
   1fffa:	movs	r0, r0
   1fffc:	ldmia	r6, {r6}
   1fffe:	movs	r1, r0
   20000:	subs	r6, #16
   20002:	movs	r4, r0
   20004:	lsls	r0, r6, #8
   20006:	movs	r0, r0
   20008:	ldmia	r7!, {r1, r4, r5, r6}
   2000a:	movs	r1, r0
   2000c:	bcs.n	1fff8 <btrfs_set_block_flags@@Base+0x1c4>
   2000e:	movs	r1, r0
   20010:	ldmia	r3, {r0, r1, r3, r4, r5, r7}
   20012:	movs	r1, r0
   20014:	ldmia	r7!, {r0, r3, r4}
   20016:	movs	r1, r0

00020018 <btrfs_inc_ref@@Base>:
   20018:	push	{r0, r1, r4, lr}
   2001a:	movs	r4, #1
   2001c:	str	r4, [sp, #0]
   2001e:	bl	1dde2 <btrfs_create_tree@@Base+0x36e>
   20022:	add	sp, #8
   20024:	pop	{r4, pc}

00020026 <btrfs_dec_ref@@Base>:
   20026:	push	{r0, r1, r4, lr}
   20028:	movs	r4, #0
   2002a:	str	r4, [sp, #0]
   2002c:	bl	1dde2 <btrfs_create_tree@@Base+0x36e>
   20030:	add	sp, #8
   20032:	pop	{r4, pc}

00020034 <btrfs_write_dirty_block_groups@@Base>:
   20034:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20038:	mov	r8, r0
   2003a:	vpush	{d8}
   2003e:	ldr	r2, [pc, #340]	; (20194 <btrfs_write_dirty_block_groups@@Base+0x160>)
   20040:	ldr	r3, [pc, #340]	; (20198 <btrfs_write_dirty_block_groups@@Base+0x164>)
   20042:	add	r2, pc
   20044:	sub	sp, #92	; 0x5c
   20046:	ldr	r7, [r0, #0]
   20048:	ldr	r3, [r2, r3]
   2004a:	ldr	r3, [r3, #0]
   2004c:	str	r3, [sp, #84]	; 0x54
   2004e:	mov.w	r3, #0
   20052:	bl	17544 <btrfs_alloc_path@@Base>
   20056:	mov	r4, r0
   20058:	cmp	r0, #0
   2005a:	beq.w	20182 <btrfs_write_dirty_block_groups@@Base+0x14e>
   2005e:	movs	r3, #0
   20060:	movs	r2, #0
   20062:	strd	r2, r3, [sp, #16]
   20066:	adds	r7, #128	; 0x80
   20068:	ldr	r3, [pc, #304]	; (2019c <btrfs_write_dirty_block_groups@@Base+0x168>)
   2006a:	ldr.w	fp, [pc, #308]	; 201a0 <btrfs_write_dirty_block_groups@@Base+0x16c>
   2006e:	add	r3, pc
   20070:	str	r3, [sp, #24]
   20072:	add.w	r3, r3, #390	; 0x186
   20076:	add	fp, pc
   20078:	vmov	s16, r3
   2007c:	add	r3, sp, #40	; 0x28
   2007e:	mov.w	r9, #1
   20082:	str	r3, [sp, #4]
   20084:	mov	r0, r7
   20086:	add	r3, sp, #32
   20088:	str.w	r9, [sp, #8]
   2008c:	str	r3, [sp, #0]
   2008e:	ldrd	r2, r3, [sp, #16]
   20092:	bl	1620c <find_first_extent_bit@@Base>
   20096:	mov	r5, r0
   20098:	cbz	r0, 200ac <btrfs_write_dirty_block_groups@@Base+0x78>
   2009a:	ldrd	r2, r3, [sp, #16]
   2009e:	orrs	r3, r2
   200a0:	beq.n	20166 <btrfs_write_dirty_block_groups@@Base+0x132>
   200a2:	movs	r2, #0
   200a4:	movs	r3, #0
   200a6:	strd	r2, r3, [sp, #16]
   200aa:	b.n	2007c <btrfs_write_dirty_block_groups@@Base+0x48>
   200ac:	ldr	r3, [sp, #40]	; 0x28
   200ae:	mov	r0, r7
   200b0:	ldr.w	sl, [pc, #240]	; 201a4 <btrfs_write_dirty_block_groups@@Base+0x170>
   200b4:	adds	r3, #1
   200b6:	str	r3, [sp, #16]
   200b8:	ldr	r3, [sp, #44]	; 0x2c
   200ba:	add	sl, pc
   200bc:	adc.w	r3, r3, #0
   200c0:	str	r3, [sp, #20]
   200c2:	add	r3, sp, #48	; 0x30
   200c4:	str	r3, [sp, #0]
   200c6:	ldrd	r2, r3, [sp, #32]
   200ca:	bl	162e8 <get_state_private@@Base>
   200ce:	mov	r1, fp
   200d0:	vmov	r2, s16
   200d4:	mov.w	r3, #1592	; 0x638
   200d8:	str	r0, [sp, #0]
   200da:	mov	r0, sl
   200dc:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   200e0:	ldrd	r2, r3, [sp, #40]	; 0x28
   200e4:	mov	r0, r7
   200e6:	str.w	r9, [sp, #8]
   200ea:	strd	r2, r3, [sp]
   200ee:	ldrd	r2, r3, [sp, #32]
   200f2:	bl	15e3a <clear_extent_bits@@Base>
   200f6:	ldr.w	r1, [r8]
   200fa:	ldr	r6, [sp, #48]	; 0x30
   200fc:	mov	r3, r4
   200fe:	strd	r5, r9, [sp]
   20102:	mov	r0, r8
   20104:	ldr	r1, [r1, #24]
   20106:	add.w	r2, r6, #40	; 0x28
   2010a:	bl	19930 <btrfs_search_slot@@Base>
   2010e:	cmp	r0, #0
   20110:	blt.n	2007c <btrfs_write_dirty_block_groups@@Base+0x48>
   20112:	ldr	r2, [sp, #24]
   20114:	mov	r1, fp
   20116:	str	r0, [sp, #0]
   20118:	movw	r3, #1547	; 0x60b
   2011c:	mov	r0, sl
   2011e:	addw	r2, r2, #421	; 0x1a5
   20122:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   20126:	ldr	r0, [r4, #0]
   20128:	ldr	r3, [r4, #32]
   2012a:	movs	r2, #25
   2012c:	add	r1, sp, #60	; 0x3c
   2012e:	str	r0, [sp, #28]
   20130:	mla	r3, r2, r3, r0
   20134:	ldr.w	r2, [r3, #214]	; 0xd6
   20138:	ldr	r3, [r6, #72]	; 0x48
   2013a:	adds	r2, #101	; 0x65
   2013c:	str	r3, [sp, #60]	; 0x3c
   2013e:	ldr	r3, [r6, #76]	; 0x4c
   20140:	str	r3, [sp, #64]	; 0x40
   20142:	ldr	r3, [r6, #96]	; 0x60
   20144:	str	r3, [sp, #76]	; 0x4c
   20146:	ldr	r3, [r6, #100]	; 0x64
   20148:	str	r3, [sp, #80]	; 0x50
   2014a:	mov.w	r3, #256	; 0x100
   2014e:	strd	r3, r5, [sp, #68]	; 0x44
   20152:	movs	r3, #24
   20154:	bl	16a24 <write_extent_buffer@@Base>
   20158:	ldr	r0, [sp, #28]
   2015a:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   2015e:	mov	r0, r4
   20160:	bl	1754c <btrfs_release_path@@Base>
   20164:	b.n	2007c <btrfs_write_dirty_block_groups@@Base+0x48>
   20166:	mov	r0, r4
   20168:	bl	17572 <btrfs_free_path@@Base>
   2016c:	movs	r0, #0
   2016e:	ldr	r2, [pc, #56]	; (201a8 <btrfs_write_dirty_block_groups@@Base+0x174>)
   20170:	ldr	r3, [pc, #36]	; (20198 <btrfs_write_dirty_block_groups@@Base+0x164>)
   20172:	add	r2, pc
   20174:	ldr	r3, [r2, r3]
   20176:	ldr	r2, [r3, #0]
   20178:	ldr	r3, [sp, #84]	; 0x54
   2017a:	eors	r2, r3
   2017c:	beq.n	20188 <btrfs_write_dirty_block_groups@@Base+0x154>
   2017e:	blx	8510 <__stack_chk_fail@plt>
   20182:	mvn.w	r0, #11
   20186:	b.n	2016e <btrfs_write_dirty_block_groups@@Base+0x13a>
   20188:	add	sp, #92	; 0x5c
   2018a:	vpop	{d8}
   2018e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20192:	nop
   20194:	subs	r5, #66	; 0x42
   20196:	movs	r4, r0
   20198:	lsls	r0, r4, #8
   2019a:	movs	r0, r0
   2019c:	bcs.n	20208 <update_space_info@@Base+0x5c>
   2019e:	movs	r1, r0
   201a0:	ldmia	r2!, {r0, r1, r3, r4, r5, r6, r7}
   201a2:	movs	r1, r0
   201a4:	str	r4, [sp, #168]	; 0xa8
   201a6:	movs	r1, r0
   201a8:	subs	r4, #18
   201aa:	movs	r4, r0

000201ac <update_space_info@@Base>:
   201ac:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   201b0:	sub	sp, #36	; 0x24
   201b2:	mov	r5, r0
   201b4:	mov	r4, r2
   201b6:	ldr	r1, [sp, #80]	; 0x50
   201b8:	ldrd	r7, fp, [sp, #72]	; 0x48
   201bc:	ldr.w	sl, [sp, #84]	; 0x54
   201c0:	str	r1, [sp, #24]
   201c2:	ldr	r1, [pc, #176]	; (20274 <update_space_info@@Base+0xc8>)
   201c4:	add	r1, pc
   201c6:	str	r1, [sp, #28]
   201c8:	bl	1dc3c <btrfs_create_tree@@Base+0x1c8>
   201cc:	mov	r6, r0
   201ce:	cbz	r0, 2022a <update_space_info@@Base+0x7e>
   201d0:	ldrd	r2, r0, [r0, #8]
   201d4:	ldr	r1, [sp, #28]
   201d6:	adds	r3, r7, r2
   201d8:	str	r3, [sp, #16]
   201da:	adc.w	r3, fp, r0
   201de:	str	r3, [sp, #20]
   201e0:	ldrd	r3, r4, [sp, #16]
   201e4:	ldrd	r2, r0, [r6, #16]
   201e8:	strd	r3, r4, [r6, #8]
   201ec:	ldr	r3, [sp, #24]
   201ee:	adds.w	r8, r3, r2
   201f2:	ldrd	r3, r4, [sp, #16]
   201f6:	adc.w	r9, sl, r0
   201fa:	strd	r8, r9, [r6, #16]
   201fe:	cmp	r4, r9
   20200:	it	eq
   20202:	cmpeq	r3, r8
   20204:	bcs.n	2021e <update_space_info@@Base+0x72>
   20206:	ldr	r2, [pc, #112]	; (20278 <update_space_info@@Base+0xcc>)
   20208:	ldr	r0, [r1, r2]
   2020a:	movs	r1, #1
   2020c:	ldr	r2, [pc, #108]	; (2027c <update_space_info@@Base+0xd0>)
   2020e:	strd	r8, r9, [sp, #8]
   20212:	strd	r3, r4, [sp]
   20216:	add	r2, pc
   20218:	ldr	r0, [r0, #0]
   2021a:	blx	8860 <__fprintf_chk@plt+0x4>
   2021e:	ldr	r3, [sp, #88]	; 0x58
   20220:	str	r6, [r3, #0]
   20222:	movs	r0, #0
   20224:	add	sp, #36	; 0x24
   20226:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2022a:	movs	r0, #56	; 0x38
   2022c:	blx	8678 <malloc@plt+0x4>
   20230:	cbz	r0, 2026e <update_space_info@@Base+0xc2>
   20232:	ldr.w	r1, [r5, #356]	; 0x164
   20236:	add.w	r2, r0, #44	; 0x2c
   2023a:	ldr	r3, [sp, #24]
   2023c:	and.w	r4, r4, #7
   20240:	str	r2, [r1, #4]
   20242:	strd	r3, sl, [r0, #16]
   20246:	ldr	r3, [sp, #88]	; 0x58
   20248:	str.w	r2, [r5, #356]	; 0x164
   2024c:	str	r1, [r0, #44]	; 0x2c
   2024e:	add.w	r1, r5, #356	; 0x164
   20252:	strd	r4, r6, [r0]
   20256:	movs	r5, #0
   20258:	movs	r4, #0
   2025a:	str	r1, [r0, #48]	; 0x30
   2025c:	strd	r7, fp, [r0, #8]
   20260:	strd	r4, r5, [r0, #24]
   20264:	strd	r4, r5, [r0, #32]
   20268:	str	r6, [r0, #40]	; 0x28
   2026a:	str	r0, [r3, #0]
   2026c:	b.n	20222 <update_space_info@@Base+0x76>
   2026e:	mvn.w	r0, #11
   20272:	b.n	20224 <update_space_info@@Base+0x78>
   20274:	subs	r3, #192	; 0xc0
   20276:	movs	r4, r0
   20278:	lsls	r0, r6, #8
   2027a:	movs	r0, r0
   2027c:	ldmia	r5!, {r0, r2, r3, r4}
   2027e:	movs	r1, r0

00020280 <btrfs_finish_extent_commit@@Base>:
   20280:	ldr	r2, [pc, #156]	; (20320 <btrfs_finish_extent_commit@@Base+0xa0>)
   20282:	ldr	r3, [pc, #160]	; (20324 <btrfs_finish_extent_commit@@Base+0xa4>)
   20284:	add	r2, pc
   20286:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2028a:	sub	sp, #44	; 0x2c
   2028c:	ldr	r4, [r0, #0]
   2028e:	add	r7, sp, #24
   20290:	ldr	r3, [r2, r3]
   20292:	add.w	r8, sp, #16
   20296:	add.w	r5, r4, #96	; 0x60
   2029a:	adds	r4, #160	; 0xa0
   2029c:	ldr	r3, [r3, #0]
   2029e:	str	r3, [sp, #36]	; 0x24
   202a0:	mov.w	r3, #0
   202a4:	mov	r9, r0
   202a6:	movs	r6, #1
   202a8:	movs	r2, #0
   202aa:	movs	r3, #0
   202ac:	mov	r0, r4
   202ae:	strd	r7, r6, [sp, #4]
   202b2:	str.w	r8, [sp]
   202b6:	bl	1620c <find_first_extent_bit@@Base>
   202ba:	cbnz	r0, 20304 <btrfs_finish_extent_commit@@Base+0x84>
   202bc:	ldr	r1, [sp, #24]
   202be:	ldrd	r2, r3, [sp, #16]
   202c2:	str	r0, [sp, #8]
   202c4:	adds	r1, #1
   202c6:	ldr	r0, [sp, #28]
   202c8:	adc.w	r0, r0, #0
   202cc:	subs	r1, r1, r2
   202ce:	sbc.w	r0, r0, r3
   202d2:	strd	r1, r0, [sp]
   202d6:	ldr.w	r0, [r9]
   202da:	bl	1e644 <btrfs_lookup_block_group@@Base+0x98>
   202de:	ldrd	r2, r3, [sp, #24]
   202e2:	mov	r0, r4
   202e4:	strd	r2, r3, [sp]
   202e8:	ldrd	r2, r3, [sp, #16]
   202ec:	bl	161f4 <clear_extent_dirty@@Base>
   202f0:	ldrd	r2, r3, [sp, #24]
   202f4:	mov	r0, r5
   202f6:	strd	r2, r3, [sp]
   202fa:	ldrd	r2, r3, [sp, #16]
   202fe:	bl	161dc <set_extent_dirty@@Base>
   20302:	b.n	202a8 <btrfs_finish_extent_commit@@Base+0x28>
   20304:	ldr	r2, [pc, #32]	; (20328 <btrfs_finish_extent_commit@@Base+0xa8>)
   20306:	ldr	r3, [pc, #28]	; (20324 <btrfs_finish_extent_commit@@Base+0xa4>)
   20308:	add	r2, pc
   2030a:	ldr	r3, [r2, r3]
   2030c:	ldr	r2, [r3, #0]
   2030e:	ldr	r3, [sp, #36]	; 0x24
   20310:	eors	r2, r3
   20312:	beq.n	20318 <btrfs_finish_extent_commit@@Base+0x98>
   20314:	blx	8510 <__stack_chk_fail@plt>
   20318:	add	sp, #44	; 0x2c
   2031a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2031e:	nop
   20320:	subs	r3, #0
   20322:	movs	r4, r0
   20324:	lsls	r0, r4, #8
   20326:	movs	r0, r0
   20328:	subs	r2, #124	; 0x7c
   2032a:	movs	r4, r0

0002032c <btrfs_pin_extent@@Base>:
   2032c:	push	{r4, r5, lr}
   2032e:	sub	sp, #20
   20330:	movs	r1, #1
   20332:	ldrd	r4, r5, [sp, #32]
   20336:	str	r1, [sp, #8]
   20338:	strd	r4, r5, [sp]
   2033c:	bl	1e644 <btrfs_lookup_block_group@@Base+0x98>
   20340:	add	sp, #20
   20342:	pop	{r4, r5, pc}

00020344 <btrfs_free_extent@@Base>:
   20344:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20348:	sub	sp, #84	; 0x54
   2034a:	mov	r6, r2
   2034c:	mov	r5, r3
   2034e:	ldrd	r2, r3, [sp, #128]	; 0x80
   20352:	mov	r4, r0
   20354:	mov	r0, r1
   20356:	ldrd	r8, r9, [sp, #120]	; 0x78
   2035a:	mov.w	ip, #0
   2035e:	ldr	r1, [pc, #296]	; (20488 <btrfs_free_extent@@Base+0x144>)
   20360:	strd	r2, r3, [sp, #64]	; 0x40
   20364:	cmp	r9, ip
   20366:	ldrd	r2, r3, [sp, #136]	; 0x88
   2036a:	add	r1, pc
   2036c:	ldrd	r7, sl, [sp, #152]	; 0x98
   20370:	mvn.w	fp, #5
   20374:	strd	r2, r3, [sp, #56]	; 0x38
   20378:	ldrd	r2, r3, [sp, #144]	; 0x90
   2037c:	strd	r2, r3, [sp, #48]	; 0x30
   20380:	ldr.w	r3, [r0, #464]	; 0x1d0
   20384:	ldr	r2, [pc, #260]	; (2048c <btrfs_free_extent@@Base+0x148>)
   20386:	ldr	r0, [pc, #264]	; (20490 <btrfs_free_extent@@Base+0x14c>)
   20388:	ldr.w	r3, [r3, #388]	; 0x184
   2038c:	add	r2, pc
   2038e:	addw	r2, r2, #443	; 0x1bb
   20392:	add	r0, pc
   20394:	it	eq
   20396:	cmpeq	r8, r3
   20398:	strd	r1, r2, [sp, #72]	; 0x48
   2039c:	ite	cc
   2039e:	movcc	r3, #1
   203a0:	movcs	r3, #0
   203a2:	str	r3, [sp, #0]
   203a4:	movw	r3, #2154	; 0x86a
   203a8:	bl	1ddcc <btrfs_create_tree@@Base+0x358>
   203ac:	ldrd	r2, r3, [sp, #56]	; 0x38
   203b0:	mov.w	ip, #4294967295	; 0xffffffff
   203b4:	cmp	r3, ip
   203b6:	it	eq
   203b8:	cmpeq	r2, fp
   203ba:	ldrd	r1, r2, [sp, #72]	; 0x48
   203be:	bne.n	20406 <btrfs_free_extent@@Base+0xc2>
   203c0:	ldr	r0, [pc, #208]	; (20494 <btrfs_free_extent@@Base+0x150>)
   203c2:	str	r1, [sp, #64]	; 0x40
   203c4:	add	r0, pc
   203c6:	str	r2, [sp, #56]	; 0x38
   203c8:	blx	865c <puts@plt+0x4>
   203cc:	ldrd	r2, r3, [sp, #48]	; 0x30
   203d0:	ldr	r0, [pc, #196]	; (20498 <btrfs_free_extent@@Base+0x154>)
   203d2:	cmp	r3, #0
   203d4:	ldr	r1, [sp, #64]	; 0x40
   203d6:	it	eq
   203d8:	cmpeq.w	r2, #256	; 0x100
   203dc:	add	r0, pc
   203de:	ldr	r2, [sp, #56]	; 0x38
   203e0:	ite	cs
   203e2:	movcs	r3, #1
   203e4:	movcc	r3, #0
   203e6:	str	r3, [sp, #0]
   203e8:	movw	r3, #2161	; 0x871
   203ec:	bl	1ddcc <btrfs_create_tree@@Base+0x358>
   203f0:	ldr	r0, [r4, #0]
   203f2:	mov	r2, r6
   203f4:	mov	r3, r5
   203f6:	strd	r8, r9, [sp]
   203fa:	bl	2032c <btrfs_pin_extent@@Base>
   203fe:	movs	r0, #0
   20400:	add	sp, #84	; 0x54
   20402:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20406:	ldrd	fp, ip, [sp, #48]	; 0x30
   2040a:	cmp.w	ip, #0
   2040e:	it	eq
   20410:	cmpeq.w	fp, #256	; 0x100
   20414:	bcs.n	20456 <btrfs_free_extent@@Base+0x112>
   20416:	ldr	r0, [pc, #132]	; (2049c <btrfs_free_extent@@Base+0x158>)
   20418:	movw	r3, #2165	; 0x875
   2041c:	str	r7, [sp, #0]
   2041e:	add	r0, pc
   20420:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   20424:	movs	r3, #0
   20426:	strd	r3, r3, [sp, #36]	; 0x24
   2042a:	mov	r1, r4
   2042c:	str	r3, [sp, #32]
   2042e:	movs	r3, #2
   20430:	str	r3, [sp, #28]
   20432:	ldr	r3, [sp, #48]	; 0x30
   20434:	ldr	r0, [r4, #0]
   20436:	strd	r8, r9, [sp]
   2043a:	str	r3, [sp, #24]
   2043c:	ldrd	r2, r3, [sp, #56]	; 0x38
   20440:	strd	r2, r3, [sp, #16]
   20444:	ldrd	r2, r3, [sp, #64]	; 0x40
   20448:	strd	r2, r3, [sp, #8]
   2044c:	mov	r2, r6
   2044e:	mov	r3, r5
   20450:	bl	235ec <btrfs_add_delayed_tree_ref@@Base>
   20454:	b.n	20400 <btrfs_free_extent@@Base+0xbc>
   20456:	ldrd	r2, r3, [sp, #48]	; 0x30
   2045a:	mov	r0, r4
   2045c:	strd	r7, sl, [sp, #152]	; 0x98
   20460:	strd	r8, r9, [sp, #120]	; 0x78
   20464:	strd	r2, r3, [sp, #144]	; 0x90
   20468:	ldrd	r2, r3, [sp, #56]	; 0x38
   2046c:	strd	r2, r3, [sp, #136]	; 0x88
   20470:	ldrd	r2, r3, [sp, #64]	; 0x40
   20474:	strd	r2, r3, [sp, #128]	; 0x80
   20478:	mov	r2, r6
   2047a:	mov	r3, r5
   2047c:	add	sp, #84	; 0x54
   2047e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20482:	b.w	1eec4 <hash_extent_data_ref@@Base+0x3f4>
   20486:	nop
   20488:	ldmia	r0, {r0, r1, r2}
   2048a:	movs	r1, r0
   2048c:	ldmia	r7!, {r1, r2, r4}
   2048e:	movs	r1, r0
   20490:	ldmia	r3!, {r0, r2, r4, r6, r7}
   20492:	movs	r1, r0
   20494:	ldmia	r3, {r0, r3, r6, r7}
   20496:	movs	r1, r0
   20498:	ldmia	r3, {r0, r2, r3, r6, r7}
   2049a:	movs	r1, r0
   2049c:	b.n	202c6 <btrfs_finish_extent_commit@@Base+0x46>
   2049e:	movs	r1, r0

000204a0 <btrfs_unpin_extent@@Base>:
   204a0:	push	{r4, r5, lr}
   204a2:	sub	sp, #20
   204a4:	movs	r1, #0
   204a6:	ldrd	r4, r5, [sp, #32]
   204aa:	str	r1, [sp, #8]
   204ac:	strd	r4, r5, [sp]
   204b0:	bl	1e644 <btrfs_lookup_block_group@@Base+0x98>
   204b4:	add	sp, #20
   204b6:	pop	{r4, r5, pc}

000204b8 <btrfs_free_tree_block@@Base>:
   204b8:	push	{r4, r5, lr}
   204ba:	sub	sp, #44	; 0x2c
   204bc:	movs	r4, #0
   204be:	movs	r5, #0
   204c0:	strd	r4, r5, [sp, #32]
   204c4:	movs	r5, #0
   204c6:	ldrb.w	r4, [r2, #196]	; 0xc4
   204ca:	ldr.w	r3, [r1, #451]	; 0x1c3
   204ce:	strd	r4, r5, [sp, #24]
   204d2:	ldr.w	r4, [r1, #447]	; 0x1bf
   204d6:	strd	r4, r3, [sp, #16]
   204da:	ldrd	r4, r5, [sp, #56]	; 0x38
   204de:	strd	r4, r5, [sp, #8]
   204e2:	ldr	r3, [r2, #76]	; 0x4c
   204e4:	str	r3, [sp, #0]
   204e6:	movs	r3, #0
   204e8:	str	r3, [sp, #4]
   204ea:	ldrd	r2, r3, [r2, #40]	; 0x28
   204ee:	bl	20344 <btrfs_free_extent@@Base>
   204f2:	add	sp, #44	; 0x2c
   204f4:	pop	{r4, r5, pc}

000204f6 <btrfs_free_block_groups@@Base>:
   204f6:	ldr	r2, [pc, #260]	; (205fc <btrfs_free_block_groups@@Base+0x106>)
   204f8:	ldr	r3, [pc, #260]	; (20600 <btrfs_free_block_groups@@Base+0x10a>)
   204fa:	add	r2, pc
   204fc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   20500:	sub	sp, #52	; 0x34
   20502:	ldr	r3, [r2, r3]
   20504:	add.w	r6, r0, #128	; 0x80
   20508:	add	r7, sp, #24
   2050a:	mov	r4, r0
   2050c:	ldr	r3, [r3, #0]
   2050e:	str	r3, [sp, #44]	; 0x2c
   20510:	mov.w	r3, #0
   20514:	mov.w	r9, #4294967295	; 0xffffffff
   20518:	add.w	r8, sp, #16
   2051c:	movs	r2, #0
   2051e:	movs	r3, #0
   20520:	mov	r0, r6
   20522:	strd	r7, r9, [sp, #4]
   20526:	str.w	r8, [sp]
   2052a:	bl	1620c <find_first_extent_bit@@Base>
   2052e:	cbz	r0, 2056e <btrfs_free_block_groups@@Base+0x78>
   20530:	add.w	r5, r4, #96	; 0x60
   20534:	movs	r6, #1
   20536:	movs	r2, #0
   20538:	movs	r3, #0
   2053a:	mov	r0, r5
   2053c:	strd	r7, r6, [sp, #4]
   20540:	str.w	r8, [sp]
   20544:	bl	1620c <find_first_extent_bit@@Base>
   20548:	cbz	r0, 205ae <btrfs_free_block_groups@@Base+0xb8>
   2054a:	ldr	r6, [pc, #184]	; (20604 <btrfs_free_block_groups@@Base+0x10e>)
   2054c:	add.w	r5, r4, #356	; 0x164
   20550:	add	r6, pc
   20552:	ldr.w	r3, [r4, #356]	; 0x164
   20556:	cmp	r3, r5
   20558:	bne.n	205c2 <btrfs_free_block_groups@@Base+0xcc>
   2055a:	ldr	r2, [pc, #172]	; (20608 <btrfs_free_block_groups@@Base+0x112>)
   2055c:	ldr	r3, [pc, #160]	; (20600 <btrfs_free_block_groups@@Base+0x10a>)
   2055e:	add	r2, pc
   20560:	ldr	r3, [r2, r3]
   20562:	ldr	r2, [r3, #0]
   20564:	ldr	r3, [sp, #44]	; 0x2c
   20566:	eors	r2, r3
   20568:	beq.n	205f2 <btrfs_free_block_groups@@Base+0xfc>
   2056a:	blx	8510 <__stack_chk_fail@plt>
   2056e:	add	r3, sp, #32
   20570:	mov	r0, r6
   20572:	str	r3, [sp, #0]
   20574:	ldrd	r2, r3, [sp, #16]
   20578:	bl	162e8 <get_state_private@@Base>
   2057c:	cbnz	r0, 20596 <btrfs_free_block_groups@@Base+0xa0>
   2057e:	ldr	r5, [sp, #32]
   20580:	ldr	r3, [r5, #64]	; 0x40
   20582:	cbz	r3, 20590 <btrfs_free_block_groups@@Base+0x9a>
   20584:	mov	r0, r5
   20586:	bl	2630c <btrfs_remove_free_space_cache@@Base>
   2058a:	ldr	r0, [r5, #64]	; 0x40
   2058c:	blx	8434 <free@plt+0x4>
   20590:	mov	r0, r5
   20592:	blx	8434 <free@plt+0x4>
   20596:	ldrd	r2, r3, [sp, #24]
   2059a:	mov	r0, r6
   2059c:	str.w	r9, [sp, #8]
   205a0:	strd	r2, r3, [sp]
   205a4:	ldrd	r2, r3, [sp, #16]
   205a8:	bl	15e3a <clear_extent_bits@@Base>
   205ac:	b.n	20518 <btrfs_free_block_groups@@Base+0x22>
   205ae:	ldrd	r2, r3, [sp, #24]
   205b2:	mov	r0, r5
   205b4:	strd	r2, r3, [sp]
   205b8:	ldrd	r2, r3, [sp, #16]
   205bc:	bl	161f4 <clear_extent_dirty@@Base>
   205c0:	b.n	20536 <btrfs_free_block_groups@@Base+0x40>
   205c2:	ldrd	r1, r2, [r3]
   205c6:	sub.w	r7, r3, #44	; 0x2c
   205ca:	str	r2, [r1, #4]
   205cc:	str	r1, [r2, #0]
   205ce:	ldrd	r0, r1, [r3, #-12]
   205d2:	strd	r3, r3, [r3]
   205d6:	orrs.w	r2, r0, r1
   205da:	beq.n	205ea <btrfs_free_block_groups@@Base+0xf4>
   205dc:	strd	r0, r1, [sp]
   205e0:	mov	r0, r6
   205e2:	ldrd	r2, r3, [r3, #-44]	; 0x2c
   205e6:	bl	16af4 <__btrfs_warning@@Base>
   205ea:	mov	r0, r7
   205ec:	blx	8434 <free@plt+0x4>
   205f0:	b.n	20552 <btrfs_free_block_groups@@Base+0x5c>
   205f2:	movs	r0, #0
   205f4:	add	sp, #52	; 0x34
   205f6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   205fa:	nop
   205fc:	subs	r0, #138	; 0x8a
   205fe:	movs	r4, r0
   20600:	lsls	r0, r4, #8
   20602:	movs	r0, r0
   20604:	ldmia	r2, {r2, r3, r4, r5, r6}
   20606:	movs	r1, r0
   20608:	subs	r0, #38	; 0x26
   2060a:	movs	r4, r0

0002060c <btrfs_make_block_groups@@Base>:
   2060c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20610:	mov	r7, r1
   20612:	vpush	{d8-d9}
   20616:	movs	r6, #0
   20618:	ldr	r2, [pc, #768]	; (2091c <btrfs_make_block_groups@@Base+0x310>)
   2061a:	mov	r8, r6
   2061c:	ldr	r3, [pc, #768]	; (20920 <btrfs_make_block_groups@@Base+0x314>)
   2061e:	mov	r9, r6
   20620:	add	r2, pc
   20622:	vmov	s19, r0
   20626:	sub	sp, #124	; 0x7c
   20628:	ldr	r3, [r2, r3]
   2062a:	ldr	r3, [r3, #0]
   2062c:	str	r3, [sp, #116]	; 0x74
   2062e:	mov.w	r3, #0
   20632:	ldr	r3, [r1, #24]
   20634:	vmov	s18, r3
   20638:	add.w	r3, r1, #128	; 0x80
   2063c:	vmov	s16, r3
   20640:	ldr.w	r3, [r1, #308]	; 0x134
   20644:	ldr	r2, [r3, #112]	; 0x70
   20646:	str	r2, [sp, #40]	; 0x28
   20648:	movs	r2, #0
   2064a:	ldr	r3, [r3, #116]	; 0x74
   2064c:	str	r3, [sp, #44]	; 0x2c
   2064e:	ldr.w	r3, [r1, #388]	; 0x184
   20652:	lsls	r3, r3, #6
   20654:	mov	r1, r3
   20656:	movs	r3, #0
   20658:	strd	r1, r2, [sp, #64]	; 0x40
   2065c:	movs	r2, #12
   2065e:	ldrd	r0, r1, [sp, #40]	; 0x28
   20662:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   20666:	ldr	r3, [pc, #700]	; (20924 <btrfs_make_block_groups@@Base+0x318>)
   20668:	str	r6, [sp, #80]	; 0x50
   2066a:	add	r3, pc
   2066c:	strd	r6, r6, [sp, #32]
   20670:	addw	r3, r3, #461	; 0x1cd
   20674:	vmov	s17, r3
   20678:	strd	r0, r1, [sp, #56]	; 0x38
   2067c:	ldrd	r2, r3, [sp, #40]	; 0x28
   20680:	cmp	r9, r3
   20682:	it	eq
   20684:	cmpeq	r8, r2
   20686:	bcc.n	206c0 <btrfs_make_block_groups@@Base+0xb4>
   20688:	ldr.w	r8, [pc, #668]	; 20928 <btrfs_make_block_groups@@Base+0x31c>
   2068c:	movs	r4, #0
   2068e:	ldr.w	r9, [pc, #668]	; 2092c <btrfs_make_block_groups@@Base+0x320>
   20692:	movs	r5, #0
   20694:	add	r8, pc
   20696:	addw	r8, r8, #461	; 0x1cd
   2069a:	add	r9, pc
   2069c:	ldrd	r2, r3, [sp, #40]	; 0x28
   206a0:	cmp	r5, r3
   206a2:	it	eq
   206a4:	cmpeq	r4, r2
   206a6:	bcc.w	20896 <btrfs_make_block_groups@@Base+0x28a>
   206aa:	ldr	r2, [pc, #644]	; (20930 <btrfs_make_block_groups@@Base+0x324>)
   206ac:	ldr	r3, [pc, #624]	; (20920 <btrfs_make_block_groups@@Base+0x314>)
   206ae:	add	r2, pc
   206b0:	ldr	r3, [r2, r3]
   206b2:	ldr	r2, [r3, #0]
   206b4:	ldr	r3, [sp, #116]	; 0x74
   206b6:	eors	r2, r3
   206b8:	beq.w	20910 <btrfs_make_block_groups@@Base+0x304>
   206bc:	blx	8510 <__stack_chk_fail@plt>
   206c0:	ldr	r3, [sp, #40]	; 0x28
   206c2:	ldrd	sl, fp, [sp, #56]	; 0x38
   206c6:	subs.w	r3, r3, r8
   206ca:	str	r3, [sp, #24]
   206cc:	ldr	r3, [sp, #44]	; 0x2c
   206ce:	sbc.w	r3, r3, r9
   206d2:	str	r3, [sp, #28]
   206d4:	ldrd	r0, r1, [sp, #24]
   206d8:	ldrd	r3, r2, [sp, #56]	; 0x38
   206dc:	cmp	r1, fp
   206de:	it	eq
   206e0:	cmpeq	r0, sl
   206e2:	it	cc
   206e4:	ldrdcc	r3, r2, [sp, #24]
   206e8:	orrs.w	r1, r8, r9
   206ec:	bne.w	207fa <btrfs_make_block_groups@@Base+0x1ee>
   206f0:	ldrd	r0, r1, [sp, #64]	; 0x40
   206f4:	lsrs	r3, r3, #2
   206f6:	orr.w	r3, r3, r2, lsl #30
   206fa:	negs	r0, r0
   206fc:	and.w	r4, r0, r3
   20700:	mov.w	r3, #0
   20704:	sbc.w	r1, r1, r1, lsl #1
   20708:	and.w	r5, r1, r2, lsr #2
   2070c:	mov.w	r2, #33554432	; 0x2000000
   20710:	cmp	r5, #0
   20712:	it	eq
   20714:	cmpeq.w	r4, #8388608	; 0x800000
   20718:	itt	cc
   2071a:	movcc.w	r4, #8388608	; 0x800000
   2071e:	movcc	r5, #0
   20720:	cmp	r3, r5
   20722:	it	eq
   20724:	cmpeq	r2, r4
   20726:	itt	cc
   20728:	movcc	r4, r2
   2072a:	movcc	r5, r3
   2072c:	movs	r2, #2
   2072e:	movs	r3, #0
   20730:	strd	r2, r3, [sp, #48]	; 0x30
   20734:	movs	r1, #120	; 0x78
   20736:	movs	r0, #1
   20738:	blx	839c <calloc@plt+0x4>
   2073c:	ldr	r1, [pc, #500]	; (20934 <btrfs_make_block_groups@@Base+0x328>)
   2073e:	vmov	r2, s17
   20742:	movw	r3, #2893	; 0xb4d
   20746:	add	r1, pc
   20748:	str	r1, [sp, #84]	; 0x54
   2074a:	mov	sl, r0
   2074c:	clz	r0, r0
   20750:	lsrs	r0, r0, #5
   20752:	str	r0, [sp, #0]
   20754:	ldr	r0, [pc, #480]	; (20938 <btrfs_make_block_groups@@Base+0x32c>)
   20756:	add	r0, pc
   20758:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   2075c:	ldrd	r0, r1, [sp, #48]	; 0x30
   20760:	strd	r8, r9, [sl, #40]	; 0x28
   20764:	movs	r2, #0
   20766:	str.w	r4, [sl, #49]	; 0x31
   2076a:	movs	r3, #192	; 0xc0
   2076c:	strd	r0, r1, [sl, #96]	; 0x60
   20770:	add.w	r0, sl, #60	; 0x3c
   20774:	strb.w	r3, [sl, #48]	; 0x30
   20778:	movs	r3, #0
   2077a:	str.w	r5, [sl, #53]	; 0x35
   2077e:	strd	r2, r3, [sl, #72]	; 0x48
   20782:	str	r0, [sp, #16]
   20784:	mov	r0, r7
   20786:	strd	r2, r3, [sp, #8]
   2078a:	strd	r4, r5, [sp]
   2078e:	ldrd	r2, r3, [sp, #48]	; 0x30
   20792:	bl	201ac <update_space_info@@Base>
   20796:	ldr	r1, [sp, #84]	; 0x54
   20798:	vmov	r2, s17
   2079c:	movw	r3, #2903	; 0xb57
   207a0:	str	r0, [sp, #0]
   207a2:	ldr	r0, [pc, #408]	; (2093c <btrfs_make_block_groups@@Base+0x330>)
   207a4:	add	r0, pc
   207a6:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   207aa:	ldrd	r2, r3, [sp, #48]	; 0x30
   207ae:	mov	r0, r7
   207b0:	bl	1dc70 <btrfs_create_tree@@Base+0x1fc>
   207b4:	adds.w	r3, r8, r4
   207b8:	adc.w	r1, r9, r5
   207bc:	vmov	r0, s16
   207c0:	mov	fp, r3
   207c2:	adds.w	r2, fp, #4294967295	; 0xffffffff
   207c6:	mov.w	r3, #24
   207ca:	str	r3, [sp, #8]
   207cc:	adc.w	r3, r1, #4294967295	; 0xffffffff
   207d0:	strd	r2, r3, [sp]
   207d4:	mov	r2, r8
   207d6:	mov	r3, r9
   207d8:	str	r1, [sp, #48]	; 0x30
   207da:	bl	15fb0 <set_extent_bits@@Base>
   207de:	movs	r3, #0
   207e0:	mov	r2, r8
   207e2:	str	r3, [sp, #4]
   207e4:	mov	r3, r9
   207e6:	vmov	r0, s16
   207ea:	mov	r8, fp
   207ec:	str.w	sl, [sp]
   207f0:	bl	162be <set_state_private@@Base>
   207f4:	ldr	r1, [sp, #48]	; 0x30
   207f6:	mov	r9, r1
   207f8:	b.n	2067c <btrfs_make_block_groups@@Base+0x70>
   207fa:	ldrd	r0, r1, [sp, #64]	; 0x40
   207fe:	negs	r0, r0
   20800:	and.w	r3, r3, r0
   20804:	sbc.w	r1, r1, r1, lsl #1
   20808:	ands	r2, r1
   2080a:	adds	r1, r6, r6
   2080c:	str	r1, [sp, #72]	; 0x48
   2080e:	ldr	r1, [sp, #80]	; 0x50
   20810:	adcs	r1, r1
   20812:	str	r1, [sp, #76]	; 0x4c
   20814:	ldrd	r4, r5, [sp, #72]	; 0x48
   20818:	ldrd	r0, r1, [sp, #32]
   2081c:	cmp	r1, r5
   2081e:	mov	r5, r2
   20820:	it	eq
   20822:	cmpeq	r0, r4
   20824:	mov.w	r2, #1073741824	; 0x40000000
   20828:	mov	r4, r3
   2082a:	bcc.n	20874 <btrfs_make_block_groups@@Base+0x268>
   2082c:	movs	r3, #0
   2082e:	cmp	r3, r5
   20830:	it	eq
   20832:	cmpeq	r2, r4
   20834:	it	cc
   20836:	movcc	r5, r3
   20838:	ldr	r3, [sp, #80]	; 0x50
   2083a:	it	cc
   2083c:	movcc	r4, r2
   2083e:	movs	r2, #4
   20840:	adds	r6, r6, r4
   20842:	adc.w	r3, r5, r3
   20846:	str	r3, [sp, #80]	; 0x50
   20848:	ldr	r1, [sp, #28]
   2084a:	movs	r3, #0
   2084c:	strd	r2, r3, [sp, #48]	; 0x30
   20850:	mov.w	ip, #5
   20854:	lsls	r3, r1, #2
   20856:	ldr	r1, [sp, #24]
   20858:	orr.w	r3, r3, r1, lsr #30
   2085c:	lsls	r2, r1, #2
   2085e:	umull	r0, r1, r4, ip
   20862:	mla	r1, ip, r5, r1
   20866:	cmp	r3, r1
   20868:	it	eq
   2086a:	cmpeq	r2, r0
   2086c:	it	cc
   2086e:	ldrdcc	r4, r5, [sp, #24]
   20872:	b.n	20734 <btrfs_make_block_groups@@Base+0x128>
   20874:	movs	r3, #1
   20876:	cmp	r3, r5
   20878:	it	eq
   2087a:	cmpeq	r2, r4
   2087c:	it	cc
   2087e:	movcc	r5, r3
   20880:	ldr	r3, [sp, #32]
   20882:	it	cc
   20884:	movcc	r4, r2
   20886:	movs	r2, #1
   20888:	adds	r3, r3, r4
   2088a:	str	r3, [sp, #32]
   2088c:	ldr	r3, [sp, #36]	; 0x24
   2088e:	adc.w	r3, r5, r3
   20892:	str	r3, [sp, #36]	; 0x24
   20894:	b.n	20848 <btrfs_make_block_groups@@Base+0x23c>
   20896:	mov	r2, r4
   20898:	mov	r3, r5
   2089a:	mov	r0, r7
   2089c:	bl	1e5ac <btrfs_lookup_block_group@@Base>
   208a0:	movw	r3, #2919	; 0xb67
   208a4:	mov	r2, r8
   208a6:	mov	r1, r9
   208a8:	mov	r6, r0
   208aa:	clz	r0, r0
   208ae:	lsrs	r0, r0, #5
   208b0:	str	r0, [sp, #0]
   208b2:	ldr	r0, [pc, #140]	; (20940 <btrfs_make_block_groups@@Base+0x334>)
   208b4:	add	r0, pc
   208b6:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   208ba:	ldr	r3, [r6, #72]	; 0x48
   208bc:	vmov	r1, s18
   208c0:	mov.w	r2, #256	; 0x100
   208c4:	vmov	r0, s19
   208c8:	str	r3, [sp, #92]	; 0x5c
   208ca:	ldr	r3, [r6, #76]	; 0x4c
   208cc:	str	r3, [sp, #96]	; 0x60
   208ce:	ldr	r3, [r6, #96]	; 0x60
   208d0:	str	r3, [sp, #108]	; 0x6c
   208d2:	ldr	r3, [r6, #100]	; 0x64
   208d4:	str	r3, [sp, #112]	; 0x70
   208d6:	movs	r3, #0
   208d8:	strd	r2, r3, [sp, #100]	; 0x64
   208dc:	add.w	r2, r6, #40	; 0x28
   208e0:	movs	r3, #24
   208e2:	str	r3, [sp, #0]
   208e4:	add	r3, sp, #92	; 0x5c
   208e6:	bl	1a9bc <btrfs_insert_item@@Base>
   208ea:	movw	r3, #2927	; 0xb6f
   208ee:	mov	r2, r8
   208f0:	mov	r1, r9
   208f2:	str	r0, [sp, #0]
   208f4:	ldr	r0, [pc, #76]	; (20944 <btrfs_make_block_groups@@Base+0x338>)
   208f6:	add	r0, pc
   208f8:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   208fc:	ldrd	r1, r0, [r6, #40]	; 0x28
   20900:	ldr.w	r3, [r6, #49]	; 0x31
   20904:	ldr.w	r2, [r6, #53]	; 0x35
   20908:	adds	r4, r3, r1
   2090a:	adc.w	r5, r2, r0
   2090e:	b.n	2069c <btrfs_make_block_groups@@Base+0x90>
   20910:	movs	r0, #0
   20912:	add	sp, #124	; 0x7c
   20914:	vpop	{d8-d9}
   20918:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2091c:	adds	r7, #100	; 0x64
   2091e:	movs	r4, r0
   20920:	lsls	r0, r4, #8
   20922:	movs	r0, r0
   20924:	ldmia	r4, {r3, r4, r5}
   20926:	movs	r1, r0
   20928:	ldmia	r4!, {r1, r2, r3}
   2092a:	movs	r1, r0
   2092c:	stmia	r4!, {r0, r1, r2, r4, r6, r7}
   2092e:	movs	r1, r0
   20930:	adds	r6, #214	; 0xd6
   20932:	movs	r4, r0
   20934:	stmia	r4!, {r0, r1, r3, r5}
   20936:	movs	r1, r0
   20938:	ldmia	r0, {r0, r2, r3, r5, r7}
   2093a:	movs	r1, r0
   2093c:	ldrh	r0, [r0, #42]	; 0x2a
   2093e:	movs	r1, r0
   20940:	stmia	r7!, {r0, r1, r2, r3, r6}
   20942:	movs	r1, r0
   20944:	ldrh	r6, [r5, #30]
   20946:	movs	r1, r0

00020948 <btrfs_update_block_group@@Base>:
   20948:	ldr.w	r0, [r0, #464]	; 0x1d0
   2094c:	b.w	1e734 <btrfs_lookup_block_group@@Base+0x188>

00020950 <btrfs_free_block_group@@Base>:
   20950:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20954:	mov	fp, r3
   20956:	vpush	{d8}
   2095a:	mov	sl, r2
   2095c:	ldr.w	r3, [pc, #1568]	; 20f80 <btrfs_free_block_group@@Base+0x630>
   20960:	mov	r9, r1
   20962:	ldr.w	r2, [pc, #1568]	; 20f84 <btrfs_free_block_group@@Base+0x634>
   20966:	mov	r8, r0
   20968:	add	r3, pc
   2096a:	sub	sp, #164	; 0xa4
   2096c:	add	r2, pc
   2096e:	ldr	r1, [r1, #24]
   20970:	str	r3, [sp, #36]	; 0x24
   20972:	ldr.w	r3, [pc, #1556]	; 20f88 <btrfs_free_block_group@@Base+0x638>
   20976:	ldr	r3, [r2, r3]
   20978:	ldr	r3, [r3, #0]
   2097a:	str	r3, [sp, #156]	; 0x9c
   2097c:	mov.w	r3, #0
   20980:	str	r1, [sp, #24]
   20982:	bl	17544 <btrfs_alloc_path@@Base>
   20986:	str	r0, [sp, #28]
   20988:	cmp	r0, #0
   2098a:	beq.w	20f6c <btrfs_free_block_group@@Base+0x61c>
   2098e:	ldr	r3, [sp, #208]	; 0xd0
   20990:	add	r2, sp, #96	; 0x60
   20992:	ldr	r1, [sp, #24]
   20994:	movs	r4, #192	; 0xc0
   20996:	strd	sl, fp, [sp, #96]	; 0x60
   2099a:	str.w	r3, [sp, #105]	; 0x69
   2099e:	ldr	r3, [sp, #212]	; 0xd4
   209a0:	strb.w	r4, [sp, #104]	; 0x68
   209a4:	str.w	r3, [sp, #109]	; 0x6d
   209a8:	movs	r3, #0
   209aa:	strd	r3, r3, [sp]
   209ae:	mov	r3, r0
   209b0:	mov	r0, r8
   209b2:	bl	19930 <btrfs_search_slot@@Base>
   209b6:	subs	r3, r0, #0
   209b8:	str	r3, [sp, #24]
   209ba:	bgt.w	20f66 <btrfs_free_block_group@@Base+0x616>
   209be:	bne.n	20a92 <btrfs_free_block_group@@Base+0x142>
   209c0:	ldr	r3, [sp, #28]
   209c2:	movs	r1, #25
   209c4:	ldr	r2, [sp, #28]
   209c6:	ldr	r3, [r3, #0]
   209c8:	ldr	r2, [r2, #32]
   209ca:	adds	r3, #96	; 0x60
   209cc:	mla	r2, r1, r2, r3
   209d0:	ldr.w	r2, [r2, #118]	; 0x76
   209d4:	add	r3, r2
   209d6:	ldr.w	r0, [r3, #101]!
   209da:	ldr	r1, [r3, #4]
   209dc:	orrs.w	r3, r0, r1
   209e0:	beq.n	20a14 <btrfs_free_block_group@@Base+0xc4>
   209e2:	ldr	r2, [sp, #36]	; 0x24
   209e4:	ldr.w	r3, [pc, #1444]	; 20f8c <btrfs_free_block_group@@Base+0x63c>
   209e8:	ldr	r3, [r2, r3]
   209ea:	ldr	r2, [sp, #208]	; 0xd0
   209ec:	strd	sl, fp, [sp]
   209f0:	adds.w	r1, sl, r2
   209f4:	ldr	r2, [sp, #212]	; 0xd4
   209f6:	adc.w	r2, fp, r2
   209fa:	strd	r1, r2, [sp, #8]
   209fe:	ldr.w	r2, [pc, #1424]	; 20f90 <btrfs_free_block_group@@Base+0x640>
   20a02:	movs	r1, #1
   20a04:	ldr	r0, [r3, #0]
   20a06:	add	r2, pc
   20a08:	blx	8860 <__fprintf_chk@plt+0x4>
   20a0c:	mvn.w	r3, #21
   20a10:	str	r3, [sp, #24]
   20a12:	b.n	20a92 <btrfs_free_block_group@@Base+0x142>
   20a14:	ldr	r0, [sp, #28]
   20a16:	bl	1754c <btrfs_release_path@@Base>
   20a1a:	ldrd	r2, r3, [sp, #208]	; 0xd0
   20a1e:	mov	r0, r9
   20a20:	strd	r2, r3, [sp]
   20a24:	mov	r2, sl
   20a26:	mov	r3, fp
   20a28:	bl	2032c <btrfs_pin_extent@@Base>
   20a2c:	ldr	r3, [sp, #208]	; 0xd0
   20a2e:	ldr.w	r1, [r9, #24]
   20a32:	strd	sl, fp, [sp, #136]	; 0x88
   20a36:	str.w	r3, [sp, #145]	; 0x91
   20a3a:	ldr	r3, [sp, #212]	; 0xd4
   20a3c:	str	r1, [sp, #32]
   20a3e:	strb.w	r4, [sp, #144]	; 0x90
   20a42:	str.w	r3, [sp, #149]	; 0x95
   20a46:	bl	17544 <btrfs_alloc_path@@Base>
   20a4a:	ldr	r1, [sp, #32]
   20a4c:	mov	r5, r0
   20a4e:	cbnz	r0, 20ab2 <btrfs_free_block_group@@Base+0x162>
   20a50:	mvn.w	r4, #11
   20a54:	ldr	r2, [sp, #36]	; 0x24
   20a56:	ldr.w	r3, [pc, #1332]	; 20f8c <btrfs_free_block_group@@Base+0x63c>
   20a5a:	ldr	r3, [r2, r3]
   20a5c:	ldr	r2, [sp, #208]	; 0xd0
   20a5e:	strd	sl, fp, [sp]
   20a62:	adds.w	r1, sl, r2
   20a66:	ldr	r2, [sp, #212]	; 0xd4
   20a68:	adc.w	r2, fp, r2
   20a6c:	strd	r1, r2, [sp, #8]
   20a70:	ldr.w	r2, [pc, #1312]	; 20f94 <btrfs_free_block_group@@Base+0x644>
   20a74:	add	r2, pc
   20a76:	ldr	r0, [r3, #0]
   20a78:	movs	r1, #1
   20a7a:	blx	8860 <__fprintf_chk@plt+0x4>
   20a7e:	ldrd	r2, r3, [sp, #208]	; 0xd0
   20a82:	mov	r0, r9
   20a84:	strd	r2, r3, [sp]
   20a88:	mov	r2, sl
   20a8a:	mov	r3, fp
   20a8c:	bl	204a0 <btrfs_unpin_extent@@Base>
   20a90:	str	r4, [sp, #24]
   20a92:	ldr	r0, [sp, #28]
   20a94:	bl	17572 <btrfs_free_path@@Base>
   20a98:	ldr.w	r2, [pc, #1276]	; 20f98 <btrfs_free_block_group@@Base+0x648>
   20a9c:	ldr.w	r3, [pc, #1256]	; 20f88 <btrfs_free_block_group@@Base+0x638>
   20aa0:	add	r2, pc
   20aa2:	ldr	r3, [r2, r3]
   20aa4:	ldr	r2, [r3, #0]
   20aa6:	ldr	r3, [sp, #156]	; 0x9c
   20aa8:	eors	r2, r3
   20aaa:	beq.w	20f74 <btrfs_free_block_group@@Base+0x624>
   20aae:	blx	8510 <__stack_chk_fail@plt>
   20ab2:	mov.w	r3, #4294967295	; 0xffffffff
   20ab6:	add	r2, sp, #136	; 0x88
   20ab8:	movs	r6, #1
   20aba:	strd	r3, r6, [sp]
   20abe:	mov	r3, r0
   20ac0:	mov	r0, r8
   20ac2:	str	r1, [sp, #32]
   20ac4:	bl	19930 <btrfs_search_slot@@Base>
   20ac8:	subs	r4, r0, #0
   20aca:	bgt.n	20b1c <btrfs_free_block_group@@Base+0x1cc>
   20acc:	bne.n	20ada <btrfs_free_block_group@@Base+0x18a>
   20ace:	ldr	r1, [sp, #32]
   20ad0:	mov	r2, r5
   20ad2:	mov	r0, r8
   20ad4:	bl	1dd80 <btrfs_create_tree@@Base+0x30c>
   20ad8:	mov	r4, r0
   20ada:	mov	r0, r5
   20adc:	bl	17572 <btrfs_free_path@@Base>
   20ae0:	cmp	r4, #0
   20ae2:	blt.n	20a54 <btrfs_free_block_group@@Base+0x104>
   20ae4:	ldr.w	r1, [r9, #32]
   20ae8:	str	r1, [sp, #32]
   20aea:	bl	17544 <btrfs_alloc_path@@Base>
   20aee:	ldr	r1, [sp, #32]
   20af0:	mov	r5, r0
   20af2:	cbnz	r0, 20b22 <btrfs_free_block_group@@Base+0x1d2>
   20af4:	mvn.w	r4, #11
   20af8:	ldr	r2, [sp, #36]	; 0x24
   20afa:	ldr.w	r3, [pc, #1168]	; 20f8c <btrfs_free_block_group@@Base+0x63c>
   20afe:	ldr	r3, [r2, r3]
   20b00:	ldr	r2, [sp, #208]	; 0xd0
   20b02:	strd	sl, fp, [sp]
   20b06:	adds.w	r1, sl, r2
   20b0a:	ldr	r2, [sp, #212]	; 0xd4
   20b0c:	adc.w	r2, fp, r2
   20b10:	strd	r1, r2, [sp, #8]
   20b14:	ldr.w	r2, [pc, #1156]	; 20f9c <btrfs_free_block_group@@Base+0x64c>
   20b18:	add	r2, pc
   20b1a:	b.n	20a76 <btrfs_free_block_group@@Base+0x126>
   20b1c:	mvn.w	r4, #1
   20b20:	b.n	20ada <btrfs_free_block_group@@Base+0x18a>
   20b22:	movs	r3, #0
   20b24:	mov.w	r4, #256	; 0x100
   20b28:	movs	r2, #228	; 0xe4
   20b2a:	strd	r4, r3, [sp, #116]	; 0x74
   20b2e:	strb.w	r2, [sp, #124]	; 0x7c
   20b32:	add	r2, sp, #116	; 0x74
   20b34:	strd	r3, r3, [sp]
   20b38:	mov	r3, r0
   20b3a:	mov	r0, r8
   20b3c:	str.w	sl, [sp, #125]	; 0x7d
   20b40:	str.w	fp, [sp, #129]	; 0x81
   20b44:	bl	19930 <btrfs_search_slot@@Base>
   20b48:	subs	r4, r0, #0
   20b4a:	blt.n	20ba6 <btrfs_free_block_group@@Base+0x256>
   20b4c:	bne.w	20c58 <btrfs_free_block_group@@Base+0x308>
   20b50:	ldr	r3, [r5, #0]
   20b52:	movs	r1, #25
   20b54:	ldr	r2, [r5, #32]
   20b56:	adds	r3, #96	; 0x60
   20b58:	str	r4, [sp, #32]
   20b5a:	mla	r2, r1, r2, r3
   20b5e:	ldr.w	r6, [r2, #118]	; 0x76
   20b62:	add	r3, r6
   20b64:	adds	r6, #149	; 0x95
   20b66:	ldrh.w	r3, [r3, #145]	; 0x91
   20b6a:	str	r3, [sp, #40]	; 0x28
   20b6c:	add	r3, sp, #136	; 0x88
   20b6e:	vmov	s16, r3
   20b72:	ldr	r3, [sp, #32]
   20b74:	ldr	r2, [sp, #40]	; 0x28
   20b76:	cmp	r3, r2
   20b78:	bge.n	20ba6 <btrfs_free_block_group@@Base+0x256>
   20b7a:	ldr	r3, [r5, #0]
   20b7c:	adds	r3, #96	; 0x60
   20b7e:	adds	r1, r3, r6
   20b80:	ldr	r2, [r3, r6]
   20b82:	ldr	r3, [r1, #4]
   20b84:	ldr	r4, [r1, #12]
   20b86:	str	r2, [sp, #56]	; 0x38
   20b88:	str	r3, [sp, #44]	; 0x2c
   20b8a:	ldr	r3, [r1, #8]
   20b8c:	ldr.w	r1, [r9, #36]	; 0x24
   20b90:	str	r3, [sp, #52]	; 0x34
   20b92:	str	r1, [sp, #48]	; 0x30
   20b94:	bl	17544 <btrfs_alloc_path@@Base>
   20b98:	ldrd	r1, r3, [sp, #48]	; 0x30
   20b9c:	ldr	r2, [sp, #56]	; 0x38
   20b9e:	mov	r7, r0
   20ba0:	cbnz	r0, 20bfe <btrfs_free_block_group@@Base+0x2ae>
   20ba2:	mvn.w	r4, #11
   20ba6:	mov	r0, r5
   20ba8:	bl	17572 <btrfs_free_path@@Base>
   20bac:	cmp	r4, #0
   20bae:	blt.n	20af8 <btrfs_free_block_group@@Base+0x1a8>
   20bb0:	ldr.w	r1, [r9, #32]
   20bb4:	mov.w	r2, #256	; 0x100
   20bb8:	movs	r3, #0
   20bba:	str.w	sl, [sp, #145]	; 0x91
   20bbe:	strd	r2, r3, [sp, #136]	; 0x88
   20bc2:	movs	r3, #228	; 0xe4
   20bc4:	str	r1, [sp, #32]
   20bc6:	str.w	fp, [sp, #149]	; 0x95
   20bca:	strb.w	r3, [sp, #144]	; 0x90
   20bce:	bl	17544 <btrfs_alloc_path@@Base>
   20bd2:	ldr	r1, [sp, #32]
   20bd4:	mov	r6, r0
   20bd6:	cmp	r0, #0
   20bd8:	bne.n	20c5e <btrfs_free_block_group@@Base+0x30e>
   20bda:	mvn.w	r4, #11
   20bde:	ldr	r2, [sp, #36]	; 0x24
   20be0:	ldr	r3, [pc, #936]	; (20f8c <btrfs_free_block_group@@Base+0x63c>)
   20be2:	ldr	r3, [r2, r3]
   20be4:	ldr	r2, [sp, #208]	; 0xd0
   20be6:	strd	sl, fp, [sp]
   20bea:	adds.w	r1, sl, r2
   20bee:	ldr	r2, [sp, #212]	; 0xd4
   20bf0:	adc.w	r2, fp, r2
   20bf4:	strd	r1, r2, [sp, #8]
   20bf8:	ldr	r2, [pc, #932]	; (20fa0 <btrfs_free_block_group@@Base+0x650>)
   20bfa:	add	r2, pc
   20bfc:	b.n	20a76 <btrfs_free_block_group@@Base+0x126>
   20bfe:	str	r2, [sp, #136]	; 0x88
   20c00:	movs	r0, #1
   20c02:	ldr	r2, [sp, #44]	; 0x2c
   20c04:	str.w	r3, [sp, #145]	; 0x91
   20c08:	mov.w	r3, #4294967295	; 0xffffffff
   20c0c:	strd	r3, r0, [sp]
   20c10:	mov	r3, r7
   20c12:	str	r2, [sp, #140]	; 0x8c
   20c14:	mov	r0, r8
   20c16:	mvn.w	r2, #51	; 0x33
   20c1a:	strb.w	r2, [sp, #144]	; 0x90
   20c1e:	vmov	r2, s16
   20c22:	str.w	r4, [sp, #149]	; 0x95
   20c26:	str	r1, [sp, #44]	; 0x2c
   20c28:	bl	19930 <btrfs_search_slot@@Base>
   20c2c:	subs	r4, r0, #0
   20c2e:	blt.n	20c3e <btrfs_free_block_group@@Base+0x2ee>
   20c30:	bne.n	20c52 <btrfs_free_block_group@@Base+0x302>
   20c32:	ldr	r1, [sp, #44]	; 0x2c
   20c34:	mov	r2, r7
   20c36:	mov	r0, r8
   20c38:	bl	1dd80 <btrfs_create_tree@@Base+0x30c>
   20c3c:	mov	r4, r0
   20c3e:	mov	r0, r7
   20c40:	adds	r6, #32
   20c42:	bl	17572 <btrfs_free_path@@Base>
   20c46:	cmp	r4, #0
   20c48:	blt.n	20ba6 <btrfs_free_block_group@@Base+0x256>
   20c4a:	ldr	r3, [sp, #32]
   20c4c:	adds	r3, #1
   20c4e:	str	r3, [sp, #32]
   20c50:	b.n	20b72 <btrfs_free_block_group@@Base+0x222>
   20c52:	mvn.w	r4, #1
   20c56:	b.n	20c3e <btrfs_free_block_group@@Base+0x2ee>
   20c58:	mvn.w	r4, #1
   20c5c:	b.n	20ba6 <btrfs_free_block_group@@Base+0x256>
   20c5e:	mov.w	r3, #4294967295	; 0xffffffff
   20c62:	movs	r2, #1
   20c64:	strd	r3, r2, [sp]
   20c68:	mov	r3, r0
   20c6a:	add	r2, sp, #136	; 0x88
   20c6c:	mov	r0, r8
   20c6e:	str	r1, [sp, #40]	; 0x28
   20c70:	bl	19930 <btrfs_search_slot@@Base>
   20c74:	subs	r3, r0, #0
   20c76:	str	r3, [sp, #32]
   20c78:	bgt.w	20d8e <btrfs_free_block_group@@Base+0x43e>
   20c7c:	bne.n	20d7e <btrfs_free_block_group@@Base+0x42e>
   20c7e:	ldr	r3, [r6, #0]
   20c80:	movs	r0, #25
   20c82:	ldr	r2, [r6, #32]
   20c84:	adds	r3, #96	; 0x60
   20c86:	ldr	r1, [sp, #40]	; 0x28
   20c88:	mla	r2, r0, r2, r3
   20c8c:	mov	r0, r8
   20c8e:	ldr.w	r2, [r2, #118]	; 0x76
   20c92:	add	r3, r2
   20c94:	mov	r2, r6
   20c96:	ldr.w	r5, [r3, #125]	; 0x7d
   20c9a:	bl	1dd80 <btrfs_create_tree@@Base+0x30c>
   20c9e:	subs	r4, r0, #0
   20ca0:	blt.n	20d92 <btrfs_free_block_group@@Base+0x442>
   20ca2:	ldr	r3, [sp, #32]
   20ca4:	and.w	r2, r5, #2
   20ca8:	orrs	r3, r2
   20caa:	beq.n	20d92 <btrfs_free_block_group@@Base+0x442>
   20cac:	ldr.w	r3, [r9, #308]	; 0x134
   20cb0:	ldr	r5, [sp, #32]
   20cb2:	str	r3, [sp, #40]	; 0x28
   20cb4:	ldr.w	r3, [r3, #160]	; 0xa0
   20cb8:	str	r3, [sp, #44]	; 0x2c
   20cba:	ldr	r3, [sp, #40]	; 0x28
   20cbc:	addw	r3, r3, #811	; 0x32b
   20cc0:	str	r3, [sp, #48]	; 0x30
   20cc2:	ldrd	r3, r4, [sp, #136]	; 0x88
   20cc6:	strd	r3, r4, [sp, #80]	; 0x50
   20cca:	ldr.w	r3, [sp, #145]	; 0x91
   20cce:	str	r3, [sp, #56]	; 0x38
   20cd0:	ldr.w	r3, [sp, #149]	; 0x95
   20cd4:	str	r3, [sp, #60]	; 0x3c
   20cd6:	ldrb.w	r3, [sp, #144]	; 0x90
   20cda:	str	r3, [sp, #88]	; 0x58
   20cdc:	ldr	r3, [pc, #708]	; (20fa4 <btrfs_free_block_group@@Base+0x654>)
   20cde:	add	r3, pc
   20ce0:	addw	r2, r3, #485	; 0x1e5
   20ce4:	ldr	r3, [pc, #704]	; (20fa8 <btrfs_free_block_group@@Base+0x658>)
   20ce6:	add	r3, pc
   20ce8:	vmov	s16, r3
   20cec:	ldr	r3, [sp, #44]	; 0x2c
   20cee:	cmp	r3, r5
   20cf0:	bhi.n	20cfa <btrfs_free_block_group@@Base+0x3aa>
   20cf2:	mvn.w	r3, #1
   20cf6:	str	r3, [sp, #32]
   20cf8:	b.n	20d7e <btrfs_free_block_group@@Base+0x42e>
   20cfa:	ldr	r3, [sp, #48]	; 0x30
   20cfc:	adds	r7, r3, r5
   20cfe:	ldr	r3, [r3, r5]
   20d00:	str	r3, [sp, #64]	; 0x40
   20d02:	ldr	r3, [r7, #4]
   20d04:	str	r3, [sp, #68]	; 0x44
   20d06:	ldrb	r3, [r7, #8]
   20d08:	cmp	r3, #228	; 0xe4
   20d0a:	bne.n	20d88 <btrfs_free_block_group@@Base+0x438>
   20d0c:	ldrh.w	r4, [r7, #61]	; 0x3d
   20d10:	ldr	r0, [pc, #664]	; (20fac <btrfs_free_block_group@@Base+0x65c>)
   20d12:	clz	r3, r4
   20d16:	vmov	r1, s16
   20d1a:	add	r0, pc
   20d1c:	lsls	r4, r4, #5
   20d1e:	lsrs	r3, r3, #5
   20d20:	str	r3, [sp, #0]
   20d22:	mov.w	r3, #322	; 0x142
   20d26:	str	r2, [sp, #92]	; 0x5c
   20d28:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   20d2c:	ldrd	r0, r1, [sp, #64]	; 0x40
   20d30:	add.w	r3, r4, #65	; 0x41
   20d34:	str	r3, [sp, #52]	; 0x34
   20d36:	ldrd	r2, r3, [sp, #80]	; 0x50
   20d3a:	cmp	r3, r1
   20d3c:	it	eq
   20d3e:	cmpeq	r2, r0
   20d40:	ldr	r2, [sp, #92]	; 0x5c
   20d42:	bne.n	20d82 <btrfs_free_block_group@@Base+0x432>
   20d44:	ldrd	r3, r4, [sp, #56]	; 0x38
   20d48:	ldr.w	r1, [r7, #13]
   20d4c:	ldr.w	r0, [r7, #9]
   20d50:	cmp	r4, r1
   20d52:	it	eq
   20d54:	cmpeq	r3, r0
   20d56:	bne.n	20d82 <btrfs_free_block_group@@Base+0x432>
   20d58:	ldr	r3, [sp, #88]	; 0x58
   20d5a:	cmp	r3, #228	; 0xe4
   20d5c:	bne.n	20d82 <btrfs_free_block_group@@Base+0x432>
   20d5e:	ldr	r3, [sp, #52]	; 0x34
   20d60:	mov	r0, r7
   20d62:	adds	r1, r5, r3
   20d64:	ldr	r3, [sp, #44]	; 0x2c
   20d66:	subs	r2, r3, r1
   20d68:	ldr	r3, [sp, #48]	; 0x30
   20d6a:	add	r3, r1
   20d6c:	mov	r1, r3
   20d6e:	blx	8424 <memmove@plt+0x4>
   20d72:	ldr	r3, [sp, #44]	; 0x2c
   20d74:	ldr	r2, [sp, #52]	; 0x34
   20d76:	subs	r4, r3, r2
   20d78:	ldr	r3, [sp, #40]	; 0x28
   20d7a:	str.w	r4, [r3, #160]	; 0xa0
   20d7e:	ldr	r4, [sp, #32]
   20d80:	b.n	20d92 <btrfs_free_block_group@@Base+0x442>
   20d82:	ldr	r3, [sp, #52]	; 0x34
   20d84:	add	r5, r3
   20d86:	b.n	20cec <btrfs_free_block_group@@Base+0x39c>
   20d88:	mvn.w	r3, #4
   20d8c:	b.n	20cf6 <btrfs_free_block_group@@Base+0x3a6>
   20d8e:	mvn.w	r4, #1
   20d92:	mov	r0, r6
   20d94:	bl	17572 <btrfs_free_path@@Base>
   20d98:	cmp	r4, #0
   20d9a:	blt.w	20bde <btrfs_free_block_group@@Base+0x28e>
   20d9e:	mov	r2, sl
   20da0:	mov	r3, fp
   20da2:	mov	r0, r9
   20da4:	bl	1e5ac <btrfs_lookup_block_group@@Base>
   20da8:	mov	r6, r0
   20daa:	cbnz	r0, 20dc6 <btrfs_free_block_group@@Base+0x476>
   20dac:	mvn.w	r3, #1
   20db0:	str	r3, [sp, #24]
   20db2:	ldrd	r3, r4, [sp, #208]	; 0xd0
   20db6:	mov	r2, sl
   20db8:	mov	r0, r9
   20dba:	strd	r3, r4, [sp]
   20dbe:	mov	r3, fp
   20dc0:	bl	204a0 <btrfs_unpin_extent@@Base>
   20dc4:	b.n	20a92 <btrfs_free_block_group@@Base+0x142>
   20dc6:	ldr	r3, [r0, #64]	; 0x40
   20dc8:	ldrd	r4, r5, [r0, #96]	; 0x60
   20dcc:	cbz	r3, 20dd8 <btrfs_free_block_group@@Base+0x488>
   20dce:	bl	2630c <btrfs_remove_free_space_cache@@Base>
   20dd2:	ldr	r0, [r6, #64]	; 0x40
   20dd4:	blx	8434 <free@plt+0x4>
   20dd8:	mov.w	r3, #4294967295	; 0xffffffff
   20ddc:	str	r3, [sp, #8]
   20dde:	ldr	r3, [sp, #208]	; 0xd0
   20de0:	add.w	r0, r9, #128	; 0x80
   20de4:	ldr	r2, [sp, #212]	; 0xd4
   20de6:	adds.w	r3, r3, #4294967295	; 0xffffffff
   20dea:	adc.w	r2, r2, #4294967295	; 0xffffffff
   20dee:	adds.w	r3, r3, sl
   20df2:	adc.w	r2, r2, fp
   20df6:	strd	r3, r2, [sp]
   20dfa:	mov	r2, sl
   20dfc:	mov	r3, fp
   20dfe:	bl	15e3a <clear_extent_bits@@Base>
   20e02:	mov	r2, r4
   20e04:	mov	r3, r5
   20e06:	mov	r0, r9
   20e08:	bl	1dc3c <btrfs_create_tree@@Base+0x1c8>
   20e0c:	cmp	r0, #0
   20e0e:	beq.n	20dac <btrfs_free_block_group@@Base+0x45c>
   20e10:	ldrd	r4, r5, [r0, #8]
   20e14:	ldrd	r2, r3, [sp, #208]	; 0xd0
   20e18:	cmp	r5, r3
   20e1a:	it	eq
   20e1c:	cmpeq	r4, r2
   20e1e:	bcs.n	20e44 <btrfs_free_block_group@@Base+0x4f4>
   20e20:	ldr	r2, [sp, #36]	; 0x24
   20e22:	ldr	r3, [pc, #360]	; (20f8c <btrfs_free_block_group@@Base+0x63c>)
   20e24:	ldr	r3, [r2, r3]
   20e26:	ldrd	r1, r2, [sp, #208]	; 0xd0
   20e2a:	strd	r4, r5, [sp, #8]
   20e2e:	strd	r1, r2, [sp]
   20e32:	movs	r1, #1
   20e34:	ldr	r2, [pc, #376]	; (20fb0 <btrfs_free_block_group@@Base+0x660>)
   20e36:	ldr	r0, [r3, #0]
   20e38:	add	r2, pc
   20e3a:	blx	8860 <__fprintf_chk@plt+0x4>
   20e3e:	mvn.w	r3, #21
   20e42:	b.n	20db0 <btrfs_free_block_group@@Base+0x460>
   20e44:	ldr	r3, [sp, #208]	; 0xd0
   20e46:	subs	r2, r4, r3
   20e48:	ldr	r3, [sp, #212]	; 0xd4
   20e4a:	sbc.w	r3, r5, r3
   20e4e:	strd	r2, r3, [r0, #8]
   20e52:	mov	r0, r6
   20e54:	add.w	r6, r9, #228	; 0xe4
   20e58:	blx	8434 <free@plt+0x4>
   20e5c:	mov	r2, sl
   20e5e:	mov	r3, fp
   20e60:	mov	r0, r6
   20e62:	bl	156d0 <search_cache_extent@@Base>
   20e66:	mov	r4, r0
   20e68:	cmp	r0, #0
   20e6a:	beq.n	20dac <btrfs_free_block_group@@Base+0x45c>
   20e6c:	ldrd	r2, r3, [r0, #24]
   20e70:	cmp	fp, r3
   20e72:	it	eq
   20e74:	cmpeq	sl, r2
   20e76:	bne.n	20dac <btrfs_free_block_group@@Base+0x45c>
   20e78:	ldr	r5, [sp, #24]
   20e7a:	add.w	r3, r0, #72	; 0x48
   20e7e:	str	r3, [sp, #32]
   20e80:	ldr	r0, [r4, #64]	; 0x40
   20e82:	cmp	r5, r0
   20e84:	blt.n	20e96 <btrfs_free_block_group@@Base+0x546>
   20e86:	mov	r0, r6
   20e88:	mov	r1, r4
   20e8a:	bl	157a8 <remove_cache_extent@@Base>
   20e8e:	mov	r0, r4
   20e90:	blx	8434 <free@plt+0x4>
   20e94:	b.n	20db2 <btrfs_free_block_group@@Base+0x462>
   20e96:	ldr	r2, [sp, #32]
   20e98:	lsls	r3, r5, #4
   20e9a:	ldr	r7, [r2, r3]
   20e9c:	ldr	r3, [r4, #40]	; 0x28
   20e9e:	and.w	r2, r3, #2040	; 0x7f8
   20ea2:	str	r2, [sp, #16]
   20ea4:	movs	r2, #0
   20ea6:	str	r2, [sp, #20]
   20ea8:	ldrd	r1, r2, [sp, #16]
   20eac:	cmp	r2, #0
   20eae:	it	eq
   20eb0:	cmpeq	r1, #128	; 0x80
   20eb2:	beq.n	20f2a <btrfs_free_block_group@@Base+0x5da>
   20eb4:	cmp	r2, #0
   20eb6:	it	eq
   20eb8:	cmpeq	r1, #129	; 0x81
   20eba:	bcs.n	20f02 <btrfs_free_block_group@@Base+0x5b2>
   20ebc:	cmp	r2, #0
   20ebe:	it	eq
   20ec0:	cmpeq	r1, #64	; 0x40
   20ec2:	beq.n	20f5e <btrfs_free_block_group@@Base+0x60e>
   20ec4:	cmp	r2, #0
   20ec6:	it	eq
   20ec8:	cmpeq	r1, #65	; 0x41
   20eca:	bcs.n	20ee6 <btrfs_free_block_group@@Base+0x596>
   20ecc:	cmp	r2, #0
   20ece:	it	eq
   20ed0:	cmpeq	r1, #32
   20ed2:	beq.n	20f26 <btrfs_free_block_group@@Base+0x5d6>
   20ed4:	and.w	r3, r3, #2024	; 0x7e8
   20ed8:	str	r3, [sp, #72]	; 0x48
   20eda:	movs	r3, #0
   20edc:	str	r3, [sp, #76]	; 0x4c
   20ede:	ldrd	r2, r3, [sp, #72]	; 0x48
   20ee2:	orrs	r3, r2
   20ee4:	beq.n	20f26 <btrfs_free_block_group@@Base+0x5d6>
   20ee6:	ldr	r2, [pc, #204]	; (20fb4 <btrfs_free_block_group@@Base+0x664>)
   20ee8:	movs	r3, #1
   20eea:	ldr	r1, [pc, #204]	; (20fb8 <btrfs_free_block_group@@Base+0x668>)
   20eec:	ldr	r0, [pc, #204]	; (20fbc <btrfs_free_block_group@@Base+0x66c>)
   20eee:	add	r2, pc
   20ef0:	str	r3, [sp, #0]
   20ef2:	addw	r2, r2, #507	; 0x1fb
   20ef6:	add	r1, pc
   20ef8:	add	r0, pc
   20efa:	movw	r3, #3160	; 0xc58
   20efe:	bl	1dfec <btrfs_create_tree@@Base+0x578>
   20f02:	ldrd	r2, r3, [sp, #16]
   20f06:	cmp	r3, #0
   20f08:	it	eq
   20f0a:	cmpeq.w	r2, #256	; 0x100
   20f0e:	beq.n	20f5a <btrfs_free_block_group@@Base+0x60a>
   20f10:	bcc.n	20ee6 <btrfs_free_block_group@@Base+0x596>
   20f12:	cmp	r3, #0
   20f14:	it	eq
   20f16:	cmpeq.w	r2, #512	; 0x200
   20f1a:	beq.n	20f26 <btrfs_free_block_group@@Base+0x5d6>
   20f1c:	cmp	r3, #0
   20f1e:	it	eq
   20f20:	cmpeq.w	r2, #1024	; 0x400
   20f24:	bne.n	20ee6 <btrfs_free_block_group@@Base+0x596>
   20f26:	movs	r0, #1
   20f28:	b.n	20f2c <btrfs_free_block_group@@Base+0x5dc>
   20f2a:	subs	r0, #1
   20f2c:	asrs	r3, r0, #31
   20f2e:	mov	r2, r0
   20f30:	ldrd	r0, r1, [r4, #32]
   20f34:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   20f38:	ldrd	r3, r2, [r7, #80]	; 0x50
   20f3c:	subs	r0, r3, r0
   20f3e:	sbc.w	r1, r2, r1
   20f42:	strd	r0, r1, [r7, #80]	; 0x50
   20f46:	mov	r1, r7
   20f48:	mov	r0, r8
   20f4a:	bl	27dd0 <btrfs_update_device@@Base>
   20f4e:	subs	r3, r0, #0
   20f50:	str	r3, [sp, #24]
   20f52:	blt.w	20db2 <btrfs_free_block_group@@Base+0x462>
   20f56:	adds	r5, #1
   20f58:	b.n	20e80 <btrfs_free_block_group@@Base+0x530>
   20f5a:	subs	r0, #2
   20f5c:	b.n	20f2c <btrfs_free_block_group@@Base+0x5dc>
   20f5e:	ldr	r1, [r4, #68]	; 0x44
   20f60:	bl	38690 <btrfs_util_strerror@@Base+0x290>
   20f64:	b.n	20f2c <btrfs_free_block_group@@Base+0x5dc>
   20f66:	mvn.w	r3, #63	; 0x3f
   20f6a:	b.n	20a10 <btrfs_free_block_group@@Base+0xc0>
   20f6c:	mvn.w	r3, #11
   20f70:	str	r3, [sp, #24]
   20f72:	b.n	20a98 <btrfs_free_block_group@@Base+0x148>
   20f74:	ldr	r0, [sp, #24]
   20f76:	add	sp, #164	; 0xa4
   20f78:	vpop	{d8}
   20f7c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20f80:	adds	r4, #28
   20f82:	movs	r4, r0
   20f84:	adds	r4, #24
   20f86:	movs	r4, r0
   20f88:	lsls	r0, r4, #8
   20f8a:	movs	r0, r0
   20f8c:	lsls	r0, r6, #8
   20f8e:	movs	r0, r0
   20f90:	stmia	r6!, {r2}
   20f92:	movs	r1, r0
   20f94:	stmia	r5!, {r0, r2, r6, r7}
   20f96:	movs	r1, r0
   20f98:	adds	r2, #228	; 0xe4
   20f9a:	movs	r4, r0
   20f9c:	stmia	r5!, {r1, r4, r6}
   20f9e:	movs	r1, r0
   20fa0:	stmia	r4!, {r0, r1, r2, r3, r5, r7}
   20fa2:	movs	r1, r0
   20fa4:	stmia	r5!, {r2, r6, r7}
   20fa6:	movs	r1, r0
   20fa8:	ldrh	r6, [r5, #12]
   20faa:	movs	r1, r0
   20fac:	stmia	r3!, {r1, r2, r3, r4, r5, r6}
   20fae:	movs	r1, r0
   20fb0:	stmia	r2!, {r0, r1, r2, r4, r7}
   20fb2:	movs	r1, r0
   20fb4:	stmia	r3!, {r2, r4, r5, r7}
   20fb6:	movs	r1, r0
   20fb8:	pop	{r0, r1, r3, r4, r5, r6}
   20fba:	movs	r1, r0
   20fbc:	ittee	le
   20fbe:	movle	r1, r0

00020fc0 <free_excluded_extents@@Base>:
   20fc0:	pushle	{r4, r5, lr}
   20fc2:	subgt	sp, #20
   20fc4:	ldrdgt	r2, r3, [r1, #40]	; 0x28
   20fc8:	movs	r4, #4
   20fca:	str	r4, [sp, #8]
   20fcc:	adds	r0, #160	; 0xa0
   20fce:	ldr.w	r4, [r1, #49]	; 0x31
   20fd2:	ldr.w	r5, [r1, #53]	; 0x35
   20fd6:	adds	r4, r4, r2
   20fd8:	adc.w	r5, r3, r5
   20fdc:	adds.w	r4, r4, #4294967295	; 0xffffffff
   20fe0:	adc.w	r5, r5, #4294967295	; 0xffffffff
   20fe4:	strd	r4, r5, [sp]
   20fe8:	bl	15e3a <clear_extent_bits@@Base>
   20fec:	add	sp, #20
   20fee:	pop	{r4, r5, pc}

00020ff0 <exclude_super_stripes@@Base>:
   20ff0:	ldr	r2, [pc, #392]	; (2117c <exclude_super_stripes@@Base+0x18c>)
   20ff2:	ldr	r3, [pc, #396]	; (21180 <exclude_super_stripes@@Base+0x190>)
   20ff4:	add	r2, pc
   20ff6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20ffa:	sub	sp, #68	; 0x44
   20ffc:	ldr	r3, [r2, r3]
   20ffe:	mov	r5, r0
   21000:	mov	r4, r1
   21002:	ldr	r3, [r3, #0]
   21004:	str	r3, [sp, #60]	; 0x3c
   21006:	mov.w	r3, #0
   2100a:	ldrd	r2, r3, [r1, #40]	; 0x28
   2100e:	cmp	r3, #0
   21010:	it	eq
   21012:	cmpeq.w	r2, #65536	; 0x10000
   21016:	bcs.n	21050 <exclude_super_stripes@@Base+0x60>
   21018:	ldrd	r0, r1, [r1, #80]	; 0x50
   2101c:	rsb	ip, r2, #65536	; 0x10000
   21020:	str.w	ip, [sp, #52]	; 0x34
   21024:	adds.w	r0, r0, ip
   21028:	adc.w	r1, r1, #0
   2102c:	adds.w	r6, r2, #4294967295	; 0xffffffff
   21030:	adc.w	r7, r3, #4294967295	; 0xffffffff
   21034:	adds.w	r6, r6, ip
   21038:	strd	r0, r1, [r4, #80]	; 0x50
   2103c:	adc.w	r7, r7, #0
   21040:	movs	r1, #4
   21042:	add.w	r0, r5, #160	; 0xa0
   21046:	str	r1, [sp, #8]
   21048:	strd	r6, r7, [sp]
   2104c:	bl	15fb0 <set_extent_bits@@Base>
   21050:	movs	r6, #0
   21052:	add.w	r7, r5, #160	; 0xa0
   21056:	mov.w	r2, #65536	; 0x10000
   2105a:	mov	r3, r6
   2105c:	add	r1, sp, #52	; 0x34
   2105e:	str	r1, [sp, #44]	; 0x2c
   21060:	ldr	r1, [sp, #44]	; 0x2c
   21062:	mov	r0, r5
   21064:	strd	r2, r3, [sp]
   21068:	ldrd	r2, r3, [r4, #40]	; 0x28
   2106c:	str	r1, [sp, #16]
   2106e:	add	r1, sp, #56	; 0x38
   21070:	str	r1, [sp, #12]
   21072:	add	r1, sp, #48	; 0x30
   21074:	str	r1, [sp, #8]
   21076:	bl	28df6 <btrfs_rmap_block@@Base>
   2107a:	mov	r3, r0
   2107c:	cbnz	r0, 21096 <exclude_super_stripes@@Base+0xa6>
   2107e:	ldr	r3, [sp, #56]	; 0x38
   21080:	ldr	r0, [sp, #48]	; 0x30
   21082:	subs	r2, r3, #1
   21084:	str	r2, [sp, #56]	; 0x38
   21086:	cbnz	r3, 210ca <exclude_super_stripes@@Base+0xda>
   21088:	adds	r6, #1
   2108a:	str	r3, [sp, #32]
   2108c:	blx	8434 <free@plt+0x4>
   21090:	cmp	r6, #3
   21092:	ldr	r3, [sp, #32]
   21094:	bne.n	210aa <exclude_super_stripes@@Base+0xba>
   21096:	ldr	r1, [pc, #236]	; (21184 <exclude_super_stripes@@Base+0x194>)
   21098:	ldr	r2, [pc, #228]	; (21180 <exclude_super_stripes@@Base+0x190>)
   2109a:	add	r1, pc
   2109c:	ldr	r2, [r1, r2]
   2109e:	ldr	r1, [r2, #0]
   210a0:	ldr	r2, [sp, #60]	; 0x3c
   210a2:	eors	r1, r2
   210a4:	beq.n	21172 <exclude_super_stripes@@Base+0x182>
   210a6:	blx	8510 <__stack_chk_fail@plt>
   210aa:	movs	r2, #12
   210ac:	mul.w	r1, r2, r6
   210b0:	mov.w	r2, #16384	; 0x4000
   210b4:	sub.w	r3, r1, #32
   210b8:	rsb	r0, r1, #32
   210bc:	lsl.w	r3, r2, r3
   210c0:	lsr.w	r0, r2, r0
   210c4:	orrs	r3, r0
   210c6:	lsls	r2, r1
   210c8:	b.n	21060 <exclude_super_stripes@@Base+0x70>
   210ca:	add.w	r0, r0, r2, lsl #3
   210ce:	ldr.w	r1, [r4, #49]	; 0x31
   210d2:	ldrd	r2, r3, [r4, #40]	; 0x28
   210d6:	ldrd	sl, fp, [r0]
   210da:	ldr.w	r0, [r4, #53]	; 0x35
   210de:	adds	r1, r1, r2
   210e0:	str	r1, [sp, #24]
   210e2:	adc.w	r1, r0, r3
   210e6:	str	r1, [sp, #28]
   210e8:	ldrd	r0, r1, [sp, #24]
   210ec:	cmp	fp, r1
   210ee:	it	eq
   210f0:	cmpeq	sl, r0
   210f2:	bcs.n	2107e <exclude_super_stripes@@Base+0x8e>
   210f4:	ldr.w	ip, [sp, #52]	; 0x34
   210f8:	mov	r0, ip
   210fa:	asrs	r1, r0, #31
   210fc:	strd	r0, r1, [sp, #32]
   21100:	adds.w	r0, sl, ip
   21104:	adc.w	r1, fp, ip, asr #31
   21108:	cmp	r3, r1
   2110a:	it	eq
   2110c:	cmpeq	r2, r0
   2110e:	bcs.n	2107e <exclude_super_stripes@@Base+0x8e>
   21110:	cmp	fp, r3
   21112:	it	eq
   21114:	cmpeq	sl, r2
   21116:	bcs.n	21150 <exclude_super_stripes@@Base+0x160>
   21118:	subs.w	r8, r0, r2
   2111c:	sbc.w	r9, r1, r3
   21120:	ldrd	r1, r0, [r4, #80]	; 0x50
   21124:	adds.w	r1, r1, r8
   21128:	adc.w	r0, r0, r9
   2112c:	strd	r1, r0, [r4, #80]	; 0x50
   21130:	movs	r1, #4
   21132:	str	r1, [sp, #8]
   21134:	adds.w	r1, r2, r8
   21138:	adc.w	r0, r3, r9
   2113c:	adds.w	r1, r1, #4294967295	; 0xffffffff
   21140:	adc.w	r0, r0, #4294967295	; 0xffffffff
   21144:	strd	r1, r0, [sp]
   21148:	mov	r0, r7
   2114a:	bl	15fb0 <set_extent_bits@@Base>
   2114e:	b.n	2107e <exclude_super_stripes@@Base+0x8e>
   21150:	ldr	r3, [sp, #24]
   21152:	subs.w	r8, r3, sl
   21156:	ldr	r3, [sp, #28]
   21158:	sbc.w	r9, r3, fp
   2115c:	ldrd	r2, r3, [sp, #32]
   21160:	cmp	r3, r9
   21162:	it	eq
   21164:	cmpeq	r2, r8
   21166:	itt	cc
   21168:	movcc	r8, r2
   2116a:	movcc	r9, r3
   2116c:	mov	r2, sl
   2116e:	mov	r3, fp
   21170:	b.n	21120 <exclude_super_stripes@@Base+0x130>
   21172:	mov	r0, r3
   21174:	add	sp, #68	; 0x44
   21176:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2117a:	nop
   2117c:	cmp	r5, #144	; 0x90
   2117e:	movs	r4, r0
   21180:	lsls	r0, r4, #8
   21182:	movs	r0, r0
   21184:	cmp	r4, #234	; 0xea
   21186:	movs	r4, r0

00021188 <btrfs_read_block_groups@@Base>:
   21188:	ldr	r2, [pc, #660]	; (21420 <btrfs_read_block_groups@@Base+0x298>)
   2118a:	ldr	r3, [pc, #664]	; (21424 <btrfs_read_block_groups@@Base+0x29c>)
   2118c:	add	r2, pc
   2118e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21192:	sub	sp, #204	; 0xcc
   21194:	ldr	r3, [r2, r3]
   21196:	movs	r6, #0
   21198:	add.w	r9, sp, #104	; 0x68
   2119c:	ldr.w	r8, [r0, #24]
   211a0:	mov	r4, r0
   211a2:	mov	fp, r6
   211a4:	add	r0, sp, #128	; 0x80
   211a6:	ldr	r3, [r3, #0]
   211a8:	str	r3, [sp, #196]	; 0xc4
   211aa:	mov.w	r3, #0
   211ae:	movs	r3, #192	; 0xc0
   211b0:	strd	r6, r6, [sp, #64]	; 0x40
   211b4:	strb.w	r6, [sp, #73]	; 0x49
   211b8:	strb.w	r6, [sp, #74]	; 0x4a
   211bc:	strb.w	r6, [sp, #75]	; 0x4b
   211c0:	strb.w	r6, [sp, #76]	; 0x4c
   211c4:	strb.w	r6, [sp, #77]	; 0x4d
   211c8:	strb.w	r6, [sp, #78]	; 0x4e
   211cc:	strb.w	r6, [sp, #79]	; 0x4f
   211d0:	strb.w	r6, [sp, #80]	; 0x50
   211d4:	strb.w	r3, [sp, #72]	; 0x48
   211d8:	bl	1753c <btrfs_init_path@@Base>
   211dc:	str	r6, [sp, #52]	; 0x34
   211de:	add.w	sl, sp, #128	; 0x80
   211e2:	movs	r5, #0
   211e4:	add	r2, sp, #64	; 0x40
   211e6:	mov	r1, r8
   211e8:	mov	r3, sl
   211ea:	mov	r0, r5
   211ec:	strd	r5, r5, [sp]
   211f0:	bl	19930 <btrfs_search_slot@@Base>
   211f4:	subs	r7, r0, #0
   211f6:	blt.n	21218 <btrfs_read_block_groups@@Base+0x90>
   211f8:	ldr	r0, [sp, #128]	; 0x80
   211fa:	ldr	r2, [sp, #160]	; 0xa0
   211fc:	ldr.w	r3, [r0, #192]	; 0xc0
   21200:	cmp	r3, r2
   21202:	bhi.n	21234 <btrfs_read_block_groups@@Base+0xac>
   21204:	ldr.w	r0, [r8, #464]	; 0x1d0
   21208:	mov	r1, sl
   2120a:	strb.w	r5, [sp, #193]	; 0xc1
   2120e:	bl	1ad64 <btrfs_next_sibling_tree_block@@Base>
   21212:	subs	r7, r0, #0
   21214:	beq.n	211f8 <btrfs_read_block_groups@@Base+0x70>
   21216:	bge.n	2125c <btrfs_read_block_groups@@Base+0xd4>
   21218:	add	r0, sp, #128	; 0x80
   2121a:	bl	1754c <btrfs_release_path@@Base>
   2121e:	ldr	r2, [pc, #520]	; (21428 <btrfs_read_block_groups@@Base+0x2a0>)
   21220:	ldr	r3, [pc, #512]	; (21424 <btrfs_read_block_groups@@Base+0x29c>)
   21222:	add	r2, pc
   21224:	ldr	r3, [r2, r3]
   21226:	ldr	r2, [r3, #0]
   21228:	ldr	r3, [sp, #196]	; 0xc4
   2122a:	eors	r2, r3
   2122c:	beq.w	21416 <btrfs_read_block_groups@@Base+0x28e>
   21230:	blx	8510 <__stack_chk_fail@plt>
   21234:	mov	r1, r9
   21236:	bl	1dccc <btrfs_create_tree@@Base+0x258>
   2123a:	ldrd	r6, r7, [sp, #104]	; 0x68
   2123e:	ldrd	r2, r3, [sp, #64]	; 0x40
   21242:	cmp	r7, r3
   21244:	it	eq
   21246:	cmpeq	r6, r2
   21248:	bcc.n	21254 <btrfs_read_block_groups@@Base+0xcc>
   2124a:	ldrb.w	r3, [sp, #112]	; 0x70
   2124e:	cmp	r3, #192	; 0xc0
   21250:	beq.w	213dc <btrfs_read_block_groups@@Base+0x254>
   21254:	ldr	r3, [sp, #160]	; 0xa0
   21256:	adds	r3, #1
   21258:	str	r3, [sp, #160]	; 0xa0
   2125a:	b.n	211f8 <btrfs_read_block_groups@@Base+0x70>
   2125c:	movs	r7, #0
   2125e:	b.n	21218 <btrfs_read_block_groups@@Base+0x90>
   21260:	ldr.w	r2, [sp, #93]	; 0x5d
   21264:	ldr.w	r3, [sp, #97]	; 0x61
   21268:	orrs	r3, r2
   2126a:	beq.n	21306 <btrfs_read_block_groups@@Base+0x17e>
   2126c:	movs	r1, #120	; 0x78
   2126e:	movs	r0, #1
   21270:	blx	839c <calloc@plt+0x4>
   21274:	mov	r5, r0
   21276:	cmp	r0, #0
   21278:	beq.w	213ce <btrfs_read_block_groups@@Base+0x246>
   2127c:	movs	r2, #25
   2127e:	mov	r0, r7
   21280:	mla	r2, r2, sl, r7
   21284:	movs	r3, #24
   21286:	mov	r1, r9
   21288:	add.w	r7, r5, #40	; 0x28
   2128c:	ldr.w	r2, [r2, #214]	; 0xd6
   21290:	adds	r2, #101	; 0x65
   21292:	bl	16a0e <read_extent_buffer@@Base>
   21296:	ldmia	r6!, {r0, r1, r2, r3}
   21298:	stmia	r7!, {r0, r1, r2, r3}
   2129a:	ldr	r3, [r6, #0]
   2129c:	movs	r6, #0
   2129e:	ldrd	r0, r1, [sp, #104]	; 0x68
   212a2:	strb	r3, [r7, #0]
   212a4:	ldr	r3, [sp, #52]	; 0x34
   212a6:	strd	r0, r1, [r5, #72]	; 0x48
   212aa:	str	r6, [r5, #104]	; 0x68
   212ac:	strd	r3, fp, [r5, #88]	; 0x58
   212b0:	ldrd	r2, r3, [sp, #120]	; 0x78
   212b4:	and.w	r1, r2, #1
   212b8:	strd	r1, r6, [sp, #24]
   212bc:	ldrd	r0, r1, [sp, #24]
   212c0:	strd	r2, r3, [r5, #96]	; 0x60
   212c4:	orrs	r1, r0
   212c6:	bne.n	2134c <btrfs_read_block_groups@@Base+0x1c4>
   212c8:	and.w	r1, r2, #2
   212cc:	strd	r1, r6, [sp, #32]
   212d0:	ldrd	r0, r1, [sp, #32]
   212d4:	orrs	r1, r0
   212d6:	bne.n	21350 <btrfs_read_block_groups@@Base+0x1c8>
   212d8:	and.w	r1, r2, #4
   212dc:	strd	r1, r6, [sp, #40]	; 0x28
   212e0:	ldrd	r0, r1, [sp, #40]	; 0x28
   212e4:	orrs	r1, r0
   212e6:	it	ne
   212e8:	movne	r6, #4
   212ea:	mov	r0, r4
   212ec:	bl	1dc70 <btrfs_create_tree@@Base+0x1fc>
   212f0:	ldrd	r2, r3, [r5, #40]	; 0x28
   212f4:	bl	295b8 <btrfs_chunk_readonly@@Base>
   212f8:	subs	r7, r0, #0
   212fa:	bge.n	21354 <btrfs_read_block_groups@@Base+0x1cc>
   212fc:	mov	r0, r5
   212fe:	blx	8434 <free@plt+0x4>
   21302:	adds	r3, r7, #2
   21304:	bne.n	21218 <btrfs_read_block_groups@@Base+0x90>
   21306:	ldr.w	r0, [sp, #73]	; 0x49
   2130a:	ldr.w	r1, [sp, #77]	; 0x4d
   2130e:	ldrd	r3, r2, [sp, #64]	; 0x40
   21312:	orrs.w	r5, r0, r1
   21316:	bne.n	213d4 <btrfs_read_block_groups@@Base+0x24c>
   21318:	adds	r3, #1
   2131a:	adc.w	r2, r2, #0
   2131e:	add	r0, sp, #128	; 0x80
   21320:	strd	r3, r2, [sp, #64]	; 0x40
   21324:	movs	r2, #0
   21326:	strb.w	r2, [sp, #73]	; 0x49
   2132a:	strb.w	r2, [sp, #74]	; 0x4a
   2132e:	strb.w	r2, [sp, #75]	; 0x4b
   21332:	strb.w	r2, [sp, #76]	; 0x4c
   21336:	strb.w	r2, [sp, #77]	; 0x4d
   2133a:	strb.w	r2, [sp, #78]	; 0x4e
   2133e:	strb.w	r2, [sp, #79]	; 0x4f
   21342:	strb.w	r2, [sp, #80]	; 0x50
   21346:	bl	1754c <btrfs_release_path@@Base>
   2134a:	b.n	211de <btrfs_read_block_groups@@Base+0x56>
   2134c:	movs	r6, #2
   2134e:	b.n	212ea <btrfs_read_block_groups@@Base+0x162>
   21350:	movs	r6, #16
   21352:	b.n	212ea <btrfs_read_block_groups@@Base+0x162>
   21354:	it	ne
   21356:	movne	r3, #1
   21358:	mov	r1, r5
   2135a:	it	ne
   2135c:	strne	r3, [r5, #108]	; 0x6c
   2135e:	mov	r0, r4
   21360:	bl	20ff0 <exclude_super_stripes@@Base>
   21364:	add	r3, sp, #60	; 0x3c
   21366:	str	r3, [sp, #16]
   21368:	mov	r0, r4
   2136a:	ldrd	r2, r3, [r5, #72]	; 0x48
   2136e:	strd	r2, r3, [sp, #8]
   21372:	ldr.w	r2, [r5, #49]	; 0x31
   21376:	ldr.w	r3, [r5, #53]	; 0x35
   2137a:	strd	r2, r3, [sp]
   2137e:	ldrd	r2, r3, [r5, #96]	; 0x60
   21382:	bl	201ac <update_space_info@@Base>
   21386:	subs	r7, r0, #0
   21388:	blt.n	212fc <btrfs_read_block_groups@@Base+0x174>
   2138a:	ldr	r3, [sp, #60]	; 0x3c
   2138c:	orr.w	r6, r6, #8
   21390:	add.w	r0, r4, #128	; 0x80
   21394:	str	r3, [r5, #60]	; 0x3c
   21396:	ldrd	r2, r3, [r5, #40]	; 0x28
   2139a:	str	r6, [sp, #8]
   2139c:	ldr.w	r1, [r5, #49]	; 0x31
   213a0:	ldr.w	r6, [r5, #53]	; 0x35
   213a4:	adds	r1, r1, r2
   213a6:	adc.w	r6, r3, r6
   213aa:	adds.w	r1, r1, #4294967295	; 0xffffffff
   213ae:	adc.w	r6, r6, #4294967295	; 0xffffffff
   213b2:	strd	r1, r6, [sp]
   213b6:	mov	r6, r0
   213b8:	bl	15fb0 <set_extent_bits@@Base>
   213bc:	movs	r3, #0
   213be:	str	r5, [sp, #0]
   213c0:	str	r3, [sp, #4]
   213c2:	mov	r0, r6
   213c4:	ldrd	r2, r3, [r5, #40]	; 0x28
   213c8:	bl	162be <set_state_private@@Base>
   213cc:	b.n	21306 <btrfs_read_block_groups@@Base+0x17e>
   213ce:	mvn.w	r7, #11
   213d2:	b.n	21218 <btrfs_read_block_groups@@Base+0x90>
   213d4:	adds	r3, r0, r3
   213d6:	adc.w	r2, r1, r2
   213da:	b.n	2131e <btrfs_read_block_groups@@Base+0x196>
   213dc:	ldr	r2, [sp, #160]	; 0xa0
   213de:	add	r1, sp, #64	; 0x40
   213e0:	ldr	r0, [sp, #128]	; 0x80
   213e2:	add	r6, sp, #84	; 0x54
   213e4:	bl	1dccc <btrfs_create_tree@@Base+0x258>
   213e8:	ldr	r7, [sp, #128]	; 0x80
   213ea:	ldr.w	sl, [sp, #160]	; 0xa0
   213ee:	mov	r1, r6
   213f0:	mov	r0, r7
   213f2:	mov	r2, sl
   213f4:	bl	1dccc <btrfs_create_tree@@Base+0x258>
   213f8:	ldrb.w	r3, [sp, #92]	; 0x5c
   213fc:	cmp	r3, #192	; 0xc0
   213fe:	beq.w	21260 <btrfs_read_block_groups@@Base+0xd8>
   21402:	ldr	r1, [pc, #40]	; (2142c <btrfs_read_block_groups@@Base+0x2a4>)
   21404:	movw	r2, #2684	; 0xa7c
   21408:	ldr	r0, [pc, #36]	; (21430 <btrfs_read_block_groups@@Base+0x2a8>)
   2140a:	add	r1, pc
   2140c:	addw	r1, r1, #526	; 0x20e
   21410:	add	r0, pc
   21412:	bl	1e4ec <btrfs_create_tree@@Base+0xa78>
   21416:	mov	r0, r7
   21418:	add	sp, #204	; 0xcc
   2141a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2141e:	nop
   21420:	cmp	r3, #248	; 0xf8
   21422:	movs	r4, r0
   21424:	lsls	r0, r4, #8
   21426:	movs	r0, r0
   21428:	cmp	r3, #98	; 0x62
   2142a:	movs	r4, r0
   2142c:	bkpt	0x0098
   2142e:	movs	r1, r0
   21430:	pop	{r2, r4, r5, r6, r7}
   21432:	movs	r1, r0

00021434 <btrfs_add_block_group@@Base>:
   21434:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21438:	sub	sp, #52	; 0x34
   2143a:	mov	r5, r0
   2143c:	add.w	fp, r0, #128	; 0x80
   21440:	strd	r2, r3, [sp, #40]	; 0x28
   21444:	movs	r1, #120	; 0x78
   21446:	ldrd	r6, r3, [sp, #88]	; 0x58
   2144a:	movs	r0, #1
   2144c:	ldrd	r7, r8, [sp, #96]	; 0x60
   21450:	ldr.w	sl, [pc, #320]	; 21594 <btrfs_add_block_group@@Base+0x160>
   21454:	str	r3, [sp, #36]	; 0x24
   21456:	ldr	r3, [sp, #104]	; 0x68
   21458:	add	sl, pc
   2145a:	ldr.w	r9, [pc, #316]	; 21598 <btrfs_add_block_group@@Base+0x164>
   2145e:	addw	sl, sl, #547	; 0x223
   21462:	str	r3, [sp, #28]
   21464:	add	r9, pc
   21466:	ldr	r3, [sp, #108]	; 0x6c
   21468:	str	r3, [sp, #32]
   2146a:	blx	839c <calloc@plt+0x4>
   2146e:	mov	r2, sl
   21470:	mov	r1, r9
   21472:	movw	r3, #2789	; 0xae5
   21476:	mov	r4, r0
   21478:	clz	r0, r0
   2147c:	lsrs	r0, r0, #5
   2147e:	str	r0, [sp, #0]
   21480:	ldr	r0, [pc, #280]	; (2159c <btrfs_add_block_group@@Base+0x168>)
   21482:	add	r0, pc
   21484:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   21488:	ldr	r3, [sp, #28]
   2148a:	mov	r1, r4
   2148c:	mov	r0, r5
   2148e:	strd	r7, r8, [r4, #40]	; 0x28
   21492:	str.w	r3, [r4, #49]	; 0x31
   21496:	ldr	r3, [sp, #32]
   21498:	str	r6, [r4, #96]	; 0x60
   2149a:	str.w	r3, [r4, #53]	; 0x35
   2149e:	movs	r3, #192	; 0xc0
   214a0:	strb.w	r3, [r4, #48]	; 0x30
   214a4:	ldr	r3, [sp, #40]	; 0x28
   214a6:	str	r3, [r4, #72]	; 0x48
   214a8:	ldr	r3, [sp, #44]	; 0x2c
   214aa:	str	r3, [r4, #76]	; 0x4c
   214ac:	ldr	r3, [sp, #36]	; 0x24
   214ae:	str	r3, [r4, #100]	; 0x64
   214b0:	bl	20ff0 <exclude_super_stripes@@Base>
   214b4:	add.w	r3, r4, #60	; 0x3c
   214b8:	str	r3, [sp, #16]
   214ba:	mov	r0, r5
   214bc:	ldr	r3, [sp, #40]	; 0x28
   214be:	str	r3, [sp, #8]
   214c0:	ldr	r3, [sp, #44]	; 0x2c
   214c2:	str	r3, [sp, #12]
   214c4:	ldr	r3, [sp, #28]
   214c6:	str	r3, [sp, #0]
   214c8:	ldr	r3, [sp, #32]
   214ca:	str	r3, [sp, #4]
   214cc:	ldrd	r2, r3, [r4, #96]	; 0x60
   214d0:	bl	201ac <update_space_info@@Base>
   214d4:	mov	r2, sl
   214d6:	mov	r1, r9
   214d8:	mov.w	r3, #2800	; 0xaf0
   214dc:	ldr.w	sl, [pc, #192]	; 215a0 <btrfs_add_block_group@@Base+0x16c>
   214e0:	ldr.w	r9, [pc, #192]	; 215a4 <btrfs_add_block_group@@Base+0x170>
   214e4:	add	sl, pc
   214e6:	addw	sl, sl, #547	; 0x223
   214ea:	add	r9, pc
   214ec:	str	r0, [sp, #0]
   214ee:	ldr	r0, [pc, #184]	; (215a8 <btrfs_add_block_group@@Base+0x174>)
   214f0:	add	r0, pc
   214f2:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   214f6:	mov.w	ip, #0
   214fa:	and.w	r2, r6, #1
   214fe:	mov	r3, ip
   21500:	orrs	r3, r2
   21502:	and.w	r0, r6, #4
   21506:	mov	r1, ip
   21508:	ite	eq
   2150a:	moveq	r3, ip
   2150c:	movne	r3, #2
   2150e:	orrs.w	r2, r0, r1
   21512:	and.w	r0, r6, #2
   21516:	it	ne
   21518:	orrne.w	r3, r3, #4
   2151c:	movs	r1, #0
   2151e:	orrs.w	r2, r0, r1
   21522:	ldr	r2, [sp, #32]
   21524:	it	ne
   21526:	orrne.w	r3, r3, #16
   2152a:	mov	r0, fp
   2152c:	orr.w	r3, r3, #8
   21530:	str	r3, [sp, #8]
   21532:	ldr	r3, [sp, #28]
   21534:	adds.w	r3, r3, #4294967295	; 0xffffffff
   21538:	adc.w	r2, r2, #4294967295	; 0xffffffff
   2153c:	adds	r3, r3, r7
   2153e:	adc.w	r2, r2, r8
   21542:	strd	r3, r2, [sp]
   21546:	mov	r2, r7
   21548:	mov	r3, r8
   2154a:	bl	15fb0 <set_extent_bits@@Base>
   2154e:	ldr	r1, [pc, #92]	; (215ac <btrfs_add_block_group@@Base+0x178>)
   21550:	mov	r2, sl
   21552:	movw	r3, #2806	; 0xaf6
   21556:	add	r1, pc
   21558:	str	r1, [sp, #28]
   2155a:	str	r0, [sp, #0]
   2155c:	mov	r0, r9
   2155e:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   21562:	mov	r2, r7
   21564:	movs	r3, #0
   21566:	mov	r0, fp
   21568:	str	r3, [sp, #4]
   2156a:	mov	r3, r8
   2156c:	str	r4, [sp, #0]
   2156e:	bl	162be <set_state_private@@Base>
   21572:	ldr	r1, [sp, #28]
   21574:	mov	r2, sl
   21576:	movw	r3, #2810	; 0xafa
   2157a:	str	r0, [sp, #0]
   2157c:	mov	r0, r9
   2157e:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   21582:	mov	r0, r5
   21584:	ldr	r3, [sp, #36]	; 0x24
   21586:	mov	r2, r6
   21588:	bl	1dc70 <btrfs_create_tree@@Base+0x1fc>
   2158c:	mov	r0, r4
   2158e:	add	sp, #52	; 0x34
   21590:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21594:	bkpt	0x004a
   21596:	movs	r1, r0
   21598:			; <UNDEFINED> instruction: 0xb70d
   2159a:	movs	r1, r0
   2159c:	cbnz	r1, 21600 <btrfs_make_block_group@@Base+0x50>
   2159e:	movs	r1, r0
   215a0:	pop	{r1, r2, r3, r4, r5, r7, pc}
   215a2:	movs	r1, r0
   215a4:	ldrb	r2, [r7, #31]
   215a6:	movs	r1, r0
   215a8:	ldrb	r4, [r6, #31]
   215aa:	movs	r1, r0
   215ac:			; <UNDEFINED> instruction: 0xb61b
   215ae:	movs	r1, r0

000215b0 <btrfs_make_block_group@@Base>:
   215b0:	push	{r4, r5, r6, r7, lr}
   215b2:	mov	r4, r0
   215b4:	ldr	r5, [pc, #144]	; (21648 <btrfs_make_block_group@@Base+0x98>)
   215b6:	sub	sp, #68	; 0x44
   215b8:	mov	r0, r1
   215ba:	ldr	r1, [pc, #144]	; (2164c <btrfs_make_block_group@@Base+0x9c>)
   215bc:	add	r5, pc
   215be:	ldrd	r6, r7, [sp, #104]	; 0x68
   215c2:	ldr	r1, [r5, r1]
   215c4:	movs	r5, #0
   215c6:	ldr	r1, [r1, #0]
   215c8:	str	r1, [sp, #60]	; 0x3c
   215ca:	mov.w	r1, #0
   215ce:	ldr	r1, [r0, #24]
   215d0:	strd	r6, r7, [sp, #16]
   215d4:	ldrd	r6, r7, [sp, #96]	; 0x60
   215d8:	str	r1, [sp, #28]
   215da:	strd	r6, r7, [sp, #8]
   215de:	ldrd	r6, r7, [sp, #88]	; 0x58
   215e2:	strd	r6, r7, [sp]
   215e6:	bl	21434 <btrfs_add_block_group@@Base>
   215ea:	ldr	r1, [sp, #28]
   215ec:	ldr	r3, [r0, #72]	; 0x48
   215ee:	add.w	r2, r0, #40	; 0x28
   215f2:	str	r3, [sp, #36]	; 0x24
   215f4:	ldr	r3, [r0, #76]	; 0x4c
   215f6:	str	r3, [sp, #40]	; 0x28
   215f8:	ldr	r3, [r0, #96]	; 0x60
   215fa:	str	r3, [sp, #52]	; 0x34
   215fc:	ldr	r3, [r0, #100]	; 0x64
   215fe:	mov	r0, r4
   21600:	str	r3, [sp, #56]	; 0x38
   21602:	mov.w	r3, #256	; 0x100
   21606:	strd	r3, r5, [sp, #44]	; 0x2c
   2160a:	movs	r3, #24
   2160c:	str	r3, [sp, #0]
   2160e:	add	r3, sp, #36	; 0x24
   21610:	bl	1a9bc <btrfs_insert_item@@Base>
   21614:	ldr	r2, [pc, #56]	; (21650 <btrfs_make_block_group@@Base+0xa0>)
   21616:	ldr	r1, [pc, #60]	; (21654 <btrfs_make_block_group@@Base+0xa4>)
   21618:	movw	r3, #2833	; 0xb11
   2161c:	add	r2, pc
   2161e:	addw	r2, r2, #569	; 0x239
   21622:	add	r1, pc
   21624:	str	r0, [sp, #0]
   21626:	ldr	r0, [pc, #48]	; (21658 <btrfs_make_block_group@@Base+0xa8>)
   21628:	add	r0, pc
   2162a:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   2162e:	ldr	r2, [pc, #44]	; (2165c <btrfs_make_block_group@@Base+0xac>)
   21630:	ldr	r3, [pc, #24]	; (2164c <btrfs_make_block_group@@Base+0x9c>)
   21632:	add	r2, pc
   21634:	ldr	r3, [r2, r3]
   21636:	ldr	r2, [r3, #0]
   21638:	ldr	r3, [sp, #60]	; 0x3c
   2163a:	eors	r2, r3
   2163c:	beq.n	21642 <btrfs_make_block_group@@Base+0x92>
   2163e:	blx	8510 <__stack_chk_fail@plt>
   21642:	mov	r0, r5
   21644:	add	sp, #68	; 0x44
   21646:	pop	{r4, r5, r6, r7, pc}
   21648:	movs	r7, #200	; 0xc8
   2164a:	movs	r4, r0
   2164c:	lsls	r0, r4, #8
   2164e:	movs	r0, r0
   21650:	pop	{r1, r2, r7}
   21652:	movs	r1, r0
   21654:	push	{r0, r1, r2, r3, r6, lr}
   21656:	movs	r1, r0
   21658:	ldrb	r4, [r7, #26]
   2165a:	movs	r1, r0
   2165c:	movs	r7, #82	; 0x52
   2165e:	movs	r4, r0
   21660:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21664:	mov	r5, r1
   21666:	ldr	r1, [pc, #412]	; (21804 <btrfs_make_block_group@@Base+0x254>)
   21668:	sub	sp, #76	; 0x4c
   2166a:	mov	r7, r2
   2166c:	ldr	r2, [pc, #408]	; (21808 <btrfs_make_block_group@@Base+0x258>)
   2166e:	add	r1, pc
   21670:	mov	r9, r3
   21672:	ldrd	r6, r3, [sp, #112]	; 0x70
   21676:	mov	r4, r0
   21678:	ldr	r2, [r1, r2]
   2167a:	mov	r0, r5
   2167c:	ldr	r2, [r2, #0]
   2167e:	str	r2, [sp, #68]	; 0x44
   21680:	mov.w	r2, #0
   21684:	mov	r2, r6
   21686:	str	r3, [sp, #36]	; 0x24
   21688:	bl	1dc3c <btrfs_create_tree@@Base+0x1c8>
   2168c:	ldr	r3, [sp, #36]	; 0x24
   2168e:	str	r0, [sp, #44]	; 0x2c
   21690:	cbnz	r0, 216c4 <btrfs_make_block_group@@Base+0x114>
   21692:	movs	r1, #0
   21694:	movs	r0, #0
   21696:	add	r2, sp, #44	; 0x2c
   21698:	strd	r0, r1, [sp, #8]
   2169c:	strd	r0, r1, [sp]
   216a0:	mov	r0, r5
   216a2:	str	r2, [sp, #16]
   216a4:	mov	r2, r6
   216a6:	bl	201ac <update_space_info@@Base>
   216aa:	ldr	r2, [pc, #352]	; (2180c <btrfs_make_block_group@@Base+0x25c>)
   216ac:	ldr	r1, [pc, #352]	; (21810 <btrfs_make_block_group@@Base+0x260>)
   216ae:	mov.w	r3, #1712	; 0x6b0
   216b2:	add	r2, pc
   216b4:	add.w	r2, r2, #592	; 0x250
   216b8:	add	r1, pc
   216ba:	str	r0, [sp, #0]
   216bc:	ldr	r0, [pc, #340]	; (21814 <btrfs_make_block_group@@Base+0x264>)
   216be:	add	r0, pc
   216c0:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   216c4:	ldr.w	sl, [sp, #44]	; 0x2c
   216c8:	ldr	r2, [pc, #332]	; (21818 <btrfs_make_block_group@@Base+0x268>)
   216ca:	ldr	r1, [pc, #336]	; (2181c <btrfs_make_block_group@@Base+0x26c>)
   216cc:	clz	r3, sl
   216d0:	ldr	r0, [pc, #332]	; (21820 <btrfs_make_block_group@@Base+0x270>)
   216d2:	add	r2, pc
   216d4:	lsrs	r3, r3, #5
   216d6:	add.w	r2, r2, #592	; 0x250
   216da:	str	r3, [sp, #0]
   216dc:	add	r1, pc
   216de:	add	r0, pc
   216e0:	movw	r3, #1714	; 0x6b2
   216e4:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   216e8:	ldr.w	r8, [sl, #40]	; 0x28
   216ec:	cmp.w	r8, #0
   216f0:	bne.n	2178e <btrfs_make_block_group@@Base+0x1de>
   216f2:	ldrd	r0, r1, [sl, #8]
   216f6:	movs	r2, #7
   216f8:	bl	311b8 <div_factor@@Base>
   216fc:	mov	sl, r0
   216fe:	ldr	r0, [sp, #44]	; 0x2c
   21700:	mov	fp, r1
   21702:	ldr	r2, [r0, #24]
   21704:	ldrd	r3, r1, [r0, #16]
   21708:	adds	r3, r3, r2
   2170a:	ldr	r2, [r0, #28]
   2170c:	adc.w	r1, r2, r1
   21710:	ldr	r2, [r0, #32]
   21712:	adds	r3, r3, r2
   21714:	ldr	r2, [r0, #36]	; 0x24
   21716:	adc.w	r1, r2, r1
   2171a:	adds	r3, r3, r7
   2171c:	str	r3, [sp, #24]
   2171e:	adc.w	r3, r1, r9
   21722:	str	r3, [sp, #28]
   21724:	ldrd	r2, r3, [sp, #24]
   21728:	cmp	r3, fp
   2172a:	it	eq
   2172c:	cmpeq	r2, sl
   2172e:	bcc.n	2178e <btrfs_make_block_group@@Base+0x1de>
   21730:	ldrb.w	r1, [r5, #365]	; 0x16d
   21734:	lsls	r2, r1, #31
   21736:	bpl.n	21742 <btrfs_make_block_group@@Base+0x192>
   21738:	and.w	r2, r6, #4
   2173c:	mov	r3, r8
   2173e:	orrs	r3, r2
   21740:	bne.n	2178e <btrfs_make_block_group@@Base+0x1de>
   21742:	lsls	r3, r1, #30
   21744:	bpl.n	21750 <btrfs_make_block_group@@Base+0x1a0>
   21746:	and.w	r2, r6, #2
   2174a:	movs	r3, #0
   2174c:	orrs	r3, r2
   2174e:	bne.n	2178e <btrfs_make_block_group@@Base+0x1de>
   21750:	ldrb.w	r3, [r4, #33]	; 0x21
   21754:	ands.w	r8, r3, #1
   21758:	bne.n	2178e <btrfs_make_block_group@@Base+0x1de>
   2175a:	orr.w	r3, r3, #1
   2175e:	strb.w	r3, [r4, #33]	; 0x21
   21762:	ldrd	r2, r3, [r0]
   21766:	mov	r1, r5
   21768:	mov	r0, r4
   2176a:	strd	r2, r3, [sp]
   2176e:	add	r3, sp, #56	; 0x38
   21770:	add	r2, sp, #48	; 0x30
   21772:	bl	27f14 <btrfs_alloc_chunk@@Base>
   21776:	cmn.w	r0, #28
   2177a:	bne.n	217a2 <btrfs_make_block_group@@Base+0x1f2>
   2177c:	ldr	r3, [sp, #44]	; 0x2c
   2177e:	movs	r2, #1
   21780:	str	r2, [r3, #40]	; 0x28
   21782:	ldrb.w	r3, [r4, #33]	; 0x21
   21786:	bfi	r3, r8, #0, #1
   2178a:	strb.w	r3, [r4, #33]	; 0x21
   2178e:	ldr	r2, [pc, #148]	; (21824 <btrfs_make_block_group@@Base+0x274>)
   21790:	ldr	r3, [pc, #116]	; (21808 <btrfs_make_block_group@@Base+0x258>)
   21792:	add	r2, pc
   21794:	ldr	r3, [r2, r3]
   21796:	ldr	r2, [r3, #0]
   21798:	ldr	r3, [sp, #68]	; 0x44
   2179a:	eors	r2, r3
   2179c:	beq.n	217fc <btrfs_make_block_group@@Base+0x24c>
   2179e:	blx	8510 <__stack_chk_fail@plt>
   217a2:	ldr.w	r9, [pc, #132]	; 21828 <btrfs_make_block_group@@Base+0x278>
   217a6:	movw	r3, #1751	; 0x6d7
   217aa:	ldr	r7, [pc, #128]	; (2182c <btrfs_make_block_group@@Base+0x27c>)
   217ac:	ldr	r6, [pc, #128]	; (21830 <btrfs_make_block_group@@Base+0x280>)
   217ae:	add	r9, pc
   217b0:	add.w	r9, r9, #592	; 0x250
   217b4:	add	r7, pc
   217b6:	add	r6, pc
   217b8:	str	r0, [sp, #0]
   217ba:	mov	r2, r9
   217bc:	mov	r1, r7
   217be:	mov	r0, r6
   217c0:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   217c4:	ldrd	r2, r3, [sp, #56]	; 0x38
   217c8:	mov	r1, r5
   217ca:	mov	r0, r4
   217cc:	strd	r2, r3, [sp, #16]
   217d0:	ldrd	r2, r3, [sp, #48]	; 0x30
   217d4:	strd	r2, r3, [sp, #8]
   217d8:	ldr	r3, [sp, #44]	; 0x2c
   217da:	ldrd	r2, r3, [r3]
   217de:	strd	r2, r3, [sp]
   217e2:	movs	r2, #0
   217e4:	movs	r3, #0
   217e6:	bl	215b0 <btrfs_make_block_group@@Base>
   217ea:	movw	r3, #1755	; 0x6db
   217ee:	mov	r2, r9
   217f0:	mov	r1, r7
   217f2:	str	r0, [sp, #0]
   217f4:	mov	r0, r6
   217f6:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   217fa:	b.n	21782 <btrfs_make_block_group@@Base+0x1d2>
   217fc:	movs	r0, #0
   217fe:	add	sp, #76	; 0x4c
   21800:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21804:	movs	r7, #22
   21806:	movs	r4, r0
   21808:	lsls	r0, r4, #8
   2180a:	movs	r0, r0
   2180c:	cbnz	r0, 2188c <btrfs_reserve_extent@@Base+0x58>
   2180e:	movs	r1, r0
   21810:	push	{r0, r3, r4, r5, r7}
   21812:	movs	r1, r0
   21814:	ldrb	r6, [r4, #24]
   21816:	movs	r1, r0
   21818:	cbnz	r0, 21890 <btrfs_reserve_extent@@Base+0x5c>
   2181a:	movs	r1, r0
   2181c:	push	{r0, r2, r4, r7}
   2181e:	movs	r1, r0
   21820:	rev16	r5, r1
   21822:	movs	r1, r0
   21824:	movs	r5, #242	; 0xf2
   21826:	movs	r4, r0
   21828:	revsh	r4, r6
   2182a:	movs	r1, r0
   2182c:	cbz	r5, 2189e <btrfs_reserve_extent@@Base+0x6a>
   2182e:	movs	r1, r0
   21830:	ldrb	r6, [r5, #20]
   21832:	movs	r1, r0

00021834 <btrfs_reserve_extent@@Base>:
   21834:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21838:	mov	sl, r2
   2183a:	vpush	{d8-d10}
   2183e:	mov	r6, r1
   21840:	ldr.w	r2, [pc, #2256]	; 22114 <btrfs_reserve_extent@@Base+0x8e0>
   21844:	mov	fp, r3
   21846:	ldr.w	r1, [pc, #2256]	; 22118 <btrfs_reserve_extent@@Base+0x8e4>
   2184a:	add	r2, pc
   2184c:	sub	sp, #252	; 0xfc
   2184e:	add	r1, pc
   21850:	ldr.w	r5, [r6, #464]	; 0x1d0
   21854:	ldr	r3, [sp, #312]	; 0x138
   21856:	str	r2, [sp, #168]	; 0xa8
   21858:	ldr.w	r2, [pc, #2240]	; 2211c <btrfs_reserve_extent@@Base+0x8e8>
   2185c:	str	r3, [sp, #172]	; 0xac
   2185e:	ldrb.w	r3, [sp, #340]	; 0x154
   21862:	str	r0, [sp, #60]	; 0x3c
   21864:	ldr	r2, [r1, r2]
   21866:	ldrd	r8, r9, [sp, #320]	; 0x140
   2186a:	ldr	r7, [sp, #336]	; 0x150
   2186c:	ldr	r2, [r2, #0]
   2186e:	str	r2, [sp, #244]	; 0xf4
   21870:	mov.w	r2, #0
   21874:	cmp	r3, #0
   21876:	beq.w	21d64 <btrfs_reserve_extent@@Base+0x530>
   2187a:	ldrd	r3, r4, [r5, #248]	; 0xf8
   2187e:	ldrd	r1, r2, [r5, #272]	; 0x110
   21882:	ands	r3, r1
   21884:	orr.w	r3, r3, #1
   21888:	str	r3, [sp, #40]	; 0x28
   2188a:	ands	r4, r2
   2188c:	ldr.w	r3, [r6, #488]	; 0x1e8
   21890:	cbnz	r3, 218a2 <btrfs_reserve_extent@@Base+0x6e>
   21892:	ldr.w	r3, [r6, #451]	; 0x1c3
   21896:	ldr.w	r2, [r6, #447]	; 0x1bf
   2189a:	cmp	r3, #0
   2189c:	it	eq
   2189e:	cmpeq	r2, #7
   218a0:	bne.n	21918 <btrfs_reserve_extent@@Base+0xe4>
   218a2:	ldr	r1, [sp, #40]	; 0x28
   218a4:	movs	r3, #0
   218a6:	and.w	r2, r1, #4
   218aa:	orrs	r3, r2
   218ac:	bne.n	218e2 <btrfs_reserve_extent@@Base+0xae>
   218ae:	movs	r2, #4
   218b0:	movs	r3, #0
   218b2:	mov	r1, r5
   218b4:	strd	r2, r3, [sp]
   218b8:	ldr	r0, [sp, #60]	; 0x3c
   218ba:	mov	r2, sl
   218bc:	mov	r3, fp
   218be:	bl	21660 <btrfs_make_block_group@@Base+0xb0>
   218c2:	ldr.w	r2, [pc, #2140]	; 22120 <btrfs_reserve_extent@@Base+0x8ec>
   218c6:	ldr.w	r1, [pc, #2140]	; 22124 <btrfs_reserve_extent@@Base+0x8f0>
   218ca:	movw	r3, #2360	; 0x938
   218ce:	add	r2, pc
   218d0:	addw	r2, r2, #607	; 0x25f
   218d4:	add	r1, pc
   218d6:	str	r0, [sp, #0]
   218d8:	ldr.w	r0, [pc, #2124]	; 22128 <btrfs_reserve_extent@@Base+0x8f4>
   218dc:	add	r0, pc
   218de:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   218e2:	ldr	r3, [sp, #40]	; 0x28
   218e4:	adds.w	r2, sl, #2097152	; 0x200000
   218e8:	mov	r1, r5
   218ea:	ldr	r0, [sp, #60]	; 0x3c
   218ec:	strd	r3, r4, [sp]
   218f0:	adc.w	r3, fp, #0
   218f4:	bl	21660 <btrfs_make_block_group@@Base+0xb0>
   218f8:	ldr.w	r2, [pc, #2096]	; 2212c <btrfs_reserve_extent@@Base+0x8f8>
   218fc:	ldr.w	r1, [pc, #2096]	; 22130 <btrfs_reserve_extent@@Base+0x8fc>
   21900:	movw	r3, #2364	; 0x93c
   21904:	add	r2, pc
   21906:	addw	r2, r2, #607	; 0x25f
   2190a:	add	r1, pc
   2190c:	str	r0, [sp, #0]
   2190e:	ldr.w	r0, [pc, #2084]	; 22134 <btrfs_reserve_extent@@Base+0x900>
   21912:	add	r0, pc
   21914:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   21918:	ldr.w	r2, [r5, #388]	; 0x184
   2191c:	movs	r3, #0
   2191e:	ldr.w	r4, [pc, #2072]	; 22138 <btrfs_reserve_extent@@Base+0x904>
   21922:	cmp	fp, r3
   21924:	it	eq
   21926:	cmpeq	sl, r2
   21928:	ldr.w	r1, [pc, #2064]	; 2213c <btrfs_reserve_extent@@Base+0x908>
   2192c:	ldr.w	r0, [pc, #2064]	; 22140 <btrfs_reserve_extent@@Base+0x90c>
   21930:	add	r4, pc
   21932:	ite	cc
   21934:	movcc	r3, #1
   21936:	movcs	r3, #0
   21938:	add	r1, pc
   2193a:	add	r0, pc
   2193c:	addw	r2, r4, #607	; 0x25f
   21940:	str	r3, [sp, #0]
   21942:	movw	r3, #2367	; 0x93f
   21946:	str	r1, [sp, #32]
   21948:	str	r0, [sp, #24]
   2194a:	bl	1ddcc <btrfs_create_tree@@Base+0x358>
   2194e:	ldr	r3, [sp, #60]	; 0x3c
   21950:	ldr	r1, [sp, #32]
   21952:	ldr	r0, [sp, #24]
   21954:	ldrd	r2, r3, [r3, #16]
   21958:	strd	r2, r3, [sp, #80]	; 0x50
   2195c:	ldr	r3, [sp, #60]	; 0x3c
   2195e:	ldrd	r2, r3, [r3, #24]
   21962:	strd	r2, r3, [sp, #88]	; 0x58
   21966:	ldr.w	r3, [r6, #464]	; 0x1d0
   2196a:	ldr	r3, [r3, #24]
   2196c:	str	r3, [sp, #44]	; 0x2c
   2196e:	ldr.w	r3, [r3, #464]	; 0x1d0
   21972:	ldr.w	r2, [r3, #388]	; 0x184
   21976:	vmov	s16, r3
   2197a:	movs	r3, #0
   2197c:	cmp	fp, r3
   2197e:	it	eq
   21980:	cmpeq	sl, r2
   21982:	add.w	r2, r4, #628	; 0x274
   21986:	ite	cc
   21988:	movcc	r3, #1
   2198a:	movcs	r3, #0
   2198c:	str	r3, [sp, #0]
   2198e:	mov.w	r3, #2208	; 0x8a0
   21992:	bl	1ddcc <btrfs_create_tree@@Base+0x358>
   21996:	movs	r3, #168	; 0xa8
   21998:	strb	r3, [r7, #8]
   2199a:	orrs.w	r3, r8, r9
   2199e:	beq.w	21d92 <btrfs_reserve_extent@@Base+0x55e>
   219a2:	vmov	r0, s16
   219a6:	mov	r2, r8
   219a8:	mov	r3, r9
   219aa:	bl	1e528 <btrfs_lookup_first_block_group@@Base>
   219ae:	mov	r1, r0
   219b0:	cbnz	r0, 219ba <btrfs_reserve_extent@@Base+0x186>
   219b2:	mov.w	r8, #0
   219b6:	mov.w	r9, #0
   219ba:	ldr	r3, [sp, #40]	; 0x28
   219bc:	mov	r2, r8
   219be:	str	r3, [sp, #0]
   219c0:	mov	r3, r9
   219c2:	ldr	r0, [sp, #44]	; 0x2c
   219c4:	ldr.w	r0, [r0, #464]	; 0x1d0
   219c8:	bl	1e8b8 <btrfs_lookup_block_group@@Base+0x30c>
   219cc:	ldr	r3, [sp, #172]	; 0xac
   219ce:	movs	r2, #0
   219d0:	adds.w	r3, sl, r3
   219d4:	str	r3, [sp, #112]	; 0x70
   219d6:	movs	r3, #0
   219d8:	strd	r2, r3, [sp, #24]
   219dc:	movs	r3, #0
   219de:	str	r3, [sp, #56]	; 0x38
   219e0:	str	r3, [sp, #100]	; 0x64
   219e2:	ldr.w	r3, [pc, #1888]	; 22144 <btrfs_reserve_extent@@Base+0x910>
   219e6:	add	r3, pc
   219e8:	str	r3, [sp, #180]	; 0xb4
   219ea:	adds.w	r3, sl, #4294967295	; 0xffffffff
   219ee:	str	r3, [sp, #184]	; 0xb8
   219f0:	adc.w	r3, fp, #4294967295	; 0xffffffff
   219f4:	str	r3, [sp, #188]	; 0xbc
   219f6:	mov	r4, r0
   219f8:	ldr	r3, [sp, #44]	; 0x2c
   219fa:	movs	r2, #0
   219fc:	ldr	r1, [sp, #24]
   219fe:	ldr.w	r3, [r3, #464]	; 0x1d0
   21a02:	ldr.w	r3, [r3, #392]	; 0x188
   21a06:	adds.w	r3, r3, #4294967295	; 0xffffffff
   21a0a:	adc.w	r2, r2, #4294967295	; 0xffffffff
   21a0e:	adds.w	r0, r1, #4294967295	; 0xffffffff
   21a12:	ldr	r1, [sp, #28]
   21a14:	orr.w	r3, r3, r0
   21a18:	adc.w	r1, r1, #4294967295	; 0xffffffff
   21a1c:	adds	r3, #1
   21a1e:	orr.w	r2, r2, r1
   21a22:	str	r3, [sp, #48]	; 0x30
   21a24:	adc.w	r3, r2, #0
   21a28:	str	r3, [sp, #52]	; 0x34
   21a2a:	cbnz	r4, 21a4a <btrfs_reserve_extent@@Base+0x216>
   21a2c:	vmov	r0, s16
   21a30:	ldrd	r2, r3, [sp, #48]	; 0x30
   21a34:	bl	1e528 <btrfs_lookup_first_block_group@@Base>
   21a38:	mov	r4, r0
   21a3a:	cbnz	r0, 21a4a <btrfs_reserve_extent@@Base+0x216>
   21a3c:	vmov	r0, s16
   21a40:	movs	r2, #0
   21a42:	movs	r3, #0
   21a44:	bl	1e528 <btrfs_lookup_first_block_group@@Base>
   21a48:	mov	r4, r0
   21a4a:	movs	r2, #0
   21a4c:	movs	r3, #0
   21a4e:	ldr	r1, [sp, #112]	; 0x70
   21a50:	strd	r2, r3, [sp, #208]	; 0xd0
   21a54:	strd	r2, r3, [sp, #216]	; 0xd8
   21a58:	cmp	r4, #0
   21a5a:	beq.w	21e9e <btrfs_reserve_extent@@Base+0x66a>
   21a5e:	ldrd	r2, r3, [sp, #48]	; 0x30
   21a62:	strd	r2, r3, [sp, #24]
   21a66:	movs	r3, #0
   21a68:	mov	r2, r1
   21a6a:	str	r3, [sp, #116]	; 0x74
   21a6c:	asrs	r3, r1, #31
   21a6e:	strd	r2, r3, [sp, #104]	; 0x68
   21a72:	ldr	r3, [r4, #104]	; 0x68
   21a74:	cmp	r3, #0
   21a76:	bne.w	21c00 <btrfs_reserve_extent@@Base+0x3cc>
   21a7a:	ldr	r3, [sp, #44]	; 0x2c
   21a7c:	ldr.w	r3, [r3, #464]	; 0x1d0
   21a80:	ldr	r3, [r3, #24]
   21a82:	str	r3, [sp, #96]	; 0x60
   21a84:	ldr.w	r3, [r3, #464]	; 0x1d0
   21a88:	mov	r9, r3
   21a8a:	bl	17544 <btrfs_alloc_path@@Base>
   21a8e:	mov	r6, r0
   21a90:	cmp	r0, #0
   21a92:	beq.w	21ea6 <btrfs_reserve_extent@@Base+0x672>
   21a96:	movs	r3, #2
   21a98:	strb.w	r3, [r0, #64]	; 0x40
   21a9c:	ldrd	r2, r3, [r4, #40]	; 0x28
   21aa0:	mov.w	r8, #0
   21aa4:	ldr	r1, [sp, #96]	; 0x60
   21aa6:	cmp	r3, #0
   21aa8:	strd	r8, r8, [sp]
   21aac:	it	eq
   21aae:	cmpeq.w	r2, #65536	; 0x10000
   21ab2:	strd	r2, r3, [sp, #32]
   21ab6:	strb.w	r8, [sp, #233]	; 0xe9
   21aba:	ittt	cc
   21abc:	movcc.w	r2, #65536	; 0x10000
   21ac0:	movcc	r3, #0
   21ac2:	strdcc	r2, r3, [sp, #32]
   21ac6:	ldrd	r2, r3, [sp, #32]
   21aca:	strb.w	r8, [sp, #234]	; 0xea
   21ace:	strb.w	r8, [sp, #235]	; 0xeb
   21ad2:	strd	r2, r3, [sp, #224]	; 0xe0
   21ad6:	add	r2, sp, #224	; 0xe0
   21ad8:	mov	r3, r0
   21ada:	mov	r0, r8
   21adc:	strb.w	r8, [sp, #236]	; 0xec
   21ae0:	strb.w	r8, [sp, #237]	; 0xed
   21ae4:	strb.w	r8, [sp, #238]	; 0xee
   21ae8:	strb.w	r8, [sp, #239]	; 0xef
   21aec:	strb.w	r8, [sp, #240]	; 0xf0
   21af0:	strb.w	r8, [sp, #232]	; 0xe8
   21af4:	str	r2, [sp, #176]	; 0xb0
   21af6:	bl	19930 <btrfs_search_slot@@Base>
   21afa:	cmp	r0, r8
   21afc:	blt.n	21bfa <btrfs_reserve_extent@@Base+0x3c6>
   21afe:	ldr	r2, [sp, #176]	; 0xb0
   21b00:	mov	r3, r9
   21b02:	adds	r3, #96	; 0x60
   21b04:	str.w	r8, [sp, #176]	; 0xb0
   21b08:	vmov	s17, r3
   21b0c:	vmov	s18, r2
   21b10:	ldr	r0, [r6, #0]
   21b12:	ldr	r2, [r6, #32]
   21b14:	ldr.w	r3, [r0, #192]	; 0xc0
   21b18:	cmp	r3, r2
   21b1a:	bhi.w	21da0 <btrfs_reserve_extent@@Base+0x56c>
   21b1e:	ldr	r3, [sp, #176]	; 0xb0
   21b20:	mov	r1, r6
   21b22:	strb.w	r3, [r6, #65]	; 0x41
   21b26:	ldr	r3, [sp, #96]	; 0x60
   21b28:	ldr.w	r0, [r3, #464]	; 0x1d0
   21b2c:	bl	1ad64 <btrfs_next_sibling_tree_block@@Base>
   21b30:	cmp	r0, #0
   21b32:	blt.n	21bfa <btrfs_reserve_extent@@Base+0x3c6>
   21b34:	beq.n	21b10 <btrfs_reserve_extent@@Base+0x2dc>
   21b36:	ldr.w	r3, [r4, #49]	; 0x31
   21b3a:	ldrd	r1, r0, [r4, #40]	; 0x28
   21b3e:	ldr.w	r2, [r4, #53]	; 0x35
   21b42:	adds	r3, r3, r1
   21b44:	str	r3, [sp, #72]	; 0x48
   21b46:	adc.w	r3, r2, r0
   21b4a:	str	r3, [sp, #76]	; 0x4c
   21b4c:	ldrd	r0, r1, [sp, #72]	; 0x48
   21b50:	ldrd	r2, r3, [sp, #32]
   21b54:	cmp	r3, r1
   21b56:	it	eq
   21b58:	cmpeq	r2, r0
   21b5a:	bcs.n	21b78 <btrfs_reserve_extent@@Base+0x344>
   21b5c:	ldr	r3, [sp, #72]	; 0x48
   21b5e:	vmov	r0, s17
   21b62:	adds.w	r2, r3, #4294967295	; 0xffffffff
   21b66:	ldr	r3, [sp, #76]	; 0x4c
   21b68:	adc.w	r3, r3, #4294967295	; 0xffffffff
   21b6c:	strd	r2, r3, [sp]
   21b70:	ldrd	r2, r3, [sp, #32]
   21b74:	bl	161dc <set_extent_dirty@@Base>
   21b78:	ldr	r1, [sp, #180]	; 0xb4
   21b7a:	mov.w	r8, #12
   21b7e:	ldr	r3, [sp, #96]	; 0x60
   21b80:	mov.w	r2, #65536	; 0x10000
   21b84:	addw	r1, r1, #645	; 0x285
   21b88:	vmov	s18, r1
   21b8c:	ldr.w	r1, [pc, #1464]	; 22148 <btrfs_reserve_extent@@Base+0x914>
   21b90:	ldr.w	r9, [r3, #464]	; 0x1d0
   21b94:	add	r1, pc
   21b96:	add.w	r3, r9, #96	; 0x60
   21b9a:	vmov	s19, r1
   21b9e:	ldr.w	r1, [pc, #1452]	; 2214c <btrfs_reserve_extent@@Base+0x918>
   21ba2:	vmov	s17, r3
   21ba6:	movs	r3, #0
   21ba8:	add	r1, pc
   21baa:	vmov	s20, r1
   21bae:	add	r1, sp, #200	; 0xc8
   21bb0:	strd	r2, r3, [sp]
   21bb4:	str	r1, [sp, #16]
   21bb6:	mov	r0, r9
   21bb8:	add	r1, sp, #204	; 0xcc
   21bba:	str	r1, [sp, #12]
   21bbc:	add	r1, sp, #196	; 0xc4
   21bbe:	str	r1, [sp, #8]
   21bc0:	ldrd	r2, r3, [r4, #40]	; 0x28
   21bc4:	bl	28df6 <btrfs_rmap_block@@Base>
   21bc8:	vmov	r2, s18
   21bcc:	vmov	r1, s19
   21bd0:	movs	r3, #71	; 0x47
   21bd2:	str	r0, [sp, #0]
   21bd4:	vmov	r0, s20
   21bd8:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   21bdc:	ldr	r3, [sp, #204]	; 0xcc
   21bde:	ldr	r0, [sp, #196]	; 0xc4
   21be0:	subs	r2, r3, #1
   21be2:	str	r2, [sp, #204]	; 0xcc
   21be4:	cmp	r3, #0
   21be6:	bne.w	21e68 <btrfs_reserve_extent@@Base+0x634>
   21bea:	blx	8434 <free@plt+0x4>
   21bee:	cmp.w	r8, #36	; 0x24
   21bf2:	bne.w	21e48 <btrfs_reserve_extent@@Base+0x614>
   21bf6:	movs	r3, #1
   21bf8:	str	r3, [r4, #104]	; 0x68
   21bfa:	mov	r0, r6
   21bfc:	bl	17572 <btrfs_free_path@@Base>
   21c00:	ldr	r3, [r4, #108]	; 0x6c
   21c02:	cmp	r3, #0
   21c04:	bne.w	21f22 <btrfs_reserve_extent@@Base+0x6ee>
   21c08:	ldr	r2, [sp, #40]	; 0x28
   21c0a:	ldrd	r3, r1, [r4, #96]	; 0x60
   21c0e:	mov.w	r9, r2, asr #31
   21c12:	ands	r3, r2
   21c14:	and.w	r1, r9, r1
   21c18:	str	r3, [sp, #128]	; 0x80
   21c1a:	str	r1, [sp, #132]	; 0x84
   21c1c:	ldrd	r0, r1, [sp, #128]	; 0x80
   21c20:	cmp	r9, r1
   21c22:	it	eq
   21c24:	cmpeq	r2, r0
   21c26:	bne.w	21f22 <btrfs_reserve_extent@@Base+0x6ee>
   21c2a:	ldrd	r2, r3, [r4, #40]	; 0x28
   21c2e:	movs	r6, #1
   21c30:	strd	r2, r3, [sp, #32]
   21c34:	ldrd	r0, r1, [sp, #32]
   21c38:	ldrd	r2, r3, [sp, #48]	; 0x30
   21c3c:	cmp	r1, r3
   21c3e:	it	eq
   21c40:	cmpeq	r0, r2
   21c42:	it	cc
   21c44:	strdcc	r2, r3, [sp, #32]
   21c48:	add	r3, sp, #216	; 0xd8
   21c4a:	str	r3, [sp, #96]	; 0x60
   21c4c:	ldr	r3, [sp, #44]	; 0x2c
   21c4e:	ldr.w	r0, [r3, #464]	; 0x1d0
   21c52:	ldr	r3, [sp, #96]	; 0x60
   21c54:	adds	r0, #96	; 0x60
   21c56:	str	r6, [sp, #8]
   21c58:	str	r3, [sp, #4]
   21c5a:	add	r3, sp, #208	; 0xd0
   21c5c:	str	r3, [sp, #0]
   21c5e:	ldrd	r2, r3, [sp, #32]
   21c62:	bl	1620c <find_first_extent_bit@@Base>
   21c66:	cmp	r0, #0
   21c68:	bne.w	21f22 <btrfs_reserve_extent@@Base+0x6ee>
   21c6c:	ldrd	r0, r1, [sp, #32]
   21c70:	ldrd	r2, r3, [sp, #208]	; 0xd0
   21c74:	ldrd	r8, r9, [sp, #104]	; 0x68
   21c78:	cmp	r3, r1
   21c7a:	it	eq
   21c7c:	cmpeq	r2, r0
   21c7e:	it	cc
   21c80:	movcc	r3, r1
   21c82:	ldr	r1, [sp, #216]	; 0xd8
   21c84:	it	cc
   21c86:	movcc	r2, r0
   21c88:	strd	r2, r3, [sp, #208]	; 0xd0
   21c8c:	adds	r1, #1
   21c8e:	str	r1, [sp, #32]
   21c90:	ldr	r1, [sp, #220]	; 0xdc
   21c92:	adc.w	r1, r1, #0
   21c96:	str	r1, [sp, #36]	; 0x24
   21c98:	ldr	r1, [sp, #32]
   21c9a:	subs	r1, r1, r2
   21c9c:	str	r1, [sp, #136]	; 0x88
   21c9e:	ldr	r1, [sp, #36]	; 0x24
   21ca0:	sbc.w	r1, r1, r3
   21ca4:	str	r1, [sp, #140]	; 0x8c
   21ca6:	ldrd	r0, r1, [sp, #136]	; 0x88
   21caa:	cmp	r1, r9
   21cac:	it	eq
   21cae:	cmpeq	r0, r8
   21cb0:	bcc.n	21c4c <btrfs_reserve_extent@@Base+0x418>
   21cb2:	ldr	r1, [sp, #104]	; 0x68
   21cb4:	adds	r1, r2, r1
   21cb6:	str	r1, [sp, #144]	; 0x90
   21cb8:	ldr	r1, [sp, #108]	; 0x6c
   21cba:	adc.w	r1, r3, r1
   21cbe:	str	r1, [sp, #148]	; 0x94
   21cc0:	ldrd	r1, r0, [r4, #40]	; 0x28
   21cc4:	ldr.w	r6, [r4, #49]	; 0x31
   21cc8:	ldr.w	ip, [r4, #53]	; 0x35
   21ccc:	adds	r1, r6, r1
   21cce:	str	r1, [sp, #152]	; 0x98
   21cd0:	adc.w	r1, ip, r0
   21cd4:	str	r1, [sp, #156]	; 0x9c
   21cd6:	ldrd	r0, r1, [sp, #152]	; 0x98
   21cda:	ldrd	r8, r9, [sp, #144]	; 0x90
   21cde:	cmp	r1, r9
   21ce0:	it	eq
   21ce2:	cmpeq	r0, r8
   21ce4:	bcc.w	21f22 <btrfs_reserve_extent@@Base+0x6ee>
   21ce8:	adds.w	r1, sl, r2
   21cec:	str	r2, [r7, #0]
   21cee:	str	r1, [sp, #64]	; 0x40
   21cf0:	adc.w	r1, fp, r3
   21cf4:	str	r3, [r7, #4]
   21cf6:	str.w	sl, [r7, #9]
   21cfa:	str.w	fp, [r7, #13]
   21cfe:	str	r1, [sp, #68]	; 0x44
   21d00:	ldr.w	r0, [r4, #53]	; 0x35
   21d04:	ldr.w	r1, [r4, #49]	; 0x31
   21d08:	ldrd	r6, r4, [r4, #40]	; 0x28
   21d0c:	ldrd	r8, r9, [sp, #64]	; 0x40
   21d10:	adds	r1, r1, r6
   21d12:	str	r1, [sp, #24]
   21d14:	adc.w	r1, r0, r4
   21d18:	str	r1, [sp, #28]
   21d1a:	ldrd	r0, r1, [sp, #24]
   21d1e:	cmp	r1, r9
   21d20:	it	eq
   21d22:	cmpeq	r0, r8
   21d24:	bcc.w	21ed0 <btrfs_reserve_extent@@Base+0x69c>
   21d28:	movs	r1, #8
   21d2a:	movs	r0, #0
   21d2c:	strd	r1, r0, [sp, #8]
   21d30:	ldr	r1, [sp, #64]	; 0x40
   21d32:	adds.w	r0, r1, #4294967295	; 0xffffffff
   21d36:	ldr	r1, [sp, #68]	; 0x44
   21d38:	adc.w	r1, r1, #4294967295	; 0xffffffff
   21d3c:	strd	r0, r1, [sp]
   21d40:	vmov	r1, s16
   21d44:	add.w	r0, r1, #192	; 0xc0
   21d48:	bl	1624e <test_range_bit@@Base>
   21d4c:	cmp	r0, #0
   21d4e:	beq.w	21f62 <btrfs_reserve_extent@@Base+0x72e>
   21d52:	ldr	r3, [r7, #0]
   21d54:	ldr	r2, [r7, #4]
   21d56:	adds.w	r3, r3, sl
   21d5a:	str	r3, [sp, #24]
   21d5c:	adc.w	r3, r2, fp
   21d60:	str	r3, [sp, #28]
   21d62:	b.n	21ed0 <btrfs_reserve_extent@@Base+0x69c>
   21d64:	ldrb.w	r3, [r5, #364]	; 0x16c
   21d68:	lsls	r4, r3, #31
   21d6a:	bmi.n	21d72 <btrfs_reserve_extent@@Base+0x53e>
   21d6c:	ldr	r3, [r5, #32]
   21d6e:	cmp	r3, r6
   21d70:	bne.n	21d82 <btrfs_reserve_extent@@Base+0x54e>
   21d72:	ldrd	r3, r4, [r5, #264]	; 0x108
   21d76:	ldrd	r1, r2, [r5, #288]	; 0x120
   21d7a:	ands	r3, r1
   21d7c:	orr.w	r3, r3, #2
   21d80:	b.n	21888 <btrfs_reserve_extent@@Base+0x54>
   21d82:	ldrd	r3, r4, [r5, #256]	; 0x100
   21d86:	ldrd	r1, r2, [r5, #280]	; 0x118
   21d8a:	ands	r3, r1
   21d8c:	orr.w	r3, r3, #4
   21d90:	b.n	21888 <btrfs_reserve_extent@@Base+0x54>
   21d92:	ldr	r3, [sp, #40]	; 0x28
   21d94:	mov	r2, r8
   21d96:	ldr	r1, [sp, #60]	; 0x3c
   21d98:	str	r3, [sp, #0]
   21d9a:	mov	r3, r9
   21d9c:	ldr	r1, [r1, #56]	; 0x38
   21d9e:	b.n	219c2 <btrfs_reserve_extent@@Base+0x18e>
   21da0:	vmov	r1, s18
   21da4:	bl	1dccc <btrfs_create_tree@@Base+0x258>
   21da8:	ldrd	r8, r9, [sp, #224]	; 0xe0
   21dac:	ldrd	r0, r1, [r4, #40]	; 0x28
   21db0:	cmp	r9, r1
   21db2:	it	eq
   21db4:	cmpeq	r8, r0
   21db6:	bcc.n	21e2c <btrfs_reserve_extent@@Base+0x5f8>
   21db8:	ldr.w	ip, [r4, #49]	; 0x31
   21dbc:	ldr.w	lr, [r4, #53]	; 0x35
   21dc0:	adds.w	r3, ip, r0
   21dc4:	str	r3, [sp, #120]	; 0x78
   21dc6:	adc.w	r3, lr, r1
   21dca:	str	r3, [sp, #124]	; 0x7c
   21dcc:	ldrd	r2, r3, [sp, #120]	; 0x78
   21dd0:	cmp	r9, r3
   21dd2:	it	eq
   21dd4:	cmpeq	r8, r2
   21dd6:	bcs.w	21b36 <btrfs_reserve_extent@@Base+0x302>
   21dda:	ldrb.w	r1, [sp, #232]	; 0xe8
   21dde:	adds	r1, #88	; 0x58
   21de0:	uxtb	r1, r1
   21de2:	cmp	r1, #1
   21de4:	bhi.n	21e2c <btrfs_reserve_extent@@Base+0x5f8>
   21de6:	ldrd	r2, r3, [sp, #32]
   21dea:	cmp	r3, r9
   21dec:	it	eq
   21dee:	cmpeq	r2, r8
   21df0:	bcs.n	21e0a <btrfs_reserve_extent@@Base+0x5d6>
   21df2:	adds.w	r2, r8, #4294967295	; 0xffffffff
   21df6:	vmov	r0, s17
   21dfa:	adc.w	r3, r9, #4294967295	; 0xffffffff
   21dfe:	strd	r2, r3, [sp]
   21e02:	ldrd	r2, r3, [sp, #32]
   21e06:	bl	161dc <set_extent_dirty@@Base>
   21e0a:	ldrb.w	r1, [sp, #232]	; 0xe8
   21e0e:	ldrd	r2, r3, [sp, #224]	; 0xe0
   21e12:	cmp	r1, #169	; 0xa9
   21e14:	bne.n	21e34 <btrfs_reserve_extent@@Base+0x600>
   21e16:	ldr	r1, [sp, #96]	; 0x60
   21e18:	ldr.w	r1, [r1, #464]	; 0x1d0
   21e1c:	ldr.w	r1, [r1, #384]	; 0x180
   21e20:	adds.w	r8, r2, r1
   21e24:	adc.w	r9, r3, #0
   21e28:	strd	r8, r9, [sp, #32]
   21e2c:	ldr	r3, [r6, #32]
   21e2e:	adds	r3, #1
   21e30:	str	r3, [r6, #32]
   21e32:	b.n	21b10 <btrfs_reserve_extent@@Base+0x2dc>
   21e34:	ldr.w	r1, [sp, #233]	; 0xe9
   21e38:	ldr.w	r0, [sp, #237]	; 0xed
   21e3c:	adds	r1, r1, r2
   21e3e:	str	r1, [sp, #32]
   21e40:	adc.w	r3, r0, r3
   21e44:	str	r3, [sp, #36]	; 0x24
   21e46:	b.n	21e2c <btrfs_reserve_extent@@Base+0x5f8>
   21e48:	mov.w	r2, #16384	; 0x4000
   21e4c:	sub.w	r3, r8, #32
   21e50:	rsb	r1, r8, #32
   21e54:	lsl.w	r3, r2, r3
   21e58:	lsr.w	r1, r2, r1
   21e5c:	lsl.w	r2, r2, r8
   21e60:	orrs	r3, r1
   21e62:	add.w	r8, r8, #12
   21e66:	b.n	21bae <btrfs_reserve_extent@@Base+0x37a>
   21e68:	add.w	r0, r0, r2, lsl #3
   21e6c:	ldrd	ip, r3, [r0]
   21e70:	ldr	r0, [sp, #200]	; 0xc8
   21e72:	asrs	r2, r0, #31
   21e74:	mov	r1, r0
   21e76:	strd	r1, r2, [sp, #32]
   21e7a:	mov	r2, ip
   21e7c:	ldr	r1, [sp, #32]
   21e7e:	adds.w	r0, r1, #4294967295	; 0xffffffff
   21e82:	ldr	r1, [sp, #36]	; 0x24
   21e84:	adc.w	r1, r1, #4294967295	; 0xffffffff
   21e88:	adds.w	r0, r0, ip
   21e8c:	adc.w	r1, r3, r1
   21e90:	strd	r0, r1, [sp]
   21e94:	vmov	r0, s17
   21e98:	bl	161f4 <clear_extent_dirty@@Base>
   21e9c:	b.n	21bdc <btrfs_reserve_extent@@Base+0x3a8>
   21e9e:	ldrd	r3, r4, [sp, #48]	; 0x30
   21ea2:	strd	r3, r4, [sp, #24]
   21ea6:	ldr	r1, [sp, #44]	; 0x2c
   21ea8:	ldrd	r2, r3, [sp, #48]	; 0x30
   21eac:	ldr.w	r0, [r1, #464]	; 0x1d0
   21eb0:	bl	1e5ac <btrfs_lookup_block_group@@Base>
   21eb4:	cbnz	r0, 21ed0 <btrfs_reserve_extent@@Base+0x69c>
   21eb6:	ldr	r2, [sp, #168]	; 0xa8
   21eb8:	ldr	r3, [pc, #660]	; (22150 <btrfs_reserve_extent@@Base+0x91c>)
   21eba:	ldr	r3, [r2, r3]
   21ebc:	ldrd	r1, r2, [sp, #48]	; 0x30
   21ec0:	strd	r1, r2, [sp]
   21ec4:	movs	r1, #1
   21ec6:	ldr	r2, [pc, #652]	; (22154 <btrfs_reserve_extent@@Base+0x920>)
   21ec8:	ldr	r0, [r3, #0]
   21eca:	add	r2, pc
   21ecc:	blx	8860 <__fprintf_chk@plt+0x4>
   21ed0:	vmov	r0, s16
   21ed4:	ldrd	r2, r3, [sp, #24]
   21ed8:	bl	1e528 <btrfs_lookup_first_block_group@@Base>
   21edc:	mov	r1, r0
   21ede:	cmp	r0, #0
   21ee0:	bne.w	220ec <btrfs_reserve_extent@@Base+0x8b8>
   21ee4:	ldr	r3, [sp, #100]	; 0x64
   21ee6:	cmp	r3, #0
   21ee8:	bne.w	22100 <btrfs_reserve_extent@@Base+0x8cc>
   21eec:	ldr	r3, [sp, #56]	; 0x38
   21eee:	cmp	r3, #0
   21ef0:	beq.w	220f4 <btrfs_reserve_extent@@Base+0x8c0>
   21ef4:	ldr	r6, [sp, #56]	; 0x38
   21ef6:	movs	r4, #0
   21ef8:	ldr	r3, [sp, #112]	; 0x70
   21efa:	ldr	r2, [sp, #172]	; 0xac
   21efc:	subs	r3, r3, r2
   21efe:	str	r3, [sp, #112]	; 0x70
   21f00:	movs	r3, #0
   21f02:	strd	r3, r4, [sp, #24]
   21f06:	ldr	r3, [sp, #40]	; 0x28
   21f08:	ldr	r0, [sp, #44]	; 0x2c
   21f0a:	str	r3, [sp, #0]
   21f0c:	ldrd	r2, r3, [sp, #24]
   21f10:	ldr.w	r0, [r0, #464]	; 0x1d0
   21f14:	bl	1e8b8 <btrfs_lookup_block_group@@Base+0x30c>
   21f18:	ldr	r3, [sp, #56]	; 0x38
   21f1a:	str	r6, [sp, #56]	; 0x38
   21f1c:	str	r3, [sp, #100]	; 0x64
   21f1e:	mov	r4, r0
   21f20:	b.n	219f8 <btrfs_reserve_extent@@Base+0x1c4>
   21f22:	ldr.w	r3, [r4, #49]	; 0x31
   21f26:	ldrd	r1, r0, [r4, #40]	; 0x28
   21f2a:	ldr.w	r2, [r4, #53]	; 0x35
   21f2e:	adds	r3, r3, r1
   21f30:	str	r3, [sp, #24]
   21f32:	adc.w	r3, r2, r0
   21f36:	str	r3, [sp, #28]
   21f38:	ldr	r1, [sp, #44]	; 0x2c
   21f3a:	ldrd	r2, r3, [sp, #24]
   21f3e:	ldr.w	r0, [r1, #464]	; 0x1d0
   21f42:	bl	1e528 <btrfs_lookup_first_block_group@@Base>
   21f46:	mov	r4, r0
   21f48:	cmp	r0, #0
   21f4a:	bne.w	21a72 <btrfs_reserve_extent@@Base+0x23e>
   21f4e:	ldr	r3, [sp, #116]	; 0x74
   21f50:	cmp	r3, #0
   21f52:	bne.n	21ea6 <btrfs_reserve_extent@@Base+0x672>
   21f54:	movs	r3, #1
   21f56:	str	r3, [sp, #116]	; 0x74
   21f58:	ldrd	r3, r4, [sp, #48]	; 0x30
   21f5c:	strd	r3, r4, [sp, #24]
   21f60:	b.n	21f38 <btrfs_reserve_extent@@Base+0x704>
   21f62:	ldr	r2, [r7, #0]
   21f64:	movs	r6, #1
   21f66:	ldr	r3, [r7, #4]
   21f68:	adds.w	r1, r2, #4294967295	; 0xffffffff
   21f6c:	str	r0, [sp, #12]
   21f6e:	adc.w	r0, r3, #4294967295	; 0xffffffff
   21f72:	adds.w	r1, r1, sl
   21f76:	adc.w	r0, r0, fp
   21f7a:	strd	r1, r0, [sp]
   21f7e:	vmov	r1, s16
   21f82:	str	r6, [sp, #8]
   21f84:	add.w	r0, r1, #160	; 0xa0
   21f88:	bl	1624e <test_range_bit@@Base>
   21f8c:	mov	r4, r0
   21f8e:	cmp	r0, #0
   21f90:	bne.w	21d52 <btrfs_reserve_extent@@Base+0x51e>
   21f94:	vmov	r3, s16
   21f98:	ldr.w	r0, [r3, #224]	; 0xe0
   21f9c:	cbz	r0, 21fc4 <btrfs_reserve_extent@@Base+0x790>
   21f9e:	ldr	r2, [r7, #0]
   21fa0:	ldr	r3, [r7, #4]
   21fa2:	adds.w	r1, r2, #4294967295	; 0xffffffff
   21fa6:	strd	r6, r4, [sp, #8]
   21faa:	adc.w	r6, r3, #4294967295	; 0xffffffff
   21fae:	adds.w	r1, r1, sl
   21fb2:	adc.w	r6, r6, fp
   21fb6:	strd	r1, r6, [sp]
   21fba:	bl	1624e <test_range_bit@@Base>
   21fbe:	cmp	r0, #0
   21fc0:	bne.w	21d52 <btrfs_reserve_extent@@Base+0x51e>
   21fc4:	ldrd	r2, r3, [sp, #88]	; 0x58
   21fc8:	ldr.w	r8, [r7]
   21fcc:	orrs	r3, r2
   21fce:	ldr.w	r9, [r7, #4]
   21fd2:	beq.n	2200e <btrfs_reserve_extent@@Base+0x7da>
   21fd4:	adds.w	r3, sl, r8
   21fd8:	str	r3, [sp, #160]	; 0xa0
   21fda:	adc.w	r3, fp, r9
   21fde:	str	r3, [sp, #164]	; 0xa4
   21fe0:	ldrd	r0, r1, [sp, #160]	; 0xa0
   21fe4:	ldrd	r2, r3, [sp, #80]	; 0x50
   21fe8:	cmp	r3, r1
   21fea:	it	eq
   21fec:	cmpeq	r2, r0
   21fee:	bcs.n	2200e <btrfs_reserve_extent@@Base+0x7da>
   21ff0:	ldr	r2, [sp, #88]	; 0x58
   21ff2:	ldr	r3, [sp, #80]	; 0x50
   21ff4:	adds	r3, r3, r2
   21ff6:	ldr	r2, [sp, #92]	; 0x5c
   21ff8:	str	r3, [sp, #24]
   21ffa:	ldr	r3, [sp, #84]	; 0x54
   21ffc:	adcs	r3, r2
   21ffe:	str	r3, [sp, #28]
   22000:	ldrd	r2, r3, [sp, #24]
   22004:	cmp	r9, r3
   22006:	it	eq
   22008:	cmpeq	r8, r2
   2200a:	bcc.w	21ed0 <btrfs_reserve_extent@@Base+0x69c>
   2200e:	ldr	r3, [sp, #40]	; 0x28
   22010:	lsls	r3, r3, #31
   22012:	bmi.n	220b0 <btrfs_reserve_extent@@Base+0x87c>
   22014:	vmov	r0, s16
   22018:	mov	r2, r8
   2201a:	mov	r3, r9
   2201c:	bl	1e5ac <btrfs_lookup_block_group@@Base>
   22020:	cmp	r0, #0
   22022:	beq.n	2209e <btrfs_reserve_extent@@Base+0x86a>
   22024:	ldrd	r3, r6, [r0, #40]	; 0x28
   22028:	ldr	r1, [sp, #184]	; 0xb8
   2202a:	subs.w	ip, r8, r3
   2202e:	ldr	r2, [r7, #0]
   22030:	sbc.w	r6, r9, r6
   22034:	ldr	r3, [r7, #4]
   22036:	mov.w	r8, ip, lsr #16
   2203a:	adds.w	ip, r1, ip
   2203e:	ldr	r1, [sp, #188]	; 0xbc
   22040:	orr.w	r8, r8, r6, lsl #16
   22044:	mov.w	r9, r6, lsr #16
   22048:	mov.w	r0, ip, lsr #16
   2204c:	adc.w	r6, r1, r6
   22050:	lsrs	r1, r6, #16
   22052:	orr.w	r0, r0, r6, lsl #16
   22056:	cmp	r9, r1
   22058:	it	eq
   2205a:	cmpeq	r8, r0
   2205c:	beq.n	2209e <btrfs_reserve_extent@@Base+0x86a>
   2205e:	vmov	r0, s16
   22062:	bl	1e5ac <btrfs_lookup_block_group@@Base>
   22066:	cbz	r0, 2209e <btrfs_reserve_extent@@Base+0x86a>
   22068:	ldr	r3, [r7, #0]
   2206a:	ldrd	r2, r1, [r0, #40]	; 0x28
   2206e:	ldr	r0, [r7, #4]
   22070:	adds.w	r3, r3, #4294967295	; 0xffffffff
   22074:	adc.w	r0, r0, #4294967295	; 0xffffffff
   22078:	adds.w	r3, r3, sl
   2207c:	adc.w	r0, r0, fp
   22080:	subs	r3, r3, r2
   22082:	sbc.w	r0, r0, r1
   22086:	adds	r2, #1
   22088:	mvn.w	r3, r3, lsr #16
   2208c:	adc.w	r1, r1, #0
   22090:	mvn.w	r3, r3, lsl #16
   22094:	adds	r3, r3, r2
   22096:	str	r3, [sp, #24]
   22098:	adc.w	r3, r0, r1
   2209c:	b.n	21d60 <btrfs_reserve_extent@@Base+0x52c>
   2209e:	vmov	r0, s16
   220a2:	ldr	r2, [r7, #0]
   220a4:	ldr	r3, [r7, #4]
   220a6:	bl	1e5ac <btrfs_lookup_block_group@@Base>
   220aa:	cbz	r0, 220b0 <btrfs_reserve_extent@@Base+0x87c>
   220ac:	ldr	r3, [sp, #60]	; 0x3c
   220ae:	str	r0, [r3, #56]	; 0x38
   220b0:	ldr	r2, [r7, #0]
   220b2:	ldr	r3, [r7, #4]
   220b4:	adds.w	r1, r2, #4294967295	; 0xffffffff
   220b8:	str.w	sl, [r7, #9]
   220bc:	adc.w	r0, r3, #4294967295	; 0xffffffff
   220c0:	adds.w	r1, r1, sl
   220c4:	adc.w	r0, r0, fp
   220c8:	str.w	fp, [r7, #13]
   220cc:	strd	r1, r0, [sp]
   220d0:	add.w	r0, r5, #96	; 0x60
   220d4:	bl	161f4 <clear_extent_dirty@@Base>
   220d8:	ldr	r2, [pc, #124]	; (22158 <btrfs_reserve_extent@@Base+0x924>)
   220da:	ldr	r3, [pc, #64]	; (2211c <btrfs_reserve_extent@@Base+0x8e8>)
   220dc:	add	r2, pc
   220de:	ldr	r3, [r2, r3]
   220e0:	ldr	r2, [r3, #0]
   220e2:	ldr	r3, [sp, #244]	; 0xf4
   220e4:	eors	r2, r3
   220e6:	beq.n	22106 <btrfs_reserve_extent@@Base+0x8d2>
   220e8:	blx	8510 <__stack_chk_fail@plt>
   220ec:	ldr	r3, [sp, #100]	; 0x64
   220ee:	ldr	r6, [sp, #56]	; 0x38
   220f0:	str	r3, [sp, #56]	; 0x38
   220f2:	b.n	21f06 <btrfs_reserve_extent@@Base+0x6d2>
   220f4:	movs	r3, #0
   220f6:	movs	r4, #0
   220f8:	movs	r6, #1
   220fa:	strd	r3, r4, [sp, #24]
   220fe:	b.n	21f06 <btrfs_reserve_extent@@Base+0x6d2>
   22100:	mvn.w	r4, #27
   22104:	b.n	220d8 <btrfs_reserve_extent@@Base+0x8a4>
   22106:	mov	r0, r4
   22108:	add	sp, #252	; 0xfc
   2210a:	vpop	{d8-d10}
   2210e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22112:	nop
   22114:	movs	r5, #58	; 0x3a
   22116:	movs	r4, r0
   22118:	movs	r5, #54	; 0x36
   2211a:	movs	r4, r0
   2211c:	lsls	r0, r4, #8
   2211e:	movs	r0, r0
   22120:	cbnz	r4, 22158 <btrfs_reserve_extent@@Base+0x924>
   22122:	movs	r1, r0
   22124:	uxth	r5, r3
   22126:	movs	r1, r0
   22128:	ldrb	r0, [r1, #16]
   2212a:	movs	r1, r0
   2212c:	cbnz	r6, 22156 <btrfs_reserve_extent@@Base+0x922>
   2212e:	movs	r1, r0
   22130:	sxtb	r7, r4
   22132:	movs	r1, r0
   22134:	ldrb	r2, [r2, #15]
   22136:	movs	r1, r0
   22138:	cbnz	r2, 22158 <btrfs_reserve_extent@@Base+0x924>
   2213a:	movs	r1, r0
   2213c:	sxth	r1, r7
   2213e:	movs	r1, r0
   22140:			; <UNDEFINED> instruction: 0xb7fd
   22142:	movs	r1, r0
   22144:			; <UNDEFINED> instruction: 0xb8bc
   22146:	movs	r1, r0
   22148:	add	r7, sp, #884	; 0x374
   2214a:	movs	r1, r0
   2214c:	ldrb	r4, [r7, #4]
   2214e:	movs	r1, r0
   22150:	lsls	r0, r6, #8
   22152:	movs	r0, r0
   22154:	uxth	r2, r1
   22156:	movs	r1, r0
   22158:	adds	r0, r5, #2
   2215a:	movs	r4, r0

0002215c <btrfs_alloc_free_block@@Base>:
   2215c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22160:	mov	r4, r2
   22162:	ldr	r2, [pc, #600]	; (223bc <btrfs_alloc_free_block@@Base+0x260>)
   22164:	sub	sp, #84	; 0x54
   22166:	ldr	r3, [pc, #600]	; (223c0 <btrfs_alloc_free_block@@Base+0x264>)
   22168:	mov	r7, r0
   2216a:	add	r2, pc
   2216c:	ldr.w	r8, [r1, #464]	; 0x1d0
   22170:	movs	r0, #32
   22172:	ldrd	r9, sl, [sp, #128]	; 0x80
   22176:	ldr	r3, [r2, r3]
   22178:	mov	r6, r1
   2217a:	mov.w	fp, #0
   2217e:	ldr	r3, [r3, #0]
   22180:	str	r3, [sp, #76]	; 0x4c
   22182:	mov.w	r3, #0
   22186:	ldr.w	r3, [r8, #308]	; 0x134
   2218a:	ldr.w	r2, [r3, #188]	; 0xbc
   2218e:	str	r2, [sp, #48]	; 0x30
   22190:	ldr.w	r3, [r3, #192]	; 0xc0
   22194:	str	r3, [sp, #52]	; 0x34
   22196:	blx	8678 <malloc@plt+0x4>
   2219a:	mov	r5, r0
   2219c:	cmp	r0, #0
   2219e:	beq.w	223a0 <btrfs_alloc_free_block@@Base+0x244>
   221a2:	mov	r0, r8
   221a4:	movs	r2, #4
   221a6:	movs	r3, #0
   221a8:	bl	1dc3c <btrfs_create_tree@@Base+0x1c8>
   221ac:	mov	r8, r0
   221ae:	cbnz	r0, 221f4 <btrfs_alloc_free_block@@Base+0x98>
   221b0:	ldr	r0, [pc, #528]	; (223c4 <btrfs_alloc_free_block@@Base+0x268>)
   221b2:	mvn.w	r4, #116	; 0x74
   221b6:	add	r0, pc
   221b8:	bl	16b70 <__btrfs_error@@Base>
   221bc:	ldr	r2, [pc, #520]	; (223c8 <btrfs_alloc_free_block@@Base+0x26c>)
   221be:	cmp	r4, #0
   221c0:	ldr	r1, [pc, #520]	; (223cc <btrfs_alloc_free_block@@Base+0x270>)
   221c2:	ldr	r0, [pc, #524]	; (223d0 <btrfs_alloc_free_block@@Base+0x274>)
   221c4:	add	r2, pc
   221c6:	ite	le
   221c8:	movle	r3, #0
   221ca:	movgt	r3, #1
   221cc:	addw	r2, r2, #683	; 0x2ab
   221d0:	str	r3, [sp, #0]
   221d2:	add	r1, pc
   221d4:	add	r0, pc
   221d6:	movw	r3, #2559	; 0x9ff
   221da:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   221de:	ldr	r2, [pc, #500]	; (223d4 <btrfs_alloc_free_block@@Base+0x278>)
   221e0:	ldr	r3, [pc, #476]	; (223c0 <btrfs_alloc_free_block@@Base+0x264>)
   221e2:	add	r2, pc
   221e4:	ldr	r3, [r2, r3]
   221e6:	ldr	r2, [r3, #0]
   221e8:	ldr	r3, [sp, #76]	; 0x4c
   221ea:	eors	r2, r3
   221ec:	beq.w	223b2 <btrfs_alloc_free_block@@Base+0x256>
   221f0:	blx	8510 <__stack_chk_fail@plt>
   221f4:	add	r3, sp, #56	; 0x38
   221f6:	mov.w	r2, #4294967295	; 0xffffffff
   221fa:	str	r3, [sp, #24]
   221fc:	mov.w	r3, #4294967295	; 0xffffffff
   22200:	strd	r2, r3, [sp, #16]
   22204:	mov	r1, r6
   22206:	ldrd	r2, r3, [sp, #136]	; 0x88
   2220a:	mov	r0, r7
   2220c:	str.w	fp, [sp, #28]
   22210:	strd	r2, r3, [sp, #8]
   22214:	ldrd	r2, r3, [sp, #144]	; 0x90
   22218:	strd	r2, r3, [sp]
   2221c:	mov	r2, r4
   2221e:	mov	r3, fp
   22220:	bl	21834 <btrfs_reserve_extent@@Base>
   22224:	subs	r4, r0, #0
   22226:	blt.n	221bc <btrfs_alloc_free_block@@Base+0x60>
   22228:	cmp.w	r9, #0
   2222c:	beq.w	22394 <btrfs_alloc_free_block@@Base+0x238>
   22230:	add.w	r2, r9, #16
   22234:	mov	r3, r5
   22236:	ldr.w	r1, [r9], #4
   2223a:	cmp	r9, r2
   2223c:	str.w	r1, [r3], #4
   22240:	bne.n	22236 <btrfs_alloc_free_block@@Base+0xda>
   22242:	ldrb.w	r2, [r9]
   22246:	strb	r2, [r3, #0]
   22248:	movs	r2, #0
   2224a:	movs	r3, #0
   2224c:	strd	r2, r3, [r5, #24]
   22250:	movs	r1, #0
   22252:	ldr	r3, [sp, #48]	; 0x30
   22254:	ldr	r2, [sp, #52]	; 0x34
   22256:	strb	r1, [r5, #20]
   22258:	lsrs	r3, r3, #8
   2225a:	strb.w	sl, [r5, #17]
   2225e:	orr.w	r3, r3, r2, lsl #24
   22262:	eor.w	r3, r3, #1
   22266:	and.w	r3, r3, #1
   2226a:	strb	r3, [r5, #18]
   2226c:	movs	r3, #1
   2226e:	strb	r3, [r5, #19]
   22270:	ldr.w	r3, [r6, #464]	; 0x1d0
   22274:	ldr.w	r4, [sp, #65]	; 0x41
   22278:	ldr.w	fp, [sp, #69]	; 0x45
   2227c:	ldr.w	r3, [r3, #308]	; 0x134
   22280:	ldr.w	r0, [r3, #188]	; 0xbc
   22284:	mov	r3, r1
   22286:	and.w	r2, r0, #256	; 0x100
   2228a:	orrs	r3, r2
   2228c:	beq.n	222a0 <btrfs_alloc_free_block@@Base+0x144>
   2228e:	mov	r2, sl
   22290:	str.w	sl, [sp, #65]	; 0x41
   22294:	asrs	r3, r2, #31
   22296:	str.w	r3, [sp, #69]	; 0x45
   2229a:	movs	r3, #169	; 0xa9
   2229c:	strb.w	r3, [sp, #64]	; 0x40
   222a0:	ldrd	r2, r3, [sp, #120]	; 0x78
   222a4:	cmp	r3, #0
   222a6:	it	eq
   222a8:	cmpeq	r2, #2
   222aa:	bne.n	222ea <btrfs_alloc_free_block@@Base+0x18e>
   222ac:	ldrd	r2, r3, [sp, #56]	; 0x38
   222b0:	movs	r1, #8
   222b2:	str	r1, [sp, #8]
   222b4:	adds	r1, r2, r4
   222b6:	adc.w	ip, r3, fp
   222ba:	adds.w	r1, r1, #4294967295	; 0xffffffff
   222be:	adc.w	r0, ip, #4294967295	; 0xffffffff
   222c2:	strd	r1, r0, [sp]
   222c6:	ldr	r1, [r7, #0]
   222c8:	add.w	r0, r1, #192	; 0xc0
   222cc:	bl	15fb0 <set_extent_bits@@Base>
   222d0:	ldr	r2, [pc, #260]	; (223d8 <btrfs_alloc_free_block@@Base+0x27c>)
   222d2:	ldr	r1, [pc, #264]	; (223dc <btrfs_alloc_free_block@@Base+0x280>)
   222d4:	movw	r3, #2530	; 0x9e2
   222d8:	add	r2, pc
   222da:	addw	r2, r2, #666	; 0x29a
   222de:	add	r1, pc
   222e0:	str	r0, [sp, #0]
   222e2:	ldr	r0, [pc, #252]	; (223e0 <btrfs_alloc_free_block@@Base+0x284>)
   222e4:	add	r0, pc
   222e6:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   222ea:	ldrd	r3, r2, [r8, #32]
   222ee:	mov.w	r9, #0
   222f2:	mov	r1, r7
   222f4:	adds	r3, r3, r4
   222f6:	adc.w	r2, r2, fp
   222fa:	strd	r3, r2, [r8, #32]
   222fe:	movs	r3, #0
   22300:	strd	r3, r3, [sp, #36]	; 0x24
   22304:	movs	r3, #3
   22306:	strd	sl, r3, [sp, #24]
   2230a:	ldrd	r2, r3, [sp, #120]	; 0x78
   2230e:	mov.w	r8, #0
   22312:	strd	r4, fp, [sp]
   22316:	ldr.w	r0, [r6, #464]	; 0x1d0
   2231a:	strd	r2, r3, [sp, #16]
   2231e:	str	r5, [sp, #32]
   22320:	ldrd	r2, r3, [sp, #56]	; 0x38
   22324:	strd	r8, r9, [sp, #8]
   22328:	bl	235ec <btrfs_add_delayed_tree_ref@@Base>
   2232c:	mov	r4, r0
   2232e:	cmp	r0, #0
   22330:	bne.w	221bc <btrfs_alloc_free_block@@Base+0x60>
   22334:	ldrd	r2, r3, [sp, #56]	; 0x38
   22338:	ldr.w	r0, [r6, #464]	; 0x1d0
   2233c:	bl	1b926 <btrfs_find_create_tree_block@@Base>
   22340:	mov	r4, r0
   22342:	cbnz	r0, 223a6 <btrfs_alloc_free_block@@Base+0x24a>
   22344:	ldr.w	r2, [r6, #447]	; 0x1bf
   22348:	mov	r1, r6
   2234a:	ldr.w	r3, [r6, #451]	; 0x1c3
   2234e:	mov.w	fp, sl, asr #31
   22352:	mov	r0, r7
   22354:	strd	r8, r9, [sp, #32]
   22358:	strd	sl, fp, [sp, #24]
   2235c:	strd	r2, r3, [sp, #16]
   22360:	ldr.w	r2, [sp, #65]	; 0x41
   22364:	ldr.w	r3, [sp, #69]	; 0x45
   22368:	strd	r8, r9, [sp, #8]
   2236c:	strd	r2, r3, [sp]
   22370:	ldrd	r2, r3, [sp, #56]	; 0x38
   22374:	bl	20344 <btrfs_free_extent@@Base>
   22378:	ldr	r2, [pc, #104]	; (223e4 <btrfs_alloc_free_block@@Base+0x288>)
   2237a:	ldr	r1, [pc, #108]	; (223e8 <btrfs_alloc_free_block@@Base+0x28c>)
   2237c:	movs	r3, #1
   2237e:	ldr	r0, [pc, #108]	; (223ec <btrfs_alloc_free_block@@Base+0x290>)
   22380:	add	r2, pc
   22382:	str	r3, [sp, #0]
   22384:	addw	r2, r2, #683	; 0x2ab
   22388:	add	r1, pc
   2238a:	add	r0, pc
   2238c:	movw	r3, #2567	; 0xa07
   22390:	bl	1dfec <btrfs_create_tree@@Base+0x578>
   22394:	movs	r2, #17
   22396:	mov	r1, r9
   22398:	mov	r0, r5
   2239a:	blx	87c4 <memset@plt+0x4>
   2239e:	b.n	22248 <btrfs_alloc_free_block@@Base+0xec>
   223a0:	mvn.w	r4, #11
   223a4:	b.n	221bc <btrfs_alloc_free_block@@Base+0x60>
   223a6:	bl	1cd70 <btrfs_set_buffer_uptodate@@Base>
   223aa:	ldr	r3, [r7, #52]	; 0x34
   223ac:	adds	r3, #1
   223ae:	str	r3, [r7, #52]	; 0x34
   223b0:	b.n	221de <btrfs_alloc_free_block@@Base+0x82>
   223b2:	mov	r0, r4
   223b4:	add	sp, #84	; 0x54
   223b6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   223ba:	nop
   223bc:	adds	r2, r3, #0
   223be:	movs	r4, r0
   223c0:	lsls	r0, r4, #8
   223c2:	movs	r0, r0
   223c4:	add	r7, sp, #780	; 0x30c
   223c6:	movs	r1, r0
   223c8:	sub	sp, #376	; 0x178
   223ca:	movs	r1, r0
   223cc:	add	r1, sp, #636	; 0x27c
   223ce:	movs	r1, r0
   223d0:	ldr	r3, [sp, #580]	; 0x244
   223d2:	movs	r1, r0
   223d4:	subs	r2, r4, r6
   223d6:	movs	r4, r0
   223d8:	add	r7, sp, #808	; 0x328
   223da:	movs	r1, r0
   223dc:	add	r0, sp, #588	; 0x24c
   223de:	movs	r1, r0
   223e0:	strb	r0, [r0, #8]
   223e2:	movs	r1, r0
   223e4:	add	r7, sp, #136	; 0x88
   223e6:	movs	r1, r0
   223e8:	add	r7, pc, #932	; (adr r7, 22790 <btrfs_run_delayed_refs@@Base+0x1b4>)
   223ea:	movs	r1, r0
   223ec:	add	r3, sp, #284	; 0x11c
   223ee:	movs	r1, r0

000223f0 <add_new_free_space@@Base>:
   223f0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   223f4:	mov	r4, r2
   223f6:	ldr	r2, [pc, #260]	; (224fc <add_new_free_space@@Base+0x10c>)
   223f8:	mov	r5, r3
   223fa:	ldr	r3, [pc, #260]	; (22500 <add_new_free_space@@Base+0x110>)
   223fc:	sub	sp, #44	; 0x2c
   223fe:	add	r2, pc
   22400:	ldr.w	sl, [pc, #256]	; 22504 <add_new_free_space@@Base+0x114>
   22404:	ldr.w	fp, [pc, #256]	; 22508 <add_new_free_space@@Base+0x118>
   22408:	movs	r6, #0
   2240a:	ldr	r3, [r2, r3]
   2240c:	add	sl, pc
   2240e:	addw	sl, sl, #706	; 0x2c2
   22412:	add	fp, pc
   22414:	ldr	r3, [r3, #0]
   22416:	str	r3, [sp, #36]	; 0x24
   22418:	mov.w	r3, #0
   2241c:	mov	r8, r0
   2241e:	mov	r9, r1
   22420:	mov	r7, r6
   22422:	ldrd	r2, r3, [sp, #80]	; 0x50
   22426:	cmp	r5, r3
   22428:	it	eq
   2242a:	cmpeq	r4, r2
   2242c:	bcc.n	22442 <add_new_free_space@@Base+0x52>
   2242e:	ldr	r2, [pc, #220]	; (2250c <add_new_free_space@@Base+0x11c>)
   22430:	ldr	r3, [pc, #204]	; (22500 <add_new_free_space@@Base+0x110>)
   22432:	add	r2, pc
   22434:	ldr	r3, [r2, r3]
   22436:	ldr	r2, [r3, #0]
   22438:	ldr	r3, [sp, #36]	; 0x24
   2243a:	eors	r2, r3
   2243c:	beq.n	224f2 <add_new_free_space@@Base+0x102>
   2243e:	blx	8510 <__stack_chk_fail@plt>
   22442:	movs	r3, #5
   22444:	add.w	r0, r9, #160	; 0xa0
   22448:	str	r3, [sp, #8]
   2244a:	mov	r2, r4
   2244c:	add	r3, sp, #24
   2244e:	str	r3, [sp, #4]
   22450:	add	r3, sp, #16
   22452:	str	r3, [sp, #0]
   22454:	mov	r3, r5
   22456:	bl	1620c <find_first_extent_bit@@Base>
   2245a:	cbnz	r0, 224b6 <add_new_free_space@@Base+0xc6>
   2245c:	ldrd	r2, r3, [sp, #16]
   22460:	cmp	r5, r3
   22462:	it	eq
   22464:	cmpeq	r4, r2
   22466:	mov	r0, r2
   22468:	mov	r1, r3
   2246a:	bcc.n	22478 <add_new_free_space@@Base+0x88>
   2246c:	ldr	r3, [sp, #24]
   2246e:	adds	r4, r3, #1
   22470:	ldr	r3, [sp, #28]
   22472:	adc.w	r5, r3, #0
   22476:	b.n	22422 <add_new_free_space@@Base+0x32>
   22478:	ldrd	r2, r3, [sp, #80]	; 0x50
   2247c:	ldr.w	ip, [r8, #64]	; 0x40
   22480:	cmp	r1, r3
   22482:	it	eq
   22484:	cmpeq	r0, r2
   22486:	bcs.n	224b6 <add_new_free_space@@Base+0xc6>
   22488:	subs	r2, r0, r4
   2248a:	mov	r0, ip
   2248c:	sbc.w	r3, r1, r5
   22490:	adds	r6, r6, r2
   22492:	strd	r2, r3, [sp]
   22496:	adc.w	r7, r3, r7
   2249a:	mov	r2, r4
   2249c:	mov	r3, r5
   2249e:	bl	26312 <btrfs_add_free_space@@Base>
   224a2:	movw	r3, #3693	; 0xe6d
   224a6:	mov	r2, sl
   224a8:	mov	r1, fp
   224aa:	str	r0, [sp, #0]
   224ac:	ldr	r0, [pc, #96]	; (22510 <add_new_free_space@@Base+0x120>)
   224ae:	add	r0, pc
   224b0:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   224b4:	b.n	2246c <add_new_free_space@@Base+0x7c>
   224b6:	ldr	r3, [sp, #80]	; 0x50
   224b8:	ldr	r2, [sp, #84]	; 0x54
   224ba:	subs	r3, r3, r4
   224bc:	ldr.w	r0, [r8, #64]	; 0x40
   224c0:	sbc.w	r2, r2, r5
   224c4:	adds	r6, r6, r3
   224c6:	strd	r3, r2, [sp]
   224ca:	adc.w	r7, r2, r7
   224ce:	mov	r3, r5
   224d0:	mov	r2, r4
   224d2:	bl	26312 <btrfs_add_free_space@@Base>
   224d6:	ldr	r2, [pc, #60]	; (22514 <add_new_free_space@@Base+0x124>)
   224d8:	ldr	r1, [pc, #60]	; (22518 <add_new_free_space@@Base+0x128>)
   224da:	movw	r3, #3705	; 0xe79
   224de:	add	r2, pc
   224e0:	addw	r2, r2, #706	; 0x2c2
   224e4:	add	r1, pc
   224e6:	str	r0, [sp, #0]
   224e8:	ldr	r0, [pc, #48]	; (2251c <add_new_free_space@@Base+0x12c>)
   224ea:	add	r0, pc
   224ec:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   224f0:	b.n	2242e <add_new_free_space@@Base+0x3e>
   224f2:	mov	r0, r6
   224f4:	mov	r1, r7
   224f6:	add	sp, #44	; 0x2c
   224f8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   224fc:	adds	r6, r0, r6
   224fe:	movs	r4, r0
   22500:	lsls	r0, r4, #8
   22502:	movs	r0, r0
   22504:	add	r6, sp, #600	; 0x258
   22506:	movs	r1, r0
   22508:	add	r7, pc, #380	; (adr r7, 22688 <btrfs_run_delayed_refs@@Base+0xac>)
   2250a:	movs	r1, r0
   2250c:	adds	r2, r2, r5
   2250e:	movs	r4, r0
   22510:	strb	r6, [r6, #0]
   22512:	movs	r1, r0
   22514:	add	r5, sp, #784	; 0x310
   22516:	movs	r1, r0
   22518:	add	r6, pc, #564	; (adr r6, 22750 <btrfs_run_delayed_refs@@Base+0x174>)
   2251a:	movs	r1, r0
   2251c:	ldr	r2, [r7, #124]	; 0x7c
   2251e:	movs	r1, r0

00022520 <cleanup_ref_head@@Base>:
   22520:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   22522:	mov	r5, r0
   22524:	ldr	r0, [r2, #48]	; 0x30
   22526:	mov	r7, r1
   22528:	mov	r4, r2
   2252a:	cbz	r0, 22534 <cleanup_ref_head@@Base+0x14>
   2252c:	movs	r3, #0
   2252e:	str	r3, [r2, #48]	; 0x30
   22530:	blx	8434 <free@plt+0x4>
   22534:	ldr	r3, [r4, #24]
   22536:	cmp	r3, #0
   22538:	bne.n	225d0 <cleanup_ref_head@@Base+0xb0>
   2253a:	ldr	r3, [r4, #48]	; 0x30
   2253c:	cmp	r3, #0
   2253e:	bne.n	225d0 <cleanup_ref_head@@Base+0xb0>
   22540:	ldr	r3, [r5, #72]	; 0x48
   22542:	add.w	r6, r4, #36	; 0x24
   22546:	add.w	r1, r5, #64	; 0x40
   2254a:	subs	r3, #1
   2254c:	mov	r0, r6
   2254e:	str	r3, [r5, #72]	; 0x48
   22550:	bl	132c4 <rb_erase@@Base>
   22554:	ldrb.w	r3, [r4, #60]	; 0x3c
   22558:	str	r6, [r4, #36]	; 0x24
   2255a:	lsls	r2, r3, #31
   2255c:	bpl.n	225aa <cleanup_ref_head@@Base+0x8a>
   2255e:	ldrd	r2, r3, [r4, #8]
   22562:	mov	r0, r7
   22564:	strd	r2, r3, [sp]
   22568:	ldrd	r2, r3, [r4]
   2256c:	bl	2032c <btrfs_pin_extent@@Base>
   22570:	ldrb.w	r3, [r4, #60]	; 0x3c
   22574:	lsls	r3, r3, #30
   22576:	bmi.n	225aa <cleanup_ref_head@@Base+0x8a>
   22578:	ldr	r0, [r5, #0]
   2257a:	movs	r2, #4
   2257c:	movs	r3, #0
   2257e:	bl	1dc3c <btrfs_create_tree@@Base+0x1c8>
   22582:	cbnz	r0, 22598 <cleanup_ref_head@@Base+0x78>
   22584:	ldr	r1, [pc, #76]	; (225d4 <cleanup_ref_head@@Base+0xb4>)
   22586:	movw	r2, #3758	; 0xeae
   2258a:	ldr	r0, [pc, #76]	; (225d8 <cleanup_ref_head@@Base+0xb8>)
   2258c:	add	r1, pc
   2258e:	addw	r1, r1, #725	; 0x2d5
   22592:	add	r0, pc
   22594:	bl	1e4ec <btrfs_create_tree@@Base+0xa78>
   22598:	ldrd	r3, r2, [r0, #32]
   2259c:	ldrd	r1, r5, [r4, #8]
   225a0:	subs	r3, r3, r1
   225a2:	sbc.w	r2, r2, r5
   225a6:	strd	r3, r2, [r0, #32]
   225aa:	ldrd	r2, r3, [r4, #16]
   225ae:	adds.w	r0, r2, #4294967295	; 0xffffffff
   225b2:	adc.w	r1, r3, #4294967295	; 0xffffffff
   225b6:	cmp	r3, #0
   225b8:	it	eq
   225ba:	cmpeq	r2, #1
   225bc:	beq.n	225c8 <cleanup_ref_head@@Base+0xa8>
   225be:	strd	r0, r1, [r4, #16]
   225c2:	movs	r0, #0
   225c4:	add	sp, #12
   225c6:	pop	{r4, r5, r6, r7, pc}
   225c8:	mov	r0, r4
   225ca:	blx	8434 <free@plt+0x4>
   225ce:	b.n	225c2 <cleanup_ref_head@@Base+0xa2>
   225d0:	movs	r0, #1
   225d2:	b.n	225c4 <cleanup_ref_head@@Base+0xa4>
   225d4:	add	r5, sp, #88	; 0x58
   225d6:	movs	r1, r0
   225d8:	add	r4, sp, #100	; 0x64
   225da:	movs	r1, r0

000225dc <btrfs_run_delayed_refs@@Base>:
   225dc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   225e0:	mov	sl, r0
   225e2:	vpush	{d8}
   225e6:	movs	r6, #0
   225e8:	ldr	r2, [pc, #736]	; (228cc <btrfs_run_delayed_refs@@Base+0x2f0>)
   225ea:	ldr	r3, [pc, #740]	; (228d0 <btrfs_run_delayed_refs@@Base+0x2f4>)
   225ec:	add	r2, pc
   225ee:	sub	sp, #132	; 0x84
   225f0:	ldr	r3, [r2, r3]
   225f2:	mov	r2, r0
   225f4:	ldr	r3, [r3, #0]
   225f6:	str	r3, [sp, #124]	; 0x7c
   225f8:	mov.w	r3, #0
   225fc:	ldr.w	r3, [r2], #64
   22600:	vmov	s16, r3
   22604:	ldr	r3, [pc, #716]	; (228d4 <btrfs_run_delayed_refs@@Base+0x2f8>)
   22606:	str	r2, [sp, #72]	; 0x48
   22608:	add	r3, pc
   2260a:	str	r3, [sp, #68]	; 0x44
   2260c:	add.w	r3, r3, #784	; 0x310
   22610:	vmov	s17, r3
   22614:	cbnz	r6, 22624 <btrfs_run_delayed_refs@@Base+0x48>
   22616:	mov	r0, sl
   22618:	bl	23534 <btrfs_select_ref_head@@Base>
   2261c:	mov	r6, r0
   2261e:	cmp	r0, #0
   22620:	beq.w	22b16 <btrfs_run_delayed_refs@@Base+0x53a>
   22624:	ldr	r1, [sp, #72]	; 0x48
   22626:	mov	r2, r6
   22628:	mov	r0, sl
   2262a:	bl	23420 <btrfs_merge_delayed_refs@@Base>
   2262e:	ldr	r3, [r6, #24]
   22630:	cmp	r3, #0
   22632:	beq.w	22754 <btrfs_run_delayed_refs@@Base+0x178>
   22636:	ldr	r4, [r6, #28]
   22638:	add.w	r3, r6, #28
   2263c:	add.w	r1, r6, #24
   22640:	cmp	r4, r3
   22642:	beq.n	2272a <btrfs_run_delayed_refs@@Base+0x14e>
   22644:	subs	r4, #12
   22646:	ldrb.w	r3, [r4, #62]	; 0x3e
   2264a:	mov	r0, r4
   2264c:	bfc	r3, #1, #1
   22650:	strb.w	r3, [r4, #62]	; 0x3e
   22654:	bl	132c4 <rb_erase@@Base>
   22658:	mov	r3, r4
   2265a:	str	r4, [r4, #0]
   2265c:	ldr.w	r2, [r3, #12]!
   22660:	cmp	r2, r3
   22662:	beq.n	22672 <btrfs_run_delayed_refs@@Base+0x96>
   22664:	ldr	r3, [r4, #16]
   22666:	str	r3, [r2, #4]
   22668:	str	r2, [r3, #0]
   2266a:	ldr	r2, [pc, #600]	; (228c4 <btrfs_run_delayed_refs@@Base+0x2e8>)
   2266c:	ldr	r3, [pc, #600]	; (228c8 <btrfs_run_delayed_refs@@Base+0x2ec>)
   2266e:	strd	r2, r3, [r4, #12]
   22672:	ldrb.w	r3, [r4, #60]	; 0x3c
   22676:	cmp	r3, #2
   22678:	beq.n	22768 <btrfs_run_delayed_refs@@Base+0x18c>
   2267a:	and.w	r3, r3, #253	; 0xfd
   2267e:	cmp	r3, #1
   22680:	bne.n	22770 <btrfs_run_delayed_refs@@Base+0x194>
   22682:	ldr	r3, [r6, #56]	; 0x38
   22684:	ldr	r2, [r4, #56]	; 0x38
   22686:	subs	r3, r3, r2
   22688:	str	r3, [r6, #56]	; 0x38
   2268a:	ldrb.w	r3, [r6, #60]	; 0x3c
   2268e:	ldr.w	fp, [r6, #48]	; 0x30
   22692:	and.w	r2, r3, #1
   22696:	bfc	r3, #0, #1
   2269a:	strb.w	r3, [r6, #60]	; 0x3c
   2269e:	movs	r3, #0
   226a0:	str	r3, [r6, #48]	; 0x30
   226a2:	ldrb.w	r3, [r4, #61]	; 0x3d
   226a6:	cmp	r3, #176	; 0xb0
   226a8:	beq.n	2278e <btrfs_run_delayed_refs@@Base+0x1b2>
   226aa:	cmp	r3, #182	; 0xb6
   226ac:	bne.w	22af4 <btrfs_run_delayed_refs@@Base+0x518>
   226b0:	ldrd	r0, r1, [r4, #72]	; 0x48
   226b4:	ldr	r3, [r4, #56]	; 0x38
   226b6:	ldrd	r8, r9, [r4, #64]	; 0x40
   226ba:	cmp	r3, #1
   226bc:	ldrb.w	r5, [r4, #60]	; 0x3c
   226c0:	beq.n	22794 <btrfs_run_delayed_refs@@Base+0x1b8>
   226c2:	strd	r0, r1, [sp, #16]
   226c6:	movs	r0, #1
   226c8:	ldr	r1, [pc, #524]	; (228d8 <btrfs_run_delayed_refs@@Base+0x2fc>)
   226ca:	strd	r3, r5, [sp]
   226ce:	mvn.w	r5, #4
   226d2:	strd	r8, r9, [sp, #8]
   226d6:	add	r1, pc
   226d8:	ldrd	r2, r3, [r4, #24]
   226dc:	blx	8838 <__printf_chk@plt+0x4>
   226e0:	cmp.w	fp, #0
   226e4:	bne.w	22b0e <btrfs_run_delayed_refs@@Base+0x532>
   226e8:	ldrb.w	r3, [sl, #32]
   226ec:	cbz	r3, 226f8 <btrfs_run_delayed_refs@@Base+0x11c>
   226ee:	ldrb.w	r3, [r4, #60]	; 0x3c
   226f2:	cmp	r3, #2
   226f4:	beq.w	22a82 <btrfs_run_delayed_refs@@Base+0x4a6>
   226f8:	ldrb.w	r3, [r6, #60]	; 0x3c
   226fc:	mov	r0, r4
   226fe:	bfc	r3, #3, #1
   22702:	strb.w	r3, [r6, #60]	; 0x3c
   22706:	ldr.w	r3, [sl, #76]	; 0x4c
   2270a:	adds	r3, #1
   2270c:	str.w	r3, [sl, #76]	; 0x4c
   22710:	bl	1e2e8 <btrfs_create_tree@@Base+0x874>
   22714:	ldr	r2, [pc, #452]	; (228dc <btrfs_run_delayed_refs@@Base+0x300>)
   22716:	ldr	r3, [pc, #440]	; (228d0 <btrfs_run_delayed_refs@@Base+0x2f4>)
   22718:	add	r2, pc
   2271a:	ldr	r3, [r2, r3]
   2271c:	ldr	r2, [r3, #0]
   2271e:	ldr	r3, [sp, #124]	; 0x7c
   22720:	eors	r2, r3
   22722:	beq.w	22b1a <btrfs_run_delayed_refs@@Base+0x53e>
   22726:	blx	8510 <__stack_chk_fail@plt>
   2272a:	mov	r0, r1
   2272c:	str	r1, [sp, #64]	; 0x40
   2272e:	bl	1353a <rb_first@@Base>
   22732:	ldr	r1, [sp, #64]	; 0x40
   22734:	ldr	r2, [r0, #12]
   22736:	add.w	r3, r0, #12
   2273a:	mov	r4, r0
   2273c:	cmp	r2, r3
   2273e:	beq.n	22646 <btrfs_run_delayed_refs@@Base+0x6a>
   22740:	ldr	r1, [pc, #412]	; (228e0 <btrfs_run_delayed_refs@@Base+0x304>)
   22742:	movw	r2, #3786	; 0xeca
   22746:	ldr	r0, [pc, #412]	; (228e4 <btrfs_run_delayed_refs@@Base+0x308>)
   22748:	add	r1, pc
   2274a:	addw	r1, r1, #742	; 0x2e6
   2274e:	add	r0, pc
   22750:	bl	1e4ec <btrfs_create_tree@@Base+0xa78>
   22754:	vmov	r1, s16
   22758:	mov	r2, r6
   2275a:	mov	r0, sl
   2275c:	bl	22520 <cleanup_ref_head@@Base>
   22760:	cmp	r0, #0
   22762:	bgt.w	22614 <btrfs_run_delayed_refs@@Base+0x38>
   22766:	b.n	22616 <btrfs_run_delayed_refs@@Base+0x3a>
   22768:	ldr	r3, [r6, #56]	; 0x38
   2276a:	ldr	r2, [r4, #56]	; 0x38
   2276c:	add	r3, r2
   2276e:	b.n	22688 <btrfs_run_delayed_refs@@Base+0xac>
   22770:	ldr	r2, [pc, #372]	; (228e8 <btrfs_run_delayed_refs@@Base+0x30c>)
   22772:	movs	r3, #1
   22774:	ldr	r1, [pc, #372]	; (228ec <btrfs_run_delayed_refs@@Base+0x310>)
   22776:	ldr	r0, [pc, #376]	; (228f0 <btrfs_run_delayed_refs@@Base+0x314>)
   22778:	add	r2, pc
   2277a:	str	r3, [sp, #0]
   2277c:	addw	r2, r2, #761	; 0x2f9
   22780:	add	r1, pc
   22782:	add	r0, pc
   22784:	movw	r3, #3910	; 0xf46
   22788:	bl	1dd92 <btrfs_create_tree@@Base+0x31e>
   2278c:	b.n	2268a <btrfs_run_delayed_refs@@Base+0xae>
   2278e:	movs	r0, #0
   22790:	movs	r1, #0
   22792:	b.n	226b4 <btrfs_run_delayed_refs@@Base+0xd8>
   22794:	cmp	r5, #1
   22796:	bne.w	22aa2 <btrfs_run_delayed_refs@@Base+0x4c6>
   2279a:	cmp	r2, #0
   2279c:	beq.w	22ad8 <btrfs_run_delayed_refs@@Base+0x4fc>
   227a0:	cmp.w	fp, #0
   227a4:	beq.n	227ae <btrfs_run_delayed_refs@@Base+0x1d2>
   227a6:	ldrb.w	r3, [fp, #19]
   227aa:	eor.w	r3, r3, #1
   227ae:	ldr	r1, [pc, #324]	; (228f4 <btrfs_run_delayed_refs@@Base+0x318>)
   227b0:	ldr	r0, [pc, #324]	; (228f8 <btrfs_run_delayed_refs@@Base+0x31c>)
   227b2:	vmov	r2, s17
   227b6:	add	r1, pc
   227b8:	add	r0, pc
   227ba:	str	r3, [sp, #0]
   227bc:	movw	r3, #3815	; 0xee7
   227c0:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   227c4:	ldr.w	r7, [sl]
   227c8:	movs	r2, #4
   227ca:	ldr.w	r3, [r7, #308]	; 0x134
   227ce:	mov	r0, r7
   227d0:	ldr.w	r3, [r3, #188]	; 0xbc
   227d4:	and.w	r3, r3, #256	; 0x100
   227d8:	str	r3, [sp, #40]	; 0x28
   227da:	movs	r3, #0
   227dc:	str	r3, [sp, #44]	; 0x2c
   227de:	movs	r3, #0
   227e0:	bl	1dc3c <btrfs_create_tree@@Base+0x1c8>
   227e4:	str	r0, [sp, #64]	; 0x40
   227e6:	cbnz	r0, 227f8 <btrfs_run_delayed_refs@@Base+0x21c>
   227e8:	ldr	r3, [sp, #68]	; 0x44
   227ea:	movw	r2, #2398	; 0x95e
   227ee:	ldr	r0, [pc, #268]	; (228fc <btrfs_run_delayed_refs@@Base+0x320>)
   227f0:	addw	r1, r3, #805	; 0x325
   227f4:	add	r0, pc
   227f6:	b.n	22750 <btrfs_run_delayed_refs@@Base+0x174>
   227f8:	ldrd	r0, r1, [sp, #40]	; 0x28
   227fc:	add.w	r5, sp, #113	; 0x71
   22800:	ldrd	r2, r3, [r4, #24]
   22804:	orrs	r1, r0
   22806:	strd	r2, r3, [sp, #104]	; 0x68
   2280a:	beq.n	22856 <btrfs_run_delayed_refs@@Base+0x27a>
   2280c:	ldr.w	ip, [r4, #80]	; 0x50
   22810:	mov	r0, ip
   22812:	str.w	ip, [sp, #113]	; 0x71
   22816:	asrs	r1, r0, #31
   22818:	str	r1, [r5, #4]
   2281a:	movs	r5, #33	; 0x21
   2281c:	movs	r1, #169	; 0xa9
   2281e:	strb.w	r1, [sp, #112]	; 0x70
   22822:	cmp.w	r9, #0
   22826:	it	eq
   22828:	cmpeq.w	r8, #2
   2282c:	bne.n	22918 <btrfs_run_delayed_refs@@Base+0x33c>
   2282e:	movs	r1, #8
   22830:	add.w	r0, r7, #192	; 0xc0
   22834:	str	r1, [sp, #8]
   22836:	add	r1, sp, #96	; 0x60
   22838:	str	r1, [sp, #4]
   2283a:	add	r1, sp, #88	; 0x58
   2283c:	str	r1, [sp, #0]
   2283e:	bl	1620c <find_first_extent_bit@@Base>
   22842:	cbz	r0, 2286a <btrfs_run_delayed_refs@@Base+0x28e>
   22844:	ldr	r1, [pc, #184]	; (22900 <btrfs_run_delayed_refs@@Base+0x324>)
   22846:	movw	r2, #2415	; 0x96f
   2284a:	ldr	r0, [pc, #184]	; (22904 <btrfs_run_delayed_refs@@Base+0x328>)
   2284c:	add	r1, pc
   2284e:	addw	r1, r1, #805	; 0x325
   22852:	add	r0, pc
   22854:	b.n	22750 <btrfs_run_delayed_refs@@Base+0x174>
   22856:	ldr	r1, [r4, #32]
   22858:	str.w	r1, [sp, #113]	; 0x71
   2285c:	ldr	r1, [r4, #36]	; 0x24
   2285e:	str	r1, [r5, #4]
   22860:	movs	r1, #168	; 0xa8
   22862:	movs	r5, #51	; 0x33
   22864:	strb.w	r1, [sp, #112]	; 0x70
   22868:	b.n	22822 <btrfs_run_delayed_refs@@Base+0x246>
   2286a:	ldrd	r0, r1, [r4, #24]
   2286e:	ldrd	r2, r3, [sp, #88]	; 0x58
   22872:	cmp	r1, r3
   22874:	it	eq
   22876:	cmpeq	r0, r2
   22878:	beq.n	2288c <btrfs_run_delayed_refs@@Base+0x2b0>
   2287a:	ldr	r1, [pc, #140]	; (22908 <btrfs_run_delayed_refs@@Base+0x32c>)
   2287c:	mov.w	r2, #2416	; 0x970
   22880:	ldr	r0, [pc, #136]	; (2290c <btrfs_run_delayed_refs@@Base+0x330>)
   22882:	add	r1, pc
   22884:	addw	r1, r1, #805	; 0x325
   22888:	add	r0, pc
   2288a:	b.n	22750 <btrfs_run_delayed_refs@@Base+0x174>
   2288c:	ldrd	r3, r2, [r4, #32]
   22890:	adds	r3, r0, r3
   22892:	adc.w	r2, r1, r2
   22896:	adds.w	r3, r3, #4294967295	; 0xffffffff
   2289a:	str	r3, [sp, #56]	; 0x38
   2289c:	adc.w	r3, r2, #4294967295	; 0xffffffff
   228a0:	str	r3, [sp, #60]	; 0x3c
   228a2:	ldrd	r0, r1, [sp, #56]	; 0x38
   228a6:	ldrd	r2, r3, [sp, #96]	; 0x60
   228aa:	cmp	r1, r3
   228ac:	it	eq
   228ae:	cmpeq	r0, r2
   228b0:	beq.n	22918 <btrfs_run_delayed_refs@@Base+0x33c>
   228b2:	ldr	r1, [pc, #92]	; (22910 <btrfs_run_delayed_refs@@Base+0x334>)
   228b4:	movw	r2, #2417	; 0x971
   228b8:	ldr	r0, [pc, #88]	; (22914 <btrfs_run_delayed_refs@@Base+0x338>)
   228ba:	add	r1, pc
   228bc:	addw	r1, r1, #805	; 0x325
   228c0:	add	r0, pc
   228c2:	b.n	22750 <btrfs_run_delayed_refs@@Base+0x174>
   228c4:	lsls	r0, r0, #4
   228c6:	movs	r0, r2
   228c8:	lsls	r0, r0, #8
   228ca:	movs	r0, r4
   228cc:	asrs	r0, r3, #30
   228ce:	movs	r4, r0
   228d0:	lsls	r0, r4, #8
   228d2:	movs	r0, r0
   228d4:	add	r4, sp, #616	; 0x268
   228d6:	movs	r1, r0
   228d8:	add	r2, sp, #984	; 0x3d8
   228da:	movs	r1, r0
   228dc:	asrs	r4, r5, #25
   228de:	movs	r4, r0
   228e0:	add	r3, sp, #360	; 0x168
   228e2:	movs	r1, r0
   228e4:	add	r2, sp, #396	; 0x18c
   228e6:	movs	r1, r0
   228e8:	add	r3, sp, #168	; 0xa8
   228ea:	movs	r1, r0
   228ec:	add	r3, pc, #964	; (adr r3, 22cb4 <btrfs_fix_block_accounting@@Base+0x168>)
   228ee:	movs	r1, r0
   228f0:	add	r7, pc, #316	; (adr r7, 22a30 <btrfs_run_delayed_refs@@Base+0x454>)
   228f2:	movs	r1, r0
   228f4:	add	r3, pc, #748	; (adr r3, 22be4 <btrfs_fix_block_accounting@@Base+0x98>)
   228f6:	movs	r1, r0
   228f8:	add	r2, sp, #428	; 0x1ac
   228fa:	movs	r1, r0
   228fc:	add	r1, sp, #732	; 0x2dc
   228fe:	movs	r1, r0
   22900:	add	r2, sp, #344	; 0x158
   22902:	movs	r1, r0
   22904:	ldr	r1, [r2, #72]	; 0x48
   22906:	movs	r1, r0
   22908:	add	r2, sp, #128	; 0x80
   2290a:	movs	r1, r0
   2290c:	add	r1, sp, #776	; 0x308
   2290e:	movs	r1, r0
   22910:	add	r1, sp, #928	; 0x3a0
   22912:	movs	r1, r0
   22914:	add	r1, sp, #640	; 0x280
   22916:	movs	r1, r0
   22918:	bl	17544 <btrfs_alloc_path@@Base>
   2291c:	mov	r8, r0
   2291e:	cmp	r0, #0
   22920:	beq.w	22a9c <btrfs_run_delayed_refs@@Base+0x4c0>
   22924:	ldr	r1, [r7, #24]
   22926:	movs	r3, #1
   22928:	mov	r2, r0
   2292a:	str	r3, [sp, #4]
   2292c:	mov	r0, sl
   2292e:	add	r3, sp, #84	; 0x54
   22930:	str	r3, [sp, #0]
   22932:	add	r3, sp, #104	; 0x68
   22934:	str	r5, [sp, #84]	; 0x54
   22936:	bl	1a700 <btrfs_insert_empty_items@@Base>
   2293a:	mov	r5, r0
   2293c:	cmp	r0, #0
   2293e:	bne.w	22a76 <btrfs_run_delayed_refs@@Base+0x49a>
   22942:	ldr.w	r0, [r8]
   22946:	movs	r2, #25
   22948:	ldr.w	r3, [r8, #32]
   2294c:	mov.w	r1, #1
   22950:	add.w	r9, r0, #96	; 0x60
   22954:	mla	r3, r2, r3, r9
   22958:	ldr.w	r3, [r3, #118]	; 0x76
   2295c:	add.w	r2, r3, #101	; 0x65
   22960:	str	r3, [sp, #48]	; 0x30
   22962:	add.w	r3, r9, r2
   22966:	strb.w	r1, [r9, r2]
   2296a:	strb	r5, [r3, #1]
   2296c:	strb	r5, [r3, #2]
   2296e:	strb	r5, [r3, #3]
   22970:	strb	r5, [r3, #4]
   22972:	strb	r5, [r3, #5]
   22974:	strb	r5, [r3, #6]
   22976:	strb	r5, [r3, #7]
   22978:	ldrd	r1, r2, [sl, #8]
   2297c:	str	r1, [r3, #8]
   2297e:	str	r2, [r3, #12]
   22980:	ldrd	r2, r1, [fp, #24]
   22984:	orr.w	r2, r2, #2
   22988:	str	r2, [r3, #16]
   2298a:	str	r1, [r3, #20]
   2298c:	ldr	r3, [sp, #48]	; 0x30
   2298e:	add.w	r5, r3, #125	; 0x7d
   22992:	ldrd	r2, r3, [sp, #40]	; 0x28
   22996:	orrs	r3, r2
   22998:	bne.n	229b2 <btrfs_run_delayed_refs@@Base+0x3d6>
   2299a:	movs	r3, #17
   2299c:	mov	r2, r5
   2299e:	mov	r1, fp
   229a0:	str	r0, [sp, #76]	; 0x4c
   229a2:	bl	16a24 <write_extent_buffer@@Base>
   229a6:	ldr	r3, [r4, #80]	; 0x50
   229a8:	add	r5, r9
   229aa:	ldr	r0, [sp, #76]	; 0x4c
   229ac:	strb	r3, [r5, #17]
   229ae:	ldr	r5, [sp, #48]	; 0x30
   229b0:	adds	r5, #143	; 0x8f
   229b2:	movs	r2, #176	; 0xb0
   229b4:	strb.w	r2, [r9, r5]
   229b8:	ldrd	r1, r2, [r4, #64]	; 0x40
   229bc:	add.w	r3, r9, r5
   229c0:	str.w	r1, [r3, #1]
   229c4:	str.w	r2, [r3, #5]
   229c8:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   229cc:	mov	r0, r8
   229ce:	bl	17572 <btrfs_free_path@@Base>
   229d2:	ldr.w	r3, [r7, #384]	; 0x180
   229d6:	mov	r0, sl
   229d8:	str	r3, [sp, #0]
   229da:	movs	r3, #0
   229dc:	str	r3, [sp, #4]
   229de:	ldrd	r2, r3, [sp, #104]	; 0x68
   229e2:	bl	2bed8 <remove_from_free_space_tree@@Base>
   229e6:	mov	r5, r0
   229e8:	cmp	r0, #0
   229ea:	bne.n	22a76 <btrfs_run_delayed_refs@@Base+0x49a>
   229ec:	str	r0, [sp, #12]
   229ee:	mov.w	r8, #1
   229f2:	str.w	r8, [sp, #8]
   229f6:	ldr.w	r3, [r7, #384]	; 0x180
   229fa:	strd	r3, r0, [sp]
   229fe:	mov	r0, r7
   22a00:	ldrd	r2, r3, [sp, #104]	; 0x68
   22a04:	bl	1e734 <btrfs_lookup_block_group@@Base+0x188>
   22a08:	ldr.w	r2, [r7, #384]	; 0x180
   22a0c:	ldr	r3, [sp, #64]	; 0x40
   22a0e:	movs	r1, #0
   22a10:	mov	r5, r0
   22a12:	mov	r0, r2
   22a14:	strd	r0, r1, [sp, #48]	; 0x30
   22a18:	ldrd	r0, r1, [r3, #32]
   22a1c:	ldrd	r2, r3, [sp, #48]	; 0x30
   22a20:	cmp	r1, r3
   22a22:	it	eq
   22a24:	cmpeq	r0, r2
   22a26:	bcs.n	22a8a <btrfs_run_delayed_refs@@Base+0x4ae>
   22a28:	ldr	r2, [pc, #252]	; (22b28 <btrfs_run_delayed_refs@@Base+0x54c>)
   22a2a:	movw	r3, #2462	; 0x99e
   22a2e:	ldr	r1, [pc, #252]	; (22b2c <btrfs_run_delayed_refs@@Base+0x550>)
   22a30:	ldr	r0, [pc, #252]	; (22b30 <btrfs_run_delayed_refs@@Base+0x554>)
   22a32:	add	r2, pc
   22a34:	addw	r2, r2, #805	; 0x325
   22a38:	add	r1, pc
   22a3a:	add	r0, pc
   22a3c:	str.w	r8, [sp]
   22a40:	bl	1dd92 <btrfs_create_tree@@Base+0x31e>
   22a44:	ldr	r3, [sp, #64]	; 0x40
   22a46:	movs	r2, #0
   22a48:	mov	r1, r3
   22a4a:	movs	r3, #0
   22a4c:	strd	r2, r3, [r1, #32]
   22a50:	ldrd	r2, r3, [r4, #64]	; 0x40
   22a54:	cmp	r3, #0
   22a56:	it	eq
   22a58:	cmpeq	r2, #2
   22a5a:	bne.n	22a76 <btrfs_run_delayed_refs@@Base+0x49a>
   22a5c:	movs	r3, #8
   22a5e:	str	r3, [sp, #8]
   22a60:	ldrd	r2, r3, [sp, #96]	; 0x60
   22a64:	ldr.w	r0, [sl]
   22a68:	strd	r2, r3, [sp]
   22a6c:	adds	r0, #192	; 0xc0
   22a6e:	ldrd	r2, r3, [sp, #88]	; 0x58
   22a72:	bl	15e3a <clear_extent_bits@@Base>
   22a76:	cmp.w	fp, #0
   22a7a:	bne.n	22b0e <btrfs_run_delayed_refs@@Base+0x532>
   22a7c:	cmp	r5, #0
   22a7e:	bne.w	226e8 <btrfs_run_delayed_refs@@Base+0x10c>
   22a82:	mov	r0, r4
   22a84:	bl	1e2e8 <btrfs_create_tree@@Base+0x874>
   22a88:	b.n	22614 <btrfs_run_delayed_refs@@Base+0x38>
   22a8a:	ldr	r3, [sp, #48]	; 0x30
   22a8c:	subs	r2, r0, r3
   22a8e:	ldr	r3, [sp, #52]	; 0x34
   22a90:	sbc.w	r3, r1, r3
   22a94:	ldr	r1, [sp, #64]	; 0x40
   22a96:	str	r2, [r1, #32]
   22a98:	str	r3, [r1, #36]	; 0x24
   22a9a:	b.n	22a50 <btrfs_run_delayed_refs@@Base+0x474>
   22a9c:	mvn.w	r5, #11
   22aa0:	b.n	22a76 <btrfs_run_delayed_refs@@Base+0x49a>
   22aa2:	cmp	r5, #2
   22aa4:	bne.n	22ad8 <btrfs_run_delayed_refs@@Base+0x4fc>
   22aa6:	movs	r2, #0
   22aa8:	movs	r3, #0
   22aaa:	strd	r2, r3, [sp, #32]
   22aae:	mov	r0, sl
   22ab0:	ldr	r2, [r4, #80]	; 0x50
   22ab2:	strd	r8, r9, [sp, #16]
   22ab6:	asrs	r3, r2, #31
   22ab8:	strd	r2, r3, [sp, #24]
   22abc:	ldrd	r2, r3, [r4, #72]	; 0x48
   22ac0:	strd	r2, r3, [sp, #8]
   22ac4:	ldrd	r2, r3, [r4, #32]
   22ac8:	strd	r2, r3, [sp]
   22acc:	ldrd	r2, r3, [r4, #24]
   22ad0:	bl	1eec4 <hash_extent_data_ref@@Base+0x3f4>
   22ad4:	mov	r5, r0
   22ad6:	b.n	22a76 <btrfs_run_delayed_refs@@Base+0x49a>
   22ad8:	ldr	r2, [pc, #88]	; (22b34 <btrfs_run_delayed_refs@@Base+0x558>)
   22ada:	movs	r3, #1
   22adc:	ldr	r1, [pc, #88]	; (22b38 <btrfs_run_delayed_refs@@Base+0x55c>)
   22ade:	ldr	r0, [pc, #92]	; (22b3c <btrfs_run_delayed_refs@@Base+0x560>)
   22ae0:	add	r2, pc
   22ae2:	add.w	r2, r2, #784	; 0x310
   22ae6:	add	r1, pc
   22ae8:	add	r0, pc
   22aea:	str	r3, [sp, #0]
   22aec:	movw	r3, #3822	; 0xeee
   22af0:	bl	1dfec <btrfs_create_tree@@Base+0x578>
   22af4:	ldr	r2, [pc, #72]	; (22b40 <btrfs_run_delayed_refs@@Base+0x564>)
   22af6:	movs	r3, #1
   22af8:	ldr	r1, [pc, #72]	; (22b44 <btrfs_run_delayed_refs@@Base+0x568>)
   22afa:	ldr	r0, [pc, #76]	; (22b48 <btrfs_run_delayed_refs@@Base+0x56c>)
   22afc:	add	r2, pc
   22afe:	str	r3, [sp, #0]
   22b00:	addw	r2, r2, #831	; 0x33f
   22b04:	add	r1, pc
   22b06:	add	r0, pc
   22b08:	movw	r3, #3842	; 0xf02
   22b0c:	b.n	22af0 <btrfs_run_delayed_refs@@Base+0x514>
   22b0e:	mov	r0, fp
   22b10:	blx	8434 <free@plt+0x4>
   22b14:	b.n	22a7c <btrfs_run_delayed_refs@@Base+0x4a0>
   22b16:	mov	r5, r0
   22b18:	b.n	22714 <btrfs_run_delayed_refs@@Base+0x138>
   22b1a:	mov	r0, r5
   22b1c:	add	sp, #132	; 0x84
   22b1e:	vpop	{d8}
   22b22:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22b26:	nop
   22b28:	add	r0, sp, #448	; 0x1c0
   22b2a:	movs	r1, r0
   22b2c:	add	r1, pc, #228	; (adr r1, 22c14 <btrfs_fix_block_accounting@@Base+0xc8>)
   22b2e:	movs	r1, r0
   22b30:	add	r4, pc, #604	; (adr r4, 22d90 <btrfs_record_file_extent@@Base+0x5c>)
   22b32:	movs	r1, r0
   22b34:	add	r7, pc, #776	; (adr r7, 22e40 <btrfs_record_file_extent@@Base+0x10c>)
   22b36:	movs	r1, r0
   22b38:	add	r0, pc, #556	; (adr r0, 22d68 <btrfs_record_file_extent@@Base+0x34>)
   22b3a:	movs	r1, r0
   22b3c:	add	r3, pc, #932	; (adr r3, 22ee4 <btrfs_record_file_extent@@Base+0x1b0>)
   22b3e:	movs	r1, r0
   22b40:	add	r7, pc, #664	; (adr r7, 22ddc <btrfs_record_file_extent@@Base+0xa8>)
   22b42:	movs	r1, r0
   22b44:	add	r0, pc, #436	; (adr r0, 22cfc <btrfs_fix_block_accounting@@Base+0x1b0>)
   22b46:	movs	r1, r0
   22b48:	add	r3, pc, #812	; (adr r3, 22e78 <btrfs_record_file_extent@@Base+0x144>)
   22b4a:	movs	r1, r0

00022b4c <btrfs_fix_block_accounting@@Base>:
   22b4c:	ldr	r2, [pc, #460]	; (22d1c <btrfs_fix_block_accounting@@Base+0x1d0>)
   22b4e:	mov.w	r1, #4294967295	; 0xffffffff
   22b52:	ldr	r3, [pc, #460]	; (22d20 <btrfs_fix_block_accounting@@Base+0x1d4>)
   22b54:	add	r2, pc
   22b56:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22b5a:	sub	sp, #124	; 0x7c
   22b5c:	ldr.w	r8, [r0]
   22b60:	mov	r5, r0
   22b62:	ldr	r3, [r2, r3]
   22b64:	ldr.w	r6, [r8, #24]
   22b68:	ldr	r3, [r3, #0]
   22b6a:	str	r3, [sp, #116]	; 0x74
   22b6c:	mov.w	r3, #0
   22b70:	bl	225dc <btrfs_run_delayed_refs@@Base>
   22b74:	cmp	r0, #0
   22b76:	bne.w	22d10 <btrfs_fix_block_accounting@@Base+0x1c4>
   22b7a:	movs	r7, #0
   22b7c:	mov	fp, r7
   22b7e:	mov	sl, r7
   22b80:	mov	r9, r7
   22b82:	mov	r2, r7
   22b84:	mov	r3, fp
   22b86:	mov	r0, r8
   22b88:	bl	1e528 <btrfs_lookup_first_block_group@@Base>
   22b8c:	mov	r4, r0
   22b8e:	cbz	r0, 22bdc <btrfs_fix_block_accounting@@Base+0x90>
   22b90:	ldrd	r2, r3, [r0, #40]	; 0x28
   22b94:	ldr.w	r7, [r0, #49]	; 0x31
   22b98:	ldr.w	r1, [r0, #53]	; 0x35
   22b9c:	adds	r7, r7, r2
   22b9e:	strd	sl, r9, [r0, #72]	; 0x48
   22ba2:	adc.w	fp, r1, r3
   22ba6:	ldr	r3, [r0, #60]	; 0x3c
   22ba8:	movs	r1, #1
   22baa:	strd	sl, r9, [r3, #16]
   22bae:	ldrd	r2, r3, [r0, #40]	; 0x28
   22bb2:	ldr.w	r0, [r6, #464]	; 0x1d0
   22bb6:	str	r1, [sp, #8]
   22bb8:	ldr.w	ip, [r4, #49]	; 0x31
   22bbc:	adds	r0, #128	; 0x80
   22bbe:	ldr.w	lr, [r4, #53]	; 0x35
   22bc2:	adds.w	ip, ip, r2
   22bc6:	adc.w	lr, lr, r3
   22bca:	adds.w	r4, ip, #4294967295	; 0xffffffff
   22bce:	adc.w	lr, lr, #4294967295	; 0xffffffff
   22bd2:	strd	r4, lr, [sp]
   22bd6:	bl	15fb0 <set_extent_bits@@Base>
   22bda:	b.n	22b82 <btrfs_fix_block_accounting@@Base+0x36>
   22bdc:	add	r7, sp, #48	; 0x30
   22bde:	add.w	sl, sp, #28
   22be2:	mov	r0, r7
   22be4:	bl	1753c <btrfs_init_path@@Base>
   22be8:	ldr.w	r1, [r6, #464]	; 0x1d0
   22bec:	movs	r3, #168	; 0xa8
   22bee:	strd	r4, r4, [sp]
   22bf2:	strb.w	r3, [sp, #36]	; 0x24
   22bf6:	mov	r2, sl
   22bf8:	mov	r3, r7
   22bfa:	ldr	r1, [r1, #24]
   22bfc:	mov	r0, r5
   22bfe:	strb.w	r4, [sp, #37]	; 0x25
   22c02:	strb.w	r4, [sp, #38]	; 0x26
   22c06:	strb.w	r4, [sp, #39]	; 0x27
   22c0a:	strb.w	r4, [sp, #40]	; 0x28
   22c0e:	strb.w	r4, [sp, #41]	; 0x29
   22c12:	strb.w	r4, [sp, #42]	; 0x2a
   22c16:	strb.w	r4, [sp, #43]	; 0x2b
   22c1a:	strb.w	r4, [sp, #44]	; 0x2c
   22c1e:	strd	r4, r4, [sp, #28]
   22c22:	bl	19930 <btrfs_search_slot@@Base>
   22c26:	subs	r3, r0, #0
   22c28:	blt.n	22cec <btrfs_fix_block_accounting@@Base+0x1a0>
   22c2a:	ldr.w	r9, [pc, #248]	; 22d24 <btrfs_fix_block_accounting@@Base+0x1d8>
   22c2e:	movs	r4, #0
   22c30:	ldr.w	fp, [pc, #244]	; 22d28 <btrfs_fix_block_accounting@@Base+0x1dc>
   22c34:	movs	r5, #0
   22c36:	add	r9, pc
   22c38:	addw	r9, r9, #851	; 0x353
   22c3c:	add	fp, pc
   22c3e:	ldr	r0, [sp, #48]	; 0x30
   22c40:	ldr	r2, [sp, #80]	; 0x50
   22c42:	ldr.w	r3, [r0, #192]	; 0xc0
   22c46:	cmp	r2, r3
   22c48:	bcc.n	22c68 <btrfs_fix_block_accounting@@Base+0x11c>
   22c4a:	ldr.w	r0, [r6, #464]	; 0x1d0
   22c4e:	mov	r1, r7
   22c50:	movs	r2, #0
   22c52:	strb.w	r2, [sp, #113]	; 0x71
   22c56:	bl	1ad64 <btrfs_next_sibling_tree_block@@Base>
   22c5a:	subs	r3, r0, #0
   22c5c:	blt.n	22cec <btrfs_fix_block_accounting@@Base+0x1a0>
   22c5e:	mov.w	r2, #0
   22c62:	bne.n	22d00 <btrfs_fix_block_accounting@@Base+0x1b4>
   22c64:	ldr	r0, [sp, #48]	; 0x30
   22c66:	ldr	r2, [sp, #80]	; 0x50
   22c68:	mov	r1, sl
   22c6a:	bl	1dccc <btrfs_create_tree@@Base+0x258>
   22c6e:	ldrb.w	r3, [sp, #36]	; 0x24
   22c72:	cmp	r3, #168	; 0xa8
   22c74:	bne.n	22cb4 <btrfs_fix_block_accounting@@Base+0x168>
   22c76:	ldr.w	r3, [sp, #37]	; 0x25
   22c7a:	movs	r1, #1
   22c7c:	ldr.w	r2, [sp, #41]	; 0x29
   22c80:	movs	r0, #0
   22c82:	adds	r4, r4, r3
   22c84:	strd	r1, r0, [sp, #8]
   22c88:	adc.w	r5, r2, r5
   22c8c:	mov	r0, r6
   22c8e:	strd	r3, r2, [sp]
   22c92:	ldrd	r2, r3, [sp, #28]
   22c96:	bl	20948 <btrfs_update_block_group@@Base>
   22c9a:	movw	r3, #3354	; 0xd1a
   22c9e:	mov	r2, r9
   22ca0:	mov	r1, fp
   22ca2:	str	r0, [sp, #0]
   22ca4:	ldr	r0, [pc, #132]	; (22d2c <btrfs_fix_block_accounting@@Base+0x1e0>)
   22ca6:	add	r0, pc
   22ca8:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   22cac:	ldr	r3, [sp, #80]	; 0x50
   22cae:	adds	r3, #1
   22cb0:	str	r3, [sp, #80]	; 0x50
   22cb2:	b.n	22c3e <btrfs_fix_block_accounting@@Base+0xf2>
   22cb4:	cmp	r3, #169	; 0xa9
   22cb6:	bne.n	22cac <btrfs_fix_block_accounting@@Base+0x160>
   22cb8:	ldr.w	r3, [r8, #384]	; 0x180
   22cbc:	movs	r2, #1
   22cbe:	movs	r1, #0
   22cc0:	mov	r0, r6
   22cc2:	adds	r4, r4, r3
   22cc4:	strd	r2, r1, [sp, #8]
   22cc8:	str	r3, [sp, #0]
   22cca:	mov.w	r3, #0
   22cce:	str	r3, [sp, #4]
   22cd0:	adc.w	r5, r5, #0
   22cd4:	ldrd	r2, r3, [sp, #28]
   22cd8:	bl	20948 <btrfs_update_block_group@@Base>
   22cdc:	mov	r3, r0
   22cde:	cmp	r0, #0
   22ce0:	beq.n	22cac <btrfs_fix_block_accounting@@Base+0x160>
   22ce2:	mov	r0, r7
   22ce4:	str	r3, [sp, #20]
   22ce6:	bl	1754c <btrfs_release_path@@Base>
   22cea:	ldr	r3, [sp, #20]
   22cec:	ldr	r1, [pc, #64]	; (22d30 <btrfs_fix_block_accounting@@Base+0x1e4>)
   22cee:	ldr	r2, [pc, #48]	; (22d20 <btrfs_fix_block_accounting@@Base+0x1d4>)
   22cf0:	add	r1, pc
   22cf2:	ldr	r2, [r1, r2]
   22cf4:	ldr	r1, [r2, #0]
   22cf6:	ldr	r2, [sp, #116]	; 0x74
   22cf8:	eors	r1, r2
   22cfa:	beq.n	22d14 <btrfs_fix_block_accounting@@Base+0x1c8>
   22cfc:	blx	8510 <__stack_chk_fail@plt>
   22d00:	ldr.w	r3, [r6, #464]	; 0x1d0
   22d04:	ldr.w	r3, [r3, #308]	; 0x134
   22d08:	str	r4, [r3, #120]	; 0x78
   22d0a:	str	r5, [r3, #124]	; 0x7c
   22d0c:	mov	r3, r2
   22d0e:	b.n	22ce2 <btrfs_fix_block_accounting@@Base+0x196>
   22d10:	mov	r3, r0
   22d12:	b.n	22cec <btrfs_fix_block_accounting@@Base+0x1a0>
   22d14:	mov	r0, r3
   22d16:	add	sp, #124	; 0x7c
   22d18:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22d1c:	asrs	r0, r6, #8
   22d1e:	movs	r4, r0
   22d20:	lsls	r0, r4, #8
   22d22:	movs	r0, r0
   22d24:	add	r6, pc, #432	; (adr r6, 22ed8 <btrfs_record_file_extent@@Base+0x1a4>)
   22d26:	movs	r1, r0
   22d28:	ldr	r7, [sp, #212]	; 0xd4
   22d2a:	movs	r1, r0
   22d2c:	ldr	r6, [r7, #0]
   22d2e:	movs	r1, r0
   22d30:	asrs	r4, r2, #2
   22d32:	movs	r4, r0

00022d34 <btrfs_record_file_extent@@Base>:
   22d34:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22d38:	mov	r6, r0
   22d3a:	vpush	{d8}
   22d3e:	mov	fp, r1
   22d40:	sub	sp, #156	; 0x9c
   22d42:	strd	r2, r3, [sp, #96]	; 0x60
   22d46:	ldr	r3, [sp, #200]	; 0xc8
   22d48:	ldr.w	r2, [pc, #1080]	; 23184 <btrfs_record_file_extent@@Base+0x450>
   22d4c:	ldrd	r9, sl, [sp, #216]	; 0xd8
   22d50:	str	r3, [sp, #76]	; 0x4c
   22d52:	add	r2, pc
   22d54:	ldr	r3, [sp, #208]	; 0xd0
   22d56:	str	r3, [sp, #68]	; 0x44
   22d58:	ldr	r3, [sp, #212]	; 0xd4
   22d5a:	str	r3, [sp, #72]	; 0x48
   22d5c:	ldr.w	r3, [pc, #1064]	; 23188 <btrfs_record_file_extent@@Base+0x454>
   22d60:	ldr	r3, [r2, r3]
   22d62:	ldr	r3, [r3, #0]
   22d64:	str	r3, [sp, #148]	; 0x94
   22d66:	mov.w	r3, #0
   22d6a:	ldrd	r3, r4, [sp, #224]	; 0xe0
   22d6e:	strd	r3, r4, [sp, #56]	; 0x38
   22d72:	movs	r4, #0
   22d74:	ldr.w	r3, [pc, #1044]	; 2318c <btrfs_record_file_extent@@Base+0x458>
   22d78:	add	r3, pc
   22d7a:	addw	r3, r3, #878	; 0x36e
   22d7e:	vmov	s16, r3
   22d82:	ldr.w	r3, [pc, #1036]	; 23190 <btrfs_record_file_extent@@Base+0x45c>
   22d86:	add	r3, pc
   22d88:	vmov	s17, r3
   22d8c:	ldrd	r2, r3, [sp, #56]	; 0x38
   22d90:	orrs	r3, r2
   22d92:	beq.n	22e08 <btrfs_record_file_extent@@Base+0xd4>
   22d94:	orrs.w	r3, r9, sl
   22d98:	bne.n	22df6 <btrfs_record_file_extent@@Base+0xc2>
   22d9a:	ldrd	r3, r4, [sp, #224]	; 0xe0
   22d9e:	mov	r1, fp
   22da0:	mov	r0, r6
   22da2:	strd	r9, sl, [sp, #8]
   22da6:	strd	r3, r4, [sp, #24]
   22daa:	strd	r3, r4, [sp, #16]
   22dae:	ldr	r3, [sp, #68]	; 0x44
   22db0:	str	r3, [sp, #0]
   22db2:	ldr	r3, [sp, #72]	; 0x48
   22db4:	str	r3, [sp, #4]
   22db6:	ldrd	r2, r3, [sp, #96]	; 0x60
   22dba:	bl	2d7c2 <btrfs_insert_file_extent@@Base>
   22dbe:	mov	r4, r0
   22dc0:	cmp	r4, #0
   22dc2:	blt.n	22e08 <btrfs_record_file_extent@@Base+0xd4>
   22dc4:	ldr	r3, [sp, #224]	; 0xe0
   22dc6:	ldr	r2, [sp, #224]	; 0xe0
   22dc8:	adds.w	r9, r9, r3
   22dcc:	ldr	r3, [sp, #228]	; 0xe4
   22dce:	adc.w	sl, sl, r3
   22dd2:	ldr	r3, [sp, #68]	; 0x44
   22dd4:	adds	r3, r3, r2
   22dd6:	ldr	r2, [sp, #228]	; 0xe4
   22dd8:	str	r3, [sp, #68]	; 0x44
   22dda:	ldr	r3, [sp, #72]	; 0x48
   22ddc:	adc.w	r3, r2, r3
   22de0:	ldr	r2, [sp, #224]	; 0xe0
   22de2:	str	r3, [sp, #72]	; 0x48
   22de4:	ldr	r3, [sp, #56]	; 0x38
   22de6:	subs	r3, r3, r2
   22de8:	ldr	r2, [sp, #228]	; 0xe4
   22dea:	str	r3, [sp, #56]	; 0x38
   22dec:	ldr	r3, [sp, #60]	; 0x3c
   22dee:	sbc.w	r3, r3, r2
   22df2:	str	r3, [sp, #60]	; 0x3c
   22df4:	b.n	22d8c <btrfs_record_file_extent@@Base+0x58>
   22df6:	ldr.w	r3, [fp, #464]	; 0x1d0
   22dfa:	ldr	r7, [r3, #24]
   22dfc:	bl	17544 <btrfs_alloc_path@@Base>
   22e00:	mov	r5, r0
   22e02:	cbnz	r0, 22e1e <btrfs_record_file_extent@@Base+0xea>
   22e04:	mvn.w	r4, #11
   22e08:	ldr	r2, [pc, #904]	; (23194 <btrfs_record_file_extent@@Base+0x460>)
   22e0a:	ldr	r3, [pc, #892]	; (23188 <btrfs_record_file_extent@@Base+0x454>)
   22e0c:	add	r2, pc
   22e0e:	ldr	r3, [r2, r3]
   22e10:	ldr	r2, [r3, #0]
   22e12:	ldr	r3, [sp, #148]	; 0x94
   22e14:	eors	r2, r3
   22e16:	beq.w	23176 <btrfs_record_file_extent@@Base+0x442>
   22e1a:	blx	8510 <__stack_chk_fail@plt>
   22e1e:	mov.w	r2, #4294967295	; 0xffffffff
   22e22:	movs	r3, #108	; 0x6c
   22e24:	movs	r0, #0
   22e26:	strb.w	r3, [sp, #136]	; 0x88
   22e2a:	strb.w	r2, [sp, #137]	; 0x89
   22e2e:	mov	r3, r5
   22e30:	strb.w	r2, [sp, #138]	; 0x8a
   22e34:	mov	r1, r7
   22e36:	strb.w	r2, [sp, #139]	; 0x8b
   22e3a:	strb.w	r2, [sp, #140]	; 0x8c
   22e3e:	strb.w	r2, [sp, #141]	; 0x8d
   22e42:	strb.w	r2, [sp, #142]	; 0x8e
   22e46:	strb.w	r2, [sp, #143]	; 0x8f
   22e4a:	strb.w	r2, [sp, #144]	; 0x90
   22e4e:	add	r2, sp, #128	; 0x80
   22e50:	strd	r0, r0, [sp]
   22e54:	strd	r9, sl, [sp, #128]	; 0x80
   22e58:	bl	19930 <btrfs_search_slot@@Base>
   22e5c:	subs	r4, r0, #0
   22e5e:	blt.w	2316e <btrfs_record_file_extent@@Base+0x43a>
   22e62:	ldr	r0, [pc, #820]	; (23198 <btrfs_record_file_extent@@Base+0x464>)
   22e64:	ite	eq
   22e66:	moveq	r3, #1
   22e68:	movne	r3, #0
   22e6a:	vmov	r2, s16
   22e6e:	vmov	r1, s17
   22e72:	add	r0, pc
   22e74:	str	r3, [sp, #0]
   22e76:	movw	r3, #3407	; 0xd4f
   22e7a:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   22e7e:	movs	r2, #0
   22e80:	movs	r3, #0
   22e82:	mov	r1, r5
   22e84:	mov	r0, r7
   22e86:	bl	1b08c <btrfs_previous_extent_item@@Base>
   22e8a:	subs	r4, r0, #0
   22e8c:	blt.w	2316e <btrfs_record_file_extent@@Base+0x43a>
   22e90:	ldrd	r2, r3, [sp, #224]	; 0xe0
   22e94:	ldrd	r0, r1, [sp, #224]	; 0xe0
   22e98:	strd	r2, r3, [sp, #40]	; 0x28
   22e9c:	movs	r3, #0
   22e9e:	cmp	r3, r1
   22ea0:	mov.w	r2, #134217728	; 0x8000000
   22ea4:	it	eq
   22ea6:	cmpeq	r2, r0
   22ea8:	it	cc
   22eaa:	strdcc	r2, r3, [sp, #40]	; 0x28
   22eae:	cmp	r4, #0
   22eb0:	bne.w	2306a <btrfs_record_file_extent@@Base+0x336>
   22eb4:	add	r3, sp, #120	; 0x78
   22eb6:	add	r2, sp, #112	; 0x70
   22eb8:	add.w	r0, r7, #464	; 0x1d0
   22ebc:	mov	r1, r5
   22ebe:	bl	1e244 <btrfs_create_tree@@Base+0x7d0>
   22ec2:	ldr	r2, [sp, #120]	; 0x78
   22ec4:	ldr	r3, [sp, #112]	; 0x70
   22ec6:	adds	r3, r3, r2
   22ec8:	ldr	r2, [sp, #116]	; 0x74
   22eca:	str	r3, [sp, #104]	; 0x68
   22ecc:	ldr	r3, [sp, #124]	; 0x7c
   22ece:	adc.w	r3, r2, r3
   22ed2:	str	r3, [sp, #108]	; 0x6c
   22ed4:	ldrd	r3, r4, [sp, #104]	; 0x68
   22ed8:	cmp	sl, r4
   22eda:	it	eq
   22edc:	cmpeq	r9, r3
   22ede:	bcs.w	2306a <btrfs_record_file_extent@@Base+0x336>
   22ee2:	add.w	r0, r7, #464	; 0x1d0
   22ee6:	add	r3, sp, #128	; 0x80
   22ee8:	add	r2, sp, #120	; 0x78
   22eea:	mov	r1, r5
   22eec:	bl	1e244 <btrfs_create_tree@@Base+0x7d0>
   22ef0:	ldrd	r3, r4, [sp, #120]	; 0x78
   22ef4:	ldr	r2, [pc, #676]	; (2319c <btrfs_record_file_extent@@Base+0x468>)
   22ef6:	cmp	sl, r4
   22ef8:	ldr	r1, [pc, #676]	; (231a0 <btrfs_record_file_extent@@Base+0x46c>)
   22efa:	it	eq
   22efc:	cmpeq	r9, r3
   22efe:	ldr	r0, [pc, #676]	; (231a4 <btrfs_record_file_extent@@Base+0x470>)
   22f00:	add	r2, pc
   22f02:	strd	r3, r4, [sp, #48]	; 0x30
   22f06:	addw	r2, r2, #906	; 0x38a
   22f0a:	ite	cc
   22f0c:	movcc	r3, #1
   22f0e:	movcs	r3, #0
   22f10:	add	r1, pc
   22f12:	str	r3, [sp, #0]
   22f14:	add	r0, pc
   22f16:	movw	r3, #3487	; 0xd9f
   22f1a:	bl	1e024 <btrfs_create_tree@@Base+0x5b0>
   22f1e:	ldr	r3, [sp, #48]	; 0x30
   22f20:	ldrd	r8, r7, [sp, #128]	; 0x80
   22f24:	subs.w	r3, r9, r3
   22f28:	str	r3, [sp, #80]	; 0x50
   22f2a:	ldr	r3, [sp, #52]	; 0x34
   22f2c:	sbc.w	r3, sl, r3
   22f30:	mov	r0, r5
   22f32:	str	r3, [sp, #84]	; 0x54
   22f34:	bl	1754c <btrfs_release_path@@Base>
   22f38:	ldr	r3, [sp, #96]	; 0x60
   22f3a:	mov	r2, r5
   22f3c:	mov	r1, fp
   22f3e:	mov	r0, r6
   22f40:	str	r3, [sp, #128]	; 0x80
   22f42:	ldr	r3, [sp, #100]	; 0x64
   22f44:	str	r3, [sp, #132]	; 0x84
   22f46:	ldr	r3, [sp, #68]	; 0x44
   22f48:	str.w	r3, [sp, #137]	; 0x89
   22f4c:	ldr	r3, [sp, #72]	; 0x48
   22f4e:	str.w	r3, [sp, #141]	; 0x8d
   22f52:	movs	r3, #108	; 0x6c
   22f54:	strb.w	r3, [sp, #136]	; 0x88
   22f58:	movs	r3, #53	; 0x35
   22f5a:	str	r3, [sp, #120]	; 0x78
   22f5c:	movs	r3, #1
   22f5e:	str	r3, [sp, #4]
   22f60:	add	r3, sp, #120	; 0x78
   22f62:	str	r3, [sp, #0]
   22f64:	add	r3, sp, #128	; 0x80
   22f66:	bl	1a700 <btrfs_insert_empty_items@@Base>
   22f6a:	mov	r4, r0
   22f6c:	cmp	r0, #0
   22f6e:	bne.w	2316e <btrfs_record_file_extent@@Base+0x43a>
   22f72:	ldr	r0, [r5, #0]
   22f74:	mov.w	lr, #25
   22f78:	ldr	r3, [r5, #32]
   22f7a:	add.w	r2, r0, #96	; 0x60
   22f7e:	ldr	r1, [r6, #8]
   22f80:	ldr.w	ip, [r6, #12]
   22f84:	mla	r3, lr, r3, r2
   22f88:	ldr.w	lr, [r3, #118]	; 0x76
   22f8c:	add.w	lr, lr, #101	; 0x65
   22f90:	add.w	r3, r2, lr
   22f94:	str.w	r1, [r2, lr]
   22f98:	mov.w	r2, #1
   22f9c:	strb	r2, [r3, #20]
   22f9e:	ldr	r2, [sp, #48]	; 0x30
   22fa0:	str.w	ip, [r3, #4]
   22fa4:	strb	r4, [r3, #16]
   22fa6:	str.w	r2, [r3, #21]
   22faa:	ldr	r2, [sp, #52]	; 0x34
   22fac:	strb	r4, [r3, #17]
   22fae:	strb	r4, [r3, #18]
   22fb0:	str.w	r2, [r3, #25]
   22fb4:	ldr	r2, [sp, #80]	; 0x50
   22fb6:	strb	r4, [r3, #19]
   22fb8:	str.w	r8, [r3, #29]
   22fbc:	str.w	r2, [r3, #37]	; 0x25
   22fc0:	ldr	r2, [sp, #84]	; 0x54
   22fc2:	str.w	r7, [r3, #33]	; 0x21
   22fc6:	str.w	r8, [r3, #8]
   22fca:	str.w	r2, [r3, #41]	; 0x29
   22fce:	ldr	r2, [sp, #40]	; 0x28
   22fd0:	str	r7, [r3, #12]
   22fd2:	str.w	r2, [r3, #45]	; 0x2d
   22fd6:	ldr	r2, [sp, #44]	; 0x2c
   22fd8:	str.w	r2, [r3, #49]	; 0x31
   22fdc:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   22fe0:	ldr	r3, [sp, #76]	; 0x4c
   22fe2:	ldr	r2, [sp, #76]	; 0x4c
   22fe4:	mov	r0, r5
   22fe6:	ldr	r1, [sp, #40]	; 0x28
   22fe8:	ldr	r3, [r3, #24]
   22fea:	ldr	r2, [r2, #28]
   22fec:	adds	r3, r3, r1
   22fee:	ldr	r1, [sp, #44]	; 0x2c
   22ff0:	adc.w	r2, r1, r2
   22ff4:	ldr	r1, [sp, #76]	; 0x4c
   22ff6:	str	r3, [r1, #24]
   22ff8:	str	r2, [r1, #28]
   22ffa:	bl	1754c <btrfs_release_path@@Base>
   22ffe:	ldr	r3, [sp, #68]	; 0x44
   23000:	ldr	r2, [sp, #80]	; 0x50
   23002:	mov	r0, r6
   23004:	ldr	r1, [sp, #84]	; 0x54
   23006:	subs	r2, r3, r2
   23008:	ldr	r3, [sp, #72]	; 0x48
   2300a:	strd	r8, r7, [sp]
   2300e:	sbc.w	r3, r3, r1
   23012:	strd	r2, r3, [sp, #32]
   23016:	ldr	r3, [sp, #96]	; 0x60
   23018:	mov	r1, fp
   2301a:	ldr.w	r2, [fp, #447]	; 0x1bf
   2301e:	str	r3, [sp, #24]
   23020:	ldr	r3, [sp, #100]	; 0x64
   23022:	str	r3, [sp, #28]
   23024:	ldr.w	r3, [fp, #451]	; 0x1c3
   23028:	strd	r2, r3, [sp, #16]
   2302c:	movs	r2, #0
   2302e:	movs	r3, #0
   23030:	strd	r2, r3, [sp, #8]
   23034:	ldrd	r2, r3, [sp, #48]	; 0x30
   23038:	bl	1f7e8 <btrfs_inc_extent_ref@@Base>
   2303c:	mov	r4, r0
   2303e:	cmp	r0, #0
   23040:	bne.w	2316e <btrfs_record_file_extent@@Base+0x43a>
   23044:	ldr	r3, [sp, #80]	; 0x50
   23046:	subs.w	r3, r8, r3
   2304a:	str	r3, [sp, #224]	; 0xe0
   2304c:	ldr	r3, [sp, #84]	; 0x54
   2304e:	sbc.w	r3, r7, r3
   23052:	str	r3, [sp, #228]	; 0xe4
   23054:	ldrd	r0, r1, [sp, #224]	; 0xe0
   23058:	ldrd	r2, r3, [sp, #40]	; 0x28
   2305c:	cmp	r3, r1
   2305e:	it	eq
   23060:	cmpeq	r2, r0
   23062:	it	cc
   23064:	strdcc	r2, r3, [sp, #224]	; 0xe0
   23068:	b.n	2316e <btrfs_record_file_extent@@Base+0x43a>
   2306a:	ldr	r3, [sp, #40]	; 0x28
   2306c:	mov	r1, r5
   2306e:	mov	r0, r7
   23070:	adds.w	r3, r9, r3
   23074:	str	r3, [sp, #88]	; 0x58
   23076:	ldr	r3, [sp, #44]	; 0x2c
   23078:	adc.w	r3, sl, r3
   2307c:	str	r3, [sp, #92]	; 0x5c
   2307e:	ldrd	r2, r3, [sp, #88]	; 0x58
   23082:	bl	1b130 <btrfs_next_extent_item@@Base>
   23086:	subs	r4, r0, #0
   23088:	blt.n	2316e <btrfs_record_file_extent@@Base+0x43a>
   2308a:	bne.n	230ac <btrfs_record_file_extent@@Base+0x378>
   2308c:	add	r3, sp, #120	; 0x78
   2308e:	add	r2, sp, #112	; 0x70
   23090:	add.w	r0, r7, #464	; 0x1d0
   23094:	mov	r1, r5
   23096:	bl	1e244 <btrfs_create_tree@@Base+0x7d0>
   2309a:	ldrd	r2, r3, [sp, #112]	; 0x70
   2309e:	ldrd	r0, r1, [sp, #88]	; 0x58
   230a2:	cmp	r3, r1
   230a4:	it	eq
   230a6:	cmpeq	r2, r0
   230a8:	bcc.w	22ee2 <btrfs_record_file_extent@@Base+0x1ae>
   230ac:	mov	r0, r5
   230ae:	mov.w	r8, #1
   230b2:	bl	1754c <btrfs_release_path@@Base>
   230b6:	ldr	r3, [sp, #40]	; 0x28
   230b8:	mov	r2, r5
   230ba:	mov	r1, r7
   230bc:	mov	r0, r6
   230be:	str.w	r8, [sp, #4]
   230c2:	str.w	r3, [sp, #137]	; 0x89
   230c6:	ldr	r3, [sp, #44]	; 0x2c
   230c8:	strd	r9, sl, [sp, #128]	; 0x80
   230cc:	str.w	r3, [sp, #141]	; 0x8d
   230d0:	movs	r3, #168	; 0xa8
   230d2:	strb.w	r3, [sp, #136]	; 0x88
   230d6:	movs	r3, #24
   230d8:	str	r3, [sp, #120]	; 0x78
   230da:	add	r3, sp, #120	; 0x78
   230dc:	str	r3, [sp, #0]
   230de:	add	r3, sp, #128	; 0x80
   230e0:	bl	1a700 <btrfs_insert_empty_items@@Base>
   230e4:	mov	r4, r0
   230e6:	cmp	r0, #0
   230e8:	bne.n	23168 <btrfs_record_file_extent@@Base+0x434>
   230ea:	ldr	r0, [r5, #0]
   230ec:	movs	r2, #25
   230ee:	ldr	r3, [r5, #32]
   230f0:	add.w	r1, r0, #96	; 0x60
   230f4:	mla	r3, r2, r3, r1
   230f8:	ldr.w	r2, [r3, #118]	; 0x76
   230fc:	adds	r2, #101	; 0x65
   230fe:	adds	r3, r1, r2
   23100:	strb	r4, [r1, r2]
   23102:	strb	r4, [r3, #1]
   23104:	strb	r4, [r3, #2]
   23106:	strb	r4, [r3, #3]
   23108:	strb	r4, [r3, #4]
   2310a:	strb	r4, [r3, #5]
   2310c:	strb	r4, [r3, #6]
   2310e:	strb	r4, [r3, #7]
   23110:	strb	r4, [r3, #8]
   23112:	strb	r4, [r3, #9]
   23114:	strb	r4, [r3, #10]
   23116:	strb	r4, [r3, #11]
   23118:	strb	r4, [r3, #12]
   2311a:	strb	r4, [r3, #13]
   2311c:	strb	r4, [r3, #14]
   2311e:	strb	r4, [r3, #15]
   23120:	strb.w	r8, [r3, #16]
   23124:	strb	r4, [r3, #17]
   23126:	strb	r4, [r3, #18]
   23128:	strb	r4, [r3, #19]
   2312a:	strb	r4, [r3, #20]
   2312c:	strb	r4, [r3, #21]
   2312e:	strb	r4, [r3, #22]
   23130:	strb	r4, [r3, #23]
   23132:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   23136:	strd	r8, r4, [sp, #8]
   2313a:	ldrd	r3, r4, [sp, #40]	; 0x28
   2313e:	mov	r2, r9
   23140:	mov	r0, fp
   23142:	strd	r3, r4, [sp]
   23146:	mov	r3, sl
   23148:	bl	20948 <btrfs_update_block_group@@Base>
   2314c:	mov	r4, r0
   2314e:	cbnz	r0, 2316e <btrfs_record_file_extent@@Base+0x43a>
   23150:	mov.w	r1, #4294967295	; 0xffffffff
   23154:	mov	r0, r6
   23156:	bl	225dc <btrfs_run_delayed_refs@@Base>
   2315a:	movs	r3, #0
   2315c:	ldrd	r8, r7, [sp, #40]	; 0x28
   23160:	strd	r9, sl, [sp, #48]	; 0x30
   23164:	str	r3, [sp, #80]	; 0x50
   23166:	b.n	22f30 <btrfs_record_file_extent@@Base+0x1fc>
   23168:	cmn.w	r0, #17
   2316c:	beq.n	23150 <btrfs_record_file_extent@@Base+0x41c>
   2316e:	mov	r0, r5
   23170:	bl	17572 <btrfs_free_path@@Base>
   23174:	b.n	22dc0 <btrfs_record_file_extent@@Base+0x8c>
   23176:	mov	r0, r4
   23178:	add	sp, #156	; 0x9c
   2317a:	vpop	{d8}
   2317e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23182:	nop
   23184:	asrs	r2, r6, #32
   23186:	movs	r4, r0
   23188:	lsls	r0, r4, #8
   2318a:	movs	r0, r0
   2318c:	add	r5, pc, #168	; (adr r5, 23238 <btrfs_record_file_extent@@Base+0x504>)
   2318e:	movs	r1, r0
   23190:	ldr	r5, [sp, #940]	; 0x3ac
   23192:	movs	r1, r0
   23194:	lsrs	r0, r7, #29
   23196:	movs	r4, r0
   23198:	ldr	r1, [r2, #60]	; 0x3c
   2319a:	movs	r1, r0
   2319c:	add	r3, pc, #648	; (adr r3, 23428 <btrfs_merge_delayed_refs@@Base+0x8>)
   2319e:	movs	r1, r0
   231a0:	ldr	r4, [sp, #388]	; 0x184
   231a2:	movs	r1, r0
   231a4:	add	r3, pc, #472	; (adr r3, 23380 <btrfs_record_file_extent@@Base+0x64c>)
   231a6:	movs	r1, r0
   231a8:	ldr	r2, [pc, #60]	; (231e8 <btrfs_record_file_extent@@Base+0x4b4>)
   231aa:	movs	r1, #16
   231ac:	ldr	r3, [pc, #60]	; (231ec <btrfs_record_file_extent@@Base+0x4b8>)
   231ae:	push	{r4, lr}
   231b0:	add	r2, pc
   231b2:	sub	sp, #72	; 0x48
   231b4:	add	r4, sp, #4
   231b6:	ldr	r3, [r2, r3]
   231b8:	mov	r0, r4
   231ba:	ldr	r3, [r3, #0]
   231bc:	str	r3, [sp, #68]	; 0x44
   231be:	mov.w	r3, #0
   231c2:	blx	86c4 <backtrace@plt>
   231c6:	movs	r2, #2
   231c8:	mov	r1, r0
   231ca:	mov	r0, r4
   231cc:	blx	89c8 <backtrace_symbols_fd@plt>
   231d0:	ldr	r2, [pc, #28]	; (231f0 <btrfs_record_file_extent@@Base+0x4bc>)
   231d2:	ldr	r3, [pc, #24]	; (231ec <btrfs_record_file_extent@@Base+0x4b8>)
   231d4:	add	r2, pc
   231d6:	ldr	r3, [r2, r3]
   231d8:	ldr	r2, [r3, #0]
   231da:	ldr	r3, [sp, #68]	; 0x44
   231dc:	eors	r2, r3
   231de:	beq.n	231e4 <btrfs_record_file_extent@@Base+0x4b0>
   231e0:	blx	8510 <__stack_chk_fail@plt>
   231e4:	add	sp, #72	; 0x48
   231e6:	pop	{r4, pc}
   231e8:	lsrs	r4, r2, #15
   231ea:	movs	r4, r0
   231ec:	lsls	r0, r4, #8
   231ee:	movs	r0, r0
   231f0:	lsrs	r0, r6, #14
   231f2:	movs	r4, r0
   231f4:	push	{r0, r1, r2, r3, r4, lr}
   231f6:	ldr	r4, [pc, #40]	; (23220 <btrfs_record_file_extent@@Base+0x4ec>)
   231f8:	ldr	r5, [pc, #40]	; (23224 <btrfs_record_file_extent@@Base+0x4f0>)
   231fa:	add	r4, pc
   231fc:	ldr	r4, [r4, r5]
   231fe:	ldr	r5, [sp, #24]
   23200:	strd	r3, r2, [sp]
   23204:	mov	r3, r1
   23206:	ldr	r2, [pc, #32]	; (23228 <btrfs_record_file_extent@@Base+0x4f4>)
   23208:	movs	r1, #1
   2320a:	strd	r0, r5, [sp, #8]
   2320e:	add	r2, pc
   23210:	ldr	r0, [r4, #0]
   23212:	blx	8860 <__fprintf_chk@plt+0x4>
   23216:	bl	231a8 <btrfs_record_file_extent@@Base+0x474>
   2321a:	blx	8980 <abort@plt>
   2321e:	nop
   23220:	lsrs	r2, r1, #14
   23222:	movs	r4, r0
   23224:	lsls	r0, r6, #8
   23226:	movs	r0, r0
   23228:	ldrb	r4, [r2, r2]
   2322a:	movs	r1, r0
   2322c:	push	{r0, r1, r2, lr}
   2322e:	movs	r3, #1
   23230:	ldr	r2, [pc, #16]	; (23244 <btrfs_record_file_extent@@Base+0x510>)
   23232:	ldr	r1, [pc, #20]	; (23248 <btrfs_record_file_extent@@Base+0x514>)
   23234:	ldr	r0, [pc, #20]	; (2324c <btrfs_record_file_extent@@Base+0x518>)
   23236:	add	r2, pc
   23238:	str	r3, [sp, #0]
   2323a:	add	r1, pc
   2323c:	add	r0, pc
   2323e:	movs	r3, #55	; 0x37
   23240:	bl	231f4 <btrfs_record_file_extent@@Base+0x4c0>
   23244:	add	r5, pc, #136	; (adr r5, 232d0 <btrfs_record_file_extent@@Base+0x59c>)
   23246:	movs	r1, r0
   23248:	add	r4, pc, #52	; (adr r4, 23280 <btrfs_record_file_extent@@Base+0x54c>)
   2324a:	movs	r1, r0
   2324c:	ldr	r4, [sp, #596]	; 0x254
   2324e:	movs	r1, r0
   23250:	push	{r4, r5, lr}
   23252:	sub	sp, #20
   23254:	ldr	r4, [pc, #36]	; (2327c <btrfs_record_file_extent@@Base+0x548>)
   23256:	ldr	r5, [pc, #40]	; (23280 <btrfs_record_file_extent@@Base+0x54c>)
   23258:	add	r4, pc
   2325a:	ldr	r4, [r4, r5]
   2325c:	ldr	r5, [sp, #32]
   2325e:	strd	r3, r2, [sp]
   23262:	mov	r3, r1
   23264:	ldr	r2, [pc, #28]	; (23284 <btrfs_record_file_extent@@Base+0x550>)
   23266:	movs	r1, #1
   23268:	strd	r0, r5, [sp, #8]
   2326c:	add	r2, pc
   2326e:	ldr	r0, [r4, #0]
   23270:	blx	8860 <__fprintf_chk@plt+0x4>
   23274:	add	sp, #20
   23276:	ldmia.w	sp!, {r4, r5, lr}
   2327a:	b.n	231a8 <btrfs_record_file_extent@@Base+0x474>
   2327c:	lsrs	r4, r5, #12
   2327e:	movs	r4, r0
   23280:	lsls	r0, r6, #8
   23282:	movs	r0, r0
   23284:	ldrb	r0, [r0, r0]
   23286:	movs	r1, r0
   23288:	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
   2328c:	mov	r6, r0
   2328e:	mov	r5, r3
   23290:	mov	r4, r2
   23292:	ldr	r3, [r0, #0]
   23294:	movs	r0, #0
   23296:	cbnz	r3, 232ba <btrfs_record_file_extent@@Base+0x586>
   23298:	cbz	r0, 232b6 <btrfs_record_file_extent@@Base+0x582>
   2329a:	ldrd	r2, r3, [r0]
   2329e:	cmp	r3, r5
   232a0:	it	eq
   232a2:	cmpeq	r2, r4
   232a4:	bcs.n	232b6 <btrfs_record_file_extent@@Base+0x582>
   232a6:	adds	r0, #36	; 0x24
   232a8:	bl	1355a <rb_next@@Base>
   232ac:	cbnz	r0, 232b4 <btrfs_record_file_extent@@Base+0x580>
   232ae:	mov	r0, r6
   232b0:	bl	1353a <rb_first@@Base>
   232b4:	subs	r0, #36	; 0x24
   232b6:	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
   232ba:	ldrd	r8, r9, [r3, #-36]	; 0x24
   232be:	sub.w	r0, r3, #36	; 0x24
   232c2:	cmp	r5, r9
   232c4:	it	eq
   232c6:	cmpeq	r4, r8
   232c8:	bcs.n	232ce <btrfs_record_file_extent@@Base+0x59a>
   232ca:	ldr	r3, [r3, #8]
   232cc:	b.n	23296 <btrfs_record_file_extent@@Base+0x562>
   232ce:	cmp	r9, r5
   232d0:	it	eq
   232d2:	cmpeq	r8, r4
   232d4:	bcs.n	232b6 <btrfs_record_file_extent@@Base+0x582>
   232d6:	ldr	r3, [r3, #4]
   232d8:	b.n	23296 <btrfs_record_file_extent@@Base+0x562>
   232da:	push	{r0, r1, r2, r3, r4, lr}
   232dc:	ldr	r3, [pc, #40]	; (23308 <btrfs_record_file_extent@@Base+0x5d4>)
   232de:	ldr	r4, [pc, #44]	; (2330c <btrfs_record_file_extent@@Base+0x5d8>)
   232e0:	add	r3, pc
   232e2:	ldr	r4, [r3, r4]
   232e4:	movs	r3, #0
   232e6:	strd	r2, r1, [sp]
   232ea:	movs	r1, #1
   232ec:	strd	r0, r3, [sp, #8]
   232f0:	ldr	r2, [pc, #28]	; (23310 <btrfs_record_file_extent@@Base+0x5dc>)
   232f2:	ldr	r3, [pc, #32]	; (23314 <btrfs_record_file_extent@@Base+0x5e0>)
   232f4:	add	r2, pc
   232f6:	ldr	r0, [r4, #0]
   232f8:	add	r3, pc
   232fa:	blx	8860 <__fprintf_chk@plt+0x4>
   232fe:	bl	231a8 <btrfs_record_file_extent@@Base+0x474>
   23302:	blx	8980 <abort@plt>
   23306:	nop
   23308:	lsrs	r4, r4, #10
   2330a:	movs	r4, r0
   2330c:	lsls	r0, r6, #8
   2330e:	movs	r0, r0
   23310:	ldrb	r3, [r3, r3]
   23312:	movs	r1, r0
   23314:	add	r3, pc, #316	; (adr r3, 23454 <btrfs_merge_delayed_refs@@Base+0x34>)
   23316:	movs	r1, r0
   23318:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2331a:	mov	r4, r2
   2331c:	adds	r1, #24
   2331e:	mov	r5, r0
   23320:	mov	r0, r2
   23322:	bl	132c4 <rb_erase@@Base>
   23326:	mov	r2, r4
   23328:	str	r4, [r4, #0]
   2332a:	ldr.w	r3, [r2, #12]!
   2332e:	cmp	r3, r2
   23330:	beq.n	23340 <btrfs_record_file_extent@@Base+0x60c>
   23332:	ldr	r2, [r4, #16]
   23334:	str	r2, [r3, #4]
   23336:	str	r3, [r2, #0]
   23338:	ldr	r2, [pc, #184]	; (233f4 <btrfs_record_file_extent@@Base+0x6c0>)
   2333a:	ldr	r3, [pc, #188]	; (233f8 <btrfs_record_file_extent@@Base+0x6c4>)
   2333c:	strd	r2, r3, [r4, #12]
   23340:	ldrb.w	r3, [r4, #62]	; 0x3e
   23344:	bfc	r3, #1, #1
   23348:	strb.w	r3, [r4, #62]	; 0x3e
   2334c:	ldrd	r2, r3, [r4, #48]	; 0x30
   23350:	orrs	r3, r2
   23352:	bne.n	2336c <btrfs_record_file_extent@@Base+0x638>
   23354:	ldr	r2, [pc, #164]	; (233fc <btrfs_record_file_extent@@Base+0x6c8>)
   23356:	movs	r3, #1
   23358:	ldr	r1, [pc, #164]	; (23400 <btrfs_record_file_extent@@Base+0x6cc>)
   2335a:	ldr	r0, [pc, #168]	; (23404 <btrfs_record_file_extent@@Base+0x6d0>)
   2335c:	add	r2, pc
   2335e:	str	r3, [sp, #0]
   23360:	adds	r2, #10
   23362:	add	r1, pc
   23364:	add	r0, pc
   23366:	movs	r3, #163	; 0xa3
   23368:	bl	23250 <btrfs_record_file_extent@@Base+0x51c>
   2336c:	ldrd	r3, r2, [r4, #48]	; 0x30
   23370:	adds.w	r6, r3, #4294967295	; 0xffffffff
   23374:	adc.w	r7, r2, #4294967295	; 0xffffffff
   23378:	strd	r6, r7, [r4, #48]	; 0x30
   2337c:	orrs.w	r3, r6, r7
   23380:	bne.n	233c0 <btrfs_record_file_extent@@Base+0x68c>
   23382:	ldrb.w	r3, [r4, #62]	; 0x3e
   23386:	lsls	r3, r3, #30
   23388:	bpl.n	233a2 <btrfs_record_file_extent@@Base+0x66e>
   2338a:	ldr	r2, [pc, #124]	; (23408 <btrfs_record_file_extent@@Base+0x6d4>)
   2338c:	movs	r3, #1
   2338e:	ldr	r1, [pc, #124]	; (2340c <btrfs_record_file_extent@@Base+0x6d8>)
   23390:	ldr	r0, [pc, #124]	; (23410 <btrfs_record_file_extent@@Base+0x6dc>)
   23392:	add	r2, pc
   23394:	str	r3, [sp, #0]
   23396:	adds	r2, #10
   23398:	add	r1, pc
   2339a:	add	r0, pc
   2339c:	movs	r3, #165	; 0xa5
   2339e:	bl	23250 <btrfs_record_file_extent@@Base+0x51c>
   233a2:	ldrb.w	r3, [r4, #61]	; 0x3d
   233a6:	subs	r3, #176	; 0xb0
   233a8:	cmp	r3, #8
   233aa:	bhi.n	233da <btrfs_record_file_extent@@Base+0x6a6>
   233ac:	tbb	[pc, r3]
   233b0:	asrs	r5, r0, #20
   233b2:	asrs	r5, r0, #20
   233b4:	asrs	r5, r2, #20
   233b6:	asrs	r5, r0, #20
   233b8:	movs	r5, r0
   233ba:	mov	r0, r4
   233bc:	blx	8434 <free@plt+0x4>
   233c0:	ldrd	r0, r1, [r5]
   233c4:	orrs.w	r3, r0, r1
   233c8:	beq.n	233d6 <btrfs_record_file_extent@@Base+0x6a2>
   233ca:	adds.w	r2, r0, #4294967295	; 0xffffffff
   233ce:	adc.w	r3, r1, #4294967295	; 0xffffffff
   233d2:	strd	r2, r3, [r5]
   233d6:	add	sp, #12
   233d8:	pop	{r4, r5, r6, r7, pc}
   233da:	ldr	r2, [pc, #56]	; (23414 <btrfs_record_file_extent@@Base+0x6e0>)
   233dc:	movs	r3, #1
   233de:	ldr	r1, [pc, #56]	; (23418 <btrfs_record_file_extent@@Base+0x6e4>)
   233e0:	ldr	r0, [pc, #56]	; (2341c <btrfs_record_file_extent@@Base+0x6e8>)
   233e2:	add	r2, pc
   233e4:	str	r3, [sp, #0]
   233e6:	adds	r2, #10
   233e8:	add	r1, pc
   233ea:	add	r0, pc
   233ec:	movs	r3, #176	; 0xb0
   233ee:	bl	231f4 <btrfs_record_file_extent@@Base+0x4c0>
   233f2:	nop
   233f4:	lsls	r0, r0, #4
   233f6:	movs	r0, r2
   233f8:	lsls	r0, r0, #8
   233fa:	movs	r0, r4
   233fc:	add	r3, pc, #1008	; (adr r3, 237f0 <btrfs_add_delayed_tree_ref@@Base+0x204>)
   233fe:	movs	r1, r0
   23400:	ldr	r0, [sp, #820]	; 0x334
   23402:	movs	r1, r0
   23404:	ldr	r0, [sp, #868]	; 0x364
   23406:	movs	r1, r0
   23408:	add	r3, pc, #792	; (adr r3, 23724 <btrfs_add_delayed_tree_ref@@Base+0x138>)
   2340a:	movs	r1, r0
   2340c:	ldr	r0, [sp, #604]	; 0x25c
   2340e:	movs	r1, r0
   23410:	ldr	r0, [sp, #712]	; 0x2c8
   23412:	movs	r1, r0
   23414:	add	r3, pc, #472	; (adr r3, 235f0 <btrfs_add_delayed_tree_ref@@Base+0x4>)
   23416:	movs	r1, r0
   23418:	ldr	r0, [sp, #284]	; 0x11c
   2341a:	movs	r1, r0
   2341c:	ldr	r2, [sp, #924]	; 0x39c
   2341e:	movs	r1, r0

00023420 <btrfs_merge_delayed_refs@@Base>:
   23420:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23424:	sub	sp, #28
   23426:	ldr	r3, [r2, #24]
   23428:	mov	r5, r2
   2342a:	str	r0, [sp, #16]
   2342c:	cbz	r3, 2344e <btrfs_merge_delayed_refs@@Base+0x2e>
   2342e:	ldrb.w	r3, [r2, #60]	; 0x3c
   23432:	lsls	r3, r3, #30
   23434:	bmi.n	2344e <btrfs_merge_delayed_refs@@Base+0x2e>
   23436:	ldr	r3, [pc, #240]	; (23528 <btrfs_merge_delayed_refs@@Base+0x108>)
   23438:	add	r3, pc
   2343a:	add.w	r9, r3, #32
   2343e:	add.w	r0, r5, #24
   23442:	bl	1353a <rb_first@@Base>
   23446:	mov	fp, r0
   23448:	cmp.w	fp, #0
   2344c:	bne.n	23454 <btrfs_merge_delayed_refs@@Base+0x34>
   2344e:	add	sp, #28
   23450:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23454:	mov	r0, fp
   23456:	ldr.w	r8, [pc, #212]	; 2352c <btrfs_merge_delayed_refs@@Base+0x10c>
   2345a:	bl	1355a <rb_next@@Base>
   2345e:	mov	r4, fp
   23460:	add	r8, pc
   23462:	mov	sl, r0
   23464:	cmp.w	sl, #0
   23468:	bne.n	23472 <btrfs_merge_delayed_refs@@Base+0x52>
   2346a:	mov	r0, fp
   2346c:	bl	1355a <rb_next@@Base>
   23470:	b.n	23446 <btrfs_merge_delayed_refs@@Base+0x26>
   23472:	mov	r0, sl
   23474:	bl	1355a <rb_next@@Base>
   23478:	ldrb.w	r2, [r4, #61]	; 0x3d
   2347c:	ldrb.w	r3, [sl, #61]	; 0x3d
   23480:	cmp	r3, r2
   23482:	str	r0, [sp, #12]
   23484:	bne.n	2346a <btrfs_merge_delayed_refs@@Base+0x4a>
   23486:	cmp	r3, #176	; 0xb0
   23488:	beq.n	23492 <btrfs_merge_delayed_refs@@Base+0x72>
   2348a:	cmp	r3, #182	; 0xb6
   2348c:	beq.n	234f2 <btrfs_merge_delayed_refs@@Base+0xd2>
   2348e:	bl	2322c <btrfs_record_file_extent@@Base+0x4f8>
   23492:	ldrd	r2, r3, [r4, #64]	; 0x40
   23496:	ldrd	r6, r7, [sl, #64]	; 0x40
   2349a:	cmp	r3, r7
   2349c:	it	eq
   2349e:	cmpeq	r2, r6
   234a0:	bne.n	2346a <btrfs_merge_delayed_refs@@Base+0x4a>
   234a2:	ldrb.w	r2, [r4, #60]	; 0x3c
   234a6:	ldrb.w	r3, [sl, #60]	; 0x3c
   234aa:	ldr.w	r7, [sl, #56]	; 0x38
   234ae:	cmp	r2, r3
   234b0:	beq.n	234fc <btrfs_merge_delayed_refs@@Base+0xdc>
   234b2:	ldr	r3, [r4, #56]	; 0x38
   234b4:	cmp	r3, r7
   234b6:	itttt	ge
   234b8:	movge	r3, sl
   234ba:	movge	sl, r4
   234bc:	movge	r4, r3
   234be:	movge	r6, #0
   234c0:	ldr	r7, [r4, #56]	; 0x38
   234c2:	mov	r3, r4
   234c4:	it	lt
   234c6:	movlt	r6, #1
   234c8:	mov	r4, sl
   234ca:	negs	r7, r7
   234cc:	mov	sl, r3
   234ce:	ldr	r3, [sp, #16]
   234d0:	mov	r2, sl
   234d2:	mov	r1, r5
   234d4:	add.w	r0, r3, #40	; 0x28
   234d8:	str	r0, [sp, #20]
   234da:	bl	23318 <btrfs_record_file_extent@@Base+0x5e4>
   234de:	ldr	r3, [r4, #56]	; 0x38
   234e0:	ldr	r0, [sp, #20]
   234e2:	add	r7, r3
   234e4:	str	r7, [r4, #56]	; 0x38
   234e6:	cbnz	r7, 23500 <btrfs_merge_delayed_refs@@Base+0xe0>
   234e8:	mov	r2, r4
   234ea:	mov	r1, r5
   234ec:	bl	23318 <btrfs_record_file_extent@@Base+0x5e4>
   234f0:	b.n	2343e <btrfs_merge_delayed_refs@@Base+0x1e>
   234f2:	ldrd	r2, r3, [r4, #72]	; 0x48
   234f6:	ldrd	r6, r7, [sl, #72]	; 0x48
   234fa:	b.n	2349a <btrfs_merge_delayed_refs@@Base+0x7a>
   234fc:	movs	r6, #0
   234fe:	b.n	234ce <btrfs_merge_delayed_refs@@Base+0xae>
   23500:	ldrb.w	r3, [r4, #61]	; 0x3d
   23504:	cmp	r3, #176	; 0xb0
   23506:	beq.n	2350c <btrfs_merge_delayed_refs@@Base+0xec>
   23508:	cmp	r3, #182	; 0xb6
   2350a:	bne.n	2351e <btrfs_merge_delayed_refs@@Base+0xfe>
   2350c:	ldr	r0, [pc, #32]	; (23530 <btrfs_merge_delayed_refs@@Base+0x110>)
   2350e:	movs	r3, #1
   23510:	mov	r2, r9
   23512:	str	r3, [sp, #0]
   23514:	add	r0, pc
   23516:	movs	r3, #219	; 0xdb
   23518:	mov	r1, r8
   2351a:	bl	23250 <btrfs_record_file_extent@@Base+0x51c>
   2351e:	cmp	r6, #0
   23520:	bne.n	2343e <btrfs_merge_delayed_refs@@Base+0x1e>
   23522:	ldr.w	sl, [sp, #12]
   23526:	b.n	23464 <btrfs_merge_delayed_refs@@Base+0x44>
   23528:	add	r3, pc, #128	; (adr r3, 235ac <btrfs_select_ref_head@@Base+0x78>)
   2352a:	movs	r1, r0
   2352c:	add	r1, pc, #924	; (adr r1, 238cc <btrfs_add_delayed_tree_ref@@Base+0x2e0>)
   2352e:	movs	r1, r0
   23530:	add	r1, pc, #260	; (adr r1, 23638 <btrfs_add_delayed_tree_ref@@Base+0x4c>)
   23532:	movs	r1, r0

00023534 <btrfs_select_ref_head@@Base>:
   23534:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   23538:	add.w	r9, r0, #64	; 0x40
   2353c:	mov	r8, r0
   2353e:	movs	r5, #0
   23540:	movs	r6, #0
   23542:	movs	r7, #0
   23544:	ldrd	r2, r3, [r8, #88]	; 0x58
   23548:	mov	r0, r9
   2354a:	bl	23288 <btrfs_record_file_extent@@Base+0x554>
   2354e:	mov	r4, r0
   23550:	cbnz	r0, 23574 <btrfs_select_ref_head@@Base+0x40>
   23552:	cbz	r5, 2355e <btrfs_select_ref_head@@Base+0x2a>
   23554:	movs	r4, #0
   23556:	mov	r0, r4
   23558:	add	sp, #12
   2355a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2355e:	movs	r2, #0
   23560:	movs	r3, #0
   23562:	mov	r0, r9
   23564:	strd	r6, r7, [r8, #88]	; 0x58
   23568:	bl	23288 <btrfs_record_file_extent@@Base+0x554>
   2356c:	mov	r4, r0
   2356e:	cmp	r0, #0
   23570:	beq.n	23554 <btrfs_select_ref_head@@Base+0x20>
   23572:	movs	r5, #1
   23574:	ldrb.w	r2, [r4, #60]	; 0x3c
   23578:	mov	r3, r2
   2357a:	lsls	r2, r2, #28
   2357c:	bmi.n	235c4 <btrfs_select_ref_head@@Base+0x90>
   2357e:	orr.w	r3, r3, #8
   23582:	strb.w	r3, [r4, #60]	; 0x3c
   23586:	ldr.w	r3, [r8, #76]	; 0x4c
   2358a:	cbnz	r3, 235a6 <btrfs_select_ref_head@@Base+0x72>
   2358c:	ldr	r2, [pc, #80]	; (235e0 <btrfs_select_ref_head@@Base+0xac>)
   2358e:	movs	r3, #1
   23590:	ldr	r1, [pc, #80]	; (235e4 <btrfs_select_ref_head@@Base+0xb0>)
   23592:	ldr	r0, [pc, #84]	; (235e8 <btrfs_select_ref_head@@Base+0xb4>)
   23594:	add	r2, pc
   23596:	str	r3, [sp, #0]
   23598:	adds	r2, #42	; 0x2a
   2359a:	add	r1, pc
   2359c:	add	r0, pc
   2359e:	mov.w	r3, #290	; 0x122
   235a2:	bl	23250 <btrfs_record_file_extent@@Base+0x51c>
   235a6:	ldr.w	r3, [r8, #76]	; 0x4c
   235aa:	subs	r3, #1
   235ac:	str.w	r3, [r8, #76]	; 0x4c
   235b0:	ldrd	r3, r2, [r4]
   235b4:	ldrd	r1, r0, [r4, #8]
   235b8:	adds	r3, r3, r1
   235ba:	adc.w	r2, r0, r2
   235be:	strd	r3, r2, [r8, #88]	; 0x58
   235c2:	b.n	23556 <btrfs_select_ref_head@@Base+0x22>
   235c4:	add.w	r0, r4, #36	; 0x24
   235c8:	bl	1355a <rb_next@@Base>
   235cc:	cbnz	r0, 235da <btrfs_select_ref_head@@Base+0xa6>
   235ce:	cmp	r5, #0
   235d0:	bne.n	23554 <btrfs_select_ref_head@@Base+0x20>
   235d2:	movs	r5, #1
   235d4:	strd	r6, r7, [r8, #88]	; 0x58
   235d8:	b.n	23544 <btrfs_select_ref_head@@Base+0x10>
   235da:	sub.w	r4, r0, #36	; 0x24
   235de:	b.n	23574 <btrfs_select_ref_head@@Base+0x40>
   235e0:	add	r1, pc, #784	; (adr r1, 238f4 <btrfs_add_delayed_tree_ref@@Base+0x308>)
   235e2:	movs	r1, r0
   235e4:	add	r0, pc, #692	; (adr r0, 2389c <btrfs_add_delayed_tree_ref@@Base+0x2b0>)
   235e6:	movs	r1, r0
   235e8:	add	r1, pc, #40	; (adr r1, 23614 <btrfs_add_delayed_tree_ref@@Base+0x28>)
   235ea:	movs	r1, r0

000235ec <btrfs_add_delayed_tree_ref@@Base>:
   235ec:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   235f0:	sub	sp, #20
   235f2:	mov	fp, r1
   235f4:	strd	r2, r3, [sp, #8]
   235f8:	ldrd	r3, r4, [sp, #72]	; 0x48
   235fc:	ldrd	r9, r8, [sp, #84]	; 0x54
   23600:	cmp	r4, #0
   23602:	ldr	r7, [sp, #92]	; 0x5c
   23604:	itte	eq
   23606:	cmpeq	r3, #3
   23608:	moveq	r6, #1
   2360a:	movne	r6, #0
   2360c:	cmp.w	r8, #0
   23610:	beq.n	23632 <btrfs_add_delayed_tree_ref@@Base+0x46>
   23612:	ldrb.w	r3, [r8, #20]
   23616:	cbz	r3, 23632 <btrfs_add_delayed_tree_ref@@Base+0x46>
   23618:	ldr	r2, [pc, #920]	; (239b4 <btrfs_add_delayed_tree_ref@@Base+0x3c8>)
   2361a:	movs	r3, #1
   2361c:	ldr	r1, [pc, #920]	; (239b8 <btrfs_add_delayed_tree_ref@@Base+0x3cc>)
   2361e:	ldr	r0, [pc, #924]	; (239bc <btrfs_add_delayed_tree_ref@@Base+0x3d0>)
   23620:	add	r2, pc
   23622:	adds	r2, #64	; 0x40
   23624:	add	r1, pc
   23626:	add	r0, pc
   23628:	str	r3, [sp, #0]
   2362a:	mov.w	r3, #568	; 0x238
   2362e:	bl	231f4 <btrfs_record_file_extent@@Base+0x4c0>
   23632:	movs	r0, #88	; 0x58
   23634:	blx	8678 <malloc@plt+0x4>
   23638:	mov	r5, r0
   2363a:	cmp	r0, #0
   2363c:	beq.n	236c8 <btrfs_add_delayed_tree_ref@@Base+0xdc>
   2363e:	ldrd	r3, r4, [sp, #64]	; 0x40
   23642:	movs	r2, #1
   23644:	add.w	sl, r5, #12
   23648:	str	r5, [r5, #0]
   2364a:	orrs	r3, r4
   2364c:	mov.w	r3, #0
   23650:	strd	r2, r3, [r5, #48]	; 0x30
   23654:	mov.w	r2, #0
   23658:	ldrd	r3, r4, [sp, #8]
   2365c:	ite	ne
   2365e:	movne	r0, #182	; 0xb6
   23660:	moveq	r0, #176	; 0xb0
   23662:	cmp.w	r9, #3
   23666:	strb.w	r0, [r5, #61]	; 0x3d
   2366a:	mov.w	r0, #64	; 0x40
   2366e:	strd	r3, r4, [r5, #24]
   23672:	it	ne
   23674:	movne	ip, r9
   23676:	ldrd	r3, r4, [sp, #56]	; 0x38
   2367a:	it	eq
   2367c:	moveq.w	ip, #1
   23680:	strd	sl, sl, [r5, #12]
   23684:	strb.w	ip, [r5, #60]	; 0x3c
   23688:	strd	r3, r4, [r5, #32]
   2368c:	movs	r3, #1
   2368e:	str	r3, [r5, #56]	; 0x38
   23690:	ldrb.w	r3, [r5, #62]	; 0x3e
   23694:	bic.w	r3, r3, #3
   23698:	orr.w	r3, r3, #2
   2369c:	strb.w	r3, [r5, #62]	; 0x3e
   236a0:	movs	r3, #0
   236a2:	strd	r2, r3, [r5, #40]	; 0x28
   236a6:	ldrd	r3, r4, [sp, #72]	; 0x48
   236aa:	strd	r3, r4, [r5, #64]	; 0x40
   236ae:	ldrd	r3, r4, [sp, #64]	; 0x40
   236b2:	strd	r3, r4, [r5, #72]	; 0x48
   236b6:	ldr	r3, [sp, #80]	; 0x50
   236b8:	str	r3, [r5, #80]	; 0x50
   236ba:	blx	8678 <malloc@plt+0x4>
   236be:	mov	r4, r0
   236c0:	cbnz	r0, 236ce <btrfs_add_delayed_tree_ref@@Base+0xe2>
   236c2:	mov	r0, r5
   236c4:	blx	8434 <free@plt+0x4>
   236c8:	mvn.w	r0, #11
   236cc:	b.n	23864 <btrfs_add_delayed_tree_ref@@Base+0x278>
   236ce:	cmp.w	r9, #4
   236d2:	beq.n	2377e <btrfs_add_delayed_tree_ref@@Base+0x192>
   236d4:	cmp.w	r9, #2
   236d8:	sub.w	lr, r9, #3
   236dc:	ite	ne
   236de:	movne.w	ip, #1
   236e2:	moveq.w	ip, #4294967295	; 0xffffffff
   236e6:	rsbs	r3, lr, #0
   236ea:	adc.w	r3, r3, lr
   236ee:	movs	r0, #1
   236f0:	movs	r1, #0
   236f2:	strd	r0, r1, [r4, #16]
   236f6:	orr.w	r6, r3, r6, lsl #2
   236fa:	ldrd	r1, r2, [sp, #8]
   236fe:	add.w	r0, r4, #28
   23702:	ldrb.w	r9, [r4, #60]	; 0x3c
   23706:	mov.w	lr, #0
   2370a:	strd	r8, ip, [r4, #48]	; 0x30
   2370e:	strd	r1, r2, [r4]
   23712:	bic.w	r9, r9, #15
   23716:	ldrd	r1, r2, [sp, #56]	; 0x38
   2371a:	orr.w	r6, r6, r9
   2371e:	str.w	ip, [r4, #56]	; 0x38
   23722:	add.w	ip, fp, #64	; 0x40
   23726:	strd	r0, r0, [r4, #28]
   2372a:	add.w	r0, r4, #36	; 0x24
   2372e:	mov	r8, ip
   23730:	strd	r1, r2, [r4, #8]
   23734:	str.w	lr, [r4, #24]
   23738:	str	r0, [r4, #36]	; 0x24
   2373a:	strb.w	r6, [r4, #60]	; 0x3c
   2373e:	ldr.w	r6, [r8]
   23742:	cbnz	r6, 23786 <btrfs_add_delayed_tree_ref@@Base+0x19a>
   23744:	strd	lr, r6, [r4, #36]	; 0x24
   23748:	mov	r1, ip
   2374a:	str	r6, [r4, #44]	; 0x2c
   2374c:	str.w	r0, [r8]
   23750:	bl	1321e <rb_insert_color@@Base>
   23754:	cmp	r7, #0
   23756:	bne.w	238b6 <btrfs_add_delayed_tree_ref@@Base+0x2ca>
   2375a:	ldr.w	r3, [fp, #72]	; 0x48
   2375e:	adds	r3, #1
   23760:	str.w	r3, [fp, #72]	; 0x48
   23764:	ldr.w	r3, [fp, #76]	; 0x4c
   23768:	adds	r3, #1
   2376a:	str.w	r3, [fp, #76]	; 0x4c
   2376e:	ldrd	r3, r2, [fp, #40]	; 0x28
   23772:	adds	r3, #1
   23774:	adc.w	r2, r2, #0
   23778:	strd	r3, r2, [fp, #40]	; 0x28
   2377c:	b.n	23816 <btrfs_add_delayed_tree_ref@@Base+0x22a>
   2377e:	mov.w	ip, #0
   23782:	mov	r3, ip
   23784:	b.n	236ee <btrfs_add_delayed_tree_ref@@Base+0x102>
   23786:	ldrd	r8, r9, [r6, #-36]	; 0x24
   2378a:	ldrd	r1, r2, [sp, #8]
   2378e:	cmp	r2, r9
   23790:	it	eq
   23792:	cmpeq	r1, r8
   23794:	bcs.n	2379e <btrfs_add_delayed_tree_ref@@Base+0x1b2>
   23796:	add.w	r8, r6, #8
   2379a:	mov	lr, r6
   2379c:	b.n	2373e <btrfs_add_delayed_tree_ref@@Base+0x152>
   2379e:	ldrd	r1, r2, [sp, #8]
   237a2:	cmp	r9, r2
   237a4:	it	eq
   237a6:	cmpeq	r8, r1
   237a8:	bcs.n	237b0 <btrfs_add_delayed_tree_ref@@Base+0x1c4>
   237aa:	add.w	r8, r6, #4
   237ae:	b.n	2379a <btrfs_add_delayed_tree_ref@@Base+0x1ae>
   237b0:	ldrb.w	r1, [r4, #60]	; 0x3c
   237b4:	ldrb	r2, [r6, #24]
   237b6:	eor.w	r0, r1, r2
   237ba:	lsls	r0, r0, #30
   237bc:	bpl.n	237d6 <btrfs_add_delayed_tree_ref@@Base+0x1ea>
   237be:	ldr	r2, [pc, #512]	; (239c0 <btrfs_add_delayed_tree_ref@@Base+0x3d4>)
   237c0:	movs	r3, #1
   237c2:	ldr	r1, [pc, #512]	; (239c4 <btrfs_add_delayed_tree_ref@@Base+0x3d8>)
   237c4:	ldr	r0, [pc, #512]	; (239c8 <btrfs_add_delayed_tree_ref@@Base+0x3dc>)
   237c6:	add	r2, pc
   237c8:	str	r3, [sp, #0]
   237ca:	adds	r2, #91	; 0x5b
   237cc:	add	r1, pc
   237ce:	add	r0, pc
   237d0:	movw	r3, #363	; 0x16b
   237d4:	b.n	2362e <btrfs_add_delayed_tree_ref@@Base+0x42>
   237d6:	lsls	r1, r1, #31
   237d8:	itttt	mi
   237da:	bfimi	r2, r3, #0, #1
   237de:	strbmi	r2, [r6, #24]
   237e0:	ldrdmi	r2, r3, [r4, #8]
   237e4:	strdmi	r2, r3, [r6, #-28]
   237e8:	ldr	r3, [r4, #48]	; 0x30
   237ea:	cbz	r3, 237f4 <btrfs_add_delayed_tree_ref@@Base+0x208>
   237ec:	ldr	r2, [r6, #12]
   237ee:	cmp	r2, #0
   237f0:	bne.n	2386a <btrfs_add_delayed_tree_ref@@Base+0x27e>
   237f2:	str	r3, [r6, #12]
   237f4:	cbz	r7, 237fa <btrfs_add_delayed_tree_ref@@Base+0x20e>
   237f6:	ldr	r3, [r6, #16]
   237f8:	str	r3, [r7, #0]
   237fa:	ldr	r2, [r4, #56]	; 0x38
   237fc:	mov	r0, r4
   237fe:	ldr	r3, [r6, #20]
   23800:	sub.w	r7, r6, #36	; 0x24
   23804:	add	r3, r2
   23806:	str	r3, [r6, #20]
   23808:	ldr	r3, [r6, #16]
   2380a:	ldr	r2, [r4, #56]	; 0x38
   2380c:	mov	r4, r7
   2380e:	add	r3, r2
   23810:	str	r3, [r6, #16]
   23812:	blx	8434 <free@plt+0x4>
   23816:	ldr	r3, [sp, #96]	; 0x60
   23818:	cbz	r3, 23820 <btrfs_add_delayed_tree_ref@@Base+0x234>
   2381a:	ldr	r3, [r4, #52]	; 0x34
   2381c:	ldr	r2, [sp, #96]	; 0x60
   2381e:	str	r3, [r2, #0]
   23820:	add.w	r1, r4, #24
   23824:	movs	r0, #0
   23826:	mov	r3, r1
   23828:	ldr	r2, [r3, #0]
   2382a:	cmp	r2, #0
   2382c:	bne.n	238ba <btrfs_add_delayed_tree_ref@@Base+0x2ce>
   2382e:	strd	r0, r2, [r5]
   23832:	mov	r0, r5
   23834:	str	r2, [r5, #8]
   23836:	str	r5, [r3, #0]
   23838:	bl	1321e <rb_insert_color@@Base>
   2383c:	ldrb.w	r3, [r5, #60]	; 0x3c
   23840:	cmp	r3, #1
   23842:	bne.n	23854 <btrfs_add_delayed_tree_ref@@Base+0x268>
   23844:	ldr	r3, [r4, #32]
   23846:	adds	r4, #28
   23848:	str.w	sl, [r4, #4]
   2384c:	strd	r4, r3, [r5, #12]
   23850:	str.w	sl, [r3]
   23854:	ldrd	r3, r2, [fp, #40]	; 0x28
   23858:	adds	r3, #1
   2385a:	adc.w	r2, r2, #0
   2385e:	strd	r3, r2, [fp, #40]	; 0x28
   23862:	movs	r0, #0
   23864:	add	sp, #20
   23866:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2386a:	ldrb	r1, [r3, #18]
   2386c:	cbz	r1, 23888 <btrfs_add_delayed_tree_ref@@Base+0x29c>
   2386e:	add.w	r1, r3, #16
   23872:	ldr.w	r0, [r3], #4
   23876:	cmp	r3, r1
   23878:	str.w	r0, [r2], #4
   2387c:	bne.n	23872 <btrfs_add_delayed_tree_ref@@Base+0x286>
   2387e:	ldrb	r3, [r3, #0]
   23880:	strb	r3, [r2, #0]
   23882:	movs	r2, #1
   23884:	ldr	r3, [r6, #12]
   23886:	strb	r2, [r3, #18]
   23888:	ldr	r0, [r4, #48]	; 0x30
   2388a:	ldrb	r3, [r0, #19]
   2388c:	cbz	r3, 238aa <btrfs_add_delayed_tree_ref@@Base+0x2be>
   2388e:	ldr	r1, [r6, #12]
   23890:	ldrd	r2, r0, [r0, #24]
   23894:	ldr	r3, [r1, #28]
   23896:	str	r3, [sp, #8]
   23898:	ldr	r3, [r1, #24]
   2389a:	orrs	r2, r3
   2389c:	ldr	r3, [sp, #8]
   2389e:	orrs	r3, r0
   238a0:	strd	r2, r3, [r1, #24]
   238a4:	ldr	r3, [r6, #12]
   238a6:	movs	r2, #1
   238a8:	strb	r2, [r3, #19]
   238aa:	ldr	r0, [r4, #48]	; 0x30
   238ac:	cmp	r0, #0
   238ae:	beq.n	237f4 <btrfs_add_delayed_tree_ref@@Base+0x208>
   238b0:	blx	8434 <free@plt+0x4>
   238b4:	b.n	237f4 <btrfs_add_delayed_tree_ref@@Base+0x208>
   238b6:	str	r6, [r7, #0]
   238b8:	b.n	2375a <btrfs_add_delayed_tree_ref@@Base+0x16e>
   238ba:	ldrb.w	r3, [r5, #61]	; 0x3d
   238be:	ldrb.w	r0, [r2, #61]	; 0x3d
   238c2:	cmp	r3, r0
   238c4:	bcc.n	23964 <btrfs_add_delayed_tree_ref@@Base+0x378>
   238c6:	bhi.n	238ec <btrfs_add_delayed_tree_ref@@Base+0x300>
   238c8:	cmp	r3, #176	; 0xb0
   238ca:	beq.n	238d4 <btrfs_add_delayed_tree_ref@@Base+0x2e8>
   238cc:	cmp	r3, #182	; 0xb6
   238ce:	beq.n	238f0 <btrfs_add_delayed_tree_ref@@Base+0x304>
   238d0:	bl	2322c <btrfs_record_file_extent@@Base+0x4f8>
   238d4:	ldrd	r6, r7, [r5, #64]	; 0x40
   238d8:	ldrd	r8, r9, [r2, #64]	; 0x40
   238dc:	cmp	r7, r9
   238de:	it	eq
   238e0:	cmpeq	r6, r8
   238e2:	bcc.n	23964 <btrfs_add_delayed_tree_ref@@Base+0x378>
   238e4:	cmp	r9, r7
   238e6:	it	eq
   238e8:	cmpeq	r8, r6
   238ea:	bcs.n	238fa <btrfs_add_delayed_tree_ref@@Base+0x30e>
   238ec:	adds	r3, r2, #4
   238ee:	b.n	23968 <btrfs_add_delayed_tree_ref@@Base+0x37c>
   238f0:	ldrd	r6, r7, [r5, #72]	; 0x48
   238f4:	ldrd	r8, r9, [r2, #72]	; 0x48
   238f8:	b.n	238dc <btrfs_add_delayed_tree_ref@@Base+0x2f0>
   238fa:	ldrd	r6, r7, [r5, #40]	; 0x28
   238fe:	ldrd	r8, r9, [r2, #40]	; 0x28
   23902:	cmp	r7, r9
   23904:	it	eq
   23906:	cmpeq	r6, r8
   23908:	bcc.n	23964 <btrfs_add_delayed_tree_ref@@Base+0x378>
   2390a:	cmp	r9, r7
   2390c:	it	eq
   2390e:	cmpeq	r8, r6
   23910:	bcc.n	238ec <btrfs_add_delayed_tree_ref@@Base+0x300>
   23912:	ldrb.w	r0, [r5, #60]	; 0x3c
   23916:	ldrb.w	r1, [r2, #60]	; 0x3c
   2391a:	ldr	r3, [r5, #56]	; 0x38
   2391c:	cmp	r1, r0
   2391e:	beq.n	2394a <btrfs_add_delayed_tree_ref@@Base+0x35e>
   23920:	ldr	r1, [r2, #56]	; 0x38
   23922:	cmp	r3, r1
   23924:	ble.n	239a8 <btrfs_add_delayed_tree_ref@@Base+0x3bc>
   23926:	strb.w	r0, [r2, #60]	; 0x3c
   2392a:	negs	r3, r1
   2392c:	ldr	r1, [r5, #56]	; 0x38
   2392e:	add.w	r0, r2, #12
   23932:	str	r1, [r2, #56]	; 0x38
   23934:	ldrb.w	r1, [r5, #60]	; 0x3c
   23938:	cmp	r1, #1
   2393a:	bne.n	2396c <btrfs_add_delayed_tree_ref@@Base+0x380>
   2393c:	ldr	r1, [r4, #32]
   2393e:	add.w	r6, r4, #28
   23942:	str	r0, [r4, #32]
   23944:	strd	r6, r1, [r2, #12]
   23948:	str	r0, [r1, #0]
   2394a:	ldr	r1, [r2, #56]	; 0x38
   2394c:	add	r3, r1
   2394e:	str	r3, [r2, #56]	; 0x38
   23950:	cbnz	r3, 2395c <btrfs_add_delayed_tree_ref@@Base+0x370>
   23952:	add.w	r0, fp, #40	; 0x28
   23956:	mov	r1, r4
   23958:	bl	23318 <btrfs_record_file_extent@@Base+0x5e4>
   2395c:	mov	r0, r5
   2395e:	blx	8434 <free@plt+0x4>
   23962:	b.n	23862 <btrfs_add_delayed_tree_ref@@Base+0x276>
   23964:	add.w	r3, r2, #8
   23968:	mov	r0, r2
   2396a:	b.n	23828 <btrfs_add_delayed_tree_ref@@Base+0x23c>
   2396c:	cmp	r1, #2
   2396e:	bne.n	23998 <btrfs_add_delayed_tree_ref@@Base+0x3ac>
   23970:	ldr	r1, [r2, #12]
   23972:	cmp	r1, r0
   23974:	bne.n	23988 <btrfs_add_delayed_tree_ref@@Base+0x39c>
   23976:	ldr	r1, [pc, #84]	; (239cc <btrfs_add_delayed_tree_ref@@Base+0x3e0>)
   23978:	mov.w	r2, #330	; 0x14a
   2397c:	ldr	r0, [pc, #80]	; (239d0 <btrfs_add_delayed_tree_ref@@Base+0x3e4>)
   2397e:	add	r1, pc
   23980:	adds	r1, #116	; 0x74
   23982:	add	r0, pc
   23984:	bl	232da <btrfs_record_file_extent@@Base+0x5a6>
   23988:	ldr	r0, [r2, #16]
   2398a:	str	r0, [r1, #4]
   2398c:	str	r1, [r0, #0]
   2398e:	ldr	r0, [pc, #28]	; (239ac <btrfs_add_delayed_tree_ref@@Base+0x3c0>)
   23990:	ldr	r1, [pc, #28]	; (239b0 <btrfs_add_delayed_tree_ref@@Base+0x3c4>)
   23992:	strd	r0, r1, [r2, #12]
   23996:	b.n	2394a <btrfs_add_delayed_tree_ref@@Base+0x35e>
   23998:	ldr	r1, [pc, #56]	; (239d4 <btrfs_add_delayed_tree_ref@@Base+0x3e8>)
   2399a:	movw	r2, #333	; 0x14d
   2399e:	ldr	r0, [pc, #56]	; (239d8 <btrfs_add_delayed_tree_ref@@Base+0x3ec>)
   239a0:	add	r1, pc
   239a2:	adds	r1, #116	; 0x74
   239a4:	add	r0, pc
   239a6:	b.n	23984 <btrfs_add_delayed_tree_ref@@Base+0x398>
   239a8:	negs	r3, r3
   239aa:	b.n	2394a <btrfs_add_delayed_tree_ref@@Base+0x35e>
   239ac:	lsls	r0, r0, #4
   239ae:	movs	r0, r2
   239b0:	lsls	r0, r0, #8
   239b2:	movs	r0, r4
   239b4:	add	r1, pc, #224	; (adr r1, 23a98 <btrfs_destroy_delayed_refs@@Base+0xbc>)
   239b6:	movs	r1, r0
   239b8:	add	r0, pc, #140	; (adr r0, 23a48 <btrfs_destroy_delayed_refs@@Base+0x6c>)
   239ba:	movs	r1, r0
   239bc:	add	r0, pc, #652	; (adr r0, 23c4c <btrfs_destroy_delayed_refs@@Base+0x270>)
   239be:	movs	r1, r0
   239c0:	ldr	r7, [sp, #584]	; 0x248
   239c2:	movs	r1, r0
   239c4:	ldr	r6, [sp, #492]	; 0x1ec
   239c6:	movs	r1, r0
   239c8:	ldr	r7, [sp, #108]	; 0x6c
   239ca:	movs	r1, r0
   239cc:	ldr	r5, [sp, #872]	; 0x368
   239ce:	movs	r1, r0
   239d0:	ldr	r5, [sp, #560]	; 0x230
   239d2:	movs	r1, r0
   239d4:	ldr	r5, [sp, #736]	; 0x2e0
   239d6:	movs	r1, r0
   239d8:	strh	r6, [r3, #20]
   239da:	movs	r1, r0

000239dc <btrfs_destroy_delayed_refs@@Base>:
   239dc:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   239e0:	mov	r5, r0
   239e2:	ldr	r3, [r0, #64]	; 0x40
   239e4:	cbnz	r3, 239f4 <btrfs_destroy_delayed_refs@@Base+0x18>
   239e6:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   239ea:	mov	r1, r9
   239ec:	mov	r0, r8
   239ee:	bl	23318 <btrfs_record_file_extent@@Base+0x5e4>
   239f2:	b.n	23a10 <btrfs_destroy_delayed_refs@@Base+0x34>
   239f4:	mov	r6, r0
   239f6:	add.w	r8, r0, #40	; 0x28
   239fa:	ldr.w	r7, [r6], #64
   239fe:	mov	r0, r6
   23a00:	bl	1353a <rb_first@@Base>
   23a04:	cmp	r0, #0
   23a06:	beq.n	239e6 <btrfs_destroy_delayed_refs@@Base+0xa>
   23a08:	sub.w	r9, r0, #36	; 0x24
   23a0c:	sub.w	r4, r0, #12
   23a10:	mov	r0, r4
   23a12:	bl	1353a <rb_first@@Base>
   23a16:	mov	r2, r0
   23a18:	cmp	r0, #0
   23a1a:	bne.n	239ea <btrfs_destroy_delayed_refs@@Base+0xe>
   23a1c:	mov	r2, r9
   23a1e:	mov	r1, r7
   23a20:	mov	r0, r5
   23a22:	bl	22520 <cleanup_ref_head@@Base>
   23a26:	cmp	r0, #0
   23a28:	beq.n	239fe <btrfs_destroy_delayed_refs@@Base+0x22>
   23a2a:	ldr	r1, [pc, #16]	; (23a3c <btrfs_destroy_delayed_refs@@Base+0x60>)
   23a2c:	movw	r2, #629	; 0x275
   23a30:	ldr	r0, [pc, #12]	; (23a40 <btrfs_destroy_delayed_refs@@Base+0x64>)
   23a32:	add	r1, pc
   23a34:	adds	r1, #135	; 0x87
   23a36:	add	r0, pc
   23a38:	bl	232da <btrfs_record_file_extent@@Base+0x5a6>
   23a3c:	ldr	r5, [sp, #152]	; 0x98
   23a3e:	movs	r1, r0
   23a40:	ldr	r4, [sp, #984]	; 0x3d8
   23a42:	movs	r1, r0
   23a44:	ldr.w	ip, [pc, #60]	; 23a84 <btrfs_destroy_delayed_refs@@Base+0xa8>
   23a48:	push	{r0, r1, r2, r3, r4, lr}
   23a4a:	add	ip, pc
   23a4c:	ldr	r3, [pc, #56]	; (23a88 <btrfs_destroy_delayed_refs@@Base+0xac>)
   23a4e:	add.w	r2, r1, r2, lsl #3
   23a52:	mov	r1, sp
   23a54:	ldr.w	r3, [ip, r3]
   23a58:	ldr	r3, [r3, #0]
   23a5a:	str	r3, [sp, #12]
   23a5c:	mov.w	r3, #0
   23a60:	movs	r3, #8
   23a62:	bl	16a0e <read_extent_buffer@@Base>
   23a66:	ldr	r2, [pc, #36]	; (23a8c <btrfs_destroy_delayed_refs@@Base+0xb0>)
   23a68:	ldr	r3, [pc, #28]	; (23a88 <btrfs_destroy_delayed_refs@@Base+0xac>)
   23a6a:	add	r2, pc
   23a6c:	ldrd	r0, r1, [sp]
   23a70:	ldr	r3, [r2, r3]
   23a72:	ldr	r2, [r3, #0]
   23a74:	ldr	r3, [sp, #12]
   23a76:	eors	r2, r3
   23a78:	beq.n	23a7e <btrfs_destroy_delayed_refs@@Base+0xa2>
   23a7a:	blx	8510 <__stack_chk_fail@plt>
   23a7e:	add	sp, #20
   23a80:	ldr.w	pc, [sp], #4
   23a84:	lsls	r2, r7, #12
   23a86:	movs	r4, r0
   23a88:	lsls	r0, r4, #8
   23a8a:	movs	r0, r0
   23a8c:	lsls	r2, r3, #12
   23a8e:	movs	r4, r0
   23a90:	ldr	r2, [pc, #60]	; (23ad0 <btrfs_destroy_delayed_refs@@Base+0xf4>)
   23a92:	movs	r1, #16
   23a94:	ldr	r3, [pc, #60]	; (23ad4 <btrfs_destroy_delayed_refs@@Base+0xf8>)
   23a96:	push	{r4, lr}
   23a98:	add	r2, pc
   23a9a:	sub	sp, #72	; 0x48
   23a9c:	add	r4, sp, #4
   23a9e:	ldr	r3, [r2, r3]
   23aa0:	mov	r0, r4
   23aa2:	ldr	r3, [r3, #0]
   23aa4:	str	r3, [sp, #68]	; 0x44
   23aa6:	mov.w	r3, #0
   23aaa:	blx	86c4 <backtrace@plt>
   23aae:	movs	r2, #2
   23ab0:	mov	r1, r0
   23ab2:	mov	r0, r4
   23ab4:	blx	89c8 <backtrace_symbols_fd@plt>
   23ab8:	ldr	r2, [pc, #28]	; (23ad8 <btrfs_destroy_delayed_refs@@Base+0xfc>)
   23aba:	ldr	r3, [pc, #24]	; (23ad4 <btrfs_destroy_delayed_refs@@Base+0xf8>)
   23abc:	add	r2, pc
   23abe:	ldr	r3, [r2, r3]
   23ac0:	ldr	r2, [r3, #0]
   23ac2:	ldr	r3, [sp, #68]	; 0x44
   23ac4:	eors	r2, r3
   23ac6:	beq.n	23acc <btrfs_destroy_delayed_refs@@Base+0xf0>
   23ac8:	blx	8510 <__stack_chk_fail@plt>
   23acc:	add	sp, #72	; 0x48
   23ace:	pop	{r4, pc}
   23ad0:	lsls	r4, r5, #11
   23ad2:	movs	r4, r0
   23ad4:	lsls	r0, r4, #8
   23ad6:	movs	r0, r0
   23ad8:	lsls	r0, r1, #11
   23ada:	movs	r4, r0
   23adc:	push	{r4, r5, r6, lr}
   23ade:	mov	r6, r0
   23ae0:	movs	r4, #0
   23ae2:	and.w	r0, r0, #1
   23ae6:	mov	r1, r4
   23ae8:	orrs.w	r3, r0, r1
   23aec:	beq.n	23b7e <btrfs_destroy_delayed_refs@@Base+0x1a2>
   23aee:	ldr	r1, [pc, #240]	; (23be0 <btrfs_destroy_delayed_refs@@Base+0x204>)
   23af0:	mov	r0, r2
   23af2:	add	r1, pc
   23af4:	blx	85f8 <strcpy@plt>
   23af8:	mov	r2, r0
   23afa:	and.w	r0, r6, #4
   23afe:	movs	r1, #0
   23b00:	orrs.w	r3, r0, r1
   23b04:	beq.n	23b20 <btrfs_destroy_delayed_refs@@Base+0x144>
   23b06:	cbnz	r4, 23b14 <btrfs_destroy_delayed_refs@@Base+0x138>
   23b08:	ldr	r1, [pc, #216]	; (23be4 <btrfs_destroy_delayed_refs@@Base+0x208>)
   23b0a:	mov	r0, r2
   23b0c:	add	r1, pc
   23b0e:	blx	85b0 <strcat@plt+0x4>
   23b12:	mov	r2, r0
   23b14:	ldr	r1, [pc, #208]	; (23be8 <btrfs_destroy_delayed_refs@@Base+0x20c>)
   23b16:	mov	r0, r2
   23b18:	add	r1, pc
   23b1a:	blx	85b0 <strcat@plt+0x4>
   23b1e:	mov	r2, r0
   23b20:	and.w	r0, r6, #2
   23b24:	movs	r1, #0
   23b26:	orrs.w	r3, r0, r1
   23b2a:	beq.n	23b46 <btrfs_destroy_delayed_refs@@Base+0x16a>
   23b2c:	cbnz	r4, 23b3a <btrfs_destroy_delayed_refs@@Base+0x15e>
   23b2e:	ldr	r1, [pc, #188]	; (23bec <btrfs_destroy_delayed_refs@@Base+0x210>)
   23b30:	mov	r0, r2
   23b32:	add	r1, pc
   23b34:	blx	85b0 <strcat@plt+0x4>
   23b38:	mov	r2, r0
   23b3a:	ldr	r1, [pc, #180]	; (23bf0 <btrfs_destroy_delayed_refs@@Base+0x214>)
   23b3c:	mov	r0, r2
   23b3e:	add	r1, pc
   23b40:	blx	85b0 <strcat@plt+0x4>
   23b44:	mov	r2, r0
   23b46:	and.w	r4, r6, #2040	; 0x7f8
   23b4a:	movs	r5, #0
   23b4c:	cmp	r5, #0
   23b4e:	it	eq
   23b50:	cmpeq	r4, #128	; 0x80
   23b52:	beq.n	23bda <btrfs_destroy_delayed_refs@@Base+0x1fe>
   23b54:	cmp	r5, #0
   23b56:	it	eq
   23b58:	cmpeq	r4, #129	; 0x81
   23b5a:	bcs.n	23b90 <btrfs_destroy_delayed_refs@@Base+0x1b4>
   23b5c:	cmp	r5, #0
   23b5e:	it	eq
   23b60:	cmpeq	r4, #32
   23b62:	beq.n	23bd4 <btrfs_destroy_delayed_refs@@Base+0x1f8>
   23b64:	cmp	r5, #0
   23b66:	it	eq
   23b68:	cmpeq	r4, #33	; 0x21
   23b6a:	bcs.n	23b82 <btrfs_destroy_delayed_refs@@Base+0x1a6>
   23b6c:	cmp	r5, #0
   23b6e:	it	eq
   23b70:	cmpeq	r4, #8
   23b72:	beq.n	23bb4 <btrfs_destroy_delayed_refs@@Base+0x1d8>
   23b74:	cmp	r5, #0
   23b76:	it	eq
   23b78:	cmpeq	r4, #16
   23b7a:	beq.n	23bc2 <btrfs_destroy_delayed_refs@@Base+0x1e6>
   23b7c:	pop	{r4, r5, r6, pc}
   23b7e:	movs	r4, #1
   23b80:	b.n	23afa <btrfs_destroy_delayed_refs@@Base+0x11e>
   23b82:	cmp	r5, #0
   23b84:	it	eq
   23b86:	cmpeq	r4, #64	; 0x40
   23b88:	bne.n	23b7c <btrfs_destroy_delayed_refs@@Base+0x1a0>
   23b8a:	ldr	r1, [pc, #104]	; (23bf4 <btrfs_destroy_delayed_refs@@Base+0x218>)
   23b8c:	add	r1, pc
   23b8e:	b.n	23bb8 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   23b90:	cmp	r5, #0
   23b92:	it	eq
   23b94:	cmpeq.w	r4, #512	; 0x200
   23b98:	beq.n	23bc8 <btrfs_destroy_delayed_refs@@Base+0x1ec>
   23b9a:	cmp	r5, #0
   23b9c:	it	eq
   23b9e:	cmpeq.w	r4, #1024	; 0x400
   23ba2:	beq.n	23bce <btrfs_destroy_delayed_refs@@Base+0x1f2>
   23ba4:	cmp	r5, #0
   23ba6:	it	eq
   23ba8:	cmpeq.w	r4, #256	; 0x100
   23bac:	bne.n	23b7c <btrfs_destroy_delayed_refs@@Base+0x1a0>
   23bae:	ldr	r1, [pc, #72]	; (23bf8 <btrfs_destroy_delayed_refs@@Base+0x21c>)
   23bb0:	add	r1, pc
   23bb2:	b.n	23bb8 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   23bb4:	ldr	r1, [pc, #68]	; (23bfc <btrfs_destroy_delayed_refs@@Base+0x220>)
   23bb6:	add	r1, pc
   23bb8:	ldmia.w	sp!, {r4, r5, r6, lr}
   23bbc:	mov	r0, r2
   23bbe:	b.w	85ac <strcat@plt>
   23bc2:	ldr	r1, [pc, #60]	; (23c00 <btrfs_destroy_delayed_refs@@Base+0x224>)
   23bc4:	add	r1, pc
   23bc6:	b.n	23bb8 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   23bc8:	ldr	r1, [pc, #56]	; (23c04 <btrfs_destroy_delayed_refs@@Base+0x228>)
   23bca:	add	r1, pc
   23bcc:	b.n	23bb8 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   23bce:	ldr	r1, [pc, #56]	; (23c08 <btrfs_destroy_delayed_refs@@Base+0x22c>)
   23bd0:	add	r1, pc
   23bd2:	b.n	23bb8 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   23bd4:	ldr	r1, [pc, #52]	; (23c0c <btrfs_destroy_delayed_refs@@Base+0x230>)
   23bd6:	add	r1, pc
   23bd8:	b.n	23bb8 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   23bda:	ldr	r1, [pc, #52]	; (23c10 <btrfs_destroy_delayed_refs@@Base+0x234>)
   23bdc:	add	r1, pc
   23bde:	b.n	23bb8 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   23be0:	add	r3, sp, #956	; 0x3bc
   23be2:	movs	r1, r0
   23be4:	strb	r1, [r2, #13]
   23be6:	movs	r1, r0
   23be8:	add	r3, sp, #832	; 0x340
   23bea:	movs	r1, r0
   23bec:	strb	r3, [r5, #12]
   23bee:	movs	r1, r0
   23bf0:	add	r3, sp, #724	; 0x2d4
   23bf2:	movs	r1, r0
   23bf4:	ldr	r4, [sp, #588]	; 0x24c
   23bf6:	movs	r1, r0
   23bf8:	ldr	r4, [sp, #504]	; 0x1f8
   23bfa:	movs	r1, r0
   23bfc:	ldr	r4, [sp, #272]	; 0x110
   23bfe:	movs	r1, r0
   23c00:	ldr	r4, [sp, #244]	; 0xf4
   23c02:	movs	r1, r0
   23c04:	ldr	r4, [sp, #248]	; 0xf8
   23c06:	movs	r1, r0
   23c08:	ldr	r4, [sp, #260]	; 0x104
   23c0a:	movs	r1, r0
   23c0c:	ldr	r4, [sp, #272]	; 0x110
   23c0e:	movs	r1, r0
   23c10:	ldr	r4, [sp, #300]	; 0x12c
   23c12:	movs	r1, r0
   23c14:	push	{r4, lr}
   23c16:	sub	sp, #24
   23c18:	ldr	r2, [r0, #64]	; 0x40
   23c1a:	mov	r4, r0
   23c1c:	ldr	r3, [r0, #68]	; 0x44
   23c1e:	ldr	r1, [pc, #112]	; (23c90 <btrfs_destroy_delayed_refs@@Base+0x2b4>)
   23c20:	strd	r2, r3, [sp, #16]
   23c24:	add	r1, pc
   23c26:	ldr	r2, [r0, #56]	; 0x38
   23c28:	ldr	r3, [r0, #60]	; 0x3c
   23c2a:	strd	r2, r3, [sp, #8]
   23c2e:	ldr	r2, [r0, #16]
   23c30:	ldr	r3, [r0, #20]
   23c32:	strd	r2, r3, [sp]
   23c36:	ldr	r2, [r0, #0]
   23c38:	ldr	r3, [r0, #4]
   23c3a:	movs	r0, #1
   23c3c:	blx	8838 <__printf_chk@plt+0x4>
   23c40:	ldr	r2, [r4, #32]
   23c42:	ldr	r3, [r4, #36]	; 0x24
   23c44:	movs	r0, #1
   23c46:	ldr	r1, [pc, #76]	; (23c94 <btrfs_destroy_delayed_refs@@Base+0x2b8>)
   23c48:	strd	r2, r3, [sp, #8]
   23c4c:	add	r1, pc
   23c4e:	ldr	r2, [r4, #24]
   23c50:	ldr	r3, [r4, #28]
   23c52:	strd	r2, r3, [sp]
   23c56:	ldr	r3, [r4, #12]
   23c58:	ldr	r2, [r4, #8]
   23c5a:	blx	8838 <__printf_chk@plt+0x4>
   23c5e:	ldr	r3, [r4, #76]	; 0x4c
   23c60:	ldr	r2, [r4, #48]	; 0x30
   23c62:	movs	r0, #1
   23c64:	ldr	r1, [pc, #48]	; (23c98 <btrfs_destroy_delayed_refs@@Base+0x2bc>)
   23c66:	str	r3, [sp, #12]
   23c68:	ldr	r3, [r4, #72]	; 0x48
   23c6a:	add	r1, pc
   23c6c:	str	r3, [sp, #8]
   23c6e:	ldr	r3, [r4, #52]	; 0x34
   23c70:	strd	r2, r3, [sp]
   23c74:	ldr	r2, [r4, #40]	; 0x28
   23c76:	ldr	r3, [r4, #44]	; 0x2c
   23c78:	blx	8838 <__printf_chk@plt+0x4>
   23c7c:	ldr	r1, [pc, #28]	; (23c9c <btrfs_destroy_delayed_refs@@Base+0x2c0>)
   23c7e:	ldr	r3, [r4, #84]	; 0x54
   23c80:	movs	r0, #1
   23c82:	ldr	r2, [r4, #80]	; 0x50
   23c84:	add	r1, pc
   23c86:	add	sp, #24
   23c88:	ldmia.w	sp!, {r4, lr}
   23c8c:	b.w	8834 <__printf_chk@plt>
   23c90:	ldr	r4, [sp, #68]	; 0x44
   23c92:	movs	r1, r0
   23c94:	ldr	r4, [sp, #112]	; 0x70
   23c96:	movs	r1, r0
   23c98:	ldr	r4, [sp, #196]	; 0xc4
   23c9a:	movs	r1, r0
   23c9c:	ldr	r4, [sp, #296]	; 0x128
   23c9e:	movs	r1, r0
   23ca0:	push	{r4, r5, r6, r7, lr}
   23ca2:	mov	r6, r2
   23ca4:	ldr	r2, [pc, #104]	; (23d10 <btrfs_destroy_delayed_refs@@Base+0x334>)
   23ca6:	sub	sp, #292	; 0x124
   23ca8:	ldr	r3, [pc, #104]	; (23d14 <btrfs_destroy_delayed_refs@@Base+0x338>)
   23caa:	add.w	r4, r0, #96	; 0x60
   23cae:	add	r2, pc
   23cb0:	add	r5, sp, #28
   23cb2:	ldr	r3, [r2, r3]
   23cb4:	ldr	r3, [r3, #0]
   23cb6:	str	r3, [sp, #284]	; 0x11c
   23cb8:	mov.w	r3, #0
   23cbc:	movs	r3, #25
   23cbe:	mla	r1, r3, r1, r4
   23cc2:	ldr.w	r2, [r1, #118]	; 0x76
   23cc6:	mov	r1, r5
   23cc8:	add.w	r3, r2, #101	; 0x65
   23ccc:	adds	r2, #119	; 0x77
   23cce:	add	r4, r3
   23cd0:	ldrh	r7, [r4, #16]
   23cd2:	mov	r3, r7
   23cd4:	bl	16a0e <read_extent_buffer@@Base>
   23cd8:	strd	r7, r5, [sp, #16]
   23cdc:	ldr	r2, [r4, #8]
   23cde:	movs	r0, #1
   23ce0:	ldr	r3, [r4, #12]
   23ce2:	ldr	r1, [pc, #52]	; (23d18 <btrfs_destroy_delayed_refs@@Base+0x33c>)
   23ce4:	strd	r2, r3, [sp, #8]
   23ce8:	add	r1, pc
   23cea:	ldr	r2, [r4, #0]
   23cec:	ldr	r3, [r4, #4]
   23cee:	strd	r2, r3, [sp]
   23cf2:	mov	r2, r6
   23cf4:	blx	8838 <__printf_chk@plt+0x4>
   23cf8:	ldr	r2, [pc, #32]	; (23d1c <btrfs_destroy_delayed_refs@@Base+0x340>)
   23cfa:	ldr	r3, [pc, #24]	; (23d14 <btrfs_destroy_delayed_refs@@Base+0x338>)
   23cfc:	add	r2, pc
   23cfe:	ldr	r3, [r2, r3]
   23d00:	ldr	r2, [r3, #0]
   23d02:	ldr	r3, [sp, #284]	; 0x11c
   23d04:	eors	r2, r3
   23d06:	beq.n	23d0c <btrfs_destroy_delayed_refs@@Base+0x330>
   23d08:	blx	8510 <__stack_chk_fail@plt>
   23d0c:	add	sp, #292	; 0x124
   23d0e:	pop	{r4, r5, r6, r7, pc}
   23d10:	lsls	r6, r2, #3
   23d12:	movs	r4, r0
   23d14:	lsls	r0, r4, #8
   23d16:	movs	r0, r0
   23d18:	ldr	r4, [sp, #28]
   23d1a:	movs	r1, r0
   23d1c:	lsls	r0, r1, #2
   23d1e:	movs	r4, r0
   23d20:	ldr	r2, [pc, #112]	; (23d94 <btrfs_destroy_delayed_refs@@Base+0x3b8>)
   23d22:	ldr	r3, [pc, #116]	; (23d98 <btrfs_destroy_delayed_refs@@Base+0x3bc>)
   23d24:	add	r2, pc
   23d26:	push	{r4, r5, r6, r7, lr}
   23d28:	sub	sp, #116	; 0x74
   23d2a:	ldr	r3, [r2, r3]
   23d2c:	add	r4, sp, #12
   23d2e:	add	r6, sp, #28
   23d30:	movs	r2, #32
   23d32:	ldr	r3, [r3, #0]
   23d34:	str	r3, [sp, #108]	; 0x6c
   23d36:	mov.w	r3, #0
   23d3a:	mov	r1, r4
   23d3c:	movs	r3, #16
   23d3e:	mov	r5, r0
   23d40:	bl	16a0e <read_extent_buffer@@Base>
   23d44:	mov	r1, r6
   23d46:	mov	r0, r4
   23d48:	movs	r7, #0
   23d4a:	strb.w	r7, [sp, #64]	; 0x40
   23d4e:	blx	83d8 <uuid_unparse@plt>
   23d52:	movs	r2, #64	; 0x40
   23d54:	movs	r3, #16
   23d56:	mov	r1, r4
   23d58:	mov	r0, r5
   23d5a:	bl	16a0e <read_extent_buffer@@Base>
   23d5e:	add	r3, sp, #68	; 0x44
   23d60:	mov	r0, r4
   23d62:	str	r3, [sp, #4]
   23d64:	mov	r1, r3
   23d66:	strb.w	r7, [sp, #104]	; 0x68
   23d6a:	blx	83d8 <uuid_unparse@plt>
   23d6e:	ldr	r1, [pc, #44]	; (23d9c <btrfs_destroy_delayed_refs@@Base+0x3c0>)
   23d70:	ldr	r3, [sp, #4]
   23d72:	mov	r2, r6
   23d74:	add	r1, pc
   23d76:	movs	r0, #1
   23d78:	blx	8838 <__printf_chk@plt+0x4>
   23d7c:	ldr	r2, [pc, #32]	; (23da0 <btrfs_destroy_delayed_refs@@Base+0x3c4>)
   23d7e:	ldr	r3, [pc, #24]	; (23d98 <btrfs_destroy_delayed_refs@@Base+0x3bc>)
   23d80:	add	r2, pc
   23d82:	ldr	r3, [r2, r3]
   23d84:	ldr	r2, [r3, #0]
   23d86:	ldr	r3, [sp, #108]	; 0x6c
   23d88:	eors	r2, r3
   23d8a:	beq.n	23d90 <btrfs_destroy_delayed_refs@@Base+0x3b4>
   23d8c:	blx	8510 <__stack_chk_fail@plt>
   23d90:	add	sp, #116	; 0x74
   23d92:	pop	{r4, r5, r6, r7, pc}
   23d94:	lsls	r0, r4, #1
   23d96:	movs	r4, r0
   23d98:	lsls	r0, r4, #8
   23d9a:	movs	r0, r0
   23d9c:	ldr	r3, [sp, #692]	; 0x2b4
   23d9e:	movs	r1, r0
   23da0:	movs	r4, r0
   23da2:	movs	r4, r0
   23da4:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   23da8:	mov	r5, r2
   23daa:	ldr	r2, [pc, #112]	; (23e1c <btrfs_destroy_delayed_refs@@Base+0x440>)
   23dac:	sub	sp, #344	; 0x158
   23dae:	ldr	r3, [pc, #112]	; (23e20 <btrfs_destroy_delayed_refs@@Base+0x444>)
   23db0:	adds	r0, #96	; 0x60
   23db2:	add	r2, pc
   23db4:	add	r4, sp, #84	; 0x54
   23db6:	ldr	r6, [r0, r1]
   23db8:	ldr	r3, [r2, r3]
   23dba:	ldr	r3, [r3, #0]
   23dbc:	str	r3, [sp, #340]	; 0x154
   23dbe:	mov.w	r3, #0
   23dc2:	adds	r3, r0, r1
   23dc4:	add	r0, sp, #36	; 0x24
   23dc6:	str	r6, [r0, #0]
   23dc8:	ldr	r7, [r3, #4]
   23dca:	ldr.w	r8, [r3, #8]
   23dce:	add	r3, sp, #40	; 0x28
   23dd0:	str	r3, [sp, #28]
   23dd2:	mov	r1, r3
   23dd4:	blx	8538 <localtime_r@plt>
   23dd8:	ldr	r2, [pc, #72]	; (23e24 <btrfs_destroy_delayed_refs@@Base+0x448>)
   23dda:	ldr	r3, [sp, #28]
   23ddc:	mov.w	r1, #256	; 0x100
   23de0:	add	r2, pc
   23de2:	mov	r0, r4
   23de4:	blx	86ac <strftime@plt>
   23de8:	ldr	r3, [pc, #60]	; (23e28 <btrfs_destroy_delayed_refs@@Base+0x44c>)
   23dea:	ldr	r1, [pc, #64]	; (23e2c <btrfs_destroy_delayed_refs@@Base+0x450>)
   23dec:	mov	r2, r5
   23dee:	add	r3, pc
   23df0:	movs	r0, #1
   23df2:	strd	r4, r3, [sp, #12]
   23df6:	add	r1, pc
   23df8:	stmia.w	sp, {r6, r7, r8}
   23dfc:	blx	8838 <__printf_chk@plt+0x4>
   23e00:	ldr	r2, [pc, #44]	; (23e30 <btrfs_destroy_delayed_refs@@Base+0x454>)
   23e02:	ldr	r3, [pc, #28]	; (23e20 <btrfs_destroy_delayed_refs@@Base+0x444>)
   23e04:	add	r2, pc
   23e06:	ldr	r3, [r2, r3]
   23e08:	ldr	r2, [r3, #0]
   23e0a:	ldr	r3, [sp, #340]	; 0x154
   23e0c:	eors	r2, r3
   23e0e:	beq.n	23e14 <btrfs_destroy_delayed_refs@@Base+0x438>
   23e10:	blx	8510 <__stack_chk_fail@plt>
   23e14:	add	sp, #344	; 0x158
   23e16:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   23e1a:	nop
   23e1c:	vaddl.u16	q8, d2, d3
   23e20:	lsls	r0, r4, #8
   23e22:	movs	r0, r0
   23e24:	ldr	r3, [sp, #364]	; 0x16c
   23e26:	movs	r1, r0
   23e28:	add	r5, sp, #804	; 0x324
   23e2a:	movs	r1, r0
   23e2c:	ldr	r3, [sp, #348]	; 0x15c
   23e2e:	movs	r1, r0
   23e30:	vaddl.u8	q0, d0, d3
   23e34:	push	{r0, r1, r2, r3, r4, lr}
   23e36:	ldr	r4, [pc, #40]	; (23e60 <btrfs_destroy_delayed_refs@@Base+0x484>)
   23e38:	ldr	r5, [pc, #40]	; (23e64 <btrfs_destroy_delayed_refs@@Base+0x488>)
   23e3a:	add	r4, pc
   23e3c:	ldr	r4, [r4, r5]
   23e3e:	strd	r2, r1, [sp]
   23e42:	movs	r1, #1
   23e44:	strd	r0, r3, [sp, #8]
   23e48:	ldr	r2, [pc, #28]	; (23e68 <btrfs_destroy_delayed_refs@@Base+0x48c>)
   23e4a:	ldr	r3, [pc, #32]	; (23e6c <btrfs_destroy_delayed_refs@@Base+0x490>)
   23e4c:	add	r2, pc
   23e4e:	ldr	r0, [r4, #0]
   23e50:	add	r3, pc
   23e52:	blx	8860 <__fprintf_chk@plt+0x4>
   23e56:	bl	23a90 <btrfs_destroy_delayed_refs@@Base+0xb4>
   23e5a:	blx	8980 <abort@plt>
   23e5e:	nop
   23e60:	vhadd.u8	d16, d10, d3
   23e64:	lsls	r0, r6, #8
   23e66:	movs	r0, r0
   23e68:	str	r6, [r2, r1]
   23e6a:	movs	r1, r0
   23e6c:	ldr	r4, [r0, r1]
   23e6e:	movs	r1, r0
   23e70:	push	{r3, lr}
   23e72:	ldr	r3, [r0, #92]	; 0x5c
   23e74:	ldr	r2, [r0, #76]	; 0x4c
   23e76:	cbz	r3, 23e92 <btrfs_destroy_delayed_refs@@Base+0x4b6>
   23e78:	ldr.w	r3, [r3, #384]	; 0x180
   23e7c:	cmp	r3, r2
   23e7e:	beq.n	23e92 <btrfs_destroy_delayed_refs@@Base+0x4b6>
   23e80:	ldr	r1, [pc, #32]	; (23ea4 <btrfs_destroy_delayed_refs@@Base+0x4c8>)
   23e82:	movs	r3, #1
   23e84:	ldr	r0, [pc, #32]	; (23ea8 <btrfs_destroy_delayed_refs@@Base+0x4cc>)
   23e86:	movw	r2, #1246	; 0x4de
   23e8a:	add	r1, pc
   23e8c:	add	r0, pc
   23e8e:	bl	23e34 <btrfs_destroy_delayed_refs@@Base+0x458>
   23e92:	ldr	r3, [pc, #12]	; (23ea0 <btrfs_destroy_delayed_refs@@Base+0x4c4>)
   23e94:	subs	r2, #101	; 0x65
   23e96:	umull	r2, r3, r2, r3
   23e9a:	lsrs	r0, r3, #3
   23e9c:	pop	{r3, pc}
   23e9e:	nop
   23ea0:	strh	r1, [r4, #30]
   23ea2:	subs	r6, #15
   23ea4:	add	r4, sp, #16
   23ea6:	movs	r1, r0
   23ea8:	ldr	r2, [sp, #840]	; 0x348
   23eaa:	movs	r1, r0

00023eac <print_chunk_item@@Base>:
   23eac:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23eb0:	add.w	r8, r0, #96	; 0x60
   23eb4:	ldr	r2, [pc, #376]	; (24030 <print_chunk_item@@Base+0x184>)
   23eb6:	add.w	r9, r8, r1
   23eba:	ldr	r3, [pc, #376]	; (24034 <print_chunk_item@@Base+0x188>)
   23ebc:	sub	sp, #148	; 0x94
   23ebe:	add	r2, pc
   23ec0:	ldrh.w	r6, [r9, #44]	; 0x2c
   23ec4:	movs	r5, #0
   23ec6:	mov	r7, r0
   23ec8:	ldr	r3, [r2, r3]
   23eca:	mov	r4, r1
   23ecc:	add	r0, sp, #72	; 0x48
   23ece:	movs	r2, #28
   23ed0:	mov	r1, r5
   23ed2:	ldr	r3, [r3, #0]
   23ed4:	str	r3, [sp, #140]	; 0x8c
   23ed6:	mov.w	r3, #0
   23eda:	str	r5, [sp, #68]	; 0x44
   23edc:	blx	87c4 <memset@plt+0x4>
   23ee0:	cbnz	r6, 23ef0 <print_chunk_item@@Base+0x44>
   23ee2:	ldr	r1, [pc, #340]	; (24038 <print_chunk_item@@Base+0x18c>)
   23ee4:	mov	r2, r6
   23ee6:	add	r1, pc
   23ee8:	movs	r0, #1
   23eea:	blx	8838 <__printf_chk@plt+0x4>
   23eee:	b.n	23f04 <print_chunk_item@@Base+0x58>
   23ef0:	ldr	r2, [r7, #76]	; 0x4c
   23ef2:	add.w	r3, r4, r6, lsl #5
   23ef6:	adds	r3, #48	; 0x30
   23ef8:	cmp	r3, r2
   23efa:	bls.n	23f1a <print_chunk_item@@Base+0x6e>
   23efc:	ldr	r0, [pc, #316]	; (2403c <print_chunk_item@@Base+0x190>)
   23efe:	add	r0, pc
   23f00:	blx	865c <puts@plt+0x4>
   23f04:	ldr	r2, [pc, #312]	; (24040 <print_chunk_item@@Base+0x194>)
   23f06:	ldr	r3, [pc, #300]	; (24034 <print_chunk_item@@Base+0x188>)
   23f08:	add	r2, pc
   23f0a:	ldr	r3, [r2, r3]
   23f0c:	ldr	r2, [r3, #0]
   23f0e:	ldr	r3, [sp, #140]	; 0x8c
   23f10:	eors	r2, r3
   23f12:	beq.w	24028 <print_chunk_item@@Base+0x17c>
   23f16:	blx	8510 <__stack_chk_fail@plt>
   23f1a:	add.w	sl, sp, #68	; 0x44
   23f1e:	ldr.w	r0, [r9, #24]
   23f22:	ldr.w	r1, [r9, #28]
   23f26:	adds	r4, #48	; 0x30
   23f28:	mov	r2, sl
   23f2a:	ldr.w	fp, [pc, #280]	; 24044 <print_chunk_item@@Base+0x198>
   23f2e:	bl	23adc <btrfs_destroy_delayed_refs@@Base+0x100>
   23f32:	str.w	sl, [sp, #16]
   23f36:	ldr.w	r2, [r9, #16]
   23f3a:	movs	r0, #1
   23f3c:	ldr.w	r3, [r9, #20]
   23f40:	add	fp, pc
   23f42:	ldr	r1, [pc, #260]	; (24048 <print_chunk_item@@Base+0x19c>)
   23f44:	ldr.w	sl, [pc, #260]	; 2404c <print_chunk_item@@Base+0x1a0>
   23f48:	strd	r2, r3, [sp, #8]
   23f4c:	add	r1, pc
   23f4e:	ldr.w	r2, [r9, #8]
   23f52:	add	sl, pc
   23f54:	ldr.w	r3, [r9, #12]
   23f58:	strd	r2, r3, [sp]
   23f5c:	ldr.w	r2, [r9]
   23f60:	ldr.w	r3, [r9, #4]
   23f64:	blx	8838 <__printf_chk@plt+0x4>
   23f68:	ldr.w	r3, [r9, #40]	; 0x28
   23f6c:	ldr	r1, [pc, #224]	; (24050 <print_chunk_item@@Base+0x1a4>)
   23f6e:	movs	r0, #1
   23f70:	str	r3, [sp, #0]
   23f72:	add	r1, pc
   23f74:	ldr.w	r3, [r9, #36]	; 0x24
   23f78:	ldr.w	r2, [r9, #32]
   23f7c:	blx	8838 <__printf_chk@plt+0x4>
   23f80:	ldr	r1, [pc, #208]	; (24054 <print_chunk_item@@Base+0x1a8>)
   23f82:	ldrh.w	r3, [r9, #46]	; 0x2e
   23f86:	mov	r2, r6
   23f88:	add	r1, pc
   23f8a:	movs	r0, #1
   23f8c:	blx	8838 <__printf_chk@plt+0x4>
   23f90:	add.w	r9, sp, #52	; 0x34
   23f94:	add.w	ip, r4, #16
   23f98:	movs	r3, #0
   23f9a:	movs	r1, #0
   23f9c:	cmp	r3, r1
   23f9e:	it	eq
   23fa0:	cmpeq	ip, r4
   23fa2:	mov	r2, ip
   23fa4:	strd	r2, r3, [sp, #24]
   23fa8:	bcc.n	23fd4 <print_chunk_item@@Base+0x128>
   23faa:	ldr	r3, [sp, #24]
   23fac:	adds	r3, #16
   23fae:	str	r3, [sp, #32]
   23fb0:	ldr	r3, [sp, #28]
   23fb2:	adc.w	r3, r3, #0
   23fb6:	str	r3, [sp, #36]	; 0x24
   23fb8:	adds.w	r3, r4, #32
   23fbc:	str	r3, [sp, #40]	; 0x28
   23fbe:	adc.w	r3, r1, #0
   23fc2:	str	r3, [sp, #44]	; 0x2c
   23fc4:	ldrd	r2, r3, [sp, #40]	; 0x28
   23fc8:	ldrd	r0, r1, [sp, #32]
   23fcc:	cmp	r3, r1
   23fce:	it	eq
   23fd0:	cmpeq	r2, r0
   23fd2:	bcs.n	23fdc <print_chunk_item@@Base+0x130>
   23fd4:	ldr	r1, [pc, #128]	; (24058 <print_chunk_item@@Base+0x1ac>)
   23fd6:	mov	r2, r5
   23fd8:	add	r1, pc
   23fda:	b.n	23ee8 <print_chunk_item@@Base+0x3c>
   23fdc:	mov	r2, ip
   23fde:	movs	r3, #16
   23fe0:	mov	r1, r9
   23fe2:	mov	r0, r7
   23fe4:	bl	16a0e <read_extent_buffer@@Base>
   23fe8:	add	r3, sp, #100	; 0x64
   23fea:	mov	r0, r9
   23fec:	str	r3, [sp, #24]
   23fee:	mov	r1, r3
   23ff0:	blx	83d8 <uuid_unparse@plt>
   23ff4:	add.w	r2, r8, r4
   23ff8:	adds	r4, #32
   23ffa:	ldr	r0, [r2, #8]
   23ffc:	ldr	r1, [r2, #12]
   23ffe:	strd	r0, r1, [sp, #8]
   24002:	movs	r0, #1
   24004:	ldr	r1, [r2, #0]
   24006:	ldr	r2, [r2, #4]
   24008:	strd	r1, r2, [sp]
   2400c:	mov	r2, r5
   2400e:	mov	r1, fp
   24010:	adds	r5, #1
   24012:	blx	8838 <__printf_chk@plt+0x4>
   24016:	ldr	r3, [sp, #24]
   24018:	mov	r1, sl
   2401a:	movs	r0, #1
   2401c:	mov	r2, r3
   2401e:	blx	8838 <__printf_chk@plt+0x4>
   24022:	cmp	r6, r5
   24024:	bgt.n	23f94 <print_chunk_item@@Base+0xe8>
   24026:	b.n	23f04 <print_chunk_item@@Base+0x58>
   24028:	add	sp, #148	; 0x94
   2402a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2402e:	nop
   24030:	cdp2	0, 12, cr0, cr6, cr3, {0}
   24034:	lsls	r0, r4, #8
   24036:	movs	r0, r0
   24038:	ldr	r2, [sp, #672]	; 0x2a0
   2403a:	movs	r1, r0
   2403c:	ldr	r2, [sp, #676]	; 0x2a4
   2403e:	movs	r1, r0
   24040:	cdp2	0, 7, cr0, cr12, cr3, {0}
   24044:	ldr	r3, [sp, #68]	; 0x44
   24046:	movs	r1, r0
   24048:	ldr	r2, [sp, #448]	; 0x1c0
   2404a:	movs	r1, r0
   2404c:	ldr	r3, [sp, #144]	; 0x90
   2404e:	movs	r1, r0
   24050:	ldr	r2, [sp, #496]	; 0x1f0
   24052:	movs	r1, r0
   24054:	ldr	r2, [sp, #576]	; 0x240
   24056:	movs	r1, r0
   24058:	ldr	r2, [sp, #396]	; 0x18c
   2405a:	movs	r1, r0

0002405c <print_key_type@@Base>:
   2405c:	push	{r4, r5, r6, r7}
   2405e:	mov	r5, r3
   24060:	ldrb.w	r3, [sp, #16]
   24064:	cbnz	r3, 24082 <print_key_type@@Base+0x26>
   24066:	mov.w	r7, #4294967295	; 0xffffffff
   2406a:	cmp	r5, r7
   2406c:	mvn.w	r6, #10
   24070:	it	eq
   24072:	cmpeq	r2, r6
   24074:	bne.n	24082 <print_key_type@@Base+0x26>
   24076:	mov	r1, r0
   24078:	ldr	r0, [pc, #36]	; (240a0 <print_key_type@@Base+0x44>)
   2407a:	add	r0, pc
   2407c:	pop	{r4, r5, r6, r7}
   2407e:	b.w	8964 <fputs@plt>
   24082:	ldr	r2, [pc, #32]	; (240a4 <print_key_type@@Base+0x48>)
   24084:	add	r2, pc
   24086:	ldr.w	r2, [r2, r3, lsl #2]
   2408a:	cbz	r2, 24092 <print_key_type@@Base+0x36>
   2408c:	mov	r1, r0
   2408e:	mov	r0, r2
   24090:	b.n	2407c <print_key_type@@Base+0x20>
   24092:	ldr	r2, [pc, #20]	; (240a8 <print_key_type@@Base+0x4c>)
   24094:	movs	r1, #1
   24096:	pop	{r4, r5, r6, r7}
   24098:	add	r2, pc
   2409a:	b.w	885c <__fprintf_chk@plt>
   2409e:	nop
   240a0:	ldr	r2, [sp, #48]	; 0x30
   240a2:	movs	r1, r0
   240a4:			; <UNDEFINED> instruction: 0xf7580003
   240a8:	ldr	r1, [sp, #984]	; 0x3d8
   240aa:	movs	r1, r0

000240ac <print_objectid@@Base>:
   240ac:	stmdb	sp!, {r0, r1, r2, r3, r4, r6, r7, r8, r9, sl, fp, lr}
   240b0:	mov	r4, r0
   240b2:	ldrb.w	r1, [sp, #48]	; 0x30
   240b6:	mov	r6, r2
   240b8:	mov	r7, r3
   240ba:	cmp	r1, #249	; 0xf9
   240bc:	beq.n	24114 <print_objectid@@Base+0x68>
   240be:	bhi.n	24102 <print_objectid@@Base+0x56>
   240c0:	cmp	r1, #204	; 0xcc
   240c2:	beq.n	240f0 <print_objectid@@Base+0x44>
   240c4:	cmp	r1, #246	; 0xf6
   240c6:	beq.n	24136 <print_objectid@@Base+0x8a>
   240c8:	mov.w	r3, #4294967295	; 0xffffffff
   240cc:	cmp	r7, r3
   240ce:	mvn.w	r2, #254	; 0xfe
   240d2:	it	eq
   240d4:	cmpeq	r6, r2
   240d6:	beq.w	2429a <print_objectid@@Base+0x1ee>
   240da:	cmp	r3, r7
   240dc:	it	eq
   240de:	cmpeq	r2, r6
   240e0:	bcc.n	24192 <print_objectid@@Base+0xe6>
   240e2:	cmp	r7, #0
   240e4:	it	eq
   240e6:	cmpeq	r6, #11
   240e8:	bcs.n	2417c <print_objectid@@Base+0xd0>
   240ea:	orrs.w	r3, r6, r7
   240ee:	bne.n	24154 <print_objectid@@Base+0xa8>
   240f0:	ldr	r2, [pc, #440]	; (242ac <print_objectid@@Base+0x200>)
   240f2:	movs	r1, #1
   240f4:	mov	r0, r4
   240f6:	strd	r6, r7, [sp]
   240fa:	add	r2, pc
   240fc:	blx	8860 <__fprintf_chk@plt+0x4>
   24100:	b.n	2414e <print_objectid@@Base+0xa2>
   24102:	adds	r3, r1, #5
   24104:	uxtb	r3, r3
   24106:	cmp	r3, #1
   24108:	bhi.n	240c8 <print_objectid@@Base+0x1c>
   2410a:	ldr	r2, [pc, #420]	; (242b0 <print_objectid@@Base+0x204>)
   2410c:	strd	r6, r7, [sp]
   24110:	add	r2, pc
   24112:	b.n	24132 <print_objectid@@Base+0x86>
   24114:	orrs.w	r3, r6, r7
   24118:	bne.n	2412a <print_objectid@@Base+0x7e>
   2411a:	mov	r1, r0
   2411c:	ldr	r0, [pc, #404]	; (242b4 <print_objectid@@Base+0x208>)
   2411e:	add	r0, pc
   24120:	add	sp, #16
   24122:	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, lr}
   24126:	b.w	8964 <fputs@plt>
   2412a:	ldr	r2, [pc, #396]	; (242b8 <print_objectid@@Base+0x20c>)
   2412c:	strd	r6, r7, [sp]
   24130:	add	r2, pc
   24132:	movs	r1, #1
   24134:	b.n	240fc <print_objectid@@Base+0x50>
   24136:	uxth	r3, r3
   24138:	strd	r2, r3, [sp, #8]
   2413c:	ldr	r2, [pc, #380]	; (242bc <print_objectid@@Base+0x210>)
   2413e:	lsrs	r3, r7, #16
   24140:	movs	r1, #1
   24142:	str	r3, [sp, #0]
   24144:	add	r2, pc
   24146:	movs	r3, #0
   24148:	str	r3, [sp, #4]
   2414a:	blx	8860 <__fprintf_chk@plt+0x4>
   2414e:	add	sp, #16
   24150:	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, pc}
   24154:	subs.w	sl, r6, #2
   24158:	adc.w	fp, r7, #4294967295	; 0xffffffff
   2415c:	cmp.w	fp, #0
   24160:	it	eq
   24162:	cmpeq.w	sl, #9
   24166:	bcs.n	241f8 <print_objectid@@Base+0x14c>
   24168:	cmp.w	sl, #8
   2416c:	bhi.n	241f8 <print_objectid@@Base+0x14c>
   2416e:	tbb	[pc, sl]
   24172:	str	r4, [r1, r1]
   24174:	ldr	r4, [r2, r1]
   24176:	str	r4, [r3, #4]
   24178:	ldrh	r0, [r1, #36]	; 0x24
   2417a:	lsls	r0, r2, #2
   2417c:	cmp	r7, #0
   2417e:	it	eq
   24180:	cmpeq.w	r6, #256	; 0x100
   24184:	bne.n	240f0 <print_objectid@@Base+0x44>
   24186:	cmp	r1, #228	; 0xe4
   24188:	bne.n	240f0 <print_objectid@@Base+0x44>
   2418a:	ldr	r0, [pc, #308]	; (242c0 <print_objectid@@Base+0x214>)
   2418c:	mov	r1, r4
   2418e:	add	r0, pc
   24190:	b.n	24120 <print_objectid@@Base+0x74>
   24192:	mov.w	r3, #4294967295	; 0xffffffff
   24196:	cmp	r3, r7
   24198:	mvn.w	r2, #12
   2419c:	it	eq
   2419e:	cmpeq	r2, r6
   241a0:	bcs.n	240f0 <print_objectid@@Base+0x44>
   241a2:	adds.w	r8, r6, #12
   241a6:	adc.w	r9, r7, #0
   241aa:	cmp.w	r9, #0
   241ae:	it	eq
   241b0:	cmpeq.w	r8, #12
   241b4:	bcs.n	240f0 <print_objectid@@Base+0x44>
   241b6:	cmp.w	r8, #11
   241ba:	bhi.n	240f0 <print_objectid@@Base+0x44>
   241bc:	add	r3, pc, #8	; (adr r3, 241c8 <print_objectid@@Base+0x11c>)
   241be:	ldr.w	r2, [r3, r8, lsl #2]
   241c2:	add	r3, r2
   241c4:	bx	r3
   241c6:	nop
   241c8:	lsls	r3, r6, #2
   241ca:	movs	r0, r0
   241cc:	lsls	r3, r5, #2
   241ce:	movs	r0, r0
   241d0:	lsls	r3, r4, #2
   241d2:	movs	r0, r0
   241d4:	lsls	r3, r3, #2
   241d6:	movs	r0, r0
   241d8:	lsls	r3, r2, #2
   241da:	movs	r0, r0
   241dc:	lsls	r3, r1, #2
   241de:	movs	r0, r0
   241e0:	lsls	r3, r0, #2
   241e2:	movs	r0, r0
   241e4:	lsls	r3, r7, #1
   241e6:	movs	r0, r0
   241e8:	lsls	r3, r6, #1
   241ea:	movs	r0, r0
   241ec:	vminnm.f32	<illegal reg q7.5>, <illegal reg q12.5>, <illegal reg q15.5>
   241f0:	vminnm.f32	<illegal reg q7.5>, <illegal reg q12.5>, <illegal reg q15.5>
   241f4:	lsls	r3, r3, #3
   241f6:	movs	r0, r0
   241f8:	cmp	r1, #216	; 0xd8
   241fa:	mov	r1, r4
   241fc:	bne.n	24204 <print_objectid@@Base+0x158>
   241fe:	ldr	r0, [pc, #196]	; (242c4 <print_objectid@@Base+0x218>)
   24200:	add	r0, pc
   24202:	b.n	24120 <print_objectid@@Base+0x74>
   24204:	ldr	r0, [pc, #192]	; (242c8 <print_objectid@@Base+0x21c>)
   24206:	add	r0, pc
   24208:	b.n	24120 <print_objectid@@Base+0x74>
   2420a:	ldr	r0, [pc, #192]	; (242cc <print_objectid@@Base+0x220>)
   2420c:	mov	r1, r4
   2420e:	add	r0, pc
   24210:	b.n	24120 <print_objectid@@Base+0x74>
   24212:	ldr	r0, [pc, #188]	; (242d0 <print_objectid@@Base+0x224>)
   24214:	mov	r1, r4
   24216:	add	r0, pc
   24218:	b.n	24120 <print_objectid@@Base+0x74>
   2421a:	ldr	r0, [pc, #184]	; (242d4 <print_objectid@@Base+0x228>)
   2421c:	mov	r1, r4
   2421e:	add	r0, pc
   24220:	b.n	24120 <print_objectid@@Base+0x74>
   24222:	ldr	r0, [pc, #180]	; (242d8 <print_objectid@@Base+0x22c>)
   24224:	mov	r1, r4
   24226:	add	r0, pc
   24228:	b.n	24120 <print_objectid@@Base+0x74>
   2422a:	ldr	r0, [pc, #176]	; (242dc <print_objectid@@Base+0x230>)
   2422c:	mov	r1, r4
   2422e:	add	r0, pc
   24230:	b.n	24120 <print_objectid@@Base+0x74>
   24232:	ldr	r0, [pc, #172]	; (242e0 <print_objectid@@Base+0x234>)
   24234:	mov	r1, r4
   24236:	add	r0, pc
   24238:	b.n	24120 <print_objectid@@Base+0x74>
   2423a:	ldr	r0, [pc, #168]	; (242e4 <print_objectid@@Base+0x238>)
   2423c:	mov	r1, r4
   2423e:	add	r0, pc
   24240:	b.n	24120 <print_objectid@@Base+0x74>
   24242:	ldr	r0, [pc, #164]	; (242e8 <print_objectid@@Base+0x23c>)
   24244:	mov	r1, r4
   24246:	add	r0, pc
   24248:	b.n	24120 <print_objectid@@Base+0x74>
   2424a:	ldr	r0, [pc, #160]	; (242ec <print_objectid@@Base+0x240>)
   2424c:	mov	r1, r4
   2424e:	add	r0, pc
   24250:	b.n	24120 <print_objectid@@Base+0x74>
   24252:	ldr	r0, [pc, #156]	; (242f0 <print_objectid@@Base+0x244>)
   24254:	mov	r1, r4
   24256:	add	r0, pc
   24258:	b.n	24120 <print_objectid@@Base+0x74>
   2425a:	ldr	r0, [pc, #152]	; (242f4 <print_objectid@@Base+0x248>)
   2425c:	mov	r1, r4
   2425e:	add	r0, pc
   24260:	b.n	24120 <print_objectid@@Base+0x74>
   24262:	ldr	r0, [pc, #148]	; (242f8 <print_objectid@@Base+0x24c>)
   24264:	mov	r1, r4
   24266:	add	r0, pc
   24268:	b.n	24120 <print_objectid@@Base+0x74>
   2426a:	ldr	r0, [pc, #144]	; (242fc <print_objectid@@Base+0x250>)
   2426c:	mov	r1, r4
   2426e:	add	r0, pc
   24270:	b.n	24120 <print_objectid@@Base+0x74>
   24272:	ldr	r0, [pc, #140]	; (24300 <print_objectid@@Base+0x254>)
   24274:	mov	r1, r4
   24276:	add	r0, pc
   24278:	b.n	24120 <print_objectid@@Base+0x74>
   2427a:	ldr	r0, [pc, #136]	; (24304 <print_objectid@@Base+0x258>)
   2427c:	mov	r1, r4
   2427e:	add	r0, pc
   24280:	b.n	24120 <print_objectid@@Base+0x74>
   24282:	ldr	r0, [pc, #132]	; (24308 <print_objectid@@Base+0x25c>)
   24284:	mov	r1, r4
   24286:	add	r0, pc
   24288:	b.n	24120 <print_objectid@@Base+0x74>
   2428a:	ldr	r0, [pc, #128]	; (2430c <print_objectid@@Base+0x260>)
   2428c:	mov	r1, r4
   2428e:	add	r0, pc
   24290:	b.n	24120 <print_objectid@@Base+0x74>
   24292:	ldr	r0, [pc, #124]	; (24310 <print_objectid@@Base+0x264>)
   24294:	mov	r1, r4
   24296:	add	r0, pc
   24298:	b.n	24120 <print_objectid@@Base+0x74>
   2429a:	ldr	r0, [pc, #120]	; (24314 <print_objectid@@Base+0x268>)
   2429c:	mov	r1, r4
   2429e:	add	r0, pc
   242a0:	b.n	24120 <print_objectid@@Base+0x74>
   242a2:	ldr	r0, [pc, #116]	; (24318 <print_objectid@@Base+0x26c>)
   242a4:	mov	r1, r4
   242a6:	add	r0, pc
   242a8:	b.n	24120 <print_objectid@@Base+0x74>
   242aa:	nop
   242ac:	sub	sp, #204	; 0xcc
   242ae:	movs	r1, r0
   242b0:	ldr	r1, [sp, #588]	; 0x24c
   242b2:	movs	r1, r0
   242b4:	ldr	r1, [sp, #492]	; 0x1ec
   242b6:	movs	r1, r0
   242b8:	add	sp, #500	; 0x1f4
   242ba:	movs	r1, r0
   242bc:	ldr	r7, [pc, #364]	; (2442c <btrfs_print_key@@Base+0x110>)
   242be:	movs	r1, r0
   242c0:	ldr	r1, [sp, #972]	; 0x3cc
   242c2:	movs	r1, r0
   242c4:	ldr	r0, [sp, #692]	; 0x2b4
   242c6:	movs	r1, r0
   242c8:	ldr	r0, [sp, #708]	; 0x2c4
   242ca:	movs	r1, r0
   242cc:	ldr	r0, [sp, #716]	; 0x2cc
   242ce:	movs	r1, r0
   242d0:	ldr	r1, [sp, #452]	; 0x1c4
   242d2:	movs	r1, r0
   242d4:	ldr	r0, [sp, #700]	; 0x2bc
   242d6:	movs	r1, r0
   242d8:	ldr	r0, [sp, #704]	; 0x2c0
   242da:	movs	r1, r0
   242dc:	ldr	r0, [sp, #704]	; 0x2c0
   242de:	movs	r1, r0
   242e0:	ldr	r0, [sp, #728]	; 0x2d8
   242e2:	movs	r1, r0
   242e4:	ldr	r0, [sp, #736]	; 0x2e0
   242e6:	movs	r1, r0
   242e8:	ldr	r0, [sp, #736]	; 0x2e0
   242ea:	movs	r1, r0
   242ec:	ldr	r0, [sp, #732]	; 0x2dc
   242ee:	movs	r1, r0
   242f0:	ldr	r0, [sp, #736]	; 0x2e0
   242f2:	movs	r1, r0
   242f4:	ldr	r0, [sp, #744]	; 0x2e8
   242f6:	movs	r1, r0
   242f8:	ldr	r0, [sp, #756]	; 0x2f4
   242fa:	movs	r1, r0
   242fc:	ldr	r0, [sp, #788]	; 0x314
   242fe:	movs	r1, r0
   24300:	ldr	r0, [sp, #804]	; 0x324
   24302:	movs	r1, r0
   24304:	ldr	r0, [sp, #816]	; 0x330
   24306:	movs	r1, r0
   24308:	ldr	r0, [sp, #820]	; 0x334
   2430a:	movs	r1, r0
   2430c:	ldr	r0, [sp, #832]	; 0x340
   2430e:	movs	r1, r0
   24310:	ldr	r0, [sp, #840]	; 0x348
   24312:	movs	r1, r0
   24314:	ldr	r0, [sp, #872]	; 0x368
   24316:	movs	r1, r0
   24318:	ldrh	r3, [r2, #8]
   2431a:	movs	r1, r0

0002431c <btrfs_print_key@@Base>:
   2431c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   24320:	ldr	r1, [pc, #244]	; (24418 <btrfs_print_key@@Base+0xfc>)
   24322:	ldrb	r6, [r0, #8]
   24324:	ldr.w	r8, [r0]
   24328:	add	r1, pc
   2432a:	ldr.w	r9, [r0, #4]
   2432e:	ldr.w	r4, [r0, #9]
   24332:	ldr.w	r5, [r0, #13]
   24336:	movs	r0, #1
   24338:	ldr	r7, [pc, #224]	; (2441c <btrfs_print_key@@Base+0x100>)
   2433a:	blx	8838 <__printf_chk@plt+0x4>
   2433e:	ldr	r3, [pc, #224]	; (24420 <btrfs_print_key@@Base+0x104>)
   24340:	mov	r2, r8
   24342:	add	r7, pc
   24344:	ldr	r7, [r7, r3]
   24346:	mov	r3, r9
   24348:	str	r6, [sp, #0]
   2434a:	ldr	r0, [r7, #0]
   2434c:	bl	240ac <print_objectid@@Base>
   24350:	movs	r0, #32
   24352:	blx	87d4 <putchar@plt+0x4>
   24356:	str	r6, [sp, #0]
   24358:	ldr	r0, [r7, #0]
   2435a:	mov	r2, r8
   2435c:	mov	r3, r9
   2435e:	bl	2405c <print_key_type@@Base>
   24362:	cmp	r6, #132	; 0x84
   24364:	beq.n	243b4 <btrfs_print_key@@Base+0x98>
   24366:	add.w	r3, r6, #14
   2436a:	uxtb	r3, r3
   2436c:	cmp	r3, #10
   2436e:	bhi.n	243f2 <btrfs_print_key@@Base+0xd6>
   24370:	subs	r6, #242	; 0xf2
   24372:	cmp	r6, #10
   24374:	bhi.n	243f2 <btrfs_print_key@@Base+0xd6>
   24376:	tbb	[pc, r6]
   2437a:	subs	r4, #6
   2437c:	subs	r4, #6
   2437e:	subs	r4, #6
   24380:	subs	r4, #60	; 0x3c
   24382:	asrs	r4, r7, #12
   24384:	movs	r3, r2
   24386:	ldr	r1, [pc, #156]	; (24424 <btrfs_print_key@@Base+0x108>)
   24388:	uxth	r3, r5
   2438a:	lsrs	r2, r5, #16
   2438c:	strd	r4, r3, [sp]
   24390:	add	r1, pc
   24392:	movs	r3, #0
   24394:	movs	r0, #1
   24396:	blx	8838 <__printf_chk@plt+0x4>
   2439a:	add	sp, #12
   2439c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   243a0:	ldr	r1, [pc, #132]	; (24428 <btrfs_print_key@@Base+0x10c>)
   243a2:	mov	r2, r4
   243a4:	mov	r3, r5
   243a6:	add	r1, pc
   243a8:	movs	r0, #1
   243aa:	add	sp, #12
   243ac:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   243b0:	b.w	8834 <__printf_chk@plt>
   243b4:	movs	r0, #32
   243b6:	blx	87d4 <putchar@plt+0x4>
   243ba:	mov.w	r3, #4294967295	; 0xffffffff
   243be:	cmp	r9, r3
   243c0:	mvn.w	r2, #7
   243c4:	it	eq
   243c6:	cmpeq	r8, r2
   243c8:	bne.n	243e2 <btrfs_print_key@@Base+0xc6>
   243ca:	str	r6, [sp, #0]
   243cc:	mov	r2, r4
   243ce:	ldr	r0, [r7, #0]
   243d0:	mov	r3, r5
   243d2:	bl	240ac <print_objectid@@Base>
   243d6:	movs	r0, #41	; 0x29
   243d8:	add	sp, #12
   243da:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   243de:	b.w	87d0 <putchar@plt>
   243e2:	ldr	r1, [pc, #72]	; (2442c <btrfs_print_key@@Base+0x110>)
   243e4:	mov	r2, r4
   243e6:	mov	r3, r5
   243e8:	movs	r0, #1
   243ea:	add	r1, pc
   243ec:	blx	8838 <__printf_chk@plt+0x4>
   243f0:	b.n	243d6 <btrfs_print_key@@Base+0xba>
   243f2:	adds	r3, r5, #1
   243f4:	it	eq
   243f6:	cmpeq.w	r4, #4294967295	; 0xffffffff
   243fa:	bne.n	2440c <btrfs_print_key@@Base+0xf0>
   243fc:	ldr	r1, [pc, #48]	; (24430 <btrfs_print_key@@Base+0x114>)
   243fe:	movs	r0, #1
   24400:	add	r1, pc
   24402:	add	sp, #12
   24404:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   24408:	b.w	8834 <__printf_chk@plt>
   2440c:	ldr	r1, [pc, #36]	; (24434 <btrfs_print_key@@Base+0x118>)
   2440e:	mov	r2, r4
   24410:	mov	r3, r5
   24412:	add	r1, pc
   24414:	b.n	243a8 <btrfs_print_key@@Base+0x8c>
   24416:	nop
   24418:	ldr	r0, [sp, #424]	; 0x1a8
   2441a:	movs	r1, r0
   2441c:			; <UNDEFINED> instruction: 0xfa420003
   24420:	lsls	r4, r2, #9
   24422:	movs	r0, r0
   24424:	ldr	r0, [sp, #32]
   24426:	movs	r1, r0
   24428:	str	r7, [sp, #1016]	; 0x3f8
   2442a:	movs	r1, r0
   2442c:	add	r5, sp, #780	; 0x30c
   2442e:	movs	r1, r0
   24430:	str	r7, [sp, #704]	; 0x2c0
   24432:	movs	r1, r0
   24434:	str	r7, [sp, #652]	; 0x28c
   24436:	movs	r1, r0

00024438 <print_extent_item@@Base>:
   24438:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2443c:	sub	sp, #92	; 0x5c
   2443e:	ldr	r3, [pc, #632]	; (246b8 <print_extent_item@@Base+0x280>)
   24440:	add.w	r5, r0, #96	; 0x60
   24444:	str	r2, [sp, #28]
   24446:	movs	r6, #0
   24448:	ldr	r2, [pc, #624]	; (246bc <print_extent_item@@Base+0x284>)
   2444a:	mov	r8, r0
   2444c:	add	r0, sp, #56	; 0x38
   2444e:	ldr.w	sl, [pc, #624]	; 246c0 <print_extent_item@@Base+0x288>
   24452:	add	r2, pc
   24454:	add	sl, pc
   24456:	ldr	r3, [r2, r3]
   24458:	movs	r2, #28
   2445a:	ldr	r3, [r3, #0]
   2445c:	str	r3, [sp, #84]	; 0x54
   2445e:	mov.w	r3, #0
   24462:	movs	r3, #25
   24464:	muls	r1, r3
   24466:	str	r6, [sp, #52]	; 0x34
   24468:	add.w	r7, r1, #101	; 0x65
   2446c:	mov	r1, r6
   2446e:	adds	r4, r5, r7
   24470:	ldr.w	r3, [r4, #21]
   24474:	str	r3, [sp, #24]
   24476:	blx	87c4 <memset@plt+0x4>
   2447a:	ldr	r3, [sp, #24]
   2447c:	cmp	r3, #23
   2447e:	bls.w	245b0 <print_extent_item@@Base+0x178>
   24482:	ldr.w	r4, [r4, #17]
   24486:	mov	r3, r6
   24488:	adds	r4, #101	; 0x65
   2448a:	add.w	r9, r5, r4
   2448e:	ldr.w	fp, [r9, #16]
   24492:	and.w	r2, fp, #1
   24496:	orrs	r3, r2
   24498:	add	r3, sp, #52	; 0x34
   2449a:	beq.w	245c4 <print_extent_item@@Base+0x18c>
   2449e:	ldr	r1, [pc, #548]	; (246c4 <print_extent_item@@Base+0x28c>)
   244a0:	mov	r0, r3
   244a2:	add	r1, pc
   244a4:	blx	85f8 <strcpy@plt>
   244a8:	mov	r3, r0
   244aa:	and.w	r2, fp, #2
   244ae:	str	r2, [sp, #16]
   244b0:	movs	r2, #0
   244b2:	str	r2, [sp, #20]
   244b4:	ldrd	r1, r2, [sp, #16]
   244b8:	orrs	r2, r1
   244ba:	beq.n	244d6 <print_extent_item@@Base+0x9e>
   244bc:	cbnz	r6, 244ca <print_extent_item@@Base+0x92>
   244be:	ldr	r1, [pc, #520]	; (246c8 <print_extent_item@@Base+0x290>)
   244c0:	movs	r2, #32
   244c2:	mov	r0, r3
   244c4:	add	r1, pc
   244c6:	blx	8790 <__strcat_chk@plt>
   244ca:	ldr	r1, [pc, #512]	; (246cc <print_extent_item@@Base+0x294>)
   244cc:	add	r0, sp, #52	; 0x34
   244ce:	movs	r2, #32
   244d0:	add	r1, pc
   244d2:	blx	8790 <__strcat_chk@plt>
   244d6:	and.w	r2, fp, #256	; 0x100
   244da:	movs	r3, #0
   244dc:	orrs	r3, r2
   244de:	beq.n	244f8 <print_extent_item@@Base+0xc0>
   244e0:	add	r3, sp, #52	; 0x34
   244e2:	ldr	r1, [pc, #492]	; (246d0 <print_extent_item@@Base+0x298>)
   244e4:	movs	r2, #32
   244e6:	add	r1, pc
   244e8:	mov	r0, r3
   244ea:	blx	8790 <__strcat_chk@plt>
   244ee:	ldr	r1, [pc, #484]	; (246d4 <print_extent_item@@Base+0x29c>)
   244f0:	movs	r2, #32
   244f2:	add	r1, pc
   244f4:	blx	8790 <__strcat_chk@plt>
   244f8:	add	r3, sp, #52	; 0x34
   244fa:	str	r3, [sp, #8]
   244fc:	ldr.w	r2, [r9, #8]
   24500:	movs	r0, #1
   24502:	ldr.w	r3, [r9, #12]
   24506:	add.w	r6, r4, #24
   2450a:	ldr	r1, [pc, #460]	; (246d8 <print_extent_item@@Base+0x2a0>)
   2450c:	strd	r2, r3, [sp]
   24510:	add	r1, pc
   24512:	ldr.w	r2, [r9]
   24516:	ldr.w	r3, [r9, #4]
   2451a:	blx	8838 <__printf_chk@plt+0x4>
   2451e:	ldrd	r2, r3, [sp, #16]
   24522:	orrs	r3, r2
   24524:	ldr	r3, [sp, #28]
   24526:	beq.n	245c8 <print_extent_item@@Base+0x190>
   24528:	cmp	r3, #0
   2452a:	bne.n	245cc <print_extent_item@@Base+0x194>
   2452c:	add	r7, sp, #32
   2452e:	mov	r2, r6
   24530:	movs	r3, #17
   24532:	mov	r0, r8
   24534:	mov	r1, r7
   24536:	add	r6, r5
   24538:	bl	16a0e <read_extent_buffer@@Base>
   2453c:	ldr	r1, [pc, #412]	; (246dc <print_extent_item@@Base+0x2a4>)
   2453e:	movs	r0, #1
   24540:	add	r1, pc
   24542:	blx	8838 <__printf_chk@plt+0x4>
   24546:	mov	r0, r7
   24548:	bl	2431c <btrfs_print_key@@Base>
   2454c:	ldr	r1, [pc, #400]	; (246e0 <print_extent_item@@Base+0x2a8>)
   2454e:	ldrb	r2, [r6, #17]
   24550:	movs	r0, #1
   24552:	add	r1, pc
   24554:	add.w	r6, r4, #42	; 0x2a
   24558:	blx	8838 <__printf_chk@plt+0x4>
   2455c:	ldr	r3, [sp, #24]
   2455e:	ldr.w	r8, [pc, #388]	; 246e4 <print_extent_item@@Base+0x2ac>
   24562:	ldr.w	r9, [pc, #388]	; 246e8 <print_extent_item@@Base+0x2b0>
   24566:	add	r4, r3
   24568:	ldr.w	fp, [pc, #384]	; 246ec <print_extent_item@@Base+0x2b4>
   2456c:	add	r8, pc
   2456e:	add	r9, pc
   24570:	add	fp, pc
   24572:	cmp	r6, r4
   24574:	bcc.n	245e8 <print_extent_item@@Base+0x1b0>
   24576:	beq.n	245b0 <print_extent_item@@Base+0x178>
   24578:	ldr	r3, [pc, #372]	; (246f0 <print_extent_item@@Base+0x2b8>)
   2457a:	mov.w	r1, #1
   2457e:	ldr	r2, [pc, #372]	; (246f4 <print_extent_item@@Base+0x2bc>)
   24580:	ldr.w	r0, [sl, r3]
   24584:	ite	hi
   24586:	movhi	r3, #1
   24588:	movls	r3, #0
   2458a:	str	r3, [sp, #12]
   2458c:	ldr	r3, [pc, #360]	; (246f8 <print_extent_item@@Base+0x2c0>)
   2458e:	add	r2, pc
   24590:	add	r3, pc
   24592:	str	r3, [sp, #8]
   24594:	ldr	r3, [pc, #356]	; (246fc <print_extent_item@@Base+0x2c4>)
   24596:	add	r3, pc
   24598:	adds	r3, #33	; 0x21
   2459a:	str	r3, [sp, #4]
   2459c:	movw	r3, #497	; 0x1f1
   245a0:	str	r3, [sp, #0]
   245a2:	ldr	r3, [pc, #348]	; (24700 <print_extent_item@@Base+0x2c8>)
   245a4:	ldr	r0, [r0, #0]
   245a6:	add	r3, pc
   245a8:	blx	8860 <__fprintf_chk@plt+0x4>
   245ac:	bl	23a90 <btrfs_destroy_delayed_refs@@Base+0xb4>
   245b0:	ldr	r2, [pc, #336]	; (24704 <print_extent_item@@Base+0x2cc>)
   245b2:	ldr	r3, [pc, #260]	; (246b8 <print_extent_item@@Base+0x280>)
   245b4:	add	r2, pc
   245b6:	ldr	r3, [r2, r3]
   245b8:	ldr	r2, [r3, #0]
   245ba:	ldr	r3, [sp, #84]	; 0x54
   245bc:	eors	r2, r3
   245be:	beq.n	246b0 <print_extent_item@@Base+0x278>
   245c0:	blx	8510 <__stack_chk_fail@plt>
   245c4:	movs	r6, #1
   245c6:	b.n	244aa <print_extent_item@@Base+0x72>
   245c8:	cmp	r3, #0
   245ca:	beq.n	2455c <print_extent_item@@Base+0x124>
   245cc:	add	r1, sp, #32
   245ce:	mov	r2, r7
   245d0:	mov	r0, r8
   245d2:	movs	r3, #17
   245d4:	bl	16a0e <read_extent_buffer@@Base>
   245d8:	ldr	r1, [pc, #300]	; (24708 <print_extent_item@@Base+0x2d0>)
   245da:	ldr.w	r2, [sp, #41]	; 0x29
   245de:	movs	r0, #1
   245e0:	add	r1, pc
   245e2:	blx	8838 <__printf_chk@plt+0x4>
   245e6:	b.n	2455c <print_extent_item@@Base+0x124>
   245e8:	adds	r0, r5, r6
   245ea:	ldrb	r1, [r5, r6]
   245ec:	mov	r3, r0
   245ee:	subs	r1, #176	; 0xb0
   245f0:	ldr.w	r2, [r3, #1]!
   245f4:	ldr	r3, [r3, #4]
   245f6:	cmp	r1, #8
   245f8:	bhi.n	245b0 <print_extent_item@@Base+0x178>
   245fa:	add	r7, pc, #8	; (adr r7, 24604 <print_extent_item@@Base+0x1cc>)
   245fc:	ldr.w	r1, [r7, r1, lsl #2]
   24600:	add	r7, r1
   24602:	bx	r7
   24604:	movs	r5, r4
   24606:	movs	r0, r0
   24608:			; <UNDEFINED> instruction: 0xffadffff
   2460c:	lsls	r7, r3, #1
   2460e:	movs	r0, r0
   24610:			; <UNDEFINED> instruction: 0xffadffff
   24614:			; <UNDEFINED> instruction: 0xffadffff
   24618:			; <UNDEFINED> instruction: 0xffadffff
   2461c:	lsls	r3, r2, #1
   2461e:	movs	r0, r0
   24620:			; <UNDEFINED> instruction: 0xffadffff
   24624:	lsls	r3, r3, #2
   24626:	movs	r0, r0
   24628:	ldr	r1, [pc, #224]	; (2470c <print_extent_item@@Base+0x2d4>)
   2462a:	movs	r0, #1
   2462c:	str	r3, [sp, #24]
   2462e:	add	r1, pc
   24630:	str	r2, [sp, #16]
   24632:	blx	8838 <__printf_chk@plt+0x4>
   24636:	ldr	r1, [pc, #216]	; (24710 <print_extent_item@@Base+0x2d8>)
   24638:	movs	r0, #0
   2463a:	ldr	r2, [sp, #16]
   2463c:	ldr	r3, [sp, #24]
   2463e:	ldr.w	r1, [sl, r1]
   24642:	str	r0, [sp, #0]
   24644:	ldr	r0, [r1, #0]
   24646:	bl	240ac <print_objectid@@Base>
   2464a:	movs	r0, #10
   2464c:	blx	87d4 <putchar@plt+0x4>
   24650:	movs	r3, #9
   24652:	add	r6, r3
   24654:	b.n	24572 <print_extent_item@@Base+0x13a>
   24656:	ldr	r1, [pc, #188]	; (24714 <print_extent_item@@Base+0x2dc>)
   24658:	movs	r0, #1
   2465a:	add	r1, pc
   2465c:	blx	8838 <__printf_chk@plt+0x4>
   24660:	b.n	24650 <print_extent_item@@Base+0x218>
   24662:	mov	r1, r9
   24664:	movs	r0, #1
   24666:	blx	8838 <__printf_chk@plt+0x4>
   2466a:	ldr	r2, [pc, #164]	; (24710 <print_extent_item@@Base+0x2d8>)
   2466c:	adds	r3, r6, #1
   2466e:	adds	r7, r5, r3
   24670:	ldr.w	r1, [sl, r2]
   24674:	movs	r2, #0
   24676:	str	r2, [sp, #0]
   24678:	ldr	r2, [r5, r3]
   2467a:	ldr	r0, [r1, #0]
   2467c:	ldr	r3, [r7, #4]
   2467e:	bl	240ac <print_objectid@@Base>
   24682:	ldr	r3, [r7, #24]
   24684:	mov	r1, fp
   24686:	movs	r0, #1
   24688:	str	r3, [sp, #8]
   2468a:	ldr	r2, [r7, #16]
   2468c:	ldr	r3, [r7, #20]
   2468e:	strd	r2, r3, [sp]
   24692:	ldr	r3, [r7, #12]
   24694:	ldr	r2, [r7, #8]
   24696:	blx	8838 <__printf_chk@plt+0x4>
   2469a:	movs	r3, #29
   2469c:	b.n	24652 <print_extent_item@@Base+0x21a>
   2469e:	ldr.w	r1, [r0, #9]
   246a2:	movs	r0, #1
   246a4:	str	r1, [sp, #0]
   246a6:	mov	r1, r8
   246a8:	blx	8838 <__printf_chk@plt+0x4>
   246ac:	movs	r3, #13
   246ae:	b.n	24652 <print_extent_item@@Base+0x21a>
   246b0:	add	sp, #92	; 0x5c
   246b2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   246b6:	nop
   246b8:	lsls	r0, r4, #8
   246ba:	movs	r0, r0
   246bc:	ldrsh.w	r0, [r2, r3]
   246c0:	ldrsh.w	r0, [r0, r3]
   246c4:	add	r2, pc, #252	; (adr r2, 247c4 <btrfs_print_leaf@@Base+0xac>)
   246c6:	movs	r1, r0
   246c8:	ldr	r1, [r3, #24]
   246ca:	movs	r1, r0
   246cc:	str	r6, [sp, #944]	; 0x3b0
   246ce:	movs	r1, r0
   246d0:	ldr	r7, [r6, #20]
   246d2:	movs	r1, r0
   246d4:	str	r6, [sp, #852]	; 0x354
   246d6:	movs	r1, r0
   246d8:	str	r6, [sp, #784]	; 0x310
   246da:	movs	r1, r0
   246dc:	str	r6, [sp, #716]	; 0x2cc
   246de:	movs	r1, r0
   246e0:	str	r6, [sp, #776]	; 0x308
   246e2:	movs	r1, r0
   246e4:	str	r7, [sp, #204]	; 0xcc
   246e6:	movs	r1, r0
   246e8:	str	r6, [sp, #960]	; 0x3c0
   246ea:	movs	r1, r0
   246ec:	str	r7, [sp, #40]	; 0x28
   246ee:	movs	r1, r0
   246f0:	lsls	r0, r6, #8
   246f2:	movs	r0, r0
   246f4:	ldr	r0, [pc, #888]	; (24a70 <btrfs_print_leaf@@Base+0x358>)
   246f6:	movs	r1, r0
   246f8:	strb	r7, [r3, r7]
   246fa:	movs	r1, r0
   246fc:	add	r4, pc, #992	; (adr r4, 24ae0 <btrfs_print_leaf@@Base+0x3c8>)
   246fe:	movs	r1, r0
   24700:	str	r7, [sp, #148]	; 0x94
   24702:	movs	r1, r0
   24704:			; <UNDEFINED> instruction: 0xf7d00003
   24708:	str	r6, [sp, #132]	; 0x84
   2470a:	movs	r1, r0
   2470c:	str	r5, [sp, #964]	; 0x3c4
   2470e:	movs	r1, r0
   24710:	lsls	r4, r2, #9
   24712:	movs	r0, r0
   24714:	str	r5, [sp, #896]	; 0x380
   24716:	movs	r1, r0

00024718 <btrfs_print_leaf@@Base>:
   24718:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2471c:	mov.w	r8, #0
   24720:	vpush	{d8-d10}
   24724:	mov	r9, r0
   24726:	ldr.w	r2, [pc, #3380]	; 2545c <btrfs_print_leaf@@Base+0xd44>
   2472a:	ldr.w	r3, [pc, #3380]	; 25460 <btrfs_print_leaf@@Base+0xd48>
   2472e:	add	r2, pc
   24730:	ldr.w	r6, [pc, #3376]	; 25464 <btrfs_print_leaf@@Base+0xd4c>
   24734:	subw	sp, sp, #1204	; 0x4b4
   24738:	ldr	r3, [r2, r3]
   2473a:	add	r6, pc
   2473c:	ldr	r3, [r3, #0]
   2473e:	str.w	r3, [sp, #1196]	; 0x4ac
   24742:	mov.w	r3, #0
   24746:	ldr	r3, [r0, #92]	; 0x5c
   24748:	str	r3, [sp, #104]	; 0x68
   2474a:	ldr.w	r3, [r3, #384]	; 0x180
   2474e:	subs	r3, #101	; 0x65
   24750:	str	r3, [sp, #108]	; 0x6c
   24752:	ldr.w	r5, [r0, #152]	; 0x98
   24756:	mov	r3, r8
   24758:	ldr.w	r4, [r0, #156]	; 0x9c
   2475c:	and.w	r2, r5, #1
   24760:	orrs	r3, r2
   24762:	bic.w	r7, r4, #4278190080	; 0xff000000
   24766:	add	r3, sp, #812	; 0x32c
   24768:	mov.w	r4, r4, lsr #24
   2476c:	beq.w	248c0 <btrfs_print_leaf@@Base+0x1a8>
   24770:	ldr.w	r1, [pc, #3316]	; 25468 <btrfs_print_leaf@@Base+0xd50>
   24774:	mov	r0, r3
   24776:	add	r1, pc
   24778:	blx	85f8 <strcpy@plt>
   2477c:	mov	r2, r8
   2477e:	mov	r3, r0
   24780:	and.w	r0, r5, #2
   24784:	movs	r1, #0
   24786:	orrs	r1, r0
   24788:	beq.n	247aa <btrfs_print_leaf@@Base+0x92>
   2478a:	cbnz	r2, 2479c <btrfs_print_leaf@@Base+0x84>
   2478c:	ldr.w	r1, [pc, #3292]	; 2546c <btrfs_print_leaf@@Base+0xd54>
   24790:	mov	r0, r3
   24792:	movs	r2, #128	; 0x80
   24794:	add	r1, pc
   24796:	blx	8790 <__strcat_chk@plt>
   2479a:	mov	r3, r0
   2479c:	ldr.w	r1, [pc, #3280]	; 25470 <btrfs_print_leaf@@Base+0xd58>
   247a0:	movs	r2, #128	; 0x80
   247a2:	mov	r0, r3
   247a4:	add	r1, pc
   247a6:	blx	8790 <__strcat_chk@plt>
   247aa:	ldr.w	r3, [r9, #192]	; 0xc0
   247ae:	mov	r0, r9
   247b0:	ldr.w	r2, [r9, #144]	; 0x90
   247b4:	add.w	sl, r9, #197	; 0xc5
   247b8:	str	r3, [sp, #240]	; 0xf0
   247ba:	ldr.w	r3, [r9, #148]	; 0x94
   247be:	str	r2, [sp, #84]	; 0x54
   247c0:	str	r3, [sp, #80]	; 0x50
   247c2:	bl	186dc <btrfs_leaf_free_space@@Base>
   247c6:	ldr.w	ip, [r9, #176]	; 0xb0
   247ca:	ldr.w	r1, [r9, #180]	; 0xb4
   247ce:	ldr	r3, [sp, #240]	; 0xf0
   247d0:	strd	ip, r1, [sp, #8]
   247d4:	ldr.w	r1, [pc, #3228]	; 25474 <btrfs_print_leaf@@Base+0xd5c>
   247d8:	str	r3, [sp, #0]
   247da:	add	r1, pc
   247dc:	ldrd	r3, r2, [sp, #80]	; 0x50
   247e0:	str	r0, [sp, #4]
   247e2:	movs	r0, #1
   247e4:	blx	8838 <__printf_chk@plt+0x4>
   247e8:	ldr.w	r3, [pc, #3212]	; 25478 <btrfs_print_leaf@@Base+0xd60>
   247ec:	ldr.w	r2, [r9, #184]	; 0xb8
   247f0:	ldr	r3, [r6, r3]
   247f2:	movs	r6, #0
   247f4:	str	r6, [sp, #0]
   247f6:	str	r3, [sp, #100]	; 0x64
   247f8:	ldr	r1, [sp, #100]	; 0x64
   247fa:	ldr.w	r3, [r9, #188]	; 0xbc
   247fe:	ldr	r0, [r1, #0]
   24800:	bl	240ac <print_objectid@@Base>
   24804:	movs	r0, #10
   24806:	blx	87d4 <putchar@plt+0x4>
   2480a:	ldr.w	r1, [pc, #3184]	; 2547c <btrfs_print_leaf@@Base+0xd64>
   2480e:	ldr.w	r2, [r9, #144]	; 0x90
   24812:	add	r3, sp, #812	; 0x32c
   24814:	add	r1, pc
   24816:	str	r3, [sp, #8]
   24818:	movs	r0, #1
   2481a:	ldr.w	r3, [r9, #148]	; 0x94
   2481e:	str	r4, [sp, #12]
   24820:	strd	r5, r7, [sp]
   24824:	blx	8838 <__printf_chk@plt+0x4>
   24828:	mov	r0, r9
   2482a:	bl	23d20 <btrfs_destroy_delayed_refs@@Base+0x344>
   2482e:	ldr	r3, [sp, #100]	; 0x64
   24830:	ldr	r0, [r3, #0]
   24832:	blx	8408 <fflush@plt>
   24836:	ldr.w	r3, [pc, #3144]	; 25480 <btrfs_print_leaf@@Base+0xd68>
   2483a:	str	r6, [sp, #80]	; 0x50
   2483c:	add	r3, pc
   2483e:	vmov	s20, r3
   24842:	ldr.w	r3, [pc, #3136]	; 25484 <btrfs_print_leaf@@Base+0xd6c>
   24846:	add	r3, pc
   24848:	vmov	s21, r3
   2484c:	ldr	r3, [sp, #80]	; 0x50
   2484e:	ldr	r2, [sp, #240]	; 0xf0
   24850:	cmp	r3, r2
   24852:	beq.n	248a4 <btrfs_print_leaf@@Base+0x18c>
   24854:	ldr	r3, [sp, #80]	; 0x50
   24856:	movs	r2, #25
   24858:	ldr.w	r8, [sl, #17]
   2485c:	add.w	fp, r9, #96	; 0x60
   24860:	muls	r2, r3
   24862:	ldr.w	r3, [sl, #21]
   24866:	str	r3, [sp, #84]	; 0x54
   24868:	adds	r2, #101	; 0x65
   2486a:	ldr	r3, [sp, #108]	; 0x6c
   2486c:	cmp	r3, r8
   2486e:	bcc.n	2487a <btrfs_print_leaf@@Base+0x162>
   24870:	ldr	r3, [sp, #84]	; 0x54
   24872:	ldr	r1, [sp, #108]	; 0x6c
   24874:	add	r3, r8
   24876:	cmp	r3, r1
   24878:	bls.n	248c4 <btrfs_print_leaf@@Base+0x1ac>
   2487a:	ldr	r3, [sp, #108]	; 0x6c
   2487c:	ldr.w	r0, [pc, #3080]	; 25488 <btrfs_print_leaf@@Base+0xd70>
   24880:	ldr.w	r2, [r9, #144]	; 0x90
   24884:	str	r3, [sp, #12]
   24886:	add	r0, pc
   24888:	ldr	r3, [sp, #84]	; 0x54
   2488a:	strd	r8, r3, [sp, #4]
   2488e:	ldr	r3, [sp, #80]	; 0x50
   24890:	str	r3, [sp, #0]
   24892:	ldr.w	r3, [r9, #148]	; 0x94
   24896:	bl	16b70 <__btrfs_error@@Base>
   2489a:	ldr.w	r0, [pc, #3056]	; 2548c <btrfs_print_leaf@@Base+0xd74>
   2489e:	add	r0, pc
   248a0:	bl	16b70 <__btrfs_error@@Base>
   248a4:	ldr.w	r2, [pc, #3048]	; 25490 <btrfs_print_leaf@@Base+0xd78>
   248a8:	ldr.w	r3, [pc, #2996]	; 25460 <btrfs_print_leaf@@Base+0xd48>
   248ac:	add	r2, pc
   248ae:	ldr	r3, [r2, r3]
   248b0:	ldr	r2, [r3, #0]
   248b2:	ldr.w	r3, [sp, #1196]	; 0x4ac
   248b6:	eors	r2, r3
   248b8:	beq.w	25a4c <btrfs_print_leaf@@Base+0x1334>
   248bc:	blx	8510 <__stack_chk_fail@plt>
   248c0:	movs	r2, #1
   248c2:	b.n	24780 <btrfs_print_leaf@@Base+0x68>
   248c4:	add	r1, sp, #252	; 0xfc
   248c6:	movs	r3, #17
   248c8:	mov	r0, r9
   248ca:	str	r1, [sp, #96]	; 0x60
   248cc:	bl	16a0e <read_extent_buffer@@Base>
   248d0:	ldr	r3, [sp, #96]	; 0x60
   248d2:	vmov	r1, s20
   248d6:	movs	r0, #1
   248d8:	ldr	r2, [sp, #80]	; 0x50
   248da:	add.w	r7, r8, #101	; 0x65
   248de:	ldrb	r6, [r3, #8]
   248e0:	ldrd	r4, r5, [r3]
   248e4:	ldr.w	r3, [r3, #9]
   248e8:	str	r3, [sp, #88]	; 0x58
   248ea:	ldr	r3, [sp, #96]	; 0x60
   248ec:	ldr.w	r3, [r3, #13]
   248f0:	str	r3, [sp, #92]	; 0x5c
   248f2:	blx	8838 <__printf_chk@plt+0x4>
   248f6:	ldr	r0, [sp, #96]	; 0x60
   248f8:	bl	2431c <btrfs_print_key@@Base>
   248fc:	ldr.w	r1, [pc, #2964]	; 25494 <btrfs_print_leaf@@Base+0xd7c>
   24900:	ldr.w	r3, [sl, #21]
   24904:	movs	r0, #1
   24906:	ldr.w	r2, [sl, #17]
   2490a:	add	r1, pc
   2490c:	blx	8838 <__printf_chk@plt+0x4>
   24910:	cmp	r6, #0
   24912:	bne.n	24994 <btrfs_print_leaf@@Base+0x27c>
   24914:	mov.w	r3, #4294967295	; 0xffffffff
   24918:	cmp	r5, r3
   2491a:	mvn.w	r2, #10
   2491e:	it	eq
   24920:	cmpeq	r4, r2
   24922:	bne.n	24980 <btrfs_print_leaf@@Base+0x268>
   24924:	ldr.w	r3, [sl, #17]
   24928:	add	r4, sp, #272	; 0x110
   2492a:	mov	r0, r9
   2492c:	add.w	r5, r3, #101	; 0x65
   24930:	mov	r1, r4
   24932:	movs	r3, #17
   24934:	mov	r2, r5
   24936:	bl	16a0e <read_extent_buffer@@Base>
   2493a:	ldr.w	r1, [pc, #2908]	; 25498 <btrfs_print_leaf@@Base+0xd80>
   2493e:	movs	r0, #1
   24940:	add	r1, pc
   24942:	blx	8838 <__printf_chk@plt+0x4>
   24946:	mov	r0, r4
   24948:	bl	2431c <btrfs_print_key@@Base>
   2494c:	movs	r0, #10
   2494e:	blx	87d4 <putchar@plt+0x4>
   24952:	add.w	r3, fp, r5
   24956:	mov	r0, r3
   24958:	mov	r1, r3
   2495a:	ldr.w	r4, [r0, #33]!
   2495e:	ldr.w	r2, [r1, #17]!
   24962:	ldr	r0, [r0, #4]
   24964:	strd	r4, r0, [sp, #8]
   24968:	ldr.w	r0, [r3, #25]!
   2496c:	ldr	r3, [r3, #4]
   2496e:	strd	r0, r3, [sp]
   24972:	movs	r0, #1
   24974:	ldr	r3, [r1, #4]
   24976:	ldr.w	r1, [pc, #2852]	; 2549c <btrfs_print_leaf@@Base+0xd84>
   2497a:	add	r1, pc
   2497c:	blx	8838 <__printf_chk@plt+0x4>
   24980:	ldr	r3, [sp, #100]	; 0x64
   24982:	add.w	sl, sl, #25
   24986:	ldr	r0, [r3, #0]
   24988:	blx	8408 <fflush@plt>
   2498c:	ldr	r3, [sp, #80]	; 0x50
   2498e:	adds	r3, #1
   24990:	str	r3, [sp, #80]	; 0x50
   24992:	b.n	2484c <btrfs_print_leaf@@Base+0x134>
   24994:	cmp	r6, #184	; 0xb8
   24996:	bhi.w	24b36 <btrfs_print_leaf@@Base+0x41e>
   2499a:	cmp	r6, #167	; 0xa7
   2499c:	bhi.n	24a44 <btrfs_print_leaf@@Base+0x32c>
   2499e:	cmp	r6, #96	; 0x60
   249a0:	beq.w	24ac2 <btrfs_print_leaf@@Base+0x3aa>
   249a4:	bhi.w	24ae4 <btrfs_print_leaf@@Base+0x3cc>
   249a8:	cmp	r6, #13
   249aa:	beq.w	2502e <btrfs_print_leaf@@Base+0x916>
   249ae:	bhi.n	24a98 <btrfs_print_leaf@@Base+0x380>
   249b0:	cmp	r6, #1
   249b2:	beq.w	24c2e <btrfs_print_leaf@@Base+0x516>
   249b6:	cmp	r6, #12
   249b8:	bne.n	24980 <btrfs_print_leaf@@Base+0x268>
   249ba:	ldr.w	r3, [pc, #2788]	; 254a0 <btrfs_print_leaf@@Base+0xd88>
   249be:	add	r6, sp, #940	; 0x3ac
   249c0:	movs	r5, #0
   249c2:	add	r3, pc
   249c4:	vmov	s17, r3
   249c8:	b.n	24fca <btrfs_print_leaf@@Base+0x8b2>
   249ca:	subs	r6, #228	; 0xe4
   249cc:	cmp	r6, #25
   249ce:	bhi.n	24980 <btrfs_print_leaf@@Base+0x268>
   249d0:	add	r3, pc, #8	; (adr r3, 249dc <btrfs_print_leaf@@Base+0x2c4>)
   249d2:	ldr.w	r2, [r3, r6, lsl #2]
   249d6:	add	r3, r2
   249d8:	bx	r3
   249da:	nop
   249dc:	lsrs	r1, r7, #19
   249de:	movs	r0, r0
   249e0:			; <UNDEFINED> instruction: 0xffa5ffff
   249e4:			; <UNDEFINED> instruction: 0xffa5ffff
   249e8:			; <UNDEFINED> instruction: 0xffa5ffff
   249ec:			; <UNDEFINED> instruction: 0xffa5ffff
   249f0:			; <UNDEFINED> instruction: 0xffa5ffff
   249f4:			; <UNDEFINED> instruction: 0xffa5ffff
   249f8:			; <UNDEFINED> instruction: 0xffa5ffff
   249fc:			; <UNDEFINED> instruction: 0xffa5ffff
   24a00:			; <UNDEFINED> instruction: 0xffa5ffff
   24a04:			; <UNDEFINED> instruction: 0xffa5ffff
   24a08:			; <UNDEFINED> instruction: 0xffa5ffff
   24a0c:	lsrs	r7, r2, #21
   24a0e:	movs	r0, r0
   24a10:			; <UNDEFINED> instruction: 0xffa5ffff
   24a14:	lsrs	r1, r7, #23
   24a16:	movs	r0, r0
   24a18:			; <UNDEFINED> instruction: 0xffa5ffff
   24a1c:	lsrs	r7, r6, #24
   24a1e:	movs	r0, r0
   24a20:			; <UNDEFINED> instruction: 0xffa5ffff
   24a24:			; <UNDEFINED> instruction: 0xffa5ffff
   24a28:			; <UNDEFINED> instruction: 0xffa5ffff
   24a2c:	lsrs	r3, r5, #30
   24a2e:	movs	r0, r0
   24a30:	lsrs	r7, r7, #26
   24a32:	movs	r0, r0
   24a34:			; <UNDEFINED> instruction: 0xffa5ffff
   24a38:	lsrs	r5, r5, #25
   24a3a:	movs	r0, r0
   24a3c:	lsrs	r5, r5, #25
   24a3e:	movs	r0, r0
   24a40:	lsrs	r7, r5, #26
   24a42:	movs	r0, r0
   24a44:	subs	r6, #168	; 0xa8
   24a46:	cmp	r6, #16
   24a48:	bhi.n	24980 <btrfs_print_leaf@@Base+0x268>
   24a4a:	add	r3, pc, #8	; (adr r3, 24a54 <btrfs_print_leaf@@Base+0x33c>)
   24a4c:	ldr.w	r2, [r3, r6, lsl #2]
   24a50:	add	r3, r2
   24a52:	bx	r3
   24a54:	lsrs	r1, r4, #3
   24a56:	movs	r0, r0
   24a58:	lsrs	r7, r5, #3
   24a5a:	movs	r0, r0
   24a5c:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   24a60:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   24a64:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   24a68:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   24a6c:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   24a70:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   24a74:	lsrs	r3, r6, #3
   24a76:	movs	r0, r0
   24a78:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   24a7c:	lsrs	r3, r0, #4
   24a7e:	movs	r0, r0
   24a80:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   24a84:	lsrs	r7, r2, #5
   24a86:	movs	r0, r0
   24a88:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   24a8c:	lsrs	r3, r7, #3
   24a8e:	movs	r0, r0
   24a90:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   24a94:	lsrs	r7, r0, #5
   24a96:	movs	r0, r0
   24a98:	cmp	r6, #60	; 0x3c
   24a9a:	beq.w	25130 <btrfs_print_leaf@@Base+0xa18>
   24a9e:	bhi.n	24ab6 <btrfs_print_leaf@@Base+0x39e>
   24aa0:	cmp	r6, #24
   24aa2:	beq.n	24ac2 <btrfs_print_leaf@@Base+0x3aa>
   24aa4:	cmp	r6, #48	; 0x30
   24aa6:	bne.w	24980 <btrfs_print_leaf@@Base+0x268>
   24aaa:	ldr.w	r0, [pc, #2552]	; 254a4 <btrfs_print_leaf@@Base+0xd8c>
   24aae:	add	r0, pc
   24ab0:	blx	865c <puts@plt+0x4>
   24ab4:	b.n	24980 <btrfs_print_leaf@@Base+0x268>
   24ab6:	cmp	r6, #72	; 0x48
   24ab8:	beq.w	25130 <btrfs_print_leaf@@Base+0xa18>
   24abc:	cmp	r6, #84	; 0x54
   24abe:	bne.w	24980 <btrfs_print_leaf@@Base+0x268>
   24ac2:	ldr.w	r3, [pc, #2532]	; 254a8 <btrfs_print_leaf@@Base+0xd90>
   24ac6:	movs	r6, #0
   24ac8:	add	r3, pc
   24aca:	vmov	s17, r3
   24ace:	ldr.w	r3, [pc, #2524]	; 254ac <btrfs_print_leaf@@Base+0xd94>
   24ad2:	add	r3, pc
   24ad4:	vmov	s18, r3
   24ad8:	ldr.w	r3, [pc, #2516]	; 254b0 <btrfs_print_leaf@@Base+0xd98>
   24adc:	add	r3, pc
   24ade:	vmov	s19, r3
   24ae2:	b.n	25120 <btrfs_print_leaf@@Base+0xa08>
   24ae4:	cmp	r6, #132	; 0x84
   24ae6:	beq.w	2514a <btrfs_print_leaf@@Base+0xa32>
   24aea:	bhi.n	24b1a <btrfs_print_leaf@@Base+0x402>
   24aec:	cmp	r6, #120	; 0x78
   24aee:	beq.w	253b2 <btrfs_print_leaf@@Base+0xc9a>
   24af2:	cmp	r6, #128	; 0x80
   24af4:	beq.w	253ba <btrfs_print_leaf@@Base+0xca2>
   24af8:	cmp	r6, #108	; 0x6c
   24afa:	bne.w	24980 <btrfs_print_leaf@@Base+0x268>
   24afe:	add.w	r4, fp, r7
   24b02:	add	r0, sp, #940	; 0x3ac
   24b04:	ldrb	r3, [r4, #16]
   24b06:	ldrb	r5, [r4, #20]
   24b08:	cmp	r3, #3
   24b0a:	bhi.w	255bc <btrfs_print_leaf@@Base+0xea4>
   24b0e:	tbh	[pc, r3, lsl #1]
   24b12:	lsls	r6, r5, #17
   24b14:	lsls	r3, r3, #18
   24b16:	lsls	r6, r3, #18
   24b18:	lsls	r1, r4, #18
   24b1a:	cmp	r6, #144	; 0x90
   24b1c:	beq.w	2532c <btrfs_print_leaf@@Base+0xc14>
   24b20:	cmp	r6, #156	; 0x9c
   24b22:	bne.w	24980 <btrfs_print_leaf@@Base+0x268>
   24b26:	ldr.w	r2, [pc, #2444]	; 254b4 <btrfs_print_leaf@@Base+0xd9c>
   24b2a:	add	r2, pc
   24b2c:	ldr	r1, [sp, #80]	; 0x50
   24b2e:	mov	r0, r9
   24b30:	bl	23ca0 <btrfs_destroy_delayed_refs@@Base+0x2c4>
   24b34:	b.n	24980 <btrfs_print_leaf@@Base+0x268>
   24b36:	cmp	r6, #253	; 0xfd
   24b38:	bhi.w	24980 <btrfs_print_leaf@@Base+0x268>
   24b3c:	cmp	r6, #227	; 0xe3
   24b3e:	bhi.w	249ca <btrfs_print_leaf@@Base+0x2b2>
   24b42:	cmp	r6, #204	; 0xcc
   24b44:	bhi.n	24b94 <btrfs_print_leaf@@Base+0x47c>
   24b46:	cmp	r6, #191	; 0xbf
   24b48:	bls.w	24980 <btrfs_print_leaf@@Base+0x268>
   24b4c:	subs	r6, #192	; 0xc0
   24b4e:	cmp	r6, #12
   24b50:	bhi.w	24980 <btrfs_print_leaf@@Base+0x268>
   24b54:	add	r3, pc, #8	; (adr r3, 24b60 <btrfs_print_leaf@@Base+0x448>)
   24b56:	ldr.w	r2, [r3, r6, lsl #2]
   24b5a:	add	r3, r2
   24b5c:	bx	r3
   24b5e:	nop
   24b60:	lsrs	r5, r2, #12
   24b62:	movs	r0, r0
   24b64:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   24b68:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   24b6c:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   24b70:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   24b74:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   24b78:	lsrs	r7, r1, #13
   24b7a:	movs	r0, r0
   24b7c:	lsrs	r5, r4, #13
   24b7e:	movs	r0, r0
   24b80:	lsrs	r5, r5, #13
   24b82:	movs	r0, r0
   24b84:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   24b88:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   24b8c:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   24b90:	lsrs	r1, r0, #14
   24b92:	movs	r0, r0
   24b94:	cmp	r6, #216	; 0xd8
   24b96:	bne.w	24980 <btrfs_print_leaf@@Base+0x268>
   24b9a:	add	r4, sp, #740	; 0x2e4
   24b9c:	add.w	r2, r8, #167	; 0xa7
   24ba0:	add	r5, sp, #772	; 0x304
   24ba2:	movs	r3, #16
   24ba4:	mov	r1, r4
   24ba6:	mov	r0, r9
   24ba8:	bl	16a0e <read_extent_buffer@@Base>
   24bac:	mov	r0, r4
   24bae:	add	r4, sp, #756	; 0x2f4
   24bb0:	add	r6, sp, #940	; 0x3ac
   24bb2:	mov	r1, r5
   24bb4:	blx	83d8 <uuid_unparse@plt>
   24bb8:	add.w	r2, r8, #183	; 0xb7
   24bbc:	movs	r3, #16
   24bbe:	mov	r1, r4
   24bc0:	mov	r0, r9
   24bc2:	bl	16a0e <read_extent_buffer@@Base>
   24bc6:	mov	r1, r6
   24bc8:	mov	r0, r4
   24bca:	blx	83d8 <uuid_unparse@plt>
   24bce:	add.w	r3, fp, r7
   24bd2:	strd	r5, r6, [sp, #68]	; 0x44
   24bd6:	movs	r0, #1
   24bd8:	ldrb.w	r2, [r3, #65]	; 0x41
   24bdc:	str	r2, [sp, #64]	; 0x40
   24bde:	ldrb.w	r2, [r3, #64]	; 0x40
   24be2:	str	r2, [sp, #60]	; 0x3c
   24be4:	ldr	r2, [r3, #60]	; 0x3c
   24be6:	str	r2, [sp, #56]	; 0x38
   24be8:	ldr	r1, [r3, #52]	; 0x34
   24bea:	ldr	r2, [r3, #56]	; 0x38
   24bec:	strd	r1, r2, [sp, #48]	; 0x30
   24bf0:	ldr	r1, [r3, #44]	; 0x2c
   24bf2:	ldr	r2, [r3, #48]	; 0x30
   24bf4:	strd	r1, r2, [sp, #40]	; 0x28
   24bf8:	ldr	r1, [r3, #36]	; 0x24
   24bfa:	ldr	r2, [r3, #40]	; 0x28
   24bfc:	strd	r1, r2, [sp, #32]
   24c00:	ldr	r2, [r3, #32]
   24c02:	str	r2, [sp, #24]
   24c04:	ldr	r2, [r3, #28]
   24c06:	str	r2, [sp, #20]
   24c08:	ldr	r2, [r3, #24]
   24c0a:	str	r2, [sp, #16]
   24c0c:	ldr	r1, [r3, #16]
   24c0e:	ldr	r2, [r3, #20]
   24c10:	strd	r1, r2, [sp, #8]
   24c14:	ldr	r1, [r3, #8]
   24c16:	ldr	r2, [r3, #12]
   24c18:	strd	r1, r2, [sp]
   24c1c:	ldr.w	r1, [pc, #2200]	; 254b8 <btrfs_print_leaf@@Base+0xda0>
   24c20:	ldr.w	r2, [fp, r7]
   24c24:	ldr	r3, [r3, #4]
   24c26:	add	r1, pc
   24c28:	blx	8838 <__printf_chk@plt+0x4>
   24c2c:	b.n	24980 <btrfs_print_leaf@@Base+0x268>
   24c2e:	add	r3, sp, #940	; 0x3ac
   24c30:	add	fp, r7
   24c32:	mov.w	r2, #256	; 0x100
   24c36:	movs	r1, #0
   24c38:	mov	r0, r3
   24c3a:	movs	r7, #0
   24c3c:	blx	87c4 <memset@plt+0x4>
   24c40:	ldr.w	r5, [fp, #64]	; 0x40
   24c44:	ldr.w	r4, [fp, #68]	; 0x44
   24c48:	and.w	r2, r5, #1
   24c4c:	strd	r2, r7, [sp, #112]	; 0x70
   24c50:	ldrd	r1, r2, [sp, #112]	; 0x70
   24c54:	orrs	r2, r1
   24c56:	beq.n	24c68 <btrfs_print_leaf@@Base+0x550>
   24c58:	ldr.w	r1, [pc, #2144]	; 254bc <btrfs_print_leaf@@Base+0xda4>
   24c5c:	mov.w	r2, #256	; 0x100
   24c60:	mov	r6, r7
   24c62:	add	r1, pc
   24c64:	blx	8790 <__strcat_chk@plt>
   24c68:	and.w	r3, r5, #2
   24c6c:	str	r3, [sp, #120]	; 0x78
   24c6e:	movs	r3, #0
   24c70:	str	r3, [sp, #124]	; 0x7c
   24c72:	ldrd	r2, r3, [sp, #120]	; 0x78
   24c76:	orrs	r3, r2
   24c78:	beq.n	24c9e <btrfs_print_leaf@@Base+0x586>
   24c7a:	cbnz	r6, 24c8c <btrfs_print_leaf@@Base+0x574>
   24c7c:	ldr.w	r1, [pc, #2112]	; 254c0 <btrfs_print_leaf@@Base+0xda8>
   24c80:	add	r0, sp, #940	; 0x3ac
   24c82:	mov.w	r2, #256	; 0x100
   24c86:	add	r1, pc
   24c88:	blx	8790 <__strcat_chk@plt>
   24c8c:	ldr.w	r1, [pc, #2100]	; 254c4 <btrfs_print_leaf@@Base+0xdac>
   24c90:	add	r0, sp, #940	; 0x3ac
   24c92:	mov.w	r2, #256	; 0x100
   24c96:	movs	r6, #0
   24c98:	add	r1, pc
   24c9a:	blx	8790 <__strcat_chk@plt>
   24c9e:	and.w	r3, r5, #4
   24ca2:	str	r3, [sp, #128]	; 0x80
   24ca4:	movs	r3, #0
   24ca6:	str	r3, [sp, #132]	; 0x84
   24ca8:	ldrd	r2, r3, [sp, #128]	; 0x80
   24cac:	orrs	r3, r2
   24cae:	beq.n	24cd4 <btrfs_print_leaf@@Base+0x5bc>
   24cb0:	cbnz	r6, 24cc2 <btrfs_print_leaf@@Base+0x5aa>
   24cb2:	ldr.w	r1, [pc, #2068]	; 254c8 <btrfs_print_leaf@@Base+0xdb0>
   24cb6:	add	r0, sp, #940	; 0x3ac
   24cb8:	mov.w	r2, #256	; 0x100
   24cbc:	add	r1, pc
   24cbe:	blx	8790 <__strcat_chk@plt>
   24cc2:	ldr.w	r1, [pc, #2056]	; 254cc <btrfs_print_leaf@@Base+0xdb4>
   24cc6:	add	r0, sp, #940	; 0x3ac
   24cc8:	mov.w	r2, #256	; 0x100
   24ccc:	movs	r6, #0
   24cce:	add	r1, pc
   24cd0:	blx	8790 <__strcat_chk@plt>
   24cd4:	and.w	r3, r5, #8
   24cd8:	str	r3, [sp, #136]	; 0x88
   24cda:	movs	r3, #0
   24cdc:	str	r3, [sp, #140]	; 0x8c
   24cde:	ldrd	r2, r3, [sp, #136]	; 0x88
   24ce2:	orrs	r3, r2
   24ce4:	beq.n	24d0a <btrfs_print_leaf@@Base+0x5f2>
   24ce6:	cbnz	r6, 24cf8 <btrfs_print_leaf@@Base+0x5e0>
   24ce8:	ldr.w	r1, [pc, #2020]	; 254d0 <btrfs_print_leaf@@Base+0xdb8>
   24cec:	add	r0, sp, #940	; 0x3ac
   24cee:	mov.w	r2, #256	; 0x100
   24cf2:	add	r1, pc
   24cf4:	blx	8790 <__strcat_chk@plt>
   24cf8:	ldr.w	r1, [pc, #2008]	; 254d4 <btrfs_print_leaf@@Base+0xdbc>
   24cfc:	add	r0, sp, #940	; 0x3ac
   24cfe:	mov.w	r2, #256	; 0x100
   24d02:	movs	r6, #0
   24d04:	add	r1, pc
   24d06:	blx	8790 <__strcat_chk@plt>
   24d0a:	and.w	r3, r5, #16
   24d0e:	str	r3, [sp, #144]	; 0x90
   24d10:	movs	r3, #0
   24d12:	str	r3, [sp, #148]	; 0x94
   24d14:	ldrd	r2, r3, [sp, #144]	; 0x90
   24d18:	orrs	r3, r2
   24d1a:	beq.n	24d40 <btrfs_print_leaf@@Base+0x628>
   24d1c:	cbnz	r6, 24d2e <btrfs_print_leaf@@Base+0x616>
   24d1e:	ldr.w	r1, [pc, #1976]	; 254d8 <btrfs_print_leaf@@Base+0xdc0>
   24d22:	add	r0, sp, #940	; 0x3ac
   24d24:	mov.w	r2, #256	; 0x100
   24d28:	add	r1, pc
   24d2a:	blx	8790 <__strcat_chk@plt>
   24d2e:	ldr.w	r1, [pc, #1964]	; 254dc <btrfs_print_leaf@@Base+0xdc4>
   24d32:	add	r0, sp, #940	; 0x3ac
   24d34:	mov.w	r2, #256	; 0x100
   24d38:	movs	r6, #0
   24d3a:	add	r1, pc
   24d3c:	blx	8790 <__strcat_chk@plt>
   24d40:	and.w	r3, r5, #32
   24d44:	str	r3, [sp, #152]	; 0x98
   24d46:	movs	r3, #0
   24d48:	str	r3, [sp, #156]	; 0x9c
   24d4a:	ldrd	r2, r3, [sp, #152]	; 0x98
   24d4e:	orrs	r3, r2
   24d50:	beq.n	24d76 <btrfs_print_leaf@@Base+0x65e>
   24d52:	cbnz	r6, 24d64 <btrfs_print_leaf@@Base+0x64c>
   24d54:	ldr.w	r1, [pc, #1928]	; 254e0 <btrfs_print_leaf@@Base+0xdc8>
   24d58:	add	r0, sp, #940	; 0x3ac
   24d5a:	mov.w	r2, #256	; 0x100
   24d5e:	add	r1, pc
   24d60:	blx	8790 <__strcat_chk@plt>
   24d64:	ldr.w	r1, [pc, #1916]	; 254e4 <btrfs_print_leaf@@Base+0xdcc>
   24d68:	add	r0, sp, #940	; 0x3ac
   24d6a:	mov.w	r2, #256	; 0x100
   24d6e:	movs	r6, #0
   24d70:	add	r1, pc
   24d72:	blx	8790 <__strcat_chk@plt>
   24d76:	and.w	r3, r5, #64	; 0x40
   24d7a:	str	r3, [sp, #160]	; 0xa0
   24d7c:	movs	r3, #0
   24d7e:	str	r3, [sp, #164]	; 0xa4
   24d80:	ldrd	r2, r3, [sp, #160]	; 0xa0
   24d84:	orrs	r3, r2
   24d86:	beq.n	24dac <btrfs_print_leaf@@Base+0x694>
   24d88:	cbnz	r6, 24d9a <btrfs_print_leaf@@Base+0x682>
   24d8a:	ldr.w	r1, [pc, #1884]	; 254e8 <btrfs_print_leaf@@Base+0xdd0>
   24d8e:	add	r0, sp, #940	; 0x3ac
   24d90:	mov.w	r2, #256	; 0x100
   24d94:	add	r1, pc
   24d96:	blx	8790 <__strcat_chk@plt>
   24d9a:	ldr.w	r1, [pc, #1872]	; 254ec <btrfs_print_leaf@@Base+0xdd4>
   24d9e:	add	r0, sp, #940	; 0x3ac
   24da0:	mov.w	r2, #256	; 0x100
   24da4:	movs	r6, #0
   24da6:	add	r1, pc
   24da8:	blx	8790 <__strcat_chk@plt>
   24dac:	and.w	r3, r5, #128	; 0x80
   24db0:	str	r3, [sp, #168]	; 0xa8
   24db2:	movs	r3, #0
   24db4:	str	r3, [sp, #172]	; 0xac
   24db6:	ldrd	r2, r3, [sp, #168]	; 0xa8
   24dba:	orrs	r3, r2
   24dbc:	beq.n	24de2 <btrfs_print_leaf@@Base+0x6ca>
   24dbe:	cbnz	r6, 24dd0 <btrfs_print_leaf@@Base+0x6b8>
   24dc0:	ldr.w	r1, [pc, #1836]	; 254f0 <btrfs_print_leaf@@Base+0xdd8>
   24dc4:	add	r0, sp, #940	; 0x3ac
   24dc6:	mov.w	r2, #256	; 0x100
   24dca:	add	r1, pc
   24dcc:	blx	8790 <__strcat_chk@plt>
   24dd0:	ldr.w	r1, [pc, #1824]	; 254f4 <btrfs_print_leaf@@Base+0xddc>
   24dd4:	add	r0, sp, #940	; 0x3ac
   24dd6:	mov.w	r2, #256	; 0x100
   24dda:	movs	r6, #0
   24ddc:	add	r1, pc
   24dde:	blx	8790 <__strcat_chk@plt>
   24de2:	and.w	r3, r5, #256	; 0x100
   24de6:	str	r3, [sp, #176]	; 0xb0
   24de8:	movs	r3, #0
   24dea:	str	r3, [sp, #180]	; 0xb4
   24dec:	ldrd	r2, r3, [sp, #176]	; 0xb0
   24df0:	orrs	r3, r2
   24df2:	beq.n	24e18 <btrfs_print_leaf@@Base+0x700>
   24df4:	cbnz	r6, 24e06 <btrfs_print_leaf@@Base+0x6ee>
   24df6:	ldr.w	r1, [pc, #1792]	; 254f8 <btrfs_print_leaf@@Base+0xde0>
   24dfa:	add	r0, sp, #940	; 0x3ac
   24dfc:	mov.w	r2, #256	; 0x100
   24e00:	add	r1, pc
   24e02:	blx	8790 <__strcat_chk@plt>
   24e06:	ldr.w	r1, [pc, #1780]	; 254fc <btrfs_print_leaf@@Base+0xde4>
   24e0a:	add	r0, sp, #940	; 0x3ac
   24e0c:	mov.w	r2, #256	; 0x100
   24e10:	movs	r6, #0
   24e12:	add	r1, pc
   24e14:	blx	8790 <__strcat_chk@plt>
   24e18:	and.w	r3, r5, #512	; 0x200
   24e1c:	str	r3, [sp, #184]	; 0xb8
   24e1e:	movs	r3, #0
   24e20:	str	r3, [sp, #188]	; 0xbc
   24e22:	ldrd	r2, r3, [sp, #184]	; 0xb8
   24e26:	orrs	r3, r2
   24e28:	beq.n	24e4e <btrfs_print_leaf@@Base+0x736>
   24e2a:	cbnz	r6, 24e3c <btrfs_print_leaf@@Base+0x724>
   24e2c:	ldr.w	r1, [pc, #1744]	; 25500 <btrfs_print_leaf@@Base+0xde8>
   24e30:	add	r0, sp, #940	; 0x3ac
   24e32:	mov.w	r2, #256	; 0x100
   24e36:	add	r1, pc
   24e38:	blx	8790 <__strcat_chk@plt>
   24e3c:	ldr.w	r1, [pc, #1732]	; 25504 <btrfs_print_leaf@@Base+0xdec>
   24e40:	add	r0, sp, #940	; 0x3ac
   24e42:	mov.w	r2, #256	; 0x100
   24e46:	movs	r6, #0
   24e48:	add	r1, pc
   24e4a:	blx	8790 <__strcat_chk@plt>
   24e4e:	and.w	r3, r5, #1024	; 0x400
   24e52:	str	r3, [sp, #192]	; 0xc0
   24e54:	movs	r3, #0
   24e56:	str	r3, [sp, #196]	; 0xc4
   24e58:	ldrd	r2, r3, [sp, #192]	; 0xc0
   24e5c:	orrs	r3, r2
   24e5e:	beq.n	24e84 <btrfs_print_leaf@@Base+0x76c>
   24e60:	cbnz	r6, 24e72 <btrfs_print_leaf@@Base+0x75a>
   24e62:	ldr.w	r1, [pc, #1700]	; 25508 <btrfs_print_leaf@@Base+0xdf0>
   24e66:	add	r0, sp, #940	; 0x3ac
   24e68:	mov.w	r2, #256	; 0x100
   24e6c:	add	r1, pc
   24e6e:	blx	8790 <__strcat_chk@plt>
   24e72:	ldr.w	r1, [pc, #1688]	; 2550c <btrfs_print_leaf@@Base+0xdf4>
   24e76:	add	r0, sp, #940	; 0x3ac
   24e78:	mov.w	r2, #256	; 0x100
   24e7c:	movs	r6, #0
   24e7e:	add	r1, pc
   24e80:	blx	8790 <__strcat_chk@plt>
   24e84:	and.w	r3, r5, #2048	; 0x800
   24e88:	str	r3, [sp, #200]	; 0xc8
   24e8a:	movs	r3, #0
   24e8c:	str	r3, [sp, #204]	; 0xcc
   24e8e:	ldrd	r2, r3, [sp, #200]	; 0xc8
   24e92:	add	r0, sp, #940	; 0x3ac
   24e94:	orrs	r3, r2
   24e96:	beq.n	24f76 <btrfs_print_leaf@@Base+0x85e>
   24e98:	cbnz	r6, 24ea8 <btrfs_print_leaf@@Base+0x790>
   24e9a:	ldr.w	r1, [pc, #1652]	; 25510 <btrfs_print_leaf@@Base+0xdf8>
   24e9e:	mov.w	r2, #256	; 0x100
   24ea2:	add	r1, pc
   24ea4:	blx	8790 <__strcat_chk@plt>
   24ea8:	ldr.w	r1, [pc, #1640]	; 25514 <btrfs_print_leaf@@Base+0xdfc>
   24eac:	add	r0, sp, #940	; 0x3ac
   24eae:	mov.w	r2, #256	; 0x100
   24eb2:	add	r1, pc
   24eb4:	blx	8790 <__strcat_chk@plt>
   24eb8:	strd	r5, r4, [sp, #64]	; 0x40
   24ebc:	add	r3, sp, #940	; 0x3ac
   24ebe:	str	r3, [sp, #72]	; 0x48
   24ec0:	movs	r0, #1
   24ec2:	ldr.w	r2, [fp, #72]	; 0x48
   24ec6:	ldr.w	r3, [fp, #76]	; 0x4c
   24eca:	ldr.w	r1, [pc, #1612]	; 25518 <btrfs_print_leaf@@Base+0xe00>
   24ece:	strd	r2, r3, [sp, #56]	; 0x38
   24ed2:	add	r1, pc
   24ed4:	ldr.w	r2, [fp, #56]	; 0x38
   24ed8:	ldr.w	r3, [fp, #60]	; 0x3c
   24edc:	strd	r2, r3, [sp, #48]	; 0x30
   24ee0:	ldr.w	r3, [fp, #48]	; 0x30
   24ee4:	str	r3, [sp, #44]	; 0x2c
   24ee6:	ldr.w	r3, [fp, #44]	; 0x2c
   24eea:	str	r3, [sp, #40]	; 0x28
   24eec:	ldr.w	r3, [fp, #40]	; 0x28
   24ef0:	str	r3, [sp, #36]	; 0x24
   24ef2:	ldr.w	r3, [fp, #52]	; 0x34
   24ef6:	str	r3, [sp, #32]
   24ef8:	ldr.w	r2, [fp, #32]
   24efc:	ldr.w	r3, [fp, #36]	; 0x24
   24f00:	strd	r2, r3, [sp, #24]
   24f04:	ldr.w	r2, [fp, #24]
   24f08:	ldr.w	r3, [fp, #28]
   24f0c:	strd	r2, r3, [sp, #16]
   24f10:	ldr.w	r2, [fp, #16]
   24f14:	ldr.w	r3, [fp, #20]
   24f18:	strd	r2, r3, [sp, #8]
   24f1c:	ldr.w	r2, [fp, #8]
   24f20:	ldr.w	r3, [fp, #12]
   24f24:	strd	r2, r3, [sp]
   24f28:	ldr.w	r3, [fp, #4]
   24f2c:	ldr.w	r2, [fp]
   24f30:	blx	8838 <__printf_chk@plt+0x4>
   24f34:	ldr.w	r2, [pc, #1508]	; 2551c <btrfs_print_leaf@@Base+0xe04>
   24f38:	add.w	r1, r8, #213	; 0xd5
   24f3c:	mov	r0, r9
   24f3e:	add	r2, pc
   24f40:	bl	23da4 <btrfs_destroy_delayed_refs@@Base+0x3c8>
   24f44:	ldr.w	r2, [pc, #1496]	; 25520 <btrfs_print_leaf@@Base+0xe08>
   24f48:	add.w	r1, r8, #225	; 0xe1
   24f4c:	mov	r0, r9
   24f4e:	add	r2, pc
   24f50:	bl	23da4 <btrfs_destroy_delayed_refs@@Base+0x3c8>
   24f54:	ldr.w	r2, [pc, #1484]	; 25524 <btrfs_print_leaf@@Base+0xe0c>
   24f58:	add.w	r1, r8, #237	; 0xed
   24f5c:	mov	r0, r9
   24f5e:	add	r2, pc
   24f60:	bl	23da4 <btrfs_destroy_delayed_refs@@Base+0x3c8>
   24f64:	ldr.w	r2, [pc, #1472]	; 25528 <btrfs_print_leaf@@Base+0xe10>
   24f68:	add.w	r1, r8, #249	; 0xf9
   24f6c:	mov	r0, r9
   24f6e:	add	r2, pc
   24f70:	bl	23da4 <btrfs_destroy_delayed_refs@@Base+0x3c8>
   24f74:	b.n	24980 <btrfs_print_leaf@@Base+0x268>
   24f76:	cmp	r6, #0
   24f78:	beq.n	24eb8 <btrfs_print_leaf@@Base+0x7a0>
   24f7a:	ldr.w	r1, [pc, #1456]	; 2552c <btrfs_print_leaf@@Base+0xe14>
   24f7e:	mov.w	r2, #256	; 0x100
   24f82:	add	r1, pc
   24f84:	b.n	24eb4 <btrfs_print_leaf@@Base+0x79c>
   24f86:	add.w	r3, fp, r7
   24f8a:	mov	r1, r6
   24f8c:	mov	r0, r9
   24f8e:	ldrh	r4, [r3, #8]
   24f90:	ldr	r2, [r3, #0]
   24f92:	cmp	r4, #255	; 0xff
   24f94:	ldr.w	r8, [r3, #4]
   24f98:	mov	r3, r4
   24f9a:	vmov	s16, r2
   24f9e:	it	cs
   24fa0:	movcs	r3, #255	; 0xff
   24fa2:	add.w	r2, r7, #10
   24fa6:	str	r3, [sp, #96]	; 0x60
   24fa8:	bl	16a0e <read_extent_buffer@@Base>
   24fac:	ldr	r3, [sp, #96]	; 0x60
   24fae:	vmov	r2, s16
   24fb2:	movs	r0, #1
   24fb4:	vmov	r1, s17
   24fb8:	strd	r4, r3, [sp]
   24fbc:	mov	r3, r8
   24fbe:	str	r6, [sp, #8]
   24fc0:	adds	r4, #10
   24fc2:	blx	8838 <__printf_chk@plt+0x4>
   24fc6:	add	r7, r4
   24fc8:	add	r5, r4
   24fca:	ldr	r3, [sp, #84]	; 0x54
   24fcc:	cmp	r3, r5
   24fce:	bhi.n	24f86 <btrfs_print_leaf@@Base+0x86e>
   24fd0:	b.n	24980 <btrfs_print_leaf@@Base+0x268>
   24fd2:	add.w	r3, fp, r7
   24fd6:	mov	r1, r6
   24fd8:	mov	r0, r9
   24fda:	ldr	r2, [r3, #8]
   24fdc:	ldrh	r4, [r3, #16]
   24fde:	ldr.w	r8, [r3, #12]
   24fe2:	vmov	s16, r2
   24fe6:	ldr	r2, [r3, #0]
   24fe8:	ldr	r3, [r3, #4]
   24fea:	cmp	r4, #255	; 0xff
   24fec:	str	r2, [sp, #96]	; 0x60
   24fee:	add.w	r2, r7, #18
   24ff2:	str	r3, [sp, #88]	; 0x58
   24ff4:	mov	r3, r4
   24ff6:	it	cs
   24ff8:	movcs	r3, #255	; 0xff
   24ffa:	str	r3, [sp, #244]	; 0xf4
   24ffc:	bl	16a0e <read_extent_buffer@@Base>
   25000:	ldr	r3, [sp, #244]	; 0xf4
   25002:	vmov	r2, s16
   25006:	movs	r0, #1
   25008:	vmov	r1, s17
   2500c:	strd	r4, r3, [sp, #8]
   25010:	adds	r4, #18
   25012:	ldr	r3, [sp, #96]	; 0x60
   25014:	add	r7, r4
   25016:	str	r6, [sp, #16]
   25018:	add	r5, r4
   2501a:	str	r3, [sp, #0]
   2501c:	ldr	r3, [sp, #88]	; 0x58
   2501e:	str	r3, [sp, #4]
   25020:	mov	r3, r8
   25022:	blx	8838 <__printf_chk@plt+0x4>
   25026:	ldr	r3, [sp, #84]	; 0x54
   25028:	cmp	r3, r5
   2502a:	bhi.n	24fd2 <btrfs_print_leaf@@Base+0x8ba>
   2502c:	b.n	24980 <btrfs_print_leaf@@Base+0x268>
   2502e:	ldr.w	r3, [pc, #1280]	; 25530 <btrfs_print_leaf@@Base+0xe18>
   25032:	add	r6, sp, #940	; 0x3ac
   25034:	movs	r5, #0
   25036:	add	r3, pc
   25038:	vmov	s17, r3
   2503c:	b.n	25026 <btrfs_print_leaf@@Base+0x90e>
   2503e:	add	r4, sp, #272	; 0x110
   25040:	movs	r3, #17
   25042:	mov	r2, r7
   25044:	mov	r0, r9
   25046:	mov	r1, r4
   25048:	add.w	r5, fp, r7
   2504c:	bl	16a0e <read_extent_buffer@@Base>
   25050:	vmov	r1, s17
   25054:	movs	r0, #1
   25056:	blx	8838 <__printf_chk@plt+0x4>
   2505a:	mov	r0, r4
   2505c:	bl	2431c <btrfs_print_key@@Base>
   25060:	vmov	r1, s18
   25064:	movs	r0, #1
   25066:	blx	8838 <__printf_chk@plt+0x4>
   2506a:	ldrb	r3, [r5, #29]
   2506c:	cmp	r3, #8
   2506e:	bhi.n	25128 <btrfs_print_leaf@@Base+0xa10>
   25070:	ldr.w	r2, [pc, #1216]	; 25534 <btrfs_print_leaf@@Base+0xe1c>
   25074:	add	r2, pc
   25076:	add.w	r2, r2, r3, lsl #2
   2507a:	ldr.w	r2, [r2, #1024]	; 0x400
   2507e:	cmp	r2, #0
   25080:	beq.n	25128 <btrfs_print_leaf@@Base+0xa10>
   25082:	ldr.w	r1, [pc, #1204]	; 25538 <btrfs_print_leaf@@Base+0xe20>
   25086:	add	r1, pc
   25088:	movs	r0, #1
   2508a:	add.w	r8, sp, #940	; 0x3ac
   2508e:	blx	8838 <__printf_chk@plt+0x4>
   25092:	movs	r0, #10
   25094:	blx	87d4 <putchar@plt+0x4>
   25098:	ldrh.w	r4, [r5, #27]
   2509c:	ldrh.w	r3, [r5, #25]
   250a0:	mov	r1, r8
   250a2:	cmp	r4, #255	; 0xff
   250a4:	mov	r0, r9
   250a6:	str	r3, [sp, #96]	; 0x60
   250a8:	mov	r3, r4
   250aa:	it	cs
   250ac:	movcs	r3, #255	; 0xff
   250ae:	vmov	s16, r3
   250b2:	add.w	r3, r7, #30
   250b6:	str	r3, [sp, #88]	; 0x58
   250b8:	ldr	r2, [sp, #88]	; 0x58
   250ba:	vmov	r3, s16
   250be:	bl	16a0e <read_extent_buffer@@Base>
   250c2:	ldr.w	r2, [r5, #17]!
   250c6:	ldr	r3, [sp, #96]	; 0x60
   250c8:	movs	r0, #1
   250ca:	ldr.w	r1, [pc, #1136]	; 2553c <btrfs_print_leaf@@Base+0xe24>
   250ce:	str	r4, [sp, #4]
   250d0:	add	r1, pc
   250d2:	str	r3, [sp, #0]
   250d4:	ldr	r3, [r5, #4]
   250d6:	blx	8838 <__printf_chk@plt+0x4>
   250da:	ldr.w	r1, [pc, #1124]	; 25540 <btrfs_print_leaf@@Base+0xe28>
   250de:	mov	r3, r8
   250e0:	vmov	r2, s16
   250e4:	add	r1, pc
   250e6:	movs	r0, #1
   250e8:	blx	8838 <__printf_chk@plt+0x4>
   250ec:	ldr	r3, [sp, #96]	; 0x60
   250ee:	cbz	r3, 25116 <btrfs_print_leaf@@Base+0x9fe>
   250f0:	cmp	r3, #255	; 0xff
   250f2:	ldr	r2, [sp, #88]	; 0x58
   250f4:	mov	r5, r3
   250f6:	mov	r1, r8
   250f8:	it	cs
   250fa:	movcs	r5, #255	; 0xff
   250fc:	add	r2, r4
   250fe:	mov	r3, r5
   25100:	mov	r0, r9
   25102:	bl	16a0e <read_extent_buffer@@Base>
   25106:	ldr.w	r1, [pc, #1084]	; 25544 <btrfs_print_leaf@@Base+0xe2c>
   2510a:	mov	r3, r8
   2510c:	mov	r2, r5
   2510e:	add	r1, pc
   25110:	movs	r0, #1
   25112:	blx	8838 <__printf_chk@plt+0x4>
   25116:	ldr	r3, [sp, #96]	; 0x60
   25118:	add	r4, r3
   2511a:	adds	r4, #30
   2511c:	add	r7, r4
   2511e:	add	r6, r4
   25120:	ldr	r3, [sp, #84]	; 0x54
   25122:	cmp	r3, r6
   25124:	bhi.n	2503e <btrfs_print_leaf@@Base+0x926>
   25126:	b.n	24980 <btrfs_print_leaf@@Base+0x268>
   25128:	vmov	r1, s19
   2512c:	mov	r2, r3
   2512e:	b.n	25088 <btrfs_print_leaf@@Base+0x970>
   25130:	ldr.w	r3, [sl, #17]
   25134:	ldr.w	r1, [pc, #1040]	; 25548 <btrfs_print_leaf@@Base+0xe30>
   25138:	add	r3, fp
   2513a:	add	r1, pc
   2513c:	ldr.w	r2, [r3, #101]!
   25140:	ldr	r3, [r3, #4]
   25142:	movs	r0, #1
   25144:	blx	8838 <__printf_chk@plt+0x4>
   25148:	b.n	24980 <btrfs_print_leaf@@Base+0x268>
   2514a:	movs	r6, #0
   2514c:	movs	r2, #28
   2514e:	mov	r1, r6
   25150:	add	r0, sp, #776	; 0x308
   25152:	add	r5, sp, #300	; 0x12c
   25154:	str	r6, [sp, #772]	; 0x304
   25156:	blx	87c4 <memset@plt+0x4>
   2515a:	ldr.w	r3, [sl, #21]
   2515e:	ldr.w	r4, [sl, #17]
   25162:	movw	r2, #439	; 0x1b7
   25166:	mov	r1, r6
   25168:	mov	r0, r5
   2516a:	str	r3, [sp, #84]	; 0x54
   2516c:	blx	87c4 <memset@plt+0x4>
   25170:	ldr	r3, [sp, #84]	; 0x54
   25172:	add.w	r2, r4, #101	; 0x65
   25176:	mov	r1, r5
   25178:	mov	r0, r9
   2517a:	bl	16a0e <read_extent_buffer@@Base>
   2517e:	ldr.w	r3, [r5, #208]	; 0xd0
   25182:	add	r7, sp, #772	; 0x304
   25184:	and.w	r3, r3, #1
   25188:	strd	r3, r6, [sp, #208]	; 0xd0
   2518c:	ldrd	r2, r3, [sp, #208]	; 0xd0
   25190:	orrs	r3, r2
   25192:	mov.w	r2, #32
   25196:	beq.w	25326 <btrfs_print_leaf@@Base+0xc0e>
   2519a:	ldr	r1, [pc, #944]	; (2554c <btrfs_print_leaf@@Base+0xe34>)
   2519c:	add	r1, pc
   2519e:	add	r5, sp, #300	; 0x12c
   251a0:	mov	r0, r7
   251a2:	blx	8790 <__strcat_chk@plt>
   251a6:	ldr	r1, [pc, #936]	; (25550 <btrfs_print_leaf@@Base+0xe38>)
   251a8:	ldr.w	r3, [r5, #216]	; 0xd8
   251ac:	movs	r0, #1
   251ae:	add	r1, pc
   251b0:	str	r3, [sp, #20]
   251b2:	ldrb.w	r3, [r5, #238]	; 0xee
   251b6:	str	r3, [sp, #16]
   251b8:	ldrd	r2, r3, [r5, #176]	; 0xb0
   251bc:	strd	r2, r3, [sp, #8]
   251c0:	ldrd	r2, r3, [r5, #168]	; 0xa8
   251c4:	strd	r2, r3, [sp]
   251c8:	ldrd	r2, r3, [r5, #160]	; 0xa0
   251cc:	blx	8838 <__printf_chk@plt+0x4>
   251d0:	add	r3, sp, #772	; 0x304
   251d2:	str	r3, [sp, #24]
   251d4:	movs	r0, #1
   251d6:	ldrd	r2, r3, [r5, #208]	; 0xd0
   251da:	ldr	r1, [pc, #888]	; (25554 <btrfs_print_leaf@@Base+0xe3c>)
   251dc:	strd	r2, r3, [sp, #16]
   251e0:	add	r1, pc
   251e2:	ldrd	r2, r3, [r5, #192]	; 0xc0
   251e6:	strd	r2, r3, [sp, #8]
   251ea:	ldrd	r2, r3, [r5, #184]	; 0xb8
   251ee:	strd	r2, r3, [sp]
   251f2:	ldrd	r2, r3, [r5, #200]	; 0xc8
   251f6:	blx	8838 <__printf_chk@plt+0x4>
   251fa:	ldrd	r0, r1, [r5, #160]	; 0xa0
   251fe:	ldr.w	r3, [r5, #243]	; 0xf3
   25202:	ldr.w	r2, [r5, #239]	; 0xef
   25206:	cmp	r1, r3
   25208:	it	eq
   2520a:	cmpeq	r0, r2
   2520c:	bne.n	25304 <btrfs_print_leaf@@Base+0xbec>
   2520e:	add	r2, sp, #940	; 0x3ac
   25210:	addw	r0, sp, #547	; 0x223
   25214:	str	r2, [sp, #84]	; 0x54
   25216:	mov	r1, r2
   25218:	blx	83d8 <uuid_unparse@plt>
   2521c:	ldr	r1, [pc, #824]	; (25558 <btrfs_print_leaf@@Base+0xe40>)
   2521e:	ldr	r2, [sp, #84]	; 0x54
   25220:	movs	r0, #1
   25222:	add	r1, pc
   25224:	blx	8838 <__printf_chk@plt+0x4>
   25228:	addw	r2, sp, #563	; 0x233
   2522c:	movs	r3, #0
   2522e:	ldrb.w	r1, [r2], #1
   25232:	cmp	r1, #0
   25234:	bne.w	25a2e <btrfs_print_leaf@@Base+0x1316>
   25238:	adds	r3, #1
   2523a:	cmp	r3, #16
   2523c:	bne.n	2522e <btrfs_print_leaf@@Base+0xb16>
   2523e:	addw	r2, sp, #579	; 0x243
   25242:	movs	r3, #0
   25244:	ldrb.w	r1, [r2], #1
   25248:	cmp	r1, #0
   2524a:	bne.w	25a12 <btrfs_print_leaf@@Base+0x12fa>
   2524e:	adds	r3, #1
   25250:	cmp	r3, #16
   25252:	bne.n	25244 <btrfs_print_leaf@@Base+0xb2c>
   25254:	ldr.w	r0, [sp, #595]	; 0x253
   25258:	ldr.w	r1, [sp, #599]	; 0x257
   2525c:	orrs.w	r2, r0, r1
   25260:	beq.n	25294 <btrfs_print_leaf@@Base+0xb7c>
   25262:	ldr.w	r5, [sp, #619]	; 0x26b
   25266:	ldr.w	r2, [sp, #623]	; 0x26f
   2526a:	ldr.w	r3, [sp, #607]	; 0x25f
   2526e:	strd	r5, r2, [sp, #16]
   25272:	ldr.w	r2, [sp, #615]	; 0x267
   25276:	ldr.w	r5, [sp, #611]	; 0x263
   2527a:	strd	r5, r2, [sp, #8]
   2527e:	ldr.w	r2, [sp, #603]	; 0x25b
   25282:	strd	r2, r3, [sp]
   25286:	mov	r3, r1
   25288:	ldr	r1, [pc, #720]	; (2555c <btrfs_print_leaf@@Base+0xe44>)
   2528a:	mov	r2, r0
   2528c:	movs	r0, #1
   2528e:	add	r1, pc
   25290:	blx	8838 <__printf_chk@plt+0x4>
   25294:	add.w	r1, r4, #428	; 0x1ac
   25298:	add.w	r0, fp, r1
   2529c:	ldr.w	r2, [fp, r1]
   252a0:	ldr	r3, [r0, #4]
   252a2:	orrs	r3, r2
   252a4:	beq.n	252b0 <btrfs_print_leaf@@Base+0xb98>
   252a6:	ldr	r2, [pc, #696]	; (25560 <btrfs_print_leaf@@Base+0xe48>)
   252a8:	mov	r0, r9
   252aa:	add	r2, pc
   252ac:	bl	23da4 <btrfs_destroy_delayed_refs@@Base+0x3c8>
   252b0:	add.w	r1, r4, #440	; 0x1b8
   252b4:	add.w	r0, fp, r1
   252b8:	ldr.w	r2, [fp, r1]
   252bc:	ldr	r3, [r0, #4]
   252be:	orrs	r3, r2
   252c0:	beq.n	252cc <btrfs_print_leaf@@Base+0xbb4>
   252c2:	ldr	r2, [pc, #672]	; (25564 <btrfs_print_leaf@@Base+0xe4c>)
   252c4:	mov	r0, r9
   252c6:	add	r2, pc
   252c8:	bl	23da4 <btrfs_destroy_delayed_refs@@Base+0x3c8>
   252cc:	add.w	r1, r4, #452	; 0x1c4
   252d0:	add.w	r0, fp, r1
   252d4:	ldr.w	r2, [fp, r1]
   252d8:	ldr	r3, [r0, #4]
   252da:	orrs	r3, r2
   252dc:	beq.n	252e8 <btrfs_print_leaf@@Base+0xbd0>
   252de:	ldr	r2, [pc, #648]	; (25568 <btrfs_print_leaf@@Base+0xe50>)
   252e0:	mov	r0, r9
   252e2:	add	r2, pc
   252e4:	bl	23da4 <btrfs_destroy_delayed_refs@@Base+0x3c8>
   252e8:	add.w	r1, r4, #464	; 0x1d0
   252ec:	add.w	r0, fp, r1
   252f0:	ldr.w	r2, [fp, r1]
   252f4:	ldr	r3, [r0, #4]
   252f6:	orrs	r3, r2
   252f8:	beq.n	25304 <btrfs_print_leaf@@Base+0xbec>
   252fa:	ldr	r2, [pc, #624]	; (2556c <btrfs_print_leaf@@Base+0xe54>)
   252fc:	mov	r0, r9
   252fe:	add	r2, pc
   25300:	bl	23da4 <btrfs_destroy_delayed_refs@@Base+0x3c8>
   25304:	ldr	r1, [pc, #616]	; (25570 <btrfs_print_leaf@@Base+0xe58>)
   25306:	movs	r0, #1
   25308:	add	r1, pc
   2530a:	blx	8838 <__printf_chk@plt+0x4>
   2530e:	add	r0, sp, #520	; 0x208
   25310:	bl	2431c <btrfs_print_key@@Base>
   25314:	ldr	r1, [pc, #604]	; (25574 <btrfs_print_leaf@@Base+0xe5c>)
   25316:	ldrb.w	r2, [sp, #537]	; 0x219
   2531a:	add	r1, pc
   2531c:	movs	r0, #1
   2531e:	blx	8838 <__printf_chk@plt+0x4>
   25322:	b.w	24980 <btrfs_print_leaf@@Base+0x268>
   25326:	ldr	r1, [pc, #592]	; (25578 <btrfs_print_leaf@@Base+0xe60>)
   25328:	add	r1, pc
   2532a:	b.n	2519e <btrfs_print_leaf@@Base+0xa86>
   2532c:	ldr	r2, [pc, #588]	; (2557c <btrfs_print_leaf@@Base+0xe64>)
   2532e:	add	r2, pc
   25330:	b.w	24b2c <btrfs_print_leaf@@Base+0x414>
   25334:	movs	r2, #0
   25336:	ldr	r1, [sp, #80]	; 0x50
   25338:	mov	r0, r9
   2533a:	bl	24438 <print_extent_item@@Base>
   2533e:	b.w	24980 <btrfs_print_leaf@@Base+0x268>
   25342:	movs	r2, #1
   25344:	b.n	25336 <btrfs_print_leaf@@Base+0xc1e>
   25346:	ldr	r0, [pc, #568]	; (25580 <btrfs_print_leaf@@Base+0xe68>)
   25348:	add	r0, pc
   2534a:	b.w	24ab0 <btrfs_print_leaf@@Base+0x398>
   2534e:	ldr	r0, [pc, #564]	; (25584 <btrfs_print_leaf@@Base+0xe6c>)
   25350:	add	r0, pc
   25352:	b.w	24ab0 <btrfs_print_leaf@@Base+0x398>
   25356:	ldr	r1, [pc, #560]	; (25588 <btrfs_print_leaf@@Base+0xe70>)
   25358:	movs	r0, #1
   2535a:	ldr.w	r5, [sl, #17]
   2535e:	add	r1, pc
   25360:	blx	8838 <__printf_chk@plt+0x4>
   25364:	adds	r5, #101	; 0x65
   25366:	ldr	r1, [sp, #100]	; 0x64
   25368:	add.w	r4, fp, r5
   2536c:	movs	r3, #0
   2536e:	str	r3, [sp, #0]
   25370:	ldr.w	r2, [fp, r5]
   25374:	ldr	r3, [r4, #4]
   25376:	ldr	r0, [r1, #0]
   25378:	bl	240ac <print_objectid@@Base>
   2537c:	ldr	r3, [r4, #24]
   2537e:	ldr	r1, [pc, #524]	; (2558c <btrfs_print_leaf@@Base+0xe74>)
   25380:	str	r3, [sp, #8]
   25382:	add	r1, pc
   25384:	ldr	r2, [r4, #16]
   25386:	ldr	r3, [r4, #20]
   25388:	strd	r2, r3, [sp]
   2538c:	ldr	r2, [r4, #8]
   2538e:	ldr	r3, [r4, #12]
   25390:	movs	r0, #1
   25392:	blx	8838 <__printf_chk@plt+0x4>
   25396:	b.w	24980 <btrfs_print_leaf@@Base+0x268>
   2539a:	ldr.w	r2, [sl, #17]
   2539e:	ldr	r1, [pc, #496]	; (25590 <btrfs_print_leaf@@Base+0xe78>)
   253a0:	add	r2, fp
   253a2:	add	r1, pc
   253a4:	ldr.w	r2, [r2, #101]	; 0x65
   253a8:	b.n	2531c <btrfs_print_leaf@@Base+0xc04>
   253aa:	ldr	r0, [pc, #488]	; (25594 <btrfs_print_leaf@@Base+0xe7c>)
   253ac:	add	r0, pc
   253ae:	b.w	24ab0 <btrfs_print_leaf@@Base+0x398>
   253b2:	ldr	r0, [pc, #484]	; (25598 <btrfs_print_leaf@@Base+0xe80>)
   253b4:	add	r0, pc
   253b6:	b.w	24ab0 <btrfs_print_leaf@@Base+0x398>
   253ba:	ldr	r3, [sp, #104]	; 0x68
   253bc:	ldr.w	r0, [r3, #308]	; 0x134
   253c0:	bl	17504 <btrfs_super_csum_size@@Base>
   253c4:	mov	r1, r0
   253c6:	ldr	r0, [sp, #84]	; 0x54
   253c8:	bl	38418 <btrfs_util_strerror@@Base+0x18>
   253cc:	ldr	r3, [sp, #104]	; 0x68
   253ce:	ldr	r1, [pc, #460]	; (2559c <btrfs_print_leaf@@Base+0xe84>)
   253d0:	ldr.w	r3, [r3, #388]	; 0x184
   253d4:	add	r1, pc
   253d6:	muls	r0, r3
   253d8:	ldrd	r2, r3, [sp, #88]	; 0x58
   253dc:	adds	r2, r2, r0
   253de:	adc.w	r3, r3, #0
   253e2:	strd	r2, r3, [sp]
   253e6:	str	r0, [sp, #8]
   253e8:	ldrd	r2, r3, [sp, #88]	; 0x58
   253ec:	b.n	25390 <btrfs_print_leaf@@Base+0xc78>
   253ee:	ldr	r1, [pc, #432]	; (255a0 <btrfs_print_leaf@@Base+0xe88>)
   253f0:	add	r1, pc
   253f2:	blx	85f8 <strcpy@plt>
   253f6:	cmp	r5, #1
   253f8:	ldr	r2, [r4, #0]
   253fa:	ldr	r3, [r4, #4]
   253fc:	beq.w	255ce <btrfs_print_leaf@@Base+0xeb6>
   25400:	cmp	r5, #2
   25402:	beq.w	255d6 <btrfs_print_leaf@@Base+0xebe>
   25406:	cmp	r5, #0
   25408:	beq.w	255de <btrfs_print_leaf@@Base+0xec6>
   2540c:	ldr	r1, [pc, #404]	; (255a4 <btrfs_print_leaf@@Base+0xe8c>)
   2540e:	add	r1, pc
   25410:	strd	r5, r1, [sp]
   25414:	movs	r0, #1
   25416:	ldr	r1, [pc, #400]	; (255a8 <btrfs_print_leaf@@Base+0xe90>)
   25418:	add	r1, pc
   2541a:	blx	8838 <__printf_chk@plt+0x4>
   2541e:	cmp	r5, #0
   25420:	bne.w	255e6 <btrfs_print_leaf@@Base+0xece>
   25424:	ldr.w	r2, [sl, #21]
   25428:	add	r3, sp, #940	; 0x3ac
   2542a:	str	r3, [sp, #12]
   2542c:	movs	r0, #1
   2542e:	ldrb	r3, [r4, #16]
   25430:	subs	r2, #21
   25432:	str	r3, [sp, #8]
   25434:	ldr	r1, [r4, #8]
   25436:	ldr	r3, [r4, #12]
   25438:	strd	r1, r3, [sp]
   2543c:	ldr	r1, [pc, #364]	; (255ac <btrfs_print_leaf@@Base+0xe94>)
   2543e:	add	r1, pc
   25440:	blx	8838 <__printf_chk@plt+0x4>
   25444:	b.w	24980 <btrfs_print_leaf@@Base+0x268>
   25448:	ldr	r1, [pc, #356]	; (255b0 <btrfs_print_leaf@@Base+0xe98>)
   2544a:	add	r1, pc
   2544c:	b.n	253f2 <btrfs_print_leaf@@Base+0xcda>
   2544e:	ldr	r1, [pc, #356]	; (255b4 <btrfs_print_leaf@@Base+0xe9c>)
   25450:	add	r1, pc
   25452:	b.n	253f2 <btrfs_print_leaf@@Base+0xcda>
   25454:	ldr	r1, [pc, #352]	; (255b8 <btrfs_print_leaf@@Base+0xea0>)
   25456:	add	r1, pc
   25458:	b.n	253f2 <btrfs_print_leaf@@Base+0xcda>
   2545a:	nop
   2545c:			; <UNDEFINED> instruction: 0xf6560003
   25460:	lsls	r0, r4, #8
   25462:	movs	r0, r0
   25464:	movw	r0, #43011	; 0xa803
   25468:	str	r5, [sp, #520]	; 0x208
   2546a:	movs	r1, r0
   2546c:	str	r1, [r1, #108]	; 0x6c
   2546e:	movs	r1, r0
   25470:	str	r3, [sp, #484]	; 0x1e4
   25472:	movs	r1, r0
   25474:	str	r5, [sp, #152]	; 0x98
   25476:	movs	r1, r0
   25478:	lsls	r4, r2, #9
   2547a:	movs	r0, r0
   2547c:	str	r5, [sp, #144]	; 0x90
   2547e:	movs	r1, r0
   25480:	str	r5, [sp, #548]	; 0x224
   25482:	movs	r1, r0
   25484:	ldr	r6, [sp, #60]	; 0x3c
   25486:	movs	r1, r0
   25488:	str	r4, [sp, #904]	; 0x388
   2548a:	movs	r1, r0
   2548c:	str	r5, [sp, #72]	; 0x48
   2548e:	movs	r1, r0
   25490:			; <UNDEFINED> instruction: 0xf4d80003
   25494:	str	r4, [sp, #788]	; 0x314
   25496:	movs	r1, r0
   25498:	str	r4, [sp, #672]	; 0x2a0
   2549a:	movs	r1, r0
   2549c:	str	r4, [sp, #488]	; 0x1e8
   2549e:	movs	r1, r0
   254a0:	str	r5, [sp, #432]	; 0x1b0
   254a2:	movs	r1, r0
   254a4:	str	r5, [sp, #244]	; 0xf4
   254a6:	movs	r1, r0
   254a8:	str	r3, [sp, #128]	; 0x80
   254aa:	movs	r1, r0
   254ac:	str	r4, [sp, #704]	; 0x2c0
   254ae:	movs	r1, r0
   254b0:	str	r4, [sp, #692]	; 0x2b4
   254b2:	movs	r1, r0
   254b4:	ldr	r4, [r4, r7]
   254b6:	movs	r1, r0
   254b8:	str	r7, [sp, #140]	; 0x8c
   254ba:	movs	r1, r0
   254bc:	str	r1, [sp, #788]	; 0x314
   254be:	movs	r1, r0
   254c0:	str	r7, [r2, #28]
   254c2:	movs	r1, r0
   254c4:	str	r1, [sp, #612]	; 0x264
   254c6:	movs	r1, r0
   254c8:	str	r1, [r4, #24]
   254ca:	movs	r1, r0
   254cc:	str	r1, [sp, #436]	; 0x1b4
   254ce:	movs	r1, r0
   254d0:	str	r3, [r5, #20]
   254d2:	movs	r1, r0
   254d4:	str	r1, [sp, #256]	; 0x100
   254d6:	movs	r1, r0
   254d8:	str	r5, [r6, #16]
   254da:	movs	r1, r0
   254dc:	str	r3, [r4, #28]
   254de:	movs	r1, r0
   254e0:	str	r7, [r7, #12]
   254e2:	movs	r1, r0
   254e4:	str	r1, [sp, #8]
   254e6:	movs	r1, r0
   254e8:	str	r1, [r1, #12]
   254ea:	movs	r1, r0
   254ec:	str	r0, [sp, #676]	; 0x2a4
   254ee:	movs	r1, r0
   254f0:	str	r3, [r2, #8]
   254f2:	movs	r1, r0
   254f4:	str	r0, [sp, #500]	; 0x1f4
   254f6:	movs	r1, r0
   254f8:	str	r5, [r3, #4]
   254fa:	movs	r1, r0
   254fc:	str	r0, [sp, #312]	; 0x138
   254fe:	movs	r1, r0
   25500:	str	r7, [r4, #0]
   25502:	movs	r1, r0
   25504:	str	r0, [sp, #124]	; 0x7c
   25506:	movs	r1, r0
   25508:	ldrsh	r1, [r6, r7]
   2550a:	movs	r1, r0
   2550c:	ldrh	r1, [r6, #62]	; 0x3e
   2550e:	movs	r1, r0
   25510:	ldrsh	r3, [r7, r6]
   25512:	movs	r1, r0
   25514:	ldrh	r4, [r2, #60]	; 0x3c
   25516:	movs	r1, r0
   25518:	ldrh	r5, [r4, #60]	; 0x3c
   2551a:	movs	r1, r0
   2551c:	ldrh	r4, [r1, #62]	; 0x3e
   2551e:	movs	r1, r0
   25520:	ldrh	r5, [r0, #62]	; 0x3e
   25522:	movs	r1, r0
   25524:	ldrh	r6, [r7, #60]	; 0x3c
   25526:	movs	r1, r0
   25528:	ldrh	r7, [r6, #60]	; 0x3c
   2552a:	movs	r1, r0
   2552c:	ldrsb	r7, [r1, r6]
   2552e:	movs	r1, r0
   25530:	ldrh	r4, [r3, #56]	; 0x38
   25532:	movs	r1, r0
   25534:	b.n	25408 <btrfs_print_leaf@@Base+0xcf0>
   25536:	movs	r3, r0
   25538:	add	r4, pc, #56	; (adr r4, 25574 <btrfs_print_leaf@@Base+0xe5c>)
   2553a:	movs	r1, r0
   2553c:	ldrh	r5, [r0, #54]	; 0x36
   2553e:	movs	r1, r0
   25540:	ldrh	r1, [r3, #54]	; 0x36
   25542:	movs	r1, r0
   25544:	ldrh	r5, [r7, #52]	; 0x34
   25546:	movs	r1, r0
   25548:	ldrh	r6, [r3, #52]	; 0x34
   2554a:	movs	r1, r0
   2554c:	ldrh	r5, [r3, #50]	; 0x32
   2554e:	movs	r1, r0
   25550:	ldrh	r2, [r2, #50]	; 0x32
   25552:	movs	r1, r0
   25554:	ldrh	r2, [r4, #50]	; 0x32
   25556:	movs	r1, r0
   25558:	ldrh	r2, [r4, #50]	; 0x32
   2555a:	movs	r1, r0
   2555c:	ldrh	r1, [r0, #48]	; 0x30
   2555e:	movs	r1, r0
   25560:	ldrh	r1, [r5, #34]	; 0x22
   25562:	movs	r1, r0
   25564:	ldrh	r7, [r3, #34]	; 0x22
   25566:	movs	r1, r0
   25568:	ldrh	r0, [r5, #46]	; 0x2e
   2556a:	movs	r1, r0
   2556c:	ldrh	r5, [r2, #46]	; 0x2e
   2556e:	movs	r1, r0
   25570:	ldrh	r4, [r2, #46]	; 0x2e
   25572:	movs	r1, r0
   25574:	ldrh	r2, [r1, #46]	; 0x2e
   25576:	movs	r1, r0
   25578:	strh	r1, [r5, r7]
   2557a:	movs	r1, r0
   2557c:	ldrh	r7, [r4, #46]	; 0x2e
   2557e:	movs	r1, r0
   25580:	ldrh	r1, [r5, #44]	; 0x2c
   25582:	movs	r1, r0
   25584:	ldrh	r6, [r6, #44]	; 0x2c
   25586:	movs	r1, r0
   25588:	ldrh	r0, [r0, #8]
   2558a:	movs	r1, r0
   2558c:	ldrh	r0, [r7, #6]
   2558e:	movs	r1, r0
   25590:	ldrh	r3, [r7, #42]	; 0x2a
   25592:	movs	r1, r0
   25594:	ldrh	r1, [r2, #44]	; 0x2c
   25596:	movs	r1, r0
   25598:	ldrh	r6, [r4, #44]	; 0x2c
   2559a:	movs	r1, r0
   2559c:	ldrh	r2, [r2, #44]	; 0x2c
   2559e:	movs	r1, r0
   255a0:	strh	r1, [r4, r4]
   255a2:	movs	r1, r0
   255a4:	ldrh	r2, [r4, #6]
   255a6:	movs	r1, r0
   255a8:	ldrh	r3, [r0, #44]	; 0x2c
   255aa:	movs	r1, r0
   255ac:	ldrh	r7, [r7, #42]	; 0x2a
   255ae:	movs	r1, r0
   255b0:	ldrh	r3, [r0, #42]	; 0x2a
   255b2:	movs	r1, r0
   255b4:	ldrh	r2, [r0, #42]	; 0x2a
   255b6:	movs	r1, r0
   255b8:	ldrh	r0, [r0, #42]	; 0x2a
   255ba:	movs	r1, r0
   255bc:	str	r3, [sp, #0]
   255be:	movs	r2, #16
   255c0:	ldr.w	r3, [pc, #1172]	; 25a58 <btrfs_print_leaf@@Base+0x1340>
   255c4:	movs	r1, #1
   255c6:	add	r3, pc
   255c8:	blx	879c <__sprintf_chk@plt>
   255cc:	b.n	253f6 <btrfs_print_leaf@@Base+0xcde>
   255ce:	ldr.w	r1, [pc, #1164]	; 25a5c <btrfs_print_leaf@@Base+0x1344>
   255d2:	add	r1, pc
   255d4:	b.n	25410 <btrfs_print_leaf@@Base+0xcf8>
   255d6:	ldr.w	r1, [pc, #1160]	; 25a60 <btrfs_print_leaf@@Base+0x1348>
   255da:	add	r1, pc
   255dc:	b.n	25410 <btrfs_print_leaf@@Base+0xcf8>
   255de:	ldr.w	r1, [pc, #1156]	; 25a64 <btrfs_print_leaf@@Base+0x134c>
   255e2:	add	r1, pc
   255e4:	b.n	25410 <btrfs_print_leaf@@Base+0xcf8>
   255e6:	mov	r1, r4
   255e8:	mov	r3, r4
   255ea:	ldr.w	r0, [r1, #29]!
   255ee:	cmp	r5, #2
   255f0:	ldr.w	r2, [r3, #21]!
   255f4:	ldr	r1, [r1, #4]
   255f6:	ldr	r3, [r3, #4]
   255f8:	strd	r0, r1, [sp]
   255fc:	bne.n	2562c <btrfs_print_leaf@@Base+0xf14>
   255fe:	ldr.w	r1, [pc, #1128]	; 25a68 <btrfs_print_leaf@@Base+0x1350>
   25602:	movs	r0, #1
   25604:	add	r1, pc
   25606:	blx	8838 <__printf_chk@plt+0x4>
   2560a:	mov	r3, r4
   2560c:	ldr.w	r0, [r4, #45]!
   25610:	ldr.w	r2, [r3, #37]!
   25614:	ldr	r1, [r4, #4]
   25616:	strd	r0, r1, [sp]
   2561a:	movs	r0, #1
   2561c:	ldr.w	r1, [pc, #1100]	; 25a6c <btrfs_print_leaf@@Base+0x1354>
   25620:	ldr	r3, [r3, #4]
   25622:	add	r1, pc
   25624:	blx	8838 <__printf_chk@plt+0x4>
   25628:	b.w	24980 <btrfs_print_leaf@@Base+0x268>
   2562c:	ldr.w	r1, [pc, #1088]	; 25a70 <btrfs_print_leaf@@Base+0x1358>
   25630:	movs	r0, #1
   25632:	add	r1, pc
   25634:	blx	8838 <__printf_chk@plt+0x4>
   25638:	ldr	r0, [r4, #8]
   2563a:	ldr	r1, [r4, #12]
   2563c:	mov	r3, r4
   2563e:	ldr.w	r2, [r3, #37]!
   25642:	strd	r0, r1, [sp, #8]
   25646:	mov	r1, r4
   25648:	ldr.w	r0, [r1, #45]!
   2564c:	ldr	r1, [r1, #4]
   2564e:	strd	r0, r1, [sp]
   25652:	movs	r0, #1
   25654:	ldr.w	r1, [pc, #1052]	; 25a74 <btrfs_print_leaf@@Base+0x135c>
   25658:	ldr	r3, [r3, #4]
   2565a:	add	r1, pc
   2565c:	blx	8838 <__printf_chk@plt+0x4>
   25660:	ldr.w	r1, [pc, #1044]	; 25a78 <btrfs_print_leaf@@Base+0x1360>
   25664:	ldrb	r2, [r4, #16]
   25666:	add	r3, sp, #940	; 0x3ac
   25668:	add	r1, pc
   2566a:	movs	r0, #1
   2566c:	blx	8838 <__printf_chk@plt+0x4>
   25670:	b.w	24980 <btrfs_print_leaf@@Base+0x268>
   25674:	add	r4, sp, #272	; 0x110
   25676:	add	r5, sp, #940	; 0x3ac
   25678:	movs	r3, #24
   2567a:	mov	r2, r7
   2567c:	mov	r1, r4
   2567e:	mov	r0, r9
   25680:	bl	16a0e <read_extent_buffer@@Base>
   25684:	mov.w	r2, #256	; 0x100
   25688:	movs	r1, #0
   2568a:	mov	r0, r5
   2568c:	blx	87c4 <memset@plt+0x4>
   25690:	ldrd	r0, r1, [r4, #16]
   25694:	mov	r2, r5
   25696:	bl	23adc <btrfs_destroy_delayed_refs@@Base+0x100>
   2569a:	str	r5, [sp, #8]
   2569c:	ldrd	r2, r3, [r4, #8]
   256a0:	ldr	r1, [pc, #984]	; (25a7c <btrfs_print_leaf@@Base+0x1364>)
   256a2:	strd	r2, r3, [sp]
   256a6:	add	r1, pc
   256a8:	ldrd	r2, r3, [sp, #272]	; 0x110
   256ac:	b.n	25390 <btrfs_print_leaf@@Base+0xc78>
   256ae:	ldr.w	r2, [sl, #17]
   256b2:	ldr	r1, [pc, #972]	; (25a80 <btrfs_print_leaf@@Base+0x1368>)
   256b4:	adds	r2, #101	; 0x65
   256b6:	add.w	r3, fp, r2
   256ba:	add	r1, pc
   256bc:	ldr.w	r2, [fp, r2]
   256c0:	ldr	r3, [r3, #4]
   256c2:	b.n	2566a <btrfs_print_leaf@@Base+0xf52>
   256c4:	ldr	r0, [pc, #956]	; (25a84 <btrfs_print_leaf@@Base+0x136c>)
   256c6:	add	r0, pc
   256c8:	b.w	24ab0 <btrfs_print_leaf@@Base+0x398>
   256cc:	ldr	r0, [pc, #952]	; (25a88 <btrfs_print_leaf@@Base+0x1370>)
   256ce:	add	r0, pc
   256d0:	b.w	24ab0 <btrfs_print_leaf@@Base+0x398>
   256d4:	mov	r1, r7
   256d6:	mov	r0, r9
   256d8:	bl	23eac <print_chunk_item@@Base>
   256dc:	b.w	24980 <btrfs_print_leaf@@Base+0x268>
   256e0:	ldr.w	r4, [sl, #17]
   256e4:	add	r5, sp, #772	; 0x304
   256e6:	add	r6, sp, #940	; 0x3ac
   256e8:	movs	r3, #16
   256ea:	add.w	r2, r4, #133	; 0x85
   256ee:	mov	r1, r5
   256f0:	mov	r0, r9
   256f2:	adds	r4, #101	; 0x65
   256f4:	bl	16a0e <read_extent_buffer@@Base>
   256f8:	mov	r1, r6
   256fa:	mov	r0, r5
   256fc:	blx	83d8 <uuid_unparse@plt>
   25700:	add.w	r3, fp, r4
   25704:	str	r6, [sp, #24]
   25706:	movs	r0, #1
   25708:	ldr	r1, [r3, #24]
   2570a:	ldr	r2, [r3, #28]
   2570c:	strd	r1, r2, [sp, #16]
   25710:	ldr	r1, [r3, #16]
   25712:	ldr	r2, [r3, #20]
   25714:	strd	r1, r2, [sp, #8]
   25718:	ldr	r1, [r3, #8]
   2571a:	ldr	r2, [r3, #12]
   2571c:	strd	r1, r2, [sp]
   25720:	ldr	r1, [pc, #872]	; (25a8c <btrfs_print_leaf@@Base+0x1374>)
   25722:	ldr.w	r2, [fp, r4]
   25726:	ldr	r3, [r3, #4]
   25728:	add	r1, pc
   2572a:	blx	8838 <__printf_chk@plt+0x4>
   2572e:	b.w	24980 <btrfs_print_leaf@@Base+0x268>
   25732:	add	r3, sp, #940	; 0x3ac
   25734:	mov.w	r2, #256	; 0x100
   25738:	movs	r1, #0
   2573a:	ldr.w	r5, [sl, #17]
   2573e:	mov	r0, r3
   25740:	blx	87c4 <memset@plt+0x4>
   25744:	adds	r5, #101	; 0x65
   25746:	add	r5, fp
   25748:	ldr	r4, [r5, #16]
   2574a:	and.w	r2, r4, #1
   2574e:	str	r2, [sp, #216]	; 0xd8
   25750:	movs	r2, #0
   25752:	str	r2, [sp, #220]	; 0xdc
   25754:	ldrd	r1, r2, [sp, #216]	; 0xd8
   25758:	orrs	r2, r1
   2575a:	mov	r3, r0
   2575c:	beq.n	257ce <btrfs_print_leaf@@Base+0x10b6>
   2575e:	ldr	r1, [pc, #816]	; (25a90 <btrfs_print_leaf@@Base+0x1378>)
   25760:	add	r1, pc
   25762:	mov	r0, r3
   25764:	blx	85f8 <strcpy@plt>
   25768:	and.w	r3, r4, #2
   2576c:	str	r3, [sp, #224]	; 0xe0
   2576e:	movs	r3, #0
   25770:	str	r3, [sp, #228]	; 0xe4
   25772:	ldrd	r2, r3, [sp, #224]	; 0xe0
   25776:	orrs	r3, r2
   25778:	beq.n	25788 <btrfs_print_leaf@@Base+0x1070>
   2577a:	ldr	r1, [pc, #792]	; (25a94 <btrfs_print_leaf@@Base+0x137c>)
   2577c:	add	r0, sp, #940	; 0x3ac
   2577e:	mov.w	r2, #256	; 0x100
   25782:	add	r1, pc
   25784:	blx	8790 <__strcat_chk@plt>
   25788:	and.w	r3, r4, #4
   2578c:	str	r3, [sp, #232]	; 0xe8
   2578e:	movs	r3, #0
   25790:	str	r3, [sp, #236]	; 0xec
   25792:	ldrd	r3, r4, [sp, #232]	; 0xe8
   25796:	orrs	r3, r4
   25798:	beq.n	257a8 <btrfs_print_leaf@@Base+0x1090>
   2579a:	ldr	r1, [pc, #764]	; (25a98 <btrfs_print_leaf@@Base+0x1380>)
   2579c:	add	r0, sp, #940	; 0x3ac
   2579e:	mov.w	r2, #256	; 0x100
   257a2:	add	r1, pc
   257a4:	blx	8790 <__strcat_chk@plt>
   257a8:	ldr	r2, [r5, #24]
   257aa:	movs	r0, #1
   257ac:	ldr	r3, [r5, #28]
   257ae:	ldr	r1, [pc, #748]	; (25a9c <btrfs_print_leaf@@Base+0x1384>)
   257b0:	strd	r2, r3, [sp, #16]
   257b4:	add	r3, sp, #940	; 0x3ac
   257b6:	str	r3, [sp, #8]
   257b8:	add	r1, pc
   257ba:	ldr	r2, [r5, #8]
   257bc:	ldr	r3, [r5, #12]
   257be:	strd	r2, r3, [sp]
   257c2:	ldr	r2, [r5, #0]
   257c4:	ldr	r3, [r5, #4]
   257c6:	blx	8838 <__printf_chk@plt+0x4>
   257ca:	b.w	24980 <btrfs_print_leaf@@Base+0x268>
   257ce:	ldr	r1, [pc, #720]	; (25aa0 <btrfs_print_leaf@@Base+0x1388>)
   257d0:	add	r1, pc
   257d2:	b.n	25762 <btrfs_print_leaf@@Base+0x104a>
   257d4:	ldr.w	r2, [sl, #17]
   257d8:	adds	r2, #101	; 0x65
   257da:	add.w	r3, fp, r2
   257de:	ldr	r0, [r3, #32]
   257e0:	ldr	r1, [r3, #36]	; 0x24
   257e2:	strd	r0, r1, [sp, #24]
   257e6:	ldr	r0, [r3, #24]
   257e8:	ldr	r1, [r3, #28]
   257ea:	strd	r0, r1, [sp, #16]
   257ee:	ldr	r0, [r3, #16]
   257f0:	ldr	r1, [r3, #20]
   257f2:	strd	r0, r1, [sp, #8]
   257f6:	ldr	r1, [r3, #12]
   257f8:	ldr	r0, [r3, #8]
   257fa:	strd	r0, r1, [sp]
   257fe:	ldr	r1, [pc, #676]	; (25aa4 <btrfs_print_leaf@@Base+0x138c>)
   25800:	ldr.w	r2, [fp, r2]
   25804:	ldr	r3, [r3, #4]
   25806:	add	r1, pc
   25808:	movs	r0, #1
   2580a:	blx	8838 <__printf_chk@plt+0x4>
   2580e:	b.w	24980 <btrfs_print_leaf@@Base+0x268>
   25812:	ldr.w	r2, [sl, #17]
   25816:	adds	r2, #101	; 0x65
   25818:	add.w	r3, fp, r2
   2581c:	ldr	r0, [r3, #32]
   2581e:	ldr	r1, [r3, #36]	; 0x24
   25820:	strd	r0, r1, [sp, #24]
   25824:	ldr	r0, [r3, #24]
   25826:	ldr	r1, [r3, #28]
   25828:	strd	r0, r1, [sp, #16]
   2582c:	ldr	r0, [r3, #16]
   2582e:	ldr	r1, [r3, #20]
   25830:	strd	r0, r1, [sp, #8]
   25834:	ldr	r1, [r3, #12]
   25836:	ldr	r0, [r3, #8]
   25838:	strd	r0, r1, [sp]
   2583c:	ldr	r1, [pc, #616]	; (25aa8 <btrfs_print_leaf@@Base+0x1390>)
   2583e:	ldr.w	r2, [fp, r2]
   25842:	ldr	r3, [r3, #4]
   25844:	add	r1, pc
   25846:	b.n	25808 <btrfs_print_leaf@@Base+0x10f0>
   25848:	ldr.w	r4, [sl, #21]
   2584c:	ldr.w	r5, [sl, #17]
   25850:	lsls	r3, r4, #29
   25852:	add.w	r5, r5, #101	; 0x65
   25856:	bne.n	25882 <btrfs_print_leaf@@Base+0x116a>
   25858:	ldr	r7, [pc, #592]	; (25aac <btrfs_print_leaf@@Base+0x1394>)
   2585a:	add	r6, sp, #272	; 0x110
   2585c:	add	r7, pc
   2585e:	cmp	r4, #0
   25860:	beq.w	24980 <btrfs_print_leaf@@Base+0x268>
   25864:	mov	r2, r5
   25866:	movs	r3, #8
   25868:	mov	r1, r6
   2586a:	mov	r0, r9
   2586c:	bl	16a0e <read_extent_buffer@@Base>
   25870:	ldrd	r2, r3, [sp, #272]	; 0x110
   25874:	mov	r1, r7
   25876:	movs	r0, #1
   25878:	blx	8838 <__printf_chk@plt+0x4>
   2587c:	subs	r4, #8
   2587e:	adds	r5, #8
   25880:	b.n	2585e <btrfs_print_leaf@@Base+0x1146>
   25882:	ldr	r1, [pc, #556]	; (25ab0 <btrfs_print_leaf@@Base+0x1398>)
   25884:	mov	r2, r4
   25886:	add	r1, pc
   25888:	b.n	2531c <btrfs_print_leaf@@Base+0xc04>
   2588a:	ldr.w	r3, [sl, #17]
   2588e:	ldr	r1, [pc, #548]	; (25ab4 <btrfs_print_leaf@@Base+0x139c>)
   25890:	adds	r3, #101	; 0x65
   25892:	ldr	r2, [sp, #84]	; 0x54
   25894:	add	r3, fp
   25896:	add	r1, pc
   25898:	b.n	2566a <btrfs_print_leaf@@Base+0xf52>
   2589a:	ldr	r1, [pc, #540]	; (25ab8 <btrfs_print_leaf@@Base+0x13a0>)
   2589c:	movs	r0, #1
   2589e:	add	r1, pc
   258a0:	blx	8838 <__printf_chk@plt+0x4>
   258a4:	ldr	r1, [sp, #100]	; 0x64
   258a6:	movs	r3, #249	; 0xf9
   258a8:	mov	r2, r4
   258aa:	str	r3, [sp, #0]
   258ac:	mov	r3, r5
   258ae:	ldr	r0, [r1, #0]
   258b0:	bl	240ac <print_objectid@@Base>
   258b4:	ldr	r1, [pc, #516]	; (25abc <btrfs_print_leaf@@Base+0x13a4>)
   258b6:	ldrd	r2, r3, [sp, #88]	; 0x58
   258ba:	movs	r0, #1
   258bc:	add	r1, pc
   258be:	blx	8838 <__printf_chk@plt+0x4>
   258c2:	orrs.w	r3, r4, r5
   258c6:	bne.n	2597a <btrfs_print_leaf@@Base+0x1262>
   258c8:	ldr	r0, [pc, #500]	; (25ac0 <btrfs_print_leaf@@Base+0x13a8>)
   258ca:	add	r0, pc
   258cc:	blx	865c <puts@plt+0x4>
   258d0:	movs	r2, #0
   258d2:	mov	r1, r7
   258d4:	mov	r0, r9
   258d6:	bl	23a44 <btrfs_destroy_delayed_refs@@Base+0x68>
   258da:	movs	r2, #1
   258dc:	mov	r4, r0
   258de:	str	r1, [sp, #244]	; 0xf4
   258e0:	mov	r0, r9
   258e2:	mov	r1, r7
   258e4:	bl	23a44 <btrfs_destroy_delayed_refs@@Base+0x68>
   258e8:	movs	r2, #2
   258ea:	mov	r6, r0
   258ec:	mov	r5, r1
   258ee:	mov	r0, r9
   258f0:	mov	r1, r7
   258f2:	bl	23a44 <btrfs_destroy_delayed_refs@@Base+0x68>
   258f6:	movs	r2, #3
   258f8:	mov	r8, r0
   258fa:	mov	fp, r1
   258fc:	mov	r0, r9
   258fe:	mov	r1, r7
   25900:	bl	23a44 <btrfs_destroy_delayed_refs@@Base+0x68>
   25904:	movs	r2, #4
   25906:	str	r0, [sp, #96]	; 0x60
   25908:	mov	r0, r9
   2590a:	str	r1, [sp, #88]	; 0x58
   2590c:	mov	r1, r7
   2590e:	bl	23a44 <btrfs_destroy_delayed_refs@@Base+0x68>
   25912:	ldr	r3, [sp, #96]	; 0x60
   25914:	mov	r2, r4
   25916:	strd	r8, fp, [sp, #8]
   2591a:	strd	r6, r5, [sp]
   2591e:	str	r3, [sp, #16]
   25920:	ldr	r3, [sp, #88]	; 0x58
   25922:	str	r3, [sp, #20]
   25924:	ldr	r3, [sp, #244]	; 0xf4
   25926:	strd	r0, r1, [sp, #24]
   2592a:	movs	r0, #1
   2592c:	ldr	r1, [pc, #404]	; (25ac4 <btrfs_print_leaf@@Base+0x13ac>)
   2592e:	add	r1, pc
   25930:	blx	8838 <__printf_chk@plt+0x4>
   25934:	ldr	r3, [sp, #84]	; 0x54
   25936:	cmp	r3, #40	; 0x28
   25938:	bls.w	24980 <btrfs_print_leaf@@Base+0x268>
   2593c:	ldr	r1, [pc, #392]	; (25ac8 <btrfs_print_leaf@@Base+0x13b0>)
   2593e:	sub.w	r2, r3, #40	; 0x28
   25942:	movs	r0, #1
   25944:	movs	r4, #5
   25946:	add	r1, pc
   25948:	blx	8838 <__printf_chk@plt+0x4>
   2594c:	ldr	r2, [sp, #84]	; 0x54
   2594e:	lsls	r3, r4, #3
   25950:	cmp.w	r2, r4, lsl #3
   25954:	bls.w	24980 <btrfs_print_leaf@@Base+0x268>
   25958:	mov	r2, r4
   2595a:	mov	r1, r7
   2595c:	mov	r0, r9
   2595e:	str	r3, [sp, #96]	; 0x60
   25960:	bl	23a44 <btrfs_destroy_delayed_refs@@Base+0x68>
   25964:	mov	r2, r4
   25966:	ldr	r3, [sp, #96]	; 0x60
   25968:	adds	r4, #1
   2596a:	strd	r0, r1, [sp]
   2596e:	movs	r0, #1
   25970:	vmov	r1, s21
   25974:	blx	8838 <__printf_chk@plt+0x4>
   25978:	b.n	2594c <btrfs_print_leaf@@Base+0x1234>
   2597a:	ldr	r1, [pc, #336]	; (25acc <btrfs_print_leaf@@Base+0x13b4>)
   2597c:	mov	r2, r4
   2597e:	mov	r3, r5
   25980:	add	r1, pc
   25982:	b.w	25142 <btrfs_print_leaf@@Base+0xa2a>
   25986:	ldr	r1, [pc, #328]	; (25ad0 <btrfs_print_leaf@@Base+0x13b8>)
   25988:	movs	r0, #1
   2598a:	add	r1, pc
   2598c:	blx	8838 <__printf_chk@plt+0x4>
   25990:	ldr	r1, [sp, #100]	; 0x64
   25992:	movs	r3, #248	; 0xf8
   25994:	mov	r2, r4
   25996:	str	r3, [sp, #0]
   25998:	mov	r3, r5
   2599a:	ldr	r0, [r1, #0]
   2599c:	bl	240ac <print_objectid@@Base>
   259a0:	ldr	r1, [pc, #304]	; (25ad4 <btrfs_print_leaf@@Base+0x13bc>)
   259a2:	ldrd	r2, r3, [sp, #88]	; 0x58
   259a6:	movs	r0, #1
   259a8:	add	r1, pc
   259aa:	blx	8838 <__printf_chk@plt+0x4>
   259ae:	mov.w	r3, #4294967295	; 0xffffffff
   259b2:	cmp	r5, r3
   259b4:	mvn.w	r2, #3
   259b8:	it	eq
   259ba:	cmpeq	r4, r2
   259bc:	bne.n	25a06 <btrfs_print_leaf@@Base+0x12ee>
   259be:	add.w	r4, fp, r7
   259c2:	ldr	r1, [pc, #276]	; (25ad8 <btrfs_print_leaf@@Base+0x13c0>)
   259c4:	ldr.w	r2, [fp, r7]
   259c8:	movs	r0, #1
   259ca:	ldr	r3, [r4, #4]
   259cc:	add	r1, pc
   259ce:	blx	8838 <__printf_chk@plt+0x4>
   259d2:	ldr	r0, [pc, #264]	; (25adc <btrfs_print_leaf@@Base+0x13c4>)
   259d4:	add	r0, pc
   259d6:	blx	865c <puts@plt+0x4>
   259da:	add.w	r0, r4, #8
   259de:	bl	23c14 <btrfs_destroy_delayed_refs@@Base+0x238>
   259e2:	ldr	r0, [pc, #252]	; (25ae0 <btrfs_print_leaf@@Base+0x13c8>)
   259e4:	add	r0, pc
   259e6:	blx	865c <puts@plt+0x4>
   259ea:	add.w	r0, r4, #144	; 0x90
   259ee:	bl	23c14 <btrfs_destroy_delayed_refs@@Base+0x238>
   259f2:	ldr	r0, [pc, #240]	; (25ae4 <btrfs_print_leaf@@Base+0x13cc>)
   259f4:	add	r0, pc
   259f6:	blx	865c <puts@plt+0x4>
   259fa:	add.w	r0, r4, #280	; 0x118
   259fe:	bl	23c14 <btrfs_destroy_delayed_refs@@Base+0x238>
   25a02:	b.w	24980 <btrfs_print_leaf@@Base+0x268>
   25a06:	ldr	r1, [pc, #224]	; (25ae8 <btrfs_print_leaf@@Base+0x13d0>)
   25a08:	mov	r2, r4
   25a0a:	mov	r3, r5
   25a0c:	add	r1, pc
   25a0e:	b.w	25142 <btrfs_print_leaf@@Base+0xa2a>
   25a12:	add	r2, sp, #940	; 0x3ac
   25a14:	addw	r0, sp, #579	; 0x243
   25a18:	str	r2, [sp, #84]	; 0x54
   25a1a:	mov	r1, r2
   25a1c:	blx	83d8 <uuid_unparse@plt>
   25a20:	ldr	r1, [pc, #200]	; (25aec <btrfs_print_leaf@@Base+0x13d4>)
   25a22:	ldr	r2, [sp, #84]	; 0x54
   25a24:	movs	r0, #1
   25a26:	add	r1, pc
   25a28:	blx	8838 <__printf_chk@plt+0x4>
   25a2c:	b.n	25254 <btrfs_print_leaf@@Base+0xb3c>
   25a2e:	add	r2, sp, #940	; 0x3ac
   25a30:	addw	r0, sp, #563	; 0x233
   25a34:	str	r2, [sp, #84]	; 0x54
   25a36:	mov	r1, r2
   25a38:	blx	83d8 <uuid_unparse@plt>
   25a3c:	ldr	r1, [pc, #176]	; (25af0 <btrfs_print_leaf@@Base+0x13d8>)
   25a3e:	ldr	r2, [sp, #84]	; 0x54
   25a40:	movs	r0, #1
   25a42:	add	r1, pc
   25a44:	blx	8838 <__printf_chk@plt+0x4>
   25a48:	b.w	2523e <btrfs_print_leaf@@Base+0xb26>
   25a4c:	addw	sp, sp, #1204	; 0x4b4
   25a50:	vpop	{d8-d10}
   25a54:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25a58:	strh	r0, [r1, #38]	; 0x26
   25a5a:	movs	r1, r0
   25a5c:	strh	r7, [r1, #56]	; 0x38
   25a5e:	movs	r1, r0
   25a60:	strh	r6, [r7, #54]	; 0x36
   25a62:	movs	r1, r0
   25a64:	strh	r7, [r0, #56]	; 0x38
   25a66:	movs	r1, r0
   25a68:	ldrh	r4, [r7, #30]
   25a6a:	movs	r1, r0
   25a6c:	ldrh	r6, [r0, #32]
   25a6e:	movs	r1, r0
   25a70:	ldrh	r3, [r3, #32]
   25a72:	movs	r1, r0
   25a74:	ldrh	r1, [r3, #32]
   25a76:	movs	r1, r0
   25a78:	ldrh	r7, [r6, #32]
   25a7a:	movs	r1, r0
   25a7c:	ldrh	r1, [r3, #32]
   25a7e:	movs	r1, r0
   25a80:	ldrh	r3, [r7, #32]
   25a82:	movs	r1, r0
   25a84:	ldrh	r3, [r3, #34]	; 0x22
   25a86:	movs	r1, r0
   25a88:	ldrh	r7, [r4, #34]	; 0x22
   25a8a:	movs	r1, r0
   25a8c:	ldrh	r0, [r5, #38]	; 0x26
   25a8e:	movs	r1, r0
   25a90:	str	r2, [sp, #812]	; 0x32c
   25a92:	movs	r1, r0
   25a94:	ldrh	r1, [r7, #38]	; 0x26
   25a96:	movs	r1, r0
   25a98:	ldrh	r3, [r4, #38]	; 0x26
   25a9a:	movs	r1, r0
   25a9c:	ldrh	r3, [r3, #38]	; 0x26
   25a9e:	movs	r1, r0
   25aa0:	ldrh	r7, [r4, #36]	; 0x24
   25aa2:	movs	r1, r0
   25aa4:	ldrh	r0, [r0, #38]	; 0x26
   25aa6:	movs	r1, r0
   25aa8:	ldrh	r5, [r5, #38]	; 0x26
   25aaa:	movs	r1, r0
   25aac:	ldrh	r5, [r6, #40]	; 0x28
   25aae:	movs	r1, r0
   25ab0:	ldrsh	r2, [r6, r3]
   25ab2:	movs	r1, r0
   25ab4:	ldrh	r5, [r1, #40]	; 0x28
   25ab6:	movs	r1, r0
   25ab8:	ldrh	r7, [r2, #40]	; 0x28
   25aba:	movs	r1, r0
   25abc:	strh	r4, [r5, #12]
   25abe:	movs	r1, r0
   25ac0:	ldrh	r7, [r0, #40]	; 0x28
   25ac2:	movs	r1, r0
   25ac4:	ldrh	r2, [r6, #36]	; 0x24
   25ac6:	movs	r1, r0
   25ac8:	ldrh	r1, [r6, #38]	; 0x26
   25aca:	movs	r1, r0
   25acc:	ldrh	r6, [r7, #38]	; 0x26
   25ace:	movs	r1, r0
   25ad0:	ldrh	r5, [r3, #40]	; 0x28
   25ad2:	movs	r1, r0
   25ad4:	strh	r0, [r0, #6]
   25ad6:	movs	r1, r0
   25ad8:	ldrh	r6, [r6, #38]	; 0x26
   25ada:	movs	r1, r0
   25adc:	ldrh	r3, [r1, #40]	; 0x28
   25ade:	movs	r1, r0
   25ae0:	ldrh	r2, [r0, #40]	; 0x28
   25ae2:	movs	r1, r0
   25ae4:	ldrh	r5, [r7, #38]	; 0x26
   25ae6:	movs	r1, r0
   25ae8:	ldrh	r6, [r5, #38]	; 0x26
   25aea:	movs	r1, r0
   25aec:	ldrh	r4, [r7, #38]	; 0x26
   25aee:	movs	r1, r0
   25af0:	ldrh	r4, [r6, #38]	; 0x26
   25af2:	movs	r1, r0

00025af4 <btrfs_print_tree@@Base>:
   25af4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25af8:	cmp	r2, #1
   25afa:	vpush	{d8}
   25afe:	mov	r4, r0
   25b00:	ldr	r3, [pc, #688]	; (25db4 <btrfs_print_tree@@Base+0x2c0>)
   25b02:	it	cs
   25b04:	movcs	r2, #1
   25b06:	mov	r9, r2
   25b08:	add	r3, pc
   25b0a:	sub	sp, #148	; 0x94
   25b0c:	str	r1, [sp, #44]	; 0x2c
   25b0e:	ldr	r1, [pc, #680]	; (25db8 <btrfs_print_tree@@Base+0x2c4>)
   25b10:	str	r3, [sp, #32]
   25b12:	ldr	r3, [pc, #680]	; (25dbc <btrfs_print_tree@@Base+0x2c8>)
   25b14:	add	r1, pc
   25b16:	ldr	r3, [r1, r3]
   25b18:	ldr	r3, [r3, #0]
   25b1a:	str	r3, [sp, #140]	; 0x8c
   25b1c:	mov.w	r3, #0
   25b20:	ldrb.w	r3, [r0, #196]	; 0xc4
   25b24:	cbnz	r3, 25b40 <btrfs_print_tree@@Base+0x4c>
   25b26:	bl	24718 <btrfs_print_leaf@@Base>
   25b2a:	ldr	r2, [pc, #660]	; (25dc0 <btrfs_print_tree@@Base+0x2cc>)
   25b2c:	ldr	r3, [pc, #652]	; (25dbc <btrfs_print_tree@@Base+0x2c8>)
   25b2e:	add	r2, pc
   25b30:	ldr	r3, [r2, r3]
   25b32:	ldr	r2, [r3, #0]
   25b34:	ldr	r3, [sp, #140]	; 0x8c
   25b36:	eors	r2, r3
   25b38:	beq.w	25daa <btrfs_print_tree@@Base+0x2b6>
   25b3c:	blx	8510 <__stack_chk_fail@plt>
   25b40:	ldr	r3, [r0, #92]	; 0x5c
   25b42:	str	r3, [sp, #36]	; 0x24
   25b44:	ldr.w	r6, [r0, #192]	; 0xc0
   25b48:	bl	23e70 <btrfs_destroy_delayed_refs@@Base+0x494>
   25b4c:	cmp	r0, r6
   25b4e:	mov	r2, r0
   25b50:	bcs.n	25b5c <btrfs_print_tree@@Base+0x68>
   25b52:	ldr	r0, [pc, #624]	; (25dc4 <btrfs_print_tree@@Base+0x2d0>)
   25b54:	mov	r1, r6
   25b56:	add	r0, pc
   25b58:	bl	16af4 <__btrfs_warning@@Base>
   25b5c:	mov	r0, r4
   25b5e:	movs	r5, #0
   25b60:	bl	23e70 <btrfs_destroy_delayed_refs@@Base+0x494>
   25b64:	ldr.w	r2, [r4, #176]	; 0xb0
   25b68:	ldr.w	r3, [r4, #180]	; 0xb4
   25b6c:	add.w	r7, r4, #197	; 0xc5
   25b70:	ldr	r1, [pc, #596]	; (25dc8 <btrfs_print_tree@@Base+0x2d4>)
   25b72:	add.w	fp, sp, #52	; 0x34
   25b76:	mov	r8, r7
   25b78:	strd	r2, r3, [sp, #16]
   25b7c:	add	r1, pc
   25b7e:	subs	r0, r0, r6
   25b80:	strd	r6, r0, [sp, #4]
   25b84:	ldrb.w	r3, [r4, #196]	; 0xc4
   25b88:	movs	r0, #1
   25b8a:	str	r3, [sp, #0]
   25b8c:	ldrd	r2, r3, [r4, #40]	; 0x28
   25b90:	blx	8838 <__printf_chk@plt+0x4>
   25b94:	ldr	r2, [sp, #32]
   25b96:	ldr	r3, [pc, #564]	; (25dcc <btrfs_print_tree@@Base+0x2d8>)
   25b98:	ldr	r3, [r2, r3]
   25b9a:	str	r5, [sp, #0]
   25b9c:	str	r3, [sp, #28]
   25b9e:	ldr	r1, [sp, #28]
   25ba0:	ldr.w	r2, [r4, #184]	; 0xb8
   25ba4:	ldr.w	r3, [r4, #188]	; 0xbc
   25ba8:	ldr	r0, [r1, #0]
   25baa:	bl	240ac <print_objectid@@Base>
   25bae:	movs	r0, #10
   25bb0:	blx	87d4 <putchar@plt+0x4>
   25bb4:	mov	r0, r4
   25bb6:	bl	23d20 <btrfs_destroy_delayed_refs@@Base+0x344>
   25bba:	ldr	r3, [sp, #28]
   25bbc:	ldr	r0, [r3, #0]
   25bbe:	blx	8408 <fflush@plt>
   25bc2:	mov	r0, r4
   25bc4:	bl	23e70 <btrfs_destroy_delayed_refs@@Base+0x494>
   25bc8:	ldr	r3, [pc, #516]	; (25dd0 <btrfs_print_tree@@Base+0x2dc>)
   25bca:	add	r3, pc
   25bcc:	vmov	s17, r3
   25bd0:	str	r0, [sp, #40]	; 0x28
   25bd2:	cmp	r5, r6
   25bd4:	beq.n	25bdc <btrfs_print_tree@@Base+0xe8>
   25bd6:	ldr	r3, [sp, #40]	; 0x28
   25bd8:	cmp	r5, r3
   25bda:	bne.n	25c74 <btrfs_print_tree@@Base+0x180>
   25bdc:	ldr	r3, [sp, #44]	; 0x2c
   25bde:	cmp	r3, #0
   25be0:	beq.n	25b2a <btrfs_print_tree@@Base+0x36>
   25be2:	ldr	r3, [sp, #36]	; 0x24
   25be4:	cmp	r3, #0
   25be6:	beq.n	25b2a <btrfs_print_tree@@Base+0x36>
   25be8:	ldr.w	r8, [r4, #92]	; 0x5c
   25bec:	ldrb.w	r6, [r4, #196]	; 0xc4
   25bf0:	cmp.w	r9, #0
   25bf4:	bne.w	25cfe <btrfs_print_tree@@Base+0x20a>
   25bf8:	ldr.w	sl, [pc, #472]	; 25dd4 <btrfs_print_tree@@Base+0x2e0>
   25bfc:	ldr.w	fp, [pc, #472]	; 25dd8 <btrfs_print_tree@@Base+0x2e4>
   25c00:	ldr.w	r3, [r4, #192]	; 0xc0
   25c04:	add	sl, pc
   25c06:	add	fp, pc
   25c08:	str	r3, [sp, #28]
   25c0a:	ldr	r3, [sp, #28]
   25c0c:	cmp	r3, r9
   25c0e:	ble.n	25b2a <btrfs_print_tree@@Base+0x36>
   25c10:	mov	r0, r7
   25c12:	mov	r1, r7
   25c14:	ldr.w	r5, [r0, #25]!
   25c18:	ldr.w	r2, [r1, #17]!
   25c1c:	ldr	r0, [r0, #4]
   25c1e:	ldr	r3, [r1, #4]
   25c20:	str	r1, [sp, #36]	; 0x24
   25c22:	strd	r5, r0, [sp]
   25c26:	mov	r0, r8
   25c28:	bl	1cd7c <read_tree_block@@Base>
   25c2c:	ldr	r1, [sp, #36]	; 0x24
   25c2e:	mov	r5, r0
   25c30:	cmp	r0, #0
   25c32:	beq.n	25cc8 <btrfs_print_tree@@Base+0x1d4>
   25c34:	cmn.w	r0, #4096	; 0x1000
   25c38:	bhi.n	25cc8 <btrfs_print_tree@@Base+0x1d4>
   25c3a:	ldr	r3, [r0, #84]	; 0x54
   25c3c:	lsls	r3, r3, #29
   25c3e:	bpl.n	25cc8 <btrfs_print_tree@@Base+0x1d4>
   25c40:	ldrb.w	r3, [r0, #196]	; 0xc4
   25c44:	subs	r2, r6, #1
   25c46:	cmp	r3, r2
   25c48:	beq.n	25cf4 <btrfs_print_tree@@Base+0x200>
   25c4a:	strd	r3, r2, [sp, #16]
   25c4e:	ldr.w	r2, [r0, #144]	; 0x90
   25c52:	ldr.w	r3, [r0, #148]	; 0x94
   25c56:	mov	r0, fp
   25c58:	strd	r9, r6, [sp]
   25c5c:	strd	r2, r3, [sp, #8]
   25c60:	ldr.w	r2, [r4, #144]	; 0x90
   25c64:	ldr.w	r3, [r4, #148]	; 0x94
   25c68:	bl	16af4 <__btrfs_warning@@Base>
   25c6c:	mov	r0, r5
   25c6e:	bl	16314 <free_extent_buffer@@Base>
   25c72:	b.n	25cec <btrfs_print_tree@@Base+0x1f8>
   25c74:	mov	r3, r8
   25c76:	add.w	r2, r5, r5, lsl #5
   25c7a:	ldr.w	sl, [r3, #17]!
   25c7e:	adds	r2, #101	; 0x65
   25c80:	mov	r1, fp
   25c82:	mov	r0, r4
   25c84:	adds	r5, #1
   25c86:	ldr	r3, [r3, #4]
   25c88:	vmov	s16, r3
   25c8c:	movs	r3, #17
   25c8e:	bl	16a0e <read_extent_buffer@@Base>
   25c92:	movs	r0, #9
   25c94:	blx	87d4 <putchar@plt+0x4>
   25c98:	mov	r0, fp
   25c9a:	bl	2431c <btrfs_print_key@@Base>
   25c9e:	mov	r3, r8
   25ca0:	ldr.w	r2, [r3, #25]!
   25ca4:	movs	r0, #1
   25ca6:	vmov	r1, s17
   25caa:	add.w	r8, r8, #33	; 0x21
   25cae:	ldr	r3, [r3, #4]
   25cb0:	strd	r2, r3, [sp]
   25cb4:	mov	r2, sl
   25cb6:	vmov	r3, s16
   25cba:	blx	8838 <__printf_chk@plt+0x4>
   25cbe:	ldr	r3, [sp, #28]
   25cc0:	ldr	r0, [r3, #0]
   25cc2:	blx	8408 <fflush@plt>
   25cc6:	b.n	25bd2 <btrfs_print_tree@@Base+0xde>
   25cc8:	ldr	r2, [sp, #32]
   25cca:	ldr	r3, [pc, #272]	; (25ddc <btrfs_print_tree@@Base+0x2e8>)
   25ccc:	ldr.w	r0, [r4, #184]	; 0xb8
   25cd0:	ldr	r3, [r2, r3]
   25cd2:	ldr.w	r2, [r4, #188]	; 0xbc
   25cd6:	strd	r0, r2, [sp, #8]
   25cda:	ldr	r0, [r1, #0]
   25cdc:	ldr	r2, [r1, #4]
   25cde:	movs	r1, #1
   25ce0:	strd	r0, r2, [sp]
   25ce4:	mov	r2, sl
   25ce6:	ldr	r0, [r3, #0]
   25ce8:	blx	8860 <__fprintf_chk@plt+0x4>
   25cec:	add.w	r9, r9, #1
   25cf0:	adds	r7, #33	; 0x21
   25cf2:	b.n	25c0a <btrfs_print_tree@@Base+0x116>
   25cf4:	movs	r2, #0
   25cf6:	movs	r1, #1
   25cf8:	bl	25af4 <btrfs_print_tree@@Base>
   25cfc:	b.n	25c6c <btrfs_print_tree@@Base+0x178>
   25cfe:	cmp	r6, #0
   25d00:	beq.w	25b2a <btrfs_print_tree@@Base+0x36>
   25d04:	add	r5, sp, #72	; 0x48
   25d06:	subs	r7, r6, #1
   25d08:	add.w	sl, r5, r6, lsl #2
   25d0c:	mov.w	fp, #0
   25d10:	mov	r0, r5
   25d12:	bl	1753c <btrfs_init_path@@Base>
   25d16:	ldr	r3, [r4, #80]	; 0x50
   25d18:	mov	r9, sl
   25d1a:	adds	r3, #1
   25d1c:	str	r3, [r4, #80]	; 0x50
   25d1e:	add	r3, sp, #144	; 0x90
   25d20:	add.w	r3, r3, r6, lsl #2
   25d24:	str.w	r4, [r3, #-72]
   25d28:	mov	r3, r5
   25d2a:	movs	r4, #0
   25d2c:	strb.w	r7, [sp, #137]	; 0x89
   25d30:	str.w	fp, [r3, #32]
   25d34:	ldr.w	r0, [r3], #4
   25d38:	cbz	r0, 25d42 <btrfs_print_tree@@Base+0x24e>
   25d3a:	str	r3, [sp, #28]
   25d3c:	bl	16314 <free_extent_buffer@@Base>
   25d40:	ldr	r3, [sp, #28]
   25d42:	adds	r4, #1
   25d44:	cmp	r4, r6
   25d46:	blt.n	25d30 <btrfs_print_tree@@Base+0x23c>
   25d48:	mov	r4, sl
   25d4a:	mov	r3, r6
   25d4c:	ldrb.w	r2, [sp, #137]	; 0x89
   25d50:	cmp	r3, r2
   25d52:	bgt.n	25d7a <btrfs_print_tree@@Base+0x286>
   25d54:	ldr.w	r0, [r9, #-4]
   25d58:	movs	r2, #1
   25d5a:	movs	r1, #0
   25d5c:	bl	25af4 <btrfs_print_tree@@Base>
   25d60:	mov	r1, r5
   25d62:	mov	r0, r8
   25d64:	bl	1ad64 <btrfs_next_sibling_tree_block@@Base>
   25d68:	cmp	r0, #0
   25d6a:	blt.n	25d90 <btrfs_print_tree@@Base+0x29c>
   25d6c:	beq.n	25d54 <btrfs_print_tree@@Base+0x260>
   25d6e:	subs	r7, #1
   25d70:	sub.w	r9, r9, #4
   25d74:	adds	r3, r7, #1
   25d76:	bne.n	25d28 <btrfs_print_tree@@Base+0x234>
   25d78:	b.n	25d90 <btrfs_print_tree@@Base+0x29c>
   25d7a:	ldr	r1, [r4, #0]
   25d7c:	movs	r2, #0
   25d7e:	str.w	fp, [r4, #32]
   25d82:	mov	r0, r8
   25d84:	str	r3, [sp, #28]
   25d86:	bl	18302 <read_node_slot@@Base>
   25d8a:	subs	r4, #4
   25d8c:	ldr	r3, [sp, #28]
   25d8e:	cbnz	r0, 25d98 <btrfs_print_tree@@Base+0x2a4>
   25d90:	mov	r0, r5
   25d92:	bl	1754c <btrfs_release_path@@Base>
   25d96:	b.n	25b2a <btrfs_print_tree@@Base+0x36>
   25d98:	cmn.w	r0, #4096	; 0x1000
   25d9c:	bhi.n	25d90 <btrfs_print_tree@@Base+0x29c>
   25d9e:	ldr	r2, [r0, #84]	; 0x54
   25da0:	lsls	r2, r2, #29
   25da2:	bpl.n	25d90 <btrfs_print_tree@@Base+0x29c>
   25da4:	subs	r3, #1
   25da6:	str	r0, [r4, #0]
   25da8:	b.n	25d4c <btrfs_print_tree@@Base+0x258>
   25daa:	add	sp, #148	; 0x94
   25dac:	vpop	{d8}
   25db0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25db4:	b.n	262b0 <btrfs_dump_free_space@@Base+0x92>
   25db6:	movs	r3, r0
   25db8:	b.n	2629c <btrfs_dump_free_space@@Base+0x7e>
   25dba:	movs	r3, r0
   25dbc:	lsls	r0, r4, #8
   25dbe:	movs	r0, r0
   25dc0:	b.n	26270 <btrfs_dump_free_space@@Base+0x52>
   25dc2:	movs	r3, r0
   25dc4:	ldrh	r2, [r6, #30]
   25dc6:	movs	r1, r0
   25dc8:	ldrh	r6, [r0, #32]
   25dca:	movs	r1, r0
   25dcc:	lsls	r4, r2, #9
   25dce:	movs	r0, r0
   25dd0:	ldrh	r3, [r6, #30]
   25dd2:	movs	r1, r0
   25dd4:	ldrh	r7, [r1, #30]
   25dd6:	movs	r1, r0
   25dd8:	ldrh	r7, [r5, #30]
   25dda:	movs	r1, r0
   25ddc:	lsls	r0, r6, #8
   25dde:	movs	r0, r0
   25de0:	ldr	r3, [r0, #0]
   25de2:	cbz	r3, 25dea <btrfs_print_tree@@Base+0x2f6>
   25de4:	movs	r3, #0
   25de6:	strd	r3, r3, [r0]
   25dea:	bx	lr
   25dec:	push	{r4, r5, r6, lr}
   25dee:	lsrs	r4, r2, #5
   25df0:	and.w	r6, r2, #31
   25df4:	bic.w	r2, r2, #31
   25df8:	ldr.w	r5, [r0, r4, lsl #2]
   25dfc:	mov.w	r4, #4294967295	; 0xffffffff
   25e00:	lsls	r4, r6
   25e02:	eors	r5, r3
   25e04:	ands	r4, r5
   25e06:	cbz	r4, 25e3c <btrfs_print_tree@@Base+0x348>
   25e08:	uxth	r3, r4
   25e0a:	cbnz	r3, 25e4c <btrfs_print_tree@@Base+0x358>
   25e0c:	lsrs	r4, r4, #16
   25e0e:	movs	r3, #16
   25e10:	tst.w	r4, #255	; 0xff
   25e14:	itt	eq
   25e16:	lsreq	r4, r4, #8
   25e18:	addeq	r3, #8
   25e1a:	lsls	r6, r4, #28
   25e1c:	itt	eq
   25e1e:	lsreq	r4, r4, #4
   25e20:	addeq	r3, #4
   25e22:	lsls	r5, r4, #30
   25e24:	itt	eq
   25e26:	lsreq	r4, r4, #2
   25e28:	addeq	r3, #2
   25e2a:	lsls	r0, r4, #31
   25e2c:	it	pl
   25e2e:	addpl	r3, #1
   25e30:	add	r3, r2
   25e32:	cmp	r1, r3
   25e34:	it	cs
   25e36:	movcs	r1, r3
   25e38:	mov	r0, r1
   25e3a:	pop	{r4, r5, r6, pc}
   25e3c:	adds	r2, #32
   25e3e:	cmp	r2, r1
   25e40:	bcs.n	25e38 <btrfs_print_tree@@Base+0x344>
   25e42:	lsrs	r4, r2, #5
   25e44:	ldr.w	r4, [r0, r4, lsl #2]
   25e48:	eors	r4, r3
   25e4a:	b.n	25e06 <btrfs_print_tree@@Base+0x312>
   25e4c:	movs	r3, #0
   25e4e:	b.n	25e10 <btrfs_print_tree@@Base+0x31c>
   25e50:	ldr.w	ip, [pc, #104]	; 25ebc <btrfs_print_tree@@Base+0x3c8>
   25e54:	push	{r4, r5, lr}
   25e56:	add	ip, pc
   25e58:	ldr	r5, [pc, #100]	; (25ec0 <btrfs_print_tree@@Base+0x3cc>)
   25e5a:	sub	sp, #92	; 0x5c
   25e5c:	ldr	r4, [pc, #100]	; (25ec4 <btrfs_print_tree@@Base+0x3d0>)
   25e5e:	ldr.w	r5, [ip, r5]
   25e62:	add	r4, pc
   25e64:	ldr	r5, [r5, #0]
   25e66:	str	r5, [sp, #84]	; 0x54
   25e68:	mov.w	r5, #0
   25e6c:	cbz	r3, 25ea2 <btrfs_print_tree@@Base+0x3ae>
   25e6e:	ldr	r5, [pc, #88]	; (25ec8 <btrfs_print_tree@@Base+0x3d4>)
   25e70:	ldr	r4, [r4, r5]
   25e72:	strd	r2, r1, [sp]
   25e76:	movs	r1, #1
   25e78:	strd	r0, r3, [sp, #8]
   25e7c:	ldr	r2, [pc, #76]	; (25ecc <btrfs_print_tree@@Base+0x3d8>)
   25e7e:	ldr	r3, [pc, #80]	; (25ed0 <btrfs_print_tree@@Base+0x3dc>)
   25e80:	ldr	r0, [r4, #0]
   25e82:	add	r4, sp, #20
   25e84:	add	r3, pc
   25e86:	add	r2, pc
   25e88:	blx	8860 <__fprintf_chk@plt+0x4>
   25e8c:	movs	r1, #16
   25e8e:	mov	r0, r4
   25e90:	blx	86c4 <backtrace@plt>
   25e94:	movs	r2, #2
   25e96:	mov	r1, r0
   25e98:	mov	r0, r4
   25e9a:	blx	89c8 <backtrace_symbols_fd@plt>
   25e9e:	blx	8980 <abort@plt>
   25ea2:	ldr	r2, [pc, #48]	; (25ed4 <btrfs_print_tree@@Base+0x3e0>)
   25ea4:	ldr	r3, [pc, #24]	; (25ec0 <btrfs_print_tree@@Base+0x3cc>)
   25ea6:	add	r2, pc
   25ea8:	ldr	r3, [r2, r3]
   25eaa:	ldr	r2, [r3, #0]
   25eac:	ldr	r3, [sp, #84]	; 0x54
   25eae:	eors	r2, r3
   25eb0:	beq.n	25eb6 <btrfs_print_tree@@Base+0x3c2>
   25eb2:	blx	8510 <__stack_chk_fail@plt>
   25eb6:	add	sp, #92	; 0x5c
   25eb8:	pop	{r4, r5, pc}
   25eba:	nop
   25ebc:	svc	46	; 0x2e
   25ebe:	movs	r3, r0
   25ec0:	lsls	r0, r4, #8
   25ec2:	movs	r0, r0
   25ec4:	svc	34	; 0x22
   25ec6:	movs	r3, r0
   25ec8:	lsls	r0, r6, #8
   25eca:	movs	r0, r0
   25ecc:	adds	r0, #28
   25ece:	movs	r1, r0
   25ed0:	ldrh	r5, [r7, #32]
   25ed2:	movs	r1, r0
   25ed4:	udf	#222	; 0xde
   25ed6:	movs	r3, r0
   25ed8:	push	{r3, r4, r5, lr}
   25eda:	mov	r4, r0
   25edc:	ldrd	r5, r3, [r0, #32]
   25ee0:	movs	r2, #83	; 0x53
   25ee2:	ldr	r1, [pc, #56]	; (25f1c <btrfs_print_tree@@Base+0x428>)
   25ee4:	cmp	r5, r3
   25ee6:	ldr	r0, [pc, #56]	; (25f20 <btrfs_print_tree@@Base+0x42c>)
   25ee8:	add	r1, pc
   25eea:	ite	lt
   25eec:	movlt	r3, #0
   25eee:	movge	r3, #1
   25ef0:	add	r0, pc
   25ef2:	bl	25e50 <btrfs_print_tree@@Base+0x35c>
   25ef6:	adds	r3, r5, #1
   25ef8:	str	r3, [r4, #32]
   25efa:	ldr	r3, [r4, #12]
   25efc:	ldr	r2, [r4, #8]
   25efe:	ldr.w	r1, [r3, #464]	; 0x1d0
   25f02:	ldr.w	r1, [r1, #388]	; 0x184
   25f06:	mla	r5, r1, r5, r2
   25f0a:	strd	r5, r5, [r4]
   25f0e:	ldr.w	r3, [r3, #464]	; 0x1d0
   25f12:	ldr.w	r3, [r3, #388]	; 0x184
   25f16:	str	r3, [r4, #16]
   25f18:	pop	{r3, r4, r5, pc}
   25f1a:	nop
   25f1c:	str	r1, [sp, #100]	; 0x64
   25f1e:	movs	r1, r0
   25f20:	ldrh	r4, [r4, #30]
   25f22:	movs	r1, r0
   25f24:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   25f26:	mov	r4, r0
   25f28:	ldr	r2, [pc, #144]	; (25fbc <btrfs_print_tree@@Base+0x4c8>)
   25f2a:	ldr	r3, [pc, #148]	; (25fc0 <btrfs_print_tree@@Base+0x4cc>)
   25f2c:	add	r2, pc
   25f2e:	ldr	r6, [pc, #148]	; (25fc4 <btrfs_print_tree@@Base+0x4d0>)
   25f30:	ldr	r3, [r2, r3]
   25f32:	add	r6, pc
   25f34:	ldr	r3, [r3, #0]
   25f36:	str	r3, [sp, #4]
   25f38:	mov.w	r3, #0
   25f3c:	mov.w	r3, #4294967295	; 0xffffffff
   25f40:	str	r3, [sp, #0]
   25f42:	ldrb.w	r3, [r0, #40]	; 0x28
   25f46:	ands.w	r5, r3, #1
   25f4a:	bne.n	25f54 <btrfs_print_tree@@Base+0x460>
   25f4c:	bl	25ed8 <btrfs_print_tree@@Base+0x3e4>
   25f50:	movs	r0, #0
   25f52:	b.n	25f9e <btrfs_print_tree@@Base+0x4aa>
   25f54:	cbnz	r1, 25fb2 <btrfs_print_tree@@Base+0x4be>
   25f56:	ldr	r5, [r0, #36]	; 0x24
   25f58:	lsls	r5, r5, #2
   25f5a:	ldr	r3, [r4, #8]
   25f5c:	mov	r0, r4
   25f5e:	ldr.w	r7, [r3, r1, lsl #2]
   25f62:	bl	25ed8 <btrfs_print_tree@@Base+0x3e4>
   25f66:	ldr	r3, [r4, #12]
   25f68:	mov.w	r0, #4294967295	; 0xffffffff
   25f6c:	ldr	r1, [r4, #4]
   25f6e:	ldr.w	r3, [r3, #464]	; 0x1d0
   25f72:	add	r1, r5
   25f74:	ldr.w	r2, [r3, #388]	; 0x184
   25f78:	subs	r2, r2, r5
   25f7a:	bl	16aee <crc32c_le@@Base>
   25f7e:	mvns	r0, r0
   25f80:	cmp	r0, r7
   25f82:	str	r0, [sp, #0]
   25f84:	beq.n	25f50 <btrfs_print_tree@@Base+0x45c>
   25f86:	ldr	r3, [pc, #64]	; (25fc8 <btrfs_print_tree@@Base+0x4d4>)
   25f88:	ldr	r0, [pc, #64]	; (25fcc <btrfs_print_tree@@Base+0x4d8>)
   25f8a:	ldr	r3, [r6, r3]
   25f8c:	add	r0, pc
   25f8e:	ldr	r1, [r3, #0]
   25f90:	blx	8968 <fputs@plt+0x4>
   25f94:	mov	r0, r4
   25f96:	bl	25de0 <btrfs_print_tree@@Base+0x2ec>
   25f9a:	mvn.w	r0, #4
   25f9e:	ldr	r2, [pc, #48]	; (25fd0 <btrfs_print_tree@@Base+0x4dc>)
   25fa0:	ldr	r3, [pc, #28]	; (25fc0 <btrfs_print_tree@@Base+0x4cc>)
   25fa2:	add	r2, pc
   25fa4:	ldr	r3, [r2, r3]
   25fa6:	ldr	r2, [r3, #0]
   25fa8:	ldr	r3, [sp, #4]
   25faa:	eors	r2, r3
   25fac:	beq.n	25fb6 <btrfs_print_tree@@Base+0x4c2>
   25fae:	blx	8510 <__stack_chk_fail@plt>
   25fb2:	movs	r5, #0
   25fb4:	b.n	25f5a <btrfs_print_tree@@Base+0x466>
   25fb6:	add	sp, #12
   25fb8:	pop	{r4, r5, r6, r7, pc}
   25fba:	nop
   25fbc:	udf	#88	; 0x58
   25fbe:	movs	r3, r0
   25fc0:	lsls	r0, r4, #8
   25fc2:	movs	r0, r0
   25fc4:	udf	#82	; 0x52
   25fc6:	movs	r3, r0
   25fc8:	lsls	r0, r6, #8
   25fca:	movs	r0, r0
   25fcc:	ldrh	r3, [r5, #26]
   25fce:	movs	r1, r0
   25fd0:	ble.n	25f98 <btrfs_print_tree@@Base+0x4a4>
   25fd2:	movs	r3, r0
   25fd4:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   25fd8:	mov	sl, r0
   25fda:	ldr	r4, [r0, #0]
   25fdc:	mov	r8, r2
   25fde:	mov	r9, r3
   25fe0:	movs	r5, #0
   25fe2:	cbz	r4, 26020 <btrfs_print_tree@@Base+0x52c>
   25fe4:	ldrd	r2, r3, [r4, #16]
   25fe8:	cmp	r9, r3
   25fea:	it	eq
   25fec:	cmpeq	r8, r2
   25fee:	bcs.n	25ff8 <btrfs_print_tree@@Base+0x504>
   25ff0:	ldr	r3, [r4, #8]
   25ff2:	mov	r5, r4
   25ff4:	mov	r4, r3
   25ff6:	b.n	25fe2 <btrfs_print_tree@@Base+0x4ee>
   25ff8:	cmp	r3, r9
   25ffa:	it	eq
   25ffc:	cmpeq	r2, r8
   25ffe:	bcs.n	260b2 <btrfs_print_tree@@Base+0x5be>
   26000:	ldr	r3, [r4, #4]
   26002:	b.n	25ff2 <btrfs_print_tree@@Base+0x4fe>
   26004:	ldrd	r2, r1, [r5, #24]
   26008:	ldrd	r3, r0, [r5, #16]
   2600c:	adds	r3, r3, r2
   2600e:	str	r3, [sp, #8]
   26010:	adc.w	r3, r0, r1
   26014:	str	r3, [sp, #12]
   26016:	ldrd	r2, r3, [sp, #8]
   2601a:	b.n	260a6 <btrfs_print_tree@@Base+0x5b2>
   2601c:	mov	r4, r0
   2601e:	b.n	260da <btrfs_print_tree@@Base+0x5e6>
   26020:	cmp	r5, #0
   26022:	beq.n	260da <btrfs_print_tree@@Base+0x5e6>
   26024:	ldrd	r2, r3, [r5, #16]
   26028:	ldr.w	r6, [sl, #44]	; 0x2c
   2602c:	cmp	r9, r3
   2602e:	it	eq
   26030:	cmpeq	r8, r2
   26032:	bcs.n	26064 <btrfs_print_tree@@Base+0x570>
   26034:	mov	r0, r5
   26036:	bl	13586 <rb_prev@@Base>
   2603a:	mov	r5, r0
   2603c:	cmp	r0, #0
   2603e:	beq.n	260da <btrfs_print_tree@@Base+0x5e6>
   26040:	ldrd	r2, r3, [r0, #16]
   26044:	ldr	r1, [pc, #156]	; (260e4 <btrfs_print_tree@@Base+0x5f0>)
   26046:	cmp	r9, r3
   26048:	ldr	r0, [pc, #156]	; (260e8 <btrfs_print_tree@@Base+0x5f4>)
   2604a:	it	eq
   2604c:	cmpeq	r8, r2
   2604e:	add	r1, pc
   26050:	add.w	r1, r1, #16
   26054:	add	r0, pc
   26056:	ite	cc
   26058:	movcc	r3, #1
   2605a:	movcs	r3, #0
   2605c:	mov.w	r2, #628	; 0x274
   26060:	bl	25e50 <btrfs_print_tree@@Base+0x35c>
   26064:	ldr	r3, [r5, #32]
   26066:	cmp	r3, #0
   26068:	beq.n	26004 <btrfs_print_tree@@Base+0x510>
   2606a:	mov	r0, r5
   2606c:	bl	13586 <rb_prev@@Base>
   26070:	cbz	r0, 26094 <btrfs_print_tree@@Base+0x5a0>
   26072:	ldr	r3, [r0, #32]
   26074:	cbnz	r3, 26094 <btrfs_print_tree@@Base+0x5a0>
   26076:	ldrd	r2, r1, [r0, #24]
   2607a:	ldrd	r3, r7, [r0, #16]
   2607e:	adds	r3, r3, r2
   26080:	str	r3, [sp, #0]
   26082:	adc.w	r3, r7, r1
   26086:	str	r3, [sp, #4]
   26088:	ldrd	r2, r3, [sp]
   2608c:	cmp	r9, r3
   2608e:	it	eq
   26090:	cmpeq	r8, r2
   26092:	bcc.n	2601c <btrfs_print_tree@@Base+0x528>
   26094:	ldr.w	r3, [sl, #28]
   26098:	muls	r6, r3
   2609a:	ldrd	r2, r3, [r5, #16]
   2609e:	lsls	r6, r6, #3
   260a0:	adds	r2, r2, r6
   260a2:	adc.w	r3, r3, #0
   260a6:	cmp	r9, r3
   260a8:	it	eq
   260aa:	cmpeq	r8, r2
   260ac:	it	cc
   260ae:	movcc	r4, r5
   260b0:	b.n	260da <btrfs_print_tree@@Base+0x5e6>
   260b2:	ldr	r3, [r4, #32]
   260b4:	cbz	r3, 260da <btrfs_print_tree@@Base+0x5e6>
   260b6:	mov	r0, r4
   260b8:	bl	13586 <rb_prev@@Base>
   260bc:	cbz	r0, 260da <btrfs_print_tree@@Base+0x5e6>
   260be:	ldr	r3, [r0, #32]
   260c0:	cbnz	r3, 260da <btrfs_print_tree@@Base+0x5e6>
   260c2:	ldrd	r3, r5, [r0, #16]
   260c6:	ldrd	r2, r1, [r0, #24]
   260ca:	adds	r6, r3, r2
   260cc:	adc.w	r7, r5, r1
   260d0:	cmp	r9, r7
   260d2:	it	eq
   260d4:	cmpeq	r8, r6
   260d6:	it	cc
   260d8:	movcc	r4, r0
   260da:	mov	r0, r4
   260dc:	add	sp, #16
   260de:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   260e2:	nop
   260e4:	ldrh	r3, [r6, #60]	; 0x3c
   260e6:	movs	r1, r0
   260e8:	ldrh	r5, [r1, #22]
   260ea:	movs	r1, r0
   260ec:	push	{r3, r4, r5, r6, r7, lr}
   260ee:	mov	r6, r0
   260f0:	ldr	r7, [r1, #32]
   260f2:	mov	r5, r1
   260f4:	cbnz	r7, 2614c <btrfs_print_tree@@Base+0x658>
   260f6:	ldrd	r2, r3, [r1, #24]
   260fa:	orrs	r3, r2
   260fc:	ite	eq
   260fe:	moveq	r3, #1
   26100:	movne	r3, #0
   26102:	ldr	r1, [pc, #128]	; (26184 <btrfs_print_tree@@Base+0x690>)
   26104:	movw	r2, #685	; 0x2ad
   26108:	ldr	r0, [pc, #124]	; (26188 <btrfs_print_tree@@Base+0x694>)
   2610a:	add	r1, pc
   2610c:	adds	r1, #35	; 0x23
   2610e:	add	r0, pc
   26110:	bl	25e50 <btrfs_print_tree@@Base+0x35c>
   26114:	ldrd	r0, r1, [r5, #16]
   26118:	mov	r3, r6
   2611a:	movs	r2, #0
   2611c:	ldr	r4, [r3, #0]
   2611e:	cbnz	r4, 26150 <btrfs_print_tree@@Base+0x65c>
   26120:	strd	r2, r4, [r5]
   26124:	mov	r1, r6
   26126:	mov	r0, r5
   26128:	str	r4, [r5, #8]
   2612a:	str	r5, [r3, #0]
   2612c:	bl	1321e <rb_insert_color@@Base>
   26130:	ldrd	r1, r0, [r5, #24]
   26134:	ldrd	r3, r2, [r6, #8]
   26138:	adds	r3, r3, r1
   2613a:	adc.w	r2, r0, r2
   2613e:	strd	r3, r2, [r6, #8]
   26142:	ldr	r3, [r6, #20]
   26144:	mov	r0, r4
   26146:	adds	r3, #1
   26148:	str	r3, [r6, #20]
   2614a:	pop	{r3, r4, r5, r6, r7, pc}
   2614c:	movs	r3, #0
   2614e:	b.n	26102 <btrfs_print_tree@@Base+0x60e>
   26150:	ldrd	r2, r3, [r4, #16]
   26154:	cmp	r1, r3
   26156:	it	eq
   26158:	cmpeq	r0, r2
   2615a:	bcs.n	26162 <btrfs_print_tree@@Base+0x66e>
   2615c:	add.w	r3, r4, #8
   26160:	b.n	2616c <btrfs_print_tree@@Base+0x678>
   26162:	cmp	r3, r1
   26164:	it	eq
   26166:	cmpeq	r2, r0
   26168:	bcs.n	26170 <btrfs_print_tree@@Base+0x67c>
   2616a:	adds	r3, r4, #4
   2616c:	mov	r2, r4
   2616e:	b.n	2611c <btrfs_print_tree@@Base+0x628>
   26170:	ldr	r3, [r4, #32]
   26172:	cbz	r7, 2617e <btrfs_print_tree@@Base+0x68a>
   26174:	cmp	r3, #0
   26176:	beq.n	2616a <btrfs_print_tree@@Base+0x676>
   26178:	mvn.w	r0, #16
   2617c:	b.n	2614a <btrfs_print_tree@@Base+0x656>
   2617e:	cmp	r3, #0
   26180:	bne.n	2615c <btrfs_print_tree@@Base+0x668>
   26182:	b.n	26178 <btrfs_print_tree@@Base+0x684>
   26184:	ldrh	r7, [r6, #54]	; 0x36
   26186:	movs	r1, r0
   26188:	ldrh	r2, [r5, #16]
   2618a:	movs	r1, r0
   2618c:	push	{r4, lr}
   2618e:	mov	r4, r1
   26190:	ldr	r1, [pc, #84]	; (261e8 <btrfs_print_tree@@Base+0x6f4>)
   26192:	sub	sp, #24
   26194:	ldr	r3, [pc, #84]	; (261ec <btrfs_print_tree@@Base+0x6f8>)
   26196:	add	r1, pc
   26198:	ldr	r3, [r1, r3]
   2619a:	mov	r1, sp
   2619c:	ldr	r3, [r3, #0]
   2619e:	str	r3, [sp, #20]
   261a0:	mov.w	r3, #0
   261a4:	movs	r3, #25
   261a6:	muls	r2, r3
   261a8:	movs	r3, #17
   261aa:	adds	r2, #101	; 0x65
   261ac:	bl	16a0e <read_extent_buffer@@Base>
   261b0:	ldr.w	r3, [sp, #13]
   261b4:	ldr.w	r2, [sp, #9]
   261b8:	str.w	r3, [r4, #13]
   261bc:	ldrb.w	r3, [sp, #8]
   261c0:	str.w	r2, [r4, #9]
   261c4:	ldr	r2, [pc, #40]	; (261f0 <btrfs_print_tree@@Base+0x6fc>)
   261c6:	strb	r3, [r4, #8]
   261c8:	ldr	r3, [sp, #0]
   261ca:	add	r2, pc
   261cc:	str	r3, [r4, #0]
   261ce:	ldr	r3, [sp, #4]
   261d0:	str	r3, [r4, #4]
   261d2:	ldr	r3, [pc, #24]	; (261ec <btrfs_print_tree@@Base+0x6f8>)
   261d4:	ldr	r3, [r2, r3]
   261d6:	ldr	r2, [r3, #0]
   261d8:	ldr	r3, [sp, #20]
   261da:	eors	r2, r3
   261dc:	beq.n	261e2 <btrfs_print_tree@@Base+0x6ee>
   261de:	blx	8510 <__stack_chk_fail@plt>
   261e2:	add	sp, #24
   261e4:	pop	{r4, pc}
   261e6:	nop
   261e8:	blt.n	261c8 <btrfs_print_tree@@Base+0x6d4>
   261ea:	movs	r3, r0
   261ec:	lsls	r0, r4, #8
   261ee:	movs	r0, r0
   261f0:	blt.n	26168 <btrfs_print_tree@@Base+0x674>
   261f2:	movs	r3, r0

000261f4 <unlink_free_space@@Base>:
   261f4:	push	{r3, r4, r5, lr}
   261f6:	mov	r5, r1
   261f8:	mov	r4, r0
   261fa:	mov	r1, r0
   261fc:	mov	r0, r5
   261fe:	bl	132c4 <rb_erase@@Base>
   26202:	ldr	r3, [r4, #20]
   26204:	subs	r3, #1
   26206:	str	r3, [r4, #20]
   26208:	ldrd	r3, r2, [r4, #8]
   2620c:	ldrd	r1, r0, [r5, #24]
   26210:	subs	r3, r3, r1
   26212:	sbc.w	r2, r2, r0
   26216:	strd	r3, r2, [r4, #8]
   2621a:	pop	{r3, r4, r5, pc}

0002621c <btrfs_find_free_space@@Base>:
   2621c:	b.n	25fd4 <btrfs_print_tree@@Base+0x4e0>

0002621e <btrfs_dump_free_space@@Base>:
   2621e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26222:	mov	r5, r0
   26224:	sub	sp, #36	; 0x24
   26226:	ldr	r0, [r0, #64]	; 0x40
   26228:	mov	r9, r3
   2622a:	mov	r8, r2
   2622c:	bl	1353a <rb_first@@Base>
   26230:	ldr	r7, [pc, #112]	; (262a4 <btrfs_dump_free_space@@Base+0x86>)
   26232:	ldr	r3, [pc, #116]	; (262a8 <btrfs_dump_free_space@@Base+0x8a>)
   26234:	movs	r6, #0
   26236:	add	r7, pc
   26238:	ldr	r7, [r7, r3]
   2623a:	ldr	r3, [pc, #112]	; (262ac <btrfs_dump_free_space@@Base+0x8e>)
   2623c:	add	r3, pc
   2623e:	str	r3, [sp, #24]
   26240:	ldr	r3, [pc, #108]	; (262b0 <btrfs_dump_free_space@@Base+0x92>)
   26242:	add	r3, pc
   26244:	str	r3, [sp, #28]
   26246:	mov	r4, r0
   26248:	cbnz	r4, 2625e <btrfs_dump_free_space@@Base+0x40>
   2624a:	ldr	r2, [pc, #104]	; (262b4 <btrfs_dump_free_space@@Base+0x96>)
   2624c:	mov	r3, r6
   2624e:	ldr	r0, [r7, #0]
   26250:	movs	r1, #1
   26252:	add	r2, pc
   26254:	add	sp, #36	; 0x24
   26256:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2625a:	b.w	885c <__fprintf_chk@plt>
   2625e:	ldrd	r2, r3, [r4, #24]
   26262:	cmp	r3, r9
   26264:	it	eq
   26266:	cmpeq	r2, r8
   26268:	bcc.n	26270 <btrfs_dump_free_space@@Base+0x52>
   2626a:	ldr	r1, [r5, #108]	; 0x6c
   2626c:	cbnz	r1, 26270 <btrfs_dump_free_space@@Base+0x52>
   2626e:	adds	r6, #1
   26270:	ldr	r1, [r4, #32]
   26272:	ldrd	sl, fp, [r4, #16]
   26276:	cmp	r1, #0
   26278:	ldr	r1, [sp, #24]
   2627a:	ldr	r0, [r7, #0]
   2627c:	strd	r2, r3, [sp, #8]
   26280:	mov	ip, r1
   26282:	ldr	r1, [sp, #28]
   26284:	ldr	r2, [pc, #48]	; (262b8 <btrfs_dump_free_space@@Base+0x9a>)
   26286:	it	ne
   26288:	movne	r1, ip
   2628a:	strd	sl, fp, [sp]
   2628e:	add	r2, pc
   26290:	str	r1, [sp, #16]
   26292:	movs	r1, #1
   26294:	blx	8860 <__fprintf_chk@plt+0x4>
   26298:	mov	r0, r4
   2629a:	bl	1355a <rb_next@@Base>
   2629e:	mov	r4, r0
   262a0:	b.n	26248 <btrfs_dump_free_space@@Base+0x2a>
   262a2:	nop
   262a4:	blt.n	26344 <btrfs_add_free_space@@Base+0x32>
   262a6:	movs	r3, r0
   262a8:	lsls	r0, r6, #8
   262aa:	movs	r0, r0
   262ac:	ldrh	r2, [r3, #8]
   262ae:	movs	r1, r0
   262b0:	adds	r1, #120	; 0x78
   262b2:	movs	r1, r0
   262b4:	ldrh	r2, [r6, #8]
   262b6:	movs	r1, r0
   262b8:	ldrh	r4, [r1, #6]
   262ba:	movs	r1, r0

000262bc <btrfs_init_free_space_ctl@@Base>:
   262bc:	push	{r3, r4, r5, lr}
   262be:	mov	r4, r0
   262c0:	mov	r5, r1
   262c2:	movs	r0, #1
   262c4:	movs	r1, #48	; 0x30
   262c6:	blx	839c <calloc@plt+0x4>
   262ca:	cbz	r0, 262e0 <btrfs_init_free_space_ctl@@Base+0x24>
   262cc:	ldrd	r2, r3, [r4, #40]	; 0x28
   262d0:	str	r5, [r0, #44]	; 0x2c
   262d2:	str	r5, [r0, #28]
   262d4:	strd	r2, r3, [r0, #32]
   262d8:	str	r4, [r0, #40]	; 0x28
   262da:	str	r0, [r4, #64]	; 0x40
   262dc:	movs	r0, #0
   262de:	pop	{r3, r4, r5, pc}
   262e0:	mvn.w	r0, #11
   262e4:	b.n	262de <btrfs_init_free_space_ctl@@Base+0x22>

000262e6 <__btrfs_remove_free_space_cache@@Base>:
   262e6:	push	{r3, r4, r5, lr}
   262e8:	mov	r5, r0
   262ea:	mov	r0, r5
   262ec:	bl	1354a <rb_last@@Base>
   262f0:	mov	r4, r0
   262f2:	cbnz	r0, 262f6 <__btrfs_remove_free_space_cache@@Base+0x10>
   262f4:	pop	{r3, r4, r5, pc}
   262f6:	mov	r1, r4
   262f8:	mov	r0, r5
   262fa:	bl	261f4 <unlink_free_space@@Base>
   262fe:	ldr	r0, [r4, #32]
   26300:	blx	8434 <free@plt+0x4>
   26304:	mov	r0, r4
   26306:	blx	8434 <free@plt+0x4>
   2630a:	b.n	262ea <__btrfs_remove_free_space_cache@@Base+0x4>

0002630c <btrfs_remove_free_space_cache@@Base>:
   2630c:	ldr	r0, [r0, #64]	; 0x40
   2630e:	b.w	262e6 <__btrfs_remove_free_space_cache@@Base>

00026312 <btrfs_add_free_space@@Base>:
   26312:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26316:	mov	r9, r3
   26318:	ldr	r3, [pc, #240]	; (2640c <btrfs_add_free_space@@Base+0xfa>)
   2631a:	mov	r7, r0
   2631c:	movs	r1, #48	; 0x30
   2631e:	movs	r0, #1
   26320:	add	r3, pc
   26322:	ldrd	r5, r6, [sp, #48]	; 0x30
   26326:	mov	r8, r2
   26328:	str	r3, [sp, #4]
   2632a:	blx	839c <calloc@plt+0x4>
   2632e:	mov	r4, r0
   26330:	cmp	r0, #0
   26332:	beq.n	26404 <btrfs_add_free_space@@Base+0xf2>
   26334:	adds.w	r2, r8, r5
   26338:	strd	r5, r6, [r0, #24]
   2633c:	adc.w	r3, r9, r6
   26340:	strd	r8, r9, [r0, #16]
   26344:	mov	r0, r7
   26346:	bl	25fd4 <btrfs_print_tree@@Base+0x4e0>
   2634a:	mov	r6, r0
   2634c:	cbz	r0, 26382 <btrfs_add_free_space@@Base+0x70>
   2634e:	bl	13586 <rb_prev@@Base>
   26352:	cbz	r0, 26382 <btrfs_add_free_space@@Base+0x70>
   26354:	mov	r0, r6
   26356:	bl	13586 <rb_prev@@Base>
   2635a:	mov	r5, r0
   2635c:	ldr	r3, [r6, #32]
   2635e:	cbnz	r3, 26396 <btrfs_add_free_space@@Base+0x84>
   26360:	mov	r1, r6
   26362:	mov	r0, r7
   26364:	bl	261f4 <unlink_free_space@@Base>
   26368:	ldrd	r1, r0, [r6, #24]
   2636c:	ldrd	r3, r2, [r4, #24]
   26370:	adds	r3, r3, r1
   26372:	adc.w	r2, r0, r2
   26376:	mov	r0, r6
   26378:	strd	r3, r2, [r4, #24]
   2637c:	blx	8434 <free@plt+0x4>
   26380:	b.n	26396 <btrfs_add_free_space@@Base+0x84>
   26382:	adds.w	r2, r8, #4294967295	; 0xffffffff
   26386:	mov	r0, r7
   26388:	adc.w	r3, r9, #4294967295	; 0xffffffff
   2638c:	bl	25fd4 <btrfs_print_tree@@Base+0x4e0>
   26390:	mov	r5, r0
   26392:	cmp	r6, #0
   26394:	bne.n	2635c <btrfs_add_free_space@@Base+0x4a>
   26396:	cbz	r5, 263dc <btrfs_add_free_space@@Base+0xca>
   26398:	ldr	r3, [r5, #32]
   2639a:	cbnz	r3, 263dc <btrfs_add_free_space@@Base+0xca>
   2639c:	ldrd	r3, r0, [r5, #16]
   263a0:	ldrd	r2, r1, [r5, #24]
   263a4:	adds.w	sl, r3, r2
   263a8:	adc.w	fp, r0, r1
   263ac:	cmp	r9, fp
   263ae:	it	eq
   263b0:	cmpeq	r8, sl
   263b2:	bne.n	263dc <btrfs_add_free_space@@Base+0xca>
   263b4:	mov	r1, r5
   263b6:	mov	r0, r7
   263b8:	bl	261f4 <unlink_free_space@@Base>
   263bc:	ldrd	r2, r3, [r5, #16]
   263c0:	strd	r2, r3, [r4, #16]
   263c4:	ldrd	r3, r2, [r4, #24]
   263c8:	ldrd	r0, r1, [r5, #24]
   263cc:	adds	r3, r3, r0
   263ce:	mov	r0, r5
   263d0:	adc.w	r2, r1, r2
   263d4:	strd	r3, r2, [r4, #24]
   263d8:	blx	8434 <free@plt+0x4>
   263dc:	mov	r1, r4
   263de:	mov	r0, r7
   263e0:	bl	260ec <btrfs_print_tree@@Base+0x5f8>
   263e4:	mov	r4, r0
   263e6:	cbz	r0, 263fc <btrfs_add_free_space@@Base+0xea>
   263e8:	ldr	r3, [pc, #36]	; (26410 <btrfs_add_free_space@@Base+0xfe>)
   263ea:	movs	r1, #1
   263ec:	ldr	r2, [sp, #4]
   263ee:	ldr	r0, [r2, r3]
   263f0:	mov	r3, r4
   263f2:	ldr	r2, [pc, #32]	; (26414 <btrfs_add_free_space@@Base+0x102>)
   263f4:	ldr	r0, [r0, #0]
   263f6:	add	r2, pc
   263f8:	blx	8860 <__fprintf_chk@plt+0x4>
   263fc:	mov	r0, r4
   263fe:	add	sp, #12
   26400:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26404:	mvn.w	r4, #11
   26408:	b.n	263fc <btrfs_add_free_space@@Base+0xea>
   2640a:	nop
   2640c:	bge.n	264d8 <load_free_space_cache@@Base+0xc0>
   2640e:	movs	r3, r0
   26410:	lsls	r0, r6, #8
   26412:	movs	r0, r0
   26414:	strh	r3, [r0, #62]	; 0x3e
   26416:	movs	r1, r0

00026418 <load_free_space_cache@@Base>:
   26418:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2641c:	mov	r6, r0
   2641e:	vpush	{d8}
   26422:	ldr.w	r2, [pc, #2148]	; 26c88 <load_free_space_cache@@Base+0x870>
   26426:	ldr.w	r3, [pc, #2148]	; 26c8c <load_free_space_cache@@Base+0x874>
   2642a:	add	r2, pc
   2642c:	ldr.w	fp, [pc, #2144]	; 26c90 <load_free_space_cache@@Base+0x878>
   26430:	sub	sp, #244	; 0xf4
   26432:	ldr	r5, [r1, #64]	; 0x40
   26434:	add	fp, pc
   26436:	str	r1, [sp, #72]	; 0x48
   26438:	ldr	r3, [r2, r3]
   2643a:	ldr	r3, [r3, #0]
   2643c:	str	r3, [sp, #236]	; 0xec
   2643e:	mov.w	r3, #0
   26442:	ldr	r3, [r1, #72]	; 0x48
   26444:	str	r3, [sp, #88]	; 0x58
   26446:	ldr	r3, [r1, #76]	; 0x4c
   26448:	str	r3, [sp, #92]	; 0x5c
   2644a:	bl	17544 <btrfs_alloc_path@@Base>
   2644e:	mov	r4, r0
   26450:	cmp	r0, #0
   26452:	beq.w	26c76 <load_free_space_cache@@Base+0x85e>
   26456:	ldr	r3, [sp, #72]	; 0x48
   26458:	movs	r7, #0
   2645a:	ldr.w	r9, [r6, #28]
   2645e:	add	r1, sp, #96	; 0x60
   26460:	mvn.w	r0, #10
   26464:	strd	r1, r1, [sp, #96]	; 0x60
   26468:	ldrd	r2, r3, [r3, #40]	; 0x28
   2646c:	mov.w	r1, #4294967295	; 0xffffffff
   26470:	strd	r7, r7, [sp]
   26474:	strd	r0, r1, [sp, #104]	; 0x68
   26478:	mov	r1, r9
   2647a:	str.w	r2, [sp, #113]	; 0x71
   2647e:	mov	r0, r7
   26480:	str.w	r3, [sp, #117]	; 0x75
   26484:	add	r2, sp, #104	; 0x68
   26486:	mov	r3, r4
   26488:	strb.w	r7, [sp, #112]	; 0x70
   2648c:	bl	19930 <btrfs_search_slot@@Base>
   26490:	subs	r6, r0, #0
   26492:	blt.n	2649c <load_free_space_cache@@Base+0x84>
   26494:	beq.n	264a2 <load_free_space_cache@@Base+0x8a>
   26496:	mov	r0, r4
   26498:	bl	1754c <btrfs_release_path@@Base>
   2649c:	mov.w	r8, #0
   264a0:	b.n	26566 <load_free_space_cache@@Base+0x14e>
   264a2:	ldr.w	ip, [r4]
   264a6:	movs	r7, #25
   264a8:	ldr	r2, [r4, #32]
   264aa:	add.w	r3, ip, #96	; 0x60
   264ae:	mla	r2, r7, r2, r3
   264b2:	ldr.w	r2, [r2, #118]	; 0x76
   264b6:	adds	r2, #101	; 0x65
   264b8:	add	r3, r2
   264ba:	mov	r1, r3
   264bc:	ldr.w	r0, [r1, #25]!
   264c0:	ldr	r1, [r1, #4]
   264c2:	str	r0, [sp, #24]
   264c4:	str	r1, [sp, #28]
   264c6:	mov	r1, r3
   264c8:	ldr.w	r0, [r1, #33]!
   264cc:	ldr	r1, [r1, #4]
   264ce:	str	r0, [sp, #64]	; 0x40
   264d0:	mov	r0, ip
   264d2:	str	r1, [sp, #76]	; 0x4c
   264d4:	ldr.w	r1, [r3, #17]!
   264d8:	ldr	r3, [r3, #4]
   264da:	str	r1, [sp, #40]	; 0x28
   264dc:	add	r1, sp, #144	; 0x90
   264de:	str	r3, [sp, #44]	; 0x2c
   264e0:	movs	r3, #17
   264e2:	bl	16a0e <read_extent_buffer@@Base>
   264e6:	ldr.w	r3, [sp, #157]	; 0x9d
   264ea:	ldr.w	r2, [sp, #153]	; 0x99
   264ee:	mov	r0, r4
   264f0:	str.w	r3, [sp, #137]	; 0x89
   264f4:	ldrb.w	r3, [sp, #152]	; 0x98
   264f8:	str.w	r2, [sp, #133]	; 0x85
   264fc:	strb.w	r3, [sp, #132]	; 0x84
   26500:	ldr	r3, [sp, #144]	; 0x90
   26502:	str	r3, [sp, #124]	; 0x7c
   26504:	ldr	r3, [sp, #148]	; 0x94
   26506:	str	r3, [sp, #128]	; 0x80
   26508:	bl	1754c <btrfs_release_path@@Base>
   2650c:	add	r2, sp, #124	; 0x7c
   2650e:	mov	r3, r4
   26510:	mov	r1, r9
   26512:	mov	r0, r6
   26514:	strd	r6, r6, [sp]
   26518:	bl	19930 <btrfs_search_slot@@Base>
   2651c:	mov	r8, r0
   2651e:	cbz	r0, 2653a <load_free_space_cache@@Base+0x122>
   26520:	ldr.w	r3, [pc, #1904]	; 26c94 <load_free_space_cache@@Base+0x87c>
   26524:	movs	r1, #1
   26526:	ldr.w	r2, [pc, #1904]	; 26c98 <load_free_space_cache@@Base+0x880>
   2652a:	ldr.w	r0, [fp, r3]
   2652e:	add	r2, pc
   26530:	mov	r3, r8
   26532:	ldr	r0, [r0, #0]
   26534:	blx	8860 <__fprintf_chk@plt+0x4>
   26538:	b.n	2649c <load_free_space_cache@@Base+0x84>
   2653a:	ldr	r3, [r4, #0]
   2653c:	ldr	r2, [r4, #32]
   2653e:	adds	r3, #96	; 0x60
   26540:	mla	r7, r7, r2, r3
   26544:	ldr.w	r2, [r7, #118]	; 0x76
   26548:	adds	r2, #101	; 0x65
   2654a:	add	r3, r2
   2654c:	ldr	r6, [r3, #16]
   2654e:	ldr	r7, [r3, #20]
   26550:	orrs.w	r2, r6, r7
   26554:	beq.n	26560 <load_free_space_cache@@Base+0x148>
   26556:	ldr	r0, [r3, #0]
   26558:	ldr	r1, [r3, #4]
   2655a:	orrs.w	r3, r0, r1
   2655e:	bne.n	2662a <load_free_space_cache@@Base+0x212>
   26560:	mov	r0, r4
   26562:	bl	1754c <btrfs_release_path@@Base>
   26566:	mov	r0, r4
   26568:	bl	17572 <btrfs_free_path@@Base>
   2656c:	ldr	r3, [sp, #72]	; 0x48
   2656e:	ldrd	r4, r6, [r5, #8]
   26572:	ldr.w	r2, [r3, #49]	; 0x31
   26576:	ldr.w	r0, [r3, #53]	; 0x35
   2657a:	ldrd	r1, r7, [r3, #80]	; 0x50
   2657e:	ldr	r3, [sp, #88]	; 0x58
   26580:	adds	r1, r3, r1
   26582:	ldr	r3, [sp, #92]	; 0x5c
   26584:	adc.w	r7, r3, r7
   26588:	adds	r3, r4, r1
   2658a:	adc.w	ip, r6, r7
   2658e:	subs	r3, r3, r2
   26590:	str	r3, [sp, #56]	; 0x38
   26592:	sbc.w	r3, ip, r0
   26596:	cmp.w	r8, #1
   2659a:	str	r3, [sp, #60]	; 0x3c
   2659c:	bne.w	26c5e <load_free_space_cache@@Base+0x846>
   265a0:	ldrd	r9, sl, [sp, #56]	; 0x38
   265a4:	orrs.w	r3, r9, sl
   265a8:	beq.n	26610 <load_free_space_cache@@Base+0x1f8>
   265aa:	ldr.w	r3, [pc, #1768]	; 26c94 <load_free_space_cache@@Base+0x87c>
   265ae:	subs	r2, r2, r1
   265b0:	sbc.w	r0, r0, r7
   265b4:	ldr.w	r3, [fp, r3]
   265b8:	strd	r2, r0, [sp, #16]
   265bc:	ldr	r2, [sp, #72]	; 0x48
   265be:	strd	r4, r6, [sp, #8]
   265c2:	ldrd	r0, r1, [r2, #40]	; 0x28
   265c6:	ldr.w	r2, [pc, #1748]	; 26c9c <load_free_space_cache@@Base+0x884>
   265ca:	strd	r0, r1, [sp]
   265ce:	add	r2, pc
   265d0:	ldr	r0, [r3, #0]
   265d2:	mov	r1, r8
   265d4:	blx	8860 <__fprintf_chk@plt+0x4>
   265d8:	mov	r0, r5
   265da:	bl	262e6 <__btrfs_remove_free_space_cache@@Base>
   265de:	ldrd	r3, r4, [sp, #56]	; 0x38
   265e2:	cmp	r3, #1
   265e4:	sbcs.w	r3, r4, #0
   265e8:	bge.w	26c50 <load_free_space_cache@@Base+0x838>
   265ec:	mov.w	r8, #0
   265f0:	ldr	r2, [sp, #72]	; 0x48
   265f2:	ldr.w	r3, [pc, #1696]	; 26c94 <load_free_space_cache@@Base+0x87c>
   265f6:	ldrd	r0, r1, [r2, #40]	; 0x28
   265fa:	ldr.w	r3, [fp, r3]
   265fe:	ldr.w	r2, [pc, #1696]	; 26ca0 <load_free_space_cache@@Base+0x888>
   26602:	strd	r0, r1, [sp]
   26606:	movs	r1, #1
   26608:	ldr	r0, [r3, #0]
   2660a:	add	r2, pc
   2660c:	blx	8860 <__fprintf_chk@plt+0x4>
   26610:	ldr.w	r2, [pc, #1680]	; 26ca4 <load_free_space_cache@@Base+0x88c>
   26614:	ldr.w	r3, [pc, #1652]	; 26c8c <load_free_space_cache@@Base+0x874>
   26618:	add	r2, pc
   2661a:	ldr	r3, [r2, r3]
   2661c:	ldr	r2, [r3, #0]
   2661e:	ldr	r3, [sp, #236]	; 0xec
   26620:	eors	r2, r3
   26622:	beq.w	26c7a <load_free_space_cache@@Base+0x862>
   26626:	blx	8510 <__stack_chk_fail@plt>
   2662a:	ldrd	r2, r3, [sp, #40]	; 0x28
   2662e:	cmp	r3, r1
   26630:	it	eq
   26632:	cmpeq	r2, r0
   26634:	beq.n	2665a <load_free_space_cache@@Base+0x242>
   26636:	ldr.w	r3, [pc, #1628]	; 26c94 <load_free_space_cache@@Base+0x87c>
   2663a:	ldrd	r6, r7, [sp, #40]	; 0x28
   2663e:	ldr.w	r2, [pc, #1640]	; 26ca8 <load_free_space_cache@@Base+0x890>
   26642:	ldr.w	r3, [fp, r3]
   26646:	add	r2, pc
   26648:	strd	r0, r1, [sp]
   2664c:	strd	r6, r7, [sp, #8]
   26650:	movs	r1, #1
   26652:	ldr	r0, [r3, #0]
   26654:	blx	8860 <__fprintf_chk@plt+0x4>
   26658:	b.n	26560 <load_free_space_cache@@Base+0x148>
   2665a:	mov	r0, r4
   2665c:	bl	1754c <btrfs_release_path@@Base>
   26660:	ldrd	r2, r3, [sp, #24]
   26664:	orrs	r3, r2
   26666:	beq.w	2649c <load_free_space_cache@@Base+0x84>
   2666a:	ldr	r3, [sp, #124]	; 0x7c
   2666c:	movs	r2, #48	; 0x30
   2666e:	mov	r1, r8
   26670:	add	r0, sp, #184	; 0xb8
   26672:	str	r3, [sp, #32]
   26674:	ldr	r3, [sp, #128]	; 0x80
   26676:	str	r3, [sp, #36]	; 0x24
   26678:	blx	87c4 <memset@plt+0x4>
   2667c:	ldr.w	r3, [r9, #464]	; 0x1d0
   26680:	ldr.w	r2, [r3, #388]	; 0x184
   26684:	movs	r3, #0
   26686:	adds.w	r0, r2, #4294967295	; 0xffffffff
   2668a:	adc.w	r1, r3, #4294967295	; 0xffffffff
   2668e:	adds	r0, r0, r6
   26690:	adc.w	r1, r7, r1
   26694:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   26698:	mov	r1, r6
   2669a:	str	r0, [sp, #220]	; 0xdc
   2669c:	movs	r0, #1
   2669e:	blx	839c <calloc@plt+0x4>
   266a2:	str	r0, [sp, #192]	; 0xc0
   266a4:	cmp	r0, #0
   266a6:	beq.w	26c4a <load_free_space_cache@@Base+0x832>
   266aa:	ldrd	r0, r1, [sp, #32]
   266ae:	mov.w	r3, #4294967295	; 0xffffffff
   266b2:	mvn.w	r2, #11
   266b6:	strd	r6, r7, [sp, #208]	; 0xd0
   266ba:	cmp	r1, r3
   266bc:	add	r7, sp, #164	; 0xa4
   266be:	it	eq
   266c0:	cmpeq	r0, r2
   266c2:	mov	r1, r9
   266c4:	mov.w	r0, #0
   266c8:	mov	r2, r7
   266ca:	it	ne
   266cc:	ldrbne.w	r3, [sp, #224]	; 0xe0
   266d0:	strd	r0, r0, [sp]
   266d4:	it	ne
   266d6:	orrne.w	r3, r3, #1
   266da:	str.w	r9, [sp, #196]	; 0xc4
   266de:	it	ne
   266e0:	strbne.w	r3, [sp, #224]	; 0xe0
   266e4:	ldr	r3, [sp, #32]
   266e6:	strb.w	r0, [sp, #173]	; 0xad
   266ea:	strb.w	r0, [sp, #174]	; 0xae
   266ee:	str	r3, [sp, #164]	; 0xa4
   266f0:	ldr	r3, [sp, #36]	; 0x24
   266f2:	strb.w	r0, [sp, #175]	; 0xaf
   266f6:	strb.w	r0, [sp, #176]	; 0xb0
   266fa:	str	r3, [sp, #168]	; 0xa8
   266fc:	movs	r3, #108	; 0x6c
   266fe:	strb.w	r3, [sp, #172]	; 0xac
   26702:	mov	r3, r4
   26704:	strb.w	r0, [sp, #177]	; 0xb1
   26708:	strb.w	r0, [sp, #178]	; 0xb2
   2670c:	strb.w	r0, [sp, #179]	; 0xb3
   26710:	strb.w	r0, [sp, #180]	; 0xb4
   26714:	bl	19930 <btrfs_search_slot@@Base>
   26718:	cmp	r0, #0
   2671a:	beq.w	268be <load_free_space_cache@@Base+0x4a6>
   2671e:	ldr.w	r3, [pc, #1396]	; 26c94 <load_free_space_cache@@Base+0x87c>
   26722:	mvn.w	r8, #21
   26726:	ldrd	r1, r2, [sp, #32]
   2672a:	ldr.w	r3, [fp, r3]
   2672e:	strd	r1, r2, [sp]
   26732:	movs	r1, #1
   26734:	ldr.w	r2, [pc, #1396]	; 26cac <load_free_space_cache@@Base+0x894>
   26738:	ldr	r0, [r3, #0]
   2673a:	add	r2, pc
   2673c:	blx	8860 <__fprintf_chk@plt+0x4>
   26740:	mov	r0, r4
   26742:	bl	1754c <btrfs_release_path@@Base>
   26746:	ldr	r0, [sp, #192]	; 0xc0
   26748:	blx	8434 <free@plt+0x4>
   2674c:	b.n	26566 <load_free_space_cache@@Base+0x14e>
   2674e:	ldr	r3, [r4, #0]
   26750:	ldr	r2, [r4, #32]
   26752:	ldr.w	r3, [r3, #192]	; 0xc0
   26756:	cmp	r2, r3
   26758:	bcs.n	267fe <load_free_space_cache@@Base+0x3e6>
   2675a:	ldr	r7, [r4, #0]
   2675c:	vmov	r1, s16
   26760:	ldr	r2, [r4, #32]
   26762:	mov	r0, r7
   26764:	bl	2618c <btrfs_print_tree@@Base+0x698>
   26768:	ldrd	r2, r3, [sp, #164]	; 0xa4
   2676c:	ldrd	r0, r1, [sp, #32]
   26770:	cmp	r1, r3
   26772:	it	eq
   26774:	cmpeq	r0, r2
   26776:	beq.n	26812 <load_free_space_cache@@Base+0x3fa>
   26778:	mvn.w	r8, #21
   2677c:	mov	r0, r4
   2677e:	bl	1754c <btrfs_release_path@@Base>
   26782:	cmp.w	r8, #0
   26786:	bne.n	26746 <load_free_space_cache@@Base+0x32e>
   26788:	mov	r1, r8
   2678a:	add	r0, sp, #184	; 0xb8
   2678c:	bl	25f24 <btrfs_print_tree@@Base+0x430>
   26790:	mov	r8, r0
   26792:	cbnz	r0, 267f0 <load_free_space_cache@@Base+0x3d8>
   26794:	ldrb.w	r2, [sp, #224]	; 0xe0
   26798:	ldr	r3, [sp, #184]	; 0xb8
   2679a:	lsls	r2, r2, #31
   2679c:	ldr	r1, [sp, #200]	; 0xc8
   2679e:	bpl.w	268ce <load_free_space_cache@@Base+0x4b6>
   267a2:	ldr	r0, [sp, #220]	; 0xdc
   267a4:	lsls	r2, r0, #2
   267a6:	add.w	r3, r3, r0, lsl #2
   267aa:	str	r3, [sp, #184]	; 0xb8
   267ac:	add.w	r3, r2, #8
   267b0:	subs	r3, r1, r3
   267b2:	str	r3, [sp, #200]	; 0xc8
   267b4:	ldr	r3, [sp, #184]	; 0xb8
   267b6:	ldrd	r6, r7, [sp, #40]	; 0x28
   267ba:	ldrd	r0, r1, [r3]
   267be:	cmp	r7, r1
   267c0:	it	eq
   267c2:	cmpeq	r6, r0
   267c4:	beq.w	268d8 <load_free_space_cache@@Base+0x4c0>
   267c8:	ldr.w	r3, [pc, #1224]	; 26c94 <load_free_space_cache@@Base+0x87c>
   267cc:	mvn.w	r8, #4
   267d0:	ldr.w	r2, [pc, #1244]	; 26cb0 <load_free_space_cache@@Base+0x898>
   267d4:	ldr.w	r3, [fp, r3]
   267d8:	add	r2, pc
   267da:	strd	r0, r1, [sp]
   267de:	movs	r1, #1
   267e0:	strd	r6, r7, [sp, #8]
   267e4:	ldr	r0, [r3, #0]
   267e6:	blx	8860 <__fprintf_chk@plt+0x4>
   267ea:	add	r0, sp, #184	; 0xb8
   267ec:	bl	25de0 <btrfs_print_tree@@Base+0x2ec>
   267f0:	add	r0, sp, #184	; 0xb8
   267f2:	bl	25de0 <btrfs_print_tree@@Base+0x2ec>
   267f6:	mov	r0, r5
   267f8:	bl	262e6 <__btrfs_remove_free_space_cache@@Base>
   267fc:	b.n	26746 <load_free_space_cache@@Base+0x32e>
   267fe:	strb.w	r6, [r4, #65]	; 0x41
   26802:	mov	r1, r4
   26804:	ldr.w	r0, [r9, #464]	; 0x1d0
   26808:	bl	1ad64 <btrfs_next_sibling_tree_block@@Base>
   2680c:	cmp	r0, #0
   2680e:	beq.n	2675a <load_free_space_cache@@Base+0x342>
   26810:	b.n	26778 <load_free_space_cache@@Base+0x360>
   26812:	ldrb.w	r3, [sp, #172]	; 0xac
   26816:	cmp	r3, #108	; 0x6c
   26818:	bne.n	26778 <load_free_space_cache@@Base+0x360>
   2681a:	ldr	r3, [r4, #0]
   2681c:	movs	r1, #25
   2681e:	ldr	r2, [r4, #32]
   26820:	adds	r3, #96	; 0x60
   26822:	mla	r2, r1, r2, r3
   26826:	ldr.w	r0, [r2, #118]	; 0x76
   2682a:	add.w	r2, r0, #101	; 0x65
   2682e:	add	r3, r2
   26830:	ldrb	r3, [r3, #20]
   26832:	cmp	r3, #1
   26834:	beq.n	2684c <load_free_space_cache@@Base+0x434>
   26836:	ldr.w	r3, [pc, #1116]	; 26c94 <load_free_space_cache@@Base+0x87c>
   2683a:	ldr.w	r0, [pc, #1144]	; 26cb4 <load_free_space_cache@@Base+0x89c>
   2683e:	ldr.w	r3, [fp, r3]
   26842:	add	r0, pc
   26844:	ldr	r1, [r3, #0]
   26846:	blx	8968 <fputs@plt+0x4>
   2684a:	b.n	26778 <load_free_space_cache@@Base+0x360>
   2684c:	add.w	r0, r7, #96	; 0x60
   26850:	ldr.w	r1, [sp, #173]	; 0xad
   26854:	add	r0, r2
   26856:	mov	r3, r0
   26858:	ldr.w	r7, [r3, #45]!
   2685c:	ldr.w	sl, [r3, #4]
   26860:	mov	r3, r0
   26862:	ldr.w	r2, [r3, #21]!
   26866:	ldr.w	lr, [r0, #37]!
   2686a:	ldr.w	ip, [r3, #4]
   2686e:	adds.w	r2, r2, lr
   26872:	ldr	r3, [r0, #4]
   26874:	ldr	r0, [sp, #192]	; 0xc0
   26876:	str	r6, [sp, #8]
   26878:	adc.w	r3, ip, r3
   2687c:	add	r1, r0
   2687e:	strd	r7, sl, [sp]
   26882:	ldr.w	r0, [r9, #464]	; 0x1d0
   26886:	bl	1659e <read_data_from_disk@@Base>
   2688a:	mov	r8, r0
   2688c:	cmp	r0, #0
   2688e:	bne.w	2677c <load_free_space_cache@@Base+0x364>
   26892:	ldr	r3, [sp, #48]	; 0x30
   26894:	adds	r3, r3, r7
   26896:	str	r3, [sp, #48]	; 0x30
   26898:	ldr	r3, [sp, #52]	; 0x34
   2689a:	adc.w	r3, r3, sl
   2689e:	str	r3, [sp, #52]	; 0x34
   268a0:	ldr	r3, [r4, #32]
   268a2:	adds	r3, #1
   268a4:	str	r3, [r4, #32]
   268a6:	ldrd	r2, r3, [sp, #208]	; 0xd0
   268aa:	ldrd	r0, r1, [sp, #48]	; 0x30
   268ae:	cmp	r1, r3
   268b0:	it	eq
   268b2:	cmpeq	r0, r2
   268b4:	bcc.w	2674e <load_free_space_cache@@Base+0x336>
   268b8:	mov.w	r8, #0
   268bc:	b.n	2677c <load_free_space_cache@@Base+0x364>
   268be:	movs	r2, #0
   268c0:	movs	r3, #0
   268c2:	vmov	s16, r7
   268c6:	mov	r6, r0
   268c8:	strd	r2, r3, [sp, #48]	; 0x30
   268cc:	b.n	268a6 <load_free_space_cache@@Base+0x48e>
   268ce:	adds	r3, #8
   268d0:	subs	r1, #16
   268d2:	str	r3, [sp, #184]	; 0xb8
   268d4:	str	r1, [sp, #200]	; 0xc8
   268d6:	b.n	267b4 <load_free_space_cache@@Base+0x39c>
   268d8:	ldr	r7, [pc, #988]	; (26cb8 <load_free_space_cache@@Base+0x8a0>)
   268da:	adds	r3, #8
   268dc:	ldr.w	r9, [pc, #988]	; 26cbc <load_free_space_cache@@Base+0x8a4>
   268e0:	add	r7, pc
   268e2:	str	r3, [sp, #184]	; 0xb8
   268e4:	adds	r7, #51	; 0x33
   268e6:	add	r9, pc
   268e8:	movs	r1, #48	; 0x30
   268ea:	movs	r0, #1
   268ec:	blx	839c <calloc@plt+0x4>
   268f0:	mov	r6, r0
   268f2:	cmp	r0, #0
   268f4:	beq.w	267f0 <load_free_space_cache@@Base+0x3d8>
   268f8:	ldr	r3, [sp, #184]	; 0xb8
   268fa:	cbz	r3, 2693e <load_free_space_cache@@Base+0x526>
   268fc:	ldr	r3, [sp, #184]	; 0xb8
   268fe:	adds	r3, #17
   26900:	ldr.w	r1, [r3, #-17]
   26904:	ldr.w	r2, [r3, #-13]
   26908:	strd	r1, r2, [r6, #16]
   2690c:	ldr.w	r1, [r3, #-9]
   26910:	ldr.w	r2, [r3, #-5]
   26914:	strd	r1, r2, [r6, #24]
   26918:	ldrb.w	r1, [r3, #-1]
   2691c:	str	r3, [sp, #184]	; 0xb8
   2691e:	ldr	r3, [sp, #200]	; 0xc8
   26920:	subs	r3, #17
   26922:	str	r3, [sp, #200]	; 0xc8
   26924:	cmp	r3, #16
   26926:	bhi.n	2692e <load_free_space_cache@@Base+0x516>
   26928:	add	r0, sp, #184	; 0xb8
   2692a:	bl	25de0 <btrfs_print_tree@@Base+0x2ec>
   2692e:	ldrd	r2, r3, [r6, #24]
   26932:	orrs	r3, r2
   26934:	bne.n	26956 <load_free_space_cache@@Base+0x53e>
   26936:	mov	r0, r6
   26938:	blx	8434 <free@plt+0x4>
   2693c:	b.n	267f0 <load_free_space_cache@@Base+0x3d8>
   2693e:	ldr	r1, [sp, #216]	; 0xd8
   26940:	add	r0, sp, #184	; 0xb8
   26942:	bl	25f24 <btrfs_print_tree@@Base+0x430>
   26946:	mov	sl, r0
   26948:	cmp	r0, #0
   2694a:	beq.n	268fc <load_free_space_cache@@Base+0x4e4>
   2694c:	mov	r0, r6
   2694e:	mov	r8, sl
   26950:	blx	8434 <free@plt+0x4>
   26954:	b.n	267f0 <load_free_space_cache@@Base+0x3d8>
   26956:	cmp	r1, #1
   26958:	bne.n	2697a <load_free_space_cache@@Base+0x562>
   2695a:	mov	r1, r6
   2695c:	mov	r0, r5
   2695e:	bl	260ec <btrfs_print_tree@@Base+0x5f8>
   26962:	mov	sl, r0
   26964:	cmp	r0, #0
   26966:	beq.n	269ea <load_free_space_cache@@Base+0x5d2>
   26968:	ldr	r3, [pc, #808]	; (26c94 <load_free_space_cache@@Base+0x87c>)
   2696a:	ldr	r0, [pc, #852]	; (26cc0 <load_free_space_cache@@Base+0x8a8>)
   2696c:	ldr.w	r3, [fp, r3]
   26970:	add	r0, pc
   26972:	ldr	r1, [r3, #0]
   26974:	blx	8968 <fputs@plt+0x4>
   26978:	b.n	2694c <load_free_space_cache@@Base+0x534>
   2697a:	ldr	r3, [sp, #64]	; 0x40
   2697c:	mov	r1, r7
   2697e:	ldr	r2, [sp, #76]	; 0x4c
   26980:	mov	r0, r9
   26982:	orrs	r3, r2
   26984:	movw	r2, #387	; 0x183
   26988:	ite	eq
   2698a:	moveq	r3, #1
   2698c:	movne	r3, #0
   2698e:	bl	25e50 <btrfs_print_tree@@Base+0x35c>
   26992:	ldr	r3, [sp, #64]	; 0x40
   26994:	ldr	r1, [r5, #44]	; 0x2c
   26996:	movs	r0, #1
   26998:	adds.w	r3, r3, #4294967295	; 0xffffffff
   2699c:	str	r3, [sp, #64]	; 0x40
   2699e:	ldr	r3, [sp, #76]	; 0x4c
   269a0:	adc.w	r3, r3, #4294967295	; 0xffffffff
   269a4:	str	r3, [sp, #76]	; 0x4c
   269a6:	blx	839c <calloc@plt+0x4>
   269aa:	str	r0, [r6, #32]
   269ac:	cmp	r0, #0
   269ae:	beq.n	26936 <load_free_space_cache@@Base+0x51e>
   269b0:	mov	r1, r6
   269b2:	mov	r0, r5
   269b4:	bl	260ec <btrfs_print_tree@@Base+0x5f8>
   269b8:	ldr	r3, [r5, #24]
   269ba:	adds	r3, #1
   269bc:	str	r3, [r5, #24]
   269be:	mov	sl, r0
   269c0:	cbz	r0, 269da <load_free_space_cache@@Base+0x5c2>
   269c2:	ldr	r3, [pc, #720]	; (26c94 <load_free_space_cache@@Base+0x87c>)
   269c4:	ldr	r0, [pc, #764]	; (26cc4 <load_free_space_cache@@Base+0x8ac>)
   269c6:	ldr.w	r3, [fp, r3]
   269ca:	add	r0, pc
   269cc:	ldr	r1, [r3, #0]
   269ce:	blx	8968 <fputs@plt+0x4>
   269d2:	ldr	r0, [r6, #32]
   269d4:	blx	8434 <free@plt+0x4>
   269d8:	b.n	2694c <load_free_space_cache@@Base+0x534>
   269da:	ldr	r3, [sp, #100]	; 0x64
   269dc:	add.w	r2, r6, #36	; 0x24
   269e0:	add	r1, sp, #96	; 0x60
   269e2:	str	r2, [sp, #100]	; 0x64
   269e4:	strd	r1, r3, [r6, #36]	; 0x24
   269e8:	str	r2, [r3, #0]
   269ea:	ldr	r3, [sp, #24]
   269ec:	adds.w	r3, r3, #4294967295	; 0xffffffff
   269f0:	str	r3, [sp, #24]
   269f2:	ldr	r3, [sp, #28]
   269f4:	adc.w	r3, r3, #4294967295	; 0xffffffff
   269f8:	str	r3, [sp, #28]
   269fa:	ldrd	r2, r3, [sp, #24]
   269fe:	orrs	r3, r2
   26a00:	bne.w	268e8 <load_free_space_cache@@Base+0x4d0>
   26a04:	add.w	sl, sp, #184	; 0xb8
   26a08:	add.w	r9, sp, #96	; 0x60
   26a0c:	mov	r0, sl
   26a0e:	bl	25de0 <btrfs_print_tree@@Base+0x2ec>
   26a12:	ldr	r6, [sp, #96]	; 0x60
   26a14:	ldr.w	r7, [r6], #-36
   26a18:	subs	r7, #36	; 0x24
   26a1a:	add.w	r3, r6, #36	; 0x24
   26a1e:	cmp	r3, r9
   26a20:	bne.n	26a54 <load_free_space_cache@@Base+0x63c>
   26a22:	mov	r0, sl
   26a24:	bl	25de0 <btrfs_print_tree@@Base+0x2ec>
   26a28:	ldr	r3, [r5, #44]	; 0x2c
   26a2a:	str	r3, [sp, #48]	; 0x30
   26a2c:	ldr	r3, [pc, #664]	; (26cc8 <load_free_space_cache@@Base+0x8b0>)
   26a2e:	add	r3, pc
   26a30:	adds	r3, #75	; 0x4b
   26a32:	vmov	s16, r3
   26a36:	ldr	r3, [pc, #660]	; (26ccc <load_free_space_cache@@Base+0x8b4>)
   26a38:	add	r3, pc
   26a3a:	vmov	s17, r3
   26a3e:	mov	r0, r5
   26a40:	movs	r6, #0
   26a42:	bl	1353a <rb_first@@Base>
   26a46:	mov	sl, r0
   26a48:	cmp.w	sl, #0
   26a4c:	bne.n	26a92 <load_free_space_cache@@Base+0x67a>
   26a4e:	mov.w	r8, #1
   26a52:	b.n	26746 <load_free_space_cache@@Base+0x32e>
   26a54:	ldrd	r1, r2, [r6, #36]	; 0x24
   26a58:	mov	r0, sl
   26a5a:	str	r2, [r1, #4]
   26a5c:	str	r1, [r2, #0]
   26a5e:	ldr	r1, [sp, #216]	; 0xd8
   26a60:	strd	r3, r3, [r6, #36]	; 0x24
   26a64:	bl	25f24 <btrfs_print_tree@@Base+0x430>
   26a68:	mov	r8, r0
   26a6a:	cmp	r0, #0
   26a6c:	bne.w	267f0 <load_free_space_cache@@Base+0x3d8>
   26a70:	ldr	r3, [sp, #196]	; 0xc4
   26a72:	ldr	r1, [sp, #184]	; 0xb8
   26a74:	ldr	r0, [r6, #32]
   26a76:	mov	r6, r7
   26a78:	ldr.w	r3, [r3, #464]	; 0x1d0
   26a7c:	ldr.w	r2, [r3, #388]	; 0x184
   26a80:	blx	8480 <memcpy@plt+0x4>
   26a84:	mov	r0, sl
   26a86:	bl	25de0 <btrfs_print_tree@@Base+0x2ec>
   26a8a:	ldr	r3, [r7, #36]	; 0x24
   26a8c:	sub.w	r7, r3, #36	; 0x24
   26a90:	b.n	26a1a <load_free_space_cache@@Base+0x602>
   26a92:	ldr.w	r3, [sl, #32]
   26a96:	cmp	r3, #0
   26a98:	beq.w	26be8 <load_free_space_cache@@Base+0x7d0>
   26a9c:	ldrd	r2, r3, [sl, #16]
   26aa0:	mov	r0, r5
   26aa2:	strd	r2, r3, [sp, #24]
   26aa6:	ldr	r3, [r5, #28]
   26aa8:	asrs	r2, r3, #31
   26aaa:	mov	r1, r3
   26aac:	strd	r1, r2, [sp, #40]	; 0x28
   26ab0:	ldr	r2, [sp, #48]	; 0x30
   26ab2:	muls	r3, r2
   26ab4:	ldrd	r1, r2, [sp, #24]
   26ab8:	lsls	r3, r3, #3
   26aba:	adds	r1, r1, r3
   26abc:	adc.w	r2, r2, #0
   26ac0:	strd	r1, r2, [sp, #64]	; 0x40
   26ac4:	mov	r1, sl
   26ac6:	bl	261f4 <unlink_free_space@@Base>
   26aca:	ldrd	r2, r3, [sl, #16]
   26ace:	ldrd	r0, r1, [sp, #24]
   26ad2:	ldr	r6, [r5, #28]
   26ad4:	cmp	r3, r1
   26ad6:	strd	r2, r3, [sp, #32]
   26ada:	it	eq
   26adc:	cmpeq	r2, r0
   26ade:	mov	r8, r2
   26ae0:	mov	r9, r3
   26ae2:	ldrd	r2, r3, [sp, #32]
   26ae6:	itt	cc
   26ae8:	movcc	r8, r0
   26aea:	movcc	r9, r1
   26aec:	cmp	r9, r3
   26aee:	vmov	r1, s16
   26af2:	it	eq
   26af4:	cmpeq	r8, r2
   26af6:	vmov	r0, s17
   26afa:	movw	r2, #491	; 0x1eb
   26afe:	ite	cc
   26b00:	movcc	r3, #1
   26b02:	movcs	r3, #0
   26b04:	bl	25e50 <btrfs_print_tree@@Base+0x35c>
   26b08:	ldr	r1, [sp, #32]
   26b0a:	mov	r2, r6
   26b0c:	movs	r3, #0
   26b0e:	subs.w	r0, r8, r1
   26b12:	ldr	r1, [sp, #36]	; 0x24
   26b14:	sbc.w	r1, r9, r1
   26b18:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   26b1c:	movs	r3, #0
   26b1e:	mov	r2, r6
   26b20:	mov	r7, r0
   26b22:	ldrd	r0, r1, [sp, #40]	; 0x28
   26b26:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   26b2a:	ldr	r3, [r5, #44]	; 0x2c
   26b2c:	ldr.w	r9, [sl, #32]
   26b30:	cmp.w	r7, r3, lsl #3
   26b34:	mov.w	r8, r3, lsl #3
   26b38:	str	r0, [sp, #40]	; 0x28
   26b3a:	bcs.n	26b7e <load_free_space_cache@@Base+0x766>
   26b3c:	movs	r3, #0
   26b3e:	mov	r2, r7
   26b40:	mov	r1, r8
   26b42:	mov	r0, r9
   26b44:	bl	25dec <btrfs_print_tree@@Base+0x2f8>
   26b48:	mov	r7, r0
   26b4a:	cmp	r8, r7
   26b4c:	bhi.n	26b5e <load_free_space_cache@@Base+0x746>
   26b4e:	ldr.w	r0, [sl, #32]
   26b52:	blx	8434 <free@plt+0x4>
   26b56:	mov	r0, sl
   26b58:	blx	8434 <free@plt+0x4>
   26b5c:	b.n	26a3e <load_free_space_cache@@Base+0x626>
   26b5e:	mov.w	r3, #4294967295	; 0xffffffff
   26b62:	mov	r2, r7
   26b64:	mov	r1, r8
   26b66:	mov	r0, r9
   26b68:	bl	25dec <btrfs_print_tree@@Base+0x2f8>
   26b6c:	ldr	r2, [sp, #40]	; 0x28
   26b6e:	subs	r3, r0, r7
   26b70:	cmp	r2, r3
   26b72:	bls.n	26b82 <load_free_space_cache@@Base+0x76a>
   26b74:	adds	r2, r0, #1
   26b76:	cmp	r8, r2
   26b78:	bls.n	26b7e <load_free_space_cache@@Base+0x766>
   26b7a:	movs	r3, #0
   26b7c:	b.n	26b40 <load_free_space_cache@@Base+0x728>
   26b7e:	mov	r7, r8
   26b80:	b.n	26b4a <load_free_space_cache@@Base+0x732>
   26b82:	cmp	r3, #0
   26b84:	beq.n	26b4e <load_free_space_cache@@Base+0x736>
   26b86:	muls	r7, r6
   26b88:	ldrd	r8, r9, [sp, #32]
   26b8c:	asrs	r1, r6, #31
   26b8e:	mov	r0, r5
   26b90:	adds.w	r8, r8, r7
   26b94:	umull	r6, r7, r3, r6
   26b98:	adc.w	r9, r9, #0
   26b9c:	mov	r2, r8
   26b9e:	mla	r7, r3, r1, r7
   26ba2:	mov	r3, r9
   26ba4:	strd	r6, r7, [sp]
   26ba8:	bl	26312 <btrfs_add_free_space@@Base>
   26bac:	ldr	r1, [pc, #288]	; (26cd0 <load_free_space_cache@@Base+0x8b8>)
   26bae:	movw	r2, #873	; 0x369
   26bb2:	add	r1, pc
   26bb4:	adds	r1, #89	; 0x59
   26bb6:	mov	r3, r0
   26bb8:	ldr	r0, [pc, #280]	; (26cd4 <load_free_space_cache@@Base+0x8bc>)
   26bba:	add	r0, pc
   26bbc:	bl	25e50 <btrfs_print_tree@@Base+0x35c>
   26bc0:	adds.w	r3, r8, r6
   26bc4:	str	r3, [sp, #24]
   26bc6:	adc.w	r3, r9, r7
   26bca:	str	r3, [sp, #28]
   26bcc:	ldrd	r2, r3, [sp, #24]
   26bd0:	ldrd	r0, r1, [sp, #64]	; 0x40
   26bd4:	cmp	r3, r1
   26bd6:	it	eq
   26bd8:	cmpeq	r2, r0
   26bda:	bcs.n	26b4e <load_free_space_cache@@Base+0x736>
   26bdc:	ldr	r3, [r5, #28]
   26bde:	asrs	r2, r3, #31
   26be0:	mov	r1, r3
   26be2:	strd	r1, r2, [sp, #40]	; 0x28
   26be6:	b.n	26aca <load_free_space_cache@@Base+0x6b2>
   26be8:	cbz	r6, 26c3e <load_free_space_cache@@Base+0x826>
   26bea:	ldrd	r2, r1, [r6, #24]
   26bee:	ldrd	r3, r0, [r6, #16]
   26bf2:	adds	r3, r3, r2
   26bf4:	str	r3, [sp, #80]	; 0x50
   26bf6:	adc.w	r3, r0, r1
   26bfa:	str	r3, [sp, #84]	; 0x54
   26bfc:	ldrd	r0, r1, [sp, #80]	; 0x50
   26c00:	ldrd	r2, r3, [sl, #16]
   26c04:	cmp	r1, r3
   26c06:	it	eq
   26c08:	cmpeq	r0, r2
   26c0a:	bne.n	26c3e <load_free_space_cache@@Base+0x826>
   26c0c:	mov	r1, r6
   26c0e:	mov	r0, r5
   26c10:	bl	261f4 <unlink_free_space@@Base>
   26c14:	mov	r1, sl
   26c16:	mov	r0, r5
   26c18:	bl	261f4 <unlink_free_space@@Base>
   26c1c:	ldrd	r1, r0, [sl, #24]
   26c20:	ldrd	r3, r2, [r6, #24]
   26c24:	adds	r3, r3, r1
   26c26:	adc.w	r2, r0, r2
   26c2a:	mov	r0, sl
   26c2c:	strd	r3, r2, [r6, #24]
   26c30:	blx	8434 <free@plt+0x4>
   26c34:	mov	r1, r6
   26c36:	mov	r0, r5
   26c38:	bl	260ec <btrfs_print_tree@@Base+0x5f8>
   26c3c:	b.n	26a3e <load_free_space_cache@@Base+0x626>
   26c3e:	mov	r0, sl
   26c40:	mov	r6, sl
   26c42:	bl	1355a <rb_next@@Base>
   26c46:	mov	sl, r0
   26c48:	b.n	26a48 <load_free_space_cache@@Base+0x630>
   26c4a:	mvn.w	r8, #11
   26c4e:	b.n	26566 <load_free_space_cache@@Base+0x14e>
   26c50:	ldr	r0, [pc, #132]	; (26cd8 <load_free_space_cache@@Base+0x8c0>)
   26c52:	mov.w	r8, #4294967295	; 0xffffffff
   26c56:	add	r0, pc
   26c58:	bl	16b70 <__btrfs_error@@Base>
   26c5c:	b.n	265f0 <load_free_space_cache@@Base+0x1d8>
   26c5e:	cmp.w	r8, #0
   26c62:	bge.w	26610 <load_free_space_cache@@Base+0x1f8>
   26c66:	ldrd	r3, r4, [sp, #56]	; 0x38
   26c6a:	cmp	r3, #1
   26c6c:	sbcs.w	r3, r4, #0
   26c70:	bge.w	265f0 <load_free_space_cache@@Base+0x1d8>
   26c74:	b.n	265ec <load_free_space_cache@@Base+0x1d4>
   26c76:	mov	r8, r0
   26c78:	b.n	26610 <load_free_space_cache@@Base+0x1f8>
   26c7a:	mov	r0, r8
   26c7c:	add	sp, #244	; 0xf4
   26c7e:	vpop	{d8}
   26c82:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26c86:	nop
   26c88:	bls.n	26d40 <btrfs_clear_free_space_cache@@Base+0x64>
   26c8a:	movs	r3, r0
   26c8c:	lsls	r0, r4, #8
   26c8e:	movs	r0, r0
   26c90:	bls.n	26d34 <btrfs_clear_free_space_cache@@Base+0x58>
   26c92:	movs	r3, r0
   26c94:	lsls	r0, r6, #8
   26c96:	movs	r0, r0
   26c98:	strh	r0, [r6, #52]	; 0x34
   26c9a:	movs	r1, r0
   26c9c:	strh	r7, [r5, #58]	; 0x3a
   26c9e:	movs	r1, r0
   26ca0:	ldrh	r0, [r3, #0]
   26ca2:	movs	r1, r0
   26ca4:	bvc.n	26d80 <btrfs_clear_free_space_cache@@Base+0xa4>
   26ca6:	movs	r3, r0
   26ca8:	strh	r3, [r7, #44]	; 0x2c
   26caa:	movs	r1, r0
   26cac:	strh	r4, [r3, #40]	; 0x28
   26cae:	movs	r1, r0
   26cb0:	strh	r3, [r3, #38]	; 0x26
   26cb2:	movs	r1, r0
   26cb4:	strh	r5, [r1, #34]	; 0x22
   26cb6:	movs	r1, r0
   26cb8:	strh	r1, [r4, #56]	; 0x38
   26cba:	movs	r1, r0
   26cbc:	strh	r4, [r6, #32]
   26cbe:	movs	r1, r0
   26cc0:	strh	r3, [r0, #28]
   26cc2:	movs	r1, r0
   26cc4:	strh	r1, [r5, #24]
   26cc6:	movs	r1, r0
   26cc8:	strh	r3, [r2, #46]	; 0x2e
   26cca:	movs	r1, r0
   26ccc:	strh	r7, [r5, #22]
   26cce:	movs	r1, r0
   26cd0:	strh	r7, [r1, #34]	; 0x22
   26cd2:	movs	r1, r0
   26cd4:	cmp	r1, #42	; 0x2a
   26cd6:	movs	r1, r0
   26cd8:	strh	r0, [r1, #10]
   26cda:	movs	r1, r0

00026cdc <btrfs_clear_free_space_cache@@Base>:
   26cdc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26ce0:	mov	fp, r1
   26ce2:	vpush	{d8}
   26ce6:	movs	r1, #1
   26ce8:	ldr	r2, [pc, #704]	; (26fac <btrfs_clear_free_space_cache@@Base+0x2d0>)
   26cea:	ldr	r3, [pc, #708]	; (26fb0 <btrfs_clear_free_space_cache@@Base+0x2d4>)
   26cec:	add	r2, pc
   26cee:	ldr	r7, [r0, #28]
   26cf0:	sub	sp, #172	; 0xac
   26cf2:	ldr	r3, [r2, r3]
   26cf4:	mov	r0, r7
   26cf6:	ldr	r3, [r3, #0]
   26cf8:	str	r3, [sp, #164]	; 0xa4
   26cfa:	mov.w	r3, #0
   26cfe:	bl	2a674 <btrfs_start_transaction@@Base>
   26d02:	cmn.w	r0, #4096	; 0x1000
   26d06:	mov	r5, r0
   26d08:	bls.n	26d22 <btrfs_clear_free_space_cache@@Base+0x46>
   26d0a:	mov	r4, r0
   26d0c:	ldr	r2, [pc, #676]	; (26fb4 <btrfs_clear_free_space_cache@@Base+0x2d8>)
   26d0e:	ldr	r3, [pc, #672]	; (26fb0 <btrfs_clear_free_space_cache@@Base+0x2d4>)
   26d10:	add	r2, pc
   26d12:	ldr	r3, [r2, r3]
   26d14:	ldr	r2, [r3, #0]
   26d16:	ldr	r3, [sp, #164]	; 0xa4
   26d18:	eors	r2, r3
   26d1a:	beq.w	26fa0 <btrfs_clear_free_space_cache@@Base+0x2c4>
   26d1e:	blx	8510 <__stack_chk_fail@plt>
   26d22:	add	r6, sp, #96	; 0x60
   26d24:	mov.w	r8, #4294967295	; 0xffffffff
   26d28:	mov.w	r9, #0
   26d2c:	add.w	sl, sp, #65	; 0x41
   26d30:	mov	r0, r6
   26d32:	bl	1753c <btrfs_init_path@@Base>
   26d36:	mvn.w	r2, #10
   26d3a:	mov.w	r3, #4294967295	; 0xffffffff
   26d3e:	strd	r2, r3, [sp, #56]	; 0x38
   26d42:	ldr.w	r3, [fp, #40]	; 0x28
   26d46:	mov	r1, r7
   26d48:	mov	r0, r5
   26d4a:	strb.w	r9, [sp, #64]	; 0x40
   26d4e:	str.w	r3, [sp, #65]	; 0x41
   26d52:	ldr.w	r3, [fp, #44]	; 0x2c
   26d56:	str.w	r3, [sp, #69]	; 0x45
   26d5a:	add	r3, sp, #56	; 0x38
   26d5c:	vmov	s17, r3
   26d60:	movs	r3, #1
   26d62:	strd	r8, r3, [sp]
   26d66:	mov	r3, r6
   26d68:	vmov	r2, s17
   26d6c:	bl	19930 <btrfs_search_slot@@Base>
   26d70:	subs	r4, r0, #0
   26d72:	bgt.w	26f9c <btrfs_clear_free_space_cache@@Base+0x2c0>
   26d76:	bne.n	26dba <btrfs_clear_free_space_cache@@Base+0xde>
   26d78:	ldr	r0, [sp, #96]	; 0x60
   26d7a:	movs	r2, #25
   26d7c:	ldr	r3, [sp, #128]	; 0x80
   26d7e:	add	r1, sp, #76	; 0x4c
   26d80:	mla	r3, r2, r3, r0
   26d84:	ldr.w	r2, [r3, #214]	; 0xd6
   26d88:	movs	r3, #17
   26d8a:	adds	r2, #101	; 0x65
   26d8c:	bl	16a0e <read_extent_buffer@@Base>
   26d90:	ldrd	r9, r3, [sp, #76]	; 0x4c
   26d94:	mov	r2, r6
   26d96:	mov	r1, r7
   26d98:	mov	r0, r5
   26d9a:	vmov	s16, r3
   26d9e:	movs	r3, #1
   26da0:	str	r3, [sp, #0]
   26da2:	ldr	r3, [sp, #128]	; 0x80
   26da4:	bl	1aaec <btrfs_del_items@@Base>
   26da8:	subs	r4, r0, #0
   26daa:	bge.n	26dce <btrfs_clear_free_space_cache@@Base+0xf2>
   26dac:	ldr	r0, [pc, #520]	; (26fb8 <btrfs_clear_free_space_cache@@Base+0x2dc>)
   26dae:	ldrd	r2, r3, [fp, #40]	; 0x28
   26db2:	add	r0, pc
   26db4:	str	r4, [sp, #0]
   26db6:	bl	16b70 <__btrfs_error@@Base>
   26dba:	add	r0, sp, #96	; 0x60
   26dbc:	bl	1754c <btrfs_release_path@@Base>
   26dc0:	cmp	r4, #0
   26dc2:	bne.n	26d0c <btrfs_clear_free_space_cache@@Base+0x30>
   26dc4:	mov	r1, r7
   26dc6:	mov	r0, r5
   26dc8:	bl	2a8f4 <btrfs_commit_transaction@@Base>
   26dcc:	b.n	26d0c <btrfs_clear_free_space_cache@@Base+0x30>
   26dce:	mov	r0, r6
   26dd0:	bl	1754c <btrfs_release_path@@Base>
   26dd4:	mov.w	r3, #108	; 0x6c
   26dd8:	strb.w	r8, [sl]
   26ddc:	mov	r1, r7
   26dde:	strb.w	r3, [sp, #64]	; 0x40
   26de2:	mov	r0, r5
   26de4:	movs	r3, #1
   26de6:	strb.w	r8, [sl, #1]
   26dea:	strb.w	r8, [sl, #2]
   26dee:	strb.w	r8, [sl, #3]
   26df2:	strb.w	r8, [sl, #4]
   26df6:	strb.w	r8, [sl, #5]
   26dfa:	strb.w	r8, [sl, #6]
   26dfe:	strb.w	r8, [sl, #7]
   26e02:	vmov	r2, s17
   26e06:	strd	r8, r3, [sp]
   26e0a:	mov	r3, r6
   26e0c:	vstr	s16, [sp, #60]	; 0x3c
   26e10:	str.w	r9, [sp, #56]	; 0x38
   26e14:	bl	19930 <btrfs_search_slot@@Base>
   26e18:	subs	r4, r0, #0
   26e1a:	blt.n	26ebc <btrfs_clear_free_space_cache@@Base+0x1e0>
   26e1c:	movs	r3, #108	; 0x6c
   26e1e:	str	r3, [sp, #44]	; 0x2c
   26e20:	ldr	r3, [sp, #44]	; 0x2c
   26e22:	mov	r2, r9
   26e24:	mov	r1, r6
   26e26:	mov	r0, r7
   26e28:	str	r3, [sp, #0]
   26e2a:	vmov	r3, s16
   26e2e:	bl	1afe8 <btrfs_previous_item@@Base>
   26e32:	subs	r4, r0, #0
   26e34:	ble.n	26ec8 <btrfs_clear_free_space_cache@@Base+0x1ec>
   26e36:	mov	r0, r6
   26e38:	bl	1754c <btrfs_release_path@@Base>
   26e3c:	movs	r3, #0
   26e3e:	movs	r2, #1
   26e40:	strb.w	r3, [sl, #1]
   26e44:	strb.w	r3, [sl, #2]
   26e48:	mov	r1, r7
   26e4a:	strb.w	r3, [sl, #3]
   26e4e:	mov	r0, r5
   26e50:	strb.w	r3, [sl, #4]
   26e54:	strb.w	r3, [sl, #5]
   26e58:	strb.w	r3, [sl, #6]
   26e5c:	strb.w	r3, [sl, #7]
   26e60:	strb.w	r2, [sp, #64]	; 0x40
   26e64:	strb.w	r3, [sp, #65]	; 0x41
   26e68:	mov.w	r3, #4294967295	; 0xffffffff
   26e6c:	str	r2, [sp, #4]
   26e6e:	add	r2, sp, #56	; 0x38
   26e70:	str	r3, [sp, #0]
   26e72:	mov	r3, r6
   26e74:	vstr	s16, [sp, #60]	; 0x3c
   26e78:	str.w	r9, [sp, #56]	; 0x38
   26e7c:	bl	19930 <btrfs_search_slot@@Base>
   26e80:	subs	r4, r0, #0
   26e82:	ble.n	26f84 <btrfs_clear_free_space_cache@@Base+0x2a8>
   26e84:	ldr	r0, [pc, #308]	; (26fbc <btrfs_clear_free_space_cache@@Base+0x2e0>)
   26e86:	mov	r2, r9
   26e88:	vmov	r3, s16
   26e8c:	add	r0, pc
   26e8e:	bl	16af4 <__btrfs_warning@@Base>
   26e92:	movs	r3, #1
   26e94:	mov	r2, r6
   26e96:	str	r3, [sp, #0]
   26e98:	mov	r1, r7
   26e9a:	ldr	r3, [sp, #128]	; 0x80
   26e9c:	mov	r0, r5
   26e9e:	bl	1aaec <btrfs_del_items@@Base>
   26ea2:	subs	r4, r0, #0
   26ea4:	bge.n	26dba <btrfs_clear_free_space_cache@@Base+0xde>
   26ea6:	ldrd	r2, r3, [fp, #40]	; 0x28
   26eaa:	ldr	r0, [pc, #276]	; (26fc0 <btrfs_clear_free_space_cache@@Base+0x2e4>)
   26eac:	str	r4, [sp, #8]
   26eae:	strd	r2, r3, [sp]
   26eb2:	add	r0, pc
   26eb4:	vmov	r3, s16
   26eb8:	mov	r2, r9
   26eba:	b.n	26f7e <btrfs_clear_free_space_cache@@Base+0x2a2>
   26ebc:	ldr	r0, [pc, #260]	; (26fc4 <btrfs_clear_free_space_cache@@Base+0x2e8>)
   26ebe:	ldrd	r2, r3, [fp, #40]	; 0x28
   26ec2:	add	r0, pc
   26ec4:	str	r4, [sp, #0]
   26ec6:	b.n	26db6 <btrfs_clear_free_space_cache@@Base+0xda>
   26ec8:	beq.n	26ed6 <btrfs_clear_free_space_cache@@Base+0x1fa>
   26eca:	ldr	r0, [pc, #252]	; (26fc8 <btrfs_clear_free_space_cache@@Base+0x2ec>)
   26ecc:	ldrd	r2, r3, [fp, #40]	; 0x28
   26ed0:	add	r0, pc
   26ed2:	str	r4, [sp, #0]
   26ed4:	b.n	26db6 <btrfs_clear_free_space_cache@@Base+0xda>
   26ed6:	ldr	r4, [sp, #96]	; 0x60
   26ed8:	ldr.w	r8, [sp, #128]	; 0x80
   26edc:	vmov	r1, s17
   26ee0:	mov	r0, r4
   26ee2:	mov	r2, r8
   26ee4:	bl	2618c <btrfs_print_tree@@Base+0x698>
   26ee8:	add.w	r0, r4, #96	; 0x60
   26eec:	movs	r2, #25
   26eee:	ldr.w	r1, [sp, #69]	; 0x45
   26ef2:	mla	r8, r2, r8, r0
   26ef6:	ldr.w	r4, [r8, #118]	; 0x76
   26efa:	adds	r4, #101	; 0x65
   26efc:	add.w	ip, r0, r4
   26f00:	ldr.w	r4, [sp, #65]	; 0x41
   26f04:	mov	r3, ip
   26f06:	ldr.w	r2, [r3, #21]!
   26f0a:	ldr	r3, [r3, #4]
   26f0c:	vstr	s16, [sp, #28]
   26f10:	str.w	r9, [sp, #24]
   26f14:	strd	r4, r1, [sp, #32]
   26f18:	ldrd	r0, r1, [r7, #472]	; 0x1d8
   26f1c:	strd	r3, r2, [sp, #48]	; 0x30
   26f20:	strd	r0, r1, [sp, #16]
   26f24:	movs	r0, #0
   26f26:	movs	r1, #0
   26f28:	strd	r0, r1, [sp, #8]
   26f2c:	mov	r0, ip
   26f2e:	ldr.w	r4, [r0, #29]!
   26f32:	ldr	r1, [r0, #4]
   26f34:	mov	r0, r5
   26f36:	strd	r4, r1, [sp]
   26f3a:	mov	r1, r7
   26f3c:	bl	20344 <btrfs_free_extent@@Base>
   26f40:	ldrd	r3, r2, [sp, #48]	; 0x30
   26f44:	subs	r4, r0, #0
   26f46:	bge.n	26f50 <btrfs_clear_free_space_cache@@Base+0x274>
   26f48:	ldr	r0, [pc, #128]	; (26fcc <btrfs_clear_free_space_cache@@Base+0x2f0>)
   26f4a:	str	r4, [sp, #0]
   26f4c:	add	r0, pc
   26f4e:	b.n	26db6 <btrfs_clear_free_space_cache@@Base+0xda>
   26f50:	movs	r3, #1
   26f52:	mov	r2, r6
   26f54:	str	r3, [sp, #0]
   26f56:	mov	r1, r7
   26f58:	ldr	r3, [sp, #128]	; 0x80
   26f5a:	mov	r0, r5
   26f5c:	bl	1aaec <btrfs_del_items@@Base>
   26f60:	subs	r4, r0, #0
   26f62:	bge.w	26e20 <btrfs_clear_free_space_cache@@Base+0x144>
   26f66:	ldr.w	r2, [sp, #65]	; 0x41
   26f6a:	ldr.w	r3, [sp, #69]	; 0x45
   26f6e:	ldr	r0, [pc, #96]	; (26fd0 <btrfs_clear_free_space_cache@@Base+0x2f4>)
   26f70:	str	r4, [sp, #8]
   26f72:	strd	r2, r3, [sp]
   26f76:	add	r0, pc
   26f78:	vmov	r3, s16
   26f7c:	mov	r2, r9
   26f7e:	bl	16b70 <__btrfs_error@@Base>
   26f82:	b.n	26dba <btrfs_clear_free_space_cache@@Base+0xde>
   26f84:	beq.n	26e92 <btrfs_clear_free_space_cache@@Base+0x1b6>
   26f86:	ldrd	r2, r3, [fp, #40]	; 0x28
   26f8a:	ldr	r0, [pc, #72]	; (26fd4 <btrfs_clear_free_space_cache@@Base+0x2f8>)
   26f8c:	str	r4, [sp, #8]
   26f8e:	strd	r2, r3, [sp]
   26f92:	add	r0, pc
   26f94:	vmov	r3, s16
   26f98:	mov	r2, r9
   26f9a:	b.n	26f7e <btrfs_clear_free_space_cache@@Base+0x2a2>
   26f9c:	mov	r4, r9
   26f9e:	b.n	26dba <btrfs_clear_free_space_cache@@Base+0xde>
   26fa0:	mov	r0, r4
   26fa2:	add	sp, #172	; 0xac
   26fa4:	vpop	{d8}
   26fa8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26fac:	beq.n	26ee0 <btrfs_clear_free_space_cache@@Base+0x204>
   26fae:	movs	r3, r0
   26fb0:	lsls	r0, r4, #8
   26fb2:	movs	r0, r0
   26fb4:	beq.n	270a0 <btrfs_find_last_root@@Base+0x60>
   26fb6:	movs	r3, r0
   26fb8:	strh	r6, [r4, #4]
   26fba:	movs	r1, r0
   26fbc:	strh	r1, [r0, #6]
   26fbe:	movs	r1, r0
   26fc0:	strh	r1, [r1, #8]
   26fc2:	movs	r1, r0
   26fc4:	ldrb	r2, [r2, #31]
   26fc6:	movs	r1, r0
   26fc8:	ldrb	r4, [r0, #31]
   26fca:	movs	r1, r0
   26fcc:	ldrb	r2, [r1, #30]
   26fce:	movs	r1, r0
   26fd0:	ldrb	r2, [r2, #30]
   26fd2:	movs	r1, r0
   26fd4:	ldrb	r3, [r4, #31]
   26fd6:	movs	r1, r0
   26fd8:	ldr.w	ip, [pc, #76]	; 27028 <btrfs_clear_free_space_cache@@Base+0x34c>
   26fdc:	ldr	r5, [pc, #76]	; (2702c <btrfs_clear_free_space_cache@@Base+0x350>)
   26fde:	add	ip, pc
   26fe0:	ldr	r4, [pc, #76]	; (27030 <btrfs_clear_free_space_cache@@Base+0x354>)
   26fe2:	push	{lr}
   26fe4:	sub	sp, #92	; 0x5c
   26fe6:	ldr.w	r5, [ip, r5]
   26fea:	add	r4, pc
   26fec:	ldr	r5, [r5, #0]
   26fee:	str	r5, [sp, #84]	; 0x54
   26ff0:	mov.w	r5, #0
   26ff4:	ldr	r5, [pc, #60]	; (27034 <btrfs_clear_free_space_cache@@Base+0x358>)
   26ff6:	ldr	r4, [r4, r5]
   26ff8:	strd	r2, r1, [sp]
   26ffc:	movs	r1, #1
   26ffe:	strd	r0, r3, [sp, #8]
   27002:	ldr	r2, [pc, #52]	; (27038 <btrfs_clear_free_space_cache@@Base+0x35c>)
   27004:	ldr	r3, [pc, #52]	; (2703c <btrfs_clear_free_space_cache@@Base+0x360>)
   27006:	ldr	r0, [r4, #0]
   27008:	add	r4, sp, #20
   2700a:	add	r3, pc
   2700c:	add	r2, pc
   2700e:	blx	8860 <__fprintf_chk@plt+0x4>
   27012:	movs	r1, #16
   27014:	mov	r0, r4
   27016:	blx	86c4 <backtrace@plt>
   2701a:	movs	r2, #2
   2701c:	mov	r1, r0
   2701e:	mov	r0, r4
   27020:	blx	89c8 <backtrace_symbols_fd@plt>
   27024:	blx	8980 <abort@plt>
   27028:	ldmia	r5, {r1, r2, r5, r7}
   2702a:	movs	r3, r0
   2702c:	lsls	r0, r4, #8
   2702e:	movs	r0, r0
   27030:	ldmia	r5!, {r1, r3, r4, r7}
   27032:	movs	r3, r0
   27034:	lsls	r0, r6, #8
   27036:	movs	r0, r0
   27038:	subs	r6, r2, #2
   2703a:	movs	r1, r0
   2703c:	strh	r1, [r4, #2]
   2703e:	movs	r1, r0

00027040 <btrfs_find_last_root@@Base>:
   27040:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27044:	mov	r6, r2
   27046:	ldr	r2, [pc, #276]	; (2715c <btrfs_find_last_root@@Base+0x11c>)
   27048:	mov	r7, r3
   2704a:	ldr	r3, [pc, #276]	; (27160 <btrfs_find_last_root@@Base+0x120>)
   2704c:	sub	sp, #76	; 0x4c
   2704e:	add	r2, pc
   27050:	str	r0, [sp, #12]
   27052:	ldr	r3, [r2, r3]
   27054:	ldrd	fp, r5, [sp, #112]	; 0x70
   27058:	ldr	r3, [r3, #0]
   2705a:	str	r3, [sp, #68]	; 0x44
   2705c:	mov.w	r3, #0
   27060:	bl	17544 <btrfs_alloc_path@@Base>
   27064:	mov	r4, r0
   27066:	cmp	r0, #0
   27068:	beq.n	2714c <btrfs_find_last_root@@Base+0x10c>
   2706a:	mov.w	r8, #0
   2706e:	mov.w	r2, #4294967295	; 0xffffffff
   27072:	movs	r3, #132	; 0x84
   27074:	strb.w	r2, [sp, #37]	; 0x25
   27078:	strb.w	r3, [sp, #36]	; 0x24
   2707c:	mov	r3, r0
   2707e:	strb.w	r2, [sp, #38]	; 0x26
   27082:	mov	r0, r8
   27084:	strb.w	r2, [sp, #39]	; 0x27
   27088:	strb.w	r2, [sp, #40]	; 0x28
   2708c:	strb.w	r2, [sp, #41]	; 0x29
   27090:	strb.w	r2, [sp, #42]	; 0x2a
   27094:	strb.w	r2, [sp, #43]	; 0x2b
   27098:	strb.w	r2, [sp, #44]	; 0x2c
   2709c:	add	r2, sp, #28
   2709e:	ldr	r1, [sp, #12]
   270a0:	strd	r8, r8, [sp]
   270a4:	strd	r6, r7, [sp, #28]
   270a8:	bl	19930 <btrfs_search_slot@@Base>
   270ac:	subs.w	r9, r0, #0
   270b0:	blt.n	270ba <btrfs_find_last_root@@Base+0x7a>
   270b2:	ldr	r2, [r4, #32]
   270b4:	cbnz	r2, 270d4 <btrfs_find_last_root@@Base+0x94>
   270b6:	mvn.w	r9, #1
   270ba:	mov	r0, r4
   270bc:	bl	17572 <btrfs_free_path@@Base>
   270c0:	ldr	r2, [pc, #160]	; (27164 <btrfs_find_last_root@@Base+0x124>)
   270c2:	ldr	r3, [pc, #156]	; (27160 <btrfs_find_last_root@@Base+0x120>)
   270c4:	add	r2, pc
   270c6:	ldr	r3, [r2, r3]
   270c8:	ldr	r2, [r3, #0]
   270ca:	ldr	r3, [sp, #68]	; 0x44
   270cc:	eors	r2, r3
   270ce:	beq.n	27152 <btrfs_find_last_root@@Base+0x112>
   270d0:	blx	8510 <__stack_chk_fail@plt>
   270d4:	cmp.w	r9, #0
   270d8:	bne.n	270ea <btrfs_find_last_root@@Base+0xaa>
   270da:	ldr	r1, [pc, #140]	; (27168 <btrfs_find_last_root@@Base+0x128>)
   270dc:	movs	r3, #1
   270de:	ldr	r0, [pc, #140]	; (2716c <btrfs_find_last_root@@Base+0x12c>)
   270e0:	movs	r2, #50	; 0x32
   270e2:	add	r1, pc
   270e4:	add	r0, pc
   270e6:	bl	26fd8 <btrfs_clear_free_space_cache@@Base+0x2fc>
   270ea:	subs	r2, #1
   270ec:	movs	r3, #25
   270ee:	ldr	r0, [r4, #0]
   270f0:	add	r1, sp, #48	; 0x30
   270f2:	muls	r2, r3
   270f4:	movs	r3, #17
   270f6:	str	r0, [sp, #16]
   270f8:	adds	r2, #101	; 0x65
   270fa:	str	r2, [sp, #20]
   270fc:	bl	16a0e <read_extent_buffer@@Base>
   27100:	ldrb.w	r9, [sp, #56]	; 0x38
   27104:	ldr.w	r3, [sp, #61]	; 0x3d
   27108:	cmp.w	r9, #132	; 0x84
   2710c:	ldr.w	sl, [sp, #57]	; 0x39
   27110:	str	r3, [sp, #12]
   27112:	ldrd	r2, r3, [sp, #48]	; 0x30
   27116:	bne.n	270b6 <btrfs_find_last_root@@Base+0x76>
   27118:	cmp	r7, r3
   2711a:	it	eq
   2711c:	cmpeq	r6, r2
   2711e:	ldrd	r0, r2, [sp, #16]
   27122:	bne.n	270b6 <btrfs_find_last_root@@Base+0x76>
   27124:	add	r2, r0
   27126:	movw	r3, #439	; 0x1b7
   2712a:	mov	r1, fp
   2712c:	ldr.w	r2, [r2, #113]	; 0x71
   27130:	adds	r2, #101	; 0x65
   27132:	bl	16a0e <read_extent_buffer@@Base>
   27136:	ldr	r3, [sp, #12]
   27138:	strb.w	r9, [r5, #8]
   2713c:	mov	r9, r8
   2713e:	str	r6, [r5, #0]
   27140:	str	r7, [r5, #4]
   27142:	str.w	sl, [r5, #9]
   27146:	str.w	r3, [r5, #13]
   2714a:	b.n	270ba <btrfs_find_last_root@@Base+0x7a>
   2714c:	mvn.w	r9, #11
   27150:	b.n	270c0 <btrfs_find_last_root@@Base+0x80>
   27152:	mov	r0, r9
   27154:	add	sp, #76	; 0x4c
   27156:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2715a:	nop
   2715c:	ldmia	r5, {r1, r2, r4, r5}
   2715e:	movs	r3, r0
   27160:	lsls	r0, r4, #8
   27162:	movs	r0, r0
   27164:	ldmia	r4!, {r6, r7}
   27166:	movs	r3, r0
   27168:	ldrb	r6, [r3, #30]
   2716a:	movs	r1, r0
   2716c:	cmp	r1, #95	; 0x5f
   2716e:	movs	r1, r0

00027170 <btrfs_update_root@@Base>:
   27170:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27174:	mov	r8, r2
   27176:	ldr	r2, [pc, #284]	; (27294 <btrfs_update_root@@Base+0x124>)
   27178:	mov	r6, r3
   2717a:	ldr	r3, [pc, #284]	; (27298 <btrfs_update_root@@Base+0x128>)
   2717c:	sub	sp, #20
   2717e:	add	r2, pc
   27180:	mov	r7, r0
   27182:	mov	fp, r1
   27184:	ldr	r3, [r2, r3]
   27186:	ldr	r3, [r3, #0]
   27188:	str	r3, [sp, #12]
   2718a:	mov.w	r3, #0
   2718e:	bl	17544 <btrfs_alloc_path@@Base>
   27192:	mov	r5, r0
   27194:	cmp	r0, #0
   27196:	beq.n	27284 <btrfs_update_root@@Base+0x114>
   27198:	movs	r3, #0
   2719a:	mov.w	r9, #1
   2719e:	mov	r2, r8
   271a0:	strd	r3, r9, [sp]
   271a4:	mov	r1, fp
   271a6:	mov	r3, r0
   271a8:	mov	r0, r7
   271aa:	bl	19930 <btrfs_search_slot@@Base>
   271ae:	subs	r4, r0, #0
   271b0:	blt.n	27206 <btrfs_update_root@@Base+0x96>
   271b2:	beq.n	271c6 <btrfs_update_root@@Base+0x56>
   271b4:	ldr	r1, [pc, #228]	; (2729c <btrfs_update_root@@Base+0x12c>)
   271b6:	mov	r3, r9
   271b8:	ldr	r0, [pc, #228]	; (272a0 <btrfs_update_root@@Base+0x130>)
   271ba:	movs	r2, #86	; 0x56
   271bc:	add	r1, pc
   271be:	adds	r1, #21
   271c0:	add	r0, pc
   271c2:	bl	26fd8 <btrfs_clear_free_space_cache@@Base+0x2fc>
   271c6:	ldr	r0, [r5, #0]
   271c8:	mov.w	sl, #25
   271cc:	ldr	r3, [r5, #32]
   271ce:	mla	r3, sl, r3, r0
   271d2:	add.w	r2, r3, #197	; 0xc5
   271d6:	ldr.w	r3, [r3, #218]	; 0xda
   271da:	cmp.w	r3, #438	; 0x1b6
   271de:	bls.n	27220 <btrfs_update_root@@Base+0xb0>
   271e0:	ldr.w	r2, [r2, #17]
   271e4:	ldr.w	r1, [r6, #160]	; 0xa0
   271e8:	adds	r2, #101	; 0x65
   271ea:	ldr.w	r3, [r6, #164]	; 0xa4
   271ee:	str.w	r1, [r6, #239]	; 0xef
   271f2:	mov	r1, r6
   271f4:	str.w	r3, [r6, #243]	; 0xf3
   271f8:	movw	r3, #439	; 0x1b7
   271fc:	bl	16a24 <write_extent_buffer@@Base>
   27200:	ldr	r0, [r5, #0]
   27202:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   27206:	mov	r0, r5
   27208:	bl	17572 <btrfs_free_path@@Base>
   2720c:	ldr	r2, [pc, #148]	; (272a4 <btrfs_update_root@@Base+0x134>)
   2720e:	ldr	r3, [pc, #136]	; (27298 <btrfs_update_root@@Base+0x128>)
   27210:	add	r2, pc
   27212:	ldr	r3, [r2, r3]
   27214:	ldr	r2, [r3, #0]
   27216:	ldr	r3, [sp, #12]
   27218:	eors	r2, r3
   2721a:	beq.n	2728a <btrfs_update_root@@Base+0x11a>
   2721c:	blx	8510 <__stack_chk_fail@plt>
   27220:	mov	r0, r5
   27222:	bl	1754c <btrfs_release_path@@Base>
   27226:	mov.w	r3, #4294967295	; 0xffffffff
   2722a:	mov	r2, r8
   2722c:	str	r3, [sp, #0]
   2722e:	mov	r1, fp
   27230:	mov	r3, r5
   27232:	mov	r0, r7
   27234:	str.w	r9, [sp, #4]
   27238:	bl	19930 <btrfs_search_slot@@Base>
   2723c:	subs	r4, r0, #0
   2723e:	blt.n	27206 <btrfs_update_root@@Base+0x96>
   27240:	str.w	r9, [sp]
   27244:	mov	r2, r5
   27246:	ldr	r3, [r5, #32]
   27248:	mov	r1, fp
   2724a:	mov	r0, r7
   2724c:	bl	1aaec <btrfs_del_items@@Base>
   27250:	subs	r4, r0, #0
   27252:	blt.n	27206 <btrfs_update_root@@Base+0x96>
   27254:	mov	r0, r5
   27256:	bl	1754c <btrfs_release_path@@Base>
   2725a:	movw	r3, #439	; 0x1b7
   2725e:	mov	r2, r5
   27260:	strd	r9, r3, [sp, #4]
   27264:	mov	r1, fp
   27266:	add	r3, sp, #8
   27268:	mov	r0, r7
   2726a:	str	r3, [sp, #0]
   2726c:	mov	r3, r8
   2726e:	bl	1a700 <btrfs_insert_empty_items@@Base>
   27272:	subs	r4, r0, #0
   27274:	blt.n	27206 <btrfs_update_root@@Base+0x96>
   27276:	ldr	r0, [r5, #0]
   27278:	ldr	r3, [r5, #32]
   2727a:	mla	r3, sl, r3, r0
   2727e:	ldr.w	r2, [r3, #214]	; 0xd6
   27282:	b.n	271e4 <btrfs_update_root@@Base+0x74>
   27284:	mvn.w	r4, #11
   27288:	b.n	2720c <btrfs_update_root@@Base+0x9c>
   2728a:	mov	r0, r4
   2728c:	add	sp, #20
   2728e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27292:	nop
   27294:	ldmia	r4!, {r1, r2}
   27296:	movs	r3, r0
   27298:	lsls	r0, r4, #8
   2729a:	movs	r0, r0
   2729c:	ldrb	r4, [r0, #27]
   2729e:	movs	r1, r0
   272a0:	ldrb	r7, [r6, #26]
   272a2:	movs	r1, r0
   272a4:	ldmia	r3!, {r2, r4, r5, r6}
   272a6:	movs	r3, r0

000272a8 <btrfs_insert_root@@Base>:
   272a8:	push	{r0, r1, r4, r5, r6, lr}
   272aa:	movw	r4, #439	; 0x1b7
   272ae:	ldr.w	r6, [r3, #160]	; 0xa0
   272b2:	ldr.w	r5, [r3, #164]	; 0xa4
   272b6:	str	r4, [sp, #0]
   272b8:	str.w	r6, [r3, #239]	; 0xef
   272bc:	str.w	r5, [r3, #243]	; 0xf3
   272c0:	bl	1a9bc <btrfs_insert_item@@Base>
   272c4:	add	sp, #8
   272c6:	pop	{r4, r5, r6, pc}

000272c8 <btrfs_del_root@@Base>:
   272c8:	push	{r4, r5, r6, r7, lr}
   272ca:	sub	sp, #20
   272cc:	mov	r6, r0
   272ce:	strd	r2, r1, [sp, #8]
   272d2:	bl	17544 <btrfs_alloc_path@@Base>
   272d6:	mov	r5, r0
   272d8:	cbz	r0, 2731a <btrfs_del_root@@Base+0x52>
   272da:	ldrd	r2, r1, [sp, #8]
   272de:	mov.w	r3, #4294967295	; 0xffffffff
   272e2:	movs	r7, #1
   272e4:	strd	r3, r7, [sp]
   272e8:	mov	r3, r0
   272ea:	mov	r0, r6
   272ec:	str	r1, [sp, #8]
   272ee:	bl	19930 <btrfs_search_slot@@Base>
   272f2:	subs	r4, r0, #0
   272f4:	blt.n	27308 <btrfs_del_root@@Base+0x40>
   272f6:	bne.n	27314 <btrfs_del_root@@Base+0x4c>
   272f8:	str	r7, [sp, #0]
   272fa:	mov	r2, r5
   272fc:	ldr	r3, [r5, #32]
   272fe:	mov	r0, r6
   27300:	ldr	r1, [sp, #8]
   27302:	bl	1aaec <btrfs_del_items@@Base>
   27306:	mov	r4, r0
   27308:	mov	r0, r5
   2730a:	bl	17572 <btrfs_free_path@@Base>
   2730e:	mov	r0, r4
   27310:	add	sp, #20
   27312:	pop	{r4, r5, r6, r7, pc}
   27314:	mvn.w	r4, #1
   27318:	b.n	27308 <btrfs_del_root@@Base+0x40>
   2731a:	mvn.w	r4, #11
   2731e:	b.n	2730e <btrfs_del_root@@Base+0x46>

00027320 <btrfs_add_root_ref@@Base>:
   27320:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27324:	sub	sp, #68	; 0x44
   27326:	mov	r7, r3
   27328:	mov	fp, r2
   2732a:	ldr	r3, [sp, #116]	; 0x74
   2732c:	mov	r6, r0
   2732e:	ldr	r2, [sp, #112]	; 0x70
   27330:	str	r1, [sp, #28]
   27332:	str	r3, [sp, #20]
   27334:	ldr	r3, [sp, #128]	; 0x80
   27336:	str	r2, [sp, #24]
   27338:	ldr	r2, [pc, #208]	; (2740c <btrfs_add_root_ref@@Base+0xec>)
   2733a:	str	r3, [sp, #12]
   2733c:	ldr	r3, [sp, #132]	; 0x84
   2733e:	add	r2, pc
   27340:	ldrd	sl, r9, [sp, #120]	; 0x78
   27344:	ldrd	r8, r5, [sp, #136]	; 0x88
   27348:	str	r3, [sp, #16]
   2734a:	ldr	r3, [pc, #196]	; (27410 <btrfs_add_root_ref@@Base+0xf0>)
   2734c:	ldr	r3, [r2, r3]
   2734e:	ldr	r3, [r3, #0]
   27350:	str	r3, [sp, #60]	; 0x3c
   27352:	mov.w	r3, #0
   27356:	bl	17544 <btrfs_alloc_path@@Base>
   2735a:	mov	r4, r0
   2735c:	cmp	r0, #0
   2735e:	beq.n	273fe <btrfs_add_root_ref@@Base+0xde>
   27360:	ldrb.w	r0, [sp, #104]	; 0x68
   27364:	ldr	r2, [sp, #24]
   27366:	ldr	r3, [sp, #20]
   27368:	strb.w	r0, [sp, #48]	; 0x30
   2736c:	mov	r0, r6
   2736e:	str.w	r2, [sp, #49]	; 0x31
   27372:	mov	r2, r4
   27374:	str.w	r3, [sp, #53]	; 0x35
   27378:	add.w	r3, r5, #18
   2737c:	ldr	r1, [sp, #28]
   2737e:	str	r3, [sp, #36]	; 0x24
   27380:	movs	r3, #1
   27382:	str	r3, [sp, #4]
   27384:	add	r3, sp, #36	; 0x24
   27386:	str	r3, [sp, #0]
   27388:	add	r3, sp, #40	; 0x28
   2738a:	strd	fp, r7, [sp, #40]	; 0x28
   2738e:	bl	1a700 <btrfs_insert_empty_items@@Base>
   27392:	mov	r6, r0
   27394:	cbz	r0, 273a8 <btrfs_add_root_ref@@Base+0x88>
   27396:	ldr	r1, [pc, #124]	; (27414 <btrfs_add_root_ref@@Base+0xf4>)
   27398:	mov	r3, r0
   2739a:	ldr	r0, [pc, #124]	; (27418 <btrfs_add_root_ref@@Base+0xf8>)
   2739c:	movs	r2, #209	; 0xd1
   2739e:	add	r1, pc
   273a0:	adds	r1, #39	; 0x27
   273a2:	add	r0, pc
   273a4:	bl	26fd8 <btrfs_clear_free_space_cache@@Base+0x2fc>
   273a8:	ldr	r0, [r4, #0]
   273aa:	movs	r2, #25
   273ac:	ldr	r3, [r4, #32]
   273ae:	add.w	r1, r0, #96	; 0x60
   273b2:	mla	r3, r2, r3, r1
   273b6:	ldr.w	r2, [r3, #118]	; 0x76
   273ba:	add.w	r7, r2, #101	; 0x65
   273be:	adds	r2, #119	; 0x77
   273c0:	adds	r3, r1, r7
   273c2:	str.w	sl, [r1, r7]
   273c6:	ldr	r1, [sp, #12]
   273c8:	str.w	r9, [r3, #4]
   273cc:	strh	r5, [r3, #16]
   273ce:	str	r1, [r3, #8]
   273d0:	ldr	r1, [sp, #16]
   273d2:	str	r0, [sp, #12]
   273d4:	str	r1, [r3, #12]
   273d6:	mov	r3, r5
   273d8:	mov	r1, r8
   273da:	bl	16a24 <write_extent_buffer@@Base>
   273de:	ldr	r0, [sp, #12]
   273e0:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   273e4:	mov	r0, r4
   273e6:	bl	17572 <btrfs_free_path@@Base>
   273ea:	ldr	r2, [pc, #48]	; (2741c <btrfs_add_root_ref@@Base+0xfc>)
   273ec:	ldr	r3, [pc, #32]	; (27410 <btrfs_add_root_ref@@Base+0xf0>)
   273ee:	add	r2, pc
   273f0:	ldr	r3, [r2, r3]
   273f2:	ldr	r2, [r3, #0]
   273f4:	ldr	r3, [sp, #60]	; 0x3c
   273f6:	eors	r2, r3
   273f8:	beq.n	27404 <btrfs_add_root_ref@@Base+0xe4>
   273fa:	blx	8510 <__stack_chk_fail@plt>
   273fe:	mvn.w	r6, #11
   27402:	b.n	273ea <btrfs_add_root_ref@@Base+0xca>
   27404:	mov	r0, r6
   27406:	add	sp, #68	; 0x44
   27408:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2740c:	ldmia	r2, {r1, r2, r6}
   2740e:	movs	r3, r0
   27410:	lsls	r0, r4, #8
   27412:	movs	r0, r0
   27414:	ldrb	r2, [r4, #19]
   27416:	movs	r1, r0
   27418:	movs	r1, #66	; 0x42
   2741a:	movs	r1, r0
   2741c:	ldmia	r1, {r1, r2, r4, r7}
   2741e:	movs	r3, r0
   27420:	push	{r4, r5, lr}
   27422:	movs	r1, #0
   27424:	ldr	r4, [r0, #40]	; 0x28
   27426:	mov	r3, r1
   27428:	ldr	r5, [r0, #64]	; 0x40
   2742a:	and.w	r2, r4, #128	; 0x80
   2742e:	orrs	r3, r2
   27430:	bne.n	27444 <btrfs_add_root_ref@@Base+0x124>
   27432:	and.w	r2, r4, #256	; 0x100
   27436:	mov	r3, r1
   27438:	orrs	r3, r2
   2743a:	ite	ne
   2743c:	movne	r0, #2
   2743e:	moveq	r0, r1
   27440:	subs	r0, r5, r0
   27442:	pop	{r4, r5, pc}
   27444:	movs	r0, #1
   27446:	b.n	27440 <btrfs_add_root_ref@@Base+0x120>
   27448:	push	{r3, r4, r5, r6, r7, lr}
   2744a:	mov	r6, r0
   2744c:	ldr	r3, [pc, #40]	; (27478 <btrfs_add_root_ref@@Base+0x158>)
   2744e:	add	r3, pc
   27450:	ldr	r4, [r3, #0]
   27452:	mov	r5, r3
   27454:	subs	r4, #80	; 0x50
   27456:	add.w	r3, r4, #80	; 0x50
   2745a:	cmp	r5, r3
   2745c:	bne.n	27464 <btrfs_add_root_ref@@Base+0x144>
   2745e:	movs	r4, #0
   27460:	mov	r0, r4
   27462:	pop	{r3, r4, r5, r6, r7, pc}
   27464:	movs	r2, #16
   27466:	mov	r1, r4
   27468:	mov	r0, r6
   2746a:	blx	84a8 <memcmp@plt+0x4>
   2746e:	cmp	r0, #0
   27470:	beq.n	27460 <btrfs_add_root_ref@@Base+0x140>
   27472:	ldr	r4, [r4, #80]	; 0x50
   27474:	subs	r4, #80	; 0x50
   27476:	b.n	27456 <btrfs_add_root_ref@@Base+0x136>
   27478:	ble.n	27388 <btrfs_add_root_ref@@Base+0x68>
   2747a:	movs	r3, r0
   2747c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   27480:	add.w	r8, r0, #72	; 0x48
   27484:	ldr	r5, [sp, #24]
   27486:	mov	r6, r2
   27488:	ldr	r4, [r0, #72]	; 0x48
   2748a:	mov	r7, r3
   2748c:	cmp	r4, r8
   2748e:	bne.n	27498 <btrfs_add_root_ref@@Base+0x178>
   27490:	movs	r4, #0
   27492:	mov	r0, r4
   27494:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   27498:	ldrd	r2, r3, [r4, #64]	; 0x40
   2749c:	cmp	r3, r7
   2749e:	it	eq
   274a0:	cmpeq	r2, r6
   274a2:	bne.n	274b8 <btrfs_add_root_ref@@Base+0x198>
   274a4:	cmp	r5, #0
   274a6:	beq.n	27492 <btrfs_add_root_ref@@Base+0x172>
   274a8:	add.w	r0, r4, #112	; 0x70
   274ac:	movs	r2, #16
   274ae:	mov	r1, r5
   274b0:	blx	84a8 <memcmp@plt+0x4>
   274b4:	cmp	r0, #0
   274b6:	beq.n	27492 <btrfs_add_root_ref@@Base+0x172>
   274b8:	ldr	r4, [r4, #0]
   274ba:	b.n	2748c <btrfs_add_root_ref@@Base+0x16c>
   274bc:	push	{r3, r4, r5, r6, r7, lr}
   274be:	mov	r1, r0
   274c0:	mov	r5, r3
   274c2:	and.w	r6, r1, #1584	; 0x630
   274c6:	movs	r3, #0
   274c8:	mov	r4, r2
   274ca:	mov	r7, r3
   274cc:	orrs.w	r2, r6, r7
   274d0:	ldr	r0, [sp, #24]
   274d2:	bne.n	274f2 <btrfs_add_root_ref@@Base+0x1d2>
   274d4:	and.w	r6, r1, #64	; 0x40
   274d8:	orrs.w	r2, r6, r7
   274dc:	beq.n	274f8 <btrfs_add_root_ref@@Base+0x1d8>
   274de:	ldr	r1, [sp, #28]
   274e0:	bl	38690 <btrfs_util_strerror@@Base+0x290>
   274e4:	asrs	r3, r0, #31
   274e6:	muls	r3, r4
   274e8:	mla	r3, r0, r5, r3
   274ec:	umull	r4, r5, r4, r0
   274f0:	add	r5, r3
   274f2:	mov	r0, r4
   274f4:	mov	r1, r5
   274f6:	pop	{r3, r4, r5, r6, r7, pc}
   274f8:	and.w	r6, r1, #128	; 0x80
   274fc:	orrs.w	r2, r6, r7
   27500:	beq.n	27506 <btrfs_add_root_ref@@Base+0x1e6>
   27502:	subs	r0, #1
   27504:	b.n	274e4 <btrfs_add_root_ref@@Base+0x1c4>
   27506:	and.w	r6, r1, #256	; 0x100
   2750a:	orrs.w	r3, r6, r7
   2750e:	it	ne
   27510:	subne	r0, #2
   27512:	b.n	274e4 <btrfs_add_root_ref@@Base+0x1c4>
   27514:	ldr.w	ip, [pc, #76]	; 27564 <btrfs_add_root_ref@@Base+0x244>
   27518:	ldr	r5, [pc, #76]	; (27568 <btrfs_add_root_ref@@Base+0x248>)
   2751a:	add	ip, pc
   2751c:	ldr	r4, [pc, #76]	; (2756c <btrfs_add_root_ref@@Base+0x24c>)
   2751e:	push	{lr}
   27520:	sub	sp, #92	; 0x5c
   27522:	ldr.w	r5, [ip, r5]
   27526:	add	r4, pc
   27528:	ldr	r5, [r5, #0]
   2752a:	str	r5, [sp, #84]	; 0x54
   2752c:	mov.w	r5, #0
   27530:	ldr	r5, [pc, #60]	; (27570 <btrfs_add_root_ref@@Base+0x250>)
   27532:	ldr	r4, [r4, r5]
   27534:	ldr	r5, [sp, #96]	; 0x60
   27536:	strd	r3, r2, [sp]
   2753a:	mov	r3, r1
   2753c:	ldr	r2, [pc, #52]	; (27574 <btrfs_add_root_ref@@Base+0x254>)
   2753e:	movs	r1, #1
   27540:	strd	r0, r5, [sp, #8]
   27544:	ldr	r0, [r4, #0]
   27546:	add	r4, sp, #20
   27548:	add	r2, pc
   2754a:	blx	8860 <__fprintf_chk@plt+0x4>
   2754e:	movs	r1, #16
   27550:	mov	r0, r4
   27552:	blx	86c4 <backtrace@plt>
   27556:	movs	r2, #2
   27558:	mov	r1, r0
   2755a:	mov	r0, r4
   2755c:	blx	89c8 <backtrace_symbols_fd@plt>
   27560:	blx	8980 <abort@plt>
   27564:	ldmia	r0!, {r1, r3, r5, r6}
   27566:	movs	r3, r0
   27568:	lsls	r0, r4, #8
   2756a:	movs	r0, r0
   2756c:	ldmia	r0!, {r1, r2, r3, r4, r6}
   2756e:	movs	r3, r0
   27570:	lsls	r0, r6, #8
   27572:	movs	r0, r0
   27574:	adds	r2, r3, r5
   27576:	movs	r1, r0
   27578:	push	{r0, r1, r4, lr}
   2757a:	ldr	r4, [sp, #16]
   2757c:	cbz	r4, 27584 <btrfs_add_root_ref@@Base+0x264>
   2757e:	str	r4, [sp, #0]
   27580:	bl	27514 <btrfs_add_root_ref@@Base+0x1f4>
   27584:	add	sp, #8
   27586:	pop	{r4, pc}
   27588:	push	{r0, r1, r4, lr}
   2758a:	mov	r4, r0
   2758c:	clz	r0, r0
   27590:	ldr	r2, [pc, #28]	; (275b0 <btrfs_add_root_ref@@Base+0x290>)
   27592:	ldr	r1, [pc, #32]	; (275b4 <btrfs_add_root_ref@@Base+0x294>)
   27594:	mov.w	r3, #322	; 0x142
   27598:	lsrs	r0, r0, #5
   2759a:	str	r0, [sp, #0]
   2759c:	ldr	r0, [pc, #24]	; (275b8 <btrfs_add_root_ref@@Base+0x298>)
   2759e:	add	r2, pc
   275a0:	add	r1, pc
   275a2:	add	r0, pc
   275a4:	bl	27578 <btrfs_add_root_ref@@Base+0x258>
   275a8:	lsls	r0, r4, #5
   275aa:	adds	r0, #48	; 0x30
   275ac:	add	sp, #8
   275ae:	pop	{r4, pc}
   275b0:	strh	r6, [r3, #20]
   275b2:	movs	r1, r0
   275b4:	movs	r0, #244	; 0xf4
   275b6:	movs	r1, r0
   275b8:	ldrh	r6, [r6, r3]
   275ba:	movs	r1, r0
   275bc:	push	{r4, lr}
   275be:	mov	r4, r1
   275c0:	ldr	r1, [pc, #84]	; (27618 <btrfs_add_root_ref@@Base+0x2f8>)
   275c2:	sub	sp, #24
   275c4:	ldr	r3, [pc, #84]	; (2761c <btrfs_add_root_ref@@Base+0x2fc>)
   275c6:	add	r1, pc
   275c8:	ldr	r3, [r1, r3]
   275ca:	mov	r1, sp
   275cc:	ldr	r3, [r3, #0]
   275ce:	str	r3, [sp, #20]
   275d0:	mov.w	r3, #0
   275d4:	movs	r3, #25
   275d6:	muls	r2, r3
   275d8:	movs	r3, #17
   275da:	adds	r2, #101	; 0x65
   275dc:	bl	16a0e <read_extent_buffer@@Base>
   275e0:	ldr.w	r3, [sp, #13]
   275e4:	ldr.w	r2, [sp, #9]
   275e8:	str.w	r3, [r4, #13]
   275ec:	ldrb.w	r3, [sp, #8]
   275f0:	str.w	r2, [r4, #9]
   275f4:	ldr	r2, [pc, #40]	; (27620 <btrfs_add_root_ref@@Base+0x300>)
   275f6:	strb	r3, [r4, #8]
   275f8:	ldr	r3, [sp, #0]
   275fa:	add	r2, pc
   275fc:	str	r3, [r4, #0]
   275fe:	ldr	r3, [sp, #4]
   27600:	str	r3, [r4, #4]
   27602:	ldr	r3, [pc, #24]	; (2761c <btrfs_add_root_ref@@Base+0x2fc>)
   27604:	ldr	r3, [r2, r3]
   27606:	ldr	r2, [r3, #0]
   27608:	ldr	r3, [sp, #20]
   2760a:	eors	r2, r3
   2760c:	beq.n	27612 <btrfs_add_root_ref@@Base+0x2f2>
   2760e:	blx	8510 <__stack_chk_fail@plt>
   27612:	add	sp, #24
   27614:	pop	{r4, pc}
   27616:	nop
   27618:	stmia	r7!, {r1, r2, r3, r4, r5, r7}
   2761a:	movs	r3, r0
   2761c:	lsls	r0, r4, #8
   2761e:	movs	r0, r0
   27620:	stmia	r7!, {r1, r3, r7}
   27622:	movs	r3, r0

00027624 <btrfs_close_devices@@Base>:
   27624:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27628:	sub	sp, #20
   2762a:	ldr.w	sl, [pc, #188]	; 276e8 <btrfs_close_devices@@Base+0xc4>
   2762e:	mov	r4, r0
   27630:	ldr	r7, [pc, #184]	; (276ec <btrfs_close_devices@@Base+0xc8>)
   27632:	movs	r6, #0
   27634:	add	sl, pc
   27636:	mov.w	r8, #0
   2763a:	mov.w	r9, #0
   2763e:	add	r7, pc
   27640:	cmp	r4, #0
   27642:	beq.n	276e2 <btrfs_close_devices@@Base+0xbe>
   27644:	ldr.w	fp, [pc, #168]	; 276f0 <btrfs_close_devices@@Base+0xcc>
   27648:	add	fp, pc
   2764a:	mov	r3, r4
   2764c:	ldr.w	r5, [r3, #72]!
   27650:	cmp	r5, r3
   27652:	bne.n	27670 <btrfs_close_devices@@Base+0x4c>
   27654:	ldr	r5, [r4, #92]	; 0x5c
   27656:	movs	r3, #0
   27658:	str	r3, [r4, #92]	; 0x5c
   2765a:	mov	r0, r4
   2765c:	ldrd	r2, r3, [r4, #80]	; 0x50
   27660:	str	r3, [r2, #4]
   27662:	str	r2, [r3, #0]
   27664:	cmp	r5, #0
   27666:	beq.n	276d6 <btrfs_close_devices@@Base+0xb2>
   27668:	blx	8434 <free@plt+0x4>
   2766c:	mov	r4, r5
   2766e:	b.n	27640 <btrfs_close_devices@@Base+0x1c>
   27670:	ldr	r0, [r5, #24]
   27672:	adds	r3, r0, #1
   27674:	beq.n	276ba <btrfs_close_devices@@Base+0x96>
   27676:	ldr	r3, [r5, #28]
   27678:	cbz	r3, 27694 <btrfs_close_devices@@Base+0x70>
   2767a:	blx	83b4 <fsync@plt>
   2767e:	adds	r0, #1
   27680:	bne.n	27694 <btrfs_close_devices@@Base+0x70>
   27682:	ldrd	r2, r3, [r5, #64]	; 0x40
   27686:	mov	r0, fp
   27688:	bl	16af4 <__btrfs_warning@@Base>
   2768c:	blx	8784 <__errno_location@plt>
   27690:	ldr	r6, [r0, #0]
   27692:	negs	r6, r6
   27694:	movs	r3, #4
   27696:	strd	r8, r9, [sp]
   2769a:	str	r3, [sp, #8]
   2769c:	movs	r2, #0
   2769e:	ldr	r0, [r5, #24]
   276a0:	movs	r3, #0
   276a2:	blx	83e4 <posix_fadvise64@plt>
   276a6:	cbz	r0, 276b4 <btrfs_close_devices@@Base+0x90>
   276a8:	ldr	r3, [pc, #72]	; (276f4 <btrfs_close_devices@@Base+0xd0>)
   276aa:	mov	r0, sl
   276ac:	ldr	r3, [r7, r3]
   276ae:	ldr	r1, [r3, #0]
   276b0:	blx	8968 <fputs@plt+0x4>
   276b4:	ldr	r0, [r5, #24]
   276b6:	blx	8998 <close@plt>
   276ba:	ldrd	r2, r3, [r5]
   276be:	str	r3, [r2, #4]
   276c0:	str	r2, [r3, #0]
   276c2:	ldr	r0, [r5, #32]
   276c4:	blx	8434 <free@plt+0x4>
   276c8:	ldr	r0, [r5, #36]	; 0x24
   276ca:	blx	8434 <free@plt+0x4>
   276ce:	mov	r0, r5
   276d0:	blx	8434 <free@plt+0x4>
   276d4:	b.n	2764a <btrfs_close_devices@@Base+0x26>
   276d6:	blx	8434 <free@plt+0x4>
   276da:	mov	r0, r6
   276dc:	add	sp, #20
   276de:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   276e2:	mov	r6, r4
   276e4:	b.n	276da <btrfs_close_devices@@Base+0xb6>
   276e6:	nop
   276e8:	strh	r7, [r2, r3]
   276ea:	movs	r1, r0
   276ec:	stmia	r7!, {r1, r2, r6}
   276ee:	movs	r3, r0
   276f0:	ldrb	r2, [r6, #9]
   276f2:	movs	r1, r0
   276f4:	lsls	r0, r6, #8
	...

000276f8 <btrfs_close_all_devices@@Base>:
   276f8:	push	{r4, lr}
   276fa:	ldr	r4, [pc, #20]	; (27710 <btrfs_close_all_devices@@Base+0x18>)
   276fc:	add	r4, pc
   276fe:	ldr	r0, [r4, #0]
   27700:	cmp	r0, r4
   27702:	bne.n	27706 <btrfs_close_all_devices@@Base+0xe>
   27704:	pop	{r4, pc}
   27706:	subs	r0, #80	; 0x50
   27708:	bl	27624 <btrfs_close_devices@@Base>
   2770c:	b.n	276fe <btrfs_close_all_devices@@Base+0x6>
   2770e:	nop
   27710:	bge.n	276c4 <btrfs_close_devices@@Base+0xa0>
   27712:	movs	r3, r0

00027714 <btrfs_open_devices@@Base>:
   27714:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   27718:	mov	r5, r0
   2771a:	ldr.w	sl, [pc, #180]	; 277d0 <btrfs_open_devices@@Base+0xbc>
   2771e:	mov	r8, r1
   27720:	ldr.w	r9, [pc, #176]	; 277d4 <btrfs_open_devices@@Base+0xc0>
   27724:	ldr	r4, [r0, #72]	; 0x48
   27726:	add	sl, pc
   27728:	ldr	r6, [pc, #172]	; (277d8 <btrfs_open_devices@@Base+0xc4>)
   2772a:	add	r9, pc
   2772c:	add	r6, pc
   2772e:	add.w	r3, r5, #72	; 0x48
   27732:	cmp	r4, r3
   27734:	bne.n	2773a <btrfs_open_devices@@Base+0x26>
   27736:	movs	r6, #0
   27738:	b.n	2777a <btrfs_open_devices@@Base+0x66>
   2773a:	ldr	r0, [r4, #32]
   2773c:	cbnz	r0, 27758 <btrfs_open_devices@@Base+0x44>
   2773e:	ldr	r3, [pc, #156]	; (277dc <btrfs_open_devices@@Base+0xc8>)
   27740:	mov	r2, r9
   27742:	ldrd	r0, r1, [r4, #64]	; 0x40
   27746:	ldr	r3, [r6, r3]
   27748:	strd	r0, r1, [sp]
   2774c:	movs	r1, #1
   2774e:	ldr	r0, [r3, #0]
   27750:	blx	8860 <__fprintf_chk@plt+0x4>
   27754:	ldr	r4, [r4, #0]
   27756:	b.n	2772e <btrfs_open_devices@@Base+0x1a>
   27758:	mov	r1, r8
   2775a:	blx	8778 <__open64_2@plt>
   2775e:	subs	r7, r0, #0
   27760:	bge.n	27782 <btrfs_open_devices@@Base+0x6e>
   27762:	blx	8784 <__errno_location@plt>
   27766:	ldr	r1, [r4, #32]
   27768:	ldr	r6, [r0, #0]
   2776a:	ldr	r0, [pc, #116]	; (277e0 <btrfs_open_devices@@Base+0xcc>)
   2776c:	negs	r6, r6
   2776e:	add	r0, pc
   27770:	bl	16b70 <__btrfs_error@@Base>
   27774:	mov	r0, r5
   27776:	bl	27624 <btrfs_close_devices@@Base>
   2777a:	mov	r0, r6
   2777c:	add	sp, #16
   2777e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   27782:	movs	r3, #4
   27784:	movs	r2, #0
   27786:	str	r3, [sp, #8]
   27788:	movs	r3, #0
   2778a:	strd	r2, r3, [sp]
   2778e:	blx	83e4 <posix_fadvise64@plt>
   27792:	cbz	r0, 277a0 <btrfs_open_devices@@Base+0x8c>
   27794:	ldr	r3, [pc, #68]	; (277dc <btrfs_open_devices@@Base+0xc8>)
   27796:	mov	r0, sl
   27798:	ldr	r3, [r6, r3]
   2779a:	ldr	r1, [r3, #0]
   2779c:	blx	8968 <fputs@plt+0x4>
   277a0:	ldrd	r0, r1, [r4, #64]	; 0x40
   277a4:	ldrd	r2, r3, [r5, #32]
   277a8:	cmp	r1, r3
   277aa:	it	eq
   277ac:	cmpeq	r0, r2
   277ae:	ldrd	r2, r3, [r5, #48]	; 0x30
   277b2:	it	eq
   277b4:	streq	r7, [r5, #64]	; 0x40
   277b6:	ldrd	r0, r1, [r4, #64]	; 0x40
   277ba:	cmp	r1, r3
   277bc:	itt	eq
   277be:	cmpeq	r0, r2
   277c0:	streq	r7, [r5, #68]	; 0x44
   277c2:	tst.w	r8, #2
   277c6:	str	r7, [r4, #24]
   277c8:	itt	ne
   277ca:	movne	r3, #1
   277cc:	strne	r3, [r4, #28]
   277ce:	b.n	27754 <btrfs_open_devices@@Base+0x40>
   277d0:	str	r5, [r4, r7]
   277d2:	movs	r1, r0
   277d4:	ldrb	r0, [r6, #6]
   277d6:	movs	r1, r0
   277d8:	stmia	r6!, {r3, r4, r6}
   277da:	movs	r3, r0
   277dc:	lsls	r0, r6, #8
   277de:	movs	r0, r0
   277e0:	ldrb	r2, [r2, #6]
   277e2:	movs	r1, r0

000277e4 <btrfs_scan_one_device@@Base>:
   277e4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   277e8:	sub.w	sp, sp, #4128	; 0x1020
   277ec:	sub	sp, #12
   277ee:	mov	sl, r1
   277f0:	ldr	r1, [pc, #636]	; (27a70 <btrfs_scan_one_device@@Base+0x28c>)
   277f2:	mov	r4, r3
   277f4:	str	r2, [sp, #28]
   277f6:	add.w	r3, sp, #4128	; 0x1020
   277fa:	ldr	r2, [pc, #632]	; (27a74 <btrfs_scan_one_device@@Base+0x290>)
   277fc:	add	r1, pc
   277fe:	adds	r3, #4
   27800:	add.w	fp, sp, #40	; 0x28
   27804:	sub.w	r5, fp, #4
   27808:	ldr	r2, [r1, r2]
   2780a:	mov	r1, r5
   2780c:	ldr	r2, [r2, #0]
   2780e:	str	r2, [r3, #0]
   27810:	mov.w	r2, #0
   27814:	add.w	r3, sp, #4160	; 0x1040
   27818:	adds	r3, #24
   2781a:	ldr	r3, [r3, #0]
   2781c:	str	r3, [sp, #0]
   2781e:	add.w	r3, sp, #4160	; 0x1040
   27822:	adds	r3, #16
   27824:	ldrd	r2, r3, [r3]
   27828:	bl	1c3c0 <btrfs_read_dev_super@@Base>
   2782c:	cmp	r0, #0
   2782e:	blt.w	27a60 <btrfs_scan_one_device@@Base+0x27c>
   27832:	ldr.w	r3, [r5, #201]	; 0xc9
   27836:	movs	r2, #0
   27838:	mov	r0, r2
   2783a:	str	r3, [sp, #16]
   2783c:	ldr.w	r3, [r5, #205]	; 0xcd
   27840:	str	r3, [sp, #20]
   27842:	ldr	r3, [r5, #60]	; 0x3c
   27844:	and.w	r1, r3, #2
   27848:	orrs.w	r3, r0, r1
   2784c:	mov.w	r1, #0
   27850:	mov	r9, r1
   27852:	add.w	r0, fp, #28
   27856:	ite	eq
   27858:	ldrdeq	r3, r2, [r5, #136]	; 0x88
   2785c:	movne	r3, #1
   2785e:	strd	r3, r2, [r4]
   27862:	ldr.w	r3, [r5, #188]	; 0xbc
   27866:	ldrd	r6, r7, [r5, #72]	; 0x48
   2786a:	and.w	r8, r3, #1024	; 0x400
   2786e:	orrs.w	r3, r8, r9
   27872:	it	ne
   27874:	addwne	r1, fp, #567	; 0x237
   27878:	bl	27448 <btrfs_add_root_ref@@Base+0x128>
   2787c:	mov	r4, r0
   2787e:	cmp	r0, #0
   27880:	bne.n	2796a <btrfs_scan_one_device@@Base+0x186>
   27882:	movs	r1, #96	; 0x60
   27884:	movs	r0, #1
   27886:	blx	839c <calloc@plt+0x4>
   2788a:	mov	r4, r0
   2788c:	cbnz	r0, 278ae <btrfs_scan_one_device@@Base+0xca>
   2788e:	mvn.w	r0, #11
   27892:	ldr	r1, [pc, #484]	; (27a78 <btrfs_scan_one_device@@Base+0x294>)
   27894:	add.w	r3, sp, #4128	; 0x1020
   27898:	ldr	r2, [pc, #472]	; (27a74 <btrfs_scan_one_device@@Base+0x290>)
   2789a:	adds	r3, #4
   2789c:	add	r1, pc
   2789e:	ldr	r2, [r1, r2]
   278a0:	ldr	r1, [r2, #0]
   278a2:	ldr	r2, [r3, #0]
   278a4:	eors	r1, r2
   278a6:	beq.w	27a66 <btrfs_scan_one_device@@Base+0x282>
   278aa:	blx	8510 <__stack_chk_fail@plt>
   278ae:	ldr	r2, [pc, #460]	; (27a7c <btrfs_scan_one_device@@Base+0x298>)
   278b0:	add.w	r3, r0, #72	; 0x48
   278b4:	strd	r3, r3, [r0, #72]	; 0x48
   278b8:	add.w	r3, r0, #80	; 0x50
   278bc:	add	r2, pc
   278be:	add.w	ip, r4, #16
   278c2:	ldr	r1, [r2, #0]
   278c4:	str	r3, [r2, #0]
   278c6:	str	r3, [r1, #4]
   278c8:	add	r3, sp, #68	; 0x44
   278ca:	strd	r1, r2, [r0, #80]	; 0x50
   278ce:	ldmia	r3, {r0, r1, r2, r3}
   278d0:	stmia.w	r4, {r0, r1, r2, r3}
   278d4:	orrs.w	r3, r8, r9
   278d8:	beq.n	27960 <btrfs_scan_one_device@@Base+0x17c>
   278da:	addw	r3, sp, #607	; 0x25f
   278de:	addw	lr, sp, #623	; 0x26f
   278e2:	ldr	r0, [r3, #0]
   278e4:	adds	r3, #8
   278e6:	ldr.w	r1, [r3, #-4]
   278ea:	cmp	r3, lr
   278ec:	mov	r2, ip
   278ee:	stmia	r2!, {r0, r1}
   278f0:	mov	ip, r2
   278f2:	bne.n	278e2 <btrfs_scan_one_device@@Base+0xfe>
   278f4:	ldrd	r2, r3, [sp, #16]
   278f8:	strd	r6, r7, [r4, #40]	; 0x28
   278fc:	strd	r2, r3, [r4, #32]
   27900:	mov.w	r2, #4294967295	; 0xffffffff
   27904:	mov.w	r3, #4294967295	; 0xffffffff
   27908:	strd	r2, r3, [r4, #48]	; 0x30
   2790c:	movs	r1, #128	; 0x80
   2790e:	movs	r0, #1
   27910:	blx	839c <calloc@plt+0x4>
   27914:	mov	r8, r0
   27916:	cmp	r0, #0
   27918:	beq.n	2788e <btrfs_scan_one_device@@Base+0xaa>
   2791a:	mov.w	r3, #4294967295	; 0xffffffff
   2791e:	str	r3, [r0, #24]
   27920:	ldrd	r2, r3, [sp, #16]
   27924:	add.w	ip, r0, #112	; 0x70
   27928:	addw	lr, sp, #319	; 0x13f
   2792c:	strd	r6, r7, [r0, #56]	; 0x38
   27930:	strd	r2, r3, [r0, #64]	; 0x40
   27934:	addw	r3, sp, #303	; 0x12f
   27938:	ldr	r0, [r3, #0]
   2793a:	adds	r3, #8
   2793c:	ldr.w	r1, [r3, #-4]
   27940:	cmp	r3, lr
   27942:	mov	r2, ip
   27944:	stmia	r2!, {r0, r1}
   27946:	mov	ip, r2
   27948:	bne.n	27938 <btrfs_scan_one_device@@Base+0x154>
   2794a:	mov	r0, sl
   2794c:	blx	84f8 <strdup@plt+0x4>
   27950:	mov	r9, r0
   27952:	str.w	r0, [r8, #32]
   27956:	cbnz	r0, 279ba <btrfs_scan_one_device@@Base+0x1d6>
   27958:	mov	r0, r8
   2795a:	blx	8434 <free@plt+0x4>
   2795e:	b.n	2788e <btrfs_scan_one_device@@Base+0xaa>
   27960:	ldmia.w	r4, {r0, r1, r2, r3}
   27964:	stmia.w	ip, {r0, r1, r2, r3}
   27968:	b.n	278f4 <btrfs_scan_one_device@@Base+0x110>
   2796a:	addw	r3, fp, #263	; 0x107
   2796e:	str	r3, [sp, #0]
   27970:	ldrd	r2, r3, [sp, #16]
   27974:	bl	2747c <btrfs_add_root_ref@@Base+0x15c>
   27978:	mov	r8, r0
   2797a:	cmp	r0, #0
   2797c:	beq.n	2790c <btrfs_scan_one_device@@Base+0x128>
   2797e:	ldr.w	r9, [r0, #32]
   27982:	cmp.w	r9, #0
   27986:	beq.n	27992 <btrfs_scan_one_device@@Base+0x1ae>
   27988:	mov	r1, sl
   2798a:	mov	r0, r9
   2798c:	blx	83c0 <strcmp@plt>
   27990:	cbz	r0, 27a0e <btrfs_scan_one_device@@Base+0x22a>
   27992:	ldrd	r2, r3, [r8, #56]	; 0x38
   27996:	cmp	r7, r3
   27998:	it	eq
   2799a:	cmpeq	r6, r2
   2799c:	bcs.n	27a46 <btrfs_scan_one_device@@Base+0x262>
   2799e:	ldr	r0, [pc, #224]	; (27a80 <btrfs_scan_one_device@@Base+0x29c>)
   279a0:	mov	r1, sl
   279a2:	strd	r2, r3, [sp, #8]
   279a6:	mov	r2, r6
   279a8:	add	r0, pc
   279aa:	mov	r3, r7
   279ac:	str.w	r9, [sp]
   279b0:	bl	16af4 <__btrfs_warning@@Base>
   279b4:	mvn.w	r0, #16
   279b8:	b.n	27892 <btrfs_scan_one_device@@Base+0xae>
   279ba:	addw	r0, sp, #335	; 0x14f
   279be:	blx	84f8 <strdup@plt+0x4>
   279c2:	str.w	r0, [r8, #36]	; 0x24
   279c6:	cbnz	r0, 279d0 <btrfs_scan_one_device@@Base+0x1ec>
   279c8:	mov	r0, r9
   279ca:	blx	8434 <free@plt+0x4>
   279ce:	b.n	27958 <btrfs_scan_one_device@@Base+0x174>
   279d0:	ldrd	r2, r3, [r5, #136]	; 0x88
   279d4:	strd	r2, r3, [r8, #40]	; 0x28
   279d8:	ldrd	r2, r3, [r5, #120]	; 0x78
   279dc:	strd	r2, r3, [r8, #48]	; 0x30
   279e0:	ldr.w	r2, [r5, #209]	; 0xd1
   279e4:	ldr.w	r3, [r5, #213]	; 0xd5
   279e8:	strd	r2, r3, [r8, #72]	; 0x48
   279ec:	ldr.w	r2, [r5, #217]	; 0xd9
   279f0:	ldr.w	r3, [r5, #221]	; 0xdd
   279f4:	strd	r2, r3, [r8, #80]	; 0x50
   279f8:	mov	r3, r4
   279fa:	ldr.w	r2, [r3, #72]!
   279fe:	str.w	r8, [r2, #4]
   27a02:	strd	r2, r3, [r8]
   27a06:	str.w	r8, [r4, #72]	; 0x48
   27a0a:	str.w	r4, [r8, #12]
   27a0e:	ldrd	r2, r3, [r4, #40]	; 0x28
   27a12:	ldrd	r0, r1, [sp, #16]
   27a16:	cmp	r3, r7
   27a18:	it	eq
   27a1a:	cmpeq	r2, r6
   27a1c:	ittt	cc
   27a1e:	strdcc	r6, r7, [r4, #40]	; 0x28
   27a22:	ldrdcc	r2, r3, [sp, #16]
   27a26:	strdcc	r2, r3, [r4, #32]
   27a2a:	ldrd	r2, r3, [r4, #48]	; 0x30
   27a2e:	cmp	r1, r3
   27a30:	it	eq
   27a32:	cmpeq	r0, r2
   27a34:	ittt	cc
   27a36:	movcc	r2, r0
   27a38:	movcc	r3, r1
   27a3a:	strdcc	r2, r3, [r4, #48]	; 0x30
   27a3e:	movs	r0, #0
   27a40:	ldr	r3, [sp, #28]
   27a42:	str	r4, [r3, #0]
   27a44:	b.n	27892 <btrfs_scan_one_device@@Base+0xae>
   27a46:	mov	r0, sl
   27a48:	blx	84f8 <strdup@plt+0x4>
   27a4c:	mov	r5, r0
   27a4e:	cmp	r0, #0
   27a50:	beq.w	2788e <btrfs_scan_one_device@@Base+0xaa>
   27a54:	mov	r0, r9
   27a56:	blx	8434 <free@plt+0x4>
   27a5a:	str.w	r5, [r8, #32]
   27a5e:	b.n	27a0e <btrfs_scan_one_device@@Base+0x22a>
   27a60:	mvn.w	r0, #4
   27a64:	b.n	27892 <btrfs_scan_one_device@@Base+0xae>
   27a66:	add.w	sp, sp, #4128	; 0x1020
   27a6a:	add	sp, #12
   27a6c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a70:	stmia	r5!, {r3, r7}
   27a72:	movs	r3, r0
   27a74:	lsls	r0, r4, #8
   27a76:	movs	r0, r0
   27a78:	stmia	r4!, {r3, r5, r6, r7}
   27a7a:	movs	r3, r0
   27a7c:	bls.n	27ab0 <btrfs_insert_dev_extent@@Base+0x2c>
   27a7e:	movs	r3, r0
   27a80:	strb	r4, [r6, #29]
   27a82:	movs	r1, r0

00027a84 <btrfs_insert_dev_extent@@Base>:
   27a84:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27a88:	sub	sp, #52	; 0x34
   27a8a:	mov	r7, r3
   27a8c:	mov	r8, r2
   27a8e:	ldrd	sl, r3, [sp, #88]	; 0x58
   27a92:	mov	r4, r0
   27a94:	ldr	r2, [pc, #236]	; (27b84 <btrfs_insert_dev_extent@@Base+0x100>)
   27a96:	mov	r6, r1
   27a98:	ldr.w	r9, [sp, #100]	; 0x64
   27a9c:	str	r3, [sp, #8]
   27a9e:	add	r2, pc
   27aa0:	ldr	r3, [sp, #96]	; 0x60
   27aa2:	ldr.w	fp, [r1, #8]
   27aa6:	str	r3, [sp, #12]
   27aa8:	ldr	r3, [pc, #220]	; (27b88 <btrfs_insert_dev_extent@@Base+0x104>)
   27aaa:	ldr	r3, [r2, r3]
   27aac:	ldr	r3, [r3, #0]
   27aae:	str	r3, [sp, #44]	; 0x2c
   27ab0:	mov.w	r3, #0
   27ab4:	bl	17544 <btrfs_alloc_path@@Base>
   27ab8:	mov	r5, r0
   27aba:	cmp	r0, #0
   27abc:	beq.n	27b76 <btrfs_insert_dev_extent@@Base+0xf2>
   27abe:	ldrd	r0, r1, [r6, #64]	; 0x40
   27ac2:	mov	r2, r5
   27ac4:	ldr	r3, [sp, #12]
   27ac6:	str.w	r9, [sp, #37]	; 0x25
   27aca:	mov.w	r9, #1
   27ace:	strd	r0, r1, [sp, #24]
   27ad2:	mov	r1, fp
   27ad4:	str.w	r3, [sp, #33]	; 0x21
   27ad8:	mov	r0, r4
   27ada:	movs	r3, #204	; 0xcc
   27adc:	str.w	r9, [sp, #4]
   27ae0:	strb.w	r3, [sp, #32]
   27ae4:	movs	r3, #48	; 0x30
   27ae6:	str	r3, [sp, #20]
   27ae8:	add	r3, sp, #20
   27aea:	str	r3, [sp, #0]
   27aec:	add	r3, sp, #24
   27aee:	bl	1a700 <btrfs_insert_empty_items@@Base>
   27af2:	subs	r6, r0, #0
   27af4:	blt.n	27b5c <btrfs_insert_dev_extent@@Base+0xd8>
   27af6:	ldr	r0, [r5, #0]
   27af8:	movs	r2, #25
   27afa:	ldr	r3, [r5, #32]
   27afc:	mov.w	lr, #3
   27b00:	add.w	r1, r0, #96	; 0x60
   27b04:	str	r0, [sp, #12]
   27b06:	mla	r3, r2, r3, r1
   27b0a:	ldr.w	r2, [r3, #118]	; 0x76
   27b0e:	movs	r3, #0
   27b10:	add.w	ip, r2, #101	; 0x65
   27b14:	adds	r2, #133	; 0x85
   27b16:	add.w	r4, r1, ip
   27b1a:	strb.w	lr, [r1, ip]
   27b1e:	strb	r3, [r4, #1]
   27b20:	strb	r3, [r4, #2]
   27b22:	strb	r3, [r4, #3]
   27b24:	strb	r3, [r4, #4]
   27b26:	strb	r3, [r4, #5]
   27b28:	strb	r3, [r4, #6]
   27b2a:	strb	r3, [r4, #7]
   27b2c:	strb	r3, [r4, #8]
   27b2e:	strb	r3, [r4, #10]
   27b30:	strb	r3, [r4, #11]
   27b32:	strb	r3, [r4, #12]
   27b34:	strb	r3, [r4, #13]
   27b36:	strb	r3, [r4, #14]
   27b38:	strb	r3, [r4, #15]
   27b3a:	movs	r3, #16
   27b3c:	strb.w	r9, [r4, #9]
   27b40:	str.w	r8, [r4, #16]
   27b44:	str	r7, [r4, #20]
   27b46:	ldr.w	r1, [fp, #464]	; 0x1d0
   27b4a:	bl	16a24 <write_extent_buffer@@Base>
   27b4e:	ldr	r3, [sp, #8]
   27b50:	ldr	r0, [sp, #12]
   27b52:	str.w	sl, [r4, #24]
   27b56:	str	r3, [r4, #28]
   27b58:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   27b5c:	mov	r0, r5
   27b5e:	bl	17572 <btrfs_free_path@@Base>
   27b62:	ldr	r2, [pc, #40]	; (27b8c <btrfs_insert_dev_extent@@Base+0x108>)
   27b64:	ldr	r3, [pc, #32]	; (27b88 <btrfs_insert_dev_extent@@Base+0x104>)
   27b66:	add	r2, pc
   27b68:	ldr	r3, [r2, r3]
   27b6a:	ldr	r2, [r3, #0]
   27b6c:	ldr	r3, [sp, #44]	; 0x2c
   27b6e:	eors	r2, r3
   27b70:	beq.n	27b7c <btrfs_insert_dev_extent@@Base+0xf8>
   27b72:	blx	8510 <__stack_chk_fail@plt>
   27b76:	mvn.w	r6, #11
   27b7a:	b.n	27b62 <btrfs_insert_dev_extent@@Base+0xde>
   27b7c:	mov	r0, r6
   27b7e:	add	sp, #52	; 0x34
   27b80:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27b84:	stmia	r2!, {r1, r2, r5, r6, r7}
   27b86:	movs	r3, r0
   27b88:	lsls	r0, r4, #8
   27b8a:	movs	r0, r0
   27b8c:	stmia	r2!, {r1, r2, r3, r4}
   27b8e:	movs	r3, r0

00027b90 <btrfs_add_device@@Base>:
   27b90:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27b94:	mov	r5, r2
   27b96:	vpush	{d8}
   27b9a:	mov	sl, r1
   27b9c:	ldr	r2, [pc, #536]	; (27db8 <btrfs_add_device@@Base+0x228>)
   27b9e:	ldr	r3, [pc, #540]	; (27dbc <btrfs_add_device@@Base+0x22c>)
   27ba0:	add	r2, pc
   27ba2:	vmov	s16, r0
   27ba6:	sub	sp, #68	; 0x44
   27ba8:	ldr.w	fp, [r1, #32]
   27bac:	ldr	r3, [r2, r3]
   27bae:	ldr	r3, [r3, #0]
   27bb0:	str	r3, [sp, #60]	; 0x3c
   27bb2:	mov.w	r3, #0
   27bb6:	bl	17544 <btrfs_alloc_path@@Base>
   27bba:	mov	r6, r0
   27bbc:	cmp	r0, #0
   27bbe:	beq.w	27da6 <btrfs_add_device@@Base+0x216>
   27bc2:	mov.w	r9, #0
   27bc6:	movs	r3, #1
   27bc8:	strd	r3, r9, [sp, #20]
   27bcc:	add	r3, sp, #20
   27bce:	str	r3, [sp, #12]
   27bd0:	mov.w	r2, #4294967295	; 0xffffffff
   27bd4:	mov	r3, r0
   27bd6:	strb.w	r2, [sp, #29]
   27bda:	strb.w	r2, [sp, #30]
   27bde:	mov	r1, fp
   27be0:	strb.w	r2, [sp, #31]
   27be4:	mov	r0, r9
   27be6:	strb.w	r2, [sp, #32]
   27bea:	movs	r7, #216	; 0xd8
   27bec:	strb.w	r2, [sp, #33]	; 0x21
   27bf0:	strb.w	r2, [sp, #34]	; 0x22
   27bf4:	strb.w	r2, [sp, #35]	; 0x23
   27bf8:	strb.w	r2, [sp, #36]	; 0x24
   27bfc:	strd	r9, r9, [sp]
   27c00:	ldr	r2, [sp, #12]
   27c02:	strb.w	r7, [sp, #28]
   27c06:	bl	19930 <btrfs_search_slot@@Base>
   27c0a:	subs	r4, r0, #0
   27c0c:	blt.w	27d96 <btrfs_add_device@@Base+0x206>
   27c10:	ldr	r2, [pc, #428]	; (27dc0 <btrfs_add_device@@Base+0x230>)
   27c12:	it	eq
   27c14:	moveq	r3, #1
   27c16:	ldr	r1, [pc, #428]	; (27dc4 <btrfs_add_device@@Base+0x234>)
   27c18:	it	ne
   27c1a:	movne	r3, r9
   27c1c:	ldr	r0, [pc, #424]	; (27dc8 <btrfs_add_device@@Base+0x238>)
   27c1e:	add	r2, pc
   27c20:	adds	r2, #22
   27c22:	add	r1, pc
   27c24:	add	r0, pc
   27c26:	str	r3, [sp, #0]
   27c28:	movw	r3, #719	; 0x2cf
   27c2c:	bl	27578 <btrfs_add_root_ref@@Base+0x258>
   27c30:	movs	r2, #1
   27c32:	movs	r3, #0
   27c34:	mov	r1, r6
   27c36:	mov	r0, fp
   27c38:	str	r7, [sp, #0]
   27c3a:	bl	1afe8 <btrfs_previous_item@@Base>
   27c3e:	mov	r4, r0
   27c40:	cmp	r0, #0
   27c42:	bne.w	27d9c <btrfs_add_device@@Base+0x20c>
   27c46:	ldr	r2, [r6, #32]
   27c48:	add	r1, sp, #40	; 0x28
   27c4a:	ldr	r0, [r6, #0]
   27c4c:	bl	275bc <btrfs_add_root_ref@@Base+0x29c>
   27c50:	ldr.w	r7, [sp, #49]	; 0x31
   27c54:	ldr.w	r8, [sp, #53]	; 0x35
   27c58:	adds	r7, #1
   27c5a:	adc.w	r8, r8, r9
   27c5e:	mov	r0, r6
   27c60:	bl	1754c <btrfs_release_path@@Base>
   27c64:	cmp	r4, #0
   27c66:	bne.w	27d7c <btrfs_add_device@@Base+0x1ec>
   27c6a:	movs	r2, #1
   27c6c:	movs	r3, #0
   27c6e:	strd	r2, r3, [sp, #40]	; 0x28
   27c72:	movs	r3, #216	; 0xd8
   27c74:	strb.w	r3, [sp, #48]	; 0x30
   27c78:	movs	r3, #98	; 0x62
   27c7a:	str	r3, [sp, #20]
   27c7c:	movs	r3, #1
   27c7e:	str	r3, [sp, #4]
   27c80:	mov	r2, r6
   27c82:	ldr	r3, [sp, #12]
   27c84:	mov	r1, fp
   27c86:	vmov	r0, s16
   27c8a:	str.w	r7, [sp, #49]	; 0x31
   27c8e:	str	r3, [sp, #0]
   27c90:	add	r3, sp, #40	; 0x28
   27c92:	str.w	r8, [sp, #53]	; 0x35
   27c96:	bl	1a700 <btrfs_insert_empty_items@@Base>
   27c9a:	mov	r4, r0
   27c9c:	cmp	r0, #0
   27c9e:	bne.n	27d7c <btrfs_add_device@@Base+0x1ec>
   27ca0:	ldr	r0, [r6, #0]
   27ca2:	movs	r1, #25
   27ca4:	ldr	r3, [r6, #32]
   27ca6:	add.w	r2, r0, #96	; 0x60
   27caa:	mla	r3, r1, r3, r2
   27cae:	ldr.w	r9, [r3, #118]	; 0x76
   27cb2:	strd	r7, r8, [r5, #64]	; 0x40
   27cb6:	add.w	r1, r9, #101	; 0x65
   27cba:	adds	r3, r2, r1
   27cbc:	str	r7, [r2, r1]
   27cbe:	str.w	r8, [r3, #4]
   27cc2:	strb.w	r4, [r3, #44]	; 0x2c
   27cc6:	strb.w	r4, [r3, #45]	; 0x2d
   27cca:	strb.w	r4, [r3, #46]	; 0x2e
   27cce:	strb.w	r4, [r3, #47]	; 0x2f
   27cd2:	strb.w	r4, [r3, #48]	; 0x30
   27cd6:	strb.w	r4, [r3, #49]	; 0x31
   27cda:	strb.w	r4, [r3, #50]	; 0x32
   27cde:	strb.w	r4, [r3, #51]	; 0x33
   27ce2:	ldrd	r1, r2, [r5, #104]	; 0x68
   27ce6:	str	r1, [r3, #36]	; 0x24
   27ce8:	str	r2, [r3, #40]	; 0x28
   27cea:	ldr	r2, [r5, #88]	; 0x58
   27cec:	str	r2, [r3, #24]
   27cee:	ldr	r2, [r5, #92]	; 0x5c
   27cf0:	str	r2, [r3, #28]
   27cf2:	ldr	r2, [r5, #96]	; 0x60
   27cf4:	str	r2, [r3, #32]
   27cf6:	ldrd	r1, r2, [r5, #72]	; 0x48
   27cfa:	str	r1, [r3, #8]
   27cfc:	str	r2, [r3, #12]
   27cfe:	ldrd	r1, r2, [r5, #80]	; 0x50
   27d02:	str	r1, [r3, #16]
   27d04:	add.w	r1, r5, #112	; 0x70
   27d08:	str	r2, [r3, #20]
   27d0a:	add.w	r2, r9, #167	; 0xa7
   27d0e:	strb.w	r4, [r3, #60]	; 0x3c
   27d12:	strb.w	r4, [r3, #61]	; 0x3d
   27d16:	strb.w	r4, [r3, #62]	; 0x3e
   27d1a:	strb.w	r4, [r3, #63]	; 0x3f
   27d1e:	strb.w	r4, [r3, #64]	; 0x40
   27d22:	strb.w	r4, [r3, #65]	; 0x41
   27d26:	strb.w	r4, [r3, #52]	; 0x34
   27d2a:	strb.w	r4, [r3, #53]	; 0x35
   27d2e:	strb.w	r4, [r3, #54]	; 0x36
   27d32:	strb.w	r4, [r3, #55]	; 0x37
   27d36:	strb.w	r4, [r3, #56]	; 0x38
   27d3a:	strb.w	r4, [r3, #57]	; 0x39
   27d3e:	strb.w	r4, [r3, #58]	; 0x3a
   27d42:	strb.w	r4, [r3, #59]	; 0x3b
   27d46:	movs	r3, #16
   27d48:	str	r0, [sp, #12]
   27d4a:	bl	16a24 <write_extent_buffer@@Base>
   27d4e:	ldr.w	r1, [sl, #352]	; 0x160
   27d52:	movs	r3, #16
   27d54:	add.w	r2, r9, #183	; 0xb7
   27d58:	ldr	r0, [sp, #12]
   27d5a:	add	r1, r3
   27d5c:	bl	16a24 <write_extent_buffer@@Base>
   27d60:	ldr	r0, [sp, #12]
   27d62:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   27d66:	ldr.w	r2, [sl, #352]	; 0x160
   27d6a:	ldrd	r0, r5, [r5, #72]	; 0x48
   27d6e:	ldrd	r3, r1, [r2, #56]	; 0x38
   27d72:	adds	r3, r3, r0
   27d74:	adc.w	r1, r5, r1
   27d78:	strd	r3, r1, [r2, #56]	; 0x38
   27d7c:	mov	r0, r6
   27d7e:	bl	17572 <btrfs_free_path@@Base>
   27d82:	ldr	r2, [pc, #72]	; (27dcc <btrfs_add_device@@Base+0x23c>)
   27d84:	ldr	r3, [pc, #52]	; (27dbc <btrfs_add_device@@Base+0x22c>)
   27d86:	add	r2, pc
   27d88:	ldr	r3, [r2, r3]
   27d8a:	ldr	r2, [r3, #0]
   27d8c:	ldr	r3, [sp, #60]	; 0x3c
   27d8e:	eors	r2, r3
   27d90:	beq.n	27dac <btrfs_add_device@@Base+0x21c>
   27d92:	blx	8510 <__stack_chk_fail@plt>
   27d96:	movs	r7, #0
   27d98:	mov	r8, r7
   27d9a:	b.n	27c5e <btrfs_add_device@@Base+0xce>
   27d9c:	movs	r7, #1
   27d9e:	mov.w	r8, #0
   27da2:	mov	r4, r9
   27da4:	b.n	27c5e <btrfs_add_device@@Base+0xce>
   27da6:	mvn.w	r4, #11
   27daa:	b.n	27d82 <btrfs_add_device@@Base+0x1f2>
   27dac:	mov	r0, r4
   27dae:	add	sp, #68	; 0x44
   27db0:	vpop	{d8}
   27db4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27db8:	stmia	r1!, {r2, r5, r6, r7}
   27dba:	movs	r3, r0
   27dbc:	lsls	r0, r4, #8
   27dbe:	movs	r0, r0
   27dc0:	ldrb	r6, [r3, #16]
   27dc2:	movs	r1, r0
   27dc4:	strb	r5, [r7, #20]
   27dc6:	movs	r1, r0
   27dc8:	subs	r7, r3, #0
   27dca:	movs	r1, r0
   27dcc:	ittt	<und>
   27dce:	mov<und>	r3, r0

00027dd0 <btrfs_update_device@@Base>:
   27dd0:	ldr<und>	r2, [pc, #212]	; (27ea8 <btrfs_update_device@@Base+0xd8>)
   27dd2:	ldr<und>	r3, [pc, #216]	; (27eac <btrfs_update_device@@Base+0xdc>)
   27dd4:	add	r2, pc
   27dd6:	push	{r4, r5, r6, r7, lr}
   27dd8:	sub	sp, #44	; 0x2c
   27dda:	ldr	r3, [r2, r3]
   27ddc:	mov	r4, r1
   27dde:	mov	r6, r0
   27de0:	ldr	r3, [r3, #0]
   27de2:	str	r3, [sp, #36]	; 0x24
   27de4:	mov.w	r3, #0
   27de8:	ldr	r3, [r1, #8]
   27dea:	ldr.w	r3, [r3, #464]	; 0x1d0
   27dee:	ldr	r1, [r3, #32]
   27df0:	str	r1, [sp, #12]
   27df2:	bl	17544 <btrfs_alloc_path@@Base>
   27df6:	mov	r5, r0
   27df8:	cmp	r0, #0
   27dfa:	beq.n	27e9a <btrfs_update_device@@Base+0xca>
   27dfc:	movs	r2, #1
   27dfe:	movs	r3, #0
   27e00:	strd	r2, r3, [sp, #16]
   27e04:	movs	r3, #216	; 0xd8
   27e06:	strb.w	r3, [sp, #24]
   27e0a:	movs	r2, #1
   27e0c:	ldr	r3, [r4, #64]	; 0x40
   27e0e:	ldr	r1, [sp, #12]
   27e10:	str.w	r3, [sp, #25]
   27e14:	ldr	r3, [r4, #68]	; 0x44
   27e16:	str.w	r3, [sp, #29]
   27e1a:	movs	r3, #0
   27e1c:	strd	r3, r2, [sp]
   27e20:	mov	r3, r0
   27e22:	add	r2, sp, #16
   27e24:	mov	r0, r6
   27e26:	bl	19930 <btrfs_search_slot@@Base>
   27e2a:	subs	r6, r0, #0
   27e2c:	blt.n	27e7a <btrfs_update_device@@Base+0xaa>
   27e2e:	bne.n	27e94 <btrfs_update_device@@Base+0xc4>
   27e30:	ldr	r0, [r5, #0]
   27e32:	movs	r2, #25
   27e34:	ldr	r3, [r5, #32]
   27e36:	add.w	r1, r0, #96	; 0x60
   27e3a:	ldr.w	ip, [r4, #68]	; 0x44
   27e3e:	ldr	r7, [r4, #64]	; 0x40
   27e40:	mla	r3, r2, r3, r1
   27e44:	ldr.w	r3, [r3, #118]	; 0x76
   27e48:	adds	r3, #101	; 0x65
   27e4a:	adds	r2, r1, r3
   27e4c:	str	r7, [r1, r3]
   27e4e:	str.w	ip, [r2, #4]
   27e52:	ldrd	r1, r3, [r4, #104]	; 0x68
   27e56:	str	r1, [r2, #36]	; 0x24
   27e58:	str	r3, [r2, #40]	; 0x28
   27e5a:	ldr	r3, [r4, #88]	; 0x58
   27e5c:	str	r3, [r2, #24]
   27e5e:	ldr	r3, [r4, #92]	; 0x5c
   27e60:	str	r3, [r2, #28]
   27e62:	ldr	r3, [r4, #96]	; 0x60
   27e64:	str	r3, [r2, #32]
   27e66:	ldrd	r1, r3, [r4, #72]	; 0x48
   27e6a:	str	r1, [r2, #8]
   27e6c:	str	r3, [r2, #12]
   27e6e:	ldrd	r1, r3, [r4, #80]	; 0x50
   27e72:	str	r1, [r2, #16]
   27e74:	str	r3, [r2, #20]
   27e76:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   27e7a:	mov	r0, r5
   27e7c:	bl	17572 <btrfs_free_path@@Base>
   27e80:	ldr	r2, [pc, #44]	; (27eb0 <btrfs_update_device@@Base+0xe0>)
   27e82:	ldr	r3, [pc, #40]	; (27eac <btrfs_update_device@@Base+0xdc>)
   27e84:	add	r2, pc
   27e86:	ldr	r3, [r2, r3]
   27e88:	ldr	r2, [r3, #0]
   27e8a:	ldr	r3, [sp, #36]	; 0x24
   27e8c:	eors	r2, r3
   27e8e:	beq.n	27ea0 <btrfs_update_device@@Base+0xd0>
   27e90:	blx	8510 <__stack_chk_fail@plt>
   27e94:	mvn.w	r6, #1
   27e98:	b.n	27e7a <btrfs_update_device@@Base+0xaa>
   27e9a:	mvn.w	r6, #11
   27e9e:	b.n	27e80 <btrfs_update_device@@Base+0xb0>
   27ea0:	mov	r0, r6
   27ea2:	add	sp, #44	; 0x2c
   27ea4:	pop	{r4, r5, r6, r7, pc}
   27ea6:	nop
   27ea8:	nop	{11}
   27eaa:	movs	r3, r0
   27eac:	lsls	r0, r4, #8
   27eae:	movs	r0, r0
   27eb0:	nop
   27eb2:	movs	r3, r0

00027eb4 <btrfs_add_system_chunk@@Base>:
   27eb4:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   27eb8:	mov	r4, r1
   27eba:	ldr.w	r6, [r0, #308]	; 0x134
   27ebe:	mov	r1, r2
   27ec0:	add.w	r5, r3, #17
   27ec4:	ldr.w	r2, [r6, #160]	; 0xa0
   27ec8:	add	r5, r2
   27eca:	cmp.w	r5, #2048	; 0x800
   27ece:	bhi.n	27f0e <btrfs_add_system_chunk@@Base+0x5a>
   27ed0:	ldr.w	lr, [r4, #9]
   27ed4:	addw	r7, r6, #811	; 0x32b
   27ed8:	ldr.w	ip, [r4, #13]
   27edc:	adds	r0, r7, r2
   27ede:	ldrb.w	r8, [r4, #8]
   27ee2:	adds	r0, #17
   27ee4:	ldr.w	r9, [r4]
   27ee8:	ldr	r4, [r4, #4]
   27eea:	str.w	r9, [r7, r2]
   27eee:	mov	r2, r3
   27ef0:	str.w	r4, [r0, #-13]
   27ef4:	strb.w	r8, [r0, #-9]
   27ef8:	str.w	lr, [r0, #-8]
   27efc:	str.w	ip, [r0, #-4]
   27f00:	blx	8480 <memcpy@plt+0x4>
   27f04:	movs	r0, #0
   27f06:	str.w	r5, [r6, #160]	; 0xa0
   27f0a:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   27f0e:	mvn.w	r0, #26
   27f12:	b.n	27f0a <btrfs_add_system_chunk@@Base+0x56>

00027f14 <btrfs_alloc_chunk@@Base>:
   27f14:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27f18:	vpush	{d8-d11}
   27f1c:	vmov	s16, r0
   27f20:	sub	sp, #252	; 0xfc
   27f22:	str	r3, [sp, #148]	; 0x94
   27f24:	ldrd	sl, r3, [sp, #320]	; 0x140
   27f28:	str	r2, [sp, #176]	; 0xb0
   27f2a:	ldr.w	r2, [pc, #1252]	; 28410 <btrfs_alloc_chunk@@Base+0x4fc>
   27f2e:	str	r3, [sp, #120]	; 0x78
   27f30:	ldr.w	r3, [pc, #1248]	; 28414 <btrfs_alloc_chunk@@Base+0x500>
   27f34:	add	r2, pc
   27f36:	str	r1, [sp, #44]	; 0x2c
   27f38:	ldr	r3, [r2, r3]
   27f3a:	ldr	r3, [r3, #0]
   27f3c:	str	r3, [sp, #244]	; 0xf4
   27f3e:	mov.w	r3, #0
   27f42:	ldr	r3, [r1, #24]
   27f44:	str	r3, [sp, #172]	; 0xac
   27f46:	ldr	r3, [r1, #32]
   27f48:	vmov	s17, r3
   27f4c:	ldr.w	r3, [r1, #352]	; 0x160
   27f50:	str	r3, [sp, #48]	; 0x30
   27f52:	adds	r3, #72	; 0x48
   27f54:	str	r3, [sp, #108]	; 0x6c
   27f56:	ldr	r3, [sp, #48]	; 0x30
   27f58:	ldr	r2, [sp, #108]	; 0x6c
   27f5a:	ldr	r3, [r3, #72]	; 0x48
   27f5c:	cmp	r2, r3
   27f5e:	bne.n	27f7e <btrfs_alloc_chunk@@Base+0x6a>
   27f60:	mvn.w	r6, #27
   27f64:	ldr.w	r2, [pc, #1200]	; 28418 <btrfs_alloc_chunk@@Base+0x504>
   27f68:	ldr.w	r3, [pc, #1192]	; 28414 <btrfs_alloc_chunk@@Base+0x500>
   27f6c:	add	r2, pc
   27f6e:	ldr	r3, [r2, r3]
   27f70:	ldr	r2, [r3, #0]
   27f72:	ldr	r3, [sp, #244]	; 0xf4
   27f74:	eors	r2, r3
   27f76:	beq.w	28a54 <btrfs_alloc_chunk@@Base+0xb40>
   27f7a:	blx	8510 <__stack_chk_fail@plt>
   27f7e:	and.w	r0, sl, #2040	; 0x7f8
   27f82:	movs	r3, #0
   27f84:	mov	r1, r3
   27f86:	orrs.w	r2, r0, r1
   27f8a:	beq.w	281ee <btrfs_alloc_chunk@@Base+0x2da>
   27f8e:	and.w	r0, sl, #2
   27f92:	orrs.w	r2, r0, r1
   27f96:	bne.w	281d6 <btrfs_alloc_chunk@@Base+0x2c2>
   27f9a:	and.w	r0, sl, #1
   27f9e:	orrs.w	r2, r0, r1
   27fa2:	beq.w	28194 <btrfs_alloc_chunk@@Base+0x280>
   27fa6:	ldr	r3, [sp, #44]	; 0x2c
   27fa8:	movs	r2, #0
   27faa:	mov.w	r1, #1073741824	; 0x40000000
   27fae:	mov.w	r5, #2147483648	; 0x80000000
   27fb2:	strd	r1, r2, [sp, #16]
   27fb6:	movs	r4, #2
   27fb8:	ldr.w	r3, [r3, #384]	; 0x180
   27fbc:	mov.w	r2, #67108864	; 0x4000000
   27fc0:	subs	r3, #206	; 0xce
   27fc2:	lsrs	r3, r3, #5
   27fc4:	adds	r3, #1
   27fc6:	str	r2, [sp, #72]	; 0x48
   27fc8:	and.w	r6, sl, #16
   27fcc:	ldr	r2, [sp, #44]	; 0x2c
   27fce:	movs	r7, #0
   27fd0:	ldr.w	r1, [r2, #308]	; 0x134
   27fd4:	orrs.w	r2, r6, r7
   27fd8:	beq.w	281f4 <btrfs_alloc_chunk@@Base+0x2e0>
   27fdc:	ldr.w	r7, [r1, #140]	; 0x8c
   27fe0:	ldr.w	r6, [r1, #136]	; 0x88
   27fe4:	cmp	r7, #0
   27fe6:	it	eq
   27fe8:	cmpeq	r6, #3
   27fea:	it	cs
   27fec:	movcs	r6, #2
   27fee:	cmp	r6, #2
   27ff0:	mov	fp, r6
   27ff2:	bne.n	27f60 <btrfs_alloc_chunk@@Base+0x4c>
   27ff4:	and.w	r6, sl, #512	; 0x200
   27ff8:	movs	r7, #0
   27ffa:	orrs.w	r2, r6, r7
   27ffe:	beq.n	28018 <btrfs_alloc_chunk@@Base+0x104>
   28000:	ldr.w	r7, [r1, #140]	; 0x8c
   28004:	ldr.w	r6, [r1, #136]	; 0x88
   28008:	cmp	r7, #0
   2800a:	it	eq
   2800c:	cmpeq	r6, #4
   2800e:	it	cs
   28010:	movcs	r6, #3
   28012:	cmp	r6, #3
   28014:	mov	fp, r6
   28016:	bne.n	27f60 <btrfs_alloc_chunk@@Base+0x4c>
   28018:	and.w	r6, sl, #1024	; 0x400
   2801c:	movs	r7, #0
   2801e:	orrs.w	r2, r6, r7
   28022:	beq.n	2803c <btrfs_alloc_chunk@@Base+0x128>
   28024:	ldr.w	r7, [r1, #140]	; 0x8c
   28028:	ldr.w	r6, [r1, #136]	; 0x88
   2802c:	cmp	r7, #0
   2802e:	it	eq
   28030:	cmpeq	r6, #5
   28032:	it	cs
   28034:	movcs	r6, #4
   28036:	cmp	r6, #4
   28038:	mov	fp, r6
   2803a:	bne.n	27f60 <btrfs_alloc_chunk@@Base+0x4c>
   2803c:	movs	r2, #0
   2803e:	and.w	r0, sl, #32
   28042:	strd	r0, r2, [sp, #56]	; 0x38
   28046:	ldrd	r6, r7, [sp, #56]	; 0x38
   2804a:	orrs.w	r0, r6, r7
   2804e:	and.w	r6, sl, #8
   28052:	mov	r7, r2
   28054:	it	ne
   28056:	movne.w	fp, #2
   2805a:	orrs.w	r2, r6, r7
   2805e:	beq.w	281fa <btrfs_alloc_chunk@@Base+0x2e6>
   28062:	ldr.w	r2, [r1, #136]	; 0x88
   28066:	cmp	r2, r3
   28068:	it	ge
   2806a:	movge	r2, r3
   2806c:	mov	fp, r2
   2806e:	movs	r2, #2
   28070:	str	r2, [sp, #76]	; 0x4c
   28072:	and.w	r2, sl, #64	; 0x40
   28076:	str	r2, [sp, #88]	; 0x58
   28078:	movs	r2, #0
   2807a:	str	r2, [sp, #92]	; 0x5c
   2807c:	ldrd	r6, r7, [sp, #88]	; 0x58
   28080:	orrs.w	r2, r6, r7
   28084:	beq.w	28200 <btrfs_alloc_chunk@@Base+0x2ec>
   28088:	ldr.w	r2, [r1, #136]	; 0x88
   2808c:	cmp	r2, r3
   2808e:	it	ge
   28090:	movge	r2, r3
   28092:	cmp	r2, #3
   28094:	ble.w	27f60 <btrfs_alloc_chunk@@Base+0x4c>
   28098:	bic.w	fp, r2, #1
   2809c:	movs	r2, #2
   2809e:	str	r2, [sp, #52]	; 0x34
   280a0:	movs	r2, #4
   280a2:	str	r2, [sp, #76]	; 0x4c
   280a4:	and.w	r6, sl, #128	; 0x80
   280a8:	movs	r7, #0
   280aa:	orrs.w	r2, r6, r7
   280ae:	beq.n	280c6 <btrfs_alloc_chunk@@Base+0x1b2>
   280b0:	ldr.w	r2, [r1, #136]	; 0x88
   280b4:	cmp	r2, r3
   280b6:	it	ge
   280b8:	movge	r2, r3
   280ba:	cmp	r2, #1
   280bc:	mov	fp, r2
   280be:	ble.w	27f60 <btrfs_alloc_chunk@@Base+0x4c>
   280c2:	movs	r2, #2
   280c4:	str	r2, [sp, #76]	; 0x4c
   280c6:	and.w	r6, sl, #256	; 0x100
   280ca:	movs	r7, #0
   280cc:	orrs.w	r2, r6, r7
   280d0:	beq.n	280e8 <btrfs_alloc_chunk@@Base+0x1d4>
   280d2:	ldr.w	r2, [r1, #136]	; 0x88
   280d6:	cmp	r3, r2
   280d8:	it	ge
   280da:	movge	r3, r2
   280dc:	cmp	r3, #2
   280de:	mov	fp, r3
   280e0:	ble.w	27f60 <btrfs_alloc_chunk@@Base+0x4c>
   280e4:	movs	r3, #3
   280e6:	str	r3, [sp, #76]	; 0x4c
   280e8:	ldr	r0, [r1, #112]	; 0x70
   280ea:	movs	r2, #1
   280ec:	ldr	r1, [r1, #116]	; 0x74
   280ee:	bl	311b8 <div_factor@@Base>
   280f2:	strd	r5, r4, [sp, #64]	; 0x40
   280f6:	movs	r4, #0
   280f8:	mov	r3, r1
   280fa:	mov	r2, r0
   280fc:	ldrd	r0, r1, [sp, #64]	; 0x40
   28100:	cmp	r3, r1
   28102:	it	eq
   28104:	cmpeq	r2, r0
   28106:	it	cc
   28108:	strdcc	r2, r3, [sp, #64]	; 0x40
   2810c:	movs	r3, #0
   2810e:	strd	r3, r4, [sp, #32]
   28112:	str	r3, [sp, #168]	; 0xa8
   28114:	movs	r4, #0
   28116:	movs	r3, #0
   28118:	strd	r3, r4, [sp, #96]	; 0x60
   2811c:	ldr	r3, [sp, #52]	; 0x34
   2811e:	mov	r0, sl
   28120:	ldr	r1, [sp, #120]	; 0x78
   28122:	strd	fp, r3, [sp]
   28126:	ldrd	r2, r3, [sp, #16]
   2812a:	bl	274bc <btrfs_add_root_ref@@Base+0x19c>
   2812e:	ldrd	r3, r4, [sp, #64]	; 0x40
   28132:	cmp	r4, r1
   28134:	ldr	r4, [pc, #724]	; (2840c <btrfs_alloc_chunk@@Base+0x4f8>)
   28136:	it	eq
   28138:	cmpeq	r3, r0
   2813a:	bcs.n	28150 <btrfs_alloc_chunk@@Base+0x23c>
   2813c:	mov	r2, fp
   2813e:	ldrd	r0, r1, [sp, #64]	; 0x40
   28142:	asrs	r3, r2, #31
   28144:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   28148:	and.w	r3, r4, r0
   2814c:	strd	r3, r1, [sp, #16]
   28150:	ldr	r3, [sp, #72]	; 0x48
   28152:	asrs	r2, r3, #31
   28154:	mov	r1, r3
   28156:	mov	r3, r2
   28158:	mov	r2, r1
   2815a:	ldrd	r0, r1, [sp, #16]
   2815e:	cmp	r3, r1
   28160:	it	eq
   28162:	cmpeq	r2, r0
   28164:	itt	cc
   28166:	movcc	r3, r1
   28168:	movcc	r2, r0
   2816a:	and.w	r1, r4, r2
   2816e:	strd	r1, r3, [sp, #16]
   28172:	add	r3, sp, #196	; 0xc4
   28174:	strd	r3, r3, [sp, #196]	; 0xc4
   28178:	ldr	r3, [sp, #48]	; 0x30
   2817a:	ldr	r5, [r3, #72]	; 0x48
   2817c:	ldrd	r3, r4, [sp, #56]	; 0x38
   28180:	orrs	r3, r4
   28182:	beq.w	2852e <btrfs_alloc_chunk@@Base+0x61a>
   28186:	adds	r3, r1, r1
   28188:	str	r3, [sp, #128]	; 0x80
   2818a:	ldr	r3, [sp, #20]
   2818c:	adcs	r3, r3
   2818e:	str	r3, [sp, #132]	; 0x84
   28190:	movs	r7, #0
   28192:	b.n	28320 <btrfs_alloc_chunk@@Base+0x40c>
   28194:	and.w	r0, sl, #4
   28198:	orrs.w	r2, r0, r1
   2819c:	beq.n	281ee <btrfs_alloc_chunk@@Base+0x2da>
   2819e:	ldr	r3, [sp, #48]	; 0x30
   281a0:	movs	r1, #12
   281a2:	mov.w	r0, #2147483648	; 0x80000000
   281a6:	movs	r4, #0
   281a8:	ldrd	r2, r3, [r3, #56]	; 0x38
   281ac:	cmp	r1, r3
   281ae:	it	eq
   281b0:	cmpeq	r0, r2
   281b2:	mov.w	r2, #33554432	; 0x2000000
   281b6:	ite	cs
   281b8:	movcs.w	r3, #268435456	; 0x10000000
   281bc:	movcc.w	r3, #1073741824	; 0x40000000
   281c0:	strd	r3, r4, [sp, #16]
   281c4:	ldr	r3, [sp, #44]	; 0x2c
   281c6:	ldrd	r5, r4, [sp, #16]
   281ca:	ldr.w	r3, [r3, #384]	; 0x180
   281ce:	subs	r3, #206	; 0xce
   281d0:	lsrs	r3, r3, #5
   281d2:	adds	r3, #1
   281d4:	b.n	27fc6 <btrfs_alloc_chunk@@Base+0xb2>
   281d6:	movs	r3, #58	; 0x3a
   281d8:	mov.w	r5, #16777216	; 0x1000000
   281dc:	movs	r2, #0
   281de:	mov.w	r1, #8388608	; 0x800000
   281e2:	movs	r4, #0
   281e4:	strd	r1, r2, [sp, #16]
   281e8:	mov.w	r2, #1048576	; 0x100000
   281ec:	b.n	27fc6 <btrfs_alloc_chunk@@Base+0xb2>
   281ee:	mov.w	r5, #33554432	; 0x2000000
   281f2:	b.n	281dc <btrfs_alloc_chunk@@Base+0x2c8>
   281f4:	mov.w	fp, #1
   281f8:	b.n	27ff4 <btrfs_alloc_chunk@@Base+0xe0>
   281fa:	str.w	fp, [sp, #76]	; 0x4c
   281fe:	b.n	28072 <btrfs_alloc_chunk@@Base+0x15e>
   28200:	movs	r2, #1
   28202:	str	r2, [sp, #52]	; 0x34
   28204:	b.n	280a4 <btrfs_alloc_chunk@@Base+0x190>
   28206:	ldr	r3, [r5, #8]
   28208:	str	r3, [sp, #104]	; 0x68
   2820a:	ldr.w	r3, [r3, #464]	; 0x1d0
   2820e:	ldrd	r9, r8, [r3, #296]	; 0x128
   28212:	ldrd	r3, r4, [r5, #72]	; 0x48
   28216:	strd	r3, r4, [sp, #80]	; 0x50
   2821a:	bl	17544 <btrfs_alloc_path@@Base>
   2821e:	mov	r4, r0
   28220:	cbnz	r0, 28228 <btrfs_alloc_chunk@@Base+0x314>
   28222:	mvn.w	r6, #11
   28226:	b.n	27f64 <btrfs_alloc_chunk@@Base+0x50>
   28228:	ldrd	r2, r3, [r5, #64]	; 0x40
   2822c:	ldr	r1, [sp, #104]	; 0x68
   2822e:	strd	r2, r3, [sp, #224]	; 0xe0
   28232:	ldr	r3, [sp, #104]	; 0x68
   28234:	ldr.w	r3, [r3, #464]	; 0x1d0
   28238:	ldr.w	r2, [r3, #296]	; 0x128
   2823c:	str.w	r2, [sp, #233]	; 0xe9
   28240:	add	r2, sp, #224	; 0xe0
   28242:	ldr.w	r3, [r3, #300]	; 0x12c
   28246:	str.w	r3, [sp, #237]	; 0xed
   2824a:	movs	r3, #204	; 0xcc
   2824c:	strb.w	r3, [sp, #232]	; 0xe8
   28250:	movs	r3, #2
   28252:	strb.w	r3, [r0, #64]	; 0x40
   28256:	movs	r3, #0
   28258:	strd	r3, r3, [sp]
   2825c:	mov	r3, r0
   2825e:	vmov	r0, s16
   28262:	bl	19930 <btrfs_search_slot@@Base>
   28266:	subs	r6, r0, #0
   28268:	blt.n	282d8 <btrfs_alloc_chunk@@Base+0x3c4>
   2826a:	ldrb.w	r3, [sp, #232]	; 0xe8
   2826e:	movs	r2, #0
   28270:	ldr	r0, [sp, #104]	; 0x68
   28272:	mov	r1, r4
   28274:	str	r3, [sp, #0]
   28276:	movs	r3, #0
   28278:	bl	1afe8 <btrfs_previous_item@@Base>
   2827c:	subs	r6, r0, #0
   2827e:	blt.n	282d8 <btrfs_alloc_chunk@@Base+0x3c4>
   28280:	strd	r9, r8, [sp, #24]
   28284:	ldrd	r2, r3, [sp, #24]
   28288:	cmp	r3, #0
   2828a:	it	eq
   2828c:	cmpeq.w	r2, #1048576	; 0x100000
   28290:	ittt	cc
   28292:	movcc.w	r2, #1048576	; 0x100000
   28296:	movcc	r3, #0
   28298:	strdcc	r2, r3, [sp, #24]
   2829c:	add	r2, sp, #224	; 0xe0
   2829e:	movs	r3, #0
   282a0:	str	r3, [sp, #124]	; 0x7c
   282a2:	vmov	s18, r2
   282a6:	ldr	r2, [r4, #32]
   282a8:	ldr	r6, [r4, #0]
   282aa:	str	r2, [sp, #144]	; 0x90
   282ac:	ldr	r1, [sp, #144]	; 0x90
   282ae:	ldr.w	r2, [r6, #192]	; 0xc0
   282b2:	cmp	r2, r1
   282b4:	bhi.w	28428 <btrfs_alloc_chunk@@Base+0x514>
   282b8:	str	r3, [sp, #144]	; 0x90
   282ba:	mov.w	r3, #0
   282be:	strb.w	r3, [r4, #65]	; 0x41
   282c2:	mov	r1, r4
   282c4:	ldr	r3, [sp, #104]	; 0x68
   282c6:	ldr.w	r0, [r3, #464]	; 0x1d0
   282ca:	bl	1ad64 <btrfs_next_sibling_tree_block@@Base>
   282ce:	ldr	r3, [sp, #144]	; 0x90
   282d0:	subs	r6, r0, #0
   282d2:	beq.n	282a6 <btrfs_alloc_chunk@@Base+0x392>
   282d4:	bge.w	284e0 <btrfs_alloc_chunk@@Base+0x5cc>
   282d8:	mov	r0, r4
   282da:	bl	17572 <btrfs_free_path@@Base>
   282de:	cmp	r6, #0
   282e0:	bne.w	27f64 <btrfs_alloc_chunk@@Base+0x50>
   282e4:	ldrd	r1, r2, [sp, #32]
   282e8:	ldrd	r8, r9, [sp, #128]	; 0x80
   282ec:	ldr	r3, [r5, #0]
   282ee:	cmp	r2, r9
   282f0:	it	eq
   282f2:	cmpeq	r1, r8
   282f4:	bcc.w	28514 <btrfs_alloc_chunk@@Base+0x600>
   282f8:	ldr	r2, [r5, #4]
   282fa:	str	r2, [r3, #4]
   282fc:	str	r3, [r2, #0]
   282fe:	ldr	r2, [sp, #196]	; 0xc4
   28300:	str	r5, [r2, #4]
   28302:	str	r2, [r5, #0]
   28304:	add	r2, sp, #196	; 0xc4
   28306:	str	r2, [r5, #4]
   28308:	ldrd	r1, r2, [sp, #56]	; 0x38
   2830c:	str	r5, [sp, #196]	; 0xc4
   2830e:	orrs	r2, r1
   28310:	ite	eq
   28312:	addeq	r7, #1
   28314:	addne	r7, #2
   28316:	ldr	r2, [sp, #108]	; 0x6c
   28318:	cmp	r2, r3
   2831a:	beq.w	28538 <btrfs_alloc_chunk@@Base+0x624>
   2831e:	mov	r5, r3
   28320:	cmp	fp, r7
   28322:	bgt.w	28206 <btrfs_alloc_chunk@@Base+0x2f2>
   28326:	ldr	r3, [sp, #44]	; 0x2c
   28328:	ldr	r5, [r3, #32]
   2832a:	bl	17544 <btrfs_alloc_path@@Base>
   2832e:	mov	r4, r0
   28330:	cmp	r0, #0
   28332:	beq.w	28222 <btrfs_alloc_chunk@@Base+0x30e>
   28336:	mov.w	r2, #4294967295	; 0xffffffff
   2833a:	movs	r0, #0
   2833c:	mov.w	r3, #256	; 0x100
   28340:	strb.w	r2, [sp, #213]	; 0xd5
   28344:	strd	r3, r0, [sp, #204]	; 0xcc
   28348:	mov	r1, r5
   2834a:	strb.w	r2, [sp, #214]	; 0xd6
   2834e:	mov	r3, r4
   28350:	strb.w	r2, [sp, #215]	; 0xd7
   28354:	movs	r7, #228	; 0xe4
   28356:	strb.w	r2, [sp, #216]	; 0xd8
   2835a:	strb.w	r2, [sp, #217]	; 0xd9
   2835e:	strb.w	r2, [sp, #218]	; 0xda
   28362:	strb.w	r2, [sp, #219]	; 0xdb
   28366:	strb.w	r2, [sp, #220]	; 0xdc
   2836a:	add	r2, sp, #204	; 0xcc
   2836c:	strd	r0, r0, [sp]
   28370:	strb.w	r7, [sp, #212]	; 0xd4
   28374:	bl	19930 <btrfs_search_slot@@Base>
   28378:	subs	r6, r0, #0
   2837a:	blt.n	283ba <btrfs_alloc_chunk@@Base+0x4a6>
   2837c:	ldr	r2, [pc, #156]	; (2841c <btrfs_alloc_chunk@@Base+0x508>)
   2837e:	it	eq
   28380:	moveq	r3, #1
   28382:	ldr	r1, [pc, #156]	; (28420 <btrfs_alloc_chunk@@Base+0x50c>)
   28384:	it	ne
   28386:	movne	r3, #0
   28388:	ldr	r0, [pc, #152]	; (28424 <btrfs_alloc_chunk@@Base+0x510>)
   2838a:	add	r2, pc
   2838c:	adds	r2, #38	; 0x26
   2838e:	add	r1, pc
   28390:	add	r0, pc
   28392:	str	r3, [sp, #0]
   28394:	movw	r3, #681	; 0x2a9
   28398:	bl	27578 <btrfs_add_root_ref@@Base+0x258>
   2839c:	movs	r2, #0
   2839e:	movs	r3, #0
   283a0:	mov	r1, r4
   283a2:	mov	r0, r5
   283a4:	str	r7, [sp, #0]
   283a6:	bl	1afe8 <btrfs_previous_item@@Base>
   283aa:	mov	r6, r0
   283ac:	cmp	r0, #0
   283ae:	beq.w	2859a <btrfs_alloc_chunk@@Base+0x686>
   283b2:	movs	r3, #0
   283b4:	strd	r3, r3, [sp, #180]	; 0xb4
   283b8:	mov	r6, r3
   283ba:	mov	r0, r4
   283bc:	bl	17572 <btrfs_free_path@@Base>
   283c0:	cmp	r6, #0
   283c2:	bne.w	27f64 <btrfs_alloc_chunk@@Base+0x50>
   283c6:	mov.w	r3, #256	; 0x100
   283ca:	strd	r3, r6, [sp, #204]	; 0xcc
   283ce:	movs	r3, #228	; 0xe4
   283d0:	strb.w	r3, [sp, #212]	; 0xd4
   283d4:	ldr	r3, [sp, #180]	; 0xb4
   283d6:	mov	r0, fp
   283d8:	str.w	r3, [sp, #213]	; 0xd5
   283dc:	ldr	r3, [sp, #184]	; 0xb8
   283de:	str.w	r3, [sp, #217]	; 0xd9
   283e2:	bl	27588 <btrfs_add_root_ref@@Base+0x268>
   283e6:	blx	8678 <malloc@plt+0x4>
   283ea:	mov	r5, r0
   283ec:	cmp	r0, #0
   283ee:	beq.w	28222 <btrfs_alloc_chunk@@Base+0x30e>
   283f2:	mov.w	r0, fp, lsl #4
   283f6:	adds	r0, #72	; 0x48
   283f8:	blx	8678 <malloc@plt+0x4>
   283fc:	mov	r7, r0
   283fe:	cmp	r0, #0
   28400:	bne.w	285e0 <btrfs_alloc_chunk@@Base+0x6cc>
   28404:	mov	r0, r5
   28406:	blx	8434 <free@plt+0x4>
   2840a:	b.n	28222 <btrfs_alloc_chunk@@Base+0x30e>
   2840c:	movs	r0, r0
   2840e:	vcvt.f32.u32	<illegal reg q13.5>, q0, #1
   28412:	movs	r3, r0
   28414:	lsls	r0, r4, #8
   28416:	movs	r0, r0
   28418:	bkpt	0x0018
   2841a:	movs	r3, r0
   2841c:	strb	r2, [r6, #18]
   2841e:	movs	r1, r0
   28420:	ldr	r1, [r2, #92]	; 0x5c
   28422:	movs	r1, r0
   28424:	asrs	r3, r6, #26
   28426:	movs	r1, r0
   28428:	vmov	r1, s18
   2842c:	mov	r0, r6
   2842e:	ldr	r2, [sp, #144]	; 0x90
   28430:	str	r3, [sp, #188]	; 0xbc
   28432:	bl	275bc <btrfs_add_root_ref@@Base+0x29c>
   28436:	ldrd	r0, r1, [sp, #224]	; 0xe0
   2843a:	ldrd	r8, r9, [r5, #64]	; 0x40
   2843e:	ldr	r3, [sp, #188]	; 0xbc
   28440:	cmp	r1, r9
   28442:	it	eq
   28444:	cmpeq	r0, r8
   28446:	bcc.n	284d8 <btrfs_alloc_chunk@@Base+0x5c4>
   28448:	cmp	r9, r1
   2844a:	it	eq
   2844c:	cmpeq	r8, r0
   2844e:	bcc.n	284e0 <btrfs_alloc_chunk@@Base+0x5cc>
   28450:	ldrb.w	r2, [sp, #232]	; 0xe8
   28454:	cmp	r2, #204	; 0xcc
   28456:	bne.n	284d8 <btrfs_alloc_chunk@@Base+0x5c4>
   28458:	ldrd	r1, r2, [sp, #80]	; 0x50
   2845c:	ldr.w	r9, [sp, #237]	; 0xed
   28460:	ldr.w	r8, [sp, #233]	; 0xe9
   28464:	cmp	r2, r9
   28466:	it	eq
   28468:	cmpeq	r1, r8
   2846a:	bcc.n	284e0 <btrfs_alloc_chunk@@Base+0x5cc>
   2846c:	ldrd	r1, r2, [sp, #24]
   28470:	cmp	r2, r9
   28472:	it	eq
   28474:	cmpeq	r1, r8
   28476:	bcs.n	2848e <btrfs_alloc_chunk@@Base+0x57a>
   28478:	ldr	r2, [sp, #124]	; 0x7c
   2847a:	ldr	r1, [sp, #24]
   2847c:	adds.w	r2, r8, r2
   28480:	adc.w	r3, r9, r3
   28484:	subs	r2, r2, r1
   28486:	str	r2, [sp, #124]	; 0x7c
   28488:	ldr	r2, [sp, #28]
   2848a:	sbc.w	r3, r3, r2
   2848e:	ldr	r2, [sp, #144]	; 0x90
   28490:	adds	r6, #96	; 0x60
   28492:	movs	r1, #25
   28494:	mla	r2, r1, r2, r6
   28498:	ldr.w	r0, [r2, #118]	; 0x76
   2849c:	add	r6, r0
   2849e:	ldr.w	r2, [r6, #125]!
   284a2:	adds.w	r2, r2, r8
   284a6:	str	r2, [sp, #152]	; 0x98
   284a8:	ldr	r1, [r6, #4]
   284aa:	adc.w	r2, r1, r9
   284ae:	str	r2, [sp, #156]	; 0x9c
   284b0:	ldrd	r8, r9, [sp, #152]	; 0x98
   284b4:	ldrd	r1, r2, [sp, #24]
   284b8:	cmp	r2, r9
   284ba:	it	eq
   284bc:	cmpeq	r1, r8
   284be:	ittt	cc
   284c0:	movcc	r1, r8
   284c2:	movcc	r2, r9
   284c4:	strdcc	r1, r2, [sp, #24]
   284c8:	ldrd	r1, r2, [sp, #80]	; 0x50
   284cc:	ldrd	r8, r9, [sp, #24]
   284d0:	cmp	r2, r9
   284d2:	it	eq
   284d4:	cmpeq	r1, r8
   284d6:	bcc.n	284e0 <btrfs_alloc_chunk@@Base+0x5cc>
   284d8:	ldr	r2, [r4, #32]
   284da:	adds	r2, #1
   284dc:	str	r2, [r4, #32]
   284de:	b.n	282a6 <btrfs_alloc_chunk@@Base+0x392>
   284e0:	ldrd	r1, r2, [sp, #24]
   284e4:	ldrd	r8, r9, [sp, #80]	; 0x50
   284e8:	cmp	r2, r9
   284ea:	it	eq
   284ec:	cmpeq	r1, r8
   284ee:	bcs.n	2850e <btrfs_alloc_chunk@@Base+0x5fa>
   284f0:	ldr	r1, [sp, #124]	; 0x7c
   284f2:	ldr	r2, [sp, #80]	; 0x50
   284f4:	adds	r2, r2, r1
   284f6:	ldr	r1, [sp, #84]	; 0x54
   284f8:	adc.w	r3, r1, r3
   284fc:	ldr	r1, [sp, #24]
   284fe:	subs	r2, r2, r1
   28500:	str	r2, [sp, #32]
   28502:	ldr	r2, [sp, #28]
   28504:	sbc.w	r3, r3, r2
   28508:	movs	r6, #0
   2850a:	str	r3, [sp, #36]	; 0x24
   2850c:	b.n	282d8 <btrfs_alloc_chunk@@Base+0x3c4>
   2850e:	ldr	r2, [sp, #124]	; 0x7c
   28510:	str	r2, [sp, #32]
   28512:	b.n	28508 <btrfs_alloc_chunk@@Base+0x5f4>
   28514:	ldrd	r1, r2, [sp, #96]	; 0x60
   28518:	ldrd	r4, r5, [sp, #32]
   2851c:	cmp	r2, r5
   2851e:	it	eq
   28520:	cmpeq	r1, r4
   28522:	ittt	cc
   28524:	movcc	r1, r4
   28526:	movcc	r2, r5
   28528:	strdcc	r1, r2, [sp, #96]	; 0x60
   2852c:	b.n	28316 <btrfs_alloc_chunk@@Base+0x402>
   2852e:	ldrd	r3, r4, [sp, #16]
   28532:	strd	r3, r4, [sp, #128]	; 0x80
   28536:	b.n	28190 <btrfs_alloc_chunk@@Base+0x27c>
   28538:	cmp	fp, r7
   2853a:	ble.w	28326 <btrfs_alloc_chunk@@Base+0x412>
   2853e:	ldr	r3, [sp, #196]	; 0xc4
   28540:	add	r2, sp, #196	; 0xc4
   28542:	cmp	r3, r2
   28544:	beq.n	28558 <btrfs_alloc_chunk@@Base+0x644>
   28546:	ldr	r0, [sp, #108]	; 0x6c
   28548:	ldr	r2, [sp, #48]	; 0x30
   2854a:	ldr	r1, [sp, #200]	; 0xc8
   2854c:	ldr	r2, [r2, #72]	; 0x48
   2854e:	str	r0, [r3, #4]
   28550:	ldr	r0, [sp, #48]	; 0x30
   28552:	str	r3, [r0, #72]	; 0x48
   28554:	str	r2, [r1, #0]
   28556:	str	r1, [r2, #4]
   28558:	ldr	r3, [sp, #76]	; 0x4c
   2855a:	cmp	r3, r7
   2855c:	bgt.n	28576 <btrfs_alloc_chunk@@Base+0x662>
   2855e:	ldrd	r3, r4, [sp, #88]	; 0x58
   28562:	orrs	r3, r4
   28564:	beq.n	28592 <btrfs_alloc_chunk@@Base+0x67e>
   28566:	mov	r0, r7
   28568:	ldr	r1, [sp, #52]	; 0x34
   2856a:	bl	38690 <btrfs_util_strerror@@Base+0x290>
   2856e:	ldr	r3, [sp, #52]	; 0x34
   28570:	mul.w	r7, r0, r3
   28574:	b.n	28592 <btrfs_alloc_chunk@@Base+0x67e>
   28576:	ldr	r3, [sp, #168]	; 0xa8
   28578:	cmp	r3, #0
   2857a:	bne.w	27f60 <btrfs_alloc_chunk@@Base+0x4c>
   2857e:	ldrd	r3, r4, [sp, #96]	; 0x60
   28582:	orrs	r3, r4
   28584:	beq.w	27f60 <btrfs_alloc_chunk@@Base+0x4c>
   28588:	ldrd	r3, r4, [sp, #96]	; 0x60
   2858c:	mov	r7, fp
   2858e:	strd	r3, r4, [sp, #16]
   28592:	movs	r3, #1
   28594:	mov	fp, r7
   28596:	str	r3, [sp, #168]	; 0xa8
   28598:	b.n	2811c <btrfs_alloc_chunk@@Base+0x208>
   2859a:	ldr	r2, [r4, #32]
   2859c:	add	r1, sp, #224	; 0xe0
   2859e:	ldr	r0, [r4, #0]
   285a0:	bl	275bc <btrfs_add_root_ref@@Base+0x29c>
   285a4:	ldrd	r2, r3, [sp, #224]	; 0xe0
   285a8:	cmp	r3, #0
   285aa:	it	eq
   285ac:	cmpeq.w	r2, #256	; 0x100
   285b0:	bne.w	283b2 <btrfs_alloc_chunk@@Base+0x49e>
   285b4:	ldr	r3, [r4, #0]
   285b6:	movs	r1, #25
   285b8:	ldr	r2, [r4, #32]
   285ba:	adds	r3, #96	; 0x60
   285bc:	mla	r2, r1, r2, r3
   285c0:	ldr.w	r1, [sp, #237]	; 0xed
   285c4:	ldr.w	r2, [r2, #118]	; 0x76
   285c8:	add	r3, r2
   285ca:	ldr.w	r2, [r3, #101]!
   285ce:	ldr	r0, [r3, #4]
   285d0:	ldr.w	r3, [sp, #233]	; 0xe9
   285d4:	adds	r3, r2, r3
   285d6:	str	r3, [sp, #180]	; 0xb4
   285d8:	adc.w	r3, r0, r1
   285dc:	str	r3, [sp, #184]	; 0xb8
   285de:	b.n	283ba <btrfs_alloc_chunk@@Base+0x4a6>
   285e0:	ldr	r3, [sp, #52]	; 0x34
   285e2:	mov	r0, sl
   285e4:	ldr	r1, [sp, #120]	; 0x78
   285e6:	strd	fp, r3, [sp]
   285ea:	ldrd	r2, r3, [sp, #16]
   285ee:	bl	274bc <btrfs_add_root_ref@@Base+0x19c>
   285f2:	ldr	r3, [sp, #148]	; 0x94
   285f4:	str	r6, [sp, #76]	; 0x4c
   285f6:	strd	r0, r1, [r3]
   285fa:	add.w	r3, r7, #72	; 0x48
   285fe:	str	r3, [sp, #72]	; 0x48
   28600:	add.w	r3, r5, #48	; 0x30
   28604:	str	r3, [sp, #88]	; 0x58
   28606:	ldr.w	r3, [pc, #1112]	; 28a60 <btrfs_alloc_chunk@@Base+0xb4c>
   2860a:	add	r3, pc
   2860c:	adds	r3, #54	; 0x36
   2860e:	vmov	s21, r3
   28612:	ldr.w	r3, [pc, #1104]	; 28a64 <btrfs_alloc_chunk@@Base+0xb50>
   28616:	add	r3, pc
   28618:	vmov	s22, r3
   2861c:	ldr	r3, [sp, #76]	; 0x4c
   2861e:	ldr	r4, [sp, #196]	; 0xc4
   28620:	cmp	fp, r3
   28622:	bgt.w	28730 <btrfs_alloc_chunk@@Base+0x81c>
   28626:	ldr.w	r6, [pc, #1088]	; 28a68 <btrfs_alloc_chunk@@Base+0xb54>
   2862a:	add	r3, sp, #196	; 0xc4
   2862c:	ldr.w	r1, [pc, #1084]	; 28a6c <btrfs_alloc_chunk@@Base+0xb58>
   28630:	subs	r3, r4, r3
   28632:	add	r6, pc
   28634:	ldr.w	r0, [pc, #1080]	; 28a70 <btrfs_alloc_chunk@@Base+0xb5c>
   28638:	add.w	r6, r6, #54	; 0x36
   2863c:	add	r1, pc
   2863e:	it	ne
   28640:	movne	r3, #1
   28642:	add	r0, pc
   28644:	mov	r2, r6
   28646:	str	r3, [sp, #0]
   28648:	movw	r3, #1223	; 0x4c7
   2864c:	mov	r4, r1
   2864e:	bl	27578 <btrfs_add_root_ref@@Base+0x258>
   28652:	ldr	r3, [sp, #148]	; 0x94
   28654:	ldr	r1, [sp, #52]	; 0x34
   28656:	mov	r0, fp
   28658:	add.w	r8, sp, #204	; 0xcc
   2865c:	ldrd	r2, r3, [r3]
   28660:	strd	r2, r3, [r5]
   28664:	ldr	r3, [sp, #172]	; 0xac
   28666:	ldr.w	r2, [r3, #447]	; 0x1bf
   2866a:	ldr.w	r3, [r3, #451]	; 0x1c3
   2866e:	strh	r1, [r5, #46]	; 0x2e
   28670:	str	r1, [r7, #68]	; 0x44
   28672:	strd	r2, r3, [r5, #8]
   28676:	mov.w	r2, #65536	; 0x10000
   2867a:	movs	r3, #0
   2867c:	strd	r2, r3, [r5, #16]
   28680:	ldr	r2, [sp, #44]	; 0x2c
   28682:	ldr	r3, [sp, #120]	; 0x78
   28684:	str.w	sl, [r5, #24]
   28688:	ldr.w	r2, [r2, #388]	; 0x184
   2868c:	str	r3, [r5, #28]
   2868e:	mov.w	r3, #65536	; 0x10000
   28692:	strd	r3, r3, [r5, #32]
   28696:	strd	r3, r2, [r7, #56]	; 0x38
   2869a:	strd	r3, r3, [r7, #48]	; 0x30
   2869e:	ldr	r3, [sp, #120]	; 0x78
   286a0:	str	r2, [r5, #40]	; 0x28
   286a2:	strh.w	fp, [r5, #44]	; 0x2c
   286a6:	str	r3, [r7, #44]	; 0x2c
   286a8:	str.w	sl, [r7, #40]	; 0x28
   286ac:	str.w	fp, [r7, #64]	; 0x40
   286b0:	bl	27588 <btrfs_add_root_ref@@Base+0x268>
   286b4:	vmov	r1, s17
   286b8:	mov	r3, r5
   286ba:	mov	r2, r8
   286bc:	str	r0, [sp, #0]
   286be:	vmov	r0, s16
   286c2:	bl	1a9bc <btrfs_insert_item@@Base>
   286c6:	movw	r3, #1245	; 0x4dd
   286ca:	mov	r2, r6
   286cc:	mov	r1, r4
   286ce:	str	r0, [sp, #0]
   286d0:	ldr	r0, [pc, #928]	; (28a74 <btrfs_alloc_chunk@@Base+0xb60>)
   286d2:	add	r0, pc
   286d4:	bl	27578 <btrfs_add_root_ref@@Base+0x258>
   286d8:	ldr.w	r2, [sp, #213]	; 0xd5
   286dc:	ldr.w	r3, [sp, #217]	; 0xd9
   286e0:	ldr	r1, [sp, #176]	; 0xb0
   286e2:	strd	r2, r3, [r7, #24]
   286e6:	strd	r2, r3, [r1]
   286ea:	mov	r1, r7
   286ec:	ldr	r3, [sp, #148]	; 0x94
   286ee:	ldrd	r2, r3, [r3]
   286f2:	strd	r2, r3, [r7, #32]
   286f6:	ldr	r3, [sp, #44]	; 0x2c
   286f8:	add.w	r0, r3, #228	; 0xe4
   286fc:	bl	1558e <insert_cache_extent@@Base>
   28700:	subs.w	r9, r0, #0
   28704:	blt.n	287c2 <btrfs_alloc_chunk@@Base+0x8ae>
   28706:	and.w	r2, sl, #2
   2870a:	movs	r3, #0
   2870c:	orrs	r3, r2
   2870e:	beq.n	28726 <btrfs_alloc_chunk@@Base+0x812>
   28710:	mov	r0, fp
   28712:	bl	27588 <btrfs_add_root_ref@@Base+0x268>
   28716:	mov	r2, r5
   28718:	mov	r1, r8
   2871a:	mov	r3, r0
   2871c:	ldr	r0, [sp, #44]	; 0x2c
   2871e:	bl	27eb4 <btrfs_add_system_chunk@@Base>
   28722:	subs.w	r9, r0, #0
   28726:	mov	r0, r5
   28728:	mov	r6, r9
   2872a:	blx	8434 <free@plt+0x4>
   2872e:	b.n	27f64 <btrfs_alloc_chunk@@Base+0x50>
   28730:	add	r3, sp, #196	; 0xc4
   28732:	ldr	r0, [pc, #836]	; (28a78 <btrfs_alloc_chunk@@Base+0xb64>)
   28734:	subs	r2, r4, r3
   28736:	vmov	r1, s22
   2873a:	negs	r3, r2
   2873c:	add	r0, pc
   2873e:	adcs	r3, r2
   28740:	vmov	r2, s21
   28744:	str	r3, [sp, #0]
   28746:	movw	r3, #1196	; 0x4ac
   2874a:	bl	27578 <btrfs_add_root_ref@@Base+0x258>
   2874e:	ldrd	r2, r3, [sp, #56]	; 0x38
   28752:	orrs	r3, r2
   28754:	beq.n	28760 <btrfs_alloc_chunk@@Base+0x84c>
   28756:	ldr	r2, [sp, #76]	; 0x4c
   28758:	add.w	r3, fp, #4294967295	; 0xffffffff
   2875c:	cmp	r3, r2
   2875e:	bne.n	28778 <btrfs_alloc_chunk@@Base+0x864>
   28760:	ldrd	r2, r3, [r4]
   28764:	str	r3, [r2, #4]
   28766:	str	r2, [r3, #0]
   28768:	ldr	r3, [sp, #48]	; 0x30
   2876a:	ldr	r3, [r3, #72]	; 0x48
   2876c:	str	r4, [r3, #4]
   2876e:	str	r3, [r4, #0]
   28770:	ldr	r3, [sp, #108]	; 0x6c
   28772:	str	r3, [r4, #4]
   28774:	ldr	r3, [sp, #48]	; 0x30
   28776:	str	r4, [r3, #72]	; 0x48
   28778:	ldr.w	r3, [sp, #213]	; 0xd5
   2877c:	vmov	s18, r3
   28780:	ldr.w	r3, [sp, #217]	; 0xd9
   28784:	vmov	s19, r3
   28788:	ldr	r3, [r4, #8]
   2878a:	str	r3, [sp, #104]	; 0x68
   2878c:	ldrd	r2, r3, [r4, #72]	; 0x48
   28790:	strd	r2, r3, [sp, #80]	; 0x50
   28794:	ldr	r3, [sp, #104]	; 0x68
   28796:	ldr.w	r3, [r3, #464]	; 0x1d0
   2879a:	ldrd	r2, r3, [r3, #296]	; 0x128
   2879e:	cmp	r3, #0
   287a0:	it	eq
   287a2:	cmpeq.w	r2, #1048576	; 0x100000
   287a6:	strd	r2, r3, [sp, #24]
   287aa:	ittt	cc
   287ac:	movcc.w	r2, #1048576	; 0x100000
   287b0:	movcc	r3, #0
   287b2:	strdcc	r2, r3, [sp, #24]
   287b6:	bl	17544 <btrfs_alloc_path@@Base>
   287ba:	mov	r6, r0
   287bc:	cbnz	r0, 287ca <btrfs_alloc_chunk@@Base+0x8b6>
   287be:	mvn.w	r9, #11
   287c2:	mov	r0, r7
   287c4:	blx	8434 <free@plt+0x4>
   287c8:	b.n	28726 <btrfs_alloc_chunk@@Base+0x812>
   287ca:	ldrd	r2, r3, [sp, #24]
   287ce:	ldrd	r0, r1, [sp, #80]	; 0x50
   287d2:	cmp	r3, r1
   287d4:	it	eq
   287d6:	cmpeq	r2, r0
   287d8:	bcs.w	28a48 <btrfs_alloc_chunk@@Base+0xb34>
   287dc:	movs	r3, #2
   287de:	strb.w	r3, [r6, #64]	; 0x40
   287e2:	ldrd	r2, r3, [r4, #64]	; 0x40
   287e6:	movs	r0, #0
   287e8:	ldr	r1, [sp, #104]	; 0x68
   287ea:	strd	r0, r0, [sp]
   287ee:	strd	r2, r3, [sp, #224]	; 0xe0
   287f2:	add	r2, sp, #224	; 0xe0
   287f4:	ldr	r3, [sp, #24]
   287f6:	str.w	r3, [sp, #233]	; 0xe9
   287fa:	ldr	r3, [sp, #28]
   287fc:	str.w	r3, [sp, #237]	; 0xed
   28800:	movs	r3, #204	; 0xcc
   28802:	strb.w	r3, [sp, #232]	; 0xe8
   28806:	mov	r3, r6
   28808:	bl	19930 <btrfs_search_slot@@Base>
   2880c:	subs.w	r9, r0, #0
   28810:	blt.n	288cc <btrfs_alloc_chunk@@Base+0x9b8>
   28812:	bne.n	288b4 <btrfs_alloc_chunk@@Base+0x9a0>
   28814:	ldrd	r2, r3, [sp, #24]
   28818:	strd	r2, r3, [sp, #32]
   2881c:	movs	r3, #0
   2881e:	movs	r2, #0
   28820:	strd	r2, r3, [sp, #64]	; 0x40
   28824:	add	r3, sp, #224	; 0xe0
   28826:	vmov	s20, r3
   2882a:	ldr.w	ip, [r6]
   2882e:	ldr.w	lr, [r6, #32]
   28832:	ldr.w	r3, [ip, #192]	; 0xc0
   28836:	cmp	r3, lr
   28838:	bhi.w	28974 <btrfs_alloc_chunk@@Base+0xa60>
   2883c:	mov.w	r3, #0
   28840:	strb.w	r3, [r6, #65]	; 0x41
   28844:	ldr	r3, [sp, #104]	; 0x68
   28846:	mov	r1, r6
   28848:	ldr.w	r0, [r3, #464]	; 0x1d0
   2884c:	bl	1ad64 <btrfs_next_sibling_tree_block@@Base>
   28850:	subs.w	r9, r0, #0
   28854:	beq.n	2882a <btrfs_alloc_chunk@@Base+0x916>
   28856:	blt.n	288cc <btrfs_alloc_chunk@@Base+0x9b8>
   28858:	ldrd	r2, r3, [sp, #32]
   2885c:	ldrd	r0, r1, [sp, #80]	; 0x50
   28860:	cmp	r3, r1
   28862:	it	eq
   28864:	cmpeq	r2, r0
   28866:	bcs.n	2889a <btrfs_alloc_chunk@@Base+0x986>
   28868:	ldr	r2, [sp, #32]
   2886a:	ldr	r3, [sp, #80]	; 0x50
   2886c:	subs	r3, r3, r2
   2886e:	ldr	r2, [sp, #36]	; 0x24
   28870:	str	r3, [sp, #136]	; 0x88
   28872:	ldr	r3, [sp, #84]	; 0x54
   28874:	sbc.w	r3, r3, r2
   28878:	str	r3, [sp, #140]	; 0x8c
   2887a:	ldrd	r0, r1, [sp, #136]	; 0x88
   2887e:	ldrd	r2, r3, [sp, #64]	; 0x40
   28882:	cmp	r3, r1
   28884:	it	eq
   28886:	cmpeq	r2, r0
   28888:	bcs.n	2889a <btrfs_alloc_chunk@@Base+0x986>
   2888a:	mov	r2, r0
   2888c:	mov	r3, r1
   2888e:	strd	r2, r3, [sp, #64]	; 0x40
   28892:	ldrd	r2, r3, [sp, #32]
   28896:	strd	r2, r3, [sp, #24]
   2889a:	ldrd	r2, r3, [sp, #64]	; 0x40
   2889e:	ldrd	r0, r1, [sp, #16]
   288a2:	cmp	r3, r1
   288a4:	it	eq
   288a6:	cmpeq	r2, r0
   288a8:	ite	cc
   288aa:	mvncc.w	r9, #27
   288ae:	movcs.w	r9, #0
   288b2:	b.n	288cc <btrfs_alloc_chunk@@Base+0x9b8>
   288b4:	ldrb.w	r3, [sp, #232]	; 0xe8
   288b8:	mov	r1, r6
   288ba:	ldr	r0, [sp, #104]	; 0x68
   288bc:	str	r3, [sp, #0]
   288be:	ldrd	r2, r3, [sp, #224]	; 0xe0
   288c2:	bl	1afe8 <btrfs_previous_item@@Base>
   288c6:	subs.w	r9, r0, #0
   288ca:	bge.n	28814 <btrfs_alloc_chunk@@Base+0x900>
   288cc:	mov	r0, r6
   288ce:	bl	17572 <btrfs_free_path@@Base>
   288d2:	cmp.w	r9, #0
   288d6:	bne.w	287c2 <btrfs_alloc_chunk@@Base+0x8ae>
   288da:	ldrd	r2, r3, [sp, #24]
   288de:	mov	r1, r4
   288e0:	vmov	r0, s16
   288e4:	strd	r2, r3, [sp, #8]
   288e8:	ldrd	r2, r3, [sp, #16]
   288ec:	strd	r2, r3, [sp]
   288f0:	vmov	r2, s18
   288f4:	vmov	r3, s19
   288f8:	bl	27a84 <btrfs_insert_dev_extent@@Base>
   288fc:	subs.w	r9, r0, #0
   28900:	blt.w	287c2 <btrfs_alloc_chunk@@Base+0x8ae>
   28904:	ldrd	r3, r2, [r4, #80]	; 0x50
   28908:	ldr	r1, [sp, #16]
   2890a:	vmov	r0, s16
   2890e:	adds	r3, r3, r1
   28910:	ldr	r1, [sp, #20]
   28912:	adc.w	r2, r1, r2
   28916:	mov	r1, r4
   28918:	strd	r3, r2, [r4, #80]	; 0x50
   2891c:	bl	27dd0 <btrfs_update_device@@Base>
   28920:	ldr	r3, [sp, #72]	; 0x48
   28922:	adds	r3, #16
   28924:	str	r3, [sp, #72]	; 0x48
   28926:	ldr	r3, [sp, #88]	; 0x58
   28928:	add.w	r1, r3, #32
   2892c:	subs.w	r9, r0, #0
   28930:	blt.w	287c2 <btrfs_alloc_chunk@@Base+0x8ae>
   28934:	ldr	r3, [sp, #72]	; 0x48
   28936:	str.w	r4, [r3, #-16]
   2893a:	mov	r0, r3
   2893c:	ldrd	r2, r3, [sp, #24]
   28940:	strd	r2, r3, [r0, #-8]
   28944:	ldrd	r2, r3, [r4, #64]	; 0x40
   28948:	strd	r2, r3, [r1, #-32]
   2894c:	ldrd	r2, r3, [sp, #24]
   28950:	strd	r2, r3, [r1, #-24]
   28954:	add.w	r3, r4, #112	; 0x70
   28958:	ldr	r2, [sp, #88]	; 0x58
   2895a:	adds	r4, #128	; 0x80
   2895c:	adds	r2, #16
   2895e:	ldr.w	r0, [r3], #4
   28962:	cmp	r3, r4
   28964:	str.w	r0, [r2], #4
   28968:	bne.n	2895e <btrfs_alloc_chunk@@Base+0xa4a>
   2896a:	ldr	r3, [sp, #76]	; 0x4c
   2896c:	str	r1, [sp, #88]	; 0x58
   2896e:	adds	r3, #1
   28970:	str	r3, [sp, #76]	; 0x4c
   28972:	b.n	2861c <btrfs_alloc_chunk@@Base+0x708>
   28974:	mov	r2, lr
   28976:	vmov	r1, s20
   2897a:	mov	r0, ip
   2897c:	str.w	lr, [sp, #124]	; 0x7c
   28980:	str.w	ip, [sp, #96]	; 0x60
   28984:	bl	275bc <btrfs_add_root_ref@@Base+0x29c>
   28988:	ldrd	r8, r9, [sp, #224]	; 0xe0
   2898c:	ldrd	r2, r3, [r4, #64]	; 0x40
   28990:	cmp	r9, r3
   28992:	it	eq
   28994:	cmpeq	r8, r2
   28996:	bcc.n	28a40 <btrfs_alloc_chunk@@Base+0xb2c>
   28998:	cmp	r3, r9
   2899a:	it	eq
   2899c:	cmpeq	r2, r8
   2899e:	bcc.w	28858 <btrfs_alloc_chunk@@Base+0x944>
   289a2:	ldrb.w	r3, [sp, #232]	; 0xe8
   289a6:	cmp	r3, #204	; 0xcc
   289a8:	bne.n	28a40 <btrfs_alloc_chunk@@Base+0xb2c>
   289aa:	ldrd	r2, r3, [sp, #32]
   289ae:	ldr.w	r9, [sp, #237]	; 0xed
   289b2:	ldr.w	r8, [sp, #233]	; 0xe9
   289b6:	cmp	r3, r9
   289b8:	ldr.w	ip, [sp, #96]	; 0x60
   289bc:	it	eq
   289be:	cmpeq	r2, r8
   289c0:	ldr.w	lr, [sp, #124]	; 0x7c
   289c4:	bcs.n	28a06 <btrfs_alloc_chunk@@Base+0xaf2>
   289c6:	ldr	r3, [sp, #32]
   289c8:	subs.w	r3, r8, r3
   289cc:	str	r3, [sp, #112]	; 0x70
   289ce:	ldr	r3, [sp, #36]	; 0x24
   289d0:	sbc.w	r3, r9, r3
   289d4:	str	r3, [sp, #116]	; 0x74
   289d6:	ldrd	r0, r1, [sp, #112]	; 0x70
   289da:	ldrd	r2, r3, [sp, #64]	; 0x40
   289de:	cmp	r3, r1
   289e0:	it	eq
   289e2:	cmpeq	r2, r0
   289e4:	bcs.n	289f6 <btrfs_alloc_chunk@@Base+0xae2>
   289e6:	mov	r2, r0
   289e8:	mov	r3, r1
   289ea:	strd	r2, r3, [sp, #64]	; 0x40
   289ee:	ldrd	r2, r3, [sp, #32]
   289f2:	strd	r2, r3, [sp, #24]
   289f6:	ldrd	r2, r3, [sp, #112]	; 0x70
   289fa:	ldrd	r0, r1, [sp, #16]
   289fe:	cmp	r3, r1
   28a00:	it	eq
   28a02:	cmpeq	r2, r0
   28a04:	bcs.n	28a4e <btrfs_alloc_chunk@@Base+0xb3a>
   28a06:	add.w	r0, ip, #96	; 0x60
   28a0a:	movs	r3, #25
   28a0c:	mla	r2, r3, lr, r0
   28a10:	ldr.w	r3, [r2, #118]	; 0x76
   28a14:	add	r0, r3
   28a16:	ldr.w	r3, [r0, #125]!
   28a1a:	adds.w	r3, r3, r8
   28a1e:	str	r3, [sp, #160]	; 0xa0
   28a20:	ldr	r2, [r0, #4]
   28a22:	adc.w	r3, r2, r9
   28a26:	str	r3, [sp, #164]	; 0xa4
   28a28:	ldrd	r0, r1, [sp, #160]	; 0xa0
   28a2c:	ldrd	r2, r3, [sp, #32]
   28a30:	cmp	r3, r1
   28a32:	it	eq
   28a34:	cmpeq	r2, r0
   28a36:	ittt	cc
   28a38:	movcc	r2, r0
   28a3a:	movcc	r3, r1
   28a3c:	strdcc	r2, r3, [sp, #32]
   28a40:	ldr	r3, [r6, #32]
   28a42:	adds	r3, #1
   28a44:	str	r3, [r6, #32]
   28a46:	b.n	2882a <btrfs_alloc_chunk@@Base+0x916>
   28a48:	mvn.w	r9, #27
   28a4c:	b.n	288cc <btrfs_alloc_chunk@@Base+0x9b8>
   28a4e:	mov.w	r9, #0
   28a52:	b.n	288cc <btrfs_alloc_chunk@@Base+0x9b8>
   28a54:	mov	r0, r6
   28a56:	add	sp, #252	; 0xfc
   28a58:	vpop	{d8-d11}
   28a5c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28a60:	strb	r2, [r6, #8]
   28a62:	movs	r1, r0
   28a64:	ldr	r1, [r1, #52]	; 0x34
   28a66:	movs	r1, r0
   28a68:	strb	r2, [r1, #8]
   28a6a:	movs	r1, r0
   28a6c:	ldr	r3, [r4, #48]	; 0x30
   28a6e:	movs	r1, r0
   28a70:	ldr	r7, [r4, #48]	; 0x30
   28a72:	movs	r1, r0
   28a74:	lsrs	r2, r2, #24
   28a76:	movs	r1, r0
   28a78:	ldr	r6, [r5, #32]
   28a7a:	movs	r1, r0

00028a7c <btrfs_alloc_data_chunk@@Base>:
   28a7c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28a80:	mov	r7, r1
   28a82:	vpush	{d8}
   28a86:	mov	r8, r0
   28a88:	ldr	r1, [pc, #504]	; (28c84 <btrfs_alloc_data_chunk@@Base+0x208>)
   28a8a:	ldr.w	r6, [r7, #352]	; 0x160
   28a8e:	add	r1, pc
   28a90:	sub	sp, #60	; 0x3c
   28a92:	ldrd	sl, fp, [r2]
   28a96:	ldr	r3, [sp, #104]	; 0x68
   28a98:	cmp	fp, fp
   28a9a:	str	r3, [sp, #16]
   28a9c:	ldr	r3, [sp, #108]	; 0x6c
   28a9e:	str	r3, [sp, #20]
   28aa0:	ldr	r3, [pc, #484]	; (28c88 <btrfs_alloc_data_chunk@@Base+0x20c>)
   28aa2:	ldr	r3, [r1, r3]
   28aa4:	ldr	r3, [r3, #0]
   28aa6:	str	r3, [sp, #52]	; 0x34
   28aa8:	mov.w	r3, #0
   28aac:	ldr	r3, [r7, #24]
   28aae:	str	r3, [sp, #24]
   28ab0:	ldr	r3, [r7, #32]
   28ab2:	vmov	s17, r3
   28ab6:	ldr.w	r3, [r7, #388]	; 0x184
   28aba:	rsb	r1, r3, #0
   28abe:	mov	r3, fp
   28ac0:	and.w	r2, r1, sl
   28ac4:	it	eq
   28ac6:	cmpeq	sl, r2
   28ac8:	beq.n	28aee <btrfs_alloc_data_chunk@@Base+0x72>
   28aca:	ldr	r0, [pc, #448]	; (28c8c <btrfs_alloc_data_chunk@@Base+0x210>)
   28acc:	mov	r2, sl
   28ace:	mvn.w	r5, #21
   28ad2:	add	r0, pc
   28ad4:	bl	16b70 <__btrfs_error@@Base>
   28ad8:	ldr	r2, [pc, #436]	; (28c90 <btrfs_alloc_data_chunk@@Base+0x214>)
   28ada:	ldr	r3, [pc, #428]	; (28c88 <btrfs_alloc_data_chunk@@Base+0x20c>)
   28adc:	add	r2, pc
   28ade:	ldr	r3, [r2, r3]
   28ae0:	ldr	r2, [r3, #0]
   28ae2:	ldr	r3, [sp, #52]	; 0x34
   28ae4:	eors	r2, r3
   28ae6:	beq.w	28c78 <btrfs_alloc_data_chunk@@Base+0x1fc>
   28aea:	blx	8510 <__stack_chk_fail@plt>
   28aee:	movs	r0, #1
   28af0:	mov.w	r2, #256	; 0x100
   28af4:	movs	r3, #0
   28af6:	str.w	sl, [sp, #41]	; 0x29
   28afa:	strd	r2, r3, [sp, #32]
   28afe:	movs	r3, #228	; 0xe4
   28b00:	str.w	fp, [sp, #45]	; 0x2d
   28b04:	strb.w	r3, [sp, #40]	; 0x28
   28b08:	bl	27588 <btrfs_add_root_ref@@Base+0x268>
   28b0c:	blx	8678 <malloc@plt+0x4>
   28b10:	mov	r4, r0
   28b12:	cbz	r0, 28b24 <btrfs_alloc_data_chunk@@Base+0xa8>
   28b14:	movs	r0, #88	; 0x58
   28b16:	blx	8678 <malloc@plt+0x4>
   28b1a:	mov	r5, r0
   28b1c:	cbnz	r0, 28b2a <btrfs_alloc_data_chunk@@Base+0xae>
   28b1e:	mov	r0, r4
   28b20:	blx	8434 <free@plt+0x4>
   28b24:	mvn.w	r5, #11
   28b28:	b.n	28ad8 <btrfs_alloc_data_chunk@@Base+0x5c>
   28b2a:	ldr	r3, [sp, #16]
   28b2c:	mov	r2, sl
   28b2e:	ldr	r6, [r6, #72]	; 0x48
   28b30:	mov	r0, r8
   28b32:	strd	sl, fp, [sp, #8]
   28b36:	str	r3, [sp, #0]
   28b38:	ldr	r3, [sp, #20]
   28b3a:	mov	r1, r6
   28b3c:	ldr.w	r9, [pc, #340]	; 28c94 <btrfs_alloc_data_chunk@@Base+0x218>
   28b40:	str	r3, [sp, #4]
   28b42:	mov	r3, fp
   28b44:	bl	27a84 <btrfs_insert_dev_extent@@Base>
   28b48:	ldr	r2, [pc, #332]	; (28c98 <btrfs_alloc_data_chunk@@Base+0x21c>)
   28b4a:	ldr	r1, [pc, #336]	; (28c9c <btrfs_alloc_data_chunk@@Base+0x220>)
   28b4c:	add	r9, pc
   28b4e:	add	r2, pc
   28b50:	movw	r3, #1332	; 0x534
   28b54:	add	r1, pc
   28b56:	adds	r2, #72	; 0x48
   28b58:	str	r2, [sp, #28]
   28b5a:	vmov	s16, r1
   28b5e:	str	r0, [sp, #0]
   28b60:	mov	r0, r9
   28b62:	bl	27578 <btrfs_add_root_ref@@Base+0x258>
   28b66:	ldrd	r3, r1, [r6, #80]	; 0x50
   28b6a:	ldr	r2, [sp, #16]
   28b6c:	mov	r0, r8
   28b6e:	adds	r3, r3, r2
   28b70:	ldr	r2, [sp, #20]
   28b72:	adc.w	r1, r2, r1
   28b76:	strd	r3, r1, [r6, #80]	; 0x50
   28b7a:	mov	r1, r6
   28b7c:	bl	27dd0 <btrfs_update_device@@Base>
   28b80:	ldr	r2, [sp, #28]
   28b82:	mov.w	r3, #1336	; 0x538
   28b86:	vmov	r1, s16
   28b8a:	str	r0, [sp, #0]
   28b8c:	mov	r0, r9
   28b8e:	bl	27578 <btrfs_add_root_ref@@Base+0x258>
   28b92:	str	r6, [r5, #72]	; 0x48
   28b94:	strd	sl, fp, [r5, #80]	; 0x50
   28b98:	add.w	ip, r4, #64	; 0x40
   28b9c:	ldrd	r2, r3, [r6, #64]	; 0x40
   28ba0:	strd	sl, fp, [r4, #56]	; 0x38
   28ba4:	strd	r2, r3, [r4, #48]	; 0x30
   28ba8:	add.w	r3, r6, #112	; 0x70
   28bac:	adds	r6, #128	; 0x80
   28bae:	ldr	r0, [r3, #0]
   28bb0:	adds	r3, #8
   28bb2:	ldr.w	r1, [r3, #-4]
   28bb6:	cmp	r3, r6
   28bb8:	mov	r2, ip
   28bba:	stmia	r2!, {r0, r1}
   28bbc:	mov	ip, r2
   28bbe:	bne.n	28bae <btrfs_alloc_data_chunk@@Base+0x132>
   28bc0:	ldr	r3, [sp, #16]
   28bc2:	movs	r0, #1
   28bc4:	movs	r1, #0
   28bc6:	mov.w	r6, #65537	; 0x10001
   28bca:	str	r3, [r4, #0]
   28bcc:	ldr	r3, [sp, #20]
   28bce:	str	r3, [r4, #4]
   28bd0:	ldr	r3, [sp, #24]
   28bd2:	ldr.w	r2, [r3, #447]	; 0x1bf
   28bd6:	ldr.w	r3, [r3, #451]	; 0x1c3
   28bda:	strd	r0, r1, [r4, #24]
   28bde:	str	r6, [r4, #44]	; 0x2c
   28be0:	strd	r2, r3, [r4, #8]
   28be4:	mov.w	r2, #65536	; 0x10000
   28be8:	movs	r3, #0
   28bea:	strd	r2, r3, [r4, #16]
   28bee:	ldr.w	r2, [r7, #388]	; 0x184
   28bf2:	mov.w	r3, #65536	; 0x10000
   28bf6:	strd	r0, r1, [r5, #40]	; 0x28
   28bfa:	strd	r3, r3, [r4, #32]
   28bfe:	strd	r3, r2, [r5, #56]	; 0x38
   28c02:	str	r2, [r4, #40]	; 0x28
   28c04:	strd	r3, r3, [r5, #48]	; 0x30
   28c08:	strd	r0, r0, [r5, #64]	; 0x40
   28c0c:	bl	27588 <btrfs_add_root_ref@@Base+0x268>
   28c10:	vmov	r1, s17
   28c14:	add	r2, sp, #32
   28c16:	mov	r3, r4
   28c18:	ldr	r6, [pc, #132]	; (28ca0 <btrfs_alloc_data_chunk@@Base+0x224>)
   28c1a:	add	r6, pc
   28c1c:	str	r0, [sp, #0]
   28c1e:	mov	r0, r8
   28c20:	bl	1a9bc <btrfs_insert_item@@Base>
   28c24:	ldr.w	r8, [pc, #124]	; 28ca4 <btrfs_alloc_data_chunk@@Base+0x228>
   28c28:	ldr	r2, [pc, #124]	; (28ca8 <btrfs_alloc_data_chunk@@Base+0x22c>)
   28c2a:	movw	r3, #1367	; 0x557
   28c2e:	add	r8, pc
   28c30:	add	r2, pc
   28c32:	adds	r2, #72	; 0x48
   28c34:	mov	r1, r8
   28c36:	str	r2, [sp, #24]
   28c38:	str	r0, [sp, #0]
   28c3a:	mov	r0, r6
   28c3c:	bl	27578 <btrfs_add_root_ref@@Base+0x258>
   28c40:	ldr.w	r1, [sp, #41]	; 0x29
   28c44:	ldr.w	r3, [sp, #45]	; 0x2d
   28c48:	add.w	r0, r7, #228	; 0xe4
   28c4c:	strd	r1, r3, [r5, #24]
   28c50:	mov	r1, r5
   28c52:	ldr	r3, [sp, #16]
   28c54:	str	r3, [r5, #32]
   28c56:	ldr	r3, [sp, #20]
   28c58:	str	r3, [r5, #36]	; 0x24
   28c5a:	bl	1558e <insert_cache_extent@@Base>
   28c5e:	ldr	r2, [sp, #24]
   28c60:	movw	r3, #1373	; 0x55d
   28c64:	mov	r1, r8
   28c66:	str	r0, [sp, #0]
   28c68:	mov	r5, r0
   28c6a:	mov	r0, r6
   28c6c:	bl	27578 <btrfs_add_root_ref@@Base+0x258>
   28c70:	mov	r0, r4
   28c72:	blx	8434 <free@plt+0x4>
   28c76:	b.n	28ad8 <btrfs_alloc_data_chunk@@Base+0x5c>
   28c78:	mov	r0, r5
   28c7a:	add	sp, #60	; 0x3c
   28c7c:	vpop	{d8}
   28c80:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28c84:	uxtb	r6, r6
   28c86:	movs	r3, r0
   28c88:	lsls	r0, r4, #8
   28c8a:	movs	r0, r0
   28c8c:	str	r2, [r6, #104]	; 0x68
   28c8e:	movs	r1, r0
   28c90:	uxth	r0, r5
   28c92:	movs	r3, r0
   28c94:	lsrs	r0, r3, #6
   28c96:	movs	r1, r0
   28c98:	ldr	r6, [r5, #76]	; 0x4c
   28c9a:	movs	r1, r0
   28c9c:	str	r3, [r1, #96]	; 0x60
   28c9e:	movs	r1, r0
   28ca0:	lsrs	r2, r1, #3
   28ca2:	movs	r1, r0
   28ca4:	str	r1, [r6, #80]	; 0x50
   28ca6:	movs	r1, r0
   28ca8:	ldr	r4, [r1, #64]	; 0x40
   28caa:	movs	r1, r0

00028cac <btrfs_num_copies@@Base>:
   28cac:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28cb0:	sub	sp, #44	; 0x2c
   28cb2:	adds	r0, #228	; 0xe4
   28cb4:	mov	r4, r2
   28cb6:	ldrd	fp, r1, [sp, #80]	; 0x50
   28cba:	mov	r5, r3
   28cbc:	ldr.w	sl, [pc, #196]	; 28d84 <btrfs_num_copies@@Base+0xd8>
   28cc0:	str	r1, [sp, #36]	; 0x24
   28cc2:	bl	156d0 <search_cache_extent@@Base>
   28cc6:	add	sl, pc
   28cc8:	ldr	r1, [sp, #36]	; 0x24
   28cca:	cbnz	r0, 28cf6 <btrfs_num_copies@@Base+0x4a>
   28ccc:	ldr	r3, [pc, #184]	; (28d88 <btrfs_num_copies@@Base+0xdc>)
   28cce:	adds.w	r2, r4, fp
   28cd2:	adc.w	r1, r5, r1
   28cd6:	ldr.w	r3, [sl, r3]
   28cda:	strd	r2, r1, [sp, #8]
   28cde:	movs	r1, #1
   28ce0:	ldr	r2, [pc, #168]	; (28d8c <btrfs_num_copies@@Base+0xe0>)
   28ce2:	strd	r4, r5, [sp]
   28ce6:	add	r2, pc
   28ce8:	ldr	r0, [r3, #0]
   28cea:	blx	8860 <__fprintf_chk@plt+0x4>
   28cee:	movs	r0, #1
   28cf0:	add	sp, #44	; 0x2c
   28cf2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28cf6:	ldrd	r8, r9, [r0, #24]
   28cfa:	ldrd	r3, r2, [r0, #32]
   28cfe:	adds.w	r6, r8, r3
   28d02:	adc.w	r7, r9, r2
   28d06:	cmp	r5, r9
   28d08:	it	eq
   28d0a:	cmpeq	r4, r8
   28d0c:	bcc.n	28d16 <btrfs_num_copies@@Base+0x6a>
   28d0e:	cmp	r7, r5
   28d10:	it	eq
   28d12:	cmpeq	r6, r4
   28d14:	bcs.n	28d42 <btrfs_num_copies@@Base+0x96>
   28d16:	ldr	r3, [pc, #112]	; (28d88 <btrfs_num_copies@@Base+0xdc>)
   28d18:	adds.w	r2, r4, fp
   28d1c:	adc.w	r1, r5, r1
   28d20:	ldr.w	r3, [sl, r3]
   28d24:	strd	r2, r1, [sp, #8]
   28d28:	movs	r1, #1
   28d2a:	ldr	r2, [pc, #100]	; (28d90 <btrfs_num_copies@@Base+0xe4>)
   28d2c:	strd	r6, r7, [sp, #24]
   28d30:	strd	r8, r9, [sp, #16]
   28d34:	add	r2, pc
   28d36:	strd	r4, r5, [sp]
   28d3a:	ldr	r0, [r3, #0]
   28d3c:	blx	8860 <__fprintf_chk@plt+0x4>
   28d40:	b.n	28cee <btrfs_num_copies@@Base+0x42>
   28d42:	ldr	r2, [r0, #40]	; 0x28
   28d44:	movs	r3, #0
   28d46:	mov	r5, r3
   28d48:	and.w	r4, r2, #1584	; 0x630
   28d4c:	orrs.w	r1, r4, r5
   28d50:	beq.n	28d56 <btrfs_num_copies@@Base+0xaa>
   28d52:	ldr	r0, [r0, #64]	; 0x40
   28d54:	b.n	28cf0 <btrfs_num_copies@@Base+0x44>
   28d56:	and.w	r4, r2, #64	; 0x40
   28d5a:	orrs.w	r1, r4, r5
   28d5e:	beq.n	28d64 <btrfs_num_copies@@Base+0xb8>
   28d60:	ldr	r0, [r0, #68]	; 0x44
   28d62:	b.n	28cf0 <btrfs_num_copies@@Base+0x44>
   28d64:	and.w	r0, r2, #128	; 0x80
   28d68:	mov	r1, r3
   28d6a:	orrs	r1, r0
   28d6c:	bne.n	28d80 <btrfs_num_copies@@Base+0xd4>
   28d6e:	and.w	r0, r2, #256	; 0x100
   28d72:	mov	r1, r3
   28d74:	orrs.w	r3, r0, r1
   28d78:	ite	ne
   28d7a:	movne	r0, #3
   28d7c:	moveq	r0, #1
   28d7e:	b.n	28cf0 <btrfs_num_copies@@Base+0x44>
   28d80:	movs	r0, #2
   28d82:	b.n	28cf0 <btrfs_num_copies@@Base+0x44>
   28d84:	sub	sp, #248	; 0xf8
   28d86:	movs	r3, r0
   28d88:	lsls	r0, r6, #8
   28d8a:	movs	r0, r0
   28d8c:	str	r4, [r1, #76]	; 0x4c
   28d8e:	movs	r1, r0
   28d90:	str	r0, [r3, #72]	; 0x48
   28d92:	movs	r1, r0

00028d94 <btrfs_next_bg@@Base>:
   28d94:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28d98:	adds	r0, #228	; 0xe4
   28d9a:	ldrd	r4, r5, [r1]
   28d9e:	mov	r7, r2
   28da0:	ldrd	sl, fp, [sp, #40]	; 0x28
   28da4:	mov	r6, r1
   28da6:	mov	r2, r4
   28da8:	mov	r3, r5
   28daa:	bl	156d0 <search_cache_extent@@Base>
   28dae:	cbz	r0, 28dbc <btrfs_next_bg@@Base+0x28>
   28db0:	orrs.w	r3, r4, r5
   28db4:	beq.n	28dc4 <btrfs_next_bg@@Base+0x30>
   28db6:	bl	157a4 <next_cache_extent@@Base>
   28dba:	cbnz	r0, 28dc4 <btrfs_next_bg@@Base+0x30>
   28dbc:	mvn.w	r0, #1
   28dc0:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28dc4:	ldrd	r2, r3, [r0, #40]	; 0x28
   28dc8:	ldrd	r4, r5, [r0, #24]
   28dcc:	and.w	r8, sl, r2
   28dd0:	and.w	r9, fp, r3
   28dd4:	orrs.w	r3, r8, r9
   28dd8:	beq.n	28dea <btrfs_next_bg@@Base+0x56>
   28dda:	strd	r4, r5, [r6]
   28dde:	ldrd	r2, r3, [r0, #32]
   28de2:	movs	r0, #0
   28de4:	strd	r2, r3, [r7]
   28de8:	b.n	28dc0 <btrfs_next_bg@@Base+0x2c>
   28dea:	orrs.w	r3, r4, r5
   28dee:	bne.n	28dae <btrfs_next_bg@@Base+0x1a>
   28df0:	bl	157a4 <next_cache_extent@@Base>
   28df4:	b.n	28dae <btrfs_next_bg@@Base+0x1a>

00028df6 <btrfs_rmap_block@@Base>:
   28df6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28dfa:	adds	r0, #228	; 0xe4
   28dfc:	sub	sp, #60	; 0x3c
   28dfe:	bl	156d0 <search_cache_extent@@Base>
   28e02:	ldr	r2, [pc, #464]	; (28fd4 <btrfs_rmap_block@@Base+0x1de>)
   28e04:	ldr	r1, [pc, #464]	; (28fd8 <btrfs_rmap_block@@Base+0x1e2>)
   28e06:	movw	r3, #1467	; 0x5bb
   28e0a:	add	r2, pc
   28e0c:	adds	r2, #95	; 0x5f
   28e0e:	add	r1, pc
   28e10:	mov	r4, r0
   28e12:	clz	r0, r0
   28e16:	lsrs	r0, r0, #5
   28e18:	str	r0, [sp, #0]
   28e1a:	ldr	r0, [pc, #448]	; (28fdc <btrfs_rmap_block@@Base+0x1e6>)
   28e1c:	add	r0, pc
   28e1e:	bl	27578 <btrfs_add_root_ref@@Base+0x258>
   28e22:	ldr	r5, [r4, #56]	; 0x38
   28e24:	ldr	r0, [r4, #40]	; 0x28
   28e26:	movs	r1, #0
   28e28:	ldrd	r6, r7, [r4, #32]
   28e2c:	asrs	r3, r5, #31
   28e2e:	mov	r2, r5
   28e30:	strd	r2, r3, [sp, #8]
   28e34:	and.w	r2, r0, #64	; 0x40
   28e38:	mov	r3, r1
   28e3a:	orrs	r3, r2
   28e3c:	beq.n	28e8c <btrfs_rmap_block@@Base+0x96>
   28e3e:	ldrd	r0, r1, [r4, #64]	; 0x40
   28e42:	bl	38690 <btrfs_util_strerror@@Base+0x290>
   28e46:	mov	r2, r0
   28e48:	mov	r0, r6
   28e4a:	mov	r1, r7
   28e4c:	asrs	r3, r2, #31
   28e4e:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   28e52:	mov	r6, r0
   28e54:	mov	r7, r1
   28e56:	ldr	r1, [r4, #64]	; 0x40
   28e58:	movs	r0, #1
   28e5a:	mov.w	r8, #0
   28e5e:	mov	sl, r8
   28e60:	mov	r9, r8
   28e62:	lsls	r1, r1, #3
   28e64:	blx	839c <calloc@plt+0x4>
   28e68:	strd	r0, r4, [sp, #24]
   28e6c:	ldr	r5, [r4, #64]	; 0x40
   28e6e:	cmp	r5, r8
   28e70:	bgt.n	28eca <btrfs_rmap_block@@Base+0xd4>
   28e72:	ldr	r3, [sp, #104]	; 0x68
   28e74:	movs	r0, #0
   28e76:	ldr	r2, [sp, #24]
   28e78:	str	r2, [r3, #0]
   28e7a:	ldr	r3, [sp, #108]	; 0x6c
   28e7c:	ldr	r2, [sp, #8]
   28e7e:	str.w	r9, [r3]
   28e82:	ldr	r3, [sp, #112]	; 0x70
   28e84:	str	r2, [r3, #0]
   28e86:	add	sp, #60	; 0x3c
   28e88:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28e8c:	and.w	r8, r0, #8
   28e90:	mov	r9, r1
   28e92:	orrs.w	r3, r8, r9
   28e96:	ldr	r2, [r4, #64]	; 0x40
   28e98:	bne.n	28e48 <btrfs_rmap_block@@Base+0x52>
   28e9a:	and.w	r2, r0, #384	; 0x180
   28e9e:	mov	r3, r1
   28ea0:	orrs	r3, r2
   28ea2:	beq.n	28e56 <btrfs_rmap_block@@Base+0x60>
   28ea4:	mov	r0, r4
   28ea6:	bl	27420 <btrfs_add_root_ref@@Base+0x100>
   28eaa:	mov	r1, r7
   28eac:	asrs	r3, r0, #31
   28eae:	mov	r2, r0
   28eb0:	mov	r8, r0
   28eb2:	mov	r0, r6
   28eb4:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   28eb8:	mul.w	r5, r8, r5
   28ebc:	asrs	r3, r5, #31
   28ebe:	mov	r2, r5
   28ec0:	strd	r2, r3, [sp, #8]
   28ec4:	mov	r6, r0
   28ec6:	mov	r7, r1
   28ec8:	b.n	28e56 <btrfs_rmap_block@@Base+0x60>
   28eca:	ldr	r3, [sp, #28]
   28ecc:	ldrd	fp, ip, [r3, #80]	; 0x50
   28ed0:	ldrd	r2, r3, [sp, #96]	; 0x60
   28ed4:	cmp	r3, ip
   28ed6:	it	eq
   28ed8:	cmpeq	r2, fp
   28eda:	bcc.n	28f84 <btrfs_rmap_block@@Base+0x18e>
   28edc:	adds.w	r3, fp, r6
   28ee0:	str	r3, [sp, #32]
   28ee2:	adc.w	r3, ip, r7
   28ee6:	str	r3, [sp, #36]	; 0x24
   28ee8:	ldrd	r0, r1, [sp, #32]
   28eec:	ldrd	r2, r3, [sp, #96]	; 0x60
   28ef0:	cmp	r3, r1
   28ef2:	it	eq
   28ef4:	cmpeq	r2, r0
   28ef6:	bcs.n	28f84 <btrfs_rmap_block@@Base+0x18e>
   28ef8:	ldr	r1, [sp, #96]	; 0x60
   28efa:	ldr	r2, [r4, #56]	; 0x38
   28efc:	subs.w	r0, r1, fp
   28f00:	ldr	r1, [sp, #100]	; 0x64
   28f02:	mov.w	r3, r2, asr #31
   28f06:	sbc.w	r1, r1, ip
   28f0a:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   28f0e:	ldr	r3, [r4, #40]	; 0x28
   28f10:	and.w	r2, r3, #64	; 0x40
   28f14:	str	r2, [sp, #40]	; 0x28
   28f16:	movs	r2, #0
   28f18:	str	r2, [sp, #44]	; 0x2c
   28f1a:	ldrd	fp, ip, [sp, #40]	; 0x28
   28f1e:	orrs.w	r2, fp, ip
   28f22:	mov	lr, r0
   28f24:	beq.n	28f94 <btrfs_rmap_block@@Base+0x19e>
   28f26:	asrs	r3, r5, #31
   28f28:	ldr	r2, [r4, #68]	; 0x44
   28f2a:	muls	r1, r5
   28f2c:	mla	r1, lr, r3, r1
   28f30:	asrs	r3, r2, #31
   28f32:	umull	fp, ip, r5, lr
   28f36:	add	ip, r1
   28f38:	adds.w	r0, fp, r8
   28f3c:	adc.w	r1, ip, sl
   28f40:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   28f44:	mov	lr, r0
   28f46:	ldr	r3, [sp, #12]
   28f48:	ldr	r2, [sp, #8]
   28f4a:	mul.w	r3, lr, r3
   28f4e:	mla	r1, r2, r1, r3
   28f52:	umull	r2, r3, lr, r2
   28f56:	add	r3, r1
   28f58:	ldrd	r1, r0, [r4, #24]
   28f5c:	adds	r1, r2, r1
   28f5e:	str	r1, [sp, #16]
   28f60:	adcs	r3, r0
   28f62:	str	r3, [sp, #20]
   28f64:	ldr	r3, [sp, #24]
   28f66:	sub.w	r2, r3, #8
   28f6a:	movs	r3, #0
   28f6c:	cmp	r3, r9
   28f6e:	blt.n	28fbe <btrfs_rmap_block@@Base+0x1c8>
   28f70:	bne.n	28f84 <btrfs_rmap_block@@Base+0x18e>
   28f72:	ldr	r3, [sp, #24]
   28f74:	ldrd	r1, r2, [sp, #16]
   28f78:	add.w	r3, r3, r9, lsl #3
   28f7c:	add.w	r9, r9, #1
   28f80:	strd	r1, r2, [r3]
   28f84:	ldr	r3, [sp, #28]
   28f86:	adds.w	r8, r8, #1
   28f8a:	adc.w	sl, sl, #0
   28f8e:	adds	r3, #16
   28f90:	str	r3, [sp, #28]
   28f92:	b.n	28e6c <btrfs_rmap_block@@Base+0x76>
   28f94:	and.w	r3, r3, #8
   28f98:	str	r3, [sp, #48]	; 0x30
   28f9a:	movs	r3, #0
   28f9c:	str	r3, [sp, #52]	; 0x34
   28f9e:	ldrd	r2, r3, [sp, #48]	; 0x30
   28fa2:	orrs	r3, r2
   28fa4:	beq.n	28f46 <btrfs_rmap_block@@Base+0x150>
   28fa6:	asrs	r3, r5, #31
   28fa8:	muls	r1, r5
   28faa:	mla	r3, lr, r3, r1
   28fae:	umull	r0, r1, r5, lr
   28fb2:	add	r1, r3
   28fb4:	adds.w	lr, r0, r8
   28fb8:	adc.w	r1, r1, sl
   28fbc:	b.n	28f46 <btrfs_rmap_block@@Base+0x150>
   28fbe:	ldrd	r0, r1, [r2, #8]!
   28fc2:	ldrd	fp, ip, [sp, #16]
   28fc6:	cmp	r1, ip
   28fc8:	it	eq
   28fca:	cmpeq	r0, fp
   28fcc:	beq.n	28f84 <btrfs_rmap_block@@Base+0x18e>
   28fce:	adds	r3, #1
   28fd0:	b.n	28f6c <btrfs_rmap_block@@Base+0x176>
   28fd2:	nop
   28fd4:	ldr	r2, [r6, #32]
   28fd6:	movs	r1, r0
   28fd8:	str	r1, [r2, #52]	; 0x34
   28fda:	movs	r1, r0
   28fdc:	str	r6, [r3, #60]	; 0x3c
   28fde:	movs	r1, r0

00028fe0 <__btrfs_map_block@@Base>:
   28fe0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28fe4:	sub	sp, #124	; 0x7c
   28fe6:	mov	fp, r1
   28fe8:	strd	r2, r3, [sp, #16]
   28fec:	ldrd	r3, r5, [sp, #168]	; 0xa8
   28ff0:	cbz	r3, 2902a <__btrfs_map_block@@Base+0x4a>
   28ff2:	cmp	r1, #0
   28ff4:	ite	eq
   28ff6:	moveq	r7, #1
   28ff8:	movne	r7, #8
   28ffa:	add.w	sl, r0, #228	; 0xe4
   28ffe:	movs	r6, #1
   29000:	mov.w	r9, #0
   29004:	ldrd	r2, r3, [sp, #16]
   29008:	mov	r0, sl
   2900a:	bl	156d0 <search_cache_extent@@Base>
   2900e:	mov	r4, r0
   29010:	cbnz	r0, 2902e <__btrfs_map_block@@Base+0x4e>
   29012:	ldr	r1, [sp, #160]	; 0xa0
   29014:	mov.w	r2, #4294967295	; 0xffffffff
   29018:	mov.w	r3, #4294967295	; 0xffffffff
   2901c:	strd	r2, r3, [r1]
   29020:	mvn.w	r0, #1
   29024:	add	sp, #124	; 0x7c
   29026:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2902a:	movs	r7, #8
   2902c:	b.n	28ffa <__btrfs_map_block@@Base+0x1a>
   2902e:	ldrd	r2, r3, [r0, #24]
   29032:	strd	r2, r3, [sp, #24]
   29036:	ldrd	r0, r1, [sp, #24]
   2903a:	ldrd	r2, r3, [sp, #16]
   2903e:	cmp	r3, r1
   29040:	it	eq
   29042:	cmpeq	r2, r0
   29044:	bcs.n	2905c <__btrfs_map_block@@Base+0x7c>
   29046:	ldr	r3, [sp, #24]
   29048:	ldr	r2, [sp, #16]
   2904a:	ldr	r1, [sp, #20]
   2904c:	subs	r2, r3, r2
   2904e:	ldr	r3, [sp, #28]
   29050:	sbc.w	r3, r3, r1
   29054:	ldr	r1, [sp, #160]	; 0xa0
   29056:	str	r2, [r1, #0]
   29058:	str	r3, [r1, #4]
   2905a:	b.n	29020 <__btrfs_map_block@@Base+0x40>
   2905c:	ldr	r3, [sp, #168]	; 0xa8
   2905e:	cbz	r3, 29074 <__btrfs_map_block@@Base+0x94>
   29060:	lsls	r1, r7, #4
   29062:	movs	r0, #1
   29064:	adds	r1, #8
   29066:	blx	839c <calloc@plt+0x4>
   2906a:	mov	r8, r0
   2906c:	cbnz	r0, 29078 <__btrfs_map_block@@Base+0x98>
   2906e:	mvn.w	r0, #11
   29072:	b.n	29024 <__btrfs_map_block@@Base+0x44>
   29074:	ldr.w	r8, [sp, #168]	; 0xa8
   29078:	ldr	r3, [r4, #40]	; 0x28
   2907a:	cmp.w	fp, #1
   2907e:	str	r3, [sp, #76]	; 0x4c
   29080:	bne.n	29094 <__btrfs_map_block@@Base+0xb4>
   29082:	and.w	r3, r3, #1584	; 0x630
   29086:	strd	r3, r9, [sp, #8]
   2908a:	ldrd	r2, r3, [sp, #8]
   2908e:	orrs	r3, r2
   29090:	beq.n	290d0 <__btrfs_map_block@@Base+0xf0>
   29092:	ldr	r6, [r4, #64]	; 0x40
   29094:	ldr	r3, [sp, #76]	; 0x4c
   29096:	and.w	r3, r3, #384	; 0x180
   2909a:	strd	r3, r9, [sp, #48]	; 0x30
   2909e:	ldrd	r2, r3, [sp, #48]	; 0x30
   290a2:	orrs	r3, r2
   290a4:	ldr	r3, [sp, #168]	; 0xa8
   290a6:	beq.n	290e6 <__btrfs_map_block@@Base+0x106>
   290a8:	cbz	r3, 290f6 <__btrfs_map_block@@Base+0x116>
   290aa:	tst.w	fp, #1
   290ae:	bne.n	290b4 <__btrfs_map_block@@Base+0xd4>
   290b0:	cmp	r5, #1
   290b2:	ble.n	290e8 <__btrfs_map_block@@Base+0x108>
   290b4:	ldr	r3, [sp, #176]	; 0xb0
   290b6:	cbz	r3, 290e8 <__btrfs_map_block@@Base+0x108>
   290b8:	ldr	r6, [r4, #64]	; 0x40
   290ba:	cmp	r7, r6
   290bc:	blt.n	290ec <__btrfs_map_block@@Base+0x10c>
   290be:	lsls	r0, r6, #3
   290c0:	blx	8678 <malloc@plt+0x4>
   290c4:	str	r0, [sp, #8]
   290c6:	cbnz	r0, 290fa <__btrfs_map_block@@Base+0x11a>
   290c8:	mov	r0, r8
   290ca:	blx	8434 <free@plt+0x4>
   290ce:	b.n	2906e <__btrfs_map_block@@Base+0x8e>
   290d0:	ldr	r3, [sp, #76]	; 0x4c
   290d2:	and.w	r3, r3, #64	; 0x40
   290d6:	strd	r3, r9, [sp, #32]
   290da:	ldrd	r2, r3, [sp, #32]
   290de:	orrs	r3, r2
   290e0:	it	ne
   290e2:	ldrne	r6, [r4, #68]	; 0x44
   290e4:	b.n	29094 <__btrfs_map_block@@Base+0xb4>
   290e6:	cbz	r3, 290f6 <__btrfs_map_block@@Base+0x116>
   290e8:	cmp	r7, r6
   290ea:	bge.n	290f6 <__btrfs_map_block@@Base+0x116>
   290ec:	mov	r0, r8
   290ee:	mov	r7, r6
   290f0:	blx	8434 <free@plt+0x4>
   290f4:	b.n	29004 <__btrfs_map_block@@Base+0x24>
   290f6:	movs	r3, #0
   290f8:	str	r3, [sp, #8]
   290fa:	ldr	r2, [sp, #24]
   290fc:	ldr	r3, [sp, #16]
   290fe:	ldr	r6, [r4, #56]	; 0x38
   29100:	subs	r3, r3, r2
   29102:	ldr	r2, [sp, #28]
   29104:	str	r3, [sp, #64]	; 0x40
   29106:	ldr	r3, [sp, #20]
   29108:	sbc.w	r3, r3, r2
   2910c:	str	r3, [sp, #68]	; 0x44
   2910e:	mov	r2, r6
   29110:	asrs	r3, r6, #31
   29112:	ldrd	r0, r1, [sp, #64]	; 0x40
   29116:	strd	r2, r3, [sp, #80]	; 0x50
   2911a:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   2911e:	mov	r9, r2
   29120:	ldr	r2, [sp, #84]	; 0x54
   29122:	mov	r7, r0
   29124:	str	r3, [sp, #100]	; 0x64
   29126:	mul.w	r3, r6, r1
   2912a:	str	r1, [sp, #48]	; 0x30
   2912c:	mla	r3, r7, r2, r3
   29130:	mov	sl, r1
   29132:	umull	r1, r2, r6, r7
   29136:	str	r0, [sp, #32]
   29138:	strd	r1, r2, [sp, #56]	; 0x38
   2913c:	ldr	r2, [sp, #60]	; 0x3c
   2913e:	add	r3, r2
   29140:	str	r3, [sp, #60]	; 0x3c
   29142:	ldrd	r0, r1, [sp, #56]	; 0x38
   29146:	ldrd	r2, r3, [sp, #64]	; 0x40
   2914a:	cmp	r3, r1
   2914c:	ldr	r1, [pc, #952]	; (29508 <__btrfs_map_block@@Base+0x528>)
   2914e:	it	eq
   29150:	cmpeq	r2, r0
   29152:	ldr	r2, [pc, #952]	; (2950c <__btrfs_map_block@@Base+0x52c>)
   29154:	ldr	r0, [pc, #952]	; (29510 <__btrfs_map_block@@Base+0x530>)
   29156:	add	r1, pc
   29158:	add	r2, pc
   2915a:	ite	cc
   2915c:	movcc	r3, #1
   2915e:	movcs	r3, #0
   29160:	adds	r2, #112	; 0x70
   29162:	add	r0, pc
   29164:	str	r3, [sp, #0]
   29166:	movw	r3, #1638	; 0x666
   2916a:	bl	27578 <btrfs_add_root_ref@@Base+0x258>
   2916e:	ldr	r3, [sp, #76]	; 0x4c
   29170:	movs	r1, #0
   29172:	ldrd	r2, r6, [r4, #32]
   29176:	and.w	r0, r3, #2040	; 0x7f8
   2917a:	str.w	r9, [sp, #96]	; 0x60
   2917e:	orrs.w	r3, r0, r1
   29182:	ldr	r3, [sp, #24]
   29184:	ldr	r1, [sp, #16]
   29186:	beq.n	291e0 <__btrfs_map_block@@Base+0x200>
   29188:	subs	r3, r3, r1
   2918a:	ldr	r0, [sp, #20]
   2918c:	ldr	r1, [sp, #28]
   2918e:	sbc.w	r0, r1, r0
   29192:	ldr	r1, [sp, #80]	; 0x50
   29194:	adds.w	lr, r1, r3
   29198:	ldr	r1, [sp, #84]	; 0x54
   2919a:	adc.w	ip, r1, r0
   2919e:	adds	r3, r3, r2
   291a0:	str	r3, [sp, #88]	; 0x58
   291a2:	adc.w	r3, r0, r6
   291a6:	str	r3, [sp, #92]	; 0x5c
   291a8:	ldr	r3, [sp, #56]	; 0x38
   291aa:	adds.w	r3, lr, r3
   291ae:	str	r3, [sp, #40]	; 0x28
   291b0:	ldr	r3, [sp, #60]	; 0x3c
   291b2:	adc.w	r3, ip, r3
   291b6:	str	r3, [sp, #44]	; 0x2c
   291b8:	ldrd	r0, r1, [sp, #40]	; 0x28
   291bc:	ldrd	r2, r3, [sp, #88]	; 0x58
   291c0:	cmp	r3, r1
   291c2:	it	eq
   291c4:	cmpeq	r2, r0
   291c6:	bcs.n	291cc <__btrfs_map_block@@Base+0x1ec>
   291c8:	strd	r2, r3, [sp, #40]	; 0x28
   291cc:	ldr	r3, [sp, #160]	; 0xa0
   291ce:	mov	r1, r3
   291d0:	ldrd	r2, r3, [sp, #40]	; 0x28
   291d4:	strd	r2, r3, [r1]
   291d8:	ldr	r3, [sp, #168]	; 0xa8
   291da:	cbnz	r3, 291f6 <__btrfs_map_block@@Base+0x216>
   291dc:	movs	r0, #0
   291de:	b.n	29024 <__btrfs_map_block@@Base+0x44>
   291e0:	subs	r3, r3, r1
   291e2:	ldr	r0, [sp, #20]
   291e4:	ldr	r1, [sp, #28]
   291e6:	sbc.w	r1, r1, r0
   291ea:	adds	r3, r3, r2
   291ec:	str	r3, [sp, #40]	; 0x28
   291ee:	adc.w	r3, r1, r6
   291f2:	str	r3, [sp, #44]	; 0x2c
   291f4:	b.n	291cc <__btrfs_map_block@@Base+0x1ec>
   291f6:	movs	r3, #1
   291f8:	str.w	r3, [r8, #4]
   291fc:	ldr	r1, [r4, #40]	; 0x28
   291fe:	mov.w	r9, #0
   29202:	mov	r3, r9
   29204:	ldr	r0, [r4, #64]	; 0x40
   29206:	and.w	r2, r1, #1552	; 0x610
   2920a:	orrs	r3, r2
   2920c:	beq.n	29294 <__btrfs_map_block@@Base+0x2b4>
   2920e:	cmp.w	fp, #1
   29212:	bne.n	29280 <__btrfs_map_block@@Base+0x2a0>
   29214:	mov	r5, r9
   29216:	str.w	r0, [r8, #4]
   2921a:	ldr	r3, [r4, #64]	; 0x40
   2921c:	ldr	r2, [pc, #756]	; (29514 <__btrfs_map_block@@Base+0x534>)
   2921e:	cmp	r3, r5
   29220:	ldr	r1, [pc, #756]	; (29518 <__btrfs_map_block@@Base+0x538>)
   29222:	ldr	r0, [pc, #760]	; (2951c <__btrfs_map_block@@Base+0x53c>)
   29224:	add	r2, pc
   29226:	ite	gt
   29228:	movgt	r3, #0
   2922a:	movle	r3, #1
   2922c:	add	r1, pc
   2922e:	add	r0, pc
   29230:	str	r3, [sp, #0]
   29232:	adds	r2, #112	; 0x70
   29234:	movw	r3, #1748	; 0x6d4
   29238:	add.w	r5, r4, r5, lsl #4
   2923c:	bl	27578 <btrfs_add_root_ref@@Base+0x258>
   29240:	ldr.w	ip, [r8, #4]
   29244:	add.w	r1, r8, #8
   29248:	movs	r0, #0
   2924a:	cmp	ip, r0
   2924c:	add.w	r5, r5, #16
   29250:	add.w	r1, r1, #16
   29254:	bgt.w	29448 <__btrfs_map_block@@Base+0x468>
   29258:	ldr	r3, [sp, #168]	; 0xa8
   2925a:	str.w	r8, [r3]
   2925e:	ldr	r3, [sp, #164]	; 0xa4
   29260:	cbz	r3, 2926c <__btrfs_map_block@@Base+0x28c>
   29262:	ldrd	r2, r3, [r4, #40]	; 0x28
   29266:	ldr	r1, [sp, #164]	; 0xa4
   29268:	strd	r2, r3, [r1]
   2926c:	ldr	r3, [sp, #8]
   2926e:	cmp	r3, #0
   29270:	beq.n	291dc <__btrfs_map_block@@Base+0x1fc>
   29272:	movs	r0, #0
   29274:	add.w	r7, ip, #4294967295	; 0xffffffff
   29278:	add.w	r9, sp, #104	; 0x68
   2927c:	mov	r4, r0
   2927e:	b.n	294f0 <__btrfs_map_block@@Base+0x510>
   29280:	cbz	r5, 29286 <__btrfs_map_block@@Base+0x2a6>
   29282:	subs	r5, #1
   29284:	b.n	2921a <__btrfs_map_block@@Base+0x23a>
   29286:	asrs	r3, r0, #31
   29288:	mov	r2, r0
   2928a:	mov	r1, sl
   2928c:	mov	r0, r7
   2928e:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   29292:	b.n	292c4 <__btrfs_map_block@@Base+0x2e4>
   29294:	and.w	r2, r1, #64	; 0x40
   29298:	mov	r3, r9
   2929a:	orrs	r3, r2
   2929c:	beq.n	292d2 <__btrfs_map_block@@Base+0x2f2>
   2929e:	ldr	r6, [r4, #68]	; 0x44
   292a0:	mov	r1, r6
   292a2:	bl	38690 <btrfs_util_strerror@@Base+0x290>
   292a6:	mov	r1, sl
   292a8:	asrs	r3, r0, #31
   292aa:	mov	r2, r0
   292ac:	mov	r0, r7
   292ae:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   292b2:	cmp.w	fp, #1
   292b6:	mul.w	r2, r2, r6
   292ba:	bne.n	292c8 <__btrfs_map_block@@Base+0x2e8>
   292bc:	str.w	r6, [r8, #4]
   292c0:	str	r0, [sp, #32]
   292c2:	str	r1, [sp, #48]	; 0x30
   292c4:	mov	r5, r2
   292c6:	b.n	2921a <__btrfs_map_block@@Base+0x23a>
   292c8:	cmp	r5, #0
   292ca:	beq.n	292c0 <__btrfs_map_block@@Base+0x2e0>
   292cc:	subs	r5, #1
   292ce:	add	r2, r5
   292d0:	b.n	292c0 <__btrfs_map_block@@Base+0x2e0>
   292d2:	and.w	r2, r1, #32
   292d6:	mov	r3, r9
   292d8:	orrs	r3, r2
   292da:	beq.n	292e8 <__btrfs_map_block@@Base+0x308>
   292dc:	cmp.w	fp, #1
   292e0:	beq.n	29214 <__btrfs_map_block@@Base+0x234>
   292e2:	cmp	r5, #0
   292e4:	beq.n	2921a <__btrfs_map_block@@Base+0x23a>
   292e6:	b.n	29282 <__btrfs_map_block@@Base+0x2a2>
   292e8:	asrs	r3, r0, #31
   292ea:	mov	r2, r0
   292ec:	strd	r2, r3, [sp, #16]
   292f0:	and.w	r2, r1, #384	; 0x180
   292f4:	mov	r3, r9
   292f6:	orrs	r3, r2
   292f8:	beq.w	29434 <__btrfs_map_block@@Base+0x454>
   292fc:	mov	r0, r4
   292fe:	bl	27420 <btrfs_add_root_ref@@Base+0x100>
   29302:	asrs	r3, r0, #31
   29304:	mov	r2, r0
   29306:	strd	r2, r3, [sp, #24]
   2930a:	mov	r6, r0
   2930c:	ldr	r3, [sp, #8]
   2930e:	cmp	r3, #0
   29310:	beq.n	2940a <__btrfs_map_block@@Base+0x42a>
   29312:	ldr	r7, [r4, #56]	; 0x38
   29314:	mul.w	r5, r0, r7
   29318:	ldrd	r0, r1, [sp, #64]	; 0x40
   2931c:	mov.w	fp, r5, asr #31
   29320:	mov	r2, r5
   29322:	mov	r3, fp
   29324:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   29328:	mov	r2, r7
   2932a:	mul.w	r3, r5, r1
   2932e:	mla	r3, r0, fp, r3
   29332:	umull	r0, r1, r5, r0
   29336:	add	r1, r3
   29338:	asrs	r3, r7, #31
   2933a:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   2933e:	asrs	r3, r6, #31
   29340:	mov	r2, r6
   29342:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   29346:	ldrd	r2, r3, [sp, #16]
   2934a:	str	r0, [sp, #32]
   2934c:	str	r1, [sp, #48]	; 0x30
   2934e:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   29352:	mov	r5, r2
   29354:	ldrd	r3, r2, [sp, #28]
   29358:	muls	r3, r2
   2935a:	ldr	r2, [sp, #48]	; 0x30
   2935c:	mla	r3, r6, r2, r3
   29360:	ldr	r2, [sp, #32]
   29362:	umull	r6, r7, r2, r6
   29366:	add	r7, r3
   29368:	mov	r0, r4
   2936a:	add.w	sl, r9, r5
   2936e:	bl	27420 <btrfs_add_root_ref@@Base+0x100>
   29372:	ldr	r1, [r4, #64]	; 0x40
   29374:	cmp	r0, r9
   29376:	mov	r0, sl
   29378:	bgt.n	293d2 <__btrfs_map_block@@Base+0x3f2>
   2937a:	bl	38924 <btrfs_util_strerror@@Base+0x524>
   2937e:	ldr	r3, [sp, #8]
   29380:	mvn.w	r2, #1
   29384:	add.w	r1, r3, r1, lsl #3
   29388:	mov.w	r3, #4294967295	; 0xffffffff
   2938c:	strd	r2, r3, [r1]
   29390:	movs	r3, #0
   29392:	ldr	r1, [r4, #40]	; 0x28
   29394:	and.w	r2, r1, #256	; 0x100
   29398:	orrs	r3, r2
   2939a:	beq.n	293b8 <__btrfs_map_block@@Base+0x3d8>
   2939c:	ldr	r1, [r4, #64]	; 0x40
   2939e:	add.w	r0, sl, #1
   293a2:	bl	38924 <btrfs_util_strerror@@Base+0x524>
   293a6:	ldr	r3, [sp, #8]
   293a8:	mov.w	r2, #4294967295	; 0xffffffff
   293ac:	add.w	r1, r3, r1, lsl #3
   293b0:	mov.w	r3, #4294967295	; 0xffffffff
   293b4:	strd	r2, r3, [r1]
   293b8:	ldr	r2, [r4, #56]	; 0x38
   293ba:	ldr	r1, [sp, #160]	; 0xa0
   293bc:	asrs	r3, r2, #31
   293be:	strd	r2, r3, [r1]
   293c2:	ldr	r3, [r4, #64]	; 0x40
   293c4:	str.w	r3, [r8, #4]
   293c8:	movs	r3, #0
   293ca:	mov	r5, r3
   293cc:	strd	r3, r3, [sp, #96]	; 0x60
   293d0:	b.n	2921a <__btrfs_map_block@@Base+0x23a>
   293d2:	bl	38924 <btrfs_util_strerror@@Base+0x524>
   293d6:	ldr	r0, [r4, #56]	; 0x38
   293d8:	ldr	r3, [sp, #8]
   293da:	add.w	r9, r9, #1
   293de:	mov.w	fp, r0, asr #31
   293e2:	mul.w	r2, r0, r7
   293e6:	add.w	ip, r3, r1, lsl #3
   293ea:	umull	r0, r1, r0, r6
   293ee:	mla	r3, r6, fp, r2
   293f2:	add	r1, r3
   293f4:	ldrd	r3, r2, [r4, #24]
   293f8:	adds	r3, r3, r0
   293fa:	adc.w	r2, r1, r2
   293fe:	adds	r6, #1
   29400:	adc.w	r7, r7, #0
   29404:	strd	r3, r2, [ip]
   29408:	b.n	29368 <__btrfs_map_block@@Base+0x388>
   2940a:	asrs	r3, r0, #31
   2940c:	mov	r1, sl
   2940e:	mov	r0, r7
   29410:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   29414:	cmp	r5, #1
   29416:	itte	gt
   29418:	addgt	r6, r6, r5
   2941a:	subgt	r6, #2
   2941c:	movle	r6, r2
   2941e:	mov	sl, r0
   29420:	str	r0, [sp, #32]
   29422:	adds.w	r0, sl, r6
   29426:	mov	fp, r1
   29428:	str	r1, [sp, #48]	; 0x30
   2942a:	ldrd	r2, r3, [sp, #16]
   2942e:	adc.w	r1, fp, r6, asr #31
   29432:	b.n	2928e <__btrfs_map_block@@Base+0x2ae>
   29434:	ldrd	r2, r3, [sp, #16]
   29438:	mov	r0, r7
   2943a:	mov	r1, sl
   2943c:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   29440:	mov	r5, r2
   29442:	str	r0, [sp, #32]
   29444:	str	r1, [sp, #48]	; 0x30
   29446:	b.n	2921a <__btrfs_map_block@@Base+0x23a>
   29448:	ldrd	r3, r2, [r5, #64]	; 0x40
   2944c:	adds	r0, #1
   2944e:	ldr	r6, [sp, #96]	; 0x60
   29450:	ldr.w	sl, [r4, #56]	; 0x38
   29454:	adds.w	lr, r6, r3
   29458:	ldr	r6, [sp, #100]	; 0x64
   2945a:	adc.w	r2, r6, r2
   2945e:	mov	r6, sl
   29460:	asrs	r7, r6, #31
   29462:	strd	r6, r7, [sp, #16]
   29466:	ldr	r6, [sp, #48]	; 0x30
   29468:	ldr	r7, [sp, #32]
   2946a:	ldr	r3, [sp, #20]
   2946c:	mul.w	r6, sl, r6
   29470:	mla	r6, r7, r3, r6
   29474:	umull	sl, fp, sl, r7
   29478:	adds.w	r3, lr, sl
   2947c:	add	fp, r6
   2947e:	adc.w	r2, r2, fp
   29482:	strd	r3, r2, [r1, #-8]
   29486:	ldr	r3, [r5, #56]	; 0x38
   29488:	str.w	r3, [r1, #-16]
   2948c:	b.n	2924a <__btrfs_map_block@@Base+0x26a>
   2948e:	ldr	r3, [sp, #8]
   29490:	add.w	lr, r4, #1
   29494:	add.w	sl, r3, r4, lsl #3
   29498:	add.w	ip, sl, #8
   2949c:	ldrd	r2, r3, [sl]
   294a0:	strd	r2, r3, [sp, #16]
   294a4:	ldrd	r5, r6, [sp, #16]
   294a8:	ldrd	r2, r3, [sl, #8]
   294ac:	cmp	r3, r6
   294ae:	it	eq
   294b0:	cmpeq	r2, r5
   294b2:	strd	r2, r3, [sp, #24]
   294b6:	bcs.n	294ee <__btrfs_map_block@@Base+0x50e>
   294b8:	add.w	r4, r8, r4, lsl #4
   294bc:	add.w	r5, r8, lr, lsl #4
   294c0:	adds	r4, #8
   294c2:	adds	r5, #8
   294c4:	ldmia.w	r4, {r0, r1, r2, r3}
   294c8:	stmia.w	r9, {r0, r1, r2, r3}
   294cc:	ldmia.w	r5, {r0, r1, r2, r3}
   294d0:	stmia.w	r4, {r0, r1, r2, r3}
   294d4:	ldrd	r3, r4, [sp, #24]
   294d8:	strd	r3, r4, [sl]
   294dc:	ldmia.w	r9, {r0, r1, r2, r3}
   294e0:	stmia.w	r5, {r0, r1, r2, r3}
   294e4:	movs	r0, #1
   294e6:	ldrd	r3, r4, [sp, #16]
   294ea:	strd	r3, r4, [ip]
   294ee:	mov	r4, lr
   294f0:	cmp	r4, r7
   294f2:	blt.n	2948e <__btrfs_map_block@@Base+0x4ae>
   294f4:	cbnz	r0, 29500 <__btrfs_map_block@@Base+0x520>
   294f6:	ldr	r3, [sp, #176]	; 0xb0
   294f8:	mov	r2, r3
   294fa:	ldr	r3, [sp, #8]
   294fc:	str	r3, [r2, #0]
   294fe:	b.n	29024 <__btrfs_map_block@@Base+0x44>
   29500:	movs	r0, #0
   29502:	mov	lr, r0
   29504:	b.n	294ee <__btrfs_map_block@@Base+0x50e>
   29506:	nop
   29508:	str	r1, [r1, #0]
   2950a:	movs	r1, r0
   2950c:	str	r4, [r4, #108]	; 0x6c
   2950e:	movs	r1, r0
   29510:	str	r4, [r3, #8]
   29512:	movs	r1, r0
   29514:	str	r0, [r3, #96]	; 0x60
   29516:	movs	r1, r0
   29518:	ldrsh	r3, [r6, r4]
   2951a:	movs	r1, r0
   2951c:	ldrsh	r7, [r4, r7]
   2951e:	movs	r1, r0

00029520 <btrfs_map_block@@Base>:
   29520:	push	{r4, lr}
   29522:	sub	sp, #24
   29524:	ldr	r4, [sp, #44]	; 0x2c
   29526:	str	r4, [sp, #16]
   29528:	ldr	r4, [sp, #40]	; 0x28
   2952a:	str	r4, [sp, #12]
   2952c:	ldr	r4, [sp, #36]	; 0x24
   2952e:	str	r4, [sp, #8]
   29530:	movs	r4, #0
   29532:	str	r4, [sp, #4]
   29534:	ldr	r4, [sp, #32]
   29536:	str	r4, [sp, #0]
   29538:	bl	28fe0 <__btrfs_map_block@@Base>
   2953c:	add	sp, #24
   2953e:	pop	{r4, pc}

00029540 <btrfs_find_device@@Base>:
   29540:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   29544:	mov	r6, r0
   29546:	ldr	r5, [sp, #36]	; 0x24
   29548:	mov	r7, r2
   2954a:	ldr.w	r4, [r0, #352]	; 0x160
   2954e:	mov	r8, r3
   29550:	cbnz	r4, 2955a <btrfs_find_device@@Base+0x1a>
   29552:	mov	r0, r4
   29554:	add	sp, #8
   29556:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2955a:	cbz	r5, 29570 <btrfs_find_device@@Base+0x30>
   2955c:	movs	r2, #16
   2955e:	mov	r1, r5
   29560:	adds	r0, r4, r2
   29562:	blx	84a8 <memcmp@plt+0x4>
   29566:	cbz	r0, 29570 <btrfs_find_device@@Base+0x30>
   29568:	ldrb.w	r3, [r6, #364]	; 0x16c
   2956c:	lsls	r3, r3, #25
   2956e:	bpl.n	29582 <btrfs_find_device@@Base+0x42>
   29570:	ldr	r3, [sp, #32]
   29572:	mov	r2, r7
   29574:	mov	r0, r4
   29576:	str	r3, [sp, #0]
   29578:	mov	r3, r8
   2957a:	bl	2747c <btrfs_add_root_ref@@Base+0x15c>
   2957e:	cmp	r0, #0
   29580:	bne.n	29554 <btrfs_find_device@@Base+0x14>
   29582:	ldr	r4, [r4, #92]	; 0x5c
   29584:	b.n	29550 <btrfs_find_device@@Base+0x10>

00029586 <btrfs_find_device_by_devid@@Base>:
   29586:	push	{r4, r5, r6, r7, lr}
   29588:	add.w	r1, r0, #72	; 0x48
   2958c:	mov	r6, r2
   2958e:	ldr	r0, [r0, #72]	; 0x48
   29590:	ldr	r2, [sp, #20]
   29592:	mov	r7, r3
   29594:	movs	r3, #0
   29596:	cmp	r0, r1
   29598:	bne.n	2959e <btrfs_find_device_by_devid@@Base+0x18>
   2959a:	movs	r0, #0
   2959c:	pop	{r4, r5, r6, r7, pc}
   2959e:	ldrd	r4, r5, [r0, #64]	; 0x40
   295a2:	cmp	r5, r7
   295a4:	it	eq
   295a6:	cmpeq	r4, r6
   295a8:	bne.n	295b4 <btrfs_find_device_by_devid@@Base+0x2e>
   295aa:	cmp	r3, r2
   295ac:	add.w	r4, r3, #1
   295b0:	beq.n	2959c <btrfs_find_device_by_devid@@Base+0x16>
   295b2:	mov	r3, r4
   295b4:	ldr	r0, [r0, #0]
   295b6:	b.n	29596 <btrfs_find_device_by_devid@@Base+0x10>

000295b8 <btrfs_chunk_readonly@@Base>:
   295b8:	push	{r4, lr}
   295ba:	ldrb.w	r1, [r0, #364]	; 0x16c
   295be:	ands.w	r4, r1, #8
   295c2:	beq.n	295c8 <btrfs_chunk_readonly@@Base+0x10>
   295c4:	movs	r0, #0
   295c6:	pop	{r4, pc}
   295c8:	adds	r0, #228	; 0xe4
   295ca:	bl	156d0 <search_cache_extent@@Base>
   295ce:	cbz	r0, 295e6 <btrfs_chunk_readonly@@Base+0x2e>
   295d0:	ldr	r2, [r0, #64]	; 0x40
   295d2:	adds	r0, #72	; 0x48
   295d4:	mov	r3, r4
   295d6:	cmp	r2, r3
   295d8:	ble.n	295c4 <btrfs_chunk_readonly@@Base+0xc>
   295da:	lsls	r1, r3, #4
   295dc:	ldr	r1, [r0, r1]
   295de:	ldr	r1, [r1, #28]
   295e0:	cbz	r1, 295ec <btrfs_chunk_readonly@@Base+0x34>
   295e2:	adds	r3, #1
   295e4:	b.n	295d6 <btrfs_chunk_readonly@@Base+0x1e>
   295e6:	mvn.w	r0, #1
   295ea:	b.n	295c6 <btrfs_chunk_readonly@@Base+0xe>
   295ec:	movs	r0, #1
   295ee:	b.n	295c6 <btrfs_chunk_readonly@@Base+0xe>

000295f0 <btrfs_check_chunk_valid@@Base>:
   295f0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   295f4:	sub	sp, #36	; 0x24
   295f6:	subs	r6, r3, #0
   295f8:	add.w	r8, r1, #96	; 0x60
   295fc:	ldr	r4, [sp, #72]	; 0x48
   295fe:	str	r4, [sp, #20]
   29600:	ldr	r4, [sp, #76]	; 0x4c
   29602:	str	r4, [sp, #24]
   29604:	ldr.w	r4, [r0, #388]	; 0x184
   29608:	str	r4, [sp, #16]
   2960a:	blt.n	29634 <btrfs_check_chunk_valid@@Base+0x44>
   2960c:	movs	r3, #25
   2960e:	mla	r3, r3, r6, r8
   29612:	ldr.w	r1, [r3, #122]	; 0x7a
   29616:	cmp	r1, #79	; 0x4f
   29618:	bhi.n	29634 <btrfs_check_chunk_valid@@Base+0x44>
   2961a:	ldr.w	r3, [r0, #384]	; 0x180
   2961e:	movs	r2, #80	; 0x50
   29620:	ldr	r0, [pc, #528]	; (29834 <btrfs_check_chunk_valid@@Base+0x244>)
   29622:	subs	r3, #101	; 0x65
   29624:	add	r0, pc
   29626:	bl	16b70 <__btrfs_error@@Base>
   2962a:	mvn.w	r0, #116	; 0x74
   2962e:	add	sp, #36	; 0x24
   29630:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29634:	add.w	r7, r8, r2
   29638:	ldr.w	sl, [r8, r2]
   2963c:	ldr	r3, [r7, #16]
   2963e:	ldrh	r5, [r7, #44]	; 0x2c
   29640:	ldr.w	fp, [r7, #4]
   29644:	str	r3, [sp, #8]
   29646:	ldr	r3, [r7, #20]
   29648:	ldrh.w	r9, [r7, #46]	; 0x2e
   2964c:	ldr	r4, [r7, #24]
   2964e:	str	r3, [sp, #12]
   29650:	ldr	r3, [r7, #28]
   29652:	cbnz	r5, 29660 <btrfs_check_chunk_valid@@Base+0x70>
   29654:	ldr	r0, [pc, #480]	; (29838 <btrfs_check_chunk_valid@@Base+0x248>)
   29656:	mov	r1, r5
   29658:	add	r0, pc
   2965a:	bl	16b70 <__btrfs_error@@Base>
   2965e:	b.n	2962a <btrfs_check_chunk_valid@@Base+0x3a>
   29660:	cmp	r6, #0
   29662:	blt.n	29688 <btrfs_check_chunk_valid@@Base+0x98>
   29664:	mov	r0, r5
   29666:	str	r3, [sp, #28]
   29668:	bl	27588 <btrfs_add_root_ref@@Base+0x268>
   2966c:	movs	r2, #25
   2966e:	mla	r2, r2, r6, r8
   29672:	ldr	r3, [sp, #28]
   29674:	ldr.w	r1, [r2, #122]	; 0x7a
   29678:	cmp	r0, r1
   2967a:	beq.n	29688 <btrfs_check_chunk_valid@@Base+0x98>
   2967c:	mov	r2, r0
   2967e:	ldr	r0, [pc, #444]	; (2983c <btrfs_check_chunk_valid@@Base+0x24c>)
   29680:	add	r0, pc
   29682:	bl	16b70 <__btrfs_error@@Base>
   29686:	b.n	2962a <btrfs_check_chunk_valid@@Base+0x3a>
   29688:	ldr.w	ip, [sp, #16]
   2968c:	mov.w	lr, #0
   29690:	ldr	r2, [sp, #20]
   29692:	adds.w	ip, ip, #4294967295	; 0xffffffff
   29696:	and.w	r0, ip, r2
   2969a:	ldr	r2, [sp, #24]
   2969c:	adc.w	lr, lr, #4294967295	; 0xffffffff
   296a0:	and.w	r1, lr, r2
   296a4:	orrs.w	r2, r0, r1
   296a8:	beq.n	296bc <btrfs_check_chunk_valid@@Base+0xcc>
   296aa:	ldr	r0, [pc, #404]	; (29840 <btrfs_check_chunk_valid@@Base+0x250>)
   296ac:	ldrd	r2, r3, [sp, #20]
   296b0:	add	r0, pc
   296b2:	bl	16b70 <__btrfs_error@@Base>
   296b6:	mvn.w	r0, #4
   296ba:	b.n	2962e <btrfs_check_chunk_valid@@Base+0x3e>
   296bc:	ldr	r2, [r7, #40]	; 0x28
   296be:	ldr	r1, [sp, #16]
   296c0:	cmp	r1, r2
   296c2:	beq.n	296cc <btrfs_check_chunk_valid@@Base+0xdc>
   296c4:	ldr	r0, [pc, #380]	; (29844 <btrfs_check_chunk_valid@@Base+0x254>)
   296c6:	movs	r3, #0
   296c8:	add	r0, pc
   296ca:	b.n	296b2 <btrfs_check_chunk_valid@@Base+0xc2>
   296cc:	orrs.w	r2, sl, fp
   296d0:	beq.n	296e0 <btrfs_check_chunk_valid@@Base+0xf0>
   296d2:	and.w	r0, ip, sl
   296d6:	and.w	r1, lr, fp
   296da:	orrs.w	r2, r0, r1
   296de:	beq.n	296ea <btrfs_check_chunk_valid@@Base+0xfa>
   296e0:	ldr	r0, [pc, #356]	; (29848 <btrfs_check_chunk_valid@@Base+0x258>)
   296e2:	mov	r2, sl
   296e4:	mov	r3, fp
   296e6:	add	r0, pc
   296e8:	b.n	296b2 <btrfs_check_chunk_valid@@Base+0xc2>
   296ea:	ldrd	r1, r2, [sp, #8]
   296ee:	cmp	r2, #0
   296f0:	it	eq
   296f2:	cmpeq.w	r1, #65536	; 0x10000
   296f6:	beq.n	29702 <btrfs_check_chunk_valid@@Base+0x112>
   296f8:	ldr	r0, [pc, #336]	; (2984c <btrfs_check_chunk_valid@@Base+0x25c>)
   296fa:	mov	r3, r2
   296fc:	mov	r2, r1
   296fe:	add	r0, pc
   29700:	b.n	296b2 <btrfs_check_chunk_valid@@Base+0xc2>
   29702:	adds	r1, r6, #1
   29704:	bne.n	2971a <btrfs_check_chunk_valid@@Base+0x12a>
   29706:	and.w	r0, r4, #2
   2970a:	movs	r1, #0
   2970c:	orrs.w	r2, r0, r1
   29710:	bne.n	2971a <btrfs_check_chunk_valid@@Base+0x12a>
   29712:	ldr	r0, [pc, #316]	; (29850 <btrfs_check_chunk_valid@@Base+0x260>)
   29714:	mov	r2, r4
   29716:	add	r0, pc
   29718:	b.n	296b2 <btrfs_check_chunk_valid@@Base+0xc2>
   2971a:	bic.w	r0, r4, #2040	; 0x7f8
   2971e:	mov	r1, r3
   29720:	bic.w	r0, r0, #7
   29724:	orrs.w	r2, r0, r1
   29728:	beq.n	29732 <btrfs_check_chunk_valid@@Base+0x142>
   2972a:	mov	r2, r0
   2972c:	ldr	r0, [pc, #292]	; (29854 <btrfs_check_chunk_valid@@Base+0x264>)
   2972e:	add	r0, pc
   29730:	b.n	296b2 <btrfs_check_chunk_valid@@Base+0xc2>
   29732:	and.w	r0, r4, #7
   29736:	movs	r1, #0
   29738:	orrs.w	r2, r0, r1
   2973c:	bne.n	29746 <btrfs_check_chunk_valid@@Base+0x156>
   2973e:	ldr	r0, [pc, #280]	; (29858 <btrfs_check_chunk_valid@@Base+0x268>)
   29740:	mov	r2, r4
   29742:	add	r0, pc
   29744:	b.n	296b2 <btrfs_check_chunk_valid@@Base+0xc2>
   29746:	ands.w	r2, r4, #2040	; 0x7f8
   2974a:	beq.n	29752 <btrfs_check_chunk_valid@@Base+0x162>
   2974c:	subs	r1, r2, #1
   2974e:	tst	r1, r2
   29750:	beq.n	29766 <btrfs_check_chunk_valid@@Base+0x176>
   29752:	and.w	r0, r4, #2040	; 0x7f8
   29756:	movs	r2, #0
   29758:	mov	r1, r2
   2975a:	orrs	r1, r0
   2975c:	beq.n	29768 <btrfs_check_chunk_valid@@Base+0x178>
   2975e:	ldr	r0, [pc, #252]	; (2985c <btrfs_check_chunk_valid@@Base+0x26c>)
   29760:	mov	r2, r4
   29762:	add	r0, pc
   29764:	b.n	296b2 <btrfs_check_chunk_valid@@Base+0xc2>
   29766:	movs	r2, #1
   29768:	and.w	sl, r4, #2040	; 0x7f8
   2976c:	mov.w	fp, #0
   29770:	orrs.w	r1, sl, fp
   29774:	beq.n	29780 <btrfs_check_chunk_valid@@Base+0x190>
   29776:	cbnz	r2, 29780 <btrfs_check_chunk_valid@@Base+0x190>
   29778:	ldr	r0, [pc, #228]	; (29860 <btrfs_check_chunk_valid@@Base+0x270>)
   2977a:	mov	r2, r4
   2977c:	add	r0, pc
   2977e:	b.n	296b2 <btrfs_check_chunk_valid@@Base+0xc2>
   29780:	mov	r0, r5
   29782:	bl	27588 <btrfs_add_root_ref@@Base+0x268>
   29786:	adds	r2, r6, #1
   29788:	bne.n	2979c <btrfs_check_chunk_valid@@Base+0x1ac>
   2978a:	cmp.w	r0, #2048	; 0x800
   2978e:	bls.n	297ae <btrfs_check_chunk_valid@@Base+0x1be>
   29790:	ldr	r0, [pc, #208]	; (29864 <btrfs_check_chunk_valid@@Base+0x274>)
   29792:	mov	r1, r5
   29794:	add	r0, pc
   29796:	bl	16b70 <__btrfs_error@@Base>
   2979a:	b.n	296b6 <btrfs_check_chunk_valid@@Base+0xc6>
   2979c:	cmp	r6, #0
   2979e:	blt.n	297ae <btrfs_check_chunk_valid@@Base+0x1be>
   297a0:	movs	r3, #25
   297a2:	mla	r6, r3, r6, r8
   297a6:	ldr.w	r3, [r6, #122]	; 0x7a
   297aa:	cmp	r0, r3
   297ac:	b.n	2978e <btrfs_check_chunk_valid@@Base+0x19e>
   297ae:	and.w	r2, r4, #64	; 0x40
   297b2:	movs	r3, #0
   297b4:	orrs	r3, r2
   297b6:	beq.n	297c2 <btrfs_check_chunk_valid@@Base+0x1d2>
   297b8:	cmp.w	r9, #2
   297bc:	bne.n	2981e <btrfs_check_chunk_valid@@Base+0x22e>
   297be:	lsls	r3, r5, #31
   297c0:	bmi.n	2981e <btrfs_check_chunk_valid@@Base+0x22e>
   297c2:	and.w	r0, r4, #512	; 0x200
   297c6:	movs	r3, #0
   297c8:	mov	r1, r3
   297ca:	orrs.w	r2, r0, r1
   297ce:	beq.n	297d4 <btrfs_check_chunk_valid@@Base+0x1e4>
   297d0:	cmp	r5, #2
   297d2:	bls.n	2981e <btrfs_check_chunk_valid@@Base+0x22e>
   297d4:	and.w	r0, r4, #1024	; 0x400
   297d8:	mov	r1, r3
   297da:	orrs.w	r3, r0, r1
   297de:	beq.n	297e4 <btrfs_check_chunk_valid@@Base+0x1f4>
   297e0:	cmp	r5, #3
   297e2:	bls.n	2981e <btrfs_check_chunk_valid@@Base+0x22e>
   297e4:	and.w	r0, r4, #128	; 0x80
   297e8:	movs	r3, #0
   297ea:	mov	r1, r3
   297ec:	orrs.w	r2, r0, r1
   297f0:	beq.n	297f6 <btrfs_check_chunk_valid@@Base+0x206>
   297f2:	cmp	r5, #1
   297f4:	bls.n	2981e <btrfs_check_chunk_valid@@Base+0x22e>
   297f6:	and.w	r0, r4, #256	; 0x100
   297fa:	mov	r1, r3
   297fc:	orrs.w	r3, r0, r1
   29800:	beq.n	29806 <btrfs_check_chunk_valid@@Base+0x216>
   29802:	cmp	r5, #2
   29804:	bls.n	2981e <btrfs_check_chunk_valid@@Base+0x22e>
   29806:	and.w	r2, r4, #32
   2980a:	movs	r3, #0
   2980c:	orrs	r3, r2
   2980e:	beq.n	29814 <btrfs_check_chunk_valid@@Base+0x224>
   29810:	cmp	r5, #2
   29812:	bhi.n	2981e <btrfs_check_chunk_valid@@Base+0x22e>
   29814:	orrs.w	r3, sl, fp
   29818:	bne.n	29830 <btrfs_check_chunk_valid@@Base+0x240>
   2981a:	cmp	r5, #1
   2981c:	beq.n	29830 <btrfs_check_chunk_valid@@Base+0x240>
   2981e:	ldr	r0, [pc, #72]	; (29868 <btrfs_check_chunk_valid@@Base+0x278>)
   29820:	mov	r2, r9
   29822:	mov	r1, r5
   29824:	strd	sl, fp, [sp]
   29828:	add	r0, pc
   2982a:	bl	16b70 <__btrfs_error@@Base>
   2982e:	b.n	296b6 <btrfs_check_chunk_valid@@Base+0xc6>
   29830:	movs	r0, #0
   29832:	b.n	2962e <btrfs_check_chunk_valid@@Base+0x3e>
   29834:	ldrb	r2, [r2, r0]
   29836:	movs	r1, r0
   29838:	ldrb	r1, [r2, r0]
   2983a:	movs	r1, r0
   2983c:	ldrb	r6, [r2, r0]
   2983e:	movs	r1, r0
   29840:	ldrb	r2, [r2, r0]
   29842:	movs	r1, r0
   29844:	ldrb	r5, [r2, r0]
   29846:	movs	r1, r0
   29848:	ldrb	r5, [r2, r0]
   2984a:	movs	r1, r0
   2984c:	ldrb	r7, [r2, r0]
   2984e:	movs	r1, r0
   29850:	ldrb	r1, [r4, r0]
   29852:	movs	r1, r0
   29854:	ldrb	r1, [r4, r0]
   29856:	movs	r1, r0
   29858:	ldrb	r3, [r5, r0]
   2985a:	movs	r1, r0
   2985c:	ldrb	r1, [r5, r0]
   2985e:	movs	r1, r0
   29860:	ldrb	r5, [r6, r0]
   29862:	movs	r1, r0
   29864:	ldrb	r6, [r0, r1]
   29866:	movs	r1, r0
   29868:	ldrh	r2, [r1, r7]
   2986a:	movs	r1, r0
   2986c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29870:	mov	r9, r2
   29872:	vpush	{d8}
   29876:	mov	r5, r3
   29878:	ldr	r2, [pc, #444]	; (29a38 <btrfs_check_chunk_valid@@Base+0x448>)
   2987a:	ldr	r3, [pc, #448]	; (29a3c <btrfs_check_chunk_valid@@Base+0x44c>)
   2987c:	add	r2, pc
   2987e:	sub	sp, #68	; 0x44
   29880:	str	r0, [sp, #20]
   29882:	ldr	r3, [r2, r3]
   29884:	mov	r2, r5
   29886:	ldr	r4, [sp, #112]	; 0x70
   29888:	ldr	r3, [r3, #0]
   2988a:	str	r3, [sp, #60]	; 0x3c
   2988c:	mov.w	r3, #0
   29890:	add.w	r3, r9, #96	; 0x60
   29894:	adds	r7, r3, r5
   29896:	ldr	r3, [r3, r5]
   29898:	ldr.w	sl, [r1, #9]
   2989c:	ldr.w	fp, [r1, #13]
   298a0:	mov	r1, r9
   298a2:	str	r3, [sp, #32]
   298a4:	ldr	r3, [r7, #4]
   298a6:	ldrh.w	r8, [r7, #44]	; 0x2c
   298aa:	strd	sl, fp, [sp]
   298ae:	str	r3, [sp, #36]	; 0x24
   298b0:	mov	r3, r4
   298b2:	bl	295f0 <btrfs_check_chunk_valid@@Base>
   298b6:	mov	r6, r0
   298b8:	cbz	r0, 298ee <btrfs_check_chunk_valid@@Base+0x2fe>
   298ba:	adds	r4, #1
   298bc:	bne.n	298e4 <btrfs_check_chunk_valid@@Base+0x2f4>
   298be:	ldr	r1, [pc, #384]	; (29a40 <btrfs_check_chunk_valid@@Base+0x450>)
   298c0:	ldr	r2, [pc, #384]	; (29a44 <btrfs_check_chunk_valid@@Base+0x454>)
   298c2:	add	r1, pc
   298c4:	add	r2, pc
   298c6:	ldr	r0, [pc, #384]	; (29a48 <btrfs_check_chunk_valid@@Base+0x458>)
   298c8:	add	r0, pc
   298ca:	bl	16b70 <__btrfs_error@@Base>
   298ce:	ldr	r2, [pc, #380]	; (29a4c <btrfs_check_chunk_valid@@Base+0x45c>)
   298d0:	ldr	r3, [pc, #360]	; (29a3c <btrfs_check_chunk_valid@@Base+0x44c>)
   298d2:	add	r2, pc
   298d4:	ldr	r3, [r2, r3]
   298d6:	ldr	r2, [r3, #0]
   298d8:	ldr	r3, [sp, #60]	; 0x3c
   298da:	eors	r2, r3
   298dc:	beq.w	29a2a <btrfs_check_chunk_valid@@Base+0x43a>
   298e0:	blx	8510 <__stack_chk_fail@plt>
   298e4:	ldr	r1, [pc, #360]	; (29a50 <btrfs_check_chunk_valid@@Base+0x460>)
   298e6:	ldr	r2, [pc, #364]	; (29a54 <btrfs_check_chunk_valid@@Base+0x464>)
   298e8:	add	r1, pc
   298ea:	add	r2, pc
   298ec:	b.n	298c6 <btrfs_check_chunk_valid@@Base+0x2d6>
   298ee:	ldr	r3, [sp, #20]
   298f0:	mov	r2, sl
   298f2:	adds	r3, #228	; 0xe4
   298f4:	vmov	s16, r3
   298f8:	mov	r3, fp
   298fa:	vmov	r0, s16
   298fe:	bl	156d0 <search_cache_extent@@Base>
   29902:	cbz	r0, 29928 <btrfs_check_chunk_valid@@Base+0x338>
   29904:	ldrd	r2, r3, [r0, #24]
   29908:	cmp	fp, r3
   2990a:	it	eq
   2990c:	cmpeq	sl, r2
   2990e:	bcc.n	29928 <btrfs_check_chunk_valid@@Base+0x338>
   29910:	ldrd	r1, r0, [r0, #32]
   29914:	adds	r1, r2, r1
   29916:	str	r1, [sp, #24]
   29918:	adcs	r3, r0
   2991a:	str	r3, [sp, #28]
   2991c:	ldrd	r3, r4, [sp, #24]
   29920:	cmp	fp, r4
   29922:	it	eq
   29924:	cmpeq	sl, r3
   29926:	bcc.n	298ce <btrfs_check_chunk_valid@@Base+0x2de>
   29928:	mov.w	r3, r8, lsl #4
   2992c:	str	r3, [sp, #24]
   2992e:	add.w	r0, r3, #72	; 0x48
   29932:	blx	8678 <malloc@plt+0x4>
   29936:	mov	r4, r0
   29938:	cmp	r0, #0
   2993a:	beq.n	29a24 <btrfs_check_chunk_valid@@Base+0x434>
   2993c:	ldr	r2, [r7, #36]	; 0x24
   2993e:	adds	r5, #48	; 0x30
   29940:	ldr	r3, [sp, #32]
   29942:	mov	r6, r0
   29944:	ldr	r1, [r7, #24]
   29946:	str	r2, [r0, #52]	; 0x34
   29948:	ldr	r2, [r7, #32]
   2994a:	str	r3, [r0, #32]
   2994c:	ldr	r3, [sp, #36]	; 0x24
   2994e:	str	r2, [r0, #48]	; 0x30
   29950:	ldr	r2, [r7, #40]	; 0x28
   29952:	strd	sl, fp, [r0, #24]
   29956:	add.w	sl, sp, #44	; 0x2c
   2995a:	ldr.w	fp, [pc, #252]	; 29a58 <btrfs_check_chunk_valid@@Base+0x468>
   2995e:	str	r2, [r0, #60]	; 0x3c
   29960:	ldr	r2, [r7, #16]
   29962:	add	fp, pc
   29964:	str	r3, [r0, #36]	; 0x24
   29966:	ldr	r3, [sp, #24]
   29968:	str	r2, [r0, #56]	; 0x38
   2996a:	ldr	r2, [r7, #28]
   2996c:	add	r3, r0
   2996e:	str.w	r8, [r0, #64]	; 0x40
   29972:	str	r3, [sp, #24]
   29974:	add.w	r3, r9, #96	; 0x60
   29978:	strd	r1, r2, [r0, #40]	; 0x28
   2997c:	ldrh	r2, [r7, #46]	; 0x2e
   2997e:	str	r3, [sp, #32]
   29980:	str	r2, [r0, #68]	; 0x44
   29982:	ldr	r3, [sp, #24]
   29984:	cmp	r3, r6
   29986:	bne.n	299b6 <btrfs_check_chunk_valid@@Base+0x3c6>
   29988:	vmov	r0, s16
   2998c:	mov	r1, r4
   2998e:	bl	1558e <insert_cache_extent@@Base>
   29992:	subs	r6, r0, #0
   29994:	bge.n	298ce <btrfs_check_chunk_valid@@Base+0x2de>
   29996:	blx	8784 <__errno_location@plt>
   2999a:	negs	r3, r6
   2999c:	str	r3, [r0, #0]
   2999e:	str	r6, [sp, #8]
   299a0:	ldrd	r2, r3, [r4, #32]
   299a4:	ldr	r0, [pc, #180]	; (29a5c <btrfs_check_chunk_valid@@Base+0x46c>)
   299a6:	strd	r2, r3, [sp]
   299aa:	add	r0, pc
   299ac:	ldrd	r2, r3, [r4, #24]
   299b0:	bl	16b70 <__btrfs_error@@Base>
   299b4:	b.n	298ce <btrfs_check_chunk_valid@@Base+0x2de>
   299b6:	ldr	r3, [sp, #32]
   299b8:	mov	r0, r9
   299ba:	add	r3, r5
   299bc:	ldr	r1, [r3, #8]
   299be:	ldr	r2, [r3, #12]
   299c0:	ldr.w	r8, [r3]
   299c4:	ldr	r7, [r3, #4]
   299c6:	movs	r3, #16
   299c8:	strd	r1, r2, [r6, #80]	; 0x50
   299cc:	adds	r2, r5, r3
   299ce:	mov	r1, sl
   299d0:	bl	16a0e <read_extent_buffer@@Base>
   299d4:	movs	r3, #0
   299d6:	ldr	r0, [sp, #20]
   299d8:	mov	r2, r8
   299da:	strd	sl, r3, [sp]
   299de:	mov	r3, r7
   299e0:	bl	29540 <btrfs_find_device@@Base>
   299e4:	str	r0, [r6, #72]	; 0x48
   299e6:	cbnz	r0, 29a1e <btrfs_check_chunk_valid@@Base+0x42e>
   299e8:	movs	r1, #128	; 0x80
   299ea:	movs	r0, #1
   299ec:	blx	839c <calloc@plt+0x4>
   299f0:	mov.w	r3, #4294967295	; 0xffffffff
   299f4:	mov	r2, r8
   299f6:	mov	r1, fp
   299f8:	str	r3, [r0, #24]
   299fa:	mov	r3, r7
   299fc:	strd	r8, r7, [r0, #64]	; 0x40
   29a00:	str	r0, [r6, #72]	; 0x48
   29a02:	movs	r0, #1
   29a04:	blx	8838 <__printf_chk@plt+0x4>
   29a08:	ldr	r2, [sp, #20]
   29a0a:	ldr	r3, [r6, #72]	; 0x48
   29a0c:	ldr.w	r1, [r2, #352]	; 0x160
   29a10:	mov	r2, r1
   29a12:	ldr.w	r0, [r2, #72]!
   29a16:	str	r3, [r0, #4]
   29a18:	strd	r0, r2, [r3]
   29a1c:	str	r3, [r1, #72]	; 0x48
   29a1e:	adds	r6, #16
   29a20:	adds	r5, #32
   29a22:	b.n	29982 <btrfs_check_chunk_valid@@Base+0x392>
   29a24:	mvn.w	r6, #11
   29a28:	b.n	298ce <btrfs_check_chunk_valid@@Base+0x2de>
   29a2a:	mov	r0, r6
   29a2c:	add	sp, #68	; 0x44
   29a2e:	vpop	{d8}
   29a32:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29a36:	nop
   29a38:	add	r5, pc, #32	; (adr r5, 29a5c <btrfs_check_chunk_valid@@Base+0x46c>)
   29a3a:	movs	r3, r0
   29a3c:	lsls	r0, r4, #8
   29a3e:	movs	r0, r0
   29a40:	ldrh	r7, [r4, r5]
   29a42:	movs	r1, r0
   29a44:	ldrh	r0, [r6, r5]
   29a46:	movs	r1, r0
   29a48:	ldrh	r3, [r3, r6]
   29a4a:	movs	r1, r0
   29a4c:	add	r4, pc, #712	; (adr r4, 29d18 <btrfs_read_chunk_tree@@Base+0x110>)
   29a4e:	movs	r3, r0
   29a50:	str	r2, [sp, #836]	; 0x344
   29a52:	movs	r2, r0
   29a54:	stc2	0, cr0, [r3, #-0]
   29a58:	ldrh	r5, [r6, r4]
   29a5a:	movs	r1, r0
   29a5c:	ldrh	r6, [r1, r4]
   29a5e:	movs	r1, r0

00029a60 <btrfs_read_sys_array@@Base>:
   29a60:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29a64:	mov	r8, r0
   29a66:	vpush	{d8}
   29a6a:	ldr	r2, [pc, #376]	; (29be4 <btrfs_read_sys_array@@Base+0x184>)
   29a6c:	ldr	r3, [pc, #376]	; (29be8 <btrfs_read_sys_array@@Base+0x188>)
   29a6e:	add	r2, pc
   29a70:	ldr.w	r9, [pc, #376]	; 29bec <btrfs_read_sys_array@@Base+0x18c>
   29a74:	sub	sp, #44	; 0x2c
   29a76:	ldr.w	r5, [r0, #308]	; 0x134
   29a7a:	ldr	r3, [r2, r3]
   29a7c:	add	r9, pc
   29a7e:	ldr.w	r2, [r0, #384]	; 0x180
   29a82:	ldr	r3, [r3, #0]
   29a84:	str	r3, [sp, #36]	; 0x24
   29a86:	mov.w	r3, #0
   29a8a:	cmp.w	r2, #4096	; 0x1000
   29a8e:	bcs.n	29ab4 <btrfs_read_sys_array@@Base+0x54>
   29a90:	ldr	r1, [pc, #348]	; (29bf0 <btrfs_read_sys_array@@Base+0x190>)
   29a92:	movs	r0, #1
   29a94:	add	r1, pc
   29a96:	blx	8838 <__printf_chk@plt+0x4>
   29a9a:	mvn.w	r3, #21
   29a9e:	ldr	r1, [pc, #340]	; (29bf4 <btrfs_read_sys_array@@Base+0x194>)
   29aa0:	ldr	r2, [pc, #324]	; (29be8 <btrfs_read_sys_array@@Base+0x188>)
   29aa2:	add	r1, pc
   29aa4:	ldr	r2, [r1, r2]
   29aa6:	ldr	r1, [r2, #0]
   29aa8:	ldr	r2, [sp, #36]	; 0x24
   29aaa:	eors	r1, r2
   29aac:	beq.w	29bd8 <btrfs_read_sys_array@@Base+0x178>
   29ab0:	blx	8510 <__stack_chk_fail@plt>
   29ab4:	mov.w	r3, #4096	; 0x1000
   29ab8:	mov.w	r2, #65536	; 0x10000
   29abc:	str	r3, [sp, #0]
   29abe:	movs	r3, #0
   29ac0:	bl	16520 <alloc_dummy_extent_buffer@@Base>
   29ac4:	mov	r6, r0
   29ac6:	cmp	r0, #0
   29ac8:	beq.w	29bd2 <btrfs_read_sys_array@@Base+0x172>
   29acc:	bl	1cd70 <btrfs_set_buffer_uptodate@@Base>
   29ad0:	movw	r3, #3531	; 0xdcb
   29ad4:	mov	r1, r5
   29ad6:	movs	r2, #0
   29ad8:	mov	r0, r6
   29ada:	movs	r7, #0
   29adc:	bl	16a24 <write_extent_buffer@@Base>
   29ae0:	add	r3, sp, #16
   29ae2:	ldr.w	sl, [r5, #160]	; 0xa0
   29ae6:	addw	r5, r5, #811	; 0x32b
   29aea:	vmov	s16, r3
   29aee:	movw	fp, #811	; 0x32b
   29af2:	cmp	r7, sl
   29af4:	bcc.n	29afa <btrfs_read_sys_array@@Base+0x9a>
   29af6:	movs	r3, #0
   29af8:	b.n	29b88 <btrfs_read_sys_array@@Base+0x128>
   29afa:	add.w	r2, r7, #17
   29afe:	cmp	r2, sl
   29b00:	bhi.n	29bac <btrfs_read_sys_array@@Base+0x14c>
   29b02:	ldr.w	r1, [r5, #9]
   29b06:	add.w	fp, fp, #17
   29b0a:	ldr.w	r3, [r5, #13]
   29b0e:	str.w	r1, [sp, #25]
   29b12:	str.w	r3, [sp, #29]
   29b16:	ldrb	r3, [r5, #8]
   29b18:	cmp	r3, #228	; 0xe4
   29b1a:	strb.w	r3, [sp, #24]
   29b1e:	ldr	r0, [r5, #0]
   29b20:	ldr	r1, [r5, #4]
   29b22:	strd	r0, r1, [sp, #16]
   29b26:	bne.n	29b94 <btrfs_read_sys_array@@Base+0x134>
   29b28:	movs	r0, #1
   29b2a:	str	r2, [sp, #12]
   29b2c:	bl	27588 <btrfs_add_root_ref@@Base+0x268>
   29b30:	ldr	r2, [sp, #12]
   29b32:	adds	r3, r2, r0
   29b34:	mov	r4, r0
   29b36:	cmp	r3, sl
   29b38:	bhi.n	29bb0 <btrfs_read_sys_array@@Base+0x150>
   29b3a:	add.w	r3, r6, fp
   29b3e:	ldrh.w	r3, [r3, #140]	; 0x8c
   29b42:	cbnz	r3, 29b5e <btrfs_read_sys_array@@Base+0xfe>
   29b44:	ldr	r1, [pc, #176]	; (29bf8 <btrfs_read_sys_array@@Base+0x198>)
   29b46:	ldr.w	r0, [r9, r1]
   29b4a:	str	r2, [sp, #0]
   29b4c:	ldr	r2, [pc, #172]	; (29bfc <btrfs_read_sys_array@@Base+0x19c>)
   29b4e:	add	r2, pc
   29b50:	ldr	r0, [r0, #0]
   29b52:	movs	r1, #1
   29b54:	blx	8860 <__fprintf_chk@plt+0x4>
   29b58:	mvn.w	r3, #4
   29b5c:	b.n	29b88 <btrfs_read_sys_array@@Base+0x128>
   29b5e:	mov	r0, r3
   29b60:	str	r2, [sp, #12]
   29b62:	bl	27588 <btrfs_add_root_ref@@Base+0x268>
   29b66:	ldr	r2, [sp, #12]
   29b68:	adds	r7, r2, r0
   29b6a:	mov	r4, r0
   29b6c:	cmp	r7, sl
   29b6e:	bhi.n	29bb0 <btrfs_read_sys_array@@Base+0x150>
   29b70:	mov.w	r3, #4294967295	; 0xffffffff
   29b74:	vmov	r1, s16
   29b78:	str	r3, [sp, #0]
   29b7a:	mov	r2, r6
   29b7c:	mov	r3, fp
   29b7e:	mov	r0, r8
   29b80:	bl	2986c <btrfs_check_chunk_valid@@Base+0x27c>
   29b84:	mov	r3, r0
   29b86:	cbz	r0, 29ba2 <btrfs_read_sys_array@@Base+0x142>
   29b88:	mov	r0, r6
   29b8a:	str	r3, [sp, #12]
   29b8c:	bl	16314 <free_extent_buffer@@Base>
   29b90:	ldr	r3, [sp, #12]
   29b92:	b.n	29a9e <btrfs_read_sys_array@@Base+0x3e>
   29b94:	ldr	r1, [pc, #96]	; (29bf8 <btrfs_read_sys_array@@Base+0x198>)
   29b96:	ldr.w	r0, [r9, r1]
   29b9a:	str	r2, [sp, #0]
   29b9c:	ldr	r2, [pc, #96]	; (29c00 <btrfs_read_sys_array@@Base+0x1a0>)
   29b9e:	add	r2, pc
   29ba0:	b.n	29b50 <btrfs_read_sys_array@@Base+0xf0>
   29ba2:	add.w	r3, r4, #17
   29ba6:	add	fp, r4
   29ba8:	add	r5, r3
   29baa:	b.n	29af2 <btrfs_read_sys_array@@Base+0x92>
   29bac:	mov	r2, r7
   29bae:	movs	r4, #17
   29bb0:	ldr	r3, [pc, #68]	; (29bf8 <btrfs_read_sys_array@@Base+0x198>)
   29bb2:	movs	r1, #1
   29bb4:	ldr.w	r0, [r9, r3]
   29bb8:	mov	r3, r4
   29bba:	str	r2, [sp, #0]
   29bbc:	ldr	r2, [pc, #68]	; (29c04 <btrfs_read_sys_array@@Base+0x1a4>)
   29bbe:	ldr	r0, [r0, #0]
   29bc0:	add	r2, pc
   29bc2:	blx	8860 <__fprintf_chk@plt+0x4>
   29bc6:	mov	r0, r6
   29bc8:	bl	16314 <free_extent_buffer@@Base>
   29bcc:	mvn.w	r3, #4
   29bd0:	b.n	29a9e <btrfs_read_sys_array@@Base+0x3e>
   29bd2:	mvn.w	r3, #11
   29bd6:	b.n	29a9e <btrfs_read_sys_array@@Base+0x3e>
   29bd8:	mov	r0, r3
   29bda:	add	sp, #44	; 0x2c
   29bdc:	vpop	{d8}
   29be0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29be4:	add	r3, pc, #88	; (adr r3, 29c40 <btrfs_read_chunk_tree@@Base+0x38>)
   29be6:	movs	r3, r0
   29be8:	lsls	r0, r4, #8
   29bea:	movs	r0, r0
   29bec:	add	r3, pc, #32	; (adr r3, 29c10 <btrfs_read_chunk_tree@@Base+0x8>)
   29bee:	movs	r3, r0
   29bf0:	ldrh	r1, [r3, r1]
   29bf2:	movs	r1, r0
   29bf4:	add	r2, pc, #904	; (adr r2, 29f80 <write_raid56_with_parity@@Base+0xf8>)
   29bf6:	movs	r3, r0
   29bf8:	lsls	r0, r6, #8
   29bfa:	movs	r0, r0
   29bfc:	ldr	r0, [r2, r7]
   29bfe:	movs	r1, r0
   29c00:	ldr	r7, [r7, r6]
   29c02:	movs	r1, r0
   29c04:	ldr	r7, [r2, r7]
   29c06:	movs	r1, r0

00029c08 <btrfs_read_chunk_tree@@Base>:
   29c08:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29c0c:	mov	r7, r0
   29c0e:	vpush	{d8-d9}
   29c12:	ldr	r2, [pc, #600]	; (29e6c <btrfs_read_chunk_tree@@Base+0x264>)
   29c14:	ldr	r3, [pc, #600]	; (29e70 <btrfs_read_chunk_tree@@Base+0x268>)
   29c16:	add	r2, pc
   29c18:	sub	sp, #100	; 0x64
   29c1a:	ldr	r3, [r2, r3]
   29c1c:	ldr	r3, [r3, #0]
   29c1e:	str	r3, [sp, #92]	; 0x5c
   29c20:	mov.w	r3, #0
   29c24:	ldr	r3, [r0, #32]
   29c26:	str	r3, [sp, #8]
   29c28:	bl	17544 <btrfs_alloc_path@@Base>
   29c2c:	mov	r6, r0
   29c2e:	cmp	r0, #0
   29c30:	beq.w	29e5a <btrfs_read_chunk_tree@@Base+0x252>
   29c34:	movs	r0, #0
   29c36:	movs	r3, #1
   29c38:	ldr	r1, [sp, #8]
   29c3a:	add	r2, sp, #20
   29c3c:	strd	r3, r0, [sp, #20]
   29c40:	mov	r3, r6
   29c42:	strd	r0, r0, [sp]
   29c46:	strb.w	r0, [sp, #29]
   29c4a:	strb.w	r0, [sp, #30]
   29c4e:	strb.w	r0, [sp, #31]
   29c52:	strb.w	r0, [sp, #32]
   29c56:	strb.w	r0, [sp, #33]	; 0x21
   29c5a:	strb.w	r0, [sp, #34]	; 0x22
   29c5e:	strb.w	r0, [sp, #35]	; 0x23
   29c62:	strb.w	r0, [sp, #36]	; 0x24
   29c66:	strb.w	r0, [sp, #28]
   29c6a:	bl	19930 <btrfs_search_slot@@Base>
   29c6e:	subs	r3, r0, #0
   29c70:	blt.n	29ca4 <btrfs_read_chunk_tree@@Base+0x9c>
   29c72:	ldr.w	sl, [pc, #512]	; 29e74 <btrfs_read_chunk_tree@@Base+0x26c>
   29c76:	add.w	fp, sp, #40	; 0x28
   29c7a:	add	sl, pc
   29c7c:	ldr.w	r9, [r6]
   29c80:	ldr	r4, [r6, #32]
   29c82:	ldr.w	r3, [r9, #192]	; 0xc0
   29c86:	cmp	r4, r3
   29c88:	bcc.n	29cc4 <btrfs_read_chunk_tree@@Base+0xbc>
   29c8a:	movs	r3, #0
   29c8c:	strb.w	r3, [r6, #65]	; 0x41
   29c90:	ldr	r3, [sp, #8]
   29c92:	mov	r1, r6
   29c94:	ldr.w	r0, [r3, #464]	; 0x1d0
   29c98:	bl	1ad64 <btrfs_next_sibling_tree_block@@Base>
   29c9c:	cmp	r0, #0
   29c9e:	beq.n	29c7c <btrfs_read_chunk_tree@@Base+0x74>
   29ca0:	and.w	r3, r0, r0, asr #31
   29ca4:	mov	r0, r6
   29ca6:	str	r3, [sp, #8]
   29ca8:	bl	17572 <btrfs_free_path@@Base>
   29cac:	ldr	r3, [sp, #8]
   29cae:	ldr	r1, [pc, #456]	; (29e78 <btrfs_read_chunk_tree@@Base+0x270>)
   29cb0:	ldr	r2, [pc, #444]	; (29e70 <btrfs_read_chunk_tree@@Base+0x268>)
   29cb2:	add	r1, pc
   29cb4:	ldr	r2, [r1, r2]
   29cb6:	ldr	r1, [r2, #0]
   29cb8:	ldr	r2, [sp, #92]	; 0x5c
   29cba:	eors	r1, r2
   29cbc:	beq.w	29e60 <btrfs_read_chunk_tree@@Base+0x258>
   29cc0:	blx	8510 <__stack_chk_fail@plt>
   29cc4:	mov	r2, r4
   29cc6:	mov	r1, fp
   29cc8:	mov	r0, r9
   29cca:	bl	275bc <btrfs_add_root_ref@@Base+0x29c>
   29cce:	ldrb.w	r3, [sp, #48]	; 0x30
   29cd2:	cmp	r3, #216	; 0xd8
   29cd4:	bne.w	29e38 <btrfs_read_chunk_tree@@Base+0x230>
   29cd8:	add.w	r3, r9, #96	; 0x60
   29cdc:	movs	r2, #25
   29cde:	add.w	r8, sp, #60	; 0x3c
   29ce2:	mov	r0, r9
   29ce4:	mla	r4, r2, r4, r3
   29ce8:	ldr.w	r4, [r4, #118]	; 0x76
   29cec:	add.w	r2, r4, #101	; 0x65
   29cf0:	adds	r5, r3, r2
   29cf2:	ldr	r3, [r3, r2]
   29cf4:	vmov	s17, r3
   29cf8:	ldr	r3, [r5, #4]
   29cfa:	vmov	s18, r3
   29cfe:	add.w	r3, r4, #167	; 0xa7
   29d02:	vmov	s16, r3
   29d06:	add	r3, sp, #76	; 0x4c
   29d08:	str	r3, [sp, #12]
   29d0a:	movs	r3, #16
   29d0c:	vmov	r2, s16
   29d10:	ldr	r1, [sp, #12]
   29d12:	bl	16a0e <read_extent_buffer@@Base>
   29d16:	add.w	r2, r4, #183	; 0xb7
   29d1a:	mov	r1, r8
   29d1c:	mov	r0, r9
   29d1e:	movs	r3, #16
   29d20:	bl	16a0e <read_extent_buffer@@Base>
   29d24:	ldr.w	r4, [r7, #352]	; 0x160
   29d28:	movs	r2, #16
   29d2a:	mov	r0, r8
   29d2c:	mov	r1, r4
   29d2e:	blx	84a8 <memcmp@plt+0x4>
   29d32:	cbz	r0, 29d9a <btrfs_read_chunk_tree@@Base+0x192>
   29d34:	ldr	r4, [r4, #92]	; 0x5c
   29d36:	cbnz	r4, 29d56 <btrfs_read_chunk_tree@@Base+0x14e>
   29d38:	mov	r1, r4
   29d3a:	mov	r0, r8
   29d3c:	bl	27448 <btrfs_add_root_ref@@Base+0x128>
   29d40:	mov	r4, r0
   29d42:	cbnz	r0, 29d80 <btrfs_read_chunk_tree@@Base+0x178>
   29d44:	movs	r1, #96	; 0x60
   29d46:	movs	r0, #1
   29d48:	blx	839c <calloc@plt+0x4>
   29d4c:	mov	r4, r0
   29d4e:	cbnz	r0, 29d5e <btrfs_read_chunk_tree@@Base+0x156>
   29d50:	mvn.w	r3, #11
   29d54:	b.n	29ca4 <btrfs_read_chunk_tree@@Base+0x9c>
   29d56:	movs	r2, #16
   29d58:	mov	r1, r8
   29d5a:	mov	r0, r4
   29d5c:	b.n	29d2e <btrfs_read_chunk_tree@@Base+0x126>
   29d5e:	ldr.w	r2, [sl]
   29d62:	add.w	r3, r0, #72	; 0x48
   29d66:	strd	r3, r3, [r0, #72]	; 0x48
   29d6a:	add.w	r3, r0, #80	; 0x50
   29d6e:	str.w	r3, [sl]
   29d72:	str	r3, [r2, #4]
   29d74:	strd	r2, sl, [r0, #80]	; 0x50
   29d78:	ldmia.w	r8, {r0, r1, r2, r3}
   29d7c:	stmia.w	r4, {r0, r1, r2, r3}
   29d80:	movs	r1, #0
   29d82:	mov	r0, r4
   29d84:	bl	27714 <btrfs_open_devices@@Base>
   29d88:	subs	r3, r0, #0
   29d8a:	bne.n	29e56 <btrfs_read_chunk_tree@@Base+0x24e>
   29d8c:	ldr.w	r3, [r7, #352]	; 0x160
   29d90:	ldr	r3, [r3, #92]	; 0x5c
   29d92:	str	r3, [r4, #92]	; 0x5c
   29d94:	ldr.w	r3, [r7, #352]	; 0x160
   29d98:	str	r4, [r3, #92]	; 0x5c
   29d9a:	ldr	r3, [sp, #12]
   29d9c:	mov	r0, r7
   29d9e:	vmov	r2, s17
   29da2:	str.w	r8, [sp, #4]
   29da6:	str	r3, [sp, #0]
   29da8:	vmov	r3, s18
   29dac:	bl	29540 <btrfs_find_device@@Base>
   29db0:	mov	r4, r0
   29db2:	cbnz	r0, 29dda <btrfs_read_chunk_tree@@Base+0x1d2>
   29db4:	movs	r1, #128	; 0x80
   29db6:	movs	r0, #1
   29db8:	blx	839c <calloc@plt+0x4>
   29dbc:	mov	r4, r0
   29dbe:	cmp	r0, #0
   29dc0:	beq.n	29d50 <btrfs_read_chunk_tree@@Base+0x148>
   29dc2:	ldr.w	r2, [r7, #352]	; 0x160
   29dc6:	mov.w	r3, #4294967295	; 0xffffffff
   29dca:	str	r3, [r0, #24]
   29dcc:	mov	r3, r2
   29dce:	ldr.w	r1, [r3, #72]!
   29dd2:	str	r0, [r1, #4]
   29dd4:	strd	r1, r3, [r0]
   29dd8:	str	r0, [r2, #72]	; 0x48
   29dda:	ldr	r2, [r5, #0]
   29ddc:	add.w	r1, r4, #112	; 0x70
   29de0:	ldr	r3, [r5, #4]
   29de2:	mov	r0, r9
   29de4:	strd	r2, r3, [r4, #64]	; 0x40
   29de8:	ldr	r2, [r5, #8]
   29dea:	ldr	r3, [r5, #12]
   29dec:	strd	r2, r3, [r4, #72]	; 0x48
   29df0:	ldr	r2, [r5, #16]
   29df2:	ldr	r3, [r5, #20]
   29df4:	strd	r2, r3, [r4, #80]	; 0x50
   29df8:	ldr	r2, [r5, #36]	; 0x24
   29dfa:	ldr	r3, [r5, #40]	; 0x28
   29dfc:	strd	r2, r3, [r4, #104]	; 0x68
   29e00:	ldr	r3, [r5, #24]
   29e02:	vmov	r2, s16
   29e06:	str	r3, [r4, #88]	; 0x58
   29e08:	ldr	r3, [r5, #28]
   29e0a:	str	r3, [r4, #92]	; 0x5c
   29e0c:	ldr	r3, [r5, #32]
   29e0e:	str	r3, [r4, #96]	; 0x60
   29e10:	movs	r3, #16
   29e12:	bl	16a0e <read_extent_buffer@@Base>
   29e16:	ldr	r3, [r7, #36]	; 0x24
   29e18:	str	r3, [r4, #8]
   29e1a:	ldr.w	r2, [r7, #352]	; 0x160
   29e1e:	ldr	r0, [r5, #8]
   29e20:	ldr	r4, [r5, #12]
   29e22:	ldrd	r3, r1, [r2, #56]	; 0x38
   29e26:	adds	r3, r3, r0
   29e28:	adc.w	r1, r4, r1
   29e2c:	strd	r3, r1, [r2, #56]	; 0x38
   29e30:	ldr	r3, [r6, #32]
   29e32:	adds	r3, #1
   29e34:	str	r3, [r6, #32]
   29e36:	b.n	29c7c <btrfs_read_chunk_tree@@Base+0x74>
   29e38:	cmp	r3, #228	; 0xe4
   29e3a:	bne.n	29e30 <btrfs_read_chunk_tree@@Base+0x228>
   29e3c:	movs	r3, #25
   29e3e:	mov	r2, r9
   29e40:	mla	r3, r3, r4, r9
   29e44:	mov	r1, fp
   29e46:	mov	r0, r7
   29e48:	ldr.w	r3, [r3, #214]	; 0xd6
   29e4c:	str	r4, [sp, #0]
   29e4e:	adds	r3, #101	; 0x65
   29e50:	bl	2986c <btrfs_check_chunk_valid@@Base+0x27c>
   29e54:	subs	r3, r0, #0
   29e56:	bge.n	29e30 <btrfs_read_chunk_tree@@Base+0x228>
   29e58:	b.n	29ca4 <btrfs_read_chunk_tree@@Base+0x9c>
   29e5a:	mvn.w	r3, #11
   29e5e:	b.n	29cae <btrfs_read_chunk_tree@@Base+0xa6>
   29e60:	mov	r0, r3
   29e62:	add	sp, #100	; 0x64
   29e64:	vpop	{d8-d9}
   29e68:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29e6c:	add	r1, pc, #440	; (adr r1, 2a028 <write_raid56_with_parity@@Base+0x1a0>)
   29e6e:	movs	r3, r0
   29e70:	lsls	r0, r4, #8
   29e72:	movs	r0, r0
   29e74:	push	{r1, r3, r4, r6, lr}
   29e76:	movs	r3, r0
   29e78:	add	r0, pc, #840	; (adr r0, 2a1c4 <write_raid56_with_parity@@Base+0x33c>)
   29e7a:	movs	r3, r0

00029e7c <btrfs_scanned_uuids@@Base>:
   29e7c:	ldr	r0, [pc, #4]	; (29e84 <btrfs_scanned_uuids@@Base+0x8>)
   29e7e:	add	r0, pc
   29e80:	bx	lr
   29e82:	nop
   29e84:	cbz	r6, 29edc <write_raid56_with_parity@@Base+0x54>
   29e86:	movs	r3, r0

00029e88 <write_raid56_with_parity@@Base>:
   29e88:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29e8c:	vpush	{d8}
   29e90:	vmov	s16, r0
   29e94:	ldr	r3, [r1, #76]	; 0x4c
   29e96:	sub	sp, #44	; 0x2c
   29e98:	str	r1, [sp, #4]
   29e9a:	str	r3, [sp, #16]
   29e9c:	ldr	r3, [r2, #4]
   29e9e:	str	r2, [sp, #12]
   29ea0:	lsls	r5, r3, #2
   29ea2:	str	r3, [sp, #8]
   29ea4:	mov	r0, r5
   29ea6:	blx	8678 <malloc@plt+0x4>
   29eaa:	mov	r4, r0
   29eac:	mov	r0, r5
   29eae:	blx	8678 <malloc@plt+0x4>
   29eb2:	mov	sl, r0
   29eb4:	cbz	r4, 29eb8 <write_raid56_with_parity@@Base+0x30>
   29eb6:	cbnz	r0, 29ed4 <write_raid56_with_parity@@Base+0x4c>
   29eb8:	mov	r0, r4
   29eba:	mvn.w	r9, #11
   29ebe:	blx	8434 <free@plt+0x4>
   29ec2:	mov	r0, sl
   29ec4:	blx	8434 <free@plt+0x4>
   29ec8:	mov	r0, r9
   29eca:	add	sp, #44	; 0x2c
   29ecc:	vpop	{d8}
   29ed0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29ed4:	ldr	r3, [sp, #16]
   29ed6:	asrs	r2, r3, #31
   29ed8:	mov	r1, r3
   29eda:	mov	r3, r2
   29edc:	mov	r2, r1
   29ede:	ldrd	r0, r1, [sp, #88]	; 0x58
   29ee2:	cmp	r3, r1
   29ee4:	ldr	r3, [sp, #16]
   29ee6:	it	eq
   29ee8:	cmpeq	r2, r0
   29eea:	ldr	r2, [sp, #88]	; 0x58
   29eec:	ldr	r0, [sp, #8]
   29eee:	mov.w	r1, #4
   29ef2:	it	cc
   29ef4:	movcc	r3, r2
   29ef6:	str	r3, [sp, #16]
   29ef8:	ldr	r3, [sp, #4]
   29efa:	ldrd	r2, r3, [r3, #40]	; 0x28
   29efe:	strd	r2, r3, [sp, #24]
   29f02:	blx	839c <calloc@plt+0x4>
   29f06:	mov	r8, r0
   29f08:	cmp	r0, #0
   29f0a:	beq.w	2a212 <write_raid56_with_parity@@Base+0x38a>
   29f0e:	ldr	r3, [sp, #96]	; 0x60
   29f10:	movs	r5, #0
   29f12:	ldr	r1, [sp, #88]	; 0x58
   29f14:	mvn.w	r2, #2
   29f18:	subs	r3, #8
   29f1a:	str	r3, [sp, #20]
   29f1c:	add.w	r7, r1, #96	; 0x60
   29f20:	mov	r6, r3
   29f22:	mov.w	r3, #4294967295	; 0xffffffff
   29f26:	ldr	r1, [sp, #8]
   29f28:	cmp	r1, r5
   29f2a:	bgt.n	29f32 <write_raid56_with_parity@@Base+0xaa>
   29f2c:	mov.w	fp, #0
   29f30:	b.n	2a060 <write_raid56_with_parity@@Base+0x1d8>
   29f32:	ldrd	r0, r1, [r6, #8]!
   29f36:	cmp	r3, r1
   29f38:	it	eq
   29f3a:	cmpeq	r2, r0
   29f3c:	bcc.n	29f2c <write_raid56_with_parity@@Base+0xa4>
   29f3e:	mov	r1, r7
   29f40:	movs	r0, #1
   29f42:	blx	839c <calloc@plt+0x4>
   29f46:	str.w	r0, [r8, r5, lsl #2]
   29f4a:	cmp	r0, #0
   29f4c:	beq.w	2a0ea <write_raid56_with_parity@@Base+0x262>
   29f50:	adds	r5, #1
   29f52:	mvn.w	r2, #2
   29f56:	mov.w	r3, #4294967295	; 0xffffffff
   29f5a:	b.n	29f26 <write_raid56_with_parity@@Base+0x9e>
   29f5c:	ldr	r3, [sp, #20]
   29f5e:	mvn.w	r2, #2
   29f62:	ldr.w	r5, [r8, fp, lsl #2]
   29f66:	ldrd	r6, r7, [r3, #8]!
   29f6a:	str	r3, [sp, #20]
   29f6c:	mov.w	r3, #4294967295	; 0xffffffff
   29f70:	cmp	r3, r7
   29f72:	it	eq
   29f74:	cmpeq	r2, r6
   29f76:	bcc.n	2a068 <write_raid56_with_parity@@Base+0x1e0>
   29f78:	ldr	r3, [sp, #88]	; 0x58
   29f7a:	movs	r2, #1
   29f7c:	strd	r6, r7, [r5, #40]	; 0x28
   29f80:	str	r3, [r5, #76]	; 0x4c
   29f82:	movs	r3, #0
   29f84:	strd	r2, r3, [r5, #80]	; 0x50
   29f88:	mov.w	r3, #4294967295	; 0xffffffff
   29f8c:	mov.w	r2, #4294967295	; 0xffffffff
   29f90:	str	r3, [r5, #88]	; 0x58
   29f92:	mov.w	r3, #4294967295	; 0xffffffff
   29f96:	strd	r2, r3, [r5, #48]	; 0x30
   29f9a:	ldrd	r2, r3, [sp, #24]
   29f9e:	cmp	r7, r3
   29fa0:	it	eq
   29fa2:	cmpeq	r6, r2
   29fa4:	bcc.n	29fce <write_raid56_with_parity@@Base+0x146>
   29fa6:	ldr	r3, [sp, #4]
   29fa8:	ldr	r1, [r3, #76]	; 0x4c
   29faa:	ldrd	r2, r3, [sp, #24]
   29fae:	adds	r2, r2, r1
   29fb0:	ldr	r1, [sp, #88]	; 0x58
   29fb2:	adc.w	r3, r3, #0
   29fb6:	adds	r1, r1, r6
   29fb8:	str	r1, [sp, #32]
   29fba:	ldr	r1, [sp, #92]	; 0x5c
   29fbc:	adcs	r1, r7
   29fbe:	str	r1, [sp, #36]	; 0x24
   29fc0:	ldrd	r0, r1, [sp, #32]
   29fc4:	cmp	r3, r1
   29fc6:	it	eq
   29fc8:	cmpeq	r2, r0
   29fca:	bcs.w	2a0d6 <write_raid56_with_parity@@Base+0x24e>
   29fce:	vmov	r0, s16
   29fd2:	movs	r2, #0
   29fd4:	mov	r1, r5
   29fd6:	bl	1b938 <read_whole_eb@@Base>
   29fda:	mov	r9, r0
   29fdc:	cmp	r0, #0
   29fde:	bne.w	2a0ee <write_raid56_with_parity@@Base+0x266>
   29fe2:	ldr	r3, [sp, #4]
   29fe4:	ldrd	r0, r1, [r5, #40]	; 0x28
   29fe8:	ldr.w	ip, [r5, #76]	; 0x4c
   29fec:	ldrd	r6, r7, [r3, #40]	; 0x28
   29ff0:	adds.w	r2, r0, ip
   29ff4:	adc.w	r3, r1, #0
   29ff8:	cmp	r7, r3
   29ffa:	it	eq
   29ffc:	cmpeq	r6, r2
   29ffe:	bcs.n	2a058 <write_raid56_with_parity@@Base+0x1d0>
   2a000:	ldr	r3, [sp, #4]
   2a002:	ldr.w	lr, [r3, #76]	; 0x4c
   2a006:	adds.w	r2, r6, lr
   2a00a:	adc.w	r3, r7, #0
   2a00e:	cmp	r1, r3
   2a010:	it	eq
   2a012:	cmpeq	r0, r2
   2a014:	bcs.n	2a058 <write_raid56_with_parity@@Base+0x1d0>
   2a016:	cmp	r7, r1
   2a018:	ldr	r3, [sp, #88]	; 0x58
   2a01a:	it	eq
   2a01c:	cmpeq	r6, r0
   2a01e:	it	cc
   2a020:	subcc.w	r9, r0, r6
   2a024:	cmp	r1, r7
   2a026:	it	eq
   2a028:	cmpeq	r0, r6
   2a02a:	sub.w	lr, lr, r9
   2a02e:	it	cc
   2a030:	subcc	r6, r6, r0
   2a032:	add.w	r0, r5, #96	; 0x60
   2a036:	it	cs
   2a038:	movcs	r6, #0
   2a03a:	cmp	lr, r3
   2a03c:	sub.w	r2, ip, r6
   2a040:	add	r0, r6
   2a042:	it	cs
   2a044:	movcs	lr, r3
   2a046:	ldr	r3, [sp, #4]
   2a048:	cmp	r2, lr
   2a04a:	add.w	r1, r3, #96	; 0x60
   2a04e:	add	r1, r9
   2a050:	it	cs
   2a052:	movcs	r2, lr
   2a054:	blx	8480 <memcpy@plt+0x4>
   2a058:	str.w	r5, [r4, fp, lsl #2]
   2a05c:	add.w	fp, fp, #1
   2a060:	ldr	r3, [sp, #8]
   2a062:	cmp	r3, fp
   2a064:	bgt.w	29f5c <write_raid56_with_parity@@Base+0xd4>
   2a068:	mov	r0, r8
   2a06a:	movs	r6, #0
   2a06c:	blx	8434 <free@plt+0x4>
   2a070:	ldr	r3, [sp, #16]
   2a072:	ldr	r7, [sp, #12]
   2a074:	mov	r5, r6
   2a076:	ldr.w	r8, [sp, #96]	; 0x60
   2a07a:	add.w	r9, r3, #96	; 0x60
   2a07e:	str	r6, [sp, #8]
   2a080:	ldr	r3, [sp, #12]
   2a082:	ldr	r0, [r3, #4]
   2a084:	cmp	r0, r6
   2a086:	bgt.n	2a116 <write_raid56_with_parity@@Base+0x28e>
   2a088:	add.w	r3, r0, #1073741824	; 0x40000000
   2a08c:	subs	r3, #1
   2a08e:	add.w	r2, r4, r3, lsl #2
   2a092:	cmp	r5, #0
   2a094:	beq.w	2a1c0 <write_raid56_with_parity@@Base+0x338>
   2a098:	ldr	r1, [sp, #8]
   2a09a:	str.w	r1, [r2, #-4]
   2a09e:	str.w	r5, [r4, r3, lsl #2]
   2a0a2:	movs	r3, #0
   2a0a4:	cmp	r0, r3
   2a0a6:	bgt.w	2a1b2 <write_raid56_with_parity@@Base+0x32a>
   2a0aa:	ldr	r1, [sp, #88]	; 0x58
   2a0ac:	mov	r2, sl
   2a0ae:	bl	2e1f4 <raid6_gen_syndrome@@Base>
   2a0b2:	mov.w	r9, #0
   2a0b6:	movs	r5, #0
   2a0b8:	ldr	r3, [sp, #12]
   2a0ba:	ldr	r3, [r3, #4]
   2a0bc:	cmp	r3, r5
   2a0be:	ble.w	2a1dc <write_raid56_with_parity@@Base+0x354>
   2a0c2:	ldr.w	r0, [r4, r5, lsl #2]
   2a0c6:	bl	16572 <write_extent_to_disk@@Base>
   2a0ca:	subs.w	r9, r0, #0
   2a0ce:	blt.w	2a1dc <write_raid56_with_parity@@Base+0x354>
   2a0d2:	adds	r5, #1
   2a0d4:	b.n	2a0b8 <write_raid56_with_parity@@Base+0x230>
   2a0d6:	ldr	r3, [sp, #4]
   2a0d8:	add.w	r0, r5, #96	; 0x60
   2a0dc:	ldr	r2, [sp, #88]	; 0x58
   2a0de:	add.w	r1, r3, #96	; 0x60
   2a0e2:	ldr	r3, [sp, #24]
   2a0e4:	subs	r6, r6, r3
   2a0e6:	add	r1, r6
   2a0e8:	b.n	2a054 <write_raid56_with_parity@@Base+0x1cc>
   2a0ea:	mvn.w	r9, #11
   2a0ee:	movs	r5, #0
   2a0f0:	ldr	r3, [sp, #8]
   2a0f2:	cmp	r3, r5
   2a0f4:	bgt.n	2a10a <write_raid56_with_parity@@Base+0x282>
   2a0f6:	mov	r0, r8
   2a0f8:	blx	8434 <free@plt+0x4>
   2a0fc:	mov	r0, r4
   2a0fe:	blx	8434 <free@plt+0x4>
   2a102:	mov	r0, sl
   2a104:	blx	8434 <free@plt+0x4>
   2a108:	b.n	29ec8 <write_raid56_with_parity@@Base+0x40>
   2a10a:	ldr.w	r0, [r8, r5, lsl #2]
   2a10e:	adds	r5, #1
   2a110:	blx	8434 <free@plt+0x4>
   2a114:	b.n	2a0f0 <write_raid56_with_parity@@Base+0x268>
   2a116:	ldrd	r2, r3, [r8]
   2a11a:	mov.w	r1, #4294967295	; 0xffffffff
   2a11e:	mvn.w	r0, #2
   2a122:	cmp	r1, r3
   2a124:	it	eq
   2a126:	cmpeq	r0, r2
   2a128:	bcc.n	2a164 <write_raid56_with_parity@@Base+0x2dc>
   2a12a:	ldrd	r2, r3, [r7, #16]
   2a12e:	ldr	r1, [r7, #8]
   2a130:	ldr.w	r0, [r4, r6, lsl #2]
   2a134:	strd	r2, r3, [r0, #48]	; 0x30
   2a138:	ldr	r3, [r1, #24]
   2a13a:	str	r3, [r0, #88]	; 0x58
   2a13c:	ldrd	r3, r2, [r1, #16]
   2a140:	adds	r3, #1
   2a142:	adc.w	r2, r2, #0
   2a146:	strd	r3, r2, [r1, #16]
   2a14a:	ldrd	r0, r1, [r0, #40]	; 0x28
   2a14e:	ldrd	r2, r3, [r8]
   2a152:	cmp	r1, r3
   2a154:	it	eq
   2a156:	cmpeq	r0, r2
   2a158:	bne.n	2a206 <write_raid56_with_parity@@Base+0x37e>
   2a15a:	adds	r6, #1
   2a15c:	adds	r7, #16
   2a15e:	add.w	r8, r8, #8
   2a162:	b.n	2a080 <write_raid56_with_parity@@Base+0x1f8>
   2a164:	mov	r0, r9
   2a166:	blx	8678 <malloc@plt+0x4>
   2a16a:	cmp	r0, #0
   2a16c:	beq.n	2a20c <write_raid56_with_parity@@Base+0x384>
   2a16e:	ldrd	r2, r3, [r7, #16]
   2a172:	mov.w	ip, #4294967295	; 0xffffffff
   2a176:	ldr	r1, [r7, #8]
   2a178:	mvn.w	fp, #1
   2a17c:	strd	r2, r3, [r0, #48]	; 0x30
   2a180:	ldr	r3, [r1, #24]
   2a182:	str	r3, [r0, #88]	; 0x58
   2a184:	ldrd	r3, r2, [r1, #16]
   2a188:	adds	r3, #1
   2a18a:	adc.w	r2, r2, #0
   2a18e:	strd	r3, r2, [r1, #16]
   2a192:	ldr	r3, [sp, #88]	; 0x58
   2a194:	str	r3, [r0, #76]	; 0x4c
   2a196:	ldrd	r2, r3, [r8]
   2a19a:	cmp	r3, ip
   2a19c:	it	eq
   2a19e:	cmpeq	r2, fp
   2a1a0:	beq.n	2a1ae <write_raid56_with_parity@@Base+0x326>
   2a1a2:	adds	r3, #1
   2a1a4:	itt	eq
   2a1a6:	cmpeq.w	r2, #4294967295	; 0xffffffff
   2a1aa:	moveq	r5, r0
   2a1ac:	b.n	2a15a <write_raid56_with_parity@@Base+0x2d2>
   2a1ae:	str	r0, [sp, #8]
   2a1b0:	b.n	2a15a <write_raid56_with_parity@@Base+0x2d2>
   2a1b2:	ldr.w	r2, [r4, r3, lsl #2]
   2a1b6:	adds	r2, #96	; 0x60
   2a1b8:	str.w	r2, [sl, r3, lsl #2]
   2a1bc:	adds	r3, #1
   2a1be:	b.n	2a0a4 <write_raid56_with_parity@@Base+0x21c>
   2a1c0:	ldr	r2, [sp, #8]
   2a1c2:	str.w	r2, [r4, r3, lsl #2]
   2a1c6:	cmp	r0, r5
   2a1c8:	bgt.n	2a1f8 <write_raid56_with_parity@@Base+0x370>
   2a1ca:	ldr	r1, [sp, #88]	; 0x58
   2a1cc:	subs	r2, r0, #1
   2a1ce:	mov	r3, sl
   2a1d0:	bl	2e260 <raid5_gen_result@@Base>
   2a1d4:	subs.w	r9, r0, #0
   2a1d8:	bge.w	2a0b6 <write_raid56_with_parity@@Base+0x22e>
   2a1dc:	movs	r5, #0
   2a1de:	ldr	r3, [sp, #12]
   2a1e0:	ldr	r3, [r3, #4]
   2a1e2:	cmp	r3, r5
   2a1e4:	ble.n	2a0fc <write_raid56_with_parity@@Base+0x274>
   2a1e6:	ldr.w	r0, [r4, r5, lsl #2]
   2a1ea:	ldr	r3, [sp, #4]
   2a1ec:	cmp	r0, r3
   2a1ee:	beq.n	2a1f4 <write_raid56_with_parity@@Base+0x36c>
   2a1f0:	blx	8434 <free@plt+0x4>
   2a1f4:	adds	r5, #1
   2a1f6:	b.n	2a1de <write_raid56_with_parity@@Base+0x356>
   2a1f8:	ldr.w	r3, [r4, r5, lsl #2]
   2a1fc:	adds	r3, #96	; 0x60
   2a1fe:	str.w	r3, [sl, r5, lsl #2]
   2a202:	adds	r5, #1
   2a204:	b.n	2a1c6 <write_raid56_with_parity@@Base+0x33e>
   2a206:	mvn.w	r9, #21
   2a20a:	b.n	2a1dc <write_raid56_with_parity@@Base+0x354>
   2a20c:	mvn.w	r9, #11
   2a210:	b.n	2a1dc <write_raid56_with_parity@@Base+0x354>
   2a212:	mvn.w	r9, #11
   2a216:	b.n	2a0fc <write_raid56_with_parity@@Base+0x274>

0002a218 <btrfs_stripe_length@@Base>:
   2a218:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   2a21c:	adds	r1, #96	; 0x60
   2a21e:	add	r1, r2
   2a220:	movs	r3, #0
   2a222:	cmp	r3, #0
   2a224:	mov	r7, r3
   2a226:	ldr	r4, [r1, #24]
   2a228:	ldrh	r2, [r1, #44]	; 0x2c
   2a22a:	and.w	r6, r4, #2040	; 0x7f8
   2a22e:	ldr	r5, [r1, #0]
   2a230:	it	eq
   2a232:	cmpeq	r6, #64	; 0x40
   2a234:	ldr	r4, [r1, #4]
   2a236:	uxth	r0, r2
   2a238:	beq.n	2a2dc <btrfs_stripe_length@@Base+0xc4>
   2a23a:	cmp	r3, #0
   2a23c:	it	eq
   2a23e:	cmpeq	r6, #65	; 0x41
   2a240:	bcs.n	2a28c <btrfs_stripe_length@@Base+0x74>
   2a242:	cmp	r3, #0
   2a244:	it	eq
   2a246:	cmpeq	r6, #8
   2a248:	beq.n	2a2d2 <btrfs_stripe_length@@Base+0xba>
   2a24a:	cmp	r3, #0
   2a24c:	it	eq
   2a24e:	cmpeq	r6, #9
   2a250:	bcs.n	2a272 <btrfs_stripe_length@@Base+0x5a>
   2a252:	orrs.w	r3, r6, r7
   2a256:	beq.n	2a282 <btrfs_stripe_length@@Base+0x6a>
   2a258:	ldr	r2, [pc, #140]	; (2a2e8 <btrfs_stripe_length@@Base+0xd0>)
   2a25a:	movs	r3, #1
   2a25c:	ldr	r1, [pc, #140]	; (2a2ec <btrfs_stripe_length@@Base+0xd4>)
   2a25e:	ldr	r0, [pc, #144]	; (2a2f0 <btrfs_stripe_length@@Base+0xd8>)
   2a260:	add	r2, pc
   2a262:	str	r3, [sp, #0]
   2a264:	adds	r2, #130	; 0x82
   2a266:	add	r1, pc
   2a268:	add	r0, pc
   2a26a:	movw	r3, #2545	; 0x9f1
   2a26e:	bl	27514 <btrfs_add_root_ref@@Base+0x1f4>
   2a272:	cmp	r3, #0
   2a274:	it	eq
   2a276:	cmpeq	r6, #16
   2a278:	beq.n	2a282 <btrfs_stripe_length@@Base+0x6a>
   2a27a:	cmp	r3, #0
   2a27c:	it	eq
   2a27e:	cmpeq	r6, #32
   2a280:	bne.n	2a258 <btrfs_stripe_length@@Base+0x40>
   2a282:	mov	r0, r5
   2a284:	mov	r1, r4
   2a286:	add	sp, #12
   2a288:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2a28c:	cmp	r3, #0
   2a28e:	it	eq
   2a290:	cmpeq.w	r6, #256	; 0x100
   2a294:	beq.n	2a2d8 <btrfs_stripe_length@@Base+0xc0>
   2a296:	mov.w	r9, #0
   2a29a:	cmp	r9, r3
   2a29c:	mov.w	r8, #256	; 0x100
   2a2a0:	it	eq
   2a2a2:	cmpeq	r8, r6
   2a2a4:	bcc.n	2a2be <btrfs_stripe_length@@Base+0xa6>
   2a2a6:	cmp	r3, #0
   2a2a8:	it	eq
   2a2aa:	cmpeq	r6, #128	; 0x80
   2a2ac:	bne.n	2a258 <btrfs_stripe_length@@Base+0x40>
   2a2ae:	subs	r2, r0, #1
   2a2b0:	mov	r0, r5
   2a2b2:	mov	r1, r4
   2a2b4:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   2a2b8:	mov	r5, r0
   2a2ba:	mov	r4, r1
   2a2bc:	b.n	2a282 <btrfs_stripe_length@@Base+0x6a>
   2a2be:	cmp	r3, #0
   2a2c0:	it	eq
   2a2c2:	cmpeq.w	r6, #512	; 0x200
   2a2c6:	beq.n	2a282 <btrfs_stripe_length@@Base+0x6a>
   2a2c8:	cmp	r3, #0
   2a2ca:	it	eq
   2a2cc:	cmpeq.w	r6, #1024	; 0x400
   2a2d0:	b.n	2a280 <btrfs_stripe_length@@Base+0x68>
   2a2d2:	uxth	r2, r2
   2a2d4:	movs	r3, #0
   2a2d6:	b.n	2a2b0 <btrfs_stripe_length@@Base+0x98>
   2a2d8:	subs	r2, r0, #2
   2a2da:	b.n	2a2b0 <btrfs_stripe_length@@Base+0x98>
   2a2dc:	ldrh	r1, [r1, #46]	; 0x2e
   2a2de:	bl	38418 <btrfs_util_strerror@@Base+0x18>
   2a2e2:	mov	r2, r0
   2a2e4:	b.n	2a2d4 <btrfs_stripe_length@@Base+0xbc>
   2a2e6:	nop
   2a2e8:	strb	r4, [r3, r7]
   2a2ea:	movs	r1, r0
   2a2ec:	ldr	r6, [pc, #996]	; (2a6d4 <btrfs_start_transaction@@Base+0x60>)
   2a2ee:	movs	r1, r0
   2a2f0:	cmp	r4, #105	; 0x69
   2a2f2:	movs	r1, r0

0002a2f4 <btrfs_fix_device_size@@Base>:
   2a2f4:	ldr	r2, [pc, #344]	; (2a450 <btrfs_fix_device_size@@Base+0x15c>)
   2a2f6:	ldr	r3, [pc, #348]	; (2a454 <btrfs_fix_device_size@@Base+0x160>)
   2a2f8:	add	r2, pc
   2a2fa:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a2fe:	sub	sp, #116	; 0x74
   2a300:	ldr	r3, [r2, r3]
   2a302:	mov	r5, r1
   2a304:	ldrd	sl, fp, [r1, #72]	; 0x48
   2a308:	movs	r1, #0
   2a30a:	ldr	r3, [r3, #0]
   2a30c:	str	r3, [sp, #108]	; 0x6c
   2a30e:	mov.w	r3, #0
   2a312:	ldr.w	r3, [r0, #388]	; 0x184
   2a316:	movs	r4, #0
   2a318:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2a31c:	adc.w	r1, r1, #4294967295	; 0xffffffff
   2a320:	and.w	r6, r2, sl
   2a324:	and.w	r7, r1, fp
   2a328:	orrs.w	r2, r6, r7
   2a32c:	beq.n	2a378 <btrfs_fix_device_size@@Base+0x84>
   2a32e:	negs	r3, r3
   2a330:	ldr.w	r9, [r0, #32]
   2a334:	and.w	r3, r3, sl
   2a338:	str	r3, [r5, #72]	; 0x48
   2a33a:	movs	r3, #216	; 0xd8
   2a33c:	strb.w	r3, [sp, #28]
   2a340:	ldr	r3, [r5, #64]	; 0x40
   2a342:	mov.w	r8, #1
   2a346:	mov	r1, r8
   2a348:	mov	r0, r9
   2a34a:	strd	r8, r4, [sp, #20]
   2a34e:	str.w	r3, [sp, #29]
   2a352:	ldr	r3, [r5, #68]	; 0x44
   2a354:	str.w	r3, [sp, #33]	; 0x21
   2a358:	bl	2a674 <btrfs_start_transaction@@Base>
   2a35c:	cmn.w	r0, #4096	; 0x1000
   2a360:	mov	r6, r0
   2a362:	bls.n	2a38c <btrfs_fix_device_size@@Base+0x98>
   2a364:	mov	r4, r0
   2a366:	blx	8784 <__errno_location@plt>
   2a36a:	negs	r3, r6
   2a36c:	mov	r1, r6
   2a36e:	str	r3, [r0, #0]
   2a370:	ldr	r0, [pc, #228]	; (2a458 <btrfs_fix_device_size@@Base+0x164>)
   2a372:	add	r0, pc
   2a374:	bl	16b70 <__btrfs_error@@Base>
   2a378:	ldr	r2, [pc, #224]	; (2a45c <btrfs_fix_device_size@@Base+0x168>)
   2a37a:	ldr	r3, [pc, #216]	; (2a454 <btrfs_fix_device_size@@Base+0x160>)
   2a37c:	add	r2, pc
   2a37e:	ldr	r3, [r2, r3]
   2a380:	ldr	r2, [r3, #0]
   2a382:	ldr	r3, [sp, #108]	; 0x6c
   2a384:	eors	r2, r3
   2a386:	beq.n	2a448 <btrfs_fix_device_size@@Base+0x154>
   2a388:	blx	8510 <__stack_chk_fail@plt>
   2a38c:	add	r7, sp, #40	; 0x28
   2a38e:	mov	r0, r7
   2a390:	bl	1753c <btrfs_init_path@@Base>
   2a394:	strd	r4, r8, [sp]
   2a398:	add	r2, sp, #20
   2a39a:	mov	r3, r7
   2a39c:	mov	r1, r9
   2a39e:	mov	r0, r6
   2a3a0:	bl	19930 <btrfs_search_slot@@Base>
   2a3a4:	subs	r4, r0, #0
   2a3a6:	ble.n	2a3c2 <btrfs_fix_device_size@@Base+0xce>
   2a3a8:	ldr	r0, [pc, #180]	; (2a460 <btrfs_fix_device_size@@Base+0x16c>)
   2a3aa:	mvn.w	r4, #1
   2a3ae:	ldrd	r2, r3, [r5, #64]	; 0x40
   2a3b2:	add	r0, pc
   2a3b4:	bl	16b70 <__btrfs_error@@Base>
   2a3b8:	mov	r1, r9
   2a3ba:	mov	r0, r6
   2a3bc:	bl	2a8f4 <btrfs_commit_transaction@@Base>
   2a3c0:	b.n	2a41c <btrfs_fix_device_size@@Base+0x128>
   2a3c2:	beq.n	2a3d8 <btrfs_fix_device_size@@Base+0xe4>
   2a3c4:	blx	8784 <__errno_location@plt>
   2a3c8:	negs	r3, r4
   2a3ca:	mov	r1, r4
   2a3cc:	str	r3, [r0, #0]
   2a3ce:	ldr	r0, [pc, #148]	; (2a464 <btrfs_fix_device_size@@Base+0x170>)
   2a3d0:	add	r0, pc
   2a3d2:	bl	16b70 <__btrfs_error@@Base>
   2a3d6:	b.n	2a3b8 <btrfs_fix_device_size@@Base+0xc4>
   2a3d8:	ldr	r0, [sp, #40]	; 0x28
   2a3da:	mov.w	ip, #25
   2a3de:	ldr	r2, [sp, #72]	; 0x48
   2a3e0:	add.w	r3, r0, #96	; 0x60
   2a3e4:	ldrd	r1, r4, [r5, #72]	; 0x48
   2a3e8:	mla	r2, ip, r2, r3
   2a3ec:	ldr.w	r2, [r2, #118]	; 0x76
   2a3f0:	add	r3, r2
   2a3f2:	str.w	r1, [r3, #109]	; 0x6d
   2a3f6:	str.w	r4, [r3, #113]	; 0x71
   2a3fa:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   2a3fe:	mov	r1, r9
   2a400:	mov	r0, r6
   2a402:	bl	2a8f4 <btrfs_commit_transaction@@Base>
   2a406:	subs	r4, r0, #0
   2a408:	bge.n	2a424 <btrfs_fix_device_size@@Base+0x130>
   2a40a:	blx	8784 <__errno_location@plt>
   2a40e:	negs	r3, r4
   2a410:	mov	r1, r4
   2a412:	str	r3, [r0, #0]
   2a414:	ldr	r0, [pc, #80]	; (2a468 <btrfs_fix_device_size@@Base+0x174>)
   2a416:	add	r0, pc
   2a418:	bl	16b70 <__btrfs_error@@Base>
   2a41c:	mov	r0, r7
   2a41e:	bl	1754c <btrfs_release_path@@Base>
   2a422:	b.n	2a378 <btrfs_fix_device_size@@Base+0x84>
   2a424:	mov	r0, r7
   2a426:	mov	r4, r8
   2a428:	bl	1754c <btrfs_release_path@@Base>
   2a42c:	ldrd	r2, r3, [r5, #72]	; 0x48
   2a430:	ldr	r1, [pc, #56]	; (2a46c <btrfs_fix_device_size@@Base+0x178>)
   2a432:	mov	r0, r8
   2a434:	strd	sl, fp, [sp]
   2a438:	strd	r2, r3, [sp, #8]
   2a43c:	add	r1, pc
   2a43e:	ldrd	r2, r3, [r5, #64]	; 0x40
   2a442:	blx	8838 <__printf_chk@plt+0x4>
   2a446:	b.n	2a378 <btrfs_fix_device_size@@Base+0x84>
   2a448:	mov	r0, r4
   2a44a:	add	sp, #116	; 0x74
   2a44c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a450:	ldr	r2, [sp, #560]	; 0x230
   2a452:	movs	r3, r0
   2a454:	lsls	r0, r4, #8
   2a456:	movs	r0, r0
   2a458:	strh	r7, [r3, r1]
   2a45a:	movs	r1, r0
   2a45c:	ldr	r2, [sp, #32]
   2a45e:	movs	r3, r0
   2a460:	strh	r3, [r0, r1]
   2a462:	movs	r1, r0
   2a464:	strh	r4, [r1, r1]
   2a466:	movs	r1, r0
   2a468:	strh	r3, [r5, r0]
   2a46a:	movs	r1, r0
   2a46c:	strh	r3, [r6, r0]
   2a46e:	movs	r1, r0

0002a470 <btrfs_fix_super_size@@Base>:
   2a470:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2a474:	sub	sp, #20
   2a476:	ldr.w	r3, [r0, #352]	; 0x160
   2a47a:	mov	r5, r0
   2a47c:	movs	r6, #0
   2a47e:	movs	r7, #0
   2a480:	add.w	lr, r3, #72	; 0x48
   2a484:	ldr	r3, [r3, #72]	; 0x48
   2a486:	cmp	r3, lr
   2a488:	bne.n	2a4c6 <btrfs_fix_super_size@@Base+0x56>
   2a48a:	ldr.w	r3, [r5, #308]	; 0x134
   2a48e:	ldr.w	r9, [r3, #116]	; 0x74
   2a492:	ldr.w	r8, [r3, #112]	; 0x70
   2a496:	cmp	r7, r9
   2a498:	it	eq
   2a49a:	cmpeq	r6, r8
   2a49c:	beq.n	2a540 <btrfs_fix_super_size@@Base+0xd0>
   2a49e:	str	r6, [r3, #112]	; 0x70
   2a4a0:	movs	r1, #1
   2a4a2:	str	r7, [r3, #116]	; 0x74
   2a4a4:	ldr	r0, [r5, #28]
   2a4a6:	bl	2a674 <btrfs_start_transaction@@Base>
   2a4aa:	cmn.w	r0, #4096	; 0x1000
   2a4ae:	mov	r4, r0
   2a4b0:	bls.n	2a510 <btrfs_fix_super_size@@Base+0xa0>
   2a4b2:	blx	8784 <__errno_location@plt>
   2a4b6:	negs	r3, r4
   2a4b8:	mov	r1, r4
   2a4ba:	str	r3, [r0, #0]
   2a4bc:	ldr	r0, [pc, #132]	; (2a544 <btrfs_fix_super_size@@Base+0xd4>)
   2a4be:	add	r0, pc
   2a4c0:	bl	16b70 <__btrfs_error@@Base>
   2a4c4:	b.n	2a4fe <btrfs_fix_super_size@@Base+0x8e>
   2a4c6:	ldr.w	ip, [r5, #388]	; 0x184
   2a4ca:	movs	r4, #0
   2a4cc:	ldrd	r1, r0, [r3, #72]	; 0x48
   2a4d0:	adds.w	r2, ip, #4294967295	; 0xffffffff
   2a4d4:	adc.w	r4, r4, #4294967295	; 0xffffffff
   2a4d8:	and.w	r8, r2, r1
   2a4dc:	and.w	r9, r4, r0
   2a4e0:	orrs.w	r2, r8, r9
   2a4e4:	beq.n	2a506 <btrfs_fix_super_size@@Base+0x96>
   2a4e6:	strd	r1, r0, [sp]
   2a4ea:	mvn.w	r4, #116	; 0x74
   2a4ee:	ldr	r0, [pc, #88]	; (2a548 <btrfs_fix_super_size@@Base+0xd8>)
   2a4f0:	str.w	ip, [sp, #8]
   2a4f4:	add	r0, pc
   2a4f6:	ldrd	r2, r3, [r3, #64]	; 0x40
   2a4fa:	bl	16b70 <__btrfs_error@@Base>
   2a4fe:	mov	r0, r4
   2a500:	add	sp, #20
   2a502:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2a506:	adds	r6, r6, r1
   2a508:	ldr	r3, [r3, #0]
   2a50a:	adc.w	r7, r0, r7
   2a50e:	b.n	2a486 <btrfs_fix_super_size@@Base+0x16>
   2a510:	ldr	r1, [r5, #28]
   2a512:	bl	2a8f4 <btrfs_commit_transaction@@Base>
   2a516:	subs	r4, r0, #0
   2a518:	bge.n	2a52a <btrfs_fix_super_size@@Base+0xba>
   2a51a:	blx	8784 <__errno_location@plt>
   2a51e:	negs	r3, r4
   2a520:	mov	r1, r4
   2a522:	str	r3, [r0, #0]
   2a524:	ldr	r0, [pc, #36]	; (2a54c <btrfs_fix_super_size@@Base+0xdc>)
   2a526:	add	r0, pc
   2a528:	b.n	2a4c0 <btrfs_fix_super_size@@Base+0x50>
   2a52a:	ldr	r1, [pc, #36]	; (2a550 <btrfs_fix_super_size@@Base+0xe0>)
   2a52c:	mov	r2, r8
   2a52e:	mov	r3, r9
   2a530:	movs	r0, #1
   2a532:	add	r1, pc
   2a534:	strd	r6, r7, [sp]
   2a538:	blx	8838 <__printf_chk@plt+0x4>
   2a53c:	movs	r4, #1
   2a53e:	b.n	2a4fe <btrfs_fix_super_size@@Base+0x8e>
   2a540:	movs	r4, #0
   2a542:	b.n	2a4fe <btrfs_fix_super_size@@Base+0x8e>
   2a544:	str	r3, [r2, r4]
   2a546:	movs	r1, r0
   2a548:	str	r4, [r7, r6]
   2a54a:	movs	r1, r0
   2a54c:	str	r3, [r3, r4]
   2a54e:	movs	r1, r0
   2a550:	str	r5, [r5, r6]
   2a552:	movs	r1, r0

0002a554 <btrfs_fix_device_and_super_size@@Base>:
   2a554:	push	{r3, r4, r5, r6, r7, lr}
   2a556:	mov	r5, r0
   2a558:	ldr.w	r3, [r0, #352]	; 0x160
   2a55c:	add.w	r7, r3, #72	; 0x48
   2a560:	ldr	r2, [r3, #92]	; 0x5c
   2a562:	cbz	r2, 2a572 <btrfs_fix_device_and_super_size@@Base+0x1e>
   2a564:	ldr	r0, [pc, #132]	; (2a5ec <btrfs_fix_device_and_super_size@@Base+0x98>)
   2a566:	add	r0, pc
   2a568:	bl	16b70 <__btrfs_error@@Base>
   2a56c:	mvn.w	r0, #94	; 0x5e
   2a570:	pop	{r3, r4, r5, r6, r7, pc}
   2a572:	ldr	r4, [r3, #72]	; 0x48
   2a574:	cmp	r7, r4
   2a576:	bne.n	2a5c8 <btrfs_fix_device_and_super_size@@Base+0x74>
   2a578:	ldr	r0, [pc, #116]	; (2a5f0 <btrfs_fix_device_and_super_size@@Base+0x9c>)
   2a57a:	add	r0, pc
   2a57c:	bl	16b70 <__btrfs_error@@Base>
   2a580:	mvn.w	r0, #18
   2a584:	b.n	2a570 <btrfs_fix_device_and_super_size@@Base+0x1c>
   2a586:	ldr	r2, [r3, #24]
   2a588:	adds	r2, #1
   2a58a:	bne.n	2a59e <btrfs_fix_device_and_super_size@@Base+0x4a>
   2a58c:	ldr	r0, [pc, #100]	; (2a5f4 <btrfs_fix_device_and_super_size@@Base+0xa0>)
   2a58e:	ldrd	r2, r3, [r3, #64]	; 0x40
   2a592:	add	r0, pc
   2a594:	bl	16b70 <__btrfs_error@@Base>
   2a598:	ldr	r0, [pc, #92]	; (2a5f8 <btrfs_fix_device_and_super_size@@Base+0xa4>)
   2a59a:	add	r0, pc
   2a59c:	b.n	2a57c <btrfs_fix_device_and_super_size@@Base+0x28>
   2a59e:	ldr	r2, [r3, #28]
   2a5a0:	cmp	r2, #0
   2a5a2:	beq.n	2a58c <btrfs_fix_device_and_super_size@@Base+0x38>
   2a5a4:	ldr	r3, [r3, #0]
   2a5a6:	cmp	r3, r7
   2a5a8:	bne.n	2a586 <btrfs_fix_device_and_super_size@@Base+0x32>
   2a5aa:	movs	r6, #0
   2a5ac:	cmp	r4, r7
   2a5ae:	bne.n	2a5cc <btrfs_fix_device_and_super_size@@Base+0x78>
   2a5b0:	mov	r0, r5
   2a5b2:	bl	2a470 <btrfs_fix_super_size@@Base>
   2a5b6:	cmp	r0, #0
   2a5b8:	bgt.n	2a5bc <btrfs_fix_device_and_super_size@@Base+0x68>
   2a5ba:	cbz	r6, 2a5e0 <btrfs_fix_device_and_super_size@@Base+0x8c>
   2a5bc:	ldr	r0, [pc, #60]	; (2a5fc <btrfs_fix_device_and_super_size@@Base+0xa8>)
   2a5be:	add	r0, pc
   2a5c0:	blx	865c <puts@plt+0x4>
   2a5c4:	movs	r0, #1
   2a5c6:	b.n	2a570 <btrfs_fix_device_and_super_size@@Base+0x1c>
   2a5c8:	mov	r3, r4
   2a5ca:	b.n	2a5a6 <btrfs_fix_device_and_super_size@@Base+0x52>
   2a5cc:	mov	r1, r4
   2a5ce:	mov	r0, r5
   2a5d0:	bl	2a2f4 <btrfs_fix_device_size@@Base>
   2a5d4:	cmp	r0, #0
   2a5d6:	blt.n	2a570 <btrfs_fix_device_and_super_size@@Base+0x1c>
   2a5d8:	ldr	r4, [r4, #0]
   2a5da:	it	ne
   2a5dc:	movne	r6, #1
   2a5de:	b.n	2a5ac <btrfs_fix_device_and_super_size@@Base+0x58>
   2a5e0:	ldr	r0, [pc, #28]	; (2a600 <btrfs_fix_device_and_super_size@@Base+0xac>)
   2a5e2:	add	r0, pc
   2a5e4:	blx	865c <puts@plt+0x4>
   2a5e8:	mov	r0, r6
   2a5ea:	b.n	2a570 <btrfs_fix_device_and_super_size@@Base+0x1c>
   2a5ec:	str	r1, [r6, r6]
   2a5ee:	movs	r1, r0
   2a5f0:	str	r6, [r2, r7]
   2a5f2:	movs	r1, r0
   2a5f4:	str	r6, [r1, r7]
   2a5f6:	movs	r1, r0
   2a5f8:	str	r5, [r5, r7]
   2a5fa:	movs	r1, r0
   2a5fc:	strh	r4, [r1, r0]
   2a5fe:	movs	r1, r0
   2a600:	strh	r0, [r6, r0]
   2a602:	movs	r1, r0
   2a604:	ldr.w	ip, [pc, #80]	; 2a658 <btrfs_fix_device_and_super_size@@Base+0x104>
   2a608:	ldr	r4, [pc, #80]	; (2a65c <btrfs_fix_device_and_super_size@@Base+0x108>)
   2a60a:	add	ip, pc
   2a60c:	ldr	r3, [pc, #80]	; (2a660 <btrfs_fix_device_and_super_size@@Base+0x10c>)
   2a60e:	push	{lr}
   2a610:	sub	sp, #92	; 0x5c
   2a612:	ldr.w	r4, [ip, r4]
   2a616:	add	r3, pc
   2a618:	ldr	r4, [r4, #0]
   2a61a:	str	r4, [sp, #84]	; 0x54
   2a61c:	mov.w	r4, #0
   2a620:	ldr	r4, [pc, #64]	; (2a664 <btrfs_fix_device_and_super_size@@Base+0x110>)
   2a622:	ldr	r4, [r3, r4]
   2a624:	ldr	r3, [pc, #64]	; (2a668 <btrfs_fix_device_and_super_size@@Base+0x114>)
   2a626:	strd	r0, r2, [sp, #8]
   2a62a:	add	r3, pc
   2a62c:	ldr	r2, [pc, #60]	; (2a66c <btrfs_fix_device_and_super_size@@Base+0x118>)
   2a62e:	strd	r1, r3, [sp]
   2a632:	movs	r1, #1
   2a634:	ldr	r3, [pc, #56]	; (2a670 <btrfs_fix_device_and_super_size@@Base+0x11c>)
   2a636:	add	r2, pc
   2a638:	ldr	r0, [r4, #0]
   2a63a:	add	r4, sp, #20
   2a63c:	add	r3, pc
   2a63e:	blx	8860 <__fprintf_chk@plt+0x4>
   2a642:	movs	r1, #16
   2a644:	mov	r0, r4
   2a646:	blx	86c4 <backtrace@plt>
   2a64a:	movs	r2, #2
   2a64c:	mov	r1, r0
   2a64e:	mov	r0, r4
   2a650:	blx	89c8 <backtrace_symbols_fd@plt>
   2a654:	blx	8980 <abort@plt>
   2a658:	str	r7, [sp, #488]	; 0x1e8
   2a65a:	movs	r3, r0
   2a65c:	lsls	r0, r4, #8
   2a65e:	movs	r0, r0
   2a660:	str	r7, [sp, #440]	; 0x1b8
   2a662:	movs	r3, r0
   2a664:	lsls	r0, r6, #8
   2a666:	movs	r0, r0
   2a668:	strb	r0, [r3, r6]
   2a66a:	movs	r1, r0
   2a66c:	strd	r0, r0, [ip], #-0
   2a670:	strb	r0, [r2, r2]
   2a672:	movs	r1, r0

0002a674 <btrfs_start_transaction@@Base>:
   2a674:	push	{r3, r4, r5, r6, r7, lr}
   2a676:	mov	r5, r0
   2a678:	ldr.w	r6, [r0, #464]	; 0x1d0
   2a67c:	mov	r7, r1
   2a67e:	movs	r0, #1
   2a680:	movs	r1, #96	; 0x60
   2a682:	blx	839c <calloc@plt+0x4>
   2a686:	ldr.w	r3, [r6, #368]	; 0x170
   2a68a:	mov	r4, r0
   2a68c:	cbnz	r3, 2a6ec <btrfs_start_transaction@@Base+0x78>
   2a68e:	cbz	r0, 2a6f2 <btrfs_start_transaction@@Base+0x7e>
   2a690:	ldr	r3, [r5, #4]
   2a692:	cbz	r3, 2a6aa <btrfs_start_transaction@@Base+0x36>
   2a694:	ldr	r0, [pc, #96]	; (2a6f8 <btrfs_start_transaction@@Base+0x84>)
   2a696:	add	r0, pc
   2a698:	bl	16b70 <__btrfs_error@@Base>
   2a69c:	mov	r0, r4
   2a69e:	blx	8434 <free@plt+0x4>
   2a6a2:	mvn.w	r4, #21
   2a6a6:	mov	r0, r4
   2a6a8:	pop	{r3, r4, r5, r6, r7, pc}
   2a6aa:	ldr.w	r3, [r6, #304]	; 0x130
   2a6ae:	cbz	r3, 2a6b6 <btrfs_start_transaction@@Base+0x42>
   2a6b0:	ldr	r0, [pc, #72]	; (2a6fc <btrfs_start_transaction@@Base+0x88>)
   2a6b2:	add	r0, pc
   2a6b4:	b.n	2a698 <btrfs_start_transaction@@Base+0x24>
   2a6b6:	str	r6, [r0, #0]
   2a6b8:	ldrd	r3, r2, [r6, #232]	; 0xe8
   2a6bc:	str.w	r0, [r6, #304]	; 0x130
   2a6c0:	adds	r3, #1
   2a6c2:	adc.w	r2, r2, #0
   2a6c6:	strd	r3, r2, [r6, #232]	; 0xe8
   2a6ca:	strd	r3, r2, [r0, #8]
   2a6ce:	ldrh	r1, [r0, #32]
   2a6d0:	strd	r3, r2, [r5, #480]	; 0x1e0
   2a6d4:	ldr	r3, [r5, #0]
   2a6d6:	bic.w	r1, r1, #510	; 0x1fe
   2a6da:	str	r7, [r0, #48]	; 0x30
   2a6dc:	bic.w	r1, r1, #1
   2a6e0:	strh	r1, [r0, #32]
   2a6e2:	str	r3, [r5, #4]
   2a6e4:	ldr	r2, [r3, #80]	; 0x50
   2a6e6:	adds	r2, #1
   2a6e8:	str	r2, [r3, #80]	; 0x50
   2a6ea:	b.n	2a6a6 <btrfs_start_transaction@@Base+0x32>
   2a6ec:	mvn.w	r4, #29
   2a6f0:	b.n	2a6a6 <btrfs_start_transaction@@Base+0x32>
   2a6f2:	mvn.w	r4, #11
   2a6f6:	b.n	2a6a6 <btrfs_start_transaction@@Base+0x32>
   2a6f8:	strb	r4, [r0, r1]
   2a6fa:	movs	r1, r0
   2a6fc:	strb	r2, [r3, r1]
   2a6fe:	movs	r1, r0

0002a700 <commit_tree_roots@@Base>:
   2a700:	ldr	r2, [pc, #264]	; (2a80c <commit_tree_roots@@Base+0x10c>)
   2a702:	ldr	r3, [pc, #268]	; (2a810 <commit_tree_roots@@Base+0x110>)
   2a704:	add	r2, pc
   2a706:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a70a:	sub	sp, #28
   2a70c:	ldr	r3, [r2, r3]
   2a70e:	mov	r6, r0
   2a710:	mov	r5, r1
   2a712:	ldr	r3, [r3, #0]
   2a714:	str	r3, [sp, #20]
   2a716:	mov.w	r3, #0
   2a71a:	ldrb.w	r3, [r1, #364]	; 0x16c
   2a71e:	ands.w	r3, r3, #2
   2a722:	beq.n	2a73c <commit_tree_roots@@Base+0x3c>
   2a724:	mov.w	sl, #0
   2a728:	ldr	r2, [pc, #232]	; (2a814 <commit_tree_roots@@Base+0x114>)
   2a72a:	ldr	r3, [pc, #228]	; (2a810 <commit_tree_roots@@Base+0x110>)
   2a72c:	add	r2, pc
   2a72e:	ldr	r3, [r2, r3]
   2a730:	ldr	r2, [r3, #0]
   2a732:	ldr	r3, [sp, #20]
   2a734:	eors	r2, r3
   2a736:	beq.n	2a804 <commit_tree_roots@@Base+0x104>
   2a738:	blx	8510 <__stack_chk_fail@plt>
   2a73c:	ldr	r2, [r1, #28]
   2a73e:	ldr	r2, [r2, #0]
   2a740:	ldr	r1, [r2, #80]	; 0x50
   2a742:	str	r2, [sp, #16]
   2a744:	adds	r1, #1
   2a746:	str	r1, [r2, #80]	; 0x50
   2a748:	add	r1, sp, #16
   2a74a:	strd	r3, r1, [sp]
   2a74e:	ldr	r1, [r5, #28]
   2a750:	bl	17f78 <btrfs_cow_block@@Base>
   2a754:	mov	sl, r0
   2a756:	ldr	r0, [sp, #16]
   2a758:	bl	16314 <free_extent_buffer@@Base>
   2a75c:	cmp.w	sl, #0
   2a760:	bne.n	2a728 <commit_tree_roots@@Base+0x28>
   2a762:	mov.w	r1, #4294967295	; 0xffffffff
   2a766:	mov	r0, r6
   2a768:	bl	225dc <btrfs_run_delayed_refs@@Base>
   2a76c:	cmp	r0, #0
   2a76e:	bne.n	2a800 <commit_tree_roots@@Base+0x100>
   2a770:	add.w	fp, r5, #336	; 0x150
   2a774:	str	r0, [sp, #12]
   2a776:	ldr.w	r4, [r5, #336]	; 0x150
   2a77a:	cmp	r4, fp
   2a77c:	beq.n	2a724 <commit_tree_roots@@Base+0x24>
   2a77e:	ldrd	r2, r3, [r4]
   2a782:	sub.w	r7, r4, #520	; 0x208
   2a786:	sub.w	r8, r4, #512	; 0x200
   2a78a:	str	r3, [r2, #4]
   2a78c:	str	r2, [r3, #0]
   2a78e:	strd	r4, r4, [r4]
   2a792:	subs	r4, #73	; 0x49
   2a794:	ldr.w	r3, [r7, #464]	; 0x1d0
   2a798:	ldr.w	r9, [r3, #28]
   2a79c:	ldr.w	ip, [r7]
   2a7a0:	ldr.w	r1, [r8, #180]	; 0xb4
   2a7a4:	ldr.w	r0, [r8, #176]	; 0xb0
   2a7a8:	ldrd	r2, r3, [ip, #40]	; 0x28
   2a7ac:	cmp	r1, r3
   2a7ae:	it	eq
   2a7b0:	cmpeq	r0, r2
   2a7b2:	beq.n	2a7ea <commit_tree_roots@@Base+0xea>
   2a7b4:	str.w	r2, [r8, #176]	; 0xb0
   2a7b8:	mov	r1, r9
   2a7ba:	str.w	r3, [r8, #180]	; 0xb4
   2a7be:	mov	r0, r6
   2a7c0:	ldrd	r3, r2, [r6, #8]
   2a7c4:	str.w	r2, [r8, #164]	; 0xa4
   2a7c8:	mov	r2, r4
   2a7ca:	str.w	r3, [r8, #160]	; 0xa0
   2a7ce:	ldrb.w	r3, [ip, #196]	; 0xc4
   2a7d2:	strb.w	r3, [r7, #246]	; 0xf6
   2a7d6:	mov	r3, r8
   2a7d8:	bl	27170 <btrfs_update_root@@Base>
   2a7dc:	subs.w	sl, r0, #0
   2a7e0:	blt.n	2a7ee <commit_tree_roots@@Base+0xee>
   2a7e2:	mov	r0, r6
   2a7e4:	bl	20034 <btrfs_write_dirty_block_groups@@Base>
   2a7e8:	b.n	2a79c <commit_tree_roots@@Base+0x9c>
   2a7ea:	mov.w	sl, #0
   2a7ee:	ldr	r0, [r7, #4]
   2a7f0:	bl	16314 <free_extent_buffer@@Base>
   2a7f4:	ldr	r3, [sp, #12]
   2a7f6:	str	r3, [r7, #4]
   2a7f8:	cmp.w	sl, #0
   2a7fc:	beq.n	2a776 <commit_tree_roots@@Base+0x76>
   2a7fe:	b.n	2a728 <commit_tree_roots@@Base+0x28>
   2a800:	mov	sl, r0
   2a802:	b.n	2a728 <commit_tree_roots@@Base+0x28>
   2a804:	mov	r0, sl
   2a806:	add	sp, #28
   2a808:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a80c:	str	r6, [sp, #512]	; 0x200
   2a80e:	movs	r3, r0
   2a810:	lsls	r0, r4, #8
   2a812:	movs	r0, r0
   2a814:	str	r6, [sp, #352]	; 0x160
   2a816:	movs	r3, r0

0002a818 <__commit_transaction@@Base>:
   2a818:	ldr	r2, [pc, #196]	; (2a8e0 <__commit_transaction@@Base+0xc8>)
   2a81a:	ldr	r3, [pc, #200]	; (2a8e4 <__commit_transaction@@Base+0xcc>)
   2a81c:	add	r2, pc
   2a81e:	stmdb	sp!, {r4, r5, r6, r7, r9, sl, fp, lr}
   2a822:	sub	sp, #40	; 0x28
   2a824:	ldr	r3, [r2, r3]
   2a826:	add.w	fp, sp, #24
   2a82a:	ldr.w	r6, [r1, #464]	; 0x1d0
   2a82e:	add.w	sl, sp, #16
   2a832:	ldr	r3, [r3, #0]
   2a834:	str	r3, [sp, #36]	; 0x24
   2a836:	mov.w	r3, #0
   2a83a:	mov	r5, r0
   2a83c:	add.w	r9, r6, #64	; 0x40
   2a840:	movs	r7, #1
   2a842:	movs	r2, #0
   2a844:	movs	r3, #0
   2a846:	mov	r0, r9
   2a848:	strd	fp, r7, [sp, #4]
   2a84c:	str.w	sl, [sp]
   2a850:	bl	1620c <find_first_extent_bit@@Base>
   2a854:	cbz	r0, 2a892 <__commit_transaction@@Base+0x7a>
   2a856:	ldr	r2, [pc, #144]	; (2a8e8 <__commit_transaction@@Base+0xd0>)
   2a858:	ldr	r3, [pc, #136]	; (2a8e4 <__commit_transaction@@Base+0xcc>)
   2a85a:	add	r2, pc
   2a85c:	ldr	r3, [r2, r3]
   2a85e:	ldr	r2, [r3, #0]
   2a860:	ldr	r3, [sp, #36]	; 0x24
   2a862:	eors	r2, r3
   2a864:	beq.n	2a8d6 <__commit_transaction@@Base+0xbe>
   2a866:	blx	8510 <__stack_chk_fail@plt>
   2a86a:	ldr	r0, [pc, #128]	; (2a8ec <__commit_transaction@@Base+0xd4>)
   2a86c:	movs	r2, #1
   2a86e:	movs	r1, #145	; 0x91
   2a870:	add	r0, pc
   2a872:	bl	2a604 <btrfs_fix_device_and_super_size@@Base+0xb0>
   2a876:	ldrd	r2, r3, [sp, #16]
   2a87a:	mov	r0, r4
   2a87c:	ldr	r1, [r4, #76]	; 0x4c
   2a87e:	adds	r2, r2, r1
   2a880:	adc.w	r3, r3, #0
   2a884:	strd	r2, r3, [sp, #16]
   2a888:	bl	169c2 <clear_extent_buffer_dirty@@Base>
   2a88c:	mov	r0, r4
   2a88e:	bl	16314 <free_extent_buffer@@Base>
   2a892:	ldrd	r2, r3, [sp, #16]
   2a896:	ldrd	r0, r1, [sp, #24]
   2a89a:	cmp	r1, r3
   2a89c:	it	eq
   2a89e:	cmpeq	r0, r2
   2a8a0:	bcc.n	2a842 <__commit_transaction@@Base+0x2a>
   2a8a2:	mov	r0, r9
   2a8a4:	bl	163e6 <find_first_extent_buffer@@Base>
   2a8a8:	mov	r4, r0
   2a8aa:	cmp	r0, #0
   2a8ac:	beq.n	2a86a <__commit_transaction@@Base+0x52>
   2a8ae:	ldrd	r0, r1, [r0, #40]	; 0x28
   2a8b2:	ldrd	r2, r3, [sp, #16]
   2a8b6:	cmp	r1, r3
   2a8b8:	it	eq
   2a8ba:	cmpeq	r0, r2
   2a8bc:	bne.n	2a86a <__commit_transaction@@Base+0x52>
   2a8be:	mov	r2, r4
   2a8c0:	mov	r1, r6
   2a8c2:	mov	r0, r5
   2a8c4:	bl	1ccd4 <write_tree_block@@Base>
   2a8c8:	mov	r2, r0
   2a8ca:	cmp	r0, #0
   2a8cc:	beq.n	2a876 <__commit_transaction@@Base+0x5e>
   2a8ce:	ldr	r0, [pc, #32]	; (2a8f0 <__commit_transaction@@Base+0xd8>)
   2a8d0:	movs	r1, #147	; 0x93
   2a8d2:	add	r0, pc
   2a8d4:	b.n	2a872 <__commit_transaction@@Base+0x5a>
   2a8d6:	movs	r0, #0
   2a8d8:	add	sp, #40	; 0x28
   2a8da:	ldmia.w	sp!, {r4, r5, r6, r7, r9, sl, fp, pc}
   2a8de:	nop
   2a8e0:	str	r5, [sp, #416]	; 0x1a0
   2a8e2:	movs	r3, r0
   2a8e4:	lsls	r0, r4, #8
   2a8e6:	movs	r0, r0
   2a8e8:	str	r5, [sp, #168]	; 0xa8
   2a8ea:	movs	r3, r0
   2a8ec:	strh	r2, [r2, r3]
   2a8ee:	movs	r1, r0
   2a8f0:	ldc	0, cr0, [r2], {-0}

0002a8f4 <btrfs_commit_transaction@@Base>:
   2a8f4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a8f8:	mov	r6, r0
   2a8fa:	ldr	r3, [r0, #0]
   2a8fc:	sub	sp, #20
   2a8fe:	ldrd	r8, r9, [r0, #8]
   2a902:	mov	r5, r1
   2a904:	ldr.w	r7, [r1, #464]	; 0x1d0
   2a908:	ldr.w	sl, [r3, #368]	; 0x170
   2a90c:	cmp.w	sl, #0
   2a910:	bne.w	2aa5e <btrfs_commit_transaction@@Base+0x16a>
   2a914:	mov.w	r1, #4294967295	; 0xffffffff
   2a918:	bl	225dc <btrfs_run_delayed_refs@@Base>
   2a91c:	subs	r4, r0, #0
   2a91e:	blt.n	2a9ce <btrfs_commit_transaction@@Base+0xda>
   2a920:	ldrd	r3, r0, [r5]
   2a924:	cmp	r0, r3
   2a926:	bne.n	2a97c <btrfs_commit_transaction@@Base+0x88>
   2a928:	mov	r1, r7
   2a92a:	mov	r0, r6
   2a92c:	bl	2a700 <commit_tree_roots@@Base>
   2a930:	subs	r4, r0, #0
   2a932:	blt.n	2a9ce <btrfs_commit_transaction@@Base+0xda>
   2a934:	add.w	sl, r7, #128	; 0x80
   2a938:	mov.w	fp, #1
   2a93c:	ldr	r3, [r6, #64]	; 0x40
   2a93e:	cmp	r3, #0
   2a940:	bne.n	2a9dc <btrfs_commit_transaction@@Base+0xe8>
   2a942:	mov.w	r2, #4294967295	; 0xffffffff
   2a946:	strd	fp, r3, [sp, #8]
   2a94a:	mov	r0, sl
   2a94c:	mov.w	r3, #4294967295	; 0xffffffff
   2a950:	strd	r2, r3, [sp]
   2a954:	movs	r2, #0
   2a956:	movs	r3, #0
   2a958:	bl	1624e <test_range_bit@@Base>
   2a95c:	cmp	r0, #0
   2a95e:	bne.n	2a9dc <btrfs_commit_transaction@@Base+0xe8>
   2a960:	mov	r1, r5
   2a962:	mov	r0, r6
   2a964:	bl	2a818 <__commit_transaction@@Base>
   2a968:	ldr.w	sl, [r6, #64]	; 0x40
   2a96c:	cmp.w	sl, #0
   2a970:	beq.n	2a9f6 <btrfs_commit_transaction@@Base+0x102>
   2a972:	ldr	r0, [pc, #240]	; (2aa64 <btrfs_commit_transaction@@Base+0x170>)
   2a974:	add	r0, pc
   2a976:	bl	16b70 <__btrfs_error@@Base>
   2a97a:	b.n	2a9ce <btrfs_commit_transaction@@Base+0xda>
   2a97c:	ldr.w	r3, [r5, #464]	; 0x1d0
   2a980:	ldr	r2, [r3, #28]
   2a982:	cmp	r2, r5
   2a984:	beq.n	2a928 <btrfs_commit_transaction@@Base+0x34>
   2a986:	ldr	r3, [r3, #32]
   2a988:	cmp	r3, r5
   2a98a:	beq.n	2a928 <btrfs_commit_transaction@@Base+0x34>
   2a98c:	bl	16314 <free_extent_buffer@@Base>
   2a990:	ldr	r3, [r5, #0]
   2a992:	str.w	sl, [r5, #4]
   2a996:	mov	r0, r6
   2a998:	ldrd	r1, r2, [r3, #40]	; 0x28
   2a99c:	str.w	r1, [r5, #184]	; 0xb8
   2a9a0:	str.w	r2, [r5, #188]	; 0xbc
   2a9a4:	ldrd	r1, r2, [r6, #8]
   2a9a8:	str.w	r1, [r5, #168]	; 0xa8
   2a9ac:	str.w	r2, [r5, #172]	; 0xac
   2a9b0:	addw	r2, r5, #447	; 0x1bf
   2a9b4:	ldrb.w	r3, [r3, #196]	; 0xc4
   2a9b8:	ldr.w	r1, [r5, #464]	; 0x1d0
   2a9bc:	strb.w	r3, [r5, #246]	; 0xf6
   2a9c0:	add.w	r3, r5, #8
   2a9c4:	ldr	r1, [r1, #28]
   2a9c6:	bl	27170 <btrfs_update_root@@Base>
   2a9ca:	subs	r4, r0, #0
   2a9cc:	bge.n	2a928 <btrfs_commit_transaction@@Base+0x34>
   2a9ce:	mov	r0, r6
   2a9d0:	bl	239dc <btrfs_destroy_delayed_refs@@Base>
   2a9d4:	mov	r0, r6
   2a9d6:	blx	8434 <free@plt+0x4>
   2a9da:	b.n	2aa30 <btrfs_commit_transaction@@Base+0x13c>
   2a9dc:	mov	r0, r6
   2a9de:	bl	20034 <btrfs_write_dirty_block_groups@@Base>
   2a9e2:	subs	r4, r0, #0
   2a9e4:	blt.n	2a9ce <btrfs_commit_transaction@@Base+0xda>
   2a9e6:	mov.w	r1, #4294967295	; 0xffffffff
   2a9ea:	mov	r0, r6
   2a9ec:	bl	225dc <btrfs_run_delayed_refs@@Base>
   2a9f0:	subs	r4, r0, #0
   2a9f2:	bge.n	2a93c <btrfs_commit_transaction@@Base+0x48>
   2a9f4:	b.n	2a9ce <btrfs_commit_transaction@@Base+0xda>
   2a9f6:	mov	r0, r6
   2a9f8:	add.w	r7, r7, #356	; 0x164
   2a9fc:	bl	1c9e4 <write_ctree_super@@Base>
   2aa00:	mov	r4, r0
   2aa02:	mov	r0, r6
   2aa04:	bl	20280 <btrfs_finish_extent_commit@@Base>
   2aa08:	mov	r0, r6
   2aa0a:	blx	8434 <free@plt+0x4>
   2aa0e:	ldr	r0, [r5, #4]
   2aa10:	bl	16314 <free_extent_buffer@@Base>
   2aa14:	str.w	sl, [r5, #4]
   2aa18:	ldr	r5, [r7, #0]
   2aa1a:	ldr	r6, [pc, #76]	; (2aa68 <btrfs_commit_transaction@@Base+0x174>)
   2aa1c:	subs	r5, #44	; 0x2c
   2aa1e:	str.w	sl, [r7, #-52]
   2aa22:	add	r6, pc
   2aa24:	strd	r8, r9, [r7, #-116]	; 0x74
   2aa28:	add.w	r3, r5, #44	; 0x2c
   2aa2c:	cmp	r3, r7
   2aa2e:	bne.n	2aa38 <btrfs_commit_transaction@@Base+0x144>
   2aa30:	mov	r0, r4
   2aa32:	add	sp, #20
   2aa34:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2aa38:	ldrd	r2, r3, [r5, #32]
   2aa3c:	orrs.w	r1, r2, r3
   2aa40:	beq.n	2aa58 <btrfs_commit_transaction@@Base+0x164>
   2aa42:	strd	r2, r3, [sp, #8]
   2aa46:	mov	r0, r6
   2aa48:	ldrd	r2, r3, [r5]
   2aa4c:	strd	r2, r3, [sp]
   2aa50:	mov	r2, r8
   2aa52:	mov	r3, r9
   2aa54:	bl	16af4 <__btrfs_warning@@Base>
   2aa58:	ldr	r5, [r5, #44]	; 0x2c
   2aa5a:	subs	r5, #44	; 0x2c
   2aa5c:	b.n	2aa28 <btrfs_commit_transaction@@Base+0x134>
   2aa5e:	mvn.w	r4, #29
   2aa62:	b.n	2aa30 <btrfs_commit_transaction@@Base+0x13c>
   2aa64:	str	r0, [r5, r7]
   2aa66:	movs	r1, r0
   2aa68:	str	r4, [r3, r5]
   2aa6a:	movs	r1, r0

0002aa6c <btrfs_abort_transaction@@Base>:
   2aa6c:	ldr	r3, [r0, #0]
   2aa6e:	str.w	r1, [r3, #368]	; 0x170
   2aa72:	bx	lr
   2aa74:	push	{r4, lr}
   2aa76:	mov	r4, r1
   2aa78:	ldr	r1, [pc, #84]	; (2aad0 <btrfs_abort_transaction@@Base+0x64>)
   2aa7a:	sub	sp, #24
   2aa7c:	ldr	r3, [pc, #84]	; (2aad4 <btrfs_abort_transaction@@Base+0x68>)
   2aa7e:	add	r1, pc
   2aa80:	ldr	r3, [r1, r3]
   2aa82:	mov	r1, sp
   2aa84:	ldr	r3, [r3, #0]
   2aa86:	str	r3, [sp, #20]
   2aa88:	mov.w	r3, #0
   2aa8c:	movs	r3, #25
   2aa8e:	muls	r2, r3
   2aa90:	movs	r3, #17
   2aa92:	adds	r2, #101	; 0x65
   2aa94:	bl	16a0e <read_extent_buffer@@Base>
   2aa98:	ldr.w	r3, [sp, #13]
   2aa9c:	ldr.w	r2, [sp, #9]
   2aaa0:	str.w	r3, [r4, #13]
   2aaa4:	ldrb.w	r3, [sp, #8]
   2aaa8:	str.w	r2, [r4, #9]
   2aaac:	ldr	r2, [pc, #40]	; (2aad8 <btrfs_abort_transaction@@Base+0x6c>)
   2aaae:	strb	r3, [r4, #8]
   2aab0:	ldr	r3, [sp, #0]
   2aab2:	add	r2, pc
   2aab4:	str	r3, [r4, #0]
   2aab6:	ldr	r3, [sp, #4]
   2aab8:	str	r3, [r4, #4]
   2aaba:	ldr	r3, [pc, #24]	; (2aad4 <btrfs_abort_transaction@@Base+0x68>)
   2aabc:	ldr	r3, [r2, r3]
   2aabe:	ldr	r2, [r3, #0]
   2aac0:	ldr	r3, [sp, #20]
   2aac2:	eors	r2, r3
   2aac4:	beq.n	2aaca <btrfs_abort_transaction@@Base+0x5e>
   2aac6:	blx	8510 <__stack_chk_fail@plt>
   2aaca:	add	sp, #24
   2aacc:	pop	{r4, pc}
   2aace:	nop
   2aad0:	str	r3, [sp, #24]
   2aad2:	movs	r3, r0
   2aad4:	lsls	r0, r4, #8
   2aad6:	movs	r0, r0
   2aad8:	str	r2, [sp, #840]	; 0x348
   2aada:	movs	r3, r0
   2aadc:	push	{r4, r5, r6, r7, lr}
   2aade:	sub	sp, #36	; 0x24
   2aae0:	ldr	r6, [pc, #112]	; (2ab54 <btrfs_abort_transaction@@Base+0xe8>)
   2aae2:	mov	r4, r3
   2aae4:	ldr	r5, [pc, #112]	; (2ab58 <btrfs_abort_transaction@@Base+0xec>)
   2aae6:	add	r6, pc
   2aae8:	ldr	r5, [r6, r5]
   2aaea:	ldrd	r6, r7, [r2, #40]	; 0x28
   2aaee:	ldr	r5, [r5, #0]
   2aaf0:	str	r5, [sp, #28]
   2aaf2:	mov.w	r5, #0
   2aaf6:	movs	r5, #198	; 0xc6
   2aaf8:	strb.w	r5, [sp, #16]
   2aafc:	strd	r6, r7, [sp, #8]
   2ab00:	ldr.w	r5, [r2, #49]	; 0x31
   2ab04:	ldr.w	r2, [r2, #53]	; 0x35
   2ab08:	str.w	r5, [sp, #17]
   2ab0c:	str.w	r2, [sp, #21]
   2ab10:	ldr	r2, [sp, #56]	; 0x38
   2ab12:	str	r2, [sp, #4]
   2ab14:	movs	r2, #0
   2ab16:	str	r2, [sp, #0]
   2ab18:	add	r2, sp, #8
   2ab1a:	bl	19930 <btrfs_search_slot@@Base>
   2ab1e:	cmp	r0, #0
   2ab20:	blt.n	2ab3a <btrfs_abort_transaction@@Base+0xce>
   2ab22:	ittte	eq
   2ab24:	ldreq	r3, [r4, #32]
   2ab26:	moveq	r1, #25
   2ab28:	ldreq	r2, [r4, #0]
   2ab2a:	mvnne.w	r0, #1
   2ab2e:	ittt	eq
   2ab30:	mlaeq	r3, r1, r3, r2
   2ab34:	ldreq.w	r0, [r3, #214]	; 0xd6
   2ab38:	addeq	r0, #101	; 0x65
   2ab3a:	ldr	r2, [pc, #32]	; (2ab5c <btrfs_abort_transaction@@Base+0xf0>)
   2ab3c:	ldr	r3, [pc, #24]	; (2ab58 <btrfs_abort_transaction@@Base+0xec>)
   2ab3e:	add	r2, pc
   2ab40:	ldr	r3, [r2, r3]
   2ab42:	ldr	r2, [r3, #0]
   2ab44:	ldr	r3, [sp, #28]
   2ab46:	eors	r2, r3
   2ab48:	beq.n	2ab4e <btrfs_abort_transaction@@Base+0xe2>
   2ab4a:	blx	8510 <__stack_chk_fail@plt>
   2ab4e:	add	sp, #36	; 0x24
   2ab50:	pop	{r4, r5, r6, r7, pc}
   2ab52:	nop
   2ab54:	str	r2, [sp, #632]	; 0x278
   2ab56:	movs	r3, r0
   2ab58:	lsls	r0, r4, #8
   2ab5a:	movs	r0, r0
   2ab5c:	str	r2, [sp, #280]	; 0x118
   2ab5e:	movs	r3, r0
   2ab60:	push	{r4}
   2ab62:	ldr	r4, [r1, #0]
   2ab64:	ldr	r2, [r1, #32]
   2ab66:	adds	r2, #1
   2ab68:	str	r2, [r1, #32]
   2ab6a:	ldr.w	r4, [r4, #192]	; 0xc0
   2ab6e:	cmp	r2, r4
   2ab70:	bcc.n	2ab84 <btrfs_abort_transaction@@Base+0x118>
   2ab72:	movs	r2, #0
   2ab74:	ldr.w	r4, [sp], #4
   2ab78:	strb.w	r2, [r1, #65]	; 0x41
   2ab7c:	ldr.w	r0, [r0, #464]	; 0x1d0
   2ab80:	b.w	1ad64 <btrfs_next_sibling_tree_block@@Base>
   2ab84:	movs	r0, #0
   2ab86:	ldr.w	r4, [sp], #4
   2ab8a:	bx	lr
   2ab8c:	push	{r4, r5, r6, lr}
   2ab8e:	lsrs	r4, r2, #5
   2ab90:	and.w	r6, r2, #31
   2ab94:	bic.w	r2, r2, #31
   2ab98:	ldr.w	r5, [r0, r4, lsl #2]
   2ab9c:	mov.w	r4, #4294967295	; 0xffffffff
   2aba0:	lsls	r4, r6
   2aba2:	eors	r5, r3
   2aba4:	ands	r4, r5
   2aba6:	cbz	r4, 2abdc <btrfs_abort_transaction@@Base+0x170>
   2aba8:	uxth	r3, r4
   2abaa:	cbnz	r3, 2abec <btrfs_abort_transaction@@Base+0x180>
   2abac:	lsrs	r4, r4, #16
   2abae:	movs	r3, #16
   2abb0:	tst.w	r4, #255	; 0xff
   2abb4:	itt	eq
   2abb6:	lsreq	r4, r4, #8
   2abb8:	addeq	r3, #8
   2abba:	lsls	r6, r4, #28
   2abbc:	itt	eq
   2abbe:	lsreq	r4, r4, #4
   2abc0:	addeq	r3, #4
   2abc2:	lsls	r5, r4, #30
   2abc4:	itt	eq
   2abc6:	lsreq	r4, r4, #2
   2abc8:	addeq	r3, #2
   2abca:	lsls	r0, r4, #31
   2abcc:	it	pl
   2abce:	addpl	r3, #1
   2abd0:	add	r3, r2
   2abd2:	cmp	r1, r3
   2abd4:	it	cs
   2abd6:	movcs	r1, r3
   2abd8:	mov	r0, r1
   2abda:	pop	{r4, r5, r6, pc}
   2abdc:	adds	r2, #32
   2abde:	cmp	r2, r1
   2abe0:	bcs.n	2abd8 <btrfs_abort_transaction@@Base+0x16c>
   2abe2:	lsrs	r4, r2, #5
   2abe4:	ldr.w	r4, [r0, r4, lsl #2]
   2abe8:	eors	r4, r3
   2abea:	b.n	2aba6 <btrfs_abort_transaction@@Base+0x13a>
   2abec:	movs	r3, #0
   2abee:	b.n	2abb0 <btrfs_abort_transaction@@Base+0x144>
   2abf0:	ldr.w	ip, [pc, #80]	; 2ac44 <btrfs_abort_transaction@@Base+0x1d8>
   2abf4:	ldr	r4, [pc, #80]	; (2ac48 <btrfs_abort_transaction@@Base+0x1dc>)
   2abf6:	add	ip, pc
   2abf8:	ldr	r3, [pc, #80]	; (2ac4c <btrfs_abort_transaction@@Base+0x1e0>)
   2abfa:	push	{lr}
   2abfc:	sub	sp, #92	; 0x5c
   2abfe:	ldr.w	r4, [ip, r4]
   2ac02:	add	r3, pc
   2ac04:	ldr	r4, [r4, #0]
   2ac06:	str	r4, [sp, #84]	; 0x54
   2ac08:	mov.w	r4, #0
   2ac0c:	ldr	r4, [pc, #64]	; (2ac50 <btrfs_abort_transaction@@Base+0x1e4>)
   2ac0e:	ldr	r4, [r3, r4]
   2ac10:	movs	r3, #0
   2ac12:	strd	r2, r1, [sp]
   2ac16:	movs	r1, #1
   2ac18:	strd	r0, r3, [sp, #8]
   2ac1c:	ldr	r2, [pc, #52]	; (2ac54 <btrfs_abort_transaction@@Base+0x1e8>)
   2ac1e:	ldr	r3, [pc, #56]	; (2ac58 <btrfs_abort_transaction@@Base+0x1ec>)
   2ac20:	ldr	r0, [r4, #0]
   2ac22:	add	r4, sp, #20
   2ac24:	add	r3, pc
   2ac26:	add	r2, pc
   2ac28:	blx	8860 <__fprintf_chk@plt+0x4>
   2ac2c:	movs	r1, #16
   2ac2e:	mov	r0, r4
   2ac30:	blx	86c4 <backtrace@plt>
   2ac34:	movs	r2, #2
   2ac36:	mov	r1, r0
   2ac38:	mov	r0, r4
   2ac3a:	blx	89c8 <backtrace_symbols_fd@plt>
   2ac3e:	blx	8980 <abort@plt>
   2ac42:	nop
   2ac44:	str	r1, [sp, #568]	; 0x238
   2ac46:	movs	r3, r0
   2ac48:	lsls	r0, r4, #8
   2ac4a:	movs	r0, r0
   2ac4c:	str	r1, [sp, #520]	; 0x208
   2ac4e:	movs	r3, r0
   2ac50:	lsls	r0, r6, #8
   2ac52:	movs	r0, r0
   2ac54:	b.n	2b3aa <btrfs_abort_transaction@@Base+0x93e>
   2ac56:	movs	r0, r0
   2ac58:	ldr	r7, [pc, #716]	; (2af28 <btrfs_abort_transaction@@Base+0x4bc>)
   2ac5a:	movs	r1, r0
   2ac5c:	push	{r3, lr}
   2ac5e:	cbnz	r3, 2ac64 <btrfs_abort_transaction@@Base+0x1f8>
   2ac60:	bl	2abf0 <btrfs_abort_transaction@@Base+0x184>
   2ac64:	pop	{r3, pc}
   2ac66:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ac6a:	mov	r6, r2
   2ac6c:	ldr	r2, [pc, #192]	; (2ad30 <btrfs_abort_transaction@@Base+0x2c4>)
   2ac6e:	mov	r7, r3
   2ac70:	ldr	r3, [pc, #192]	; (2ad34 <btrfs_abort_transaction@@Base+0x2c8>)
   2ac72:	sub	sp, #28
   2ac74:	add	r2, pc
   2ac76:	ldr.w	fp, [r0]
   2ac7a:	mov	r1, sp
   2ac7c:	mov	sl, r0
   2ac7e:	ldr	r3, [r2, r3]
   2ac80:	ldr	r2, [r0, #32]
   2ac82:	mov	r0, fp
   2ac84:	ldr	r3, [r3, #0]
   2ac86:	str	r3, [sp, #20]
   2ac88:	mov.w	r3, #0
   2ac8c:	bl	2aa74 <btrfs_abort_transaction@@Base+0x8>
   2ac90:	ldrb.w	r3, [sp, #8]
   2ac94:	ldr	r1, [pc, #160]	; (2ad38 <btrfs_abort_transaction@@Base+0x2cc>)
   2ac96:	sub.w	r2, r3, #200	; 0xc8
   2ac9a:	ldr	r0, [pc, #160]	; (2ad3c <btrfs_abort_transaction@@Base+0x2d0>)
   2ac9c:	negs	r3, r2
   2ac9e:	add	r1, pc
   2aca0:	adcs	r3, r2
   2aca2:	add	r0, pc
   2aca4:	movs	r2, #62	; 0x3e
   2aca6:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2acaa:	ldrd	r4, r5, [sp]
   2acae:	ldr.w	r3, [sp, #9]
   2acb2:	cmp	r7, r5
   2acb4:	ldr.w	r2, [sp, #13]
   2acb8:	it	eq
   2acba:	cmpeq	r6, r4
   2acbc:	bcc.n	2ad26 <btrfs_abort_transaction@@Base+0x2ba>
   2acbe:	adds.w	r8, r4, r3
   2acc2:	adc.w	r9, r5, r2
   2acc6:	cmp	r7, r9
   2acc8:	it	eq
   2acca:	cmpeq	r6, r8
   2accc:	ite	cc
   2acce:	movcc	r3, #1
   2acd0:	movcs	r3, #0
   2acd2:	ldr	r1, [pc, #108]	; (2ad40 <btrfs_abort_transaction@@Base+0x2d4>)
   2acd4:	movs	r2, #66	; 0x42
   2acd6:	ldr	r0, [pc, #108]	; (2ad44 <btrfs_abort_transaction@@Base+0x2d8>)
   2acd8:	add	r1, pc
   2acda:	add	r0, pc
   2acdc:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2ace0:	ldr.w	r3, [fp, #92]	; 0x5c
   2ace4:	subs	r0, r6, r4
   2ace6:	sbc.w	r1, r7, r5
   2acea:	ldr.w	r2, [r3, #388]	; 0x184
   2acee:	movs	r3, #0
   2acf0:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   2acf4:	ldr.w	r3, [sl, #32]
   2acf8:	movs	r1, #25
   2acfa:	mla	r3, r1, r3, fp
   2acfe:	ldr.w	r1, [r3, #214]	; 0xd6
   2ad02:	adds	r1, #101	; 0x65
   2ad04:	mov	r2, r0
   2ad06:	mov	r0, fp
   2ad08:	bl	16aa8 <extent_buffer_test_bit@@Base>
   2ad0c:	ldr	r2, [pc, #56]	; (2ad48 <btrfs_abort_transaction@@Base+0x2dc>)
   2ad0e:	ldr	r3, [pc, #36]	; (2ad34 <btrfs_abort_transaction@@Base+0x2c8>)
   2ad10:	add	r2, pc
   2ad12:	ldr	r3, [r2, r3]
   2ad14:	subs	r0, #0
   2ad16:	it	ne
   2ad18:	movne	r0, #1
   2ad1a:	ldr	r2, [r3, #0]
   2ad1c:	ldr	r3, [sp, #20]
   2ad1e:	eors	r2, r3
   2ad20:	beq.n	2ad2a <btrfs_abort_transaction@@Base+0x2be>
   2ad22:	blx	8510 <__stack_chk_fail@plt>
   2ad26:	movs	r3, #0
   2ad28:	b.n	2acd2 <btrfs_abort_transaction@@Base+0x266>
   2ad2a:	add	sp, #28
   2ad2c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ad30:	str	r1, [sp, #64]	; 0x40
   2ad32:	movs	r3, r0
   2ad34:	lsls	r0, r4, #8
   2ad36:	movs	r0, r0
   2ad38:	strb	r5, [r2, r0]
   2ad3a:	movs	r1, r0
   2ad3c:	ldr	r7, [pc, #284]	; (2ae5c <btrfs_abort_transaction@@Base+0x3f0>)
   2ad3e:	movs	r1, r0
   2ad40:	strh	r3, [r3, r7]
   2ad42:	movs	r1, r0
   2ad44:	ldr	r7, [pc, #220]	; (2ae24 <btrfs_abort_transaction@@Base+0x3b8>)
   2ad46:	movs	r1, r0
   2ad48:	str	r0, [sp, #464]	; 0x1d0
   2ad4a:	movs	r3, r0
   2ad4c:	push	{r0, r1, r2, r4, r5, lr}
   2ad4e:	movs	r5, #1
   2ad50:	str	r5, [sp, #4]
   2ad52:	mov	r4, r3
   2ad54:	ldr	r5, [sp, #24]
   2ad56:	str	r5, [sp, #0]
   2ad58:	bl	19930 <btrfs_search_slot@@Base>
   2ad5c:	cmp	r0, #0
   2ad5e:	blt.n	2ad8a <btrfs_abort_transaction@@Base+0x31e>
   2ad60:	bne.n	2ad72 <btrfs_abort_transaction@@Base+0x306>
   2ad62:	ldr	r1, [pc, #44]	; (2ad90 <btrfs_abort_transaction@@Base+0x324>)
   2ad64:	movs	r2, #89	; 0x59
   2ad66:	ldr	r0, [pc, #44]	; (2ad94 <btrfs_abort_transaction@@Base+0x328>)
   2ad68:	add	r1, pc
   2ad6a:	adds	r1, #20
   2ad6c:	add	r0, pc
   2ad6e:	bl	2abf0 <btrfs_abort_transaction@@Base+0x184>
   2ad72:	ldr	r3, [r4, #32]
   2ad74:	cbnz	r3, 2ad84 <btrfs_abort_transaction@@Base+0x318>
   2ad76:	ldr	r1, [pc, #32]	; (2ad98 <btrfs_abort_transaction@@Base+0x32c>)
   2ad78:	movs	r2, #94	; 0x5e
   2ad7a:	ldr	r0, [pc, #32]	; (2ad9c <btrfs_abort_transaction@@Base+0x330>)
   2ad7c:	add	r1, pc
   2ad7e:	adds	r1, #20
   2ad80:	add	r0, pc
   2ad82:	b.n	2ad6e <btrfs_abort_transaction@@Base+0x302>
   2ad84:	movs	r0, #0
   2ad86:	subs	r3, #1
   2ad88:	str	r3, [r4, #32]
   2ad8a:	add	sp, #12
   2ad8c:	pop	{r4, r5, pc}
   2ad8e:	nop
   2ad90:	strh	r3, [r1, r5]
   2ad92:	movs	r1, r0
   2ad94:	lsrs	r6, r2, #27
   2ad96:	movs	r1, r0
   2ad98:	strh	r7, [r6, r4]
   2ad9a:	movs	r1, r0
   2ad9c:	lsrs	r2, r0, #27
   2ad9e:	movs	r1, r0
   2ada0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2ada4:	mov	r6, r2
   2ada6:	ldr	r2, [pc, #156]	; (2ae44 <btrfs_abort_transaction@@Base+0x3d8>)
   2ada8:	sub	sp, #36	; 0x24
   2adaa:	ldr	r3, [pc, #156]	; (2ae48 <btrfs_abort_transaction@@Base+0x3dc>)
   2adac:	mov	r8, r0
   2adae:	add	r2, pc
   2adb0:	ldr	r0, [r6, #0]
   2adb2:	mov	r9, r1
   2adb4:	ldr	r3, [r2, r3]
   2adb6:	ldr	r2, [r6, #32]
   2adb8:	ldr	r3, [r3, #0]
   2adba:	str	r3, [sp, #28]
   2adbc:	mov.w	r3, #0
   2adc0:	adds	r3, r2, #1
   2adc2:	ldr.w	r1, [r0, #192]	; 0xc0
   2adc6:	cmp	r3, r1
   2adc8:	bcs.n	2ade2 <btrfs_abort_transaction@@Base+0x376>
   2adca:	movs	r0, #0
   2adcc:	str	r3, [r6, #32]
   2adce:	ldr	r2, [pc, #124]	; (2ae4c <btrfs_abort_transaction@@Base+0x3e0>)
   2add0:	ldr	r3, [pc, #116]	; (2ae48 <btrfs_abort_transaction@@Base+0x3dc>)
   2add2:	add	r2, pc
   2add4:	ldr	r3, [r2, r3]
   2add6:	ldr	r2, [r3, #0]
   2add8:	ldr	r3, [sp, #28]
   2adda:	eors	r2, r3
   2addc:	beq.n	2ae3e <btrfs_abort_transaction@@Base+0x3d2>
   2adde:	blx	8510 <__stack_chk_fail@plt>
   2ade2:	add	r7, sp, #8
   2ade4:	movs	r5, #255	; 0xff
   2ade6:	mov	r1, r7
   2ade8:	bl	2aa74 <btrfs_abort_transaction@@Base+0x8>
   2adec:	mov	r0, r6
   2adee:	bl	1754c <btrfs_release_path@@Base>
   2adf2:	ldr.w	r1, [sp, #17]
   2adf6:	ldr	r3, [sp, #8]
   2adf8:	ldr.w	r0, [sp, #21]
   2adfc:	ldr	r2, [sp, #12]
   2adfe:	adds	r3, r3, r1
   2ae00:	mov	r1, r9
   2ae02:	strb.w	r5, [sp, #16]
   2ae06:	adc.w	r2, r0, r2
   2ae0a:	mov	r0, r8
   2ae0c:	strd	r3, r2, [sp, #8]
   2ae10:	movs	r3, #0
   2ae12:	mov	r2, r7
   2ae14:	str	r3, [sp, #0]
   2ae16:	mov	r3, r6
   2ae18:	strb.w	r5, [sp, #17]
   2ae1c:	strb.w	r5, [sp, #18]
   2ae20:	strb.w	r5, [sp, #19]
   2ae24:	strb.w	r5, [sp, #20]
   2ae28:	strb.w	r5, [sp, #21]
   2ae2c:	strb.w	r5, [sp, #22]
   2ae30:	strb.w	r5, [sp, #23]
   2ae34:	strb.w	r5, [sp, #24]
   2ae38:	bl	2ad4c <btrfs_abort_transaction@@Base+0x2e0>
   2ae3c:	b.n	2adce <btrfs_abort_transaction@@Base+0x362>
   2ae3e:	add	sp, #36	; 0x24
   2ae40:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2ae44:	ldrh	r6, [r2, #62]	; 0x3e
   2ae46:	movs	r3, r0
   2ae48:	lsls	r0, r4, #8
   2ae4a:	movs	r0, r0
   2ae4c:	ldrh	r2, [r6, #60]	; 0x3c
   2ae4e:	movs	r3, r0
   2ae50:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ae54:	mov	r7, r3
   2ae56:	vpush	{d8-d9}
   2ae5a:	mov	r4, r2
   2ae5c:	ldr.w	r3, [pc, #2080]	; 2b680 <btrfs_abort_transaction@@Base+0xc14>
   2ae60:	mov	fp, r1
   2ae62:	ldr.w	r2, [pc, #2080]	; 2b684 <btrfs_abort_transaction@@Base+0xc18>
   2ae66:	mov.w	r8, #1
   2ae6a:	add	r3, pc
   2ae6c:	mov	r5, r0
   2ae6e:	sub	sp, #124	; 0x7c
   2ae70:	add	r2, pc
   2ae72:	ldr	r1, [r0, #0]
   2ae74:	str	r3, [sp, #64]	; 0x40
   2ae76:	ldr.w	r3, [pc, #2064]	; 2b688 <btrfs_abort_transaction@@Base+0xc1c>
   2ae7a:	ldr	r3, [r2, r3]
   2ae7c:	mov	r2, fp
   2ae7e:	ldr	r3, [r3, #0]
   2ae80:	str	r3, [sp, #116]	; 0x74
   2ae82:	mov.w	r3, #0
   2ae86:	str.w	r8, [sp]
   2ae8a:	mov	r3, r4
   2ae8c:	ldr	r1, [r1, #48]	; 0x30
   2ae8e:	bl	2aadc <btrfs_abort_transaction@@Base+0x70>
   2ae92:	cmn.w	r0, #4096	; 0x1000
   2ae96:	bls.n	2aeb4 <btrfs_abort_transaction@@Base+0x448>
   2ae98:	mov	r6, r0
   2ae9a:	ldr.w	r2, [pc, #2032]	; 2b68c <btrfs_abort_transaction@@Base+0xc20>
   2ae9e:	ldr.w	r3, [pc, #2024]	; 2b688 <btrfs_abort_transaction@@Base+0xc1c>
   2aea2:	add	r2, pc
   2aea4:	ldr	r3, [r2, r3]
   2aea6:	ldr	r2, [r3, #0]
   2aea8:	ldr	r3, [sp, #116]	; 0x74
   2aeaa:	eors	r2, r3
   2aeac:	beq.w	2b674 <btrfs_abort_transaction@@Base+0xc08>
   2aeb0:	blx	8510 <__stack_chk_fail@plt>
   2aeb4:	ldr	r2, [r4, #0]
   2aeb6:	adds	r2, #96	; 0x60
   2aeb8:	adds	r3, r2, r0
   2aeba:	ldr.w	sl, [r3, #4]
   2aebe:	ldr	r3, [r3, #0]
   2aec0:	add	r7, r3
   2aec2:	str	r7, [r2, r0]
   2aec4:	ldr	r0, [r4, #0]
   2aec6:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   2aeca:	mov	r0, r4
   2aecc:	bl	1754c <btrfs_release_path@@Base>
   2aed0:	ands.w	sl, sl, #1
   2aed4:	bne.w	2b2c0 <btrfs_abort_transaction@@Base+0x854>
   2aed8:	ldr.w	r3, [fp, #112]	; 0x70
   2aedc:	cmp	r7, r3
   2aede:	bls.w	2b670 <btrfs_abort_transaction@@Base+0xc04>
   2aee2:	ldr	r3, [r5, #0]
   2aee4:	str	r3, [sp, #40]	; 0x28
   2aee6:	ldr	r3, [r3, #48]	; 0x30
   2aee8:	ldr.w	r6, [fp, #49]	; 0x31
   2aeec:	ldr.w	r7, [fp, #53]	; 0x35
   2aef0:	vmov	s16, r3
   2aef4:	ldr	r3, [sp, #40]	; 0x28
   2aef6:	mov	r0, r6
   2aef8:	mov	r1, r7
   2aefa:	ldr.w	r2, [r3, #388]	; 0x184
   2aefe:	mov	r3, sl
   2af00:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   2af04:	adds	r1, r0, #7
   2af06:	mov	r0, r8
   2af08:	lsrs	r1, r1, #3
   2af0a:	subs	r1, #1
   2af0c:	orr.w	r1, r1, #3
   2af10:	adds	r1, #1
   2af12:	blx	839c <calloc@plt+0x4>
   2af16:	str	r0, [sp, #56]	; 0x38
   2af18:	cmp	r0, #0
   2af1a:	beq.w	2b2b6 <btrfs_abort_transaction@@Base+0x84a>
   2af1e:	ldrd	r2, r3, [fp, #40]	; 0x28
   2af22:	ldr.w	r8, [pc, #1900]	; 2b690 <btrfs_abort_transaction@@Base+0xc24>
   2af26:	strd	r2, r3, [sp, #16]
   2af2a:	add	r8, pc
   2af2c:	ldr	r3, [sp, #16]
   2af2e:	add.w	r8, r8, #43	; 0x2b
   2af32:	adds	r3, r6, r3
   2af34:	str	r3, [sp, #24]
   2af36:	ldr	r3, [sp, #20]
   2af38:	adc.w	r3, r7, r3
   2af3c:	str	r3, [sp, #28]
   2af3e:	ldr	r3, [sp, #24]
   2af40:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2af44:	ldr	r3, [sp, #28]
   2af46:	adc.w	r3, r3, #4294967295	; 0xffffffff
   2af4a:	strd	r2, r3, [sp, #76]	; 0x4c
   2af4e:	movs	r2, #255	; 0xff
   2af50:	strb.w	r2, [sp, #84]	; 0x54
   2af54:	strb.w	r2, [sp, #85]	; 0x55
   2af58:	strb.w	r2, [sp, #86]	; 0x56
   2af5c:	strb.w	r2, [sp, #87]	; 0x57
   2af60:	strb.w	r2, [sp, #88]	; 0x58
   2af64:	strb.w	r2, [sp, #89]	; 0x59
   2af68:	strb.w	r2, [sp, #90]	; 0x5a
   2af6c:	strb.w	r2, [sp, #91]	; 0x5b
   2af70:	strb.w	r2, [sp, #92]	; 0x5c
   2af74:	mov.w	r3, #4294967295	; 0xffffffff
   2af78:	vmov	r1, s16
   2af7c:	str	r3, [sp, #0]
   2af7e:	add	r2, sp, #76	; 0x4c
   2af80:	mov	r3, r4
   2af82:	mov	r0, r5
   2af84:	bl	2ad4c <btrfs_abort_transaction@@Base+0x2e0>
   2af88:	mov	r6, r0
   2af8a:	cmp	r0, #0
   2af8c:	bne.n	2b06e <btrfs_abort_transaction@@Base+0x602>
   2af8e:	ldr	r3, [r4, #0]
   2af90:	mov	r9, r0
   2af92:	vmov	s17, r3
   2af96:	ldr	r3, [r4, #32]
   2af98:	adds	r3, #1
   2af9a:	str	r3, [r4, #32]
   2af9c:	ldr.w	r3, [pc, #1780]	; 2b694 <btrfs_abort_transaction@@Base+0xc28>
   2afa0:	add	r3, pc
   2afa2:	vmov	s18, r3
   2afa6:	ldr	r2, [r4, #32]
   2afa8:	add.w	r7, r9, sl
   2afac:	cmp	r2, #0
   2afae:	bgt.n	2afba <btrfs_abort_transaction@@Base+0x54e>
   2afb0:	mov.w	sl, #0
   2afb4:	b.n	2b02a <btrfs_abort_transaction@@Base+0x5be>
   2afb6:	mov	sl, r7
   2afb8:	b.n	2af74 <btrfs_abort_transaction@@Base+0x508>
   2afba:	vmov	r0, s17
   2afbe:	subs	r2, #1
   2afc0:	add	r1, sp, #96	; 0x60
   2afc2:	bl	2aa74 <btrfs_abort_transaction@@Base+0x8>
   2afc6:	ldrb.w	r3, [sp, #104]	; 0x68
   2afca:	cmp	r3, #198	; 0xc6
   2afcc:	bne.n	2b084 <btrfs_abort_transaction@@Base+0x618>
   2afce:	ldrd	r2, r3, [fp, #40]	; 0x28
   2afd2:	mov.w	sl, #1
   2afd6:	ldrd	r0, r1, [sp, #96]	; 0x60
   2afda:	ldr.w	r6, [pc, #1724]	; 2b698 <btrfs_abort_transaction@@Base+0xc2c>
   2afde:	cmp	r1, r3
   2afe0:	add	r6, pc
   2afe2:	it	eq
   2afe4:	cmpeq	r0, r2
   2afe6:	add.w	r6, r6, #43	; 0x2b
   2afea:	ldr.w	r0, [pc, #1712]	; 2b69c <btrfs_abort_transaction@@Base+0xc30>
   2afee:	ite	eq
   2aff0:	moveq	r3, #1
   2aff2:	movne	r3, #0
   2aff4:	add	r0, pc
   2aff6:	movs	r2, #222	; 0xde
   2aff8:	mov	r1, r6
   2affa:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2affe:	ldr.w	r3, [fp, #53]	; 0x35
   2b002:	ldr.w	r1, [sp, #109]	; 0x6d
   2b006:	ldr.w	r0, [sp, #105]	; 0x69
   2b00a:	ldr.w	r2, [fp, #49]	; 0x31
   2b00e:	cmp	r1, r3
   2b010:	mov	r1, r6
   2b012:	it	eq
   2b014:	cmpeq	r0, r2
   2b016:	ldr.w	r0, [pc, #1672]	; 2b6a0 <btrfs_abort_transaction@@Base+0xc34>
   2b01a:	mov.w	r2, #223	; 0xdf
   2b01e:	add	r0, pc
   2b020:	ite	eq
   2b022:	moveq	r3, #1
   2b024:	movne	r3, #0
   2b026:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2b02a:	vmov	r1, s16
   2b02e:	mov	r2, r4
   2b030:	ldr	r3, [r4, #32]
   2b032:	mov	r0, r5
   2b034:	str.w	r9, [sp]
   2b038:	bl	1aaec <btrfs_del_items@@Base>
   2b03c:	mov	r6, r0
   2b03e:	cbnz	r0, 2b06e <btrfs_abort_transaction@@Base+0x602>
   2b040:	mov	r0, r4
   2b042:	bl	1754c <btrfs_release_path@@Base>
   2b046:	cmp.w	sl, #0
   2b04a:	beq.n	2afb6 <btrfs_abort_transaction@@Base+0x54a>
   2b04c:	ldr	r1, [sp, #40]	; 0x28
   2b04e:	mov	r3, r4
   2b050:	mov.w	r8, #1
   2b054:	mov	r2, fp
   2b056:	str.w	r8, [sp]
   2b05a:	mov	r0, r5
   2b05c:	ldr	r1, [r1, #48]	; 0x30
   2b05e:	bl	2aadc <btrfs_abort_transaction@@Base+0x70>
   2b062:	cmn.w	r0, #4096	; 0x1000
   2b066:	mov	r3, r0
   2b068:	bls.w	2b192 <btrfs_abort_transaction@@Base+0x726>
   2b06c:	mov	r6, r0
   2b06e:	ldr	r0, [sp, #56]	; 0x38
   2b070:	blx	8434 <free@plt+0x4>
   2b074:	cmp	r6, #0
   2b076:	beq.w	2ae9a <btrfs_abort_transaction@@Base+0x42e>
   2b07a:	mov	r1, r6
   2b07c:	mov	r0, r5
   2b07e:	bl	2aa6c <btrfs_abort_transaction@@Base>
   2b082:	b.n	2ae9a <btrfs_abort_transaction@@Base+0x42e>
   2b084:	cmp	r3, #199	; 0xc7
   2b086:	bne.n	2b17e <btrfs_abort_transaction@@Base+0x712>
   2b088:	ldrd	r6, r7, [sp, #96]	; 0x60
   2b08c:	mov	r1, r8
   2b08e:	ldrd	r2, r3, [sp, #16]
   2b092:	vmov	r0, s18
   2b096:	cmp	r7, r3
   2b098:	it	eq
   2b09a:	cmpeq	r6, r2
   2b09c:	mov.w	r2, #229	; 0xe5
   2b0a0:	ite	cs
   2b0a2:	movcs	r3, #1
   2b0a4:	movcc	r3, #0
   2b0a6:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2b0aa:	ldrd	r2, r3, [sp, #24]
   2b0ae:	ldr.w	r0, [pc, #1524]	; 2b6a4 <btrfs_abort_transaction@@Base+0xc38>
   2b0b2:	mov	r1, r8
   2b0b4:	cmp	r7, r3
   2b0b6:	it	eq
   2b0b8:	cmpeq	r6, r2
   2b0ba:	add	r0, pc
   2b0bc:	mov.w	r2, #230	; 0xe6
   2b0c0:	ite	cc
   2b0c2:	movcc	r3, #1
   2b0c4:	movcs	r3, #0
   2b0c6:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2b0ca:	ldr.w	r3, [sp, #105]	; 0x69
   2b0ce:	ldr.w	r2, [sp, #109]	; 0x6d
   2b0d2:	adds	r3, r3, r6
   2b0d4:	str	r3, [sp, #48]	; 0x30
   2b0d6:	adc.w	r3, r2, r7
   2b0da:	str	r3, [sp, #52]	; 0x34
   2b0dc:	ldrd	r0, r1, [sp, #48]	; 0x30
   2b0e0:	ldrd	r2, r3, [sp, #24]
   2b0e4:	cmp	r3, r1
   2b0e6:	mov	r1, r8
   2b0e8:	it	eq
   2b0ea:	cmpeq	r2, r0
   2b0ec:	ldr.w	r0, [pc, #1464]	; 2b6a8 <btrfs_abort_transaction@@Base+0xc3c>
   2b0f0:	mov.w	r2, #231	; 0xe7
   2b0f4:	ite	cs
   2b0f6:	movcs	r3, #1
   2b0f8:	movcc	r3, #0
   2b0fa:	add	r0, pc
   2b0fc:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2b100:	ldr	r3, [sp, #40]	; 0x28
   2b102:	ldr	r1, [sp, #16]
   2b104:	ldr.w	r2, [r3, #388]	; 0x184
   2b108:	subs	r0, r6, r1
   2b10a:	ldr	r1, [sp, #20]
   2b10c:	mov.w	r3, #0
   2b110:	sbc.w	r1, r7, r1
   2b114:	str	r2, [sp, #68]	; 0x44
   2b116:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   2b11a:	ldr	r1, [sp, #48]	; 0x30
   2b11c:	ldr	r7, [sp, #20]
   2b11e:	movs	r3, #0
   2b120:	ldr	r2, [sp, #68]	; 0x44
   2b122:	mov	r6, r0
   2b124:	ldr	r0, [sp, #16]
   2b126:	subs	r0, r1, r0
   2b128:	ldr	r1, [sp, #52]	; 0x34
   2b12a:	sbc.w	r1, r1, r7
   2b12e:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   2b132:	ldr	r3, [sp, #56]	; 0x38
   2b134:	add.w	r2, r3, r6, lsr #3
   2b138:	movs	r3, #255	; 0xff
   2b13a:	subs	r7, r0, r6
   2b13c:	and.w	r6, r6, #7
   2b140:	rsb	r1, r6, #8
   2b144:	lsl.w	r6, r3, r6
   2b148:	uxtb	r6, r6
   2b14a:	subs	r1, r7, r1
   2b14c:	bpl.n	2b16e <btrfs_abort_transaction@@Base+0x702>
   2b14e:	cbz	r7, 2b162 <btrfs_abort_transaction@@Base+0x6f6>
   2b150:	negs	r0, r0
   2b152:	movs	r3, #255	; 0xff
   2b154:	and.w	r0, r0, #7
   2b158:	ldrb	r1, [r2, #0]
   2b15a:	asrs	r3, r0
   2b15c:	ands	r3, r6
   2b15e:	orrs	r3, r1
   2b160:	strb	r3, [r2, #0]
   2b162:	ldr	r3, [r4, #32]
   2b164:	add.w	r9, r9, #1
   2b168:	subs	r3, #1
   2b16a:	str	r3, [r4, #32]
   2b16c:	b.n	2afa6 <btrfs_abort_transaction@@Base+0x53a>
   2b16e:	ldrb	r3, [r2, #0]
   2b170:	mov	r7, r1
   2b172:	movs	r1, #8
   2b174:	orrs	r3, r6
   2b176:	movs	r6, #255	; 0xff
   2b178:	strb.w	r3, [r2], #1
   2b17c:	b.n	2b14a <btrfs_abort_transaction@@Base+0x6de>
   2b17e:	ldr.w	r1, [pc, #1324]	; 2b6ac <btrfs_abort_transaction@@Base+0xc40>
   2b182:	movs	r2, #243	; 0xf3
   2b184:	ldr.w	r0, [pc, #1320]	; 2b6b0 <btrfs_abort_transaction@@Base+0xc44>
   2b188:	add	r1, pc
   2b18a:	adds	r1, #43	; 0x2b
   2b18c:	add	r0, pc
   2b18e:	bl	2abf0 <btrfs_abort_transaction@@Base+0x184>
   2b192:	ldr	r0, [r4, #0]
   2b194:	add.w	r2, r0, #96	; 0x60
   2b198:	add	r3, r2
   2b19a:	ldr	r2, [r3, #4]
   2b19c:	ldr.w	r9, [r3]
   2b1a0:	orr.w	r2, r2, #1
   2b1a4:	str	r2, [r3, #4]
   2b1a6:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   2b1aa:	mov	r0, r4
   2b1ac:	bl	1754c <btrfs_release_path@@Base>
   2b1b0:	cmp	r9, r7
   2b1b2:	beq.n	2b1ea <btrfs_abort_transaction@@Base+0x77e>
   2b1b4:	ldr	r2, [sp, #64]	; 0x40
   2b1b6:	ldr.w	r3, [pc, #1276]	; 2b6b4 <btrfs_abort_transaction@@Base+0xc48>
   2b1ba:	ldr	r3, [r2, r3]
   2b1bc:	strd	r7, r9, [sp, #8]
   2b1c0:	ldrd	r0, r1, [fp, #40]	; 0x28
   2b1c4:	ldr.w	r2, [pc, #1264]	; 2b6b8 <btrfs_abort_transaction@@Base+0xc4c>
   2b1c8:	strd	r0, r1, [sp]
   2b1cc:	add	r2, pc
   2b1ce:	mov	r1, r8
   2b1d0:	ldr	r0, [r3, #0]
   2b1d2:	blx	8860 <__fprintf_chk@plt+0x4>
   2b1d6:	ldr.w	r1, [pc, #1252]	; 2b6bc <btrfs_abort_transaction@@Base+0xc50>
   2b1da:	ldr.w	r0, [pc, #1252]	; 2b6c0 <btrfs_abort_transaction@@Base+0xc54>
   2b1de:	movw	r2, #271	; 0x10f
   2b1e2:	add	r1, pc
   2b1e4:	adds	r1, #43	; 0x2b
   2b1e6:	add	r0, pc
   2b1e8:	b.n	2b18e <btrfs_abort_transaction@@Base+0x722>
   2b1ea:	ldr	r3, [sp, #40]	; 0x28
   2b1ec:	mov.w	fp, #0
   2b1f0:	ldr.w	r8, [sp, #56]	; 0x38
   2b1f4:	mov.w	r9, #200	; 0xc8
   2b1f8:	ldr.w	r3, [r3, #388]	; 0x184
   2b1fc:	lsls	r3, r3, #11
   2b1fe:	mov	sl, r3
   2b200:	ldrd	r2, r3, [sp, #16]
   2b204:	ldrd	r0, r1, [sp, #24]
   2b208:	cmp	r3, r1
   2b20a:	it	eq
   2b20c:	cmpeq	r2, r0
   2b20e:	bcs.w	2b06e <btrfs_abort_transaction@@Base+0x602>
   2b212:	ldr	r2, [sp, #16]
   2b214:	ldr	r3, [sp, #24]
   2b216:	subs	r3, r3, r2
   2b218:	ldr	r2, [sp, #20]
   2b21a:	str	r3, [sp, #32]
   2b21c:	ldr	r3, [sp, #28]
   2b21e:	sbc.w	r3, r3, r2
   2b222:	str	r3, [sp, #36]	; 0x24
   2b224:	ldrd	r2, r3, [sp, #32]
   2b228:	cmp	fp, r3
   2b22a:	ldr	r3, [sp, #40]	; 0x28
   2b22c:	it	eq
   2b22e:	cmpeq	sl, r2
   2b230:	it	cc
   2b232:	strdcc	sl, fp, [sp, #32]
   2b236:	ldrd	r0, r1, [sp, #32]
   2b23a:	ldr.w	r2, [r3, #388]	; 0x184
   2b23e:	movs	r3, #0
   2b240:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   2b244:	ldr	r3, [sp, #16]
   2b246:	vmov	r1, s16
   2b24a:	mov	r2, r4
   2b24c:	strb.w	r9, [sp, #84]	; 0x54
   2b250:	str	r3, [sp, #76]	; 0x4c
   2b252:	ldr	r3, [sp, #20]
   2b254:	str	r3, [sp, #80]	; 0x50
   2b256:	ldr	r3, [sp, #32]
   2b258:	str.w	r3, [sp, #85]	; 0x55
   2b25c:	ldr	r3, [sp, #36]	; 0x24
   2b25e:	str.w	r3, [sp, #89]	; 0x59
   2b262:	movs	r3, #1
   2b264:	str	r3, [sp, #4]
   2b266:	add	r3, sp, #72	; 0x48
   2b268:	str	r3, [sp, #0]
   2b26a:	add	r3, sp, #76	; 0x4c
   2b26c:	adds	r0, #7
   2b26e:	lsrs	r7, r0, #3
   2b270:	mov	r0, r5
   2b272:	str	r7, [sp, #72]	; 0x48
   2b274:	bl	1a700 <btrfs_insert_empty_items@@Base>
   2b278:	cbnz	r0, 2b2bc <btrfs_abort_transaction@@Base+0x850>
   2b27a:	ldr	r0, [r4, #0]
   2b27c:	movs	r2, #25
   2b27e:	ldr	r3, [r4, #32]
   2b280:	mov	r1, r8
   2b282:	add	r8, r7
   2b284:	str	r0, [sp, #48]	; 0x30
   2b286:	mla	r3, r2, r3, r0
   2b28a:	ldr.w	r2, [r3, #214]	; 0xd6
   2b28e:	mov	r3, r7
   2b290:	adds	r2, #101	; 0x65
   2b292:	bl	16a24 <write_extent_buffer@@Base>
   2b296:	ldr	r0, [sp, #48]	; 0x30
   2b298:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   2b29c:	mov	r0, r4
   2b29e:	bl	1754c <btrfs_release_path@@Base>
   2b2a2:	ldr	r3, [sp, #16]
   2b2a4:	ldr	r2, [sp, #32]
   2b2a6:	adds	r3, r3, r2
   2b2a8:	ldr	r2, [sp, #36]	; 0x24
   2b2aa:	str	r3, [sp, #16]
   2b2ac:	ldr	r3, [sp, #20]
   2b2ae:	adc.w	r3, r2, r3
   2b2b2:	str	r3, [sp, #20]
   2b2b4:	b.n	2b200 <btrfs_abort_transaction@@Base+0x794>
   2b2b6:	mvn.w	r6, #11
   2b2ba:	b.n	2b06e <btrfs_abort_transaction@@Base+0x602>
   2b2bc:	mov	r6, r0
   2b2be:	b.n	2b06e <btrfs_abort_transaction@@Base+0x602>
   2b2c0:	ldr.w	r3, [fp, #116]	; 0x74
   2b2c4:	cmp	r7, r3
   2b2c6:	bcs.w	2b670 <btrfs_abort_transaction@@Base+0xc04>
   2b2ca:	ldr	r3, [r5, #0]
   2b2cc:	str	r3, [sp, #16]
   2b2ce:	ldr	r3, [r3, #48]	; 0x30
   2b2d0:	ldr.w	r6, [fp, #49]	; 0x31
   2b2d4:	ldr.w	r7, [fp, #53]	; 0x35
   2b2d8:	vmov	s16, r3
   2b2dc:	ldr	r3, [sp, #16]
   2b2de:	mov	r0, r6
   2b2e0:	mov	r1, r7
   2b2e2:	ldr.w	r2, [r3, #388]	; 0x184
   2b2e6:	movs	r3, #0
   2b2e8:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   2b2ec:	adds	r1, r0, #7
   2b2ee:	mov	r0, r8
   2b2f0:	lsrs	r1, r1, #3
   2b2f2:	subs	r1, #1
   2b2f4:	orr.w	r1, r1, #3
   2b2f8:	adds	r1, #1
   2b2fa:	blx	839c <calloc@plt+0x4>
   2b2fe:	mov	r8, r0
   2b300:	cmp	r0, #0
   2b302:	beq.w	2b666 <btrfs_abort_transaction@@Base+0xbfa>
   2b306:	ldrd	r2, r3, [fp, #40]	; 0x28
   2b30a:	ldr.w	r9, [pc, #952]	; 2b6c4 <btrfs_abort_transaction@@Base+0xc58>
   2b30e:	strd	r2, r3, [sp, #24]
   2b312:	add	r9, pc
   2b314:	ldr	r3, [sp, #24]
   2b316:	add.w	r9, r9, #73	; 0x49
   2b31a:	adds	r3, r6, r3
   2b31c:	str	r3, [sp, #40]	; 0x28
   2b31e:	ldr	r3, [sp, #28]
   2b320:	adc.w	r3, r7, r3
   2b324:	str	r3, [sp, #44]	; 0x2c
   2b326:	ldr	r3, [sp, #40]	; 0x28
   2b328:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2b32c:	ldr	r3, [sp, #44]	; 0x2c
   2b32e:	adc.w	r3, r3, #4294967295	; 0xffffffff
   2b332:	strd	r2, r3, [sp, #76]	; 0x4c
   2b336:	movs	r2, #255	; 0xff
   2b338:	strb.w	r2, [sp, #84]	; 0x54
   2b33c:	strb.w	r2, [sp, #85]	; 0x55
   2b340:	strb.w	r2, [sp, #86]	; 0x56
   2b344:	strb.w	r2, [sp, #87]	; 0x57
   2b348:	strb.w	r2, [sp, #88]	; 0x58
   2b34c:	strb.w	r2, [sp, #89]	; 0x59
   2b350:	strb.w	r2, [sp, #90]	; 0x5a
   2b354:	strb.w	r2, [sp, #91]	; 0x5b
   2b358:	strb.w	r2, [sp, #92]	; 0x5c
   2b35c:	mov.w	r3, #4294967295	; 0xffffffff
   2b360:	vmov	r1, s16
   2b364:	str	r3, [sp, #0]
   2b366:	add	r2, sp, #76	; 0x4c
   2b368:	mov	r3, r4
   2b36a:	mov	r0, r5
   2b36c:	bl	2ad4c <btrfs_abort_transaction@@Base+0x2e0>
   2b370:	mov	r6, r0
   2b372:	cmp	r0, #0
   2b374:	bne.n	2b43a <btrfs_abort_transaction@@Base+0x9ce>
   2b376:	ldr	r3, [r4, #32]
   2b378:	ldr	r7, [r4, #0]
   2b37a:	adds	r3, #1
   2b37c:	str	r3, [r4, #32]
   2b37e:	ldr	r3, [pc, #840]	; (2b6c8 <btrfs_abort_transaction@@Base+0xc5c>)
   2b380:	str	r0, [sp, #48]	; 0x30
   2b382:	add	r3, pc
   2b384:	vmov	s17, r3
   2b388:	ldr	r2, [r4, #32]
   2b38a:	cmp	r2, #0
   2b38c:	bgt.n	2b392 <btrfs_abort_transaction@@Base+0x926>
   2b38e:	movs	r7, #0
   2b390:	b.n	2b3fe <btrfs_abort_transaction@@Base+0x992>
   2b392:	subs	r2, #1
   2b394:	add	r1, sp, #96	; 0x60
   2b396:	mov	r0, r7
   2b398:	bl	2aa74 <btrfs_abort_transaction@@Base+0x8>
   2b39c:	ldrb.w	r3, [sp, #104]	; 0x68
   2b3a0:	cmp	r3, #198	; 0xc6
   2b3a2:	bne.n	2b43e <btrfs_abort_transaction@@Base+0x9d2>
   2b3a4:	ldrd	r2, r3, [fp, #40]	; 0x28
   2b3a8:	ldrd	r6, r7, [sp, #96]	; 0x60
   2b3ac:	ldr	r0, [pc, #796]	; (2b6cc <btrfs_abort_transaction@@Base+0xc60>)
   2b3ae:	cmp	r7, r3
   2b3b0:	mov.w	r7, #1
   2b3b4:	it	eq
   2b3b6:	cmpeq	r6, r2
   2b3b8:	ldr	r6, [pc, #788]	; (2b6d0 <btrfs_abort_transaction@@Base+0xc64>)
   2b3ba:	add	r0, pc
   2b3bc:	mov.w	r2, #360	; 0x168
   2b3c0:	add	r6, pc
   2b3c2:	it	eq
   2b3c4:	moveq	r3, #1
   2b3c6:	add.w	r6, r6, #73	; 0x49
   2b3ca:	it	ne
   2b3cc:	movne	r3, #0
   2b3ce:	mov	r1, r6
   2b3d0:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2b3d4:	ldr.w	r3, [fp, #53]	; 0x35
   2b3d8:	ldr.w	r1, [sp, #109]	; 0x6d
   2b3dc:	ldr.w	r0, [sp, #105]	; 0x69
   2b3e0:	ldr.w	r2, [fp, #49]	; 0x31
   2b3e4:	cmp	r1, r3
   2b3e6:	mov	r1, r6
   2b3e8:	it	eq
   2b3ea:	cmpeq	r0, r2
   2b3ec:	ldr	r0, [pc, #740]	; (2b6d4 <btrfs_abort_transaction@@Base+0xc68>)
   2b3ee:	movw	r2, #361	; 0x169
   2b3f2:	add	r0, pc
   2b3f4:	ite	eq
   2b3f6:	moveq	r3, #1
   2b3f8:	movne	r3, #0
   2b3fa:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2b3fe:	ldr	r3, [sp, #48]	; 0x30
   2b400:	mov	r2, r4
   2b402:	vmov	r1, s16
   2b406:	mov	r0, r5
   2b408:	str	r3, [sp, #0]
   2b40a:	ldr	r3, [r4, #32]
   2b40c:	bl	1aaec <btrfs_del_items@@Base>
   2b410:	mov	r6, r0
   2b412:	cbnz	r0, 2b43a <btrfs_abort_transaction@@Base+0x9ce>
   2b414:	mov	r0, r4
   2b416:	bl	1754c <btrfs_release_path@@Base>
   2b41a:	cmp	r7, #0
   2b41c:	beq.n	2b35c <btrfs_abort_transaction@@Base+0x8f0>
   2b41e:	ldr	r1, [sp, #16]
   2b420:	movs	r3, #1
   2b422:	mov	r2, fp
   2b424:	str	r3, [sp, #0]
   2b426:	mov	r0, r5
   2b428:	mov	r3, r4
   2b42a:	ldr	r1, [r1, #48]	; 0x30
   2b42c:	bl	2aadc <btrfs_abort_transaction@@Base+0x70>
   2b430:	cmn.w	r0, #4096	; 0x1000
   2b434:	mov	r3, r0
   2b436:	bls.n	2b530 <btrfs_abort_transaction@@Base+0xac4>
   2b438:	mov	r6, r0
   2b43a:	mov	r0, r8
   2b43c:	b.n	2b070 <btrfs_abort_transaction@@Base+0x604>
   2b43e:	cmp	r3, #200	; 0xc8
   2b440:	bne.n	2b520 <btrfs_abort_transaction@@Base+0xab4>
   2b442:	ldrd	r2, r3, [sp, #96]	; 0x60
   2b446:	ldrd	r0, r1, [sp, #24]
   2b44a:	cmp	r3, r1
   2b44c:	strd	r2, r3, [sp, #32]
   2b450:	it	eq
   2b452:	cmpeq	r2, r0
   2b454:	mov	r1, r9
   2b456:	vmov	r0, s17
   2b45a:	movw	r2, #369	; 0x171
   2b45e:	ite	cs
   2b460:	movcs	r3, #1
   2b462:	movcc	r3, #0
   2b464:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2b468:	ldrd	r2, r3, [sp, #32]
   2b46c:	ldrd	r0, r1, [sp, #40]	; 0x28
   2b470:	cmp	r3, r1
   2b472:	mov	r1, r9
   2b474:	it	eq
   2b476:	cmpeq	r2, r0
   2b478:	ldr	r0, [pc, #604]	; (2b6d8 <btrfs_abort_transaction@@Base+0xc6c>)
   2b47a:	mov.w	r2, #370	; 0x172
   2b47e:	ite	cc
   2b480:	movcc	r3, #1
   2b482:	movcs	r3, #0
   2b484:	add	r0, pc
   2b486:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2b48a:	ldr.w	r6, [sp, #105]	; 0x69
   2b48e:	ldr	r3, [sp, #32]
   2b490:	ldr.w	sl, [sp, #109]	; 0x6d
   2b494:	adds	r3, r3, r6
   2b496:	str	r3, [sp, #56]	; 0x38
   2b498:	ldr	r3, [sp, #36]	; 0x24
   2b49a:	adc.w	r3, r3, sl
   2b49e:	str	r3, [sp, #60]	; 0x3c
   2b4a0:	ldrd	r0, r1, [sp, #56]	; 0x38
   2b4a4:	ldrd	r2, r3, [sp, #40]	; 0x28
   2b4a8:	cmp	r3, r1
   2b4aa:	mov	r1, r9
   2b4ac:	it	eq
   2b4ae:	cmpeq	r2, r0
   2b4b0:	ldr	r0, [pc, #552]	; (2b6dc <btrfs_abort_transaction@@Base+0xc70>)
   2b4b2:	movw	r2, #371	; 0x173
   2b4b6:	ite	cs
   2b4b8:	movcs	r3, #1
   2b4ba:	movcc	r3, #0
   2b4bc:	add	r0, pc
   2b4be:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2b4c2:	ldr	r3, [sp, #16]
   2b4c4:	mov	r0, r6
   2b4c6:	mov	r1, sl
   2b4c8:	ldr.w	r2, [r3, #388]	; 0x184
   2b4cc:	movs	r3, #0
   2b4ce:	str	r2, [sp, #68]	; 0x44
   2b4d0:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   2b4d4:	ldr	r3, [r4, #32]
   2b4d6:	movs	r1, #25
   2b4d8:	ldr	r2, [sp, #68]	; 0x44
   2b4da:	subs	r3, #1
   2b4dc:	mla	r3, r1, r3, r7
   2b4e0:	ldr	r1, [sp, #32]
   2b4e2:	lsls	r2, r2, #3
   2b4e4:	ldr.w	sl, [r3, #214]	; 0xd6
   2b4e8:	movs	r3, #0
   2b4ea:	add.w	sl, sl, #101	; 0x65
   2b4ee:	adds	r0, #7
   2b4f0:	lsrs	r6, r0, #3
   2b4f2:	ldr	r0, [sp, #24]
   2b4f4:	subs	r0, r1, r0
   2b4f6:	ldr	r1, [sp, #36]	; 0x24
   2b4f8:	mov	ip, r1
   2b4fa:	ldr	r1, [sp, #28]
   2b4fc:	sbc.w	r1, ip, r1
   2b500:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   2b504:	mov	r3, r6
   2b506:	mov	r2, sl
   2b508:	add.w	r1, r8, r0
   2b50c:	mov	r0, r7
   2b50e:	bl	16a0e <read_extent_buffer@@Base>
   2b512:	ldr	r3, [sp, #48]	; 0x30
   2b514:	adds	r3, #1
   2b516:	str	r3, [sp, #48]	; 0x30
   2b518:	ldr	r3, [r4, #32]
   2b51a:	subs	r3, #1
   2b51c:	str	r3, [r4, #32]
   2b51e:	b.n	2b388 <btrfs_abort_transaction@@Base+0x91c>
   2b520:	ldr	r1, [pc, #444]	; (2b6e0 <btrfs_abort_transaction@@Base+0xc74>)
   2b522:	movw	r2, #387	; 0x183
   2b526:	ldr	r0, [pc, #444]	; (2b6e4 <btrfs_abort_transaction@@Base+0xc78>)
   2b528:	add	r1, pc
   2b52a:	adds	r1, #73	; 0x49
   2b52c:	add	r0, pc
   2b52e:	b.n	2b18e <btrfs_abort_transaction@@Base+0x722>
   2b530:	ldr	r0, [r4, #0]
   2b532:	add.w	r2, r0, #96	; 0x60
   2b536:	add	r3, r2
   2b538:	ldr	r2, [r3, #4]
   2b53a:	bic.w	r2, r2, #1
   2b53e:	str	r2, [r3, #4]
   2b540:	ldr	r3, [r3, #0]
   2b542:	str	r3, [sp, #40]	; 0x28
   2b544:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   2b548:	mov	r0, r4
   2b54a:	bl	1754c <btrfs_release_path@@Base>
   2b54e:	ldr	r3, [sp, #16]
   2b550:	ldr.w	r0, [fp, #49]	; 0x31
   2b554:	ldr.w	r1, [fp, #53]	; 0x35
   2b558:	ldr.w	r2, [r3, #388]	; 0x184
   2b55c:	mov	r3, r6
   2b55e:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   2b562:	mov	r9, r0
   2b564:	cmp	r0, #0
   2b566:	beq.n	2b662 <btrfs_abort_transaction@@Base+0xbf6>
   2b568:	mov	r3, r6
   2b56a:	mov	r1, r0
   2b56c:	mov	r2, r6
   2b56e:	mov	r0, r8
   2b570:	bl	2ab8c <btrfs_abort_transaction@@Base+0x120>
   2b574:	ldr	r3, [pc, #368]	; (2b6e8 <btrfs_abort_transaction@@Base+0xc7c>)
   2b576:	str	r6, [sp, #32]
   2b578:	add	r3, pc
   2b57a:	adds	r3, #73	; 0x49
   2b57c:	vmov	s17, r3
   2b580:	ldr	r3, [pc, #360]	; (2b6ec <btrfs_abort_transaction@@Base+0xc80>)
   2b582:	add	r3, pc
   2b584:	vmov	s18, r3
   2b588:	mov	r7, r0
   2b58a:	cmp	r9, r7
   2b58c:	bhi.n	2b5ca <btrfs_abort_transaction@@Base+0xb5e>
   2b58e:	ldr	r3, [sp, #32]
   2b590:	ldr	r2, [sp, #40]	; 0x28
   2b592:	cmp	r3, r2
   2b594:	beq.w	2b43a <btrfs_abort_transaction@@Base+0x9ce>
   2b598:	ldr	r2, [sp, #64]	; 0x40
   2b59a:	ldr	r3, [pc, #280]	; (2b6b4 <btrfs_abort_transaction@@Base+0xc48>)
   2b59c:	ldr	r3, [r2, r3]
   2b59e:	ldr	r2, [sp, #40]	; 0x28
   2b5a0:	str	r2, [sp, #12]
   2b5a2:	ldr	r2, [sp, #32]
   2b5a4:	str	r2, [sp, #8]
   2b5a6:	ldrd	r0, r1, [fp, #40]	; 0x28
   2b5aa:	ldr	r2, [pc, #324]	; (2b6f0 <btrfs_abort_transaction@@Base+0xc84>)
   2b5ac:	strd	r0, r1, [sp]
   2b5b0:	add	r2, pc
   2b5b2:	movs	r1, #1
   2b5b4:	ldr	r0, [r3, #0]
   2b5b6:	blx	8860 <__fprintf_chk@plt+0x4>
   2b5ba:	ldr	r1, [pc, #312]	; (2b6f4 <btrfs_abort_transaction@@Base+0xc88>)
   2b5bc:	ldr	r0, [pc, #312]	; (2b6f8 <btrfs_abort_transaction@@Base+0xc8c>)
   2b5be:	mov.w	r2, #436	; 0x1b4
   2b5c2:	add	r1, pc
   2b5c4:	adds	r1, #73	; 0x49
   2b5c6:	add	r0, pc
   2b5c8:	b.n	2b18e <btrfs_abort_transaction@@Base+0x722>
   2b5ca:	mov.w	r3, #4294967295	; 0xffffffff
   2b5ce:	mov	r2, r7
   2b5d0:	mov	r1, r9
   2b5d2:	mov	r0, r8
   2b5d4:	bl	2ab8c <btrfs_abort_transaction@@Base+0x120>
   2b5d8:	vmov	r1, s17
   2b5dc:	movw	r2, #415	; 0x19f
   2b5e0:	cmp	r7, r0
   2b5e2:	mov	sl, r0
   2b5e4:	vmov	r0, s18
   2b5e8:	ite	cs
   2b5ea:	movcs	r3, #0
   2b5ec:	movcc	r3, #1
   2b5ee:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2b5f2:	ldr	r3, [sp, #16]
   2b5f4:	ldrd	r0, r1, [sp, #24]
   2b5f8:	ldr.w	r3, [r3, #388]	; 0x184
   2b5fc:	mul.w	r2, r3, r7
   2b600:	sub.w	r7, sl, r7
   2b604:	muls	r3, r7
   2b606:	adds	r0, r0, r2
   2b608:	adc.w	r1, r1, #0
   2b60c:	movs	r2, #199	; 0xc7
   2b60e:	strd	r0, r1, [sp, #76]	; 0x4c
   2b612:	mov	r0, r5
   2b614:	strb.w	r2, [sp, #84]	; 0x54
   2b618:	movs	r2, #0
   2b61a:	vmov	r1, s16
   2b61e:	str.w	r3, [sp, #85]	; 0x55
   2b622:	movs	r3, #1
   2b624:	str.w	r2, [sp, #89]	; 0x59
   2b628:	str	r2, [sp, #72]	; 0x48
   2b62a:	mov	r2, r4
   2b62c:	str	r3, [sp, #4]
   2b62e:	add	r3, sp, #72	; 0x48
   2b630:	str	r3, [sp, #0]
   2b632:	add	r3, sp, #76	; 0x4c
   2b634:	bl	1a700 <btrfs_insert_empty_items@@Base>
   2b638:	mov	r7, r0
   2b63a:	cbnz	r0, 2b66c <btrfs_abort_transaction@@Base+0xc00>
   2b63c:	mov	r0, r4
   2b63e:	bl	1754c <btrfs_release_path@@Base>
   2b642:	ldr	r3, [sp, #32]
   2b644:	cmp	r9, sl
   2b646:	add.w	r3, r3, #1
   2b64a:	str	r3, [sp, #32]
   2b64c:	bls.n	2b65e <btrfs_abort_transaction@@Base+0xbf2>
   2b64e:	mov	r3, r7
   2b650:	mov	r2, sl
   2b652:	mov	r1, r9
   2b654:	mov	r0, r8
   2b656:	bl	2ab8c <btrfs_abort_transaction@@Base+0x120>
   2b65a:	mov	r7, r0
   2b65c:	b.n	2b58a <btrfs_abort_transaction@@Base+0xb1e>
   2b65e:	mov	r7, r9
   2b660:	b.n	2b58a <btrfs_abort_transaction@@Base+0xb1e>
   2b662:	str	r6, [sp, #32]
   2b664:	b.n	2b58e <btrfs_abort_transaction@@Base+0xb22>
   2b666:	mvn.w	r6, #11
   2b66a:	b.n	2b43a <btrfs_abort_transaction@@Base+0x9ce>
   2b66c:	mov	r6, r0
   2b66e:	b.n	2b43a <btrfs_abort_transaction@@Base+0x9ce>
   2b670:	movs	r6, #0
   2b672:	b.n	2ae9a <btrfs_abort_transaction@@Base+0x42e>
   2b674:	mov	r0, r6
   2b676:	add	sp, #124	; 0x7c
   2b678:	vpop	{d8-d9}
   2b67c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b680:	ldrh	r2, [r3, #56]	; 0x38
   2b682:	movs	r3, r0
   2b684:	ldrh	r4, [r2, #56]	; 0x38
   2b686:	movs	r3, r0
   2b688:	lsls	r0, r4, #8
   2b68a:	movs	r0, r0
   2b68c:	ldrh	r2, [r4, #54]	; 0x36
   2b68e:	movs	r3, r0
   2b690:	str	r1, [r1, r6]
   2b692:	movs	r1, r0
   2b694:	ldr	r4, [pc, #996]	; (2ba7c <btrfs_abort_transaction@@Base+0x1010>)
   2b696:	movs	r1, r0
   2b698:	str	r3, [r2, r3]
   2b69a:	movs	r1, r0
   2b69c:	ldr	r4, [pc, #292]	; (2b7c4 <btrfs_abort_transaction@@Base+0xd58>)
   2b69e:	movs	r1, r0
   2b6a0:	ldr	r4, [pc, #316]	; (2b7e0 <btrfs_abort_transaction@@Base+0xd74>)
   2b6a2:	movs	r1, r0
   2b6a4:	ldr	r3, [pc, #1004]	; (2ba94 <btrfs_abort_transaction@@Base+0x1028>)
   2b6a6:	movs	r1, r0
   2b6a8:	ldr	r3, [pc, #848]	; (2b9fc <btrfs_abort_transaction@@Base+0xf90>)
   2b6aa:	movs	r1, r0
   2b6ac:	ldr	r7, [pc, #172]	; (2b75c <btrfs_abort_transaction@@Base+0xcf0>)
   2b6ae:	movs	r1, r0
   2b6b0:	lsrs	r6, r6, #10
   2b6b2:	movs	r1, r0
   2b6b4:	lsls	r0, r6, #8
   2b6b6:	movs	r0, r0
   2b6b8:	ldr	r3, [pc, #188]	; (2b778 <btrfs_abort_transaction@@Base+0xd0c>)
   2b6ba:	movs	r1, r0
   2b6bc:	ldr	r6, [pc, #836]	; (2ba04 <btrfs_abort_transaction@@Base+0xf98>)
   2b6be:	movs	r1, r0
   2b6c0:	lsrs	r4, r3, #9
   2b6c2:	movs	r1, r0
   2b6c4:	ldr	r5, [pc, #644]	; (2b94c <btrfs_abort_transaction@@Base+0xee0>)
   2b6c6:	movs	r1, r0
   2b6c8:	ldr	r1, [pc, #92]	; (2b728 <btrfs_abort_transaction@@Base+0xcbc>)
   2b6ca:	movs	r1, r0
   2b6cc:	ldr	r0, [pc, #524]	; (2b8dc <btrfs_abort_transaction@@Base+0xe70>)
   2b6ce:	movs	r1, r0
   2b6d0:	ldr	r4, [pc, #972]	; (2baa0 <btrfs_abort_transaction@@Base+0x1034>)
   2b6d2:	movs	r1, r0
   2b6d4:	ldr	r0, [pc, #492]	; (2b8c4 <btrfs_abort_transaction@@Base+0xe58>)
   2b6d6:	movs	r1, r0
   2b6d8:	ldr	r0, [pc, #196]	; (2b7a0 <btrfs_abort_transaction@@Base+0xd34>)
   2b6da:	movs	r1, r0
   2b6dc:	ldr	r0, [pc, #72]	; (2b728 <btrfs_abort_transaction@@Base+0xcbc>)
   2b6de:	movs	r1, r0
   2b6e0:	ldr	r3, [pc, #556]	; (2b910 <btrfs_abort_transaction@@Base+0xea4>)
   2b6e2:	movs	r1, r0
   2b6e4:	lsls	r6, r2, #28
   2b6e6:	movs	r1, r0
   2b6e8:	ldr	r3, [pc, #236]	; (2b7d8 <btrfs_abort_transaction@@Base+0xd6c>)
   2b6ea:	movs	r1, r0
   2b6ec:			; <UNDEFINED> instruction: 0x47b2
   2b6ee:	movs	r1, r0
   2b6f0:	bx	r9
   2b6f2:	movs	r1, r0
   2b6f4:	ldr	r2, [pc, #964]	; (2babc <btrfs_abort_transaction@@Base+0x1050>)
   2b6f6:	movs	r1, r0
   2b6f8:	lsls	r4, r7, #25
   2b6fa:	movs	r1, r0
   2b6fc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b700:	sub	sp, #156	; 0x9c
   2b702:	mov	r4, r2
   2b704:	ldr	r2, [pc, #900]	; (2ba8c <btrfs_abort_transaction@@Base+0x1020>)
   2b706:	ldr	r3, [sp, #200]	; 0xc8
   2b708:	mov	r5, r1
   2b70a:	add	r2, pc
   2b70c:	ldrd	r9, sl, [sp, #192]	; 0xc0
   2b710:	ldr	r1, [r0, #0]
   2b712:	mov	r6, r0
   2b714:	str	r3, [sp, #92]	; 0x5c
   2b716:	ldr	r3, [sp, #204]	; 0xcc
   2b718:	ldr.w	r8, [r1, #48]	; 0x30
   2b71c:	str	r3, [sp, #96]	; 0x60
   2b71e:	ldr	r3, [pc, #880]	; (2ba90 <btrfs_abort_transaction@@Base+0x1024>)
   2b720:	ldr	r3, [r2, r3]
   2b722:	ldr	r3, [r3, #0]
   2b724:	str	r3, [sp, #148]	; 0x94
   2b726:	mov.w	r3, #0
   2b72a:	ldrd	r2, r3, [r5, #40]	; 0x28
   2b72e:	cmp	r3, sl
   2b730:	it	eq
   2b732:	cmpeq	r2, r9
   2b734:	bcs.n	2b7e4 <btrfs_abort_transaction@@Base+0xd78>
   2b736:	ldr.w	r3, [r1, #388]	; 0x184
   2b73a:	add	r7, sp, #108	; 0x6c
   2b73c:	movs	r2, #255	; 0xff
   2b73e:	mov	fp, sl
   2b740:	strb.w	r2, [sp, #116]	; 0x74
   2b744:	subs.w	sl, r9, r3
   2b748:	strb.w	r2, [sp, #117]	; 0x75
   2b74c:	mov.w	r3, #0
   2b750:	strb.w	r2, [sp, #118]	; 0x76
   2b754:	mov	r1, r8
   2b756:	strb.w	r2, [sp, #119]	; 0x77
   2b75a:	sbc.w	fp, fp, #0
   2b75e:	strb.w	r2, [sp, #120]	; 0x78
   2b762:	strb.w	r2, [sp, #121]	; 0x79
   2b766:	strb.w	r2, [sp, #122]	; 0x7a
   2b76a:	strb.w	r2, [sp, #123]	; 0x7b
   2b76e:	strb.w	r2, [sp, #124]	; 0x7c
   2b772:	mov	r2, r7
   2b774:	str	r3, [sp, #0]
   2b776:	mov	r3, r4
   2b778:	strd	sl, fp, [sp, #108]	; 0x6c
   2b77c:	bl	2ad4c <btrfs_abort_transaction@@Base+0x2e0>
   2b780:	mov	r3, r0
   2b782:	cbnz	r0, 2b7ce <btrfs_abort_transaction@@Base+0xd62>
   2b784:	mov	r3, fp
   2b786:	mov	r2, sl
   2b788:	mov	r0, r4
   2b78a:	bl	2ac66 <btrfs_abort_transaction@@Base+0x1fa>
   2b78e:	ldr	r2, [r4, #32]
   2b790:	mov	r1, r7
   2b792:	str	r0, [sp, #68]	; 0x44
   2b794:	ldr	r0, [r4, #0]
   2b796:	bl	2aa74 <btrfs_abort_transaction@@Base+0x8>
   2b79a:	ldrd	r3, r0, [sp, #108]	; 0x6c
   2b79e:	ldr.w	r2, [sp, #117]	; 0x75
   2b7a2:	ldr.w	r1, [sp, #121]	; 0x79
   2b7a6:	adds	r3, r3, r2
   2b7a8:	str	r3, [sp, #8]
   2b7aa:	adc.w	r3, r0, r1
   2b7ae:	str	r3, [sp, #12]
   2b7b0:	ldrd	r0, r1, [sp, #8]
   2b7b4:	ldrd	r2, r3, [sp, #192]	; 0xc0
   2b7b8:	cmp	r3, r1
   2b7ba:	it	eq
   2b7bc:	cmpeq	r2, r0
   2b7be:	bcc.n	2b82c <btrfs_abort_transaction@@Base+0xdc0>
   2b7c0:	mov	r2, r4
   2b7c2:	mov	r1, r8
   2b7c4:	mov	r0, r6
   2b7c6:	bl	2ada0 <btrfs_abort_transaction@@Base+0x334>
   2b7ca:	mov	r3, r0
   2b7cc:	cbz	r0, 2b82c <btrfs_abort_transaction@@Base+0xdc0>
   2b7ce:	ldr	r1, [pc, #708]	; (2ba94 <btrfs_abort_transaction@@Base+0x1028>)
   2b7d0:	ldr	r2, [pc, #700]	; (2ba90 <btrfs_abort_transaction@@Base+0x1024>)
   2b7d2:	add	r1, pc
   2b7d4:	ldr	r2, [r1, r2]
   2b7d6:	ldr	r1, [r2, #0]
   2b7d8:	ldr	r2, [sp, #148]	; 0x94
   2b7da:	eors	r1, r2
   2b7dc:	beq.w	2ba82 <btrfs_abort_transaction@@Base+0x1016>
   2b7e0:	blx	8510 <__stack_chk_fail@plt>
   2b7e4:	ldr	r3, [sp, #192]	; 0xc0
   2b7e6:	movs	r2, #255	; 0xff
   2b7e8:	mov	r1, r8
   2b7ea:	strb.w	r2, [sp, #116]	; 0x74
   2b7ee:	strb.w	r2, [sp, #117]	; 0x75
   2b7f2:	str	r3, [sp, #108]	; 0x6c
   2b7f4:	ldr	r3, [sp, #196]	; 0xc4
   2b7f6:	strb.w	r2, [sp, #118]	; 0x76
   2b7fa:	strb.w	r2, [sp, #119]	; 0x77
   2b7fe:	str	r3, [sp, #112]	; 0x70
   2b800:	movs	r3, #0
   2b802:	strb.w	r2, [sp, #120]	; 0x78
   2b806:	strb.w	r2, [sp, #121]	; 0x79
   2b80a:	strb.w	r2, [sp, #122]	; 0x7a
   2b80e:	strb.w	r2, [sp, #123]	; 0x7b
   2b812:	strb.w	r2, [sp, #124]	; 0x7c
   2b816:	add	r2, sp, #108	; 0x6c
   2b818:	str	r3, [sp, #0]
   2b81a:	mov	r3, r4
   2b81c:	bl	2ad4c <btrfs_abort_transaction@@Base+0x2e0>
   2b820:	mov	r3, r0
   2b822:	cmp	r0, #0
   2b824:	bne.n	2b7ce <btrfs_abort_transaction@@Base+0xd62>
   2b826:	mov.w	r3, #4294967295	; 0xffffffff
   2b82a:	str	r3, [sp, #68]	; 0x44
   2b82c:	ldr	r3, [sp, #92]	; 0x5c
   2b82e:	str	r3, [sp, #8]
   2b830:	ldr	r3, [sp, #96]	; 0x60
   2b832:	str	r3, [sp, #12]
   2b834:	ldrd	r2, r3, [sp, #192]	; 0xc0
   2b838:	strd	r2, r3, [sp, #16]
   2b83c:	ldr	r3, [pc, #600]	; (2ba98 <btrfs_abort_transaction@@Base+0x102c>)
   2b83e:	add	r3, pc
   2b840:	adds	r3, #103	; 0x67
   2b842:	str	r3, [sp, #88]	; 0x58
   2b844:	mov	fp, r3
   2b846:	ldr	r2, [sp, #8]
   2b848:	add	r1, sp, #128	; 0x80
   2b84a:	ldr	r3, [sp, #16]
   2b84c:	ldr	r7, [r4, #0]
   2b84e:	adds	r3, r3, r2
   2b850:	ldr	r2, [sp, #12]
   2b852:	str	r3, [sp, #56]	; 0x38
   2b854:	ldr	r3, [sp, #20]
   2b856:	mov	r0, r7
   2b858:	ldr.w	r9, [r7, #92]	; 0x5c
   2b85c:	adcs	r3, r2
   2b85e:	ldr	r2, [r4, #32]
   2b860:	str	r3, [sp, #60]	; 0x3c
   2b862:	bl	2aa74 <btrfs_abort_transaction@@Base+0x8>
   2b866:	ldrb.w	r3, [sp, #136]	; 0x88
   2b86a:	ldr	r0, [pc, #560]	; (2ba9c <btrfs_abort_transaction@@Base+0x1030>)
   2b86c:	sub.w	r2, r3, #200	; 0xc8
   2b870:	ldr	r1, [sp, #88]	; 0x58
   2b872:	negs	r3, r2
   2b874:	add	r0, pc
   2b876:	adcs	r3, r2
   2b878:	mov.w	r2, #502	; 0x1f6
   2b87c:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2b880:	ldrd	r2, r3, [sp, #128]	; 0x80
   2b884:	strd	r2, r3, [sp, #24]
   2b888:	ldr	r1, [sp, #24]
   2b88a:	ldr.w	r3, [sp, #137]	; 0x89
   2b88e:	ldr.w	r2, [sp, #141]	; 0x8d
   2b892:	adds	r3, r3, r1
   2b894:	str	r3, [sp, #48]	; 0x30
   2b896:	ldr	r3, [sp, #28]
   2b898:	ldrd	r0, r1, [sp, #24]
   2b89c:	adc.w	r3, r2, r3
   2b8a0:	str	r3, [sp, #52]	; 0x34
   2b8a2:	ldrd	r2, r3, [sp, #16]
   2b8a6:	cmp	r3, r1
   2b8a8:	it	eq
   2b8aa:	cmpeq	r2, r0
   2b8ac:	bcc.n	2b9aa <btrfs_abort_transaction@@Base+0xf3e>
   2b8ae:	ldrd	r0, r1, [sp, #48]	; 0x30
   2b8b2:	cmp	r3, r1
   2b8b4:	it	eq
   2b8b6:	cmpeq	r2, r0
   2b8b8:	ite	cc
   2b8ba:	movcc	r3, #1
   2b8bc:	movcs	r3, #0
   2b8be:	ldr	r0, [pc, #480]	; (2baa0 <btrfs_abort_transaction@@Base+0x1034>)
   2b8c0:	mov.w	r2, #506	; 0x1fa
   2b8c4:	mov	r1, fp
   2b8c6:	add	r0, pc
   2b8c8:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2b8cc:	ldrd	r2, r3, [sp, #24]
   2b8d0:	ldrd	r0, r1, [sp, #56]	; 0x38
   2b8d4:	cmp	r3, r1
   2b8d6:	mov	r1, fp
   2b8d8:	it	eq
   2b8da:	cmpeq	r2, r0
   2b8dc:	ldr	r0, [pc, #452]	; (2baa4 <btrfs_abort_transaction@@Base+0x1038>)
   2b8de:	movw	r2, #507	; 0x1fb
   2b8e2:	ite	cc
   2b8e4:	movcc	r3, #1
   2b8e6:	movcs	r3, #0
   2b8e8:	add	r0, pc
   2b8ea:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2b8ee:	ldrd	r2, r3, [sp, #56]	; 0x38
   2b8f2:	strd	r2, r3, [sp, #32]
   2b8f6:	ldrd	r0, r1, [sp, #32]
   2b8fa:	ldrd	r2, r3, [sp, #48]	; 0x30
   2b8fe:	cmp	r3, r1
   2b900:	ldr	r1, [sp, #16]
   2b902:	it	eq
   2b904:	cmpeq	r2, r0
   2b906:	it	cc
   2b908:	strdcc	r2, r3, [sp, #32]
   2b90c:	ldr	r3, [r4, #32]
   2b90e:	movs	r2, #25
   2b910:	ldr	r0, [sp, #24]
   2b912:	mla	r3, r2, r3, r7
   2b916:	subs	r0, r1, r0
   2b918:	ldr	r1, [sp, #20]
   2b91a:	ldr.w	r2, [r9, #388]	; 0x184
   2b91e:	mov	ip, r1
   2b920:	ldr	r1, [sp, #28]
   2b922:	ldr.w	sl, [r3, #214]	; 0xd6
   2b926:	mov.w	r3, #0
   2b92a:	sbc.w	r1, ip, r1
   2b92e:	str	r2, [sp, #100]	; 0x64
   2b930:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   2b934:	ldr	r1, [sp, #32]
   2b936:	ldr	r2, [sp, #100]	; 0x64
   2b938:	movs	r3, #0
   2b93a:	add.w	sl, sl, #101	; 0x65
   2b93e:	mov	r9, r0
   2b940:	ldr	r0, [sp, #24]
   2b942:	subs	r0, r1, r0
   2b944:	ldr	r1, [sp, #36]	; 0x24
   2b946:	mov	ip, r1
   2b948:	ldr	r1, [sp, #28]
   2b94a:	sbc.w	r1, ip, r1
   2b94e:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   2b952:	ldr	r2, [sp, #208]	; 0xd0
   2b954:	sub.w	r3, r0, r9
   2b958:	cbnz	r2, 2b9ae <btrfs_abort_transaction@@Base+0xf42>
   2b95a:	mov	r2, r9
   2b95c:	mov	r1, sl
   2b95e:	mov	r0, r7
   2b960:	bl	15da6 <extent_buffer_bitmap_set@@Base>
   2b964:	mov	r0, r7
   2b966:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   2b96a:	ldr	r2, [sp, #32]
   2b96c:	ldr	r3, [sp, #16]
   2b96e:	ldr	r1, [sp, #36]	; 0x24
   2b970:	subs	r3, r3, r2
   2b972:	ldr	r2, [sp, #20]
   2b974:	sbc.w	r2, r2, r1
   2b978:	ldr	r1, [sp, #8]
   2b97a:	adds	r3, r1, r3
   2b97c:	str	r3, [sp, #8]
   2b97e:	ldr	r3, [sp, #12]
   2b980:	adc.w	r3, r2, r3
   2b984:	str	r3, [sp, #12]
   2b986:	ldrd	r2, r3, [sp, #8]
   2b98a:	orrs	r3, r2
   2b98c:	beq.n	2b9ba <btrfs_abort_transaction@@Base+0xf4e>
   2b98e:	mov	r2, r4
   2b990:	mov	r1, r8
   2b992:	mov	r0, r6
   2b994:	bl	2ada0 <btrfs_abort_transaction@@Base+0x334>
   2b998:	mov	r3, r0
   2b99a:	cmp	r0, #0
   2b99c:	bne.w	2b7ce <btrfs_abort_transaction@@Base+0xd62>
   2b9a0:	ldrd	r2, r3, [sp, #32]
   2b9a4:	strd	r2, r3, [sp, #16]
   2b9a8:	b.n	2b846 <btrfs_abort_transaction@@Base+0xdda>
   2b9aa:	movs	r3, #0
   2b9ac:	b.n	2b8be <btrfs_abort_transaction@@Base+0xe52>
   2b9ae:	mov	r2, r9
   2b9b0:	mov	r1, sl
   2b9b2:	mov	r0, r7
   2b9b4:	bl	15dee <extent_buffer_bitmap_clear@@Base>
   2b9b8:	b.n	2b964 <btrfs_abort_transaction@@Base+0xef8>
   2b9ba:	ldr	r2, [sp, #92]	; 0x5c
   2b9bc:	ldr	r3, [sp, #192]	; 0xc0
   2b9be:	ldrd	r1, r0, [r5, #40]	; 0x28
   2b9c2:	adds	r3, r3, r2
   2b9c4:	ldr	r2, [sp, #196]	; 0xc4
   2b9c6:	str	r3, [sp, #40]	; 0x28
   2b9c8:	ldr	r3, [sp, #96]	; 0x60
   2b9ca:	adc.w	r3, r2, r3
   2b9ce:	str	r3, [sp, #44]	; 0x2c
   2b9d0:	ldr.w	r3, [r5, #49]	; 0x31
   2b9d4:	ldr.w	r2, [r5, #53]	; 0x35
   2b9d8:	adds	r3, r3, r1
   2b9da:	str	r3, [sp, #72]	; 0x48
   2b9dc:	adc.w	r3, r2, r0
   2b9e0:	str	r3, [sp, #76]	; 0x4c
   2b9e2:	ldrd	r0, r1, [sp, #72]	; 0x48
   2b9e6:	ldrd	r2, r3, [sp, #40]	; 0x28
   2b9ea:	cmp	r3, r1
   2b9ec:	it	eq
   2b9ee:	cmpeq	r2, r0
   2b9f0:	bcs.n	2ba72 <btrfs_abort_transaction@@Base+0x1006>
   2b9f2:	ldr	r2, [r4, #32]
   2b9f4:	add	r1, sp, #108	; 0x6c
   2b9f6:	ldr	r0, [r4, #0]
   2b9f8:	bl	2aa74 <btrfs_abort_transaction@@Base+0x8>
   2b9fc:	ldrd	r3, r0, [sp, #108]	; 0x6c
   2ba00:	ldr.w	r2, [sp, #117]	; 0x75
   2ba04:	ldr.w	r1, [sp, #121]	; 0x79
   2ba08:	adds	r3, r3, r2
   2ba0a:	str	r3, [sp, #80]	; 0x50
   2ba0c:	adc.w	r3, r0, r1
   2ba10:	str	r3, [sp, #84]	; 0x54
   2ba12:	ldrd	r0, r1, [sp, #80]	; 0x50
   2ba16:	ldrd	r2, r3, [sp, #40]	; 0x28
   2ba1a:	cmp	r3, r1
   2ba1c:	it	eq
   2ba1e:	cmpeq	r2, r0
   2ba20:	bcs.n	2ba60 <btrfs_abort_transaction@@Base+0xff4>
   2ba22:	ldrd	r2, r3, [sp, #40]	; 0x28
   2ba26:	mov	r0, r4
   2ba28:	bl	2ac66 <btrfs_abort_transaction@@Base+0x1fa>
   2ba2c:	ldr	r3, [sp, #68]	; 0x44
   2ba2e:	ldr	r2, [sp, #208]	; 0xd0
   2ba30:	subs	r3, #1
   2ba32:	it	ne
   2ba34:	movne	r3, #1
   2ba36:	cbz	r2, 2ba78 <btrfs_abort_transaction@@Base+0x100c>
   2ba38:	cmp	r0, #1
   2ba3a:	ite	ne
   2ba3c:	negne	r3, r3
   2ba3e:	rsbeq	r3, r3, #1
   2ba42:	mov	r0, r4
   2ba44:	str	r3, [sp, #8]
   2ba46:	bl	1754c <btrfs_release_path@@Base>
   2ba4a:	ldr	r3, [sp, #8]
   2ba4c:	cmp	r3, #0
   2ba4e:	beq.w	2b7ce <btrfs_abort_transaction@@Base+0xd62>
   2ba52:	mov	r2, r4
   2ba54:	mov	r1, r5
   2ba56:	mov	r0, r6
   2ba58:	bl	2ae50 <btrfs_abort_transaction@@Base+0x3e4>
   2ba5c:	mov	r3, r0
   2ba5e:	b.n	2b7ce <btrfs_abort_transaction@@Base+0xd62>
   2ba60:	mov	r2, r4
   2ba62:	mov	r1, r8
   2ba64:	mov	r0, r6
   2ba66:	bl	2ada0 <btrfs_abort_transaction@@Base+0x334>
   2ba6a:	mov	r3, r0
   2ba6c:	cmp	r0, #0
   2ba6e:	beq.n	2ba22 <btrfs_abort_transaction@@Base+0xfb6>
   2ba70:	b.n	2b7ce <btrfs_abort_transaction@@Base+0xd62>
   2ba72:	mov.w	r0, #4294967295	; 0xffffffff
   2ba76:	b.n	2ba2c <btrfs_abort_transaction@@Base+0xfc0>
   2ba78:	cmp	r0, #1
   2ba7a:	it	eq
   2ba7c:	addeq.w	r3, r3, #4294967295	; 0xffffffff
   2ba80:	b.n	2ba42 <btrfs_abort_transaction@@Base+0xfd6>
   2ba82:	mov	r0, r3
   2ba84:	add	sp, #156	; 0x9c
   2ba86:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ba8a:	nop
   2ba8c:	strh	r2, [r7, #50]	; 0x32
   2ba8e:	movs	r3, r0
   2ba90:	lsls	r0, r4, #8
   2ba92:	movs	r0, r0
   2ba94:	strh	r2, [r6, #44]	; 0x2c
   2ba96:	movs	r3, r0
   2ba98:	ldr	r0, [pc, #468]	; (2bc70 <btrfs_abort_transaction@@Base+0x1204>)
   2ba9a:	movs	r1, r0
   2ba9c:	muls	r5, r6
   2ba9e:	movs	r1, r0
   2baa0:	add	sl, r0
   2baa2:	movs	r1, r0
   2baa4:	add	ip, r1
   2baa6:	movs	r1, r0
   2baa8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2baac:	sub	sp, #116	; 0x74
   2baae:	mov	r5, r2
   2bab0:	ldr	r2, [pc, #1000]	; (2be9c <btrfs_abort_transaction@@Base+0x1430>)
   2bab2:	ldr	r3, [sp, #160]	; 0xa0
   2bab4:	mov	r6, r1
   2bab6:	add	r2, pc
   2bab8:	ldr	r1, [r0, #0]
   2baba:	mov.w	r8, #0
   2babe:	mov	r7, r0
   2bac0:	str	r3, [sp, #48]	; 0x30
   2bac2:	mov	r0, r8
   2bac4:	ldr	r3, [sp, #164]	; 0xa4
   2bac6:	str	r3, [sp, #52]	; 0x34
   2bac8:	ldr	r3, [pc, #980]	; (2bea0 <btrfs_abort_transaction@@Base+0x1434>)
   2baca:	ldr	r3, [r2, r3]
   2bacc:	mov	r2, r6
   2bace:	ldr	r3, [r3, #0]
   2bad0:	str	r3, [sp, #108]	; 0x6c
   2bad2:	mov.w	r3, #0
   2bad6:	str.w	r8, [sp]
   2bada:	mov	r3, r5
   2badc:	ldr	r1, [r1, #48]	; 0x30
   2bade:	bl	2aadc <btrfs_abort_transaction@@Base+0x70>
   2bae2:	cmn.w	r0, #4096	; 0x1000
   2bae6:	bls.n	2bb00 <btrfs_abort_transaction@@Base+0x1094>
   2bae8:	mov	r4, r0
   2baea:	ldr	r2, [pc, #952]	; (2bea4 <btrfs_abort_transaction@@Base+0x1438>)
   2baec:	ldr	r3, [pc, #944]	; (2bea0 <btrfs_abort_transaction@@Base+0x1434>)
   2baee:	add	r2, pc
   2baf0:	ldr	r3, [r2, r3]
   2baf2:	ldr	r2, [r3, #0]
   2baf4:	ldr	r3, [sp, #108]	; 0x6c
   2baf6:	eors	r2, r3
   2baf8:	beq.w	2be92 <btrfs_abort_transaction@@Base+0x1426>
   2bafc:	blx	8510 <__stack_chk_fail@plt>
   2bb00:	ldr	r4, [r5, #0]
   2bb02:	add	r4, r0
   2bb04:	mov	r0, r5
   2bb06:	ldr	r4, [r4, #100]	; 0x64
   2bb08:	bl	1754c <btrfs_release_path@@Base>
   2bb0c:	lsls	r4, r4, #31
   2bb0e:	bpl.n	2bb30 <btrfs_abort_transaction@@Base+0x10c4>
   2bb10:	ldr	r3, [sp, #48]	; 0x30
   2bb12:	mov	r2, r5
   2bb14:	mov	r1, r6
   2bb16:	mov	r0, r7
   2bb18:	str.w	r8, [sp, #16]
   2bb1c:	str	r3, [sp, #8]
   2bb1e:	ldr	r3, [sp, #52]	; 0x34
   2bb20:	str	r3, [sp, #12]
   2bb22:	ldrd	r3, r4, [sp, #152]	; 0x98
   2bb26:	strd	r3, r4, [sp]
   2bb2a:	bl	2b6fc <btrfs_abort_transaction@@Base+0xc90>
   2bb2e:	b.n	2bae8 <btrfs_abort_transaction@@Base+0x107c>
   2bb30:	ldr	r3, [r7, #0]
   2bb32:	ldrd	r0, r1, [sp, #152]	; 0x98
   2bb36:	ldr.w	sl, [r3, #48]	; 0x30
   2bb3a:	ldrd	r3, r4, [sp, #152]	; 0x98
   2bb3e:	strd	r3, r4, [sp, #88]	; 0x58
   2bb42:	movs	r3, #199	; 0xc7
   2bb44:	strb.w	r3, [sp, #96]	; 0x60
   2bb48:	ldr	r3, [sp, #48]	; 0x30
   2bb4a:	str.w	r3, [sp, #97]	; 0x61
   2bb4e:	ldr	r3, [sp, #52]	; 0x34
   2bb50:	str.w	r3, [sp, #101]	; 0x65
   2bb54:	ldrd	r2, r3, [r6, #40]	; 0x28
   2bb58:	cmp	r1, r3
   2bb5a:	it	eq
   2bb5c:	cmpeq	r0, r2
   2bb5e:	beq.n	2bbe4 <btrfs_abort_transaction@@Base+0x1178>
   2bb60:	ldr	r3, [sp, #152]	; 0x98
   2bb62:	add.w	r8, sp, #68	; 0x44
   2bb66:	mov.w	r1, #4294967295	; 0xffffffff
   2bb6a:	mov	r0, r7
   2bb6c:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2bb70:	ldr	r3, [sp, #156]	; 0x9c
   2bb72:	strb.w	r1, [sp, #77]	; 0x4d
   2bb76:	adc.w	r3, r3, #4294967295	; 0xffffffff
   2bb7a:	str	r1, [sp, #0]
   2bb7c:	strd	r2, r3, [sp, #68]	; 0x44
   2bb80:	mov	r1, sl
   2bb82:	movs	r2, #255	; 0xff
   2bb84:	mov	r3, r5
   2bb86:	strb.w	r2, [sp, #76]	; 0x4c
   2bb8a:	strb.w	r2, [sp, #78]	; 0x4e
   2bb8e:	strb.w	r2, [sp, #79]	; 0x4f
   2bb92:	strb.w	r2, [sp, #80]	; 0x50
   2bb96:	strb.w	r2, [sp, #81]	; 0x51
   2bb9a:	strb.w	r2, [sp, #82]	; 0x52
   2bb9e:	strb.w	r2, [sp, #83]	; 0x53
   2bba2:	strb.w	r2, [sp, #84]	; 0x54
   2bba6:	mov	r2, r8
   2bba8:	bl	2ad4c <btrfs_abort_transaction@@Base+0x2e0>
   2bbac:	mov	r4, r0
   2bbae:	cmp	r0, #0
   2bbb0:	bne.n	2baea <btrfs_abort_transaction@@Base+0x107e>
   2bbb2:	ldr	r2, [r5, #32]
   2bbb4:	mov	r1, r8
   2bbb6:	ldr	r0, [r5, #0]
   2bbb8:	bl	2aa74 <btrfs_abort_transaction@@Base+0x8>
   2bbbc:	ldrb.w	r3, [sp, #76]	; 0x4c
   2bbc0:	cmp	r3, #199	; 0xc7
   2bbc2:	beq.n	2bbea <btrfs_abort_transaction@@Base+0x117e>
   2bbc4:	sub.w	r0, r3, #198	; 0xc6
   2bbc8:	ldr	r1, [pc, #732]	; (2bea8 <btrfs_abort_transaction@@Base+0x143c>)
   2bbca:	negs	r3, r0
   2bbcc:	movw	r2, #857	; 0x359
   2bbd0:	adcs	r3, r0
   2bbd2:	ldr	r0, [pc, #728]	; (2beac <btrfs_abort_transaction@@Base+0x1440>)
   2bbd4:	add	r1, pc
   2bbd6:	add	r0, pc
   2bbd8:	adds	r1, #123	; 0x7b
   2bbda:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2bbde:	mov	r0, r5
   2bbe0:	bl	1754c <btrfs_release_path@@Base>
   2bbe4:	mov.w	fp, #1
   2bbe8:	b.n	2bcba <btrfs_abort_transaction@@Base+0x124e>
   2bbea:	ldrd	r8, r9, [sp, #68]	; 0x44
   2bbee:	ldr.w	r3, [sp, #77]	; 0x4d
   2bbf2:	ldr.w	r2, [sp, #81]	; 0x51
   2bbf6:	adds.w	r3, r3, r8
   2bbfa:	str	r3, [sp, #32]
   2bbfc:	adc.w	r3, r2, r9
   2bc00:	str	r3, [sp, #36]	; 0x24
   2bc02:	ldrd	r2, r3, [r6, #40]	; 0x28
   2bc06:	cmp	r9, r3
   2bc08:	it	eq
   2bc0a:	cmpeq	r8, r2
   2bc0c:	bcc.w	2bdac <btrfs_abort_transaction@@Base+0x1340>
   2bc10:	ldrd	r0, r1, [sp, #32]
   2bc14:	cmp	r3, r1
   2bc16:	it	eq
   2bc18:	cmpeq	r2, r0
   2bc1a:	ite	cc
   2bc1c:	movcc	r3, #1
   2bc1e:	movcs	r3, #0
   2bc20:	ldr	r1, [pc, #652]	; (2beb0 <btrfs_abort_transaction@@Base+0x1444>)
   2bc22:	mov.w	r2, #864	; 0x360
   2bc26:	ldr	r0, [pc, #652]	; (2beb4 <btrfs_abort_transaction@@Base+0x1448>)
   2bc28:	add	r1, pc
   2bc2a:	adds	r1, #123	; 0x7b
   2bc2c:	add	r0, pc
   2bc2e:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2bc32:	ldrd	r2, r3, [sp, #152]	; 0x98
   2bc36:	cmp	r9, r3
   2bc38:	it	eq
   2bc3a:	cmpeq	r8, r2
   2bc3c:	bcs.n	2bc52 <btrfs_abort_transaction@@Base+0x11e6>
   2bc3e:	mov	r4, r3
   2bc40:	mov	r3, r2
   2bc42:	ldrd	r1, r2, [sp, #32]
   2bc46:	cmp	r4, r2
   2bc48:	it	eq
   2bc4a:	cmpeq	r3, r1
   2bc4c:	ite	cs
   2bc4e:	movcs	r4, #1
   2bc50:	movcc	r4, #0
   2bc52:	ldr	r1, [pc, #612]	; (2beb8 <btrfs_abort_transaction@@Base+0x144c>)
   2bc54:	mov	r3, r4
   2bc56:	ldr	r0, [pc, #612]	; (2bebc <btrfs_abort_transaction@@Base+0x1450>)
   2bc58:	movw	r2, #866	; 0x362
   2bc5c:	add	r1, pc
   2bc5e:	adds	r1, #123	; 0x7b
   2bc60:	add	r0, pc
   2bc62:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2bc66:	ldrd	r3, r4, [sp, #152]	; 0x98
   2bc6a:	ldrd	r1, r2, [sp, #32]
   2bc6e:	cmp	r4, r2
   2bc70:	mov.w	r4, #1
   2bc74:	it	eq
   2bc76:	cmpeq	r3, r1
   2bc78:	bne.n	2bcb2 <btrfs_abort_transaction@@Base+0x1246>
   2bc7a:	str	r4, [sp, #0]
   2bc7c:	mov	r2, r5
   2bc7e:	ldr	r3, [r5, #32]
   2bc80:	mov	r1, sl
   2bc82:	mov	r0, r7
   2bc84:	bl	1aaec <btrfs_del_items@@Base>
   2bc88:	mov	r4, r0
   2bc8a:	cmp	r0, #0
   2bc8c:	bne.w	2baea <btrfs_abort_transaction@@Base+0x107e>
   2bc90:	ldr.w	r3, [sp, #97]	; 0x61
   2bc94:	ldr.w	r1, [sp, #77]	; 0x4d
   2bc98:	ldr.w	r2, [sp, #101]	; 0x65
   2bc9c:	ldr.w	r0, [sp, #81]	; 0x51
   2bca0:	adds	r3, r3, r1
   2bca2:	strd	r8, r9, [sp, #88]	; 0x58
   2bca6:	adc.w	r2, r0, r2
   2bcaa:	str.w	r3, [sp, #97]	; 0x61
   2bcae:	str.w	r2, [sp, #101]	; 0x65
   2bcb2:	mov	r0, r5
   2bcb4:	mov	fp, r4
   2bcb6:	bl	1754c <btrfs_release_path@@Base>
   2bcba:	ldr	r2, [sp, #48]	; 0x30
   2bcbc:	ldr	r3, [sp, #152]	; 0x98
   2bcbe:	ldrd	r1, r0, [r6, #40]	; 0x28
   2bcc2:	adds	r3, r3, r2
   2bcc4:	ldr	r2, [sp, #156]	; 0x9c
   2bcc6:	str	r3, [sp, #24]
   2bcc8:	ldr	r3, [sp, #52]	; 0x34
   2bcca:	adc.w	r3, r2, r3
   2bcce:	str	r3, [sp, #28]
   2bcd0:	ldr.w	r3, [r6, #49]	; 0x31
   2bcd4:	ldr.w	r2, [r6, #53]	; 0x35
   2bcd8:	adds	r3, r3, r1
   2bcda:	str	r3, [sp, #56]	; 0x38
   2bcdc:	adc.w	r3, r2, r0
   2bce0:	str	r3, [sp, #60]	; 0x3c
   2bce2:	ldrd	r1, r2, [sp, #56]	; 0x38
   2bce6:	ldrd	r3, r4, [sp, #24]
   2bcea:	cmp	r4, r2
   2bcec:	it	eq
   2bcee:	cmpeq	r3, r1
   2bcf0:	beq.n	2bd70 <btrfs_abort_transaction@@Base+0x1304>
   2bcf2:	ldr	r3, [sp, #24]
   2bcf4:	add.w	r8, sp, #68	; 0x44
   2bcf8:	movs	r2, #255	; 0xff
   2bcfa:	mov.w	r1, #4294967295	; 0xffffffff
   2bcfe:	strb.w	r2, [sp, #76]	; 0x4c
   2bd02:	mov	r0, r7
   2bd04:	str	r3, [sp, #68]	; 0x44
   2bd06:	ldr	r3, [sp, #28]
   2bd08:	strb.w	r1, [sp, #77]	; 0x4d
   2bd0c:	strb.w	r2, [sp, #78]	; 0x4e
   2bd10:	str	r3, [sp, #72]	; 0x48
   2bd12:	mov	r3, r5
   2bd14:	strb.w	r2, [sp, #79]	; 0x4f
   2bd18:	strb.w	r2, [sp, #80]	; 0x50
   2bd1c:	strb.w	r2, [sp, #81]	; 0x51
   2bd20:	strb.w	r2, [sp, #82]	; 0x52
   2bd24:	strb.w	r2, [sp, #83]	; 0x53
   2bd28:	strb.w	r2, [sp, #84]	; 0x54
   2bd2c:	mov	r2, r8
   2bd2e:	str	r1, [sp, #0]
   2bd30:	mov	r1, sl
   2bd32:	bl	2ad4c <btrfs_abort_transaction@@Base+0x2e0>
   2bd36:	mov	r4, r0
   2bd38:	cmp	r0, #0
   2bd3a:	bne.w	2baea <btrfs_abort_transaction@@Base+0x107e>
   2bd3e:	ldr	r2, [r5, #32]
   2bd40:	mov	r1, r8
   2bd42:	ldr	r0, [r5, #0]
   2bd44:	bl	2aa74 <btrfs_abort_transaction@@Base+0x8>
   2bd48:	ldrb.w	r3, [sp, #76]	; 0x4c
   2bd4c:	cmp	r3, #199	; 0xc7
   2bd4e:	beq.n	2bdb0 <btrfs_abort_transaction@@Base+0x1344>
   2bd50:	sub.w	r1, r3, #198	; 0xc6
   2bd54:	ldr	r0, [pc, #360]	; (2bec0 <btrfs_abort_transaction@@Base+0x1454>)
   2bd56:	negs	r3, r1
   2bd58:	mov.w	r2, #896	; 0x380
   2bd5c:	adcs	r3, r1
   2bd5e:	ldr	r1, [pc, #356]	; (2bec4 <btrfs_abort_transaction@@Base+0x1458>)
   2bd60:	add	r0, pc
   2bd62:	add	r1, pc
   2bd64:	adds	r1, #123	; 0x7b
   2bd66:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2bd6a:	mov	r0, r5
   2bd6c:	bl	1754c <btrfs_release_path@@Base>
   2bd70:	movs	r3, #0
   2bd72:	mov	r2, r5
   2bd74:	str	r3, [sp, #64]	; 0x40
   2bd76:	mov	r1, sl
   2bd78:	movs	r3, #1
   2bd7a:	mov	r0, r7
   2bd7c:	str	r3, [sp, #4]
   2bd7e:	add	r3, sp, #64	; 0x40
   2bd80:	str	r3, [sp, #0]
   2bd82:	add	r3, sp, #88	; 0x58
   2bd84:	bl	1a700 <btrfs_insert_empty_items@@Base>
   2bd88:	mov	r4, r0
   2bd8a:	cmp	r0, #0
   2bd8c:	bne.w	2baea <btrfs_abort_transaction@@Base+0x107e>
   2bd90:	mov	r0, r5
   2bd92:	bl	1754c <btrfs_release_path@@Base>
   2bd96:	cmp.w	fp, #0
   2bd9a:	beq.w	2baea <btrfs_abort_transaction@@Base+0x107e>
   2bd9e:	mov	r3, fp
   2bda0:	mov	r2, r5
   2bda2:	mov	r1, r6
   2bda4:	mov	r0, r7
   2bda6:	bl	2ae50 <btrfs_abort_transaction@@Base+0x3e4>
   2bdaa:	b.n	2bae8 <btrfs_abort_transaction@@Base+0x107c>
   2bdac:	mov	r3, r4
   2bdae:	b.n	2bc20 <btrfs_abort_transaction@@Base+0x11b4>
   2bdb0:	ldrd	r8, r9, [sp, #68]	; 0x44
   2bdb4:	ldr.w	r3, [sp, #77]	; 0x4d
   2bdb8:	ldr.w	r2, [sp, #81]	; 0x51
   2bdbc:	adds.w	r3, r3, r8
   2bdc0:	str	r3, [sp, #40]	; 0x28
   2bdc2:	adc.w	r3, r2, r9
   2bdc6:	str	r3, [sp, #44]	; 0x2c
   2bdc8:	ldrd	r2, r3, [r6, #40]	; 0x28
   2bdcc:	cmp	r9, r3
   2bdce:	it	eq
   2bdd0:	cmpeq	r8, r2
   2bdd2:	bcc.n	2be8a <btrfs_abort_transaction@@Base+0x141e>
   2bdd4:	ldrd	r0, r1, [sp, #40]	; 0x28
   2bdd8:	cmp	r3, r1
   2bdda:	it	eq
   2bddc:	cmpeq	r2, r0
   2bdde:	ite	cc
   2bde0:	movcc	r3, #1
   2bde2:	movcs	r3, #0
   2bde4:	ldr	r1, [pc, #224]	; (2bec8 <btrfs_abort_transaction@@Base+0x145c>)
   2bde6:	movw	r2, #903	; 0x387
   2bdea:	ldr	r0, [pc, #224]	; (2becc <btrfs_abort_transaction@@Base+0x1460>)
   2bdec:	add	r1, pc
   2bdee:	adds	r1, #123	; 0x7b
   2bdf0:	add	r0, pc
   2bdf2:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2bdf6:	ldrd	r2, r3, [sp, #152]	; 0x98
   2bdfa:	cmp	r9, r3
   2bdfc:	it	eq
   2bdfe:	cmpeq	r8, r2
   2be00:	bcs.n	2be0e <btrfs_abort_transaction@@Base+0x13a2>
   2be02:	ldrd	r0, r1, [sp, #40]	; 0x28
   2be06:	cmp	r3, r1
   2be08:	it	eq
   2be0a:	cmpeq	r2, r0
   2be0c:	bcs.n	2be8e <btrfs_abort_transaction@@Base+0x1422>
   2be0e:	ldrd	r2, r3, [sp, #24]
   2be12:	cmp	r9, r3
   2be14:	it	eq
   2be16:	cmpeq	r8, r2
   2be18:	bcc.n	2be2e <btrfs_abort_transaction@@Base+0x13c2>
   2be1a:	mov	r4, r3
   2be1c:	mov	r3, r2
   2be1e:	ldrd	r1, r2, [sp, #40]	; 0x28
   2be22:	cmp	r4, r2
   2be24:	it	eq
   2be26:	cmpeq	r3, r1
   2be28:	ite	cc
   2be2a:	movcc	r4, #1
   2be2c:	movcs	r4, #0
   2be2e:	ldr	r1, [pc, #160]	; (2bed0 <btrfs_abort_transaction@@Base+0x1464>)
   2be30:	mov	r3, r4
   2be32:	ldr	r0, [pc, #160]	; (2bed4 <btrfs_abort_transaction@@Base+0x1468>)
   2be34:	movw	r2, #905	; 0x389
   2be38:	add	r1, pc
   2be3a:	adds	r1, #123	; 0x7b
   2be3c:	add	r0, pc
   2be3e:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2be42:	ldrd	r3, r4, [sp, #24]
   2be46:	cmp	r4, r9
   2be48:	it	eq
   2be4a:	cmpeq	r3, r8
   2be4c:	bne.n	2bd6a <btrfs_abort_transaction@@Base+0x12fe>
   2be4e:	movs	r3, #1
   2be50:	mov	r2, r5
   2be52:	str	r3, [sp, #0]
   2be54:	mov	r1, sl
   2be56:	ldr	r3, [r5, #32]
   2be58:	mov	r0, r7
   2be5a:	bl	1aaec <btrfs_del_items@@Base>
   2be5e:	mov	r4, r0
   2be60:	cmp	r0, #0
   2be62:	bne.w	2baea <btrfs_abort_transaction@@Base+0x107e>
   2be66:	ldr.w	r3, [sp, #97]	; 0x61
   2be6a:	add.w	fp, fp, #4294967295	; 0xffffffff
   2be6e:	ldr.w	r1, [sp, #77]	; 0x4d
   2be72:	ldr.w	r2, [sp, #101]	; 0x65
   2be76:	ldr.w	r0, [sp, #81]	; 0x51
   2be7a:	adds	r3, r3, r1
   2be7c:	str.w	r3, [sp, #97]	; 0x61
   2be80:	adc.w	r2, r0, r2
   2be84:	str.w	r2, [sp, #101]	; 0x65
   2be88:	b.n	2bd6a <btrfs_abort_transaction@@Base+0x12fe>
   2be8a:	mov	r3, r4
   2be8c:	b.n	2bde4 <btrfs_abort_transaction@@Base+0x1378>
   2be8e:	movs	r4, #1
   2be90:	b.n	2be2e <btrfs_abort_transaction@@Base+0x13c2>
   2be92:	mov	r0, r4
   2be94:	add	sp, #116	; 0x74
   2be96:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2be9a:	nop
   2be9c:	strh	r6, [r1, #22]
   2be9e:	movs	r3, r0
   2bea0:	lsls	r0, r4, #8
   2bea2:	movs	r0, r0
   2bea4:	strh	r6, [r2, #20]
   2bea6:	movs	r3, r0
   2bea8:	add	pc, fp
   2beaa:	movs	r1, r0
   2beac:	sbcs	r0, r6
   2beae:	movs	r1, r0
   2beb0:	add	fp, r1
   2beb2:	movs	r1, r0
   2beb4:	sbcs	r0, r0
   2beb6:	movs	r1, r0
   2beb8:	add	r7, sl
   2beba:	movs	r1, r0
   2bebc:	sbcs	r6, r3
   2bebe:	movs	r1, r0
   2bec0:	ands	r6, r4
   2bec2:	movs	r1, r0
   2bec4:	muls	r1, r2
   2bec6:	movs	r1, r0
   2bec8:	cmn	r7, r0
   2beca:	movs	r1, r0
   2becc:	subs	r7, #188	; 0xbc
   2bece:	movs	r1, r0
   2bed0:	negs	r3, r7
   2bed2:	movs	r1, r0
   2bed4:	subs	r7, #236	; 0xec
   2bed6:	movs	r1, r0

0002bed8 <remove_from_free_space_tree@@Base>:
   2bed8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bedc:	sub	sp, #92	; 0x5c
   2bede:	movs	r4, #0
   2bee0:	mov	r6, r0
   2bee2:	strd	r2, r3, [sp, #24]
   2bee6:	ldrd	sl, r3, [sp, #128]	; 0x80
   2beea:	ldr	r2, [pc, #616]	; (2c154 <remove_from_free_space_tree@@Base+0x27c>)
   2beec:	str	r3, [sp, #52]	; 0x34
   2beee:	add	r2, pc
   2bef0:	ldr	r3, [pc, #612]	; (2c158 <remove_from_free_space_tree@@Base+0x280>)
   2bef2:	ldr	r3, [r2, r3]
   2bef4:	ldr	r3, [r3, #0]
   2bef6:	str	r3, [sp, #84]	; 0x54
   2bef8:	mov.w	r3, #0
   2befc:	ldr	r3, [r0, #0]
   2befe:	ldr.w	r3, [r3, #308]	; 0x134
   2bf02:	ldr.w	r1, [r3, #180]	; 0xb4
   2bf06:	mov	r3, r4
   2bf08:	and.w	r2, r1, #1
   2bf0c:	orrs	r3, r2
   2bf0e:	beq.w	2c0c2 <remove_from_free_space_tree@@Base+0x1ea>
   2bf12:	bl	17544 <btrfs_alloc_path@@Base>
   2bf16:	mov	r5, r0
   2bf18:	cmp	r0, #0
   2bf1a:	beq.w	2c146 <remove_from_free_space_tree@@Base+0x26e>
   2bf1e:	ldrd	r2, r3, [sp, #24]
   2bf22:	ldr	r0, [r6, #0]
   2bf24:	bl	1e5ac <btrfs_lookup_block_group@@Base>
   2bf28:	mov	r8, r0
   2bf2a:	cbnz	r0, 2bf3e <remove_from_free_space_tree@@Base+0x66>
   2bf2c:	ldr	r1, [pc, #556]	; (2c15c <remove_from_free_space_tree@@Base+0x284>)
   2bf2e:	movw	r2, #795	; 0x31b
   2bf32:	ldr	r0, [pc, #556]	; (2c160 <remove_from_free_space_tree@@Base+0x288>)
   2bf34:	add	r1, pc
   2bf36:	adds	r1, #145	; 0x91
   2bf38:	add	r0, pc
   2bf3a:	bl	2abf0 <btrfs_abort_transaction@@Base+0x184>
   2bf3e:	ldr	r1, [r6, #0]
   2bf40:	mov	r2, r0
   2bf42:	str	r4, [sp, #0]
   2bf44:	mov	r3, r5
   2bf46:	mov	r0, r4
   2bf48:	ldr	r1, [r1, #48]	; 0x30
   2bf4a:	bl	2aadc <btrfs_abort_transaction@@Base+0x70>
   2bf4e:	cmn.w	r0, #4096	; 0x1000
   2bf52:	bls.n	2bf58 <remove_from_free_space_tree@@Base+0x80>
   2bf54:	mov	r4, r0
   2bf56:	b.n	2c0b2 <remove_from_free_space_tree@@Base+0x1da>
   2bf58:	ldr	r4, [r5, #0]
   2bf5a:	add	r4, r0
   2bf5c:	mov	r0, r5
   2bf5e:	ldr	r4, [r4, #100]	; 0x64
   2bf60:	bl	1754c <btrfs_release_path@@Base>
   2bf64:	lsls	r0, r4, #31
   2bf66:	bpl.n	2bf88 <remove_from_free_space_tree@@Base+0xb0>
   2bf68:	movs	r3, #1
   2bf6a:	str	r3, [sp, #16]
   2bf6c:	ldr	r3, [sp, #52]	; 0x34
   2bf6e:	mov	r2, r5
   2bf70:	mov	r1, r8
   2bf72:	mov	r0, r6
   2bf74:	str.w	sl, [sp, #8]
   2bf78:	str	r3, [sp, #12]
   2bf7a:	ldrd	r3, r4, [sp, #24]
   2bf7e:	strd	r3, r4, [sp]
   2bf82:	bl	2b6fc <btrfs_abort_transaction@@Base+0xc90>
   2bf86:	b.n	2bf54 <remove_from_free_space_tree@@Base+0x7c>
   2bf88:	ldr	r3, [r6, #0]
   2bf8a:	add.w	r7, sp, #73	; 0x49
   2bf8e:	add.w	fp, sp, #64	; 0x40
   2bf92:	mov.w	r2, #4294967295	; 0xffffffff
   2bf96:	mov	r0, r6
   2bf98:	strb.w	r2, [sp, #73]	; 0x49
   2bf9c:	ldr.w	r9, [r3, #48]	; 0x30
   2bfa0:	ldrd	r3, r4, [sp, #24]
   2bfa4:	mov	r1, r9
   2bfa6:	strd	r3, r4, [sp, #64]	; 0x40
   2bfaa:	movs	r3, #255	; 0xff
   2bfac:	strb	r3, [r7, #1]
   2bfae:	strb	r3, [r7, #2]
   2bfb0:	strb	r3, [r7, #3]
   2bfb2:	strb	r3, [r7, #4]
   2bfb4:	strb	r3, [r7, #5]
   2bfb6:	strb	r3, [r7, #6]
   2bfb8:	strb	r3, [r7, #7]
   2bfba:	strb.w	r3, [sp, #72]	; 0x48
   2bfbe:	mov	r3, r5
   2bfc0:	str	r2, [sp, #0]
   2bfc2:	mov	r2, fp
   2bfc4:	bl	2ad4c <btrfs_abort_transaction@@Base+0x2e0>
   2bfc8:	mov	r4, r0
   2bfca:	cmp	r0, #0
   2bfcc:	bne.n	2c0b2 <remove_from_free_space_tree@@Base+0x1da>
   2bfce:	ldr	r3, [sp, #24]
   2bfd0:	mov	r1, fp
   2bfd2:	ldr	r2, [sp, #28]
   2bfd4:	adds.w	r3, r3, sl
   2bfd8:	str	r3, [sp, #32]
   2bfda:	ldr	r3, [sp, #52]	; 0x34
   2bfdc:	ldr	r0, [r5, #0]
   2bfde:	adc.w	r3, r2, r3
   2bfe2:	ldr	r2, [r5, #32]
   2bfe4:	str	r3, [sp, #36]	; 0x24
   2bfe6:	bl	2aa74 <btrfs_abort_transaction@@Base+0x8>
   2bfea:	ldrb.w	r3, [sp, #72]	; 0x48
   2bfee:	movw	r2, #691	; 0x2b3
   2bff2:	ldr	r0, [pc, #368]	; (2c164 <remove_from_free_space_tree@@Base+0x28c>)
   2bff4:	sub.w	r1, r3, #199	; 0xc7
   2bff8:	negs	r3, r1
   2bffa:	add	r0, pc
   2bffc:	adcs	r3, r1
   2bffe:	ldr	r1, [pc, #360]	; (2c168 <remove_from_free_space_tree@@Base+0x290>)
   2c000:	add	r1, pc
   2c002:	adds	r1, #173	; 0xad
   2c004:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2c008:	ldrd	sl, fp, [sp, #64]	; 0x40
   2c00c:	ldr.w	r3, [sp, #73]	; 0x49
   2c010:	ldr.w	r2, [sp, #77]	; 0x4d
   2c014:	adds.w	r3, r3, sl
   2c018:	str	r3, [sp, #40]	; 0x28
   2c01a:	adc.w	r3, r2, fp
   2c01e:	str	r3, [sp, #44]	; 0x2c
   2c020:	ldrd	r2, r3, [sp, #24]
   2c024:	cmp	r3, fp
   2c026:	it	eq
   2c028:	cmpeq	r2, sl
   2c02a:	bcc.n	2c040 <remove_from_free_space_tree@@Base+0x168>
   2c02c:	ldrd	r3, r4, [sp, #40]	; 0x28
   2c030:	ldrd	r1, r2, [sp, #32]
   2c034:	cmp	r4, r2
   2c036:	it	eq
   2c038:	cmpeq	r3, r1
   2c03a:	ite	cs
   2c03c:	movcs	r4, #1
   2c03e:	movcc	r4, #0
   2c040:	ldr	r1, [pc, #296]	; (2c16c <remove_from_free_space_tree@@Base+0x294>)
   2c042:	mov	r3, r4
   2c044:	ldr	r0, [pc, #296]	; (2c170 <remove_from_free_space_tree@@Base+0x298>)
   2c046:	movw	r2, #695	; 0x2b7
   2c04a:	add	r1, pc
   2c04c:	adds	r1, #173	; 0xad
   2c04e:	add	r0, pc
   2c050:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2c054:	movs	r3, #1
   2c056:	mov	r2, r5
   2c058:	str	r3, [sp, #0]
   2c05a:	mov	r1, r9
   2c05c:	ldr	r3, [r5, #32]
   2c05e:	mov	r0, r6
   2c060:	bl	1aaec <btrfs_del_items@@Base>
   2c064:	mov	r4, r0
   2c066:	cbnz	r0, 2c0b2 <remove_from_free_space_tree@@Base+0x1da>
   2c068:	ldrd	r2, r3, [sp, #24]
   2c06c:	cmp	fp, r3
   2c06e:	it	eq
   2c070:	cmpeq	sl, r2
   2c072:	bcs.n	2c0d6 <remove_from_free_space_tree@@Base+0x1fe>
   2c074:	movs	r3, #199	; 0xc7
   2c076:	strb.w	r3, [sp, #72]	; 0x48
   2c07a:	ldr	r3, [sp, #24]
   2c07c:	mov	r0, r5
   2c07e:	strd	sl, fp, [sp, #64]	; 0x40
   2c082:	subs.w	r2, r3, sl
   2c086:	ldr	r3, [sp, #28]
   2c088:	str.w	r2, [sp, #73]	; 0x49
   2c08c:	sbc.w	r3, r3, fp
   2c090:	str.w	r3, [sp, #77]	; 0x4d
   2c094:	bl	1754c <btrfs_release_path@@Base>
   2c098:	movs	r3, #1
   2c09a:	mov	r2, r5
   2c09c:	str	r3, [sp, #4]
   2c09e:	mov	r1, r9
   2c0a0:	add	r3, sp, #60	; 0x3c
   2c0a2:	mov	r0, r6
   2c0a4:	str	r3, [sp, #0]
   2c0a6:	add	r3, sp, #64	; 0x40
   2c0a8:	str	r4, [sp, #60]	; 0x3c
   2c0aa:	bl	1a700 <btrfs_insert_empty_items@@Base>
   2c0ae:	mov	r4, r0
   2c0b0:	cbz	r0, 2c0da <remove_from_free_space_tree@@Base+0x202>
   2c0b2:	mov	r0, r5
   2c0b4:	bl	17572 <btrfs_free_path@@Base>
   2c0b8:	cbz	r4, 2c0c2 <remove_from_free_space_tree@@Base+0x1ea>
   2c0ba:	mov	r1, r4
   2c0bc:	mov	r0, r6
   2c0be:	bl	2aa6c <btrfs_abort_transaction@@Base>
   2c0c2:	ldr	r2, [pc, #176]	; (2c174 <remove_from_free_space_tree@@Base+0x29c>)
   2c0c4:	ldr	r3, [pc, #144]	; (2c158 <remove_from_free_space_tree@@Base+0x280>)
   2c0c6:	add	r2, pc
   2c0c8:	ldr	r3, [r2, r3]
   2c0ca:	ldr	r2, [r3, #0]
   2c0cc:	ldr	r3, [sp, #84]	; 0x54
   2c0ce:	eors	r2, r3
   2c0d0:	beq.n	2c14c <remove_from_free_space_tree@@Base+0x274>
   2c0d2:	blx	8510 <__stack_chk_fail@plt>
   2c0d6:	mov.w	r4, #4294967295	; 0xffffffff
   2c0da:	ldrd	r2, r3, [sp, #32]
   2c0de:	ldrd	r0, r1, [sp, #40]	; 0x28
   2c0e2:	cmp	r3, r1
   2c0e4:	it	eq
   2c0e6:	cmpeq	r2, r0
   2c0e8:	bcs.n	2c12e <remove_from_free_space_tree@@Base+0x256>
   2c0ea:	strd	r2, r3, [sp, #64]	; 0x40
   2c0ee:	movs	r3, #199	; 0xc7
   2c0f0:	ldr	r2, [sp, #32]
   2c0f2:	mov	r0, r5
   2c0f4:	strb.w	r3, [sp, #72]	; 0x48
   2c0f8:	ldr	r3, [sp, #40]	; 0x28
   2c0fa:	ldr	r1, [sp, #36]	; 0x24
   2c0fc:	subs	r2, r3, r2
   2c0fe:	ldr	r3, [sp, #44]	; 0x2c
   2c100:	str.w	r2, [sp, #73]	; 0x49
   2c104:	sbc.w	r3, r3, r1
   2c108:	str	r3, [r7, #4]
   2c10a:	bl	1754c <btrfs_release_path@@Base>
   2c10e:	movs	r3, #0
   2c110:	mov	r2, r5
   2c112:	str	r3, [sp, #60]	; 0x3c
   2c114:	mov	r1, r9
   2c116:	movs	r3, #1
   2c118:	mov	r0, r6
   2c11a:	str	r3, [sp, #4]
   2c11c:	add	r3, sp, #60	; 0x3c
   2c11e:	str	r3, [sp, #0]
   2c120:	add	r3, sp, #64	; 0x40
   2c122:	bl	1a700 <btrfs_insert_empty_items@@Base>
   2c126:	cmp	r0, #0
   2c128:	bne.w	2bf54 <remove_from_free_space_tree@@Base+0x7c>
   2c12c:	adds	r4, #1
   2c12e:	mov	r0, r5
   2c130:	bl	1754c <btrfs_release_path@@Base>
   2c134:	cmp	r4, #0
   2c136:	beq.n	2c0b2 <remove_from_free_space_tree@@Base+0x1da>
   2c138:	mov	r3, r4
   2c13a:	mov	r2, r5
   2c13c:	mov	r1, r8
   2c13e:	mov	r0, r6
   2c140:	bl	2ae50 <btrfs_abort_transaction@@Base+0x3e4>
   2c144:	b.n	2bf54 <remove_from_free_space_tree@@Base+0x7c>
   2c146:	mvn.w	r4, #11
   2c14a:	b.n	2c0b2 <remove_from_free_space_tree@@Base+0x1da>
   2c14c:	mov	r0, r4
   2c14e:	add	sp, #92	; 0x5c
   2c150:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c154:	ldrb	r6, [r2, #26]
   2c156:	movs	r3, r0
   2c158:	lsls	r0, r4, #8
   2c15a:	movs	r0, r0
   2c15c:	adcs	r7, r7
   2c15e:	movs	r1, r0
   2c160:	stc2	0, cr0, [sl, #-0]
   2c164:	subs	r6, #133	; 0x85
   2c166:	movs	r1, r0
   2c168:	lsls	r3, r6
   2c16a:	movs	r1, r0
   2c16c:	eors	r1, r5
   2c16e:	movs	r1, r0
   2c170:	subs	r6, #89	; 0x59
   2c172:	movs	r1, r0
   2c174:	ldrb	r6, [r7, #18]
   2c176:	movs	r3, r0

0002c178 <add_to_free_space_tree@@Base>:
   2c178:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   2c17c:	mov	r7, r3
   2c17e:	ldr	r3, [r0, #0]
   2c180:	mov	sl, r2
   2c182:	movs	r4, #0
   2c184:	mov	r5, r0
   2c186:	ldr.w	r3, [r3, #308]	; 0x134
   2c18a:	ldr.w	r1, [r3, #180]	; 0xb4
   2c18e:	mov	r3, r4
   2c190:	and.w	r2, r1, #1
   2c194:	orrs	r3, r2
   2c196:	beq.n	2c1e6 <add_to_free_space_tree@@Base+0x6e>
   2c198:	bl	17544 <btrfs_alloc_path@@Base>
   2c19c:	mov	r6, r0
   2c19e:	cbz	r0, 2c1ee <add_to_free_space_tree@@Base+0x76>
   2c1a0:	ldr	r0, [r5, #0]
   2c1a2:	mov	r2, sl
   2c1a4:	mov	r3, r7
   2c1a6:	bl	1e5ac <btrfs_lookup_block_group@@Base>
   2c1aa:	mov	r1, r0
   2c1ac:	cbnz	r0, 2c1c0 <add_to_free_space_tree@@Base+0x48>
   2c1ae:	ldr	r1, [pc, #68]	; (2c1f4 <add_to_free_space_tree@@Base+0x7c>)
   2c1b0:	mov.w	r2, #976	; 0x3d0
   2c1b4:	ldr	r0, [pc, #64]	; (2c1f8 <add_to_free_space_tree@@Base+0x80>)
   2c1b6:	add	r1, pc
   2c1b8:	adds	r1, #198	; 0xc6
   2c1ba:	add	r0, pc
   2c1bc:	bl	2abf0 <btrfs_abort_transaction@@Base+0x184>
   2c1c0:	ldrd	r8, r9, [sp, #48]	; 0x30
   2c1c4:	mov	r2, r6
   2c1c6:	mov	r0, r5
   2c1c8:	strd	sl, r7, [sp]
   2c1cc:	strd	r8, r9, [sp, #8]
   2c1d0:	bl	2baa8 <btrfs_abort_transaction@@Base+0x103c>
   2c1d4:	mov	r4, r0
   2c1d6:	mov	r0, r6
   2c1d8:	bl	17572 <btrfs_free_path@@Base>
   2c1dc:	cbz	r4, 2c1e6 <add_to_free_space_tree@@Base+0x6e>
   2c1de:	mov	r1, r4
   2c1e0:	mov	r0, r5
   2c1e2:	bl	2aa6c <btrfs_abort_transaction@@Base>
   2c1e6:	mov	r0, r4
   2c1e8:	add	sp, #16
   2c1ea:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   2c1ee:	mvn.w	r4, #11
   2c1f2:	b.n	2c1d6 <add_to_free_space_tree@@Base+0x5e>
   2c1f4:	subs	r6, #253	; 0xfd
   2c1f6:	movs	r1, r0
   2c1f8:			; <UNDEFINED> instruction: 0xfa880000

0002c1fc <populate_free_space_tree@@Base>:
   2c1fc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c200:	mov	r9, r0
   2c202:	vpush	{d8}
   2c206:	mov	r5, r1
   2c208:	ldr	r2, [pc, #544]	; (2c42c <populate_free_space_tree@@Base+0x230>)
   2c20a:	ldr	r3, [pc, #548]	; (2c430 <populate_free_space_tree@@Base+0x234>)
   2c20c:	add	r2, pc
   2c20e:	sub	sp, #60	; 0x3c
   2c210:	ldr	r3, [r2, r3]
   2c212:	ldr	r3, [r3, #0]
   2c214:	str	r3, [sp, #52]	; 0x34
   2c216:	mov.w	r3, #0
   2c21a:	ldr	r3, [r0, #0]
   2c21c:	ldr	r3, [r3, #24]
   2c21e:	vmov	s17, r3
   2c222:	bl	17544 <btrfs_alloc_path@@Base>
   2c226:	mov	r7, r0
   2c228:	cbz	r0, 2c23e <populate_free_space_tree@@Base+0x42>
   2c22a:	movs	r3, #2
   2c22c:	strb.w	r3, [r0, #64]	; 0x40
   2c230:	bl	17544 <btrfs_alloc_path@@Base>
   2c234:	mov	r8, r0
   2c236:	cbnz	r0, 2c244 <populate_free_space_tree@@Base+0x48>
   2c238:	mov	r0, r7
   2c23a:	bl	17572 <btrfs_free_path@@Base>
   2c23e:	mvn.w	r4, #11
   2c242:	b.n	2c3ba <populate_free_space_tree@@Base+0x1be>
   2c244:	ldr.w	r3, [r9]
   2c248:	add.w	r6, sp, #41	; 0x29
   2c24c:	ldr	r1, [r3, #48]	; 0x30
   2c24e:	ldrd	r2, r3, [r5, #40]	; 0x28
   2c252:	strd	r2, r3, [sp, #32]
   2c256:	movs	r3, #198	; 0xc6
   2c258:	strb.w	r3, [sp, #40]	; 0x28
   2c25c:	ldr.w	r3, [r5, #53]	; 0x35
   2c260:	ldr.w	r2, [r5, #49]	; 0x31
   2c264:	str.w	r3, [sp, #45]	; 0x2d
   2c268:	movs	r3, #8
   2c26a:	str	r3, [sp, #28]
   2c26c:	add	r3, sp, #32
   2c26e:	str.w	r2, [sp, #41]	; 0x29
   2c272:	mov	r2, r0
   2c274:	vmov	s16, r3
   2c278:	mov	r0, r9
   2c27a:	movs	r3, #1
   2c27c:	str	r3, [sp, #4]
   2c27e:	add	r3, sp, #28
   2c280:	str	r3, [sp, #0]
   2c282:	vmov	r3, s16
   2c286:	bl	1a700 <btrfs_insert_empty_items@@Base>
   2c28a:	mov	r4, r0
   2c28c:	cbnz	r0, 2c2bc <populate_free_space_tree@@Base+0xc0>
   2c28e:	ldr.w	r0, [r8]
   2c292:	movs	r2, #25
   2c294:	ldr.w	r3, [r8, #32]
   2c298:	add.w	r1, r0, #96	; 0x60
   2c29c:	mla	r3, r2, r3, r1
   2c2a0:	ldr.w	r2, [r3, #118]	; 0x76
   2c2a4:	adds	r2, #101	; 0x65
   2c2a6:	adds	r3, r1, r2
   2c2a8:	strb	r4, [r1, r2]
   2c2aa:	strb	r4, [r3, #1]
   2c2ac:	strb	r4, [r3, #2]
   2c2ae:	strb	r4, [r3, #3]
   2c2b0:	strb	r4, [r3, #4]
   2c2b2:	strb	r4, [r3, #5]
   2c2b4:	strb	r4, [r3, #6]
   2c2b6:	strb	r4, [r3, #7]
   2c2b8:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   2c2bc:	mov	r0, r8
   2c2be:	bl	1754c <btrfs_release_path@@Base>
   2c2c2:	cmp	r4, #0
   2c2c4:	bne.n	2c3ae <populate_free_space_tree@@Base+0x1b2>
   2c2c6:	ldrd	r2, r3, [r5, #40]	; 0x28
   2c2ca:	strb	r4, [r6, #1]
   2c2cc:	strb	r4, [r6, #2]
   2c2ce:	strd	r2, r3, [sp, #32]
   2c2d2:	movs	r3, #168	; 0xa8
   2c2d4:	strb	r4, [r6, #3]
   2c2d6:	mov	r2, r7
   2c2d8:	strb.w	r3, [sp, #40]	; 0x28
   2c2dc:	movs	r3, #1
   2c2de:	strb	r4, [r6, #4]
   2c2e0:	strb	r4, [r6, #5]
   2c2e2:	strb	r4, [r6, #6]
   2c2e4:	strb	r4, [r6, #7]
   2c2e6:	vmov	r1, s16
   2c2ea:	vmov	r0, s17
   2c2ee:	str	r4, [sp, #0]
   2c2f0:	strb.w	r4, [sp, #41]	; 0x29
   2c2f4:	bl	1af40 <btrfs_search_slot_for_read@@Base>
   2c2f8:	cmp	r0, #0
   2c2fa:	blt.n	2c3ac <populate_free_space_tree@@Base+0x1b0>
   2c2fc:	ldr	r1, [pc, #308]	; (2c434 <populate_free_space_tree@@Base+0x238>)
   2c2fe:	it	eq
   2c300:	moveq	r3, #1
   2c302:	ldr	r0, [pc, #308]	; (2c438 <populate_free_space_tree@@Base+0x23c>)
   2c304:	it	ne
   2c306:	movne	r3, #0
   2c308:	add	r1, pc
   2c30a:	movw	r2, #1027	; 0x403
   2c30e:	adds	r1, #221	; 0xdd
   2c310:	add	r0, pc
   2c312:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2c316:	ldrd	sl, fp, [r5, #40]	; 0x28
   2c31a:	ldr.w	r3, [r5, #49]	; 0x31
   2c31e:	ldr.w	r2, [r5, #53]	; 0x35
   2c322:	adds.w	r3, r3, sl
   2c326:	str	r3, [sp, #16]
   2c328:	adc.w	r3, r2, fp
   2c32c:	str	r3, [sp, #20]
   2c32e:	ldr	r2, [r7, #32]
   2c330:	vmov	r1, s16
   2c334:	ldr	r0, [r7, #0]
   2c336:	bl	2aa74 <btrfs_abort_transaction@@Base+0x8>
   2c33a:	ldrb.w	r2, [sp, #40]	; 0x28
   2c33e:	add.w	r3, r2, #88	; 0x58
   2c342:	uxtb	r3, r3
   2c344:	cmp	r3, #1
   2c346:	bhi.n	2c3e0 <populate_free_space_tree@@Base+0x1e4>
   2c348:	ldrd	r0, r1, [sp, #32]
   2c34c:	ldrd	r2, r3, [sp, #16]
   2c350:	cmp	r1, r3
   2c352:	it	eq
   2c354:	cmpeq	r0, r2
   2c356:	bcs.n	2c3f4 <populate_free_space_tree@@Base+0x1f8>
   2c358:	cmp	fp, r1
   2c35a:	it	eq
   2c35c:	cmpeq	sl, r0
   2c35e:	bcc.n	2c38e <populate_free_space_tree@@Base+0x192>
   2c360:	ldrb.w	r1, [sp, #40]	; 0x28
   2c364:	ldrd	r2, r3, [sp, #32]
   2c368:	cmp	r1, #169	; 0xa9
   2c36a:	bne.n	2c3ce <populate_free_space_tree@@Base+0x1d2>
   2c36c:	ldr.w	r1, [r9]
   2c370:	ldr.w	r1, [r1, #384]	; 0x180
   2c374:	adds.w	sl, r2, r1
   2c378:	adc.w	fp, r3, #0
   2c37c:	vmov	r0, s17
   2c380:	mov	r1, r7
   2c382:	bl	2ab60 <btrfs_abort_transaction@@Base+0xf4>
   2c386:	cmp	r0, #0
   2c388:	blt.n	2c3ac <populate_free_space_tree@@Base+0x1b0>
   2c38a:	beq.n	2c32e <populate_free_space_tree@@Base+0x132>
   2c38c:	b.n	2c3f4 <populate_free_space_tree@@Base+0x1f8>
   2c38e:	subs.w	r2, r0, sl
   2c392:	strd	sl, fp, [sp]
   2c396:	sbc.w	r3, r1, fp
   2c39a:	mov	r0, r9
   2c39c:	strd	r2, r3, [sp, #8]
   2c3a0:	mov	r1, r5
   2c3a2:	mov	r2, r8
   2c3a4:	bl	2baa8 <btrfs_abort_transaction@@Base+0x103c>
   2c3a8:	cmp	r0, #0
   2c3aa:	beq.n	2c360 <populate_free_space_tree@@Base+0x164>
   2c3ac:	mov	r4, r0
   2c3ae:	mov	r0, r8
   2c3b0:	bl	17572 <btrfs_free_path@@Base>
   2c3b4:	mov	r0, r7
   2c3b6:	bl	17572 <btrfs_free_path@@Base>
   2c3ba:	ldr	r2, [pc, #128]	; (2c43c <populate_free_space_tree@@Base+0x240>)
   2c3bc:	ldr	r3, [pc, #112]	; (2c430 <populate_free_space_tree@@Base+0x234>)
   2c3be:	add	r2, pc
   2c3c0:	ldr	r3, [r2, r3]
   2c3c2:	ldr	r2, [r3, #0]
   2c3c4:	ldr	r3, [sp, #52]	; 0x34
   2c3c6:	eors	r2, r3
   2c3c8:	beq.n	2c420 <populate_free_space_tree@@Base+0x224>
   2c3ca:	blx	8510 <__stack_chk_fail@plt>
   2c3ce:	ldr.w	r1, [sp, #41]	; 0x29
   2c3d2:	ldr.w	r0, [sp, #45]	; 0x2d
   2c3d6:	adds.w	sl, r1, r2
   2c3da:	adc.w	fp, r0, r3
   2c3de:	b.n	2c37c <populate_free_space_tree@@Base+0x180>
   2c3e0:	cmp	r2, #192	; 0xc0
   2c3e2:	bne.n	2c37c <populate_free_space_tree@@Base+0x180>
   2c3e4:	ldrd	r2, r3, [r5, #40]	; 0x28
   2c3e8:	ldrd	r0, r1, [sp, #32]
   2c3ec:	cmp	r1, r3
   2c3ee:	it	eq
   2c3f0:	cmpeq	r0, r2
   2c3f2:	beq.n	2c37c <populate_free_space_tree@@Base+0x180>
   2c3f4:	ldrd	r2, r3, [sp, #16]
   2c3f8:	cmp	fp, r3
   2c3fa:	it	eq
   2c3fc:	cmpeq	sl, r2
   2c3fe:	bcs.n	2c3ae <populate_free_space_tree@@Base+0x1b2>
   2c400:	ldr	r3, [sp, #16]
   2c402:	mov	r1, r5
   2c404:	mov	r0, r9
   2c406:	strd	sl, fp, [sp]
   2c40a:	subs.w	r2, r3, sl
   2c40e:	ldr	r3, [sp, #20]
   2c410:	sbc.w	r3, r3, fp
   2c414:	strd	r2, r3, [sp, #8]
   2c418:	mov	r2, r8
   2c41a:	bl	2baa8 <btrfs_abort_transaction@@Base+0x103c>
   2c41e:	b.n	2c3ac <populate_free_space_tree@@Base+0x1b0>
   2c420:	mov	r0, r4
   2c422:	add	sp, #60	; 0x3c
   2c424:	vpop	{d8}
   2c428:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c42c:	ldrb	r0, [r7, #13]
   2c42e:	movs	r3, r0
   2c430:	lsls	r0, r4, #8
   2c432:	movs	r0, r0
   2c434:	subs	r5, #171	; 0xab
   2c436:	movs	r1, r0
   2c438:	bvc.n	2c4a2 <remove_block_group_free_space@@Base+0x62>
   2c43a:	movs	r0, r0
   2c43c:	ldrb	r6, [r0, #7]
   2c43e:	movs	r3, r0

0002c440 <remove_block_group_free_space@@Base>:
   2c440:	ldr	r2, [pc, #536]	; (2c65c <remove_block_group_free_space@@Base+0x21c>)
   2c442:	ldr	r3, [pc, #540]	; (2c660 <remove_block_group_free_space@@Base+0x220>)
   2c444:	add	r2, pc
   2c446:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c44a:	sub	sp, #92	; 0x5c
   2c44c:	ldr	r3, [r2, r3]
   2c44e:	mov	r9, r0
   2c450:	mov	r8, r1
   2c452:	ldr	r3, [r3, #0]
   2c454:	str	r3, [sp, #84]	; 0x54
   2c456:	mov.w	r3, #0
   2c45a:	ldr	r3, [r0, #0]
   2c45c:	ldr.w	fp, [r3, #48]	; 0x30
   2c460:	bl	17544 <btrfs_alloc_path@@Base>
   2c464:	mov	r5, r0
   2c466:	cmp	r0, #0
   2c468:	beq.w	2c64e <remove_block_group_free_space@@Base+0x20e>
   2c46c:	ldrd	r3, r4, [r8, #40]	; 0x28
   2c470:	ldr.w	r2, [r8, #53]	; 0x35
   2c474:	ldr.w	sl, [pc, #492]	; 2c664 <remove_block_group_free_space@@Base+0x224>
   2c478:	strd	r3, r4, [sp, #24]
   2c47c:	ldr	r1, [sp, #24]
   2c47e:	add	sl, pc
   2c480:	ldr.w	r3, [r8, #49]	; 0x31
   2c484:	add.w	sl, sl, #246	; 0xf6
   2c488:	adds	r3, r3, r1
   2c48a:	str	r3, [sp, #8]
   2c48c:	ldr	r3, [sp, #28]
   2c48e:	adc.w	r3, r2, r3
   2c492:	str	r3, [sp, #12]
   2c494:	ldr	r3, [sp, #8]
   2c496:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2c49a:	ldr	r3, [sp, #12]
   2c49c:	adc.w	r3, r3, #4294967295	; 0xffffffff
   2c4a0:	strd	r2, r3, [sp, #44]	; 0x2c
   2c4a4:	movs	r2, #255	; 0xff
   2c4a6:	strb.w	r2, [sp, #52]	; 0x34
   2c4aa:	strb.w	r2, [sp, #53]	; 0x35
   2c4ae:	strb.w	r2, [sp, #54]	; 0x36
   2c4b2:	strb.w	r2, [sp, #55]	; 0x37
   2c4b6:	strb.w	r2, [sp, #56]	; 0x38
   2c4ba:	strb.w	r2, [sp, #57]	; 0x39
   2c4be:	strb.w	r2, [sp, #58]	; 0x3a
   2c4c2:	strb.w	r2, [sp, #59]	; 0x3b
   2c4c6:	strb.w	r2, [sp, #60]	; 0x3c
   2c4ca:	mov.w	r3, #4294967295	; 0xffffffff
   2c4ce:	add	r2, sp, #44	; 0x2c
   2c4d0:	str	r3, [sp, #0]
   2c4d2:	mov	r1, fp
   2c4d4:	mov	r3, r5
   2c4d6:	mov	r0, r9
   2c4d8:	bl	2ad4c <btrfs_abort_transaction@@Base+0x2e0>
   2c4dc:	mov	r4, r0
   2c4de:	cmp	r0, #0
   2c4e0:	bne.n	2c588 <remove_block_group_free_space@@Base+0x148>
   2c4e2:	ldr	r7, [pc, #388]	; (2c668 <remove_block_group_free_space@@Base+0x228>)
   2c4e4:	ldr	r6, [r5, #0]
   2c4e6:	ldr	r3, [r5, #32]
   2c4e8:	add	r7, pc
   2c4ea:	adds	r3, #1
   2c4ec:	str	r3, [r5, #32]
   2c4ee:	ldr	r2, [r5, #32]
   2c4f0:	cmp	r2, #0
   2c4f2:	bgt.n	2c4f8 <remove_block_group_free_space@@Base+0xb8>
   2c4f4:	movs	r6, #0
   2c4f6:	b.n	2c56c <remove_block_group_free_space@@Base+0x12c>
   2c4f8:	subs	r2, #1
   2c4fa:	add	r1, sp, #64	; 0x40
   2c4fc:	mov	r0, r6
   2c4fe:	bl	2aa74 <btrfs_abort_transaction@@Base+0x8>
   2c502:	ldrb.w	r3, [sp, #72]	; 0x48
   2c506:	cmp	r3, #198	; 0xc6
   2c508:	bne.n	2c5ac <remove_block_group_free_space@@Base+0x16c>
   2c50a:	ldrd	r2, r3, [r8, #40]	; 0x28
   2c50e:	adds	r4, #1
   2c510:	ldrd	r6, r7, [sp, #64]	; 0x40
   2c514:	ldr	r0, [pc, #340]	; (2c66c <remove_block_group_free_space@@Base+0x22c>)
   2c516:	cmp	r7, r3
   2c518:	it	eq
   2c51a:	cmpeq	r6, r2
   2c51c:	ldr	r6, [pc, #336]	; (2c670 <remove_block_group_free_space@@Base+0x230>)
   2c51e:	add	r0, pc
   2c520:	mov.w	r2, #1112	; 0x458
   2c524:	add	r6, pc
   2c526:	it	eq
   2c528:	moveq	r3, #1
   2c52a:	add.w	r6, r6, #246	; 0xf6
   2c52e:	it	ne
   2c530:	movne	r3, #0
   2c532:	mov	r1, r6
   2c534:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2c538:	ldr.w	r3, [r8, #53]	; 0x35
   2c53c:	ldr.w	r1, [sp, #77]	; 0x4d
   2c540:	ldr.w	r0, [sp, #73]	; 0x49
   2c544:	ldr.w	r2, [r8, #49]	; 0x31
   2c548:	cmp	r1, r3
   2c54a:	mov	r1, r6
   2c54c:	mov.w	r6, #1
   2c550:	it	eq
   2c552:	cmpeq	r0, r2
   2c554:	ldr	r0, [pc, #284]	; (2c674 <remove_block_group_free_space@@Base+0x234>)
   2c556:	movw	r2, #1113	; 0x459
   2c55a:	ite	eq
   2c55c:	moveq	r3, #1
   2c55e:	movne	r3, #0
   2c560:	add	r0, pc
   2c562:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2c566:	ldr	r3, [r5, #32]
   2c568:	subs	r3, #1
   2c56a:	str	r3, [r5, #32]
   2c56c:	str	r4, [sp, #0]
   2c56e:	mov	r2, r5
   2c570:	ldr	r3, [r5, #32]
   2c572:	mov	r1, fp
   2c574:	mov	r0, r9
   2c576:	bl	1aaec <btrfs_del_items@@Base>
   2c57a:	mov	r4, r0
   2c57c:	cbnz	r0, 2c588 <remove_block_group_free_space@@Base+0x148>
   2c57e:	mov	r0, r5
   2c580:	bl	1754c <btrfs_release_path@@Base>
   2c584:	cmp	r6, #0
   2c586:	beq.n	2c4ca <remove_block_group_free_space@@Base+0x8a>
   2c588:	mov	r0, r5
   2c58a:	bl	17572 <btrfs_free_path@@Base>
   2c58e:	cbz	r4, 2c598 <remove_block_group_free_space@@Base+0x158>
   2c590:	mov	r1, r4
   2c592:	mov	r0, r9
   2c594:	bl	2aa6c <btrfs_abort_transaction@@Base>
   2c598:	ldr	r2, [pc, #220]	; (2c678 <remove_block_group_free_space@@Base+0x238>)
   2c59a:	ldr	r3, [pc, #196]	; (2c660 <remove_block_group_free_space@@Base+0x220>)
   2c59c:	add	r2, pc
   2c59e:	ldr	r3, [r2, r3]
   2c5a0:	ldr	r2, [r3, #0]
   2c5a2:	ldr	r3, [sp, #84]	; 0x54
   2c5a4:	eors	r2, r3
   2c5a6:	beq.n	2c654 <remove_block_group_free_space@@Base+0x214>
   2c5a8:	blx	8510 <__stack_chk_fail@plt>
   2c5ac:	adds	r3, #57	; 0x39
   2c5ae:	uxtb	r3, r3
   2c5b0:	cmp	r3, #1
   2c5b2:	bhi.n	2c63c <remove_block_group_free_space@@Base+0x1fc>
   2c5b4:	ldrd	r2, r3, [sp, #64]	; 0x40
   2c5b8:	adds	r4, #1
   2c5ba:	ldrd	r0, r1, [sp, #24]
   2c5be:	cmp	r3, r1
   2c5c0:	strd	r2, r3, [sp, #16]
   2c5c4:	it	eq
   2c5c6:	cmpeq	r2, r0
   2c5c8:	mov	r1, sl
   2c5ca:	mov.w	r2, #1120	; 0x460
   2c5ce:	mov	r0, r7
   2c5d0:	ite	cs
   2c5d2:	movcs	r3, #1
   2c5d4:	movcc	r3, #0
   2c5d6:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2c5da:	ldrd	r2, r3, [sp, #16]
   2c5de:	ldrd	r0, r1, [sp, #8]
   2c5e2:	cmp	r3, r1
   2c5e4:	mov	r1, sl
   2c5e6:	it	eq
   2c5e8:	cmpeq	r2, r0
   2c5ea:	ldr	r0, [pc, #144]	; (2c67c <remove_block_group_free_space@@Base+0x23c>)
   2c5ec:	movw	r2, #1121	; 0x461
   2c5f0:	ite	cc
   2c5f2:	movcc	r3, #1
   2c5f4:	movcs	r3, #0
   2c5f6:	add	r0, pc
   2c5f8:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2c5fc:	ldr.w	r3, [sp, #73]	; 0x49
   2c600:	ldr	r1, [sp, #16]
   2c602:	ldr.w	r2, [sp, #77]	; 0x4d
   2c606:	adds	r3, r3, r1
   2c608:	str	r3, [sp, #32]
   2c60a:	ldr	r3, [sp, #20]
   2c60c:	adc.w	r3, r2, r3
   2c610:	str	r3, [sp, #36]	; 0x24
   2c612:	ldrd	r0, r1, [sp, #32]
   2c616:	ldrd	r2, r3, [sp, #8]
   2c61a:	cmp	r3, r1
   2c61c:	mov	r1, sl
   2c61e:	it	eq
   2c620:	cmpeq	r2, r0
   2c622:	ldr	r0, [pc, #92]	; (2c680 <remove_block_group_free_space@@Base+0x240>)
   2c624:	movw	r2, #1122	; 0x462
   2c628:	ite	cs
   2c62a:	movcs	r3, #1
   2c62c:	movcc	r3, #0
   2c62e:	add	r0, pc
   2c630:	bl	2ac5c <btrfs_abort_transaction@@Base+0x1f0>
   2c634:	ldr	r3, [r5, #32]
   2c636:	subs	r3, #1
   2c638:	str	r3, [r5, #32]
   2c63a:	b.n	2c4ee <remove_block_group_free_space@@Base+0xae>
   2c63c:	ldr	r1, [pc, #68]	; (2c684 <remove_block_group_free_space@@Base+0x244>)
   2c63e:	movw	r2, #1126	; 0x466
   2c642:	ldr	r0, [pc, #68]	; (2c688 <remove_block_group_free_space@@Base+0x248>)
   2c644:	add	r1, pc
   2c646:	adds	r1, #246	; 0xf6
   2c648:	add	r0, pc
   2c64a:	bl	2abf0 <btrfs_abort_transaction@@Base+0x184>
   2c64e:	mvn.w	r4, #11
   2c652:	b.n	2c588 <remove_block_group_free_space@@Base+0x148>
   2c654:	mov	r0, r4
   2c656:	add	sp, #92	; 0x5c
   2c658:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c65c:	ldrb	r0, [r0, #5]
   2c65e:	movs	r3, r0
   2c660:	lsls	r0, r4, #8
   2c662:	movs	r0, r0
   2c664:	subs	r4, #53	; 0x35
   2c666:	movs	r1, r0
   2c668:	adds	r7, #177	; 0xb1
   2c66a:	movs	r1, r0
   2c66c:	adds	r7, #31
   2c66e:	movs	r1, r0
   2c670:	subs	r3, #143	; 0x8f
   2c672:	movs	r1, r0
   2c674:	adds	r7, #13
   2c676:	movs	r1, r0
   2c678:	strb	r0, [r5, #31]
   2c67a:	movs	r3, r0
   2c67c:	adds	r6, #191	; 0xbf
   2c67e:	movs	r1, r0
   2c680:	adds	r6, #160	; 0xa0
   2c682:	movs	r1, r0
   2c684:	subs	r2, #111	; 0x6f
   2c686:	movs	r1, r0
   2c688:			; <UNDEFINED> instruction: 0xf5fa0000

0002c68c <btrfs_clear_free_space_tree@@Base>:
   2c68c:	ldr	r2, [pc, #352]	; (2c7f0 <btrfs_clear_free_space_tree@@Base+0x164>)
   2c68e:	movs	r1, #0
   2c690:	ldr	r3, [pc, #352]	; (2c7f4 <btrfs_clear_free_space_tree@@Base+0x168>)
   2c692:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c696:	add	r2, pc
   2c698:	ldr.w	r8, [r0, #28]
   2c69c:	sub	sp, #44	; 0x2c
   2c69e:	ldr	r3, [r2, r3]
   2c6a0:	mov	r7, r0
   2c6a2:	ldr	r5, [r0, #48]	; 0x30
   2c6a4:	mov	r0, r8
   2c6a6:	ldr	r3, [r3, #0]
   2c6a8:	str	r3, [sp, #36]	; 0x24
   2c6aa:	mov.w	r3, #0
   2c6ae:	bl	2a674 <btrfs_start_transaction@@Base>
   2c6b2:	cmn.w	r0, #4096	; 0x1000
   2c6b6:	mov	r6, r0
   2c6b8:	bls.n	2c6d2 <btrfs_clear_free_space_tree@@Base+0x46>
   2c6ba:	mov	r4, r0
   2c6bc:	ldr	r2, [pc, #312]	; (2c7f8 <btrfs_clear_free_space_tree@@Base+0x16c>)
   2c6be:	ldr	r3, [pc, #308]	; (2c7f4 <btrfs_clear_free_space_tree@@Base+0x168>)
   2c6c0:	add	r2, pc
   2c6c2:	ldr	r3, [r2, r3]
   2c6c4:	ldr	r2, [r3, #0]
   2c6c6:	ldr	r3, [sp, #36]	; 0x24
   2c6c8:	eors	r2, r3
   2c6ca:	beq.w	2c7e0 <btrfs_clear_free_space_tree@@Base+0x154>
   2c6ce:	blx	8510 <__stack_chk_fail@plt>
   2c6d2:	ldr.w	r3, [r7, #308]	; 0x134
   2c6d6:	movs	r4, #0
   2c6d8:	ldr.w	r1, [r3, #184]	; 0xb8
   2c6dc:	ldr.w	r2, [r3, #180]	; 0xb4
   2c6e0:	str.w	r1, [r3, #184]	; 0xb8
   2c6e4:	bic.w	r2, r2, #3
   2c6e8:	str.w	r2, [r3, #180]	; 0xb4
   2c6ec:	str	r4, [r7, #48]	; 0x30
   2c6ee:	bl	17544 <btrfs_alloc_path@@Base>
   2c6f2:	mov	r7, r0
   2c6f4:	cbnz	r0, 2c6fc <btrfs_clear_free_space_tree@@Base+0x70>
   2c6f6:	mvn.w	r4, #11
   2c6fa:	b.n	2c6bc <btrfs_clear_free_space_tree@@Base+0x30>
   2c6fc:	add.w	r9, sp, #16
   2c700:	mov.w	sl, #1
   2c704:	mov.w	fp, #4294967295	; 0xffffffff
   2c708:	movs	r2, #0
   2c70a:	movs	r3, #0
   2c70c:	strb.w	r4, [sp, #24]
   2c710:	strd	r2, r3, [sp, #16]
   2c714:	strb.w	r4, [sp, #25]
   2c718:	strb.w	r4, [sp, #26]
   2c71c:	strb.w	r4, [sp, #27]
   2c720:	strb.w	r4, [sp, #28]
   2c724:	strb.w	r4, [sp, #29]
   2c728:	strb.w	r4, [sp, #30]
   2c72c:	strb.w	r4, [sp, #31]
   2c730:	strb.w	r4, [sp, #32]
   2c734:	mov	r3, r7
   2c736:	mov	r2, r9
   2c738:	mov	r1, r5
   2c73a:	mov	r0, r6
   2c73c:	strd	fp, sl, [sp]
   2c740:	bl	19930 <btrfs_search_slot@@Base>
   2c744:	subs	r4, r0, #0
   2c746:	blt.n	2c76c <btrfs_clear_free_space_tree@@Base+0xe0>
   2c748:	ldr	r3, [r7, #0]
   2c74a:	ldr.w	r4, [r3, #192]	; 0xc0
   2c74e:	cbz	r4, 2c76c <btrfs_clear_free_space_tree@@Base+0xe0>
   2c750:	movs	r3, #0
   2c752:	mov	r2, r7
   2c754:	str	r3, [r7, #32]
   2c756:	mov	r1, r5
   2c758:	str	r4, [sp, #0]
   2c75a:	mov	r0, r6
   2c75c:	bl	1aaec <btrfs_del_items@@Base>
   2c760:	mov	r4, r0
   2c762:	cbnz	r0, 2c76c <btrfs_clear_free_space_tree@@Base+0xe0>
   2c764:	mov	r0, r7
   2c766:	bl	1754c <btrfs_release_path@@Base>
   2c76a:	b.n	2c734 <btrfs_clear_free_space_tree@@Base+0xa8>
   2c76c:	mov	r0, r7
   2c76e:	bl	17572 <btrfs_free_path@@Base>
   2c772:	cmp	r4, #0
   2c774:	bne.n	2c6bc <btrfs_clear_free_space_tree@@Base+0x30>
   2c776:	addw	r2, r5, #447	; 0x1bf
   2c77a:	mov	r1, r8
   2c77c:	mov	r0, r6
   2c77e:	bl	272c8 <btrfs_del_root@@Base>
   2c782:	mov	r4, r0
   2c784:	cmp	r0, #0
   2c786:	bne.n	2c6bc <btrfs_clear_free_space_tree@@Base+0x30>
   2c788:	ldrd	r2, r3, [r5, #520]	; 0x208
   2c78c:	str	r3, [r2, #4]
   2c78e:	str	r2, [r3, #0]
   2c790:	ldr	r2, [pc, #84]	; (2c7e8 <btrfs_clear_free_space_tree@@Base+0x15c>)
   2c792:	ldr	r3, [pc, #88]	; (2c7ec <btrfs_clear_free_space_tree@@Base+0x160>)
   2c794:	ldr	r0, [r5, #0]
   2c796:	strd	r2, r3, [r5, #520]	; 0x208
   2c79a:	bl	1cc04 <clean_tree_block@@Base>
   2c79e:	mov	r4, r0
   2c7a0:	cmp	r0, #0
   2c7a2:	bne.n	2c6bc <btrfs_clear_free_space_tree@@Base+0x30>
   2c7a4:	movs	r3, #1
   2c7a6:	movs	r2, #0
   2c7a8:	str	r3, [sp, #8]
   2c7aa:	mov	r1, r5
   2c7ac:	movs	r3, #0
   2c7ae:	mov	r0, r6
   2c7b0:	strd	r2, r3, [sp]
   2c7b4:	ldr	r2, [r5, #0]
   2c7b6:	bl	204b8 <btrfs_free_tree_block@@Base>
   2c7ba:	mov	r4, r0
   2c7bc:	cmp	r0, #0
   2c7be:	bne.w	2c6bc <btrfs_clear_free_space_tree@@Base+0x30>
   2c7c2:	ldr	r0, [r5, #0]
   2c7c4:	bl	16314 <free_extent_buffer@@Base>
   2c7c8:	ldr	r0, [r5, #4]
   2c7ca:	bl	16314 <free_extent_buffer@@Base>
   2c7ce:	mov	r0, r5
   2c7d0:	blx	8434 <free@plt+0x4>
   2c7d4:	mov	r1, r8
   2c7d6:	mov	r0, r6
   2c7d8:	bl	2a8f4 <btrfs_commit_transaction@@Base>
   2c7dc:	mov	r4, r0
   2c7de:	b.n	2c6bc <btrfs_clear_free_space_tree@@Base+0x30>
   2c7e0:	mov	r0, r4
   2c7e2:	add	sp, #44	; 0x2c
   2c7e4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c7e8:	lsls	r0, r0, #4
   2c7ea:	movs	r0, r2
   2c7ec:	lsls	r0, r0, #8
   2c7ee:	movs	r0, r4
   2c7f0:	strb	r6, [r5, #27]
   2c7f2:	movs	r3, r0
   2c7f4:	lsls	r0, r4, #8
   2c7f6:	movs	r0, r0
   2c7f8:	strb	r4, [r0, #27]
   2c7fa:	movs	r3, r0

0002c7fc <btrfs_create_free_space_tree@@Base>:
   2c7fc:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   2c800:	movs	r1, #0
   2c802:	ldr	r7, [r0, #28]
   2c804:	mov	r5, r0
   2c806:	mov	r0, r7
   2c808:	bl	2a674 <btrfs_start_transaction@@Base>
   2c80c:	cmn.w	r0, #4096	; 0x1000
   2c810:	mov	r6, r0
   2c812:	bls.n	2c81c <btrfs_create_free_space_tree@@Base+0x20>
   2c814:	mov	r4, r0
   2c816:	mov	r0, r4
   2c818:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   2c81c:	movs	r2, #10
   2c81e:	movs	r3, #0
   2c820:	mov	r1, r5
   2c822:	bl	1da74 <btrfs_create_tree@@Base>
   2c826:	cmn.w	r0, #4096	; 0x1000
   2c82a:	mov	r4, r0
   2c82c:	bhi.n	2c866 <btrfs_create_free_space_tree@@Base+0x6a>
   2c82e:	mov.w	r8, #69632	; 0x11000
   2c832:	mov.w	r9, #0
   2c836:	str	r0, [r5, #48]	; 0x30
   2c838:	mov	r2, r8
   2c83a:	mov	r3, r9
   2c83c:	mov	r0, r5
   2c83e:	bl	1e528 <btrfs_lookup_first_block_group@@Base>
   2c842:	mov	r1, r0
   2c844:	cbz	r0, 2c870 <btrfs_create_free_space_tree@@Base+0x74>
   2c846:	ldr.w	r2, [r0, #49]	; 0x31
   2c84a:	ldr.w	r9, [r0, #53]	; 0x35
   2c84e:	ldrd	r0, r3, [r0, #40]	; 0x28
   2c852:	adds.w	r8, r2, r0
   2c856:	mov	r0, r6
   2c858:	adc.w	r9, r9, r3
   2c85c:	bl	2c1fc <populate_free_space_tree@@Base>
   2c860:	mov	r4, r0
   2c862:	cmp	r0, #0
   2c864:	beq.n	2c838 <btrfs_create_free_space_tree@@Base+0x3c>
   2c866:	mov	r1, r4
   2c868:	mov	r0, r6
   2c86a:	bl	2aa6c <btrfs_abort_transaction@@Base>
   2c86e:	b.n	2c816 <btrfs_create_free_space_tree@@Base+0x1a>
   2c870:	ldr.w	r3, [r5, #308]	; 0x134
   2c874:	mov	r9, r1
   2c876:	ldr.w	r2, [r3, #180]	; 0xb4
   2c87a:	ldr.w	r0, [r3, #184]	; 0xb8
   2c87e:	and.w	r8, r2, #1
   2c882:	orrs.w	r1, r8, r9
   2c886:	mov.w	r1, #0
   2c88a:	ittt	eq
   2c88c:	streq.w	r0, [r3, #184]	; 0xb8
   2c890:	orreq.w	r2, r2, #1
   2c894:	streq.w	r2, [r3, #180]	; 0xb4
   2c898:	ldr.w	r3, [r5, #308]	; 0x134
   2c89c:	ldr.w	r2, [r3, #180]	; 0xb4
   2c8a0:	ldr.w	r4, [r3, #184]	; 0xb8
   2c8a4:	and.w	r0, r2, #2
   2c8a8:	orrs	r1, r0
   2c8aa:	mov	r1, r7
   2c8ac:	it	eq
   2c8ae:	orreq.w	r2, r2, #2
   2c8b2:	mov	r0, r6
   2c8b4:	itt	eq
   2c8b6:	streq.w	r2, [r3, #180]	; 0xb4
   2c8ba:	streq.w	r4, [r3, #184]	; 0xb8
   2c8be:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   2c8c2:	b.w	2a8f4 <btrfs_commit_transaction@@Base>

0002c8c6 <load_free_space_tree@@Base>:
   2c8c6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c8ca:	mov	r9, r0
   2c8cc:	vpush	{d8-d9}
   2c8d0:	mov	r8, r1
   2c8d2:	ldr	r2, [pc, #976]	; (2cca4 <load_free_space_tree@@Base+0x3de>)
   2c8d4:	ldr	r3, [pc, #976]	; (2cca8 <load_free_space_tree@@Base+0x3e2>)
   2c8d6:	add	r2, pc
   2c8d8:	ldr	r6, [pc, #976]	; (2ccac <load_free_space_tree@@Base+0x3e6>)
   2c8da:	sub	sp, #124	; 0x7c
   2c8dc:	ldr	r3, [r2, r3]
   2c8de:	add	r6, pc
   2c8e0:	ldr	r3, [r3, #0]
   2c8e2:	str	r3, [sp, #116]	; 0x74
   2c8e4:	mov.w	r3, #0
   2c8e8:	bl	17544 <btrfs_alloc_path@@Base>
   2c8ec:	mov	r5, r0
   2c8ee:	cmp	r0, #0
   2c8f0:	beq.w	2cc92 <load_free_space_tree@@Base+0x3cc>
   2c8f4:	movs	r4, #0
   2c8f6:	movs	r3, #1
   2c8f8:	mov	r2, r8
   2c8fa:	strb.w	r3, [r0, #64]	; 0x40
   2c8fe:	mov	r3, r0
   2c900:	str	r4, [sp, #0]
   2c902:	mov	r0, r4
   2c904:	ldr.w	r1, [r9, #48]	; 0x30
   2c908:	bl	2aadc <btrfs_abort_transaction@@Base+0x70>
   2c90c:	cmn.w	r0, #4096	; 0x1000
   2c910:	bls.n	2c93a <load_free_space_tree@@Base+0x74>
   2c912:	mov	r3, r0
   2c914:	mov	r0, r5
   2c916:	str	r3, [sp, #32]
   2c918:	bl	17572 <btrfs_free_path@@Base>
   2c91c:	ldr	r3, [sp, #32]
   2c91e:	cmp	r3, #0
   2c920:	it	eq
   2c922:	moveq	r3, r4
   2c924:	ldr	r1, [pc, #904]	; (2ccb0 <load_free_space_tree@@Base+0x3ea>)
   2c926:	ldr	r2, [pc, #896]	; (2cca8 <load_free_space_tree@@Base+0x3e2>)
   2c928:	add	r1, pc
   2c92a:	ldr	r2, [r1, r2]
   2c92c:	ldr	r1, [r2, #0]
   2c92e:	ldr	r2, [sp, #116]	; 0x74
   2c930:	eors	r1, r2
   2c932:	beq.w	2cc98 <load_free_space_tree@@Base+0x3d2>
   2c936:	blx	8510 <__stack_chk_fail@plt>
   2c93a:	ldr	r3, [r5, #0]
   2c93c:	adds	r3, #96	; 0x60
   2c93e:	adds	r2, r3, r0
   2c940:	ldr	r3, [r3, r0]
   2c942:	ldr	r7, [r2, #4]
   2c944:	str	r3, [sp, #64]	; 0x40
   2c946:	ldr.w	r3, [r9, #48]	; 0x30
   2c94a:	vmov	s18, r3
   2c94e:	ldr.w	r3, [r8, #40]	; 0x28
   2c952:	str	r3, [sp, #48]	; 0x30
   2c954:	ldr.w	r3, [r8, #44]	; 0x2c
   2c958:	ldr	r1, [sp, #48]	; 0x30
   2c95a:	str	r3, [sp, #52]	; 0x34
   2c95c:	ldr.w	r3, [r8, #49]	; 0x31
   2c960:	ldr.w	r2, [r8, #53]	; 0x35
   2c964:	adds	r3, r3, r1
   2c966:	str	r3, [sp, #32]
   2c968:	ldr	r3, [sp, #52]	; 0x34
   2c96a:	adc.w	r3, r2, r3
   2c96e:	ands.w	r7, r7, #1
   2c972:	str	r3, [sp, #36]	; 0x24
   2c974:	beq.w	2cafc <load_free_space_tree@@Base+0x236>
   2c978:	movs	r3, #0
   2c97a:	mov	r7, r4
   2c97c:	vmov	s16, r3
   2c980:	str	r4, [sp, #40]	; 0x28
   2c982:	vmov	s17, r3
   2c986:	add	r3, sp, #96	; 0x60
   2c988:	vmov	s19, r3
   2c98c:	vmov	r0, s18
   2c990:	mov	r1, r5
   2c992:	bl	2ab60 <btrfs_abort_transaction@@Base+0xf4>
   2c996:	subs	r3, r0, #0
   2c998:	blt.w	2caf8 <load_free_space_tree@@Base+0x232>
   2c99c:	bne.w	2caf4 <load_free_space_tree@@Base+0x22e>
   2c9a0:	vmov	r1, s19
   2c9a4:	ldr	r2, [r5, #32]
   2c9a6:	ldr	r0, [r5, #0]
   2c9a8:	bl	2aa74 <btrfs_abort_transaction@@Base+0x8>
   2c9ac:	ldrb.w	r3, [sp, #104]	; 0x68
   2c9b0:	cmp	r3, #198	; 0xc6
   2c9b2:	beq.w	2caf4 <load_free_space_tree@@Base+0x22e>
   2c9b6:	cmp	r3, #200	; 0xc8
   2c9b8:	beq.n	2ca0c <load_free_space_tree@@Base+0x146>
   2c9ba:	ldr	r2, [pc, #760]	; (2ccb4 <load_free_space_tree@@Base+0x3ee>)
   2c9bc:	movs	r1, #1
   2c9be:	ldr	r0, [r6, r2]
   2c9c0:	ldr	r2, [pc, #756]	; (2ccb8 <load_free_space_tree@@Base+0x3f2>)
   2c9c2:	ldr	r0, [r0, #0]
   2c9c4:	add	r2, pc
   2c9c6:	blx	8860 <__fprintf_chk@plt+0x4>
   2c9ca:	movs	r4, #1
   2c9cc:	ldr	r3, [sp, #40]	; 0x28
   2c9ce:	cmp	r3, #1
   2c9d0:	bne.n	2c9ec <load_free_space_tree@@Base+0x126>
   2c9d2:	ldrd	r2, r3, [sp, #32]
   2c9d6:	mov	r1, r9
   2c9d8:	mov	r0, r8
   2c9da:	adds	r7, #1
   2c9dc:	strd	r2, r3, [sp]
   2c9e0:	vmov	r2, s16
   2c9e4:	vmov	r3, s17
   2c9e8:	bl	223f0 <add_new_free_space@@Base>
   2c9ec:	ldr	r3, [sp, #64]	; 0x40
   2c9ee:	cmp	r3, r7
   2c9f0:	beq.n	2ca08 <load_free_space_tree@@Base+0x142>
   2c9f2:	ldr	r3, [pc, #704]	; (2ccb4 <load_free_space_tree@@Base+0x3ee>)
   2c9f4:	ldr	r2, [pc, #708]	; (2ccbc <load_free_space_tree@@Base+0x3f6>)
   2c9f6:	ldr	r0, [r6, r3]
   2c9f8:	add	r2, pc
   2c9fa:	ldr	r3, [sp, #64]	; 0x40
   2c9fc:	str	r7, [sp, #0]
   2c9fe:	ldr	r0, [r0, #0]
   2ca00:	movs	r1, #1
   2ca02:	blx	8860 <__fprintf_chk@plt+0x4>
   2ca06:	adds	r4, #1
   2ca08:	movs	r3, #0
   2ca0a:	b.n	2c914 <load_free_space_tree@@Base+0x4e>
   2ca0c:	ldrd	sl, fp, [sp, #96]	; 0x60
   2ca10:	ldrd	r3, r4, [sp, #32]
   2ca14:	cmp	fp, r4
   2ca16:	it	eq
   2ca18:	cmpeq	sl, r3
   2ca1a:	bcc.n	2ca42 <load_free_space_tree@@Base+0x17c>
   2ca1c:	ldrd	r1, r2, [sp, #32]
   2ca20:	ldr	r3, [pc, #656]	; (2ccb4 <load_free_space_tree@@Base+0x3ee>)
   2ca22:	ldr	r3, [r6, r3]
   2ca24:	strd	r1, r2, [sp, #16]
   2ca28:	ldr	r2, [sp, #48]	; 0x30
   2ca2a:	strd	sl, fp, [sp]
   2ca2e:	str	r2, [sp, #8]
   2ca30:	ldr	r2, [sp, #52]	; 0x34
   2ca32:	str	r2, [sp, #12]
   2ca34:	ldr	r2, [pc, #648]	; (2ccc0 <load_free_space_tree@@Base+0x3fa>)
   2ca36:	add	r2, pc
   2ca38:	ldr	r0, [r3, #0]
   2ca3a:	movs	r1, #1
   2ca3c:	blx	8860 <__fprintf_chk@plt+0x4>
   2ca40:	b.n	2c9ca <load_free_space_tree@@Base+0x104>
   2ca42:	ldr.w	r3, [sp, #105]	; 0x69
   2ca46:	ldr.w	r2, [sp, #109]	; 0x6d
   2ca4a:	adds.w	r3, r3, sl
   2ca4e:	str	r3, [sp, #72]	; 0x48
   2ca50:	adc.w	r3, r2, fp
   2ca54:	str	r3, [sp, #76]	; 0x4c
   2ca56:	ldrd	r1, r2, [sp, #72]	; 0x48
   2ca5a:	ldrd	r3, r4, [sp, #32]
   2ca5e:	cmp	r4, r2
   2ca60:	it	eq
   2ca62:	cmpeq	r3, r1
   2ca64:	bcs.n	2caae <load_free_space_tree@@Base+0x1e8>
   2ca66:	ldrd	r1, r2, [sp, #32]
   2ca6a:	ldr	r3, [pc, #584]	; (2ccb4 <load_free_space_tree@@Base+0x3ee>)
   2ca6c:	ldr	r3, [r6, r3]
   2ca6e:	strd	r1, r2, [sp, #16]
   2ca72:	ldr	r2, [sp, #48]	; 0x30
   2ca74:	strd	sl, fp, [sp]
   2ca78:	str	r2, [sp, #8]
   2ca7a:	ldr	r2, [sp, #52]	; 0x34
   2ca7c:	str	r2, [sp, #12]
   2ca7e:	ldr	r2, [pc, #580]	; (2ccc4 <load_free_space_tree@@Base+0x3fe>)
   2ca80:	add	r2, pc
   2ca82:	b.n	2ca38 <load_free_space_tree@@Base+0x172>
   2ca84:	mov	r3, fp
   2ca86:	mov	r2, sl
   2ca88:	mov	r0, r5
   2ca8a:	bl	2ac66 <btrfs_abort_transaction@@Base+0x1fa>
   2ca8e:	ldr	r3, [sp, #40]	; 0x28
   2ca90:	mov	r4, r0
   2ca92:	cbnz	r3, 2cad2 <load_free_space_tree@@Base+0x20c>
   2ca94:	cmp	r0, #1
   2ca96:	bne.n	2caa0 <load_free_space_tree@@Base+0x1da>
   2ca98:	vmov	s16, sl
   2ca9c:	vmov	s17, fp
   2caa0:	ldr.w	r3, [r9, #388]	; 0x184
   2caa4:	str	r4, [sp, #40]	; 0x28
   2caa6:	adds.w	sl, sl, r3
   2caaa:	adc.w	fp, fp, #0
   2caae:	ldr.w	r3, [sp, #105]	; 0x69
   2cab2:	ldr	r1, [sp, #96]	; 0x60
   2cab4:	ldr.w	r2, [sp, #109]	; 0x6d
   2cab8:	adds	r3, r3, r1
   2caba:	str	r3, [sp, #80]	; 0x50
   2cabc:	ldr	r3, [sp, #100]	; 0x64
   2cabe:	adc.w	r3, r2, r3
   2cac2:	str	r3, [sp, #84]	; 0x54
   2cac4:	ldrd	r3, r4, [sp, #80]	; 0x50
   2cac8:	cmp	fp, r4
   2caca:	it	eq
   2cacc:	cmpeq	sl, r3
   2cace:	bcc.n	2ca84 <load_free_space_tree@@Base+0x1be>
   2cad0:	b.n	2c98c <load_free_space_tree@@Base+0xc6>
   2cad2:	ldr	r3, [sp, #40]	; 0x28
   2cad4:	cmp	r3, #1
   2cad6:	bne.n	2caa0 <load_free_space_tree@@Base+0x1da>
   2cad8:	cmp	r0, #0
   2cada:	bne.n	2caa0 <load_free_space_tree@@Base+0x1da>
   2cadc:	vmov	r2, s16
   2cae0:	mov	r1, r9
   2cae2:	vmov	r3, s17
   2cae6:	mov	r0, r8
   2cae8:	strd	sl, fp, [sp]
   2caec:	adds	r7, #1
   2caee:	bl	223f0 <add_new_free_space@@Base>
   2caf2:	b.n	2caa0 <load_free_space_tree@@Base+0x1da>
   2caf4:	movs	r4, #0
   2caf6:	b.n	2c9cc <load_free_space_tree@@Base+0x106>
   2caf8:	movs	r4, #0
   2cafa:	b.n	2c914 <load_free_space_tree@@Base+0x4e>
   2cafc:	add	r3, sp, #96	; 0x60
   2cafe:	mov	r4, r7
   2cb00:	str	r7, [sp, #72]	; 0x48
   2cb02:	vmov	s16, r3
   2cb06:	ldr	r3, [pc, #448]	; (2ccc8 <load_free_space_tree@@Base+0x402>)
   2cb08:	add	r3, pc
   2cb0a:	vmov	s17, r3
   2cb0e:	ldr	r3, [pc, #444]	; (2cccc <load_free_space_tree@@Base+0x406>)
   2cb10:	add	r3, pc
   2cb12:	vmov	s19, r3
   2cb16:	vmov	r0, s18
   2cb1a:	mov	r1, r5
   2cb1c:	bl	2ab60 <btrfs_abort_transaction@@Base+0xf4>
   2cb20:	subs	r3, r0, #0
   2cb22:	blt.w	2c914 <load_free_space_tree@@Base+0x4e>
   2cb26:	bne.n	2cb52 <load_free_space_tree@@Base+0x28c>
   2cb28:	vmov	r1, s16
   2cb2c:	ldr	r2, [r5, #32]
   2cb2e:	ldr	r0, [r5, #0]
   2cb30:	bl	2aa74 <btrfs_abort_transaction@@Base+0x8>
   2cb34:	ldrb.w	r3, [sp, #104]	; 0x68
   2cb38:	cmp	r3, #198	; 0xc6
   2cb3a:	beq.n	2cb52 <load_free_space_tree@@Base+0x28c>
   2cb3c:	cmp	r3, #199	; 0xc7
   2cb3e:	beq.n	2cb68 <load_free_space_tree@@Base+0x2a2>
   2cb40:	ldr	r2, [pc, #368]	; (2ccb4 <load_free_space_tree@@Base+0x3ee>)
   2cb42:	movs	r1, #1
   2cb44:	ldr	r0, [r6, r2]
   2cb46:	ldr	r2, [pc, #392]	; (2ccd0 <load_free_space_tree@@Base+0x40a>)
   2cb48:	ldr	r0, [r0, #0]
   2cb4a:	add	r2, pc
   2cb4c:	blx	8860 <__fprintf_chk@plt+0x4>
   2cb50:	adds	r4, #1
   2cb52:	ldr	r3, [sp, #64]	; 0x40
   2cb54:	cmp	r3, r7
   2cb56:	beq.w	2ca08 <load_free_space_tree@@Base+0x142>
   2cb5a:	ldr	r3, [pc, #344]	; (2ccb4 <load_free_space_tree@@Base+0x3ee>)
   2cb5c:	ldr	r2, [pc, #372]	; (2ccd4 <load_free_space_tree@@Base+0x40e>)
   2cb5e:	ldr	r0, [r6, r3]
   2cb60:	add	r2, pc
   2cb62:	ldr	r3, [sp, #64]	; 0x40
   2cb64:	str	r7, [sp, #0]
   2cb66:	b.n	2c9fe <load_free_space_tree@@Base+0x138>
   2cb68:	ldrd	r2, r3, [sp, #96]	; 0x60
   2cb6c:	ldrd	r0, r1, [sp, #32]
   2cb70:	cmp	r3, r1
   2cb72:	it	eq
   2cb74:	cmpeq	r2, r0
   2cb76:	bcc.n	2cb9e <load_free_space_tree@@Base+0x2d8>
   2cb78:	ldr	r1, [pc, #312]	; (2ccb4 <load_free_space_tree@@Base+0x3ee>)
   2cb7a:	ldrd	r8, r9, [sp, #32]
   2cb7e:	ldr	r0, [r6, r1]
   2cb80:	ldr	r1, [sp, #48]	; 0x30
   2cb82:	strd	r2, r3, [sp]
   2cb86:	ldr	r2, [pc, #336]	; (2ccd8 <load_free_space_tree@@Base+0x412>)
   2cb88:	str	r1, [sp, #8]
   2cb8a:	ldr	r1, [sp, #52]	; 0x34
   2cb8c:	add	r2, pc
   2cb8e:	strd	r8, r9, [sp, #16]
   2cb92:	str	r1, [sp, #12]
   2cb94:	movs	r1, #1
   2cb96:	ldr	r0, [r0, #0]
   2cb98:	blx	8860 <__fprintf_chk@plt+0x4>
   2cb9c:	b.n	2cb50 <load_free_space_tree@@Base+0x28a>
   2cb9e:	ldr.w	r1, [sp, #105]	; 0x69
   2cba2:	ldr.w	r0, [sp, #109]	; 0x6d
   2cba6:	adds	r1, r1, r2
   2cba8:	str	r1, [sp, #40]	; 0x28
   2cbaa:	adc.w	r1, r0, r3
   2cbae:	str	r1, [sp, #44]	; 0x2c
   2cbb0:	ldrd	fp, ip, [sp, #40]	; 0x28
   2cbb4:	ldrd	r0, r1, [sp, #32]
   2cbb8:	cmp	r1, ip
   2cbba:	it	eq
   2cbbc:	cmpeq	r0, fp
   2cbbe:	bcs.n	2cbe6 <load_free_space_tree@@Base+0x320>
   2cbc0:	ldr	r3, [pc, #240]	; (2ccb4 <load_free_space_tree@@Base+0x3ee>)
   2cbc2:	mov	r2, r1
   2cbc4:	mov	r1, r0
   2cbc6:	ldr	r3, [r6, r3]
   2cbc8:	strd	r1, r2, [sp, #16]
   2cbcc:	mov	r1, fp
   2cbce:	ldr	r2, [sp, #48]	; 0x30
   2cbd0:	str	r2, [sp, #8]
   2cbd2:	ldr	r2, [sp, #52]	; 0x34
   2cbd4:	str	r2, [sp, #12]
   2cbd6:	mov	r2, ip
   2cbd8:	strd	r1, r2, [sp]
   2cbdc:	movs	r1, #1
   2cbde:	ldr	r2, [pc, #252]	; (2ccdc <load_free_space_tree@@Base+0x416>)
   2cbe0:	ldr	r0, [r3, #0]
   2cbe2:	add	r2, pc
   2cbe4:	b.n	2cb98 <load_free_space_tree@@Base+0x2d2>
   2cbe6:	ldr	r1, [sp, #72]	; 0x48
   2cbe8:	cbz	r1, 2cc36 <load_free_space_tree@@Base+0x370>
   2cbea:	ldr	r1, [sp, #88]	; 0x58
   2cbec:	ldr	r0, [sp, #68]	; 0x44
   2cbee:	adds.w	r1, sl, r1
   2cbf2:	str	r1, [sp, #56]	; 0x38
   2cbf4:	ldr	r1, [sp, #92]	; 0x5c
   2cbf6:	adc.w	r1, r0, r1
   2cbfa:	str	r1, [sp, #60]	; 0x3c
   2cbfc:	ldrd	r0, r1, [sp, #56]	; 0x38
   2cc00:	cmp	r3, r1
   2cc02:	it	eq
   2cc04:	cmpeq	r2, r0
   2cc06:	bcs.n	2cc6e <load_free_space_tree@@Base+0x3a8>
   2cc08:	ldr	r1, [pc, #168]	; (2ccb4 <load_free_space_tree@@Base+0x3ee>)
   2cc0a:	ldrd	fp, ip, [sp, #56]	; 0x38
   2cc0e:	ldr	r0, [r6, r1]
   2cc10:	strd	r2, r3, [sp]
   2cc14:	vmov	r2, s19
   2cc18:	ldr	r1, [sp, #68]	; 0x44
   2cc1a:	strd	fp, ip, [sp, #24]
   2cc1e:	str.w	sl, [sp, #16]
   2cc22:	ldrd	sl, fp, [sp, #40]	; 0x28
   2cc26:	str	r1, [sp, #20]
   2cc28:	strd	sl, fp, [sp, #8]
   2cc2c:	ldr	r0, [r0, #0]
   2cc2e:	movs	r1, #1
   2cc30:	blx	8860 <__fprintf_chk@plt+0x4>
   2cc34:	adds	r4, #1
   2cc36:	ldrd	r2, r3, [sp, #96]	; 0x60
   2cc3a:	adds	r7, #1
   2cc3c:	ldr.w	r1, [sp, #105]	; 0x69
   2cc40:	ldr.w	r0, [sp, #109]	; 0x6d
   2cc44:	adds	r1, r1, r2
   2cc46:	adc.w	r0, r3, r0
   2cc4a:	strd	r1, r0, [sp]
   2cc4e:	mov	r1, r9
   2cc50:	mov	r0, r8
   2cc52:	bl	223f0 <add_new_free_space@@Base>
   2cc56:	ldrd	sl, r3, [sp, #96]	; 0x60
   2cc5a:	str	r3, [sp, #68]	; 0x44
   2cc5c:	ldr.w	r3, [sp, #105]	; 0x69
   2cc60:	str	r3, [sp, #88]	; 0x58
   2cc62:	ldr.w	r3, [sp, #109]	; 0x6d
   2cc66:	str	r3, [sp, #92]	; 0x5c
   2cc68:	movs	r3, #1
   2cc6a:	str	r3, [sp, #72]	; 0x48
   2cc6c:	b.n	2cb16 <load_free_space_tree@@Base+0x250>
   2cc6e:	bne.n	2cc36 <load_free_space_tree@@Base+0x370>
   2cc70:	ldr	r1, [pc, #64]	; (2ccb4 <load_free_space_tree@@Base+0x3ee>)
   2cc72:	ldr	r0, [r6, r1]
   2cc74:	ldr	r1, [sp, #68]	; 0x44
   2cc76:	str.w	sl, [sp, #16]
   2cc7a:	ldrd	sl, fp, [sp, #40]	; 0x28
   2cc7e:	strd	r2, r3, [sp, #24]
   2cc82:	strd	r2, r3, [sp]
   2cc86:	str	r1, [sp, #20]
   2cc88:	vmov	r2, s17
   2cc8c:	strd	sl, fp, [sp, #8]
   2cc90:	b.n	2cc2c <load_free_space_tree@@Base+0x366>
   2cc92:	mvn.w	r3, #11
   2cc96:	b.n	2c924 <load_free_space_tree@@Base+0x5e>
   2cc98:	mov	r0, r3
   2cc9a:	add	sp, #124	; 0x7c
   2cc9c:	vpop	{d8-d9}
   2cca0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cca4:	strb	r6, [r5, #18]
   2cca6:	movs	r3, r0
   2cca8:	lsls	r0, r4, #8
   2ccaa:	movs	r0, r0
   2ccac:	strb	r6, [r4, #18]
   2ccae:	movs	r3, r0
   2ccb0:	strb	r4, [r3, #17]
   2ccb2:	movs	r3, r0
   2ccb4:	lsls	r0, r6, #8
   2ccb6:	movs	r0, r0
   2ccb8:	adds	r5, #12
   2ccba:	movs	r1, r0
   2ccbc:	adds	r5, #127	; 0x7f
   2ccbe:	movs	r1, r0
   2ccc0:	adds	r4, #181	; 0xb5
   2ccc2:	movs	r1, r0
   2ccc4:	adds	r4, #178	; 0xb2
   2ccc6:	movs	r1, r0
   2ccc8:	adds	r5, #106	; 0x6a
   2ccca:	movs	r1, r0
   2cccc:	adds	r5, #36	; 0x24
   2ccce:	movs	r1, r0
   2ccd0:	adds	r3, #134	; 0x86
   2ccd2:	movs	r1, r0
   2ccd4:	adds	r4, #23
   2ccd6:	movs	r1, r0
   2ccd8:	adds	r4, #28
   2ccda:	movs	r1, r0
   2ccdc:	adds	r4, #13
   2ccde:	movs	r1, r0

0002cce0 <btrfs_add_corrupt_extent_record@@Base>:
   2cce0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cce4:	mov	sl, r2
   2cce6:	ldr	r2, [pc, #220]	; (2cdc4 <btrfs_add_corrupt_extent_record@@Base+0xe4>)
   2cce8:	mov	r9, r3
   2ccea:	ldr	r3, [pc, #220]	; (2cdc8 <btrfs_add_corrupt_extent_record@@Base+0xe8>)
   2ccec:	sub	sp, #92	; 0x5c
   2ccee:	add	r2, pc
   2ccf0:	ldr.w	r8, [pc, #216]	; 2cdcc <btrfs_add_corrupt_extent_record@@Base+0xec>
   2ccf4:	ldr.w	fp, [r0, #380]	; 0x17c
   2ccf8:	mov	r4, r1
   2ccfa:	ldr	r3, [r2, r3]
   2ccfc:	add	r8, pc
   2ccfe:	ldr	r3, [r3, #0]
   2cd00:	str	r3, [sp, #84]	; 0x54
   2cd02:	mov.w	r3, #0
   2cd06:	cmp.w	fp, #0
   2cd0a:	beq.n	2cd9e <btrfs_add_corrupt_extent_record@@Base+0xbe>
   2cd0c:	movs	r0, #64	; 0x40
   2cd0e:	blx	8678 <malloc@plt+0x4>
   2cd12:	mov	r5, r0
   2cd14:	cmp	r0, #0
   2cd16:	beq.n	2cdb4 <btrfs_add_corrupt_extent_record@@Base+0xd4>
   2cd18:	add.w	r6, r0, #40	; 0x28
   2cd1c:	add.w	r3, r4, #16
   2cd20:	ldr	r0, [r4, #0]
   2cd22:	adds	r4, #8
   2cd24:	ldr.w	r1, [r4, #-4]
   2cd28:	cmp	r4, r3
   2cd2a:	mov	r7, r6
   2cd2c:	stmia	r7!, {r0, r1}
   2cd2e:	mov	r6, r7
   2cd30:	bne.n	2cd20 <btrfs_add_corrupt_extent_record@@Base+0x40>
   2cd32:	ldrb	r3, [r4, #0]
   2cd34:	mov	r1, r5
   2cd36:	mov	r0, fp
   2cd38:	strb	r3, [r7, #0]
   2cd3a:	ldrd	r2, r3, [sp, #128]	; 0x80
   2cd3e:	strd	sl, r9, [r5, #24]
   2cd42:	strd	r2, r3, [r5, #32]
   2cd46:	ldr	r3, [sp, #136]	; 0x88
   2cd48:	str	r3, [r5, #60]	; 0x3c
   2cd4a:	bl	1558e <insert_cache_extent@@Base>
   2cd4e:	mov	r4, r0
   2cd50:	cbz	r0, 2cd9e <btrfs_add_corrupt_extent_record@@Base+0xbe>
   2cd52:	mov	r0, r5
   2cd54:	blx	8434 <free@plt+0x4>
   2cd58:	cmn.w	r4, #17
   2cd5c:	beq.n	2cda0 <btrfs_add_corrupt_extent_record@@Base+0xc0>
   2cd5e:	ldr	r3, [pc, #112]	; (2cdd0 <btrfs_add_corrupt_extent_record@@Base+0xf0>)
   2cd60:	add	r4, sp, #20
   2cd62:	ldr	r2, [pc, #112]	; (2cdd4 <btrfs_add_corrupt_extent_record@@Base+0xf4>)
   2cd64:	movs	r1, #1
   2cd66:	ldr.w	r0, [r8, r3]
   2cd6a:	add	r2, pc
   2cd6c:	ldr	r3, [pc, #104]	; (2cdd8 <btrfs_add_corrupt_extent_record@@Base+0xf8>)
   2cd6e:	str	r1, [sp, #12]
   2cd70:	add	r3, pc
   2cd72:	str	r3, [sp, #8]
   2cd74:	ldr	r3, [pc, #100]	; (2cddc <btrfs_add_corrupt_extent_record@@Base+0xfc>)
   2cd76:	add	r3, pc
   2cd78:	str	r3, [sp, #4]
   2cd7a:	movs	r3, #49	; 0x31
   2cd7c:	str	r3, [sp, #0]
   2cd7e:	ldr	r3, [pc, #96]	; (2cde0 <btrfs_add_corrupt_extent_record@@Base+0x100>)
   2cd80:	ldr	r0, [r0, #0]
   2cd82:	add	r3, pc
   2cd84:	blx	8860 <__fprintf_chk@plt+0x4>
   2cd88:	movs	r1, #16
   2cd8a:	mov	r0, r4
   2cd8c:	blx	86c4 <backtrace@plt>
   2cd90:	movs	r2, #2
   2cd92:	mov	r1, r0
   2cd94:	mov	r0, r4
   2cd96:	blx	89c8 <backtrace_symbols_fd@plt>
   2cd9a:	blx	8980 <abort@plt>
   2cd9e:	movs	r4, #0
   2cda0:	ldr	r2, [pc, #64]	; (2cde4 <btrfs_add_corrupt_extent_record@@Base+0x104>)
   2cda2:	ldr	r3, [pc, #36]	; (2cdc8 <btrfs_add_corrupt_extent_record@@Base+0xe8>)
   2cda4:	add	r2, pc
   2cda6:	ldr	r3, [r2, r3]
   2cda8:	ldr	r2, [r3, #0]
   2cdaa:	ldr	r3, [sp, #84]	; 0x54
   2cdac:	eors	r2, r3
   2cdae:	beq.n	2cdba <btrfs_add_corrupt_extent_record@@Base+0xda>
   2cdb0:	blx	8510 <__stack_chk_fail@plt>
   2cdb4:	mvn.w	r4, #11
   2cdb8:	b.n	2cda0 <btrfs_add_corrupt_extent_record@@Base+0xc0>
   2cdba:	mov	r0, r4
   2cdbc:	add	sp, #92	; 0x5c
   2cdbe:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cdc2:	nop
   2cdc4:	strb	r6, [r2, #2]
   2cdc6:	movs	r3, r0
   2cdc8:	lsls	r0, r4, #8
   2cdca:	movs	r0, r0
   2cdcc:	strb	r0, [r1, #2]
   2cdce:	movs	r3, r0
   2cdd0:	lsls	r0, r6, #8
   2cdd2:	movs	r0, r0
   2cdd4:	stmia	r1!, {r3, r4, r5}
   2cdd6:	movs	r0, r0
   2cdd8:	adds	r4, #96	; 0x60
   2cdda:	movs	r1, r0
   2cddc:	adds	r4, #112	; 0x70
   2cdde:	movs	r1, r0
   2cde0:	adds	r4, #69	; 0x45
   2cde2:	movs	r1, r0
   2cde4:	ldr	r0, [r4, #124]	; 0x7c
   2cde6:	movs	r3, r0
   2cde8:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cdec:	mov	r7, r3
   2cdee:	ldr.w	r9, [r0]
   2cdf2:	mov	r5, r2
   2cdf4:	ldr	r3, [r0, #32]
   2cdf6:	movs	r2, #25
   2cdf8:	add.w	sl, r9, #96	; 0x60
   2cdfc:	movs	r4, #0
   2cdfe:	mla	r3, r2, r3, sl
   2ce02:	ldr.w	r6, [r3, #118]	; 0x76
   2ce06:	ldr.w	fp, [r3, #122]	; 0x7a
   2ce0a:	adds	r6, #101	; 0x65
   2ce0c:	cmp	r4, fp
   2ce0e:	bcc.n	2ce14 <btrfs_add_corrupt_extent_record@@Base+0x134>
   2ce10:	movs	r0, #0
   2ce12:	b.n	2ce42 <btrfs_add_corrupt_extent_record@@Base+0x162>
   2ce14:	add.w	r8, r4, r6
   2ce18:	add.w	r3, sl, r8
   2ce1c:	ldrh	r3, [r3, #8]
   2ce1e:	cmp	r3, r5
   2ce20:	add.w	r2, r3, #10
   2ce24:	add	r4, r2
   2ce26:	bne.n	2ce0c <btrfs_add_corrupt_extent_record@@Base+0x12c>
   2ce28:	add.w	r2, r8, #10
   2ce2c:	mov	r3, r5
   2ce2e:	mov	r0, r9
   2ce30:	str	r1, [sp, #4]
   2ce32:	bl	169fc <memcmp_extent_buffer@@Base>
   2ce36:	ldr	r1, [sp, #4]
   2ce38:	cmp	r0, #0
   2ce3a:	bne.n	2ce0c <btrfs_add_corrupt_extent_record@@Base+0x12c>
   2ce3c:	movs	r0, #1
   2ce3e:	str.w	r8, [r7]
   2ce42:	add	sp, #12
   2ce44:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ce48:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ce4c:	mov	sl, r2
   2ce4e:	ldr.w	r8, [r0]
   2ce52:	movs	r1, #25
   2ce54:	ldr	r2, [r0, #32]
   2ce56:	mov	fp, r3
   2ce58:	add.w	r9, r8, #96	; 0x60
   2ce5c:	ldr	r3, [sp, #52]	; 0x34
   2ce5e:	movs	r4, #0
   2ce60:	mla	r2, r1, r2, r9
   2ce64:	ldr.w	r6, [r2, #118]	; 0x76
   2ce68:	ldr.w	r1, [r2, #122]	; 0x7a
   2ce6c:	adds	r6, #101	; 0x65
   2ce6e:	str	r1, [sp, #4]
   2ce70:	ldr	r2, [sp, #4]
   2ce72:	cmp	r4, r2
   2ce74:	bcc.n	2ce7e <btrfs_add_corrupt_extent_record@@Base+0x19e>
   2ce76:	movs	r0, #0
   2ce78:	add	sp, #12
   2ce7a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ce7e:	adds	r7, r4, r6
   2ce80:	add.w	r2, r9, r7
   2ce84:	ldrh	r5, [r2, #16]
   2ce86:	cmp	r5, r3
   2ce88:	bne.n	2ceb2 <btrfs_add_corrupt_extent_record@@Base+0x1d2>
   2ce8a:	ldr	r1, [r2, #4]
   2ce8c:	ldr	r0, [r2, #0]
   2ce8e:	cmp	fp, r1
   2ce90:	it	eq
   2ce92:	cmpeq	sl, r0
   2ce94:	bne.n	2ceb2 <btrfs_add_corrupt_extent_record@@Base+0x1d2>
   2ce96:	ldr	r1, [sp, #48]	; 0x30
   2ce98:	add.w	r2, r7, #18
   2ce9c:	mov	r0, r8
   2ce9e:	str	r3, [sp, #52]	; 0x34
   2cea0:	bl	169fc <memcmp_extent_buffer@@Base>
   2cea4:	ldr	r3, [sp, #52]	; 0x34
   2cea6:	cbnz	r0, 2ceb2 <btrfs_add_corrupt_extent_record@@Base+0x1d2>
   2cea8:	ldr	r3, [sp, #56]	; 0x38
   2ceaa:	cbz	r3, 2ceae <btrfs_add_corrupt_extent_record@@Base+0x1ce>
   2ceac:	str	r7, [r3, #0]
   2ceae:	movs	r0, #1
   2ceb0:	b.n	2ce78 <btrfs_add_corrupt_extent_record@@Base+0x198>
   2ceb2:	adds	r5, #18
   2ceb4:	add	r4, r5
   2ceb6:	b.n	2ce70 <btrfs_add_corrupt_extent_record@@Base+0x190>

0002ceb8 <btrfs_lookup_inode@@Base>:
   2ceb8:	push	{r4, r5, r6, r7, lr}
   2ceba:	mov	r5, r2
   2cebc:	ldr	r6, [pc, #152]	; (2cf58 <btrfs_lookup_inode@@Base+0xa0>)
   2cebe:	sub	sp, #36	; 0x24
   2cec0:	ldr	r2, [pc, #152]	; (2cf5c <btrfs_lookup_inode@@Base+0xa4>)
   2cec2:	mov	r4, r3
   2cec4:	add	r6, pc
   2cec6:	ldr	r3, [sp, #56]	; 0x38
   2cec8:	ldr	r2, [r6, r2]
   2ceca:	ldr	r2, [r2, #0]
   2cecc:	str	r2, [sp, #28]
   2cece:	mov.w	r2, #0
   2ced2:	subs	r2, r3, #0
   2ced4:	mov.w	r3, r3, asr #31
   2ced8:	str	r3, [sp, #0]
   2ceda:	it	ne
   2cedc:	movne	r2, #1
   2cede:	mov	r3, r5
   2cee0:	str	r2, [sp, #4]
   2cee2:	mov	r2, r4
   2cee4:	bl	19930 <btrfs_search_slot@@Base>
   2cee8:	subs	r6, r0, #0
   2ceea:	ble.n	2cf3e <btrfs_lookup_inode@@Base+0x86>
   2ceec:	ldrb	r3, [r4, #8]
   2ceee:	cmp	r3, #132	; 0x84
   2cef0:	bne.n	2cf3e <btrfs_lookup_inode@@Base+0x86>
   2cef2:	ldr.w	r3, [r4, #13]
   2cef6:	ldr.w	r2, [r4, #9]
   2cefa:	adds	r3, #1
   2cefc:	it	eq
   2cefe:	cmpeq.w	r2, #4294967295	; 0xffffffff
   2cf02:	bne.n	2cf3e <btrfs_lookup_inode@@Base+0x86>
   2cf04:	ldr	r2, [r5, #32]
   2cf06:	cbz	r2, 2cf3e <btrfs_lookup_inode@@Base+0x86>
   2cf08:	subs	r2, #1
   2cf0a:	movs	r3, #25
   2cf0c:	ldr	r0, [r5, #0]
   2cf0e:	add	r1, sp, #8
   2cf10:	muls	r2, r3
   2cf12:	movs	r3, #17
   2cf14:	adds	r2, #101	; 0x65
   2cf16:	bl	16a0e <read_extent_buffer@@Base>
   2cf1a:	ldrd	r2, r3, [sp, #8]
   2cf1e:	ldr	r1, [r4, #4]
   2cf20:	ldr	r0, [r4, #0]
   2cf22:	cmp	r1, r3
   2cf24:	ldrb.w	r7, [sp, #16]
   2cf28:	it	eq
   2cf2a:	cmpeq	r0, r2
   2cf2c:	bne.n	2cf3e <btrfs_lookup_inode@@Base+0x86>
   2cf2e:	ldrb	r3, [r4, #8]
   2cf30:	cmp	r3, r7
   2cf32:	itttt	eq
   2cf34:	ldreq	r3, [r5, #32]
   2cf36:	moveq	r6, #0
   2cf38:	addeq.w	r3, r3, #4294967295	; 0xffffffff
   2cf3c:	streq	r3, [r5, #32]
   2cf3e:	ldr	r2, [pc, #32]	; (2cf60 <btrfs_lookup_inode@@Base+0xa8>)
   2cf40:	ldr	r3, [pc, #24]	; (2cf5c <btrfs_lookup_inode@@Base+0xa4>)
   2cf42:	add	r2, pc
   2cf44:	ldr	r3, [r2, r3]
   2cf46:	ldr	r2, [r3, #0]
   2cf48:	ldr	r3, [sp, #28]
   2cf4a:	eors	r2, r3
   2cf4c:	beq.n	2cf52 <btrfs_lookup_inode@@Base+0x9a>
   2cf4e:	blx	8510 <__stack_chk_fail@plt>
   2cf52:	mov	r0, r6
   2cf54:	add	sp, #36	; 0x24
   2cf56:	pop	{r4, r5, r6, r7, pc}
   2cf58:	ldr	r0, [r0, #108]	; 0x6c
   2cf5a:	movs	r3, r0
   2cf5c:	lsls	r0, r4, #8
   2cf5e:	movs	r0, r0
   2cf60:	ldr	r2, [r0, #100]	; 0x64
   2cf62:	movs	r3, r0

0002cf64 <btrfs_insert_inode@@Base>:
   2cf64:	push	{lr}
   2cf66:	sub	sp, #36	; 0x24
   2cf68:	ldr.w	lr, [pc, #104]	; 2cfd4 <btrfs_insert_inode@@Base+0x70>
   2cf6c:	ldr.w	ip, [pc, #104]	; 2cfd8 <btrfs_insert_inode@@Base+0x74>
   2cf70:	add	lr, pc
   2cf72:	ldr.w	ip, [lr, ip]
   2cf76:	ldr.w	ip, [ip]
   2cf7a:	str.w	ip, [sp, #28]
   2cf7e:	mov.w	ip, #0
   2cf82:	strd	r2, r3, [sp, #8]
   2cf86:	movs	r2, #0
   2cf88:	movs	r3, #1
   2cf8a:	strb.w	r2, [sp, #17]
   2cf8e:	strb.w	r3, [sp, #16]
   2cf92:	movs	r3, #160	; 0xa0
   2cf94:	strb.w	r2, [sp, #18]
   2cf98:	strb.w	r2, [sp, #19]
   2cf9c:	strb.w	r2, [sp, #20]
   2cfa0:	strb.w	r2, [sp, #21]
   2cfa4:	strb.w	r2, [sp, #22]
   2cfa8:	strb.w	r2, [sp, #23]
   2cfac:	strb.w	r2, [sp, #24]
   2cfb0:	add	r2, sp, #8
   2cfb2:	str	r3, [sp, #0]
   2cfb4:	ldr	r3, [sp, #40]	; 0x28
   2cfb6:	bl	1a9bc <btrfs_insert_item@@Base>
   2cfba:	ldr	r2, [pc, #32]	; (2cfdc <btrfs_insert_inode@@Base+0x78>)
   2cfbc:	ldr	r3, [pc, #24]	; (2cfd8 <btrfs_insert_inode@@Base+0x74>)
   2cfbe:	add	r2, pc
   2cfc0:	ldr	r3, [r2, r3]
   2cfc2:	ldr	r2, [r3, #0]
   2cfc4:	ldr	r3, [sp, #28]
   2cfc6:	eors	r2, r3
   2cfc8:	beq.n	2cfce <btrfs_insert_inode@@Base+0x6a>
   2cfca:	blx	8510 <__stack_chk_fail@plt>
   2cfce:	add	sp, #36	; 0x24
   2cfd0:	ldr.w	pc, [sp], #4
   2cfd4:	ldr	r4, [r2, #96]	; 0x60
   2cfd6:	movs	r3, r0
   2cfd8:	lsls	r0, r4, #8
   2cfda:	movs	r0, r0
   2cfdc:	ldr	r6, [r0, #92]	; 0x5c
   2cfde:	movs	r3, r0

0002cfe0 <btrfs_lookup_inode_ref@@Base>:
   2cfe0:	push	{r4, r5, r6, lr}
   2cfe2:	mov	r4, r2
   2cfe4:	ldr	r2, [pc, #112]	; (2d058 <btrfs_lookup_inode_ref@@Base+0x78>)
   2cfe6:	mov	r5, r3
   2cfe8:	ldr	r3, [pc, #112]	; (2d05c <btrfs_lookup_inode_ref@@Base+0x7c>)
   2cfea:	sub	sp, #40	; 0x28
   2cfec:	add	r2, pc
   2cfee:	ldr	r6, [sp, #80]	; 0x50
   2cff0:	ldr	r3, [r2, r3]
   2cff2:	ldr	r3, [r3, #0]
   2cff4:	str	r3, [sp, #36]	; 0x24
   2cff6:	mov.w	r3, #0
   2cffa:	movs	r3, #0
   2cffc:	str	r3, [sp, #12]
   2cffe:	ldrd	r2, r3, [sp, #64]	; 0x40
   2d002:	strd	r2, r3, [sp, #16]
   2d006:	movs	r3, #12
   2d008:	strb.w	r3, [sp, #24]
   2d00c:	add	r2, sp, #16
   2d00e:	ldr	r3, [sp, #72]	; 0x48
   2d010:	str.w	r3, [sp, #25]
   2d014:	ldr	r3, [sp, #76]	; 0x4c
   2d016:	str.w	r3, [sp, #29]
   2d01a:	subs	r3, r6, #0
   2d01c:	it	ne
   2d01e:	movne	r3, #1
   2d020:	strd	r6, r3, [sp]
   2d024:	mov	r3, r4
   2d026:	bl	19930 <btrfs_search_slot@@Base>
   2d02a:	cmp	r0, #0
   2d02c:	bne.n	2d03e <btrfs_lookup_inode_ref@@Base+0x5e>
   2d02e:	ldr	r2, [sp, #56]	; 0x38
   2d030:	add	r3, sp, #12
   2d032:	mov	r1, r5
   2d034:	mov	r0, r4
   2d036:	bl	2cde8 <btrfs_add_corrupt_extent_record@@Base+0x108>
   2d03a:	ldr	r0, [sp, #12]
   2d03c:	b.n	2d040 <btrfs_lookup_inode_ref@@Base+0x60>
   2d03e:	bge.n	2d03a <btrfs_lookup_inode_ref@@Base+0x5a>
   2d040:	ldr	r2, [pc, #28]	; (2d060 <btrfs_lookup_inode_ref@@Base+0x80>)
   2d042:	ldr	r3, [pc, #24]	; (2d05c <btrfs_lookup_inode_ref@@Base+0x7c>)
   2d044:	add	r2, pc
   2d046:	ldr	r3, [r2, r3]
   2d048:	ldr	r2, [r3, #0]
   2d04a:	ldr	r3, [sp, #36]	; 0x24
   2d04c:	eors	r2, r3
   2d04e:	beq.n	2d054 <btrfs_lookup_inode_ref@@Base+0x74>
   2d050:	blx	8510 <__stack_chk_fail@plt>
   2d054:	add	sp, #40	; 0x28
   2d056:	pop	{r4, r5, r6, pc}
   2d058:	ldr	r0, [r3, #88]	; 0x58
   2d05a:	movs	r3, r0
   2d05c:	lsls	r0, r4, #8
   2d05e:	movs	r0, r0
   2d060:	ldr	r0, [r0, #84]	; 0x54
   2d062:	movs	r3, r0

0002d064 <btrfs_lookup_inode_extref@@Base>:
   2d064:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d068:	mov	sl, r2
   2d06a:	ldr	r2, [pc, #152]	; (2d104 <btrfs_lookup_inode_extref@@Base+0xa0>)
   2d06c:	sub	sp, #52	; 0x34
   2d06e:	ldr	r3, [pc, #152]	; (2d108 <btrfs_lookup_inode_extref@@Base+0xa4>)
   2d070:	mov	r5, r0
   2d072:	add	r2, pc
   2d074:	ldrd	r7, r8, [sp, #112]	; 0x70
   2d078:	ldrd	r6, r9, [sp, #96]	; 0x60
   2d07c:	mov	r4, r1
   2d07e:	ldr	r3, [r2, r3]
   2d080:	mov	r1, r7
   2d082:	ldr.w	fp, [sp, #120]	; 0x78
   2d086:	ldr	r3, [r3, #0]
   2d088:	str	r3, [sp, #44]	; 0x2c
   2d08a:	mov.w	r3, #0
   2d08e:	ldrd	r2, r3, [sp, #88]	; 0x58
   2d092:	mov	r0, r6
   2d094:	strd	r2, r3, [sp, #24]
   2d098:	mov	r2, r8
   2d09a:	movs	r3, #13
   2d09c:	strb.w	r3, [sp, #32]
   2d0a0:	bl	16aee <crc32c_le@@Base>
   2d0a4:	movs	r3, #0
   2d0a6:	str.w	r3, [sp, #37]	; 0x25
   2d0aa:	subs.w	r3, fp, r3
   2d0ae:	add	r2, sp, #24
   2d0b0:	mov	r1, sl
   2d0b2:	it	ne
   2d0b4:	movne	r3, #1
   2d0b6:	strd	fp, r3, [sp]
   2d0ba:	mov	r3, r4
   2d0bc:	str.w	r0, [sp, #33]	; 0x21
   2d0c0:	mov	r0, r5
   2d0c2:	bl	19930 <btrfs_search_slot@@Base>
   2d0c6:	cmp	r0, #0
   2d0c8:	blt.n	2d0ce <btrfs_lookup_inode_extref@@Base+0x6a>
   2d0ca:	beq.n	2d0e2 <btrfs_lookup_inode_extref@@Base+0x7e>
   2d0cc:	movs	r0, #0
   2d0ce:	ldr	r2, [pc, #60]	; (2d10c <btrfs_lookup_inode_extref@@Base+0xa8>)
   2d0d0:	ldr	r3, [pc, #52]	; (2d108 <btrfs_lookup_inode_extref@@Base+0xa4>)
   2d0d2:	add	r2, pc
   2d0d4:	ldr	r3, [r2, r3]
   2d0d6:	ldr	r2, [r3, #0]
   2d0d8:	ldr	r3, [sp, #44]	; 0x2c
   2d0da:	eors	r2, r3
   2d0dc:	beq.n	2d0fc <btrfs_lookup_inode_extref@@Base+0x98>
   2d0de:	blx	8510 <__stack_chk_fail@plt>
   2d0e2:	add	r3, sp, #20
   2d0e4:	mov	r2, r6
   2d0e6:	strd	r8, r3, [sp, #4]
   2d0ea:	mov	r0, r4
   2d0ec:	mov	r3, r9
   2d0ee:	str	r7, [sp, #0]
   2d0f0:	bl	2ce48 <btrfs_add_corrupt_extent_record@@Base+0x168>
   2d0f4:	cmp	r0, #0
   2d0f6:	beq.n	2d0cc <btrfs_lookup_inode_extref@@Base+0x68>
   2d0f8:	ldr	r0, [sp, #20]
   2d0fa:	b.n	2d0ce <btrfs_lookup_inode_extref@@Base+0x6a>
   2d0fc:	add	sp, #52	; 0x34
   2d0fe:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d102:	nop
   2d104:	ldr	r2, [r2, #80]	; 0x50
   2d106:	movs	r3, r0
   2d108:	lsls	r0, r4, #8
   2d10a:	movs	r0, r0
   2d10c:	ldr	r2, [r6, #72]	; 0x48
   2d10e:	movs	r3, r0

0002d110 <btrfs_del_inode_extref@@Base>:
   2d110:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d114:	mov	r6, r3
   2d116:	vpush	{d8}
   2d11a:	mov	fp, r2
   2d11c:	ldr	r2, [pc, #284]	; (2d23c <btrfs_del_inode_extref@@Base+0x12c>)
   2d11e:	mov	r8, r0
   2d120:	mov	r7, r1
   2d122:	mov	r1, fp
   2d124:	add	r2, pc
   2d126:	sub	sp, #52	; 0x34
   2d128:	ldrd	sl, r3, [sp, #104]	; 0x68
   2d12c:	ldr.w	r9, [sp, #112]	; 0x70
   2d130:	vmov	s16, r3
   2d134:	ldr	r3, [pc, #264]	; (2d240 <btrfs_del_inode_extref@@Base+0x130>)
   2d136:	mov	r0, sl
   2d138:	ldr	r3, [r2, r3]
   2d13a:	ldr	r3, [r3, #0]
   2d13c:	str	r3, [sp, #44]	; 0x2c
   2d13e:	mov.w	r3, #0
   2d142:	ldrd	r2, r3, [sp, #96]	; 0x60
   2d146:	strd	r2, r3, [sp, #24]
   2d14a:	mov	r2, r6
   2d14c:	movs	r3, #13
   2d14e:	strb.w	r3, [sp, #32]
   2d152:	bl	16aee <crc32c_le@@Base>
   2d156:	movs	r3, #0
   2d158:	str.w	r3, [sp, #37]	; 0x25
   2d15c:	str.w	r0, [sp, #33]	; 0x21
   2d160:	bl	17544 <btrfs_alloc_path@@Base>
   2d164:	mov	r4, r0
   2d166:	cmp	r0, #0
   2d168:	beq.n	2d228 <btrfs_del_inode_extref@@Base+0x118>
   2d16a:	mov.w	r3, #4294967295	; 0xffffffff
   2d16e:	movs	r2, #1
   2d170:	mov	r1, r7
   2d172:	strd	r3, r2, [sp]
   2d176:	mov	r3, r0
   2d178:	add	r2, sp, #24
   2d17a:	mov	r0, r8
   2d17c:	bl	19930 <btrfs_search_slot@@Base>
   2d180:	subs	r5, r0, #0
   2d182:	ble.n	2d1a2 <btrfs_del_inode_extref@@Base+0x92>
   2d184:	mvn.w	r5, #1
   2d188:	mov	r0, r4
   2d18a:	bl	17572 <btrfs_free_path@@Base>
   2d18e:	ldr	r2, [pc, #180]	; (2d244 <btrfs_del_inode_extref@@Base+0x134>)
   2d190:	ldr	r3, [pc, #172]	; (2d240 <btrfs_del_inode_extref@@Base+0x130>)
   2d192:	add	r2, pc
   2d194:	ldr	r3, [r2, r3]
   2d196:	ldr	r2, [r3, #0]
   2d198:	ldr	r3, [sp, #44]	; 0x2c
   2d19a:	eors	r2, r3
   2d19c:	beq.n	2d22e <btrfs_del_inode_extref@@Base+0x11e>
   2d19e:	blx	8510 <__stack_chk_fail@plt>
   2d1a2:	bne.n	2d188 <btrfs_del_inode_extref@@Base+0x78>
   2d1a4:	add	r3, sp, #20
   2d1a6:	mov	r2, sl
   2d1a8:	strd	r6, r3, [sp, #4]
   2d1ac:	mov	r0, r4
   2d1ae:	vmov	r3, s16
   2d1b2:	str.w	fp, [sp]
   2d1b6:	bl	2ce48 <btrfs_add_corrupt_extent_record@@Base+0x168>
   2d1ba:	cmp	r0, #0
   2d1bc:	beq.n	2d184 <btrfs_del_inode_extref@@Base+0x74>
   2d1be:	ldr	r0, [r4, #0]
   2d1c0:	movs	r2, #25
   2d1c2:	ldr	r3, [r4, #32]
   2d1c4:	add.w	ip, r0, #96	; 0x60
   2d1c8:	mla	r3, r2, r3, ip
   2d1cc:	ldr.w	sl, [r3, #122]	; 0x7a
   2d1d0:	cmp.w	r9, #0
   2d1d4:	beq.n	2d1e2 <btrfs_del_inode_extref@@Base+0xd2>
   2d1d6:	ldr	r2, [sp, #20]
   2d1d8:	add	r2, ip
   2d1da:	ldr	r1, [r2, #8]
   2d1dc:	ldr	r3, [r2, #12]
   2d1de:	strd	r1, r3, [r9]
   2d1e2:	adds	r6, #18
   2d1e4:	ldr	r3, [r4, #32]
   2d1e6:	cmp	r6, sl
   2d1e8:	bne.n	2d1fc <btrfs_del_inode_extref@@Base+0xec>
   2d1ea:	movs	r2, #1
   2d1ec:	mov	r1, r7
   2d1ee:	str	r2, [sp, #0]
   2d1f0:	mov	r0, r8
   2d1f2:	mov	r2, r4
   2d1f4:	bl	1aaec <btrfs_del_items@@Base>
   2d1f8:	mov	r5, r0
   2d1fa:	b.n	2d188 <btrfs_del_inode_extref@@Base+0x78>
   2d1fc:	mov.w	lr, #25
   2d200:	ldr	r1, [sp, #20]
   2d202:	mla	r3, lr, r3, ip
   2d206:	adds	r2, r6, r1
   2d208:	ldr.w	ip, [r3, #118]	; 0x76
   2d20c:	rsb	r3, r2, #101	; 0x65
   2d210:	add	r3, sl
   2d212:	add	r3, ip
   2d214:	bl	16a80 <memmove_extent_buffer@@Base>
   2d218:	sub.w	r2, sl, r6
   2d21c:	movs	r3, #1
   2d21e:	mov	r1, r4
   2d220:	mov	r0, r7
   2d222:	bl	19570 <btrfs_truncate_item@@Base>
   2d226:	b.n	2d188 <btrfs_del_inode_extref@@Base+0x78>
   2d228:	mvn.w	r5, #11
   2d22c:	b.n	2d18e <btrfs_del_inode_extref@@Base+0x7e>
   2d22e:	mov	r0, r5
   2d230:	add	sp, #52	; 0x34
   2d232:	vpop	{d8}
   2d236:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d23a:	nop
   2d23c:	ldr	r0, [r4, #68]	; 0x44
   2d23e:	movs	r3, r0
   2d240:	lsls	r0, r4, #8
   2d242:	movs	r0, r0
   2d244:	ldr	r2, [r6, #60]	; 0x3c
   2d246:	movs	r3, r0

0002d248 <btrfs_insert_inode_extref@@Base>:
   2d248:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d24c:	sub	sp, #68	; 0x44
   2d24e:	mov	r6, r3
   2d250:	mov	r7, r2
   2d252:	ldrd	sl, r3, [sp, #112]	; 0x70
   2d256:	mov	r5, r0
   2d258:	ldr	r2, [pc, #260]	; (2d360 <btrfs_insert_inode_extref@@Base+0x118>)
   2d25a:	mov	r9, r1
   2d25c:	mov	r1, r7
   2d25e:	mov.w	fp, #0
   2d262:	str	r3, [sp, #20]
   2d264:	add	r2, pc
   2d266:	ldr	r3, [sp, #120]	; 0x78
   2d268:	mov	r0, sl
   2d26a:	add.w	r8, r6, #18
   2d26e:	str	r3, [sp, #24]
   2d270:	ldr	r3, [sp, #124]	; 0x7c
   2d272:	str	r3, [sp, #28]
   2d274:	ldr	r3, [pc, #236]	; (2d364 <btrfs_insert_inode_extref@@Base+0x11c>)
   2d276:	ldr	r3, [r2, r3]
   2d278:	ldr	r3, [r3, #0]
   2d27a:	str	r3, [sp, #60]	; 0x3c
   2d27c:	mov.w	r3, #0
   2d280:	ldrd	r2, r3, [sp, #104]	; 0x68
   2d284:	strd	r2, r3, [sp, #40]	; 0x28
   2d288:	mov	r2, r6
   2d28a:	movs	r3, #13
   2d28c:	strb.w	r3, [sp, #48]	; 0x30
   2d290:	bl	16aee <crc32c_le@@Base>
   2d294:	str.w	fp, [sp, #53]	; 0x35
   2d298:	str.w	r0, [sp, #49]	; 0x31
   2d29c:	bl	17544 <btrfs_alloc_path@@Base>
   2d2a0:	mov	r4, r0
   2d2a2:	cmp	r0, #0
   2d2a4:	beq.n	2d350 <btrfs_insert_inode_extref@@Base+0x108>
   2d2a6:	movs	r3, #1
   2d2a8:	mov	r2, r0
   2d2aa:	str	r3, [sp, #4]
   2d2ac:	mov	r0, r5
   2d2ae:	add	r3, sp, #36	; 0x24
   2d2b0:	mov	r1, r9
   2d2b2:	str	r3, [sp, #0]
   2d2b4:	add	r3, sp, #40	; 0x28
   2d2b6:	str.w	r8, [sp, #36]	; 0x24
   2d2ba:	bl	1a700 <btrfs_insert_empty_items@@Base>
   2d2be:	cmn.w	r0, #17
   2d2c2:	mov	r5, r0
   2d2c4:	bne.n	2d332 <btrfs_insert_inode_extref@@Base+0xea>
   2d2c6:	strd	r6, fp, [sp, #4]
   2d2ca:	mov	r2, sl
   2d2cc:	ldr	r3, [sp, #20]
   2d2ce:	mov	r0, r4
   2d2d0:	str	r7, [sp, #0]
   2d2d2:	bl	2ce48 <btrfs_add_corrupt_extent_record@@Base+0x168>
   2d2d6:	mov	fp, r0
   2d2d8:	cbnz	r0, 2d336 <btrfs_insert_inode_extref@@Base+0xee>
   2d2da:	mov	r2, r8
   2d2dc:	mov	r1, r4
   2d2de:	mov	r0, r9
   2d2e0:	mov	r5, fp
   2d2e2:	bl	19724 <btrfs_extend_item@@Base>
   2d2e6:	ldr	r3, [r4, #0]
   2d2e8:	movs	r2, #25
   2d2ea:	ldr	r1, [r4, #32]
   2d2ec:	rsb	r8, r8, #101	; 0x65
   2d2f0:	adds	r3, #96	; 0x60
   2d2f2:	mla	r1, r2, r1, r3
   2d2f6:	ldr.w	r2, [r1, #118]	; 0x76
   2d2fa:	add	r8, r2
   2d2fc:	ldr.w	r2, [r1, #122]	; 0x7a
   2d300:	ldr	r1, [sp, #24]
   2d302:	add	r2, r8
   2d304:	add	r3, r2
   2d306:	strh	r6, [r3, #16]
   2d308:	ldr	r3, [r4, #0]
   2d30a:	add	r3, r2
   2d30c:	str	r1, [r3, #104]	; 0x68
   2d30e:	ldr	r1, [sp, #28]
   2d310:	str	r1, [r3, #108]	; 0x6c
   2d312:	ldr	r3, [r4, #0]
   2d314:	ldr	r1, [sp, #20]
   2d316:	add	r3, r2
   2d318:	adds	r2, #18
   2d31a:	str.w	sl, [r3, #96]	; 0x60
   2d31e:	str	r1, [r3, #100]	; 0x64
   2d320:	mov	r3, r6
   2d322:	ldr	r0, [r4, #0]
   2d324:	mov	r1, r7
   2d326:	bl	16a24 <write_extent_buffer@@Base>
   2d32a:	ldr	r0, [r4, #0]
   2d32c:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   2d330:	b.n	2d336 <btrfs_insert_inode_extref@@Base+0xee>
   2d332:	cmp	r0, #0
   2d334:	bge.n	2d2e6 <btrfs_insert_inode_extref@@Base+0x9e>
   2d336:	mov	r0, r4
   2d338:	bl	17572 <btrfs_free_path@@Base>
   2d33c:	ldr	r2, [pc, #40]	; (2d368 <btrfs_insert_inode_extref@@Base+0x120>)
   2d33e:	ldr	r3, [pc, #36]	; (2d364 <btrfs_insert_inode_extref@@Base+0x11c>)
   2d340:	add	r2, pc
   2d342:	ldr	r3, [r2, r3]
   2d344:	ldr	r2, [r3, #0]
   2d346:	ldr	r3, [sp, #60]	; 0x3c
   2d348:	eors	r2, r3
   2d34a:	beq.n	2d356 <btrfs_insert_inode_extref@@Base+0x10e>
   2d34c:	blx	8510 <__stack_chk_fail@plt>
   2d350:	mvn.w	r5, #11
   2d354:	b.n	2d33c <btrfs_insert_inode_extref@@Base+0xf4>
   2d356:	mov	r0, r5
   2d358:	add	sp, #68	; 0x44
   2d35a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d35e:	nop
   2d360:	ldr	r0, [r4, #48]	; 0x30
   2d362:	movs	r3, r0
   2d364:	lsls	r0, r4, #8
   2d366:	movs	r0, r0
   2d368:	ldr	r4, [r0, #36]	; 0x24
   2d36a:	movs	r3, r0

0002d36c <btrfs_insert_inode_ref@@Base>:
   2d36c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d370:	sub	sp, #148	; 0x94
   2d372:	mov	r6, r3
   2d374:	mov	r8, r2
   2d376:	ldr	r3, [sp, #192]	; 0xc0
   2d378:	mov	r9, r0
   2d37a:	ldr	r2, [pc, #424]	; (2d524 <btrfs_insert_inode_ref@@Base+0x1b8>)
   2d37c:	mov	r7, r1
   2d37e:	ldr.w	fp, [sp, #204]	; 0xcc
   2d382:	str	r3, [sp, #36]	; 0x24
   2d384:	add	r2, pc
   2d386:	ldr	r3, [sp, #196]	; 0xc4
   2d388:	str	r3, [sp, #40]	; 0x28
   2d38a:	ldr	r3, [sp, #200]	; 0xc8
   2d38c:	str	r3, [sp, #24]
   2d38e:	ldr	r3, [pc, #408]	; (2d528 <btrfs_insert_inode_ref@@Base+0x1bc>)
   2d390:	add	r3, pc
   2d392:	str	r3, [sp, #32]
   2d394:	ldr	r3, [pc, #404]	; (2d52c <btrfs_insert_inode_ref@@Base+0x1c0>)
   2d396:	ldr	r3, [r2, r3]
   2d398:	ldr	r3, [r3, #0]
   2d39a:	str	r3, [sp, #140]	; 0x8c
   2d39c:	mov.w	r3, #0
   2d3a0:	add.w	r3, r6, #10
   2d3a4:	str	r3, [sp, #28]
   2d3a6:	ldrd	r3, r4, [sp, #184]	; 0xb8
   2d3aa:	strd	r3, r4, [sp, #56]	; 0x38
   2d3ae:	ldr	r3, [sp, #36]	; 0x24
   2d3b0:	str.w	r3, [sp, #65]	; 0x41
   2d3b4:	ldr	r3, [sp, #40]	; 0x28
   2d3b6:	str.w	r3, [sp, #69]	; 0x45
   2d3ba:	movs	r3, #12
   2d3bc:	strb.w	r3, [sp, #64]	; 0x40
   2d3c0:	bl	17544 <btrfs_alloc_path@@Base>
   2d3c4:	mov	r4, r0
   2d3c6:	cmp	r0, #0
   2d3c8:	beq.w	2d516 <btrfs_insert_inode_ref@@Base+0x1aa>
   2d3cc:	ldr	r3, [sp, #28]
   2d3ce:	mov	r2, r0
   2d3d0:	add.w	sl, sp, #52	; 0x34
   2d3d4:	mov	r1, r7
   2d3d6:	mov	r0, r9
   2d3d8:	str.w	sl, [sp]
   2d3dc:	str	r3, [sp, #52]	; 0x34
   2d3de:	movs	r3, #1
   2d3e0:	str	r3, [sp, #4]
   2d3e2:	add	r3, sp, #56	; 0x38
   2d3e4:	bl	1a700 <btrfs_insert_empty_items@@Base>
   2d3e8:	cmn.w	r0, #17
   2d3ec:	mov	r5, r0
   2d3ee:	bne.n	2d49e <btrfs_insert_inode_ref@@Base+0x132>
   2d3f0:	mov	r3, sl
   2d3f2:	mov	r2, r6
   2d3f4:	mov	r1, r8
   2d3f6:	mov	r0, r4
   2d3f8:	bl	2cde8 <btrfs_add_corrupt_extent_record@@Base+0x108>
   2d3fc:	cmp	r0, #0
   2d3fe:	bne.n	2d4ac <btrfs_insert_inode_ref@@Base+0x140>
   2d400:	ldr	r2, [r4, #0]
   2d402:	mov.w	sl, #25
   2d406:	ldr	r3, [r4, #32]
   2d408:	mov	r1, r4
   2d40a:	mov	r0, r7
   2d40c:	mla	r3, sl, r3, r2
   2d410:	ldr	r2, [sp, #28]
   2d412:	ldr.w	r3, [r3, #218]	; 0xda
   2d416:	str	r3, [sp, #44]	; 0x2c
   2d418:	bl	19724 <btrfs_extend_item@@Base>
   2d41c:	ldr	r3, [sp, #44]	; 0x2c
   2d41e:	mov	r5, r0
   2d420:	cbz	r0, 2d462 <btrfs_insert_inode_ref@@Base+0xf6>
   2d422:	ldr	r2, [sp, #32]
   2d424:	add	r4, sp, #76	; 0x4c
   2d426:	ldr	r3, [pc, #264]	; (2d530 <btrfs_insert_inode_ref@@Base+0x1c4>)
   2d428:	movs	r1, #1
   2d42a:	ldr	r0, [r2, r3]
   2d42c:	ldr	r3, [pc, #260]	; (2d534 <btrfs_insert_inode_ref@@Base+0x1c8>)
   2d42e:	ldr	r2, [pc, #264]	; (2d538 <btrfs_insert_inode_ref@@Base+0x1cc>)
   2d430:	add	r3, pc
   2d432:	str	r3, [sp, #8]
   2d434:	ldr	r3, [pc, #260]	; (2d53c <btrfs_insert_inode_ref@@Base+0x1d0>)
   2d436:	add	r2, pc
   2d438:	str	r5, [sp, #12]
   2d43a:	add	r3, pc
   2d43c:	str	r3, [sp, #4]
   2d43e:	movs	r3, #83	; 0x53
   2d440:	str	r3, [sp, #0]
   2d442:	ldr	r3, [pc, #252]	; (2d540 <btrfs_insert_inode_ref@@Base+0x1d4>)
   2d444:	ldr	r0, [r0, #0]
   2d446:	add	r3, pc
   2d448:	blx	8860 <__fprintf_chk@plt+0x4>
   2d44c:	movs	r1, #16
   2d44e:	mov	r0, r4
   2d450:	blx	86c4 <backtrace@plt>
   2d454:	movs	r2, #2
   2d456:	mov	r1, r0
   2d458:	mov	r0, r4
   2d45a:	blx	89c8 <backtrace_symbols_fd@plt>
   2d45e:	blx	8980 <abort@plt>
   2d462:	ldr	r2, [r4, #32]
   2d464:	ldr	r1, [r4, #0]
   2d466:	mla	r2, sl, r2, r1
   2d46a:	ldr.w	r2, [r2, #214]	; 0xd6
   2d46e:	add	r3, r2
   2d470:	adds	r3, #101	; 0x65
   2d472:	str	r3, [sp, #52]	; 0x34
   2d474:	ldr	r2, [r4, #0]
   2d476:	mov	r1, r8
   2d478:	add	r2, r3
   2d47a:	strh.w	r6, [r2, #104]	; 0x68
   2d47e:	ldr	r2, [r4, #0]
   2d480:	add	r3, r2
   2d482:	ldr	r2, [sp, #24]
   2d484:	str.w	fp, [r3, #100]	; 0x64
   2d488:	str	r2, [r3, #96]	; 0x60
   2d48a:	mov	r3, r6
   2d48c:	ldr	r2, [sp, #52]	; 0x34
   2d48e:	ldr	r0, [r4, #0]
   2d490:	adds	r2, #10
   2d492:	bl	16a24 <write_extent_buffer@@Base>
   2d496:	ldr	r0, [r4, #0]
   2d498:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   2d49c:	b.n	2d4ac <btrfs_insert_inode_ref@@Base+0x140>
   2d49e:	cmp	r0, #0
   2d4a0:	bge.n	2d506 <btrfs_insert_inode_ref@@Base+0x19a>
   2d4a2:	cmn.w	r0, #75	; 0x4b
   2d4a6:	it	eq
   2d4a8:	mvneq.w	r5, #30
   2d4ac:	mov	r0, r4
   2d4ae:	bl	17572 <btrfs_free_path@@Base>
   2d4b2:	cmn.w	r5, #31
   2d4b6:	bne.n	2d4f2 <btrfs_insert_inode_ref@@Base+0x186>
   2d4b8:	ldr.w	r3, [r7, #464]	; 0x1d0
   2d4bc:	ldr.w	r3, [r3, #308]	; 0x134
   2d4c0:	ldr.w	r1, [r3, #188]	; 0xbc
   2d4c4:	movs	r3, #0
   2d4c6:	and.w	r2, r1, #64	; 0x40
   2d4ca:	orrs	r3, r2
   2d4cc:	beq.n	2d4f2 <btrfs_insert_inode_ref@@Base+0x186>
   2d4ce:	ldr	r3, [sp, #24]
   2d4d0:	mov	r2, r8
   2d4d2:	mov	r1, r7
   2d4d4:	mov	r0, r9
   2d4d6:	strd	r3, fp, [sp, #16]
   2d4da:	ldr	r3, [sp, #36]	; 0x24
   2d4dc:	str	r3, [sp, #8]
   2d4de:	ldr	r3, [sp, #40]	; 0x28
   2d4e0:	str	r3, [sp, #12]
   2d4e2:	ldrd	r3, r4, [sp, #184]	; 0xb8
   2d4e6:	strd	r3, r4, [sp]
   2d4ea:	mov	r3, r6
   2d4ec:	bl	2d248 <btrfs_insert_inode_extref@@Base>
   2d4f0:	mov	r5, r0
   2d4f2:	ldr	r2, [pc, #80]	; (2d544 <btrfs_insert_inode_ref@@Base+0x1d8>)
   2d4f4:	ldr	r3, [pc, #52]	; (2d52c <btrfs_insert_inode_ref@@Base+0x1c0>)
   2d4f6:	add	r2, pc
   2d4f8:	ldr	r3, [r2, r3]
   2d4fa:	ldr	r2, [r3, #0]
   2d4fc:	ldr	r3, [sp, #140]	; 0x8c
   2d4fe:	eors	r2, r3
   2d500:	beq.n	2d51c <btrfs_insert_inode_ref@@Base+0x1b0>
   2d502:	blx	8510 <__stack_chk_fail@plt>
   2d506:	ldr	r3, [r4, #32]
   2d508:	movs	r1, #25
   2d50a:	ldr	r2, [r4, #0]
   2d50c:	mla	r3, r1, r3, r2
   2d510:	ldr.w	r3, [r3, #214]	; 0xd6
   2d514:	b.n	2d470 <btrfs_insert_inode_ref@@Base+0x104>
   2d516:	mvn.w	r5, #11
   2d51a:	b.n	2d4f2 <btrfs_insert_inode_ref@@Base+0x186>
   2d51c:	mov	r0, r5
   2d51e:	add	sp, #148	; 0x94
   2d520:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d524:	ldr	r0, [r0, #32]
   2d526:	movs	r3, r0
   2d528:	ldr	r4, [r6, #28]
   2d52a:	movs	r3, r0
   2d52c:	lsls	r0, r4, #8
   2d52e:	movs	r0, r0
   2d530:	lsls	r0, r6, #8
   2d532:	movs	r0, r0
   2d534:	stmia	r0!, {r2, r4, r5, r7}
   2d536:	movs	r0, r0
   2d538:	rev16	r4, r5
   2d53a:	movs	r0, r0
   2d53c:	cmp	r5, #217	; 0xd9
   2d53e:	movs	r1, r0
   2d540:	cmp	r5, #192	; 0xc0
   2d542:	movs	r1, r0
   2d544:	ldr	r6, [r1, #8]
   2d546:	movs	r3, r0

0002d548 <btrfs_del_inode_ref@@Base>:
   2d548:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d54c:	sub	sp, #76	; 0x4c
   2d54e:	mov	r8, r3
   2d550:	mov	r9, r2
   2d552:	ldr	r3, [sp, #120]	; 0x78
   2d554:	mov	r7, r0
   2d556:	ldr	r2, [pc, #356]	; (2d6bc <btrfs_del_inode_ref@@Base+0x174>)
   2d558:	mov	r6, r1
   2d55a:	ldr.w	sl, [sp, #128]	; 0x80
   2d55e:	str	r3, [sp, #32]
   2d560:	add	r2, pc
   2d562:	ldr	r3, [sp, #124]	; 0x7c
   2d564:	str	r3, [sp, #36]	; 0x24
   2d566:	ldr	r3, [pc, #344]	; (2d6c0 <btrfs_del_inode_ref@@Base+0x178>)
   2d568:	ldr	r3, [r2, r3]
   2d56a:	ldr	r3, [r3, #0]
   2d56c:	str	r3, [sp, #68]	; 0x44
   2d56e:	mov.w	r3, #0
   2d572:	ldrd	r3, r4, [sp, #112]	; 0x70
   2d576:	strd	r3, r4, [sp, #48]	; 0x30
   2d57a:	ldr	r3, [sp, #32]
   2d57c:	str.w	r3, [sp, #57]	; 0x39
   2d580:	ldr	r3, [sp, #36]	; 0x24
   2d582:	str.w	r3, [sp, #61]	; 0x3d
   2d586:	movs	r3, #12
   2d588:	strb.w	r3, [sp, #56]	; 0x38
   2d58c:	bl	17544 <btrfs_alloc_path@@Base>
   2d590:	mov	r5, r0
   2d592:	cmp	r0, #0
   2d594:	beq.w	2d6ae <btrfs_del_inode_ref@@Base+0x166>
   2d598:	mov.w	r3, #4294967295	; 0xffffffff
   2d59c:	movs	r2, #1
   2d59e:	mov	r1, r6
   2d5a0:	strd	r3, r2, [sp]
   2d5a4:	mov	r3, r0
   2d5a6:	add	r2, sp, #48	; 0x30
   2d5a8:	mov	r0, r7
   2d5aa:	bl	19930 <btrfs_search_slot@@Base>
   2d5ae:	subs	r4, r0, #0
   2d5b0:	ble.n	2d612 <btrfs_del_inode_ref@@Base+0xca>
   2d5b2:	mov.w	fp, #1
   2d5b6:	mvn.w	r4, #1
   2d5ba:	mov	r0, r5
   2d5bc:	bl	17572 <btrfs_free_path@@Base>
   2d5c0:	cmp.w	fp, #0
   2d5c4:	beq.n	2d5fe <btrfs_del_inode_ref@@Base+0xb6>
   2d5c6:	ldr.w	r3, [r6, #464]	; 0x1d0
   2d5ca:	ldr.w	r3, [r3, #308]	; 0x134
   2d5ce:	ldr.w	r1, [r3, #188]	; 0xbc
   2d5d2:	movs	r3, #0
   2d5d4:	and.w	r2, r1, #64	; 0x40
   2d5d8:	orrs	r3, r2
   2d5da:	beq.n	2d5fe <btrfs_del_inode_ref@@Base+0xb6>
   2d5dc:	ldr	r3, [sp, #32]
   2d5de:	mov	r2, r9
   2d5e0:	mov	r1, r6
   2d5e2:	mov	r0, r7
   2d5e4:	str.w	sl, [sp, #16]
   2d5e8:	str	r3, [sp, #8]
   2d5ea:	ldr	r3, [sp, #36]	; 0x24
   2d5ec:	str	r3, [sp, #12]
   2d5ee:	ldrd	r3, r4, [sp, #112]	; 0x70
   2d5f2:	strd	r3, r4, [sp]
   2d5f6:	mov	r3, r8
   2d5f8:	bl	2d110 <btrfs_del_inode_extref@@Base>
   2d5fc:	mov	r4, r0
   2d5fe:	ldr	r2, [pc, #196]	; (2d6c4 <btrfs_del_inode_ref@@Base+0x17c>)
   2d600:	ldr	r3, [pc, #188]	; (2d6c0 <btrfs_del_inode_ref@@Base+0x178>)
   2d602:	add	r2, pc
   2d604:	ldr	r3, [r2, r3]
   2d606:	ldr	r2, [r3, #0]
   2d608:	ldr	r3, [sp, #68]	; 0x44
   2d60a:	eors	r2, r3
   2d60c:	beq.n	2d6b4 <btrfs_del_inode_ref@@Base+0x16c>
   2d60e:	blx	8510 <__stack_chk_fail@plt>
   2d612:	bne.n	2d6a8 <btrfs_del_inode_ref@@Base+0x160>
   2d614:	add	r3, sp, #44	; 0x2c
   2d616:	mov	r2, r8
   2d618:	mov	r1, r9
   2d61a:	mov	r0, r5
   2d61c:	bl	2cde8 <btrfs_add_corrupt_extent_record@@Base+0x108>
   2d620:	cmp	r0, #0
   2d622:	beq.n	2d5b2 <btrfs_del_inode_ref@@Base+0x6a>
   2d624:	ldr	r0, [r5, #0]
   2d626:	movs	r2, #25
   2d628:	ldr	r3, [r5, #32]
   2d62a:	add.w	ip, r0, #96	; 0x60
   2d62e:	mla	r3, r2, r3, ip
   2d632:	ldr.w	r3, [r3, #122]	; 0x7a
   2d636:	str	r3, [sp, #28]
   2d638:	cmp.w	sl, #0
   2d63c:	beq.n	2d64e <btrfs_del_inode_ref@@Base+0x106>
   2d63e:	ldr	r3, [sp, #44]	; 0x2c
   2d640:	add.w	r1, ip, r3
   2d644:	ldr.w	r2, [ip, r3]
   2d648:	ldr	r3, [r1, #4]
   2d64a:	strd	r2, r3, [sl]
   2d64e:	ldr	r2, [sp, #28]
   2d650:	add.w	fp, r8, #10
   2d654:	ldr	r3, [r5, #32]
   2d656:	cmp	fp, r2
   2d658:	bne.n	2d66e <btrfs_del_inode_ref@@Base+0x126>
   2d65a:	movs	r2, #1
   2d65c:	mov	r1, r6
   2d65e:	str	r2, [sp, #0]
   2d660:	mov	r0, r7
   2d662:	mov	r2, r5
   2d664:	mov	fp, r4
   2d666:	bl	1aaec <btrfs_del_items@@Base>
   2d66a:	mov	r4, r0
   2d66c:	b.n	2d5ba <btrfs_del_inode_ref@@Base+0x72>
   2d66e:	mov.w	lr, #25
   2d672:	ldr	r1, [sp, #44]	; 0x2c
   2d674:	mla	r3, lr, r3, ip
   2d678:	add.w	r2, fp, r1
   2d67c:	rsb	lr, r2, #101	; 0x65
   2d680:	ldr.w	ip, [r3, #118]	; 0x76
   2d684:	ldr	r3, [sp, #28]
   2d686:	add	r3, lr
   2d688:	add	r3, ip
   2d68a:	bl	16a80 <memmove_extent_buffer@@Base>
   2d68e:	ldr	r2, [sp, #28]
   2d690:	movs	r3, #1
   2d692:	mov	r1, r5
   2d694:	sub.w	r2, r2, fp
   2d698:	mov	r0, r6
   2d69a:	bl	19570 <btrfs_truncate_item@@Base>
   2d69e:	ldr	r0, [r5, #0]
   2d6a0:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   2d6a4:	mov	fp, r4
   2d6a6:	b.n	2d5ba <btrfs_del_inode_ref@@Base+0x72>
   2d6a8:	mov.w	fp, #0
   2d6ac:	b.n	2d5ba <btrfs_del_inode_ref@@Base+0x72>
   2d6ae:	mvn.w	r4, #11
   2d6b2:	b.n	2d5fe <btrfs_del_inode_ref@@Base+0xb6>
   2d6b4:	mov	r0, r4
   2d6b6:	add	sp, #76	; 0x4c
   2d6b8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d6bc:	ldr	r4, [r4, #0]
   2d6be:	movs	r3, r0
   2d6c0:	lsls	r0, r4, #8
   2d6c2:	movs	r0, r0
   2d6c4:	str	r2, [r0, #120]	; 0x78
   2d6c6:	movs	r3, r0
   2d6c8:	ldr	r2, [pc, #60]	; (2d708 <btrfs_del_inode_ref@@Base+0x1c0>)
   2d6ca:	movs	r1, #16
   2d6cc:	ldr	r3, [pc, #60]	; (2d70c <btrfs_del_inode_ref@@Base+0x1c4>)
   2d6ce:	push	{r4, lr}
   2d6d0:	add	r2, pc
   2d6d2:	sub	sp, #72	; 0x48
   2d6d4:	add	r4, sp, #4
   2d6d6:	ldr	r3, [r2, r3]
   2d6d8:	mov	r0, r4
   2d6da:	ldr	r3, [r3, #0]
   2d6dc:	str	r3, [sp, #68]	; 0x44
   2d6de:	mov.w	r3, #0
   2d6e2:	blx	86c4 <backtrace@plt>
   2d6e6:	movs	r2, #2
   2d6e8:	mov	r1, r0
   2d6ea:	mov	r0, r4
   2d6ec:	blx	89c8 <backtrace_symbols_fd@plt>
   2d6f0:	ldr	r2, [pc, #28]	; (2d710 <btrfs_del_inode_ref@@Base+0x1c8>)
   2d6f2:	ldr	r3, [pc, #24]	; (2d70c <btrfs_del_inode_ref@@Base+0x1c4>)
   2d6f4:	add	r2, pc
   2d6f6:	ldr	r3, [r2, r3]
   2d6f8:	ldr	r2, [r3, #0]
   2d6fa:	ldr	r3, [sp, #68]	; 0x44
   2d6fc:	eors	r2, r3
   2d6fe:	beq.n	2d704 <btrfs_del_inode_ref@@Base+0x1bc>
   2d700:	blx	8510 <__stack_chk_fail@plt>
   2d704:	add	sp, #72	; 0x48
   2d706:	pop	{r4, pc}
   2d708:	str	r4, [r6, #104]	; 0x68
   2d70a:	movs	r3, r0
   2d70c:	lsls	r0, r4, #8
   2d70e:	movs	r0, r0
   2d710:	str	r0, [r2, #104]	; 0x68
   2d712:	movs	r3, r0
   2d714:	push	{r4, lr}
   2d716:	mov	r4, r1
   2d718:	ldr	r1, [pc, #84]	; (2d770 <btrfs_del_inode_ref@@Base+0x228>)
   2d71a:	sub	sp, #24
   2d71c:	ldr	r3, [pc, #84]	; (2d774 <btrfs_del_inode_ref@@Base+0x22c>)
   2d71e:	add	r1, pc
   2d720:	ldr	r3, [r1, r3]
   2d722:	mov	r1, sp
   2d724:	ldr	r3, [r3, #0]
   2d726:	str	r3, [sp, #20]
   2d728:	mov.w	r3, #0
   2d72c:	movs	r3, #25
   2d72e:	muls	r2, r3
   2d730:	movs	r3, #17
   2d732:	adds	r2, #101	; 0x65
   2d734:	bl	16a0e <read_extent_buffer@@Base>
   2d738:	ldr.w	r3, [sp, #13]
   2d73c:	ldr.w	r2, [sp, #9]
   2d740:	str.w	r3, [r4, #13]
   2d744:	ldrb.w	r3, [sp, #8]
   2d748:	str.w	r2, [r4, #9]
   2d74c:	ldr	r2, [pc, #40]	; (2d778 <btrfs_del_inode_ref@@Base+0x230>)
   2d74e:	strb	r3, [r4, #8]
   2d750:	ldr	r3, [sp, #0]
   2d752:	add	r2, pc
   2d754:	str	r3, [r4, #0]
   2d756:	ldr	r3, [sp, #4]
   2d758:	str	r3, [r4, #4]
   2d75a:	ldr	r3, [pc, #24]	; (2d774 <btrfs_del_inode_ref@@Base+0x22c>)
   2d75c:	ldr	r3, [r2, r3]
   2d75e:	ldr	r2, [r3, #0]
   2d760:	ldr	r3, [sp, #20]
   2d762:	eors	r2, r3
   2d764:	beq.n	2d76a <btrfs_del_inode_ref@@Base+0x222>
   2d766:	blx	8510 <__stack_chk_fail@plt>
   2d76a:	add	sp, #24
   2d76c:	pop	{r4, pc}
   2d76e:	nop
   2d770:	str	r6, [r4, #100]	; 0x64
   2d772:	movs	r3, r0
   2d774:	lsls	r0, r4, #8
   2d776:	movs	r0, r0
   2d778:	str	r2, [r6, #96]	; 0x60
   2d77a:	movs	r3, r0
   2d77c:	push	{r0, r1, r2, r3, r4, lr}
   2d77e:	ldr	r4, [pc, #40]	; (2d7a8 <btrfs_del_inode_ref@@Base+0x260>)
   2d780:	ldr	r5, [pc, #40]	; (2d7ac <btrfs_del_inode_ref@@Base+0x264>)
   2d782:	add	r4, pc
   2d784:	ldr	r4, [r4, r5]
   2d786:	strd	r2, r1, [sp]
   2d78a:	movs	r1, #1
   2d78c:	strd	r0, r3, [sp, #8]
   2d790:	ldr	r2, [pc, #28]	; (2d7b0 <btrfs_del_inode_ref@@Base+0x268>)
   2d792:	ldr	r3, [pc, #32]	; (2d7b4 <btrfs_del_inode_ref@@Base+0x26c>)
   2d794:	add	r2, pc
   2d796:	ldr	r0, [r4, #0]
   2d798:	add	r3, pc
   2d79a:	blx	8860 <__fprintf_chk@plt+0x4>
   2d79e:	bl	2d6c8 <btrfs_del_inode_ref@@Base+0x180>
   2d7a2:	blx	8980 <abort@plt>
   2d7a6:	nop
   2d7a8:	str	r2, [r0, #96]	; 0x60
   2d7aa:	movs	r3, r0
   2d7ac:	lsls	r0, r6, #8
   2d7ae:	movs	r0, r0
   2d7b0:			; <UNDEFINED> instruction: 0xb70e
   2d7b2:	movs	r0, r0
   2d7b4:	cmp	r2, #146	; 0x92
   2d7b6:	movs	r1, r0
   2d7b8:	push	{r3, lr}
   2d7ba:	cbz	r3, 2d7c0 <btrfs_del_inode_ref@@Base+0x278>
   2d7bc:	bl	2d77c <btrfs_del_inode_ref@@Base+0x234>
   2d7c0:	pop	{r3, pc}

0002d7c2 <btrfs_insert_file_extent@@Base>:
   2d7c2:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d7c6:	sub	sp, #60	; 0x3c
   2d7c8:	mov	r8, r3
   2d7ca:	mov	r6, r1
   2d7cc:	ldr	r3, [sp, #96]	; 0x60
   2d7ce:	mov	r5, r0
   2d7d0:	str	r2, [sp, #16]
   2d7d2:	movs	r0, #0
   2d7d4:	ldr	r2, [pc, #312]	; (2d910 <btrfs_insert_file_extent@@Base+0x14e>)
   2d7d6:	str	r3, [sp, #12]
   2d7d8:	ldr	r3, [pc, #312]	; (2d914 <btrfs_insert_file_extent@@Base+0x152>)
   2d7da:	add	r2, pc
   2d7dc:	ldr	r1, [sp, #100]	; 0x64
   2d7de:	ldrd	r7, fp, [sp, #112]	; 0x70
   2d7e2:	ldr	r3, [r2, r3]
   2d7e4:	ldrd	sl, r9, [sp, #120]	; 0x78
   2d7e8:	ldr	r3, [r3, #0]
   2d7ea:	str	r3, [sp, #52]	; 0x34
   2d7ec:	mov.w	r3, #0
   2d7f0:	ldr.w	r3, [r6, #464]	; 0x1d0
   2d7f4:	ldr.w	r3, [r3, #308]	; 0x134
   2d7f8:	ldr.w	ip, [r3, #188]	; 0xbc
   2d7fc:	mov	r3, r0
   2d7fe:	and.w	r2, ip, #512	; 0x200
   2d802:	orrs	r3, r2
   2d804:	ldrd	r3, r4, [sp, #104]	; 0x68
   2d808:	beq.n	2d812 <btrfs_insert_file_extent@@Base+0x50>
   2d80a:	orrs	r3, r4
   2d80c:	bne.n	2d81a <btrfs_insert_file_extent@@Base+0x58>
   2d80e:	mov	r6, r0
   2d810:	b.n	2d8ec <btrfs_insert_file_extent@@Base+0x12a>
   2d812:	orrs	r3, r4
   2d814:	itt	eq
   2d816:	moveq	r7, r0
   2d818:	moveq	fp, r7
   2d81a:	str	r1, [sp, #20]
   2d81c:	bl	17544 <btrfs_alloc_path@@Base>
   2d820:	mov	r4, r0
   2d822:	cmp	r0, #0
   2d824:	beq.n	2d900 <btrfs_insert_file_extent@@Base+0x13e>
   2d826:	ldr	r3, [sp, #16]
   2d828:	mov	r2, r0
   2d82a:	ldr	r1, [sp, #20]
   2d82c:	mov	r0, r5
   2d82e:	strd	r3, r8, [sp, #32]
   2d832:	mov.w	r8, #1
   2d836:	ldr	r3, [sp, #12]
   2d838:	str.w	r1, [sp, #45]	; 0x2d
   2d83c:	mov	r1, r6
   2d83e:	str.w	r8, [sp, #4]
   2d842:	str.w	r3, [sp, #41]	; 0x29
   2d846:	movs	r3, #108	; 0x6c
   2d848:	strb.w	r3, [sp, #40]	; 0x28
   2d84c:	movs	r3, #53	; 0x35
   2d84e:	str	r3, [sp, #28]
   2d850:	add	r3, sp, #28
   2d852:	str	r3, [sp, #0]
   2d854:	add	r3, sp, #32
   2d856:	bl	1a700 <btrfs_insert_empty_items@@Base>
   2d85a:	subs	r6, r0, #0
   2d85c:	blt.n	2d8e6 <btrfs_insert_file_extent@@Base+0x124>
   2d85e:	ldr	r1, [pc, #184]	; (2d918 <btrfs_insert_file_extent@@Base+0x156>)
   2d860:	mov	r3, r6
   2d862:	ldr	r0, [pc, #184]	; (2d91c <btrfs_insert_file_extent@@Base+0x15a>)
   2d864:	movs	r2, #67	; 0x43
   2d866:	add	r1, pc
   2d868:	add	r0, pc
   2d86a:	bl	2d7b8 <btrfs_del_inode_ref@@Base+0x270>
   2d86e:	ldr	r0, [r4, #0]
   2d870:	ldr	r3, [r4, #32]
   2d872:	movs	r2, #25
   2d874:	add.w	ip, r0, #96	; 0x60
   2d878:	mla	r3, r2, r3, ip
   2d87c:	ldr	r2, [sp, #104]	; 0x68
   2d87e:	ldr.w	r1, [r3, #118]	; 0x76
   2d882:	adds	r1, #101	; 0x65
   2d884:	add.w	r3, ip, r1
   2d888:	str.w	r2, [r3, #21]
   2d88c:	ldr	r2, [sp, #108]	; 0x6c
   2d88e:	str.w	r7, [r3, #29]
   2d892:	str.w	fp, [r3, #33]	; 0x21
   2d896:	str.w	r2, [r3, #25]
   2d89a:	movs	r2, #0
   2d89c:	str.w	sl, [r3, #45]	; 0x2d
   2d8a0:	strb.w	r2, [r3, #37]	; 0x25
   2d8a4:	strb.w	r2, [r3, #38]	; 0x26
   2d8a8:	strb.w	r2, [r3, #39]	; 0x27
   2d8ac:	strb.w	r2, [r3, #40]	; 0x28
   2d8b0:	strb.w	r2, [r3, #41]	; 0x29
   2d8b4:	strb.w	r2, [r3, #42]	; 0x2a
   2d8b8:	strb.w	r2, [r3, #43]	; 0x2b
   2d8bc:	strb.w	r2, [r3, #44]	; 0x2c
   2d8c0:	str.w	r9, [r3, #49]	; 0x31
   2d8c4:	str.w	sl, [r3, #8]
   2d8c8:	str.w	r9, [r3, #12]
   2d8cc:	ldrd	r7, r5, [r5, #8]
   2d8d0:	str.w	r7, [ip, r1]
   2d8d4:	str	r5, [r3, #4]
   2d8d6:	strb.w	r8, [r3, #20]
   2d8da:	strb	r2, [r3, #16]
   2d8dc:	strb	r2, [r3, #17]
   2d8de:	strb	r2, [r3, #18]
   2d8e0:	strb	r2, [r3, #19]
   2d8e2:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   2d8e6:	mov	r0, r4
   2d8e8:	bl	17572 <btrfs_free_path@@Base>
   2d8ec:	ldr	r2, [pc, #48]	; (2d920 <btrfs_insert_file_extent@@Base+0x15e>)
   2d8ee:	ldr	r3, [pc, #36]	; (2d914 <btrfs_insert_file_extent@@Base+0x152>)
   2d8f0:	add	r2, pc
   2d8f2:	ldr	r3, [r2, r3]
   2d8f4:	ldr	r2, [r3, #0]
   2d8f6:	ldr	r3, [sp, #52]	; 0x34
   2d8f8:	eors	r2, r3
   2d8fa:	beq.n	2d906 <btrfs_insert_file_extent@@Base+0x144>
   2d8fc:	blx	8510 <__stack_chk_fail@plt>
   2d900:	mvn.w	r6, #11
   2d904:	b.n	2d8ec <btrfs_insert_file_extent@@Base+0x12a>
   2d906:	mov	r0, r6
   2d908:	add	sp, #60	; 0x3c
   2d90a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d90e:	nop
   2d910:	str	r2, [r5, #88]	; 0x58
   2d912:	movs	r3, r0
   2d914:	lsls	r0, r4, #8
   2d916:	movs	r0, r0
   2d918:	cmp	r1, #230	; 0xe6
   2d91a:	movs	r1, r0
   2d91c:	pop	{r2, r3, r4, r5, r6}
   2d91e:	movs	r0, r0
   2d920:	str	r4, [r2, #72]	; 0x48
   2d922:	movs	r3, r0

0002d924 <btrfs_insert_inline_extent@@Base>:
   2d924:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d928:	mov	sl, r2
   2d92a:	ldr	r2, [pc, #208]	; (2d9fc <btrfs_insert_inline_extent@@Base+0xd8>)
   2d92c:	mov	r4, r3
   2d92e:	ldr	r3, [pc, #208]	; (2da00 <btrfs_insert_inline_extent@@Base+0xdc>)
   2d930:	sub	sp, #52	; 0x34
   2d932:	add	r2, pc
   2d934:	mov	r9, r0
   2d936:	str	r1, [sp, #12]
   2d938:	ldr	r3, [r2, r3]
   2d93a:	ldrd	r8, fp, [sp, #88]	; 0x58
   2d93e:	ldrd	r7, r6, [sp, #96]	; 0x60
   2d942:	ldr	r3, [r3, #0]
   2d944:	str	r3, [sp, #44]	; 0x2c
   2d946:	mov.w	r3, #0
   2d94a:	bl	17544 <btrfs_alloc_path@@Base>
   2d94e:	mov	r5, r0
   2d950:	cmp	r0, #0
   2d952:	beq.n	2d9ec <btrfs_insert_inline_extent@@Base+0xc8>
   2d954:	movs	r3, #108	; 0x6c
   2d956:	mov	r2, r0
   2d958:	strb.w	r3, [sp, #32]
   2d95c:	mov	r0, r9
   2d95e:	add.w	r3, r6, #21
   2d962:	ldr	r1, [sp, #12]
   2d964:	str	r3, [sp, #20]
   2d966:	movs	r3, #1
   2d968:	str	r3, [sp, #4]
   2d96a:	add	r3, sp, #20
   2d96c:	str	r3, [sp, #0]
   2d96e:	add	r3, sp, #24
   2d970:	strd	sl, r4, [sp, #24]
   2d974:	str.w	r8, [sp, #33]	; 0x21
   2d978:	str.w	fp, [sp, #37]	; 0x25
   2d97c:	bl	1a700 <btrfs_insert_empty_items@@Base>
   2d980:	mov	r4, r0
   2d982:	cbnz	r0, 2d9d2 <btrfs_insert_inline_extent@@Base+0xae>
   2d984:	ldr	r0, [r5, #0]
   2d986:	movs	r2, #25
   2d988:	ldr	r3, [r5, #32]
   2d98a:	add.w	r1, r0, #96	; 0x60
   2d98e:	ldrd	sl, lr, [r9, #8]
   2d992:	str	r0, [sp, #12]
   2d994:	mla	r3, r2, r3, r1
   2d998:	ldr.w	ip, [r3, #118]	; 0x76
   2d99c:	add.w	r2, ip, #101	; 0x65
   2d9a0:	adds	r3, r1, r2
   2d9a2:	str.w	sl, [r1, r2]
   2d9a6:	mov	r1, r7
   2d9a8:	str.w	lr, [r3, #4]
   2d9ac:	strb	r4, [r3, #20]
   2d9ae:	str	r6, [r3, #8]
   2d9b0:	str	r4, [r3, #12]
   2d9b2:	strb	r4, [r3, #16]
   2d9b4:	strb	r4, [r3, #17]
   2d9b6:	strb	r4, [r3, #18]
   2d9b8:	strb	r4, [r3, #19]
   2d9ba:	mov	r3, r6
   2d9bc:	ldr.w	r2, [sp, #33]	; 0x21
   2d9c0:	rsb	r2, r2, #122	; 0x7a
   2d9c4:	add	r2, r8
   2d9c6:	add	r2, ip
   2d9c8:	bl	16a24 <write_extent_buffer@@Base>
   2d9cc:	ldr	r0, [sp, #12]
   2d9ce:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   2d9d2:	mov	r0, r5
   2d9d4:	bl	17572 <btrfs_free_path@@Base>
   2d9d8:	ldr	r2, [pc, #40]	; (2da04 <btrfs_insert_inline_extent@@Base+0xe0>)
   2d9da:	ldr	r3, [pc, #36]	; (2da00 <btrfs_insert_inline_extent@@Base+0xdc>)
   2d9dc:	add	r2, pc
   2d9de:	ldr	r3, [r2, r3]
   2d9e0:	ldr	r2, [r3, #0]
   2d9e2:	ldr	r3, [sp, #44]	; 0x2c
   2d9e4:	eors	r2, r3
   2d9e6:	beq.n	2d9f2 <btrfs_insert_inline_extent@@Base+0xce>
   2d9e8:	blx	8510 <__stack_chk_fail@plt>
   2d9ec:	mvn.w	r4, #11
   2d9f0:	b.n	2d9d8 <btrfs_insert_inline_extent@@Base+0xb4>
   2d9f2:	mov	r0, r4
   2d9f4:	add	sp, #52	; 0x34
   2d9f6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d9fa:	nop
   2d9fc:	str	r2, [r2, #68]	; 0x44
   2d9fe:	movs	r3, r0
   2da00:	lsls	r0, r4, #8
   2da02:	movs	r0, r0
   2da04:	str	r0, [r5, #56]	; 0x38
   2da06:	movs	r3, r0

0002da08 <btrfs_csum_file_block@@Base>:
   2da08:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2da0c:	mov	fp, r0
   2da0e:	vpush	{d8-d9}
   2da12:	mov	r6, r1
   2da14:	sub	sp, #140	; 0x8c
   2da16:	strd	r2, r3, [sp, #24]
   2da1a:	ldr	r3, [sp, #200]	; 0xc8
   2da1c:	ldr.w	r2, [pc, #1044]	; 2de34 <btrfs_csum_file_block@@Base+0x42c>
   2da20:	ldrd	r7, r8, [sp, #192]	; 0xc0
   2da24:	vmov	s18, r3
   2da28:	ldr.w	r3, [pc, #1036]	; 2de38 <btrfs_csum_file_block@@Base+0x430>
   2da2c:	add	r2, pc
   2da2e:	add	r3, pc
   2da30:	str	r3, [sp, #36]	; 0x24
   2da32:	ldr.w	r3, [pc, #1032]	; 2de3c <btrfs_csum_file_block@@Base+0x434>
   2da36:	ldr	r3, [r2, r3]
   2da38:	ldr	r3, [r3, #0]
   2da3a:	str	r3, [sp, #132]	; 0x84
   2da3c:	mov.w	r3, #0
   2da40:	ldr.w	r3, [r1, #464]	; 0x1d0
   2da44:	ldr.w	r2, [r3, #388]	; 0x184
   2da48:	ldr.w	r0, [r3, #308]	; 0x134
   2da4c:	vmov	s16, r2
   2da50:	bl	17504 <btrfs_super_csum_size@@Base>
   2da54:	ldr.w	r3, [r6, #464]	; 0x1d0
   2da58:	ldr.w	r3, [r3, #308]	; 0x134
   2da5c:	ldrh.w	r3, [r3, #196]	; 0xc4
   2da60:	vmov	s17, r3
   2da64:	mov	r5, r0
   2da66:	bl	17544 <btrfs_alloc_path@@Base>
   2da6a:	mov	r4, r0
   2da6c:	cmp	r0, #0
   2da6e:	beq.w	2de22 <btrfs_csum_file_block@@Base+0x41a>
   2da72:	mvn.w	r2, #9
   2da76:	mov.w	r3, #4294967295	; 0xffffffff
   2da7a:	strd	r2, r3, [sp, #40]	; 0x28
   2da7e:	mov.w	r9, #128	; 0x80
   2da82:	ldr.w	r3, [r6, #464]	; 0x1d0
   2da86:	str.w	r7, [sp, #49]	; 0x31
   2da8a:	str.w	r8, [sp, #53]	; 0x35
   2da8e:	ldr.w	r0, [r3, #308]	; 0x134
   2da92:	strb.w	r9, [sp, #48]	; 0x30
   2da96:	bl	17504 <btrfs_super_csum_size@@Base>
   2da9a:	mvn.w	r2, #9
   2da9e:	mov.w	r3, #4294967295	; 0xffffffff
   2daa2:	movs	r1, #1
   2daa4:	strd	r2, r3, [sp, #60]	; 0x3c
   2daa8:	movs	r3, #0
   2daaa:	add	r2, sp, #60	; 0x3c
   2daac:	strd	r3, r1, [sp]
   2dab0:	mov	r3, r4
   2dab2:	mov	r1, r6
   2dab4:	str.w	r7, [sp, #69]	; 0x45
   2dab8:	str.w	r8, [sp, #73]	; 0x49
   2dabc:	strb.w	r9, [sp, #68]	; 0x44
   2dac0:	mov	sl, r0
   2dac2:	mov	r0, fp
   2dac4:	bl	19930 <btrfs_search_slot@@Base>
   2dac8:	cmp	r0, #0
   2daca:	blt.n	2dada <btrfs_csum_file_block@@Base+0xd2>
   2dacc:	ldr.w	r9, [r4]
   2dad0:	beq.n	2db38 <btrfs_csum_file_block@@Base+0x130>
   2dad2:	ldr	r2, [r4, #32]
   2dad4:	cbnz	r2, 2dade <btrfs_csum_file_block@@Base+0xd6>
   2dad6:	mvn.w	r0, #1
   2dada:	mov	r8, r0
   2dadc:	b.n	2db56 <btrfs_csum_file_block@@Base+0x14e>
   2dade:	subs	r2, #1
   2dae0:	add	r1, sp, #80	; 0x50
   2dae2:	mov	r0, r9
   2dae4:	str	r2, [r4, #32]
   2dae6:	bl	2d714 <btrfs_del_inode_ref@@Base+0x1cc>
   2daea:	ldrb.w	r3, [sp, #88]	; 0x58
   2daee:	cmp	r3, #128	; 0x80
   2daf0:	bne.n	2dad6 <btrfs_csum_file_block@@Base+0xce>
   2daf2:	ldr.w	r3, [r6, #464]	; 0x1d0
   2daf6:	ldr.w	r0, [sp, #89]	; 0x59
   2dafa:	ldr.w	r1, [sp, #93]	; 0x5d
   2dafe:	subs	r0, r7, r0
   2db00:	ldr.w	r2, [r3, #388]	; 0x184
   2db04:	sbc.w	r1, r8, r1
   2db08:	movs	r3, #0
   2db0a:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   2db0e:	ldr	r3, [r4, #32]
   2db10:	movs	r2, #25
   2db12:	mla	r3, r2, r3, r9
   2db16:	strd	r0, r1, [sp, #16]
   2db1a:	mov	r1, sl
   2db1c:	ldr.w	r0, [r3, #218]	; 0xda
   2db20:	bl	38690 <btrfs_util_strerror@@Base+0x290>
   2db24:	ldrd	r2, r3, [sp, #16]
   2db28:	asrs	r1, r0, #31
   2db2a:	cmp	r3, r1
   2db2c:	it	eq
   2db2e:	cmpeq	r2, r0
   2db30:	bcc.n	2db40 <btrfs_csum_file_block@@Base+0x138>
   2db32:	mvn.w	r0, #26
   2db36:	b.n	2dada <btrfs_csum_file_block@@Base+0xd2>
   2db38:	movs	r2, #0
   2db3a:	movs	r3, #0
   2db3c:	strd	r2, r3, [sp, #16]
   2db40:	ldr	r3, [r4, #32]
   2db42:	movs	r2, #25
   2db44:	mla	r3, r2, r3, r9
   2db48:	ldr.w	r8, [r3, #214]	; 0xd6
   2db4c:	ldr	r3, [sp, #16]
   2db4e:	add.w	r8, r8, #101	; 0x65
   2db52:	mla	r8, sl, r3, r8
   2db56:	cmn.w	r8, #4096	; 0x1000
   2db5a:	ldr	r2, [r4, #0]
   2db5c:	bhi.n	2db88 <btrfs_csum_file_block@@Base+0x180>
   2db5e:	mov	r6, r2
   2db60:	add	r7, sp, #100	; 0x64
   2db62:	vmov	r1, s18
   2db66:	ldr	r3, [sp, #204]	; 0xcc
   2db68:	mov	r2, r7
   2db6a:	vmov	r0, s17
   2db6e:	bl	1b73e <btrfs_csum_data@@Base>
   2db72:	mov	r1, r7
   2db74:	mov	r3, r5
   2db76:	mov	r2, r8
   2db78:	mov	r0, r6
   2db7a:	movs	r7, #0
   2db7c:	bl	16a24 <write_extent_buffer@@Base>
   2db80:	ldr	r0, [r4, #0]
   2db82:	bl	1cc08 <btrfs_mark_buffer_dirty@@Base>
   2db86:	b.n	2dd00 <btrfs_csum_file_block@@Base+0x2f8>
   2db88:	cmn.w	r8, #27
   2db8c:	ldr	r0, [r4, #32]
   2db8e:	bne.n	2dbf4 <btrfs_csum_file_block@@Base+0x1ec>
   2db90:	mov.w	sl, #25
   2db94:	mov	r1, r5
   2db96:	mla	r0, sl, r0, r2
   2db9a:	ldr.w	r0, [r0, #218]	; 0xda
   2db9e:	bl	38418 <btrfs_util_strerror@@Base+0x18>
   2dba2:	ldr.w	r3, [r6, #464]	; 0x1d0
   2dba6:	mov	r1, r5
   2dba8:	mov	r7, r0
   2dbaa:	ldr.w	r0, [r3, #384]	; 0x180
   2dbae:	subs	r0, #151	; 0x97
   2dbb0:	bl	38418 <btrfs_util_strerror@@Base+0x18>
   2dbb4:	subs	r3, r0, #1
   2dbb6:	cmp	r7, r3
   2dbb8:	bcs.w	2dd44 <btrfs_csum_file_block@@Base+0x33c>
   2dbbc:	mov	r0, r4
   2dbbe:	mov.w	r8, #1
   2dbc2:	bl	1754c <btrfs_release_path@@Base>
   2dbc6:	add	r2, sp, #40	; 0x28
   2dbc8:	mov	r3, r4
   2dbca:	mov	r1, r6
   2dbcc:	mov	r0, fp
   2dbce:	strd	r5, r8, [sp]
   2dbd2:	bl	19930 <btrfs_search_slot@@Base>
   2dbd6:	subs	r7, r0, #0
   2dbd8:	blt.w	2dd00 <btrfs_csum_file_block@@Base+0x2f8>
   2dbdc:	bne.w	2dd4a <btrfs_csum_file_block@@Base+0x342>
   2dbe0:	ldr	r1, [pc, #604]	; (2de40 <btrfs_csum_file_block@@Base+0x438>)
   2dbe2:	mov	r3, r8
   2dbe4:	ldr	r0, [pc, #604]	; (2de44 <btrfs_csum_file_block@@Base+0x43c>)
   2dbe6:	movw	r2, #265	; 0x109
   2dbea:	add	r1, pc
   2dbec:	adds	r1, #25
   2dbee:	add	r0, pc
   2dbf0:	bl	2d77c <btrfs_del_inode_ref@@Base+0x234>
   2dbf4:	ldr.w	r3, [r2, #192]	; 0xc0
   2dbf8:	subs	r3, #1
   2dbfa:	cmp	r3, r0
   2dbfc:	bls.w	2dd1c <btrfs_csum_file_block@@Base+0x314>
   2dc00:	adds	r2, r0, #1
   2dc02:	ldr	r0, [r4, #0]
   2dc04:	add	r1, sp, #80	; 0x50
   2dc06:	bl	2d714 <btrfs_del_inode_ref@@Base+0x1cc>
   2dc0a:	ldrd	r2, r3, [sp, #80]	; 0x50
   2dc0e:	mov.w	r1, #4294967295	; 0xffffffff
   2dc12:	mvn.w	r0, #9
   2dc16:	cmp	r3, r1
   2dc18:	it	eq
   2dc1a:	cmpeq	r2, r0
   2dc1c:	bne.w	2dd32 <btrfs_csum_file_block@@Base+0x32a>
   2dc20:	ldrb.w	r3, [sp, #88]	; 0x58
   2dc24:	cmp	r3, #128	; 0x80
   2dc26:	bne.w	2dd32 <btrfs_csum_file_block@@Base+0x32a>
   2dc2a:	ldr.w	r7, [sp, #89]	; 0x59
   2dc2e:	mov.w	r9, #1
   2dc32:	ldr.w	r8, [sp, #93]	; 0x5d
   2dc36:	mov	r0, r4
   2dc38:	bl	1754c <btrfs_release_path@@Base>
   2dc3c:	cmp.w	r9, #0
   2dc40:	beq.w	2de18 <btrfs_csum_file_block@@Base+0x410>
   2dc44:	ldrd	r0, r1, [sp, #24]
   2dc48:	mov	r3, r8
   2dc4a:	ldr.w	r9, [sp, #53]	; 0x35
   2dc4e:	mov	r2, r7
   2dc50:	cmp	r1, r8
   2dc52:	ldr.w	r8, [sp, #49]	; 0x31
   2dc56:	it	eq
   2dc58:	cmpeq	r0, r7
   2dc5a:	mov.w	sl, #0
   2dc5e:	itt	cc
   2dc60:	movcc	r2, r0
   2dc62:	movcc	r3, r1
   2dc64:	subs.w	r8, r2, r8
   2dc68:	mov	r1, r5
   2dc6a:	sbc.w	r9, r3, r9
   2dc6e:	ldr.w	r3, [r6, #464]	; 0x1d0
   2dc72:	ldr.w	r0, [r3, #384]	; 0x180
   2dc76:	subs	r0, #151	; 0x97
   2dc78:	bl	38418 <btrfs_util_strerror@@Base+0x18>
   2dc7c:	vmov	r2, s16
   2dc80:	mov	r3, sl
   2dc82:	mov	r1, r9
   2dc84:	subs	r7, r0, #1
   2dc86:	mov	r0, r8
   2dc88:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   2dc8c:	mov	r2, r7
   2dc8e:	mov	r8, r0
   2dc90:	mov	r9, r1
   2dc92:	orrs.w	r3, r8, r9
   2dc96:	itt	eq
   2dc98:	moveq.w	r8, #1
   2dc9c:	moveq.w	r9, #0
   2dca0:	cmp	r9, sl
   2dca2:	it	eq
   2dca4:	cmpeq	r8, r7
   2dca6:	it	cc
   2dca8:	movcc	r2, r8
   2dcaa:	muls	r2, r5
   2dcac:	add	r3, sp, #60	; 0x3c
   2dcae:	str	r2, [sp, #60]	; 0x3c
   2dcb0:	mov.w	r8, #1
   2dcb4:	str	r3, [sp, #0]
   2dcb6:	mov	r2, r4
   2dcb8:	add	r3, sp, #40	; 0x28
   2dcba:	mov	r1, r6
   2dcbc:	mov	r0, fp
   2dcbe:	str.w	r8, [sp, #4]
   2dcc2:	bl	1a700 <btrfs_insert_empty_items@@Base>
   2dcc6:	subs	r7, r0, #0
   2dcc8:	blt.n	2dd00 <btrfs_csum_file_block@@Base+0x2f8>
   2dcca:	beq.w	2de1c <btrfs_csum_file_block@@Base+0x414>
   2dcce:	ldr	r3, [pc, #376]	; (2de48 <btrfs_csum_file_block@@Base+0x440>)
   2dcd0:	mov	r1, r8
   2dcd2:	ldr	r2, [sp, #36]	; 0x24
   2dcd4:	ldr	r0, [r2, r3]
   2dcd6:	ldr	r3, [pc, #372]	; (2de4c <btrfs_csum_file_block@@Base+0x444>)
   2dcd8:	ldr	r2, [pc, #372]	; (2de50 <btrfs_csum_file_block@@Base+0x448>)
   2dcda:	add	r3, pc
   2dcdc:	str	r3, [sp, #8]
   2dcde:	ldr	r3, [pc, #372]	; (2de54 <btrfs_csum_file_block@@Base+0x44c>)
   2dce0:	add	r2, pc
   2dce2:	str.w	r8, [sp, #12]
   2dce6:	add	r3, pc
   2dce8:	adds	r3, #25
   2dcea:	str	r3, [sp, #4]
   2dcec:	mov.w	r3, #308	; 0x134
   2dcf0:	str	r3, [sp, #0]
   2dcf2:	ldr	r3, [pc, #356]	; (2de58 <btrfs_csum_file_block@@Base+0x450>)
   2dcf4:	ldr	r0, [r0, #0]
   2dcf6:	add	r3, pc
   2dcf8:	blx	8860 <__fprintf_chk@plt+0x4>
   2dcfc:	bl	2d6c8 <btrfs_del_inode_ref@@Base+0x180>
   2dd00:	mov	r0, r4
   2dd02:	bl	17572 <btrfs_free_path@@Base>
   2dd06:	ldr	r2, [pc, #340]	; (2de5c <btrfs_csum_file_block@@Base+0x454>)
   2dd08:	ldr	r3, [pc, #304]	; (2de3c <btrfs_csum_file_block@@Base+0x434>)
   2dd0a:	add	r2, pc
   2dd0c:	ldr	r3, [r2, r3]
   2dd0e:	ldr	r2, [r3, #0]
   2dd10:	ldr	r3, [sp, #132]	; 0x84
   2dd12:	eors	r2, r3
   2dd14:	beq.w	2de28 <btrfs_csum_file_block@@Base+0x420>
   2dd18:	blx	8510 <__stack_chk_fail@plt>
   2dd1c:	movs	r3, #0
   2dd1e:	mov	r1, r4
   2dd20:	strb.w	r3, [r4, #65]	; 0x41
   2dd24:	ldr.w	r0, [r6, #464]	; 0x1d0
   2dd28:	bl	1ad64 <btrfs_next_sibling_tree_block@@Base>
   2dd2c:	cmp	r0, #1
   2dd2e:	mov	r2, r0
   2dd30:	bne.n	2dd3e <btrfs_csum_file_block@@Base+0x336>
   2dd32:	mov.w	r9, #1
   2dd36:	mov.w	r7, #4294967295	; 0xffffffff
   2dd3a:	mov	r8, r7
   2dd3c:	b.n	2dc36 <btrfs_csum_file_block@@Base+0x22e>
   2dd3e:	cmp	r0, #0
   2dd40:	beq.w	2dc02 <btrfs_csum_file_block@@Base+0x1fa>
   2dd44:	mov.w	r9, #0
   2dd48:	b.n	2dd36 <btrfs_csum_file_block@@Base+0x32e>
   2dd4a:	ldr	r2, [r4, #32]
   2dd4c:	cmp	r2, #0
   2dd4e:	beq.n	2dd44 <btrfs_csum_file_block@@Base+0x33c>
   2dd50:	ldr	r7, [r4, #0]
   2dd52:	subs	r2, #1
   2dd54:	add	r1, sp, #80	; 0x50
   2dd56:	str	r2, [r4, #32]
   2dd58:	mov	r0, r7
   2dd5a:	bl	2d714 <btrfs_del_inode_ref@@Base+0x1cc>
   2dd5e:	ldrd	r2, r3, [sp, #80]	; 0x50
   2dd62:	mov.w	r1, #4294967295	; 0xffffffff
   2dd66:	mvn.w	r0, #9
   2dd6a:	cmp	r3, r1
   2dd6c:	it	eq
   2dd6e:	cmpeq	r2, r0
   2dd70:	bne.n	2dd44 <btrfs_csum_file_block@@Base+0x33c>
   2dd72:	ldrb.w	r3, [sp, #88]	; 0x58
   2dd76:	cmp	r3, #128	; 0x80
   2dd78:	bne.n	2dd44 <btrfs_csum_file_block@@Base+0x33c>
   2dd7a:	ldr.w	lr, [sp, #49]	; 0x31
   2dd7e:	movs	r3, #0
   2dd80:	ldr.w	r0, [sp, #89]	; 0x59
   2dd84:	ldr.w	ip, [sp, #53]	; 0x35
   2dd88:	ldr.w	r1, [sp, #93]	; 0x5d
   2dd8c:	subs.w	r0, lr, r0
   2dd90:	vmov	r2, s16
   2dd94:	sbc.w	r1, ip, r1
   2dd98:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   2dd9c:	ldr.w	r3, [r6, #464]	; 0x1d0
   2dda0:	mov	r8, r0
   2dda2:	ldr.w	r0, [r3, #384]	; 0x180
   2dda6:	mov	r9, r1
   2dda8:	mov	r1, r5
   2ddaa:	subs	r0, #151	; 0x97
   2ddac:	bl	38418 <btrfs_util_strerror@@Base+0x18>
   2ddb0:	movs	r1, #0
   2ddb2:	cmp	r9, r1
   2ddb4:	add.w	r0, r0, #4294967295	; 0xffffffff
   2ddb8:	it	eq
   2ddba:	cmpeq	r8, r0
   2ddbc:	bcs.n	2dd44 <btrfs_csum_file_block@@Base+0x33c>
   2ddbe:	ldr	r3, [r4, #32]
   2ddc0:	mov	r1, r5
   2ddc2:	mla	r7, sl, r3, r7
   2ddc6:	ldr.w	r7, [r7, #218]	; 0xda
   2ddca:	mov	r0, r7
   2ddcc:	bl	38418 <btrfs_util_strerror@@Base+0x18>
   2ddd0:	movs	r1, #0
   2ddd2:	cmp	r9, r1
   2ddd4:	it	eq
   2ddd6:	cmpeq	r8, r0
   2ddd8:	bcc.n	2dd44 <btrfs_csum_file_block@@Base+0x33c>
   2ddda:	mla	r0, r5, r8, r5
   2ddde:	subs	r0, r0, r7
   2dde0:	cmp	r0, r5
   2dde2:	bne.n	2dd44 <btrfs_csum_file_block@@Base+0x33c>
   2dde4:	mov	r2, r5
   2dde6:	mov	r1, r4
   2dde8:	mov	r0, r6
   2ddea:	bl	19724 <btrfs_extend_item@@Base>
   2ddee:	ldr	r1, [pc, #112]	; (2de60 <btrfs_csum_file_block@@Base+0x458>)
   2ddf0:	mov.w	r2, #286	; 0x11e
   2ddf4:	add	r1, pc
   2ddf6:	adds	r1, #25
   2ddf8:	mov	r3, r0
   2ddfa:	ldr	r0, [pc, #104]	; (2de64 <btrfs_csum_file_block@@Base+0x45c>)
   2ddfc:	add	r0, pc
   2ddfe:	bl	2d7b8 <btrfs_del_inode_ref@@Base+0x270>
   2de02:	ldr	r6, [r4, #0]
   2de04:	movs	r2, #25
   2de06:	ldr	r3, [r4, #32]
   2de08:	mla	r3, r2, r3, r6
   2de0c:	ldr.w	r0, [r3, #214]	; 0xd6
   2de10:	adds	r0, #101	; 0x65
   2de12:	mla	r8, r5, r8, r0
   2de16:	b.n	2db60 <btrfs_csum_file_block@@Base+0x158>
   2de18:	mov	r2, r5
   2de1a:	b.n	2dcac <btrfs_csum_file_block@@Base+0x2a4>
   2de1c:	mov.w	r8, #0
   2de20:	b.n	2de02 <btrfs_csum_file_block@@Base+0x3fa>
   2de22:	mvn.w	r7, #11
   2de26:	b.n	2dd06 <btrfs_csum_file_block@@Base+0x2fe>
   2de28:	mov	r0, r7
   2de2a:	add	sp, #140	; 0x8c
   2de2c:	vpop	{d8-d9}
   2de30:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2de34:	str	r0, [r3, #52]	; 0x34
   2de36:	movs	r3, r0
   2de38:	str	r6, [r2, #52]	; 0x34
   2de3a:	movs	r3, r0
   2de3c:	lsls	r0, r4, #8
   2de3e:	movs	r0, r0
   2de40:	movs	r6, #98	; 0x62
   2de42:	movs	r1, r0
   2de44:			; <UNDEFINED> instruction: 0xf2e30000
   2de48:	lsls	r0, r6, #8
   2de4a:	movs	r0, r0
   2de4c:			; <UNDEFINED> instruction: 0xf1f70000
   2de50:	cbz	r4, 2de76 <btrfs_del_csums@@Base+0xe>
   2de52:	movs	r0, r0
   2de54:	movs	r5, #102	; 0x66
   2de56:	movs	r1, r0
   2de58:	movs	r5, #52	; 0x34
   2de5a:	movs	r1, r0
   2de5c:	str	r2, [r7, #4]
   2de5e:	movs	r3, r0
   2de60:	movs	r4, #88	; 0x58
   2de62:	movs	r1, r0
   2de64:			; <UNDEFINED> instruction: 0xb6e8
	...

0002de68 <btrfs_del_csums@@Base>:
   2de68:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2de6c:	sub	sp, #100	; 0x64
   2de6e:	mov	sl, r0
   2de70:	strd	r2, r3, [sp, #8]
   2de74:	ldr	r3, [sp, #136]	; 0x88
   2de76:	ldr	r2, [pc, #832]	; (2e1b8 <btrfs_del_csums@@Base+0x350>)
   2de78:	str	r3, [sp, #60]	; 0x3c
   2de7a:	add	r2, pc
   2de7c:	ldr	r3, [sp, #140]	; 0x8c
   2de7e:	str	r3, [sp, #64]	; 0x40
   2de80:	ldr	r3, [pc, #824]	; (2e1bc <btrfs_del_csums@@Base+0x354>)
   2de82:	ldr	r3, [r2, r3]
   2de84:	ldr	r2, [sp, #60]	; 0x3c
   2de86:	ldr	r3, [r3, #0]
   2de88:	str	r3, [sp, #92]	; 0x5c
   2de8a:	mov.w	r3, #0
   2de8e:	ldr	r3, [sp, #8]
   2de90:	adds.w	r8, r3, r2
   2de94:	ldr	r3, [sp, #12]
   2de96:	ldr	r2, [sp, #64]	; 0x40
   2de98:	adc.w	r9, r3, r2
   2de9c:	ldr	r3, [r0, #0]
   2de9e:	ldr.w	r0, [r3, #308]	; 0x134
   2dea2:	bl	17504 <btrfs_super_csum_size@@Base>
   2dea6:	ldr.w	r3, [sl]
   2deaa:	ldr.w	r2, [r3, #388]	; 0x184
   2deae:	ldr	r5, [r3, #40]	; 0x28
   2deb0:	str	r2, [sp, #48]	; 0x30
   2deb2:	str	r0, [sp, #44]	; 0x2c
   2deb4:	bl	17544 <btrfs_alloc_path@@Base>
   2deb8:	mov	r4, r0
   2deba:	cmp	r0, #0
   2debc:	beq.w	2e1ac <btrfs_del_csums@@Base+0x344>
   2dec0:	adds.w	r3, r8, #4294967295	; 0xffffffff
   2dec4:	str	r3, [sp, #52]	; 0x34
   2dec6:	adc.w	r3, r9, #4294967295	; 0xffffffff
   2deca:	str	r3, [sp, #56]	; 0x38
   2decc:	add.w	r3, sp, #81	; 0x51
   2ded0:	str	r3, [sp, #40]	; 0x28
   2ded2:	mvn.w	r2, #9
   2ded6:	mov.w	r3, #4294967295	; 0xffffffff
   2deda:	strd	r2, r3, [sp, #72]	; 0x48
   2dede:	mov	r1, r5
   2dee0:	ldr	r2, [sp, #40]	; 0x28
   2dee2:	mov	r0, sl
   2dee4:	ldr	r3, [sp, #52]	; 0x34
   2dee6:	str	r3, [r2, #0]
   2dee8:	ldr	r3, [sp, #56]	; 0x38
   2deea:	str	r3, [r2, #4]
   2deec:	movs	r3, #128	; 0x80
   2deee:	movs	r2, #1
   2def0:	strb.w	r3, [sp, #80]	; 0x50
   2def4:	mov.w	r3, #4294967295	; 0xffffffff
   2def8:	strd	r3, r2, [sp]
   2defc:	add	r2, sp, #72	; 0x48
   2defe:	mov	r3, r4
   2df00:	bl	19930 <btrfs_search_slot@@Base>
   2df04:	cmp	r0, #0
   2df06:	ble.n	2df14 <btrfs_del_csums@@Base+0xac>
   2df08:	ldr	r3, [r4, #32]
   2df0a:	cmp	r3, #0
   2df0c:	beq.w	2e190 <btrfs_del_csums@@Base+0x328>
   2df10:	subs	r3, #1
   2df12:	str	r3, [r4, #32]
   2df14:	ldr	r6, [r4, #0]
   2df16:	add	r7, sp, #72	; 0x48
   2df18:	ldr	r2, [r4, #32]
   2df1a:	mov	r1, r7
   2df1c:	mov	r0, r6
   2df1e:	bl	2d714 <btrfs_del_inode_ref@@Base+0x1cc>
   2df22:	ldrd	r2, r3, [sp, #72]	; 0x48
   2df26:	mov.w	r1, #4294967295	; 0xffffffff
   2df2a:	mvn.w	r0, #9
   2df2e:	cmp	r3, r1
   2df30:	it	eq
   2df32:	cmpeq	r2, r0
   2df34:	bne.w	2e190 <btrfs_del_csums@@Base+0x328>
   2df38:	ldrb.w	r3, [sp, #80]	; 0x50
   2df3c:	cmp	r3, #128	; 0x80
   2df3e:	bne.w	2e190 <btrfs_del_csums@@Base+0x328>
   2df42:	ldr.w	r3, [sp, #81]	; 0x51
   2df46:	str	r3, [sp, #16]
   2df48:	ldr.w	r3, [sp, #85]	; 0x55
   2df4c:	str	r3, [sp, #20]
   2df4e:	ldrd	r2, r3, [sp, #16]
   2df52:	cmp	r3, r9
   2df54:	it	eq
   2df56:	cmpeq	r2, r8
   2df58:	bcs.w	2e190 <btrfs_del_csums@@Base+0x328>
   2df5c:	ldr	r3, [r4, #32]
   2df5e:	ldr	r1, [sp, #44]	; 0x2c
   2df60:	mov	fp, r3
   2df62:	movs	r3, #25
   2df64:	mla	r3, r3, fp, r6
   2df68:	add.w	r2, r3, #197	; 0xc5
   2df6c:	str	r2, [sp, #68]	; 0x44
   2df6e:	ldr.w	r0, [r3, #218]	; 0xda
   2df72:	bl	38418 <btrfs_util_strerror@@Base+0x18>
   2df76:	ldr	r3, [sp, #48]	; 0x30
   2df78:	mov	r1, r3
   2df7a:	asrs	r2, r3, #31
   2df7c:	strd	r1, r2, [sp, #32]
   2df80:	ldr	r1, [sp, #36]	; 0x24
   2df82:	umull	r2, r3, r3, r0
   2df86:	mla	r3, r0, r1, r3
   2df8a:	ldr	r1, [sp, #16]
   2df8c:	adds	r1, r1, r2
   2df8e:	str	r1, [sp, #24]
   2df90:	ldr	r1, [sp, #20]
   2df92:	adc.w	r3, r1, r3
   2df96:	str	r3, [sp, #28]
   2df98:	ldrd	r0, r1, [sp, #24]
   2df9c:	ldrd	r2, r3, [sp, #8]
   2dfa0:	cmp	r3, r1
   2dfa2:	it	eq
   2dfa4:	cmpeq	r2, r0
   2dfa6:	bcs.w	2e190 <btrfs_del_csums@@Base+0x328>
   2dfaa:	ldrd	r2, r3, [sp, #16]
   2dfae:	ldrd	r0, r1, [sp, #8]
   2dfb2:	cmp	r3, r1
   2dfb4:	it	eq
   2dfb6:	cmpeq	r2, r0
   2dfb8:	ldrd	r2, r3, [sp, #24]
   2dfbc:	bcc.n	2dfec <btrfs_del_csums@@Base+0x184>
   2dfbe:	cmp	r9, r3
   2dfc0:	it	eq
   2dfc2:	cmpeq	r8, r2
   2dfc4:	bcc.n	2e080 <btrfs_del_csums@@Base+0x218>
   2dfc6:	movs	r3, #1
   2dfc8:	mov	r2, r4
   2dfca:	mov	r1, r5
   2dfcc:	str	r3, [sp, #0]
   2dfce:	mov	r0, sl
   2dfd0:	mov	r3, fp
   2dfd2:	bl	1aaec <btrfs_del_items@@Base>
   2dfd6:	ldr	r1, [pc, #488]	; (2e1c0 <btrfs_del_csums@@Base+0x358>)
   2dfd8:	mov.w	r2, #450	; 0x1c2
   2dfdc:	add	r1, pc
   2dfde:	adds	r1, #47	; 0x2f
   2dfe0:	mov	r3, r0
   2dfe2:	ldr	r0, [pc, #480]	; (2e1c4 <btrfs_del_csums@@Base+0x35c>)
   2dfe4:	add	r0, pc
   2dfe6:	bl	2d7b8 <btrfs_del_inode_ref@@Base+0x270>
   2dfea:	b.n	2e078 <btrfs_del_csums@@Base+0x210>
   2dfec:	cmp	r9, r3
   2dfee:	it	eq
   2dff0:	cmpeq	r8, r2
   2dff2:	bcs.n	2e080 <btrfs_del_csums@@Base+0x218>
   2dff4:	ldr	r1, [sp, #8]
   2dff6:	ldr	r0, [sp, #16]
   2dff8:	ldrd	r2, r3, [sp, #32]
   2dffc:	subs	r0, r1, r0
   2dffe:	ldr	r1, [sp, #12]
   2e000:	mov	ip, r1
   2e002:	ldr	r1, [sp, #20]
   2e004:	sbc.w	r1, ip, r1
   2e008:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   2e00c:	ldr	r3, [sp, #44]	; 0x2c
   2e00e:	muls	r3, r0
   2e010:	ldrd	r0, r1, [sp, #60]	; 0x3c
   2e014:	mov	fp, r3
   2e016:	ldrd	r2, r3, [sp, #32]
   2e01a:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   2e01e:	ldr	r3, [sp, #68]	; 0x44
   2e020:	add.w	r2, fp, #101	; 0x65
   2e024:	ldr.w	r1, [r3, #17]
   2e028:	ldr	r3, [sp, #44]	; 0x2c
   2e02a:	add	r2, r1
   2e02c:	movs	r1, #0
   2e02e:	muls	r3, r0
   2e030:	mov	r0, r6
   2e032:	bl	16a96 <memset_extent_buffer@@Base>
   2e036:	ldr	r2, [sp, #40]	; 0x28
   2e038:	ldr	r3, [sp, #8]
   2e03a:	mov	r1, r5
   2e03c:	mov	r0, sl
   2e03e:	str	r3, [r2, #0]
   2e040:	ldr	r3, [sp, #12]
   2e042:	str	r3, [r2, #4]
   2e044:	mov	r3, r7
   2e046:	mov	r2, r4
   2e048:	str.w	fp, [sp]
   2e04c:	bl	1a4b4 <btrfs_split_item@@Base>
   2e050:	mov	r3, r0
   2e052:	cbz	r0, 2e05c <btrfs_del_csums@@Base+0x1f4>
   2e054:	adds.w	r3, r0, #11
   2e058:	it	ne
   2e05a:	movne	r3, #1
   2e05c:	ldr	r1, [pc, #360]	; (2e1c8 <btrfs_del_csums@@Base+0x360>)
   2e05e:	movw	r2, #491	; 0x1eb
   2e062:	ldr	r0, [pc, #360]	; (2e1cc <btrfs_del_csums@@Base+0x364>)
   2e064:	add	r1, pc
   2e066:	adds	r1, #47	; 0x2f
   2e068:	add	r0, pc
   2e06a:	bl	2d7b8 <btrfs_del_inode_ref@@Base+0x270>
   2e06e:	ldr	r3, [sp, #52]	; 0x34
   2e070:	ldr	r2, [sp, #40]	; 0x28
   2e072:	str	r3, [r2, #0]
   2e074:	ldr	r3, [sp, #56]	; 0x38
   2e076:	str	r3, [r2, #4]
   2e078:	mov	r0, r4
   2e07a:	bl	1754c <btrfs_release_path@@Base>
   2e07e:	b.n	2ded2 <btrfs_del_csums@@Base+0x6a>
   2e080:	ldr.w	r3, [r5, #464]	; 0x1d0
   2e084:	ldr.w	r0, [r3, #308]	; 0x134
   2e088:	bl	17504 <btrfs_super_csum_size@@Base>
   2e08c:	ldr.w	r3, [r5, #464]	; 0x1d0
   2e090:	ldr	r1, [r4, #0]
   2e092:	ldr.w	r6, [sp, #81]	; 0x51
   2e096:	ldr.w	r2, [r3, #388]	; 0x184
   2e09a:	ldr	r3, [r4, #32]
   2e09c:	ldr.w	r7, [sp, #85]	; 0x55
   2e0a0:	mov	fp, r6
   2e0a2:	str	r2, [sp, #32]
   2e0a4:	str	r0, [sp, #16]
   2e0a6:	movs	r0, #25
   2e0a8:	mla	r3, r0, r3, r1
   2e0ac:	ldr	r1, [sp, #16]
   2e0ae:	ldr.w	r0, [r3, #218]	; 0xda
   2e0b2:	bl	38418 <btrfs_util_strerror@@Base+0x18>
   2e0b6:	ldr	r2, [sp, #32]
   2e0b8:	mov	ip, r7
   2e0ba:	umlal	fp, ip, r2, r0
   2e0be:	ldrd	r0, r1, [sp, #8]
   2e0c2:	cmp	r7, r1
   2e0c4:	it	eq
   2e0c6:	cmpeq	r6, r0
   2e0c8:	bcs.n	2e116 <btrfs_del_csums@@Base+0x2ae>
   2e0ca:	cmp	r9, ip
   2e0cc:	it	eq
   2e0ce:	cmpeq	r8, fp
   2e0d0:	bcc.n	2e17c <btrfs_del_csums@@Base+0x314>
   2e0d2:	ldr	r1, [sp, #8]
   2e0d4:	movs	r3, #0
   2e0d6:	subs	r0, r1, r6
   2e0d8:	ldr	r1, [sp, #12]
   2e0da:	sbc.w	r1, r1, r7
   2e0de:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   2e0e2:	ldr	r2, [sp, #16]
   2e0e4:	movs	r3, #1
   2e0e6:	mov	r1, r4
   2e0e8:	muls	r2, r0
   2e0ea:	mov	r0, r5
   2e0ec:	bl	19570 <btrfs_truncate_item@@Base>
   2e0f0:	ldr	r1, [pc, #220]	; (2e1d0 <btrfs_del_csums@@Base+0x368>)
   2e0f2:	mov.w	r2, #372	; 0x174
   2e0f6:	add	r1, pc
   2e0f8:	adds	r1, #63	; 0x3f
   2e0fa:	mov	r3, r0
   2e0fc:	ldr	r0, [pc, #212]	; (2e1d4 <btrfs_del_csums@@Base+0x36c>)
   2e0fe:	add	r0, pc
   2e100:	bl	2d7b8 <btrfs_del_inode_ref@@Base+0x270>
   2e104:	ldr	r1, [pc, #208]	; (2e1d8 <btrfs_del_csums@@Base+0x370>)
   2e106:	ldr	r0, [pc, #212]	; (2e1dc <btrfs_del_csums@@Base+0x374>)
   2e108:	movs	r3, #0
   2e10a:	add	r1, pc
   2e10c:	movw	r2, #497	; 0x1f1
   2e110:	adds	r1, #47	; 0x2f
   2e112:	add	r0, pc
   2e114:	b.n	2dfe6 <btrfs_del_csums@@Base+0x17e>
   2e116:	cmp	r9, ip
   2e118:	it	eq
   2e11a:	cmpeq	r8, fp
   2e11c:	bcs.n	2e17c <btrfs_del_csums@@Base+0x314>
   2e11e:	cmp	r7, r9
   2e120:	it	eq
   2e122:	cmpeq	r6, r8
   2e124:	bcs.n	2e17c <btrfs_del_csums@@Base+0x314>
   2e126:	subs.w	r0, fp, r8
   2e12a:	mov.w	r3, #0
   2e12e:	sbc.w	r1, ip, r9
   2e132:	ldr	r7, [pc, #172]	; (2e1e0 <btrfs_del_csums@@Base+0x378>)
   2e134:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   2e138:	ldr	r2, [sp, #16]
   2e13a:	movs	r3, #0
   2e13c:	mov	r1, r4
   2e13e:	ldr	r6, [pc, #164]	; (2e1e4 <btrfs_del_csums@@Base+0x37c>)
   2e140:	add	r7, pc
   2e142:	adds	r7, #63	; 0x3f
   2e144:	add	r6, pc
   2e146:	muls	r2, r0
   2e148:	mov	r0, r5
   2e14a:	bl	19570 <btrfs_truncate_item@@Base>
   2e14e:	movw	r2, #385	; 0x181
   2e152:	mov	r1, r7
   2e154:	mov	r3, r0
   2e156:	mov	r0, r6
   2e158:	bl	2d7b8 <btrfs_del_inode_ref@@Base+0x270>
   2e15c:	ldr	r3, [sp, #40]	; 0x28
   2e15e:	add	r2, sp, #72	; 0x48
   2e160:	mov	r1, r4
   2e162:	mov	r0, r5
   2e164:	str.w	r8, [r3]
   2e168:	str.w	r9, [r3, #4]
   2e16c:	bl	1858c <btrfs_set_item_key_safe@@Base>
   2e170:	movw	r2, #389	; 0x185
   2e174:	mov	r1, r7
   2e176:	mov	r3, r0
   2e178:	mov	r0, r6
   2e17a:	b.n	2e100 <btrfs_del_csums@@Base+0x298>
   2e17c:	ldr	r1, [pc, #104]	; (2e1e8 <btrfs_del_csums@@Base+0x380>)
   2e17e:	movs	r3, #1
   2e180:	ldr	r0, [pc, #104]	; (2e1ec <btrfs_del_csums@@Base+0x384>)
   2e182:	movw	r2, #391	; 0x187
   2e186:	add	r1, pc
   2e188:	adds	r1, #63	; 0x3f
   2e18a:	add	r0, pc
   2e18c:	bl	2d77c <btrfs_del_inode_ref@@Base+0x234>
   2e190:	mov	r0, r4
   2e192:	bl	17572 <btrfs_free_path@@Base>
   2e196:	movs	r0, #0
   2e198:	ldr	r2, [pc, #84]	; (2e1f0 <btrfs_del_csums@@Base+0x388>)
   2e19a:	ldr	r3, [pc, #32]	; (2e1bc <btrfs_del_csums@@Base+0x354>)
   2e19c:	add	r2, pc
   2e19e:	ldr	r3, [r2, r3]
   2e1a0:	ldr	r2, [r3, #0]
   2e1a2:	ldr	r3, [sp, #92]	; 0x5c
   2e1a4:	eors	r2, r3
   2e1a6:	beq.n	2e1b2 <btrfs_del_csums@@Base+0x34a>
   2e1a8:	blx	8510 <__stack_chk_fail@plt>
   2e1ac:	mvn.w	r0, #11
   2e1b0:	b.n	2e198 <btrfs_del_csums@@Base+0x330>
   2e1b2:	add	sp, #100	; 0x64
   2e1b4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e1b8:	ldrsh	r2, [r1, r4]
   2e1ba:	movs	r3, r0
   2e1bc:	lsls	r0, r4, #8
   2e1be:	movs	r0, r0
   2e1c0:	movs	r2, #112	; 0x70
   2e1c2:	movs	r1, r0
   2e1c4:	push	{lr}
   2e1c6:	movs	r0, r0
   2e1c8:	movs	r1, #232	; 0xe8
   2e1ca:	movs	r1, r0
   2e1cc:	movs	r1, #206	; 0xce
   2e1ce:	movs	r1, r0
   2e1d0:	movs	r1, #86	; 0x56
   2e1d2:	movs	r1, r0
   2e1d4:	cbz	r6, 2e250 <raid6_gen_syndrome@@Base+0x5c>
   2e1d6:	movs	r0, r0
   2e1d8:	movs	r1, #66	; 0x42
   2e1da:	movs	r1, r0
   2e1dc:	cbz	r2, 2e254 <raid6_gen_syndrome@@Base+0x60>
   2e1de:	movs	r0, r0
   2e1e0:	movs	r1, #12
   2e1e2:	movs	r1, r0
   2e1e4:	cbz	r0, 2e250 <raid6_gen_syndrome@@Base+0x5c>
   2e1e6:	movs	r0, r0
   2e1e8:	movs	r0, #198	; 0xc6
   2e1ea:	movs	r1, r0
   2e1ec:	stcl	0, cr0, [r7, #-0]
   2e1f0:	ldrh	r0, [r5, r7]
   2e1f2:	movs	r3, r0

0002e1f4 <raid6_gen_syndrome@@Base>:
   2e1f4:	subs	r3, r0, #2
   2e1f6:	sub.w	ip, r0, #3
   2e1fa:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   2e1fe:	add.w	ip, r2, ip, lsl #2
   2e202:	ldr.w	r8, [r2, r3, lsl #2]
   2e206:	add.w	r3, r2, r3, lsl #2
   2e20a:	movs	r4, #0
   2e20c:	ldr.w	r9, [r3, #4]
   2e210:	cmp	r1, r4
   2e212:	bhi.n	2e218 <raid6_gen_syndrome@@Base+0x24>
   2e214:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   2e218:	ldr.w	r3, [ip]
   2e21c:	subs	r7, r0, #4
   2e21e:	ldr	r6, [r3, r4]
   2e220:	mov	r3, r6
   2e222:	cmp	r7, #0
   2e224:	bge.n	2e232 <raid6_gen_syndrome@@Base+0x3e>
   2e226:	str.w	r6, [r8, r4]
   2e22a:	str.w	r3, [r9, r4]
   2e22e:	adds	r4, #4
   2e230:	b.n	2e210 <raid6_gen_syndrome@@Base+0x1c>
   2e232:	ldr.w	r5, [r2, r7, lsl #2]
   2e236:	and.w	sl, r3, #2155905152	; 0x80808080
   2e23a:	lsls	r3, r3, #1
   2e23c:	subs	r7, #1
   2e23e:	and.w	r3, r3, #4278124286	; 0xfefefefe
   2e242:	ldr.w	lr, [r5, r4]
   2e246:	mov.w	r5, sl, lsr #7
   2e24a:	rsb	r5, r5, sl, lsl #1
   2e24e:	and.w	r5, r5, #488447261	; 0x1d1d1d1d
   2e252:	eor.w	r6, r6, lr
   2e256:	eor.w	lr, r5, lr
   2e25a:	eor.w	r3, lr, r3
   2e25e:	b.n	2e222 <raid6_gen_syndrome@@Base+0x2e>

0002e260 <raid5_gen_result@@Base>:
   2e260:	cmp.w	r1, #65536	; 0x10000
   2e264:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e268:	mov	r6, r0
   2e26a:	ldr.w	r8, [r3, r2, lsl #2]
   2e26e:	mov	r5, r2
   2e270:	mov	r7, r3
   2e272:	beq.n	2e28a <raid5_gen_result@@Base+0x2a>
   2e274:	ldr	r1, [pc, #184]	; (2e330 <raid5_gen_result@@Base+0xd0>)
   2e276:	ldr	r0, [pc, #188]	; (2e334 <raid5_gen_result@@Base+0xd4>)
   2e278:	add	r1, pc
   2e27a:	add	r0, pc
   2e27c:	bl	16b70 <__btrfs_error@@Base>
   2e280:	mvn.w	r0, #21
   2e284:	add	sp, #12
   2e286:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e28a:	cmp	r2, r0
   2e28c:	bge.n	2e274 <raid5_gen_result@@Base+0x14>
   2e28e:	cmp	r0, #1
   2e290:	ble.n	2e274 <raid5_gen_result@@Base+0x14>
   2e292:	cmp	r0, #2
   2e294:	bne.n	2e2aa <raid5_gen_result@@Base+0x4a>
   2e296:	rsb	r5, r2, #1
   2e29a:	mov	r0, r8
   2e29c:	mov	r2, r1
   2e29e:	ldr.w	r1, [r3, r5, lsl #2]
   2e2a2:	blx	8480 <memcpy@plt+0x4>
   2e2a6:	movs	r0, #0
   2e2a8:	b.n	2e284 <raid5_gen_result@@Base+0x24>
   2e2aa:	mov	r2, r1
   2e2ac:	mov	r0, r8
   2e2ae:	movs	r1, #0
   2e2b0:	mvn.w	fp, #3
   2e2b4:	blx	87c4 <memset@plt+0x4>
   2e2b8:	movs	r0, #0
   2e2ba:	cmp	r0, r6
   2e2bc:	beq.n	2e2a6 <raid5_gen_result@@Base+0x46>
   2e2be:	cmp	r0, r5
   2e2c0:	bne.n	2e2c6 <raid5_gen_result@@Base+0x66>
   2e2c2:	adds	r0, #1
   2e2c4:	b.n	2e2ba <raid5_gen_result@@Base+0x5a>
   2e2c6:	ldr.w	r1, [r7, r0, lsl #2]
   2e2ca:	mov.w	r2, #65536	; 0x10000
   2e2ce:	mov	r4, r8
   2e2d0:	lsls	r3, r4, #29
   2e2d2:	bmi.n	2e308 <raid5_gen_result@@Base+0xa8>
   2e2d4:	bic.w	r9, r2, #3
   2e2d8:	sub.w	ip, r4, #4
   2e2dc:	add.w	sl, r1, r9
   2e2e0:	lsrs	r3, r2, #2
   2e2e2:	str	r3, [sp, #4]
   2e2e4:	cmp	r1, sl
   2e2e6:	bne.n	2e31e <raid5_gen_result@@Base+0xbe>
   2e2e8:	ldr	r3, [sp, #4]
   2e2ea:	add	r4, r9
   2e2ec:	mla	r2, fp, r3, r2
   2e2f0:	add	r2, r1
   2e2f2:	cmp	r1, r2
   2e2f4:	beq.n	2e2c2 <raid5_gen_result@@Base+0x62>
   2e2f6:	ldrb.w	ip, [r4], #1
   2e2fa:	ldrb.w	r3, [r1], #1
   2e2fe:	eor.w	r3, r3, ip
   2e302:	strb.w	r3, [r4, #-1]
   2e306:	b.n	2e2f2 <raid5_gen_result@@Base+0x92>
   2e308:	ldrb.w	ip, [r4], #1
   2e30c:	subs	r2, #1
   2e30e:	ldrb.w	r3, [r1], #1
   2e312:	eor.w	r3, r3, ip
   2e316:	strb.w	r3, [r4, #-1]
   2e31a:	bne.n	2e2d0 <raid5_gen_result@@Base+0x70>
   2e31c:	b.n	2e2c2 <raid5_gen_result@@Base+0x62>
   2e31e:	ldr.w	lr, [ip, #4]!
   2e322:	ldr.w	r3, [r1], #4
   2e326:	eor.w	lr, lr, r3
   2e32a:	str.w	lr, [ip]
   2e32e:	b.n	2e2e4 <raid5_gen_result@@Base+0x84>
   2e330:	movs	r0, #62	; 0x3e
   2e332:	movs	r1, r0
   2e334:	movs	r0, #35	; 0x23
   2e336:	movs	r1, r0

0002e338 <raid6_recov_data2@@Base>:
   2e338:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e33c:	mov	r5, r2
   2e33e:	ldr.w	sl, [pc, #320]	; 2e480 <raid6_recov_data2@@Base+0x148>
   2e342:	sub	sp, #28
   2e344:	cmp	r5, #0
   2e346:	mov	fp, r1
   2e348:	add	sl, pc
   2e34a:	mov	r4, r3
   2e34c:	str	r0, [sp, #8]
   2e34e:	blt.w	2e47a <raid6_recov_data2@@Base+0x142>
   2e352:	subs	r3, r0, #2
   2e354:	cmp	r3, r5
   2e356:	ble.w	2e47a <raid6_recov_data2@@Base+0x142>
   2e35a:	cmp	r4, #0
   2e35c:	blt.w	2e47a <raid6_recov_data2@@Base+0x142>
   2e360:	cmp	r3, r4
   2e362:	ble.w	2e47a <raid6_recov_data2@@Base+0x142>
   2e366:	cmp	r5, r4
   2e368:	bge.w	2e47a <raid6_recov_data2@@Base+0x142>
   2e36c:	movs	r0, #1
   2e36e:	blx	839c <calloc@plt+0x4>
   2e372:	mov	r1, fp
   2e374:	mov	r8, r0
   2e376:	movs	r0, #1
   2e378:	blx	839c <calloc@plt+0x4>
   2e37c:	mov	r7, r0
   2e37e:	cmp.w	r8, #0
   2e382:	beq.n	2e388 <raid6_recov_data2@@Base+0x50>
   2e384:	ldr	r2, [sp, #64]	; 0x40
   2e386:	cbnz	r0, 2e39e <raid6_recov_data2@@Base+0x66>
   2e388:	mov	r0, r8
   2e38a:	blx	8434 <free@plt+0x4>
   2e38e:	mov	r0, r7
   2e390:	blx	8434 <free@plt+0x4>
   2e394:	mvn.w	r0, #11
   2e398:	add	sp, #28
   2e39a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e39e:	ldr	r3, [sp, #8]
   2e3a0:	str	r2, [sp, #64]	; 0x40
   2e3a2:	add.w	r9, r3, #1073741824	; 0x40000000
   2e3a6:	sub.w	r9, r9, #2
   2e3aa:	ldr.w	r1, [r2, r9, lsl #2]
   2e3ae:	mov.w	r3, r9, lsl #2
   2e3b2:	adds	r3, #4
   2e3b4:	str	r3, [sp, #20]
   2e3b6:	str	r1, [sp, #12]
   2e3b8:	ldr	r1, [r2, r3]
   2e3ba:	str	r1, [sp, #16]
   2e3bc:	ldr.w	r1, [r2, r5, lsl #2]
   2e3c0:	str.w	r8, [r2, r5, lsl #2]
   2e3c4:	str.w	r1, [r2, r9, lsl #2]
   2e3c8:	ldr.w	r6, [r2, r4, lsl #2]
   2e3cc:	str	r1, [sp, #4]
   2e3ce:	mov	r1, fp
   2e3d0:	str.w	r0, [r2, r4, lsl #2]
   2e3d4:	str	r6, [r2, r3]
   2e3d6:	ldr	r0, [sp, #8]
   2e3d8:	bl	2e1f4 <raid6_gen_syndrome@@Base>
   2e3dc:	ldr	r2, [sp, #64]	; 0x40
   2e3de:	ldr	r3, [sp, #4]
   2e3e0:	str.w	r3, [r2, r5, lsl #2]
   2e3e4:	ldr	r3, [sp, #12]
   2e3e6:	str.w	r6, [r2, r4, lsl #2]
   2e3ea:	str.w	r3, [r2, r9, lsl #2]
   2e3ee:	ldrd	r1, r3, [sp, #16]
   2e3f2:	str	r1, [r2, r3]
   2e3f4:	ldr	r3, [pc, #140]	; (2e484 <raid6_recov_data2@@Base+0x14c>)
   2e3f6:	ldr.w	r2, [sl, r3]
   2e3fa:	subs	r3, r4, r5
   2e3fc:	ldrb	r0, [r2, r3]
   2e3fe:	ldr	r3, [pc, #136]	; (2e488 <raid6_recov_data2@@Base+0x150>)
   2e400:	lsls	r0, r0, #8
   2e402:	ldr.w	r2, [sl, r3]
   2e406:	ldr	r3, [pc, #132]	; (2e48c <raid6_recov_data2@@Base+0x154>)
   2e408:	ldr.w	r1, [sl, r3]
   2e40c:	ldrb	r3, [r1, r5]
   2e40e:	ldrb	r1, [r1, r4]
   2e410:	eors	r3, r1
   2e412:	add.w	r1, r6, fp
   2e416:	ldrb	r4, [r2, r3]
   2e418:	ldr	r3, [sp, #12]
   2e41a:	subs	r5, r3, #1
   2e41c:	ldr	r3, [sp, #4]
   2e41e:	lsls	r4, r4, #8
   2e420:	add.w	ip, r3, #4294967295	; 0xffffffff
   2e424:	ldr	r3, [sp, #16]
   2e426:	add.w	lr, r3, #4294967295	; 0xffffffff
   2e42a:	cmp	r6, r1
   2e42c:	bne.n	2e43e <raid6_recov_data2@@Base+0x106>
   2e42e:	mov	r0, r8
   2e430:	blx	8434 <free@plt+0x4>
   2e434:	mov	r0, r7
   2e436:	blx	8434 <free@plt+0x4>
   2e43a:	movs	r0, #0
   2e43c:	b.n	2e398 <raid6_recov_data2@@Base+0x60>
   2e43e:	ldrb.w	r2, [r5, #1]!
   2e442:	ldrb.w	r3, [ip, #1]!
   2e446:	ldrb.w	r9, [r6]
   2e44a:	eors	r3, r2
   2e44c:	ldrb.w	r2, [lr, #1]!
   2e450:	add.w	fp, r3, r0
   2e454:	eor.w	r2, r2, r9
   2e458:	ldr.w	r9, [pc, #52]	; 2e490 <raid6_recov_data2@@Base+0x158>
   2e45c:	add	r2, r4
   2e45e:	ldr.w	r9, [sl, r9]
   2e462:	ldrb.w	r2, [r2, r9]
   2e466:	ldrb.w	r9, [fp, r9]
   2e46a:	eor.w	r2, r2, r9
   2e46e:	strb.w	r2, [r6], #1
   2e472:	eors	r3, r2
   2e474:	strb.w	r3, [ip]
   2e478:	b.n	2e42a <raid6_recov_data2@@Base+0xf2>
   2e47a:	mvn.w	r0, #21
   2e47e:	b.n	2e398 <raid6_recov_data2@@Base+0x60>
   2e480:	ldrh	r4, [r7, r0]
   2e482:	movs	r3, r0
   2e484:	lsls	r0, r4, #9
   2e486:	movs	r0, r0
   2e488:	lsls	r4, r6, #8
   2e48a:	movs	r0, r0
   2e48c:	lsls	r0, r5, #8
   2e48e:	movs	r0, r0
   2e490:	lsls	r0, r7, #8
	...

0002e494 <raid6_recov_datap@@Base>:
   2e494:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e498:	mov	r7, r2
   2e49a:	add.w	r2, r0, #1073741824	; 0x40000000
   2e49e:	mov	r4, r3
   2e4a0:	subs	r2, #2
   2e4a2:	ldr.w	sl, [pc, #144]	; 2e534 <raid6_recov_datap@@Base+0xa0>
   2e4a6:	mov	fp, r0
   2e4a8:	movs	r0, #1
   2e4aa:	lsls	r3, r2, #2
   2e4ac:	add	sl, pc
   2e4ae:	add.w	r9, r3, #4
   2e4b2:	ldr.w	r8, [r4, r2, lsl #2]
   2e4b6:	mov	r6, r1
   2e4b8:	ldr.w	r3, [r4, r9]
   2e4bc:	str	r3, [sp, #4]
   2e4be:	blx	839c <calloc@plt+0x4>
   2e4c2:	cbz	r0, 2e52e <raid6_recov_datap@@Base+0x9a>
   2e4c4:	ldr.w	r5, [r4, r7, lsl #2]
   2e4c8:	mov	r2, r4
   2e4ca:	str.w	r0, [r4, r7, lsl #2]
   2e4ce:	mov	r1, r6
   2e4d0:	mov	r0, fp
   2e4d2:	add	r6, r8
   2e4d4:	str.w	r5, [r4, r9]
   2e4d8:	bl	2e1f4 <raid6_gen_syndrome@@Base>
   2e4dc:	ldr	r3, [sp, #4]
   2e4de:	str.w	r5, [r4, r7, lsl #2]
   2e4e2:	subs	r5, #1
   2e4e4:	str.w	r3, [r4, r9]
   2e4e8:	ldr	r3, [pc, #76]	; (2e538 <raid6_recov_datap@@Base+0xa4>)
   2e4ea:	ldr.w	r2, [sl, r3]
   2e4ee:	ldr	r3, [pc, #76]	; (2e53c <raid6_recov_datap@@Base+0xa8>)
   2e4f0:	ldr.w	r3, [sl, r3]
   2e4f4:	ldrb	r3, [r3, r7]
   2e4f6:	ldrb	r2, [r2, r3]
   2e4f8:	ldr	r3, [sp, #4]
   2e4fa:	lsls	r2, r2, #8
   2e4fc:	add.w	r9, r3, #4294967295	; 0xffffffff
   2e500:	cmp	r8, r6
   2e502:	bne.n	2e50c <raid6_recov_datap@@Base+0x78>
   2e504:	movs	r0, #0
   2e506:	add	sp, #12
   2e508:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e50c:	ldrb.w	r1, [r5, #1]!
   2e510:	ldrb.w	r3, [r9, #1]!
   2e514:	eors	r3, r1
   2e516:	ldr	r1, [pc, #40]	; (2e540 <raid6_recov_datap@@Base+0xac>)
   2e518:	add	r3, r2
   2e51a:	ldr.w	r1, [sl, r1]
   2e51e:	ldrb	r3, [r3, r1]
   2e520:	strb	r3, [r5, #0]
   2e522:	ldrb.w	r1, [r8], #1
   2e526:	eors	r3, r1
   2e528:	strb.w	r3, [r8, #-1]
   2e52c:	b.n	2e500 <raid6_recov_datap@@Base+0x6c>
   2e52e:	mvn.w	r0, #11
   2e532:	b.n	2e506 <raid6_recov_datap@@Base+0x72>
   2e534:	ldr	r0, [r3, r3]
   2e536:	movs	r3, r0
   2e538:	lsls	r4, r6, #8
   2e53a:	movs	r0, r0
   2e53c:	lsls	r0, r5, #8
   2e53e:	movs	r0, r0
   2e540:	lsls	r0, r7, #8
	...

0002e544 <raid56_recov@@Base>:
   2e544:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   2e548:	mov.w	ip, #0
   2e54c:	mov	r5, r0
   2e54e:	mov	r0, r2
   2e550:	and.w	r6, r0, #128	; 0x80
   2e554:	mov	r7, ip
   2e556:	orrs.w	lr, r6, r7
   2e55a:	ldrd	r2, r4, [sp, #40]	; 0x28
   2e55e:	ldr	r3, [sp, #48]	; 0x30
   2e560:	bne.n	2e580 <raid56_recov@@Base+0x3c>
   2e562:	and.w	r8, r0, #256	; 0x100
   2e566:	mov	r9, ip
   2e568:	orrs.w	r0, r8, r9
   2e56c:	beq.n	2e5ec <raid56_recov@@Base+0xa8>
   2e56e:	movs	r0, #3
   2e570:	cmp	r0, r5
   2e572:	bgt.n	2e5ec <raid56_recov@@Base+0xa8>
   2e574:	adds	r0, r2, #1
   2e576:	bne.n	2e584 <raid56_recov@@Base+0x40>
   2e578:	adds	r2, r4, #1
   2e57a:	bne.n	2e5f6 <raid56_recov@@Base+0xb2>
   2e57c:	movs	r0, #0
   2e57e:	b.n	2e5e6 <raid56_recov@@Base+0xa2>
   2e580:	movs	r0, #2
   2e582:	b.n	2e570 <raid56_recov@@Base+0x2c>
   2e584:	adds	r0, r4, #1
   2e586:	beq.n	2e620 <raid56_recov@@Base+0xdc>
   2e588:	cmp	r2, r4
   2e58a:	bgt.n	2e612 <raid56_recov@@Base+0xce>
   2e58c:	orrs.w	r0, r6, r7
   2e590:	bne.n	2e5f2 <raid56_recov@@Base+0xae>
   2e592:	subs	r0, r5, #2
   2e594:	cmp	r0, r2
   2e596:	bne.n	2e59e <raid56_recov@@Base+0x5a>
   2e598:	subs	r6, r5, #1
   2e59a:	cmp	r6, r4
   2e59c:	beq.n	2e608 <raid56_recov@@Base+0xc4>
   2e59e:	cmp	r0, r4
   2e5a0:	ble.n	2e5c4 <raid56_recov@@Base+0x80>
   2e5a2:	str	r3, [sp, #40]	; 0x28
   2e5a4:	mov	r0, r5
   2e5a6:	mov	r3, r4
   2e5a8:	add	sp, #12
   2e5aa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2e5ae:	b.w	2e338 <raid6_recov_data2@@Base>
   2e5b2:	mov	r2, r4
   2e5b4:	mov	r0, r5
   2e5b6:	add	sp, #12
   2e5b8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2e5bc:	b.w	2e260 <raid5_gen_result@@Base>
   2e5c0:	mov	r2, r4
   2e5c2:	b.n	2e5b6 <raid56_recov@@Base+0x72>
   2e5c4:	subs	r0, r5, #1
   2e5c6:	cmp	r0, r4
   2e5c8:	bne.n	2e5d6 <raid56_recov@@Base+0x92>
   2e5ca:	mov	r0, r5
   2e5cc:	add	sp, #12
   2e5ce:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2e5d2:	b.w	2e494 <raid6_recov_datap@@Base>
   2e5d6:	strd	r1, r3, [sp]
   2e5da:	bl	2e260 <raid5_gen_result@@Base>
   2e5de:	ldrd	r1, r3, [sp]
   2e5e2:	cmp	r0, #0
   2e5e4:	bge.n	2e608 <raid56_recov@@Base+0xc4>
   2e5e6:	add	sp, #12
   2e5e8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2e5ec:	mvn.w	r0, #21
   2e5f0:	b.n	2e5e6 <raid56_recov@@Base+0xa2>
   2e5f2:	movs	r0, #1
   2e5f4:	b.n	2e5e6 <raid56_recov@@Base+0xa2>
   2e5f6:	orrs.w	r2, r6, r7
   2e5fa:	bne.n	2e5b2 <raid56_recov@@Base+0x6e>
   2e5fc:	subs	r0, r5, #1
   2e5fe:	cmp	r0, r4
   2e600:	beq.n	2e608 <raid56_recov@@Base+0xc4>
   2e602:	subs	r2, r5, #2
   2e604:	cmp	r2, r4
   2e606:	bne.n	2e5c0 <raid56_recov@@Base+0x7c>
   2e608:	mov	r2, r3
   2e60a:	mov	r0, r5
   2e60c:	bl	2e1f4 <raid6_gen_syndrome@@Base>
   2e610:	b.n	2e57c <raid56_recov@@Base+0x38>
   2e612:	orrs.w	r0, r6, r7
   2e616:	bne.n	2e5f2 <raid56_recov@@Base+0xae>
   2e618:	mov	r0, r2
   2e61a:	mov	r2, r4
   2e61c:	mov	r4, r0
   2e61e:	b.n	2e592 <raid56_recov@@Base+0x4e>
   2e620:	orrs.w	r0, r6, r7
   2e624:	mov	r4, r2
   2e626:	b.n	2e5fa <raid56_recov@@Base+0xb6>

0002e628 <check_arg_type@@Base>:
   2e628:	ldr	r1, [pc, #128]	; (2e6ac <check_arg_type@@Base+0x84>)
   2e62a:	ldr	r2, [pc, #132]	; (2e6b0 <check_arg_type@@Base+0x88>)
   2e62c:	push	{r4, lr}
   2e62e:	add	r1, pc
   2e630:	sub.w	sp, sp, #4096	; 0x1000
   2e634:	sub	sp, #8
   2e636:	ldr	r2, [r1, r2]
   2e638:	add.w	r3, sp, #4096	; 0x1000
   2e63c:	adds	r3, #4
   2e63e:	ldr	r2, [r2, #0]
   2e640:	str	r2, [r3, #0]
   2e642:	mov.w	r2, #0
   2e646:	cbz	r0, 2e69a <check_arg_type@@Base+0x72>
   2e648:	add	r4, sp, #4
   2e64a:	mov.w	r2, #4096	; 0x1000
   2e64e:	mov	r1, r4
   2e650:	blx	85e0 <__realpath_chk@plt>
   2e654:	cbz	r0, 2e690 <check_arg_type@@Base+0x68>
   2e656:	mov	r0, r4
   2e658:	bl	2f044 <path_is_block_device@@Base>
   2e65c:	cmp	r0, #1
   2e65e:	beq.n	2e6a0 <check_arg_type@@Base+0x78>
   2e660:	mov	r0, r4
   2e662:	bl	2f0a0 <path_is_mount_point@@Base>
   2e666:	cmp	r0, #1
   2e668:	beq.n	2e676 <check_arg_type@@Base+0x4e>
   2e66a:	mov	r0, r4
   2e66c:	bl	2f0e8 <path_is_reg_file@@Base>
   2e670:	cmp	r0, #0
   2e672:	it	ne
   2e674:	movne	r0, #4
   2e676:	ldr	r1, [pc, #60]	; (2e6b4 <check_arg_type@@Base+0x8c>)
   2e678:	add.w	r3, sp, #4096	; 0x1000
   2e67c:	ldr	r2, [pc, #48]	; (2e6b0 <check_arg_type@@Base+0x88>)
   2e67e:	adds	r3, #4
   2e680:	add	r1, pc
   2e682:	ldr	r2, [r1, r2]
   2e684:	ldr	r1, [r2, #0]
   2e686:	ldr	r2, [r3, #0]
   2e688:	eors	r1, r2
   2e68a:	beq.n	2e6a4 <check_arg_type@@Base+0x7c>
   2e68c:	blx	8510 <__stack_chk_fail@plt>
   2e690:	blx	8784 <__errno_location@plt>
   2e694:	ldr	r0, [r0, #0]
   2e696:	negs	r0, r0
   2e698:	b.n	2e676 <check_arg_type@@Base+0x4e>
   2e69a:	mvn.w	r0, #21
   2e69e:	b.n	2e676 <check_arg_type@@Base+0x4e>
   2e6a0:	movs	r0, #3
   2e6a2:	b.n	2e676 <check_arg_type@@Base+0x4e>
   2e6a4:	add.w	sp, sp, #4096	; 0x1000
   2e6a8:	add	sp, #8
   2e6aa:	pop	{r4, pc}
   2e6ac:	ldrsb	r6, [r2, r5]
   2e6ae:	movs	r3, r0
   2e6b0:	lsls	r0, r4, #8
   2e6b2:	movs	r0, r0
   2e6b4:	ldrsb	r4, [r0, r4]
   2e6b6:	movs	r3, r0

0002e6b8 <test_uuid_unique@@Base>:
   2e6b8:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   2e6ba:	movs	r1, #0
   2e6bc:	ldr	r2, [pc, #136]	; (2e748 <test_uuid_unique@@Base+0x90>)
   2e6be:	mov	r4, r0
   2e6c0:	ldr	r3, [pc, #136]	; (2e74c <test_uuid_unique@@Base+0x94>)
   2e6c2:	add	r0, sp, #8
   2e6c4:	add	r2, pc
   2e6c6:	ldr	r3, [r2, r3]
   2e6c8:	ldr	r3, [r3, #0]
   2e6ca:	str	r3, [sp, #12]
   2e6cc:	mov.w	r3, #0
   2e6d0:	strd	r1, r1, [sp, #4]
   2e6d4:	blx	8958 <blkid_get_cache@plt>
   2e6d8:	cmp	r0, #0
   2e6da:	bge.n	2e6fa <test_uuid_unique@@Base+0x42>
   2e6dc:	ldr	r0, [pc, #112]	; (2e750 <test_uuid_unique@@Base+0x98>)
   2e6de:	movs	r4, #1
   2e6e0:	add	r0, pc
   2e6e2:	blx	865c <puts@plt+0x4>
   2e6e6:	ldr	r2, [pc, #108]	; (2e754 <test_uuid_unique@@Base+0x9c>)
   2e6e8:	ldr	r3, [pc, #96]	; (2e74c <test_uuid_unique@@Base+0x94>)
   2e6ea:	add	r2, pc
   2e6ec:	ldr	r3, [r2, r3]
   2e6ee:	ldr	r2, [r3, #0]
   2e6f0:	ldr	r3, [sp, #12]
   2e6f2:	eors	r2, r3
   2e6f4:	beq.n	2e740 <test_uuid_unique@@Base+0x88>
   2e6f6:	blx	8510 <__stack_chk_fail@plt>
   2e6fa:	ldr	r0, [sp, #8]
   2e6fc:	add	r6, sp, #4
   2e6fe:	blx	89a4 <blkid_probe_all@plt>
   2e702:	ldr	r0, [sp, #8]
   2e704:	blx	851c <blkid_dev_iterate_begin@plt>
   2e708:	ldr	r1, [pc, #76]	; (2e758 <test_uuid_unique@@Base+0xa0>)
   2e70a:	mov	r2, r4
   2e70c:	add	r1, pc
   2e70e:	mov	r5, r0
   2e710:	blx	8584 <blkid_dev_set_search@plt>
   2e714:	mov	r1, r6
   2e716:	mov	r0, r5
   2e718:	blx	86d0 <blkid_dev_next@plt>
   2e71c:	mov	r4, r0
   2e71e:	cbz	r0, 2e724 <test_uuid_unique@@Base+0x6c>
   2e720:	movs	r4, #1
   2e722:	b.n	2e732 <test_uuid_unique@@Base+0x7a>
   2e724:	ldrd	r1, r0, [sp, #4]
   2e728:	blx	86dc <blkid_verify@plt>
   2e72c:	str	r0, [sp, #4]
   2e72e:	cmp	r0, #0
   2e730:	beq.n	2e714 <test_uuid_unique@@Base+0x5c>
   2e732:	mov	r0, r5
   2e734:	blx	881c <blkid_dev_iterate_end@plt>
   2e738:	ldr	r0, [sp, #8]
   2e73a:	blx	84d0 <blkid_put_cache@plt>
   2e73e:	b.n	2e6e6 <test_uuid_unique@@Base+0x2e>
   2e740:	mov	r0, r4
   2e742:	add	sp, #16
   2e744:	pop	{r4, r5, r6, pc}
   2e746:	nop
   2e748:	ldrsb	r0, [r0, r3]
   2e74a:	movs	r3, r0
   2e74c:	lsls	r0, r4, #8
   2e74e:	movs	r0, r0
   2e750:	subs	r7, #28
   2e752:	movs	r2, r0
   2e754:	ldrsb	r2, [r3, r2]
   2e756:	movs	r3, r0
   2e758:	ldmia	r1!, {r0}
	...

0002e75c <btrfs_add_to_fsid@@Base>:
   2e75c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e760:	sub	sp, #132	; 0x84
   2e762:	mov	fp, r3
   2e764:	ldr	r3, [pc, #596]	; (2e9bc <btrfs_add_to_fsid@@Base+0x260>)
   2e766:	str	r2, [sp, #48]	; 0x30
   2e768:	mov	r9, r0
   2e76a:	ldr	r2, [pc, #596]	; (2e9c0 <btrfs_add_to_fsid@@Base+0x264>)
   2e76c:	add	r3, pc
   2e76e:	str	r3, [sp, #52]	; 0x34
   2e770:	ldr	r3, [pc, #592]	; (2e9c4 <btrfs_add_to_fsid@@Base+0x268>)
   2e772:	add	r2, pc
   2e774:	ldr.w	r8, [r1, #464]	; 0x1d0
   2e778:	ldr	r7, [sp, #184]	; 0xb8
   2e77a:	ldr	r3, [r2, r3]
   2e77c:	ldr.w	r6, [r8, #308]	; 0x134
   2e780:	ldr	r3, [r3, #0]
   2e782:	str	r3, [sp, #124]	; 0x7c
   2e784:	mov.w	r3, #0
   2e788:	ldrd	r0, r1, [sp, #168]	; 0xa8
   2e78c:	mov	r2, r7
   2e78e:	ldr	r3, [r6, #112]	; 0x70
   2e790:	str	r3, [sp, #32]
   2e792:	ldr	r3, [r6, #116]	; 0x74
   2e794:	str	r3, [sp, #36]	; 0x24
   2e796:	movs	r3, #0
   2e798:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   2e79c:	umull	r3, r4, r7, r0
   2e7a0:	movs	r0, #1
   2e7a2:	strd	r3, r4, [sp, #16]
   2e7a6:	ldr	r3, [sp, #20]
   2e7a8:	mla	r3, r7, r1, r3
   2e7ac:	movs	r1, #128	; 0x80
   2e7ae:	str	r3, [sp, #20]
   2e7b0:	blx	839c <calloc@plt+0x4>
   2e7b4:	mov	r4, r0
   2e7b6:	cmp	r0, #0
   2e7b8:	beq.w	2e9a4 <btrfs_add_to_fsid@@Base+0x248>
   2e7bc:	mov	r1, r7
   2e7be:	movs	r0, #1
   2e7c0:	blx	839c <calloc@plt+0x4>
   2e7c4:	mov	r5, r0
   2e7c6:	cmp	r0, #0
   2e7c8:	beq.w	2e9a4 <btrfs_add_to_fsid@@Base+0x248>
   2e7cc:	add.w	r3, r4, #112	; 0x70
   2e7d0:	str	r3, [sp, #44]	; 0x2c
   2e7d2:	mov	r0, r3
   2e7d4:	blx	8850 <uuid_generate@plt>
   2e7d8:	ldr	r2, [sp, #176]	; 0xb0
   2e7da:	movs	r3, #0
   2e7dc:	str	r7, [r4, #96]	; 0x60
   2e7de:	strd	r3, r3, [r4, #64]	; 0x40
   2e7e2:	mov	r0, fp
   2e7e4:	str	r2, [r4, #92]	; 0x5c
   2e7e6:	mov	sl, r3
   2e7e8:	ldr	r2, [sp, #180]	; 0xb4
   2e7ea:	strd	r3, r3, [r4, #104]	; 0x68
   2e7ee:	strd	r3, r3, [r4, #80]	; 0x50
   2e7f2:	str	r2, [r4, #88]	; 0x58
   2e7f4:	ldr	r2, [sp, #48]	; 0x30
   2e7f6:	strd	r3, r3, [r4, #16]
   2e7fa:	str	r2, [r4, #24]
   2e7fc:	movs	r2, #1
   2e7fe:	str	r2, [r4, #28]
   2e800:	ldrd	r1, r2, [sp, #16]
   2e804:	strd	r1, r2, [r4, #72]	; 0x48
   2e808:	ldr.w	r2, [r8, #36]	; 0x24
   2e80c:	str	r2, [r4, #8]
   2e80e:	blx	84f8 <strdup@plt+0x4>
   2e812:	str	r0, [r4, #32]
   2e814:	cmp	r0, #0
   2e816:	beq.w	2e9ac <btrfs_add_to_fsid@@Base+0x250>
   2e81a:	ldrd	r0, r1, [sp, #32]
   2e81e:	strd	sl, sl, [sp, #24]
   2e822:	ldrd	sl, fp, [sp, #16]
   2e826:	adds.w	r2, sl, r0
   2e82a:	adcs.w	r3, fp, r1
   2e82e:	mov	fp, r2
   2e830:	itt	cs
   2e832:	movcs	r0, #1
   2e834:	movcs	r1, #0
   2e836:	mov	sl, r3
   2e838:	it	cs
   2e83a:	strdcs	r0, r1, [sp, #24]
   2e83e:	ldrd	r2, r3, [sp, #24]
   2e842:	orrs	r3, r2
   2e844:	beq.n	2e872 <btrfs_add_to_fsid@@Base+0x116>
   2e846:	ldrd	r0, r1, [sp, #16]
   2e84a:	mov.w	r2, #512	; 0x200
   2e84e:	bl	2fbf8 <pretty_size_mode@@Base>
   2e852:	ldrd	r2, r3, [sp, #16]
   2e856:	mvn.w	r9, #74	; 0x4a
   2e85a:	str	r0, [sp, #0]
   2e85c:	ldr	r0, [pc, #360]	; (2e9c8 <btrfs_add_to_fsid@@Base+0x26c>)
   2e85e:	add	r0, pc
   2e860:	bl	16b70 <__btrfs_error@@Base>
   2e864:	mov	r0, r4
   2e866:	blx	8434 <free@plt+0x4>
   2e86a:	mov	r0, r5
   2e86c:	blx	8434 <free@plt+0x4>
   2e870:	b.n	2e990 <btrfs_add_to_fsid@@Base+0x234>
   2e872:	mov	r0, r9
   2e874:	mov	r2, r4
   2e876:	mov	r1, r8
   2e878:	strd	r4, r4, [r4]
   2e87c:	bl	27b90 <btrfs_add_device@@Base>
   2e880:	mov	r9, r0
   2e882:	cmp	r0, #0
   2e884:	bne.n	2e864 <btrfs_add_to_fsid@@Base+0x108>
   2e886:	ldr.w	r3, [r6, #136]	; 0x88
   2e88a:	mov	r1, r6
   2e88c:	ldr.w	r2, [r6, #140]	; 0x8c
   2e890:	mov	r0, r5
   2e892:	adds	r3, #1
   2e894:	str.w	fp, [r6, #112]	; 0x70
   2e898:	adc.w	r2, r2, #0
   2e89c:	str.w	r3, [r6, #136]	; 0x88
   2e8a0:	str.w	r2, [r6, #140]	; 0x8c
   2e8a4:	movw	r2, #3531	; 0xdcb
   2e8a8:	str.w	sl, [r6, #116]	; 0x74
   2e8ac:	addw	r6, r5, #267	; 0x10b
   2e8b0:	blx	8480 <memcpy@plt+0x4>
   2e8b4:	movs	r3, #0
   2e8b6:	mov.w	r2, #65536	; 0x10000
   2e8ba:	strd	r2, r3, [r5, #48]	; 0x30
   2e8be:	ldr	r3, [r4, #64]	; 0x40
   2e8c0:	str.w	r3, [r5, #201]	; 0xc9
   2e8c4:	ldr	r3, [r4, #68]	; 0x44
   2e8c6:	str.w	r3, [r5, #205]	; 0xcd
   2e8ca:	ldr	r3, [r4, #104]	; 0x68
   2e8cc:	str.w	r3, [r5, #237]	; 0xed
   2e8d0:	ldr	r3, [r4, #108]	; 0x6c
   2e8d2:	str.w	r3, [r5, #241]	; 0xf1
   2e8d6:	ldr	r3, [r4, #88]	; 0x58
   2e8d8:	str.w	r3, [r5, #225]	; 0xe1
   2e8dc:	ldr	r3, [r4, #92]	; 0x5c
   2e8de:	str.w	r3, [r5, #229]	; 0xe5
   2e8e2:	ldr	r3, [r4, #96]	; 0x60
   2e8e4:	str.w	r3, [r5, #233]	; 0xe9
   2e8e8:	ldr	r3, [r4, #72]	; 0x48
   2e8ea:	str.w	r3, [r5, #209]	; 0xd1
   2e8ee:	ldr	r3, [r4, #76]	; 0x4c
   2e8f0:	str.w	r3, [r5, #213]	; 0xd5
   2e8f4:	ldr	r3, [r4, #80]	; 0x50
   2e8f6:	str.w	r3, [r5, #217]	; 0xd9
   2e8fa:	ldr	r3, [r4, #84]	; 0x54
   2e8fc:	str.w	r3, [r5, #221]	; 0xdd
   2e900:	ldr	r3, [sp, #44]	; 0x2c
   2e902:	add.w	ip, r3, #16
   2e906:	mov	r2, r3
   2e908:	adds	r6, #8
   2e90a:	ldmia	r2!, {r0, r1}
   2e90c:	cmp	r2, ip
   2e90e:	str.w	r0, [r6, #-8]
   2e912:	mov	r3, r2
   2e914:	str.w	r1, [r6, #-4]
   2e918:	bne.n	2e906 <btrfs_add_to_fsid@@Base+0x1aa>
   2e91a:	mov.w	r2, #65536	; 0x10000
   2e91e:	movs	r3, #0
   2e920:	ldr	r0, [sp, #48]	; 0x30
   2e922:	mov	r1, r5
   2e924:	strd	r2, r3, [sp]
   2e928:	mov	r2, r7
   2e92a:	blx	8828 <pwrite64@plt>
   2e92e:	cmp	r0, r7
   2e930:	beq.n	2e972 <btrfs_add_to_fsid@@Base+0x216>
   2e932:	ldr	r2, [sp, #52]	; 0x34
   2e934:	add	r4, sp, #60	; 0x3c
   2e936:	ldr	r3, [pc, #148]	; (2e9cc <btrfs_add_to_fsid@@Base+0x270>)
   2e938:	movs	r1, #1
   2e93a:	ldr	r0, [r2, r3]
   2e93c:	ldr	r3, [pc, #144]	; (2e9d0 <btrfs_add_to_fsid@@Base+0x274>)
   2e93e:	ldr	r2, [pc, #148]	; (2e9d4 <btrfs_add_to_fsid@@Base+0x278>)
   2e940:	add	r3, pc
   2e942:	str	r3, [sp, #8]
   2e944:	ldr	r3, [pc, #144]	; (2e9d8 <btrfs_add_to_fsid@@Base+0x27c>)
   2e946:	add	r2, pc
   2e948:	str	r1, [sp, #12]
   2e94a:	add	r3, pc
   2e94c:	str	r3, [sp, #4]
   2e94e:	movs	r3, #192	; 0xc0
   2e950:	str	r3, [sp, #0]
   2e952:	ldr	r3, [pc, #136]	; (2e9dc <btrfs_add_to_fsid@@Base+0x280>)
   2e954:	ldr	r0, [r0, #0]
   2e956:	add	r3, pc
   2e958:	blx	8860 <__fprintf_chk@plt+0x4>
   2e95c:	movs	r1, #16
   2e95e:	mov	r0, r4
   2e960:	blx	86c4 <backtrace@plt>
   2e964:	movs	r2, #2
   2e966:	mov	r1, r0
   2e968:	mov	r0, r4
   2e96a:	blx	89c8 <backtrace_symbols_fd@plt>
   2e96e:	blx	8980 <abort@plt>
   2e972:	mov	r0, r5
   2e974:	blx	8434 <free@plt+0x4>
   2e978:	ldr.w	r2, [r8, #352]	; 0x160
   2e97c:	mov	r3, r2
   2e97e:	ldr.w	r1, [r3, #72]!
   2e982:	str	r4, [r1, #4]
   2e984:	strd	r1, r3, [r4]
   2e988:	str	r4, [r2, #72]	; 0x48
   2e98a:	ldr.w	r3, [r8, #352]	; 0x160
   2e98e:	str	r3, [r4, #12]
   2e990:	ldr	r2, [pc, #76]	; (2e9e0 <btrfs_add_to_fsid@@Base+0x284>)
   2e992:	ldr	r3, [pc, #48]	; (2e9c4 <btrfs_add_to_fsid@@Base+0x268>)
   2e994:	add	r2, pc
   2e996:	ldr	r3, [r2, r3]
   2e998:	ldr	r2, [r3, #0]
   2e99a:	ldr	r3, [sp, #124]	; 0x7c
   2e99c:	eors	r2, r3
   2e99e:	beq.n	2e9b2 <btrfs_add_to_fsid@@Base+0x256>
   2e9a0:	blx	8510 <__stack_chk_fail@plt>
   2e9a4:	mvn.w	r9, #11
   2e9a8:	movs	r5, #0
   2e9aa:	b.n	2e864 <btrfs_add_to_fsid@@Base+0x108>
   2e9ac:	mvn.w	r9, #11
   2e9b0:	b.n	2e864 <btrfs_add_to_fsid@@Base+0x108>
   2e9b2:	mov	r0, r9
   2e9b4:	add	sp, #132	; 0x84
   2e9b6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e9ba:	nop
   2e9bc:	ldrsb	r0, [r3, r0]
   2e9be:	movs	r3, r0
   2e9c0:	ldrsb	r2, [r2, r0]
   2e9c2:	movs	r3, r0
   2e9c4:	lsls	r0, r4, #8
   2e9c6:	movs	r0, r0
   2e9c8:	subs	r5, #189	; 0xbd
   2e9ca:	movs	r2, r0
   2e9cc:	lsls	r0, r6, #8
   2e9ce:	movs	r0, r0
   2e9d0:	subs	r5, #51	; 0x33
   2e9d2:	movs	r2, r0
   2e9d4:	add	r5, pc, #368	; (adr r5, 2eb48 <btrfs_device_already_in_root@@Base+0x5c>)
   2e9d6:	movs	r0, r0
   2e9d8:	subs	r5, #234	; 0xea
   2e9da:	movs	r2, r0
   2e9dc:	subs	r5, #8
   2e9de:	movs	r2, r0
   2e9e0:	strh	r0, [r6, r7]
   2e9e2:	movs	r3, r0

0002e9e4 <btrfs_register_one_device@@Base>:
   2e9e4:	ldr	r1, [pc, #168]	; (2ea90 <btrfs_register_one_device@@Base+0xac>)
   2e9e6:	ldr	r2, [pc, #172]	; (2ea94 <btrfs_register_one_device@@Base+0xb0>)
   2e9e8:	push	{r4, r5, r6, r7, lr}
   2e9ea:	add	r1, pc
   2e9ec:	sub.w	sp, sp, #4096	; 0x1000
   2e9f0:	mov	r6, r0
   2e9f2:	sub	sp, #12
   2e9f4:	ldr	r0, [pc, #160]	; (2ea98 <btrfs_register_one_device@@Base+0xb4>)
   2e9f6:	ldr	r2, [r1, r2]
   2e9f8:	add.w	r3, sp, #4096	; 0x1000
   2e9fc:	add	r0, pc
   2e9fe:	movs	r1, #2
   2ea00:	adds	r3, #4
   2ea02:	ldr	r2, [r2, #0]
   2ea04:	str	r2, [r3, #0]
   2ea06:	mov.w	r2, #0
   2ea0a:	blx	864c <open64@plt>
   2ea0e:	subs	r5, r0, #0
   2ea10:	bge.n	2ea3c <btrfs_register_one_device@@Base+0x58>
   2ea12:	ldr	r0, [pc, #136]	; (2ea9c <btrfs_register_one_device@@Base+0xb8>)
   2ea14:	add	r0, pc
   2ea16:	bl	16af4 <__btrfs_warning@@Base>
   2ea1a:	blx	8784 <__errno_location@plt>
   2ea1e:	ldr	r4, [r0, #0]
   2ea20:	negs	r4, r4
   2ea22:	ldr	r1, [pc, #124]	; (2eaa0 <btrfs_register_one_device@@Base+0xbc>)
   2ea24:	add.w	r3, sp, #4096	; 0x1000
   2ea28:	ldr	r2, [pc, #104]	; (2ea94 <btrfs_register_one_device@@Base+0xb0>)
   2ea2a:	adds	r3, #4
   2ea2c:	add	r1, pc
   2ea2e:	ldr	r2, [r1, r2]
   2ea30:	ldr	r1, [r2, #0]
   2ea32:	ldr	r2, [r3, #0]
   2ea34:	eors	r1, r2
   2ea36:	beq.n	2ea80 <btrfs_register_one_device@@Base+0x9c>
   2ea38:	blx	8510 <__stack_chk_fail@plt>
   2ea3c:	mov	r4, sp
   2ea3e:	add	r7, sp, #8
   2ea40:	mov.w	r2, #4096	; 0x1000
   2ea44:	movs	r1, #0
   2ea46:	mov	r0, r4
   2ea48:	blx	87c4 <memset@plt+0x4>
   2ea4c:	movw	r2, #4088	; 0xff8
   2ea50:	mov	r1, r6
   2ea52:	mov	r0, r7
   2ea54:	bl	2f278 <__strncpy_null@@Base>
   2ea58:	mov	r2, r4
   2ea5a:	ldr	r1, [pc, #48]	; (2ea8c <btrfs_register_one_device@@Base+0xa8>)
   2ea5c:	mov	r0, r5
   2ea5e:	blx	85bc <ioctl@plt>
   2ea62:	subs	r4, r0, #0
   2ea64:	bge.n	2ea78 <btrfs_register_one_device@@Base+0x94>
   2ea66:	ldr	r0, [pc, #60]	; (2eaa4 <btrfs_register_one_device@@Base+0xc0>)
   2ea68:	mov	r1, r6
   2ea6a:	add	r0, pc
   2ea6c:	bl	16b70 <__btrfs_error@@Base>
   2ea70:	blx	8784 <__errno_location@plt>
   2ea74:	ldr	r4, [r0, #0]
   2ea76:	negs	r4, r4
   2ea78:	mov	r0, r5
   2ea7a:	blx	8998 <close@plt>
   2ea7e:	b.n	2ea22 <btrfs_register_one_device@@Base+0x3e>
   2ea80:	mov	r0, r4
   2ea82:	add.w	sp, sp, #4096	; 0x1000
   2ea86:	add	sp, #12
   2ea88:	pop	{r4, r5, r6, r7, pc}
   2ea8a:	nop
   2ea8c:	str	r4, [sp, #16]
   2ea8e:	str	r0, [r0, r0]
   2ea90:	strh	r2, [r3, r6]
   2ea92:	movs	r3, r0
   2ea94:	lsls	r0, r4, #8
   2ea96:	movs	r0, r0
   2ea98:	subs	r4, #137	; 0x89
   2ea9a:	movs	r2, r0
   2ea9c:	subs	r4, #132	; 0x84
   2ea9e:	movs	r2, r0
   2eaa0:	strh	r0, [r3, r5]
   2eaa2:	movs	r3, r0
   2eaa4:	subs	r4, #114	; 0x72
   2eaa6:	movs	r2, r0

0002eaa8 <btrfs_register_all_devices@@Base>:
   2eaa8:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   2eaac:	bl	29e7c <btrfs_scanned_uuids@@Base>
   2eab0:	movs	r5, #0
   2eab2:	ldr	r4, [r0, #0]
   2eab4:	mov	r6, r0
   2eab6:	mov	r0, r5
   2eab8:	subs	r4, #80	; 0x50
   2eaba:	add.w	r3, r4, #80	; 0x50
   2eabe:	cmp	r6, r3
   2eac0:	bne.n	2eac8 <btrfs_register_all_devices@@Base+0x20>
   2eac2:	mov	r0, r5
   2eac4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2eac8:	mov	r8, r4
   2eaca:	ldr.w	r7, [r8, #72]!
   2eace:	cmp	r7, r8
   2ead0:	bne.n	2ead8 <btrfs_register_all_devices@@Base+0x30>
   2ead2:	ldr	r4, [r4, #80]	; 0x50
   2ead4:	subs	r4, #80	; 0x50
   2ead6:	b.n	2eaba <btrfs_register_all_devices@@Base+0x12>
   2ead8:	ldr	r3, [r7, #32]
   2eada:	ldrb	r2, [r3, #0]
   2eadc:	cbz	r2, 2eae4 <btrfs_register_all_devices@@Base+0x3c>
   2eade:	mov	r0, r3
   2eae0:	bl	2e9e4 <btrfs_register_one_device@@Base>
   2eae4:	cbz	r0, 2eae8 <btrfs_register_all_devices@@Base+0x40>
   2eae6:	adds	r5, #1
   2eae8:	ldr	r7, [r7, #0]
   2eaea:	b.n	2eace <btrfs_register_all_devices@@Base+0x26>

0002eaec <btrfs_device_already_in_root@@Base>:
   2eaec:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2eaee:	mov	r6, r0
   2eaf0:	mov.w	r0, #4096	; 0x1000
   2eaf4:	mov	r7, r1
   2eaf6:	mov	r4, r2
   2eaf8:	blx	8678 <malloc@plt+0x4>
   2eafc:	mov	r5, r0
   2eafe:	cbz	r0, 2eb66 <btrfs_device_already_in_root@@Base+0x7a>
   2eb00:	asrs	r3, r4, #31
   2eb02:	mov	r2, r4
   2eb04:	mov	r1, r0
   2eb06:	strd	r2, r3, [sp]
   2eb0a:	mov	r0, r7
   2eb0c:	mov.w	r2, #4096	; 0x1000
   2eb10:	blx	8610 <pread64@plt>
   2eb14:	cmp.w	r0, #4096	; 0x1000
   2eb18:	mov	r4, r0
   2eb1a:	bne.n	2eb56 <btrfs_device_already_in_root@@Base+0x6a>
   2eb1c:	ldrd	r2, r3, [r5, #64]	; 0x40
   2eb20:	add	r1, pc, #76	; (adr r1, 2eb70 <btrfs_device_already_in_root@@Base+0x84>)
   2eb22:	ldrd	r0, r1, [r1]
   2eb26:	cmp	r3, r1
   2eb28:	it	eq
   2eb2a:	cmpeq	r2, r0
   2eb2c:	beq.n	2eb3c <btrfs_device_already_in_root@@Base+0x50>
   2eb2e:	add	r1, pc, #72	; (adr r1, 2eb78 <btrfs_device_already_in_root@@Base+0x8c>)
   2eb30:	ldrd	r0, r1, [r1]
   2eb34:	cmp	r3, r1
   2eb36:	it	eq
   2eb38:	cmpeq	r2, r0
   2eb3a:	bne.n	2eb62 <btrfs_device_already_in_root@@Base+0x76>
   2eb3c:	ldr.w	r3, [r6, #464]	; 0x1d0
   2eb40:	add.w	r0, r5, #32
   2eb44:	movs	r2, #16
   2eb46:	ldr.w	r1, [r3, #308]	; 0x134
   2eb4a:	adds	r1, #32
   2eb4c:	blx	84a8 <memcmp@plt+0x4>
   2eb50:	clz	r4, r0
   2eb54:	lsrs	r4, r4, #5
   2eb56:	mov	r0, r5
   2eb58:	blx	8434 <free@plt+0x4>
   2eb5c:	mov	r0, r4
   2eb5e:	add	sp, #12
   2eb60:	pop	{r4, r5, r6, r7, pc}
   2eb62:	movs	r4, #0
   2eb64:	b.n	2eb56 <btrfs_device_already_in_root@@Base+0x6a>
   2eb66:	mvn.w	r4, #11
   2eb6a:	b.n	2eb5c <btrfs_device_already_in_root@@Base+0x70>
   2eb6c:	nop.w
   2eb70:	negs	r7, r3
   2eb72:	strh	r0, [r1, r1]
   2eb74:	strh	r6, [r4, r5]
   2eb76:	ldr	r5, [pc, #380]	; (2ecf4 <btrfs_scan_devices@@Base+0xb4>)
   2eb78:	tst	r1, r4
   2eb7a:	strh	r0, [r1, r1]
   2eb7c:	strh	r6, [r4, r5]
   2eb7e:	ldr	r5, [pc, #380]	; (2ecfc <btrfs_scan_devices@@Base+0xbc>)

0002eb80 <is_seen_fsid@@Base>:
   2eb80:	push	{r3, r4, r5, lr}
   2eb82:	mov	r5, r0
   2eb84:	ldrb	r3, [r0, #0]
   2eb86:	ldr.w	r4, [r1, r3, lsl #2]
   2eb8a:	cbnz	r4, 2eb90 <is_seen_fsid@@Base+0x10>
   2eb8c:	mov	r0, r4
   2eb8e:	pop	{r3, r4, r5, pc}
   2eb90:	movs	r2, #16
   2eb92:	mov	r1, r5
   2eb94:	mov	r0, r4
   2eb96:	blx	84a8 <memcmp@plt+0x4>
   2eb9a:	cbz	r0, 2eba0 <is_seen_fsid@@Base+0x20>
   2eb9c:	ldr	r4, [r4, #16]
   2eb9e:	b.n	2eb8a <is_seen_fsid@@Base+0xa>
   2eba0:	movs	r0, #1
   2eba2:	b.n	2eb8e <is_seen_fsid@@Base+0xe>

0002eba4 <add_seen_fsid@@Base>:
   2eba4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   2eba8:	mov	r5, r0
   2ebaa:	ldrb.w	sl, [r0]
   2ebae:	mov	r7, r1
   2ebb0:	mov	r9, r2
   2ebb2:	mov	r8, r3
   2ebb4:	ldr.w	r4, [r1, sl, lsl #2]
   2ebb8:	cbnz	r4, 2ebf0 <add_seen_fsid@@Base+0x4c>
   2ebba:	movs	r0, #28
   2ebbc:	blx	8678 <malloc@plt+0x4>
   2ebc0:	mov	r6, r0
   2ebc2:	cbz	r0, 2ec10 <add_seen_fsid@@Base+0x6c>
   2ebc4:	add.w	ip, r5, #16
   2ebc8:	mov	r2, r0
   2ebca:	movs	r3, #0
   2ebcc:	str	r3, [r0, #16]
   2ebce:	ldr	r0, [r5, #0]
   2ebd0:	adds	r5, #8
   2ebd2:	ldr.w	r1, [r5, #-4]
   2ebd6:	cmp	r5, ip
   2ebd8:	mov	r3, r2
   2ebda:	stmia	r3!, {r0, r1}
   2ebdc:	mov	r2, r3
   2ebde:	bne.n	2ebce <add_seen_fsid@@Base+0x2a>
   2ebe0:	strd	r8, r9, [r6, #20]
   2ebe4:	cbz	r4, 2ec04 <add_seen_fsid@@Base+0x60>
   2ebe6:	str	r6, [r4, #16]
   2ebe8:	movs	r0, #0
   2ebea:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   2ebee:	mov	r4, r3
   2ebf0:	movs	r2, #16
   2ebf2:	mov	r1, r5
   2ebf4:	mov	r0, r4
   2ebf6:	blx	84a8 <memcmp@plt+0x4>
   2ebfa:	cbz	r0, 2ec0a <add_seen_fsid@@Base+0x66>
   2ebfc:	ldr	r3, [r4, #16]
   2ebfe:	cmp	r3, #0
   2ec00:	bne.n	2ebee <add_seen_fsid@@Base+0x4a>
   2ec02:	b.n	2ebba <add_seen_fsid@@Base+0x16>
   2ec04:	str.w	r6, [r7, sl, lsl #2]
   2ec08:	b.n	2ebe8 <add_seen_fsid@@Base+0x44>
   2ec0a:	mvn.w	r0, #16
   2ec0e:	b.n	2ebea <add_seen_fsid@@Base+0x46>
   2ec10:	mvn.w	r0, #11
   2ec14:	b.n	2ebea <add_seen_fsid@@Base+0x46>

0002ec16 <free_seen_fsid@@Base>:
   2ec16:	push	{r3, r4, r5, r6, r7, lr}
   2ec18:	subs	r6, r0, #4
   2ec1a:	add.w	r5, r0, #1020	; 0x3fc
   2ec1e:	ldr.w	r4, [r6, #4]!
   2ec22:	cbnz	r4, 2ec2c <free_seen_fsid@@Base+0x16>
   2ec24:	cmp	r6, r5
   2ec26:	str	r4, [r6, #0]
   2ec28:	bne.n	2ec1e <free_seen_fsid@@Base+0x8>
   2ec2a:	pop	{r3, r4, r5, r6, r7, pc}
   2ec2c:	ldrd	r7, r1, [r4, #16]
   2ec30:	ldr	r0, [r4, #24]
   2ec32:	bl	30458 <close_file_or_dir@@Base>
   2ec36:	mov	r0, r4
   2ec38:	blx	8434 <free@plt+0x4>
   2ec3c:	mov	r4, r7
   2ec3e:	b.n	2ec22 <free_seen_fsid@@Base+0xc>

0002ec40 <btrfs_scan_devices@@Base>:
   2ec40:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ec44:	vpush	{d8}
   2ec48:	ldr	r1, [pc, #324]	; (2ed90 <btrfs_scan_devices@@Base+0x150>)
   2ec4a:	ldr	r2, [pc, #328]	; (2ed94 <btrfs_scan_devices@@Base+0x154>)
   2ec4c:	add	r1, pc
   2ec4e:	sub.w	sp, sp, #4128	; 0x1020
   2ec52:	sub	sp, #20
   2ec54:	ldr	r2, [r1, r2]
   2ec56:	add.w	r3, sp, #4128	; 0x1020
   2ec5a:	add	r4, sp, #48	; 0x30
   2ec5c:	ldr	r2, [r2, #0]
   2ec5e:	str	r2, [r3, #12]
   2ec60:	mov.w	r2, #0
   2ec64:	ldr	r2, [pc, #304]	; (2ed98 <btrfs_scan_devices@@Base+0x158>)
   2ec66:	adds	r3, #12
   2ec68:	sub.w	sl, r4, #20
   2ec6c:	add	r2, pc
   2ec6e:	movs	r3, #0
   2ec70:	str.w	r3, [r4, #-24]
   2ec74:	ldr	r5, [r2, #0]
   2ec76:	str.w	r3, [r4, #-20]
   2ec7a:	cmp	r5, #0
   2ec7c:	bne.n	2ed7c <btrfs_scan_devices@@Base+0x13c>
   2ec7e:	mov	r1, r5
   2ec80:	mov	r0, sl
   2ec82:	blx	8958 <blkid_get_cache@plt>
   2ec86:	subs	r6, r0, #0
   2ec88:	bge.n	2ecb6 <btrfs_scan_devices@@Base+0x76>
   2ec8a:	blx	8784 <__errno_location@plt>
   2ec8e:	negs	r3, r6
   2ec90:	mov	r5, r6
   2ec92:	str	r3, [r0, #0]
   2ec94:	ldr	r0, [pc, #260]	; (2ed9c <btrfs_scan_devices@@Base+0x15c>)
   2ec96:	add	r0, pc
   2ec98:	bl	16b70 <__btrfs_error@@Base>
   2ec9c:	ldr	r1, [pc, #256]	; (2eda0 <btrfs_scan_devices@@Base+0x160>)
   2ec9e:	add.w	r3, sp, #4128	; 0x1020
   2eca2:	ldr	r2, [pc, #240]	; (2ed94 <btrfs_scan_devices@@Base+0x154>)
   2eca4:	adds	r3, #12
   2eca6:	add	r1, pc
   2eca8:	ldr	r2, [r1, r2]
   2ecaa:	ldr	r1, [r2, #0]
   2ecac:	ldr	r2, [r3, #0]
   2ecae:	eors	r1, r2
   2ecb0:	beq.n	2ed80 <btrfs_scan_devices@@Base+0x140>
   2ecb2:	blx	8510 <__stack_chk_fail@plt>
   2ecb6:	ldr.w	r0, [sl]
   2ecba:	blx	89a4 <blkid_probe_all@plt>
   2ecbe:	ldr.w	r0, [sl]
   2ecc2:	blx	851c <blkid_dev_iterate_begin@plt>
   2ecc6:	ldr	r2, [pc, #220]	; (2eda4 <btrfs_scan_devices@@Base+0x164>)
   2ecc8:	ldr	r1, [pc, #220]	; (2eda8 <btrfs_scan_devices@@Base+0x168>)
   2ecca:	add	r2, pc
   2eccc:	ldr.w	fp, [pc, #220]	; 2edac <btrfs_scan_devices@@Base+0x16c>
   2ecd0:	add	r1, pc
   2ecd2:	add	fp, pc
   2ecd4:	mov	r9, r0
   2ecd6:	blx	8584 <blkid_dev_set_search@plt>
   2ecda:	ldr	r3, [pc, #212]	; (2edb0 <btrfs_scan_devices@@Base+0x170>)
   2ecdc:	add	r3, pc
   2ecde:	vmov	s16, r3
   2ece2:	sub.w	r7, r4, #24
   2ece6:	mov	r1, r7
   2ece8:	mov	r0, r9
   2ecea:	blx	86d0 <blkid_dev_next@plt>
   2ecee:	mov	r6, r0
   2ecf0:	cbz	r0, 2ed0a <btrfs_scan_devices@@Base+0xca>
   2ecf2:	mov	r0, r9
   2ecf4:	blx	881c <blkid_dev_iterate_end@plt>
   2ecf8:	ldr.w	r0, [r4, #-20]
   2ecfc:	blx	84d0 <blkid_put_cache@plt>
   2ed00:	ldr	r3, [pc, #176]	; (2edb4 <btrfs_scan_devices@@Base+0x174>)
   2ed02:	movs	r2, #1
   2ed04:	add	r3, pc
   2ed06:	str	r2, [r3, #0]
   2ed08:	b.n	2ec9c <btrfs_scan_devices@@Base+0x5c>
   2ed0a:	ldr	r1, [r7, #0]
   2ed0c:	ldr.w	r0, [sl]
   2ed10:	blx	86dc <blkid_verify@plt>
   2ed14:	str	r0, [r7, #0]
   2ed16:	cmp	r0, #0
   2ed18:	beq.n	2ece6 <btrfs_scan_devices@@Base+0xa6>
   2ed1a:	blx	890c <blkid_dev_devname@plt>
   2ed1e:	sub.w	r8, r4, #4
   2ed22:	mov.w	r2, #4096	; 0x1000
   2ed26:	mov	r1, r0
   2ed28:	mov	r0, r8
   2ed2a:	bl	2f278 <__strncpy_null@@Base>
   2ed2e:	mov	r1, r6
   2ed30:	mov	r0, r8
   2ed32:	blx	864c <open64@plt>
   2ed36:	subs	r7, r0, #0
   2ed38:	bge.n	2ed44 <btrfs_scan_devices@@Base+0x104>
   2ed3a:	mov	r1, r8
   2ed3c:	mov	r0, fp
   2ed3e:	bl	16b70 <__btrfs_error@@Base>
   2ed42:	b.n	2ece2 <btrfs_scan_devices@@Base+0xa2>
   2ed44:	mov.w	r2, #65536	; 0x10000
   2ed48:	movs	r3, #0
   2ed4a:	str	r6, [sp, #8]
   2ed4c:	mov	r1, r8
   2ed4e:	strd	r2, r3, [sp]
   2ed52:	sub.w	r3, r4, #16
   2ed56:	sub.w	r2, r4, #28
   2ed5a:	bl	277e4 <btrfs_scan_one_device@@Base>
   2ed5e:	mov	r6, r0
   2ed60:	cbz	r0, 2ed74 <btrfs_scan_devices@@Base+0x134>
   2ed62:	blx	8784 <__errno_location@plt>
   2ed66:	negs	r6, r6
   2ed68:	mov	r1, r8
   2ed6a:	str	r6, [r0, #0]
   2ed6c:	vmov	r0, s16
   2ed70:	bl	16b70 <__btrfs_error@@Base>
   2ed74:	mov	r0, r7
   2ed76:	blx	8998 <close@plt>
   2ed7a:	b.n	2ece2 <btrfs_scan_devices@@Base+0xa2>
   2ed7c:	mov	r5, r3
   2ed7e:	b.n	2ec9c <btrfs_scan_devices@@Base+0x5c>
   2ed80:	mov	r0, r5
   2ed82:	add.w	sp, sp, #4128	; 0x1020
   2ed86:	add	sp, #20
   2ed88:	vpop	{d8}
   2ed8c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ed90:	str	r0, [r7, r4]
   2ed92:	movs	r3, r0
   2ed94:	lsls	r0, r4, #8
   2ed96:	movs	r0, r0
   2ed98:	str	r4, [r4, #96]	; 0x60
   2ed9a:	movs	r3, r0
   2ed9c:	subs	r2, #101	; 0x65
   2ed9e:	movs	r2, r0
   2eda0:	str	r6, [r3, r3]
   2eda2:	movs	r3, r0
   2eda4:	subs	r2, #76	; 0x4c
   2eda6:	movs	r2, r0
   2eda8:	subs	r2, #76	; 0x4c
   2edaa:	movs	r2, r0
   2edac:	subs	r3, #109	; 0x6d
   2edae:	movs	r2, r0
   2edb0:	subs	r2, #69	; 0x45
   2edb2:	movs	r2, r0
   2edb4:	str	r4, [r1, #88]	; 0x58
   2edb6:	movs	r3, r0
   2edb8:	ldr	r2, [pc, #100]	; (2ee20 <btrfs_scan_devices@@Base+0x1e0>)
   2edba:	ldr	r3, [pc, #104]	; (2ee24 <btrfs_scan_devices@@Base+0x1e4>)
   2edbc:	add	r2, pc
   2edbe:	push	{lr}
   2edc0:	sub	sp, #116	; 0x74
   2edc2:	ldr	r3, [r2, r3]
   2edc4:	mov	r1, sp
   2edc6:	ldr	r3, [r3, #0]
   2edc8:	str	r3, [sp, #108]	; 0x6c
   2edca:	mov.w	r3, #0
   2edce:	bl	38db0 <__libc_csu_fini@@Base+0x1c>
   2edd2:	cmp	r0, #0
   2edd4:	bge.n	2edf2 <btrfs_scan_devices@@Base+0x1b2>
   2edd6:	blx	8784 <__errno_location@plt>
   2edda:	ldr	r0, [r0, #0]
   2eddc:	negs	r0, r0
   2edde:	ldr	r2, [pc, #72]	; (2ee28 <btrfs_scan_devices@@Base+0x1e8>)
   2ede0:	ldr	r3, [pc, #64]	; (2ee24 <btrfs_scan_devices@@Base+0x1e4>)
   2ede2:	add	r2, pc
   2ede4:	ldr	r3, [r2, r3]
   2ede6:	ldr	r2, [r3, #0]
   2ede8:	ldr	r3, [sp, #108]	; 0x6c
   2edea:	eors	r2, r3
   2edec:	beq.n	2ee1a <btrfs_scan_devices@@Base+0x1da>
   2edee:	blx	8510 <__stack_chk_fail@plt>
   2edf2:	ldr	r3, [sp, #16]
   2edf4:	and.w	r3, r3, #61440	; 0xf000
   2edf8:	cmp.w	r3, #24576	; 0x6000
   2edfc:	bne.n	2ee16 <btrfs_scan_devices@@Base+0x1d6>
   2edfe:	ldrd	r0, r1, [sp, #32]
   2ee02:	lsrs	r2, r0, #8
   2ee04:	lsrs	r3, r1, #8
   2ee06:	orr.w	r2, r2, r1, lsl #24
   2ee0a:	cmp	r3, #0
   2ee0c:	itte	eq
   2ee0e:	cmpeq	r2, #7
   2ee10:	moveq	r0, #1
   2ee12:	movne	r0, #0
   2ee14:	b.n	2edde <btrfs_scan_devices@@Base+0x19e>
   2ee16:	movs	r0, #0
   2ee18:	b.n	2edde <btrfs_scan_devices@@Base+0x19e>
   2ee1a:	add	sp, #116	; 0x74
   2ee1c:	ldr.w	pc, [sp], #4
   2ee20:	ldr	r7, [pc, #800]	; (2f144 <path_exists@@Base>)
   2ee22:	movs	r3, r0
   2ee24:	lsls	r0, r4, #8
   2ee26:	movs	r0, r0
   2ee28:	ldr	r7, [pc, #648]	; (2f0b4 <path_is_mount_point@@Base+0x14>)
   2ee2a:	movs	r3, r0
   2ee2c:	ldr	r1, [pc, #192]	; (2eef0 <btrfs_scan_devices@@Base+0x2b0>)
   2ee2e:	ldr	r2, [pc, #196]	; (2eef4 <btrfs_scan_devices@@Base+0x2b4>)
   2ee30:	push	{r4, r5, r6, r7, lr}
   2ee32:	add	r1, pc
   2ee34:	sub.w	sp, sp, #8192	; 0x2000
   2ee38:	sub	sp, #20
   2ee3a:	ldr	r2, [r1, r2]
   2ee3c:	add.w	r3, sp, #8192	; 0x2000
   2ee40:	add	r5, sp, #12
   2ee42:	ldr	r2, [r2, #0]
   2ee44:	str	r2, [r3, #12]
   2ee46:	mov.w	r2, #0
   2ee4a:	adds	r3, #12
   2ee4c:	ldr	r3, [pc, #168]	; (2eef8 <btrfs_scan_devices@@Base+0x2b8>)
   2ee4e:	movs	r2, #1
   2ee50:	str	r0, [sp, #4]
   2ee52:	mov	r0, r5
   2ee54:	add	r3, pc
   2ee56:	str	r3, [sp, #0]
   2ee58:	mov.w	r3, #4096	; 0x1000
   2ee5c:	mov	r1, r3
   2ee5e:	blx	89bc <__snprintf_chk@plt>
   2ee62:	ldr	r1, [pc, #152]	; (2eefc <btrfs_scan_devices@@Base+0x2bc>)
   2ee64:	mov	r0, r5
   2ee66:	add	r1, pc
   2ee68:	blx	8918 <fopen64@plt>
   2ee6c:	mov	r4, r0
   2ee6e:	cbz	r0, 2ee8e <btrfs_scan_devices@@Base+0x24e>
   2ee70:	add.w	r6, sp, #4096	; 0x1000
   2ee74:	mov	r2, r0
   2ee76:	adds	r6, #12
   2ee78:	mov.w	r1, #4096	; 0x1000
   2ee7c:	mov	r0, r6
   2ee7e:	blx	8440 <fgets@plt>
   2ee82:	cbnz	r0, 2eea8 <btrfs_scan_devices@@Base+0x268>
   2ee84:	movs	r5, #0
   2ee86:	mov	r0, r4
   2ee88:	mov	r4, r5
   2ee8a:	blx	8878 <fclose@plt>
   2ee8e:	ldr	r1, [pc, #112]	; (2ef00 <btrfs_scan_devices@@Base+0x2c0>)
   2ee90:	add.w	r3, sp, #8192	; 0x2000
   2ee94:	ldr	r2, [pc, #92]	; (2eef4 <btrfs_scan_devices@@Base+0x2b4>)
   2ee96:	adds	r3, #12
   2ee98:	add	r1, pc
   2ee9a:	ldr	r2, [r1, r2]
   2ee9c:	ldr	r1, [r2, #0]
   2ee9e:	ldr	r2, [r3, #0]
   2eea0:	eors	r1, r2
   2eea2:	beq.n	2eee6 <btrfs_scan_devices@@Base+0x2a6>
   2eea4:	blx	8510 <__stack_chk_fail@plt>
   2eea8:	mov	r0, r6
   2eeaa:	blx	8748 <strlen@plt>
   2eeae:	cmp	r0, #1
   2eeb0:	bls.n	2ee84 <btrfs_scan_devices@@Base+0x244>
   2eeb2:	add	r0, r6
   2eeb4:	ldr	r3, [pc, #76]	; (2ef04 <btrfs_scan_devices@@Base+0x2c4>)
   2eeb6:	movs	r7, #0
   2eeb8:	movs	r2, #1
   2eeba:	strb.w	r7, [r0, #-1]
   2eebe:	add	r3, pc
   2eec0:	str	r3, [sp, #0]
   2eec2:	mov.w	r3, #4096	; 0x1000
   2eec6:	mov	r1, r3
   2eec8:	mov	r0, r5
   2eeca:	str	r6, [sp, #4]
   2eecc:	blx	89bc <__snprintf_chk@plt>
   2eed0:	mov	r1, r7
   2eed2:	mov	r0, r5
   2eed4:	blx	886c <access@plt>
   2eed8:	cmp	r0, #0
   2eeda:	bne.n	2ee84 <btrfs_scan_devices@@Base+0x244>
   2eedc:	mov	r0, r5
   2eede:	blx	84f8 <strdup@plt+0x4>
   2eee2:	mov	r5, r0
   2eee4:	b.n	2ee86 <btrfs_scan_devices@@Base+0x246>
   2eee6:	mov	r0, r4
   2eee8:	add.w	sp, sp, #8192	; 0x2000
   2eeec:	add	sp, #20
   2eeee:	pop	{r4, r5, r6, r7, pc}
   2eef0:	ldr	r7, [pc, #328]	; (2f03c <btrfs_scan_devices@@Base+0x3fc>)
   2eef2:	movs	r3, r0
   2eef4:	lsls	r0, r4, #8
   2eef6:	movs	r0, r0
   2eef8:	subs	r0, #242	; 0xf2
   2eefa:	movs	r2, r0
   2eefc:	cdp	0, 8, cr0, cr1, cr0, {0}
   2ef00:	ldr	r6, [pc, #944]	; (2f2b4 <is_same_loop_file@@Base+0x24>)
   2ef02:	movs	r3, r0
   2ef04:	subs	r0, #158	; 0x9e
   2ef06:	movs	r2, r0
   2ef08:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2ef0c:	mov	r8, r1
   2ef0e:	ldr	r1, [pc, #284]	; (2f02c <btrfs_scan_devices@@Base+0x3ec>)
   2ef10:	sub.w	sp, sp, #8448	; 0x2100
   2ef14:	ldr	r2, [pc, #280]	; (2f030 <btrfs_scan_devices@@Base+0x3f0>)
   2ef16:	sub	sp, #12
   2ef18:	add	r1, pc
   2ef1a:	add.w	r4, sp, #4352	; 0x1100
   2ef1e:	add.w	r3, sp, #8448	; 0x2100
   2ef22:	adds	r4, #4
   2ef24:	ldr	r2, [r1, r2]
   2ef26:	adds	r3, #4
   2ef28:	mov	r1, r4
   2ef2a:	mov	r9, r0
   2ef2c:	ldr	r2, [r2, #0]
   2ef2e:	str	r2, [r3, #0]
   2ef30:	mov.w	r2, #0
   2ef34:	mov.w	r2, #4096	; 0x1000
   2ef38:	blx	85e0 <__realpath_chk@plt>
   2ef3c:	cbnz	r0, 2ef46 <btrfs_scan_devices@@Base+0x306>
   2ef3e:	blx	8784 <__errno_location@plt>
   2ef42:	ldr	r6, [r0, #0]
   2ef44:	b.n	2ef96 <btrfs_scan_devices@@Base+0x356>
   2ef46:	movs	r1, #47	; 0x2f
   2ef48:	mov	r0, r4
   2ef4a:	blx	88a8 <strrchr@plt>
   2ef4e:	add	r4, sp, #264	; 0x108
   2ef50:	ldr	r3, [pc, #224]	; (2f034 <btrfs_scan_devices@@Base+0x3f4>)
   2ef52:	subs	r5, r4, #4
   2ef54:	movs	r2, #1
   2ef56:	add	r3, pc
   2ef58:	str	r3, [sp, #0]
   2ef5a:	mov.w	r3, #4096	; 0x1000
   2ef5e:	mov	r1, r3
   2ef60:	str	r0, [sp, #4]
   2ef62:	mov	r0, r5
   2ef64:	blx	89bc <__snprintf_chk@plt>
   2ef68:	ldr	r1, [pc, #204]	; (2f038 <btrfs_scan_devices@@Base+0x3f8>)
   2ef6a:	mov	r0, r5
   2ef6c:	add	r1, pc
   2ef6e:	blx	8918 <fopen64@plt>
   2ef72:	mov	r7, r0
   2ef74:	cmp	r0, #0
   2ef76:	bne.n	2efec <btrfs_scan_devices@@Base+0x3ac>
   2ef78:	blx	8784 <__errno_location@plt>
   2ef7c:	ldr	r6, [r0, #0]
   2ef7e:	mov	r5, r0
   2ef80:	cmp	r6, #2
   2ef82:	bne.n	2ef96 <btrfs_scan_devices@@Base+0x356>
   2ef84:	mov	r0, r9
   2ef86:	mov.w	r1, #2048	; 0x800
   2ef8a:	blx	864c <open64@plt>
   2ef8e:	subs.w	r9, r0, #0
   2ef92:	bge.n	2ef9a <btrfs_scan_devices@@Base+0x35a>
   2ef94:	ldr	r6, [r5, #0]
   2ef96:	negs	r6, r6
   2ef98:	b.n	2efb4 <btrfs_scan_devices@@Base+0x374>
   2ef9a:	add	r4, sp, #8
   2ef9c:	movw	r1, #19461	; 0x4c05
   2efa0:	mov	r2, r4
   2efa2:	blx	85bc <ioctl@plt>
   2efa6:	subs	r6, r0, #0
   2efa8:	bge.n	2efce <btrfs_scan_devices@@Base+0x38e>
   2efaa:	ldr	r6, [r5, #0]
   2efac:	negs	r6, r6
   2efae:	mov	r0, r9
   2efb0:	blx	8998 <close@plt>
   2efb4:	ldr	r1, [pc, #132]	; (2f03c <btrfs_scan_devices@@Base+0x3fc>)
   2efb6:	add.w	r3, sp, #8448	; 0x2100
   2efba:	ldr	r2, [pc, #116]	; (2f030 <btrfs_scan_devices@@Base+0x3f0>)
   2efbc:	adds	r3, #4
   2efbe:	add	r1, pc
   2efc0:	ldr	r2, [r1, r2]
   2efc2:	ldr	r1, [r2, #0]
   2efc4:	ldr	r2, [r3, #0]
   2efc6:	eors	r1, r2
   2efc8:	beq.n	2f020 <btrfs_scan_devices@@Base+0x3e0>
   2efca:	blx	8510 <__stack_chk_fail@plt>
   2efce:	adds	r4, #56	; 0x38
   2efd0:	mov	r5, r8
   2efd2:	ldmia	r4!, {r0, r1, r2, r3}
   2efd4:	stmia	r5!, {r0, r1, r2, r3}
   2efd6:	ldmia	r4!, {r0, r1, r2, r3}
   2efd8:	stmia	r5!, {r0, r1, r2, r3}
   2efda:	ldmia	r4!, {r0, r1, r2, r3}
   2efdc:	stmia	r5!, {r0, r1, r2, r3}
   2efde:	ldmia.w	r4, {r0, r1, r2, r3}
   2efe2:	stmia.w	r5, {r0, r1, r2, r3}
   2efe6:	strb.w	r7, [r8, #64]	; 0x40
   2efea:	b.n	2efae <btrfs_scan_devices@@Base+0x36e>
   2efec:	movw	r3, #4095	; 0xfff
   2eff0:	str	r3, [sp, #4]
   2eff2:	ldr	r3, [pc, #76]	; (2f040 <btrfs_scan_devices@@Base+0x400>)
   2eff4:	subs	r4, #24
   2eff6:	movs	r2, #1
   2eff8:	add	r3, pc
   2effa:	str	r3, [sp, #0]
   2effc:	movs	r3, #20
   2effe:	mov	r0, r4
   2f000:	mov	r1, r3
   2f002:	blx	89bc <__snprintf_chk@plt>
   2f006:	mov	r1, r4
   2f008:	mov	r2, r8
   2f00a:	mov	r0, r7
   2f00c:	blx	87f8 <fscanf@plt>
   2f010:	mov	r4, r0
   2f012:	mov	r0, r7
   2f014:	blx	8878 <fclose@plt>
   2f018:	adds	r4, #1
   2f01a:	beq.n	2ef3e <btrfs_scan_devices@@Base+0x2fe>
   2f01c:	movs	r6, #0
   2f01e:	b.n	2efb4 <btrfs_scan_devices@@Base+0x374>
   2f020:	mov	r0, r6
   2f022:	add.w	sp, sp, #8448	; 0x2100
   2f026:	add	sp, #12
   2f028:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2f02c:	ldr	r6, [pc, #432]	; (2f1e0 <path_is_reg_or_block_device@@Base+0x44>)
   2f02e:	movs	r3, r0
   2f030:	lsls	r0, r4, #8
   2f032:	movs	r0, r0
   2f034:	subs	r0, #21
   2f036:	movs	r2, r0
   2f038:	ldcl	0, cr0, [fp, #-0]
   2f03c:	ldr	r5, [pc, #792]	; (2f358 <is_same_loop_file@@Base+0xc8>)
   2f03e:	movs	r3, r0
   2f040:	adds	r7, #147	; 0x93
   2f042:	movs	r2, r0

0002f044 <path_is_block_device@@Base>:
   2f044:	ldr	r2, [pc, #76]	; (2f094 <path_is_block_device@@Base+0x50>)
   2f046:	ldr	r3, [pc, #80]	; (2f098 <path_is_block_device@@Base+0x54>)
   2f048:	add	r2, pc
   2f04a:	push	{lr}
   2f04c:	sub	sp, #116	; 0x74
   2f04e:	ldr	r3, [r2, r3]
   2f050:	mov	r1, sp
   2f052:	ldr	r3, [r3, #0]
   2f054:	str	r3, [sp, #108]	; 0x6c
   2f056:	mov.w	r3, #0
   2f05a:	bl	38db0 <__libc_csu_fini@@Base+0x1c>
   2f05e:	cmp	r0, #0
   2f060:	bge.n	2f07e <path_is_block_device@@Base+0x3a>
   2f062:	blx	8784 <__errno_location@plt>
   2f066:	ldr	r0, [r0, #0]
   2f068:	negs	r0, r0
   2f06a:	ldr	r2, [pc, #48]	; (2f09c <path_is_block_device@@Base+0x58>)
   2f06c:	ldr	r3, [pc, #40]	; (2f098 <path_is_block_device@@Base+0x54>)
   2f06e:	add	r2, pc
   2f070:	ldr	r3, [r2, r3]
   2f072:	ldr	r2, [r3, #0]
   2f074:	ldr	r3, [sp, #108]	; 0x6c
   2f076:	eors	r2, r3
   2f078:	beq.n	2f08e <path_is_block_device@@Base+0x4a>
   2f07a:	blx	8510 <__stack_chk_fail@plt>
   2f07e:	ldr	r0, [sp, #16]
   2f080:	and.w	r0, r0, #61440	; 0xf000
   2f084:	sub.w	r3, r0, #24576	; 0x6000
   2f088:	negs	r0, r3
   2f08a:	adcs	r0, r3
   2f08c:	b.n	2f06a <path_is_block_device@@Base+0x26>
   2f08e:	add	sp, #116	; 0x74
   2f090:	ldr.w	pc, [sp], #4
   2f094:	ldr	r5, [pc, #240]	; (2f188 <path_exists@@Base+0x44>)
   2f096:	movs	r3, r0
   2f098:	lsls	r0, r4, #8
   2f09a:	movs	r0, r0
   2f09c:	ldr	r5, [pc, #88]	; (2f0f8 <path_is_reg_file@@Base+0x10>)
   2f09e:	movs	r3, r0

0002f0a0 <path_is_mount_point@@Base>:
   2f0a0:	push	{r4, r5, r6, lr}
   2f0a2:	mov	r6, r0
   2f0a4:	ldr	r1, [pc, #56]	; (2f0e0 <path_is_mount_point@@Base+0x40>)
   2f0a6:	ldr	r0, [pc, #60]	; (2f0e4 <path_is_mount_point@@Base+0x44>)
   2f0a8:	add	r1, pc
   2f0aa:	add	r0, pc
   2f0ac:	blx	8924 <setmntent@plt>
   2f0b0:	mov	r5, r0
   2f0b2:	cbnz	r0, 2f0c4 <path_is_mount_point@@Base+0x24>
   2f0b4:	mov.w	r4, #4294967295	; 0xffffffff
   2f0b8:	b.n	2f0d6 <path_is_mount_point@@Base+0x36>
   2f0ba:	ldr	r0, [r4, #4]
   2f0bc:	mov	r1, r6
   2f0be:	blx	83c0 <strcmp@plt>
   2f0c2:	cbz	r0, 2f0da <path_is_mount_point@@Base+0x3a>
   2f0c4:	mov	r0, r5
   2f0c6:	blx	8634 <getmntent@plt>
   2f0ca:	mov	r4, r0
   2f0cc:	cmp	r0, #0
   2f0ce:	bne.n	2f0ba <path_is_mount_point@@Base+0x1a>
   2f0d0:	mov	r0, r5
   2f0d2:	blx	8884 <endmntent@plt>
   2f0d6:	mov	r0, r4
   2f0d8:	pop	{r4, r5, r6, pc}
   2f0da:	movs	r4, #1
   2f0dc:	b.n	2f0d0 <path_is_mount_point@@Base+0x30>
   2f0de:	nop
   2f0e0:	ldc	0, cr0, [pc], #-0	; 2f0e4 <path_is_mount_point@@Base+0x44>
   2f0e4:	adds	r6, #234	; 0xea
   2f0e6:	movs	r2, r0

0002f0e8 <path_is_reg_file@@Base>:
   2f0e8:	ldr	r2, [pc, #76]	; (2f138 <path_is_reg_file@@Base+0x50>)
   2f0ea:	ldr	r3, [pc, #80]	; (2f13c <path_is_reg_file@@Base+0x54>)
   2f0ec:	add	r2, pc
   2f0ee:	push	{lr}
   2f0f0:	sub	sp, #116	; 0x74
   2f0f2:	ldr	r3, [r2, r3]
   2f0f4:	mov	r1, sp
   2f0f6:	ldr	r3, [r3, #0]
   2f0f8:	str	r3, [sp, #108]	; 0x6c
   2f0fa:	mov.w	r3, #0
   2f0fe:	bl	38db0 <__libc_csu_fini@@Base+0x1c>
   2f102:	cmp	r0, #0
   2f104:	bge.n	2f122 <path_is_reg_file@@Base+0x3a>
   2f106:	blx	8784 <__errno_location@plt>
   2f10a:	ldr	r0, [r0, #0]
   2f10c:	negs	r0, r0
   2f10e:	ldr	r2, [pc, #48]	; (2f140 <path_is_reg_file@@Base+0x58>)
   2f110:	ldr	r3, [pc, #40]	; (2f13c <path_is_reg_file@@Base+0x54>)
   2f112:	add	r2, pc
   2f114:	ldr	r3, [r2, r3]
   2f116:	ldr	r2, [r3, #0]
   2f118:	ldr	r3, [sp, #108]	; 0x6c
   2f11a:	eors	r2, r3
   2f11c:	beq.n	2f132 <path_is_reg_file@@Base+0x4a>
   2f11e:	blx	8510 <__stack_chk_fail@plt>
   2f122:	ldr	r0, [sp, #16]
   2f124:	and.w	r0, r0, #61440	; 0xf000
   2f128:	sub.w	r3, r0, #32768	; 0x8000
   2f12c:	negs	r0, r3
   2f12e:	adcs	r0, r3
   2f130:	b.n	2f10e <path_is_reg_file@@Base+0x26>
   2f132:	add	sp, #116	; 0x74
   2f134:	ldr.w	pc, [sp], #4
   2f138:	ldr	r4, [pc, #608]	; (2f39c <is_same_loop_file@@Base+0x10c>)
   2f13a:	movs	r3, r0
   2f13c:	lsls	r0, r4, #8
   2f13e:	movs	r0, r0
   2f140:	ldr	r4, [pc, #456]	; (2f30c <is_same_loop_file@@Base+0x7c>)
   2f142:	movs	r3, r0

0002f144 <path_exists@@Base>:
   2f144:	ldr	r2, [pc, #72]	; (2f190 <path_exists@@Base+0x4c>)
   2f146:	ldr	r3, [pc, #76]	; (2f194 <path_exists@@Base+0x50>)
   2f148:	add	r2, pc
   2f14a:	push	{lr}
   2f14c:	sub	sp, #116	; 0x74
   2f14e:	ldr	r3, [r2, r3]
   2f150:	mov	r1, sp
   2f152:	ldr	r3, [r3, #0]
   2f154:	str	r3, [sp, #108]	; 0x6c
   2f156:	mov.w	r3, #0
   2f15a:	bl	38db0 <__libc_csu_fini@@Base+0x1c>
   2f15e:	cmp	r0, #0
   2f160:	bge.n	2f182 <path_exists@@Base+0x3e>
   2f162:	blx	8784 <__errno_location@plt>
   2f166:	ldr	r0, [r0, #0]
   2f168:	cmp	r0, #2
   2f16a:	beq.n	2f186 <path_exists@@Base+0x42>
   2f16c:	negs	r0, r0
   2f16e:	ldr	r2, [pc, #40]	; (2f198 <path_exists@@Base+0x54>)
   2f170:	ldr	r3, [pc, #32]	; (2f194 <path_exists@@Base+0x50>)
   2f172:	add	r2, pc
   2f174:	ldr	r3, [r2, r3]
   2f176:	ldr	r2, [r3, #0]
   2f178:	ldr	r3, [sp, #108]	; 0x6c
   2f17a:	eors	r2, r3
   2f17c:	beq.n	2f18a <path_exists@@Base+0x46>
   2f17e:	blx	8510 <__stack_chk_fail@plt>
   2f182:	movs	r0, #1
   2f184:	b.n	2f16e <path_exists@@Base+0x2a>
   2f186:	movs	r0, #0
   2f188:	b.n	2f16e <path_exists@@Base+0x2a>
   2f18a:	add	sp, #116	; 0x74
   2f18c:	ldr.w	pc, [sp], #4
   2f190:	ldr	r4, [pc, #240]	; (2f284 <__strncpy_null@@Base+0xc>)
   2f192:	movs	r3, r0
   2f194:	lsls	r0, r4, #8
   2f196:	movs	r0, r0
   2f198:	ldr	r4, [pc, #72]	; (2f1e4 <path_is_reg_or_block_device@@Base+0x48>)
   2f19a:	movs	r3, r0

0002f19c <path_is_reg_or_block_device@@Base>:
   2f19c:	ldr	r2, [pc, #96]	; (2f200 <path_is_reg_or_block_device@@Base+0x64>)
   2f19e:	ldr	r3, [pc, #100]	; (2f204 <path_is_reg_or_block_device@@Base+0x68>)
   2f1a0:	add	r2, pc
   2f1a2:	push	{lr}
   2f1a4:	sub	sp, #116	; 0x74
   2f1a6:	ldr	r3, [r2, r3]
   2f1a8:	mov	r1, sp
   2f1aa:	ldr	r3, [r3, #0]
   2f1ac:	str	r3, [sp, #108]	; 0x6c
   2f1ae:	mov.w	r3, #0
   2f1b2:	bl	38db0 <__libc_csu_fini@@Base+0x1c>
   2f1b6:	cmp	r0, #0
   2f1b8:	bge.n	2f1da <path_is_reg_or_block_device@@Base+0x3e>
   2f1ba:	blx	8784 <__errno_location@plt>
   2f1be:	ldr	r0, [r0, #0]
   2f1c0:	cmp	r0, #2
   2f1c2:	beq.n	2f1f0 <path_is_reg_or_block_device@@Base+0x54>
   2f1c4:	negs	r0, r0
   2f1c6:	ldr	r2, [pc, #64]	; (2f208 <path_is_reg_or_block_device@@Base+0x6c>)
   2f1c8:	ldr	r3, [pc, #56]	; (2f204 <path_is_reg_or_block_device@@Base+0x68>)
   2f1ca:	add	r2, pc
   2f1cc:	ldr	r3, [r2, r3]
   2f1ce:	ldr	r2, [r3, #0]
   2f1d0:	ldr	r3, [sp, #108]	; 0x6c
   2f1d2:	eors	r2, r3
   2f1d4:	beq.n	2f1f8 <path_is_reg_or_block_device@@Base+0x5c>
   2f1d6:	blx	8510 <__stack_chk_fail@plt>
   2f1da:	ldr	r0, [sp, #16]
   2f1dc:	and.w	r0, r0, #61440	; 0xf000
   2f1e0:	cmp.w	r0, #24576	; 0x6000
   2f1e4:	beq.n	2f1f4 <path_is_reg_or_block_device@@Base+0x58>
   2f1e6:	sub.w	r3, r0, #32768	; 0x8000
   2f1ea:	negs	r0, r3
   2f1ec:	adcs	r0, r3
   2f1ee:	b.n	2f1c6 <path_is_reg_or_block_device@@Base+0x2a>
   2f1f0:	movs	r0, #0
   2f1f2:	b.n	2f1c6 <path_is_reg_or_block_device@@Base+0x2a>
   2f1f4:	movs	r0, #1
   2f1f6:	b.n	2f1c6 <path_is_reg_or_block_device@@Base+0x2a>
   2f1f8:	add	sp, #116	; 0x74
   2f1fa:	ldr.w	pc, [sp], #4
   2f1fe:	nop
   2f200:	ldr	r3, [pc, #912]	; (2f594 <test_issubvolname@@Base+0xf6>)
   2f202:	movs	r3, r0
   2f204:	lsls	r0, r4, #8
   2f206:	movs	r0, r0
   2f208:	ldr	r3, [pc, #744]	; (2f4f4 <test_issubvolname@@Base+0x56>)
   2f20a:	movs	r3, r0

0002f20c <canonicalize_dm_name@@Base>:
   2f20c:	cbz	r0, 2f214 <canonicalize_dm_name@@Base+0x8>
   2f20e:	ldrb	r3, [r0, #0]
   2f210:	cbz	r3, 2f214 <canonicalize_dm_name@@Base+0x8>
   2f212:	b.n	2ee2c <btrfs_scan_devices@@Base+0x1ec>
   2f214:	movs	r0, #0
   2f216:	bx	lr

0002f218 <canonicalize_path@@Base>:
   2f218:	push	{r3, r4, r5, lr}
   2f21a:	mov	r5, r0
   2f21c:	cbz	r0, 2f26c <canonicalize_path@@Base+0x54>
   2f21e:	ldrb	r4, [r0, #0]
   2f220:	cbz	r4, 2f26e <canonicalize_path@@Base+0x56>
   2f222:	movs	r1, #0
   2f224:	blx	898c <realpath@plt>
   2f228:	mov	r4, r0
   2f22a:	cbnz	r0, 2f236 <canonicalize_path@@Base+0x1e>
   2f22c:	mov	r0, r5
   2f22e:	ldmia.w	sp!, {r3, r4, r5, lr}
   2f232:	b.w	84f4 <strdup@plt>
   2f236:	movs	r1, #47	; 0x2f
   2f238:	blx	88a8 <strrchr@plt>
   2f23c:	mov	r5, r0
   2f23e:	cbz	r0, 2f26e <canonicalize_path@@Base+0x56>
   2f240:	ldr	r1, [pc, #48]	; (2f274 <canonicalize_path@@Base+0x5c>)
   2f242:	movs	r2, #4
   2f244:	add	r1, pc
   2f246:	blx	8974 <strncmp@plt>
   2f24a:	cbnz	r0, 2f26e <canonicalize_path@@Base+0x56>
   2f24c:	blx	8724 <__ctype_b_loc@plt>
   2f250:	ldrb	r2, [r5, #4]
   2f252:	ldr	r3, [r0, #0]
   2f254:	ldrh.w	r3, [r3, r2, lsl #1]
   2f258:	lsls	r3, r3, #20
   2f25a:	bpl.n	2f26e <canonicalize_path@@Base+0x56>
   2f25c:	adds	r0, r5, #1
   2f25e:	bl	2f20c <canonicalize_dm_name@@Base>
   2f262:	mov	r5, r0
   2f264:	cbz	r0, 2f26e <canonicalize_path@@Base+0x56>
   2f266:	mov	r0, r4
   2f268:	blx	8434 <free@plt+0x4>
   2f26c:	mov	r4, r5
   2f26e:	mov	r0, r4
   2f270:	pop	{r3, r4, r5, pc}
   2f272:	nop
   2f274:	adds	r5, #98	; 0x62
   2f276:	movs	r2, r0

0002f278 <__strncpy_null@@Base>:
   2f278:	push	{r3, r4, r5, lr}
   2f27a:	mov	r4, r2
   2f27c:	mov	r5, r0
   2f27e:	blx	87e0 <strncpy@plt>
   2f282:	cbz	r4, 2f28c <__strncpy_null@@Base+0x14>
   2f284:	add	r4, r5
   2f286:	movs	r3, #0
   2f288:	strb.w	r3, [r4, #-1]
   2f28c:	mov	r0, r5
   2f28e:	pop	{r3, r4, r5, pc}

0002f290 <is_same_loop_file@@Base>:
   2f290:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   2f294:	mov	r5, r1
   2f296:	ldr	r1, [pc, #368]	; (2f408 <is_same_loop_file@@Base+0x178>)
   2f298:	sub.w	sp, sp, #16512	; 0x4080
   2f29c:	ldr	r2, [pc, #364]	; (2f40c <is_same_loop_file@@Base+0x17c>)
   2f29e:	sub	sp, #88	; 0x58
   2f2a0:	add	r1, pc
   2f2a2:	add.w	r3, sp, #16512	; 0x4080
   2f2a6:	adds	r3, #84	; 0x54
   2f2a8:	mov	r6, r0
   2f2aa:	ldr	r2, [r1, r2]
   2f2ac:	ldr	r2, [r2, #0]
   2f2ae:	str	r2, [r3, #0]
   2f2b0:	mov.w	r2, #0
   2f2b4:	bl	2edb8 <btrfs_scan_devices@@Base+0x178>
   2f2b8:	subs	r4, r0, #0
   2f2ba:	bge.n	2f2c4 <is_same_loop_file@@Base+0x34>
   2f2bc:	adds	r3, r4, #2
   2f2be:	bne.n	2f356 <is_same_loop_file@@Base+0xc6>
   2f2c0:	movs	r4, #0
   2f2c2:	b.n	2f356 <is_same_loop_file@@Base+0xc6>
   2f2c4:	beq.n	2f2e0 <is_same_loop_file@@Base+0x50>
   2f2c6:	add	r7, sp, #212	; 0xd4
   2f2c8:	mov	r0, r6
   2f2ca:	mov	r1, r7
   2f2cc:	bl	2ef08 <btrfs_scan_devices@@Base+0x2c8>
   2f2d0:	subs	r4, r0, #0
   2f2d2:	bge.n	2f370 <is_same_loop_file@@Base+0xe0>
   2f2d4:	blx	8784 <__errno_location@plt>
   2f2d8:	ldr	r3, [r0, #0]
   2f2da:	cmp	r3, #1
   2f2dc:	bne.n	2f356 <is_same_loop_file@@Base+0xc6>
   2f2de:	movs	r6, #0
   2f2e0:	mov	r0, r5
   2f2e2:	bl	2edb8 <btrfs_scan_devices@@Base+0x178>
   2f2e6:	subs	r4, r0, #0
   2f2e8:	blt.n	2f2bc <is_same_loop_file@@Base+0x2c>
   2f2ea:	beq.n	2f30a <is_same_loop_file@@Base+0x7a>
   2f2ec:	add.w	r7, sp, #4288	; 0x10c0
   2f2f0:	mov	r0, r5
   2f2f2:	adds	r7, #20
   2f2f4:	mov	r1, r7
   2f2f6:	bl	2ef08 <btrfs_scan_devices@@Base+0x2c8>
   2f2fa:	subs	r4, r0, #0
   2f2fc:	bge.n	2f374 <is_same_loop_file@@Base+0xe4>
   2f2fe:	blx	8784 <__errno_location@plt>
   2f302:	ldr	r3, [r0, #0]
   2f304:	cmp	r3, #1
   2f306:	bne.n	2f356 <is_same_loop_file@@Base+0xc6>
   2f308:	movs	r5, #0
   2f30a:	add.w	r4, sp, #8384	; 0x20c0
   2f30e:	mov.w	r2, #4096	; 0x1000
   2f312:	adds	r4, #20
   2f314:	mov	r0, r6
   2f316:	mov	r1, r4
   2f318:	blx	85e0 <__realpath_chk@plt>
   2f31c:	cbnz	r0, 2f32a <is_same_loop_file@@Base+0x9a>
   2f31e:	mov.w	r2, #4096	; 0x1000
   2f322:	mov	r1, r6
   2f324:	mov	r0, r4
   2f326:	bl	2f278 <__strncpy_null@@Base>
   2f32a:	add.w	r7, sp, #12480	; 0x30c0
   2f32e:	mov.w	r2, #4096	; 0x1000
   2f332:	adds	r7, #20
   2f334:	mov	r0, r5
   2f336:	mov	r1, r7
   2f338:	blx	85e0 <__realpath_chk@plt>
   2f33c:	cbnz	r0, 2f34a <is_same_loop_file@@Base+0xba>
   2f33e:	mov.w	r2, #4096	; 0x1000
   2f342:	mov	r1, r5
   2f344:	mov	r0, r7
   2f346:	bl	2f278 <__strncpy_null@@Base>
   2f34a:	mov	r1, r7
   2f34c:	mov	r0, r4
   2f34e:	blx	83c0 <strcmp@plt>
   2f352:	cbnz	r0, 2f378 <is_same_loop_file@@Base+0xe8>
   2f354:	movs	r4, #1
   2f356:	ldr	r1, [pc, #184]	; (2f410 <is_same_loop_file@@Base+0x180>)
   2f358:	add.w	r3, sp, #16512	; 0x4080
   2f35c:	ldr	r2, [pc, #172]	; (2f40c <is_same_loop_file@@Base+0x17c>)
   2f35e:	adds	r3, #84	; 0x54
   2f360:	add	r1, pc
   2f362:	ldr	r2, [r1, r2]
   2f364:	ldr	r1, [r2, #0]
   2f366:	ldr	r2, [r3, #0]
   2f368:	eors	r1, r2
   2f36a:	beq.n	2f3fa <is_same_loop_file@@Base+0x16a>
   2f36c:	blx	8510 <__stack_chk_fail@plt>
   2f370:	mov	r6, r7
   2f372:	b.n	2f2e0 <is_same_loop_file@@Base+0x50>
   2f374:	mov	r5, r7
   2f376:	b.n	2f30a <is_same_loop_file@@Base+0x7a>
   2f378:	add	r7, sp, #88	; 0x58
   2f37a:	mov	r0, r6
   2f37c:	sub.w	r8, r7, #88	; 0x58
   2f380:	mov	r1, r8
   2f382:	bl	38db0 <__libc_csu_fini@@Base+0x1c>
   2f386:	cmp	r0, #0
   2f388:	bge.n	2f398 <is_same_loop_file@@Base+0x108>
   2f38a:	blx	8784 <__errno_location@plt>
   2f38e:	ldr	r4, [r0, #0]
   2f390:	cmp	r4, #2
   2f392:	beq.n	2f2c0 <is_same_loop_file@@Base+0x30>
   2f394:	negs	r4, r4
   2f396:	b.n	2f356 <is_same_loop_file@@Base+0xc6>
   2f398:	add	r6, sp, #216	; 0xd8
   2f39a:	mov	r0, r5
   2f39c:	sub.w	r4, r6, #112	; 0x70
   2f3a0:	mov	r1, r4
   2f3a2:	bl	38db0 <__libc_csu_fini@@Base+0x1c>
   2f3a6:	cmp	r0, #0
   2f3a8:	blt.n	2f38a <is_same_loop_file@@Base+0xfa>
   2f3aa:	ldr.w	r3, [r8, #16]
   2f3ae:	and.w	r3, r3, #61440	; 0xf000
   2f3b2:	cmp.w	r3, #24576	; 0x6000
   2f3b6:	bne.n	2f3d4 <is_same_loop_file@@Base+0x144>
   2f3b8:	ldr	r3, [r4, #16]
   2f3ba:	and.w	r3, r3, #61440	; 0xf000
   2f3be:	cmp.w	r3, #24576	; 0x6000
   2f3c2:	bne.n	2f3d4 <is_same_loop_file@@Base+0x144>
   2f3c4:	ldrd	r0, r1, [r8, #32]
   2f3c8:	ldrd	r2, r3, [r4, #32]
   2f3cc:	cmp	r1, r3
   2f3ce:	it	eq
   2f3d0:	cmpeq	r0, r2
   2f3d2:	beq.n	2f354 <is_same_loop_file@@Base+0xc4>
   2f3d4:	ldrd	r0, r1, [r7, #-88]	; 0x58
   2f3d8:	ldrd	r2, r3, [r6, #-112]	; 0x70
   2f3dc:	cmp	r1, r3
   2f3de:	it	eq
   2f3e0:	cmpeq	r0, r2
   2f3e2:	bne.w	2f2c0 <is_same_loop_file@@Base+0x30>
   2f3e6:	ldrd	r2, r3, [r4, #96]	; 0x60
   2f3ea:	ldrd	r0, r1, [r8, #96]	; 0x60
   2f3ee:	cmp	r1, r3
   2f3f0:	itte	eq
   2f3f2:	cmpeq	r0, r2
   2f3f4:	moveq	r4, #1
   2f3f6:	movne	r4, #0
   2f3f8:	b.n	2f356 <is_same_loop_file@@Base+0xc6>
   2f3fa:	mov	r0, r4
   2f3fc:	add.w	sp, sp, #16512	; 0x4080
   2f400:	add	sp, #88	; 0x58
   2f402:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2f406:	nop
   2f408:	ldr	r2, [pc, #912]	; (2f79c <check_mounted_where@@Base+0x30>)
   2f40a:	movs	r3, r0
   2f40c:	lsls	r0, r4, #8
   2f40e:	movs	r0, r0
   2f410:	ldr	r2, [pc, #144]	; (2f4a4 <test_issubvolname@@Base+0x6>)
   2f412:	movs	r3, r0

0002f414 <path_is_dir@@Base>:
   2f414:	ldr	r2, [pc, #76]	; (2f464 <path_is_dir@@Base+0x50>)
   2f416:	ldr	r3, [pc, #80]	; (2f468 <path_is_dir@@Base+0x54>)
   2f418:	add	r2, pc
   2f41a:	push	{lr}
   2f41c:	sub	sp, #116	; 0x74
   2f41e:	ldr	r3, [r2, r3]
   2f420:	mov	r1, sp
   2f422:	ldr	r3, [r3, #0]
   2f424:	str	r3, [sp, #108]	; 0x6c
   2f426:	mov.w	r3, #0
   2f42a:	bl	38db0 <__libc_csu_fini@@Base+0x1c>
   2f42e:	cmp	r0, #0
   2f430:	bge.n	2f44e <path_is_dir@@Base+0x3a>
   2f432:	blx	8784 <__errno_location@plt>
   2f436:	ldr	r0, [r0, #0]
   2f438:	negs	r0, r0
   2f43a:	ldr	r2, [pc, #48]	; (2f46c <path_is_dir@@Base+0x58>)
   2f43c:	ldr	r3, [pc, #40]	; (2f468 <path_is_dir@@Base+0x54>)
   2f43e:	add	r2, pc
   2f440:	ldr	r3, [r2, r3]
   2f442:	ldr	r2, [r3, #0]
   2f444:	ldr	r3, [sp, #108]	; 0x6c
   2f446:	eors	r2, r3
   2f448:	beq.n	2f45e <path_is_dir@@Base+0x4a>
   2f44a:	blx	8510 <__stack_chk_fail@plt>
   2f44e:	ldr	r0, [sp, #16]
   2f450:	and.w	r0, r0, #61440	; 0xf000
   2f454:	sub.w	r3, r0, #16384	; 0x4000
   2f458:	negs	r0, r3
   2f45a:	adcs	r0, r3
   2f45c:	b.n	2f43a <path_is_dir@@Base+0x26>
   2f45e:	add	sp, #116	; 0x74
   2f460:	ldr.w	pc, [sp], #4
   2f464:	ldr	r1, [pc, #432]	; (2f618 <test_issubvolname@@Base+0x17a>)
   2f466:	movs	r3, r0
   2f468:	lsls	r0, r4, #8
   2f46a:	movs	r0, r0
   2f46c:	ldr	r1, [pc, #280]	; (2f588 <test_issubvolname@@Base+0xea>)
   2f46e:	movs	r3, r0

0002f470 <arg_copy_path@@Base>:
   2f470:	push	{r0, r1, r2, r4, r5, lr}
   2f472:	mov	r5, r0
   2f474:	mov	r0, r1
   2f476:	mov	r4, r2
   2f478:	str	r1, [sp, #4]
   2f47a:	blx	8748 <strlen@plt>
   2f47e:	cmp.w	r0, #4096	; 0x1000
   2f482:	bcs.n	2f498 <arg_copy_path@@Base+0x28>
   2f484:	cmp	r4, r0
   2f486:	bls.n	2f498 <arg_copy_path@@Base+0x28>
   2f488:	ldr	r1, [sp, #4]
   2f48a:	mov	r2, r4
   2f48c:	mov	r0, r5
   2f48e:	bl	2f278 <__strncpy_null@@Base>
   2f492:	movs	r0, #0
   2f494:	add	sp, #12
   2f496:	pop	{r4, r5, pc}
   2f498:	mvn.w	r0, #35	; 0x23
   2f49c:	b.n	2f494 <arg_copy_path@@Base+0x24>

0002f49e <test_issubvolname@@Base>:
   2f49e:	push	{r4, lr}
   2f4a0:	mov	r4, r0
   2f4a2:	ldrb	r3, [r0, #0]
   2f4a4:	cbz	r3, 2f4cc <test_issubvolname@@Base+0x2e>
   2f4a6:	movs	r1, #47	; 0x2f
   2f4a8:	blx	8754 <strchr@plt>
   2f4ac:	cbnz	r0, 2f4cc <test_issubvolname@@Base+0x2e>
   2f4ae:	ldr	r1, [pc, #32]	; (2f4d0 <test_issubvolname@@Base+0x32>)
   2f4b0:	mov	r0, r4
   2f4b2:	add	r1, pc
   2f4b4:	blx	83c0 <strcmp@plt>
   2f4b8:	cbz	r0, 2f4ca <test_issubvolname@@Base+0x2c>
   2f4ba:	ldr	r1, [pc, #24]	; (2f4d4 <test_issubvolname@@Base+0x36>)
   2f4bc:	mov	r0, r4
   2f4be:	add	r1, pc
   2f4c0:	blx	83c0 <strcmp@plt>
   2f4c4:	subs	r0, #0
   2f4c6:	it	ne
   2f4c8:	movne	r0, #1
   2f4ca:	pop	{r4, pc}
   2f4cc:	movs	r0, #0
   2f4ce:	b.n	2f4ca <test_issubvolname@@Base+0x2c>
   2f4d0:	adds	r2, #250	; 0xfa
   2f4d2:	movs	r2, r0
   2f4d4:	adds	r2, #237	; 0xed
   2f4d6:	movs	r2, r0
   2f4d8:	and.w	r2, r0, #2040	; 0x7f8
   2f4dc:	movs	r3, #0
   2f4de:	cmp	r3, #0
   2f4e0:	it	eq
   2f4e2:	cmpeq	r2, #64	; 0x40
   2f4e4:	beq.n	2f560 <test_issubvolname@@Base+0xc2>
   2f4e6:	cmp	r3, #0
   2f4e8:	it	eq
   2f4ea:	cmpeq	r2, #65	; 0x41
   2f4ec:	bcs.n	2f520 <test_issubvolname@@Base+0x82>
   2f4ee:	cmp	r3, #0
   2f4f0:	it	eq
   2f4f2:	cmpeq	r2, #16
   2f4f4:	beq.n	2f56c <test_issubvolname@@Base+0xce>
   2f4f6:	cmp	r3, #0
   2f4f8:	it	eq
   2f4fa:	cmpeq	r2, #17
   2f4fc:	bcs.n	2f512 <test_issubvolname@@Base+0x74>
   2f4fe:	orrs.w	r1, r2, r3
   2f502:	beq.n	2f564 <test_issubvolname@@Base+0xc6>
   2f504:	cmp	r3, #0
   2f506:	itet	eq
   2f508:	cmpeq	r2, #8
   2f50a:	movne.w	r0, #4294967295	; 0xffffffff
   2f50e:	moveq	r0, #2
   2f510:	bx	lr
   2f512:	cmp	r3, #0
   2f514:	itet	eq
   2f516:	cmpeq	r2, #32
   2f518:	movne.w	r0, #4294967295	; 0xffffffff
   2f51c:	moveq	r0, #1
   2f51e:	bx	lr
   2f520:	cmp	r3, #0
   2f522:	it	eq
   2f524:	cmpeq.w	r2, #512	; 0x200
   2f528:	beq.n	2f568 <test_issubvolname@@Base+0xca>
   2f52a:	movs	r1, #0
   2f52c:	cmp	r1, r3
   2f52e:	mov.w	r0, #512	; 0x200
   2f532:	it	eq
   2f534:	cmpeq	r0, r2
   2f536:	bcc.n	2f550 <test_issubvolname@@Base+0xb2>
   2f538:	cmp	r3, #0
   2f53a:	it	eq
   2f53c:	cmpeq	r2, #128	; 0x80
   2f53e:	beq.n	2f56c <test_issubvolname@@Base+0xce>
   2f540:	cmp	r3, #0
   2f542:	itet	eq
   2f544:	cmpeq.w	r2, #256	; 0x100
   2f548:	movne.w	r0, #4294967295	; 0xffffffff
   2f54c:	moveq	r0, #3
   2f54e:	bx	lr
   2f550:	cmp	r3, #0
   2f552:	itet	eq
   2f554:	cmpeq.w	r2, #1024	; 0x400
   2f558:	movne.w	r0, #4294967295	; 0xffffffff
   2f55c:	moveq	r0, #4
   2f55e:	bx	lr
   2f560:	movs	r0, #4
   2f562:	bx	lr
   2f564:	movs	r0, #1
   2f566:	bx	lr
   2f568:	movs	r0, #3
   2f56a:	bx	lr
   2f56c:	movs	r0, #2
   2f56e:	bx	lr
   2f570:	ldr	r2, [pc, #136]	; (2f5fc <test_issubvolname@@Base+0x15e>)
   2f572:	movs	r1, #0
   2f574:	ldr	r3, [pc, #136]	; (2f600 <test_issubvolname@@Base+0x162>)
   2f576:	add	r2, pc
   2f578:	ldr	r0, [pc, #136]	; (2f604 <test_issubvolname@@Base+0x166>)
   2f57a:	push	{r4, r5, lr}
   2f57c:	sub	sp, #20
   2f57e:	ldr	r3, [r2, r3]
   2f580:	add	r0, pc
   2f582:	ldr	r3, [r3, #0]
   2f584:	str	r3, [sp, #12]
   2f586:	mov.w	r3, #0
   2f58a:	blx	864c <open64@plt>
   2f58e:	subs	r4, r0, #0
   2f590:	bge.n	2f5de <test_issubvolname@@Base+0x140>
   2f592:	ldr	r0, [pc, #116]	; (2f608 <test_issubvolname@@Base+0x16a>)
   2f594:	ldr	r4, [pc, #116]	; (2f60c <test_issubvolname@@Base+0x16e>)
   2f596:	add	r0, pc
   2f598:	bl	16af4 <__btrfs_warning@@Base>
   2f59c:	movs	r1, #0
   2f59e:	add	r0, sp, #4
   2f5a0:	add	r4, pc
   2f5a2:	blx	8604 <gettimeofday@plt>
   2f5a6:	blx	8730 <getpid@plt>
   2f5aa:	ldr	r3, [sp, #4]
   2f5ac:	eors	r0, r3
   2f5ae:	strh	r0, [r4, #0]
   2f5b0:	blx	88f4 <getppid@plt>
   2f5b4:	ldr	r3, [sp, #8]
   2f5b6:	ldr	r2, [sp, #4]
   2f5b8:	eors	r0, r3
   2f5ba:	eors	r3, r2
   2f5bc:	strh	r0, [r4, #2]
   2f5be:	asrs	r3, r3, #16
   2f5c0:	strh	r3, [r4, #4]
   2f5c2:	ldr	r3, [pc, #76]	; (2f610 <test_issubvolname@@Base+0x172>)
   2f5c4:	movs	r2, #1
   2f5c6:	add	r3, pc
   2f5c8:	str	r2, [r3, #8]
   2f5ca:	ldr	r2, [pc, #72]	; (2f614 <test_issubvolname@@Base+0x176>)
   2f5cc:	ldr	r3, [pc, #48]	; (2f600 <test_issubvolname@@Base+0x162>)
   2f5ce:	add	r2, pc
   2f5d0:	ldr	r3, [r2, r3]
   2f5d2:	ldr	r2, [r3, #0]
   2f5d4:	ldr	r3, [sp, #12]
   2f5d6:	eors	r2, r3
   2f5d8:	beq.n	2f5f6 <test_issubvolname@@Base+0x158>
   2f5da:	blx	8510 <__stack_chk_fail@plt>
   2f5de:	ldr	r1, [pc, #56]	; (2f618 <test_issubvolname@@Base+0x17a>)
   2f5e0:	movs	r2, #6
   2f5e2:	add	r1, pc
   2f5e4:	blx	83fc <read@plt>
   2f5e8:	mov	r5, r0
   2f5ea:	mov	r0, r4
   2f5ec:	blx	8998 <close@plt>
   2f5f0:	cmp	r5, #5
   2f5f2:	bhi.n	2f5c2 <test_issubvolname@@Base+0x124>
   2f5f4:	b.n	2f592 <test_issubvolname@@Base+0xf4>
   2f5f6:	add	sp, #20
   2f5f8:	pop	{r4, r5, pc}
   2f5fa:	nop
   2f5fc:	ldr	r0, [pc, #56]	; (2f638 <test_issubvolname@@Base+0x19a>)
   2f5fe:	movs	r3, r0
   2f600:	lsls	r0, r4, #8
   2f602:	movs	r0, r0
   2f604:	adds	r2, #46	; 0x2e
   2f606:	movs	r2, r0
   2f608:	adds	r2, #37	; 0x25
   2f60a:	movs	r2, r0
   2f60c:	ldrb	r4, [r6, r3]
   2f60e:	movs	r3, r0
   2f610:	ldrb	r6, [r1, r3]
   2f612:	movs	r3, r0
   2f614:			; <UNDEFINED> instruction: 0x47b6
   2f616:	movs	r3, r0
   2f618:	ldrb	r2, [r6, r2]
   2f61a:	movs	r3, r0
   2f61c:	ldr.w	ip, [pc, #76]	; 2f66c <test_issubvolname@@Base+0x1ce>
   2f620:	ldr	r5, [pc, #76]	; (2f670 <test_issubvolname@@Base+0x1d2>)
   2f622:	add	ip, pc
   2f624:	ldr	r4, [pc, #76]	; (2f674 <test_issubvolname@@Base+0x1d6>)
   2f626:	push	{lr}
   2f628:	sub	sp, #92	; 0x5c
   2f62a:	ldr.w	r5, [ip, r5]
   2f62e:	add	r4, pc
   2f630:	ldr	r5, [r5, #0]
   2f632:	str	r5, [sp, #84]	; 0x54
   2f634:	mov.w	r5, #0
   2f638:	ldr	r5, [pc, #60]	; (2f678 <test_issubvolname@@Base+0x1da>)
   2f63a:	ldr	r4, [r4, r5]
   2f63c:	strd	r2, r1, [sp]
   2f640:	movs	r1, #1
   2f642:	strd	r0, r3, [sp, #8]
   2f646:	ldr	r2, [pc, #52]	; (2f67c <test_issubvolname@@Base+0x1de>)
   2f648:	ldr	r3, [pc, #52]	; (2f680 <test_issubvolname@@Base+0x1e2>)
   2f64a:	ldr	r0, [r4, #0]
   2f64c:	add	r4, sp, #20
   2f64e:	add	r3, pc
   2f650:	add	r2, pc
   2f652:	blx	8860 <__fprintf_chk@plt+0x4>
   2f656:	movs	r1, #16
   2f658:	mov	r0, r4
   2f65a:	blx	86c4 <backtrace@plt>
   2f65e:	movs	r2, #2
   2f660:	mov	r1, r0
   2f662:	mov	r0, r4
   2f664:	blx	89c8 <backtrace_symbols_fd@plt>
   2f668:	blx	8980 <abort@plt>
   2f66c:	bx	ip
   2f66e:	movs	r3, r0
   2f670:	lsls	r0, r4, #8
   2f672:	movs	r0, r0
   2f674:	bx	sl
   2f676:	movs	r3, r0
   2f678:	lsls	r0, r6, #8
   2f67a:	movs	r0, r0
   2f67c:	ldr	r0, [sp, #328]	; 0x148
   2f67e:	movs	r0, r0
   2f680:	adds	r1, #170	; 0xaa
   2f682:	movs	r2, r0

0002f684 <btrfs_make_root_dir@@Base>:
   2f684:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   2f688:	mov	r6, r2
   2f68a:	ldr	r2, [pc, #208]	; (2f75c <btrfs_make_root_dir@@Base+0xd8>)
   2f68c:	mov	r5, r3
   2f68e:	ldr	r3, [pc, #208]	; (2f760 <btrfs_make_root_dir@@Base+0xdc>)
   2f690:	sub	sp, #192	; 0xc0
   2f692:	add	r2, pc
   2f694:	mov	r8, r0
   2f696:	movs	r0, #0
   2f698:	mov	r4, r1
   2f69a:	ldr	r3, [r2, r3]
   2f69c:	ldr	r3, [r3, #0]
   2f69e:	str	r3, [sp, #188]	; 0xbc
   2f6a0:	mov.w	r3, #0
   2f6a4:	blx	8498 <time@plt>
   2f6a8:	movs	r2, #104	; 0x68
   2f6aa:	movs	r1, #0
   2f6ac:	mov	r7, r0
   2f6ae:	add	r0, sp, #36	; 0x24
   2f6b0:	blx	87c4 <memset@plt+0x4>
   2f6b4:	ldr.w	r3, [r8, #8]
   2f6b8:	movs	r2, #1
   2f6ba:	str	r2, [sp, #68]	; 0x44
   2f6bc:	ldr.w	r2, [r4, #464]	; 0x1d0
   2f6c0:	mov	r0, r8
   2f6c2:	str	r3, [sp, #28]
   2f6c4:	ldr.w	r3, [r8, #12]
   2f6c8:	ldr.w	r1, [r2, #384]	; 0x180
   2f6cc:	str	r3, [sp, #32]
   2f6ce:	movs	r3, #0
   2f6d0:	strd	r3, r7, [sp, #172]	; 0xac
   2f6d4:	strd	r1, r3, [sp, #52]	; 0x34
   2f6d8:	movw	r1, #16877	; 0x41ed
   2f6dc:	strd	r3, r7, [sp, #148]	; 0x94
   2f6e0:	str	r1, [sp, #80]	; 0x50
   2f6e2:	asrs	r1, r7, #31
   2f6e4:	strd	r1, r3, [sp, #156]	; 0x9c
   2f6e8:	strd	r7, r1, [sp, #164]	; 0xa4
   2f6ec:	strd	r1, r3, [sp, #180]	; 0xb4
   2f6f0:	strd	r7, r1, [sp, #140]	; 0x8c
   2f6f4:	mov	r1, r4
   2f6f6:	ldr	r3, [r2, #28]
   2f6f8:	cmp	r3, r4
   2f6fa:	it	eq
   2f6fc:	ldreq.w	r3, [r2, #308]	; 0x134
   2f700:	mov	r2, r6
   2f702:	itt	eq
   2f704:	streq.w	r6, [r3, #128]	; 0x80
   2f708:	streq.w	r5, [r3, #132]	; 0x84
   2f70c:	add	r3, sp, #28
   2f70e:	str	r3, [sp, #0]
   2f710:	mov	r3, r5
   2f712:	bl	2cf64 <btrfs_insert_inode@@Base>
   2f716:	cbnz	r0, 2f740 <btrfs_make_root_dir@@Base+0xbc>
   2f718:	movs	r2, #0
   2f71a:	movs	r3, #0
   2f71c:	strd	r2, r3, [sp, #16]
   2f720:	mov	r1, r4
   2f722:	ldr	r2, [pc, #64]	; (2f764 <btrfs_make_root_dir@@Base+0xe0>)
   2f724:	movs	r3, #2
   2f726:	mov	r0, r8
   2f728:	strd	r6, r5, [sp, #8]
   2f72c:	add	r2, pc
   2f72e:	strd	r6, r5, [sp]
   2f732:	bl	2d36c <btrfs_insert_inode_ref@@Base>
   2f736:	cbnz	r0, 2f740 <btrfs_make_root_dir@@Base+0xbc>
   2f738:	str.w	r6, [r4, #176]	; 0xb0
   2f73c:	str.w	r5, [r4, #180]	; 0xb4
   2f740:	ldr	r2, [pc, #36]	; (2f768 <btrfs_make_root_dir@@Base+0xe4>)
   2f742:	ldr	r3, [pc, #28]	; (2f760 <btrfs_make_root_dir@@Base+0xdc>)
   2f744:	add	r2, pc
   2f746:	ldr	r3, [r2, r3]
   2f748:	ldr	r2, [r3, #0]
   2f74a:	ldr	r3, [sp, #188]	; 0xbc
   2f74c:	eors	r2, r3
   2f74e:	beq.n	2f754 <btrfs_make_root_dir@@Base+0xd0>
   2f750:	blx	8510 <__stack_chk_fail@plt>
   2f754:	add	sp, #192	; 0xc0
   2f756:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2f75a:	nop
   2f75c:	mov	sl, lr
   2f75e:	movs	r3, r0
   2f760:	lsls	r0, r4, #8
   2f762:	movs	r0, r0
   2f764:	adds	r0, #127	; 0x7f
   2f766:	movs	r2, r0
   2f768:	mov	r0, r8
   2f76a:	movs	r3, r0

0002f76c <check_mounted_where@@Base>:
   2f76c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f770:	mov	r8, r2
   2f772:	ldr	r2, [pc, #300]	; (2f8a0 <check_mounted_where@@Base+0x134>)
   2f774:	mov	r6, r3
   2f776:	ldr	r3, [pc, #300]	; (2f8a4 <check_mounted_where@@Base+0x138>)
   2f778:	sub	sp, #60	; 0x3c
   2f77a:	add	r2, pc
   2f77c:	mov	r9, r1
   2f77e:	ldr.w	sl, [sp, #96]	; 0x60
   2f782:	ldr	r3, [r2, r3]
   2f784:	movs	r2, #1
   2f786:	ldr	r3, [r3, #0]
   2f788:	str	r3, [sp, #52]	; 0x34
   2f78a:	mov.w	r3, #0
   2f78e:	movs	r3, #0
   2f790:	strd	r2, r3, [sp, #40]	; 0x28
   2f794:	movs	r3, #0
   2f796:	str	r3, [sp, #36]	; 0x24
   2f798:	mov.w	r2, #65536	; 0x10000
   2f79c:	ldr	r3, [sp, #100]	; 0x64
   2f79e:	str	r3, [sp, #8]
   2f7a0:	movs	r3, #0
   2f7a2:	strd	r2, r3, [sp]
   2f7a6:	add	r3, sp, #40	; 0x28
   2f7a8:	add	r2, sp, #36	; 0x24
   2f7aa:	bl	277e4 <btrfs_scan_one_device@@Base>
   2f7ae:	subs	r3, r0, #0
   2f7b0:	str	r3, [sp, #16]
   2f7b2:	bge.n	2f810 <check_mounted_where@@Base+0xa4>
   2f7b4:	ldr	r1, [pc, #240]	; (2f8a8 <check_mounted_where@@Base+0x13c>)
   2f7b6:	ldr	r0, [pc, #244]	; (2f8ac <check_mounted_where@@Base+0x140>)
   2f7b8:	add	r1, pc
   2f7ba:	add	r0, pc
   2f7bc:	blx	8924 <setmntent@plt>
   2f7c0:	mov	r7, r0
   2f7c2:	cmp	r0, #0
   2f7c4:	beq.n	2f83a <check_mounted_where@@Base+0xce>
   2f7c6:	ldr.w	fp, [pc, #232]	; 2f8b0 <check_mounted_where@@Base+0x144>
   2f7ca:	add	fp, pc
   2f7cc:	mov	r0, r7
   2f7ce:	blx	8634 <getmntent@plt>
   2f7d2:	mov	r5, r0
   2f7d4:	cmp	r0, #0
   2f7d6:	beq.n	2f860 <check_mounted_where@@Base+0xf4>
   2f7d8:	ldr	r3, [sp, #16]
   2f7da:	cmp	r3, #0
   2f7dc:	blt.n	2f844 <check_mounted_where@@Base+0xd8>
   2f7de:	ldr	r0, [r5, #8]
   2f7e0:	mov	r1, fp
   2f7e2:	blx	83c0 <strcmp@plt>
   2f7e6:	cmp	r0, #0
   2f7e8:	bne.n	2f7cc <check_mounted_where@@Base+0x60>
   2f7ea:	ldr	r2, [sp, #36]	; 0x24
   2f7ec:	ldr	r1, [r5, #0]
   2f7ee:	ldr.w	r3, [r2, #72]!
   2f7f2:	cmp	r3, r2
   2f7f4:	beq.n	2f7cc <check_mounted_where@@Base+0x60>
   2f7f6:	ldr	r0, [r3, #32]
   2f7f8:	strd	r1, r2, [sp, #24]
   2f7fc:	str	r3, [sp, #20]
   2f7fe:	bl	2f290 <is_same_loop_file@@Base>
   2f802:	subs	r4, r0, #0
   2f804:	bne.n	2f894 <check_mounted_where@@Base+0x128>
   2f806:	ldr	r3, [sp, #20]
   2f808:	ldrd	r1, r2, [sp, #24]
   2f80c:	ldr	r3, [r3, #0]
   2f80e:	b.n	2f7f2 <check_mounted_where@@Base+0x86>
   2f810:	ldrd	r2, r3, [sp, #40]	; 0x28
   2f814:	cmp	r3, #0
   2f816:	it	eq
   2f818:	cmpeq	r2, #2
   2f81a:	bcc.n	2f7b4 <check_mounted_where@@Base+0x48>
   2f81c:	bl	2ec40 <btrfs_scan_devices@@Base>
   2f820:	mov	r4, r0
   2f822:	cmp	r0, #0
   2f824:	beq.n	2f7b4 <check_mounted_where@@Base+0x48>
   2f826:	ldr	r2, [pc, #140]	; (2f8b4 <check_mounted_where@@Base+0x148>)
   2f828:	ldr	r3, [pc, #120]	; (2f8a4 <check_mounted_where@@Base+0x138>)
   2f82a:	add	r2, pc
   2f82c:	ldr	r3, [r2, r3]
   2f82e:	ldr	r2, [r3, #0]
   2f830:	ldr	r3, [sp, #52]	; 0x34
   2f832:	eors	r2, r3
   2f834:	beq.n	2f898 <check_mounted_where@@Base+0x12c>
   2f836:	blx	8510 <__stack_chk_fail@plt>
   2f83a:	blx	8784 <__errno_location@plt>
   2f83e:	ldr	r4, [r0, #0]
   2f840:	negs	r4, r4
   2f842:	b.n	2f826 <check_mounted_where@@Base+0xba>
   2f844:	ldr	r0, [r5, #0]
   2f846:	bl	2f19c <path_is_reg_or_block_device@@Base>
   2f84a:	subs	r4, r0, #0
   2f84c:	blt.n	2f872 <check_mounted_where@@Base+0x106>
   2f84e:	beq.n	2f7cc <check_mounted_where@@Base+0x60>
   2f850:	ldr	r1, [r5, #0]
   2f852:	mov	r0, r9
   2f854:	bl	2f290 <is_same_loop_file@@Base>
   2f858:	subs	r4, r0, #0
   2f85a:	blt.n	2f872 <check_mounted_where@@Base+0x106>
   2f85c:	beq.n	2f7cc <check_mounted_where@@Base+0x60>
   2f85e:	cbnz	r6, 2f87a <check_mounted_where@@Base+0x10e>
   2f860:	cmp.w	sl, #0
   2f864:	beq.n	2f86c <check_mounted_where@@Base+0x100>
   2f866:	ldr	r3, [sp, #36]	; 0x24
   2f868:	str.w	r3, [sl]
   2f86c:	subs	r4, r5, #0
   2f86e:	it	ne
   2f870:	movne	r4, #1
   2f872:	mov	r0, r7
   2f874:	blx	8884 <endmntent@plt>
   2f878:	b.n	2f826 <check_mounted_where@@Base+0xba>
   2f87a:	cmp.w	r8, #0
   2f87e:	beq.n	2f860 <check_mounted_where@@Base+0xf4>
   2f880:	mov	r2, r6
   2f882:	add	r6, r8
   2f884:	ldr	r1, [r5, #4]
   2f886:	mov	r0, r8
   2f888:	blx	87e0 <strncpy@plt>
   2f88c:	movs	r3, #0
   2f88e:	strb.w	r3, [r6, #-1]
   2f892:	b.n	2f860 <check_mounted_where@@Base+0xf4>
   2f894:	blt.n	2f872 <check_mounted_where@@Base+0x106>
   2f896:	b.n	2f85e <check_mounted_where@@Base+0xf2>
   2f898:	mov	r0, r4
   2f89a:	add	sp, #60	; 0x3c
   2f89c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f8a0:	mov	r2, r1
   2f8a2:	movs	r3, r0
   2f8a4:	lsls	r0, r4, #8
   2f8a6:	movs	r0, r0
   2f8a8:	b.n	2f30a <is_same_loop_file@@Base+0x7a>
   2f8aa:	movs	r0, r0
   2f8ac:	cmp	r7, #218	; 0xda
   2f8ae:	movs	r2, r0
   2f8b0:	cmp	r7, #76	; 0x4c
   2f8b2:	movs	r2, r0
   2f8b4:	cmp	r2, fp
   2f8b6:	movs	r3, r0

0002f8b8 <get_btrfs_mount@@Base>:
   2f8b8:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   2f8bc:	mov	r5, r0
   2f8be:	mov	r7, r1
   2f8c0:	mov	r8, r2
   2f8c2:	bl	2f044 <path_is_block_device@@Base>
   2f8c6:	subs	r4, r0, #0
   2f8c8:	bgt.n	2f8f6 <get_btrfs_mount@@Base+0x3e>
   2f8ca:	bne.n	2f8e2 <get_btrfs_mount@@Base+0x2a>
   2f8cc:	ldr	r0, [pc, #108]	; (2f93c <get_btrfs_mount@@Base+0x84>)
   2f8ce:	mov	r1, r5
   2f8d0:	mvn.w	r4, #21
   2f8d4:	add	r0, pc
   2f8d6:	bl	16b70 <__btrfs_error@@Base>
   2f8da:	mov	r0, r4
   2f8dc:	add	sp, #8
   2f8de:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2f8e2:	blx	8784 <__errno_location@plt>
   2f8e6:	negs	r3, r4
   2f8e8:	mov	r1, r5
   2f8ea:	str	r3, [r0, #0]
   2f8ec:	ldr	r0, [pc, #80]	; (2f940 <get_btrfs_mount@@Base+0x88>)
   2f8ee:	add	r0, pc
   2f8f0:	bl	16b70 <__btrfs_error@@Base>
   2f8f4:	b.n	2f8da <get_btrfs_mount@@Base+0x22>
   2f8f6:	movs	r1, #0
   2f8f8:	mov	r0, r5
   2f8fa:	blx	864c <open64@plt>
   2f8fe:	subs	r6, r0, #0
   2f900:	bge.n	2f920 <get_btrfs_mount@@Base+0x68>
   2f902:	blx	8784 <__errno_location@plt>
   2f906:	mov	r1, r5
   2f908:	ldr	r4, [r0, #0]
   2f90a:	ldr	r0, [pc, #56]	; (2f944 <get_btrfs_mount@@Base+0x8c>)
   2f90c:	negs	r4, r4
   2f90e:	add	r0, pc
   2f910:	bl	16b70 <__btrfs_error@@Base>
   2f914:	adds	r3, r6, #1
   2f916:	beq.n	2f8da <get_btrfs_mount@@Base+0x22>
   2f918:	mov	r0, r6
   2f91a:	blx	8998 <close@plt>
   2f91e:	b.n	2f8da <get_btrfs_mount@@Base+0x22>
   2f920:	movs	r3, #0
   2f922:	mov	r2, r7
   2f924:	strd	r3, r3, [sp]
   2f928:	mov	r1, r5
   2f92a:	mov	r3, r8
   2f92c:	bl	2f76c <check_mounted_where@@Base>
   2f930:	cmp	r0, #0
   2f932:	ite	eq
   2f934:	mvneq.w	r4, #21
   2f938:	movne	r4, #0
   2f93a:	b.n	2f918 <get_btrfs_mount@@Base+0x60>
   2f93c:	cmp	r7, #51	; 0x33
   2f93e:	movs	r2, r0
   2f940:	cmp	r7, #48	; 0x30
   2f942:	movs	r2, r0
   2f944:	cmp	r7, #49	; 0x31
   2f946:	movs	r2, r0

0002f948 <check_mounted@@Base>:
   2f948:	push	{r0, r1, r2, r4, r5, lr}
   2f94a:	movs	r1, #0
   2f94c:	mov	r4, r0
   2f94e:	blx	864c <open64@plt>
   2f952:	subs	r5, r0, #0
   2f954:	bge.n	2f96e <check_mounted@@Base+0x26>
   2f956:	ldr	r0, [pc, #48]	; (2f988 <check_mounted@@Base+0x40>)
   2f958:	mov	r1, r4
   2f95a:	add	r0, pc
   2f95c:	bl	16b70 <__btrfs_error@@Base>
   2f960:	blx	8784 <__errno_location@plt>
   2f964:	ldr	r4, [r0, #0]
   2f966:	negs	r4, r4
   2f968:	mov	r0, r4
   2f96a:	add	sp, #12
   2f96c:	pop	{r4, r5, pc}
   2f96e:	movs	r3, #0
   2f970:	mov	r1, r4
   2f972:	mov	r2, r3
   2f974:	strd	r3, r3, [sp]
   2f978:	bl	2f76c <check_mounted_where@@Base>
   2f97c:	mov	r4, r0
   2f97e:	mov	r0, r5
   2f980:	blx	8998 <close@plt>
   2f984:	b.n	2f968 <check_mounted@@Base+0x20>
   2f986:	nop
   2f988:	cmp	r6, #216	; 0xd8
   2f98a:	movs	r2, r0

0002f98c <pretty_size_snprintf@@Base>:
   2f98c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f990:	mov	r7, r1
   2f992:	vpush	{d8}
   2f996:	mov	r6, r0
   2f998:	mov	r5, r3
   2f99a:	vmov	s17, r2
   2f99e:	ldr	r2, [pc, #540]	; (2fbbc <pretty_size_snprintf@@Base+0x230>)
   2f9a0:	sub	sp, #44	; 0x2c
   2f9a2:	add	r2, pc
   2f9a4:	ldr	r1, [sp, #88]	; 0x58
   2f9a6:	cbz	r3, 2f9da <pretty_size_snprintf@@Base+0x4e>
   2f9a8:	and.w	r3, r1, #1024	; 0x400
   2f9ac:	str	r3, [sp, #32]
   2f9ae:	bic.w	r3, r1, #1272	; 0x4f8
   2f9b2:	bic.w	r3, r3, #7
   2f9b6:	cmp.w	r3, #256	; 0x100
   2f9ba:	bne.n	2f9ec <pretty_size_snprintf@@Base+0x60>
   2f9bc:	ldr	r3, [sp, #32]
   2f9be:	strd	r0, r7, [sp, #8]
   2f9c2:	cbz	r3, 2f9e6 <pretty_size_snprintf@@Base+0x5a>
   2f9c4:	ldr	r3, [pc, #504]	; (2fbc0 <pretty_size_snprintf@@Base+0x234>)
   2f9c6:	add	r3, pc
   2f9c8:	str	r3, [sp, #0]
   2f9ca:	movs	r2, #1
   2f9cc:	vmov	r0, s17
   2f9d0:	mov.w	r3, #4294967295	; 0xffffffff
   2f9d4:	mov	r1, r5
   2f9d6:	blx	89bc <__snprintf_chk@plt>
   2f9da:	movs	r0, #0
   2f9dc:	add	sp, #44	; 0x2c
   2f9de:	vpop	{d8}
   2f9e2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f9e6:	ldr	r3, [pc, #476]	; (2fbc4 <pretty_size_snprintf@@Base+0x238>)
   2f9e8:	add	r3, pc
   2f9ea:	b.n	2f9c8 <pretty_size_snprintf@@Base+0x3c>
   2f9ec:	cmp.w	r3, #512	; 0x200
   2f9f0:	beq.w	2fb80 <pretty_size_snprintf@@Base+0x1f4>
   2f9f4:	cmp.w	r3, #768	; 0x300
   2f9f8:	bne.w	2fb5a <pretty_size_snprintf@@Base+0x1ce>
   2f9fc:	ldr	r3, [pc, #456]	; (2fbc8 <pretty_size_snprintf@@Base+0x23c>)
   2f9fe:	mov.w	r2, #1000	; 0x3e8
   2fa02:	mov.w	sl, #1000	; 0x3e8
   2fa06:	add	r3, pc
   2fa08:	adds	r3, #28
   2fa0a:	str	r3, [sp, #36]	; 0x24
   2fa0c:	b.n	2fb8e <pretty_size_snprintf@@Base+0x202>
   2fa0e:	asrs	r1, r2, #31
   2fa10:	movs	r4, #1
   2fa12:	mul.w	r3, sl, r1
   2fa16:	mla	r3, r2, fp, r3
   2fa1a:	umull	sl, fp, sl, r2
   2fa1e:	add	fp, r3
   2fa20:	asrs	r1, r2, #31
   2fa22:	adds	r4, #1
   2fa24:	mul.w	r3, sl, r1
   2fa28:	mla	r3, r2, fp, r3
   2fa2c:	umull	sl, fp, sl, r2
   2fa30:	add	fp, r3
   2fa32:	asrs	r1, r2, #31
   2fa34:	adds	r4, #1
   2fa36:	mul.w	r3, sl, r1
   2fa3a:	mla	r3, r2, fp, r3
   2fa3e:	umull	sl, fp, sl, r2
   2fa42:	add	fp, r3
   2fa44:	adds	r4, #1
   2fa46:	cmp	r4, #6
   2fa48:	ble.n	2fabe <pretty_size_snprintf@@Base+0x132>
   2fa4a:	vmov	r2, s17
   2fa4e:	movs	r3, #0
   2fa50:	ldr	r1, [pc, #376]	; (2fbcc <pretty_size_snprintf@@Base+0x240>)
   2fa52:	movs	r0, #1
   2fa54:	add	r1, pc
   2fa56:	strb	r3, [r2, #0]
   2fa58:	mov	r2, r4
   2fa5a:	blx	8838 <__printf_chk@plt+0x4>
   2fa5e:	ldr	r3, [pc, #368]	; (2fbd0 <pretty_size_snprintf@@Base+0x244>)
   2fa60:	ldr	r1, [pc, #368]	; (2fbd4 <pretty_size_snprintf@@Base+0x248>)
   2fa62:	movw	r2, #451	; 0x1c3
   2fa66:	ldr	r0, [pc, #368]	; (2fbd8 <pretty_size_snprintf@@Base+0x24c>)
   2fa68:	add	r3, pc
   2fa6a:	add	r1, pc
   2fa6c:	add	r0, pc
   2fa6e:	blx	89d4 <__assert_fail@plt>
   2fa72:	movs	r4, #0
   2fa74:	b.n	2fa20 <pretty_size_snprintf@@Base+0x94>
   2fa76:	movs	r4, #0
   2fa78:	b.n	2fa32 <pretty_size_snprintf@@Base+0xa6>
   2fa7a:	movs	r4, #0
   2fa7c:	b.n	2fa44 <pretty_size_snprintf@@Base+0xb8>
   2fa7e:	mov	r3, r2
   2fa80:	asrs	r4, r2, #31
   2fa82:	strd	r3, r4, [sp, #24]
   2fa86:	mov	r8, r6
   2fa88:	ldr	r3, [sp, #32]
   2fa8a:	mov	r9, r7
   2fa8c:	cmp	r3, #0
   2fa8e:	beq.n	2fb44 <pretty_size_snprintf@@Base+0x1b8>
   2fa90:	movs	r4, #0
   2fa92:	cmp.w	r8, #0
   2fa96:	mov	r2, r8
   2fa98:	sbcs.w	r1, r9, #0
   2fa9c:	mov	r3, r9
   2fa9e:	bge.n	2faa8 <pretty_size_snprintf@@Base+0x11c>
   2faa0:	rsbs	r2, r8, #0
   2faa4:	sbc.w	r3, r9, r9, lsl #1
   2faa8:	ldrd	r0, r1, [sp, #24]
   2faac:	cmp	r2, r0
   2faae:	sbcs	r3, r1
   2fab0:	bge.n	2fb08 <pretty_size_snprintf@@Base+0x17c>
   2fab2:	cmp	r4, #0
   2fab4:	bne.n	2fa46 <pretty_size_snprintf@@Base+0xba>
   2fab6:	mov.w	sl, #1
   2faba:	mov.w	fp, #0
   2fabe:	mov	r1, fp
   2fac0:	mov	r0, sl
   2fac2:	bl	38ad0 <btrfs_util_strerror@@Base+0x6d0>
   2fac6:	ldr	r3, [sp, #32]
   2fac8:	mov	r1, r7
   2faca:	vmov	s16, r0
   2face:	mov	r0, r6
   2fad0:	cmp	r3, #0
   2fad2:	beq.n	2fb54 <pretty_size_snprintf@@Base+0x1c8>
   2fad4:	bl	38ae0 <btrfs_util_strerror@@Base+0x6e0>
   2fad8:	vmov	s15, r0
   2fadc:	ldr	r3, [sp, #36]	; 0x24
   2fade:	vmov	r0, s17
   2fae2:	movs	r2, #1
   2fae4:	vdiv.f32	s14, s15, s16
   2fae8:	mov	r1, r5
   2faea:	ldr.w	r3, [r3, r4, lsl #2]
   2faee:	str	r3, [sp, #16]
   2faf0:	ldr	r3, [pc, #232]	; (2fbdc <pretty_size_snprintf@@Base+0x250>)
   2faf2:	add	r3, pc
   2faf4:	str	r3, [sp, #0]
   2faf6:	mov.w	r3, #4294967295	; 0xffffffff
   2fafa:	vcvt.f64.f32	d7, s14
   2fafe:	vstr	d7, [sp, #8]
   2fb02:	blx	89bc <__snprintf_chk@plt>
   2fb06:	b.n	2f9dc <pretty_size_snprintf@@Base+0x50>
   2fb08:	mov	r0, r8
   2fb0a:	mov	r1, r9
   2fb0c:	ldrd	r2, r3, [sp, #24]
   2fb10:	mov	r6, r8
   2fb12:	bl	38b5c <btrfs_util_strerror@@Base+0x75c>
   2fb16:	mov	r7, r9
   2fb18:	adds	r4, #1
   2fb1a:	mov	r8, r0
   2fb1c:	mov	r9, r1
   2fb1e:	b.n	2fa92 <pretty_size_snprintf@@Base+0x106>
   2fb20:	mov	r0, r8
   2fb22:	mov	r1, r9
   2fb24:	ldrd	r2, r3, [sp, #24]
   2fb28:	adds	r4, #1
   2fb2a:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   2fb2e:	mov	r6, r8
   2fb30:	mov	r7, r9
   2fb32:	mov	r8, r0
   2fb34:	mov	r9, r1
   2fb36:	ldrd	r2, r3, [sp, #24]
   2fb3a:	cmp	r9, r3
   2fb3c:	it	eq
   2fb3e:	cmpeq	r8, r2
   2fb40:	bcs.n	2fb20 <pretty_size_snprintf@@Base+0x194>
   2fb42:	b.n	2fab2 <pretty_size_snprintf@@Base+0x126>
   2fb44:	ldr	r4, [sp, #32]
   2fb46:	b.n	2fb36 <pretty_size_snprintf@@Base+0x1aa>
   2fb48:	mov.w	sl, #1
   2fb4c:	mov.w	fp, #0
   2fb50:	movs	r4, #0
   2fb52:	b.n	2fabe <pretty_size_snprintf@@Base+0x132>
   2fb54:	bl	38ad0 <btrfs_util_strerror@@Base+0x6d0>
   2fb58:	b.n	2fad8 <pretty_size_snprintf@@Base+0x14c>
   2fb5a:	ldr	r3, [pc, #132]	; (2fbe0 <pretty_size_snprintf@@Base+0x254>)
   2fb5c:	ldr	r0, [r2, r3]
   2fb5e:	bic.w	r3, r1, #1024	; 0x400
   2fb62:	ldr	r2, [pc, #128]	; (2fbe4 <pretty_size_snprintf@@Base+0x258>)
   2fb64:	movs	r1, #1
   2fb66:	add	r2, pc
   2fb68:	ldr	r0, [r0, #0]
   2fb6a:	blx	8860 <__fprintf_chk@plt+0x4>
   2fb6e:	ldr	r3, [pc, #120]	; (2fbe8 <pretty_size_snprintf@@Base+0x25c>)
   2fb70:	ldr	r1, [pc, #120]	; (2fbec <pretty_size_snprintf@@Base+0x260>)
   2fb72:	mov.w	r2, #394	; 0x18a
   2fb76:	ldr	r0, [pc, #120]	; (2fbf0 <pretty_size_snprintf@@Base+0x264>)
   2fb78:	add	r3, pc
   2fb7a:	add	r1, pc
   2fb7c:	add	r0, pc
   2fb7e:	b.n	2fa6e <pretty_size_snprintf@@Base+0xe2>
   2fb80:	ldr	r3, [pc, #112]	; (2fbf4 <pretty_size_snprintf@@Base+0x268>)
   2fb82:	mov.w	r2, #1024	; 0x400
   2fb86:	mov.w	sl, #1024	; 0x400
   2fb8a:	add	r3, pc
   2fb8c:	str	r3, [sp, #36]	; 0x24
   2fb8e:	uxtb	r1, r1
   2fb90:	mov.w	fp, #0
   2fb94:	subs	r1, #1
   2fb96:	cmp	r1, #4
   2fb98:	bhi.w	2fa7e <pretty_size_snprintf@@Base+0xf2>
   2fb9c:	add	r3, pc, #8	; (adr r3, 2fba8 <pretty_size_snprintf@@Base+0x21c>)
   2fb9e:	ldr.w	r1, [r3, r1, lsl #2]
   2fba2:	add	r3, r1
   2fba4:	bx	r3
   2fba6:	nop
   2fba8:			; <UNDEFINED> instruction: 0xffa1ffff
   2fbac:	mrc2	15, 6, pc, cr3, cr15, {7}
   2fbb0:	mcr2	15, 6, pc, cr15, cr15, {7}	; <UNPREDICTABLE>
   2fbb4:	mcr2	15, 6, pc, cr11, cr15, {7}	; <UNPREDICTABLE>
   2fbb8:	mcr2	15, 3, pc, cr7, cr15, {7}	; <UNPREDICTABLE>
   2fbbc:	mvns	r2, r4
   2fbbe:	movs	r3, r0
   2fbc0:	cmp	r6, #140	; 0x8c
   2fbc2:	movs	r2, r0
   2fbc4:			; <UNDEFINED> instruction: 0xf7c50000
   2fbc8:	ldrsb	r6, [r2, r7]
   2fbca:	movs	r3, r0
   2fbcc:	cmp	r6, #3
   2fbce:	movs	r2, r0
   2fbd0:	adds	r4, #21
   2fbd2:	movs	r2, r0
   2fbd4:	cmp	r5, #142	; 0x8e
   2fbd6:	movs	r2, r0
   2fbd8:	stmia	r1!, {r1, r2, r4, r6, r7}
   2fbda:	movs	r0, r0
   2fbdc:	cmp	r5, #152	; 0x98
   2fbde:	movs	r2, r0
   2fbe0:	lsls	r0, r6, #8
   2fbe2:	movs	r0, r0
   2fbe4:	cmp	r5, #43	; 0x2b
   2fbe6:	movs	r2, r0
   2fbe8:	adds	r3, #5
   2fbea:	movs	r2, r0
   2fbec:	cmp	r4, #126	; 0x7e
   2fbee:	movs	r2, r0
   2fbf0:	stmia	r0!, {r1, r2, r6, r7}
   2fbf2:	movs	r0, r0
   2fbf4:	ldrsb	r2, [r2, r1]
   2fbf6:	movs	r3, r0

0002fbf8 <pretty_size_mode@@Base>:
   2fbf8:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   2fbfc:	mov	r7, r0
   2fbfe:	ldr	r0, [pc, #68]	; (2fc44 <pretty_size_mode@@Base+0x4c>)
   2fc00:	mov	r8, r2
   2fc02:	mov	r6, r1
   2fc04:	ldr.w	r9, [pc, #64]	; 2fc48 <pretty_size_mode@@Base+0x50>
   2fc08:	add	r0, pc
   2fc0a:	blx	8930 <__tls_get_addr@plt>
   2fc0e:	movs	r1, #10
   2fc10:	add.w	r4, r0, r9
   2fc14:	mov	r5, r0
   2fc16:	ldr.w	r0, [r0, r9]
   2fc1a:	adds	r4, #4
   2fc1c:	add.w	r4, r4, r0, lsl #5
   2fc20:	adds	r0, #1
   2fc22:	bl	38924 <btrfs_util_strerror@@Base+0x524>
   2fc26:	movs	r3, #32
   2fc28:	mov	r2, r4
   2fc2a:	mov	r0, r7
   2fc2c:	str.w	r1, [r9, r5]
   2fc30:	mov	r1, r6
   2fc32:	str.w	r8, [sp]
   2fc36:	bl	2f98c <pretty_size_snprintf@@Base>
   2fc3a:	mov	r0, r4
   2fc3c:	add	sp, #12
   2fc3e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2fc42:	nop
   2fc44:	bics	r4, r0
   2fc46:	movs	r3, r0
   2fc48:	movs	r0, r0
	...

0002fc4c <get_label_unmounted@@Base>:
   2fc4c:	push	{r0, r1, r4, r5, r6, lr}
   2fc4e:	mov	r5, r0
   2fc50:	mov	r6, r1
   2fc52:	bl	2f948 <check_mounted@@Base>
   2fc56:	subs	r2, r0, #0
   2fc58:	bge.n	2fc6a <get_label_unmounted@@Base+0x1e>
   2fc5a:	ldr	r0, [pc, #68]	; (2fca0 <get_label_unmounted@@Base+0x54>)
   2fc5c:	mov	r1, r5
   2fc5e:	add	r0, pc
   2fc60:	bl	16b70 <__btrfs_error@@Base>
   2fc64:	mov.w	r0, #4294967295	; 0xffffffff
   2fc68:	b.n	2fc9c <get_label_unmounted@@Base+0x50>
   2fc6a:	mov	r0, r5
   2fc6c:	movs	r4, #0
   2fc6e:	movs	r2, #0
   2fc70:	movs	r3, #0
   2fc72:	str	r4, [sp, #0]
   2fc74:	bl	1d9e4 <open_ctree@@Base>
   2fc78:	mov	r5, r0
   2fc7a:	cmp	r0, #0
   2fc7c:	beq.n	2fc64 <get_label_unmounted@@Base+0x18>
   2fc7e:	ldr.w	r3, [r0, #464]	; 0x1d0
   2fc82:	movs	r2, #255	; 0xff
   2fc84:	mov	r0, r6
   2fc86:	ldr.w	r1, [r3, #308]	; 0x134
   2fc8a:	addw	r1, r1, #299	; 0x12b
   2fc8e:	bl	2f278 <__strncpy_null@@Base>
   2fc92:	ldr.w	r0, [r5, #464]	; 0x1d0
   2fc96:	bl	1ca84 <close_ctree_fs_info@@Base>
   2fc9a:	mov	r0, r4
   2fc9c:	add	sp, #8
   2fc9e:	pop	{r4, r5, r6, pc}
   2fca0:	cmp	r4, #95	; 0x5f
   2fca2:	movs	r2, r0

0002fca4 <get_label_mounted@@Base>:
   2fca4:	ldr	r2, [pc, #160]	; (2fd48 <get_label_mounted@@Base+0xa4>)
   2fca6:	ldr	r3, [pc, #164]	; (2fd4c <get_label_mounted@@Base+0xa8>)
   2fca8:	add	r2, pc
   2fcaa:	push	{r4, r5, r6, r7, lr}
   2fcac:	mov	r5, r1
   2fcae:	ldr	r3, [r2, r3]
   2fcb0:	sub	sp, #268	; 0x10c
   2fcb2:	mov.w	r1, #262144	; 0x40000
   2fcb6:	mov	r7, r0
   2fcb8:	ldr	r3, [r3, #0]
   2fcba:	str	r3, [sp, #260]	; 0x104
   2fcbc:	mov.w	r3, #0
   2fcc0:	blx	864c <open64@plt>
   2fcc4:	subs	r4, r0, #0
   2fcc6:	bge.n	2fcea <get_label_mounted@@Base+0x46>
   2fcc8:	ldr	r0, [pc, #132]	; (2fd50 <get_label_mounted@@Base+0xac>)
   2fcca:	mov	r1, r7
   2fccc:	mov.w	r5, #4294967295	; 0xffffffff
   2fcd0:	add	r0, pc
   2fcd2:	bl	16b70 <__btrfs_error@@Base>
   2fcd6:	ldr	r2, [pc, #124]	; (2fd54 <get_label_mounted@@Base+0xb0>)
   2fcd8:	ldr	r3, [pc, #112]	; (2fd4c <get_label_mounted@@Base+0xa8>)
   2fcda:	add	r2, pc
   2fcdc:	ldr	r3, [r2, r3]
   2fcde:	ldr	r2, [r3, #0]
   2fce0:	ldr	r3, [sp, #260]	; 0x104
   2fce2:	eors	r2, r3
   2fce4:	beq.n	2fd3c <get_label_mounted@@Base+0x98>
   2fce6:	blx	8510 <__stack_chk_fail@plt>
   2fcea:	add	r6, sp, #4
   2fcec:	mov.w	r2, #256	; 0x100
   2fcf0:	movs	r1, #0
   2fcf2:	mov	r0, r6
   2fcf4:	blx	87c4 <memset@plt+0x4>
   2fcf8:	ldr	r1, [pc, #72]	; (2fd44 <get_label_mounted@@Base+0xa0>)
   2fcfa:	mov	r2, r6
   2fcfc:	mov	r0, r4
   2fcfe:	blx	85bc <ioctl@plt>
   2fd02:	cmp	r0, #0
   2fd04:	bge.n	2fd28 <get_label_mounted@@Base+0x84>
   2fd06:	blx	8784 <__errno_location@plt>
   2fd0a:	ldr	r3, [r0, #0]
   2fd0c:	mov	r5, r0
   2fd0e:	cmp	r3, #25
   2fd10:	beq.n	2fd1c <get_label_mounted@@Base+0x78>
   2fd12:	ldr	r0, [pc, #68]	; (2fd58 <get_label_mounted@@Base+0xb4>)
   2fd14:	mov	r1, r7
   2fd16:	add	r0, pc
   2fd18:	bl	16b70 <__btrfs_error@@Base>
   2fd1c:	ldr	r5, [r5, #0]
   2fd1e:	mov	r0, r4
   2fd20:	negs	r5, r5
   2fd22:	blx	8998 <close@plt>
   2fd26:	b.n	2fcd6 <get_label_mounted@@Base+0x32>
   2fd28:	movs	r2, #255	; 0xff
   2fd2a:	mov	r1, r6
   2fd2c:	mov	r0, r5
   2fd2e:	movs	r5, #0
   2fd30:	bl	2f278 <__strncpy_null@@Base>
   2fd34:	mov	r0, r4
   2fd36:	blx	8998 <close@plt>
   2fd3a:	b.n	2fcd6 <get_label_mounted@@Base+0x32>
   2fd3c:	mov	r0, r5
   2fd3e:	add	sp, #268	; 0x10c
   2fd40:	pop	{r4, r5, r6, r7, pc}
   2fd42:	nop
   2fd44:	str	r4, [sp, #196]	; 0xc4
   2fd46:	strh	r0, [r0, #8]
   2fd48:	lsrs	r4, r3
   2fd4a:	movs	r3, r0
   2fd4c:	lsls	r0, r4, #8
   2fd4e:	movs	r0, r0
   2fd50:	cmp	r4, #20
   2fd52:	movs	r2, r0
   2fd54:	lsls	r2, r5
   2fd56:	movs	r3, r0
   2fd58:	cmp	r3, #230	; 0xe6
   2fd5a:	movs	r2, r0

0002fd5c <get_label@@Base>:
   2fd5c:	push	{r0, r1, r4, lr}
   2fd5e:	mov	r4, r0
   2fd60:	str	r1, [sp, #4]
   2fd62:	bl	2f19c <path_is_reg_or_block_device@@Base>
   2fd66:	ldr	r1, [sp, #4]
   2fd68:	cmp	r0, #0
   2fd6a:	bne.n	2fd78 <get_label@@Base+0x1c>
   2fd6c:	mov	r0, r4
   2fd6e:	add	sp, #8
   2fd70:	ldmia.w	sp!, {r4, lr}
   2fd74:	b.w	2fca4 <get_label_mounted@@Base>
   2fd78:	ble.n	2fd86 <get_label@@Base+0x2a>
   2fd7a:	mov	r0, r4
   2fd7c:	add	sp, #8
   2fd7e:	ldmia.w	sp!, {r4, lr}
   2fd82:	b.w	2fc4c <get_label_unmounted@@Base>
   2fd86:	add	sp, #8
   2fd88:	pop	{r4, pc}

0002fd8a <set_label@@Base>:
   2fd8a:	ldr	r2, [pc, #312]	; (2fec4 <set_label@@Base+0x13a>)
   2fd8c:	ldr	r3, [pc, #312]	; (2fec8 <set_label@@Base+0x13e>)
   2fd8e:	add	r2, pc
   2fd90:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   2fd94:	mov	r5, r0
   2fd96:	ldr	r3, [r2, r3]
   2fd98:	sub	sp, #272	; 0x110
   2fd9a:	mov	r0, r1
   2fd9c:	mov	r6, r1
   2fd9e:	ldr	r3, [r3, #0]
   2fda0:	str	r3, [sp, #268]	; 0x10c
   2fda2:	mov.w	r3, #0
   2fda6:	blx	8748 <strlen@plt>
   2fdaa:	cmp	r0, #255	; 0xff
   2fdac:	bhi.n	2fdd2 <set_label@@Base+0x48>
   2fdae:	mov	r0, r5
   2fdb0:	bl	2f19c <path_is_reg_or_block_device@@Base>
   2fdb4:	subs	r4, r0, #0
   2fdb6:	bne.n	2fe38 <set_label@@Base+0xae>
   2fdb8:	mov.w	r1, #262144	; 0x40000
   2fdbc:	mov	r0, r5
   2fdbe:	blx	864c <open64@plt>
   2fdc2:	subs	r7, r0, #0
   2fdc4:	bge.n	2fde0 <set_label@@Base+0x56>
   2fdc6:	ldr	r0, [pc, #260]	; (2fecc <set_label@@Base+0x142>)
   2fdc8:	mov	r1, r5
   2fdca:	add	r0, pc
   2fdcc:	bl	16b70 <__btrfs_error@@Base>
   2fdd0:	b.n	2fe18 <set_label@@Base+0x8e>
   2fdd2:	ldr	r0, [pc, #252]	; (2fed0 <set_label@@Base+0x146>)
   2fdd4:	movs	r2, #255	; 0xff
   2fdd6:	mov	r1, r6
   2fdd8:	add	r0, pc
   2fdda:	bl	16b70 <__btrfs_error@@Base>
   2fdde:	b.n	2fe18 <set_label@@Base+0x8e>
   2fde0:	add.w	r8, sp, #12
   2fde4:	mov.w	r2, #256	; 0x100
   2fde8:	mov	r1, r4
   2fdea:	mov	r0, r8
   2fdec:	blx	87c4 <memset@plt+0x4>
   2fdf0:	movs	r2, #255	; 0xff
   2fdf2:	mov	r1, r6
   2fdf4:	mov	r0, r8
   2fdf6:	bl	2f278 <__strncpy_null@@Base>
   2fdfa:	ldr	r1, [pc, #196]	; (2fec0 <set_label@@Base+0x136>)
   2fdfc:	mov	r2, r8
   2fdfe:	mov	r0, r7
   2fe00:	blx	85bc <ioctl@plt>
   2fe04:	cmp	r0, #0
   2fe06:	bge.n	2fe1e <set_label@@Base+0x94>
   2fe08:	ldr	r0, [pc, #200]	; (2fed4 <set_label@@Base+0x14a>)
   2fe0a:	mov	r1, r5
   2fe0c:	add	r0, pc
   2fe0e:	bl	16b70 <__btrfs_error@@Base>
   2fe12:	mov	r0, r7
   2fe14:	blx	8998 <close@plt>
   2fe18:	mov.w	r4, #4294967295	; 0xffffffff
   2fe1c:	b.n	2fe24 <set_label@@Base+0x9a>
   2fe1e:	mov	r0, r7
   2fe20:	blx	8998 <close@plt>
   2fe24:	ldr	r2, [pc, #176]	; (2fed8 <set_label@@Base+0x14e>)
   2fe26:	ldr	r3, [pc, #160]	; (2fec8 <set_label@@Base+0x13e>)
   2fe28:	add	r2, pc
   2fe2a:	ldr	r3, [r2, r3]
   2fe2c:	ldr	r2, [r3, #0]
   2fe2e:	ldr	r3, [sp, #268]	; 0x10c
   2fe30:	eors	r2, r3
   2fe32:	beq.n	2feb8 <set_label@@Base+0x12e>
   2fe34:	blx	8510 <__stack_chk_fail@plt>
   2fe38:	ble.n	2fe24 <set_label@@Base+0x9a>
   2fe3a:	mov	r0, r5
   2fe3c:	bl	2f948 <check_mounted@@Base>
   2fe40:	subs	r4, r0, #0
   2fe42:	bge.n	2fe4e <set_label@@Base+0xc4>
   2fe44:	ldr	r0, [pc, #148]	; (2fedc <set_label@@Base+0x152>)
   2fe46:	mov	r2, r4
   2fe48:	mov	r1, r5
   2fe4a:	add	r0, pc
   2fe4c:	b.n	2fdda <set_label@@Base+0x50>
   2fe4e:	beq.n	2fe58 <set_label@@Base+0xce>
   2fe50:	ldr	r0, [pc, #140]	; (2fee0 <set_label@@Base+0x156>)
   2fe52:	mov	r1, r5
   2fe54:	add	r0, pc
   2fe56:	b.n	2fdcc <set_label@@Base+0x42>
   2fe58:	mov	r0, r5
   2fe5a:	mov.w	r8, #1
   2fe5e:	movs	r2, #0
   2fe60:	movs	r3, #0
   2fe62:	str.w	r8, [sp]
   2fe66:	bl	1d9e4 <open_ctree@@Base>
   2fe6a:	mov	r5, r0
   2fe6c:	cmp	r0, #0
   2fe6e:	beq.n	2fe18 <set_label@@Base+0x8e>
   2fe70:	mov	r1, r8
   2fe72:	bl	2a674 <btrfs_start_transaction@@Base>
   2fe76:	cmn.w	r0, #4096	; 0x1000
   2fe7a:	mov	r7, r0
   2fe7c:	bls.n	2fe92 <set_label@@Base+0x108>
   2fe7e:	ldr	r1, [pc, #100]	; (2fee4 <set_label@@Base+0x15a>)
   2fe80:	mov	r3, r8
   2fe82:	ldr	r0, [pc, #100]	; (2fee8 <set_label@@Base+0x15e>)
   2fe84:	movw	r2, #507	; 0x1fb
   2fe88:	add	r1, pc
   2fe8a:	adds	r1, #21
   2fe8c:	add	r0, pc
   2fe8e:	bl	2f61c <test_issubvolname@@Base+0x17e>
   2fe92:	ldr.w	r3, [r5, #464]	; 0x1d0
   2fe96:	movs	r2, #255	; 0xff
   2fe98:	mov	r1, r6
   2fe9a:	ldr.w	r0, [r3, #308]	; 0x134
   2fe9e:	addw	r0, r0, #299	; 0x12b
   2fea2:	bl	2f278 <__strncpy_null@@Base>
   2fea6:	mov	r1, r5
   2fea8:	mov	r0, r7
   2feaa:	bl	2a8f4 <btrfs_commit_transaction@@Base>
   2feae:	ldr.w	r0, [r5, #464]	; 0x1d0
   2feb2:	bl	1ca84 <close_ctree_fs_info@@Base>
   2feb6:	b.n	2fe24 <set_label@@Base+0x9a>
   2feb8:	mov	r0, r4
   2feba:	add	sp, #272	; 0x110
   2febc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2fec0:	str	r4, [sp, #200]	; 0xc8
   2fec2:	asrs	r0, r0
   2fec4:	subs	r7, #246	; 0xf6
   2fec6:	movs	r3, r0
   2fec8:	lsls	r0, r4, #8
   2feca:	movs	r0, r0
   2fecc:	cmp	r3, #26
   2fece:	movs	r2, r0
   2fed0:	cmp	r3, #66	; 0x42
   2fed2:	movs	r2, r0
   2fed4:	cmp	r3, #44	; 0x2c
   2fed6:	movs	r2, r0
   2fed8:	subs	r7, #92	; 0x5c
   2feda:	movs	r3, r0
   2fedc:	cmp	r2, #115	; 0x73
   2fede:	movs	r2, r0
   2fee0:	cmp	r3, #2
   2fee2:	movs	r2, r0
   2fee4:	cmp	r7, #245	; 0xf5
   2fee6:	movs	r2, r0
   2fee8:	ldmia	r0!, {r1, r3, r4, r6}
	...

0002feec <parse_size@@Base>:
   2feec:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fef0:	mov	sl, r0
   2fef2:	ldr	r2, [pc, #404]	; (30088 <parse_size@@Base+0x19c>)
   2fef4:	ldr	r3, [pc, #404]	; (3008c <parse_size@@Base+0x1a0>)
   2fef6:	add	r2, pc
   2fef8:	ldr	r3, [r2, r3]
   2fefa:	ldr	r3, [r3, #0]
   2fefc:	str	r3, [sp, #4]
   2fefe:	mov.w	r3, #0
   2ff02:	cbnz	r0, 2ff12 <parse_size@@Base+0x26>
   2ff04:	ldr	r0, [pc, #392]	; (30090 <parse_size@@Base+0x1a4>)
   2ff06:	add	r0, pc
   2ff08:	bl	16b70 <__btrfs_error@@Base>
   2ff0c:	movs	r0, #1
   2ff0e:	blx	873c <exit@plt>
   2ff12:	ldrb	r3, [r0, #0]
   2ff14:	cmp	r3, #45	; 0x2d
   2ff16:	bne.n	2ff24 <parse_size@@Base+0x38>
   2ff18:	mov	r1, r0
   2ff1a:	ldr	r0, [pc, #376]	; (30094 <parse_size@@Base+0x1a8>)
   2ff1c:	add	r0, pc
   2ff1e:	bl	16b70 <__btrfs_error@@Base>
   2ff22:	b.n	2ff0c <parse_size@@Base+0x20>
   2ff24:	movs	r2, #10
   2ff26:	mov	r1, sp
   2ff28:	blx	8804 <strtoull@plt>
   2ff2c:	mov	r9, r1
   2ff2e:	ldr	r1, [sp, #0]
   2ff30:	mov	r8, r0
   2ff32:	cmp	r1, sl
   2ff34:	bne.n	2ff3c <parse_size@@Base+0x50>
   2ff36:	ldr	r0, [pc, #352]	; (30098 <parse_size@@Base+0x1ac>)
   2ff38:	add	r0, pc
   2ff3a:	b.n	2ff1e <parse_size@@Base+0x32>
   2ff3c:	ldrb.w	fp, [r1]
   2ff40:	cmp.w	fp, #0
   2ff44:	beq.n	2ff50 <parse_size@@Base+0x64>
   2ff46:	ldrb	r1, [r1, #1]
   2ff48:	cbz	r1, 2ff50 <parse_size@@Base+0x64>
   2ff4a:	ldr	r0, [pc, #336]	; (3009c <parse_size@@Base+0x1b0>)
   2ff4c:	add	r0, pc
   2ff4e:	b.n	2ff1e <parse_size@@Base+0x32>
   2ff50:	blx	8784 <__errno_location@plt>
   2ff54:	ldr	r3, [r0, #0]
   2ff56:	cmp	r3, #34	; 0x22
   2ff58:	bne.n	2ff6e <parse_size@@Base+0x82>
   2ff5a:	cmp.w	r9, #4294967295	; 0xffffffff
   2ff5e:	it	eq
   2ff60:	cmpeq.w	r8, #4294967295	; 0xffffffff
   2ff64:	bne.n	2ff6e <parse_size@@Base+0x82>
   2ff66:	ldr	r0, [pc, #312]	; (300a0 <parse_size@@Base+0x1b4>)
   2ff68:	mov	r1, sl
   2ff6a:	add	r0, pc
   2ff6c:	b.n	2ff1e <parse_size@@Base+0x32>
   2ff6e:	cmp.w	fp, #0
   2ff72:	beq.n	30070 <parse_size@@Base+0x184>
   2ff74:	blx	86e8 <__ctype_tolower_loc@plt>
   2ff78:	ldr	r3, [r0, #0]
   2ff7a:	ldrb.w	r1, [r3, fp, lsl #2]
   2ff7e:	sub.w	r3, r1, #98	; 0x62
   2ff82:	cmp	r3, #18
   2ff84:	bhi.n	3006a <parse_size@@Base+0x17e>
   2ff86:	tbb	[pc, r3]
   2ff8a:	strb	r3, [r6, #1]
   2ff8c:	lsrs	r0, r6, #9
   2ff8e:	str	r0, [r6, #116]	; 0x74
   2ff90:	strb	r0, [r6, #1]
   2ff92:	ldr	r0, [r6, #84]	; 0x54
   2ff94:	ldr	r0, [r6, #36]	; 0x24
   2ff96:	strb	r0, [r6, #1]
   2ff98:	strb	r2, [r4, #1]
   2ff9a:	strb	r0, [r6, #1]
   2ff9c:	lsls	r4, r4, #1
   2ff9e:	mov.w	r2, #1024	; 0x400
   2ffa2:	movs	r3, #0
   2ffa4:	orr.w	r3, r3, r2, lsr #22
   2ffa8:	lsls	r2, r2, #10
   2ffaa:	lsls	r3, r3, #10
   2ffac:	orr.w	r3, r3, r2, lsr #22
   2ffb0:	lsls	r2, r2, #10
   2ffb2:	lsls	r3, r3, #10
   2ffb4:	orr.w	r3, r3, r2, lsr #22
   2ffb8:	lsls	r2, r2, #10
   2ffba:	lsls	r3, r3, #10
   2ffbc:	orr.w	r3, r3, r2, lsr #22
   2ffc0:	lsls	r2, r2, #10
   2ffc2:	lsls	r3, r3, #10
   2ffc4:	orr.w	r3, r3, r2, lsr #22
   2ffc8:	lsls	r2, r2, #10
   2ffca:	movs	r1, #0
   2ffcc:	sub.w	ip, r1, #32
   2ffd0:	rsb	r0, r1, #32
   2ffd4:	lsl.w	r7, r9, r1
   2ffd8:	lsl.w	ip, r8, ip
   2ffdc:	lsr.w	r0, r8, r0
   2ffe0:	orr.w	r7, r7, ip
   2ffe4:	lsl.w	r6, r8, r1
   2ffe8:	orrs	r7, r0
   2ffea:	cmp	r6, #0
   2ffec:	sbcs.w	r0, r7, #0
   2fff0:	bge.n	30076 <parse_size@@Base+0x18a>
   2fff2:	rsb	r0, r1, #64	; 0x40
   2fff6:	movs	r1, #0
   2fff8:	adds	r1, #1
   2fffa:	cmp	r1, #64	; 0x40
   2fffc:	beq.n	3002c <parse_size@@Base+0x140>
   2fffe:	sub.w	r7, r1, #32
   30002:	rsb	r6, r1, #32
   30006:	lsl.w	r5, r3, r1
   3000a:	lsl.w	r7, r2, r7
   3000e:	lsr.w	r6, r2, r6
   30012:	orrs	r5, r7
   30014:	lsl.w	r4, r2, r1
   30018:	orrs	r5, r6
   3001a:	cmp	r4, #0
   3001c:	sbcs.w	r6, r5, #0
   30020:	bge.n	2fff8 <parse_size@@Base+0x10c>
   30022:	rsb	r1, r1, #64	; 0x40
   30026:	add	r1, r0
   30028:	cmp	r1, #65	; 0x41
   3002a:	bgt.n	2ff66 <parse_size@@Base+0x7a>
   3002c:	mul.w	r3, r8, r3
   30030:	mla	r3, r2, r9, r3
   30034:	umull	r0, r1, r8, r2
   30038:	ldr	r2, [pc, #104]	; (300a4 <parse_size@@Base+0x1b8>)
   3003a:	add	r1, r3
   3003c:	ldr	r3, [pc, #76]	; (3008c <parse_size@@Base+0x1a0>)
   3003e:	add	r2, pc
   30040:	ldr	r3, [r2, r3]
   30042:	ldr	r2, [r3, #0]
   30044:	ldr	r3, [sp, #4]
   30046:	eors	r2, r3
   30048:	beq.n	30080 <parse_size@@Base+0x194>
   3004a:	blx	8510 <__stack_chk_fail@plt>
   3004e:	movs	r2, #1
   30050:	b.n	2ffa2 <parse_size@@Base+0xb6>
   30052:	movs	r2, #1
   30054:	movs	r3, #0
   30056:	b.n	2ffaa <parse_size@@Base+0xbe>
   30058:	movs	r2, #1
   3005a:	movs	r3, #0
   3005c:	b.n	2ffb2 <parse_size@@Base+0xc6>
   3005e:	movs	r2, #1
   30060:	movs	r3, #0
   30062:	b.n	2ffba <parse_size@@Base+0xce>
   30064:	movs	r2, #1
   30066:	movs	r3, #0
   30068:	b.n	2ffc2 <parse_size@@Base+0xd6>
   3006a:	ldr	r0, [pc, #60]	; (300a8 <parse_size@@Base+0x1bc>)
   3006c:	add	r0, pc
   3006e:	b.n	2ff1e <parse_size@@Base+0x32>
   30070:	movs	r2, #1
   30072:	movs	r3, #0
   30074:	b.n	2ffca <parse_size@@Base+0xde>
   30076:	adds	r1, #1
   30078:	cmp	r1, #64	; 0x40
   3007a:	bne.n	2ffcc <parse_size@@Base+0xe0>
   3007c:	movs	r0, #0
   3007e:	b.n	2fff6 <parse_size@@Base+0x10a>
   30080:	add	sp, #12
   30082:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30086:	nop
   30088:	subs	r6, #142	; 0x8e
   3008a:	movs	r3, r0
   3008c:	lsls	r0, r4, #8
   3008e:	movs	r0, r0
   30090:	cmp	r2, #118	; 0x76
   30092:	movs	r2, r0
   30094:	cmp	r2, #116	; 0x74
   30096:	movs	r2, r0
   30098:	cmp	r2, #125	; 0x7d
   3009a:	movs	r2, r0
   3009c:	cmp	r2, #132	; 0x84
   3009e:	movs	r2, r0
   300a0:	cmp	r2, #159	; 0x9f
   300a2:	movs	r2, r0
   300a4:	subs	r5, #70	; 0x46
   300a6:	movs	r3, r0
   300a8:	cmp	r1, #194	; 0xc2
   300aa:	movs	r2, r0

000300ac <parse_qgroupid@@Base>:
   300ac:	ldr	r2, [pc, #220]	; (3018c <parse_qgroupid@@Base+0xe0>)
   300ae:	movs	r1, #47	; 0x2f
   300b0:	ldr	r3, [pc, #220]	; (30190 <parse_qgroupid@@Base+0xe4>)
   300b2:	add	r2, pc
   300b4:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   300b8:	sub	sp, #24
   300ba:	ldr	r3, [r2, r3]
   300bc:	mov	r4, r0
   300be:	ldr	r3, [r3, #0]
   300c0:	str	r3, [sp, #20]
   300c2:	mov.w	r3, #0
   300c6:	blx	8754 <strchr@plt>
   300ca:	mov	r6, r0
   300cc:	mov	r0, r4
   300ce:	blx	8748 <strlen@plt>
   300d2:	movs	r3, #0
   300d4:	str	r3, [sp, #4]
   300d6:	ldrb	r3, [r4, #0]
   300d8:	cmp	r3, #47	; 0x2f
   300da:	add.w	r5, r4, r0
   300de:	beq.n	30134 <parse_qgroupid@@Base+0x88>
   300e0:	add.w	r8, sp, #4
   300e4:	movs	r2, #10
   300e6:	mov	r0, r4
   300e8:	mov	r1, r8
   300ea:	cbnz	r6, 3010e <parse_qgroupid@@Base+0x62>
   300ec:	blx	8804 <strtoull@plt>
   300f0:	ldr	r3, [sp, #4]
   300f2:	cmp	r3, r5
   300f4:	strd	r0, r1, [sp, #8]
   300f8:	bne.n	30134 <parse_qgroupid@@Base+0x88>
   300fa:	ldr	r2, [pc, #152]	; (30194 <parse_qgroupid@@Base+0xe8>)
   300fc:	ldr	r3, [pc, #144]	; (30190 <parse_qgroupid@@Base+0xe4>)
   300fe:	add	r2, pc
   30100:	ldr	r3, [r2, r3]
   30102:	ldr	r2, [r3, #0]
   30104:	ldr	r3, [sp, #20]
   30106:	eors	r2, r3
   30108:	beq.n	30184 <parse_qgroupid@@Base+0xd8>
   3010a:	blx	8510 <__stack_chk_fail@plt>
   3010e:	blx	8804 <strtoull@plt>
   30112:	mov	r7, r0
   30114:	ldr	r0, [sp, #4]
   30116:	cmp	r0, r6
   30118:	bne.n	30134 <parse_qgroupid@@Base+0x88>
   3011a:	adds	r0, #1
   3011c:	movs	r2, #10
   3011e:	mov	r1, r8
   30120:	blx	8804 <strtoull@plt>
   30124:	ldr	r3, [sp, #4]
   30126:	cmp	r3, r5
   30128:	strd	r0, r1, [sp, #8]
   3012c:	bne.n	30134 <parse_qgroupid@@Base+0x88>
   3012e:	orr.w	r1, r1, r7, lsl #16
   30132:	b.n	300fa <parse_qgroupid@@Base+0x4e>
   30134:	mov	r0, r4
   30136:	bl	31af0 <btrfs_util_is_subvolume@@Base>
   3013a:	mov	r1, r0
   3013c:	cbnz	r0, 30172 <parse_qgroupid@@Base+0xc6>
   3013e:	mov	r0, r4
   30140:	blx	864c <open64@plt>
   30144:	subs	r6, r0, #0
   30146:	blt.n	30172 <parse_qgroupid@@Base+0xc6>
   30148:	add	r1, sp, #8
   3014a:	bl	16ed8 <lookup_path_rootid@@Base>
   3014e:	mov	r5, r0
   30150:	cbz	r0, 30162 <parse_qgroupid@@Base+0xb6>
   30152:	blx	8784 <__errno_location@plt>
   30156:	negs	r3, r5
   30158:	str	r3, [r0, #0]
   3015a:	ldr	r0, [pc, #60]	; (30198 <parse_qgroupid@@Base+0xec>)
   3015c:	add	r0, pc
   3015e:	bl	16b70 <__btrfs_error@@Base>
   30162:	mov	r0, r6
   30164:	blx	8998 <close@plt>
   30168:	cmp	r5, #0
   3016a:	blt.n	30172 <parse_qgroupid@@Base+0xc6>
   3016c:	ldrd	r0, r1, [sp, #8]
   30170:	b.n	300fa <parse_qgroupid@@Base+0x4e>
   30172:	ldr	r0, [pc, #40]	; (3019c <parse_qgroupid@@Base+0xf0>)
   30174:	mov	r1, r4
   30176:	add	r0, pc
   30178:	bl	16b70 <__btrfs_error@@Base>
   3017c:	mov.w	r0, #4294967295	; 0xffffffff
   30180:	blx	873c <exit@plt>
   30184:	add	sp, #24
   30186:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   3018a:	nop
   3018c:	subs	r4, #210	; 0xd2
   3018e:	movs	r3, r0
   30190:	lsls	r0, r4, #8
   30192:	movs	r0, r0
   30194:	subs	r4, #134	; 0x86
   30196:	movs	r3, r0
   30198:	cmp	r0, #239	; 0xef
   3019a:	movs	r2, r0
   3019c:	cmp	r0, #242	; 0xf2
   3019e:	movs	r2, r0

000301a0 <parse_csum_type@@Base>:
   301a0:	ldr	r1, [pc, #100]	; (30208 <parse_csum_type@@Base+0x68>)
   301a2:	push	{r4, lr}
   301a4:	add	r1, pc
   301a6:	mov	r4, r0
   301a8:	blx	8550 <strcasecmp@plt>
   301ac:	cbz	r0, 301fc <parse_csum_type@@Base+0x5c>
   301ae:	ldr	r1, [pc, #92]	; (3020c <parse_csum_type@@Base+0x6c>)
   301b0:	mov	r0, r4
   301b2:	add	r1, pc
   301b4:	blx	8550 <strcasecmp@plt>
   301b8:	cbz	r0, 301fa <parse_csum_type@@Base+0x5a>
   301ba:	ldr	r1, [pc, #84]	; (30210 <parse_csum_type@@Base+0x70>)
   301bc:	mov	r0, r4
   301be:	add	r1, pc
   301c0:	blx	8550 <strcasecmp@plt>
   301c4:	cbz	r0, 301fa <parse_csum_type@@Base+0x5a>
   301c6:	ldr	r1, [pc, #76]	; (30214 <parse_csum_type@@Base+0x74>)
   301c8:	mov	r0, r4
   301ca:	add	r1, pc
   301cc:	blx	8550 <strcasecmp@plt>
   301d0:	cbz	r0, 301fe <parse_csum_type@@Base+0x5e>
   301d2:	ldr	r1, [pc, #68]	; (30218 <parse_csum_type@@Base+0x78>)
   301d4:	mov	r0, r4
   301d6:	add	r1, pc
   301d8:	blx	8550 <strcasecmp@plt>
   301dc:	cbz	r0, 30202 <parse_csum_type@@Base+0x62>
   301de:	ldr	r1, [pc, #60]	; (3021c <parse_csum_type@@Base+0x7c>)
   301e0:	mov	r0, r4
   301e2:	add	r1, pc
   301e4:	blx	8550 <strcasecmp@plt>
   301e8:	cbz	r0, 30202 <parse_csum_type@@Base+0x62>
   301ea:	ldr	r0, [pc, #52]	; (30220 <parse_csum_type@@Base+0x80>)
   301ec:	mov	r1, r4
   301ee:	add	r0, pc
   301f0:	bl	16b70 <__btrfs_error@@Base>
   301f4:	movs	r0, #1
   301f6:	blx	873c <exit@plt>
   301fa:	movs	r0, #1
   301fc:	pop	{r4, pc}
   301fe:	movs	r0, #2
   30200:	b.n	301fc <parse_csum_type@@Base+0x5c>
   30202:	movs	r0, #3
   30204:	b.n	301fc <parse_csum_type@@Base+0x5c>
   30206:	nop
   30208:	cmp	r0, #235	; 0xeb
   3020a:	movs	r2, r0
   3020c:	cmp	r0, #228	; 0xe4
   3020e:	movs	r2, r0
   30210:	cmp	r0, #225	; 0xe1
   30212:	movs	r2, r0
   30214:	cmp	r0, #220	; 0xdc
   30216:	movs	r2, r0
   30218:	cmp	r0, #215	; 0xd7
   3021a:	movs	r2, r0
   3021c:	cmp	r0, #211	; 0xd3
   3021e:	movs	r2, r0
   30220:	cmp	r0, #206	; 0xce
   30222:	movs	r2, r0

00030224 <open_file_or_dir3@@Base>:
   30224:	push	{r4, r5, r6, lr}
   30226:	mov	r6, r2
   30228:	ldr	r2, [pc, #136]	; (302b4 <open_file_or_dir3@@Base+0x90>)
   3022a:	sub	sp, #112	; 0x70
   3022c:	ldr	r3, [pc, #136]	; (302b8 <open_file_or_dir3@@Base+0x94>)
   3022e:	mov	r4, r1
   30230:	add	r2, pc
   30232:	mov	r1, sp
   30234:	mov	r5, r0
   30236:	ldr	r3, [r2, r3]
   30238:	ldr	r3, [r3, #0]
   3023a:	str	r3, [sp, #108]	; 0x6c
   3023c:	mov.w	r3, #0
   30240:	bl	38db0 <__libc_csu_fini@@Base+0x1c>
   30244:	cmp	r0, #0
   30246:	bge.n	30260 <open_file_or_dir3@@Base+0x3c>
   30248:	mov.w	r0, #4294967295	; 0xffffffff
   3024c:	ldr	r2, [pc, #108]	; (302bc <open_file_or_dir3@@Base+0x98>)
   3024e:	ldr	r3, [pc, #104]	; (302b8 <open_file_or_dir3@@Base+0x94>)
   30250:	add	r2, pc
   30252:	ldr	r3, [r2, r3]
   30254:	ldr	r2, [r3, #0]
   30256:	ldr	r3, [sp, #108]	; 0x6c
   30258:	eors	r2, r3
   3025a:	beq.n	302ae <open_file_or_dir3@@Base+0x8a>
   3025c:	blx	8510 <__stack_chk_fail@plt>
   30260:	ldr	r3, [sp, #16]
   30262:	and.w	r2, r3, #61440	; 0xf000
   30266:	cmp.w	r2, #16384	; 0x4000
   3026a:	bne.n	30290 <open_file_or_dir3@@Base+0x6c>
   3026c:	mov	r0, r5
   3026e:	blx	8640 <opendir@plt>
   30272:	str	r0, [r4, #0]
   30274:	cmp	r0, #0
   30276:	beq.n	30248 <open_file_or_dir3@@Base+0x24>
   30278:	blx	88e8 <dirfd@plt>
   3027c:	cmp	r0, #0
   3027e:	bge.n	3024c <open_file_or_dir3@@Base+0x28>
   30280:	ldr	r0, [r4, #0]
   30282:	cmp	r0, #0
   30284:	beq.n	30248 <open_file_or_dir3@@Base+0x24>
   30286:	blx	89b0 <closedir@plt>
   3028a:	movs	r3, #0
   3028c:	str	r3, [r4, #0]
   3028e:	b.n	30248 <open_file_or_dir3@@Base+0x24>
   30290:	and.w	r3, r3, #53248	; 0xd000
   30294:	cmp.w	r3, #32768	; 0x8000
   30298:	bne.n	302a4 <open_file_or_dir3@@Base+0x80>
   3029a:	mov	r1, r6
   3029c:	mov	r0, r5
   3029e:	blx	8778 <__open64_2@plt>
   302a2:	b.n	3027c <open_file_or_dir3@@Base+0x58>
   302a4:	blx	8784 <__errno_location@plt>
   302a8:	movs	r3, #22
   302aa:	str	r3, [r0, #0]
   302ac:	b.n	30248 <open_file_or_dir3@@Base+0x24>
   302ae:	add	sp, #112	; 0x70
   302b0:	pop	{r4, r5, r6, pc}
   302b2:	nop
   302b4:	subs	r3, #84	; 0x54
   302b6:	movs	r3, r0
   302b8:	lsls	r0, r4, #8
   302ba:	movs	r0, r0
   302bc:	subs	r3, #52	; 0x34
   302be:	movs	r3, r0

000302c0 <open_file_or_dir@@Base>:
   302c0:	movs	r2, #2
   302c2:	b.w	30224 <open_file_or_dir3@@Base>

000302c6 <btrfs_open@@Base>:
   302c6:	push	{r4, r5, r6, r7, lr}
   302c8:	mov	r6, r2
   302ca:	ldr	r2, [pc, #172]	; (30378 <btrfs_open@@Base+0xb2>)
   302cc:	mov	r7, r3
   302ce:	ldr	r3, [pc, #172]	; (3037c <btrfs_open@@Base+0xb6>)
   302d0:	sub	sp, #204	; 0xcc
   302d2:	add	r2, pc
   302d4:	mov	r5, r1
   302d6:	add	r1, sp, #104	; 0x68
   302d8:	mov	r4, r0
   302da:	ldr	r3, [r2, r3]
   302dc:	ldr	r3, [r3, #0]
   302de:	str	r3, [sp, #196]	; 0xc4
   302e0:	mov.w	r3, #0
   302e4:	blx	88c0 <statfs64@plt>
   302e8:	cbz	r0, 3030e <btrfs_open@@Base+0x48>
   302ea:	ldr	r1, [pc, #148]	; (30380 <btrfs_open@@Base+0xba>)
   302ec:	mov	r2, r4
   302ee:	mov	r0, r6
   302f0:	mov.w	r5, #4294967295	; 0xffffffff
   302f4:	add	r1, pc
   302f6:	bl	16c68 <__btrfs_error_on@@Base>
   302fa:	ldr	r2, [pc, #136]	; (30384 <btrfs_open@@Base+0xbe>)
   302fc:	ldr	r3, [pc, #124]	; (3037c <btrfs_open@@Base+0xb6>)
   302fe:	add	r2, pc
   30300:	ldr	r3, [r2, r3]
   30302:	ldr	r2, [r3, #0]
   30304:	ldr	r3, [sp, #196]	; 0xc4
   30306:	eors	r2, r3
   30308:	beq.n	3036e <btrfs_open@@Base+0xa8>
   3030a:	blx	8510 <__stack_chk_fail@plt>
   3030e:	ldr	r3, [pc, #100]	; (30374 <btrfs_open@@Base+0xae>)
   30310:	ldr	r2, [sp, #104]	; 0x68
   30312:	cmp	r2, r3
   30314:	beq.n	30328 <btrfs_open@@Base+0x62>
   30316:	ldr	r1, [pc, #112]	; (30388 <btrfs_open@@Base+0xc2>)
   30318:	mov	r2, r4
   3031a:	mov	r0, r6
   3031c:	mvn.w	r5, #1
   30320:	add	r1, pc
   30322:	bl	16c68 <__btrfs_error_on@@Base>
   30326:	b.n	302fa <btrfs_open@@Base+0x34>
   30328:	mov	r1, sp
   3032a:	mov	r0, r4
   3032c:	bl	38db0 <__libc_csu_fini@@Base+0x1c>
   30330:	cmp	r0, #0
   30332:	bne.n	302ea <btrfs_open@@Base+0x24>
   30334:	cbz	r7, 30354 <btrfs_open@@Base+0x8e>
   30336:	ldr	r3, [sp, #16]
   30338:	and.w	r3, r3, #61440	; 0xf000
   3033c:	cmp.w	r3, #16384	; 0x4000
   30340:	beq.n	30354 <btrfs_open@@Base+0x8e>
   30342:	ldr	r1, [pc, #72]	; (3038c <btrfs_open@@Base+0xc6>)
   30344:	mov	r2, r4
   30346:	mov	r0, r6
   30348:	mvn.w	r5, #2
   3034c:	add	r1, pc
   3034e:	bl	16c68 <__btrfs_error_on@@Base>
   30352:	b.n	302fa <btrfs_open@@Base+0x34>
   30354:	mov	r1, r5
   30356:	mov	r0, r4
   30358:	bl	302c0 <open_file_or_dir@@Base>
   3035c:	subs	r5, r0, #0
   3035e:	bge.n	302fa <btrfs_open@@Base+0x34>
   30360:	ldr	r1, [pc, #44]	; (30390 <btrfs_open@@Base+0xca>)
   30362:	mov	r2, r4
   30364:	mov	r0, r6
   30366:	add	r1, pc
   30368:	bl	16c68 <__btrfs_error_on@@Base>
   3036c:	b.n	302fa <btrfs_open@@Base+0x34>
   3036e:	mov	r0, r5
   30370:	add	sp, #204	; 0xcc
   30372:	pop	{r4, r5, r6, r7, pc}
   30374:	ldr	r6, [r7, #0]
   30376:	str	r1, [sp, #140]	; 0x8c
   30378:	subs	r2, #178	; 0xb2
   3037a:	movs	r3, r0
   3037c:	lsls	r0, r4, #8
   3037e:	movs	r0, r0
   30380:	movs	r7, #221	; 0xdd
   30382:	movs	r2, r0
   30384:	subs	r2, #134	; 0x86
   30386:	movs	r3, r0
   30388:	movs	r7, #200	; 0xc8
   3038a:	movs	r2, r0
   3038c:	movs	r7, #183	; 0xb7
   3038e:	movs	r2, r0
   30390:	movs	r7, #107	; 0x6b
   30392:	movs	r2, r0

00030394 <btrfs_open_dir@@Base>:
   30394:	movs	r3, #1
   30396:	b.w	302c6 <btrfs_open@@Base>

0003039a <btrfs_open_file_or_dir@@Base>:
   3039a:	movs	r3, #0
   3039c:	b.w	302c6 <btrfs_open@@Base>

000303a0 <open_path_or_dev_mnt@@Base>:
   303a0:	push	{r4, r5, r6, r7, lr}
   303a2:	mov	r4, r1
   303a4:	ldr	r1, [pc, #156]	; (30444 <open_path_or_dev_mnt@@Base+0xa4>)
   303a6:	mov	r6, r2
   303a8:	ldr	r2, [pc, #156]	; (30448 <open_path_or_dev_mnt@@Base+0xa8>)
   303aa:	sub.w	sp, sp, #4096	; 0x1000
   303ae:	add	r1, pc
   303b0:	sub	sp, #12
   303b2:	add.w	r3, sp, #4096	; 0x1000
   303b6:	mov	r5, r0
   303b8:	ldr	r2, [r1, r2]
   303ba:	adds	r3, #4
   303bc:	ldr	r2, [r2, #0]
   303be:	str	r2, [r3, #0]
   303c0:	mov.w	r2, #0
   303c4:	bl	2f044 <path_is_block_device@@Base>
   303c8:	cbz	r0, 3042a <open_path_or_dev_mnt@@Base+0x8a>
   303ca:	add	r7, sp, #4
   303cc:	mov.w	r2, #4096	; 0x1000
   303d0:	mov	r0, r5
   303d2:	mov	r1, r7
   303d4:	bl	2f8b8 <get_btrfs_mount@@Base>
   303d8:	cmp	r0, #0
   303da:	bge.n	3040e <open_path_or_dev_mnt@@Base+0x6e>
   303dc:	ldr	r1, [pc, #108]	; (3044c <open_path_or_dev_mnt@@Base+0xac>)
   303de:	mov	r2, r5
   303e0:	mov	r0, r6
   303e2:	mov.w	r4, #4294967295	; 0xffffffff
   303e6:	add	r1, pc
   303e8:	bl	16c68 <__btrfs_error_on@@Base>
   303ec:	blx	8784 <__errno_location@plt>
   303f0:	movs	r3, #22
   303f2:	str	r3, [r0, #0]
   303f4:	ldr	r1, [pc, #88]	; (30450 <open_path_or_dev_mnt@@Base+0xb0>)
   303f6:	add.w	r3, sp, #4096	; 0x1000
   303fa:	ldr	r2, [pc, #76]	; (30448 <open_path_or_dev_mnt@@Base+0xa8>)
   303fc:	adds	r3, #4
   303fe:	add	r1, pc
   30400:	ldr	r2, [r1, r2]
   30402:	ldr	r1, [r2, #0]
   30404:	ldr	r2, [r3, #0]
   30406:	eors	r1, r2
   30408:	beq.n	30438 <open_path_or_dev_mnt@@Base+0x98>
   3040a:	blx	8510 <__stack_chk_fail@plt>
   3040e:	mov	r1, r4
   30410:	mov	r0, r7
   30412:	bl	302c0 <open_file_or_dir@@Base>
   30416:	mov	r4, r0
   30418:	cbz	r6, 3041c <open_path_or_dev_mnt@@Base+0x7c>
   3041a:	lsrs	r6, r0, #31
   3041c:	ldr	r1, [pc, #52]	; (30454 <open_path_or_dev_mnt@@Base+0xb4>)
   3041e:	mov	r2, r5
   30420:	mov	r0, r6
   30422:	add	r1, pc
   30424:	bl	16c68 <__btrfs_error_on@@Base>
   30428:	b.n	303f4 <open_path_or_dev_mnt@@Base+0x54>
   3042a:	mov	r1, r4
   3042c:	movs	r2, #1
   3042e:	mov	r0, r5
   30430:	bl	30394 <btrfs_open_dir@@Base>
   30434:	mov	r4, r0
   30436:	b.n	303f4 <open_path_or_dev_mnt@@Base+0x54>
   30438:	mov	r0, r4
   3043a:	add.w	sp, sp, #4096	; 0x1000
   3043e:	add	sp, #12
   30440:	pop	{r4, r5, r6, r7, pc}
   30442:	nop
   30444:	subs	r1, #214	; 0xd6
   30446:	movs	r3, r0
   30448:	lsls	r0, r4, #8
   3044a:	movs	r0, r0
   3044c:	movs	r7, #49	; 0x31
   3044e:	movs	r2, r0
   30450:	subs	r1, #134	; 0x86
   30452:	movs	r3, r0
   30454:	movs	r7, #24
   30456:	movs	r2, r0

00030458 <close_file_or_dir@@Base>:
   30458:	push	{r3, r4, r5, r6, r7, lr}
   3045a:	mov	r5, r0
   3045c:	mov	r6, r1
   3045e:	blx	8784 <__errno_location@plt>
   30462:	ldr	r7, [r0, #0]
   30464:	mov	r4, r0
   30466:	cbz	r6, 30472 <close_file_or_dir@@Base+0x1a>
   30468:	mov	r0, r6
   3046a:	blx	89b0 <closedir@plt>
   3046e:	str	r7, [r4, #0]
   30470:	pop	{r3, r4, r5, r6, r7, pc}
   30472:	cmp	r5, #0
   30474:	blt.n	3046e <close_file_or_dir@@Base+0x16>
   30476:	mov	r0, r5
   30478:	blx	8998 <close@plt>
   3047c:	b.n	3046e <close_file_or_dir@@Base+0x16>

0003047e <get_device_info@@Base>:
   3047e:	push	{r4, lr}
   30480:	mov	r4, r0
   30482:	ldr	r0, [sp, #8]
   30484:	movs	r1, #0
   30486:	strd	r2, r3, [r0], #8
   3048a:	movs	r2, #16
   3048c:	blx	87c4 <memset@plt+0x4>
   30490:	ldr	r2, [sp, #8]
   30492:	ldr	r1, [pc, #24]	; (304ac <get_device_info@@Base+0x2e>)
   30494:	mov	r0, r4
   30496:	blx	85bc <ioctl@plt>
   3049a:	cmp	r0, #0
   3049c:	bge.n	304a8 <get_device_info@@Base+0x2a>
   3049e:	blx	8784 <__errno_location@plt>
   304a2:	ldr	r0, [r0, #0]
   304a4:	negs	r0, r0
   304a6:	pop	{r4, pc}
   304a8:	movs	r0, #0
   304aa:	b.n	304a6 <get_device_info@@Base+0x28>
   304ac:	str	r4, [sp, #120]	; 0x78
   304ae:	beq.n	304b2 <get_df@@Base+0x2>

000304b0 <get_df@@Base>:
   304b0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   304b4:	mov	r5, r0
   304b6:	movs	r0, #16
   304b8:	mov	sl, r1
   304ba:	blx	8678 <malloc@plt+0x4>
   304be:	mov	r4, r0
   304c0:	cbnz	r0, 304ca <get_df@@Base+0x1a>
   304c2:	mvn.w	r0, #11
   304c6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   304ca:	mov.w	r8, #0
   304ce:	mov.w	r9, #0
   304d2:	mov	r2, r0
   304d4:	strd	r8, r9, [r0]
   304d8:	strd	r8, r9, [r0, #8]
   304dc:	mov	r0, r5
   304de:	ldr	r1, [pc, #120]	; (30558 <get_df@@Base+0xa8>)
   304e0:	blx	85bc <ioctl@plt>
   304e4:	cmp	r0, #0
   304e6:	bge.n	30500 <get_df@@Base+0x50>
   304e8:	ldr	r0, [pc, #112]	; (3055c <get_df@@Base+0xac>)
   304ea:	add	r0, pc
   304ec:	bl	16b70 <__btrfs_error@@Base>
   304f0:	mov	r0, r4
   304f2:	blx	8434 <free@plt+0x4>
   304f6:	blx	8784 <__errno_location@plt>
   304fa:	ldr	r0, [r0, #0]
   304fc:	negs	r0, r0
   304fe:	b.n	304c6 <get_df@@Base+0x16>
   30500:	ldrd	r6, r7, [r4, #8]
   30504:	mov	r0, r4
   30506:	orrs.w	r3, r6, r7
   3050a:	bne.n	30516 <get_df@@Base+0x66>
   3050c:	blx	8434 <free@plt+0x4>
   30510:	mvn.w	r0, #1
   30514:	b.n	304c6 <get_df@@Base+0x16>
   30516:	blx	8434 <free@plt+0x4>
   3051a:	movs	r0, #24
   3051c:	muls	r0, r6
   3051e:	adds	r0, #16
   30520:	blx	8678 <malloc@plt+0x4>
   30524:	mov	r4, r0
   30526:	cmp	r0, #0
   30528:	beq.n	304c2 <get_df@@Base+0x12>
   3052a:	mov	r2, r0
   3052c:	strd	r6, r7, [r0]
   30530:	strd	r8, r9, [r0, #8]
   30534:	mov	r0, r5
   30536:	ldr	r1, [pc, #32]	; (30558 <get_df@@Base+0xa8>)
   30538:	blx	85bc <ioctl@plt>
   3053c:	cmp	r0, #0
   3053e:	bge.n	3054e <get_df@@Base+0x9e>
   30540:	ldr	r0, [pc, #28]	; (30560 <get_df@@Base+0xb0>)
   30542:	mov	r2, r6
   30544:	mov	r3, r7
   30546:	add	r0, pc
   30548:	bl	16b70 <__btrfs_error@@Base>
   3054c:	b.n	304f0 <get_df@@Base+0x40>
   3054e:	movs	r0, #0
   30550:	str.w	r4, [sl]
   30554:	b.n	304c6 <get_df@@Base+0x16>
   30556:	nop
   30558:	str	r4, [sp, #80]	; 0x50
   3055a:	stmia	r0!, {r4}
   3055c:	movs	r6, #102	; 0x66
   3055e:	movs	r2, r0
   30560:	movs	r6, #36	; 0x24
   30562:	movs	r2, r0

00030564 <get_fs_info@@Base>:
   30564:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30568:	sub.w	sp, sp, #12288	; 0x3000
   3056c:	sub	sp, #44	; 0x2c
   3056e:	mov	r5, r1
   30570:	ldr	r1, [pc, #736]	; (30854 <get_fs_info@@Base+0x2f0>)
   30572:	add.w	r3, sp, #12288	; 0x3000
   30576:	str	r2, [sp, #20]
   30578:	adds	r3, #36	; 0x24
   3057a:	ldr	r2, [pc, #732]	; (30858 <get_fs_info@@Base+0x2f4>)
   3057c:	add	r1, pc
   3057e:	add	r7, sp, #40	; 0x28
   30580:	mov.w	r9, #0
   30584:	mov	r8, r0
   30586:	mov	r0, r5
   30588:	ldr	r2, [r1, r2]
   3058a:	mov	r1, r9
   3058c:	ldr	r2, [r2, #0]
   3058e:	str	r2, [r3, #0]
   30590:	mov.w	r2, #0
   30594:	mov.w	r2, #1024	; 0x400
   30598:	sub.w	r3, r7, #16
   3059c:	strd	r9, r9, [r7, #-16]
   305a0:	str	r3, [sp, #12]
   305a2:	blx	87c4 <memset@plt+0x4>
   305a6:	mov	r0, r8
   305a8:	bl	2f044 <path_is_block_device@@Base>
   305ac:	cmp	r0, #1
   305ae:	bne.n	3068c <get_fs_info@@Base+0x128>
   305b0:	mov	r1, r9
   305b2:	mov	r0, r8
   305b4:	blx	864c <open64@plt>
   305b8:	subs	r6, r0, #0
   305ba:	bge.n	305f4 <get_fs_info@@Base+0x90>
   305bc:	blx	8784 <__errno_location@plt>
   305c0:	mov	r1, r8
   305c2:	ldr	r4, [r0, #0]
   305c4:	ldr	r0, [pc, #660]	; (3085c <get_fs_info@@Base+0x2f8>)
   305c6:	negs	r4, r4
   305c8:	add	r0, pc
   305ca:	bl	16b70 <__btrfs_error@@Base>
   305ce:	ldr.w	r1, [r7, #-12]
   305d2:	mov	r0, r6
   305d4:	bl	30458 <close_file_or_dir@@Base>
   305d8:	ldr	r1, [pc, #644]	; (30860 <get_fs_info@@Base+0x2fc>)
   305da:	ldr	r2, [pc, #636]	; (30858 <get_fs_info@@Base+0x2f4>)
   305dc:	add.w	r3, sp, #12288	; 0x3000
   305e0:	add	r1, pc
   305e2:	adds	r3, #36	; 0x24
   305e4:	ldr	r2, [r1, r2]
   305e6:	ldr	r1, [r2, #0]
   305e8:	ldr	r2, [r3, #0]
   305ea:	eors	r1, r2
   305ec:	beq.w	3083e <get_fs_info@@Base+0x2da>
   305f0:	blx	8510 <__stack_chk_fail@plt>
   305f4:	add.w	r3, sp, #4128	; 0x1020
   305f8:	mov	r1, r8
   305fa:	adds	r3, #4
   305fc:	str	r3, [sp, #16]
   305fe:	ldr	r3, [sp, #12]
   30600:	ldr	r2, [sp, #16]
   30602:	str.w	r9, [sp, #4]
   30606:	str	r3, [sp, #0]
   30608:	mov.w	r3, #4096	; 0x1000
   3060c:	bl	2f76c <check_mounted_where@@Base>
   30610:	subs	r4, r0, #0
   30612:	beq.n	30680 <get_fs_info@@Base+0x11c>
   30614:	blt.n	305ce <get_fs_info@@Base+0x6a>
   30616:	add.w	r8, sp, #8192	; 0x2000
   3061a:	movs	r2, #1
   3061c:	add.w	r8, r8, #36	; 0x24
   30620:	movs	r3, #0
   30622:	mov	r0, r6
   30624:	strd	r2, r3, [r5, #8]
   30628:	mov	r1, r8
   3062a:	mov.w	r2, #65536	; 0x10000
   3062e:	movs	r3, #0
   30630:	str.w	r9, [sp]
   30634:	bl	1c3c0 <btrfs_read_dev_super@@Base>
   30638:	subs	r4, r0, #0
   3063a:	blt.n	30686 <get_fs_info@@Base+0x122>
   3063c:	ldr	r2, [sp, #12]
   3063e:	mov	r3, r5
   30640:	ldr.w	sl, [r8, #201]	; 0xc9
   30644:	ldr.w	fp, [r8, #205]	; 0xcd
   30648:	ldr	r2, [r2, #0]
   3064a:	add.w	r1, r2, #16
   3064e:	strd	sl, fp, [r3], #16
   30652:	ldr.w	r0, [r2], #4
   30656:	cmp	r2, r1
   30658:	str.w	r0, [r3], #4
   3065c:	bne.n	30652 <get_fs_info@@Base+0xee>
   3065e:	mov	r0, r6
   30660:	blx	8998 <close@plt>
   30664:	ldr.w	r8, [sp, #16]
   30668:	sub.w	r1, r7, #12
   3066c:	mov	r0, r8
   3066e:	bl	302c0 <open_file_or_dir@@Base>
   30672:	subs	r6, r0, #0
   30674:	bge.n	30698 <get_fs_info@@Base+0x134>
   30676:	blx	8784 <__errno_location@plt>
   3067a:	ldr	r4, [r0, #0]
   3067c:	negs	r4, r4
   3067e:	b.n	305ce <get_fs_info@@Base+0x6a>
   30680:	mvn.w	r4, #21
   30684:	b.n	305ce <get_fs_info@@Base+0x6a>
   30686:	mvn.w	r4, #4
   3068a:	b.n	305ce <get_fs_info@@Base+0x6a>
   3068c:	mov.w	sl, #0
   30690:	mov.w	fp, #0
   30694:	mov	r4, r9
   30696:	b.n	30668 <get_fs_info@@Base+0x104>
   30698:	ldrd	r2, r3, [r5, #8]
   3069c:	cmp	r3, #0
   3069e:	it	eq
   306a0:	cmpeq	r2, #1
   306a2:	beq.w	30808 <get_fs_info@@Base+0x2a4>
   306a6:	ldr	r1, [pc, #420]	; (3084c <get_fs_info@@Base+0x2e8>)
   306a8:	mov	r2, r5
   306aa:	blx	85bc <ioctl@plt>
   306ae:	cmp	r0, #0
   306b0:	blt.n	30676 <get_fs_info@@Base+0x112>
   306b2:	mov	r8, r7
   306b4:	movs	r2, #3
   306b6:	movs	r3, #0
   306b8:	strd	r2, r3, [r7, #-8]
   306bc:	movs	r2, #1
   306be:	movs	r3, #0
   306c0:	movs	r4, #216	; 0xd8
   306c2:	strd	r2, r3, [r8], #-8
   306c6:	mov	r9, r3
   306c8:	strd	r4, r4, [r8, #56]	; 0x38
   306cc:	movs	r4, #30
   306ce:	str.w	r4, [r8, #64]	; 0x40
   306d2:	mov	r4, r2
   306d4:	movs	r0, #0
   306d6:	movs	r1, #0
   306d8:	strd	r2, r3, [r8, #16]
   306dc:	strd	r0, r1, [r5, #8]
   306e0:	strd	r0, r1, [r8, #40]	; 0x28
   306e4:	mov.w	r0, #4294967295	; 0xffffffff
   306e8:	mov.w	r1, #4294967295	; 0xffffffff
   306ec:	strd	r0, r1, [r8, #48]	; 0x30
   306f0:	strd	r0, r1, [r8, #32]
   306f4:	ldr	r1, [pc, #344]	; (30850 <get_fs_info@@Base+0x2ec>)
   306f6:	mov	r2, r8
   306f8:	mov	r0, r6
   306fa:	strd	r4, r9, [r8, #24]
   306fe:	blx	85bc <ioctl@plt>
   30702:	cmp	r0, #0
   30704:	bge.n	307b6 <get_fs_info@@Base+0x252>
   30706:	blx	8784 <__errno_location@plt>
   3070a:	ldr	r3, [r0, #0]
   3070c:	negs	r4, r3
   3070e:	cmp	r3, #0
   30710:	bne.w	305ce <get_fs_info@@Base+0x6a>
   30714:	movs	r2, #0
   30716:	movs	r3, #0
   30718:	mov	r0, r6
   3071a:	str.w	r8, [sp]
   3071e:	bl	3047e <get_device_info@@Base>
   30722:	mov	r4, r0
   30724:	cmp	r0, #0
   30726:	bne.n	30808 <get_fs_info@@Base+0x2a4>
   30728:	ldrd	r3, r2, [r5, #8]
   3072c:	mov.w	r8, #1
   30730:	adds	r3, #1
   30732:	adc.w	r2, r2, #0
   30736:	strd	r3, r2, [r5, #8]
   3073a:	orrs.w	r3, sl, fp
   3073e:	itt	eq
   30740:	moveq.w	sl, #1
   30744:	moveq.w	fp, #0
   30748:	ldrd	r0, r1, [r5, #8]
   3074c:	orrs.w	r3, r0, r1
   30750:	beq.w	305ce <get_fs_info@@Base+0x6a>
   30754:	lsls	r0, r0, #12
   30756:	blx	8678 <malloc@plt+0x4>
   3075a:	ldr	r3, [sp, #20]
   3075c:	mov	r9, r0
   3075e:	str	r0, [r3, #0]
   30760:	cmp	r0, #0
   30762:	beq.n	30676 <get_fs_info@@Base+0x112>
   30764:	cmp.w	r8, #0
   30768:	beq.n	30776 <get_fs_info@@Base+0x212>
   3076a:	sub.w	r1, r7, #8
   3076e:	mov.w	r2, #4096	; 0x1000
   30772:	blx	8480 <memcpy@plt+0x4>
   30776:	ldrd	r2, r3, [r5]
   3077a:	ldrd	r0, r1, [r5, #8]
   3077e:	cmp	r3, fp
   30780:	it	eq
   30782:	cmpeq	r2, sl
   30784:	bcc.n	30792 <get_fs_info@@Base+0x22e>
   30786:	mov	r2, r8
   30788:	asrs	r3, r2, #31
   3078a:	cmp	r3, r1
   3078c:	it	eq
   3078e:	cmpeq	r8, r0
   30790:	bcc.n	3080e <get_fs_info@@Base+0x2aa>
   30792:	cmp	r1, #0
   30794:	it	eq
   30796:	cmpeq	r0, #1
   30798:	beq.w	305ce <get_fs_info@@Base+0x6a>
   3079c:	cmp.w	r8, #0
   307a0:	bne.n	3083a <get_fs_info@@Base+0x2d6>
   307a2:	ldr	r1, [pc, #192]	; (30864 <get_fs_info@@Base+0x300>)
   307a4:	movs	r3, #1
   307a6:	ldr	r0, [pc, #192]	; (30868 <get_fs_info@@Base+0x304>)
   307a8:	movw	r2, #1091	; 0x443
   307ac:	add	r1, pc
   307ae:	adds	r1, #41	; 0x29
   307b0:	add	r0, pc
   307b2:	bl	2f61c <test_issubvolname@@Base+0x17e>
   307b6:	ldrd	r2, r3, [r5, #8]
   307ba:	ldr.w	r1, [r8, #64]	; 0x40
   307be:	adds	r2, r2, r1
   307c0:	adc.w	r3, r3, #0
   307c4:	cmp	r1, #30
   307c6:	strd	r2, r3, [r5, #8]
   307ca:	bne.n	307dc <get_fs_info@@Base+0x278>
   307cc:	ldr.w	r4, [r8, #3906]	; 0xf42
   307d0:	ldr.w	r9, [r8, #3910]	; 0xf46
   307d4:	adds	r4, #1
   307d6:	adc.w	r9, r9, #0
   307da:	b.n	306f4 <get_fs_info@@Base+0x190>
   307dc:	cbnz	r1, 307ec <get_fs_info@@Base+0x288>
   307de:	adds.w	r4, r4, #4294967295	; 0xffffffff
   307e2:	str	r4, [r5, #0]
   307e4:	adc.w	r3, r9, #4294967295	; 0xffffffff
   307e8:	str	r3, [r5, #4]
   307ea:	b.n	30714 <get_fs_info@@Base+0x1b0>
   307ec:	add.w	r2, sp, #12288	; 0x3000
   307f0:	subs	r1, #1
   307f2:	adds	r2, #40	; 0x28
   307f4:	movs	r3, #130	; 0x82
   307f6:	mla	r1, r3, r1, r2
   307fa:	sub.w	r1, r1, #12160	; 0x2f80
   307fe:	ldr.w	r2, [r1], #-32
   30802:	ldr	r3, [r1, #36]	; 0x24
   30804:	str	r2, [r5, #0]
   30806:	b.n	307e8 <get_fs_info@@Base+0x284>
   30808:	mov.w	r8, #0
   3080c:	b.n	30748 <get_fs_info@@Base+0x1e4>
   3080e:	add.w	r3, r9, r8, lsl #12
   30812:	mov	r2, sl
   30814:	str	r3, [sp, #0]
   30816:	mov	r0, r6
   30818:	mov	r3, fp
   3081a:	bl	3047e <get_device_info@@Base>
   3081e:	cmn.w	r0, #19
   30822:	mov	r4, r0
   30824:	beq.n	30830 <get_fs_info@@Base+0x2cc>
   30826:	cmp	r0, #0
   30828:	bne.w	305ce <get_fs_info@@Base+0x6a>
   3082c:	add.w	r8, r8, #1
   30830:	adds.w	sl, sl, #1
   30834:	adc.w	fp, fp, #0
   30838:	b.n	30776 <get_fs_info@@Base+0x212>
   3083a:	movs	r4, #0
   3083c:	b.n	305ce <get_fs_info@@Base+0x6a>
   3083e:	mov	r0, r4
   30840:	add.w	sp, sp, #12288	; 0x3000
   30844:	add	sp, #44	; 0x2c
   30846:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3084a:	nop
   3084c:	str	r4, [sp, #124]	; 0x7c
   3084e:	strh	r0, [r0, #32]
   30850:	str	r4, [sp, #68]	; 0x44
   30852:	beq.n	30856 <get_fs_info@@Base+0x2f2>
   30854:	subs	r0, #8
   30856:	movs	r3, r0
   30858:	lsls	r0, r4, #8
   3085a:	movs	r0, r0
   3085c:	movs	r2, #119	; 0x77
   3085e:	movs	r2, r0
   30860:	adds	r7, #164	; 0xa4
   30862:	movs	r3, r0
   30864:	movs	r6, #209	; 0xd1
   30866:	movs	r2, r0
   30868:	movs	r3, #228	; 0xe4
   3086a:	movs	r2, r0

0003086c <get_fsid@@Base>:
   3086c:	push	{r4, r5, r6, r7, lr}
   3086e:	mov	r7, r2
   30870:	ldr	r2, [pc, #148]	; (30908 <get_fsid@@Base+0x9c>)
   30872:	subw	sp, sp, #1036	; 0x40c
   30876:	ldr	r3, [pc, #148]	; (3090c <get_fsid@@Base+0xa0>)
   30878:	mov	r4, r1
   3087a:	add	r2, pc
   3087c:	movs	r1, #0
   3087e:	mov	r6, r0
   30880:	ldr	r3, [r2, r3]
   30882:	ldr	r3, [r3, #0]
   30884:	str.w	r3, [sp, #1028]	; 0x404
   30888:	mov.w	r3, #0
   3088c:	blx	864c <open64@plt>
   30890:	subs	r5, r0, #0
   30892:	bge.n	308c2 <get_fsid@@Base+0x56>
   30894:	blx	8784 <__errno_location@plt>
   30898:	ldr	r4, [r0, #0]
   3089a:	negs	r4, r4
   3089c:	cbnz	r7, 308a8 <get_fsid@@Base+0x3c>
   3089e:	ldr	r0, [pc, #112]	; (30910 <get_fsid@@Base+0xa4>)
   308a0:	mov	r1, r6
   308a2:	add	r0, pc
   308a4:	bl	16b70 <__btrfs_error@@Base>
   308a8:	adds	r3, r5, #1
   308aa:	bne.n	308d6 <get_fsid@@Base+0x6a>
   308ac:	ldr	r2, [pc, #100]	; (30914 <get_fsid@@Base+0xa8>)
   308ae:	ldr	r3, [pc, #92]	; (3090c <get_fsid@@Base+0xa0>)
   308b0:	add	r2, pc
   308b2:	ldr	r3, [r2, r3]
   308b4:	ldr	r2, [r3, #0]
   308b6:	ldr.w	r3, [sp, #1028]	; 0x404
   308ba:	eors	r2, r3
   308bc:	beq.n	308fc <get_fsid@@Base+0x90>
   308be:	blx	8510 <__stack_chk_fail@plt>
   308c2:	ldr	r1, [pc, #64]	; (30904 <get_fsid@@Base+0x98>)
   308c4:	mov	r2, sp
   308c6:	blx	85bc <ioctl@plt>
   308ca:	cmp	r0, #0
   308cc:	bge.n	308de <get_fsid@@Base+0x72>
   308ce:	blx	8784 <__errno_location@plt>
   308d2:	ldr	r4, [r0, #0]
   308d4:	negs	r4, r4
   308d6:	mov	r0, r5
   308d8:	blx	8998 <close@plt>
   308dc:	b.n	308ac <get_fsid@@Base+0x40>
   308de:	mov	r3, r4
   308e0:	add	r6, sp, #16
   308e2:	add	r4, sp, #32
   308e4:	mov	r2, r6
   308e6:	adds	r3, #8
   308e8:	ldmia	r2!, {r0, r1}
   308ea:	cmp	r2, r4
   308ec:	str.w	r0, [r3, #-8]
   308f0:	mov	r6, r2
   308f2:	str.w	r1, [r3, #-4]
   308f6:	bne.n	308e4 <get_fsid@@Base+0x78>
   308f8:	movs	r4, #0
   308fa:	b.n	308d6 <get_fsid@@Base+0x6a>
   308fc:	mov	r0, r4
   308fe:	addw	sp, sp, #1036	; 0x40c
   30902:	pop	{r4, r5, r6, r7, pc}
   30904:	str	r4, [sp, #124]	; 0x7c
   30906:	strh	r0, [r0, #32]
   30908:	adds	r5, #10
   3090a:	movs	r3, r0
   3090c:	lsls	r0, r4, #8
   3090e:	movs	r0, r0
   30910:	ldrh	r3, [r7, #22]
   30912:	movs	r0, r0
   30914:	adds	r4, #212	; 0xd4
   30916:	movs	r3, r0

00030918 <group_profile_max_safe_loss@@Base>:
   30918:	movs	r3, #0
   3091a:	cmp	r3, #0
   3091c:	push	{r4, r5, lr}
   3091e:	and.w	r4, r0, #2040	; 0x7f8
   30922:	it	eq
   30924:	cmpeq	r4, #128	; 0x80
   30926:	mov	r5, r3
   30928:	beq.n	30998 <group_profile_max_safe_loss@@Base+0x80>
   3092a:	cmp	r3, #0
   3092c:	it	eq
   3092e:	cmpeq	r4, #129	; 0x81
   30930:	bcs.n	30966 <group_profile_max_safe_loss@@Base+0x4e>
   30932:	cmp	r3, #0
   30934:	it	eq
   30936:	cmpeq	r4, #16
   30938:	beq.n	30998 <group_profile_max_safe_loss@@Base+0x80>
   3093a:	cmp	r3, #0
   3093c:	it	eq
   3093e:	cmpeq	r4, #17
   30940:	bcs.n	30950 <group_profile_max_safe_loss@@Base+0x38>
   30942:	tst.w	r0, #2032	; 0x7f0
   30946:	ite	ne
   30948:	movne.w	r0, #4294967295	; 0xffffffff
   3094c:	moveq	r0, r3
   3094e:	pop	{r4, r5, pc}
   30950:	cmp	r3, #0
   30952:	it	eq
   30954:	cmpeq	r4, #32
   30956:	beq.n	3099c <group_profile_max_safe_loss@@Base+0x84>
   30958:	cmp	r3, #0
   3095a:	itet	eq
   3095c:	cmpeq	r4, #64	; 0x40
   3095e:	movne.w	r0, #4294967295	; 0xffffffff
   30962:	moveq	r0, #1
   30964:	b.n	3094e <group_profile_max_safe_loss@@Base+0x36>
   30966:	cmp	r3, #0
   30968:	it	eq
   3096a:	cmpeq.w	r4, #1024	; 0x400
   3096e:	beq.n	309a0 <group_profile_max_safe_loss@@Base+0x88>
   30970:	movs	r3, #0
   30972:	cmp	r3, r5
   30974:	mov.w	r2, #1024	; 0x400
   30978:	it	eq
   3097a:	cmpeq	r2, r4
   3097c:	bcc.n	309a4 <group_profile_max_safe_loss@@Base+0x8c>
   3097e:	cmp	r5, #0
   30980:	it	eq
   30982:	cmpeq.w	r4, #256	; 0x100
   30986:	beq.n	309aa <group_profile_max_safe_loss@@Base+0x92>
   30988:	cmp	r5, #0
   3098a:	itet	eq
   3098c:	cmpeq.w	r4, #512	; 0x200
   30990:	movne.w	r0, #4294967295	; 0xffffffff
   30994:	moveq	r0, #2
   30996:	b.n	3094e <group_profile_max_safe_loss@@Base+0x36>
   30998:	movs	r0, #1
   3099a:	b.n	3094e <group_profile_max_safe_loss@@Base+0x36>
   3099c:	mov	r0, r3
   3099e:	b.n	3094e <group_profile_max_safe_loss@@Base+0x36>
   309a0:	movs	r0, #3
   309a2:	b.n	3094e <group_profile_max_safe_loss@@Base+0x36>
   309a4:	mov.w	r0, #4294967295	; 0xffffffff
   309a8:	b.n	3094e <group_profile_max_safe_loss@@Base+0x36>
   309aa:	movs	r0, #2
   309ac:	b.n	3094e <group_profile_max_safe_loss@@Base+0x36>

000309ae <ask_user@@Base>:
   309ae:	ldr	r2, [pc, #148]	; (30a44 <ask_user@@Base+0x96>)
   309b0:	ldr	r3, [pc, #148]	; (30a48 <ask_user@@Base+0x9a>)
   309b2:	add	r2, pc
   309b4:	push	{r4, r5, r6, lr}
   309b6:	movs	r5, #0
   309b8:	sub	sp, #40	; 0x28
   309ba:	ldr	r3, [r2, r3]
   309bc:	mov	r4, r0
   309be:	movs	r2, #26
   309c0:	mov	r1, r5
   309c2:	add	r0, sp, #8
   309c4:	ldr	r3, [r3, #0]
   309c6:	str	r3, [sp, #36]	; 0x24
   309c8:	mov.w	r3, #0
   309cc:	str	r5, [sp, #4]
   309ce:	blx	87c4 <memset@plt+0x4>
   309d2:	ldr	r1, [pc, #120]	; (30a4c <ask_user@@Base+0x9e>)
   309d4:	mov	r2, r4
   309d6:	ldr	r6, [pc, #120]	; (30a50 <ask_user@@Base+0xa2>)
   309d8:	add	r1, pc
   309da:	movs	r0, #1
   309dc:	str	r5, [sp, #0]
   309de:	blx	8838 <__printf_chk@plt+0x4>
   309e2:	ldr	r3, [pc, #112]	; (30a54 <ask_user@@Base+0xa6>)
   309e4:	add	r6, pc
   309e6:	add	r4, sp, #4
   309e8:	movs	r1, #29
   309ea:	ldr	r3, [r6, r3]
   309ec:	mov	r0, r4
   309ee:	ldr	r2, [r3, #0]
   309f0:	blx	8440 <fgets@plt>
   309f4:	cbnz	r0, 30a0c <ask_user@@Base+0x5e>
   309f6:	movs	r0, #0
   309f8:	ldr	r2, [pc, #92]	; (30a58 <ask_user@@Base+0xaa>)
   309fa:	ldr	r3, [pc, #76]	; (30a48 <ask_user@@Base+0x9a>)
   309fc:	add	r2, pc
   309fe:	ldr	r3, [r2, r3]
   30a00:	ldr	r2, [r3, #0]
   30a02:	ldr	r3, [sp, #36]	; 0x24
   30a04:	eors	r2, r3
   30a06:	beq.n	30a3e <ask_user@@Base+0x90>
   30a08:	blx	8510 <__stack_chk_fail@plt>
   30a0c:	ldr	r1, [pc, #76]	; (30a5c <ask_user@@Base+0xae>)
   30a0e:	mov	r0, r4
   30a10:	mov	r2, sp
   30a12:	add	r1, pc
   30a14:	blx	8628 <strtok_r@plt>
   30a18:	mov	r4, r0
   30a1a:	cmp	r0, #0
   30a1c:	beq.n	309f6 <ask_user@@Base+0x48>
   30a1e:	ldr	r1, [pc, #64]	; (30a60 <ask_user@@Base+0xb2>)
   30a20:	add	r1, pc
   30a22:	blx	8550 <strcasecmp@plt>
   30a26:	cbz	r0, 30a3a <ask_user@@Base+0x8c>
   30a28:	ldr	r1, [pc, #56]	; (30a64 <ask_user@@Base+0xb6>)
   30a2a:	mov	r0, r4
   30a2c:	add	r1, pc
   30a2e:	blx	8550 <strcasecmp@plt>
   30a32:	clz	r0, r0
   30a36:	lsrs	r0, r0, #5
   30a38:	b.n	309f8 <ask_user@@Base+0x4a>
   30a3a:	movs	r0, #1
   30a3c:	b.n	309f8 <ask_user@@Base+0x4a>
   30a3e:	add	sp, #40	; 0x28
   30a40:	pop	{r4, r5, r6, pc}
   30a42:	nop
   30a44:	adds	r3, #210	; 0xd2
   30a46:	movs	r3, r0
   30a48:	lsls	r0, r4, #8
   30a4a:	movs	r0, r0
   30a4c:	movs	r1, #199	; 0xc7
   30a4e:	movs	r2, r0
   30a50:	adds	r3, #160	; 0xa0
   30a52:	movs	r3, r0
   30a54:	lsls	r0, r1, #9
   30a56:	movs	r0, r0
   30a58:	adds	r3, #136	; 0x88
   30a5a:	movs	r3, r0
   30a5c:	movs	r1, #152	; 0x98
   30a5e:	movs	r2, r0
   30a60:	b.n	30cd0 <btrfs_group_profile_str@@Base+0x28>
   30a62:	movs	r0, r0
   30a64:	bkpt	0x00ac
	...

00030a68 <find_mount_root@@Base>:
   30a68:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30a6c:	mov	r9, r0
   30a6e:	str	r1, [sp, #0]
   30a70:	mov.w	r1, #262144	; 0x40000
   30a74:	blx	864c <open64@plt>
   30a78:	cmp	r0, #0
   30a7a:	bge.n	30a8c <find_mount_root@@Base+0x24>
   30a7c:	blx	8784 <__errno_location@plt>
   30a80:	ldr	r4, [r0, #0]
   30a82:	negs	r4, r4
   30a84:	mov	r0, r4
   30a86:	add	sp, #12
   30a88:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30a8c:	blx	8998 <close@plt>
   30a90:	ldr	r1, [pc, #172]	; (30b40 <find_mount_root@@Base+0xd8>)
   30a92:	ldr	r0, [pc, #176]	; (30b44 <find_mount_root@@Base+0xdc>)
   30a94:	add	r1, pc
   30a96:	add	r0, pc
   30a98:	blx	8924 <setmntent@plt>
   30a9c:	mov	r7, r0
   30a9e:	cmp	r0, #0
   30aa0:	beq.n	30a7c <find_mount_root@@Base+0x14>
   30aa2:	ldr.w	fp, [pc, #164]	; 30b48 <find_mount_root@@Base+0xe0>
   30aa6:	movs	r5, #0
   30aa8:	mov	sl, r5
   30aaa:	movs	r6, #1
   30aac:	add	fp, pc
   30aae:	b.n	30abc <find_mount_root@@Base+0x54>
   30ab0:	ldr	r0, [r4, #8]
   30ab2:	mov	r1, fp
   30ab4:	blx	83c0 <strcmp@plt>
   30ab8:	mov	sl, r8
   30aba:	mov	r6, r0
   30abc:	mov	r0, r7
   30abe:	blx	8634 <getmntent@plt>
   30ac2:	mov	r4, r0
   30ac4:	cbz	r0, 30b00 <find_mount_root@@Base+0x98>
   30ac6:	ldr	r3, [r4, #4]
   30ac8:	mov	r0, r3
   30aca:	str	r3, [sp, #4]
   30acc:	blx	8748 <strlen@plt>
   30ad0:	ldr	r3, [sp, #4]
   30ad2:	mov	r1, r9
   30ad4:	mov	r8, r0
   30ad6:	mov	r2, r0
   30ad8:	mov	r0, r3
   30ada:	blx	8974 <strncmp@plt>
   30ade:	cmp	r0, #0
   30ae0:	bne.n	30abc <find_mount_root@@Base+0x54>
   30ae2:	cmp	sl, r8
   30ae4:	bgt.n	30abc <find_mount_root@@Base+0x54>
   30ae6:	mov	r0, r5
   30ae8:	blx	8434 <free@plt+0x4>
   30aec:	ldr	r0, [r4, #4]
   30aee:	blx	84f8 <strdup@plt+0x4>
   30af2:	mov	r5, r0
   30af4:	cmp	r0, #0
   30af6:	bne.n	30ab0 <find_mount_root@@Base+0x48>
   30af8:	blx	8784 <__errno_location@plt>
   30afc:	ldr	r4, [r0, #0]
   30afe:	negs	r4, r4
   30b00:	mov	r0, r7
   30b02:	blx	8884 <endmntent@plt>
   30b06:	cmp	r4, #0
   30b08:	bne.n	30a84 <find_mount_root@@Base+0x1c>
   30b0a:	cbz	r5, 30b38 <find_mount_root@@Base+0xd0>
   30b0c:	cbz	r6, 30b18 <find_mount_root@@Base+0xb0>
   30b0e:	mov	r0, r5
   30b10:	movs	r4, #1
   30b12:	blx	8434 <free@plt+0x4>
   30b16:	b.n	30a84 <find_mount_root@@Base+0x1c>
   30b18:	mov	r1, r6
   30b1a:	mov	r0, r5
   30b1c:	blx	898c <realpath@plt>
   30b20:	ldr	r3, [sp, #0]
   30b22:	str	r0, [r3, #0]
   30b24:	cbnz	r0, 30b2e <find_mount_root@@Base+0xc6>
   30b26:	blx	8784 <__errno_location@plt>
   30b2a:	ldr	r6, [r0, #0]
   30b2c:	negs	r6, r6
   30b2e:	mov	r0, r5
   30b30:	mov	r4, r6
   30b32:	blx	8434 <free@plt+0x4>
   30b36:	b.n	30a84 <find_mount_root@@Base+0x1c>
   30b38:	mvn.w	r4, #1
   30b3c:	b.n	30a84 <find_mount_root@@Base+0x1c>
   30b3e:	nop
   30b40:	bcs.n	30bea <find_next_key@@Base+0x8a>
   30b42:	movs	r0, r0
   30b44:	adds	r6, r7, #3
   30b46:	movs	r2, r0
   30b48:	adds	r2, r5, #1
   30b4a:	movs	r2, r0

00030b4c <units_set_mode@@Base>:
   30b4c:	ldrb	r3, [r0, #0]
   30b4e:	orrs	r1, r3
   30b50:	str	r1, [r0, #0]
   30b52:	bx	lr

00030b54 <units_set_base@@Base>:
   30b54:	ldr	r3, [r0, #0]
   30b56:	bic.w	r3, r3, #255	; 0xff
   30b5a:	orrs	r3, r1
   30b5c:	str	r3, [r0, #0]
   30b5e:	bx	lr

00030b60 <find_next_key@@Base>:
   30b60:	ldr	r2, [pc, #168]	; (30c0c <find_next_key@@Base+0xac>)
   30b62:	ldr	r3, [pc, #172]	; (30c10 <find_next_key@@Base+0xb0>)
   30b64:	add	r2, pc
   30b66:	push	{r4, r5, r6, lr}
   30b68:	sub	sp, #24
   30b6a:	ldr	r3, [r2, r3]
   30b6c:	mov	r4, r1
   30b6e:	movs	r5, #0
   30b70:	ldr	r3, [r3, #0]
   30b72:	str	r3, [sp, #20]
   30b74:	mov.w	r3, #0
   30b78:	subs	r3, r0, #4
   30b7a:	ldr.w	r0, [r3, #4]!
   30b7e:	cbz	r0, 30b92 <find_next_key@@Base+0x32>
   30b80:	ldr	r2, [r3, #32]
   30b82:	ldr.w	r1, [r0, #192]	; 0xc0
   30b86:	adds	r2, #1
   30b88:	cmp	r2, r1
   30b8a:	bcc.n	30b96 <find_next_key@@Base+0x36>
   30b8c:	adds	r5, #1
   30b8e:	cmp	r5, #8
   30b90:	bne.n	30b7a <find_next_key@@Base+0x1a>
   30b92:	movs	r5, #1
   30b94:	b.n	30bc6 <find_next_key@@Base+0x66>
   30b96:	add.w	r6, r4, #9
   30b9a:	mov	r1, sp
   30b9c:	cbnz	r5, 30bda <find_next_key@@Base+0x7a>
   30b9e:	movs	r3, #25
   30ba0:	muls	r2, r3
   30ba2:	movs	r3, #17
   30ba4:	adds	r2, #101	; 0x65
   30ba6:	bl	16a0e <read_extent_buffer@@Base>
   30baa:	ldr.w	r2, [sp, #9]
   30bae:	ldr.w	r3, [sp, #13]
   30bb2:	str.w	r2, [r4, #9]
   30bb6:	str	r3, [r6, #4]
   30bb8:	ldrb.w	r3, [sp, #8]
   30bbc:	strb	r3, [r4, #8]
   30bbe:	ldr	r3, [sp, #0]
   30bc0:	str	r3, [r4, #0]
   30bc2:	ldr	r3, [sp, #4]
   30bc4:	str	r3, [r4, #4]
   30bc6:	ldr	r2, [pc, #76]	; (30c14 <find_next_key@@Base+0xb4>)
   30bc8:	ldr	r3, [pc, #68]	; (30c10 <find_next_key@@Base+0xb0>)
   30bca:	add	r2, pc
   30bcc:	ldr	r3, [r2, r3]
   30bce:	ldr	r2, [r3, #0]
   30bd0:	ldr	r3, [sp, #20]
   30bd2:	eors	r2, r3
   30bd4:	beq.n	30c06 <find_next_key@@Base+0xa6>
   30bd6:	blx	8510 <__stack_chk_fail@plt>
   30bda:	add.w	r2, r2, r2, lsl #5
   30bde:	movs	r3, #17
   30be0:	adds	r2, #101	; 0x65
   30be2:	movs	r5, #0
   30be4:	bl	16a0e <read_extent_buffer@@Base>
   30be8:	ldr.w	r2, [sp, #9]
   30bec:	ldr.w	r3, [sp, #13]
   30bf0:	str.w	r2, [r4, #9]
   30bf4:	str	r3, [r6, #4]
   30bf6:	ldrb.w	r3, [sp, #8]
   30bfa:	strb	r3, [r4, #8]
   30bfc:	ldr	r3, [sp, #0]
   30bfe:	str	r3, [r4, #0]
   30c00:	ldr	r3, [sp, #4]
   30c02:	str	r3, [r4, #4]
   30c04:	b.n	30bc6 <find_next_key@@Base+0x66>
   30c06:	mov	r0, r5
   30c08:	add	sp, #24
   30c0a:	pop	{r4, r5, r6, pc}
   30c0c:	adds	r2, #32
   30c0e:	movs	r3, r0
   30c10:	lsls	r0, r4, #8
   30c12:	movs	r0, r0
   30c14:	adds	r1, #186	; 0xba
   30c16:	movs	r3, r0

00030c18 <btrfs_group_type_str@@Base>:
   30c18:	and.w	r3, r1, #131072	; 0x20000
   30c1c:	and.w	r2, r0, #7
   30c20:	cmp	r3, #0
   30c22:	it	eq
   30c24:	cmpeq	r2, #6
   30c26:	push	{r4, r5, lr}
   30c28:	bcs.n	30c5a <btrfs_group_type_str@@Base+0x42>
   30c2a:	orrs.w	r1, r2, r3
   30c2e:	beq.n	30c76 <btrfs_group_type_str@@Base+0x5e>
   30c30:	adds.w	r4, r2, #4294967295	; 0xffffffff
   30c34:	adc.w	r5, r3, #4294967295	; 0xffffffff
   30c38:	cmp	r5, #0
   30c3a:	it	eq
   30c3c:	cmpeq	r4, #5
   30c3e:	bcs.n	30c54 <btrfs_group_type_str@@Base+0x3c>
   30c40:	cmp	r4, #4
   30c42:	bhi.n	30c54 <btrfs_group_type_str@@Base+0x3c>
   30c44:	tbb	[pc, r4]
   30c48:	lsls	r2, r3, #12
   30c4a:	asrs	r6, r0, #4
   30c4c:	movs	r4, r2
   30c4e:	ldr	r0, [pc, #56]	; (30c88 <btrfs_group_type_str@@Base+0x70>)
   30c50:	add	r0, pc
   30c52:	pop	{r4, r5, pc}
   30c54:	ldr	r0, [pc, #52]	; (30c8c <btrfs_group_type_str@@Base+0x74>)
   30c56:	add	r0, pc
   30c58:	b.n	30c52 <btrfs_group_type_str@@Base+0x3a>
   30c5a:	cmp.w	r3, #131072	; 0x20000
   30c5e:	it	eq
   30c60:	cmpeq	r2, #0
   30c62:	bne.n	30c82 <btrfs_group_type_str@@Base+0x6a>
   30c64:	ldr	r0, [pc, #40]	; (30c90 <btrfs_group_type_str@@Base+0x78>)
   30c66:	add	r0, pc
   30c68:	b.n	30c52 <btrfs_group_type_str@@Base+0x3a>
   30c6a:	ldr	r0, [pc, #40]	; (30c94 <btrfs_group_type_str@@Base+0x7c>)
   30c6c:	add	r0, pc
   30c6e:	b.n	30c52 <btrfs_group_type_str@@Base+0x3a>
   30c70:	ldr	r0, [pc, #36]	; (30c98 <btrfs_group_type_str@@Base+0x80>)
   30c72:	add	r0, pc
   30c74:	b.n	30c52 <btrfs_group_type_str@@Base+0x3a>
   30c76:	ldr	r0, [pc, #36]	; (30c9c <btrfs_group_type_str@@Base+0x84>)
   30c78:	add	r0, pc
   30c7a:	b.n	30c52 <btrfs_group_type_str@@Base+0x3a>
   30c7c:	ldr	r0, [pc, #32]	; (30ca0 <btrfs_group_type_str@@Base+0x88>)
   30c7e:	add	r0, pc
   30c80:	b.n	30c52 <btrfs_group_type_str@@Base+0x3a>
   30c82:	ldr	r0, [pc, #32]	; (30ca4 <btrfs_group_type_str@@Base+0x8c>)
   30c84:	add	r0, pc
   30c86:	b.n	30c52 <btrfs_group_type_str@@Base+0x3a>
   30c88:	subs	r2, r6, #5
   30c8a:	movs	r2, r0
   30c8c:	beq.n	30bc4 <find_next_key@@Base+0x64>
   30c8e:	movs	r0, r0
   30c90:	subs	r3, r4, #5
   30c92:	movs	r2, r0
   30c94:	subs	r5, r1, #5
   30c96:	movs	r2, r0
   30c98:	subs	r2, r0, #5
   30c9a:	movs	r2, r0
   30c9c:	beq.n	30d90 <btrfs_group_profile_str@@Base+0xe8>
   30c9e:	movs	r0, r0
   30ca0:	subs	r1, r6, #4
   30ca2:	movs	r2, r0
   30ca4:	beq.n	30d80 <btrfs_group_profile_str@@Base+0xd8>
	...

00030ca8 <btrfs_group_profile_str@@Base>:
   30ca8:	and.w	r2, r0, #2040	; 0x7f8
   30cac:	movs	r3, #0
   30cae:	cmp	r3, #0
   30cb0:	it	eq
   30cb2:	cmpeq	r2, #64	; 0x40
   30cb4:	beq.n	30d30 <btrfs_group_profile_str@@Base+0x88>
   30cb6:	cmp	r3, #0
   30cb8:	it	eq
   30cba:	cmpeq	r2, #65	; 0x41
   30cbc:	bcs.n	30cf0 <btrfs_group_profile_str@@Base+0x48>
   30cbe:	cmp	r3, #0
   30cc0:	it	eq
   30cc2:	cmpeq	r2, #16
   30cc4:	beq.n	30d36 <btrfs_group_profile_str@@Base+0x8e>
   30cc6:	cmp	r3, #0
   30cc8:	it	eq
   30cca:	cmpeq	r2, #17
   30ccc:	bcs.n	30ce2 <btrfs_group_profile_str@@Base+0x3a>
   30cce:	orrs.w	r1, r2, r3
   30cd2:	beq.n	30d3c <btrfs_group_profile_str@@Base+0x94>
   30cd4:	cmp	r3, #0
   30cd6:	it	eq
   30cd8:	cmpeq	r2, #8
   30cda:	bne.n	30d42 <btrfs_group_profile_str@@Base+0x9a>
   30cdc:	ldr	r0, [pc, #136]	; (30d68 <btrfs_group_profile_str@@Base+0xc0>)
   30cde:	add	r0, pc
   30ce0:	bx	lr
   30ce2:	cmp	r3, #0
   30ce4:	it	eq
   30ce6:	cmpeq	r2, #32
   30ce8:	bne.n	30d48 <btrfs_group_profile_str@@Base+0xa0>
   30cea:	ldr	r0, [pc, #128]	; (30d6c <btrfs_group_profile_str@@Base+0xc4>)
   30cec:	add	r0, pc
   30cee:	bx	lr
   30cf0:	cmp	r3, #0
   30cf2:	it	eq
   30cf4:	cmpeq.w	r2, #512	; 0x200
   30cf8:	beq.n	30d4e <btrfs_group_profile_str@@Base+0xa6>
   30cfa:	movs	r1, #0
   30cfc:	cmp	r1, r3
   30cfe:	mov.w	r0, #512	; 0x200
   30d02:	it	eq
   30d04:	cmpeq	r0, r2
   30d06:	bcc.n	30d20 <btrfs_group_profile_str@@Base+0x78>
   30d08:	cmp	r3, #0
   30d0a:	it	eq
   30d0c:	cmpeq	r2, #128	; 0x80
   30d0e:	beq.n	30d54 <btrfs_group_profile_str@@Base+0xac>
   30d10:	cmp	r3, #0
   30d12:	it	eq
   30d14:	cmpeq.w	r2, #256	; 0x100
   30d18:	bne.n	30d5a <btrfs_group_profile_str@@Base+0xb2>
   30d1a:	ldr	r0, [pc, #84]	; (30d70 <btrfs_group_profile_str@@Base+0xc8>)
   30d1c:	add	r0, pc
   30d1e:	bx	lr
   30d20:	cmp	r3, #0
   30d22:	it	eq
   30d24:	cmpeq.w	r2, #1024	; 0x400
   30d28:	bne.n	30d60 <btrfs_group_profile_str@@Base+0xb8>
   30d2a:	ldr	r0, [pc, #72]	; (30d74 <btrfs_group_profile_str@@Base+0xcc>)
   30d2c:	add	r0, pc
   30d2e:	bx	lr
   30d30:	ldr	r0, [pc, #68]	; (30d78 <btrfs_group_profile_str@@Base+0xd0>)
   30d32:	add	r0, pc
   30d34:	bx	lr
   30d36:	ldr	r0, [pc, #68]	; (30d7c <btrfs_group_profile_str@@Base+0xd4>)
   30d38:	add	r0, pc
   30d3a:	bx	lr
   30d3c:	ldr	r0, [pc, #64]	; (30d80 <btrfs_group_profile_str@@Base+0xd8>)
   30d3e:	add	r0, pc
   30d40:	bx	lr
   30d42:	ldr	r0, [pc, #64]	; (30d84 <btrfs_group_profile_str@@Base+0xdc>)
   30d44:	add	r0, pc
   30d46:	bx	lr
   30d48:	ldr	r0, [pc, #60]	; (30d88 <btrfs_group_profile_str@@Base+0xe0>)
   30d4a:	add	r0, pc
   30d4c:	bx	lr
   30d4e:	ldr	r0, [pc, #60]	; (30d8c <btrfs_group_profile_str@@Base+0xe4>)
   30d50:	add	r0, pc
   30d52:	bx	lr
   30d54:	ldr	r0, [pc, #56]	; (30d90 <btrfs_group_profile_str@@Base+0xe8>)
   30d56:	add	r0, pc
   30d58:	bx	lr
   30d5a:	ldr	r0, [pc, #56]	; (30d94 <btrfs_group_profile_str@@Base+0xec>)
   30d5c:	add	r0, pc
   30d5e:	bx	lr
   30d60:	ldr	r0, [pc, #52]	; (30d98 <btrfs_group_profile_str@@Base+0xf0>)
   30d62:	add	r0, pc
   30d64:	bx	lr
   30d66:	nop
   30d68:	ldmia	r3, {r0, r2, r3, r4}
   30d6a:	movs	r0, r0
   30d6c:	ldmia	r3, {r0, r1, r2, r3, r5}
   30d6e:	movs	r0, r0
   30d70:	ldmia	r3!, {r0, r1, r4}
   30d72:	movs	r0, r0
   30d74:	ldmia	r2, {r1, r2, r5, r6, r7}
   30d76:	movs	r0, r0
   30d78:	ldmia	r2, {r1, r2, r3, r5, r6, r7}
   30d7a:	movs	r0, r0
   30d7c:	ldmia	r2!, {r1, r3, r6, r7}
   30d7e:	movs	r0, r0
   30d80:	subs	r1, r3, #2
   30d82:	movs	r2, r0
   30d84:	ldmia	r7, {r2, r3, r5, r7}
   30d86:	movs	r0, r0
   30d88:	ldmia	r7, {r1, r2, r5, r7}
   30d8a:	movs	r0, r0
   30d8c:	ldmia	r2!, {r0, r3, r4, r5, r7}
   30d8e:	movs	r0, r0
   30d90:	ldmia	r2!, {r1, r4, r6, r7}
   30d92:	movs	r0, r0
   30d94:	ldmia	r7, {r2, r4, r7}
   30d96:	movs	r0, r0
   30d98:	ldmia	r7, {r1, r2, r3, r7}
	...

00030d9c <test_num_disk_vs_raid@@Base>:
   30d9c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30da0:	sub	sp, #36	; 0x24
   30da2:	mov	sl, r3
   30da4:	ldr	r3, [pc, #316]	; (30ee4 <test_num_disk_vs_raid@@Base+0x148>)
   30da6:	ldrd	r6, r7, [sp, #72]	; 0x48
   30daa:	orr.w	fp, r0, r2
   30dae:	add	r3, pc
   30db0:	ldr	r5, [sp, #80]	; 0x50
   30db2:	cmp	r7, #0
   30db4:	mov	r9, r0
   30db6:	it	eq
   30db8:	cmpeq	r6, #2
   30dba:	mov	r8, r2
   30dbc:	str	r3, [sp, #28]
   30dbe:	beq.n	30e4c <test_num_disk_vs_raid@@Base+0xb0>
   30dc0:	cmp	r7, #0
   30dc2:	it	eq
   30dc4:	cmpeq	r6, #3
   30dc6:	beq.n	30e48 <test_num_disk_vs_raid@@Base+0xac>
   30dc8:	cmp	r7, #0
   30dca:	it	eq
   30dcc:	cmpeq	r6, #1
   30dce:	beq.n	30e50 <test_num_disk_vs_raid@@Base+0xb4>
   30dd0:	mov.w	r4, #1088	; 0x440
   30dd4:	orr.w	r4, r4, #768	; 0x300
   30dd8:	orr.w	r4, r4, #152	; 0x98
   30ddc:	cmp	r7, #0
   30dde:	orr.w	r4, r4, #32
   30de2:	it	eq
   30de4:	cmpeq	r6, #2
   30de6:	bcc.n	30dfe <test_num_disk_vs_raid@@Base+0x62>
   30de8:	and.w	r2, fp, #32
   30dec:	movs	r3, #0
   30dee:	orrs	r3, r2
   30df0:	beq.n	30dfe <test_num_disk_vs_raid@@Base+0x62>
   30df2:	ldr	r0, [pc, #244]	; (30ee8 <test_num_disk_vs_raid@@Base+0x14c>)
   30df4:	str	r1, [sp, #16]
   30df6:	add	r0, pc
   30df8:	bl	16af4 <__btrfs_warning@@Base>
   30dfc:	ldr	r1, [sp, #16]
   30dfe:	bic.w	r3, r9, r4
   30e02:	mvn.w	ip, r4
   30e06:	strd	r3, r1, [sp, #16]
   30e0a:	ldrd	r3, r4, [sp, #16]
   30e0e:	orrs	r3, r4
   30e10:	beq.n	30e54 <test_num_disk_vs_raid@@Base+0xb8>
   30e12:	ldr	r2, [pc, #216]	; (30eec <test_num_disk_vs_raid@@Base+0x150>)
   30e14:	mov	r0, r9
   30e16:	ldr	r3, [sp, #28]
   30e18:	ldr	r3, [r3, r2]
   30e1a:	str	r1, [sp, #28]
   30e1c:	ldr	r4, [r3, #0]
   30e1e:	bl	30ca8 <btrfs_group_profile_str@@Base>
   30e22:	ldr	r1, [sp, #28]
   30e24:	str	r0, [sp, #16]
   30e26:	mov	r0, r9
   30e28:	bl	2f4d8 <test_issubvolname@@Base+0x3a>
   30e2c:	ldr	r2, [pc, #192]	; (30ef0 <test_num_disk_vs_raid@@Base+0x154>)
   30e2e:	ldr	r3, [sp, #16]
   30e30:	add	r2, pc
   30e32:	strd	r6, r7, [sp]
   30e36:	str	r0, [sp, #8]
   30e38:	movs	r1, #1
   30e3a:	mov	r0, r4
   30e3c:	blx	8860 <__fprintf_chk@plt+0x4>
   30e40:	movs	r0, #1
   30e42:	add	sp, #36	; 0x24
   30e44:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30e48:	movs	r4, #0
   30e4a:	b.n	30dd4 <test_num_disk_vs_raid@@Base+0x38>
   30e4c:	movs	r4, #0
   30e4e:	b.n	30dd8 <test_num_disk_vs_raid@@Base+0x3c>
   30e50:	movs	r4, #0
   30e52:	b.n	30ddc <test_num_disk_vs_raid@@Base+0x40>
   30e54:	and.w	r0, ip, r8
   30e58:	mov	r1, sl
   30e5a:	orrs.w	r3, r0, r1
   30e5e:	beq.n	30e86 <test_num_disk_vs_raid@@Base+0xea>
   30e60:	ldr	r2, [pc, #136]	; (30eec <test_num_disk_vs_raid@@Base+0x150>)
   30e62:	mov	r0, r8
   30e64:	ldr	r3, [sp, #28]
   30e66:	ldr	r3, [r3, r2]
   30e68:	ldr	r4, [r3, #0]
   30e6a:	bl	30ca8 <btrfs_group_profile_str@@Base>
   30e6e:	mov	r1, sl
   30e70:	str	r0, [sp, #16]
   30e72:	mov	r0, r8
   30e74:	bl	2f4d8 <test_issubvolname@@Base+0x3a>
   30e78:	ldr	r2, [pc, #120]	; (30ef4 <test_num_disk_vs_raid@@Base+0x158>)
   30e7a:	ldr	r3, [sp, #16]
   30e7c:	add	r2, pc
   30e7e:	strd	r6, r7, [sp]
   30e82:	str	r0, [sp, #8]
   30e84:	b.n	30e38 <test_num_disk_vs_raid@@Base+0x9c>
   30e86:	cmp	r7, #0
   30e88:	mov.w	r1, #0
   30e8c:	it	eq
   30e8e:	cmpeq	r6, #3
   30e90:	bne.n	30ec6 <test_num_disk_vs_raid@@Base+0x12a>
   30e92:	and.w	r2, fp, #256	; 0x100
   30e96:	mov	r3, r1
   30e98:	orrs	r3, r2
   30e9a:	beq.n	30ea4 <test_num_disk_vs_raid@@Base+0x108>
   30e9c:	ldr	r0, [pc, #88]	; (30ef8 <test_num_disk_vs_raid@@Base+0x15c>)
   30e9e:	add	r0, pc
   30ea0:	bl	16af4 <__btrfs_warning@@Base>
   30ea4:	cbnz	r5, 30ede <test_num_disk_vs_raid@@Base+0x142>
   30ea6:	and.w	r2, r8, #32
   30eaa:	mov	r3, r5
   30eac:	orrs	r3, r2
   30eae:	beq.n	30eb8 <test_num_disk_vs_raid@@Base+0x11c>
   30eb0:	ldr	r5, [sp, #84]	; 0x54
   30eb2:	subs	r5, #0
   30eb4:	it	ne
   30eb6:	movne	r5, #1
   30eb8:	ldr	r1, [pc, #64]	; (30efc <test_num_disk_vs_raid@@Base+0x160>)
   30eba:	mov	r0, r5
   30ebc:	add	r1, pc
   30ebe:	bl	16bec <__btrfs_warning_on@@Base>
   30ec2:	movs	r0, #0
   30ec4:	b.n	30e42 <test_num_disk_vs_raid@@Base+0xa6>
   30ec6:	cmp	r7, #0
   30ec8:	it	eq
   30eca:	cmpeq	r6, #2
   30ecc:	bne.n	30ea4 <test_num_disk_vs_raid@@Base+0x108>
   30ece:	and.w	r2, fp, #128	; 0x80
   30ed2:	mov	r3, r1
   30ed4:	orrs	r3, r2
   30ed6:	beq.n	30ea4 <test_num_disk_vs_raid@@Base+0x108>
   30ed8:	ldr	r0, [pc, #36]	; (30f00 <test_num_disk_vs_raid@@Base+0x164>)
   30eda:	add	r0, pc
   30edc:	b.n	30ea0 <test_num_disk_vs_raid@@Base+0x104>
   30ede:	movs	r5, #0
   30ee0:	b.n	30eb8 <test_num_disk_vs_raid@@Base+0x11c>
   30ee2:	nop
   30ee4:	cmp	r7, #214	; 0xd6
   30ee6:	movs	r3, r0
   30ee8:	adds	r0, r5, #7
   30eea:	movs	r2, r0
   30eec:	lsls	r0, r6, #8
   30eee:	movs	r0, r0
   30ef0:	adds	r1, r5, #7
   30ef2:	movs	r2, r0
   30ef4:	subs	r2, r0, #0
   30ef6:	movs	r2, r0
   30ef8:	subs	r1, r0, #1
   30efa:	movs	r2, r0
   30efc:	subs	r1, r3, #2
   30efe:	movs	r2, r0
   30f00:	subs	r0, r0, #1
   30f02:	movs	r2, r0

00030f04 <btrfs_tree_search2_ioctl_supported@@Base>:
   30f04:	ldr	r2, [pc, #144]	; (30f98 <btrfs_tree_search2_ioctl_supported@@Base+0x94>)
   30f06:	ldr	r3, [pc, #148]	; (30f9c <btrfs_tree_search2_ioctl_supported@@Base+0x98>)
   30f08:	add	r2, pc
   30f0a:	ldr	r1, [pc, #136]	; (30f94 <btrfs_tree_search2_ioctl_supported@@Base+0x90>)
   30f0c:	push	{r4, r5, r7, lr}
   30f0e:	sub	sp, #8
   30f10:	add	r7, sp, #0
   30f12:	ldr	r3, [r2, r3]
   30f14:	sub.w	sp, sp, #1024	; 0x400
   30f18:	movs	r2, #1
   30f1a:	ldr	r3, [r3, #0]
   30f1c:	str	r3, [r7, #4]
   30f1e:	mov.w	r3, #0
   30f22:	movs	r3, #0
   30f24:	strd	r2, r3, [sp]
   30f28:	movs	r2, #2
   30f2a:	movs	r3, #0
   30f2c:	strd	r2, r3, [sp, #8]
   30f30:	strd	r2, r3, [sp, #16]
   30f34:	mov.w	r2, #4294967295	; 0xffffffff
   30f38:	movs	r3, #132	; 0x84
   30f3a:	strd	r3, r3, [sp, #56]	; 0x38
   30f3e:	mov.w	r3, #4294967295	; 0xffffffff
   30f42:	strd	r2, r3, [sp, #32]
   30f46:	strd	r2, r3, [sp, #48]	; 0x30
   30f4a:	movs	r3, #1
   30f4c:	mov.w	r2, #912	; 0x390
   30f50:	str	r3, [sp, #64]	; 0x40
   30f52:	movs	r3, #0
   30f54:	strd	r2, r3, [sp, #104]	; 0x68
   30f58:	mov	r2, sp
   30f5a:	movs	r4, #0
   30f5c:	movs	r5, #0
   30f5e:	strd	r4, r5, [sp, #24]
   30f62:	strd	r4, r5, [sp, #40]	; 0x28
   30f66:	blx	85bc <ioctl@plt>
   30f6a:	cmn.w	r0, #95	; 0x5f
   30f6e:	beq.n	30f8a <btrfs_tree_search2_ioctl_supported@@Base+0x86>
   30f70:	cmp	r0, #0
   30f72:	it	eq
   30f74:	moveq	r0, #1
   30f76:	ldr	r2, [pc, #40]	; (30fa0 <btrfs_tree_search2_ioctl_supported@@Base+0x9c>)
   30f78:	ldr	r3, [pc, #32]	; (30f9c <btrfs_tree_search2_ioctl_supported@@Base+0x98>)
   30f7a:	add	r2, pc
   30f7c:	ldr	r3, [r2, r3]
   30f7e:	ldr	r2, [r3, #0]
   30f80:	ldr	r3, [r7, #4]
   30f82:	eors	r2, r3
   30f84:	beq.n	30f8e <btrfs_tree_search2_ioctl_supported@@Base+0x8a>
   30f86:	blx	8510 <__stack_chk_fail@plt>
   30f8a:	movs	r0, #0
   30f8c:	b.n	30f76 <btrfs_tree_search2_ioctl_supported@@Base+0x72>
   30f8e:	adds	r7, #8
   30f90:	mov	sp, r7
   30f92:	pop	{r4, r5, r7, pc}
   30f94:	str	r4, [sp, #68]	; 0x44
   30f96:	stmia	r0!, {r4, r5, r6}
   30f98:	cmp	r6, #124	; 0x7c
   30f9a:	movs	r3, r0
   30f9c:	lsls	r0, r4, #8
   30f9e:	movs	r0, r0
   30fa0:	cmp	r6, #10
   30fa2:	movs	r3, r0

00030fa4 <get_unit_mode_from_arg@@Base>:
   30fa4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30fa8:	mov	r8, r2
   30faa:	ldr	r2, [pc, #448]	; (3116c <get_unit_mode_from_arg@@Base+0x1c8>)
   30fac:	sub	sp, #20
   30fae:	ldr	r3, [pc, #448]	; (31170 <get_unit_mode_from_arg@@Base+0x1cc>)
   30fb0:	mov	r7, r0
   30fb2:	add	r2, pc
   30fb4:	ldr.w	r9, [pc, #444]	; 31174 <get_unit_mode_from_arg@@Base+0x1d0>
   30fb8:	ldr.w	sl, [pc, #444]	; 31178 <get_unit_mode_from_arg@@Base+0x1d4>
   30fbc:	mov	r4, r1
   30fbe:	ldr.w	fp, [pc, #444]	; 3117c <get_unit_mode_from_arg@@Base+0x1d8>
   30fc2:	add	r9, pc
   30fc4:	ldr	r3, [r2, r3]
   30fc6:	add	sl, pc
   30fc8:	add	fp, pc
   30fca:	movs	r5, #0
   30fcc:	ldr	r3, [r3, #0]
   30fce:	str	r3, [sp, #12]
   30fd0:	mov.w	r3, #0
   30fd4:	mov.w	r3, #512	; 0x200
   30fd8:	str	r3, [sp, #8]
   30fda:	ldr	r3, [r7, #0]
   30fdc:	cmp	r3, r5
   30fde:	bgt.n	31006 <get_unit_mode_from_arg@@Base+0x62>
   30fe0:	movs	r3, #0
   30fe2:	mov	r0, r3
   30fe4:	ldr	r2, [r7, #0]
   30fe6:	cmp	r2, r0
   30fe8:	bgt.w	31152 <get_unit_mode_from_arg@@Base+0x1ae>
   30fec:	ldr	r2, [pc, #400]	; (31180 <get_unit_mode_from_arg@@Base+0x1dc>)
   30fee:	str	r3, [r7, #0]
   30ff0:	ldr	r3, [pc, #380]	; (31170 <get_unit_mode_from_arg@@Base+0x1cc>)
   30ff2:	add	r2, pc
   30ff4:	ldr	r0, [sp, #8]
   30ff6:	ldr	r3, [r2, r3]
   30ff8:	ldr	r2, [r3, #0]
   30ffa:	ldr	r3, [sp, #12]
   30ffc:	eors	r2, r3
   30ffe:	beq.w	31166 <get_unit_mode_from_arg@@Base+0x1c2>
   31002:	blx	8510 <__stack_chk_fail@plt>
   31006:	ldr.w	r6, [r4, r5, lsl #2]
   3100a:	mov	r1, r9
   3100c:	mov	r0, r6
   3100e:	blx	83c0 <strcmp@plt>
   31012:	cmp	r0, #0
   31014:	beq.w	31162 <get_unit_mode_from_arg@@Base+0x1be>
   31018:	mov	r1, sl
   3101a:	mov	r0, r6
   3101c:	blx	83c0 <strcmp@plt>
   31020:	cbnz	r0, 31028 <get_unit_mode_from_arg@@Base+0x84>
   31022:	mov.w	r3, #256	; 0x100
   31026:	b.n	31036 <get_unit_mode_from_arg@@Base+0x92>
   31028:	mov	r1, fp
   3102a:	mov	r0, r6
   3102c:	blx	83c0 <strcmp@plt>
   31030:	cbnz	r0, 31040 <get_unit_mode_from_arg@@Base+0x9c>
   31032:	mov.w	r3, #512	; 0x200
   31036:	str	r3, [sp, #8]
   31038:	str.w	r0, [r4, r5, lsl #2]
   3103c:	adds	r5, #1
   3103e:	b.n	30fda <get_unit_mode_from_arg@@Base+0x36>
   31040:	ldr	r1, [pc, #320]	; (31184 <get_unit_mode_from_arg@@Base+0x1e0>)
   31042:	mov	r0, r6
   31044:	add	r1, pc
   31046:	blx	83c0 <strcmp@plt>
   3104a:	cbnz	r0, 3105c <get_unit_mode_from_arg@@Base+0xb8>
   3104c:	mov.w	r1, #512	; 0x200
   31050:	str	r0, [sp, #4]
   31052:	add	r0, sp, #8
   31054:	bl	30b4c <units_set_mode@@Base>
   31058:	ldr	r3, [sp, #4]
   3105a:	b.n	310c8 <get_unit_mode_from_arg@@Base+0x124>
   3105c:	ldr	r1, [pc, #296]	; (31188 <get_unit_mode_from_arg@@Base+0x1e4>)
   3105e:	mov	r0, r6
   31060:	add	r1, pc
   31062:	blx	83c0 <strcmp@plt>
   31066:	cbnz	r0, 31070 <get_unit_mode_from_arg@@Base+0xcc>
   31068:	mov.w	r1, #768	; 0x300
   3106c:	str	r0, [sp, #4]
   3106e:	b.n	31052 <get_unit_mode_from_arg@@Base+0xae>
   31070:	ldr	r1, [pc, #280]	; (3118c <get_unit_mode_from_arg@@Base+0x1e8>)
   31072:	mov	r0, r6
   31074:	add	r1, pc
   31076:	blx	83c0 <strcmp@plt>
   3107a:	mov	r3, r0
   3107c:	cbnz	r0, 3108a <get_unit_mode_from_arg@@Base+0xe6>
   3107e:	movs	r1, #2
   31080:	str	r3, [sp, #4]
   31082:	add	r0, sp, #8
   31084:	bl	30b54 <units_set_base@@Base>
   31088:	b.n	31058 <get_unit_mode_from_arg@@Base+0xb4>
   3108a:	ldr	r1, [pc, #260]	; (31190 <get_unit_mode_from_arg@@Base+0x1ec>)
   3108c:	mov	r0, r6
   3108e:	add	r1, pc
   31090:	blx	83c0 <strcmp@plt>
   31094:	mov	r3, r0
   31096:	cbnz	r0, 3109e <get_unit_mode_from_arg@@Base+0xfa>
   31098:	movs	r1, #3
   3109a:	str	r3, [sp, #4]
   3109c:	b.n	31082 <get_unit_mode_from_arg@@Base+0xde>
   3109e:	ldr	r1, [pc, #244]	; (31194 <get_unit_mode_from_arg@@Base+0x1f0>)
   310a0:	mov	r0, r6
   310a2:	add	r1, pc
   310a4:	blx	83c0 <strcmp@plt>
   310a8:	mov	r3, r0
   310aa:	cbnz	r0, 310b2 <get_unit_mode_from_arg@@Base+0x10e>
   310ac:	movs	r1, #4
   310ae:	str	r3, [sp, #4]
   310b0:	b.n	31082 <get_unit_mode_from_arg@@Base+0xde>
   310b2:	ldr	r1, [pc, #228]	; (31198 <get_unit_mode_from_arg@@Base+0x1f4>)
   310b4:	mov	r0, r6
   310b6:	add	r1, pc
   310b8:	blx	83c0 <strcmp@plt>
   310bc:	cbnz	r0, 310ce <get_unit_mode_from_arg@@Base+0x12a>
   310be:	add	r0, sp, #8
   310c0:	movs	r1, #5
   310c2:	bl	30b54 <units_set_base@@Base>
   310c6:	movs	r3, #0
   310c8:	str.w	r3, [r4, r5, lsl #2]
   310cc:	b.n	3103c <get_unit_mode_from_arg@@Base+0x98>
   310ce:	cmp.w	r8, #0
   310d2:	beq.n	3103c <get_unit_mode_from_arg@@Base+0x98>
   310d4:	ldr	r1, [pc, #196]	; (3119c <get_unit_mode_from_arg@@Base+0x1f8>)
   310d6:	mov	r0, r6
   310d8:	add	r1, pc
   310da:	blx	83c0 <strcmp@plt>
   310de:	cmp	r0, #0
   310e0:	beq.n	31022 <get_unit_mode_from_arg@@Base+0x7e>
   310e2:	ldr	r1, [pc, #188]	; (311a0 <get_unit_mode_from_arg@@Base+0x1fc>)
   310e4:	mov	r0, r6
   310e6:	add	r1, pc
   310e8:	blx	83c0 <strcmp@plt>
   310ec:	cmp	r0, #0
   310ee:	beq.n	31032 <get_unit_mode_from_arg@@Base+0x8e>
   310f0:	ldr	r1, [pc, #176]	; (311a4 <get_unit_mode_from_arg@@Base+0x200>)
   310f2:	mov	r0, r6
   310f4:	add	r1, pc
   310f6:	blx	83c0 <strcmp@plt>
   310fa:	cbnz	r0, 31102 <get_unit_mode_from_arg@@Base+0x15e>
   310fc:	mov.w	r3, #768	; 0x300
   31100:	b.n	31036 <get_unit_mode_from_arg@@Base+0x92>
   31102:	ldr	r1, [pc, #164]	; (311a8 <get_unit_mode_from_arg@@Base+0x204>)
   31104:	mov	r0, r6
   31106:	add	r1, pc
   31108:	blx	83c0 <strcmp@plt>
   3110c:	mov	r3, r0
   3110e:	cmp	r0, #0
   31110:	beq.n	3107e <get_unit_mode_from_arg@@Base+0xda>
   31112:	ldr	r1, [pc, #152]	; (311ac <get_unit_mode_from_arg@@Base+0x208>)
   31114:	mov	r0, r6
   31116:	add	r1, pc
   31118:	blx	83c0 <strcmp@plt>
   3111c:	mov	r3, r0
   3111e:	cmp	r0, #0
   31120:	beq.n	31098 <get_unit_mode_from_arg@@Base+0xf4>
   31122:	ldr	r1, [pc, #140]	; (311b0 <get_unit_mode_from_arg@@Base+0x20c>)
   31124:	mov	r0, r6
   31126:	add	r1, pc
   31128:	blx	83c0 <strcmp@plt>
   3112c:	mov	r3, r0
   3112e:	cmp	r0, #0
   31130:	beq.n	310ac <get_unit_mode_from_arg@@Base+0x108>
   31132:	ldr	r1, [pc, #128]	; (311b4 <get_unit_mode_from_arg@@Base+0x210>)
   31134:	mov	r0, r6
   31136:	add	r1, pc
   31138:	blx	83c0 <strcmp@plt>
   3113c:	mov	r6, r0
   3113e:	cmp	r0, #0
   31140:	bne.w	3103c <get_unit_mode_from_arg@@Base+0x98>
   31144:	add	r0, sp, #8
   31146:	movs	r1, #5
   31148:	bl	30b54 <units_set_base@@Base>
   3114c:	str.w	r6, [r4, r5, lsl #2]
   31150:	b.n	3103c <get_unit_mode_from_arg@@Base+0x98>
   31152:	ldr.w	r2, [r4, r0, lsl #2]
   31156:	cbz	r2, 3115e <get_unit_mode_from_arg@@Base+0x1ba>
   31158:	str.w	r2, [r4, r3, lsl #2]
   3115c:	adds	r3, #1
   3115e:	adds	r0, #1
   31160:	b.n	30fe4 <get_unit_mode_from_arg@@Base+0x40>
   31162:	mov	r3, r0
   31164:	b.n	30fe4 <get_unit_mode_from_arg@@Base+0x40>
   31166:	add	sp, #20
   31168:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3116c:	cmp	r5, #210	; 0xd2
   3116e:	movs	r3, r0
   31170:	lsls	r0, r4, #8
   31172:	movs	r0, r0
   31174:	strh	r6, [r3, #18]
   31176:	movs	r0, r0
   31178:	adds	r4, r2, #7
   3117a:	movs	r2, r0
   3117c:	adds	r0, r3, #7
   3117e:	movs	r2, r0
   31180:	cmp	r5, #146	; 0x92
   31182:	movs	r3, r0
   31184:	adds	r5, r5, #5
   31186:	movs	r2, r0
   31188:	adds	r7, r2, #5
   3118a:	movs	r2, r0
   3118c:	adds	r0, r1, #5
   3118e:	movs	r2, r0
   31190:	adds	r7, r6, #4
   31192:	movs	r2, r0
   31194:	adds	r4, r5, #4
   31196:	movs	r2, r0
   31198:	adds	r1, r4, #4
   3119a:	movs	r2, r0
   3119c:	adds	r0, r1, #4
   3119e:	movs	r2, r0
   311a0:	adds	r5, r7, #3
   311a2:	movs	r2, r0
   311a4:	adds	r2, r6, #3
   311a6:	movs	r2, r0
   311a8:	adds	r3, r4, #3
   311aa:	movs	r2, r0
   311ac:	adds	r6, r2, #3
   311ae:	movs	r2, r0
   311b0:	adds	r1, r1, #3
   311b2:	movs	r2, r0
   311b4:	adds	r4, r7, #2
   311b6:	movs	r2, r0

000311b8 <div_factor@@Base>:
   311b8:	cmp	r2, #10
   311ba:	push	{r3, r4, r5, lr}
   311bc:	beq.n	311d8 <div_factor@@Base+0x20>
   311be:	asrs	r5, r2, #31
   311c0:	movs	r3, #0
   311c2:	muls	r1, r2
   311c4:	mla	r1, r0, r5, r1
   311c8:	umull	r4, r5, r2, r0
   311cc:	movs	r2, #10
   311ce:	add	r5, r1
   311d0:	mov	r1, r5
   311d2:	mov	r0, r4
   311d4:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   311d8:	pop	{r3, r4, r5, pc}

000311da <count_digits@@Base>:
   311da:	mov	r2, r0
   311dc:	mov	r3, r1
   311de:	orrs.w	r1, r2, r3
   311e2:	push	{r4, r6, r7, lr}
   311e4:	beq.n	3120c <count_digits@@Base+0x32>
   311e6:	movs	r4, #0
   311e8:	mov	r6, r2
   311ea:	mov	r7, r3
   311ec:	movs	r2, #10
   311ee:	movs	r3, #0
   311f0:	mov	r0, r6
   311f2:	mov	r1, r7
   311f4:	bl	38bfc <btrfs_util_strerror@@Base+0x7fc>
   311f8:	cmp	r7, #0
   311fa:	it	eq
   311fc:	cmpeq	r6, #10
   311fe:	add.w	r4, r4, #1
   31202:	mov	r2, r0
   31204:	mov	r3, r1
   31206:	bcs.n	311e8 <count_digits@@Base+0xe>
   31208:	mov	r0, r4
   3120a:	pop	{r4, r6, r7, pc}
   3120c:	movs	r4, #1
   3120e:	b.n	31208 <count_digits@@Base+0x2e>

00031210 <string_is_numerical@@Base>:
   31210:	cbz	r0, 31232 <string_is_numerical@@Base+0x22>
   31212:	ldrb	r3, [r0, #0]
   31214:	subs	r3, #48	; 0x30
   31216:	cmp	r3, #9
   31218:	bhi.n	31230 <string_is_numerical@@Base+0x20>
   3121a:	subs	r3, r0, #1
   3121c:	ldrb.w	r0, [r3, #1]!
   31220:	sub.w	r2, r0, #48	; 0x30
   31224:	cmp	r2, #9
   31226:	bls.n	3121c <string_is_numerical@@Base+0xc>
   31228:	clz	r0, r0
   3122c:	lsrs	r0, r0, #5
   3122e:	bx	lr
   31230:	movs	r0, #0
   31232:	bx	lr

00031234 <prefixcmp@@Base>:
   31234:	subs	r1, #1
   31236:	subs	r3, r0, #1
   31238:	ldrb.w	r0, [r1, #1]!
   3123c:	cbz	r0, 31248 <prefixcmp@@Base+0x14>
   3123e:	ldrb.w	r2, [r3, #1]!
   31242:	cmp	r0, r2
   31244:	beq.n	31238 <prefixcmp@@Base+0x4>
   31246:	subs	r0, r0, r2
   31248:	bx	lr

0003124a <subvol_strip_mountpoint@@Base>:
   3124a:	push	{r4, r5, r6, lr}
   3124c:	mov	r6, r0
   3124e:	mov	r5, r1
   31250:	blx	8748 <strlen@plt>
   31254:	mov	r4, r0
   31256:	cbz	r0, 3128e <subvol_strip_mountpoint@@Base+0x44>
   31258:	mov	r2, r0
   3125a:	mov	r1, r5
   3125c:	mov	r0, r6
   3125e:	blx	8974 <strncmp@plt>
   31262:	cbnz	r0, 31270 <subvol_strip_mountpoint@@Base+0x26>
   31264:	cmp	r4, #1
   31266:	mov	r3, r4
   31268:	beq.n	31280 <subvol_strip_mountpoint@@Base+0x36>
   3126a:	ldrb	r2, [r5, r4]
   3126c:	cmp	r2, #47	; 0x2f
   3126e:	beq.n	31280 <subvol_strip_mountpoint@@Base+0x36>
   31270:	ldr	r0, [pc, #32]	; (31294 <subvol_strip_mountpoint@@Base+0x4a>)
   31272:	mov	r1, r6
   31274:	add	r0, pc
   31276:	bl	16b70 <__btrfs_error@@Base>
   3127a:	movs	r0, #1
   3127c:	blx	873c <exit@plt>
   31280:	add	r6, r4
   31282:	ldrb.w	r2, [r6, #-1]
   31286:	cmp	r2, #47	; 0x2f
   31288:	it	ne
   3128a:	addne	r3, r4, #1
   3128c:	add	r5, r3
   3128e:	mov	r0, r5
   31290:	pop	{r4, r5, r6, pc}
   31292:	nop
   31294:	subs	r1, r0, r6
   31296:	movs	r2, r0

00031298 <init_rand_seed@@Base>:
   31298:	ldr	r3, [pc, #24]	; (312b4 <init_rand_seed@@Base+0x1c>)
   3129a:	mvns	r2, r0
   3129c:	lsrs	r0, r0, #16
   3129e:	add	r3, pc
   312a0:	orr.w	r0, r0, r1, lsl #16
   312a4:	mvns	r1, r1
   312a6:	mvns	r0, r0
   312a8:	strh	r2, [r3, #0]
   312aa:	strh	r0, [r3, #2]
   312ac:	movs	r2, #1
   312ae:	strh	r1, [r3, #4]
   312b0:	str	r2, [r3, #8]
   312b2:	bx	lr
   312b4:	subs	r7, #246	; 0xf6
   312b6:	movs	r3, r0

000312b8 <rand_u32@@Base>:
   312b8:	push	{r3, lr}
   312ba:	ldr	r3, [pc, #24]	; (312d4 <rand_u32@@Base+0x1c>)
   312bc:	add	r3, pc
   312be:	ldr	r3, [r3, #8]
   312c0:	cbnz	r3, 312c6 <rand_u32@@Base+0xe>
   312c2:	bl	2f570 <test_issubvolname@@Base+0xd2>
   312c6:	ldr	r0, [pc, #16]	; (312d8 <rand_u32@@Base+0x20>)
   312c8:	ldmia.w	sp!, {r3, lr}
   312cc:	add	r0, pc
   312ce:	b.w	84c0 <jrand48@plt>
   312d2:	nop
   312d4:	subs	r7, #216	; 0xd8
   312d6:	movs	r3, r0
   312d8:	subs	r7, #200	; 0xc8
   312da:	movs	r3, r0

000312dc <rand_range@@Base>:
   312dc:	ldr	r3, [pc, #32]	; (31300 <rand_range@@Base+0x24>)
   312de:	push	{r4, lr}
   312e0:	add	r3, pc
   312e2:	mov	r4, r0
   312e4:	ldr	r3, [r3, #8]
   312e6:	cbnz	r3, 312ec <rand_range@@Base+0x10>
   312e8:	bl	2f570 <test_issubvolname@@Base+0xd2>
   312ec:	ldr	r0, [pc, #20]	; (31304 <rand_range@@Base+0x28>)
   312ee:	add	r0, pc
   312f0:	blx	84c4 <jrand48@plt+0x4>
   312f4:	mov	r1, r4
   312f6:	bl	38674 <btrfs_util_strerror@@Base+0x274>
   312fa:	mov	r0, r1
   312fc:	pop	{r4, pc}
   312fe:	nop
   31300:	subs	r7, #180	; 0xb4
   31302:	movs	r3, r0
   31304:	subs	r7, #166	; 0xa6
   31306:	movs	r3, r0

00031308 <rand_int@@Base>:
   31308:	b.w	312b8 <rand_u32@@Base>

0003130c <rand_u64@@Base>:
   3130c:	push	{r3, r4, r5, lr}
   3130e:	bl	312b8 <rand_u32@@Base>
   31312:	movs	r4, #0
   31314:	mov	r5, r0
   31316:	bl	312b8 <rand_u32@@Base>
   3131a:	adds	r0, r4, r0
   3131c:	adc.w	r1, r5, #0
   31320:	pop	{r3, r4, r5, pc}

00031322 <rand_u16@@Base>:
   31322:	push	{r3, lr}
   31324:	bl	312b8 <rand_u32@@Base>
   31328:	uxth	r0, r0
   3132a:	pop	{r3, pc}

0003132c <rand_u8@@Base>:
   3132c:	push	{r3, lr}
   3132e:	bl	312b8 <rand_u32@@Base>
   31332:	uxtb	r0, r0
   31334:	pop	{r3, pc}

00031336 <btrfs_config_init@@Base>:
   31336:	ldr	r3, [pc, #12]	; (31344 <btrfs_config_init@@Base+0xe>)
   31338:	ldr	r2, [pc, #12]	; (31348 <btrfs_config_init@@Base+0x12>)
   3133a:	add	r3, pc
   3133c:	ldr	r3, [r3, r2]
   3133e:	movs	r2, #4
   31340:	str	r2, [r3, #0]
   31342:	bx	lr
   31344:	cmp	r2, #74	; 0x4a
   31346:	movs	r3, r0
   31348:	lsls	r4, r3, #8
	...

0003134c <total_memory@@Base>:
   3134c:	ldr	r2, [pc, #72]	; (31398 <total_memory@@Base+0x4c>)
   3134e:	ldr	r3, [pc, #76]	; (3139c <total_memory@@Base+0x50>)
   31350:	add	r2, pc
   31352:	push	{lr}
   31354:	sub	sp, #76	; 0x4c
   31356:	ldr	r3, [r2, r3]
   31358:	add	r0, sp, #4
   3135a:	ldr	r3, [r3, #0]
   3135c:	str	r3, [sp, #68]	; 0x44
   3135e:	mov.w	r3, #0
   31362:	blx	8668 <sysinfo@plt>
   31366:	cmp	r0, #0
   31368:	bge.n	3138a <total_memory@@Base+0x3e>
   3136a:	ldr	r0, [pc, #52]	; (313a0 <total_memory@@Base+0x54>)
   3136c:	add	r0, pc
   3136e:	bl	16b70 <__btrfs_error@@Base>
   31372:	mov.w	r0, #4294967295	; 0xffffffff
   31376:	ldr	r2, [pc, #44]	; (313a4 <total_memory@@Base+0x58>)
   31378:	ldr	r3, [pc, #32]	; (3139c <total_memory@@Base+0x50>)
   3137a:	add	r2, pc
   3137c:	ldr	r3, [r2, r3]
   3137e:	ldr	r2, [r3, #0]
   31380:	ldr	r3, [sp, #68]	; 0x44
   31382:	eors	r2, r3
   31384:	beq.n	31392 <total_memory@@Base+0x46>
   31386:	blx	8510 <__stack_chk_fail@plt>
   3138a:	ldr	r3, [sp, #20]
   3138c:	ldr	r0, [sp, #56]	; 0x38
   3138e:	muls	r0, r3
   31390:	b.n	31376 <total_memory@@Base+0x2a>
   31392:	add	sp, #76	; 0x4c
   31394:	ldr.w	pc, [sp], #4
   31398:	cmp	r2, #52	; 0x34
   3139a:	movs	r3, r0
   3139c:	lsls	r0, r4, #8
   3139e:	movs	r0, r0
   313a0:	subs	r0, r4, r2
   313a2:	movs	r2, r0
   313a4:	cmp	r2, #10
   313a6:	movs	r3, r0

000313a8 <print_device_info@@Base>:
   313a8:	push	{r0, r1, r4, lr}
   313aa:	mov	r2, r1
   313ac:	mov	r4, r0
   313ae:	cbz	r1, 313ba <print_device_info@@Base+0x12>
   313b0:	ldr	r1, [pc, #28]	; (313d0 <print_device_info@@Base+0x28>)
   313b2:	movs	r0, #1
   313b4:	add	r1, pc
   313b6:	blx	8838 <__printf_chk@plt+0x4>
   313ba:	ldr	r3, [r4, #32]
   313bc:	movs	r0, #1
   313be:	ldr	r1, [pc, #20]	; (313d4 <print_device_info@@Base+0x2c>)
   313c0:	str	r3, [sp, #0]
   313c2:	add	r1, pc
   313c4:	ldrd	r2, r3, [r4, #64]	; 0x40
   313c8:	blx	8838 <__printf_chk@plt+0x4>
   313cc:	add	sp, #8
   313ce:	pop	{r4, pc}
   313d0:	b.n	31594 <print_all_devices@@Base+0x1bc>
   313d2:	movs	r0, r0
   313d4:	subs	r6, r4, r1
   313d6:	movs	r2, r0

000313d8 <print_all_devices@@Base>:
   313d8:	push	{r4, r5, r6, lr}
   313da:	mov	r4, r0
   313dc:	ldr	r0, [pc, #36]	; (31404 <print_all_devices@@Base+0x2c>)
   313de:	ldr	r6, [pc, #40]	; (31408 <print_all_devices@@Base+0x30>)
   313e0:	add	r0, pc
   313e2:	blx	865c <puts@plt+0x4>
   313e6:	ldr	r5, [r4, #0]
   313e8:	add	r6, pc
   313ea:	cmp	r5, r4
   313ec:	bne.n	313f8 <print_all_devices@@Base+0x20>
   313ee:	ldmia.w	sp!, {r4, r5, r6, lr}
   313f2:	movs	r0, #10
   313f4:	b.w	87d0 <putchar@plt>
   313f8:	mov	r0, r5
   313fa:	mov	r1, r6
   313fc:	bl	313a8 <print_device_info@@Base>
   31400:	ldr	r5, [r5, #0]
   31402:	b.n	313ea <print_all_devices@@Base+0x12>
   31404:	subs	r6, r4, r1
   31406:	movs	r2, r0
   31408:	strh	r4, [r4, #16]
   3140a:	movs	r0, r0
   3140c:	ldr	r2, [pc, #284]	; (3152c <print_all_devices@@Base+0x154>)
   3140e:	ldr	r3, [pc, #288]	; (31530 <print_all_devices@@Base+0x158>)
   31410:	push	{r4, r5, r6, r7, lr}
   31412:	add	r2, pc
   31414:	sub.w	sp, sp, #516	; 0x204
   31418:	mov	r4, r1
   3141a:	ldr	r3, [r2, r3]
   3141c:	mov	r5, sp
   3141e:	ldr	r1, [pc, #264]	; (31528 <print_all_devices@@Base+0x150>)
   31420:	mov	r2, r5
   31422:	ldr	r3, [r3, #0]
   31424:	str	r3, [sp, #508]	; 0x1fc
   31426:	mov.w	r3, #0
   3142a:	blx	85bc <ioctl@plt>
   3142e:	adds	r0, #1
   31430:	beq.n	3151c <print_all_devices@@Base+0x144>
   31432:	ldrd	r2, r3, [sp]
   31436:	add	r7, sp, #296	; 0x128
   31438:	add.w	r6, r4, #32
   3143c:	strd	r2, r3, [r4]
   31440:	ldrd	r2, r3, [r5, #264]	; 0x108
   31444:	strd	r2, r3, [r4, #8]
   31448:	ldrd	r2, r3, [r5, #272]	; 0x110
   3144c:	strd	r2, r3, [r4, #16]
   31450:	ldrd	r2, r3, [r5, #288]	; 0x120
   31454:	strd	r2, r3, [r4, #24]
   31458:	ldrd	r2, r3, [r5, #280]	; 0x118
   3145c:	strd	r2, r3, [r4, #80]	; 0x50
   31460:	add	r2, sp, #312	; 0x138
   31462:	mov	r3, r7
   31464:	adds	r6, #8
   31466:	ldmia	r3!, {r0, r1}
   31468:	cmp	r3, r2
   3146a:	str.w	r0, [r6, #-8]
   3146e:	mov	r7, r3
   31470:	str.w	r1, [r6, #-4]
   31474:	bne.n	31462 <print_all_devices@@Base+0x8a>
   31476:	add.w	r7, r4, #48	; 0x30
   3147a:	add	r3, sp, #328	; 0x148
   3147c:	mov	r6, r2
   3147e:	adds	r7, #8
   31480:	ldmia	r6!, {r0, r1}
   31482:	cmp	r6, r3
   31484:	str.w	r0, [r7, #-8]
   31488:	mov	r2, r6
   3148a:	str.w	r1, [r7, #-4]
   3148e:	bne.n	3147c <print_all_devices@@Base+0xa4>
   31490:	add.w	r6, r4, #64	; 0x40
   31494:	add	r7, sp, #344	; 0x158
   31496:	mov	r2, r3
   31498:	adds	r6, #8
   3149a:	ldmia	r2!, {r0, r1}
   3149c:	cmp	r2, r7
   3149e:	str.w	r0, [r6, #-8]
   314a2:	mov	r3, r2
   314a4:	str.w	r1, [r6, #-4]
   314a8:	bne.n	31496 <print_all_devices@@Base+0xbe>
   314aa:	ldrd	r2, r3, [r5, #344]	; 0x158
   314ae:	movs	r0, #0
   314b0:	strd	r2, r3, [r4, #88]	; 0x58
   314b4:	ldrd	r2, r3, [r5, #352]	; 0x160
   314b8:	strd	r2, r3, [r4, #96]	; 0x60
   314bc:	ldrd	r2, r3, [r5, #360]	; 0x168
   314c0:	strd	r2, r3, [r4, #104]	; 0x68
   314c4:	ldrd	r2, r3, [r5, #368]	; 0x170
   314c8:	strd	r2, r3, [r4, #112]	; 0x70
   314cc:	ldr.w	r3, [r5, #376]	; 0x178
   314d0:	str	r3, [r4, #120]	; 0x78
   314d2:	ldr.w	r3, [r5, #384]	; 0x180
   314d6:	str	r3, [r4, #124]	; 0x7c
   314d8:	ldr.w	r3, [r5, #392]	; 0x188
   314dc:	str.w	r3, [r4, #128]	; 0x80
   314e0:	ldr.w	r3, [r5, #400]	; 0x190
   314e4:	str.w	r3, [r4, #132]	; 0x84
   314e8:	ldr.w	r3, [r5, #408]	; 0x198
   314ec:	str.w	r3, [r4, #136]	; 0x88
   314f0:	ldr.w	r3, [r5, #416]	; 0x1a0
   314f4:	str.w	r3, [r4, #140]	; 0x8c
   314f8:	ldr.w	r3, [r5, #424]	; 0x1a8
   314fc:	str.w	r3, [r4, #144]	; 0x90
   31500:	ldr.w	r3, [r5, #432]	; 0x1b0
   31504:	str.w	r3, [r4, #148]	; 0x94
   31508:	ldr	r2, [pc, #40]	; (31534 <print_all_devices@@Base+0x15c>)
   3150a:	ldr	r3, [pc, #36]	; (31530 <print_all_devices@@Base+0x158>)
   3150c:	add	r2, pc
   3150e:	ldr	r3, [r2, r3]
   31510:	ldr	r2, [r3, #0]
   31512:	ldr	r3, [sp, #508]	; 0x1fc
   31514:	eors	r2, r3
   31516:	beq.n	31520 <print_all_devices@@Base+0x148>
   31518:	blx	8510 <__stack_chk_fail@plt>
   3151c:	movs	r0, #23
   3151e:	b.n	31508 <print_all_devices@@Base+0x130>
   31520:	add.w	sp, sp, #516	; 0x204
   31524:	pop	{r4, r5, r6, r7, pc}
   31526:	nop
   31528:	str	r4, [sp, #240]	; 0xf0
   3152a:	strh	r0, [r7, #14]
   3152c:	cmp	r1, #114	; 0x72
   3152e:	movs	r3, r0
   31530:	lsls	r0, r4, #8
   31532:	movs	r0, r0
   31534:	cmp	r0, #120	; 0x78
   31536:	movs	r3, r0
   31538:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   3153c:	mov	r7, r0
   3153e:	mov	r0, r1
   31540:	mov	r9, r1
   31542:	mov	r6, r2
   31544:	mov	r8, r3
   31546:	blx	8748 <strlen@plt>
   3154a:	mov	r5, r0
   3154c:	cmp	r5, #1
   3154e:	bls.n	3155a <print_all_devices@@Base+0x182>
   31550:	subs	r3, r5, #1
   31552:	ldrb.w	r2, [r9, r3]
   31556:	cmp	r2, #47	; 0x2f
   31558:	beq.n	315ae <print_all_devices@@Base+0x1d6>
   3155a:	adds	r0, r5, #1
   3155c:	blx	8678 <malloc@plt+0x4>
   31560:	mov	r4, r0
   31562:	cmp	r0, #0
   31564:	beq.n	315fc <print_all_devices@@Base+0x224>
   31566:	mov	r2, r5
   31568:	mov	r1, r9
   3156a:	blx	8480 <memcpy@plt+0x4>
   3156e:	mov.w	r9, #0
   31572:	mov	r2, r5
   31574:	strb.w	r9, [r4, r5]
   31578:	movs	r1, #47	; 0x2f
   3157a:	mov	r0, r4
   3157c:	blx	876c <memrchr@plt>
   31580:	cmp	r4, r0
   31582:	mov	r5, r0
   31584:	bne.n	315b2 <print_all_devices@@Base+0x1da>
   31586:	ldr.w	sl, [pc, #120]	; 31600 <print_all_devices@@Base+0x228>
   3158a:	adds	r5, r4, #1
   3158c:	add	sl, pc
   3158e:	mov	r0, r5
   31590:	blx	8748 <strlen@plt>
   31594:	cmp	r0, r8
   31596:	mov	r9, r0
   31598:	bcc.n	315c6 <print_all_devices@@Base+0x1ee>
   3159a:	mov	r0, r4
   3159c:	blx	8434 <free@plt+0x4>
   315a0:	blx	8784 <__errno_location@plt>
   315a4:	movs	r3, #36	; 0x24
   315a6:	str	r3, [r0, #0]
   315a8:	movs	r0, #3
   315aa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   315ae:	mov	r5, r3
   315b0:	b.n	3154c <print_all_devices@@Base+0x174>
   315b2:	cbz	r0, 315bc <print_all_devices@@Base+0x1e4>
   315b4:	mov	sl, r4
   315b6:	strb.w	r9, [r5], #1
   315ba:	b.n	3158e <print_all_devices@@Base+0x1b6>
   315bc:	ldr.w	sl, [pc, #68]	; 31604 <print_all_devices@@Base+0x22c>
   315c0:	mov	r5, r4
   315c2:	add	sl, pc
   315c4:	b.n	3158e <print_all_devices@@Base+0x1b6>
   315c6:	mov	r2, r0
   315c8:	mov	r1, r5
   315ca:	mov	r0, r6
   315cc:	movs	r5, #0
   315ce:	blx	8480 <memcpy@plt+0x4>
   315d2:	mov.w	r2, #16384	; 0x4000
   315d6:	mov	r1, sl
   315d8:	mov	r0, r7
   315da:	strb.w	r5, [r6, r9]
   315de:	blx	8504 <openat@plt>
   315e2:	ldr	r3, [sp, #32]
   315e4:	str	r0, [r3, #0]
   315e6:	adds	r0, #1
   315e8:	mov	r0, r4
   315ea:	bne.n	315f4 <print_all_devices@@Base+0x21c>
   315ec:	blx	8434 <free@plt+0x4>
   315f0:	movs	r0, #7
   315f2:	b.n	315aa <print_all_devices@@Base+0x1d2>
   315f4:	blx	8434 <free@plt+0x4>
   315f8:	mov	r0, r5
   315fa:	b.n	315aa <print_all_devices@@Base+0x1d2>
   315fc:	movs	r0, #2
   315fe:	b.n	315aa <print_all_devices@@Base+0x1d2>
   31600:	str	r6, [sp, #380]	; 0x17c
   31602:	movs	r0, r0
   31604:	asrs	r2, r5, #7
   31606:	movs	r2, r0
   31608:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3160c:	sub.w	sp, sp, #4096	; 0x1000
   31610:	sub	sp, #20
   31612:	ldr	r1, [pc, #528]	; (31824 <print_all_devices@@Base+0x44c>)
   31614:	mov	r6, r2
   31616:	mov	r7, r3
   31618:	ldr	r2, [pc, #524]	; (31828 <print_all_devices@@Base+0x450>)
   3161a:	add.w	r3, sp, #4128	; 0x1020
   3161e:	add	r1, pc
   31620:	add.w	r8, sp, #16
   31624:	sub.w	r5, r8, #8
   31628:	ldr	r4, [r3, #24]
   3162a:	ldr	r2, [r1, r2]
   3162c:	adds	r3, #24
   3162e:	add.w	r3, sp, #4096	; 0x1000
   31632:	mov	r9, r0
   31634:	ldr	r2, [r2, #0]
   31636:	str	r2, [r3, #12]
   31638:	mov.w	r2, #0
   3163c:	mov	r0, r5
   3163e:	mov.w	r2, #4096	; 0x1000
   31642:	movs	r1, #0
   31644:	adds	r3, #12
   31646:	blx	87c4 <memset@plt+0x4>
   3164a:	movs	r2, #1
   3164c:	movs	r3, #0
   3164e:	strd	r6, r7, [r5, #16]
   31652:	strd	r2, r3, [r8, #-8]
   31656:	mov.w	r2, #4294967295	; 0xffffffff
   3165a:	mov.w	r3, #4294967295	; 0xffffffff
   3165e:	strd	r6, r7, [r5, #8]
   31662:	strd	r2, r3, [r5, #32]
   31666:	strd	r2, r3, [r5, #48]	; 0x30
   3166a:	movs	r2, #132	; 0x84
   3166c:	movs	r3, #144	; 0x90
   3166e:	strd	r2, r3, [r5, #56]	; 0x38
   31672:	cbnz	r4, 316c6 <print_all_devices@@Base+0x2ee>
   31674:	movs	r6, #0
   31676:	movs	r3, #132	; 0x84
   31678:	str	r3, [r5, #60]	; 0x3c
   3167a:	ldr.w	fp, [pc, #432]	; 3182c <print_all_devices@@Base+0x454>
   3167e:	movs	r2, #0
   31680:	movs	r7, #1
   31682:	mov	ip, r2
   31684:	mov.w	sl, #4096	; 0x1000
   31688:	ldr	r3, [r5, #64]	; 0x40
   3168a:	cmp	r3, ip
   3168c:	bhi.n	316f6 <print_all_devices@@Base+0x31e>
   3168e:	mov	r2, r5
   31690:	mov	r1, fp
   31692:	mov	r0, r9
   31694:	str.w	sl, [r5, #64]	; 0x40
   31698:	blx	85bc <ioctl@plt>
   3169c:	adds	r0, #1
   3169e:	beq.w	31814 <print_all_devices@@Base+0x43c>
   316a2:	ldr	r3, [r5, #64]	; 0x40
   316a4:	cbnz	r3, 316f2 <print_all_devices@@Base+0x31a>
   316a6:	cbnz	r7, 316e6 <print_all_devices@@Base+0x30e>
   316a8:	movs	r0, #0
   316aa:	ldr	r1, [pc, #388]	; (31830 <print_all_devices@@Base+0x458>)
   316ac:	add.w	r3, sp, #4096	; 0x1000
   316b0:	ldr	r2, [pc, #372]	; (31828 <print_all_devices@@Base+0x450>)
   316b2:	adds	r3, #12
   316b4:	add	r1, pc
   316b6:	ldr	r2, [r1, r2]
   316b8:	ldr	r1, [r2, #0]
   316ba:	ldr	r2, [r3, #0]
   316bc:	eors	r1, r2
   316be:	beq.w	31818 <print_all_devices@@Base+0x440>
   316c2:	blx	8510 <__stack_chk_fail@plt>
   316c6:	cmp	r7, #0
   316c8:	mov.w	r2, #0
   316cc:	it	eq
   316ce:	cmpeq	r6, #5
   316d0:	mov.w	r3, #0
   316d4:	strd	r6, r7, [r4]
   316d8:	strd	r2, r3, [r4, #8]
   316dc:	strd	r2, r3, [r4, #16]
   316e0:	beq.n	31674 <print_all_devices@@Base+0x29c>
   316e2:	movs	r6, #1
   316e4:	b.n	3167a <print_all_devices@@Base+0x2a2>
   316e6:	blx	8784 <__errno_location@plt>
   316ea:	movs	r3, #2
   316ec:	str	r3, [r0, #0]
   316ee:	movs	r0, #6
   316f0:	b.n	316aa <print_all_devices@@Base+0x2d2>
   316f2:	movs	r2, #0
   316f4:	mov	ip, r2
   316f6:	add	r3, sp, #112	; 0x70
   316f8:	add	r3, r2
   316fa:	ldr	r1, [r3, #24]
   316fc:	cmp	r1, #132	; 0x84
   316fe:	bne.n	317e6 <print_all_devices@@Base+0x40e>
   31700:	cmp	r4, #0
   31702:	beq.n	317c8 <print_all_devices@@Base+0x3f0>
   31704:	ldr.w	r0, [r3, #240]	; 0xf0
   31708:	addw	r7, r3, #295	; 0x127
   3170c:	ldr.w	r1, [r3, #244]	; 0xf4
   31710:	strd	r0, r1, [r4, #24]
   31714:	addw	r1, r3, #279	; 0x117
   31718:	add.w	r0, r4, #32
   3171c:	ldr.w	lr, [r1], #4
   31720:	cmp	r1, r7
   31722:	str.w	lr, [r0], #4
   31726:	bne.n	3171c <print_all_devices@@Base+0x344>
   31728:	add.w	r0, r4, #48	; 0x30
   3172c:	addw	r7, r3, #311	; 0x137
   31730:	ldr.w	lr, [r1], #4
   31734:	cmp	r1, r7
   31736:	str.w	lr, [r0], #4
   3173a:	bne.n	31730 <print_all_devices@@Base+0x358>
   3173c:	add.w	r0, r4, #64	; 0x40
   31740:	addw	r7, r3, #327	; 0x147
   31744:	ldr.w	lr, [r1], #4
   31748:	cmp	r1, r7
   3174a:	str.w	lr, [r0], #4
   3174e:	bne.n	31744 <print_all_devices@@Base+0x36c>
   31750:	ldr.w	r0, [r3, #192]	; 0xc0
   31754:	ldr.w	r1, [r3, #196]	; 0xc4
   31758:	strd	r0, r1, [r4, #80]	; 0x50
   3175c:	ldr.w	r0, [r3, #327]	; 0x147
   31760:	ldr.w	r1, [r3, #331]	; 0x14b
   31764:	strd	r0, r1, [r4, #88]	; 0x58
   31768:	ldr.w	r0, [r3, #335]	; 0x14f
   3176c:	ldr.w	r1, [r3, #339]	; 0x153
   31770:	strd	r0, r1, [r4, #96]	; 0x60
   31774:	ldr.w	r0, [r3, #343]	; 0x157
   31778:	ldr.w	r1, [r3, #347]	; 0x15b
   3177c:	strd	r0, r1, [r4, #104]	; 0x68
   31780:	ldr.w	r1, [r3, #355]	; 0x163
   31784:	ldr.w	r0, [r3, #351]	; 0x15f
   31788:	strd	r0, r1, [r4, #112]	; 0x70
   3178c:	ldr.w	r1, [r3, #359]	; 0x167
   31790:	str	r1, [r4, #120]	; 0x78
   31792:	ldr.w	r1, [r3, #367]	; 0x16f
   31796:	str	r1, [r4, #124]	; 0x7c
   31798:	ldr.w	r1, [r3, #371]	; 0x173
   3179c:	str.w	r1, [r4, #128]	; 0x80
   317a0:	ldr.w	r1, [r3, #379]	; 0x17b
   317a4:	str.w	r1, [r4, #132]	; 0x84
   317a8:	ldr.w	r1, [r3, #383]	; 0x17f
   317ac:	str.w	r1, [r4, #136]	; 0x88
   317b0:	ldr.w	r1, [r3, #391]	; 0x187
   317b4:	str.w	r1, [r4, #140]	; 0x8c
   317b8:	ldr.w	r1, [r3, #395]	; 0x18b
   317bc:	str.w	r1, [r4, #144]	; 0x90
   317c0:	ldr.w	r1, [r3, #403]	; 0x193
   317c4:	str.w	r1, [r4, #148]	; 0x94
   317c8:	movs	r7, #0
   317ca:	movs	r1, #144	; 0x90
   317cc:	str	r1, [r5, #56]	; 0x38
   317ce:	ldr	r3, [r3, #28]
   317d0:	adds	r2, #32
   317d2:	add.w	ip, ip, #1
   317d6:	add	r2, r3
   317d8:	cmp	r7, #0
   317da:	bne.w	31688 <print_all_devices@@Base+0x2b0>
   317de:	cmp	r6, #0
   317e0:	bne.w	31688 <print_all_devices@@Base+0x2b0>
   317e4:	b.n	316a8 <print_all_devices@@Base+0x2d0>
   317e6:	cmp	r1, #144	; 0x90
   317e8:	bne.n	317ce <print_all_devices@@Base+0x3f6>
   317ea:	cbz	r4, 3180a <print_all_devices@@Base+0x432>
   317ec:	mov	r1, r3
   317ee:	sub.w	r6, r8, #16
   317f2:	ldr.w	r0, [r1, #16]!
   317f6:	ldr	r1, [r1, #4]
   317f8:	stmia	r6!, {r0, r1}
   317fa:	ldrd	r0, r1, [r8, #-16]
   317fe:	strd	r0, r1, [r4, #8]
   31802:	ldr	r0, [r3, #32]
   31804:	ldr	r1, [r3, #36]	; 0x24
   31806:	strd	r0, r1, [r4, #16]
   3180a:	mov.w	r1, #4294967295	; 0xffffffff
   3180e:	movs	r6, #0
   31810:	str	r1, [r5, #56]	; 0x38
   31812:	b.n	317ce <print_all_devices@@Base+0x3f6>
   31814:	movs	r0, #12
   31816:	b.n	316aa <print_all_devices@@Base+0x2d2>
   31818:	add.w	sp, sp, #4096	; 0x1000
   3181c:	add	sp, #20
   3181e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31822:	nop
   31824:	movs	r7, #102	; 0x66
   31826:	movs	r3, r0
   31828:	lsls	r0, r4, #8
   3182a:	movs	r0, r0
   3182c:	str	r4, [sp, #68]	; 0x44
   3182e:	beq.n	31832 <print_all_devices@@Base+0x45a>
   31830:	movs	r6, #208	; 0xd0
   31832:	movs	r3, r0
   31834:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31838:	mov	r9, r3
   3183a:	ldr	r3, [r0, #20]
   3183c:	mov	r5, r2
   3183e:	movw	r2, #4112	; 0x1010
   31842:	ldr	r6, [sp, #40]	; 0x28
   31844:	mov	r4, r0
   31846:	mov	r8, r1
   31848:	muls	r2, r3
   3184a:	ldr	r3, [r0, #16]
   3184c:	sub.w	r2, r2, #4096	; 0x1000
   31850:	subs	r2, #16
   31852:	add.w	sl, r3, r2
   31856:	movw	r3, #4108	; 0x100c
   3185a:	ldr.w	r3, [sl, r3]
   3185e:	cbz	r3, 318d4 <print_all_devices@@Base+0x4fc>
   31860:	cbz	r6, 318d4 <print_all_devices@@Base+0x4fc>
   31862:	adds	r2, r3, #1
   31864:	adds	r7, r2, r6
   31866:	cbz	r3, 3186e <print_all_devices@@Base+0x496>
   31868:	cbnz	r6, 3186e <print_all_devices@@Base+0x496>
   3186a:	cbz	r5, 3186e <print_all_devices@@Base+0x496>
   3186c:	adds	r7, r2, #1
   3186e:	ldr	r3, [r4, #32]
   31870:	add	r7, r5
   31872:	add.w	fp, r7, #1
   31876:	cmp	fp, r3
   31878:	bls.n	31888 <print_all_devices@@Base+0x4b0>
   3187a:	ldr	r0, [r4, #28]
   3187c:	mov	r1, fp
   3187e:	blx	852c <realloc@plt+0x4>
   31882:	cbz	r0, 318d8 <print_all_devices@@Base+0x500>
   31884:	strd	r0, fp, [r4, #28]
   31888:	movw	r3, #4108	; 0x100c
   3188c:	ldr	r1, [r4, #28]
   3188e:	ldr.w	r2, [sl, r3]
   31892:	adds	r3, r1, r2
   31894:	cbz	r2, 3189e <print_all_devices@@Base+0x4c6>
   31896:	cbz	r6, 3189e <print_all_devices@@Base+0x4c6>
   31898:	adds	r3, #1
   3189a:	movs	r0, #47	; 0x2f
   3189c:	strb	r0, [r1, r2]
   3189e:	mov	r2, r6
   318a0:	mov	r1, r9
   318a2:	mov	r0, r3
   318a4:	blx	8480 <memcpy@plt+0x4>
   318a8:	movw	r2, #4108	; 0x100c
   318ac:	ldr.w	r2, [sl, r2]
   318b0:	adds	r4, r0, r6
   318b2:	cbz	r2, 318be <print_all_devices@@Base+0x4e6>
   318b4:	cbnz	r6, 318be <print_all_devices@@Base+0x4e6>
   318b6:	cbz	r5, 318be <print_all_devices@@Base+0x4e6>
   318b8:	movs	r2, #47	; 0x2f
   318ba:	strb	r2, [r4, #0]
   318bc:	adds	r4, r0, #1
   318be:	mov	r2, r5
   318c0:	mov	r1, r8
   318c2:	mov	r0, r4
   318c4:	blx	8480 <memcpy@plt+0x4>
   318c8:	ldr	r3, [sp, #44]	; 0x2c
   318ca:	movs	r0, #0
   318cc:	strb	r0, [r4, r5]
   318ce:	str	r7, [r3, #0]
   318d0:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   318d4:	mov	r2, r3
   318d6:	b.n	31864 <print_all_devices@@Base+0x48c>
   318d8:	movs	r0, #2
   318da:	b.n	318d0 <print_all_devices@@Base+0x4f8>
   318dc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   318e0:	mov	r4, r1
   318e2:	ldr	r1, [pc, #172]	; (31990 <print_all_devices@@Base+0x5b8>)
   318e4:	sub.w	sp, sp, #4128	; 0x1020
   318e8:	mov	r5, r2
   318ea:	ldr	r2, [pc, #168]	; (31994 <print_all_devices@@Base+0x5bc>)
   318ec:	add	r1, pc
   318ee:	mov	r9, r3
   318f0:	add.w	r3, sp, #4160	; 0x1040
   318f4:	add	r7, sp, #24
   318f6:	ldr	r2, [r1, r2]
   318f8:	mov	r6, r0
   318fa:	ldr.w	sl, [r3]
   318fe:	add.w	r3, sp, #4096	; 0x1000
   31902:	ldr	r2, [r2, #0]
   31904:	str	r2, [r3, #28]
   31906:	mov.w	r2, #0
   3190a:	mov	r0, r7
   3190c:	mov.w	r2, #4096	; 0x1000
   31910:	movs	r1, #0
   31912:	adds	r3, #28
   31914:	blx	87c4 <memset@plt+0x4>
   31918:	mov	r1, r4
   3191a:	add.w	r8, sp, #32
   3191e:	ldr.w	r0, [r1, #8]!
   31922:	sub.w	r3, r8, #16
   31926:	ldr	r1, [r1, #4]
   31928:	stmia	r3!, {r0, r1}
   3192a:	ldrd	r2, r3, [r8, #-16]
   3192e:	ldr	r1, [pc, #92]	; (3198c <print_all_devices@@Base+0x5b4>)
   31930:	ldr	r0, [r6, #4]
   31932:	strd	r2, r3, [r8, #-8]
   31936:	ldr	r2, [r5, #0]
   31938:	ldr	r3, [r5, #4]
   3193a:	str	r2, [r7, #8]
   3193c:	mov	r2, r7
   3193e:	str.w	r3, [r8, #4]
   31942:	blx	85bc <ioctl@plt>
   31946:	adds	r0, #1
   31948:	beq.n	3197e <print_all_devices@@Base+0x5a6>
   3194a:	add	r3, sp, #40	; 0x28
   3194c:	str	r3, [sp, #12]
   3194e:	mov	r0, r3
   31950:	blx	8748 <strlen@plt>
   31954:	ldr	r3, [sp, #12]
   31956:	ldrh	r2, [r5, #16]
   31958:	mov	r1, r9
   3195a:	strd	r0, sl, [sp]
   3195e:	mov	r0, r6
   31960:	bl	31834 <print_all_devices@@Base+0x45c>
   31964:	ldr	r1, [pc, #48]	; (31998 <print_all_devices@@Base+0x5c0>)
   31966:	add.w	r3, sp, #4096	; 0x1000
   3196a:	ldr	r2, [pc, #40]	; (31994 <print_all_devices@@Base+0x5bc>)
   3196c:	adds	r3, #28
   3196e:	add	r1, pc
   31970:	ldr	r2, [r1, r2]
   31972:	ldr	r1, [r2, #0]
   31974:	ldr	r2, [r3, #0]
   31976:	eors	r1, r2
   31978:	beq.n	31982 <print_all_devices@@Base+0x5aa>
   3197a:	blx	8510 <__stack_chk_fail@plt>
   3197e:	movs	r0, #13
   31980:	b.n	31964 <print_all_devices@@Base+0x58c>
   31982:	add.w	sp, sp, #4128	; 0x1020
   31986:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   3198a:	nop
   3198c:	str	r4, [sp, #72]	; 0x48
   3198e:	beq.n	31992 <print_all_devices@@Base+0x5ba>
   31990:	movs	r4, #152	; 0x98
   31992:	movs	r3, r0
   31994:	lsls	r0, r4, #8
   31996:	movs	r0, r0
   31998:	movs	r4, #22
   3199a:	movs	r3, r0
   3199c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   319a0:	sub.w	sp, sp, #4128	; 0x1020
   319a4:	sub	sp, #4
   319a6:	ldr	r1, [pc, #168]	; (31a50 <print_all_devices@@Base+0x678>)
   319a8:	mov	r7, r2
   319aa:	mov	r6, r3
   319ac:	ldr	r2, [pc, #164]	; (31a54 <print_all_devices@@Base+0x67c>)
   319ae:	add.w	r3, sp, #4160	; 0x1040
   319b2:	add	r1, pc
   319b4:	add	r5, sp, #24
   319b6:	ldr.w	r8, [r3, #8]
   319ba:	adds	r3, #8
   319bc:	ldr	r2, [r1, r2]
   319be:	add.w	r3, sp, #4096	; 0x1000
   319c2:	mov	r4, r0
   319c4:	mov	r0, r5
   319c6:	ldr	r2, [r2, #0]
   319c8:	str	r2, [r3, #28]
   319ca:	mov.w	r2, #0
   319ce:	movs	r1, #0
   319d0:	mov.w	r2, #4096	; 0x1000
   319d4:	adds	r3, #28
   319d6:	blx	87c4 <memset@plt+0x4>
   319da:	add.w	r3, sp, #4160	; 0x1040
   319de:	ldr	r1, [pc, #108]	; (31a4c <print_all_devices@@Base+0x674>)
   319e0:	add.w	r9, sp, #32
   319e4:	ldrd	r2, r3, [r3]
   319e8:	ldr	r0, [r4, #8]
   319ea:	str	r7, [r5, #8]
   319ec:	strd	r2, r3, [r9, #-8]
   319f0:	mov	r2, r5
   319f2:	str.w	r6, [r9, #4]
   319f6:	blx	85bc <ioctl@plt>
   319fa:	adds	r0, #1
   319fc:	beq.n	31a3e <print_all_devices@@Base+0x666>
   319fe:	add	r1, sp, #40	; 0x28
   31a00:	str	r1, [sp, #20]
   31a02:	mov	r0, r1
   31a04:	blx	8748 <strlen@plt>
   31a08:	add	r3, sp, #296	; 0x128
   31a0a:	str	r3, [sp, #12]
   31a0c:	str	r0, [sp, #16]
   31a0e:	mov	r0, r3
   31a10:	blx	8748 <strlen@plt>
   31a14:	ldrd	r3, r2, [sp, #12]
   31a18:	ldr	r1, [sp, #20]
   31a1a:	strd	r0, r8, [sp]
   31a1e:	mov	r0, r4
   31a20:	bl	31834 <print_all_devices@@Base+0x45c>
   31a24:	ldr	r1, [pc, #48]	; (31a58 <print_all_devices@@Base+0x680>)
   31a26:	add.w	r3, sp, #4096	; 0x1000
   31a2a:	ldr	r2, [pc, #40]	; (31a54 <print_all_devices@@Base+0x67c>)
   31a2c:	adds	r3, #28
   31a2e:	add	r1, pc
   31a30:	ldr	r2, [r1, r2]
   31a32:	ldr	r1, [r2, #0]
   31a34:	ldr	r2, [r3, #0]
   31a36:	eors	r1, r2
   31a38:	beq.n	31a42 <print_all_devices@@Base+0x66a>
   31a3a:	blx	8510 <__stack_chk_fail@plt>
   31a3e:	movs	r0, #25
   31a40:	b.n	31a24 <print_all_devices@@Base+0x64c>
   31a42:	add.w	sp, sp, #4128	; 0x1020
   31a46:	add	sp, #4
   31a48:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   31a4c:	str	r4, [sp, #248]	; 0xf8
   31a4e:	beq.n	31a52 <print_all_devices@@Base+0x67a>
   31a50:	movs	r3, #210	; 0xd2
   31a52:	movs	r3, r0
   31a54:	lsls	r0, r4, #8
   31a56:	movs	r0, r0
   31a58:	movs	r3, #86	; 0x56
   31a5a:	movs	r3, r0
   31a5c:	ldrb	r1, [r0, #0]
   31a5e:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31a62:	mov	r4, r0
   31a64:	ldr	r3, [r0, #20]
   31a66:	subs	r2, r3, #1
   31a68:	cbnz	r1, 31a6e <print_all_devices@@Base+0x696>
   31a6a:	cmp	r3, #1
   31a6c:	bne.n	31a76 <print_all_devices@@Base+0x69e>
   31a6e:	str	r2, [r4, #20]
   31a70:	movs	r0, #0
   31a72:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31a76:	ldr	r1, [r0, #16]
   31a78:	movw	r0, #4112	; 0x1010
   31a7c:	str	r2, [r4, #20]
   31a7e:	ldr.w	sl, [pc, #108]	; 31aec <print_all_devices@@Base+0x714>
   31a82:	mla	r2, r0, r2, r1
   31a86:	ldr	r6, [r4, #8]
   31a88:	mla	r3, r0, r3, r1
   31a8c:	add	sl, pc
   31a8e:	ldr.w	r7, [r2, #-4]
   31a92:	subs	r5, r3, #4
   31a94:	ldr	r3, [r5, #0]
   31a96:	cmp	r3, r7
   31a98:	bhi.n	31aaa <print_all_devices@@Base+0x6d2>
   31a9a:	ldrd	r3, r0, [r4, #4]
   31a9e:	cmp	r0, r3
   31aa0:	beq.n	31aa6 <print_all_devices@@Base+0x6ce>
   31aa2:	blx	8998 <close@plt>
   31aa6:	str	r6, [r4, #8]
   31aa8:	b.n	31a70 <print_all_devices@@Base+0x698>
   31aaa:	cbz	r7, 31ab4 <print_all_devices@@Base+0x6dc>
   31aac:	ldr	r3, [r4, #28]
   31aae:	ldrb	r3, [r3, r7]
   31ab0:	cmp	r3, #47	; 0x2f
   31ab2:	bne.n	31ae2 <print_all_devices@@Base+0x70a>
   31ab4:	movs	r2, #0
   31ab6:	mov	r1, sl
   31ab8:	mov	r0, r6
   31aba:	blx	8504 <openat@plt>
   31abe:	ldr	r3, [r4, #8]
   31ac0:	cmp	r3, r6
   31ac2:	mov	r8, r0
   31ac4:	beq.n	31ada <print_all_devices@@Base+0x702>
   31ac6:	blx	8784 <__errno_location@plt>
   31aca:	ldr.w	fp, [r0]
   31ace:	mov	r9, r0
   31ad0:	mov	r0, r6
   31ad2:	blx	8998 <close@plt>
   31ad6:	str.w	fp, [r9]
   31ada:	cmp.w	r8, #4294967295	; 0xffffffff
   31ade:	beq.n	31ae6 <print_all_devices@@Base+0x70e>
   31ae0:	mov	r6, r8
   31ae2:	adds	r7, #1
   31ae4:	b.n	31a94 <print_all_devices@@Base+0x6bc>
   31ae6:	movs	r0, #7
   31ae8:	b.n	31a72 <print_all_devices@@Base+0x69a>
   31aea:	nop
   31aec:	lsrs	r7, r3, #20
   31aee:	movs	r2, r0

00031af0 <btrfs_util_is_subvolume@@Base>:
   31af0:	ldr	r2, [pc, #132]	; (31b78 <btrfs_util_is_subvolume@@Base+0x88>)
   31af2:	ldr	r3, [pc, #136]	; (31b7c <btrfs_util_is_subvolume@@Base+0x8c>)
   31af4:	add	r2, pc
   31af6:	push	{r4, lr}
   31af8:	sub	sp, #160	; 0xa0
   31afa:	ldr	r3, [r2, r3]
   31afc:	add	r1, sp, #92	; 0x5c
   31afe:	mov	r4, r0
   31b00:	ldr	r3, [r3, #0]
   31b02:	str	r3, [sp, #156]	; 0x9c
   31b04:	mov.w	r3, #0
   31b08:	blx	8458 <statfs@plt>
   31b0c:	adds	r0, #1
   31b0e:	beq.n	31b62 <btrfs_util_is_subvolume@@Base+0x72>
   31b10:	ldr	r3, [pc, #96]	; (31b74 <btrfs_util_is_subvolume@@Base+0x84>)
   31b12:	ldr	r2, [sp, #92]	; 0x5c
   31b14:	cmp	r2, r3
   31b16:	beq.n	31b36 <btrfs_util_is_subvolume@@Base+0x46>
   31b18:	blx	8784 <__errno_location@plt>
   31b1c:	movs	r3, #22
   31b1e:	str	r3, [r0, #0]
   31b20:	movs	r0, #4
   31b22:	ldr	r2, [pc, #92]	; (31b80 <btrfs_util_is_subvolume@@Base+0x90>)
   31b24:	ldr	r3, [pc, #84]	; (31b7c <btrfs_util_is_subvolume@@Base+0x8c>)
   31b26:	add	r2, pc
   31b28:	ldr	r3, [r2, r3]
   31b2a:	ldr	r2, [r3, #0]
   31b2c:	ldr	r3, [sp, #156]	; 0x9c
   31b2e:	eors	r2, r3
   31b30:	beq.n	31b6e <btrfs_util_is_subvolume@@Base+0x7e>
   31b32:	blx	8510 <__stack_chk_fail@plt>
   31b36:	mov	r1, sp
   31b38:	mov	r0, r4
   31b3a:	bl	38d98 <__libc_csu_fini@@Base+0x4>
   31b3e:	adds	r0, #1
   31b40:	beq.n	31b66 <btrfs_util_is_subvolume@@Base+0x76>
   31b42:	ldr	r3, [sp, #12]
   31b44:	cmp.w	r3, #256	; 0x100
   31b48:	bne.n	31b56 <btrfs_util_is_subvolume@@Base+0x66>
   31b4a:	ldr	r3, [sp, #16]
   31b4c:	and.w	r3, r3, #61440	; 0xf000
   31b50:	cmp.w	r3, #16384	; 0x4000
   31b54:	beq.n	31b6a <btrfs_util_is_subvolume@@Base+0x7a>
   31b56:	blx	8784 <__errno_location@plt>
   31b5a:	movs	r3, #22
   31b5c:	str	r3, [r0, #0]
   31b5e:	movs	r0, #5
   31b60:	b.n	31b22 <btrfs_util_is_subvolume@@Base+0x32>
   31b62:	movs	r0, #11
   31b64:	b.n	31b22 <btrfs_util_is_subvolume@@Base+0x32>
   31b66:	movs	r0, #10
   31b68:	b.n	31b22 <btrfs_util_is_subvolume@@Base+0x32>
   31b6a:	movs	r0, #0
   31b6c:	b.n	31b22 <btrfs_util_is_subvolume@@Base+0x32>
   31b6e:	add	sp, #160	; 0xa0
   31b70:	pop	{r4, pc}
   31b72:	nop
   31b74:	ldr	r6, [r7, #0]
   31b76:	str	r1, [sp, #140]	; 0x8c
   31b78:	movs	r2, #144	; 0x90
   31b7a:	movs	r3, r0
   31b7c:	lsls	r0, r4, #8
   31b7e:	movs	r0, r0
   31b80:	movs	r2, #94	; 0x5e
   31b82:	movs	r3, r0

00031b84 <btrfs_util_is_subvolume_fd@@Base>:
   31b84:	ldr	r2, [pc, #132]	; (31c0c <btrfs_util_is_subvolume_fd@@Base+0x88>)
   31b86:	ldr	r3, [pc, #136]	; (31c10 <btrfs_util_is_subvolume_fd@@Base+0x8c>)
   31b88:	add	r2, pc
   31b8a:	push	{r4, lr}
   31b8c:	sub	sp, #160	; 0xa0
   31b8e:	ldr	r3, [r2, r3]
   31b90:	add	r1, sp, #92	; 0x5c
   31b92:	mov	r4, r0
   31b94:	ldr	r3, [r3, #0]
   31b96:	str	r3, [sp, #156]	; 0x9c
   31b98:	mov.w	r3, #0
   31b9c:	blx	8844 <fstatfs@plt>
   31ba0:	adds	r0, #1
   31ba2:	beq.n	31bf6 <btrfs_util_is_subvolume_fd@@Base+0x72>
   31ba4:	ldr	r3, [pc, #96]	; (31c08 <btrfs_util_is_subvolume_fd@@Base+0x84>)
   31ba6:	ldr	r2, [sp, #92]	; 0x5c
   31ba8:	cmp	r2, r3
   31baa:	beq.n	31bca <btrfs_util_is_subvolume_fd@@Base+0x46>
   31bac:	blx	8784 <__errno_location@plt>
   31bb0:	movs	r3, #22
   31bb2:	str	r3, [r0, #0]
   31bb4:	movs	r0, #4
   31bb6:	ldr	r2, [pc, #92]	; (31c14 <btrfs_util_is_subvolume_fd@@Base+0x90>)
   31bb8:	ldr	r3, [pc, #84]	; (31c10 <btrfs_util_is_subvolume_fd@@Base+0x8c>)
   31bba:	add	r2, pc
   31bbc:	ldr	r3, [r2, r3]
   31bbe:	ldr	r2, [r3, #0]
   31bc0:	ldr	r3, [sp, #156]	; 0x9c
   31bc2:	eors	r2, r3
   31bc4:	beq.n	31c02 <btrfs_util_is_subvolume_fd@@Base+0x7e>
   31bc6:	blx	8510 <__stack_chk_fail@plt>
   31bca:	mov	r1, sp
   31bcc:	mov	r0, r4
   31bce:	bl	38da4 <__libc_csu_fini@@Base+0x10>
   31bd2:	adds	r0, #1
   31bd4:	beq.n	31bfa <btrfs_util_is_subvolume_fd@@Base+0x76>
   31bd6:	ldr	r3, [sp, #12]
   31bd8:	cmp.w	r3, #256	; 0x100
   31bdc:	bne.n	31bea <btrfs_util_is_subvolume_fd@@Base+0x66>
   31bde:	ldr	r3, [sp, #16]
   31be0:	and.w	r3, r3, #61440	; 0xf000
   31be4:	cmp.w	r3, #16384	; 0x4000
   31be8:	beq.n	31bfe <btrfs_util_is_subvolume_fd@@Base+0x7a>
   31bea:	blx	8784 <__errno_location@plt>
   31bee:	movs	r3, #22
   31bf0:	str	r3, [r0, #0]
   31bf2:	movs	r0, #5
   31bf4:	b.n	31bb6 <btrfs_util_is_subvolume_fd@@Base+0x32>
   31bf6:	movs	r0, #11
   31bf8:	b.n	31bb6 <btrfs_util_is_subvolume_fd@@Base+0x32>
   31bfa:	movs	r0, #10
   31bfc:	b.n	31bb6 <btrfs_util_is_subvolume_fd@@Base+0x32>
   31bfe:	movs	r0, #0
   31c00:	b.n	31bb6 <btrfs_util_is_subvolume_fd@@Base+0x32>
   31c02:	add	sp, #160	; 0xa0
   31c04:	pop	{r4, pc}
   31c06:	nop
   31c08:	ldr	r6, [r7, #0]
   31c0a:	str	r1, [sp, #140]	; 0x8c
   31c0c:	movs	r1, #252	; 0xfc
   31c0e:	movs	r3, r0
   31c10:	lsls	r0, r4, #8
   31c12:	movs	r0, r0
   31c14:	movs	r1, #202	; 0xca
   31c16:	movs	r3, r0

00031c18 <btrfs_util_subvolume_id_fd@@Base>:
   31c18:	push	{r4, r5, r6, lr}
   31c1a:	mov	r4, r1
   31c1c:	ldr	r1, [pc, #120]	; (31c98 <btrfs_util_subvolume_id_fd@@Base+0x80>)
   31c1e:	sub.w	sp, sp, #4096	; 0x1000
   31c22:	ldr	r2, [pc, #120]	; (31c9c <btrfs_util_subvolume_id_fd@@Base+0x84>)
   31c24:	sub	sp, #8
   31c26:	add	r1, pc
   31c28:	add.w	r3, sp, #4096	; 0x1000
   31c2c:	adds	r3, #4
   31c2e:	mov	r5, r0
   31c30:	ldr	r2, [r1, r2]
   31c32:	movs	r1, #0
   31c34:	add	r6, sp, #8
   31c36:	ldr	r2, [r2, #0]
   31c38:	str	r2, [r3, #0]
   31c3a:	mov.w	r2, #0
   31c3e:	mov	r3, sp
   31c40:	mov.w	r2, #4096	; 0x1000
   31c44:	mov	r0, r3
   31c46:	blx	87c4 <memset@plt+0x4>
   31c4a:	movs	r1, #0
   31c4c:	mov	r3, r0
   31c4e:	mov.w	r0, #256	; 0x100
   31c52:	mov	r2, r3
   31c54:	strd	r0, r1, [r3, #8]
   31c58:	ldr	r1, [pc, #56]	; (31c94 <btrfs_util_subvolume_id_fd@@Base+0x7c>)
   31c5a:	mov	r0, r5
   31c5c:	blx	85bc <ioctl@plt>
   31c60:	ldr	r1, [pc, #60]	; (31ca0 <btrfs_util_subvolume_id_fd@@Base+0x88>)
   31c62:	add	r1, pc
   31c64:	adds	r0, #1
   31c66:	ittet	ne
   31c68:	ldrdne	r2, r3, [r6, #-8]
   31c6c:	movne	r0, #0
   31c6e:	moveq	r0, #13
   31c70:	strdne	r2, r3, [r4]
   31c74:	add.w	r3, sp, #4096	; 0x1000
   31c78:	ldr	r2, [pc, #32]	; (31c9c <btrfs_util_subvolume_id_fd@@Base+0x84>)
   31c7a:	adds	r3, #4
   31c7c:	ldr	r2, [r1, r2]
   31c7e:	ldr	r1, [r2, #0]
   31c80:	ldr	r2, [r3, #0]
   31c82:	eors	r1, r2
   31c84:	beq.n	31c8a <btrfs_util_subvolume_id_fd@@Base+0x72>
   31c86:	blx	8510 <__stack_chk_fail@plt>
   31c8a:	add.w	sp, sp, #4096	; 0x1000
   31c8e:	add	sp, #8
   31c90:	pop	{r4, r5, r6, pc}
   31c92:	nop
   31c94:	str	r4, [sp, #72]	; 0x48
   31c96:	beq.n	31c9a <btrfs_util_subvolume_id_fd@@Base+0x82>
   31c98:	movs	r1, #94	; 0x5e
   31c9a:	movs	r3, r0
   31c9c:	lsls	r0, r4, #8
   31c9e:	movs	r0, r0
   31ca0:	movs	r1, #34	; 0x22
   31ca2:	movs	r3, r0

00031ca4 <btrfs_util_subvolume_id@@Base>:
   31ca4:	push	{r3, r4, r5, r6, r7, lr}
   31ca6:	mov	r4, r1
   31ca8:	movs	r1, #0
   31caa:	blx	8700 <open@plt>
   31cae:	adds	r3, r0, #1
   31cb0:	mov	r6, r0
   31cb2:	beq.n	31cd0 <btrfs_util_subvolume_id@@Base+0x2c>
   31cb4:	mov	r1, r4
   31cb6:	bl	31c18 <btrfs_util_subvolume_id_fd@@Base>
   31cba:	mov	r4, r0
   31cbc:	blx	8784 <__errno_location@plt>
   31cc0:	ldr	r7, [r0, #0]
   31cc2:	mov	r5, r0
   31cc4:	mov	r0, r6
   31cc6:	blx	8998 <close@plt>
   31cca:	str	r7, [r5, #0]
   31ccc:	mov	r0, r4
   31cce:	pop	{r3, r4, r5, r6, r7, pc}
   31cd0:	movs	r4, #7
   31cd2:	b.n	31ccc <btrfs_util_subvolume_id@@Base+0x28>
   31cd4:	push	{r4, r5, r6, r7, lr}
   31cd6:	mov	r4, r2
   31cd8:	ldr	r2, [pc, #156]	; (31d78 <btrfs_util_subvolume_id@@Base+0xd4>)
   31cda:	mov	r5, r3
   31cdc:	ldr	r3, [pc, #156]	; (31d7c <btrfs_util_subvolume_id@@Base+0xd8>)
   31cde:	subw	sp, sp, #2068	; 0x814
   31ce2:	add	r2, pc
   31ce4:	mov	r6, r0
   31ce6:	mov	r7, r1
   31ce8:	ldr	r3, [r2, r3]
   31cea:	ldr	r3, [r3, #0]
   31cec:	str.w	r3, [sp, #2060]	; 0x80c
   31cf0:	mov.w	r3, #0
   31cf4:	bl	31b84 <btrfs_util_is_subvolume_fd@@Base>
   31cf8:	subs	r3, r0, #4
   31cfa:	cmp	r3, #1
   31cfc:	bhi.n	31d0a <btrfs_util_subvolume_id@@Base+0x66>
   31cfe:	blx	8784 <__errno_location@plt>
   31d02:	movs	r3, #2
   31d04:	str	r3, [r0, #0]
   31d06:	movs	r0, #6
   31d08:	b.n	31d1c <btrfs_util_subvolume_id@@Base+0x78>
   31d0a:	cbnz	r0, 31d1c <btrfs_util_subvolume_id@@Base+0x78>
   31d0c:	ldr	r1, [pc, #100]	; (31d74 <btrfs_util_subvolume_id@@Base+0xd0>)
   31d0e:	add	r2, sp, #8
   31d10:	mov	r0, r7
   31d12:	blx	85bc <ioctl@plt>
   31d16:	adds	r0, #1
   31d18:	bne.n	31d32 <btrfs_util_subvolume_id@@Base+0x8e>
   31d1a:	movs	r0, #26
   31d1c:	ldr	r2, [pc, #96]	; (31d80 <btrfs_util_subvolume_id@@Base+0xdc>)
   31d1e:	ldr	r3, [pc, #92]	; (31d7c <btrfs_util_subvolume_id@@Base+0xd8>)
   31d20:	add	r2, pc
   31d22:	ldr	r3, [r2, r3]
   31d24:	ldr	r2, [r3, #0]
   31d26:	ldr.w	r3, [sp, #2060]	; 0x80c
   31d2a:	eors	r2, r3
   31d2c:	beq.n	31d6e <btrfs_util_subvolume_id@@Base+0xca>
   31d2e:	blx	8510 <__stack_chk_fail@plt>
   31d32:	ldr	r1, [pc, #64]	; (31d74 <btrfs_util_subvolume_id@@Base+0xd0>)
   31d34:	add.w	r2, sp, #1032	; 0x408
   31d38:	mov	r0, r6
   31d3a:	blx	85bc <ioctl@plt>
   31d3e:	adds	r0, #1
   31d40:	beq.n	31d1a <btrfs_util_subvolume_id@@Base+0x76>
   31d42:	add.w	r1, sp, #1048	; 0x418
   31d46:	add	r0, sp, #24
   31d48:	movs	r2, #16
   31d4a:	blx	84a8 <memcmp@plt+0x4>
   31d4e:	cmp	r0, #0
   31d50:	bne.n	31cfe <btrfs_util_subvolume_id@@Base+0x5a>
   31d52:	mov	r7, sp
   31d54:	mov	r0, r6
   31d56:	mov	r1, r7
   31d58:	bl	31c18 <btrfs_util_subvolume_id_fd@@Base>
   31d5c:	cmp	r0, #0
   31d5e:	bne.n	31d1c <btrfs_util_subvolume_id@@Base+0x78>
   31d60:	ldrd	r2, r3, [r7]
   31d64:	cmp	r3, r5
   31d66:	it	eq
   31d68:	cmpeq	r2, r4
   31d6a:	beq.n	31d1c <btrfs_util_subvolume_id@@Base+0x78>
   31d6c:	b.n	31cfe <btrfs_util_subvolume_id@@Base+0x5a>
   31d6e:	addw	sp, sp, #2068	; 0x814
   31d72:	pop	{r4, r5, r6, r7, pc}
   31d74:	str	r4, [sp, #124]	; 0x7c
   31d76:	strh	r0, [r0, #32]
   31d78:	movs	r0, #162	; 0xa2
   31d7a:	movs	r3, r0
   31d7c:	lsls	r0, r4, #8
   31d7e:	movs	r0, r0
   31d80:	movs	r0, #100	; 0x64
   31d82:	movs	r3, r0
   31d84:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   31d88:	mov	r6, r3
   31d8a:	ldrd	r3, r5, [r0, #20]
   31d8e:	mov	r4, r0
   31d90:	mov	r7, r2
   31d92:	cmp	r3, r5
   31d94:	bcc.n	31dac <btrfs_util_subvolume_id@@Base+0x108>
   31d96:	lsls	r5, r5, #1
   31d98:	ldr	r0, [r0, #16]
   31d9a:	movw	r2, #4112	; 0x1010
   31d9e:	mov	r1, r5
   31da0:	bl	33160 <btrfs_util_deleted_subvolumes@@Base+0x38>
   31da4:	cmp	r0, #0
   31da6:	beq.n	31e64 <btrfs_util_subvolume_id@@Base+0x1c0>
   31da8:	str	r5, [r4, #24]
   31daa:	str	r0, [r4, #16]
   31dac:	ldr	r3, [r4, #16]
   31dae:	movw	r8, #4112	; 0x1010
   31db2:	ldr	r5, [r4, #20]
   31db4:	mov	r2, r8
   31db6:	movs	r1, #0
   31db8:	mla	r5, r8, r5, r3
   31dbc:	mov	r0, r5
   31dbe:	blx	87c4 <memset@plt+0x4>
   31dc2:	ldr	r2, [sp, #24]
   31dc4:	movw	r3, #4108	; 0x100c
   31dc8:	str	r2, [r5, r3]
   31dca:	ldrb	r3, [r4, #0]
   31dcc:	cbz	r3, 31e0e <btrfs_util_subvolume_id@@Base+0x16a>
   31dce:	movs	r2, #1
   31dd0:	movs	r3, #0
   31dd2:	movs	r0, #0
   31dd4:	movs	r1, #0
   31dd6:	strd	r2, r3, [r5]
   31dda:	movs	r3, #156	; 0x9c
   31ddc:	mov.w	r2, #4294967295	; 0xffffffff
   31de0:	strd	r3, r3, [r5, #56]	; 0x38
   31de4:	strd	r7, r6, [r5, #8]
   31de8:	mov.w	r3, #4294967295	; 0xffffffff
   31dec:	strd	r7, r6, [r5, #16]
   31df0:	strd	r2, r3, [r5, #32]
   31df4:	strd	r2, r3, [r5, #48]	; 0x30
   31df8:	movs	r3, #0
   31dfa:	strd	r0, r1, [r5, #24]
   31dfe:	strd	r0, r1, [r5, #40]	; 0x28
   31e02:	str	r3, [r5, #64]	; 0x40
   31e04:	ldr	r3, [r4, #20]
   31e06:	movs	r5, #0
   31e08:	adds	r3, #1
   31e0a:	str	r3, [r4, #20]
   31e0c:	b.n	31e52 <btrfs_util_subvolume_id@@Base+0x1ae>
   31e0e:	ldr	r3, [r4, #20]
   31e10:	strd	r7, r6, [r5]
   31e14:	cmp	r3, #0
   31e16:	beq.n	31e04 <btrfs_util_subvolume_id@@Base+0x160>
   31e18:	ldr	r2, [r4, #16]
   31e1a:	ldr	r0, [r4, #8]
   31e1c:	mla	r3, r8, r3, r2
   31e20:	ldr	r2, [r4, #28]
   31e22:	ldr.w	r3, [r3, #-4]
   31e26:	adds	r1, r2, r3
   31e28:	ldrb	r3, [r2, r3]
   31e2a:	movs	r2, #0
   31e2c:	cmp	r3, #47	; 0x2f
   31e2e:	it	eq
   31e30:	addeq	r1, #1
   31e32:	blx	8504 <openat@plt>
   31e36:	cmp.w	r0, #4294967295	; 0xffffffff
   31e3a:	mov	r8, r0
   31e3c:	beq.n	31e68 <btrfs_util_subvolume_id@@Base+0x1c4>
   31e3e:	ldr	r1, [r4, #8]
   31e40:	mov	r2, r7
   31e42:	mov	r3, r6
   31e44:	bl	31cd4 <btrfs_util_subvolume_id@@Base+0x30>
   31e48:	mov	r5, r0
   31e4a:	cbz	r0, 31e58 <btrfs_util_subvolume_id@@Base+0x1b4>
   31e4c:	mov	r0, r8
   31e4e:	blx	8998 <close@plt>
   31e52:	mov	r0, r5
   31e54:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   31e58:	ldr	r0, [r4, #8]
   31e5a:	blx	8998 <close@plt>
   31e5e:	str.w	r8, [r4, #8]
   31e62:	b.n	31e04 <btrfs_util_subvolume_id@@Base+0x160>
   31e64:	movs	r5, #2
   31e66:	b.n	31e52 <btrfs_util_subvolume_id@@Base+0x1ae>
   31e68:	movs	r5, #7
   31e6a:	b.n	31e52 <btrfs_util_subvolume_id@@Base+0x1ae>

00031e6c <btrfs_util_subvolume_path_fd@@Base>:
   31e6c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31e70:	sub.w	sp, sp, #8192	; 0x2000
   31e74:	sub	sp, #44	; 0x2c
   31e76:	ldr	r5, [pc, #496]	; (32068 <btrfs_util_subvolume_path_fd@@Base+0x1fc>)
   31e78:	add.w	r1, sp, #8256	; 0x2040
   31e7c:	ldr	r4, [pc, #492]	; (3206c <btrfs_util_subvolume_path_fd@@Base+0x200>)
   31e7e:	adds	r1, #16
   31e80:	add	r5, pc
   31e82:	strd	r2, r3, [sp, #24]
   31e86:	orrs	r3, r2
   31e88:	ldr	r1, [r1, #0]
   31e8a:	add	r6, sp, #40	; 0x28
   31e8c:	sub.w	fp, r6, #16
   31e90:	mov	r7, r0
   31e92:	str	r1, [sp, #16]
   31e94:	add.w	r1, sp, #8192	; 0x2000
   31e98:	ldr	r4, [r5, r4]
   31e9a:	add.w	r1, r1, #36	; 0x24
   31e9e:	ldr	r4, [r4, #0]
   31ea0:	str	r4, [r1, #0]
   31ea2:	mov.w	r4, #0
   31ea6:	beq.n	31eb8 <btrfs_util_subvolume_path_fd@@Base+0x4c>
   31ea8:	mov.w	r0, #4096	; 0x1000
   31eac:	blx	8678 <malloc@plt+0x4>
   31eb0:	mov	r4, r0
   31eb2:	cbnz	r0, 31ee6 <btrfs_util_subvolume_path_fd@@Base+0x7a>
   31eb4:	movs	r0, #2
   31eb6:	b.n	31eca <btrfs_util_subvolume_path_fd@@Base+0x5e>
   31eb8:	bl	31b84 <btrfs_util_is_subvolume_fd@@Base>
   31ebc:	cbnz	r0, 31eca <btrfs_util_subvolume_path_fd@@Base+0x5e>
   31ebe:	mov	r1, fp
   31ec0:	mov	r0, r7
   31ec2:	bl	31c18 <btrfs_util_subvolume_id_fd@@Base>
   31ec6:	cmp	r0, #0
   31ec8:	beq.n	31ea8 <btrfs_util_subvolume_path_fd@@Base+0x3c>
   31eca:	ldr	r1, [pc, #420]	; (32070 <btrfs_util_subvolume_path_fd@@Base+0x204>)
   31ecc:	add.w	r3, sp, #8192	; 0x2000
   31ed0:	ldr	r2, [pc, #408]	; (3206c <btrfs_util_subvolume_path_fd@@Base+0x200>)
   31ed2:	adds	r3, #36	; 0x24
   31ed4:	add	r1, pc
   31ed6:	ldr	r2, [r1, r2]
   31ed8:	ldr	r1, [r2, #0]
   31eda:	ldr	r2, [r3, #0]
   31edc:	eors	r1, r2
   31ede:	beq.w	32056 <btrfs_util_subvolume_path_fd@@Base+0x1ea>
   31ee2:	blx	8510 <__stack_chk_fail@plt>
   31ee6:	addw	r5, r0, #4095	; 0xfff
   31eea:	movs	r3, #0
   31eec:	strb.w	r3, [r0, #4095]	; 0xfff
   31ef0:	mov.w	r3, #4096	; 0x1000
   31ef4:	str	r3, [sp, #0]
   31ef6:	ldrd	r8, r9, [fp]
   31efa:	cmp.w	r9, #0
   31efe:	it	eq
   31f00:	cmpeq.w	r8, #5
   31f04:	bne.n	31f20 <btrfs_util_subvolume_path_fd@@Base+0xb4>
   31f06:	cmp	r4, r5
   31f08:	beq.n	31f18 <btrfs_util_subvolume_path_fd@@Base+0xac>
   31f0a:	ldr	r3, [sp, #0]
   31f0c:	mov	r1, r5
   31f0e:	mov	r0, r4
   31f10:	add	r3, r4
   31f12:	subs	r2, r3, r5
   31f14:	blx	8424 <memmove@plt+0x4>
   31f18:	ldr	r3, [sp, #16]
   31f1a:	movs	r0, #0
   31f1c:	str	r4, [r3, #0]
   31f1e:	b.n	31eca <btrfs_util_subvolume_path_fd@@Base+0x5e>
   31f20:	sub.w	sl, r6, #8
   31f24:	mov.w	r2, #4096	; 0x1000
   31f28:	movs	r1, #0
   31f2a:	mov	r0, sl
   31f2c:	blx	87c4 <memset@plt+0x4>
   31f30:	movs	r2, #1
   31f32:	movs	r3, #0
   31f34:	ldr	r1, [pc, #296]	; (32060 <btrfs_util_subvolume_path_fd@@Base+0x1f4>)
   31f36:	strd	r2, r3, [r6, #-8]
   31f3a:	mov	r0, r7
   31f3c:	mov.w	r2, #4294967295	; 0xffffffff
   31f40:	mov.w	r3, #4294967295	; 0xffffffff
   31f44:	strd	r2, r3, [sl, #32]
   31f48:	strd	r2, r3, [sl, #48]	; 0x30
   31f4c:	mov	r2, sl
   31f4e:	movs	r3, #144	; 0x90
   31f50:	strd	r8, r9, [sl, #8]
   31f54:	strd	r3, r3, [sl, #56]	; 0x38
   31f58:	movs	r3, #1
   31f5a:	strd	r8, r9, [sl, #16]
   31f5e:	str.w	r3, [sl, #64]	; 0x40
   31f62:	blx	85bc <ioctl@plt>
   31f66:	adds	r0, #1
   31f68:	bne.n	31f74 <btrfs_util_subvolume_path_fd@@Base+0x108>
   31f6a:	mov	r0, r4
   31f6c:	blx	8434 <free@plt+0x4>
   31f70:	movs	r0, #12
   31f72:	b.n	31eca <btrfs_util_subvolume_path_fd@@Base+0x5e>
   31f74:	ldr.w	r3, [sl, #64]	; 0x40
   31f78:	cbnz	r3, 31f8c <btrfs_util_subvolume_path_fd@@Base+0x120>
   31f7a:	mov	r0, r4
   31f7c:	blx	8434 <free@plt+0x4>
   31f80:	blx	8784 <__errno_location@plt>
   31f84:	movs	r3, #2
   31f86:	str	r3, [r0, #0]
   31f88:	movs	r0, #6
   31f8a:	b.n	31eca <btrfs_util_subvolume_path_fd@@Base+0x5e>
   31f8c:	ldrd	r0, r1, [sl, #120]	; 0x78
   31f90:	add.w	r2, sp, #4128	; 0x1020
   31f94:	adds	r2, #8
   31f96:	ldrh.w	r9, [sl, #152]	; 0x98
   31f9a:	strd	r0, r1, [r2, #-8]
   31f9e:	strd	r0, r1, [fp]
   31fa2:	ldrd	r0, r1, [sl, #136]	; 0x88
   31fa6:	strd	r0, r1, [r2], #-8
   31faa:	mov	r0, r7
   31fac:	ldr	r1, [pc, #180]	; (32064 <btrfs_util_subvolume_path_fd@@Base+0x1f8>)
   31fae:	blx	85bc <ioctl@plt>
   31fb2:	adds	r0, #1
   31fb4:	beq.n	31f6a <btrfs_util_subvolume_path_fd@@Base+0xfe>
   31fb6:	add.w	r0, sp, #4128	; 0x1020
   31fba:	adds	r0, #16
   31fbc:	blx	8748 <strlen@plt>
   31fc0:	ldrd	r2, r3, [fp]
   31fc4:	cmp	r3, #0
   31fc6:	it	eq
   31fc8:	cmpeq	r2, #5
   31fca:	strd	r2, r3, [sp, #8]
   31fce:	ite	ne
   31fd0:	movne	r3, #1
   31fd2:	moveq	r3, #0
   31fd4:	add	r3, r9
   31fd6:	add	r3, r0
   31fd8:	mov	r8, r0
   31fda:	subs	r3, r5, r3
   31fdc:	cmp	r4, r3
   31fde:	bls.n	3201e <btrfs_util_subvolume_path_fd@@Base+0x1b2>
   31fe0:	ldr	r3, [sp, #0]
   31fe2:	lsls	r3, r3, #1
   31fe4:	str	r3, [sp, #4]
   31fe6:	mov	r0, r3
   31fe8:	blx	8678 <malloc@plt+0x4>
   31fec:	cbnz	r0, 31ff6 <btrfs_util_subvolume_path_fd@@Base+0x18a>
   31fee:	mov	r0, r4
   31ff0:	blx	8434 <free@plt+0x4>
   31ff4:	b.n	31eb4 <btrfs_util_subvolume_path_fd@@Base+0x48>
   31ff6:	ldr	r2, [sp, #0]
   31ff8:	ldr	r1, [sp, #4]
   31ffa:	add	r2, r4
   31ffc:	str	r0, [sp, #20]
   31ffe:	subs	r2, r2, r5
   32000:	sub.w	sl, r1, r2
   32004:	mov	r1, r5
   32006:	add	sl, r0
   32008:	mov	r0, sl
   3200a:	mov	r5, sl
   3200c:	blx	8480 <memcpy@plt+0x4>
   32010:	mov	r0, r4
   32012:	blx	8434 <free@plt+0x4>
   32016:	ldr	r3, [sp, #4]
   32018:	str	r3, [sp, #0]
   3201a:	ldr	r3, [sp, #20]
   3201c:	mov	r4, r3
   3201e:	sub.w	r5, r5, r9
   32022:	add.w	r1, r6, #146	; 0x92
   32026:	mov	r2, r9
   32028:	mov	r0, r5
   3202a:	sub.w	r5, r5, r8
   3202e:	blx	8480 <memcpy@plt+0x4>
   32032:	add.w	r1, sp, #4128	; 0x1020
   32036:	mov	r2, r8
   32038:	mov	r0, r5
   3203a:	adds	r1, #16
   3203c:	blx	8480 <memcpy@plt+0x4>
   32040:	ldrd	r2, r3, [sp, #8]
   32044:	cmp	r3, #0
   32046:	iteee	eq
   32048:	cmpeq	r2, #5
   3204a:	movne	r3, #47	; 0x2f
   3204c:	strbne.w	r3, [r5, #-1]
   32050:	addne.w	r5, r5, #4294967295	; 0xffffffff
   32054:	b.n	31ef6 <btrfs_util_subvolume_path_fd@@Base+0x8a>
   32056:	add.w	sp, sp, #8192	; 0x2000
   3205a:	add	sp, #44	; 0x2c
   3205c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32060:	str	r4, [sp, #68]	; 0x44
   32062:	beq.n	32066 <btrfs_util_subvolume_path_fd@@Base+0x1fa>
   32064:	str	r4, [sp, #72]	; 0x48
   32066:	beq.n	3206a <btrfs_util_subvolume_path_fd@@Base+0x1fe>
   32068:	subs	r4, r0, #4
   3206a:	movs	r3, r0
   3206c:	lsls	r0, r4, #8
   3206e:	movs	r0, r0
   32070:	subs	r0, r6, #2
   32072:	movs	r3, r0

00032074 <btrfs_util_subvolume_path@@Base>:
   32074:	push	{r4, r5, r6, r7, lr}
   32076:	sub	sp, #20
   32078:	movs	r1, #0
   3207a:	strd	r3, r2, [sp, #8]
   3207e:	blx	8700 <open@plt>
   32082:	adds	r3, r0, #1
   32084:	mov	r6, r0
   32086:	beq.n	320ac <btrfs_util_subvolume_path@@Base+0x38>
   32088:	ldr	r1, [sp, #40]	; 0x28
   3208a:	ldrd	r3, r2, [sp, #8]
   3208e:	str	r1, [sp, #0]
   32090:	bl	31e6c <btrfs_util_subvolume_path_fd@@Base>
   32094:	mov	r4, r0
   32096:	blx	8784 <__errno_location@plt>
   3209a:	ldr	r7, [r0, #0]
   3209c:	mov	r5, r0
   3209e:	mov	r0, r6
   320a0:	blx	8998 <close@plt>
   320a4:	str	r7, [r5, #0]
   320a6:	mov	r0, r4
   320a8:	add	sp, #20
   320aa:	pop	{r4, r5, r6, r7, pc}
   320ac:	movs	r4, #7
   320ae:	b.n	320a6 <btrfs_util_subvolume_path@@Base+0x32>

000320b0 <btrfs_util_subvolume_info_fd@@Base>:
   320b0:	push	{r4, r5, lr}
   320b2:	sub	sp, #20
   320b4:	mov	r4, r0
   320b6:	strd	r2, r3, [sp, #8]
   320ba:	orrs	r3, r2
   320bc:	ldr	r5, [sp, #32]
   320be:	beq.n	320e8 <btrfs_util_subvolume_info_fd@@Base+0x38>
   320c0:	ldrd	r2, r3, [sp, #8]
   320c4:	cmp	r3, #0
   320c6:	it	eq
   320c8:	cmpeq.w	r2, #256	; 0x100
   320cc:	bcc.n	3210e <btrfs_util_subvolume_info_fd@@Base+0x5e>
   320ce:	mov.w	r1, #4294967295	; 0xffffffff
   320d2:	cmp	r1, r3
   320d4:	mvn.w	r0, #255	; 0xff
   320d8:	it	eq
   320da:	cmpeq	r0, r2
   320dc:	bcc.n	32116 <btrfs_util_subvolume_info_fd@@Base+0x66>
   320de:	mov	r0, r4
   320e0:	str	r5, [sp, #0]
   320e2:	bl	31608 <print_all_devices@@Base+0x230>
   320e6:	b.n	320fc <btrfs_util_subvolume_info_fd@@Base+0x4c>
   320e8:	bl	31b84 <btrfs_util_is_subvolume_fd@@Base>
   320ec:	cbnz	r0, 320fc <btrfs_util_subvolume_info_fd@@Base+0x4c>
   320ee:	blx	855c <geteuid@plt>
   320f2:	cbz	r0, 32100 <btrfs_util_subvolume_info_fd@@Base+0x50>
   320f4:	mov	r1, r5
   320f6:	mov	r0, r4
   320f8:	bl	3140c <print_all_devices@@Base+0x34>
   320fc:	add	sp, #20
   320fe:	pop	{r4, r5, pc}
   32100:	add	r1, sp, #8
   32102:	mov	r0, r4
   32104:	bl	31c18 <btrfs_util_subvolume_id_fd@@Base>
   32108:	cmp	r0, #0
   3210a:	beq.n	320c0 <btrfs_util_subvolume_info_fd@@Base+0x10>
   3210c:	b.n	320fc <btrfs_util_subvolume_info_fd@@Base+0x4c>
   3210e:	cmp	r3, #0
   32110:	it	eq
   32112:	cmpeq	r2, #5
   32114:	beq.n	320de <btrfs_util_subvolume_info_fd@@Base+0x2e>
   32116:	blx	8784 <__errno_location@plt>
   3211a:	movs	r3, #2
   3211c:	str	r3, [r0, #0]
   3211e:	movs	r0, #6
   32120:	b.n	320fc <btrfs_util_subvolume_info_fd@@Base+0x4c>

00032122 <btrfs_util_subvolume_info@@Base>:
   32122:	push	{r4, r5, r6, r7, lr}
   32124:	sub	sp, #20
   32126:	movs	r1, #0
   32128:	strd	r3, r2, [sp, #8]
   3212c:	blx	8700 <open@plt>
   32130:	adds	r3, r0, #1
   32132:	mov	r6, r0
   32134:	beq.n	3215a <btrfs_util_subvolume_info@@Base+0x38>
   32136:	ldr	r1, [sp, #40]	; 0x28
   32138:	ldrd	r3, r2, [sp, #8]
   3213c:	str	r1, [sp, #0]
   3213e:	bl	320b0 <btrfs_util_subvolume_info_fd@@Base>
   32142:	mov	r4, r0
   32144:	blx	8784 <__errno_location@plt>
   32148:	ldr	r7, [r0, #0]
   3214a:	mov	r5, r0
   3214c:	mov	r0, r6
   3214e:	blx	8998 <close@plt>
   32152:	str	r7, [r5, #0]
   32154:	mov	r0, r4
   32156:	add	sp, #20
   32158:	pop	{r4, r5, r6, r7, pc}
   3215a:	movs	r4, #7
   3215c:	b.n	32154 <btrfs_util_subvolume_info@@Base+0x32>

0003215e <btrfs_util_get_subvolume_read_only_fd@@Base>:
   3215e:	push	{r0, r1, r2, r3, r4, lr}
   32160:	mov	r4, r1
   32162:	ldr	r2, [pc, #68]	; (321a8 <btrfs_util_get_subvolume_read_only_fd@@Base+0x4a>)
   32164:	ldr	r3, [pc, #68]	; (321ac <btrfs_util_get_subvolume_read_only_fd@@Base+0x4e>)
   32166:	add	r2, pc
   32168:	ldr	r1, [pc, #56]	; (321a4 <btrfs_util_get_subvolume_read_only_fd@@Base+0x46>)
   3216a:	ldr	r3, [r2, r3]
   3216c:	mov	r2, sp
   3216e:	ldr	r3, [r3, #0]
   32170:	str	r3, [sp, #12]
   32172:	mov.w	r3, #0
   32176:	blx	85bc <ioctl@plt>
   3217a:	ldr	r2, [pc, #52]	; (321b0 <btrfs_util_get_subvolume_read_only_fd@@Base+0x52>)
   3217c:	add	r2, pc
   3217e:	adds	r0, #1
   32180:	ittet	ne
   32182:	ldrne	r3, [sp, #0]
   32184:	movne	r0, #0
   32186:	moveq	r0, #14
   32188:	ubfxne	r3, r3, #1, #1
   3218c:	it	ne
   3218e:	strbne	r3, [r4, #0]
   32190:	ldr	r3, [pc, #24]	; (321ac <btrfs_util_get_subvolume_read_only_fd@@Base+0x4e>)
   32192:	ldr	r3, [r2, r3]
   32194:	ldr	r2, [r3, #0]
   32196:	ldr	r3, [sp, #12]
   32198:	eors	r2, r3
   3219a:	beq.n	321a0 <btrfs_util_get_subvolume_read_only_fd@@Base+0x42>
   3219c:	blx	8510 <__stack_chk_fail@plt>
   321a0:	add	sp, #16
   321a2:	pop	{r4, pc}
   321a4:	str	r4, [sp, #100]	; 0x64
   321a6:	strh	r0, [r1, #0]
   321a8:	adds	r6, r3, #0
   321aa:	movs	r3, r0
   321ac:	lsls	r0, r4, #8
   321ae:	movs	r0, r0
   321b0:	adds	r0, r1, #0
   321b2:	movs	r3, r0

000321b4 <btrfs_util_get_subvolume_read_only@@Base>:
   321b4:	push	{r3, r4, r5, r6, r7, lr}
   321b6:	mov	r4, r1
   321b8:	movs	r1, #0
   321ba:	blx	8700 <open@plt>
   321be:	adds	r3, r0, #1
   321c0:	mov	r6, r0
   321c2:	beq.n	321e0 <btrfs_util_get_subvolume_read_only@@Base+0x2c>
   321c4:	mov	r1, r4
   321c6:	bl	3215e <btrfs_util_get_subvolume_read_only_fd@@Base>
   321ca:	mov	r4, r0
   321cc:	blx	8784 <__errno_location@plt>
   321d0:	ldr	r7, [r0, #0]
   321d2:	mov	r5, r0
   321d4:	mov	r0, r6
   321d6:	blx	8998 <close@plt>
   321da:	str	r7, [r5, #0]
   321dc:	mov	r0, r4
   321de:	pop	{r3, r4, r5, r6, r7, pc}
   321e0:	movs	r4, #7
   321e2:	b.n	321dc <btrfs_util_get_subvolume_read_only@@Base+0x28>

000321e4 <btrfs_util_set_subvolume_read_only_fd@@Base>:
   321e4:	ldr	r2, [pc, #108]	; (32254 <btrfs_util_set_subvolume_read_only_fd@@Base+0x70>)
   321e6:	ldr	r3, [pc, #112]	; (32258 <btrfs_util_set_subvolume_read_only_fd@@Base+0x74>)
   321e8:	add	r2, pc
   321ea:	push	{r4, r5, lr}
   321ec:	sub	sp, #28
   321ee:	ldr	r3, [r2, r3]
   321f0:	mov	r5, r1
   321f2:	add	r2, sp, #8
   321f4:	ldr	r1, [pc, #84]	; (3224c <btrfs_util_set_subvolume_read_only_fd@@Base+0x68>)
   321f6:	ldr	r3, [r3, #0]
   321f8:	str	r3, [sp, #20]
   321fa:	mov.w	r3, #0
   321fe:	mov	r4, r0
   32200:	str	r2, [sp, #4]
   32202:	blx	85bc <ioctl@plt>
   32206:	adds	r0, #1
   32208:	beq.n	32244 <btrfs_util_set_subvolume_read_only_fd@@Base+0x60>
   3220a:	ldrd	r3, r1, [sp, #8]
   3220e:	ldr	r2, [sp, #4]
   32210:	cbz	r5, 3223e <btrfs_util_set_subvolume_read_only_fd@@Base+0x5a>
   32212:	orr.w	r3, r3, #2
   32216:	strd	r3, r1, [sp, #8]
   3221a:	mov	r0, r4
   3221c:	ldr	r1, [pc, #48]	; (32250 <btrfs_util_set_subvolume_read_only_fd@@Base+0x6c>)
   3221e:	blx	85bc <ioctl@plt>
   32222:	adds	r3, r0, #1
   32224:	ite	ne
   32226:	movne	r0, #0
   32228:	moveq	r0, #15
   3222a:	ldr	r2, [pc, #48]	; (3225c <btrfs_util_set_subvolume_read_only_fd@@Base+0x78>)
   3222c:	ldr	r3, [pc, #40]	; (32258 <btrfs_util_set_subvolume_read_only_fd@@Base+0x74>)
   3222e:	add	r2, pc
   32230:	ldr	r3, [r2, r3]
   32232:	ldr	r2, [r3, #0]
   32234:	ldr	r3, [sp, #20]
   32236:	eors	r2, r3
   32238:	beq.n	32248 <btrfs_util_set_subvolume_read_only_fd@@Base+0x64>
   3223a:	blx	8510 <__stack_chk_fail@plt>
   3223e:	bic.w	r3, r3, #2
   32242:	b.n	32216 <btrfs_util_set_subvolume_read_only_fd@@Base+0x32>
   32244:	movs	r0, #14
   32246:	b.n	3222a <btrfs_util_set_subvolume_read_only_fd@@Base+0x46>
   32248:	add	sp, #28
   3224a:	pop	{r4, r5, pc}
   3224c:	str	r4, [sp, #100]	; 0x64
   3224e:	strh	r0, [r1, #0]
   32250:	str	r4, [sp, #104]	; 0x68
   32252:	ands	r0, r1
   32254:	subs	r4, r3, r6
   32256:	movs	r3, r0
   32258:	lsls	r0, r4, #8
   3225a:	movs	r0, r0
   3225c:	subs	r6, r2, r5
   3225e:	movs	r3, r0

00032260 <btrfs_util_set_subvolume_read_only@@Base>:
   32260:	push	{r3, r4, r5, r6, r7, lr}
   32262:	mov	r4, r1
   32264:	movs	r1, #0
   32266:	blx	8700 <open@plt>
   3226a:	adds	r3, r0, #1
   3226c:	mov	r6, r0
   3226e:	beq.n	3228c <btrfs_util_set_subvolume_read_only@@Base+0x2c>
   32270:	mov	r1, r4
   32272:	bl	321e4 <btrfs_util_set_subvolume_read_only_fd@@Base>
   32276:	mov	r4, r0
   32278:	blx	8784 <__errno_location@plt>
   3227c:	ldr	r7, [r0, #0]
   3227e:	mov	r5, r0
   32280:	mov	r0, r6
   32282:	blx	8998 <close@plt>
   32286:	str	r7, [r5, #0]
   32288:	mov	r0, r4
   3228a:	pop	{r3, r4, r5, r6, r7, pc}
   3228c:	movs	r4, #7
   3228e:	b.n	32288 <btrfs_util_set_subvolume_read_only@@Base+0x28>

00032290 <btrfs_util_get_default_subvolume_fd@@Base>:
   32290:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32294:	mov	r7, r1
   32296:	ldr	r1, [pc, #256]	; (32398 <btrfs_util_get_default_subvolume_fd@@Base+0x108>)
   32298:	sub.w	sp, sp, #4096	; 0x1000
   3229c:	ldr	r2, [pc, #252]	; (3239c <btrfs_util_get_default_subvolume_fd@@Base+0x10c>)
   3229e:	sub	sp, #20
   322a0:	add	r1, pc
   322a2:	add.w	r9, sp, #16
   322a6:	sub.w	r4, r9, #8
   322aa:	add.w	r3, sp, #4096	; 0x1000
   322ae:	ldr	r2, [r1, r2]
   322b0:	mov	r8, r0
   322b2:	ldr.w	fp, [pc, #236]	; 323a0 <btrfs_util_get_default_subvolume_fd@@Base+0x110>
   322b6:	mov	r0, r4
   322b8:	ldr.w	sl, [pc, #232]	; 323a4 <btrfs_util_get_default_subvolume_fd@@Base+0x114>
   322bc:	ldr	r2, [r2, #0]
   322be:	str	r2, [r3, #12]
   322c0:	mov.w	r2, #0
   322c4:	movs	r6, #0
   322c6:	mov.w	r2, #4096	; 0x1000
   322ca:	add	fp, pc
   322cc:	movs	r1, #0
   322ce:	adds	r3, #12
   322d0:	blx	87c4 <memset@plt+0x4>
   322d4:	movs	r2, #1
   322d6:	movs	r3, #0
   322d8:	strd	r2, r3, [r9, #-8]
   322dc:	movs	r2, #6
   322de:	movs	r3, #0
   322e0:	strd	r2, r3, [r4, #8]
   322e4:	strd	r2, r3, [r4, #16]
   322e8:	mov.w	r3, #4294967295	; 0xffffffff
   322ec:	mov.w	r2, #4294967295	; 0xffffffff
   322f0:	strd	r2, r3, [r4, #32]
   322f4:	strd	r2, r3, [r4, #48]	; 0x30
   322f8:	movs	r3, #84	; 0x54
   322fa:	strd	r3, r3, [r4, #56]	; 0x38
   322fe:	mov	r3, r6
   32300:	ldr	r2, [r4, #64]	; 0x40
   32302:	cmp	r2, r3
   32304:	bhi.n	32346 <btrfs_util_get_default_subvolume_fd@@Base+0xb6>
   32306:	mov	r2, r4
   32308:	mov	r1, sl
   3230a:	mov	r0, r8
   3230c:	mov.w	r3, #4096	; 0x1000
   32310:	str	r3, [r4, #64]	; 0x40
   32312:	blx	85bc <ioctl@plt>
   32316:	adds	r0, #1
   32318:	beq.n	32388 <btrfs_util_get_default_subvolume_fd@@Base+0xf8>
   3231a:	ldr	r3, [r4, #64]	; 0x40
   3231c:	cbnz	r3, 32342 <btrfs_util_get_default_subvolume_fd@@Base+0xb2>
   3231e:	blx	8784 <__errno_location@plt>
   32322:	movs	r3, #2
   32324:	str	r3, [r0, #0]
   32326:	movs	r0, #6
   32328:	ldr	r1, [pc, #124]	; (323a8 <btrfs_util_get_default_subvolume_fd@@Base+0x118>)
   3232a:	add.w	r3, sp, #4096	; 0x1000
   3232e:	ldr	r2, [pc, #108]	; (3239c <btrfs_util_get_default_subvolume_fd@@Base+0x10c>)
   32330:	adds	r3, #12
   32332:	add	r1, pc
   32334:	ldr	r2, [r1, r2]
   32336:	ldr	r1, [r2, #0]
   32338:	ldr	r2, [r3, #0]
   3233a:	eors	r1, r2
   3233c:	beq.n	3238c <btrfs_util_get_default_subvolume_fd@@Base+0xfc>
   3233e:	blx	8510 <__stack_chk_fail@plt>
   32342:	movs	r6, #0
   32344:	mov	r3, r6
   32346:	add.w	r5, r9, #96	; 0x60
   3234a:	add	r5, r6
   3234c:	ldr	r2, [r5, #24]
   3234e:	cmp	r2, #84	; 0x54
   32350:	bne.n	32370 <btrfs_util_get_default_subvolume_fd@@Base+0xe0>
   32352:	str	r3, [sp, #4]
   32354:	add.w	r0, r5, #62	; 0x3e
   32358:	ldrh.w	r2, [r5, #59]	; 0x3b
   3235c:	mov	r1, fp
   3235e:	blx	8974 <strncmp@plt>
   32362:	ldr	r3, [sp, #4]
   32364:	cbnz	r0, 32370 <btrfs_util_get_default_subvolume_fd@@Base+0xe0>
   32366:	ldr	r2, [r5, #32]
   32368:	ldr	r3, [r5, #36]	; 0x24
   3236a:	strd	r2, r3, [r7]
   3236e:	b.n	32328 <btrfs_util_get_default_subvolume_fd@@Base+0x98>
   32370:	ldr	r2, [r5, #28]
   32372:	adds	r6, #32
   32374:	adds	r3, #1
   32376:	add	r6, r2
   32378:	ldrd	r2, r1, [r5, #16]
   3237c:	adds	r2, #1
   3237e:	adc.w	r1, r1, #0
   32382:	strd	r2, r1, [r4, #24]
   32386:	b.n	32300 <btrfs_util_get_default_subvolume_fd@@Base+0x70>
   32388:	movs	r0, #12
   3238a:	b.n	32328 <btrfs_util_get_default_subvolume_fd@@Base+0x98>
   3238c:	add.w	sp, sp, #4096	; 0x1000
   32390:	add	sp, #20
   32392:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32396:	nop
   32398:	subs	r4, r4, r3
   3239a:	movs	r3, r0
   3239c:	lsls	r0, r4, #8
   3239e:	movs	r0, r0
   323a0:	ldrh	r4, [r5, #26]
   323a2:	movs	r0, r0
   323a4:	str	r4, [sp, #68]	; 0x44
   323a6:	beq.n	323aa <btrfs_util_get_default_subvolume_fd@@Base+0x11a>
   323a8:	subs	r2, r2, r1
   323aa:	movs	r3, r0

000323ac <btrfs_util_get_default_subvolume@@Base>:
   323ac:	push	{r3, r4, r5, r6, r7, lr}
   323ae:	mov	r4, r1
   323b0:	movs	r1, #0
   323b2:	blx	8700 <open@plt>
   323b6:	adds	r3, r0, #1
   323b8:	mov	r6, r0
   323ba:	beq.n	323d8 <btrfs_util_get_default_subvolume@@Base+0x2c>
   323bc:	mov	r1, r4
   323be:	bl	32290 <btrfs_util_get_default_subvolume_fd@@Base>
   323c2:	mov	r4, r0
   323c4:	blx	8784 <__errno_location@plt>
   323c8:	ldr	r7, [r0, #0]
   323ca:	mov	r5, r0
   323cc:	mov	r0, r6
   323ce:	blx	8998 <close@plt>
   323d2:	str	r7, [r5, #0]
   323d4:	mov	r0, r4
   323d6:	pop	{r3, r4, r5, r6, r7, pc}
   323d8:	movs	r4, #7
   323da:	b.n	323d4 <btrfs_util_get_default_subvolume@@Base+0x28>

000323dc <btrfs_util_set_default_subvolume_fd@@Base>:
   323dc:	push	{r0, r1, r4, lr}
   323de:	mov	r4, r0
   323e0:	strd	r2, r3, [sp]
   323e4:	orrs	r3, r2
   323e6:	beq.n	323fe <btrfs_util_set_default_subvolume_fd@@Base+0x22>
   323e8:	ldr	r1, [pc, #40]	; (32414 <btrfs_util_set_default_subvolume_fd@@Base+0x38>)
   323ea:	mov	r2, sp
   323ec:	mov	r0, r4
   323ee:	blx	85bc <ioctl@plt>
   323f2:	adds	r3, r0, #1
   323f4:	ite	ne
   323f6:	movne	r0, #0
   323f8:	moveq	r0, #19
   323fa:	add	sp, #8
   323fc:	pop	{r4, pc}
   323fe:	bl	31b84 <btrfs_util_is_subvolume_fd@@Base>
   32402:	cmp	r0, #0
   32404:	bne.n	323fa <btrfs_util_set_default_subvolume_fd@@Base+0x1e>
   32406:	mov	r1, sp
   32408:	mov	r0, r4
   3240a:	bl	31c18 <btrfs_util_subvolume_id_fd@@Base>
   3240e:	cmp	r0, #0
   32410:	beq.n	323e8 <btrfs_util_set_default_subvolume_fd@@Base+0xc>
   32412:	b.n	323fa <btrfs_util_set_default_subvolume_fd@@Base+0x1e>
   32414:	str	r4, [sp, #76]	; 0x4c
   32416:	ands	r0, r1

00032418 <btrfs_util_set_default_subvolume@@Base>:
   32418:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   3241a:	movs	r1, #0
   3241c:	strd	r3, r2, [sp]
   32420:	blx	8700 <open@plt>
   32424:	adds	r3, r0, #1
   32426:	mov	r6, r0
   32428:	beq.n	3244a <btrfs_util_set_default_subvolume@@Base+0x32>
   3242a:	ldrd	r3, r2, [sp]
   3242e:	bl	323dc <btrfs_util_set_default_subvolume_fd@@Base>
   32432:	mov	r4, r0
   32434:	blx	8784 <__errno_location@plt>
   32438:	ldr	r7, [r0, #0]
   3243a:	mov	r5, r0
   3243c:	mov	r0, r6
   3243e:	blx	8998 <close@plt>
   32442:	str	r7, [r5, #0]
   32444:	mov	r0, r4
   32446:	add	sp, #12
   32448:	pop	{r4, r5, r6, r7, pc}
   3244a:	movs	r4, #7
   3244c:	b.n	32444 <btrfs_util_set_default_subvolume@@Base+0x2c>

0003244e <btrfs_util_create_subvolume_fd@@Base>:
   3244e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   32452:	sub.w	sp, sp, #4096	; 0x1000
   32456:	sub	sp, #12
   32458:	mov	r8, r1
   3245a:	ldr	r1, [pc, #232]	; (32544 <btrfs_util_create_subvolume_fd@@Base+0xf6>)
   3245c:	mov	r9, r2
   3245e:	mov	r4, r3
   32460:	ldr	r2, [pc, #228]	; (32548 <btrfs_util_create_subvolume_fd@@Base+0xfa>)
   32462:	add.w	r3, sp, #4128	; 0x1020
   32466:	add	r1, pc
   32468:	adds	r3, #8
   3246a:	mov	r5, sp
   3246c:	ldr	r2, [r1, r2]
   3246e:	mov	r7, r0
   32470:	ldr	r6, [r3, #0]
   32472:	add.w	r3, sp, #4096	; 0x1000
   32476:	ldr	r2, [r2, #0]
   32478:	str	r2, [r3, #4]
   3247a:	mov.w	r2, #0
   3247e:	movs	r1, #0
   32480:	mov.w	r2, #4096	; 0x1000
   32484:	mov	r0, r5
   32486:	adds	r3, #4
   32488:	blx	87c4 <memset@plt+0x4>
   3248c:	cmp.w	r9, #0
   32490:	beq.n	324b6 <btrfs_util_create_subvolume_fd@@Base+0x68>
   32492:	blx	8784 <__errno_location@plt>
   32496:	movs	r3, #22
   32498:	str	r3, [r0, #0]
   3249a:	movs	r0, #3
   3249c:	ldr	r1, [pc, #172]	; (3254c <btrfs_util_create_subvolume_fd@@Base+0xfe>)
   3249e:	add.w	r3, sp, #4096	; 0x1000
   324a2:	ldr	r2, [pc, #164]	; (32548 <btrfs_util_create_subvolume_fd@@Base+0xfa>)
   324a4:	adds	r3, #4
   324a6:	add	r1, pc
   324a8:	ldr	r2, [r1, r2]
   324aa:	ldr	r1, [r2, #0]
   324ac:	ldr	r2, [r3, #0]
   324ae:	eors	r1, r2
   324b0:	beq.n	32536 <btrfs_util_create_subvolume_fd@@Base+0xe8>
   324b2:	blx	8510 <__stack_chk_fail@plt>
   324b6:	cbz	r4, 324c0 <btrfs_util_create_subvolume_fd@@Base+0x72>
   324b8:	movs	r2, #1
   324ba:	movs	r3, #0
   324bc:	strd	r2, r3, [r5, #16]
   324c0:	cbz	r6, 324e2 <btrfs_util_create_subvolume_fd@@Base+0x94>
   324c2:	ldr	r3, [r5, #16]
   324c4:	str	r6, [r5, #32]
   324c6:	orr.w	r3, r3, #4
   324ca:	str	r3, [r5, #16]
   324cc:	ldrd	r3, r2, [r6, #8]
   324d0:	adds	r3, #9
   324d2:	adc.w	r2, r2, #0
   324d6:	lsls	r2, r2, #3
   324d8:	orr.w	r2, r2, r3, lsr #29
   324dc:	lsls	r3, r3, #3
   324de:	strd	r3, r2, [r5, #24]
   324e2:	mov	r0, r8
   324e4:	blx	8748 <strlen@plt>
   324e8:	movw	r3, #4039	; 0xfc7
   324ec:	cmp	r0, r3
   324ee:	mov	r6, r0
   324f0:	bls.n	324fa <btrfs_util_create_subvolume_fd@@Base+0xac>
   324f2:	blx	8784 <__errno_location@plt>
   324f6:	movs	r3, #36	; 0x24
   324f8:	b.n	32498 <btrfs_util_create_subvolume_fd@@Base+0x4a>
   324fa:	mov	r2, r0
   324fc:	mov	r1, r8
   324fe:	movw	r3, #4040	; 0xfc8
   32502:	add	r0, sp, #56	; 0x38
   32504:	add	r6, r5
   32506:	blx	85a0 <__memcpy_chk@plt>
   3250a:	ldr	r1, [pc, #52]	; (32540 <btrfs_util_create_subvolume_fd@@Base+0xf2>)
   3250c:	mov	r2, r5
   3250e:	mov	r0, r7
   32510:	mov.w	r8, #0
   32514:	strb.w	r8, [r6, #56]	; 0x38
   32518:	blx	85bc <ioctl@plt>
   3251c:	adds	r0, #1
   3251e:	beq.n	3252e <btrfs_util_create_subvolume_fd@@Base+0xe0>
   32520:	cbz	r4, 32532 <btrfs_util_create_subvolume_fd@@Base+0xe4>
   32522:	ldrd	r2, r3, [r5, #8]
   32526:	mov	r0, r8
   32528:	strd	r2, r3, [r4]
   3252c:	b.n	3249c <btrfs_util_create_subvolume_fd@@Base+0x4e>
   3252e:	movs	r0, #16
   32530:	b.n	3249c <btrfs_util_create_subvolume_fd@@Base+0x4e>
   32532:	mov	r0, r4
   32534:	b.n	3249c <btrfs_util_create_subvolume_fd@@Base+0x4e>
   32536:	add.w	sp, sp, #4096	; 0x1000
   3253a:	add	sp, #12
   3253c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   32540:	str	r4, [sp, #96]	; 0x60
   32542:	str	r0, [r0, r0]
   32544:	adds	r6, r3, r4
   32546:	movs	r3, r0
   32548:	lsls	r0, r4, #8
   3254a:	movs	r0, r0
   3254c:	adds	r6, r3, r3
   3254e:	movs	r3, r0

00032550 <btrfs_util_create_subvolume@@Base>:
   32550:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   32554:	mov	r7, r2
   32556:	ldr	r2, [pc, #120]	; (325d0 <btrfs_util_create_subvolume@@Base+0x80>)
   32558:	mov	r8, r3
   3255a:	ldr	r3, [pc, #120]	; (325d4 <btrfs_util_create_subvolume@@Base+0x84>)
   3255c:	subw	sp, sp, #4060	; 0xfdc
   32560:	add	r2, pc
   32562:	add.w	r9, sp, #12
   32566:	add	r6, sp, #8
   32568:	mov	r5, r1
   3256a:	ldr	r3, [r2, r3]
   3256c:	mov	r1, r0
   3256e:	mvn.w	r0, #99	; 0x63
   32572:	mov	r2, r9
   32574:	ldr	r3, [r3, #0]
   32576:	str.w	r3, [sp, #4052]	; 0xfd4
   3257a:	mov.w	r3, #0
   3257e:	movw	r3, #4040	; 0xfc8
   32582:	str	r6, [sp, #0]
   32584:	bl	31538 <print_all_devices@@Base+0x160>
   32588:	mov	r4, r0
   3258a:	cbnz	r0, 325ae <btrfs_util_create_subvolume@@Base+0x5e>
   3258c:	mov	r3, r7
   3258e:	mov	r2, r5
   32590:	mov	r1, r9
   32592:	str.w	r8, [sp]
   32596:	ldr	r0, [r6, #0]
   32598:	bl	3244e <btrfs_util_create_subvolume_fd@@Base>
   3259c:	mov	r4, r0
   3259e:	blx	8784 <__errno_location@plt>
   325a2:	ldr	r7, [r0, #0]
   325a4:	mov	r5, r0
   325a6:	ldr	r0, [r6, #0]
   325a8:	blx	8998 <close@plt>
   325ac:	str	r7, [r5, #0]
   325ae:	ldr	r2, [pc, #40]	; (325d8 <btrfs_util_create_subvolume@@Base+0x88>)
   325b0:	ldr	r3, [pc, #32]	; (325d4 <btrfs_util_create_subvolume@@Base+0x84>)
   325b2:	add	r2, pc
   325b4:	ldr	r3, [r2, r3]
   325b6:	ldr	r2, [r3, #0]
   325b8:	ldr.w	r3, [sp, #4052]	; 0xfd4
   325bc:	eors	r2, r3
   325be:	beq.n	325c4 <btrfs_util_create_subvolume@@Base+0x74>
   325c0:	blx	8510 <__stack_chk_fail@plt>
   325c4:	mov	r0, r4
   325c6:	addw	sp, sp, #4060	; 0xfdc
   325ca:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   325ce:	nop
   325d0:	adds	r4, r4, r0
   325d2:	movs	r3, r0
   325d4:	lsls	r0, r4, #8
   325d6:	movs	r0, r0
   325d8:	asrs	r2, r2, #31
   325da:	movs	r3, r0

000325dc <btrfs_util_create_subvolume_iterator_fd@@Base>:
   325dc:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   325e0:	mov	r7, r0
   325e2:	ldr.w	r8, [sp, #40]	; 0x28
   325e6:	strd	r2, r3, [sp, #8]
   325ea:	bics.w	r1, r8, #1
   325ee:	beq.n	32602 <btrfs_util_create_subvolume_iterator_fd@@Base+0x26>
   325f0:	blx	8784 <__errno_location@plt>
   325f4:	movs	r5, #3
   325f6:	movs	r3, #22
   325f8:	str	r3, [r0, #0]
   325fa:	mov	r0, r5
   325fc:	add	sp, #16
   325fe:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   32602:	orrs	r3, r2
   32604:	bne.n	32628 <btrfs_util_create_subvolume_iterator_fd@@Base+0x4c>
   32606:	blx	855c <geteuid@plt>
   3260a:	ldrd	r2, r3, [sp, #8]
   3260e:	orrs	r3, r2
   32610:	clz	r6, r0
   32614:	mov.w	r6, r6, lsr #5
   32618:	beq.n	3262c <btrfs_util_create_subvolume_iterator_fd@@Base+0x50>
   3261a:	movs	r0, #36	; 0x24
   3261c:	blx	8678 <malloc@plt+0x4>
   32620:	mov	r4, r0
   32622:	cbnz	r0, 32648 <btrfs_util_create_subvolume_iterator_fd@@Base+0x6c>
   32624:	movs	r5, #2
   32626:	b.n	325fa <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   32628:	movs	r6, #1
   3262a:	b.n	3261a <btrfs_util_create_subvolume_iterator_fd@@Base+0x3e>
   3262c:	mov	r0, r7
   3262e:	bl	31b84 <btrfs_util_is_subvolume_fd@@Base>
   32632:	mov	r5, r0
   32634:	cmp	r0, #0
   32636:	bne.n	325fa <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   32638:	add	r1, sp, #8
   3263a:	mov	r0, r7
   3263c:	bl	31c18 <btrfs_util_subvolume_id_fd@@Base>
   32640:	mov	r5, r0
   32642:	cmp	r0, #0
   32644:	beq.n	3261a <btrfs_util_create_subvolume_iterator_fd@@Base+0x3e>
   32646:	b.n	325fa <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   32648:	movs	r3, #4
   3264a:	strd	r7, r7, [r0, #4]
   3264e:	str.w	r8, [r0, #12]
   32652:	movs	r5, #0
   32654:	strb	r6, [r0, #0]
   32656:	strd	r5, r3, [r0, #20]
   3265a:	movw	r0, #16448	; 0x4040
   3265e:	blx	8678 <malloc@plt+0x4>
   32662:	str	r0, [r4, #16]
   32664:	cbz	r0, 326a2 <btrfs_util_create_subvolume_iterator_fd@@Base+0xc6>
   32666:	mov.w	r0, #256	; 0x100
   3266a:	str	r0, [r4, #32]
   3266c:	blx	8678 <malloc@plt+0x4>
   32670:	str	r0, [r4, #28]
   32672:	cbz	r0, 3269e <btrfs_util_create_subvolume_iterator_fd@@Base+0xc2>
   32674:	str	r5, [sp, #0]
   32676:	mov	r0, r4
   32678:	ldrd	r2, r3, [sp, #8]
   3267c:	bl	31d84 <btrfs_util_subvolume_id@@Base+0xe0>
   32680:	mov	r5, r0
   32682:	cbz	r0, 32698 <btrfs_util_create_subvolume_iterator_fd@@Base+0xbc>
   32684:	ldr	r0, [r4, #28]
   32686:	blx	8434 <free@plt+0x4>
   3268a:	ldr	r0, [r4, #16]
   3268c:	blx	8434 <free@plt+0x4>
   32690:	mov	r0, r4
   32692:	blx	8434 <free@plt+0x4>
   32696:	b.n	325fa <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   32698:	ldr	r3, [sp, #44]	; 0x2c
   3269a:	str	r4, [r3, #0]
   3269c:	b.n	325fa <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   3269e:	movs	r5, #2
   326a0:	b.n	3268a <btrfs_util_create_subvolume_iterator_fd@@Base+0xae>
   326a2:	movs	r5, #2
   326a4:	b.n	32690 <btrfs_util_create_subvolume_iterator_fd@@Base+0xb4>

000326a6 <btrfs_util_create_subvolume_iterator@@Base>:
   326a6:	push	{r4, r5, r6, r7, lr}
   326a8:	sub	sp, #20
   326aa:	movs	r1, #0
   326ac:	strd	r3, r2, [sp, #8]
   326b0:	ldr	r5, [sp, #44]	; 0x2c
   326b2:	blx	8700 <open@plt>
   326b6:	adds	r3, r0, #1
   326b8:	mov	r6, r0
   326ba:	beq.n	326f0 <btrfs_util_create_subvolume_iterator@@Base+0x4a>
   326bc:	ldr	r1, [sp, #40]	; 0x28
   326be:	ldrd	r3, r2, [sp, #8]
   326c2:	str	r5, [sp, #4]
   326c4:	str	r1, [sp, #0]
   326c6:	bl	325dc <btrfs_util_create_subvolume_iterator_fd@@Base>
   326ca:	mov	r4, r0
   326cc:	cbz	r0, 326e4 <btrfs_util_create_subvolume_iterator@@Base+0x3e>
   326ce:	blx	8784 <__errno_location@plt>
   326d2:	ldr	r7, [r0, #0]
   326d4:	mov	r5, r0
   326d6:	mov	r0, r6
   326d8:	blx	8998 <close@plt>
   326dc:	str	r7, [r5, #0]
   326de:	mov	r0, r4
   326e0:	add	sp, #20
   326e2:	pop	{r4, r5, r6, r7, pc}
   326e4:	ldr	r2, [r5, #0]
   326e6:	ldr	r3, [r2, #12]
   326e8:	orr.w	r3, r3, #1073741824	; 0x40000000
   326ec:	str	r3, [r2, #12]
   326ee:	b.n	326de <btrfs_util_create_subvolume_iterator@@Base+0x38>
   326f0:	movs	r4, #7
   326f2:	b.n	326de <btrfs_util_create_subvolume_iterator@@Base+0x38>

000326f4 <btrfs_util_destroy_subvolume_iterator@@Base>:
   326f4:	push	{r3, r4, r5, r6, r7, lr}
   326f6:	mov	r4, r0
   326f8:	cbz	r0, 3273e <btrfs_util_destroy_subvolume_iterator@@Base+0x4a>
   326fa:	ldr	r0, [r0, #28]
   326fc:	blx	8434 <free@plt+0x4>
   32700:	ldr	r0, [r4, #16]
   32702:	blx	8434 <free@plt+0x4>
   32706:	ldrd	r3, r6, [r4, #4]
   3270a:	cmp	r6, r3
   3270c:	beq.n	3271e <btrfs_util_destroy_subvolume_iterator@@Base+0x2a>
   3270e:	blx	8784 <__errno_location@plt>
   32712:	ldr	r7, [r0, #0]
   32714:	mov	r5, r0
   32716:	mov	r0, r6
   32718:	blx	8998 <close@plt>
   3271c:	str	r7, [r5, #0]
   3271e:	ldr	r3, [r4, #12]
   32720:	lsls	r3, r3, #1
   32722:	bpl.n	32734 <btrfs_util_destroy_subvolume_iterator@@Base+0x40>
   32724:	blx	8784 <__errno_location@plt>
   32728:	ldr	r6, [r0, #0]
   3272a:	mov	r5, r0
   3272c:	ldr	r0, [r4, #4]
   3272e:	blx	8998 <close@plt>
   32732:	str	r6, [r5, #0]
   32734:	mov	r0, r4
   32736:	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   3273a:	b.w	8430 <free@plt>
   3273e:	pop	{r3, r4, r5, r6, r7, pc}

00032740 <btrfs_util_subvolume_iterator_fd@@Base>:
   32740:	ldr	r0, [r0, #4]
   32742:	bx	lr

00032744 <btrfs_util_subvolume_iterator_next@@Base>:
   32744:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32748:	mov	r5, r2
   3274a:	ldr	r2, [pc, #696]	; (32a04 <btrfs_util_subvolume_iterator_next@@Base+0x2c0>)
   3274c:	sub	sp, #52	; 0x34
   3274e:	ldr	r3, [pc, #696]	; (32a08 <btrfs_util_subvolume_iterator_next@@Base+0x2c4>)
   32750:	mov	r4, r0
   32752:	add	r2, pc
   32754:	mov	r8, r1
   32756:	ldr	r3, [r2, r3]
   32758:	ldr	r3, [r3, #0]
   3275a:	str	r3, [sp, #44]	; 0x2c
   3275c:	mov.w	r3, #0
   32760:	ldrb	r3, [r0, #0]
   32762:	cmp	r3, #0
   32764:	beq.n	32826 <btrfs_util_subvolume_iterator_next@@Base+0xe2>
   32766:	movw	r6, #4112	; 0x1010
   3276a:	movw	sl, #4104	; 0x1008
   3276e:	ldr	r3, [r4, #20]
   32770:	cmp	r3, #0
   32772:	beq.w	329e4 <btrfs_util_subvolume_iterator_next@@Base+0x2a0>
   32776:	muls	r3, r6
   32778:	ldr	r2, [r4, #16]
   3277a:	sub.w	r3, r3, #4096	; 0x1000
   3277e:	subs	r3, #16
   32780:	add.w	fp, r2, r3
   32784:	add.w	r7, fp, sl
   32788:	ldr.w	r1, [fp, sl]
   3278c:	ldr.w	r2, [fp, #64]	; 0x40
   32790:	cmp	r1, r2
   32792:	bcc.w	328d6 <btrfs_util_subvolume_iterator_next@@Base+0x192>
   32796:	mov.w	r2, #4096	; 0x1000
   3279a:	ldr	r1, [pc, #608]	; (329fc <btrfs_util_subvolume_iterator_next@@Base+0x2b8>)
   3279c:	str.w	r2, [fp, #64]	; 0x40
   327a0:	mov	r2, fp
   327a2:	ldr	r0, [r4, #4]
   327a4:	blx	85bc <ioctl@plt>
   327a8:	adds	r0, #1
   327aa:	beq.w	3296e <btrfs_util_subvolume_iterator_next@@Base+0x22a>
   327ae:	add.w	r1, fp, #4096	; 0x1000
   327b2:	movs	r2, #0
   327b4:	str	r2, [r7, #0]
   327b6:	str	r2, [r1, #0]
   327b8:	ldr.w	r2, [fp, #64]	; 0x40
   327bc:	cmp	r2, #0
   327be:	bne.n	3276e <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   327c0:	mov	r0, r4
   327c2:	bl	31a5c <print_all_devices@@Base+0x684>
   327c6:	ldr	r2, [r4, #12]
   327c8:	lsls	r0, r2, #31
   327ca:	bpl.n	3276e <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   327cc:	ldr	r2, [r4, #20]
   327ce:	cmp	r2, #0
   327d0:	beq.n	3276e <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   327d2:	cmp.w	r8, #0
   327d6:	beq.n	32804 <btrfs_util_subvolume_iterator_next@@Base+0xc0>
   327d8:	movw	r7, #4108	; 0x100c
   327dc:	ldr.w	r9, [fp, r7]
   327e0:	add.w	r0, r9, #1
   327e4:	blx	8678 <malloc@plt+0x4>
   327e8:	mov	r6, r0
   327ea:	str.w	r0, [r8]
   327ee:	cmp	r0, #0
   327f0:	beq.w	329ec <btrfs_util_subvolume_iterator_next@@Base+0x2a8>
   327f4:	ldr	r1, [r4, #28]
   327f6:	mov	r2, r9
   327f8:	blx	8480 <memcpy@plt+0x4>
   327fc:	ldr.w	r2, [fp, r7]
   32800:	movs	r1, #0
   32802:	strb	r1, [r6, r2]
   32804:	cbz	r5, 3280e <btrfs_util_subvolume_iterator_next@@Base+0xca>
   32806:	ldrd	r2, r3, [fp, #8]
   3280a:	strd	r2, r3, [r5]
   3280e:	movs	r3, #0
   32810:	ldr	r1, [pc, #504]	; (32a0c <btrfs_util_subvolume_iterator_next@@Base+0x2c8>)
   32812:	ldr	r2, [pc, #500]	; (32a08 <btrfs_util_subvolume_iterator_next@@Base+0x2c4>)
   32814:	add	r1, pc
   32816:	ldr	r2, [r1, r2]
   32818:	ldr	r1, [r2, #0]
   3281a:	ldr	r2, [sp, #44]	; 0x2c
   3281c:	eors	r1, r2
   3281e:	beq.w	329f4 <btrfs_util_subvolume_iterator_next@@Base+0x2b0>
   32822:	blx	8510 <__stack_chk_fail@plt>
   32826:	movw	r9, #4112	; 0x1010
   3282a:	movw	sl, #4104	; 0x1008
   3282e:	ldr	r3, [r4, #20]
   32830:	cmp	r3, #0
   32832:	beq.w	329e4 <btrfs_util_subvolume_iterator_next@@Base+0x2a0>
   32836:	mul.w	fp, r9, r3
   3283a:	ldr	r3, [r4, #16]
   3283c:	sub.w	fp, fp, #4096	; 0x1000
   32840:	sub.w	fp, fp, #16
   32844:	add	fp, r3
   32846:	add.w	r6, fp, #4096	; 0x1000
   3284a:	add.w	r7, fp, sl
   3284e:	ldr.w	r1, [fp, sl]
   32852:	ldrb	r3, [r6, #0]
   32854:	cmp	r1, r3
   32856:	bcc.w	32972 <btrfs_util_subvolume_iterator_next@@Base+0x22e>
   3285a:	ldr	r1, [pc, #420]	; (32a00 <btrfs_util_subvolume_iterator_next@@Base+0x2bc>)
   3285c:	add.w	r2, fp, #8
   32860:	ldr	r0, [r4, #8]
   32862:	blx	85bc <ioctl@plt>
   32866:	adds	r0, #1
   32868:	bne.n	32876 <btrfs_util_subvolume_iterator_next@@Base+0x132>
   3286a:	blx	8784 <__errno_location@plt>
   3286e:	ldr	r3, [r0, #0]
   32870:	cmp	r3, #75	; 0x4b
   32872:	bne.w	329e8 <btrfs_util_subvolume_iterator_next@@Base+0x2a4>
   32876:	movs	r3, #0
   32878:	str	r3, [r7, #0]
   3287a:	ldrb	r3, [r6, #0]
   3287c:	cmp	r3, #0
   3287e:	bne.n	3282e <btrfs_util_subvolume_iterator_next@@Base+0xea>
   32880:	mov	r0, r4
   32882:	bl	31a5c <print_all_devices@@Base+0x684>
   32886:	mov	r3, r0
   32888:	cmp	r0, #0
   3288a:	bne.n	32810 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   3288c:	ldr	r3, [r4, #12]
   3288e:	lsls	r2, r3, #31
   32890:	bpl.n	3282e <btrfs_util_subvolume_iterator_next@@Base+0xea>
   32892:	ldr	r3, [r4, #20]
   32894:	cmp	r3, #0
   32896:	beq.n	3282e <btrfs_util_subvolume_iterator_next@@Base+0xea>
   32898:	cmp.w	r8, #0
   3289c:	beq.n	328ca <btrfs_util_subvolume_iterator_next@@Base+0x186>
   3289e:	movw	r7, #4108	; 0x100c
   328a2:	ldr.w	r9, [fp, r7]
   328a6:	add.w	r0, r9, #1
   328aa:	blx	8678 <malloc@plt+0x4>
   328ae:	mov	r6, r0
   328b0:	str.w	r0, [r8]
   328b4:	cmp	r0, #0
   328b6:	beq.w	329ec <btrfs_util_subvolume_iterator_next@@Base+0x2a8>
   328ba:	mov	r2, r9
   328bc:	ldr	r1, [r4, #28]
   328be:	blx	8480 <memcpy@plt+0x4>
   328c2:	ldr.w	r3, [fp, r7]
   328c6:	movs	r2, #0
   328c8:	strb	r2, [r6, r3]
   328ca:	cmp	r5, #0
   328cc:	beq.w	329f0 <btrfs_util_subvolume_iterator_next@@Base+0x2ac>
   328d0:	ldrd	r2, r3, [fp]
   328d4:	b.n	3280a <btrfs_util_subvolume_iterator_next@@Base+0xc6>
   328d6:	add.w	r0, fp, #4096	; 0x1000
   328da:	add.w	ip, fp, #104	; 0x68
   328de:	adds	r1, #1
   328e0:	add	r7, sp, #32
   328e2:	ldr	r2, [r0, #0]
   328e4:	str.w	r1, [fp, sl]
   328e8:	add	ip, r2
   328ea:	adds	r2, #32
   328ec:	ldr.w	r1, [ip, #28]
   328f0:	mov	r9, ip
   328f2:	add	r2, r1
   328f4:	str	r2, [r0, #0]
   328f6:	ldr.w	r0, [r9, #16]!
   328fa:	mov	r2, r7
   328fc:	ldr.w	r1, [r9, #4]
   32900:	stmia	r2!, {r0, r1}
   32902:	adds	r2, r0, #1
   32904:	ldr	r1, [sp, #36]	; 0x24
   32906:	adc.w	r1, r1, #0
   3290a:	strd	r2, r1, [fp, #24]
   3290e:	ldr.w	r3, [ip, #24]
   32912:	cmp	r3, #156	; 0x9c
   32914:	bne.w	3276e <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   32918:	add	r3, sp, #28
   3291a:	add.w	r2, ip, #32
   3291e:	str	r3, [sp, #0]
   32920:	mov	r1, ip
   32922:	add.w	r3, ip, #50	; 0x32
   32926:	mov	r0, r4
   32928:	bl	318dc <print_all_devices@@Base+0x504>
   3292c:	mov	r3, r0
   3292e:	cmp	r0, #0
   32930:	bne.w	32810 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   32934:	ldr.w	r0, [r9]
   32938:	ldr.w	r1, [r9, #4]
   3293c:	ldr	r3, [sp, #28]
   3293e:	stmia	r7!, {r0, r1}
   32940:	mov	r0, r4
   32942:	str	r3, [sp, #0]
   32944:	ldrd	r2, r3, [sp, #32]
   32948:	bl	31d84 <btrfs_util_subvolume_id@@Base+0xe0>
   3294c:	mov	r3, r0
   3294e:	cmp	r0, #0
   32950:	bne.w	32810 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   32954:	ldr	r3, [r4, #12]
   32956:	lsls	r1, r3, #31
   32958:	bmi.w	3276e <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   3295c:	ldr	r3, [r4, #20]
   3295e:	muls	r6, r3
   32960:	ldr	r3, [r4, #16]
   32962:	sub.w	r6, r6, #4096	; 0x1000
   32966:	subs	r6, #16
   32968:	add.w	fp, r3, r6
   3296c:	b.n	327d2 <btrfs_util_subvolume_iterator_next@@Base+0x8e>
   3296e:	movs	r3, #12
   32970:	b.n	32810 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   32972:	adds	r1, #1
   32974:	mov	r0, r4
   32976:	add.w	r3, fp, r1, lsl #4
   3297a:	ldrd	r6, r7, [r3]
   3297e:	ldrd	r2, r3, [r3, #8]
   32982:	str.w	r1, [fp, sl]
   32986:	add	r1, sp, #32
   32988:	str	r1, [sp, #8]
   3298a:	strd	r2, r3, [sp]
   3298e:	mov	r2, r6
   32990:	mov	r3, r7
   32992:	bl	3199c <print_all_devices@@Base+0x5c4>
   32996:	str	r0, [sp, #20]
   32998:	cbz	r0, 329aa <btrfs_util_subvolume_iterator_next@@Base+0x266>
   3299a:	blx	8784 <__errno_location@plt>
   3299e:	ldr	r2, [r0, #0]
   329a0:	cmp	r2, #13
   329a2:	ldr	r3, [sp, #20]
   329a4:	bne.w	32810 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   329a8:	b.n	3282e <btrfs_util_subvolume_iterator_next@@Base+0xea>
   329aa:	ldr	r3, [sp, #32]
   329ac:	mov	r2, r6
   329ae:	mov	r0, r4
   329b0:	str	r3, [sp, #0]
   329b2:	mov	r3, r7
   329b4:	bl	31d84 <btrfs_util_subvolume_id@@Base+0xe0>
   329b8:	str	r0, [sp, #20]
   329ba:	cbz	r0, 329c8 <btrfs_util_subvolume_iterator_next@@Base+0x284>
   329bc:	blx	8784 <__errno_location@plt>
   329c0:	ldr	r2, [r0, #0]
   329c2:	cmp	r2, #2
   329c4:	bne.n	329a0 <btrfs_util_subvolume_iterator_next@@Base+0x25c>
   329c6:	b.n	3282e <btrfs_util_subvolume_iterator_next@@Base+0xea>
   329c8:	ldr	r3, [r4, #12]
   329ca:	lsls	r3, r3, #31
   329cc:	bmi.w	3282e <btrfs_util_subvolume_iterator_next@@Base+0xea>
   329d0:	ldr	r3, [r4, #20]
   329d2:	mul.w	fp, r9, r3
   329d6:	ldr	r3, [r4, #16]
   329d8:	sub.w	fp, fp, #4096	; 0x1000
   329dc:	sub.w	fp, fp, #16
   329e0:	add	fp, r3
   329e2:	b.n	32898 <btrfs_util_subvolume_iterator_next@@Base+0x154>
   329e4:	movs	r3, #1
   329e6:	b.n	32810 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   329e8:	movs	r3, #24
   329ea:	b.n	32810 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   329ec:	movs	r3, #2
   329ee:	b.n	32810 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   329f0:	mov	r3, r5
   329f2:	b.n	32810 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   329f4:	mov	r0, r3
   329f6:	add	sp, #52	; 0x34
   329f8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   329fc:	str	r4, [sp, #68]	; 0x44
   329fe:	beq.n	32a02 <btrfs_util_subvolume_iterator_next@@Base+0x2be>
   32a00:	str	r4, [sp, #244]	; 0xf4
   32a02:	beq.n	32a06 <btrfs_util_subvolume_iterator_next@@Base+0x2c2>
   32a04:	asrs	r2, r6, #24
   32a06:	movs	r3, r0
   32a08:	lsls	r0, r4, #8
   32a0a:	movs	r0, r0
   32a0c:	asrs	r0, r6, #21
   32a0e:	movs	r3, r0

00032a10 <btrfs_util_create_snapshot_fd2@@Base>:
   32a10:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32a14:	sub.w	sp, sp, #8192	; 0x2000
   32a18:	sub	sp, #4
   32a1a:	mov	r6, r3
   32a1c:	add.w	r3, sp, #8192	; 0x2000
   32a20:	mov	sl, r1
   32a22:	ldr	r1, [pc, #604]	; (32c80 <btrfs_util_create_snapshot_fd2@@Base+0x270>)
   32a24:	adds	r3, #40	; 0x28
   32a26:	mov	r7, r2
   32a28:	ldr	r5, [r3, #0]
   32a2a:	ldr	r2, [pc, #600]	; (32c84 <btrfs_util_create_snapshot_fd2@@Base+0x274>)
   32a2c:	add.w	r3, sp, #8192	; 0x2000
   32a30:	add	r1, pc
   32a32:	add.w	r8, sp, #64	; 0x40
   32a36:	ldr.w	fp, [r3, #44]	; 0x2c
   32a3a:	adds	r3, #44	; 0x2c
   32a3c:	ldr	r2, [r1, r2]
   32a3e:	add.w	r3, sp, #8160	; 0x1fe0
   32a42:	sub.w	r4, r8, #16
   32a46:	mov	r9, r0
   32a48:	ldr	r2, [r2, #0]
   32a4a:	str	r2, [r3, #28]
   32a4c:	mov.w	r2, #0
   32a50:	mov.w	r2, #4096	; 0x1000
   32a54:	movs	r1, #0
   32a56:	mov	r0, r4
   32a58:	adds	r3, #28
   32a5a:	blx	87c4 <memset@plt+0x4>
   32a5e:	mov	r2, r9
   32a60:	asrs	r3, r2, #31
   32a62:	strd	r2, r3, [r8, #-16]
   32a66:	bics.w	r3, r6, #3
   32a6a:	bne.n	32a70 <btrfs_util_create_snapshot_fd2@@Base+0x60>
   32a6c:	cmp	r6, #3
   32a6e:	bne.n	32a96 <btrfs_util_create_snapshot_fd2@@Base+0x86>
   32a70:	blx	8784 <__errno_location@plt>
   32a74:	movs	r3, #22
   32a76:	movs	r6, #3
   32a78:	str	r3, [r0, #0]
   32a7a:	ldr	r1, [pc, #524]	; (32c88 <btrfs_util_create_snapshot_fd2@@Base+0x278>)
   32a7c:	add.w	r3, sp, #8160	; 0x1fe0
   32a80:	ldr	r2, [pc, #512]	; (32c84 <btrfs_util_create_snapshot_fd2@@Base+0x274>)
   32a82:	adds	r3, #28
   32a84:	add	r1, pc
   32a86:	ldr	r2, [r1, r2]
   32a88:	ldr	r1, [r2, #0]
   32a8a:	ldr	r2, [r3, #0]
   32a8c:	eors	r1, r2
   32a8e:	beq.w	32c6e <btrfs_util_create_snapshot_fd2@@Base+0x25e>
   32a92:	blx	8510 <__stack_chk_fail@plt>
   32a96:	lsls	r2, r6, #30
   32a98:	ittt	mi
   32a9a:	movmi	r2, #2
   32a9c:	movmi	r3, #0
   32a9e:	strdmi	r2, r3, [r4, #16]
   32aa2:	cbz	r5, 32aac <btrfs_util_create_snapshot_fd2@@Base+0x9c>
   32aa4:	ldr	r3, [r4, #16]
   32aa6:	orr.w	r3, r3, #1
   32aaa:	str	r3, [r4, #16]
   32aac:	cmp.w	fp, #0
   32ab0:	beq.n	32ad4 <btrfs_util_create_snapshot_fd2@@Base+0xc4>
   32ab2:	ldr	r3, [r4, #16]
   32ab4:	str.w	fp, [r4, #32]
   32ab8:	orr.w	r3, r3, #4
   32abc:	str	r3, [r4, #16]
   32abe:	ldrd	r3, r2, [fp, #8]
   32ac2:	adds	r3, #9
   32ac4:	adc.w	r2, r2, #0
   32ac8:	lsls	r2, r2, #3
   32aca:	orr.w	r2, r2, r3, lsr #29
   32ace:	lsls	r3, r3, #3
   32ad0:	strd	r3, r2, [r4, #24]
   32ad4:	mov	r0, r7
   32ad6:	blx	8748 <strlen@plt>
   32ada:	movw	r3, #4039	; 0xfc7
   32ade:	cmp	r0, r3
   32ae0:	mov	fp, r0
   32ae2:	bls.n	32aec <btrfs_util_create_snapshot_fd2@@Base+0xdc>
   32ae4:	blx	8784 <__errno_location@plt>
   32ae8:	movs	r3, #36	; 0x24
   32aea:	b.n	32a76 <btrfs_util_create_snapshot_fd2@@Base+0x66>
   32aec:	mov	r2, r0
   32aee:	movw	r3, #4040	; 0xfc8
   32af2:	mov	r1, r7
   32af4:	add.w	r0, r8, #40	; 0x28
   32af8:	add	fp, r4
   32afa:	blx	85a0 <__memcpy_chk@plt>
   32afe:	ldr	r1, [pc, #380]	; (32c7c <btrfs_util_create_snapshot_fd2@@Base+0x26c>)
   32b00:	mov	r2, r4
   32b02:	mov	r0, sl
   32b04:	movs	r3, #0
   32b06:	strb.w	r3, [fp, #56]	; 0x38
   32b0a:	blx	85bc <ioctl@plt>
   32b0e:	adds	r0, #1
   32b10:	beq.w	32c66 <btrfs_util_create_snapshot_fd2@@Base+0x256>
   32b14:	cbz	r5, 32b1e <btrfs_util_create_snapshot_fd2@@Base+0x10e>
   32b16:	ldrd	r2, r3, [r4, #8]
   32b1a:	strd	r2, r3, [r5]
   32b1e:	ands.w	r3, r6, #1
   32b22:	beq.w	32c6a <btrfs_util_create_snapshot_fd2@@Base+0x25a>
   32b26:	mov	r1, r7
   32b28:	movs	r2, #0
   32b2a:	mov	r0, sl
   32b2c:	blx	8504 <openat@plt>
   32b30:	adds	r3, r0, #1
   32b32:	mov	r7, r0
   32b34:	beq.w	32c62 <btrfs_util_create_snapshot_fd2@@Base+0x252>
   32b38:	add	r4, sp, #32
   32b3a:	movs	r2, #0
   32b3c:	subs	r3, r4, #4
   32b3e:	mov	r0, r9
   32b40:	str	r3, [sp, #12]
   32b42:	str	r3, [sp, #4]
   32b44:	movs	r3, #0
   32b46:	str	r3, [sp, #0]
   32b48:	movs	r3, #0
   32b4a:	bl	325dc <btrfs_util_create_subvolume_iterator_fd@@Base>
   32b4e:	mov	r6, r0
   32b50:	cbnz	r0, 32b90 <btrfs_util_create_snapshot_fd2@@Base+0x180>
   32b52:	cmp	r5, #0
   32b54:	add.w	sl, sp, #36	; 0x24
   32b58:	sub.w	r3, r8, #24
   32b5c:	str	r3, [sp, #16]
   32b5e:	it	eq
   32b60:	moveq	r3, #0
   32b62:	str	r3, [sp, #20]
   32b64:	ldr	r3, [sp, #12]
   32b66:	movs	r2, #0
   32b68:	mov	r1, r4
   32b6a:	ldr	r0, [r3, #0]
   32b6c:	bl	32744 <btrfs_util_subvolume_iterator_next@@Base>
   32b70:	mov	fp, r0
   32b72:	blx	8784 <__errno_location@plt>
   32b76:	mov	r6, r0
   32b78:	cmp.w	fp, #0
   32b7c:	beq.n	32ba2 <btrfs_util_create_snapshot_fd2@@Base+0x192>
   32b7e:	cmp.w	fp, #1
   32b82:	it	eq
   32b84:	moveq.w	fp, #0
   32b88:	ldr	r0, [sp, #28]
   32b8a:	mov	r6, fp
   32b8c:	bl	326f4 <btrfs_util_destroy_subvolume_iterator@@Base>
   32b90:	blx	8784 <__errno_location@plt>
   32b94:	ldr	r5, [r0, #0]
   32b96:	mov	r4, r0
   32b98:	mov	r0, r7
   32b9a:	blx	8998 <close@plt>
   32b9e:	str	r5, [r4, #0]
   32ba0:	b.n	32a7a <btrfs_util_create_snapshot_fd2@@Base+0x6a>
   32ba2:	ldr	r1, [r4, #0]
   32ba4:	mov.w	r2, #512	; 0x200
   32ba8:	mov	r0, r7
   32baa:	blx	8414 <unlinkat@plt>
   32bae:	adds	r0, #1
   32bb0:	bne.n	32bbe <btrfs_util_create_snapshot_fd2@@Base+0x1ae>
   32bb2:	ldr	r0, [r4, #0]
   32bb4:	mov.w	fp, #8
   32bb8:	blx	8434 <free@plt+0x4>
   32bbc:	b.n	32b88 <btrfs_util_create_snapshot_fd2@@Base+0x178>
   32bbe:	ldr	r1, [r4, #0]
   32bc0:	mov	r2, fp
   32bc2:	mov	r0, r9
   32bc4:	blx	8504 <openat@plt>
   32bc8:	cmp.w	r0, #4294967295	; 0xffffffff
   32bcc:	mov	r8, r0
   32bce:	bne.n	32bdc <btrfs_util_create_snapshot_fd2@@Base+0x1cc>
   32bd0:	ldr	r0, [r4, #0]
   32bd2:	mov.w	fp, #7
   32bd6:	blx	8434 <free@plt+0x4>
   32bda:	b.n	32b88 <btrfs_util_create_snapshot_fd2@@Base+0x178>
   32bdc:	add.w	r2, sp, #4128	; 0x1020
   32be0:	movw	r3, #4040	; 0xfc8
   32be4:	adds	r2, #20
   32be6:	str.w	sl, [sp]
   32bea:	mov	r0, r7
   32bec:	ldr	r1, [r4, #0]
   32bee:	str	r2, [sp, #8]
   32bf0:	bl	31538 <print_all_devices@@Base+0x160>
   32bf4:	mov	fp, r0
   32bf6:	ldr	r0, [r4, #0]
   32bf8:	blx	8434 <free@plt+0x4>
   32bfc:	ldr	r2, [sp, #8]
   32bfe:	cmp.w	fp, #0
   32c02:	beq.n	32c10 <btrfs_util_create_snapshot_fd2@@Base+0x200>
   32c04:	ldr	r4, [r6, #0]
   32c06:	mov	r0, r8
   32c08:	blx	8998 <close@plt>
   32c0c:	str	r4, [r6, #0]
   32c0e:	b.n	32b88 <btrfs_util_create_snapshot_fd2@@Base+0x178>
   32c10:	ldr	r3, [sp, #20]
   32c12:	mov	r0, r8
   32c14:	str.w	fp, [sp, #4]
   32c18:	str	r3, [sp, #0]
   32c1a:	mov	r3, fp
   32c1c:	ldr.w	r1, [sl]
   32c20:	bl	32a10 <btrfs_util_create_snapshot_fd2@@Base>
   32c24:	ldr	r3, [r6, #0]
   32c26:	str	r3, [sp, #8]
   32c28:	mov	fp, r0
   32c2a:	mov	r0, r8
   32c2c:	blx	8998 <close@plt>
   32c30:	ldr	r3, [sp, #8]
   32c32:	ldr.w	r0, [sl]
   32c36:	str	r3, [r6, #0]
   32c38:	blx	8998 <close@plt>
   32c3c:	ldr	r3, [sp, #8]
   32c3e:	str	r3, [r6, #0]
   32c40:	cmp.w	fp, #0
   32c44:	bne.n	32b88 <btrfs_util_create_snapshot_fd2@@Base+0x178>
   32c46:	cmp	r5, #0
   32c48:	beq.n	32b64 <btrfs_util_create_snapshot_fd2@@Base+0x154>
   32c4a:	ldr	r3, [sp, #16]
   32c4c:	ldrd	r0, r1, [r3]
   32c50:	ldrd	r2, r3, [r5]
   32c54:	cmp	r3, r1
   32c56:	it	eq
   32c58:	cmpeq	r2, r0
   32c5a:	bcs.n	32b64 <btrfs_util_create_snapshot_fd2@@Base+0x154>
   32c5c:	strd	r0, r1, [r5]
   32c60:	b.n	32b64 <btrfs_util_create_snapshot_fd2@@Base+0x154>
   32c62:	movs	r6, #7
   32c64:	b.n	32a7a <btrfs_util_create_snapshot_fd2@@Base+0x6a>
   32c66:	movs	r6, #16
   32c68:	b.n	32a7a <btrfs_util_create_snapshot_fd2@@Base+0x6a>
   32c6a:	mov	r6, r3
   32c6c:	b.n	32a7a <btrfs_util_create_snapshot_fd2@@Base+0x6a>
   32c6e:	mov	r0, r6
   32c70:	add.w	sp, sp, #8192	; 0x2000
   32c74:	add	sp, #4
   32c76:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32c7a:	nop
   32c7c:	str	r4, [sp, #92]	; 0x5c
   32c7e:	str	r0, [r0, r0]
   32c80:	asrs	r4, r2, #13
   32c82:	movs	r3, r0
   32c84:	lsls	r0, r4, #8
   32c86:	movs	r0, r0
   32c88:	asrs	r0, r0, #12
   32c8a:	movs	r3, r0

00032c8c <btrfs_util_create_snapshot_fd@@Base>:
   32c8c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   32c90:	subw	sp, sp, #4068	; 0xfe4
   32c94:	mov	r8, r3
   32c96:	add.w	r3, sp, #4096	; 0x1000
   32c9a:	mov	r7, r2
   32c9c:	ldr	r2, [pc, #112]	; (32d10 <btrfs_util_create_snapshot_fd@@Base+0x84>)
   32c9e:	ldr.w	r9, [r3]
   32ca2:	add	r6, sp, #16
   32ca4:	ldr	r3, [pc, #108]	; (32d14 <btrfs_util_create_snapshot_fd@@Base+0x88>)
   32ca6:	add	r2, pc
   32ca8:	mov	r5, r0
   32caa:	mvn.w	r0, #99	; 0x63
   32cae:	ldr	r3, [r2, r3]
   32cb0:	add	r2, sp, #20
   32cb2:	ldr	r3, [r3, #0]
   32cb4:	str.w	r3, [sp, #4060]	; 0xfdc
   32cb8:	mov.w	r3, #0
   32cbc:	movw	r3, #4040	; 0xfc8
   32cc0:	str	r6, [sp, #0]
   32cc2:	str	r2, [sp, #12]
   32cc4:	bl	31538 <print_all_devices@@Base+0x160>
   32cc8:	mov	r4, r0
   32cca:	cbnz	r0, 32cee <btrfs_util_create_snapshot_fd@@Base+0x62>
   32ccc:	mov	r3, r7
   32cce:	ldr	r2, [sp, #12]
   32cd0:	mov	r0, r5
   32cd2:	strd	r8, r9, [sp]
   32cd6:	ldr	r1, [r6, #0]
   32cd8:	bl	32a10 <btrfs_util_create_snapshot_fd2@@Base>
   32cdc:	mov	r4, r0
   32cde:	blx	8784 <__errno_location@plt>
   32ce2:	ldr	r7, [r0, #0]
   32ce4:	mov	r5, r0
   32ce6:	ldr	r0, [r6, #0]
   32ce8:	blx	8998 <close@plt>
   32cec:	str	r7, [r5, #0]
   32cee:	ldr	r2, [pc, #40]	; (32d18 <btrfs_util_create_snapshot_fd@@Base+0x8c>)
   32cf0:	ldr	r3, [pc, #32]	; (32d14 <btrfs_util_create_snapshot_fd@@Base+0x88>)
   32cf2:	add	r2, pc
   32cf4:	ldr	r3, [r2, r3]
   32cf6:	ldr	r2, [r3, #0]
   32cf8:	ldr.w	r3, [sp, #4060]	; 0xfdc
   32cfc:	eors	r2, r3
   32cfe:	beq.n	32d04 <btrfs_util_create_snapshot_fd@@Base+0x78>
   32d00:	blx	8510 <__stack_chk_fail@plt>
   32d04:	mov	r0, r4
   32d06:	addw	sp, sp, #4068	; 0xfe4
   32d0a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   32d0e:	nop
   32d10:	asrs	r6, r3, #3
   32d12:	movs	r3, r0
   32d14:	lsls	r0, r4, #8
   32d16:	movs	r0, r0
   32d18:	asrs	r2, r2, #2
   32d1a:	movs	r3, r0

00032d1c <btrfs_util_create_snapshot@@Base>:
   32d1c:	push	{r4, r5, r6, r7, lr}
   32d1e:	sub	sp, #20
   32d20:	mov	r4, r1
   32d22:	movs	r1, #0
   32d24:	strd	r3, r2, [sp, #8]
   32d28:	blx	8700 <open@plt>
   32d2c:	adds	r3, r0, #1
   32d2e:	mov	r6, r0
   32d30:	beq.n	32d58 <btrfs_util_create_snapshot@@Base+0x3c>
   32d32:	ldr	r1, [sp, #40]	; 0x28
   32d34:	ldrd	r3, r2, [sp, #8]
   32d38:	str	r1, [sp, #0]
   32d3a:	mov	r1, r4
   32d3c:	bl	32c8c <btrfs_util_create_snapshot_fd@@Base>
   32d40:	mov	r4, r0
   32d42:	blx	8784 <__errno_location@plt>
   32d46:	ldr	r7, [r0, #0]
   32d48:	mov	r5, r0
   32d4a:	mov	r0, r6
   32d4c:	blx	8998 <close@plt>
   32d50:	str	r7, [r5, #0]
   32d52:	mov	r0, r4
   32d54:	add	sp, #20
   32d56:	pop	{r4, r5, r6, r7, pc}
   32d58:	movs	r4, #7
   32d5a:	b.n	32d52 <btrfs_util_create_snapshot@@Base+0x36>

00032d5c <btrfs_util_delete_subvolume_fd@@Base>:
   32d5c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32d60:	mov	r5, r1
   32d62:	ldr	r1, [pc, #384]	; (32ee4 <btrfs_util_delete_subvolume_fd@@Base+0x188>)
   32d64:	mov	r6, r2
   32d66:	ldr	r2, [pc, #384]	; (32ee8 <btrfs_util_delete_subvolume_fd@@Base+0x18c>)
   32d68:	sub.w	sp, sp, #8192	; 0x2000
   32d6c:	add	r1, pc
   32d6e:	sub	sp, #36	; 0x24
   32d70:	add.w	r3, sp, #8192	; 0x2000
   32d74:	add	r4, sp, #32
   32d76:	ldr	r2, [r1, r2]
   32d78:	mov	r7, r0
   32d7a:	mov	r0, r4
   32d7c:	movs	r1, #0
   32d7e:	ldr	r2, [r2, #0]
   32d80:	str	r2, [r3, #28]
   32d82:	mov.w	r2, #0
   32d86:	mov.w	r2, #4096	; 0x1000
   32d8a:	adds	r3, #28
   32d8c:	blx	87c4 <memset@plt+0x4>
   32d90:	bics.w	r2, r6, #1
   32d94:	beq.n	32da4 <btrfs_util_delete_subvolume_fd@@Base+0x48>
   32d96:	blx	8784 <__errno_location@plt>
   32d9a:	movs	r3, #22
   32d9c:	mov.w	r8, #3
   32da0:	str	r3, [r0, #0]
   32da2:	b.n	32dd0 <btrfs_util_delete_subvolume_fd@@Base+0x74>
   32da4:	cbnz	r6, 32dbe <btrfs_util_delete_subvolume_fd@@Base+0x62>
   32da6:	mov	r0, r5
   32da8:	blx	8748 <strlen@plt>
   32dac:	movw	r3, #4087	; 0xff7
   32db0:	cmp	r0, r3
   32db2:	mov	r6, r0
   32db4:	bls.n	32ea4 <btrfs_util_delete_subvolume_fd@@Base+0x148>
   32db6:	blx	8784 <__errno_location@plt>
   32dba:	movs	r3, #36	; 0x24
   32dbc:	b.n	32d9c <btrfs_util_delete_subvolume_fd@@Base+0x40>
   32dbe:	mov	r1, r5
   32dc0:	mov	r0, r7
   32dc2:	blx	8504 <openat@plt>
   32dc6:	adds	r3, r0, #1
   32dc8:	mov	r6, r0
   32dca:	bne.n	32dea <btrfs_util_delete_subvolume_fd@@Base+0x8e>
   32dcc:	mov.w	r8, #7
   32dd0:	ldr	r1, [pc, #280]	; (32eec <btrfs_util_delete_subvolume_fd@@Base+0x190>)
   32dd2:	add.w	r3, sp, #8192	; 0x2000
   32dd6:	ldr	r2, [pc, #272]	; (32ee8 <btrfs_util_delete_subvolume_fd@@Base+0x18c>)
   32dd8:	adds	r3, #28
   32dda:	add	r1, pc
   32ddc:	ldr	r2, [r1, r2]
   32dde:	ldr	r1, [r2, #0]
   32de0:	ldr	r2, [r3, #0]
   32de2:	eors	r1, r2
   32de4:	beq.n	32ed2 <btrfs_util_delete_subvolume_fd@@Base+0x176>
   32de6:	blx	8510 <__stack_chk_fail@plt>
   32dea:	sub.w	r3, r4, #12
   32dee:	movs	r2, #0
   32df0:	strd	r3, r3, [sp, #4]
   32df4:	movs	r3, #1
   32df6:	str	r3, [sp, #0]
   32df8:	movs	r3, #0
   32dfa:	bl	325dc <btrfs_util_create_subvolume_iterator_fd@@Base>
   32dfe:	mov	r8, r0
   32e00:	cbnz	r0, 32e3a <btrfs_util_delete_subvolume_fd@@Base+0xde>
   32e02:	add.w	sl, sp, #4128	; 0x1020
   32e06:	sub.w	r9, r4, #8
   32e0a:	add.w	sl, sl, #4
   32e0e:	ldr	r3, [sp, #8]
   32e10:	movs	r2, #0
   32e12:	mov	r1, r9
   32e14:	ldr	r0, [r3, #0]
   32e16:	bl	32744 <btrfs_util_subvolume_iterator_next@@Base>
   32e1a:	mov	r8, r0
   32e1c:	blx	8784 <__errno_location@plt>
   32e20:	mov	fp, r0
   32e22:	cmp.w	r8, #0
   32e26:	beq.n	32e56 <btrfs_util_delete_subvolume_fd@@Base+0xfa>
   32e28:	cmp.w	r8, #1
   32e2c:	it	eq
   32e2e:	moveq.w	r8, #0
   32e32:	ldr.w	r0, [r4, #-12]
   32e36:	bl	326f4 <btrfs_util_destroy_subvolume_iterator@@Base>
   32e3a:	blx	8784 <__errno_location@plt>
   32e3e:	ldr.w	sl, [r0]
   32e42:	mov	r9, r0
   32e44:	mov	r0, r6
   32e46:	blx	8998 <close@plt>
   32e4a:	str.w	sl, [r9]
   32e4e:	cmp.w	r8, #0
   32e52:	beq.n	32da6 <btrfs_util_delete_subvolume_fd@@Base+0x4a>
   32e54:	b.n	32dd0 <btrfs_util_delete_subvolume_fd@@Base+0x74>
   32e56:	subs	r3, r4, #4
   32e58:	mov	r2, sl
   32e5a:	str	r3, [sp, #0]
   32e5c:	mov	r0, r6
   32e5e:	ldr.w	r1, [r9]
   32e62:	movw	r3, #4088	; 0xff8
   32e66:	bl	31538 <print_all_devices@@Base+0x160>
   32e6a:	mov	r8, r0
   32e6c:	ldr.w	r0, [r9]
   32e70:	blx	8434 <free@plt+0x4>
   32e74:	cmp.w	r8, #0
   32e78:	bne.n	32e32 <btrfs_util_delete_subvolume_fd@@Base+0xd6>
   32e7a:	mov	r2, r8
   32e7c:	mov	r1, sl
   32e7e:	ldr.w	r0, [r4, #-4]
   32e82:	bl	32d5c <btrfs_util_delete_subvolume_fd@@Base>
   32e86:	ldr.w	r3, [fp]
   32e8a:	str	r3, [sp, #12]
   32e8c:	mov	r8, r0
   32e8e:	ldr.w	r0, [r4, #-4]
   32e92:	blx	8998 <close@plt>
   32e96:	ldr	r3, [sp, #12]
   32e98:	str.w	r3, [fp]
   32e9c:	cmp.w	r8, #0
   32ea0:	beq.n	32e0e <btrfs_util_delete_subvolume_fd@@Base+0xb2>
   32ea2:	b.n	32e32 <btrfs_util_delete_subvolume_fd@@Base+0xd6>
   32ea4:	mov	r2, r0
   32ea6:	movw	r3, #4088	; 0xff8
   32eaa:	mov	r1, r5
   32eac:	add.w	r0, r4, #8
   32eb0:	add	r6, r4
   32eb2:	blx	85a0 <__memcpy_chk@plt>
   32eb6:	ldr	r1, [pc, #40]	; (32ee0 <btrfs_util_delete_subvolume_fd@@Base+0x184>)
   32eb8:	mov	r2, r4
   32eba:	mov	r0, r7
   32ebc:	movs	r3, #0
   32ebe:	strb	r3, [r6, #8]
   32ec0:	blx	85bc <ioctl@plt>
   32ec4:	adds	r0, #1
   32ec6:	ite	ne
   32ec8:	movne.w	r8, #0
   32ecc:	moveq.w	r8, #18
   32ed0:	b.n	32dd0 <btrfs_util_delete_subvolume_fd@@Base+0x74>
   32ed2:	mov	r0, r8
   32ed4:	add.w	sp, sp, #8192	; 0x2000
   32ed8:	add	sp, #36	; 0x24
   32eda:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32ede:	nop
   32ee0:	str	r4, [sp, #60]	; 0x3c
   32ee2:	str	r0, [r0, r0]
   32ee4:	asrs	r0, r3, #32
   32ee6:	movs	r3, r0
   32ee8:	lsls	r0, r4, #8
   32eea:	movs	r0, r0
   32eec:	lsrs	r2, r5, #30
   32eee:	movs	r3, r0

00032ef0 <btrfs_util_delete_subvolume@@Base>:
   32ef0:	push	{r4, r5, r6, r7, lr}
   32ef2:	mov	r5, r1
   32ef4:	ldr	r1, [pc, #116]	; (32f6c <btrfs_util_delete_subvolume@@Base+0x7c>)
   32ef6:	sub.w	sp, sp, #4096	; 0x1000
   32efa:	ldr	r2, [pc, #116]	; (32f70 <btrfs_util_delete_subvolume@@Base+0x80>)
   32efc:	sub	sp, #12
   32efe:	add	r1, pc
   32f00:	add.w	r3, sp, #4096	; 0x1000
   32f04:	add	r7, sp, #12
   32f06:	adds	r3, #4
   32f08:	ldr	r2, [r1, r2]
   32f0a:	add	r6, sp, #8
   32f0c:	mov	r1, r0
   32f0e:	mvn.w	r0, #99	; 0x63
   32f12:	ldr	r2, [r2, #0]
   32f14:	str	r2, [r3, #0]
   32f16:	mov.w	r2, #0
   32f1a:	movw	r3, #4088	; 0xff8
   32f1e:	mov	r2, r7
   32f20:	str	r6, [sp, #0]
   32f22:	bl	31538 <print_all_devices@@Base+0x160>
   32f26:	mov	r4, r0
   32f28:	cbnz	r0, 32f46 <btrfs_util_delete_subvolume@@Base+0x56>
   32f2a:	mov	r2, r5
   32f2c:	mov	r1, r7
   32f2e:	ldr	r0, [r6, #0]
   32f30:	bl	32d5c <btrfs_util_delete_subvolume_fd@@Base>
   32f34:	mov	r4, r0
   32f36:	blx	8784 <__errno_location@plt>
   32f3a:	ldr	r7, [r0, #0]
   32f3c:	mov	r5, r0
   32f3e:	ldr	r0, [r6, #0]
   32f40:	blx	8998 <close@plt>
   32f44:	str	r7, [r5, #0]
   32f46:	ldr	r1, [pc, #44]	; (32f74 <btrfs_util_delete_subvolume@@Base+0x84>)
   32f48:	add.w	r3, sp, #4096	; 0x1000
   32f4c:	ldr	r2, [pc, #32]	; (32f70 <btrfs_util_delete_subvolume@@Base+0x80>)
   32f4e:	adds	r3, #4
   32f50:	add	r1, pc
   32f52:	ldr	r2, [r1, r2]
   32f54:	ldr	r1, [r2, #0]
   32f56:	ldr	r2, [r3, #0]
   32f58:	eors	r1, r2
   32f5a:	beq.n	32f60 <btrfs_util_delete_subvolume@@Base+0x70>
   32f5c:	blx	8510 <__stack_chk_fail@plt>
   32f60:	mov	r0, r4
   32f62:	add.w	sp, sp, #4096	; 0x1000
   32f66:	add	sp, #12
   32f68:	pop	{r4, r5, r6, r7, pc}
   32f6a:	nop
   32f6c:	lsrs	r6, r0, #26
   32f6e:	movs	r3, r0
   32f70:	lsls	r0, r4, #8
   32f72:	movs	r0, r0
   32f74:	lsrs	r4, r6, #24
   32f76:	movs	r3, r0

00032f78 <btrfs_util_subvolume_iterator_next_info@@Base>:
   32f78:	push	{r4, r5, lr}
   32f7a:	mov	r5, r2
   32f7c:	ldr	r2, [pc, #72]	; (32fc8 <btrfs_util_subvolume_iterator_next_info@@Base+0x50>)
   32f7e:	sub	sp, #28
   32f80:	ldr	r3, [pc, #72]	; (32fcc <btrfs_util_subvolume_iterator_next_info@@Base+0x54>)
   32f82:	mov	r4, r0
   32f84:	add	r2, pc
   32f86:	ldr	r3, [r2, r3]
   32f88:	add	r2, sp, #8
   32f8a:	ldr	r3, [r3, #0]
   32f8c:	str	r3, [sp, #20]
   32f8e:	mov.w	r3, #0
   32f92:	bl	32744 <btrfs_util_subvolume_iterator_next@@Base>
   32f96:	cbnz	r0, 32fa8 <btrfs_util_subvolume_iterator_next_info@@Base+0x30>
   32f98:	ldrb	r3, [r4, #0]
   32f9a:	str	r5, [sp, #0]
   32f9c:	cbz	r3, 32fbc <btrfs_util_subvolume_iterator_next_info@@Base+0x44>
   32f9e:	ldrd	r2, r3, [sp, #8]
   32fa2:	ldr	r0, [r4, #4]
   32fa4:	bl	320b0 <btrfs_util_subvolume_info_fd@@Base>
   32fa8:	ldr	r2, [pc, #36]	; (32fd0 <btrfs_util_subvolume_iterator_next_info@@Base+0x58>)
   32faa:	ldr	r3, [pc, #32]	; (32fcc <btrfs_util_subvolume_iterator_next_info@@Base+0x54>)
   32fac:	add	r2, pc
   32fae:	ldr	r3, [r2, r3]
   32fb0:	ldr	r2, [r3, #0]
   32fb2:	ldr	r3, [sp, #20]
   32fb4:	eors	r2, r3
   32fb6:	beq.n	32fc4 <btrfs_util_subvolume_iterator_next_info@@Base+0x4c>
   32fb8:	blx	8510 <__stack_chk_fail@plt>
   32fbc:	ldr	r0, [r4, #8]
   32fbe:	movs	r2, #0
   32fc0:	movs	r3, #0
   32fc2:	b.n	32fa4 <btrfs_util_subvolume_iterator_next_info@@Base+0x2c>
   32fc4:	add	sp, #28
   32fc6:	pop	{r4, r5, pc}
   32fc8:	lsrs	r0, r0, #24
   32fca:	movs	r3, r0
   32fcc:	lsls	r0, r4, #8
   32fce:	movs	r0, r0
   32fd0:	lsrs	r0, r3, #23
   32fd2:	movs	r3, r0

00032fd4 <btrfs_util_deleted_subvolumes_fd@@Base>:
   32fd4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32fd8:	mov	r6, r1
   32fda:	ldr	r1, [pc, #320]	; (3311c <btrfs_util_deleted_subvolumes_fd@@Base+0x148>)
   32fdc:	mov	r7, r2
   32fde:	ldr	r2, [pc, #320]	; (33120 <btrfs_util_deleted_subvolumes_fd@@Base+0x14c>)
   32fe0:	sub.w	sp, sp, #4096	; 0x1000
   32fe4:	add	r1, pc
   32fe6:	sub	sp, #28
   32fe8:	add	r5, sp, #16
   32fea:	add.w	r3, sp, #4096	; 0x1000
   32fee:	ldr	r2, [r1, r2]
   32ff0:	add	r4, sp, #24
   32ff2:	mov	fp, r0
   32ff4:	mov	r0, r5
   32ff6:	ldr	r2, [r2, #0]
   32ff8:	str	r2, [r3, #20]
   32ffa:	mov.w	r2, #0
   32ffe:	movs	r1, #0
   33000:	mov.w	r2, #4096	; 0x1000
   33004:	adds	r3, #20
   33006:	blx	87c4 <memset@plt+0x4>
   3300a:	movs	r2, #1
   3300c:	movs	r3, #0
   3300e:	strd	r2, r3, [r4, #-8]
   33012:	movs	r4, #0
   33014:	mvn.w	r2, #4
   33018:	mov	sl, r4
   3301a:	mov	r9, r4
   3301c:	mov.w	r3, #4294967295	; 0xffffffff
   33020:	str	r4, [r6, #0]
   33022:	strd	r2, r3, [r5, #8]
   33026:	strd	r2, r3, [r5, #16]
   3302a:	mov.w	r3, #4294967295	; 0xffffffff
   3302e:	mov.w	r2, #4294967295	; 0xffffffff
   33032:	str	r4, [r7, #0]
   33034:	strd	r2, r3, [r5, #32]
   33038:	strd	r2, r3, [r5, #48]	; 0x30
   3303c:	movs	r3, #48	; 0x30
   3303e:	strd	r3, r3, [r5, #56]	; 0x38
   33042:	ldr	r3, [r5, #64]	; 0x40
   33044:	cmp	r3, sl
   33046:	bhi.n	33066 <btrfs_util_deleted_subvolumes_fd@@Base+0x92>
   33048:	ldr	r1, [pc, #204]	; (33118 <btrfs_util_deleted_subvolumes_fd@@Base+0x144>)
   3304a:	mov	r2, r5
   3304c:	mov	r0, fp
   3304e:	mov.w	r3, #4096	; 0x1000
   33052:	str	r3, [r5, #64]	; 0x40
   33054:	blx	85bc <ioctl@plt>
   33058:	adds	r0, #1
   3305a:	beq.n	33102 <btrfs_util_deleted_subvolumes_fd@@Base+0x12e>
   3305c:	ldr	r3, [r5, #64]	; 0x40
   3305e:	cmp	r3, #0
   33060:	beq.n	330e8 <btrfs_util_deleted_subvolumes_fd@@Base+0x114>
   33062:	movs	r4, #0
   33064:	mov	sl, r4
   33066:	add.w	r8, sp, #120	; 0x78
   3306a:	movs	r3, #0
   3306c:	add	r8, r4
   3306e:	str	r3, [sp, #0]
   33070:	mov	r0, fp
   33072:	ldrd	r2, r3, [r8, #16]
   33076:	bl	320b0 <btrfs_util_subvolume_info_fd@@Base>
   3307a:	mov	r3, r0
   3307c:	cbnz	r0, 330d4 <btrfs_util_deleted_subvolumes_fd@@Base+0x100>
   3307e:	ldr	r3, [r7, #0]
   33080:	cmp	r3, r9
   33082:	bcc.n	3309e <btrfs_util_deleted_subvolumes_fd@@Base+0xca>
   33084:	cmp.w	r9, #0
   33088:	beq.n	330ce <btrfs_util_deleted_subvolumes_fd@@Base+0xfa>
   3308a:	mov.w	r9, r9, lsl #1
   3308e:	ldr	r0, [r6, #0]
   33090:	movs	r2, #8
   33092:	mov	r1, r9
   33094:	bl	33160 <btrfs_util_deleted_subvolumes@@Base+0x38>
   33098:	cmp	r0, #0
   3309a:	beq.n	33106 <btrfs_util_deleted_subvolumes_fd@@Base+0x132>
   3309c:	str	r0, [r6, #0]
   3309e:	ldr	r0, [r7, #0]
   330a0:	ldr	r1, [r6, #0]
   330a2:	adds	r3, r0, #1
   330a4:	str	r3, [r7, #0]
   330a6:	ldrd	r2, r3, [r8, #16]
   330aa:	add.w	r1, r1, r0, lsl #3
   330ae:	strd	r2, r3, [r1]
   330b2:	ldr.w	r3, [r8, #28]
   330b6:	adds	r4, #32
   330b8:	add.w	sl, sl, #1
   330bc:	add	r4, r3
   330be:	ldrd	r3, r2, [r8, #16]
   330c2:	adds	r3, #1
   330c4:	adc.w	r2, r2, #0
   330c8:	strd	r3, r2, [r5, #24]
   330cc:	b.n	33042 <btrfs_util_deleted_subvolumes_fd@@Base+0x6e>
   330ce:	mov.w	r9, #1
   330d2:	b.n	3308e <btrfs_util_deleted_subvolumes_fd@@Base+0xba>
   330d4:	cmp	r0, #6
   330d6:	beq.n	330b2 <btrfs_util_deleted_subvolumes_fd@@Base+0xde>
   330d8:	ldr	r0, [r6, #0]
   330da:	str	r3, [sp, #12]
   330dc:	blx	8434 <free@plt+0x4>
   330e0:	ldr	r3, [sp, #12]
   330e2:	movs	r2, #0
   330e4:	str	r2, [r6, #0]
   330e6:	str	r2, [r7, #0]
   330e8:	ldr	r0, [pc, #56]	; (33124 <btrfs_util_deleted_subvolumes_fd@@Base+0x150>)
   330ea:	add.w	r2, sp, #4096	; 0x1000
   330ee:	ldr	r1, [pc, #48]	; (33120 <btrfs_util_deleted_subvolumes_fd@@Base+0x14c>)
   330f0:	adds	r2, #20
   330f2:	add	r0, pc
   330f4:	ldr	r1, [r0, r1]
   330f6:	ldr	r0, [r1, #0]
   330f8:	ldr	r1, [r2, #0]
   330fa:	eors	r0, r1
   330fc:	beq.n	3310a <btrfs_util_deleted_subvolumes_fd@@Base+0x136>
   330fe:	blx	8510 <__stack_chk_fail@plt>
   33102:	movs	r3, #12
   33104:	b.n	330d8 <btrfs_util_deleted_subvolumes_fd@@Base+0x104>
   33106:	movs	r3, #2
   33108:	b.n	330d8 <btrfs_util_deleted_subvolumes_fd@@Base+0x104>
   3310a:	mov	r0, r3
   3310c:	add.w	sp, sp, #4096	; 0x1000
   33110:	add	sp, #28
   33112:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33116:	nop
   33118:	str	r4, [sp, #68]	; 0x44
   3311a:	beq.n	3311e <btrfs_util_deleted_subvolumes_fd@@Base+0x14a>
   3311c:	lsrs	r0, r4, #22
   3311e:	movs	r3, r0
   33120:	lsls	r0, r4, #8
   33122:	movs	r0, r0
   33124:	lsrs	r2, r2, #18
   33126:	movs	r3, r0

00033128 <btrfs_util_deleted_subvolumes@@Base>:
   33128:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   3312a:	mov	r4, r1
   3312c:	movs	r1, #0
   3312e:	str	r2, [sp, #4]
   33130:	blx	8700 <open@plt>
   33134:	adds	r3, r0, #1
   33136:	mov	r6, r0
   33138:	beq.n	3315a <btrfs_util_deleted_subvolumes@@Base+0x32>
   3313a:	mov	r1, r4
   3313c:	ldr	r2, [sp, #4]
   3313e:	bl	32fd4 <btrfs_util_deleted_subvolumes_fd@@Base>
   33142:	mov	r4, r0
   33144:	blx	8784 <__errno_location@plt>
   33148:	ldr	r7, [r0, #0]
   3314a:	mov	r5, r0
   3314c:	mov	r0, r6
   3314e:	blx	8998 <close@plt>
   33152:	str	r7, [r5, #0]
   33154:	mov	r0, r4
   33156:	add	sp, #12
   33158:	pop	{r4, r5, r6, r7, pc}
   3315a:	movs	r4, #7
   3315c:	b.n	33154 <btrfs_util_deleted_subvolumes@@Base+0x2c>
   3315e:	nop
   33160:	push	{r3, lr}
   33162:	mul.w	r3, r2, r1
   33166:	cmp	r1, r3
   33168:	bhi.n	33178 <btrfs_util_deleted_subvolumes@@Base+0x50>
   3316a:	cmp	r2, r3
   3316c:	bhi.n	33178 <btrfs_util_deleted_subvolumes@@Base+0x50>
   3316e:	mov	r1, r3
   33170:	ldmia.w	sp!, {r3, lr}
   33174:	b.w	8528 <realloc@plt>
   33178:	blx	8784 <__errno_location@plt>
   3317c:	movs	r3, #12
   3317e:	str	r3, [r0, #0]
   33180:	movs	r0, #0
   33182:	pop	{r3, pc}

00033184 <hash_crc32c@@Base>:
   33184:	push	{r4, lr}
   33186:	mov	r4, r2
   33188:	mov	r2, r1
   3318a:	mov	r1, r0
   3318c:	mov.w	r0, #4294967295	; 0xffffffff
   33190:	bl	16aee <crc32c_le@@Base>
   33194:	mvns	r0, r0
   33196:	str	r0, [r4, #0]
   33198:	movs	r0, #0
   3319a:	pop	{r4, pc}

0003319c <hash_xxhash@@Base>:
   3319c:	push	{r0, r1, r2, r3, r4, lr}
   3319e:	mov	r4, r2
   331a0:	ldr	r2, [pc, #60]	; (331e0 <hash_xxhash@@Base+0x44>)
   331a2:	ldr	r3, [pc, #64]	; (331e4 <hash_xxhash@@Base+0x48>)
   331a4:	add	r2, pc
   331a6:	ldr	r3, [r2, r3]
   331a8:	movs	r2, #0
   331aa:	ldr	r3, [r3, #0]
   331ac:	str	r3, [sp, #12]
   331ae:	mov.w	r3, #0
   331b2:	movs	r3, #0
   331b4:	bl	33b58 <XXH64@@Base>
   331b8:	ldr	r2, [pc, #44]	; (331e8 <hash_xxhash@@Base+0x4c>)
   331ba:	mov	r3, sp
   331bc:	add	r2, pc
   331be:	strd	r0, r1, [sp]
   331c2:	ldmia	r3!, {r0, r1}
   331c4:	ldr	r3, [pc, #28]	; (331e4 <hash_xxhash@@Base+0x48>)
   331c6:	str	r0, [r4, #0]
   331c8:	str	r1, [r4, #4]
   331ca:	ldr	r3, [r2, r3]
   331cc:	ldr	r2, [r3, #0]
   331ce:	ldr	r3, [sp, #12]
   331d0:	eors	r2, r3
   331d2:	beq.n	331d8 <hash_xxhash@@Base+0x3c>
   331d4:	blx	8510 <__stack_chk_fail@plt>
   331d8:	movs	r0, #0
   331da:	add	sp, #16
   331dc:	pop	{r4, pc}
   331de:	nop
   331e0:	lsrs	r0, r4, #15
   331e2:	movs	r3, r0
   331e4:	lsls	r0, r4, #8
   331e6:	movs	r0, r0
   331e8:	lsrs	r0, r1, #15
   331ea:	movs	r3, r0

000331ec <hash_sha256@@Base>:
   331ec:	push	{r4, r5, r6, r7, lr}
   331ee:	mov	r5, r2
   331f0:	ldr	r2, [pc, #72]	; (3323c <hash_sha256@@Base+0x50>)
   331f2:	sub	sp, #124	; 0x7c
   331f4:	ldr	r3, [pc, #72]	; (33240 <hash_sha256@@Base+0x54>)
   331f6:	mov	r7, r1
   331f8:	add	r2, pc
   331fa:	mov	r4, sp
   331fc:	mov	r6, r0
   331fe:	mov	r0, r4
   33200:	ldr	r3, [r2, r3]
   33202:	ldr	r3, [r3, #0]
   33204:	str	r3, [sp, #116]	; 0x74
   33206:	mov.w	r3, #0
   3320a:	bl	34406 <SHA256Reset@@Base>
   3320e:	mov	r2, r7
   33210:	mov	r1, r6
   33212:	mov	r0, r4
   33214:	bl	34444 <SHA256Input@@Base>
   33218:	mov	r1, r5
   3321a:	mov	r0, r4
   3321c:	bl	3453c <SHA256Result@@Base>
   33220:	ldr	r2, [pc, #32]	; (33244 <hash_sha256@@Base+0x58>)
   33222:	ldr	r3, [pc, #28]	; (33240 <hash_sha256@@Base+0x54>)
   33224:	add	r2, pc
   33226:	ldr	r3, [r2, r3]
   33228:	ldr	r2, [r3, #0]
   3322a:	ldr	r3, [sp, #116]	; 0x74
   3322c:	eors	r2, r3
   3322e:	beq.n	33234 <hash_sha256@@Base+0x48>
   33230:	blx	8510 <__stack_chk_fail@plt>
   33234:	movs	r0, #0
   33236:	add	sp, #124	; 0x7c
   33238:	pop	{r4, r5, r6, r7, pc}
   3323a:	nop
   3323c:	lsrs	r4, r1, #14
   3323e:	movs	r3, r0
   33240:	lsls	r0, r4, #8
   33242:	movs	r0, r0
   33244:	lsrs	r0, r4, #13
   33246:	movs	r3, r0

00033248 <hash_blake2b@@Base>:
   33248:	push	{r4, r5, r6, r7, lr}
   3324a:	mov	r5, r2
   3324c:	ldr	r2, [pc, #76]	; (3329c <hash_blake2b@@Base+0x54>)
   3324e:	sub	sp, #252	; 0xfc
   33250:	ldr	r3, [pc, #76]	; (332a0 <hash_blake2b@@Base+0x58>)
   33252:	mov	r6, r0
   33254:	add	r2, pc
   33256:	mov	r4, sp
   33258:	mov	r7, r1
   3325a:	mov	r0, r4
   3325c:	ldr	r3, [r2, r3]
   3325e:	movs	r1, #32
   33260:	ldr	r3, [r3, #0]
   33262:	str	r3, [sp, #244]	; 0xf4
   33264:	mov.w	r3, #0
   33268:	bl	37ff4 <blake2b_init@@Base>
   3326c:	mov	r2, r7
   3326e:	mov	r1, r6
   33270:	mov	r0, r4
   33272:	bl	38080 <blake2b_update@@Base>
   33276:	movs	r2, #32
   33278:	mov	r1, r5
   3327a:	mov	r0, r4
   3327c:	bl	38230 <blake2b_final@@Base>
   33280:	ldr	r2, [pc, #32]	; (332a4 <hash_blake2b@@Base+0x5c>)
   33282:	ldr	r3, [pc, #28]	; (332a0 <hash_blake2b@@Base+0x58>)
   33284:	add	r2, pc
   33286:	ldr	r3, [r2, r3]
   33288:	ldr	r2, [r3, #0]
   3328a:	ldr	r3, [sp, #244]	; 0xf4
   3328c:	eors	r2, r3
   3328e:	beq.n	33294 <hash_blake2b@@Base+0x4c>
   33290:	blx	8510 <__stack_chk_fail@plt>
   33294:	movs	r0, #0
   33296:	add	sp, #252	; 0xfc
   33298:	pop	{r4, r5, r6, r7, pc}
   3329a:	nop
   3329c:	lsrs	r0, r6, #12
   3329e:	movs	r3, r0
   332a0:	lsls	r0, r4, #8
   332a2:	movs	r0, r0
   332a4:	lsrs	r0, r0, #12
   332a6:	movs	r3, r0
   332a8:	push	{r4, r5, r6, r7, lr}
   332aa:	and.w	r2, r2, #15
   332ae:	ldr	r6, [pc, #96]	; (33310 <hash_blake2b@@Base+0xc8>)
   332b0:	adds	r5, r1, r2
   332b2:	ldr	r7, [pc, #96]	; (33314 <hash_blake2b@@Base+0xcc>)
   332b4:	mov	r4, r2
   332b6:	cmp	r4, #3
   332b8:	sub.w	r3, r5, r4
   332bc:	bhi.n	332ee <hash_blake2b@@Base+0xa6>
   332be:	and.w	r4, r2, #12
   332c2:	lsrs	r3, r2, #2
   332c4:	add	r1, r4
   332c6:	mvn.w	r4, #3
   332ca:	mla	r2, r4, r3, r2
   332ce:	ldr	r5, [pc, #72]	; (33318 <hash_blake2b@@Base+0xd0>)
   332d0:	ldr	r4, [pc, #72]	; (3331c <hash_blake2b@@Base+0xd4>)
   332d2:	add	r2, r1
   332d4:	cmp	r1, r2
   332d6:	bne.n	332fe <hash_blake2b@@Base+0xb6>
   332d8:	ldr	r3, [pc, #68]	; (33320 <hash_blake2b@@Base+0xd8>)
   332da:	eor.w	r0, r0, r0, lsr #15
   332de:	muls	r0, r3
   332e0:	ldr	r3, [pc, #44]	; (33310 <hash_blake2b@@Base+0xc8>)
   332e2:	eor.w	r0, r0, r0, lsr #13
   332e6:	muls	r0, r3
   332e8:	eor.w	r0, r0, r0, lsr #16
   332ec:	pop	{r4, r5, r6, r7, pc}
   332ee:	ldr	r3, [r3, #0]
   332f0:	subs	r4, #4
   332f2:	mla	r0, r6, r3, r0
   332f6:	mov.w	r0, r0, ror #15
   332fa:	muls	r0, r7
   332fc:	b.n	332b6 <hash_blake2b@@Base+0x6e>
   332fe:	ldrb.w	r3, [r1], #1
   33302:	mla	r0, r4, r3, r0
   33306:	mov.w	r0, r0, ror #21
   3330a:	muls	r0, r5
   3330c:	b.n	332d4 <hash_blake2b@@Base+0x8c>
   3330e:	nop
   33310:	add	r6, sp, #244	; 0xf4
   33312:	stmia	r2!, {r1, r4, r5, r7}
   33314:			; <UNDEFINED> instruction: 0xeb2f27d4
   33318:	ldrb	r1, [r6, #6]
   3331a:	ldr	r6, [sp, #220]	; 0xdc
   3331c:	str	r1, [r6, #120]	; 0x78
   3331e:	asrs	r6, r2, #25
   33320:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   33322:	strh	r3, [r5, #46]	; 0x2e
   33324:	cmp	r1, #15
   33326:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   3332a:	mov	r6, r1
   3332c:	bls.n	333c0 <hash_blake2b@@Base+0x178>
   3332e:	ldr	r4, [pc, #152]	; (333c8 <hash_blake2b@@Base+0x180>)
   33330:	sub.w	lr, r1, #15
   33334:	ldr	r7, [pc, #148]	; (333cc <hash_blake2b@@Base+0x184>)
   33336:	add	lr, r0
   33338:	ldr.w	ip, [pc, #152]	; 333d4 <hash_blake2b@@Base+0x18c>
   3333c:	add	r4, r2
   3333e:	ldr.w	r9, [pc, #152]	; 333d8 <hash_blake2b@@Base+0x190>
   33342:	adds	r5, r2, r7
   33344:	add	ip, r2
   33346:	mov	r1, r0
   33348:	ldr.w	r8, [r1]
   3334c:	adds	r1, #16
   3334e:	mla	r4, r7, r8, r4
   33352:	ldr.w	r8, [r1, #-12]
   33356:	mla	r5, r7, r8, r5
   3335a:	ldr.w	r8, [r1, #-8]
   3335e:	mov.w	r4, r4, ror #19
   33362:	mla	r2, r7, r8, r2
   33366:	ldr.w	r8, [r1, #-4]
   3336a:	mov.w	r5, r5, ror #19
   3336e:	cmp	lr, r1
   33370:	mul.w	r4, r9, r4
   33374:	mla	ip, r7, r8, ip
   33378:	mov.w	r2, r2, ror #19
   3337c:	mul.w	r5, r9, r5
   33380:	mul.w	r2, r9, r2
   33384:	mov.w	ip, ip, ror #19
   33388:	mul.w	ip, r9, ip
   3338c:	bhi.n	33348 <hash_blake2b@@Base+0x100>
   3338e:	sub.w	r1, r6, #16
   33392:	mov.w	r5, r5, ror #25
   33396:	bic.w	r1, r1, #15
   3339a:	adds	r7, r0, #1
   3339c:	adds	r1, #16
   3339e:	add.w	r5, r5, r4, ror #31
   333a2:	cmp	lr, r7
   333a4:	it	cc
   333a6:	movcc	r1, #16
   333a8:	add.w	r4, r5, r2, ror #20
   333ac:	add	r0, r1
   333ae:	add.w	r4, r4, ip, ror #14
   333b2:	and.w	r2, r6, #15
   333b6:	mov	r1, r0
   333b8:	adds	r0, r4, r6
   333ba:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   333be:	b.n	332a8 <hash_blake2b@@Base+0x60>
   333c0:	ldr	r4, [pc, #12]	; (333d0 <hash_blake2b@@Base+0x188>)
   333c2:	add	r4, r2
   333c4:	b.n	333b2 <hash_blake2b@@Base+0x16a>
   333c6:	nop
   333c8:	add	r0, r5
   333ca:	movs	r4, #35	; 0x23
   333cc:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   333ce:	strh	r3, [r5, #46]	; 0x2e
   333d0:	str	r1, [r6, #120]	; 0x78
   333d2:	asrs	r6, r2, #25
   333d4:	strh	r7, [r1, #50]	; 0x32
   333d6:	str	r0, [r1, #28]
   333d8:	ldrb	r1, [r6, #6]
   333da:	ldr	r6, [sp, #220]	; 0xdc
   333dc:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   333e0:	and.w	r3, r3, #31
   333e4:	ldr.w	r8, [pc, #368]	; 33558 <hash_blake2b@@Base+0x310>
   333e8:	add.w	sl, r2, r3
   333ec:	ldr.w	lr, [pc, #352]	; 33550 <hash_blake2b@@Base+0x308>
   333f0:	mov	ip, r3
   333f2:	ldr.w	r9, [pc, #352]	; 33554 <hash_blake2b@@Base+0x30c>
   333f6:	ldr.w	fp, [pc, #376]	; 33570 <hash_blake2b@@Base+0x328>
   333fa:	strd	r0, r1, [sp]
   333fe:	cmp.w	ip, #7
   33402:	sub.w	r1, sl, ip
   33406:	bhi.n	334b4 <hash_blake2b@@Base+0x26c>
   33408:	and.w	r0, r3, #24
   3340c:	lsrs	r1, r3, #3
   3340e:	add	r2, r0
   33410:	mvn.w	r0, #7
   33414:	mla	r3, r0, r1, r3
   33418:	cmp	r3, #3
   3341a:	bls.n	33462 <hash_blake2b@@Base+0x21a>
   3341c:	ldr.w	r6, [r2], #4
   33420:	subs	r3, #4
   33422:	ldr	r0, [pc, #300]	; (33550 <hash_blake2b@@Base+0x308>)
   33424:	ldr	r7, [pc, #300]	; (33554 <hash_blake2b@@Base+0x30c>)
   33426:	ldr	r1, [sp, #0]
   33428:	umull	r4, r5, r6, r0
   3342c:	eor.w	r0, r4, r1
   33430:	ldr	r1, [sp, #4]
   33432:	mla	r5, r7, r6, r5
   33436:	ldr	r7, [pc, #288]	; (33558 <hash_blake2b@@Base+0x310>)
   33438:	eors	r1, r5
   3343a:	lsls	r6, r1, #23
   3343c:	orr.w	r6, r6, r0, lsr #9
   33440:	lsls	r0, r0, #23
   33442:	orr.w	r0, r0, r1, lsr #9
   33446:	ldr	r1, [pc, #276]	; (3355c <hash_blake2b@@Base+0x314>)
   33448:	umull	r4, r5, r0, r7
   3344c:	muls	r1, r0
   3344e:	ldr	r0, [pc, #272]	; (33560 <hash_blake2b@@Base+0x318>)
   33450:	mla	r6, r7, r6, r1
   33454:	add	r5, r6
   33456:	ldr	r6, [pc, #268]	; (33564 <hash_blake2b@@Base+0x31c>)
   33458:	adds	r1, r4, r6
   3345a:	str	r1, [sp, #0]
   3345c:	adc.w	r1, r5, r0
   33460:	str	r1, [sp, #4]
   33462:	ldr	r7, [pc, #260]	; (33568 <hash_blake2b@@Base+0x320>)
   33464:	add	r3, r2
   33466:	ldr.w	ip, [pc, #268]	; 33574 <hash_blake2b@@Base+0x32c>
   3346a:	ldr	r6, [pc, #228]	; (33550 <hash_blake2b@@Base+0x308>)
   3346c:	ldr.w	lr, [pc, #228]	; 33554 <hash_blake2b@@Base+0x30c>
   33470:	cmp	r2, r3
   33472:	bne.n	33516 <hash_blake2b@@Base+0x2ce>
   33474:	ldrd	r3, r2, [sp]
   33478:	ldr	r1, [pc, #224]	; (3355c <hash_blake2b@@Base+0x314>)
   3347a:	ldr	r0, [sp, #4]
   3347c:	eor.w	r2, r3, r2, lsr #1
   33480:	ldr	r3, [pc, #212]	; (33558 <hash_blake2b@@Base+0x310>)
   33482:	muls	r1, r2
   33484:	mla	r1, r3, r0, r1
   33488:	umull	r2, r3, r2, r3
   3348c:	add	r3, r1
   3348e:	eor.w	r1, r3, r3, lsr #29
   33492:	lsrs	r0, r2, #29
   33494:	orr.w	r0, r0, r3, lsl #3
   33498:	ldr	r3, [pc, #196]	; (33560 <hash_blake2b@@Base+0x318>)
   3349a:	eors	r0, r2
   3349c:	ldr	r2, [pc, #196]	; (33564 <hash_blake2b@@Base+0x31c>)
   3349e:	muls	r3, r0
   334a0:	umull	r4, r5, r0, r2
   334a4:	mla	r3, r2, r1, r3
   334a8:	adds	r1, r5, r3
   334aa:	eor.w	r0, r4, r1
   334ae:	add	sp, #12
   334b0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   334b4:	ldr	r0, [r1, #0]
   334b6:	sub.w	ip, ip, #8
   334ba:	ldr	r6, [r1, #4]
   334bc:	ldr	r1, [pc, #156]	; (3355c <hash_blake2b@@Base+0x314>)
   334be:	muls	r1, r0
   334c0:	mla	r6, r8, r6, r1
   334c4:	umull	r0, r1, r0, r8
   334c8:	add	r1, r6
   334ca:	lsls	r7, r1, #31
   334cc:	lsls	r6, r0, #31
   334ce:	orr.w	r7, r7, r0, lsr #1
   334d2:	orr.w	r6, r6, r1, lsr #1
   334d6:	mul.w	r1, r9, r6
   334da:	mla	r1, lr, r7, r1
   334de:	umull	r6, r7, r6, lr
   334e2:	add	r7, r1
   334e4:	ldr	r1, [sp, #0]
   334e6:	eor.w	r0, r6, r1
   334ea:	ldr	r1, [sp, #4]
   334ec:	eors	r1, r7
   334ee:	lsls	r6, r1, #27
   334f0:	orr.w	r6, r6, r0, lsr #5
   334f4:	lsls	r0, r0, #27
   334f6:	orr.w	r0, r0, r1, lsr #5
   334fa:	mul.w	r1, r9, r0
   334fe:	mla	r6, lr, r6, r1
   33502:	umull	r0, r1, r0, lr
   33506:	adds.w	r4, r0, fp
   3350a:	str	r4, [sp, #0]
   3350c:	ldr	r4, [pc, #92]	; (3356c <hash_blake2b@@Base+0x324>)
   3350e:	add	r1, r6
   33510:	adcs	r1, r4
   33512:	str	r1, [sp, #4]
   33514:	b.n	333fe <hash_blake2b@@Base+0x1b6>
   33516:	ldrb.w	r8, [r2], #1
   3351a:	ldr	r5, [sp, #4]
   3351c:	ldr	r4, [sp, #0]
   3351e:	umull	r0, r1, r8, r7
   33522:	eors	r4, r0
   33524:	mla	r1, ip, r8, r1
   33528:	eors	r5, r1
   3352a:	lsls	r1, r5, #11
   3352c:	orr.w	r1, r1, r4, lsr #21
   33530:	lsls	r4, r4, #11
   33532:	orr.w	r4, r4, r5, lsr #21
   33536:	mul.w	r0, lr, r4
   3353a:	umull	r4, r5, r4, r6
   3353e:	mla	r1, r6, r1, r0
   33542:	strd	r4, r5, [sp]
   33546:	ldr	r0, [sp, #4]
   33548:	add	r0, r1
   3354a:	str	r0, [sp, #4]
   3354c:	b.n	33470 <hash_blake2b@@Base+0x228>
   3354e:	nop
   33550:	ldmia	r2, {r0, r1, r2, r7}
   33552:	strh	r3, [r5, #46]	; 0x2e
   33554:	ldrb	r1, [r6, #6]
   33556:	ldr	r6, [sp, #220]	; 0xdc
   33558:	adc.w	r7, pc, r4, lsr #11
   3355c:	add	r6, sp, #244	; 0xf4
   3355e:	stmia	r2!, {r1, r4, r5, r7}
   33560:	str	r1, [r6, #120]	; 0x78
   33562:	asrs	r6, r2, #25
   33564:	ldrb	r1, [r7, #7]
   33566:	ldr	r6, [sp, #220]	; 0xdc
   33568:	str	r5, [r0, #124]	; 0x7c
   3356a:	asrs	r6, r2, #25
   3356c:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   3356e:	strh	r3, [r5, #46]	; 0x2e
   33570:	add	r6, sp, #396	; 0x18c
   33572:	stmia	r2!, {r1, r4, r5, r7}
   33574:			; <UNDEFINED> instruction: 0xeb2f27d4
   33578:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3357c:	sub	sp, #84	; 0x54
   3357e:	mov	fp, r3
   33580:	cmp	r1, #31
   33582:	ldr	r3, [sp, #120]	; 0x78
   33584:	mov	sl, r2
   33586:	str	r0, [sp, #40]	; 0x28
   33588:	str	r1, [sp, #52]	; 0x34
   3358a:	str	r3, [sp, #76]	; 0x4c
   3358c:	bls.w	338fc <hash_blake2b@@Base+0x6b4>
   33590:	sub.w	r3, r1, #32
   33594:	str	r3, [sp, #56]	; 0x38
   33596:	ldr	r3, [pc, #820]	; (338cc <hash_blake2b@@Base+0x684>)
   33598:	mov	r1, r0
   3359a:	ldr	r2, [sp, #56]	; 0x38
   3359c:	adds.w	r3, sl, r3
   335a0:	str	r3, [sp, #0]
   335a2:	ldr	r3, [pc, #812]	; (338d0 <hash_blake2b@@Base+0x688>)
   335a4:	add.w	r9, r0, r2
   335a8:	ldr	r5, [pc, #808]	; (338d4 <hash_blake2b@@Base+0x68c>)
   335aa:	adc.w	r3, fp, r3
   335ae:	str	r3, [sp, #4]
   335b0:	ldr	r3, [pc, #800]	; (338d4 <hash_blake2b@@Base+0x68c>)
   335b2:	ldr.w	ip, [pc, #804]	; 338d8 <hash_blake2b@@Base+0x690>
   335b6:	adds.w	r3, sl, r3
   335ba:	str	r3, [sp, #8]
   335bc:	ldr	r3, [pc, #792]	; (338d8 <hash_blake2b@@Base+0x690>)
   335be:	ldr	r2, [pc, #796]	; (338dc <hash_blake2b@@Base+0x694>)
   335c0:	adc.w	r3, fp, r3
   335c4:	str	r3, [sp, #12]
   335c6:	ldr	r3, [pc, #792]	; (338e0 <hash_blake2b@@Base+0x698>)
   335c8:	adds.w	r3, sl, r3
   335cc:	str	r3, [sp, #16]
   335ce:	ldr	r3, [pc, #788]	; (338e4 <hash_blake2b@@Base+0x69c>)
   335d0:	adc.w	r3, fp, r3
   335d4:	str	r3, [sp, #20]
   335d6:	ldr	r3, [pc, #784]	; (338e8 <hash_blake2b@@Base+0x6a0>)
   335d8:	ldr	r6, [r1, #0]
   335da:	adds	r1, #32
   335dc:	ldr.w	r4, [r1, #-28]
   335e0:	ldr.w	lr, [r1, #-12]
   335e4:	mul.w	r0, ip, r6
   335e8:	mla	r0, r5, r4, r0
   335ec:	ldr	r4, [sp, #4]
   335ee:	umull	r6, r7, r6, r5
   335f2:	add	r7, r0
   335f4:	ldr	r0, [sp, #0]
   335f6:	adds	r0, r6, r0
   335f8:	adc.w	r4, r7, r4
   335fc:	mov.w	r8, r4, lsl #31
   33600:	orr.w	r6, r8, r0, lsr #1
   33604:	lsls	r0, r0, #31
   33606:	orr.w	r0, r0, r4, lsr #1
   3360a:	str	r0, [sp, #48]	; 0x30
   3360c:	str	r6, [sp, #72]	; 0x48
   3360e:	mul.w	r4, r2, r0
   33612:	ldr	r0, [sp, #48]	; 0x30
   33614:	mla	r4, r3, r6, r4
   33618:	umull	r6, r7, r0, r3
   3361c:	strd	r6, r7, [sp]
   33620:	ldr.w	r6, [r1, #-24]
   33624:	ldr.w	r7, [r1, #-20]
   33628:	ldr	r0, [sp, #4]
   3362a:	adds	r0, r4, r0
   3362c:	str	r0, [sp, #4]
   3362e:	mul.w	r4, ip, r6
   33632:	ldr	r0, [sp, #8]
   33634:	mla	r4, r5, r7, r4
   33638:	umull	r6, r7, r6, r5
   3363c:	add	r7, r4
   3363e:	adds	r4, r6, r0
   33640:	ldr	r0, [sp, #12]
   33642:	adc.w	r0, r7, r0
   33646:	lsls	r7, r0, #31
   33648:	mov	r6, r0
   3364a:	orr.w	r0, r7, r4, lsr #1
   3364e:	lsls	r4, r4, #31
   33650:	orr.w	r4, r4, r6, lsr #1
   33654:	str	r0, [sp, #68]	; 0x44
   33656:	umull	r7, r8, r4, r3
   3365a:	mul.w	r6, r2, r4
   3365e:	mla	r6, r3, r0, r6
   33662:	strd	r7, r8, [sp, #8]
   33666:	ldr	r0, [sp, #12]
   33668:	adds	r0, r6, r0
   3366a:	ldr.w	r6, [r1, #-16]
   3366e:	str	r0, [sp, #12]
   33670:	mul.w	r7, ip, r6
   33674:	mla	lr, r5, lr, r7
   33678:	umull	r7, r8, r6, r5
   3367c:	adds.w	r6, r7, sl
   33680:	add	r8, lr
   33682:	adc.w	sl, r8, fp
   33686:	ldr.w	lr, [r1, #-4]
   3368a:	mov.w	r7, sl, lsl #31
   3368e:	orr.w	r0, r7, r6, lsr #1
   33692:	lsls	r6, r6, #31
   33694:	str	r0, [sp, #60]	; 0x3c
   33696:	orr.w	r0, r6, sl, lsr #1
   3369a:	str	r0, [sp, #44]	; 0x2c
   3369c:	mul.w	r6, r2, r0
   336a0:	ldr	r0, [sp, #60]	; 0x3c
   336a2:	mla	r6, r3, r0, r6
   336a6:	ldr	r0, [sp, #44]	; 0x2c
   336a8:	umull	sl, fp, r0, r3
   336ac:	add	fp, r6
   336ae:	ldr.w	r6, [r1, #-8]
   336b2:	mul.w	r7, ip, r6
   336b6:	mla	lr, r5, lr, r7
   336ba:	umull	r6, r7, r6, r5
   336be:	strd	r6, r7, [sp, #32]
   336c2:	ldr	r0, [sp, #36]	; 0x24
   336c4:	ldr	r6, [sp, #32]
   336c6:	add	r0, lr
   336c8:	str	r0, [sp, #36]	; 0x24
   336ca:	ldr	r0, [sp, #16]
   336cc:	ldr	r7, [sp, #20]
   336ce:	adds	r6, r6, r0
   336d0:	ldr	r0, [sp, #36]	; 0x24
   336d2:	adc.w	r7, r0, r7
   336d6:	cmp	r9, r1
   336d8:	mov.w	lr, r7, lsl #31
   336dc:	orr.w	r0, lr, r6, lsr #1
   336e0:	mov.w	r6, r6, lsl #31
   336e4:	str	r0, [sp, #64]	; 0x40
   336e6:	orr.w	r0, r6, r7, lsr #1
   336ea:	str	r0, [sp, #32]
   336ec:	mul.w	r6, r2, r0
   336f0:	ldr	r0, [sp, #64]	; 0x40
   336f2:	mla	r6, r3, r0, r6
   336f6:	ldr	r0, [sp, #32]
   336f8:	umull	r7, r8, r0, r3
   336fc:	strd	r7, r8, [sp, #16]
   33700:	ldr	r0, [sp, #20]
   33702:	add	r0, r6
   33704:	str	r0, [sp, #20]
   33706:	bcs.w	335d8 <hash_blake2b@@Base+0x390>
   3370a:	ldr	r1, [sp, #56]	; 0x38
   3370c:	add.w	r5, r9, #1
   33710:	ldr	r0, [sp, #40]	; 0x28
   33712:	bic.w	r1, r1, #31
   33716:	ldr.w	r9, [pc, #468]	; 338ec <hash_blake2b@@Base+0x6a4>
   3371a:	adds	r6, r0, #1
   3371c:	adds	r1, #32
   3371e:	cmp	r5, r6
   33720:	it	cc
   33722:	movcc	r1, #32
   33724:	ldr.w	lr, [pc, #456]	; 338f0 <hash_blake2b@@Base+0x6a8>
   33728:	adds	r1, r0, r1
   3372a:	str	r1, [sp, #40]	; 0x28
   3372c:	ldr	r1, [sp, #48]	; 0x30
   3372e:	ldr	r0, [sp, #72]	; 0x48
   33730:	mul.w	r1, r9, r1
   33734:	mla	r8, lr, r0, r1
   33738:	ldr	r1, [sp, #48]	; 0x30
   3373a:	umull	r6, r7, r1, lr
   3373e:	add	r7, r8
   33740:	lsls	r5, r7, #31
   33742:	orr.w	r1, r5, r6, lsr #1
   33746:	str	r1, [sp, #48]	; 0x30
   33748:	ldr	r1, [sp, #4]
   3374a:	lsls	r0, r6, #31
   3374c:	ldr	r6, [sp, #0]
   3374e:	orr.w	r0, r0, r7, lsr #1
   33752:	ldr	r5, [sp, #12]
   33754:	lsls	r1, r1, #1
   33756:	orr.w	r7, r1, r6, lsr #31
   3375a:	ldr	r1, [sp, #4]
   3375c:	lsls	r6, r6, #1
   3375e:	orr.w	r6, r6, r1, lsr #31
   33762:	ldr	r1, [sp, #12]
   33764:	mov.w	r8, r1, lsl #7
   33768:	ldr	r1, [sp, #8]
   3376a:	orr.w	ip, r8, r1, lsr #25
   3376e:	lsls	r1, r1, #7
   33770:	orr.w	r1, r1, r5, lsr #25
   33774:	ldr	r5, [sp, #20]
   33776:	adds	r1, r6, r1
   33778:	mov.w	r6, sl, lsl #12
   3377c:	orr.w	r6, r6, fp, lsr #20
   33780:	adc.w	r7, r7, ip
   33784:	adds	r6, r1, r6
   33786:	ldr	r1, [sp, #20]
   33788:	mov.w	ip, fp, lsl #12
   3378c:	orr.w	r8, ip, sl, lsr #20
   33790:	adc.w	r7, r7, r8
   33794:	mov.w	r8, r1, lsl #18
   33798:	ldr	r1, [sp, #16]
   3379a:	orr.w	ip, r8, r1, lsr #14
   3379e:	lsls	r1, r1, #18
   337a0:	orr.w	r1, r1, r5, lsr #14
   337a4:	ldr	r5, [sp, #48]	; 0x30
   337a6:	adds	r6, r6, r1
   337a8:	ldr.w	r8, [pc, #328]	; 338f4 <hash_blake2b@@Base+0x6ac>
   337ac:	mul.w	r1, r2, r0
   337b0:	adc.w	r7, r7, ip
   337b4:	mla	r5, r3, r5, r1
   337b8:	umull	r0, r1, r0, r3
   337bc:	add	r1, r5
   337be:	eors	r6, r0
   337c0:	ldr	r0, [sp, #68]	; 0x44
   337c2:	eors	r7, r1
   337c4:	mul.w	r1, r9, r4
   337c8:	umull	r4, r5, r4, lr
   337cc:	mla	r1, lr, r0, r1
   337d0:	mul.w	ip, r2, r6
   337d4:	add	r5, r1
   337d6:	lsls	r0, r4, #31
   337d8:	mla	ip, r3, r7, ip
   337dc:	orr.w	r0, r0, r5, lsr #1
   337e0:	lsls	r1, r5, #31
   337e2:	umull	r6, r7, r6, r3
   337e6:	orr.w	r1, r1, r4, lsr #1
   337ea:	mul.w	r4, r2, r0
   337ee:	add	r7, ip
   337f0:	mla	r4, r3, r1, r4
   337f4:	ldr.w	ip, [pc, #256]	; 338f8 <hash_blake2b@@Base+0x6b0>
   337f8:	umull	r0, r1, r0, r3
   337fc:	add	r1, r4
   337fe:	adds.w	r4, r6, ip
   33802:	adc.w	r5, r7, r8
   33806:	eors	r4, r0
   33808:	eors	r1, r5
   3380a:	mul.w	r0, r2, r4
   3380e:	mla	r1, r3, r1, r0
   33812:	umull	r4, r5, r4, r3
   33816:	add	r5, r1
   33818:	ldr	r1, [sp, #44]	; 0x2c
   3381a:	mul.w	r7, r9, r1
   3381e:	ldr	r1, [sp, #60]	; 0x3c
   33820:	mla	r7, lr, r1, r7
   33824:	ldr	r1, [sp, #44]	; 0x2c
   33826:	umull	r0, r1, r1, lr
   3382a:	add	r1, r7
   3382c:	lsls	r7, r1, #31
   3382e:	lsls	r6, r0, #31
   33830:	orr.w	r7, r7, r0, lsr #1
   33834:	orr.w	r6, r6, r1, lsr #1
   33838:	adds.w	r0, r4, ip
   3383c:	adc.w	r4, r5, r8
   33840:	mul.w	r1, r2, r6
   33844:	mla	r1, r3, r7, r1
   33848:	umull	r6, r7, r6, r3
   3384c:	eors	r0, r6
   3384e:	add	r7, r1
   33850:	eors	r4, r7
   33852:	mul.w	r1, r2, r0
   33856:	mla	r4, r3, r4, r1
   3385a:	ldr	r1, [sp, #32]
   3385c:	umull	sl, fp, r0, r3
   33860:	mul.w	r9, r9, r1
   33864:	ldr	r1, [sp, #64]	; 0x40
   33866:	add	fp, r4
   33868:	mla	r9, lr, r1, r9
   3386c:	ldr	r1, [sp, #32]
   3386e:	umull	r0, r1, r1, lr
   33872:	add	r1, r9
   33874:	lsls	r6, r1, #31
   33876:	lsls	r4, r0, #31
   33878:	orr.w	r6, r6, r0, lsr #1
   3387c:	orr.w	r4, r4, r1, lsr #1
   33880:	adds.w	r0, sl, ip
   33884:	adc.w	r1, fp, r8
   33888:	mul.w	r5, r2, r4
   3388c:	mla	r6, r3, r6, r5
   33890:	umull	r4, r5, r4, r3
   33894:	eors	r0, r4
   33896:	add	r5, r6
   33898:	eors	r1, r5
   3389a:	muls	r2, r0
   3389c:	mla	r2, r3, r1, r2
   338a0:	umull	r0, r1, r0, r3
   338a4:	adds.w	r3, r0, ip
   338a8:	add	r1, r2
   338aa:	str	r3, [sp, #24]
   338ac:	adc.w	r3, r1, r8
   338b0:	str	r3, [sp, #28]
   338b2:	ldr	r3, [sp, #76]	; 0x4c
   338b4:	ldrd	r0, r1, [sp, #24]
   338b8:	ldr	r2, [sp, #40]	; 0x28
   338ba:	str	r3, [sp, #120]	; 0x78
   338bc:	ldr	r3, [sp, #52]	; 0x34
   338be:	adds	r0, r0, r3
   338c0:	adc.w	r1, r1, #0
   338c4:	add	sp, #84	; 0x54
   338c6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   338ca:	b.n	333dc <hash_blake2b@@Base+0x194>
   338cc:	push	{r1, r2, r4, r6, r7, lr}
   338ce:	add	r5, sp, #768	; 0x300
   338d0:	movs	r7, #238	; 0xee
   338d2:	str	r2, [r5, #12]
   338d4:	adc.w	r7, pc, r4, lsr #11
   338d8:	add	r6, sp, #244	; 0xf4
   338da:	stmia	r2!, {r1, r4, r5, r7}
   338dc:	ldrb	r1, [r6, #6]
   338de:	ldr	r6, [sp, #220]	; 0xdc
   338e0:	adds	r5, #121	; 0x79
   338e2:	ldrb	r4, [r2, #8]
   338e4:	strh	r6, [r1, #50]	; 0x32
   338e6:	str	r0, [r1, #28]
   338e8:	ldmia	r2, {r0, r1, r2, r7}
   338ea:	strh	r3, [r5, #46]	; 0x2e
   338ec:	ldrh	r1, [r0, r4]
   338ee:	udf	#243	; 0xf3
   338f0:	ldr	r1, [r5, #72]	; 0x48
   338f2:	lsrs	r1, r7, #29
   338f4:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   338f6:	strh	r3, [r5, #46]	; 0x2e
   338f8:	add	r6, sp, #396	; 0x18c
   338fa:	stmia	r2!, {r1, r4, r5, r7}
   338fc:	ldr	r3, [pc, #12]	; (3390c <hash_blake2b@@Base+0x6c4>)
   338fe:	adds	r3, r2, r3
   33900:	str	r3, [sp, #24]
   33902:	ldr	r3, [pc, #12]	; (33910 <hash_blake2b@@Base+0x6c8>)
   33904:	adc.w	r3, fp, r3
   33908:	b.n	338b0 <hash_blake2b@@Base+0x668>
   3390a:	nop
   3390c:	str	r5, [r0, #124]	; 0x7c
   3390e:	asrs	r6, r2, #25
   33910:			; <UNDEFINED> instruction: 0xeb2f27d4
   33914:	b.w	847c <memcpy@plt>

00033918 <XXH_versionNumber@@Base>:
   33918:	movw	r0, #701	; 0x2bd
   3391c:	bx	lr

0003391e <XXH32@@Base>:
   3391e:	ands.w	r3, r0, #3
   33922:	it	ne
   33924:	movne	r3, #1
   33926:	b.n	33324 <hash_blake2b@@Base+0xdc>

00033928 <XXH32_createState@@Base>:
   33928:	movs	r0, #48	; 0x30
   3392a:	b.w	8674 <malloc@plt>

0003392e <XXH32_freeState@@Base>:
   3392e:	push	{r3, lr}
   33930:	blx	8434 <free@plt+0x4>
   33934:	movs	r0, #0
   33936:	pop	{r3, pc}

00033938 <XXH32_copyState@@Base>:
   33938:	add.w	r3, r1, #48	; 0x30
   3393c:	ldr.w	r2, [r1], #4
   33940:	cmp	r1, r3
   33942:	str.w	r2, [r0], #4
   33946:	bne.n	3393c <XXH32_copyState@@Base+0x4>
   33948:	bx	lr

0003394a <XXH32_reset@@Base>:
   3394a:	ldr	r2, [pc, #124]	; (339c8 <XXH32_reset@@Base+0x7e>)
   3394c:	ldr	r3, [pc, #124]	; (339cc <XXH32_reset@@Base+0x82>)
   3394e:	add	r2, pc
   33950:	push	{r4, r5, lr}
   33952:	sub	sp, #60	; 0x3c
   33954:	ldr	r3, [r2, r3]
   33956:	mov	r5, r1
   33958:	mov	r4, r0
   3395a:	movs	r2, #48	; 0x30
   3395c:	ldr	r3, [r3, #0]
   3395e:	str	r3, [sp, #52]	; 0x34
   33960:	mov.w	r3, #0
   33964:	add	r3, sp, #4
   33966:	movs	r1, #0
   33968:	mov	r0, r3
   3396a:	blx	87c4 <memset@plt+0x4>
   3396e:	ldr	r2, [pc, #76]	; (339bc <XXH32_reset@@Base+0x72>)
   33970:	mov	r3, r4
   33972:	add	r2, r5
   33974:	str	r2, [sp, #12]
   33976:	ldr	r2, [pc, #72]	; (339c0 <XXH32_reset@@Base+0x76>)
   33978:	add	r2, r5
   3397a:	strd	r2, r5, [sp, #16]
   3397e:	ldr	r2, [pc, #68]	; (339c4 <XXH32_reset@@Base+0x7a>)
   33980:	add	r2, r5
   33982:	add	r5, sp, #44	; 0x2c
   33984:	str	r2, [sp, #24]
   33986:	mov	r2, r0
   33988:	mov	r4, r2
   3398a:	adds	r3, #8
   3398c:	ldmia	r4!, {r0, r1}
   3398e:	cmp	r4, r5
   33990:	str.w	r0, [r3, #-8]
   33994:	mov	r2, r4
   33996:	str.w	r1, [r3, #-4]
   3399a:	bne.n	33988 <XXH32_reset@@Base+0x3e>
   3399c:	ldr	r0, [r4, #0]
   3399e:	ldr	r2, [pc, #48]	; (339d0 <XXH32_reset@@Base+0x86>)
   339a0:	str	r0, [r3, #0]
   339a2:	add	r2, pc
   339a4:	ldr	r3, [pc, #36]	; (339cc <XXH32_reset@@Base+0x82>)
   339a6:	ldr	r3, [r2, r3]
   339a8:	ldr	r2, [r3, #0]
   339aa:	ldr	r3, [sp, #52]	; 0x34
   339ac:	eors	r2, r3
   339ae:	beq.n	339b4 <XXH32_reset@@Base+0x6a>
   339b0:	blx	8510 <__stack_chk_fail@plt>
   339b4:	movs	r0, #0
   339b6:	add	sp, #60	; 0x3c
   339b8:	pop	{r4, r5, pc}
   339ba:	nop
   339bc:	add	r0, r5
   339be:	movs	r4, #35	; 0x23
   339c0:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   339c2:	strh	r3, [r5, #46]	; 0x2e
   339c4:	strh	r7, [r1, #50]	; 0x32
   339c6:	str	r0, [r1, #28]
   339c8:	lsls	r6, r6, #16
   339ca:	movs	r3, r0
   339cc:	lsls	r0, r4, #8
   339ce:	movs	r0, r0
   339d0:	lsls	r2, r4, #15
   339d2:	movs	r3, r0

000339d4 <XXH32_update@@Base>:
   339d4:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   339d8:	mov	r4, r0
   339da:	mov	r7, r2
   339dc:	mov	r5, r1
   339de:	cmp	r1, #0
   339e0:	beq.w	33b00 <XXH32_update@@Base+0x12c>
   339e4:	ldr	r3, [r0, #0]
   339e6:	adds	r6, r1, r2
   339e8:	add	r3, r2
   339ea:	str	r3, [r0, #0]
   339ec:	cmp	r3, #15
   339ee:	it	ls
   339f0:	cmpls	r2, #15
   339f2:	ldr	r0, [r0, #4]
   339f4:	ite	hi
   339f6:	movhi	r3, #1
   339f8:	movls	r3, #0
   339fa:	orrs	r3, r0
   339fc:	str	r3, [r4, #4]
   339fe:	ldr	r3, [r4, #40]	; 0x28
   33a00:	adds	r0, r3, r2
   33a02:	cmp	r0, #15
   33a04:	bhi.n	33a1a <XXH32_update@@Base+0x46>
   33a06:	add.w	r0, r4, #24
   33a0a:	add	r0, r3
   33a0c:	bl	33914 <hash_blake2b@@Base+0x6cc>
   33a10:	ldr	r2, [r4, #40]	; 0x28
   33a12:	add	r2, r7
   33a14:	str	r2, [r4, #40]	; 0x28
   33a16:	movs	r0, #0
   33a18:	b.n	33b02 <XXH32_update@@Base+0x12e>
   33a1a:	cbz	r3, 33a7a <XXH32_update@@Base+0xa6>
   33a1c:	add.w	r0, r4, #24
   33a20:	rsb	r2, r3, #16
   33a24:	add	r0, r3
   33a26:	bl	33914 <hash_blake2b@@Base+0x6cc>
   33a2a:	ldr	r1, [pc, #220]	; (33b08 <XXH32_update@@Base+0x134>)
   33a2c:	ldr	r2, [r4, #8]
   33a2e:	ldr	r3, [r4, #24]
   33a30:	ldr	r0, [r4, #12]
   33a32:	mla	r3, r1, r3, r2
   33a36:	ldr	r2, [pc, #212]	; (33b0c <XXH32_update@@Base+0x138>)
   33a38:	mov.w	r3, r3, ror #19
   33a3c:	muls	r3, r2
   33a3e:	str	r3, [r4, #8]
   33a40:	ldr	r3, [r4, #28]
   33a42:	mla	r3, r1, r3, r0
   33a46:	ldr	r0, [r4, #16]
   33a48:	mov.w	r3, r3, ror #19
   33a4c:	muls	r3, r2
   33a4e:	str	r3, [r4, #12]
   33a50:	ldr	r3, [r4, #32]
   33a52:	mla	r3, r1, r3, r0
   33a56:	ldr	r0, [r4, #20]
   33a58:	mov.w	r3, r3, ror #19
   33a5c:	muls	r3, r2
   33a5e:	str	r3, [r4, #16]
   33a60:	ldr	r3, [r4, #36]	; 0x24
   33a62:	mla	r1, r1, r3, r0
   33a66:	ldr	r3, [r4, #40]	; 0x28
   33a68:	rsb	r3, r3, #16
   33a6c:	add	r5, r3
   33a6e:	movs	r3, #0
   33a70:	str	r3, [r4, #40]	; 0x28
   33a72:	mov.w	r1, r1, ror #19
   33a76:	muls	r2, r1
   33a78:	str	r2, [r4, #20]
   33a7a:	sub.w	r3, r6, #16
   33a7e:	cmp	r3, r5
   33a80:	bcc.n	33aea <XXH32_update@@Base+0x116>
   33a82:	ldrd	ip, r7, [r4, #8]
   33a86:	mov	r1, r5
   33a88:	ldrd	r0, r8, [r4, #16]
   33a8c:	ldr.w	r9, [pc, #120]	; 33b08 <XXH32_update@@Base+0x134>
   33a90:	ldr.w	lr, [pc, #120]	; 33b0c <XXH32_update@@Base+0x138>
   33a94:	ldr	r2, [r1, #0]
   33a96:	adds	r1, #16
   33a98:	mla	ip, r9, r2, ip
   33a9c:	ldr.w	r2, [r1, #-12]
   33aa0:	mla	r7, r9, r2, r7
   33aa4:	ldr.w	r2, [r1, #-8]
   33aa8:	mov.w	ip, ip, ror #19
   33aac:	mla	r0, r9, r2, r0
   33ab0:	ldr.w	r2, [r1, #-4]
   33ab4:	mov.w	r7, r7, ror #19
   33ab8:	cmp	r3, r1
   33aba:	mul.w	ip, lr, ip
   33abe:	mla	r2, r9, r2, r8
   33ac2:	mov.w	r0, r0, ror #19
   33ac6:	mul.w	r7, lr, r7
   33aca:	mul.w	r0, lr, r0
   33ace:	mov.w	r2, r2, ror #19
   33ad2:	mul.w	r8, lr, r2
   33ad6:	bcs.n	33a94 <XXH32_update@@Base+0xc0>
   33ad8:	subs	r3, r3, r5
   33ada:	strd	ip, r7, [r4, #8]
   33ade:	bic.w	r3, r3, #15
   33ae2:	strd	r0, r8, [r4, #16]
   33ae6:	adds	r3, #16
   33ae8:	add	r5, r3
   33aea:	cmp	r5, r6
   33aec:	bcs.n	33a16 <XXH32_update@@Base+0x42>
   33aee:	subs	r6, r6, r5
   33af0:	add.w	r0, r4, #24
   33af4:	mov	r1, r5
   33af6:	mov	r2, r6
   33af8:	bl	33914 <hash_blake2b@@Base+0x6cc>
   33afc:	str	r6, [r4, #40]	; 0x28
   33afe:	b.n	33a16 <XXH32_update@@Base+0x42>
   33b00:	movs	r0, #1
   33b02:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   33b06:	nop
   33b08:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   33b0a:	strh	r3, [r5, #46]	; 0x2e
   33b0c:	ldrb	r1, [r6, #6]
   33b0e:	ldr	r6, [sp, #220]	; 0xdc

00033b10 <XXH32_digest@@Base>:
   33b10:	push	{r4, r5}
   33b12:	ldr	r3, [r0, #4]
   33b14:	ldr	r2, [r0, #16]
   33b16:	cbz	r3, 33b40 <XXH32_digest@@Base+0x30>
   33b18:	ldrd	r1, r3, [r0, #8]
   33b1c:	mov.w	r4, r3, ror #25
   33b20:	ldr	r3, [r0, #20]
   33b22:	add.w	r4, r4, r1, ror #31
   33b26:	add.w	r4, r4, r2, ror #20
   33b2a:	add.w	r4, r4, r3, ror #14
   33b2e:	mov	r1, r0
   33b30:	ldr	r2, [r0, #40]	; 0x28
   33b32:	ldr.w	r5, [r1], #24
   33b36:	movs	r3, #0
   33b38:	adds	r0, r4, r5
   33b3a:	pop	{r4, r5}
   33b3c:	b.w	332a8 <hash_blake2b@@Base+0x60>
   33b40:	ldr	r4, [pc, #4]	; (33b48 <XXH32_digest@@Base+0x38>)
   33b42:	add	r4, r2
   33b44:	b.n	33b2e <XXH32_digest@@Base+0x1e>
   33b46:	nop
   33b48:	str	r1, [r6, #120]	; 0x78
   33b4a:	asrs	r6, r2, #25

00033b4c <XXH32_canonicalFromHash@@Base>:
   33b4c:	rev	r1, r1
   33b4e:	str	r1, [r0, #0]
   33b50:	bx	lr

00033b52 <XXH32_hashFromCanonical@@Base>:
   33b52:	ldr	r0, [r0, #0]
   33b54:	rev	r0, r0
   33b56:	bx	lr

00033b58 <XXH64@@Base>:
   33b58:	push	{r0, r1, r4, lr}
   33b5a:	ands.w	r4, r0, #7
   33b5e:	it	ne
   33b60:	movne	r4, #1
   33b62:	str	r4, [sp, #0]
   33b64:	bl	33578 <hash_blake2b@@Base+0x330>
   33b68:	add	sp, #8
   33b6a:	pop	{r4, pc}

00033b6c <XXH64_createState@@Base>:
   33b6c:	movs	r0, #88	; 0x58
   33b6e:	b.w	8674 <malloc@plt>

00033b72 <XXH64_freeState@@Base>:
   33b72:	push	{r3, lr}
   33b74:	blx	8434 <free@plt+0x4>
   33b78:	movs	r0, #0
   33b7a:	pop	{r3, pc}

00033b7c <XXH64_copyState@@Base>:
   33b7c:	movs	r2, #88	; 0x58
   33b7e:	b.w	847c <memcpy@plt>

00033b82 <XXH64_reset@@Base>:
   33b82:	push	{r4, r5, r6, r7, lr}
   33b84:	mov	r4, r2
   33b86:	ldr	r2, [pc, #140]	; (33c14 <XXH64_reset@@Base+0x92>)
   33b88:	mov	r5, r3
   33b8a:	ldr	r3, [pc, #140]	; (33c18 <XXH64_reset@@Base+0x96>)
   33b8c:	sub	sp, #100	; 0x64
   33b8e:	add	r2, pc
   33b90:	mov	r7, r0
   33b92:	mov	r6, sp
   33b94:	movs	r1, #0
   33b96:	ldr	r3, [r2, r3]
   33b98:	mov	r0, r6
   33b9a:	movs	r2, #88	; 0x58
   33b9c:	ldr	r3, [r3, #0]
   33b9e:	str	r3, [sp, #92]	; 0x5c
   33ba0:	mov.w	r3, #0
   33ba4:	blx	87c4 <memset@plt+0x4>
   33ba8:	ldr	r3, [pc, #80]	; (33bfc <XXH64_reset@@Base+0x7a>)
   33baa:	mov	r1, r6
   33bac:	ldr	r2, [pc, #80]	; (33c00 <XXH64_reset@@Base+0x7e>)
   33bae:	mov	r0, r7
   33bb0:	adds	r3, r4, r3
   33bb2:	strd	r4, r5, [sp, #24]
   33bb6:	adc.w	r2, r5, r2
   33bba:	strd	r3, r2, [sp, #8]
   33bbe:	ldr	r3, [pc, #68]	; (33c04 <XXH64_reset@@Base+0x82>)
   33bc0:	ldr	r2, [pc, #68]	; (33c08 <XXH64_reset@@Base+0x86>)
   33bc2:	adds	r3, r4, r3
   33bc4:	adc.w	r2, r5, r2
   33bc8:	strd	r3, r2, [sp, #16]
   33bcc:	ldr	r2, [pc, #60]	; (33c0c <XXH64_reset@@Base+0x8a>)
   33bce:	ldr	r3, [pc, #64]	; (33c10 <XXH64_reset@@Base+0x8e>)
   33bd0:	adds	r4, r4, r2
   33bd2:	mov.w	r2, #80	; 0x50
   33bd6:	adc.w	r5, r3, r5
   33bda:	strd	r4, r5, [sp, #32]
   33bde:	blx	8480 <memcpy@plt+0x4>
   33be2:	ldr	r2, [pc, #56]	; (33c1c <XXH64_reset@@Base+0x9a>)
   33be4:	ldr	r3, [pc, #48]	; (33c18 <XXH64_reset@@Base+0x96>)
   33be6:	add	r2, pc
   33be8:	ldr	r3, [r2, r3]
   33bea:	ldr	r2, [r3, #0]
   33bec:	ldr	r3, [sp, #92]	; 0x5c
   33bee:	eors	r2, r3
   33bf0:	beq.n	33bf6 <XXH64_reset@@Base+0x74>
   33bf2:	blx	8510 <__stack_chk_fail@plt>
   33bf6:	movs	r0, #0
   33bf8:	add	sp, #100	; 0x64
   33bfa:	pop	{r4, r5, r6, r7, pc}
   33bfc:	push	{r1, r2, r4, r6, r7, lr}
   33bfe:	add	r5, sp, #768	; 0x300
   33c00:	movs	r7, #238	; 0xee
   33c02:	str	r2, [r5, #12]
   33c04:	adc.w	r7, pc, r4, lsr #11
   33c08:	add	r6, sp, #244	; 0xf4
   33c0a:	stmia	r2!, {r1, r4, r5, r7}
   33c0c:	adds	r5, #121	; 0x79
   33c0e:	ldrb	r4, [r2, #8]
   33c10:	strh	r6, [r1, #50]	; 0x32
   33c12:	str	r0, [r1, #28]
   33c14:	lsls	r6, r6, #7
   33c16:	movs	r3, r0
   33c18:	lsls	r0, r4, #8
   33c1a:	movs	r0, r0
   33c1c:	lsls	r6, r3, #6
   33c1e:	movs	r3, r0

00033c20 <XXH64_update@@Base>:
   33c20:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33c24:	mov	r4, r0
   33c26:	sub	sp, #36	; 0x24
   33c28:	mov	r5, r2
   33c2a:	mov	r8, r1
   33c2c:	cmp	r1, #0
   33c2e:	beq.w	33f14 <XXH64_update@@Base+0x2f4>
   33c32:	ldrd	r6, r7, [r0]
   33c36:	add.w	r9, r1, r2
   33c3a:	ldr	r3, [r0, #72]	; 0x48
   33c3c:	adds	r6, r6, r2
   33c3e:	adc.w	r7, r7, #0
   33c42:	strd	r6, r7, [r0]
   33c46:	adds	r0, r3, r2
   33c48:	cmp	r0, #31
   33c4a:	bhi.n	33c60 <XXH64_update@@Base+0x40>
   33c4c:	add.w	r0, r4, #40	; 0x28
   33c50:	add	r0, r3
   33c52:	bl	33914 <hash_blake2b@@Base+0x6cc>
   33c56:	ldr	r2, [r4, #72]	; 0x48
   33c58:	add	r2, r5
   33c5a:	str	r2, [r4, #72]	; 0x48
   33c5c:	movs	r0, #0
   33c5e:	b.n	33f16 <XXH64_update@@Base+0x2f6>
   33c60:	cmp	r3, #0
   33c62:	beq.w	33d70 <XXH64_update@@Base+0x150>
   33c66:	add.w	r0, r4, #40	; 0x28
   33c6a:	rsb	r2, r3, #32
   33c6e:	add	r0, r3
   33c70:	ldr	r5, [pc, #680]	; (33f1c <XXH64_update@@Base+0x2fc>)
   33c72:	bl	33914 <hash_blake2b@@Base+0x6cc>
   33c76:	ldr.w	ip, [pc, #688]	; 33f28 <XXH64_update@@Base+0x308>
   33c7a:	ldr	r6, [r4, #40]	; 0x28
   33c7c:	ldr	r3, [r4, #44]	; 0x2c
   33c7e:	mul.w	r2, ip, r6
   33c82:	mla	r3, r5, r3, r2
   33c86:	umull	r6, r7, r6, r5
   33c8a:	add	r7, r3
   33c8c:	ldrd	r3, r2, [r4, #8]
   33c90:	adds	r3, r6, r3
   33c92:	ldr	r6, [pc, #652]	; (33f20 <XXH64_update@@Base+0x300>)
   33c94:	adc.w	r0, r7, r2
   33c98:	ldr	r2, [pc, #648]	; (33f24 <XXH64_update@@Base+0x304>)
   33c9a:	lsls	r1, r0, #31
   33c9c:	orr.w	r1, r1, r3, lsr #1
   33ca0:	lsls	r3, r3, #31
   33ca2:	orr.w	r0, r3, r0, lsr #1
   33ca6:	mul.w	r3, r6, r0
   33caa:	mla	r3, r2, r1, r3
   33cae:	umull	r0, r1, r0, r2
   33cb2:	add	r1, r3
   33cb4:	ldr	r3, [r4, #52]	; 0x34
   33cb6:	strd	r0, r1, [r4, #8]
   33cba:	ldr	r0, [r4, #48]	; 0x30
   33cbc:	mul.w	r1, ip, r0
   33cc0:	mla	r3, r5, r3, r1
   33cc4:	umull	r0, r1, r0, r5
   33cc8:	add	r1, r3
   33cca:	ldrd	r3, r7, [r4, #16]
   33cce:	adds	r3, r0, r3
   33cd0:	adc.w	r0, r1, r7
   33cd4:	lsls	r1, r0, #31
   33cd6:	orr.w	r1, r1, r3, lsr #1
   33cda:	lsls	r3, r3, #31
   33cdc:	orr.w	r0, r3, r0, lsr #1
   33ce0:	mul.w	r3, r6, r0
   33ce4:	mla	r3, r2, r1, r3
   33ce8:	umull	r0, r1, r0, r2
   33cec:	add	r1, r3
   33cee:	ldr	r3, [r4, #60]	; 0x3c
   33cf0:	strd	r0, r1, [r4, #16]
   33cf4:	ldr	r0, [r4, #56]	; 0x38
   33cf6:	mul.w	r1, ip, r0
   33cfa:	mla	r3, r5, r3, r1
   33cfe:	umull	r0, r1, r0, r5
   33d02:	add	r1, r3
   33d04:	ldrd	r3, r7, [r4, #24]
   33d08:	adds	r3, r0, r3
   33d0a:	adc.w	r0, r1, r7
   33d0e:	lsls	r1, r0, #31
   33d10:	orr.w	r1, r1, r3, lsr #1
   33d14:	lsls	r3, r3, #31
   33d16:	orr.w	r0, r3, r0, lsr #1
   33d1a:	mul.w	r3, r6, r0
   33d1e:	mla	r3, r2, r1, r3
   33d22:	umull	r0, r1, r0, r2
   33d26:	add	r1, r3
   33d28:	ldr	r3, [r4, #68]	; 0x44
   33d2a:	strd	r0, r1, [r4, #24]
   33d2e:	ldr	r0, [r4, #64]	; 0x40
   33d30:	mul.w	ip, ip, r0
   33d34:	mla	ip, r5, r3, ip
   33d38:	umull	r0, r1, r0, r5
   33d3c:	ldrd	r3, r5, [r4, #32]
   33d40:	add	r1, ip
   33d42:	adds	r3, r0, r3
   33d44:	adc.w	r5, r1, r5
   33d48:	lsls	r1, r5, #31
   33d4a:	orr.w	r1, r1, r3, lsr #1
   33d4e:	lsls	r3, r3, #31
   33d50:	orr.w	r5, r3, r5, lsr #1
   33d54:	muls	r6, r5
   33d56:	mla	r6, r2, r1, r6
   33d5a:	umull	r2, r3, r5, r2
   33d5e:	add	r3, r6
   33d60:	strd	r2, r3, [r4, #32]
   33d64:	ldr	r3, [r4, #72]	; 0x48
   33d66:	rsb	r3, r3, #32
   33d6a:	add	r8, r3
   33d6c:	movs	r3, #0
   33d6e:	str	r3, [r4, #72]	; 0x48
   33d70:	add.w	r3, r8, #32
   33d74:	cmp	r9, r3
   33d76:	bcc.w	33efa <XXH64_update@@Base+0x2da>
   33d7a:	ldrd	r2, r3, [r4, #8]
   33d7e:	sub.w	ip, r9, #32
   33d82:	ldr	r5, [pc, #408]	; (33f1c <XXH64_update@@Base+0x2fc>)
   33d84:	ldr	r7, [pc, #416]	; (33f28 <XXH64_update@@Base+0x308>)
   33d86:	strd	r2, r3, [sp]
   33d8a:	ldrd	r2, r3, [r4, #16]
   33d8e:	strd	r2, r3, [sp, #8]
   33d92:	ldrd	r2, r3, [r4, #24]
   33d96:	strd	r2, r3, [sp, #16]
   33d9a:	ldrd	r2, r3, [r4, #32]
   33d9e:	strd	r2, r3, [sp, #24]
   33da2:	mov	r3, r8
   33da4:	ldr	r2, [pc, #380]	; (33f24 <XXH64_update@@Base+0x304>)
   33da6:	ldr	r0, [r3, #0]
   33da8:	adds	r3, #32
   33daa:	ldr.w	lr, [r3, #-28]
   33dae:	ldr	r6, [pc, #368]	; (33f20 <XXH64_update@@Base+0x300>)
   33db0:	umull	sl, fp, r0, r5
   33db4:	mul.w	r1, r7, r0
   33db8:	mla	lr, r5, lr, r1
   33dbc:	ldr	r1, [sp, #0]
   33dbe:	adds.w	r0, sl, r1
   33dc2:	ldr	r1, [sp, #4]
   33dc4:	add	fp, lr
   33dc6:	adc.w	r1, fp, r1
   33dca:	mov.w	lr, r1, lsl #31
   33dce:	orr.w	lr, lr, r0, lsr #1
   33dd2:	lsls	r0, r0, #31
   33dd4:	orr.w	r1, r0, r1, lsr #1
   33dd8:	ldr	r0, [pc, #324]	; (33f20 <XXH64_update@@Base+0x300>)
   33dda:	muls	r0, r1
   33ddc:	mla	lr, r2, lr, r0
   33de0:	umull	r0, r1, r1, r2
   33de4:	strd	r0, r1, [sp]
   33de8:	ldr	r1, [sp, #4]
   33dea:	ldr.w	r0, [r3, #-24]
   33dee:	add	r1, lr
   33df0:	ldr.w	lr, [r3, #-20]
   33df4:	str	r1, [sp, #4]
   33df6:	umull	sl, fp, r0, r5
   33dfa:	mul.w	r1, r7, r0
   33dfe:	mla	lr, r5, lr, r1
   33e02:	ldr	r1, [sp, #8]
   33e04:	adds.w	r0, sl, r1
   33e08:	ldr	r1, [sp, #12]
   33e0a:	add	fp, lr
   33e0c:	adc.w	r1, fp, r1
   33e10:	mov.w	lr, r1, lsl #31
   33e14:	orr.w	lr, lr, r0, lsr #1
   33e18:	lsls	r0, r0, #31
   33e1a:	orr.w	r1, r0, r1, lsr #1
   33e1e:	ldr	r0, [pc, #256]	; (33f20 <XXH64_update@@Base+0x300>)
   33e20:	muls	r0, r1
   33e22:	mla	lr, r2, lr, r0
   33e26:	umull	r0, r1, r1, r2
   33e2a:	strd	r0, r1, [sp, #8]
   33e2e:	ldr	r1, [sp, #12]
   33e30:	ldr.w	r0, [r3, #-16]
   33e34:	add	r1, lr
   33e36:	ldr.w	lr, [r3, #-12]
   33e3a:	str	r1, [sp, #12]
   33e3c:	umull	sl, fp, r0, r5
   33e40:	mul.w	r1, r7, r0
   33e44:	mla	lr, r5, lr, r1
   33e48:	ldr	r1, [sp, #16]
   33e4a:	adds.w	r0, sl, r1
   33e4e:	ldr	r1, [sp, #20]
   33e50:	add	fp, lr
   33e52:	adc.w	lr, fp, r1
   33e56:	mov.w	r1, lr, lsl #31
   33e5a:	orr.w	r1, r1, r0, lsr #1
   33e5e:	lsls	r0, r0, #31
   33e60:	orr.w	r0, r0, lr, lsr #1
   33e64:	umull	sl, fp, r0, r2
   33e68:	mul.w	lr, r6, r0
   33e6c:	ldr	r6, [sp, #24]
   33e6e:	mla	r1, r2, r1, lr
   33e72:	ldr.w	lr, [r3, #-4]
   33e76:	strd	sl, fp, [sp, #16]
   33e7a:	ldr	r0, [sp, #20]
   33e7c:	add	r1, r0
   33e7e:	ldr.w	r0, [r3, #-8]
   33e82:	str	r1, [sp, #20]
   33e84:	mul.w	r1, r7, r0
   33e88:	mla	lr, r5, lr, r1
   33e8c:	umull	r0, r1, r0, r5
   33e90:	adds.w	sl, r0, r6
   33e94:	ldr	r6, [sp, #28]
   33e96:	add	r1, lr
   33e98:	ldr	r0, [pc, #132]	; (33f20 <XXH64_update@@Base+0x300>)
   33e9a:	adc.w	r6, r1, r6
   33e9e:	cmp	ip, r3
   33ea0:	mov.w	r1, r6, lsl #31
   33ea4:	orr.w	r1, r1, sl, lsr #1
   33ea8:	mov.w	sl, sl, lsl #31
   33eac:	orr.w	sl, sl, r6, lsr #1
   33eb0:	mul.w	r0, r0, sl
   33eb4:	umull	sl, fp, sl, r2
   33eb8:	mla	r1, r2, r1, r0
   33ebc:	strd	sl, fp, [sp, #24]
   33ec0:	ldr	r0, [sp, #28]
   33ec2:	add	r0, r1
   33ec4:	str	r0, [sp, #28]
   33ec6:	bcs.w	33da6 <XXH64_update@@Base+0x186>
   33eca:	sub.w	r3, r9, #32
   33ece:	sub.w	r3, r3, r8
   33ed2:	bic.w	r3, r3, #31
   33ed6:	adds	r3, #32
   33ed8:	add	r8, r3
   33eda:	ldrd	r2, r3, [sp]
   33ede:	strd	r2, r3, [r4, #8]
   33ee2:	ldrd	r2, r3, [sp, #8]
   33ee6:	strd	r2, r3, [r4, #16]
   33eea:	ldrd	r2, r3, [sp, #16]
   33eee:	strd	r2, r3, [r4, #24]
   33ef2:	ldrd	r2, r3, [sp, #24]
   33ef6:	strd	r2, r3, [r4, #32]
   33efa:	cmp	r8, r9
   33efc:	bcs.w	33c5c <XXH64_update@@Base+0x3c>
   33f00:	sub.w	r5, r9, r8
   33f04:	add.w	r0, r4, #40	; 0x28
   33f08:	mov	r1, r8
   33f0a:	mov	r2, r5
   33f0c:	bl	33914 <hash_blake2b@@Base+0x6cc>
   33f10:	str	r5, [r4, #72]	; 0x48
   33f12:	b.n	33c5c <XXH64_update@@Base+0x3c>
   33f14:	movs	r0, #1
   33f16:	add	sp, #36	; 0x24
   33f18:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33f1c:	adc.w	r7, pc, r4, lsr #11
   33f20:	ldrb	r1, [r6, #6]
   33f22:	ldr	r6, [sp, #220]	; 0xdc
   33f24:	ldmia	r2, {r0, r1, r2, r7}
   33f26:	strh	r3, [r5, #46]	; 0x2e
   33f28:	add	r6, sp, #244	; 0xf4
   33f2a:	stmia	r2!, {r1, r4, r5, r7}

00033f2c <XXH64_digest@@Base>:
   33f2c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33f30:	sub	sp, #28
   33f32:	ldrd	r3, r4, [r0]
   33f36:	strd	r3, r4, [sp, #8]
   33f3a:	ldrd	r2, r3, [sp, #8]
   33f3e:	ldrd	r4, r5, [r0, #24]
   33f42:	cmp	r3, #0
   33f44:	it	eq
   33f46:	cmpeq	r2, #32
   33f48:	bcc.w	34110 <XXH64_digest@@Base+0x1e4>
   33f4c:	ldrd	sl, lr, [r0, #8]
   33f50:	ldr	r6, [pc, #456]	; (3411c <XXH64_digest@@Base+0x1f0>)
   33f52:	ldr	r7, [pc, #460]	; (34120 <XXH64_digest@@Base+0x1f4>)
   33f54:	ldrd	r1, ip, [r0, #16]
   33f58:	umull	r2, r3, sl, r6
   33f5c:	mul.w	r8, r7, sl
   33f60:	ldr	r7, [r0, #36]	; 0x24
   33f62:	mla	r8, r6, lr, r8
   33f66:	add	r3, r8
   33f68:	mov.w	r8, r2, lsl #31
   33f6c:	mov.w	fp, r3, lsl #31
   33f70:	orr.w	r8, r8, r3, lsr #1
   33f74:	mov.w	r3, lr, lsl #1
   33f78:	orr.w	r9, fp, r2, lsr #1
   33f7c:	orr.w	r2, r3, sl, lsr #31
   33f80:	mov.w	r3, sl, lsl #1
   33f84:	orr.w	fp, r3, lr, lsr #31
   33f88:	mov.w	lr, r1, lsl #7
   33f8c:	mov.w	r3, ip, lsl #7
   33f90:	orr.w	lr, lr, ip, lsr #25
   33f94:	orr.w	sl, r3, r1, lsr #25
   33f98:	adds.w	r3, fp, lr
   33f9c:	mov.w	lr, r4, lsl #12
   33fa0:	adc.w	sl, r2, sl
   33fa4:	orr.w	lr, lr, r5, lsr #20
   33fa8:	lsls	r2, r5, #12
   33faa:	adds.w	lr, r3, lr
   33fae:	ldr	r3, [r0, #36]	; 0x24
   33fb0:	orr.w	fp, r2, r4, lsr #20
   33fb4:	adc.w	sl, sl, fp
   33fb8:	mov.w	fp, r3, lsl #18
   33fbc:	ldr	r3, [r0, #32]
   33fbe:	orr.w	r2, fp, r3, lsr #14
   33fc2:	lsls	r3, r3, #18
   33fc4:	orr.w	r3, r3, r7, lsr #14
   33fc8:	adds.w	lr, lr, r3
   33fcc:	ldr	r3, [pc, #340]	; (34124 <XXH64_digest@@Base+0x1f8>)
   33fce:	adc.w	sl, sl, r2
   33fd2:	ldr	r2, [pc, #340]	; (34128 <XXH64_digest@@Base+0x1fc>)
   33fd4:	mul.w	fp, r2, r8
   33fd8:	mla	fp, r3, r9, fp
   33fdc:	umull	r8, r9, r8, r3
   33fe0:	add	r9, fp
   33fe2:	eor.w	lr, lr, r8
   33fe6:	eor.w	sl, sl, r9
   33fea:	mul.w	r8, r2, lr
   33fee:	mla	sl, r3, sl, r8
   33ff2:	umull	r7, r8, lr, r3
   33ff6:	strd	r7, r8, [sp, #16]
   33ffa:	ldr	r7, [sp, #20]
   33ffc:	add	r7, sl
   33ffe:	str	r7, [sp, #20]
   34000:	ldr	r7, [pc, #284]	; (34120 <XXH64_digest@@Base+0x1f4>)
   34002:	umull	sl, fp, r1, r6
   34006:	mul.w	lr, r7, r1
   3400a:	ldr	r7, [sp, #16]
   3400c:	mla	ip, r6, ip, lr
   34010:	mov.w	r8, sl, lsl #31
   34014:	add	fp, ip
   34016:	orr.w	r8, r8, fp, lsr #1
   3401a:	mov.w	r1, fp, lsl #31
   3401e:	orr.w	r1, r1, sl, lsr #1
   34022:	mul.w	ip, r2, r8
   34026:	mla	r1, r3, r1, ip
   3402a:	ldr.w	ip, [pc, #268]	; 34138 <XXH64_digest@@Base+0x20c>
   3402e:	umull	r8, r9, r8, r3
   34032:	add	r9, r1
   34034:	ldr	r1, [pc, #244]	; (3412c <XXH64_digest@@Base+0x200>)
   34036:	adds.w	sl, r7, r1
   3403a:	ldr	r7, [sp, #20]
   3403c:	eor.w	sl, r8, sl
   34040:	adc.w	lr, r7, ip
   34044:	ldr	r7, [pc, #216]	; (34120 <XXH64_digest@@Base+0x1f4>)
   34046:	eor.w	lr, r9, lr
   3404a:	mul.w	r8, r2, sl
   3404e:	mla	lr, r3, lr, r8
   34052:	umull	sl, fp, sl, r3
   34056:	add	fp, lr
   34058:	mul.w	lr, r7, r4
   3405c:	umull	r7, r8, r4, r6
   34060:	mla	lr, r6, r5, lr
   34064:	add	r8, lr
   34066:	lsls	r4, r7, #31
   34068:	orr.w	r4, r4, r8, lsr #1
   3406c:	mov.w	lr, r8, lsl #31
   34070:	orr.w	lr, lr, r7, lsr #1
   34074:	adds.w	r8, sl, r1
   34078:	mul.w	r5, r2, r4
   3407c:	mla	lr, r3, lr, r5
   34080:	umull	r4, r5, r4, r3
   34084:	add	r5, lr
   34086:	eor.w	r8, r4, r8
   3408a:	adc.w	lr, fp, ip
   3408e:	eor.w	r4, r5, lr
   34092:	mul.w	r5, r2, r8
   34096:	mla	r4, r3, r4, r5
   3409a:	ldr	r5, [pc, #132]	; (34120 <XXH64_digest@@Base+0x1f4>)
   3409c:	umull	r8, r9, r8, r3
   340a0:	add	r9, r4
   340a2:	ldr	r4, [r0, #32]
   340a4:	mul.w	r7, r5, r4
   340a8:	ldr	r5, [r0, #32]
   340aa:	ldr	r4, [r0, #36]	; 0x24
   340ac:	umull	sl, fp, r5, r6
   340b0:	mla	r4, r6, r4, r7
   340b4:	add	fp, r4
   340b6:	mov.w	r6, sl, lsl #31
   340ba:	orr.w	r6, r6, fp, lsr #1
   340be:	mov.w	r4, fp, lsl #31
   340c2:	orr.w	r4, r4, sl, lsr #1
   340c6:	mul.w	r5, r2, r6
   340ca:	mla	r4, r3, r4, r5
   340ce:	umull	r6, r7, r6, r3
   340d2:	add	r7, r4
   340d4:	adds.w	r4, r8, r1
   340d8:	eor.w	r4, r4, r6
   340dc:	adc.w	r5, r9, ip
   340e0:	eors	r5, r7
   340e2:	muls	r2, r4
   340e4:	mla	r2, r3, r5, r2
   340e8:	umull	r5, r6, r4, r3
   340ec:	add	r6, r2
   340ee:	adds	r4, r5, r1
   340f0:	adc.w	r1, r6, ip
   340f4:	movs	r3, #0
   340f6:	str	r3, [sp, #0]
   340f8:	ldr	r3, [sp, #8]
   340fa:	add.w	r2, r0, #40	; 0x28
   340fe:	adds	r0, r3, r4
   34100:	ldr	r4, [sp, #12]
   34102:	adc.w	r1, r4, r1
   34106:	bl	333dc <hash_blake2b@@Base+0x194>
   3410a:	add	sp, #28
   3410c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34110:	ldr	r1, [pc, #28]	; (34130 <XXH64_digest@@Base+0x204>)
   34112:	adds	r4, r4, r1
   34114:	ldr	r1, [pc, #28]	; (34134 <XXH64_digest@@Base+0x208>)
   34116:	adc.w	r1, r5, r1
   3411a:	b.n	340f4 <XXH64_digest@@Base+0x1c8>
   3411c:	adc.w	r7, pc, r4, lsr #11
   34120:	add	r6, sp, #244	; 0xf4
   34122:	stmia	r2!, {r1, r4, r5, r7}
   34124:	ldmia	r2, {r0, r1, r2, r7}
   34126:	strh	r3, [r5, #46]	; 0x2e
   34128:	ldrb	r1, [r6, #6]
   3412a:	ldr	r6, [sp, #220]	; 0xdc
   3412c:	add	r6, sp, #396	; 0x18c
   3412e:	stmia	r2!, {r1, r4, r5, r7}
   34130:	str	r5, [r0, #124]	; 0x7c
   34132:	asrs	r6, r2, #25
   34134:			; <UNDEFINED> instruction: 0xeb2f27d4
   34138:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   3413a:	strh	r3, [r5, #46]	; 0x2e

0003413c <XXH64_canonicalFromHash@@Base>:
   3413c:	push	{r0, r1, r4, lr}
   3413e:	mov	r4, r0
   34140:	strd	r2, r3, [sp]
   34144:	rev	r2, r2
   34146:	ldr	r3, [sp, #4]
   34148:	rev	r3, r3
   3414a:	strd	r3, r2, [sp]
   3414e:	mov	r3, sp
   34150:	ldmia	r3!, {r0, r1}
   34152:	str	r0, [r4, #0]
   34154:	str	r1, [r4, #4]
   34156:	add	sp, #8
   34158:	pop	{r4, pc}

0003415a <XXH64_hashFromCanonical@@Base>:
   3415a:	ldr	r1, [r0, #0]
   3415c:	ldr	r0, [r0, #4]
   3415e:	rev	r1, r1
   34160:	rev	r0, r0
   34162:	bx	lr
   34164:	ldr	r2, [pc, #372]	; (342dc <XXH64_hashFromCanonical@@Base+0x182>)
   34166:	ldr	r3, [pc, #376]	; (342e0 <XXH64_hashFromCanonical@@Base+0x186>)
   34168:	add	r2, pc
   3416a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3416e:	sub	sp, #308	; 0x134
   34170:	ldr	r3, [r2, r3]
   34172:	add	r1, sp, #44	; 0x2c
   34174:	add.w	r5, r0, #64	; 0x40
   34178:	mov	r2, r0
   3417a:	ldr	r3, [r3, #0]
   3417c:	str	r3, [sp, #300]	; 0x12c
   3417e:	mov.w	r3, #0
   34182:	mov	r4, r1
   34184:	ldrb.w	r3, [r2, #43]	; 0x2b
   34188:	adds	r2, #4
   3418a:	ldrb.w	r6, [r2, #38]	; 0x26
   3418e:	lsls	r3, r3, #16
   34190:	orr.w	r3, r3, r6, lsl #24
   34194:	ldrb.w	r6, [r2, #41]	; 0x29
   34198:	orrs	r3, r6
   3419a:	ldrb.w	r6, [r2, #40]	; 0x28
   3419e:	cmp	r5, r2
   341a0:	orr.w	r3, r3, r6, lsl #8
   341a4:	str.w	r3, [r4], #4
   341a8:	bne.n	34184 <XXH64_hashFromCanonical@@Base+0x2a>
   341aa:	movs	r4, #16
   341ac:	ldr	r2, [r1, #56]	; 0x38
   341ae:	mov	r6, r1
   341b0:	ldr.w	r5, [r1, #4]!
   341b4:	adds	r4, #1
   341b6:	cmp	r4, #64	; 0x40
   341b8:	mov.w	r3, r2, ror #19
   341bc:	eor.w	r3, r3, r2, ror #17
   341c0:	eor.w	r3, r3, r2, lsr #10
   341c4:	ldr	r2, [r6, #36]	; 0x24
   341c6:	ldr	r6, [r6, #0]
   341c8:	add	r2, r6
   341ca:	add	r3, r2
   341cc:	mov.w	r2, r5, ror #18
   341d0:	eor.w	r2, r2, r5, ror #7
   341d4:	eor.w	r2, r2, r5, lsr #3
   341d8:	add	r3, r2
   341da:	str	r3, [r1, #60]	; 0x3c
   341dc:	bne.n	341ac <XXH64_hashFromCanonical@@Base+0x52>
   341de:	ldr	r3, [r0, #0]
   341e0:	add.w	r9, sp, #44	; 0x2c
   341e4:	mov.w	lr, #0
   341e8:	str	r3, [sp, #0]
   341ea:	ldr	r3, [r0, #4]
   341ec:	str	r3, [sp, #4]
   341ee:	ldr	r3, [r0, #8]
   341f0:	ldrd	r4, r6, [sp]
   341f4:	str	r3, [sp, #8]
   341f6:	ldr	r3, [r0, #12]
   341f8:	str	r3, [sp, #12]
   341fa:	ldr	r3, [r0, #16]
   341fc:	ldrd	r5, r8, [sp, #8]
   34200:	str	r3, [sp, #16]
   34202:	ldr	r3, [r0, #20]
   34204:	str	r3, [sp, #20]
   34206:	ldr	r3, [r0, #24]
   34208:	ldrd	r1, ip, [sp, #16]
   3420c:	str	r3, [sp, #24]
   3420e:	ldr	r3, [r0, #28]
   34210:	str	r3, [sp, #28]
   34212:	ldrd	r7, fp, [sp, #24]
   34216:	ldr	r3, [pc, #204]	; (342e4 <XXH64_hashFromCanonical@@Base+0x18a>)
   34218:	add	r3, pc
   3421a:	str	r3, [sp, #36]	; 0x24
   3421c:	ldr	r3, [sp, #36]	; 0x24
   3421e:	ldr.w	r2, [r3], #4
   34222:	str	r3, [sp, #36]	; 0x24
   34224:	mov.w	r3, r1, ror #11
   34228:	eor.w	r3, r3, r1, ror #6
   3422c:	eor.w	sl, r3, r1, ror #25
   34230:	ldr.w	r3, [r9, lr, lsl #2]
   34234:	add.w	lr, lr, #1
   34238:	add	r2, r3
   3423a:	cmp.w	lr, #64	; 0x40
   3423e:	add.w	r3, sl, r2
   34242:	bic.w	sl, r7, r1
   34246:	and.w	r2, r1, ip
   3424a:	eor.w	r2, sl, r2
   3424e:	mov.w	sl, r4, ror #13
   34252:	add	r2, r3
   34254:	eor.w	r3, r6, r5
   34258:	add	r2, fp
   3425a:	eor.w	sl, sl, r4, ror #2
   3425e:	and.w	fp, r6, r5
   34262:	and.w	r3, r3, r4
   34266:	eor.w	r3, r3, fp
   3426a:	eor.w	sl, sl, r4, ror #22
   3426e:	add	sl, r3
   34270:	mov	fp, r7
   34272:	add.w	r3, r2, r8
   34276:	add	r2, sl
   34278:	mov	r8, r5
   3427a:	str	r3, [sp, #32]
   3427c:	bne.n	342c8 <XXH64_hashFromCanonical@@Base+0x16e>
   3427e:	ldr	r3, [sp, #0]
   34280:	add	r3, r2
   34282:	str	r3, [r0, #0]
   34284:	ldr	r3, [sp, #4]
   34286:	ldr	r2, [sp, #32]
   34288:	add	r3, r4
   3428a:	str	r3, [r0, #4]
   3428c:	ldr	r3, [sp, #8]
   3428e:	add	r3, r6
   34290:	str	r3, [r0, #8]
   34292:	ldr	r3, [sp, #12]
   34294:	add	r3, r5
   34296:	str	r3, [r0, #12]
   34298:	ldr	r3, [sp, #16]
   3429a:	add	r3, r2
   3429c:	str	r3, [r0, #16]
   3429e:	ldr	r3, [sp, #20]
   342a0:	ldr	r2, [pc, #68]	; (342e8 <XXH64_hashFromCanonical@@Base+0x18e>)
   342a2:	add	r3, r1
   342a4:	str	r3, [r0, #20]
   342a6:	ldr	r3, [sp, #24]
   342a8:	add	r2, pc
   342aa:	add	r3, ip
   342ac:	str	r3, [r0, #24]
   342ae:	ldr	r3, [sp, #28]
   342b0:	add	r3, r7
   342b2:	str	r3, [r0, #28]
   342b4:	movs	r3, #0
   342b6:	strh	r3, [r0, #40]	; 0x28
   342b8:	ldr	r3, [pc, #36]	; (342e0 <XXH64_hashFromCanonical@@Base+0x186>)
   342ba:	ldr	r3, [r2, r3]
   342bc:	ldr	r2, [r3, #0]
   342be:	ldr	r3, [sp, #300]	; 0x12c
   342c0:	eors	r2, r3
   342c2:	beq.n	342d6 <XXH64_hashFromCanonical@@Base+0x17c>
   342c4:	blx	8510 <__stack_chk_fail@plt>
   342c8:	mov	r7, ip
   342ca:	mov	r5, r6
   342cc:	mov	ip, r1
   342ce:	mov	r6, r4
   342d0:	ldr	r1, [sp, #32]
   342d2:	mov	r4, r2
   342d4:	b.n	3421c <XXH64_hashFromCanonical@@Base+0xc2>
   342d6:	add	sp, #308	; 0x134
   342d8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   342dc:	ldc2	0, cr0, [ip], {2}
   342e0:	lsls	r0, r4, #8
   342e2:	movs	r0, r0
   342e4:	ldc	0, cr0, [ip], {1}
   342e8:			; <UNDEFINED> instruction: 0xfadc0002
   342ec:	push	{r4, lr}
   342ee:	mov	r4, r0
   342f0:	ldrsh.w	r3, [r0, #40]	; 0x28
   342f4:	adds	r2, r3, #1
   342f6:	cmp	r3, #55	; 0x37
   342f8:	add	r3, r0
   342fa:	sxth	r2, r2
   342fc:	strh	r2, [r0, #40]	; 0x28
   342fe:	strb.w	r1, [r3, #42]	; 0x2a
   34302:	ble.n	34314 <XXH64_hashFromCanonical@@Base+0x1ba>
   34304:	movs	r2, #0
   34306:	ldrsh.w	r3, [r4, #40]	; 0x28
   3430a:	cmp	r3, #63	; 0x3f
   3430c:	ble.n	34352 <XXH64_hashFromCanonical@@Base+0x1f8>
   3430e:	mov	r0, r4
   34310:	bl	34164 <XXH64_hashFromCanonical@@Base+0xa>
   34314:	movs	r2, #0
   34316:	ldrsh.w	r3, [r4, #40]	; 0x28
   3431a:	cmp	r3, #55	; 0x37
   3431c:	ble.n	3435e <XXH64_hashFromCanonical@@Base+0x204>
   3431e:	ldr	r3, [r4, #32]
   34320:	mov	r0, r4
   34322:	ldrh	r2, [r4, #32]
   34324:	lsrs	r1, r3, #24
   34326:	lsrs	r3, r3, #16
   34328:	strb.w	r3, [r4, #99]	; 0x63
   3432c:	rev16	r2, r2
   3432e:	ldr	r3, [r4, #36]	; 0x24
   34330:	strh.w	r2, [r4, #100]	; 0x64
   34334:	ldrh	r2, [r4, #36]	; 0x24
   34336:	strb.w	r1, [r4, #98]	; 0x62
   3433a:	lsrs	r1, r3, #24
   3433c:	rev16	r2, r2
   3433e:	lsrs	r3, r3, #16
   34340:	strb.w	r1, [r4, #102]	; 0x66
   34344:	strb.w	r3, [r4, #103]	; 0x67
   34348:	strh.w	r2, [r4, #104]	; 0x68
   3434c:	ldmia.w	sp!, {r4, lr}
   34350:	b.n	34164 <XXH64_hashFromCanonical@@Base+0xa>
   34352:	adds	r1, r3, #1
   34354:	add	r3, r4
   34356:	strh	r1, [r4, #40]	; 0x28
   34358:	strb.w	r2, [r3, #42]	; 0x2a
   3435c:	b.n	34306 <XXH64_hashFromCanonical@@Base+0x1ac>
   3435e:	adds	r1, r3, #1
   34360:	add	r3, r4
   34362:	strh	r1, [r4, #40]	; 0x28
   34364:	strb.w	r2, [r3, #42]	; 0x2a
   34368:	b.n	34316 <XXH64_hashFromCanonical@@Base+0x1bc>
   3436a:	push	{r3, r4, r5, r6, r7, lr}
   3436c:	mov	r4, r0
   3436e:	ldr	r5, [r0, #108]	; 0x6c
   34370:	mov	r7, r1
   34372:	mov	r6, r2
   34374:	cbnz	r5, 34394 <XXH64_hashFromCanonical@@Base+0x23a>
   34376:	movs	r1, #128	; 0x80
   34378:	bl	342ec <XXH64_hashFromCanonical@@Base+0x192>
   3437c:	add.w	r2, r4, #42	; 0x2a
   34380:	add.w	r1, r4, #106	; 0x6a
   34384:	strb.w	r5, [r2], #1
   34388:	cmp	r2, r1
   3438a:	bne.n	34384 <XXH64_hashFromCanonical@@Base+0x22a>
   3438c:	movs	r3, #1
   3438e:	strd	r5, r5, [r4, #32]
   34392:	str	r3, [r4, #108]	; 0x6c
   34394:	movs	r3, #0
   34396:	asrs	r2, r3, #2
   34398:	mvns	r0, r3
   3439a:	and.w	r0, r0, #3
   3439e:	ldr.w	r2, [r4, r2, lsl #2]
   343a2:	lsls	r0, r0, #3
   343a4:	lsr.w	r0, r2, r0
   343a8:	strb	r0, [r7, r3]
   343aa:	adds	r3, #1
   343ac:	cmp	r3, r6
   343ae:	bne.n	34396 <XXH64_hashFromCanonical@@Base+0x23c>
   343b0:	movs	r0, #0
   343b2:	pop	{r3, r4, r5, r6, r7, pc}

000343b4 <SHA224Reset@@Base>:
   343b4:	cbz	r0, 343ea <SHA224Reset@@Base+0x36>
   343b6:	ldr	r2, [pc, #56]	; (343f0 <SHA224Reset@@Base+0x3c>)
   343b8:	movs	r3, #0
   343ba:	strd	r3, r3, [r0, #32]
   343be:	add	r2, pc
   343c0:	strh	r3, [r0, #40]	; 0x28
   343c2:	strd	r3, r3, [r0, #108]	; 0x6c
   343c6:	ldr	r1, [r2, #0]
   343c8:	str	r1, [r0, #0]
   343ca:	ldr	r1, [r2, #4]
   343cc:	str	r1, [r0, #4]
   343ce:	ldr	r1, [r2, #8]
   343d0:	str	r1, [r0, #8]
   343d2:	ldr	r1, [r2, #12]
   343d4:	str	r1, [r0, #12]
   343d6:	ldr	r1, [r2, #16]
   343d8:	str	r1, [r0, #16]
   343da:	ldr	r1, [r2, #20]
   343dc:	str	r1, [r0, #20]
   343de:	ldr	r1, [r2, #24]
   343e0:	str	r1, [r0, #24]
   343e2:	ldr	r2, [r2, #28]
   343e4:	str	r2, [r0, #28]
   343e6:	mov	r0, r3
   343e8:	bx	lr
   343ea:	movs	r0, #1
   343ec:	bx	lr
   343ee:	nop
   343f0:	lsrs	r6, r2, #25
   343f2:	movs	r3, r0

000343f4 <SHA224Result@@Base>:
   343f4:	cbz	r0, 34400 <SHA224Result@@Base+0xc>
   343f6:	cbz	r1, 34400 <SHA224Result@@Base+0xc>
   343f8:	ldr	r3, [r0, #112]	; 0x70
   343fa:	cbnz	r3, 34402 <SHA224Result@@Base+0xe>
   343fc:	movs	r2, #28
   343fe:	b.n	3436a <XXH64_hashFromCanonical@@Base+0x210>
   34400:	movs	r3, #1
   34402:	mov	r0, r3
   34404:	bx	lr

00034406 <SHA256Reset@@Base>:
   34406:	cbz	r0, 3443c <SHA256Reset@@Base+0x36>
   34408:	ldr	r2, [pc, #52]	; (34440 <SHA256Reset@@Base+0x3a>)
   3440a:	movs	r3, #0
   3440c:	strd	r3, r3, [r0, #32]
   34410:	add	r2, pc
   34412:	strh	r3, [r0, #40]	; 0x28
   34414:	strd	r3, r3, [r0, #108]	; 0x6c
   34418:	ldr	r1, [r2, #32]
   3441a:	str	r1, [r0, #0]
   3441c:	ldr	r1, [r2, #36]	; 0x24
   3441e:	str	r1, [r0, #4]
   34420:	ldr	r1, [r2, #40]	; 0x28
   34422:	str	r1, [r0, #8]
   34424:	ldr	r1, [r2, #44]	; 0x2c
   34426:	str	r1, [r0, #12]
   34428:	ldr	r1, [r2, #48]	; 0x30
   3442a:	str	r1, [r0, #16]
   3442c:	ldr	r1, [r2, #52]	; 0x34
   3442e:	str	r1, [r0, #20]
   34430:	ldr	r1, [r2, #56]	; 0x38
   34432:	str	r1, [r0, #24]
   34434:	ldr	r2, [r2, #60]	; 0x3c
   34436:	str	r2, [r0, #28]
   34438:	mov	r0, r3
   3443a:	bx	lr
   3443c:	movs	r0, #1
   3443e:	bx	lr
   34440:	lsrs	r4, r0, #24
   34442:	movs	r3, r0

00034444 <SHA256Input@@Base>:
   34444:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   34448:	mov	r4, r0
   3444a:	cmp	r0, #0
   3444c:	beq.n	344ba <SHA256Input@@Base+0x76>
   3444e:	cmp	r2, #0
   34450:	beq.n	344b6 <SHA256Input@@Base+0x72>
   34452:	cmp	r1, #0
   34454:	beq.n	344ba <SHA256Input@@Base+0x76>
   34456:	ldr	r3, [r0, #108]	; 0x6c
   34458:	cbz	r3, 34462 <SHA256Input@@Base+0x1e>
   3445a:	movs	r0, #3
   3445c:	str	r0, [r4, #112]	; 0x70
   3445e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   34462:	ldr	r0, [r0, #112]	; 0x70
   34464:	cmp	r0, #0
   34466:	bne.n	3445e <SHA256Input@@Base+0x1a>
   34468:	adds	r6, r1, r2
   3446a:	mov	r5, r1
   3446c:	movs	r7, #8
   3446e:	mov.w	r8, #2
   34472:	cmp	r5, r6
   34474:	bne.n	3447a <SHA256Input@@Base+0x36>
   34476:	ldr	r0, [r4, #112]	; 0x70
   34478:	b.n	3445e <SHA256Input@@Base+0x1a>
   3447a:	ldrsh.w	r3, [r4, #40]	; 0x28
   3447e:	adds	r2, r3, #1
   34480:	add	r3, r4
   34482:	sxth	r2, r2
   34484:	strh	r2, [r4, #40]	; 0x28
   34486:	ldrb.w	r1, [r5], #1
   3448a:	strb.w	r1, [r3, #42]	; 0x2a
   3448e:	ldr	r3, [r4, #36]	; 0x24
   34490:	adds	r3, r3, r7
   34492:	str	r3, [r4, #36]	; 0x24
   34494:	bcc.n	344a4 <SHA256Input@@Base+0x60>
   34496:	ldr	r3, [r4, #32]
   34498:	adds	r3, #1
   3449a:	str	r3, [r4, #32]
   3449c:	cbnz	r3, 344a4 <SHA256Input@@Base+0x60>
   3449e:	str.w	r8, [r4, #112]	; 0x70
   344a2:	b.n	34472 <SHA256Input@@Base+0x2e>
   344a4:	ldr	r3, [r4, #112]	; 0x70
   344a6:	cmp	r3, #0
   344a8:	bne.n	34472 <SHA256Input@@Base+0x2e>
   344aa:	cmp	r2, #64	; 0x40
   344ac:	bne.n	34472 <SHA256Input@@Base+0x2e>
   344ae:	mov	r0, r4
   344b0:	bl	34164 <XXH64_hashFromCanonical@@Base+0xa>
   344b4:	b.n	34472 <SHA256Input@@Base+0x2e>
   344b6:	mov	r0, r2
   344b8:	b.n	3445e <SHA256Input@@Base+0x1a>
   344ba:	movs	r0, #1
   344bc:	b.n	3445e <SHA256Input@@Base+0x1a>

000344be <SHA224Input@@Base>:
   344be:	b.w	34444 <SHA256Input@@Base>

000344c2 <SHA256FinalBits@@Base>:
   344c2:	push	{r4, lr}
   344c4:	mov	r4, r0
   344c6:	cbz	r0, 3452c <SHA256FinalBits@@Base+0x6a>
   344c8:	cbz	r2, 34530 <SHA256FinalBits@@Base+0x6e>
   344ca:	ldr	r0, [r0, #112]	; 0x70
   344cc:	cbnz	r0, 344d6 <SHA256FinalBits@@Base+0x14>
   344ce:	ldr	r0, [r4, #108]	; 0x6c
   344d0:	cbz	r0, 344d8 <SHA256FinalBits@@Base+0x16>
   344d2:	movs	r0, #3
   344d4:	str	r0, [r4, #112]	; 0x70
   344d6:	pop	{r4, pc}
   344d8:	cmp	r2, #7
   344da:	bls.n	344e0 <SHA256FinalBits@@Base+0x1e>
   344dc:	movs	r0, #4
   344de:	b.n	344d4 <SHA256FinalBits@@Base+0x12>
   344e0:	ldr	r3, [r4, #36]	; 0x24
   344e2:	adds	r3, r2, r3
   344e4:	str	r3, [r4, #36]	; 0x24
   344e6:	bcc.n	344f4 <SHA256FinalBits@@Base+0x32>
   344e8:	ldr	r3, [r4, #32]
   344ea:	adds	r3, #1
   344ec:	str	r3, [r4, #32]
   344ee:	cmp	r3, #0
   344f0:	it	eq
   344f2:	moveq	r0, #2
   344f4:	ldr	r3, [pc, #60]	; (34534 <SHA256FinalBits@@Base+0x72>)
   344f6:	str	r0, [r4, #112]	; 0x70
   344f8:	mov	r0, r4
   344fa:	add	r3, pc
   344fc:	add	r2, r3
   344fe:	ldrb.w	r3, [r2, #256]	; 0x100
   34502:	ands	r1, r3
   34504:	ldrb.w	r3, [r2, #264]	; 0x108
   34508:	orrs	r1, r3
   3450a:	bl	342ec <XXH64_hashFromCanonical@@Base+0x192>
   3450e:	add.w	r2, r4, #42	; 0x2a
   34512:	add.w	r1, r4, #106	; 0x6a
   34516:	movs	r3, #0
   34518:	strb.w	r3, [r2], #1
   3451c:	cmp	r1, r2
   3451e:	bne.n	34518 <SHA256FinalBits@@Base+0x56>
   34520:	strd	r3, r3, [r4, #32]
   34524:	movs	r3, #1
   34526:	ldr	r0, [r4, #112]	; 0x70
   34528:	str	r3, [r4, #108]	; 0x6c
   3452a:	b.n	344d6 <SHA256FinalBits@@Base+0x14>
   3452c:	movs	r0, #1
   3452e:	b.n	344d6 <SHA256FinalBits@@Base+0x14>
   34530:	mov	r0, r2
   34532:	b.n	344d6 <SHA256FinalBits@@Base+0x14>
   34534:			; <UNDEFINED> instruction: 0xe9ba0001

00034538 <SHA224FinalBits@@Base>:
   34538:	b.w	344c2 <SHA256FinalBits@@Base>

0003453c <SHA256Result@@Base>:
   3453c:	cbz	r0, 34548 <SHA256Result@@Base+0xc>
   3453e:	cbz	r1, 34548 <SHA256Result@@Base+0xc>
   34540:	ldr	r3, [r0, #112]	; 0x70
   34542:	cbnz	r3, 3454a <SHA256Result@@Base+0xe>
   34544:	movs	r2, #32
   34546:	b.n	3436a <XXH64_hashFromCanonical@@Base+0x210>
   34548:	movs	r3, #1
   3454a:	mov	r0, r3
   3454c:	bx	lr
   3454e:	nop
   34550:	mov	r3, r0
   34552:	ldr	r0, [r0, #0]
   34554:	ldr	r1, [r3, #4]
   34556:	bx	lr
   34558:	ldr	r2, [pc, #952]	; (34914 <SHA256Result@@Base+0x3d8>)
   3455a:	ldr	r3, [pc, #956]	; (34918 <SHA256Result@@Base+0x3dc>)
   3455c:	add	r2, pc
   3455e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34562:	sub.w	sp, sp, #540	; 0x21c
   34566:	ldr	r3, [r2, r3]
   34568:	add	r5, sp, #272	; 0x110
   3456a:	add.w	r7, r1, #128	; 0x80
   3456e:	mov	fp, r0
   34570:	ldr	r3, [r3, #0]
   34572:	str	r3, [sp, #532]	; 0x214
   34574:	mov.w	r3, #0
   34578:	mov	r2, r1
   3457a:	mov	r4, r5
   3457c:	mov	r0, r2
   3457e:	bl	34550 <SHA256Result@@Base+0x14>
   34582:	adds	r2, #8
   34584:	strd	r0, r1, [r5], #8
   34588:	cmp	r2, r7
   3458a:	bne.n	3457c <SHA256Result@@Base+0x40>
   3458c:	sub.w	r3, fp, #8
   34590:	str	r3, [sp, #132]	; 0x84
   34592:	add	r3, sp, #400	; 0x190
   34594:	str	r3, [sp, #136]	; 0x88
   34596:	ldrd	r1, r0, [sp, #132]	; 0x84
   3459a:	add.w	r3, fp, #56	; 0x38
   3459e:	str	r3, [sp, #140]	; 0x8c
   345a0:	ldrd	r2, r3, [r1, #8]!
   345a4:	strd	r2, r3, [r0], #8
   345a8:	ldr	r3, [sp, #140]	; 0x8c
   345aa:	cmp	r1, r3
   345ac:	bne.n	345a0 <SHA256Result@@Base+0x64>
   345ae:	ldr	r3, [sp, #272]	; 0x110
   345b0:	ldrd	r8, r0, [sp, #432]	; 0x1b0
   345b4:	ldr	r7, [sp, #400]	; 0x190
   345b6:	str	r3, [sp, #4]
   345b8:	ldr	r3, [sp, #276]	; 0x114
   345ba:	adds.w	r7, r8, r7
   345be:	ldr	r6, [r4, #8]
   345c0:	str	r3, [sp, #8]
   345c2:	ldr	r3, [sp, #404]	; 0x194
   345c4:	str	r6, [sp, #12]
   345c6:	adc.w	r9, r0, r3
   345ca:	ldr	r3, [sp, #4]
   345cc:	ldr	r6, [r4, #12]
   345ce:	adds	r7, r7, r3
   345d0:	ldr	r3, [sp, #8]
   345d2:	adc.w	r9, r9, r3
   345d6:	ldrd	r3, r2, [fp, #64]	; 0x40
   345da:	str	r6, [sp, #16]
   345dc:	eor.w	r2, r9, r2
   345e0:	eor.w	r5, r7, r3
   345e4:	eor.w	r1, r2, #1358954496	; 0x51000000
   345e8:	eor.w	r3, r5, #2902458368	; 0xad000000
   345ec:	eor.w	r1, r1, #937984	; 0xe5000
   345f0:	ldr	r2, [pc, #768]	; (348f4 <SHA256Result@@Base+0x3b8>)
   345f2:	eor.w	r1, r1, #636	; 0x27c
   345f6:	eor.w	r3, r3, #15073280	; 0xe60000
   345fa:	eor.w	r1, r1, #3
   345fe:	ldr	r5, [pc, #760]	; (348f8 <SHA256Result@@Base+0x3bc>)
   34600:	eor.w	r3, r3, #33280	; 0x8200
   34604:	adds	r2, r1, r2
   34606:	eor.w	r3, r3, #209	; 0xd1
   3460a:	eor.w	r8, r8, r2
   3460e:	adc.w	r5, r3, r5
   34612:	ldr	r6, [sp, #12]
   34614:	eor.w	ip, r0, r5
   34618:	mov.w	sl, r8, lsr #24
   3461c:	adds	r7, r7, r6
   3461e:	ldr	r6, [sp, #16]
   34620:	orr.w	lr, sl, ip, lsl #8
   34624:	mov.w	r0, ip, lsr #24
   34628:	orr.w	r0, r0, r8, lsl #8
   3462c:	adc.w	r9, r9, r6
   34630:	adds.w	r6, r7, lr
   34634:	str	r6, [sp, #76]	; 0x4c
   34636:	adc.w	r6, r9, r0
   3463a:	str	r6, [sp, #80]	; 0x50
   3463c:	ldr	r6, [sp, #76]	; 0x4c
   3463e:	eors	r1, r6
   34640:	ldr	r6, [sp, #80]	; 0x50
   34642:	eors	r3, r6
   34644:	lsrs	r7, r1, #16
   34646:	orr.w	r6, r7, r3, lsl #16
   3464a:	lsrs	r3, r3, #16
   3464c:	orr.w	r3, r3, r1, lsl #16
   34650:	str	r3, [sp, #168]	; 0xa8
   34652:	adds	r3, r2, r6
   34654:	str	r3, [sp, #108]	; 0x6c
   34656:	ldr	r3, [sp, #168]	; 0xa8
   34658:	str	r6, [sp, #104]	; 0x68
   3465a:	adc.w	r3, r5, r3
   3465e:	str	r3, [sp, #112]	; 0x70
   34660:	ldr	r3, [sp, #108]	; 0x6c
   34662:	eor.w	lr, r3, lr
   34666:	ldr	r3, [sp, #112]	; 0x70
   34668:	eors	r0, r3
   3466a:	lsls	r3, r0, #1
   3466c:	orr.w	r3, r3, lr, lsr #31
   34670:	mov.w	lr, lr, lsl #1
   34674:	str	r3, [sp, #196]	; 0xc4
   34676:	orr.w	r3, lr, r0, lsr #31
   3467a:	str	r3, [sp, #192]	; 0xc0
   3467c:	ldrd	r9, ip, [sp, #440]	; 0x1b8
   34680:	ldr	r3, [r4, #16]
   34682:	ldr	r2, [sp, #408]	; 0x198
   34684:	ldr	r7, [sp, #412]	; 0x19c
   34686:	str	r3, [sp, #20]
   34688:	adds.w	r2, r9, r2
   3468c:	ldr	r3, [r4, #20]
   3468e:	adc.w	r7, ip, r7
   34692:	ldr	r6, [r4, #24]
   34694:	str	r3, [sp, #24]
   34696:	ldr	r3, [sp, #20]
   34698:	str	r6, [sp, #28]
   3469a:	adds	r2, r2, r3
   3469c:	ldr	r3, [sp, #24]
   3469e:	ldr	r6, [r4, #28]
   346a0:	adc.w	r7, r3, r7
   346a4:	ldrd	r3, r1, [fp, #72]	; 0x48
   346a8:	eor.w	r0, r7, r1
   346ac:	eors	r3, r2
   346ae:	eor.w	r5, r0, #2600468480	; 0x9b000000
   346b2:	eor.w	r1, r3, #721420288	; 0x2b000000
   346b6:	eor.w	r5, r5, #354304	; 0x56800
   346ba:	ldr	r3, [pc, #576]	; (348fc <SHA256Result@@Base+0x3c0>)
   346bc:	eor.w	r1, r1, #4079616	; 0x3e4000
   346c0:	eor.w	r5, r5, #140	; 0x8c
   346c4:	ldr	r0, [pc, #568]	; (34900 <SHA256Result@@Base+0x3c4>)
   346c6:	eor.w	r1, r1, #11264	; 0x2c00
   346ca:	adds	r3, r5, r3
   346cc:	eor.w	r1, r1, #31
   346d0:	adc.w	r0, r1, r0
   346d4:	eor.w	r9, r9, r3
   346d8:	str	r6, [sp, #32]
   346da:	eor.w	ip, ip, r0
   346de:	ldr	r6, [sp, #28]
   346e0:	mov.w	sl, r9, lsr #24
   346e4:	orr.w	r8, sl, ip, lsl #8
   346e8:	mov.w	ip, ip, lsr #24
   346ec:	adds	r2, r2, r6
   346ee:	ldr	r6, [sp, #32]
   346f0:	orr.w	lr, ip, r9, lsl #8
   346f4:	adc.w	r7, r6, r7
   346f8:	adds.w	r2, r2, r8
   346fc:	str	r2, [sp, #92]	; 0x5c
   346fe:	adc.w	r2, r7, lr
   34702:	str	r2, [sp, #96]	; 0x60
   34704:	ldr	r2, [sp, #92]	; 0x5c
   34706:	eors	r5, r2
   34708:	ldr	r2, [sp, #96]	; 0x60
   3470a:	eors	r1, r2
   3470c:	lsrs	r2, r5, #16
   3470e:	orr.w	r2, r2, r1, lsl #16
   34712:	lsrs	r1, r1, #16
   34714:	str	r2, [sp, #184]	; 0xb8
   34716:	orr.w	r2, r1, r5, lsl #16
   3471a:	str	r2, [sp, #188]	; 0xbc
   3471c:	ldr	r2, [sp, #184]	; 0xb8
   3471e:	adds	r3, r3, r2
   34720:	str	r3, [sp, #124]	; 0x7c
   34722:	ldr	r3, [sp, #188]	; 0xbc
   34724:	adc.w	r3, r0, r3
   34728:	str	r3, [sp, #128]	; 0x80
   3472a:	ldr	r3, [sp, #124]	; 0x7c
   3472c:	eor.w	r8, r3, r8
   34730:	ldr	r3, [sp, #128]	; 0x80
   34732:	eor.w	lr, r3, lr
   34736:	mov.w	r3, lr, lsl #1
   3473a:	orr.w	r3, r3, r8, lsr #31
   3473e:	mov.w	r8, r8, lsl #1
   34742:	str	r3, [sp, #88]	; 0x58
   34744:	orr.w	r3, r8, lr, lsr #31
   34748:	str	r3, [sp, #84]	; 0x54
   3474a:	ldrd	r8, r7, [sp, #448]	; 0x1c0
   3474e:	ldr	r3, [r4, #32]
   34750:	ldr	r2, [sp, #420]	; 0x1a4
   34752:	ldr	r6, [r4, #40]	; 0x28
   34754:	str	r3, [sp, #36]	; 0x24
   34756:	ldr	r3, [r4, #36]	; 0x24
   34758:	ldr	r1, [sp, #36]	; 0x24
   3475a:	str	r6, [sp, #44]	; 0x2c
   3475c:	str	r3, [sp, #40]	; 0x28
   3475e:	ldr	r3, [sp, #416]	; 0x1a0
   34760:	ldr	r6, [r4, #44]	; 0x2c
   34762:	adds.w	r3, r8, r3
   34766:	adc.w	r2, r7, r2
   3476a:	adds	r3, r3, r1
   3476c:	ldr	r1, [sp, #40]	; 0x28
   3476e:	str	r6, [sp, #48]	; 0x30
   34770:	adc.w	ip, r2, r1
   34774:	ldrd	r2, r1, [fp, #80]	; 0x50
   34778:	ldr	r6, [sp, #44]	; 0x2c
   3477a:	eor.w	r5, ip, r1
   3477e:	eors	r2, r3
   34780:	eor.w	r0, r5, #528482304	; 0x1f800000
   34784:	eor.w	r1, r2, #4211081216	; 0xfb000000
   34788:	eor.w	r0, r0, #251904	; 0x3d800
   3478c:	ldr	r2, [pc, #372]	; (34904 <SHA256Result@@Base+0x3c8>)
   3478e:	eor.w	r0, r0, #426	; 0x1aa
   34792:	eor.w	r1, r1, #4292608	; 0x418000
   34796:	eor.w	r0, r0, #1
   3479a:	ldr	r5, [pc, #364]	; (34908 <SHA256Result@@Base+0x3cc>)
   3479c:	eor.w	r1, r1, #15680	; 0x3d40
   347a0:	adds	r2, r0, r2
   347a2:	eor.w	r1, r1, #43	; 0x2b
   347a6:	eor.w	r8, r8, r2
   347aa:	adc.w	r5, r1, r5
   347ae:	adds	r3, r3, r6
   347b0:	eor.w	lr, r7, r5
   347b4:	ldr	r6, [sp, #48]	; 0x30
   347b6:	mov.w	sl, r8, lsr #24
   347ba:	orr.w	r7, sl, lr, lsl #8
   347be:	mov.w	lr, lr, lsr #24
   347c2:	orr.w	r9, lr, r8, lsl #8
   347c6:	adc.w	ip, ip, r6
   347ca:	adds	r3, r3, r7
   347cc:	str	r3, [sp, #116]	; 0x74
   347ce:	adc.w	r3, ip, r9
   347d2:	str	r3, [sp, #120]	; 0x78
   347d4:	ldr	r3, [sp, #116]	; 0x74
   347d6:	ldrd	sl, r8, [sp, #456]	; 0x1c8
   347da:	eors	r0, r3
   347dc:	ldr	r3, [sp, #120]	; 0x78
   347de:	eors	r1, r3
   347e0:	lsrs	r3, r0, #16
   347e2:	orr.w	r3, r3, r1, lsl #16
   347e6:	lsrs	r1, r1, #16
   347e8:	str	r3, [sp, #200]	; 0xc8
   347ea:	orr.w	r3, r1, r0, lsl #16
   347ee:	str	r3, [sp, #204]	; 0xcc
   347f0:	ldr	r3, [sp, #200]	; 0xc8
   347f2:	adds	r2, r2, r3
   347f4:	ldr	r3, [sp, #204]	; 0xcc
   347f6:	eor.w	r7, r7, r2
   347fa:	adc.w	r5, r3, r5
   347fe:	eor.w	r9, r5, r9
   34802:	mov.w	r3, r9, lsl #1
   34806:	orr.w	r3, r3, r7, lsr #31
   3480a:	lsls	r7, r7, #1
   3480c:	str	r3, [sp, #176]	; 0xb0
   3480e:	orr.w	r3, r7, r9, lsr #31
   34812:	str	r3, [sp, #172]	; 0xac
   34814:	ldr	r3, [r4, #48]	; 0x30
   34816:	str	r3, [sp, #52]	; 0x34
   34818:	ldr	r3, [r4, #52]	; 0x34
   3481a:	str	r3, [sp, #56]	; 0x38
   3481c:	ldr	r1, [sp, #424]	; 0x1a8
   3481e:	ldr	r3, [sp, #428]	; 0x1ac
   34820:	adds.w	r1, sl, r1
   34824:	adc.w	r9, r8, r3
   34828:	ldr	r3, [sp, #52]	; 0x34
   3482a:	adds	r1, r1, r3
   3482c:	ldr	r3, [sp, #56]	; 0x38
   3482e:	adc.w	r9, r9, r3
   34832:	ldrd	r3, r0, [fp, #88]	; 0x58
   34836:	eor.w	r0, r9, r0
   3483a:	eors	r3, r1
   3483c:	eor.w	r7, r0, #1535115264	; 0x5b800000
   34840:	eor.w	r6, r3, #325058560	; 0x13600000
   34844:	eor.w	r7, r7, #6324224	; 0x608000
   34848:	ldr	r3, [pc, #192]	; (3490c <SHA256Result@@Base+0x3d0>)
   3484a:	eor.w	r7, r7, #19712	; 0x4d00
   3484e:	eor.w	r6, r6, #1974272	; 0x1e2000
   34852:	eor.w	r7, r7, #25
   34856:	ldr	r0, [pc, #184]	; (34910 <SHA256Result@@Base+0x3d4>)
   34858:	adds	r3, r7, r3
   3485a:	str	r3, [sp, #68]	; 0x44
   3485c:	eor.w	sl, sl, r3
   34860:	ldr	r3, [r4, #56]	; 0x38
   34862:	eor.w	r6, r6, #376	; 0x178
   34866:	eor.w	r6, r6, #1
   3486a:	mov.w	fp, sl, lsr #24
   3486e:	str	r3, [sp, #60]	; 0x3c
   34870:	adc.w	r0, r6, r0
   34874:	ldr	r3, [r4, #60]	; 0x3c
   34876:	eor.w	r8, r8, r0
   3487a:	orr.w	ip, fp, r8, lsl #8
   3487e:	mov.w	lr, r8, lsr #24
   34882:	str	r3, [sp, #64]	; 0x40
   34884:	orr.w	lr, lr, sl, lsl #8
   34888:	ldr	r3, [sp, #60]	; 0x3c
   3488a:	adds	r1, r1, r3
   3488c:	ldr	r3, [sp, #64]	; 0x40
   3488e:	adc.w	r9, r9, r3
   34892:	adds.w	r3, r1, ip
   34896:	str	r3, [sp, #144]	; 0x90
   34898:	adc.w	r3, r9, lr
   3489c:	str	r3, [sp, #148]	; 0x94
   3489e:	ldr	r3, [sp, #144]	; 0x90
   348a0:	eors	r7, r3
   348a2:	ldr	r3, [sp, #148]	; 0x94
   348a4:	eors	r6, r3
   348a6:	lsrs	r1, r7, #16
   348a8:	ldr	r3, [sp, #68]	; 0x44
   348aa:	orr.w	r8, r1, r6, lsl #16
   348ae:	lsrs	r6, r6, #16
   348b0:	adds.w	r3, r3, r8
   348b4:	orr.w	sl, r6, r7, lsl #16
   348b8:	adc.w	r0, r0, sl
   348bc:	eor.w	ip, r3, ip
   348c0:	eor.w	lr, r0, lr
   348c4:	str	r3, [sp, #100]	; 0x64
   348c6:	mov.w	r1, lr, lsl #1
   348ca:	orr.w	fp, r1, ip, lsr #31
   348ce:	mov.w	ip, ip, lsl #1
   348d2:	orr.w	r1, ip, lr, lsr #31
   348d6:	str	r1, [sp, #208]	; 0xd0
   348d8:	ldr	r1, [r4, #64]	; 0x40
   348da:	str	r1, [sp, #68]	; 0x44
   348dc:	ldr	r1, [r4, #68]	; 0x44
   348de:	ldr	r6, [sp, #68]	; 0x44
   348e0:	str	r1, [sp, #72]	; 0x48
   348e2:	ldr	r1, [sp, #76]	; 0x4c
   348e4:	ldr	r7, [sp, #72]	; 0x48
   348e6:	adds	r1, r1, r6
   348e8:	ldr	r6, [sp, #80]	; 0x50
   348ea:	adc.w	r9, r6, r7
   348ee:	ldr	r6, [sp, #84]	; 0x54
   348f0:	adds	r1, r1, r6
   348f2:	b.n	3491c <SHA256Result@@Base+0x3e0>
   348f4:	ldmia	r1!, {r3}
   348f6:	bfcsel	e, 355c6 <SHA256Result@@Base+0x108a>, 10, <und>
   348fa:	ldr	r1, [r1, #32]
   348fc:	add	r7, pc, #236	; (adr r7, 349ec <SHA256Result@@Base+0x4b0>)
   348fe:	strh	r2, [r1, #38]	; 0x26
   34900:	add	r6, sp, #532	; 0x214
   34902:	cbnz	r7, 3495e <SHA256Result@@Base+0x422>
   34904:	strht	pc, [fp, #148]
   34908:			; <UNDEFINED> instruction: 0xf3723c6e
   3490c:	adds	r6, #241	; 0xf1
   3490e:	ldrsh	r5, [r3, r4]
   34910:	bmi.w	fffaf3b2 <__bss_end__@@Base+0xfff4a10a>
   34914:	strh.w	r0, [r8, r2]
   34918:	lsls	r0, r4, #8
   3491a:	movs	r0, r0
   3491c:	ldr	r6, [sp, #88]	; 0x58
   3491e:	eor.w	r7, r1, r8
   34922:	adc.w	r9, r9, r6
   34926:	ldr	r6, [sp, #84]	; 0x54
   34928:	eor.w	lr, r9, sl
   3492c:	adds.w	r2, r2, lr
   34930:	eor.w	r8, r2, r6
   34934:	ldr	r6, [sp, #88]	; 0x58
   34936:	ldr	r3, [r4, #72]	; 0x48
   34938:	adc.w	r5, r7, r5
   3493c:	eor.w	ip, r5, r6
   34940:	mov.w	r6, r8, lsr #24
   34944:	str	r3, [sp, #76]	; 0x4c
   34946:	orr.w	r6, r6, ip, lsl #8
   3494a:	ldr	r3, [r4, #76]	; 0x4c
   3494c:	mov.w	ip, ip, lsr #24
   34950:	orr.w	sl, ip, r8, lsl #8
   34954:	str	r3, [sp, #80]	; 0x50
   34956:	ldr	r3, [sp, #76]	; 0x4c
   34958:	adds	r1, r1, r3
   3495a:	ldr	r3, [sp, #80]	; 0x50
   3495c:	adc.w	r9, r9, r3
   34960:	adds	r3, r1, r6
   34962:	str	r3, [sp, #152]	; 0x98
   34964:	adc.w	r3, r9, sl
   34968:	str	r3, [sp, #156]	; 0x9c
   3496a:	ldr	r3, [sp, #152]	; 0x98
   3496c:	eor.w	lr, r3, lr
   34970:	ldr	r3, [sp, #156]	; 0x9c
   34972:	eors	r7, r3
   34974:	mov.w	r1, lr, lsr #16
   34978:	orr.w	r3, r1, r7, lsl #16
   3497c:	lsrs	r7, r7, #16
   3497e:	str	r3, [sp, #212]	; 0xd4
   34980:	orr.w	r3, r7, lr, lsl #16
   34984:	str	r3, [sp, #216]	; 0xd8
   34986:	ldr	r3, [sp, #212]	; 0xd4
   34988:	adds	r3, r2, r3
   3498a:	str	r3, [sp, #160]	; 0xa0
   3498c:	ldr	r3, [sp, #216]	; 0xd8
   3498e:	adc.w	r3, r5, r3
   34992:	str	r3, [sp, #164]	; 0xa4
   34994:	ldr	r3, [sp, #160]	; 0xa0
   34996:	eors	r6, r3
   34998:	ldr	r3, [sp, #164]	; 0xa4
   3499a:	eor.w	sl, r3, sl
   3499e:	mov.w	r2, sl, lsl #1
   349a2:	orr.w	r3, r2, r6, lsr #31
   349a6:	lsls	r6, r6, #1
   349a8:	str	r3, [sp, #224]	; 0xe0
   349aa:	orr.w	r3, r6, sl, lsr #31
   349ae:	str	r3, [sp, #220]	; 0xdc
   349b0:	ldr	r3, [r4, #80]	; 0x50
   349b2:	str	r3, [sp, #84]	; 0x54
   349b4:	ldr	r3, [r4, #84]	; 0x54
   349b6:	ldr	r2, [sp, #84]	; 0x54
   349b8:	str	r3, [sp, #88]	; 0x58
   349ba:	ldr	r3, [sp, #92]	; 0x5c
   349bc:	ldr	r1, [sp, #88]	; 0x58
   349be:	adds	r2, r3, r2
   349c0:	ldr	r3, [sp, #96]	; 0x60
   349c2:	adc.w	r6, r3, r1
   349c6:	ldr	r3, [sp, #172]	; 0xac
   349c8:	adds	r2, r2, r3
   349ca:	ldr	r3, [sp, #176]	; 0xb0
   349cc:	adc.w	r6, r3, r6
   349d0:	ldr	r3, [sp, #168]	; 0xa8
   349d2:	eor.w	r5, r6, r3
   349d6:	ldr	r3, [sp, #104]	; 0x68
   349d8:	eor.w	r1, r2, r3
   349dc:	ldr	r3, [sp, #100]	; 0x64
   349de:	ldr	r7, [sp, #172]	; 0xac
   349e0:	adds.w	sl, r3, r5
   349e4:	ldr	r3, [r4, #88]	; 0x58
   349e6:	eor.w	r8, sl, r7
   349ea:	ldr	r7, [sp, #176]	; 0xb0
   349ec:	adc.w	r0, r1, r0
   349f0:	str	r3, [sp, #92]	; 0x5c
   349f2:	eor.w	ip, r0, r7
   349f6:	ldr	r3, [r4, #92]	; 0x5c
   349f8:	mov.w	r9, r8, lsr #24
   349fc:	orr.w	r7, r9, ip, lsl #8
   34a00:	mov.w	ip, ip, lsr #24
   34a04:	orr.w	lr, ip, r8, lsl #8
   34a08:	str	r3, [sp, #96]	; 0x60
   34a0a:	ldr	r3, [sp, #92]	; 0x5c
   34a0c:	adds	r2, r2, r3
   34a0e:	ldr	r3, [sp, #96]	; 0x60
   34a10:	adc.w	r6, r3, r6
   34a14:	adds	r3, r2, r7
   34a16:	str	r3, [sp, #168]	; 0xa8
   34a18:	adc.w	r3, r6, lr
   34a1c:	str	r3, [sp, #172]	; 0xac
   34a1e:	ldr	r3, [sp, #168]	; 0xa8
   34a20:	eors	r5, r3
   34a22:	ldr	r3, [sp, #172]	; 0xac
   34a24:	eors	r1, r3
   34a26:	lsrs	r2, r5, #16
   34a28:	orr.w	r3, r2, r1, lsl #16
   34a2c:	lsrs	r1, r1, #16
   34a2e:	str	r3, [sp, #228]	; 0xe4
   34a30:	orr.w	r3, r1, r5, lsl #16
   34a34:	str	r3, [sp, #232]	; 0xe8
   34a36:	ldr	r3, [sp, #228]	; 0xe4
   34a38:	adds.w	r3, sl, r3
   34a3c:	str	r3, [sp, #176]	; 0xb0
   34a3e:	ldr	r3, [sp, #232]	; 0xe8
   34a40:	adc.w	r3, r0, r3
   34a44:	str	r3, [sp, #180]	; 0xb4
   34a46:	ldr	r3, [sp, #176]	; 0xb0
   34a48:	eors	r7, r3
   34a4a:	ldr	r3, [sp, #180]	; 0xb4
   34a4c:	eor.w	lr, r3, lr
   34a50:	mov.w	r3, lr, lsl #1
   34a54:	orr.w	r3, r3, r7, lsr #31
   34a58:	lsls	r7, r7, #1
   34a5a:	str	r3, [sp, #240]	; 0xf0
   34a5c:	orr.w	r3, r7, lr, lsr #31
   34a60:	str	r3, [sp, #236]	; 0xec
   34a62:	ldr	r3, [r4, #96]	; 0x60
   34a64:	str	r3, [sp, #100]	; 0x64
   34a66:	ldr	r3, [r4, #100]	; 0x64
   34a68:	ldr	r2, [sp, #100]	; 0x64
   34a6a:	str	r3, [sp, #104]	; 0x68
   34a6c:	ldr	r3, [sp, #116]	; 0x74
   34a6e:	ldr	r1, [sp, #104]	; 0x68
   34a70:	adds	r3, r3, r2
   34a72:	ldr	r2, [sp, #120]	; 0x78
   34a74:	adc.w	ip, r2, r1
   34a78:	ldr	r2, [sp, #208]	; 0xd0
   34a7a:	adds	r3, r3, r2
   34a7c:	ldr	r2, [sp, #188]	; 0xbc
   34a7e:	adc.w	ip, ip, fp
   34a82:	ldr	r0, [sp, #112]	; 0x70
   34a84:	eor.w	r7, ip, r2
   34a88:	ldr	r2, [sp, #184]	; 0xb8
   34a8a:	eor.w	r1, r3, r2
   34a8e:	ldr	r2, [sp, #108]	; 0x6c
   34a90:	adds	r2, r2, r7
   34a92:	adc.w	r5, r0, r1
   34a96:	ldr	r0, [sp, #208]	; 0xd0
   34a98:	eor.w	lr, r2, r0
   34a9c:	eor.w	r0, r5, fp
   34aa0:	mov.w	r9, lr, lsr #24
   34aa4:	orr.w	r8, r9, r0, lsl #8
   34aa8:	lsrs	r0, r0, #24
   34aaa:	orr.w	r6, r0, lr, lsl #8
   34aae:	ldr	r0, [r4, #104]	; 0x68
   34ab0:	str	r0, [sp, #108]	; 0x6c
   34ab2:	ldr	r0, [r4, #108]	; 0x6c
   34ab4:	str	r0, [sp, #112]	; 0x70
   34ab6:	ldr	r0, [sp, #108]	; 0x6c
   34ab8:	adds	r3, r3, r0
   34aba:	ldr	r0, [sp, #112]	; 0x70
   34abc:	adc.w	ip, ip, r0
   34ac0:	adds.w	r3, r3, r8
   34ac4:	str	r3, [sp, #184]	; 0xb8
   34ac6:	adc.w	r3, ip, r6
   34aca:	str	r3, [sp, #188]	; 0xbc
   34acc:	ldr	r3, [sp, #184]	; 0xb8
   34ace:	eors	r7, r3
   34ad0:	ldr	r3, [sp, #188]	; 0xbc
   34ad2:	eors	r1, r3
   34ad4:	lsrs	r3, r7, #16
   34ad6:	orr.w	r3, r3, r1, lsl #16
   34ada:	lsrs	r1, r1, #16
   34adc:	str	r3, [sp, #208]	; 0xd0
   34ade:	orr.w	r3, r1, r7, lsl #16
   34ae2:	str	r3, [sp, #244]	; 0xf4
   34ae4:	ldr	r3, [sp, #208]	; 0xd0
   34ae6:	adds	r2, r2, r3
   34ae8:	ldr	r3, [sp, #244]	; 0xf4
   34aea:	eor.w	r8, r2, r8
   34aee:	adc.w	r5, r3, r5
   34af2:	eors	r6, r5
   34af4:	lsls	r3, r6, #1
   34af6:	orr.w	r3, r3, r8, lsr #31
   34afa:	mov.w	r8, r8, lsl #1
   34afe:	str	r3, [sp, #252]	; 0xfc
   34b00:	orr.w	r3, r8, r6, lsr #31
   34b04:	str	r3, [sp, #248]	; 0xf8
   34b06:	ldr	r3, [r4, #112]	; 0x70
   34b08:	str	r3, [sp, #116]	; 0x74
   34b0a:	ldr	r3, [r4, #116]	; 0x74
   34b0c:	ldr	r1, [sp, #116]	; 0x74
   34b0e:	str	r3, [sp, #120]	; 0x78
   34b10:	ldr	r3, [sp, #144]	; 0x90
   34b12:	ldr	r0, [sp, #120]	; 0x78
   34b14:	adds	r1, r3, r1
   34b16:	ldr	r3, [sp, #148]	; 0x94
   34b18:	adc.w	r9, r3, r0
   34b1c:	ldr	r3, [sp, #192]	; 0xc0
   34b1e:	adds	r1, r1, r3
   34b20:	ldr	r3, [sp, #196]	; 0xc4
   34b22:	adc.w	r9, r9, r3
   34b26:	ldr	r3, [sp, #204]	; 0xcc
   34b28:	eor.w	r7, r9, r3
   34b2c:	ldr	r3, [sp, #200]	; 0xc8
   34b2e:	ldr	r6, [sp, #192]	; 0xc0
   34b30:	eor.w	sl, r1, r3
   34b34:	ldr	r3, [sp, #124]	; 0x7c
   34b36:	ldr	r0, [sp, #128]	; 0x80
   34b38:	adds	r3, r3, r7
   34b3a:	eor.w	lr, r3, r6
   34b3e:	ldr	r6, [sp, #196]	; 0xc4
   34b40:	adc.w	r0, r0, sl
   34b44:	eors	r6, r0
   34b46:	mov.w	fp, lr, lsr #24
   34b4a:	orr.w	ip, fp, r6, lsl #8
   34b4e:	lsrs	r6, r6, #24
   34b50:	orr.w	r8, r6, lr, lsl #8
   34b54:	ldr	r6, [r4, #120]	; 0x78
   34b56:	ldr	r4, [r4, #124]	; 0x7c
   34b58:	adds	r1, r1, r6
   34b5a:	str	r6, [sp, #124]	; 0x7c
   34b5c:	str	r4, [sp, #128]	; 0x80
   34b5e:	ldr	r4, [sp, #128]	; 0x80
   34b60:	adc.w	r9, r9, r4
   34b64:	adds.w	r1, r1, ip
   34b68:	str	r1, [sp, #144]	; 0x90
   34b6a:	adc.w	r1, r9, r8
   34b6e:	str	r1, [sp, #148]	; 0x94
   34b70:	ldr	r1, [sp, #144]	; 0x90
   34b72:	eors	r7, r1
   34b74:	ldr	r1, [sp, #148]	; 0x94
   34b76:	eor.w	r1, r1, sl
   34b7a:	lsrs	r4, r7, #16
   34b7c:	orr.w	fp, r4, r1, lsl #16
   34b80:	mov.w	sl, r1, lsr #16
   34b84:	adds.w	r3, r3, fp
   34b88:	orr.w	sl, sl, r7, lsl #16
   34b8c:	adc.w	r0, r0, sl
   34b90:	eor.w	ip, r3, ip
   34b94:	eor.w	r8, r0, r8
   34b98:	ldr	r4, [sp, #116]	; 0x74
   34b9a:	ldr	r7, [sp, #120]	; 0x78
   34b9c:	mov.w	r1, r8, lsl #1
   34ba0:	str	r3, [sp, #192]	; 0xc0
   34ba2:	orr.w	r6, r1, ip, lsr #31
   34ba6:	ldr	r1, [sp, #152]	; 0x98
   34ba8:	mov.w	ip, ip, lsl #1
   34bac:	adds	r1, r1, r4
   34bae:	ldr	r4, [sp, #156]	; 0x9c
   34bb0:	orr.w	lr, ip, r8, lsr #31
   34bb4:	adc.w	r9, r4, r7
   34bb8:	adds.w	r1, r1, lr
   34bbc:	ldr	r4, [sp, #232]	; 0xe8
   34bbe:	adc.w	r9, r9, r6
   34bc2:	eor.w	r7, r9, r4
   34bc6:	ldr	r4, [sp, #228]	; 0xe4
   34bc8:	adds	r2, r2, r7
   34bca:	eor.w	r4, r1, r4
   34bce:	eor.w	ip, r2, lr
   34bd2:	adc.w	r5, r4, r5
   34bd6:	eors	r6, r5
   34bd8:	mov.w	r3, ip, lsr #24
   34bdc:	orr.w	lr, r3, r6, lsl #8
   34be0:	ldr	r3, [sp, #84]	; 0x54
   34be2:	lsrs	r6, r6, #24
   34be4:	adds	r1, r3, r1
   34be6:	ldr	r3, [sp, #88]	; 0x58
   34be8:	orr.w	r8, r6, ip, lsl #8
   34bec:	adc.w	r9, r3, r9
   34bf0:	adds.w	r3, r1, lr
   34bf4:	str	r3, [sp, #152]	; 0x98
   34bf6:	adc.w	r3, r9, r8
   34bfa:	str	r3, [sp, #156]	; 0x9c
   34bfc:	ldr	r3, [sp, #152]	; 0x98
   34bfe:	eors	r7, r3
   34c00:	ldr	r3, [sp, #156]	; 0x9c
   34c02:	eors	r4, r3
   34c04:	lsrs	r1, r7, #16
   34c06:	orr.w	r3, r1, r4, lsl #16
   34c0a:	lsrs	r4, r4, #16
   34c0c:	str	r3, [sp, #228]	; 0xe4
   34c0e:	orr.w	r3, r4, r7, lsl #16
   34c12:	str	r3, [sp, #232]	; 0xe8
   34c14:	ldr	r3, [sp, #228]	; 0xe4
   34c16:	adds	r3, r2, r3
   34c18:	str	r3, [sp, #196]	; 0xc4
   34c1a:	ldr	r3, [sp, #232]	; 0xe8
   34c1c:	adc.w	r3, r5, r3
   34c20:	str	r3, [sp, #200]	; 0xc8
   34c22:	ldr	r3, [sp, #196]	; 0xc4
   34c24:	ldr	r1, [sp, #172]	; 0xac
   34c26:	eor.w	lr, r3, lr
   34c2a:	ldr	r3, [sp, #200]	; 0xc8
   34c2c:	ldr	r4, [sp, #220]	; 0xdc
   34c2e:	eor.w	r8, r3, r8
   34c32:	mov.w	r2, r8, lsl #1
   34c36:	orr.w	r3, r2, lr, lsr #31
   34c3a:	mov.w	lr, lr, lsl #1
   34c3e:	ldr	r2, [sp, #168]	; 0xa8
   34c40:	str	r3, [sp, #260]	; 0x104
   34c42:	orr.w	r3, lr, r8, lsr #31
   34c46:	str	r3, [sp, #256]	; 0x100
   34c48:	ldr	r3, [sp, #36]	; 0x24
   34c4a:	adds	r2, r3, r2
   34c4c:	ldr	r3, [sp, #40]	; 0x28
   34c4e:	adc.w	r7, r3, r1
   34c52:	ldr	r3, [sp, #220]	; 0xdc
   34c54:	adds	r2, r2, r3
   34c56:	ldr	r3, [sp, #224]	; 0xe0
   34c58:	adc.w	r7, r3, r7
   34c5c:	ldr	r3, [sp, #244]	; 0xf4
   34c5e:	eor.w	r5, r7, r3
   34c62:	ldr	r3, [sp, #208]	; 0xd0
   34c64:	eor.w	r1, r2, r3
   34c68:	ldr	r3, [sp, #192]	; 0xc0
   34c6a:	adds	r3, r3, r5
   34c6c:	eor.w	r6, r3, r4
   34c70:	ldr	r4, [sp, #224]	; 0xe0
   34c72:	adc.w	r0, r1, r0
   34c76:	eors	r4, r0
   34c78:	mov.w	r8, r6, lsr #24
   34c7c:	orr.w	ip, r8, r4, lsl #8
   34c80:	lsrs	r4, r4, #24
   34c82:	orr.w	lr, r4, r6, lsl #8
   34c86:	ldr	r4, [sp, #68]	; 0x44
   34c88:	adds	r2, r4, r2
   34c8a:	ldr	r4, [sp, #72]	; 0x48
   34c8c:	adc.w	r7, r4, r7
   34c90:	adds.w	r2, r2, ip
   34c94:	str	r2, [sp, #168]	; 0xa8
   34c96:	adc.w	r2, r7, lr
   34c9a:	str	r2, [sp, #172]	; 0xac
   34c9c:	ldr	r2, [sp, #168]	; 0xa8
   34c9e:	eors	r5, r2
   34ca0:	ldr	r2, [sp, #172]	; 0xac
   34ca2:	eors	r1, r2
   34ca4:	lsrs	r2, r5, #16
   34ca6:	orr.w	r2, r2, r1, lsl #16
   34caa:	lsrs	r1, r1, #16
   34cac:	str	r2, [sp, #208]	; 0xd0
   34cae:	orr.w	r2, r1, r5, lsl #16
   34cb2:	str	r2, [sp, #220]	; 0xdc
   34cb4:	ldr	r2, [sp, #208]	; 0xd0
   34cb6:	adds	r3, r3, r2
   34cb8:	str	r3, [sp, #192]	; 0xc0
   34cba:	ldr	r3, [sp, #220]	; 0xdc
   34cbc:	adc.w	r3, r0, r3
   34cc0:	str	r3, [sp, #204]	; 0xcc
   34cc2:	ldr	r2, [sp, #204]	; 0xcc
   34cc4:	ldr	r3, [sp, #192]	; 0xc0
   34cc6:	eor.w	lr, r2, lr
   34cca:	eor.w	r3, r3, ip
   34cce:	mov.w	r2, lr, lsl #1
   34cd2:	orr.w	r2, r2, r3, lsr #31
   34cd6:	mov.w	ip, r3, lsl #1
   34cda:	str	r2, [sp, #224]	; 0xe0
   34cdc:	orr.w	ip, ip, lr, lsr #31
   34ce0:	ldr	r3, [sp, #76]	; 0x4c
   34ce2:	ldr	r2, [sp, #184]	; 0xb8
   34ce4:	adds	r3, r3, r2
   34ce6:	ldr	r2, [sp, #80]	; 0x50
   34ce8:	ldr	r1, [sp, #188]	; 0xbc
   34cea:	adc.w	r8, r2, r1
   34cee:	ldr	r2, [sp, #236]	; 0xec
   34cf0:	ldr	r1, [sp, #164]	; 0xa4
   34cf2:	adds	r3, r3, r2
   34cf4:	ldr	r2, [sp, #240]	; 0xf0
   34cf6:	eor.w	r0, r3, fp
   34cfa:	adc.w	r8, r8, r2
   34cfe:	ldr	r2, [sp, #160]	; 0xa0
   34d00:	eor.w	r6, r8, sl
   34d04:	adds	r2, r2, r6
   34d06:	adc.w	r5, r1, r0
   34d0a:	ldr	r1, [sp, #236]	; 0xec
   34d0c:	eor.w	r7, r2, r1
   34d10:	ldr	r1, [sp, #240]	; 0xf0
   34d12:	eor.w	r4, r5, r1
   34d16:	mov.w	r9, r7, lsr #24
   34d1a:	orr.w	r1, r9, r4, lsl #8
   34d1e:	lsrs	r4, r4, #24
   34d20:	orr.w	lr, r4, r7, lsl #8
   34d24:	ldr	r4, [sp, #124]	; 0x7c
   34d26:	adds	r3, r4, r3
   34d28:	ldr	r4, [sp, #128]	; 0x80
   34d2a:	adc.w	r8, r4, r8
   34d2e:	adds	r3, r3, r1
   34d30:	str	r3, [sp, #160]	; 0xa0
   34d32:	adc.w	r3, r8, lr
   34d36:	str	r3, [sp, #164]	; 0xa4
   34d38:	ldr	r3, [sp, #160]	; 0xa0
   34d3a:	ldr	r4, [sp, #248]	; 0xf8
   34d3c:	eors	r6, r3
   34d3e:	ldr	r3, [sp, #164]	; 0xa4
   34d40:	eors	r0, r3
   34d42:	lsrs	r3, r6, #16
   34d44:	orr.w	r3, r3, r0, lsl #16
   34d48:	lsrs	r0, r0, #16
   34d4a:	str	r3, [sp, #236]	; 0xec
   34d4c:	orr.w	r3, r0, r6, lsl #16
   34d50:	str	r3, [sp, #240]	; 0xf0
   34d52:	ldr	r3, [sp, #236]	; 0xec
   34d54:	ldr	r0, [sp, #148]	; 0x94
   34d56:	adds	r2, r2, r3
   34d58:	ldr	r3, [sp, #240]	; 0xf0
   34d5a:	eor.w	r1, r1, r2
   34d5e:	adc.w	r5, r3, r5
   34d62:	eor.w	lr, r5, lr
   34d66:	mov.w	r3, lr, lsl #1
   34d6a:	orr.w	r3, r3, r1, lsr #31
   34d6e:	lsls	r1, r1, #1
   34d70:	str	r3, [sp, #188]	; 0xbc
   34d72:	orr.w	r3, r1, lr, lsr #31
   34d76:	ldr	r1, [sp, #144]	; 0x90
   34d78:	str	r3, [sp, #184]	; 0xb8
   34d7a:	ldr	r3, [sp, #108]	; 0x6c
   34d7c:	adds	r1, r3, r1
   34d7e:	ldr	r3, [sp, #112]	; 0x70
   34d80:	adc.w	sl, r3, r0
   34d84:	ldr	r3, [sp, #248]	; 0xf8
   34d86:	ldr	r0, [sp, #180]	; 0xb4
   34d88:	adds	r1, r1, r3
   34d8a:	ldr	r3, [sp, #252]	; 0xfc
   34d8c:	adc.w	sl, sl, r3
   34d90:	ldr	r3, [sp, #216]	; 0xd8
   34d92:	eor.w	lr, sl, r3
   34d96:	ldr	r3, [sp, #212]	; 0xd4
   34d98:	eor.w	r6, r1, r3
   34d9c:	ldr	r3, [sp, #176]	; 0xb0
   34d9e:	adds.w	r3, r3, lr
   34da2:	eor.w	r8, r3, r4
   34da6:	ldr	r4, [sp, #252]	; 0xfc
   34da8:	adcs	r0, r6
   34daa:	eor.w	r7, r0, r4
   34dae:	mov.w	fp, r8, lsr #24
   34db2:	orr.w	r4, fp, r7, lsl #8
   34db6:	lsrs	r7, r7, #24
   34db8:	orr.w	r9, r7, r8, lsl #8
   34dbc:	ldr	r7, [sp, #52]	; 0x34
   34dbe:	adds	r1, r7, r1
   34dc0:	ldr	r7, [sp, #56]	; 0x38
   34dc2:	adc.w	sl, r7, sl
   34dc6:	adds	r1, r1, r4
   34dc8:	str	r1, [sp, #144]	; 0x90
   34dca:	adc.w	r1, sl, r9
   34dce:	str	r1, [sp, #148]	; 0x94
   34dd0:	ldr	r1, [sp, #144]	; 0x90
   34dd2:	eor.w	lr, r1, lr
   34dd6:	ldr	r1, [sp, #148]	; 0x94
   34dd8:	eors	r6, r1
   34dda:	mov.w	r1, lr, lsr #16
   34dde:	orr.w	r8, r1, r6, lsl #16
   34de2:	lsrs	r6, r6, #16
   34de4:	adds.w	r3, r3, r8
   34de8:	orr.w	sl, r6, lr, lsl #16
   34dec:	adc.w	r0, r0, sl
   34df0:	eors	r4, r3
   34df2:	eor.w	r9, r0, r9
   34df6:	ldr	r6, [sp, #156]	; 0x9c
   34df8:	mov.w	r1, r9, lsl #1
   34dfc:	orr.w	r1, r1, r4, lsr #31
   34e00:	lsls	r4, r4, #1
   34e02:	orr.w	fp, r4, r9, lsr #31
   34e06:	str	r1, [sp, #212]	; 0xd4
   34e08:	ldr	r4, [sp, #152]	; 0x98
   34e0a:	ldr	r1, [sp, #12]
   34e0c:	adds	r1, r1, r4
   34e0e:	ldr	r4, [sp, #16]
   34e10:	adc.w	r9, r4, r6
   34e14:	ldr	r4, [sp, #224]	; 0xe0
   34e16:	adds.w	r1, r1, ip
   34e1a:	adc.w	r9, r9, r4
   34e1e:	eor.w	r7, r1, r8
   34e22:	eor.w	lr, r9, sl
   34e26:	adds.w	r2, r2, lr
   34e2a:	adc.w	r5, r7, r5
   34e2e:	eor.w	ip, r2, ip
   34e32:	eor.w	r6, r5, r4
   34e36:	mov.w	sl, ip, lsr #24
   34e3a:	orr.w	r4, sl, r6, lsl #8
   34e3e:	lsrs	r6, r6, #24
   34e40:	orr.w	r8, r6, ip, lsl #8
   34e44:	ldr	r6, [sp, #100]	; 0x64
   34e46:	adds	r1, r6, r1
   34e48:	ldr	r6, [sp, #104]	; 0x68
   34e4a:	adc.w	r9, r6, r9
   34e4e:	adds	r1, r1, r4
   34e50:	str	r1, [sp, #152]	; 0x98
   34e52:	adc.w	r1, r9, r8
   34e56:	str	r1, [sp, #156]	; 0x9c
   34e58:	ldr	r1, [sp, #152]	; 0x98
   34e5a:	eor.w	lr, r1, lr
   34e5e:	ldr	r1, [sp, #156]	; 0x9c
   34e60:	eors	r7, r1
   34e62:	mov.w	r1, lr, lsr #16
   34e66:	orr.w	r1, r1, r7, lsl #16
   34e6a:	lsrs	r7, r7, #16
   34e6c:	str	r1, [sp, #216]	; 0xd8
   34e6e:	orr.w	r1, r7, lr, lsl #16
   34e72:	str	r1, [sp, #224]	; 0xe0
   34e74:	ldr	r1, [sp, #216]	; 0xd8
   34e76:	adds	r2, r2, r1
   34e78:	str	r2, [sp, #176]	; 0xb0
   34e7a:	ldr	r2, [sp, #224]	; 0xe0
   34e7c:	ldr	r1, [sp, #168]	; 0xa8
   34e7e:	adc.w	r2, r5, r2
   34e82:	str	r2, [sp, #180]	; 0xb4
   34e84:	ldr	r2, [sp, #176]	; 0xb0
   34e86:	eors	r4, r2
   34e88:	ldr	r2, [sp, #180]	; 0xb4
   34e8a:	eor.w	r8, r2, r8
   34e8e:	mov.w	r2, r8, lsl #1
   34e92:	orr.w	r2, r2, r4, lsr #31
   34e96:	lsls	r4, r4, #1
   34e98:	str	r2, [sp, #248]	; 0xf8
   34e9a:	orr.w	r2, r4, r8, lsr #31
   34e9e:	str	r2, [sp, #244]	; 0xf4
   34ea0:	ldr	r2, [sp, #4]
   34ea2:	ldr	r4, [sp, #172]	; 0xac
   34ea4:	adds	r2, r2, r1
   34ea6:	ldr	r1, [sp, #8]
   34ea8:	adc.w	r7, r1, r4
   34eac:	ldr	r1, [sp, #184]	; 0xb8
   34eae:	adds	r2, r2, r1
   34eb0:	ldr	r1, [sp, #188]	; 0xbc
   34eb2:	adc.w	r7, r1, r7
   34eb6:	ldr	r1, [sp, #232]	; 0xe8
   34eb8:	eor.w	r4, r7, r1
   34ebc:	ldr	r1, [sp, #228]	; 0xe4
   34ebe:	adds	r3, r3, r4
   34ec0:	eor.w	r9, r2, r1
   34ec4:	ldr	r1, [sp, #184]	; 0xb8
   34ec6:	adc.w	r0, r0, r9
   34eca:	eor.w	ip, r3, r1
   34ece:	ldr	r1, [sp, #188]	; 0xbc
   34ed0:	eor.w	r5, r0, r1
   34ed4:	mov.w	lr, ip, lsr #24
   34ed8:	orr.w	r1, lr, r5, lsl #8
   34edc:	lsrs	r5, r5, #24
   34ede:	orr.w	r6, r5, ip, lsl #8
   34ee2:	ldr	r5, [sp, #20]
   34ee4:	adds	r2, r5, r2
   34ee6:	ldr	r5, [sp, #24]
   34ee8:	adc.w	r7, r5, r7
   34eec:	adds	r2, r2, r1
   34eee:	str	r2, [sp, #168]	; 0xa8
   34ef0:	adc.w	r2, r7, r6
   34ef4:	str	r2, [sp, #172]	; 0xac
   34ef6:	ldr	r2, [sp, #168]	; 0xa8
   34ef8:	eors	r4, r2
   34efa:	ldr	r2, [sp, #172]	; 0xac
   34efc:	eor.w	r2, r2, r9
   34f00:	lsrs	r5, r4, #16
   34f02:	orr.w	r5, r5, r2, lsl #16
   34f06:	mov.w	r9, r2, lsr #16
   34f0a:	orr.w	r9, r9, r4, lsl #16
   34f0e:	adds	r3, r3, r5
   34f10:	str	r3, [sp, #184]	; 0xb8
   34f12:	adc.w	r3, r0, r9
   34f16:	str	r3, [sp, #188]	; 0xbc
   34f18:	ldr	r3, [sp, #184]	; 0xb8
   34f1a:	ldr	r2, [sp, #160]	; 0xa0
   34f1c:	eors	r1, r3
   34f1e:	ldr	r3, [sp, #188]	; 0xbc
   34f20:	ldr	r0, [sp, #200]	; 0xc8
   34f22:	eors	r6, r3
   34f24:	str	r5, [sp, #228]	; 0xe4
   34f26:	lsls	r3, r6, #1
   34f28:	orr.w	r3, r3, r1, lsr #31
   34f2c:	lsls	r1, r1, #1
   34f2e:	str	r3, [sp, #252]	; 0xfc
   34f30:	orr.w	r3, r1, r6, lsr #31
   34f34:	str	r3, [sp, #232]	; 0xe8
   34f36:	ldr	r3, [sp, #92]	; 0x5c
   34f38:	ldr	r1, [sp, #164]	; 0xa4
   34f3a:	adds	r3, r3, r2
   34f3c:	ldr	r2, [sp, #96]	; 0x60
   34f3e:	adc.w	ip, r2, r1
   34f42:	ldr	r2, [sp, #212]	; 0xd4
   34f44:	adds.w	r3, r3, fp
   34f48:	adc.w	ip, ip, r2
   34f4c:	ldr	r2, [sp, #220]	; 0xdc
   34f4e:	eor.w	r7, ip, r2
   34f52:	ldr	r2, [sp, #208]	; 0xd0
   34f54:	eor.w	r1, r3, r2
   34f58:	ldr	r2, [sp, #196]	; 0xc4
   34f5a:	adds	r2, r2, r7
   34f5c:	adc.w	r5, r0, r1
   34f60:	ldr	r0, [sp, #212]	; 0xd4
   34f62:	eor.w	fp, r2, fp
   34f66:	eors	r0, r5
   34f68:	mov.w	r4, fp, lsr #24
   34f6c:	orr.w	r8, r4, r0, lsl #8
   34f70:	lsrs	r0, r0, #24
   34f72:	orr.w	r6, r0, fp, lsl #8
   34f76:	ldr	r0, [sp, #60]	; 0x3c
   34f78:	adds	r3, r0, r3
   34f7a:	ldr	r0, [sp, #64]	; 0x40
   34f7c:	adc.w	ip, r0, ip
   34f80:	adds.w	r3, r3, r8
   34f84:	str	r3, [sp, #160]	; 0xa0
   34f86:	adc.w	r3, ip, r6
   34f8a:	str	r3, [sp, #164]	; 0xa4
   34f8c:	ldr	r3, [sp, #160]	; 0xa0
   34f8e:	ldr	r0, [sp, #148]	; 0x94
   34f90:	eors	r7, r3
   34f92:	ldr	r3, [sp, #164]	; 0xa4
   34f94:	ldr	r4, [sp, #256]	; 0x100
   34f96:	eors	r1, r3
   34f98:	lsrs	r3, r7, #16
   34f9a:	orr.w	r3, r3, r1, lsl #16
   34f9e:	lsrs	r1, r1, #16
   34fa0:	str	r3, [sp, #200]	; 0xc8
   34fa2:	orr.w	r3, r1, r7, lsl #16
   34fa6:	str	r3, [sp, #208]	; 0xd0
   34fa8:	ldr	r3, [sp, #200]	; 0xc8
   34faa:	ldr	r1, [sp, #144]	; 0x90
   34fac:	adds	r2, r2, r3
   34fae:	ldr	r3, [sp, #208]	; 0xd0
   34fb0:	eor.w	r8, r2, r8
   34fb4:	adc.w	r5, r3, r5
   34fb8:	eors	r6, r5
   34fba:	lsls	r3, r6, #1
   34fbc:	orr.w	r3, r3, r8, lsr #31
   34fc0:	mov.w	r8, r8, lsl #1
   34fc4:	str	r3, [sp, #220]	; 0xdc
   34fc6:	orr.w	r3, r8, r6, lsr #31
   34fca:	str	r3, [sp, #212]	; 0xd4
   34fcc:	ldr	r3, [sp, #44]	; 0x2c
   34fce:	adds	r1, r3, r1
   34fd0:	ldr	r3, [sp, #48]	; 0x30
   34fd2:	adc.w	sl, r3, r0
   34fd6:	ldr	r3, [sp, #256]	; 0x100
   34fd8:	ldr	r0, [sp, #204]	; 0xcc
   34fda:	adds	r1, r1, r3
   34fdc:	ldr	r3, [sp, #260]	; 0x104
   34fde:	adc.w	sl, sl, r3
   34fe2:	ldr	r3, [sp, #240]	; 0xf0
   34fe4:	eor.w	ip, sl, r3
   34fe8:	ldr	r3, [sp, #236]	; 0xec
   34fea:	eor.w	r6, r1, r3
   34fee:	ldr	r3, [sp, #192]	; 0xc0
   34ff0:	adds.w	r3, r3, ip
   34ff4:	eor.w	lr, r3, r4
   34ff8:	ldr	r4, [sp, #260]	; 0x104
   34ffa:	adcs	r0, r6
   34ffc:	eor.w	r7, r0, r4
   35000:	mov.w	fp, lr, lsr #24
   35004:	orr.w	r4, fp, r7, lsl #8
   35008:	lsrs	r7, r7, #24
   3500a:	orr.w	r8, r7, lr, lsl #8
   3500e:	ldr	r7, [sp, #28]
   35010:	adds	r1, r7, r1
   35012:	ldr	r7, [sp, #32]
   35014:	adc.w	sl, r7, sl
   35018:	adds	r1, r1, r4
   3501a:	str	r1, [sp, #144]	; 0x90
   3501c:	adc.w	r1, sl, r8
   35020:	str	r1, [sp, #148]	; 0x94
   35022:	ldr	r1, [sp, #144]	; 0x90
   35024:	ldr	r7, [sp, #156]	; 0x9c
   35026:	eor.w	ip, r1, ip
   3502a:	ldr	r1, [sp, #148]	; 0x94
   3502c:	eors	r6, r1
   3502e:	mov.w	r1, ip, lsr #16
   35032:	orr.w	r1, r1, r6, lsl #16
   35036:	lsrs	r6, r6, #16
   35038:	orr.w	fp, r6, ip, lsl #16
   3503c:	adds	r3, r3, r1
   3503e:	adc.w	r0, r0, fp
   35042:	eors	r4, r3
   35044:	eor.w	r8, r0, r8
   35048:	str	r1, [sp, #236]	; 0xec
   3504a:	mov.w	r1, r8, lsl #1
   3504e:	orr.w	r6, r1, r4, lsr #31
   35052:	lsls	r4, r4, #1
   35054:	orr.w	ip, r4, r8, lsr #31
   35058:	ldr	r1, [sp, #92]	; 0x5c
   3505a:	ldr	r4, [sp, #152]	; 0x98
   3505c:	adds	r1, r1, r4
   3505e:	ldr	r4, [sp, #96]	; 0x60
   35060:	adc.w	sl, r4, r7
   35064:	adds.w	r1, r1, ip
   35068:	adc.w	sl, sl, r6
   3506c:	ldr	r4, [sp, #228]	; 0xe4
   3506e:	eor.w	lr, sl, r9
   35072:	adds.w	r2, r2, lr
   35076:	eor.w	r7, r1, r4
   3507a:	adc.w	r5, r7, r5
   3507e:	eor.w	r4, r2, ip
   35082:	eor.w	ip, r5, r6
   35086:	mov.w	r9, r4, lsr #24
   3508a:	orr.w	r6, r9, ip, lsl #8
   3508e:	mov.w	ip, ip, lsr #24
   35092:	orr.w	r8, ip, r4, lsl #8
   35096:	ldr	r4, [sp, #68]	; 0x44
   35098:	adds	r1, r4, r1
   3509a:	ldr	r4, [sp, #72]	; 0x48
   3509c:	adc.w	sl, r4, sl
   350a0:	adds	r1, r1, r6
   350a2:	str	r1, [sp, #152]	; 0x98
   350a4:	adc.w	r1, sl, r8
   350a8:	str	r1, [sp, #156]	; 0x9c
   350aa:	ldr	r1, [sp, #152]	; 0x98
   350ac:	ldr	r4, [sp, #172]	; 0xac
   350ae:	eor.w	lr, r1, lr
   350b2:	ldr	r1, [sp, #156]	; 0x9c
   350b4:	eors	r7, r1
   350b6:	mov.w	r1, lr, lsr #16
   350ba:	orr.w	r1, r1, r7, lsl #16
   350be:	lsrs	r7, r7, #16
   350c0:	str	r1, [sp, #228]	; 0xe4
   350c2:	orr.w	r1, r7, lr, lsl #16
   350c6:	str	r1, [sp, #240]	; 0xf0
   350c8:	ldr	r1, [sp, #228]	; 0xe4
   350ca:	adds	r2, r2, r1
   350cc:	str	r2, [sp, #192]	; 0xc0
   350ce:	ldr	r2, [sp, #240]	; 0xf0
   350d0:	ldr	r1, [sp, #168]	; 0xa8
   350d2:	adc.w	r2, r5, r2
   350d6:	str	r2, [sp, #196]	; 0xc4
   350d8:	ldr	r2, [sp, #192]	; 0xc0
   350da:	ldr	r5, [sp, #248]	; 0xf8
   350dc:	eors	r6, r2
   350de:	ldr	r2, [sp, #196]	; 0xc4
   350e0:	eor.w	r8, r2, r8
   350e4:	mov.w	r2, r8, lsl #1
   350e8:	orr.w	r2, r2, r6, lsr #31
   350ec:	lsls	r6, r6, #1
   350ee:	str	r2, [sp, #260]	; 0x104
   350f0:	orr.w	r2, r6, r8, lsr #31
   350f4:	str	r2, [sp, #256]	; 0x100
   350f6:	ldr	r2, [sp, #100]	; 0x64
   350f8:	adds	r2, r2, r1
   350fa:	ldr	r1, [sp, #104]	; 0x68
   350fc:	adc.w	r7, r1, r4
   35100:	ldr	r1, [sp, #244]	; 0xf4
   35102:	ldr	r4, [sp, #244]	; 0xf4
   35104:	adds	r2, r2, r1
   35106:	ldr	r1, [sp, #248]	; 0xf8
   35108:	adc.w	r7, r1, r7
   3510c:	ldr	r1, [sp, #208]	; 0xd0
   3510e:	eor.w	r6, r7, r1
   35112:	ldr	r1, [sp, #200]	; 0xc8
   35114:	adds	r3, r3, r6
   35116:	eor.w	r1, r2, r1
   3511a:	eor.w	r4, r3, r4
   3511e:	adc.w	r0, r1, r0
   35122:	eors	r5, r0
   35124:	mov.w	r8, r4, lsr #24
   35128:	orr.w	ip, r8, r5, lsl #8
   3512c:	lsrs	r5, r5, #24
   3512e:	orr.w	lr, r5, r4, lsl #8
   35132:	ldr	r4, [sp, #4]
   35134:	adds	r2, r4, r2
   35136:	ldr	r4, [sp, #8]
   35138:	adc.w	r7, r4, r7
   3513c:	adds.w	r2, r2, ip
   35140:	str	r2, [sp, #168]	; 0xa8
   35142:	adc.w	r2, r7, lr
   35146:	str	r2, [sp, #172]	; 0xac
   35148:	ldr	r2, [sp, #168]	; 0xa8
   3514a:	eors	r6, r2
   3514c:	ldr	r2, [sp, #172]	; 0xac
   3514e:	eors	r1, r2
   35150:	lsrs	r2, r6, #16
   35152:	orr.w	r2, r2, r1, lsl #16
   35156:	lsrs	r1, r1, #16
   35158:	str	r2, [sp, #208]	; 0xd0
   3515a:	orr.w	r2, r1, r6, lsl #16
   3515e:	str	r2, [sp, #244]	; 0xf4
   35160:	ldr	r2, [sp, #208]	; 0xd0
   35162:	ldr	r1, [sp, #164]	; 0xa4
   35164:	adds	r3, r3, r2
   35166:	str	r3, [sp, #200]	; 0xc8
   35168:	ldr	r3, [sp, #244]	; 0xf4
   3516a:	adc.w	r3, r0, r3
   3516e:	str	r3, [sp, #204]	; 0xcc
   35170:	ldr	r2, [sp, #204]	; 0xcc
   35172:	ldr	r3, [sp, #200]	; 0xc8
   35174:	eor.w	lr, r2, lr
   35178:	eor.w	r3, r3, ip
   3517c:	mov.w	r2, lr, lsl #1
   35180:	orr.w	r2, r2, r3, lsr #31
   35184:	mov.w	ip, r3, lsl #1
   35188:	str	r2, [sp, #248]	; 0xf8
   3518a:	orr.w	ip, ip, lr, lsr #31
   3518e:	ldr	r2, [sp, #160]	; 0xa0
   35190:	ldr	r3, [sp, #44]	; 0x2c
   35192:	adds	r3, r3, r2
   35194:	ldr	r2, [sp, #48]	; 0x30
   35196:	adc.w	lr, r2, r1
   3519a:	ldr	r2, [sp, #232]	; 0xe8
   3519c:	ldr	r1, [sp, #180]	; 0xb4
   3519e:	adds	r3, r3, r2
   351a0:	ldr	r2, [sp, #252]	; 0xfc
   351a2:	adc.w	lr, lr, r2
   351a6:	ldr	r2, [sp, #236]	; 0xec
   351a8:	eor.w	r6, lr, fp
   351ac:	eor.w	r0, r3, r2
   351b0:	ldr	r2, [sp, #176]	; 0xb0
   351b2:	adds	r2, r2, r6
   351b4:	adc.w	r5, r1, r0
   351b8:	ldr	r1, [sp, #232]	; 0xe8
   351ba:	eor.w	r8, r2, r1
   351be:	ldr	r1, [sp, #252]	; 0xfc
   351c0:	eor.w	r4, r5, r1
   351c4:	mov.w	r9, r8, lsr #24
   351c8:	orr.w	r1, r9, r4, lsl #8
   351cc:	lsrs	r4, r4, #24
   351ce:	orr.w	r7, r4, r8, lsl #8
   351d2:	ldr	r4, [sp, #20]
   351d4:	adds	r3, r4, r3
   351d6:	ldr	r4, [sp, #24]
   351d8:	adc.w	lr, r4, lr
   351dc:	adds	r3, r3, r1
   351de:	str	r3, [sp, #160]	; 0xa0
   351e0:	adc.w	r3, lr, r7
   351e4:	str	r3, [sp, #164]	; 0xa4
   351e6:	ldr	r3, [sp, #160]	; 0xa0
   351e8:	eors	r6, r3
   351ea:	ldr	r3, [sp, #164]	; 0xa4
   351ec:	eors	r0, r3
   351ee:	lsrs	r3, r6, #16
   351f0:	orr.w	r3, r3, r0, lsl #16
   351f4:	lsrs	r0, r0, #16
   351f6:	str	r3, [sp, #232]	; 0xe8
   351f8:	orr.w	r3, r0, r6, lsl #16
   351fc:	str	r3, [sp, #236]	; 0xec
   351fe:	ldr	r3, [sp, #232]	; 0xe8
   35200:	adds	r2, r2, r3
   35202:	ldr	r3, [sp, #236]	; 0xec
   35204:	eor.w	r1, r1, r2
   35208:	adc.w	r5, r3, r5
   3520c:	eors	r7, r5
   3520e:	lsls	r3, r7, #1
   35210:	orr.w	r3, r3, r1, lsr #31
   35214:	lsls	r1, r1, #1
   35216:	str	r3, [sp, #264]	; 0x108
   35218:	orr.w	r3, r1, r7, lsr #31
   3521c:	str	r3, [sp, #252]	; 0xfc
   3521e:	ldr	r3, [sp, #124]	; 0x7c
   35220:	ldr	r1, [sp, #144]	; 0x90
   35222:	ldr	r0, [sp, #148]	; 0x94
   35224:	adds	r1, r3, r1
   35226:	ldr	r3, [sp, #128]	; 0x80
   35228:	ldr	r4, [sp, #212]	; 0xd4
   3522a:	adc.w	sl, r3, r0
   3522e:	ldr	r3, [sp, #212]	; 0xd4
   35230:	ldr	r0, [sp, #188]	; 0xbc
   35232:	adds	r1, r1, r3
   35234:	ldr	r3, [sp, #220]	; 0xdc
   35236:	adc.w	sl, sl, r3
   3523a:	ldr	r3, [sp, #224]	; 0xe0
   3523c:	eor.w	lr, sl, r3
   35240:	ldr	r3, [sp, #216]	; 0xd8
   35242:	eor.w	r6, r1, r3
   35246:	ldr	r3, [sp, #184]	; 0xb8
   35248:	adds.w	r3, r3, lr
   3524c:	eor.w	r8, r3, r4
   35250:	ldr	r4, [sp, #220]	; 0xdc
   35252:	adcs	r0, r6
   35254:	eor.w	r7, r0, r4
   35258:	mov.w	fp, r8, lsr #24
   3525c:	orr.w	r4, fp, r7, lsl #8
   35260:	lsrs	r7, r7, #24
   35262:	orr.w	r9, r7, r8, lsl #8
   35266:	ldr	r7, [sp, #108]	; 0x6c
   35268:	adds	r1, r7, r1
   3526a:	ldr	r7, [sp, #112]	; 0x70
   3526c:	adc.w	sl, r7, sl
   35270:	adds	r1, r1, r4
   35272:	str	r1, [sp, #144]	; 0x90
   35274:	adc.w	r1, sl, r9
   35278:	str	r1, [sp, #148]	; 0x94
   3527a:	ldr	r1, [sp, #144]	; 0x90
   3527c:	eor.w	lr, r1, lr
   35280:	ldr	r1, [sp, #148]	; 0x94
   35282:	eors	r6, r1
   35284:	mov.w	r1, lr, lsr #16
   35288:	orr.w	r8, r1, r6, lsl #16
   3528c:	lsrs	r6, r6, #16
   3528e:	adds.w	r3, r3, r8
   35292:	orr.w	sl, r6, lr, lsl #16
   35296:	adc.w	r0, r0, sl
   3529a:	eors	r4, r3
   3529c:	eor.w	r9, r0, r9
   352a0:	ldr	r6, [sp, #156]	; 0x9c
   352a2:	mov.w	r1, r9, lsl #1
   352a6:	orr.w	r1, r1, r4, lsr #31
   352aa:	lsls	r4, r4, #1
   352ac:	orr.w	fp, r4, r9, lsr #31
   352b0:	str	r1, [sp, #212]	; 0xd4
   352b2:	ldr	r4, [sp, #152]	; 0x98
   352b4:	ldr	r1, [sp, #84]	; 0x54
   352b6:	adds	r1, r1, r4
   352b8:	ldr	r4, [sp, #88]	; 0x58
   352ba:	adc.w	r9, r4, r6
   352be:	ldr	r4, [sp, #248]	; 0xf8
   352c0:	adds.w	r1, r1, ip
   352c4:	adc.w	r9, r9, r4
   352c8:	eor.w	r7, r1, r8
   352cc:	eor.w	lr, r9, sl
   352d0:	adds.w	r2, r2, lr
   352d4:	adc.w	r5, r7, r5
   352d8:	eor.w	ip, r2, ip
   352dc:	eor.w	r6, r5, r4
   352e0:	mov.w	sl, ip, lsr #24
   352e4:	orr.w	r4, sl, r6, lsl #8
   352e8:	lsrs	r6, r6, #24
   352ea:	orr.w	r8, r6, ip, lsl #8
   352ee:	ldr	r6, [sp, #116]	; 0x74
   352f0:	adds	r1, r6, r1
   352f2:	ldr	r6, [sp, #120]	; 0x78
   352f4:	adc.w	r9, r6, r9
   352f8:	adds	r1, r1, r4
   352fa:	str	r1, [sp, #152]	; 0x98
   352fc:	adc.w	r1, r9, r8
   35300:	str	r1, [sp, #156]	; 0x9c
   35302:	ldr	r1, [sp, #152]	; 0x98
   35304:	eor.w	lr, r1, lr
   35308:	ldr	r1, [sp, #156]	; 0x9c
   3530a:	eors	r7, r1
   3530c:	mov.w	r1, lr, lsr #16
   35310:	orr.w	r1, r1, r7, lsl #16
   35314:	lsrs	r7, r7, #16
   35316:	str	r1, [sp, #216]	; 0xd8
   35318:	orr.w	r1, r7, lr, lsl #16
   3531c:	str	r1, [sp, #220]	; 0xdc
   3531e:	ldr	r1, [sp, #216]	; 0xd8
   35320:	adds	r2, r2, r1
   35322:	str	r2, [sp, #176]	; 0xb0
   35324:	ldr	r2, [sp, #220]	; 0xdc
   35326:	ldr	r1, [sp, #168]	; 0xa8
   35328:	adc.w	r2, r5, r2
   3532c:	str	r2, [sp, #180]	; 0xb4
   3532e:	ldr	r2, [sp, #176]	; 0xb0
   35330:	eors	r4, r2
   35332:	ldr	r2, [sp, #180]	; 0xb4
   35334:	eor.w	r8, r2, r8
   35338:	mov.w	r2, r8, lsl #1
   3533c:	orr.w	r2, r2, r4, lsr #31
   35340:	lsls	r4, r4, #1
   35342:	str	r2, [sp, #248]	; 0xf8
   35344:	orr.w	r2, r4, r8, lsr #31
   35348:	str	r2, [sp, #224]	; 0xe0
   3534a:	ldr	r2, [sp, #28]
   3534c:	ldr	r4, [sp, #172]	; 0xac
   3534e:	adds	r2, r2, r1
   35350:	ldr	r1, [sp, #32]
   35352:	adc.w	r7, r1, r4
   35356:	ldr	r1, [sp, #252]	; 0xfc
   35358:	adds	r2, r2, r1
   3535a:	ldr	r1, [sp, #264]	; 0x108
   3535c:	adc.w	r7, r1, r7
   35360:	ldr	r1, [sp, #240]	; 0xf0
   35362:	eor.w	r4, r7, r1
   35366:	ldr	r1, [sp, #228]	; 0xe4
   35368:	adds	r3, r3, r4
   3536a:	eor.w	r9, r2, r1
   3536e:	ldr	r1, [sp, #252]	; 0xfc
   35370:	adc.w	r0, r0, r9
   35374:	eor.w	ip, r3, r1
   35378:	ldr	r1, [sp, #264]	; 0x108
   3537a:	eor.w	r5, r0, r1
   3537e:	mov.w	lr, ip, lsr #24
   35382:	orr.w	r1, lr, r5, lsl #8
   35386:	lsrs	r5, r5, #24
   35388:	orr.w	r6, r5, ip, lsl #8
   3538c:	ldr	r5, [sp, #52]	; 0x34
   3538e:	adds	r2, r5, r2
   35390:	ldr	r5, [sp, #56]	; 0x38
   35392:	adc.w	r7, r5, r7
   35396:	adds	r2, r2, r1
   35398:	str	r2, [sp, #168]	; 0xa8
   3539a:	adc.w	r2, r7, r6
   3539e:	str	r2, [sp, #172]	; 0xac
   353a0:	ldr	r2, [sp, #168]	; 0xa8
   353a2:	eors	r4, r2
   353a4:	ldr	r2, [sp, #172]	; 0xac
   353a6:	eor.w	r2, r2, r9
   353aa:	lsrs	r5, r4, #16
   353ac:	orr.w	r5, r5, r2, lsl #16
   353b0:	mov.w	r9, r2, lsr #16
   353b4:	orr.w	r9, r9, r4, lsl #16
   353b8:	adds	r3, r3, r5
   353ba:	str	r3, [sp, #184]	; 0xb8
   353bc:	adc.w	r3, r0, r9
   353c0:	str	r3, [sp, #188]	; 0xbc
   353c2:	ldr	r3, [sp, #184]	; 0xb8
   353c4:	ldr	r2, [sp, #160]	; 0xa0
   353c6:	eors	r1, r3
   353c8:	ldr	r3, [sp, #188]	; 0xbc
   353ca:	str	r5, [sp, #228]	; 0xe4
   353cc:	eors	r6, r3
   353ce:	lsls	r3, r6, #1
   353d0:	orr.w	r3, r3, r1, lsr #31
   353d4:	lsls	r1, r1, #1
   353d6:	str	r3, [sp, #252]	; 0xfc
   353d8:	orr.w	r3, r1, r6, lsr #31
   353dc:	str	r3, [sp, #240]	; 0xf0
   353de:	ldr	r3, [sp, #60]	; 0x3c
   353e0:	adds	r3, r3, r2
   353e2:	ldr	r2, [sp, #64]	; 0x40
   353e4:	ldr	r1, [sp, #164]	; 0xa4
   353e6:	ldr	r0, [sp, #196]	; 0xc4
   353e8:	adc.w	ip, r2, r1
   353ec:	ldr	r2, [sp, #212]	; 0xd4
   353ee:	adds.w	r3, r3, fp
   353f2:	adc.w	ip, ip, r2
   353f6:	ldr	r2, [sp, #244]	; 0xf4
   353f8:	eor.w	r7, ip, r2
   353fc:	ldr	r2, [sp, #208]	; 0xd0
   353fe:	eor.w	r1, r3, r2
   35402:	ldr	r2, [sp, #192]	; 0xc0
   35404:	adds	r2, r2, r7
   35406:	adc.w	r5, r0, r1
   3540a:	ldr	r0, [sp, #212]	; 0xd4
   3540c:	eor.w	fp, r2, fp
   35410:	eors	r0, r5
   35412:	mov.w	r4, fp, lsr #24
   35416:	orr.w	r8, r4, r0, lsl #8
   3541a:	lsrs	r0, r0, #24
   3541c:	orr.w	r6, r0, fp, lsl #8
   35420:	ldr	r0, [sp, #12]
   35422:	ldr	r4, [sp, #256]	; 0x100
   35424:	adds	r3, r0, r3
   35426:	ldr	r0, [sp, #16]
   35428:	adc.w	ip, r0, ip
   3542c:	adds.w	r3, r3, r8
   35430:	str	r3, [sp, #160]	; 0xa0
   35432:	adc.w	r3, ip, r6
   35436:	str	r3, [sp, #164]	; 0xa4
   35438:	ldr	r3, [sp, #160]	; 0xa0
   3543a:	ldr	r0, [sp, #148]	; 0x94
   3543c:	eors	r7, r3
   3543e:	ldr	r3, [sp, #164]	; 0xa4
   35440:	eors	r1, r3
   35442:	lsrs	r3, r7, #16
   35444:	orr.w	r3, r3, r1, lsl #16
   35448:	lsrs	r1, r1, #16
   3544a:	str	r3, [sp, #208]	; 0xd0
   3544c:	orr.w	r3, r1, r7, lsl #16
   35450:	str	r3, [sp, #212]	; 0xd4
   35452:	ldr	r3, [sp, #208]	; 0xd0
   35454:	ldr	r1, [sp, #144]	; 0x90
   35456:	adds	r2, r2, r3
   35458:	ldr	r3, [sp, #212]	; 0xd4
   3545a:	eor.w	r8, r2, r8
   3545e:	adc.w	r5, r3, r5
   35462:	eors	r6, r5
   35464:	lsls	r3, r6, #1
   35466:	orr.w	r3, r3, r8, lsr #31
   3546a:	mov.w	r8, r8, lsl #1
   3546e:	str	r3, [sp, #264]	; 0x108
   35470:	orr.w	r3, r8, r6, lsr #31
   35474:	str	r3, [sp, #244]	; 0xf4
   35476:	ldr	r3, [sp, #76]	; 0x4c
   35478:	adds	r1, r3, r1
   3547a:	ldr	r3, [sp, #80]	; 0x50
   3547c:	adc.w	sl, r3, r0
   35480:	ldr	r3, [sp, #256]	; 0x100
   35482:	ldr	r0, [sp, #204]	; 0xcc
   35484:	adds	r1, r1, r3
   35486:	ldr	r3, [sp, #260]	; 0x104
   35488:	adc.w	sl, sl, r3
   3548c:	ldr	r3, [sp, #236]	; 0xec
   3548e:	eor.w	lr, sl, r3
   35492:	ldr	r3, [sp, #232]	; 0xe8
   35494:	eor.w	r7, r1, r3
   35498:	ldr	r3, [sp, #200]	; 0xc8
   3549a:	adds.w	r3, r3, lr
   3549e:	eor.w	r6, r3, r4
   354a2:	ldr	r4, [sp, #260]	; 0x104
   354a4:	adcs	r0, r7
   354a6:	eor.w	ip, r0, r4
   354aa:	mov.w	fp, r6, lsr #24
   354ae:	orr.w	r4, fp, ip, lsl #8
   354b2:	mov.w	ip, ip, lsr #24
   354b6:	orr.w	r8, ip, r6, lsl #8
   354ba:	ldr	r6, [sp, #36]	; 0x24
   354bc:	adds	r1, r6, r1
   354be:	ldr	r6, [sp, #40]	; 0x28
   354c0:	adc.w	sl, r6, sl
   354c4:	adds	r1, r1, r4
   354c6:	str	r1, [sp, #144]	; 0x90
   354c8:	adc.w	r1, sl, r8
   354cc:	str	r1, [sp, #148]	; 0x94
   354ce:	ldr	r1, [sp, #144]	; 0x90
   354d0:	eor.w	lr, r1, lr
   354d4:	ldr	r1, [sp, #148]	; 0x94
   354d6:	eors	r7, r1
   354d8:	mov.w	r1, lr, lsr #16
   354dc:	orr.w	r1, r1, r7, lsl #16
   354e0:	lsrs	r7, r7, #16
   354e2:	str	r1, [sp, #232]	; 0xe8
   354e4:	orr.w	r1, r7, lr, lsl #16
   354e8:	str	r1, [sp, #236]	; 0xec
   354ea:	ldr	r1, [sp, #232]	; 0xe8
   354ec:	ldr	r7, [sp, #156]	; 0x9c
   354ee:	adds	r3, r3, r1
   354f0:	ldr	r1, [sp, #236]	; 0xec
   354f2:	eor.w	r4, r4, r3
   354f6:	adc.w	r0, r1, r0
   354fa:	eor.w	r8, r0, r8
   354fe:	mov.w	r1, r8, lsl #1
   35502:	orr.w	r6, r1, r4, lsr #31
   35506:	lsls	r4, r4, #1
   35508:	orr.w	fp, r4, r8, lsr #31
   3550c:	ldr	r1, [sp, #60]	; 0x3c
   3550e:	ldr	r4, [sp, #152]	; 0x98
   35510:	adds	r1, r1, r4
   35512:	ldr	r4, [sp, #64]	; 0x40
   35514:	adc.w	sl, r4, r7
   35518:	adds.w	r1, r1, fp
   3551c:	ldr	r4, [sp, #228]	; 0xe4
   3551e:	adc.w	sl, sl, r6
   35522:	eor.w	lr, sl, r9
   35526:	adds.w	r2, r2, lr
   3552a:	eor.w	r7, r1, r4
   3552e:	adc.w	r5, r7, r5
   35532:	eor.w	fp, r2, fp
   35536:	eor.w	ip, r5, r6
   3553a:	mov.w	r4, fp, lsr #24
   3553e:	orr.w	r6, r4, ip, lsl #8
   35542:	ldr	r4, [sp, #76]	; 0x4c
   35544:	mov.w	ip, ip, lsr #24
   35548:	adds	r1, r4, r1
   3554a:	ldr	r4, [sp, #80]	; 0x50
   3554c:	orr.w	r8, ip, fp, lsl #8
   35550:	adc.w	sl, r4, sl
   35554:	adds	r1, r1, r6
   35556:	str	r1, [sp, #152]	; 0x98
   35558:	adc.w	r1, sl, r8
   3555c:	str	r1, [sp, #156]	; 0x9c
   3555e:	ldr	r1, [sp, #152]	; 0x98
   35560:	eor.w	lr, r1, lr
   35564:	ldr	r1, [sp, #156]	; 0x9c
   35566:	eors	r7, r1
   35568:	mov.w	r1, lr, lsr #16
   3556c:	orr.w	r1, r1, r7, lsl #16
   35570:	lsrs	r7, r7, #16
   35572:	str	r1, [sp, #228]	; 0xe4
   35574:	orr.w	r1, r7, lr, lsl #16
   35578:	str	r1, [sp, #256]	; 0x100
   3557a:	ldr	r1, [sp, #228]	; 0xe4
   3557c:	adds	r2, r2, r1
   3557e:	str	r2, [sp, #192]	; 0xc0
   35580:	ldr	r2, [sp, #256]	; 0x100
   35582:	ldr	r1, [sp, #168]	; 0xa8
   35584:	adc.w	r2, r5, r2
   35588:	str	r2, [sp, #196]	; 0xc4
   3558a:	ldr	r2, [sp, #192]	; 0xc0
   3558c:	eors	r6, r2
   3558e:	ldr	r2, [sp, #196]	; 0xc4
   35590:	eor.w	r8, r2, r8
   35594:	mov.w	r2, r8, lsl #1
   35598:	orr.w	r2, r2, r6, lsr #31
   3559c:	lsls	r6, r6, #1
   3559e:	str	r2, [sp, #268]	; 0x10c
   355a0:	orr.w	r2, r6, r8, lsr #31
   355a4:	str	r2, [sp, #260]	; 0x104
   355a6:	ldr	r2, [sp, #28]
   355a8:	adds	r2, r2, r1
   355aa:	ldr	r1, [sp, #32]
   355ac:	ldr	r4, [sp, #172]	; 0xac
   355ae:	ldr	r5, [sp, #248]	; 0xf8
   355b0:	adc.w	r7, r1, r4
   355b4:	ldr	r1, [sp, #224]	; 0xe0
   355b6:	ldr	r4, [sp, #224]	; 0xe0
   355b8:	adds	r2, r2, r1
   355ba:	ldr	r1, [sp, #248]	; 0xf8
   355bc:	adc.w	r7, r1, r7
   355c0:	ldr	r1, [sp, #212]	; 0xd4
   355c2:	eor.w	r6, r7, r1
   355c6:	ldr	r1, [sp, #208]	; 0xd0
   355c8:	adds	r3, r3, r6
   355ca:	eor.w	r1, r2, r1
   355ce:	eor.w	r4, r3, r4
   355d2:	adc.w	r0, r1, r0
   355d6:	eors	r5, r0
   355d8:	mov.w	r8, r4, lsr #24
   355dc:	orr.w	ip, r8, r5, lsl #8
   355e0:	lsrs	r5, r5, #24
   355e2:	orr.w	lr, r5, r4, lsl #8
   355e6:	ldr	r4, [sp, #12]
   355e8:	adds	r2, r4, r2
   355ea:	ldr	r4, [sp, #16]
   355ec:	adc.w	r7, r4, r7
   355f0:	adds.w	r2, r2, ip
   355f4:	str	r2, [sp, #168]	; 0xa8
   355f6:	adc.w	r2, r7, lr
   355fa:	str	r2, [sp, #172]	; 0xac
   355fc:	ldr	r2, [sp, #168]	; 0xa8
   355fe:	eors	r6, r2
   35600:	ldr	r2, [sp, #172]	; 0xac
   35602:	eors	r1, r2
   35604:	lsrs	r2, r6, #16
   35606:	orr.w	r2, r2, r1, lsl #16
   3560a:	lsrs	r1, r1, #16
   3560c:	str	r2, [sp, #208]	; 0xd0
   3560e:	orr.w	r2, r1, r6, lsl #16
   35612:	str	r2, [sp, #212]	; 0xd4
   35614:	ldr	r2, [sp, #208]	; 0xd0
   35616:	ldr	r1, [sp, #164]	; 0xa4
   35618:	adds	r3, r3, r2
   3561a:	str	r3, [sp, #200]	; 0xc8
   3561c:	ldr	r3, [sp, #212]	; 0xd4
   3561e:	adc.w	r3, r0, r3
   35622:	str	r3, [sp, #204]	; 0xcc
   35624:	ldr	r2, [sp, #204]	; 0xcc
   35626:	ldr	r3, [sp, #200]	; 0xc8
   35628:	eor.w	lr, r2, lr
   3562c:	eor.w	r3, r3, ip
   35630:	mov.w	r2, lr, lsl #1
   35634:	orr.w	r2, r2, r3, lsr #31
   35638:	mov.w	ip, r3, lsl #1
   3563c:	str	r2, [sp, #224]	; 0xe0
   3563e:	orr.w	ip, ip, lr, lsr #31
   35642:	ldr	r2, [sp, #160]	; 0xa0
   35644:	ldr	r3, [sp, #108]	; 0x6c
   35646:	adds	r3, r3, r2
   35648:	ldr	r2, [sp, #112]	; 0x70
   3564a:	adc.w	lr, r2, r1
   3564e:	ldr	r2, [sp, #240]	; 0xf0
   35650:	adds	r3, r3, r2
   35652:	ldr	r2, [sp, #252]	; 0xfc
   35654:	adc.w	lr, lr, r2
   35658:	ldr	r2, [sp, #236]	; 0xec
   3565a:	eor.w	r6, lr, r2
   3565e:	ldr	r2, [sp, #232]	; 0xe8
   35660:	eor.w	r0, r3, r2
   35664:	ldr	r2, [sp, #176]	; 0xb0
   35666:	ldr	r1, [sp, #180]	; 0xb4
   35668:	adds	r2, r2, r6
   3566a:	adc.w	r5, r1, r0
   3566e:	ldr	r1, [sp, #240]	; 0xf0
   35670:	eor.w	r8, r2, r1
   35674:	ldr	r1, [sp, #252]	; 0xfc
   35676:	eor.w	r4, r5, r1
   3567a:	mov.w	r9, r8, lsr #24
   3567e:	orr.w	r1, r9, r4, lsl #8
   35682:	lsrs	r4, r4, #24
   35684:	orr.w	r7, r4, r8, lsl #8
   35688:	ldr	r4, [sp, #100]	; 0x64
   3568a:	adds	r3, r4, r3
   3568c:	ldr	r4, [sp, #104]	; 0x68
   3568e:	adc.w	lr, r4, lr
   35692:	adds	r3, r3, r1
   35694:	str	r3, [sp, #160]	; 0xa0
   35696:	adc.w	r3, lr, r7
   3569a:	str	r3, [sp, #164]	; 0xa4
   3569c:	ldr	r3, [sp, #160]	; 0xa0
   3569e:	ldr	r4, [sp, #244]	; 0xf4
   356a0:	eors	r6, r3
   356a2:	ldr	r3, [sp, #164]	; 0xa4
   356a4:	eors	r0, r3
   356a6:	lsrs	r3, r6, #16
   356a8:	orr.w	r3, r3, r0, lsl #16
   356ac:	lsrs	r0, r0, #16
   356ae:	str	r3, [sp, #232]	; 0xe8
   356b0:	orr.w	r3, r0, r6, lsl #16
   356b4:	str	r3, [sp, #236]	; 0xec
   356b6:	ldr	r3, [sp, #232]	; 0xe8
   356b8:	ldr	r0, [sp, #148]	; 0x94
   356ba:	adds	r2, r2, r3
   356bc:	ldr	r3, [sp, #236]	; 0xec
   356be:	eor.w	r1, r1, r2
   356c2:	adc.w	r5, r3, r5
   356c6:	eors	r7, r5
   356c8:	lsls	r3, r7, #1
   356ca:	orr.w	r3, r3, r1, lsr #31
   356ce:	lsls	r1, r1, #1
   356d0:	str	r3, [sp, #248]	; 0xf8
   356d2:	orr.w	r3, r1, r7, lsr #31
   356d6:	ldr	r1, [sp, #144]	; 0x90
   356d8:	str	r3, [sp, #240]	; 0xf0
   356da:	ldr	r3, [sp, #92]	; 0x5c
   356dc:	adds	r1, r3, r1
   356de:	ldr	r3, [sp, #96]	; 0x60
   356e0:	adc.w	sl, r3, r0
   356e4:	ldr	r3, [sp, #244]	; 0xf4
   356e6:	ldr	r0, [sp, #188]	; 0xbc
   356e8:	adds	r1, r1, r3
   356ea:	ldr	r3, [sp, #264]	; 0x108
   356ec:	adc.w	sl, sl, r3
   356f0:	ldr	r3, [sp, #220]	; 0xdc
   356f2:	eor.w	lr, sl, r3
   356f6:	ldr	r3, [sp, #216]	; 0xd8
   356f8:	eor.w	r6, r1, r3
   356fc:	ldr	r3, [sp, #184]	; 0xb8
   356fe:	adds.w	r3, r3, lr
   35702:	eor.w	r8, r3, r4
   35706:	ldr	r4, [sp, #264]	; 0x108
   35708:	adcs	r0, r6
   3570a:	eor.w	r7, r0, r4
   3570e:	mov.w	fp, r8, lsr #24
   35712:	orr.w	r4, fp, r7, lsl #8
   35716:	lsrs	r7, r7, #24
   35718:	orr.w	r9, r7, r8, lsl #8
   3571c:	ldr	r7, [sp, #116]	; 0x74
   3571e:	adds	r1, r7, r1
   35720:	ldr	r7, [sp, #120]	; 0x78
   35722:	adc.w	sl, r7, sl
   35726:	adds	r1, r1, r4
   35728:	str	r1, [sp, #144]	; 0x90
   3572a:	adc.w	r1, sl, r9
   3572e:	str	r1, [sp, #148]	; 0x94
   35730:	ldr	r1, [sp, #144]	; 0x90
   35732:	eor.w	lr, r1, lr
   35736:	ldr	r1, [sp, #148]	; 0x94
   35738:	eors	r6, r1
   3573a:	mov.w	r1, lr, lsr #16
   3573e:	orr.w	r8, r1, r6, lsl #16
   35742:	lsrs	r6, r6, #16
   35744:	adds.w	r3, r3, r8
   35748:	orr.w	sl, r6, lr, lsl #16
   3574c:	adc.w	r0, r0, sl
   35750:	eors	r4, r3
   35752:	eor.w	r9, r0, r9
   35756:	ldr	r6, [sp, #156]	; 0x9c
   35758:	mov.w	r1, r9, lsl #1
   3575c:	orr.w	r1, r1, r4, lsr #31
   35760:	lsls	r4, r4, #1
   35762:	orr.w	fp, r4, r9, lsr #31
   35766:	str	r1, [sp, #216]	; 0xd8
   35768:	ldr	r4, [sp, #152]	; 0x98
   3576a:	ldr	r1, [sp, #20]
   3576c:	adds	r1, r1, r4
   3576e:	ldr	r4, [sp, #24]
   35770:	adc.w	r9, r4, r6
   35774:	ldr	r4, [sp, #224]	; 0xe0
   35776:	adds.w	r1, r1, ip
   3577a:	adc.w	r9, r9, r4
   3577e:	eor.w	r7, r1, r8
   35782:	eor.w	lr, r9, sl
   35786:	adds.w	r2, r2, lr
   3578a:	adc.w	r5, r7, r5
   3578e:	eor.w	ip, r2, ip
   35792:	eor.w	r6, r5, r4
   35796:	mov.w	sl, ip, lsr #24
   3579a:	orr.w	r4, sl, r6, lsl #8
   3579e:	lsrs	r6, r6, #24
   357a0:	orr.w	r8, r6, ip, lsl #8
   357a4:	ldr	r6, [sp, #52]	; 0x34
   357a6:	adds	r1, r6, r1
   357a8:	ldr	r6, [sp, #56]	; 0x38
   357aa:	adc.w	r9, r6, r9
   357ae:	adds	r1, r1, r4
   357b0:	str	r1, [sp, #152]	; 0x98
   357b2:	adc.w	r1, r9, r8
   357b6:	str	r1, [sp, #156]	; 0x9c
   357b8:	ldr	r1, [sp, #152]	; 0x98
   357ba:	eor.w	lr, r1, lr
   357be:	ldr	r1, [sp, #156]	; 0x9c
   357c0:	eors	r7, r1
   357c2:	mov.w	r1, lr, lsr #16
   357c6:	orr.w	r1, r1, r7, lsl #16
   357ca:	lsrs	r7, r7, #16
   357cc:	str	r1, [sp, #220]	; 0xdc
   357ce:	orr.w	r1, r7, lr, lsl #16
   357d2:	str	r1, [sp, #224]	; 0xe0
   357d4:	ldr	r1, [sp, #220]	; 0xdc
   357d6:	adds	r2, r2, r1
   357d8:	str	r2, [sp, #176]	; 0xb0
   357da:	ldr	r2, [sp, #224]	; 0xe0
   357dc:	ldr	r1, [sp, #168]	; 0xa8
   357de:	adc.w	r2, r5, r2
   357e2:	str	r2, [sp, #180]	; 0xb4
   357e4:	ldr	r2, [sp, #176]	; 0xb0
   357e6:	eors	r4, r2
   357e8:	ldr	r2, [sp, #180]	; 0xb4
   357ea:	eor.w	r8, r2, r8
   357ee:	mov.w	r2, r8, lsl #1
   357f2:	orr.w	r2, r2, r4, lsr #31
   357f6:	lsls	r4, r4, #1
   357f8:	str	r2, [sp, #252]	; 0xfc
   357fa:	orr.w	r2, r4, r8, lsr #31
   357fe:	str	r2, [sp, #244]	; 0xf4
   35800:	ldr	r2, [sp, #44]	; 0x2c
   35802:	ldr	r4, [sp, #172]	; 0xac
   35804:	adds	r2, r2, r1
   35806:	ldr	r1, [sp, #48]	; 0x30
   35808:	adc.w	r7, r1, r4
   3580c:	ldr	r1, [sp, #240]	; 0xf0
   3580e:	adds	r2, r2, r1
   35810:	ldr	r1, [sp, #248]	; 0xf8
   35812:	adc.w	r7, r1, r7
   35816:	ldr	r1, [sp, #256]	; 0x100
   35818:	eor.w	r4, r7, r1
   3581c:	ldr	r1, [sp, #228]	; 0xe4
   3581e:	adds	r3, r3, r4
   35820:	eor.w	r9, r2, r1
   35824:	ldr	r1, [sp, #240]	; 0xf0
   35826:	adc.w	r0, r0, r9
   3582a:	eor.w	ip, r3, r1
   3582e:	ldr	r1, [sp, #248]	; 0xf8
   35830:	eor.w	r5, r0, r1
   35834:	mov.w	lr, ip, lsr #24
   35838:	orr.w	r1, lr, r5, lsl #8
   3583c:	lsrs	r5, r5, #24
   3583e:	orr.w	r6, r5, ip, lsl #8
   35842:	ldr	r5, [sp, #84]	; 0x54
   35844:	adds	r2, r5, r2
   35846:	ldr	r5, [sp, #88]	; 0x58
   35848:	adc.w	r7, r5, r7
   3584c:	adds	r2, r2, r1
   3584e:	str	r2, [sp, #168]	; 0xa8
   35850:	adc.w	r2, r7, r6
   35854:	str	r2, [sp, #172]	; 0xac
   35856:	ldr	r2, [sp, #168]	; 0xa8
   35858:	eors	r4, r2
   3585a:	ldr	r2, [sp, #172]	; 0xac
   3585c:	eor.w	r2, r2, r9
   35860:	lsrs	r5, r4, #16
   35862:	orr.w	r5, r5, r2, lsl #16
   35866:	mov.w	r9, r2, lsr #16
   3586a:	orr.w	r9, r9, r4, lsl #16
   3586e:	adds	r3, r3, r5
   35870:	str	r3, [sp, #184]	; 0xb8
   35872:	adc.w	r3, r0, r9
   35876:	str	r3, [sp, #188]	; 0xbc
   35878:	ldr	r3, [sp, #184]	; 0xb8
   3587a:	ldr	r2, [sp, #160]	; 0xa0
   3587c:	eors	r1, r3
   3587e:	ldr	r3, [sp, #188]	; 0xbc
   35880:	ldr	r0, [sp, #196]	; 0xc4
   35882:	eors	r6, r3
   35884:	str	r5, [sp, #228]	; 0xe4
   35886:	lsls	r3, r6, #1
   35888:	orr.w	r3, r3, r1, lsr #31
   3588c:	lsls	r1, r1, #1
   3588e:	str	r3, [sp, #248]	; 0xf8
   35890:	orr.w	r3, r1, r6, lsr #31
   35894:	str	r3, [sp, #240]	; 0xf0
   35896:	ldr	r3, [sp, #36]	; 0x24
   35898:	ldr	r1, [sp, #164]	; 0xa4
   3589a:	adds	r3, r3, r2
   3589c:	ldr	r2, [sp, #40]	; 0x28
   3589e:	adc.w	ip, r2, r1
   358a2:	ldr	r2, [sp, #216]	; 0xd8
   358a4:	adds.w	r3, r3, fp
   358a8:	adc.w	ip, ip, r2
   358ac:	ldr	r2, [sp, #212]	; 0xd4
   358ae:	eor.w	r7, ip, r2
   358b2:	ldr	r2, [sp, #208]	; 0xd0
   358b4:	eor.w	r1, r3, r2
   358b8:	ldr	r2, [sp, #192]	; 0xc0
   358ba:	adds	r2, r2, r7
   358bc:	adc.w	r5, r0, r1
   358c0:	ldr	r0, [sp, #216]	; 0xd8
   358c2:	eor.w	fp, r2, fp
   358c6:	eors	r0, r5
   358c8:	mov.w	r4, fp, lsr #24
   358cc:	orr.w	r8, r4, r0, lsl #8
   358d0:	lsrs	r0, r0, #24
   358d2:	orr.w	r6, r0, fp, lsl #8
   358d6:	ldr	r0, [sp, #4]
   358d8:	adds	r3, r0, r3
   358da:	ldr	r0, [sp, #8]
   358dc:	adc.w	ip, r0, ip
   358e0:	adds.w	r3, r3, r8
   358e4:	str	r3, [sp, #160]	; 0xa0
   358e6:	adc.w	r3, ip, r6
   358ea:	str	r3, [sp, #164]	; 0xa4
   358ec:	ldr	r3, [sp, #160]	; 0xa0
   358ee:	eors	r7, r3
   358f0:	ldr	r3, [sp, #164]	; 0xa4
   358f2:	eors	r1, r3
   358f4:	lsrs	r3, r7, #16
   358f6:	orr.w	r3, r3, r1, lsl #16
   358fa:	lsrs	r1, r1, #16
   358fc:	str	r3, [sp, #208]	; 0xd0
   358fe:	orr.w	r3, r1, r7, lsl #16
   35902:	str	r3, [sp, #212]	; 0xd4
   35904:	ldr	r3, [sp, #208]	; 0xd0
   35906:	ldr	r1, [sp, #144]	; 0x90
   35908:	adds	r2, r2, r3
   3590a:	ldr	r3, [sp, #212]	; 0xd4
   3590c:	eor.w	r8, r2, r8
   35910:	ldr	r0, [sp, #148]	; 0x94
   35912:	adc.w	r5, r3, r5
   35916:	ldr	r4, [sp, #260]	; 0x104
   35918:	eors	r6, r5
   3591a:	lsls	r3, r6, #1
   3591c:	orr.w	r3, r3, r8, lsr #31
   35920:	mov.w	r8, r8, lsl #1
   35924:	str	r3, [sp, #256]	; 0x100
   35926:	orr.w	r3, r8, r6, lsr #31
   3592a:	str	r3, [sp, #216]	; 0xd8
   3592c:	ldr	r3, [sp, #124]	; 0x7c
   3592e:	adds	r1, r3, r1
   35930:	ldr	r3, [sp, #128]	; 0x80
   35932:	adc.w	sl, r3, r0
   35936:	ldr	r3, [sp, #260]	; 0x104
   35938:	ldr	r0, [sp, #204]	; 0xcc
   3593a:	adds	r1, r1, r3
   3593c:	ldr	r3, [sp, #268]	; 0x10c
   3593e:	adc.w	sl, sl, r3
   35942:	ldr	r3, [sp, #236]	; 0xec
   35944:	eor.w	lr, sl, r3
   35948:	ldr	r3, [sp, #232]	; 0xe8
   3594a:	eor.w	r7, r1, r3
   3594e:	ldr	r3, [sp, #200]	; 0xc8
   35950:	adds.w	r3, r3, lr
   35954:	eor.w	r6, r3, r4
   35958:	ldr	r4, [sp, #268]	; 0x10c
   3595a:	adcs	r0, r7
   3595c:	eor.w	ip, r0, r4
   35960:	mov.w	fp, r6, lsr #24
   35964:	orr.w	r4, fp, ip, lsl #8
   35968:	mov.w	ip, ip, lsr #24
   3596c:	orr.w	r8, ip, r6, lsl #8
   35970:	ldr	r6, [sp, #68]	; 0x44
   35972:	adds	r1, r6, r1
   35974:	ldr	r6, [sp, #72]	; 0x48
   35976:	adc.w	sl, r6, sl
   3597a:	adds	r1, r1, r4
   3597c:	str	r1, [sp, #144]	; 0x90
   3597e:	adc.w	r1, sl, r8
   35982:	str	r1, [sp, #148]	; 0x94
   35984:	ldr	r1, [sp, #144]	; 0x90
   35986:	eor.w	lr, r1, lr
   3598a:	ldr	r1, [sp, #148]	; 0x94
   3598c:	eors	r7, r1
   3598e:	mov.w	r1, lr, lsr #16
   35992:	orr.w	r1, r1, r7, lsl #16
   35996:	lsrs	r7, r7, #16
   35998:	str	r1, [sp, #232]	; 0xe8
   3599a:	orr.w	r1, r7, lr, lsl #16
   3599e:	str	r1, [sp, #236]	; 0xec
   359a0:	ldr	r1, [sp, #232]	; 0xe8
   359a2:	ldr	r7, [sp, #156]	; 0x9c
   359a4:	adds	r3, r3, r1
   359a6:	ldr	r1, [sp, #236]	; 0xec
   359a8:	eor.w	r4, r4, r3
   359ac:	adc.w	r0, r1, r0
   359b0:	eor.w	r8, r0, r8
   359b4:	mov.w	r1, r8, lsl #1
   359b8:	orr.w	r6, r1, r4, lsr #31
   359bc:	lsls	r4, r4, #1
   359be:	orr.w	fp, r4, r8, lsr #31
   359c2:	ldr	r1, [sp, #76]	; 0x4c
   359c4:	ldr	r4, [sp, #152]	; 0x98
   359c6:	adds	r1, r1, r4
   359c8:	ldr	r4, [sp, #80]	; 0x50
   359ca:	adc.w	sl, r4, r7
   359ce:	adds.w	r1, r1, fp
   359d2:	adc.w	sl, sl, r6
   359d6:	ldr	r4, [sp, #228]	; 0xe4
   359d8:	eor.w	lr, sl, r9
   359dc:	adds.w	r2, r2, lr
   359e0:	eor.w	r7, r1, r4
   359e4:	adc.w	r5, r7, r5
   359e8:	eor.w	fp, r2, fp
   359ec:	eor.w	ip, r5, r6
   359f0:	mov.w	r4, fp, lsr #24
   359f4:	orr.w	r6, r4, ip, lsl #8
   359f8:	ldr	r4, [sp, #4]
   359fa:	mov.w	ip, ip, lsr #24
   359fe:	adds	r1, r4, r1
   35a00:	ldr	r4, [sp, #8]
   35a02:	orr.w	r8, ip, fp, lsl #8
   35a06:	adc.w	sl, r4, sl
   35a0a:	adds	r1, r1, r6
   35a0c:	str	r1, [sp, #152]	; 0x98
   35a0e:	adc.w	r1, sl, r8
   35a12:	str	r1, [sp, #156]	; 0x9c
   35a14:	ldr	r1, [sp, #152]	; 0x98
   35a16:	ldr	r4, [sp, #172]	; 0xac
   35a18:	eor.w	lr, r1, lr
   35a1c:	ldr	r1, [sp, #156]	; 0x9c
   35a1e:	eors	r7, r1
   35a20:	mov.w	r1, lr, lsr #16
   35a24:	orr.w	r1, r1, r7, lsl #16
   35a28:	lsrs	r7, r7, #16
   35a2a:	str	r1, [sp, #228]	; 0xe4
   35a2c:	orr.w	r1, r7, lr, lsl #16
   35a30:	str	r1, [sp, #260]	; 0x104
   35a32:	ldr	r1, [sp, #228]	; 0xe4
   35a34:	adds	r2, r2, r1
   35a36:	str	r2, [sp, #192]	; 0xc0
   35a38:	ldr	r2, [sp, #260]	; 0x104
   35a3a:	ldr	r1, [sp, #168]	; 0xa8
   35a3c:	adc.w	r2, r5, r2
   35a40:	str	r2, [sp, #196]	; 0xc4
   35a42:	ldr	r2, [sp, #192]	; 0xc0
   35a44:	ldr	r5, [sp, #252]	; 0xfc
   35a46:	eors	r6, r2
   35a48:	ldr	r2, [sp, #196]	; 0xc4
   35a4a:	eor.w	r8, r2, r8
   35a4e:	mov.w	r2, r8, lsl #1
   35a52:	orr.w	r2, r2, r6, lsr #31
   35a56:	lsls	r6, r6, #1
   35a58:	str	r2, [sp, #268]	; 0x10c
   35a5a:	orr.w	r2, r6, r8, lsr #31
   35a5e:	str	r2, [sp, #264]	; 0x108
   35a60:	ldr	r2, [sp, #44]	; 0x2c
   35a62:	adds	r2, r2, r1
   35a64:	ldr	r1, [sp, #48]	; 0x30
   35a66:	adc.w	r7, r1, r4
   35a6a:	ldr	r1, [sp, #244]	; 0xf4
   35a6c:	ldr	r4, [sp, #244]	; 0xf4
   35a6e:	adds	r2, r2, r1
   35a70:	ldr	r1, [sp, #252]	; 0xfc
   35a72:	adc.w	r7, r1, r7
   35a76:	ldr	r1, [sp, #212]	; 0xd4
   35a78:	eor.w	r6, r7, r1
   35a7c:	ldr	r1, [sp, #208]	; 0xd0
   35a7e:	adds	r3, r3, r6
   35a80:	eor.w	r1, r2, r1
   35a84:	eor.w	r4, r3, r4
   35a88:	adc.w	r0, r1, r0
   35a8c:	eors	r5, r0
   35a8e:	mov.w	r8, r4, lsr #24
   35a92:	orr.w	ip, r8, r5, lsl #8
   35a96:	lsrs	r5, r5, #24
   35a98:	orr.w	lr, r5, r4, lsl #8
   35a9c:	ldr	r4, [sp, #60]	; 0x3c
   35a9e:	adds	r2, r4, r2
   35aa0:	ldr	r4, [sp, #64]	; 0x40
   35aa2:	adc.w	r7, r4, r7
   35aa6:	adds.w	r2, r2, ip
   35aaa:	str	r2, [sp, #168]	; 0xa8
   35aac:	adc.w	r2, r7, lr
   35ab0:	str	r2, [sp, #172]	; 0xac
   35ab2:	ldr	r2, [sp, #168]	; 0xa8
   35ab4:	eors	r6, r2
   35ab6:	ldr	r2, [sp, #172]	; 0xac
   35ab8:	eors	r1, r2
   35aba:	lsrs	r2, r6, #16
   35abc:	orr.w	r2, r2, r1, lsl #16
   35ac0:	lsrs	r1, r1, #16
   35ac2:	str	r2, [sp, #208]	; 0xd0
   35ac4:	orr.w	r2, r1, r6, lsl #16
   35ac8:	str	r2, [sp, #212]	; 0xd4
   35aca:	ldr	r2, [sp, #208]	; 0xd0
   35acc:	ldr	r1, [sp, #164]	; 0xa4
   35ace:	adds	r3, r3, r2
   35ad0:	str	r3, [sp, #200]	; 0xc8
   35ad2:	ldr	r3, [sp, #212]	; 0xd4
   35ad4:	adc.w	r3, r0, r3
   35ad8:	str	r3, [sp, #204]	; 0xcc
   35ada:	ldr	r2, [sp, #204]	; 0xcc
   35adc:	ldr	r3, [sp, #200]	; 0xc8
   35ade:	eor.w	lr, r2, lr
   35ae2:	eor.w	r3, r3, ip
   35ae6:	mov.w	r2, lr, lsl #1
   35aea:	orr.w	r2, r2, r3, lsr #31
   35aee:	mov.w	ip, r3, lsl #1
   35af2:	str	r2, [sp, #244]	; 0xf4
   35af4:	orr.w	ip, ip, lr, lsr #31
   35af8:	ldr	r2, [sp, #160]	; 0xa0
   35afa:	ldr	r3, [sp, #20]
   35afc:	adds	r3, r3, r2
   35afe:	ldr	r2, [sp, #24]
   35b00:	adc.w	lr, r2, r1
   35b04:	ldr	r2, [sp, #240]	; 0xf0
   35b06:	ldr	r1, [sp, #180]	; 0xb4
   35b08:	adds	r3, r3, r2
   35b0a:	ldr	r2, [sp, #248]	; 0xf8
   35b0c:	adc.w	lr, lr, r2
   35b10:	ldr	r2, [sp, #236]	; 0xec
   35b12:	eor.w	r6, lr, r2
   35b16:	ldr	r2, [sp, #232]	; 0xe8
   35b18:	eor.w	r0, r3, r2
   35b1c:	ldr	r2, [sp, #176]	; 0xb0
   35b1e:	adds	r2, r2, r6
   35b20:	adc.w	r5, r1, r0
   35b24:	ldr	r1, [sp, #240]	; 0xf0
   35b26:	eor.w	r8, r2, r1
   35b2a:	ldr	r1, [sp, #248]	; 0xf8
   35b2c:	eor.w	r4, r5, r1
   35b30:	mov.w	r9, r8, lsr #24
   35b34:	orr.w	r1, r9, r4, lsl #8
   35b38:	lsrs	r4, r4, #24
   35b3a:	orr.w	r7, r4, r8, lsl #8
   35b3e:	ldr	r4, [sp, #36]	; 0x24
   35b40:	adds	r3, r4, r3
   35b42:	ldr	r4, [sp, #40]	; 0x28
   35b44:	adc.w	lr, r4, lr
   35b48:	adds	r3, r3, r1
   35b4a:	str	r3, [sp, #160]	; 0xa0
   35b4c:	adc.w	r3, lr, r7
   35b50:	str	r3, [sp, #164]	; 0xa4
   35b52:	ldr	r3, [sp, #160]	; 0xa0
   35b54:	eors	r6, r3
   35b56:	ldr	r3, [sp, #164]	; 0xa4
   35b58:	eors	r0, r3
   35b5a:	lsrs	r3, r6, #16
   35b5c:	orr.w	r3, r3, r0, lsl #16
   35b60:	lsrs	r0, r0, #16
   35b62:	str	r3, [sp, #232]	; 0xe8
   35b64:	orr.w	r3, r0, r6, lsl #16
   35b68:	str	r3, [sp, #236]	; 0xec
   35b6a:	ldr	r3, [sp, #232]	; 0xe8
   35b6c:	adds	r2, r2, r3
   35b6e:	ldr	r3, [sp, #236]	; 0xec
   35b70:	eor.w	r1, r1, r2
   35b74:	adc.w	r5, r3, r5
   35b78:	eors	r7, r5
   35b7a:	lsls	r3, r7, #1
   35b7c:	orr.w	r3, r3, r1, lsr #31
   35b80:	lsls	r1, r1, #1
   35b82:	str	r3, [sp, #248]	; 0xf8
   35b84:	orr.w	r3, r1, r7, lsr #31
   35b88:	str	r3, [sp, #240]	; 0xf0
   35b8a:	ldr	r3, [sp, #84]	; 0x54
   35b8c:	ldr	r1, [sp, #144]	; 0x90
   35b8e:	ldr	r0, [sp, #148]	; 0x94
   35b90:	adds	r1, r3, r1
   35b92:	ldr	r3, [sp, #88]	; 0x58
   35b94:	ldr	r4, [sp, #216]	; 0xd8
   35b96:	adc.w	sl, r3, r0
   35b9a:	ldr	r3, [sp, #216]	; 0xd8
   35b9c:	ldr	r0, [sp, #188]	; 0xbc
   35b9e:	adds	r1, r1, r3
   35ba0:	ldr	r3, [sp, #256]	; 0x100
   35ba2:	adc.w	sl, sl, r3
   35ba6:	ldr	r3, [sp, #224]	; 0xe0
   35ba8:	eor.w	lr, sl, r3
   35bac:	ldr	r3, [sp, #220]	; 0xdc
   35bae:	eor.w	r6, r1, r3
   35bb2:	ldr	r3, [sp, #184]	; 0xb8
   35bb4:	adds.w	r3, r3, lr
   35bb8:	eor.w	r8, r3, r4
   35bbc:	ldr	r4, [sp, #256]	; 0x100
   35bbe:	adcs	r0, r6
   35bc0:	eor.w	r7, r0, r4
   35bc4:	mov.w	fp, r8, lsr #24
   35bc8:	orr.w	r4, fp, r7, lsl #8
   35bcc:	lsrs	r7, r7, #24
   35bce:	orr.w	r9, r7, r8, lsl #8
   35bd2:	ldr	r7, [sp, #124]	; 0x7c
   35bd4:	adds	r1, r7, r1
   35bd6:	ldr	r7, [sp, #128]	; 0x80
   35bd8:	adc.w	sl, r7, sl
   35bdc:	adds	r1, r1, r4
   35bde:	str	r1, [sp, #144]	; 0x90
   35be0:	adc.w	r1, sl, r9
   35be4:	str	r1, [sp, #148]	; 0x94
   35be6:	ldr	r1, [sp, #144]	; 0x90
   35be8:	eor.w	lr, r1, lr
   35bec:	ldr	r1, [sp, #148]	; 0x94
   35bee:	eors	r6, r1
   35bf0:	mov.w	r1, lr, lsr #16
   35bf4:	orr.w	r8, r1, r6, lsl #16
   35bf8:	lsrs	r6, r6, #16
   35bfa:	adds.w	r3, r3, r8
   35bfe:	orr.w	sl, r6, lr, lsl #16
   35c02:	adc.w	r0, r0, sl
   35c06:	eors	r4, r3
   35c08:	eor.w	r9, r0, r9
   35c0c:	ldr	r6, [sp, #156]	; 0x9c
   35c0e:	mov.w	r1, r9, lsl #1
   35c12:	orr.w	r1, r1, r4, lsr #31
   35c16:	lsls	r4, r4, #1
   35c18:	orr.w	fp, r4, r9, lsr #31
   35c1c:	str	r1, [sp, #216]	; 0xd8
   35c1e:	ldr	r4, [sp, #152]	; 0x98
   35c20:	ldr	r1, [sp, #116]	; 0x74
   35c22:	adds	r1, r1, r4
   35c24:	ldr	r4, [sp, #120]	; 0x78
   35c26:	adc.w	r9, r4, r6
   35c2a:	ldr	r4, [sp, #244]	; 0xf4
   35c2c:	adds.w	r1, r1, ip
   35c30:	adc.w	r9, r9, r4
   35c34:	eor.w	r7, r1, r8
   35c38:	eor.w	lr, r9, sl
   35c3c:	adds.w	r2, r2, lr
   35c40:	adc.w	r5, r7, r5
   35c44:	eor.w	ip, r2, ip
   35c48:	eor.w	r6, r5, r4
   35c4c:	mov.w	sl, ip, lsr #24
   35c50:	orr.w	r4, sl, r6, lsl #8
   35c54:	lsrs	r6, r6, #24
   35c56:	orr.w	r8, r6, ip, lsl #8
   35c5a:	ldr	r6, [sp, #12]
   35c5c:	adds	r1, r6, r1
   35c5e:	ldr	r6, [sp, #16]
   35c60:	adc.w	r9, r6, r9
   35c64:	adds	r1, r1, r4
   35c66:	str	r1, [sp, #152]	; 0x98
   35c68:	adc.w	r1, r9, r8
   35c6c:	str	r1, [sp, #156]	; 0x9c
   35c6e:	ldr	r1, [sp, #152]	; 0x98
   35c70:	eor.w	lr, r1, lr
   35c74:	ldr	r1, [sp, #156]	; 0x9c
   35c76:	eors	r7, r1
   35c78:	mov.w	r1, lr, lsr #16
   35c7c:	orr.w	r1, r1, r7, lsl #16
   35c80:	lsrs	r7, r7, #16
   35c82:	str	r1, [sp, #220]	; 0xdc
   35c84:	orr.w	r1, r7, lr, lsl #16
   35c88:	str	r1, [sp, #224]	; 0xe0
   35c8a:	ldr	r1, [sp, #220]	; 0xdc
   35c8c:	adds	r2, r2, r1
   35c8e:	str	r2, [sp, #176]	; 0xb0
   35c90:	ldr	r2, [sp, #224]	; 0xe0
   35c92:	ldr	r1, [sp, #168]	; 0xa8
   35c94:	adc.w	r2, r5, r2
   35c98:	str	r2, [sp, #180]	; 0xb4
   35c9a:	ldr	r2, [sp, #176]	; 0xb0
   35c9c:	eors	r4, r2
   35c9e:	ldr	r2, [sp, #180]	; 0xb4
   35ca0:	eor.w	r8, r2, r8
   35ca4:	mov.w	r2, r8, lsl #1
   35ca8:	orr.w	r2, r2, r4, lsr #31
   35cac:	lsls	r4, r4, #1
   35cae:	str	r2, [sp, #252]	; 0xfc
   35cb0:	orr.w	r2, r4, r8, lsr #31
   35cb4:	str	r2, [sp, #244]	; 0xf4
   35cb6:	ldr	r2, [sp, #92]	; 0x5c
   35cb8:	ldr	r4, [sp, #172]	; 0xac
   35cba:	adds	r2, r2, r1
   35cbc:	ldr	r1, [sp, #96]	; 0x60
   35cbe:	adc.w	r7, r1, r4
   35cc2:	ldr	r1, [sp, #240]	; 0xf0
   35cc4:	adds	r2, r2, r1
   35cc6:	ldr	r1, [sp, #248]	; 0xf8
   35cc8:	adc.w	r7, r1, r7
   35ccc:	ldr	r1, [sp, #260]	; 0x104
   35cce:	eor.w	r4, r7, r1
   35cd2:	ldr	r1, [sp, #228]	; 0xe4
   35cd4:	adds	r3, r3, r4
   35cd6:	eor.w	r9, r2, r1
   35cda:	ldr	r1, [sp, #240]	; 0xf0
   35cdc:	adc.w	r0, r0, r9
   35ce0:	eor.w	ip, r3, r1
   35ce4:	ldr	r1, [sp, #248]	; 0xf8
   35ce6:	eor.w	r5, r0, r1
   35cea:	mov.w	lr, ip, lsr #24
   35cee:	orr.w	r1, lr, r5, lsl #8
   35cf2:	lsrs	r5, r5, #24
   35cf4:	orr.w	r6, r5, ip, lsl #8
   35cf8:	ldr	r5, [sp, #100]	; 0x64
   35cfa:	adds	r2, r5, r2
   35cfc:	ldr	r5, [sp, #104]	; 0x68
   35cfe:	adc.w	r7, r5, r7
   35d02:	adds	r2, r2, r1
   35d04:	str	r2, [sp, #168]	; 0xa8
   35d06:	adc.w	r2, r7, r6
   35d0a:	str	r2, [sp, #172]	; 0xac
   35d0c:	ldr	r2, [sp, #168]	; 0xa8
   35d0e:	eors	r4, r2
   35d10:	ldr	r2, [sp, #172]	; 0xac
   35d12:	eor.w	r2, r2, r9
   35d16:	lsrs	r5, r4, #16
   35d18:	orr.w	r5, r5, r2, lsl #16
   35d1c:	mov.w	r9, r2, lsr #16
   35d20:	orr.w	r9, r9, r4, lsl #16
   35d24:	adds	r3, r3, r5
   35d26:	str	r3, [sp, #184]	; 0xb8
   35d28:	adc.w	r3, r0, r9
   35d2c:	str	r3, [sp, #188]	; 0xbc
   35d2e:	ldr	r3, [sp, #184]	; 0xb8
   35d30:	ldr	r2, [sp, #160]	; 0xa0
   35d32:	eors	r1, r3
   35d34:	ldr	r3, [sp, #188]	; 0xbc
   35d36:	str	r5, [sp, #228]	; 0xe4
   35d38:	eors	r6, r3
   35d3a:	lsls	r3, r6, #1
   35d3c:	orr.w	r3, r3, r1, lsr #31
   35d40:	lsls	r1, r1, #1
   35d42:	str	r3, [sp, #248]	; 0xf8
   35d44:	orr.w	r3, r1, r6, lsr #31
   35d48:	str	r3, [sp, #240]	; 0xf0
   35d4a:	ldr	r3, [sp, #52]	; 0x34
   35d4c:	adds	r3, r3, r2
   35d4e:	ldr	r2, [sp, #56]	; 0x38
   35d50:	ldr	r1, [sp, #164]	; 0xa4
   35d52:	ldr	r0, [sp, #196]	; 0xc4
   35d54:	adc.w	ip, r2, r1
   35d58:	ldr	r2, [sp, #216]	; 0xd8
   35d5a:	adds.w	r3, r3, fp
   35d5e:	adc.w	ip, ip, r2
   35d62:	ldr	r2, [sp, #212]	; 0xd4
   35d64:	eor.w	r7, ip, r2
   35d68:	ldr	r2, [sp, #208]	; 0xd0
   35d6a:	eor.w	r1, r3, r2
   35d6e:	ldr	r2, [sp, #192]	; 0xc0
   35d70:	adds	r2, r2, r7
   35d72:	adc.w	r5, r0, r1
   35d76:	ldr	r0, [sp, #216]	; 0xd8
   35d78:	eor.w	fp, r2, fp
   35d7c:	eors	r0, r5
   35d7e:	mov.w	r4, fp, lsr #24
   35d82:	orr.w	r8, r4, r0, lsl #8
   35d86:	lsrs	r0, r0, #24
   35d88:	orr.w	r6, r0, fp, lsl #8
   35d8c:	ldr	r0, [sp, #68]	; 0x44
   35d8e:	ldr	r4, [sp, #264]	; 0x108
   35d90:	adds	r3, r0, r3
   35d92:	ldr	r0, [sp, #72]	; 0x48
   35d94:	adc.w	ip, r0, ip
   35d98:	adds.w	r3, r3, r8
   35d9c:	str	r3, [sp, #160]	; 0xa0
   35d9e:	adc.w	r3, ip, r6
   35da2:	str	r3, [sp, #164]	; 0xa4
   35da4:	ldr	r3, [sp, #160]	; 0xa0
   35da6:	ldr	r0, [sp, #148]	; 0x94
   35da8:	eors	r7, r3
   35daa:	ldr	r3, [sp, #164]	; 0xa4
   35dac:	eors	r1, r3
   35dae:	lsrs	r3, r7, #16
   35db0:	orr.w	r3, r3, r1, lsl #16
   35db4:	lsrs	r1, r1, #16
   35db6:	str	r3, [sp, #208]	; 0xd0
   35db8:	orr.w	r3, r1, r7, lsl #16
   35dbc:	str	r3, [sp, #212]	; 0xd4
   35dbe:	ldr	r3, [sp, #208]	; 0xd0
   35dc0:	ldr	r1, [sp, #144]	; 0x90
   35dc2:	adds	r2, r2, r3
   35dc4:	ldr	r3, [sp, #212]	; 0xd4
   35dc6:	eor.w	r8, r2, r8
   35dca:	adc.w	r5, r3, r5
   35dce:	eors	r6, r5
   35dd0:	lsls	r3, r6, #1
   35dd2:	orr.w	r3, r3, r8, lsr #31
   35dd6:	mov.w	r8, r8, lsl #1
   35dda:	str	r3, [sp, #256]	; 0x100
   35ddc:	orr.w	r3, r8, r6, lsr #31
   35de0:	str	r3, [sp, #216]	; 0xd8
   35de2:	ldr	r3, [sp, #28]
   35de4:	adds	r1, r3, r1
   35de6:	ldr	r3, [sp, #32]
   35de8:	adc.w	sl, r3, r0
   35dec:	ldr	r3, [sp, #264]	; 0x108
   35dee:	ldr	r0, [sp, #204]	; 0xcc
   35df0:	adds	r1, r1, r3
   35df2:	ldr	r3, [sp, #268]	; 0x10c
   35df4:	adc.w	sl, sl, r3
   35df8:	ldr	r3, [sp, #236]	; 0xec
   35dfa:	eor.w	lr, sl, r3
   35dfe:	ldr	r3, [sp, #232]	; 0xe8
   35e00:	eor.w	r7, r1, r3
   35e04:	ldr	r3, [sp, #200]	; 0xc8
   35e06:	adds.w	r3, r3, lr
   35e0a:	eor.w	r6, r3, r4
   35e0e:	ldr	r4, [sp, #268]	; 0x10c
   35e10:	adcs	r0, r7
   35e12:	eor.w	ip, r0, r4
   35e16:	mov.w	fp, r6, lsr #24
   35e1a:	orr.w	r4, fp, ip, lsl #8
   35e1e:	mov.w	ip, ip, lsr #24
   35e22:	orr.w	r8, ip, r6, lsl #8
   35e26:	ldr	r6, [sp, #108]	; 0x6c
   35e28:	adds	r1, r6, r1
   35e2a:	ldr	r6, [sp, #112]	; 0x70
   35e2c:	adc.w	sl, r6, sl
   35e30:	adds	r1, r1, r4
   35e32:	str	r1, [sp, #144]	; 0x90
   35e34:	adc.w	r1, sl, r8
   35e38:	str	r1, [sp, #148]	; 0x94
   35e3a:	ldr	r1, [sp, #144]	; 0x90
   35e3c:	eor.w	lr, r1, lr
   35e40:	ldr	r1, [sp, #148]	; 0x94
   35e42:	eors	r7, r1
   35e44:	mov.w	r1, lr, lsr #16
   35e48:	orr.w	r1, r1, r7, lsl #16
   35e4c:	lsrs	r7, r7, #16
   35e4e:	str	r1, [sp, #232]	; 0xe8
   35e50:	orr.w	r1, r7, lr, lsl #16
   35e54:	str	r1, [sp, #236]	; 0xec
   35e56:	ldr	r1, [sp, #232]	; 0xe8
   35e58:	ldr	r7, [sp, #156]	; 0x9c
   35e5a:	adds	r3, r3, r1
   35e5c:	ldr	r1, [sp, #236]	; 0xec
   35e5e:	eor.w	r4, r4, r3
   35e62:	adc.w	r0, r1, r0
   35e66:	eor.w	r8, r0, r8
   35e6a:	mov.w	r1, r8, lsl #1
   35e6e:	orr.w	r6, r1, r4, lsr #31
   35e72:	lsls	r4, r4, #1
   35e74:	orr.w	fp, r4, r8, lsr #31
   35e78:	ldr	r1, [sp, #20]
   35e7a:	ldr	r4, [sp, #152]	; 0x98
   35e7c:	adds	r1, r1, r4
   35e7e:	ldr	r4, [sp, #24]
   35e80:	adc.w	sl, r4, r7
   35e84:	adds.w	r1, r1, fp
   35e88:	ldr	r4, [sp, #228]	; 0xe4
   35e8a:	adc.w	sl, sl, r6
   35e8e:	eor.w	lr, sl, r9
   35e92:	adds.w	r2, r2, lr
   35e96:	eor.w	r7, r1, r4
   35e9a:	adc.w	r5, r7, r5
   35e9e:	eor.w	fp, r2, fp
   35ea2:	eor.w	ip, r5, r6
   35ea6:	mov.w	r4, fp, lsr #24
   35eaa:	orr.w	r6, r4, ip, lsl #8
   35eae:	ldr	r4, [sp, #100]	; 0x64
   35eb0:	mov.w	ip, ip, lsr #24
   35eb4:	adds	r1, r4, r1
   35eb6:	ldr	r4, [sp, #104]	; 0x68
   35eb8:	orr.w	r8, ip, fp, lsl #8
   35ebc:	adc.w	sl, r4, sl
   35ec0:	adds	r1, r1, r6
   35ec2:	str	r1, [sp, #152]	; 0x98
   35ec4:	adc.w	r1, sl, r8
   35ec8:	str	r1, [sp, #156]	; 0x9c
   35eca:	ldr	r1, [sp, #152]	; 0x98
   35ecc:	eor.w	lr, r1, lr
   35ed0:	ldr	r1, [sp, #156]	; 0x9c
   35ed2:	eors	r7, r1
   35ed4:	mov.w	r1, lr, lsr #16
   35ed8:	orr.w	r1, r1, r7, lsl #16
   35edc:	lsrs	r7, r7, #16
   35ede:	str	r1, [sp, #228]	; 0xe4
   35ee0:	orr.w	r1, r7, lr, lsl #16
   35ee4:	str	r1, [sp, #260]	; 0x104
   35ee6:	ldr	r1, [sp, #228]	; 0xe4
   35ee8:	adds	r2, r2, r1
   35eea:	str	r2, [sp, #192]	; 0xc0
   35eec:	ldr	r2, [sp, #260]	; 0x104
   35eee:	ldr	r1, [sp, #168]	; 0xa8
   35ef0:	adc.w	r2, r5, r2
   35ef4:	str	r2, [sp, #196]	; 0xc4
   35ef6:	ldr	r2, [sp, #192]	; 0xc0
   35ef8:	eors	r6, r2
   35efa:	ldr	r2, [sp, #196]	; 0xc4
   35efc:	eor.w	r8, r2, r8
   35f00:	mov.w	r2, r8, lsl #1
   35f04:	orr.w	r2, r2, r6, lsr #31
   35f08:	lsls	r6, r6, #1
   35f0a:	str	r2, [sp, #268]	; 0x10c
   35f0c:	orr.w	r2, r6, r8, lsr #31
   35f10:	str	r2, [sp, #264]	; 0x108
   35f12:	ldr	r2, [sp, #52]	; 0x34
   35f14:	adds	r2, r2, r1
   35f16:	ldr	r1, [sp, #56]	; 0x38
   35f18:	ldr	r4, [sp, #172]	; 0xac
   35f1a:	ldr	r5, [sp, #252]	; 0xfc
   35f1c:	adc.w	r7, r1, r4
   35f20:	ldr	r1, [sp, #244]	; 0xf4
   35f22:	ldr	r4, [sp, #244]	; 0xf4
   35f24:	adds	r2, r2, r1
   35f26:	ldr	r1, [sp, #252]	; 0xfc
   35f28:	adc.w	r7, r1, r7
   35f2c:	ldr	r1, [sp, #212]	; 0xd4
   35f2e:	eor.w	r6, r7, r1
   35f32:	ldr	r1, [sp, #208]	; 0xd0
   35f34:	adds	r3, r3, r6
   35f36:	eor.w	r1, r2, r1
   35f3a:	eor.w	r4, r3, r4
   35f3e:	adc.w	r0, r1, r0
   35f42:	eors	r5, r0
   35f44:	mov.w	r8, r4, lsr #24
   35f48:	orr.w	ip, r8, r5, lsl #8
   35f4c:	lsrs	r5, r5, #24
   35f4e:	orr.w	lr, r5, r4, lsl #8
   35f52:	ldr	r4, [sp, #84]	; 0x54
   35f54:	adds	r2, r4, r2
   35f56:	ldr	r4, [sp, #88]	; 0x58
   35f58:	adc.w	r7, r4, r7
   35f5c:	adds.w	r2, r2, ip
   35f60:	str	r2, [sp, #168]	; 0xa8
   35f62:	adc.w	r2, r7, lr
   35f66:	str	r2, [sp, #172]	; 0xac
   35f68:	ldr	r2, [sp, #168]	; 0xa8
   35f6a:	eors	r6, r2
   35f6c:	ldr	r2, [sp, #172]	; 0xac
   35f6e:	eors	r1, r2
   35f70:	lsrs	r2, r6, #16
   35f72:	orr.w	r2, r2, r1, lsl #16
   35f76:	lsrs	r1, r1, #16
   35f78:	str	r2, [sp, #208]	; 0xd0
   35f7a:	orr.w	r2, r1, r6, lsl #16
   35f7e:	str	r2, [sp, #212]	; 0xd4
   35f80:	ldr	r2, [sp, #208]	; 0xd0
   35f82:	ldr	r1, [sp, #164]	; 0xa4
   35f84:	adds	r3, r3, r2
   35f86:	str	r3, [sp, #200]	; 0xc8
   35f88:	ldr	r3, [sp, #212]	; 0xd4
   35f8a:	adc.w	r3, r0, r3
   35f8e:	str	r3, [sp, #204]	; 0xcc
   35f90:	ldr	r2, [sp, #204]	; 0xcc
   35f92:	ldr	r3, [sp, #200]	; 0xc8
   35f94:	eor.w	lr, r2, lr
   35f98:	eor.w	r3, r3, ip
   35f9c:	mov.w	r2, lr, lsl #1
   35fa0:	orr.w	r2, r2, r3, lsr #31
   35fa4:	mov.w	ip, r3, lsl #1
   35fa8:	str	r2, [sp, #244]	; 0xf4
   35faa:	orr.w	ip, ip, lr, lsr #31
   35fae:	ldr	r2, [sp, #160]	; 0xa0
   35fb0:	ldr	r3, [sp, #4]
   35fb2:	adds	r3, r3, r2
   35fb4:	ldr	r2, [sp, #8]
   35fb6:	adc.w	lr, r2, r1
   35fba:	ldr	r2, [sp, #240]	; 0xf0
   35fbc:	adds	r3, r3, r2
   35fbe:	ldr	r2, [sp, #248]	; 0xf8
   35fc0:	adc.w	lr, lr, r2
   35fc4:	ldr	r2, [sp, #236]	; 0xec
   35fc6:	eor.w	r6, lr, r2
   35fca:	ldr	r2, [sp, #232]	; 0xe8
   35fcc:	eor.w	r0, r3, r2
   35fd0:	ldr	r2, [sp, #176]	; 0xb0
   35fd2:	ldr	r1, [sp, #180]	; 0xb4
   35fd4:	adds	r2, r2, r6
   35fd6:	adc.w	r5, r1, r0
   35fda:	ldr	r1, [sp, #240]	; 0xf0
   35fdc:	eor.w	r8, r2, r1
   35fe0:	ldr	r1, [sp, #248]	; 0xf8
   35fe2:	eor.w	r4, r5, r1
   35fe6:	mov.w	r9, r8, lsr #24
   35fea:	orr.w	r1, r9, r4, lsl #8
   35fee:	lsrs	r4, r4, #24
   35ff0:	orr.w	r7, r4, r8, lsl #8
   35ff4:	ldr	r4, [sp, #92]	; 0x5c
   35ff6:	adds	r3, r4, r3
   35ff8:	ldr	r4, [sp, #96]	; 0x60
   35ffa:	adc.w	lr, r4, lr
   35ffe:	adds	r3, r3, r1
   36000:	str	r3, [sp, #160]	; 0xa0
   36002:	adc.w	r3, lr, r7
   36006:	str	r3, [sp, #164]	; 0xa4
   36008:	ldr	r3, [sp, #160]	; 0xa0
   3600a:	ldr	r4, [sp, #216]	; 0xd8
   3600c:	eors	r6, r3
   3600e:	ldr	r3, [sp, #164]	; 0xa4
   36010:	eors	r0, r3
   36012:	lsrs	r3, r6, #16
   36014:	orr.w	r3, r3, r0, lsl #16
   36018:	lsrs	r0, r0, #16
   3601a:	str	r3, [sp, #232]	; 0xe8
   3601c:	orr.w	r3, r0, r6, lsl #16
   36020:	str	r3, [sp, #236]	; 0xec
   36022:	ldr	r3, [sp, #232]	; 0xe8
   36024:	ldr	r0, [sp, #148]	; 0x94
   36026:	adds	r2, r2, r3
   36028:	ldr	r3, [sp, #236]	; 0xec
   3602a:	eor.w	r1, r1, r2
   3602e:	adc.w	r5, r3, r5
   36032:	eors	r7, r5
   36034:	lsls	r3, r7, #1
   36036:	orr.w	r3, r3, r1, lsr #31
   3603a:	lsls	r1, r1, #1
   3603c:	str	r3, [sp, #248]	; 0xf8
   3603e:	orr.w	r3, r1, r7, lsr #31
   36042:	ldr	r1, [sp, #144]	; 0x90
   36044:	str	r3, [sp, #240]	; 0xf0
   36046:	ldr	r3, [sp, #68]	; 0x44
   36048:	adds	r1, r3, r1
   3604a:	ldr	r3, [sp, #72]	; 0x48
   3604c:	adc.w	sl, r3, r0
   36050:	ldr	r3, [sp, #216]	; 0xd8
   36052:	ldr	r0, [sp, #188]	; 0xbc
   36054:	adds	r1, r1, r3
   36056:	ldr	r3, [sp, #256]	; 0x100
   36058:	adc.w	sl, sl, r3
   3605c:	ldr	r3, [sp, #224]	; 0xe0
   3605e:	eor.w	lr, sl, r3
   36062:	ldr	r3, [sp, #220]	; 0xdc
   36064:	eor.w	r6, r1, r3
   36068:	ldr	r3, [sp, #184]	; 0xb8
   3606a:	adds.w	r3, r3, lr
   3606e:	eor.w	r8, r3, r4
   36072:	ldr	r4, [sp, #256]	; 0x100
   36074:	adcs	r0, r6
   36076:	eor.w	r7, r0, r4
   3607a:	mov.w	fp, r8, lsr #24
   3607e:	orr.w	r4, fp, r7, lsl #8
   36082:	lsrs	r7, r7, #24
   36084:	orr.w	r9, r7, r8, lsl #8
   36088:	ldr	r7, [sp, #28]
   3608a:	adds	r1, r7, r1
   3608c:	ldr	r7, [sp, #32]
   3608e:	adc.w	sl, r7, sl
   36092:	adds	r1, r1, r4
   36094:	str	r1, [sp, #144]	; 0x90
   36096:	adc.w	r1, sl, r9
   3609a:	str	r1, [sp, #148]	; 0x94
   3609c:	ldr	r1, [sp, #144]	; 0x90
   3609e:	eor.w	lr, r1, lr
   360a2:	ldr	r1, [sp, #148]	; 0x94
   360a4:	eors	r6, r1
   360a6:	mov.w	r1, lr, lsr #16
   360aa:	orr.w	r8, r1, r6, lsl #16
   360ae:	lsrs	r6, r6, #16
   360b0:	adds.w	r3, r3, r8
   360b4:	orr.w	sl, r6, lr, lsl #16
   360b8:	adc.w	r0, r0, sl
   360bc:	eors	r4, r3
   360be:	eor.w	r9, r0, r9
   360c2:	ldr	r6, [sp, #156]	; 0x9c
   360c4:	mov.w	r1, r9, lsl #1
   360c8:	orr.w	r1, r1, r4, lsr #31
   360cc:	lsls	r4, r4, #1
   360ce:	orr.w	fp, r4, r9, lsr #31
   360d2:	str	r1, [sp, #216]	; 0xd8
   360d4:	ldr	r4, [sp, #152]	; 0x98
   360d6:	ldr	r1, [sp, #36]	; 0x24
   360d8:	adds	r1, r1, r4
   360da:	ldr	r4, [sp, #40]	; 0x28
   360dc:	adc.w	r9, r4, r6
   360e0:	ldr	r4, [sp, #244]	; 0xf4
   360e2:	adds.w	r1, r1, ip
   360e6:	adc.w	r9, r9, r4
   360ea:	eor.w	r7, r1, r8
   360ee:	eor.w	lr, r9, sl
   360f2:	adds.w	r2, r2, lr
   360f6:	adc.w	r5, r7, r5
   360fa:	eor.w	ip, r2, ip
   360fe:	eor.w	r6, r5, r4
   36102:	mov.w	sl, ip, lsr #24
   36106:	orr.w	r4, sl, r6, lsl #8
   3610a:	lsrs	r6, r6, #24
   3610c:	orr.w	r8, r6, ip, lsl #8
   36110:	ldr	r6, [sp, #108]	; 0x6c
   36112:	adds	r1, r6, r1
   36114:	ldr	r6, [sp, #112]	; 0x70
   36116:	adc.w	r9, r6, r9
   3611a:	adds	r1, r1, r4
   3611c:	str	r1, [sp, #152]	; 0x98
   3611e:	adc.w	r1, r9, r8
   36122:	str	r1, [sp, #156]	; 0x9c
   36124:	ldr	r1, [sp, #152]	; 0x98
   36126:	eor.w	lr, r1, lr
   3612a:	ldr	r1, [sp, #156]	; 0x9c
   3612c:	eors	r7, r1
   3612e:	mov.w	r1, lr, lsr #16
   36132:	orr.w	r1, r1, r7, lsl #16
   36136:	lsrs	r7, r7, #16
   36138:	str	r1, [sp, #220]	; 0xdc
   3613a:	orr.w	r1, r7, lr, lsl #16
   3613e:	str	r1, [sp, #224]	; 0xe0
   36140:	ldr	r1, [sp, #220]	; 0xdc
   36142:	adds	r2, r2, r1
   36144:	str	r2, [sp, #176]	; 0xb0
   36146:	ldr	r2, [sp, #224]	; 0xe0
   36148:	ldr	r1, [sp, #168]	; 0xa8
   3614a:	adc.w	r2, r5, r2
   3614e:	str	r2, [sp, #180]	; 0xb4
   36150:	ldr	r2, [sp, #176]	; 0xb0
   36152:	eors	r4, r2
   36154:	ldr	r2, [sp, #180]	; 0xb4
   36156:	eor.w	r8, r2, r8
   3615a:	mov.w	r2, r8, lsl #1
   3615e:	orr.w	r2, r2, r4, lsr #31
   36162:	lsls	r4, r4, #1
   36164:	str	r2, [sp, #252]	; 0xfc
   36166:	orr.w	r2, r4, r8, lsr #31
   3616a:	str	r2, [sp, #244]	; 0xf4
   3616c:	ldr	r2, [sp, #60]	; 0x3c
   3616e:	ldr	r4, [sp, #172]	; 0xac
   36170:	adds	r2, r2, r1
   36172:	ldr	r1, [sp, #64]	; 0x40
   36174:	adc.w	r7, r1, r4
   36178:	ldr	r1, [sp, #240]	; 0xf0
   3617a:	adds	r2, r2, r1
   3617c:	ldr	r1, [sp, #248]	; 0xf8
   3617e:	adc.w	r7, r1, r7
   36182:	ldr	r1, [sp, #260]	; 0x104
   36184:	eor.w	r4, r7, r1
   36188:	ldr	r1, [sp, #228]	; 0xe4
   3618a:	adds	r3, r3, r4
   3618c:	eor.w	r9, r2, r1
   36190:	ldr	r1, [sp, #240]	; 0xf0
   36192:	adc.w	r0, r0, r9
   36196:	eor.w	ip, r3, r1
   3619a:	ldr	r1, [sp, #248]	; 0xf8
   3619c:	eor.w	r5, r0, r1
   361a0:	mov.w	lr, ip, lsr #24
   361a4:	orr.w	r1, lr, r5, lsl #8
   361a8:	lsrs	r5, r5, #24
   361aa:	orr.w	r6, r5, ip, lsl #8
   361ae:	ldr	r5, [sp, #44]	; 0x2c
   361b0:	adds	r2, r5, r2
   361b2:	ldr	r5, [sp, #48]	; 0x30
   361b4:	adc.w	r7, r5, r7
   361b8:	adds	r2, r2, r1
   361ba:	str	r2, [sp, #168]	; 0xa8
   361bc:	adc.w	r2, r7, r6
   361c0:	str	r2, [sp, #172]	; 0xac
   361c2:	ldr	r2, [sp, #168]	; 0xa8
   361c4:	eors	r4, r2
   361c6:	ldr	r2, [sp, #172]	; 0xac
   361c8:	eor.w	r2, r2, r9
   361cc:	lsrs	r5, r4, #16
   361ce:	orr.w	r5, r5, r2, lsl #16
   361d2:	mov.w	r9, r2, lsr #16
   361d6:	orr.w	r9, r9, r4, lsl #16
   361da:	adds	r3, r3, r5
   361dc:	str	r3, [sp, #184]	; 0xb8
   361de:	adc.w	r3, r0, r9
   361e2:	str	r3, [sp, #188]	; 0xbc
   361e4:	ldr	r3, [sp, #184]	; 0xb8
   361e6:	ldr	r2, [sp, #160]	; 0xa0
   361e8:	eors	r1, r3
   361ea:	ldr	r3, [sp, #188]	; 0xbc
   361ec:	ldr	r0, [sp, #196]	; 0xc4
   361ee:	eors	r6, r3
   361f0:	str	r5, [sp, #228]	; 0xe4
   361f2:	lsls	r3, r6, #1
   361f4:	orr.w	r3, r3, r1, lsr #31
   361f8:	lsls	r1, r1, #1
   361fa:	str	r3, [sp, #248]	; 0xf8
   361fc:	orr.w	r3, r1, r6, lsr #31
   36200:	str	r3, [sp, #240]	; 0xf0
   36202:	ldr	r3, [sp, #124]	; 0x7c
   36204:	ldr	r1, [sp, #164]	; 0xa4
   36206:	adds	r3, r3, r2
   36208:	ldr	r2, [sp, #128]	; 0x80
   3620a:	adc.w	ip, r2, r1
   3620e:	ldr	r2, [sp, #216]	; 0xd8
   36210:	adds.w	r3, r3, fp
   36214:	adc.w	ip, ip, r2
   36218:	ldr	r2, [sp, #212]	; 0xd4
   3621a:	eor.w	r7, ip, r2
   3621e:	ldr	r2, [sp, #208]	; 0xd0
   36220:	eor.w	r1, r3, r2
   36224:	ldr	r2, [sp, #192]	; 0xc0
   36226:	adds	r2, r2, r7
   36228:	adc.w	r5, r0, r1
   3622c:	ldr	r0, [sp, #216]	; 0xd8
   3622e:	eor.w	fp, r2, fp
   36232:	eors	r0, r5
   36234:	mov.w	r4, fp, lsr #24
   36238:	orr.w	r8, r4, r0, lsl #8
   3623c:	lsrs	r0, r0, #24
   3623e:	orr.w	r6, r0, fp, lsl #8
   36242:	ldr	r0, [sp, #116]	; 0x74
   36244:	adds	r3, r0, r3
   36246:	ldr	r0, [sp, #120]	; 0x78
   36248:	adc.w	ip, r0, ip
   3624c:	adds.w	r3, r3, r8
   36250:	str	r3, [sp, #160]	; 0xa0
   36252:	adc.w	r3, ip, r6
   36256:	str	r3, [sp, #164]	; 0xa4
   36258:	ldr	r3, [sp, #160]	; 0xa0
   3625a:	eors	r7, r3
   3625c:	ldr	r3, [sp, #164]	; 0xa4
   3625e:	eors	r1, r3
   36260:	lsrs	r3, r7, #16
   36262:	orr.w	r3, r3, r1, lsl #16
   36266:	lsrs	r1, r1, #16
   36268:	str	r3, [sp, #208]	; 0xd0
   3626a:	orr.w	r3, r1, r7, lsl #16
   3626e:	str	r3, [sp, #212]	; 0xd4
   36270:	ldr	r3, [sp, #208]	; 0xd0
   36272:	ldr	r1, [sp, #144]	; 0x90
   36274:	adds	r2, r2, r3
   36276:	ldr	r3, [sp, #212]	; 0xd4
   36278:	eor.w	r8, r2, r8
   3627c:	ldr	r0, [sp, #148]	; 0x94
   3627e:	adc.w	r5, r3, r5
   36282:	ldr	r4, [sp, #264]	; 0x108
   36284:	eors	r6, r5
   36286:	lsls	r3, r6, #1
   36288:	orr.w	r3, r3, r8, lsr #31
   3628c:	mov.w	r8, r8, lsl #1
   36290:	str	r3, [sp, #256]	; 0x100
   36292:	orr.w	r3, r8, r6, lsr #31
   36296:	str	r3, [sp, #216]	; 0xd8
   36298:	ldr	r3, [sp, #12]
   3629a:	adds	r1, r3, r1
   3629c:	ldr	r3, [sp, #16]
   3629e:	adc.w	sl, r3, r0
   362a2:	ldr	r3, [sp, #264]	; 0x108
   362a4:	ldr	r0, [sp, #204]	; 0xcc
   362a6:	adds	r1, r1, r3
   362a8:	ldr	r3, [sp, #268]	; 0x10c
   362aa:	adc.w	sl, sl, r3
   362ae:	ldr	r3, [sp, #236]	; 0xec
   362b0:	eor.w	lr, sl, r3
   362b4:	ldr	r3, [sp, #232]	; 0xe8
   362b6:	eor.w	r7, r1, r3
   362ba:	ldr	r3, [sp, #200]	; 0xc8
   362bc:	adds.w	r3, r3, lr
   362c0:	eor.w	r6, r3, r4
   362c4:	ldr	r4, [sp, #268]	; 0x10c
   362c6:	adcs	r0, r7
   362c8:	eor.w	ip, r0, r4
   362cc:	mov.w	fp, r6, lsr #24
   362d0:	orr.w	r4, fp, ip, lsl #8
   362d4:	mov.w	ip, ip, lsr #24
   362d8:	orr.w	r8, ip, r6, lsl #8
   362dc:	ldr	r6, [sp, #76]	; 0x4c
   362de:	adds	r1, r6, r1
   362e0:	ldr	r6, [sp, #80]	; 0x50
   362e2:	adc.w	sl, r6, sl
   362e6:	adds	r1, r1, r4
   362e8:	str	r1, [sp, #144]	; 0x90
   362ea:	adc.w	r1, sl, r8
   362ee:	str	r1, [sp, #148]	; 0x94
   362f0:	ldr	r1, [sp, #144]	; 0x90
   362f2:	eor.w	lr, r1, lr
   362f6:	ldr	r1, [sp, #148]	; 0x94
   362f8:	eors	r7, r1
   362fa:	mov.w	r1, lr, lsr #16
   362fe:	orr.w	r1, r1, r7, lsl #16
   36302:	lsrs	r7, r7, #16
   36304:	str	r1, [sp, #232]	; 0xe8
   36306:	orr.w	r1, r7, lr, lsl #16
   3630a:	str	r1, [sp, #236]	; 0xec
   3630c:	ldr	r1, [sp, #232]	; 0xe8
   3630e:	ldr	r7, [sp, #156]	; 0x9c
   36310:	adds	r3, r3, r1
   36312:	ldr	r1, [sp, #236]	; 0xec
   36314:	eor.w	r4, r4, r3
   36318:	adc.w	r0, r1, r0
   3631c:	eor.w	r8, r0, r8
   36320:	mov.w	r1, r8, lsl #1
   36324:	orr.w	r6, r1, r4, lsr #31
   36328:	lsls	r4, r4, #1
   3632a:	orr.w	fp, r4, r8, lsr #31
   3632e:	ldr	r1, [sp, #100]	; 0x64
   36330:	ldr	r4, [sp, #152]	; 0x98
   36332:	adds	r1, r1, r4
   36334:	ldr	r4, [sp, #104]	; 0x68
   36336:	adc.w	sl, r4, r7
   3633a:	adds.w	r1, r1, fp
   3633e:	adc.w	sl, sl, r6
   36342:	ldr	r4, [sp, #228]	; 0xe4
   36344:	eor.w	lr, sl, r9
   36348:	adds.w	r2, r2, lr
   3634c:	eor.w	r7, r1, r4
   36350:	adc.w	r5, r7, r5
   36354:	eor.w	fp, r2, fp
   36358:	eor.w	ip, r5, r6
   3635c:	mov.w	r4, fp, lsr #24
   36360:	orr.w	r6, r4, ip, lsl #8
   36364:	ldr	r4, [sp, #44]	; 0x2c
   36366:	mov.w	ip, ip, lsr #24
   3636a:	adds	r1, r4, r1
   3636c:	ldr	r4, [sp, #48]	; 0x30
   3636e:	orr.w	r8, ip, fp, lsl #8
   36372:	adc.w	sl, r4, sl
   36376:	adds	r1, r1, r6
   36378:	str	r1, [sp, #152]	; 0x98
   3637a:	adc.w	r1, sl, r8
   3637e:	str	r1, [sp, #156]	; 0x9c
   36380:	ldr	r1, [sp, #152]	; 0x98
   36382:	ldr	r4, [sp, #172]	; 0xac
   36384:	eor.w	lr, r1, lr
   36388:	ldr	r1, [sp, #156]	; 0x9c
   3638a:	eors	r7, r1
   3638c:	mov.w	r1, lr, lsr #16
   36390:	orr.w	r1, r1, r7, lsl #16
   36394:	lsrs	r7, r7, #16
   36396:	str	r1, [sp, #228]	; 0xe4
   36398:	orr.w	r1, r7, lr, lsl #16
   3639c:	str	r1, [sp, #260]	; 0x104
   3639e:	ldr	r1, [sp, #228]	; 0xe4
   363a0:	adds	r2, r2, r1
   363a2:	str	r2, [sp, #192]	; 0xc0
   363a4:	ldr	r2, [sp, #260]	; 0x104
   363a6:	ldr	r1, [sp, #168]	; 0xa8
   363a8:	adc.w	r2, r5, r2
   363ac:	str	r2, [sp, #196]	; 0xc4
   363ae:	ldr	r2, [sp, #192]	; 0xc0
   363b0:	ldr	r5, [sp, #252]	; 0xfc
   363b2:	eors	r6, r2
   363b4:	ldr	r2, [sp, #196]	; 0xc4
   363b6:	eor.w	r8, r2, r8
   363ba:	mov.w	r2, r8, lsl #1
   363be:	orr.w	r2, r2, r6, lsr #31
   363c2:	lsls	r6, r6, #1
   363c4:	str	r2, [sp, #268]	; 0x10c
   363c6:	orr.w	r2, r6, r8, lsr #31
   363ca:	str	r2, [sp, #264]	; 0x108
   363cc:	ldr	r2, [sp, #12]
   363ce:	adds	r2, r2, r1
   363d0:	ldr	r1, [sp, #16]
   363d2:	adc.w	r7, r1, r4
   363d6:	ldr	r1, [sp, #244]	; 0xf4
   363d8:	ldr	r4, [sp, #244]	; 0xf4
   363da:	adds	r2, r2, r1
   363dc:	ldr	r1, [sp, #252]	; 0xfc
   363de:	adc.w	r7, r1, r7
   363e2:	ldr	r1, [sp, #212]	; 0xd4
   363e4:	eor.w	r6, r7, r1
   363e8:	ldr	r1, [sp, #208]	; 0xd0
   363ea:	adds	r3, r3, r6
   363ec:	eor.w	r1, r2, r1
   363f0:	eor.w	r4, r3, r4
   363f4:	adc.w	r0, r1, r0
   363f8:	eors	r5, r0
   363fa:	mov.w	r8, r4, lsr #24
   363fe:	orr.w	ip, r8, r5, lsl #8
   36402:	lsrs	r5, r5, #24
   36404:	orr.w	lr, r5, r4, lsl #8
   36408:	ldr	r4, [sp, #124]	; 0x7c
   3640a:	adds	r2, r4, r2
   3640c:	ldr	r4, [sp, #128]	; 0x80
   3640e:	adc.w	r7, r4, r7
   36412:	adds.w	r2, r2, ip
   36416:	str	r2, [sp, #168]	; 0xa8
   36418:	adc.w	r2, r7, lr
   3641c:	str	r2, [sp, #172]	; 0xac
   3641e:	ldr	r2, [sp, #168]	; 0xa8
   36420:	eors	r6, r2
   36422:	ldr	r2, [sp, #172]	; 0xac
   36424:	eors	r1, r2
   36426:	lsrs	r2, r6, #16
   36428:	orr.w	r2, r2, r1, lsl #16
   3642c:	lsrs	r1, r1, #16
   3642e:	str	r2, [sp, #208]	; 0xd0
   36430:	orr.w	r2, r1, r6, lsl #16
   36434:	str	r2, [sp, #212]	; 0xd4
   36436:	ldr	r2, [sp, #208]	; 0xd0
   36438:	ldr	r1, [sp, #164]	; 0xa4
   3643a:	adds	r3, r3, r2
   3643c:	str	r3, [sp, #200]	; 0xc8
   3643e:	ldr	r3, [sp, #212]	; 0xd4
   36440:	adc.w	r3, r0, r3
   36444:	str	r3, [sp, #204]	; 0xcc
   36446:	ldr	r2, [sp, #204]	; 0xcc
   36448:	ldr	r3, [sp, #200]	; 0xc8
   3644a:	eor.w	lr, r2, lr
   3644e:	eor.w	r3, r3, ip
   36452:	mov.w	r2, lr, lsl #1
   36456:	orr.w	r2, r2, r3, lsr #31
   3645a:	mov.w	ip, r3, lsl #1
   3645e:	str	r2, [sp, #244]	; 0xf4
   36460:	orr.w	ip, ip, lr, lsr #31
   36464:	ldr	r2, [sp, #160]	; 0xa0
   36466:	ldr	r3, [sp, #116]	; 0x74
   36468:	adds	r3, r3, r2
   3646a:	ldr	r2, [sp, #120]	; 0x78
   3646c:	adc.w	lr, r2, r1
   36470:	ldr	r2, [sp, #240]	; 0xf0
   36472:	ldr	r1, [sp, #180]	; 0xb4
   36474:	adds	r3, r3, r2
   36476:	ldr	r2, [sp, #248]	; 0xf8
   36478:	adc.w	lr, lr, r2
   3647c:	ldr	r2, [sp, #236]	; 0xec
   3647e:	eor.w	r6, lr, r2
   36482:	ldr	r2, [sp, #232]	; 0xe8
   36484:	eor.w	r0, r3, r2
   36488:	ldr	r2, [sp, #176]	; 0xb0
   3648a:	adds	r2, r2, r6
   3648c:	adc.w	r5, r1, r0
   36490:	ldr	r1, [sp, #240]	; 0xf0
   36492:	eor.w	r8, r2, r1
   36496:	ldr	r1, [sp, #248]	; 0xf8
   36498:	eor.w	r4, r5, r1
   3649c:	mov.w	r9, r8, lsr #24
   364a0:	orr.w	r1, r9, r4, lsl #8
   364a4:	lsrs	r4, r4, #24
   364a6:	orr.w	r7, r4, r8, lsl #8
   364aa:	ldr	r4, [sp, #108]	; 0x6c
   364ac:	adds	r3, r4, r3
   364ae:	ldr	r4, [sp, #112]	; 0x70
   364b0:	adc.w	lr, r4, lr
   364b4:	adds	r3, r3, r1
   364b6:	str	r3, [sp, #160]	; 0xa0
   364b8:	adc.w	r3, lr, r7
   364bc:	str	r3, [sp, #164]	; 0xa4
   364be:	ldr	r3, [sp, #160]	; 0xa0
   364c0:	eors	r6, r3
   364c2:	ldr	r3, [sp, #164]	; 0xa4
   364c4:	eors	r0, r3
   364c6:	lsrs	r3, r6, #16
   364c8:	orr.w	r3, r3, r0, lsl #16
   364cc:	lsrs	r0, r0, #16
   364ce:	str	r3, [sp, #232]	; 0xe8
   364d0:	orr.w	r3, r0, r6, lsl #16
   364d4:	str	r3, [sp, #236]	; 0xec
   364d6:	ldr	r3, [sp, #232]	; 0xe8
   364d8:	adds	r2, r2, r3
   364da:	ldr	r3, [sp, #236]	; 0xec
   364dc:	eor.w	r1, r1, r2
   364e0:	adc.w	r5, r3, r5
   364e4:	eors	r7, r5
   364e6:	lsls	r3, r7, #1
   364e8:	orr.w	r3, r3, r1, lsr #31
   364ec:	lsls	r1, r1, #1
   364ee:	str	r3, [sp, #248]	; 0xf8
   364f0:	orr.w	r3, r1, r7, lsr #31
   364f4:	str	r3, [sp, #240]	; 0xf0
   364f6:	ldr	r3, [sp, #36]	; 0x24
   364f8:	ldr	r1, [sp, #144]	; 0x90
   364fa:	ldr	r0, [sp, #148]	; 0x94
   364fc:	adds	r1, r3, r1
   364fe:	ldr	r3, [sp, #40]	; 0x28
   36500:	ldr	r4, [sp, #216]	; 0xd8
   36502:	adc.w	sl, r3, r0
   36506:	ldr	r3, [sp, #216]	; 0xd8
   36508:	ldr	r0, [sp, #188]	; 0xbc
   3650a:	adds	r1, r1, r3
   3650c:	ldr	r3, [sp, #256]	; 0x100
   3650e:	adc.w	sl, sl, r3
   36512:	ldr	r3, [sp, #224]	; 0xe0
   36514:	eor.w	lr, sl, r3
   36518:	ldr	r3, [sp, #220]	; 0xdc
   3651a:	eor.w	r6, r1, r3
   3651e:	ldr	r3, [sp, #184]	; 0xb8
   36520:	adds.w	r3, r3, lr
   36524:	eor.w	r8, r3, r4
   36528:	ldr	r4, [sp, #256]	; 0x100
   3652a:	adcs	r0, r6
   3652c:	eor.w	r7, r0, r4
   36530:	mov.w	fp, r8, lsr #24
   36534:	orr.w	r4, fp, r7, lsl #8
   36538:	lsrs	r7, r7, #24
   3653a:	orr.w	r9, r7, r8, lsl #8
   3653e:	ldr	r7, [sp, #84]	; 0x54
   36540:	adds	r1, r7, r1
   36542:	ldr	r7, [sp, #88]	; 0x58
   36544:	adc.w	sl, r7, sl
   36548:	adds	r1, r1, r4
   3654a:	str	r1, [sp, #144]	; 0x90
   3654c:	adc.w	r1, sl, r9
   36550:	str	r1, [sp, #148]	; 0x94
   36552:	ldr	r1, [sp, #144]	; 0x90
   36554:	eor.w	lr, r1, lr
   36558:	ldr	r1, [sp, #148]	; 0x94
   3655a:	eors	r6, r1
   3655c:	mov.w	r1, lr, lsr #16
   36560:	orr.w	r8, r1, r6, lsl #16
   36564:	lsrs	r6, r6, #16
   36566:	adds.w	r3, r3, r8
   3656a:	orr.w	sl, r6, lr, lsl #16
   3656e:	adc.w	r0, r0, sl
   36572:	eors	r4, r3
   36574:	eor.w	r9, r0, r9
   36578:	ldr	r6, [sp, #156]	; 0x9c
   3657a:	mov.w	r1, r9, lsl #1
   3657e:	orr.w	r1, r1, r4, lsr #31
   36582:	lsls	r4, r4, #1
   36584:	orr.w	fp, r4, r9, lsr #31
   36588:	str	r1, [sp, #216]	; 0xd8
   3658a:	ldr	r4, [sp, #152]	; 0x98
   3658c:	ldr	r1, [sp, #4]
   3658e:	adds	r1, r1, r4
   36590:	ldr	r4, [sp, #8]
   36592:	adc.w	r9, r4, r6
   36596:	ldr	r4, [sp, #244]	; 0xf4
   36598:	adds.w	r1, r1, ip
   3659c:	adc.w	r9, r9, r4
   365a0:	eor.w	r7, r1, r8
   365a4:	eor.w	lr, r9, sl
   365a8:	adds.w	r2, r2, lr
   365ac:	adc.w	r5, r7, r5
   365b0:	eor.w	ip, r2, ip
   365b4:	eor.w	r6, r5, r4
   365b8:	mov.w	sl, ip, lsr #24
   365bc:	orr.w	r4, sl, r6, lsl #8
   365c0:	lsrs	r6, r6, #24
   365c2:	orr.w	r8, r6, ip, lsl #8
   365c6:	ldr	r6, [sp, #60]	; 0x3c
   365c8:	adds	r1, r6, r1
   365ca:	ldr	r6, [sp, #64]	; 0x40
   365cc:	adc.w	r9, r6, r9
   365d0:	adds	r1, r1, r4
   365d2:	str	r1, [sp, #152]	; 0x98
   365d4:	adc.w	r1, r9, r8
   365d8:	str	r1, [sp, #156]	; 0x9c
   365da:	ldr	r1, [sp, #152]	; 0x98
   365dc:	eor.w	lr, r1, lr
   365e0:	ldr	r1, [sp, #156]	; 0x9c
   365e2:	eors	r7, r1
   365e4:	mov.w	r1, lr, lsr #16
   365e8:	orr.w	r1, r1, r7, lsl #16
   365ec:	lsrs	r7, r7, #16
   365ee:	str	r1, [sp, #220]	; 0xdc
   365f0:	orr.w	r1, r7, lr, lsl #16
   365f4:	str	r1, [sp, #224]	; 0xe0
   365f6:	ldr	r1, [sp, #220]	; 0xdc
   365f8:	adds	r2, r2, r1
   365fa:	str	r2, [sp, #176]	; 0xb0
   365fc:	ldr	r2, [sp, #224]	; 0xe0
   365fe:	ldr	r1, [sp, #168]	; 0xa8
   36600:	adc.w	r2, r5, r2
   36604:	str	r2, [sp, #180]	; 0xb4
   36606:	ldr	r2, [sp, #176]	; 0xb0
   36608:	eors	r4, r2
   3660a:	ldr	r2, [sp, #180]	; 0xb4
   3660c:	eor.w	r8, r2, r8
   36610:	mov.w	r2, r8, lsl #1
   36614:	orr.w	r2, r2, r4, lsr #31
   36618:	lsls	r4, r4, #1
   3661a:	str	r2, [sp, #252]	; 0xfc
   3661c:	orr.w	r2, r4, r8, lsr #31
   36620:	str	r2, [sp, #244]	; 0xf4
   36622:	ldr	r2, [sp, #52]	; 0x34
   36624:	ldr	r4, [sp, #172]	; 0xac
   36626:	adds	r2, r2, r1
   36628:	ldr	r1, [sp, #56]	; 0x38
   3662a:	adc.w	r7, r1, r4
   3662e:	ldr	r1, [sp, #240]	; 0xf0
   36630:	adds	r2, r2, r1
   36632:	ldr	r1, [sp, #248]	; 0xf8
   36634:	adc.w	r7, r1, r7
   36638:	ldr	r1, [sp, #260]	; 0x104
   3663a:	eor.w	r4, r7, r1
   3663e:	ldr	r1, [sp, #228]	; 0xe4
   36640:	adds	r3, r3, r4
   36642:	eor.w	r9, r2, r1
   36646:	ldr	r1, [sp, #240]	; 0xf0
   36648:	adc.w	r0, r0, r9
   3664c:	eor.w	ip, r3, r1
   36650:	ldr	r1, [sp, #248]	; 0xf8
   36652:	eor.w	r5, r0, r1
   36656:	mov.w	lr, ip, lsr #24
   3665a:	orr.w	r1, lr, r5, lsl #8
   3665e:	lsrs	r5, r5, #24
   36660:	orr.w	r6, r5, ip, lsl #8
   36664:	ldr	r5, [sp, #28]
   36666:	adds	r2, r5, r2
   36668:	ldr	r5, [sp, #32]
   3666a:	adc.w	r7, r5, r7
   3666e:	adds	r2, r2, r1
   36670:	str	r2, [sp, #168]	; 0xa8
   36672:	adc.w	r2, r7, r6
   36676:	str	r2, [sp, #172]	; 0xac
   36678:	ldr	r2, [sp, #168]	; 0xa8
   3667a:	eors	r4, r2
   3667c:	ldr	r2, [sp, #172]	; 0xac
   3667e:	eor.w	r2, r2, r9
   36682:	lsrs	r5, r4, #16
   36684:	orr.w	r5, r5, r2, lsl #16
   36688:	mov.w	r9, r2, lsr #16
   3668c:	orr.w	r9, r9, r4, lsl #16
   36690:	adds	r3, r3, r5
   36692:	str	r3, [sp, #184]	; 0xb8
   36694:	adc.w	r3, r0, r9
   36698:	str	r3, [sp, #188]	; 0xbc
   3669a:	ldr	r3, [sp, #184]	; 0xb8
   3669c:	ldr	r2, [sp, #160]	; 0xa0
   3669e:	eors	r1, r3
   366a0:	ldr	r3, [sp, #188]	; 0xbc
   366a2:	str	r5, [sp, #228]	; 0xe4
   366a4:	eors	r6, r3
   366a6:	lsls	r3, r6, #1
   366a8:	orr.w	r3, r3, r1, lsr #31
   366ac:	lsls	r1, r1, #1
   366ae:	str	r3, [sp, #248]	; 0xf8
   366b0:	orr.w	r3, r1, r6, lsr #31
   366b4:	str	r3, [sp, #240]	; 0xf0
   366b6:	ldr	r3, [sp, #76]	; 0x4c
   366b8:	adds	r3, r3, r2
   366ba:	ldr	r2, [sp, #80]	; 0x50
   366bc:	ldr	r1, [sp, #164]	; 0xa4
   366be:	ldr	r0, [sp, #196]	; 0xc4
   366c0:	adc.w	ip, r2, r1
   366c4:	ldr	r2, [sp, #216]	; 0xd8
   366c6:	adds.w	r3, r3, fp
   366ca:	adc.w	ip, ip, r2
   366ce:	ldr	r2, [sp, #212]	; 0xd4
   366d0:	eor.w	r7, ip, r2
   366d4:	ldr	r2, [sp, #208]	; 0xd0
   366d6:	eor.w	r1, r3, r2
   366da:	ldr	r2, [sp, #192]	; 0xc0
   366dc:	adds	r2, r2, r7
   366de:	adc.w	r5, r0, r1
   366e2:	ldr	r0, [sp, #216]	; 0xd8
   366e4:	eor.w	fp, r2, fp
   366e8:	eors	r0, r5
   366ea:	mov.w	r4, fp, lsr #24
   366ee:	orr.w	r8, r4, r0, lsl #8
   366f2:	lsrs	r0, r0, #24
   366f4:	orr.w	r6, r0, fp, lsl #8
   366f8:	ldr	r0, [sp, #20]
   366fa:	ldr	r4, [sp, #264]	; 0x108
   366fc:	adds	r3, r0, r3
   366fe:	ldr	r0, [sp, #24]
   36700:	adc.w	ip, r0, ip
   36704:	adds.w	r3, r3, r8
   36708:	str	r3, [sp, #160]	; 0xa0
   3670a:	adc.w	r3, ip, r6
   3670e:	str	r3, [sp, #164]	; 0xa4
   36710:	ldr	r3, [sp, #160]	; 0xa0
   36712:	ldr	r0, [sp, #148]	; 0x94
   36714:	eors	r7, r3
   36716:	ldr	r3, [sp, #164]	; 0xa4
   36718:	eors	r1, r3
   3671a:	lsrs	r3, r7, #16
   3671c:	orr.w	r3, r3, r1, lsl #16
   36720:	lsrs	r1, r1, #16
   36722:	str	r3, [sp, #208]	; 0xd0
   36724:	orr.w	r3, r1, r7, lsl #16
   36728:	str	r3, [sp, #212]	; 0xd4
   3672a:	ldr	r3, [sp, #208]	; 0xd0
   3672c:	ldr	r1, [sp, #144]	; 0x90
   3672e:	adds	r2, r2, r3
   36730:	ldr	r3, [sp, #212]	; 0xd4
   36732:	eor.w	r8, r2, r8
   36736:	adc.w	r5, r3, r5
   3673a:	eors	r6, r5
   3673c:	lsls	r3, r6, #1
   3673e:	orr.w	r3, r3, r8, lsr #31
   36742:	mov.w	r8, r8, lsl #1
   36746:	str	r3, [sp, #256]	; 0x100
   36748:	orr.w	r3, r8, r6, lsr #31
   3674c:	str	r3, [sp, #216]	; 0xd8
   3674e:	ldr	r3, [sp, #68]	; 0x44
   36750:	adds	r1, r3, r1
   36752:	ldr	r3, [sp, #72]	; 0x48
   36754:	adc.w	sl, r3, r0
   36758:	ldr	r3, [sp, #264]	; 0x108
   3675a:	ldr	r0, [sp, #204]	; 0xcc
   3675c:	adds	r1, r1, r3
   3675e:	ldr	r3, [sp, #268]	; 0x10c
   36760:	adc.w	sl, sl, r3
   36764:	ldr	r3, [sp, #236]	; 0xec
   36766:	eor.w	lr, sl, r3
   3676a:	ldr	r3, [sp, #232]	; 0xe8
   3676c:	eor.w	r7, r1, r3
   36770:	ldr	r3, [sp, #200]	; 0xc8
   36772:	adds.w	r3, r3, lr
   36776:	eor.w	r6, r3, r4
   3677a:	ldr	r4, [sp, #268]	; 0x10c
   3677c:	adcs	r0, r7
   3677e:	eor.w	ip, r0, r4
   36782:	mov.w	fp, r6, lsr #24
   36786:	orr.w	r4, fp, ip, lsl #8
   3678a:	mov.w	ip, ip, lsr #24
   3678e:	orr.w	r8, ip, r6, lsl #8
   36792:	ldr	r6, [sp, #92]	; 0x5c
   36794:	adds	r1, r6, r1
   36796:	ldr	r6, [sp, #96]	; 0x60
   36798:	adc.w	sl, r6, sl
   3679c:	adds	r1, r1, r4
   3679e:	str	r1, [sp, #144]	; 0x90
   367a0:	adc.w	r1, sl, r8
   367a4:	str	r1, [sp, #148]	; 0x94
   367a6:	ldr	r1, [sp, #144]	; 0x90
   367a8:	eor.w	lr, r1, lr
   367ac:	ldr	r1, [sp, #148]	; 0x94
   367ae:	eors	r7, r1
   367b0:	mov.w	r1, lr, lsr #16
   367b4:	orr.w	r1, r1, r7, lsl #16
   367b8:	lsrs	r7, r7, #16
   367ba:	str	r1, [sp, #232]	; 0xe8
   367bc:	orr.w	r1, r7, lr, lsl #16
   367c0:	str	r1, [sp, #236]	; 0xec
   367c2:	ldr	r1, [sp, #232]	; 0xe8
   367c4:	ldr	r7, [sp, #156]	; 0x9c
   367c6:	adds	r3, r3, r1
   367c8:	ldr	r1, [sp, #236]	; 0xec
   367ca:	eor.w	r4, r4, r3
   367ce:	adc.w	r0, r1, r0
   367d2:	eor.w	r8, r0, r8
   367d6:	mov.w	r1, r8, lsl #1
   367da:	orr.w	r6, r1, r4, lsr #31
   367de:	lsls	r4, r4, #1
   367e0:	orr.w	fp, r4, r8, lsr #31
   367e4:	ldr	r1, [sp, #108]	; 0x6c
   367e6:	ldr	r4, [sp, #152]	; 0x98
   367e8:	adds	r1, r1, r4
   367ea:	ldr	r4, [sp, #112]	; 0x70
   367ec:	adc.w	sl, r4, r7
   367f0:	adds.w	r1, r1, fp
   367f4:	ldr	r4, [sp, #228]	; 0xe4
   367f6:	adc.w	sl, sl, r6
   367fa:	eor.w	lr, sl, r9
   367fe:	adds.w	r2, r2, lr
   36802:	eor.w	r7, r1, r4
   36806:	adc.w	r5, r7, r5
   3680a:	eor.w	fp, r2, fp
   3680e:	eor.w	ip, r5, r6
   36812:	mov.w	r4, fp, lsr #24
   36816:	orr.w	r6, r4, ip, lsl #8
   3681a:	ldr	r4, [sp, #92]	; 0x5c
   3681c:	mov.w	ip, ip, lsr #24
   36820:	adds	r1, r4, r1
   36822:	ldr	r4, [sp, #96]	; 0x60
   36824:	orr.w	r8, ip, fp, lsl #8
   36828:	adc.w	sl, r4, sl
   3682c:	adds	r1, r1, r6
   3682e:	str	r1, [sp, #152]	; 0x98
   36830:	adc.w	r1, sl, r8
   36834:	str	r1, [sp, #156]	; 0x9c
   36836:	ldr	r1, [sp, #152]	; 0x98
   36838:	eor.w	lr, r1, lr
   3683c:	ldr	r1, [sp, #156]	; 0x9c
   3683e:	eors	r7, r1
   36840:	mov.w	r1, lr, lsr #16
   36844:	orr.w	r1, r1, r7, lsl #16
   36848:	lsrs	r7, r7, #16
   3684a:	str	r1, [sp, #228]	; 0xe4
   3684c:	orr.w	r1, r7, lr, lsl #16
   36850:	str	r1, [sp, #260]	; 0x104
   36852:	ldr	r1, [sp, #228]	; 0xe4
   36854:	adds	r2, r2, r1
   36856:	str	r2, [sp, #192]	; 0xc0
   36858:	ldr	r2, [sp, #260]	; 0x104
   3685a:	ldr	r1, [sp, #168]	; 0xa8
   3685c:	adc.w	r2, r5, r2
   36860:	str	r2, [sp, #196]	; 0xc4
   36862:	ldr	r2, [sp, #192]	; 0xc0
   36864:	eors	r6, r2
   36866:	ldr	r2, [sp, #196]	; 0xc4
   36868:	eor.w	r8, r2, r8
   3686c:	mov.w	r2, r8, lsl #1
   36870:	orr.w	r2, r2, r6, lsr #31
   36874:	lsls	r6, r6, #1
   36876:	str	r2, [sp, #268]	; 0x10c
   36878:	orr.w	r2, r6, r8, lsr #31
   3687c:	str	r2, [sp, #264]	; 0x108
   3687e:	ldr	r2, [sp, #60]	; 0x3c
   36880:	adds	r2, r2, r1
   36882:	ldr	r1, [sp, #64]	; 0x40
   36884:	ldr	r4, [sp, #172]	; 0xac
   36886:	ldr	r5, [sp, #252]	; 0xfc
   36888:	adc.w	r7, r1, r4
   3688c:	ldr	r1, [sp, #244]	; 0xf4
   3688e:	ldr	r4, [sp, #244]	; 0xf4
   36890:	adds	r2, r2, r1
   36892:	ldr	r1, [sp, #252]	; 0xfc
   36894:	adc.w	r7, r1, r7
   36898:	ldr	r1, [sp, #212]	; 0xd4
   3689a:	eor.w	r6, r7, r1
   3689e:	ldr	r1, [sp, #208]	; 0xd0
   368a0:	adds	r3, r3, r6
   368a2:	eor.w	r1, r2, r1
   368a6:	eor.w	r4, r3, r4
   368aa:	adc.w	r0, r1, r0
   368ae:	eors	r5, r0
   368b0:	mov.w	r8, r4, lsr #24
   368b4:	orr.w	ip, r8, r5, lsl #8
   368b8:	lsrs	r5, r5, #24
   368ba:	orr.w	lr, r5, r4, lsl #8
   368be:	ldr	r4, [sp, #116]	; 0x74
   368c0:	adds	r2, r4, r2
   368c2:	ldr	r4, [sp, #120]	; 0x78
   368c4:	adc.w	r7, r4, r7
   368c8:	adds.w	r2, r2, ip
   368cc:	str	r2, [sp, #168]	; 0xa8
   368ce:	adc.w	r2, r7, lr
   368d2:	str	r2, [sp, #172]	; 0xac
   368d4:	ldr	r2, [sp, #168]	; 0xa8
   368d6:	eors	r6, r2
   368d8:	ldr	r2, [sp, #172]	; 0xac
   368da:	eors	r1, r2
   368dc:	lsrs	r2, r6, #16
   368de:	orr.w	r2, r2, r1, lsl #16
   368e2:	lsrs	r1, r1, #16
   368e4:	str	r2, [sp, #208]	; 0xd0
   368e6:	orr.w	r2, r1, r6, lsl #16
   368ea:	str	r2, [sp, #212]	; 0xd4
   368ec:	ldr	r2, [sp, #208]	; 0xd0
   368ee:	ldr	r1, [sp, #164]	; 0xa4
   368f0:	adds	r3, r3, r2
   368f2:	str	r3, [sp, #200]	; 0xc8
   368f4:	ldr	r3, [sp, #212]	; 0xd4
   368f6:	adc.w	r3, r0, r3
   368fa:	str	r3, [sp, #204]	; 0xcc
   368fc:	ldr	r2, [sp, #204]	; 0xcc
   368fe:	ldr	r3, [sp, #200]	; 0xc8
   36900:	eor.w	lr, r2, lr
   36904:	eor.w	r3, r3, ip
   36908:	mov.w	r2, lr, lsl #1
   3690c:	orr.w	r2, r2, r3, lsr #31
   36910:	mov.w	ip, r3, lsl #1
   36914:	str	r2, [sp, #244]	; 0xf4
   36916:	orr.w	ip, ip, lr, lsr #31
   3691a:	ldr	r2, [sp, #160]	; 0xa0
   3691c:	ldr	r3, [sp, #100]	; 0x64
   3691e:	adds	r3, r3, r2
   36920:	ldr	r2, [sp, #104]	; 0x68
   36922:	adc.w	lr, r2, r1
   36926:	ldr	r2, [sp, #240]	; 0xf0
   36928:	adds	r3, r3, r2
   3692a:	ldr	r2, [sp, #248]	; 0xf8
   3692c:	adc.w	lr, lr, r2
   36930:	ldr	r2, [sp, #236]	; 0xec
   36932:	eor.w	r6, lr, r2
   36936:	ldr	r2, [sp, #232]	; 0xe8
   36938:	eor.w	r0, r3, r2
   3693c:	ldr	r2, [sp, #176]	; 0xb0
   3693e:	ldr	r1, [sp, #180]	; 0xb4
   36940:	adds	r2, r2, r6
   36942:	adc.w	r5, r1, r0
   36946:	ldr	r1, [sp, #240]	; 0xf0
   36948:	eor.w	r8, r2, r1
   3694c:	ldr	r1, [sp, #248]	; 0xf8
   3694e:	eor.w	r4, r5, r1
   36952:	mov.w	r9, r8, lsr #24
   36956:	orr.w	r1, r9, r4, lsl #8
   3695a:	lsrs	r4, r4, #24
   3695c:	orr.w	r7, r4, r8, lsl #8
   36960:	ldr	r4, [sp, #12]
   36962:	adds	r3, r4, r3
   36964:	ldr	r4, [sp, #16]
   36966:	adc.w	lr, r4, lr
   3696a:	adds	r3, r3, r1
   3696c:	str	r3, [sp, #160]	; 0xa0
   3696e:	adc.w	r3, lr, r7
   36972:	str	r3, [sp, #164]	; 0xa4
   36974:	ldr	r3, [sp, #160]	; 0xa0
   36976:	ldr	r4, [sp, #216]	; 0xd8
   36978:	eors	r6, r3
   3697a:	ldr	r3, [sp, #164]	; 0xa4
   3697c:	eors	r0, r3
   3697e:	lsrs	r3, r6, #16
   36980:	orr.w	r3, r3, r0, lsl #16
   36984:	lsrs	r0, r0, #16
   36986:	str	r3, [sp, #232]	; 0xe8
   36988:	orr.w	r3, r0, r6, lsl #16
   3698c:	str	r3, [sp, #236]	; 0xec
   3698e:	ldr	r3, [sp, #232]	; 0xe8
   36990:	ldr	r0, [sp, #148]	; 0x94
   36992:	adds	r2, r2, r3
   36994:	ldr	r3, [sp, #236]	; 0xec
   36996:	eor.w	r1, r1, r2
   3699a:	adc.w	r5, r3, r5
   3699e:	eors	r7, r5
   369a0:	lsls	r3, r7, #1
   369a2:	orr.w	r3, r3, r1, lsr #31
   369a6:	lsls	r1, r1, #1
   369a8:	str	r3, [sp, #248]	; 0xf8
   369aa:	orr.w	r3, r1, r7, lsr #31
   369ae:	ldr	r1, [sp, #144]	; 0x90
   369b0:	str	r3, [sp, #240]	; 0xf0
   369b2:	ldr	r3, [sp, #28]
   369b4:	adds	r1, r3, r1
   369b6:	ldr	r3, [sp, #32]
   369b8:	adc.w	sl, r3, r0
   369bc:	ldr	r3, [sp, #216]	; 0xd8
   369be:	ldr	r0, [sp, #188]	; 0xbc
   369c0:	adds	r1, r1, r3
   369c2:	ldr	r3, [sp, #256]	; 0x100
   369c4:	adc.w	sl, sl, r3
   369c8:	ldr	r3, [sp, #224]	; 0xe0
   369ca:	eor.w	lr, sl, r3
   369ce:	ldr	r3, [sp, #220]	; 0xdc
   369d0:	eor.w	r6, r1, r3
   369d4:	ldr	r3, [sp, #184]	; 0xb8
   369d6:	adds.w	r3, r3, lr
   369da:	eor.w	r8, r3, r4
   369de:	ldr	r4, [sp, #256]	; 0x100
   369e0:	adcs	r0, r6
   369e2:	eor.w	r7, r0, r4
   369e6:	mov.w	fp, r8, lsr #24
   369ea:	orr.w	r4, fp, r7, lsl #8
   369ee:	lsrs	r7, r7, #24
   369f0:	orr.w	r9, r7, r8, lsl #8
   369f4:	ldr	r7, [sp, #76]	; 0x4c
   369f6:	adds	r1, r7, r1
   369f8:	ldr	r7, [sp, #80]	; 0x50
   369fa:	adc.w	sl, r7, sl
   369fe:	adds	r1, r1, r4
   36a00:	str	r1, [sp, #144]	; 0x90
   36a02:	adc.w	r1, sl, r9
   36a06:	str	r1, [sp, #148]	; 0x94
   36a08:	ldr	r1, [sp, #144]	; 0x90
   36a0a:	eor.w	lr, r1, lr
   36a0e:	ldr	r1, [sp, #148]	; 0x94
   36a10:	eors	r6, r1
   36a12:	mov.w	r1, lr, lsr #16
   36a16:	orr.w	r8, r1, r6, lsl #16
   36a1a:	lsrs	r6, r6, #16
   36a1c:	adds.w	r3, r3, r8
   36a20:	orr.w	sl, r6, lr, lsl #16
   36a24:	adc.w	r0, r0, sl
   36a28:	eors	r4, r3
   36a2a:	eor.w	r9, r0, r9
   36a2e:	ldr	r6, [sp, #156]	; 0x9c
   36a30:	mov.w	r1, r9, lsl #1
   36a34:	orr.w	r1, r1, r4, lsr #31
   36a38:	lsls	r4, r4, #1
   36a3a:	orr.w	fp, r4, r9, lsr #31
   36a3e:	str	r1, [sp, #216]	; 0xd8
   36a40:	ldr	r4, [sp, #152]	; 0x98
   36a42:	ldr	r1, [sp, #44]	; 0x2c
   36a44:	adds	r1, r1, r4
   36a46:	ldr	r4, [sp, #48]	; 0x30
   36a48:	adc.w	r9, r4, r6
   36a4c:	ldr	r4, [sp, #244]	; 0xf4
   36a4e:	adds.w	r1, r1, ip
   36a52:	adc.w	r9, r9, r4
   36a56:	eor.w	r7, r1, r8
   36a5a:	eor.w	lr, r9, sl
   36a5e:	adds.w	r2, r2, lr
   36a62:	adc.w	r5, r7, r5
   36a66:	eor.w	ip, r2, ip
   36a6a:	eor.w	r6, r5, r4
   36a6e:	mov.w	sl, ip, lsr #24
   36a72:	orr.w	r4, sl, r6, lsl #8
   36a76:	lsrs	r6, r6, #24
   36a78:	orr.w	r8, r6, ip, lsl #8
   36a7c:	ldr	r6, [sp, #4]
   36a7e:	adds	r1, r6, r1
   36a80:	ldr	r6, [sp, #8]
   36a82:	adc.w	r9, r6, r9
   36a86:	adds	r1, r1, r4
   36a88:	str	r1, [sp, #152]	; 0x98
   36a8a:	adc.w	r1, r9, r8
   36a8e:	str	r1, [sp, #156]	; 0x9c
   36a90:	ldr	r1, [sp, #152]	; 0x98
   36a92:	eor.w	lr, r1, lr
   36a96:	ldr	r1, [sp, #156]	; 0x9c
   36a98:	eors	r7, r1
   36a9a:	mov.w	r1, lr, lsr #16
   36a9e:	orr.w	r1, r1, r7, lsl #16
   36aa2:	lsrs	r7, r7, #16
   36aa4:	str	r1, [sp, #220]	; 0xdc
   36aa6:	orr.w	r1, r7, lr, lsl #16
   36aaa:	str	r1, [sp, #224]	; 0xe0
   36aac:	ldr	r1, [sp, #220]	; 0xdc
   36aae:	adds	r2, r2, r1
   36ab0:	str	r2, [sp, #176]	; 0xb0
   36ab2:	ldr	r2, [sp, #224]	; 0xe0
   36ab4:	ldr	r1, [sp, #168]	; 0xa8
   36ab6:	adc.w	r2, r5, r2
   36aba:	str	r2, [sp, #180]	; 0xb4
   36abc:	ldr	r2, [sp, #176]	; 0xb0
   36abe:	eors	r4, r2
   36ac0:	ldr	r2, [sp, #180]	; 0xb4
   36ac2:	eor.w	r8, r2, r8
   36ac6:	mov.w	r2, r8, lsl #1
   36aca:	orr.w	r2, r2, r4, lsr #31
   36ace:	lsls	r4, r4, #1
   36ad0:	str	r2, [sp, #252]	; 0xfc
   36ad2:	orr.w	r2, r4, r8, lsr #31
   36ad6:	str	r2, [sp, #244]	; 0xf4
   36ad8:	ldr	r2, [sp, #124]	; 0x7c
   36ada:	ldr	r4, [sp, #172]	; 0xac
   36adc:	adds	r2, r2, r1
   36ade:	ldr	r1, [sp, #128]	; 0x80
   36ae0:	adc.w	r7, r1, r4
   36ae4:	ldr	r1, [sp, #240]	; 0xf0
   36ae6:	adds	r2, r2, r1
   36ae8:	ldr	r1, [sp, #248]	; 0xf8
   36aea:	adc.w	r7, r1, r7
   36aee:	ldr	r1, [sp, #260]	; 0x104
   36af0:	eor.w	r4, r7, r1
   36af4:	ldr	r1, [sp, #228]	; 0xe4
   36af6:	adds	r3, r3, r4
   36af8:	eor.w	r9, r2, r1
   36afc:	ldr	r1, [sp, #240]	; 0xf0
   36afe:	adc.w	r0, r0, r9
   36b02:	eor.w	ip, r3, r1
   36b06:	ldr	r1, [sp, #248]	; 0xf8
   36b08:	eor.w	r5, r0, r1
   36b0c:	mov.w	lr, ip, lsr #24
   36b10:	orr.w	r1, lr, r5, lsl #8
   36b14:	lsrs	r5, r5, #24
   36b16:	orr.w	r6, r5, ip, lsl #8
   36b1a:	ldr	r5, [sp, #36]	; 0x24
   36b1c:	adds	r2, r5, r2
   36b1e:	ldr	r5, [sp, #40]	; 0x28
   36b20:	adc.w	r7, r5, r7
   36b24:	adds	r2, r2, r1
   36b26:	str	r2, [sp, #168]	; 0xa8
   36b28:	adc.w	r2, r7, r6
   36b2c:	str	r2, [sp, #172]	; 0xac
   36b2e:	ldr	r2, [sp, #168]	; 0xa8
   36b30:	eors	r4, r2
   36b32:	ldr	r2, [sp, #172]	; 0xac
   36b34:	eor.w	r2, r2, r9
   36b38:	lsrs	r5, r4, #16
   36b3a:	orr.w	r5, r5, r2, lsl #16
   36b3e:	mov.w	r9, r2, lsr #16
   36b42:	orr.w	r9, r9, r4, lsl #16
   36b46:	adds	r3, r3, r5
   36b48:	str	r3, [sp, #184]	; 0xb8
   36b4a:	adc.w	r3, r0, r9
   36b4e:	str	r3, [sp, #188]	; 0xbc
   36b50:	ldr	r3, [sp, #184]	; 0xb8
   36b52:	ldr	r2, [sp, #160]	; 0xa0
   36b54:	eors	r1, r3
   36b56:	ldr	r3, [sp, #188]	; 0xbc
   36b58:	ldr	r0, [sp, #196]	; 0xc4
   36b5a:	eors	r6, r3
   36b5c:	str	r5, [sp, #228]	; 0xe4
   36b5e:	lsls	r3, r6, #1
   36b60:	orr.w	r3, r3, r1, lsr #31
   36b64:	lsls	r1, r1, #1
   36b66:	str	r3, [sp, #248]	; 0xf8
   36b68:	orr.w	r3, r1, r6, lsr #31
   36b6c:	str	r3, [sp, #240]	; 0xf0
   36b6e:	ldr	r3, [sp, #68]	; 0x44
   36b70:	ldr	r1, [sp, #164]	; 0xa4
   36b72:	adds	r3, r3, r2
   36b74:	ldr	r2, [sp, #72]	; 0x48
   36b76:	adc.w	ip, r2, r1
   36b7a:	ldr	r2, [sp, #216]	; 0xd8
   36b7c:	adds.w	r3, r3, fp
   36b80:	adc.w	ip, ip, r2
   36b84:	ldr	r2, [sp, #212]	; 0xd4
   36b86:	eor.w	r7, ip, r2
   36b8a:	ldr	r2, [sp, #208]	; 0xd0
   36b8c:	eor.w	r1, r3, r2
   36b90:	ldr	r2, [sp, #192]	; 0xc0
   36b92:	adds	r2, r2, r7
   36b94:	adc.w	r5, r0, r1
   36b98:	ldr	r0, [sp, #216]	; 0xd8
   36b9a:	eor.w	fp, r2, fp
   36b9e:	eors	r0, r5
   36ba0:	mov.w	r4, fp, lsr #24
   36ba4:	orr.w	r8, r4, r0, lsl #8
   36ba8:	lsrs	r0, r0, #24
   36baa:	orr.w	r6, r0, fp, lsl #8
   36bae:	ldr	r0, [sp, #52]	; 0x34
   36bb0:	adds	r3, r0, r3
   36bb2:	ldr	r0, [sp, #56]	; 0x38
   36bb4:	adc.w	ip, r0, ip
   36bb8:	adds.w	r3, r3, r8
   36bbc:	str	r3, [sp, #160]	; 0xa0
   36bbe:	adc.w	r3, ip, r6
   36bc2:	str	r3, [sp, #164]	; 0xa4
   36bc4:	ldr	r3, [sp, #160]	; 0xa0
   36bc6:	eors	r7, r3
   36bc8:	ldr	r3, [sp, #164]	; 0xa4
   36bca:	eors	r1, r3
   36bcc:	lsrs	r3, r7, #16
   36bce:	orr.w	r3, r3, r1, lsl #16
   36bd2:	lsrs	r1, r1, #16
   36bd4:	str	r3, [sp, #208]	; 0xd0
   36bd6:	orr.w	r3, r1, r7, lsl #16
   36bda:	str	r3, [sp, #212]	; 0xd4
   36bdc:	ldr	r3, [sp, #208]	; 0xd0
   36bde:	ldr	r1, [sp, #144]	; 0x90
   36be0:	adds	r2, r2, r3
   36be2:	ldr	r3, [sp, #212]	; 0xd4
   36be4:	eor.w	r8, r2, r8
   36be8:	ldr	r0, [sp, #148]	; 0x94
   36bea:	adc.w	r5, r3, r5
   36bee:	ldr	r4, [sp, #264]	; 0x108
   36bf0:	eors	r6, r5
   36bf2:	lsls	r3, r6, #1
   36bf4:	orr.w	r3, r3, r8, lsr #31
   36bf8:	mov.w	r8, r8, lsl #1
   36bfc:	str	r3, [sp, #256]	; 0x100
   36bfe:	orr.w	r3, r8, r6, lsr #31
   36c02:	str	r3, [sp, #216]	; 0xd8
   36c04:	ldr	r3, [sp, #20]
   36c06:	adds	r1, r3, r1
   36c08:	ldr	r3, [sp, #24]
   36c0a:	adc.w	sl, r3, r0
   36c0e:	ldr	r3, [sp, #264]	; 0x108
   36c10:	ldr	r0, [sp, #204]	; 0xcc
   36c12:	adds	r1, r1, r3
   36c14:	ldr	r3, [sp, #268]	; 0x10c
   36c16:	adc.w	sl, sl, r3
   36c1a:	ldr	r3, [sp, #236]	; 0xec
   36c1c:	eor.w	lr, sl, r3
   36c20:	ldr	r3, [sp, #232]	; 0xe8
   36c22:	eor.w	r7, r1, r3
   36c26:	ldr	r3, [sp, #200]	; 0xc8
   36c28:	adds.w	r3, r3, lr
   36c2c:	eor.w	r6, r3, r4
   36c30:	ldr	r4, [sp, #268]	; 0x10c
   36c32:	adcs	r0, r7
   36c34:	eor.w	ip, r0, r4
   36c38:	mov.w	fp, r6, lsr #24
   36c3c:	orr.w	r4, fp, ip, lsl #8
   36c40:	mov.w	ip, ip, lsr #24
   36c44:	orr.w	r8, ip, r6, lsl #8
   36c48:	ldr	r6, [sp, #84]	; 0x54
   36c4a:	adds	r1, r6, r1
   36c4c:	ldr	r6, [sp, #88]	; 0x58
   36c4e:	adc.w	sl, r6, sl
   36c52:	adds	r1, r1, r4
   36c54:	str	r1, [sp, #144]	; 0x90
   36c56:	adc.w	r1, sl, r8
   36c5a:	str	r1, [sp, #148]	; 0x94
   36c5c:	ldr	r1, [sp, #144]	; 0x90
   36c5e:	eor.w	lr, r1, lr
   36c62:	ldr	r1, [sp, #148]	; 0x94
   36c64:	eors	r7, r1
   36c66:	mov.w	r1, lr, lsr #16
   36c6a:	orr.w	r1, r1, r7, lsl #16
   36c6e:	lsrs	r7, r7, #16
   36c70:	str	r1, [sp, #232]	; 0xe8
   36c72:	orr.w	r1, r7, lr, lsl #16
   36c76:	str	r1, [sp, #236]	; 0xec
   36c78:	ldr	r1, [sp, #232]	; 0xe8
   36c7a:	ldr	r7, [sp, #156]	; 0x9c
   36c7c:	adds	r3, r3, r1
   36c7e:	ldr	r1, [sp, #236]	; 0xec
   36c80:	eor.w	r4, r4, r3
   36c84:	adc.w	r0, r1, r0
   36c88:	eor.w	r8, r0, r8
   36c8c:	mov.w	r1, r8, lsl #1
   36c90:	orr.w	r6, r1, r4, lsr #31
   36c94:	lsls	r4, r4, #1
   36c96:	orr.w	fp, r4, r8, lsr #31
   36c9a:	ldr	r1, [sp, #52]	; 0x34
   36c9c:	ldr	r4, [sp, #152]	; 0x98
   36c9e:	adds	r1, r1, r4
   36ca0:	ldr	r4, [sp, #56]	; 0x38
   36ca2:	adc.w	sl, r4, r7
   36ca6:	adds.w	r1, r1, fp
   36caa:	adc.w	sl, sl, r6
   36cae:	ldr	r4, [sp, #228]	; 0xe4
   36cb0:	eor.w	lr, sl, r9
   36cb4:	adds.w	r2, r2, lr
   36cb8:	eor.w	r7, r1, r4
   36cbc:	adc.w	r5, r7, r5
   36cc0:	eor.w	fp, r2, fp
   36cc4:	eor.w	ip, r5, r6
   36cc8:	mov.w	r4, fp, lsr #24
   36ccc:	orr.w	r6, r4, ip, lsl #8
   36cd0:	ldr	r4, [sp, #124]	; 0x7c
   36cd2:	mov.w	ip, ip, lsr #24
   36cd6:	adds	r1, r4, r1
   36cd8:	ldr	r4, [sp, #128]	; 0x80
   36cda:	orr.w	r8, ip, fp, lsl #8
   36cde:	adc.w	sl, r4, sl
   36ce2:	adds	r1, r1, r6
   36ce4:	str	r1, [sp, #152]	; 0x98
   36ce6:	adc.w	r1, sl, r8
   36cea:	str	r1, [sp, #156]	; 0x9c
   36cec:	ldr	r1, [sp, #152]	; 0x98
   36cee:	ldr	r4, [sp, #172]	; 0xac
   36cf0:	eor.w	lr, r1, lr
   36cf4:	ldr	r1, [sp, #156]	; 0x9c
   36cf6:	eors	r7, r1
   36cf8:	mov.w	r1, lr, lsr #16
   36cfc:	orr.w	r1, r1, r7, lsl #16
   36d00:	lsrs	r7, r7, #16
   36d02:	str	r1, [sp, #228]	; 0xe4
   36d04:	orr.w	r1, r7, lr, lsl #16
   36d08:	str	r1, [sp, #260]	; 0x104
   36d0a:	ldr	r1, [sp, #228]	; 0xe4
   36d0c:	adds	r2, r2, r1
   36d0e:	str	r2, [sp, #192]	; 0xc0
   36d10:	ldr	r2, [sp, #260]	; 0x104
   36d12:	ldr	r1, [sp, #168]	; 0xa8
   36d14:	adc.w	r2, r5, r2
   36d18:	str	r2, [sp, #196]	; 0xc4
   36d1a:	ldr	r2, [sp, #192]	; 0xc0
   36d1c:	ldr	r5, [sp, #252]	; 0xfc
   36d1e:	eors	r6, r2
   36d20:	ldr	r2, [sp, #196]	; 0xc4
   36d22:	eor.w	r8, r2, r8
   36d26:	mov.w	r2, r8, lsl #1
   36d2a:	orr.w	r2, r2, r6, lsr #31
   36d2e:	lsls	r6, r6, #1
   36d30:	str	r2, [sp, #268]	; 0x10c
   36d32:	orr.w	r2, r6, r8, lsr #31
   36d36:	str	r2, [sp, #264]	; 0x108
   36d38:	ldr	r2, [sp, #116]	; 0x74
   36d3a:	adds	r2, r2, r1
   36d3c:	ldr	r1, [sp, #120]	; 0x78
   36d3e:	adc.w	r7, r1, r4
   36d42:	ldr	r1, [sp, #244]	; 0xf4
   36d44:	ldr	r4, [sp, #244]	; 0xf4
   36d46:	adds	r2, r2, r1
   36d48:	ldr	r1, [sp, #252]	; 0xfc
   36d4a:	adc.w	r7, r1, r7
   36d4e:	ldr	r1, [sp, #212]	; 0xd4
   36d50:	eor.w	r6, r7, r1
   36d54:	ldr	r1, [sp, #208]	; 0xd0
   36d56:	adds	r3, r3, r6
   36d58:	eor.w	r1, r2, r1
   36d5c:	eor.w	r4, r3, r4
   36d60:	adc.w	r0, r1, r0
   36d64:	eors	r5, r0
   36d66:	mov.w	r8, r4, lsr #24
   36d6a:	orr.w	ip, r8, r5, lsl #8
   36d6e:	lsrs	r5, r5, #24
   36d70:	orr.w	lr, r5, r4, lsl #8
   36d74:	ldr	r4, [sp, #76]	; 0x4c
   36d76:	adds	r2, r4, r2
   36d78:	ldr	r4, [sp, #80]	; 0x50
   36d7a:	adc.w	r7, r4, r7
   36d7e:	adds.w	r2, r2, ip
   36d82:	str	r2, [sp, #168]	; 0xa8
   36d84:	adc.w	r2, r7, lr
   36d88:	str	r2, [sp, #172]	; 0xac
   36d8a:	ldr	r2, [sp, #168]	; 0xa8
   36d8c:	eors	r6, r2
   36d8e:	ldr	r2, [sp, #172]	; 0xac
   36d90:	eors	r1, r2
   36d92:	lsrs	r2, r6, #16
   36d94:	orr.w	r2, r2, r1, lsl #16
   36d98:	lsrs	r1, r1, #16
   36d9a:	str	r2, [sp, #208]	; 0xd0
   36d9c:	orr.w	r2, r1, r6, lsl #16
   36da0:	str	r2, [sp, #212]	; 0xd4
   36da2:	ldr	r2, [sp, #208]	; 0xd0
   36da4:	ldr	r1, [sp, #164]	; 0xa4
   36da6:	adds	r3, r3, r2
   36da8:	str	r3, [sp, #200]	; 0xc8
   36daa:	ldr	r3, [sp, #212]	; 0xd4
   36dac:	adc.w	r3, r0, r3
   36db0:	str	r3, [sp, #204]	; 0xcc
   36db2:	ldr	r2, [sp, #204]	; 0xcc
   36db4:	ldr	r3, [sp, #200]	; 0xc8
   36db6:	eor.w	lr, r2, lr
   36dba:	eor.w	r3, r3, ip
   36dbe:	mov.w	r2, lr, lsl #1
   36dc2:	orr.w	r2, r2, r3, lsr #31
   36dc6:	mov.w	ip, r3, lsl #1
   36dca:	str	r2, [sp, #244]	; 0xf4
   36dcc:	orr.w	ip, ip, lr, lsr #31
   36dd0:	ldr	r2, [sp, #160]	; 0xa0
   36dd2:	ldr	r3, [sp, #92]	; 0x5c
   36dd4:	adds	r3, r3, r2
   36dd6:	ldr	r2, [sp, #96]	; 0x60
   36dd8:	adc.w	lr, r2, r1
   36ddc:	ldr	r2, [sp, #240]	; 0xf0
   36dde:	ldr	r1, [sp, #180]	; 0xb4
   36de0:	adds	r3, r3, r2
   36de2:	ldr	r2, [sp, #248]	; 0xf8
   36de4:	adc.w	lr, lr, r2
   36de8:	ldr	r2, [sp, #236]	; 0xec
   36dea:	eor.w	r6, lr, r2
   36dee:	ldr	r2, [sp, #232]	; 0xe8
   36df0:	eor.w	r0, r3, r2
   36df4:	ldr	r2, [sp, #176]	; 0xb0
   36df6:	adds	r2, r2, r6
   36df8:	adc.w	r5, r1, r0
   36dfc:	ldr	r1, [sp, #240]	; 0xf0
   36dfe:	eor.w	r8, r2, r1
   36e02:	ldr	r1, [sp, #248]	; 0xf8
   36e04:	eor.w	r4, r5, r1
   36e08:	mov.w	r9, r8, lsr #24
   36e0c:	orr.w	r1, r9, r4, lsl #8
   36e10:	lsrs	r4, r4, #24
   36e12:	orr.w	r7, r4, r8, lsl #8
   36e16:	ldr	r4, [sp, #28]
   36e18:	adds	r3, r4, r3
   36e1a:	ldr	r4, [sp, #32]
   36e1c:	adc.w	lr, r4, lr
   36e20:	adds	r3, r3, r1
   36e22:	str	r3, [sp, #160]	; 0xa0
   36e24:	adc.w	r3, lr, r7
   36e28:	str	r3, [sp, #164]	; 0xa4
   36e2a:	ldr	r3, [sp, #160]	; 0xa0
   36e2c:	eors	r6, r3
   36e2e:	ldr	r3, [sp, #164]	; 0xa4
   36e30:	eors	r0, r3
   36e32:	lsrs	r3, r6, #16
   36e34:	orr.w	r3, r3, r0, lsl #16
   36e38:	lsrs	r0, r0, #16
   36e3a:	str	r3, [sp, #232]	; 0xe8
   36e3c:	orr.w	r3, r0, r6, lsl #16
   36e40:	str	r3, [sp, #236]	; 0xec
   36e42:	ldr	r3, [sp, #232]	; 0xe8
   36e44:	adds	r2, r2, r3
   36e46:	ldr	r3, [sp, #236]	; 0xec
   36e48:	eor.w	r1, r1, r2
   36e4c:	adc.w	r5, r3, r5
   36e50:	eors	r7, r5
   36e52:	lsls	r3, r7, #1
   36e54:	orr.w	r3, r3, r1, lsr #31
   36e58:	lsls	r1, r1, #1
   36e5a:	str	r3, [sp, #248]	; 0xf8
   36e5c:	orr.w	r3, r1, r7, lsr #31
   36e60:	str	r3, [sp, #240]	; 0xf0
   36e62:	ldr	r3, [sp, #4]
   36e64:	ldr	r1, [sp, #144]	; 0x90
   36e66:	ldr	r0, [sp, #148]	; 0x94
   36e68:	adds	r1, r3, r1
   36e6a:	ldr	r3, [sp, #8]
   36e6c:	ldr	r4, [sp, #216]	; 0xd8
   36e6e:	adc.w	sl, r3, r0
   36e72:	ldr	r3, [sp, #216]	; 0xd8
   36e74:	ldr	r0, [sp, #188]	; 0xbc
   36e76:	adds	r1, r1, r3
   36e78:	ldr	r3, [sp, #256]	; 0x100
   36e7a:	adc.w	sl, sl, r3
   36e7e:	ldr	r3, [sp, #224]	; 0xe0
   36e80:	eor.w	lr, sl, r3
   36e84:	ldr	r3, [sp, #220]	; 0xdc
   36e86:	eor.w	r6, r1, r3
   36e8a:	ldr	r3, [sp, #184]	; 0xb8
   36e8c:	adds.w	r3, r3, lr
   36e90:	eor.w	r8, r3, r4
   36e94:	ldr	r4, [sp, #256]	; 0x100
   36e96:	adcs	r0, r6
   36e98:	eor.w	r7, r0, r4
   36e9c:	mov.w	fp, r8, lsr #24
   36ea0:	orr.w	r4, fp, r7, lsl #8
   36ea4:	lsrs	r7, r7, #24
   36ea6:	orr.w	r9, r7, r8, lsl #8
   36eaa:	ldr	r7, [sp, #68]	; 0x44
   36eac:	adds	r1, r7, r1
   36eae:	ldr	r7, [sp, #72]	; 0x48
   36eb0:	adc.w	sl, r7, sl
   36eb4:	adds	r1, r1, r4
   36eb6:	str	r1, [sp, #144]	; 0x90
   36eb8:	adc.w	r1, sl, r9
   36ebc:	str	r1, [sp, #148]	; 0x94
   36ebe:	ldr	r1, [sp, #144]	; 0x90
   36ec0:	eor.w	lr, r1, lr
   36ec4:	ldr	r1, [sp, #148]	; 0x94
   36ec6:	eors	r6, r1
   36ec8:	mov.w	r1, lr, lsr #16
   36ecc:	orr.w	r8, r1, r6, lsl #16
   36ed0:	lsrs	r6, r6, #16
   36ed2:	adds.w	r3, r3, r8
   36ed6:	orr.w	sl, r6, lr, lsl #16
   36eda:	adc.w	r0, r0, sl
   36ede:	eors	r4, r3
   36ee0:	eor.w	r9, r0, r9
   36ee4:	ldr	r6, [sp, #156]	; 0x9c
   36ee6:	mov.w	r1, r9, lsl #1
   36eea:	orr.w	r1, r1, r4, lsr #31
   36eee:	lsls	r4, r4, #1
   36ef0:	orr.w	fp, r4, r9, lsr #31
   36ef4:	str	r1, [sp, #216]	; 0xd8
   36ef6:	ldr	r4, [sp, #152]	; 0x98
   36ef8:	ldr	r1, [sp, #100]	; 0x64
   36efa:	adds	r1, r1, r4
   36efc:	ldr	r4, [sp, #104]	; 0x68
   36efe:	adc.w	r9, r4, r6
   36f02:	ldr	r4, [sp, #244]	; 0xf4
   36f04:	adds.w	r1, r1, ip
   36f08:	adc.w	r9, r9, r4
   36f0c:	eor.w	r7, r1, r8
   36f10:	eor.w	lr, r9, sl
   36f14:	adds.w	r2, r2, lr
   36f18:	adc.w	r5, r7, r5
   36f1c:	eor.w	ip, r2, ip
   36f20:	eor.w	r6, r5, r4
   36f24:	mov.w	sl, ip, lsr #24
   36f28:	orr.w	r4, sl, r6, lsl #8
   36f2c:	lsrs	r6, r6, #24
   36f2e:	orr.w	r8, r6, ip, lsl #8
   36f32:	ldr	r6, [sp, #20]
   36f34:	adds	r1, r6, r1
   36f36:	ldr	r6, [sp, #24]
   36f38:	adc.w	r9, r6, r9
   36f3c:	adds	r1, r1, r4
   36f3e:	str	r1, [sp, #152]	; 0x98
   36f40:	adc.w	r1, r9, r8
   36f44:	str	r1, [sp, #156]	; 0x9c
   36f46:	ldr	r1, [sp, #152]	; 0x98
   36f48:	eor.w	lr, r1, lr
   36f4c:	ldr	r1, [sp, #156]	; 0x9c
   36f4e:	eors	r7, r1
   36f50:	mov.w	r1, lr, lsr #16
   36f54:	orr.w	r1, r1, r7, lsl #16
   36f58:	lsrs	r7, r7, #16
   36f5a:	str	r1, [sp, #220]	; 0xdc
   36f5c:	orr.w	r1, r7, lr, lsl #16
   36f60:	str	r1, [sp, #224]	; 0xe0
   36f62:	ldr	r1, [sp, #220]	; 0xdc
   36f64:	adds	r2, r2, r1
   36f66:	str	r2, [sp, #176]	; 0xb0
   36f68:	ldr	r2, [sp, #224]	; 0xe0
   36f6a:	ldr	r1, [sp, #168]	; 0xa8
   36f6c:	adc.w	r2, r5, r2
   36f70:	str	r2, [sp, #180]	; 0xb4
   36f72:	ldr	r2, [sp, #176]	; 0xb0
   36f74:	eors	r4, r2
   36f76:	ldr	r2, [sp, #180]	; 0xb4
   36f78:	eor.w	r8, r2, r8
   36f7c:	mov.w	r2, r8, lsl #1
   36f80:	orr.w	r2, r2, r4, lsr #31
   36f84:	lsls	r4, r4, #1
   36f86:	str	r2, [sp, #252]	; 0xfc
   36f88:	orr.w	r2, r4, r8, lsr #31
   36f8c:	str	r2, [sp, #244]	; 0xf4
   36f8e:	ldr	r2, [sp, #108]	; 0x6c
   36f90:	ldr	r4, [sp, #172]	; 0xac
   36f92:	adds	r2, r2, r1
   36f94:	ldr	r1, [sp, #112]	; 0x70
   36f96:	adc.w	r7, r1, r4
   36f9a:	ldr	r1, [sp, #240]	; 0xf0
   36f9c:	adds	r2, r2, r1
   36f9e:	ldr	r1, [sp, #248]	; 0xf8
   36fa0:	adc.w	r7, r1, r7
   36fa4:	ldr	r1, [sp, #260]	; 0x104
   36fa6:	eor.w	r4, r7, r1
   36faa:	ldr	r1, [sp, #228]	; 0xe4
   36fac:	adds	r3, r3, r4
   36fae:	eor.w	r9, r2, r1
   36fb2:	ldr	r1, [sp, #240]	; 0xf0
   36fb4:	adc.w	r0, r0, r9
   36fb8:	eor.w	ip, r3, r1
   36fbc:	ldr	r1, [sp, #248]	; 0xf8
   36fbe:	eor.w	r5, r0, r1
   36fc2:	mov.w	lr, ip, lsr #24
   36fc6:	orr.w	r1, lr, r5, lsl #8
   36fca:	lsrs	r5, r5, #24
   36fcc:	orr.w	r6, r5, ip, lsl #8
   36fd0:	ldr	r5, [sp, #60]	; 0x3c
   36fd2:	adds	r2, r5, r2
   36fd4:	ldr	r5, [sp, #64]	; 0x40
   36fd6:	adc.w	r7, r5, r7
   36fda:	adds	r2, r2, r1
   36fdc:	str	r2, [sp, #168]	; 0xa8
   36fde:	adc.w	r2, r7, r6
   36fe2:	str	r2, [sp, #172]	; 0xac
   36fe4:	ldr	r2, [sp, #168]	; 0xa8
   36fe6:	eors	r4, r2
   36fe8:	ldr	r2, [sp, #172]	; 0xac
   36fea:	eor.w	r2, r2, r9
   36fee:	lsrs	r5, r4, #16
   36ff0:	orr.w	r5, r5, r2, lsl #16
   36ff4:	mov.w	r9, r2, lsr #16
   36ff8:	orr.w	r9, r9, r4, lsl #16
   36ffc:	adds	r3, r3, r5
   36ffe:	str	r3, [sp, #184]	; 0xb8
   37000:	adc.w	r3, r0, r9
   37004:	str	r3, [sp, #188]	; 0xbc
   37006:	ldr	r3, [sp, #184]	; 0xb8
   37008:	ldr	r2, [sp, #160]	; 0xa0
   3700a:	eors	r1, r3
   3700c:	ldr	r3, [sp, #188]	; 0xbc
   3700e:	str	r5, [sp, #228]	; 0xe4
   37010:	eors	r6, r3
   37012:	lsls	r3, r6, #1
   37014:	orr.w	r3, r3, r1, lsr #31
   37018:	lsls	r1, r1, #1
   3701a:	str	r3, [sp, #248]	; 0xf8
   3701c:	orr.w	r3, r1, r6, lsr #31
   37020:	str	r3, [sp, #240]	; 0xf0
   37022:	ldr	r3, [sp, #12]
   37024:	adds	r3, r3, r2
   37026:	ldr	r2, [sp, #16]
   37028:	ldr	r1, [sp, #164]	; 0xa4
   3702a:	ldr	r0, [sp, #196]	; 0xc4
   3702c:	adc.w	ip, r2, r1
   37030:	ldr	r2, [sp, #216]	; 0xd8
   37032:	adds.w	r3, r3, fp
   37036:	adc.w	ip, ip, r2
   3703a:	ldr	r2, [sp, #212]	; 0xd4
   3703c:	eor.w	r7, ip, r2
   37040:	ldr	r2, [sp, #208]	; 0xd0
   37042:	eor.w	r1, r3, r2
   37046:	ldr	r2, [sp, #192]	; 0xc0
   37048:	adds	r2, r2, r7
   3704a:	adc.w	r5, r0, r1
   3704e:	ldr	r0, [sp, #216]	; 0xd8
   37050:	eor.w	fp, r2, fp
   37054:	eors	r0, r5
   37056:	mov.w	r4, fp, lsr #24
   3705a:	orr.w	r8, r4, r0, lsl #8
   3705e:	lsrs	r0, r0, #24
   37060:	orr.w	r6, r0, fp, lsl #8
   37064:	ldr	r0, [sp, #36]	; 0x24
   37066:	ldr	r4, [sp, #264]	; 0x108
   37068:	adds	r3, r0, r3
   3706a:	ldr	r0, [sp, #40]	; 0x28
   3706c:	adc.w	ip, r0, ip
   37070:	adds.w	r3, r3, r8
   37074:	str	r3, [sp, #160]	; 0xa0
   37076:	adc.w	r3, ip, r6
   3707a:	str	r3, [sp, #164]	; 0xa4
   3707c:	ldr	r3, [sp, #160]	; 0xa0
   3707e:	ldr	r0, [sp, #148]	; 0x94
   37080:	eors	r7, r3
   37082:	ldr	r3, [sp, #164]	; 0xa4
   37084:	eors	r1, r3
   37086:	lsrs	r3, r7, #16
   37088:	orr.w	r3, r3, r1, lsl #16
   3708c:	lsrs	r1, r1, #16
   3708e:	str	r3, [sp, #208]	; 0xd0
   37090:	orr.w	r3, r1, r7, lsl #16
   37094:	str	r3, [sp, #212]	; 0xd4
   37096:	ldr	r3, [sp, #208]	; 0xd0
   37098:	ldr	r1, [sp, #144]	; 0x90
   3709a:	adds	r2, r2, r3
   3709c:	ldr	r3, [sp, #212]	; 0xd4
   3709e:	eor.w	r8, r2, r8
   370a2:	adc.w	r5, r3, r5
   370a6:	eors	r6, r5
   370a8:	lsls	r3, r6, #1
   370aa:	orr.w	r3, r3, r8, lsr #31
   370ae:	mov.w	r8, r8, lsl #1
   370b2:	str	r3, [sp, #256]	; 0x100
   370b4:	orr.w	r3, r8, r6, lsr #31
   370b8:	str	r3, [sp, #216]	; 0xd8
   370ba:	ldr	r3, [sp, #84]	; 0x54
   370bc:	adds	r1, r3, r1
   370be:	ldr	r3, [sp, #88]	; 0x58
   370c0:	adc.w	sl, r3, r0
   370c4:	ldr	r3, [sp, #264]	; 0x108
   370c6:	ldr	r0, [sp, #204]	; 0xcc
   370c8:	adds	r1, r1, r3
   370ca:	ldr	r3, [sp, #268]	; 0x10c
   370cc:	adc.w	sl, sl, r3
   370d0:	ldr	r3, [sp, #236]	; 0xec
   370d2:	eor.w	lr, sl, r3
   370d6:	ldr	r3, [sp, #232]	; 0xe8
   370d8:	eor.w	r7, r1, r3
   370dc:	ldr	r3, [sp, #200]	; 0xc8
   370de:	adds.w	r3, r3, lr
   370e2:	eor.w	r6, r3, r4
   370e6:	ldr	r4, [sp, #268]	; 0x10c
   370e8:	adcs	r0, r7
   370ea:	eor.w	ip, r0, r4
   370ee:	mov.w	fp, r6, lsr #24
   370f2:	orr.w	r4, fp, ip, lsl #8
   370f6:	mov.w	ip, ip, lsr #24
   370fa:	orr.w	r8, ip, r6, lsl #8
   370fe:	ldr	r6, [sp, #44]	; 0x2c
   37100:	adds	r1, r6, r1
   37102:	ldr	r6, [sp, #48]	; 0x30
   37104:	adc.w	sl, r6, sl
   37108:	adds	r1, r1, r4
   3710a:	str	r1, [sp, #144]	; 0x90
   3710c:	adc.w	r1, sl, r8
   37110:	str	r1, [sp, #148]	; 0x94
   37112:	ldr	r1, [sp, #144]	; 0x90
   37114:	eor.w	lr, r1, lr
   37118:	ldr	r1, [sp, #148]	; 0x94
   3711a:	eors	r7, r1
   3711c:	mov.w	r1, lr, lsr #16
   37120:	orr.w	r1, r1, r7, lsl #16
   37124:	lsrs	r7, r7, #16
   37126:	str	r1, [sp, #232]	; 0xe8
   37128:	orr.w	r1, r7, lr, lsl #16
   3712c:	str	r1, [sp, #236]	; 0xec
   3712e:	ldr	r1, [sp, #232]	; 0xe8
   37130:	ldr	r7, [sp, #156]	; 0x9c
   37132:	adds	r3, r3, r1
   37134:	ldr	r1, [sp, #236]	; 0xec
   37136:	eor.w	r4, r4, r3
   3713a:	adc.w	r0, r1, r0
   3713e:	eor.w	r8, r0, r8
   37142:	mov.w	r1, r8, lsl #1
   37146:	orr.w	r6, r1, r4, lsr #31
   3714a:	lsls	r4, r4, #1
   3714c:	orr.w	fp, r4, r8, lsr #31
   37150:	ldr	r1, [sp, #84]	; 0x54
   37152:	ldr	r4, [sp, #152]	; 0x98
   37154:	adds	r1, r1, r4
   37156:	ldr	r4, [sp, #88]	; 0x58
   37158:	adc.w	sl, r4, r7
   3715c:	adds.w	r1, r1, fp
   37160:	ldr	r4, [sp, #228]	; 0xe4
   37162:	adc.w	sl, sl, r6
   37166:	eor.w	lr, sl, r9
   3716a:	adds.w	r2, r2, lr
   3716e:	eor.w	r7, r1, r4
   37172:	adc.w	r5, r7, r5
   37176:	eor.w	fp, r2, fp
   3717a:	eor.w	ip, r5, r6
   3717e:	mov.w	r4, fp, lsr #24
   37182:	orr.w	r6, r4, ip, lsl #8
   37186:	ldr	r4, [sp, #20]
   37188:	mov.w	ip, ip, lsr #24
   3718c:	adds	r1, r4, r1
   3718e:	ldr	r4, [sp, #24]
   37190:	orr.w	r8, ip, fp, lsl #8
   37194:	adc.w	sl, r4, sl
   37198:	adds	r1, r1, r6
   3719a:	str	r1, [sp, #152]	; 0x98
   3719c:	adc.w	r1, sl, r8
   371a0:	str	r1, [sp, #156]	; 0x9c
   371a2:	ldr	r1, [sp, #152]	; 0x98
   371a4:	eor.w	lr, r1, lr
   371a8:	ldr	r1, [sp, #156]	; 0x9c
   371aa:	eors	r7, r1
   371ac:	mov.w	r1, lr, lsr #16
   371b0:	orr.w	r1, r1, r7, lsl #16
   371b4:	lsrs	r7, r7, #16
   371b6:	str	r1, [sp, #228]	; 0xe4
   371b8:	orr.w	r1, r7, lr, lsl #16
   371bc:	str	r1, [sp, #260]	; 0x104
   371be:	ldr	r1, [sp, #228]	; 0xe4
   371c0:	adds	r2, r2, r1
   371c2:	str	r2, [sp, #192]	; 0xc0
   371c4:	ldr	r2, [sp, #260]	; 0x104
   371c6:	ldr	r1, [sp, #168]	; 0xa8
   371c8:	adc.w	r2, r5, r2
   371cc:	str	r2, [sp, #196]	; 0xc4
   371ce:	ldr	r2, [sp, #192]	; 0xc0
   371d0:	eors	r6, r2
   371d2:	ldr	r2, [sp, #196]	; 0xc4
   371d4:	eor.w	r8, r2, r8
   371d8:	mov.w	r2, r8, lsl #1
   371dc:	orr.w	r2, r2, r6, lsr #31
   371e0:	lsls	r6, r6, #1
   371e2:	str	r2, [sp, #268]	; 0x10c
   371e4:	orr.w	r2, r6, r8, lsr #31
   371e8:	str	r2, [sp, #264]	; 0x108
   371ea:	ldr	r2, [sp, #68]	; 0x44
   371ec:	adds	r2, r2, r1
   371ee:	ldr	r1, [sp, #72]	; 0x48
   371f0:	ldr	r4, [sp, #172]	; 0xac
   371f2:	ldr	r5, [sp, #252]	; 0xfc
   371f4:	adc.w	r7, r1, r4
   371f8:	ldr	r1, [sp, #244]	; 0xf4
   371fa:	ldr	r4, [sp, #244]	; 0xf4
   371fc:	adds	r2, r2, r1
   371fe:	ldr	r1, [sp, #252]	; 0xfc
   37200:	adc.w	r7, r1, r7
   37204:	ldr	r1, [sp, #212]	; 0xd4
   37206:	eor.w	r6, r7, r1
   3720a:	ldr	r1, [sp, #208]	; 0xd0
   3720c:	adds	r3, r3, r6
   3720e:	eor.w	r1, r2, r1
   37212:	eor.w	r4, r3, r4
   37216:	adc.w	r0, r1, r0
   3721a:	eors	r5, r0
   3721c:	mov.w	r8, r4, lsr #24
   37220:	orr.w	ip, r8, r5, lsl #8
   37224:	lsrs	r5, r5, #24
   37226:	orr.w	lr, r5, r4, lsl #8
   3722a:	ldr	r4, [sp, #36]	; 0x24
   3722c:	adds	r2, r4, r2
   3722e:	ldr	r4, [sp, #40]	; 0x28
   37230:	adc.w	r7, r4, r7
   37234:	adds.w	r2, r2, ip
   37238:	str	r2, [sp, #168]	; 0xa8
   3723a:	adc.w	r2, r7, lr
   3723e:	str	r2, [sp, #172]	; 0xac
   37240:	ldr	r2, [sp, #168]	; 0xa8
   37242:	eors	r6, r2
   37244:	ldr	r2, [sp, #172]	; 0xac
   37246:	eors	r1, r2
   37248:	lsrs	r2, r6, #16
   3724a:	orr.w	r2, r2, r1, lsl #16
   3724e:	lsrs	r1, r1, #16
   37250:	str	r2, [sp, #208]	; 0xd0
   37252:	orr.w	r2, r1, r6, lsl #16
   37256:	str	r2, [sp, #212]	; 0xd4
   37258:	ldr	r2, [sp, #208]	; 0xd0
   3725a:	ldr	r1, [sp, #164]	; 0xa4
   3725c:	adds	r3, r3, r2
   3725e:	str	r3, [sp, #200]	; 0xc8
   37260:	ldr	r3, [sp, #212]	; 0xd4
   37262:	adc.w	r3, r0, r3
   37266:	str	r3, [sp, #204]	; 0xcc
   37268:	ldr	r2, [sp, #204]	; 0xcc
   3726a:	ldr	r3, [sp, #200]	; 0xc8
   3726c:	eor.w	lr, r2, lr
   37270:	eor.w	r3, r3, ip
   37274:	mov.w	r2, lr, lsl #1
   37278:	orr.w	r2, r2, r3, lsr #31
   3727c:	mov.w	ip, r3, lsl #1
   37280:	str	r2, [sp, #244]	; 0xf4
   37282:	orr.w	ip, ip, lr, lsr #31
   37286:	ldr	r2, [sp, #160]	; 0xa0
   37288:	ldr	r3, [sp, #60]	; 0x3c
   3728a:	adds	r3, r3, r2
   3728c:	ldr	r2, [sp, #64]	; 0x40
   3728e:	adc.w	lr, r2, r1
   37292:	ldr	r2, [sp, #240]	; 0xf0
   37294:	adds	r3, r3, r2
   37296:	ldr	r2, [sp, #248]	; 0xf8
   37298:	adc.w	lr, lr, r2
   3729c:	ldr	r2, [sp, #236]	; 0xec
   3729e:	eor.w	r6, lr, r2
   372a2:	ldr	r2, [sp, #232]	; 0xe8
   372a4:	eor.w	r0, r3, r2
   372a8:	ldr	r2, [sp, #176]	; 0xb0
   372aa:	ldr	r1, [sp, #180]	; 0xb4
   372ac:	adds	r2, r2, r6
   372ae:	adc.w	r5, r1, r0
   372b2:	ldr	r1, [sp, #240]	; 0xf0
   372b4:	eor.w	r8, r2, r1
   372b8:	ldr	r1, [sp, #248]	; 0xf8
   372ba:	eor.w	r4, r5, r1
   372be:	mov.w	r9, r8, lsr #24
   372c2:	orr.w	r1, r9, r4, lsl #8
   372c6:	lsrs	r4, r4, #24
   372c8:	orr.w	r7, r4, r8, lsl #8
   372cc:	ldr	r4, [sp, #52]	; 0x34
   372ce:	adds	r3, r4, r3
   372d0:	ldr	r4, [sp, #56]	; 0x38
   372d2:	adc.w	lr, r4, lr
   372d6:	adds	r3, r3, r1
   372d8:	str	r3, [sp, #160]	; 0xa0
   372da:	adc.w	r3, lr, r7
   372de:	str	r3, [sp, #164]	; 0xa4
   372e0:	ldr	r3, [sp, #160]	; 0xa0
   372e2:	ldr	r4, [sp, #216]	; 0xd8
   372e4:	eors	r6, r3
   372e6:	ldr	r3, [sp, #164]	; 0xa4
   372e8:	eors	r0, r3
   372ea:	lsrs	r3, r6, #16
   372ec:	orr.w	r3, r3, r0, lsl #16
   372f0:	lsrs	r0, r0, #16
   372f2:	str	r3, [sp, #232]	; 0xe8
   372f4:	orr.w	r3, r0, r6, lsl #16
   372f8:	str	r3, [sp, #236]	; 0xec
   372fa:	ldr	r3, [sp, #232]	; 0xe8
   372fc:	ldr	r0, [sp, #148]	; 0x94
   372fe:	adds	r2, r2, r3
   37300:	ldr	r3, [sp, #236]	; 0xec
   37302:	eor.w	r1, r1, r2
   37306:	adc.w	r5, r3, r5
   3730a:	eors	r7, r5
   3730c:	lsls	r3, r7, #1
   3730e:	orr.w	r3, r3, r1, lsr #31
   37312:	lsls	r1, r1, #1
   37314:	str	r3, [sp, #248]	; 0xf8
   37316:	orr.w	r3, r1, r7, lsr #31
   3731a:	ldr	r1, [sp, #144]	; 0x90
   3731c:	str	r3, [sp, #240]	; 0xf0
   3731e:	ldr	r3, [sp, #12]
   37320:	adds	r1, r3, r1
   37322:	ldr	r3, [sp, #16]
   37324:	adc.w	sl, r3, r0
   37328:	ldr	r3, [sp, #216]	; 0xd8
   3732a:	ldr	r0, [sp, #188]	; 0xbc
   3732c:	adds	r1, r1, r3
   3732e:	ldr	r3, [sp, #256]	; 0x100
   37330:	adc.w	sl, sl, r3
   37334:	ldr	r3, [sp, #224]	; 0xe0
   37336:	eor.w	lr, sl, r3
   3733a:	ldr	r3, [sp, #220]	; 0xdc
   3733c:	eor.w	r6, r1, r3
   37340:	ldr	r3, [sp, #184]	; 0xb8
   37342:	adds.w	r3, r3, lr
   37346:	eor.w	r8, r3, r4
   3734a:	ldr	r4, [sp, #256]	; 0x100
   3734c:	adcs	r0, r6
   3734e:	eor.w	r7, r0, r4
   37352:	mov.w	fp, r8, lsr #24
   37356:	orr.w	r4, fp, r7, lsl #8
   3735a:	lsrs	r7, r7, #24
   3735c:	orr.w	r9, r7, r8, lsl #8
   37360:	ldr	r7, [sp, #44]	; 0x2c
   37362:	adds	r1, r7, r1
   37364:	ldr	r7, [sp, #48]	; 0x30
   37366:	adc.w	sl, r7, sl
   3736a:	adds	r1, r1, r4
   3736c:	str	r1, [sp, #144]	; 0x90
   3736e:	adc.w	r1, sl, r9
   37372:	str	r1, [sp, #148]	; 0x94
   37374:	ldr	r1, [sp, #144]	; 0x90
   37376:	eor.w	lr, r1, lr
   3737a:	ldr	r1, [sp, #148]	; 0x94
   3737c:	eors	r6, r1
   3737e:	mov.w	r1, lr, lsr #16
   37382:	orr.w	r8, r1, r6, lsl #16
   37386:	lsrs	r6, r6, #16
   37388:	adds.w	r3, r3, r8
   3738c:	orr.w	sl, r6, lr, lsl #16
   37390:	adc.w	r0, r0, sl
   37394:	eors	r4, r3
   37396:	eor.w	r9, r0, r9
   3739a:	ldr	r6, [sp, #156]	; 0x9c
   3739c:	mov.w	r1, r9, lsl #1
   373a0:	orr.w	r1, r1, r4, lsr #31
   373a4:	lsls	r4, r4, #1
   373a6:	orr.w	fp, r4, r9, lsr #31
   373aa:	str	r1, [sp, #216]	; 0xd8
   373ac:	ldr	r4, [sp, #152]	; 0x98
   373ae:	ldr	r1, [sp, #124]	; 0x7c
   373b0:	adds	r1, r1, r4
   373b2:	ldr	r4, [sp, #128]	; 0x80
   373b4:	adc.w	r9, r4, r6
   373b8:	ldr	r4, [sp, #244]	; 0xf4
   373ba:	adds.w	r1, r1, ip
   373be:	adc.w	r9, r9, r4
   373c2:	eor.w	r7, r1, r8
   373c6:	eor.w	lr, r9, sl
   373ca:	adds.w	r2, r2, lr
   373ce:	adc.w	r5, r7, r5
   373d2:	eor.w	ip, r2, ip
   373d6:	eor.w	r6, r5, r4
   373da:	mov.w	sl, ip, lsr #24
   373de:	orr.w	r4, sl, r6, lsl #8
   373e2:	lsrs	r6, r6, #24
   373e4:	orr.w	r8, r6, ip, lsl #8
   373e8:	ldr	r6, [sp, #92]	; 0x5c
   373ea:	adds	r1, r6, r1
   373ec:	ldr	r6, [sp, #96]	; 0x60
   373ee:	adc.w	r9, r6, r9
   373f2:	adds	r1, r1, r4
   373f4:	str	r1, [sp, #152]	; 0x98
   373f6:	adc.w	r1, r9, r8
   373fa:	str	r1, [sp, #156]	; 0x9c
   373fc:	ldr	r1, [sp, #152]	; 0x98
   373fe:	eor.w	lr, r1, lr
   37402:	ldr	r1, [sp, #156]	; 0x9c
   37404:	eors	r7, r1
   37406:	mov.w	r1, lr, lsr #16
   3740a:	orr.w	r1, r1, r7, lsl #16
   3740e:	lsrs	r7, r7, #16
   37410:	str	r1, [sp, #220]	; 0xdc
   37412:	orr.w	r1, r7, lr, lsl #16
   37416:	str	r1, [sp, #224]	; 0xe0
   37418:	ldr	r1, [sp, #220]	; 0xdc
   3741a:	adds	r2, r2, r1
   3741c:	str	r2, [sp, #176]	; 0xb0
   3741e:	ldr	r2, [sp, #224]	; 0xe0
   37420:	ldr	r1, [sp, #168]	; 0xa8
   37422:	adc.w	r2, r5, r2
   37426:	str	r2, [sp, #180]	; 0xb4
   37428:	ldr	r2, [sp, #176]	; 0xb0
   3742a:	eors	r4, r2
   3742c:	ldr	r2, [sp, #180]	; 0xb4
   3742e:	eor.w	r8, r2, r8
   37432:	mov.w	r2, r8, lsl #1
   37436:	orr.w	r2, r2, r4, lsr #31
   3743a:	lsls	r4, r4, #1
   3743c:	str	r2, [sp, #252]	; 0xfc
   3743e:	orr.w	r2, r4, r8, lsr #31
   37442:	str	r2, [sp, #244]	; 0xf4
   37444:	ldr	r2, [sp, #76]	; 0x4c
   37446:	ldr	r4, [sp, #172]	; 0xac
   37448:	adds	r2, r2, r1
   3744a:	ldr	r1, [sp, #80]	; 0x50
   3744c:	adc.w	r7, r1, r4
   37450:	ldr	r1, [sp, #240]	; 0xf0
   37452:	adds	r2, r2, r1
   37454:	ldr	r1, [sp, #248]	; 0xf8
   37456:	adc.w	r7, r1, r7
   3745a:	ldr	r1, [sp, #260]	; 0x104
   3745c:	eor.w	r4, r7, r1
   37460:	ldr	r1, [sp, #228]	; 0xe4
   37462:	adds	r3, r3, r4
   37464:	eor.w	r9, r2, r1
   37468:	ldr	r1, [sp, #240]	; 0xf0
   3746a:	adc.w	r0, r0, r9
   3746e:	eor.w	ip, r3, r1
   37472:	ldr	r1, [sp, #248]	; 0xf8
   37474:	eor.w	r5, r0, r1
   37478:	mov.w	lr, ip, lsr #24
   3747c:	orr.w	r1, lr, r5, lsl #8
   37480:	lsrs	r5, r5, #24
   37482:	orr.w	r6, r5, ip, lsl #8
   37486:	ldr	r5, [sp, #116]	; 0x74
   37488:	adds	r2, r5, r2
   3748a:	ldr	r5, [sp, #120]	; 0x78
   3748c:	adc.w	r7, r5, r7
   37490:	adds	r2, r2, r1
   37492:	str	r2, [sp, #168]	; 0xa8
   37494:	adc.w	r2, r7, r6
   37498:	str	r2, [sp, #172]	; 0xac
   3749a:	ldr	r2, [sp, #168]	; 0xa8
   3749c:	eors	r4, r2
   3749e:	ldr	r2, [sp, #172]	; 0xac
   374a0:	eor.w	r2, r2, r9
   374a4:	lsrs	r5, r4, #16
   374a6:	orr.w	r5, r5, r2, lsl #16
   374aa:	mov.w	r9, r2, lsr #16
   374ae:	orr.w	r9, r9, r4, lsl #16
   374b2:	adds	r3, r3, r5
   374b4:	str	r3, [sp, #184]	; 0xb8
   374b6:	adc.w	r3, r0, r9
   374ba:	str	r3, [sp, #188]	; 0xbc
   374bc:	ldr	r3, [sp, #184]	; 0xb8
   374be:	ldr	r2, [sp, #160]	; 0xa0
   374c0:	eors	r1, r3
   374c2:	ldr	r3, [sp, #188]	; 0xbc
   374c4:	ldr	r0, [sp, #196]	; 0xc4
   374c6:	eors	r6, r3
   374c8:	str	r5, [sp, #228]	; 0xe4
   374ca:	lsls	r3, r6, #1
   374cc:	orr.w	r3, r3, r1, lsr #31
   374d0:	lsls	r1, r1, #1
   374d2:	str	r3, [sp, #248]	; 0xf8
   374d4:	orr.w	r3, r1, r6, lsr #31
   374d8:	str	r3, [sp, #240]	; 0xf0
   374da:	ldr	r3, [sp, #28]
   374dc:	ldr	r1, [sp, #164]	; 0xa4
   374de:	adds	r3, r3, r2
   374e0:	ldr	r2, [sp, #32]
   374e2:	adc.w	ip, r2, r1
   374e6:	ldr	r2, [sp, #216]	; 0xd8
   374e8:	adds.w	r3, r3, fp
   374ec:	adc.w	ip, ip, r2
   374f0:	ldr	r2, [sp, #212]	; 0xd4
   374f2:	eor.w	r7, ip, r2
   374f6:	ldr	r2, [sp, #208]	; 0xd0
   374f8:	eor.w	r1, r3, r2
   374fc:	ldr	r2, [sp, #192]	; 0xc0
   374fe:	adds	r2, r2, r7
   37500:	adc.w	r5, r0, r1
   37504:	ldr	r0, [sp, #216]	; 0xd8
   37506:	eor.w	fp, r2, fp
   3750a:	eors	r0, r5
   3750c:	mov.w	r4, fp, lsr #24
   37510:	orr.w	r8, r4, r0, lsl #8
   37514:	lsrs	r0, r0, #24
   37516:	orr.w	r6, r0, fp, lsl #8
   3751a:	ldr	r0, [sp, #100]	; 0x64
   3751c:	adds	r3, r0, r3
   3751e:	ldr	r0, [sp, #104]	; 0x68
   37520:	adc.w	ip, r0, ip
   37524:	adds.w	r3, r3, r8
   37528:	str	r3, [sp, #160]	; 0xa0
   3752a:	adc.w	r3, ip, r6
   3752e:	str	r3, [sp, #164]	; 0xa4
   37530:	ldr	r3, [sp, #160]	; 0xa0
   37532:	eors	r7, r3
   37534:	ldr	r3, [sp, #164]	; 0xa4
   37536:	eors	r1, r3
   37538:	lsrs	r3, r7, #16
   3753a:	orr.w	r3, r3, r1, lsl #16
   3753e:	lsrs	r1, r1, #16
   37540:	str	r3, [sp, #208]	; 0xd0
   37542:	orr.w	r3, r1, r7, lsl #16
   37546:	str	r3, [sp, #212]	; 0xd4
   37548:	ldr	r3, [sp, #208]	; 0xd0
   3754a:	ldr	r1, [sp, #144]	; 0x90
   3754c:	adds	r2, r2, r3
   3754e:	ldr	r3, [sp, #212]	; 0xd4
   37550:	eor.w	r8, r2, r8
   37554:	ldr	r0, [sp, #148]	; 0x94
   37556:	adc.w	r5, r3, r5
   3755a:	ldr	r4, [sp, #264]	; 0x108
   3755c:	eors	r6, r5
   3755e:	lsls	r3, r6, #1
   37560:	orr.w	r3, r3, r8, lsr #31
   37564:	mov.w	r8, r8, lsl #1
   37568:	str	r3, [sp, #256]	; 0x100
   3756a:	orr.w	r3, r8, r6, lsr #31
   3756e:	str	r3, [sp, #216]	; 0xd8
   37570:	ldr	r3, [sp, #108]	; 0x6c
   37572:	adds	r1, r3, r1
   37574:	ldr	r3, [sp, #112]	; 0x70
   37576:	adc.w	sl, r3, r0
   3757a:	ldr	r3, [sp, #264]	; 0x108
   3757c:	ldr	r0, [sp, #204]	; 0xcc
   3757e:	adds	r1, r1, r3
   37580:	ldr	r3, [sp, #268]	; 0x10c
   37582:	adc.w	sl, sl, r3
   37586:	ldr	r3, [sp, #236]	; 0xec
   37588:	eor.w	lr, sl, r3
   3758c:	ldr	r3, [sp, #232]	; 0xe8
   3758e:	eor.w	r7, r1, r3
   37592:	ldr	r3, [sp, #200]	; 0xc8
   37594:	adds.w	r3, r3, lr
   37598:	eor.w	r6, r3, r4
   3759c:	ldr	r4, [sp, #268]	; 0x10c
   3759e:	adcs	r0, r7
   375a0:	eor.w	ip, r0, r4
   375a4:	mov.w	fp, r6, lsr #24
   375a8:	orr.w	r4, fp, ip, lsl #8
   375ac:	mov.w	ip, ip, lsr #24
   375b0:	orr.w	r8, ip, r6, lsl #8
   375b4:	ldr	r6, [sp, #4]
   375b6:	adds	r1, r6, r1
   375b8:	ldr	r6, [sp, #8]
   375ba:	adc.w	sl, r6, sl
   375be:	adds	r1, r1, r4
   375c0:	str	r1, [sp, #144]	; 0x90
   375c2:	adc.w	r1, sl, r8
   375c6:	str	r1, [sp, #148]	; 0x94
   375c8:	ldr	r1, [sp, #144]	; 0x90
   375ca:	eor.w	lr, r1, lr
   375ce:	ldr	r1, [sp, #148]	; 0x94
   375d0:	eors	r7, r1
   375d2:	mov.w	r1, lr, lsr #16
   375d6:	orr.w	r1, r1, r7, lsl #16
   375da:	lsrs	r7, r7, #16
   375dc:	str	r1, [sp, #232]	; 0xe8
   375de:	orr.w	r1, r7, lr, lsl #16
   375e2:	str	r1, [sp, #236]	; 0xec
   375e4:	ldr	r1, [sp, #232]	; 0xe8
   375e6:	ldr	r7, [sp, #156]	; 0x9c
   375e8:	adds	r3, r3, r1
   375ea:	ldr	r1, [sp, #236]	; 0xec
   375ec:	eor.w	r4, r4, r3
   375f0:	adc.w	r0, r1, r0
   375f4:	eor.w	r8, r0, r8
   375f8:	mov.w	r1, r8, lsl #1
   375fc:	orr.w	r6, r1, r4, lsr #31
   37600:	lsls	r4, r4, #1
   37602:	orr.w	fp, r4, r8, lsr #31
   37606:	ldr	r1, [sp, #4]
   37608:	ldr	r4, [sp, #152]	; 0x98
   3760a:	adds	r1, r1, r4
   3760c:	ldr	r4, [sp, #8]
   3760e:	adc.w	sl, r4, r7
   37612:	adds.w	r1, r1, fp
   37616:	adc.w	sl, sl, r6
   3761a:	ldr	r4, [sp, #228]	; 0xe4
   3761c:	eor.w	lr, sl, r9
   37620:	adds.w	r2, r2, lr
   37624:	eor.w	r7, r1, r4
   37628:	adc.w	r5, r7, r5
   3762c:	eor.w	fp, r2, fp
   37630:	eor.w	ip, r5, r6
   37634:	mov.w	r4, fp, lsr #24
   37638:	orr.w	r6, r4, ip, lsl #8
   3763c:	ldr	r4, [sp, #12]
   3763e:	mov.w	ip, ip, lsr #24
   37642:	adds	r1, r4, r1
   37644:	ldr	r4, [sp, #16]
   37646:	orr.w	r8, ip, fp, lsl #8
   3764a:	adc.w	sl, r4, sl
   3764e:	adds	r1, r1, r6
   37650:	str	r1, [sp, #152]	; 0x98
   37652:	adc.w	r1, sl, r8
   37656:	str	r1, [sp, #156]	; 0x9c
   37658:	ldr	r1, [sp, #152]	; 0x98
   3765a:	ldr	r4, [sp, #172]	; 0xac
   3765c:	eor.w	lr, r1, lr
   37660:	ldr	r1, [sp, #156]	; 0x9c
   37662:	eors	r7, r1
   37664:	mov.w	r1, lr, lsr #16
   37668:	orr.w	r1, r1, r7, lsl #16
   3766c:	lsrs	r7, r7, #16
   3766e:	str	r1, [sp, #228]	; 0xe4
   37670:	orr.w	r1, r7, lr, lsl #16
   37674:	str	r1, [sp, #260]	; 0x104
   37676:	ldr	r1, [sp, #228]	; 0xe4
   37678:	adds	r2, r2, r1
   3767a:	str	r2, [sp, #192]	; 0xc0
   3767c:	ldr	r2, [sp, #260]	; 0x104
   3767e:	ldr	r1, [sp, #168]	; 0xa8
   37680:	adc.w	r2, r5, r2
   37684:	str	r2, [sp, #196]	; 0xc4
   37686:	ldr	r2, [sp, #192]	; 0xc0
   37688:	ldr	r5, [sp, #252]	; 0xfc
   3768a:	eors	r6, r2
   3768c:	ldr	r2, [sp, #196]	; 0xc4
   3768e:	eor.w	r8, r2, r8
   37692:	mov.w	r2, r8, lsl #1
   37696:	orr.w	r2, r2, r6, lsr #31
   3769a:	lsls	r6, r6, #1
   3769c:	str	r2, [sp, #268]	; 0x10c
   3769e:	orr.w	r2, r6, r8, lsr #31
   376a2:	str	r2, [sp, #264]	; 0x108
   376a4:	ldr	r2, [sp, #20]
   376a6:	adds	r2, r2, r1
   376a8:	ldr	r1, [sp, #24]
   376aa:	adc.w	r7, r1, r4
   376ae:	ldr	r1, [sp, #244]	; 0xf4
   376b0:	ldr	r4, [sp, #244]	; 0xf4
   376b2:	adds	r2, r2, r1
   376b4:	ldr	r1, [sp, #252]	; 0xfc
   376b6:	adc.w	r7, r1, r7
   376ba:	ldr	r1, [sp, #212]	; 0xd4
   376bc:	eor.w	r6, r7, r1
   376c0:	ldr	r1, [sp, #208]	; 0xd0
   376c2:	adds	r3, r3, r6
   376c4:	eor.w	r1, r2, r1
   376c8:	eor.w	r4, r3, r4
   376cc:	adc.w	r0, r1, r0
   376d0:	eors	r5, r0
   376d2:	mov.w	r8, r4, lsr #24
   376d6:	orr.w	ip, r8, r5, lsl #8
   376da:	lsrs	r5, r5, #24
   376dc:	orr.w	lr, r5, r4, lsl #8
   376e0:	ldr	r4, [sp, #28]
   376e2:	adds	r2, r4, r2
   376e4:	ldr	r4, [sp, #32]
   376e6:	adc.w	r7, r4, r7
   376ea:	adds.w	r2, r2, ip
   376ee:	str	r2, [sp, #168]	; 0xa8
   376f0:	adc.w	r2, r7, lr
   376f4:	str	r2, [sp, #172]	; 0xac
   376f6:	ldr	r2, [sp, #168]	; 0xa8
   376f8:	eors	r6, r2
   376fa:	ldr	r2, [sp, #172]	; 0xac
   376fc:	eors	r1, r2
   376fe:	lsrs	r2, r6, #16
   37700:	orr.w	r2, r2, r1, lsl #16
   37704:	lsrs	r1, r1, #16
   37706:	str	r2, [sp, #208]	; 0xd0
   37708:	orr.w	r2, r1, r6, lsl #16
   3770c:	str	r2, [sp, #212]	; 0xd4
   3770e:	ldr	r2, [sp, #208]	; 0xd0
   37710:	ldr	r1, [sp, #164]	; 0xa4
   37712:	adds	r3, r3, r2
   37714:	str	r3, [sp, #200]	; 0xc8
   37716:	ldr	r3, [sp, #212]	; 0xd4
   37718:	adc.w	r3, r0, r3
   3771c:	str	r3, [sp, #204]	; 0xcc
   3771e:	ldr	r2, [sp, #204]	; 0xcc
   37720:	ldr	r3, [sp, #200]	; 0xc8
   37722:	eor.w	lr, r2, lr
   37726:	eor.w	r3, r3, ip
   3772a:	mov.w	r2, lr, lsl #1
   3772e:	orr.w	r2, r2, r3, lsr #31
   37732:	mov.w	ip, r3, lsl #1
   37736:	str	r2, [sp, #244]	; 0xf4
   37738:	orr.w	ip, ip, lr, lsr #31
   3773c:	ldr	r2, [sp, #160]	; 0xa0
   3773e:	ldr	r3, [sp, #36]	; 0x24
   37740:	adds	r3, r3, r2
   37742:	ldr	r2, [sp, #40]	; 0x28
   37744:	adc.w	lr, r2, r1
   37748:	ldr	r2, [sp, #240]	; 0xf0
   3774a:	ldr	r1, [sp, #180]	; 0xb4
   3774c:	adds	r3, r3, r2
   3774e:	ldr	r2, [sp, #248]	; 0xf8
   37750:	adc.w	lr, lr, r2
   37754:	ldr	r2, [sp, #236]	; 0xec
   37756:	eor.w	r6, lr, r2
   3775a:	ldr	r2, [sp, #232]	; 0xe8
   3775c:	eor.w	r0, r3, r2
   37760:	ldr	r2, [sp, #176]	; 0xb0
   37762:	adds	r2, r2, r6
   37764:	adc.w	r5, r1, r0
   37768:	ldr	r1, [sp, #240]	; 0xf0
   3776a:	eor.w	r8, r2, r1
   3776e:	ldr	r1, [sp, #248]	; 0xf8
   37770:	eor.w	r4, r5, r1
   37774:	mov.w	r9, r8, lsr #24
   37778:	orr.w	r1, r9, r4, lsl #8
   3777c:	lsrs	r4, r4, #24
   3777e:	orr.w	r7, r4, r8, lsl #8
   37782:	ldr	r4, [sp, #44]	; 0x2c
   37784:	adds	r3, r4, r3
   37786:	ldr	r4, [sp, #48]	; 0x30
   37788:	adc.w	lr, r4, lr
   3778c:	adds	r3, r3, r1
   3778e:	str	r3, [sp, #160]	; 0xa0
   37790:	adc.w	r3, lr, r7
   37794:	str	r3, [sp, #164]	; 0xa4
   37796:	ldr	r3, [sp, #160]	; 0xa0
   37798:	eors	r6, r3
   3779a:	ldr	r3, [sp, #164]	; 0xa4
   3779c:	eors	r0, r3
   3779e:	lsrs	r3, r6, #16
   377a0:	orr.w	r3, r3, r0, lsl #16
   377a4:	lsrs	r0, r0, #16
   377a6:	str	r3, [sp, #232]	; 0xe8
   377a8:	orr.w	r3, r0, r6, lsl #16
   377ac:	str	r3, [sp, #236]	; 0xec
   377ae:	ldr	r3, [sp, #232]	; 0xe8
   377b0:	adds	r2, r2, r3
   377b2:	ldr	r3, [sp, #236]	; 0xec
   377b4:	eor.w	r1, r1, r2
   377b8:	adc.w	r5, r3, r5
   377bc:	eors	r7, r5
   377be:	lsls	r3, r7, #1
   377c0:	orr.w	r3, r3, r1, lsr #31
   377c4:	lsls	r1, r1, #1
   377c6:	str	r3, [sp, #248]	; 0xf8
   377c8:	orr.w	r3, r1, r7, lsr #31
   377cc:	str	r3, [sp, #240]	; 0xf0
   377ce:	ldr	r3, [sp, #52]	; 0x34
   377d0:	ldr	r1, [sp, #144]	; 0x90
   377d2:	ldr	r0, [sp, #148]	; 0x94
   377d4:	adds	r1, r3, r1
   377d6:	ldr	r3, [sp, #56]	; 0x38
   377d8:	ldr	r4, [sp, #216]	; 0xd8
   377da:	adc.w	sl, r3, r0
   377de:	ldr	r3, [sp, #216]	; 0xd8
   377e0:	ldr	r0, [sp, #188]	; 0xbc
   377e2:	adds	r1, r1, r3
   377e4:	ldr	r3, [sp, #256]	; 0x100
   377e6:	adc.w	sl, sl, r3
   377ea:	ldr	r3, [sp, #224]	; 0xe0
   377ec:	eor.w	lr, sl, r3
   377f0:	ldr	r3, [sp, #220]	; 0xdc
   377f2:	eor.w	r6, r1, r3
   377f6:	ldr	r3, [sp, #184]	; 0xb8
   377f8:	adds.w	r3, r3, lr
   377fc:	eor.w	r8, r3, r4
   37800:	ldr	r4, [sp, #256]	; 0x100
   37802:	adcs	r0, r6
   37804:	eor.w	r7, r0, r4
   37808:	mov.w	fp, r8, lsr #24
   3780c:	orr.w	r4, fp, r7, lsl #8
   37810:	lsrs	r7, r7, #24
   37812:	orr.w	r9, r7, r8, lsl #8
   37816:	ldr	r7, [sp, #60]	; 0x3c
   37818:	adds	r1, r7, r1
   3781a:	ldr	r7, [sp, #64]	; 0x40
   3781c:	adc.w	sl, r7, sl
   37820:	adds	r1, r1, r4
   37822:	str	r1, [sp, #144]	; 0x90
   37824:	adc.w	r1, sl, r9
   37828:	str	r1, [sp, #148]	; 0x94
   3782a:	ldr	r1, [sp, #144]	; 0x90
   3782c:	eor.w	lr, r1, lr
   37830:	ldr	r1, [sp, #148]	; 0x94
   37832:	eors	r6, r1
   37834:	mov.w	r1, lr, lsr #16
   37838:	orr.w	r8, r1, r6, lsl #16
   3783c:	lsrs	r6, r6, #16
   3783e:	adds.w	r3, r3, r8
   37842:	orr.w	sl, r6, lr, lsl #16
   37846:	adc.w	r0, r0, sl
   3784a:	eors	r4, r3
   3784c:	eor.w	r9, r0, r9
   37850:	ldr	r6, [sp, #156]	; 0x9c
   37852:	mov.w	r1, r9, lsl #1
   37856:	orr.w	r1, r1, r4, lsr #31
   3785a:	lsls	r4, r4, #1
   3785c:	orr.w	fp, r4, r9, lsr #31
   37860:	str	r1, [sp, #216]	; 0xd8
   37862:	ldr	r4, [sp, #152]	; 0x98
   37864:	ldr	r1, [sp, #68]	; 0x44
   37866:	adds	r1, r1, r4
   37868:	ldr	r4, [sp, #72]	; 0x48
   3786a:	adc.w	r9, r4, r6
   3786e:	ldr	r4, [sp, #244]	; 0xf4
   37870:	adds.w	r1, r1, ip
   37874:	adc.w	r9, r9, r4
   37878:	eor.w	r7, r1, r8
   3787c:	eor.w	lr, r9, sl
   37880:	adds.w	r2, r2, lr
   37884:	adc.w	r5, r7, r5
   37888:	eor.w	ip, r2, ip
   3788c:	eor.w	r6, r5, r4
   37890:	mov.w	sl, ip, lsr #24
   37894:	orr.w	r4, sl, r6, lsl #8
   37898:	lsrs	r6, r6, #24
   3789a:	orr.w	r8, r6, ip, lsl #8
   3789e:	ldr	r6, [sp, #76]	; 0x4c
   378a0:	adds	r1, r6, r1
   378a2:	ldr	r6, [sp, #80]	; 0x50
   378a4:	adc.w	r9, r6, r9
   378a8:	adds	r1, r1, r4
   378aa:	str	r1, [sp, #152]	; 0x98
   378ac:	adc.w	r1, r9, r8
   378b0:	str	r1, [sp, #156]	; 0x9c
   378b2:	ldr	r1, [sp, #152]	; 0x98
   378b4:	eor.w	lr, r1, lr
   378b8:	ldr	r1, [sp, #156]	; 0x9c
   378ba:	eors	r7, r1
   378bc:	mov.w	r1, lr, lsr #16
   378c0:	orr.w	r1, r1, r7, lsl #16
   378c4:	lsrs	r7, r7, #16
   378c6:	str	r1, [sp, #220]	; 0xdc
   378c8:	orr.w	r1, r7, lr, lsl #16
   378cc:	str	r1, [sp, #224]	; 0xe0
   378ce:	ldr	r1, [sp, #220]	; 0xdc
   378d0:	adds	r2, r2, r1
   378d2:	str	r2, [sp, #176]	; 0xb0
   378d4:	ldr	r2, [sp, #224]	; 0xe0
   378d6:	ldr	r1, [sp, #168]	; 0xa8
   378d8:	adc.w	r2, r5, r2
   378dc:	str	r2, [sp, #180]	; 0xb4
   378de:	ldr	r2, [sp, #176]	; 0xb0
   378e0:	eors	r4, r2
   378e2:	ldr	r2, [sp, #180]	; 0xb4
   378e4:	eor.w	r8, r2, r8
   378e8:	mov.w	r2, r8, lsl #1
   378ec:	orr.w	r2, r2, r4, lsr #31
   378f0:	lsls	r4, r4, #1
   378f2:	str	r2, [sp, #252]	; 0xfc
   378f4:	orr.w	r2, r4, r8, lsr #31
   378f8:	str	r2, [sp, #244]	; 0xf4
   378fa:	ldr	r2, [sp, #84]	; 0x54
   378fc:	ldr	r4, [sp, #172]	; 0xac
   378fe:	adds	r2, r2, r1
   37900:	ldr	r1, [sp, #88]	; 0x58
   37902:	adc.w	r7, r1, r4
   37906:	ldr	r1, [sp, #240]	; 0xf0
   37908:	adds	r2, r2, r1
   3790a:	ldr	r1, [sp, #248]	; 0xf8
   3790c:	adc.w	r7, r1, r7
   37910:	ldr	r1, [sp, #260]	; 0x104
   37912:	eor.w	r4, r7, r1
   37916:	ldr	r1, [sp, #228]	; 0xe4
   37918:	adds	r3, r3, r4
   3791a:	eor.w	sl, r2, r1
   3791e:	ldr	r1, [sp, #240]	; 0xf0
   37920:	adc.w	r0, r0, sl
   37924:	eor.w	ip, r3, r1
   37928:	ldr	r1, [sp, #248]	; 0xf8
   3792a:	eor.w	r5, r0, r1
   3792e:	mov.w	lr, ip, lsr #24
   37932:	orr.w	r1, lr, r5, lsl #8
   37936:	lsrs	r5, r5, #24
   37938:	orr.w	r6, r5, ip, lsl #8
   3793c:	ldr	r5, [sp, #92]	; 0x5c
   3793e:	adds	r2, r5, r2
   37940:	ldr	r5, [sp, #96]	; 0x60
   37942:	adc.w	r7, r5, r7
   37946:	adds	r2, r2, r1
   37948:	str	r2, [sp, #168]	; 0xa8
   3794a:	adc.w	r2, r7, r6
   3794e:	str	r2, [sp, #172]	; 0xac
   37950:	ldr	r2, [sp, #168]	; 0xa8
   37952:	eors	r4, r2
   37954:	ldr	r2, [sp, #172]	; 0xac
   37956:	eor.w	r2, r2, sl
   3795a:	lsrs	r5, r4, #16
   3795c:	orr.w	r5, r5, r2, lsl #16
   37960:	mov.w	sl, r2, lsr #16
   37964:	orr.w	sl, sl, r4, lsl #16
   37968:	adds	r3, r3, r5
   3796a:	str	r3, [sp, #184]	; 0xb8
   3796c:	adc.w	r3, r0, sl
   37970:	str	r3, [sp, #188]	; 0xbc
   37972:	ldr	r3, [sp, #184]	; 0xb8
   37974:	ldr	r2, [sp, #160]	; 0xa0
   37976:	eors	r1, r3
   37978:	ldr	r3, [sp, #188]	; 0xbc
   3797a:	str	r5, [sp, #228]	; 0xe4
   3797c:	eors	r6, r3
   3797e:	lsls	r3, r6, #1
   37980:	orr.w	r3, r3, r1, lsr #31
   37984:	lsls	r1, r1, #1
   37986:	str	r3, [sp, #248]	; 0xf8
   37988:	orr.w	r3, r1, r6, lsr #31
   3798c:	str	r3, [sp, #240]	; 0xf0
   3798e:	ldr	r3, [sp, #100]	; 0x64
   37990:	adds	r3, r3, r2
   37992:	ldr	r2, [sp, #104]	; 0x68
   37994:	ldr	r1, [sp, #164]	; 0xa4
   37996:	ldr	r0, [sp, #196]	; 0xc4
   37998:	adc.w	ip, r2, r1
   3799c:	ldr	r2, [sp, #216]	; 0xd8
   3799e:	adds.w	r3, r3, fp
   379a2:	adc.w	ip, ip, r2
   379a6:	ldr	r2, [sp, #212]	; 0xd4
   379a8:	eor.w	r7, ip, r2
   379ac:	ldr	r2, [sp, #208]	; 0xd0
   379ae:	eor.w	r1, r3, r2
   379b2:	ldr	r2, [sp, #192]	; 0xc0
   379b4:	adds	r2, r2, r7
   379b6:	adc.w	r5, r0, r1
   379ba:	ldr	r0, [sp, #216]	; 0xd8
   379bc:	eor.w	fp, r2, fp
   379c0:	eors	r0, r5
   379c2:	mov.w	r4, fp, lsr #24
   379c6:	orr.w	r9, r4, r0, lsl #8
   379ca:	lsrs	r0, r0, #24
   379cc:	orr.w	r6, r0, fp, lsl #8
   379d0:	ldr	r0, [sp, #108]	; 0x6c
   379d2:	adds	r3, r0, r3
   379d4:	ldr	r0, [sp, #112]	; 0x70
   379d6:	adc.w	ip, r0, ip
   379da:	adds.w	r3, r3, r9
   379de:	str	r3, [sp, #160]	; 0xa0
   379e0:	adc.w	r3, ip, r6
   379e4:	str	r3, [sp, #164]	; 0xa4
   379e6:	ldr	r3, [sp, #160]	; 0xa0
   379e8:	ldr	r0, [sp, #148]	; 0x94
   379ea:	eors	r7, r3
   379ec:	ldr	r3, [sp, #164]	; 0xa4
   379ee:	eors	r1, r3
   379f0:	lsrs	r3, r7, #16
   379f2:	orr.w	r3, r3, r1, lsl #16
   379f6:	lsrs	r1, r1, #16
   379f8:	str	r3, [sp, #192]	; 0xc0
   379fa:	orr.w	r3, r1, r7, lsl #16
   379fe:	str	r3, [sp, #196]	; 0xc4
   37a00:	ldr	r3, [sp, #192]	; 0xc0
   37a02:	ldr	r1, [sp, #144]	; 0x90
   37a04:	adds	r2, r2, r3
   37a06:	ldr	r3, [sp, #196]	; 0xc4
   37a08:	eor.w	r9, r2, r9
   37a0c:	ldr	r7, [sp, #268]	; 0x10c
   37a0e:	adc.w	r5, r3, r5
   37a12:	eors	r6, r5
   37a14:	lsls	r3, r6, #1
   37a16:	orr.w	r3, r3, r9, lsr #31
   37a1a:	mov.w	r9, r9, lsl #1
   37a1e:	str	r3, [sp, #212]	; 0xd4
   37a20:	orr.w	r3, r9, r6, lsr #31
   37a24:	str	r3, [sp, #208]	; 0xd0
   37a26:	ldr	r3, [sp, #116]	; 0x74
   37a28:	ldr	r6, [sp, #264]	; 0x108
   37a2a:	adds	r1, r3, r1
   37a2c:	ldr	r3, [sp, #120]	; 0x78
   37a2e:	adc.w	r4, r3, r0
   37a32:	ldr	r3, [sp, #264]	; 0x108
   37a34:	ldr	r0, [sp, #204]	; 0xcc
   37a36:	adds	r1, r1, r3
   37a38:	ldr	r3, [sp, #268]	; 0x10c
   37a3a:	adc.w	r4, r3, r4
   37a3e:	ldr	r3, [sp, #236]	; 0xec
   37a40:	eor.w	r8, r4, r3
   37a44:	ldr	r3, [sp, #232]	; 0xe8
   37a46:	eor.w	ip, r1, r3
   37a4a:	ldr	r3, [sp, #200]	; 0xc8
   37a4c:	adds.w	r3, r3, r8
   37a50:	adc.w	r0, r0, ip
   37a54:	eors	r6, r3
   37a56:	eor.w	lr, r0, r7
   37a5a:	mov.w	fp, r6, lsr #24
   37a5e:	orr.w	r7, fp, lr, lsl #8
   37a62:	mov.w	lr, lr, lsr #24
   37a66:	orr.w	r9, lr, r6, lsl #8
   37a6a:	ldr	r6, [sp, #124]	; 0x7c
   37a6c:	adds	r1, r6, r1
   37a6e:	ldr	r6, [sp, #128]	; 0x80
   37a70:	adc.w	r4, r6, r4
   37a74:	adds	r1, r1, r7
   37a76:	str	r1, [sp, #144]	; 0x90
   37a78:	adc.w	r1, r4, r9
   37a7c:	str	r1, [sp, #148]	; 0x94
   37a7e:	ldr	r1, [sp, #144]	; 0x90
   37a80:	ldr	r6, [sp, #152]	; 0x98
   37a82:	eor.w	r8, r1, r8
   37a86:	ldr	r1, [sp, #148]	; 0x94
   37a88:	eor.w	ip, r1, ip
   37a8c:	mov.w	r1, r8, lsr #16
   37a90:	orr.w	r1, r1, ip, lsl #16
   37a94:	mov.w	ip, ip, lsr #16
   37a98:	orr.w	fp, ip, r8, lsl #16
   37a9c:	adds	r3, r3, r1
   37a9e:	adc.w	r0, r0, fp
   37aa2:	eors	r7, r3
   37aa4:	eor.w	r9, r0, r9
   37aa8:	str	r1, [sp, #200]	; 0xc8
   37aaa:	mov.w	r1, r9, lsl #1
   37aae:	orr.w	r4, r1, r7, lsr #31
   37ab2:	ldr	r1, [sp, #116]	; 0x74
   37ab4:	lsls	r7, r7, #1
   37ab6:	orr.w	ip, r7, r9, lsr #31
   37aba:	adds	r1, r1, r6
   37abc:	ldr	r7, [sp, #156]	; 0x9c
   37abe:	ldr	r6, [sp, #120]	; 0x78
   37ac0:	adc.w	r9, r6, r7
   37ac4:	adds.w	r1, r1, ip
   37ac8:	adc.w	r9, r9, r4
   37acc:	ldr	r6, [sp, #228]	; 0xe4
   37ace:	eor.w	lr, r9, sl
   37ad2:	adds.w	r2, r2, lr
   37ad6:	eor.w	r6, r1, r6
   37ada:	adc.w	r5, r6, r5
   37ade:	eor.w	r7, r2, ip
   37ae2:	eor.w	ip, r5, r4
   37ae6:	mov.w	sl, r7, lsr #24
   37aea:	orr.w	r4, sl, ip, lsl #8
   37aee:	mov.w	ip, ip, lsr #24
   37af2:	orr.w	r8, ip, r7, lsl #8
   37af6:	ldr	r7, [sp, #84]	; 0x54
   37af8:	adds	r1, r7, r1
   37afa:	ldr	r7, [sp, #88]	; 0x58
   37afc:	adc.w	r9, r7, r9
   37b00:	adds	r1, r1, r4
   37b02:	str	r1, [sp, #84]	; 0x54
   37b04:	adc.w	r1, r9, r8
   37b08:	str	r1, [sp, #88]	; 0x58
   37b0a:	ldr	r1, [sp, #84]	; 0x54
   37b0c:	eor.w	lr, r1, lr
   37b10:	ldr	r1, [sp, #88]	; 0x58
   37b12:	eors	r6, r1
   37b14:	mov.w	r1, lr, lsr #16
   37b18:	orr.w	r1, r1, r6, lsl #16
   37b1c:	lsrs	r6, r6, #16
   37b1e:	str	r1, [sp, #152]	; 0x98
   37b20:	orr.w	r1, r6, lr, lsl #16
   37b24:	str	r1, [sp, #156]	; 0x9c
   37b26:	ldr	r1, [sp, #152]	; 0x98
   37b28:	adds	r2, r2, r1
   37b2a:	str	r2, [sp, #116]	; 0x74
   37b2c:	ldr	r2, [sp, #156]	; 0x9c
   37b2e:	ldr	r1, [sp, #168]	; 0xa8
   37b30:	adc.w	r2, r5, r2
   37b34:	str	r2, [sp, #120]	; 0x78
   37b36:	ldr	r2, [sp, #116]	; 0x74
   37b38:	eors	r4, r2
   37b3a:	ldr	r2, [sp, #120]	; 0x78
   37b3c:	eor.w	r8, r2, r8
   37b40:	mov.w	r2, r8, lsl #1
   37b44:	orr.w	r2, r2, r4, lsr #31
   37b48:	lsls	r4, r4, #1
   37b4a:	str	r2, [sp, #216]	; 0xd8
   37b4c:	orr.w	r2, r4, r8, lsr #31
   37b50:	str	r2, [sp, #204]	; 0xcc
   37b52:	ldr	r2, [sp, #36]	; 0x24
   37b54:	ldr	r4, [sp, #172]	; 0xac
   37b56:	adds	r2, r2, r1
   37b58:	ldr	r1, [sp, #40]	; 0x28
   37b5a:	adc.w	r7, r1, r4
   37b5e:	ldr	r1, [sp, #244]	; 0xf4
   37b60:	adds	r2, r2, r1
   37b62:	ldr	r1, [sp, #252]	; 0xfc
   37b64:	ldr	r4, [sp, #244]	; 0xf4
   37b66:	adc.w	r7, r1, r7
   37b6a:	ldr	r1, [sp, #196]	; 0xc4
   37b6c:	ldr	r5, [sp, #252]	; 0xfc
   37b6e:	eor.w	r6, r7, r1
   37b72:	ldr	r1, [sp, #192]	; 0xc0
   37b74:	adds	r3, r3, r6
   37b76:	eor.w	r1, r2, r1
   37b7a:	eor.w	r4, r3, r4
   37b7e:	adc.w	r0, r1, r0
   37b82:	eors	r5, r0
   37b84:	mov.w	r8, r4, lsr #24
   37b88:	orr.w	lr, r8, r5, lsl #8
   37b8c:	lsrs	r5, r5, #24
   37b8e:	orr.w	ip, r5, r4, lsl #8
   37b92:	ldr	r4, [sp, #68]	; 0x44
   37b94:	adds	r2, r4, r2
   37b96:	ldr	r4, [sp, #72]	; 0x48
   37b98:	adc.w	r7, r4, r7
   37b9c:	adds.w	r2, r2, lr
   37ba0:	str	r2, [sp, #36]	; 0x24
   37ba2:	adc.w	r2, r7, ip
   37ba6:	str	r2, [sp, #40]	; 0x28
   37ba8:	ldr	r2, [sp, #36]	; 0x24
   37baa:	eors	r6, r2
   37bac:	ldr	r2, [sp, #40]	; 0x28
   37bae:	eors	r1, r2
   37bb0:	lsrs	r2, r6, #16
   37bb2:	orr.w	r2, r2, r1, lsl #16
   37bb6:	lsrs	r1, r1, #16
   37bb8:	str	r2, [sp, #168]	; 0xa8
   37bba:	orr.w	r2, r1, r6, lsl #16
   37bbe:	str	r2, [sp, #172]	; 0xac
   37bc0:	ldr	r2, [sp, #168]	; 0xa8
   37bc2:	ldr	r1, [sp, #164]	; 0xa4
   37bc4:	adds	r3, r3, r2
   37bc6:	str	r3, [sp, #68]	; 0x44
   37bc8:	ldr	r3, [sp, #172]	; 0xac
   37bca:	adc.w	r3, r0, r3
   37bce:	str	r3, [sp, #72]	; 0x48
   37bd0:	ldr	r2, [sp, #72]	; 0x48
   37bd2:	ldr	r3, [sp, #68]	; 0x44
   37bd4:	eor.w	ip, r2, ip
   37bd8:	eor.w	r3, r3, lr
   37bdc:	mov.w	r2, ip, lsl #1
   37be0:	orr.w	r2, r2, r3, lsr #31
   37be4:	mov.w	lr, r3, lsl #1
   37be8:	str	r2, [sp, #192]	; 0xc0
   37bea:	orr.w	lr, lr, ip, lsr #31
   37bee:	ldr	r2, [sp, #160]	; 0xa0
   37bf0:	ldr	r3, [sp, #76]	; 0x4c
   37bf2:	adds	r3, r3, r2
   37bf4:	ldr	r2, [sp, #80]	; 0x50
   37bf6:	adc.w	ip, r2, r1
   37bfa:	ldr	r2, [sp, #240]	; 0xf0
   37bfc:	ldr	r1, [sp, #180]	; 0xb4
   37bfe:	adds	r3, r3, r2
   37c00:	ldr	r2, [sp, #248]	; 0xf8
   37c02:	adc.w	ip, ip, r2
   37c06:	ldr	r2, [sp, #200]	; 0xc8
   37c08:	eor.w	r6, ip, fp
   37c0c:	eor.w	r0, r3, r2
   37c10:	ldr	r2, [sp, #176]	; 0xb0
   37c12:	adds	r2, r2, r6
   37c14:	adc.w	r5, r1, r0
   37c18:	ldr	r1, [sp, #240]	; 0xf0
   37c1a:	eor.w	r8, r2, r1
   37c1e:	ldr	r1, [sp, #248]	; 0xf8
   37c20:	eor.w	r4, r5, r1
   37c24:	mov.w	r9, r8, lsr #24
   37c28:	orr.w	r1, r9, r4, lsl #8
   37c2c:	lsrs	r4, r4, #24
   37c2e:	orr.w	r7, r4, r8, lsl #8
   37c32:	ldr	r4, [sp, #124]	; 0x7c
   37c34:	adds	r3, r4, r3
   37c36:	ldr	r4, [sp, #128]	; 0x80
   37c38:	adc.w	ip, r4, ip
   37c3c:	adds	r3, r3, r1
   37c3e:	str	r3, [sp, #76]	; 0x4c
   37c40:	adc.w	r3, ip, r7
   37c44:	str	r3, [sp, #80]	; 0x50
   37c46:	ldr	r3, [sp, #76]	; 0x4c
   37c48:	eors	r6, r3
   37c4a:	ldr	r3, [sp, #80]	; 0x50
   37c4c:	eors	r0, r3
   37c4e:	lsrs	r3, r6, #16
   37c50:	orr.w	r3, r3, r0, lsl #16
   37c54:	lsrs	r0, r0, #16
   37c56:	str	r3, [sp, #124]	; 0x7c
   37c58:	orr.w	r3, r0, r6, lsl #16
   37c5c:	str	r3, [sp, #128]	; 0x80
   37c5e:	ldr	r3, [sp, #124]	; 0x7c
   37c60:	ldr	r0, [sp, #148]	; 0x94
   37c62:	adds	r2, r2, r3
   37c64:	ldr	r3, [sp, #128]	; 0x80
   37c66:	eor.w	r1, r1, r2
   37c6a:	ldr	r6, [sp, #208]	; 0xd0
   37c6c:	adc.w	r5, r3, r5
   37c70:	eors	r7, r5
   37c72:	lsls	r3, r7, #1
   37c74:	orr.w	r3, r3, r1, lsr #31
   37c78:	lsls	r1, r1, #1
   37c7a:	str	r3, [sp, #164]	; 0xa4
   37c7c:	orr.w	r3, r1, r7, lsr #31
   37c80:	ldr	r1, [sp, #144]	; 0x90
   37c82:	str	r3, [sp, #160]	; 0xa0
   37c84:	ldr	r3, [sp, #108]	; 0x6c
   37c86:	adds	r1, r3, r1
   37c88:	ldr	r3, [sp, #112]	; 0x70
   37c8a:	adc.w	r4, r3, r0
   37c8e:	ldr	r3, [sp, #208]	; 0xd0
   37c90:	ldr	r0, [sp, #188]	; 0xbc
   37c92:	adds	r1, r1, r3
   37c94:	ldr	r3, [sp, #212]	; 0xd4
   37c96:	adc.w	r4, r3, r4
   37c9a:	ldr	r3, [sp, #224]	; 0xe0
   37c9c:	eor.w	r8, r4, r3
   37ca0:	ldr	r3, [sp, #220]	; 0xdc
   37ca2:	eor.w	r7, r1, r3
   37ca6:	ldr	r3, [sp, #184]	; 0xb8
   37ca8:	adds.w	r3, r3, r8
   37cac:	str	r3, [sp, #108]	; 0x6c
   37cae:	eor.w	r9, r3, r6
   37cb2:	ldr	r6, [sp, #212]	; 0xd4
   37cb4:	ldr	r3, [sp, #52]	; 0x34
   37cb6:	adcs	r0, r7
   37cb8:	eor.w	ip, r0, r6
   37cbc:	mov.w	fp, r9, lsr #24
   37cc0:	adds	r1, r3, r1
   37cc2:	ldr	r3, [sp, #56]	; 0x38
   37cc4:	orr.w	r6, fp, ip, lsl #8
   37cc8:	mov.w	ip, ip, lsr #24
   37ccc:	orr.w	sl, ip, r9, lsl #8
   37cd0:	adc.w	r4, r3, r4
   37cd4:	adds	r3, r1, r6
   37cd6:	str	r3, [sp, #52]	; 0x34
   37cd8:	adc.w	r3, r4, sl
   37cdc:	str	r3, [sp, #56]	; 0x38
   37cde:	ldr	r3, [sp, #52]	; 0x34
   37ce0:	eor.w	r8, r3, r8
   37ce4:	ldr	r3, [sp, #56]	; 0x38
   37ce6:	eors	r7, r3
   37ce8:	mov.w	r1, r8, lsr #16
   37cec:	ldr	r3, [sp, #108]	; 0x6c
   37cee:	orr.w	r4, r1, r7, lsl #16
   37cf2:	lsrs	r7, r7, #16
   37cf4:	adds	r3, r3, r4
   37cf6:	orr.w	fp, r7, r8, lsl #16
   37cfa:	adc.w	r0, r0, fp
   37cfe:	eors	r6, r3
   37d00:	eor.w	sl, r0, sl
   37d04:	mov.w	r1, sl, lsl #1
   37d08:	orr.w	r1, r1, r6, lsr #31
   37d0c:	lsls	r6, r6, #1
   37d0e:	str	r1, [sp, #112]	; 0x70
   37d10:	orr.w	r1, r6, sl, lsr #31
   37d14:	str	r1, [sp, #108]	; 0x6c
   37d16:	ldr	r6, [sp, #84]	; 0x54
   37d18:	ldr	r1, [sp, #12]
   37d1a:	ldr	r7, [sp, #88]	; 0x58
   37d1c:	adds	r1, r1, r6
   37d1e:	ldr	r6, [sp, #16]
   37d20:	adc.w	r9, r6, r7
   37d24:	ldr	r6, [sp, #192]	; 0xc0
   37d26:	adds.w	r1, r1, lr
   37d2a:	adc.w	r9, r9, r6
   37d2e:	eor.w	r7, r1, r4
   37d32:	eor.w	r6, r9, fp
   37d36:	ldr	r4, [sp, #192]	; 0xc0
   37d38:	adds	r2, r2, r6
   37d3a:	adc.w	r5, r7, r5
   37d3e:	eor.w	lr, r2, lr
   37d42:	eors	r4, r5
   37d44:	mov.w	sl, lr, lsr #24
   37d48:	orr.w	ip, sl, r4, lsl #8
   37d4c:	lsrs	r4, r4, #24
   37d4e:	orr.w	r8, r4, lr, lsl #8
   37d52:	ldr	r4, [sp, #100]	; 0x64
   37d54:	adds	r1, r4, r1
   37d56:	ldr	r4, [sp, #104]	; 0x68
   37d58:	adc.w	r9, r4, r9
   37d5c:	adds.w	r1, r1, ip
   37d60:	adc.w	r4, r9, r8
   37d64:	eors	r6, r1
   37d66:	eors	r7, r4
   37d68:	strd	r1, r4, [sp, #400]	; 0x190
   37d6c:	mov.w	lr, r6, lsr #16
   37d70:	orr.w	r1, lr, r7, lsl #16
   37d74:	lsrs	r7, r7, #16
   37d76:	orr.w	r4, r7, r6, lsl #16
   37d7a:	adds	r2, r2, r1
   37d7c:	adc.w	r5, r4, r5
   37d80:	strd	r2, r5, [sp, #480]	; 0x1e0
   37d84:	eor.w	r5, r5, r8
   37d88:	eor.w	r2, r2, ip
   37d8c:	strd	r1, r4, [sp, #520]	; 0x208
   37d90:	lsls	r6, r5, #1
   37d92:	ldr	r1, [sp, #36]	; 0x24
   37d94:	orr.w	r6, r6, r2, lsr #31
   37d98:	lsls	r2, r2, #1
   37d9a:	orr.w	r5, r2, r5, lsr #31
   37d9e:	ldr	r2, [sp, #4]
   37da0:	ldr	r4, [sp, #40]	; 0x28
   37da2:	adds	r2, r2, r1
   37da4:	ldr	r1, [sp, #8]
   37da6:	strd	r5, r6, [sp, #440]	; 0x1b8
   37daa:	adc.w	r7, r1, r4
   37dae:	ldr	r1, [sp, #160]	; 0xa0
   37db0:	ldr	r5, [sp, #160]	; 0xa0
   37db2:	adds	r2, r2, r1
   37db4:	ldr	r1, [sp, #164]	; 0xa4
   37db6:	ldr	r4, [sp, #152]	; 0x98
   37db8:	adc.w	r7, r1, r7
   37dbc:	ldr	r1, [sp, #156]	; 0x9c
   37dbe:	eors	r4, r2
   37dc0:	eors	r1, r7
   37dc2:	adds	r3, r3, r1
   37dc4:	eor.w	lr, r3, r5
   37dc8:	ldr	r5, [sp, #164]	; 0xa4
   37dca:	adc.w	r0, r4, r0
   37dce:	eors	r5, r0
   37dd0:	mov.w	r8, lr, lsr #24
   37dd4:	orr.w	r6, r8, r5, lsl #8
   37dd8:	lsrs	r5, r5, #24
   37dda:	orr.w	ip, r5, lr, lsl #8
   37dde:	ldr	r5, [sp, #20]
   37de0:	adds	r2, r5, r2
   37de2:	ldr	r5, [sp, #24]
   37de4:	adc.w	r7, r5, r7
   37de8:	adds	r2, r2, r6
   37dea:	adc.w	r7, r7, ip
   37dee:	eors	r1, r2
   37df0:	eors	r4, r7
   37df2:	strd	r2, r7, [sp, #408]	; 0x198
   37df6:	lsrs	r7, r1, #16
   37df8:	orr.w	r2, r7, r4, lsl #16
   37dfc:	lsrs	r4, r4, #16
   37dfe:	orr.w	r5, r4, r1, lsl #16
   37e02:	adds	r3, r3, r2
   37e04:	adc.w	r0, r5, r0
   37e08:	strd	r2, r5, [sp, #496]	; 0x1f0
   37e0c:	strd	r3, r0, [sp, #488]	; 0x1e8
   37e10:	eor.w	r0, r0, ip
   37e14:	eors	r3, r6
   37e16:	ldr	r2, [sp, #76]	; 0x4c
   37e18:	lsls	r1, r0, #1
   37e1a:	orr.w	r1, r1, r3, lsr #31
   37e1e:	lsls	r3, r3, #1
   37e20:	orr.w	r0, r3, r0, lsr #31
   37e24:	ldr	r3, [sp, #92]	; 0x5c
   37e26:	strd	r0, r1, [sp, #448]	; 0x1c0
   37e2a:	adds	r3, r3, r2
   37e2c:	ldr	r1, [sp, #80]	; 0x50
   37e2e:	ldr	r2, [sp, #96]	; 0x60
   37e30:	adc.w	ip, r2, r1
   37e34:	ldr	r2, [sp, #108]	; 0x6c
   37e36:	ldr	r1, [sp, #120]	; 0x78
   37e38:	adds	r3, r3, r2
   37e3a:	ldr	r2, [sp, #112]	; 0x70
   37e3c:	adc.w	ip, ip, r2
   37e40:	ldr	r2, [sp, #172]	; 0xac
   37e42:	eor.w	r0, ip, r2
   37e46:	ldr	r2, [sp, #168]	; 0xa8
   37e48:	eor.w	r4, r3, r2
   37e4c:	ldr	r2, [sp, #116]	; 0x74
   37e4e:	adds	r2, r2, r0
   37e50:	adc.w	r5, r1, r4
   37e54:	ldr	r1, [sp, #108]	; 0x6c
   37e56:	eor.w	r6, r2, r1
   37e5a:	ldr	r1, [sp, #112]	; 0x70
   37e5c:	eors	r1, r5
   37e5e:	mov.w	r8, r6, lsr #24
   37e62:	orr.w	r7, r8, r1, lsl #8
   37e66:	lsrs	r1, r1, #24
   37e68:	orr.w	lr, r1, r6, lsl #8
   37e6c:	ldr	r1, [sp, #60]	; 0x3c
   37e6e:	adds	r3, r1, r3
   37e70:	ldr	r1, [sp, #64]	; 0x40
   37e72:	adc.w	ip, r1, ip
   37e76:	adds	r3, r3, r7
   37e78:	adc.w	r1, ip, lr
   37e7c:	eors	r0, r3
   37e7e:	eors	r4, r1
   37e80:	strd	r3, r1, [sp, #416]	; 0x1a0
   37e84:	lsrs	r6, r0, #16
   37e86:	orr.w	r3, r6, r4, lsl #16
   37e8a:	lsrs	r4, r4, #16
   37e8c:	orr.w	r1, r4, r0, lsl #16
   37e90:	adds	r2, r2, r3
   37e92:	adc.w	r5, r1, r5
   37e96:	strd	r2, r5, [sp, #464]	; 0x1d0
   37e9a:	eor.w	r5, r5, lr
   37e9e:	eors	r2, r7
   37ea0:	strd	r3, r1, [sp, #504]	; 0x1f8
   37ea4:	lsls	r0, r5, #1
   37ea6:	ldr	r3, [sp, #44]	; 0x2c
   37ea8:	orr.w	r0, r0, r2, lsr #31
   37eac:	lsls	r2, r2, #1
   37eae:	orr.w	r5, r2, r5, lsr #31
   37eb2:	ldr	r2, [sp, #52]	; 0x34
   37eb4:	strd	r5, r0, [sp, #456]	; 0x1c8
   37eb8:	adds	r1, r3, r2
   37eba:	ldr	r3, [sp, #48]	; 0x30
   37ebc:	ldr	r2, [sp, #56]	; 0x38
   37ebe:	adc.w	r4, r3, r2
   37ec2:	ldr	r3, [sp, #204]	; 0xcc
   37ec4:	adds	r1, r1, r3
   37ec6:	ldr	r3, [sp, #216]	; 0xd8
   37ec8:	adc.w	r2, r4, r3
   37ecc:	ldr	r3, [sp, #128]	; 0x80
   37ece:	eor.w	r5, r2, r3
   37ed2:	ldr	r3, [sp, #124]	; 0x7c
   37ed4:	ldr	r0, [sp, #72]	; 0x48
   37ed6:	eor.w	r6, r1, r3
   37eda:	ldr	r3, [sp, #68]	; 0x44
   37edc:	ldr	r4, [sp, #204]	; 0xcc
   37ede:	adds	r3, r3, r5
   37ee0:	ldr	r7, [sp, #216]	; 0xd8
   37ee2:	adcs	r0, r6
   37ee4:	eors	r4, r3
   37ee6:	eors	r7, r0
   37ee8:	mov.w	r8, r4, lsr #24
   37eec:	orr.w	ip, r8, r7, lsl #8
   37ef0:	lsrs	r7, r7, #24
   37ef2:	orr.w	lr, r7, r4, lsl #8
   37ef6:	ldr	r4, [sp, #28]
   37ef8:	adds	r1, r4, r1
   37efa:	ldr	r4, [sp, #32]
   37efc:	adc.w	r2, r4, r2
   37f00:	adds.w	r1, r1, ip
   37f04:	adc.w	r2, r2, lr
   37f08:	eors	r5, r1
   37f0a:	eors	r6, r2
   37f0c:	strd	r1, r2, [sp, #424]	; 0x1a8
   37f10:	lsrs	r1, r5, #16
   37f12:	orr.w	r2, r1, r6, lsl #16
   37f16:	lsrs	r6, r6, #16
   37f18:	adds	r3, r3, r2
   37f1a:	orr.w	r7, r6, r5, lsl #16
   37f1e:	adc.w	r0, r7, r0
   37f22:	strd	r3, r0, [sp, #472]	; 0x1d8
   37f26:	eor.w	r0, r0, lr
   37f2a:	eor.w	ip, r3, ip
   37f2e:	strd	r2, r7, [sp, #512]	; 0x200
   37f32:	lsls	r3, r0, #1
   37f34:	orr.w	r3, r3, ip, lsr #31
   37f38:	mov.w	ip, ip, lsl #1
   37f3c:	orr.w	r0, ip, r0, lsr #31
   37f40:	strd	r0, r3, [sp, #432]	; 0x1b0
   37f44:	ldr	r1, [sp, #136]	; 0x88
   37f46:	ldr	r3, [sp, #136]	; 0x88
   37f48:	adds	r1, #8
   37f4a:	str	r1, [sp, #136]	; 0x88
   37f4c:	ldr	r1, [sp, #132]	; 0x84
   37f4e:	ldrd	r2, r3, [r3]
   37f52:	ldr.w	r0, [r1, #8]!
   37f56:	eors	r2, r0
   37f58:	str	r1, [sp, #132]	; 0x84
   37f5a:	ldr	r1, [r1, #4]
   37f5c:	eors	r3, r1
   37f5e:	ldr	r1, [sp, #136]	; 0x88
   37f60:	ldrd	r0, r1, [r1, #56]	; 0x38
   37f64:	eors	r3, r1
   37f66:	ldr	r1, [sp, #132]	; 0x84
   37f68:	eors	r2, r0
   37f6a:	str	r2, [r1, #0]
   37f6c:	ldr	r2, [sp, #140]	; 0x8c
   37f6e:	str	r3, [r1, #4]
   37f70:	cmp	r1, r2
   37f72:	bne.n	37f44 <SHA256Result@@Base+0x3a08>
   37f74:	ldr	r2, [pc, #24]	; (37f90 <SHA256Result@@Base+0x3a54>)
   37f76:	ldr	r3, [pc, #28]	; (37f94 <SHA256Result@@Base+0x3a58>)
   37f78:	add	r2, pc
   37f7a:	ldr	r3, [r2, r3]
   37f7c:	ldr	r2, [r3, #0]
   37f7e:	ldr	r3, [sp, #532]	; 0x214
   37f80:	eors	r2, r3
   37f82:	beq.n	37f88 <SHA256Result@@Base+0x3a4c>
   37f84:	blx	8510 <__stack_chk_fail@plt>
   37f88:	add.w	sp, sp, #540	; 0x21c
   37f8c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37f90:	bkpt	0x000c
   37f92:	movs	r2, r0
   37f94:	lsls	r0, r4, #8
	...

00037f98 <blake2b_init_param@@Base>:
   37f98:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   37f9c:	movs	r2, #240	; 0xf0
   37f9e:	ldr	r6, [pc, #80]	; (37ff0 <blake2b_init_param@@Base+0x58>)
   37fa0:	mov	r5, r1
   37fa2:	movs	r1, #0
   37fa4:	mov	r4, r0
   37fa6:	blx	87c4 <memset@plt+0x4>
   37faa:	sub.w	r2, r4, #8
   37fae:	add	r6, pc
   37fb0:	add.w	r8, r4, #56	; 0x38
   37fb4:	mov	r3, r2
   37fb6:	ldrd	r0, r1, [r6], #8
   37fba:	strd	r0, r1, [r3, #8]!
   37fbe:	cmp	r3, r8
   37fc0:	bne.n	37fb6 <blake2b_init_param@@Base+0x1e>
   37fc2:	mov	r6, r5
   37fc4:	mov	r0, r6
   37fc6:	adds	r6, #8
   37fc8:	bl	34550 <SHA256Result@@Base+0x14>
   37fcc:	ldr.w	r7, [r2, #8]!
   37fd0:	cmp	r2, r8
   37fd2:	eor.w	r0, r0, r7
   37fd6:	ldr	r3, [r2, #4]
   37fd8:	eor.w	r1, r1, r3
   37fdc:	strd	r0, r1, [r2]
   37fe0:	bne.n	37fc4 <blake2b_init_param@@Base+0x2c>
   37fe2:	ldrb	r3, [r5, #0]
   37fe4:	movs	r0, #0
   37fe6:	str.w	r3, [r4, #228]	; 0xe4
   37fea:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   37fee:	nop
   37ff0:	add	sp, #88	; 0x58
   37ff2:	movs	r1, r0

00037ff4 <blake2b_init@@Base>:
   37ff4:	ldr	r2, [pc, #124]	; (38074 <blake2b_init@@Base+0x80>)
   37ff6:	ldr	r3, [pc, #128]	; (38078 <blake2b_init@@Base+0x84>)
   37ff8:	add	r2, pc
   37ffa:	push	{r4, r5, lr}
   37ffc:	sub	sp, #76	; 0x4c
   37ffe:	ldr	r3, [r2, r3]
   38000:	mov	r5, r0
   38002:	ldr	r3, [r3, #0]
   38004:	str	r3, [sp, #68]	; 0x44
   38006:	mov.w	r3, #0
   3800a:	subs	r3, r1, #1
   3800c:	cmp	r3, #63	; 0x3f
   3800e:	bhi.n	38068 <blake2b_init@@Base+0x74>
   38010:	movs	r4, #0
   38012:	movs	r2, #14
   38014:	strb.w	r1, [sp, #4]
   38018:	add.w	r0, sp, #22
   3801c:	mov	r1, r4
   3801e:	movw	r3, #257	; 0x101
   38022:	strb.w	r4, [sp, #5]
   38026:	strh.w	r3, [sp, #6]
   3802a:	strd	r4, r4, [sp, #8]
   3802e:	str	r4, [sp, #16]
   38030:	strh.w	r4, [sp, #20]
   38034:	blx	87c4 <memset@plt+0x4>
   38038:	movs	r2, #16
   3803a:	mov	r1, r4
   3803c:	add	r0, sp, #36	; 0x24
   3803e:	blx	87c4 <memset@plt+0x4>
   38042:	mov	r1, r4
   38044:	add	r0, sp, #52	; 0x34
   38046:	movs	r2, #16
   38048:	blx	87c4 <memset@plt+0x4>
   3804c:	add	r1, sp, #4
   3804e:	mov	r0, r5
   38050:	bl	37f98 <blake2b_init_param@@Base>
   38054:	ldr	r2, [pc, #36]	; (3807c <blake2b_init@@Base+0x88>)
   38056:	ldr	r3, [pc, #32]	; (38078 <blake2b_init@@Base+0x84>)
   38058:	add	r2, pc
   3805a:	ldr	r3, [r2, r3]
   3805c:	ldr	r2, [r3, #0]
   3805e:	ldr	r3, [sp, #68]	; 0x44
   38060:	eors	r2, r3
   38062:	beq.n	3806e <blake2b_init@@Base+0x7a>
   38064:	blx	8510 <__stack_chk_fail@plt>
   38068:	mov.w	r0, #4294967295	; 0xffffffff
   3806c:	b.n	38054 <blake2b_init@@Base+0x60>
   3806e:	add	sp, #76	; 0x4c
   38070:	pop	{r4, r5, pc}
   38072:	nop
   38074:	pop	{r2, r3, r7, pc}
   38076:	movs	r2, r0
   38078:	lsls	r0, r4, #8
   3807a:	movs	r0, r0
   3807c:	pop	{r2, r3, r5, pc}
   3807e:	movs	r2, r0

00038080 <blake2b_update@@Base>:
   38080:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38084:	mov	r4, r0
   38086:	mov	sl, r1
   38088:	mov	r5, r2
   3808a:	cmp	r2, #0
   3808c:	beq.n	3811a <blake2b_update@@Base+0x9a>
   3808e:	ldr.w	r3, [r0, #224]	; 0xe0
   38092:	add.w	fp, r0, #96	; 0x60
   38096:	rsb	r2, r3, #128	; 0x80
   3809a:	cmp	r5, r2
   3809c:	bls.n	38102 <blake2b_update@@Base+0x82>
   3809e:	movs	r0, #0
   380a0:	str.w	r0, [r4, #224]	; 0xe0
   380a4:	add.w	r0, fp, r3
   380a8:	str	r2, [sp, #4]
   380aa:	str	r3, [sp, #0]
   380ac:	blx	8480 <memcpy@plt+0x4>
   380b0:	ldrd	r1, r0, [r4, #64]	; 0x40
   380b4:	adds.w	r8, r1, #128	; 0x80
   380b8:	adc.w	r9, r0, #0
   380bc:	ldrd	r0, r1, [r4, #72]	; 0x48
   380c0:	cmp.w	r9, #0
   380c4:	strd	r8, r9, [r4, #64]	; 0x40
   380c8:	it	eq
   380ca:	cmpeq.w	r8, #128	; 0x80
   380ce:	ite	cc
   380d0:	movcc.w	ip, #1
   380d4:	movcs.w	ip, #0
   380d8:	adds.w	r0, r0, ip
   380dc:	adc.w	r1, r1, #0
   380e0:	strd	r0, r1, [r4, #72]	; 0x48
   380e4:	mov	r1, fp
   380e6:	mov	r0, r4
   380e8:	bl	34558 <SHA256Result@@Base+0x1c>
   380ec:	ldr	r3, [sp, #0]
   380ee:	ldr	r2, [sp, #4]
   380f0:	subs	r3, #128	; 0x80
   380f2:	add	r2, sl
   380f4:	add	r5, r3
   380f6:	add.w	r8, r2, r5
   380fa:	cmp	r5, #128	; 0x80
   380fc:	sub.w	sl, r8, r5
   38100:	bhi.n	38122 <blake2b_update@@Base+0xa2>
   38102:	ldr.w	r0, [r4, #224]	; 0xe0
   38106:	mov	r2, r5
   38108:	mov	r1, sl
   3810a:	add	r0, fp
   3810c:	blx	8480 <memcpy@plt+0x4>
   38110:	ldr.w	r2, [r4, #224]	; 0xe0
   38114:	add	r2, r5
   38116:	str.w	r2, [r4, #224]	; 0xe0
   3811a:	movs	r0, #0
   3811c:	add	sp, #12
   3811e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38122:	ldrd	r3, r2, [r4, #64]	; 0x40
   38126:	mov	r0, r4
   38128:	subs	r5, #128	; 0x80
   3812a:	adds.w	r6, r3, #128	; 0x80
   3812e:	adc.w	r7, r2, #0
   38132:	ldrd	r2, r3, [r4, #72]	; 0x48
   38136:	cmp	r7, #0
   38138:	strd	r6, r7, [r4, #64]	; 0x40
   3813c:	it	eq
   3813e:	cmpeq	r6, #128	; 0x80
   38140:	ite	cc
   38142:	movcc	r1, #1
   38144:	movcs	r1, #0
   38146:	adds	r2, r2, r1
   38148:	mov	r1, sl
   3814a:	adc.w	r3, r3, #0
   3814e:	strd	r2, r3, [r4, #72]	; 0x48
   38152:	bl	34558 <SHA256Result@@Base+0x1c>
   38156:	b.n	380fa <blake2b_update@@Base+0x7a>

00038158 <blake2b_init_key@@Base>:
   38158:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   3815c:	mov	r8, r2
   3815e:	ldr	r2, [pc, #192]	; (38220 <blake2b_init_key@@Base+0xc8>)
   38160:	mov	r6, r3
   38162:	ldr	r3, [pc, #192]	; (38224 <blake2b_init_key@@Base+0xcc>)
   38164:	sub	sp, #200	; 0xc8
   38166:	add	r2, pc
   38168:	mov	r7, r0
   3816a:	ldr	r3, [r2, r3]
   3816c:	ldr	r3, [r3, #0]
   3816e:	str	r3, [sp, #196]	; 0xc4
   38170:	mov.w	r3, #0
   38174:	subs	r3, r1, #1
   38176:	cmp	r3, #63	; 0x3f
   38178:	bls.n	38192 <blake2b_init_key@@Base+0x3a>
   3817a:	mov.w	r0, #4294967295	; 0xffffffff
   3817e:	ldr	r2, [pc, #168]	; (38228 <blake2b_init_key@@Base+0xd0>)
   38180:	ldr	r3, [pc, #160]	; (38224 <blake2b_init_key@@Base+0xcc>)
   38182:	add	r2, pc
   38184:	ldr	r3, [r2, r3]
   38186:	ldr	r2, [r3, #0]
   38188:	ldr	r3, [sp, #196]	; 0xc4
   3818a:	eors	r2, r3
   3818c:	beq.n	3821a <blake2b_init_key@@Base+0xc2>
   3818e:	blx	8510 <__stack_chk_fail@plt>
   38192:	cmp.w	r8, #0
   38196:	beq.n	3817a <blake2b_init_key@@Base+0x22>
   38198:	subs	r3, r6, #1
   3819a:	cmp	r3, #63	; 0x3f
   3819c:	bhi.n	3817a <blake2b_init_key@@Base+0x22>
   3819e:	movs	r4, #0
   381a0:	movs	r2, #14
   381a2:	strb.w	r1, [sp, #4]
   381a6:	add.w	r0, sp, #22
   381aa:	mov	r1, r4
   381ac:	movw	r3, #257	; 0x101
   381b0:	strb.w	r6, [sp, #5]
   381b4:	strh.w	r3, [sp, #6]
   381b8:	strd	r4, r4, [sp, #8]
   381bc:	str	r4, [sp, #16]
   381be:	strh.w	r4, [sp, #20]
   381c2:	blx	87c4 <memset@plt+0x4>
   381c6:	movs	r2, #16
   381c8:	mov	r1, r4
   381ca:	add	r0, sp, #36	; 0x24
   381cc:	blx	87c4 <memset@plt+0x4>
   381d0:	movs	r2, #16
   381d2:	mov	r1, r4
   381d4:	add	r0, sp, #52	; 0x34
   381d6:	blx	87c4 <memset@plt+0x4>
   381da:	add	r1, sp, #4
   381dc:	mov	r0, r7
   381de:	bl	37f98 <blake2b_init_param@@Base>
   381e2:	cmp	r0, r4
   381e4:	blt.n	3817a <blake2b_init_key@@Base+0x22>
   381e6:	add	r5, sp, #68	; 0x44
   381e8:	movs	r2, #128	; 0x80
   381ea:	mov	r1, r4
   381ec:	mov	r0, r5
   381ee:	blx	87c4 <memset@plt+0x4>
   381f2:	movs	r3, #128	; 0x80
   381f4:	mov	r2, r6
   381f6:	mov	r1, r8
   381f8:	mov	r0, r5
   381fa:	blx	85a0 <__memcpy_chk@plt>
   381fe:	movs	r2, #128	; 0x80
   38200:	mov	r1, r5
   38202:	mov	r0, r7
   38204:	bl	38080 <blake2b_update@@Base>
   38208:	ldr	r3, [pc, #32]	; (3822c <blake2b_init_key@@Base+0xd4>)
   3820a:	movs	r2, #128	; 0x80
   3820c:	mov	r1, r4
   3820e:	add	r3, pc
   38210:	mov	r0, r5
   38212:	ldr	r3, [r3, #0]
   38214:	blx	r3
   38216:	mov	r0, r4
   38218:	b.n	3817e <blake2b_init_key@@Base+0x26>
   3821a:	add	sp, #200	; 0xc8
   3821c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   38220:	pop	{r1, r2, r3, r4}
   38222:	movs	r2, r0
   38224:	lsls	r0, r4, #8
   38226:	movs	r0, r0
   38228:	pop	{r1}
   3822a:	movs	r2, r0
   3822c:	beq.n	382bc <blake2b_final@@Base+0x8c>
   3822e:	movs	r2, r0

00038230 <blake2b_final@@Base>:
   38230:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   38234:	mov	r6, r2
   38236:	ldr	r2, [pc, #280]	; (38350 <blake2b_final@@Base+0x120>)
   38238:	sub	sp, #76	; 0x4c
   3823a:	ldr	r3, [pc, #280]	; (38354 <blake2b_final@@Base+0x124>)
   3823c:	mov	r5, r1
   3823e:	add	r2, pc
   38240:	mov	r4, r0
   38242:	movs	r1, #0
   38244:	add	r0, sp, #8
   38246:	ldr	r3, [r2, r3]
   38248:	movs	r2, #60	; 0x3c
   3824a:	ldr	r3, [r3, #0]
   3824c:	str	r3, [sp, #68]	; 0x44
   3824e:	mov.w	r3, #0
   38252:	str	r1, [sp, #4]
   38254:	blx	87c4 <memset@plt+0x4>
   38258:	cmp	r5, #0
   3825a:	beq.n	38344 <blake2b_final@@Base+0x114>
   3825c:	ldr.w	r3, [r4, #228]	; 0xe4
   38260:	cmp	r3, r6
   38262:	bhi.n	38344 <blake2b_final@@Base+0x114>
   38264:	ldrd	r2, r3, [r4, #80]	; 0x50
   38268:	orrs	r3, r2
   3826a:	bne.n	38344 <blake2b_final@@Base+0x114>
   3826c:	ldrd	r2, r3, [r4, #64]	; 0x40
   38270:	movs	r7, #0
   38272:	ldr.w	r0, [r4, #224]	; 0xe0
   38276:	adds.w	r8, r0, r2
   3827a:	adcs.w	r9, r7, r3
   3827e:	ldrd	r2, r3, [r4, #72]	; 0x48
   38282:	strd	r8, r9, [r4, #64]	; 0x40
   38286:	ite	cs
   38288:	movcs	r1, #1
   3828a:	movcc	r1, #0
   3828c:	adds	r2, r2, r1
   3828e:	ldrb.w	r1, [r4, #232]	; 0xe8
   38292:	adc.w	r3, r3, #0
   38296:	strd	r2, r3, [r4, #72]	; 0x48
   3829a:	mov.w	r2, #4294967295	; 0xffffffff
   3829e:	mov.w	r3, #4294967295	; 0xffffffff
   382a2:	cbz	r1, 382a8 <blake2b_final@@Base+0x78>
   382a4:	strd	r2, r3, [r4, #88]	; 0x58
   382a8:	add.w	r6, r4, #96	; 0x60
   382ac:	strd	r2, r3, [r4, #80]	; 0x50
   382b0:	movs	r1, #0
   382b2:	rsb	r2, r0, #128	; 0x80
   382b6:	add	r0, r6
   382b8:	add.w	r7, r4, #56	; 0x38
   382bc:	blx	87c4 <memset@plt+0x4>
   382c0:	mov	r1, r6
   382c2:	mov	r0, r4
   382c4:	bl	34558 <SHA256Result@@Base+0x1c>
   382c8:	add	r3, sp, #4
   382ca:	sub.w	r1, r4, #8
   382ce:	mov	r6, r3
   382d0:	ldr.w	r0, [r1, #8]!
   382d4:	adds	r3, #8
   382d6:	cmp	r1, r7
   382d8:	ldr	r2, [r1, #4]
   382da:	mov.w	ip, r0, lsr #8
   382de:	strb.w	r0, [r3, #-8]
   382e2:	strb.w	ip, [r3, #-7]
   382e6:	mov.w	ip, r0, lsr #16
   382ea:	strb.w	r2, [r3, #-4]
   382ee:	mov.w	r0, r0, lsr #24
   382f2:	strb.w	ip, [r3, #-6]
   382f6:	strb.w	r0, [r3, #-5]
   382fa:	mov.w	r0, r2, lsr #8
   382fe:	strb.w	r0, [r3, #-3]
   38302:	mov.w	r0, r2, lsr #16
   38306:	mov.w	r2, r2, lsr #24
   3830a:	strb.w	r0, [r3, #-2]
   3830e:	strb.w	r2, [r3, #-1]
   38312:	bne.n	382d0 <blake2b_final@@Base+0xa0>
   38314:	ldr.w	r2, [r4, #228]	; 0xe4
   38318:	mov	r1, r6
   3831a:	mov	r0, r5
   3831c:	blx	8480 <memcpy@plt+0x4>
   38320:	ldr	r3, [pc, #52]	; (38358 <blake2b_final@@Base+0x128>)
   38322:	movs	r2, #64	; 0x40
   38324:	movs	r1, #0
   38326:	add	r3, pc
   38328:	mov	r0, r6
   3832a:	ldr	r3, [r3, #0]
   3832c:	blx	r3
   3832e:	movs	r0, #0
   38330:	ldr	r2, [pc, #40]	; (3835c <blake2b_final@@Base+0x12c>)
   38332:	ldr	r3, [pc, #32]	; (38354 <blake2b_final@@Base+0x124>)
   38334:	add	r2, pc
   38336:	ldr	r3, [r2, r3]
   38338:	ldr	r2, [r3, #0]
   3833a:	ldr	r3, [sp, #68]	; 0x44
   3833c:	eors	r2, r3
   3833e:	beq.n	3834a <blake2b_final@@Base+0x11a>
   38340:	blx	8510 <__stack_chk_fail@plt>
   38344:	mov.w	r0, #4294967295	; 0xffffffff
   38348:	b.n	38330 <blake2b_final@@Base+0x100>
   3834a:	add	sp, #76	; 0x4c
   3834c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   38350:	cbnz	r6, 383a4 <blake2b@@Base+0x44>
   38352:	movs	r2, r0
   38354:	lsls	r0, r4, #8
   38356:	movs	r0, r0
   38358:	ldmia	r7!, {r1, r2, r3, r5}
   3835a:	movs	r2, r0
   3835c:	rev16	r0, r2
   3835e:	movs	r2, r0

00038360 <blake2b@@Base>:
   38360:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   38364:	mov	r6, r0
   38366:	ldr	r5, [pc, #136]	; (383f0 <blake2b@@Base+0x90>)
   38368:	sub	sp, #248	; 0xf8
   3836a:	ldr	r0, [pc, #136]	; (383f4 <blake2b@@Base+0x94>)
   3836c:	mov	r4, r1
   3836e:	add	r5, pc
   38370:	mov	r8, r3
   38372:	mov	r7, r2
   38374:	ldrd	r1, r3, [sp, #272]	; 0x110
   38378:	ldr	r0, [r5, r0]
   3837a:	ldr	r0, [r0, #0]
   3837c:	str	r0, [sp, #244]	; 0xf4
   3837e:	mov.w	r0, #0
   38382:	cbnz	r2, 383a2 <blake2b@@Base+0x42>
   38384:	cmp.w	r8, #0
   38388:	beq.n	383a2 <blake2b@@Base+0x42>
   3838a:	mov.w	r0, #4294967295	; 0xffffffff
   3838e:	ldr	r2, [pc, #104]	; (383f8 <blake2b@@Base+0x98>)
   38390:	ldr	r3, [pc, #96]	; (383f4 <blake2b@@Base+0x94>)
   38392:	add	r2, pc
   38394:	ldr	r3, [r2, r3]
   38396:	ldr	r2, [r3, #0]
   38398:	ldr	r3, [sp, #244]	; 0xf4
   3839a:	eors	r2, r3
   3839c:	beq.n	383ea <blake2b@@Base+0x8a>
   3839e:	blx	8510 <__stack_chk_fail@plt>
   383a2:	cmp	r6, #0
   383a4:	beq.n	3838a <blake2b@@Base+0x2a>
   383a6:	cbnz	r1, 383ac <blake2b@@Base+0x4c>
   383a8:	cmp	r3, #0
   383aa:	bne.n	3838a <blake2b@@Base+0x2a>
   383ac:	subs	r2, r4, #1
   383ae:	cmp	r2, #63	; 0x3f
   383b0:	bhi.n	3838a <blake2b@@Base+0x2a>
   383b2:	cmp	r3, #64	; 0x40
   383b4:	bhi.n	3838a <blake2b@@Base+0x2a>
   383b6:	mov	r5, sp
   383b8:	cbz	r3, 383e0 <blake2b@@Base+0x80>
   383ba:	mov	r2, r1
   383bc:	mov	r0, r5
   383be:	mov	r1, r4
   383c0:	bl	38158 <blake2b_init_key@@Base>
   383c4:	cmp	r0, #0
   383c6:	blt.n	3838a <blake2b@@Base+0x2a>
   383c8:	mov	r2, r8
   383ca:	mov	r1, r7
   383cc:	mov	r0, r5
   383ce:	bl	38080 <blake2b_update@@Base>
   383d2:	mov	r2, r4
   383d4:	mov	r1, r6
   383d6:	mov	r0, r5
   383d8:	bl	38230 <blake2b_final@@Base>
   383dc:	movs	r0, #0
   383de:	b.n	3838e <blake2b@@Base+0x2e>
   383e0:	mov	r1, r4
   383e2:	mov	r0, r5
   383e4:	bl	37ff4 <blake2b_init@@Base>
   383e8:	b.n	383c4 <blake2b@@Base+0x64>
   383ea:	add	sp, #248	; 0xf8
   383ec:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   383f0:	rev	r6, r2
   383f2:	movs	r2, r0
   383f4:	lsls	r0, r4, #8
   383f6:	movs	r0, r0
   383f8:	cbnz	r2, 38438 <btrfs_util_strerror@@Base+0x38>
   383fa:	movs	r2, r0

000383fc <blake2@@Base>:
   383fc:	b.w	38360 <blake2b@@Base>

00038400 <btrfs_util_strerror@@Base>:
   38400:	cmp	r0, #26
   38402:	bhi.n	3840e <btrfs_util_strerror@@Base+0xe>
   38404:	ldr	r3, [pc, #12]	; (38414 <btrfs_util_strerror@@Base+0x14>)
   38406:	add	r3, pc
   38408:	ldr.w	r0, [r3, r0, lsl #2]
   3840c:	bx	lr
   3840e:	movs	r0, #0
   38410:	bx	lr
   38412:	nop
   38414:			; <UNDEFINED> instruction: 0xb7fa
   38416:	movs	r2, r0
   38418:	subs	r2, r1, #1
   3841a:	it	eq
   3841c:	bxeq	lr
   3841e:	bcc.w	3866a <btrfs_util_strerror@@Base+0x26a>
   38422:	cmp	r0, r1
   38424:	bls.w	38654 <btrfs_util_strerror@@Base+0x254>
   38428:	tst	r1, r2
   3842a:	beq.w	3865c <btrfs_util_strerror@@Base+0x25c>
   3842e:	clz	r3, r0
   38432:	clz	r2, r1
   38436:	sub.w	r3, r2, r3
   3843a:	rsb	r3, r3, #31
   3843e:	add	r2, pc, #16	; (adr r2, 38450 <btrfs_util_strerror@@Base+0x50>)
   38440:	add.w	r3, r2, r3, lsl #4
   38444:	mov.w	r2, #0
   38448:	mov	pc, r3
   3844a:	nop
   3844c:	nop.w
   38450:	cmp.w	r0, r1, lsl #31
   38454:	nop
   38456:	adc.w	r2, r2, r2
   3845a:	it	cs
   3845c:	subcs.w	r0, r0, r1, lsl #31
   38460:	cmp.w	r0, r1, lsl #30
   38464:	nop
   38466:	adc.w	r2, r2, r2
   3846a:	it	cs
   3846c:	subcs.w	r0, r0, r1, lsl #30
   38470:	cmp.w	r0, r1, lsl #29
   38474:	nop
   38476:	adc.w	r2, r2, r2
   3847a:	it	cs
   3847c:	subcs.w	r0, r0, r1, lsl #29
   38480:	cmp.w	r0, r1, lsl #28
   38484:	nop
   38486:	adc.w	r2, r2, r2
   3848a:	it	cs
   3848c:	subcs.w	r0, r0, r1, lsl #28
   38490:	cmp.w	r0, r1, lsl #27
   38494:	nop
   38496:	adc.w	r2, r2, r2
   3849a:	it	cs
   3849c:	subcs.w	r0, r0, r1, lsl #27
   384a0:	cmp.w	r0, r1, lsl #26
   384a4:	nop
   384a6:	adc.w	r2, r2, r2
   384aa:	it	cs
   384ac:	subcs.w	r0, r0, r1, lsl #26
   384b0:	cmp.w	r0, r1, lsl #25
   384b4:	nop
   384b6:	adc.w	r2, r2, r2
   384ba:	it	cs
   384bc:	subcs.w	r0, r0, r1, lsl #25
   384c0:	cmp.w	r0, r1, lsl #24
   384c4:	nop
   384c6:	adc.w	r2, r2, r2
   384ca:	it	cs
   384cc:	subcs.w	r0, r0, r1, lsl #24
   384d0:	cmp.w	r0, r1, lsl #23
   384d4:	nop
   384d6:	adc.w	r2, r2, r2
   384da:	it	cs
   384dc:	subcs.w	r0, r0, r1, lsl #23
   384e0:	cmp.w	r0, r1, lsl #22
   384e4:	nop
   384e6:	adc.w	r2, r2, r2
   384ea:	it	cs
   384ec:	subcs.w	r0, r0, r1, lsl #22
   384f0:	cmp.w	r0, r1, lsl #21
   384f4:	nop
   384f6:	adc.w	r2, r2, r2
   384fa:	it	cs
   384fc:	subcs.w	r0, r0, r1, lsl #21
   38500:	cmp.w	r0, r1, lsl #20
   38504:	nop
   38506:	adc.w	r2, r2, r2
   3850a:	it	cs
   3850c:	subcs.w	r0, r0, r1, lsl #20
   38510:	cmp.w	r0, r1, lsl #19
   38514:	nop
   38516:	adc.w	r2, r2, r2
   3851a:	it	cs
   3851c:	subcs.w	r0, r0, r1, lsl #19
   38520:	cmp.w	r0, r1, lsl #18
   38524:	nop
   38526:	adc.w	r2, r2, r2
   3852a:	it	cs
   3852c:	subcs.w	r0, r0, r1, lsl #18
   38530:	cmp.w	r0, r1, lsl #17
   38534:	nop
   38536:	adc.w	r2, r2, r2
   3853a:	it	cs
   3853c:	subcs.w	r0, r0, r1, lsl #17
   38540:	cmp.w	r0, r1, lsl #16
   38544:	nop
   38546:	adc.w	r2, r2, r2
   3854a:	it	cs
   3854c:	subcs.w	r0, r0, r1, lsl #16
   38550:	cmp.w	r0, r1, lsl #15
   38554:	nop
   38556:	adc.w	r2, r2, r2
   3855a:	it	cs
   3855c:	subcs.w	r0, r0, r1, lsl #15
   38560:	cmp.w	r0, r1, lsl #14
   38564:	nop
   38566:	adc.w	r2, r2, r2
   3856a:	it	cs
   3856c:	subcs.w	r0, r0, r1, lsl #14
   38570:	cmp.w	r0, r1, lsl #13
   38574:	nop
   38576:	adc.w	r2, r2, r2
   3857a:	it	cs
   3857c:	subcs.w	r0, r0, r1, lsl #13
   38580:	cmp.w	r0, r1, lsl #12
   38584:	nop
   38586:	adc.w	r2, r2, r2
   3858a:	it	cs
   3858c:	subcs.w	r0, r0, r1, lsl #12
   38590:	cmp.w	r0, r1, lsl #11
   38594:	nop
   38596:	adc.w	r2, r2, r2
   3859a:	it	cs
   3859c:	subcs.w	r0, r0, r1, lsl #11
   385a0:	cmp.w	r0, r1, lsl #10
   385a4:	nop
   385a6:	adc.w	r2, r2, r2
   385aa:	it	cs
   385ac:	subcs.w	r0, r0, r1, lsl #10
   385b0:	cmp.w	r0, r1, lsl #9
   385b4:	nop
   385b6:	adc.w	r2, r2, r2
   385ba:	it	cs
   385bc:	subcs.w	r0, r0, r1, lsl #9
   385c0:	cmp.w	r0, r1, lsl #8
   385c4:	nop
   385c6:	adc.w	r2, r2, r2
   385ca:	it	cs
   385cc:	subcs.w	r0, r0, r1, lsl #8
   385d0:	cmp.w	r0, r1, lsl #7
   385d4:	nop
   385d6:	adc.w	r2, r2, r2
   385da:	it	cs
   385dc:	subcs.w	r0, r0, r1, lsl #7
   385e0:	cmp.w	r0, r1, lsl #6
   385e4:	nop
   385e6:	adc.w	r2, r2, r2
   385ea:	it	cs
   385ec:	subcs.w	r0, r0, r1, lsl #6
   385f0:	cmp.w	r0, r1, lsl #5
   385f4:	nop
   385f6:	adc.w	r2, r2, r2
   385fa:	it	cs
   385fc:	subcs.w	r0, r0, r1, lsl #5
   38600:	cmp.w	r0, r1, lsl #4
   38604:	nop
   38606:	adc.w	r2, r2, r2
   3860a:	it	cs
   3860c:	subcs.w	r0, r0, r1, lsl #4
   38610:	cmp.w	r0, r1, lsl #3
   38614:	nop
   38616:	adc.w	r2, r2, r2
   3861a:	it	cs
   3861c:	subcs.w	r0, r0, r1, lsl #3
   38620:	cmp.w	r0, r1, lsl #2
   38624:	nop
   38626:	adc.w	r2, r2, r2
   3862a:	it	cs
   3862c:	subcs.w	r0, r0, r1, lsl #2
   38630:	cmp.w	r0, r1, lsl #1
   38634:	nop
   38636:	adc.w	r2, r2, r2
   3863a:	it	cs
   3863c:	subcs.w	r0, r0, r1, lsl #1
   38640:	cmp.w	r0, r1
   38644:	nop
   38646:	adc.w	r2, r2, r2
   3864a:	it	cs
   3864c:	subcs.w	r0, r0, r1
   38650:	mov	r0, r2
   38652:	bx	lr
   38654:	ite	eq
   38656:	moveq	r0, #1
   38658:	movne	r0, #0
   3865a:	bx	lr
   3865c:	clz	r2, r1
   38660:	rsb	r2, r2, #31
   38664:	lsr.w	r0, r0, r2
   38668:	bx	lr
   3866a:	cbz	r0, 38670 <btrfs_util_strerror@@Base+0x270>
   3866c:	mov.w	r0, #4294967295	; 0xffffffff
   38670:	b.w	38c2c <btrfs_util_strerror@@Base+0x82c>
   38674:	cmp	r1, #0
   38676:	beq.n	3866a <btrfs_util_strerror@@Base+0x26a>
   38678:	stmdb	sp!, {r0, r1, lr}
   3867c:	bl	38418 <btrfs_util_strerror@@Base+0x18>
   38680:	ldmia.w	sp!, {r1, r2, lr}
   38684:	mul.w	r3, r2, r0
   38688:	sub.w	r1, r1, r3
   3868c:	bx	lr
   3868e:	nop
   38690:	cmp	r1, #0
   38692:	beq.w	38912 <btrfs_util_strerror@@Base+0x512>
   38696:	eor.w	ip, r0, r1
   3869a:	it	mi
   3869c:	negmi	r1, r1
   3869e:	subs	r2, r1, #1
   386a0:	beq.w	388e2 <btrfs_util_strerror@@Base+0x4e2>
   386a4:	movs	r3, r0
   386a6:	it	mi
   386a8:	negmi	r3, r0
   386aa:	cmp	r3, r1
   386ac:	bls.w	388ec <btrfs_util_strerror@@Base+0x4ec>
   386b0:	tst	r1, r2
   386b2:	beq.w	388fc <btrfs_util_strerror@@Base+0x4fc>
   386b6:	clz	r2, r3
   386ba:	clz	r0, r1
   386be:	sub.w	r2, r0, r2
   386c2:	rsb	r2, r2, #31
   386c6:	add	r0, pc, #16	; (adr r0, 386d8 <btrfs_util_strerror@@Base+0x2d8>)
   386c8:	add.w	r2, r0, r2, lsl #4
   386cc:	mov.w	r0, #0
   386d0:	mov	pc, r2
   386d2:	nop
   386d4:	nop.w
   386d8:	cmp.w	r3, r1, lsl #31
   386dc:	nop
   386de:	adc.w	r0, r0, r0
   386e2:	it	cs
   386e4:	subcs.w	r3, r3, r1, lsl #31
   386e8:	cmp.w	r3, r1, lsl #30
   386ec:	nop
   386ee:	adc.w	r0, r0, r0
   386f2:	it	cs
   386f4:	subcs.w	r3, r3, r1, lsl #30
   386f8:	cmp.w	r3, r1, lsl #29
   386fc:	nop
   386fe:	adc.w	r0, r0, r0
   38702:	it	cs
   38704:	subcs.w	r3, r3, r1, lsl #29
   38708:	cmp.w	r3, r1, lsl #28
   3870c:	nop
   3870e:	adc.w	r0, r0, r0
   38712:	it	cs
   38714:	subcs.w	r3, r3, r1, lsl #28
   38718:	cmp.w	r3, r1, lsl #27
   3871c:	nop
   3871e:	adc.w	r0, r0, r0
   38722:	it	cs
   38724:	subcs.w	r3, r3, r1, lsl #27
   38728:	cmp.w	r3, r1, lsl #26
   3872c:	nop
   3872e:	adc.w	r0, r0, r0
   38732:	it	cs
   38734:	subcs.w	r3, r3, r1, lsl #26
   38738:	cmp.w	r3, r1, lsl #25
   3873c:	nop
   3873e:	adc.w	r0, r0, r0
   38742:	it	cs
   38744:	subcs.w	r3, r3, r1, lsl #25
   38748:	cmp.w	r3, r1, lsl #24
   3874c:	nop
   3874e:	adc.w	r0, r0, r0
   38752:	it	cs
   38754:	subcs.w	r3, r3, r1, lsl #24
   38758:	cmp.w	r3, r1, lsl #23
   3875c:	nop
   3875e:	adc.w	r0, r0, r0
   38762:	it	cs
   38764:	subcs.w	r3, r3, r1, lsl #23
   38768:	cmp.w	r3, r1, lsl #22
   3876c:	nop
   3876e:	adc.w	r0, r0, r0
   38772:	it	cs
   38774:	subcs.w	r3, r3, r1, lsl #22
   38778:	cmp.w	r3, r1, lsl #21
   3877c:	nop
   3877e:	adc.w	r0, r0, r0
   38782:	it	cs
   38784:	subcs.w	r3, r3, r1, lsl #21
   38788:	cmp.w	r3, r1, lsl #20
   3878c:	nop
   3878e:	adc.w	r0, r0, r0
   38792:	it	cs
   38794:	subcs.w	r3, r3, r1, lsl #20
   38798:	cmp.w	r3, r1, lsl #19
   3879c:	nop
   3879e:	adc.w	r0, r0, r0
   387a2:	it	cs
   387a4:	subcs.w	r3, r3, r1, lsl #19
   387a8:	cmp.w	r3, r1, lsl #18
   387ac:	nop
   387ae:	adc.w	r0, r0, r0
   387b2:	it	cs
   387b4:	subcs.w	r3, r3, r1, lsl #18
   387b8:	cmp.w	r3, r1, lsl #17
   387bc:	nop
   387be:	adc.w	r0, r0, r0
   387c2:	it	cs
   387c4:	subcs.w	r3, r3, r1, lsl #17
   387c8:	cmp.w	r3, r1, lsl #16
   387cc:	nop
   387ce:	adc.w	r0, r0, r0
   387d2:	it	cs
   387d4:	subcs.w	r3, r3, r1, lsl #16
   387d8:	cmp.w	r3, r1, lsl #15
   387dc:	nop
   387de:	adc.w	r0, r0, r0
   387e2:	it	cs
   387e4:	subcs.w	r3, r3, r1, lsl #15
   387e8:	cmp.w	r3, r1, lsl #14
   387ec:	nop
   387ee:	adc.w	r0, r0, r0
   387f2:	it	cs
   387f4:	subcs.w	r3, r3, r1, lsl #14
   387f8:	cmp.w	r3, r1, lsl #13
   387fc:	nop
   387fe:	adc.w	r0, r0, r0
   38802:	it	cs
   38804:	subcs.w	r3, r3, r1, lsl #13
   38808:	cmp.w	r3, r1, lsl #12
   3880c:	nop
   3880e:	adc.w	r0, r0, r0
   38812:	it	cs
   38814:	subcs.w	r3, r3, r1, lsl #12
   38818:	cmp.w	r3, r1, lsl #11
   3881c:	nop
   3881e:	adc.w	r0, r0, r0
   38822:	it	cs
   38824:	subcs.w	r3, r3, r1, lsl #11
   38828:	cmp.w	r3, r1, lsl #10
   3882c:	nop
   3882e:	adc.w	r0, r0, r0
   38832:	it	cs
   38834:	subcs.w	r3, r3, r1, lsl #10
   38838:	cmp.w	r3, r1, lsl #9
   3883c:	nop
   3883e:	adc.w	r0, r0, r0
   38842:	it	cs
   38844:	subcs.w	r3, r3, r1, lsl #9
   38848:	cmp.w	r3, r1, lsl #8
   3884c:	nop
   3884e:	adc.w	r0, r0, r0
   38852:	it	cs
   38854:	subcs.w	r3, r3, r1, lsl #8
   38858:	cmp.w	r3, r1, lsl #7
   3885c:	nop
   3885e:	adc.w	r0, r0, r0
   38862:	it	cs
   38864:	subcs.w	r3, r3, r1, lsl #7
   38868:	cmp.w	r3, r1, lsl #6
   3886c:	nop
   3886e:	adc.w	r0, r0, r0
   38872:	it	cs
   38874:	subcs.w	r3, r3, r1, lsl #6
   38878:	cmp.w	r3, r1, lsl #5
   3887c:	nop
   3887e:	adc.w	r0, r0, r0
   38882:	it	cs
   38884:	subcs.w	r3, r3, r1, lsl #5
   38888:	cmp.w	r3, r1, lsl #4
   3888c:	nop
   3888e:	adc.w	r0, r0, r0
   38892:	it	cs
   38894:	subcs.w	r3, r3, r1, lsl #4
   38898:	cmp.w	r3, r1, lsl #3
   3889c:	nop
   3889e:	adc.w	r0, r0, r0
   388a2:	it	cs
   388a4:	subcs.w	r3, r3, r1, lsl #3
   388a8:	cmp.w	r3, r1, lsl #2
   388ac:	nop
   388ae:	adc.w	r0, r0, r0
   388b2:	it	cs
   388b4:	subcs.w	r3, r3, r1, lsl #2
   388b8:	cmp.w	r3, r1, lsl #1
   388bc:	nop
   388be:	adc.w	r0, r0, r0
   388c2:	it	cs
   388c4:	subcs.w	r3, r3, r1, lsl #1
   388c8:	cmp.w	r3, r1
   388cc:	nop
   388ce:	adc.w	r0, r0, r0
   388d2:	it	cs
   388d4:	subcs.w	r3, r3, r1
   388d8:	cmp.w	ip, #0
   388dc:	it	mi
   388de:	negmi	r0, r0
   388e0:	bx	lr
   388e2:	teq	ip, r0
   388e6:	it	mi
   388e8:	negmi	r0, r0
   388ea:	bx	lr
   388ec:	it	cc
   388ee:	movcc	r0, #0
   388f0:	itt	eq
   388f2:	moveq.w	r0, ip, asr #31
   388f6:	orreq.w	r0, r0, #1
   388fa:	bx	lr
   388fc:	clz	r2, r1
   38900:	rsb	r2, r2, #31
   38904:	cmp.w	ip, #0
   38908:	lsr.w	r0, r3, r2
   3890c:	it	mi
   3890e:	negmi	r0, r0
   38910:	bx	lr
   38912:	cmp	r0, #0
   38914:	it	gt
   38916:	mvngt.w	r0, #2147483648	; 0x80000000
   3891a:	it	lt
   3891c:	movlt.w	r0, #2147483648	; 0x80000000
   38920:	b.w	38c2c <btrfs_util_strerror@@Base+0x82c>
   38924:	cmp	r1, #0
   38926:	beq.n	38912 <btrfs_util_strerror@@Base+0x512>
   38928:	stmdb	sp!, {r0, r1, lr}
   3892c:	bl	38696 <btrfs_util_strerror@@Base+0x296>
   38930:	ldmia.w	sp!, {r1, r2, lr}
   38934:	mul.w	r3, r2, r0
   38938:	sub.w	r1, r1, r3
   3893c:	bx	lr
   3893e:	nop
   38940:	eor.w	r0, r0, #2147483648	; 0x80000000
   38944:	b.n	3894c <btrfs_util_strerror@@Base+0x54c>
   38946:	nop
   38948:	eor.w	r1, r1, #2147483648	; 0x80000000
   3894c:	lsls	r2, r0, #1
   3894e:	itttt	ne
   38950:	movsne.w	r3, r1, lsl #1
   38954:	teqne	r2, r3
   38958:	mvnsne.w	ip, r2, asr #24
   3895c:	mvnsne.w	ip, r3, asr #24
   38960:	beq.n	38a38 <btrfs_util_strerror@@Base+0x638>
   38962:	mov.w	r2, r2, lsr #24
   38966:	rsbs	r3, r2, r3, lsr #24
   3896a:	itttt	gt
   3896c:	addgt	r2, r2, r3
   3896e:	eorgt	r1, r0
   38970:	eorgt	r0, r1
   38972:	eorgt	r1, r0
   38974:	it	lt
   38976:	neglt	r3, r3
   38978:	cmp	r3, #25
   3897a:	it	hi
   3897c:	bxhi	lr
   3897e:	tst.w	r0, #2147483648	; 0x80000000
   38982:	orr.w	r0, r0, #8388608	; 0x800000
   38986:	bic.w	r0, r0, #4278190080	; 0xff000000
   3898a:	it	ne
   3898c:	negne	r0, r0
   3898e:	tst.w	r1, #2147483648	; 0x80000000
   38992:	orr.w	r1, r1, #8388608	; 0x800000
   38996:	bic.w	r1, r1, #4278190080	; 0xff000000
   3899a:	it	ne
   3899c:	negne	r1, r1
   3899e:	teq	r2, r3
   389a2:	beq.n	38a24 <btrfs_util_strerror@@Base+0x624>
   389a4:	sub.w	r2, r2, #1
   389a8:	asr.w	ip, r1, r3
   389ac:	adds.w	r0, r0, ip
   389b0:	rsb	r3, r3, #32
   389b4:	lsl.w	r1, r1, r3
   389b8:	and.w	r3, r0, #2147483648	; 0x80000000
   389bc:	bpl.n	389c4 <btrfs_util_strerror@@Base+0x5c4>
   389be:	negs	r1, r1
   389c0:	sbc.w	r0, r0, r0, lsl #1
   389c4:	cmp.w	r0, #8388608	; 0x800000
   389c8:	bcc.n	389f2 <btrfs_util_strerror@@Base+0x5f2>
   389ca:	cmp.w	r0, #16777216	; 0x1000000
   389ce:	bcc.n	389de <btrfs_util_strerror@@Base+0x5de>
   389d0:	lsrs	r0, r0, #1
   389d2:	mov.w	r1, r1, rrx
   389d6:	add.w	r2, r2, #1
   389da:	cmp	r2, #254	; 0xfe
   389dc:	bcs.n	38a82 <btrfs_util_strerror@@Base+0x682>
   389de:	cmp.w	r1, #2147483648	; 0x80000000
   389e2:	adc.w	r0, r0, r2, lsl #23
   389e6:	it	eq
   389e8:	biceq.w	r0, r0, #1
   389ec:	orr.w	r0, r0, r3
   389f0:	bx	lr
   389f2:	lsls	r1, r1, #1
   389f4:	adc.w	r0, r0, r0
   389f8:	subs	r2, #1
   389fa:	it	cs
   389fc:	cmpcs.w	r0, #8388608	; 0x800000
   38a00:	bcs.n	389de <btrfs_util_strerror@@Base+0x5de>
   38a02:	clz	ip, r0
   38a06:	sub.w	ip, ip, #8
   38a0a:	subs.w	r2, r2, ip
   38a0e:	lsl.w	r0, r0, ip
   38a12:	itet	ge
   38a14:	addge.w	r0, r0, r2, lsl #23
   38a18:	neglt	r2, r2
   38a1a:	orrge	r0, r3
   38a1c:	itt	lt
   38a1e:	lsrlt	r0, r2
   38a20:	orrlt	r0, r3
   38a22:	bx	lr
   38a24:	teq	r2, #0
   38a28:	eor.w	r1, r1, #8388608	; 0x800000
   38a2c:	itte	eq
   38a2e:	eoreq.w	r0, r0, #8388608	; 0x800000
   38a32:	addeq	r2, #1
   38a34:	subne	r3, #1
   38a36:	b.n	389a4 <btrfs_util_strerror@@Base+0x5a4>
   38a38:	mov.w	r3, r1, lsl #1
   38a3c:	mvns.w	ip, r2, asr #24
   38a40:	it	ne
   38a42:	mvnsne.w	ip, r3, asr #24
   38a46:	beq.n	38a8c <btrfs_util_strerror@@Base+0x68c>
   38a48:	teq	r2, r3
   38a4c:	beq.n	38a58 <btrfs_util_strerror@@Base+0x658>
   38a4e:	teq	r2, #0
   38a52:	it	eq
   38a54:	moveq	r0, r1
   38a56:	bx	lr
   38a58:	teq	r0, r1
   38a5c:	itt	ne
   38a5e:	movne	r0, #0
   38a60:	bxne	lr
   38a62:	tst.w	r2, #4278190080	; 0xff000000
   38a66:	bne.n	38a72 <btrfs_util_strerror@@Base+0x672>
   38a68:	lsls	r0, r0, #1
   38a6a:	it	cs
   38a6c:	orrcs.w	r0, r0, #2147483648	; 0x80000000
   38a70:	bx	lr
   38a72:	adds.w	r2, r2, #33554432	; 0x2000000
   38a76:	itt	cc
   38a78:	addcc.w	r0, r0, #8388608	; 0x800000
   38a7c:	bxcc	lr
   38a7e:	and.w	r3, r0, #2147483648	; 0x80000000
   38a82:	orr.w	r0, r3, #2130706432	; 0x7f000000
   38a86:	orr.w	r0, r0, #8388608	; 0x800000
   38a8a:	bx	lr
   38a8c:	mvns.w	r2, r2, asr #24
   38a90:	itet	ne
   38a92:	movne	r0, r1
   38a94:	mvnseq.w	r3, r3, asr #24
   38a98:	movne	r1, r0
   38a9a:	lsls	r2, r0, #9
   38a9c:	itte	eq
   38a9e:	movseq.w	r3, r1, lsl #9
   38aa2:	teqeq	r0, r1
   38aa6:	orrne.w	r0, r0, #4194304	; 0x400000
   38aaa:	bx	lr
   38aac:	mov.w	r3, #0
   38ab0:	b.n	38abc <btrfs_util_strerror@@Base+0x6bc>
   38ab2:	nop
   38ab4:	ands.w	r3, r0, #2147483648	; 0x80000000
   38ab8:	it	mi
   38aba:	negmi	r0, r0
   38abc:	movs.w	ip, r0
   38ac0:	it	eq
   38ac2:	bxeq	lr
   38ac4:	orr.w	r3, r3, #1258291200	; 0x4b000000
   38ac8:	mov	r1, r0
   38aca:	mov.w	r0, #0
   38ace:	b.n	38b0a <btrfs_util_strerror@@Base+0x70a>
   38ad0:	orrs.w	r2, r0, r1
   38ad4:	it	eq
   38ad6:	bxeq	lr
   38ad8:	mov.w	r3, #0
   38adc:	b.n	38af4 <btrfs_util_strerror@@Base+0x6f4>
   38ade:	nop
   38ae0:	orrs.w	r2, r0, r1
   38ae4:	it	eq
   38ae6:	bxeq	lr
   38ae8:	ands.w	r3, r1, #2147483648	; 0x80000000
   38aec:	bpl.n	38af4 <btrfs_util_strerror@@Base+0x6f4>
   38aee:	negs	r0, r0
   38af0:	sbc.w	r1, r1, r1, lsl #1
   38af4:	movs.w	ip, r1
   38af8:	ittt	eq
   38afa:	moveq	ip, r0
   38afc:	moveq	r1, r0
   38afe:	moveq	r0, #0
   38b00:	orr.w	r3, r3, #1526726656	; 0x5b000000
   38b04:	it	eq
   38b06:	subeq.w	r3, r3, #268435456	; 0x10000000
   38b0a:	sub.w	r3, r3, #8388608	; 0x800000
   38b0e:	clz	r2, ip
   38b12:	subs	r2, #8
   38b14:	sub.w	r3, r3, r2, lsl #23
   38b18:	blt.n	38b3c <btrfs_util_strerror@@Base+0x73c>
   38b1a:	lsl.w	ip, r1, r2
   38b1e:	add	r3, ip
   38b20:	lsl.w	ip, r0, r2
   38b24:	rsb	r2, r2, #32
   38b28:	cmp.w	ip, #2147483648	; 0x80000000
   38b2c:	lsr.w	r2, r0, r2
   38b30:	adc.w	r0, r3, r2
   38b34:	it	eq
   38b36:	biceq.w	r0, r0, #1
   38b3a:	bx	lr
   38b3c:	add.w	r2, r2, #32
   38b40:	lsl.w	ip, r1, r2
   38b44:	rsb	r2, r2, #32
   38b48:	orrs.w	r0, r0, ip, lsl #1
   38b4c:	lsr.w	r2, r1, r2
   38b50:	adc.w	r0, r3, r2
   38b54:	it	eq
   38b56:	biceq.w	r0, r0, ip, lsr #31
   38b5a:	bx	lr
   38b5c:	cbnz	r3, 38b7e <btrfs_util_strerror@@Base+0x77e>
   38b5e:	cbnz	r2, 38b7e <btrfs_util_strerror@@Base+0x77e>
   38b60:	cmp	r1, #0
   38b62:	ittt	lt
   38b64:	movlt	r0, #0
   38b66:	movlt.w	r1, #2147483648	; 0x80000000
   38b6a:	blt.n	38b7a <btrfs_util_strerror@@Base+0x77a>
   38b6c:	it	eq
   38b6e:	cmpeq	r0, #0
   38b70:	itt	ne
   38b72:	mvnne.w	r1, #2147483648	; 0x80000000
   38b76:	movne.w	r0, #4294967295	; 0xffffffff
   38b7a:	b.w	38c2c <btrfs_util_strerror@@Base+0x82c>
   38b7e:	sub.w	ip, sp, #8
   38b82:	strd	ip, lr, [sp, #-16]!
   38b86:	cmp	r1, #0
   38b88:	blt.n	38b9e <btrfs_util_strerror@@Base+0x79e>
   38b8a:	cmp	r3, #0
   38b8c:	blt.n	38bc4 <btrfs_util_strerror@@Base+0x7c4>
   38b8e:	bl	38c38 <btrfs_util_strerror@@Base+0x838>
   38b92:	ldr.w	lr, [sp, #4]
   38b96:	ldrd	r2, r3, [sp, #8]
   38b9a:	add	sp, #16
   38b9c:	bx	lr
   38b9e:	negs	r0, r0
   38ba0:	sbc.w	r1, r1, r1, lsl #1
   38ba4:	cmp	r3, #0
   38ba6:	blt.n	38be0 <btrfs_util_strerror@@Base+0x7e0>
   38ba8:	bl	38c38 <btrfs_util_strerror@@Base+0x838>
   38bac:	ldr.w	lr, [sp, #4]
   38bb0:	ldrd	r2, r3, [sp, #8]
   38bb4:	add	sp, #16
   38bb6:	negs	r0, r0
   38bb8:	sbc.w	r1, r1, r1, lsl #1
   38bbc:	negs	r2, r2
   38bbe:	sbc.w	r3, r3, r3, lsl #1
   38bc2:	bx	lr
   38bc4:	negs	r2, r2
   38bc6:	sbc.w	r3, r3, r3, lsl #1
   38bca:	bl	38c38 <btrfs_util_strerror@@Base+0x838>
   38bce:	ldr.w	lr, [sp, #4]
   38bd2:	ldrd	r2, r3, [sp, #8]
   38bd6:	add	sp, #16
   38bd8:	negs	r0, r0
   38bda:	sbc.w	r1, r1, r1, lsl #1
   38bde:	bx	lr
   38be0:	negs	r2, r2
   38be2:	sbc.w	r3, r3, r3, lsl #1
   38be6:	bl	38c38 <btrfs_util_strerror@@Base+0x838>
   38bea:	ldr.w	lr, [sp, #4]
   38bee:	ldrd	r2, r3, [sp, #8]
   38bf2:	add	sp, #16
   38bf4:	negs	r2, r2
   38bf6:	sbc.w	r3, r3, r3, lsl #1
   38bfa:	bx	lr
   38bfc:	cbnz	r3, 38c14 <btrfs_util_strerror@@Base+0x814>
   38bfe:	cbnz	r2, 38c14 <btrfs_util_strerror@@Base+0x814>
   38c00:	cmp	r1, #0
   38c02:	it	eq
   38c04:	cmpeq	r0, #0
   38c06:	itt	ne
   38c08:	movne.w	r1, #4294967295	; 0xffffffff
   38c0c:	movne.w	r0, #4294967295	; 0xffffffff
   38c10:	b.w	38c2c <btrfs_util_strerror@@Base+0x82c>
   38c14:	sub.w	ip, sp, #8
   38c18:	strd	ip, lr, [sp, #-16]!
   38c1c:	bl	38c38 <btrfs_util_strerror@@Base+0x838>
   38c20:	ldr.w	lr, [sp, #4]
   38c24:	ldrd	r2, r3, [sp, #8]
   38c28:	add	sp, #16
   38c2a:	bx	lr
   38c2c:	push	{r1, lr}
   38c2e:	mov.w	r0, #8
   38c32:	blx	83a8 <raise@plt>
   38c36:	pop	{r1, pc}
   38c38:	cmp	r1, r3
   38c3a:	it	eq
   38c3c:	cmpeq	r0, r2
   38c3e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38c42:	mov	r4, r0
   38c44:	it	cc
   38c46:	movcc	r0, #0
   38c48:	mov	r5, r1
   38c4a:	ldr.w	ip, [sp, #36]	; 0x24
   38c4e:	it	cc
   38c50:	movcc	r1, r0
   38c52:	bcc.n	38d2c <btrfs_util_strerror@@Base+0x92c>
   38c54:	mov	r8, r2
   38c56:	mov	r9, r3
   38c58:	clz	r2, r3
   38c5c:	cmp	r3, #0
   38c5e:	beq.n	38d42 <btrfs_util_strerror@@Base+0x942>
   38c60:	clz	r3, r5
   38c64:	cmp	r5, #0
   38c66:	beq.n	38d3a <btrfs_util_strerror@@Base+0x93a>
   38c68:	subs	r2, r2, r3
   38c6a:	sub.w	lr, r2, #32
   38c6e:	lsl.w	fp, r9, r2
   38c72:	lsl.w	r3, r8, lr
   38c76:	rsb	r7, r2, #32
   38c7a:	orr.w	fp, fp, r3
   38c7e:	lsr.w	r3, r8, r7
   38c82:	orr.w	fp, fp, r3
   38c86:	lsl.w	sl, r8, r2
   38c8a:	cmp	r5, fp
   38c8c:	it	eq
   38c8e:	cmpeq	r4, sl
   38c90:	itt	cc
   38c92:	movcc	r0, #0
   38c94:	movcc	r1, r0
   38c96:	bcc.n	38cae <btrfs_util_strerror@@Base+0x8ae>
   38c98:	movs	r0, #1
   38c9a:	subs.w	r4, r4, sl
   38c9e:	lsl.w	r1, r0, lr
   38ca2:	lsr.w	r3, r0, r7
   38ca6:	sbc.w	r5, r5, fp
   38caa:	orrs	r1, r3
   38cac:	lsls	r0, r2
   38cae:	cmp	r2, #0
   38cb0:	beq.n	38d2c <btrfs_util_strerror@@Base+0x92c>
   38cb2:	mov.w	r8, sl, lsr #1
   38cb6:	mov.w	r9, fp, lsr #1
   38cba:	orr.w	r8, r8, fp, lsl #31
   38cbe:	mov	r6, r2
   38cc0:	b.n	38cda <btrfs_util_strerror@@Base+0x8da>
   38cc2:	subs.w	r3, r4, r8
   38cc6:	sbc.w	sl, r5, r9
   38cca:	adds	r3, r3, r3
   38ccc:	adc.w	sl, sl, sl
   38cd0:	adds	r4, r3, #1
   38cd2:	adc.w	r5, sl, #0
   38cd6:	subs	r6, #1
   38cd8:	beq.n	38cea <btrfs_util_strerror@@Base+0x8ea>
   38cda:	cmp	r5, r9
   38cdc:	it	eq
   38cde:	cmpeq	r4, r8
   38ce0:	bcs.n	38cc2 <btrfs_util_strerror@@Base+0x8c2>
   38ce2:	adds	r4, r4, r4
   38ce4:	adcs	r5, r5
   38ce6:	subs	r6, #1
   38ce8:	bne.n	38cda <btrfs_util_strerror@@Base+0x8da>
   38cea:	lsl.w	r7, r5, r7
   38cee:	lsr.w	r3, r4, r2
   38cf2:	orrs	r3, r7
   38cf4:	lsr.w	lr, r5, lr
   38cf8:	adds	r0, r0, r4
   38cfa:	lsr.w	r8, r5, r2
   38cfe:	orr.w	r4, r3, lr
   38d02:	sub.w	r7, r2, #32
   38d06:	rsb	r6, r2, #32
   38d0a:	lsl.w	r3, r8, r2
   38d0e:	lsl.w	r7, r4, r7
   38d12:	lsl.w	r2, r4, r2
   38d16:	orr.w	r3, r3, r7
   38d1a:	lsr.w	r6, r4, r6
   38d1e:	adc.w	r1, r5, r1
   38d22:	orrs	r3, r6
   38d24:	subs	r0, r0, r2
   38d26:	mov	r5, r8
   38d28:	sbc.w	r1, r1, r3
   38d2c:	cmp.w	ip, #0
   38d30:	beq.n	38d36 <btrfs_util_strerror@@Base+0x936>
   38d32:	strd	r4, r5, [ip]
   38d36:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38d3a:	clz	r3, r4
   38d3e:	adds	r3, #32
   38d40:	b.n	38c68 <btrfs_util_strerror@@Base+0x868>
   38d42:	clz	r2, r8
   38d46:	clz	r3, r5
   38d4a:	adds	r2, #32
   38d4c:	cmp	r5, #0
   38d4e:	bne.n	38c68 <btrfs_util_strerror@@Base+0x868>
   38d50:	b.n	38d3a <btrfs_util_strerror@@Base+0x93a>
   38d52:	nop

00038d54 <__libc_csu_init@@Base>:
   38d54:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   38d58:	mov	r7, r0
   38d5a:	ldr	r6, [pc, #48]	; (38d8c <__libc_csu_init@@Base+0x38>)
   38d5c:	mov	r8, r1
   38d5e:	ldr	r5, [pc, #48]	; (38d90 <__libc_csu_init@@Base+0x3c>)
   38d60:	mov	r9, r2
   38d62:	add	r6, pc
   38d64:	blx	8378 <calloc@plt-0x20>
   38d68:	add	r5, pc
   38d6a:	subs	r6, r6, r5
   38d6c:	asrs	r6, r6, #2
   38d6e:	beq.n	38d86 <__libc_csu_init@@Base+0x32>
   38d70:	subs	r5, #4
   38d72:	movs	r4, #0
   38d74:	ldr.w	r3, [r5, #4]!
   38d78:	adds	r4, #1
   38d7a:	mov	r2, r9
   38d7c:	mov	r1, r8
   38d7e:	mov	r0, r7
   38d80:	blx	r3
   38d82:	cmp	r6, r4
   38d84:	bne.n	38d74 <__libc_csu_init@@Base+0x20>
   38d86:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   38d8a:	nop
   38d8c:	add	r0, sp, #248	; 0xf8
   38d8e:	movs	r2, r0
   38d90:	add	r0, sp, #208	; 0xd0
   38d92:	movs	r2, r0

00038d94 <__libc_csu_fini@@Base>:
   38d94:	bx	lr
   38d96:	nop
   38d98:	mov	r2, r1
   38d9a:	mov	r1, r0
   38d9c:	movs	r0, #3
   38d9e:	b.w	8574 <__xstat@plt>
   38da2:	nop
   38da4:	mov	r2, r1
   38da6:	mov	r1, r0
   38da8:	movs	r0, #3
   38daa:	b.w	869c <__fxstat@plt>
   38dae:	nop
   38db0:	mov	r2, r1
   38db2:	mov	r1, r0
   38db4:	movs	r0, #3
   38db6:	b.w	8948 <__xstat64@plt>
   38dba:	nop
   38dbc:	mov	r2, r1
   38dbe:	mov	r1, r0
   38dc0:	movs	r0, #3
   38dc2:	b.w	8590 <__fxstat64@plt>
   38dc6:	nop

Disassembly of section .fini:

00038dc8 <.fini>:
   38dc8:	push	{r3, lr}
   38dcc:	pop	{r3, pc}
