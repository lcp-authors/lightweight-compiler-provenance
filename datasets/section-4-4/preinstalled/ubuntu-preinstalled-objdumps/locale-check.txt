
ubuntu-preinstalled/locale-check:     file format elf32-littlearm


Disassembly of section .init:

00000498 <.init>:
 498:	push	{r3, lr}
 49c:	bl	6f4 <abort@plt+0x1c0>
 4a0:	pop	{r3, pc}

Disassembly of section .plt:

000004a4 <__cxa_finalize@plt-0x14>:
 4a4:	push	{lr}		; (str lr, [sp, #-4]!)
 4a8:	ldr	lr, [pc, #4]	; 4b4 <__cxa_finalize@plt-0x4>
 4ac:	add	lr, pc, lr
 4b0:	ldr	pc, [lr, #8]!
 4b4:	strdeq	r0, [r1], -r4

000004b8 <__cxa_finalize@plt>:
 4b8:	add	ip, pc, #0, 12
 4bc:	add	ip, ip, #16, 20	; 0x10000
 4c0:	ldr	pc, [ip, #2804]!	; 0xaf4

000004c4 <getenv@plt>:
 4c4:	add	ip, pc, #0, 12
 4c8:	add	ip, ip, #16, 20	; 0x10000
 4cc:	ldr	pc, [ip, #2796]!	; 0xaec

000004d0 <malloc@plt>:
 4d0:	add	ip, pc, #0, 12
 4d4:	add	ip, ip, #16, 20	; 0x10000
 4d8:	ldr	pc, [ip, #2788]!	; 0xae4

000004dc <__libc_start_main@plt>:
 4dc:	add	ip, pc, #0, 12
 4e0:	add	ip, ip, #16, 20	; 0x10000
 4e4:	ldr	pc, [ip, #2780]!	; 0xadc

000004e8 <__gmon_start__@plt>:
 4e8:	add	ip, pc, #0, 12
 4ec:	add	ip, ip, #16, 20	; 0x10000
 4f0:	ldr	pc, [ip, #2772]!	; 0xad4

000004f4 <exit@plt>:
 4f4:	add	ip, pc, #0, 12
 4f8:	add	ip, ip, #16, 20	; 0x10000
 4fc:	ldr	pc, [ip, #2764]!	; 0xacc

00000500 <strlen@plt>:
 500:	add	ip, pc, #0, 12
 504:	add	ip, ip, #16, 20	; 0x10000
 508:	ldr	pc, [ip, #2756]!	; 0xac4

0000050c <__printf_chk@plt>:
 50c:			; <UNDEFINED> instruction: 0xe7fd4778
 510:	add	ip, pc, #0, 12
 514:	add	ip, ip, #16, 20	; 0x10000
 518:	ldr	pc, [ip, #2744]!	; 0xab8

0000051c <setlocale@plt>:
 51c:	add	ip, pc, #0, 12
 520:	add	ip, ip, #16, 20	; 0x10000
 524:	ldr	pc, [ip, #2736]!	; 0xab0

00000528 <fputs@plt>:
 528:	add	ip, pc, #0, 12
 52c:	add	ip, ip, #16, 20	; 0x10000
 530:	ldr	pc, [ip, #2728]!	; 0xaa8

00000534 <abort@plt>:
 534:	add	ip, pc, #0, 12
 538:	add	ip, ip, #16, 20	; 0x10000
 53c:	ldr	pc, [ip, #2720]!	; 0xaa0

Disassembly of section .text:

00000540 <.text>:
 540:	stmdacs	r2, {r0, r3, r6, r8, r9, fp, lr}
 544:	ldrbtmi	fp, [fp], #-1328	; 0xfffffad0
 548:			; <UNDEFINED> instruction: 0xf040b083
 54c:	stmdavs	sp, {r0, r7, pc}^
 550:			; <UNDEFINED> instruction: 0xf7ff4628
 554:	ldrdeq	lr, [r0], r6
 558:			; <UNDEFINED> instruction: 0xf7ff3003
 55c:	eorcs	lr, r7, #744	; 0x2e8
 560:	strmi	r4, [r4], -r3, lsl #12
 564:	blcs	7e578 <abort@plt+0x7e044>
 568:	cmnlt	sl, sl, lsr #16
 56c:	bcs	9c86e4 <abort@plt+0x9c81b0>
 570:	andsvc	fp, sl, r3, lsl #30
 574:	ldrsbvc	r1, [r8], #-201	; 0xffffff37
 578:	svclt	0x00084619
 57c:			; <UNDEFINED> instruction: 0x460b709a
 580:	blcs	7e594 <abort@plt+0x7e060>
 584:	svccs	0x0001f815
 588:	mvnsle	r2, r0, lsl #20
 58c:	eorcs	r4, r7, #901120	; 0xdc000
 590:	andcs	r7, r0, #26
 594:	subsvc	r4, sl, r9, ror r4
 598:	strmi	r9, [r8], -r1, lsl #2
 59c:	svc	0x0092f7ff
 5a0:	strtmi	r9, [r2], -r1, lsl #18
 5a4:	suble	r2, sp, r0, lsl #16
 5a8:			; <UNDEFINED> instruction: 0xf0002006
 5ac:	ldmdbmi	r0!, {r0, r1, r2, r8, fp, ip, sp, lr, pc}
 5b0:	andcs	r4, r9, r2, lsr #12
 5b4:			; <UNDEFINED> instruction: 0xf0004479
 5b8:	stmdbmi	lr!, {r0, r8, fp, ip, sp, lr, pc}
 5bc:	andcs	r4, r3, r2, lsr #12
 5c0:			; <UNDEFINED> instruction: 0xf0004479
 5c4:	stmdbmi	ip!, {r0, r1, r3, r4, r5, r6, r7, fp, ip, sp, lr, pc}
 5c8:	andcs	r4, r0, r2, lsr #12
 5cc:			; <UNDEFINED> instruction: 0xf0004479
 5d0:	stmdbmi	sl!, {r0, r2, r4, r5, r6, r7, fp, ip, sp, lr, pc}
 5d4:	andcs	r4, ip, r2, lsr #12
 5d8:			; <UNDEFINED> instruction: 0xf0004479
 5dc:	stmdbmi	r8!, {r0, r1, r2, r3, r5, r6, r7, fp, ip, sp, lr, pc}
 5e0:	andcs	r4, fp, r2, lsr #12
 5e4:			; <UNDEFINED> instruction: 0xf0004479
 5e8:	stmdbmi	r6!, {r0, r3, r5, r6, r7, fp, ip, sp, lr, pc}
 5ec:	andcs	r4, r5, r2, lsr #12
 5f0:			; <UNDEFINED> instruction: 0xf0004479
 5f4:	stmdbmi	r4!, {r0, r1, r5, r6, r7, fp, ip, sp, lr, pc}
 5f8:	andcs	r4, r4, r2, lsr #12
 5fc:			; <UNDEFINED> instruction: 0xf0004479
 600:	stmdbmi	r2!, {r0, r2, r3, r4, r6, r7, fp, ip, sp, lr, pc}
 604:	andcs	r4, r8, r2, lsr #12
 608:			; <UNDEFINED> instruction: 0xf0004479
 60c:	stmdbmi	r0!, {r0, r1, r2, r4, r6, r7, fp, ip, sp, lr, pc}
 610:	andcs	r4, r1, r2, lsr #12
 614:			; <UNDEFINED> instruction: 0xf0004479
 618:	ldmdbmi	lr, {r0, r4, r6, r7, fp, ip, sp, lr, pc}
 61c:	andcs	r4, r7, r2, lsr #12
 620:			; <UNDEFINED> instruction: 0xf0004479
 624:	ldmdbmi	ip, {r0, r1, r3, r6, r7, fp, ip, sp, lr, pc}
 628:	andcs	r4, sl, r2, lsr #12
 62c:			; <UNDEFINED> instruction: 0xf0004479
 630:	ldmdbmi	sl, {r0, r2, r6, r7, fp, ip, sp, lr, pc}
 634:	andcs	r4, r2, r2, lsr #12
 638:			; <UNDEFINED> instruction: 0xf0004479
 63c:			; <UNDEFINED> instruction: 0x2000f8bf
 640:	ldclt	0, cr11, [r0, #-12]!
 644:	andcs	r4, r6, r6, lsl r9
 648:			; <UNDEFINED> instruction: 0xf0004479
 64c:			; <UNDEFINED> instruction: 0xe7aef8b7
 650:	bmi	552aa8 <abort@plt+0x552574>
 654:	ldrbtmi	r5, [sl], #-2137	; 0xfffff7a7
 658:	stmdavs	r9, {r4, fp, sp, lr}
 65c:	svc	0x0064f7ff
 660:			; <UNDEFINED> instruction: 0xf7ff2001
 664:	svclt	0x0000ef48
 668:	andeq	r0, r1, lr, asr sl
 66c:			; <UNDEFINED> instruction: 0x000002b4
 670:	andeq	r0, r0, r4, lsr #5
 674:	andeq	r0, r0, r4, lsr #5
 678:	andeq	r0, r0, r4, lsr #5
 67c:	andeq	r0, r0, r4, lsr #5
 680:	andeq	r0, r0, ip, lsr #5
 684:			; <UNDEFINED> instruction: 0x000002b0
 688:			; <UNDEFINED> instruction: 0x000002b0
 68c:			; <UNDEFINED> instruction: 0x000002b0
 690:	andeq	r0, r0, ip, lsr #5
 694:	andeq	r0, r0, ip, lsr #5
 698:	andeq	r0, r0, ip, lsr #5
 69c:			; <UNDEFINED> instruction: 0x000002b0
 6a0:	andeq	r0, r0, r8, lsl #4
 6a4:	andeq	r0, r0, r4, asr #32
 6a8:	andeq	r0, r1, lr, lsr #19
 6ac:	bleq	3c7f0 <abort@plt+0x3c2bc>
 6b0:	cdpeq	0, 0, cr15, cr0, cr15, {2}
 6b4:	strbtmi	fp, [sl], -r2, lsl #24
 6b8:	strlt	fp, [r1], #-1028	; 0xfffffbfc
 6bc:	ldrdge	pc, [r4], -pc	; <UNPREDICTABLE>
 6c0:	ldrmi	sl, [sl], #776	; 0x308
 6c4:	ldrdgt	pc, [r0], -pc	; <UNPREDICTABLE>
 6c8:	andgt	pc, ip, sl, asr r8	; <UNPREDICTABLE>
 6cc:	stcgt	8, cr15, [r4, #-308]	; 0xfffffecc
 6d0:			; <UNDEFINED> instruction: 0xf85a4b06
 6d4:	stmdami	r6, {r0, r1, ip, sp}
 6d8:	andeq	pc, r0, sl, asr r8	; <UNPREDICTABLE>
 6dc:	mrc	7, 7, APSR_nzcv, cr14, cr15, {7}
 6e0:	svc	0x0028f7ff
 6e4:	andeq	r0, r1, r4, asr #17
 6e8:	andeq	r0, r0, r8, lsr r0
 6ec:	andeq	r0, r0, ip, asr #32
 6f0:	andeq	r0, r0, r0, asr r0
 6f4:	ldr	r3, [pc, #20]	; 710 <abort@plt+0x1dc>
 6f8:	ldr	r2, [pc, #20]	; 714 <abort@plt+0x1e0>
 6fc:	add	r3, pc, r3
 700:	ldr	r2, [r3, r2]
 704:	cmp	r2, #0
 708:	bxeq	lr
 70c:	b	4e8 <__gmon_start__@plt>
 710:	andeq	r0, r1, r4, lsr #17
 714:	andeq	r0, r0, r8, asr #32
 718:	blmi	1d2738 <abort@plt+0x1d2204>
 71c:	bmi	1d1904 <abort@plt+0x1d13d0>
 720:	addmi	r4, r3, #2063597568	; 0x7b000000
 724:	andle	r4, r3, sl, ror r4
 728:	ldmpl	r3, {r0, r2, r8, r9, fp, lr}^
 72c:	ldrmi	fp, [r8, -r3, lsl #2]
 730:	svclt	0x00004770
 734:	andeq	r0, r1, ip, ror #17
 738:	andeq	r0, r1, r8, ror #17
 73c:	andeq	r0, r1, r0, lsl #17
 740:	andeq	r0, r0, r0, asr #32
 744:	stmdbmi	r9, {r3, fp, lr}
 748:	bmi	251930 <abort@plt+0x2513fc>
 74c:	bne	251938 <abort@plt+0x251404>
 750:	svceq	0x00cb447a
 754:			; <UNDEFINED> instruction: 0x01a1eb03
 758:	andle	r1, r3, r9, asr #32
 75c:	ldmpl	r3, {r0, r2, r8, r9, fp, lr}^
 760:	ldrmi	fp, [r8, -r3, lsl #2]
 764:	svclt	0x00004770
 768:	andeq	r0, r1, r0, asr #17
 76c:			; <UNDEFINED> instruction: 0x000108bc
 770:	andeq	r0, r1, r4, asr r8
 774:	andeq	r0, r0, r4, asr r0
 778:	blmi	2adba0 <abort@plt+0x2ad66c>
 77c:	ldrbtmi	r4, [fp], #-2570	; 0xfffff5f6
 780:	ldmdavc	fp, {r1, r3, r4, r5, r6, sl, lr}
 784:	blmi	26ed38 <abort@plt+0x26e804>
 788:	ldrdlt	r5, [r3, -r3]!
 78c:	ldrbtmi	r4, [fp], #-2824	; 0xfffff4f8
 790:			; <UNDEFINED> instruction: 0xf7ff6818
 794:			; <UNDEFINED> instruction: 0xf7ffee92
 798:	blmi	1c069c <abort@plt+0x1c0168>
 79c:	ldrbtmi	r2, [fp], #-513	; 0xfffffdff
 7a0:	stclt	0, cr7, [r8, #-104]	; 0xffffff98
 7a4:	andeq	r0, r1, sl, lsl #17
 7a8:	andeq	r0, r1, r4, lsr #16
 7ac:	andeq	r0, r0, ip, lsr r0
 7b0:	andeq	r0, r1, r2, ror r8
 7b4:	andeq	r0, r1, sl, ror #16
 7b8:	svclt	0x0000e7c4
 7bc:			; <UNDEFINED> instruction: 0x4605b570
 7c0:	strmi	r4, [ip], -r8, lsl #12
 7c4:			; <UNDEFINED> instruction: 0xf7ff4616
 7c8:			; <UNDEFINED> instruction: 0xb128ee7e
 7cc:	strtmi	r4, [r8], -r7, lsl #18
 7d0:			; <UNDEFINED> instruction: 0xf7ff4479
 7d4:	smlatblt	r0, r4, lr, lr
 7d8:	stmdbmi	r5, {r4, r5, r6, r8, sl, fp, ip, sp, pc}
 7dc:			; <UNDEFINED> instruction: 0x46224633
 7e0:	pop	{r0, sp}
 7e4:	ldrbtmi	r4, [r9], #-112	; 0xffffff90
 7e8:	mrclt	7, 4, APSR_nzcv, cr0, cr15, {7}
 7ec:	strdeq	r0, [r0], -ip
 7f0:	andeq	r0, r0, sl, asr r0
 7f4:	mvnsmi	lr, #737280	; 0xb4000
 7f8:	cfmadd32mi	mvax0, mvfx4, mvfx12, mvfx7
 7fc:	stcmi	6, cr4, [ip, #-544]	; 0xfffffde0
 800:	ldrbtmi	r4, [lr], #-1681	; 0xfffff96f
 804:	mcr	7, 2, pc, cr8, cr15, {7}	; <UNPREDICTABLE>
 808:	blne	1d91a04 <abort@plt+0x1d914d0>
 80c:	strhle	r1, [sl], -r6
 810:	strcs	r3, [r0], #-3332	; 0xfffff2fc
 814:	svccc	0x0004f855
 818:	strbmi	r3, [sl], -r1, lsl #8
 81c:	ldrtmi	r4, [r8], -r1, asr #12
 820:	adcmi	r4, r6, #152, 14	; 0x2600000
 824:	pop	{r1, r2, r4, r5, r6, r7, r8, ip, lr, pc}
 828:	svclt	0x000083f8
 82c:	andeq	r0, r1, r6, lsr #13
 830:	muleq	r1, ip, r6
 834:	svclt	0x00004770

Disassembly of section .fini:

00000838 <.fini>:
 838:	push	{r3, lr}
 83c:	pop	{r3, pc}
