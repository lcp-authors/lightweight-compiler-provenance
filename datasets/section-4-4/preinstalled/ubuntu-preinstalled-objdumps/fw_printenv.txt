
ubuntu-preinstalled/fw_printenv:     file format elf32-littlearm


Disassembly of section .init:

000009d8 <.init>:
 9d8:	push	{r3, lr}
 9dc:	bl	f60 <_start@@Base+0x48>
 9e0:	pop	{r3, pc}

Disassembly of section .plt:

000009e4 <libuboot_close@plt-0x14>:
 9e4:	push	{lr}		; (str lr, [sp, #-4]!)
 9e8:	ldr	lr, [pc, #4]	; 9f4 <libuboot_close@plt-0x4>
 9ec:	add	lr, pc, lr
 9f0:	ldr	pc, [lr, #8]!
 9f4:	andeq	r1, r1, r0, ror r5

000009f8 <libuboot_close@plt>:
 9f8:	add	ip, pc, #0, 12
 9fc:	add	ip, ip, #69632	; 0x11000
 a00:	ldr	pc, [ip, #1392]!	; 0x570

00000a04 <strcmp@plt>:
 a04:	add	ip, pc, #0, 12
 a08:	add	ip, ip, #69632	; 0x11000
 a0c:	ldr	pc, [ip, #1384]!	; 0x568

00000a10 <__cxa_finalize@plt>:
 a10:	add	ip, pc, #0, 12
 a14:	add	ip, ip, #69632	; 0x11000
 a18:	ldr	pc, [ip, #1376]!	; 0x560

00000a1c <libuboot_get_env@plt>:
 a1c:	add	ip, pc, #0, 12
 a20:	add	ip, ip, #69632	; 0x11000
 a24:	ldr	pc, [ip, #1368]!	; 0x558

00000a28 <libuboot_exit@plt>:
 a28:	add	ip, pc, #0, 12
 a2c:	add	ip, ip, #69632	; 0x11000
 a30:	ldr	pc, [ip, #1360]!	; 0x550

00000a34 <libuboot_initialize@plt>:
 a34:	add	ip, pc, #0, 12
 a38:	add	ip, ip, #69632	; 0x11000
 a3c:	ldr	pc, [ip, #1352]!	; 0x548

00000a40 <libuboot_getname@plt>:
 a40:	add	ip, pc, #0, 12
 a44:	add	ip, ip, #69632	; 0x11000
 a48:	ldr	pc, [ip, #1344]!	; 0x540

00000a4c <strdup@plt>:
 a4c:	add	ip, pc, #0, 12
 a50:	add	ip, ip, #69632	; 0x11000
 a54:	ldr	pc, [ip, #1336]!	; 0x538

00000a58 <__stack_chk_fail@plt>:
 a58:	add	ip, pc, #0, 12
 a5c:	add	ip, ip, #69632	; 0x11000
 a60:	ldr	pc, [ip, #1328]!	; 0x530

00000a64 <fwrite@plt>:
 a64:	add	ip, pc, #0, 12
 a68:	add	ip, ip, #69632	; 0x11000
 a6c:	ldr	pc, [ip, #1320]!	; 0x528

00000a70 <libuboot_getvalue@plt>:
 a70:	add	ip, pc, #0, 12
 a74:	add	ip, ip, #69632	; 0x11000
 a78:	ldr	pc, [ip, #1312]!	; 0x520

00000a7c <__libc_start_main@plt>:
 a7c:	add	ip, pc, #0, 12
 a80:	add	ip, ip, #69632	; 0x11000
 a84:	ldr	pc, [ip, #1304]!	; 0x518

00000a88 <libuboot_load_file@plt>:
 a88:	add	ip, pc, #0, 12
 a8c:	add	ip, ip, #69632	; 0x11000
 a90:	ldr	pc, [ip, #1296]!	; 0x510

00000a94 <__gmon_start__@plt>:
 a94:	add	ip, pc, #0, 12
 a98:	add	ip, ip, #69632	; 0x11000
 a9c:	ldr	pc, [ip, #1288]!	; 0x508

00000aa0 <libuboot_open@plt>:
 aa0:	add	ip, pc, #0, 12
 aa4:	add	ip, ip, #69632	; 0x11000
 aa8:	ldr	pc, [ip, #1280]!	; 0x500

00000aac <getopt_long@plt>:
 aac:	add	ip, pc, #0, 12
 ab0:	add	ip, ip, #69632	; 0x11000
 ab4:	ldr	pc, [ip, #1272]!	; 0x4f8

00000ab8 <exit@plt>:
 ab8:	add	ip, pc, #0, 12
 abc:	add	ip, ip, #69632	; 0x11000
 ac0:	ldr	pc, [ip, #1264]!	; 0x4f0

00000ac4 <libuboot_set_env@plt>:
 ac4:	add	ip, pc, #0, 12
 ac8:	add	ip, ip, #69632	; 0x11000
 acc:	ldr	pc, [ip, #1256]!	; 0x4e8

00000ad0 <libuboot_read_config@plt>:
 ad0:	add	ip, pc, #0, 12
 ad4:	add	ip, ip, #69632	; 0x11000
 ad8:	ldr	pc, [ip, #1248]!	; 0x4e0

00000adc <__fprintf_chk@plt>:
 adc:	add	ip, pc, #0, 12
 ae0:	add	ip, ip, #69632	; 0x11000
 ae4:	ldr	pc, [ip, #1240]!	; 0x4d8

00000ae8 <strrchr@plt>:
 ae8:	add	ip, pc, #0, 12
 aec:	add	ip, ip, #69632	; 0x11000
 af0:	ldr	pc, [ip, #1232]!	; 0x4d0

00000af4 <libuboot_env_store@plt>:
 af4:	add	ip, pc, #0, 12
 af8:	add	ip, ip, #69632	; 0x11000
 afc:	ldr	pc, [ip, #1224]!	; 0x4c8

00000b00 <abort@plt>:
 b00:	add	ip, pc, #0, 12
 b04:	add	ip, ip, #69632	; 0x11000
 b08:	ldr	pc, [ip, #1216]!	; 0x4c0

00000b0c <libuboot_iterator@plt>:
 b0c:	add	ip, pc, #0, 12
 b10:	add	ip, ip, #69632	; 0x11000
 b14:	ldr	pc, [ip, #1208]!	; 0x4b8

Disassembly of section .text:

00000b18 <main@@Base>:
     b18:	ldr	r2, [pc, #896]	; (e9c <main@@Base+0x384>)
     b1a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
     b1e:	mov	r6, r1
     b20:	ldr	r3, [pc, #892]	; (ea0 <main@@Base+0x388>)
     b22:	add	r2, pc
     b24:	ldr.w	r9, [r6]
     b28:	sub	sp, #36	; 0x24
     b2a:	ldr	r7, [pc, #888]	; (ea4 <main@@Base+0x38c>)
     b2c:	mov	r4, r0
     b2e:	ldr	r3, [r2, r3]
     b30:	movs	r1, #47	; 0x2f
     b32:	mov	r0, r9
     b34:	add	r7, pc
     b36:	ldr	r3, [r3, #0]
     b38:	str	r3, [sp, #28]
     b3a:	mov.w	r3, #0
     b3e:	blx	ae8 <strrchr@plt>
     b42:	cbz	r0, b48 <main@@Base+0x30>
     b44:	add.w	r9, r0, #1
     b48:	ldr	r1, [pc, #860]	; (ea8 <main@@Base+0x390>)
     b4a:	mov	r0, r9
     b4c:	ldr.w	r8, [pc, #860]	; eac <main@@Base+0x394>
     b50:	movs	r5, #0
     b52:	add	r1, pc
     b54:	ldr.w	sl, [pc, #856]	; eb0 <main@@Base+0x398>
     b58:	blx	a04 <strcmp@plt>
     b5c:	add	r8, pc
     b5e:	add	sl, pc
     b60:	mov	fp, r5
     b62:	strd	r5, r5, [sp, #8]
     b66:	strd	r0, r5, [sp, #16]
     b6a:	mov	r3, r8
     b6c:	mov	r2, sl
     b6e:	mov	r1, r6
     b70:	mov	r0, r4
     b72:	str.w	fp, [sp]
     b76:	blx	aac <getopt_long@plt>
     b7a:	adds	r3, r0, #1
     b7c:	beq.w	cae <main@@Base+0x196>
     b80:	subs	r0, #86	; 0x56
     b82:	cmp	r0, #29
     b84:	bhi.n	b6a <main@@Base+0x52>
     b86:	add	r3, pc, #8	; (adr r3, b90 <main@@Base+0x78>)
     b88:	ldr.w	r2, [r3, r0, lsl #2]
     b8c:	add	r3, r2
     b8e:	bx	r3
     b90:	lsls	r7, r4, #3
     b92:	movs	r0, r0
     b94:			; <UNDEFINED> instruction: 0xffdbffff
     b98:			; <UNDEFINED> instruction: 0xffdbffff
     b9c:			; <UNDEFINED> instruction: 0xffdbffff
     ba0:			; <UNDEFINED> instruction: 0xffdbffff
     ba4:			; <UNDEFINED> instruction: 0xffdbffff
     ba8:			; <UNDEFINED> instruction: 0xffdbffff
     bac:			; <UNDEFINED> instruction: 0xffdbffff
     bb0:			; <UNDEFINED> instruction: 0xffdbffff
     bb4:			; <UNDEFINED> instruction: 0xffdbffff
     bb8:			; <UNDEFINED> instruction: 0xffdbffff
     bbc:			; <UNDEFINED> instruction: 0xffdbffff
     bc0:			; <UNDEFINED> instruction: 0xffdbffff
     bc4:	lsls	r1, r0, #4
     bc6:	movs	r0, r0
     bc8:			; <UNDEFINED> instruction: 0xffdbffff
     bcc:			; <UNDEFINED> instruction: 0xffdbffff
     bd0:	lsls	r1, r3, #3
     bd2:	movs	r0, r0
     bd4:			; <UNDEFINED> instruction: 0xffdbffff
     bd8:	lsls	r3, r1, #2
     bda:	movs	r0, r0
     bdc:			; <UNDEFINED> instruction: 0xffdbffff
     be0:			; <UNDEFINED> instruction: 0xffdbffff
     be4:			; <UNDEFINED> instruction: 0xffdbffff
     be8:			; <UNDEFINED> instruction: 0xffdbffff
     bec:			; <UNDEFINED> instruction: 0xffdbffff
     bf0:	lsls	r1, r7, #1
     bf2:	movs	r0, r0
     bf4:			; <UNDEFINED> instruction: 0xffdbffff
     bf8:			; <UNDEFINED> instruction: 0xffdbffff
     bfc:			; <UNDEFINED> instruction: 0xffdbffff
     c00:			; <UNDEFINED> instruction: 0xffdbffff
     c04:	lsls	r5, r7, #1
     c06:	movs	r0, r0
     c08:	movs	r5, #1
     c0a:	b.n	b6a <main@@Base+0x52>
     c0c:	ldr	r3, [pc, #676]	; (eb4 <main@@Base+0x39c>)
     c0e:	ldr	r3, [r7, r3]
     c10:	ldr	r0, [r3, #0]
     c12:	blx	a4c <strdup@plt>
     c16:	str	r0, [sp, #20]
     c18:	b.n	b6a <main@@Base+0x52>
     c1a:	ldr	r4, [pc, #668]	; (eb8 <main@@Base+0x3a0>)
     c1c:	mov	r3, r9
     c1e:	ldr	r0, [pc, #668]	; (ebc <main@@Base+0x3a4>)
     c20:	movs	r1, #1
     c22:	ldr	r2, [pc, #668]	; (ec0 <main@@Base+0x3a8>)
     c24:	ldr	r4, [r7, r4]
     c26:	add	r0, pc
     c28:	add	r2, pc
     c2a:	str	r0, [sp, #0]
     c2c:	ldr	r0, [r4, #0]
     c2e:	blx	adc <__fprintf_chk@plt>
     c32:	ldr	r2, [pc, #656]	; (ec4 <main@@Base+0x3ac>)
     c34:	mov	r3, r9
     c36:	movs	r1, #1
     c38:	add	r2, pc
     c3a:	ldr	r0, [r4, #0]
     c3c:	blx	adc <__fprintf_chk@plt>
     c40:	ldr	r0, [pc, #644]	; (ec8 <main@@Base+0x3b0>)
     c42:	ldr	r3, [r4, #0]
     c44:	mov.w	r2, #258	; 0x102
     c48:	add	r0, pc
     c4a:	movs	r1, #1
     c4c:	blx	a64 <fwrite@plt>
     c50:	ldr	r3, [sp, #16]
     c52:	cbz	r3, c9e <main@@Base+0x186>
     c54:	ldr	r0, [pc, #628]	; (ecc <main@@Base+0x3b4>)
     c56:	movs	r2, #63	; 0x3f
     c58:	ldr	r3, [r4, #0]
     c5a:	movs	r1, #1
     c5c:	add	r0, pc
     c5e:	blx	a64 <fwrite@plt>
     c62:	movs	r0, #0
     c64:	blx	ab8 <exit@plt>
     c68:	ldr	r3, [pc, #584]	; (eb4 <main@@Base+0x39c>)
     c6a:	ldr	r3, [r7, r3]
     c6c:	ldr	r0, [r3, #0]
     c6e:	blx	a4c <strdup@plt>
     c72:	str	r0, [sp, #12]
     c74:	b.n	b6a <main@@Base+0x52>
     c76:	ldr	r0, [pc, #576]	; (eb8 <main@@Base+0x3a0>)
     c78:	movs	r1, #1
     c7a:	ldr	r3, [pc, #596]	; (ed0 <main@@Base+0x3b8>)
     c7c:	ldr	r2, [pc, #596]	; (ed4 <main@@Base+0x3bc>)
     c7e:	ldr	r0, [r7, r0]
     c80:	add	r3, pc
     c82:	add	r2, pc
     c84:	ldr	r0, [r0, #0]
     c86:	blx	adc <__fprintf_chk@plt>
     c8a:	movs	r0, #0
     c8c:	blx	ab8 <exit@plt>
     c90:	ldr	r3, [pc, #544]	; (eb4 <main@@Base+0x39c>)
     c92:	ldr	r3, [r7, r3]
     c94:	ldr	r0, [r3, #0]
     c96:	blx	a4c <strdup@plt>
     c9a:	str	r0, [sp, #8]
     c9c:	b.n	b6a <main@@Base+0x52>
     c9e:	ldr	r0, [pc, #568]	; (ed8 <main@@Base+0x3c0>)
     ca0:	movs	r2, #75	; 0x4b
     ca2:	ldr	r3, [r4, #0]
     ca4:	movs	r1, #1
     ca6:	add	r0, pc
     ca8:	blx	a64 <fwrite@plt>
     cac:	b.n	c62 <main@@Base+0x14a>
     cae:	ldr	r3, [pc, #556]	; (edc <main@@Base+0x3c4>)
     cb0:	add	r0, sp, #24
     cb2:	movs	r1, #0
     cb4:	ldr	r3, [r7, r3]
     cb6:	ldr	r3, [r3, #0]
     cb8:	subs	r4, r4, r3
     cba:	add.w	r9, r6, r3, lsl #2
     cbe:	blx	a34 <libuboot_initialize@plt>
     cc2:	cmp	r0, #0
     cc4:	blt.w	e84 <main@@Base+0x36c>
     cc8:	ldr	r3, [sp, #8]
     cca:	cmp	r3, #0
     ccc:	beq.w	e08 <main@@Base+0x2f0>
     cd0:	ldr	r1, [sp, #8]
     cd2:	ldr	r0, [sp, #24]
     cd4:	blx	ad0 <libuboot_read_config@plt>
     cd8:	subs	r6, r0, #0
     cda:	blt.w	e6c <main@@Base+0x354>
     cde:	ldr	r3, [sp, #12]
     ce0:	cmp	r3, #0
     ce2:	beq.w	e10 <main@@Base+0x2f8>
     ce6:	ldr	r0, [sp, #24]
     ce8:	blx	aa0 <libuboot_open@plt>
     cec:	subs.w	sl, r0, #0
     cf0:	blt.w	e18 <main@@Base+0x300>
     cf4:	ldr	r3, [sp, #16]
     cf6:	cmp	r3, #0
     cf8:	beq.n	d66 <main@@Base+0x24e>
     cfa:	cmp	r4, #0
     cfc:	beq.n	da4 <main@@Base+0x28c>
     cfe:	ldr	r3, [pc, #480]	; (ee0 <main@@Base+0x3c8>)
     d00:	movs	r6, #0
     d02:	ldr.w	fp, [pc, #480]	; ee4 <main@@Base+0x3cc>
     d06:	ldr.w	r8, [pc, #480]	; ee8 <main@@Base+0x3d0>
     d0a:	add	r3, pc
     d0c:	str.w	sl, [sp, #8]
     d10:	add	fp, pc
     d12:	add	r8, pc
     d14:	mov	sl, r3
     d16:	b.n	d30 <main@@Base+0x218>
     d18:	ldr	r3, [pc, #412]	; (eb8 <main@@Base+0x3a0>)
     d1a:	ldr	r3, [r7, r3]
     d1c:	ldr	r0, [r3, #0]
     d1e:	cmp.w	ip, #0
     d22:	beq.n	e00 <main@@Base+0x2e8>
     d24:	mov	r3, ip
     d26:	mov	r2, r8
     d28:	movs	r1, #1
     d2a:	blx	adc <__fprintf_chk@plt>
     d2e:	adds	r6, #1
     d30:	cmp	r6, r4
     d32:	ldr	r0, [sp, #24]
     d34:	bge.w	e4e <main@@Base+0x336>
     d38:	ldr.w	r1, [r9, r6, lsl #2]
     d3c:	blx	a1c <libuboot_get_env@plt>
     d40:	mov	ip, r0
     d42:	cmp	r5, #0
     d44:	bne.n	d18 <main@@Base+0x200>
     d46:	ldr	r0, [pc, #368]	; (eb8 <main@@Base+0x3a0>)
     d48:	cmp.w	ip, #0
     d4c:	ldr.w	r3, [r9, r6, lsl #2]
     d50:	mov	r2, fp
     d52:	it	eq
     d54:	moveq	ip, sl
     d56:	movs	r1, #1
     d58:	ldr	r0, [r7, r0]
     d5a:	str.w	ip, [sp]
     d5e:	ldr	r0, [r0, #0]
     d60:	blx	adc <__fprintf_chk@plt>
     d64:	b.n	d2e <main@@Base+0x216>
     d66:	ldr	r3, [sp, #20]
     d68:	cmp	r3, #0
     d6a:	beq.n	dda <main@@Base+0x2c2>
     d6c:	ldrd	r1, r0, [sp, #20]
     d70:	blx	a88 <libuboot_load_file@plt>
     d74:	ldr	r0, [sp, #24]
     d76:	blx	af4 <libuboot_env_store@plt>
     d7a:	mov	sl, r0
     d7c:	cmp	r0, #0
     d7e:	bne.n	e54 <main@@Base+0x33c>
     d80:	ldr	r0, [sp, #24]
     d82:	blx	9f8 <libuboot_close@plt>
     d86:	ldr	r0, [sp, #24]
     d88:	blx	a28 <libuboot_exit@plt>
     d8c:	ldr	r2, [pc, #348]	; (eec <main@@Base+0x3d4>)
     d8e:	ldr	r3, [pc, #272]	; (ea0 <main@@Base+0x388>)
     d90:	add	r2, pc
     d92:	ldr	r3, [r2, r3]
     d94:	ldr	r2, [r3, #0]
     d96:	ldr	r3, [sp, #28]
     d98:	eors	r2, r3
     d9a:	bne.n	e68 <main@@Base+0x350>
     d9c:	mov	r0, sl
     d9e:	add	sp, #36	; 0x24
     da0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
     da4:	ldr	r6, [pc, #328]	; (ef0 <main@@Base+0x3d8>)
     da6:	add	r6, pc
     da8:	b.n	dca <main@@Base+0x2b2>
     daa:	blx	a40 <libuboot_getname@plt>
     dae:	ldr	r5, [pc, #264]	; (eb8 <main@@Base+0x3a0>)
     db0:	mov	r3, r0
     db2:	mov	r0, r4
     db4:	str	r3, [sp, #8]
     db6:	blx	a70 <libuboot_getvalue@plt>
     dba:	ldr	r5, [r7, r5]
     dbc:	mov	r2, r6
     dbe:	ldr	r3, [sp, #8]
     dc0:	movs	r1, #1
     dc2:	str	r0, [sp, #0]
     dc4:	ldr	r0, [r5, #0]
     dc6:	blx	adc <__fprintf_chk@plt>
     dca:	mov	r1, r4
     dcc:	ldr	r0, [sp, #24]
     dce:	blx	b0c <libuboot_iterator@plt>
     dd2:	mov	r4, r0
     dd4:	cmp	r0, #0
     dd6:	bne.n	daa <main@@Base+0x292>
     dd8:	b.n	d80 <main@@Base+0x268>
     dda:	ldr	r6, [sp, #16]
     ddc:	add.w	r5, r9, #4
     de0:	b.n	df8 <main@@Base+0x2e0>
     de2:	adds	r3, r6, #1
     de4:	ldr.w	r1, [r9, r6, lsl #2]
     de8:	cmp	r3, r4
     dea:	ite	ne
     dec:	ldrne.w	r2, [r5, r6, lsl #2]
     df0:	moveq	r2, #0
     df2:	blx	ac4 <libuboot_set_env@plt>
     df6:	adds	r6, #2
     df8:	cmp	r6, r4
     dfa:	ldr	r0, [sp, #24]
     dfc:	blt.n	de2 <main@@Base+0x2ca>
     dfe:	b.n	d74 <main@@Base+0x25c>
     e00:	ldr.w	ip, [pc, #240]	; ef4 <main@@Base+0x3dc>
     e04:	add	ip, pc
     e06:	b.n	d24 <main@@Base+0x20c>
     e08:	ldr	r3, [pc, #236]	; (ef8 <main@@Base+0x3e0>)
     e0a:	add	r3, pc
     e0c:	str	r3, [sp, #8]
     e0e:	b.n	cd0 <main@@Base+0x1b8>
     e10:	ldr	r3, [pc, #232]	; (efc <main@@Base+0x3e4>)
     e12:	add	r3, pc
     e14:	str	r3, [sp, #12]
     e16:	b.n	ce6 <main@@Base+0x1ce>
     e18:	ldr	r3, [pc, #228]	; (f00 <main@@Base+0x3e8>)
     e1a:	movs	r2, #39	; 0x27
     e1c:	ldr	r0, [pc, #228]	; (f04 <main@@Base+0x3ec>)
     e1e:	movs	r1, #1
     e20:	ldr	r6, [r7, r3]
     e22:	add	r0, pc
     e24:	ldr	r3, [r6, #0]
     e26:	blx	a64 <fwrite@plt>
     e2a:	ldr	r1, [sp, #12]
     e2c:	ldr	r0, [sp, #24]
     e2e:	blx	a88 <libuboot_load_file@plt>
     e32:	subs.w	sl, r0, #0
     e36:	bge.w	cf4 <main@@Base+0x1dc>
     e3a:	ldr	r0, [pc, #204]	; (f08 <main@@Base+0x3f0>)
     e3c:	movs	r2, #42	; 0x2a
     e3e:	ldr	r3, [r6, #0]
     e40:	movs	r1, #1
     e42:	add	r0, pc
     e44:	blx	a64 <fwrite@plt>
     e48:	mov	r0, sl
     e4a:	blx	ab8 <exit@plt>
     e4e:	ldr.w	sl, [sp, #8]
     e52:	b.n	d80 <main@@Base+0x268>
     e54:	ldr	r3, [pc, #168]	; (f00 <main@@Base+0x3e8>)
     e56:	movs	r2, #22
     e58:	ldr	r0, [pc, #176]	; (f0c <main@@Base+0x3f4>)
     e5a:	movs	r1, #1
     e5c:	ldr	r3, [r7, r3]
     e5e:	add	r0, pc
     e60:	ldr	r3, [r3, #0]
     e62:	blx	a64 <fwrite@plt>
     e66:	b.n	d80 <main@@Base+0x268>
     e68:	blx	a58 <__stack_chk_fail@plt>
     e6c:	ldr	r3, [pc, #144]	; (f00 <main@@Base+0x3e8>)
     e6e:	movs	r2, #38	; 0x26
     e70:	ldr	r0, [pc, #156]	; (f10 <main@@Base+0x3f8>)
     e72:	movs	r1, #1
     e74:	ldr	r3, [r7, r3]
     e76:	add	r0, pc
     e78:	ldr	r3, [r3, #0]
     e7a:	blx	a64 <fwrite@plt>
     e7e:	mov	r0, r6
     e80:	blx	ab8 <exit@plt>
     e84:	ldr	r3, [pc, #120]	; (f00 <main@@Base+0x3e8>)
     e86:	movs	r2, #30
     e88:	ldr	r0, [pc, #136]	; (f14 <main@@Base+0x3fc>)
     e8a:	movs	r1, #1
     e8c:	ldr	r3, [r7, r3]
     e8e:	add	r0, pc
     e90:	ldr	r3, [r3, #0]
     e92:	blx	a64 <fwrite@plt>
     e96:	movs	r0, #1
     e98:	blx	ab8 <exit@plt>
     e9c:	asrs	r6, r7, #16
     e9e:	movs	r1, r0
     ea0:	lsls	r0, r7, #1
     ea2:	movs	r0, r0
     ea4:	asrs	r4, r5, #16
     ea6:	movs	r1, r0
     ea8:	lsls	r6, r1, #21
     eaa:	movs	r0, r0
     eac:	asrs	r0, r5, #18
     eae:	movs	r1, r0
     eb0:	lsls	r2, r3, #28
     eb2:	movs	r0, r0
     eb4:	lsls	r0, r3, #2
     eb6:	movs	r0, r0
     eb8:	lsls	r4, r1, #2
     eba:	movs	r0, r0
     ebc:	lsls	r2, r4, #18
     ebe:	movs	r0, r0
     ec0:	lsls	r4, r1, #18
     ec2:	movs	r0, r0
     ec4:	lsls	r4, r3, #18
     ec6:	movs	r0, r0
     ec8:	lsls	r0, r4, #18
     eca:	movs	r0, r0
     ecc:	lsls	r0, r2, #22
     ece:	movs	r0, r0
     ed0:	lsls	r4, r5, #16
     ed2:	movs	r0, r0
     ed4:	lsls	r6, r5, #16
     ed6:	movs	r0, r0
     ed8:	lsls	r6, r0, #22
     eda:	movs	r0, r0
     edc:	lsls	r4, r7, #1
     ede:	movs	r0, r0
     ee0:	lsls	r6, r1, #25
     ee2:	movs	r0, r0
     ee4:	lsls	r0, r2, #24
     ee6:	movs	r0, r0
     ee8:	lsls	r6, r3, #14
     eea:	movs	r0, r0
     eec:	asrs	r0, r2, #7
     eee:	movs	r1, r0
     ef0:	lsls	r2, r7, #21
     ef2:	movs	r0, r0
     ef4:	lsls	r4, r2, #21
     ef6:	movs	r0, r0
     ef8:	lsls	r2, r5, #9
     efa:	movs	r0, r0
     efc:	lsls	r6, r6, #9
     efe:	movs	r0, r0
     f00:	lsls	r0, r0, #2
     f02:	movs	r0, r0
     f04:	lsls	r2, r5, #18
     f06:	movs	r0, r0
     f08:	lsls	r2, r6, #18
     f0a:	movs	r0, r0
     f0c:	lsls	r2, r1, #19
     f0e:	movs	r0, r0
     f10:	lsls	r6, r5, #16
     f12:	movs	r0, r0
     f14:	lsls	r6, r6, #15
	...

00000f18 <_start@@Base>:
     f18:	mov.w	fp, #0
     f1c:	mov.w	lr, #0
     f20:	pop	{r1}
     f22:	mov	r2, sp
     f24:	push	{r2}
     f26:	push	{r0}
     f28:	ldr.w	sl, [pc, #36]	; f50 <_start@@Base+0x38>
     f2c:	add	r3, pc, #32	; (adr r3, f50 <_start@@Base+0x38>)
     f2e:	add	sl, r3
     f30:	ldr.w	ip, [pc, #32]	; f54 <_start@@Base+0x3c>
     f34:	ldr.w	ip, [sl, ip]
     f38:	str.w	ip, [sp, #-4]!
     f3c:	ldr	r3, [pc, #24]	; (f58 <_start@@Base+0x40>)
     f3e:	ldr.w	r3, [sl, r3]
     f42:	ldr	r0, [pc, #24]	; (f5c <_start@@Base+0x44>)
     f44:	ldr.w	r0, [sl, r0]
     f48:	blx	a7c <__libc_start_main@plt>
     f4c:	blx	b00 <abort@plt>
     f50:	asrs	r4, r2, #32
     f52:	movs	r1, r0
     f54:	lsls	r4, r5, #1
     f56:	movs	r0, r0
     f58:	lsls	r0, r1, #2
     f5a:	movs	r0, r0
     f5c:	lsls	r0, r2, #2
     f5e:	movs	r0, r0
     f60:	adds	r0, #20
     f62:	b.n	aa4 <libuboot_open@plt+0x4>
     f64:	movs	r0, #20
     f66:	b.n	aa8 <libuboot_open@plt+0x8>
     f68:	adds	r0, #3
     f6a:	b.n	108c <_IO_stdin_used@@Base+0x18>
     f6c:	movs	r0, #2
     f6e:	b.n	e98 <main@@Base+0x380>
     f70:	movs	r0, r0
     f72:	b.n	161a <_IO_stdin_used@@Base+0x5a6>
     f74:	vrhadd.u16	d0, d14, d31
     f78:	mcr2	10, 6, lr, cr5, cr15, {7}	; <UNPREDICTABLE>
     f7c:	lsrs	r4, r6, #31
     f7e:	movs	r1, r0
     f80:	lsls	r4, r0, #2
     f82:	movs	r0, r0
     f84:	ldr	r0, [pc, #24]	; (fa0 <_start@@Base+0x88>)
     f86:	ldr	r3, [pc, #28]	; (fa4 <_start@@Base+0x8c>)
     f88:	add	r0, pc
     f8a:	ldr	r2, [pc, #28]	; (fa8 <_start@@Base+0x90>)
     f8c:	add	r3, pc
     f8e:	cmp	r3, r0
     f90:	add	r2, pc
     f92:	beq.n	f9c <_start@@Base+0x84>
     f94:	ldr	r3, [pc, #20]	; (fac <_start@@Base+0x94>)
     f96:	ldr	r3, [r2, r3]
     f98:	cbz	r3, f9c <_start@@Base+0x84>
     f9a:	bx	r3
     f9c:	bx	lr
     f9e:	nop
     fa0:	asrs	r4, r5, #3
     fa2:	movs	r1, r0
     fa4:	asrs	r0, r5, #3
     fa6:	movs	r1, r0
     fa8:	lsrs	r0, r2, #31
     faa:	movs	r1, r0
     fac:	lsls	r4, r6, #1
     fae:	movs	r0, r0
     fb0:	ldr	r0, [pc, #32]	; (fd4 <_start@@Base+0xbc>)
     fb2:	ldr	r1, [pc, #36]	; (fd8 <_start@@Base+0xc0>)
     fb4:	add	r0, pc
     fb6:	ldr	r2, [pc, #36]	; (fdc <_start@@Base+0xc4>)
     fb8:	add	r1, pc
     fba:	subs	r1, r1, r0
     fbc:	add	r2, pc
     fbe:	lsrs	r3, r1, #31
     fc0:	add.w	r1, r3, r1, asr #2
     fc4:	asrs	r1, r1, #1
     fc6:	beq.n	fd0 <_start@@Base+0xb8>
     fc8:	ldr	r3, [pc, #20]	; (fe0 <_start@@Base+0xc8>)
     fca:	ldr	r3, [r2, r3]
     fcc:	cbz	r3, fd0 <_start@@Base+0xb8>
     fce:	bx	r3
     fd0:	bx	lr
     fd2:	nop
     fd4:	asrs	r0, r0, #3
     fd6:	movs	r1, r0
     fd8:	asrs	r4, r7, #2
     fda:	movs	r1, r0
     fdc:	lsrs	r4, r4, #30
     fde:	movs	r1, r0
     fe0:	lsls	r4, r2, #2
     fe2:	movs	r0, r0
     fe4:	push	{r3, lr}
     fe6:	ldr	r3, [pc, #40]	; (1010 <_start@@Base+0xf8>)
     fe8:	ldr	r2, [pc, #40]	; (1014 <_start@@Base+0xfc>)
     fea:	add	r3, pc
     fec:	add	r2, pc
     fee:	ldrb	r3, [r3, #0]
     ff0:	cbnz	r3, 100e <_start@@Base+0xf6>
     ff2:	ldr	r3, [pc, #36]	; (1018 <_start@@Base+0x100>)
     ff4:	ldr	r3, [r2, r3]
     ff6:	cbz	r3, 1002 <_start@@Base+0xea>
     ff8:	ldr	r3, [pc, #32]	; (101c <_start@@Base+0x104>)
     ffa:	add	r3, pc
     ffc:	ldr	r0, [r3, #0]
     ffe:	blx	a10 <__cxa_finalize@plt>
    1002:	bl	f84 <_start@@Base+0x6c>
    1006:	ldr	r3, [pc, #24]	; (1020 <_start@@Base+0x108>)
    1008:	movs	r2, #1
    100a:	add	r3, pc
    100c:	strb	r2, [r3, #0]
    100e:	pop	{r3, pc}
    1010:	asrs	r2, r1, #2
    1012:	movs	r1, r0
    1014:	lsrs	r4, r6, #29
    1016:	movs	r1, r0
    1018:	lsls	r0, r6, #1
    101a:	movs	r0, r0
    101c:	asrs	r6, r0, #32
    101e:	movs	r1, r0
    1020:	asrs	r2, r5, #1
    1022:	movs	r1, r0
    1024:	b.n	fb0 <_start@@Base+0x98>
    1026:	nop

00001028 <__libc_csu_init@@Base>:
    1028:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    102c:	mov	r7, r0
    102e:	ldr	r6, [pc, #48]	; (1060 <__libc_csu_init@@Base+0x38>)
    1030:	mov	r8, r1
    1032:	ldr	r5, [pc, #48]	; (1064 <__libc_csu_init@@Base+0x3c>)
    1034:	mov	r9, r2
    1036:	add	r6, pc
    1038:	blx	9d8 <libuboot_close@plt-0x20>
    103c:	add	r5, pc
    103e:	subs	r6, r6, r5
    1040:	asrs	r6, r6, #2
    1042:	beq.n	105a <__libc_csu_init@@Base+0x32>
    1044:	subs	r5, #4
    1046:	movs	r4, #0
    1048:	ldr.w	r3, [r5, #4]!
    104c:	adds	r4, #1
    104e:	mov	r2, r9
    1050:	mov	r1, r8
    1052:	mov	r0, r7
    1054:	blx	r3
    1056:	cmp	r6, r4
    1058:	bne.n	1048 <__libc_csu_init@@Base+0x20>
    105a:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    105e:	nop
    1060:	lsrs	r6, r1, #24
    1062:	movs	r1, r0
    1064:	lsrs	r4, r0, #24
    1066:	movs	r1, r0

00001068 <__libc_csu_fini@@Base>:
    1068:	bx	lr
    106a:	nop

Disassembly of section .fini:

0000106c <.fini>:
    106c:	push	{r3, lr}
    1070:	pop	{r3, pc}
