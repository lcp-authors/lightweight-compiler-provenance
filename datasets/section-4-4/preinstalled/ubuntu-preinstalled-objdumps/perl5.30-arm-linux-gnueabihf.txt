
ubuntu-preinstalled/perl5.30-arm-linux-gnueabihf:     file format elf32-littlearm


Disassembly of section .init:

00000890 <.init>:
 890:	push	{r3, lr}
 894:	bl	ae4 <_start@@Base+0x48>
 898:	pop	{r3, pc}

Disassembly of section .plt:

0000089c <__cxa_finalize@plt-0x14>:
 89c:	push	{lr}		; (str lr, [sp, #-4]!)
 8a0:	ldr	lr, [pc, #4]	; 8ac <__cxa_finalize@plt-0x4>
 8a4:	add	lr, pc, lr
 8a8:	ldr	pc, [lr, #8]!
 8ac:	andeq	r0, r1, r8, asr #13

000008b0 <__cxa_finalize@plt>:
 8b0:	add	ip, pc, #0, 12
 8b4:	add	ip, ip, #16, 20	; 0x10000
 8b8:	ldr	pc, [ip, #1736]!	; 0x6c8

000008bc <perl_construct@plt>:
 8bc:	add	ip, pc, #0, 12
 8c0:	add	ip, ip, #16, 20	; 0x10000
 8c4:	ldr	pc, [ip, #1728]!	; 0x6c0

000008c8 <perl_free@plt>:
 8c8:	add	ip, pc, #0, 12
 8cc:	add	ip, ip, #16, 20	; 0x10000
 8d0:	ldr	pc, [ip, #1720]!	; 0x6b8

000008d4 <__register_atfork@plt>:
 8d4:			; <UNDEFINED> instruction: 0xe7fd4778
 8d8:	add	ip, pc, #0, 12
 8dc:	add	ip, ip, #16, 20	; 0x10000
 8e0:	ldr	pc, [ip, #1708]!	; 0x6ac

000008e4 <perl_destruct@plt>:
 8e4:	add	ip, pc, #0, 12
 8e8:	add	ip, ip, #16, 20	; 0x10000
 8ec:	ldr	pc, [ip, #1700]!	; 0x6a4

000008f0 <perl_alloc@plt>:
 8f0:	add	ip, pc, #0, 12
 8f4:	add	ip, ip, #16, 20	; 0x10000
 8f8:	ldr	pc, [ip, #1692]!	; 0x69c

000008fc <__libc_start_main@plt>:
 8fc:	add	ip, pc, #0, 12
 900:	add	ip, ip, #16, 20	; 0x10000
 904:	ldr	pc, [ip, #1684]!	; 0x694

00000908 <__gmon_start__@plt>:
 908:	add	ip, pc, #0, 12
 90c:	add	ip, ip, #16, 20	; 0x10000
 910:	ldr	pc, [ip, #1676]!	; 0x68c

00000914 <exit@plt>:
 914:	add	ip, pc, #0, 12
 918:	add	ip, ip, #16, 20	; 0x10000
 91c:	ldr	pc, [ip, #1668]!	; 0x684

00000920 <Perl_sys_init3@plt>:
 920:	add	ip, pc, #0, 12
 924:	add	ip, ip, #16, 20	; 0x10000
 928:	ldr	pc, [ip, #1660]!	; 0x67c

0000092c <Perl_newXS@plt>:
 92c:			; <UNDEFINED> instruction: 0xe7fd4778
 930:	add	ip, pc, #0, 12
 934:	add	ip, ip, #16, 20	; 0x10000
 938:	ldr	pc, [ip, #1648]!	; 0x670

0000093c <Perl_sys_term@plt>:
 93c:	add	ip, pc, #0, 12
 940:	add	ip, ip, #16, 20	; 0x10000
 944:	ldr	pc, [ip, #1640]!	; 0x668

00000948 <perl_parse@plt>:
 948:	add	ip, pc, #0, 12
 94c:	add	ip, ip, #16, 20	; 0x10000
 950:	ldr	pc, [ip, #1632]!	; 0x660

00000954 <Perl_rsignal_state@plt>:
 954:	add	ip, pc, #0, 12
 958:	add	ip, ip, #16, 20	; 0x10000
 95c:	ldr	pc, [ip, #1624]!	; 0x658

00000960 <perl_run@plt>:
 960:	add	ip, pc, #0, 12
 964:	add	ip, ip, #16, 20	; 0x10000
 968:	ldr	pc, [ip, #1616]!	; 0x650

0000096c <abort@plt>:
 96c:	add	ip, pc, #0, 12
 970:	add	ip, ip, #16, 20	; 0x10000
 974:	ldr	pc, [ip, #1608]!	; 0x648

00000978 <Perl_rsignal@plt>:
 978:	add	ip, pc, #0, 12
 97c:	add	ip, ip, #16, 20	; 0x10000
 980:	ldr	pc, [ip, #1600]!	; 0x640

Disassembly of section .text:

00000984 <main@@Base>:
 984:	push	{r4, r5, r6, r7, lr}
 986:	sub	sp, #28
 988:	ldr	r7, [pc, #220]	; (a68 <main@@Base+0xe4>)
 98a:	movs	r4, #0
 98c:	ldr	r3, [pc, #220]	; (a6c <main@@Base+0xe8>)
 98e:	add	r7, pc
 990:	str	r0, [sp, #20]
 992:	str	r1, [sp, #16]
 994:	add	r0, sp, #20
 996:	str	r2, [sp, #12]
 998:	add	r1, sp, #16
 99a:	ldr	r3, [r7, r3]
 99c:	add	r2, sp, #12
 99e:	strb	r4, [r3, #0]
 9a0:	blx	920 <Perl_sys_init3@plt>
 9a4:	ldr	r2, [pc, #200]	; (a70 <main@@Base+0xec>)
 9a6:	ldr	r3, [pc, #204]	; (a74 <main@@Base+0xf0>)
 9a8:	ldr	r2, [r7, r2]
 9aa:	ldr	r0, [r7, r3]
 9ac:	mov	r1, r2
 9ae:	bl	c1c <__libc_csu_fini@@Base+0x4>
 9b2:	ldr	r3, [pc, #196]	; (a78 <main@@Base+0xf4>)
 9b4:	ldr	r3, [r7, r3]
 9b6:	ldrb	r4, [r3, #0]
 9b8:	cbnz	r4, 9d2 <main@@Base+0x4e>
 9ba:	blx	8f0 <perl_alloc@plt>
 9be:	ldr	r5, [pc, #188]	; (a7c <main@@Base+0xf8>)
 9c0:	add	r5, pc
 9c2:	str	r0, [r5, #0]
 9c4:	cmp	r0, #0
 9c6:	beq.n	a60 <main@@Base+0xdc>
 9c8:	blx	8bc <perl_construct@plt>
 9cc:	ldr	r3, [r5, #0]
 9ce:	strb.w	r4, [r3, #1905]	; 0x771
 9d2:	ldr	r5, [pc, #172]	; (a80 <main@@Base+0xfc>)
 9d4:	movs	r6, #0
 9d6:	ldr	r1, [pc, #172]	; (a84 <main@@Base+0x100>)
 9d8:	add	r5, pc
 9da:	ldrd	r3, r2, [sp, #16]
 9de:	add	r1, pc
 9e0:	ldr	r0, [r5, #0]
 9e2:	ldrb.w	r4, [r0, #966]	; 0x3c6
 9e6:	orr.w	r4, r4, #2
 9ea:	strb.w	r4, [r0, #966]	; 0x3c6
 9ee:	str	r6, [sp, #0]
 9f0:	blx	948 <perl_parse@plt>
 9f4:	cmp	r0, #0
 9f6:	beq.n	a58 <main@@Base+0xd4>
 9f8:	ldr	r3, [pc, #140]	; (a88 <main@@Base+0x104>)
 9fa:	ldr	r4, [r7, r3]
 9fc:	ldr	r3, [r4, #4]
 9fe:	cbz	r3, a3c <main@@Base+0xb8>
 a00:	ldr	r2, [pc, #136]	; (a8c <main@@Base+0x108>)
 a02:	adds	r4, #8
 a04:	ldr	r3, [pc, #136]	; (a90 <main@@Base+0x10c>)
 a06:	ldr	r6, [pc, #140]	; (a94 <main@@Base+0x110>)
 a08:	ldr	r5, [r7, r2]
 a0a:	add	r6, pc
 a0c:	ldr	r7, [r7, r3]
 a0e:	adds	r5, #4
 a10:	b.n	a18 <main@@Base+0x94>
 a12:	ldr.w	r3, [r4], #4
 a16:	cbz	r3, a3c <main@@Base+0xb8>
 a18:	ldr.w	r1, [r5], #4
 a1c:	ldr	r0, [r6, #0]
 a1e:	str	r1, [sp, #8]
 a20:	blx	954 <Perl_rsignal_state@plt>
 a24:	ldr	r3, [r7, #0]
 a26:	ldr	r1, [sp, #8]
 a28:	cmp	r3, r0
 a2a:	bne.n	a12 <main@@Base+0x8e>
 a2c:	ldr	r0, [r6, #0]
 a2e:	movs	r2, #0
 a30:	blx	978 <Perl_rsignal@plt>
 a34:	ldr.w	r3, [r4], #4
 a38:	cmp	r3, #0
 a3a:	bne.n	a18 <main@@Base+0x94>
 a3c:	ldr	r5, [pc, #88]	; (a98 <main@@Base+0x114>)
 a3e:	add	r5, pc
 a40:	ldr	r0, [r5, #0]
 a42:	blx	8e4 <perl_destruct@plt>
 a46:	mov	r4, r0
 a48:	ldr	r0, [r5, #0]
 a4a:	blx	8c8 <perl_free@plt>
 a4e:	blx	93c <Perl_sys_term@plt>
 a52:	mov	r0, r4
 a54:	blx	914 <exit@plt>
 a58:	ldr	r0, [r5, #0]
 a5a:	blx	960 <perl_run@plt>
 a5e:	b.n	9f8 <main@@Base+0x74>
 a60:	movs	r0, #1
 a62:	blx	914 <exit@plt>
 a66:	nop
 a68:	lsls	r2, r4, #23
 a6a:	movs	r1, r0
 a6c:	lsls	r0, r6, #1
 a6e:	movs	r0, r0
 a70:	lsls	r0, r7, #1
 a72:	movs	r0, r0
 a74:	lsls	r4, r0, #2
 a76:	movs	r0, r0
 a78:	lsls	r0, r4, #1
 a7a:	movs	r0, r0
 a7c:	lsls	r0, r1, #25
 a7e:	movs	r1, r0
 a80:	lsls	r0, r6, #24
 a82:	movs	r1, r0
 a84:	lsls	r3, r1, #7
 a86:	movs	r0, r0
 a88:	lsls	r4, r5, #1
 a8a:	movs	r0, r0
 a8c:	lsls	r4, r4, #1
 a8e:	movs	r0, r0
 a90:	lsls	r4, r7, #1
 a92:	movs	r0, r0
 a94:	lsls	r6, r7, #23
 a96:	movs	r1, r0
 a98:	lsls	r2, r1, #23
 a9a:	movs	r1, r0

00000a9c <_start@@Base>:
 a9c:	mov.w	fp, #0
 aa0:	mov.w	lr, #0
 aa4:	pop	{r1}
 aa6:	mov	r2, sp
 aa8:	push	{r2}
 aaa:	push	{r0}
 aac:	ldr.w	sl, [pc, #36]	; ad4 <_start@@Base+0x38>
 ab0:	add	r3, pc, #32	; (adr r3, ad4 <_start@@Base+0x38>)
 ab2:	add	sl, r3
 ab4:	ldr.w	ip, [pc, #32]	; ad8 <_start@@Base+0x3c>
 ab8:	ldr.w	ip, [sl, ip]
 abc:	str.w	ip, [sp, #-4]!
 ac0:	ldr	r3, [pc, #24]	; (adc <_start@@Base+0x40>)
 ac2:	ldr.w	r3, [sl, r3]
 ac6:	ldr	r0, [pc, #24]	; (ae0 <_start@@Base+0x44>)
 ac8:	ldr.w	r0, [sl, r0]
 acc:	blx	8fc <__libc_start_main@plt>
 ad0:	blx	96c <abort@plt>
 ad4:	lsls	r0, r4, #18
 ad6:	movs	r1, r0
 ad8:	lsls	r0, r2, #1
 ada:	movs	r0, r0
 adc:	lsls	r4, r6, #1
 ade:	movs	r0, r0
 ae0:	lsls	r0, r0, #2
 ae2:	movs	r0, r0
 ae4:	adds	r0, #20
 ae6:	b.n	628 <__cxa_finalize@plt-0x288>
 ae8:	movs	r0, #20
 aea:	b.n	62c <__cxa_finalize@plt-0x284>
 aec:	adds	r0, #3
 aee:	b.n	c10 <__libc_csu_init@@Base+0x38>
 af0:	movs	r0, #2
 af2:	b.n	a1c <main@@Base+0x98>
 af4:	movs	r0, r0
 af6:	b.n	119e <_IO_stdin_used@@Base+0x56a>
 af8:	vrhadd.u16	d0, d14, d31
 afc:			; <UNDEFINED> instruction: 0xff81eaff
 b00:	lsls	r0, r0, #18
 b02:	movs	r1, r0
 b04:	lsls	r0, r5, #1
 b06:	movs	r0, r0
 b08:	ldr	r0, [pc, #24]	; (b24 <_start@@Base+0x88>)
 b0a:	ldr	r3, [pc, #28]	; (b28 <_start@@Base+0x8c>)
 b0c:	add	r0, pc
 b0e:	ldr	r2, [pc, #28]	; (b2c <_start@@Base+0x90>)
 b10:	add	r3, pc
 b12:	cmp	r3, r0
 b14:	add	r2, pc
 b16:	beq.n	b20 <_start@@Base+0x84>
 b18:	ldr	r3, [pc, #20]	; (b30 <_start@@Base+0x94>)
 b1a:	ldr	r3, [r2, r3]
 b1c:	cbz	r3, b20 <_start@@Base+0x84>
 b1e:	bx	r3
 b20:	bx	lr
 b22:	nop
 b24:	lsls	r0, r7, #19
 b26:	movs	r1, r0
 b28:	lsls	r4, r6, #19
 b2a:	movs	r1, r0
 b2c:	lsls	r4, r3, #17
 b2e:	movs	r1, r0
 b30:	lsls	r0, r3, #1
 b32:	movs	r0, r0
 b34:	ldr	r0, [pc, #32]	; (b58 <_start@@Base+0xbc>)
 b36:	ldr	r1, [pc, #36]	; (b5c <_start@@Base+0xc0>)
 b38:	add	r0, pc
 b3a:	ldr	r2, [pc, #36]	; (b60 <_start@@Base+0xc4>)
 b3c:	add	r1, pc
 b3e:	subs	r1, r1, r0
 b40:	add	r2, pc
 b42:	lsrs	r3, r1, #31
 b44:	add.w	r1, r3, r1, asr #2
 b48:	asrs	r1, r1, #1
 b4a:	beq.n	b54 <_start@@Base+0xb8>
 b4c:	ldr	r3, [pc, #20]	; (b64 <_start@@Base+0xc8>)
 b4e:	ldr	r3, [r2, r3]
 b50:	cbz	r3, b54 <_start@@Base+0xb8>
 b52:	bx	r3
 b54:	bx	lr
 b56:	nop
 b58:	lsls	r4, r1, #19
 b5a:	movs	r1, r0
 b5c:	lsls	r0, r1, #19
 b5e:	movs	r1, r0
 b60:	lsls	r0, r6, #16
 b62:	movs	r1, r0
 b64:	lsls	r0, r1, #2
 b66:	movs	r0, r0
 b68:	push	{r3, lr}
 b6a:	ldr	r3, [pc, #40]	; (b94 <_start@@Base+0xf8>)
 b6c:	ldr	r2, [pc, #40]	; (b98 <_start@@Base+0xfc>)
 b6e:	add	r3, pc
 b70:	add	r2, pc
 b72:	ldrb	r3, [r3, #0]
 b74:	cbnz	r3, b92 <_start@@Base+0xf6>
 b76:	ldr	r3, [pc, #36]	; (b9c <_start@@Base+0x100>)
 b78:	ldr	r3, [r2, r3]
 b7a:	cbz	r3, b86 <_start@@Base+0xea>
 b7c:	ldr	r3, [pc, #32]	; (ba0 <_start@@Base+0x104>)
 b7e:	add	r3, pc
 b80:	ldr	r0, [r3, #0]
 b82:	blx	8b0 <__cxa_finalize@plt>
 b86:	bl	b08 <_start@@Base+0x6c>
 b8a:	ldr	r3, [pc, #24]	; (ba4 <_start@@Base+0x108>)
 b8c:	movs	r2, #1
 b8e:	add	r3, pc
 b90:	strb	r2, [r3, #0]
 b92:	pop	{r3, pc}
 b94:	lsls	r6, r2, #18
 b96:	movs	r1, r0
 b98:	lsls	r0, r0, #16
 b9a:	movs	r1, r0
 b9c:	lsls	r4, r2, #1
 b9e:	movs	r0, r0
 ba0:	lsls	r2, r0, #18
 ba2:	movs	r1, r0
 ba4:	lsls	r6, r6, #17
 ba6:	movs	r1, r0
 ba8:	b.n	b34 <_start@@Base+0x98>
 baa:	nop
 bac:	push	{r4}
 bae:	ldr	r4, [pc, #24]	; (bc8 <_start@@Base+0x12c>)
 bb0:	ldr	r2, [pc, #24]	; (bcc <_start@@Base+0x130>)
 bb2:	add	r4, pc
 bb4:	ldr	r3, [pc, #24]	; (bd0 <_start@@Base+0x134>)
 bb6:	ldr	r1, [pc, #28]	; (bd4 <_start@@Base+0x138>)
 bb8:	ldr	r2, [r4, r2]
 bba:	add	r3, pc
 bbc:	ldr.w	r4, [sp], #4
 bc0:	add	r1, pc
 bc2:	b.w	92c <Perl_newXS@plt>
 bc6:	nop
 bc8:	lsls	r6, r7, #14
 bca:	movs	r1, r0
 bcc:	lsls	r4, r3, #1
 bce:	movs	r0, r0
 bd0:	lsls	r6, r2, #2
 bd2:	movs	r0, r0
 bd4:	lsls	r4, r6, #1
	...

00000bd8 <__libc_csu_init@@Base>:
 bd8:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 bdc:	mov	r7, r0
 bde:	ldr	r6, [pc, #48]	; (c10 <__libc_csu_init@@Base+0x38>)
 be0:	mov	r8, r1
 be2:	ldr	r5, [pc, #48]	; (c14 <__libc_csu_init@@Base+0x3c>)
 be4:	mov	r9, r2
 be6:	add	r6, pc
 be8:	blx	890 <__cxa_finalize@plt-0x20>
 bec:	add	r5, pc
 bee:	subs	r6, r6, r5
 bf0:	asrs	r6, r6, #2
 bf2:	beq.n	c0a <__libc_csu_init@@Base+0x32>
 bf4:	subs	r5, #4
 bf6:	movs	r4, #0
 bf8:	ldr.w	r3, [r5, #4]!
 bfc:	adds	r4, #1
 bfe:	mov	r2, r9
 c00:	mov	r1, r8
 c02:	mov	r0, r7
 c04:	blx	r3
 c06:	cmp	r6, r4
 c08:	bne.n	bf8 <__libc_csu_init@@Base+0x20>
 c0a:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 c0e:	nop
 c10:	lsls	r6, r0, #10
 c12:	movs	r1, r0
 c14:	lsls	r4, r7, #9
 c16:	movs	r1, r0

00000c18 <__libc_csu_fini@@Base>:
 c18:	bx	lr
 c1a:	nop
 c1c:	ldr	r3, [pc, #8]	; (c28 <__libc_csu_fini@@Base+0x10>)
 c1e:	add	r3, pc
 c20:	ldr	r3, [r3, #0]
 c22:	b.w	8d4 <__register_atfork@plt>
 c26:	nop
 c28:	lsls	r2, r4, #15
 c2a:	movs	r1, r0

Disassembly of section .fini:

00000c2c <.fini>:
 c2c:	push	{r3, lr}
 c30:	pop	{r3, pc}
