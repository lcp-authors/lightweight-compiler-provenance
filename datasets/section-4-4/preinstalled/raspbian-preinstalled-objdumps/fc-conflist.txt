
raspbian-preinstalled/fc-conflist:     file format elf32-littlearm


Disassembly of section .init:

000106c4 <_init@@Base>:
   106c4:	push	{r3, lr}
   106c8:	bl	10950 <exit@plt+0x1ac>
   106cc:	pop	{r3, pc}

Disassembly of section .plt:

000106d0 <abort@plt-0x14>:
   106d0:	push	{lr}		; (str lr, [sp, #-4]!)
   106d4:	ldr	lr, [pc, #4]	; 106e0 <_init@@Base+0x1c>
   106d8:	add	lr, pc, lr
   106dc:	ldr	pc, [lr, #8]!
   106e0:	andeq	r0, r1, r0, lsr #18

000106e4 <abort@plt>:
   106e4:	add	ip, pc, #0, 12
   106e8:	add	ip, ip, #16, 20	; 0x10000
   106ec:	ldr	pc, [ip, #2336]!	; 0x920

000106f0 <__libc_start_main@plt>:
   106f0:	add	ip, pc, #0, 12
   106f4:	add	ip, ip, #16, 20	; 0x10000
   106f8:	ldr	pc, [ip, #2328]!	; 0x918

000106fc <__gmon_start__@plt>:
   106fc:	add	ip, pc, #0, 12
   10700:	add	ip, ip, #16, 20	; 0x10000
   10704:	ldr	pc, [ip, #2320]!	; 0x910

00010708 <__printf_chk@plt>:
   10708:	add	ip, pc, #0, 12
   1070c:	add	ip, ip, #16, 20	; 0x10000
   10710:	ldr	pc, [ip, #2312]!	; 0x908

00010714 <FcFini@plt>:
   10714:	add	ip, pc, #0, 12
   10718:	add	ip, ip, #16, 20	; 0x10000
   1071c:	ldr	pc, [ip, #2304]!	; 0x900

00010720 <FcConfigGetCurrent@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #16, 20	; 0x10000
   10728:	ldr	pc, [ip, #2296]!	; 0x8f8

0001072c <getopt_long@plt>:
   1072c:	add	ip, pc, #0, 12
   10730:	add	ip, ip, #16, 20	; 0x10000
   10734:	ldr	pc, [ip, #2288]!	; 0x8f0

00010738 <dcgettext@plt>:
   10738:	add	ip, pc, #0, 12
   1073c:	add	ip, ip, #16, 20	; 0x10000
   10740:	ldr	pc, [ip, #2280]!	; 0x8e8

00010744 <setlocale@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #16, 20	; 0x10000
   1074c:	ldr	pc, [ip, #2272]!	; 0x8e0

00010750 <FcConfigFileInfoIterGet@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #16, 20	; 0x10000
   10758:	ldr	pc, [ip, #2264]!	; 0x8d8

0001075c <FcConfigFileInfoIterNext@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #16, 20	; 0x10000
   10764:	ldr	pc, [ip, #2256]!	; 0x8d0

00010768 <__stack_chk_fail@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #16, 20	; 0x10000
   10770:	ldr	pc, [ip, #2248]!	; 0x8c8

00010774 <FcConfigFileInfoIterInit@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #16, 20	; 0x10000
   1077c:	ldr	pc, [ip, #2240]!	; 0x8c0

00010780 <__fprintf_chk@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #16, 20	; 0x10000
   10788:	ldr	pc, [ip, #2232]!	; 0x8b8

0001078c <fputc@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #16, 20	; 0x10000
   10794:	ldr	pc, [ip, #2224]!	; 0x8b0

00010798 <FcStrFree@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #16, 20	; 0x10000
   107a0:	ldr	pc, [ip, #2216]!	; 0x8a8

000107a4 <exit@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #16, 20	; 0x10000
   107ac:	ldr	pc, [ip, #2208]!	; 0x8a0

Disassembly of section .text:

000107b0 <.text>:
   107b0:	push	{r4, r5, r6, r7, r8, lr}
   107b4:	sub	sp, sp, #40	; 0x28
   107b8:	ldr	r5, [pc, #312]	; 108f8 <exit@plt+0x154>
   107bc:	mov	r7, r0
   107c0:	mov	r6, r1
   107c4:	ldr	r3, [r5]
   107c8:	ldr	r1, [pc, #300]	; 108fc <exit@plt+0x158>
   107cc:	mov	r0, #6
   107d0:	mov	r4, #0
   107d4:	str	r3, [sp, #36]	; 0x24
   107d8:	bl	10744 <setlocale@plt>
   107dc:	mov	r0, r7
   107e0:	mov	r1, r6
   107e4:	str	r4, [sp]
   107e8:	ldr	r3, [pc, #272]	; 10900 <exit@plt+0x15c>
   107ec:	ldr	r2, [pc, #272]	; 10904 <exit@plt+0x160>
   107f0:	bl	1072c <getopt_long@plt>
   107f4:	cmn	r0, #1
   107f8:	beq	10844 <exit@plt+0xa0>
   107fc:	cmp	r0, #86	; 0x56
   10800:	bne	10830 <exit@plt+0x8c>
   10804:	ldr	r2, [pc, #252]	; 10908 <exit@plt+0x164>
   10808:	mov	r1, #1
   1080c:	mov	r3, #13
   10810:	ldr	r0, [r2]
   10814:	str	r3, [sp]
   10818:	str	r1, [sp, #4]
   1081c:	mov	r3, #2
   10820:	ldr	r2, [pc, #228]	; 1090c <exit@plt+0x168>
   10824:	bl	10780 <__fprintf_chk@plt>
   10828:	mov	r0, r4
   1082c:	bl	107a4 <exit@plt>
   10830:	cmp	r0, #104	; 0x68
   10834:	beq	108e8 <exit@plt+0x144>
   10838:	ldr	r0, [r6]
   1083c:	mov	r1, #1
   10840:	bl	10a04 <exit@plt+0x260>
   10844:	bl	10720 <FcConfigGetCurrent@plt>
   10848:	add	r1, sp, #24
   1084c:	ldr	r8, [pc, #188]	; 10910 <exit@plt+0x16c>
   10850:	add	r7, sp, #20
   10854:	mov	r4, r0
   10858:	bl	10774 <FcConfigFileInfoIterInit@plt>
   1085c:	str	r7, [sp]
   10860:	add	r3, sp, #16
   10864:	add	r2, sp, #12
   10868:	add	r1, sp, #24
   1086c:	mov	r0, r4
   10870:	bl	10750 <FcConfigFileInfoIterGet@plt>
   10874:	cmp	r0, #0
   10878:	beq	108b4 <exit@plt+0x110>
   1087c:	ldr	r2, [sp, #20]
   10880:	ldr	r3, [sp, #16]
   10884:	cmp	r2, #0
   10888:	movne	r2, #43	; 0x2b
   1088c:	moveq	r2, #45	; 0x2d
   10890:	str	r3, [sp]
   10894:	mov	r1, r8
   10898:	ldr	r3, [sp, #12]
   1089c:	mov	r0, #1
   108a0:	bl	10708 <__printf_chk@plt>
   108a4:	ldr	r0, [sp, #12]
   108a8:	bl	10798 <FcStrFree@plt>
   108ac:	ldr	r0, [sp, #16]
   108b0:	bl	10798 <FcStrFree@plt>
   108b4:	add	r1, sp, #24
   108b8:	mov	r0, r4
   108bc:	bl	1075c <FcConfigFileInfoIterNext@plt>
   108c0:	subs	r6, r0, #0
   108c4:	bne	1085c <exit@plt+0xb8>
   108c8:	bl	10714 <FcFini@plt>
   108cc:	ldr	r2, [sp, #36]	; 0x24
   108d0:	ldr	r3, [r5]
   108d4:	mov	r0, r6
   108d8:	cmp	r2, r3
   108dc:	bne	108f4 <exit@plt+0x150>
   108e0:	add	sp, sp, #40	; 0x28
   108e4:	pop	{r4, r5, r6, r7, r8, pc}
   108e8:	mov	r1, r4
   108ec:	ldr	r0, [r6]
   108f0:	bl	10a04 <exit@plt+0x260>
   108f4:	bl	10768 <__stack_chk_fail@plt>
   108f8:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   108fc:	andeq	r0, r1, ip, ror #24
   10900:	andeq	r0, r1, r0, asr #22
   10904:	andeq	r0, r1, ip, asr #24
   10908:	andeq	r1, r2, r8, rrx
   1090c:	andeq	r0, r1, r0, asr ip
   10910:	andeq	r0, r1, r0, ror ip
   10914:	mov	fp, #0
   10918:	mov	lr, #0
   1091c:	pop	{r1}		; (ldr r1, [sp], #4)
   10920:	mov	r2, sp
   10924:	push	{r2}		; (str r2, [sp, #-4]!)
   10928:	push	{r0}		; (str r0, [sp, #-4]!)
   1092c:	ldr	ip, [pc, #16]	; 10944 <exit@plt+0x1a0>
   10930:	push	{ip}		; (str ip, [sp, #-4]!)
   10934:	ldr	r0, [pc, #12]	; 10948 <exit@plt+0x1a4>
   10938:	ldr	r3, [pc, #12]	; 1094c <exit@plt+0x1a8>
   1093c:	bl	106f0 <__libc_start_main@plt>
   10940:	bl	106e4 <abort@plt>
   10944:	andeq	r0, r1, r0, lsr fp
   10948:			; <UNDEFINED> instruction: 0x000107b0
   1094c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10950:	ldr	r3, [pc, #20]	; 1096c <exit@plt+0x1c8>
   10954:	ldr	r2, [pc, #20]	; 10970 <exit@plt+0x1cc>
   10958:	add	r3, pc, r3
   1095c:	ldr	r2, [r3, r2]
   10960:	cmp	r2, #0
   10964:	bxeq	lr
   10968:	b	106fc <__gmon_start__@plt>
   1096c:	andeq	r0, r1, r0, lsr #13
   10970:	andeq	r0, r0, r0, asr r0
   10974:	ldr	r0, [pc, #24]	; 10994 <exit@plt+0x1f0>
   10978:	ldr	r3, [pc, #24]	; 10998 <exit@plt+0x1f4>
   1097c:	cmp	r3, r0
   10980:	bxeq	lr
   10984:	ldr	r3, [pc, #16]	; 1099c <exit@plt+0x1f8>
   10988:	cmp	r3, #0
   1098c:	bxeq	lr
   10990:	bx	r3
   10994:	andeq	r1, r2, ip, asr r0
   10998:	andeq	r1, r2, ip, asr r0
   1099c:	andeq	r0, r0, r0
   109a0:	ldr	r0, [pc, #36]	; 109cc <exit@plt+0x228>
   109a4:	ldr	r1, [pc, #36]	; 109d0 <exit@plt+0x22c>
   109a8:	sub	r1, r1, r0
   109ac:	asr	r1, r1, #2
   109b0:	add	r1, r1, r1, lsr #31
   109b4:	asrs	r1, r1, #1
   109b8:	bxeq	lr
   109bc:	ldr	r3, [pc, #16]	; 109d4 <exit@plt+0x230>
   109c0:	cmp	r3, #0
   109c4:	bxeq	lr
   109c8:	bx	r3
   109cc:	andeq	r1, r2, ip, asr r0
   109d0:	andeq	r1, r2, ip, asr r0
   109d4:	andeq	r0, r0, r0
   109d8:	push	{r4, lr}
   109dc:	ldr	r4, [pc, #24]	; 109fc <exit@plt+0x258>
   109e0:	ldrb	r3, [r4]
   109e4:	cmp	r3, #0
   109e8:	popne	{r4, pc}
   109ec:	bl	10974 <exit@plt+0x1d0>
   109f0:	mov	r3, #1
   109f4:	strb	r3, [r4]
   109f8:	pop	{r4, pc}
   109fc:	andeq	r1, r2, ip, rrx
   10a00:	b	109a0 <exit@plt+0x1fc>
   10a04:	push	{r4, r5, r6, lr}
   10a08:	subs	r5, r1, #0
   10a0c:	mov	r6, r0
   10a10:	ldrne	r3, [pc, #156]	; 10ab4 <exit@plt+0x310>
   10a14:	ldreq	r3, [pc, #156]	; 10ab8 <exit@plt+0x314>
   10a18:	mov	r2, #5
   10a1c:	ldr	r1, [pc, #152]	; 10abc <exit@plt+0x318>
   10a20:	ldr	r0, [pc, #152]	; 10ac0 <exit@plt+0x31c>
   10a24:	ldr	r4, [r3]
   10a28:	bl	10738 <dcgettext@plt>
   10a2c:	mov	r3, r6
   10a30:	mov	r1, #1
   10a34:	mov	r2, r0
   10a38:	mov	r0, r4
   10a3c:	bl	10780 <__fprintf_chk@plt>
   10a40:	mov	r2, #5
   10a44:	ldr	r1, [pc, #120]	; 10ac4 <exit@plt+0x320>
   10a48:	ldr	r0, [pc, #112]	; 10ac0 <exit@plt+0x31c>
   10a4c:	bl	10738 <dcgettext@plt>
   10a50:	mov	r1, #1
   10a54:	mov	r2, r0
   10a58:	mov	r0, r4
   10a5c:	bl	10780 <__fprintf_chk@plt>
   10a60:	mov	r1, r4
   10a64:	mov	r0, #10
   10a68:	bl	1078c <fputc@plt>
   10a6c:	mov	r2, #5
   10a70:	ldr	r1, [pc, #80]	; 10ac8 <exit@plt+0x324>
   10a74:	ldr	r0, [pc, #68]	; 10ac0 <exit@plt+0x31c>
   10a78:	bl	10738 <dcgettext@plt>
   10a7c:	mov	r1, #1
   10a80:	mov	r2, r0
   10a84:	mov	r0, r4
   10a88:	bl	10780 <__fprintf_chk@plt>
   10a8c:	mov	r2, #5
   10a90:	ldr	r1, [pc, #52]	; 10acc <exit@plt+0x328>
   10a94:	ldr	r0, [pc, #36]	; 10ac0 <exit@plt+0x31c>
   10a98:	bl	10738 <dcgettext@plt>
   10a9c:	mov	r1, #1
   10aa0:	mov	r2, r0
   10aa4:	mov	r0, r4
   10aa8:	bl	10780 <__fprintf_chk@plt>
   10aac:	mov	r0, r5
   10ab0:	bl	107a4 <exit@plt>
   10ab4:	andeq	r1, r2, r8, rrx
   10ab8:	andeq	r1, r2, r0, rrx
   10abc:	andeq	r0, r1, r0, ror fp
   10ac0:	muleq	r1, r8, fp
   10ac4:	andeq	r0, r1, r4, lsr #23
   10ac8:	ldrdeq	r0, [r1], -r8
   10acc:	andeq	r0, r1, r8, lsl ip
   10ad0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10ad4:	mov	r7, r0
   10ad8:	ldr	r6, [pc, #72]	; 10b28 <exit@plt+0x384>
   10adc:	ldr	r5, [pc, #72]	; 10b2c <exit@plt+0x388>
   10ae0:	add	r6, pc, r6
   10ae4:	add	r5, pc, r5
   10ae8:	sub	r6, r6, r5
   10aec:	mov	r8, r1
   10af0:	mov	r9, r2
   10af4:	bl	106c4 <_init@@Base>
   10af8:	asrs	r6, r6, #2
   10afc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b00:	mov	r4, #0
   10b04:	add	r4, r4, #1
   10b08:	ldr	r3, [r5], #4
   10b0c:	mov	r2, r9
   10b10:	mov	r1, r8
   10b14:	mov	r0, r7
   10b18:	blx	r3
   10b1c:	cmp	r6, r4
   10b20:	bne	10b04 <exit@plt+0x360>
   10b24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b28:	andeq	r0, r1, r4, lsl #8
   10b2c:	strdeq	r0, [r1], -ip
   10b30:	bx	lr

Disassembly of section .fini:

00010b34 <_fini@@Base>:
   10b34:	push	{r3, lr}
   10b38:	pop	{r3, pc}
