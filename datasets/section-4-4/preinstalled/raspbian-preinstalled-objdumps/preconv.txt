
raspbian-preinstalled/preconv:     file format elf32-littlearm


Disassembly of section .init:

0001103c <.init>:
   1103c:	push	{r3, lr}
   11040:	bl	117dc <__printf_chk@plt+0x444>
   11044:	pop	{r3, pc}

Disassembly of section .plt:

00011048 <fscanf@plt-0x14>:
   11048:	push	{lr}		; (str lr, [sp, #-4]!)
   1104c:	ldr	lr, [pc, #4]	; 11058 <fscanf@plt-0x4>
   11050:	add	lr, pc, lr
   11054:	ldr	pc, [lr, #8]!
   11058:	andeq	r8, r1, ip, ror lr

0001105c <fscanf@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #24, 20	; 0x18000
   11064:	ldr	pc, [ip, #3708]!	; 0xe7c

00011068 <__memcpy_chk@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #24, 20	; 0x18000
   11070:	ldr	pc, [ip, #3700]!	; 0xe74

00011074 <strcasecmp@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #24, 20	; 0x18000
   1107c:	ldr	pc, [ip, #3692]!	; 0xe6c

00011080 <fdopen@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #24, 20	; 0x18000
   11088:	ldr	pc, [ip, #3684]!	; 0xe64

0001108c <free@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #24, 20	; 0x18000
   11094:	ldr	pc, [ip, #3676]!	; 0xe5c

00011098 <fseek@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #24, 20	; 0x18000
   110a0:	ldr	pc, [ip, #3668]!	; 0xe54

000110a4 <strncmp@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #24, 20	; 0x18000
   110ac:	ldr	pc, [ip, #3660]!	; 0xe4c

000110b0 <exit@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #24, 20	; 0x18000
   110b8:	ldr	pc, [ip, #3652]!	; 0xe44

000110bc <strerror@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #24, 20	; 0x18000
   110c4:	ldr	pc, [ip, #3644]!	; 0xe3c

000110c8 <stpcpy@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #24, 20	; 0x18000
   110d0:	ldr	pc, [ip, #3636]!	; 0xe34

000110d4 <realpath@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #24, 20	; 0x18000
   110dc:	ldr	pc, [ip, #3628]!	; 0xe2c

000110e0 <strtok@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #24, 20	; 0x18000
   110e8:	ldr	pc, [ip, #3620]!	; 0xe24

000110ec <nl_langinfo@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #24, 20	; 0x18000
   110f4:	ldr	pc, [ip, #3612]!	; 0xe1c

000110f8 <uchardet_new@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #24, 20	; 0x18000
   11100:	ldr	pc, [ip, #3604]!	; 0xe14

00011104 <__fxstat64@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #24, 20	; 0x18000
   1110c:	ldr	pc, [ip, #3596]!	; 0xe0c

00011110 <uchardet_delete@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #24, 20	; 0x18000
   11118:	ldr	pc, [ip, #3588]!	; 0xe04

0001111c <close@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #24, 20	; 0x18000
   11124:	ldr	pc, [ip, #3580]!	; 0xdfc

00011128 <_Znaj@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #24, 20	; 0x18000
   11130:	ldr	pc, [ip, #3572]!	; 0xdf4

00011134 <abort@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #24, 20	; 0x18000
   1113c:	ldr	pc, [ip, #3564]!	; 0xdec

00011140 <realloc@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #24, 20	; 0x18000
   11148:	ldr	pc, [ip, #3556]!	; 0xde4

0001114c <strcpy@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #24, 20	; 0x18000
   11154:	ldr	pc, [ip, #3548]!	; 0xddc

00011158 <open64@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #24, 20	; 0x18000
   11160:	ldr	pc, [ip, #3540]!	; 0xdd4

00011164 <rewind@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #24, 20	; 0x18000
   1116c:	ldr	pc, [ip, #3532]!	; 0xdcc

00011170 <fread@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #24, 20	; 0x18000
   11178:	ldr	pc, [ip, #3524]!	; 0xdc4

0001117c <ungetc@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #24, 20	; 0x18000
   11184:	ldr	pc, [ip, #3516]!	; 0xdbc

00011188 <fileno@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #24, 20	; 0x18000
   11190:	ldr	pc, [ip, #3508]!	; 0xdb4

00011194 <__stack_chk_fail@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #24, 20	; 0x18000
   1119c:	ldr	pc, [ip, #3500]!	; 0xdac

000111a0 <__cxa_end_cleanup@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #24, 20	; 0x18000
   111a8:	ldr	pc, [ip, #3492]!	; 0xda4

000111ac <access@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #24, 20	; 0x18000
   111b4:	ldr	pc, [ip, #3484]!	; 0xd9c

000111b8 <putc@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #24, 20	; 0x18000
   111c0:	ldr	pc, [ip, #3476]!	; 0xd94

000111c4 <getc@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #24, 20	; 0x18000
   111cc:	ldr	pc, [ip, #3468]!	; 0xd8c

000111d0 <strstr@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #24, 20	; 0x18000
   111d8:	ldr	pc, [ip, #3460]!	; 0xd84

000111dc <_ZdaPv@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #24, 20	; 0x18000
   111e4:	ldr	pc, [ip, #3452]!	; 0xd7c

000111e8 <__ctype_b_loc@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #24, 20	; 0x18000
   111f0:	ldr	pc, [ip, #3444]!	; 0xd74

000111f4 <calloc@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #24, 20	; 0x18000
   111fc:	ldr	pc, [ip, #3436]!	; 0xd6c

00011200 <ftell@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #24, 20	; 0x18000
   11208:	ldr	pc, [ip, #3428]!	; 0xd64

0001120c <setlocale@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #24, 20	; 0x18000
   11214:	ldr	pc, [ip, #3420]!	; 0xd5c

00011218 <ferror@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #24, 20	; 0x18000
   11220:	ldr	pc, [ip, #3412]!	; 0xd54

00011224 <iconv_close@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #24, 20	; 0x18000
   1122c:	ldr	pc, [ip, #3404]!	; 0xd4c

00011230 <fputc@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #24, 20	; 0x18000
   11238:	ldr	pc, [ip, #3396]!	; 0xd44

0001123c <fwrite@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #24, 20	; 0x18000
   11244:	ldr	pc, [ip, #3388]!	; 0xd3c

00011248 <pathconf@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #24, 20	; 0x18000
   11250:	ldr	pc, [ip, #3380]!	; 0xd34

00011254 <memcpy@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #24, 20	; 0x18000
   1125c:	ldr	pc, [ip, #3372]!	; 0xd2c

00011260 <malloc@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #24, 20	; 0x18000
   11268:	ldr	pc, [ip, #3364]!	; 0xd24

0001126c <strlen@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #24, 20	; 0x18000
   11274:	ldr	pc, [ip, #3356]!	; 0xd1c

00011278 <__snprintf_chk@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #24, 20	; 0x18000
   11280:	ldr	pc, [ip, #3348]!	; 0xd14

00011284 <__memmove_chk@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #24, 20	; 0x18000
   1128c:	ldr	pc, [ip, #3340]!	; 0xd0c

00011290 <fclose@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #24, 20	; 0x18000
   11298:	ldr	pc, [ip, #3332]!	; 0xd04

0001129c <uchardet_data_end@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #24, 20	; 0x18000
   112a4:	ldr	pc, [ip, #3324]!	; 0xcfc

000112a8 <uchardet_handle_data@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #24, 20	; 0x18000
   112b0:	ldr	pc, [ip, #3316]!	; 0xcf4

000112b4 <__gxx_personality_v0@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #24, 20	; 0x18000
   112bc:	ldr	pc, [ip, #3308]!	; 0xcec

000112c0 <iconv_open@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #24, 20	; 0x18000
   112c8:	ldr	pc, [ip, #3300]!	; 0xce4

000112cc <__uflow@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #24, 20	; 0x18000
   112d4:	ldr	pc, [ip, #3292]!	; 0xcdc

000112d8 <strcmp@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #24, 20	; 0x18000
   112e0:	ldr	pc, [ip, #3284]!	; 0xcd4

000112e4 <iconv@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #24, 20	; 0x18000
   112ec:	ldr	pc, [ip, #3276]!	; 0xccc

000112f0 <__errno_location@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #24, 20	; 0x18000
   112f8:	ldr	pc, [ip, #3268]!	; 0xcc4

000112fc <memchr@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #24, 20	; 0x18000
   11304:	ldr	pc, [ip, #3260]!	; 0xcbc

00011308 <strncpy@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #24, 20	; 0x18000
   11310:	ldr	pc, [ip, #3252]!	; 0xcb4

00011314 <fflush@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #24, 20	; 0x18000
   1131c:	ldr	pc, [ip, #3244]!	; 0xcac

00011320 <fopen64@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #24, 20	; 0x18000
   11328:	ldr	pc, [ip, #3236]!	; 0xca4

0001132c <memcmp@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #24, 20	; 0x18000
   11334:	ldr	pc, [ip, #3228]!	; 0xc9c

00011338 <__sprintf_chk@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #24, 20	; 0x18000
   11340:	ldr	pc, [ip, #3220]!	; 0xc94

00011344 <strrchr@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #24, 20	; 0x18000
   1134c:	ldr	pc, [ip, #3212]!	; 0xc8c

00011350 <uchardet_get_charset@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #24, 20	; 0x18000
   11358:	ldr	pc, [ip, #3204]!	; 0xc84

0001135c <fputs@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #24, 20	; 0x18000
   11364:	ldr	pc, [ip, #3196]!	; 0xc7c

00011368 <getenv@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #24, 20	; 0x18000
   11370:	ldr	pc, [ip, #3188]!	; 0xc74

00011374 <__libc_start_main@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #24, 20	; 0x18000
   1137c:	ldr	pc, [ip, #3180]!	; 0xc6c

00011380 <__gmon_start__@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #24, 20	; 0x18000
   11388:	ldr	pc, [ip, #3172]!	; 0xc64

0001138c <strchr@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #24, 20	; 0x18000
   11394:	ldr	pc, [ip, #3164]!	; 0xc5c

00011398 <__printf_chk@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #24, 20	; 0x18000
   113a0:	ldr	pc, [ip, #3156]!	; 0xc54

Disassembly of section .text:

000113a4 <.text>:
   113a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   113a8:	mov	r4, r1
   113ac:	ldr	r9, [pc, #852]	; 11708 <__printf_chk@plt+0x370>
   113b0:	ldr	r3, [r1]
   113b4:	sub	sp, sp, #8
   113b8:	ldr	r1, [pc, #844]	; 1170c <__printf_chk@plt+0x374>
   113bc:	mov	r6, r0
   113c0:	mov	r0, #6
   113c4:	str	r3, [r9]
   113c8:	bl	1120c <setlocale@plt>
   113cc:	mov	r1, #0
   113d0:	mov	r0, r1
   113d4:	bl	1120c <setlocale@plt>
   113d8:	subs	r5, r0, #0
   113dc:	beq	113f0 <__printf_chk@plt+0x58>
   113e0:	ldr	r1, [pc, #808]	; 11710 <__printf_chk@plt+0x378>
   113e4:	bl	112d8 <strcmp@plt>
   113e8:	cmp	r0, #0
   113ec:	bne	115e8 <__printf_chk@plt+0x250>
   113f0:	ldr	r3, [pc, #796]	; 11714 <__printf_chk@plt+0x37c>
   113f4:	ldr	r5, [pc, #796]	; 11718 <__printf_chk@plt+0x380>
   113f8:	ldm	r3, {r0, r1}
   113fc:	add	r3, r5, #408	; 0x198
   11400:	lsr	r2, r1, #16
   11404:	str	r0, [r5, #404]	; 0x194
   11408:	strh	r1, [r3], #2
   1140c:	strb	r2, [r3]
   11410:	ldr	r8, [pc, #772]	; 1171c <__printf_chk@plt+0x384>
   11414:	ldr	r7, [pc, #772]	; 11720 <__printf_chk@plt+0x388>
   11418:	ldr	sl, [pc, #772]	; 11724 <__printf_chk@plt+0x38c>
   1141c:	ldr	r3, [r4]
   11420:	str	r3, [r9]
   11424:	mov	r3, #0
   11428:	str	r3, [sp]
   1142c:	mov	r2, r7
   11430:	mov	r3, r8
   11434:	mov	r1, r4
   11438:	mov	r0, r6
   1143c:	bl	1484c <__printf_chk@plt+0x34b4>
   11440:	cmn	r0, #1
   11444:	beq	11630 <__printf_chk@plt+0x298>
   11448:	sub	r0, r0, #63	; 0x3f
   1144c:	cmp	r0, #55	; 0x37
   11450:	ldrls	pc, [pc, r0, lsl #2]
   11454:	b	11620 <__printf_chk@plt+0x288>
   11458:			; <UNDEFINED> instruction: 0x000116bc
   1145c:	andeq	r1, r1, r0, lsr #12
   11460:	andeq	r1, r1, r0, lsr #12
   11464:	andeq	r1, r1, r0, lsr #12
   11468:	andeq	r1, r1, r0, lsr #12
   1146c:	andeq	r1, r1, r0, asr #11
   11470:	andeq	r1, r1, r0, lsr #12
   11474:	andeq	r1, r1, r0, lsr #12
   11478:	andeq	r1, r1, r0, lsr #12
   1147c:	andeq	r1, r1, r0, lsr #12
   11480:	andeq	r1, r1, r0, lsr #12
   11484:	andeq	r1, r1, r0, lsr #12
   11488:	andeq	r1, r1, r0, lsr #12
   1148c:	andeq	r1, r1, r0, lsr #12
   11490:	andeq	r1, r1, r0, lsr #12
   11494:	andeq	r1, r1, r0, lsr #12
   11498:	andeq	r1, r1, r0, lsr #12
   1149c:	andeq	r1, r1, r0, lsr #12
   114a0:	andeq	r1, r1, r0, lsr #12
   114a4:	andeq	r1, r1, r0, lsr #12
   114a8:	andeq	r1, r1, r0, lsr #12
   114ac:	andeq	r1, r1, r0, lsr #12
   114b0:	andeq	r1, r1, r0, lsr #12
   114b4:	andeq	r1, r1, r0, lsr #12
   114b8:	andeq	r1, r1, r0, lsr #12
   114bc:	andeq	r1, r1, r0, lsr #12
   114c0:	andeq	r1, r1, r0, lsr #12
   114c4:	andeq	r1, r1, r0, lsr #12
   114c8:	andeq	r1, r1, r0, lsr #12
   114cc:	andeq	r1, r1, r0, lsr #12
   114d0:	andeq	r1, r1, r0, lsr #12
   114d4:	andeq	r1, r1, r0, lsr #12
   114d8:	andeq	r1, r1, r0, lsr #12
   114dc:	andeq	r1, r1, r0, lsr #12
   114e0:	andeq	r1, r1, r0, lsr #12
   114e4:	andeq	r1, r1, r0, lsr #12
   114e8:	andeq	r1, r1, r0, lsr #12
   114ec:			; <UNDEFINED> instruction: 0x000115b4
   114f0:	andeq	r1, r1, r8, lsl #11
   114f4:	andeq	r1, r1, r0, lsr #12
   114f8:	andeq	r1, r1, r0, lsr #12
   114fc:	andeq	r1, r1, r8, ror #10
   11500:	andeq	r1, r1, r0, lsr #12
   11504:	andeq	r1, r1, r0, lsr #12
   11508:	andeq	r1, r1, r0, lsr #12
   1150c:	andeq	r1, r1, r0, lsr #12
   11510:	andeq	r1, r1, r0, lsr #12
   11514:	andeq	r1, r1, r0, lsr #12
   11518:	andeq	r1, r1, r0, lsr #12
   1151c:	andeq	r1, r1, r0, lsr #12
   11520:	andeq	r1, r1, r0, lsr #12
   11524:	andeq	r1, r1, ip, asr r5
   11528:	andeq	r1, r1, r0, lsr #12
   1152c:	andeq	r1, r1, r0, lsr #12
   11530:	andeq	r1, r1, r0, lsr #12
   11534:	andeq	r1, r1, r8, lsr r5
   11538:	ldr	r2, [pc, #488]	; 11728 <__printf_chk@plt+0x390>
   1153c:	ldr	r3, [pc, #488]	; 1172c <__printf_chk@plt+0x394>
   11540:	ldr	r1, [pc, #488]	; 11730 <__printf_chk@plt+0x398>
   11544:	ldr	r2, [r2]
   11548:	mov	r0, #1
   1154c:	str	r3, [sp]
   11550:	bl	11398 <__printf_chk@plt>
   11554:	mov	r0, #0
   11558:	bl	110b0 <exit@plt>
   1155c:	mov	r3, #1
   11560:	str	r3, [r5, #504]	; 0x1f8
   11564:	b	11424 <__printf_chk@plt+0x8c>
   11568:	ldr	r1, [pc, #452]	; 11734 <__printf_chk@plt+0x39c>
   1156c:	ldr	r2, [r9]
   11570:	ldr	r3, [pc, #448]	; 11738 <__printf_chk@plt+0x3a0>
   11574:	ldr	r0, [r1]
   11578:	ldr	r1, [pc, #444]	; 1173c <__printf_chk@plt+0x3a4>
   1157c:	bl	1625c <__printf_chk@plt+0x4ec4>
   11580:	mov	r0, #0
   11584:	bl	110b0 <exit@plt>
   11588:	ldr	r3, [pc, #432]	; 11740 <__printf_chk@plt+0x3a8>
   1158c:	ldr	r1, [r3]
   11590:	cmp	r1, #0
   11594:	strbeq	r1, [r5, #204]	; 0xcc
   11598:	beq	11424 <__printf_chk@plt+0x8c>
   1159c:	mov	r2, #99	; 0x63
   115a0:	ldr	r0, [pc, #412]	; 11744 <__printf_chk@plt+0x3ac>
   115a4:	bl	11308 <strncpy@plt>
   115a8:	mov	r3, #0
   115ac:	strb	r3, [r5, #303]	; 0x12f
   115b0:	b	11424 <__printf_chk@plt+0x8c>
   115b4:	mov	r3, #1
   115b8:	str	r3, [r5]
   115bc:	b	11424 <__printf_chk@plt+0x8c>
   115c0:	ldr	r3, [pc, #376]	; 11740 <__printf_chk@plt+0x3a8>
   115c4:	ldr	r1, [r3]
   115c8:	cmp	r1, #0
   115cc:	beq	11424 <__printf_chk@plt+0x8c>
   115d0:	mov	r2, #99	; 0x63
   115d4:	ldr	r0, [pc, #348]	; 11738 <__printf_chk@plt+0x3a0>
   115d8:	bl	11308 <strncpy@plt>
   115dc:	mov	r3, #0
   115e0:	strb	r3, [r5, #503]	; 0x1f7
   115e4:	b	11424 <__printf_chk@plt+0x8c>
   115e8:	mov	r0, r5
   115ec:	ldr	r1, [pc, #340]	; 11748 <__printf_chk@plt+0x3b0>
   115f0:	bl	112d8 <strcmp@plt>
   115f4:	cmp	r0, #0
   115f8:	beq	113f0 <__printf_chk@plt+0x58>
   115fc:	bl	14b98 <__printf_chk@plt+0x3800>
   11600:	ldr	r5, [pc, #272]	; 11718 <__printf_chk@plt+0x380>
   11604:	mov	r2, #99	; 0x63
   11608:	mov	r1, r0
   1160c:	add	r0, r5, #404	; 0x194
   11610:	bl	11308 <strncpy@plt>
   11614:	mov	r3, #0
   11618:	strb	r3, [r5, #503]	; 0x1f7
   1161c:	b	11410 <__printf_chk@plt+0x78>
   11620:	mov	r1, sl
   11624:	ldr	r0, [pc, #288]	; 1174c <__printf_chk@plt+0x3b4>
   11628:	bl	13558 <__printf_chk@plt+0x21c0>
   1162c:	b	11424 <__printf_chk@plt+0x8c>
   11630:	ldr	r3, [r5]
   11634:	cmp	r3, #0
   11638:	bne	116f0 <__printf_chk@plt+0x358>
   1163c:	ldr	r3, [pc, #268]	; 11750 <__printf_chk@plt+0x3b8>
   11640:	ldr	r5, [r3]
   11644:	cmp	r5, r6
   11648:	addlt	r5, r4, r5, lsl #2
   1164c:	addlt	r4, r4, r6, lsl #2
   11650:	movlt	r6, #0
   11654:	bge	116dc <__printf_chk@plt+0x344>
   11658:	ldr	r0, [r5], #4
   1165c:	bl	12ff8 <__printf_chk@plt+0x1c60>
   11660:	cmp	r0, #0
   11664:	addeq	r6, r6, #1
   11668:	cmp	r4, r5
   1166c:	bne	11658 <__printf_chk@plt+0x2c0>
   11670:	ldr	r4, [pc, #188]	; 11734 <__printf_chk@plt+0x39c>
   11674:	ldr	r0, [r4]
   11678:	bl	11218 <ferror@plt>
   1167c:	cmp	r0, #0
   11680:	beq	116a8 <__printf_chk@plt+0x310>
   11684:	ldr	r3, [pc, #200]	; 11754 <__printf_chk@plt+0x3bc>
   11688:	ldr	r0, [pc, #200]	; 11758 <__printf_chk@plt+0x3c0>
   1168c:	mov	r2, r3
   11690:	mov	r1, r3
   11694:	bl	13a28 <__printf_chk@plt+0x2690>
   11698:	adds	r0, r6, #0
   1169c:	movne	r0, #1
   116a0:	add	sp, sp, #8
   116a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   116a8:	ldr	r0, [r4]
   116ac:	bl	11314 <fflush@plt>
   116b0:	cmp	r0, #0
   116b4:	bge	11698 <__printf_chk@plt+0x300>
   116b8:	b	11684 <__printf_chk@plt+0x2ec>
   116bc:	ldr	r1, [pc, #152]	; 1175c <__printf_chk@plt+0x3c4>
   116c0:	ldr	r2, [r9]
   116c4:	ldr	r3, [pc, #108]	; 11738 <__printf_chk@plt+0x3a0>
   116c8:	ldr	r0, [r1]
   116cc:	ldr	r1, [pc, #104]	; 1173c <__printf_chk@plt+0x3a4>
   116d0:	bl	1625c <__printf_chk@plt+0x4ec4>
   116d4:	mov	r0, #1
   116d8:	bl	110b0 <exit@plt>
   116dc:	ldr	r0, [pc, #124]	; 11760 <__printf_chk@plt+0x3c8>
   116e0:	bl	12ff8 <__printf_chk@plt+0x1c60>
   116e4:	clz	r6, r0
   116e8:	lsr	r6, r6, #5
   116ec:	b	11670 <__printf_chk@plt+0x2d8>
   116f0:	ldr	r3, [pc, #100]	; 1175c <__printf_chk@plt+0x3c4>
   116f4:	ldr	r2, [pc, #60]	; 11738 <__printf_chk@plt+0x3a0>
   116f8:	ldr	r1, [pc, #100]	; 11764 <__printf_chk@plt+0x3cc>
   116fc:	ldr	r0, [r3]
   11700:	bl	1625c <__printf_chk@plt+0x4ec4>
   11704:	b	1163c <__printf_chk@plt+0x2a4>
   11708:	andeq	sl, r2, ip, lsr #5
   1170c:	andeq	r8, r1, ip, lsr #10
   11710:	muleq	r1, r4, r8
   11714:	andeq	r8, r1, r0, lsr #17
   11718:	andeq	sl, r2, r4, lsr r0
   1171c:	andeq	r8, r1, r8, asr r3
   11720:	andeq	r8, r1, r8, lsr #17
   11724:	andeq	r8, r1, r8, lsl #18
   11728:	andeq	sl, r2, r4, lsl r0
   1172c:			; <UNDEFINED> instruction: 0x000188b4
   11730:			; <UNDEFINED> instruction: 0x000188bc
   11734:	andeq	sl, r2, ip, lsr #32
   11738:	andeq	sl, r2, r8, asr #3
   1173c:	andeq	r8, r1, ip, ror r7
   11740:	andeq	sl, r2, r8, asr #27
   11744:	andeq	sl, r2, r0, lsl #2
   11748:	muleq	r1, r8, r8
   1174c:	strdeq	r0, [r0], -r9
   11750:	andeq	sl, r2, r8
   11754:	andeq	sl, r2, r0, lsr r2
   11758:	andeq	r8, r1, r8, asr #18
   1175c:	andeq	sl, r2, r8, lsr #32
   11760:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   11764:	andeq	r8, r1, r0, lsr r9
   11768:	ldr	r3, [pc, #8]	; 11778 <__printf_chk@plt+0x3e0>
   1176c:	mov	r2, #0
   11770:	str	r2, [r3]
   11774:	bx	lr
   11778:	andeq	sl, r2, r0, lsr r2
   1177c:	ldr	r0, [pc]	; 11784 <__printf_chk@plt+0x3ec>
   11780:	b	16200 <__printf_chk@plt+0x4e68>
   11784:	andeq	sl, r2, r0, lsr #5
   11788:	ldr	r3, [pc, #12]	; 1179c <__printf_chk@plt+0x404>
   1178c:	ldr	r3, [r3]
   11790:	cmp	r3, #0
   11794:	bxne	lr
   11798:	b	15eb4 <__printf_chk@plt+0x4b1c>
   1179c:	andeq	sl, r2, r4, asr #5
   117a0:	mov	fp, #0
   117a4:	mov	lr, #0
   117a8:	pop	{r1}		; (ldr r1, [sp], #4)
   117ac:	mov	r2, sp
   117b0:	push	{r2}		; (str r2, [sp, #-4]!)
   117b4:	push	{r0}		; (str r0, [sp, #-4]!)
   117b8:	ldr	ip, [pc, #16]	; 117d0 <__printf_chk@plt+0x438>
   117bc:	push	{ip}		; (str ip, [sp, #-4]!)
   117c0:	ldr	r0, [pc, #12]	; 117d4 <__printf_chk@plt+0x43c>
   117c4:	ldr	r3, [pc, #12]	; 117d8 <__printf_chk@plt+0x440>
   117c8:	bl	11374 <__libc_start_main@plt>
   117cc:	bl	11134 <abort@plt>
   117d0:	andeq	r7, r1, ip, asr #31
   117d4:	andeq	r1, r1, r4, lsr #7
   117d8:	andeq	r7, r1, ip, ror #30
   117dc:	ldr	r3, [pc, #20]	; 117f8 <__printf_chk@plt+0x460>
   117e0:	ldr	r2, [pc, #20]	; 117fc <__printf_chk@plt+0x464>
   117e4:	add	r3, pc, r3
   117e8:	ldr	r2, [r3, r2]
   117ec:	cmp	r2, #0
   117f0:	bxeq	lr
   117f4:	b	11380 <__gmon_start__@plt>
   117f8:	andeq	r8, r1, r8, ror #13
   117fc:	andeq	r0, r0, r4, lsr #2
   11800:	ldr	r0, [pc, #24]	; 11820 <__printf_chk@plt+0x488>
   11804:	ldr	r3, [pc, #24]	; 11824 <__printf_chk@plt+0x48c>
   11808:	cmp	r3, r0
   1180c:	bxeq	lr
   11810:	ldr	r3, [pc, #16]	; 11828 <__printf_chk@plt+0x490>
   11814:	cmp	r3, #0
   11818:	bxeq	lr
   1181c:	bx	r3
   11820:	andeq	sl, r2, r0, lsr #32
   11824:	andeq	sl, r2, r0, lsr #32
   11828:	andeq	r0, r0, r0
   1182c:	ldr	r0, [pc, #36]	; 11858 <__printf_chk@plt+0x4c0>
   11830:	ldr	r1, [pc, #36]	; 1185c <__printf_chk@plt+0x4c4>
   11834:	sub	r1, r1, r0
   11838:	asr	r1, r1, #2
   1183c:	add	r1, r1, r1, lsr #31
   11840:	asrs	r1, r1, #1
   11844:	bxeq	lr
   11848:	ldr	r3, [pc, #16]	; 11860 <__printf_chk@plt+0x4c8>
   1184c:	cmp	r3, #0
   11850:	bxeq	lr
   11854:	bx	r3
   11858:	andeq	sl, r2, r0, lsr #32
   1185c:	andeq	sl, r2, r0, lsr #32
   11860:	andeq	r0, r0, r0
   11864:	push	{r4, lr}
   11868:	ldr	r4, [pc, #24]	; 11888 <__printf_chk@plt+0x4f0>
   1186c:	ldrb	r3, [r4]
   11870:	cmp	r3, #0
   11874:	popne	{r4, pc}
   11878:	bl	11800 <__printf_chk@plt+0x468>
   1187c:	mov	r3, #1
   11880:	strb	r3, [r4]
   11884:	pop	{r4, pc}
   11888:	andeq	sl, r2, r0, lsr r0
   1188c:	b	1182c <__printf_chk@plt+0x494>
   11890:	push	{r4, r5, r6, r7, r8, lr}
   11894:	mov	r5, r0
   11898:	bl	1126c <strlen@plt>
   1189c:	cmp	r0, #4
   118a0:	bls	118f8 <__printf_chk@plt+0x560>
   118a4:	sub	r7, r0, #4
   118a8:	add	r6, r5, r7
   118ac:	mov	r4, r0
   118b0:	ldr	r1, [pc, #120]	; 11930 <__printf_chk@plt+0x598>
   118b4:	mov	r0, r6
   118b8:	bl	11074 <strcasecmp@plt>
   118bc:	ldr	r1, [pc, #112]	; 11934 <__printf_chk@plt+0x59c>
   118c0:	cmp	r0, #0
   118c4:	strbeq	r0, [r5, r7]
   118c8:	mov	r0, r6
   118cc:	bl	11074 <strcasecmp@plt>
   118d0:	cmp	r0, #0
   118d4:	strbeq	r0, [r5, r7]
   118d8:	cmp	r4, #5
   118dc:	beq	118f8 <__printf_chk@plt+0x560>
   118e0:	sub	r4, r4, #5
   118e4:	add	r0, r5, r4
   118e8:	ldr	r1, [pc, #72]	; 11938 <__printf_chk@plt+0x5a0>
   118ec:	bl	11074 <strcasecmp@plt>
   118f0:	cmp	r0, #0
   118f4:	strbeq	r0, [r5, r4]
   118f8:	ldr	r4, [pc, #60]	; 1193c <__printf_chk@plt+0x5a4>
   118fc:	ldr	r1, [pc, #60]	; 11940 <__printf_chk@plt+0x5a8>
   11900:	b	11910 <__printf_chk@plt+0x578>
   11904:	ldr	r1, [r4, #8]!
   11908:	cmp	r1, #0
   1190c:	beq	11928 <__printf_chk@plt+0x590>
   11910:	mov	r0, r5
   11914:	bl	11074 <strcasecmp@plt>
   11918:	cmp	r0, #0
   1191c:	bne	11904 <__printf_chk@plt+0x56c>
   11920:	ldr	r0, [r4, #4]
   11924:	pop	{r4, r5, r6, r7, r8, pc}
   11928:	mov	r0, r5
   1192c:	pop	{r4, r5, r6, r7, r8, pc}
   11930:	andeq	r8, r1, r0, lsr #7
   11934:			; <UNDEFINED> instruction: 0x000183b0
   11938:	andeq	r8, r1, r8, lsr #7
   1193c:	ldrdeq	r7, [r1], -ip
   11940:	muleq	r1, r8, r3
   11944:	push	{r4, r5, r6, r7, r8, lr}
   11948:	mov	r6, r0
   1194c:	ldrd	r4, [r1]
   11950:	cmp	r5, #0
   11954:	ble	119b0 <__printf_chk@plt+0x618>
   11958:	add	r5, r4, r5
   1195c:	ldr	r7, [pc, #204]	; 11a30 <__printf_chk@plt+0x698>
   11960:	ldr	r8, [pc, #204]	; 11a34 <__printf_chk@plt+0x69c>
   11964:	sub	r5, r5, #1
   11968:	sub	r4, r4, #1
   1196c:	b	11984 <__printf_chk@plt+0x5ec>
   11970:	cmp	r3, #173	; 0xad
   11974:	beq	119ec <__printf_chk@plt+0x654>
   11978:	bl	11398 <__printf_chk@plt>
   1197c:	cmp	r4, r5
   11980:	beq	119b0 <__printf_chk@plt+0x618>
   11984:	ldrb	r3, [r4, #1]!
   11988:	mov	r1, r7
   1198c:	mov	r0, #1
   11990:	cmp	r3, #127	; 0x7f
   11994:	mov	r2, r3
   11998:	bgt	11970 <__printf_chk@plt+0x5d8>
   1199c:	mov	r0, r3
   119a0:	ldr	r1, [r8]
   119a4:	bl	111b8 <putc@plt>
   119a8:	cmp	r4, r5
   119ac:	bne	11984 <__printf_chk@plt+0x5ec>
   119b0:	ldr	r4, [pc, #120]	; 11a30 <__printf_chk@plt+0x698>
   119b4:	ldr	r5, [pc, #120]	; 11a34 <__printf_chk@plt+0x69c>
   119b8:	mov	r0, r6
   119bc:	bl	111c4 <getc@plt>
   119c0:	cmn	r0, #1
   119c4:	popeq	{r4, r5, r6, r7, r8, pc}
   119c8:	cmp	r0, #127	; 0x7f
   119cc:	mov	r2, r0
   119d0:	mov	r1, r4
   119d4:	ble	11a08 <__printf_chk@plt+0x670>
   119d8:	cmp	r0, #173	; 0xad
   119dc:	mov	r0, #1
   119e0:	beq	11a14 <__printf_chk@plt+0x67c>
   119e4:	bl	11398 <__printf_chk@plt>
   119e8:	b	119b8 <__printf_chk@plt+0x620>
   119ec:	ldr	r1, [r8]
   119f0:	mov	r0, #92	; 0x5c
   119f4:	bl	111b8 <putc@plt>
   119f8:	ldr	r1, [r8]
   119fc:	mov	r0, #37	; 0x25
   11a00:	bl	111b8 <putc@plt>
   11a04:	b	1197c <__printf_chk@plt+0x5e4>
   11a08:	ldr	r1, [r5]
   11a0c:	bl	111b8 <putc@plt>
   11a10:	b	119b8 <__printf_chk@plt+0x620>
   11a14:	ldr	r1, [r5]
   11a18:	mov	r0, #92	; 0x5c
   11a1c:	bl	111b8 <putc@plt>
   11a20:	ldr	r1, [r5]
   11a24:	mov	r0, #37	; 0x25
   11a28:	bl	111b8 <putc@plt>
   11a2c:	b	119b8 <__printf_chk@plt+0x620>
   11a30:			; <UNDEFINED> instruction: 0x000183b8
   11a34:	andeq	sl, r2, ip, lsr #32
   11a38:	mov	r2, #1
   11a3c:	mov	ip, #0
   11a40:	str	r1, [r0]
   11a44:	str	ip, [r0, #12]
   11a48:	str	r2, [r0, #16]
   11a4c:	str	r2, [r0, #20]
   11a50:	str	r2, [r0, #24]
   11a54:	bx	lr
   11a58:	ldr	r3, [pc, #84]	; 11ab4 <__printf_chk@plt+0x71c>
   11a5c:	push	{r4, lr}
   11a60:	mov	r4, r0
   11a64:	ldr	r3, [r3]
   11a68:	cmp	r3, #0
   11a6c:	beq	11a7c <__printf_chk@plt+0x6e4>
   11a70:	ldr	r3, [r0, #20]
   11a74:	cmp	r3, #0
   11a78:	bne	11a98 <__printf_chk@plt+0x700>
   11a7c:	ldr	r2, [pc, #52]	; 11ab8 <__printf_chk@plt+0x720>
   11a80:	ldr	r1, [pc, #52]	; 11abc <__printf_chk@plt+0x724>
   11a84:	mov	r0, #1
   11a88:	bl	11398 <__printf_chk@plt>
   11a8c:	mov	r3, #0
   11a90:	str	r3, [r4, #12]
   11a94:	pop	{r4, pc}
   11a98:	ldr	r3, [pc, #32]	; 11ac0 <__printf_chk@plt+0x728>
   11a9c:	ldr	r1, [pc, #32]	; 11ac4 <__printf_chk@plt+0x72c>
   11aa0:	ldr	r0, [r3]
   11aa4:	bl	1625c <__printf_chk@plt+0x4ec4>
   11aa8:	mov	r3, #0
   11aac:	str	r3, [r4, #20]
   11ab0:	b	11a7c <__printf_chk@plt+0x6e4>
   11ab4:	andeq	sl, r2, r4, lsr r0
   11ab8:	strdeq	pc, [r0], -sp
   11abc:			; <UNDEFINED> instruction: 0x000183b8
   11ac0:	andeq	sl, r2, r8, lsr #32
   11ac4:	andeq	r8, r1, r4, asr #7
   11ac8:	ldr	r3, [pc, #84]	; 11b24 <__printf_chk@plt+0x78c>
   11acc:	push	{r4, lr}
   11ad0:	mov	r4, r0
   11ad4:	ldr	r3, [r3]
   11ad8:	cmp	r3, #0
   11adc:	beq	11aec <__printf_chk@plt+0x754>
   11ae0:	ldr	r3, [r0, #24]
   11ae4:	cmp	r3, #0
   11ae8:	bne	11b08 <__printf_chk@plt+0x770>
   11aec:	ldr	r2, [pc, #52]	; 11b28 <__printf_chk@plt+0x790>
   11af0:	ldr	r1, [pc, #52]	; 11b2c <__printf_chk@plt+0x794>
   11af4:	mov	r0, #1
   11af8:	bl	11398 <__printf_chk@plt>
   11afc:	mov	r3, #0
   11b00:	str	r3, [r4, #12]
   11b04:	pop	{r4, pc}
   11b08:	ldr	r3, [pc, #32]	; 11b30 <__printf_chk@plt+0x798>
   11b0c:	ldr	r1, [pc, #32]	; 11b34 <__printf_chk@plt+0x79c>
   11b10:	ldr	r0, [r3]
   11b14:	bl	1625c <__printf_chk@plt+0x4ec4>
   11b18:	mov	r3, #0
   11b1c:	str	r3, [r4, #24]
   11b20:	b	11aec <__printf_chk@plt+0x754>
   11b24:	andeq	sl, r2, r4, lsr r0
   11b28:	strdeq	pc, [r0], -sp
   11b2c:			; <UNDEFINED> instruction: 0x000183b8
   11b30:	andeq	sl, r2, r8, lsr #32
   11b34:	andeq	r8, r1, ip, lsl r4
   11b38:	push	{r4, lr}
   11b3c:	mov	r4, r0
   11b40:	ldr	r3, [r0, #12]
   11b44:	cmp	r3, #0
   11b48:	bne	11b54 <__printf_chk@plt+0x7bc>
   11b4c:	mov	r0, r4
   11b50:	pop	{r4, pc}
   11b54:	bl	11ac8 <__printf_chk@plt+0x730>
   11b58:	mov	r0, r4
   11b5c:	pop	{r4, pc}
   11b60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b64:	mov	r8, r0
   11b68:	ldr	r9, [pc, #1524]	; 12164 <__printf_chk@plt+0xdcc>
   11b6c:	ldr	r7, [r1, #4]
   11b70:	sub	sp, sp, #36	; 0x24
   11b74:	ldr	r0, [r9]
   11b78:	mov	r2, #1
   11b7c:	mov	r3, #0
   11b80:	cmp	r7, #0
   11b84:	str	r8, [sp]
   11b88:	ldr	r5, [r1]
   11b8c:	str	r0, [sp, #28]
   11b90:	str	r3, [sp, #12]
   11b94:	str	r2, [sp, #16]
   11b98:	str	r2, [sp, #20]
   11b9c:	str	r2, [sp, #24]
   11ba0:	ble	11c90 <__printf_chk@plt+0x8f8>
   11ba4:	add	r7, r5, r7
   11ba8:	ldr	fp, [pc, #1464]	; 12168 <__printf_chk@plt+0xdd0>
   11bac:	ldr	sl, [pc, #1464]	; 1216c <__printf_chk@plt+0xdd4>
   11bb0:	sub	r7, r7, #1
   11bb4:	sub	r5, r5, #1
   11bb8:	ldrb	r4, [r5, #1]!
   11bbc:	eor	r6, r4, #128	; 0x80
   11bc0:	b	11bd8 <__printf_chk@plt+0x840>
   11bc4:	cmp	r6, #63	; 0x3f
   11bc8:	bls	11c20 <__printf_chk@plt+0x888>
   11bcc:	mov	r0, sp
   11bd0:	bl	11ac8 <__printf_chk@plt+0x730>
   11bd4:	ldr	r3, [sp, #12]
   11bd8:	add	r2, sp, #32
   11bdc:	add	r2, r2, r3
   11be0:	cmp	r3, #0
   11be4:	strb	r4, [r2, #-28]	; 0xffffffe4
   11be8:	bne	11bc4 <__printf_chk@plt+0x82c>
   11bec:	tst	r4, #128	; 0x80
   11bf0:	beq	11dd4 <__printf_chk@plt+0xa3c>
   11bf4:	cmp	r4, #191	; 0xbf
   11bf8:	bls	11f6c <__printf_chk@plt+0xbd4>
   11bfc:	cmp	r4, #223	; 0xdf
   11c00:	bhi	11f78 <__printf_chk@plt+0xbe0>
   11c04:	mov	r2, #1
   11c08:	mov	r3, #2
   11c0c:	strd	r2, [sp, #12]
   11c10:	cmp	r5, r7
   11c14:	beq	11c90 <__printf_chk@plt+0x8f8>
   11c18:	ldr	r3, [sp, #12]
   11c1c:	b	11bb8 <__printf_chk@plt+0x820>
   11c20:	sub	r3, r3, #1
   11c24:	cmp	r3, #4
   11c28:	ldrls	pc, [pc, r3, lsl #2]
   11c2c:	b	11c10 <__printf_chk@plt+0x878>
   11c30:	andeq	r1, r1, r8, lsl #27
   11c34:	andeq	r1, r1, r0, lsr #26
   11c38:	andeq	r1, r1, r4, asr #24
   11c3c:	andeq	r1, r1, r8, lsl #26
   11c40:	andeq	r1, r1, r8, ror ip
   11c44:	ldr	r3, [sp, #16]
   11c48:	cmp	r3, #4
   11c4c:	movne	r3, #4
   11c50:	strne	r3, [sp, #12]
   11c54:	bne	11c10 <__printf_chk@plt+0x878>
   11c58:	ldrb	r3, [sp, #4]
   11c5c:	cmp	r3, #240	; 0xf0
   11c60:	bls	12050 <__printf_chk@plt+0xcb8>
   11c64:	cmp	r3, #243	; 0xf3
   11c68:	ldrbls	r1, [sp, #5]
   11c6c:	bls	1205c <__printf_chk@plt+0xcc4>
   11c70:	cmp	r3, #244	; 0xf4
   11c74:	beq	12128 <__printf_chk@plt+0xd90>
   11c78:	mov	r0, sp
   11c7c:	bl	11a58 <__printf_chk@plt+0x6c0>
   11c80:	mov	r3, #0
   11c84:	cmp	r5, r7
   11c88:	str	r3, [sp, #12]
   11c8c:	bne	11c18 <__printf_chk@plt+0x880>
   11c90:	ldr	r7, [pc, #1232]	; 12168 <__printf_chk@plt+0xdd0>
   11c94:	ldr	r6, [pc, #1232]	; 1216c <__printf_chk@plt+0xdd4>
   11c98:	mov	r0, r8
   11c9c:	bl	111c4 <getc@plt>
   11ca0:	cmn	r0, #1
   11ca4:	mov	r5, r0
   11ca8:	beq	11f3c <__printf_chk@plt+0xba4>
   11cac:	uxtb	r4, r0
   11cb0:	eor	sl, r4, #128	; 0x80
   11cb4:	b	11cc8 <__printf_chk@plt+0x930>
   11cb8:	cmp	sl, #63	; 0x3f
   11cbc:	bls	11de4 <__printf_chk@plt+0xa4c>
   11cc0:	mov	r0, sp
   11cc4:	bl	11ac8 <__printf_chk@plt+0x730>
   11cc8:	ldr	r3, [sp, #12]
   11ccc:	add	r2, sp, #32
   11cd0:	add	r2, r2, r3
   11cd4:	cmp	r3, #0
   11cd8:	strb	r4, [r2, #-28]	; 0xffffffe4
   11cdc:	bne	11cb8 <__printf_chk@plt+0x920>
   11ce0:	tst	r5, #128	; 0x80
   11ce4:	beq	11f1c <__printf_chk@plt+0xb84>
   11ce8:	cmp	r4, #191	; 0xbf
   11cec:	bls	11f60 <__printf_chk@plt+0xbc8>
   11cf0:	cmp	r4, #223	; 0xdf
   11cf4:	bhi	11f98 <__printf_chk@plt+0xc00>
   11cf8:	mov	r2, #1
   11cfc:	mov	r3, #2
   11d00:	strd	r2, [sp, #12]
   11d04:	b	11c98 <__printf_chk@plt+0x900>
   11d08:	ldr	r3, [sp, #16]
   11d0c:	cmp	r3, #5
   11d10:	movne	r3, #5
   11d14:	strne	r3, [sp, #12]
   11d18:	bne	11c10 <__printf_chk@plt+0x878>
   11d1c:	b	11c78 <__printf_chk@plt+0x8e0>
   11d20:	ldr	r3, [sp, #16]
   11d24:	cmp	r3, #3
   11d28:	movne	r3, #3
   11d2c:	strne	r3, [sp, #12]
   11d30:	bne	11c10 <__printf_chk@plt+0x878>
   11d34:	ldrb	r3, [sp, #4]
   11d38:	ldrb	r1, [sp, #5]
   11d3c:	cmp	r3, #224	; 0xe0
   11d40:	bhi	11d4c <__printf_chk@plt+0x9b4>
   11d44:	cmp	r1, #159	; 0x9f
   11d48:	bls	11c78 <__printf_chk@plt+0x8e0>
   11d4c:	ldrb	r0, [sp, #6]
   11d50:	lsl	r2, r3, #12
   11d54:	eor	r1, r1, #128	; 0x80
   11d58:	and	r2, r2, #126976	; 0x1f000
   11d5c:	orr	r2, r2, r1, lsl #6
   11d60:	eor	r0, r0, #128	; 0x80
   11d64:	orr	r2, r2, r0
   11d68:	cmp	r2, #127	; 0x7f
   11d6c:	ble	11dc4 <__printf_chk@plt+0xa2c>
   11d70:	cmp	r2, #173	; 0xad
   11d74:	beq	1210c <__printf_chk@plt+0xd74>
   11d78:	mov	r1, fp
   11d7c:	mov	r0, #1
   11d80:	bl	11398 <__printf_chk@plt>
   11d84:	b	11c80 <__printf_chk@plt+0x8e8>
   11d88:	ldr	r3, [sp, #16]
   11d8c:	cmp	r3, #2
   11d90:	movne	r3, #2
   11d94:	strne	r3, [sp, #12]
   11d98:	bne	11c10 <__printf_chk@plt+0x878>
   11d9c:	ldrb	r3, [sp, #4]
   11da0:	cmp	r3, #193	; 0xc1
   11da4:	bls	11c78 <__printf_chk@plt+0x8e0>
   11da8:	ldrb	r1, [sp, #5]
   11dac:	lsl	r2, r3, #6
   11db0:	and	r2, r2, #1984	; 0x7c0
   11db4:	eor	r3, r1, #128	; 0x80
   11db8:	orr	r2, r2, r3
   11dbc:	cmp	r2, #127	; 0x7f
   11dc0:	bgt	11d70 <__printf_chk@plt+0x9d8>
   11dc4:	mov	r0, r2
   11dc8:	ldr	r1, [sl]
   11dcc:	bl	111b8 <putc@plt>
   11dd0:	b	11c80 <__printf_chk@plt+0x8e8>
   11dd4:	mov	r0, r4
   11dd8:	ldr	r1, [sl]
   11ddc:	bl	111b8 <putc@plt>
   11de0:	b	11c10 <__printf_chk@plt+0x878>
   11de4:	sub	r3, r3, #1
   11de8:	cmp	r3, #4
   11dec:	ldrls	pc, [pc, r3, lsl #2]
   11df0:	b	11c98 <__printf_chk@plt+0x900>
   11df4:	ldrdeq	r1, [r1], -r0
   11df8:	andeq	r1, r1, r8, ror #28
   11dfc:	andeq	r1, r1, r8, lsl #28
   11e00:	andeq	r1, r1, r0, asr lr
   11e04:	andeq	r1, r1, ip, lsr lr
   11e08:	ldr	r3, [sp, #16]
   11e0c:	cmp	r3, #4
   11e10:	movne	r3, #4
   11e14:	strne	r3, [sp, #12]
   11e18:	bne	11c98 <__printf_chk@plt+0x900>
   11e1c:	ldrb	r3, [sp, #4]
   11e20:	cmp	r3, #240	; 0xf0
   11e24:	bls	12090 <__printf_chk@plt+0xcf8>
   11e28:	cmp	r3, #243	; 0xf3
   11e2c:	ldrbls	r1, [sp, #5]
   11e30:	bls	1209c <__printf_chk@plt+0xd04>
   11e34:	cmp	r3, #244	; 0xf4
   11e38:	beq	12138 <__printf_chk@plt+0xda0>
   11e3c:	mov	r0, sp
   11e40:	bl	11a58 <__printf_chk@plt+0x6c0>
   11e44:	mov	r3, #0
   11e48:	str	r3, [sp, #12]
   11e4c:	b	11c98 <__printf_chk@plt+0x900>
   11e50:	ldr	r3, [sp, #16]
   11e54:	cmp	r3, #5
   11e58:	movne	r3, #5
   11e5c:	strne	r3, [sp, #12]
   11e60:	bne	11c98 <__printf_chk@plt+0x900>
   11e64:	b	11e3c <__printf_chk@plt+0xaa4>
   11e68:	ldr	r3, [sp, #16]
   11e6c:	cmp	r3, #3
   11e70:	movne	r3, #3
   11e74:	strne	r3, [sp, #12]
   11e78:	bne	11c98 <__printf_chk@plt+0x900>
   11e7c:	ldrb	r3, [sp, #4]
   11e80:	ldrb	r1, [sp, #5]
   11e84:	cmp	r3, #224	; 0xe0
   11e88:	bhi	11e94 <__printf_chk@plt+0xafc>
   11e8c:	cmp	r1, #159	; 0x9f
   11e90:	bls	11e3c <__printf_chk@plt+0xaa4>
   11e94:	ldrb	r0, [sp, #6]
   11e98:	lsl	r2, r3, #12
   11e9c:	eor	r1, r1, #128	; 0x80
   11ea0:	and	r2, r2, #126976	; 0x1f000
   11ea4:	orr	r2, r2, r1, lsl #6
   11ea8:	eor	r0, r0, #128	; 0x80
   11eac:	orr	r2, r2, r0
   11eb0:	cmp	r2, #127	; 0x7f
   11eb4:	ble	11f0c <__printf_chk@plt+0xb74>
   11eb8:	cmp	r2, #173	; 0xad
   11ebc:	beq	120f0 <__printf_chk@plt+0xd58>
   11ec0:	mov	r1, r7
   11ec4:	mov	r0, #1
   11ec8:	bl	11398 <__printf_chk@plt>
   11ecc:	b	11e44 <__printf_chk@plt+0xaac>
   11ed0:	ldr	r3, [sp, #16]
   11ed4:	cmp	r3, #2
   11ed8:	movne	r3, #2
   11edc:	strne	r3, [sp, #12]
   11ee0:	bne	11c98 <__printf_chk@plt+0x900>
   11ee4:	ldrb	r3, [sp, #4]
   11ee8:	cmp	r3, #193	; 0xc1
   11eec:	bls	11e3c <__printf_chk@plt+0xaa4>
   11ef0:	ldrb	r1, [sp, #5]
   11ef4:	lsl	r2, r3, #6
   11ef8:	and	r2, r2, #1984	; 0x7c0
   11efc:	eor	r3, r1, #128	; 0x80
   11f00:	orr	r2, r2, r3
   11f04:	cmp	r2, #127	; 0x7f
   11f08:	bgt	11eb8 <__printf_chk@plt+0xb20>
   11f0c:	mov	r0, r2
   11f10:	ldr	r1, [r6]
   11f14:	bl	111b8 <putc@plt>
   11f18:	b	11e44 <__printf_chk@plt+0xaac>
   11f1c:	beq	11fb8 <__printf_chk@plt+0xc20>
   11f20:	cmp	r4, #173	; 0xad
   11f24:	beq	11fe8 <__printf_chk@plt+0xc50>
   11f28:	mov	r2, r4
   11f2c:	mov	r1, r7
   11f30:	mov	r0, #1
   11f34:	bl	11398 <__printf_chk@plt>
   11f38:	b	11c98 <__printf_chk@plt+0x900>
   11f3c:	ldr	r3, [sp, #12]
   11f40:	cmp	r3, #0
   11f44:	bne	12004 <__printf_chk@plt+0xc6c>
   11f48:	ldr	r2, [sp, #28]
   11f4c:	ldr	r3, [r9]
   11f50:	cmp	r2, r3
   11f54:	bne	12148 <__printf_chk@plt+0xdb0>
   11f58:	add	sp, sp, #36	; 0x24
   11f5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f60:	mov	r0, sp
   11f64:	bl	11a58 <__printf_chk@plt+0x6c0>
   11f68:	b	11c98 <__printf_chk@plt+0x900>
   11f6c:	mov	r0, sp
   11f70:	bl	11a58 <__printf_chk@plt+0x6c0>
   11f74:	b	11c10 <__printf_chk@plt+0x878>
   11f78:	cmp	r4, #239	; 0xef
   11f7c:	bls	11fd8 <__printf_chk@plt+0xc40>
   11f80:	cmp	r4, #247	; 0xf7
   11f84:	bhi	12030 <__printf_chk@plt+0xc98>
   11f88:	mov	r2, #1
   11f8c:	mov	r3, #4
   11f90:	strd	r2, [sp, #12]
   11f94:	b	11c10 <__printf_chk@plt+0x878>
   11f98:	cmp	r4, #239	; 0xef
   11f9c:	bls	11fc8 <__printf_chk@plt+0xc30>
   11fa0:	cmp	r4, #247	; 0xf7
   11fa4:	bhi	12010 <__printf_chk@plt+0xc78>
   11fa8:	mov	r2, #1
   11fac:	mov	r3, #4
   11fb0:	strd	r2, [sp, #12]
   11fb4:	b	11c98 <__printf_chk@plt+0x900>
   11fb8:	mov	r0, r4
   11fbc:	ldr	r1, [r6]
   11fc0:	bl	111b8 <putc@plt>
   11fc4:	b	11c98 <__printf_chk@plt+0x900>
   11fc8:	mov	r2, #1
   11fcc:	mov	r3, #3
   11fd0:	strd	r2, [sp, #12]
   11fd4:	b	11c98 <__printf_chk@plt+0x900>
   11fd8:	mov	r2, #1
   11fdc:	mov	r3, #3
   11fe0:	strd	r2, [sp, #12]
   11fe4:	b	11c10 <__printf_chk@plt+0x878>
   11fe8:	ldr	r1, [r6]
   11fec:	mov	r0, #92	; 0x5c
   11ff0:	bl	111b8 <putc@plt>
   11ff4:	ldr	r1, [r6]
   11ff8:	mov	r0, #37	; 0x25
   11ffc:	bl	111b8 <putc@plt>
   12000:	b	11c98 <__printf_chk@plt+0x900>
   12004:	mov	r0, sp
   12008:	bl	11ac8 <__printf_chk@plt+0x730>
   1200c:	b	11f48 <__printf_chk@plt+0xbb0>
   12010:	cmp	r4, #251	; 0xfb
   12014:	bls	120d0 <__printf_chk@plt+0xd38>
   12018:	cmp	r4, #253	; 0xfd
   1201c:	bhi	11f60 <__printf_chk@plt+0xbc8>
   12020:	mov	r2, #1
   12024:	mov	r3, #6
   12028:	strd	r2, [sp, #12]
   1202c:	b	11c98 <__printf_chk@plt+0x900>
   12030:	cmp	r4, #251	; 0xfb
   12034:	bls	120e0 <__printf_chk@plt+0xd48>
   12038:	cmp	r4, #253	; 0xfd
   1203c:	bhi	11f6c <__printf_chk@plt+0xbd4>
   12040:	mov	r2, #1
   12044:	mov	r3, #6
   12048:	strd	r2, [sp, #12]
   1204c:	b	11c10 <__printf_chk@plt+0x878>
   12050:	ldrb	r1, [sp, #5]
   12054:	cmp	r1, #143	; 0x8f
   12058:	bls	11c78 <__printf_chk@plt+0x8e0>
   1205c:	ldrb	ip, [sp, #6]
   12060:	ldrb	r0, [sp, #7]
   12064:	lsl	r2, r3, #18
   12068:	eor	r3, ip, #128	; 0x80
   1206c:	and	r2, r2, #1835008	; 0x1c0000
   12070:	orr	r2, r2, r3, lsl #6
   12074:	eor	r1, r1, #128	; 0x80
   12078:	eor	r3, r0, #128	; 0x80
   1207c:	orr	r2, r2, r3
   12080:	orr	r2, r2, r1, lsl #12
   12084:	cmp	r2, #127	; 0x7f
   12088:	bgt	11d70 <__printf_chk@plt+0x9d8>
   1208c:	b	11dc4 <__printf_chk@plt+0xa2c>
   12090:	ldrb	r1, [sp, #5]
   12094:	cmp	r1, #143	; 0x8f
   12098:	bls	11e3c <__printf_chk@plt+0xaa4>
   1209c:	ldrb	ip, [sp, #6]
   120a0:	ldrb	r0, [sp, #7]
   120a4:	lsl	r2, r3, #18
   120a8:	eor	r3, ip, #128	; 0x80
   120ac:	and	r2, r2, #1835008	; 0x1c0000
   120b0:	orr	r2, r2, r3, lsl #6
   120b4:	eor	r1, r1, #128	; 0x80
   120b8:	eor	r3, r0, #128	; 0x80
   120bc:	orr	r2, r2, r3
   120c0:	orr	r2, r2, r1, lsl #12
   120c4:	cmp	r2, #127	; 0x7f
   120c8:	bgt	11eb8 <__printf_chk@plt+0xb20>
   120cc:	b	11f0c <__printf_chk@plt+0xb74>
   120d0:	mov	r2, #1
   120d4:	mov	r3, #5
   120d8:	strd	r2, [sp, #12]
   120dc:	b	11c98 <__printf_chk@plt+0x900>
   120e0:	mov	r2, #1
   120e4:	mov	r3, #5
   120e8:	strd	r2, [sp, #12]
   120ec:	b	11c10 <__printf_chk@plt+0x878>
   120f0:	ldr	r1, [r6]
   120f4:	mov	r0, #92	; 0x5c
   120f8:	bl	111b8 <putc@plt>
   120fc:	ldr	r1, [r6]
   12100:	mov	r0, #37	; 0x25
   12104:	bl	111b8 <putc@plt>
   12108:	b	11e44 <__printf_chk@plt+0xaac>
   1210c:	ldr	r1, [sl]
   12110:	mov	r0, #92	; 0x5c
   12114:	bl	111b8 <putc@plt>
   12118:	ldr	r1, [sl]
   1211c:	mov	r0, #37	; 0x25
   12120:	bl	111b8 <putc@plt>
   12124:	b	11c80 <__printf_chk@plt+0x8e8>
   12128:	ldrb	r1, [sp, #5]
   1212c:	cmp	r1, #143	; 0x8f
   12130:	bls	1205c <__printf_chk@plt+0xcc4>
   12134:	b	11c78 <__printf_chk@plt+0x8e0>
   12138:	ldrb	r1, [sp, #5]
   1213c:	cmp	r1, #143	; 0x8f
   12140:	bls	1209c <__printf_chk@plt+0xd04>
   12144:	b	11e3c <__printf_chk@plt+0xaa4>
   12148:	bl	11194 <__stack_chk_fail@plt>
   1214c:	ldr	r3, [sp, #12]
   12150:	cmp	r3, #0
   12154:	beq	12160 <__printf_chk@plt+0xdc8>
   12158:	mov	r0, sp
   1215c:	bl	11ac8 <__printf_chk@plt+0x730>
   12160:	bl	111a0 <__cxa_end_cleanup@plt>
   12164:			; <UNDEFINED> instruction: 0x00029db0
   12168:			; <UNDEFINED> instruction: 0x000183b8
   1216c:	andeq	sl, r2, ip, lsr #32
   12170:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12174:	mov	r5, r0
   12178:	ldr	r4, [r1, #4]
   1217c:	ldr	r9, [r1]
   12180:	cmp	r4, #0
   12184:	ble	121ec <__printf_chk@plt+0xe54>
   12188:	add	r4, r9, r4
   1218c:	ldr	r7, [pc, #232]	; 1227c <__printf_chk@plt+0xee4>
   12190:	ldr	r6, [pc, #232]	; 12280 <__printf_chk@plt+0xee8>
   12194:	ldr	r8, [pc, #232]	; 12284 <__printf_chk@plt+0xeec>
   12198:	sub	r4, r4, #1
   1219c:	sub	r9, r9, #1
   121a0:	b	121b8 <__printf_chk@plt+0xe20>
   121a4:	cmp	r3, #173	; 0xad
   121a8:	beq	12234 <__printf_chk@plt+0xe9c>
   121ac:	bl	11398 <__printf_chk@plt>
   121b0:	cmp	r4, r9
   121b4:	beq	121ec <__printf_chk@plt+0xe54>
   121b8:	ldrb	r3, [r9, #1]!
   121bc:	mov	r1, r6
   121c0:	mov	r0, #1
   121c4:	add	r3, r7, r3
   121c8:	ldrb	r3, [r3, #576]	; 0x240
   121cc:	cmp	r3, #127	; 0x7f
   121d0:	mov	r2, r3
   121d4:	bgt	121a4 <__printf_chk@plt+0xe0c>
   121d8:	mov	r0, r3
   121dc:	ldr	r1, [r8]
   121e0:	bl	111b8 <putc@plt>
   121e4:	cmp	r4, r9
   121e8:	bne	121b8 <__printf_chk@plt+0xe20>
   121ec:	ldr	r4, [pc, #136]	; 1227c <__printf_chk@plt+0xee4>
   121f0:	ldr	r6, [pc, #136]	; 12280 <__printf_chk@plt+0xee8>
   121f4:	ldr	r7, [pc, #136]	; 12284 <__printf_chk@plt+0xeec>
   121f8:	mov	r0, r5
   121fc:	bl	111c4 <getc@plt>
   12200:	cmn	r0, #1
   12204:	add	r3, r4, r0
   12208:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1220c:	ldrb	r3, [r3, #576]	; 0x240
   12210:	mov	r1, r6
   12214:	mov	r0, #1
   12218:	cmp	r3, #127	; 0x7f
   1221c:	mov	r2, r3
   12220:	ble	12250 <__printf_chk@plt+0xeb8>
   12224:	cmp	r3, #173	; 0xad
   12228:	beq	12260 <__printf_chk@plt+0xec8>
   1222c:	bl	11398 <__printf_chk@plt>
   12230:	b	121f8 <__printf_chk@plt+0xe60>
   12234:	ldr	r1, [r8]
   12238:	mov	r0, #92	; 0x5c
   1223c:	bl	111b8 <putc@plt>
   12240:	ldr	r1, [r8]
   12244:	mov	r0, #37	; 0x25
   12248:	bl	111b8 <putc@plt>
   1224c:	b	121b0 <__printf_chk@plt+0xe18>
   12250:	mov	r0, r3
   12254:	ldr	r1, [r7]
   12258:	bl	111b8 <putc@plt>
   1225c:	b	121f8 <__printf_chk@plt+0xe60>
   12260:	ldr	r1, [r7]
   12264:	mov	r0, #92	; 0x5c
   12268:	bl	111b8 <putc@plt>
   1226c:	ldr	r1, [r7]
   12270:	mov	r0, #37	; 0x25
   12274:	bl	111b8 <putc@plt>
   12278:	b	121f8 <__printf_chk@plt+0xe60>
   1227c:	ldrdeq	r7, [r1], -ip
   12280:			; <UNDEFINED> instruction: 0x000183b8
   12284:	andeq	sl, r2, ip, lsr #32
   12288:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1228c:	sub	sp, sp, #40960	; 0xa000
   12290:	ldr	r3, [pc, #1004]	; 12684 <__printf_chk@plt+0x12ec>
   12294:	sub	sp, sp, #60	; 0x3c
   12298:	mov	r6, r2
   1229c:	mov	r5, r1
   122a0:	mov	r1, r2
   122a4:	add	r2, sp, #40960	; 0xa000
   122a8:	ldr	r3, [r3]
   122ac:	add	r2, r2, #52	; 0x34
   122b0:	str	r0, [sp, #12]
   122b4:	ldr	r0, [pc, #972]	; 12688 <__printf_chk@plt+0x12f0>
   122b8:	str	r3, [r2]
   122bc:	bl	112c0 <iconv_open@plt>
   122c0:	cmn	r0, #1
   122c4:	mov	r4, r0
   122c8:	beq	12634 <__printf_chk@plt+0x129c>
   122cc:	ldm	r5, {r3, r6}
   122d0:	ldr	r9, [pc, #948]	; 1268c <__printf_chk@plt+0x12f4>
   122d4:	ldr	r7, [pc, #948]	; 12690 <__printf_chk@plt+0x12f8>
   122d8:	mov	r2, #32768	; 0x8000
   122dc:	add	r5, sp, #52	; 0x34
   122e0:	strd	r2, [sp, #24]
   122e4:	str	r6, [sp, #32]
   122e8:	str	r5, [sp, #20]
   122ec:	cmp	r6, #0
   122f0:	beq	12380 <__printf_chk@plt+0xfe8>
   122f4:	add	r3, sp, #24
   122f8:	str	r3, [sp]
   122fc:	add	r2, sp, #32
   12300:	add	r3, sp, #20
   12304:	add	r1, sp, #28
   12308:	mov	r0, r4
   1230c:	bl	112e4 <iconv@plt>
   12310:	cmn	r0, #1
   12314:	ldrne	r6, [sp, #32]
   12318:	bne	122ec <__printf_chk@plt+0xf54>
   1231c:	bl	112f0 <__errno_location@plt>
   12320:	ldr	r3, [r0]
   12324:	cmp	r3, #84	; 0x54
   12328:	beq	12360 <__printf_chk@plt+0xfc8>
   1232c:	cmp	r3, #7
   12330:	beq	12590 <__printf_chk@plt+0x11f8>
   12334:	cmp	r3, #22
   12338:	ldr	r6, [sp, #32]
   1233c:	bne	122ec <__printf_chk@plt+0xf54>
   12340:	add	r9, sp, #32768	; 0x8000
   12344:	add	r9, r9, #52	; 0x34
   12348:	mov	r0, r9
   1234c:	mov	r3, #8192	; 0x2000
   12350:	mov	r2, r6
   12354:	ldr	r1, [sp, #28]
   12358:	bl	11068 <__memcpy_chk@plt>
   1235c:	b	12388 <__printf_chk@plt+0xff0>
   12360:	ldr	r6, [sp, #32]
   12364:	ldr	r3, [sp, #28]
   12368:	sub	r6, r6, #1
   1236c:	add	r3, r3, #1
   12370:	cmp	r6, #0
   12374:	str	r3, [sp, #28]
   12378:	str	r6, [sp, #32]
   1237c:	bne	122f4 <__printf_chk@plt+0xf5c>
   12380:	add	r9, sp, #32768	; 0x8000
   12384:	add	r9, r9, #52	; 0x34
   12388:	ldr	sl, [pc, #764]	; 1268c <__printf_chk@plt+0x12f4>
   1238c:	ldr	r8, [pc, #764]	; 12690 <__printf_chk@plt+0x12f8>
   12390:	add	r0, r9, r6
   12394:	rsb	r2, r6, #8192	; 0x2000
   12398:	ldr	r3, [sp, #12]
   1239c:	mov	r1, #1
   123a0:	bl	11170 <fread@plt>
   123a4:	cmp	r0, #0
   123a8:	beq	124e8 <__printf_chk@plt+0x1150>
   123ac:	ldr	r6, [sp, #32]
   123b0:	str	r9, [sp, #28]
   123b4:	add	r6, r0, r6
   123b8:	str	r6, [sp, #32]
   123bc:	cmp	r6, #0
   123c0:	beq	12390 <__printf_chk@plt+0xff8>
   123c4:	add	r3, sp, #24
   123c8:	str	r3, [sp]
   123cc:	add	r2, sp, #32
   123d0:	add	r3, sp, #20
   123d4:	add	r1, sp, #28
   123d8:	mov	r0, r4
   123dc:	bl	112e4 <iconv@plt>
   123e0:	cmn	r0, #1
   123e4:	ldrne	r6, [sp, #32]
   123e8:	bne	123bc <__printf_chk@plt+0x1024>
   123ec:	bl	112f0 <__errno_location@plt>
   123f0:	ldr	r3, [r0]
   123f4:	cmp	r3, #84	; 0x54
   123f8:	beq	12428 <__printf_chk@plt+0x1090>
   123fc:	cmp	r3, #7
   12400:	beq	12444 <__printf_chk@plt+0x10ac>
   12404:	cmp	r3, #22
   12408:	ldr	r6, [sp, #32]
   1240c:	bne	123bc <__printf_chk@plt+0x1024>
   12410:	mov	r3, #8192	; 0x2000
   12414:	mov	r2, r6
   12418:	ldr	r1, [sp, #28]
   1241c:	mov	r0, r9
   12420:	bl	11284 <__memmove_chk@plt>
   12424:	b	12390 <__printf_chk@plt+0xff8>
   12428:	ldr	r3, [sp, #28]
   1242c:	ldr	r6, [sp, #32]
   12430:	add	r3, r3, #1
   12434:	sub	r6, r6, #1
   12438:	str	r3, [sp, #28]
   1243c:	str	r6, [sp, #32]
   12440:	b	123bc <__printf_chk@plt+0x1024>
   12444:	ldr	r6, [sp, #24]
   12448:	rsb	fp, r6, #32768	; 0x8000
   1244c:	add	r7, r5, fp
   12450:	cmp	r7, r5
   12454:	bls	124a4 <__printf_chk@plt+0x110c>
   12458:	mov	r6, r5
   1245c:	b	1247c <__printf_chk@plt+0x10e4>
   12460:	cmp	r2, #173	; 0xad
   12464:	beq	124cc <__printf_chk@plt+0x1134>
   12468:	mov	r1, sl
   1246c:	mov	r0, #1
   12470:	bl	11398 <__printf_chk@plt>
   12474:	cmp	r7, r6
   12478:	bls	1249c <__printf_chk@plt+0x1104>
   1247c:	ldr	r2, [r6], #4
   12480:	cmp	r2, #127	; 0x7f
   12484:	bgt	12460 <__printf_chk@plt+0x10c8>
   12488:	mov	r0, r2
   1248c:	ldr	r1, [r8]
   12490:	bl	111b8 <putc@plt>
   12494:	cmp	r7, r6
   12498:	bhi	1247c <__printf_chk@plt+0x10e4>
   1249c:	ldr	r6, [sp, #24]
   124a0:	rsb	fp, r6, #32768	; 0x8000
   124a4:	mov	r2, r6
   124a8:	mov	r3, #32768	; 0x8000
   124ac:	add	r6, r5, r6
   124b0:	ldr	r1, [sp, #20]
   124b4:	mov	r0, r5
   124b8:	bl	11284 <__memmove_chk@plt>
   124bc:	str	r6, [sp, #20]
   124c0:	str	fp, [sp, #24]
   124c4:	ldr	r6, [sp, #32]
   124c8:	b	123bc <__printf_chk@plt+0x1024>
   124cc:	ldr	r1, [r8]
   124d0:	mov	r0, #92	; 0x5c
   124d4:	bl	111b8 <putc@plt>
   124d8:	ldr	r1, [r8]
   124dc:	mov	r0, #37	; 0x25
   124e0:	bl	111b8 <putc@plt>
   124e4:	b	12474 <__printf_chk@plt+0x10dc>
   124e8:	mov	r0, r4
   124ec:	bl	11224 <iconv_close@plt>
   124f0:	ldr	r4, [sp, #24]
   124f4:	rsb	r4, r4, #32768	; 0x8000
   124f8:	add	r4, r5, r4
   124fc:	cmp	r4, r5
   12500:	bls	1254c <__printf_chk@plt+0x11b4>
   12504:	ldr	r7, [pc, #384]	; 1268c <__printf_chk@plt+0x12f4>
   12508:	ldr	r6, [pc, #384]	; 12690 <__printf_chk@plt+0x12f8>
   1250c:	b	1252c <__printf_chk@plt+0x1194>
   12510:	cmp	r2, #173	; 0xad
   12514:	beq	12574 <__printf_chk@plt+0x11dc>
   12518:	mov	r1, r7
   1251c:	mov	r0, #1
   12520:	bl	11398 <__printf_chk@plt>
   12524:	cmp	r4, r5
   12528:	bls	1254c <__printf_chk@plt+0x11b4>
   1252c:	ldr	r2, [r5], #4
   12530:	cmp	r2, #127	; 0x7f
   12534:	bgt	12510 <__printf_chk@plt+0x1178>
   12538:	mov	r0, r2
   1253c:	ldr	r1, [r6]
   12540:	bl	111b8 <putc@plt>
   12544:	cmp	r4, r5
   12548:	bhi	1252c <__printf_chk@plt+0x1194>
   1254c:	add	r3, sp, #40960	; 0xa000
   12550:	add	r3, r3, #52	; 0x34
   12554:	ldr	r2, [r3]
   12558:	ldr	r3, [pc, #292]	; 12684 <__printf_chk@plt+0x12ec>
   1255c:	ldr	r3, [r3]
   12560:	cmp	r2, r3
   12564:	bne	12680 <__printf_chk@plt+0x12e8>
   12568:	add	sp, sp, #40960	; 0xa000
   1256c:	add	sp, sp, #60	; 0x3c
   12570:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12574:	ldr	r1, [r6]
   12578:	mov	r0, #92	; 0x5c
   1257c:	bl	111b8 <putc@plt>
   12580:	ldr	r1, [r6]
   12584:	mov	r0, #37	; 0x25
   12588:	bl	111b8 <putc@plt>
   1258c:	b	12524 <__printf_chk@plt+0x118c>
   12590:	ldr	r6, [sp, #24]
   12594:	rsb	sl, r6, #32768	; 0x8000
   12598:	add	r8, r5, sl
   1259c:	cmp	r8, r5
   125a0:	bls	125f0 <__printf_chk@plt+0x1258>
   125a4:	mov	r6, r5
   125a8:	b	125c8 <__printf_chk@plt+0x1230>
   125ac:	cmp	r2, #173	; 0xad
   125b0:	beq	12618 <__printf_chk@plt+0x1280>
   125b4:	mov	r1, r9
   125b8:	mov	r0, #1
   125bc:	bl	11398 <__printf_chk@plt>
   125c0:	cmp	r8, r6
   125c4:	bls	125e8 <__printf_chk@plt+0x1250>
   125c8:	ldr	r2, [r6], #4
   125cc:	cmp	r2, #127	; 0x7f
   125d0:	bgt	125ac <__printf_chk@plt+0x1214>
   125d4:	mov	r0, r2
   125d8:	ldr	r1, [r7]
   125dc:	bl	111b8 <putc@plt>
   125e0:	cmp	r8, r6
   125e4:	bhi	125c8 <__printf_chk@plt+0x1230>
   125e8:	ldr	r6, [sp, #24]
   125ec:	rsb	sl, r6, #32768	; 0x8000
   125f0:	mov	r2, r6
   125f4:	mov	r3, #32768	; 0x8000
   125f8:	add	r6, r5, r6
   125fc:	ldr	r1, [sp, #20]
   12600:	mov	r0, r5
   12604:	bl	11284 <__memmove_chk@plt>
   12608:	str	r6, [sp, #20]
   1260c:	str	sl, [sp, #24]
   12610:	ldr	r6, [sp, #32]
   12614:	b	122ec <__printf_chk@plt+0xf54>
   12618:	ldr	r1, [r7]
   1261c:	mov	r0, #92	; 0x5c
   12620:	bl	111b8 <putc@plt>
   12624:	ldr	r1, [r7]
   12628:	mov	r0, #37	; 0x25
   1262c:	bl	111b8 <putc@plt>
   12630:	b	125c0 <__printf_chk@plt+0x1228>
   12634:	bl	112f0 <__errno_location@plt>
   12638:	ldr	r3, [r0]
   1263c:	cmp	r3, #22
   12640:	beq	1265c <__printf_chk@plt+0x12c4>
   12644:	ldr	r3, [pc, #72]	; 12694 <__printf_chk@plt+0x12fc>
   12648:	ldr	r0, [pc, #72]	; 12698 <__printf_chk@plt+0x1300>
   1264c:	mov	r2, r3
   12650:	mov	r1, r3
   12654:	bl	13a28 <__printf_chk@plt+0x2690>
   12658:	b	122cc <__printf_chk@plt+0xf34>
   1265c:	mov	r1, r6
   12660:	add	r0, sp, #32
   12664:	bl	135b4 <__printf_chk@plt+0x221c>
   12668:	ldr	r3, [pc, #36]	; 12694 <__printf_chk@plt+0x12fc>
   1266c:	add	r1, sp, #32
   12670:	mov	r2, r3
   12674:	ldr	r0, [pc, #32]	; 1269c <__printf_chk@plt+0x1304>
   12678:	bl	139a0 <__printf_chk@plt+0x2608>
   1267c:	b	1254c <__printf_chk@plt+0x11b4>
   12680:	bl	11194 <__stack_chk_fail@plt>
   12684:			; <UNDEFINED> instruction: 0x00029db0
   12688:	andeq	r8, r1, ip, ror r4
   1268c:			; <UNDEFINED> instruction: 0x000183b8
   12690:	andeq	sl, r2, ip, lsr #32
   12694:	andeq	sl, r2, r0, lsr r2
   12698:			; <UNDEFINED> instruction: 0x000184b8
   1269c:	andeq	r8, r1, r8, lsl #9
   126a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   126a4:	sub	sp, sp, #20
   126a8:	ldr	r8, [pc, #364]	; 1281c <__printf_chk@plt+0x1484>
   126ac:	mov	r6, r0
   126b0:	mov	r9, r1
   126b4:	ldr	r3, [r8]
   126b8:	mov	r5, r2
   126bc:	add	r4, sp, #8
   126c0:	mov	r7, #0
   126c4:	str	r3, [sp, #12]
   126c8:	mov	r0, r6
   126cc:	bl	111c4 <getc@plt>
   126d0:	cmn	r0, #1
   126d4:	beq	126e8 <__printf_chk@plt+0x1350>
   126d8:	add	r7, r7, #1
   126dc:	cmp	r7, #4
   126e0:	strb	r0, [r4], #1
   126e4:	bne	126c8 <__printf_chk@plt+0x1330>
   126e8:	mov	r4, #4
   126ec:	cmp	r7, r4
   126f0:	ldr	sl, [pc, #296]	; 12820 <__printf_chk@plt+0x1488>
   126f4:	mov	r6, #0
   126f8:	blt	12714 <__printf_chk@plt+0x137c>
   126fc:	mov	r2, r4
   12700:	ldr	r1, [sl, #4]
   12704:	add	r0, sp, #8
   12708:	bl	1132c <memcmp@plt>
   1270c:	cmp	r0, #0
   12710:	beq	127a4 <__printf_chk@plt+0x140c>
   12714:	add	r6, r6, #1
   12718:	cmp	r6, #5
   1271c:	beq	12730 <__printf_chk@plt+0x1398>
   12720:	ldr	r4, [sl, #12]!
   12724:	cmp	r7, r4
   12728:	blt	12714 <__printf_chk@plt+0x137c>
   1272c:	b	126fc <__printf_chk@plt+0x1364>
   12730:	mov	r4, #0
   12734:	mov	r6, r4
   12738:	cmp	r7, r4
   1273c:	ble	12778 <__printf_chk@plt+0x13e0>
   12740:	add	r3, sp, #8
   12744:	add	r4, r3, r4
   12748:	add	r7, r3, r7
   1274c:	ldr	r3, [r5, #4]
   12750:	ldr	r2, [r5, #8]
   12754:	ldrb	r9, [r4], #1
   12758:	cmp	r3, r2
   1275c:	bge	12794 <__printf_chk@plt+0x13fc>
   12760:	ldr	r2, [r5]
   12764:	add	r1, r3, #1
   12768:	cmp	r7, r4
   1276c:	str	r1, [r5, #4]
   12770:	strb	r9, [r2, r3]
   12774:	bne	1274c <__printf_chk@plt+0x13b4>
   12778:	ldr	r2, [sp, #12]
   1277c:	ldr	r3, [r8]
   12780:	mov	r0, r6
   12784:	cmp	r2, r3
   12788:	bne	12818 <__printf_chk@plt+0x1480>
   1278c:	add	sp, sp, #20
   12790:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12794:	mov	r0, r5
   12798:	bl	15770 <__printf_chk@plt+0x43d8>
   1279c:	ldr	r3, [r5, #4]
   127a0:	b	12760 <__printf_chk@plt+0x13c8>
   127a4:	cmp	r4, #0
   127a8:	movle	r4, r0
   127ac:	ble	12804 <__printf_chk@plt+0x146c>
   127b0:	add	r3, sp, #8
   127b4:	add	r1, r3, r4
   127b8:	mov	sl, r3
   127bc:	b	127d8 <__printf_chk@plt+0x1440>
   127c0:	ldr	r2, [r9]
   127c4:	add	r0, r3, #1
   127c8:	cmp	sl, r1
   127cc:	str	r0, [r9, #4]
   127d0:	strb	fp, [r2, r3]
   127d4:	beq	12804 <__printf_chk@plt+0x146c>
   127d8:	ldr	r3, [r9, #4]
   127dc:	ldr	r2, [r9, #8]
   127e0:	ldrb	fp, [sl], #1
   127e4:	cmp	r3, r2
   127e8:	blt	127c0 <__printf_chk@plt+0x1428>
   127ec:	mov	r0, r9
   127f0:	str	r1, [sp, #4]
   127f4:	bl	15770 <__printf_chk@plt+0x43d8>
   127f8:	ldr	r3, [r9, #4]
   127fc:	ldr	r1, [sp, #4]
   12800:	b	127c0 <__printf_chk@plt+0x1428>
   12804:	add	r6, r6, r6, lsl #1
   12808:	ldr	r3, [pc, #20]	; 12824 <__printf_chk@plt+0x148c>
   1280c:	add	r6, r3, r6, lsl #2
   12810:	ldr	r6, [r6, #840]	; 0x348
   12814:	b	12738 <__printf_chk@plt+0x13a0>
   12818:	bl	11194 <__stack_chk_fail@plt>
   1281c:			; <UNDEFINED> instruction: 0x00029db0
   12820:	andeq	r8, r1, ip, lsl r3
   12824:	ldrdeq	r7, [r1], -ip
   12828:	ldr	r2, [r1, #4]
   1282c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12830:	cmp	r2, #0
   12834:	ble	129e0 <__printf_chk@plt+0x1648>
   12838:	ldr	ip, [r1]
   1283c:	mvn	r6, #0
   12840:	add	r2, ip, r2
   12844:	add	r4, r2, r6
   12848:	add	ip, ip, r6
   1284c:	mov	r9, #0
   12850:	ldrb	r2, [ip, #1]!
   12854:	cmp	r2, #10
   12858:	cmpne	r2, #13
   1285c:	sub	lr, r2, #10
   12860:	clz	lr, lr
   12864:	lsr	lr, lr, #5
   12868:	bne	12880 <__printf_chk@plt+0x14e8>
   1286c:	cmp	r6, #13
   12870:	movne	lr, #0
   12874:	andeq	lr, lr, #1
   12878:	cmp	lr, #0
   1287c:	addeq	r9, r9, #1
   12880:	cmp	r4, ip
   12884:	mov	r6, r2
   12888:	bne	12850 <__printf_chk@plt+0x14b8>
   1288c:	cmp	r9, #1
   12890:	bgt	129d8 <__printf_chk@plt+0x1640>
   12894:	ldr	r6, [pc, #332]	; 129e8 <__printf_chk@plt+0x1650>
   12898:	mov	r5, r0
   1289c:	mov	sl, r1
   128a0:	mov	r8, #1
   128a4:	mov	r7, #0
   128a8:	mov	r0, r5
   128ac:	bl	111c4 <getc@plt>
   128b0:	cmn	r0, #1
   128b4:	mov	r4, r0
   128b8:	beq	12934 <__printf_chk@plt+0x159c>
   128bc:	cmp	r0, #0
   128c0:	uxtb	fp, r0
   128c4:	bne	12900 <__printf_chk@plt+0x1568>
   128c8:	ldr	r1, [r6]
   128cc:	cmp	r1, #0
   128d0:	beq	128dc <__printf_chk@plt+0x1544>
   128d4:	cmp	r8, #0
   128d8:	bne	12954 <__printf_chk@plt+0x15bc>
   128dc:	ldr	r1, [sl, #4]
   128e0:	ldr	r0, [sl, #8]
   128e4:	cmp	r0, r1
   128e8:	ble	12944 <__printf_chk@plt+0x15ac>
   128ec:	ldr	r2, [sl]
   128f0:	add	r0, r1, #1
   128f4:	str	r0, [sl, #4]
   128f8:	strb	r7, [r2, r1]
   128fc:	b	128a8 <__printf_chk@plt+0x1510>
   12900:	ldr	r1, [sl, #4]
   12904:	ldr	r0, [sl, #8]
   12908:	cmp	r1, r0
   1290c:	bge	12944 <__printf_chk@plt+0x15ac>
   12910:	ldr	r0, [sl]
   12914:	add	ip, r1, #1
   12918:	cmp	r4, #13
   1291c:	cmpne	r4, #10
   12920:	str	ip, [sl, #4]
   12924:	strb	fp, [r0, r1]
   12928:	bne	128a8 <__printf_chk@plt+0x1510>
   1292c:	cmp	r4, #13
   12930:	beq	1296c <__printf_chk@plt+0x15d4>
   12934:	cmp	r9, #1
   12938:	beq	129b0 <__printf_chk@plt+0x1618>
   1293c:	mov	r9, #1
   12940:	b	128a8 <__printf_chk@plt+0x1510>
   12944:	mov	r0, sl
   12948:	bl	15770 <__printf_chk@plt+0x43d8>
   1294c:	ldr	r1, [sl, #4]
   12950:	b	12910 <__printf_chk@plt+0x1578>
   12954:	ldr	r3, [pc, #144]	; 129ec <__printf_chk@plt+0x1654>
   12958:	ldr	r1, [pc, #144]	; 129f0 <__printf_chk@plt+0x1658>
   1295c:	mov	r8, r4
   12960:	ldr	r0, [r3]
   12964:	bl	1625c <__printf_chk@plt+0x4ec4>
   12968:	b	128dc <__printf_chk@plt+0x1544>
   1296c:	mov	r0, r5
   12970:	bl	111c4 <getc@plt>
   12974:	cmp	r0, #10
   12978:	cmnne	r0, #1
   1297c:	mov	r4, r0
   12980:	bne	129bc <__printf_chk@plt+0x1624>
   12984:	ldr	r1, [sl, #4]
   12988:	ldr	r0, [sl, #8]
   1298c:	uxtb	r4, r4
   12990:	cmp	r1, r0
   12994:	bge	129c8 <__printf_chk@plt+0x1630>
   12998:	ldr	r2, [sl]
   1299c:	add	r0, r1, #1
   129a0:	cmp	r9, #1
   129a4:	str	r0, [sl, #4]
   129a8:	strb	r4, [r2, r1]
   129ac:	bne	1293c <__printf_chk@plt+0x15a4>
   129b0:	mov	r0, sl
   129b4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129b8:	b	15c14 <__printf_chk@plt+0x487c>
   129bc:	mov	r1, r5
   129c0:	bl	1117c <ungetc@plt>
   129c4:	b	12934 <__printf_chk@plt+0x159c>
   129c8:	mov	r0, sl
   129cc:	bl	15770 <__printf_chk@plt+0x43d8>
   129d0:	ldr	r1, [sl, #4]
   129d4:	b	12998 <__printf_chk@plt+0x1600>
   129d8:	mov	r0, #0
   129dc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129e0:	mov	r9, #0
   129e4:	b	12894 <__printf_chk@plt+0x14fc>
   129e8:	andeq	sl, r2, r4, lsr r0
   129ec:	andeq	sl, r2, r8, lsr #32
   129f0:	andeq	r8, r1, ip, asr #9
   129f4:	cmp	r0, #0
   129f8:	bxeq	lr
   129fc:	ldrb	r3, [r0]
   12a00:	cmp	r3, #0
   12a04:	beq	12a40 <__printf_chk@plt+0x16a8>
   12a08:	cmp	r3, #39	; 0x27
   12a0c:	cmpne	r3, #46	; 0x2e
   12a10:	bne	12a48 <__printf_chk@plt+0x16b0>
   12a14:	ldrb	r3, [r0, #1]
   12a18:	add	r0, r0, #1
   12a1c:	cmp	r3, #9
   12a20:	cmpne	r3, #32
   12a24:	bne	12a38 <__printf_chk@plt+0x16a0>
   12a28:	ldrb	r3, [r0, #1]!
   12a2c:	cmp	r3, #32
   12a30:	cmpne	r3, #9
   12a34:	beq	12a28 <__printf_chk@plt+0x1690>
   12a38:	cmp	r3, #92	; 0x5c
   12a3c:	beq	12a64 <__printf_chk@plt+0x16cc>
   12a40:	mov	r0, #0
   12a44:	bx	lr
   12a48:	cmp	r3, #92	; 0x5c
   12a4c:	bne	12a40 <__printf_chk@plt+0x16a8>
   12a50:	ldrb	r0, [r0, #1]
   12a54:	sub	r0, r0, #35	; 0x23
   12a58:	clz	r0, r0
   12a5c:	lsr	r0, r0, #5
   12a60:	bx	lr
   12a64:	ldrb	r0, [r0, #1]
   12a68:	sub	r0, r0, #34	; 0x22
   12a6c:	cmp	r0, #1
   12a70:	movhi	r0, #0
   12a74:	movls	r0, #1
   12a78:	bx	lr
   12a7c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a80:	mov	r5, r0
   12a84:	ldr	r8, [pc, #384]	; 12c0c <__printf_chk@plt+0x1874>
   12a88:	add	r7, r8, #100	; 0x64
   12a8c:	str	r8, [r1]
   12a90:	str	r7, [r2]
   12a94:	ldrb	r4, [r0]
   12a98:	cmp	r4, #9
   12a9c:	cmpne	r4, #32
   12aa0:	bne	12ab4 <__printf_chk@plt+0x171c>
   12aa4:	ldrb	r4, [r5, #1]!
   12aa8:	cmp	r4, #32
   12aac:	cmpne	r4, #9
   12ab0:	beq	12aa4 <__printf_chk@plt+0x170c>
   12ab4:	ldr	sl, [pc, #340]	; 12c10 <__printf_chk@plt+0x1878>
   12ab8:	ldr	fp, [pc, #340]	; 12c14 <__printf_chk@plt+0x187c>
   12abc:	sub	r6, sl, #99	; 0x63
   12ac0:	b	12ae4 <__printf_chk@plt+0x174c>
   12ac4:	bl	1138c <strchr@plt>
   12ac8:	cmp	r0, #0
   12acc:	bne	12af8 <__printf_chk@plt+0x1760>
   12ad0:	strb	r4, [r6], #1
   12ad4:	cmp	r6, sl
   12ad8:	add	r5, r5, #1
   12adc:	beq	12bfc <__printf_chk@plt+0x1864>
   12ae0:	ldrb	r4, [r5]
   12ae4:	cmp	r4, #0
   12ae8:	mov	r1, r4
   12aec:	mov	r0, fp
   12af0:	sub	r9, r6, r8
   12af4:	bne	12ac4 <__printf_chk@plt+0x172c>
   12af8:	ldr	r8, [pc, #280]	; 12c18 <__printf_chk@plt+0x1880>
   12afc:	mov	r3, #0
   12b00:	add	r9, r8, r9
   12b04:	strb	r3, [r9, #4]
   12b08:	ldrb	r3, [r5]
   12b0c:	sub	r2, r3, #58	; 0x3a
   12b10:	cmp	r3, #0
   12b14:	cmpne	r2, #1
   12b18:	bls	12b30 <__printf_chk@plt+0x1798>
   12b1c:	ldrb	r3, [r5, #1]!
   12b20:	sub	r2, r3, #58	; 0x3a
   12b24:	cmp	r3, #0
   12b28:	cmpne	r2, #1
   12b2c:	bhi	12b1c <__printf_chk@plt+0x1784>
   12b30:	mov	r3, #0
   12b34:	strb	r3, [r8, #104]	; 0x68
   12b38:	ldrb	r3, [r5]
   12b3c:	cmp	r3, #0
   12b40:	beq	12bf0 <__printf_chk@plt+0x1858>
   12b44:	cmp	r3, #59	; 0x3b
   12b48:	add	r6, r5, #1
   12b4c:	beq	12be8 <__printf_chk@plt+0x1850>
   12b50:	ldrb	r4, [r5, #1]
   12b54:	cmp	r4, #32
   12b58:	cmpne	r4, #9
   12b5c:	bne	12b70 <__printf_chk@plt+0x17d8>
   12b60:	ldrb	r4, [r6, #1]!
   12b64:	cmp	r4, #32
   12b68:	cmpne	r4, #9
   12b6c:	beq	12b60 <__printf_chk@plt+0x17c8>
   12b70:	ldr	sl, [pc, #164]	; 12c1c <__printf_chk@plt+0x1884>
   12b74:	ldr	fp, [pc, #164]	; 12c20 <__printf_chk@plt+0x1888>
   12b78:	sub	r5, sl, #99	; 0x63
   12b7c:	b	12ba0 <__printf_chk@plt+0x1808>
   12b80:	bl	1138c <strchr@plt>
   12b84:	cmp	r0, #0
   12b88:	bne	12bb4 <__printf_chk@plt+0x181c>
   12b8c:	strb	r4, [r5], #1
   12b90:	cmp	r5, sl
   12b94:	add	r6, r6, #1
   12b98:	beq	12c04 <__printf_chk@plt+0x186c>
   12b9c:	ldrb	r4, [r6]
   12ba0:	cmp	r4, #0
   12ba4:	mov	r1, r4
   12ba8:	mov	r0, fp
   12bac:	sub	r9, r5, r7
   12bb0:	bne	12b80 <__printf_chk@plt+0x17e8>
   12bb4:	add	r8, r8, r9
   12bb8:	mov	r3, #0
   12bbc:	strb	r3, [r8, #104]	; 0x68
   12bc0:	ldrb	r3, [r6]
   12bc4:	cmp	r3, #0
   12bc8:	bne	12bdc <__printf_chk@plt+0x1844>
   12bcc:	b	12bf0 <__printf_chk@plt+0x1858>
   12bd0:	ldrb	r3, [r6, #1]!
   12bd4:	cmp	r3, #0
   12bd8:	beq	12bf0 <__printf_chk@plt+0x1858>
   12bdc:	cmp	r3, #59	; 0x3b
   12be0:	bne	12bd0 <__printf_chk@plt+0x1838>
   12be4:	add	r6, r6, #1
   12be8:	mov	r0, r6
   12bec:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12bf0:	mov	r6, #0
   12bf4:	mov	r0, r6
   12bf8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12bfc:	mov	r9, #99	; 0x63
   12c00:	b	12af8 <__printf_chk@plt+0x1760>
   12c04:	mov	r9, #99	; 0x63
   12c08:	b	12bb4 <__printf_chk@plt+0x181c>
   12c0c:	andeq	sl, r2, r8, lsr r0
   12c10:	muleq	r2, fp, r0
   12c14:	andeq	r8, r1, r8, lsr #10
   12c18:	andeq	sl, r2, r4, lsr r0
   12c1c:	strdeq	sl, [r2], -pc	; <UNPREDICTABLE>
   12c20:	andeq	r8, r1, r0, lsr r5
   12c24:	ldr	r3, [pc, #292]	; 12d50 <__printf_chk@plt+0x19b8>
   12c28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c2c:	sub	sp, sp, #20
   12c30:	ldr	r3, [r3]
   12c34:	ldr	r7, [pc, #280]	; 12d54 <__printf_chk@plt+0x19bc>
   12c38:	str	r3, [sp, #12]
   12c3c:	bl	12828 <__printf_chk@plt+0x1490>
   12c40:	ldr	r4, [pc, #272]	; 12d58 <__printf_chk@plt+0x19c0>
   12c44:	mov	r9, #10
   12c48:	mov	r8, r0
   12c4c:	mov	fp, r0
   12c50:	mov	r0, r8
   12c54:	bl	129f4 <__printf_chk@plt+0x165c>
   12c58:	cmp	r0, #0
   12c5c:	beq	12d30 <__printf_chk@plt+0x1998>
   12c60:	mov	r1, #10
   12c64:	mov	r0, r8
   12c68:	bl	1138c <strchr@plt>
   12c6c:	subs	r5, r0, #0
   12c70:	beq	12d30 <__printf_chk@plt+0x1998>
   12c74:	mov	r6, #0
   12c78:	mov	r0, r8
   12c7c:	strb	r6, [r5]
   12c80:	mov	r1, r7
   12c84:	bl	111d0 <strstr@plt>
   12c88:	cmp	r0, #0
   12c8c:	beq	12d40 <__printf_chk@plt+0x19a8>
   12c90:	add	sl, r0, #3
   12c94:	mov	r0, sl
   12c98:	mov	r1, r7
   12c9c:	bl	111d0 <strstr@plt>
   12ca0:	strb	r9, [r5]
   12ca4:	subs	r8, r0, #0
   12ca8:	beq	12d1c <__printf_chk@plt+0x1984>
   12cac:	strb	r6, [r8]
   12cb0:	b	12cbc <__printf_chk@plt+0x1924>
   12cb4:	cmp	sl, #0
   12cb8:	beq	12d14 <__printf_chk@plt+0x197c>
   12cbc:	mov	r0, sl
   12cc0:	add	r2, sp, #8
   12cc4:	add	r1, sp, #4
   12cc8:	bl	12a7c <__printf_chk@plt+0x16e4>
   12ccc:	mov	r1, r4
   12cd0:	mov	sl, r0
   12cd4:	ldr	r0, [sp, #4]
   12cd8:	bl	11074 <strcasecmp@plt>
   12cdc:	cmp	r0, #0
   12ce0:	bne	12cb4 <__printf_chk@plt+0x191c>
   12ce4:	mov	r3, #45	; 0x2d
   12ce8:	mov	r0, fp
   12cec:	strb	r3, [r8]
   12cf0:	bl	1108c <free@plt>
   12cf4:	ldr	r0, [sp, #8]
   12cf8:	ldr	r3, [pc, #80]	; 12d50 <__printf_chk@plt+0x19b8>
   12cfc:	ldr	r2, [sp, #12]
   12d00:	ldr	r3, [r3]
   12d04:	cmp	r2, r3
   12d08:	bne	12d4c <__printf_chk@plt+0x19b4>
   12d0c:	add	sp, sp, #20
   12d10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d14:	mov	r3, #45	; 0x2d
   12d18:	strb	r3, [r8]
   12d1c:	add	r8, r5, #1
   12d20:	mov	r0, r8
   12d24:	bl	129f4 <__printf_chk@plt+0x165c>
   12d28:	cmp	r0, #0
   12d2c:	bne	12c60 <__printf_chk@plt+0x18c8>
   12d30:	mov	r0, fp
   12d34:	bl	1108c <free@plt>
   12d38:	mov	r0, #0
   12d3c:	b	12cf8 <__printf_chk@plt+0x1960>
   12d40:	strb	r9, [r5]
   12d44:	add	r8, r5, #1
   12d48:	b	12d20 <__printf_chk@plt+0x1988>
   12d4c:	bl	11194 <__stack_chk_fail@plt>
   12d50:			; <UNDEFINED> instruction: 0x00029db0
   12d54:	andeq	r8, r1, r4, lsr r5
   12d58:	andeq	r8, r1, r8, lsr r5
   12d5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12d60:	sub	sp, sp, #112	; 0x70
   12d64:	ldr	r6, [pc, #608]	; 12fcc <__printf_chk@plt+0x1c34>
   12d68:	mov	r4, r0
   12d6c:	ldr	r3, [r6]
   12d70:	str	r3, [sp, #108]	; 0x6c
   12d74:	bl	11200 <ftell@plt>
   12d78:	mov	r9, r0
   12d7c:	mov	r0, r4
   12d80:	bl	11164 <rewind@plt>
   12d84:	mov	r0, r4
   12d88:	bl	11188 <fileno@plt>
   12d8c:	mov	r2, sp
   12d90:	mov	r1, r0
   12d94:	mov	r0, #3
   12d98:	bl	11104 <__fxstat64@plt>
   12d9c:	cmp	r0, #0
   12da0:	bne	12f74 <__printf_chk@plt+0x1bdc>
   12da4:	ldr	r7, [pc, #548]	; 12fd0 <__printf_chk@plt+0x1c38>
   12da8:	ldr	r5, [sp, #48]	; 0x30
   12dac:	ldr	r3, [r7]
   12db0:	cmp	r3, #0
   12db4:	bne	12ebc <__printf_chk@plt+0x1b24>
   12db8:	cmp	r5, #0
   12dbc:	beq	12ea0 <__printf_chk@plt+0x1b08>
   12dc0:	mov	r1, #1
   12dc4:	mov	r0, r5
   12dc8:	bl	111f4 <calloc@plt>
   12dcc:	mov	r3, r4
   12dd0:	mov	r2, r5
   12dd4:	mov	r1, #1
   12dd8:	mov	r8, r0
   12ddc:	bl	11170 <fread@plt>
   12de0:	subs	sl, r0, #0
   12de4:	beq	12f48 <__printf_chk@plt+0x1bb0>
   12de8:	mov	r1, r9
   12dec:	mov	r0, r4
   12df0:	mov	r2, #0
   12df4:	bl	11098 <fseek@plt>
   12df8:	subs	r9, r0, #0
   12dfc:	bne	12f04 <__printf_chk@plt+0x1b6c>
   12e00:	bl	110f8 <uchardet_new@plt>
   12e04:	mov	r2, r5
   12e08:	mov	r1, r8
   12e0c:	mov	r4, r0
   12e10:	bl	112a8 <uchardet_handle_data@plt>
   12e14:	subs	r2, r0, #0
   12e18:	bne	12fb0 <__printf_chk@plt+0x1c18>
   12e1c:	ldr	r3, [r7]
   12e20:	cmp	r3, #0
   12e24:	bne	12f30 <__printf_chk@plt+0x1b98>
   12e28:	mov	r0, r4
   12e2c:	bl	1129c <uchardet_data_end@plt>
   12e30:	mov	r0, r4
   12e34:	bl	11350 <uchardet_get_charset@plt>
   12e38:	ldr	r3, [r7]
   12e3c:	cmp	r3, #0
   12e40:	mov	r9, r0
   12e44:	bne	12ed4 <__printf_chk@plt+0x1b3c>
   12e48:	cmp	r0, #0
   12e4c:	beq	12efc <__printf_chk@plt+0x1b64>
   12e50:	ldrb	r3, [r9]
   12e54:	cmp	r3, #0
   12e58:	beq	12efc <__printf_chk@plt+0x1b64>
   12e5c:	mov	r0, r9
   12e60:	bl	1126c <strlen@plt>
   12e64:	add	r7, r0, #1
   12e68:	mov	r0, r7
   12e6c:	bl	11260 <malloc@plt>
   12e70:	mov	r2, r7
   12e74:	mov	r1, r9
   12e78:	mov	r5, r0
   12e7c:	bl	11254 <memcpy@plt>
   12e80:	cmp	r4, #0
   12e84:	beq	12e90 <__printf_chk@plt+0x1af8>
   12e88:	mov	r0, r4
   12e8c:	bl	11110 <uchardet_delete@plt>
   12e90:	cmp	r8, #0
   12e94:	beq	12ea0 <__printf_chk@plt+0x1b08>
   12e98:	mov	r0, r8
   12e9c:	bl	1108c <free@plt>
   12ea0:	ldr	r2, [sp, #108]	; 0x6c
   12ea4:	ldr	r3, [r6]
   12ea8:	mov	r0, r5
   12eac:	cmp	r2, r3
   12eb0:	bne	12fc8 <__printf_chk@plt+0x1c30>
   12eb4:	add	sp, sp, #112	; 0x70
   12eb8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12ebc:	ldr	r3, [pc, #272]	; 12fd4 <__printf_chk@plt+0x1c3c>
   12ec0:	mov	r2, r5
   12ec4:	ldr	r1, [pc, #268]	; 12fd8 <__printf_chk@plt+0x1c40>
   12ec8:	ldr	r0, [r3]
   12ecc:	bl	1625c <__printf_chk@plt+0x4ec4>
   12ed0:	b	12db8 <__printf_chk@plt+0x1a20>
   12ed4:	ldr	r3, [pc, #248]	; 12fd4 <__printf_chk@plt+0x1c3c>
   12ed8:	cmp	r0, #0
   12edc:	ldr	r0, [r3]
   12ee0:	beq	12fa0 <__printf_chk@plt+0x1c08>
   12ee4:	mov	r2, r9
   12ee8:	ldr	r1, [pc, #236]	; 12fdc <__printf_chk@plt+0x1c44>
   12eec:	bl	1625c <__printf_chk@plt+0x4ec4>
   12ef0:	ldrb	r3, [r9]
   12ef4:	cmp	r3, #0
   12ef8:	bne	12e5c <__printf_chk@plt+0x1ac4>
   12efc:	mov	r5, #0
   12f00:	b	12e80 <__printf_chk@plt+0x1ae8>
   12f04:	ldr	r3, [pc, #200]	; 12fd4 <__printf_chk@plt+0x1c3c>
   12f08:	mov	r5, #0
   12f0c:	ldr	r4, [r3]
   12f10:	bl	112f0 <__errno_location@plt>
   12f14:	ldr	r0, [r0]
   12f18:	bl	110bc <strerror@plt>
   12f1c:	ldr	r1, [pc, #188]	; 12fe0 <__printf_chk@plt+0x1c48>
   12f20:	mov	r2, r0
   12f24:	mov	r0, r4
   12f28:	bl	1625c <__printf_chk@plt+0x4ec4>
   12f2c:	b	12e90 <__printf_chk@plt+0x1af8>
   12f30:	ldr	r3, [pc, #156]	; 12fd4 <__printf_chk@plt+0x1c3c>
   12f34:	mov	r2, sl
   12f38:	ldr	r1, [pc, #164]	; 12fe4 <__printf_chk@plt+0x1c4c>
   12f3c:	ldr	r0, [r3]
   12f40:	bl	1625c <__printf_chk@plt+0x4ec4>
   12f44:	b	12e28 <__printf_chk@plt+0x1a90>
   12f48:	ldr	r3, [pc, #132]	; 12fd4 <__printf_chk@plt+0x1c3c>
   12f4c:	mov	r5, sl
   12f50:	ldr	r4, [r3]
   12f54:	bl	112f0 <__errno_location@plt>
   12f58:	ldr	r0, [r0]
   12f5c:	bl	110bc <strerror@plt>
   12f60:	ldr	r1, [pc, #128]	; 12fe8 <__printf_chk@plt+0x1c50>
   12f64:	mov	r2, r0
   12f68:	mov	r0, r4
   12f6c:	bl	1625c <__printf_chk@plt+0x4ec4>
   12f70:	b	12e90 <__printf_chk@plt+0x1af8>
   12f74:	ldr	r3, [pc, #88]	; 12fd4 <__printf_chk@plt+0x1c3c>
   12f78:	mov	r5, #0
   12f7c:	ldr	r4, [r3]
   12f80:	bl	112f0 <__errno_location@plt>
   12f84:	ldr	r0, [r0]
   12f88:	bl	110bc <strerror@plt>
   12f8c:	ldr	r1, [pc, #88]	; 12fec <__printf_chk@plt+0x1c54>
   12f90:	mov	r2, r0
   12f94:	mov	r0, r4
   12f98:	bl	1625c <__printf_chk@plt+0x4ec4>
   12f9c:	b	12ea0 <__printf_chk@plt+0x1b08>
   12fa0:	ldr	r1, [pc, #72]	; 12ff0 <__printf_chk@plt+0x1c58>
   12fa4:	mov	r5, r9
   12fa8:	bl	1625c <__printf_chk@plt+0x4ec4>
   12fac:	b	12e80 <__printf_chk@plt+0x1ae8>
   12fb0:	ldr	r3, [pc, #28]	; 12fd4 <__printf_chk@plt+0x1c3c>
   12fb4:	ldr	r1, [pc, #56]	; 12ff4 <__printf_chk@plt+0x1c5c>
   12fb8:	mov	r5, r9
   12fbc:	ldr	r0, [r3]
   12fc0:	bl	1625c <__printf_chk@plt+0x4ec4>
   12fc4:	b	12e80 <__printf_chk@plt+0x1ae8>
   12fc8:	bl	11194 <__stack_chk_fail@plt>
   12fcc:			; <UNDEFINED> instruction: 0x00029db0
   12fd0:	andeq	sl, r2, r4, lsr r0
   12fd4:	andeq	sl, r2, r8, lsr #32
   12fd8:	andeq	r8, r1, ip, asr #10
   12fdc:			; <UNDEFINED> instruction: 0x000185b4
   12fe0:	andeq	r8, r1, r4, ror #10
   12fe4:	muleq	r1, r8, r5
   12fe8:	andeq	r8, r1, r8, asr r5
   12fec:	andeq	r8, r1, r0, asr #10
   12ff0:	andeq	r8, r1, r4, asr #11
   12ff4:	andeq	r8, r1, ip, ror r5
   12ff8:	push	{r4, r5, r6, r7, r8, r9, lr}
   12ffc:	sub	sp, sp, #76	; 0x4c
   13000:	ldr	r8, [pc, #1228]	; 134d4 <__printf_chk@plt+0x213c>
   13004:	mov	r7, r0
   13008:	add	r0, sp, #8
   1300c:	ldr	r3, [r8]
   13010:	str	r3, [sp, #68]	; 0x44
   13014:	bl	154ac <__printf_chk@plt+0x4114>
   13018:	add	r0, sp, #20
   1301c:	bl	154ac <__printf_chk@plt+0x4114>
   13020:	ldr	r1, [pc, #1200]	; 134d8 <__printf_chk@plt+0x2140>
   13024:	mov	r0, r7
   13028:	bl	112d8 <strcmp@plt>
   1302c:	ldr	r4, [pc, #1192]	; 134dc <__printf_chk@plt+0x2144>
   13030:	ldr	r3, [r4]
   13034:	cmp	r0, #0
   13038:	beq	13150 <__printf_chk@plt+0x1db8>
   1303c:	cmp	r3, #0
   13040:	bne	13138 <__printf_chk@plt+0x1da0>
   13044:	ldr	r1, [pc, #1172]	; 134e0 <__printf_chk@plt+0x2148>
   13048:	mov	r0, r7
   1304c:	bl	11320 <fopen64@plt>
   13050:	subs	r5, r0, #0
   13054:	beq	133c0 <__printf_chk@plt+0x2028>
   13058:	add	r2, sp, #20
   1305c:	add	r1, sp, #8
   13060:	mov	r0, r5
   13064:	bl	126a0 <__printf_chk@plt+0x1308>
   13068:	ldrb	r3, [r4, #204]	; 0xcc
   1306c:	mov	r6, r0
   13070:	cmp	r3, #0
   13074:	beq	13164 <__printf_chk@plt+0x1dcc>
   13078:	ldr	r3, [r4]
   1307c:	cmp	r3, #0
   13080:	bne	132fc <__printf_chk@plt+0x1f64>
   13084:	ldr	r1, [pc, #1112]	; 134e4 <__printf_chk@plt+0x214c>
   13088:	mov	r2, #99	; 0x63
   1308c:	add	r0, r1, #100	; 0x64
   13090:	bl	11308 <strncpy@plt>
   13094:	mov	r3, #0
   13098:	strb	r3, [r4, #403]	; 0x193
   1309c:	ldr	r0, [pc, #1092]	; 134e8 <__printf_chk@plt+0x2150>
   130a0:	bl	11890 <__printf_chk@plt+0x4f8>
   130a4:	ldrb	r3, [r0]
   130a8:	mov	r6, r0
   130ac:	cmp	r3, #0
   130b0:	beq	132ac <__printf_chk@plt+0x1f14>
   130b4:	ldr	r3, [r4]
   130b8:	cmp	r3, #0
   130bc:	bne	13190 <__printf_chk@plt+0x1df8>
   130c0:	ldr	r3, [r4, #504]	; 0x1f8
   130c4:	cmp	r3, #0
   130c8:	beq	131b0 <__printf_chk@plt+0x1e18>
   130cc:	ldr	r1, [pc, #1048]	; 134ec <__printf_chk@plt+0x2154>
   130d0:	mov	r0, r6
   130d4:	bl	11074 <strcasecmp@plt>
   130d8:	cmp	r0, #0
   130dc:	beq	13208 <__printf_chk@plt+0x1e70>
   130e0:	ldr	r1, [pc, #1032]	; 134f0 <__printf_chk@plt+0x2158>
   130e4:	mov	r0, r6
   130e8:	bl	11074 <strcasecmp@plt>
   130ec:	cmp	r0, #0
   130f0:	beq	132d8 <__printf_chk@plt+0x1f40>
   130f4:	ldr	r1, [pc, #1016]	; 134f4 <__printf_chk@plt+0x215c>
   130f8:	mov	r0, r6
   130fc:	bl	11074 <strcasecmp@plt>
   13100:	ldr	ip, [sp, #24]
   13104:	add	r4, sp, #48	; 0x30
   13108:	ldr	r1, [sp, #8]
   1310c:	ldr	r2, [sp, #12]
   13110:	ldr	r3, [sp, #20]
   13114:	str	ip, [sp]
   13118:	cmp	r0, #0
   1311c:	mov	r0, r4
   13120:	bne	13284 <__printf_chk@plt+0x1eec>
   13124:	bl	1590c <__printf_chk@plt+0x4574>
   13128:	mov	r1, r4
   1312c:	mov	r0, r5
   13130:	bl	12170 <__printf_chk@plt+0xdd8>
   13134:	b	13234 <__printf_chk@plt+0x1e9c>
   13138:	ldr	r3, [pc, #952]	; 134f8 <__printf_chk@plt+0x2160>
   1313c:	mov	r2, r7
   13140:	ldr	r1, [pc, #948]	; 134fc <__printf_chk@plt+0x2164>
   13144:	ldr	r0, [r3]
   13148:	bl	1625c <__printf_chk@plt+0x4ec4>
   1314c:	b	13044 <__printf_chk@plt+0x1cac>
   13150:	cmp	r3, #0
   13154:	bne	132e8 <__printf_chk@plt+0x1f50>
   13158:	ldr	r3, [pc, #928]	; 13500 <__printf_chk@plt+0x2168>
   1315c:	ldr	r5, [r3]
   13160:	b	13058 <__printf_chk@plt+0x1cc0>
   13164:	cmp	r0, #0
   13168:	beq	1336c <__printf_chk@plt+0x1fd4>
   1316c:	ldr	r9, [r4]
   13170:	cmp	r9, #0
   13174:	bne	13340 <__printf_chk@plt+0x1fa8>
   13178:	mov	r1, r0
   1317c:	mov	r2, #99	; 0x63
   13180:	ldr	r0, [pc, #864]	; 134e8 <__printf_chk@plt+0x2150>
   13184:	bl	11308 <strncpy@plt>
   13188:	strb	r9, [r4, #403]	; 0x193
   1318c:	b	1309c <__printf_chk@plt+0x1d04>
   13190:	ldr	r3, [pc, #864]	; 134f8 <__printf_chk@plt+0x2160>
   13194:	mov	r2, r0
   13198:	ldr	r1, [pc, #868]	; 13504 <__printf_chk@plt+0x216c>
   1319c:	ldr	r0, [r3]
   131a0:	bl	1625c <__printf_chk@plt+0x4ec4>
   131a4:	ldr	r3, [r4, #504]	; 0x1f8
   131a8:	cmp	r3, #0
   131ac:	bne	130cc <__printf_chk@plt+0x1d34>
   131b0:	add	r4, sp, #48	; 0x30
   131b4:	mov	r1, r7
   131b8:	mov	r0, r4
   131bc:	bl	1551c <__printf_chk@plt+0x4184>
   131c0:	ldr	r3, [sp, #52]	; 0x34
   131c4:	ldr	r2, [sp, #56]	; 0x38
   131c8:	cmp	r3, r2
   131cc:	bge	1329c <__printf_chk@plt+0x1f04>
   131d0:	ldr	r2, [sp, #48]	; 0x30
   131d4:	add	r0, r3, #1
   131d8:	mov	r1, #0
   131dc:	str	r0, [sp, #52]	; 0x34
   131e0:	strb	r1, [r2, r3]
   131e4:	mov	r0, r4
   131e8:	bl	14b94 <__printf_chk@plt+0x37fc>
   131ec:	ldr	r2, [sp, #48]	; 0x30
   131f0:	ldr	r1, [pc, #784]	; 13508 <__printf_chk@plt+0x2170>
   131f4:	mov	r0, #1
   131f8:	bl	11398 <__printf_chk@plt>
   131fc:	mov	r0, r4
   13200:	bl	15608 <__printf_chk@plt+0x4270>
   13204:	b	130cc <__printf_chk@plt+0x1d34>
   13208:	ldr	r3, [sp, #24]
   1320c:	add	r4, sp, #48	; 0x30
   13210:	str	r3, [sp]
   13214:	mov	r0, r4
   13218:	ldr	r3, [sp, #20]
   1321c:	ldr	r2, [sp, #12]
   13220:	ldr	r1, [sp, #8]
   13224:	bl	1590c <__printf_chk@plt+0x4574>
   13228:	mov	r1, r4
   1322c:	mov	r0, r5
   13230:	bl	11944 <__printf_chk@plt+0x5ac>
   13234:	mov	r0, r4
   13238:	bl	15608 <__printf_chk@plt+0x4270>
   1323c:	ldr	r3, [pc, #700]	; 13500 <__printf_chk@plt+0x2168>
   13240:	ldr	r3, [r3]
   13244:	cmp	r3, r5
   13248:	beq	13254 <__printf_chk@plt+0x1ebc>
   1324c:	mov	r0, r5
   13250:	bl	11290 <fclose@plt>
   13254:	mov	r4, #1
   13258:	add	r0, sp, #20
   1325c:	bl	15608 <__printf_chk@plt+0x4270>
   13260:	add	r0, sp, #8
   13264:	bl	15608 <__printf_chk@plt+0x4270>
   13268:	ldr	r2, [sp, #68]	; 0x44
   1326c:	ldr	r3, [r8]
   13270:	mov	r0, r4
   13274:	cmp	r2, r3
   13278:	bne	13488 <__printf_chk@plt+0x20f0>
   1327c:	add	sp, sp, #76	; 0x4c
   13280:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13284:	bl	1590c <__printf_chk@plt+0x4574>
   13288:	mov	r2, r6
   1328c:	mov	r1, r4
   13290:	mov	r0, r5
   13294:	bl	12288 <__printf_chk@plt+0xef0>
   13298:	b	13234 <__printf_chk@plt+0x1e9c>
   1329c:	mov	r0, r4
   132a0:	bl	15770 <__printf_chk@plt+0x43d8>
   132a4:	ldr	r3, [sp, #52]	; 0x34
   132a8:	b	131d0 <__printf_chk@plt+0x1e38>
   132ac:	add	r4, sp, #48	; 0x30
   132b0:	mov	r0, r4
   132b4:	ldr	r1, [pc, #556]	; 134e8 <__printf_chk@plt+0x2150>
   132b8:	bl	135b4 <__printf_chk@plt+0x221c>
   132bc:	ldr	r3, [pc, #584]	; 1350c <__printf_chk@plt+0x2174>
   132c0:	mov	r1, r4
   132c4:	mov	r2, r3
   132c8:	ldr	r0, [pc, #576]	; 13510 <__printf_chk@plt+0x2178>
   132cc:	bl	139a0 <__printf_chk@plt+0x2608>
   132d0:	mov	r4, #0
   132d4:	b	13258 <__printf_chk@plt+0x1ec0>
   132d8:	add	r1, sp, #20
   132dc:	mov	r0, r5
   132e0:	bl	11b60 <__printf_chk@plt+0x7c8>
   132e4:	b	1323c <__printf_chk@plt+0x1ea4>
   132e8:	ldr	r3, [pc, #520]	; 134f8 <__printf_chk@plt+0x2160>
   132ec:	ldr	r1, [pc, #544]	; 13514 <__printf_chk@plt+0x217c>
   132f0:	ldr	r0, [r3]
   132f4:	bl	1625c <__printf_chk@plt+0x4ec4>
   132f8:	b	13158 <__printf_chk@plt+0x1dc0>
   132fc:	ldr	r9, [pc, #500]	; 134f8 <__printf_chk@plt+0x2160>
   13300:	ldr	r2, [pc, #476]	; 134e4 <__printf_chk@plt+0x214c>
   13304:	ldr	r1, [pc, #524]	; 13518 <__printf_chk@plt+0x2180>
   13308:	ldr	r0, [r9]
   1330c:	bl	1625c <__printf_chk@plt+0x4ec4>
   13310:	cmp	r6, #0
   13314:	beq	13084 <__printf_chk@plt+0x1cec>
   13318:	ldr	r1, [pc, #452]	; 134e4 <__printf_chk@plt+0x214c>
   1331c:	mov	r0, r6
   13320:	bl	112d8 <strcmp@plt>
   13324:	cmp	r0, #0
   13328:	beq	13084 <__printf_chk@plt+0x1cec>
   1332c:	mov	r2, r6
   13330:	ldr	r0, [r9]
   13334:	ldr	r1, [pc, #480]	; 1351c <__printf_chk@plt+0x2184>
   13338:	bl	1625c <__printf_chk@plt+0x4ec4>
   1333c:	b	13084 <__printf_chk@plt+0x1cec>
   13340:	ldr	r3, [pc, #432]	; 134f8 <__printf_chk@plt+0x2160>
   13344:	ldr	r1, [pc, #468]	; 13520 <__printf_chk@plt+0x2188>
   13348:	ldr	r0, [r3]
   1334c:	bl	1625c <__printf_chk@plt+0x4ec4>
   13350:	mov	r1, r6
   13354:	mov	r2, #99	; 0x63
   13358:	ldr	r0, [pc, #392]	; 134e8 <__printf_chk@plt+0x2150>
   1335c:	bl	11308 <strncpy@plt>
   13360:	mov	r3, #0
   13364:	strb	r3, [r4, #403]	; 0x193
   13368:	b	1309c <__printf_chk@plt+0x1d04>
   1336c:	add	r1, sp, #20
   13370:	mov	r0, r5
   13374:	bl	12c24 <__printf_chk@plt+0x188c>
   13378:	subs	r9, r0, #0
   1337c:	ldr	r6, [r4]
   13380:	beq	13400 <__printf_chk@plt+0x2068>
   13384:	cmp	r6, #0
   13388:	bne	133a4 <__printf_chk@plt+0x200c>
   1338c:	mov	r1, r9
   13390:	mov	r2, #99	; 0x63
   13394:	ldr	r0, [pc, #332]	; 134e8 <__printf_chk@plt+0x2150>
   13398:	bl	11308 <strncpy@plt>
   1339c:	strb	r6, [r4, #403]	; 0x193
   133a0:	b	1309c <__printf_chk@plt+0x1d04>
   133a4:	ldr	r3, [pc, #332]	; 134f8 <__printf_chk@plt+0x2160>
   133a8:	mov	r2, r9
   133ac:	ldr	r1, [pc, #368]	; 13524 <__printf_chk@plt+0x218c>
   133b0:	ldr	r0, [r3]
   133b4:	bl	1625c <__printf_chk@plt+0x4ec4>
   133b8:	mov	r1, r9
   133bc:	b	13354 <__printf_chk@plt+0x1fbc>
   133c0:	mov	r1, r7
   133c4:	add	r0, sp, #32
   133c8:	bl	135b4 <__printf_chk@plt+0x221c>
   133cc:	bl	112f0 <__errno_location@plt>
   133d0:	add	r4, sp, #48	; 0x30
   133d4:	ldr	r0, [r0]
   133d8:	bl	110bc <strerror@plt>
   133dc:	mov	r1, r0
   133e0:	mov	r0, r4
   133e4:	bl	135b4 <__printf_chk@plt+0x221c>
   133e8:	mov	r2, r4
   133ec:	add	r1, sp, #32
   133f0:	ldr	r3, [pc, #276]	; 1350c <__printf_chk@plt+0x2174>
   133f4:	ldr	r0, [pc, #300]	; 13528 <__printf_chk@plt+0x2190>
   133f8:	bl	139a0 <__printf_chk@plt+0x2608>
   133fc:	b	132d0 <__printf_chk@plt+0x1f38>
   13400:	cmp	r6, #0
   13404:	beq	13418 <__printf_chk@plt+0x2080>
   13408:	ldr	r3, [pc, #232]	; 134f8 <__printf_chk@plt+0x2160>
   1340c:	ldr	r1, [pc, #280]	; 1352c <__printf_chk@plt+0x2194>
   13410:	ldr	r0, [r3]
   13414:	bl	1625c <__printf_chk@plt+0x4ec4>
   13418:	mov	r0, r5
   1341c:	bl	12d5c <__printf_chk@plt+0x19c4>
   13420:	subs	r6, r0, #0
   13424:	beq	1344c <__printf_chk@plt+0x20b4>
   13428:	mov	r2, #99	; 0x63
   1342c:	mov	r1, r6
   13430:	ldr	r0, [pc, #176]	; 134e8 <__printf_chk@plt+0x2150>
   13434:	bl	11308 <strncpy@plt>
   13438:	mov	r3, #0
   1343c:	mov	r0, r6
   13440:	strb	r3, [r4, #403]	; 0x193
   13444:	bl	1108c <free@plt>
   13448:	b	1309c <__printf_chk@plt+0x1d04>
   1344c:	ldr	r3, [r4]
   13450:	cmp	r3, #0
   13454:	bne	13474 <__printf_chk@plt+0x20dc>
   13458:	ldr	r1, [pc, #208]	; 13530 <__printf_chk@plt+0x2198>
   1345c:	mov	r2, #99	; 0x63
   13460:	sub	r0, r1, #100	; 0x64
   13464:	bl	11308 <strncpy@plt>
   13468:	mov	r3, #0
   1346c:	strb	r3, [r4, #403]	; 0x193
   13470:	b	1309c <__printf_chk@plt+0x1d04>
   13474:	ldr	r3, [pc, #124]	; 134f8 <__printf_chk@plt+0x2160>
   13478:	ldr	r1, [pc, #180]	; 13534 <__printf_chk@plt+0x219c>
   1347c:	ldr	r0, [r3]
   13480:	bl	1625c <__printf_chk@plt+0x4ec4>
   13484:	b	13458 <__printf_chk@plt+0x20c0>
   13488:	bl	11194 <__stack_chk_fail@plt>
   1348c:	mov	r0, r4
   13490:	bl	15608 <__printf_chk@plt+0x4270>
   13494:	add	r0, sp, #20
   13498:	bl	15608 <__printf_chk@plt+0x4270>
   1349c:	add	r0, sp, #8
   134a0:	bl	15608 <__printf_chk@plt+0x4270>
   134a4:	bl	111a0 <__cxa_end_cleanup@plt>
   134a8:	b	13494 <__printf_chk@plt+0x20fc>
   134ac:	mov	r0, r4
   134b0:	bl	15608 <__printf_chk@plt+0x4270>
   134b4:	b	13494 <__printf_chk@plt+0x20fc>
   134b8:	mov	r0, r4
   134bc:	bl	15608 <__printf_chk@plt+0x4270>
   134c0:	b	13494 <__printf_chk@plt+0x20fc>
   134c4:	mov	r0, r4
   134c8:	bl	15608 <__printf_chk@plt+0x4270>
   134cc:	b	13494 <__printf_chk@plt+0x20fc>
   134d0:	b	1349c <__printf_chk@plt+0x2104>
   134d4:			; <UNDEFINED> instruction: 0x00029db0
   134d8:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   134dc:	andeq	sl, r2, r4, lsr r0
   134e0:	ldrdeq	r8, [r1], -ip
   134e4:	andeq	sl, r2, r0, lsl #2
   134e8:	andeq	sl, r2, r4, ror #2
   134ec:	andeq	r8, r1, r0, ror #14
   134f0:	andeq	r8, r1, ip, ror #14
   134f4:	andeq	r8, r1, r4, ror r7
   134f8:	andeq	sl, r2, r8, lsr #32
   134fc:	andeq	r8, r1, r0, ror #11
   13500:	andeq	sl, r2, r0, lsr #32
   13504:	andeq	r8, r1, ip, lsr r7
   13508:	andeq	r8, r1, r4, asr r7
   1350c:	andeq	sl, r2, r0, lsr r2
   13510:	andeq	r8, r1, r4, lsl #14
   13514:	andeq	r8, r1, r0, lsl #12
   13518:	andeq	r8, r1, r4, lsl r6
   1351c:	andeq	r8, r1, r0, asr r6
   13520:	andeq	r8, r1, r4, lsl #13
   13524:	andeq	r8, r1, ip, ror #13
   13528:	andeq	r8, r1, ip, ror #11
   1352c:	andeq	r8, r1, ip, lsr #13
   13530:	andeq	sl, r2, r8, asr #3
   13534:	andeq	r8, r1, r0, asr #13
   13538:	ldr	r2, [pc, #12]	; 1354c <__printf_chk@plt+0x21b4>
   1353c:	ldr	r3, [pc, #12]	; 13550 <__printf_chk@plt+0x21b8>
   13540:	ldr	r1, [pc, #12]	; 13554 <__printf_chk@plt+0x21bc>
   13544:	ldr	r2, [r2]
   13548:	b	1625c <__printf_chk@plt+0x4ec4>
   1354c:	andeq	sl, r2, ip, lsr #5
   13550:	andeq	sl, r2, r8, asr #3
   13554:	andeq	r8, r1, ip, ror r7
   13558:	ldr	r3, [pc, #68]	; 135a4 <__printf_chk@plt+0x220c>
   1355c:	push	{r4, r5, r6, lr}
   13560:	mov	r5, r0
   13564:	ldr	r2, [r3]
   13568:	mov	r6, r1
   1356c:	cmp	r2, #0
   13570:	ldr	r4, [pc, #48]	; 135a8 <__printf_chk@plt+0x2210>
   13574:	beq	13584 <__printf_chk@plt+0x21ec>
   13578:	ldr	r1, [pc, #44]	; 135ac <__printf_chk@plt+0x2214>
   1357c:	ldr	r0, [r4]
   13580:	bl	1625c <__printf_chk@plt+0x4ec4>
   13584:	mov	r3, r6
   13588:	mov	r2, r5
   1358c:	ldr	r1, [pc, #28]	; 135b0 <__printf_chk@plt+0x2218>
   13590:	ldr	r0, [r4]
   13594:	bl	1625c <__printf_chk@plt+0x4ec4>
   13598:	ldr	r0, [r4]
   1359c:	bl	11314 <fflush@plt>
   135a0:	bl	11134 <abort@plt>
   135a4:	andeq	sl, r2, ip, lsr #5
   135a8:	andeq	sl, r2, r8, lsr #32
   135ac:	andeq	r8, r1, r4, ror sp
   135b0:	andeq	r8, r1, ip, ror sp
   135b4:	ldr	r3, [pc, #20]	; 135d0 <__printf_chk@plt+0x2238>
   135b8:	cmp	r1, #0
   135bc:	moveq	r1, r3
   135c0:	mov	r3, #1
   135c4:	str	r1, [r0, #8]
   135c8:	str	r3, [r0]
   135cc:	bx	lr
   135d0:	andeq	r8, r1, r8, lsr #27
   135d4:	mov	r2, #0
   135d8:	str	r2, [r0]
   135dc:	bx	lr
   135e0:	mov	r2, #3
   135e4:	str	r1, [r0, #8]
   135e8:	str	r2, [r0]
   135ec:	bx	lr
   135f0:	mov	r2, #4
   135f4:	str	r1, [r0, #8]
   135f8:	str	r2, [r0]
   135fc:	bx	lr
   13600:	mov	r2, #2
   13604:	strb	r1, [r0, #8]
   13608:	str	r2, [r0]
   1360c:	bx	lr
   13610:	mov	r2, #5
   13614:	vstr	d0, [r0, #8]
   13618:	str	r2, [r0]
   1361c:	bx	lr
   13620:	ldr	r0, [r0]
   13624:	clz	r0, r0
   13628:	lsr	r0, r0, #5
   1362c:	bx	lr
   13630:	ldr	r3, [r0]
   13634:	push	{r4, lr}
   13638:	sub	r3, r3, #1
   1363c:	cmp	r3, #4
   13640:	ldrls	pc, [pc, r3, lsl #2]
   13644:	b	136cc <__printf_chk@plt+0x2334>
   13648:	andeq	r3, r1, ip, lsl #13
   1364c:	andeq	r3, r1, r0, lsr #13
   13650:			; <UNDEFINED> instruction: 0x000136b4
   13654:	andeq	r3, r1, ip, asr r6
   13658:	andeq	r3, r1, r4, ror r6
   1365c:	ldr	r0, [r0, #8]
   13660:	bl	14988 <__printf_chk@plt+0x35f0>
   13664:	ldr	r3, [pc, #100]	; 136d0 <__printf_chk@plt+0x2338>
   13668:	pop	{r4, lr}
   1366c:	ldr	r1, [r3]
   13670:	b	1135c <fputs@plt>
   13674:	ldr	ip, [pc, #84]	; 136d0 <__printf_chk@plt+0x2338>
   13678:	ldrd	r2, [r0, #8]
   1367c:	ldr	r1, [pc, #80]	; 136d4 <__printf_chk@plt+0x233c>
   13680:	ldr	r0, [ip]
   13684:	pop	{r4, lr}
   13688:	b	1625c <__printf_chk@plt+0x4ec4>
   1368c:	ldr	r3, [pc, #60]	; 136d0 <__printf_chk@plt+0x2338>
   13690:	ldr	r0, [r0, #8]
   13694:	pop	{r4, lr}
   13698:	ldr	r1, [r3]
   1369c:	b	1135c <fputs@plt>
   136a0:	ldr	r3, [pc, #40]	; 136d0 <__printf_chk@plt+0x2338>
   136a4:	ldrb	r0, [r0, #8]
   136a8:	pop	{r4, lr}
   136ac:	ldr	r1, [r3]
   136b0:	b	111b8 <putc@plt>
   136b4:	ldr	r0, [r0, #8]
   136b8:	bl	148fc <__printf_chk@plt+0x3564>
   136bc:	ldr	r3, [pc, #12]	; 136d0 <__printf_chk@plt+0x2338>
   136c0:	pop	{r4, lr}
   136c4:	ldr	r1, [r3]
   136c8:	b	1135c <fputs@plt>
   136cc:	pop	{r4, pc}
   136d0:	andeq	sl, r2, r8, lsr #32
   136d4:			; <UNDEFINED> instruction: 0x00018db0
   136d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   136dc:	subs	r4, r0, #0
   136e0:	mov	r6, r1
   136e4:	mov	r7, r2
   136e8:	mov	r8, r3
   136ec:	beq	137d8 <__printf_chk@plt+0x2440>
   136f0:	ldr	r5, [pc, #288]	; 13818 <__printf_chk@plt+0x2480>
   136f4:	ldr	r9, [pc, #288]	; 1381c <__printf_chk@plt+0x2484>
   136f8:	ldrb	r0, [r4]
   136fc:	cmp	r0, #0
   13700:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13704:	cmp	r0, #37	; 0x25
   13708:	bne	137c8 <__printf_chk@plt+0x2430>
   1370c:	ldrb	r3, [r4, #1]
   13710:	add	r4, r4, #2
   13714:	sub	r3, r3, #37	; 0x25
   13718:	cmp	r3, #14
   1371c:	ldrls	pc, [pc, r3, lsl #2]
   13720:	b	137b8 <__printf_chk@plt+0x2420>
   13724:	andeq	r3, r1, r8, lsr #15
   13728:			; <UNDEFINED> instruction: 0x000137b8
   1372c:			; <UNDEFINED> instruction: 0x000137b8
   13730:			; <UNDEFINED> instruction: 0x000137b8
   13734:			; <UNDEFINED> instruction: 0x000137b8
   13738:			; <UNDEFINED> instruction: 0x000137b8
   1373c:			; <UNDEFINED> instruction: 0x000137b8
   13740:			; <UNDEFINED> instruction: 0x000137b8
   13744:			; <UNDEFINED> instruction: 0x000137b8
   13748:			; <UNDEFINED> instruction: 0x000137b8
   1374c:			; <UNDEFINED> instruction: 0x000137b8
   13750:			; <UNDEFINED> instruction: 0x000137b8
   13754:	muleq	r1, r0, r7
   13758:	andeq	r3, r1, r8, ror r7
   1375c:	andeq	r3, r1, r0, ror #14
   13760:	ldr	r3, [r8]
   13764:	cmp	r3, #0
   13768:	beq	13808 <__printf_chk@plt+0x2470>
   1376c:	mov	r0, r8
   13770:	bl	13630 <__printf_chk@plt+0x2298>
   13774:	b	136f8 <__printf_chk@plt+0x2360>
   13778:	ldr	r3, [r7]
   1377c:	cmp	r3, #0
   13780:	beq	137f8 <__printf_chk@plt+0x2460>
   13784:	mov	r0, r7
   13788:	bl	13630 <__printf_chk@plt+0x2298>
   1378c:	b	136f8 <__printf_chk@plt+0x2360>
   13790:	ldr	r3, [r6]
   13794:	cmp	r3, #0
   13798:	beq	137e8 <__printf_chk@plt+0x2450>
   1379c:	mov	r0, r6
   137a0:	bl	13630 <__printf_chk@plt+0x2298>
   137a4:	b	136f8 <__printf_chk@plt+0x2360>
   137a8:	ldr	r1, [r5]
   137ac:	mov	r0, #37	; 0x25
   137b0:	bl	11230 <fputc@plt>
   137b4:	b	136f8 <__printf_chk@plt+0x2360>
   137b8:	mov	r1, r9
   137bc:	mov	r0, #120	; 0x78
   137c0:	bl	13558 <__printf_chk@plt+0x21c0>
   137c4:	b	136f8 <__printf_chk@plt+0x2360>
   137c8:	ldr	r1, [r5]
   137cc:	add	r4, r4, #1
   137d0:	bl	111b8 <putc@plt>
   137d4:	b	136f8 <__printf_chk@plt+0x2360>
   137d8:	ldr	r1, [pc, #60]	; 1381c <__printf_chk@plt+0x2484>
   137dc:	mov	r0, #98	; 0x62
   137e0:	bl	13558 <__printf_chk@plt+0x21c0>
   137e4:	b	136f0 <__printf_chk@plt+0x2358>
   137e8:	mov	r1, r9
   137ec:	mov	r0, #108	; 0x6c
   137f0:	bl	13558 <__printf_chk@plt+0x21c0>
   137f4:	b	1379c <__printf_chk@plt+0x2404>
   137f8:	mov	r1, r9
   137fc:	mov	r0, #112	; 0x70
   13800:	bl	13558 <__printf_chk@plt+0x21c0>
   13804:	b	13784 <__printf_chk@plt+0x23ec>
   13808:	mov	r1, r9
   1380c:	mov	r0, #116	; 0x74
   13810:	bl	13558 <__printf_chk@plt+0x21c0>
   13814:	b	1376c <__printf_chk@plt+0x23d4>
   13818:	andeq	sl, r2, r8, lsr #32
   1381c:			; <UNDEFINED> instruction: 0x00018db4
   13820:	ldr	ip, [pc, #340]	; 1397c <__printf_chk@plt+0x25e4>
   13824:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13828:	sub	sp, sp, #20
   1382c:	mvn	r5, r2
   13830:	mov	r8, r2
   13834:	ldr	r2, [ip]
   13838:	cmp	r0, #0
   1383c:	mov	r6, r3
   13840:	add	r9, sp, #60	; 0x3c
   13844:	ldr	r3, [sp, #56]	; 0x38
   13848:	lsr	r5, r5, #31
   1384c:	moveq	r5, #0
   13850:	cmp	r2, #0
   13854:	ldr	r4, [pc, #292]	; 13980 <__printf_chk@plt+0x25e8>
   13858:	str	r1, [sp, #12]
   1385c:	mov	r7, r0
   13860:	str	r3, [sp, #8]
   13864:	ldm	r9, {r9, sl, fp}
   13868:	beq	138f4 <__printf_chk@plt+0x255c>
   1386c:	ldr	r1, [pc, #272]	; 13984 <__printf_chk@plt+0x25ec>
   13870:	ldr	r0, [r4]
   13874:	bl	1625c <__printf_chk@plt+0x4ec4>
   13878:	cmp	r5, #0
   1387c:	bne	138fc <__printf_chk@plt+0x2564>
   13880:	ldr	r1, [r4]
   13884:	mov	r0, #32
   13888:	bl	11230 <fputc@plt>
   1388c:	cmp	r6, #0
   13890:	beq	13940 <__printf_chk@plt+0x25a8>
   13894:	cmp	r6, #2
   13898:	bne	138bc <__printf_chk@plt+0x2524>
   1389c:	ldr	r3, [r4]
   138a0:	mov	r2, #12
   138a4:	mov	r1, #1
   138a8:	ldr	r0, [pc, #216]	; 13988 <__printf_chk@plt+0x25f0>
   138ac:	bl	1123c <fwrite@plt>
   138b0:	ldr	r1, [r4]
   138b4:	mov	r0, #32
   138b8:	bl	11230 <fputc@plt>
   138bc:	mov	r3, fp
   138c0:	mov	r2, sl
   138c4:	mov	r1, r9
   138c8:	ldr	r0, [sp, #8]
   138cc:	bl	136d8 <__printf_chk@plt+0x2340>
   138d0:	ldr	r1, [r4]
   138d4:	mov	r0, #10
   138d8:	bl	11230 <fputc@plt>
   138dc:	ldr	r0, [r4]
   138e0:	bl	11314 <fflush@plt>
   138e4:	cmp	r6, #2
   138e8:	beq	13958 <__printf_chk@plt+0x25c0>
   138ec:	add	sp, sp, #20
   138f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138f4:	cmp	r5, #0
   138f8:	beq	1388c <__printf_chk@plt+0x24f4>
   138fc:	ldr	r1, [pc, #136]	; 1398c <__printf_chk@plt+0x25f4>
   13900:	mov	r0, r7
   13904:	bl	112d8 <strcmp@plt>
   13908:	ldr	r3, [pc, #128]	; 13990 <__printf_chk@plt+0x25f8>
   1390c:	ldr	r1, [r4]
   13910:	cmp	r0, #0
   13914:	moveq	r7, r3
   13918:	ldr	r3, [sp, #12]
   1391c:	cmp	r3, #0
   13920:	beq	13964 <__printf_chk@plt+0x25cc>
   13924:	str	r8, [sp]
   13928:	ldr	r3, [sp, #12]
   1392c:	mov	r2, r7
   13930:	mov	r0, r1
   13934:	ldr	r1, [pc, #88]	; 13994 <__printf_chk@plt+0x25fc>
   13938:	bl	1625c <__printf_chk@plt+0x4ec4>
   1393c:	b	13880 <__printf_chk@plt+0x24e8>
   13940:	ldr	r3, [r4]
   13944:	mov	r2, #8
   13948:	mov	r1, #1
   1394c:	ldr	r0, [pc, #68]	; 13998 <__printf_chk@plt+0x2600>
   13950:	bl	1123c <fwrite@plt>
   13954:	b	138b0 <__printf_chk@plt+0x2518>
   13958:	add	sp, sp, #20
   1395c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13960:	b	13b0c <__printf_chk@plt+0x2774>
   13964:	mov	r3, r8
   13968:	mov	r2, r7
   1396c:	mov	r0, r1
   13970:	ldr	r1, [pc, #36]	; 1399c <__printf_chk@plt+0x2604>
   13974:	bl	1625c <__printf_chk@plt+0x4ec4>
   13978:	b	13880 <__printf_chk@plt+0x24e8>
   1397c:	andeq	sl, r2, ip, lsr #5
   13980:	andeq	sl, r2, r8, lsr #32
   13984:	andeq	r8, r1, ip, ror #27
   13988:	andeq	r8, r1, r4, lsl #28
   1398c:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   13990:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   13994:	strdeq	r8, [r1], -r0
   13998:	andeq	r8, r1, r4, lsl lr
   1399c:	strdeq	r8, [r1], -ip
   139a0:	push	{r4, lr}
   139a4:	sub	sp, sp, #16
   139a8:	ldr	lr, [pc, #40]	; 139d8 <__printf_chk@plt+0x2640>
   139ac:	ldr	ip, [pc, #40]	; 139dc <__printf_chk@plt+0x2644>
   139b0:	ldr	r4, [pc, #40]	; 139e0 <__printf_chk@plt+0x2648>
   139b4:	strd	r2, [sp, #8]
   139b8:	strd	r0, [sp]
   139bc:	ldr	r2, [r4]
   139c0:	ldr	r1, [lr]
   139c4:	ldr	r0, [ip]
   139c8:	mov	r3, #1
   139cc:	bl	13820 <__printf_chk@plt+0x2488>
   139d0:	add	sp, sp, #16
   139d4:	pop	{r4, pc}
   139d8:	andeq	sl, r2, r0, asr #4
   139dc:	andeq	sl, r2, r4, asr #4
   139e0:	andeq	sl, r2, r4, lsr #5
   139e4:	push	{r4, lr}
   139e8:	sub	sp, sp, #16
   139ec:	ldr	lr, [pc, #40]	; 13a1c <__printf_chk@plt+0x2684>
   139f0:	ldr	ip, [pc, #40]	; 13a20 <__printf_chk@plt+0x2688>
   139f4:	ldr	r4, [pc, #40]	; 13a24 <__printf_chk@plt+0x268c>
   139f8:	strd	r2, [sp, #8]
   139fc:	strd	r0, [sp]
   13a00:	ldr	r2, [r4]
   13a04:	ldr	r1, [lr]
   13a08:	ldr	r0, [ip]
   13a0c:	mov	r3, #0
   13a10:	bl	13820 <__printf_chk@plt+0x2488>
   13a14:	add	sp, sp, #16
   13a18:	pop	{r4, pc}
   13a1c:	andeq	sl, r2, r0, asr #4
   13a20:	andeq	sl, r2, r4, asr #4
   13a24:	andeq	sl, r2, r4, lsr #5
   13a28:	push	{r4, lr}
   13a2c:	sub	sp, sp, #16
   13a30:	ldr	lr, [pc, #40]	; 13a60 <__printf_chk@plt+0x26c8>
   13a34:	ldr	ip, [pc, #40]	; 13a64 <__printf_chk@plt+0x26cc>
   13a38:	ldr	r4, [pc, #40]	; 13a68 <__printf_chk@plt+0x26d0>
   13a3c:	strd	r2, [sp, #8]
   13a40:	strd	r0, [sp]
   13a44:	ldr	r2, [r4]
   13a48:	ldr	r1, [lr]
   13a4c:	ldr	r0, [ip]
   13a50:	mov	r3, #2
   13a54:	bl	13820 <__printf_chk@plt+0x2488>
   13a58:	add	sp, sp, #16
   13a5c:	pop	{r4, pc}
   13a60:	andeq	sl, r2, r0, asr #4
   13a64:	andeq	sl, r2, r4, asr #4
   13a68:	andeq	sl, r2, r4, lsr #5
   13a6c:	push	{lr}		; (str lr, [sp, #-4]!)
   13a70:	sub	sp, sp, #20
   13a74:	ldr	lr, [sp, #24]
   13a78:	ldr	ip, [sp, #28]
   13a7c:	strd	r2, [sp]
   13a80:	str	lr, [sp, #8]
   13a84:	mov	r2, r1
   13a88:	str	ip, [sp, #12]
   13a8c:	mov	r3, #1
   13a90:	mov	r1, #0
   13a94:	bl	13820 <__printf_chk@plt+0x2488>
   13a98:	add	sp, sp, #20
   13a9c:	pop	{pc}		; (ldr pc, [sp], #4)
   13aa0:	push	{lr}		; (str lr, [sp, #-4]!)
   13aa4:	sub	sp, sp, #20
   13aa8:	ldr	lr, [sp, #24]
   13aac:	ldr	ip, [sp, #28]
   13ab0:	str	r3, [sp, #4]
   13ab4:	mov	r3, #0
   13ab8:	str	r2, [sp]
   13abc:	str	lr, [sp, #8]
   13ac0:	mov	r2, r1
   13ac4:	str	ip, [sp, #12]
   13ac8:	mov	r1, r3
   13acc:	bl	13820 <__printf_chk@plt+0x2488>
   13ad0:	add	sp, sp, #20
   13ad4:	pop	{pc}		; (ldr pc, [sp], #4)
   13ad8:	push	{lr}		; (str lr, [sp, #-4]!)
   13adc:	sub	sp, sp, #20
   13ae0:	ldr	lr, [sp, #24]
   13ae4:	ldr	ip, [sp, #28]
   13ae8:	strd	r2, [sp]
   13aec:	str	lr, [sp, #8]
   13af0:	mov	r2, r1
   13af4:	str	ip, [sp, #12]
   13af8:	mov	r3, #2
   13afc:	mov	r1, #0
   13b00:	bl	13820 <__printf_chk@plt+0x2488>
   13b04:	add	sp, sp, #20
   13b08:	pop	{pc}		; (ldr pc, [sp], #4)
   13b0c:	push	{r4, lr}
   13b10:	mov	r0, #3
   13b14:	bl	110b0 <exit@plt>
   13b18:	ldr	ip, [r1, #36]	; 0x24
   13b1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b20:	ldr	r7, [r1, #32]
   13b24:	ldr	r6, [r1]
   13b28:	add	r5, r0, ip, lsl #2
   13b2c:	mov	r4, r7
   13b30:	mov	lr, r6
   13b34:	cmp	lr, ip
   13b38:	movle	r3, #0
   13b3c:	movgt	r3, #1
   13b40:	cmp	r4, ip
   13b44:	movge	r3, #0
   13b48:	cmp	r3, #0
   13b4c:	beq	13bc8 <__printf_chk@plt+0x2830>
   13b50:	sub	fp, lr, ip
   13b54:	sub	r8, ip, r4
   13b58:	cmp	fp, r8
   13b5c:	ble	13b94 <__printf_chk@plt+0x27fc>
   13b60:	sub	lr, lr, r8
   13b64:	add	r8, r8, lr
   13b68:	sub	r2, r4, #-1073741823	; 0xc0000001
   13b6c:	add	r8, r0, r8, lsl #2
   13b70:	add	r3, r0, lr, lsl #2
   13b74:	add	r2, r0, r2, lsl #2
   13b78:	ldr	r9, [r2, #4]!
   13b7c:	ldr	sl, [r3]
   13b80:	str	sl, [r2]
   13b84:	str	r9, [r3], #4
   13b88:	cmp	r8, r3
   13b8c:	bne	13b78 <__printf_chk@plt+0x27e0>
   13b90:	b	13b34 <__printf_chk@plt+0x279c>
   13b94:	sub	r2, r4, #-1073741823	; 0xc0000001
   13b98:	add	sl, fp, ip
   13b9c:	add	r2, r0, r2, lsl #2
   13ba0:	add	sl, r0, sl, lsl #2
   13ba4:	mov	r3, r5
   13ba8:	ldr	r8, [r2, #4]!
   13bac:	ldr	r9, [r3]
   13bb0:	str	r9, [r2]
   13bb4:	str	r8, [r3], #4
   13bb8:	cmp	r3, sl
   13bbc:	bne	13ba8 <__printf_chk@plt+0x2810>
   13bc0:	add	r4, r4, fp
   13bc4:	b	13b34 <__printf_chk@plt+0x279c>
   13bc8:	sub	ip, r6, ip
   13bcc:	add	r7, ip, r7
   13bd0:	str	r7, [r1, #32]
   13bd4:	str	r6, [r1, #36]	; 0x24
   13bd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13bdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13be0:	sub	sp, sp, #60	; 0x3c
   13be4:	mov	r9, r2
   13be8:	ldr	r4, [sp, #108]	; 0x6c
   13bec:	ldrb	r2, [r2]
   13bf0:	str	r1, [sp, #8]
   13bf4:	ldr	r1, [r4, #4]
   13bf8:	cmp	r2, #58	; 0x3a
   13bfc:	movne	r2, r1
   13c00:	moveq	r2, #0
   13c04:	subs	r7, r0, #0
   13c08:	str	r2, [sp, #16]
   13c0c:	str	r3, [sp, #12]
   13c10:	ble	13e74 <__printf_chk@plt+0x2adc>
   13c14:	ldr	r3, [r4]
   13c18:	mov	r2, #0
   13c1c:	cmp	r3, r2
   13c20:	str	r2, [r4, #12]
   13c24:	beq	13d10 <__printf_chk@plt+0x2978>
   13c28:	ldr	r2, [r4, #16]
   13c2c:	cmp	r2, #0
   13c30:	beq	13d1c <__printf_chk@plt+0x2984>
   13c34:	ldr	r5, [r4, #20]
   13c38:	cmp	r5, #0
   13c3c:	beq	13d64 <__printf_chk@plt+0x29cc>
   13c40:	ldrb	r3, [r5]
   13c44:	cmp	r3, #0
   13c48:	beq	13d64 <__printf_chk@plt+0x29cc>
   13c4c:	ldr	r3, [sp, #12]
   13c50:	cmp	r3, #0
   13c54:	beq	13cb0 <__printf_chk@plt+0x2918>
   13c58:	ldr	r3, [r4]
   13c5c:	ldr	r2, [sp, #8]
   13c60:	str	r3, [sp, #20]
   13c64:	ldr	r2, [r2, r3, lsl #2]
   13c68:	lsl	r3, r3, #2
   13c6c:	str	r3, [sp, #48]	; 0x30
   13c70:	ldrb	r1, [r2, #1]
   13c74:	str	r2, [sp, #32]
   13c78:	mov	r3, r2
   13c7c:	cmp	r1, #45	; 0x2d
   13c80:	str	r1, [sp, #28]
   13c84:	beq	140f4 <__printf_chk@plt+0x2d5c>
   13c88:	ldr	r2, [sp, #100]	; 0x64
   13c8c:	cmp	r2, #0
   13c90:	beq	13cb0 <__printf_chk@plt+0x2918>
   13c94:	ldrb	r3, [r3, #2]
   13c98:	cmp	r3, #0
   13c9c:	bne	140f4 <__printf_chk@plt+0x2d5c>
   13ca0:	mov	r0, r9
   13ca4:	bl	1138c <strchr@plt>
   13ca8:	cmp	r0, #0
   13cac:	beq	140f4 <__printf_chk@plt+0x2d5c>
   13cb0:	add	r6, r5, #1
   13cb4:	str	r6, [r4, #20]
   13cb8:	ldrb	r8, [r5]
   13cbc:	mov	r0, r9
   13cc0:	mov	r1, r8
   13cc4:	bl	1138c <strchr@plt>
   13cc8:	ldrb	r2, [r5, #1]
   13ccc:	mov	r3, r8
   13cd0:	cmp	r2, #0
   13cd4:	ldreq	r2, [r4]
   13cd8:	addeq	r2, r2, #1
   13cdc:	streq	r2, [r4]
   13ce0:	cmp	r8, #58	; 0x3a
   13ce4:	cmpne	r0, #0
   13ce8:	beq	1424c <__printf_chk@plt+0x2eb4>
   13cec:	ldrb	r1, [r0]
   13cf0:	ldrb	r2, [r0, #1]
   13cf4:	cmp	r1, #87	; 0x57
   13cf8:	beq	13f24 <__printf_chk@plt+0x2b8c>
   13cfc:	cmp	r2, #58	; 0x3a
   13d00:	beq	140b0 <__printf_chk@plt+0x2d18>
   13d04:	mov	r0, r3
   13d08:	add	sp, sp, #60	; 0x3c
   13d0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d10:	mov	r2, #1
   13d14:	mov	r3, r2
   13d18:	str	r2, [r4]
   13d1c:	ldr	r2, [sp, #104]	; 0x68
   13d20:	str	r3, [r4, #36]	; 0x24
   13d24:	cmp	r2, #0
   13d28:	mov	r2, #0
   13d2c:	str	r3, [r4, #32]
   13d30:	str	r2, [r4, #20]
   13d34:	beq	13e20 <__printf_chk@plt+0x2a88>
   13d38:	mov	r3, #1
   13d3c:	str	r3, [r4, #28]
   13d40:	ldrb	r1, [r9]
   13d44:	cmp	r1, #45	; 0x2d
   13d48:	beq	1420c <__printf_chk@plt+0x2e74>
   13d4c:	cmp	r1, #43	; 0x2b
   13d50:	strne	r2, [r4, #24]
   13d54:	strne	r3, [r4, #16]
   13d58:	addeq	r9, r9, #1
   13d5c:	streq	r2, [r4, #24]
   13d60:	streq	r3, [r4, #16]
   13d64:	ldr	r6, [r4]
   13d68:	ldr	r3, [r4, #36]	; 0x24
   13d6c:	cmp	r3, r6
   13d70:	ldr	r3, [r4, #32]
   13d74:	strgt	r6, [r4, #36]	; 0x24
   13d78:	cmp	r6, r3
   13d7c:	ldr	r3, [r4, #24]
   13d80:	strlt	r6, [r4, #32]
   13d84:	cmp	r3, #1
   13d88:	beq	13e7c <__printf_chk@plt+0x2ae4>
   13d8c:	cmp	r7, r6
   13d90:	beq	13e64 <__printf_chk@plt+0x2acc>
   13d94:	ldr	r8, [sp, #8]
   13d98:	ldr	r1, [pc, #2528]	; 14780 <__printf_chk@plt+0x33e8>
   13d9c:	ldr	r5, [r8, r6, lsl #2]
   13da0:	mov	r0, r5
   13da4:	bl	112d8 <strcmp@plt>
   13da8:	cmp	r0, #0
   13dac:	bne	13dec <__printf_chk@plt+0x2a54>
   13db0:	ldr	r3, [r4, #32]
   13db4:	ldr	r2, [r4, #36]	; 0x24
   13db8:	add	r6, r6, #1
   13dbc:	cmp	r3, r2
   13dc0:	str	r6, [r4]
   13dc4:	beq	142d0 <__printf_chk@plt+0x2f38>
   13dc8:	cmp	r6, r2
   13dcc:	beq	13de0 <__printf_chk@plt+0x2a48>
   13dd0:	mov	r0, r8
   13dd4:	mov	r1, r4
   13dd8:	bl	13b18 <__printf_chk@plt+0x2780>
   13ddc:	ldr	r3, [r4, #32]
   13de0:	str	r7, [r4, #36]	; 0x24
   13de4:	str	r7, [r4]
   13de8:	b	13e6c <__printf_chk@plt+0x2ad4>
   13dec:	ldrb	r3, [r5]
   13df0:	cmp	r3, #45	; 0x2d
   13df4:	beq	13ef0 <__printf_chk@plt+0x2b58>
   13df8:	ldr	r3, [r4, #24]
   13dfc:	cmp	r3, #0
   13e00:	beq	13e74 <__printf_chk@plt+0x2adc>
   13e04:	add	r6, r6, #1
   13e08:	mov	r3, #1
   13e0c:	mov	r0, r3
   13e10:	str	r6, [r4]
   13e14:	str	r5, [r4, #12]
   13e18:	add	sp, sp, #60	; 0x3c
   13e1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e20:	ldr	r0, [pc, #2396]	; 14784 <__printf_chk@plt+0x33ec>
   13e24:	bl	11368 <getenv@plt>
   13e28:	cmp	r0, #0
   13e2c:	beq	14078 <__printf_chk@plt+0x2ce0>
   13e30:	mov	r3, #1
   13e34:	str	r3, [r4, #28]
   13e38:	ldrb	r3, [r9]
   13e3c:	ldr	r5, [r4, #20]
   13e40:	cmp	r3, #45	; 0x2d
   13e44:	beq	140e4 <__printf_chk@plt+0x2d4c>
   13e48:	cmp	r3, #43	; 0x2b
   13e4c:	ldrne	r3, [sp, #104]	; 0x68
   13e50:	strne	r3, [r4, #24]
   13e54:	beq	140a0 <__printf_chk@plt+0x2d08>
   13e58:	mov	r3, #1
   13e5c:	str	r3, [r4, #16]
   13e60:	b	13c38 <__printf_chk@plt+0x28a0>
   13e64:	ldr	r7, [r4, #36]	; 0x24
   13e68:	ldr	r3, [r4, #32]
   13e6c:	cmp	r7, r3
   13e70:	strne	r3, [r4]
   13e74:	mvn	r3, #0
   13e78:	b	13d04 <__printf_chk@plt+0x296c>
   13e7c:	ldrd	r2, [r4, #32]
   13e80:	cmp	r2, r3
   13e84:	beq	14068 <__printf_chk@plt+0x2cd0>
   13e88:	cmp	r6, r3
   13e8c:	beq	13ea0 <__printf_chk@plt+0x2b08>
   13e90:	mov	r1, r4
   13e94:	ldr	r0, [sp, #8]
   13e98:	bl	13b18 <__printf_chk@plt+0x2780>
   13e9c:	ldr	r3, [r4]
   13ea0:	cmp	r7, r3
   13ea4:	ble	14220 <__printf_chk@plt+0x2e88>
   13ea8:	sub	r1, r3, #-1073741823	; 0xc0000001
   13eac:	ldr	r2, [sp, #8]
   13eb0:	add	r1, r2, r1, lsl #2
   13eb4:	b	13ec8 <__printf_chk@plt+0x2b30>
   13eb8:	add	r3, r3, #1
   13ebc:	cmp	r3, r7
   13ec0:	str	r3, [r4]
   13ec4:	beq	14220 <__printf_chk@plt+0x2e88>
   13ec8:	ldr	r2, [r1, #4]!
   13ecc:	ldrb	r0, [r2]
   13ed0:	cmp	r0, #45	; 0x2d
   13ed4:	bne	13eb8 <__printf_chk@plt+0x2b20>
   13ed8:	ldrb	r2, [r2, #1]
   13edc:	cmp	r2, #0
   13ee0:	beq	13eb8 <__printf_chk@plt+0x2b20>
   13ee4:	ldr	r6, [r4]
   13ee8:	str	r3, [r4, #36]	; 0x24
   13eec:	b	13d8c <__printf_chk@plt+0x29f4>
   13ef0:	ldrb	r3, [r5, #1]
   13ef4:	cmp	r3, #0
   13ef8:	beq	13df8 <__printf_chk@plt+0x2a60>
   13efc:	sub	r0, r3, #45	; 0x2d
   13f00:	ldr	r3, [sp, #12]
   13f04:	clz	r0, r0
   13f08:	cmp	r3, #0
   13f0c:	lsr	r0, r0, #5
   13f10:	moveq	r0, #0
   13f14:	add	r0, r0, #1
   13f18:	add	r5, r5, r0
   13f1c:	str	r5, [r4, #20]
   13f20:	b	13c4c <__printf_chk@plt+0x28b4>
   13f24:	cmp	r2, #59	; 0x3b
   13f28:	bne	13cfc <__printf_chk@plt+0x2964>
   13f2c:	ldrb	r2, [r5, #1]
   13f30:	ldr	r3, [r4]
   13f34:	cmp	r2, #0
   13f38:	beq	14444 <__printf_chk@plt+0x30ac>
   13f3c:	add	r3, r3, #1
   13f40:	str	r3, [r4]
   13f44:	str	r6, [r4, #12]
   13f48:	str	r6, [r4, #20]
   13f4c:	ldrb	r5, [r6]
   13f50:	cmp	r5, #0
   13f54:	cmpne	r5, #61	; 0x3d
   13f58:	beq	14640 <__printf_chk@plt+0x32a8>
   13f5c:	mov	r3, r6
   13f60:	ldrb	r5, [r3, #1]!
   13f64:	cmp	r5, #0
   13f68:	cmpne	r5, #61	; 0x3d
   13f6c:	bne	13f60 <__printf_chk@plt+0x2bc8>
   13f70:	str	r3, [sp, #20]
   13f74:	ldr	sl, [sp, #12]
   13f78:	ldr	r3, [sl]
   13f7c:	cmp	r3, #0
   13f80:	beq	14668 <__printf_chk@plt+0x32d0>
   13f84:	ldr	r2, [sp, #20]
   13f88:	mov	r8, #0
   13f8c:	str	r5, [sp, #24]
   13f90:	str	r7, [sp, #28]
   13f94:	str	r4, [sp, #108]	; 0x6c
   13f98:	sub	fp, r2, r6
   13f9c:	mov	r5, r8
   13fa0:	mov	r7, r8
   13fa4:	mov	r4, r3
   13fa8:	str	r8, [sp, #12]
   13fac:	mov	r2, fp
   13fb0:	mov	r1, r6
   13fb4:	mov	r0, r4
   13fb8:	bl	110a4 <strncmp@plt>
   13fbc:	cmp	r0, #0
   13fc0:	mov	r0, r4
   13fc4:	bne	13fe4 <__printf_chk@plt+0x2c4c>
   13fc8:	bl	1126c <strlen@plt>
   13fcc:	cmp	r0, fp
   13fd0:	beq	1458c <__printf_chk@plt+0x31f4>
   13fd4:	cmp	r5, #0
   13fd8:	moveq	r5, sl
   13fdc:	movne	r7, #1
   13fe0:	streq	r8, [sp, #12]
   13fe4:	ldr	r4, [sl, #16]!
   13fe8:	add	r8, r8, #1
   13fec:	cmp	r4, #0
   13ff0:	bne	13fac <__printf_chk@plt+0x2c14>
   13ff4:	mov	r3, r7
   13ff8:	cmp	r3, #0
   13ffc:	mov	r8, r5
   14000:	ldr	r7, [sp, #28]
   14004:	ldr	r5, [sp, #24]
   14008:	ldr	r4, [sp, #108]	; 0x6c
   1400c:	bne	145dc <__printf_chk@plt+0x3244>
   14010:	cmp	r8, #0
   14014:	beq	14668 <__printf_chk@plt+0x32d0>
   14018:	cmp	r5, #0
   1401c:	ldr	r3, [r8, #4]
   14020:	beq	1453c <__printf_chk@plt+0x31a4>
   14024:	cmp	r3, #0
   14028:	beq	14688 <__printf_chk@plt+0x32f0>
   1402c:	ldr	r3, [sp, #20]
   14030:	add	r3, r3, #1
   14034:	str	r3, [r4, #12]
   14038:	mov	r0, r6
   1403c:	bl	1126c <strlen@plt>
   14040:	ldr	r3, [sp, #96]	; 0x60
   14044:	cmp	r3, #0
   14048:	ldrne	r2, [sp, #12]
   1404c:	add	r0, r6, r0
   14050:	str	r0, [r4, #20]
   14054:	strne	r2, [r3]
   14058:	ldrd	r2, [r8, #8]
   1405c:	cmp	r2, #0
   14060:	bne	142c4 <__printf_chk@plt+0x2f2c>
   14064:	b	13d04 <__printf_chk@plt+0x296c>
   14068:	cmp	r6, r3
   1406c:	strne	r6, [r4, #32]
   14070:	movne	r3, r6
   14074:	b	13ea0 <__printf_chk@plt+0x2b08>
   14078:	ldr	r3, [sp, #104]	; 0x68
   1407c:	ldr	r5, [r4, #20]
   14080:	str	r3, [r4, #28]
   14084:	ldrb	r3, [r9]
   14088:	cmp	r3, #45	; 0x2d
   1408c:	beq	140e4 <__printf_chk@plt+0x2d4c>
   14090:	cmp	r3, #43	; 0x2b
   14094:	movne	r3, #1
   14098:	strne	r3, [r4, #24]
   1409c:	bne	13e58 <__printf_chk@plt+0x2ac0>
   140a0:	mov	r3, #0
   140a4:	add	r9, r9, #1
   140a8:	str	r3, [r4, #24]
   140ac:	b	13e58 <__printf_chk@plt+0x2ac0>
   140b0:	ldrb	r1, [r0, #2]
   140b4:	ldrb	r2, [r5, #1]
   140b8:	cmp	r1, #58	; 0x3a
   140bc:	beq	143a4 <__printf_chk@plt+0x300c>
   140c0:	cmp	r2, #0
   140c4:	ldr	r2, [r4]
   140c8:	beq	143f8 <__printf_chk@plt+0x3060>
   140cc:	add	r2, r2, #1
   140d0:	str	r2, [r4]
   140d4:	str	r6, [r4, #12]
   140d8:	mov	r2, #0
   140dc:	str	r2, [r4, #20]
   140e0:	b	13d04 <__printf_chk@plt+0x296c>
   140e4:	mov	r3, #2
   140e8:	add	r9, r9, #1
   140ec:	str	r3, [r4, #24]
   140f0:	b	13e58 <__printf_chk@plt+0x2ac0>
   140f4:	ldrb	r3, [r5]
   140f8:	mov	fp, r5
   140fc:	cmp	r3, #0
   14100:	cmpne	r3, #61	; 0x3d
   14104:	str	r3, [sp, #52]	; 0x34
   14108:	beq	1411c <__printf_chk@plt+0x2d84>
   1410c:	ldrb	r3, [fp, #1]!
   14110:	cmp	r3, #0
   14114:	cmpne	r3, #61	; 0x3d
   14118:	bne	1410c <__printf_chk@plt+0x2d74>
   1411c:	ldr	r3, [sp, #12]
   14120:	ldr	r6, [r3]
   14124:	cmp	r6, #0
   14128:	beq	142f0 <__printf_chk@plt+0x2f58>
   1412c:	mov	sl, r3
   14130:	mov	r8, #0
   14134:	sub	r2, fp, r5
   14138:	mvn	r3, #0
   1413c:	str	r7, [sp, #40]	; 0x28
   14140:	str	r9, [sp, #44]	; 0x2c
   14144:	str	r4, [sp, #108]	; 0x6c
   14148:	mov	r9, sl
   1414c:	str	r3, [sp, #24]
   14150:	str	fp, [sp, #36]	; 0x24
   14154:	mov	r7, r2
   14158:	mov	sl, r8
   1415c:	mov	r4, r8
   14160:	b	14194 <__printf_chk@plt+0x2dfc>
   14164:	ldr	r3, [sp, #100]	; 0x64
   14168:	cmp	r3, #0
   1416c:	bne	14180 <__printf_chk@plt+0x2de8>
   14170:	ldr	r1, [sl, #4]
   14174:	ldr	r2, [r9, #4]
   14178:	cmp	r1, r2
   1417c:	beq	14228 <__printf_chk@plt+0x2e90>
   14180:	mov	r4, #1
   14184:	ldr	r6, [r9, #16]!
   14188:	add	r8, r8, #1
   1418c:	cmp	r6, #0
   14190:	beq	141dc <__printf_chk@plt+0x2e44>
   14194:	mov	r2, r7
   14198:	mov	r1, r5
   1419c:	mov	r0, r6
   141a0:	bl	110a4 <strncmp@plt>
   141a4:	cmp	r0, #0
   141a8:	bne	14184 <__printf_chk@plt+0x2dec>
   141ac:	mov	r0, r6
   141b0:	bl	1126c <strlen@plt>
   141b4:	cmp	r0, r7
   141b8:	beq	14264 <__printf_chk@plt+0x2ecc>
   141bc:	cmp	sl, #0
   141c0:	bne	14164 <__printf_chk@plt+0x2dcc>
   141c4:	mov	sl, r9
   141c8:	ldr	r6, [r9, #16]!
   141cc:	str	r8, [sp, #24]
   141d0:	cmp	r6, #0
   141d4:	add	r8, r8, #1
   141d8:	bne	14194 <__printf_chk@plt+0x2dfc>
   141dc:	mov	r3, r4
   141e0:	cmp	r3, #0
   141e4:	ldr	fp, [sp, #36]	; 0x24
   141e8:	ldr	r7, [sp, #40]	; 0x28
   141ec:	ldr	r9, [sp, #44]	; 0x2c
   141f0:	ldr	r4, [sp, #108]	; 0x6c
   141f4:	bne	143c0 <__printf_chk@plt+0x3028>
   141f8:	cmp	sl, #0
   141fc:	beq	142f0 <__printf_chk@plt+0x2f58>
   14200:	ldr	r8, [sp, #24]
   14204:	mov	r6, sl
   14208:	b	14278 <__printf_chk@plt+0x2ee0>
   1420c:	mov	r2, #2
   14210:	add	r9, r9, #1
   14214:	str	r3, [r4, #16]
   14218:	str	r2, [r4, #24]
   1421c:	b	13d64 <__printf_chk@plt+0x29cc>
   14220:	mov	r6, r3
   14224:	b	13ee8 <__printf_chk@plt+0x2b50>
   14228:	ldr	r1, [sl, #8]
   1422c:	ldr	r2, [r9, #8]
   14230:	cmp	r1, r2
   14234:	bne	14180 <__printf_chk@plt+0x2de8>
   14238:	ldr	r1, [sl, #12]
   1423c:	ldr	r2, [r9, #12]
   14240:	cmp	r1, r2
   14244:	movne	r4, #1
   14248:	b	14184 <__printf_chk@plt+0x2dec>
   1424c:	ldr	r3, [sp, #16]
   14250:	cmp	r3, #0
   14254:	bne	14378 <__printf_chk@plt+0x2fe0>
   14258:	str	r8, [r4, #8]
   1425c:	mov	r3, #63	; 0x3f
   14260:	b	13d04 <__printf_chk@plt+0x296c>
   14264:	mov	r6, r9
   14268:	ldr	fp, [sp, #36]	; 0x24
   1426c:	ldr	r7, [sp, #40]	; 0x28
   14270:	ldr	r9, [sp, #44]	; 0x2c
   14274:	ldr	r4, [sp, #108]	; 0x6c
   14278:	ldr	r3, [sp, #20]
   1427c:	ldr	r2, [r6, #4]
   14280:	add	r3, r3, #1
   14284:	str	r3, [r4]
   14288:	ldrb	r1, [fp]
   1428c:	cmp	r1, #0
   14290:	bne	142dc <__printf_chk@plt+0x2f44>
   14294:	cmp	r2, #1
   14298:	beq	14418 <__printf_chk@plt+0x3080>
   1429c:	mov	r0, r5
   142a0:	bl	1126c <strlen@plt>
   142a4:	ldr	r3, [sp, #96]	; 0x60
   142a8:	cmp	r3, #0
   142ac:	add	r0, r5, r0
   142b0:	str	r0, [r4, #20]
   142b4:	strne	r8, [r3]
   142b8:	ldrd	r2, [r6, #8]
   142bc:	cmp	r2, #0
   142c0:	beq	13d04 <__printf_chk@plt+0x296c>
   142c4:	str	r3, [r2]
   142c8:	mov	r3, #0
   142cc:	b	13d04 <__printf_chk@plt+0x296c>
   142d0:	mov	r3, r6
   142d4:	str	r6, [r4, #32]
   142d8:	b	13de0 <__printf_chk@plt+0x2a48>
   142dc:	cmp	r2, #0
   142e0:	beq	14490 <__printf_chk@plt+0x30f8>
   142e4:	add	r3, fp, #1
   142e8:	str	r3, [r4, #12]
   142ec:	b	1429c <__printf_chk@plt+0x2f04>
   142f0:	ldr	r3, [sp, #100]	; 0x64
   142f4:	cmp	r3, #0
   142f8:	beq	144fc <__printf_chk@plt+0x3164>
   142fc:	ldr	r3, [sp, #28]
   14300:	cmp	r3, #45	; 0x2d
   14304:	beq	1460c <__printf_chk@plt+0x3274>
   14308:	ldr	r1, [sp, #52]	; 0x34
   1430c:	mov	r0, r9
   14310:	bl	1138c <strchr@plt>
   14314:	cmp	r0, #0
   14318:	bne	13cb0 <__printf_chk@plt+0x2918>
   1431c:	ldr	r3, [sp, #16]
   14320:	cmp	r3, #0
   14324:	beq	14354 <__printf_chk@plt+0x2fbc>
   14328:	ldr	r3, [sp, #32]
   1432c:	ldr	r1, [pc, #1108]	; 14788 <__printf_chk@plt+0x33f0>
   14330:	ldr	r2, [sp, #8]
   14334:	ldrb	r3, [r3]
   14338:	str	r5, [sp]
   1433c:	ldr	r0, [r1]
   14340:	ldr	r2, [r2]
   14344:	ldr	r1, [pc, #1088]	; 1478c <__printf_chk@plt+0x33f4>
   14348:	bl	1625c <__printf_chk@plt+0x4ec4>
   1434c:	ldr	r3, [r4]
   14350:	str	r3, [sp, #20]
   14354:	ldr	r3, [sp, #20]
   14358:	ldr	r2, [pc, #1072]	; 14790 <__printf_chk@plt+0x33f8>
   1435c:	add	r1, r3, #1
   14360:	mov	r3, #0
   14364:	str	r3, [r4, #8]
   14368:	str	r1, [r4]
   1436c:	str	r2, [r4, #20]
   14370:	mov	r3, #63	; 0x3f
   14374:	b	13d04 <__printf_chk@plt+0x296c>
   14378:	ldr	r1, [r4, #28]
   1437c:	ldr	r3, [pc, #1028]	; 14788 <__printf_chk@plt+0x33f0>
   14380:	ldr	r2, [sp, #8]
   14384:	cmp	r1, #0
   14388:	ldr	r0, [r3]
   1438c:	ldr	r2, [r2]
   14390:	mov	r3, r8
   14394:	ldrne	r1, [pc, #1016]	; 14794 <__printf_chk@plt+0x33fc>
   14398:	ldreq	r1, [pc, #1016]	; 14798 <__printf_chk@plt+0x3400>
   1439c:	bl	1625c <__printf_chk@plt+0x4ec4>
   143a0:	b	14258 <__printf_chk@plt+0x2ec0>
   143a4:	cmp	r2, #0
   143a8:	strne	r6, [r4, #12]
   143ac:	ldrne	r2, [r4]
   143b0:	streq	r2, [r4, #12]
   143b4:	addne	r2, r2, #1
   143b8:	strne	r2, [r4]
   143bc:	b	140d8 <__printf_chk@plt+0x2d40>
   143c0:	ldr	r3, [sp, #16]
   143c4:	cmp	r3, #0
   143c8:	bne	14464 <__printf_chk@plt+0x30cc>
   143cc:	mov	r0, r5
   143d0:	bl	1126c <strlen@plt>
   143d4:	ldr	r3, [sp, #20]
   143d8:	add	r2, r3, #1
   143dc:	mov	r3, #0
   143e0:	str	r3, [r4, #8]
   143e4:	str	r2, [r4]
   143e8:	mov	r3, #63	; 0x3f
   143ec:	add	r0, r5, r0
   143f0:	str	r0, [r4, #20]
   143f4:	b	13d04 <__printf_chk@plt+0x296c>
   143f8:	cmp	r7, r2
   143fc:	beq	14568 <__printf_chk@plt+0x31d0>
   14400:	ldr	r1, [sp, #8]
   14404:	ldr	r1, [r1, r2, lsl #2]
   14408:	add	r2, r2, #1
   1440c:	str	r1, [r4, #12]
   14410:	str	r2, [r4]
   14414:	b	140d8 <__printf_chk@plt+0x2d40>
   14418:	cmp	r3, r7
   1441c:	bge	145a4 <__printf_chk@plt+0x320c>
   14420:	ldr	r2, [sp, #48]	; 0x30
   14424:	ldr	r3, [sp, #8]
   14428:	add	r3, r3, r2
   1442c:	ldr	r2, [sp, #20]
   14430:	ldr	r3, [r3, #4]
   14434:	add	r2, r2, #2
   14438:	str	r2, [r4]
   1443c:	str	r3, [r4, #12]
   14440:	b	1429c <__printf_chk@plt+0x2f04>
   14444:	cmp	r7, r3
   14448:	beq	1461c <__printf_chk@plt+0x3284>
   1444c:	ldr	r2, [sp, #8]
   14450:	ldr	r6, [r2, r3, lsl #2]
   14454:	add	r3, r3, #1
   14458:	str	r6, [r4, #12]
   1445c:	str	r3, [r4]
   14460:	b	13f48 <__printf_chk@plt+0x2bb0>
   14464:	ldr	r1, [pc, #796]	; 14788 <__printf_chk@plt+0x33f0>
   14468:	ldr	r2, [sp, #8]
   1446c:	ldr	r3, [sp, #32]
   14470:	ldr	r0, [r1]
   14474:	ldr	r2, [r2]
   14478:	ldr	r1, [pc, #796]	; 1479c <__printf_chk@plt+0x3404>
   1447c:	bl	1625c <__printf_chk@plt+0x4ec4>
   14480:	ldr	r3, [r4]
   14484:	ldr	r5, [r4, #20]
   14488:	str	r3, [sp, #20]
   1448c:	b	143cc <__printf_chk@plt+0x3034>
   14490:	ldr	r3, [sp, #16]
   14494:	cmp	r3, #0
   14498:	beq	144dc <__printf_chk@plt+0x3144>
   1449c:	ldr	r2, [sp, #8]
   144a0:	ldr	r3, [sp, #20]
   144a4:	ldr	r1, [r2, r3, lsl #2]
   144a8:	ldr	r3, [pc, #728]	; 14788 <__printf_chk@plt+0x33f0>
   144ac:	ldr	r2, [r2]
   144b0:	ldrb	ip, [r1, #1]
   144b4:	ldr	r0, [r3]
   144b8:	ldr	r3, [r6]
   144bc:	cmp	ip, #45	; 0x2d
   144c0:	beq	14678 <__printf_chk@plt+0x32e0>
   144c4:	ldrb	r1, [r1]
   144c8:	str	r3, [sp]
   144cc:	mov	r3, r1
   144d0:	ldr	r1, [pc, #712]	; 147a0 <__printf_chk@plt+0x3408>
   144d4:	bl	1625c <__printf_chk@plt+0x4ec4>
   144d8:	ldr	r5, [r4, #20]
   144dc:	mov	r0, r5
   144e0:	bl	1126c <strlen@plt>
   144e4:	ldr	r2, [r6, #12]
   144e8:	mov	r3, #63	; 0x3f
   144ec:	str	r2, [r4, #8]
   144f0:	add	r0, r5, r0
   144f4:	str	r0, [r4, #20]
   144f8:	b	13d04 <__printf_chk@plt+0x296c>
   144fc:	ldr	r3, [sp, #16]
   14500:	cmp	r3, #0
   14504:	beq	14354 <__printf_chk@plt+0x2fbc>
   14508:	ldr	r3, [sp, #28]
   1450c:	cmp	r3, #45	; 0x2d
   14510:	bne	14328 <__printf_chk@plt+0x2f90>
   14514:	ldr	r1, [pc, #620]	; 14788 <__printf_chk@plt+0x33f0>
   14518:	ldr	r2, [sp, #8]
   1451c:	mov	r3, r5
   14520:	ldr	r0, [r1]
   14524:	ldr	r2, [r2]
   14528:	ldr	r1, [pc, #628]	; 147a4 <__printf_chk@plt+0x340c>
   1452c:	bl	1625c <__printf_chk@plt+0x4ec4>
   14530:	ldr	r3, [r4]
   14534:	str	r3, [sp, #20]
   14538:	b	14354 <__printf_chk@plt+0x2fbc>
   1453c:	cmp	r3, #1
   14540:	bne	14038 <__printf_chk@plt+0x2ca0>
   14544:	ldr	r3, [r4]
   14548:	cmp	r3, r7
   1454c:	bge	146fc <__printf_chk@plt+0x3364>
   14550:	ldr	r2, [sp, #8]
   14554:	ldr	r2, [r2, r3, lsl #2]
   14558:	add	r3, r3, #1
   1455c:	str	r2, [r4, #12]
   14560:	str	r3, [r4]
   14564:	b	14038 <__printf_chk@plt+0x2ca0>
   14568:	ldr	r3, [sp, #16]
   1456c:	cmp	r3, #0
   14570:	bne	14648 <__printf_chk@plt+0x32b0>
   14574:	str	r8, [r4, #8]
   14578:	ldrb	r3, [r9]
   1457c:	cmp	r3, #58	; 0x3a
   14580:	moveq	r3, #58	; 0x3a
   14584:	movne	r3, #63	; 0x3f
   14588:	b	140d8 <__printf_chk@plt+0x2d40>
   1458c:	str	r8, [sp, #12]
   14590:	ldr	r5, [sp, #24]
   14594:	ldr	r7, [sp, #28]
   14598:	ldr	r4, [sp, #108]	; 0x6c
   1459c:	mov	r8, sl
   145a0:	b	14018 <__printf_chk@plt+0x2c80>
   145a4:	ldr	r3, [sp, #16]
   145a8:	cmp	r3, #0
   145ac:	bne	146ac <__printf_chk@plt+0x3314>
   145b0:	mov	r0, r5
   145b4:	bl	1126c <strlen@plt>
   145b8:	ldr	r3, [r6, #12]
   145bc:	str	r3, [r4, #8]
   145c0:	add	r0, r5, r0
   145c4:	str	r0, [r4, #20]
   145c8:	ldrb	r3, [r9]
   145cc:	cmp	r3, #58	; 0x3a
   145d0:	moveq	r3, #58	; 0x3a
   145d4:	bne	1425c <__printf_chk@plt+0x2ec4>
   145d8:	b	13d04 <__printf_chk@plt+0x296c>
   145dc:	ldr	r3, [sp, #16]
   145e0:	ldr	r5, [r4]
   145e4:	cmp	r3, #0
   145e8:	bne	146d4 <__printf_chk@plt+0x333c>
   145ec:	mov	r0, r6
   145f0:	bl	1126c <strlen@plt>
   145f4:	add	r5, r5, #1
   145f8:	str	r5, [r4]
   145fc:	mov	r3, #63	; 0x3f
   14600:	add	r0, r6, r0
   14604:	str	r0, [r4, #20]
   14608:	b	13d04 <__printf_chk@plt+0x296c>
   1460c:	ldr	r3, [sp, #16]
   14610:	cmp	r3, #0
   14614:	bne	14514 <__printf_chk@plt+0x317c>
   14618:	b	14354 <__printf_chk@plt+0x2fbc>
   1461c:	ldr	r3, [sp, #16]
   14620:	cmp	r3, #0
   14624:	bne	14718 <__printf_chk@plt+0x3380>
   14628:	str	r8, [r4, #8]
   1462c:	ldrb	r3, [r9]
   14630:	cmp	r3, #58	; 0x3a
   14634:	moveq	r3, #58	; 0x3a
   14638:	movne	r3, #63	; 0x3f
   1463c:	b	13d04 <__printf_chk@plt+0x296c>
   14640:	str	r6, [sp, #20]
   14644:	b	13f74 <__printf_chk@plt+0x2bdc>
   14648:	ldr	r3, [sp, #8]
   1464c:	ldr	r1, [pc, #308]	; 14788 <__printf_chk@plt+0x33f0>
   14650:	ldr	r2, [r3]
   14654:	ldr	r0, [r1]
   14658:	mov	r3, r8
   1465c:	ldr	r1, [pc, #324]	; 147a8 <__printf_chk@plt+0x3410>
   14660:	bl	1625c <__printf_chk@plt+0x4ec4>
   14664:	b	14574 <__printf_chk@plt+0x31dc>
   14668:	mov	r3, #0
   1466c:	str	r3, [r4, #20]
   14670:	mov	r3, #87	; 0x57
   14674:	b	13d04 <__printf_chk@plt+0x296c>
   14678:	ldr	r1, [pc, #300]	; 147ac <__printf_chk@plt+0x3414>
   1467c:	bl	1625c <__printf_chk@plt+0x4ec4>
   14680:	ldr	r5, [r4, #20]
   14684:	b	144dc <__printf_chk@plt+0x3144>
   14688:	ldr	r3, [sp, #16]
   1468c:	cmp	r3, #0
   14690:	bne	14738 <__printf_chk@plt+0x33a0>
   14694:	mov	r0, r6
   14698:	bl	1126c <strlen@plt>
   1469c:	mov	r3, #63	; 0x3f
   146a0:	add	r0, r6, r0
   146a4:	str	r0, [r4, #20]
   146a8:	b	13d04 <__printf_chk@plt+0x296c>
   146ac:	ldr	r2, [sp, #8]
   146b0:	ldr	r0, [sp, #20]
   146b4:	ldr	r1, [pc, #204]	; 14788 <__printf_chk@plt+0x33f0>
   146b8:	ldr	r3, [r2, r0, lsl #2]
   146bc:	ldr	r0, [r1]
   146c0:	ldr	r2, [r2]
   146c4:	ldr	r1, [pc, #228]	; 147b0 <__printf_chk@plt+0x3418>
   146c8:	bl	1625c <__printf_chk@plt+0x4ec4>
   146cc:	ldr	r5, [r4, #20]
   146d0:	b	145b0 <__printf_chk@plt+0x3218>
   146d4:	ldr	r2, [sp, #8]
   146d8:	ldr	r1, [pc, #168]	; 14788 <__printf_chk@plt+0x33f0>
   146dc:	ldr	r3, [r2, r5, lsl #2]
   146e0:	ldr	r0, [r1]
   146e4:	ldr	r2, [r2]
   146e8:	ldr	r1, [pc, #196]	; 147b4 <__printf_chk@plt+0x341c>
   146ec:	bl	1625c <__printf_chk@plt+0x4ec4>
   146f0:	ldr	r6, [r4, #20]
   146f4:	ldr	r5, [r4]
   146f8:	b	145ec <__printf_chk@plt+0x3254>
   146fc:	ldr	r2, [sp, #16]
   14700:	cmp	r2, #0
   14704:	bne	1475c <__printf_chk@plt+0x33c4>
   14708:	ldr	r5, [r4, #20]
   1470c:	mov	r0, r5
   14710:	bl	1126c <strlen@plt>
   14714:	b	145c0 <__printf_chk@plt+0x3228>
   14718:	ldr	r3, [sp, #8]
   1471c:	ldr	r1, [pc, #100]	; 14788 <__printf_chk@plt+0x33f0>
   14720:	ldr	r2, [r3]
   14724:	ldr	r0, [r1]
   14728:	mov	r3, r8
   1472c:	ldr	r1, [pc, #116]	; 147a8 <__printf_chk@plt+0x3410>
   14730:	bl	1625c <__printf_chk@plt+0x4ec4>
   14734:	b	14628 <__printf_chk@plt+0x3290>
   14738:	ldr	r1, [pc, #72]	; 14788 <__printf_chk@plt+0x33f0>
   1473c:	ldr	r2, [sp, #8]
   14740:	ldr	r3, [r8]
   14744:	ldr	r0, [r1]
   14748:	ldr	r2, [r2]
   1474c:	ldr	r1, [pc, #100]	; 147b8 <__printf_chk@plt+0x3420>
   14750:	bl	1625c <__printf_chk@plt+0x4ec4>
   14754:	ldr	r6, [r4, #20]
   14758:	b	14694 <__printf_chk@plt+0x32fc>
   1475c:	ldr	r0, [sp, #8]
   14760:	ldr	r1, [pc, #32]	; 14788 <__printf_chk@plt+0x33f0>
   14764:	sub	r3, r3, #-1073741823	; 0xc0000001
   14768:	ldr	r2, [r0]
   1476c:	ldr	r3, [r0, r3, lsl #2]
   14770:	ldr	r0, [r1]
   14774:	ldr	r1, [pc, #52]	; 147b0 <__printf_chk@plt+0x3418>
   14778:	bl	1625c <__printf_chk@plt+0x4ec4>
   1477c:	b	14708 <__printf_chk@plt+0x3370>
   14780:	andeq	r8, r1, r0, lsr lr
   14784:	andeq	r8, r1, r0, lsr #28
   14788:	andeq	sl, r2, r8, lsr #32
   1478c:	strdeq	r8, [r1], -ip
   14790:	andeq	r8, r1, ip, lsr #10
   14794:	andeq	r8, r1, ip, lsl pc
   14798:	andeq	r8, r1, r8, lsr pc
   1479c:	andeq	r8, r1, r4, lsr lr
   147a0:	andeq	r8, r1, r4, lsl #29
   147a4:	ldrdeq	r8, [r1], -ip
   147a8:	andeq	r8, r1, r4, asr pc
   147ac:	andeq	r8, r1, r4, asr lr
   147b0:			; <UNDEFINED> instruction: 0x00018eb4
   147b4:	andeq	r8, r1, ip, ror pc
   147b8:	andeq	r8, r1, r0, lsr #31
   147bc:	push	{r4, r5, r6, lr}
   147c0:	sub	sp, sp, #16
   147c4:	ldr	r5, [pc, #80]	; 1481c <__printf_chk@plt+0x3484>
   147c8:	ldr	ip, [sp, #32]
   147cc:	ldr	r6, [sp, #36]	; 0x24
   147d0:	str	ip, [sp]
   147d4:	ldr	ip, [sp, #40]	; 0x28
   147d8:	ldr	r4, [pc, #64]	; 14820 <__printf_chk@plt+0x3488>
   147dc:	ldr	lr, [r5]
   147e0:	stmib	sp, {r6, ip}
   147e4:	ldr	ip, [r5, #4]
   147e8:	str	r4, [sp, #12]
   147ec:	str	ip, [r4, #4]
   147f0:	str	lr, [r4]
   147f4:	bl	13bdc <__printf_chk@plt+0x2844>
   147f8:	ldr	r3, [pc, #36]	; 14824 <__printf_chk@plt+0x348c>
   147fc:	ldr	ip, [r4]
   14800:	ldr	r1, [r4, #8]
   14804:	ldr	r2, [r4, #12]
   14808:	str	ip, [r5]
   1480c:	str	r1, [r5, #8]
   14810:	str	r2, [r3]
   14814:	add	sp, sp, #16
   14818:	pop	{r4, r5, r6, pc}
   1481c:	andeq	sl, r2, r8
   14820:	andeq	sl, r2, r8, asr #4
   14824:	andeq	sl, r2, r8, asr #27
   14828:	push	{lr}		; (str lr, [sp, #-4]!)
   1482c:	mov	r3, #0
   14830:	sub	sp, sp, #20
   14834:	mov	ip, #1
   14838:	str	r3, [sp]
   1483c:	stmib	sp, {r3, ip}
   14840:	bl	147bc <__printf_chk@plt+0x3424>
   14844:	add	sp, sp, #20
   14848:	pop	{pc}		; (ldr pc, [sp], #4)
   1484c:	push	{lr}		; (str lr, [sp, #-4]!)
   14850:	sub	sp, sp, #20
   14854:	mov	ip, #0
   14858:	ldr	lr, [sp, #24]
   1485c:	str	ip, [sp, #8]
   14860:	str	lr, [sp]
   14864:	str	ip, [sp, #4]
   14868:	bl	147bc <__printf_chk@plt+0x3424>
   1486c:	add	sp, sp, #20
   14870:	pop	{pc}		; (ldr pc, [sp], #4)
   14874:	push	{lr}		; (str lr, [sp, #-4]!)
   14878:	sub	sp, sp, #20
   1487c:	ldr	ip, [sp, #24]
   14880:	ldr	lr, [sp, #28]
   14884:	str	ip, [sp]
   14888:	mov	ip, #0
   1488c:	str	lr, [sp, #12]
   14890:	str	ip, [sp, #8]
   14894:	str	ip, [sp, #4]
   14898:	bl	13bdc <__printf_chk@plt+0x2844>
   1489c:	add	sp, sp, #20
   148a0:	pop	{pc}		; (ldr pc, [sp], #4)
   148a4:	push	{lr}		; (str lr, [sp, #-4]!)
   148a8:	sub	sp, sp, #20
   148ac:	mov	lr, #0
   148b0:	ldr	ip, [sp, #24]
   148b4:	str	ip, [sp]
   148b8:	mov	ip, #1
   148bc:	stmib	sp, {ip, lr}
   148c0:	bl	147bc <__printf_chk@plt+0x3424>
   148c4:	add	sp, sp, #20
   148c8:	pop	{pc}		; (ldr pc, [sp], #4)
   148cc:	push	{lr}		; (str lr, [sp, #-4]!)
   148d0:	sub	sp, sp, #20
   148d4:	ldr	lr, [sp, #24]
   148d8:	ldr	ip, [sp, #28]
   148dc:	str	lr, [sp]
   148e0:	str	ip, [sp, #12]
   148e4:	mov	lr, #0
   148e8:	mov	ip, #1
   148ec:	stmib	sp, {ip, lr}
   148f0:	bl	13bdc <__printf_chk@plt+0x2844>
   148f4:	add	sp, sp, #20
   148f8:	pop	{pc}		; (ldr pc, [sp], #4)
   148fc:	subs	r2, r0, #0
   14900:	bge	14950 <__printf_chk@plt+0x35b8>
   14904:	push	{lr}		; (str lr, [sp, #-4]!)
   14908:	ldr	r1, [pc, #108]	; 1497c <__printf_chk@plt+0x35e4>
   1490c:	ldr	lr, [pc, #108]	; 14980 <__printf_chk@plt+0x35e8>
   14910:	b	14918 <__printf_chk@plt+0x3580>
   14914:	mov	r1, ip
   14918:	smull	r3, r0, lr, r2
   1491c:	asr	r3, r2, #31
   14920:	rsb	r3, r3, r0, asr #2
   14924:	sub	ip, r1, #1
   14928:	add	r0, r3, r3, lsl #2
   1492c:	sub	r0, r2, r0, lsl #1
   14930:	rsb	r0, r0, #48	; 0x30
   14934:	subs	r2, r3, #0
   14938:	strb	r0, [r1, #-1]
   1493c:	bne	14914 <__printf_chk@plt+0x357c>
   14940:	mov	r3, #45	; 0x2d
   14944:	sub	r0, r1, #2
   14948:	strb	r3, [ip, #-1]
   1494c:	pop	{pc}		; (ldr pc, [sp], #4)
   14950:	ldr	r0, [pc, #36]	; 1497c <__printf_chk@plt+0x35e4>
   14954:	ldr	ip, [pc, #40]	; 14984 <__printf_chk@plt+0x35ec>
   14958:	umull	r1, r3, ip, r2
   1495c:	lsr	r3, r3, #3
   14960:	add	r1, r3, r3, lsl #2
   14964:	sub	r1, r2, r1, lsl #1
   14968:	add	r1, r1, #48	; 0x30
   1496c:	subs	r2, r3, #0
   14970:	strb	r1, [r0, #-1]!
   14974:	bne	14958 <__printf_chk@plt+0x35c0>
   14978:	bx	lr
   1497c:	andeq	sl, r2, r4, lsl #5
   14980:	strbtvs	r6, [r6], -r7, ror #12
   14984:	stclgt	12, cr12, [ip], {205}	; 0xcd
   14988:	mov	r1, r0
   1498c:	ldr	ip, [pc, #40]	; 149bc <__printf_chk@plt+0x3624>
   14990:	ldr	r0, [pc, #40]	; 149c0 <__printf_chk@plt+0x3628>
   14994:	umull	r3, r2, ip, r1
   14998:	cmp	r1, #9
   1499c:	lsr	r2, r2, #3
   149a0:	add	r3, r2, r2, lsl #2
   149a4:	sub	r3, r1, r3, lsl #1
   149a8:	add	r3, r3, #48	; 0x30
   149ac:	mov	r1, r2
   149b0:	strb	r3, [r0, #-1]!
   149b4:	bhi	14994 <__printf_chk@plt+0x35fc>
   149b8:	bx	lr
   149bc:	stclgt	12, cr12, [ip], {205}	; 0xcd
   149c0:	muleq	r2, ip, r2
   149c4:	push	{r4, r5, r6, lr}
   149c8:	sub	sp, sp, #16
   149cc:	ldr	r5, [pc, #440]	; 14b8c <__printf_chk@plt+0x37f4>
   149d0:	ldrb	r3, [r0]
   149d4:	ldr	r2, [r5]
   149d8:	cmp	r3, #32
   149dc:	str	r2, [sp, #12]
   149e0:	bne	149f0 <__printf_chk@plt+0x3658>
   149e4:	ldrb	r3, [r0, #1]!
   149e8:	cmp	r3, #32
   149ec:	beq	149e4 <__printf_chk@plt+0x364c>
   149f0:	ldr	r1, [pc, #408]	; 14b90 <__printf_chk@plt+0x37f8>
   149f4:	ldrb	r2, [r1, r3]
   149f8:	cmp	r2, #0
   149fc:	beq	14b50 <__printf_chk@plt+0x37b8>
   14a00:	ldrb	r3, [r0]
   14a04:	mov	r4, #0
   14a08:	sub	r2, r3, #48	; 0x30
   14a0c:	ldrb	r3, [r0, #1]!
   14a10:	add	r4, r4, r4, lsl #2
   14a14:	add	r4, r2, r4, lsl #1
   14a18:	ldrb	r2, [r1, r3]
   14a1c:	cmp	r2, #0
   14a20:	bne	14a08 <__printf_chk@plt+0x3670>
   14a24:	and	r1, r3, #223	; 0xdf
   14a28:	cmp	r3, #10
   14a2c:	cmpne	r1, #0
   14a30:	beq	14a3c <__printf_chk@plt+0x36a4>
   14a34:	b	14b50 <__printf_chk@plt+0x37b8>
   14a38:	ldrb	r3, [r0, #1]!
   14a3c:	cmp	r3, #32
   14a40:	beq	14a38 <__printf_chk@plt+0x36a0>
   14a44:	sub	r2, r3, #10
   14a48:	cmp	r3, #0
   14a4c:	clz	r2, r2
   14a50:	lsr	r2, r2, #5
   14a54:	movne	r3, r2
   14a58:	moveq	r3, #1
   14a5c:	cmp	r3, #0
   14a60:	bne	14b28 <__printf_chk@plt+0x3790>
   14a64:	ldrb	r1, [r0]
   14a68:	cmp	r1, #92	; 0x5c
   14a6c:	cmpne	r1, #10
   14a70:	moveq	r2, #1
   14a74:	movne	r2, #0
   14a78:	tst	r1, #223	; 0xdf
   14a7c:	moveq	r2, #1
   14a80:	cmp	r2, #0
   14a84:	bne	14b70 <__printf_chk@plt+0x37d8>
   14a88:	mov	r6, r0
   14a8c:	ldrb	r2, [r6, #1]!
   14a90:	cmp	r2, #92	; 0x5c
   14a94:	cmpne	r2, #10
   14a98:	moveq	r3, #1
   14a9c:	movne	r3, #0
   14aa0:	tst	r2, #223	; 0xdf
   14aa4:	moveq	r3, #1
   14aa8:	cmp	r3, #0
   14aac:	beq	14a8c <__printf_chk@plt+0x36f4>
   14ab0:	sub	r2, r6, r0
   14ab4:	mov	r1, r0
   14ab8:	mov	r0, sp
   14abc:	bl	154c0 <__printf_chk@plt+0x4128>
   14ac0:	ldrb	r3, [r6]
   14ac4:	cmp	r3, #32
   14ac8:	bne	14ad8 <__printf_chk@plt+0x3740>
   14acc:	ldrb	r3, [r6, #1]!
   14ad0:	cmp	r3, #32
   14ad4:	beq	14acc <__printf_chk@plt+0x3734>
   14ad8:	cmp	r3, #0
   14adc:	cmpne	r3, #10
   14ae0:	bne	14b68 <__printf_chk@plt+0x37d0>
   14ae4:	ldr	r3, [sp, #4]
   14ae8:	ldr	r2, [sp, #8]
   14aec:	cmp	r3, r2
   14af0:	bge	14b58 <__printf_chk@plt+0x37c0>
   14af4:	ldr	r2, [sp]
   14af8:	add	r0, r3, #1
   14afc:	mov	r1, #0
   14b00:	str	r0, [sp, #4]
   14b04:	strb	r1, [r2, r3]
   14b08:	ldr	r0, [sp]
   14b0c:	bl	15e68 <__printf_chk@plt+0x4ad0>
   14b10:	mov	r0, r4
   14b14:	bl	15ea4 <__printf_chk@plt+0x4b0c>
   14b18:	mov	r4, #1
   14b1c:	mov	r0, sp
   14b20:	bl	15608 <__printf_chk@plt+0x4270>
   14b24:	b	14b34 <__printf_chk@plt+0x379c>
   14b28:	mov	r0, r4
   14b2c:	bl	15ea4 <__printf_chk@plt+0x4b0c>
   14b30:	mov	r4, #1
   14b34:	ldr	r2, [sp, #12]
   14b38:	ldr	r3, [r5]
   14b3c:	mov	r0, r4
   14b40:	cmp	r2, r3
   14b44:	bne	14b7c <__printf_chk@plt+0x37e4>
   14b48:	add	sp, sp, #16
   14b4c:	pop	{r4, r5, r6, pc}
   14b50:	mov	r4, r2
   14b54:	b	14b34 <__printf_chk@plt+0x379c>
   14b58:	mov	r0, sp
   14b5c:	bl	15770 <__printf_chk@plt+0x43d8>
   14b60:	ldr	r3, [sp, #4]
   14b64:	b	14af4 <__printf_chk@plt+0x375c>
   14b68:	mov	r4, #0
   14b6c:	b	14b1c <__printf_chk@plt+0x3784>
   14b70:	mov	r2, r3
   14b74:	mov	r6, r0
   14b78:	b	14ab4 <__printf_chk@plt+0x371c>
   14b7c:	bl	11194 <__stack_chk_fail@plt>
   14b80:	mov	r0, sp
   14b84:	bl	15608 <__printf_chk@plt+0x4270>
   14b88:	bl	111a0 <__cxa_end_cleanup@plt>
   14b8c:			; <UNDEFINED> instruction: 0x00029db0
   14b90:	andeq	sl, r2, r8, asr #13
   14b94:	bx	lr
   14b98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b9c:	sub	sp, sp, #124	; 0x7c
   14ba0:	ldr	r6, [pc, #884]	; 14f1c <__printf_chk@plt+0x3b84>
   14ba4:	mov	r0, #14
   14ba8:	ldr	r7, [pc, #880]	; 14f20 <__printf_chk@plt+0x3b88>
   14bac:	ldr	r3, [r6]
   14bb0:	ldr	r5, [pc, #876]	; 14f24 <__printf_chk@plt+0x3b8c>
   14bb4:	str	r3, [sp, #116]	; 0x74
   14bb8:	bl	110ec <nl_langinfo@plt>
   14bbc:	ldr	r4, [r7]
   14bc0:	cmp	r0, #0
   14bc4:	movne	r5, r0
   14bc8:	cmp	r4, #0
   14bcc:	beq	14c70 <__printf_chk@plt+0x38d8>
   14bd0:	ldrb	r7, [r4]
   14bd4:	cmp	r7, #0
   14bd8:	bne	14c0c <__printf_chk@plt+0x3874>
   14bdc:	b	14c44 <__printf_chk@plt+0x38ac>
   14be0:	mov	r0, r4
   14be4:	bl	1126c <strlen@plt>
   14be8:	add	r0, r0, #1
   14bec:	add	r7, r4, r0
   14bf0:	mov	r0, r7
   14bf4:	bl	1126c <strlen@plt>
   14bf8:	add	r0, r0, #1
   14bfc:	add	r4, r7, r0
   14c00:	ldrb	r7, [r7, r0]
   14c04:	cmp	r7, #0
   14c08:	beq	14c44 <__printf_chk@plt+0x38ac>
   14c0c:	mov	r1, r4
   14c10:	mov	r0, r5
   14c14:	bl	112d8 <strcmp@plt>
   14c18:	cmp	r0, #0
   14c1c:	beq	14c34 <__printf_chk@plt+0x389c>
   14c20:	cmp	r7, #42	; 0x2a
   14c24:	bne	14be0 <__printf_chk@plt+0x3848>
   14c28:	ldrb	r3, [r4, #1]
   14c2c:	cmp	r3, #0
   14c30:	bne	14be0 <__printf_chk@plt+0x3848>
   14c34:	mov	r0, r4
   14c38:	bl	1126c <strlen@plt>
   14c3c:	add	r0, r0, #1
   14c40:	add	r5, r4, r0
   14c44:	ldrb	r0, [r5]
   14c48:	ldr	r2, [sp, #116]	; 0x74
   14c4c:	ldr	r1, [pc, #724]	; 14f28 <__printf_chk@plt+0x3b90>
   14c50:	ldr	r3, [r6]
   14c54:	cmp	r0, #0
   14c58:	movne	r0, r5
   14c5c:	moveq	r0, r1
   14c60:	cmp	r2, r3
   14c64:	bne	14f18 <__printf_chk@plt+0x3b80>
   14c68:	add	sp, sp, #124	; 0x7c
   14c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c70:	ldr	r0, [pc, #692]	; 14f2c <__printf_chk@plt+0x3b94>
   14c74:	bl	11368 <getenv@plt>
   14c78:	subs	sl, r0, #0
   14c7c:	beq	14c8c <__printf_chk@plt+0x38f4>
   14c80:	ldrb	r3, [sl]
   14c84:	cmp	r3, #0
   14c88:	bne	14c98 <__printf_chk@plt+0x3900>
   14c8c:	ldr	r0, [pc, #668]	; 14f30 <__printf_chk@plt+0x3b98>
   14c90:	bl	15308 <__printf_chk@plt+0x3f70>
   14c94:	mov	sl, r0
   14c98:	mov	r0, sl
   14c9c:	bl	1126c <strlen@plt>
   14ca0:	subs	r8, r0, #0
   14ca4:	beq	14ce8 <__printf_chk@plt+0x3950>
   14ca8:	add	r3, sl, r8
   14cac:	ldrb	r3, [r3, #-1]
   14cb0:	cmp	r3, #47	; 0x2f
   14cb4:	beq	14ce8 <__printf_chk@plt+0x3950>
   14cb8:	add	r0, r8, #15
   14cbc:	bl	11260 <malloc@plt>
   14cc0:	add	fp, r8, #1
   14cc4:	subs	r9, r0, #0
   14cc8:	beq	14cf8 <__printf_chk@plt+0x3960>
   14ccc:	mov	r2, r8
   14cd0:	mov	r1, sl
   14cd4:	bl	11254 <memcpy@plt>
   14cd8:	mov	r3, #47	; 0x2f
   14cdc:	strb	r3, [r9, r8]
   14ce0:	mov	r8, fp
   14ce4:	b	14d10 <__printf_chk@plt+0x3978>
   14ce8:	add	r0, r8, #14
   14cec:	bl	11260 <malloc@plt>
   14cf0:	subs	r9, r0, #0
   14cf4:	bne	14d04 <__printf_chk@plt+0x396c>
   14cf8:	ldr	r4, [pc, #548]	; 14f24 <__printf_chk@plt+0x3b8c>
   14cfc:	str	r4, [r7]
   14d00:	b	14bd0 <__printf_chk@plt+0x3838>
   14d04:	mov	r1, sl
   14d08:	mov	r2, r8
   14d0c:	bl	11254 <memcpy@plt>
   14d10:	ldr	r3, [pc, #540]	; 14f34 <__printf_chk@plt+0x3b9c>
   14d14:	add	ip, r9, r8
   14d18:	ldm	r3!, {r0, r1, r2}
   14d1c:	ldrh	r3, [r3]
   14d20:	str	r0, [r9, r8]
   14d24:	str	r1, [ip, #4]
   14d28:	strh	r3, [ip, #12]
   14d2c:	str	r2, [ip, #8]
   14d30:	mov	r1, #32768	; 0x8000
   14d34:	mov	r0, r9
   14d38:	bl	11158 <open64@plt>
   14d3c:	subs	sl, r0, #0
   14d40:	bge	14d54 <__printf_chk@plt+0x39bc>
   14d44:	ldr	r4, [pc, #472]	; 14f24 <__printf_chk@plt+0x3b8c>
   14d48:	mov	r0, r9
   14d4c:	bl	1108c <free@plt>
   14d50:	b	14cfc <__printf_chk@plt+0x3964>
   14d54:	ldr	r1, [pc, #476]	; 14f38 <__printf_chk@plt+0x3ba0>
   14d58:	bl	11080 <fdopen@plt>
   14d5c:	subs	r8, r0, #0
   14d60:	movne	fp, #0
   14d64:	strne	r9, [sp]
   14d68:	strne	r5, [sp, #4]
   14d6c:	beq	14eec <__printf_chk@plt+0x3b54>
   14d70:	ldr	r3, [r8, #4]
   14d74:	ldr	r2, [r8, #8]
   14d78:	cmp	r3, r2
   14d7c:	bcs	14e48 <__printf_chk@plt+0x3ab0>
   14d80:	add	r2, r3, #1
   14d84:	str	r2, [r8, #4]
   14d88:	ldrb	r0, [r3]
   14d8c:	sub	r3, r0, #9
   14d90:	cmp	r0, #32
   14d94:	cmpne	r3, #1
   14d98:	bls	14d70 <__printf_chk@plt+0x39d8>
   14d9c:	cmp	r0, #35	; 0x23
   14da0:	beq	14e5c <__printf_chk@plt+0x3ac4>
   14da4:	mov	r1, r8
   14da8:	bl	1117c <ungetc@plt>
   14dac:	add	r3, sp, #64	; 0x40
   14db0:	add	r2, sp, #12
   14db4:	ldr	r1, [pc, #384]	; 14f3c <__printf_chk@plt+0x3ba4>
   14db8:	mov	r0, r8
   14dbc:	bl	1105c <fscanf@plt>
   14dc0:	cmp	r0, #1
   14dc4:	ble	14e98 <__printf_chk@plt+0x3b00>
   14dc8:	add	r0, sp, #12
   14dcc:	bl	1126c <strlen@plt>
   14dd0:	mov	sl, r0
   14dd4:	add	r0, sp, #64	; 0x40
   14dd8:	bl	1126c <strlen@plt>
   14ddc:	cmp	fp, #0
   14de0:	mov	r9, r0
   14de4:	add	r3, sl, r0
   14de8:	bne	14ebc <__printf_chk@plt+0x3b24>
   14dec:	add	r0, r3, #3
   14df0:	add	fp, r3, #2
   14df4:	bl	11260 <malloc@plt>
   14df8:	mov	r5, r0
   14dfc:	cmp	r5, #0
   14e00:	beq	14ef8 <__printf_chk@plt+0x3b60>
   14e04:	sub	r4, fp, r9
   14e08:	sub	r0, r4, sl
   14e0c:	sub	r0, r0, #2
   14e10:	add	r1, sp, #12
   14e14:	add	r2, sl, #1
   14e18:	add	r0, r5, r0
   14e1c:	bl	11254 <memcpy@plt>
   14e20:	sub	r0, r4, #1
   14e24:	add	r2, r9, #1
   14e28:	add	r0, r5, r0
   14e2c:	add	r1, sp, #64	; 0x40
   14e30:	bl	11254 <memcpy@plt>
   14e34:	ldr	r3, [r8, #4]
   14e38:	ldr	r2, [r8, #8]
   14e3c:	mov	r4, r5
   14e40:	cmp	r3, r2
   14e44:	bcc	14d80 <__printf_chk@plt+0x39e8>
   14e48:	mov	r0, r8
   14e4c:	bl	112cc <__uflow@plt>
   14e50:	cmn	r0, #1
   14e54:	bne	14d8c <__printf_chk@plt+0x39f4>
   14e58:	b	14e98 <__printf_chk@plt+0x3b00>
   14e5c:	ldr	r3, [r8, #4]
   14e60:	ldr	r2, [r8, #8]
   14e64:	cmp	r3, r2
   14e68:	bcs	14ed8 <__printf_chk@plt+0x3b40>
   14e6c:	add	r2, r3, #1
   14e70:	str	r2, [r8, #4]
   14e74:	ldrb	r0, [r3]
   14e78:	mov	r3, #1
   14e7c:	cmp	r0, #10
   14e80:	moveq	r3, #0
   14e84:	andne	r3, r3, #1
   14e88:	cmp	r3, #0
   14e8c:	bne	14e5c <__printf_chk@plt+0x3ac4>
   14e90:	cmn	r0, #1
   14e94:	bne	14d70 <__printf_chk@plt+0x39d8>
   14e98:	mov	r0, r8
   14e9c:	ldr	r9, [sp]
   14ea0:	ldr	r5, [sp, #4]
   14ea4:	bl	11290 <fclose@plt>
   14ea8:	cmp	fp, #0
   14eac:	beq	14d44 <__printf_chk@plt+0x39ac>
   14eb0:	mov	r3, #0
   14eb4:	strb	r3, [r4, fp]
   14eb8:	b	14d48 <__printf_chk@plt+0x39b0>
   14ebc:	add	fp, fp, r3
   14ec0:	add	r1, fp, #3
   14ec4:	mov	r0, r4
   14ec8:	bl	11140 <realloc@plt>
   14ecc:	add	fp, fp, #2
   14ed0:	mov	r5, r0
   14ed4:	b	14dfc <__printf_chk@plt+0x3a64>
   14ed8:	mov	r0, r8
   14edc:	bl	112cc <__uflow@plt>
   14ee0:	adds	r3, r0, #1
   14ee4:	movne	r3, #1
   14ee8:	b	14e7c <__printf_chk@plt+0x3ae4>
   14eec:	mov	r0, sl
   14ef0:	bl	1111c <close@plt>
   14ef4:	b	14d44 <__printf_chk@plt+0x39ac>
   14ef8:	mov	r0, r4
   14efc:	ldr	r9, [sp]
   14f00:	ldr	r5, [sp, #4]
   14f04:	bl	1108c <free@plt>
   14f08:	mov	r0, r8
   14f0c:	bl	11290 <fclose@plt>
   14f10:	ldr	r4, [pc, #12]	; 14f24 <__printf_chk@plt+0x3b8c>
   14f14:	b	14d48 <__printf_chk@plt+0x39b0>
   14f18:	bl	11194 <__stack_chk_fail@plt>
   14f1c:			; <UNDEFINED> instruction: 0x00029db0
   14f20:	andeq	sl, r2, r8, lsr #5
   14f24:	andeq	r8, r1, ip, lsr #10
   14f28:	ldrdeq	r8, [r1], -r0
   14f2c:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   14f30:	andeq	r8, r1, r8, ror #31
   14f34:	strdeq	r8, [r1], -r4
   14f38:	ldrdeq	r8, [r1], -ip
   14f3c:	andeq	r9, r1, r4
   14f40:	subs	r3, r0, #0
   14f44:	beq	14f78 <__printf_chk@plt+0x3be0>
   14f48:	push	{r4, lr}
   14f4c:	mov	r1, #47	; 0x2f
   14f50:	mov	r4, r3
   14f54:	bl	11344 <strrchr@plt>
   14f58:	subs	r3, r0, #0
   14f5c:	beq	14f70 <__printf_chk@plt+0x3bd8>
   14f60:	mov	r2, #0
   14f64:	mov	r0, r4
   14f68:	strb	r2, [r3]
   14f6c:	pop	{r4, pc}
   14f70:	ldr	r0, [pc, #8]	; 14f80 <__printf_chk@plt+0x3be8>
   14f74:	pop	{r4, pc}
   14f78:	mov	r0, r3
   14f7c:	bx	lr
   14f80:	andeq	r9, r1, r0, lsl r0
   14f84:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f88:	subs	r8, r0, #0
   14f8c:	beq	15084 <__printf_chk@plt+0x3cec>
   14f90:	ldrb	r3, [r8]
   14f94:	cmp	r3, #0
   14f98:	beq	15084 <__printf_chk@plt+0x3cec>
   14f9c:	mov	r4, r1
   14fa0:	mov	r1, #0
   14fa4:	bl	111ac <access@plt>
   14fa8:	cmp	r0, #0
   14fac:	beq	15090 <__printf_chk@plt+0x3cf8>
   14fb0:	mov	r0, r8
   14fb4:	bl	1126c <strlen@plt>
   14fb8:	ldr	sl, [pc, #232]	; 150a8 <__printf_chk@plt+0x3d10>
   14fbc:	add	r9, r0, #1
   14fc0:	b	15034 <__printf_chk@plt+0x3c9c>
   14fc4:	cmp	r4, r5
   14fc8:	mov	r0, sl
   14fcc:	sub	r6, r5, r4
   14fd0:	bcs	14fe4 <__printf_chk@plt+0x3c4c>
   14fd4:	ldrb	r1, [r5, #-1]
   14fd8:	bl	1138c <strchr@plt>
   14fdc:	cmp	r0, #0
   14fe0:	beq	15058 <__printf_chk@plt+0x3cc0>
   14fe4:	add	r0, r9, r6
   14fe8:	bl	11128 <_Znaj@plt>
   14fec:	mov	r2, r6
   14ff0:	mov	r1, r4
   14ff4:	mov	r7, r0
   14ff8:	bl	11254 <memcpy@plt>
   14ffc:	mov	r1, r8
   15000:	add	r0, r7, r6
   15004:	bl	1114c <strcpy@plt>
   15008:	mov	r1, #0
   1500c:	mov	r0, r7
   15010:	bl	111ac <access@plt>
   15014:	add	r4, r5, #1
   15018:	cmp	r0, #0
   1501c:	mov	r0, r7
   15020:	beq	15088 <__printf_chk@plt+0x3cf0>
   15024:	bl	111dc <_ZdaPv@plt>
   15028:	ldrb	r3, [r5]
   1502c:	cmp	r3, #0
   15030:	beq	15084 <__printf_chk@plt+0x3cec>
   15034:	mov	r1, #58	; 0x3a
   15038:	mov	r0, r4
   1503c:	bl	1138c <strchr@plt>
   15040:	subs	r5, r0, #0
   15044:	bne	14fc4 <__printf_chk@plt+0x3c2c>
   15048:	mov	r0, r4
   1504c:	bl	1126c <strlen@plt>
   15050:	add	r5, r4, r0
   15054:	b	14fc4 <__printf_chk@plt+0x3c2c>
   15058:	add	fp, r6, #1
   1505c:	add	r0, fp, r9
   15060:	bl	11128 <_Znaj@plt>
   15064:	mov	r2, r6
   15068:	mov	r1, r4
   1506c:	mov	r7, r0
   15070:	bl	11254 <memcpy@plt>
   15074:	mov	r3, #47	; 0x2f
   15078:	strb	r3, [r7, r6]
   1507c:	mov	r6, fp
   15080:	b	14ffc <__printf_chk@plt+0x3c64>
   15084:	mov	r7, #0
   15088:	mov	r0, r7
   1508c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15090:	bl	16228 <__printf_chk@plt+0x4e90>
   15094:	bl	11128 <_Znaj@plt>
   15098:	mov	r1, r0
   1509c:	mov	r0, r8
   150a0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150a4:	b	110d4 <realpath@plt>
   150a8:	andeq	r9, r1, r4, lsl r0
   150ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   150b0:	mov	r6, r0
   150b4:	mov	r0, r1
   150b8:	mov	r7, r2
   150bc:	bl	15e30 <__printf_chk@plt+0x4a98>
   150c0:	ldr	r1, [pc, #152]	; 15160 <__printf_chk@plt+0x3dc8>
   150c4:	mov	r9, r0
   150c8:	bl	110e0 <strtok@plt>
   150cc:	subs	r5, r0, #0
   150d0:	beq	15158 <__printf_chk@plt+0x3dc0>
   150d4:	ldr	r8, [pc, #132]	; 15160 <__printf_chk@plt+0x3dc8>
   150d8:	b	150e8 <__printf_chk@plt+0x3d50>
   150dc:	bl	110e0 <strtok@plt>
   150e0:	subs	r5, r0, #0
   150e4:	beq	15158 <__printf_chk@plt+0x3dc0>
   150e8:	mov	r0, r6
   150ec:	bl	1126c <strlen@plt>
   150f0:	mov	r4, r0
   150f4:	mov	r0, r5
   150f8:	bl	1126c <strlen@plt>
   150fc:	add	r0, r4, r0
   15100:	add	r0, r0, #1
   15104:	bl	11128 <_Znaj@plt>
   15108:	mov	r1, r6
   1510c:	mov	sl, r0
   15110:	bl	110c8 <stpcpy@plt>
   15114:	mov	r1, r5
   15118:	bl	1114c <strcpy@plt>
   1511c:	mov	r1, r7
   15120:	mov	r0, sl
   15124:	bl	14f84 <__printf_chk@plt+0x3bec>
   15128:	mov	r4, r0
   1512c:	mov	r0, sl
   15130:	bl	111dc <_ZdaPv@plt>
   15134:	subs	r0, r4, #0
   15138:	mov	r1, r8
   1513c:	beq	150dc <__printf_chk@plt+0x3d44>
   15140:	cmp	r9, #0
   15144:	beq	15150 <__printf_chk@plt+0x3db8>
   15148:	mov	r0, r9
   1514c:	bl	111dc <_ZdaPv@plt>
   15150:	mov	r0, r4
   15154:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15158:	mov	r4, #0
   1515c:	b	15140 <__printf_chk@plt+0x3da8>
   15160:	andeq	r9, r1, r8, lsl r0
   15164:	ldrb	r3, [r0]
   15168:	cmp	r3, #0
   1516c:	bxeq	lr
   15170:	mov	r2, r0
   15174:	mov	r1, #47	; 0x2f
   15178:	cmp	r3, #92	; 0x5c
   1517c:	strbeq	r1, [r2]
   15180:	ldrb	r3, [r2, #1]!
   15184:	cmp	r3, #0
   15188:	bne	15178 <__printf_chk@plt+0x3de0>
   1518c:	bx	lr
   15190:	push	{r4, r5, r6, lr}
   15194:	bl	16228 <__printf_chk@plt+0x4e90>
   15198:	bl	11128 <_Znaj@plt>
   1519c:	ldr	r4, [pc, #332]	; 152f0 <__printf_chk@plt+0x3f58>
   151a0:	ldr	r5, [pc, #332]	; 152f4 <__printf_chk@plt+0x3f5c>
   151a4:	ldr	r6, [r5]
   151a8:	str	r0, [r4]
   151ac:	ldr	r0, [pc, #324]	; 152f8 <__printf_chk@plt+0x3f60>
   151b0:	bl	11368 <getenv@plt>
   151b4:	mov	r1, r0
   151b8:	mov	r0, r6
   151bc:	bl	14f84 <__printf_chk@plt+0x3bec>
   151c0:	cmp	r0, #0
   151c4:	str	r0, [r4]
   151c8:	beq	15248 <__printf_chk@plt+0x3eb0>
   151cc:	ldrb	r3, [r0]
   151d0:	cmp	r3, #0
   151d4:	beq	152b0 <__printf_chk@plt+0x3f18>
   151d8:	mov	r2, #47	; 0x2f
   151dc:	cmp	r3, #92	; 0x5c
   151e0:	strbeq	r2, [r0]
   151e4:	ldrb	r3, [r0, #1]!
   151e8:	cmp	r3, #0
   151ec:	bne	151dc <__printf_chk@plt+0x3e44>
   151f0:	ldr	r5, [r4]
   151f4:	cmp	r5, #0
   151f8:	beq	15234 <__printf_chk@plt+0x3e9c>
   151fc:	mov	r1, #47	; 0x2f
   15200:	mov	r0, r5
   15204:	bl	11344 <strrchr@plt>
   15208:	cmp	r0, #0
   1520c:	beq	152a8 <__printf_chk@plt+0x3f10>
   15210:	mov	r6, #0
   15214:	strb	r6, [r0]
   15218:	mov	r1, #47	; 0x2f
   1521c:	mov	r0, r5
   15220:	str	r5, [r4]
   15224:	bl	11344 <strrchr@plt>
   15228:	cmp	r0, #0
   1522c:	beq	152a8 <__printf_chk@plt+0x3f10>
   15230:	strb	r6, [r0]
   15234:	mov	r0, r5
   15238:	str	r5, [r4]
   1523c:	bl	1126c <strlen@plt>
   15240:	str	r0, [r4, #4]
   15244:	pop	{r4, r5, r6, pc}
   15248:	mov	r1, #46	; 0x2e
   1524c:	ldr	r0, [r5]
   15250:	bl	1138c <strchr@plt>
   15254:	cmp	r0, #0
   15258:	popne	{r4, r5, r6, pc}
   1525c:	ldr	r0, [pc, #152]	; 152fc <__printf_chk@plt+0x3f64>
   15260:	bl	11368 <getenv@plt>
   15264:	bl	15e30 <__printf_chk@plt+0x4a98>
   15268:	subs	r6, r0, #0
   1526c:	beq	152b8 <__printf_chk@plt+0x3f20>
   15270:	ldr	r0, [pc, #128]	; 152f8 <__printf_chk@plt+0x3f60>
   15274:	ldr	r5, [r5]
   15278:	bl	11368 <getenv@plt>
   1527c:	mov	r1, r6
   15280:	mov	r2, r0
   15284:	mov	r0, r5
   15288:	bl	150ac <__printf_chk@plt+0x3d14>
   1528c:	str	r0, [r4]
   15290:	mov	r0, r6
   15294:	bl	111dc <_ZdaPv@plt>
   15298:	ldr	r0, [r4]
   1529c:	cmp	r0, #0
   152a0:	bne	151cc <__printf_chk@plt+0x3e34>
   152a4:	pop	{r4, r5, r6, pc}
   152a8:	ldr	r5, [pc, #80]	; 15300 <__printf_chk@plt+0x3f68>
   152ac:	b	15234 <__printf_chk@plt+0x3e9c>
   152b0:	ldr	r5, [r4]
   152b4:	b	151fc <__printf_chk@plt+0x3e64>
   152b8:	ldr	r0, [pc, #68]	; 15304 <__printf_chk@plt+0x3f6c>
   152bc:	bl	15e30 <__printf_chk@plt+0x4a98>
   152c0:	ldr	r5, [r5]
   152c4:	mov	r6, r0
   152c8:	ldr	r0, [pc, #40]	; 152f8 <__printf_chk@plt+0x3f60>
   152cc:	bl	11368 <getenv@plt>
   152d0:	mov	r1, r6
   152d4:	mov	r2, r0
   152d8:	mov	r0, r5
   152dc:	bl	150ac <__printf_chk@plt+0x3d14>
   152e0:	cmp	r6, #0
   152e4:	str	r0, [r4]
   152e8:	beq	1529c <__printf_chk@plt+0x3f04>
   152ec:	b	15290 <__printf_chk@plt+0x3ef8>
   152f0:			; <UNDEFINED> instruction: 0x0002a2b0
   152f4:	andeq	sl, r2, ip, lsr #5
   152f8:	andeq	r9, r1, ip, lsl r0
   152fc:	andeq	r9, r1, r4, lsr #32
   15300:	andeq	r9, r1, r0, lsl r0
   15304:	andeq	r8, r1, ip, lsr #10
   15308:	push	{r4, r5, r6, lr}
   1530c:	mov	r4, r0
   15310:	ldr	r5, [pc, #108]	; 15384 <__printf_chk@plt+0x3fec>
   15314:	ldr	r3, [r5]
   15318:	cmp	r3, #0
   1531c:	beq	1537c <__printf_chk@plt+0x3fe4>
   15320:	mov	r2, #4
   15324:	mov	r1, r4
   15328:	ldr	r0, [pc, #88]	; 15388 <__printf_chk@plt+0x3ff0>
   1532c:	bl	110a4 <strncmp@plt>
   15330:	cmp	r0, #0
   15334:	beq	15344 <__printf_chk@plt+0x3fac>
   15338:	mov	r0, r4
   1533c:	pop	{r4, r5, r6, lr}
   15340:	b	15e30 <__printf_chk@plt+0x4a98>
   15344:	add	r4, r4, #4
   15348:	mov	r0, r4
   1534c:	bl	1126c <strlen@plt>
   15350:	ldr	r3, [r5, #4]
   15354:	add	r3, r3, #1
   15358:	add	r0, r3, r0
   1535c:	bl	11128 <_Znaj@plt>
   15360:	ldr	r1, [r5]
   15364:	mov	r6, r0
   15368:	bl	110c8 <stpcpy@plt>
   1536c:	mov	r1, r4
   15370:	bl	1114c <strcpy@plt>
   15374:	mov	r0, r6
   15378:	pop	{r4, r5, r6, pc}
   1537c:	bl	15190 <__printf_chk@plt+0x3df8>
   15380:	b	15320 <__printf_chk@plt+0x3f88>
   15384:			; <UNDEFINED> instruction: 0x0002a2b0
   15388:	andeq	r9, r1, ip, lsr #32
   1538c:	push	{r4, lr}
   15390:	mov	r1, #0
   15394:	mov	r4, r0
   15398:	bl	111ac <access@plt>
   1539c:	cmp	r0, #0
   153a0:	mov	r0, r4
   153a4:	beq	153b0 <__printf_chk@plt+0x4018>
   153a8:	pop	{r4, lr}
   153ac:	b	15308 <__printf_chk@plt+0x3f70>
   153b0:	pop	{r4, lr}
   153b4:	b	15e30 <__printf_chk@plt+0x4a98>
   153b8:	cmp	r1, r2
   153bc:	push	{r4, r5, r6, lr}
   153c0:	mov	r4, r0
   153c4:	bge	153f4 <__printf_chk@plt+0x405c>
   153c8:	cmp	r0, #0
   153cc:	mov	r5, r3
   153d0:	mov	r4, r2
   153d4:	beq	153dc <__printf_chk@plt+0x4044>
   153d8:	bl	111dc <_ZdaPv@plt>
   153dc:	cmp	r4, #0
   153e0:	beq	153fc <__printf_chk@plt+0x4064>
   153e4:	lsl	r0, r4, #1
   153e8:	str	r0, [r5]
   153ec:	pop	{r4, r5, r6, lr}
   153f0:	b	11128 <_Znaj@plt>
   153f4:	str	r1, [r3]
   153f8:	pop	{r4, r5, r6, pc}
   153fc:	str	r4, [r5]
   15400:	mov	r0, r4
   15404:	pop	{r4, r5, r6, pc}
   15408:	cmp	r1, r3
   1540c:	push	{r4, r5, r6, r7, r8, lr}
   15410:	mov	r5, r0
   15414:	bge	1547c <__printf_chk@plt+0x40e4>
   15418:	cmp	r3, #0
   1541c:	mov	r6, r2
   15420:	mov	r4, r3
   15424:	beq	15458 <__printf_chk@plt+0x40c0>
   15428:	lsl	r0, r3, #1
   1542c:	ldr	r3, [sp, #24]
   15430:	str	r0, [r3]
   15434:	bl	11128 <_Znaj@plt>
   15438:	cmp	r6, #0
   1543c:	cmpne	r4, r6
   15440:	mov	r7, r0
   15444:	bgt	15490 <__printf_chk@plt+0x40f8>
   15448:	cmp	r5, #0
   1544c:	bne	1549c <__printf_chk@plt+0x4104>
   15450:	mov	r0, r7
   15454:	pop	{r4, r5, r6, r7, r8, pc}
   15458:	cmp	r0, #0
   1545c:	beq	15464 <__printf_chk@plt+0x40cc>
   15460:	bl	111dc <_ZdaPv@plt>
   15464:	ldr	r3, [sp, #24]
   15468:	mov	ip, #0
   1546c:	mov	r7, ip
   15470:	str	ip, [r3]
   15474:	mov	r0, r7
   15478:	pop	{r4, r5, r6, r7, r8, pc}
   1547c:	ldr	r3, [sp, #24]
   15480:	mov	r7, r0
   15484:	mov	r0, r7
   15488:	str	r1, [r3]
   1548c:	pop	{r4, r5, r6, r7, r8, pc}
   15490:	mov	r2, r6
   15494:	mov	r1, r5
   15498:	bl	11254 <memcpy@plt>
   1549c:	mov	r0, r5
   154a0:	bl	111dc <_ZdaPv@plt>
   154a4:	mov	r0, r7
   154a8:	pop	{r4, r5, r6, r7, r8, pc}
   154ac:	mov	r2, #0
   154b0:	str	r2, [r0]
   154b4:	str	r2, [r0, #4]
   154b8:	str	r2, [r0, #8]
   154bc:	bx	lr
   154c0:	push	{r4, r5, r6, lr}
   154c4:	subs	r5, r2, #0
   154c8:	mov	r4, r0
   154cc:	str	r2, [r0, #4]
   154d0:	mov	r6, r1
   154d4:	blt	15508 <__printf_chk@plt+0x4170>
   154d8:	streq	r5, [r0, #8]
   154dc:	streq	r5, [r0]
   154e0:	beq	15500 <__printf_chk@plt+0x4168>
   154e4:	lsl	r0, r5, #1
   154e8:	str	r0, [r4, #8]
   154ec:	bl	11128 <_Znaj@plt>
   154f0:	mov	r2, r5
   154f4:	mov	r1, r6
   154f8:	str	r0, [r4]
   154fc:	bl	11254 <memcpy@plt>
   15500:	mov	r0, r4
   15504:	pop	{r4, r5, r6, pc}
   15508:	ldr	r1, [pc, #8]	; 15518 <__printf_chk@plt+0x4180>
   1550c:	mov	r0, #87	; 0x57
   15510:	bl	13558 <__printf_chk@plt+0x21c0>
   15514:	b	154e4 <__printf_chk@plt+0x414c>
   15518:	andeq	r9, r1, r4, lsr r0
   1551c:	push	{r4, r5, r6, lr}
   15520:	subs	r5, r1, #0
   15524:	mov	r4, r0
   15528:	streq	r5, [r0, #4]
   1552c:	streq	r5, [r0]
   15530:	streq	r5, [r0, #8]
   15534:	beq	15578 <__printf_chk@plt+0x41e0>
   15538:	mov	r0, r5
   1553c:	bl	1126c <strlen@plt>
   15540:	cmp	r0, #0
   15544:	str	r0, [r4, #4]
   15548:	streq	r0, [r4, #8]
   1554c:	streq	r0, [r4]
   15550:	beq	15578 <__printf_chk@plt+0x41e0>
   15554:	lsl	r0, r0, #1
   15558:	str	r0, [r4, #8]
   1555c:	bl	11128 <_Znaj@plt>
   15560:	ldr	r2, [r4, #4]
   15564:	cmp	r2, #0
   15568:	str	r0, [r4]
   1556c:	beq	15578 <__printf_chk@plt+0x41e0>
   15570:	mov	r1, r5
   15574:	bl	11254 <memcpy@plt>
   15578:	mov	r0, r4
   1557c:	pop	{r4, r5, r6, pc}
   15580:	push	{r4, r5, r6, lr}
   15584:	mov	r4, r0
   15588:	mov	r3, #1
   1558c:	mov	r0, #2
   15590:	str	r3, [r4, #4]
   15594:	str	r0, [r4, #8]
   15598:	mov	r5, r1
   1559c:	bl	11128 <_Znaj@plt>
   155a0:	str	r0, [r4]
   155a4:	strb	r5, [r0]
   155a8:	mov	r0, r4
   155ac:	pop	{r4, r5, r6, pc}
   155b0:	push	{r4, r5, r6, lr}
   155b4:	mov	r4, r0
   155b8:	ldr	r0, [r1, #4]
   155bc:	cmp	r0, #0
   155c0:	str	r0, [r4, #4]
   155c4:	streq	r0, [r4, #8]
   155c8:	streq	r0, [r4]
   155cc:	beq	155f0 <__printf_chk@plt+0x4258>
   155d0:	lsl	r0, r0, #1
   155d4:	str	r0, [r4, #8]
   155d8:	mov	r5, r1
   155dc:	bl	11128 <_Znaj@plt>
   155e0:	ldr	r2, [r4, #4]
   155e4:	cmp	r2, #0
   155e8:	str	r0, [r4]
   155ec:	bne	155f8 <__printf_chk@plt+0x4260>
   155f0:	mov	r0, r4
   155f4:	pop	{r4, r5, r6, pc}
   155f8:	ldr	r1, [r5]
   155fc:	bl	11254 <memcpy@plt>
   15600:	mov	r0, r4
   15604:	pop	{r4, r5, r6, pc}
   15608:	push	{r4, lr}
   1560c:	mov	r4, r0
   15610:	ldr	r0, [r0]
   15614:	cmp	r0, #0
   15618:	beq	15620 <__printf_chk@plt+0x4288>
   1561c:	bl	111dc <_ZdaPv@plt>
   15620:	mov	r0, r4
   15624:	pop	{r4, pc}
   15628:	push	{r4, r5, r6, lr}
   1562c:	add	r3, r0, #8
   15630:	ldr	r2, [r1, #4]
   15634:	mov	r4, r0
   15638:	mov	r5, r1
   1563c:	ldr	r1, [r0, #8]
   15640:	ldr	r0, [r0]
   15644:	bl	153b8 <__printf_chk@plt+0x4020>
   15648:	ldr	r2, [r5, #4]
   1564c:	cmp	r2, #0
   15650:	stm	r4, {r0, r2}
   15654:	bne	15660 <__printf_chk@plt+0x42c8>
   15658:	mov	r0, r4
   1565c:	pop	{r4, r5, r6, pc}
   15660:	ldr	r1, [r5]
   15664:	bl	11254 <memcpy@plt>
   15668:	mov	r0, r4
   1566c:	pop	{r4, r5, r6, pc}
   15670:	push	{r4, r5, r6, r7, r8, lr}
   15674:	subs	r7, r1, #0
   15678:	mov	r4, r0
   1567c:	ldr	r6, [r0]
   15680:	beq	156b8 <__printf_chk@plt+0x4320>
   15684:	mov	r0, r7
   15688:	bl	1126c <strlen@plt>
   1568c:	add	r3, r4, #8
   15690:	ldr	r1, [r4, #8]
   15694:	mov	r5, r0
   15698:	mov	r2, r0
   1569c:	mov	r0, r6
   156a0:	bl	153b8 <__printf_chk@plt+0x4020>
   156a4:	cmp	r5, #0
   156a8:	stm	r4, {r0, r5}
   156ac:	bne	156e0 <__printf_chk@plt+0x4348>
   156b0:	mov	r0, r4
   156b4:	pop	{r4, r5, r6, r7, r8, pc}
   156b8:	cmp	r6, #0
   156bc:	beq	156c8 <__printf_chk@plt+0x4330>
   156c0:	mov	r0, r6
   156c4:	bl	111dc <_ZdaPv@plt>
   156c8:	mov	r3, #0
   156cc:	str	r3, [r4, #4]
   156d0:	str	r3, [r4]
   156d4:	str	r3, [r4, #8]
   156d8:	mov	r0, r4
   156dc:	pop	{r4, r5, r6, r7, r8, pc}
   156e0:	mov	r2, r5
   156e4:	mov	r1, r7
   156e8:	bl	11254 <memcpy@plt>
   156ec:	mov	r0, r4
   156f0:	pop	{r4, r5, r6, r7, r8, pc}
   156f4:	push	{r4, r5, r6, lr}
   156f8:	add	r3, r0, #8
   156fc:	mov	r4, r0
   15700:	mov	r5, r1
   15704:	mov	r2, #1
   15708:	ldr	r1, [r0, #8]
   1570c:	ldr	r0, [r0]
   15710:	bl	153b8 <__printf_chk@plt+0x4020>
   15714:	mov	r2, #1
   15718:	str	r2, [r4, #4]
   1571c:	mov	r3, r0
   15720:	str	r0, [r4]
   15724:	mov	r0, r4
   15728:	strb	r5, [r3]
   1572c:	pop	{r4, r5, r6, pc}
   15730:	push	{r4, r5, r6, lr}
   15734:	mov	r5, r0
   15738:	ldr	r0, [r0]
   1573c:	mov	r4, r1
   15740:	cmp	r0, #0
   15744:	beq	1574c <__printf_chk@plt+0x43b4>
   15748:	bl	111dc <_ZdaPv@plt>
   1574c:	ldrd	r0, [r4]
   15750:	ldr	r2, [r4, #8]
   15754:	mov	r3, #0
   15758:	strd	r0, [r5]
   1575c:	str	r2, [r5, #8]
   15760:	str	r3, [r4]
   15764:	str	r3, [r4, #4]
   15768:	str	r3, [r4, #8]
   1576c:	pop	{r4, r5, r6, pc}
   15770:	mov	r1, r0
   15774:	push	{r4, lr}
   15778:	mov	r4, r0
   1577c:	sub	sp, sp, #8
   15780:	ldr	r2, [r0, #4]
   15784:	ldr	r0, [r1], #8
   15788:	add	r3, r2, #1
   1578c:	str	r1, [sp]
   15790:	ldr	r1, [r4, #8]
   15794:	bl	15408 <__printf_chk@plt+0x4070>
   15798:	str	r0, [r4]
   1579c:	add	sp, sp, #8
   157a0:	pop	{r4, pc}
   157a4:	push	{r4, r5, r6, r7, lr}
   157a8:	subs	r5, r1, #0
   157ac:	sub	sp, sp, #12
   157b0:	mov	r4, r0
   157b4:	beq	157f0 <__printf_chk@plt+0x4458>
   157b8:	mov	r0, r5
   157bc:	bl	1126c <strlen@plt>
   157c0:	ldr	r3, [r4, #4]
   157c4:	ldr	r1, [r4, #8]
   157c8:	add	r6, r0, r3
   157cc:	cmp	r1, r6
   157d0:	mov	r7, r0
   157d4:	ldr	r0, [r4]
   157d8:	blt	157fc <__printf_chk@plt+0x4464>
   157dc:	mov	r2, r7
   157e0:	mov	r1, r5
   157e4:	add	r0, r0, r3
   157e8:	bl	11254 <memcpy@plt>
   157ec:	str	r6, [r4, #4]
   157f0:	mov	r0, r4
   157f4:	add	sp, sp, #12
   157f8:	pop	{r4, r5, r6, r7, pc}
   157fc:	add	ip, r4, #8
   15800:	mov	r2, r3
   15804:	str	ip, [sp]
   15808:	mov	r3, r6
   1580c:	bl	15408 <__printf_chk@plt+0x4070>
   15810:	ldr	r3, [r4, #4]
   15814:	str	r0, [r4]
   15818:	b	157dc <__printf_chk@plt+0x4444>
   1581c:	ldr	r2, [r1, #4]
   15820:	push	{r4, r5, r6, lr}
   15824:	cmp	r2, #0
   15828:	sub	sp, sp, #8
   1582c:	mov	r4, r0
   15830:	beq	15860 <__printf_chk@plt+0x44c8>
   15834:	ldr	r3, [r0, #4]
   15838:	mov	r5, r1
   1583c:	ldr	r1, [r0, #8]
   15840:	add	r6, r2, r3
   15844:	cmp	r1, r6
   15848:	ldr	r0, [r0]
   1584c:	blt	1586c <__printf_chk@plt+0x44d4>
   15850:	ldr	r1, [r5]
   15854:	add	r0, r0, r3
   15858:	bl	11254 <memcpy@plt>
   1585c:	str	r6, [r4, #4]
   15860:	mov	r0, r4
   15864:	add	sp, sp, #8
   15868:	pop	{r4, r5, r6, pc}
   1586c:	add	ip, r4, #8
   15870:	mov	r2, r3
   15874:	str	ip, [sp]
   15878:	mov	r3, r6
   1587c:	bl	15408 <__printf_chk@plt+0x4070>
   15880:	ldr	r3, [r4, #4]
   15884:	ldr	r2, [r5, #4]
   15888:	str	r0, [r4]
   1588c:	add	r0, r0, r3
   15890:	ldr	r1, [r5]
   15894:	bl	11254 <memcpy@plt>
   15898:	str	r6, [r4, #4]
   1589c:	b	15860 <__printf_chk@plt+0x44c8>
   158a0:	push	{r4, r5, r6, r7, lr}
   158a4:	subs	r5, r2, #0
   158a8:	sub	sp, sp, #12
   158ac:	ble	158e4 <__printf_chk@plt+0x454c>
   158b0:	ldr	r3, [r0, #4]
   158b4:	mov	r7, r1
   158b8:	ldr	r1, [r0, #8]
   158bc:	add	r6, r3, r5
   158c0:	cmp	r1, r6
   158c4:	mov	r4, r0
   158c8:	ldr	r0, [r0]
   158cc:	blt	158ec <__printf_chk@plt+0x4554>
   158d0:	mov	r2, r5
   158d4:	mov	r1, r7
   158d8:	add	r0, r0, r3
   158dc:	bl	11254 <memcpy@plt>
   158e0:	str	r6, [r4, #4]
   158e4:	add	sp, sp, #12
   158e8:	pop	{r4, r5, r6, r7, pc}
   158ec:	add	ip, r4, #8
   158f0:	mov	r2, r3
   158f4:	str	ip, [sp]
   158f8:	mov	r3, r6
   158fc:	bl	15408 <__printf_chk@plt+0x4070>
   15900:	ldr	r3, [r4, #4]
   15904:	str	r0, [r4]
   15908:	b	158d0 <__printf_chk@plt+0x4538>
   1590c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15910:	mov	r5, r2
   15914:	ldr	r6, [sp, #32]
   15918:	mov	r4, r0
   1591c:	cmp	r2, #0
   15920:	cmpge	r6, #0
   15924:	mov	r8, r1
   15928:	mov	r7, r3
   1592c:	blt	15950 <__printf_chk@plt+0x45b8>
   15930:	add	r0, r5, r6
   15934:	cmp	r0, #0
   15938:	str	r0, [r4, #4]
   1593c:	bne	1596c <__printf_chk@plt+0x45d4>
   15940:	str	r0, [r4, #8]
   15944:	str	r0, [r4]
   15948:	mov	r0, r4
   1594c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15950:	mov	r0, #215	; 0xd7
   15954:	ldr	r1, [pc, #104]	; 159c4 <__printf_chk@plt+0x462c>
   15958:	bl	13558 <__printf_chk@plt+0x21c0>
   1595c:	add	r0, r5, r6
   15960:	cmp	r0, #0
   15964:	str	r0, [r4, #4]
   15968:	beq	15940 <__printf_chk@plt+0x45a8>
   1596c:	lsl	r0, r0, #1
   15970:	str	r0, [r4, #8]
   15974:	bl	11128 <_Znaj@plt>
   15978:	cmp	r5, #0
   1597c:	mov	r9, r0
   15980:	str	r0, [r4]
   15984:	beq	159b0 <__printf_chk@plt+0x4618>
   15988:	mov	r1, r8
   1598c:	mov	r2, r5
   15990:	bl	11254 <memcpy@plt>
   15994:	cmp	r6, #0
   15998:	beq	15948 <__printf_chk@plt+0x45b0>
   1599c:	mov	r2, r6
   159a0:	mov	r1, r7
   159a4:	add	r0, r9, r5
   159a8:	bl	11254 <memcpy@plt>
   159ac:	b	15948 <__printf_chk@plt+0x45b0>
   159b0:	mov	r2, r6
   159b4:	mov	r1, r7
   159b8:	bl	11254 <memcpy@plt>
   159bc:	mov	r0, r4
   159c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   159c4:	andeq	r9, r1, r4, lsr r0
   159c8:	ldr	r2, [r0, #4]
   159cc:	mov	r3, r0
   159d0:	ldr	r0, [r1, #4]
   159d4:	push	{r4, lr}
   159d8:	cmp	r2, r0
   159dc:	bgt	15a0c <__printf_chk@plt+0x4674>
   159e0:	cmp	r2, #0
   159e4:	bne	159f0 <__printf_chk@plt+0x4658>
   159e8:	mov	r0, #1
   159ec:	pop	{r4, pc}
   159f0:	ldr	r1, [r1]
   159f4:	ldr	r0, [r3]
   159f8:	bl	1132c <memcmp@plt>
   159fc:	cmp	r0, #0
   15a00:	movgt	r0, #0
   15a04:	movle	r0, #1
   15a08:	pop	{r4, pc}
   15a0c:	cmp	r0, #0
   15a10:	popeq	{r4, pc}
   15a14:	mov	r2, r0
   15a18:	ldr	r1, [r1]
   15a1c:	ldr	r0, [r3]
   15a20:	bl	1132c <memcmp@plt>
   15a24:	lsr	r0, r0, #31
   15a28:	pop	{r4, pc}
   15a2c:	ldr	r2, [r0, #4]
   15a30:	mov	r3, r0
   15a34:	ldr	r0, [r1, #4]
   15a38:	push	{r4, lr}
   15a3c:	cmp	r2, r0
   15a40:	bge	15a70 <__printf_chk@plt+0x46d8>
   15a44:	cmp	r2, #0
   15a48:	bne	15a54 <__printf_chk@plt+0x46bc>
   15a4c:	mov	r0, #1
   15a50:	pop	{r4, pc}
   15a54:	ldr	r1, [r1]
   15a58:	ldr	r0, [r3]
   15a5c:	bl	1132c <memcmp@plt>
   15a60:	cmp	r0, #0
   15a64:	movgt	r0, #0
   15a68:	movle	r0, #1
   15a6c:	pop	{r4, pc}
   15a70:	cmp	r0, #0
   15a74:	popeq	{r4, pc}
   15a78:	mov	r2, r0
   15a7c:	ldr	r1, [r1]
   15a80:	ldr	r0, [r3]
   15a84:	bl	1132c <memcmp@plt>
   15a88:	lsr	r0, r0, #31
   15a8c:	pop	{r4, pc}
   15a90:	mov	r3, r0
   15a94:	ldr	r2, [r1, #4]
   15a98:	ldr	r0, [r0, #4]
   15a9c:	push	{r4, lr}
   15aa0:	cmp	r0, r2
   15aa4:	blt	15ad0 <__printf_chk@plt+0x4738>
   15aa8:	cmp	r2, #0
   15aac:	bne	15ab8 <__printf_chk@plt+0x4720>
   15ab0:	mov	r0, #1
   15ab4:	pop	{r4, pc}
   15ab8:	ldr	r1, [r1]
   15abc:	ldr	r0, [r3]
   15ac0:	bl	1132c <memcmp@plt>
   15ac4:	mvn	r0, r0
   15ac8:	lsr	r0, r0, #31
   15acc:	pop	{r4, pc}
   15ad0:	cmp	r0, #0
   15ad4:	popeq	{r4, pc}
   15ad8:	mov	r2, r0
   15adc:	ldr	r1, [r1]
   15ae0:	ldr	r0, [r3]
   15ae4:	bl	1132c <memcmp@plt>
   15ae8:	cmp	r0, #0
   15aec:	movle	r0, #0
   15af0:	movgt	r0, #1
   15af4:	pop	{r4, pc}
   15af8:	mov	r3, r0
   15afc:	ldr	r2, [r1, #4]
   15b00:	ldr	r0, [r0, #4]
   15b04:	push	{r4, lr}
   15b08:	cmp	r0, r2
   15b0c:	ble	15b38 <__printf_chk@plt+0x47a0>
   15b10:	cmp	r2, #0
   15b14:	bne	15b20 <__printf_chk@plt+0x4788>
   15b18:	mov	r0, #1
   15b1c:	pop	{r4, pc}
   15b20:	ldr	r1, [r1]
   15b24:	ldr	r0, [r3]
   15b28:	bl	1132c <memcmp@plt>
   15b2c:	mvn	r0, r0
   15b30:	lsr	r0, r0, #31
   15b34:	pop	{r4, pc}
   15b38:	cmp	r0, #0
   15b3c:	popeq	{r4, pc}
   15b40:	mov	r2, r0
   15b44:	ldr	r1, [r1]
   15b48:	ldr	r0, [r3]
   15b4c:	bl	1132c <memcmp@plt>
   15b50:	cmp	r0, #0
   15b54:	movle	r0, #0
   15b58:	movgt	r0, #1
   15b5c:	pop	{r4, pc}
   15b60:	push	{r4, r5, lr}
   15b64:	subs	r5, r1, #0
   15b68:	sub	sp, sp, #12
   15b6c:	mov	r4, r0
   15b70:	blt	15b8c <__printf_chk@plt+0x47f4>
   15b74:	ldr	r1, [r4, #8]
   15b78:	cmp	r1, r5
   15b7c:	blt	15ba4 <__printf_chk@plt+0x480c>
   15b80:	str	r5, [r4, #4]
   15b84:	add	sp, sp, #12
   15b88:	pop	{r4, r5, pc}
   15b8c:	ldr	r1, [pc, #56]	; 15bcc <__printf_chk@plt+0x4834>
   15b90:	ldr	r0, [pc, #56]	; 15bd0 <__printf_chk@plt+0x4838>
   15b94:	bl	13558 <__printf_chk@plt+0x21c0>
   15b98:	ldr	r1, [r4, #8]
   15b9c:	cmp	r1, r5
   15ba0:	bge	15b80 <__printf_chk@plt+0x47e8>
   15ba4:	mov	r2, r4
   15ba8:	mov	r3, r5
   15bac:	ldr	r0, [r2], #8
   15bb0:	str	r2, [sp]
   15bb4:	ldr	r2, [r4, #4]
   15bb8:	bl	15408 <__printf_chk@plt+0x4070>
   15bbc:	str	r5, [r4, #4]
   15bc0:	str	r0, [r4]
   15bc4:	add	sp, sp, #12
   15bc8:	pop	{r4, r5, pc}
   15bcc:	andeq	r9, r1, r4, lsr r0
   15bd0:	andeq	r0, r0, r7, lsl #2
   15bd4:	mov	r3, #0
   15bd8:	str	r3, [r0, #4]
   15bdc:	bx	lr
   15be0:	push	{r4, lr}
   15be4:	ldr	r4, [r0]
   15be8:	cmp	r4, #0
   15bec:	beq	15c0c <__printf_chk@plt+0x4874>
   15bf0:	ldr	r2, [r0, #4]
   15bf4:	mov	r0, r4
   15bf8:	bl	112fc <memchr@plt>
   15bfc:	cmp	r0, #0
   15c00:	beq	15c0c <__printf_chk@plt+0x4874>
   15c04:	sub	r0, r0, r4
   15c08:	pop	{r4, pc}
   15c0c:	mvn	r0, #0
   15c10:	pop	{r4, pc}
   15c14:	push	{r4, r5, r6, lr}
   15c18:	ldrd	r4, [r0]
   15c1c:	cmp	r5, #0
   15c20:	add	r0, r5, #1
   15c24:	ble	15c84 <__printf_chk@plt+0x48ec>
   15c28:	add	r5, r4, r5
   15c2c:	sub	r4, r4, #1
   15c30:	sub	r5, r5, #1
   15c34:	mov	r3, r4
   15c38:	mov	r1, #0
   15c3c:	ldrb	r2, [r3, #1]!
   15c40:	cmp	r2, #0
   15c44:	addeq	r1, r1, #1
   15c48:	cmp	r3, r5
   15c4c:	bne	15c3c <__printf_chk@plt+0x48a4>
   15c50:	sub	r0, r0, r1
   15c54:	bl	11260 <malloc@plt>
   15c58:	mov	r1, r0
   15c5c:	ldrb	r2, [r4, #1]!
   15c60:	mov	r3, r1
   15c64:	cmp	r2, #0
   15c68:	strbne	r2, [r3], #1
   15c6c:	movne	r1, r3
   15c70:	cmp	r4, r5
   15c74:	bne	15c5c <__printf_chk@plt+0x48c4>
   15c78:	mov	r3, #0
   15c7c:	strb	r3, [r1]
   15c80:	pop	{r4, r5, r6, pc}
   15c84:	bl	11260 <malloc@plt>
   15c88:	mov	r1, r0
   15c8c:	b	15c78 <__printf_chk@plt+0x48e0>
   15c90:	push	{r4, r5, r6, lr}
   15c94:	ldr	r4, [r0, #4]
   15c98:	ldr	lr, [r0]
   15c9c:	subs	r6, r4, #1
   15ca0:	popmi	{r4, r5, r6, pc}
   15ca4:	ldrb	r3, [lr, r6]
   15ca8:	mov	r5, r0
   15cac:	cmp	r3, #32
   15cb0:	bne	15d88 <__printf_chk@plt+0x49f0>
   15cb4:	add	r1, lr, r6
   15cb8:	mov	r2, r6
   15cbc:	b	15cd0 <__printf_chk@plt+0x4938>
   15cc0:	ldrb	ip, [r1, #-1]!
   15cc4:	cmp	ip, #32
   15cc8:	bne	15cfc <__printf_chk@plt+0x4964>
   15ccc:	mov	r2, r3
   15cd0:	subs	r3, r2, #1
   15cd4:	bcs	15cc0 <__printf_chk@plt+0x4928>
   15cd8:	cmp	lr, #0
   15cdc:	mov	r4, #0
   15ce0:	str	r4, [r5, #4]
   15ce4:	popeq	{r4, r5, r6, pc}
   15ce8:	mov	r0, lr
   15cec:	bl	111dc <_ZdaPv@plt>
   15cf0:	str	r4, [r5]
   15cf4:	str	r4, [r5, #8]
   15cf8:	pop	{r4, r5, r6, pc}
   15cfc:	cmp	r3, #0
   15d00:	beq	15da4 <__printf_chk@plt+0x4a0c>
   15d04:	ldrb	r1, [lr]
   15d08:	cmp	r1, #32
   15d0c:	bne	15d74 <__printf_chk@plt+0x49dc>
   15d10:	add	r3, lr, r3
   15d14:	add	r2, lr, #1
   15d18:	mov	r4, r2
   15d1c:	sub	ip, r3, r2
   15d20:	ldrb	r1, [r2], #1
   15d24:	cmp	r1, #32
   15d28:	beq	15d18 <__printf_chk@plt+0x4980>
   15d2c:	cmp	r6, ip
   15d30:	popeq	{r4, r5, r6, pc}
   15d34:	cmp	ip, #0
   15d38:	blt	15cd8 <__printf_chk@plt+0x4940>
   15d3c:	add	r3, ip, #1
   15d40:	str	r3, [r5, #4]
   15d44:	ldr	r0, [r5, #8]
   15d48:	bl	11128 <_Znaj@plt>
   15d4c:	mov	r1, r4
   15d50:	ldr	r2, [r5, #4]
   15d54:	mov	r6, r0
   15d58:	bl	11254 <memcpy@plt>
   15d5c:	ldr	r0, [r5]
   15d60:	cmp	r0, #0
   15d64:	beq	15d6c <__printf_chk@plt+0x49d4>
   15d68:	bl	111dc <_ZdaPv@plt>
   15d6c:	str	r6, [r5]
   15d70:	pop	{r4, r5, r6, pc}
   15d74:	cmp	r4, r2
   15d78:	popeq	{r4, r5, r6, pc}
   15d7c:	mov	r4, lr
   15d80:	mov	ip, r3
   15d84:	b	15d3c <__printf_chk@plt+0x49a4>
   15d88:	cmp	r6, #0
   15d8c:	popeq	{r4, r5, r6, pc}
   15d90:	ldrb	r3, [lr]
   15d94:	cmp	r3, #32
   15d98:	popne	{r4, r5, r6, pc}
   15d9c:	mov	r3, r6
   15da0:	b	15d10 <__printf_chk@plt+0x4978>
   15da4:	cmp	r6, #0
   15da8:	bne	15d7c <__printf_chk@plt+0x49e4>
   15dac:	pop	{r4, r5, r6, pc}
   15db0:	push	{r4, r5, r6, lr}
   15db4:	ldrd	r4, [r0]
   15db8:	cmp	r5, #0
   15dbc:	pople	{r4, r5, r6, pc}
   15dc0:	add	r5, r4, r5
   15dc4:	mov	r6, r1
   15dc8:	sub	r5, r5, #1
   15dcc:	sub	r4, r4, #1
   15dd0:	ldrb	r0, [r4, #1]!
   15dd4:	mov	r1, r6
   15dd8:	bl	111b8 <putc@plt>
   15ddc:	cmp	r4, r5
   15de0:	bne	15dd0 <__printf_chk@plt+0x4a38>
   15de4:	pop	{r4, r5, r6, pc}
   15de8:	push	{r4, r5, lr}
   15dec:	sub	sp, sp, #12
   15df0:	ldr	r5, [pc, #48]	; 15e28 <__printf_chk@plt+0x4a90>
   15df4:	mov	r4, r0
   15df8:	str	r1, [sp]
   15dfc:	ldr	r3, [pc, #40]	; 15e2c <__printf_chk@plt+0x4a94>
   15e00:	mov	r2, #12
   15e04:	mov	r0, r5
   15e08:	mov	r1, #1
   15e0c:	bl	11338 <__sprintf_chk@plt>
   15e10:	mov	r1, r5
   15e14:	mov	r0, r4
   15e18:	bl	1551c <__printf_chk@plt+0x4184>
   15e1c:	mov	r0, r4
   15e20:	add	sp, sp, #12
   15e24:	pop	{r4, r5, pc}
   15e28:			; <UNDEFINED> instruction: 0x0002a2b8
   15e2c:	andeq	r9, r1, r8, asr r0
   15e30:	subs	r1, r0, #0
   15e34:	beq	15e60 <__printf_chk@plt+0x4ac8>
   15e38:	push	{r4, r5, r6, lr}
   15e3c:	mov	r4, r1
   15e40:	bl	1126c <strlen@plt>
   15e44:	add	r5, r0, #1
   15e48:	mov	r0, r5
   15e4c:	bl	11260 <malloc@plt>
   15e50:	mov	r2, r5
   15e54:	mov	r1, r4
   15e58:	bl	11254 <memcpy@plt>
   15e5c:	pop	{r4, r5, r6, pc}
   15e60:	mov	r0, r1
   15e64:	bx	lr
   15e68:	push	{r4, r5, r6, lr}
   15e6c:	mov	r5, r0
   15e70:	ldr	r4, [pc, #40]	; 15ea0 <__printf_chk@plt+0x4b08>
   15e74:	ldr	r0, [r4]
   15e78:	cmp	r0, #0
   15e7c:	beq	15e90 <__printf_chk@plt+0x4af8>
   15e80:	mov	r1, r5
   15e84:	bl	112d8 <strcmp@plt>
   15e88:	cmp	r0, #0
   15e8c:	popeq	{r4, r5, r6, pc}
   15e90:	mov	r0, r5
   15e94:	bl	15e30 <__printf_chk@plt+0x4a98>
   15e98:	str	r0, [r4]
   15e9c:	pop	{r4, r5, r6, pc}
   15ea0:	andeq	sl, r2, r4, asr #4
   15ea4:	ldr	r3, [pc, #4]	; 15eb0 <__printf_chk@plt+0x4b18>
   15ea8:	str	r0, [r3]
   15eac:	bx	lr
   15eb0:	andeq	sl, r2, r4, lsr #5
   15eb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15eb8:	sub	sp, sp, #28
   15ebc:	ldr	r6, [pc, #596]	; 16118 <__printf_chk@plt+0x4d80>
   15ec0:	mov	r4, #0
   15ec4:	add	r3, r6, #1792	; 0x700
   15ec8:	add	r2, r6, #2048	; 0x800
   15ecc:	add	r3, r3, #4
   15ed0:	add	r7, r6, #1024	; 0x400
   15ed4:	add	r9, r6, #1280	; 0x500
   15ed8:	add	r8, r6, #1536	; 0x600
   15edc:	add	r0, r6, #2304	; 0x900
   15ee0:	str	r3, [sp, #8]
   15ee4:	add	r3, r2, #4
   15ee8:	add	ip, r6, #2560	; 0xa00
   15eec:	mov	r2, r6
   15ef0:	str	r3, [sp, #12]
   15ef4:	add	fp, r6, #260	; 0x104
   15ef8:	add	r3, r0, #4
   15efc:	add	sl, r6, #516	; 0x204
   15f00:	add	r7, r7, #4
   15f04:	add	r9, r9, #4
   15f08:	add	r8, r8, #4
   15f0c:	add	r6, r6, #772	; 0x304
   15f10:	mov	r5, r4
   15f14:	mov	r1, #1
   15f18:	str	r3, [sp, #16]
   15f1c:	add	r3, ip, #4
   15f20:	str	r3, [sp, #4]
   15f24:	str	r1, [r2], #3
   15f28:	bics	r1, r4, #127	; 0x7f
   15f2c:	bne	16050 <__printf_chk@plt+0x4cb8>
   15f30:	str	r2, [sp, #20]
   15f34:	bl	111e8 <__ctype_b_loc@plt>
   15f38:	lsl	r1, r4, #1
   15f3c:	mov	r3, #1
   15f40:	ldr	r2, [sp, #20]
   15f44:	ldr	ip, [r0]
   15f48:	ldrh	ip, [ip, r1]
   15f4c:	ands	ip, ip, #1024	; 0x400
   15f50:	strbne	r3, [fp]
   15f54:	strbeq	ip, [fp]
   15f58:	ldr	ip, [r0]
   15f5c:	ldrh	ip, [ip, r1]
   15f60:	ands	ip, ip, #256	; 0x100
   15f64:	strbne	r3, [sl]
   15f68:	strbeq	ip, [sl]
   15f6c:	ldr	ip, [r0]
   15f70:	ldrh	ip, [ip, r1]
   15f74:	ands	ip, ip, #512	; 0x200
   15f78:	strbeq	ip, [r6]
   15f7c:	sub	ip, r4, #48	; 0x30
   15f80:	strbne	r3, [r6]
   15f84:	cmp	ip, #9
   15f88:	bls	16110 <__printf_chk@plt+0x4d78>
   15f8c:	strb	r5, [r7]
   15f90:	ldr	ip, [r0]
   15f94:	ldrh	ip, [ip, r1]
   15f98:	ands	ip, ip, #4096	; 0x1000
   15f9c:	bne	160e4 <__printf_chk@plt+0x4d4c>
   15fa0:	ldr	lr, [sp, #8]
   15fa4:	strb	ip, [lr, r4]
   15fa8:	ldr	ip, [r0]
   15fac:	ldrh	ip, [ip, r1]
   15fb0:	ands	ip, ip, #8192	; 0x2000
   15fb4:	bne	160fc <__printf_chk@plt+0x4d64>
   15fb8:	strb	ip, [r9]
   15fbc:	ldr	ip, [r0]
   15fc0:	ldrh	ip, [ip, r1]
   15fc4:	ands	ip, ip, #4
   15fc8:	bne	160c4 <__printf_chk@plt+0x4d2c>
   15fcc:	ldr	lr, [sp, #12]
   15fd0:	strb	ip, [lr, r4]
   15fd4:	ldr	ip, [r0]
   15fd8:	ldrh	ip, [ip, r1]
   15fdc:	ands	ip, ip, #8
   15fe0:	bne	160dc <__printf_chk@plt+0x4d44>
   15fe4:	strb	ip, [r8]
   15fe8:	ldr	ip, [r0]
   15fec:	ldrh	ip, [ip, r1]
   15ff0:	ands	ip, ip, #16384	; 0x4000
   15ff4:	bne	160a0 <__printf_chk@plt+0x4d08>
   15ff8:	ldr	lr, [sp, #16]
   15ffc:	strb	ip, [lr, r4]
   16000:	ldr	lr, [r0]
   16004:	ldrsh	lr, [lr, r1]
   16008:	cmp	lr, #0
   1600c:	blt	16104 <__printf_chk@plt+0x4d6c>
   16010:	ldr	lr, [sp, #4]
   16014:	strb	ip, [lr, r4]
   16018:	ldr	r0, [r0]
   1601c:	add	r4, r4, #1
   16020:	add	fp, fp, #1
   16024:	ldrh	r1, [r0, r1]
   16028:	add	sl, sl, #1
   1602c:	add	r6, r6, #1
   16030:	add	r7, r7, #1
   16034:	lsr	r1, r1, #1
   16038:	and	r1, r1, #1
   1603c:	strb	r1, [r2, #1]!
   16040:	bics	r1, r4, #127	; 0x7f
   16044:	add	r9, r9, #1
   16048:	add	r8, r8, #1
   1604c:	beq	15f30 <__printf_chk@plt+0x4b98>
   16050:	ldr	r1, [sp, #8]
   16054:	strb	r5, [fp], #1
   16058:	strb	r5, [sl], #1
   1605c:	strb	r5, [r4, r1]
   16060:	ldr	r1, [sp, #12]
   16064:	strb	r5, [r6], #1
   16068:	strb	r5, [r7], #1
   1606c:	strb	r5, [r4, r1]
   16070:	ldr	r1, [sp, #16]
   16074:	strb	r5, [r9], #1
   16078:	strb	r5, [r8], #1
   1607c:	strb	r5, [r4, r1]
   16080:	ldr	r1, [sp, #4]
   16084:	strb	r5, [r2, #1]!
   16088:	strb	r5, [r4, r1]
   1608c:	add	r4, r4, #1
   16090:	cmp	r4, #256	; 0x100
   16094:	bne	15f28 <__printf_chk@plt+0x4b90>
   16098:	add	sp, sp, #28
   1609c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160a0:	ldr	ip, [sp, #16]
   160a4:	strb	r3, [ip, r4]
   160a8:	ldr	ip, [r0]
   160ac:	ldrsh	ip, [ip, r1]
   160b0:	cmp	ip, #0
   160b4:	blt	16104 <__printf_chk@plt+0x4d6c>
   160b8:	ldr	ip, [sp, #4]
   160bc:	strb	r5, [ip, r4]
   160c0:	b	16018 <__printf_chk@plt+0x4c80>
   160c4:	ldr	ip, [sp, #12]
   160c8:	strb	r3, [ip, r4]
   160cc:	ldr	ip, [r0]
   160d0:	ldrh	ip, [ip, r1]
   160d4:	ands	ip, ip, #8
   160d8:	beq	15fe4 <__printf_chk@plt+0x4c4c>
   160dc:	strb	r3, [r8]
   160e0:	b	15fe8 <__printf_chk@plt+0x4c50>
   160e4:	ldr	ip, [sp, #8]
   160e8:	strb	r3, [ip, r4]
   160ec:	ldr	ip, [r0]
   160f0:	ldrh	ip, [ip, r1]
   160f4:	ands	ip, ip, #8192	; 0x2000
   160f8:	beq	15fb8 <__printf_chk@plt+0x4c20>
   160fc:	strb	r3, [r9]
   16100:	b	15fbc <__printf_chk@plt+0x4c24>
   16104:	ldr	ip, [sp, #4]
   16108:	strb	r3, [ip, r4]
   1610c:	b	16018 <__printf_chk@plt+0x4c80>
   16110:	strb	r3, [r7]
   16114:	b	15f90 <__printf_chk@plt+0x4bf8>
   16118:	andeq	sl, r2, r4, asr #5
   1611c:	sub	r3, r0, #1
   16120:	add	r2, r0, #255	; 0xff
   16124:	mov	r1, #0
   16128:	strb	r1, [r3, #1]!
   1612c:	cmp	r3, r2
   16130:	bne	16128 <__printf_chk@plt+0x4d90>
   16134:	bx	lr
   16138:	sub	r3, r0, #1
   1613c:	add	r1, r0, #255	; 0xff
   16140:	mov	r2, #0
   16144:	strb	r2, [r3, #1]!
   16148:	cmp	r3, r1
   1614c:	bne	16144 <__printf_chk@plt+0x4dac>
   16150:	bx	lr
   16154:	sub	r3, r0, #1
   16158:	add	ip, r0, #255	; 0xff
   1615c:	mov	r2, #0
   16160:	strb	r2, [r3, #1]!
   16164:	cmp	r3, ip
   16168:	bne	16160 <__printf_chk@plt+0x4dc8>
   1616c:	ldrb	r3, [r1]
   16170:	cmp	r3, #0
   16174:	bxeq	lr
   16178:	mov	r2, #1
   1617c:	strb	r2, [r0, r3]
   16180:	ldrb	r3, [r1, #1]!
   16184:	cmp	r3, #0
   16188:	bne	1617c <__printf_chk@plt+0x4de4>
   1618c:	bx	lr
   16190:	sub	r3, r0, #1
   16194:	add	ip, r0, #255	; 0xff
   16198:	mov	r2, #0
   1619c:	strb	r2, [r3, #1]!
   161a0:	cmp	r3, ip
   161a4:	bne	1619c <__printf_chk@plt+0x4e04>
   161a8:	ldrb	r3, [r1]
   161ac:	cmp	r3, #0
   161b0:	bxeq	lr
   161b4:	mov	r2, #1
   161b8:	strb	r2, [r0, r3]
   161bc:	ldrb	r3, [r1, #1]!
   161c0:	cmp	r3, #0
   161c4:	bne	161b8 <__printf_chk@plt+0x4e20>
   161c8:	bx	lr
   161cc:	bx	lr
   161d0:	push	{lr}		; (str lr, [sp, #-4]!)
   161d4:	sub	r1, r1, #1
   161d8:	mov	r3, r0
   161dc:	add	ip, r0, #256	; 0x100
   161e0:	mov	lr, #1
   161e4:	ldrb	r2, [r1, #1]!
   161e8:	add	r3, r3, #1
   161ec:	cmp	r2, #0
   161f0:	strbne	lr, [r3, #-1]
   161f4:	cmp	r3, ip
   161f8:	bne	161e4 <__printf_chk@plt+0x4e4c>
   161fc:	pop	{pc}		; (ldr pc, [sp], #4)
   16200:	ldr	r3, [pc, #28]	; 16224 <__printf_chk@plt+0x4e8c>
   16204:	push	{r4, lr}
   16208:	mov	r4, r0
   1620c:	ldr	r3, [r3]
   16210:	cmp	r3, #0
   16214:	bne	1621c <__printf_chk@plt+0x4e84>
   16218:	bl	15eb4 <__printf_chk@plt+0x4b1c>
   1621c:	mov	r0, r4
   16220:	pop	{r4, pc}
   16224:	andeq	sl, r2, r4, asr #5
   16228:	push	{r4, lr}
   1622c:	mov	r1, #4
   16230:	ldr	r0, [pc, #32]	; 16258 <__printf_chk@plt+0x4ec0>
   16234:	bl	11248 <pathconf@plt>
   16238:	cmp	r0, #0
   1623c:	ble	16250 <__printf_chk@plt+0x4eb8>
   16240:	mov	r1, #4
   16244:	ldr	r0, [pc, #12]	; 16258 <__printf_chk@plt+0x4ec0>
   16248:	pop	{r4, lr}
   1624c:	b	11248 <pathconf@plt>
   16250:	mov	r0, #1024	; 0x400
   16254:	pop	{r4, pc}
   16258:	andeq	r9, r1, r4, lsl r0
   1625c:	push	{r1, r2, r3}
   16260:	push	{r4, r5, r6, r7, r8, lr}
   16264:	sub	sp, sp, #2016	; 0x7e0
   16268:	ldr	r5, [pc, #228]	; 16354 <__printf_chk@plt+0x4fbc>
   1626c:	sub	sp, sp, #4
   16270:	add	r2, sp, #2048	; 0x800
   16274:	ldr	ip, [r5]
   16278:	add	r3, sp, #16
   1627c:	add	r6, sp, #12
   16280:	sub	r1, r3, #12
   16284:	str	ip, [sp, #2012]	; 0x7dc
   16288:	mov	r3, r2
   1628c:	mov	ip, #2000	; 0x7d0
   16290:	str	r2, [sp, #8]
   16294:	mov	r8, r0
   16298:	ldr	r2, [sp, #2044]	; 0x7fc
   1629c:	mov	r0, r6
   162a0:	str	ip, [sp, #4]
   162a4:	bl	16368 <__printf_chk@plt+0x4fd0>
   162a8:	ldr	r4, [sp, #4]
   162ac:	subs	r7, r0, #0
   162b0:	beq	16340 <__printf_chk@plt+0x4fa8>
   162b4:	mov	r3, r8
   162b8:	mov	r2, r4
   162bc:	mov	r1, #1
   162c0:	bl	1123c <fwrite@plt>
   162c4:	cmp	r0, r4
   162c8:	bcc	16308 <__printf_chk@plt+0x4f70>
   162cc:	cmp	r7, r6
   162d0:	beq	162dc <__printf_chk@plt+0x4f44>
   162d4:	mov	r0, r7
   162d8:	bl	1108c <free@plt>
   162dc:	subs	r0, r4, #0
   162e0:	blt	16334 <__printf_chk@plt+0x4f9c>
   162e4:	ldr	r2, [sp, #2012]	; 0x7dc
   162e8:	ldr	r3, [r5]
   162ec:	cmp	r2, r3
   162f0:	bne	16350 <__printf_chk@plt+0x4fb8>
   162f4:	add	sp, sp, #2016	; 0x7e0
   162f8:	add	sp, sp, #4
   162fc:	pop	{r4, r5, r6, r7, r8, lr}
   16300:	add	sp, sp, #12
   16304:	bx	lr
   16308:	cmp	r7, r6
   1630c:	mvneq	r0, #0
   16310:	beq	162e4 <__printf_chk@plt+0x4f4c>
   16314:	bl	112f0 <__errno_location@plt>
   16318:	mov	r4, r0
   1631c:	mov	r0, r7
   16320:	ldr	r6, [r4]
   16324:	bl	1108c <free@plt>
   16328:	str	r6, [r4]
   1632c:	mvn	r0, #0
   16330:	b	162e4 <__printf_chk@plt+0x4f4c>
   16334:	bl	112f0 <__errno_location@plt>
   16338:	mov	r3, #75	; 0x4b
   1633c:	str	r3, [r0]
   16340:	mov	r0, r8
   16344:	bl	16358 <__printf_chk@plt+0x4fc0>
   16348:	mvn	r0, #0
   1634c:	b	162e4 <__printf_chk@plt+0x4f4c>
   16350:	bl	11194 <__stack_chk_fail@plt>
   16354:			; <UNDEFINED> instruction: 0x00029db0
   16358:	ldr	r3, [r0]
   1635c:	orr	r3, r3, #32
   16360:	str	r3, [r0]
   16364:	bx	lr
   16368:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1636c:	mov	r9, r2
   16370:	ldr	r2, [pc, #3592]	; 17180 <__printf_chk@plt+0x5de8>
   16374:	add	fp, sp, #32
   16378:	sub	sp, sp, #540	; 0x21c
   1637c:	ldr	ip, [r2]
   16380:	str	r0, [fp, #-504]	; 0xfffffe08
   16384:	str	r1, [fp, #-532]	; 0xfffffdec
   16388:	mov	r0, r9
   1638c:	sub	r2, fp, #484	; 0x1e4
   16390:	sub	r1, fp, #364	; 0x16c
   16394:	mov	r4, r3
   16398:	str	ip, [fp, #-40]	; 0xffffffd8
   1639c:	bl	172b8 <__printf_chk@plt+0x5f20>
   163a0:	cmp	r0, #0
   163a4:	blt	1697c <__printf_chk@plt+0x55e4>
   163a8:	sub	r1, fp, #484	; 0x1e4
   163ac:	mov	r0, r4
   163b0:	bl	17184 <__printf_chk@plt+0x5dec>
   163b4:	cmp	r0, #0
   163b8:	blt	16f38 <__printf_chk@plt+0x5ba0>
   163bc:	ldr	r2, [fp, #-356]	; 0xfffffe9c
   163c0:	ldr	r3, [fp, #-352]	; 0xfffffea0
   163c4:	adds	r2, r2, #7
   163c8:	mvncs	r2, #0
   163cc:	adds	r3, r3, r2
   163d0:	bcs	16970 <__printf_chk@plt+0x55d8>
   163d4:	mov	r0, #6
   163d8:	adds	r0, r3, r0
   163dc:	bcs	16970 <__printf_chk@plt+0x55d8>
   163e0:	cmp	r0, #4000	; 0xfa0
   163e4:	bcc	16614 <__printf_chk@plt+0x527c>
   163e8:	cmn	r0, #1
   163ec:	beq	16970 <__printf_chk@plt+0x55d8>
   163f0:	bl	11260 <malloc@plt>
   163f4:	subs	r3, r0, #0
   163f8:	str	r3, [fp, #-516]	; 0xfffffdfc
   163fc:	beq	16970 <__printf_chk@plt+0x55d8>
   16400:	str	r3, [fp, #-536]	; 0xfffffde8
   16404:	ldr	r3, [fp, #-504]	; 0xfffffe08
   16408:	ldr	sl, [fp, #-360]	; 0xfffffe98
   1640c:	cmp	r3, #0
   16410:	ldr	r5, [fp, #-504]	; 0xfffffe08
   16414:	ldrne	r3, [fp, #-532]	; 0xfffffdec
   16418:	ldreq	r6, [fp, #-504]	; 0xfffffe08
   1641c:	mov	r4, #0
   16420:	ldrne	r6, [r3]
   16424:	mov	r3, r5
   16428:	ldr	r5, [sl]
   1642c:	str	r4, [fp, #-528]	; 0xfffffdf0
   16430:	cmp	r5, r9
   16434:	beq	1688c <__printf_chk@plt+0x54f4>
   16438:	sub	r5, r5, r9
   1643c:	adds	r2, r4, r5
   16440:	mov	r7, r2
   16444:	bcs	16894 <__printf_chk@plt+0x54fc>
   16448:	cmp	r6, r2
   1644c:	bcs	164c0 <__printf_chk@plt+0x5128>
   16450:	cmp	r6, #0
   16454:	bne	16984 <__printf_chk@plt+0x55ec>
   16458:	cmp	r2, #12
   1645c:	movls	r6, #12
   16460:	bhi	16994 <__printf_chk@plt+0x55fc>
   16464:	ldr	r2, [fp, #-504]	; 0xfffffe08
   16468:	cmp	r3, r2
   1646c:	cmpne	r3, #0
   16470:	sub	r8, r3, r2
   16474:	clz	r8, r8
   16478:	lsr	r8, r8, #5
   1647c:	bne	16928 <__printf_chk@plt+0x5590>
   16480:	mov	r0, r6
   16484:	str	r3, [fp, #-508]	; 0xfffffe04
   16488:	bl	11260 <malloc@plt>
   1648c:	ldr	r3, [fp, #-508]	; 0xfffffe04
   16490:	subs	ip, r0, #0
   16494:	beq	16d4c <__printf_chk@plt+0x59b4>
   16498:	cmp	r4, #0
   1649c:	moveq	r8, #0
   164a0:	cmp	r8, #0
   164a4:	moveq	r3, ip
   164a8:	beq	164c0 <__printf_chk@plt+0x5128>
   164ac:	mov	r1, r3
   164b0:	mov	r2, r4
   164b4:	str	ip, [fp, #-508]	; 0xfffffe04
   164b8:	bl	11254 <memcpy@plt>
   164bc:	ldr	r3, [fp, #-508]	; 0xfffffe04
   164c0:	add	r0, r3, r4
   164c4:	mov	r2, r5
   164c8:	mov	r1, r9
   164cc:	str	r3, [fp, #-508]	; 0xfffffe04
   164d0:	bl	11254 <memcpy@plt>
   164d4:	ldr	r3, [fp, #-508]	; 0xfffffe04
   164d8:	ldr	r2, [fp, #-364]	; 0xfffffe94
   164dc:	ldr	r1, [fp, #-528]	; 0xfffffdf0
   164e0:	cmp	r2, r1
   164e4:	beq	17020 <__printf_chk@plt+0x5c88>
   164e8:	ldrb	r1, [sl, #36]	; 0x24
   164ec:	ldr	r2, [sl, #40]	; 0x28
   164f0:	cmp	r1, #37	; 0x25
   164f4:	beq	167d4 <__printf_chk@plt+0x543c>
   164f8:	cmn	r2, #1
   164fc:	beq	1717c <__printf_chk@plt+0x5de4>
   16500:	ldr	r9, [fp, #-480]	; 0xfffffe20
   16504:	cmp	r1, #110	; 0x6e
   16508:	add	r1, r9, r2, lsl #4
   1650c:	ldr	r5, [r9, r2, lsl #4]
   16510:	beq	1694c <__printf_chk@plt+0x55b4>
   16514:	ldr	r2, [sl, #8]
   16518:	ldr	r0, [fp, #-516]	; 0xfffffdfc
   1651c:	tst	r2, #1
   16520:	mov	r1, #37	; 0x25
   16524:	strb	r1, [r0]
   16528:	ldrne	r0, [fp, #-516]	; 0xfffffdfc
   1652c:	movne	r1, #39	; 0x27
   16530:	addne	r4, r0, #2
   16534:	strbne	r1, [r0, #1]
   16538:	addeq	r4, r0, #1
   1653c:	tst	r2, #2
   16540:	movne	r1, #45	; 0x2d
   16544:	strbne	r1, [r4], #1
   16548:	tst	r2, #4
   1654c:	movne	r1, #43	; 0x2b
   16550:	strbne	r1, [r4], #1
   16554:	tst	r2, #8
   16558:	movne	r1, #32
   1655c:	strbne	r1, [r4], #1
   16560:	tst	r2, #16
   16564:	movne	r1, #35	; 0x23
   16568:	strbne	r1, [r4], #1
   1656c:	tst	r2, #64	; 0x40
   16570:	movne	r1, #73	; 0x49
   16574:	strbne	r1, [r4], #1
   16578:	tst	r2, #32
   1657c:	movne	r2, #48	; 0x30
   16580:	strbne	r2, [r4], #1
   16584:	ldr	r1, [sl, #12]
   16588:	ldr	r8, [sl, #16]
   1658c:	cmp	r1, r8
   16590:	beq	165b0 <__printf_chk@plt+0x5218>
   16594:	sub	r8, r8, r1
   16598:	mov	r0, r4
   1659c:	mov	r2, r8
   165a0:	str	r3, [fp, #-508]	; 0xfffffe04
   165a4:	bl	11254 <memcpy@plt>
   165a8:	ldr	r3, [fp, #-508]	; 0xfffffe04
   165ac:	add	r4, r4, r8
   165b0:	ldr	r1, [sl, #24]
   165b4:	ldr	r8, [sl, #28]
   165b8:	cmp	r1, r8
   165bc:	beq	165dc <__printf_chk@plt+0x5244>
   165c0:	sub	r8, r8, r1
   165c4:	mov	r0, r4
   165c8:	mov	r2, r8
   165cc:	str	r3, [fp, #-508]	; 0xfffffe04
   165d0:	bl	11254 <memcpy@plt>
   165d4:	ldr	r3, [fp, #-508]	; 0xfffffe04
   165d8:	add	r4, r4, r8
   165dc:	sub	r2, r5, #7
   165e0:	cmp	r2, #9
   165e4:	ldrls	pc, [pc, r2, lsl #2]
   165e8:	b	16644 <__printf_chk@plt+0x52ac>
   165ec:	andeq	r6, r1, ip, lsr r6
   165f0:	andeq	r6, r1, ip, lsr r6
   165f4:	andeq	r6, r1, r4, lsr r6
   165f8:	andeq	r6, r1, r4, lsr r6
   165fc:	andeq	r6, r1, r4, asr #12
   16600:	andeq	r6, r1, r4, lsr #19
   16604:	andeq	r6, r1, r4, asr #12
   16608:	andeq	r6, r1, ip, lsr r6
   1660c:	andeq	r6, r1, r4, asr #12
   16610:	andeq	r6, r1, ip, lsr r6
   16614:	add	r3, r3, #13
   16618:	bic	r3, r3, #7
   1661c:	sub	sp, sp, r3
   16620:	add	r3, sp, #32
   16624:	str	r3, [fp, #-516]	; 0xfffffdfc
   16628:	mov	r3, #0
   1662c:	str	r3, [fp, #-536]	; 0xfffffde8
   16630:	b	16404 <__printf_chk@plt+0x506c>
   16634:	mov	r2, #108	; 0x6c
   16638:	strb	r2, [r4], #1
   1663c:	mov	r2, #108	; 0x6c
   16640:	strb	r2, [r4], #1
   16644:	ldrb	r2, [sl, #36]	; 0x24
   16648:	mov	r1, #0
   1664c:	strb	r1, [r4, #1]
   16650:	strb	r2, [r4]
   16654:	ldr	r2, [sl, #20]
   16658:	cmn	r2, #1
   1665c:	beq	16dfc <__printf_chk@plt+0x5a64>
   16660:	ldr	r1, [r9, r2, lsl #4]
   16664:	add	r2, r9, r2, lsl #4
   16668:	cmp	r1, #5
   1666c:	bne	1717c <__printf_chk@plt+0x5de4>
   16670:	ldr	r2, [r2, #8]
   16674:	mov	r8, #1
   16678:	str	r2, [fp, #-492]	; 0xfffffe14
   1667c:	ldr	r2, [sl, #32]
   16680:	cmn	r2, #1
   16684:	beq	166ac <__printf_chk@plt+0x5314>
   16688:	ldr	r1, [r9, r2, lsl #4]
   1668c:	add	r9, r9, r2, lsl #4
   16690:	cmp	r1, #5
   16694:	bne	1717c <__printf_chk@plt+0x5de4>
   16698:	sub	r2, fp, #36	; 0x24
   1669c:	add	r2, r2, r8, lsl #2
   166a0:	ldr	r1, [r9, #8]
   166a4:	add	r8, r8, #1
   166a8:	str	r1, [r2, #-456]	; 0xfffffe38
   166ac:	mov	r2, #2
   166b0:	adds	r2, r7, r2
   166b4:	str	r2, [fp, #-524]	; 0xfffffdf4
   166b8:	bcs	16e34 <__printf_chk@plt+0x5a9c>
   166bc:	cmp	r6, r2
   166c0:	bcs	16e3c <__printf_chk@plt+0x5aa4>
   166c4:	cmp	r6, #0
   166c8:	bne	16cf8 <__printf_chk@plt+0x5960>
   166cc:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   166d0:	cmp	r2, #12
   166d4:	movls	r6, #12
   166d8:	bhi	16d0c <__printf_chk@plt+0x5974>
   166dc:	ldr	r1, [fp, #-504]	; 0xfffffe08
   166e0:	sub	r2, r3, r1
   166e4:	cmp	r3, r1
   166e8:	cmpne	r3, #0
   166ec:	clz	r2, r2
   166f0:	lsr	r2, r2, #5
   166f4:	str	r2, [fp, #-508]	; 0xfffffe04
   166f8:	bne	16e04 <__printf_chk@plt+0x5a6c>
   166fc:	mov	r0, r6
   16700:	str	r3, [fp, #-512]	; 0xfffffe00
   16704:	bl	11260 <malloc@plt>
   16708:	ldr	r3, [fp, #-512]	; 0xfffffe00
   1670c:	ldr	r2, [fp, #-508]	; 0xfffffe04
   16710:	subs	r9, r0, #0
   16714:	beq	16d4c <__printf_chk@plt+0x59b4>
   16718:	cmp	r7, #0
   1671c:	moveq	r2, #0
   16720:	cmp	r2, #0
   16724:	beq	16734 <__printf_chk@plt+0x539c>
   16728:	mov	r1, r3
   1672c:	mov	r2, r7
   16730:	bl	11254 <memcpy@plt>
   16734:	mov	r3, #0
   16738:	strb	r3, [r9, r7]
   1673c:	bl	112f0 <__errno_location@plt>
   16740:	sub	r3, r5, #1
   16744:	str	r3, [fp, #-520]	; 0xfffffdf8
   16748:	ldr	r3, [r0]
   1674c:	str	r0, [fp, #-508]	; 0xfffffe04
   16750:	str	r3, [fp, #-540]	; 0xfffffde4
   16754:	sub	r3, r6, r7
   16758:	str	r3, [fp, #-512]	; 0xfffffe00
   1675c:	ldr	r3, [fp, #-512]	; 0xfffffe00
   16760:	mvn	r2, #0
   16764:	cmp	r3, #0
   16768:	str	r2, [fp, #-496]	; 0xfffffe10
   1676c:	ldr	r2, [fp, #-508]	; 0xfffffe04
   16770:	movge	r5, r3
   16774:	ldr	r3, [fp, #-520]	; 0xfffffdf8
   16778:	mov	r1, #0
   1677c:	str	r1, [r2]
   16780:	mvnlt	r5, #-2147483648	; 0x80000000
   16784:	cmp	r3, #16
   16788:	ldrls	pc, [pc, r3, lsl #2]
   1678c:	b	1717c <__printf_chk@plt+0x5de4>
   16790:	ldrdeq	r6, [r1], -r8
   16794:			; <UNDEFINED> instruction: 0x00016cb8
   16798:	andeq	r6, r1, ip, asr ip
   1679c:	andeq	r6, r1, r0, lsl ip
   167a0:			; <UNDEFINED> instruction: 0x000169b0
   167a4:			; <UNDEFINED> instruction: 0x000169b0
   167a8:			; <UNDEFINED> instruction: 0x000169b0
   167ac:			; <UNDEFINED> instruction: 0x000169b0
   167b0:	ldrdeq	r6, [r1], -r4
   167b4:	ldrdeq	r6, [r1], -r4
   167b8:	andeq	r6, r1, r4, asr #23
   167bc:	andeq	r6, r1, r4, asr #23
   167c0:			; <UNDEFINED> instruction: 0x000169b0
   167c4:			; <UNDEFINED> instruction: 0x000169b0
   167c8:			; <UNDEFINED> instruction: 0x000169b0
   167cc:			; <UNDEFINED> instruction: 0x000169b0
   167d0:			; <UNDEFINED> instruction: 0x000169b0
   167d4:	cmn	r2, #1
   167d8:	bne	1717c <__printf_chk@plt+0x5de4>
   167dc:	mov	r2, #1
   167e0:	adds	r2, r7, r2
   167e4:	mov	r4, r2
   167e8:	bcs	16e24 <__printf_chk@plt+0x5a8c>
   167ec:	cmp	r6, r2
   167f0:	bcs	16864 <__printf_chk@plt+0x54cc>
   167f4:	cmp	r6, #0
   167f8:	bne	16d48 <__printf_chk@plt+0x59b0>
   167fc:	cmp	r2, #12
   16800:	movls	r6, #12
   16804:	bhi	16f80 <__printf_chk@plt+0x5be8>
   16808:	ldr	r2, [fp, #-504]	; 0xfffffe08
   1680c:	cmp	r3, r2
   16810:	cmpne	r3, #0
   16814:	sub	r5, r3, r2
   16818:	clz	r5, r5
   1681c:	lsr	r5, r5, #5
   16820:	bne	16f14 <__printf_chk@plt+0x5b7c>
   16824:	mov	r0, r6
   16828:	str	r3, [fp, #-508]	; 0xfffffe04
   1682c:	bl	11260 <malloc@plt>
   16830:	ldr	r3, [fp, #-508]	; 0xfffffe04
   16834:	subs	ip, r0, #0
   16838:	beq	16d4c <__printf_chk@plt+0x59b4>
   1683c:	cmp	r7, #0
   16840:	moveq	r5, #0
   16844:	cmp	r5, #0
   16848:	moveq	r3, ip
   1684c:	beq	16864 <__printf_chk@plt+0x54cc>
   16850:	mov	r1, r3
   16854:	mov	r2, r7
   16858:	str	ip, [fp, #-508]	; 0xfffffe04
   1685c:	bl	11254 <memcpy@plt>
   16860:	ldr	r3, [fp, #-508]	; 0xfffffe04
   16864:	mov	r2, #37	; 0x25
   16868:	strb	r2, [r3, r7]
   1686c:	ldr	r9, [sl, #4]
   16870:	add	sl, sl, #44	; 0x2c
   16874:	ldr	r2, [fp, #-528]	; 0xfffffdf0
   16878:	ldr	r5, [sl]
   1687c:	add	r2, r2, #1
   16880:	cmp	r5, r9
   16884:	str	r2, [fp, #-528]	; 0xfffffdf0
   16888:	bne	16438 <__printf_chk@plt+0x50a0>
   1688c:	mov	r7, r4
   16890:	b	164d8 <__printf_chk@plt+0x5140>
   16894:	cmn	r6, #1
   16898:	beq	16f0c <__printf_chk@plt+0x5b74>
   1689c:	mov	r5, r3
   168a0:	bl	112f0 <__errno_location@plt>
   168a4:	mov	r9, r5
   168a8:	str	r0, [fp, #-508]	; 0xfffffe04
   168ac:	ldr	r3, [fp, #-504]	; 0xfffffe08
   168b0:	cmp	r9, r3
   168b4:	cmpne	r9, #0
   168b8:	bne	16d68 <__printf_chk@plt+0x59d0>
   168bc:	ldr	r3, [fp, #-536]	; 0xfffffde8
   168c0:	cmp	r3, #0
   168c4:	beq	168d0 <__printf_chk@plt+0x5538>
   168c8:	mov	r0, r3
   168cc:	bl	1108c <free@plt>
   168d0:	ldr	r0, [fp, #-360]	; 0xfffffe98
   168d4:	sub	r3, fp, #348	; 0x15c
   168d8:	cmp	r0, r3
   168dc:	beq	168e4 <__printf_chk@plt+0x554c>
   168e0:	bl	1108c <free@plt>
   168e4:	ldr	r0, [fp, #-480]	; 0xfffffe20
   168e8:	sub	r3, fp, #476	; 0x1dc
   168ec:	cmp	r0, r3
   168f0:	beq	168f8 <__printf_chk@plt+0x5560>
   168f4:	bl	1108c <free@plt>
   168f8:	ldr	r2, [fp, #-508]	; 0xfffffe04
   168fc:	mov	r5, #0
   16900:	mov	r3, #12
   16904:	str	r3, [r2]
   16908:	ldr	r3, [pc, #2160]	; 17180 <__printf_chk@plt+0x5de8>
   1690c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16910:	mov	r0, r5
   16914:	ldr	r3, [r3]
   16918:	cmp	r2, r3
   1691c:	bne	1716c <__printf_chk@plt+0x5dd4>
   16920:	sub	sp, fp, #32
   16924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16928:	mov	r0, r3
   1692c:	mov	r1, r6
   16930:	str	r3, [fp, #-508]	; 0xfffffe04
   16934:	bl	11140 <realloc@plt>
   16938:	ldr	r3, [fp, #-508]	; 0xfffffe04
   1693c:	cmp	r0, #0
   16940:	beq	17104 <__printf_chk@plt+0x5d6c>
   16944:	mov	r3, r0
   16948:	b	164c0 <__printf_chk@plt+0x5128>
   1694c:	sub	r5, r5, #18
   16950:	cmp	r5, #4
   16954:	ldrls	pc, [pc, r5, lsl #2]
   16958:	b	1717c <__printf_chk@plt+0x5de4>
   1695c:	muleq	r1, ip, sp
   16960:	andeq	r6, r1, ip, lsl #27
   16964:	andeq	r6, r1, r8, lsr sp
   16968:	andeq	r6, r1, r8, lsr sp
   1696c:	andeq	r6, r1, r4, ror sp
   16970:	bl	112f0 <__errno_location@plt>
   16974:	str	r0, [fp, #-508]	; 0xfffffe04
   16978:	b	168d0 <__printf_chk@plt+0x5538>
   1697c:	mov	r5, #0
   16980:	b	16908 <__printf_chk@plt+0x5570>
   16984:	blt	16d4c <__printf_chk@plt+0x59b4>
   16988:	lsl	r6, r6, #1
   1698c:	cmp	r6, r2
   16990:	bcs	16464 <__printf_chk@plt+0x50cc>
   16994:	cmn	r2, #1
   16998:	beq	1689c <__printf_chk@plt+0x5504>
   1699c:	mov	r6, r2
   169a0:	b	16464 <__printf_chk@plt+0x50cc>
   169a4:	mov	r2, #76	; 0x4c
   169a8:	strb	r2, [r4], #1
   169ac:	b	16644 <__printf_chk@plt+0x52ac>
   169b0:	ldr	r2, [sl, #40]	; 0x28
   169b4:	ldr	r3, [fp, #-480]	; 0xfffffe20
   169b8:	cmp	r8, #1
   169bc:	add	r3, r3, r2, lsl #4
   169c0:	add	r0, r9, r7
   169c4:	ldr	r3, [r3, #8]
   169c8:	beq	16c2c <__printf_chk@plt+0x5894>
   169cc:	cmp	r8, #2
   169d0:	beq	16c80 <__printf_chk@plt+0x58e8>
   169d4:	str	r3, [sp, #4]
   169d8:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   169dc:	sub	r2, fp, #496	; 0x1f0
   169e0:	str	r2, [sp, #8]
   169e4:	str	r3, [sp]
   169e8:	mov	r2, #1
   169ec:	mvn	r3, #0
   169f0:	mov	r1, r5
   169f4:	bl	11278 <__snprintf_chk@plt>
   169f8:	ldr	r2, [fp, #-496]	; 0xfffffe10
   169fc:	cmp	r2, #0
   16a00:	blt	16b28 <__printf_chk@plt+0x5790>
   16a04:	cmp	r2, r5
   16a08:	mov	r3, r2
   16a0c:	bcs	16a20 <__printf_chk@plt+0x5688>
   16a10:	add	r1, r9, r2
   16a14:	ldrb	r1, [r1, r7]
   16a18:	cmp	r1, #0
   16a1c:	bne	1717c <__printf_chk@plt+0x5de4>
   16a20:	cmp	r2, r0
   16a24:	bge	16a30 <__printf_chk@plt+0x5698>
   16a28:	mov	r3, r0
   16a2c:	str	r0, [fp, #-496]	; 0xfffffe10
   16a30:	add	r2, r3, #1
   16a34:	cmp	r2, r5
   16a38:	bcc	16f90 <__printf_chk@plt+0x5bf8>
   16a3c:	cmn	r5, #-2147483647	; 0x80000001
   16a40:	beq	16fa8 <__printf_chk@plt+0x5c10>
   16a44:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   16a48:	add	r3, r3, r2
   16a4c:	cmp	r7, r3
   16a50:	mvnhi	r3, #0
   16a54:	cmp	r6, #0
   16a58:	blt	16dac <__printf_chk@plt+0x5a14>
   16a5c:	lsl	r2, r6, #1
   16a60:	cmp	r2, r3
   16a64:	movcs	r3, r2
   16a68:	cmp	r6, r3
   16a6c:	bcs	1675c <__printf_chk@plt+0x53c4>
   16a70:	cmp	r2, r3
   16a74:	bcc	16db8 <__printf_chk@plt+0x5a20>
   16a78:	mov	r6, r2
   16a7c:	ldr	r3, [fp, #-504]	; 0xfffffe08
   16a80:	cmp	r9, r3
   16a84:	cmpne	r9, #0
   16a88:	sub	r5, r9, r3
   16a8c:	clz	r5, r5
   16a90:	lsr	r5, r5, #5
   16a94:	bne	16dc8 <__printf_chk@plt+0x5a30>
   16a98:	mov	r0, r6
   16a9c:	bl	11260 <malloc@plt>
   16aa0:	subs	r3, r0, #0
   16aa4:	beq	168ac <__printf_chk@plt+0x5514>
   16aa8:	cmp	r7, #0
   16aac:	moveq	r5, #0
   16ab0:	cmp	r5, #0
   16ab4:	beq	16dec <__printf_chk@plt+0x5a54>
   16ab8:	mov	r1, r9
   16abc:	mov	r2, r7
   16ac0:	mov	r9, r3
   16ac4:	bl	11254 <memcpy@plt>
   16ac8:	sub	r3, r6, r7
   16acc:	str	r3, [fp, #-512]	; 0xfffffe00
   16ad0:	b	1675c <__printf_chk@plt+0x53c4>
   16ad4:	ldr	r2, [sl, #40]	; 0x28
   16ad8:	ldr	r3, [fp, #-480]	; 0xfffffe20
   16adc:	cmp	r8, #1
   16ae0:	add	r3, r3, r2, lsl #4
   16ae4:	add	r0, r9, r7
   16ae8:	ldrd	r2, [r3, #8]
   16aec:	beq	16e78 <__printf_chk@plt+0x5ae0>
   16af0:	cmp	r8, #2
   16af4:	beq	16e44 <__printf_chk@plt+0x5aac>
   16af8:	strd	r2, [sp, #8]
   16afc:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   16b00:	sub	r1, fp, #496	; 0x1f0
   16b04:	str	r1, [sp, #16]
   16b08:	str	r3, [sp]
   16b0c:	mov	r2, #1
   16b10:	mvn	r3, #0
   16b14:	mov	r1, r5
   16b18:	bl	11278 <__snprintf_chk@plt>
   16b1c:	ldr	r2, [fp, #-496]	; 0xfffffe10
   16b20:	cmp	r2, #0
   16b24:	bge	16a04 <__printf_chk@plt+0x566c>
   16b28:	ldrb	r3, [r4, #1]
   16b2c:	cmp	r3, #0
   16b30:	movne	r3, #0
   16b34:	strbne	r3, [r4, #1]
   16b38:	bne	1675c <__printf_chk@plt+0x53c4>
   16b3c:	cmp	r0, #0
   16b40:	bge	16a28 <__printf_chk@plt+0x5690>
   16b44:	ldr	r3, [fp, #-508]	; 0xfffffe04
   16b48:	ldr	r4, [r3]
   16b4c:	cmp	r4, #0
   16b50:	bne	16b68 <__printf_chk@plt+0x57d0>
   16b54:	ldrb	r3, [sl, #36]	; 0x24
   16b58:	and	r3, r3, #239	; 0xef
   16b5c:	cmp	r3, #99	; 0x63
   16b60:	moveq	r4, #84	; 0x54
   16b64:	movne	r4, #22
   16b68:	ldr	r3, [fp, #-504]	; 0xfffffe08
   16b6c:	cmp	r9, r3
   16b70:	cmpne	r9, #0
   16b74:	bne	17008 <__printf_chk@plt+0x5c70>
   16b78:	ldr	r3, [fp, #-536]	; 0xfffffde8
   16b7c:	cmp	r3, #0
   16b80:	beq	16b8c <__printf_chk@plt+0x57f4>
   16b84:	mov	r0, r3
   16b88:	bl	1108c <free@plt>
   16b8c:	ldr	r0, [fp, #-360]	; 0xfffffe98
   16b90:	sub	r3, fp, #348	; 0x15c
   16b94:	cmp	r0, r3
   16b98:	beq	16ba0 <__printf_chk@plt+0x5808>
   16b9c:	bl	1108c <free@plt>
   16ba0:	ldr	r0, [fp, #-480]	; 0xfffffe20
   16ba4:	sub	r3, fp, #476	; 0x1dc
   16ba8:	cmp	r0, r3
   16bac:	beq	16bb4 <__printf_chk@plt+0x581c>
   16bb0:	bl	1108c <free@plt>
   16bb4:	ldr	r3, [fp, #-508]	; 0xfffffe04
   16bb8:	mov	r5, #0
   16bbc:	str	r4, [r3]
   16bc0:	b	16908 <__printf_chk@plt+0x5570>
   16bc4:	ldr	r2, [sl, #40]	; 0x28
   16bc8:	ldr	r3, [fp, #-480]	; 0xfffffe20
   16bcc:	cmp	r8, #1
   16bd0:	add	r3, r3, r2, lsl #4
   16bd4:	add	r0, r9, r7
   16bd8:	ldrd	r2, [r3, #8]
   16bdc:	beq	16edc <__printf_chk@plt+0x5b44>
   16be0:	cmp	r8, #2
   16be4:	beq	16ea8 <__printf_chk@plt+0x5b10>
   16be8:	strd	r2, [sp, #8]
   16bec:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   16bf0:	sub	r1, fp, #496	; 0x1f0
   16bf4:	str	r1, [sp, #16]
   16bf8:	str	r3, [sp]
   16bfc:	mov	r2, #1
   16c00:	mvn	r3, #0
   16c04:	mov	r1, r5
   16c08:	bl	11278 <__snprintf_chk@plt>
   16c0c:	b	169f8 <__printf_chk@plt+0x5660>
   16c10:	ldr	r2, [sl, #40]	; 0x28
   16c14:	ldr	r3, [fp, #-480]	; 0xfffffe20
   16c18:	cmp	r8, #1
   16c1c:	add	r3, r3, r2, lsl #4
   16c20:	add	r0, r9, r7
   16c24:	ldrh	r3, [r3, #8]
   16c28:	bne	169cc <__printf_chk@plt+0x5634>
   16c2c:	ldr	r2, [fp, #-492]	; 0xfffffe14
   16c30:	str	r3, [sp, #8]
   16c34:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   16c38:	sub	r1, fp, #496	; 0x1f0
   16c3c:	str	r1, [sp, #12]
   16c40:	str	r3, [sp]
   16c44:	str	r2, [sp, #4]
   16c48:	mvn	r3, #0
   16c4c:	mov	r2, r8
   16c50:	mov	r1, r5
   16c54:	bl	11278 <__snprintf_chk@plt>
   16c58:	b	169f8 <__printf_chk@plt+0x5660>
   16c5c:	ldr	r2, [sl, #40]	; 0x28
   16c60:	ldr	r3, [fp, #-480]	; 0xfffffe20
   16c64:	cmp	r8, #1
   16c68:	add	r3, r3, r2, lsl #4
   16c6c:	add	r0, r9, r7
   16c70:	ldrsh	r3, [r3, #8]
   16c74:	beq	16c2c <__printf_chk@plt+0x5894>
   16c78:	cmp	r8, #2
   16c7c:	bne	169d4 <__printf_chk@plt+0x563c>
   16c80:	ldr	r1, [fp, #-488]	; 0xfffffe18
   16c84:	ldr	r2, [fp, #-492]	; 0xfffffe14
   16c88:	str	r3, [sp, #12]
   16c8c:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   16c90:	sub	ip, fp, #496	; 0x1f0
   16c94:	str	r3, [sp]
   16c98:	str	r1, [sp, #8]
   16c9c:	str	r2, [sp, #4]
   16ca0:	str	ip, [sp, #16]
   16ca4:	mvn	r3, #0
   16ca8:	mov	r2, #1
   16cac:	mov	r1, r5
   16cb0:	bl	11278 <__snprintf_chk@plt>
   16cb4:	b	169f8 <__printf_chk@plt+0x5660>
   16cb8:	ldr	r2, [sl, #40]	; 0x28
   16cbc:	ldr	r3, [fp, #-480]	; 0xfffffe20
   16cc0:	cmp	r8, #1
   16cc4:	add	r3, r3, r2, lsl #4
   16cc8:	add	r0, r9, r7
   16ccc:	ldrb	r3, [r3, #8]
   16cd0:	bne	169cc <__printf_chk@plt+0x5634>
   16cd4:	b	16c2c <__printf_chk@plt+0x5894>
   16cd8:	ldr	r2, [sl, #40]	; 0x28
   16cdc:	ldr	r3, [fp, #-480]	; 0xfffffe20
   16ce0:	cmp	r8, #1
   16ce4:	add	r3, r3, r2, lsl #4
   16ce8:	add	r0, r9, r7
   16cec:	ldrsb	r3, [r3, #8]
   16cf0:	bne	169cc <__printf_chk@plt+0x5634>
   16cf4:	b	16c2c <__printf_chk@plt+0x5894>
   16cf8:	blt	16d4c <__printf_chk@plt+0x59b4>
   16cfc:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   16d00:	lsl	r6, r6, #1
   16d04:	cmp	r6, r2
   16d08:	bcs	166dc <__printf_chk@plt+0x5344>
   16d0c:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   16d10:	mov	r1, #0
   16d14:	cmn	r2, #1
   16d18:	movne	r2, #0
   16d1c:	moveq	r2, #1
   16d20:	cmp	r1, r1
   16d24:	movne	r2, #255	; 0xff
   16d28:	cmp	r2, r1
   16d2c:	bne	1689c <__printf_chk@plt+0x5504>
   16d30:	ldr	r6, [fp, #-524]	; 0xfffffdf4
   16d34:	b	166dc <__printf_chk@plt+0x5344>
   16d38:	ldr	r2, [r1, #8]
   16d3c:	mov	r4, r7
   16d40:	str	r7, [r2]
   16d44:	b	1686c <__printf_chk@plt+0x54d4>
   16d48:	bge	16f74 <__printf_chk@plt+0x5bdc>
   16d4c:	mov	r9, r3
   16d50:	bl	112f0 <__errno_location@plt>
   16d54:	ldr	r3, [fp, #-504]	; 0xfffffe08
   16d58:	cmp	r9, r3
   16d5c:	cmpne	r9, #0
   16d60:	str	r0, [fp, #-508]	; 0xfffffe04
   16d64:	beq	168bc <__printf_chk@plt+0x5524>
   16d68:	mov	r0, r9
   16d6c:	bl	1108c <free@plt>
   16d70:	b	168bc <__printf_chk@plt+0x5524>
   16d74:	ldr	r2, [r1, #8]
   16d78:	mov	r1, #0
   16d7c:	mov	r4, r7
   16d80:	str	r7, [r2]
   16d84:	str	r1, [r2, #4]
   16d88:	b	1686c <__printf_chk@plt+0x54d4>
   16d8c:	ldr	r2, [r1, #8]
   16d90:	mov	r4, r7
   16d94:	strh	r7, [r2]
   16d98:	b	1686c <__printf_chk@plt+0x54d4>
   16d9c:	ldr	r2, [r1, #8]
   16da0:	mov	r4, r7
   16da4:	strb	r7, [r2]
   16da8:	b	1686c <__printf_chk@plt+0x54d4>
   16dac:	cmn	r6, #1
   16db0:	beq	1675c <__printf_chk@plt+0x53c4>
   16db4:	b	168ac <__printf_chk@plt+0x5514>
   16db8:	cmn	r3, #1
   16dbc:	beq	168ac <__printf_chk@plt+0x5514>
   16dc0:	mov	r6, r3
   16dc4:	b	16a7c <__printf_chk@plt+0x56e4>
   16dc8:	mov	r1, r6
   16dcc:	mov	r0, r9
   16dd0:	bl	11140 <realloc@plt>
   16dd4:	cmp	r0, #0
   16dd8:	beq	168ac <__printf_chk@plt+0x5514>
   16ddc:	sub	r3, r6, r7
   16de0:	mov	r9, r0
   16de4:	str	r3, [fp, #-512]	; 0xfffffe00
   16de8:	b	1675c <__printf_chk@plt+0x53c4>
   16dec:	mov	r9, r3
   16df0:	sub	r3, r6, r7
   16df4:	str	r3, [fp, #-512]	; 0xfffffe00
   16df8:	b	1675c <__printf_chk@plt+0x53c4>
   16dfc:	mov	r8, #0
   16e00:	b	1667c <__printf_chk@plt+0x52e4>
   16e04:	mov	r0, r3
   16e08:	mov	r1, r6
   16e0c:	str	r3, [fp, #-508]	; 0xfffffe04
   16e10:	bl	11140 <realloc@plt>
   16e14:	ldr	r3, [fp, #-508]	; 0xfffffe04
   16e18:	subs	r9, r0, #0
   16e1c:	bne	16734 <__printf_chk@plt+0x539c>
   16e20:	b	16d4c <__printf_chk@plt+0x59b4>
   16e24:	cmn	r6, #1
   16e28:	bne	1689c <__printf_chk@plt+0x5504>
   16e2c:	mov	r4, r6
   16e30:	b	16864 <__printf_chk@plt+0x54cc>
   16e34:	cmn	r6, #1
   16e38:	bne	1689c <__printf_chk@plt+0x5504>
   16e3c:	mov	r9, r3
   16e40:	b	16734 <__printf_chk@plt+0x539c>
   16e44:	ldr	r1, [fp, #-492]	; 0xfffffe14
   16e48:	ldr	ip, [fp, #-488]	; 0xfffffe18
   16e4c:	strd	r2, [sp, #16]
   16e50:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   16e54:	sub	lr, fp, #496	; 0x1f0
   16e58:	str	r3, [sp]
   16e5c:	stmib	sp, {r1, ip}
   16e60:	str	lr, [sp, #24]
   16e64:	mvn	r3, #0
   16e68:	mov	r2, #1
   16e6c:	mov	r1, r5
   16e70:	bl	11278 <__snprintf_chk@plt>
   16e74:	b	169f8 <__printf_chk@plt+0x5660>
   16e78:	ldr	r1, [fp, #-492]	; 0xfffffe14
   16e7c:	strd	r2, [sp, #8]
   16e80:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   16e84:	sub	ip, fp, #496	; 0x1f0
   16e88:	str	r3, [sp]
   16e8c:	str	r1, [sp, #4]
   16e90:	str	ip, [sp, #16]
   16e94:	mvn	r3, #0
   16e98:	mov	r2, r8
   16e9c:	mov	r1, r5
   16ea0:	bl	11278 <__snprintf_chk@plt>
   16ea4:	b	169f8 <__printf_chk@plt+0x5660>
   16ea8:	ldr	r1, [fp, #-492]	; 0xfffffe14
   16eac:	ldr	ip, [fp, #-488]	; 0xfffffe18
   16eb0:	strd	r2, [sp, #16]
   16eb4:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   16eb8:	sub	lr, fp, #496	; 0x1f0
   16ebc:	str	r3, [sp]
   16ec0:	stmib	sp, {r1, ip}
   16ec4:	str	lr, [sp, #24]
   16ec8:	mvn	r3, #0
   16ecc:	mov	r2, #1
   16ed0:	mov	r1, r5
   16ed4:	bl	11278 <__snprintf_chk@plt>
   16ed8:	b	169f8 <__printf_chk@plt+0x5660>
   16edc:	ldr	r1, [fp, #-492]	; 0xfffffe14
   16ee0:	strd	r2, [sp, #8]
   16ee4:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   16ee8:	sub	ip, fp, #496	; 0x1f0
   16eec:	str	r3, [sp]
   16ef0:	str	r1, [sp, #4]
   16ef4:	str	ip, [sp, #16]
   16ef8:	mvn	r3, #0
   16efc:	mov	r2, r8
   16f00:	mov	r1, r5
   16f04:	bl	11278 <__snprintf_chk@plt>
   16f08:	b	169f8 <__printf_chk@plt+0x5660>
   16f0c:	mov	r7, r6
   16f10:	b	164c0 <__printf_chk@plt+0x5128>
   16f14:	mov	r0, r3
   16f18:	mov	r1, r6
   16f1c:	str	r3, [fp, #-508]	; 0xfffffe04
   16f20:	bl	11140 <realloc@plt>
   16f24:	ldr	r3, [fp, #-508]	; 0xfffffe04
   16f28:	cmp	r0, #0
   16f2c:	beq	17104 <__printf_chk@plt+0x5d6c>
   16f30:	mov	r3, r0
   16f34:	b	16864 <__printf_chk@plt+0x54cc>
   16f38:	ldr	r0, [fp, #-360]	; 0xfffffe98
   16f3c:	sub	r3, fp, #348	; 0x15c
   16f40:	cmp	r0, r3
   16f44:	beq	16f4c <__printf_chk@plt+0x5bb4>
   16f48:	bl	1108c <free@plt>
   16f4c:	ldr	r0, [fp, #-480]	; 0xfffffe20
   16f50:	sub	r3, fp, #476	; 0x1dc
   16f54:	cmp	r0, r3
   16f58:	beq	16f60 <__printf_chk@plt+0x5bc8>
   16f5c:	bl	1108c <free@plt>
   16f60:	bl	112f0 <__errno_location@plt>
   16f64:	mov	r3, #22
   16f68:	mov	r5, #0
   16f6c:	str	r3, [r0]
   16f70:	b	16908 <__printf_chk@plt+0x5570>
   16f74:	lsl	r6, r6, #1
   16f78:	cmp	r6, r2
   16f7c:	bcs	16808 <__printf_chk@plt+0x5470>
   16f80:	cmn	r2, #1
   16f84:	beq	1689c <__printf_chk@plt+0x5504>
   16f88:	mov	r6, r2
   16f8c:	b	16808 <__printf_chk@plt+0x5470>
   16f90:	add	r4, r7, r3
   16f94:	ldr	r3, [fp, #-508]	; 0xfffffe04
   16f98:	ldr	r2, [fp, #-540]	; 0xfffffde4
   16f9c:	str	r2, [r3]
   16fa0:	mov	r3, r9
   16fa4:	b	1686c <__printf_chk@plt+0x54d4>
   16fa8:	ldr	r3, [fp, #-504]	; 0xfffffe08
   16fac:	cmp	r9, r3
   16fb0:	cmpne	r9, #0
   16fb4:	bne	17014 <__printf_chk@plt+0x5c7c>
   16fb8:	ldr	r3, [fp, #-536]	; 0xfffffde8
   16fbc:	cmp	r3, #0
   16fc0:	beq	16fcc <__printf_chk@plt+0x5c34>
   16fc4:	mov	r0, r3
   16fc8:	bl	1108c <free@plt>
   16fcc:	ldr	r0, [fp, #-360]	; 0xfffffe98
   16fd0:	sub	r3, fp, #348	; 0x15c
   16fd4:	cmp	r0, r3
   16fd8:	beq	16fe0 <__printf_chk@plt+0x5c48>
   16fdc:	bl	1108c <free@plt>
   16fe0:	ldr	r0, [fp, #-480]	; 0xfffffe20
   16fe4:	sub	r3, fp, #476	; 0x1dc
   16fe8:	cmp	r0, r3
   16fec:	beq	16ff4 <__printf_chk@plt+0x5c5c>
   16ff0:	bl	1108c <free@plt>
   16ff4:	ldr	r2, [fp, #-508]	; 0xfffffe04
   16ff8:	mov	r3, #75	; 0x4b
   16ffc:	mov	r5, #0
   17000:	str	r3, [r2]
   17004:	b	16908 <__printf_chk@plt+0x5570>
   17008:	mov	r0, r9
   1700c:	bl	1108c <free@plt>
   17010:	b	16b78 <__printf_chk@plt+0x57e0>
   17014:	mov	r0, r9
   17018:	bl	1108c <free@plt>
   1701c:	b	16fb8 <__printf_chk@plt+0x5c20>
   17020:	mov	r5, r3
   17024:	mov	r3, #1
   17028:	adds	r4, r7, r3
   1702c:	mov	r8, r7
   17030:	bcs	17170 <__printf_chk@plt+0x5dd8>
   17034:	cmp	r6, r4
   17038:	bcs	170a4 <__printf_chk@plt+0x5d0c>
   1703c:	cmp	r6, #0
   17040:	bne	1714c <__printf_chk@plt+0x5db4>
   17044:	cmp	r4, #12
   17048:	movls	r6, #12
   1704c:	bhi	1715c <__printf_chk@plt+0x5dc4>
   17050:	ldr	r3, [fp, #-504]	; 0xfffffe08
   17054:	cmp	r5, r3
   17058:	cmpne	r5, #0
   1705c:	sub	r7, r5, r3
   17060:	clz	r7, r7
   17064:	lsr	r7, r7, #5
   17068:	bne	17130 <__printf_chk@plt+0x5d98>
   1706c:	mov	r0, r6
   17070:	bl	11260 <malloc@plt>
   17074:	subs	r3, r0, #0
   17078:	beq	168a0 <__printf_chk@plt+0x5508>
   1707c:	cmp	r8, #0
   17080:	movne	r2, r7
   17084:	moveq	r2, #0
   17088:	cmp	r2, #0
   1708c:	moveq	r5, r3
   17090:	beq	170a4 <__printf_chk@plt+0x5d0c>
   17094:	mov	r1, r5
   17098:	mov	r2, r8
   1709c:	mov	r5, r3
   170a0:	bl	11254 <memcpy@plt>
   170a4:	ldr	r3, [fp, #-504]	; 0xfffffe08
   170a8:	cmp	r5, r3
   170ac:	cmpne	r6, r4
   170b0:	mov	r3, #0
   170b4:	strb	r3, [r5, r8]
   170b8:	bhi	17118 <__printf_chk@plt+0x5d80>
   170bc:	ldr	r3, [fp, #-536]	; 0xfffffde8
   170c0:	cmp	r3, #0
   170c4:	beq	170d0 <__printf_chk@plt+0x5d38>
   170c8:	mov	r0, r3
   170cc:	bl	1108c <free@plt>
   170d0:	ldr	r0, [fp, #-360]	; 0xfffffe98
   170d4:	sub	r3, fp, #348	; 0x15c
   170d8:	cmp	r0, r3
   170dc:	beq	170e4 <__printf_chk@plt+0x5d4c>
   170e0:	bl	1108c <free@plt>
   170e4:	ldr	r0, [fp, #-480]	; 0xfffffe20
   170e8:	sub	r3, fp, #476	; 0x1dc
   170ec:	cmp	r0, r3
   170f0:	beq	170f8 <__printf_chk@plt+0x5d60>
   170f4:	bl	1108c <free@plt>
   170f8:	ldr	r3, [fp, #-532]	; 0xfffffdec
   170fc:	str	r8, [r3]
   17100:	b	16908 <__printf_chk@plt+0x5570>
   17104:	mov	r5, r3
   17108:	bl	112f0 <__errno_location@plt>
   1710c:	mov	r9, r5
   17110:	str	r0, [fp, #-508]	; 0xfffffe04
   17114:	b	16d68 <__printf_chk@plt+0x59d0>
   17118:	mov	r0, r5
   1711c:	mov	r1, r4
   17120:	bl	11140 <realloc@plt>
   17124:	cmp	r0, #0
   17128:	movne	r5, r0
   1712c:	b	170bc <__printf_chk@plt+0x5d24>
   17130:	mov	r1, r6
   17134:	mov	r0, r5
   17138:	bl	11140 <realloc@plt>
   1713c:	cmp	r0, #0
   17140:	beq	17108 <__printf_chk@plt+0x5d70>
   17144:	mov	r5, r0
   17148:	b	170a4 <__printf_chk@plt+0x5d0c>
   1714c:	blt	168a0 <__printf_chk@plt+0x5508>
   17150:	lsl	r6, r6, #1
   17154:	cmp	r6, r4
   17158:	bcs	17050 <__printf_chk@plt+0x5cb8>
   1715c:	cmn	r4, #1
   17160:	movne	r6, r4
   17164:	bne	17050 <__printf_chk@plt+0x5cb8>
   17168:	b	168a0 <__printf_chk@plt+0x5508>
   1716c:	bl	11194 <__stack_chk_fail@plt>
   17170:	cmn	r6, #1
   17174:	beq	170a4 <__printf_chk@plt+0x5d0c>
   17178:	b	168a0 <__printf_chk@plt+0x5508>
   1717c:	bl	11134 <abort@plt>
   17180:			; <UNDEFINED> instruction: 0x00029db0
   17184:	ldr	r3, [r1]
   17188:	ldr	r2, [r1, #4]
   1718c:	cmp	r3, #0
   17190:	beq	172a0 <__printf_chk@plt+0x5f08>
   17194:	push	{r4, r5, r6, lr}
   17198:	add	r2, r2, #8
   1719c:	ldr	r6, [pc, #268]	; 172b0 <__printf_chk@plt+0x5f18>
   171a0:	ldr	lr, [pc, #268]	; 172b4 <__printf_chk@plt+0x5f1c>
   171a4:	mov	ip, #0
   171a8:	ldr	r3, [r2, #-8]
   171ac:	sub	r3, r3, #1
   171b0:	cmp	r3, #21
   171b4:	ldrls	pc, [pc, r3, lsl #2]
   171b8:	b	172a8 <__printf_chk@plt+0x5f10>
   171bc:	andeq	r7, r1, r8, asr r2
   171c0:	andeq	r7, r1, r8, asr r2
   171c4:	andeq	r7, r1, ip, asr #4
   171c8:	andeq	r7, r1, ip, asr #4
   171cc:	andeq	r7, r1, r4, lsl r2
   171d0:	andeq	r7, r1, r4, lsl r2
   171d4:	andeq	r7, r1, r4, lsl r2
   171d8:	andeq	r7, r1, r4, lsl r2
   171dc:	andeq	r7, r1, r8, lsr r2
   171e0:	andeq	r7, r1, r8, lsr r2
   171e4:	andeq	r7, r1, r4, ror #4
   171e8:	andeq	r7, r1, r4, ror #4
   171ec:	andeq	r7, r1, r4, lsl r2
   171f0:	andeq	r7, r1, r4, lsl r2
   171f4:	andeq	r7, r1, r8, ror r2
   171f8:	andeq	r7, r1, ip, lsl #5
   171fc:	andeq	r7, r1, r4, lsl r2
   17200:	andeq	r7, r1, r4, lsl r2
   17204:	andeq	r7, r1, r4, lsl r2
   17208:	andeq	r7, r1, r4, lsl r2
   1720c:	andeq	r7, r1, r4, lsl r2
   17210:	andeq	r7, r1, r4, lsl r2
   17214:	ldr	r3, [r0], #4
   17218:	str	r3, [r2]
   1721c:	ldr	r3, [r1]
   17220:	add	ip, ip, #1
   17224:	cmp	r3, ip
   17228:	add	r2, r2, #16
   1722c:	bhi	171a8 <__printf_chk@plt+0x5e10>
   17230:	mov	r0, #0
   17234:	pop	{r4, r5, r6, pc}
   17238:	add	r0, r0, #7
   1723c:	bic	r0, r0, #7
   17240:	ldrd	r4, [r0], #8
   17244:	strd	r4, [r2]
   17248:	b	1721c <__printf_chk@plt+0x5e84>
   1724c:	ldr	r3, [r0], #4
   17250:	strh	r3, [r2]
   17254:	b	1721c <__printf_chk@plt+0x5e84>
   17258:	ldr	r3, [r0], #4
   1725c:	strb	r3, [r2]
   17260:	b	1721c <__printf_chk@plt+0x5e84>
   17264:	add	r0, r0, #7
   17268:	bic	r0, r0, #7
   1726c:	ldrd	r4, [r0], #8
   17270:	strd	r4, [r2]
   17274:	b	1721c <__printf_chk@plt+0x5e84>
   17278:	ldr	r3, [r0], #4
   1727c:	cmp	r3, #0
   17280:	streq	lr, [r2]
   17284:	bne	17218 <__printf_chk@plt+0x5e80>
   17288:	b	1721c <__printf_chk@plt+0x5e84>
   1728c:	ldr	r3, [r0], #4
   17290:	cmp	r3, #0
   17294:	streq	r6, [r2]
   17298:	bne	17218 <__printf_chk@plt+0x5e80>
   1729c:	b	1721c <__printf_chk@plt+0x5e84>
   172a0:	mov	r0, #0
   172a4:	bx	lr
   172a8:	mvn	r0, #0
   172ac:	pop	{r4, r5, r6, pc}
   172b0:	andeq	r9, r1, r0, ror r0
   172b4:	andeq	r9, r1, ip, lsl #1
   172b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   172bc:	mov	sl, r2
   172c0:	sub	sp, sp, #44	; 0x2c
   172c4:	mov	fp, r1
   172c8:	mov	r3, r1
   172cc:	mov	r1, sl
   172d0:	mov	r2, #0
   172d4:	mov	ip, #7
   172d8:	str	r2, [r3], #16
   172dc:	str	fp, [sp, #4]
   172e0:	str	r3, [fp, #4]
   172e4:	mov	r4, r2
   172e8:	str	r2, [r1], #8
   172ec:	str	ip, [sp, #8]
   172f0:	mov	r7, r0
   172f4:	str	r3, [sp, #36]	; 0x24
   172f8:	str	r2, [sp, #28]
   172fc:	str	r1, [sp, #12]
   17300:	str	r2, [sp, #16]
   17304:	str	r1, [sl, #4]
   17308:	str	r2, [sp, #32]
   1730c:	mov	r9, r2
   17310:	str	ip, [sp, #24]
   17314:	mov	fp, sl
   17318:	b	17328 <__printf_chk@plt+0x5f90>
   1731c:	cmp	r0, #37	; 0x25
   17320:	mov	r5, r7
   17324:	beq	17368 <__printf_chk@plt+0x5fd0>
   17328:	mov	r2, r7
   1732c:	ldrb	r0, [r7], #1
   17330:	cmp	r0, #0
   17334:	bne	1731c <__printf_chk@plt+0x5f84>
   17338:	add	ip, r4, r4, lsl #2
   1733c:	ldr	fp, [sp, #4]
   17340:	add	r4, r4, ip, lsl #1
   17344:	mov	r1, r0
   17348:	str	r2, [r3, r4, lsl #2]
   1734c:	ldr	r3, [sp, #16]
   17350:	str	r3, [fp, #8]
   17354:	ldr	r3, [sp, #28]
   17358:	str	r3, [fp, #12]
   1735c:	mov	r0, r1
   17360:	add	sp, sp, #44	; 0x2c
   17364:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17368:	add	r1, r4, r4, lsl #2
   1736c:	mvn	r8, #0
   17370:	add	r4, r4, r1, lsl #1
   17374:	add	r6, r3, r4, lsl #2
   17378:	str	r2, [r3, r4, lsl #2]
   1737c:	str	r9, [r6, #8]
   17380:	str	r9, [r6, #12]
   17384:	str	r9, [r6, #16]
   17388:	str	r9, [r6, #24]
   1738c:	str	r9, [r6, #28]
   17390:	str	r8, [r6, #20]
   17394:	str	r8, [r6, #32]
   17398:	str	r8, [r6, #40]	; 0x28
   1739c:	ldrb	r4, [r7]
   173a0:	sub	r0, r4, #48	; 0x30
   173a4:	uxtb	r3, r0
   173a8:	cmp	r3, #9
   173ac:	bhi	173f8 <__printf_chk@plt+0x6060>
   173b0:	b	17870 <__printf_chk@plt+0x64d8>
   173b4:	cmp	r4, #45	; 0x2d
   173b8:	beq	17414 <__printf_chk@plt+0x607c>
   173bc:	cmp	r4, #43	; 0x2b
   173c0:	beq	17424 <__printf_chk@plt+0x608c>
   173c4:	cmp	r4, #32
   173c8:	beq	17434 <__printf_chk@plt+0x609c>
   173cc:	cmp	r4, #35	; 0x23
   173d0:	beq	17444 <__printf_chk@plt+0x60ac>
   173d4:	cmp	r4, #48	; 0x30
   173d8:	beq	17454 <__printf_chk@plt+0x60bc>
   173dc:	cmp	r4, #73	; 0x49
   173e0:	bne	17464 <__printf_chk@plt+0x60cc>
   173e4:	ldr	r3, [r6, #8]
   173e8:	orr	r3, r3, #64	; 0x40
   173ec:	str	r3, [r6, #8]
   173f0:	ldrb	r4, [r7]
   173f4:	mov	r5, r7
   173f8:	cmp	r4, #39	; 0x27
   173fc:	add	r7, r5, #1
   17400:	bne	173b4 <__printf_chk@plt+0x601c>
   17404:	ldr	r3, [r6, #8]
   17408:	orr	r3, r3, #1
   1740c:	str	r3, [r6, #8]
   17410:	b	173f0 <__printf_chk@plt+0x6058>
   17414:	ldr	r3, [r6, #8]
   17418:	orr	r3, r3, #2
   1741c:	str	r3, [r6, #8]
   17420:	b	173f0 <__printf_chk@plt+0x6058>
   17424:	ldr	r3, [r6, #8]
   17428:	orr	r3, r3, #4
   1742c:	str	r3, [r6, #8]
   17430:	b	173f0 <__printf_chk@plt+0x6058>
   17434:	ldr	r3, [r6, #8]
   17438:	orr	r3, r3, #8
   1743c:	str	r3, [r6, #8]
   17440:	b	173f0 <__printf_chk@plt+0x6058>
   17444:	ldr	r3, [r6, #8]
   17448:	orr	r3, r3, #16
   1744c:	str	r3, [r6, #8]
   17450:	b	173f0 <__printf_chk@plt+0x6058>
   17454:	ldr	r3, [r6, #8]
   17458:	orr	r3, r3, #32
   1745c:	str	r3, [r6, #8]
   17460:	b	173f0 <__printf_chk@plt+0x6058>
   17464:	cmp	r4, #42	; 0x2a
   17468:	beq	17640 <__printf_chk@plt+0x62a8>
   1746c:	sub	r3, r4, #48	; 0x30
   17470:	cmp	r3, #9
   17474:	bls	17c60 <__printf_chk@plt+0x68c8>
   17478:	cmp	r4, #46	; 0x2e
   1747c:	beq	176d8 <__printf_chk@plt+0x6340>
   17480:	add	r5, r5, #1
   17484:	mov	r3, #0
   17488:	mov	r1, #1
   1748c:	b	17494 <__printf_chk@plt+0x60fc>
   17490:	ldrb	r4, [r5], #1
   17494:	cmp	r4, #104	; 0x68
   17498:	andeq	r2, r3, #1
   1749c:	mov	r7, r5
   174a0:	orreq	r3, r3, r1, lsl r2
   174a4:	beq	17490 <__printf_chk@plt+0x60f8>
   174a8:	cmp	r4, #76	; 0x4c
   174ac:	orreq	r3, r3, #4
   174b0:	beq	17490 <__printf_chk@plt+0x60f8>
   174b4:	cmp	r4, #108	; 0x6c
   174b8:	addeq	r3, r3, #8
   174bc:	beq	17490 <__printf_chk@plt+0x60f8>
   174c0:	cmp	r4, #106	; 0x6a
   174c4:	addeq	r3, r3, #16
   174c8:	beq	17490 <__printf_chk@plt+0x60f8>
   174cc:	and	r2, r4, #223	; 0xdf
   174d0:	cmp	r2, #90	; 0x5a
   174d4:	beq	17490 <__printf_chk@plt+0x60f8>
   174d8:	cmp	r4, #116	; 0x74
   174dc:	beq	17490 <__printf_chk@plt+0x60f8>
   174e0:	sub	r2, r4, #37	; 0x25
   174e4:	cmp	r2, #83	; 0x53
   174e8:	ldrls	pc, [pc, r2, lsl #2]
   174ec:	b	178e0 <__printf_chk@plt+0x6548>
   174f0:	ldrdeq	r7, [r1], -r4
   174f4:	andeq	r7, r1, r0, ror #17
   174f8:	andeq	r7, r1, r0, ror #17
   174fc:	andeq	r7, r1, r0, ror #17
   17500:	andeq	r7, r1, r0, ror #17
   17504:	andeq	r7, r1, r0, ror #17
   17508:	andeq	r7, r1, r0, ror #17
   1750c:	andeq	r7, r1, r0, ror #17
   17510:	andeq	r7, r1, r0, ror #17
   17514:	andeq	r7, r1, r0, ror #17
   17518:	andeq	r7, r1, r0, ror #17
   1751c:	andeq	r7, r1, r0, ror #17
   17520:	andeq	r7, r1, r0, ror #17
   17524:	andeq	r7, r1, r0, ror #17
   17528:	andeq	r7, r1, r0, ror #17
   1752c:	andeq	r7, r1, r0, ror #17
   17530:	andeq	r7, r1, r0, ror #17
   17534:	andeq	r7, r1, r0, ror #17
   17538:	andeq	r7, r1, r0, ror #17
   1753c:	andeq	r7, r1, r0, ror #17
   17540:	andeq	r7, r1, r0, ror #17
   17544:	andeq	r7, r1, r0, ror #17
   17548:	andeq	r7, r1, r0, ror #17
   1754c:	andeq	r7, r1, r0, ror #17
   17550:	andeq	r7, r1, r0, ror #17
   17554:	andeq	r7, r1, r0, ror #17
   17558:	andeq	r7, r1, r0, ror #17
   1755c:	andeq	r7, r1, r0, ror #17
   17560:	andeq	r7, r1, r8, lsr #20
   17564:	andeq	r7, r1, r0, ror #17
   17568:	andeq	r7, r1, r4, ror r7
   1756c:	andeq	r7, r1, r0, ror #17
   17570:	andeq	r7, r1, r8, lsr #20
   17574:	andeq	r7, r1, r8, lsr #20
   17578:	andeq	r7, r1, r8, lsr #20
   1757c:	andeq	r7, r1, r0, ror #17
   17580:	andeq	r7, r1, r0, ror #17
   17584:	andeq	r7, r1, r0, ror #17
   17588:	andeq	r7, r1, r0, ror #17
   1758c:	andeq	r7, r1, r0, ror #17
   17590:	andeq	r7, r1, r0, ror #17
   17594:	andeq	r7, r1, r0, ror #17
   17598:	andeq	r7, r1, r0, ror #17
   1759c:	andeq	r7, r1, r0, ror #17
   175a0:	andeq	r7, r1, r0, ror #17
   175a4:	andeq	r7, r1, r0, ror #17
   175a8:	andeq	r7, r1, ip, ror #22
   175ac:	andeq	r7, r1, r0, ror #17
   175b0:	andeq	r7, r1, r0, ror #17
   175b4:	andeq	r7, r1, r0, ror #17
   175b8:	andeq	r7, r1, r0, ror #17
   175bc:	andeq	r7, r1, r8, lsr #22
   175c0:	andeq	r7, r1, r0, ror #17
   175c4:	andeq	r7, r1, r0, ror #17
   175c8:	andeq	r7, r1, r0, ror #17
   175cc:	andeq	r7, r1, r0, ror #17
   175d0:	andeq	r7, r1, r0, ror #17
   175d4:	andeq	r7, r1, r0, ror #17
   175d8:	andeq	r7, r1, r0, ror #17
   175dc:	andeq	r7, r1, r0, ror #17
   175e0:	andeq	r7, r1, r8, lsr #20
   175e4:	andeq	r7, r1, r0, ror #17
   175e8:	andeq	r7, r1, r4, lsl fp
   175ec:	ldrdeq	r7, [r1], -r0
   175f0:	andeq	r7, r1, r8, lsr #20
   175f4:	andeq	r7, r1, r8, lsr #20
   175f8:	andeq	r7, r1, r8, lsr #20
   175fc:	andeq	r7, r1, r0, ror #17
   17600:	ldrdeq	r7, [r1], -r0
   17604:	andeq	r7, r1, r0, ror #17
   17608:	andeq	r7, r1, r0, ror #17
   1760c:	andeq	r7, r1, r0, ror #17
   17610:	andeq	r7, r1, r0, ror #17
   17614:	andeq	r7, r1, r8, lsl #23
   17618:	andeq	r7, r1, r8, lsr #22
   1761c:	andeq	r7, r1, ip, ror fp
   17620:	andeq	r7, r1, r0, ror #17
   17624:	andeq	r7, r1, r0, ror #17
   17628:			; <UNDEFINED> instruction: 0x00017abc
   1762c:	andeq	r7, r1, r0, ror #17
   17630:	andeq	r7, r1, r8, lsr #22
   17634:	andeq	r7, r1, r0, ror #17
   17638:	andeq	r7, r1, r0, ror #17
   1763c:	andeq	r7, r1, r8, lsr #22
   17640:	str	r5, [r6, #12]
   17644:	str	r7, [r6, #16]
   17648:	ldrb	r3, [r5, #1]
   1764c:	ldr	r2, [sp, #16]
   17650:	sub	r3, r3, #48	; 0x30
   17654:	cmp	r2, #0
   17658:	moveq	r2, #1
   1765c:	str	r2, [sp, #16]
   17660:	uxtb	r2, r3
   17664:	cmp	r2, #9
   17668:	bls	17a4c <__printf_chk@plt+0x66b4>
   1766c:	ldr	r4, [r6, #20]
   17670:	cmn	r4, #1
   17674:	beq	17a08 <__printf_chk@plt+0x6670>
   17678:	ldr	r3, [sp, #8]
   1767c:	ldr	sl, [fp, #4]
   17680:	cmp	r3, r4
   17684:	bls	17970 <__printf_chk@plt+0x65d8>
   17688:	ldr	r2, [fp]
   1768c:	cmp	r2, r4
   17690:	bhi	176ac <__printf_chk@plt+0x6314>
   17694:	sub	r1, sl, #16
   17698:	add	r2, r2, #1
   1769c:	cmp	r2, r4
   176a0:	str	r9, [r1, r2, lsl #4]
   176a4:	bls	17698 <__printf_chk@plt+0x6300>
   176a8:	str	r2, [fp]
   176ac:	ldr	r3, [sl, r4, lsl #4]
   176b0:	cmp	r3, #0
   176b4:	bne	17cbc <__printf_chk@plt+0x6924>
   176b8:	mov	r3, r7
   176bc:	mov	r2, #5
   176c0:	str	r2, [sl, r4, lsl #4]
   176c4:	ldrb	r4, [r3], #1
   176c8:	mov	r5, r7
   176cc:	cmp	r4, #46	; 0x2e
   176d0:	mov	r7, r3
   176d4:	bne	17480 <__printf_chk@plt+0x60e8>
   176d8:	ldrb	r3, [r5, #1]
   176dc:	cmp	r3, #42	; 0x2a
   176e0:	bne	17928 <__printf_chk@plt+0x6590>
   176e4:	add	r7, r5, #2
   176e8:	str	r5, [r6, #24]
   176ec:	str	r7, [r6, #28]
   176f0:	ldrb	r1, [r5, #2]
   176f4:	ldr	r3, [sp, #28]
   176f8:	sub	r1, r1, #48	; 0x30
   176fc:	cmp	r3, #2
   17700:	movcc	r3, #2
   17704:	str	r3, [sp, #28]
   17708:	uxtb	r3, r1
   1770c:	cmp	r3, #9
   17710:	bls	17e3c <__printf_chk@plt+0x6aa4>
   17714:	ldr	r4, [r6, #32]
   17718:	cmn	r4, #1
   1771c:	beq	17e1c <__printf_chk@plt+0x6a84>
   17720:	ldr	r3, [sp, #8]
   17724:	ldr	sl, [fp, #4]
   17728:	cmp	r3, r4
   1772c:	bls	17d40 <__printf_chk@plt+0x69a8>
   17730:	ldr	r2, [fp]
   17734:	cmp	r2, r4
   17738:	bhi	17754 <__printf_chk@plt+0x63bc>
   1773c:	sub	r1, sl, #16
   17740:	add	r2, r2, #1
   17744:	cmp	r2, r4
   17748:	str	r9, [r1, r2, lsl #4]
   1774c:	bls	17740 <__printf_chk@plt+0x63a8>
   17750:	str	r2, [fp]
   17754:	ldr	r3, [sl, r4, lsl #4]
   17758:	cmp	r3, #0
   1775c:	bne	17da0 <__printf_chk@plt+0x6a08>
   17760:	mov	r3, #5
   17764:	str	r3, [sl, r4, lsl #4]
   17768:	mov	r5, r7
   1776c:	ldrb	r4, [r7]
   17770:	b	17480 <__printf_chk@plt+0x60e8>
   17774:	mov	r4, #99	; 0x63
   17778:	mov	r3, #14
   1777c:	str	r3, [sp, #20]
   17780:	cmn	r8, #1
   17784:	strne	r8, [r6, #40]	; 0x28
   17788:	beq	17c40 <__printf_chk@plt+0x68a8>
   1778c:	ldr	r3, [sp, #8]
   17790:	ldr	sl, [fp, #4]
   17794:	cmp	r3, r8
   17798:	bls	17be4 <__printf_chk@plt+0x684c>
   1779c:	ldr	r3, [fp]
   177a0:	cmp	r3, r8
   177a4:	bhi	177c0 <__printf_chk@plt+0x6428>
   177a8:	sub	r1, sl, #16
   177ac:	add	r3, r3, #1
   177b0:	cmp	r3, r8
   177b4:	str	r9, [r1, r3, lsl #4]
   177b8:	bls	177ac <__printf_chk@plt+0x6414>
   177bc:	str	r3, [fp]
   177c0:	ldr	r3, [sl, r8, lsl #4]
   177c4:	cmp	r3, #0
   177c8:	bne	17bcc <__printf_chk@plt+0x6834>
   177cc:	ldr	r3, [sp, #20]
   177d0:	str	r3, [sl, r8, lsl #4]
   177d4:	ldr	r3, [sp, #4]
   177d8:	strb	r4, [r6, #36]	; 0x24
   177dc:	ldr	r2, [sp, #24]
   177e0:	ldr	r4, [r3]
   177e4:	str	r5, [r6, #4]
   177e8:	add	r4, r4, #1
   177ec:	cmp	r2, r4
   177f0:	str	r4, [r3]
   177f4:	ldrhi	r3, [r3, #4]
   177f8:	bhi	17328 <__printf_chk@plt+0x5f90>
   177fc:	ldr	r3, [sp, #24]
   17800:	cmp	r3, #0
   17804:	blt	17f24 <__printf_chk@plt+0x6b8c>
   17808:	ldr	r3, [sp, #24]
   1780c:	ldr	r2, [pc, #1872]	; 17f64 <__printf_chk@plt+0x6bcc>
   17810:	lsl	r5, r3, #1
   17814:	cmp	r5, r2
   17818:	bhi	17f24 <__printf_chk@plt+0x6b8c>
   1781c:	ldr	r2, [sp, #4]
   17820:	add	r1, r3, r3, lsl #2
   17824:	ldr	r6, [r2, #4]
   17828:	add	r1, r3, r1, lsl #1
   1782c:	ldr	r3, [sp, #36]	; 0x24
   17830:	lsl	r1, r1, #3
   17834:	cmp	r3, r6
   17838:	beq	179d0 <__printf_chk@plt+0x6638>
   1783c:	mov	r0, r6
   17840:	bl	11140 <realloc@plt>
   17844:	subs	r3, r0, #0
   17848:	beq	17f24 <__printf_chk@plt+0x6b8c>
   1784c:	ldr	r2, [sp, #4]
   17850:	ldm	r2, {r4, r6}
   17854:	ldr	r2, [sp, #36]	; 0x24
   17858:	cmp	r2, r6
   1785c:	beq	179e0 <__printf_chk@plt+0x6648>
   17860:	ldr	r2, [sp, #4]
   17864:	str	r5, [sp, #24]
   17868:	str	r3, [r2, #4]
   1786c:	b	17328 <__printf_chk@plt+0x5f90>
   17870:	mov	r2, r7
   17874:	ldrb	r3, [r2, #1]!
   17878:	sub	r1, r3, #48	; 0x30
   1787c:	cmp	r1, #9
   17880:	bls	17874 <__printf_chk@plt+0x64dc>
   17884:	cmp	r3, #36	; 0x24
   17888:	mvnne	r8, #0
   1788c:	bne	173f8 <__printf_chk@plt+0x6060>
   17890:	mov	r2, #0
   17894:	b	178a0 <__printf_chk@plt+0x6508>
   17898:	cmp	ip, #9
   1789c:	bhi	17eac <__printf_chk@plt+0x6b14>
   178a0:	ldr	r3, [pc, #1728]	; 17f68 <__printf_chk@plt+0x6bd0>
   178a4:	mov	r1, r5
   178a8:	cmp	r2, r3
   178ac:	addls	r2, r2, r2, lsl #2
   178b0:	mvnhi	r3, #0
   178b4:	lslls	r3, r2, #1
   178b8:	ldrb	ip, [r5, #1]!
   178bc:	adds	r3, r0, r3
   178c0:	mov	r2, r3
   178c4:	sub	r0, ip, #48	; 0x30
   178c8:	uxtb	ip, r0
   178cc:	bcc	17898 <__printf_chk@plt+0x6500>
   178d0:	cmp	ip, #9
   178d4:	mvn	r3, #0
   178d8:	mov	r1, r5
   178dc:	bls	178b8 <__printf_chk@plt+0x6520>
   178e0:	mov	sl, fp
   178e4:	ldr	fp, [sp, #4]
   178e8:	ldr	r3, [sl, #4]
   178ec:	ldr	r2, [sp, #12]
   178f0:	cmp	r2, r3
   178f4:	beq	17900 <__printf_chk@plt+0x6568>
   178f8:	mov	r0, r3
   178fc:	bl	1108c <free@plt>
   17900:	ldr	r0, [fp, #4]
   17904:	ldr	r3, [sp, #36]	; 0x24
   17908:	cmp	r3, r0
   1790c:	beq	17914 <__printf_chk@plt+0x657c>
   17910:	bl	1108c <free@plt>
   17914:	bl	112f0 <__errno_location@plt>
   17918:	mov	r3, #22
   1791c:	mvn	r1, #0
   17920:	str	r3, [r0]
   17924:	b	1735c <__printf_chk@plt+0x5fc4>
   17928:	str	r5, [r6, #24]
   1792c:	ldrb	r3, [r5, #1]
   17930:	sub	r3, r3, #48	; 0x30
   17934:	cmp	r3, #9
   17938:	bhi	17f40 <__printf_chk@plt+0x6ba8>
   1793c:	ldrb	r3, [r7, #1]!
   17940:	sub	r3, r3, #48	; 0x30
   17944:	cmp	r3, #9
   17948:	bls	1793c <__printf_chk@plt+0x65a4>
   1794c:	sub	r3, r7, r5
   17950:	mov	r5, r7
   17954:	ldr	r2, [sp, #28]
   17958:	str	r7, [r6, #28]
   1795c:	cmp	r2, r3
   17960:	movcs	r3, r2
   17964:	ldrb	r4, [r7]
   17968:	str	r3, [sp, #28]
   1796c:	b	17480 <__printf_chk@plt+0x60e8>
   17970:	ldr	r3, [sp, #8]
   17974:	lsl	r3, r3, #1
   17978:	cmp	r3, r4
   1797c:	str	r3, [sp, #8]
   17980:	addls	r3, r4, #1
   17984:	strls	r3, [sp, #8]
   17988:	ldr	r3, [sp, #8]
   1798c:	cmn	r3, #-268435455	; 0xf0000001
   17990:	bhi	17f4c <__printf_chk@plt+0x6bb4>
   17994:	ldr	r2, [sp, #12]
   17998:	lsl	r1, r3, #4
   1799c:	cmp	r2, sl
   179a0:	beq	17cfc <__printf_chk@plt+0x6964>
   179a4:	mov	r0, sl
   179a8:	bl	11140 <realloc@plt>
   179ac:	ldr	r1, [fp, #4]
   179b0:	subs	sl, r0, #0
   179b4:	beq	17f50 <__printf_chk@plt+0x6bb8>
   179b8:	ldr	r3, [sp, #12]
   179bc:	ldr	r2, [fp]
   179c0:	cmp	r3, r1
   179c4:	beq	17de4 <__printf_chk@plt+0x6a4c>
   179c8:	str	sl, [fp, #4]
   179cc:	b	1768c <__printf_chk@plt+0x62f4>
   179d0:	mov	r0, r1
   179d4:	bl	11260 <malloc@plt>
   179d8:	subs	r3, r0, #0
   179dc:	beq	17df8 <__printf_chk@plt+0x6a60>
   179e0:	add	r2, r4, r4, lsl #2
   179e4:	mov	r0, r3
   179e8:	add	r2, r4, r2, lsl #1
   179ec:	mov	r1, r6
   179f0:	lsl	r2, r2, #2
   179f4:	bl	11254 <memcpy@plt>
   179f8:	ldr	r2, [sp, #4]
   179fc:	ldr	r4, [r2]
   17a00:	mov	r3, r0
   17a04:	b	17860 <__printf_chk@plt+0x64c8>
   17a08:	ldr	r3, [sp, #32]
   17a0c:	cmn	r3, #1
   17a10:	str	r3, [r6, #20]
   17a14:	add	r3, r3, #1
   17a18:	beq	178e0 <__printf_chk@plt+0x6548>
   17a1c:	ldr	r4, [sp, #32]
   17a20:	str	r3, [sp, #32]
   17a24:	b	17678 <__printf_chk@plt+0x62e0>
   17a28:	cmp	r3, #15
   17a2c:	movgt	r3, #12
   17a30:	strgt	r3, [sp, #20]
   17a34:	bgt	17780 <__printf_chk@plt+0x63e8>
   17a38:	tst	r3, #4
   17a3c:	movne	r3, #12
   17a40:	moveq	r3, #11
   17a44:	str	r3, [sp, #20]
   17a48:	b	17780 <__printf_chk@plt+0x63e8>
   17a4c:	mov	r1, r7
   17a50:	ldrb	r2, [r1, #1]!
   17a54:	sub	r0, r2, #48	; 0x30
   17a58:	cmp	r0, #9
   17a5c:	bls	17a50 <__printf_chk@plt+0x66b8>
   17a60:	cmp	r2, #36	; 0x24
   17a64:	bne	1766c <__printf_chk@plt+0x62d4>
   17a68:	mov	r1, #0
   17a6c:	b	17a78 <__printf_chk@plt+0x66e0>
   17a70:	cmp	ip, #9
   17a74:	bhi	17ef4 <__printf_chk@plt+0x6b5c>
   17a78:	ldr	r2, [pc, #1256]	; 17f68 <__printf_chk@plt+0x6bd0>
   17a7c:	mov	r0, r7
   17a80:	cmp	r1, r2
   17a84:	addls	r1, r1, r1, lsl #2
   17a88:	mvnhi	r2, #0
   17a8c:	lslls	r2, r1, #1
   17a90:	ldrb	ip, [r7, #1]!
   17a94:	adds	r2, r3, r2
   17a98:	mov	r1, r2
   17a9c:	sub	r3, ip, #48	; 0x30
   17aa0:	uxtb	ip, r3
   17aa4:	bcc	17a70 <__printf_chk@plt+0x66d8>
   17aa8:	cmp	ip, #9
   17aac:	mvn	r2, #0
   17ab0:	mov	r0, r7
   17ab4:	bls	17a90 <__printf_chk@plt+0x66f8>
   17ab8:	b	178e0 <__printf_chk@plt+0x6548>
   17abc:	cmp	r3, #7
   17ac0:	movgt	r3, #16
   17ac4:	movle	r3, #15
   17ac8:	str	r3, [sp, #20]
   17acc:	b	17780 <__printf_chk@plt+0x63e8>
   17ad0:	cmp	r3, #15
   17ad4:	bgt	17dcc <__printf_chk@plt+0x6a34>
   17ad8:	tst	r3, #4
   17adc:	bne	17dcc <__printf_chk@plt+0x6a34>
   17ae0:	cmp	r3, #7
   17ae4:	movgt	r3, #7
   17ae8:	strgt	r3, [sp, #20]
   17aec:	bgt	17780 <__printf_chk@plt+0x63e8>
   17af0:	tst	r3, #2
   17af4:	movne	r3, #1
   17af8:	strne	r3, [sp, #20]
   17afc:	bne	17780 <__printf_chk@plt+0x63e8>
   17b00:	tst	r3, #1
   17b04:	movne	r3, #3
   17b08:	moveq	r3, #5
   17b0c:	str	r3, [sp, #20]
   17b10:	b	17780 <__printf_chk@plt+0x63e8>
   17b14:	cmp	r3, #7
   17b18:	movgt	r3, #14
   17b1c:	movle	r3, #13
   17b20:	str	r3, [sp, #20]
   17b24:	b	17780 <__printf_chk@plt+0x63e8>
   17b28:	cmp	r3, #15
   17b2c:	bgt	17dc0 <__printf_chk@plt+0x6a28>
   17b30:	tst	r3, #4
   17b34:	bne	17dc0 <__printf_chk@plt+0x6a28>
   17b38:	cmp	r3, #7
   17b3c:	movgt	r3, #8
   17b40:	strgt	r3, [sp, #20]
   17b44:	bgt	17780 <__printf_chk@plt+0x63e8>
   17b48:	tst	r3, #2
   17b4c:	movne	r3, #2
   17b50:	strne	r3, [sp, #20]
   17b54:	bne	17780 <__printf_chk@plt+0x63e8>
   17b58:	tst	r3, #1
   17b5c:	movne	r3, #4
   17b60:	moveq	r3, #6
   17b64:	str	r3, [sp, #20]
   17b68:	b	17780 <__printf_chk@plt+0x63e8>
   17b6c:	mov	r3, #16
   17b70:	str	r3, [sp, #20]
   17b74:	mov	r4, #115	; 0x73
   17b78:	b	17780 <__printf_chk@plt+0x63e8>
   17b7c:	mov	r3, #17
   17b80:	str	r3, [sp, #20]
   17b84:	b	17780 <__printf_chk@plt+0x63e8>
   17b88:	cmp	r3, #15
   17b8c:	bgt	17db4 <__printf_chk@plt+0x6a1c>
   17b90:	tst	r3, #4
   17b94:	bne	17db4 <__printf_chk@plt+0x6a1c>
   17b98:	cmp	r3, #7
   17b9c:	movgt	r3, #21
   17ba0:	strgt	r3, [sp, #20]
   17ba4:	bgt	17780 <__printf_chk@plt+0x63e8>
   17ba8:	tst	r3, #2
   17bac:	movne	r3, #18
   17bb0:	strne	r3, [sp, #20]
   17bb4:	bne	17780 <__printf_chk@plt+0x63e8>
   17bb8:	tst	r3, #1
   17bbc:	movne	r3, #19
   17bc0:	moveq	r3, #20
   17bc4:	str	r3, [sp, #20]
   17bc8:	b	17780 <__printf_chk@plt+0x63e8>
   17bcc:	ldr	r2, [sp, #20]
   17bd0:	cmp	r3, r2
   17bd4:	beq	177d4 <__printf_chk@plt+0x643c>
   17bd8:	mov	r3, sl
   17bdc:	ldr	fp, [sp, #4]
   17be0:	b	178ec <__printf_chk@plt+0x6554>
   17be4:	ldr	r3, [sp, #8]
   17be8:	lsl	r3, r3, #1
   17bec:	cmp	r3, r8
   17bf0:	str	r3, [sp, #8]
   17bf4:	addls	r3, r8, #1
   17bf8:	strls	r3, [sp, #8]
   17bfc:	ldr	r3, [sp, #8]
   17c00:	cmn	r3, #-268435455	; 0xf0000001
   17c04:	bhi	17f4c <__printf_chk@plt+0x6bb4>
   17c08:	ldr	r2, [sp, #12]
   17c0c:	lsl	r1, r3, #4
   17c10:	cmp	r2, sl
   17c14:	beq	17cd0 <__printf_chk@plt+0x6938>
   17c18:	mov	r0, sl
   17c1c:	bl	11140 <realloc@plt>
   17c20:	subs	sl, r0, #0
   17c24:	beq	17f24 <__printf_chk@plt+0x6b8c>
   17c28:	ldr	r3, [fp, #4]
   17c2c:	ldr	r2, [sp, #12]
   17c30:	cmp	r2, r3
   17c34:	beq	17f58 <__printf_chk@plt+0x6bc0>
   17c38:	str	sl, [fp, #4]
   17c3c:	b	1779c <__printf_chk@plt+0x6404>
   17c40:	ldr	r3, [sp, #32]
   17c44:	cmn	r3, #1
   17c48:	str	r3, [r6, #40]	; 0x28
   17c4c:	add	r3, r3, #1
   17c50:	beq	178e0 <__printf_chk@plt+0x6548>
   17c54:	ldr	r8, [sp, #32]
   17c58:	str	r3, [sp, #32]
   17c5c:	b	1778c <__printf_chk@plt+0x63f4>
   17c60:	str	r5, [r6, #12]
   17c64:	ldrb	r3, [r5]
   17c68:	sub	r3, r3, #48	; 0x30
   17c6c:	cmp	r3, #9
   17c70:	bhi	17cb0 <__printf_chk@plt+0x6918>
   17c74:	mov	r7, r5
   17c78:	b	17c80 <__printf_chk@plt+0x68e8>
   17c7c:	mov	r7, r2
   17c80:	ldrb	r3, [r7, #1]
   17c84:	add	r2, r7, #1
   17c88:	sub	r3, r3, #48	; 0x30
   17c8c:	cmp	r3, #9
   17c90:	bls	17c7c <__printf_chk@plt+0x68e4>
   17c94:	ldr	r3, [sp, #16]
   17c98:	sub	r5, r2, r5
   17c9c:	cmp	r3, r5
   17ca0:	movcc	r3, r5
   17ca4:	add	r7, r7, #2
   17ca8:	mov	r5, r2
   17cac:	str	r3, [sp, #16]
   17cb0:	str	r5, [r6, #16]
   17cb4:	ldrb	r4, [r5]
   17cb8:	b	17478 <__printf_chk@plt+0x60e0>
   17cbc:	cmp	r3, #5
   17cc0:	bne	17bd8 <__printf_chk@plt+0x6840>
   17cc4:	mov	r5, r7
   17cc8:	ldrb	r4, [r7], #1
   17ccc:	b	17478 <__printf_chk@plt+0x60e0>
   17cd0:	mov	r0, r1
   17cd4:	bl	11260 <malloc@plt>
   17cd8:	subs	r3, r0, #0
   17cdc:	beq	17d0c <__printf_chk@plt+0x6974>
   17ce0:	ldr	r2, [fp]
   17ce4:	mov	r1, sl
   17ce8:	mov	r0, r3
   17cec:	lsl	r2, r2, #4
   17cf0:	bl	11254 <memcpy@plt>
   17cf4:	mov	sl, r0
   17cf8:	b	17c38 <__printf_chk@plt+0x68a0>
   17cfc:	mov	r0, r1
   17d00:	bl	11260 <malloc@plt>
   17d04:	cmp	r0, #0
   17d08:	bne	17dd8 <__printf_chk@plt+0x6a40>
   17d0c:	ldr	fp, [sp, #4]
   17d10:	ldr	r0, [fp, #4]
   17d14:	ldr	r3, [sp, #36]	; 0x24
   17d18:	cmp	r3, r0
   17d1c:	beq	17d24 <__printf_chk@plt+0x698c>
   17d20:	bl	1108c <free@plt>
   17d24:	bl	112f0 <__errno_location@plt>
   17d28:	mov	r3, #12
   17d2c:	mvn	r1, #0
   17d30:	str	r3, [r0]
   17d34:	mov	r0, r1
   17d38:	add	sp, sp, #44	; 0x2c
   17d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17d40:	ldr	r3, [sp, #8]
   17d44:	lsl	r3, r3, #1
   17d48:	cmp	r3, r4
   17d4c:	str	r3, [sp, #8]
   17d50:	addls	r3, r4, #1
   17d54:	strls	r3, [sp, #8]
   17d58:	ldr	r3, [sp, #8]
   17d5c:	cmn	r3, #-268435455	; 0xf0000001
   17d60:	bhi	17f4c <__printf_chk@plt+0x6bb4>
   17d64:	ldr	r2, [sp, #12]
   17d68:	lsl	r1, r3, #4
   17d6c:	cmp	r2, sl
   17d70:	beq	17ec4 <__printf_chk@plt+0x6b2c>
   17d74:	mov	r0, sl
   17d78:	bl	11140 <realloc@plt>
   17d7c:	ldr	r1, [fp, #4]
   17d80:	subs	sl, r0, #0
   17d84:	beq	17f50 <__printf_chk@plt+0x6bb8>
   17d88:	ldr	r3, [sp, #12]
   17d8c:	ldr	r2, [fp]
   17d90:	cmp	r3, r1
   17d94:	beq	17ee0 <__printf_chk@plt+0x6b48>
   17d98:	str	sl, [fp, #4]
   17d9c:	b	17734 <__printf_chk@plt+0x639c>
   17da0:	cmp	r3, #5
   17da4:	bne	17bd8 <__printf_chk@plt+0x6840>
   17da8:	ldrb	r4, [r7]
   17dac:	mov	r5, r7
   17db0:	b	17480 <__printf_chk@plt+0x60e8>
   17db4:	mov	r3, #22
   17db8:	str	r3, [sp, #20]
   17dbc:	b	17780 <__printf_chk@plt+0x63e8>
   17dc0:	mov	r3, #10
   17dc4:	str	r3, [sp, #20]
   17dc8:	b	17780 <__printf_chk@plt+0x63e8>
   17dcc:	mov	r3, #9
   17dd0:	str	r3, [sp, #20]
   17dd4:	b	17780 <__printf_chk@plt+0x63e8>
   17dd8:	ldr	r2, [fp]
   17ddc:	ldr	r1, [sp, #12]
   17de0:	mov	sl, r0
   17de4:	lsl	r2, r2, #4
   17de8:	mov	r0, sl
   17dec:	bl	11254 <memcpy@plt>
   17df0:	ldr	r2, [fp]
   17df4:	b	179c8 <__printf_chk@plt+0x6630>
   17df8:	mov	sl, fp
   17dfc:	ldr	r3, [sp, #12]
   17e00:	ldr	r1, [sl, #4]
   17e04:	ldr	fp, [sp, #4]
   17e08:	cmp	r3, r1
   17e0c:	beq	17d24 <__printf_chk@plt+0x698c>
   17e10:	mov	r0, r1
   17e14:	bl	1108c <free@plt>
   17e18:	b	17d10 <__printf_chk@plt+0x6978>
   17e1c:	ldr	r3, [sp, #32]
   17e20:	cmn	r3, #1
   17e24:	str	r3, [r6, #32]
   17e28:	add	r3, r3, #1
   17e2c:	beq	178e0 <__printf_chk@plt+0x6548>
   17e30:	ldr	r4, [sp, #32]
   17e34:	str	r3, [sp, #32]
   17e38:	b	17720 <__printf_chk@plt+0x6388>
   17e3c:	mov	r2, r7
   17e40:	ldrb	r3, [r2, #1]!
   17e44:	sub	r0, r3, #48	; 0x30
   17e48:	cmp	r0, #9
   17e4c:	bls	17e40 <__printf_chk@plt+0x6aa8>
   17e50:	cmp	r3, #36	; 0x24
   17e54:	bne	17714 <__printf_chk@plt+0x637c>
   17e58:	mov	r2, #0
   17e5c:	b	17e68 <__printf_chk@plt+0x6ad0>
   17e60:	cmp	ip, #9
   17e64:	bhi	17f0c <__printf_chk@plt+0x6b74>
   17e68:	ldr	r3, [pc, #248]	; 17f68 <__printf_chk@plt+0x6bd0>
   17e6c:	mov	r0, r7
   17e70:	cmp	r2, r3
   17e74:	addls	r2, r2, r2, lsl #2
   17e78:	mvnhi	r3, #0
   17e7c:	lslls	r3, r2, #1
   17e80:	ldrb	ip, [r7, #1]!
   17e84:	adds	r3, r1, r3
   17e88:	mov	r2, r3
   17e8c:	sub	r1, ip, #48	; 0x30
   17e90:	uxtb	ip, r1
   17e94:	bcc	17e60 <__printf_chk@plt+0x6ac8>
   17e98:	cmp	ip, #9
   17e9c:	mvn	r3, #0
   17ea0:	mov	r0, r7
   17ea4:	bls	17e80 <__printf_chk@plt+0x6ae8>
   17ea8:	b	178e0 <__printf_chk@plt+0x6548>
   17eac:	sub	r8, r3, #1
   17eb0:	cmn	r8, #3
   17eb4:	bhi	178e0 <__printf_chk@plt+0x6548>
   17eb8:	add	r5, r1, #2
   17ebc:	ldrb	r4, [r1, #2]
   17ec0:	b	173f8 <__printf_chk@plt+0x6060>
   17ec4:	mov	r0, r1
   17ec8:	bl	11260 <malloc@plt>
   17ecc:	cmp	r0, #0
   17ed0:	beq	17d0c <__printf_chk@plt+0x6974>
   17ed4:	ldr	r2, [fp]
   17ed8:	ldr	r1, [sp, #12]
   17edc:	mov	sl, r0
   17ee0:	lsl	r2, r2, #4
   17ee4:	mov	r0, sl
   17ee8:	bl	11254 <memcpy@plt>
   17eec:	ldr	r2, [fp]
   17ef0:	b	17d98 <__printf_chk@plt+0x6a00>
   17ef4:	sub	r4, r2, #1
   17ef8:	cmn	r4, #3
   17efc:	bhi	178e0 <__printf_chk@plt+0x6548>
   17f00:	str	r4, [r6, #20]
   17f04:	add	r7, r0, #2
   17f08:	b	17678 <__printf_chk@plt+0x62e0>
   17f0c:	sub	r4, r3, #1
   17f10:	cmn	r4, #3
   17f14:	bhi	178e0 <__printf_chk@plt+0x6548>
   17f18:	str	r4, [r6, #32]
   17f1c:	add	r7, r0, #2
   17f20:	b	17720 <__printf_chk@plt+0x6388>
   17f24:	mov	sl, fp
   17f28:	ldr	fp, [sp, #4]
   17f2c:	ldr	r1, [sl, #4]
   17f30:	ldr	r3, [sp, #12]
   17f34:	cmp	r3, r1
   17f38:	bne	17e10 <__printf_chk@plt+0x6a78>
   17f3c:	b	17d10 <__printf_chk@plt+0x6978>
   17f40:	mov	r5, r7
   17f44:	mov	r3, #1
   17f48:	b	17954 <__printf_chk@plt+0x65bc>
   17f4c:	mov	r1, sl
   17f50:	ldr	fp, [sp, #4]
   17f54:	b	17f30 <__printf_chk@plt+0x6b98>
   17f58:	mov	r3, sl
   17f5c:	mov	sl, r2
   17f60:	b	17ce0 <__printf_chk@plt+0x6948>
   17f64:	ldrbeq	r7, [r1, #1117]	; 0x45d
   17f68:	ldmibne	r9, {r0, r3, r4, r7, r8, fp, ip, pc}
   17f6c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17f70:	mov	r7, r0
   17f74:	ldr	r6, [pc, #72]	; 17fc4 <__printf_chk@plt+0x6c2c>
   17f78:	ldr	r5, [pc, #72]	; 17fc8 <__printf_chk@plt+0x6c30>
   17f7c:	add	r6, pc, r6
   17f80:	add	r5, pc, r5
   17f84:	sub	r6, r6, r5
   17f88:	mov	r8, r1
   17f8c:	mov	r9, r2
   17f90:	bl	1103c <fscanf@plt-0x20>
   17f94:	asrs	r6, r6, #2
   17f98:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17f9c:	mov	r4, #0
   17fa0:	add	r4, r4, #1
   17fa4:	ldr	r3, [r5], #4
   17fa8:	mov	r2, r9
   17fac:	mov	r1, r8
   17fb0:	mov	r0, r7
   17fb4:	blx	r3
   17fb8:	cmp	r6, r4
   17fbc:	bne	17fa0 <__printf_chk@plt+0x6c08>
   17fc0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17fc4:	andeq	r1, r1, r8, lsr #28
   17fc8:	andeq	r1, r1, r4, lsl lr
   17fcc:	bx	lr

Disassembly of section .fini:

00017fd0 <.fini>:
   17fd0:	push	{r3, lr}
   17fd4:	pop	{r3, pc}
