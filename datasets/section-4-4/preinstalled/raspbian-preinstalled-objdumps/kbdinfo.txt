
raspbian-preinstalled/kbdinfo:     file format elf32-littlearm


Disassembly of section .init:

000106b8 <.init>:
   106b8:	push	{r3, lr}
   106bc:	bl	10d4c <close@plt+0x578>
   106c0:	pop	{r3, pc}

Disassembly of section .plt:

000106c4 <dcgettext@plt-0x14>:
   106c4:	push	{lr}		; (str lr, [sp, #-4]!)
   106c8:	ldr	lr, [pc, #4]	; 106d4 <dcgettext@plt-0x4>
   106cc:	add	lr, pc, lr
   106d0:	ldr	pc, [lr, #8]!
   106d4:	andeq	r1, r1, ip, lsr #18

000106d8 <dcgettext@plt>:
   106d8:	add	ip, pc, #0, 12
   106dc:	add	ip, ip, #69632	; 0x11000
   106e0:	ldr	pc, [ip, #2348]!	; 0x92c

000106e4 <__stack_chk_fail@plt>:
   106e4:	add	ip, pc, #0, 12
   106e8:	add	ip, ip, #69632	; 0x11000
   106ec:	ldr	pc, [ip, #2340]!	; 0x924

000106f0 <textdomain@plt>:
   106f0:	add	ip, pc, #0, 12
   106f4:	add	ip, ip, #69632	; 0x11000
   106f8:	ldr	pc, [ip, #2332]!	; 0x91c

000106fc <strcasecmp@plt>:
   106fc:	add	ip, pc, #0, 12
   10700:	add	ip, ip, #69632	; 0x11000
   10704:	ldr	pc, [ip, #2324]!	; 0x914

00010708 <ioctl@plt>:
   10708:	add	ip, pc, #0, 12
   1070c:	add	ip, ip, #69632	; 0x11000
   10710:	ldr	pc, [ip, #2316]!	; 0x90c

00010714 <puts@plt>:
   10714:	add	ip, pc, #0, 12
   10718:	add	ip, ip, #69632	; 0x11000
   1071c:	ldr	pc, [ip, #2308]!	; 0x904

00010720 <__libc_start_main@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #69632	; 0x11000
   10728:	ldr	pc, [ip, #2300]!	; 0x8fc

0001072c <strerror@plt>:
   1072c:	add	ip, pc, #0, 12
   10730:	add	ip, ip, #69632	; 0x11000
   10734:	ldr	pc, [ip, #2292]!	; 0x8f4

00010738 <__vfprintf_chk@plt>:
   10738:	add	ip, pc, #0, 12
   1073c:	add	ip, ip, #69632	; 0x11000
   10740:	ldr	pc, [ip, #2284]!	; 0x8ec

00010744 <__gmon_start__@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #69632	; 0x11000
   1074c:	ldr	pc, [ip, #2276]!	; 0x8e4

00010750 <open@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #69632	; 0x11000
   10758:	ldr	pc, [ip, #2268]!	; 0x8dc

0001075c <exit@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #69632	; 0x11000
   10764:	ldr	pc, [ip, #2260]!	; 0x8d4

00010768 <getopt@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #69632	; 0x11000
   10770:	ldr	pc, [ip, #2252]!	; 0x8cc

00010774 <__errno_location@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #69632	; 0x11000
   1077c:	ldr	pc, [ip, #2244]!	; 0x8c4

00010780 <__printf_chk@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #69632	; 0x11000
   10788:	ldr	pc, [ip, #2236]!	; 0x8bc

0001078c <__fprintf_chk@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #69632	; 0x11000
   10794:	ldr	pc, [ip, #2228]!	; 0x8b4

00010798 <setlocale@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #69632	; 0x11000
   107a0:	ldr	pc, [ip, #2220]!	; 0x8ac

000107a4 <strrchr@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #69632	; 0x11000
   107ac:	ldr	pc, [ip, #2212]!	; 0x8a4

000107b0 <bindtextdomain@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #69632	; 0x11000
   107b8:	ldr	pc, [ip, #2204]!	; 0x89c

000107bc <isatty@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #69632	; 0x11000
   107c4:	ldr	pc, [ip, #2196]!	; 0x894

000107c8 <abort@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #69632	; 0x11000
   107d0:	ldr	pc, [ip, #2188]!	; 0x88c

000107d4 <close@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #69632	; 0x11000
   107dc:	ldr	pc, [ip, #2180]!	; 0x884

Disassembly of section .text:

000107e0 <.text>:
   107e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   107e4:	sub	sp, sp, #16
   107e8:	ldr	r9, [pc, #1144]	; 10c68 <close@plt+0x494>
   107ec:	ldr	r4, [r1]
   107f0:	mov	r5, r1
   107f4:	ldr	r3, [r9]
   107f8:	mov	r1, #47	; 0x2f
   107fc:	mov	r6, r0
   10800:	mov	r0, r4
   10804:	str	r3, [sp, #12]
   10808:	bl	107a4 <strrchr@plt>
   1080c:	ldr	sl, [pc, #1112]	; 10c6c <close@plt+0x498>
   10810:	ldr	r1, [pc, #1112]	; 10c70 <close@plt+0x49c>
   10814:	ldr	r7, [pc, #1112]	; 10c74 <close@plt+0x4a0>
   10818:	ldr	r8, [pc, #1112]	; 10c78 <close@plt+0x4a4>
   1081c:	cmp	r0, #0
   10820:	addne	r4, r0, #1
   10824:	mov	r0, #6
   10828:	str	r4, [sl]
   1082c:	bl	10798 <setlocale@plt>
   10830:	ldr	r1, [pc, #1092]	; 10c7c <close@plt+0x4a8>
   10834:	ldr	r0, [pc, #1092]	; 10c80 <close@plt+0x4ac>
   10838:	bl	107b0 <bindtextdomain@plt>
   1083c:	ldr	r0, [pc, #1084]	; 10c80 <close@plt+0x4ac>
   10840:	bl	106f0 <textdomain@plt>
   10844:	mov	r4, #0
   10848:	mov	r2, r7
   1084c:	mov	r1, r5
   10850:	mov	r0, r6
   10854:	bl	10768 <getopt@plt>
   10858:	cmn	r0, #1
   1085c:	beq	10898 <close@plt+0xc4>
   10860:	cmp	r0, #86	; 0x56
   10864:	beq	10c38 <close@plt+0x464>
   10868:	cmp	r0, #104	; 0x68
   1086c:	beq	10c30 <close@plt+0x45c>
   10870:	cmp	r0, #67	; 0x43
   10874:	bne	10848 <close@plt+0x74>
   10878:	ldr	r4, [r8]
   1087c:	cmp	r4, #0
   10880:	beq	10890 <close@plt+0xbc>
   10884:	ldrb	r3, [r4]
   10888:	cmp	r3, #0
   1088c:	bne	10848 <close@plt+0x74>
   10890:	mov	r0, #1
   10894:	bl	10e00 <close@plt+0x62c>
   10898:	ldr	r8, [pc, #996]	; 10c84 <close@plt+0x4b0>
   1089c:	ldr	r3, [r8]
   108a0:	cmp	r3, r6
   108a4:	beq	10a78 <close@plt+0x2a4>
   108a8:	add	r2, r3, #1
   108ac:	cmp	r2, r6
   108b0:	ldr	r1, [r5, r3, lsl #2]
   108b4:	str	r2, [r8]
   108b8:	lsl	r2, r3, #2
   108bc:	addlt	r5, r5, r2
   108c0:	ldr	r7, [pc, #960]	; 10c88 <close@plt+0x4b4>
   108c4:	ldrlt	r2, [r5, #4]
   108c8:	addlt	r3, r3, #2
   108cc:	mov	r0, r4
   108d0:	strlt	r3, [r8]
   108d4:	strlt	r2, [r7]
   108d8:	str	r1, [r7, #4]
   108dc:	bl	10f4c <close@plt+0x778>
   108e0:	subs	r5, r0, #0
   108e4:	blt	10a54 <close@plt+0x280>
   108e8:	ldr	r4, [r7, #4]
   108ec:	ldr	r0, [pc, #920]	; 10c8c <close@plt+0x4b8>
   108f0:	mov	r1, r4
   108f4:	bl	106fc <strcasecmp@plt>
   108f8:	cmp	r0, #0
   108fc:	beq	10a00 <close@plt+0x22c>
   10900:	mov	r1, r4
   10904:	ldr	r0, [pc, #900]	; 10c90 <close@plt+0x4bc>
   10908:	bl	106fc <strcasecmp@plt>
   1090c:	cmp	r0, #0
   10910:	beq	109c8 <close@plt+0x1f4>
   10914:	mov	r1, r4
   10918:	ldr	r0, [pc, #884]	; 10c94 <close@plt+0x4c0>
   1091c:	bl	106fc <strcasecmp@plt>
   10920:	cmp	r0, #0
   10924:	beq	10ad8 <close@plt+0x304>
   10928:	mov	r1, r4
   1092c:	ldr	r0, [pc, #868]	; 10c98 <close@plt+0x4c4>
   10930:	bl	106fc <strcasecmp@plt>
   10934:	subs	r6, r0, #0
   10938:	bne	10aa0 <close@plt+0x2cc>
   1093c:	add	r2, sp, #7
   10940:	ldr	r1, [pc, #852]	; 10c9c <close@plt+0x4c8>
   10944:	mov	r0, r5
   10948:	bl	10708 <ioctl@plt>
   1094c:	cmn	r0, #1
   10950:	beq	10c18 <close@plt+0x444>
   10954:	ldrb	r4, [sp, #7]
   10958:	ldr	r7, [r7]
   1095c:	and	r3, r4, #7
   10960:	cmp	r7, #0
   10964:	str	r3, [sp, #8]
   10968:	and	r2, r4, #1
   1096c:	beq	10ba4 <close@plt+0x3d0>
   10970:	cmp	r2, #0
   10974:	beq	1098c <close@plt+0x1b8>
   10978:	ldr	r1, [pc, #800]	; 10ca0 <close@plt+0x4cc>
   1097c:	mov	r0, r7
   10980:	bl	106fc <strcasecmp@plt>
   10984:	subs	r6, r0, #0
   10988:	beq	10a30 <close@plt+0x25c>
   1098c:	tst	r4, #2
   10990:	beq	109a8 <close@plt+0x1d4>
   10994:	ldr	r1, [pc, #776]	; 10ca4 <close@plt+0x4d0>
   10998:	mov	r0, r7
   1099c:	bl	106fc <strcasecmp@plt>
   109a0:	subs	r6, r0, #0
   109a4:	beq	10a30 <close@plt+0x25c>
   109a8:	tst	r4, #4
   109ac:	beq	10a2c <close@plt+0x258>
   109b0:	mov	r0, r7
   109b4:	ldr	r1, [pc, #748]	; 10ca8 <close@plt+0x4d4>
   109b8:	bl	106fc <strcasecmp@plt>
   109bc:	adds	r6, r0, #0
   109c0:	movne	r6, #1
   109c4:	b	10a30 <close@plt+0x25c>
   109c8:	add	r2, sp, #8
   109cc:	ldr	r1, [pc, #728]	; 10cac <close@plt+0x4d8>
   109d0:	mov	r0, r5
   109d4:	bl	10708 <ioctl@plt>
   109d8:	cmn	r0, #1
   109dc:	beq	10b8c <close@plt+0x3b8>
   109e0:	ldr	r3, [sp, #8]
   109e4:	cmp	r3, #3
   109e8:	ldrls	pc, [pc, r3, lsl #2]
   109ec:	b	10a2c <close@plt+0x258>
   109f0:	andeq	r0, r1, ip, asr fp
   109f4:	andeq	r0, r1, ip, ror #22
   109f8:	andeq	r0, r1, ip, ror fp
   109fc:	andeq	r0, r1, ip, asr #22
   10a00:	add	r2, sp, #8
   10a04:	ldr	r1, [pc, #676]	; 10cb0 <close@plt+0x4dc>
   10a08:	mov	r0, r5
   10a0c:	bl	10708 <ioctl@plt>
   10a10:	cmn	r0, #1
   10a14:	beq	10b24 <close@plt+0x350>
   10a18:	ldr	r3, [sp, #8]
   10a1c:	cmp	r3, #0
   10a20:	beq	10b14 <close@plt+0x340>
   10a24:	cmp	r3, #1
   10a28:	beq	10ac8 <close@plt+0x2f4>
   10a2c:	mov	r6, #1
   10a30:	mov	r0, r5
   10a34:	bl	107d4 <close@plt>
   10a38:	ldr	r2, [sp, #12]
   10a3c:	ldr	r3, [r9]
   10a40:	mov	r0, r6
   10a44:	cmp	r2, r3
   10a48:	bne	10c64 <close@plt+0x490>
   10a4c:	add	sp, sp, #16
   10a50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a54:	mov	r2, #5
   10a58:	ldr	r1, [pc, #596]	; 10cb4 <close@plt+0x4e0>
   10a5c:	mov	r0, #0
   10a60:	bl	106d8 <dcgettext@plt>
   10a64:	mov	r1, #0
   10a68:	mov	r2, r0
   10a6c:	mov	r0, #1
   10a70:	bl	11110 <close@plt+0x93c>
   10a74:	b	108e8 <close@plt+0x114>
   10a78:	mov	r2, #5
   10a7c:	ldr	r1, [pc, #564]	; 10cb8 <close@plt+0x4e4>
   10a80:	mov	r0, #0
   10a84:	bl	106d8 <dcgettext@plt>
   10a88:	mov	r1, #0
   10a8c:	mov	r2, r0
   10a90:	mov	r0, #1
   10a94:	bl	11110 <close@plt+0x93c>
   10a98:	ldr	r3, [r8]
   10a9c:	b	108a8 <close@plt+0xd4>
   10aa0:	mov	r2, #5
   10aa4:	ldr	r1, [pc, #528]	; 10cbc <close@plt+0x4e8>
   10aa8:	mov	r0, #0
   10aac:	bl	106d8 <dcgettext@plt>
   10ab0:	mov	r2, r4
   10ab4:	mov	r6, #1
   10ab8:	mov	r1, r0
   10abc:	mov	r0, #0
   10ac0:	bl	11058 <close@plt+0x884>
   10ac4:	b	10a30 <close@plt+0x25c>
   10ac8:	ldr	r0, [pc, #496]	; 10cc0 <close@plt+0x4ec>
   10acc:	bl	10e4c <close@plt+0x678>
   10ad0:	mov	r6, r0
   10ad4:	b	10a30 <close@plt+0x25c>
   10ad8:	add	r2, sp, #8
   10adc:	ldr	r1, [pc, #480]	; 10cc4 <close@plt+0x4f0>
   10ae0:	mov	r0, r5
   10ae4:	bl	10708 <ioctl@plt>
   10ae8:	cmn	r0, #1
   10aec:	beq	10c00 <close@plt+0x42c>
   10af0:	ldr	r3, [sp, #8]
   10af4:	cmp	r3, #3
   10af8:	beq	10b3c <close@plt+0x368>
   10afc:	cmp	r3, #4
   10b00:	bne	10a2c <close@plt+0x258>
   10b04:	ldr	r0, [pc, #444]	; 10cc8 <close@plt+0x4f4>
   10b08:	bl	10e4c <close@plt+0x678>
   10b0c:	mov	r6, r0
   10b10:	b	10a30 <close@plt+0x25c>
   10b14:	ldr	r0, [pc, #432]	; 10ccc <close@plt+0x4f8>
   10b18:	bl	10e4c <close@plt+0x678>
   10b1c:	mov	r6, r0
   10b20:	b	10a30 <close@plt+0x25c>
   10b24:	bl	10774 <__errno_location@plt>
   10b28:	ldr	r2, [pc, #416]	; 10cd0 <close@plt+0x4fc>
   10b2c:	ldr	r1, [r0]
   10b30:	mov	r0, #1
   10b34:	bl	11110 <close@plt+0x93c>
   10b38:	b	10a18 <close@plt+0x244>
   10b3c:	ldr	r0, [pc, #400]	; 10cd4 <close@plt+0x500>
   10b40:	bl	10e4c <close@plt+0x678>
   10b44:	mov	r6, r0
   10b48:	b	10a30 <close@plt+0x25c>
   10b4c:	ldr	r0, [pc, #388]	; 10cd8 <close@plt+0x504>
   10b50:	bl	10e4c <close@plt+0x678>
   10b54:	mov	r6, r0
   10b58:	b	10a30 <close@plt+0x25c>
   10b5c:	ldr	r0, [pc, #376]	; 10cdc <close@plt+0x508>
   10b60:	bl	10e4c <close@plt+0x678>
   10b64:	mov	r6, r0
   10b68:	b	10a30 <close@plt+0x25c>
   10b6c:	ldr	r0, [pc, #364]	; 10ce0 <close@plt+0x50c>
   10b70:	bl	10e4c <close@plt+0x678>
   10b74:	mov	r6, r0
   10b78:	b	10a30 <close@plt+0x25c>
   10b7c:	ldr	r0, [pc, #352]	; 10ce4 <close@plt+0x510>
   10b80:	bl	10e4c <close@plt+0x678>
   10b84:	mov	r6, r0
   10b88:	b	10a30 <close@plt+0x25c>
   10b8c:	bl	10774 <__errno_location@plt>
   10b90:	ldr	r2, [pc, #336]	; 10ce8 <close@plt+0x514>
   10b94:	ldr	r1, [r0]
   10b98:	mov	r0, #1
   10b9c:	bl	11110 <close@plt+0x93c>
   10ba0:	b	109e0 <close@plt+0x20c>
   10ba4:	ldr	r7, [pc, #320]	; 10cec <close@plt+0x518>
   10ba8:	ldr	r4, [pc, #320]	; 10cf0 <close@plt+0x51c>
   10bac:	cmp	r2, #0
   10bb0:	moveq	r2, r7
   10bb4:	movne	r2, r4
   10bb8:	ldr	r1, [pc, #308]	; 10cf4 <close@plt+0x520>
   10bbc:	mov	r0, #1
   10bc0:	bl	10780 <__printf_chk@plt>
   10bc4:	ldr	r3, [sp, #8]
   10bc8:	ldr	r1, [pc, #296]	; 10cf8 <close@plt+0x524>
   10bcc:	tst	r3, #2
   10bd0:	moveq	r2, r7
   10bd4:	movne	r2, r4
   10bd8:	mov	r0, #1
   10bdc:	bl	10780 <__printf_chk@plt>
   10be0:	ldr	r3, [sp, #8]
   10be4:	ldr	r1, [pc, #272]	; 10cfc <close@plt+0x528>
   10be8:	tst	r3, #4
   10bec:	moveq	r2, r7
   10bf0:	movne	r2, r4
   10bf4:	mov	r0, #1
   10bf8:	bl	10780 <__printf_chk@plt>
   10bfc:	b	10a30 <close@plt+0x25c>
   10c00:	bl	10774 <__errno_location@plt>
   10c04:	ldr	r2, [pc, #244]	; 10d00 <close@plt+0x52c>
   10c08:	ldr	r1, [r0]
   10c0c:	mov	r0, #1
   10c10:	bl	11110 <close@plt+0x93c>
   10c14:	b	10af0 <close@plt+0x31c>
   10c18:	bl	10774 <__errno_location@plt>
   10c1c:	ldr	r2, [pc, #224]	; 10d04 <close@plt+0x530>
   10c20:	ldr	r1, [r0]
   10c24:	mov	r0, #1
   10c28:	bl	11110 <close@plt+0x93c>
   10c2c:	b	10954 <close@plt+0x180>
   10c30:	mov	r0, #0
   10c34:	bl	10e00 <close@plt+0x62c>
   10c38:	mov	r2, #5
   10c3c:	ldr	r1, [pc, #196]	; 10d08 <close@plt+0x534>
   10c40:	mov	r0, #0
   10c44:	bl	106d8 <dcgettext@plt>
   10c48:	ldr	r2, [sl]
   10c4c:	ldr	r3, [pc, #184]	; 10d0c <close@plt+0x538>
   10c50:	mov	r1, r0
   10c54:	mov	r0, #1
   10c58:	bl	10780 <__printf_chk@plt>
   10c5c:	mov	r0, #0
   10c60:	bl	1075c <exit@plt>
   10c64:	bl	106e4 <__stack_chk_fail@plt>
   10c68:	andeq	r1, r2, r8, lsl #30
   10c6c:	muleq	r2, r0, r0
   10c70:	andeq	r1, r1, r4, ror r5
   10c74:	andeq	r1, r1, r8, lsr #7
   10c78:	andeq	r2, r2, r0, lsl #1
   10c7c:	andeq	r1, r1, r8, ror r3
   10c80:	andeq	r1, r1, ip, lsl #7
   10c84:	andeq	r2, r2, r0, ror r0
   10c88:	andeq	r2, r2, r8, lsl #1
   10c8c:	andeq	r1, r1, r0, lsl r4
   10c90:	andeq	r1, r1, r4, lsr r4
   10c94:	andeq	r1, r1, r4, ror #8
   10c98:	andeq	r1, r1, r8, lsl #9
   10c9c:	andeq	r4, r0, r4, ror #22
   10ca0:	muleq	r1, r0, r4
   10ca4:	muleq	r1, ip, r4
   10ca8:	andeq	r1, r1, r4, lsr #9
   10cac:	andeq	r4, r0, r4, asr #22
   10cb0:	andeq	r4, r0, fp, lsr fp
   10cb4:	ldrdeq	r1, [r1], -r0
   10cb8:			; <UNDEFINED> instruction: 0x000113b0
   10cbc:	ldrdeq	r1, [r1], -ip
   10cc0:	andeq	r1, r1, r0, lsr #8
   10cc4:	andeq	r4, r0, r2, ror #22
   10cc8:	andeq	r1, r1, r4, ror r4
   10ccc:	andeq	r1, r1, r8, lsl r4
   10cd0:	andeq	r1, r1, r8, lsl #8
   10cd4:	andeq	r1, r1, ip, ror #8
   10cd8:	andeq	r1, r1, r4, asr r4
   10cdc:	andeq	r1, r1, ip, lsr r4
   10ce0:	andeq	r1, r1, r0, asr #8
   10ce4:	andeq	r1, r1, r8, asr #8
   10ce8:	andeq	r1, r1, ip, lsr #8
   10cec:	andeq	r1, r1, r4, ror r3
   10cf0:	andeq	r1, r1, r0, ror r3
   10cf4:			; <UNDEFINED> instruction: 0x000114b0
   10cf8:	andeq	r1, r1, r0, asr #9
   10cfc:	andeq	r1, r1, ip, asr #9
   10d00:	andeq	r1, r1, ip, asr r4
   10d04:	andeq	r1, r1, r0, lsl #9
   10d08:	muleq	r1, r0, r3
   10d0c:	muleq	r1, ip, r3
   10d10:	mov	fp, #0
   10d14:	mov	lr, #0
   10d18:	pop	{r1}		; (ldr r1, [sp], #4)
   10d1c:	mov	r2, sp
   10d20:	push	{r2}		; (str r2, [sp, #-4]!)
   10d24:	push	{r0}		; (str r0, [sp, #-4]!)
   10d28:	ldr	ip, [pc, #16]	; 10d40 <close@plt+0x56c>
   10d2c:	push	{ip}		; (str ip, [sp, #-4]!)
   10d30:	ldr	r0, [pc, #12]	; 10d44 <close@plt+0x570>
   10d34:	ldr	r3, [pc, #12]	; 10d48 <close@plt+0x574>
   10d38:	bl	10720 <__libc_start_main@plt>
   10d3c:	bl	107c8 <abort@plt>
   10d40:	andeq	r1, r1, r0, lsl r2
   10d44:	andeq	r0, r1, r0, ror #15
   10d48:			; <UNDEFINED> instruction: 0x000111b0
   10d4c:	ldr	r3, [pc, #20]	; 10d68 <close@plt+0x594>
   10d50:	ldr	r2, [pc, #20]	; 10d6c <close@plt+0x598>
   10d54:	add	r3, pc, r3
   10d58:	ldr	r2, [r3, r2]
   10d5c:	cmp	r2, #0
   10d60:	bxeq	lr
   10d64:	b	10744 <__gmon_start__@plt>
   10d68:	andeq	r1, r1, r4, lsr #5
   10d6c:	andeq	r0, r0, r4, rrx
   10d70:	ldr	r0, [pc, #24]	; 10d90 <close@plt+0x5bc>
   10d74:	ldr	r3, [pc, #24]	; 10d94 <close@plt+0x5c0>
   10d78:	cmp	r3, r0
   10d7c:	bxeq	lr
   10d80:	ldr	r3, [pc, #16]	; 10d98 <close@plt+0x5c4>
   10d84:	cmp	r3, #0
   10d88:	bxeq	lr
   10d8c:	bx	r3
   10d90:	andeq	r2, r2, r0, ror r0
   10d94:	andeq	r2, r2, r0, ror r0
   10d98:	andeq	r0, r0, r0
   10d9c:	ldr	r0, [pc, #36]	; 10dc8 <close@plt+0x5f4>
   10da0:	ldr	r1, [pc, #36]	; 10dcc <close@plt+0x5f8>
   10da4:	sub	r1, r1, r0
   10da8:	asr	r1, r1, #2
   10dac:	add	r1, r1, r1, lsr #31
   10db0:	asrs	r1, r1, #1
   10db4:	bxeq	lr
   10db8:	ldr	r3, [pc, #16]	; 10dd0 <close@plt+0x5fc>
   10dbc:	cmp	r3, #0
   10dc0:	bxeq	lr
   10dc4:	bx	r3
   10dc8:	andeq	r2, r2, r0, ror r0
   10dcc:	andeq	r2, r2, r0, ror r0
   10dd0:	andeq	r0, r0, r0
   10dd4:	push	{r4, lr}
   10dd8:	ldr	r4, [pc, #24]	; 10df8 <close@plt+0x624>
   10ddc:	ldrb	r3, [r4]
   10de0:	cmp	r3, #0
   10de4:	popne	{r4, pc}
   10de8:	bl	10d70 <close@plt+0x59c>
   10dec:	mov	r3, #1
   10df0:	strb	r3, [r4]
   10df4:	pop	{r4, pc}
   10df8:	andeq	r2, r2, r4, lsl #1
   10dfc:	b	10d9c <close@plt+0x5c8>
   10e00:	ldr	r3, [pc, #56]	; 10e40 <close@plt+0x66c>
   10e04:	push	{r4, lr}
   10e08:	mov	r2, #5
   10e0c:	mov	r4, r0
   10e10:	ldr	r1, [pc, #44]	; 10e44 <close@plt+0x670>
   10e14:	mov	r0, #0
   10e18:	ldr	r5, [r3]
   10e1c:	bl	106d8 <dcgettext@plt>
   10e20:	ldr	r3, [pc, #32]	; 10e48 <close@plt+0x674>
   10e24:	mov	r1, #1
   10e28:	ldr	r3, [r3]
   10e2c:	mov	r2, r0
   10e30:	mov	r0, r5
   10e34:	bl	1078c <__fprintf_chk@plt>
   10e38:	mov	r0, r4
   10e3c:	bl	1075c <exit@plt>
   10e40:	andeq	r2, r2, r8, ror r0
   10e44:	andeq	r1, r1, r0, lsr #4
   10e48:	muleq	r2, r0, r0
   10e4c:	ldr	r3, [pc, #48]	; 10e84 <close@plt+0x6b0>
   10e50:	push	{r4, lr}
   10e54:	ldr	r4, [r3]
   10e58:	cmp	r4, #0
   10e5c:	beq	10e78 <close@plt+0x6a4>
   10e60:	mov	r1, r0
   10e64:	mov	r0, r4
   10e68:	bl	106fc <strcasecmp@plt>
   10e6c:	adds	r0, r0, #0
   10e70:	movne	r0, #1
   10e74:	pop	{r4, pc}
   10e78:	bl	10714 <puts@plt>
   10e7c:	mov	r0, r4
   10e80:	pop	{r4, pc}
   10e84:	andeq	r2, r2, r8, lsl #1
   10e88:	push	{r4, lr}
   10e8c:	mov	r1, #2
   10e90:	mov	r4, r0
   10e94:	bl	10750 <open@plt>
   10e98:	cmp	r0, #0
   10e9c:	popge	{r4, pc}
   10ea0:	mov	r1, #1
   10ea4:	mov	r0, r4
   10ea8:	bl	10750 <open@plt>
   10eac:	cmp	r0, #0
   10eb0:	popge	{r4, pc}
   10eb4:	mov	r0, r4
   10eb8:	mov	r1, #0
   10ebc:	bl	10750 <open@plt>
   10ec0:	orr	r0, r0, r0, asr #31
   10ec4:	pop	{r4, pc}
   10ec8:	push	{r4, r5, lr}
   10ecc:	sub	sp, sp, #12
   10ed0:	ldr	r4, [pc, #108]	; 10f44 <close@plt+0x770>
   10ed4:	mov	r3, #0
   10ed8:	strb	r3, [sp, #3]
   10edc:	ldr	r3, [r4]
   10ee0:	mov	r5, r0
   10ee4:	str	r3, [sp, #4]
   10ee8:	bl	107bc <isatty@plt>
   10eec:	cmp	r0, #0
   10ef0:	bne	10f10 <close@plt+0x73c>
   10ef4:	mov	r0, #0
   10ef8:	ldr	r2, [sp, #4]
   10efc:	ldr	r3, [r4]
   10f00:	cmp	r2, r3
   10f04:	bne	10f40 <close@plt+0x76c>
   10f08:	add	sp, sp, #12
   10f0c:	pop	{r4, r5, pc}
   10f10:	mov	r0, r5
   10f14:	add	r2, sp, #3
   10f18:	ldr	r1, [pc, #40]	; 10f48 <close@plt+0x774>
   10f1c:	bl	10708 <ioctl@plt>
   10f20:	cmp	r0, #0
   10f24:	bne	10ef4 <close@plt+0x720>
   10f28:	ldrb	r0, [sp, #3]
   10f2c:	sub	r0, r0, #1
   10f30:	cmp	r0, #1
   10f34:	movhi	r0, #0
   10f38:	movls	r0, #1
   10f3c:	b	10ef8 <close@plt+0x724>
   10f40:	bl	106e4 <__stack_chk_fail@plt>
   10f44:	andeq	r1, r2, r8, lsl #30
   10f48:	andeq	r4, r0, r3, lsr fp
   10f4c:	push	{r4, r5, r6, lr}
   10f50:	subs	r5, r0, #0
   10f54:	beq	10f78 <close@plt+0x7a4>
   10f58:	bl	10e88 <close@plt+0x6b4>
   10f5c:	subs	r4, r0, #0
   10f60:	blt	11010 <close@plt+0x83c>
   10f64:	bl	10ec8 <close@plt+0x6f4>
   10f68:	cmp	r0, #0
   10f6c:	beq	11008 <close@plt+0x834>
   10f70:	mov	r0, r4
   10f74:	pop	{r4, r5, r6, pc}
   10f78:	ldr	r5, [pc, #196]	; 11044 <close@plt+0x870>
   10f7c:	ldr	r0, [pc, #196]	; 11048 <close@plt+0x874>
   10f80:	b	10f90 <close@plt+0x7bc>
   10f84:	ldr	r0, [r5], #4
   10f88:	cmp	r0, #0
   10f8c:	beq	10fbc <close@plt+0x7e8>
   10f90:	bl	10e88 <close@plt+0x6b4>
   10f94:	subs	r4, r0, #0
   10f98:	blt	10f84 <close@plt+0x7b0>
   10f9c:	bl	10ec8 <close@plt+0x6f4>
   10fa0:	cmp	r0, #0
   10fa4:	bne	10f70 <close@plt+0x79c>
   10fa8:	mov	r0, r4
   10fac:	bl	107d4 <close@plt>
   10fb0:	ldr	r0, [r5], #4
   10fb4:	cmp	r0, #0
   10fb8:	bne	10f90 <close@plt+0x7bc>
   10fbc:	mov	r4, r0
   10fc0:	mov	r0, r4
   10fc4:	bl	10ec8 <close@plt+0x6f4>
   10fc8:	cmp	r0, #0
   10fcc:	bne	10f70 <close@plt+0x79c>
   10fd0:	add	r4, r4, #1
   10fd4:	cmp	r4, #3
   10fd8:	bne	10fc0 <close@plt+0x7ec>
   10fdc:	ldr	r3, [pc, #104]	; 1104c <close@plt+0x878>
   10fe0:	mov	r2, #5
   10fe4:	ldr	r1, [pc, #100]	; 11050 <close@plt+0x87c>
   10fe8:	ldr	r4, [r3]
   10fec:	bl	106d8 <dcgettext@plt>
   10ff0:	mov	r1, #1
   10ff4:	mov	r2, r0
   10ff8:	mov	r0, r4
   10ffc:	bl	1078c <__fprintf_chk@plt>
   11000:	mov	r0, #1
   11004:	bl	1075c <exit@plt>
   11008:	mov	r0, r4
   1100c:	bl	107d4 <close@plt>
   11010:	ldr	r3, [pc, #52]	; 1104c <close@plt+0x878>
   11014:	mov	r2, #5
   11018:	ldr	r1, [pc, #52]	; 11054 <close@plt+0x880>
   1101c:	mov	r0, #0
   11020:	ldr	r4, [r3]
   11024:	bl	106d8 <dcgettext@plt>
   11028:	mov	r3, r5
   1102c:	mov	r1, #1
   11030:	mov	r2, r0
   11034:	mov	r0, r4
   11038:	bl	1078c <__fprintf_chk@plt>
   1103c:	mov	r0, #1
   11040:	bl	1075c <exit@plt>
   11044:	andeq	r1, r1, r0, lsl #10
   11048:	andeq	r1, r1, r8, lsl r5
   1104c:	andeq	r2, r2, r8, ror r0
   11050:	andeq	r1, r1, ip, lsr r5
   11054:	andeq	r1, r1, r8, lsr #10
   11058:	push	{r1, r2, r3}
   1105c:	push	{r4, r5, r6, r7, lr}
   11060:	sub	sp, sp, #8
   11064:	ldr	r5, [pc, #144]	; 110fc <close@plt+0x928>
   11068:	ldr	r4, [pc, #144]	; 11100 <close@plt+0x92c>
   1106c:	ldr	r3, [pc, #144]	; 11104 <close@plt+0x930>
   11070:	ldr	r1, [r5]
   11074:	ldr	r7, [sp, #28]
   11078:	add	ip, sp, #32
   1107c:	mov	r6, r0
   11080:	ldr	r3, [r3]
   11084:	ldr	r2, [pc, #124]	; 11108 <close@plt+0x934>
   11088:	str	r1, [sp, #4]
   1108c:	ldr	r0, [r4]
   11090:	mov	r1, #1
   11094:	str	ip, [sp]
   11098:	bl	1078c <__fprintf_chk@plt>
   1109c:	mov	r2, r7
   110a0:	ldr	r0, [r4]
   110a4:	ldr	r3, [sp]
   110a8:	mov	r1, #1
   110ac:	bl	10738 <__vfprintf_chk@plt>
   110b0:	cmp	r6, #0
   110b4:	ble	110d8 <close@plt+0x904>
   110b8:	mov	r0, r6
   110bc:	ldr	r4, [r4]
   110c0:	bl	1072c <strerror@plt>
   110c4:	ldr	r2, [pc, #64]	; 1110c <close@plt+0x938>
   110c8:	mov	r1, #1
   110cc:	mov	r3, r0
   110d0:	mov	r0, r4
   110d4:	bl	1078c <__fprintf_chk@plt>
   110d8:	ldr	r2, [sp, #4]
   110dc:	ldr	r3, [r5]
   110e0:	cmp	r2, r3
   110e4:	bne	110f8 <close@plt+0x924>
   110e8:	add	sp, sp, #8
   110ec:	pop	{r4, r5, r6, r7, lr}
   110f0:	add	sp, sp, #12
   110f4:	bx	lr
   110f8:	bl	106e4 <__stack_chk_fail@plt>
   110fc:	andeq	r1, r2, r8, lsl #30
   11100:	andeq	r2, r2, r8, ror r0
   11104:	muleq	r2, r0, r0
   11108:			; <UNDEFINED> instruction: 0x000115b8
   1110c:	andeq	r1, r1, r0, asr #11
   11110:	push	{r2, r3}
   11114:	mov	r5, r1
   11118:	ldr	r2, [pc, #124]	; 1119c <close@plt+0x9c8>
   1111c:	push	{r7, lr}
   11120:	sub	sp, sp, #8
   11124:	ldr	r4, [pc, #116]	; 111a0 <close@plt+0x9cc>
   11128:	ldr	r3, [pc, #116]	; 111a4 <close@plt+0x9d0>
   1112c:	ldr	lr, [r2]
   11130:	ldr	r7, [sp, #16]
   11134:	add	ip, sp, #20
   11138:	ldr	r3, [r3]
   1113c:	ldr	r2, [pc, #100]	; 111a8 <close@plt+0x9d4>
   11140:	mov	r1, #1
   11144:	mov	r6, r0
   11148:	ldr	r0, [r4]
   1114c:	str	lr, [sp, #4]
   11150:	str	ip, [sp]
   11154:	bl	1078c <__fprintf_chk@plt>
   11158:	mov	r2, r7
   1115c:	ldr	r0, [r4]
   11160:	ldr	r3, [sp]
   11164:	mov	r1, #1
   11168:	bl	10738 <__vfprintf_chk@plt>
   1116c:	cmp	r5, #0
   11170:	ble	11194 <close@plt+0x9c0>
   11174:	mov	r0, r5
   11178:	ldr	r4, [r4]
   1117c:	bl	1072c <strerror@plt>
   11180:	ldr	r2, [pc, #36]	; 111ac <close@plt+0x9d8>
   11184:	mov	r1, #1
   11188:	mov	r3, r0
   1118c:	mov	r0, r4
   11190:	bl	1078c <__fprintf_chk@plt>
   11194:	mov	r0, r6
   11198:	bl	1075c <exit@plt>
   1119c:	andeq	r1, r2, r8, lsl #30
   111a0:	andeq	r2, r2, r8, ror r0
   111a4:	muleq	r2, r0, r0
   111a8:			; <UNDEFINED> instruction: 0x000115b8
   111ac:	andeq	r1, r1, r0, asr #11
   111b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   111b4:	mov	r7, r0
   111b8:	ldr	r6, [pc, #72]	; 11208 <close@plt+0xa34>
   111bc:	ldr	r5, [pc, #72]	; 1120c <close@plt+0xa38>
   111c0:	add	r6, pc, r6
   111c4:	add	r5, pc, r5
   111c8:	sub	r6, r6, r5
   111cc:	mov	r8, r1
   111d0:	mov	r9, r2
   111d4:	bl	106b8 <dcgettext@plt-0x20>
   111d8:	asrs	r6, r6, #2
   111dc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   111e0:	mov	r4, #0
   111e4:	add	r4, r4, #1
   111e8:	ldr	r3, [r5], #4
   111ec:	mov	r2, r9
   111f0:	mov	r1, r8
   111f4:	mov	r0, r7
   111f8:	blx	r3
   111fc:	cmp	r6, r4
   11200:	bne	111e4 <close@plt+0xa10>
   11204:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11208:	andeq	r0, r1, ip, lsr sp
   1120c:	andeq	r0, r1, r4, lsr sp
   11210:	bx	lr

Disassembly of section .fini:

00011214 <.fini>:
   11214:	push	{r3, lr}
   11218:	pop	{r3, pc}
