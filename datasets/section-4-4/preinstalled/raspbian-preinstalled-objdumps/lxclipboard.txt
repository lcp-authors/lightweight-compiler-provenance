
raspbian-preinstalled/lxclipboard:     file format elf32-littlearm


Disassembly of section .init:

000111bc <.init>:
   111bc:	push	{r3, lr}
   111c0:	bl	11528 <g_slist_free@plt+0x58>
   111c4:	pop	{r3, pc}

Disassembly of section .plt:

000111c8 <g_slist_copy@plt-0x14>:
   111c8:	push	{lr}		; (str lr, [sp, #-4]!)
   111cc:	ldr	lr, [pc, #4]	; 111d8 <g_slist_copy@plt-0x4>
   111d0:	add	lr, pc, lr
   111d4:	ldr	pc, [lr, #8]!
   111d8:	andeq	r2, r1, r4, lsl sp

000111dc <g_slist_copy@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #73728	; 0x12000
   111e4:	ldr	pc, [ip, #3348]!	; 0xd14

000111e8 <g_object_new@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #73728	; 0x12000
   111f0:	ldr	pc, [ip, #3340]!	; 0xd0c

000111f4 <XConvertSelection@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #73728	; 0x12000
   111fc:	ldr	pc, [ip, #3332]!	; 0xd04

00011200 <g_malloc_n@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #73728	; 0x12000
   11208:	ldr	pc, [ip, #3324]!	; 0xcfc

0001120c <g_object_ref@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #73728	; 0x12000
   11214:	ldr	pc, [ip, #3316]!	; 0xcf4

00011218 <g_type_register_static@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #73728	; 0x12000
   11220:	ldr	pc, [ip, #3308]!	; 0xcec

00011224 <g_type_register_static_simple@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #73728	; 0x12000
   1122c:	ldr	pc, [ip, #3300]!	; 0xce4

00011230 <gdk_window_remove_filter@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #73728	; 0x12000
   11238:	ldr	pc, [ip, #3292]!	; 0xcdc

0001123c <gdk_error_trap_pop@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #73728	; 0x12000
   11244:	ldr	pc, [ip, #3284]!	; 0xcd4

00011248 <g_type_class_adjust_private_offset@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #73728	; 0x12000
   11250:	ldr	pc, [ip, #3276]!	; 0xccc

00011254 <gdk_window_add_filter@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #73728	; 0x12000
   1125c:	ldr	pc, [ip, #3268]!	; 0xcc4

00011260 <XSendEvent@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #73728	; 0x12000
   11268:	ldr	pc, [ip, #3260]!	; 0xcbc

0001126c <XGetWindowProperty@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #73728	; 0x12000
   11274:	ldr	pc, [ip, #3252]!	; 0xcb4

00011278 <g_slist_prepend@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #73728	; 0x12000
   11280:	ldr	pc, [ip, #3244]!	; 0xcac

00011284 <XCreateSimpleWindow@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #73728	; 0x12000
   1128c:	ldr	pc, [ip, #3236]!	; 0xca4

00011290 <g_printerr@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #73728	; 0x12000
   11298:	ldr	pc, [ip, #3228]!	; 0xc9c

0001129c <g_log@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #73728	; 0x12000
   112a4:	ldr	pc, [ip, #3220]!	; 0xc94

000112a8 <g_slist_length@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #73728	; 0x12000
   112b0:	ldr	pc, [ip, #3212]!	; 0xc8c

000112b4 <unique_app_new@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #73728	; 0x12000
   112bc:	ldr	pc, [ip, #3204]!	; 0xc84

000112c0 <XIfEvent@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #73728	; 0x12000
   112c8:	ldr	pc, [ip, #3196]!	; 0xc7c

000112cc <XSelectInput@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #73728	; 0x12000
   112d4:	ldr	pc, [ip, #3188]!	; 0xc74

000112d8 <gdk_error_trap_push@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #73728	; 0x12000
   112e0:	ldr	pc, [ip, #3180]!	; 0xc6c

000112e4 <XInternAtom@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #73728	; 0x12000
   112ec:	ldr	pc, [ip, #3172]!	; 0xc64

000112f0 <g_main_loop_run@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #73728	; 0x12000
   112f8:	ldr	pc, [ip, #3164]!	; 0xc5c

000112fc <g_main_loop_new@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #73728	; 0x12000
   11304:	ldr	pc, [ip, #3156]!	; 0xc54

00011308 <abort@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #73728	; 0x12000
   11310:	ldr	pc, [ip, #3148]!	; 0xc4c

00011314 <XChangeProperty@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #73728	; 0x12000
   1131c:	ldr	pc, [ip, #3140]!	; 0xc44

00011320 <gdk_display_get_default@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #73728	; 0x12000
   11328:	ldr	pc, [ip, #3132]!	; 0xc3c

0001132c <g_type_instance_get_private@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #73728	; 0x12000
   11334:	ldr	pc, [ip, #3124]!	; 0xc34

00011338 <g_once_init_enter@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #73728	; 0x12000
   11340:	ldr	pc, [ip, #3116]!	; 0xc2c

00011344 <g_intern_static_string@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #73728	; 0x12000
   1134c:	ldr	pc, [ip, #3108]!	; 0xc24

00011350 <XSetSelectionOwner@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #73728	; 0x12000
   11358:	ldr	pc, [ip, #3100]!	; 0xc1c

0001135c <gdk_x11_window_lookup_for_display@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #73728	; 0x12000
   11364:	ldr	pc, [ip, #3092]!	; 0xc14

00011368 <__stack_chk_fail@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #73728	; 0x12000
   11370:	ldr	pc, [ip, #3084]!	; 0xc0c

00011374 <gdk_x11_window_foreign_new_for_display@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #73728	; 0x12000
   1137c:	ldr	pc, [ip, #3076]!	; 0xc04

00011380 <g_getenv@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #73728	; 0x12000
   11388:	ldr	pc, [ip, #3068]!	; 0xbfc

0001138c <g_free@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #73728	; 0x12000
   11394:	ldr	pc, [ip, #3060]!	; 0xbf4

00011398 <g_slist_remove@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #73728	; 0x12000
   113a0:	ldr	pc, [ip, #3052]!	; 0xbec

000113a4 <XExtendedMaxRequestSize@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #73728	; 0x12000
   113ac:	ldr	pc, [ip, #3044]!	; 0xbe4

000113b0 <g_object_get@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #73728	; 0x12000
   113b8:	ldr	pc, [ip, #3036]!	; 0xbdc

000113bc <XFree@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #73728	; 0x12000
   113c4:	ldr	pc, [ip, #3028]!	; 0xbd4

000113c8 <g_type_class_add_private@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #73728	; 0x12000
   113d0:	ldr	pc, [ip, #3020]!	; 0xbcc

000113d4 <raise@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #73728	; 0x12000
   113dc:	ldr	pc, [ip, #3012]!	; 0xbc4

000113e0 <g_slice_alloc@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #73728	; 0x12000
   113e8:	ldr	pc, [ip, #3004]!	; 0xbbc

000113ec <memcpy@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #73728	; 0x12000
   113f4:	ldr	pc, [ip, #2996]!	; 0xbb4

000113f8 <g_object_unref@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #73728	; 0x12000
   11400:	ldr	pc, [ip, #2988]!	; 0xbac

00011404 <g_once_init_leave@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #73728	; 0x12000
   1140c:	ldr	pc, [ip, #2980]!	; 0xba4

00011410 <XDestroyWindow@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #73728	; 0x12000
   11418:	ldr	pc, [ip, #2972]!	; 0xb9c

0001141c <g_slist_foreach@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #73728	; 0x12000
   11424:	ldr	pc, [ip, #2964]!	; 0xb94

00011428 <g_slist_find_custom@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #73728	; 0x12000
   11430:	ldr	pc, [ip, #2956]!	; 0xb8c

00011434 <g_realloc@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #73728	; 0x12000
   1143c:	ldr	pc, [ip, #2948]!	; 0xb84

00011440 <XMaxRequestSize@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #73728	; 0x12000
   11448:	ldr	pc, [ip, #2940]!	; 0xb7c

0001144c <g_type_class_peek_parent@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #73728	; 0x12000
   11454:	ldr	pc, [ip, #2932]!	; 0xb74

00011458 <gtk_init@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #73728	; 0x12000
   11460:	ldr	pc, [ip, #2924]!	; 0xb6c

00011464 <XGetWindowAttributes@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #73728	; 0x12000
   1146c:	ldr	pc, [ip, #2916]!	; 0xb64

00011470 <g_slice_free1@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #73728	; 0x12000
   11478:	ldr	pc, [ip, #2908]!	; 0xb5c

0001147c <__libc_start_main@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #73728	; 0x12000
   11484:	ldr	pc, [ip, #2900]!	; 0xb54

00011488 <g_main_loop_unref@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #73728	; 0x12000
   11490:	ldr	pc, [ip, #2892]!	; 0xb4c

00011494 <__gmon_start__@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #73728	; 0x12000
   1149c:	ldr	pc, [ip, #2884]!	; 0xb44

000114a0 <XGetSelectionOwner@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #73728	; 0x12000
   114a8:	ldr	pc, [ip, #2876]!	; 0xb3c

000114ac <XSync@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #73728	; 0x12000
   114b4:	ldr	pc, [ip, #2868]!	; 0xb34

000114b8 <gdk_x11_display_get_xdisplay@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #73728	; 0x12000
   114c0:	ldr	pc, [ip, #2860]!	; 0xb2c

000114c4 <g_source_remove@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #73728	; 0x12000
   114cc:	ldr	pc, [ip, #2852]!	; 0xb24

000114d0 <g_slist_free@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #73728	; 0x12000
   114d8:	ldr	pc, [ip, #2844]!	; 0xb1c

Disassembly of section .text:

000114dc <.text>:
   114dc:	mov	r3, r1
   114e0:	mov	r1, r0
   114e4:	mov	r0, r3
   114e8:	b	115e4 <g_slist_free@plt+0x114>
   114ec:	mov	fp, #0
   114f0:	mov	lr, #0
   114f4:	pop	{r1}		; (ldr r1, [sp], #4)
   114f8:	mov	r2, sp
   114fc:	push	{r2}		; (str r2, [sp, #-4]!)
   11500:	push	{r0}		; (str r0, [sp, #-4]!)
   11504:	ldr	ip, [pc, #16]	; 1151c <g_slist_free@plt+0x4c>
   11508:	push	{ip}		; (str ip, [sp, #-4]!)
   1150c:	ldr	r0, [pc, #12]	; 11520 <g_slist_free@plt+0x50>
   11510:	ldr	r3, [pc, #12]	; 11524 <g_slist_free@plt+0x54>
   11514:	bl	1147c <__libc_start_main@plt>
   11518:	bl	11308 <abort@plt>
   1151c:	andeq	r3, r1, ip, ror #4
   11520:	ldrdeq	r1, [r1], -ip
   11524:	andeq	r3, r1, ip, lsl #4
   11528:	ldr	r3, [pc, #20]	; 11544 <g_slist_free@plt+0x74>
   1152c:	ldr	r2, [pc, #20]	; 11548 <g_slist_free@plt+0x78>
   11530:	add	r3, pc, r3
   11534:	ldr	r2, [r3, r2]
   11538:	cmp	r2, #0
   1153c:	bxeq	lr
   11540:	b	11494 <__gmon_start__@plt>
   11544:			; <UNDEFINED> instruction: 0x000129b4
   11548:	andeq	r0, r0, ip, lsl #2
   1154c:	ldr	r0, [pc, #24]	; 1156c <g_slist_free@plt+0x9c>
   11550:	ldr	r3, [pc, #24]	; 11570 <g_slist_free@plt+0xa0>
   11554:	cmp	r3, r0
   11558:	bxeq	lr
   1155c:	ldr	r3, [pc, #16]	; 11574 <g_slist_free@plt+0xa4>
   11560:	cmp	r3, #0
   11564:	bxeq	lr
   11568:	bx	r3
   1156c:	andeq	r4, r2, r8
   11570:	andeq	r4, r2, r8
   11574:	andeq	r0, r0, r0
   11578:	ldr	r0, [pc, #36]	; 115a4 <g_slist_free@plt+0xd4>
   1157c:	ldr	r1, [pc, #36]	; 115a8 <g_slist_free@plt+0xd8>
   11580:	sub	r1, r1, r0
   11584:	asr	r1, r1, #2
   11588:	add	r1, r1, r1, lsr #31
   1158c:	asrs	r1, r1, #1
   11590:	bxeq	lr
   11594:	ldr	r3, [pc, #16]	; 115ac <g_slist_free@plt+0xdc>
   11598:	cmp	r3, #0
   1159c:	bxeq	lr
   115a0:	bx	r3
   115a4:	andeq	r4, r2, r8
   115a8:	andeq	r4, r2, r8
   115ac:	andeq	r0, r0, r0
   115b0:	push	{r4, lr}
   115b4:	ldr	r4, [pc, #24]	; 115d4 <g_slist_free@plt+0x104>
   115b8:	ldrb	r3, [r4]
   115bc:	cmp	r3, #0
   115c0:	popne	{r4, pc}
   115c4:	bl	1154c <g_slist_free@plt+0x7c>
   115c8:	mov	r3, #1
   115cc:	strb	r3, [r4]
   115d0:	pop	{r4, pc}
   115d4:	andeq	r4, r2, r8
   115d8:	b	11578 <g_slist_free@plt+0xa8>
   115dc:	bx	lr
   115e0:	b	1144c <g_type_class_peek_parent@plt>
   115e4:	push	{r4, r5, r6, lr}
   115e8:	sub	sp, sp, #16
   115ec:	ldr	r4, [pc, #188]	; 116b0 <g_slist_free@plt+0x1e0>
   115f0:	str	r0, [sp, #4]
   115f4:	str	r1, [sp]
   115f8:	ldr	r3, [r4]
   115fc:	add	r1, sp, #4
   11600:	mov	r0, sp
   11604:	str	r3, [sp, #12]
   11608:	bl	11458 <gtk_init@plt>
   1160c:	mov	r1, #0
   11610:	ldr	r0, [pc, #156]	; 116b4 <g_slist_free@plt+0x1e4>
   11614:	bl	112b4 <unique_app_new@plt>
   11618:	mov	r3, #0
   1161c:	add	r2, sp, #8
   11620:	ldr	r1, [pc, #144]	; 116b8 <g_slist_free@plt+0x1e8>
   11624:	mov	r6, r0
   11628:	bl	113b0 <g_object_get@plt>
   1162c:	ldr	r5, [sp, #8]
   11630:	cmp	r5, #0
   11634:	bne	11690 <g_slist_free@plt+0x1c0>
   11638:	bl	12f6c <g_slist_free@plt+0x1a9c>
   1163c:	mov	r1, r5
   11640:	mov	r0, r5
   11644:	bl	112fc <g_main_loop_new@plt>
   11648:	mov	r5, r0
   1164c:	bl	112f0 <g_main_loop_run@plt>
   11650:	cmp	r5, #0
   11654:	beq	11660 <g_slist_free@plt+0x190>
   11658:	mov	r0, r5
   1165c:	bl	11488 <g_main_loop_unref@plt>
   11660:	bl	12fc8 <g_slist_free@plt+0x1af8>
   11664:	cmp	r6, #0
   11668:	beq	11674 <g_slist_free@plt+0x1a4>
   1166c:	mov	r0, r6
   11670:	bl	113f8 <g_object_unref@plt>
   11674:	ldr	r2, [sp, #12]
   11678:	ldr	r3, [r4]
   1167c:	mov	r0, #0
   11680:	cmp	r2, r3
   11684:	bne	116ac <g_slist_free@plt+0x1dc>
   11688:	add	sp, sp, #16
   1168c:	pop	{r4, r5, r6, pc}
   11690:	ldr	r2, [pc, #36]	; 116bc <g_slist_free@plt+0x1ec>
   11694:	mov	r1, #32
   11698:	mov	r0, #0
   1169c:	bl	1129c <g_log@plt>
   116a0:	cmp	r6, #0
   116a4:	bne	1166c <g_slist_free@plt+0x19c>
   116a8:	b	11674 <g_slist_free@plt+0x1a4>
   116ac:	bl	11368 <__stack_chk_fail@plt>
   116b0:	andeq	r3, r2, r0, ror sp
   116b4:	andeq	r3, r1, r0, lsr #5
   116b8:			; <UNDEFINED> instruction: 0x000132b8
   116bc:	andeq	r3, r1, r4, asr #5
   116c0:	mov	r1, #0
   116c4:	b	111e8 <g_object_new@plt>
   116c8:	push	{r4, r5, r6, lr}
   116cc:	mcr	15, 0, r0, cr7, cr10, {5}
   116d0:	ldr	r4, [pc, #76]	; 11724 <g_slist_free@plt+0x254>
   116d4:	ldr	r5, [r4]
   116d8:	mcr	15, 0, r0, cr7, cr10, {5}
   116dc:	cmp	r5, #0
   116e0:	beq	116ec <g_slist_free@plt+0x21c>
   116e4:	ldr	r0, [r4]
   116e8:	pop	{r4, r5, r6, pc}
   116ec:	mov	r0, r4
   116f0:	bl	11338 <g_once_init_enter@plt>
   116f4:	cmp	r0, #0
   116f8:	beq	116e4 <g_slist_free@plt+0x214>
   116fc:	mov	r3, r5
   11700:	ldr	r2, [pc, #32]	; 11728 <g_slist_free@plt+0x258>
   11704:	ldr	r1, [pc, #32]	; 1172c <g_slist_free@plt+0x25c>
   11708:	mov	r0, #80	; 0x50
   1170c:	bl	11218 <g_type_register_static@plt>
   11710:	mov	r1, r0
   11714:	mov	r0, r4
   11718:	bl	11404 <g_once_init_leave@plt>
   1171c:	ldr	r0, [r4]
   11720:	pop	{r4, r5, r6, pc}
   11724:	andeq	r4, r2, ip
   11728:	andeq	r3, r1, ip, ror r2
   1172c:	strdeq	r3, [r1], -ip
   11730:	push	{r4, lr}
   11734:	bl	116c8 <g_slist_free@plt+0x1f8>
   11738:	mov	r1, #0
   1173c:	pop	{r4, lr}
   11740:	b	111e8 <g_object_new@plt>
   11744:	ldr	r0, [r0, #8]
   11748:	ldr	r3, [r1]
   1174c:	subs	r0, r0, r3
   11750:	movne	r0, #1
   11754:	bx	lr
   11758:	ldr	r0, [r0, #12]
   1175c:	ldr	r3, [r1]
   11760:	subs	r0, r0, r3
   11764:	movne	r0, #1
   11768:	bx	lr
   1176c:	ldr	r2, [r0, #12]
   11770:	ldr	r3, [r1, #16]
   11774:	cmp	r2, r3
   11778:	beq	11784 <g_slist_free@plt+0x2b4>
   1177c:	mov	r0, #1
   11780:	bx	lr
   11784:	ldr	r0, [r0, #8]
   11788:	ldr	r3, [r1, #20]
   1178c:	subs	r0, r0, r3
   11790:	movne	r0, #1
   11794:	bx	lr
   11798:	push	{lr}		; (str lr, [sp, #-4]!)
   1179c:	sub	sp, sp, #20
   117a0:	ldr	r0, [pc, #48]	; 117d8 <g_slist_free@plt+0x308>
   117a4:	bl	11344 <g_intern_static_string@plt>
   117a8:	ldr	r1, [pc, #44]	; 117dc <g_slist_free@plt+0x30c>
   117ac:	mov	r2, #0
   117b0:	mov	r3, #16
   117b4:	stmib	sp, {r1, r2}
   117b8:	str	r3, [sp]
   117bc:	mov	r2, #68	; 0x44
   117c0:	ldr	r3, [pc, #24]	; 117e0 <g_slist_free@plt+0x310>
   117c4:	mov	r1, r0
   117c8:	mov	r0, #80	; 0x50
   117cc:	bl	11224 <g_type_register_static_simple@plt>
   117d0:	add	sp, sp, #20
   117d4:	pop	{pc}		; (ldr pc, [sp], #4)
   117d8:	andeq	r3, r1, r0, ror r3
   117dc:			; <UNDEFINED> instruction: 0x00012ab4
   117e0:	andeq	r1, r1, r4, ror #15
   117e4:	push	{r4, lr}
   117e8:	mov	r4, r0
   117ec:	bl	1144c <g_type_class_peek_parent@plt>
   117f0:	ldr	r1, [pc, #52]	; 1182c <g_slist_free@plt+0x35c>
   117f4:	ldr	r3, [r1, #4]
   117f8:	cmp	r3, #0
   117fc:	str	r0, [r1]
   11800:	bne	1181c <g_slist_free@plt+0x34c>
   11804:	ldr	r3, [pc, #36]	; 11830 <g_slist_free@plt+0x360>
   11808:	mov	r0, r4
   1180c:	str	r3, [r4, #24]
   11810:	mov	r1, #36	; 0x24
   11814:	pop	{r4, lr}
   11818:	b	113c8 <g_type_class_add_private@plt>
   1181c:	add	r1, r1, #4
   11820:	mov	r0, r4
   11824:	bl	11248 <g_type_class_adjust_private_offset@plt>
   11828:	b	11804 <g_slist_free@plt+0x334>
   1182c:	andeq	r4, r2, r0, lsl r0
   11830:	andeq	r1, r1, r4, lsr r8
   11834:	ldr	r3, [r0, #12]
   11838:	push	{r4, lr}
   1183c:	mov	r4, r0
   11840:	ldr	r0, [r3]
   11844:	cmp	r0, #0
   11848:	bne	11864 <g_slist_free@plt+0x394>
   1184c:	ldr	r3, [pc, #24]	; 1186c <g_slist_free@plt+0x39c>
   11850:	mov	r0, r4
   11854:	pop	{r4, lr}
   11858:	ldr	r3, [r3]
   1185c:	ldr	r3, [r3, #24]
   11860:	bx	r3
   11864:	bl	114c4 <g_source_remove@plt>
   11868:	b	1184c <g_slist_free@plt+0x37c>
   1186c:	andeq	r4, r2, r0, lsl r0
   11870:	ldr	r3, [r1, #12]
   11874:	push	{r4, r5, r6, r7, lr}
   11878:	sub	sp, sp, #60	; 0x3c
   1187c:	ldr	r6, [pc, #244]	; 11978 <g_slist_free@plt+0x4a8>
   11880:	mov	r5, r0
   11884:	add	lr, sp, #40	; 0x28
   11888:	mov	r7, r1
   1188c:	ldrd	r0, [r3, #4]
   11890:	add	r3, sp, #36	; 0x24
   11894:	str	lr, [sp, #20]
   11898:	str	r3, [sp, #16]
   1189c:	add	r2, sp, #48	; 0x30
   118a0:	add	r4, sp, #44	; 0x2c
   118a4:	mov	lr, #1
   118a8:	mvn	r3, #-536870912	; 0xe0000000
   118ac:	str	r2, [sp, #28]
   118b0:	str	r4, [sp, #24]
   118b4:	ldr	ip, [r6]
   118b8:	mov	r4, #0
   118bc:	add	r2, sp, #32
   118c0:	str	r2, [sp, #12]
   118c4:	ldr	r2, [r5, #8]
   118c8:	stm	sp, {r3, lr}
   118cc:	str	r4, [sp, #8]
   118d0:	mov	r3, r4
   118d4:	str	ip, [sp, #52]	; 0x34
   118d8:	bl	1126c <XGetWindowProperty@plt>
   118dc:	ldr	r3, [sp, #32]
   118e0:	cmp	r3, r4
   118e4:	beq	11940 <g_slist_free@plt+0x470>
   118e8:	ldr	r2, [pc, #140]	; 1197c <g_slist_free@plt+0x4ac>
   118ec:	ldr	r0, [sp, #48]	; 0x30
   118f0:	ldr	r2, [r2, #8]
   118f4:	cmp	r3, r2
   118f8:	beq	11964 <g_slist_free@plt+0x494>
   118fc:	ldr	r2, [sp, #36]	; 0x24
   11900:	str	r3, [r5, #12]
   11904:	sub	r3, r2, #8
   11908:	cmp	r3, #24
   1190c:	str	r0, [r5]
   11910:	ldrls	r1, [pc, #104]	; 11980 <g_slist_free@plt+0x4b0>
   11914:	str	r2, [r5, #16]
   11918:	ldrls	r4, [r1, r3, lsl #2]
   1191c:	ldr	r3, [sp, #40]	; 0x28
   11920:	mul	r4, r4, r3
   11924:	str	r4, [r5, #4]
   11928:	ldr	r2, [sp, #52]	; 0x34
   1192c:	ldr	r3, [r6]
   11930:	cmp	r2, r3
   11934:	bne	11974 <g_slist_free@plt+0x4a4>
   11938:	add	sp, sp, #60	; 0x3c
   1193c:	pop	{r4, r5, r6, r7, pc}
   11940:	ldr	r4, [r7, #12]
   11944:	mov	r1, r5
   11948:	ldr	r0, [r4, #16]
   1194c:	bl	11398 <g_slist_remove@plt>
   11950:	mov	r1, r5
   11954:	str	r0, [r4, #16]
   11958:	mov	r0, #24
   1195c:	bl	11470 <g_slice_free1@plt>
   11960:	b	11928 <g_slist_free@plt+0x458>
   11964:	str	r3, [r5, #12]
   11968:	str	r4, [r5, #4]
   1196c:	bl	113bc <XFree@plt>
   11970:	b	11928 <g_slist_free@plt+0x458>
   11974:	bl	11368 <__stack_chk_fail@plt>
   11978:	andeq	r3, r2, r0, ror sp
   1197c:	andeq	r4, r2, r0, lsl r0
   11980:	andeq	r3, r1, ip, lsl #6
   11984:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11988:	mov	r8, r0
   1198c:	sub	sp, sp, #28
   11990:	mov	r9, r1
   11994:	lsl	r0, r2, #1
   11998:	mov	r1, #4
   1199c:	mov	r6, r2
   119a0:	bl	11200 <g_malloc_n@plt>
   119a4:	cmp	r6, #0
   119a8:	mov	r7, r0
   119ac:	ble	11ad8 <g_slist_free@plt+0x608>
   119b0:	sub	r4, r9, #4
   119b4:	mov	fp, #0
   119b8:	ldr	r5, [pc, #292]	; 11ae4 <g_slist_free@plt+0x614>
   119bc:	add	r6, r4, r6, lsl #2
   119c0:	mov	sl, fp
   119c4:	ldr	r3, [r4, #4]!
   119c8:	ldr	r1, [r5, #12]
   119cc:	cmp	r3, r1
   119d0:	beq	11a08 <g_slist_free@plt+0x538>
   119d4:	ldr	r1, [r5, #16]
   119d8:	cmp	r3, r1
   119dc:	beq	11a08 <g_slist_free@plt+0x538>
   119e0:	ldr	r1, [r5, #20]
   119e4:	cmp	r3, r1
   119e8:	beq	11a08 <g_slist_free@plt+0x538>
   119ec:	ldr	r1, [r5, #24]
   119f0:	cmp	r3, r1
   119f4:	beq	11a08 <g_slist_free@plt+0x538>
   119f8:	ldr	r1, [r5, #28]
   119fc:	cmp	r1, r3
   11a00:	cmpne	r3, #20
   11a04:	bne	11a78 <g_slist_free@plt+0x5a8>
   11a08:	cmp	r4, r6
   11a0c:	bne	119c4 <g_slist_free@plt+0x4f4>
   11a10:	mov	r0, r9
   11a14:	bl	113bc <XFree@plt>
   11a18:	ldr	r3, [r8, #12]
   11a1c:	mov	ip, #0
   11a20:	mov	r2, #32
   11a24:	ldrd	r0, [r3, #4]
   11a28:	stm	sp, {r2, ip}
   11a2c:	ldr	r3, [r5, #32]
   11a30:	ldr	r2, [r5, #16]
   11a34:	str	fp, [sp, #12]
   11a38:	str	r7, [sp, #8]
   11a3c:	bl	11314 <XChangeProperty@plt>
   11a40:	mov	r0, r7
   11a44:	bl	1138c <g_free@plt>
   11a48:	ldr	r2, [r8, #12]
   11a4c:	ldr	r3, [r5, #16]
   11a50:	ldr	r1, [r5, #36]	; 0x24
   11a54:	ldr	ip, [r2, #32]
   11a58:	ldr	r0, [r2, #4]
   11a5c:	str	ip, [sp, #4]
   11a60:	ldr	r2, [r2, #8]
   11a64:	str	r2, [sp]
   11a68:	mov	r2, r3
   11a6c:	bl	111f4 <XConvertSelection@plt>
   11a70:	add	sp, sp, #28
   11a74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a78:	mov	r0, #24
   11a7c:	bl	113e0 <g_slice_alloc@plt>
   11a80:	ldr	r3, [r8, #12]
   11a84:	ldr	ip, [r4]
   11a88:	mov	r2, #1
   11a8c:	str	r3, [sp, #20]
   11a90:	mov	r1, r0
   11a94:	str	ip, [r0, #8]
   11a98:	str	sl, [r0]
   11a9c:	str	sl, [r0, #4]
   11aa0:	str	sl, [r0, #12]
   11aa4:	str	sl, [r0, #16]
   11aa8:	str	r2, [r0, #20]
   11aac:	ldr	r0, [r3, #16]
   11ab0:	bl	11278 <g_slist_prepend@plt>
   11ab4:	lsl	r1, fp, #2
   11ab8:	ldr	r3, [sp, #20]
   11abc:	ldr	ip, [r4]
   11ac0:	add	r1, r7, r1
   11ac4:	str	r0, [r3, #16]
   11ac8:	str	ip, [r7, fp, lsl #2]
   11acc:	add	fp, fp, #2
   11ad0:	str	ip, [r1, #4]
   11ad4:	b	11a08 <g_slist_free@plt+0x538>
   11ad8:	ldr	r5, [pc, #4]	; 11ae4 <g_slist_free@plt+0x614>
   11adc:	mov	fp, #0
   11ae0:	b	11a10 <g_slist_free@plt+0x540>
   11ae4:	andeq	r4, r2, r0, lsl r0
   11ae8:	push	{r4, r5, lr}
   11aec:	mov	r4, r0
   11af0:	ldr	r3, [r0, #12]
   11af4:	ldr	r5, [pc, #172]	; 11ba8 <g_slist_free@plt+0x6d8>
   11af8:	ldr	r2, [pc, #172]	; 11bac <g_slist_free@plt+0x6dc>
   11afc:	sub	sp, sp, #52	; 0x34
   11b00:	ldr	ip, [r3, #4]
   11b04:	ldr	r0, [r5]
   11b08:	cmp	r1, #0
   11b0c:	str	ip, [sp, #20]
   11b10:	str	r0, [sp, #44]	; 0x2c
   11b14:	ldr	ip, [r3, #24]
   11b18:	ldr	r0, [r2, #40]	; 0x28
   11b1c:	ldr	r2, [r2, #44]	; 0x2c
   11b20:	ldrne	r1, [r3, #28]
   11b24:	ldr	r3, [r3, #32]
   11b28:	str	ip, [sp, #24]
   11b2c:	str	r0, [sp, #28]
   11b30:	mov	ip, #31
   11b34:	mov	r0, #0
   11b38:	str	r2, [sp, #32]
   11b3c:	mov	r2, #1
   11b40:	str	ip, [sp, #8]
   11b44:	str	r0, [sp, #12]
   11b48:	str	r2, [sp, #16]
   11b4c:	str	r1, [sp, #36]	; 0x24
   11b50:	str	r3, [sp, #40]	; 0x28
   11b54:	bl	112d8 <gdk_error_trap_push@plt>
   11b58:	ldr	r2, [r4, #12]
   11b5c:	add	ip, sp, #8
   11b60:	mov	r3, #0
   11b64:	ldr	r1, [r2, #24]
   11b68:	ldr	r0, [r2, #4]
   11b6c:	mov	r2, r3
   11b70:	str	ip, [sp]
   11b74:	bl	11260 <XSendEvent@plt>
   11b78:	ldr	r3, [r4, #12]
   11b7c:	mov	r1, #0
   11b80:	ldr	r0, [r3, #4]
   11b84:	bl	114ac <XSync@plt>
   11b88:	bl	1123c <gdk_error_trap_pop@plt>
   11b8c:	ldr	r2, [sp, #44]	; 0x2c
   11b90:	ldr	r3, [r5]
   11b94:	cmp	r2, r3
   11b98:	bne	11ba4 <g_slist_free@plt+0x6d4>
   11b9c:	add	sp, sp, #52	; 0x34
   11ba0:	pop	{r4, r5, pc}
   11ba4:	bl	11368 <__stack_chk_fail@plt>
   11ba8:	andeq	r3, r2, r0, ror sp
   11bac:	andeq	r4, r2, r0, lsl r0
   11bb0:	push	{r4, r5, r6, lr}
   11bb4:	mov	r4, r1
   11bb8:	sub	sp, sp, #48	; 0x30
   11bbc:	ldr	r3, [r4, #20]
   11bc0:	ldr	r1, [r1, #12]
   11bc4:	str	r3, [sp, #24]
   11bc8:	ldr	r3, [r4, #28]
   11bcc:	ldr	r5, [pc, #144]	; 11c64 <g_slist_free@plt+0x794>
   11bd0:	cmp	r2, #0
   11bd4:	str	r1, [sp, #20]
   11bd8:	str	r3, [sp, #32]
   11bdc:	ldr	r1, [r4, #24]
   11be0:	mov	r3, #31
   11be4:	str	r3, [sp, #8]
   11be8:	mov	r3, #1
   11bec:	ldrne	r2, [r4, #32]
   11bf0:	str	r1, [sp, #28]
   11bf4:	str	r3, [sp, #16]
   11bf8:	ldr	r1, [r5]
   11bfc:	ldr	r3, [r4, #36]	; 0x24
   11c00:	str	r1, [sp, #44]	; 0x2c
   11c04:	mov	r1, #0
   11c08:	mov	r6, r0
   11c0c:	strd	r2, [sp, #36]	; 0x24
   11c10:	str	r1, [sp, #12]
   11c14:	bl	112d8 <gdk_error_trap_push@plt>
   11c18:	mov	r3, #0
   11c1c:	add	r2, sp, #8
   11c20:	str	r2, [sp]
   11c24:	mov	r2, r3
   11c28:	ldr	r1, [r4, #20]
   11c2c:	ldr	r0, [r4, #12]
   11c30:	bl	11260 <XSendEvent@plt>
   11c34:	ldr	r3, [r6, #12]
   11c38:	mov	r1, #0
   11c3c:	ldr	r0, [r3, #4]
   11c40:	bl	114ac <XSync@plt>
   11c44:	bl	1123c <gdk_error_trap_pop@plt>
   11c48:	ldr	r2, [sp, #44]	; 0x2c
   11c4c:	ldr	r3, [r5]
   11c50:	cmp	r2, r3
   11c54:	bne	11c60 <g_slist_free@plt+0x790>
   11c58:	add	sp, sp, #48	; 0x30
   11c5c:	pop	{r4, r5, r6, pc}
   11c60:	bl	11368 <__stack_chk_fail@plt>
   11c64:	andeq	r3, r2, r0, ror sp
   11c68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c6c:	mov	r8, r1
   11c70:	ldr	r7, [pc, #512]	; 11e78 <g_slist_free@plt+0x9a8>
   11c74:	ldr	r5, [pc, #512]	; 11e7c <g_slist_free@plt+0x9ac>
   11c78:	ldr	r2, [r0]
   11c7c:	ldr	r3, [r7, #12]
   11c80:	ldr	r1, [r1, #12]
   11c84:	sub	sp, sp, #124	; 0x7c
   11c88:	cmp	r2, r3
   11c8c:	ldr	r3, [r5]
   11c90:	mov	r4, r0
   11c94:	str	r3, [sp, #116]	; 0x74
   11c98:	ldr	r0, [r1, #16]
   11c9c:	beq	11d60 <g_slist_free@plt+0x890>
   11ca0:	ldr	r2, [pc, #472]	; 11e80 <g_slist_free@plt+0x9b0>
   11ca4:	mov	r1, r4
   11ca8:	bl	11428 <g_slist_find_custom@plt>
   11cac:	cmp	r0, #0
   11cb0:	beq	11d48 <g_slist_free@plt+0x878>
   11cb4:	ldr	r6, [r0]
   11cb8:	ldr	r3, [r7, #8]
   11cbc:	ldr	r9, [r6, #12]
   11cc0:	cmp	r9, r3
   11cc4:	moveq	r3, #0
   11cc8:	streq	r3, [r4, #8]
   11ccc:	beq	11d48 <g_slist_free@plt+0x878>
   11cd0:	ldr	sl, [r6, #16]
   11cd4:	ldr	r2, [r6, #20]
   11cd8:	sub	r3, sl, #8
   11cdc:	cmp	r3, #24
   11ce0:	add	r2, r2, #1
   11ce4:	str	r2, [r6, #20]
   11ce8:	ldrls	r2, [pc, #404]	; 11e84 <g_slist_free@plt+0x9b4>
   11cec:	ldr	fp, [r6, #4]
   11cf0:	movhi	r1, #0
   11cf4:	ldrls	r1, [r2, r3, lsl #2]
   11cf8:	str	r6, [r4, #4]
   11cfc:	mov	r0, fp
   11d00:	bl	12ff0 <g_slist_free@plt+0x1b20>
   11d04:	ldr	r3, [r7, #48]	; 0x30
   11d08:	cmp	fp, r3
   11d0c:	str	r0, [sp, #20]
   11d10:	bhi	11de8 <g_slist_free@plt+0x918>
   11d14:	ldr	r1, [r8, #12]
   11d18:	mov	r2, #0
   11d1c:	mov	r3, r9
   11d20:	ldr	ip, [r1, #4]
   11d24:	str	r0, [sp, #12]
   11d28:	ldr	r1, [r6]
   11d2c:	mov	r0, ip
   11d30:	str	r1, [sp, #8]
   11d34:	str	sl, [sp]
   11d38:	str	r2, [sp, #4]
   11d3c:	ldr	r2, [r4, #8]
   11d40:	ldr	r1, [r4, #12]
   11d44:	bl	11314 <XChangeProperty@plt>
   11d48:	ldr	r2, [sp, #116]	; 0x74
   11d4c:	ldr	r3, [r5]
   11d50:	cmp	r2, r3
   11d54:	bne	11e74 <g_slist_free@plt+0x9a4>
   11d58:	add	sp, sp, #124	; 0x7c
   11d5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d60:	bl	112a8 <g_slist_length@plt>
   11d64:	mov	r1, #4
   11d68:	add	r0, r0, #2
   11d6c:	bl	11200 <g_malloc_n@plt>
   11d70:	ldr	ip, [r8, #12]
   11d74:	ldr	r1, [r7, #12]
   11d78:	ldr	r2, [r7, #16]
   11d7c:	ldr	r3, [ip, #16]
   11d80:	cmp	r3, #0
   11d84:	mov	r6, r0
   11d88:	str	r1, [r0]
   11d8c:	str	r2, [r0, #4]
   11d90:	beq	11e6c <g_slist_free@plt+0x99c>
   11d94:	add	r1, r0, #4
   11d98:	mov	r2, #2
   11d9c:	ldm	r3, {r0, r3}
   11da0:	add	r2, r2, #1
   11da4:	ldr	r0, [r0, #8]
   11da8:	cmp	r3, #0
   11dac:	str	r0, [r1, #4]!
   11db0:	bne	11d9c <g_slist_free@plt+0x8cc>
   11db4:	mov	r1, #0
   11db8:	mov	r3, #32
   11dbc:	ldr	r0, [ip, #4]
   11dc0:	str	r3, [sp]
   11dc4:	str	r2, [sp, #12]
   11dc8:	stmib	sp, {r1, r6}
   11dcc:	mov	r3, #4
   11dd0:	ldr	r2, [r4, #8]
   11dd4:	ldr	r1, [r4, #12]
   11dd8:	bl	11314 <XChangeProperty@plt>
   11ddc:	mov	r0, r6
   11de0:	bl	1138c <g_free@plt>
   11de4:	b	11d48 <g_slist_free@plt+0x878>
   11de8:	mov	r6, #0
   11dec:	str	r6, [r4, #16]
   11df0:	bl	112d8 <gdk_error_trap_push@plt>
   11df4:	ldr	r3, [r8, #12]
   11df8:	add	r2, sp, #24
   11dfc:	ldr	r1, [r4, #12]
   11e00:	ldr	r0, [r3, #4]
   11e04:	bl	11464 <XGetWindowAttributes@plt>
   11e08:	ldr	r3, [r8, #12]
   11e0c:	ldr	r2, [sp, #100]	; 0x64
   11e10:	ldr	r1, [r4, #12]
   11e14:	ldr	r0, [r3, #4]
   11e18:	orr	r2, r2, #4194304	; 0x400000
   11e1c:	bl	112cc <XSelectInput@plt>
   11e20:	ldr	r3, [r8, #12]
   11e24:	mov	ip, #1
   11e28:	add	r1, sp, #20
   11e2c:	mov	r2, #32
   11e30:	ldr	r0, [r3, #4]
   11e34:	str	ip, [sp, #12]
   11e38:	str	r6, [sp, #4]
   11e3c:	str	r1, [sp, #8]
   11e40:	str	r2, [sp]
   11e44:	ldr	r3, [r7, #8]
   11e48:	ldr	r2, [r4, #8]
   11e4c:	ldr	r1, [r4, #12]
   11e50:	bl	11314 <XChangeProperty@plt>
   11e54:	ldr	r3, [r8, #12]
   11e58:	mov	r1, r6
   11e5c:	ldr	r0, [r3, #4]
   11e60:	bl	114ac <XSync@plt>
   11e64:	bl	1123c <gdk_error_trap_pop@plt>
   11e68:	b	11d48 <g_slist_free@plt+0x878>
   11e6c:	mov	r2, #2
   11e70:	b	11db4 <g_slist_free@plt+0x8e4>
   11e74:	bl	11368 <__stack_chk_fail@plt>
   11e78:	andeq	r4, r2, r0, lsl r0
   11e7c:	andeq	r3, r2, r0, ror sp
   11e80:	andeq	r1, r1, r4, asr #14
   11e84:	andeq	r3, r1, ip, lsl #6
   11e88:	ldr	r3, [r1]
   11e8c:	cmp	r3, #28
   11e90:	beq	11e9c <g_slist_free@plt+0x9cc>
   11e94:	mov	r0, #0
   11e98:	bx	lr
   11e9c:	ldr	r3, [r1, #16]
   11ea0:	cmp	r2, r3
   11ea4:	bne	11e94 <g_slist_free@plt+0x9c4>
   11ea8:	mov	r3, r1
   11eac:	push	{r4, lr}
   11eb0:	mov	r2, #0
   11eb4:	ldr	r1, [pc, #20]	; 11ed0 <g_slist_free@plt+0xa00>
   11eb8:	ldr	r4, [r3, #20]
   11ebc:	bl	112e4 <XInternAtom@plt>
   11ec0:	sub	r0, r4, r0
   11ec4:	clz	r0, r0
   11ec8:	lsr	r0, r0, #5
   11ecc:	pop	{r4, pc}
   11ed0:	andeq	r3, r1, r4, lsl #7
   11ed4:	push	{r4, r5, r6, r7, r8, lr}
   11ed8:	mov	r6, r2
   11edc:	mov	r5, r1
   11ee0:	mov	r7, r0
   11ee4:	bl	11320 <gdk_display_get_default@plt>
   11ee8:	mov	r1, r5
   11eec:	mov	r8, r0
   11ef0:	bl	1135c <gdk_x11_window_lookup_for_display@plt>
   11ef4:	cmp	r6, #0
   11ef8:	mov	r4, r0
   11efc:	beq	11f20 <g_slist_free@plt+0xa50>
   11f00:	cmp	r0, #0
   11f04:	beq	11f40 <g_slist_free@plt+0xa70>
   11f08:	bl	1120c <g_object_ref@plt>
   11f0c:	mov	r2, r7
   11f10:	mov	r0, r4
   11f14:	ldr	r1, [pc, #56]	; 11f54 <g_slist_free@plt+0xa84>
   11f18:	pop	{r4, r5, r6, r7, r8, lr}
   11f1c:	b	11254 <gdk_window_add_filter@plt>
   11f20:	cmp	r0, #0
   11f24:	popeq	{r4, r5, r6, r7, r8, pc}
   11f28:	mov	r2, r7
   11f2c:	ldr	r1, [pc, #32]	; 11f54 <g_slist_free@plt+0xa84>
   11f30:	bl	11230 <gdk_window_remove_filter@plt>
   11f34:	mov	r0, r4
   11f38:	pop	{r4, r5, r6, r7, r8, lr}
   11f3c:	b	113f8 <g_object_unref@plt>
   11f40:	mov	r1, r5
   11f44:	mov	r0, r8
   11f48:	bl	11374 <gdk_x11_window_foreign_new_for_display@plt>
   11f4c:	mov	r4, r0
   11f50:	b	11f0c <g_slist_free@plt+0xa3c>
   11f54:			; <UNDEFINED> instruction: 0x00011fb4
   11f58:	push	{r4, r5, r6, lr}
   11f5c:	mov	r5, r0
   11f60:	ldr	r4, [r0, #4]
   11f64:	cmp	r4, #0
   11f68:	beq	11f80 <g_slist_free@plt+0xab0>
   11f6c:	ldr	r3, [r4, #20]
   11f70:	sub	r3, r3, #1
   11f74:	cmp	r3, #0
   11f78:	str	r3, [r4, #20]
   11f7c:	beq	11f90 <g_slist_free@plt+0xac0>
   11f80:	mov	r1, r5
   11f84:	mov	r0, #20
   11f88:	pop	{r4, r5, r6, lr}
   11f8c:	b	11470 <g_slice_free1@plt>
   11f90:	ldr	r0, [r4]
   11f94:	bl	1138c <g_free@plt>
   11f98:	mov	r1, r4
   11f9c:	mov	r0, #24
   11fa0:	bl	11470 <g_slice_free1@plt>
   11fa4:	mov	r1, r5
   11fa8:	mov	r0, #20
   11fac:	pop	{r4, r5, r6, lr}
   11fb0:	b	11470 <g_slice_free1@plt>
   11fb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fb8:	sub	sp, sp, #84	; 0x54
   11fbc:	ldr	r5, [pc, #2576]	; 129d4 <g_slist_free@plt+0x1504>
   11fc0:	ldr	r3, [r0]
   11fc4:	mov	r6, r2
   11fc8:	ldr	r1, [r5]
   11fcc:	mov	r2, #0
   11fd0:	sub	r3, r3, #17
   11fd4:	mov	r4, r0
   11fd8:	str	r1, [sp, #76]	; 0x4c
   11fdc:	str	r2, [sp, #40]	; 0x28
   11fe0:	cmp	r3, #14
   11fe4:	ldrls	pc, [pc, r3, lsl #2]
   11fe8:	b	1205c <g_slist_free@plt+0xb8c>
   11fec:	strdeq	r2, [r1], -r4
   11ff0:	andeq	r2, r1, ip, asr r0
   11ff4:	andeq	r2, r1, ip, asr r0
   11ff8:	andeq	r2, r1, ip, asr r0
   11ffc:	andeq	r2, r1, ip, asr r0
   12000:	andeq	r2, r1, ip, asr r0
   12004:	andeq	r2, r1, ip, asr r0
   12008:	andeq	r2, r1, ip, asr r0
   1200c:	andeq	r2, r1, ip, asr r0
   12010:	andeq	r2, r1, ip, asr r0
   12014:	andeq	r2, r1, ip, asr r0
   12018:	andeq	r2, r1, r0, asr r1
   1201c:	andeq	r2, r1, r8, lsr #32
   12020:	andeq	r2, r1, r4, lsr r2
   12024:	andeq	r2, r1, r8, ror r0
   12028:	ldr	r3, [r6, #12]
   1202c:	ldr	r1, [r0, #16]
   12030:	ldr	r2, [r3, #8]
   12034:	cmp	r1, r2
   12038:	bne	1205c <g_slist_free@plt+0xb8c>
   1203c:	ldr	r7, [pc, #2452]	; 129d8 <g_slist_free@plt+0x1508>
   12040:	ldr	r2, [r0, #20]
   12044:	ldr	r1, [r7, #40]	; 0x28
   12048:	cmp	r2, r1
   1204c:	beq	124ac <g_slist_free@plt+0xfdc>
   12050:	ldr	r1, [r7, #36]	; 0x24
   12054:	cmp	r2, r1
   12058:	beq	12464 <g_slist_free@plt+0xf94>
   1205c:	mov	r0, #0
   12060:	ldr	r2, [sp, #76]	; 0x4c
   12064:	ldr	r3, [r5]
   12068:	cmp	r2, r3
   1206c:	bne	12948 <g_slist_free@plt+0x1478>
   12070:	add	sp, sp, #84	; 0x54
   12074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12078:	ldr	r3, [r6, #12]
   1207c:	ldr	r1, [r0, #16]
   12080:	ldr	r2, [r3, #8]
   12084:	cmp	r1, r2
   12088:	bne	1205c <g_slist_free@plt+0xb8c>
   1208c:	ldr	r7, [pc, #2372]	; 129d8 <g_slist_free@plt+0x1508>
   12090:	ldr	r0, [r0, #20]
   12094:	ldr	r2, [r7, #36]	; 0x24
   12098:	cmp	r0, r2
   1209c:	bne	1205c <g_slist_free@plt+0xb8c>
   120a0:	ldr	r8, [r4, #28]
   120a4:	ldr	r2, [r7, #12]
   120a8:	cmp	r8, r2
   120ac:	beq	125a4 <g_slist_free@plt+0x10d4>
   120b0:	ldr	r2, [r7, #16]
   120b4:	cmp	r8, r2
   120b8:	beq	12788 <g_slist_free@plt+0x12b8>
   120bc:	cmp	r8, #0
   120c0:	bne	12438 <g_slist_free@plt+0xf68>
   120c4:	mov	r1, r8
   120c8:	mov	r0, r6
   120cc:	bl	11ae8 <g_slist_free@plt+0x618>
   120d0:	ldr	r3, [r6, #12]
   120d4:	mov	r0, r6
   120d8:	mov	r2, r8
   120dc:	ldr	r1, [r3, #24]
   120e0:	bl	11ed4 <g_slist_free@plt+0xa04>
   120e4:	ldr	r3, [r6, #12]
   120e8:	mov	r0, #2
   120ec:	str	r8, [r3, #24]
   120f0:	b	12060 <g_slist_free@plt+0xb90>
   120f4:	ldr	r3, [r6, #12]
   120f8:	ldr	r1, [r0, #20]
   120fc:	ldr	r2, [r3, #24]
   12100:	cmp	r1, r2
   12104:	bne	1205c <g_slist_free@plt+0xb8c>
   12108:	ldr	r0, [r3, #16]
   1210c:	mov	r2, #0
   12110:	ldr	r1, [pc, #2244]	; 129dc <g_slist_free@plt+0x150c>
   12114:	bl	1141c <g_slist_foreach@plt>
   12118:	ldr	r3, [r6, #12]
   1211c:	mov	r4, #0
   12120:	ldr	r0, [r3, #16]
   12124:	bl	114d0 <g_slist_free@plt>
   12128:	ldr	r3, [r6, #12]
   1212c:	mov	r0, r6
   12130:	mov	r2, r4
   12134:	str	r4, [r3, #16]
   12138:	ldr	r1, [r3, #24]
   1213c:	bl	11ed4 <g_slist_free@plt+0xa04>
   12140:	ldr	r3, [r6, #12]
   12144:	mov	r0, r4
   12148:	str	r4, [r3, #24]
   1214c:	b	12060 <g_slist_free@plt+0xb90>
   12150:	ldr	r7, [r0, #28]
   12154:	ldr	r2, [r6, #12]
   12158:	cmp	r7, #0
   1215c:	bne	1238c <g_slist_free@plt+0xebc>
   12160:	ldr	r1, [r0, #16]
   12164:	ldr	r3, [r2, #8]
   12168:	cmp	r1, r3
   1216c:	bne	1205c <g_slist_free@plt+0xb8c>
   12170:	ldr	r0, [r2, #16]
   12174:	add	r1, r4, #20
   12178:	ldr	r2, [pc, #2144]	; 129e0 <g_slist_free@plt+0x1510>
   1217c:	bl	11428 <g_slist_find_custom@plt>
   12180:	cmp	r0, #0
   12184:	beq	1205c <g_slist_free@plt+0xb8c>
   12188:	ldr	r8, [r0]
   1218c:	ldr	r3, [pc, #2116]	; 129d8 <g_slist_free@plt+0x1508>
   12190:	ldr	r2, [r8, #12]
   12194:	ldr	r3, [r3, #8]
   12198:	cmp	r2, r3
   1219c:	bne	1205c <g_slist_free@plt+0xb8c>
   121a0:	add	r0, sp, #56	; 0x38
   121a4:	str	r0, [sp, #24]
   121a8:	add	r2, sp, #60	; 0x3c
   121ac:	add	r0, sp, #44	; 0x2c
   121b0:	str	r2, [sp, #28]
   121b4:	str	r0, [sp, #12]
   121b8:	add	r1, sp, #52	; 0x34
   121bc:	add	r2, sp, #48	; 0x30
   121c0:	add	r0, r4, #12
   121c4:	str	r1, [sp, #20]
   121c8:	str	r2, [sp, #16]
   121cc:	mov	r1, #1
   121d0:	mvn	r2, #-536870912	; 0xe0000000
   121d4:	str	r7, [sp, #8]
   121d8:	mov	r3, r7
   121dc:	str	r1, [sp, #4]
   121e0:	str	r2, [sp]
   121e4:	ldm	r0, {r0, r1, r2}
   121e8:	bl	1126c <XGetWindowProperty@plt>
   121ec:	ldr	r2, [sp, #48]	; 0x30
   121f0:	sub	r3, r2, #8
   121f4:	cmp	r3, #24
   121f8:	bls	1253c <g_slist_free@plt+0x106c>
   121fc:	ldr	r1, [r6, #12]
   12200:	ldr	r3, [sp, #44]	; 0x2c
   12204:	str	r2, [r8, #16]
   12208:	ldr	r0, [r1, #16]
   1220c:	ldr	r2, [pc, #2000]	; 129e4 <g_slist_free@plt+0x1514>
   12210:	str	r3, [r8, #12]
   12214:	ldr	r1, [pc, #1996]	; 129e8 <g_slist_free@plt+0x1518>
   12218:	bl	11428 <g_slist_find_custom@plt>
   1221c:	subs	r4, r0, #0
   12220:	beq	12930 <g_slist_free@plt+0x1460>
   12224:	ldr	r0, [sp, #60]	; 0x3c
   12228:	bl	113bc <XFree@plt>
   1222c:	mov	r0, #2
   12230:	b	12060 <g_slist_free@plt+0xb90>
   12234:	ldr	r3, [r6, #12]
   12238:	ldr	r1, [r0, #16]
   1223c:	ldr	r2, [r3, #8]
   12240:	cmp	r1, r2
   12244:	bne	1205c <g_slist_free@plt+0xb8c>
   12248:	ldr	r7, [pc, #1928]	; 129d8 <g_slist_free@plt+0x1508>
   1224c:	ldr	r2, [r0, #24]
   12250:	ldr	r1, [r7, #40]	; 0x28
   12254:	cmp	r2, r1
   12258:	beq	124f4 <g_slist_free@plt+0x1024>
   1225c:	ldr	r3, [r7, #36]	; 0x24
   12260:	cmp	r2, r3
   12264:	bne	1205c <g_slist_free@plt+0xb8c>
   12268:	ldr	r2, [r0, #28]
   1226c:	ldr	r3, [r7, #16]
   12270:	mov	r8, #0
   12274:	cmp	r2, r3
   12278:	str	r8, [sp, #44]	; 0x2c
   1227c:	beq	126b8 <g_slist_free@plt+0x11e8>
   12280:	mov	r0, #20
   12284:	str	r8, [sp, #60]	; 0x3c
   12288:	bl	113e0 <g_slice_alloc@plt>
   1228c:	ldr	r1, [r4, #20]
   12290:	ldr	r2, [r4, #28]
   12294:	mov	r3, r0
   12298:	str	r8, [r0, #4]
   1229c:	str	r1, [r3, #12]
   122a0:	ldr	r1, [r4, #32]
   122a4:	str	r2, [r3]
   122a8:	mvn	r2, #0
   122ac:	mov	r0, r8
   122b0:	str	r1, [r3, #8]
   122b4:	str	r2, [r3, #16]
   122b8:	mov	r1, r3
   122bc:	bl	11278 <g_slist_prepend@plt>
   122c0:	mov	r8, r0
   122c4:	mov	r2, r6
   122c8:	ldr	r1, [pc, #1820]	; 129ec <g_slist_free@plt+0x151c>
   122cc:	mov	r0, r8
   122d0:	bl	1141c <g_slist_foreach@plt>
   122d4:	ldr	r2, [r8, #4]
   122d8:	cmp	r2, #0
   122dc:	beq	12814 <g_slist_free@plt+0x1344>
   122e0:	ldr	ip, [sp, #60]	; 0x3c
   122e4:	cmp	ip, #0
   122e8:	beq	12354 <g_slist_free@plt+0xe84>
   122ec:	mov	r1, r8
   122f0:	mov	r3, #0
   122f4:	sub	lr, ip, #4
   122f8:	b	12304 <g_slist_free@plt+0xe34>
   122fc:	mov	r1, r2
   12300:	ldr	r2, [r2, #4]
   12304:	ldr	r1, [r1]
   12308:	cmp	r2, #0
   1230c:	ldr	r0, [r1]
   12310:	str	r0, [ip, r3, lsl #2]
   12314:	add	r3, r3, #2
   12318:	ldr	r1, [r1, #8]
   1231c:	str	r1, [lr, r3, lsl #2]
   12320:	bne	122fc <g_slist_free@plt+0xe2c>
   12324:	ldr	r0, [sp, #52]	; 0x34
   12328:	mov	r1, #0
   1232c:	mov	r2, #32
   12330:	str	ip, [sp, #8]
   12334:	ldr	r3, [r7, #32]
   12338:	str	r0, [sp, #12]
   1233c:	str	r1, [sp, #4]
   12340:	str	r2, [sp]
   12344:	ldr	r2, [r4, #32]
   12348:	ldr	r1, [r4, #20]
   1234c:	ldr	r0, [r4, #12]
   12350:	bl	11314 <XChangeProperty@plt>
   12354:	mov	r1, r4
   12358:	mov	r2, #1
   1235c:	mov	r0, r6
   12360:	bl	11bb0 <g_slist_free@plt+0x6e0>
   12364:	mov	r2, r6
   12368:	ldr	r1, [pc, #1664]	; 129f0 <g_slist_free@plt+0x1520>
   1236c:	mov	r0, r8
   12370:	bl	1141c <g_slist_foreach@plt>
   12374:	mov	r0, r8
   12378:	bl	114d0 <g_slist_free@plt>
   1237c:	ldr	r0, [sp, #60]	; 0x3c
   12380:	bl	1138c <g_free@plt>
   12384:	mov	r0, #2
   12388:	b	12060 <g_slist_free@plt+0xb90>
   1238c:	mov	r1, r0
   12390:	ldr	r0, [r2, #20]
   12394:	ldr	r2, [pc, #1624]	; 129f4 <g_slist_free@plt+0x1524>
   12398:	bl	11428 <g_slist_find_custom@plt>
   1239c:	cmp	r0, #0
   123a0:	beq	1205c <g_slist_free@plt+0xb8c>
   123a4:	ldr	r8, [r0]
   123a8:	ldr	r1, [pc, #1576]	; 129d8 <g_slist_free@plt+0x1508>
   123ac:	mov	r4, #2
   123b0:	ldr	r3, [r8, #4]
   123b4:	ldr	r2, [r8, #16]
   123b8:	ldr	r1, [r1, #48]	; 0x30
   123bc:	ldr	r7, [r3, #4]
   123c0:	ldr	r9, [r3, #16]
   123c4:	sub	r7, r7, r2
   123c8:	cmp	r7, r1
   123cc:	movcs	r7, r1
   123d0:	add	r1, r2, r7
   123d4:	ldr	sl, [r3]
   123d8:	str	r1, [r8, #16]
   123dc:	sub	r1, r9, #8
   123e0:	cmp	r1, #24
   123e4:	add	sl, sl, r2
   123e8:	ldrls	r2, [pc, #1544]	; 129f8 <g_slist_free@plt+0x1528>
   123ec:	ldr	r3, [r3, #12]
   123f0:	movhi	r1, #0
   123f4:	ldrls	r1, [r2, r1, lsl #2]
   123f8:	ldr	r2, [r6, #12]
   123fc:	mov	r0, r7
   12400:	str	r3, [sp, #36]	; 0x24
   12404:	ldr	fp, [r2, #4]
   12408:	bl	12ff0 <g_slist_free@plt+0x1b20>
   1240c:	ldr	r2, [r8, #8]
   12410:	ldr	r1, [r8, #12]
   12414:	ldr	r3, [sp, #36]	; 0x24
   12418:	str	sl, [sp, #8]
   1241c:	str	r9, [sp]
   12420:	str	r4, [sp, #4]
   12424:	str	r0, [sp, #12]
   12428:	mov	r0, fp
   1242c:	bl	11314 <XChangeProperty@plt>
   12430:	cmp	r7, #0
   12434:	beq	12440 <g_slist_free@plt+0xf70>
   12438:	mov	r0, #2
   1243c:	b	12060 <g_slist_free@plt+0xb90>
   12440:	ldr	r6, [r6, #12]
   12444:	mov	r1, r8
   12448:	ldr	r0, [r6, #20]
   1244c:	bl	11398 <g_slist_remove@plt>
   12450:	str	r0, [r6, #20]
   12454:	mov	r0, r8
   12458:	bl	11f58 <g_slist_free@plt+0xa88>
   1245c:	mov	r0, r4
   12460:	b	12060 <g_slist_free@plt+0xb90>
   12464:	ldr	r0, [r3, #16]
   12468:	mov	r2, #0
   1246c:	ldr	r1, [pc, #1384]	; 129dc <g_slist_free@plt+0x150c>
   12470:	bl	1141c <g_slist_foreach@plt>
   12474:	ldr	r3, [r6, #12]
   12478:	mov	r4, #0
   1247c:	ldr	r0, [r3, #16]
   12480:	bl	114d0 <g_slist_free@plt>
   12484:	ldr	r3, [r6, #12]
   12488:	mov	r2, r4
   1248c:	mov	r0, r6
   12490:	str	r4, [r3, #16]
   12494:	ldr	r1, [r3, #24]
   12498:	bl	11ed4 <g_slist_free@plt+0xa04>
   1249c:	ldr	r3, [r6, #12]
   124a0:	mov	r0, #2
   124a4:	str	r4, [r3, #24]
   124a8:	b	12060 <g_slist_free@plt+0xb90>
   124ac:	ldr	r0, [r3, #16]
   124b0:	cmp	r0, #0
   124b4:	beq	12438 <g_slist_free@plt+0xf68>
   124b8:	mov	r2, #0
   124bc:	ldr	r1, [pc, #1304]	; 129dc <g_slist_free@plt+0x150c>
   124c0:	bl	1141c <g_slist_foreach@plt>
   124c4:	ldr	r3, [r6, #12]
   124c8:	ldr	r0, [r3, #16]
   124cc:	bl	114d0 <g_slist_free@plt>
   124d0:	ldr	r0, [r6, #12]
   124d4:	mov	r2, #0
   124d8:	ldr	r1, [r7, #36]	; 0x24
   124dc:	str	r2, [r0, #16]
   124e0:	ldr	r3, [r0, #32]
   124e4:	ldr	r0, [r0, #4]
   124e8:	bl	11350 <XSetSelectionOwner@plt>
   124ec:	mov	r0, #2
   124f0:	b	12060 <g_slist_free@plt+0xb90>
   124f4:	ldr	r1, [r0, #28]
   124f8:	ldr	ip, [r7, #44]	; 0x2c
   124fc:	mov	r2, #0
   12500:	cmp	r1, ip
   12504:	str	r2, [sp, #44]	; 0x2c
   12508:	str	r2, [sp, #60]	; 0x3c
   1250c:	beq	12608 <g_slist_free@plt+0x1138>
   12510:	ldr	lr, [r7, #56]	; 0x38
   12514:	cmp	r1, lr
   12518:	beq	128a8 <g_slist_free@plt+0x13d8>
   1251c:	ldr	r0, [r7, #12]
   12520:	cmp	r1, r0
   12524:	beq	12858 <g_slist_free@plt+0x1388>
   12528:	mov	r1, r4
   1252c:	mov	r0, r6
   12530:	mov	r2, #0
   12534:	bl	11bb0 <g_slist_free@plt+0x6e0>
   12538:	b	12438 <g_slist_free@plt+0xf68>
   1253c:	ldr	r1, [pc, #1204]	; 129f8 <g_slist_free@plt+0x1528>
   12540:	ldr	r4, [sp, #52]	; 0x34
   12544:	ldr	r3, [r1, r3, lsl #2]
   12548:	mul	r4, r4, r3
   1254c:	cmp	r4, #0
   12550:	beq	121fc <g_slist_free@plt+0xd2c>
   12554:	ldr	r0, [r8]
   12558:	cmp	r0, #0
   1255c:	beq	12804 <g_slist_free@plt+0x1334>
   12560:	ldr	r1, [r8, #4]
   12564:	add	r6, r4, #1
   12568:	add	r1, r6, r1
   1256c:	bl	11434 <g_realloc@plt>
   12570:	ldr	r3, [r8, #4]
   12574:	mov	r2, r6
   12578:	str	r0, [r8]
   1257c:	ldr	r1, [sp, #60]	; 0x3c
   12580:	add	r0, r0, r3
   12584:	bl	113ec <memcpy@plt>
   12588:	ldr	r3, [r8, #4]
   1258c:	ldr	r0, [sp, #60]	; 0x3c
   12590:	add	r4, r3, r4
   12594:	str	r4, [r8, #4]
   12598:	bl	113bc <XFree@plt>
   1259c:	mov	r0, #2
   125a0:	b	12060 <g_slist_free@plt+0xb90>
   125a4:	add	ip, sp, #40	; 0x28
   125a8:	add	r3, sp, #60	; 0x3c
   125ac:	ldr	r0, [r4, #12]
   125b0:	str	ip, [sp, #28]
   125b4:	str	r3, [sp, #24]
   125b8:	add	ip, sp, #56	; 0x38
   125bc:	add	r3, sp, #52	; 0x34
   125c0:	str	ip, [sp, #20]
   125c4:	str	r3, [sp, #16]
   125c8:	add	ip, sp, #48	; 0x30
   125cc:	mov	r3, #4
   125d0:	str	ip, [sp, #12]
   125d4:	str	r3, [sp, #8]
   125d8:	mov	ip, #1
   125dc:	mvn	r3, #-536870912	; 0xe0000000
   125e0:	mov	r2, r8
   125e4:	stm	sp, {r3, ip}
   125e8:	mov	r3, #0
   125ec:	bl	1126c <XGetWindowProperty@plt>
   125f0:	mov	r0, r6
   125f4:	ldr	r2, [sp, #56]	; 0x38
   125f8:	ldr	r1, [sp, #40]	; 0x28
   125fc:	bl	11984 <g_slist_free@plt+0x4b4>
   12600:	mov	r0, #2
   12604:	b	12060 <g_slist_free@plt+0xb90>
   12608:	ldr	r2, [r3, #24]
   1260c:	cmp	r2, #0
   12610:	bne	12528 <g_slist_free@plt+0x1058>
   12614:	ldr	r8, [r3, #16]
   12618:	cmp	r8, #0
   1261c:	bne	12528 <g_slist_free@plt+0x1058>
   12620:	bl	112d8 <gdk_error_trap_push@plt>
   12624:	mov	r2, #1
   12628:	ldr	r1, [r4, #20]
   1262c:	mov	r0, r6
   12630:	bl	11ed4 <g_slist_free@plt+0xa04>
   12634:	ldr	r3, [r6, #12]
   12638:	mov	r2, #131072	; 0x20000
   1263c:	ldr	r1, [r4, #20]
   12640:	ldr	r0, [r3, #4]
   12644:	bl	112cc <XSelectInput@plt>
   12648:	ldr	r3, [r6, #12]
   1264c:	mov	r1, r8
   12650:	ldr	r0, [r3, #4]
   12654:	bl	114ac <XSync@plt>
   12658:	bl	1123c <gdk_error_trap_pop@plt>
   1265c:	subs	r8, r0, #0
   12660:	bne	12438 <g_slist_free@plt+0xf68>
   12664:	bl	112d8 <gdk_error_trap_push@plt>
   12668:	ldr	r2, [r4, #32]
   1266c:	cmp	r2, #0
   12670:	bne	12960 <g_slist_free@plt+0x1490>
   12674:	ldr	r0, [r6, #12]
   12678:	ldr	r3, [r4, #36]	; 0x24
   1267c:	ldr	r1, [r4, #20]
   12680:	strd	r2, [r0, #28]
   12684:	str	r1, [r0, #24]
   12688:	ldr	r2, [sp, #44]	; 0x2c
   1268c:	cmp	r2, #0
   12690:	bne	1294c <g_slist_free@plt+0x147c>
   12694:	str	r3, [sp, #4]
   12698:	ldr	r3, [r7, #12]
   1269c:	ldr	r2, [r0, #8]
   126a0:	ldr	r1, [r7, #36]	; 0x24
   126a4:	str	r2, [sp]
   126a8:	mov	r2, r3
   126ac:	ldr	r0, [r0, #4]
   126b0:	bl	111f4 <XConvertSelection@plt>
   126b4:	b	12438 <g_slist_free@plt+0xf68>
   126b8:	ldr	r2, [r7, #32]
   126bc:	add	r3, sp, #60	; 0x3c
   126c0:	str	r2, [sp, #8]
   126c4:	str	r3, [sp, #28]
   126c8:	add	ip, sp, #56	; 0x38
   126cc:	add	r0, sp, #52	; 0x34
   126d0:	add	r1, sp, #48	; 0x30
   126d4:	add	r2, sp, #44	; 0x2c
   126d8:	mvn	r3, #-536870912	; 0xe0000000
   126dc:	str	r3, [sp]
   126e0:	str	r8, [sp, #4]
   126e4:	str	ip, [sp, #24]
   126e8:	str	r0, [sp, #20]
   126ec:	str	r1, [sp, #16]
   126f0:	str	r2, [sp, #12]
   126f4:	mov	r3, r8
   126f8:	ldr	r2, [r4, #32]
   126fc:	ldr	r1, [r4, #20]
   12700:	ldr	r0, [r4, #12]
   12704:	bl	1126c <XGetWindowProperty@plt>
   12708:	ldr	r2, [sp, #44]	; 0x2c
   1270c:	ldr	r3, [r7, #32]
   12710:	cmp	r2, r3
   12714:	bne	12844 <g_slist_free@plt+0x1374>
   12718:	ldr	r3, [sp, #52]	; 0x34
   1271c:	cmp	r3, r8
   12720:	beq	12844 <g_slist_free@plt+0x1374>
   12724:	mov	sl, r8
   12728:	mov	r9, r8
   1272c:	mov	fp, r8
   12730:	mov	r0, #20
   12734:	bl	113e0 <g_slice_alloc@plt>
   12738:	ldr	r1, [sp, #60]	; 0x3c
   1273c:	ldr	ip, [r4, #20]
   12740:	mvn	r2, #0
   12744:	add	r9, r9, #2
   12748:	mov	r3, r0
   1274c:	mov	r0, r8
   12750:	str	ip, [r3, #12]
   12754:	ldr	ip, [r1, sl]!
   12758:	add	sl, sl, #8
   1275c:	str	ip, [r3]
   12760:	ldr	ip, [r1, #4]
   12764:	mov	r1, r3
   12768:	str	r2, [r3, #16]
   1276c:	stmib	r3, {fp, ip}
   12770:	bl	11278 <g_slist_prepend@plt>
   12774:	ldr	r3, [sp, #52]	; 0x34
   12778:	cmp	r9, r3
   1277c:	mov	r8, r0
   12780:	bcc	12730 <g_slist_free@plt+0x1260>
   12784:	b	122c4 <g_slist_free@plt+0xdf4>
   12788:	ldr	r0, [r3, #16]
   1278c:	bl	111dc <g_slist_copy@plt>
   12790:	mov	r2, r6
   12794:	ldr	r1, [pc, #608]	; 129fc <g_slist_free@plt+0x152c>
   12798:	mov	r8, r0
   1279c:	bl	1141c <g_slist_foreach@plt>
   127a0:	mov	r0, r8
   127a4:	bl	114d0 <g_slist_free@plt>
   127a8:	ldr	r0, [r6, #12]
   127ac:	ldr	r3, [r4, #32]
   127b0:	ldr	r1, [r7, #36]	; 0x24
   127b4:	str	r3, [r0, #32]
   127b8:	ldmib	r0, {r0, r2}
   127bc:	bl	11350 <XSetSelectionOwner@plt>
   127c0:	ldr	r0, [r6, #12]
   127c4:	ldr	r2, [r0, #28]
   127c8:	cmp	r2, #0
   127cc:	bne	128e8 <g_slist_free@plt+0x1418>
   127d0:	ldr	r0, [r0, #16]
   127d4:	ldr	r2, [pc, #520]	; 129e4 <g_slist_free@plt+0x1514>
   127d8:	ldr	r1, [pc, #520]	; 129e8 <g_slist_free@plt+0x1518>
   127dc:	bl	11428 <g_slist_find_custom@plt>
   127e0:	subs	r4, r0, #0
   127e4:	bne	12438 <g_slist_free@plt+0xf68>
   127e8:	mov	r0, r6
   127ec:	mov	r1, #1
   127f0:	bl	11ae8 <g_slist_free@plt+0x618>
   127f4:	ldr	r3, [r6, #12]
   127f8:	mov	r2, r4
   127fc:	mov	r0, r6
   12800:	b	12494 <g_slist_free@plt+0xfc4>
   12804:	ldr	r3, [sp, #60]	; 0x3c
   12808:	mov	r0, #2
   1280c:	stm	r8, {r3, r4}
   12810:	b	12060 <g_slist_free@plt+0xb90>
   12814:	ldr	r3, [r8]
   12818:	ldr	r2, [r3, #8]
   1281c:	cmp	r2, #0
   12820:	beq	12920 <g_slist_free@plt+0x1450>
   12824:	ldr	ip, [sp, #60]	; 0x3c
   12828:	cmp	ip, #0
   1282c:	beq	12354 <g_slist_free@plt+0xe84>
   12830:	ldr	r2, [r3]
   12834:	str	r2, [ip]
   12838:	ldr	r3, [r3, #8]
   1283c:	str	r3, [ip, #4]
   12840:	b	12324 <g_slist_free@plt+0xe54>
   12844:	ldr	r0, [sp, #60]	; 0x3c
   12848:	cmp	r0, #0
   1284c:	beq	12438 <g_slist_free@plt+0xf68>
   12850:	bl	1138c <g_free@plt>
   12854:	b	12438 <g_slist_free@plt+0xf68>
   12858:	ldr	r0, [r3, #4]
   1285c:	mov	r3, #3
   12860:	str	r2, [sp, #4]
   12864:	str	r3, [sp, #12]
   12868:	add	r2, sp, #64	; 0x40
   1286c:	mov	r3, #32
   12870:	str	r3, [sp]
   12874:	str	r2, [sp, #8]
   12878:	str	r1, [sp, #64]	; 0x40
   1287c:	ldr	r2, [r4, #32]
   12880:	ldr	r1, [r4, #20]
   12884:	mov	r3, #4
   12888:	str	lr, [sp, #68]	; 0x44
   1288c:	str	ip, [sp, #72]	; 0x48
   12890:	bl	11314 <XChangeProperty@plt>
   12894:	mov	r1, r4
   12898:	mov	r0, r6
   1289c:	mov	r2, #1
   128a0:	bl	11bb0 <g_slist_free@plt+0x6e0>
   128a4:	b	12438 <g_slist_free@plt+0xf68>
   128a8:	ldr	r0, [r3, #4]
   128ac:	add	r3, r3, #12
   128b0:	mov	r7, #1
   128b4:	mov	r1, #32
   128b8:	strd	r2, [sp, #4]
   128bc:	str	r7, [sp, #12]
   128c0:	str	r1, [sp]
   128c4:	mov	r3, #19
   128c8:	ldr	r2, [r4, #32]
   128cc:	ldr	r1, [r4, #20]
   128d0:	bl	11314 <XChangeProperty@plt>
   128d4:	mov	r2, r7
   128d8:	mov	r1, r4
   128dc:	mov	r0, r6
   128e0:	bl	11bb0 <g_slist_free@plt+0x6e0>
   128e4:	b	12438 <g_slist_free@plt+0xf68>
   128e8:	mov	ip, #1
   128ec:	mov	r1, #0
   128f0:	mov	r3, #32
   128f4:	add	r7, r7, #52	; 0x34
   128f8:	str	r3, [sp]
   128fc:	str	r7, [sp, #8]
   12900:	str	ip, [sp, #12]
   12904:	str	r1, [sp, #4]
   12908:	mov	r3, #4
   1290c:	ldr	r1, [r0, #24]
   12910:	ldr	r0, [r0, #4]
   12914:	bl	11314 <XChangeProperty@plt>
   12918:	ldr	r0, [r6, #12]
   1291c:	b	127d0 <g_slist_free@plt+0x1300>
   12920:	mov	r1, r4
   12924:	mov	r0, r6
   12928:	bl	11bb0 <g_slist_free@plt+0x6e0>
   1292c:	b	12364 <g_slist_free@plt+0xe94>
   12930:	mov	r1, #1
   12934:	mov	r0, r6
   12938:	bl	11ae8 <g_slist_free@plt+0x618>
   1293c:	ldr	r3, [r6, #12]
   12940:	str	r4, [r3, #24]
   12944:	b	12224 <g_slist_free@plt+0xd54>
   12948:	bl	11368 <__stack_chk_fail@plt>
   1294c:	mov	r0, r6
   12950:	ldr	r2, [sp, #52]	; 0x34
   12954:	ldr	r1, [sp, #60]	; 0x3c
   12958:	bl	11984 <g_slist_free@plt+0x4b4>
   1295c:	b	12438 <g_slist_free@plt+0xf68>
   12960:	add	r1, sp, #60	; 0x3c
   12964:	ldr	r0, [r6, #12]
   12968:	add	ip, sp, #56	; 0x38
   1296c:	str	r1, [sp, #28]
   12970:	add	r1, sp, #52	; 0x34
   12974:	str	ip, [sp, #24]
   12978:	str	r1, [sp, #20]
   1297c:	add	ip, sp, #48	; 0x30
   12980:	add	r1, sp, #44	; 0x2c
   12984:	str	ip, [sp, #16]
   12988:	str	r1, [sp, #12]
   1298c:	mov	ip, #4
   12990:	mvn	r1, #-536870912	; 0xe0000000
   12994:	str	ip, [sp, #8]
   12998:	str	r8, [sp, #4]
   1299c:	str	r1, [sp]
   129a0:	mov	r3, r8
   129a4:	ldr	r1, [r4, #20]
   129a8:	ldr	r0, [r0, #4]
   129ac:	bl	1126c <XGetWindowProperty@plt>
   129b0:	bl	1123c <gdk_error_trap_pop@plt>
   129b4:	cmp	r0, #0
   129b8:	ldreq	r2, [r4, #32]
   129bc:	beq	12674 <g_slist_free@plt+0x11a4>
   129c0:	ldr	r0, [sp, #60]	; 0x3c
   129c4:	cmp	r0, #0
   129c8:	beq	12438 <g_slist_free@plt+0xf68>
   129cc:	bl	113bc <XFree@plt>
   129d0:	b	12438 <g_slist_free@plt+0xf68>
   129d4:	andeq	r3, r2, r0, ror sp
   129d8:	andeq	r4, r2, r0, lsl r0
   129dc:	andeq	r2, r1, r0, lsr sl
   129e0:	andeq	r1, r1, r4, asr #14
   129e4:	andeq	r1, r1, r8, asr r7
   129e8:	andeq	r4, r2, r8, lsl r0
   129ec:	andeq	r1, r1, r8, ror #24
   129f0:	andeq	r2, r1, r0, lsl #20
   129f4:	andeq	r1, r1, ip, ror #14
   129f8:	andeq	r3, r1, ip, lsl #6
   129fc:	andeq	r1, r1, r0, ror r8
   12a00:	ldr	r2, [r0, #16]
   12a04:	cmp	r2, #0
   12a08:	blt	12a2c <g_slist_free@plt+0x155c>
   12a0c:	mov	r2, r1
   12a10:	push	{r4, lr}
   12a14:	mov	r1, r0
   12a18:	ldr	r4, [r2, #12]
   12a1c:	ldr	r0, [r4, #20]
   12a20:	bl	11278 <g_slist_prepend@plt>
   12a24:	str	r0, [r4, #20]
   12a28:	pop	{r4, pc}
   12a2c:	b	11f58 <g_slist_free@plt+0xa88>
   12a30:	ldr	r3, [r0, #20]
   12a34:	sub	r3, r3, #1
   12a38:	cmp	r3, #0
   12a3c:	str	r3, [r0, #20]
   12a40:	bxne	lr
   12a44:	push	{r4, lr}
   12a48:	mov	r4, r0
   12a4c:	ldr	r0, [r0]
   12a50:	bl	1138c <g_free@plt>
   12a54:	mov	r1, r4
   12a58:	mov	r0, #24
   12a5c:	pop	{r4, lr}
   12a60:	b	11470 <g_slice_free1@plt>
   12a64:	push	{r4, lr}
   12a68:	mcr	15, 0, r0, cr7, cr10, {5}
   12a6c:	ldr	r4, [pc, #60]	; 12ab0 <g_slist_free@plt+0x15e0>
   12a70:	ldr	r3, [r4, #60]	; 0x3c
   12a74:	mcr	15, 0, r0, cr7, cr10, {5}
   12a78:	cmp	r3, #0
   12a7c:	beq	12a88 <g_slist_free@plt+0x15b8>
   12a80:	ldr	r0, [r4, #60]	; 0x3c
   12a84:	pop	{r4, pc}
   12a88:	add	r0, r4, #60	; 0x3c
   12a8c:	bl	11338 <g_once_init_enter@plt>
   12a90:	cmp	r0, #0
   12a94:	beq	12a80 <g_slist_free@plt+0x15b0>
   12a98:	bl	11798 <g_slist_free@plt+0x2c8>
   12a9c:	mov	r1, r0
   12aa0:	add	r0, r4, #60	; 0x3c
   12aa4:	bl	11404 <g_once_init_leave@plt>
   12aa8:	ldr	r0, [r4, #60]	; 0x3c
   12aac:	pop	{r4, pc}
   12ab0:	andeq	r4, r2, r0, lsl r0
   12ab4:	push	{r4, lr}
   12ab8:	mov	r4, r0
   12abc:	bl	12a64 <g_slist_free@plt+0x1594>
   12ac0:	mov	r1, r0
   12ac4:	mov	r0, r4
   12ac8:	bl	1132c <g_type_instance_get_private@plt>
   12acc:	str	r0, [r4, #12]
   12ad0:	bl	11320 <gdk_display_get_default@plt>
   12ad4:	ldr	r4, [r4, #12]
   12ad8:	bl	114b8 <gdk_x11_display_get_xdisplay@plt>
   12adc:	str	r0, [r4, #4]
   12ae0:	pop	{r4, pc}
   12ae4:	push	{r4, r5, r6, lr}
   12ae8:	sub	sp, sp, #120	; 0x78
   12aec:	ldr	r4, [pc, #132]	; 12b78 <g_slist_free@plt+0x16a8>
   12af0:	mov	r6, r1
   12af4:	mov	r3, #97	; 0x61
   12af8:	ldr	ip, [r4]
   12afc:	mov	r2, #0
   12b00:	ldr	r1, [pc, #116]	; 12b7c <g_slist_free@plt+0x16ac>
   12b04:	mov	r5, r0
   12b08:	str	ip, [sp, #116]	; 0x74
   12b0c:	strb	r3, [sp, #19]
   12b10:	bl	112e4 <XInternAtom@plt>
   12b14:	mov	lr, #1
   12b18:	add	ip, sp, #19
   12b1c:	str	lr, [sp, #12]
   12b20:	str	ip, [sp, #8]
   12b24:	mov	lr, #0
   12b28:	mov	ip, #8
   12b2c:	mov	r1, r6
   12b30:	stm	sp, {ip, lr}
   12b34:	mov	r3, r0
   12b38:	mov	r2, r0
   12b3c:	mov	r0, r5
   12b40:	bl	11314 <XChangeProperty@plt>
   12b44:	mov	r3, r6
   12b48:	ldr	r2, [pc, #48]	; 12b80 <g_slist_free@plt+0x16b0>
   12b4c:	mov	r0, r5
   12b50:	add	r1, sp, #20
   12b54:	bl	112c0 <XIfEvent@plt>
   12b58:	ldr	r2, [sp, #116]	; 0x74
   12b5c:	ldr	r3, [r4]
   12b60:	ldr	r0, [sp, #44]	; 0x2c
   12b64:	cmp	r2, r3
   12b68:	bne	12b74 <g_slist_free@plt+0x16a4>
   12b6c:	add	sp, sp, #120	; 0x78
   12b70:	pop	{r4, r5, r6, pc}
   12b74:	bl	11368 <__stack_chk_fail@plt>
   12b78:	andeq	r3, r2, r0, ror sp
   12b7c:	andeq	r3, r1, r4, lsl #7
   12b80:	andeq	r1, r1, r8, lsl #29
   12b84:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12b88:	sub	sp, sp, #80	; 0x50
   12b8c:	ldr	r5, [pc, #756]	; 12e88 <g_slist_free@plt+0x19b8>
   12b90:	ldr	sl, [pc, #756]	; 12e8c <g_slist_free@plt+0x19bc>
   12b94:	ldr	r8, [r0, #12]
   12b98:	ldr	r7, [r5, #48]	; 0x30
   12b9c:	ldr	r3, [sl]
   12ba0:	cmp	r7, #0
   12ba4:	mov	r6, r0
   12ba8:	mov	r9, r1
   12bac:	ldr	r4, [r8, #4]
   12bb0:	str	r3, [sp, #76]	; 0x4c
   12bb4:	beq	12cd8 <g_slist_free@plt+0x1808>
   12bb8:	cmp	r9, #0
   12bbc:	bne	12be0 <g_slist_free@plt+0x1710>
   12bc0:	mov	r0, r4
   12bc4:	ldr	r1, [r5, #40]	; 0x28
   12bc8:	bl	114a0 <XGetSelectionOwner@plt>
   12bcc:	cmp	r0, #0
   12bd0:	movne	r0, r9
   12bd4:	bne	12cc0 <g_slist_free@plt+0x17f0>
   12bd8:	ldr	r8, [r6, #12]
   12bdc:	ldr	r4, [r8, #4]
   12be0:	ldr	r2, [r4, #132]	; 0x84
   12be4:	ldr	r3, [r4, #140]	; 0x8c
   12be8:	mov	ip, #10
   12bec:	add	r2, r2, r2, lsl #2
   12bf0:	mov	r7, #0
   12bf4:	add	r3, r3, r2, lsl #4
   12bf8:	mov	r0, r4
   12bfc:	ldr	r2, [r3, #52]	; 0x34
   12c00:	ldr	r1, [r3, #8]
   12c04:	str	r7, [r8, #16]
   12c08:	str	r7, [r8, #20]
   12c0c:	str	r7, [r8, #24]
   12c10:	mov	r3, r7
   12c14:	str	ip, [sp, #4]
   12c18:	str	ip, [sp]
   12c1c:	str	r2, [sp, #16]
   12c20:	str	r2, [sp, #12]
   12c24:	str	r7, [sp, #8]
   12c28:	mov	r2, r7
   12c2c:	bl	11284 <XCreateSimpleWindow@plt>
   12c30:	ldr	r3, [r6, #12]
   12c34:	mov	r2, #1
   12c38:	str	r0, [r8, #8]
   12c3c:	mov	r0, r6
   12c40:	ldr	r1, [r3, #8]
   12c44:	bl	11ed4 <g_slist_free@plt+0xa04>
   12c48:	ldr	r3, [r6, #12]
   12c4c:	mov	r2, #4194304	; 0x400000
   12c50:	ldrd	r0, [r3, #4]
   12c54:	bl	112cc <XSelectInput@plt>
   12c58:	ldr	r4, [r6, #12]
   12c5c:	ldrd	r0, [r4, #4]
   12c60:	bl	12ae4 <g_slist_free@plt+0x1614>
   12c64:	ldr	r3, [r6, #12]
   12c68:	ldr	r1, [r5, #40]	; 0x28
   12c6c:	ldr	r2, [r3, #8]
   12c70:	str	r0, [r4, #12]
   12c74:	ldr	r0, [r3, #4]
   12c78:	ldr	r3, [r3, #12]
   12c7c:	bl	11350 <XSetSelectionOwner@plt>
   12c80:	ldr	r3, [r6, #12]
   12c84:	ldr	r1, [r5, #40]	; 0x28
   12c88:	ldr	r0, [r3, #4]
   12c8c:	bl	114a0 <XGetSelectionOwner@plt>
   12c90:	ldr	r3, [r6, #12]
   12c94:	ldr	r1, [r3, #8]
   12c98:	cmp	r0, r1
   12c9c:	mov	ip, r0
   12ca0:	beq	12e0c <g_slist_free@plt+0x193c>
   12ca4:	mov	r2, r7
   12ca8:	mov	r0, r6
   12cac:	bl	11ed4 <g_slist_free@plt+0xa04>
   12cb0:	ldr	r3, [r6, #12]
   12cb4:	mov	r0, #1
   12cb8:	mov	r2, #0
   12cbc:	str	r2, [r3]
   12cc0:	ldr	r2, [sp, #76]	; 0x4c
   12cc4:	ldr	r3, [sl]
   12cc8:	cmp	r2, r3
   12ccc:	bne	12e84 <g_slist_free@plt+0x19b4>
   12cd0:	add	sp, sp, #80	; 0x50
   12cd4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12cd8:	mov	r2, r7
   12cdc:	ldr	r1, [pc, #428]	; 12e90 <g_slist_free@plt+0x19c0>
   12ce0:	mov	r0, r4
   12ce4:	bl	112e4 <XInternAtom@plt>
   12ce8:	mov	r2, r7
   12cec:	ldr	r1, [pc, #416]	; 12e94 <g_slist_free@plt+0x19c4>
   12cf0:	str	r0, [r5, #32]
   12cf4:	mov	r0, r4
   12cf8:	bl	112e4 <XInternAtom@plt>
   12cfc:	mov	r2, r7
   12d00:	ldr	r1, [pc, #400]	; 12e98 <g_slist_free@plt+0x19c8>
   12d04:	str	r0, [r5, #40]	; 0x28
   12d08:	mov	r0, r4
   12d0c:	bl	112e4 <XInternAtom@plt>
   12d10:	mov	r2, r7
   12d14:	ldr	r1, [pc, #384]	; 12e9c <g_slist_free@plt+0x19cc>
   12d18:	str	r0, [r5, #36]	; 0x24
   12d1c:	mov	r0, r4
   12d20:	bl	112e4 <XInternAtom@plt>
   12d24:	mov	r2, r7
   12d28:	ldr	r1, [pc, #368]	; 12ea0 <g_slist_free@plt+0x19d0>
   12d2c:	str	r0, [r5, #20]
   12d30:	mov	r0, r4
   12d34:	bl	112e4 <XInternAtom@plt>
   12d38:	mov	r2, r7
   12d3c:	ldr	r1, [pc, #352]	; 12ea4 <g_slist_free@plt+0x19d4>
   12d40:	str	r0, [r5, #8]
   12d44:	mov	r0, r4
   12d48:	bl	112e4 <XInternAtom@plt>
   12d4c:	mov	r2, r7
   12d50:	ldr	r1, [pc, #336]	; 12ea8 <g_slist_free@plt+0x19d8>
   12d54:	str	r0, [r5, #24]
   12d58:	mov	r0, r4
   12d5c:	bl	112e4 <XInternAtom@plt>
   12d60:	mov	r2, r7
   12d64:	ldr	r1, [pc, #320]	; 12eac <g_slist_free@plt+0x19dc>
   12d68:	str	r0, [r5, #28]
   12d6c:	mov	r0, r4
   12d70:	bl	112e4 <XInternAtom@plt>
   12d74:	mov	r2, r7
   12d78:	ldr	r1, [pc, #304]	; 12eb0 <g_slist_free@plt+0x19e0>
   12d7c:	str	r0, [r5, #64]	; 0x40
   12d80:	mov	r0, r4
   12d84:	bl	112e4 <XInternAtom@plt>
   12d88:	mov	r2, r7
   12d8c:	ldr	r1, [pc, #288]	; 12eb4 <g_slist_free@plt+0x19e4>
   12d90:	str	r0, [r5, #16]
   12d94:	mov	r0, r4
   12d98:	bl	112e4 <XInternAtom@plt>
   12d9c:	mov	r2, r7
   12da0:	ldr	r1, [pc, #272]	; 12eb8 <g_slist_free@plt+0x19e8>
   12da4:	str	r0, [r5, #52]	; 0x34
   12da8:	mov	r0, r4
   12dac:	bl	112e4 <XInternAtom@plt>
   12db0:	mov	r2, r7
   12db4:	ldr	r1, [pc, #256]	; 12ebc <g_slist_free@plt+0x19ec>
   12db8:	str	r0, [r5, #44]	; 0x2c
   12dbc:	mov	r0, r4
   12dc0:	bl	112e4 <XInternAtom@plt>
   12dc4:	mov	r2, r7
   12dc8:	ldr	r1, [pc, #240]	; 12ec0 <g_slist_free@plt+0x19f0>
   12dcc:	str	r0, [r5, #12]
   12dd0:	mov	r0, r4
   12dd4:	bl	112e4 <XInternAtom@plt>
   12dd8:	str	r0, [r5, #56]	; 0x38
   12ddc:	mov	r0, r4
   12de0:	bl	113a4 <XExtendedMaxRequestSize@plt>
   12de4:	cmp	r0, #0
   12de8:	beq	12e78 <g_slist_free@plt+0x19a8>
   12dec:	sub	r0, r0, #100	; 0x64
   12df0:	ldr	r8, [r6, #12]
   12df4:	cmp	r0, #262144	; 0x40000
   12df8:	movhi	r3, #262144	; 0x40000
   12dfc:	str	r0, [r5, #48]	; 0x30
   12e00:	ldr	r4, [r8, #4]
   12e04:	strhi	r3, [r5, #48]	; 0x30
   12e08:	b	12bb8 <g_slist_free@plt+0x16e8>
   12e0c:	ldr	r0, [r3, #4]
   12e10:	ldr	r8, [r3, #12]
   12e14:	ldr	lr, [r5, #64]	; 0x40
   12e18:	ldr	r3, [r0, #132]	; 0x84
   12e1c:	ldr	r2, [r0, #140]	; 0x8c
   12e20:	ldr	r4, [r5, #40]	; 0x28
   12e24:	add	r3, r3, r3, lsl #2
   12e28:	mov	r5, #33	; 0x21
   12e2c:	add	r3, r2, r3, lsl #4
   12e30:	add	r2, sp, #28
   12e34:	ldr	r3, [r3, #8]
   12e38:	str	r2, [sp]
   12e3c:	mov	r1, r3
   12e40:	str	r3, [sp, #44]	; 0x2c
   12e44:	str	ip, [sp, #64]	; 0x40
   12e48:	mov	r2, r7
   12e4c:	mov	ip, #32
   12e50:	mov	r3, #131072	; 0x20000
   12e54:	str	r8, [sp, #56]	; 0x38
   12e58:	str	r7, [sp, #68]	; 0x44
   12e5c:	str	r7, [sp, #72]	; 0x48
   12e60:	str	lr, [sp, #48]	; 0x30
   12e64:	str	r4, [sp, #60]	; 0x3c
   12e68:	str	r5, [sp, #28]
   12e6c:	str	ip, [sp, #52]	; 0x34
   12e70:	bl	11260 <XSendEvent@plt>
   12e74:	b	12cb0 <g_slist_free@plt+0x17e0>
   12e78:	mov	r0, r4
   12e7c:	bl	11440 <XMaxRequestSize@plt>
   12e80:	b	12dec <g_slist_free@plt+0x191c>
   12e84:	bl	11368 <__stack_chk_fail@plt>
   12e88:	andeq	r4, r2, r0, lsl r0
   12e8c:	andeq	r3, r2, r0, ror sp
   12e90:	muleq	r1, r4, r3
   12e94:	andeq	r3, r1, r0, lsr #7
   12e98:			; <UNDEFINED> instruction: 0x000133b4
   12e9c:	andeq	r3, r1, r0, asr #7
   12ea0:	andeq	r3, r1, r8, asr #7
   12ea4:	ldrdeq	r3, [r1], -r0
   12ea8:	andeq	r3, r1, r0, ror #7
   12eac:	strdeq	r3, [r1], -r4
   12eb0:	strdeq	r3, [r1], -ip
   12eb4:	andeq	r3, r1, r8, lsl #8
   12eb8:	andeq	r3, r1, r0, lsl r4
   12ebc:	andeq	r3, r1, r0, lsr #8
   12ec0:	andeq	r3, r1, r8, lsr #8
   12ec4:	ldr	r3, [r0, #12]
   12ec8:	push	{r4, lr}
   12ecc:	mov	r4, r0
   12ed0:	ldr	r1, [r3, #8]
   12ed4:	cmp	r1, #0
   12ed8:	bne	12f40 <g_slist_free@plt+0x1a70>
   12edc:	ldr	r0, [r3, #20]
   12ee0:	cmp	r0, #0
   12ee4:	beq	12f0c <g_slist_free@plt+0x1a3c>
   12ee8:	mov	r2, #0
   12eec:	ldr	r1, [pc, #112]	; 12f64 <g_slist_free@plt+0x1a94>
   12ef0:	bl	1141c <g_slist_foreach@plt>
   12ef4:	ldr	r3, [r4, #12]
   12ef8:	ldr	r0, [r3, #20]
   12efc:	bl	114d0 <g_slist_free@plt>
   12f00:	ldr	r3, [r4, #12]
   12f04:	mov	r2, #0
   12f08:	str	r2, [r3, #20]
   12f0c:	ldr	r0, [r3, #16]
   12f10:	cmp	r0, #0
   12f14:	popeq	{r4, pc}
   12f18:	mov	r2, #0
   12f1c:	ldr	r1, [pc, #68]	; 12f68 <g_slist_free@plt+0x1a98>
   12f20:	bl	1141c <g_slist_foreach@plt>
   12f24:	ldr	r3, [r4, #12]
   12f28:	ldr	r0, [r3, #16]
   12f2c:	bl	114d0 <g_slist_free@plt>
   12f30:	ldr	r3, [r4, #12]
   12f34:	mov	r2, #0
   12f38:	str	r2, [r3, #16]
   12f3c:	pop	{r4, pc}
   12f40:	mov	r2, #0
   12f44:	bl	11ed4 <g_slist_free@plt+0xa04>
   12f48:	ldr	r3, [r4, #12]
   12f4c:	ldrd	r0, [r3, #4]
   12f50:	bl	11410 <XDestroyWindow@plt>
   12f54:	ldr	r3, [r4, #12]
   12f58:	mov	r2, #0
   12f5c:	str	r2, [r3, #8]
   12f60:	b	12edc <g_slist_free@plt+0x1a0c>
   12f64:	andeq	r1, r1, r8, asr pc
   12f68:	andeq	r2, r1, r0, lsr sl
   12f6c:	push	{r4, r5, r6, lr}
   12f70:	ldr	r0, [pc, #68]	; 12fbc <g_slist_free@plt+0x1aec>
   12f74:	bl	11380 <g_getenv@plt>
   12f78:	subs	r4, r0, #0
   12f7c:	popne	{r4, r5, r6, pc}
   12f80:	bl	12a64 <g_slist_free@plt+0x1594>
   12f84:	mov	r1, r4
   12f88:	bl	111e8 <g_object_new@plt>
   12f8c:	ldr	r5, [pc, #44]	; 12fc0 <g_slist_free@plt+0x1af0>
   12f90:	mov	r1, r4
   12f94:	str	r0, [r5, #68]	; 0x44
   12f98:	bl	12b84 <g_slist_free@plt+0x16b4>
   12f9c:	subs	r4, r0, #0
   12fa0:	popne	{r4, r5, r6, pc}
   12fa4:	ldr	r0, [r5, #68]	; 0x44
   12fa8:	bl	113f8 <g_object_unref@plt>
   12fac:	str	r4, [r5, #68]	; 0x44
   12fb0:	ldr	r0, [pc, #12]	; 12fc4 <g_slist_free@plt+0x1af4>
   12fb4:	pop	{r4, r5, r6, lr}
   12fb8:	b	11290 <g_printerr@plt>
   12fbc:	andeq	r3, r1, r4, lsr r4
   12fc0:	andeq	r4, r2, r0, lsl r0
   12fc4:	andeq	r3, r1, r0, asr r4
   12fc8:	push	{r4, lr}
   12fcc:	ldr	r4, [pc, #24]	; 12fec <g_slist_free@plt+0x1b1c>
   12fd0:	ldr	r0, [r4, #68]	; 0x44
   12fd4:	cmp	r0, #0
   12fd8:	popeq	{r4, pc}
   12fdc:	bl	12ec4 <g_slist_free@plt+0x19f4>
   12fe0:	ldr	r0, [r4, #68]	; 0x44
   12fe4:	pop	{r4, lr}
   12fe8:	b	113f8 <g_object_unref@plt>
   12fec:	andeq	r4, r2, r0, lsl r0
   12ff0:	subs	r2, r1, #1
   12ff4:	bxeq	lr
   12ff8:	bcc	131d0 <g_slist_free@plt+0x1d00>
   12ffc:	cmp	r0, r1
   13000:	bls	131b4 <g_slist_free@plt+0x1ce4>
   13004:	tst	r1, r2
   13008:	beq	131c0 <g_slist_free@plt+0x1cf0>
   1300c:	clz	r3, r0
   13010:	clz	r2, r1
   13014:	sub	r3, r2, r3
   13018:	rsbs	r3, r3, #31
   1301c:	addne	r3, r3, r3, lsl #1
   13020:	mov	r2, #0
   13024:	addne	pc, pc, r3, lsl #2
   13028:	nop			; (mov r0, r0)
   1302c:	cmp	r0, r1, lsl #31
   13030:	adc	r2, r2, r2
   13034:	subcs	r0, r0, r1, lsl #31
   13038:	cmp	r0, r1, lsl #30
   1303c:	adc	r2, r2, r2
   13040:	subcs	r0, r0, r1, lsl #30
   13044:	cmp	r0, r1, lsl #29
   13048:	adc	r2, r2, r2
   1304c:	subcs	r0, r0, r1, lsl #29
   13050:	cmp	r0, r1, lsl #28
   13054:	adc	r2, r2, r2
   13058:	subcs	r0, r0, r1, lsl #28
   1305c:	cmp	r0, r1, lsl #27
   13060:	adc	r2, r2, r2
   13064:	subcs	r0, r0, r1, lsl #27
   13068:	cmp	r0, r1, lsl #26
   1306c:	adc	r2, r2, r2
   13070:	subcs	r0, r0, r1, lsl #26
   13074:	cmp	r0, r1, lsl #25
   13078:	adc	r2, r2, r2
   1307c:	subcs	r0, r0, r1, lsl #25
   13080:	cmp	r0, r1, lsl #24
   13084:	adc	r2, r2, r2
   13088:	subcs	r0, r0, r1, lsl #24
   1308c:	cmp	r0, r1, lsl #23
   13090:	adc	r2, r2, r2
   13094:	subcs	r0, r0, r1, lsl #23
   13098:	cmp	r0, r1, lsl #22
   1309c:	adc	r2, r2, r2
   130a0:	subcs	r0, r0, r1, lsl #22
   130a4:	cmp	r0, r1, lsl #21
   130a8:	adc	r2, r2, r2
   130ac:	subcs	r0, r0, r1, lsl #21
   130b0:	cmp	r0, r1, lsl #20
   130b4:	adc	r2, r2, r2
   130b8:	subcs	r0, r0, r1, lsl #20
   130bc:	cmp	r0, r1, lsl #19
   130c0:	adc	r2, r2, r2
   130c4:	subcs	r0, r0, r1, lsl #19
   130c8:	cmp	r0, r1, lsl #18
   130cc:	adc	r2, r2, r2
   130d0:	subcs	r0, r0, r1, lsl #18
   130d4:	cmp	r0, r1, lsl #17
   130d8:	adc	r2, r2, r2
   130dc:	subcs	r0, r0, r1, lsl #17
   130e0:	cmp	r0, r1, lsl #16
   130e4:	adc	r2, r2, r2
   130e8:	subcs	r0, r0, r1, lsl #16
   130ec:	cmp	r0, r1, lsl #15
   130f0:	adc	r2, r2, r2
   130f4:	subcs	r0, r0, r1, lsl #15
   130f8:	cmp	r0, r1, lsl #14
   130fc:	adc	r2, r2, r2
   13100:	subcs	r0, r0, r1, lsl #14
   13104:	cmp	r0, r1, lsl #13
   13108:	adc	r2, r2, r2
   1310c:	subcs	r0, r0, r1, lsl #13
   13110:	cmp	r0, r1, lsl #12
   13114:	adc	r2, r2, r2
   13118:	subcs	r0, r0, r1, lsl #12
   1311c:	cmp	r0, r1, lsl #11
   13120:	adc	r2, r2, r2
   13124:	subcs	r0, r0, r1, lsl #11
   13128:	cmp	r0, r1, lsl #10
   1312c:	adc	r2, r2, r2
   13130:	subcs	r0, r0, r1, lsl #10
   13134:	cmp	r0, r1, lsl #9
   13138:	adc	r2, r2, r2
   1313c:	subcs	r0, r0, r1, lsl #9
   13140:	cmp	r0, r1, lsl #8
   13144:	adc	r2, r2, r2
   13148:	subcs	r0, r0, r1, lsl #8
   1314c:	cmp	r0, r1, lsl #7
   13150:	adc	r2, r2, r2
   13154:	subcs	r0, r0, r1, lsl #7
   13158:	cmp	r0, r1, lsl #6
   1315c:	adc	r2, r2, r2
   13160:	subcs	r0, r0, r1, lsl #6
   13164:	cmp	r0, r1, lsl #5
   13168:	adc	r2, r2, r2
   1316c:	subcs	r0, r0, r1, lsl #5
   13170:	cmp	r0, r1, lsl #4
   13174:	adc	r2, r2, r2
   13178:	subcs	r0, r0, r1, lsl #4
   1317c:	cmp	r0, r1, lsl #3
   13180:	adc	r2, r2, r2
   13184:	subcs	r0, r0, r1, lsl #3
   13188:	cmp	r0, r1, lsl #2
   1318c:	adc	r2, r2, r2
   13190:	subcs	r0, r0, r1, lsl #2
   13194:	cmp	r0, r1, lsl #1
   13198:	adc	r2, r2, r2
   1319c:	subcs	r0, r0, r1, lsl #1
   131a0:	cmp	r0, r1
   131a4:	adc	r2, r2, r2
   131a8:	subcs	r0, r0, r1
   131ac:	mov	r0, r2
   131b0:	bx	lr
   131b4:	moveq	r0, #1
   131b8:	movne	r0, #0
   131bc:	bx	lr
   131c0:	clz	r2, r1
   131c4:	rsb	r2, r2, #31
   131c8:	lsr	r0, r0, r2
   131cc:	bx	lr
   131d0:	cmp	r0, #0
   131d4:	mvnne	r0, #0
   131d8:	b	131fc <g_slist_free@plt+0x1d2c>
   131dc:	cmp	r1, #0
   131e0:	beq	131d0 <g_slist_free@plt+0x1d00>
   131e4:	push	{r0, r1, lr}
   131e8:	bl	12ff0 <g_slist_free@plt+0x1b20>
   131ec:	pop	{r1, r2, lr}
   131f0:	mul	r3, r2, r0
   131f4:	sub	r1, r1, r3
   131f8:	bx	lr
   131fc:	push	{r1, lr}
   13200:	mov	r0, #8
   13204:	bl	113d4 <raise@plt>
   13208:	pop	{r1, pc}
   1320c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13210:	mov	r7, r0
   13214:	ldr	r6, [pc, #72]	; 13264 <g_slist_free@plt+0x1d94>
   13218:	ldr	r5, [pc, #72]	; 13268 <g_slist_free@plt+0x1d98>
   1321c:	add	r6, pc, r6
   13220:	add	r5, pc, r5
   13224:	sub	r6, r6, r5
   13228:	mov	r8, r1
   1322c:	mov	r9, r2
   13230:	bl	111bc <g_slist_copy@plt-0x20>
   13234:	asrs	r6, r6, #2
   13238:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1323c:	mov	r4, #0
   13240:	add	r4, r4, #1
   13244:	ldr	r3, [r5], #4
   13248:	mov	r2, r9
   1324c:	mov	r1, r8
   13250:	mov	r0, r7
   13254:	blx	r3
   13258:	cmp	r6, r4
   1325c:	bne	13240 <g_slist_free@plt+0x1d70>
   13260:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13264:	andeq	r0, r1, r8, asr #22
   13268:	andeq	r0, r1, r0, asr #22
   1326c:	bx	lr

Disassembly of section .fini:

00013270 <.fini>:
   13270:	push	{r3, lr}
   13274:	pop	{r3, pc}
