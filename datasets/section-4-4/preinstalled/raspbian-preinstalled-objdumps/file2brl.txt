
raspbian-preinstalled/file2brl:     file format elf32-littlearm


Disassembly of section .init:

00010b54 <.init>:
   10b54:	push	{r3, lr}
   10b58:	bl	11778 <__printf_chk@plt+0xa84>
   10b5c:	pop	{r3, pc}

Disassembly of section .plt:

00010b60 <free@plt-0x14>:
   10b60:	push	{lr}		; (str lr, [sp, #-4]!)
   10b64:	ldr	lr, [pc, #4]	; 10b70 <free@plt-0x4>
   10b68:	add	lr, pc, lr
   10b6c:	ldr	pc, [lr, #8]!
   10b70:	ldrdeq	r2, [r1], -ip

00010b74 <free@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #73728	; 0x12000
   10b7c:	ldr	pc, [ip, #988]!	; 0x3dc

00010b80 <logMessage@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #73728	; 0x12000
   10b88:	ldr	pc, [ip, #980]!	; 0x3d4

00010b8c <strncmp@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #73728	; 0x12000
   10b94:	ldr	pc, [ip, #972]!	; 0x3cc

00010b98 <fgetc@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #73728	; 0x12000
   10ba0:	ldr	pc, [ip, #964]!	; 0x3c4

00010ba4 <exit@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #73728	; 0x12000
   10bac:	ldr	pc, [ip, #956]!	; 0x3bc

00010bb0 <stpcpy@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #73728	; 0x12000
   10bb8:	ldr	pc, [ip, #948]!	; 0x3b4

00010bbc <lbu_translateFile@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #73728	; 0x12000
   10bc4:	ldr	pc, [ip, #940]!	; 0x3ac

00010bc8 <lbu_translateTextFile@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #73728	; 0x12000
   10bd0:	ldr	pc, [ip, #932]!	; 0x3a4

00010bd4 <__fprintf_chk@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #73728	; 0x12000
   10bdc:	ldr	pc, [ip, #924]!	; 0x39c

00010be0 <putchar@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #73728	; 0x12000
   10be8:	ldr	pc, [ip, #916]!	; 0x394

00010bec <fopen@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #73728	; 0x12000
   10bf4:	ldr	pc, [ip, #908]!	; 0x38c

00010bf8 <lbu_free@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #73728	; 0x12000
   10c00:	ldr	pc, [ip, #900]!	; 0x384

00010c04 <abort@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #73728	; 0x12000
   10c0c:	ldr	pc, [ip, #892]!	; 0x37c

00010c10 <lbu_initialize@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #73728	; 0x12000
   10c18:	ldr	pc, [ip, #884]!	; 0x374

00010c1c <lbu_backTranslateFile@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #73728	; 0x12000
   10c24:	ldr	pc, [ip, #876]!	; 0x36c

00010c28 <ungetc@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #73728	; 0x12000
   10c30:	ldr	pc, [ip, #868]!	; 0x364

00010c34 <__stack_chk_fail@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #73728	; 0x12000
   10c3c:	ldr	pc, [ip, #860]!	; 0x35c

00010c40 <getopt_long@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #73728	; 0x12000
   10c48:	ldr	pc, [ip, #852]!	; 0x354

00010c4c <lou_setLogLevel@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #73728	; 0x12000
   10c54:	ldr	pc, [ip, #844]!	; 0x34c

00010c58 <fputc@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #73728	; 0x12000
   10c60:	ldr	pc, [ip, #836]!	; 0x344

00010c64 <fwrite@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #73728	; 0x12000
   10c6c:	ldr	pc, [ip, #828]!	; 0x33c

00010c70 <malloc@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #73728	; 0x12000
   10c78:	ldr	pc, [ip, #820]!	; 0x334

00010c7c <strlen@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #73728	; 0x12000
   10c84:	ldr	pc, [ip, #812]!	; 0x32c

00010c88 <lbu_setLogLevel@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #73728	; 0x12000
   10c90:	ldr	pc, [ip, #804]!	; 0x324

00010c94 <fclose@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #73728	; 0x12000
   10c9c:	ldr	pc, [ip, #796]!	; 0x31c

00010ca0 <__stpcpy_chk@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #73728	; 0x12000
   10ca8:	ldr	pc, [ip, #788]!	; 0x314

00010cac <lbu_getWriteablePath@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #73728	; 0x12000
   10cb4:	ldr	pc, [ip, #780]!	; 0x30c

00010cb8 <strcmp@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #73728	; 0x12000
   10cc0:	ldr	pc, [ip, #772]!	; 0x304

00010cc4 <strrchr@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #73728	; 0x12000
   10ccc:	ldr	pc, [ip, #764]!	; 0x2fc

00010cd0 <__libc_start_main@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #73728	; 0x12000
   10cd8:	ldr	pc, [ip, #756]!	; 0x2f4

00010cdc <__gmon_start__@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #73728	; 0x12000
   10ce4:	ldr	pc, [ip, #748]!	; 0x2ec

00010ce8 <lbu_setWriteablePath@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #73728	; 0x12000
   10cf0:	ldr	pc, [ip, #740]!	; 0x2e4

00010cf4 <__printf_chk@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #73728	; 0x12000
   10cfc:	ldr	pc, [ip, #732]!	; 0x2dc

Disassembly of section .text:

00010d00 <.text>:
   10d00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d04:	sub	sp, sp, #3120	; 0xc30
   10d08:	ldr	fp, [pc, #2460]	; 116ac <__printf_chk@plt+0x9b8>
   10d0c:	sub	sp, sp, #4
   10d10:	mov	r5, r1
   10d14:	ldr	r3, [fp]
   10d18:	mov	r6, r0
   10d1c:	ldr	r0, [pc, #2444]	; 116b0 <__printf_chk@plt+0x9bc>
   10d20:	str	r3, [sp, #3116]	; 0xc2c
   10d24:	bl	10c88 <lbu_setLogLevel@plt>
   10d28:	ldr	r0, [pc, #2432]	; 116b0 <__printf_chk@plt+0x9bc>
   10d2c:	bl	10c4c <lou_setLogLevel@plt>
   10d30:	ldr	r0, [r5]
   10d34:	bl	1182c <__printf_chk@plt+0xb38>
   10d38:	ldr	r8, [pc, #2420]	; 116b4 <__printf_chk@plt+0x9c0>
   10d3c:	mov	r3, #0
   10d40:	ldr	r7, [pc, #2416]	; 116b8 <__printf_chk@plt+0x9c4>
   10d44:	ldr	sl, [pc, #2416]	; 116bc <__printf_chk@plt+0x9c8>
   10d48:	mov	r4, r3
   10d4c:	mov	r9, r3
   10d50:	strb	r3, [sp, #1068]	; 0x42c
   10d54:	str	r3, [sp, #8]
   10d58:	str	r3, [sp, #12]
   10d5c:	mov	r3, #0
   10d60:	str	r3, [sp]
   10d64:	mov	r2, r7
   10d68:	mov	r3, r8
   10d6c:	mov	r1, r5
   10d70:	mov	r0, r6
   10d74:	bl	10c40 <getopt_long@plt>
   10d78:	cmn	r0, #1
   10d7c:	beq	10fb4 <__printf_chk@plt+0x2c0>
   10d80:	sub	r3, r0, #48	; 0x30
   10d84:	cmp	r3, #71	; 0x47
   10d88:	ldrls	pc, [pc, r3, lsl #2]
   10d8c:	b	11458 <__printf_chk@plt+0x764>
   10d90:	andeq	r0, r1, ip, lsr #31
   10d94:	andeq	r1, r1, r8, asr r4
   10d98:	andeq	r1, r1, r8, asr r4
   10d9c:	andeq	r1, r1, r8, asr r4
   10da0:	andeq	r1, r1, r8, asr r4
   10da4:	andeq	r1, r1, r8, asr r4
   10da8:	andeq	r1, r1, r8, asr r4
   10dac:	andeq	r1, r1, r8, asr r4
   10db0:	andeq	r1, r1, r8, asr r4
   10db4:	andeq	r1, r1, r8, asr r4
   10db8:	andeq	r1, r1, r8, asr r4
   10dbc:	andeq	r1, r1, r8, asr r4
   10dc0:	andeq	r1, r1, r8, asr r4
   10dc4:	andeq	r1, r1, r8, asr r4
   10dc8:	andeq	r1, r1, r8, asr r4
   10dcc:	andeq	r1, r1, r8, asr r4
   10dd0:	andeq	r1, r1, r8, asr r4
   10dd4:	andeq	r1, r1, r8, asr r4
   10dd8:	andeq	r1, r1, r8, asr r4
   10ddc:	andeq	r0, r1, r0, lsl #31
   10de0:	andeq	r1, r1, r8, asr r4
   10de4:	andeq	r1, r1, r8, asr r4
   10de8:	andeq	r1, r1, r8, asr r4
   10dec:	andeq	r1, r1, r8, asr r4
   10df0:	andeq	r1, r1, r8, asr r4
   10df4:	andeq	r1, r1, r8, asr r4
   10df8:	andeq	r1, r1, r8, asr r4
   10dfc:	andeq	r1, r1, r8, asr r4
   10e00:	andeq	r1, r1, r8, asr r4
   10e04:	andeq	r1, r1, r8, asr r4
   10e08:	andeq	r1, r1, r8, asr r4
   10e0c:	andeq	r1, r1, r8, asr r4
   10e10:	andeq	r0, r1, ip, lsr #31
   10e14:	andeq	r1, r1, r8, asr r4
   10e18:	andeq	r1, r1, r8, asr r4
   10e1c:	andeq	r1, r1, r8, asr r4
   10e20:	andeq	r0, r1, ip, lsr #31
   10e24:	andeq	r1, r1, r8, asr r4
   10e28:	andeq	r1, r1, r8, asr r4
   10e2c:	andeq	r1, r1, r8, asr r4
   10e30:	andeq	r1, r1, r8, asr r4
   10e34:	andeq	r1, r1, r8, asr r4
   10e38:	andeq	r1, r1, r8, asr r4
   10e3c:	andeq	r1, r1, r8, asr r4
   10e40:	andeq	r1, r1, r8, asr r4
   10e44:	andeq	r1, r1, r8, asr r4
   10e48:	andeq	r1, r1, r8, asr r4
   10e4c:	andeq	r1, r1, r8, asr r4
   10e50:	andeq	r1, r1, r8, asr r4
   10e54:	andeq	r1, r1, r8, asr r4
   10e58:	andeq	r0, r1, ip, lsr #31
   10e5c:	andeq	r1, r1, r8, asr r4
   10e60:	andeq	r1, r1, r8, asr r4
   10e64:	andeq	r1, r1, r8, asr r4
   10e68:	andeq	r0, r1, r4, ror pc
   10e6c:	andeq	r1, r1, r8, asr r4
   10e70:	andeq	r0, r1, r4, lsl pc
   10e74:	andeq	r1, r1, r8, asr r4
   10e78:	andeq	r1, r1, r8, asr r4
   10e7c:	andeq	r1, r1, r8, asr r4
   10e80:	strdeq	r0, [r1], -r8
   10e84:	andeq	r1, r1, r8, asr r4
   10e88:	andeq	r1, r1, r8, asr r4
   10e8c:	andeq	r1, r1, r8, asr r4
   10e90:	andeq	r0, r1, ip, lsr #31
   10e94:	andeq	r1, r1, r8, asr r4
   10e98:	andeq	r0, r1, ip, lsr #31
   10e9c:	andeq	r1, r1, r8, asr r4
   10ea0:	andeq	r0, r1, ip, ror #29
   10ea4:	andeq	r1, r1, r8, asr r4
   10ea8:			; <UNDEFINED> instruction: 0x00010ebc
   10eac:			; <UNDEFINED> instruction: 0x00010eb0
   10eb0:	ldr	r0, [sl]
   10eb4:	bl	10ce8 <lbu_setWriteablePath@plt>
   10eb8:	b	10d5c <__printf_chk@plt+0x68>
   10ebc:	ldr	r2, [pc, #2044]	; 116c0 <__printf_chk@plt+0x9cc>
   10ec0:	ldr	r3, [pc, #2044]	; 116c4 <__printf_chk@plt+0x9d0>
   10ec4:	ldr	r1, [pc, #2044]	; 116c8 <__printf_chk@plt+0x9d4>
   10ec8:	mov	r4, #0
   10ecc:	ldr	r0, [r2]
   10ed0:	ldr	r1, [r1]
   10ed4:	ldr	r2, [pc, #2032]	; 116cc <__printf_chk@plt+0x9d8>
   10ed8:	stm	sp, {r3, r4}
   10edc:	ldr	r3, [pc, #2028]	; 116d0 <__printf_chk@plt+0x9dc>
   10ee0:	bl	11d58 <__printf_chk@plt+0x1064>
   10ee4:	mov	r0, r4
   10ee8:	bl	10ba4 <exit@plt>
   10eec:	mov	r3, #536870912	; 0x20000000
   10ef0:	str	r3, [sp, #12]
   10ef4:	b	10d5c <__printf_chk@plt+0x68>
   10ef8:	ldr	r3, [pc, #2004]	; 116d4 <__printf_chk@plt+0x9e0>
   10efc:	add	ip, sp, #1056	; 0x420
   10f00:	add	ip, ip, #12
   10f04:	ldm	r3, {r0, r1, r2, r3}
   10f08:	stmia	ip!, {r0, r1, r2}
   10f0c:	strb	r3, [ip]
   10f10:	b	10d5c <__printf_chk@plt+0x68>
   10f14:	ldr	r3, [pc, #1964]	; 116c8 <__printf_chk@plt+0x9d4>
   10f18:	ldr	r4, [pc, #1952]	; 116c0 <__printf_chk@plt+0x9cc>
   10f1c:	ldr	r1, [pc, #1972]	; 116d8 <__printf_chk@plt+0x9e4>
   10f20:	ldr	r2, [r3]
   10f24:	mov	r0, #1
   10f28:	bl	10cf4 <__printf_chk@plt>
   10f2c:	ldr	r3, [r4]
   10f30:	mov	r2, #376	; 0x178
   10f34:	mov	r1, #1
   10f38:	ldr	r0, [pc, #1948]	; 116dc <__printf_chk@plt+0x9e8>
   10f3c:	bl	10c64 <fwrite@plt>
   10f40:	ldr	r3, [r4]
   10f44:	ldr	r2, [pc, #1940]	; 116e0 <__printf_chk@plt+0x9ec>
   10f48:	mov	r1, #1
   10f4c:	ldr	r0, [pc, #1936]	; 116e4 <__printf_chk@plt+0x9f0>
   10f50:	bl	10c64 <fwrite@plt>
   10f54:	mov	r0, #10
   10f58:	bl	10be0 <putchar@plt>
   10f5c:	ldr	r2, [pc, #1924]	; 116e8 <__printf_chk@plt+0x9f4>
   10f60:	ldr	r1, [pc, #1924]	; 116ec <__printf_chk@plt+0x9f8>
   10f64:	mov	r0, #1
   10f68:	bl	10cf4 <__printf_chk@plt>
   10f6c:	mov	r0, #0
   10f70:	bl	10ba4 <exit@plt>
   10f74:	ldr	r3, [sl]
   10f78:	str	r3, [sp, #8]
   10f7c:	b	10d5c <__printf_chk@plt+0x68>
   10f80:	cmp	r4, #0
   10f84:	beq	1100c <__printf_chk@plt+0x318>
   10f88:	mov	r0, r4
   10f8c:	bl	10c7c <strlen@plt>
   10f90:	ldr	r1, [sl]
   10f94:	add	r0, r4, r0
   10f98:	bl	10bb0 <stpcpy@plt>
   10f9c:	ldr	r3, [pc, #1868]	; 116f0 <__printf_chk@plt+0x9fc>
   10fa0:	ldrh	r3, [r3]
   10fa4:	strh	r3, [r0]
   10fa8:	b	10d5c <__printf_chk@plt+0x68>
   10fac:	uxtb	r9, r0
   10fb0:	b	10d5c <__printf_chk@plt+0x68>
   10fb4:	ldr	r3, [pc, #1848]	; 116f4 <__printf_chk@plt+0xa00>
   10fb8:	ldr	r3, [r3]
   10fbc:	cmp	r3, r6
   10fc0:	bge	11024 <__printf_chk@plt+0x330>
   10fc4:	sub	r2, r6, #1
   10fc8:	cmp	r3, r2
   10fcc:	beq	11448 <__printf_chk@plt+0x754>
   10fd0:	sub	r6, r6, #2
   10fd4:	cmp	r3, r6
   10fd8:	bne	11668 <__printf_chk@plt+0x974>
   10fdc:	ldr	r6, [r5, r3, lsl #2]
   10fe0:	ldr	r1, [pc, #1808]	; 116f8 <__printf_chk@plt+0xa04>
   10fe4:	mov	r0, r6
   10fe8:	lsl	r7, r3, #2
   10fec:	bl	10cb8 <strcmp@plt>
   10ff0:	add	r3, r5, r7
   10ff4:	ldr	r2, [pc, #1792]	; 116fc <__printf_chk@plt+0xa08>
   10ff8:	ldr	r3, [r3, #4]
   10ffc:	str	r3, [sp, #32]
   11000:	cmp	r0, #0
   11004:	moveq	r6, r2
   11008:	b	11030 <__printf_chk@plt+0x33c>
   1100c:	mov	r0, #8192	; 0x2000
   11010:	bl	10c70 <malloc@plt>
   11014:	mov	r3, #0
   11018:	mov	r4, r0
   1101c:	strb	r3, [r0]
   11020:	b	10f88 <__printf_chk@plt+0x294>
   11024:	ldr	r6, [pc, #1744]	; 116fc <__printf_chk@plt+0xa08>
   11028:	ldr	r3, [pc, #1744]	; 11700 <__printf_chk@plt+0xa0c>
   1102c:	str	r3, [sp, #32]
   11030:	ldrb	r3, [sp, #1068]	; 0x42c
   11034:	cmp	r9, #0
   11038:	moveq	r9, #48	; 0x30
   1103c:	cmp	r3, #0
   11040:	bne	11554 <__printf_chk@plt+0x860>
   11044:	add	r3, sp, #1056	; 0x420
   11048:	add	r3, r3, #12
   1104c:	str	r3, [sp, #20]
   11050:	cmp	r4, #0
   11054:	beq	11084 <__printf_chk@plt+0x390>
   11058:	sub	r2, r4, #1
   1105c:	mov	r1, #32
   11060:	ldrb	r3, [r2, #1]!
   11064:	cmp	r3, #0
   11068:	beq	11084 <__printf_chk@plt+0x390>
   1106c:	cmp	r3, #61	; 0x3d
   11070:	bne	11060 <__printf_chk@plt+0x36c>
   11074:	ldrb	r3, [r2, #-1]
   11078:	cmp	r3, #32
   1107c:	strbne	r1, [r2]
   11080:	b	11060 <__printf_chk@plt+0x36c>
   11084:	ldr	r0, [sp, #8]
   11088:	ldr	r3, [pc, #1652]	; 11704 <__printf_chk@plt+0xa10>
   1108c:	subs	r1, r0, #0
   11090:	moveq	r1, r3
   11094:	str	r1, [sp, #8]
   11098:	mov	r0, r1
   1109c:	mov	r2, r4
   110a0:	ldr	r1, [sp, #20]
   110a4:	bl	10c10 <lbu_initialize@plt>
   110a8:	subs	r3, r0, #0
   110ac:	str	r3, [sp, #24]
   110b0:	beq	113f0 <__printf_chk@plt+0x6fc>
   110b4:	ldr	r1, [pc, #1600]	; 116fc <__printf_chk@plt+0xa08>
   110b8:	mov	r0, r6
   110bc:	bl	10cb8 <strcmp@plt>
   110c0:	cmp	r0, #0
   110c4:	ldreq	r3, [pc, #1596]	; 11708 <__printf_chk@plt+0xa14>
   110c8:	ldreq	r8, [r3]
   110cc:	bne	11598 <__printf_chk@plt+0x8a4>
   110d0:	bl	10cac <lbu_getWriteablePath@plt>
   110d4:	mov	r2, #1024	; 0x400
   110d8:	mov	r1, r0
   110dc:	add	r0, sp, #44	; 0x2c
   110e0:	bl	10ca0 <__stpcpy_chk@plt>
   110e4:	ldr	r3, [pc, #1568]	; 1170c <__printf_chk@plt+0xa18>
   110e8:	mov	ip, r0
   110ec:	ldm	r3!, {r0, r1, r2}
   110f0:	ldrh	r3, [r3]
   110f4:	str	r0, [ip]
   110f8:	str	r1, [ip, #4]
   110fc:	strh	r3, [ip, #12]
   11100:	str	r2, [ip, #8]
   11104:	add	r0, sp, #44	; 0x2c
   11108:	ldr	r1, [pc, #1536]	; 11710 <__printf_chk@plt+0xa1c>
   1110c:	bl	10bec <fopen@plt>
   11110:	subs	sl, r0, #0
   11114:	beq	11650 <__printf_chk@plt+0x95c>
   11118:	cmp	r9, #112	; 0x70
   1111c:	beq	1147c <__printf_chk@plt+0x788>
   11120:	ldr	r3, [sp, #24]
   11124:	mov	r6, #0
   11128:	add	r3, r3, #212992	; 0x34000
   1112c:	mov	r7, r6
   11130:	add	r3, r3, #792	; 0x318
   11134:	str	r6, [sp, #16]
   11138:	str	r3, [sp, #36]	; 0x24
   1113c:	mov	r0, r8
   11140:	bl	10b98 <fgetc@plt>
   11144:	cmn	r0, #1
   11148:	mov	r5, r0
   1114c:	beq	1126c <__printf_chk@plt+0x578>
   11150:	cmp	r5, #32
   11154:	cmple	r6, #0
   11158:	moveq	r6, #0
   1115c:	beq	1113c <__printf_chk@plt+0x448>
   11160:	cmp	r5, #13
   11164:	beq	1113c <__printf_chk@plt+0x448>
   11168:	cmp	r6, #0
   1116c:	bne	1120c <__printf_chk@plt+0x518>
   11170:	sub	r3, r9, #48	; 0x30
   11174:	clz	r3, r3
   11178:	lsr	r3, r3, #5
   1117c:	cmp	r5, #60	; 0x3c
   11180:	moveq	r2, #0
   11184:	andne	r2, r3, #1
   11188:	cmp	r2, #0
   1118c:	str	r3, [sp, #28]
   11190:	mov	r0, r8
   11194:	bne	113f8 <__printf_chk@plt+0x704>
   11198:	bl	10b98 <fgetc@plt>
   1119c:	ldr	r3, [sp, #12]
   111a0:	cmp	r3, #0
   111a4:	str	r0, [sp, #16]
   111a8:	bne	1120c <__printf_chk@plt+0x518>
   111ac:	ldr	r3, [sp, #28]
   111b0:	cmp	r0, #63	; 0x3f
   111b4:	moveq	r3, #0
   111b8:	andne	r3, r3, #1
   111bc:	cmp	r3, #0
   111c0:	beq	1120c <__printf_chk@plt+0x518>
   111c4:	ldr	r3, [sp, #36]	; 0x24
   111c8:	ldr	r2, [pc, #1348]	; 11714 <__printf_chk@plt+0xa20>
   111cc:	mov	r1, #1
   111d0:	mov	r0, sl
   111d4:	bl	10bd4 <__fprintf_chk@plt>
   111d8:	cmp	r7, #62	; 0x3e
   111dc:	cmpeq	r5, #60	; 0x3c
   111e0:	beq	1161c <__printf_chk@plt+0x928>
   111e4:	mov	r1, sl
   111e8:	mov	r0, r5
   111ec:	bl	10c58 <fputc@plt>
   111f0:	mov	r9, #48	; 0x30
   111f4:	mov	r1, sl
   111f8:	ldr	r0, [sp, #16]
   111fc:	mov	r7, r5
   11200:	bl	10c58 <fputc@plt>
   11204:	mov	r6, #2
   11208:	b	1113c <__printf_chk@plt+0x448>
   1120c:	cmp	r7, #62	; 0x3e
   11210:	cmpeq	r5, #60	; 0x3c
   11214:	beq	1123c <__printf_chk@plt+0x548>
   11218:	subs	r7, r7, #10
   1121c:	movne	r7, #1
   11220:	cmp	r5, #10
   11224:	movne	r7, #0
   11228:	cmp	r9, #80	; 0x50
   1122c:	movne	r7, #0
   11230:	andeq	r7, r7, #1
   11234:	cmp	r7, #0
   11238:	beq	11248 <__printf_chk@plt+0x554>
   1123c:	mov	r1, sl
   11240:	mov	r0, #10
   11244:	bl	10c58 <fputc@plt>
   11248:	add	r6, r6, #1
   1124c:	mov	r1, sl
   11250:	mov	r0, r5
   11254:	bl	10c58 <fputc@plt>
   11258:	cmp	r6, #1
   1125c:	movne	r7, r5
   11260:	bne	1113c <__printf_chk@plt+0x448>
   11264:	b	111f4 <__printf_chk@plt+0x500>
   11268:	ldr	r4, [sp, #36]	; 0x24
   1126c:	mov	r0, sl
   11270:	bl	10c94 <fclose@plt>
   11274:	ldr	r3, [pc, #1164]	; 11708 <__printf_chk@plt+0xa14>
   11278:	ldr	r3, [r3]
   1127c:	cmp	r3, r8
   11280:	beq	1128c <__printf_chk@plt+0x598>
   11284:	mov	r0, r8
   11288:	bl	10c94 <fclose@plt>
   1128c:	cmp	r6, #2
   11290:	ble	11384 <__printf_chk@plt+0x690>
   11294:	cmp	r9, #98	; 0x62
   11298:	beq	115f0 <__printf_chk@plt+0x8fc>
   1129c:	bls	113b8 <__printf_chk@plt+0x6c4>
   112a0:	cmp	r9, #112	; 0x70
   112a4:	beq	113c8 <__printf_chk@plt+0x6d4>
   112a8:	cmp	r9, #114	; 0x72
   112ac:	bne	11434 <__printf_chk@plt+0x740>
   112b0:	bl	10cac <lbu_getWriteablePath@plt>
   112b4:	mov	r2, #1024	; 0x400
   112b8:	mov	r1, r0
   112bc:	add	r0, sp, #2080	; 0x820
   112c0:	add	r0, r0, #12
   112c4:	bl	10ca0 <__stpcpy_chk@plt>
   112c8:	ldr	ip, [pc, #1096]	; 11718 <__printf_chk@plt+0xa24>
   112cc:	ldr	r3, [sp, #20]
   112d0:	mov	lr, r0
   112d4:	ldm	ip!, {r0, r1, r2}
   112d8:	ldrh	r5, [ip]
   112dc:	ldrb	ip, [ip, #2]
   112e0:	str	r0, [lr]
   112e4:	ldr	r0, [sp, #12]
   112e8:	str	r2, [lr, #8]
   112ec:	add	r2, sp, #2080	; 0x820
   112f0:	str	r1, [lr, #4]
   112f4:	strh	r5, [lr, #12]
   112f8:	strb	ip, [lr, #14]
   112fc:	add	r1, sp, #44	; 0x2c
   11300:	str	r0, [sp, #4]
   11304:	add	r2, r2, #12
   11308:	str	r4, [sp]
   1130c:	ldr	r0, [sp, #8]
   11310:	bl	10c1c <lbu_backTranslateFile@plt>
   11314:	cmp	r0, #0
   11318:	beq	113f0 <__printf_chk@plt+0x6fc>
   1131c:	ldr	r3, [sp, #24]
   11320:	ldr	r3, [r3, #72]	; 0x48
   11324:	cmp	r3, #1
   11328:	bne	11384 <__printf_chk@plt+0x690>
   1132c:	ldr	r5, [sp, #12]
   11330:	ldr	r8, [sp, #20]
   11334:	ldr	r7, [sp, #32]
   11338:	ldr	r6, [sp, #8]
   1133c:	add	r1, sp, #2080	; 0x820
   11340:	strd	r4, [sp]
   11344:	mov	r3, r8
   11348:	mov	r2, r7
   1134c:	add	r1, r1, #12
   11350:	mov	r0, r6
   11354:	bl	10bbc <lbu_translateFile@plt>
   11358:	cmp	r0, #0
   1135c:	beq	113f0 <__printf_chk@plt+0x6fc>
   11360:	add	r1, sp, #2080	; 0x820
   11364:	strd	r4, [sp]
   11368:	mov	r3, r8
   1136c:	mov	r2, r7
   11370:	add	r1, r1, #12
   11374:	mov	r0, r6
   11378:	bl	10bc8 <lbu_translateTextFile@plt>
   1137c:	cmp	r0, #0
   11380:	beq	113f0 <__printf_chk@plt+0x6fc>
   11384:	bl	10bf8 <lbu_free@plt>
   11388:	cmp	r4, #0
   1138c:	beq	11398 <__printf_chk@plt+0x6a4>
   11390:	mov	r0, r4
   11394:	bl	10b74 <free@plt>
   11398:	ldr	r2, [sp, #3116]	; 0xc2c
   1139c:	ldr	r3, [fp]
   113a0:	mov	r0, #0
   113a4:	cmp	r2, r3
   113a8:	bne	11664 <__printf_chk@plt+0x970>
   113ac:	add	sp, sp, #3120	; 0xc30
   113b0:	add	sp, sp, #4
   113b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113b8:	cmp	r9, #48	; 0x30
   113bc:	beq	11408 <__printf_chk@plt+0x714>
   113c0:	cmp	r9, #84	; 0x54
   113c4:	bne	11434 <__printf_chk@plt+0x740>
   113c8:	ldr	r3, [sp, #12]
   113cc:	str	r4, [sp]
   113d0:	str	r3, [sp, #4]
   113d4:	ldr	r2, [sp, #32]
   113d8:	ldr	r3, [sp, #20]
   113dc:	add	r1, sp, #44	; 0x2c
   113e0:	ldr	r0, [sp, #8]
   113e4:	bl	10bc8 <lbu_translateTextFile@plt>
   113e8:	cmp	r0, #0
   113ec:	bne	11384 <__printf_chk@plt+0x690>
   113f0:	mov	r0, #1
   113f4:	bl	10ba4 <exit@plt>
   113f8:	bl	10b98 <fgetc@plt>
   113fc:	mov	r9, #84	; 0x54
   11400:	str	r0, [sp, #16]
   11404:	b	11248 <__printf_chk@plt+0x554>
   11408:	ldr	r3, [sp, #12]
   1140c:	str	r4, [sp]
   11410:	str	r3, [sp, #4]
   11414:	ldr	r2, [sp, #32]
   11418:	ldr	r3, [sp, #20]
   1141c:	add	r1, sp, #44	; 0x2c
   11420:	ldr	r0, [sp, #8]
   11424:	bl	10bbc <lbu_translateFile@plt>
   11428:	cmp	r0, #0
   1142c:	bne	11384 <__printf_chk@plt+0x690>
   11430:	b	113f0 <__printf_chk@plt+0x6fc>
   11434:	mov	r2, r9
   11438:	ldr	r1, [pc, #732]	; 1171c <__printf_chk@plt+0xa28>
   1143c:	ldr	r0, [pc, #732]	; 11720 <__printf_chk@plt+0xa2c>
   11440:	bl	10b80 <logMessage@plt>
   11444:	b	11384 <__printf_chk@plt+0x690>
   11448:	ldr	r6, [r5, r3, lsl #2]
   1144c:	ldr	r3, [pc, #684]	; 11700 <__printf_chk@plt+0xa0c>
   11450:	str	r3, [sp, #32]
   11454:	b	11030 <__printf_chk@plt+0x33c>
   11458:	ldr	r1, [pc, #708]	; 11724 <__printf_chk@plt+0xa30>
   1145c:	ldr	r3, [pc, #612]	; 116c8 <__printf_chk@plt+0x9d4>
   11460:	ldr	r2, [pc, #704]	; 11728 <__printf_chk@plt+0xa34>
   11464:	ldr	r0, [r1]
   11468:	ldr	r3, [r3]
   1146c:	mov	r1, #1
   11470:	bl	10bd4 <__fprintf_chk@plt>
   11474:	mov	r0, #1
   11478:	bl	10ba4 <exit@plt>
   1147c:	mov	r5, #0
   11480:	str	r4, [sp, #36]	; 0x24
   11484:	mov	r6, r5
   11488:	mov	r4, r5
   1148c:	str	r5, [sp, #28]
   11490:	str	r5, [sp, #16]
   11494:	mov	r0, r8
   11498:	bl	10b98 <fgetc@plt>
   1149c:	cmn	r0, #1
   114a0:	mov	r7, r0
   114a4:	beq	11268 <__printf_chk@plt+0x574>
   114a8:	cmp	r4, #0
   114ac:	sub	r2, r7, #12
   114b0:	moveq	r4, r7
   114b4:	cmp	r2, #1
   114b8:	bls	11494 <__printf_chk@plt+0x7a0>
   114bc:	cmp	r7, #60	; 0x3c
   114c0:	cmpeq	r4, #60	; 0x3c
   114c4:	beq	1153c <__printf_chk@plt+0x848>
   114c8:	cmp	r5, #0
   114cc:	bne	11548 <__printf_chk@plt+0x854>
   114d0:	cmp	r7, #45	; 0x2d
   114d4:	beq	115c0 <__printf_chk@plt+0x8cc>
   114d8:	ldr	r3, [sp, #16]
   114dc:	subs	r2, r3, #10
   114e0:	movne	r2, #1
   114e4:	cmp	r3, #10
   114e8:	cmpeq	r7, #10
   114ec:	beq	1151c <__printf_chk@plt+0x828>
   114f0:	ldr	r1, [sp, #28]
   114f4:	cmp	r1, #10
   114f8:	orrne	r2, r2, #1
   114fc:	cmp	r2, #0
   11500:	beq	1151c <__printf_chk@plt+0x828>
   11504:	cmp	r7, #32
   11508:	cmple	r3, #32
   1150c:	ble	11494 <__printf_chk@plt+0x7a0>
   11510:	ldr	r3, [sp, #16]
   11514:	cmp	r3, #10
   11518:	beq	11624 <__printf_chk@plt+0x930>
   1151c:	ldr	r3, [sp, #16]
   11520:	mov	r1, sl
   11524:	mov	r0, r7
   11528:	str	r3, [sp, #28]
   1152c:	add	r6, r6, #1
   11530:	bl	10c58 <fputc@plt>
   11534:	str	r7, [sp, #16]
   11538:	b	11494 <__printf_chk@plt+0x7a0>
   1153c:	mov	r5, #1
   11540:	mov	r4, #60	; 0x3c
   11544:	b	11494 <__printf_chk@plt+0x7a0>
   11548:	subs	r5, r7, #62	; 0x3e
   1154c:	movne	r5, #1
   11550:	b	11494 <__printf_chk@plt+0x7a0>
   11554:	bl	10cac <lbu_getWriteablePath@plt>
   11558:	add	r3, sp, #1056	; 0x420
   1155c:	add	r3, r3, #12
   11560:	mov	r2, #1024	; 0x400
   11564:	str	r3, [sp, #20]
   11568:	mov	r1, r0
   1156c:	mov	r0, r3
   11570:	bl	10ca0 <__stpcpy_chk@plt>
   11574:	ldr	r3, [pc, #344]	; 116d4 <__printf_chk@plt+0x9e0>
   11578:	mov	ip, r0
   1157c:	ldm	r3!, {r0, r1, r2}
   11580:	ldrb	r3, [r3]
   11584:	str	r0, [ip]
   11588:	str	r1, [ip, #4]
   1158c:	strb	r3, [ip, #12]
   11590:	str	r2, [ip, #8]
   11594:	b	11050 <__printf_chk@plt+0x35c>
   11598:	ldr	r1, [pc, #396]	; 1172c <__printf_chk@plt+0xa38>
   1159c:	mov	r0, r6
   115a0:	bl	10bec <fopen@plt>
   115a4:	subs	r8, r0, #0
   115a8:	bne	110d0 <__printf_chk@plt+0x3dc>
   115ac:	mov	r2, r6
   115b0:	ldr	r1, [pc, #376]	; 11730 <__printf_chk@plt+0xa3c>
   115b4:	ldr	r0, [pc, #356]	; 11720 <__printf_chk@plt+0xa2c>
   115b8:	bl	10b80 <logMessage@plt>
   115bc:	b	113f0 <__printf_chk@plt+0x6fc>
   115c0:	mov	r0, r8
   115c4:	bl	10b98 <fgetc@plt>
   115c8:	cmp	r0, #10
   115cc:	beq	11494 <__printf_chk@plt+0x7a0>
   115d0:	mov	r1, r8
   115d4:	bl	10c28 <ungetc@plt>
   115d8:	ldr	r3, [sp, #16]
   115dc:	ldr	r2, [sp, #28]
   115e0:	cmp	r2, #10
   115e4:	cmpeq	r3, #10
   115e8:	beq	1151c <__printf_chk@plt+0x828>
   115ec:	b	11510 <__printf_chk@plt+0x81c>
   115f0:	ldr	r3, [sp, #12]
   115f4:	str	r4, [sp]
   115f8:	str	r3, [sp, #4]
   115fc:	ldr	r2, [sp, #32]
   11600:	ldr	r3, [sp, #20]
   11604:	add	r1, sp, #44	; 0x2c
   11608:	ldr	r0, [sp, #8]
   1160c:	bl	10c1c <lbu_backTranslateFile@plt>
   11610:	cmp	r0, #0
   11614:	bne	11384 <__printf_chk@plt+0x690>
   11618:	b	113f0 <__printf_chk@plt+0x6fc>
   1161c:	mov	r9, #48	; 0x30
   11620:	b	1123c <__printf_chk@plt+0x548>
   11624:	ldr	r3, [sp, #28]
   11628:	sub	r2, r3, #97	; 0x61
   1162c:	cmp	r3, #44	; 0x2c
   11630:	cmpne	r2, #25
   11634:	bls	1151c <__printf_chk@plt+0x828>
   11638:	cmp	r7, #96	; 0x60
   1163c:	bgt	1151c <__printf_chk@plt+0x828>
   11640:	mov	r1, sl
   11644:	ldr	r0, [sp, #16]
   11648:	bl	10c58 <fputc@plt>
   1164c:	b	1151c <__printf_chk@plt+0x828>
   11650:	ldr	r1, [pc, #220]	; 11734 <__printf_chk@plt+0xa40>
   11654:	ldr	r0, [pc, #196]	; 11720 <__printf_chk@plt+0xa2c>
   11658:	bl	10b80 <logMessage@plt>
   1165c:	mov	r0, #1
   11660:	bl	10ba4 <exit@plt>
   11664:	bl	10c34 <__stack_chk_fail@plt>
   11668:	add	r3, r3, #2
   1166c:	ldr	r6, [pc, #84]	; 116c8 <__printf_chk@plt+0x9d4>
   11670:	ldr	r4, [pc, #172]	; 11724 <__printf_chk@plt+0xa30>
   11674:	ldr	r2, [r5, r3, lsl #2]
   11678:	mov	r1, #1
   1167c:	ldr	r3, [r6]
   11680:	str	r2, [sp]
   11684:	ldr	r2, [pc, #172]	; 11738 <__printf_chk@plt+0xa44>
   11688:	ldr	r0, [r4]
   1168c:	bl	10bd4 <__fprintf_chk@plt>
   11690:	ldr	r3, [r6]
   11694:	ldr	r0, [r4]
   11698:	ldr	r2, [pc, #136]	; 11728 <__printf_chk@plt+0xa34>
   1169c:	mov	r1, #1
   116a0:	bl	10bd4 <__fprintf_chk@plt>
   116a4:	mov	r0, #1
   116a8:	bl	10ba4 <exit@plt>
   116ac:	andeq	r2, r2, r0, lsr lr
   116b0:	andeq	r2, r0, r0, lsl r7
   116b4:			; <UNDEFINED> instruction: 0x00011eb4
   116b8:	andeq	r2, r1, r4, lsr r6
   116bc:	andeq	r3, r2, r8, lsl r0
   116c0:	andeq	r3, r2, r4, lsr #32
   116c4:	andeq	r2, r1, r0
   116c8:	andeq	r3, r2, ip, lsr #32
   116cc:	strdeq	r1, [r1], -r0
   116d0:	andeq	r1, r1, r8, ror #31
   116d4:	strdeq	r2, [r1], -ip
   116d8:	andeq	r2, r1, r0, lsl r0
   116dc:	andeq	r2, r1, r0, asr #32
   116e0:	andeq	r0, r0, r3, lsl #8
   116e4:			; <UNDEFINED> instruction: 0x000121bc
   116e8:	andeq	r2, r1, r0, asr #11
   116ec:	andeq	r2, r1, r4, ror #11
   116f0:	strdeq	r2, [r1], -r8
   116f4:	andeq	r3, r2, r0, lsl r0
   116f8:	andeq	r2, r1, r4, asr #12
   116fc:	andeq	r1, r1, r8, asr #31
   11700:	ldrdeq	r1, [r1], -r0
   11704:	ldrdeq	r1, [r1], -r8
   11708:	andeq	r3, r2, r8
   1170c:	andeq	r2, r1, ip, ror r6
   11710:	andeq	r2, r1, ip, lsl #13
   11714:	andeq	r2, r1, ip, lsr #15
   11718:	andeq	r2, r1, ip, lsr #13
   1171c:			; <UNDEFINED> instruction: 0x000126bc
   11720:	andeq	ip, r0, r0, asr r3
   11724:	andeq	r3, r2, r0, lsr #32
   11728:	andeq	r2, r1, ip, lsl #12
   1172c:	andeq	r2, r1, ip
   11730:	andeq	r2, r1, r0, ror #12
   11734:	muleq	r1, r0, r6
   11738:	andeq	r2, r1, r8, asr #12
   1173c:	mov	fp, #0
   11740:	mov	lr, #0
   11744:	pop	{r1}		; (ldr r1, [sp], #4)
   11748:	mov	r2, sp
   1174c:	push	{r2}		; (str r2, [sp, #-4]!)
   11750:	push	{r0}		; (str r0, [sp, #-4]!)
   11754:	ldr	ip, [pc, #16]	; 1176c <__printf_chk@plt+0xa78>
   11758:	push	{ip}		; (str ip, [sp, #-4]!)
   1175c:	ldr	r0, [pc, #12]	; 11770 <__printf_chk@plt+0xa7c>
   11760:	ldr	r3, [pc, #12]	; 11774 <__printf_chk@plt+0xa80>
   11764:	bl	10cd0 <__libc_start_main@plt>
   11768:	bl	10c04 <abort@plt>
   1176c:	andeq	r1, r1, r4, lsr #29
   11770:	andeq	r0, r1, r0, lsl #26
   11774:	andeq	r1, r1, r4, asr #28
   11778:	ldr	r3, [pc, #20]	; 11794 <__printf_chk@plt+0xaa0>
   1177c:	ldr	r2, [pc, #20]	; 11798 <__printf_chk@plt+0xaa4>
   11780:	add	r3, pc, r3
   11784:	ldr	r2, [r3, r2]
   11788:	cmp	r2, #0
   1178c:	bxeq	lr
   11790:	b	10cdc <__gmon_start__@plt>
   11794:	andeq	r1, r1, r4, asr #15
   11798:	andeq	r0, r0, ip, lsr #1
   1179c:	ldr	r0, [pc, #24]	; 117bc <__printf_chk@plt+0xac8>
   117a0:	ldr	r3, [pc, #24]	; 117c0 <__printf_chk@plt+0xacc>
   117a4:	cmp	r3, r0
   117a8:	bxeq	lr
   117ac:	ldr	r3, [pc, #16]	; 117c4 <__printf_chk@plt+0xad0>
   117b0:	cmp	r3, #0
   117b4:	bxeq	lr
   117b8:	bx	r3
   117bc:	andeq	r3, r2, r8
   117c0:	andeq	r3, r2, r8
   117c4:	andeq	r0, r0, r0
   117c8:	ldr	r0, [pc, #36]	; 117f4 <__printf_chk@plt+0xb00>
   117cc:	ldr	r1, [pc, #36]	; 117f8 <__printf_chk@plt+0xb04>
   117d0:	sub	r1, r1, r0
   117d4:	asr	r1, r1, #2
   117d8:	add	r1, r1, r1, lsr #31
   117dc:	asrs	r1, r1, #1
   117e0:	bxeq	lr
   117e4:	ldr	r3, [pc, #16]	; 117fc <__printf_chk@plt+0xb08>
   117e8:	cmp	r3, #0
   117ec:	bxeq	lr
   117f0:	bx	r3
   117f4:	andeq	r3, r2, r8
   117f8:	andeq	r3, r2, r8
   117fc:	andeq	r0, r0, r0
   11800:	push	{r4, lr}
   11804:	ldr	r4, [pc, #24]	; 11824 <__printf_chk@plt+0xb30>
   11808:	ldrb	r3, [r4]
   1180c:	cmp	r3, #0
   11810:	popne	{r4, pc}
   11814:	bl	1179c <__printf_chk@plt+0xaa8>
   11818:	mov	r3, #1
   1181c:	strb	r3, [r4]
   11820:	pop	{r4, pc}
   11824:	andeq	r3, r2, r8, lsr #32
   11828:	b	117c8 <__printf_chk@plt+0xad4>
   1182c:	push	{r4, r5, r6, r7, r8, lr}
   11830:	subs	r5, r0, #0
   11834:	ldr	r4, [pc, #172]	; 118e8 <__printf_chk@plt+0xbf4>
   11838:	add	r4, pc, r4
   1183c:	beq	118c4 <__printf_chk@plt+0xbd0>
   11840:	mov	r1, #47	; 0x2f
   11844:	bl	10cc4 <strrchr@plt>
   11848:	subs	r6, r0, #0
   1184c:	beq	118a8 <__printf_chk@plt+0xbb4>
   11850:	add	r7, r6, #1
   11854:	sub	r3, r7, r5
   11858:	cmp	r3, #6
   1185c:	ble	118a8 <__printf_chk@plt+0xbb4>
   11860:	ldr	r1, [pc, #132]	; 118ec <__printf_chk@plt+0xbf8>
   11864:	mov	r2, #7
   11868:	add	r1, pc, r1
   1186c:	sub	r0, r6, #6
   11870:	bl	10b8c <strncmp@plt>
   11874:	cmp	r0, #0
   11878:	bne	118a8 <__printf_chk@plt+0xbb4>
   1187c:	ldr	r1, [pc, #108]	; 118f0 <__printf_chk@plt+0xbfc>
   11880:	mov	r2, #3
   11884:	add	r1, pc, r1
   11888:	mov	r0, r7
   1188c:	bl	10b8c <strncmp@plt>
   11890:	cmp	r0, #0
   11894:	movne	r5, r7
   11898:	ldreq	r3, [pc, #84]	; 118f4 <__printf_chk@plt+0xc00>
   1189c:	addeq	r5, r6, #4
   118a0:	ldreq	r3, [r4, r3]
   118a4:	streq	r5, [r3]
   118a8:	ldr	r2, [pc, #72]	; 118f8 <__printf_chk@plt+0xc04>
   118ac:	ldr	r3, [pc, #72]	; 118fc <__printf_chk@plt+0xc08>
   118b0:	ldr	r2, [r4, r2]
   118b4:	str	r5, [r2]
   118b8:	ldr	r3, [r4, r3]
   118bc:	str	r5, [r3]
   118c0:	pop	{r4, r5, r6, r7, r8, pc}
   118c4:	ldr	r3, [pc, #52]	; 11900 <__printf_chk@plt+0xc0c>
   118c8:	ldr	r0, [pc, #52]	; 11904 <__printf_chk@plt+0xc10>
   118cc:	mov	r2, #55	; 0x37
   118d0:	ldr	r3, [r4, r3]
   118d4:	mov	r1, #1
   118d8:	add	r0, pc, r0
   118dc:	ldr	r3, [r3]
   118e0:	bl	10c64 <fwrite@plt>
   118e4:	bl	10c04 <abort@plt>
   118e8:	andeq	r1, r1, ip, lsl #14
   118ec:	andeq	r0, r0, r8, lsr #30
   118f0:	andeq	r0, r0, r4, lsl pc
   118f4:	andeq	r0, r0, r8, lsr #1
   118f8:	muleq	r0, ip, r0
   118fc:	muleq	r0, r8, r0
   11900:	andeq	r0, r0, r0, lsr #1
   11904:	andeq	r0, r0, r0, lsl #29
   11908:	push	{r4, r5, r6, r7, lr}
   1190c:	sub	sp, sp, #36	; 0x24
   11910:	ldr	r7, [pc, #836]	; 11c5c <__printf_chk@plt+0xf68>
   11914:	cmp	r1, #0
   11918:	add	r7, pc, r7
   1191c:	mov	r5, r0
   11920:	ldr	r4, [sp, #56]	; 0x38
   11924:	ldr	r6, [sp, #60]	; 0x3c
   11928:	beq	119b4 <__printf_chk@plt+0xcc0>
   1192c:	strd	r2, [sp]
   11930:	ldr	r2, [pc, #808]	; 11c60 <__printf_chk@plt+0xf6c>
   11934:	mov	r3, r1
   11938:	add	r2, pc, r2
   1193c:	mov	r1, #1
   11940:	bl	10bd4 <__fprintf_chk@plt>
   11944:	ldr	r2, [pc, #792]	; 11c64 <__printf_chk@plt+0xf70>
   11948:	ldr	r0, [pc, #792]	; 11c68 <__printf_chk@plt+0xf74>
   1194c:	ldr	r3, [pc, #792]	; 11c6c <__printf_chk@plt+0xf78>
   11950:	ldr	r2, [r7, r2]
   11954:	add	r3, pc, r3
   11958:	mov	r1, #1
   1195c:	str	r0, [sp]
   11960:	mov	r0, r5
   11964:	bl	10bd4 <__fprintf_chk@plt>
   11968:	ldr	r0, [pc, #768]	; 11c70 <__printf_chk@plt+0xf7c>
   1196c:	mov	r3, r5
   11970:	mov	r2, #202	; 0xca
   11974:	mov	r1, #1
   11978:	add	r0, pc, r0
   1197c:	bl	10c64 <fwrite@plt>
   11980:	cmp	r6, #9
   11984:	addls	pc, pc, r6, lsl #2
   11988:	b	11bfc <__printf_chk@plt+0xf08>
   1198c:	b	11c58 <__printf_chk@plt+0xf64>
   11990:	b	11a30 <__printf_chk@plt+0xd3c>
   11994:	b	11a50 <__printf_chk@plt+0xd5c>
   11998:	b	11a78 <__printf_chk@plt+0xd84>
   1199c:	b	11aa8 <__printf_chk@plt+0xdb4>
   119a0:	b	11adc <__printf_chk@plt+0xde8>
   119a4:	b	11b18 <__printf_chk@plt+0xe24>
   119a8:	b	11b5c <__printf_chk@plt+0xe68>
   119ac:	b	11ba8 <__printf_chk@plt+0xeb4>
   119b0:	b	119d0 <__printf_chk@plt+0xcdc>
   119b4:	str	r3, [sp]
   119b8:	mov	r3, r2
   119bc:	ldr	r2, [pc, #688]	; 11c74 <__printf_chk@plt+0xf80>
   119c0:	mov	r1, #1
   119c4:	add	r2, pc, r2
   119c8:	bl	10bd4 <__fprintf_chk@plt>
   119cc:	b	11944 <__printf_chk@plt+0xc50>
   119d0:	ldr	ip, [r4, #32]
   119d4:	ldr	r1, [r4, #28]
   119d8:	ldr	r2, [r4, #24]
   119dc:	ldr	r3, [r4, #20]
   119e0:	str	ip, [sp, #28]
   119e4:	ldr	ip, [r4, #16]
   119e8:	str	r1, [sp, #24]
   119ec:	ldr	r1, [r4, #12]
   119f0:	str	r2, [sp, #20]
   119f4:	ldr	r2, [r4, #8]
   119f8:	str	r3, [sp, #16]
   119fc:	ldr	r3, [r4, #4]
   11a00:	str	r2, [sp, #4]
   11a04:	ldr	r2, [pc, #620]	; 11c78 <__printf_chk@plt+0xf84>
   11a08:	str	r1, [sp, #8]
   11a0c:	str	ip, [sp, #12]
   11a10:	str	r3, [sp]
   11a14:	mov	r0, r5
   11a18:	ldr	r3, [r4]
   11a1c:	add	r2, pc, r2
   11a20:	mov	r1, #1
   11a24:	bl	10bd4 <__fprintf_chk@plt>
   11a28:	add	sp, sp, #36	; 0x24
   11a2c:	pop	{r4, r5, r6, r7, pc}
   11a30:	ldr	r2, [pc, #580]	; 11c7c <__printf_chk@plt+0xf88>
   11a34:	ldr	r3, [r4]
   11a38:	mov	r0, r5
   11a3c:	add	r2, pc, r2
   11a40:	mov	r1, #1
   11a44:	add	sp, sp, #36	; 0x24
   11a48:	pop	{r4, r5, r6, r7, lr}
   11a4c:	b	10bd4 <__fprintf_chk@plt>
   11a50:	ldr	r3, [r4, #4]
   11a54:	ldr	r2, [pc, #548]	; 11c80 <__printf_chk@plt+0xf8c>
   11a58:	str	r3, [sp, #56]	; 0x38
   11a5c:	mov	r0, r5
   11a60:	ldr	r3, [r4]
   11a64:	add	r2, pc, r2
   11a68:	mov	r1, #1
   11a6c:	add	sp, sp, #36	; 0x24
   11a70:	pop	{r4, r5, r6, r7, lr}
   11a74:	b	10bd4 <__fprintf_chk@plt>
   11a78:	ldr	r2, [r4, #8]
   11a7c:	ldr	r3, [r4, #4]
   11a80:	str	r2, [sp, #60]	; 0x3c
   11a84:	ldr	r2, [pc, #504]	; 11c84 <__printf_chk@plt+0xf90>
   11a88:	str	r3, [sp, #56]	; 0x38
   11a8c:	mov	r0, r5
   11a90:	ldr	r3, [r4]
   11a94:	add	r2, pc, r2
   11a98:	mov	r1, #1
   11a9c:	add	sp, sp, #36	; 0x24
   11aa0:	pop	{r4, r5, r6, r7, lr}
   11aa4:	b	10bd4 <__fprintf_chk@plt>
   11aa8:	ldr	r2, [r4, #8]
   11aac:	ldr	r1, [r4, #12]
   11ab0:	ldr	r3, [r4, #4]
   11ab4:	str	r2, [sp, #4]
   11ab8:	ldr	r2, [pc, #456]	; 11c88 <__printf_chk@plt+0xf94>
   11abc:	str	r1, [sp, #8]
   11ac0:	str	r3, [sp]
   11ac4:	mov	r0, r5
   11ac8:	ldr	r3, [r4]
   11acc:	add	r2, pc, r2
   11ad0:	mov	r1, #1
   11ad4:	bl	10bd4 <__fprintf_chk@plt>
   11ad8:	b	11a28 <__printf_chk@plt+0xd34>
   11adc:	ldr	r2, [r4, #8]
   11ae0:	ldr	r1, [r4, #12]
   11ae4:	ldr	r3, [r4, #4]
   11ae8:	ldr	ip, [r4, #16]
   11aec:	str	r2, [sp, #4]
   11af0:	ldr	r2, [pc, #404]	; 11c8c <__printf_chk@plt+0xf98>
   11af4:	str	r1, [sp, #8]
   11af8:	str	ip, [sp, #12]
   11afc:	str	r3, [sp]
   11b00:	mov	r0, r5
   11b04:	ldr	r3, [r4]
   11b08:	add	r2, pc, r2
   11b0c:	mov	r1, #1
   11b10:	bl	10bd4 <__fprintf_chk@plt>
   11b14:	b	11a28 <__printf_chk@plt+0xd34>
   11b18:	ldr	r3, [r4, #20]
   11b1c:	ldr	r2, [r4, #8]
   11b20:	ldr	r1, [r4, #12]
   11b24:	ldr	ip, [r4, #16]
   11b28:	str	r3, [sp, #16]
   11b2c:	ldr	r3, [r4, #4]
   11b30:	str	r2, [sp, #4]
   11b34:	ldr	r2, [pc, #340]	; 11c90 <__printf_chk@plt+0xf9c>
   11b38:	str	r1, [sp, #8]
   11b3c:	str	ip, [sp, #12]
   11b40:	str	r3, [sp]
   11b44:	mov	r0, r5
   11b48:	ldr	r3, [r4]
   11b4c:	add	r2, pc, r2
   11b50:	mov	r1, #1
   11b54:	bl	10bd4 <__fprintf_chk@plt>
   11b58:	b	11a28 <__printf_chk@plt+0xd34>
   11b5c:	ldr	r2, [r4, #24]
   11b60:	ldr	r3, [r4, #20]
   11b64:	ldr	r1, [r4, #12]
   11b68:	ldr	ip, [r4, #16]
   11b6c:	str	r2, [sp, #20]
   11b70:	ldr	r2, [r4, #8]
   11b74:	str	r3, [sp, #16]
   11b78:	ldr	r3, [r4, #4]
   11b7c:	str	r2, [sp, #4]
   11b80:	ldr	r2, [pc, #268]	; 11c94 <__printf_chk@plt+0xfa0>
   11b84:	str	r1, [sp, #8]
   11b88:	str	ip, [sp, #12]
   11b8c:	str	r3, [sp]
   11b90:	mov	r0, r5
   11b94:	ldr	r3, [r4]
   11b98:	add	r2, pc, r2
   11b9c:	mov	r1, #1
   11ba0:	bl	10bd4 <__fprintf_chk@plt>
   11ba4:	b	11a28 <__printf_chk@plt+0xd34>
   11ba8:	ldr	r1, [r4, #28]
   11bac:	ldr	r2, [r4, #24]
   11bb0:	ldr	r3, [r4, #20]
   11bb4:	ldr	ip, [r4, #16]
   11bb8:	str	r1, [sp, #24]
   11bbc:	ldr	r1, [r4, #12]
   11bc0:	str	r2, [sp, #20]
   11bc4:	ldr	r2, [r4, #8]
   11bc8:	str	r3, [sp, #16]
   11bcc:	ldr	r3, [r4, #4]
   11bd0:	str	r2, [sp, #4]
   11bd4:	ldr	r2, [pc, #188]	; 11c98 <__printf_chk@plt+0xfa4>
   11bd8:	str	r1, [sp, #8]
   11bdc:	str	ip, [sp, #12]
   11be0:	str	r3, [sp]
   11be4:	mov	r0, r5
   11be8:	ldr	r3, [r4]
   11bec:	add	r2, pc, r2
   11bf0:	mov	r1, #1
   11bf4:	bl	10bd4 <__fprintf_chk@plt>
   11bf8:	b	11a28 <__printf_chk@plt+0xd34>
   11bfc:	ldr	ip, [r4, #32]
   11c00:	ldr	r1, [r4, #28]
   11c04:	ldr	r2, [r4, #24]
   11c08:	ldr	r3, [r4, #20]
   11c0c:	str	ip, [sp, #28]
   11c10:	ldr	ip, [r4, #16]
   11c14:	str	r1, [sp, #24]
   11c18:	ldr	r1, [r4, #12]
   11c1c:	str	r2, [sp, #20]
   11c20:	ldr	r2, [r4, #8]
   11c24:	str	r3, [sp, #16]
   11c28:	ldr	r3, [r4, #4]
   11c2c:	str	r2, [sp, #4]
   11c30:	ldr	r2, [pc, #100]	; 11c9c <__printf_chk@plt+0xfa8>
   11c34:	str	r1, [sp, #8]
   11c38:	str	ip, [sp, #12]
   11c3c:	str	r3, [sp]
   11c40:	mov	r0, r5
   11c44:	ldr	r3, [r4]
   11c48:	add	r2, pc, r2
   11c4c:	mov	r1, #1
   11c50:	bl	10bd4 <__fprintf_chk@plt>
   11c54:	b	11a28 <__printf_chk@plt+0xd34>
   11c58:	bl	10c04 <abort@plt>
   11c5c:	andeq	r1, r1, ip, lsr #12
   11c60:	andeq	r0, r0, r4, ror #28
   11c64:	muleq	r0, r4, r0
   11c68:	ldrdeq	r0, [r0], -sp
   11c6c:	andeq	r0, r0, ip, asr lr
   11c70:	andeq	r0, r0, ip, lsr lr
   11c74:	andeq	r0, r0, r4, ror #27
   11c78:	andeq	r0, r0, r0, ror pc
   11c7c:	andeq	r0, r0, r4, asr #28
   11c80:	andeq	r0, r0, ip, lsr #28
   11c84:	andeq	r0, r0, r4, lsl lr
   11c88:	strdeq	r0, [r0], -r8
   11c8c:	ldrdeq	r0, [r0], -ip
   11c90:			; <UNDEFINED> instruction: 0x00000dbc
   11c94:	muleq	r0, r8, sp
   11c98:	andeq	r0, r0, r0, ror sp
   11c9c:	andeq	r0, r0, r8, ror sp
   11ca0:	push	{r4, r5, lr}
   11ca4:	sub	sp, sp, #12
   11ca8:	ldr	r5, [sp, #24]
   11cac:	ldr	ip, [r5]
   11cb0:	cmp	ip, #0
   11cb4:	beq	11cd0 <__printf_chk@plt+0xfdc>
   11cb8:	mov	lr, r5
   11cbc:	mov	ip, #0
   11cc0:	ldr	r4, [lr, #4]!
   11cc4:	add	ip, ip, #1
   11cc8:	cmp	r4, #0
   11ccc:	bne	11cc0 <__printf_chk@plt+0xfcc>
   11cd0:	stm	sp, {r5, ip}
   11cd4:	bl	11908 <__printf_chk@plt+0xc14>
   11cd8:	add	sp, sp, #12
   11cdc:	pop	{r4, r5, pc}
   11ce0:	ldr	ip, [pc, #104]	; 11d50 <__printf_chk@plt+0x105c>
   11ce4:	push	{r4, r5, r6, r7, lr}
   11ce8:	add	ip, pc, ip
   11cec:	ldr	lr, [pc, #96]	; 11d54 <__printf_chk@plt+0x1060>
   11cf0:	sub	sp, sp, #60	; 0x3c
   11cf4:	add	r7, sp, #12
   11cf8:	ldr	r6, [ip, lr]
   11cfc:	ldr	r4, [sp, #80]	; 0x50
   11d00:	mov	r5, r7
   11d04:	ldr	lr, [r6]
   11d08:	mov	ip, #0
   11d0c:	str	lr, [sp, #52]	; 0x34
   11d10:	ldr	lr, [r4], #4
   11d14:	cmp	lr, #0
   11d18:	str	lr, [r5], #4
   11d1c:	beq	11d2c <__printf_chk@plt+0x1038>
   11d20:	add	ip, ip, #1
   11d24:	cmp	ip, #10
   11d28:	bne	11d10 <__printf_chk@plt+0x101c>
   11d2c:	stm	sp, {r7, ip}
   11d30:	bl	11908 <__printf_chk@plt+0xc14>
   11d34:	ldr	r2, [sp, #52]	; 0x34
   11d38:	ldr	r3, [r6]
   11d3c:	cmp	r2, r3
   11d40:	bne	11d4c <__printf_chk@plt+0x1058>
   11d44:	add	sp, sp, #60	; 0x3c
   11d48:	pop	{r4, r5, r6, r7, pc}
   11d4c:	bl	10c34 <__stack_chk_fail@plt>
   11d50:	andeq	r1, r1, ip, asr r2
   11d54:	muleq	r0, r0, r0
   11d58:	push	{r3}		; (str r3, [sp, #-4]!)
   11d5c:	ldr	r3, [pc, #80]	; 11db4 <__printf_chk@plt+0x10c0>
   11d60:	ldr	ip, [pc, #80]	; 11db8 <__printf_chk@plt+0x10c4>
   11d64:	add	r3, pc, r3
   11d68:	push	{r4, lr}
   11d6c:	sub	sp, sp, #20
   11d70:	ldr	r4, [r3, ip]
   11d74:	add	lr, sp, #32
   11d78:	str	lr, [sp]
   11d7c:	ldr	ip, [r4]
   11d80:	ldr	r3, [sp, #28]
   11d84:	str	lr, [sp, #8]
   11d88:	str	ip, [sp, #12]
   11d8c:	bl	11ce0 <__printf_chk@plt+0xfec>
   11d90:	ldr	r2, [sp, #12]
   11d94:	ldr	r3, [r4]
   11d98:	cmp	r2, r3
   11d9c:	bne	11db0 <__printf_chk@plt+0x10bc>
   11da0:	add	sp, sp, #20
   11da4:	pop	{r4, lr}
   11da8:	add	sp, sp, #4
   11dac:	bx	lr
   11db0:	bl	10c34 <__stack_chk_fail@plt>
   11db4:	andeq	r1, r1, r0, ror #3
   11db8:	muleq	r0, r0, r0
   11dbc:	ldr	r2, [pc, #96]	; 11e24 <__printf_chk@plt+0x1130>
   11dc0:	ldr	r1, [pc, #96]	; 11e28 <__printf_chk@plt+0x1134>
   11dc4:	push	{r4, lr}
   11dc8:	add	r2, pc, r2
   11dcc:	add	r1, pc, r1
   11dd0:	mov	r0, #1
   11dd4:	bl	10cf4 <__printf_chk@plt>
   11dd8:	ldr	r3, [pc, #76]	; 11e2c <__printf_chk@plt+0x1138>
   11ddc:	ldr	r2, [pc, #76]	; 11e30 <__printf_chk@plt+0x113c>
   11de0:	ldr	r1, [pc, #76]	; 11e34 <__printf_chk@plt+0x1140>
   11de4:	add	r3, pc, r3
   11de8:	add	r2, pc, r2
   11dec:	add	r1, pc, r1
   11df0:	mov	r0, #1
   11df4:	bl	10cf4 <__printf_chk@plt>
   11df8:	ldr	r3, [pc, #56]	; 11e38 <__printf_chk@plt+0x1144>
   11dfc:	ldr	r0, [pc, #56]	; 11e3c <__printf_chk@plt+0x1148>
   11e00:	add	r3, pc, r3
   11e04:	mov	r2, #63	; 0x3f
   11e08:	ldr	ip, [r3, r0]
   11e0c:	ldr	r0, [pc, #44]	; 11e40 <__printf_chk@plt+0x114c>
   11e10:	mov	r1, #1
   11e14:	add	r0, pc, r0
   11e18:	ldr	r3, [ip]
   11e1c:	pop	{r4, lr}
   11e20:	b	10c64 <fwrite@plt>
   11e24:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11e28:	andeq	r0, r0, r0, lsr ip
   11e2c:	andeq	r0, r0, r0, lsr ip
   11e30:	andeq	r0, r0, r0, lsl #4
   11e34:	andeq	r0, r0, r0, asr #24
   11e38:	andeq	r1, r1, r4, asr #2
   11e3c:	andeq	r0, r0, r4, lsr #1
   11e40:	andeq	r0, r0, ip, lsr #24
   11e44:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11e48:	mov	r7, r0
   11e4c:	ldr	r6, [pc, #72]	; 11e9c <__printf_chk@plt+0x11a8>
   11e50:	ldr	r5, [pc, #72]	; 11ea0 <__printf_chk@plt+0x11ac>
   11e54:	add	r6, pc, r6
   11e58:	add	r5, pc, r5
   11e5c:	sub	r6, r6, r5
   11e60:	mov	r8, r1
   11e64:	mov	r9, r2
   11e68:	bl	10b54 <free@plt-0x20>
   11e6c:	asrs	r6, r6, #2
   11e70:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e74:	mov	r4, #0
   11e78:	add	r4, r4, #1
   11e7c:	ldr	r3, [r5], #4
   11e80:	mov	r2, r9
   11e84:	mov	r1, r8
   11e88:	mov	r0, r7
   11e8c:	blx	r3
   11e90:	cmp	r6, r4
   11e94:	bne	11e78 <__printf_chk@plt+0x1184>
   11e98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e9c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11ea0:	andeq	r0, r1, r8, asr #31
   11ea4:	bx	lr

Disassembly of section .fini:

00011ea8 <.fini>:
   11ea8:	push	{r3, lr}
   11eac:	pop	{r3, pc}
