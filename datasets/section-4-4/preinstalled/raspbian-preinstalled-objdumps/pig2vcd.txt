
raspbian-preinstalled/pig2vcd:     file format elf32-littlearm


Disassembly of section .init:

00010448 <.init>:
   10448:	push	{r3, lr}
   1044c:	bl	106f8 <abort@plt+0x218>
   10450:	pop	{r3, pc}

Disassembly of section .plt:

00010454 <read@plt-0x14>:
   10454:	push	{lr}		; (str lr, [sp, #-4]!)
   10458:	ldr	lr, [pc, #4]	; 10464 <read@plt-0x4>
   1045c:	add	lr, pc, lr
   10460:	ldr	pc, [lr, #8]!
   10464:	muleq	r1, ip, fp

00010468 <read@plt>:
   10468:	add	ip, pc, #0, 12
   1046c:	add	ip, ip, #16, 20	; 0x10000
   10470:	ldr	pc, [ip, #2972]!	; 0xb9c

00010474 <__stack_chk_fail@plt>:
   10474:	add	ip, pc, #0, 12
   10478:	add	ip, ip, #16, 20	; 0x10000
   1047c:	ldr	pc, [ip, #2964]!	; 0xb94

00010480 <localtime_r@plt>:
   10480:	add	ip, pc, #0, 12
   10484:	add	ip, ip, #16, 20	; 0x10000
   10488:	ldr	pc, [ip, #2956]!	; 0xb8c

0001048c <gettimeofday@plt>:
   1048c:	add	ip, pc, #0, 12
   10490:	add	ip, ip, #16, 20	; 0x10000
   10494:	ldr	pc, [ip, #2948]!	; 0xb84

00010498 <puts@plt>:
   10498:	add	ip, pc, #0, 12
   1049c:	add	ip, ip, #16, 20	; 0x10000
   104a0:	ldr	pc, [ip, #2940]!	; 0xb7c

000104a4 <__libc_start_main@plt>:
   104a4:	add	ip, pc, #0, 12
   104a8:	add	ip, ip, #16, 20	; 0x10000
   104ac:	ldr	pc, [ip, #2932]!	; 0xb74

000104b0 <strftime@plt>:
   104b0:	add	ip, pc, #0, 12
   104b4:	add	ip, ip, #16, 20	; 0x10000
   104b8:	ldr	pc, [ip, #2924]!	; 0xb6c

000104bc <__gmon_start__@plt>:
   104bc:	add	ip, pc, #0, 12
   104c0:	add	ip, ip, #16, 20	; 0x10000
   104c4:	ldr	pc, [ip, #2916]!	; 0xb64

000104c8 <exit@plt>:
   104c8:	add	ip, pc, #0, 12
   104cc:	add	ip, ip, #16, 20	; 0x10000
   104d0:	ldr	pc, [ip, #2908]!	; 0xb5c

000104d4 <__printf_chk@plt>:
   104d4:	add	ip, pc, #0, 12
   104d8:	add	ip, ip, #16, 20	; 0x10000
   104dc:	ldr	pc, [ip, #2900]!	; 0xb54

000104e0 <abort@plt>:
   104e0:	add	ip, pc, #0, 12
   104e4:	add	ip, ip, #16, 20	; 0x10000
   104e8:	ldr	pc, [ip, #2892]!	; 0xb4c

Disassembly of section .text:

000104ec <.text>:
   104ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   104f0:	sub	sp, sp, #76	; 0x4c
   104f4:	ldr	r8, [pc, #400]	; 1068c <abort@plt+0x1ac>
   104f8:	add	r1, sp, #12
   104fc:	mov	r2, #12
   10500:	ldr	r3, [r8]
   10504:	mov	r0, #0
   10508:	str	r3, [sp, #68]	; 0x44
   1050c:	bl	10468 <read@plt>
   10510:	cmp	r0, #12
   10514:	bne	10680 <abort@plt+0x1a0>
   10518:	mov	r1, #0
   1051c:	add	r0, sp, #4
   10520:	bl	1048c <gettimeofday@plt>
   10524:	add	r1, sp, #24
   10528:	add	r0, sp, #4
   1052c:	bl	10480 <localtime_r@plt>
   10530:	add	r3, sp, #24
   10534:	ldr	r2, [pc, #340]	; 10690 <abort@plt+0x1b0>
   10538:	mov	r1, #32
   1053c:	ldr	r0, [pc, #336]	; 10694 <abort@plt+0x1b4>
   10540:	bl	104b0 <strftime@plt>
   10544:	ldr	r2, [pc, #328]	; 10694 <abort@plt+0x1b4>
   10548:	ldr	r1, [pc, #328]	; 10698 <abort@plt+0x1b8>
   1054c:	mov	r0, #1
   10550:	bl	104d4 <__printf_chk@plt>
   10554:	ldr	r0, [pc, #320]	; 1069c <abort@plt+0x1bc>
   10558:	bl	10498 <puts@plt>
   1055c:	ldr	r0, [pc, #316]	; 106a0 <abort@plt+0x1c0>
   10560:	bl	10498 <puts@plt>
   10564:	ldr	r0, [pc, #312]	; 106a4 <abort@plt+0x1c4>
   10568:	bl	10498 <puts@plt>
   1056c:	ldr	r5, [pc, #308]	; 106a8 <abort@plt+0x1c8>
   10570:	mov	r4, #0
   10574:	b	1058c <abort@plt+0xac>
   10578:	add	r2, r4, #65	; 0x41
   1057c:	mov	r1, r5
   10580:	mov	r0, #1
   10584:	bl	104d4 <__printf_chk@plt>
   10588:	add	r4, r4, #1
   1058c:	cmp	r4, #25
   10590:	mov	r3, r4
   10594:	bls	10578 <abort@plt+0x98>
   10598:	add	r2, r4, #71	; 0x47
   1059c:	mov	r1, r5
   105a0:	mov	r0, #1
   105a4:	bl	104d4 <__printf_chk@plt>
   105a8:	cmp	r4, #31
   105ac:	bne	10588 <abort@plt+0xa8>
   105b0:	ldr	r0, [pc, #244]	; 106ac <abort@plt+0x1cc>
   105b4:	bl	10498 <puts@plt>
   105b8:	ldr	r0, [pc, #240]	; 106b0 <abort@plt+0x1d0>
   105bc:	bl	10498 <puts@plt>
   105c0:	mov	r5, #0
   105c4:	ldr	fp, [sp, #16]
   105c8:	ldr	sl, [pc, #228]	; 106b4 <abort@plt+0x1d4>
   105cc:	ldr	r7, [pc, #228]	; 106b8 <abort@plt+0x1d8>
   105d0:	b	105e0 <abort@plt+0x100>
   105d4:	ldr	r3, [sp, #20]
   105d8:	cmp	r3, r5
   105dc:	bne	10614 <abort@plt+0x134>
   105e0:	mov	r2, #12
   105e4:	add	r1, sp, r2
   105e8:	mov	r0, #0
   105ec:	bl	10468 <read@plt>
   105f0:	cmp	r0, #12
   105f4:	beq	105d4 <abort@plt+0xf4>
   105f8:	ldr	r2, [sp, #68]	; 0x44
   105fc:	ldr	r3, [r8]
   10600:	mov	r0, #0
   10604:	cmp	r2, r3
   10608:	bne	10688 <abort@plt+0x1a8>
   1060c:	add	sp, sp, #76	; 0x4c
   10610:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10614:	ldr	r2, [sp, #16]
   10618:	mov	r1, sl
   1061c:	sub	r2, r2, fp
   10620:	mov	r0, #1
   10624:	bl	104d4 <__printf_chk@plt>
   10628:	ldr	r9, [sp, #20]
   1062c:	mov	r4, #0
   10630:	eor	r5, r5, r9
   10634:	mov	r6, #1
   10638:	lsl	r3, r6, r4
   1063c:	tst	r3, r5
   10640:	beq	1066c <abort@plt+0x18c>
   10644:	ldr	r2, [sp, #20]
   10648:	mov	r1, r7
   1064c:	tst	r3, r2
   10650:	movne	r2, #49	; 0x31
   10654:	moveq	r2, #48	; 0x30
   10658:	cmp	r4, #25
   1065c:	addle	r3, r4, #65	; 0x41
   10660:	addgt	r3, r4, #71	; 0x47
   10664:	mov	r0, #1
   10668:	bl	104d4 <__printf_chk@plt>
   1066c:	add	r4, r4, #1
   10670:	cmp	r4, #32
   10674:	bne	10638 <abort@plt+0x158>
   10678:	mov	r5, r9
   1067c:	b	105e0 <abort@plt+0x100>
   10680:	mvn	r0, #0
   10684:	bl	104c8 <exit@plt>
   10688:	bl	10474 <__stack_chk_fail@plt>
   1068c:	andeq	r0, r2, r8, lsl #30
   10690:	andeq	r0, r1, ip, lsr #16
   10694:	andeq	r1, r2, r8, asr #32
   10698:	andeq	r0, r1, r4, lsr r8
   1069c:	andeq	r0, r1, r4, asr #16
   106a0:	andeq	r0, r1, r0, ror #16
   106a4:	andeq	r0, r1, r8, ror r8
   106a8:	muleq	r1, r0, r8
   106ac:	andeq	r0, r1, r8, lsr #17
   106b0:			; <UNDEFINED> instruction: 0x000108b8
   106b4:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   106b8:	ldrdeq	r0, [r1], -r8
   106bc:	mov	fp, #0
   106c0:	mov	lr, #0
   106c4:	pop	{r1}		; (ldr r1, [sp], #4)
   106c8:	mov	r2, sp
   106cc:	push	{r2}		; (str r2, [sp, #-4]!)
   106d0:	push	{r0}		; (str r0, [sp, #-4]!)
   106d4:	ldr	ip, [pc, #16]	; 106ec <abort@plt+0x20c>
   106d8:	push	{ip}		; (str ip, [sp, #-4]!)
   106dc:	ldr	r0, [pc, #12]	; 106f0 <abort@plt+0x210>
   106e0:	ldr	r3, [pc, #12]	; 106f4 <abort@plt+0x214>
   106e4:	bl	104a4 <__libc_start_main@plt>
   106e8:	bl	104e0 <abort@plt>
   106ec:	andeq	r0, r1, ip, lsl r8
   106f0:	andeq	r0, r1, ip, ror #9
   106f4:			; <UNDEFINED> instruction: 0x000107bc
   106f8:	ldr	r3, [pc, #20]	; 10714 <abort@plt+0x234>
   106fc:	ldr	r2, [pc, #20]	; 10718 <abort@plt+0x238>
   10700:	add	r3, pc, r3
   10704:	ldr	r2, [r3, r2]
   10708:	cmp	r2, #0
   1070c:	bxeq	lr
   10710:	b	104bc <__gmon_start__@plt>
   10714:	strdeq	r0, [r1], -r8
   10718:	andeq	r0, r0, r8, lsr r0
   1071c:	ldr	r0, [pc, #24]	; 1073c <abort@plt+0x25c>
   10720:	ldr	r3, [pc, #24]	; 10740 <abort@plt+0x260>
   10724:	cmp	r3, r0
   10728:	bxeq	lr
   1072c:	ldr	r3, [pc, #16]	; 10744 <abort@plt+0x264>
   10730:	cmp	r3, #0
   10734:	bxeq	lr
   10738:	bx	r3
   1073c:	andeq	r1, r2, r4, asr #32
   10740:	andeq	r1, r2, r4, asr #32
   10744:	andeq	r0, r0, r0
   10748:	ldr	r0, [pc, #36]	; 10774 <abort@plt+0x294>
   1074c:	ldr	r1, [pc, #36]	; 10778 <abort@plt+0x298>
   10750:	sub	r1, r1, r0
   10754:	asr	r1, r1, #2
   10758:	add	r1, r1, r1, lsr #31
   1075c:	asrs	r1, r1, #1
   10760:	bxeq	lr
   10764:	ldr	r3, [pc, #16]	; 1077c <abort@plt+0x29c>
   10768:	cmp	r3, #0
   1076c:	bxeq	lr
   10770:	bx	r3
   10774:	andeq	r1, r2, r4, asr #32
   10778:	andeq	r1, r2, r4, asr #32
   1077c:	andeq	r0, r0, r0
   10780:	push	{r4, lr}
   10784:	ldr	r4, [pc, #24]	; 107a4 <abort@plt+0x2c4>
   10788:	ldrb	r3, [r4]
   1078c:	cmp	r3, #0
   10790:	popne	{r4, pc}
   10794:	bl	1071c <abort@plt+0x23c>
   10798:	mov	r3, #1
   1079c:	strb	r3, [r4]
   107a0:	pop	{r4, pc}
   107a4:	andeq	r1, r2, r4, asr #32
   107a8:	b	10748 <abort@plt+0x268>
   107ac:	cmp	r0, #25
   107b0:	addle	r0, r0, #65	; 0x41
   107b4:	addgt	r0, r0, #71	; 0x47
   107b8:	bx	lr
   107bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   107c0:	mov	r7, r0
   107c4:	ldr	r6, [pc, #72]	; 10814 <abort@plt+0x334>
   107c8:	ldr	r5, [pc, #72]	; 10818 <abort@plt+0x338>
   107cc:	add	r6, pc, r6
   107d0:	add	r5, pc, r5
   107d4:	sub	r6, r6, r5
   107d8:	mov	r8, r1
   107dc:	mov	r9, r2
   107e0:	bl	10448 <read@plt-0x20>
   107e4:	asrs	r6, r6, #2
   107e8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   107ec:	mov	r4, #0
   107f0:	add	r4, r4, #1
   107f4:	ldr	r3, [r5], #4
   107f8:	mov	r2, r9
   107fc:	mov	r1, r8
   10800:	mov	r0, r7
   10804:	blx	r3
   10808:	cmp	r6, r4
   1080c:	bne	107f0 <abort@plt+0x310>
   10810:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10814:	andeq	r0, r1, r0, lsr r7
   10818:	andeq	r0, r1, r8, lsr #14
   1081c:	bx	lr

Disassembly of section .fini:

00010820 <.fini>:
   10820:	push	{r3, lr}
   10824:	pop	{r3, pc}
