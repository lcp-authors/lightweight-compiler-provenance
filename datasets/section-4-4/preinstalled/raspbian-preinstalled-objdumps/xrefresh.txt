
raspbian-preinstalled/xrefresh:     file format elf32-littlearm


Disassembly of section .init:

0001076c <.init>:
   1076c:	push	{r3, lr}
   10770:	bl	10fe4 <abort@plt+0x774>
   10774:	pop	{r3, pc}

Disassembly of section .plt:

00010778 <XGetDefault@plt-0x14>:
   10778:	push	{lr}		; (str lr, [sp, #-4]!)
   1077c:	ldr	lr, [pc, #4]	; 10788 <XGetDefault@plt-0x4>
   10780:	add	lr, pc, lr
   10784:	ldr	pc, [lr, #8]!
   10788:	andeq	r1, r1, r8, ror r8

0001078c <XGetDefault@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #69632	; 0x11000
   10794:	ldr	pc, [ip, #2168]!	; 0x878

00010798 <strcmp@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #69632	; 0x11000
   107a0:	ldr	pc, [ip, #2160]!	; 0x870

000107a4 <XAllocColor@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #69632	; 0x11000
   107ac:	ldr	pc, [ip, #2152]!	; 0x868

000107b0 <XParseGeometry@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #69632	; 0x11000
   107b8:	ldr	pc, [ip, #2144]!	; 0x860

000107bc <strdup@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #69632	; 0x11000
   107c4:	ldr	pc, [ip, #2136]!	; 0x858

000107c8 <strcasecmp@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #69632	; 0x11000
   107d0:	ldr	pc, [ip, #2128]!	; 0x850

000107d4 <puts@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #69632	; 0x11000
   107dc:	ldr	pc, [ip, #2120]!	; 0x848

000107e0 <__libc_start_main@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #69632	; 0x11000
   107e8:	ldr	pc, [ip, #2112]!	; 0x840

000107ec <XOpenDisplay@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #69632	; 0x11000
   107f4:	ldr	pc, [ip, #2104]!	; 0x838

000107f8 <__gmon_start__@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #69632	; 0x11000
   10800:	ldr	pc, [ip, #2096]!	; 0x830

00010804 <exit@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #69632	; 0x11000
   1080c:	ldr	pc, [ip, #2088]!	; 0x828

00010810 <strlen@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #69632	; 0x11000
   10818:	ldr	pc, [ip, #2080]!	; 0x820

0001081c <XDisplayName@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #69632	; 0x11000
   10824:	ldr	pc, [ip, #2072]!	; 0x818

00010828 <XCreateWindow@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #69632	; 0x11000
   10830:	ldr	pc, [ip, #2064]!	; 0x810

00010834 <__fprintf_chk@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #69632	; 0x11000
   1083c:	ldr	pc, [ip, #2056]!	; 0x808

00010840 <XMapWindow@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #69632	; 0x11000
   10848:	ldr	pc, [ip, #2048]!	; 0x800

0001084c <XParseColor@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #69632	; 0x11000
   10854:	ldr	pc, [ip, #2040]!	; 0x7f8

00010858 <XCloseDisplay@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #69632	; 0x11000
   10860:	ldr	pc, [ip, #2032]!	; 0x7f0

00010864 <strncmp@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #69632	; 0x11000
   1086c:	ldr	pc, [ip, #2024]!	; 0x7e8

00010870 <abort@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #69632	; 0x11000
   10878:	ldr	pc, [ip, #2016]!	; 0x7e0

Disassembly of section .text:

0001087c <.text>:
   1087c:	ldr	r5, [pc, #64]	; 108c4 <abort@plt+0x54>
   10880:	ldr	r4, [pc, #64]	; 108c8 <abort@plt+0x58>
   10884:	push	{lr}		; (str lr, [sp, #-4]!)
   10888:	sub	sp, sp, #12
   1088c:	ldr	r2, [pc, #56]	; 108cc <abort@plt+0x5c>
   10890:	ldr	r3, [r5]
   10894:	str	r2, [sp]
   10898:	mov	r1, #1
   1089c:	ldr	r2, [pc, #44]	; 108d0 <abort@plt+0x60>
   108a0:	ldr	r0, [r4]
   108a4:	bl	10834 <__fprintf_chk@plt>
   108a8:	ldr	r3, [r5]
   108ac:	ldr	r0, [r4]
   108b0:	ldr	r2, [pc, #28]	; 108d4 <abort@plt+0x64>
   108b4:	mov	r1, #1
   108b8:	bl	10834 <__fprintf_chk@plt>
   108bc:	mov	r0, #1
   108c0:	bl	10804 <exit@plt>
   108c4:	andeq	r2, r2, r0, ror r0
   108c8:	andeq	r2, r2, r8, rrx
   108cc:	andeq	r1, r1, r0, lsr #4
   108d0:	strdeq	r1, [r1], -r0
   108d4:			; <UNDEFINED> instruction: 0x000113b0
   108d8:	ldr	r2, [pc, #36]	; 10904 <abort@plt+0x94>
   108dc:	ldr	r3, [pc, #36]	; 10908 <abort@plt+0x98>
   108e0:	push	{lr}		; (str lr, [sp, #-4]!)
   108e4:	sub	sp, sp, #12
   108e8:	mov	r1, #1
   108ec:	str	r0, [sp]
   108f0:	ldr	r3, [r3]
   108f4:	ldr	r0, [r2]
   108f8:	ldr	r2, [pc, #12]	; 1090c <abort@plt+0x9c>
   108fc:	bl	10834 <__fprintf_chk@plt>
   10900:	bl	1087c <abort@plt+0xc>
   10904:	andeq	r2, r2, r8, rrx
   10908:	andeq	r2, r2, r0, ror r0
   1090c:	ldrdeq	r1, [r1], -r0
   10910:	ldr	r2, [pc, #36]	; 1093c <abort@plt+0xcc>
   10914:	ldr	r3, [pc, #36]	; 10940 <abort@plt+0xd0>
   10918:	push	{lr}		; (str lr, [sp, #-4]!)
   1091c:	sub	sp, sp, #12
   10920:	mov	r1, #1
   10924:	str	r0, [sp]
   10928:	ldr	r3, [r3]
   1092c:	ldr	r0, [r2]
   10930:	ldr	r2, [pc, #12]	; 10944 <abort@plt+0xd4>
   10934:	bl	10834 <__fprintf_chk@plt>
   10938:	bl	1087c <abort@plt+0xc>
   1093c:	andeq	r2, r2, r8, rrx
   10940:	andeq	r2, r2, r0, ror r0
   10944:	strdeq	r1, [r1], -r0
   10948:	ldr	r3, [pc, #1528]	; 10f48 <abort@plt+0x6d8>
   1094c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10950:	mov	r6, r1
   10954:	ldr	r2, [r1]
   10958:	ldr	r1, [pc, #1516]	; 10f4c <abort@plt+0x6dc>
   1095c:	sub	sp, sp, #172	; 0xac
   10960:	ldr	r3, [r3]
   10964:	cmp	r0, #1
   10968:	str	r2, [r1]
   1096c:	str	r3, [sp, #164]	; 0xa4
   10970:	ble	10c2c <abort@plt+0x3bc>
   10974:	mov	r9, #0
   10978:	mov	r7, r0
   1097c:	str	r9, [sp, #36]	; 0x24
   10980:	ldr	sl, [pc, #1480]	; 10f50 <abort@plt+0x6e0>
   10984:	mov	r8, r9
   10988:	str	r9, [sp, #32]
   1098c:	mov	r4, #1
   10990:	b	109ac <abort@plt+0x13c>
   10994:	cmp	r2, #61	; 0x3d
   10998:	bne	10f2c <abort@plt+0x6bc>
   1099c:	mov	r8, fp
   109a0:	add	r4, r4, #1
   109a4:	cmp	r7, r4
   109a8:	ble	109f8 <abort@plt+0x188>
   109ac:	ldr	fp, [r6, r4, lsl #2]
   109b0:	lsl	r5, r4, #2
   109b4:	ldrb	r2, [fp]
   109b8:	cmp	r2, #45	; 0x2d
   109bc:	bne	10994 <abort@plt+0x124>
   109c0:	mov	r2, #2
   109c4:	mov	r1, fp
   109c8:	mov	r0, sl
   109cc:	bl	11098 <abort@plt+0x828>
   109d0:	cmp	r0, #0
   109d4:	beq	10b10 <abort@plt+0x2a0>
   109d8:	add	r4, r4, #1
   109dc:	cmp	r7, r4
   109e0:	ble	10f40 <abort@plt+0x6d0>
   109e4:	add	r5, r6, r5
   109e8:	add	r4, r4, #1
   109ec:	cmp	r7, r4
   109f0:	ldr	r9, [r5, #4]
   109f4:	bgt	109ac <abort@plt+0x13c>
   109f8:	mov	r0, r9
   109fc:	bl	107ec <XOpenDisplay@plt>
   10a00:	cmp	r0, #0
   10a04:	beq	10e84 <abort@plt+0x614>
   10a08:	ldr	r3, [sp, #32]
   10a0c:	mov	r9, r0
   10a10:	cmp	r3, #0
   10a14:	beq	10c44 <abort@plt+0x3d4>
   10a18:	cmp	r8, #0
   10a1c:	beq	10dbc <abort@plt+0x54c>
   10a20:	ldr	r2, [r9, #132]	; 0x84
   10a24:	mov	r4, #80	; 0x50
   10a28:	ldr	r3, [r9, #140]	; 0x8c
   10a2c:	mul	r4, r4, r2
   10a30:	mov	r2, #0
   10a34:	add	r3, r3, r4
   10a38:	str	r2, [sp, #48]	; 0x30
   10a3c:	ldr	r1, [r3, #40]	; 0x28
   10a40:	ldr	r5, [r3, #12]
   10a44:	ldr	r6, [r3, #16]
   10a48:	ldr	r3, [r1, #28]
   10a4c:	ldr	r1, [sp, #32]
   10a50:	str	r5, [sp, #52]	; 0x34
   10a54:	cmp	r3, #2
   10a58:	cmple	r1, #3
   10a5c:	str	r6, [sp, #56]	; 0x38
   10a60:	str	r2, [sp, #44]	; 0x2c
   10a64:	beq	10dd8 <abort@plt+0x568>
   10a68:	cmp	r8, #0
   10a6c:	beq	10ae0 <abort@plt+0x270>
   10a70:	add	r3, sp, #56	; 0x38
   10a74:	str	r3, [sp]
   10a78:	mov	r0, r8
   10a7c:	add	r3, sp, #52	; 0x34
   10a80:	add	r2, sp, #48	; 0x30
   10a84:	add	r1, sp, #44	; 0x2c
   10a88:	bl	107b0 <XParseGeometry@plt>
   10a8c:	tst	r0, #16
   10a90:	beq	10ab4 <abort@plt+0x244>
   10a94:	ands	r3, r0, #4
   10a98:	ldr	r2, [sp, #44]	; 0x2c
   10a9c:	ldrne	r3, [sp, #52]	; 0x34
   10aa0:	addeq	r5, r5, r2
   10aa4:	subne	r3, r5, r3
   10aa8:	addne	r3, r3, r2
   10aac:	streq	r5, [sp, #52]	; 0x34
   10ab0:	str	r3, [sp, #44]	; 0x2c
   10ab4:	tst	r0, #32
   10ab8:	beq	10ae0 <abort@plt+0x270>
   10abc:	ands	r0, r0, #8
   10ac0:	ldr	r2, [sp, #48]	; 0x30
   10ac4:	ldrne	r3, [sp, #56]	; 0x38
   10ac8:	addeq	r6, r6, r2
   10acc:	subne	r3, r6, r3
   10ad0:	addne	r3, r3, r2
   10ad4:	strne	r3, [sp, #48]	; 0x30
   10ad8:	streq	r6, [sp, #56]	; 0x38
   10adc:	streq	r0, [sp, #48]	; 0x30
   10ae0:	ldr	r3, [r9, #140]	; 0x8c
   10ae4:	ldr	r1, [sp, #32]
   10ae8:	add	r2, r3, r4
   10aec:	cmp	r1, #5
   10af0:	ldrls	pc, [pc, r1, lsl #2]
   10af4:	b	10f34 <abort@plt+0x6c4>
   10af8:	andeq	r0, r1, r8, lsr #27
   10afc:	andeq	r0, r1, r8, lsl #27
   10b00:	muleq	r1, ip, sp
   10b04:	muleq	r1, ip, ip
   10b08:	andeq	r0, r1, r8, lsr #27
   10b0c:	andeq	r0, r1, ip, ror #25
   10b10:	mov	r2, #2
   10b14:	mov	r1, fp
   10b18:	ldr	r0, [pc, #1076]	; 10f54 <abort@plt+0x6e4>
   10b1c:	bl	11098 <abort@plt+0x828>
   10b20:	cmp	r0, #0
   10b24:	beq	10b40 <abort@plt+0x2d0>
   10b28:	add	r4, r4, #1
   10b2c:	cmp	r7, r4
   10b30:	ble	10f40 <abort@plt+0x6d0>
   10b34:	add	r5, r6, r5
   10b38:	ldr	r8, [r5, #4]
   10b3c:	b	109a0 <abort@plt+0x130>
   10b40:	mov	r2, #2
   10b44:	mov	r1, fp
   10b48:	ldr	r0, [pc, #1032]	; 10f58 <abort@plt+0x6e8>
   10b4c:	bl	11098 <abort@plt+0x828>
   10b50:	cmp	r0, #0
   10b54:	bne	10bac <abort@plt+0x33c>
   10b58:	mov	r2, #2
   10b5c:	mov	r1, fp
   10b60:	ldr	r0, [pc, #1012]	; 10f5c <abort@plt+0x6ec>
   10b64:	bl	11098 <abort@plt+0x828>
   10b68:	cmp	r0, #0
   10b6c:	bne	10c14 <abort@plt+0x3a4>
   10b70:	mov	r2, #2
   10b74:	mov	r1, fp
   10b78:	ldr	r0, [pc, #992]	; 10f60 <abort@plt+0x6f0>
   10b7c:	bl	11098 <abort@plt+0x828>
   10b80:	cmp	r0, #0
   10b84:	beq	10bb8 <abort@plt+0x348>
   10b88:	add	r4, r4, #1
   10b8c:	cmp	r7, r4
   10b90:	ble	10f40 <abort@plt+0x6d0>
   10b94:	add	r5, r6, r5
   10b98:	mov	r3, #3
   10b9c:	str	r3, [sp, #32]
   10ba0:	ldr	r3, [r5, #4]
   10ba4:	str	r3, [sp, #36]	; 0x24
   10ba8:	b	109a0 <abort@plt+0x130>
   10bac:	mov	r3, #1
   10bb0:	str	r3, [sp, #32]
   10bb4:	b	109a0 <abort@plt+0x130>
   10bb8:	mov	r2, #2
   10bbc:	mov	r1, fp
   10bc0:	ldr	r0, [pc, #924]	; 10f64 <abort@plt+0x6f4>
   10bc4:	bl	11098 <abort@plt+0x828>
   10bc8:	cmp	r0, #0
   10bcc:	bne	10c20 <abort@plt+0x3b0>
   10bd0:	mov	r2, #2
   10bd4:	mov	r1, fp
   10bd8:	ldr	r0, [pc, #904]	; 10f68 <abort@plt+0x6f8>
   10bdc:	bl	11098 <abort@plt+0x828>
   10be0:	cmp	r0, #0
   10be4:	bne	10e78 <abort@plt+0x608>
   10be8:	mov	r5, r0
   10bec:	mov	r2, #1
   10bf0:	mov	r1, fp
   10bf4:	ldr	r0, [pc, #880]	; 10f6c <abort@plt+0x6fc>
   10bf8:	bl	11098 <abort@plt+0x828>
   10bfc:	cmp	r0, #0
   10c00:	beq	10f2c <abort@plt+0x6bc>
   10c04:	ldr	r0, [pc, #868]	; 10f70 <abort@plt+0x700>
   10c08:	bl	107d4 <puts@plt>
   10c0c:	mov	r0, r5
   10c10:	bl	10804 <exit@plt>
   10c14:	mov	r3, #2
   10c18:	str	r3, [sp, #32]
   10c1c:	b	109a0 <abort@plt+0x130>
   10c20:	mov	r3, #4
   10c24:	str	r3, [sp, #32]
   10c28:	b	109a0 <abort@plt+0x130>
   10c2c:	mov	r0, #0
   10c30:	bl	107ec <XOpenDisplay@plt>
   10c34:	subs	r9, r0, #0
   10c38:	beq	10e84 <abort@plt+0x614>
   10c3c:	mov	r8, #0
   10c40:	str	r8, [sp, #36]	; 0x24
   10c44:	ldr	r3, [pc, #768]	; 10f4c <abort@plt+0x6dc>
   10c48:	ldr	r2, [pc, #804]	; 10f74 <abort@plt+0x704>
   10c4c:	mov	r0, r9
   10c50:	ldr	r1, [r3]
   10c54:	bl	1078c <XGetDefault@plt>
   10c58:	subs	fp, r0, #0
   10c5c:	beq	10ebc <abort@plt+0x64c>
   10c60:	bl	107bc <strdup@plt>
   10c64:	subs	r3, r0, #0
   10c68:	str	r3, [sp, #36]	; 0x24
   10c6c:	movne	r3, #3
   10c70:	strne	r3, [sp, #32]
   10c74:	bne	10a18 <abort@plt+0x1a8>
   10c78:	ldr	r1, [pc, #760]	; 10f78 <abort@plt+0x708>
   10c7c:	ldr	r3, [pc, #712]	; 10f4c <abort@plt+0x6dc>
   10c80:	ldr	r2, [pc, #756]	; 10f7c <abort@plt+0x70c>
   10c84:	ldr	r0, [r1]
   10c88:	ldr	r3, [r3]
   10c8c:	mov	r1, #1
   10c90:	bl	10834 <__fprintf_chk@plt>
   10c94:	mov	r0, #1
   10c98:	bl	10804 <exit@plt>
   10c9c:	ldr	r5, [r2, #48]	; 0x30
   10ca0:	add	r3, sp, #60	; 0x3c
   10ca4:	mov	r1, r5
   10ca8:	ldr	r2, [sp, #36]	; 0x24
   10cac:	mov	r0, r9
   10cb0:	bl	1084c <XParseColor@plt>
   10cb4:	cmp	r0, #0
   10cb8:	beq	10e3c <abort@plt+0x5cc>
   10cbc:	add	r2, sp, #60	; 0x3c
   10cc0:	mov	r1, r5
   10cc4:	mov	r0, r9
   10cc8:	bl	107a4 <XAllocColor@plt>
   10ccc:	cmp	r0, #0
   10cd0:	beq	10e3c <abort@plt+0x5cc>
   10cd4:	ldr	r3, [sp, #60]	; 0x3c
   10cd8:	mov	r2, #2
   10cdc:	str	r3, [sp, #108]	; 0x6c
   10ce0:	str	r2, [sp, #32]
   10ce4:	ldr	r3, [r9, #140]	; 0x8c
   10ce8:	b	10cf8 <abort@plt+0x488>
   10cec:	mov	fp, #1
   10cf0:	str	fp, [sp, #104]	; 0x68
   10cf4:	str	fp, [sp, #32]
   10cf8:	ldr	r2, [r9, #132]	; 0x84
   10cfc:	mov	r1, #80	; 0x50
   10d00:	add	r4, r3, r4
   10d04:	mla	r2, r1, r2, r3
   10d08:	ldr	r3, [sp, #32]
   10d0c:	add	r1, sp, #72	; 0x48
   10d10:	mov	r5, #0
   10d14:	str	r1, [sp, #20]
   10d18:	orr	fp, r3, #1600	; 0x640
   10d1c:	ldr	r1, [sp, #56]	; 0x38
   10d20:	mov	r3, #1
   10d24:	add	r0, sp, #104	; 0x68
   10d28:	str	r3, [sp, #152]	; 0x98
   10d2c:	str	r3, [sp, #16]
   10d30:	str	fp, [sp, #24]
   10d34:	str	r5, [sp, #140]	; 0x8c
   10d38:	str	r0, [sp, #28]
   10d3c:	ldr	r3, [sp, #52]	; 0x34
   10d40:	ldr	r0, [r4, #36]	; 0x24
   10d44:	str	r5, [sp, #128]	; 0x80
   10d48:	str	r0, [sp, #12]
   10d4c:	str	r3, [sp]
   10d50:	stmib	sp, {r1, r5}
   10d54:	ldr	r3, [sp, #48]	; 0x30
   10d58:	ldr	r1, [r2, #8]
   10d5c:	mov	r0, r9
   10d60:	ldr	r2, [sp, #44]	; 0x2c
   10d64:	str	r5, [sp, #76]	; 0x4c
   10d68:	bl	10828 <XCreateWindow@plt>
   10d6c:	mov	r1, r0
   10d70:	mov	r0, r9
   10d74:	bl	10840 <XMapWindow@plt>
   10d78:	mov	r0, r9
   10d7c:	bl	10858 <XCloseDisplay@plt>
   10d80:	mov	r0, r5
   10d84:	bl	10804 <exit@plt>
   10d88:	ldr	r2, [r2, #56]	; 0x38
   10d8c:	mov	r1, #2
   10d90:	str	r1, [sp, #32]
   10d94:	str	r2, [sp, #108]	; 0x6c
   10d98:	b	10cf8 <abort@plt+0x488>
   10d9c:	ldr	r2, [r2, #52]	; 0x34
   10da0:	str	r2, [sp, #108]	; 0x6c
   10da4:	b	10cf8 <abort@plt+0x488>
   10da8:	mov	r2, #0
   10dac:	str	r2, [sp, #104]	; 0x68
   10db0:	mov	r2, #1
   10db4:	str	r2, [sp, #32]
   10db8:	b	10cf8 <abort@plt+0x488>
   10dbc:	ldr	r3, [pc, #392]	; 10f4c <abort@plt+0x6dc>
   10dc0:	ldr	r2, [pc, #440]	; 10f80 <abort@plt+0x710>
   10dc4:	mov	r0, r9
   10dc8:	ldr	r1, [r3]
   10dcc:	bl	1078c <XGetDefault@plt>
   10dd0:	mov	r8, r0
   10dd4:	b	10a20 <abort@plt+0x1b0>
   10dd8:	ldr	r7, [sp, #36]	; 0x24
   10ddc:	ldr	r1, [pc, #416]	; 10f84 <abort@plt+0x714>
   10de0:	mov	r0, r7
   10de4:	bl	10798 <strcmp@plt>
   10de8:	cmp	r0, #0
   10dec:	moveq	r3, #1
   10df0:	streq	r3, [sp, #32]
   10df4:	beq	10a68 <abort@plt+0x1f8>
   10df8:	ldr	r1, [pc, #392]	; 10f88 <abort@plt+0x718>
   10dfc:	mov	r0, r7
   10e00:	bl	10798 <strcmp@plt>
   10e04:	cmp	r0, #0
   10e08:	moveq	r3, #2
   10e0c:	streq	r3, [sp, #32]
   10e10:	beq	10a68 <abort@plt+0x1f8>
   10e14:	ldr	r1, [pc, #348]	; 10f78 <abort@plt+0x708>
   10e18:	ldr	r3, [pc, #300]	; 10f4c <abort@plt+0x6dc>
   10e1c:	ldr	r2, [pc, #360]	; 10f8c <abort@plt+0x71c>
   10e20:	ldr	r0, [r1]
   10e24:	ldr	r3, [r3]
   10e28:	mov	r1, #1
   10e2c:	bl	10834 <__fprintf_chk@plt>
   10e30:	mov	r3, #4
   10e34:	str	r3, [sp, #32]
   10e38:	b	10a68 <abort@plt+0x1f8>
   10e3c:	ldr	r3, [sp, #36]	; 0x24
   10e40:	ldr	r2, [pc, #304]	; 10f78 <abort@plt+0x708>
   10e44:	str	r3, [sp]
   10e48:	ldr	r3, [pc, #252]	; 10f4c <abort@plt+0x6dc>
   10e4c:	ldr	r0, [r2]
   10e50:	mov	r1, #1
   10e54:	ldr	r3, [r3]
   10e58:	ldr	r2, [pc, #304]	; 10f90 <abort@plt+0x720>
   10e5c:	bl	10834 <__fprintf_chk@plt>
   10e60:	mov	r3, #0
   10e64:	str	r3, [sp, #104]	; 0x68
   10e68:	mov	r3, #1
   10e6c:	str	r3, [sp, #32]
   10e70:	ldr	r3, [r9, #140]	; 0x8c
   10e74:	b	10cf8 <abort@plt+0x488>
   10e78:	mov	r3, #5
   10e7c:	str	r3, [sp, #32]
   10e80:	b	109a0 <abort@plt+0x130>
   10e84:	ldr	r3, [pc, #236]	; 10f78 <abort@plt+0x708>
   10e88:	ldr	r2, [pc, #188]	; 10f4c <abort@plt+0x6dc>
   10e8c:	mov	r0, r9
   10e90:	ldr	r4, [r3]
   10e94:	ldr	r5, [r2]
   10e98:	bl	1081c <XDisplayName@plt>
   10e9c:	mov	r3, r5
   10ea0:	ldr	r2, [pc, #236]	; 10f94 <abort@plt+0x724>
   10ea4:	mov	r1, #1
   10ea8:	str	r0, [sp]
   10eac:	mov	r0, r4
   10eb0:	bl	10834 <__fprintf_chk@plt>
   10eb4:	mov	r0, #1
   10eb8:	bl	10804 <exit@plt>
   10ebc:	ldr	r5, [pc, #212]	; 10f98 <abort@plt+0x728>
   10ec0:	ldr	r2, [pc, #212]	; 10f9c <abort@plt+0x72c>
   10ec4:	ldr	r6, [pc, #212]	; 10fa0 <abort@plt+0x730>
   10ec8:	str	fp, [sp, #32]
   10ecc:	ldr	r3, [pc, #120]	; 10f4c <abort@plt+0x6dc>
   10ed0:	mov	r0, r9
   10ed4:	ldr	r1, [r3]
   10ed8:	bl	1078c <XGetDefault@plt>
   10edc:	subs	r7, r0, #0
   10ee0:	beq	10f1c <abort@plt+0x6ac>
   10ee4:	ldr	r4, [pc, #184]	; 10fa4 <abort@plt+0x734>
   10ee8:	mov	r1, r6
   10eec:	b	10efc <abort@plt+0x68c>
   10ef0:	ldr	r1, [r4, #8]!
   10ef4:	cmp	r1, #0
   10ef8:	beq	10f1c <abort@plt+0x6ac>
   10efc:	mov	r0, r7
   10f00:	bl	107c8 <strcasecmp@plt>
   10f04:	cmp	r0, #0
   10f08:	bne	10ef0 <abort@plt+0x680>
   10f0c:	ldr	r3, [r4, #4]
   10f10:	cmp	r3, #1
   10f14:	ldreq	r3, [r5, #4]
   10f18:	streq	r3, [sp, #32]
   10f1c:	ldr	r2, [r5, #8]!
   10f20:	cmp	r2, #0
   10f24:	bne	10ecc <abort@plt+0x65c>
   10f28:	b	10a18 <abort@plt+0x1a8>
   10f2c:	mov	r0, fp
   10f30:	bl	10910 <abort@plt+0xa0>
   10f34:	mov	r2, #0
   10f38:	str	r2, [sp, #32]
   10f3c:	b	10cf8 <abort@plt+0x488>
   10f40:	mov	r0, fp
   10f44:	bl	108d8 <abort@plt+0x68>
   10f48:	andeq	r1, r2, r0, lsl #30
   10f4c:	andeq	r2, r2, r0, ror r0
   10f50:	andeq	r1, r1, ip, lsl r4
   10f54:	andeq	r1, r1, r8, lsr #8
   10f58:	andeq	r1, r1, r4, lsr r4
   10f5c:	andeq	r1, r1, ip, lsr r4
   10f60:	andeq	r1, r1, r4, asr #8
   10f64:	andeq	r1, r1, ip, asr #8
   10f68:	andeq	r1, r1, r4, asr r4
   10f6c:	andeq	r1, r1, ip, asr r4
   10f70:	andeq	r1, r1, r8, ror #8
   10f74:	muleq	r1, ip, r4
   10f78:	andeq	r2, r2, r8, rrx
   10f7c:	andeq	r1, r1, r4, lsr #9
   10f80:	ldrdeq	r1, [r1], -r0
   10f84:	ldrdeq	r1, [r1], -ip
   10f88:	andeq	r1, r1, r4, ror #9
   10f8c:	andeq	r1, r1, ip, ror #9
   10f90:	andeq	r1, r1, ip, lsl r5
   10f94:	andeq	r1, r1, r8, ror r4
   10f98:	andeq	r1, r1, r0, lsl #3
   10f9c:	andeq	r1, r1, r0, lsl r4
   10fa0:	andeq	r1, r1, r8, lsl r4
   10fa4:	andeq	r1, r1, r8, lsr #3
   10fa8:	mov	fp, #0
   10fac:	mov	lr, #0
   10fb0:	pop	{r1}		; (ldr r1, [sp], #4)
   10fb4:	mov	r2, sp
   10fb8:	push	{r2}		; (str r2, [sp, #-4]!)
   10fbc:	push	{r0}		; (str r0, [sp, #-4]!)
   10fc0:	ldr	ip, [pc, #16]	; 10fd8 <abort@plt+0x768>
   10fc4:	push	{ip}		; (str ip, [sp, #-4]!)
   10fc8:	ldr	r0, [pc, #12]	; 10fdc <abort@plt+0x76c>
   10fcc:	ldr	r3, [pc, #12]	; 10fe0 <abort@plt+0x770>
   10fd0:	bl	107e0 <__libc_start_main@plt>
   10fd4:	bl	10870 <abort@plt>
   10fd8:	andeq	r1, r1, r0, ror r1
   10fdc:	andeq	r0, r1, r8, asr #18
   10fe0:	andeq	r1, r1, r0, lsl r1
   10fe4:	ldr	r3, [pc, #20]	; 11000 <abort@plt+0x790>
   10fe8:	ldr	r2, [pc, #20]	; 11004 <abort@plt+0x794>
   10fec:	add	r3, pc, r3
   10ff0:	ldr	r2, [r3, r2]
   10ff4:	cmp	r2, #0
   10ff8:	bxeq	lr
   10ffc:	b	107f8 <__gmon_start__@plt>
   11000:	andeq	r1, r1, ip
   11004:	andeq	r0, r0, ip, asr r0
   11008:	ldr	r0, [pc, #24]	; 11028 <abort@plt+0x7b8>
   1100c:	ldr	r3, [pc, #24]	; 1102c <abort@plt+0x7bc>
   11010:	cmp	r3, r0
   11014:	bxeq	lr
   11018:	ldr	r3, [pc, #16]	; 11030 <abort@plt+0x7c0>
   1101c:	cmp	r3, #0
   11020:	bxeq	lr
   11024:	bx	r3
   11028:	andeq	r2, r2, r8, rrx
   1102c:	andeq	r2, r2, r8, rrx
   11030:	andeq	r0, r0, r0
   11034:	ldr	r0, [pc, #36]	; 11060 <abort@plt+0x7f0>
   11038:	ldr	r1, [pc, #36]	; 11064 <abort@plt+0x7f4>
   1103c:	sub	r1, r1, r0
   11040:	asr	r1, r1, #2
   11044:	add	r1, r1, r1, lsr #31
   11048:	asrs	r1, r1, #1
   1104c:	bxeq	lr
   11050:	ldr	r3, [pc, #16]	; 11068 <abort@plt+0x7f8>
   11054:	cmp	r3, #0
   11058:	bxeq	lr
   1105c:	bx	r3
   11060:	andeq	r2, r2, r8, rrx
   11064:	andeq	r2, r2, r8, rrx
   11068:	andeq	r0, r0, r0
   1106c:	push	{r4, lr}
   11070:	ldr	r4, [pc, #24]	; 11090 <abort@plt+0x820>
   11074:	ldrb	r3, [r4]
   11078:	cmp	r3, #0
   1107c:	popne	{r4, pc}
   11080:	bl	11008 <abort@plt+0x798>
   11084:	mov	r3, #1
   11088:	strb	r3, [r4]
   1108c:	pop	{r4, pc}
   11090:	andeq	r2, r2, ip, rrx
   11094:	b	11034 <abort@plt+0x7c4>
   11098:	push	{r4, r5, r6, r7, r8, lr}
   1109c:	mov	r4, r2
   110a0:	mov	r5, r0
   110a4:	mov	r6, r1
   110a8:	bl	10798 <strcmp@plt>
   110ac:	cmp	r0, #0
   110b0:	beq	11108 <abort@plt+0x898>
   110b4:	mov	r0, r5
   110b8:	bl	10810 <strlen@plt>
   110bc:	mov	r7, r0
   110c0:	mov	r0, r6
   110c4:	bl	10810 <strlen@plt>
   110c8:	cmp	r4, r0
   110cc:	movls	r4, #0
   110d0:	movhi	r4, #1
   110d4:	cmp	r7, r0
   110d8:	orrls	r4, r4, #1
   110dc:	cmp	r4, #0
   110e0:	bne	11100 <abort@plt+0x890>
   110e4:	mov	r2, r0
   110e8:	mov	r1, r6
   110ec:	mov	r0, r5
   110f0:	bl	10864 <strncmp@plt>
   110f4:	clz	r0, r0
   110f8:	lsr	r0, r0, #5
   110fc:	pop	{r4, r5, r6, r7, r8, pc}
   11100:	mov	r0, #0
   11104:	pop	{r4, r5, r6, r7, r8, pc}
   11108:	mov	r0, #1
   1110c:	pop	{r4, r5, r6, r7, r8, pc}
   11110:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11114:	mov	r7, r0
   11118:	ldr	r6, [pc, #72]	; 11168 <abort@plt+0x8f8>
   1111c:	ldr	r5, [pc, #72]	; 1116c <abort@plt+0x8fc>
   11120:	add	r6, pc, r6
   11124:	add	r5, pc, r5
   11128:	sub	r6, r6, r5
   1112c:	mov	r8, r1
   11130:	mov	r9, r2
   11134:	bl	1076c <XGetDefault@plt-0x20>
   11138:	asrs	r6, r6, #2
   1113c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11140:	mov	r4, #0
   11144:	add	r4, r4, #1
   11148:	ldr	r3, [r5], #4
   1114c:	mov	r2, r9
   11150:	mov	r1, r8
   11154:	mov	r0, r7
   11158:	blx	r3
   1115c:	cmp	r6, r4
   11160:	bne	11144 <abort@plt+0x8d4>
   11164:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11168:	ldrdeq	r0, [r1], -r4
   1116c:	andeq	r0, r1, ip, asr #27
   11170:	bx	lr

Disassembly of section .fini:

00011174 <.fini>:
   11174:	push	{r3, lr}
   11178:	pop	{r3, pc}
