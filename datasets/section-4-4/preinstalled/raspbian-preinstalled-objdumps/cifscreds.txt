
raspbian-preinstalled/cifscreds:     file format elf32-littlearm


Disassembly of section .init:

00000a7c <_init@@Base>:
 a7c:	push	{r3, lr}
 a80:	bl	1038 <__snprintf_chk@plt+0x3f8>
 a84:	pop	{r3, pc}

Disassembly of section .plt:

00000a88 <__cxa_finalize@plt-0x14>:
 a88:	push	{lr}		; (str lr, [sp, #-4]!)
 a8c:	ldr	lr, [pc, #4]	; a98 <_init@@Base+0x1c>
 a90:	add	lr, pc, lr
 a94:	ldr	pc, [lr, #8]!
 a98:	andeq	r2, r1, r0, lsr #9

00000a9c <__cxa_finalize@plt>:
 a9c:	add	ip, pc, #0, 12
 aa0:	add	ip, ip, #73728	; 0x12000
 aa4:	ldr	pc, [ip, #1184]!	; 0x4a0

00000aa8 <basename@plt>:
 aa8:	add	ip, pc, #0, 12
 aac:	add	ip, ip, #73728	; 0x12000
 ab0:	ldr	pc, [ip, #1176]!	; 0x498

00000ab4 <getpwuid@plt>:
 ab4:	add	ip, pc, #0, 12
 ab8:	add	ip, ip, #73728	; 0x12000
 abc:	ldr	pc, [ip, #1168]!	; 0x490

00000ac0 <getuid@plt>:
 ac0:	add	ip, pc, #0, 12
 ac4:	add	ip, ip, #73728	; 0x12000
 ac8:	ldr	pc, [ip, #1160]!	; 0x488

00000acc <free@plt>:
 acc:	add	ip, pc, #0, 12
 ad0:	add	ip, ip, #73728	; 0x12000
 ad4:	ldr	pc, [ip, #1152]!	; 0x480

00000ad8 <memcpy@plt>:
 ad8:	add	ip, pc, #0, 12
 adc:	add	ip, ip, #73728	; 0x12000
 ae0:	ldr	pc, [ip, #1144]!	; 0x478

00000ae4 <memcmp@plt>:
 ae4:	add	ip, pc, #0, 12
 ae8:	add	ip, ip, #73728	; 0x12000
 aec:	ldr	pc, [ip, #1136]!	; 0x470

00000af0 <keyctl_search@plt>:
 af0:	add	ip, pc, #0, 12
 af4:	add	ip, ip, #73728	; 0x12000
 af8:	ldr	pc, [ip, #1128]!	; 0x468

00000afc <__stack_chk_fail@plt>:
 afc:	add	ip, pc, #0, 12
 b00:	add	ip, ip, #73728	; 0x12000
 b04:	ldr	pc, [ip, #1120]!	; 0x460

00000b08 <keyctl@plt>:
 b08:	add	ip, pc, #0, 12
 b0c:	add	ip, ip, #73728	; 0x12000
 b10:	ldr	pc, [ip, #1112]!	; 0x458

00000b14 <fwrite@plt>:
 b14:	add	ip, pc, #0, 12
 b18:	add	ip, ip, #73728	; 0x12000
 b1c:	ldr	pc, [ip, #1104]!	; 0x450

00000b20 <keyctl_describe_alloc@plt>:
 b20:	add	ip, pc, #0, 12
 b24:	add	ip, ip, #73728	; 0x12000
 b28:	ldr	pc, [ip, #1096]!	; 0x448

00000b2c <add_key@plt>:
 b2c:	add	ip, pc, #0, 12
 b30:	add	ip, ip, #73728	; 0x12000
 b34:	ldr	pc, [ip, #1088]!	; 0x440

00000b38 <puts@plt>:
 b38:	add	ip, pc, #0, 12
 b3c:	add	ip, ip, #73728	; 0x12000
 b40:	ldr	pc, [ip, #1080]!	; 0x438

00000b44 <__libc_start_main@plt>:
 b44:	add	ip, pc, #0, 12
 b48:	add	ip, ip, #73728	; 0x12000
 b4c:	ldr	pc, [ip, #1072]!	; 0x430

00000b50 <strerror@plt>:
 b50:	add	ip, pc, #0, 12
 b54:	add	ip, ip, #73728	; 0x12000
 b58:	ldr	pc, [ip, #1064]!	; 0x428

00000b5c <__gmon_start__@plt>:
 b5c:	add	ip, pc, #0, 12
 b60:	add	ip, ip, #73728	; 0x12000
 b64:	ldr	pc, [ip, #1056]!	; 0x420

00000b68 <getopt_long@plt>:
 b68:	add	ip, pc, #0, 12
 b6c:	add	ip, ip, #73728	; 0x12000
 b70:	ldr	pc, [ip, #1048]!	; 0x418

00000b74 <strlen@plt>:
 b74:	add	ip, pc, #0, 12
 b78:	add	ip, ip, #73728	; 0x12000
 b7c:	ldr	pc, [ip, #1040]!	; 0x410

00000b80 <strchr@plt>:
 b80:	add	ip, pc, #0, 12
 b84:	add	ip, ip, #73728	; 0x12000
 b88:	ldr	pc, [ip, #1032]!	; 0x408

00000b8c <getpass@plt>:
 b8c:	add	ip, pc, #0, 12
 b90:	add	ip, ip, #73728	; 0x12000
 b94:	ldr	pc, [ip, #1024]!	; 0x400

00000b98 <__errno_location@plt>:
 b98:	add	ip, pc, #0, 12
 b9c:	add	ip, ip, #73728	; 0x12000
 ba0:	ldr	pc, [ip, #1016]!	; 0x3f8

00000ba4 <__printf_chk@plt>:
 ba4:	add	ip, pc, #0, 12
 ba8:	add	ip, ip, #73728	; 0x12000
 bac:	ldr	pc, [ip, #1008]!	; 0x3f0

00000bb0 <__fprintf_chk@plt>:
 bb0:	add	ip, pc, #0, 12
 bb4:	add	ip, ip, #73728	; 0x12000
 bb8:	ldr	pc, [ip, #1000]!	; 0x3e8

00000bbc <keyctl_get_keyring_ID@plt>:
 bbc:	add	ip, pc, #0, 12
 bc0:	add	ip, ip, #73728	; 0x12000
 bc4:	ldr	pc, [ip, #992]!	; 0x3e0

00000bc8 <strnlen@plt>:
 bc8:	add	ip, pc, #0, 12
 bcc:	add	ip, ip, #73728	; 0x12000
 bd0:	ldr	pc, [ip, #984]!	; 0x3d8

00000bd4 <fputc@plt>:
 bd4:	add	ip, pc, #0, 12
 bd8:	add	ip, ip, #73728	; 0x12000
 bdc:	ldr	pc, [ip, #976]!	; 0x3d0

00000be0 <sscanf@plt>:
 be0:	add	ip, pc, #0, 12
 be4:	add	ip, ip, #73728	; 0x12000
 be8:	ldr	pc, [ip, #968]!	; 0x3c8

00000bec <keyctl_read_alloc@plt>:
 bec:	add	ip, pc, #0, 12
 bf0:	add	ip, ip, #73728	; 0x12000
 bf4:	ldr	pc, [ip, #960]!	; 0x3c0

00000bf8 <strpbrk@plt>:
 bf8:	add	ip, pc, #0, 12
 bfc:	add	ip, ip, #73728	; 0x12000
 c00:	ldr	pc, [ip, #952]!	; 0x3b8

00000c04 <freeaddrinfo@plt>:
 c04:	add	ip, pc, #0, 12
 c08:	add	ip, ip, #73728	; 0x12000
 c0c:	ldr	pc, [ip, #944]!	; 0x3b0

00000c10 <getaddrinfo@plt>:
 c10:	add	ip, pc, #0, 12
 c14:	add	ip, ip, #73728	; 0x12000
 c18:	ldr	pc, [ip, #936]!	; 0x3a8

00000c1c <inet_ntop@plt>:
 c1c:	add	ip, pc, #0, 12
 c20:	add	ip, ip, #73728	; 0x12000
 c24:	ldr	pc, [ip, #928]!	; 0x3a0

00000c28 <strncmp@plt>:
 c28:	add	ip, pc, #0, 12
 c2c:	add	ip, ip, #73728	; 0x12000
 c30:	ldr	pc, [ip, #920]!	; 0x398

00000c34 <abort@plt>:
 c34:	add	ip, pc, #0, 12
 c38:	add	ip, ip, #73728	; 0x12000
 c3c:	ldr	pc, [ip, #912]!	; 0x390

00000c40 <__snprintf_chk@plt>:
 c40:	add	ip, pc, #0, 12
 c44:	add	ip, ip, #73728	; 0x12000
 c48:	ldr	pc, [ip, #904]!	; 0x388

Disassembly of section .text:

00000c4c <.text>:
     c4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     c50:	sub	sp, sp, #36	; 0x24
     c54:	ldr	r7, [pc, #832]	; f9c <__snprintf_chk@plt+0x35c>
     c58:	ldr	r3, [pc, #832]	; fa0 <__snprintf_chk@plt+0x360>
     c5c:	add	r7, pc, r7
     c60:	add	r8, sp, #16
     c64:	ldr	r3, [r7, r3]
     c68:	mov	r5, r0
     c6c:	mov	r2, r3
     c70:	str	r3, [sp, #8]
     c74:	ldr	r2, [r2]
     c78:	mov	r3, #0
     c7c:	str	r2, [sp, #28]
     c80:	ldr	r0, [r1]
     c84:	mov	r2, #97	; 0x61
     c88:	str	r3, [r8, #8]
     c8c:	mov	r6, r1
     c90:	str	r3, [sp, #16]
     c94:	str	r3, [r8, #4]
     c98:	strb	r2, [sp, #24]
     c9c:	bl	aa8 <basename@plt>
     ca0:	cmp	r0, #0
     ca4:	beq	d40 <__snprintf_chk@plt+0x100>
     ca8:	ldr	r3, [pc, #756]	; fa4 <__snprintf_chk@plt+0x364>
     cac:	add	r3, pc, r3
     cb0:	str	r0, [r3]
     cb4:	cmp	r5, #1
     cb8:	beq	d18 <__snprintf_chk@plt+0xd8>
     cbc:	ldr	r4, [pc, #740]	; fa8 <__snprintf_chk@plt+0x368>
     cc0:	ldr	fp, [pc, #740]	; fac <__snprintf_chk@plt+0x36c>
     cc4:	add	r4, pc, r4
     cc8:	add	fp, pc, fp
     ccc:	add	sl, r4, #200	; 0xc8
     cd0:	mov	r9, #0
     cd4:	str	r9, [sp]
     cd8:	mov	r3, sl
     cdc:	mov	r2, fp
     ce0:	mov	r1, r6
     ce4:	mov	r0, r5
     ce8:	bl	b68 <getopt_long@plt>
     cec:	cmn	r0, #1
     cf0:	beq	d58 <__snprintf_chk@plt+0x118>
     cf4:	cmp	r0, #100	; 0x64
     cf8:	beq	d38 <__snprintf_chk@plt+0xf8>
     cfc:	cmp	r0, #117	; 0x75
     d00:	bne	d18 <__snprintf_chk@plt+0xd8>
     d04:	ldr	r3, [pc, #676]	; fb0 <__snprintf_chk@plt+0x370>
     d08:	ldr	r3, [r7, r3]
     d0c:	ldr	r3, [r3]
     d10:	str	r3, [sp, #20]
     d14:	b	cd4 <__snprintf_chk@plt+0x94>
     d18:	bl	115c <__snprintf_chk@plt+0x51c>
     d1c:	ldr	r3, [sp, #8]
     d20:	ldr	r2, [sp, #28]
     d24:	ldr	r3, [r3]
     d28:	cmp	r2, r3
     d2c:	bne	f98 <__snprintf_chk@plt+0x358>
     d30:	add	sp, sp, #36	; 0x24
     d34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     d38:	strb	r0, [sp, #24]
     d3c:	b	cd4 <__snprintf_chk@plt+0x94>
     d40:	ldr	r3, [pc, #620]	; fb4 <__snprintf_chk@plt+0x374>
     d44:	ldr	r2, [pc, #620]	; fb8 <__snprintf_chk@plt+0x378>
     d48:	add	r3, pc, r3
     d4c:	add	r2, pc, r2
     d50:	str	r2, [r3]
     d54:	b	cb4 <__snprintf_chk@plt+0x74>
     d58:	ldr	r3, [pc, #604]	; fbc <__snprintf_chk@plt+0x37c>
     d5c:	ldr	r3, [r7, r3]
     d60:	ldr	r3, [r3]
     d64:	cmp	r3, r5
     d68:	bge	d18 <__snprintf_chk@plt+0xd8>
     d6c:	ldr	sl, [r6, r3, lsl #2]
     d70:	mov	r1, #32
     d74:	lsl	r3, r3, #2
     d78:	mov	r0, sl
     d7c:	str	r3, [sp, #12]
     d80:	bl	bc8 <strnlen@plt>
     d84:	ldr	r3, [r4]
     d88:	cmp	r3, #0
     d8c:	mov	r9, r0
     d90:	beq	f1c <__snprintf_chk@plt+0x2dc>
     d94:	add	r4, r4, #4
     d98:	mov	fp, #0
     d9c:	mov	r2, r9
     da0:	mov	r1, sl
     da4:	mov	r0, r4
     da8:	bl	ae4 <memcmp@plt>
     dac:	sub	r3, r4, #4
     db0:	cmp	r0, #0
     db4:	bne	dd0 <__snprintf_chk@plt+0x190>
     db8:	ldrb	r2, [r4, r9]
     dbc:	cmp	r2, #0
     dc0:	beq	e78 <__snprintf_chk@plt+0x238>
     dc4:	cmp	fp, #0
     dc8:	bne	e80 <__snprintf_chk@plt+0x240>
     dcc:	mov	fp, r3
     dd0:	add	r4, r4, #40	; 0x28
     dd4:	ldr	r3, [r4, #-4]
     dd8:	cmp	r3, #0
     ddc:	bne	d9c <__snprintf_chk@plt+0x15c>
     de0:	cmp	fp, #0
     de4:	beq	f1c <__snprintf_chk@plt+0x2dc>
     de8:	cmp	r5, #2
     dec:	ldrgt	r3, [sp, #12]
     df0:	addgt	r6, r6, r3
     df4:	ldrgt	r3, [r6, #4]
     df8:	strgt	r3, [sp, #16]
     dfc:	ldr	r0, [sp, #16]
     e00:	cmp	r0, #0
     e04:	beq	e14 <__snprintf_chk@plt+0x1d4>
     e08:	ldrb	r3, [sp, #24]
     e0c:	cmp	r3, #100	; 0x64
     e10:	beq	ee0 <__snprintf_chk@plt+0x2a0>
     e14:	ldr	r3, [sp, #20]
     e18:	cmp	r3, #0
     e1c:	beq	f44 <__snprintf_chk@plt+0x304>
     e20:	mov	r1, #0
     e24:	mvn	r0, #2
     e28:	bl	bbc <keyctl_get_keyring_ID@plt>
     e2c:	cmn	r0, #1
     e30:	mov	r4, r0
     e34:	bne	ea8 <__snprintf_chk@plt+0x268>
     e38:	bl	b98 <__errno_location@plt>
     e3c:	ldr	r3, [pc, #380]	; fc0 <__snprintf_chk@plt+0x380>
     e40:	ldr	r3, [r7, r3]
     e44:	ldr	r4, [r3]
     e48:	ldr	r0, [r0]
     e4c:	cmp	r0, #126	; 0x7e
     e50:	beq	f54 <__snprintf_chk@plt+0x314>
     e54:	bl	b50 <strerror@plt>
     e58:	ldr	r2, [pc, #356]	; fc4 <__snprintf_chk@plt+0x384>
     e5c:	mov	r1, #1
     e60:	add	r2, pc, r2
     e64:	mov	r3, r0
     e68:	mov	r0, r4
     e6c:	bl	bb0 <__fprintf_chk@plt>
     e70:	mov	r0, #1
     e74:	b	d1c <__snprintf_chk@plt+0xdc>
     e78:	mov	fp, r3
     e7c:	b	de8 <__snprintf_chk@plt+0x1a8>
     e80:	ldr	r3, [pc, #312]	; fc0 <__snprintf_chk@plt+0x380>
     e84:	ldr	r0, [pc, #316]	; fc8 <__snprintf_chk@plt+0x388>
     e88:	mov	r2, #18
     e8c:	ldr	r3, [r7, r3]
     e90:	mov	r1, #1
     e94:	add	r0, pc, r0
     e98:	ldr	r3, [r3]
     e9c:	bl	b14 <fwrite@plt>
     ea0:	mov	r0, #1
     ea4:	b	d1c <__snprintf_chk@plt+0xdc>
     ea8:	mov	r1, #0
     eac:	mvn	r0, #4
     eb0:	bl	bbc <keyctl_get_keyring_ID@plt>
     eb4:	cmn	r0, #1
     eb8:	sub	r3, r4, r0
     ebc:	clz	r3, r3
     ec0:	lsr	r3, r3, #5
     ec4:	moveq	r3, #0
     ec8:	cmp	r3, #0
     ecc:	bne	f74 <__snprintf_chk@plt+0x334>
     ed0:	ldr	r3, [fp]
     ed4:	mov	r0, r8
     ed8:	blx	r3
     edc:	b	d1c <__snprintf_chk@plt+0xdc>
     ee0:	ldr	r1, [pc, #228]	; fcc <__snprintf_chk@plt+0x38c>
     ee4:	add	r1, pc, r1
     ee8:	bl	bf8 <strpbrk@plt>
     eec:	cmp	r0, #0
     ef0:	beq	e14 <__snprintf_chk@plt+0x1d4>
     ef4:	ldr	r3, [pc, #196]	; fc0 <__snprintf_chk@plt+0x380>
     ef8:	ldr	r0, [pc, #208]	; fd0 <__snprintf_chk@plt+0x390>
     efc:	mov	r2, #47	; 0x2f
     f00:	ldr	r3, [r7, r3]
     f04:	mov	r1, #1
     f08:	add	r0, pc, r0
     f0c:	ldr	r3, [r3]
     f10:	bl	b14 <fwrite@plt>
     f14:	mov	r0, #1
     f18:	b	d1c <__snprintf_chk@plt+0xdc>
     f1c:	ldr	r3, [pc, #156]	; fc0 <__snprintf_chk@plt+0x380>
     f20:	ldr	r0, [pc, #172]	; fd4 <__snprintf_chk@plt+0x394>
     f24:	mov	r2, #16
     f28:	ldr	r3, [r7, r3]
     f2c:	mov	r1, #1
     f30:	add	r0, pc, r0
     f34:	ldr	r3, [r3]
     f38:	bl	b14 <fwrite@plt>
     f3c:	mov	r0, #1
     f40:	b	d1c <__snprintf_chk@plt+0xdc>
     f44:	bl	ac0 <getuid@plt>
     f48:	bl	2100 <__snprintf_chk@plt+0x14c0>
     f4c:	str	r0, [sp, #20]
     f50:	b	e20 <__snprintf_chk@plt+0x1e0>
     f54:	ldr	r0, [pc, #124]	; fd8 <__snprintf_chk@plt+0x398>
     f58:	mov	r3, r4
     f5c:	mov	r2, #79	; 0x4f
     f60:	mov	r1, #1
     f64:	add	r0, pc, r0
     f68:	bl	b14 <fwrite@plt>
     f6c:	mov	r0, #1
     f70:	b	d1c <__snprintf_chk@plt+0xdc>
     f74:	ldr	r3, [pc, #68]	; fc0 <__snprintf_chk@plt+0x380>
     f78:	ldr	r0, [pc, #92]	; fdc <__snprintf_chk@plt+0x39c>
     f7c:	mov	r2, #127	; 0x7f
     f80:	ldr	r3, [r7, r3]
     f84:	mov	r1, #1
     f88:	add	r0, pc, r0
     f8c:	ldr	r3, [r3]
     f90:	bl	b14 <fwrite@plt>
     f94:	b	ed0 <__snprintf_chk@plt+0x290>
     f98:	bl	afc <__stack_chk_fail@plt>
     f9c:	ldrdeq	r2, [r1], -r4
     fa0:	andeq	r0, r0, r8, lsr #1
     fa4:	andeq	r2, r1, r0, asr r4
     fa8:	andeq	r2, r1, ip, lsr r3
     fac:			; <UNDEFINED> instruction: 0x000017bc
     fb0:	andeq	r0, r0, r4, asr #1
     fb4:			; <UNDEFINED> instruction: 0x000123b4
     fb8:	andeq	r1, r0, ip, lsr #14
     fbc:	andeq	r0, r0, ip, lsr #1
     fc0:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
     fc4:	ldrdeq	r1, [r0], -ip
     fc8:	strdeq	r1, [r0], -r4
     fcc:	andeq	r1, r0, ip, asr #11
     fd0:			; <UNDEFINED> instruction: 0x000015b4
     fd4:	andeq	r1, r0, ip, ror #10
     fd8:	andeq	r1, r0, r8, lsl #11
     fdc:	andeq	r1, r0, r0, ror #11
     fe0:	mov	fp, #0
     fe4:	mov	lr, #0
     fe8:	pop	{r1}		; (ldr r1, [sp], #4)
     fec:	mov	r2, sp
     ff0:	push	{r2}		; (str r2, [sp, #-4]!)
     ff4:	push	{r0}		; (str r0, [sp, #-4]!)
     ff8:	ldr	sl, [pc, #40]	; 1028 <__snprintf_chk@plt+0x3e8>
     ffc:	add	r3, pc, #36	; 0x24
    1000:	add	sl, sl, r3
    1004:	ldr	ip, [pc, #32]	; 102c <__snprintf_chk@plt+0x3ec>
    1008:	ldr	ip, [sl, ip]
    100c:	push	{ip}		; (str ip, [sp, #-4]!)
    1010:	ldr	r3, [pc, #24]	; 1030 <__snprintf_chk@plt+0x3f0>
    1014:	ldr	r3, [sl, r3]
    1018:	ldr	r0, [pc, #20]	; 1034 <__snprintf_chk@plt+0x3f4>
    101c:	ldr	r0, [sl, r0]
    1020:	bl	b44 <__libc_start_main@plt>
    1024:	bl	c34 <abort@plt>
    1028:	andeq	r1, r1, r0, lsl pc
    102c:	muleq	r0, ip, r0
    1030:	strheq	r0, [r0], -r8
    1034:	strheq	r0, [r0], -ip
    1038:	ldr	r3, [pc, #20]	; 1054 <__snprintf_chk@plt+0x414>
    103c:	ldr	r2, [pc, #20]	; 1058 <__snprintf_chk@plt+0x418>
    1040:	add	r3, pc, r3
    1044:	ldr	r2, [r3, r2]
    1048:	cmp	r2, #0
    104c:	bxeq	lr
    1050:	b	b5c <__gmon_start__@plt>
    1054:	strdeq	r1, [r1], -r0
    1058:	strheq	r0, [r0], -r4
    105c:	ldr	r0, [pc, #44]	; 1090 <__snprintf_chk@plt+0x450>
    1060:	ldr	r3, [pc, #44]	; 1094 <__snprintf_chk@plt+0x454>
    1064:	add	r0, pc, r0
    1068:	add	r3, pc, r3
    106c:	cmp	r3, r0
    1070:	ldr	r3, [pc, #32]	; 1098 <__snprintf_chk@plt+0x458>
    1074:	add	r3, pc, r3
    1078:	bxeq	lr
    107c:	ldr	r2, [pc, #24]	; 109c <__snprintf_chk@plt+0x45c>
    1080:	ldr	r3, [r3, r2]
    1084:	cmp	r3, #0
    1088:	bxeq	lr
    108c:	bx	r3
    1090:	muleq	r1, r4, r0
    1094:	muleq	r1, r0, r0
    1098:			; <UNDEFINED> instruction: 0x00011ebc
    109c:	andeq	r0, r0, r4, lsr #1
    10a0:	ldr	r0, [pc, #56]	; 10e0 <__snprintf_chk@plt+0x4a0>
    10a4:	ldr	r3, [pc, #56]	; 10e4 <__snprintf_chk@plt+0x4a4>
    10a8:	add	r0, pc, r0
    10ac:	add	r3, pc, r3
    10b0:	sub	r1, r3, r0
    10b4:	ldr	r3, [pc, #44]	; 10e8 <__snprintf_chk@plt+0x4a8>
    10b8:	asr	r1, r1, #2
    10bc:	add	r3, pc, r3
    10c0:	add	r1, r1, r1, lsr #31
    10c4:	asrs	r1, r1, #1
    10c8:	bxeq	lr
    10cc:	ldr	r2, [pc, #24]	; 10ec <__snprintf_chk@plt+0x4ac>
    10d0:	ldr	r3, [r3, r2]
    10d4:	cmp	r3, #0
    10d8:	bxeq	lr
    10dc:	bx	r3
    10e0:	andeq	r2, r1, r0, asr r0
    10e4:	andeq	r2, r1, ip, asr #32
    10e8:	andeq	r1, r1, r4, ror lr
    10ec:	andeq	r0, r0, r0, asr #1
    10f0:	ldr	r3, [pc, #76]	; 1144 <__snprintf_chk@plt+0x504>
    10f4:	ldr	r2, [pc, #76]	; 1148 <__snprintf_chk@plt+0x508>
    10f8:	add	r3, pc, r3
    10fc:	add	r2, pc, r2
    1100:	ldrb	r3, [r3]
    1104:	cmp	r3, #0
    1108:	bxne	lr
    110c:	ldr	r3, [pc, #56]	; 114c <__snprintf_chk@plt+0x50c>
    1110:	push	{r4, lr}
    1114:	ldr	r3, [r2, r3]
    1118:	cmp	r3, #0
    111c:	beq	112c <__snprintf_chk@plt+0x4ec>
    1120:	ldr	r3, [pc, #40]	; 1150 <__snprintf_chk@plt+0x510>
    1124:	ldr	r0, [pc, r3]
    1128:	bl	a9c <__cxa_finalize@plt>
    112c:	bl	105c <__snprintf_chk@plt+0x41c>
    1130:	ldr	r3, [pc, #28]	; 1154 <__snprintf_chk@plt+0x514>
    1134:	mov	r2, #1
    1138:	add	r3, pc, r3
    113c:	strb	r2, [r3]
    1140:	pop	{r4, pc}
    1144:	andeq	r2, r1, r0
    1148:	andeq	r1, r1, r4, lsr lr
    114c:	andeq	r0, r0, r0, lsr #1
    1150:	ldrdeq	r1, [r1], -r8
    1154:	andeq	r1, r1, r0, asr #31
    1158:	b	10a0 <__snprintf_chk@plt+0x460>
    115c:	ldr	r3, [pc, #152]	; 11fc <__snprintf_chk@plt+0x5bc>
    1160:	ldr	r0, [pc, #152]	; 1200 <__snprintf_chk@plt+0x5c0>
    1164:	add	r3, pc, r3
    1168:	push	{r4, r5, r6, r7, lr}
    116c:	mov	r2, #7
    1170:	ldr	r5, [r3, r0]
    1174:	ldr	r4, [pc, #136]	; 1204 <__snprintf_chk@plt+0x5c4>
    1178:	ldr	r0, [pc, #136]	; 1208 <__snprintf_chk@plt+0x5c8>
    117c:	add	r4, pc, r4
    1180:	sub	sp, sp, #12
    1184:	mov	r1, #1
    1188:	add	r0, pc, r0
    118c:	ldr	r3, [r5]
    1190:	bl	b14 <fwrite@plt>
    1194:	ldr	r3, [r4]
    1198:	cmp	r3, #0
    119c:	beq	11e4 <__snprintf_chk@plt+0x5a4>
    11a0:	ldr	r7, [pc, #100]	; 120c <__snprintf_chk@plt+0x5cc>
    11a4:	ldr	r6, [pc, #100]	; 1210 <__snprintf_chk@plt+0x5d0>
    11a8:	add	r7, pc, r7
    11ac:	add	r6, pc, r6
    11b0:	add	r4, r4, #4
    11b4:	ldr	r2, [r4, #32]
    11b8:	ldr	r3, [r7]
    11bc:	ldr	r0, [r5]
    11c0:	str	r4, [sp]
    11c4:	add	r4, r4, #40	; 0x28
    11c8:	str	r2, [sp, #4]
    11cc:	mov	r1, #1
    11d0:	mov	r2, r6
    11d4:	bl	bb0 <__fprintf_chk@plt>
    11d8:	ldr	r3, [r4, #-4]
    11dc:	cmp	r3, #0
    11e0:	bne	11b4 <__snprintf_chk@plt+0x574>
    11e4:	ldr	r1, [r5]
    11e8:	mov	r0, #10
    11ec:	bl	bd4 <fputc@plt>
    11f0:	mov	r0, #1
    11f4:	add	sp, sp, #12
    11f8:	pop	{r4, r5, r6, r7, pc}
    11fc:	andeq	r1, r1, ip, asr #27
    1200:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    1204:	andeq	r1, r1, r4, lsl #29
    1208:	strdeq	r0, [r0], -r4
    120c:	andeq	r1, r1, r4, asr pc
    1210:	ldrdeq	r0, [r0], -r8
    1214:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1218:	mov	r4, r0
    121c:	ldr	r5, [pc, #608]	; 1484 <__snprintf_chk@plt+0x844>
    1220:	ldr	r3, [pc, #608]	; 1488 <__snprintf_chk@plt+0x848>
    1224:	add	r5, pc, r5
    1228:	ldr	r0, [r0]
    122c:	ldr	r7, [r5, r3]
    1230:	sub	sp, sp, #844	; 0x34c
    1234:	cmp	r0, #0
    1238:	ldr	r3, [r7]
    123c:	str	r3, [sp, #836]	; 0x344
    1240:	beq	1338 <__snprintf_chk@plt+0x6f8>
    1244:	ldr	r3, [r4, #4]
    1248:	cmp	r3, #0
    124c:	beq	1338 <__snprintf_chk@plt+0x6f8>
    1250:	ldrb	r3, [r4, #8]
    1254:	add	r8, sp, #84	; 0x54
    1258:	cmp	r3, #100	; 0x64
    125c:	beq	12a4 <__snprintf_chk@plt+0x664>
    1260:	mov	r1, r8
    1264:	bl	1e68 <__snprintf_chk@plt+0x1228>
    1268:	cmp	r0, #1
    126c:	mov	r6, r0
    1270:	beq	1410 <__snprintf_chk@plt+0x7d0>
    1274:	cmp	r0, #2
    1278:	bne	12b4 <__snprintf_chk@plt+0x674>
    127c:	ldr	r3, [pc, #520]	; 148c <__snprintf_chk@plt+0x84c>
    1280:	ldr	r0, [pc, #520]	; 1490 <__snprintf_chk@plt+0x850>
    1284:	mov	r1, #1
    1288:	ldr	r3, [r5, r3]
    128c:	mov	r2, #36	; 0x24
    1290:	add	r0, pc, r0
    1294:	ldr	r3, [r3]
    1298:	mov	r6, r1
    129c:	bl	b14 <fwrite@plt>
    12a0:	b	1340 <__snprintf_chk@plt+0x700>
    12a4:	mov	r1, r0
    12a8:	mov	r2, #752	; 0x2f0
    12ac:	mov	r0, r8
    12b0:	bl	202c <__snprintf_chk@plt+0x13ec>
    12b4:	ldr	r1, [pc, #472]	; 1494 <__snprintf_chk@plt+0x854>
    12b8:	ldr	r0, [r4, #4]
    12bc:	add	r1, pc, r1
    12c0:	bl	bf8 <strpbrk@plt>
    12c4:	subs	r6, r0, #0
    12c8:	bne	135c <__snprintf_chk@plt+0x71c>
    12cc:	mov	r1, #44	; 0x2c
    12d0:	mov	r0, r8
    12d4:	bl	b80 <strchr@plt>
    12d8:	subs	r9, r0, #0
    12dc:	strbne	r6, [r9]
    12e0:	mov	r6, #0
    12e4:	addne	r9, r9, #1
    12e8:	mov	sl, r6
    12ec:	ldrb	r1, [r4, #8]
    12f0:	mov	r0, r8
    12f4:	bl	1ca4 <__snprintf_chk@plt+0x1064>
    12f8:	cmp	r0, #0
    12fc:	addgt	r3, sp, #840	; 0x348
    1300:	addgt	r3, r3, r6, lsl #2
    1304:	addgt	r6, r6, #1
    1308:	strgt	r8, [r3, #-820]	; 0xfffffccc
    130c:	cmp	r9, #0
    1310:	beq	1384 <__snprintf_chk@plt+0x744>
    1314:	mov	r0, r9
    1318:	mov	r1, #44	; 0x2c
    131c:	bl	b80 <strchr@plt>
    1320:	mov	r8, r9
    1324:	cmp	r0, #0
    1328:	strbne	sl, [r0]
    132c:	addne	r0, r0, #1
    1330:	mov	r9, r0
    1334:	b	12ec <__snprintf_chk@plt+0x6ac>
    1338:	bl	115c <__snprintf_chk@plt+0x51c>
    133c:	mov	r6, r0
    1340:	ldr	r2, [sp, #836]	; 0x344
    1344:	ldr	r3, [r7]
    1348:	mov	r0, r6
    134c:	cmp	r2, r3
    1350:	bne	1480 <__snprintf_chk@plt+0x840>
    1354:	add	sp, sp, #844	; 0x34c
    1358:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    135c:	ldr	r3, [pc, #296]	; 148c <__snprintf_chk@plt+0x84c>
    1360:	ldr	r0, [pc, #304]	; 1498 <__snprintf_chk@plt+0x858>
    1364:	mov	r1, #1
    1368:	ldr	r3, [r5, r3]
    136c:	mov	r2, #26
    1370:	add	r0, pc, r0
    1374:	ldr	r3, [r3]
    1378:	mov	r6, r1
    137c:	bl	b14 <fwrite@plt>
    1380:	b	1340 <__snprintf_chk@plt+0x700>
    1384:	cmp	r6, #0
    1388:	beq	143c <__snprintf_chk@plt+0x7fc>
    138c:	ldr	r0, [pc, #264]	; 149c <__snprintf_chk@plt+0x85c>
    1390:	ldr	r3, [pc, #264]	; 14a0 <__snprintf_chk@plt+0x860>
    1394:	add	r0, pc, r0
    1398:	add	r3, pc, r3
    139c:	str	r3, [sp, #12]
    13a0:	bl	b8c <getpass@plt>
    13a4:	add	r8, sp, #20
    13a8:	add	r6, r8, r6, lsl #2
    13ac:	mov	sl, r0
    13b0:	b	13bc <__snprintf_chk@plt+0x77c>
    13b4:	cmp	r8, r6
    13b8:	beq	1434 <__snprintf_chk@plt+0x7f4>
    13bc:	ldr	r9, [r8], #4
    13c0:	ldrb	r3, [r4, #8]
    13c4:	mov	r0, r9
    13c8:	mov	r2, sl
    13cc:	ldr	r1, [r4, #4]
    13d0:	bl	1d64 <__snprintf_chk@plt+0x1124>
    13d4:	cmp	r0, #0
    13d8:	bgt	13b4 <__snprintf_chk@plt+0x774>
    13dc:	ldr	r3, [pc, #168]	; 148c <__snprintf_chk@plt+0x84c>
    13e0:	ldr	r3, [r5, r3]
    13e4:	ldr	fp, [r3]
    13e8:	bl	b98 <__errno_location@plt>
    13ec:	ldr	r0, [r0]
    13f0:	bl	b50 <strerror@plt>
    13f4:	mov	r3, r9
    13f8:	ldr	r2, [sp, #12]
    13fc:	mov	r1, #1
    1400:	str	r0, [sp]
    1404:	mov	r0, fp
    1408:	bl	bb0 <__fprintf_chk@plt>
    140c:	b	13b4 <__snprintf_chk@plt+0x774>
    1410:	ldr	r1, [pc, #116]	; 148c <__snprintf_chk@plt+0x84c>
    1414:	ldr	r2, [pc, #136]	; 14a4 <__snprintf_chk@plt+0x864>
    1418:	ldr	r3, [r4]
    141c:	ldr	r0, [r5, r1]
    1420:	add	r2, pc, r2
    1424:	mov	r1, r6
    1428:	ldr	r0, [r0]
    142c:	bl	bb0 <__fprintf_chk@plt>
    1430:	b	1340 <__snprintf_chk@plt+0x700>
    1434:	mov	r6, #0
    1438:	b	1340 <__snprintf_chk@plt+0x700>
    143c:	ldr	r1, [pc, #100]	; 14a8 <__snprintf_chk@plt+0x868>
    1440:	ldr	r2, [r4]
    1444:	add	r1, pc, r1
    1448:	mov	r0, #1
    144c:	bl	ba4 <__printf_chk@plt>
    1450:	ldr	r0, [pc, #84]	; 14ac <__snprintf_chk@plt+0x86c>
    1454:	mov	r6, #1
    1458:	add	r0, pc, r0
    145c:	bl	b38 <puts@plt>
    1460:	ldr	r3, [pc, #72]	; 14b0 <__snprintf_chk@plt+0x870>
    1464:	ldr	r1, [pc, #72]	; 14b4 <__snprintf_chk@plt+0x874>
    1468:	add	r3, pc, r3
    146c:	add	r1, pc, r1
    1470:	mov	r0, #1
    1474:	ldr	r2, [r3]
    1478:	bl	ba4 <__printf_chk@plt>
    147c:	b	1340 <__snprintf_chk@plt+0x700>
    1480:	bl	afc <__stack_chk_fail@plt>
    1484:	andeq	r1, r1, ip, lsl #26
    1488:	andeq	r0, r0, r8, lsr #1
    148c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    1490:	andeq	r0, r0, ip, lsr #30
    1494:	andeq	r0, r0, r8, lsr #30
    1498:	andeq	r0, r0, r4, lsl #29
    149c:	ldrdeq	r0, [r0], -r8
    14a0:	andeq	r0, r0, r0, ror #29
    14a4:	andeq	r0, r0, r0, ror sp
    14a8:	andeq	r0, r0, ip, asr #27
    14ac:	andeq	r0, r0, r8, ror #27
    14b0:	muleq	r1, r4, ip
    14b4:	strdeq	r0, [r0], -r4
    14b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    14bc:	mov	r5, r0
    14c0:	ldr	r7, [pc, #540]	; 16e4 <__snprintf_chk@plt+0xaa4>
    14c4:	ldr	r3, [pc, #540]	; 16e8 <__snprintf_chk@plt+0xaa8>
    14c8:	add	r7, pc, r7
    14cc:	ldr	r0, [r0]
    14d0:	ldr	r8, [r7, r3]
    14d4:	sub	sp, sp, #772	; 0x304
    14d8:	cmp	r0, #0
    14dc:	ldr	r3, [r8]
    14e0:	str	r3, [sp, #764]	; 0x2fc
    14e4:	beq	15dc <__snprintf_chk@plt+0x99c>
    14e8:	ldr	r3, [r5, #4]
    14ec:	cmp	r3, #0
    14f0:	beq	15dc <__snprintf_chk@plt+0x99c>
    14f4:	ldrb	r3, [r5, #8]
    14f8:	add	r6, sp, #12
    14fc:	cmp	r3, #100	; 0x64
    1500:	beq	1548 <__snprintf_chk@plt+0x908>
    1504:	mov	r1, r6
    1508:	bl	1e68 <__snprintf_chk@plt+0x1228>
    150c:	cmp	r0, #1
    1510:	mov	r4, r0
    1514:	beq	16bc <__snprintf_chk@plt+0xa7c>
    1518:	cmp	r0, #2
    151c:	bne	1558 <__snprintf_chk@plt+0x918>
    1520:	ldr	r3, [pc, #452]	; 16ec <__snprintf_chk@plt+0xaac>
    1524:	ldr	r0, [pc, #452]	; 16f0 <__snprintf_chk@plt+0xab0>
    1528:	mov	r1, #1
    152c:	ldr	r3, [r7, r3]
    1530:	mov	r2, #36	; 0x24
    1534:	add	r0, pc, r0
    1538:	ldr	r3, [r3]
    153c:	mov	r4, r1
    1540:	bl	b14 <fwrite@plt>
    1544:	b	15e4 <__snprintf_chk@plt+0x9a4>
    1548:	mov	r1, r0
    154c:	mov	r2, #752	; 0x2f0
    1550:	mov	r0, r6
    1554:	bl	202c <__snprintf_chk@plt+0x13ec>
    1558:	ldr	r1, [pc, #404]	; 16f4 <__snprintf_chk@plt+0xab4>
    155c:	ldr	r0, [r5, #4]
    1560:	add	r1, pc, r1
    1564:	bl	bf8 <strpbrk@plt>
    1568:	subs	r9, r0, #0
    156c:	bne	1600 <__snprintf_chk@plt+0x9c0>
    1570:	mov	r1, #44	; 0x2c
    1574:	mov	r0, r6
    1578:	bl	b80 <strchr@plt>
    157c:	ldr	fp, [pc, #372]	; 16f8 <__snprintf_chk@plt+0xab8>
    1580:	mov	sl, #0
    1584:	add	fp, pc, fp
    1588:	subs	r4, r0, #0
    158c:	strbne	r9, [r4]
    1590:	addne	r4, r4, #1
    1594:	mov	r9, sl
    1598:	ldrb	r1, [r5, #8]
    159c:	mov	r0, r6
    15a0:	bl	1ca4 <__snprintf_chk@plt+0x1064>
    15a4:	subs	r1, r0, #0
    15a8:	bgt	1628 <__snprintf_chk@plt+0x9e8>
    15ac:	cmp	r4, #0
    15b0:	beq	1670 <__snprintf_chk@plt+0xa30>
    15b4:	mov	r0, r4
    15b8:	mov	r1, #44	; 0x2c
    15bc:	bl	b80 <strchr@plt>
    15c0:	mov	r6, r4
    15c4:	cmp	r0, #0
    15c8:	movne	r3, #0
    15cc:	strbne	r3, [r0]
    15d0:	addne	r0, r0, #1
    15d4:	mov	r4, r0
    15d8:	b	1598 <__snprintf_chk@plt+0x958>
    15dc:	bl	115c <__snprintf_chk@plt+0x51c>
    15e0:	mov	r4, r0
    15e4:	ldr	r2, [sp, #764]	; 0x2fc
    15e8:	ldr	r3, [r8]
    15ec:	mov	r0, r4
    15f0:	cmp	r2, r3
    15f4:	bne	16e0 <__snprintf_chk@plt+0xaa0>
    15f8:	add	sp, sp, #772	; 0x304
    15fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1600:	ldr	r3, [pc, #228]	; 16ec <__snprintf_chk@plt+0xaac>
    1604:	ldr	r0, [pc, #240]	; 16fc <__snprintf_chk@plt+0xabc>
    1608:	mov	r1, #1
    160c:	ldr	r3, [r7, r3]
    1610:	mov	r2, #26
    1614:	add	r0, pc, r0
    1618:	ldr	r3, [r3]
    161c:	mov	r4, r1
    1620:	bl	b14 <fwrite@plt>
    1624:	b	15e4 <__snprintf_chk@plt+0x9a4>
    1628:	mvn	r2, #2
    162c:	mov	r0, #9
    1630:	bl	b08 <keyctl@plt>
    1634:	cmp	r0, #0
    1638:	addge	r9, r9, #1
    163c:	bge	15ac <__snprintf_chk@plt+0x96c>
    1640:	ldr	r2, [pc, #164]	; 16ec <__snprintf_chk@plt+0xaac>
    1644:	ldr	r0, [r5]
    1648:	mov	r3, r6
    164c:	ldr	r1, [r7, r2]
    1650:	str	r0, [sp]
    1654:	mov	r2, fp
    1658:	ldr	r0, [r1]
    165c:	mov	r1, #1
    1660:	add	sl, sl, r1
    1664:	bl	bb0 <__fprintf_chk@plt>
    1668:	cmp	r4, #0
    166c:	bne	15b4 <__snprintf_chk@plt+0x974>
    1670:	orrs	r3, r9, sl
    1674:	bne	15e4 <__snprintf_chk@plt+0x9a4>
    1678:	ldr	r1, [pc, #128]	; 1700 <__snprintf_chk@plt+0xac0>
    167c:	ldr	r2, [r5]
    1680:	add	r1, pc, r1
    1684:	mov	r0, #1
    1688:	bl	ba4 <__printf_chk@plt>
    168c:	ldr	r0, [pc, #112]	; 1704 <__snprintf_chk@plt+0xac4>
    1690:	mov	r4, #1
    1694:	add	r0, pc, r0
    1698:	bl	b38 <puts@plt>
    169c:	ldr	r3, [pc, #100]	; 1708 <__snprintf_chk@plt+0xac8>
    16a0:	ldr	r1, [pc, #100]	; 170c <__snprintf_chk@plt+0xacc>
    16a4:	add	r3, pc, r3
    16a8:	add	r1, pc, r1
    16ac:	mov	r0, #1
    16b0:	ldr	r2, [r3]
    16b4:	bl	ba4 <__printf_chk@plt>
    16b8:	b	15e4 <__snprintf_chk@plt+0x9a4>
    16bc:	ldr	r1, [pc, #40]	; 16ec <__snprintf_chk@plt+0xaac>
    16c0:	ldr	r2, [pc, #72]	; 1710 <__snprintf_chk@plt+0xad0>
    16c4:	ldr	r3, [r5]
    16c8:	ldr	r0, [r7, r1]
    16cc:	add	r2, pc, r2
    16d0:	mov	r1, r4
    16d4:	ldr	r0, [r0]
    16d8:	bl	bb0 <__fprintf_chk@plt>
    16dc:	b	15e4 <__snprintf_chk@plt+0x9a4>
    16e0:	bl	afc <__stack_chk_fail@plt>
    16e4:	andeq	r1, r1, r8, ror #20
    16e8:	andeq	r0, r0, r8, lsr #1
    16ec:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    16f0:	andeq	r0, r0, r8, lsl #25
    16f4:	andeq	r0, r0, r4, lsl #25
    16f8:	andeq	r0, r0, r0, lsr #26
    16fc:	andeq	r0, r0, r0, ror #23
    1700:	andeq	r0, r0, r4, asr ip
    1704:	andeq	r0, r0, ip, lsr #23
    1708:	andeq	r1, r1, r8, asr sl
    170c:			; <UNDEFINED> instruction: 0x00000bb8
    1710:	andeq	r0, r0, r4, asr #21
    1714:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1718:	mov	r4, r0
    171c:	ldr	r6, [pc, #828]	; 1a60 <__snprintf_chk@plt+0xe20>
    1720:	ldr	r3, [pc, #828]	; 1a64 <__snprintf_chk@plt+0xe24>
    1724:	add	r6, pc, r6
    1728:	ldr	r0, [r0]
    172c:	ldr	r7, [r6, r3]
    1730:	sub	sp, sp, #788	; 0x314
    1734:	cmp	r0, #0
    1738:	ldr	r3, [r7]
    173c:	str	r3, [sp, #780]	; 0x30c
    1740:	beq	1844 <__snprintf_chk@plt+0xc04>
    1744:	ldr	r3, [r4, #4]
    1748:	cmp	r3, #0
    174c:	beq	1844 <__snprintf_chk@plt+0xc04>
    1750:	ldrb	r3, [r4, #8]
    1754:	add	r8, sp, #28
    1758:	cmp	r3, #100	; 0x64
    175c:	beq	17a4 <__snprintf_chk@plt+0xb64>
    1760:	mov	r1, r8
    1764:	bl	1e68 <__snprintf_chk@plt+0x1228>
    1768:	cmp	r0, #1
    176c:	mov	r5, r0
    1770:	beq	193c <__snprintf_chk@plt+0xcfc>
    1774:	cmp	r0, #2
    1778:	bne	17b4 <__snprintf_chk@plt+0xb74>
    177c:	ldr	r3, [pc, #740]	; 1a68 <__snprintf_chk@plt+0xe28>
    1780:	ldr	r0, [pc, #740]	; 1a6c <__snprintf_chk@plt+0xe2c>
    1784:	mov	r1, #1
    1788:	ldr	r3, [r6, r3]
    178c:	mov	r2, #36	; 0x24
    1790:	add	r0, pc, r0
    1794:	ldr	r3, [r3]
    1798:	mov	r5, r1
    179c:	bl	b14 <fwrite@plt>
    17a0:	b	184c <__snprintf_chk@plt+0xc0c>
    17a4:	mov	r1, r0
    17a8:	mov	r2, #752	; 0x2f0
    17ac:	mov	r0, r8
    17b0:	bl	202c <__snprintf_chk@plt+0x13ec>
    17b4:	ldr	r1, [pc, #692]	; 1a70 <__snprintf_chk@plt+0xe30>
    17b8:	ldr	r0, [r4, #4]
    17bc:	add	r1, pc, r1
    17c0:	bl	bf8 <strpbrk@plt>
    17c4:	subs	r5, r0, #0
    17c8:	bne	1868 <__snprintf_chk@plt+0xc28>
    17cc:	mov	r1, #44	; 0x2c
    17d0:	mov	r0, r8
    17d4:	bl	b80 <strchr@plt>
    17d8:	mov	r9, r8
    17dc:	mov	fp, #0
    17e0:	subs	sl, r0, #0
    17e4:	strbne	r5, [sl]
    17e8:	addne	sl, sl, #1
    17ec:	mov	r5, #44	; 0x2c
    17f0:	ldrb	r1, [r4, #8]
    17f4:	mov	r0, r9
    17f8:	bl	1ca4 <__snprintf_chk@plt+0x1064>
    17fc:	cmp	r0, #0
    1800:	bgt	1994 <__snprintf_chk@plt+0xd54>
    1804:	bl	b98 <__errno_location@plt>
    1808:	ldr	r3, [r0]
    180c:	cmp	r3, #126	; 0x7e
    1810:	bne	19dc <__snprintf_chk@plt+0xd9c>
    1814:	cmp	sl, #0
    1818:	beq	1890 <__snprintf_chk@plt+0xc50>
    181c:	strb	r5, [sl, #-1]
    1820:	mov	r0, sl
    1824:	mov	r1, #44	; 0x2c
    1828:	bl	b80 <strchr@plt>
    182c:	mov	r9, sl
    1830:	cmp	r0, #0
    1834:	strbne	fp, [r0]
    1838:	addne	r0, r0, #1
    183c:	mov	sl, r0
    1840:	b	17f0 <__snprintf_chk@plt+0xbb0>
    1844:	bl	115c <__snprintf_chk@plt+0x51c>
    1848:	mov	r5, r0
    184c:	ldr	r2, [sp, #780]	; 0x30c
    1850:	ldr	r3, [r7]
    1854:	mov	r0, r5
    1858:	cmp	r2, r3
    185c:	bne	1a5c <__snprintf_chk@plt+0xe1c>
    1860:	add	sp, sp, #788	; 0x314
    1864:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1868:	ldr	r3, [pc, #504]	; 1a68 <__snprintf_chk@plt+0xe28>
    186c:	ldr	r0, [pc, #512]	; 1a74 <__snprintf_chk@plt+0xe34>
    1870:	mov	r1, #1
    1874:	ldr	r3, [r6, r3]
    1878:	mov	r2, #26
    187c:	add	r0, pc, r0
    1880:	ldr	r3, [r3]
    1884:	mov	r5, r1
    1888:	bl	b14 <fwrite@plt>
    188c:	b	184c <__snprintf_chk@plt+0xc0c>
    1890:	mov	r9, r0
    1894:	ldr	r0, [pc, #476]	; 1a78 <__snprintf_chk@plt+0xe38>
    1898:	add	r0, pc, r0
    189c:	bl	b8c <getpass@plt>
    18a0:	mov	r1, #44	; 0x2c
    18a4:	mov	fp, r0
    18a8:	mov	r0, r8
    18ac:	bl	b80 <strchr@plt>
    18b0:	ldr	r3, [pc, #452]	; 1a7c <__snprintf_chk@plt+0xe3c>
    18b4:	add	r3, pc, r3
    18b8:	str	r3, [sp, #12]
    18bc:	ldr	r3, [pc, #444]	; 1a80 <__snprintf_chk@plt+0xe40>
    18c0:	add	r3, pc, r3
    18c4:	str	r3, [sp, #16]
    18c8:	subs	r5, r0, #0
    18cc:	strbne	sl, [r5]
    18d0:	addne	r5, r5, #1
    18d4:	mov	sl, r9
    18d8:	ldrb	r3, [r4, #8]
    18dc:	mov	r2, fp
    18e0:	ldr	r1, [r4, #4]
    18e4:	mov	r0, r8
    18e8:	bl	1d64 <__snprintf_chk@plt+0x1124>
    18ec:	subs	r9, r0, #0
    18f0:	ble	1960 <__snprintf_chk@plt+0xd20>
    18f4:	ldr	r2, [pc, #392]	; 1a84 <__snprintf_chk@plt+0xe44>
    18f8:	mov	r1, r9
    18fc:	mov	r0, #5
    1900:	bl	b08 <keyctl@plt>
    1904:	cmp	r0, #0
    1908:	blt	1a00 <__snprintf_chk@plt+0xdc0>
    190c:	cmp	r5, #0
    1910:	beq	184c <__snprintf_chk@plt+0xc0c>
    1914:	mov	r0, r5
    1918:	mov	r1, #44	; 0x2c
    191c:	bl	b80 <strchr@plt>
    1920:	mov	r8, r5
    1924:	cmp	r0, #0
    1928:	movne	r3, #0
    192c:	strbne	r3, [r0]
    1930:	addne	r0, r0, #1
    1934:	mov	r5, r0
    1938:	b	18d8 <__snprintf_chk@plt+0xc98>
    193c:	ldr	r1, [pc, #292]	; 1a68 <__snprintf_chk@plt+0xe28>
    1940:	ldr	r2, [pc, #320]	; 1a88 <__snprintf_chk@plt+0xe48>
    1944:	ldr	r3, [r4]
    1948:	ldr	r0, [r6, r1]
    194c:	add	r2, pc, r2
    1950:	mov	r1, r5
    1954:	ldr	r0, [r0]
    1958:	bl	bb0 <__fprintf_chk@plt>
    195c:	b	184c <__snprintf_chk@plt+0xc0c>
    1960:	ldr	r3, [pc, #256]	; 1a68 <__snprintf_chk@plt+0xe28>
    1964:	ldr	r0, [sl]
    1968:	ldr	r3, [r6, r3]
    196c:	ldr	r9, [r3]
    1970:	bl	b50 <strerror@plt>
    1974:	ldr	r2, [pc, #272]	; 1a8c <__snprintf_chk@plt+0xe4c>
    1978:	mov	r3, r8
    197c:	add	r2, pc, r2
    1980:	mov	r1, #1
    1984:	str	r0, [sp]
    1988:	mov	r0, r9
    198c:	bl	bb0 <__fprintf_chk@plt>
    1990:	b	190c <__snprintf_chk@plt+0xccc>
    1994:	ldr	r1, [pc, #244]	; 1a90 <__snprintf_chk@plt+0xe50>
    1998:	ldr	r3, [r4]
    199c:	mov	r2, r9
    19a0:	add	r1, pc, r1
    19a4:	mov	r0, #1
    19a8:	bl	ba4 <__printf_chk@plt>
    19ac:	ldr	r0, [pc, #224]	; 1a94 <__snprintf_chk@plt+0xe54>
    19b0:	mov	r5, #1
    19b4:	add	r0, pc, r0
    19b8:	bl	b38 <puts@plt>
    19bc:	ldr	r3, [pc, #212]	; 1a98 <__snprintf_chk@plt+0xe58>
    19c0:	ldr	r1, [pc, #212]	; 1a9c <__snprintf_chk@plt+0xe5c>
    19c4:	add	r3, pc, r3
    19c8:	add	r1, pc, r1
    19cc:	mov	r0, #1
    19d0:	ldr	r2, [r3]
    19d4:	bl	ba4 <__printf_chk@plt>
    19d8:	b	184c <__snprintf_chk@plt+0xc0c>
    19dc:	mov	r0, r3
    19e0:	bl	b50 <strerror@plt>
    19e4:	ldr	r1, [pc, #180]	; 1aa0 <__snprintf_chk@plt+0xe60>
    19e8:	mov	r5, #1
    19ec:	add	r1, pc, r1
    19f0:	mov	r2, r0
    19f4:	mov	r0, #1
    19f8:	bl	ba4 <__printf_chk@plt>
    19fc:	b	184c <__snprintf_chk@plt+0xc0c>
    1a00:	ldr	r3, [pc, #96]	; 1a68 <__snprintf_chk@plt+0xe28>
    1a04:	mov	r2, #55	; 0x37
    1a08:	mov	r1, #1
    1a0c:	ldr	r3, [r6, r3]
    1a10:	ldr	r0, [sp, #12]
    1a14:	str	r3, [sp, #20]
    1a18:	ldr	r3, [r3]
    1a1c:	bl	b14 <fwrite@plt>
    1a20:	mov	r1, r9
    1a24:	mvn	r2, #2
    1a28:	mov	r0, #9
    1a2c:	bl	b08 <keyctl@plt>
    1a30:	cmp	r0, #0
    1a34:	bge	190c <__snprintf_chk@plt+0xccc>
    1a38:	ldr	r3, [sp, #20]
    1a3c:	ldr	r2, [r4]
    1a40:	mov	r1, #1
    1a44:	ldr	r0, [r3]
    1a48:	str	r2, [sp]
    1a4c:	mov	r3, r8
    1a50:	ldr	r2, [sp, #16]
    1a54:	bl	bb0 <__fprintf_chk@plt>
    1a58:	b	190c <__snprintf_chk@plt+0xccc>
    1a5c:	bl	afc <__stack_chk_fail@plt>
    1a60:	andeq	r1, r1, ip, lsl #16
    1a64:	andeq	r0, r0, r8, lsr #1
    1a68:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    1a6c:	andeq	r0, r0, ip, lsr #20
    1a70:	andeq	r0, r0, r8, lsr #20
    1a74:	andeq	r0, r0, r8, ror r9
    1a78:	ldrdeq	r0, [r0], -r4
    1a7c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1a80:	andeq	r0, r0, ip, lsl fp
    1a84:	stceq	0, cr0, [sp, #-0]
    1a88:	andeq	r0, r0, r4, asr #16
    1a8c:	andeq	r0, r0, r0, lsl #20
    1a90:	andeq	r0, r0, r4, ror #18
    1a94:	andeq	r0, r0, r4, lsl #19
    1a98:	andeq	r1, r1, r8, lsr r7
    1a9c:	muleq	r0, r0, r9
    1aa0:	andeq	r0, r0, r8, ror r9
    1aa4:	ldr	r2, [pc, #464]	; 1c7c <__snprintf_chk@plt+0x103c>
    1aa8:	ldr	r3, [pc, #464]	; 1c80 <__snprintf_chk@plt+0x1040>
    1aac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1ab0:	add	r2, pc, r2
    1ab4:	sub	sp, sp, #44	; 0x2c
    1ab8:	mov	r1, #0
    1abc:	str	r1, [sp, #12]
    1ac0:	str	r2, [sp, #20]
    1ac4:	ldr	r3, [r2, r3]
    1ac8:	ldr	r9, [pc, #436]	; 1c84 <__snprintf_chk@plt+0x1044>
    1acc:	ldr	sl, [pc, #436]	; 1c88 <__snprintf_chk@plt+0x1048>
    1ad0:	str	r3, [sp, #16]
    1ad4:	add	r9, pc, r9
    1ad8:	ldr	r3, [r3]
    1adc:	add	sl, pc, sl
    1ae0:	str	r1, [sp, #4]
    1ae4:	add	r1, sp, #24
    1ae8:	str	r1, [sp, #8]
    1aec:	str	r3, [sp, #36]	; 0x24
    1af0:	ldr	r1, [sp, #8]
    1af4:	mvn	r0, #2
    1af8:	bl	bec <keyctl_read_alloc@plt>
    1afc:	cmp	r0, #0
    1b00:	blt	1b94 <__snprintf_chk@plt+0xf54>
    1b04:	lsrs	r4, r0, #2
    1b08:	ldr	r5, [sp, #24]
    1b0c:	beq	1bc4 <__snprintf_chk@plt+0xf84>
    1b10:	add	r7, sp, #28
    1b14:	add	r8, sp, #32
    1b18:	b	1b4c <__snprintf_chk@plt+0xf0c>
    1b1c:	ldr	fp, [sp, #28]
    1b20:	ldr	r0, [sp, #32]
    1b24:	mov	r2, #5
    1b28:	add	r0, fp, r0
    1b2c:	mov	r1, sl
    1b30:	bl	c28 <strncmp@plt>
    1b34:	cmp	r0, #0
    1b38:	mov	r0, fp
    1b3c:	beq	1bd0 <__snprintf_chk@plt+0xf90>
    1b40:	bl	acc <free@plt>
    1b44:	subs	r4, r4, #1
    1b48:	beq	1b8c <__snprintf_chk@plt+0xf4c>
    1b4c:	ldr	r6, [r5], #4
    1b50:	mov	r1, r7
    1b54:	mov	r0, r6
    1b58:	bl	b20 <keyctl_describe_alloc@plt>
    1b5c:	cmp	r0, #0
    1b60:	blt	1b44 <__snprintf_chk@plt+0xf04>
    1b64:	mov	r2, r8
    1b68:	mov	r1, r9
    1b6c:	ldr	r0, [sp, #28]
    1b70:	bl	be0 <sscanf@plt>
    1b74:	cmp	r0, #0
    1b78:	beq	1b1c <__snprintf_chk@plt+0xedc>
    1b7c:	ldr	r0, [sp, #28]
    1b80:	bl	acc <free@plt>
    1b84:	subs	r4, r4, #1
    1b88:	bne	1b4c <__snprintf_chk@plt+0xf0c>
    1b8c:	ldr	r0, [sp, #24]
    1b90:	bl	acc <free@plt>
    1b94:	ldr	r3, [sp, #4]
    1b98:	ldr	r2, [sp, #12]
    1b9c:	orrs	r3, r3, r2
    1ba0:	movne	r0, #0
    1ba4:	beq	1c3c <__snprintf_chk@plt+0xffc>
    1ba8:	ldr	r3, [sp, #16]
    1bac:	ldr	r2, [sp, #36]	; 0x24
    1bb0:	ldr	r3, [r3]
    1bb4:	cmp	r2, r3
    1bb8:	bne	1c78 <__snprintf_chk@plt+0x1038>
    1bbc:	add	sp, sp, #44	; 0x2c
    1bc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1bc4:	mov	r0, r5
    1bc8:	bl	acc <free@plt>
    1bcc:	b	1b94 <__snprintf_chk@plt+0xf54>
    1bd0:	bl	acc <free@plt>
    1bd4:	ldr	r0, [sp, #24]
    1bd8:	bl	acc <free@plt>
    1bdc:	cmp	r6, #0
    1be0:	ble	1b94 <__snprintf_chk@plt+0xf54>
    1be4:	mov	r1, r6
    1be8:	mvn	r2, #2
    1bec:	mov	r0, #9
    1bf0:	bl	b08 <keyctl@plt>
    1bf4:	cmp	r0, #0
    1bf8:	ldrge	r3, [sp, #4]
    1bfc:	addge	r3, r3, #1
    1c00:	strge	r3, [sp, #4]
    1c04:	bge	1af0 <__snprintf_chk@plt+0xeb0>
    1c08:	ldr	r0, [sp, #20]
    1c0c:	ldr	r3, [pc, #120]	; 1c8c <__snprintf_chk@plt+0x104c>
    1c10:	ldr	ip, [sp, #12]
    1c14:	mov	r1, #1
    1c18:	ldr	r3, [r0, r3]
    1c1c:	ldr	r0, [pc, #108]	; 1c90 <__snprintf_chk@plt+0x1050>
    1c20:	add	ip, ip, r1
    1c24:	mov	r2, #32
    1c28:	ldr	r3, [r3]
    1c2c:	add	r0, pc, r0
    1c30:	str	ip, [sp, #12]
    1c34:	bl	b14 <fwrite@plt>
    1c38:	b	1af0 <__snprintf_chk@plt+0xeb0>
    1c3c:	ldr	r0, [pc, #80]	; 1c94 <__snprintf_chk@plt+0x1054>
    1c40:	add	r0, pc, r0
    1c44:	bl	b38 <puts@plt>
    1c48:	ldr	r0, [pc, #72]	; 1c98 <__snprintf_chk@plt+0x1058>
    1c4c:	add	r0, pc, r0
    1c50:	bl	b38 <puts@plt>
    1c54:	ldr	r3, [pc, #64]	; 1c9c <__snprintf_chk@plt+0x105c>
    1c58:	ldr	r1, [pc, #64]	; 1ca0 <__snprintf_chk@plt+0x1060>
    1c5c:	add	r3, pc, r3
    1c60:	add	r1, pc, r1
    1c64:	mov	r0, #1
    1c68:	ldr	r2, [r3]
    1c6c:	bl	ba4 <__printf_chk@plt>
    1c70:	mov	r0, #1
    1c74:	b	1ba8 <__snprintf_chk@plt+0xf68>
    1c78:	bl	afc <__stack_chk_fail@plt>
    1c7c:	andeq	r1, r1, r0, lsl #9
    1c80:	andeq	r0, r0, r8, lsr #1
    1c84:	andeq	r0, r0, r8, lsr r9
    1c88:	andeq	r0, r0, r8, asr #18
    1c8c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    1c90:	andeq	r0, r0, r0, lsl #16
    1c94:	andeq	r0, r0, r0, lsl r8
    1c98:	strdeq	r0, [r0], -r4
    1c9c:	andeq	r1, r1, r0, lsr #9
    1ca0:	andeq	r0, r0, r0, lsl #12
    1ca4:	ldr	r2, [pc, #164]	; 1d50 <__snprintf_chk@plt+0x1110>
    1ca8:	ldr	r3, [pc, #164]	; 1d54 <__snprintf_chk@plt+0x1114>
    1cac:	add	r2, pc, r2
    1cb0:	push	{r4, r5, r6, lr}
    1cb4:	sub	sp, sp, #80	; 0x50
    1cb8:	ldr	r4, [r2, r3]
    1cbc:	ldr	lr, [pc, #148]	; 1d58 <__snprintf_chk@plt+0x1118>
    1cc0:	ldr	ip, [pc, #148]	; 1d5c <__snprintf_chk@plt+0x111c>
    1cc4:	add	lr, pc, lr
    1cc8:	add	ip, pc, ip
    1ccc:	str	r0, [sp, #12]
    1cd0:	mov	r3, #55	; 0x37
    1cd4:	ldr	r6, [r4]
    1cd8:	add	r5, sp, #20
    1cdc:	str	r1, [sp, #8]
    1ce0:	stm	sp, {ip, lr}
    1ce4:	mov	r0, r5
    1ce8:	mov	r1, r3
    1cec:	mov	r2, #1
    1cf0:	str	r6, [sp, #76]	; 0x4c
    1cf4:	bl	c40 <__snprintf_chk@plt>
    1cf8:	cmp	r0, #54	; 0x36
    1cfc:	bgt	1d38 <__snprintf_chk@plt+0x10f8>
    1d00:	ldr	r1, [pc, #88]	; 1d60 <__snprintf_chk@plt+0x1120>
    1d04:	mov	r2, r5
    1d08:	add	r1, pc, r1
    1d0c:	mov	r3, #0
    1d10:	mvn	r0, #2
    1d14:	bl	af0 <keyctl_search@plt>
    1d18:	mov	r1, r0
    1d1c:	ldr	r2, [sp, #76]	; 0x4c
    1d20:	ldr	r3, [r4]
    1d24:	mov	r0, r1
    1d28:	cmp	r2, r3
    1d2c:	bne	1d4c <__snprintf_chk@plt+0x110c>
    1d30:	add	sp, sp, #80	; 0x50
    1d34:	pop	{r4, r5, r6, pc}
    1d38:	bl	b98 <__errno_location@plt>
    1d3c:	mov	r3, #22
    1d40:	mvn	r1, #0
    1d44:	str	r3, [r0]
    1d48:	b	1d1c <__snprintf_chk@plt+0x10dc>
    1d4c:	bl	afc <__stack_chk_fail@plt>
    1d50:	andeq	r1, r1, r4, lsl #5
    1d54:	andeq	r0, r0, r8, lsr #1
    1d58:	andeq	r0, r0, ip, asr r9
    1d5c:	andeq	r0, r0, r0, ror #18
    1d60:	andeq	r0, r0, ip, lsr #18
    1d64:	ldr	ip, [pc, #228]	; 1e50 <__snprintf_chk@plt+0x1210>
    1d68:	push	{r4, r5, r6, r7, r8, r9, lr}
    1d6c:	add	ip, pc, ip
    1d70:	ldr	r5, [pc, #220]	; 1e54 <__snprintf_chk@plt+0x1214>
    1d74:	sub	sp, sp, #244	; 0xf4
    1d78:	ldr	r4, [pc, #216]	; 1e58 <__snprintf_chk@plt+0x1218>
    1d7c:	ldr	r5, [ip, r5]
    1d80:	ldr	lr, [pc, #212]	; 1e5c <__snprintf_chk@plt+0x121c>
    1d84:	str	r3, [sp, #8]
    1d88:	add	lr, pc, lr
    1d8c:	ldr	r9, [r5]
    1d90:	mov	r3, #55	; 0x37
    1d94:	add	r4, pc, r4
    1d98:	add	r6, sp, #16
    1d9c:	str	r0, [sp, #12]
    1da0:	mov	r7, r1
    1da4:	mov	r8, r2
    1da8:	str	r4, [sp, #4]
    1dac:	str	lr, [sp]
    1db0:	mov	r0, r6
    1db4:	mov	r1, r3
    1db8:	mov	r2, #1
    1dbc:	str	r9, [sp, #236]	; 0xec
    1dc0:	bl	c40 <__snprintf_chk@plt>
    1dc4:	cmp	r0, #54	; 0x36
    1dc8:	bgt	1e38 <__snprintf_chk@plt+0x11f8>
    1dcc:	ldr	r2, [pc, #140]	; 1e60 <__snprintf_chk@plt+0x1220>
    1dd0:	mov	r3, #162	; 0xa2
    1dd4:	add	r2, pc, r2
    1dd8:	add	r4, sp, #72	; 0x48
    1ddc:	stm	sp, {r2, r7, r8}
    1de0:	mov	r0, r4
    1de4:	mov	r1, r3
    1de8:	mov	r2, #1
    1dec:	bl	c40 <__snprintf_chk@plt>
    1df0:	cmp	r0, #161	; 0xa1
    1df4:	bgt	1e38 <__snprintf_chk@plt+0x11f8>
    1df8:	add	r3, r0, #1
    1dfc:	ldr	r0, [pc, #96]	; 1e64 <__snprintf_chk@plt+0x1224>
    1e00:	mvn	ip, #2
    1e04:	mov	r1, r6
    1e08:	mov	r2, r4
    1e0c:	str	ip, [sp]
    1e10:	add	r0, pc, r0
    1e14:	bl	b2c <add_key@plt>
    1e18:	mov	r1, r0
    1e1c:	ldr	r2, [sp, #236]	; 0xec
    1e20:	ldr	r3, [r5]
    1e24:	mov	r0, r1
    1e28:	cmp	r2, r3
    1e2c:	bne	1e4c <__snprintf_chk@plt+0x120c>
    1e30:	add	sp, sp, #244	; 0xf4
    1e34:	pop	{r4, r5, r6, r7, r8, r9, pc}
    1e38:	bl	b98 <__errno_location@plt>
    1e3c:	mov	r3, #22
    1e40:	mvn	r1, #0
    1e44:	str	r3, [r0]
    1e48:	b	1e1c <__snprintf_chk@plt+0x11dc>
    1e4c:	bl	afc <__stack_chk_fail@plt>
    1e50:	andeq	r1, r1, r4, asr #3
    1e54:	andeq	r0, r0, r8, lsr #1
    1e58:	andeq	r0, r0, ip, lsl #17
    1e5c:	andeq	r0, r0, r0, lsr #17
    1e60:	andeq	r0, r0, r8, ror #16
    1e64:	andeq	r0, r0, r4, lsr #16
    1e68:	ldr	ip, [pc, #424]	; 2018 <__snprintf_chk@plt+0x13d8>
    1e6c:	ldr	r3, [pc, #424]	; 201c <__snprintf_chk@plt+0x13dc>
    1e70:	add	ip, pc, ip
    1e74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1e78:	sub	sp, sp, #1072	; 0x430
    1e7c:	ldr	r3, [ip, r3]
    1e80:	sub	sp, sp, #4
    1e84:	mov	lr, r3
    1e88:	mov	r2, #0
    1e8c:	ldr	lr, [lr]
    1e90:	add	sl, sp, #32
    1e94:	str	r3, [sp, #12]
    1e98:	mov	r9, r1
    1e9c:	sub	r3, sl, #8
    1ea0:	mov	r1, r2
    1ea4:	str	lr, [sp, #1068]	; 0x42c
    1ea8:	bl	c10 <getaddrinfo@plt>
    1eac:	subs	fp, r0, #0
    1eb0:	movne	fp, #1
    1eb4:	bne	1f84 <__snprintf_chk@plt+0x1344>
    1eb8:	ldr	r4, [sp, #24]
    1ebc:	cmp	r4, #0
    1ec0:	beq	1f7c <__snprintf_chk@plt+0x133c>
    1ec4:	ldr	r3, [pc, #340]	; 2020 <__snprintf_chk@plt+0x13e0>
    1ec8:	add	r3, pc, r3
    1ecc:	str	r3, [sp, #16]
    1ed0:	ldr	r3, [pc, #332]	; 2024 <__snprintf_chk@plt+0x13e4>
    1ed4:	add	r3, pc, r3
    1ed8:	str	r3, [sp, #20]
    1edc:	ldr	r5, [r4, #8]
    1ee0:	cmp	r5, #1
    1ee4:	bne	1f6c <__snprintf_chk@plt+0x132c>
    1ee8:	ldr	r3, [r4, #12]
    1eec:	cmp	r3, #6
    1ef0:	bne	1f6c <__snprintf_chk@plt+0x132c>
    1ef4:	ldr	r7, [r4, #20]
    1ef8:	ldrh	r6, [r7]
    1efc:	cmp	r6, #2
    1f00:	beq	1fa8 <__snprintf_chk@plt+0x1368>
    1f04:	cmp	r6, #10
    1f08:	bne	1f6c <__snprintf_chk@plt+0x132c>
    1f0c:	sub	r8, sl, #4
    1f10:	mov	r0, r6
    1f14:	mov	r2, r8
    1f18:	ldr	r3, [pc, #264]	; 2028 <__snprintf_chk@plt+0x13e8>
    1f1c:	add	r1, r7, #8
    1f20:	bl	c1c <inet_ntop@plt>
    1f24:	cmp	r0, #0
    1f28:	beq	2008 <__snprintf_chk@plt+0x13c8>
    1f2c:	ldr	r6, [r7, #24]
    1f30:	cmp	r6, #0
    1f34:	bne	1fd4 <__snprintf_chk@plt+0x1394>
    1f38:	ldr	r3, [sp, #24]
    1f3c:	cmp	r3, r4
    1f40:	moveq	r3, #0
    1f44:	strbeq	r3, [r9]
    1f48:	beq	1f5c <__snprintf_chk@plt+0x131c>
    1f4c:	mov	r2, #752	; 0x2f0
    1f50:	ldr	r1, [sp, #16]
    1f54:	mov	r0, r9
    1f58:	bl	2080 <__snprintf_chk@plt+0x1440>
    1f5c:	mov	r1, r8
    1f60:	mov	r2, #752	; 0x2f0
    1f64:	mov	r0, r9
    1f68:	bl	2080 <__snprintf_chk@plt+0x1440>
    1f6c:	ldr	r4, [r4, #28]
    1f70:	cmp	r4, #0
    1f74:	bne	1edc <__snprintf_chk@plt+0x129c>
    1f78:	ldr	r4, [sp, #24]
    1f7c:	mov	r0, r4
    1f80:	bl	c04 <freeaddrinfo@plt>
    1f84:	ldr	r3, [sp, #12]
    1f88:	ldr	r2, [sp, #1068]	; 0x42c
    1f8c:	mov	r0, fp
    1f90:	ldr	r3, [r3]
    1f94:	cmp	r2, r3
    1f98:	bne	2014 <__snprintf_chk@plt+0x13d4>
    1f9c:	add	sp, sp, #1072	; 0x430
    1fa0:	add	sp, sp, #4
    1fa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1fa8:	sub	r8, sl, #4
    1fac:	add	r1, r7, #4
    1fb0:	mov	r2, r8
    1fb4:	ldr	r3, [pc, #108]	; 2028 <__snprintf_chk@plt+0x13e8>
    1fb8:	mov	r0, r6
    1fbc:	bl	c1c <inet_ntop@plt>
    1fc0:	cmp	r0, #0
    1fc4:	bne	1f38 <__snprintf_chk@plt+0x12f8>
    1fc8:	mov	fp, r6
    1fcc:	ldr	r4, [sp, #24]
    1fd0:	b	1f7c <__snprintf_chk@plt+0x133c>
    1fd4:	ldr	r1, [pc, #76]	; 2028 <__snprintf_chk@plt+0x13e8>
    1fd8:	mov	r0, r8
    1fdc:	bl	bc8 <strnlen@plt>
    1fe0:	ldr	r3, [sp, #20]
    1fe4:	str	r6, [sp, #4]
    1fe8:	str	r3, [sp]
    1fec:	mov	r2, r5
    1ff0:	mvn	r3, #0
    1ff4:	rsb	r1, r0, #1024	; 0x400
    1ff8:	add	r1, r1, #13
    1ffc:	add	r0, r8, r0
    2000:	bl	c40 <__snprintf_chk@plt>
    2004:	b	1f38 <__snprintf_chk@plt+0x12f8>
    2008:	ldr	r4, [sp, #24]
    200c:	mov	fp, #2
    2010:	b	1f7c <__snprintf_chk@plt+0x133c>
    2014:	bl	afc <__stack_chk_fail@plt>
    2018:	andeq	r1, r1, r0, asr #1
    201c:	andeq	r0, r0, r8, lsr #1
    2020:	andeq	r0, r0, r4, lsl #15
    2024:	andeq	r0, r0, r0, ror r7
    2028:	andeq	r0, r0, sp, lsl #8
    202c:	push	{r4, r5, r6, r7, r8, lr}
    2030:	mov	r4, r2
    2034:	mov	r7, r0
    2038:	mov	r0, r1
    203c:	mov	r6, r1
    2040:	bl	b74 <strlen@plt>
    2044:	cmp	r4, #0
    2048:	moveq	r5, r4
    204c:	beq	2078 <__snprintf_chk@plt+0x1438>
    2050:	cmp	r0, r4
    2054:	movcc	r4, r0
    2058:	subcs	r4, r4, #1
    205c:	mov	r5, r0
    2060:	mov	r1, r6
    2064:	mov	r2, r4
    2068:	mov	r0, r7
    206c:	bl	ad8 <memcpy@plt>
    2070:	mov	r3, #0
    2074:	strb	r3, [r7, r4]
    2078:	mov	r0, r5
    207c:	pop	{r4, r5, r6, r7, r8, pc}
    2080:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    2084:	mov	r8, r1
    2088:	mov	r6, r2
    208c:	mov	r9, r0
    2090:	bl	b74 <strlen@plt>
    2094:	mov	r5, r0
    2098:	mov	r0, r8
    209c:	bl	b74 <strlen@plt>
    20a0:	add	r7, r5, r0
    20a4:	cmp	r7, r6
    20a8:	bcc	20d0 <__snprintf_chk@plt+0x1490>
    20ac:	add	r3, r5, #1
    20b0:	cmp	r3, r6
    20b4:	subls	r6, r6, #1
    20b8:	subls	r4, r6, r5
    20bc:	bhi	20c8 <__snprintf_chk@plt+0x1488>
    20c0:	cmp	r4, #0
    20c4:	bne	20dc <__snprintf_chk@plt+0x149c>
    20c8:	mov	r0, r7
    20cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    20d0:	mov	r4, r0
    20d4:	cmp	r4, #0
    20d8:	beq	20c8 <__snprintf_chk@plt+0x1488>
    20dc:	mov	r2, r4
    20e0:	mov	r1, r8
    20e4:	add	r0, r9, r5
    20e8:	add	r4, r9, r4
    20ec:	bl	ad8 <memcpy@plt>
    20f0:	mov	r3, #0
    20f4:	strb	r3, [r4, r5]
    20f8:	mov	r0, r7
    20fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    2100:	push	{r4, lr}
    2104:	bl	ab4 <getpwuid@plt>
    2108:	cmp	r0, #0
    210c:	ldrne	r0, [r0]
    2110:	pop	{r4, pc}
    2114:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    2118:	mov	r7, r0
    211c:	ldr	r6, [pc, #72]	; 216c <__snprintf_chk@plt+0x152c>
    2120:	ldr	r5, [pc, #72]	; 2170 <__snprintf_chk@plt+0x1530>
    2124:	add	r6, pc, r6
    2128:	add	r5, pc, r5
    212c:	sub	r6, r6, r5
    2130:	mov	r8, r1
    2134:	mov	r9, r2
    2138:	bl	a7c <_init@@Base>
    213c:	asrs	r6, r6, #2
    2140:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    2144:	mov	r4, #0
    2148:	add	r4, r4, #1
    214c:	ldr	r3, [r5], #4
    2150:	mov	r2, r9
    2154:	mov	r1, r8
    2158:	mov	r0, r7
    215c:	blx	r3
    2160:	cmp	r6, r4
    2164:	bne	2148 <__snprintf_chk@plt+0x1508>
    2168:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    216c:	andeq	r0, r1, r0, lsl #26
    2170:	strdeq	r0, [r1], -r8
    2174:	bx	lr

Disassembly of section .fini:

00002178 <_fini@@Base>:
    2178:	push	{r3, lr}
    217c:	pop	{r3, pc}
