
raspbian-preinstalled/pwdx:     file format elf32-littlearm


Disassembly of section .init:

000108dc <.init>:
   108dc:	push	{r3, lr}
   108e0:	bl	10e68 <__snprintf_chk@plt+0x41c>
   108e4:	pop	{r3, pc}

Disassembly of section .plt:

000108e8 <strtol@plt-0x14>:
   108e8:	push	{lr}		; (str lr, [sp, #-4]!)
   108ec:	ldr	lr, [pc, #4]	; 108f8 <strtol@plt-0x4>
   108f0:	add	lr, pc, lr
   108f4:	ldr	pc, [lr, #8]!
   108f8:	andeq	r1, r1, r4, lsl #13

000108fc <strtol@plt>:
   108fc:	add	ip, pc, #0, 12
   10900:	add	ip, ip, #69632	; 0x11000
   10904:	ldr	pc, [ip, #1668]!	; 0x684

00010908 <free@plt>:
   10908:	add	ip, pc, #0, 12
   1090c:	add	ip, ip, #69632	; 0x11000
   10910:	ldr	pc, [ip, #1660]!	; 0x67c

00010914 <ferror@plt>:
   10914:	add	ip, pc, #0, 12
   10918:	add	ip, ip, #69632	; 0x11000
   1091c:	ldr	pc, [ip, #1652]!	; 0x674

00010920 <_exit@plt>:
   10920:	add	ip, pc, #0, 12
   10924:	add	ip, ip, #69632	; 0x11000
   10928:	ldr	pc, [ip, #1644]!	; 0x66c

0001092c <dcgettext@plt>:
   1092c:	add	ip, pc, #0, 12
   10930:	add	ip, ip, #69632	; 0x11000
   10934:	ldr	pc, [ip, #1636]!	; 0x664

00010938 <__stack_chk_fail@plt>:
   10938:	add	ip, pc, #0, 12
   1093c:	add	ip, ip, #69632	; 0x11000
   10940:	ldr	pc, [ip, #1628]!	; 0x65c

00010944 <realloc@plt>:
   10944:	add	ip, pc, #0, 12
   10948:	add	ip, ip, #69632	; 0x11000
   1094c:	ldr	pc, [ip, #1620]!	; 0x654

00010950 <textdomain@plt>:
   10950:	add	ip, pc, #0, 12
   10954:	add	ip, ip, #69632	; 0x11000
   10958:	ldr	pc, [ip, #1612]!	; 0x64c

0001095c <readlink@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #69632	; 0x11000
   10964:	ldr	pc, [ip, #1604]!	; 0x644

00010968 <__fpending@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #69632	; 0x11000
   10970:	ldr	pc, [ip, #1596]!	; 0x63c

00010974 <error@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #69632	; 0x11000
   1097c:	ldr	pc, [ip, #1588]!	; 0x634

00010980 <malloc@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #69632	; 0x11000
   10988:	ldr	pc, [ip, #1580]!	; 0x62c

0001098c <__libc_start_main@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #69632	; 0x11000
   10994:	ldr	pc, [ip, #1572]!	; 0x624

00010998 <strerror@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1564]!	; 0x61c

000109a4 <__gmon_start__@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1556]!	; 0x614

000109b0 <getopt_long@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1548]!	; 0x60c

000109bc <exit@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1540]!	; 0x604

000109c8 <strlen@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1532]!	; 0x5fc

000109d4 <__errno_location@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1524]!	; 0x5f4

000109e0 <__cxa_atexit@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1516]!	; 0x5ec

000109ec <__printf_chk@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1508]!	; 0x5e4

000109f8 <__fprintf_chk@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a04 <fclose@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a10 <setlocale@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1484]!	; 0x5cc

00010a1c <bindtextdomain@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1476]!	; 0x5c4

00010a28 <fputs@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1468]!	; 0x5bc

00010a34 <strncmp@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1460]!	; 0x5b4

00010a40 <abort@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1452]!	; 0x5ac

00010a4c <__snprintf_chk@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1444]!	; 0x5a4

Disassembly of section .text:

00010a58 <.text>:
   10a58:	push	{r4, lr}
   10a5c:	mov	r2, #5
   10a60:	mov	r4, r0
   10a64:	ldr	r1, [pc, #184]	; 10b24 <__snprintf_chk@plt+0xd8>
   10a68:	mov	r0, #0
   10a6c:	bl	1092c <dcgettext@plt>
   10a70:	mov	r1, r4
   10a74:	bl	10a28 <fputs@plt>
   10a78:	mov	r2, #5
   10a7c:	ldr	r1, [pc, #164]	; 10b28 <__snprintf_chk@plt+0xdc>
   10a80:	mov	r0, #0
   10a84:	bl	1092c <dcgettext@plt>
   10a88:	ldr	r3, [pc, #156]	; 10b2c <__snprintf_chk@plt+0xe0>
   10a8c:	mov	r1, #1
   10a90:	ldr	r3, [r3]
   10a94:	mov	r2, r0
   10a98:	mov	r0, r4
   10a9c:	bl	109f8 <__fprintf_chk@plt>
   10aa0:	mov	r2, #5
   10aa4:	ldr	r1, [pc, #132]	; 10b30 <__snprintf_chk@plt+0xe4>
   10aa8:	mov	r0, #0
   10aac:	bl	1092c <dcgettext@plt>
   10ab0:	mov	r1, r4
   10ab4:	bl	10a28 <fputs@plt>
   10ab8:	mov	r2, #5
   10abc:	ldr	r1, [pc, #112]	; 10b34 <__snprintf_chk@plt+0xe8>
   10ac0:	mov	r0, #0
   10ac4:	bl	1092c <dcgettext@plt>
   10ac8:	mov	r1, r4
   10acc:	bl	10a28 <fputs@plt>
   10ad0:	mov	r2, #5
   10ad4:	ldr	r1, [pc, #92]	; 10b38 <__snprintf_chk@plt+0xec>
   10ad8:	mov	r0, #0
   10adc:	bl	1092c <dcgettext@plt>
   10ae0:	mov	r1, r4
   10ae4:	bl	10a28 <fputs@plt>
   10ae8:	mov	r2, #5
   10aec:	ldr	r1, [pc, #72]	; 10b3c <__snprintf_chk@plt+0xf0>
   10af0:	mov	r0, #0
   10af4:	bl	1092c <dcgettext@plt>
   10af8:	ldr	r3, [pc, #64]	; 10b40 <__snprintf_chk@plt+0xf4>
   10afc:	mov	r1, #1
   10b00:	mov	r2, r0
   10b04:	mov	r0, r4
   10b08:	bl	109f8 <__fprintf_chk@plt>
   10b0c:	ldr	r3, [pc, #48]	; 10b44 <__snprintf_chk@plt+0xf8>
   10b10:	ldr	r0, [r3]
   10b14:	sub	r0, r0, r4
   10b18:	clz	r0, r0
   10b1c:	lsr	r0, r0, #5
   10b20:	bl	109bc <exit@plt>
   10b24:	andeq	r1, r1, r0, lsr #3
   10b28:	andeq	r1, r1, ip, lsr #3
   10b2c:	andeq	r2, r2, r8
   10b30:	andeq	r1, r1, r4, asr #3
   10b34:	ldrdeq	r1, [r1], -r0
   10b38:	strdeq	r1, [r1], -ip
   10b3c:	andeq	r1, r1, r4, lsr r2
   10b40:	andeq	r1, r1, r0, asr r2
   10b44:	andeq	r2, r2, r8, lsl r0
   10b48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10b4c:	mov	sl, r0
   10b50:	ldr	r4, [pc, #652]	; 10de4 <__snprintf_chk@plt+0x398>
   10b54:	ldr	r3, [pc, #652]	; 10de8 <__snprintf_chk@plt+0x39c>
   10b58:	sub	sp, sp, #20
   10b5c:	ldr	r2, [r4]
   10b60:	mov	r7, r1
   10b64:	mov	r0, #6
   10b68:	ldr	r1, [pc, #636]	; 10dec <__snprintf_chk@plt+0x3a0>
   10b6c:	str	r2, [r3]
   10b70:	bl	10a10 <setlocale@plt>
   10b74:	ldr	r1, [pc, #628]	; 10df0 <__snprintf_chk@plt+0x3a4>
   10b78:	ldr	r0, [pc, #628]	; 10df4 <__snprintf_chk@plt+0x3a8>
   10b7c:	bl	10a1c <bindtextdomain@plt>
   10b80:	ldr	r0, [pc, #620]	; 10df4 <__snprintf_chk@plt+0x3a8>
   10b84:	bl	10950 <textdomain@plt>
   10b88:	mov	r8, #0
   10b8c:	ldr	r0, [pc, #612]	; 10df8 <__snprintf_chk@plt+0x3ac>
   10b90:	bl	1114c <__snprintf_chk@plt+0x700>
   10b94:	mov	r1, r7
   10b98:	mov	r0, sl
   10b9c:	str	r8, [sp]
   10ba0:	ldr	r3, [pc, #596]	; 10dfc <__snprintf_chk@plt+0x3b0>
   10ba4:	ldr	r2, [pc, #596]	; 10e00 <__snprintf_chk@plt+0x3b4>
   10ba8:	bl	109b0 <getopt_long@plt>
   10bac:	cmn	r0, #1
   10bb0:	beq	10bf0 <__snprintf_chk@plt+0x1a4>
   10bb4:	cmp	r0, #86	; 0x56
   10bb8:	bne	10db0 <__snprintf_chk@plt+0x364>
   10bbc:	mov	r2, #5
   10bc0:	ldr	r1, [pc, #572]	; 10e04 <__snprintf_chk@plt+0x3b8>
   10bc4:	mov	r0, r8
   10bc8:	bl	1092c <dcgettext@plt>
   10bcc:	ldr	r2, [r4]
   10bd0:	ldr	r3, [pc, #560]	; 10e08 <__snprintf_chk@plt+0x3bc>
   10bd4:	str	r8, [sp, #12]
   10bd8:	mov	r1, r0
   10bdc:	mov	r0, #1
   10be0:	bl	109ec <__printf_chk@plt>
   10be4:	ldr	r0, [sp, #12]
   10be8:	add	sp, sp, #20
   10bec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10bf0:	ldr	r3, [pc, #532]	; 10e0c <__snprintf_chk@plt+0x3c0>
   10bf4:	ldr	r4, [r3]
   10bf8:	subs	sl, sl, r4
   10bfc:	lsl	r4, r4, #2
   10c00:	beq	10dc4 <__snprintf_chk@plt+0x378>
   10c04:	mov	r0, #128	; 0x80
   10c08:	bl	10980 <malloc@plt>
   10c0c:	subs	r5, r0, #0
   10c10:	beq	10dd0 <__snprintf_chk@plt+0x384>
   10c14:	cmp	sl, #0
   10c18:	strle	r8, [sp, #12]
   10c1c:	ble	10d14 <__snprintf_chk@plt+0x2c8>
   10c20:	add	r7, r7, r4
   10c24:	mov	r4, #128	; 0x80
   10c28:	str	r8, [sp, #12]
   10c2c:	str	r7, [sp, #8]
   10c30:	ldr	fp, [r7], #4
   10c34:	mov	r0, fp
   10c38:	bl	109c8 <strlen@plt>
   10c3c:	add	r9, r0, #11
   10c40:	mov	r0, r9
   10c44:	bl	10980 <malloc@plt>
   10c48:	subs	r6, r0, #0
   10c4c:	beq	10d74 <__snprintf_chk@plt+0x328>
   10c50:	mov	r0, fp
   10c54:	bl	10f1c <__snprintf_chk@plt+0x4d0>
   10c58:	cmp	r0, #0
   10c5c:	bne	10d88 <__snprintf_chk@plt+0x33c>
   10c60:	ldr	r3, [r7, #-4]
   10c64:	mov	r1, r9
   10c68:	mov	r0, r6
   10c6c:	ldrb	r2, [r3]
   10c70:	str	r3, [sp, #4]
   10c74:	cmp	r2, #47	; 0x2f
   10c78:	mov	r2, #1
   10c7c:	ldrne	r3, [pc, #396]	; 10e10 <__snprintf_chk@plt+0x3c4>
   10c80:	ldreq	r3, [pc, #396]	; 10e14 <__snprintf_chk@plt+0x3c8>
   10c84:	str	r3, [sp]
   10c88:	mvn	r3, #0
   10c8c:	bl	10a4c <__snprintf_chk@plt>
   10c90:	b	10cc0 <__snprintf_chk@plt+0x274>
   10c94:	lsl	r4, r4, #1
   10c98:	mov	r0, r5
   10c9c:	mov	r1, r4
   10ca0:	bl	10944 <realloc@plt>
   10ca4:	adds	r3, r4, #0
   10ca8:	movne	r3, #1
   10cac:	cmp	r0, #0
   10cb0:	movne	r3, #0
   10cb4:	cmp	r3, #0
   10cb8:	mov	r5, r0
   10cbc:	bne	10d60 <__snprintf_chk@plt+0x314>
   10cc0:	mov	r2, r4
   10cc4:	mov	r1, r5
   10cc8:	mov	r0, r6
   10ccc:	bl	1095c <readlink@plt>
   10cd0:	cmp	r4, r0
   10cd4:	beq	10c94 <__snprintf_chk@plt+0x248>
   10cd8:	mov	r9, r0
   10cdc:	mov	r0, r6
   10ce0:	bl	10908 <free@plt>
   10ce4:	cmp	r9, #0
   10ce8:	blt	10d20 <__snprintf_chk@plt+0x2d4>
   10cec:	mov	r3, #0
   10cf0:	strb	r3, [r5, r9]
   10cf4:	ldr	r2, [r7, #-4]
   10cf8:	mov	r3, r5
   10cfc:	ldr	r1, [pc, #276]	; 10e18 <__snprintf_chk@plt+0x3cc>
   10d00:	mov	r0, #1
   10d04:	bl	109ec <__printf_chk@plt>
   10d08:	add	r8, r8, #1
   10d0c:	cmp	sl, r8
   10d10:	bne	10c2c <__snprintf_chk@plt+0x1e0>
   10d14:	mov	r0, r5
   10d18:	bl	10908 <free@plt>
   10d1c:	b	10be4 <__snprintf_chk@plt+0x198>
   10d20:	bl	109d4 <__errno_location@plt>
   10d24:	mov	r3, #1
   10d28:	str	r3, [sp, #12]
   10d2c:	ldr	r0, [r0]
   10d30:	cmp	r0, #2
   10d34:	moveq	r0, #3
   10d38:	bl	10998 <strerror@plt>
   10d3c:	ldr	r2, [pc, #216]	; 10e1c <__snprintf_chk@plt+0x3d0>
   10d40:	ldr	r3, [r7, #-4]
   10d44:	mov	r1, #1
   10d48:	ldr	ip, [r2]
   10d4c:	ldr	r2, [pc, #196]	; 10e18 <__snprintf_chk@plt+0x3cc>
   10d50:	str	r0, [sp]
   10d54:	mov	r0, ip
   10d58:	bl	109f8 <__fprintf_chk@plt>
   10d5c:	b	10d08 <__snprintf_chk@plt+0x2bc>
   10d60:	mov	r3, r4
   10d64:	ldr	r2, [pc, #180]	; 10e20 <__snprintf_chk@plt+0x3d4>
   10d68:	mov	r1, #0
   10d6c:	mov	r0, #1
   10d70:	bl	10974 <error@plt>
   10d74:	mov	r3, r9
   10d78:	mov	r1, r6
   10d7c:	ldr	r2, [pc, #156]	; 10e20 <__snprintf_chk@plt+0x3d4>
   10d80:	mov	r0, #1
   10d84:	bl	10974 <error@plt>
   10d88:	mov	r2, #5
   10d8c:	ldr	r1, [pc, #144]	; 10e24 <__snprintf_chk@plt+0x3d8>
   10d90:	mov	r0, #0
   10d94:	bl	1092c <dcgettext@plt>
   10d98:	ldr	r3, [sp, #8]
   10d9c:	mov	r1, #0
   10da0:	ldr	r3, [r3]
   10da4:	mov	r2, r0
   10da8:	mov	r0, #1
   10dac:	bl	10974 <error@plt>
   10db0:	cmp	r0, #104	; 0x68
   10db4:	bne	10dc4 <__snprintf_chk@plt+0x378>
   10db8:	ldr	r3, [pc, #104]	; 10e28 <__snprintf_chk@plt+0x3dc>
   10dbc:	ldr	r0, [r3]
   10dc0:	bl	10a58 <__snprintf_chk@plt+0xc>
   10dc4:	ldr	r3, [pc, #80]	; 10e1c <__snprintf_chk@plt+0x3d0>
   10dc8:	ldr	r0, [r3]
   10dcc:	bl	10a58 <__snprintf_chk@plt+0xc>
   10dd0:	mov	r1, r5
   10dd4:	mov	r3, #128	; 0x80
   10dd8:	ldr	r2, [pc, #64]	; 10e20 <__snprintf_chk@plt+0x3d4>
   10ddc:	mov	r0, #1
   10de0:	bl	10974 <error@plt>
   10de4:	andeq	r2, r2, r8
   10de8:	andeq	r2, r2, ip
   10dec:	andeq	r1, r1, r8, lsr #3
   10df0:	andeq	r1, r1, r0, ror #4
   10df4:	andeq	r1, r1, r4, ror r2
   10df8:	andeq	r1, r1, r4, rrx
   10dfc:	andeq	r1, r1, r0, ror r1
   10e00:	andeq	r1, r1, r0, lsl #5
   10e04:	andeq	r1, r1, r4, lsl #5
   10e08:	muleq	r1, r0, r2
   10e0c:	andeq	r2, r2, r0, lsl r0
   10e10:	ldrdeq	r1, [r1], -r8
   10e14:	andeq	r1, r1, r8, ror #5
   10e18:	strdeq	r1, [r1], -r0
   10e1c:	andeq	r2, r2, r8, lsl r0
   10e20:	andeq	r1, r1, r4, lsr #5
   10e24:	andeq	r1, r1, r0, asr #5
   10e28:	andeq	r2, r2, ip, lsl r0
   10e2c:	mov	fp, #0
   10e30:	mov	lr, #0
   10e34:	pop	{r1}		; (ldr r1, [sp], #4)
   10e38:	mov	r2, sp
   10e3c:	push	{r2}		; (str r2, [sp, #-4]!)
   10e40:	push	{r0}		; (str r0, [sp, #-4]!)
   10e44:	ldr	ip, [pc, #16]	; 10e5c <__snprintf_chk@plt+0x410>
   10e48:	push	{ip}		; (str ip, [sp, #-4]!)
   10e4c:	ldr	r0, [pc, #12]	; 10e60 <__snprintf_chk@plt+0x414>
   10e50:	ldr	r3, [pc, #12]	; 10e64 <__snprintf_chk@plt+0x418>
   10e54:	bl	1098c <__libc_start_main@plt>
   10e58:	bl	10a40 <abort@plt>
   10e5c:	andeq	r1, r1, r8, asr #2
   10e60:	andeq	r0, r1, r8, asr #22
   10e64:	andeq	r1, r1, r8, ror #1
   10e68:	ldr	r3, [pc, #20]	; 10e84 <__snprintf_chk@plt+0x438>
   10e6c:	ldr	r2, [pc, #20]	; 10e88 <__snprintf_chk@plt+0x43c>
   10e70:	add	r3, pc, r3
   10e74:	ldr	r2, [r3, r2]
   10e78:	cmp	r2, #0
   10e7c:	bxeq	lr
   10e80:	b	109a4 <__gmon_start__@plt>
   10e84:	andeq	r1, r1, r4, lsl #2
   10e88:	andeq	r0, r0, r0, lsl #1
   10e8c:	ldr	r0, [pc, #24]	; 10eac <__snprintf_chk@plt+0x460>
   10e90:	ldr	r3, [pc, #24]	; 10eb0 <__snprintf_chk@plt+0x464>
   10e94:	cmp	r3, r0
   10e98:	bxeq	lr
   10e9c:	ldr	r3, [pc, #16]	; 10eb4 <__snprintf_chk@plt+0x468>
   10ea0:	cmp	r3, #0
   10ea4:	bxeq	lr
   10ea8:	bx	r3
   10eac:	andeq	r2, r2, r8
   10eb0:	andeq	r2, r2, r8
   10eb4:	andeq	r0, r0, r0
   10eb8:	ldr	r0, [pc, #36]	; 10ee4 <__snprintf_chk@plt+0x498>
   10ebc:	ldr	r1, [pc, #36]	; 10ee8 <__snprintf_chk@plt+0x49c>
   10ec0:	sub	r1, r1, r0
   10ec4:	asr	r1, r1, #2
   10ec8:	add	r1, r1, r1, lsr #31
   10ecc:	asrs	r1, r1, #1
   10ed0:	bxeq	lr
   10ed4:	ldr	r3, [pc, #16]	; 10eec <__snprintf_chk@plt+0x4a0>
   10ed8:	cmp	r3, #0
   10edc:	bxeq	lr
   10ee0:	bx	r3
   10ee4:	andeq	r2, r2, r8
   10ee8:	andeq	r2, r2, r8
   10eec:	andeq	r0, r0, r0
   10ef0:	push	{r4, lr}
   10ef4:	ldr	r4, [pc, #24]	; 10f14 <__snprintf_chk@plt+0x4c8>
   10ef8:	ldrb	r3, [r4]
   10efc:	cmp	r3, #0
   10f00:	popne	{r4, pc}
   10f04:	bl	10e8c <__snprintf_chk@plt+0x440>
   10f08:	mov	r3, #1
   10f0c:	strb	r3, [r4]
   10f10:	pop	{r4, pc}
   10f14:	andeq	r2, r2, r0, lsr #32
   10f18:	b	10eb8 <__snprintf_chk@plt+0x46c>
   10f1c:	push	{r4, r5, r6, lr}
   10f20:	mov	r1, r0
   10f24:	ldr	r5, [pc, #164]	; 10fd0 <__snprintf_chk@plt+0x584>
   10f28:	sub	sp, sp, #8
   10f2c:	mov	r4, r0
   10f30:	ldr	r0, [r5]
   10f34:	mov	r3, #0
   10f38:	mov	r2, #6
   10f3c:	str	r0, [sp, #4]
   10f40:	ldr	r0, [pc, #140]	; 10fd4 <__snprintf_chk@plt+0x588>
   10f44:	str	r3, [sp]
   10f48:	bl	10a34 <strncmp@plt>
   10f4c:	cmp	r0, #0
   10f50:	addeq	r4, r4, #6
   10f54:	bl	109d4 <__errno_location@plt>
   10f58:	mov	r3, #0
   10f5c:	mov	r2, #10
   10f60:	mov	r1, sp
   10f64:	mov	r6, r0
   10f68:	str	r3, [r0]
   10f6c:	mov	r0, r4
   10f70:	bl	108fc <strtol@plt>
   10f74:	ldr	r3, [r6]
   10f78:	cmp	r3, #0
   10f7c:	bne	10fb0 <__snprintf_chk@plt+0x564>
   10f80:	ldr	r3, [sp]
   10f84:	cmp	r3, r4
   10f88:	beq	10fb0 <__snprintf_chk@plt+0x564>
   10f8c:	cmp	r3, #0
   10f90:	beq	10fa0 <__snprintf_chk@plt+0x554>
   10f94:	ldrb	r3, [r3]
   10f98:	cmp	r3, #0
   10f9c:	bne	10fb0 <__snprintf_chk@plt+0x564>
   10fa0:	cmp	r0, #0
   10fa4:	movgt	r0, #0
   10fa8:	movle	r0, #1
   10fac:	b	10fb4 <__snprintf_chk@plt+0x568>
   10fb0:	mov	r0, #1
   10fb4:	ldr	r2, [sp, #4]
   10fb8:	ldr	r3, [r5]
   10fbc:	cmp	r2, r3
   10fc0:	bne	10fcc <__snprintf_chk@plt+0x580>
   10fc4:	add	sp, sp, #8
   10fc8:	pop	{r4, r5, r6, pc}
   10fcc:	bl	10938 <__stack_chk_fail@plt>
   10fd0:	andeq	r1, r2, r0, ror lr
   10fd4:	andeq	r1, r1, r8, asr r2
   10fd8:	push	{r4, r5, r6, lr}
   10fdc:	mov	r4, r0
   10fe0:	bl	10968 <__fpending@plt>
   10fe4:	mov	r6, r0
   10fe8:	mov	r0, r4
   10fec:	bl	10914 <ferror@plt>
   10ff0:	mov	r5, r0
   10ff4:	mov	r0, r4
   10ff8:	bl	10a04 <fclose@plt>
   10ffc:	cmp	r5, #0
   11000:	mov	r4, r0
   11004:	bne	11024 <__snprintf_chk@plt+0x5d8>
   11008:	cmp	r0, #0
   1100c:	beq	1101c <__snprintf_chk@plt+0x5d0>
   11010:	cmp	r6, #0
   11014:	beq	1104c <__snprintf_chk@plt+0x600>
   11018:	mvn	r4, #0
   1101c:	mov	r0, r4
   11020:	pop	{r4, r5, r6, pc}
   11024:	cmp	r0, #0
   11028:	bne	11018 <__snprintf_chk@plt+0x5cc>
   1102c:	bl	109d4 <__errno_location@plt>
   11030:	ldr	r3, [r0]
   11034:	cmp	r3, #32
   11038:	beq	11018 <__snprintf_chk@plt+0x5cc>
   1103c:	str	r4, [r0]
   11040:	mvn	r4, #0
   11044:	mov	r0, r4
   11048:	pop	{r4, r5, r6, pc}
   1104c:	bl	109d4 <__errno_location@plt>
   11050:	ldr	r4, [r0]
   11054:	subs	r4, r4, #9
   11058:	mvnne	r4, #0
   1105c:	mov	r0, r4
   11060:	pop	{r4, r5, r6, pc}
   11064:	ldr	r3, [pc, #108]	; 110d8 <__snprintf_chk@plt+0x68c>
   11068:	push	{r4, lr}
   1106c:	ldr	r0, [r3]
   11070:	bl	10fd8 <__snprintf_chk@plt+0x58c>
   11074:	cmp	r0, #0
   11078:	beq	11090 <__snprintf_chk@plt+0x644>
   1107c:	bl	109d4 <__errno_location@plt>
   11080:	ldr	r3, [r0]
   11084:	mov	r4, r0
   11088:	cmp	r3, #32
   1108c:	bne	110ac <__snprintf_chk@plt+0x660>
   11090:	ldr	r3, [pc, #68]	; 110dc <__snprintf_chk@plt+0x690>
   11094:	ldr	r0, [r3]
   11098:	bl	10fd8 <__snprintf_chk@plt+0x58c>
   1109c:	cmp	r0, #0
   110a0:	popeq	{r4, pc}
   110a4:	mov	r0, #1
   110a8:	bl	10920 <_exit@plt>
   110ac:	mov	r2, #5
   110b0:	ldr	r1, [pc, #40]	; 110e0 <__snprintf_chk@plt+0x694>
   110b4:	mov	r0, #0
   110b8:	bl	1092c <dcgettext@plt>
   110bc:	ldr	r1, [r4]
   110c0:	ldr	r2, [pc, #28]	; 110e4 <__snprintf_chk@plt+0x698>
   110c4:	mov	r3, r0
   110c8:	mov	r0, #0
   110cc:	bl	10974 <error@plt>
   110d0:	mov	r0, #1
   110d4:	bl	10920 <_exit@plt>
   110d8:	andeq	r2, r2, ip, lsl r0
   110dc:	andeq	r2, r2, r8, lsl r0
   110e0:	andeq	r1, r1, r8, lsl #6
   110e4:	ldrdeq	r1, [r1], -r4
   110e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   110ec:	mov	r7, r0
   110f0:	ldr	r6, [pc, #72]	; 11140 <__snprintf_chk@plt+0x6f4>
   110f4:	ldr	r5, [pc, #72]	; 11144 <__snprintf_chk@plt+0x6f8>
   110f8:	add	r6, pc, r6
   110fc:	add	r5, pc, r5
   11100:	sub	r6, r6, r5
   11104:	mov	r8, r1
   11108:	mov	r9, r2
   1110c:	bl	108dc <strtol@plt-0x20>
   11110:	asrs	r6, r6, #2
   11114:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11118:	mov	r4, #0
   1111c:	add	r4, r4, #1
   11120:	ldr	r3, [r5], #4
   11124:	mov	r2, r9
   11128:	mov	r1, r8
   1112c:	mov	r0, r7
   11130:	blx	r3
   11134:	cmp	r6, r4
   11138:	bne	1111c <__snprintf_chk@plt+0x6d0>
   1113c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11140:	andeq	r0, r1, ip, ror #26
   11144:	andeq	r0, r1, r4, ror #26
   11148:	bx	lr
   1114c:	ldr	r3, [pc, #12]	; 11160 <__snprintf_chk@plt+0x714>
   11150:	mov	r1, #0
   11154:	add	r3, pc, r3
   11158:	ldr	r2, [r3]
   1115c:	b	109e0 <__cxa_atexit@plt>
   11160:	andeq	r0, r1, r8, lsr #29

Disassembly of section .fini:

00011164 <.fini>:
   11164:	push	{r3, lr}
   11168:	pop	{r3, pc}
