
raspbian-preinstalled/cx18-ctl:     file format elf32-littlearm


Disassembly of section .init:

0001070c <.init>:
   1070c:	push	{r3, lr}
   10710:	bl	11170 <close@plt+0x924>
   10714:	pop	{r3, pc}

Disassembly of section .plt:

00010718 <strtol@plt-0x14>:
   10718:	push	{lr}		; (str lr, [sp, #-4]!)
   1071c:	ldr	lr, [pc, #4]	; 10728 <strtol@plt-0x4>
   10720:	add	lr, pc, lr
   10724:	ldr	pc, [lr, #8]!
   10728:	andeq	r1, r1, r4, ror #16

0001072c <strtol@plt>:
   1072c:	add	ip, pc, #0, 12
   10730:	add	ip, ip, #69632	; 0x11000
   10734:	ldr	pc, [ip, #2148]!	; 0x864

00010738 <fopen@plt>:
   10738:	add	ip, pc, #0, 12
   1073c:	add	ip, ip, #69632	; 0x11000
   10740:	ldr	pc, [ip, #2140]!	; 0x85c

00010744 <fwrite@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #69632	; 0x11000
   1074c:	ldr	pc, [ip, #2132]!	; 0x854

00010750 <ioctl@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #69632	; 0x11000
   10758:	ldr	pc, [ip, #2124]!	; 0x84c

0001075c <fread@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #69632	; 0x11000
   10764:	ldr	pc, [ip, #2116]!	; 0x844

00010768 <puts@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #69632	; 0x11000
   10770:	ldr	pc, [ip, #2108]!	; 0x83c

00010774 <__libc_start_main@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #69632	; 0x11000
   1077c:	ldr	pc, [ip, #2100]!	; 0x834

00010780 <strerror@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #69632	; 0x11000
   10788:	ldr	pc, [ip, #2092]!	; 0x82c

0001078c <__gmon_start__@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #69632	; 0x11000
   10794:	ldr	pc, [ip, #2084]!	; 0x824

00010798 <open@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #69632	; 0x11000
   107a0:	ldr	pc, [ip, #2076]!	; 0x81c

000107a4 <getopt_long@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #69632	; 0x11000
   107ac:	ldr	pc, [ip, #2068]!	; 0x814

000107b0 <__ctype_b_loc@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #69632	; 0x11000
   107b8:	ldr	pc, [ip, #2060]!	; 0x80c

000107bc <exit@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #69632	; 0x11000
   107c4:	ldr	pc, [ip, #2052]!	; 0x804

000107c8 <strtoul@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #69632	; 0x11000
   107d0:	ldr	pc, [ip, #2044]!	; 0x7fc

000107d4 <strlen@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #69632	; 0x11000
   107dc:	ldr	pc, [ip, #2036]!	; 0x7f4

000107e0 <getsubopt@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #69632	; 0x11000
   107e8:	ldr	pc, [ip, #2028]!	; 0x7ec

000107ec <__errno_location@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #69632	; 0x11000
   107f4:	ldr	pc, [ip, #2020]!	; 0x7e4

000107f8 <__sprintf_chk@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #69632	; 0x11000
   10800:	ldr	pc, [ip, #2012]!	; 0x7dc

00010804 <putchar@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #69632	; 0x11000
   1080c:	ldr	pc, [ip, #2004]!	; 0x7d4

00010810 <__printf_chk@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #69632	; 0x11000
   10818:	ldr	pc, [ip, #1996]!	; 0x7cc

0001081c <__fprintf_chk@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #69632	; 0x11000
   10824:	ldr	pc, [ip, #1988]!	; 0x7c4

00010828 <fclose@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #69632	; 0x11000
   10830:	ldr	pc, [ip, #1980]!	; 0x7bc

00010834 <fputs@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #69632	; 0x11000
   1083c:	ldr	pc, [ip, #1972]!	; 0x7b4

00010840 <abort@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #69632	; 0x11000
   10848:	ldr	pc, [ip, #1964]!	; 0x7ac

0001084c <close@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #69632	; 0x11000
   10854:	ldr	pc, [ip, #1956]!	; 0x7a4

Disassembly of section .text:

00010858 <.text>:
   10858:	ldr	r3, [pc, #2084]	; 11084 <close@plt+0x838>
   1085c:	ldr	ip, [pc, #2084]	; 11088 <close@plt+0x83c>
   10860:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10864:	mov	r7, r0
   10868:	mov	r9, r1
   1086c:	ldm	r3, {r0, r1, r2}
   10870:	sub	sp, sp, #252	; 0xfc
   10874:	add	r5, sp, #48	; 0x30
   10878:	ldr	r3, [ip]
   1087c:	mov	r4, #0
   10880:	cmp	r7, #1
   10884:	stm	r5, {r0, r1, r2}
   10888:	str	r3, [sp, #244]	; 0xf4
   1088c:	str	r4, [sp, #40]	; 0x28
   10890:	beq	10ab0 <close@plt+0x264>
   10894:	ldr	r8, [pc, #2032]	; 1108c <close@plt+0x840>
   10898:	ldr	sl, [pc, #2032]	; 11090 <close@plt+0x844>
   1089c:	ldr	r3, [pc, #2032]	; 11094 <close@plt+0x848>
   108a0:	mov	r6, r4
   108a4:	mov	fp, r8
   108a8:	str	r3, [sp, #8]
   108ac:	str	r4, [sp, #12]
   108b0:	str	r4, [sp, #20]
   108b4:	str	r4, [sp, #16]
   108b8:	ldr	r2, [r8]
   108bc:	str	r6, [sp, #44]	; 0x2c
   108c0:	cmp	r2, #0
   108c4:	beq	10928 <close@plt+0xdc>
   108c8:	bl	107b0 <__ctype_b_loc@plt>
   108cc:	ldr	r3, [pc, #1976]	; 1108c <close@plt+0x840>
   108d0:	mov	r2, #0
   108d4:	mov	ip, #58	; 0x3a
   108d8:	ldr	lr, [r0]
   108dc:	ldr	r0, [r3, #12]
   108e0:	lsl	r1, r0, #1
   108e4:	ldrh	r1, [lr, r1]
   108e8:	tst	r1, #1024	; 0x400
   108ec:	beq	1091c <close@plt+0xd0>
   108f0:	ldr	r1, [r3, #4]
   108f4:	cmp	r1, #1
   108f8:	add	r1, sp, #248	; 0xf8
   108fc:	add	r1, r1, r2
   10900:	strb	r0, [r1, #-112]	; 0xffffff90
   10904:	add	r1, r2, #1
   10908:	addeq	r0, sp, #248	; 0xf8
   1090c:	addeq	r1, r0, r1
   10910:	addeq	r2, r2, #2
   10914:	movne	r2, r1
   10918:	strbeq	ip, [r1, #-112]	; 0xffffff90
   1091c:	ldr	r1, [r3, #16]!
   10920:	cmp	r1, #0
   10924:	bne	108dc <close@plt+0x90>
   10928:	add	r3, sp, #248	; 0xf8
   1092c:	add	ip, r3, r2
   10930:	add	r3, sp, #44	; 0x2c
   10934:	str	r3, [sp]
   10938:	add	r2, sp, #136	; 0x88
   1093c:	mov	r3, fp
   10940:	mov	r1, r9
   10944:	mov	r0, r7
   10948:	strb	r6, [ip, #-112]	; 0xffffff90
   1094c:	bl	107a4 <getopt_long@plt>
   10950:	cmn	r0, #1
   10954:	beq	10bf8 <close@plt+0x3ac>
   10958:	add	r3, sl, r0
   1095c:	mov	r2, #1
   10960:	sub	r0, r0, #58	; 0x3a
   10964:	strb	r2, [r3, #20]
   10968:	cmp	r0, #70	; 0x46
   1096c:	ldrls	pc, [pc, r0, lsl #2]
   10970:	b	108b8 <close@plt+0x6c>
   10974:	muleq	r1, r0, sl
   10978:			; <UNDEFINED> instruction: 0x000108b8
   1097c:			; <UNDEFINED> instruction: 0x000108b8
   10980:			; <UNDEFINED> instruction: 0x000108b8
   10984:			; <UNDEFINED> instruction: 0x000108b8
   10988:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   1098c:			; <UNDEFINED> instruction: 0x000108b8
   10990:			; <UNDEFINED> instruction: 0x000108b8
   10994:			; <UNDEFINED> instruction: 0x000108b8
   10998:			; <UNDEFINED> instruction: 0x000108b8
   1099c:	andeq	r0, r1, r0, ror #21
   109a0:			; <UNDEFINED> instruction: 0x000108b8
   109a4:			; <UNDEFINED> instruction: 0x000108b8
   109a8:			; <UNDEFINED> instruction: 0x000108b8
   109ac:			; <UNDEFINED> instruction: 0x000108b8
   109b0:			; <UNDEFINED> instruction: 0x000108b8
   109b4:			; <UNDEFINED> instruction: 0x000108b8
   109b8:			; <UNDEFINED> instruction: 0x000108b8
   109bc:			; <UNDEFINED> instruction: 0x000108b8
   109c0:			; <UNDEFINED> instruction: 0x000108b8
   109c4:			; <UNDEFINED> instruction: 0x000108b8
   109c8:			; <UNDEFINED> instruction: 0x000108b8
   109cc:			; <UNDEFINED> instruction: 0x000108b8
   109d0:			; <UNDEFINED> instruction: 0x000108b8
   109d4:			; <UNDEFINED> instruction: 0x000108b8
   109d8:			; <UNDEFINED> instruction: 0x000108b8
   109dc:			; <UNDEFINED> instruction: 0x000108b8
   109e0:			; <UNDEFINED> instruction: 0x000108b8
   109e4:			; <UNDEFINED> instruction: 0x000108b8
   109e8:			; <UNDEFINED> instruction: 0x000108b8
   109ec:			; <UNDEFINED> instruction: 0x000108b8
   109f0:			; <UNDEFINED> instruction: 0x000108b8
   109f4:			; <UNDEFINED> instruction: 0x000108b8
   109f8:			; <UNDEFINED> instruction: 0x000108b8
   109fc:			; <UNDEFINED> instruction: 0x000108b8
   10a00:			; <UNDEFINED> instruction: 0x000108b8
   10a04:			; <UNDEFINED> instruction: 0x000108b8
   10a08:			; <UNDEFINED> instruction: 0x000108b8
   10a0c:			; <UNDEFINED> instruction: 0x000108b8
   10a10:			; <UNDEFINED> instruction: 0x000108b8
   10a14:			; <UNDEFINED> instruction: 0x000108b8
   10a18:			; <UNDEFINED> instruction: 0x000108b8
   10a1c:	strdeq	r0, [r1], -ip
   10a20:			; <UNDEFINED> instruction: 0x000108b8
   10a24:			; <UNDEFINED> instruction: 0x000108b8
   10a28:			; <UNDEFINED> instruction: 0x000108b8
   10a2c:			; <UNDEFINED> instruction: 0x00010ab0
   10a30:	andeq	r0, r1, r8, asr #22
   10a34:			; <UNDEFINED> instruction: 0x000108b8
   10a38:			; <UNDEFINED> instruction: 0x000108b8
   10a3c:			; <UNDEFINED> instruction: 0x000108b8
   10a40:			; <UNDEFINED> instruction: 0x000108b8
   10a44:			; <UNDEFINED> instruction: 0x000108b8
   10a48:			; <UNDEFINED> instruction: 0x000108b8
   10a4c:			; <UNDEFINED> instruction: 0x000108b8
   10a50:			; <UNDEFINED> instruction: 0x000108b8
   10a54:			; <UNDEFINED> instruction: 0x000108b8
   10a58:			; <UNDEFINED> instruction: 0x000108b8
   10a5c:			; <UNDEFINED> instruction: 0x000108b8
   10a60:			; <UNDEFINED> instruction: 0x000108b8
   10a64:			; <UNDEFINED> instruction: 0x000108b8
   10a68:			; <UNDEFINED> instruction: 0x000108b8
   10a6c:			; <UNDEFINED> instruction: 0x000108b8
   10a70:			; <UNDEFINED> instruction: 0x000108b8
   10a74:			; <UNDEFINED> instruction: 0x000108b8
   10a78:			; <UNDEFINED> instruction: 0x000108b8
   10a7c:			; <UNDEFINED> instruction: 0x000108b8
   10a80:			; <UNDEFINED> instruction: 0x000108b8
   10a84:			; <UNDEFINED> instruction: 0x000108b8
   10a88:			; <UNDEFINED> instruction: 0x000108b8
   10a8c:			; <UNDEFINED> instruction: 0x00010ab4
   10a90:	ldr	r3, [pc, #1536]	; 11098 <close@plt+0x84c>
   10a94:	ldr	r1, [pc, #1536]	; 1109c <close@plt+0x850>
   10a98:	ldr	r2, [pc, #1536]	; 110a0 <close@plt+0x854>
   10a9c:	ldr	r3, [r3]
   10aa0:	ldr	r0, [r1]
   10aa4:	mov	r1, #1
   10aa8:	ldr	r3, [r9, r3, lsl #2]
   10aac:	bl	1081c <__fprintf_chk@plt>
   10ab0:	bl	113c8 <close@plt+0xb7c>
   10ab4:	ldr	r3, [pc, #1512]	; 110a4 <close@plt+0x858>
   10ab8:	mov	r2, #0
   10abc:	mov	r1, r2
   10ac0:	ldr	r0, [r3]
   10ac4:	bl	1072c <strtol@plt>
   10ac8:	str	r0, [sp, #40]	; 0x28
   10acc:	b	108b8 <close@plt+0x6c>
   10ad0:	ldr	r3, [pc, #1472]	; 11098 <close@plt+0x84c>
   10ad4:	ldr	r1, [pc, #1472]	; 1109c <close@plt+0x850>
   10ad8:	ldr	r2, [pc, #1480]	; 110a8 <close@plt+0x85c>
   10adc:	b	10a9c <close@plt+0x250>
   10ae0:	ldr	r3, [pc, #1468]	; 110a4 <close@plt+0x858>
   10ae4:	mov	r2, #0
   10ae8:	mov	r1, r2
   10aec:	ldr	r0, [r3]
   10af0:	bl	1072c <strtol@plt>
   10af4:	mov	r4, r0
   10af8:	b	108b8 <close@plt+0x6c>
   10afc:	ldr	r3, [pc, #1440]	; 110a4 <close@plt+0x858>
   10b00:	ldr	r0, [r3]
   10b04:	str	r0, [sp, #8]
   10b08:	ldrb	r3, [r0]
   10b0c:	sub	r3, r3, #48	; 0x30
   10b10:	cmp	r3, #9
   10b14:	bhi	108b8 <close@plt+0x6c>
   10b18:	bl	107d4 <strlen@plt>
   10b1c:	cmp	r0, #3
   10b20:	bhi	108b8 <close@plt+0x6c>
   10b24:	ldr	r3, [sp, #8]
   10b28:	mov	r2, #20
   10b2c:	str	r3, [sp]
   10b30:	mov	r1, #1
   10b34:	ldr	r3, [pc, #1392]	; 110ac <close@plt+0x860>
   10b38:	mov	r0, sl
   10b3c:	bl	107f8 <__sprintf_chk@plt>
   10b40:	str	sl, [sp, #8]
   10b44:	b	108b8 <close@plt+0x6c>
   10b48:	ldr	r3, [pc, #1364]	; 110a4 <close@plt+0x858>
   10b4c:	str	r4, [sp, #24]
   10b50:	ldr	r4, [sp, #12]
   10b54:	ldr	r3, [r3]
   10b58:	str	r7, [sp, #28]
   10b5c:	str	r3, [sp, #36]	; 0x24
   10b60:	ldr	r3, [sp, #36]	; 0x24
   10b64:	ldrb	r3, [r3]
   10b68:	cmp	r3, #0
   10b6c:	beq	10d68 <close@plt+0x51c>
   10b70:	add	r2, sp, #32
   10b74:	mov	r1, r5
   10b78:	add	r0, sp, #36	; 0x24
   10b7c:	bl	107e0 <getsubopt@plt>
   10b80:	subs	r7, r0, #0
   10b84:	beq	10bb4 <close@plt+0x368>
   10b88:	cmp	r7, #1
   10b8c:	bne	10bdc <close@plt+0x390>
   10b90:	ldr	r0, [sp, #32]
   10b94:	cmp	r0, #0
   10b98:	beq	10dac <close@plt+0x560>
   10b9c:	mov	r2, #0
   10ba0:	mov	r1, r2
   10ba4:	bl	107c8 <strtoul@plt>
   10ba8:	str	r0, [sp, #20]
   10bac:	mov	r4, r7
   10bb0:	b	10b60 <close@plt+0x314>
   10bb4:	ldr	r0, [sp, #32]
   10bb8:	cmp	r0, #0
   10bbc:	beq	10f54 <close@plt+0x708>
   10bc0:	mov	r2, r7
   10bc4:	mov	r1, r7
   10bc8:	bl	107c8 <strtoul@plt>
   10bcc:	mov	r7, r4
   10bd0:	uxth	r3, r0
   10bd4:	str	r3, [sp, #16]
   10bd8:	b	10bac <close@plt+0x360>
   10bdc:	ldr	r3, [pc, #1208]	; 1109c <close@plt+0x850>
   10be0:	mov	r2, #29
   10be4:	mov	r1, #1
   10be8:	ldr	r3, [r3]
   10bec:	ldr	r0, [pc, #1212]	; 110b0 <close@plt+0x864>
   10bf0:	bl	10744 <fwrite@plt>
   10bf4:	bl	113c8 <close@plt+0xb7c>
   10bf8:	ldr	r5, [pc, #1176]	; 11098 <close@plt+0x84c>
   10bfc:	ldr	r3, [r5]
   10c00:	cmp	r3, r7
   10c04:	bge	10c4c <close@plt+0x400>
   10c08:	ldr	r1, [pc, #1188]	; 110b4 <close@plt+0x868>
   10c0c:	mov	r0, #1
   10c10:	bl	10810 <__printf_chk@plt>
   10c14:	ldr	r4, [pc, #1180]	; 110b8 <close@plt+0x86c>
   10c18:	b	10c34 <close@plt+0x3e8>
   10c1c:	add	ip, r3, #1
   10c20:	ldr	r2, [r9, r3, lsl #2]
   10c24:	mov	r1, r4
   10c28:	mov	r0, #1
   10c2c:	str	ip, [r5]
   10c30:	bl	10810 <__printf_chk@plt>
   10c34:	ldr	r3, [r5]
   10c38:	cmp	r3, r7
   10c3c:	blt	10c1c <close@plt+0x3d0>
   10c40:	mov	r0, #10
   10c44:	bl	10804 <putchar@plt>
   10c48:	bl	113c8 <close@plt+0xb7c>
   10c4c:	mov	r1, #2
   10c50:	ldr	r0, [sp, #8]
   10c54:	bl	10798 <open@plt>
   10c58:	subs	r7, r0, #0
   10c5c:	blt	10d78 <close@plt+0x52c>
   10c60:	ldr	r8, [pc, #1064]	; 11090 <close@plt+0x844>
   10c64:	ldrb	r3, [r8, #125]	; 0x7d
   10c68:	cmp	r3, #0
   10c6c:	beq	10d1c <close@plt+0x4d0>
   10c70:	ldr	r2, [sp, #12]
   10c74:	ldr	r3, [pc, #1088]	; 110bc <close@plt+0x870>
   10c78:	cmp	r2, #0
   10c7c:	ldr	r2, [sp, #20]
   10c80:	add	r5, sp, #60	; 0x3c
   10c84:	str	r6, [sp, #60]	; 0x3c
   10c88:	lsr	r9, r2, #16
   10c8c:	lsl	sl, r2, #16
   10c90:	str	r6, [sp, #64]	; 0x40
   10c94:	str	r6, [sp, #104]	; 0x68
   10c98:	str	r6, [sp, #112]	; 0x70
   10c9c:	str	r3, [sp, #100]	; 0x64
   10ca0:	lsl	r9, r9, #16
   10ca4:	str	sl, [sp, #108]	; 0x6c
   10ca8:	bne	10f98 <close@plt+0x74c>
   10cac:	ldr	r3, [sp, #16]
   10cb0:	ldr	r0, [pc, #1032]	; 110c0 <close@plt+0x874>
   10cb4:	mov	ip, #0
   10cb8:	orr	sl, sl, r3
   10cbc:	str	r0, [sp, #100]	; 0x64
   10cc0:	ldr	r3, [pc, #1020]	; 110c4 <close@plt+0x878>
   10cc4:	mov	r2, r5
   10cc8:	ldr	r1, [pc, #1016]	; 110c8 <close@plt+0x87c>
   10ccc:	mov	r0, r7
   10cd0:	str	sl, [sp, #108]	; 0x6c
   10cd4:	str	ip, [sp, #104]	; 0x68
   10cd8:	str	ip, [sp, #112]	; 0x70
   10cdc:	bl	114f0 <close@plt+0xca4>
   10ce0:	cmp	r0, #0
   10ce4:	beq	10f84 <close@plt+0x738>
   10ce8:	ldr	r0, [pc, #988]	; 110cc <close@plt+0x880>
   10cec:	mov	ip, #0
   10cf0:	str	r0, [sp, #100]	; 0x64
   10cf4:	mov	r2, r5
   10cf8:	ldr	r3, [pc, #964]	; 110c4 <close@plt+0x878>
   10cfc:	ldr	r1, [pc, #964]	; 110c8 <close@plt+0x87c>
   10d00:	mov	r0, r7
   10d04:	str	r9, [sp, #108]	; 0x6c
   10d08:	str	r6, [sp, #112]	; 0x70
   10d0c:	str	ip, [sp, #104]	; 0x68
   10d10:	bl	114f0 <close@plt+0xca4>
   10d14:	cmp	r0, #0
   10d18:	beq	10f70 <close@plt+0x724>
   10d1c:	ldrb	r3, [r8, #93]	; 0x5d
   10d20:	cmp	r3, #0
   10d24:	bne	10ebc <close@plt+0x670>
   10d28:	ldrb	r3, [r8, #88]	; 0x58
   10d2c:	cmp	r3, #0
   10d30:	bne	10e5c <close@plt+0x610>
   10d34:	ldrb	r3, [r8, #121]	; 0x79
   10d38:	cmp	r3, #0
   10d3c:	bne	10dec <close@plt+0x5a0>
   10d40:	ldrb	r3, [r8, #148]	; 0x94
   10d44:	cmp	r3, #0
   10d48:	bne	10dd4 <close@plt+0x588>
   10d4c:	ldrb	r3, [r8, #149]	; 0x95
   10d50:	cmp	r3, #0
   10d54:	bne	10dc8 <close@plt+0x57c>
   10d58:	mov	r0, r7
   10d5c:	bl	1084c <close@plt>
   10d60:	mov	r0, #0
   10d64:	bl	107bc <exit@plt>
   10d68:	str	r4, [sp, #12]
   10d6c:	ldr	r7, [sp, #28]
   10d70:	ldr	r4, [sp, #24]
   10d74:	b	108b8 <close@plt+0x6c>
   10d78:	ldr	r3, [pc, #796]	; 1109c <close@plt+0x850>
   10d7c:	ldr	r4, [r3]
   10d80:	bl	107ec <__errno_location@plt>
   10d84:	ldr	r0, [r0]
   10d88:	bl	10780 <strerror@plt>
   10d8c:	ldr	r3, [sp, #8]
   10d90:	ldr	r2, [pc, #824]	; 110d0 <close@plt+0x884>
   10d94:	mov	r1, #1
   10d98:	str	r0, [sp]
   10d9c:	mov	r0, r4
   10da0:	bl	1081c <__fprintf_chk@plt>
   10da4:	mov	r0, #1
   10da8:	bl	107bc <exit@plt>
   10dac:	ldr	r0, [pc, #744]	; 1109c <close@plt+0x850>
   10db0:	mov	r1, r7
   10db4:	mov	r2, #34	; 0x22
   10db8:	ldr	r3, [r0]
   10dbc:	ldr	r0, [pc, #784]	; 110d4 <close@plt+0x888>
   10dc0:	bl	10744 <fwrite@plt>
   10dc4:	b	10ab0 <close@plt+0x264>
   10dc8:	ldr	r0, [pc, #776]	; 110d8 <close@plt+0x88c>
   10dcc:	bl	10768 <puts@plt>
   10dd0:	b	10d58 <close@plt+0x50c>
   10dd4:	ldr	r3, [pc, #768]	; 110dc <close@plt+0x890>
   10dd8:	add	r2, sp, #40	; 0x28
   10ddc:	ldr	r1, [pc, #764]	; 110e0 <close@plt+0x894>
   10de0:	mov	r0, r7
   10de4:	bl	114f0 <close@plt+0xca4>
   10de8:	b	10d4c <close@plt+0x500>
   10dec:	ldr	r1, [pc, #752]	; 110e4 <close@plt+0x898>
   10df0:	ldr	r0, [pc, #752]	; 110e8 <close@plt+0x89c>
   10df4:	bl	10738 <fopen@plt>
   10df8:	subs	r5, r0, #0
   10dfc:	beq	11034 <close@plt+0x7e8>
   10e00:	mov	r3, r5
   10e04:	ldr	r2, [pc, #736]	; 110ec <close@plt+0x8a0>
   10e08:	mov	r1, #1
   10e0c:	ldr	r0, [pc, #732]	; 110f0 <close@plt+0x8a4>
   10e10:	bl	1075c <fread@plt>
   10e14:	mov	r4, #0
   10e18:	add	r3, r8, r0
   10e1c:	mov	r0, r5
   10e20:	strb	r4, [r3, #276]	; 0x114
   10e24:	bl	10828 <fclose@plt>
   10e28:	mov	r2, #10
   10e2c:	mov	r1, r4
   10e30:	ldr	r0, [pc, #696]	; 110f0 <close@plt+0x8a4>
   10e34:	bl	1072c <strtol@plt>
   10e38:	ldr	r1, [pc, #692]	; 110f4 <close@plt+0x8a8>
   10e3c:	mov	r4, r0
   10e40:	mov	r0, #1
   10e44:	bl	10810 <__printf_chk@plt>
   10e48:	mov	r0, r4
   10e4c:	bl	11224 <close@plt+0x9d8>
   10e50:	mov	r0, #10
   10e54:	bl	10804 <putchar@plt>
   10e58:	b	10d40 <close@plt+0x4f4>
   10e5c:	ldr	r3, [pc, #660]	; 110f8 <close@plt+0x8ac>
   10e60:	mov	r2, #20
   10e64:	mov	r1, #1
   10e68:	str	r4, [sp]
   10e6c:	add	r0, sp, #116	; 0x74
   10e70:	bl	107f8 <__sprintf_chk@plt>
   10e74:	ldr	r1, [pc, #640]	; 110fc <close@plt+0x8b0>
   10e78:	ldr	r0, [pc, #616]	; 110e8 <close@plt+0x89c>
   10e7c:	bl	10738 <fopen@plt>
   10e80:	subs	r5, r0, #0
   10e84:	beq	11054 <close@plt+0x808>
   10e88:	add	r0, sp, #116	; 0x74
   10e8c:	mov	r1, r5
   10e90:	bl	10834 <fputs@plt>
   10e94:	mov	r0, r5
   10e98:	bl	10828 <fclose@plt>
   10e9c:	ldr	r1, [pc, #604]	; 11100 <close@plt+0x8b4>
   10ea0:	mov	r0, #1
   10ea4:	bl	10810 <__printf_chk@plt>
   10ea8:	mov	r0, r4
   10eac:	bl	11224 <close@plt+0x9d8>
   10eb0:	mov	r0, #10
   10eb4:	bl	10804 <putchar@plt>
   10eb8:	b	10d34 <close@plt+0x4e8>
   10ebc:	ldr	r0, [pc, #576]	; 11104 <close@plt+0x8b8>
   10ec0:	add	r5, sp, #60	; 0x3c
   10ec4:	mov	r3, #0
   10ec8:	str	r0, [sp, #100]	; 0x64
   10ecc:	mov	r2, r5
   10ed0:	ldr	r1, [pc, #560]	; 11108 <close@plt+0x8bc>
   10ed4:	mov	r0, r7
   10ed8:	str	r3, [sp, #60]	; 0x3c
   10edc:	str	r3, [sp, #64]	; 0x40
   10ee0:	str	r3, [sp, #104]	; 0x68
   10ee4:	bl	10750 <ioctl@plt>
   10ee8:	cmp	r0, #0
   10eec:	beq	1100c <close@plt+0x7c0>
   10ef0:	ldr	r0, [pc, #452]	; 110bc <close@plt+0x870>
   10ef4:	mov	r3, #0
   10ef8:	str	r0, [sp, #100]	; 0x64
   10efc:	mov	r2, r5
   10f00:	ldr	r1, [pc, #512]	; 11108 <close@plt+0x8bc>
   10f04:	mov	r0, r7
   10f08:	str	r3, [sp, #104]	; 0x68
   10f0c:	bl	10750 <ioctl@plt>
   10f10:	cmp	r0, #0
   10f14:	beq	10ff8 <close@plt+0x7ac>
   10f18:	ldr	r0, [pc, #416]	; 110c0 <close@plt+0x874>
   10f1c:	mov	r3, #0
   10f20:	str	r0, [sp, #100]	; 0x64
   10f24:	mov	r2, r5
   10f28:	ldr	r1, [pc, #472]	; 11108 <close@plt+0x8bc>
   10f2c:	mov	r0, r7
   10f30:	str	r3, [sp, #104]	; 0x68
   10f34:	bl	10750 <ioctl@plt>
   10f38:	cmp	r0, #0
   10f3c:	bne	10d28 <close@plt+0x4dc>
   10f40:	ldrd	r2, [sp, #108]	; 0x6c
   10f44:	ldr	r1, [pc, #448]	; 1110c <close@plt+0x8c0>
   10f48:	mov	r0, #1
   10f4c:	bl	10810 <__printf_chk@plt>
   10f50:	b	10d28 <close@plt+0x4dc>
   10f54:	ldr	r3, [pc, #320]	; 1109c <close@plt+0x850>
   10f58:	mov	r2, #34	; 0x22
   10f5c:	mov	r1, #1
   10f60:	ldr	r3, [r3]
   10f64:	ldr	r0, [pc, #420]	; 11110 <close@plt+0x8c4>
   10f68:	bl	10744 <fwrite@plt>
   10f6c:	bl	113c8 <close@plt+0xb7c>
   10f70:	ldrd	r2, [sp, #108]	; 0x6c
   10f74:	ldr	r1, [pc, #408]	; 11114 <close@plt+0x8c8>
   10f78:	mov	r0, #1
   10f7c:	bl	10810 <__printf_chk@plt>
   10f80:	b	10d1c <close@plt+0x4d0>
   10f84:	ldrd	r2, [sp, #108]	; 0x6c
   10f88:	ldr	r1, [pc, #392]	; 11118 <close@plt+0x8cc>
   10f8c:	mov	r0, #1
   10f90:	bl	10810 <__printf_chk@plt>
   10f94:	b	10ce8 <close@plt+0x49c>
   10f98:	mov	r2, r5
   10f9c:	ldr	r3, [pc, #288]	; 110c4 <close@plt+0x878>
   10fa0:	ldr	r1, [pc, #288]	; 110c8 <close@plt+0x87c>
   10fa4:	bl	114f0 <close@plt+0xca4>
   10fa8:	cmp	r0, #0
   10fac:	beq	11020 <close@plt+0x7d4>
   10fb0:	ldr	r0, [pc, #356]	; 1111c <close@plt+0x8d0>
   10fb4:	mov	ip, #0
   10fb8:	str	r0, [sp, #100]	; 0x64
   10fbc:	ldr	r3, [pc, #256]	; 110c4 <close@plt+0x878>
   10fc0:	mov	r2, r5
   10fc4:	ldr	r1, [pc, #252]	; 110c8 <close@plt+0x87c>
   10fc8:	mov	r0, r7
   10fcc:	str	r9, [sp, #108]	; 0x6c
   10fd0:	str	r6, [sp, #112]	; 0x70
   10fd4:	str	ip, [sp, #104]	; 0x68
   10fd8:	bl	114f0 <close@plt+0xca4>
   10fdc:	cmp	r0, #0
   10fe0:	bne	10cac <close@plt+0x460>
   10fe4:	ldrd	r2, [sp, #108]	; 0x6c
   10fe8:	ldr	r1, [pc, #304]	; 11120 <close@plt+0x8d4>
   10fec:	mov	r0, #1
   10ff0:	bl	10810 <__printf_chk@plt>
   10ff4:	b	10cac <close@plt+0x460>
   10ff8:	ldrd	r2, [sp, #108]	; 0x6c
   10ffc:	ldr	r1, [pc, #288]	; 11124 <close@plt+0x8d8>
   11000:	mov	r0, #1
   11004:	bl	10810 <__printf_chk@plt>
   11008:	b	10f18 <close@plt+0x6cc>
   1100c:	ldrd	r2, [sp, #108]	; 0x6c
   11010:	ldr	r1, [pc, #272]	; 11128 <close@plt+0x8dc>
   11014:	mov	r0, #1
   11018:	bl	10810 <__printf_chk@plt>
   1101c:	b	10ef0 <close@plt+0x6a4>
   11020:	ldrd	r2, [sp, #108]	; 0x6c
   11024:	ldr	r1, [pc, #256]	; 1112c <close@plt+0x8e0>
   11028:	mov	r0, #1
   1102c:	bl	10810 <__printf_chk@plt>
   11030:	b	10fb0 <close@plt+0x764>
   11034:	bl	107ec <__errno_location@plt>
   11038:	ldr	r0, [r0]
   1103c:	bl	10780 <strerror@plt>
   11040:	ldr	r1, [pc, #232]	; 11130 <close@plt+0x8e4>
   11044:	mov	r2, r0
   11048:	mov	r0, #1
   1104c:	bl	10810 <__printf_chk@plt>
   11050:	b	10d40 <close@plt+0x4f4>
   11054:	bl	107ec <__errno_location@plt>
   11058:	mov	r5, r0
   1105c:	ldr	r0, [r0]
   11060:	bl	10780 <strerror@plt>
   11064:	ldr	r1, [pc, #196]	; 11130 <close@plt+0x8e4>
   11068:	mov	r2, r0
   1106c:	mov	r0, #1
   11070:	bl	10810 <__printf_chk@plt>
   11074:	ldr	r3, [r5]
   11078:	cmp	r3, #0
   1107c:	bne	10d34 <close@plt+0x4e8>
   11080:	b	10e9c <close@plt+0x650>
   11084:	ldrdeq	r1, [r1], -r4
   11088:	andeq	r1, r2, r8, lsl #29
   1108c:	andeq	r2, r2, r8
   11090:	strheq	r2, [r2], -r0
   11094:	andeq	r1, r1, r8, ror #21
   11098:	muleq	r2, r8, r0
   1109c:	andeq	r2, r2, r0, lsr #1
   110a0:	andeq	r1, r1, ip, ror #22
   110a4:	andeq	r2, r2, r8, lsr #1
   110a8:	andeq	r1, r1, ip, lsl #23
   110ac:	strdeq	r1, [r1], -r4
   110b0:	andeq	r1, r1, ip, asr #22
   110b4:	andeq	r1, r1, r4, lsr #23
   110b8:			; <UNDEFINED> instruction: 0x00011bb8
   110bc:	sbceq	r8, r7, #8, 2
   110c0:	sbceq	r8, r7, #0, 2
   110c4:	ldrdeq	r1, [r1], -r4
   110c8:	eorsmi	r5, r8, pc, asr #12
   110cc:	sbceq	r8, r7, #4, 2
   110d0:			; <UNDEFINED> instruction: 0x00011bbc
   110d4:	andeq	r1, r1, r4, lsl #22
   110d8:	strdeq	r1, [r1], -r0
   110dc:	ldrdeq	r1, [r1], -ip
   110e0:	andmi	r6, r4, r6, ror #8
   110e4:	ldrdeq	r1, [r1], -r8
   110e8:	andeq	r1, r1, r0, lsr #25
   110ec:	andeq	r0, r0, r7, ror #7
   110f0:	andeq	r2, r2, r4, asr #3
   110f4:	andeq	r1, r1, r8, asr #25
   110f8:	muleq	r1, r8, ip
   110fc:	muleq	r1, ip, ip
   11100:	andeq	r1, r1, r4, asr #25
   11104:	sbceq	r2, r7, #16
   11108:	eorsgt	r5, r8, r0, asr r6
   1110c:	andeq	r1, r1, r4, lsl #25
   11110:	andeq	r1, r1, r8, lsr #22
   11114:	andeq	r1, r1, r0, asr #24
   11118:	andeq	r1, r1, r4, lsr #24
   1111c:	sbceq	r8, r7, #12, 2
   11120:	andeq	r1, r1, r8, lsl #24
   11124:	andeq	r1, r1, r0, ror ip
   11128:	andeq	r1, r1, ip, asr ip
   1112c:	andeq	r1, r1, ip, ror #23
   11130:	ldrdeq	r1, [r1], -r8
   11134:	mov	fp, #0
   11138:	mov	lr, #0
   1113c:	pop	{r1}		; (ldr r1, [sp], #4)
   11140:	mov	r2, sp
   11144:	push	{r2}		; (str r2, [sp, #-4]!)
   11148:	push	{r0}		; (str r0, [sp, #-4]!)
   1114c:	ldr	ip, [pc, #16]	; 11164 <close@plt+0x918>
   11150:	push	{ip}		; (str ip, [sp, #-4]!)
   11154:	ldr	r0, [pc, #12]	; 11168 <close@plt+0x91c>
   11158:	ldr	r3, [pc, #12]	; 1116c <close@plt+0x920>
   1115c:	bl	10774 <__libc_start_main@plt>
   11160:	bl	10840 <abort@plt>
   11164:	andeq	r1, r1, r4, asr #11
   11168:	andeq	r0, r1, r8, asr r8
   1116c:	andeq	r1, r1, r4, ror #10
   11170:	ldr	r3, [pc, #20]	; 1118c <close@plt+0x940>
   11174:	ldr	r2, [pc, #20]	; 11190 <close@plt+0x944>
   11178:	add	r3, pc, r3
   1117c:	ldr	r2, [r3, r2]
   11180:	cmp	r2, #0
   11184:	bxeq	lr
   11188:	b	1078c <__gmon_start__@plt>
   1118c:	andeq	r0, r1, ip, lsl #28
   11190:	andeq	r0, r0, r0, ror r0
   11194:	ldr	r0, [pc, #24]	; 111b4 <close@plt+0x968>
   11198:	ldr	r3, [pc, #24]	; 111b8 <close@plt+0x96c>
   1119c:	cmp	r3, r0
   111a0:	bxeq	lr
   111a4:	ldr	r3, [pc, #16]	; 111bc <close@plt+0x970>
   111a8:	cmp	r3, #0
   111ac:	bxeq	lr
   111b0:	bx	r3
   111b4:	muleq	r2, r8, r0
   111b8:	muleq	r2, r8, r0
   111bc:	andeq	r0, r0, r0
   111c0:	ldr	r0, [pc, #36]	; 111ec <close@plt+0x9a0>
   111c4:	ldr	r1, [pc, #36]	; 111f0 <close@plt+0x9a4>
   111c8:	sub	r1, r1, r0
   111cc:	asr	r1, r1, #2
   111d0:	add	r1, r1, r1, lsr #31
   111d4:	asrs	r1, r1, #1
   111d8:	bxeq	lr
   111dc:	ldr	r3, [pc, #16]	; 111f4 <close@plt+0x9a8>
   111e0:	cmp	r3, #0
   111e4:	bxeq	lr
   111e8:	bx	r3
   111ec:	muleq	r2, r8, r0
   111f0:	muleq	r2, r8, r0
   111f4:	andeq	r0, r0, r0
   111f8:	push	{r4, lr}
   111fc:	ldr	r4, [pc, #24]	; 1121c <close@plt+0x9d0>
   11200:	ldrb	r3, [r4]
   11204:	cmp	r3, #0
   11208:	popne	{r4, pc}
   1120c:	bl	11194 <close@plt+0x948>
   11210:	mov	r3, #1
   11214:	strb	r3, [r4]
   11218:	pop	{r4, pc}
   1121c:	andeq	r2, r2, ip, lsr #1
   11220:	b	111c0 <close@plt+0x974>
   11224:	tst	r0, #1
   11228:	push	{r4, lr}
   1122c:	mov	r4, r0
   11230:	beq	11250 <close@plt+0xa04>
   11234:	ldr	r3, [pc, #348]	; 11398 <close@plt+0xb4c>
   11238:	bics	r4, r0, #1
   1123c:	ldr	r2, [pc, #344]	; 1139c <close@plt+0xb50>
   11240:	ldr	r1, [pc, #344]	; 113a0 <close@plt+0xb54>
   11244:	moveq	r2, r3
   11248:	mov	r0, #1
   1124c:	bl	10810 <__printf_chk@plt>
   11250:	tst	r4, #2
   11254:	beq	11274 <close@plt+0xa28>
   11258:	ldr	r3, [pc, #312]	; 11398 <close@plt+0xb4c>
   1125c:	bics	r4, r4, #2
   11260:	ldr	r2, [pc, #308]	; 1139c <close@plt+0xb50>
   11264:	ldr	r1, [pc, #312]	; 113a4 <close@plt+0xb58>
   11268:	moveq	r2, r3
   1126c:	mov	r0, #1
   11270:	bl	10810 <__printf_chk@plt>
   11274:	tst	r4, #4
   11278:	beq	11298 <close@plt+0xa4c>
   1127c:	ldr	r3, [pc, #276]	; 11398 <close@plt+0xb4c>
   11280:	bics	r4, r4, #4
   11284:	ldr	r2, [pc, #272]	; 1139c <close@plt+0xb50>
   11288:	ldr	r1, [pc, #280]	; 113a8 <close@plt+0xb5c>
   1128c:	moveq	r2, r3
   11290:	mov	r0, #1
   11294:	bl	10810 <__printf_chk@plt>
   11298:	tst	r4, #8
   1129c:	beq	112bc <close@plt+0xa70>
   112a0:	ldr	r3, [pc, #240]	; 11398 <close@plt+0xb4c>
   112a4:	bics	r4, r4, #8
   112a8:	ldr	r2, [pc, #236]	; 1139c <close@plt+0xb50>
   112ac:	ldr	r1, [pc, #248]	; 113ac <close@plt+0xb60>
   112b0:	moveq	r2, r3
   112b4:	mov	r0, #1
   112b8:	bl	10810 <__printf_chk@plt>
   112bc:	tst	r4, #16
   112c0:	beq	112e0 <close@plt+0xa94>
   112c4:	ldr	r3, [pc, #204]	; 11398 <close@plt+0xb4c>
   112c8:	bics	r4, r4, #16
   112cc:	ldr	r2, [pc, #200]	; 1139c <close@plt+0xb50>
   112d0:	ldr	r1, [pc, #216]	; 113b0 <close@plt+0xb64>
   112d4:	moveq	r2, r3
   112d8:	mov	r0, #1
   112dc:	bl	10810 <__printf_chk@plt>
   112e0:	tst	r4, #32
   112e4:	beq	11304 <close@plt+0xab8>
   112e8:	ldr	r3, [pc, #168]	; 11398 <close@plt+0xb4c>
   112ec:	bics	r4, r4, #32
   112f0:	ldr	r2, [pc, #164]	; 1139c <close@plt+0xb50>
   112f4:	ldr	r1, [pc, #184]	; 113b4 <close@plt+0xb68>
   112f8:	moveq	r2, r3
   112fc:	mov	r0, #1
   11300:	bl	10810 <__printf_chk@plt>
   11304:	tst	r4, #64	; 0x40
   11308:	beq	11328 <close@plt+0xadc>
   1130c:	ldr	r3, [pc, #132]	; 11398 <close@plt+0xb4c>
   11310:	bics	r4, r4, #64	; 0x40
   11314:	ldr	r2, [pc, #128]	; 1139c <close@plt+0xb50>
   11318:	ldr	r1, [pc, #152]	; 113b8 <close@plt+0xb6c>
   1131c:	moveq	r2, r3
   11320:	mov	r0, #1
   11324:	bl	10810 <__printf_chk@plt>
   11328:	tst	r4, #128	; 0x80
   1132c:	beq	1134c <close@plt+0xb00>
   11330:	ldr	r3, [pc, #96]	; 11398 <close@plt+0xb4c>
   11334:	bics	r4, r4, #128	; 0x80
   11338:	ldr	r2, [pc, #92]	; 1139c <close@plt+0xb50>
   1133c:	ldr	r1, [pc, #120]	; 113bc <close@plt+0xb70>
   11340:	moveq	r2, r3
   11344:	mov	r0, #1
   11348:	bl	10810 <__printf_chk@plt>
   1134c:	tst	r4, #256	; 0x100
   11350:	beq	11370 <close@plt+0xb24>
   11354:	ldr	r3, [pc, #60]	; 11398 <close@plt+0xb4c>
   11358:	bics	r4, r4, #256	; 0x100
   1135c:	ldr	r2, [pc, #56]	; 1139c <close@plt+0xb50>
   11360:	ldr	r1, [pc, #88]	; 113c0 <close@plt+0xb74>
   11364:	moveq	r2, r3
   11368:	mov	r0, #1
   1136c:	bl	10810 <__printf_chk@plt>
   11370:	cmp	r4, #0
   11374:	bne	11384 <close@plt+0xb38>
   11378:	mov	r0, #10
   1137c:	pop	{r4, lr}
   11380:	b	10804 <putchar@plt>
   11384:	mov	r2, r4
   11388:	ldr	r1, [pc, #52]	; 113c4 <close@plt+0xb78>
   1138c:	mov	r0, #1
   11390:	bl	10810 <__printf_chk@plt>
   11394:	b	11378 <close@plt+0xb2c>
   11398:	strdeq	r1, [r1], -r0
   1139c:	andeq	r1, r1, r0, ror #11
   113a0:	andeq	r1, r1, r4, ror #11
   113a4:	strdeq	r1, [r1], -r8
   113a8:	andeq	r1, r1, ip, lsl #12
   113ac:	andeq	r1, r1, r0, lsr #12
   113b0:	andeq	r1, r1, r4, lsr r6
   113b4:	andeq	r1, r1, r8, asr #12
   113b8:	andeq	r1, r1, ip, asr r6
   113bc:	andeq	r1, r1, r0, ror r6
   113c0:	andeq	r1, r1, r4, lsl #13
   113c4:	muleq	r1, ip, r6
   113c8:	push	{r4, lr}
   113cc:	ldr	r0, [pc, #192]	; 11494 <close@plt+0xc48>
   113d0:	bl	10768 <puts@plt>
   113d4:	ldr	r0, [pc, #188]	; 11498 <close@plt+0xc4c>
   113d8:	bl	10768 <puts@plt>
   113dc:	ldr	r0, [pc, #184]	; 1149c <close@plt+0xc50>
   113e0:	bl	10768 <puts@plt>
   113e4:	ldr	r0, [pc, #180]	; 114a0 <close@plt+0xc54>
   113e8:	bl	10768 <puts@plt>
   113ec:	ldr	r0, [pc, #176]	; 114a4 <close@plt+0xc58>
   113f0:	bl	10768 <puts@plt>
   113f4:	ldr	r0, [pc, #172]	; 114a8 <close@plt+0xc5c>
   113f8:	bl	10768 <puts@plt>
   113fc:	mov	r0, #10
   11400:	bl	10804 <putchar@plt>
   11404:	ldr	r0, [pc, #160]	; 114ac <close@plt+0xc60>
   11408:	bl	10768 <puts@plt>
   1140c:	ldr	r0, [pc, #156]	; 114b0 <close@plt+0xc64>
   11410:	bl	10768 <puts@plt>
   11414:	ldr	r0, [pc, #152]	; 114b4 <close@plt+0xc68>
   11418:	bl	10768 <puts@plt>
   1141c:	ldr	r0, [pc, #148]	; 114b8 <close@plt+0xc6c>
   11420:	bl	10768 <puts@plt>
   11424:	ldr	r0, [pc, #144]	; 114bc <close@plt+0xc70>
   11428:	bl	10768 <puts@plt>
   1142c:	ldr	r0, [pc, #140]	; 114c0 <close@plt+0xc74>
   11430:	bl	10768 <puts@plt>
   11434:	ldr	r0, [pc, #136]	; 114c4 <close@plt+0xc78>
   11438:	bl	10768 <puts@plt>
   1143c:	ldr	r0, [pc, #132]	; 114c8 <close@plt+0xc7c>
   11440:	bl	10768 <puts@plt>
   11444:	ldr	r0, [pc, #128]	; 114cc <close@plt+0xc80>
   11448:	bl	10768 <puts@plt>
   1144c:	ldr	r0, [pc, #124]	; 114d0 <close@plt+0xc84>
   11450:	bl	10768 <puts@plt>
   11454:	ldr	r0, [pc, #120]	; 114d4 <close@plt+0xc88>
   11458:	bl	10768 <puts@plt>
   1145c:	ldr	r0, [pc, #116]	; 114d8 <close@plt+0xc8c>
   11460:	bl	10768 <puts@plt>
   11464:	ldr	r0, [pc, #112]	; 114dc <close@plt+0xc90>
   11468:	bl	10768 <puts@plt>
   1146c:	ldr	r0, [pc, #108]	; 114e0 <close@plt+0xc94>
   11470:	bl	10768 <puts@plt>
   11474:	ldr	r0, [pc, #104]	; 114e4 <close@plt+0xc98>
   11478:	bl	10768 <puts@plt>
   1147c:	ldr	r0, [pc, #100]	; 114e8 <close@plt+0xc9c>
   11480:	bl	10768 <puts@plt>
   11484:	ldr	r0, [pc, #96]	; 114ec <close@plt+0xca0>
   11488:	bl	10768 <puts@plt>
   1148c:	mov	r0, #0
   11490:	bl	107bc <exit@plt>
   11494:	andeq	r1, r1, r4, lsr #13
   11498:	andeq	r1, r1, ip, lsr #13
   1149c:	andeq	r1, r1, ip, ror #13
   114a0:	andeq	r1, r1, ip, lsl r7
   114a4:	andeq	r1, r1, r8, ror r7
   114a8:			; <UNDEFINED> instruction: 0x000117b8
   114ac:	strdeq	r1, [r1], -r4
   114b0:	andeq	r1, r1, r4, lsl #16
   114b4:	andeq	r1, r1, r0, lsr #16
   114b8:	andeq	r1, r1, r4, asr r8
   114bc:	andeq	r1, r1, r0, lsl #17
   114c0:	andeq	r1, r1, r8, lsr #17
   114c4:	ldrdeq	r1, [r1], -r4
   114c8:	strdeq	r1, [r1], -ip
   114cc:	andeq	r1, r1, r4, lsr #18
   114d0:	andeq	r1, r1, ip, asr #18
   114d4:	andeq	r1, r1, r4, ror r9
   114d8:	muleq	r1, ip, r9
   114dc:	andeq	r1, r1, ip, asr #19
   114e0:	andeq	r1, r1, r4, lsl #20
   114e4:	andeq	r1, r1, r8, lsl sl
   114e8:	andeq	r1, r1, r4, asr sl
   114ec:	andeq	r1, r1, ip, ror sl
   114f0:	push	{r4, r5, r6, lr}
   114f4:	mov	r4, r0
   114f8:	mov	r5, r1
   114fc:	mov	r6, r2
   11500:	ldr	r1, [pc, #80]	; 11558 <close@plt+0xd0c>
   11504:	mov	r2, r3
   11508:	mov	r0, #1
   1150c:	bl	10810 <__printf_chk@plt>
   11510:	mov	r0, r4
   11514:	mov	r2, r6
   11518:	mov	r1, r5
   1151c:	bl	10750 <ioctl@plt>
   11520:	subs	r4, r0, #0
   11524:	blt	11538 <close@plt+0xcec>
   11528:	ldr	r0, [pc, #44]	; 1155c <close@plt+0xd10>
   1152c:	bl	10768 <puts@plt>
   11530:	mov	r0, r4
   11534:	pop	{r4, r5, r6, pc}
   11538:	bl	107ec <__errno_location@plt>
   1153c:	ldr	r0, [r0]
   11540:	bl	10780 <strerror@plt>
   11544:	ldr	r1, [pc, #20]	; 11560 <close@plt+0xd14>
   11548:	mov	r2, r0
   1154c:	mov	r0, #1
   11550:	bl	10810 <__printf_chk@plt>
   11554:	b	11530 <close@plt+0xce4>
   11558:	andeq	r1, r1, ip, asr #21
   1155c:	andeq	r1, r1, r4, ror #21
   11560:	ldrdeq	r1, [r1], -r8
   11564:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11568:	mov	r7, r0
   1156c:	ldr	r6, [pc, #72]	; 115bc <close@plt+0xd70>
   11570:	ldr	r5, [pc, #72]	; 115c0 <close@plt+0xd74>
   11574:	add	r6, pc, r6
   11578:	add	r5, pc, r5
   1157c:	sub	r6, r6, r5
   11580:	mov	r8, r1
   11584:	mov	r9, r2
   11588:	bl	1070c <strtol@plt-0x20>
   1158c:	asrs	r6, r6, #2
   11590:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11594:	mov	r4, #0
   11598:	add	r4, r4, #1
   1159c:	ldr	r3, [r5], #4
   115a0:	mov	r2, r9
   115a4:	mov	r1, r8
   115a8:	mov	r0, r7
   115ac:	blx	r3
   115b0:	cmp	r6, r4
   115b4:	bne	11598 <close@plt+0xd4c>
   115b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   115bc:	andeq	r0, r1, r8, lsl #18
   115c0:	andeq	r0, r1, r0, lsl #18
   115c4:	bx	lr

Disassembly of section .fini:

000115c8 <.fini>:
   115c8:	push	{r3, lr}
   115cc:	pop	{r3, pc}
