
raspbian-preinstalled/ffprobe:     file format elf32-littlearm


Disassembly of section .init:

00003d90 <.init>:
    3d90:	push	{r3, lr}
    3d94:	bl	7534 <main@@Base+0x2908>
    3d98:	pop	{r3, pc}

Disassembly of section .plt:

00003d9c <fputs@plt-0x14>:
    3d9c:	push	{lr}		; (str lr, [sp, #-4]!)
    3da0:	ldr	lr, [pc, #4]	; 3dac <fputs@plt-0x4>
    3da4:	add	lr, pc, lr
    3da8:	ldr	pc, [lr, #8]!
    3dac:	andeq	sp, r2, r8, asr lr

00003db0 <fputs@plt>:
    3db0:	add	ip, pc, #0, 12
    3db4:	add	ip, ip, #184320	; 0x2d000
    3db8:	ldr	pc, [ip, #3672]!	; 0xe58

00003dbc <setrlimit64@plt>:
    3dbc:	add	ip, pc, #0, 12
    3dc0:	add	ip, ip, #184320	; 0x2d000
    3dc4:	ldr	pc, [ip, #3664]!	; 0xe50

00003dc8 <avfilter_version@plt>:
    3dc8:	add	ip, pc, #0, 12
    3dcc:	add	ip, ip, #184320	; 0x2d000
    3dd0:	ldr	pc, [ip, #3656]!	; 0xe48

00003dd4 <avsubtitle_free@plt>:
    3dd4:	add	ip, pc, #0, 12
    3dd8:	add	ip, ip, #184320	; 0x2d000
    3ddc:	ldr	pc, [ip, #3648]!	; 0xe40

00003de0 <fopen64@plt>:
    3de0:	add	ip, pc, #0, 12
    3de4:	add	ip, ip, #184320	; 0x2d000
    3de8:	ldr	pc, [ip, #3640]!	; 0xe38

00003dec <av_reduce@plt>:
    3dec:	add	ip, pc, #0, 12
    3df0:	add	ip, ip, #184320	; 0x2d000
    3df4:	ldr	pc, [ip, #3632]!	; 0xe30

00003df8 <vchi_service_close@plt>:
    3df8:	add	ip, pc, #0, 12
    3dfc:	add	ip, ip, #184320	; 0x2d000
    3e00:	ldr	pc, [ip, #3624]!	; 0xe28

00003e04 <av_hwdevice_get_type_name@plt>:
    3e04:	add	ip, pc, #0, 12
    3e08:	add	ip, ip, #184320	; 0x2d000
    3e0c:	ldr	pc, [ip, #3616]!	; 0xe20

00003e10 <strstr@plt>:
    3e10:	add	ip, pc, #0, 12
    3e14:	add	ip, ip, #184320	; 0x2d000
    3e18:	ldr	pc, [ip, #3608]!	; 0xe18

00003e1c <av_hash_final_hex@plt>:
    3e1c:	add	ip, pc, #0, 12
    3e20:	add	ip, ip, #184320	; 0x2d000
    3e24:	ldr	pc, [ip, #3600]!	; 0xe10

00003e28 <av_demuxer_iterate@plt>:
    3e28:	add	ip, pc, #0, 12
    3e2c:	add	ip, ip, #184320	; 0x2d000
    3e30:	ldr	pc, [ip, #3592]!	; 0xe08

00003e34 <av_get_cpu_flags@plt>:
    3e34:	add	ip, pc, #0, 12
    3e38:	add	ip, ip, #184320	; 0x2d000
    3e3c:	ldr	pc, [ip, #3584]!	; 0xe00

00003e40 <avfilter_configuration@plt>:
    3e40:	add	ip, pc, #0, 12
    3e44:	add	ip, ip, #184320	; 0x2d000
    3e48:	ldr	pc, [ip, #3576]!	; 0xdf8

00003e4c <av_hash_freep@plt>:
    3e4c:	add	ip, pc, #0, 12
    3e50:	add	ip, ip, #184320	; 0x2d000
    3e54:	ldr	pc, [ip, #3568]!	; 0xdf0

00003e58 <av_get_bits_per_pixel@plt>:
    3e58:	add	ip, pc, #0, 12
    3e5c:	add	ip, ip, #184320	; 0x2d000
    3e60:	ldr	pc, [ip, #3560]!	; 0xde8

00003e64 <sws_isSupportedInput@plt>:
    3e64:	add	ip, pc, #0, 12
    3e68:	add	ip, ip, #184320	; 0x2d000
    3e6c:	ldr	pc, [ip, #3552]!	; 0xde0

00003e70 <avresample_get_class@plt>:
    3e70:	add	ip, pc, #0, 12
    3e74:	add	ip, ip, #184320	; 0x2d000
    3e78:	ldr	pc, [ip, #3544]!	; 0xdd8

00003e7c <av_get_bits_per_sample@plt>:
    3e7c:	add	ip, pc, #0, 12
    3e80:	add	ip, ip, #184320	; 0x2d000
    3e84:	ldr	pc, [ip, #3536]!	; 0xdd0

00003e88 <av_hash_get_name@plt>:
    3e88:	add	ip, pc, #0, 12
    3e8c:	add	ip, ip, #184320	; 0x2d000
    3e90:	ldr	pc, [ip, #3528]!	; 0xdc8

00003e94 <qsort@plt>:
    3e94:	add	ip, pc, #0, 12
    3e98:	add	ip, ip, #184320	; 0x2d000
    3e9c:	ldr	pc, [ip, #3520]!	; 0xdc0

00003ea0 <vchiq_queue_message@plt>:
    3ea0:	add	ip, pc, #0, 12
    3ea4:	add	ip, ip, #184320	; 0x2d000
    3ea8:	ldr	pc, [ip, #3512]!	; 0xdb8

00003eac <av_log_set_level@plt>:
    3eac:	add	ip, pc, #0, 12
    3eb0:	add	ip, ip, #184320	; 0x2d000
    3eb4:	ldr	pc, [ip, #3504]!	; 0xdb0

00003eb8 <av_chroma_location_name@plt>:
    3eb8:	add	ip, pc, #0, 12
    3ebc:	add	ip, ip, #184320	; 0x2d000
    3ec0:	ldr	pc, [ip, #3496]!	; 0xda8

00003ec4 <av_freep@plt>:
    3ec4:	add	ip, pc, #0, 12
    3ec8:	add	ip, ip, #184320	; 0x2d000
    3ecc:	ldr	pc, [ip, #3488]!	; 0xda0

00003ed0 <avresample_configuration@plt>:
    3ed0:	add	ip, pc, #0, 12
    3ed4:	add	ip, ip, #184320	; 0x2d000
    3ed8:	ldr	pc, [ip, #3480]!	; 0xd98

00003edc <avfilter_pad_get_name@plt>:
    3edc:	add	ip, pc, #0, 12
    3ee0:	add	ip, ip, #184320	; 0x2d000
    3ee4:	ldr	pc, [ip, #3472]!	; 0xd90

00003ee8 <av_dict_free@plt>:
    3ee8:	add	ip, pc, #0, 12
    3eec:	add	ip, ip, #184320	; 0x2d000
    3ef0:	ldr	pc, [ip, #3464]!	; 0xd88

00003ef4 <av_bsf_get_by_name@plt>:
    3ef4:	add	ip, pc, #0, 12
    3ef8:	add	ip, ip, #184320	; 0x2d000
    3efc:	ldr	pc, [ip, #3456]!	; 0xd80

00003f00 <__stack_chk_fail@plt>:
    3f00:	add	ip, pc, #0, 12
    3f04:	add	ip, ip, #184320	; 0x2d000
    3f08:	ldr	pc, [ip, #3448]!	; 0xd78

00003f0c <av_timecode_make_mpeg_tc_string@plt>:
    3f0c:	add	ip, pc, #0, 12
    3f10:	add	ip, ip, #184320	; 0x2d000
    3f14:	ldr	pc, [ip, #3440]!	; 0xd70

00003f18 <av_get_channel_description@plt>:
    3f18:	add	ip, pc, #0, 12
    3f1c:	add	ip, ip, #184320	; 0x2d000
    3f20:	ldr	pc, [ip, #3432]!	; 0xd68

00003f24 <avcodec_find_encoder@plt>:
    3f24:	add	ip, pc, #0, 12
    3f28:	add	ip, ip, #184320	; 0x2d000
    3f2c:	ldr	pc, [ip, #3424]!	; 0xd60

00003f30 <avutil_version@plt>:
    3f30:	add	ip, pc, #0, 12
    3f34:	add	ip, ip, #184320	; 0x2d000
    3f38:	ldr	pc, [ip, #3416]!	; 0xd58

00003f3c <strerror@plt>:
    3f3c:	add	ip, pc, #0, 12
    3f40:	add	ip, ip, #184320	; 0x2d000
    3f44:	ldr	pc, [ip, #3408]!	; 0xd50

00003f48 <av_bprint_init@plt>:
    3f48:	add	ip, pc, #0, 12
    3f4c:	add	ip, ip, #184320	; 0x2d000
    3f50:	ldr	pc, [ip, #3400]!	; 0xd48

00003f54 <vchiq_initialise@plt>:
    3f54:	add	ip, pc, #0, 12
    3f58:	add	ip, ip, #184320	; 0x2d000
    3f5c:	ldr	pc, [ip, #3392]!	; 0xd40

00003f60 <av_log_set_callback@plt>:
    3f60:	add	ip, pc, #0, 12
    3f64:	add	ip, ip, #184320	; 0x2d000
    3f68:	ldr	pc, [ip, #3384]!	; 0xd38

00003f6c <avutil_configuration@plt>:
    3f6c:	add	ip, pc, #0, 12
    3f70:	add	ip, ip, #184320	; 0x2d000
    3f74:	ldr	pc, [ip, #3376]!	; 0xd30

00003f78 <av_opt_get_key_value@plt>:
    3f78:	add	ip, pc, #0, 12
    3f7c:	add	ip, ip, #184320	; 0x2d000
    3f80:	ldr	pc, [ip, #3368]!	; 0xd28

00003f84 <av_hash_init@plt>:
    3f84:	add	ip, pc, #0, 12
    3f88:	add	ip, ip, #184320	; 0x2d000
    3f8c:	ldr	pc, [ip, #3360]!	; 0xd20

00003f90 <av_asprintf@plt>:
    3f90:	add	ip, pc, #0, 12
    3f94:	add	ip, ip, #184320	; 0x2d000
    3f98:	ldr	pc, [ip, #3352]!	; 0xd18

00003f9c <av_frame_free@plt>:
    3f9c:	add	ip, pc, #0, 12
    3fa0:	add	ip, ip, #184320	; 0x2d000
    3fa4:	ldr	pc, [ip, #3344]!	; 0xd10

00003fa8 <avio_size@plt>:
    3fa8:	add	ip, pc, #0, 12
    3fac:	add	ip, ip, #184320	; 0x2d000
    3fb0:	ldr	pc, [ip, #3336]!	; 0xd08

00003fb4 <__errno_location@plt>:
    3fb4:	add	ip, pc, #0, 12
    3fb8:	add	ip, ip, #184320	; 0x2d000
    3fbc:	ldr	pc, [ip, #3328]!	; 0xd00

00003fc0 <avfilter_pad_get_type@plt>:
    3fc0:	add	ip, pc, #0, 12
    3fc4:	add	ip, ip, #184320	; 0x2d000
    3fc8:	ldr	pc, [ip, #3320]!	; 0xcf8

00003fcc <avdevice_free_list_devices@plt>:
    3fcc:	add	ip, pc, #0, 12
    3fd0:	add	ip, ip, #184320	; 0x2d000
    3fd4:	ldr	pc, [ip, #3312]!	; 0xcf0

00003fd8 <pthread_mutex_lock@plt>:
    3fd8:	add	ip, pc, #0, 12
    3fdc:	add	ip, ip, #184320	; 0x2d000
    3fe0:	ldr	pc, [ip, #3304]!	; 0xce8

00003fe4 <vchiq_open_service@plt>:
    3fe4:	add	ip, pc, #0, 12
    3fe8:	add	ip, ip, #184320	; 0x2d000
    3fec:	ldr	pc, [ip, #3296]!	; 0xce0

00003ff0 <avcodec_descriptor_next@plt>:
    3ff0:	add	ip, pc, #0, 12
    3ff4:	add	ip, ip, #184320	; 0x2d000
    3ff8:	ldr	pc, [ip, #3288]!	; 0xcd8

00003ffc <sws_alloc_context@plt>:
    3ffc:	add	ip, pc, #0, 12
    4000:	add	ip, ip, #184320	; 0x2d000
    4004:	ldr	pc, [ip, #3280]!	; 0xcd0

00004008 <av_get_channel_layout_string@plt>:
    4008:	add	ip, pc, #0, 12
    400c:	add	ip, ip, #184320	; 0x2d000
    4010:	ldr	pc, [ip, #3272]!	; 0xcc8

00004014 <av_calloc@plt>:
    4014:	add	ip, pc, #0, 12
    4018:	add	ip, ip, #184320	; 0x2d000
    401c:	ldr	pc, [ip, #3264]!	; 0xcc0

00004020 <av_strtok@plt>:
    4020:	add	ip, pc, #0, 12
    4024:	add	ip, ip, #184320	; 0x2d000
    4028:	ldr	pc, [ip, #3256]!	; 0xcb8

0000402c <av_get_channel_name@plt>:
    402c:	add	ip, pc, #0, 12
    4030:	add	ip, ip, #184320	; 0x2d000
    4034:	ldr	pc, [ip, #3248]!	; 0xcb0

00004038 <av_spherical_projection_name@plt>:
    4038:	add	ip, pc, #0, 12
    403c:	add	ip, ip, #184320	; 0x2d000
    4040:	ldr	pc, [ip, #3240]!	; 0xca8

00004044 <avcodec_get_class@plt>:
    4044:	add	ip, pc, #0, 12
    4048:	add	ip, ip, #184320	; 0x2d000
    404c:	ldr	pc, [ip, #3232]!	; 0xca0

00004050 <vcos_pthreads_map_errno@plt>:
    4050:	add	ip, pc, #0, 12
    4054:	add	ip, ip, #184320	; 0x2d000
    4058:	ldr	pc, [ip, #3224]!	; 0xc98

0000405c <av_mallocz_array@plt>:
    405c:	add	ip, pc, #0, 12
    4060:	add	ip, ip, #184320	; 0x2d000
    4064:	ldr	pc, [ip, #3216]!	; 0xc90

00004068 <av_guess_sample_aspect_ratio@plt>:
    4068:	add	ip, pc, #0, 12
    406c:	add	ip, ip, #184320	; 0x2d000
    4070:	ldr	pc, [ip, #3208]!	; 0xc88

00004074 <raise@plt>:
    4074:	add	ip, pc, #0, 12
    4078:	add	ip, ip, #184320	; 0x2d000
    407c:	ldr	pc, [ip, #3200]!	; 0xc80

00004080 <av_strdup@plt>:
    4080:	add	ip, pc, #0, 12
    4084:	add	ip, ip, #184320	; 0x2d000
    4088:	ldr	pc, [ip, #3192]!	; 0xc78

0000408c <av_parse_time@plt>:
    408c:	add	ip, pc, #0, 12
    4090:	add	ip, ip, #184320	; 0x2d000
    4094:	ldr	pc, [ip, #3184]!	; 0xc70

00004098 <avcodec_send_packet@plt>:
    4098:	add	ip, pc, #0, 12
    409c:	add	ip, ip, #184320	; 0x2d000
    40a0:	ldr	pc, [ip, #3176]!	; 0xc68

000040a4 <av_realloc_array@plt>:
    40a4:	add	ip, pc, #0, 12
    40a8:	add	ip, ip, #184320	; 0x2d000
    40ac:	ldr	pc, [ip, #3168]!	; 0xc60

000040b0 <__cxa_finalize@plt>:
    40b0:	add	ip, pc, #0, 12
    40b4:	add	ip, ip, #184320	; 0x2d000
    40b8:	ldr	pc, [ip, #3160]!	; 0xc58

000040bc <av_bprint_channel_layout@plt>:
    40bc:	add	ip, pc, #0, 12
    40c0:	add	ip, ip, #184320	; 0x2d000
    40c4:	ldr	pc, [ip, #3152]!	; 0xc50

000040c8 <av_get_standard_channel_layout@plt>:
    40c8:	add	ip, pc, #0, 12
    40cc:	add	ip, ip, #184320	; 0x2d000
    40d0:	ldr	pc, [ip, #3144]!	; 0xc48

000040d4 <avio_enum_protocols@plt>:
    40d4:	add	ip, pc, #0, 12
    40d8:	add	ip, ip, #184320	; 0x2d000
    40dc:	ldr	pc, [ip, #3136]!	; 0xc40

000040e0 <av_strlcat@plt>:
    40e0:	add	ip, pc, #0, 12
    40e4:	add	ip, ip, #184320	; 0x2d000
    40e8:	ldr	pc, [ip, #3128]!	; 0xc38

000040ec <av_hash_update@plt>:
    40ec:	add	ip, pc, #0, 12
    40f0:	add	ip, ip, #184320	; 0x2d000
    40f4:	ldr	pc, [ip, #3120]!	; 0xc30

000040f8 <av_log@plt>:
    40f8:	add	ip, pc, #0, 12
    40fc:	add	ip, ip, #184320	; 0x2d000
    4100:	ldr	pc, [ip, #3112]!	; 0xc28

00004104 <av_get_picture_type_char@plt>:
    4104:	add	ip, pc, #0, 12
    4108:	add	ip, ip, #184320	; 0x2d000
    410c:	ldr	pc, [ip, #3104]!	; 0xc20

00004110 <strlen@plt>:
    4110:	add	ip, pc, #0, 12
    4114:	add	ip, ip, #184320	; 0x2d000
    4118:	ldr	pc, [ip, #3096]!	; 0xc18

0000411c <avcodec_receive_frame@plt>:
    411c:	add	ip, pc, #0, 12
    4120:	add	ip, ip, #184320	; 0x2d000
    4124:	ldr	pc, [ip, #3088]!	; 0xc10

00004128 <av_output_audio_device_next@plt>:
    4128:	add	ip, pc, #0, 12
    412c:	add	ip, ip, #184320	; 0x2d000
    4130:	ldr	pc, [ip, #3080]!	; 0xc08

00004134 <av_stream_get_side_data@plt>:
    4134:	add	ip, pc, #0, 12
    4138:	add	ip, ip, #184320	; 0x2d000
    413c:	ldr	pc, [ip, #3072]!	; 0xc00

00004140 <postproc_configuration@plt>:
    4140:	add	ip, pc, #0, 12
    4144:	add	ip, ip, #184320	; 0x2d000
    4148:	ldr	pc, [ip, #3064]!	; 0xbf8

0000414c <av_opt_find@plt>:
    414c:	add	ip, pc, #0, 12
    4150:	add	ip, ip, #184320	; 0x2d000
    4154:	ldr	pc, [ip, #3056]!	; 0xbf0

00004158 <floor@plt>:
    4158:	add	ip, pc, #0, 12
    415c:	add	ip, ip, #184320	; 0x2d000
    4160:	ldr	pc, [ip, #3048]!	; 0xbe8

00004164 <av_bsf_iterate@plt>:
    4164:	add	ip, pc, #0, 12
    4168:	add	ip, ip, #184320	; 0x2d000
    416c:	ldr	pc, [ip, #3040]!	; 0xbe0

00004170 <sws_isSupportedOutput@plt>:
    4170:	add	ip, pc, #0, 12
    4174:	add	ip, ip, #184320	; 0x2d000
    4178:	ldr	pc, [ip, #3032]!	; 0xbd8

0000417c <fflush@plt>:
    417c:	add	ip, pc, #0, 12
    4180:	add	ip, ip, #184320	; 0x2d000
    4184:	ldr	pc, [ip, #3024]!	; 0xbd0

00004188 <av_guess_format@plt>:
    4188:	add	ip, pc, #0, 12
    418c:	add	ip, ip, #184320	; 0x2d000
    4190:	ldr	pc, [ip, #3016]!	; 0xbc8

00004194 <av_input_video_device_next@plt>:
    4194:	add	ip, pc, #0, 12
    4198:	add	ip, ip, #184320	; 0x2d000
    419c:	ldr	pc, [ip, #3008]!	; 0xbc0

000041a0 <av_get_token@plt>:
    41a0:	add	ip, pc, #0, 12
    41a4:	add	ip, ip, #184320	; 0x2d000
    41a8:	ldr	pc, [ip, #3000]!	; 0xbb8

000041ac <strtoll@plt>:
    41ac:	add	ip, pc, #0, 12
    41b0:	add	ip, ip, #184320	; 0x2d000
    41b4:	ldr	pc, [ip, #2992]!	; 0xbb0

000041b8 <av_packet_unpack_dictionary@plt>:
    41b8:	add	ip, pc, #0, 12
    41bc:	add	ip, ip, #184320	; 0x2d000
    41c0:	ldr	pc, [ip, #2984]!	; 0xba8

000041c4 <av_log_default_callback@plt>:
    41c4:	add	ip, pc, #0, 12
    41c8:	add	ip, ip, #184320	; 0x2d000
    41cc:	ldr	pc, [ip, #2976]!	; 0xba0

000041d0 <avcodec_find_decoder_by_name@plt>:
    41d0:	add	ip, pc, #0, 12
    41d4:	add	ip, ip, #184320	; 0x2d000
    41d8:	ldr	pc, [ip, #2968]!	; 0xb98

000041dc <__snprintf_chk@plt>:
    41dc:	add	ip, pc, #0, 12
    41e0:	add	ip, ip, #184320	; 0x2d000
    41e4:	ldr	pc, [ip, #2960]!	; 0xb90

000041e8 <memset@plt>:
    41e8:	add	ip, pc, #0, 12
    41ec:	add	ip, ip, #184320	; 0x2d000
    41f0:	ldr	pc, [ip, #2952]!	; 0xb88

000041f4 <avcodec_find_encoder_by_name@plt>:
    41f4:	add	ip, pc, #0, 12
    41f8:	add	ip, ip, #184320	; 0x2d000
    41fc:	ldr	pc, [ip, #2944]!	; 0xb80

00004200 <av_opt_set@plt>:
    4200:	add	ip, pc, #0, 12
    4204:	add	ip, ip, #184320	; 0x2d000
    4208:	ldr	pc, [ip, #2936]!	; 0xb78

0000420c <swresample_configuration@plt>:
    420c:	add	ip, pc, #0, 12
    4210:	add	ip, ip, #184320	; 0x2d000
    4214:	ldr	pc, [ip, #2928]!	; 0xb70

00004218 <av_strtod@plt>:
    4218:	add	ip, pc, #0, 12
    421c:	add	ip, ip, #184320	; 0x2d000
    4220:	ldr	pc, [ip, #2920]!	; 0xb68

00004224 <avcodec_version@plt>:
    4224:	add	ip, pc, #0, 12
    4228:	add	ip, ip, #184320	; 0x2d000
    422c:	ldr	pc, [ip, #2912]!	; 0xb60

00004230 <sws_freeContext@plt>:
    4230:	add	ip, pc, #0, 12
    4234:	add	ip, ip, #184320	; 0x2d000
    4238:	ldr	pc, [ip, #2904]!	; 0xb58

0000423c <swresample_version@plt>:
    423c:	add	ip, pc, #0, 12
    4240:	add	ip, ip, #184320	; 0x2d000
    4244:	ldr	pc, [ip, #2896]!	; 0xb50

00004248 <av_find_input_format@plt>:
    4248:	add	ip, pc, #0, 12
    424c:	add	ip, ip, #184320	; 0x2d000
    4250:	ldr	pc, [ip, #2888]!	; 0xb48

00004254 <__fprintf_chk@plt>:
    4254:	add	ip, pc, #0, 12
    4258:	add	ip, ip, #184320	; 0x2d000
    425c:	ldr	pc, [ip, #2880]!	; 0xb40

00004260 <avdevice_configuration@plt>:
    4260:	add	ip, pc, #0, 12
    4264:	add	ip, ip, #184320	; 0x2d000
    4268:	ldr	pc, [ip, #2872]!	; 0xb38

0000426c <avformat_match_stream_specifier@plt>:
    426c:	add	ip, pc, #0, 12
    4270:	add	ip, ip, #184320	; 0x2d000
    4274:	ldr	pc, [ip, #2864]!	; 0xb30

00004278 <abort@plt>:
    4278:	add	ip, pc, #0, 12
    427c:	add	ip, ip, #184320	; 0x2d000
    4280:	ldr	pc, [ip, #2856]!	; 0xb28

00004284 <av_color_range_name@plt>:
    4284:	add	ip, pc, #0, 12
    4288:	add	ip, ip, #184320	; 0x2d000
    428c:	ldr	pc, [ip, #2848]!	; 0xb20

00004290 <av_packet_get_side_data@plt>:
    4290:	add	ip, pc, #0, 12
    4294:	add	ip, ip, #184320	; 0x2d000
    4298:	ldr	pc, [ip, #2840]!	; 0xb18

0000429c <avfilter_get_by_name@plt>:
    429c:	add	ip, pc, #0, 12
    42a0:	add	ip, ip, #184320	; 0x2d000
    42a4:	ldr	pc, [ip, #2832]!	; 0xb10

000042a8 <av_codec_is_encoder@plt>:
    42a8:	add	ip, pc, #0, 12
    42ac:	add	ip, ip, #184320	; 0x2d000
    42b0:	ldr	pc, [ip, #2824]!	; 0xb08

000042b4 <avcodec_descriptor_get_by_name@plt>:
    42b4:	add	ip, pc, #0, 12
    42b8:	add	ip, ip, #184320	; 0x2d000
    42bc:	ldr	pc, [ip, #2816]!	; 0xb00

000042c0 <av_strlcpy@plt>:
    42c0:	add	ip, pc, #0, 12
    42c4:	add	ip, ip, #184320	; 0x2d000
    42c8:	ldr	pc, [ip, #2808]!	; 0xaf8

000042cc <avresample_version@plt>:
    42cc:	add	ip, pc, #0, 12
    42d0:	add	ip, ip, #184320	; 0x2d000
    42d4:	ldr	pc, [ip, #2800]!	; 0xaf0

000042d8 <log2@plt>:
    42d8:	add	ip, pc, #0, 12
    42dc:	add	ip, ip, #184320	; 0x2d000
    42e0:	ldr	pc, [ip, #2792]!	; 0xae8

000042e4 <av_codec_next@plt>:
    42e4:	add	ip, pc, #0, 12
    42e8:	add	ip, ip, #184320	; 0x2d000
    42ec:	ldr	pc, [ip, #2784]!	; 0xae0

000042f0 <av_parse_cpu_caps@plt>:
    42f0:	add	ip, pc, #0, 12
    42f4:	add	ip, ip, #184320	; 0x2d000
    42f8:	ldr	pc, [ip, #2776]!	; 0xad8

000042fc <av_force_cpu_flags@plt>:
    42fc:	add	ip, pc, #0, 12
    4300:	add	ip, ip, #184320	; 0x2d000
    4304:	ldr	pc, [ip, #2768]!	; 0xad0

00004308 <av_bprint_finalize@plt>:
    4308:	add	ip, pc, #0, 12
    430c:	add	ip, ip, #184320	; 0x2d000
    4310:	ldr	pc, [ip, #2760]!	; 0xac8

00004314 <avcodec_find_decoder@plt>:
    4314:	add	ip, pc, #0, 12
    4318:	add	ip, ip, #184320	; 0x2d000
    431c:	ldr	pc, [ip, #2752]!	; 0xac0

00004320 <avfilter_pad_count@plt>:
    4320:	add	ip, pc, #0, 12
    4324:	add	ip, ip, #184320	; 0x2d000
    4328:	ldr	pc, [ip, #2744]!	; 0xab8

0000432c <av_bprint_append_data@plt>:
    432c:	add	ip, pc, #0, 12
    4330:	add	ip, ip, #184320	; 0x2d000
    4334:	ldr	pc, [ip, #2736]!	; 0xab0

00004338 <avformat_version@plt>:
    4338:	add	ip, pc, #0, 12
    433c:	add	ip, ip, #184320	; 0x2d000
    4340:	ldr	pc, [ip, #2728]!	; 0xaa8

00004344 <avformat_alloc_context@plt>:
    4344:	add	ip, pc, #0, 12
    4348:	add	ip, ip, #184320	; 0x2d000
    434c:	ldr	pc, [ip, #2720]!	; 0xaa0

00004350 <av_log_set_flags@plt>:
    4350:	add	ip, pc, #0, 12
    4354:	add	ip, ip, #184320	; 0x2d000
    4358:	ldr	pc, [ip, #2712]!	; 0xa98

0000435c <av_fourcc_make_string@plt>:
    435c:	add	ip, pc, #0, 12
    4360:	add	ip, ip, #184320	; 0x2d000
    4364:	ldr	pc, [ip, #2704]!	; 0xa90

00004368 <avcodec_decode_subtitle2@plt>:
    4368:	add	ip, pc, #0, 12
    436c:	add	ip, ip, #184320	; 0x2d000
    4370:	ldr	pc, [ip, #2696]!	; 0xa88

00004374 <getc@plt>:
    4374:	add	ip, pc, #0, 12
    4378:	add	ip, ip, #184320	; 0x2d000
    437c:	ldr	pc, [ip, #2688]!	; 0xa80

00004380 <av_stereo3d_type_name@plt>:
    4380:	add	ip, pc, #0, 12
    4384:	add	ip, ip, #184320	; 0x2d000
    4388:	ldr	pc, [ip, #2680]!	; 0xa78

0000438c <av_get_sample_fmt_name@plt>:
    438c:	add	ip, pc, #0, 12
    4390:	add	ip, ip, #184320	; 0x2d000
    4394:	ldr	pc, [ip, #2672]!	; 0xa70

00004398 <av_hash_names@plt>:
    4398:	add	ip, pc, #0, 12
    439c:	add	ip, ip, #184320	; 0x2d000
    43a0:	ldr	pc, [ip, #2664]!	; 0xa68

000043a4 <sws_get_class@plt>:
    43a4:	add	ip, pc, #0, 12
    43a8:	add	ip, ip, #184320	; 0x2d000
    43ac:	ldr	pc, [ip, #2656]!	; 0xa60

000043b0 <log10@plt>:
    43b0:	add	ip, pc, #0, 12
    43b4:	add	ip, ip, #184320	; 0x2d000
    43b8:	ldr	pc, [ip, #2648]!	; 0xa58

000043bc <av_display_rotation_get@plt>:
    43bc:	add	ip, pc, #0, 12
    43c0:	add	ip, ip, #184320	; 0x2d000
    43c4:	ldr	pc, [ip, #2640]!	; 0xa50

000043c8 <avdevice_register_all@plt>:
    43c8:	add	ip, pc, #0, 12
    43cc:	add	ip, ip, #184320	; 0x2d000
    43d0:	ldr	pc, [ip, #2632]!	; 0xa48

000043d4 <postproc_version@plt>:
    43d4:	add	ip, pc, #0, 12
    43d8:	add	ip, ip, #184320	; 0x2d000
    43dc:	ldr	pc, [ip, #2624]!	; 0xa40

000043e0 <strncmp@plt>:
    43e0:	add	ip, pc, #0, 12
    43e4:	add	ip, ip, #184320	; 0x2d000
    43e8:	ldr	pc, [ip, #2616]!	; 0xa38

000043ec <av_hash_alloc@plt>:
    43ec:	add	ip, pc, #0, 12
    43f0:	add	ip, ip, #184320	; 0x2d000
    43f4:	ldr	pc, [ip, #2608]!	; 0xa30

000043f8 <avformat_configuration@plt>:
    43f8:	add	ip, pc, #0, 12
    43fc:	add	ip, ip, #184320	; 0x2d000
    4400:	ldr	pc, [ip, #2600]!	; 0xa28

00004404 <avformat_seek_file@plt>:
    4404:	add	ip, pc, #0, 12
    4408:	add	ip, ip, #184320	; 0x2d000
    440c:	ldr	pc, [ip, #2592]!	; 0xa20

00004410 <strcspn@plt>:
    4410:	add	ip, pc, #0, 12
    4414:	add	ip, ip, #184320	; 0x2d000
    4418:	ldr	pc, [ip, #2584]!	; 0xa18

0000441c <av_get_known_color_name@plt>:
    441c:	add	ip, pc, #0, 12
    4420:	add	ip, ip, #184320	; 0x2d000
    4424:	ldr	pc, [ip, #2576]!	; 0xa10

00004428 <fputc@plt>:
    4428:	add	ip, pc, #0, 12
    442c:	add	ip, ip, #184320	; 0x2d000
    4430:	ldr	pc, [ip, #2568]!	; 0xa08

00004434 <av_filter_iterate@plt>:
    4434:	add	ip, pc, #0, 12
    4438:	add	ip, ip, #184320	; 0x2d000
    443c:	ldr	pc, [ip, #2560]!	; 0xa00

00004440 <av_dump_format@plt>:
    4440:	add	ip, pc, #0, 12
    4444:	add	ip, ip, #184320	; 0x2d000
    4448:	ldr	pc, [ip, #2552]!	; 0x9f8

0000444c <swscale_configuration@plt>:
    444c:	add	ip, pc, #0, 12
    4450:	add	ip, ip, #184320	; 0x2d000
    4454:	ldr	pc, [ip, #2544]!	; 0x9f0

00004458 <avformat_get_class@plt>:
    4458:	add	ip, pc, #0, 12
    445c:	add	ip, ip, #184320	; 0x2d000
    4460:	ldr	pc, [ip, #2536]!	; 0x9e8

00004464 <av_dict_copy@plt>:
    4464:	add	ip, pc, #0, 12
    4468:	add	ip, ip, #184320	; 0x2d000
    446c:	ldr	pc, [ip, #2528]!	; 0x9e0

00004470 <vcos_log_register@plt>:
    4470:	add	ip, pc, #0, 12
    4474:	add	ip, ip, #184320	; 0x2d000
    4478:	ldr	pc, [ip, #2520]!	; 0x9d8

0000447c <__libc_start_main@plt>:
    447c:	add	ip, pc, #0, 12
    4480:	add	ip, ip, #184320	; 0x2d000
    4484:	ldr	pc, [ip, #2512]!	; 0x9d0

00004488 <__gmon_start__@plt>:
    4488:	add	ip, pc, #0, 12
    448c:	add	ip, ip, #184320	; 0x2d000
    4490:	ldr	pc, [ip, #2504]!	; 0x9c8

00004494 <strchr@plt>:
    4494:	add	ip, pc, #0, 12
    4498:	add	ip, ip, #184320	; 0x2d000
    449c:	ldr	pc, [ip, #2496]!	; 0x9c0

000044a0 <av_spherical_tile_bounds@plt>:
    44a0:	add	ip, pc, #0, 12
    44a4:	add	ip, ip, #184320	; 0x2d000
    44a8:	ldr	pc, [ip, #2488]!	; 0x9b8

000044ac <av_opt_next@plt>:
    44ac:	add	ip, pc, #0, 12
    44b0:	add	ip, ip, #184320	; 0x2d000
    44b4:	ldr	pc, [ip, #2480]!	; 0x9b0

000044b8 <av_frame_alloc@plt>:
    44b8:	add	ip, pc, #0, 12
    44bc:	add	ip, ip, #184320	; 0x2d000
    44c0:	ldr	pc, [ip, #2472]!	; 0x9a8

000044c4 <av_color_primaries_name@plt>:
    44c4:	add	ip, pc, #0, 12
    44c8:	add	ip, ip, #184320	; 0x2d000
    44cc:	ldr	pc, [ip, #2464]!	; 0x9a0

000044d0 <av_utf8_decode@plt>:
    44d0:	add	ip, pc, #0, 12
    44d4:	add	ip, ip, #184320	; 0x2d000
    44d8:	ldr	pc, [ip, #2456]!	; 0x998

000044dc <avformat_open_input@plt>:
    44dc:	add	ip, pc, #0, 12
    44e0:	add	ip, ip, #184320	; 0x2d000
    44e4:	ldr	pc, [ip, #2448]!	; 0x990

000044e8 <swr_free@plt>:
    44e8:	add	ip, pc, #0, 12
    44ec:	add	ip, ip, #184320	; 0x2d000
    44f0:	ldr	pc, [ip, #2440]!	; 0x988

000044f4 <av_strerror@plt>:
    44f4:	add	ip, pc, #0, 12
    44f8:	add	ip, ip, #184320	; 0x2d000
    44fc:	ldr	pc, [ip, #2432]!	; 0x980

00004500 <avcodec_open2@plt>:
    4500:	add	ip, pc, #0, 12
    4504:	add	ip, ip, #184320	; 0x2d000
    4508:	ldr	pc, [ip, #2424]!	; 0x978

0000450c <av_muxer_iterate@plt>:
    450c:	add	ip, pc, #0, 12
    4510:	add	ip, ip, #184320	; 0x2d000
    4514:	ldr	pc, [ip, #2416]!	; 0x970

00004518 <avdevice_list_input_sources@plt>:
    4518:	add	ip, pc, #0, 12
    451c:	add	ip, ip, #184320	; 0x2d000
    4520:	ldr	pc, [ip, #2408]!	; 0x968

00004524 <memcpy@plt>:
    4524:	add	ip, pc, #0, 12
    4528:	add	ip, ip, #184320	; 0x2d000
    452c:	ldr	pc, [ip, #2400]!	; 0x960

00004530 <av_opt_get@plt>:
    4530:	add	ip, pc, #0, 12
    4534:	add	ip, ip, #184320	; 0x2d000
    4538:	ldr	pc, [ip, #2392]!	; 0x958

0000453c <av_dict_set@plt>:
    453c:	add	ip, pc, #0, 12
    4540:	add	ip, ip, #184320	; 0x2d000
    4544:	ldr	pc, [ip, #2384]!	; 0x950

00004548 <av_packet_side_data_name@plt>:
    4548:	add	ip, pc, #0, 12
    454c:	add	ip, ip, #184320	; 0x2d000
    4550:	ldr	pc, [ip, #2376]!	; 0x948

00004554 <av_malloc_array@plt>:
    4554:	add	ip, pc, #0, 12
    4558:	add	ip, ip, #184320	; 0x2d000
    455c:	ldr	pc, [ip, #2368]!	; 0x940

00004560 <avformat_network_deinit@plt>:
    4560:	add	ip, pc, #0, 12
    4564:	add	ip, ip, #184320	; 0x2d000
    4568:	ldr	pc, [ip, #2360]!	; 0x938

0000456c <avcodec_profile_name@plt>:
    456c:	add	ip, pc, #0, 12
    4570:	add	ip, ip, #184320	; 0x2d000
    4574:	ldr	pc, [ip, #2352]!	; 0x930

00004578 <avformat_find_stream_info@plt>:
    4578:	add	ip, pc, #0, 12
    457c:	add	ip, ip, #184320	; 0x2d000
    4580:	ldr	pc, [ip, #2344]!	; 0x928

00004584 <av_log_format_line@plt>:
    4584:	add	ip, pc, #0, 12
    4588:	add	ip, ip, #184320	; 0x2d000
    458c:	ldr	pc, [ip, #2336]!	; 0x920

00004590 <av_read_frame@plt>:
    4590:	add	ip, pc, #0, 12
    4594:	add	ip, ip, #184320	; 0x2d000
    4598:	ldr	pc, [ip, #2328]!	; 0x918

0000459c <av_bprintf@plt>:
    459c:	add	ip, pc, #0, 12
    45a0:	add	ip, ip, #184320	; 0x2d000
    45a4:	ldr	pc, [ip, #2320]!	; 0x910

000045a8 <av_dict_parse_string@plt>:
    45a8:	add	ip, pc, #0, 12
    45ac:	add	ip, ip, #184320	; 0x2d000
    45b0:	ldr	pc, [ip, #2312]!	; 0x908

000045b4 <av_input_audio_device_next@plt>:
    45b4:	add	ip, pc, #0, 12
    45b8:	add	ip, ip, #184320	; 0x2d000
    45bc:	ldr	pc, [ip, #2304]!	; 0x900

000045c0 <av_bprint_clear@plt>:
    45c0:	add	ip, pc, #0, 12
    45c4:	add	ip, ip, #184320	; 0x2d000
    45c8:	ldr	pc, [ip, #2296]!	; 0x8f8

000045cc <av_log_get_level@plt>:
    45cc:	add	ip, pc, #0, 12
    45d0:	add	ip, ip, #184320	; 0x2d000
    45d4:	ldr	pc, [ip, #2288]!	; 0x8f0

000045d8 <av_codec_is_decoder@plt>:
    45d8:	add	ip, pc, #0, 12
    45dc:	add	ip, ip, #184320	; 0x2d000
    45e0:	ldr	pc, [ip, #2280]!	; 0x8e8

000045e4 <localtime@plt>:
    45e4:	add	ip, pc, #0, 12
    45e8:	add	ip, ip, #184320	; 0x2d000
    45ec:	ldr	pc, [ip, #2272]!	; 0x8e0

000045f0 <av_bprint_chars@plt>:
    45f0:	add	ip, pc, #0, 12
    45f4:	add	ip, ip, #184320	; 0x2d000
    45f8:	ldr	pc, [ip, #2264]!	; 0x8d8

000045fc <avdevice_version@plt>:
    45fc:	add	ip, pc, #0, 12
    4600:	add	ip, ip, #184320	; 0x2d000
    4604:	ldr	pc, [ip, #2256]!	; 0x8d0

00004608 <avformat_close_input@plt>:
    4608:	add	ip, pc, #0, 12
    460c:	add	ip, ip, #184320	; 0x2d000
    4610:	ldr	pc, [ip, #2248]!	; 0x8c8

00004614 <vchiq_release_message@plt>:
    4614:	add	ip, pc, #0, 12
    4618:	add	ip, ip, #184320	; 0x2d000
    461c:	ldr	pc, [ip, #2240]!	; 0x8c0

00004620 <av_opt_child_class_next@plt>:
    4620:	add	ip, pc, #0, 12
    4624:	add	ip, ip, #184320	; 0x2d000
    4628:	ldr	pc, [ip, #2232]!	; 0x8b8

0000462c <av_opt_set_defaults@plt>:
    462c:	add	ip, pc, #0, 12
    4630:	add	ip, ip, #184320	; 0x2d000
    4634:	ldr	pc, [ip, #2224]!	; 0x8b0

00004638 <av_init_packet@plt>:
    4638:	add	ip, pc, #0, 12
    463c:	add	ip, ip, #184320	; 0x2d000
    4640:	ldr	pc, [ip, #2216]!	; 0x8a8

00004644 <av_dict_get@plt>:
    4644:	add	ip, pc, #0, 12
    4648:	add	ip, ip, #184320	; 0x2d000
    464c:	ldr	pc, [ip, #2208]!	; 0x8a0

00004650 <av_rescale_q@plt>:
    4650:	add	ip, pc, #0, 12
    4654:	add	ip, ip, #184320	; 0x2d000
    4658:	ldr	pc, [ip, #2200]!	; 0x898

0000465c <__vfprintf_chk@plt>:
    465c:	add	ip, pc, #0, 12
    4660:	add	ip, ip, #184320	; 0x2d000
    4664:	ldr	pc, [ip, #2192]!	; 0x890

00004668 <av_max_alloc@plt>:
    4668:	add	ip, pc, #0, 12
    466c:	add	ip, ip, #184320	; 0x2d000
    4670:	ldr	pc, [ip, #2184]!	; 0x888

00004674 <avdevice_list_output_sinks@plt>:
    4674:	add	ip, pc, #0, 12
    4678:	add	ip, ip, #184320	; 0x2d000
    467c:	ldr	pc, [ip, #2176]!	; 0x880

00004680 <pthread_mutex_destroy@plt>:
    4680:	add	ip, pc, #0, 12
    4684:	add	ip, ip, #184320	; 0x2d000
    4688:	ldr	pc, [ip, #2168]!	; 0x878

0000468c <av_opt_free@plt>:
    468c:	add	ip, pc, #0, 12
    4690:	add	ip, ip, #184320	; 0x2d000
    4694:	ldr	pc, [ip, #2160]!	; 0x870

00004698 <round@plt>:
    4698:	add	ip, pc, #0, 12
    469c:	add	ip, ip, #184320	; 0x2d000
    46a0:	ldr	pc, [ip, #2152]!	; 0x868

000046a4 <swscale_version@plt>:
    46a4:	add	ip, pc, #0, 12
    46a8:	add	ip, ip, #184320	; 0x2d000
    46ac:	ldr	pc, [ip, #2144]!	; 0x860

000046b0 <perror@plt>:
    46b0:	add	ip, pc, #0, 12
    46b4:	add	ip, ip, #184320	; 0x2d000
    46b8:	ldr	pc, [ip, #2136]!	; 0x858

000046bc <av_match_name@plt>:
    46bc:	add	ip, pc, #0, 12
    46c0:	add	ip, ip, #184320	; 0x2d000
    46c4:	ldr	pc, [ip, #2128]!	; 0x850

000046c8 <strcmp@plt>:
    46c8:	add	ip, pc, #0, 12
    46cc:	add	ip, ip, #184320	; 0x2d000
    46d0:	ldr	pc, [ip, #2120]!	; 0x848

000046d4 <avcodec_free_context@plt>:
    46d4:	add	ip, pc, #0, 12
    46d8:	add	ip, ip, #184320	; 0x2d000
    46dc:	ldr	pc, [ip, #2112]!	; 0x840

000046e0 <avcodec_get_hw_config@plt>:
    46e0:	add	ip, pc, #0, 12
    46e4:	add	ip, ip, #184320	; 0x2d000
    46e8:	ldr	pc, [ip, #2104]!	; 0x838

000046ec <av_free@plt>:
    46ec:	add	ip, pc, #0, 12
    46f0:	add	ip, ip, #184320	; 0x2d000
    46f4:	ldr	pc, [ip, #2096]!	; 0x830

000046f8 <getenv@plt>:
    46f8:	add	ip, pc, #0, 12
    46fc:	add	ip, ip, #184320	; 0x2d000
    4700:	ldr	pc, [ip, #2088]!	; 0x828

00004704 <avcodec_alloc_context3@plt>:
    4704:	add	ip, pc, #0, 12
    4708:	add	ip, ip, #184320	; 0x2d000
    470c:	ldr	pc, [ip, #2080]!	; 0x820

00004710 <av_frame_side_data_name@plt>:
    4710:	add	ip, pc, #0, 12
    4714:	add	ip, ip, #184320	; 0x2d000
    4718:	ldr	pc, [ip, #2072]!	; 0x818

0000471c <av_log_get_flags@plt>:
    471c:	add	ip, pc, #0, 12
    4720:	add	ip, ip, #184320	; 0x2d000
    4724:	ldr	pc, [ip, #2064]!	; 0x810

00004728 <time@plt>:
    4728:	add	ip, pc, #0, 12
    472c:	add	ip, ip, #184320	; 0x2d000
    4730:	ldr	pc, [ip, #2056]!	; 0x808

00004734 <avcodec_configuration@plt>:
    4734:	add	ip, pc, #0, 12
    4738:	add	ip, ip, #184320	; 0x2d000
    473c:	ldr	pc, [ip, #2048]!	; 0x800

00004740 <avcodec_descriptor_get@plt>:
    4740:	add	ip, pc, #0, 12
    4744:	add	ip, ip, #184320	; 0x2d000
    4748:	ldr	pc, [ip, #2040]!	; 0x7f8

0000474c <__printf_chk@plt>:
    474c:	add	ip, pc, #0, 12
    4750:	add	ip, ip, #184320	; 0x2d000
    4754:	ldr	pc, [ip, #2032]!	; 0x7f0

00004758 <av_packet_unref@plt>:
    4758:	add	ip, pc, #0, 12
    475c:	add	ip, ip, #184320	; 0x2d000
    4760:	ldr	pc, [ip, #2024]!	; 0x7e8

00004764 <av_output_video_device_next@plt>:
    4764:	add	ip, pc, #0, 12
    4768:	add	ip, ip, #184320	; 0x2d000
    476c:	ldr	pc, [ip, #2016]!	; 0x7e0

00004770 <swr_alloc@plt>:
    4770:	add	ip, pc, #0, 12
    4774:	add	ip, ip, #184320	; 0x2d000
    4778:	ldr	pc, [ip, #2008]!	; 0x7d8

0000477c <av_mallocz@plt>:
    477c:	add	ip, pc, #0, 12
    4780:	add	ip, ip, #184320	; 0x2d000
    4784:	ldr	pc, [ip, #2000]!	; 0x7d0

00004788 <vchiq_connect@plt>:
    4788:	add	ip, pc, #0, 12
    478c:	add	ip, ip, #184320	; 0x2d000
    4790:	ldr	pc, [ip, #1992]!	; 0x7c8

00004794 <av_get_pix_fmt_name@plt>:
    4794:	add	ip, pc, #0, 12
    4798:	add	ip, ip, #184320	; 0x2d000
    479c:	ldr	pc, [ip, #1984]!	; 0x7c0

000047a0 <av_pix_fmt_desc_next@plt>:
    47a0:	add	ip, pc, #0, 12
    47a4:	add	ip, ip, #184320	; 0x2d000
    47a8:	ldr	pc, [ip, #1976]!	; 0x7b8

000047ac <strtol@plt>:
    47ac:	add	ip, pc, #0, 12
    47b0:	add	ip, ip, #184320	; 0x2d000
    47b4:	ldr	pc, [ip, #1968]!	; 0x7b0

000047b8 <av_get_sample_fmt_string@plt>:
    47b8:	add	ip, pc, #0, 12
    47bc:	add	ip, ip, #184320	; 0x2d000
    47c0:	ldr	pc, [ip, #1960]!	; 0x7a8

000047c4 <exit@plt>:
    47c4:	add	ip, pc, #0, 12
    47c8:	add	ip, ip, #184320	; 0x2d000
    47cc:	ldr	pc, [ip, #1952]!	; 0x7a0

000047d0 <av_opt_show2@plt>:
    47d0:	add	ip, pc, #0, 12
    47d4:	add	ip, ip, #184320	; 0x2d000
    47d8:	ldr	pc, [ip, #1944]!	; 0x798

000047dc <av_get_media_type_string@plt>:
    47dc:	add	ip, pc, #0, 12
    47e0:	add	ip, ip, #184320	; 0x2d000
    47e4:	ldr	pc, [ip, #1936]!	; 0x790

000047e8 <vcos_once@plt>:
    47e8:	add	ip, pc, #0, 12
    47ec:	add	ip, ip, #184320	; 0x2d000
    47f0:	ldr	pc, [ip, #1928]!	; 0x788

000047f4 <av_strlcatf@plt>:
    47f4:	add	ip, pc, #0, 12
    47f8:	add	ip, ip, #184320	; 0x2d000
    47fc:	ldr	pc, [ip, #1920]!	; 0x780

00004800 <av_color_space_name@plt>:
    4800:	add	ip, pc, #0, 12
    4804:	add	ip, ip, #184320	; 0x2d000
    4808:	ldr	pc, [ip, #1912]!	; 0x778

0000480c <avcodec_parameters_to_context@plt>:
    480c:	add	ip, pc, #0, 12
    4810:	add	ip, ip, #184320	; 0x2d000
    4814:	ldr	pc, [ip, #1904]!	; 0x770

00004818 <av_pix_fmt_desc_get_id@plt>:
    4818:	add	ip, pc, #0, 12
    481c:	add	ip, ip, #184320	; 0x2d000
    4820:	ldr	pc, [ip, #1896]!	; 0x768

00004824 <av_color_transfer_name@plt>:
    4824:	add	ip, pc, #0, 12
    4828:	add	ip, ip, #184320	; 0x2d000
    482c:	ldr	pc, [ip, #1888]!	; 0x760

00004830 <vcos_log_impl@plt>:
    4830:	add	ip, pc, #0, 12
    4834:	add	ip, ip, #184320	; 0x2d000
    4838:	ldr	pc, [ip, #1880]!	; 0x758

0000483c <av_reallocp_array@plt>:
    483c:	add	ip, pc, #0, 12
    4840:	add	ip, ip, #184320	; 0x2d000
    4844:	ldr	pc, [ip, #1872]!	; 0x750

00004848 <strtok@plt>:
    4848:	add	ip, pc, #0, 12
    484c:	add	ip, ip, #184320	; 0x2d000
    4850:	ldr	pc, [ip, #1864]!	; 0x748

00004854 <avformat_network_init@plt>:
    4854:	add	ip, pc, #0, 12
    4858:	add	ip, ip, #184320	; 0x2d000
    485c:	ldr	pc, [ip, #1856]!	; 0x740

00004860 <pthread_mutex_unlock@plt>:
    4860:	add	ip, pc, #0, 12
    4864:	add	ip, ip, #184320	; 0x2d000
    4868:	ldr	pc, [ip, #1848]!	; 0x738

0000486c <swr_get_class@plt>:
    486c:	add	ip, pc, #0, 12
    4870:	add	ip, ip, #184320	; 0x2d000
    4874:	ldr	pc, [ip, #1840]!	; 0x730

00004878 <pthread_mutex_init@plt>:
    4878:	add	ip, pc, #0, 12
    487c:	add	ip, ip, #184320	; 0x2d000
    4880:	ldr	pc, [ip, #1832]!	; 0x728

Disassembly of section .text:

00004888 <main@@Base-0x3a4>:
    4888:	push	{lr}		; (str lr, [sp, #-4]!)
    488c:	ldr	r3, [pc, #108]	; 4900 <pthread_mutex_init@plt+0x88>
    4890:	ldr	r1, [pc, #108]	; 4904 <pthread_mutex_init@plt+0x8c>
    4894:	add	r3, pc, r3
    4898:	ldr	r2, [r0, #12]
    489c:	ldr	r1, [r3, r1]
    48a0:	ldr	r0, [r2, #8]
    48a4:	ldr	ip, [r1]
    48a8:	sub	sp, sp, #12
    48ac:	cmp	r0, #0
    48b0:	str	ip, [sp, #4]
    48b4:	ldreq	r3, [pc, #76]	; 4908 <pthread_mutex_init@plt+0x90>
    48b8:	addeq	r3, pc, r3
    48bc:	ldrne	r3, [pc, #72]	; 490c <pthread_mutex_init@plt+0x94>
    48c0:	addne	r3, pc, r3
    48c4:	cmp	r0, #0
    48c8:	str	r3, [r2, #12]
    48cc:	ldreq	r3, [pc, #60]	; 4910 <pthread_mutex_init@plt+0x98>
    48d0:	addeq	r3, pc, r3
    48d4:	ldrne	r3, [pc, #56]	; 4914 <pthread_mutex_init@plt+0x9c>
    48d8:	addne	r3, pc, r3
    48dc:	ldr	r0, [sp, #4]
    48e0:	ldr	r1, [r1]
    48e4:	str	r3, [r2, #16]
    48e8:	cmp	r0, r1
    48ec:	mov	r0, #0
    48f0:	beq	48f8 <pthread_mutex_init@plt+0x80>
    48f4:	bl	3f00 <__stack_chk_fail@plt>
    48f8:	add	sp, sp, #12
    48fc:	pop	{pc}		; (ldr pc, [sp], #4)
    4900:	andeq	sp, r2, r8, ror #6
    4904:	andeq	r0, r0, r8, ror #7
    4908:	andeq	r9, r1, r8, lsl #16
    490c:	strdeq	r9, [r1], -ip
    4910:	andeq	r8, r1, r0, asr #5
    4914:	andeq	r7, r1, ip, lsr #30
    4918:	push	{r4, lr}
    491c:	ldr	r3, [pc, #284]	; 4a40 <pthread_mutex_init@plt+0x1c8>
    4920:	ldr	r2, [pc, #284]	; 4a44 <pthread_mutex_init@plt+0x1cc>
    4924:	add	r3, pc, r3
    4928:	ldr	r1, [r0, #12]
    492c:	ldr	r4, [r3, r2]
    4930:	ldr	ip, [r1, #16]
    4934:	ldr	r2, [r4]
    4938:	sub	sp, sp, #16
    493c:	cmp	ip, #0
    4940:	str	r2, [sp, #12]
    4944:	bne	4950 <pthread_mutex_init@plt+0xd8>
    4948:	mov	r0, #0
    494c:	b	4a24 <pthread_mutex_init@plt+0x1ac>
    4950:	mov	r2, #1
    4954:	ldr	r3, [pc, #236]	; 4a48 <pthread_mutex_init@plt+0x1d0>
    4958:	str	r2, [r1, #12]
    495c:	add	r3, pc, r3
    4960:	ldr	r3, [r3]
    4964:	cmp	r3, #0
    4968:	beq	4990 <pthread_mutex_init@plt+0x118>
    496c:	ldr	r3, [pc, #216]	; 4a4c <pthread_mutex_init@plt+0x1d4>
    4970:	ldr	r2, [pc, #216]	; 4a50 <pthread_mutex_init@plt+0x1d8>
    4974:	add	r3, pc, r3
    4978:	add	r2, pc, r2
    497c:	str	r3, [sp]
    4980:	mov	r1, #16
    4984:	bl	40f8 <av_log@plt>
    4988:	mvn	r0, #21
    498c:	b	4a24 <pthread_mutex_init@plt+0x1ac>
    4990:	ldr	r3, [pc, #188]	; 4a54 <pthread_mutex_init@plt+0x1dc>
    4994:	add	r3, pc, r3
    4998:	ldr	r2, [r3]
    499c:	cmp	r2, #0
    49a0:	beq	49c8 <pthread_mutex_init@plt+0x150>
    49a4:	ldr	r3, [pc, #172]	; 4a58 <pthread_mutex_init@plt+0x1e0>
    49a8:	ldr	r2, [pc, #172]	; 4a5c <pthread_mutex_init@plt+0x1e4>
    49ac:	add	r3, pc, r3
    49b0:	add	r2, pc, r2
    49b4:	str	r3, [sp]
    49b8:	mov	r1, #16
    49bc:	bl	40f8 <av_log@plt>
    49c0:	mvn	r0, #21
    49c4:	b	4a24 <pthread_mutex_init@plt+0x1ac>
    49c8:	ldr	r2, [r3, #4]
    49cc:	cmp	r2, #0
    49d0:	beq	49f8 <pthread_mutex_init@plt+0x180>
    49d4:	ldr	r3, [pc, #132]	; 4a60 <pthread_mutex_init@plt+0x1e8>
    49d8:	ldr	r2, [pc, #132]	; 4a64 <pthread_mutex_init@plt+0x1ec>
    49dc:	add	r3, pc, r3
    49e0:	add	r2, pc, r2
    49e4:	str	r3, [sp]
    49e8:	mov	r1, #16
    49ec:	bl	40f8 <av_log@plt>
    49f0:	mvn	r0, #21
    49f4:	b	4a24 <pthread_mutex_init@plt+0x1ac>
    49f8:	ldr	r2, [r3, #16]
    49fc:	cmp	r2, #0
    4a00:	beq	4948 <pthread_mutex_init@plt+0xd0>
    4a04:	ldr	r3, [r3, #20]
    4a08:	cmp	r3, #0
    4a0c:	beq	4948 <pthread_mutex_init@plt+0xd0>
    4a10:	ldr	r2, [pc, #80]	; 4a68 <pthread_mutex_init@plt+0x1f0>
    4a14:	mov	r1, #16
    4a18:	add	r2, pc, r2
    4a1c:	bl	40f8 <av_log@plt>
    4a20:	mvn	r0, #21
    4a24:	ldr	r2, [sp, #12]
    4a28:	ldr	r3, [r4]
    4a2c:	cmp	r2, r3
    4a30:	beq	4a38 <pthread_mutex_init@plt+0x1c0>
    4a34:	bl	3f00 <__stack_chk_fail@plt>
    4a38:	add	sp, sp, #16
    4a3c:	pop	{r4, pc}
    4a40:	ldrdeq	sp, [r2], -r8
    4a44:	andeq	r0, r0, r8, ror #7
    4a48:	strdeq	sp, [r2], -r4
    4a4c:	andeq	r9, r1, r4, asr r7
    4a50:	andeq	r9, r1, r8, asr r7
    4a54:	ldrdeq	lr, [r2], -r8
    4a58:			; <UNDEFINED> instruction: 0x000197b0
    4a5c:	andeq	r9, r1, r0, lsr #14
    4a60:	andeq	fp, r1, ip, asr #2
    4a64:	strdeq	r9, [r1], -r0
    4a68:	andeq	r9, r1, ip, asr #14
    4a6c:	push	{r4, r5, r6, r7, lr}
    4a70:	ldr	r2, [pc, #116]	; 4aec <pthread_mutex_init@plt+0x274>
    4a74:	ldr	r3, [pc, #116]	; 4af0 <pthread_mutex_init@plt+0x278>
    4a78:	add	r2, pc, r2
    4a7c:	ldr	r6, [r0, #12]
    4a80:	ldr	r5, [r2, r3]
    4a84:	ldr	r4, [r6, #4]
    4a88:	ldr	r3, [r5]
    4a8c:	sub	sp, sp, #12
    4a90:	mov	r7, r0
    4a94:	mov	r0, r4
    4a98:	str	r3, [sp, #4]
    4a9c:	bl	4110 <strlen@plt>
    4aa0:	cmp	r0, #1
    4aa4:	ldrbeq	r3, [r4]
    4aa8:	moveq	r0, #0
    4aac:	strbeq	r3, [r6, #8]
    4ab0:	beq	4ad0 <pthread_mutex_init@plt+0x258>
    4ab4:	ldr	r2, [pc, #56]	; 4af4 <pthread_mutex_init@plt+0x27c>
    4ab8:	mov	r0, r7
    4abc:	mov	r3, r4
    4ac0:	add	r2, pc, r2
    4ac4:	mov	r1, #16
    4ac8:	bl	40f8 <av_log@plt>
    4acc:	mvn	r0, #21
    4ad0:	ldr	r2, [sp, #4]
    4ad4:	ldr	r3, [r5]
    4ad8:	cmp	r2, r3
    4adc:	beq	4ae4 <pthread_mutex_init@plt+0x26c>
    4ae0:	bl	3f00 <__stack_chk_fail@plt>
    4ae4:	add	sp, sp, #12
    4ae8:	pop	{r4, r5, r6, r7, pc}
    4aec:	andeq	sp, r2, r4, lsl #3
    4af0:	andeq	r0, r0, r8, ror #7
    4af4:	andeq	r9, r1, r4, lsl #20
    4af8:	push	{r4, r5, r6, r7, lr}
    4afc:	ldr	r2, [pc, #256]	; 4c04 <pthread_mutex_init@plt+0x38c>
    4b00:	ldr	r3, [pc, #256]	; 4c08 <pthread_mutex_init@plt+0x390>
    4b04:	add	r2, pc, r2
    4b08:	ldr	r4, [r0, #12]
    4b0c:	ldr	r7, [r2, r3]
    4b10:	ldr	r5, [r4, #4]
    4b14:	ldr	r3, [r7]
    4b18:	sub	sp, sp, #12
    4b1c:	mov	r6, r0
    4b20:	mov	r0, r5
    4b24:	str	r3, [sp, #4]
    4b28:	bl	4110 <strlen@plt>
    4b2c:	cmp	r0, #1
    4b30:	beq	4b54 <pthread_mutex_init@plt+0x2dc>
    4b34:	ldr	r2, [pc, #208]	; 4c0c <pthread_mutex_init@plt+0x394>
    4b38:	mov	r0, r6
    4b3c:	mov	r3, r5
    4b40:	add	r2, pc, r2
    4b44:	mov	r1, #16
    4b48:	bl	40f8 <av_log@plt>
    4b4c:	mvn	r0, #21
    4b50:	b	4be8 <pthread_mutex_init@plt+0x370>
    4b54:	ldrb	r3, [r5]
    4b58:	ldr	r1, [pc, #176]	; 4c10 <pthread_mutex_init@plt+0x398>
    4b5c:	ldr	r5, [r4, #20]
    4b60:	strb	r3, [r4, #8]
    4b64:	mov	r0, r5
    4b68:	add	r1, pc, r1
    4b6c:	bl	46c8 <strcmp@plt>
    4b70:	cmp	r0, #0
    4b74:	ldreq	r3, [pc, #152]	; 4c14 <pthread_mutex_init@plt+0x39c>
    4b78:	addeq	r3, pc, r3
    4b7c:	streq	r3, [r4, #24]
    4b80:	beq	4be8 <pthread_mutex_init@plt+0x370>
    4b84:	ldr	r1, [pc, #140]	; 4c18 <pthread_mutex_init@plt+0x3a0>
    4b88:	mov	r0, r5
    4b8c:	add	r1, pc, r1
    4b90:	bl	46c8 <strcmp@plt>
    4b94:	cmp	r0, #0
    4b98:	ldreq	r3, [pc, #124]	; 4c1c <pthread_mutex_init@plt+0x3a4>
    4b9c:	addeq	r3, pc, r3
    4ba0:	streq	r3, [r4, #24]
    4ba4:	beq	4be8 <pthread_mutex_init@plt+0x370>
    4ba8:	ldr	r1, [pc, #112]	; 4c20 <pthread_mutex_init@plt+0x3a8>
    4bac:	mov	r0, r5
    4bb0:	add	r1, pc, r1
    4bb4:	bl	46c8 <strcmp@plt>
    4bb8:	cmp	r0, #0
    4bbc:	ldreq	r3, [pc, #96]	; 4c24 <pthread_mutex_init@plt+0x3ac>
    4bc0:	addeq	r3, pc, r3
    4bc4:	streq	r3, [r4, #24]
    4bc8:	beq	4be8 <pthread_mutex_init@plt+0x370>
    4bcc:	ldr	r2, [pc, #84]	; 4c28 <pthread_mutex_init@plt+0x3b0>
    4bd0:	mov	r0, r6
    4bd4:	mov	r3, r5
    4bd8:	add	r2, pc, r2
    4bdc:	mov	r1, #16
    4be0:	bl	40f8 <av_log@plt>
    4be4:	mvn	r0, #21
    4be8:	ldr	r2, [sp, #4]
    4bec:	ldr	r3, [r7]
    4bf0:	cmp	r2, r3
    4bf4:	beq	4bfc <pthread_mutex_init@plt+0x384>
    4bf8:	bl	3f00 <__stack_chk_fail@plt>
    4bfc:	add	sp, sp, #12
    4c00:	pop	{r4, r5, r6, r7, pc}
    4c04:	strdeq	sp, [r2], -r8
    4c08:	andeq	r0, r0, r8, ror #7
    4c0c:	andeq	r9, r1, r4, lsl #19
    4c10:	andeq	r7, r1, r4, ror #25
    4c14:	andeq	sl, r0, ip, lsr #10
    4c18:	andeq	r9, r1, r4, ror sl
    4c1c:	andeq	fp, r0, r8, asr #27
    4c20:	strdeq	r9, [r1], -r4
    4c24:	andeq	ip, r0, r8, lsr r3
    4c28:	andeq	r9, r1, r8, lsl #19

00004c2c <main@@Base>:
    4c2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4c30:	ldr	r9, [pc, #4032]	; 5bf8 <main@@Base+0xfcc>
    4c34:	ldr	r3, [pc, #4032]	; 5bfc <main@@Base+0xfd0>
    4c38:	add	r9, pc, r9
    4c3c:	ldr	r3, [r9, r3]
    4c40:	sub	sp, sp, #292	; 0x124
    4c44:	str	r3, [sp, #12]
    4c48:	ldr	r3, [r3]
    4c4c:	mov	r4, r0
    4c50:	mov	r5, r1
    4c54:	str	r3, [sp, #284]	; 0x11c
    4c58:	bl	8f94 <main@@Base+0x4368>
    4c5c:	ldr	r3, [pc, #3996]	; 5c00 <main@@Base+0xfd4>
    4c60:	mov	r1, #0
    4c64:	ldr	r0, [r9, r3]
    4c68:	bl	4878 <pthread_mutex_init@plt>
    4c6c:	subs	r7, r0, #0
    4c70:	movne	r6, r7
    4c74:	beq	4ce4 <main@@Base+0xb8>
    4c78:	ldr	r4, [pc, #3972]	; 5c04 <main@@Base+0xfd8>
    4c7c:	ldr	r5, [pc, #3972]	; 5c08 <main@@Base+0xfdc>
    4c80:	add	r4, pc, r4
    4c84:	add	r0, r4, #428	; 0x1ac
    4c88:	bl	3ec4 <av_freep@plt>
    4c8c:	add	r0, r4, #40	; 0x28
    4c90:	bl	3ec4 <av_freep@plt>
    4c94:	add	r0, r4, #48	; 0x30
    4c98:	bl	3e4c <av_hash_freep@plt>
    4c9c:	bl	8f00 <main@@Base+0x42d4>
    4ca0:	add	r5, pc, r5
    4ca4:	add	r4, r5, #64	; 0x40
    4ca8:	add	r5, r5, #3088	; 0xc10
    4cac:	mov	r0, r4
    4cb0:	add	r4, r4, #72	; 0x48
    4cb4:	bl	3ee8 <av_dict_free@plt>
    4cb8:	cmp	r5, r4
    4cbc:	bne	4cac <main@@Base+0x80>
    4cc0:	bl	4560 <avformat_network_deinit@plt>
    4cc4:	ldr	r3, [sp, #12]
    4cc8:	ldr	r2, [sp, #284]	; 0x11c
    4ccc:	ldr	r3, [r3]
    4cd0:	lsr	r0, r6, #31
    4cd4:	cmp	r2, r3
    4cd8:	bne	69f0 <main@@Base+0x1dc4>
    4cdc:	add	sp, sp, #292	; 0x124
    4ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4ce4:	mov	r0, #1
    4ce8:	bl	4350 <av_log_set_flags@plt>
    4cec:	ldr	r0, [pc, #3864]	; 5c0c <main@@Base+0xfe0>
    4cf0:	ldr	r6, [pc, #3864]	; 5c10 <main@@Base+0xfe4>
    4cf4:	add	r0, pc, r0
    4cf8:	bl	8fd8 <main@@Base+0x43ac>
    4cfc:	ldr	r3, [pc, #3856]	; 5c14 <main@@Base+0xfe8>
    4d00:	mov	r1, r5
    4d04:	add	r3, pc, r3
    4d08:	mov	r2, r3
    4d0c:	add	r6, pc, r6
    4d10:	mov	r0, r4
    4d14:	str	r3, [r6, #104]	; 0x68
    4d18:	bl	b4b0 <main@@Base+0x6884>
    4d1c:	bl	4854 <avformat_network_init@plt>
    4d20:	bl	8e90 <main@@Base+0x4264>
    4d24:	bl	43c8 <avdevice_register_all@plt>
    4d28:	ldr	r2, [r6, #104]	; 0x68
    4d2c:	mov	r1, r5
    4d30:	mov	r0, r4
    4d34:	bl	bc1c <main@@Base+0x6ff0>
    4d38:	ldr	r0, [pc, #3800]	; 5c18 <main@@Base+0xfec>
    4d3c:	ldr	r3, [r6, #104]	; 0x68
    4d40:	add	r0, pc, r0
    4d44:	str	r0, [sp]
    4d48:	mov	r2, r5
    4d4c:	mov	r1, r4
    4d50:	mov	r0, r7
    4d54:	bl	e070 <main@@Base+0x9444>
    4d58:	ldr	r3, [r6, #56]	; 0x38
    4d5c:	cmp	r3, #0
    4d60:	bne	5828 <main@@Base+0xbfc>
    4d64:	ldr	r3, [pc, #3760]	; 5c1c <main@@Base+0xff0>
    4d68:	add	r3, pc, r3
    4d6c:	ldr	r2, [r3, #212]	; 0xd4
    4d70:	cmp	r2, #0
    4d74:	bne	4d84 <main@@Base+0x158>
    4d78:	ldr	r3, [r3, #208]	; 0xd0
    4d7c:	cmp	r3, #0
    4d80:	beq	5814 <main@@Base+0xbe8>
    4d84:	mov	r2, #1
    4d88:	ldr	r3, [pc, #3728]	; 5c20 <main@@Base+0xff4>
    4d8c:	add	r3, pc, r3
    4d90:	str	r2, [r3, #108]	; 0x6c
    4d94:	ldr	r3, [pc, #3720]	; 5c24 <main@@Base+0xff8>
    4d98:	add	r3, pc, r3
    4d9c:	ldr	r2, [r3, #284]	; 0x11c
    4da0:	cmp	r2, #0
    4da4:	bne	4db4 <main@@Base+0x188>
    4da8:	ldr	r3, [r3, #280]	; 0x118
    4dac:	cmp	r3, #0
    4db0:	beq	5800 <main@@Base+0xbd4>
    4db4:	mov	r2, #1
    4db8:	ldr	r3, [pc, #3688]	; 5c28 <main@@Base+0xffc>
    4dbc:	add	r3, pc, r3
    4dc0:	str	r2, [r3, #112]	; 0x70
    4dc4:	ldr	r3, [pc, #3680]	; 5c2c <main@@Base+0x1000>
    4dc8:	add	r3, pc, r3
    4dcc:	ldr	r2, [r3, #356]	; 0x164
    4dd0:	cmp	r2, #0
    4dd4:	bne	4de4 <main@@Base+0x1b8>
    4dd8:	ldr	r3, [r3, #352]	; 0x160
    4ddc:	cmp	r3, #0
    4de0:	beq	57ec <main@@Base+0xbc0>
    4de4:	mov	r2, #1
    4de8:	ldr	r3, [pc, #3648]	; 5c30 <main@@Base+0x1004>
    4dec:	add	r3, pc, r3
    4df0:	str	r2, [r3, #116]	; 0x74
    4df4:	ldr	r3, [pc, #3640]	; 5c34 <main@@Base+0x1008>
    4df8:	add	r3, pc, r3
    4dfc:	ldr	r2, [r3, #572]	; 0x23c
    4e00:	cmp	r2, #0
    4e04:	bne	4e14 <main@@Base+0x1e8>
    4e08:	ldr	r3, [r3, #568]	; 0x238
    4e0c:	cmp	r3, #0
    4e10:	beq	57d8 <main@@Base+0xbac>
    4e14:	mov	r2, #1
    4e18:	ldr	r3, [pc, #3608]	; 5c38 <main@@Base+0x100c>
    4e1c:	add	r3, pc, r3
    4e20:	str	r2, [r3, #16]
    4e24:	ldr	r3, [pc, #3600]	; 5c3c <main@@Base+0x1010>
    4e28:	add	r3, pc, r3
    4e2c:	ldr	r2, [r3, #1076]	; 0x434
    4e30:	cmp	r2, #0
    4e34:	bne	4e44 <main@@Base+0x218>
    4e38:	ldr	r3, [r3, #1072]	; 0x430
    4e3c:	cmp	r3, #0
    4e40:	beq	57c4 <main@@Base+0xb98>
    4e44:	mov	r2, #1
    4e48:	ldr	r3, [pc, #3568]	; 5c40 <main@@Base+0x1014>
    4e4c:	add	r3, pc, r3
    4e50:	str	r2, [r3, #120]	; 0x78
    4e54:	ldr	r3, [pc, #3560]	; 5c44 <main@@Base+0x1018>
    4e58:	add	r3, pc, r3
    4e5c:	ldr	r2, [r3, #1292]	; 0x50c
    4e60:	cmp	r2, #0
    4e64:	bne	4e74 <main@@Base+0x248>
    4e68:	ldr	r3, [r3, #1288]	; 0x508
    4e6c:	cmp	r3, #0
    4e70:	beq	57b0 <main@@Base+0xb84>
    4e74:	mov	r2, #1
    4e78:	ldr	r3, [pc, #3528]	; 5c48 <main@@Base+0x101c>
    4e7c:	add	r3, pc, r3
    4e80:	str	r2, [r3, #20]
    4e84:	ldr	r3, [pc, #3520]	; 5c4c <main@@Base+0x1020>
    4e88:	add	r3, pc, r3
    4e8c:	ldr	r2, [r3, #1868]	; 0x74c
    4e90:	cmp	r2, #0
    4e94:	bne	4ea4 <main@@Base+0x278>
    4e98:	ldr	r3, [r3, #1864]	; 0x748
    4e9c:	cmp	r3, #0
    4ea0:	beq	579c <main@@Base+0xb70>
    4ea4:	mov	r2, #1
    4ea8:	ldr	r3, [pc, #3488]	; 5c50 <main@@Base+0x1024>
    4eac:	add	r3, pc, r3
    4eb0:	str	r2, [r3, #124]	; 0x7c
    4eb4:	ldr	r3, [pc, #3480]	; 5c54 <main@@Base+0x1028>
    4eb8:	add	r3, pc, r3
    4ebc:	ldr	r2, [r3, #1652]	; 0x674
    4ec0:	cmp	r2, #0
    4ec4:	bne	4ed4 <main@@Base+0x2a8>
    4ec8:	ldr	r3, [r3, #1648]	; 0x670
    4ecc:	cmp	r3, #0
    4ed0:	beq	5788 <main@@Base+0xb5c>
    4ed4:	mov	r2, #1
    4ed8:	ldr	r3, [pc, #3448]	; 5c58 <main@@Base+0x102c>
    4edc:	add	r3, pc, r3
    4ee0:	str	r2, [r3, #128]	; 0x80
    4ee4:	ldr	r3, [pc, #3440]	; 5c5c <main@@Base+0x1030>
    4ee8:	add	r3, pc, r3
    4eec:	ldr	r2, [r3, #1796]	; 0x704
    4ef0:	cmp	r2, #0
    4ef4:	bne	4f04 <main@@Base+0x2d8>
    4ef8:	ldr	r3, [r3, #1792]	; 0x700
    4efc:	cmp	r3, #0
    4f00:	beq	5774 <main@@Base+0xb48>
    4f04:	mov	r2, #1
    4f08:	ldr	r3, [pc, #3408]	; 5c60 <main@@Base+0x1034>
    4f0c:	add	r3, pc, r3
    4f10:	str	r2, [r3, #132]	; 0x84
    4f14:	ldr	r3, [pc, #3400]	; 5c64 <main@@Base+0x1038>
    4f18:	add	r3, pc, r3
    4f1c:	ldr	r2, [r3, #2372]	; 0x944
    4f20:	cmp	r2, #0
    4f24:	bne	4f34 <main@@Base+0x308>
    4f28:	ldr	r3, [r3, #2368]	; 0x940
    4f2c:	cmp	r3, #0
    4f30:	beq	5760 <main@@Base+0xb34>
    4f34:	mov	r2, #1
    4f38:	ldr	r3, [pc, #3368]	; 5c68 <main@@Base+0x103c>
    4f3c:	add	r3, pc, r3
    4f40:	str	r2, [r3, #136]	; 0x88
    4f44:	ldr	r3, [pc, #3360]	; 5c6c <main@@Base+0x1040>
    4f48:	add	r3, pc, r3
    4f4c:	ldr	r2, [r3, #2444]	; 0x98c
    4f50:	cmp	r2, #0
    4f54:	bne	4f64 <main@@Base+0x338>
    4f58:	ldr	r3, [r3, #2440]	; 0x988
    4f5c:	cmp	r3, #0
    4f60:	beq	574c <main@@Base+0xb20>
    4f64:	mov	r2, #1
    4f68:	ldr	r3, [pc, #3328]	; 5c70 <main@@Base+0x1044>
    4f6c:	add	r3, pc, r3
    4f70:	str	r2, [r3, #140]	; 0x8c
    4f74:	ldr	r3, [pc, #3320]	; 5c74 <main@@Base+0x1048>
    4f78:	add	r3, pc, r3
    4f7c:	ldr	r2, [r3, #2732]	; 0xaac
    4f80:	cmp	r2, #0
    4f84:	bne	4f94 <main@@Base+0x368>
    4f88:	ldr	r3, [r3, #2728]	; 0xaa8
    4f8c:	cmp	r3, #0
    4f90:	beq	5738 <main@@Base+0xb0c>
    4f94:	mov	r2, #1
    4f98:	ldr	r3, [pc, #3288]	; 5c78 <main@@Base+0x104c>
    4f9c:	add	r3, pc, r3
    4fa0:	str	r2, [r3, #144]	; 0x90
    4fa4:	ldr	r3, [pc, #3280]	; 5c7c <main@@Base+0x1050>
    4fa8:	add	r3, pc, r3
    4fac:	ldr	r2, [r3, #2660]	; 0xa64
    4fb0:	cmp	r2, #0
    4fb4:	bne	4fc4 <main@@Base+0x398>
    4fb8:	ldr	r3, [r3, #2656]	; 0xa60
    4fbc:	cmp	r3, #0
    4fc0:	beq	5724 <main@@Base+0xaf8>
    4fc4:	mov	r2, #1
    4fc8:	ldr	r3, [pc, #3248]	; 5c80 <main@@Base+0x1054>
    4fcc:	add	r3, pc, r3
    4fd0:	str	r2, [r3, #96]	; 0x60
    4fd4:	ldr	r3, [pc, #3240]	; 5c84 <main@@Base+0x1058>
    4fd8:	add	r3, pc, r3
    4fdc:	ldr	r2, [r3, #1940]	; 0x794
    4fe0:	cmp	r2, #0
    4fe4:	bne	4ff4 <main@@Base+0x3c8>
    4fe8:	ldr	r3, [r3, #1936]	; 0x790
    4fec:	cmp	r3, #0
    4ff0:	beq	5710 <main@@Base+0xae4>
    4ff4:	mov	r2, #1
    4ff8:	ldr	r3, [pc, #3208]	; 5c88 <main@@Base+0x105c>
    4ffc:	add	r3, pc, r3
    5000:	str	r2, [r3, #96]	; 0x60
    5004:	ldr	r3, [pc, #3200]	; 5c8c <main@@Base+0x1060>
    5008:	add	r3, pc, r3
    500c:	ldr	r2, [r3, #140]	; 0x8c
    5010:	cmp	r2, #0
    5014:	bne	5024 <main@@Base+0x3f8>
    5018:	ldr	r3, [r3, #136]	; 0x88
    501c:	cmp	r3, #0
    5020:	beq	56fc <main@@Base+0xad0>
    5024:	mov	r2, #1
    5028:	ldr	r3, [pc, #3168]	; 5c90 <main@@Base+0x1064>
    502c:	add	r3, pc, r3
    5030:	str	r2, [r3, #148]	; 0x94
    5034:	ldr	r3, [pc, #3160]	; 5c94 <main@@Base+0x1068>
    5038:	add	r3, pc, r3
    503c:	ldr	r2, [r3, #428]	; 0x1ac
    5040:	cmp	r2, #0
    5044:	bne	5054 <main@@Base+0x428>
    5048:	ldr	r3, [r3, #424]	; 0x1a8
    504c:	cmp	r3, #0
    5050:	beq	56e8 <main@@Base+0xabc>
    5054:	mov	r2, #1
    5058:	ldr	r3, [pc, #3128]	; 5c98 <main@@Base+0x106c>
    505c:	add	r3, pc, r3
    5060:	str	r2, [r3, #152]	; 0x98
    5064:	ldr	r3, [pc, #3120]	; 5c9c <main@@Base+0x1070>
    5068:	add	r3, pc, r3
    506c:	ldr	r2, [r3, #644]	; 0x284
    5070:	cmp	r2, #0
    5074:	bne	5084 <main@@Base+0x458>
    5078:	ldr	r3, [r3, #640]	; 0x280
    507c:	cmp	r3, #0
    5080:	beq	56d4 <main@@Base+0xaa8>
    5084:	mov	r2, #1
    5088:	ldr	r3, [pc, #3088]	; 5ca0 <main@@Base+0x1074>
    508c:	add	r3, pc, r3
    5090:	str	r2, [r3, #52]	; 0x34
    5094:	ldr	r3, [pc, #3080]	; 5ca4 <main@@Base+0x1078>
    5098:	add	r3, pc, r3
    509c:	ldr	r2, [r3, #2300]	; 0x8fc
    50a0:	cmp	r2, #0
    50a4:	bne	50b4 <main@@Base+0x488>
    50a8:	ldr	r3, [r3, #2296]	; 0x8f8
    50ac:	cmp	r3, #0
    50b0:	beq	56c0 <main@@Base+0xa94>
    50b4:	mov	r2, #1
    50b8:	ldr	r3, [pc, #3048]	; 5ca8 <main@@Base+0x107c>
    50bc:	add	r3, pc, r3
    50c0:	str	r2, [r3, #156]	; 0x9c
    50c4:	ldr	r3, [pc, #3040]	; 5cac <main@@Base+0x1080>
    50c8:	add	r3, pc, r3
    50cc:	ldr	r2, [r3, #2804]	; 0xaf4
    50d0:	cmp	r2, #0
    50d4:	bne	50e4 <main@@Base+0x4b8>
    50d8:	ldr	r3, [r3, #2800]	; 0xaf0
    50dc:	cmp	r3, #0
    50e0:	beq	56ac <main@@Base+0xa80>
    50e4:	mov	r2, #1
    50e8:	ldr	r3, [pc, #3008]	; 5cb0 <main@@Base+0x1084>
    50ec:	add	r3, pc, r3
    50f0:	str	r2, [r3, #100]	; 0x64
    50f4:	ldr	r3, [pc, #3000]	; 5cb4 <main@@Base+0x1088>
    50f8:	add	r3, pc, r3
    50fc:	ldr	r2, [r3, #2012]	; 0x7dc
    5100:	cmp	r2, #0
    5104:	bne	5114 <main@@Base+0x4e8>
    5108:	ldr	r3, [r3, #2008]	; 0x7d8
    510c:	cmp	r3, #0
    5110:	beq	5698 <main@@Base+0xa6c>
    5114:	mov	r2, #1
    5118:	ldr	r3, [pc, #2968]	; 5cb8 <main@@Base+0x108c>
    511c:	add	r3, pc, r3
    5120:	str	r2, [r3, #100]	; 0x64
    5124:	ldr	r3, [pc, #2960]	; 5cbc <main@@Base+0x1090>
    5128:	add	r3, pc, r3
    512c:	ldr	r2, [r3, #1220]	; 0x4c4
    5130:	cmp	r2, #0
    5134:	bne	5144 <main@@Base+0x518>
    5138:	ldr	r3, [r3, #1216]	; 0x4c0
    513c:	cmp	r3, #0
    5140:	beq	5684 <main@@Base+0xa58>
    5144:	mov	r2, #1
    5148:	ldr	r3, [pc, #2928]	; 5cc0 <main@@Base+0x1094>
    514c:	add	r3, pc, r3
    5150:	str	r2, [r3, #80]	; 0x50
    5154:	ldr	r3, [pc, #2920]	; 5cc4 <main@@Base+0x1098>
    5158:	add	r3, pc, r3
    515c:	ldr	r2, [r3, #92]	; 0x5c
    5160:	cmp	r2, #0
    5164:	beq	5178 <main@@Base+0x54c>
    5168:	ldr	r2, [r3, #136]	; 0x88
    516c:	ldr	r3, [r3, #120]	; 0x78
    5170:	orrs	r3, r2, r3
    5174:	bne	5838 <main@@Base+0xc0c>
    5178:	ldr	r3, [pc, #2888]	; 5cc8 <main@@Base+0x109c>
    517c:	add	r3, pc, r3
    5180:	ldr	r2, [r3, #160]	; 0xa0
    5184:	cmp	r2, #0
    5188:	bne	526c <main@@Base+0x640>
    518c:	mov	r1, #1
    5190:	ldr	r2, [r3, #164]	; 0xa4
    5194:	str	r1, [r3, #160]	; 0xa0
    5198:	cmp	r2, #64	; 0x40
    519c:	beq	526c <main@@Base+0x640>
    51a0:	ldr	r1, [pc, #2852]	; 5ccc <main@@Base+0x10a0>
    51a4:	add	ip, r2, #1
    51a8:	add	r1, pc, r1
    51ac:	add	lr, r1, #192	; 0xc0
    51b0:	add	r0, r3, r2, lsl #2
    51b4:	cmp	ip, #64	; 0x40
    51b8:	str	lr, [r0, #168]	; 0xa8
    51bc:	str	ip, [r3, #164]	; 0xa4
    51c0:	beq	526c <main@@Base+0x640>
    51c4:	add	r0, r2, #2
    51c8:	add	ip, r3, ip, lsl #2
    51cc:	add	lr, r1, #236	; 0xec
    51d0:	cmp	r0, #64	; 0x40
    51d4:	str	lr, [ip, #168]	; 0xa8
    51d8:	str	r0, [r3, #164]	; 0xa4
    51dc:	beq	526c <main@@Base+0x640>
    51e0:	add	ip, r2, #3
    51e4:	add	r0, r3, r0, lsl #2
    51e8:	add	lr, r1, #280	; 0x118
    51ec:	cmp	ip, #64	; 0x40
    51f0:	str	lr, [r0, #168]	; 0xa8
    51f4:	str	ip, [r3, #164]	; 0xa4
    51f8:	beq	526c <main@@Base+0x640>
    51fc:	add	r0, r2, #4
    5200:	add	ip, r3, ip, lsl #2
    5204:	add	lr, r1, #324	; 0x144
    5208:	cmp	r0, #64	; 0x40
    520c:	str	lr, [ip, #168]	; 0xa8
    5210:	str	r0, [r3, #164]	; 0xa4
    5214:	beq	526c <main@@Base+0x640>
    5218:	add	ip, r2, #5
    521c:	add	r0, r3, r0, lsl #2
    5220:	add	lr, r1, #368	; 0x170
    5224:	cmp	ip, #64	; 0x40
    5228:	str	lr, [r0, #168]	; 0xa8
    522c:	str	ip, [r3, #164]	; 0xa4
    5230:	beq	526c <main@@Base+0x640>
    5234:	add	r0, r2, #6
    5238:	add	ip, r3, ip, lsl #2
    523c:	add	r1, r1, #412	; 0x19c
    5240:	cmp	r0, #64	; 0x40
    5244:	str	r1, [ip, #168]	; 0xa8
    5248:	str	r0, [r3, #164]	; 0xa4
    524c:	beq	526c <main@@Base+0x640>
    5250:	ldr	r1, [pc, #2680]	; 5cd0 <main@@Base+0x10a4>
    5254:	add	r2, r2, #7
    5258:	add	r1, pc, r1
    525c:	add	r0, r3, r0, lsl #2
    5260:	add	r1, r1, #3024	; 0xbd0
    5264:	str	r2, [r3, #164]	; 0xa4
    5268:	str	r1, [r0, #168]	; 0xa8
    526c:	ldr	r4, [pc, #2656]	; 5cd4 <main@@Base+0x10a8>
    5270:	add	r4, pc, r4
    5274:	ldr	r0, [r4, #428]	; 0x1ac
    5278:	cmp	r0, #0
    527c:	beq	5854 <main@@Base+0xc28>
    5280:	ldr	r1, [pc, #2640]	; 5cd8 <main@@Base+0x10ac>
    5284:	add	r2, sp, #60	; 0x3c
    5288:	add	r1, pc, r1
    528c:	bl	4020 <av_strtok@plt>
    5290:	subs	r5, r0, #0
    5294:	beq	64a8 <main@@Base+0x187c>
    5298:	ldr	r8, [pc, #2620]	; 5cdc <main@@Base+0x10b0>
    529c:	ldr	r4, [sp, #60]	; 0x3c
    52a0:	add	r8, pc, r8
    52a4:	ldr	r1, [r8, #432]	; 0x1b0
    52a8:	cmp	r1, #0
    52ac:	beq	52c0 <main@@Base+0x694>
    52b0:	add	r0, r8, #48	; 0x30
    52b4:	bl	43ec <av_hash_alloc@plt>
    52b8:	subs	r6, r0, #0
    52bc:	blt	58d4 <main@@Base+0xca8>
    52c0:	ldr	r6, [pc, #2584]	; 5ce0 <main@@Base+0x10b4>
    52c4:	add	r6, pc, r6
    52c8:	ldr	r7, [r6, #168]	; 0xa8
    52cc:	cmp	r7, #0
    52d0:	beq	58b4 <main@@Base+0xc88>
    52d4:	add	r6, r6, #168	; 0xa8
    52d8:	b	52e8 <main@@Base+0x6bc>
    52dc:	ldr	r7, [r6, #4]!
    52e0:	cmp	r7, #0
    52e4:	beq	58b4 <main@@Base+0xc88>
    52e8:	mov	r1, r5
    52ec:	ldr	r0, [r7, #8]
    52f0:	bl	46c8 <strcmp@plt>
    52f4:	cmp	r0, #0
    52f8:	bne	52dc <main@@Base+0x6b0>
    52fc:	add	r3, sp, #56	; 0x38
    5300:	mov	sl, r0
    5304:	mov	r2, r4
    5308:	mov	r0, r3
    530c:	mov	r1, r7
    5310:	str	r3, [sp, #32]
    5314:	bl	11e90 <main@@Base+0xd264>
    5318:	subs	r6, r0, #0
    531c:	blt	4c78 <main@@Base+0x4c>
    5320:	ldr	r3, [pc, #2492]	; 5ce4 <main@@Base+0x10b8>
    5324:	ldr	r0, [sp, #56]	; 0x38
    5328:	add	r3, pc, r3
    532c:	add	r3, r3, #3024	; 0xbd0
    5330:	cmp	r7, r3
    5334:	addeq	r2, r0, #8192	; 0x2000
    5338:	ldreq	r3, [r2, #2176]	; 0x880
    533c:	mov	r1, #34	; 0x22
    5340:	orreq	r3, r3, #8
    5344:	streq	r3, [r2, #2176]	; 0x880
    5348:	bl	1198c <main@@Base+0xcd60>
    534c:	ldr	r3, [pc, #2452]	; 5ce8 <main@@Base+0x10bc>
    5350:	add	r3, pc, r3
    5354:	ldr	r3, [r3, #136]	; 0x88
    5358:	cmp	r3, #0
    535c:	bne	63cc <main@@Base+0x17a0>
    5360:	ldr	r3, [pc, #2436]	; 5cec <main@@Base+0x10c0>
    5364:	add	r3, pc, r3
    5368:	ldr	r3, [r3, #120]	; 0x78
    536c:	cmp	r3, #0
    5370:	bne	5ed8 <main@@Base+0x12ac>
    5374:	ldr	r3, [pc, #2420]	; 5cf0 <main@@Base+0x10c4>
    5378:	add	r3, pc, r3
    537c:	ldr	r3, [r3, #124]	; 0x7c
    5380:	cmp	r3, #0
    5384:	bne	5938 <main@@Base+0xd0c>
    5388:	ldr	r5, [pc, #2404]	; 5cf4 <main@@Base+0x10c8>
    538c:	add	r5, pc, r5
    5390:	ldr	r7, [r5, #32]
    5394:	ldr	r3, [r5, #20]
    5398:	cmp	r7, #0
    539c:	beq	63d8 <main@@Base+0x17ac>
    53a0:	ldr	r2, [r5, #436]	; 0x1b4
    53a4:	ldr	r0, [r5, #16]
    53a8:	ldr	r1, [r5, #440]	; 0x1b8
    53ac:	orrs	r2, r0, r2
    53b0:	movne	r2, #1
    53b4:	moveq	r2, #0
    53b8:	orrs	r3, r3, r1
    53bc:	mov	r6, #0
    53c0:	movne	r3, #1
    53c4:	moveq	r3, #0
    53c8:	add	r1, sp, #92	; 0x5c
    53cc:	str	r1, [sp, #20]
    53d0:	str	r2, [r5, #88]	; 0x58
    53d4:	str	r3, [r5, #76]	; 0x4c
    53d8:	str	r6, [sp, #92]	; 0x5c
    53dc:	str	r6, [sp, #80]	; 0x50
    53e0:	str	r6, [sp, #96]	; 0x60
    53e4:	str	r6, [sp, #100]	; 0x64
    53e8:	ldr	r4, [sp, #56]	; 0x38
    53ec:	bl	4344 <avformat_alloc_context@plt>
    53f0:	cmp	r0, r6
    53f4:	str	r0, [sp, #80]	; 0x50
    53f8:	beq	69dc <main@@Base+0x1db0>
    53fc:	ldr	r3, [pc, #2292]	; 5cf8 <main@@Base+0x10cc>
    5400:	ldr	fp, [pc, #2292]	; 5cfc <main@@Base+0x10d0>
    5404:	ldr	r8, [r9, r3]
    5408:	add	fp, pc, fp
    540c:	mov	r3, #1
    5410:	mov	r2, r6
    5414:	ldr	r0, [r8]
    5418:	mov	r1, fp
    541c:	bl	4644 <av_dict_get@plt>
    5420:	subs	r3, r0, #0
    5424:	str	r3, [sp, #24]
    5428:	beq	67e0 <main@@Base+0x1bb4>
    542c:	add	r3, sp, #80	; 0x50
    5430:	str	r3, [sp, #16]
    5434:	mov	r0, r3
    5438:	ldr	r2, [r5, #36]	; 0x24
    543c:	mov	r3, r8
    5440:	mov	r1, r7
    5444:	bl	44dc <avformat_open_input@plt>
    5448:	subs	r6, r0, #0
    544c:	ldrge	r3, [sp, #80]	; 0x50
    5450:	strge	r3, [sp, #92]	; 0x5c
    5454:	blt	67d0 <main@@Base+0x1ba4>
    5458:	ldr	r1, [pc, #2208]	; 5d00 <main@@Base+0x10d4>
    545c:	ldr	r0, [r8]
    5460:	mov	r3, #2
    5464:	mov	r2, #0
    5468:	add	r1, pc, r1
    546c:	bl	4644 <av_dict_get@plt>
    5470:	subs	r8, r0, #0
    5474:	bne	69bc <main@@Base+0x1d90>
    5478:	ldr	r3, [pc, #2180]	; 5d04 <main@@Base+0x10d8>
    547c:	add	r3, pc, r3
    5480:	ldr	r3, [r3, #8]
    5484:	cmp	r3, #0
    5488:	beq	54ec <main@@Base+0x8c0>
    548c:	ldr	r3, [pc, #2164]	; 5d08 <main@@Base+0x10dc>
    5490:	ldr	r0, [sp, #80]	; 0x50
    5494:	ldr	r3, [r9, r3]
    5498:	ldr	r1, [r3]
    549c:	bl	d968 <main@@Base+0x8d3c>
    54a0:	mov	r2, r0
    54a4:	ldr	r3, [sp, #80]	; 0x50
    54a8:	mov	r1, r0
    54ac:	mov	r0, r3
    54b0:	str	r2, [sp, #104]	; 0x68
    54b4:	ldr	r5, [r3, #24]
    54b8:	bl	4578 <avformat_find_stream_info@plt>
    54bc:	mov	r6, r0
    54c0:	b	54d4 <main@@Base+0x8a8>
    54c4:	ldr	r0, [sp, #104]	; 0x68
    54c8:	add	r0, r0, r8, lsl #2
    54cc:	bl	3ee8 <av_dict_free@plt>
    54d0:	add	r8, r8, #1
    54d4:	cmp	r5, r8
    54d8:	bgt	54c4 <main@@Base+0x898>
    54dc:	add	r0, sp, #104	; 0x68
    54e0:	bl	3ec4 <av_freep@plt>
    54e4:	cmp	r6, #0
    54e8:	blt	67d0 <main@@Base+0x1ba4>
    54ec:	mov	r3, #0
    54f0:	mov	r2, r7
    54f4:	mov	r1, r3
    54f8:	ldr	r0, [sp, #80]	; 0x50
    54fc:	bl	4440 <av_dump_format@plt>
    5500:	ldr	r3, [sp, #80]	; 0x50
    5504:	mov	r1, #8
    5508:	ldr	r0, [r3, #24]
    550c:	bl	405c <av_mallocz_array@plt>
    5510:	cmp	r0, #0
    5514:	str	r0, [sp, #96]	; 0x60
    5518:	beq	69b4 <main@@Base+0x1d88>
    551c:	ldr	r3, [sp, #80]	; 0x50
    5520:	ldr	r2, [r3, #24]
    5524:	cmp	r2, #0
    5528:	str	r2, [sp, #100]	; 0x64
    552c:	beq	653c <main@@Base+0x1910>
    5530:	ldr	r2, [pc, #2004]	; 5d0c <main@@Base+0x10e0>
    5534:	ldr	r1, [pc, #2004]	; 5d10 <main@@Base+0x10e4>
    5538:	ldr	fp, [pc, #2004]	; 5d14 <main@@Base+0x10e8>
    553c:	add	r2, pc, r2
    5540:	add	r1, pc, r1
    5544:	str	sl, [sp, #36]	; 0x24
    5548:	mov	r6, #0
    554c:	add	fp, pc, fp
    5550:	str	r1, [sp, #24]
    5554:	str	r4, [sp, #48]	; 0x30
    5558:	mov	sl, r2
    555c:	b	55e0 <main@@Base+0x9b4>
    5560:	ldr	r0, [r5, #8]
    5564:	ldr	r3, [r7, #4]
    5568:	ldr	lr, [r0, #100]	; 0x64
    556c:	ldr	ip, [r0, #104]	; 0x68
    5570:	add	r2, r3, #772	; 0x304
    5574:	add	r1, r5, #16
    5578:	ldm	r1, {r0, r1}
    557c:	stm	r2, {r0, r1}
    5580:	add	r2, r3, #760	; 0x2f8
    5584:	add	r1, r5, #68	; 0x44
    5588:	ldm	r1, {r0, r1}
    558c:	stm	r2, {r0, r1}
    5590:	add	r2, sp, #104	; 0x68
    5594:	mov	r1, r4
    5598:	str	lr, [r3, #100]	; 0x64
    559c:	str	ip, [r3, #104]	; 0x68
    55a0:	mov	r0, r3
    55a4:	bl	4500 <avcodec_open2@plt>
    55a8:	cmp	r0, #0
    55ac:	blt	699c <main@@Base+0x1d70>
    55b0:	mov	r3, #2
    55b4:	mov	r2, #0
    55b8:	mov	r1, sl
    55bc:	ldr	r0, [sp, #104]	; 0x68
    55c0:	bl	4644 <av_dict_get@plt>
    55c4:	cmp	r0, #0
    55c8:	bne	67a4 <main@@Base+0x1b78>
    55cc:	ldr	r3, [sp, #80]	; 0x50
    55d0:	add	r6, r6, #1
    55d4:	ldr	r2, [r3, #24]
    55d8:	cmp	r2, r6
    55dc:	bls	6534 <main@@Base+0x1908>
    55e0:	ldr	r2, [r3, #28]
    55e4:	ldr	r3, [sp, #96]	; 0x60
    55e8:	ldr	r5, [r2, r6, lsl #2]
    55ec:	add	r7, r3, r6, lsl #3
    55f0:	ldr	r2, [r5, #176]	; 0xb0
    55f4:	str	r5, [r3, r6, lsl #3]
    55f8:	ldr	r0, [r2, #4]
    55fc:	cmp	r0, #102400	; 0x19000
    5600:	beq	5874 <main@@Base+0xc48>
    5604:	bl	4314 <avcodec_find_decoder@plt>
    5608:	subs	r4, r0, #0
    560c:	beq	5890 <main@@Base+0xc64>
    5610:	ldr	r3, [pc, #1776]	; 5d08 <main@@Base+0x10dc>
    5614:	ldr	r2, [r5, #176]	; 0xb0
    5618:	ldr	r8, [r9, r3]
    561c:	str	r4, [sp]
    5620:	ldr	r1, [r2, #4]
    5624:	mov	r3, r5
    5628:	ldr	r2, [sp, #80]	; 0x50
    562c:	ldr	r0, [r8]
    5630:	bl	d6f4 <main@@Base+0x8ac8>
    5634:	str	r0, [sp, #104]	; 0x68
    5638:	mov	r0, r4
    563c:	bl	4704 <avcodec_alloc_context3@plt>
    5640:	cmp	r0, #0
    5644:	str	r0, [r7, #4]
    5648:	beq	69b4 <main@@Base+0x1d88>
    564c:	ldr	r1, [r5, #176]	; 0xb0
    5650:	bl	480c <avcodec_parameters_to_context@plt>
    5654:	cmp	r0, #0
    5658:	blt	69b4 <main@@Base+0x1d88>
    565c:	ldr	r3, [fp, #56]	; 0x38
    5660:	cmp	r3, #0
    5664:	beq	5560 <main@@Base+0x934>
    5668:	ldr	r1, [pc, #1704]	; 5d18 <main@@Base+0x10ec>
    566c:	mov	r0, r8
    5670:	mov	r3, #0
    5674:	ldr	r2, [sp, #24]
    5678:	add	r1, pc, r1
    567c:	bl	453c <av_dict_set@plt>
    5680:	b	5560 <main@@Base+0x934>
    5684:	mov	r0, #16
    5688:	bl	112b0 <main@@Base+0xc684>
    568c:	cmp	r0, #0
    5690:	beq	5154 <main@@Base+0x528>
    5694:	b	5144 <main@@Base+0x518>
    5698:	mov	r0, #27
    569c:	bl	112b0 <main@@Base+0xc684>
    56a0:	cmp	r0, #0
    56a4:	beq	5124 <main@@Base+0x4f8>
    56a8:	b	5114 <main@@Base+0x4e8>
    56ac:	mov	r0, #38	; 0x26
    56b0:	bl	112b0 <main@@Base+0xc684>
    56b4:	cmp	r0, #0
    56b8:	beq	50f4 <main@@Base+0x4c8>
    56bc:	b	50e4 <main@@Base+0x4b8>
    56c0:	mov	r0, #31
    56c4:	bl	112b0 <main@@Base+0xc684>
    56c8:	cmp	r0, #0
    56cc:	beq	50c4 <main@@Base+0x498>
    56d0:	b	50b4 <main@@Base+0x488>
    56d4:	mov	r0, #8
    56d8:	bl	112b0 <main@@Base+0xc684>
    56dc:	cmp	r0, #0
    56e0:	beq	5094 <main@@Base+0x468>
    56e4:	b	5084 <main@@Base+0x458>
    56e8:	mov	r0, #5
    56ec:	bl	112b0 <main@@Base+0xc684>
    56f0:	cmp	r0, #0
    56f4:	beq	5064 <main@@Base+0x438>
    56f8:	b	5054 <main@@Base+0x428>
    56fc:	mov	r0, #1
    5700:	bl	112b0 <main@@Base+0xc684>
    5704:	cmp	r0, #0
    5708:	beq	5034 <main@@Base+0x408>
    570c:	b	5024 <main@@Base+0x3f8>
    5710:	mov	r0, #26
    5714:	bl	112b0 <main@@Base+0xc684>
    5718:	cmp	r0, #0
    571c:	beq	5004 <main@@Base+0x3d8>
    5720:	b	4ff4 <main@@Base+0x3c8>
    5724:	mov	r0, #36	; 0x24
    5728:	bl	112b0 <main@@Base+0xc684>
    572c:	cmp	r0, #0
    5730:	beq	4fd4 <main@@Base+0x3a8>
    5734:	b	4fc4 <main@@Base+0x398>
    5738:	mov	r0, #37	; 0x25
    573c:	bl	112b0 <main@@Base+0xc684>
    5740:	cmp	r0, #0
    5744:	beq	4fa4 <main@@Base+0x378>
    5748:	b	4f94 <main@@Base+0x368>
    574c:	mov	r0, #33	; 0x21
    5750:	bl	112b0 <main@@Base+0xc684>
    5754:	cmp	r0, #0
    5758:	beq	4f74 <main@@Base+0x348>
    575c:	b	4f64 <main@@Base+0x338>
    5760:	mov	r0, #32
    5764:	bl	112b0 <main@@Base+0xc684>
    5768:	cmp	r0, #0
    576c:	beq	4f44 <main@@Base+0x318>
    5770:	b	4f34 <main@@Base+0x308>
    5774:	mov	r0, #24
    5778:	bl	112b0 <main@@Base+0xc684>
    577c:	cmp	r0, #0
    5780:	beq	4f14 <main@@Base+0x2e8>
    5784:	b	4f04 <main@@Base+0x2d8>
    5788:	mov	r0, #22
    578c:	bl	112b0 <main@@Base+0xc684>
    5790:	cmp	r0, #0
    5794:	beq	4ee4 <main@@Base+0x2b8>
    5798:	b	4ed4 <main@@Base+0x2a8>
    579c:	mov	r0, #25
    57a0:	bl	112b0 <main@@Base+0xc684>
    57a4:	cmp	r0, #0
    57a8:	beq	4eb4 <main@@Base+0x288>
    57ac:	b	4ea4 <main@@Base+0x278>
    57b0:	mov	r0, #17
    57b4:	bl	112b0 <main@@Base+0xc684>
    57b8:	cmp	r0, #0
    57bc:	beq	4e84 <main@@Base+0x258>
    57c0:	b	4e74 <main@@Base+0x248>
    57c4:	mov	r0, #14
    57c8:	bl	112b0 <main@@Base+0xc684>
    57cc:	cmp	r0, #0
    57d0:	beq	4e54 <main@@Base+0x228>
    57d4:	b	4e44 <main@@Base+0x218>
    57d8:	mov	r0, #7
    57dc:	bl	112b0 <main@@Base+0xc684>
    57e0:	cmp	r0, #0
    57e4:	beq	4e24 <main@@Base+0x1f8>
    57e8:	b	4e14 <main@@Base+0x1e8>
    57ec:	mov	r0, #4
    57f0:	bl	112b0 <main@@Base+0xc684>
    57f4:	cmp	r0, #0
    57f8:	beq	4df4 <main@@Base+0x1c8>
    57fc:	b	4de4 <main@@Base+0x1b8>
    5800:	mov	r0, #3
    5804:	bl	112b0 <main@@Base+0xc684>
    5808:	cmp	r0, #0
    580c:	beq	4dc4 <main@@Base+0x198>
    5810:	b	4db4 <main@@Base+0x188>
    5814:	mov	r0, #2
    5818:	bl	112b0 <main@@Base+0xc684>
    581c:	cmp	r0, #0
    5820:	beq	4d94 <main@@Base+0x168>
    5824:	b	4d84 <main@@Base+0x158>
    5828:	ldr	r0, [pc, #1260]	; 5d1c <main@@Base+0x10f0>
    582c:	add	r0, pc, r0
    5830:	bl	3f60 <av_log_set_callback@plt>
    5834:	b	4d64 <main@@Base+0x138>
    5838:	ldr	r2, [pc, #1248]	; 5d20 <main@@Base+0x10f4>
    583c:	mov	r1, #16
    5840:	add	r2, pc, r2
    5844:	mov	r0, #0
    5848:	bl	40f8 <av_log@plt>
    584c:	mvn	r6, #21
    5850:	b	4c78 <main@@Base+0x4c>
    5854:	ldr	r0, [pc, #1224]	; 5d24 <main@@Base+0x10f8>
    5858:	add	r0, pc, r0
    585c:	bl	4080 <av_strdup@plt>
    5860:	cmp	r0, #0
    5864:	str	r0, [r4, #428]	; 0x1ac
    5868:	mvneq	r6, #11
    586c:	beq	4c78 <main@@Base+0x4c>
    5870:	b	5280 <main@@Base+0x654>
    5874:	ldr	r2, [pc, #1196]	; 5d28 <main@@Base+0x10fc>
    5878:	ldr	r3, [r5]
    587c:	add	r2, pc, r2
    5880:	mov	r1, #24
    5884:	mov	r0, #0
    5888:	bl	40f8 <av_log@plt>
    588c:	b	55cc <main@@Base+0x9a0>
    5890:	ldr	r2, [r5]
    5894:	ldr	r3, [r5, #176]	; 0xb0
    5898:	str	r2, [sp]
    589c:	ldr	r2, [pc, #1160]	; 5d2c <main@@Base+0x1100>
    58a0:	ldr	r3, [r3, #4]
    58a4:	add	r2, pc, r2
    58a8:	mov	r1, #24
    58ac:	bl	40f8 <av_log@plt>
    58b0:	b	55cc <main@@Base+0x9a0>
    58b4:	ldr	r2, [pc, #1140]	; 5d30 <main@@Base+0x1104>
    58b8:	mov	r3, r5
    58bc:	add	r2, pc, r2
    58c0:	mov	r1, #16
    58c4:	mov	r0, #0
    58c8:	bl	40f8 <av_log@plt>
    58cc:	mvn	r6, #21
    58d0:	b	4c78 <main@@Base+0x4c>
    58d4:	cmn	r6, #22
    58d8:	bne	4c78 <main@@Base+0x4c>
    58dc:	ldr	r2, [pc, #1104]	; 5d34 <main@@Base+0x1108>
    58e0:	ldr	r4, [pc, #1104]	; 5d38 <main@@Base+0x110c>
    58e4:	ldr	r3, [r8, #432]	; 0x1b0
    58e8:	add	r2, pc, r2
    58ec:	mov	r1, #16
    58f0:	mov	r0, #0
    58f4:	bl	40f8 <av_log@plt>
    58f8:	add	r4, pc, r4
    58fc:	b	5914 <main@@Base+0xce8>
    5900:	mov	r2, r4
    5904:	mov	r1, #16
    5908:	mov	r0, #0
    590c:	bl	40f8 <av_log@plt>
    5910:	add	r7, r7, #1
    5914:	mov	r0, r7
    5918:	bl	4398 <av_hash_names@plt>
    591c:	subs	r3, r0, #0
    5920:	bne	5900 <main@@Base+0xcd4>
    5924:	ldr	r2, [pc, #1040]	; 5d3c <main@@Base+0x1110>
    5928:	mov	r1, #16
    592c:	add	r2, pc, r2
    5930:	bl	40f8 <av_log@plt>
    5934:	b	4c78 <main@@Base+0x4c>
    5938:	ldr	r4, [sp, #56]	; 0x38
    593c:	mov	r1, #25
    5940:	mov	r0, r4
    5944:	bl	1198c <main@@Base+0xcd60>
    5948:	ldr	r3, [pc, #1008]	; 5d40 <main@@Base+0x1114>
    594c:	ldr	fp, [pc, #1008]	; 5d44 <main@@Base+0x1118>
    5950:	add	r3, pc, r3
    5954:	str	r3, [sp, #16]
    5958:	ldr	r3, [pc, #1000]	; 5d48 <main@@Base+0x111c>
    595c:	ldr	r8, [pc, #1000]	; 5d4c <main@@Base+0x1120>
    5960:	add	fp, pc, fp
    5964:	add	r3, pc, r3
    5968:	str	sl, [sp, #24]
    596c:	mov	r7, fp
    5970:	ldrd	sl, [sp, #40]	; 0x28
    5974:	mov	r5, #0
    5978:	add	r8, pc, r8
    597c:	str	r3, [sp, #20]
    5980:	str	r6, [sp, #36]	; 0x24
    5984:	str	r9, [sp, #48]	; 0x30
    5988:	b	59dc <main@@Base+0xdb0>
    598c:	ldr	r1, [pc, #956]	; 5d50 <main@@Base+0x1124>
    5990:	asr	r3, r2, #31
    5994:	add	r1, pc, r1
    5998:	mov	r0, r4
    599c:	bl	11004 <main@@Base+0xc3d8>
    59a0:	ldr	r3, [pc, #940]	; 5d54 <main@@Base+0x1128>
    59a4:	add	r3, pc, r3
    59a8:	ldr	r3, [r3, #128]	; 0x80
    59ac:	cmp	r3, #0
    59b0:	bne	5a98 <main@@Base+0xe6c>
    59b4:	ldr	r3, [pc, #924]	; 5d58 <main@@Base+0x112c>
    59b8:	add	r3, pc, r3
    59bc:	ldr	r3, [r3, #132]	; 0x84
    59c0:	cmp	r3, #0
    59c4:	beq	59d4 <main@@Base+0xda8>
    59c8:	ldrb	r3, [r5, #4]
    59cc:	cmp	r3, #0
    59d0:	bne	64c0 <main@@Base+0x1894>
    59d4:	mov	r0, r4
    59d8:	bl	ef94 <main@@Base+0xa368>
    59dc:	mov	r0, r5
    59e0:	bl	47a0 <av_pix_fmt_desc_next@plt>
    59e4:	subs	r5, r0, #0
    59e8:	beq	5be0 <main@@Base+0xfb4>
    59ec:	mov	r1, #21
    59f0:	mov	r0, r4
    59f4:	bl	1198c <main@@Base+0xcd60>
    59f8:	ldr	r2, [r5]
    59fc:	mov	r1, r7
    5a00:	mov	r0, r4
    5a04:	bl	12fe4 <main@@Base+0xe3b8>
    5a08:	mov	r3, #0
    5a0c:	ldrb	r2, [r5, #4]
    5a10:	mov	r1, r8
    5a14:	mov	r0, r4
    5a18:	bl	11004 <main@@Base+0xc3d8>
    5a1c:	ldrb	r3, [r5, #4]
    5a20:	cmp	r3, #2
    5a24:	bls	5a3c <main@@Base+0xe10>
    5a28:	mov	fp, #0
    5a2c:	ldr	r3, [r5, #8]
    5a30:	and	sl, r3, #32
    5a34:	orrs	r3, sl, fp
    5a38:	beq	5bac <main@@Base+0xf80>
    5a3c:	ldr	r6, [pc, #792]	; 5d5c <main@@Base+0x1130>
    5a40:	ldr	r1, [pc, #792]	; 5d60 <main@@Base+0x1134>
    5a44:	add	r6, pc, r6
    5a48:	add	r1, pc, r1
    5a4c:	mov	r2, r6
    5a50:	mov	r0, r4
    5a54:	bl	131bc <main@@Base+0xe590>
    5a58:	ldr	r1, [pc, #772]	; 5d64 <main@@Base+0x1138>
    5a5c:	mov	r2, r6
    5a60:	add	r1, pc, r1
    5a64:	mov	r0, r4
    5a68:	bl	131bc <main@@Base+0xe590>
    5a6c:	mov	r0, r5
    5a70:	bl	3e58 <av_get_bits_per_pixel@plt>
    5a74:	subs	r2, r0, #0
    5a78:	bne	598c <main@@Base+0xd60>
    5a7c:	ldr	r2, [pc, #740]	; 5d68 <main@@Base+0x113c>
    5a80:	ldr	r1, [pc, #740]	; 5d6c <main@@Base+0x1140>
    5a84:	add	r2, pc, r2
    5a88:	add	r1, pc, r1
    5a8c:	mov	r0, r4
    5a90:	bl	131bc <main@@Base+0xe590>
    5a94:	b	59a0 <main@@Base+0xd74>
    5a98:	mov	r0, r4
    5a9c:	mov	r1, #22
    5aa0:	bl	1198c <main@@Base+0xcd60>
    5aa4:	ldr	r2, [r5, #8]
    5aa8:	ldr	r1, [pc, #704]	; 5d70 <main@@Base+0x1144>
    5aac:	mov	r0, r4
    5ab0:	mov	r3, #0
    5ab4:	and	r2, r2, #1
    5ab8:	add	r1, pc, r1
    5abc:	bl	11004 <main@@Base+0xc3d8>
    5ac0:	ldr	r2, [r5, #8]
    5ac4:	ldr	r1, [pc, #680]	; 5d74 <main@@Base+0x1148>
    5ac8:	lsr	r2, r2, #1
    5acc:	mov	r0, r4
    5ad0:	mov	r3, #0
    5ad4:	and	r2, r2, #1
    5ad8:	add	r1, pc, r1
    5adc:	bl	11004 <main@@Base+0xc3d8>
    5ae0:	ldr	r2, [r5, #8]
    5ae4:	ldr	r1, [pc, #652]	; 5d78 <main@@Base+0x114c>
    5ae8:	lsr	r2, r2, #2
    5aec:	mov	r0, r4
    5af0:	mov	r3, #0
    5af4:	and	r2, r2, #1
    5af8:	add	r1, pc, r1
    5afc:	bl	11004 <main@@Base+0xc3d8>
    5b00:	ldr	r2, [r5, #8]
    5b04:	ldr	r1, [pc, #624]	; 5d7c <main@@Base+0x1150>
    5b08:	lsr	r2, r2, #3
    5b0c:	mov	r0, r4
    5b10:	mov	r3, #0
    5b14:	and	r2, r2, #1
    5b18:	add	r1, pc, r1
    5b1c:	bl	11004 <main@@Base+0xc3d8>
    5b20:	ldr	r2, [r5, #8]
    5b24:	ldr	r1, [pc, #596]	; 5d80 <main@@Base+0x1154>
    5b28:	lsr	r2, r2, #4
    5b2c:	mov	r0, r4
    5b30:	mov	r3, #0
    5b34:	and	r2, r2, #1
    5b38:	add	r1, pc, r1
    5b3c:	bl	11004 <main@@Base+0xc3d8>
    5b40:	ldr	r2, [r5, #8]
    5b44:	ldr	r1, [pc, #568]	; 5d84 <main@@Base+0x1158>
    5b48:	lsr	r2, r2, #5
    5b4c:	mov	r0, r4
    5b50:	mov	r3, #0
    5b54:	and	r2, r2, #1
    5b58:	add	r1, pc, r1
    5b5c:	bl	11004 <main@@Base+0xc3d8>
    5b60:	ldr	r2, [r5, #8]
    5b64:	ldr	r1, [pc, #540]	; 5d88 <main@@Base+0x115c>
    5b68:	lsr	r2, r2, #6
    5b6c:	mov	r0, r4
    5b70:	mov	r3, #0
    5b74:	and	r2, r2, #1
    5b78:	add	r1, pc, r1
    5b7c:	bl	11004 <main@@Base+0xc3d8>
    5b80:	ldr	r2, [r5, #8]
    5b84:	ldr	r1, [pc, #512]	; 5d8c <main@@Base+0x1160>
    5b88:	lsr	r2, r2, #7
    5b8c:	mov	r0, r4
    5b90:	mov	r3, #0
    5b94:	and	r2, r2, #1
    5b98:	add	r1, pc, r1
    5b9c:	bl	11004 <main@@Base+0xc3d8>
    5ba0:	mov	r0, r4
    5ba4:	bl	ef94 <main@@Base+0xa368>
    5ba8:	b	59b4 <main@@Base+0xd88>
    5bac:	ldr	r1, [pc, #476]	; 5d90 <main@@Base+0x1164>
    5bb0:	ldrb	r2, [r5, #5]
    5bb4:	mov	r0, r4
    5bb8:	mov	r3, #0
    5bbc:	add	r1, pc, r1
    5bc0:	bl	11004 <main@@Base+0xc3d8>
    5bc4:	ldr	r1, [pc, #456]	; 5d94 <main@@Base+0x1168>
    5bc8:	ldrb	r2, [r5, #6]
    5bcc:	mov	r3, #0
    5bd0:	add	r1, pc, r1
    5bd4:	mov	r0, r4
    5bd8:	bl	11004 <main@@Base+0xc3d8>
    5bdc:	b	5a6c <main@@Base+0xe40>
    5be0:	mov	r0, r4
    5be4:	ldr	sl, [sp, #24]
    5be8:	ldr	r6, [sp, #36]	; 0x24
    5bec:	ldr	r9, [sp, #48]	; 0x30
    5bf0:	bl	ef94 <main@@Base+0xa368>
    5bf4:	b	5388 <main@@Base+0x75c>
    5bf8:	andeq	ip, r2, r4, asr #31
    5bfc:	andeq	r0, r0, r8, ror #7
    5c00:	strdeq	r0, [r0], -r4
    5c04:	andeq	sp, r2, ip, ror #31
    5c08:			; <UNDEFINED> instruction: 0x0002d3bc
    5c0c:	andeq	ip, r0, r8, lsl #3
    5c10:	andeq	sp, r2, r0, ror #30
    5c14:	andeq	ip, r2, ip, ror r8
    5c18:	andeq	ip, r0, r8, ror r0
    5c1c:	strdeq	sp, [r2], -r4
    5c20:	andeq	sp, r2, r0, ror #29
    5c24:	andeq	sp, r2, r4, asr #5
    5c28:			; <UNDEFINED> instruction: 0x0002deb0
    5c2c:	muleq	r2, r4, r2
    5c30:	andeq	sp, r2, r0, lsl #29
    5c34:	andeq	sp, r2, r4, ror #4
    5c38:	andeq	sp, r2, r0, asr lr
    5c3c:	andeq	sp, r2, r4, lsr r2
    5c40:	andeq	sp, r2, r0, lsr #28
    5c44:	andeq	sp, r2, r4, lsl #4
    5c48:	strdeq	sp, [r2], -r0
    5c4c:	ldrdeq	sp, [r2], -r4
    5c50:	andeq	sp, r2, r0, asr #27
    5c54:	andeq	sp, r2, r4, lsr #3
    5c58:	muleq	r2, r0, sp
    5c5c:	andeq	sp, r2, r4, ror r1
    5c60:	andeq	sp, r2, r0, ror #26
    5c64:	andeq	sp, r2, r4, asr #2
    5c68:	andeq	sp, r2, r0, lsr sp
    5c6c:	andeq	sp, r2, r4, lsl r1
    5c70:	andeq	sp, r2, r0, lsl #26
    5c74:	andeq	sp, r2, r4, ror #1
    5c78:	ldrdeq	sp, [r2], -r0
    5c7c:	strheq	sp, [r2], -r4
    5c80:	andeq	sp, r2, r0, lsr #25
    5c84:	andeq	sp, r2, r4, lsl #1
    5c88:	andeq	sp, r2, r0, ror ip
    5c8c:	andeq	sp, r2, r4, asr r0
    5c90:	andeq	sp, r2, r0, asr #24
    5c94:	andeq	sp, r2, r4, lsr #32
    5c98:	andeq	sp, r2, r0, lsl ip
    5c9c:	strdeq	ip, [r2], -r4
    5ca0:	andeq	sp, r2, r0, ror #23
    5ca4:	andeq	ip, r2, r4, asr #31
    5ca8:			; <UNDEFINED> instruction: 0x0002dbb0
    5cac:	muleq	r2, r4, pc	; <UNPREDICTABLE>
    5cb0:	andeq	sp, r2, r0, lsl #23
    5cb4:	andeq	ip, r2, r4, ror #30
    5cb8:	andeq	sp, r2, r0, asr fp
    5cbc:	andeq	ip, r2, r4, lsr pc
    5cc0:	andeq	sp, r2, r0, lsr #22
    5cc4:	andeq	sp, r2, r4, lsl fp
    5cc8:	strdeq	sp, [r2], -r0
    5ccc:	strdeq	fp, [r2], -r0
    5cd0:	andeq	ip, r2, r4, lsl #28
    5cd4:	strdeq	sp, [r2], -ip
    5cd8:	andeq	r8, r1, r8, ror #30
    5cdc:	andeq	sp, r2, ip, asr #19
    5ce0:	andeq	sp, r2, r8, lsr #19
    5ce4:	andeq	ip, r2, r4, lsr sp
    5ce8:	andeq	sp, r2, ip, lsl r9
    5cec:	andeq	sp, r2, r8, lsl #18
    5cf0:	strdeq	sp, [r2], -r4
    5cf4:	andeq	sp, r2, r0, ror #17
    5cf8:	andeq	r0, r0, ip, lsr #7
    5cfc:	andeq	sl, r1, r8, lsr #3
    5d00:	andeq	r9, r1, r0, asr #8
    5d04:	ldrdeq	ip, [r2], -r4
    5d08:	andeq	r0, r0, ip, ror #7
    5d0c:	andeq	r9, r1, ip, ror #6
    5d10:	andeq	r9, r1, r4, lsr #30
    5d14:	andeq	sp, r2, r0, lsr #14
    5d18:	andeq	r9, r1, r0, asr #31
    5d1c:	andeq	fp, r0, r8, asr #5
    5d20:	andeq	r9, r1, r8, asr #21
    5d24:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
    5d28:	andeq	r9, r1, ip, asr sp
    5d2c:	andeq	r9, r1, r0, ror #26
    5d30:	andeq	r9, r1, ip, ror lr
    5d34:	andeq	r9, r1, r4, lsr #21
    5d38:	andeq	r8, r1, r0, ror sl
    5d3c:	andeq	r7, r1, r4, ror #4
    5d40:	andeq	r9, r1, r8, lsl r7
    5d44:			; <UNDEFINED> instruction: 0x00019dbc
    5d48:	andeq	r9, r1, r0, ror #23
    5d4c:	andeq	r9, r1, r4, asr #22
    5d50:	andeq	r9, r1, r8, asr fp
    5d54:	andeq	sp, r2, r8, asr #5
    5d58:			; <UNDEFINED> instruction: 0x0002d2b4
    5d5c:	andeq	r9, r1, r4, lsl #2
    5d60:	andeq	r9, r1, r4, lsl #21
    5d64:	andeq	r9, r1, ip, ror sl
    5d68:	andeq	r9, r1, r4, asr #1
    5d6c:	andeq	r9, r1, r4, ror #20
    5d70:	andeq	r9, r1, r4, asr #20
    5d74:	andeq	r9, r1, r0, lsr sl
    5d78:	andeq	r9, r1, r8, lsl sl
    5d7c:	andeq	r9, r1, r4, lsl #20
    5d80:	andeq	r9, r1, ip, ror #19
    5d84:	ldrdeq	r9, [r1], -r4
    5d88:			; <UNDEFINED> instruction: 0x000199b8
    5d8c:	andeq	r9, r1, r4, lsr #19
    5d90:	andeq	r9, r1, r0, lsl r9
    5d94:	andeq	r9, r1, ip, lsl #18
    5d98:	andeq	r9, r1, r4, lsl r8
    5d9c:			; <UNDEFINED> instruction: 0x000194b8
    5da0:	andeq	r9, r1, r0, lsr #9
    5da4:	andeq	r9, r1, ip, lsr #9
    5da8:	muleq	r1, r4, r4
    5dac:	andeq	sl, r1, r8, lsr #12
    5db0:	andeq	r9, r1, ip, asr r4
    5db4:	andeq	r9, r1, r4, asr #8
    5db8:	andeq	r9, r1, r4, lsr #8
    5dbc:	ldrdeq	r9, [r1], -r0
    5dc0:	andeq	r9, r1, ip, lsr #7
    5dc4:	andeq	r9, r1, r8, asr r3
    5dc8:	andeq	r9, r1, r4, lsr r3
    5dcc:	andeq	r9, r1, r0, ror #5
    5dd0:			; <UNDEFINED> instruction: 0x000192bc
    5dd4:	andeq	r9, r1, r8, ror #4
    5dd8:	andeq	r9, r1, r4, asr #4
    5ddc:	strdeq	r9, [r1], -r0
    5de0:	andeq	r9, r1, r8, asr #3
    5de4:	andeq	r9, r1, r8, ror r1
    5de8:	andeq	r9, r1, r0, asr r1
    5dec:	strdeq	r9, [r1], -ip
    5df0:	andeq	r8, r1, ip, lsl #29
    5df4:	andeq	r0, r0, r8, asr #7
    5df8:	muleq	r1, r8, lr
    5dfc:	andeq	r6, r1, r8, lsr r7
    5e00:	andeq	r9, r1, r4, ror #1
    5e04:	strdeq	r9, [r1], -r8
    5e08:			; <UNDEFINED> instruction: 0x00018eb0
    5e0c:	andeq	ip, r2, r8, lsr #14
    5e10:	andeq	ip, r2, r8, ror r6
    5e14:	muleq	r2, r8, r5
    5e18:	andeq	ip, r2, r0, ror r5
    5e1c:	ldrdeq	r8, [r1], -ip
    5e20:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
    5e24:	andeq	ip, r2, r8, ror #9
    5e28:			; <UNDEFINED> instruction: 0x00018eb8
    5e2c:	andeq	r8, r1, r4, ror ip
    5e30:	andeq	ip, r2, r8, lsr #8
    5e34:	ldrdeq	ip, [r2], -r4
    5e38:	andeq	ip, r2, r4, asr r3
    5e3c:	andeq	ip, r2, r0, asr #6
    5e40:	andeq	ip, r2, ip, lsr #6
    5e44:	andeq	ip, r2, r4, lsl r3
    5e48:	muleq	r1, ip, ip
    5e4c:	strdeq	r8, [r1], -ip
    5e50:	blge	febf1e78 <__bss_end__@@Base+0xfebbefac>
    5e54:	andeq	r8, r1, r8, ror ip
    5e58:			; <UNDEFINED> instruction: 0x00018bbc
    5e5c:	andeq	r8, r1, ip, ror #23
    5e60:	andeq	r8, r1, r0, ror #23
    5e64:	andeq	ip, r2, r8, lsr r1
    5e68:			; <UNDEFINED> instruction: 0x00018bb4
    5e6c:	andeq	r8, r1, r0, lsr #12
    5e70:	andeq	r4, pc, r0, asr #4
    5e74:	andeq	r8, r1, r0, ror #8
    5e78:	muleq	r1, r4, r4
    5e7c:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
    5e80:	andeq	r7, r1, r4, asr r4
    5e84:	muleq	r1, r4, r5
    5e88:	andeq	r8, r1, r8, ror #21
    5e8c:	andeq	ip, r2, r0, lsr #32
    5e90:	andeq	r8, r1, ip, lsr sl
    5e94:	andeq	r7, r1, ip, asr #28
    5e98:			; <UNDEFINED> instruction: 0x000003b8
    5e9c:	andeq	fp, r2, r8, ror pc
    5ea0:	andeq	r7, r1, ip, lsr #28
    5ea4:	muleq	r1, r8, r4
    5ea8:	andeq	r7, r1, r0, lsl lr
    5eac:	andeq	r8, r1, r0, lsl #1
    5eb0:	muleq	r1, r0, r9
    5eb4:	andeq	r8, r1, ip, lsl #18
    5eb8:	ldrdeq	r8, [r1], -r4
    5ebc:	andeq	r8, r1, r4, lsr #18
    5ec0:	andeq	r8, r1, ip, ror r3
    5ec4:			; <UNDEFINED> instruction: 0x000188b0
    5ec8:	andeq	r8, r1, r8, lsl #17
    5ecc:	andeq	fp, r2, r0, lsl lr
    5ed0:	strdeq	r7, [r1], -ip
    5ed4:	andeq	r8, r1, ip, asr #16
    5ed8:	ldr	r4, [sp, #56]	; 0x38
    5edc:	mov	r1, #14
    5ee0:	mov	r0, r4
    5ee4:	bl	1198c <main@@Base+0xcd60>
    5ee8:	bl	3f30 <avutil_version@plt>
    5eec:	ldr	r5, [pc, #-348]	; 5d98 <main@@Base+0x116c>
    5ef0:	str	r0, [sp, #20]
    5ef4:	mov	r1, #13
    5ef8:	mov	r0, r4
    5efc:	bl	1198c <main@@Base+0xcd60>
    5f00:	ldr	fp, [pc, #-364]	; 5d9c <main@@Base+0x1170>
    5f04:	ldr	r2, [pc, #-364]	; 5da0 <main@@Base+0x1174>
    5f08:	add	r5, pc, r5
    5f0c:	ldr	r8, [pc, #-368]	; 5da4 <main@@Base+0x1178>
    5f10:	add	fp, pc, fp
    5f14:	mov	r1, r5
    5f18:	mov	r0, r4
    5f1c:	add	r2, pc, r2
    5f20:	ldr	r7, [pc, #-384]	; 5da8 <main@@Base+0x117c>
    5f24:	add	r8, pc, r8
    5f28:	bl	12fe4 <main@@Base+0xe3b8>
    5f2c:	mov	r0, r4
    5f30:	str	fp, [sp, #16]
    5f34:	mov	r1, fp
    5f38:	mov	r2, #56	; 0x38
    5f3c:	mov	r3, #0
    5f40:	ldr	fp, [pc, #-412]	; 5dac <main@@Base+0x1180>
    5f44:	add	r7, pc, r7
    5f48:	bl	11004 <main@@Base+0xc3d8>
    5f4c:	mov	r0, r4
    5f50:	mov	r1, r8
    5f54:	mov	r2, #22
    5f58:	mov	r3, #0
    5f5c:	add	fp, pc, fp
    5f60:	bl	11004 <main@@Base+0xc3d8>
    5f64:	mov	r0, r4
    5f68:	mov	r1, r7
    5f6c:	mov	r2, #100	; 0x64
    5f70:	mov	r3, #0
    5f74:	bl	11004 <main@@Base+0xc3d8>
    5f78:	ldr	r2, [sp, #20]
    5f7c:	mov	r0, r4
    5f80:	mov	r1, fp
    5f84:	mov	r3, #0
    5f88:	bl	11004 <main@@Base+0xc3d8>
    5f8c:	ldr	r3, [pc, #-484]	; 5db0 <main@@Base+0x1184>
    5f90:	ldr	r2, [pc, #-484]	; 5db4 <main@@Base+0x1188>
    5f94:	add	r3, pc, r3
    5f98:	mov	r1, r3
    5f9c:	add	r2, pc, r2
    5fa0:	mov	r0, r4
    5fa4:	str	r3, [sp, #20]
    5fa8:	bl	12fe4 <main@@Base+0xe3b8>
    5fac:	mov	r0, r4
    5fb0:	bl	ef94 <main@@Base+0xa368>
    5fb4:	bl	4224 <avcodec_version@plt>
    5fb8:	mov	r1, #13
    5fbc:	str	r0, [sp, #24]
    5fc0:	mov	r0, r4
    5fc4:	bl	1198c <main@@Base+0xcd60>
    5fc8:	ldr	r2, [pc, #-536]	; 5db8 <main@@Base+0x118c>
    5fcc:	mov	r1, r5
    5fd0:	mov	r0, r4
    5fd4:	add	r2, pc, r2
    5fd8:	bl	12fe4 <main@@Base+0xe3b8>
    5fdc:	ldr	r1, [sp, #16]
    5fe0:	mov	r0, r4
    5fe4:	mov	r2, #58	; 0x3a
    5fe8:	mov	r3, #0
    5fec:	bl	11004 <main@@Base+0xc3d8>
    5ff0:	mov	r1, r8
    5ff4:	mov	r0, r4
    5ff8:	mov	r2, #35	; 0x23
    5ffc:	mov	r3, #0
    6000:	bl	11004 <main@@Base+0xc3d8>
    6004:	mov	r1, r7
    6008:	mov	r0, r4
    600c:	mov	r2, #100	; 0x64
    6010:	mov	r3, #0
    6014:	bl	11004 <main@@Base+0xc3d8>
    6018:	mov	r3, #0
    601c:	ldr	r2, [sp, #24]
    6020:	mov	r1, fp
    6024:	mov	r0, r4
    6028:	bl	11004 <main@@Base+0xc3d8>
    602c:	ldr	r2, [pc, #-632]	; 5dbc <main@@Base+0x1190>
    6030:	ldr	r1, [sp, #20]
    6034:	add	r2, pc, r2
    6038:	mov	r0, r4
    603c:	bl	12fe4 <main@@Base+0xe3b8>
    6040:	mov	r0, r4
    6044:	bl	ef94 <main@@Base+0xa368>
    6048:	bl	4338 <avformat_version@plt>
    604c:	mov	r1, #13
    6050:	str	r0, [sp, #24]
    6054:	mov	r0, r4
    6058:	bl	1198c <main@@Base+0xcd60>
    605c:	ldr	r2, [pc, #-676]	; 5dc0 <main@@Base+0x1194>
    6060:	mov	r1, r5
    6064:	mov	r0, r4
    6068:	add	r2, pc, r2
    606c:	bl	12fe4 <main@@Base+0xe3b8>
    6070:	ldr	r1, [sp, #16]
    6074:	mov	r0, r4
    6078:	mov	r2, #58	; 0x3a
    607c:	mov	r3, #0
    6080:	bl	11004 <main@@Base+0xc3d8>
    6084:	mov	r1, r8
    6088:	mov	r0, r4
    608c:	mov	r2, #20
    6090:	mov	r3, #0
    6094:	bl	11004 <main@@Base+0xc3d8>
    6098:	mov	r1, r7
    609c:	mov	r0, r4
    60a0:	mov	r2, #100	; 0x64
    60a4:	mov	r3, #0
    60a8:	bl	11004 <main@@Base+0xc3d8>
    60ac:	mov	r3, #0
    60b0:	ldr	r2, [sp, #24]
    60b4:	mov	r1, fp
    60b8:	mov	r0, r4
    60bc:	bl	11004 <main@@Base+0xc3d8>
    60c0:	ldr	r2, [pc, #-772]	; 5dc4 <main@@Base+0x1198>
    60c4:	ldr	r1, [sp, #20]
    60c8:	add	r2, pc, r2
    60cc:	mov	r0, r4
    60d0:	bl	12fe4 <main@@Base+0xe3b8>
    60d4:	mov	r0, r4
    60d8:	bl	ef94 <main@@Base+0xa368>
    60dc:	bl	45fc <avdevice_version@plt>
    60e0:	mov	r1, #13
    60e4:	str	r0, [sp, #24]
    60e8:	mov	r0, r4
    60ec:	bl	1198c <main@@Base+0xcd60>
    60f0:	ldr	r2, [pc, #-816]	; 5dc8 <main@@Base+0x119c>
    60f4:	mov	r1, r5
    60f8:	mov	r0, r4
    60fc:	add	r2, pc, r2
    6100:	bl	12fe4 <main@@Base+0xe3b8>
    6104:	ldr	r1, [sp, #16]
    6108:	mov	r0, r4
    610c:	mov	r2, #58	; 0x3a
    6110:	mov	r3, #0
    6114:	bl	11004 <main@@Base+0xc3d8>
    6118:	mov	r1, r8
    611c:	mov	r0, r4
    6120:	mov	r2, #5
    6124:	mov	r3, #0
    6128:	bl	11004 <main@@Base+0xc3d8>
    612c:	mov	r1, r7
    6130:	mov	r0, r4
    6134:	mov	r2, #100	; 0x64
    6138:	mov	r3, #0
    613c:	bl	11004 <main@@Base+0xc3d8>
    6140:	mov	r3, #0
    6144:	ldr	r2, [sp, #24]
    6148:	mov	r1, fp
    614c:	mov	r0, r4
    6150:	bl	11004 <main@@Base+0xc3d8>
    6154:	ldr	r2, [pc, #-912]	; 5dcc <main@@Base+0x11a0>
    6158:	ldr	r1, [sp, #20]
    615c:	add	r2, pc, r2
    6160:	mov	r0, r4
    6164:	bl	12fe4 <main@@Base+0xe3b8>
    6168:	mov	r0, r4
    616c:	bl	ef94 <main@@Base+0xa368>
    6170:	bl	3dc8 <avfilter_version@plt>
    6174:	mov	r1, #13
    6178:	str	r0, [sp, #24]
    617c:	mov	r0, r4
    6180:	bl	1198c <main@@Base+0xcd60>
    6184:	ldr	r2, [pc, #-956]	; 5dd0 <main@@Base+0x11a4>
    6188:	mov	r1, r5
    618c:	mov	r0, r4
    6190:	add	r2, pc, r2
    6194:	bl	12fe4 <main@@Base+0xe3b8>
    6198:	ldr	r1, [sp, #16]
    619c:	mov	r0, r4
    61a0:	mov	r2, #7
    61a4:	mov	r3, #0
    61a8:	bl	11004 <main@@Base+0xc3d8>
    61ac:	mov	r1, r8
    61b0:	mov	r0, r4
    61b4:	mov	r2, #40	; 0x28
    61b8:	mov	r3, #0
    61bc:	bl	11004 <main@@Base+0xc3d8>
    61c0:	mov	r1, r7
    61c4:	mov	r0, r4
    61c8:	mov	r2, #101	; 0x65
    61cc:	mov	r3, #0
    61d0:	bl	11004 <main@@Base+0xc3d8>
    61d4:	mov	r3, #0
    61d8:	ldr	r2, [sp, #24]
    61dc:	mov	r1, fp
    61e0:	mov	r0, r4
    61e4:	bl	11004 <main@@Base+0xc3d8>
    61e8:	ldr	r2, [pc, #-1052]	; 5dd4 <main@@Base+0x11a8>
    61ec:	ldr	r1, [sp, #20]
    61f0:	add	r2, pc, r2
    61f4:	mov	r0, r4
    61f8:	bl	12fe4 <main@@Base+0xe3b8>
    61fc:	mov	r0, r4
    6200:	bl	ef94 <main@@Base+0xa368>
    6204:	bl	46a4 <swscale_version@plt>
    6208:	mov	r1, #13
    620c:	str	r0, [sp, #24]
    6210:	mov	r0, r4
    6214:	bl	1198c <main@@Base+0xcd60>
    6218:	ldr	r2, [pc, #-1096]	; 5dd8 <main@@Base+0x11ac>
    621c:	mov	r1, r5
    6220:	mov	r0, r4
    6224:	add	r2, pc, r2
    6228:	bl	12fe4 <main@@Base+0xe3b8>
    622c:	ldr	r1, [sp, #16]
    6230:	mov	r0, r4
    6234:	mov	r2, #5
    6238:	mov	r3, #0
    623c:	bl	11004 <main@@Base+0xc3d8>
    6240:	mov	r1, r8
    6244:	mov	r0, r4
    6248:	mov	r2, #3
    624c:	mov	r3, #0
    6250:	bl	11004 <main@@Base+0xc3d8>
    6254:	mov	r1, r7
    6258:	mov	r0, r4
    625c:	mov	r2, #100	; 0x64
    6260:	mov	r3, #0
    6264:	bl	11004 <main@@Base+0xc3d8>
    6268:	mov	r3, #0
    626c:	ldr	r2, [sp, #24]
    6270:	mov	r1, fp
    6274:	mov	r0, r4
    6278:	bl	11004 <main@@Base+0xc3d8>
    627c:	ldr	r2, [pc, #-1192]	; 5ddc <main@@Base+0x11b0>
    6280:	ldr	r1, [sp, #20]
    6284:	add	r2, pc, r2
    6288:	mov	r0, r4
    628c:	bl	12fe4 <main@@Base+0xe3b8>
    6290:	mov	r0, r4
    6294:	bl	ef94 <main@@Base+0xa368>
    6298:	bl	423c <swresample_version@plt>
    629c:	mov	r1, #13
    62a0:	str	r0, [sp, #24]
    62a4:	mov	r0, r4
    62a8:	bl	1198c <main@@Base+0xcd60>
    62ac:	ldr	r2, [pc, #-1236]	; 5de0 <main@@Base+0x11b4>
    62b0:	mov	r1, r5
    62b4:	mov	r0, r4
    62b8:	add	r2, pc, r2
    62bc:	bl	12fe4 <main@@Base+0xe3b8>
    62c0:	ldr	r1, [sp, #16]
    62c4:	mov	r0, r4
    62c8:	mov	r2, #3
    62cc:	mov	r3, #0
    62d0:	bl	11004 <main@@Base+0xc3d8>
    62d4:	mov	r1, r8
    62d8:	mov	r0, r4
    62dc:	mov	r2, #3
    62e0:	mov	r3, #0
    62e4:	bl	11004 <main@@Base+0xc3d8>
    62e8:	mov	r1, r7
    62ec:	mov	r0, r4
    62f0:	mov	r2, #100	; 0x64
    62f4:	mov	r3, #0
    62f8:	bl	11004 <main@@Base+0xc3d8>
    62fc:	mov	r3, #0
    6300:	ldr	r2, [sp, #24]
    6304:	mov	r1, fp
    6308:	mov	r0, r4
    630c:	bl	11004 <main@@Base+0xc3d8>
    6310:	ldr	r2, [pc, #-1332]	; 5de4 <main@@Base+0x11b8>
    6314:	ldr	r1, [sp, #20]
    6318:	add	r2, pc, r2
    631c:	mov	r0, r4
    6320:	bl	12fe4 <main@@Base+0xe3b8>
    6324:	mov	r0, r4
    6328:	bl	ef94 <main@@Base+0xa368>
    632c:	bl	43d4 <postproc_version@plt>
    6330:	mov	r1, #13
    6334:	str	r0, [sp, #24]
    6338:	mov	r0, r4
    633c:	bl	1198c <main@@Base+0xcd60>
    6340:	ldr	r2, [pc, #-1376]	; 5de8 <main@@Base+0x11bc>
    6344:	mov	r1, r5
    6348:	mov	r0, r4
    634c:	add	r2, pc, r2
    6350:	bl	12fe4 <main@@Base+0xe3b8>
    6354:	ldr	r1, [sp, #16]
    6358:	mov	r0, r4
    635c:	mov	r2, #55	; 0x37
    6360:	mov	r3, #0
    6364:	bl	11004 <main@@Base+0xc3d8>
    6368:	mov	r1, r8
    636c:	mov	r0, r4
    6370:	mov	r2, #3
    6374:	mov	r3, #0
    6378:	bl	11004 <main@@Base+0xc3d8>
    637c:	mov	r1, r7
    6380:	mov	r0, r4
    6384:	mov	r2, #100	; 0x64
    6388:	mov	r3, #0
    638c:	bl	11004 <main@@Base+0xc3d8>
    6390:	mov	r3, #0
    6394:	ldr	r2, [sp, #24]
    6398:	mov	r1, fp
    639c:	mov	r0, r4
    63a0:	bl	11004 <main@@Base+0xc3d8>
    63a4:	ldr	r2, [pc, #-1472]	; 5dec <main@@Base+0x11c0>
    63a8:	ldr	r1, [sp, #20]
    63ac:	add	r2, pc, r2
    63b0:	mov	r0, r4
    63b4:	bl	12fe4 <main@@Base+0xe3b8>
    63b8:	mov	r0, r4
    63bc:	bl	ef94 <main@@Base+0xa368>
    63c0:	mov	r0, r4
    63c4:	bl	ef94 <main@@Base+0xa368>
    63c8:	b	5374 <main@@Base+0x748>
    63cc:	ldr	r0, [sp, #56]	; 0x38
    63d0:	bl	13094 <main@@Base+0xe468>
    63d4:	b	5360 <main@@Base+0x734>
    63d8:	ldr	r2, [r5, #116]	; 0x74
    63dc:	ldr	r1, [r5, #140]	; 0x8c
    63e0:	orr	r3, r3, r2
    63e4:	ldr	r2, [r5, #144]	; 0x90
    63e8:	orr	r3, r3, r1
    63ec:	ldr	r1, [r5, #108]	; 0x6c
    63f0:	orr	r3, r3, r2
    63f4:	ldr	r2, [r5, #112]	; 0x70
    63f8:	orr	r3, r3, r1
    63fc:	orrs	r3, r3, r2
    6400:	bne	641c <main@@Base+0x17f0>
    6404:	ldr	r3, [r5, #136]	; 0x88
    6408:	ldr	r1, [r5, #120]	; 0x78
    640c:	ldr	r2, [r5, #124]	; 0x7c
    6410:	orr	r3, r3, r1
    6414:	orrs	r3, r3, r2
    6418:	bne	6494 <main@@Base+0x1868>
    641c:	ldr	r2, [pc, #-1588]	; 5df0 <main@@Base+0x11c4>
    6420:	mov	r1, #32
    6424:	add	r2, pc, r2
    6428:	mov	r0, #0
    642c:	bl	40f8 <av_log@plt>
    6430:	ldr	r3, [pc, #-1604]	; 5df4 <main@@Base+0x11c8>
    6434:	ldr	r2, [pc, #-1604]	; 5df8 <main@@Base+0x11cc>
    6438:	ldr	r4, [r9, r3]
    643c:	add	r2, pc, r2
    6440:	mov	r3, r4
    6444:	mov	r1, #32
    6448:	mov	r0, #0
    644c:	bl	40f8 <av_log@plt>
    6450:	ldr	r2, [pc, #-1628]	; 5dfc <main@@Base+0x11d0>
    6454:	mov	r1, #32
    6458:	add	r2, pc, r2
    645c:	mov	r0, #0
    6460:	bl	40f8 <av_log@plt>
    6464:	ldr	r2, [pc, #-1644]	; 5e00 <main@@Base+0x11d4>
    6468:	mov	r1, #16
    646c:	add	r2, pc, r2
    6470:	mov	r0, #0
    6474:	bl	40f8 <av_log@plt>
    6478:	ldr	r2, [pc, #-1660]	; 5e04 <main@@Base+0x11d8>
    647c:	mov	r3, r4
    6480:	add	r2, pc, r2
    6484:	mov	r1, #16
    6488:	mov	r0, #0
    648c:	bl	40f8 <av_log@plt>
    6490:	mvn	r6, #21
    6494:	ldr	r0, [sp, #56]	; 0x38
    6498:	bl	ef94 <main@@Base+0xa368>
    649c:	ldr	r0, [sp, #32]
    64a0:	bl	110bc <main@@Base+0xc490>
    64a4:	b	4c78 <main@@Base+0x4c>
    64a8:	ldr	r2, [pc, #-1704]	; 5e08 <main@@Base+0x11dc>
    64ac:	mov	r1, #16
    64b0:	add	r2, pc, r2
    64b4:	bl	40f8 <av_log@plt>
    64b8:	mvn	r6, #21
    64bc:	b	4c78 <main@@Base+0x4c>
    64c0:	mov	r6, #1
    64c4:	mov	r9, #0
    64c8:	mov	r1, #24
    64cc:	mov	r0, r4
    64d0:	bl	1198c <main@@Base+0xcd60>
    64d4:	strd	sl, [sp, #40]	; 0x28
    64d8:	ldrb	r2, [r5, #4]
    64dc:	sub	r3, r6, #1
    64e0:	cmp	r2, r3
    64e4:	mov	fp, r6
    64e8:	ble	6770 <main@@Base+0x1b44>
    64ec:	mov	r1, #23
    64f0:	mov	r0, r4
    64f4:	bl	1198c <main@@Base+0xcd60>
    64f8:	mov	r2, r6
    64fc:	mov	r3, r9
    6500:	ldr	r1, [sp, #16]
    6504:	mov	r0, r4
    6508:	bl	11004 <main@@Base+0xc3d8>
    650c:	ldr	r2, [r5, fp, lsl #5]
    6510:	ldr	r1, [sp, #20]
    6514:	asr	r3, r2, #31
    6518:	mov	r0, r4
    651c:	bl	11004 <main@@Base+0xc3d8>
    6520:	mov	r0, r4
    6524:	bl	ef94 <main@@Base+0xa368>
    6528:	adds	r6, r6, #1
    652c:	adc	r9, r9, #0
    6530:	b	64d8 <main@@Base+0x18ac>
    6534:	ldr	r4, [sp, #48]	; 0x30
    6538:	ldr	sl, [sp, #36]	; 0x24
    653c:	ldr	r5, [pc, #-1848]	; 5e0c <main@@Base+0x11e0>
    6540:	ldr	ip, [r3, #24]
    6544:	add	r5, pc, r5
    6548:	mov	r1, ip
    654c:	add	r0, r5, #64	; 0x40
    6550:	mov	r2, #8
    6554:	str	r3, [sp, #92]	; 0x5c
    6558:	str	ip, [r5, #60]	; 0x3c
    655c:	bl	483c <av_reallocp_array@plt>
    6560:	subs	r6, r0, #0
    6564:	blt	666c <main@@Base+0x1a40>
    6568:	ldr	r3, [sp, #92]	; 0x5c
    656c:	mov	r1, #0
    6570:	ldr	r2, [r3, #24]
    6574:	ldr	r0, [r5, #64]	; 0x40
    6578:	lsl	r2, r2, #3
    657c:	bl	41e8 <memset@plt>
    6580:	ldr	r3, [sp, #92]	; 0x5c
    6584:	mov	r2, #8
    6588:	ldr	r1, [r3, #24]
    658c:	add	r0, r5, #68	; 0x44
    6590:	bl	483c <av_reallocp_array@plt>
    6594:	subs	r6, r0, #0
    6598:	blt	666c <main@@Base+0x1a40>
    659c:	ldr	r3, [sp, #92]	; 0x5c
    65a0:	mov	r1, #0
    65a4:	ldr	r2, [r3, #24]
    65a8:	ldr	r0, [r5, #68]	; 0x44
    65ac:	lsl	r2, r2, #3
    65b0:	bl	41e8 <memset@plt>
    65b4:	ldr	r3, [sp, #92]	; 0x5c
    65b8:	mov	r2, #4
    65bc:	ldr	r1, [r3, #24]
    65c0:	add	r0, r5, #72	; 0x48
    65c4:	bl	483c <av_reallocp_array@plt>
    65c8:	subs	r6, r0, #0
    65cc:	blt	666c <main@@Base+0x1a40>
    65d0:	ldr	r3, [sp, #92]	; 0x5c
    65d4:	ldr	r7, [pc, #-1996]	; 5e10 <main@@Base+0x11e4>
    65d8:	ldr	r2, [r3, #24]
    65dc:	ldr	r0, [r5, #72]	; 0x48
    65e0:	mov	r1, #0
    65e4:	lsl	r2, r2, #2
    65e8:	bl	41e8 <memset@plt>
    65ec:	mov	r5, #0
    65f0:	ldr	r0, [sp, #92]	; 0x5c
    65f4:	add	r7, pc, r7
    65f8:	mov	fp, #1
    65fc:	b	6638 <main@@Base+0x1a0c>
    6600:	ldr	r3, [r0, #28]
    6604:	ldr	r1, [r3, r5, lsl #2]
    6608:	bl	426c <avformat_match_stream_specifier@plt>
    660c:	subs	r6, r0, #0
    6610:	blt	666c <main@@Base+0x1a40>
    6614:	ldr	r3, [r7, #72]	; 0x48
    6618:	ldr	r0, [sp, #92]	; 0x5c
    661c:	str	r6, [r3, r8]
    6620:	movne	r6, #0
    6624:	moveq	r2, #48	; 0x30
    6628:	ldreq	r3, [r0, #28]
    662c:	ldreq	r3, [r3, r8]
    6630:	streq	r2, [r3, #52]	; 0x34
    6634:	add	r5, r5, #1
    6638:	ldr	r3, [r0, #24]
    663c:	cmp	r3, r5
    6640:	bls	6840 <main@@Base+0x1c14>
    6644:	ldr	r2, [r7, #444]	; 0x1bc
    6648:	lsl	r8, r5, #2
    664c:	cmp	r2, #0
    6650:	bne	6600 <main@@Base+0x19d4>
    6654:	ldr	r3, [r7, #72]	; 0x48
    6658:	str	fp, [r3, r5, lsl #2]
    665c:	b	6634 <main@@Base+0x1a08>
    6660:	mov	r6, r0
    6664:	mov	r0, r4
    6668:	bl	ef94 <main@@Base+0xa368>
    666c:	ldr	r3, [sp, #92]	; 0x5c
    6670:	cmp	r3, #0
    6674:	beq	6780 <main@@Base+0x1b54>
    6678:	ldr	r2, [sp, #100]	; 0x64
    667c:	b	6684 <main@@Base+0x1a58>
    6680:	add	sl, sl, #1
    6684:	cmp	sl, r2
    6688:	bge	66b8 <main@@Base+0x1a8c>
    668c:	ldr	r3, [sp, #96]	; 0x60
    6690:	ldr	r1, [r3, sl, lsl #3]
    6694:	add	r3, r3, sl, lsl #3
    6698:	ldr	r1, [r1, #176]	; 0xb0
    669c:	ldr	r1, [r1, #4]
    66a0:	cmp	r1, #0
    66a4:	beq	6680 <main@@Base+0x1a54>
    66a8:	add	r0, r3, #4
    66ac:	bl	46d4 <avcodec_free_context@plt>
    66b0:	ldr	r2, [sp, #100]	; 0x64
    66b4:	b	6680 <main@@Base+0x1a54>
    66b8:	add	r0, sp, #96	; 0x60
    66bc:	bl	3ec4 <av_freep@plt>
    66c0:	mov	r3, #0
    66c4:	ldr	r0, [sp, #20]
    66c8:	str	r3, [sp, #100]	; 0x64
    66cc:	bl	4608 <avformat_close_input@plt>
    66d0:	ldr	r4, [pc, #-2244]	; 5e14 <main@@Base+0x11e8>
    66d4:	add	r4, pc, r4
    66d8:	add	r0, r4, #64	; 0x40
    66dc:	bl	3ec4 <av_freep@plt>
    66e0:	add	r0, r4, #68	; 0x44
    66e4:	bl	3ec4 <av_freep@plt>
    66e8:	add	r0, r4, #72	; 0x48
    66ec:	bl	3ec4 <av_freep@plt>
    66f0:	cmp	r6, #0
    66f4:	bge	6494 <main@@Base+0x1868>
    66f8:	ldr	r3, [pc, #-2280]	; 5e18 <main@@Base+0x11ec>
    66fc:	add	r3, pc, r3
    6700:	ldr	r3, [r3, #112]	; 0x70
    6704:	cmp	r3, #0
    6708:	beq	6494 <main@@Base+0x1868>
    670c:	add	r4, sp, #156	; 0x9c
    6710:	mov	r1, r4
    6714:	mov	r2, #128	; 0x80
    6718:	mov	r0, r6
    671c:	ldr	r5, [sp, #56]	; 0x38
    6720:	bl	44f4 <av_strerror@plt>
    6724:	cmp	r0, #0
    6728:	blt	69f4 <main@@Base+0x1dc8>
    672c:	mov	r0, r5
    6730:	mov	r1, #3
    6734:	bl	1198c <main@@Base+0xcd60>
    6738:	ldr	r1, [pc, #-2340]	; 5e1c <main@@Base+0x11f0>
    673c:	mov	r2, r6
    6740:	asr	r3, r6, #31
    6744:	mov	r0, r5
    6748:	add	r1, pc, r1
    674c:	bl	11004 <main@@Base+0xc3d8>
    6750:	ldr	r1, [pc, #-2360]	; 5e20 <main@@Base+0x11f4>
    6754:	mov	r2, r4
    6758:	add	r1, pc, r1
    675c:	mov	r0, r5
    6760:	bl	12fe4 <main@@Base+0xe3b8>
    6764:	mov	r0, r5
    6768:	bl	ef94 <main@@Base+0xa368>
    676c:	b	6494 <main@@Base+0x1868>
    6770:	mov	r0, r4
    6774:	ldrd	sl, [sp, #40]	; 0x28
    6778:	bl	ef94 <main@@Base+0xa368>
    677c:	b	59d4 <main@@Base+0xda8>
    6780:	ldr	r4, [pc, #-2404]	; 5e24 <main@@Base+0x11f8>
    6784:	add	r4, pc, r4
    6788:	add	r0, r4, #64	; 0x40
    678c:	bl	3ec4 <av_freep@plt>
    6790:	add	r0, r4, #68	; 0x44
    6794:	bl	3ec4 <av_freep@plt>
    6798:	add	r0, r4, #72	; 0x48
    679c:	bl	3ec4 <av_freep@plt>
    67a0:	b	66f8 <main@@Base+0x1acc>
    67a4:	ldr	r3, [r5]
    67a8:	ldr	r2, [pc, #-2440]	; 5e28 <main@@Base+0x11fc>
    67ac:	str	r3, [sp]
    67b0:	ldr	r3, [r0]
    67b4:	add	r2, pc, r2
    67b8:	mov	r1, #16
    67bc:	mov	r0, #0
    67c0:	ldr	sl, [sp, #36]	; 0x24
    67c4:	ldr	r6, [pc, #-2428]	; 5e50 <main@@Base+0x1224>
    67c8:	bl	40f8 <av_log@plt>
    67cc:	b	666c <main@@Base+0x1a40>
    67d0:	mov	r0, r7
    67d4:	mov	r1, r6
    67d8:	bl	bb84 <main@@Base+0x6f58>
    67dc:	b	666c <main@@Base+0x1a40>
    67e0:	add	ip, sp, #80	; 0x50
    67e4:	mov	r6, ip
    67e8:	ldr	r2, [pc, #-2500]	; 5e2c <main@@Base+0x1200>
    67ec:	mov	r3, #16
    67f0:	add	r2, pc, r2
    67f4:	mov	r1, fp
    67f8:	mov	r0, r8
    67fc:	str	ip, [sp, #16]
    6800:	bl	453c <av_dict_set@plt>
    6804:	mov	r0, r6
    6808:	ldr	r2, [r5, #36]	; 0x24
    680c:	mov	r3, r8
    6810:	mov	r1, r7
    6814:	bl	44dc <avformat_open_input@plt>
    6818:	subs	r6, r0, #0
    681c:	blt	67d0 <main@@Base+0x1ba4>
    6820:	ldr	ip, [sp, #80]	; 0x50
    6824:	ldr	r2, [sp, #24]
    6828:	mov	r1, fp
    682c:	mov	r3, #1
    6830:	mov	r0, r8
    6834:	str	ip, [sp, #92]	; 0x5c
    6838:	bl	453c <av_dict_set@plt>
    683c:	b	5458 <main@@Base+0x82c>
    6840:	ldr	r3, [pc, #-2584]	; 5e30 <main@@Base+0x1204>
    6844:	add	r3, pc, r3
    6848:	ldr	r1, [r3, #88]	; 0x58
    684c:	ldr	r2, [r3, #76]	; 0x4c
    6850:	orrs	r2, r1, r2
    6854:	beq	6914 <main@@Base+0x1ce8>
    6858:	ldrd	r2, [r3, #16]
    685c:	cmp	r2, #0
    6860:	beq	698c <main@@Base+0x1d60>
    6864:	cmp	r3, #0
    6868:	moveq	r1, #7
    686c:	beq	6884 <main@@Base+0x1c58>
    6870:	ldr	r3, [r4, #4]
    6874:	ldr	r3, [r3, #40]	; 0x28
    6878:	tst	r3, #2
    687c:	moveq	r1, #7
    6880:	movne	r1, #18
    6884:	mov	r0, r4
    6888:	bl	1198c <main@@Base+0xcd60>
    688c:	ldr	r0, [sp, #92]	; 0x5c
    6890:	ldr	r5, [pc, #-2660]	; 5e34 <main@@Base+0x1208>
    6894:	add	r0, r0, #1072	; 0x430
    6898:	add	r5, pc, r5
    689c:	ldr	r1, [r5, #44]	; 0x2c
    68a0:	ldrd	r2, [r0, #-8]
    68a4:	cmp	r1, #0
    68a8:	strd	r2, [sp, #80]	; 0x50
    68ac:	beq	6f68 <main@@Base+0x233c>
    68b0:	mov	r6, #0
    68b4:	mov	fp, #48	; 0x30
    68b8:	mov	r7, r6
    68bc:	add	r8, sp, #96	; 0x60
    68c0:	mov	r0, r6
    68c4:	b	68f4 <main@@Base+0x1cc8>
    68c8:	ldr	r3, [r5, #40]	; 0x28
    68cc:	ldr	r2, [sp, #16]
    68d0:	mla	r3, fp, r7, r3
    68d4:	str	r2, [sp]
    68d8:	ldr	r1, [sp, #20]
    68dc:	mov	r2, r8
    68e0:	mov	r0, r4
    68e4:	bl	17e7c <main@@Base+0x13250>
    68e8:	cmp	r0, #0
    68ec:	blt	6a04 <main@@Base+0x1dd8>
    68f0:	add	r7, r7, #1
    68f4:	ldr	r3, [r5, #44]	; 0x2c
    68f8:	cmp	r7, r3
    68fc:	blt	68c8 <main@@Base+0x1c9c>
    6900:	ldr	r2, [r5, #20]
    6904:	ldr	r3, [r5, #16]
    6908:	mov	r6, r0
    690c:	orrs	r3, r2, r3
    6910:	bne	6a18 <main@@Base+0x1dec>
    6914:	ldr	r3, [pc, #-2788]	; 5e38 <main@@Base+0x120c>
    6918:	add	r3, pc, r3
    691c:	ldr	r3, [r3, #140]	; 0x8c
    6920:	cmp	r3, #0
    6924:	bne	6fa8 <main@@Base+0x237c>
    6928:	ldr	r3, [pc, #-2804]	; 5e3c <main@@Base+0x1210>
    692c:	add	r3, pc, r3
    6930:	ldr	r3, [r3, #144]	; 0x90
    6934:	cmp	r3, #0
    6938:	bne	6ed4 <main@@Base+0x22a8>
    693c:	ldr	r3, [pc, #-2820]	; 5e40 <main@@Base+0x1214>
    6940:	add	r3, pc, r3
    6944:	ldr	r3, [r3, #108]	; 0x6c
    6948:	cmp	r3, #0
    694c:	bne	6d88 <main@@Base+0x215c>
    6950:	ldr	r7, [pc, #-2836]	; 5e44 <main@@Base+0x1218>
    6954:	ldr	r5, [sp, #92]	; 0x5c
    6958:	add	r7, pc, r7
    695c:	ldr	r3, [r7, #116]	; 0x74
    6960:	cmp	r3, #0
    6964:	bne	6a2c <main@@Base+0x1e00>
    6968:	cmp	r5, #0
    696c:	bne	6678 <main@@Base+0x1a4c>
    6970:	add	r0, r7, #64	; 0x40
    6974:	bl	3ec4 <av_freep@plt>
    6978:	add	r0, r7, #68	; 0x44
    697c:	bl	3ec4 <av_freep@plt>
    6980:	add	r0, r7, #72	; 0x48
    6984:	bl	3ec4 <av_freep@plt>
    6988:	b	6494 <main@@Base+0x1868>
    698c:	cmp	r3, #0
    6990:	beq	6890 <main@@Base+0x1c64>
    6994:	mov	r1, #17
    6998:	b	6884 <main@@Base+0x1c58>
    699c:	ldr	r2, [pc, #-2908]	; 5e48 <main@@Base+0x121c>
    69a0:	ldr	r3, [r5]
    69a4:	add	r2, pc, r2
    69a8:	mov	r1, #24
    69ac:	mov	r0, #0
    69b0:	bl	40f8 <av_log@plt>
    69b4:	mov	r0, #1
    69b8:	bl	47c4 <exit@plt>
    69bc:	ldr	r2, [pc, #-2936]	; 5e4c <main@@Base+0x1220>
    69c0:	ldr	r3, [r8]
    69c4:	add	r2, pc, r2
    69c8:	mov	r1, #16
    69cc:	mov	r0, #0
    69d0:	bl	40f8 <av_log@plt>
    69d4:	ldr	r6, [pc, #-2956]	; 5e50 <main@@Base+0x1224>
    69d8:	b	666c <main@@Base+0x1a40>
    69dc:	mov	r0, r7
    69e0:	mvn	r1, #11
    69e4:	bl	bb84 <main@@Base+0x6f58>
    69e8:	mov	r0, #1
    69ec:	bl	902c <main@@Base+0x4400>
    69f0:	bl	3f00 <__stack_chk_fail@plt>
    69f4:	rsb	r0, r6, #0
    69f8:	bl	3f3c <strerror@plt>
    69fc:	mov	r4, r0
    6a00:	b	672c <main@@Base+0x1b00>
    6a04:	ldr	r2, [r5, #20]
    6a08:	ldr	r3, [r5, #16]
    6a0c:	mov	r6, r0
    6a10:	orrs	r3, r2, r3
    6a14:	beq	666c <main@@Base+0x1a40>
    6a18:	mov	r0, r4
    6a1c:	bl	ef94 <main@@Base+0xa368>
    6a20:	cmp	r6, #0
    6a24:	bge	6914 <main@@Base+0x1ce8>
    6a28:	b	666c <main@@Base+0x1a40>
    6a2c:	ldr	r0, [r5, #16]
    6a30:	cmp	r0, #0
    6a34:	beq	6d78 <main@@Base+0x214c>
    6a38:	bl	3fa8 <avio_size@plt>
    6a3c:	strd	r0, [sp, #24]
    6a40:	mov	r1, #4
    6a44:	mov	r0, r4
    6a48:	bl	1198c <main@@Base+0xcd60>
    6a4c:	ldr	r3, [r4, #24]
    6a50:	ldr	r8, [r5, #1056]	; 0x420
    6a54:	add	r3, r4, r3, lsl #2
    6a58:	ldr	r7, [r3, #68]	; 0x44
    6a5c:	ldr	r3, [r7, #68]	; 0x44
    6a60:	cmp	r3, #0
    6a64:	beq	6d54 <main@@Base+0x2128>
    6a68:	mov	r3, #0
    6a6c:	ldr	r2, [pc, #-3104]	; 5e54 <main@@Base+0x1228>
    6a70:	ldr	r1, [sp, #16]
    6a74:	add	r2, pc, r2
    6a78:	mov	r0, r4
    6a7c:	str	r3, [sp, #80]	; 0x50
    6a80:	str	r3, [sp, #104]	; 0x68
    6a84:	bl	12d74 <main@@Base+0xe148>
    6a88:	cmp	r0, #0
    6a8c:	add	r6, sp, #104	; 0x68
    6a90:	blt	6ca0 <main@@Base+0x2074>
    6a94:	mov	r1, r6
    6a98:	mov	r2, r8
    6a9c:	mov	r0, r4
    6aa0:	bl	12d74 <main@@Base+0xe148>
    6aa4:	cmp	r0, #0
    6aa8:	blt	6ca0 <main@@Base+0x2074>
    6aac:	ldr	r3, [r4, #4]
    6ab0:	ldr	r2, [sp, #104]	; 0x68
    6ab4:	ldr	r3, [r3, #36]	; 0x24
    6ab8:	ldr	r1, [sp, #80]	; 0x50
    6abc:	mov	r0, r4
    6ac0:	blx	r3
    6ac4:	ldr	r0, [sp, #80]	; 0x50
    6ac8:	bl	46ec <av_free@plt>
    6acc:	ldr	r0, [sp, #104]	; 0x68
    6ad0:	bl	46ec <av_free@plt>
    6ad4:	ldr	r3, [r4, #24]
    6ad8:	add	r3, r4, r3, lsl #2
    6adc:	ldr	r2, [r3, #28]
    6ae0:	add	r2, r2, #1
    6ae4:	str	r2, [r3, #28]
    6ae8:	ldr	r1, [pc, #-3224]	; 5e58 <main@@Base+0x122c>
    6aec:	ldr	r2, [r5, #24]
    6af0:	mov	r3, #0
    6af4:	add	r1, pc, r1
    6af8:	mov	r0, r4
    6afc:	bl	11004 <main@@Base+0xc3d8>
    6b00:	ldr	r1, [pc, #-3244]	; 5e5c <main@@Base+0x1230>
    6b04:	ldr	r2, [r5, #1128]	; 0x468
    6b08:	mov	r3, #0
    6b0c:	add	r1, pc, r1
    6b10:	mov	r0, r4
    6b14:	bl	11004 <main@@Base+0xc3d8>
    6b18:	ldr	r3, [r5, #4]
    6b1c:	ldr	r1, [pc, #-3268]	; 5e60 <main@@Base+0x1234>
    6b20:	ldr	r2, [r3]
    6b24:	add	r1, pc, r1
    6b28:	mov	r0, r4
    6b2c:	bl	12fe4 <main@@Base+0xe3b8>
    6b30:	ldr	r3, [pc, #-3284]	; 5e64 <main@@Base+0x1238>
    6b34:	add	r3, pc, r3
    6b38:	ldr	r3, [r3, #92]	; 0x5c
    6b3c:	cmp	r3, #0
    6b40:	bne	6b64 <main@@Base+0x1f38>
    6b44:	ldr	r3, [r5, #4]
    6b48:	ldr	r2, [r3, #4]
    6b4c:	cmp	r2, #0
    6b50:	beq	6eb8 <main@@Base+0x228c>
    6b54:	ldr	r1, [pc, #-3316]	; 5e68 <main@@Base+0x123c>
    6b58:	mov	r0, r4
    6b5c:	add	r1, pc, r1
    6b60:	bl	12fe4 <main@@Base+0xe3b8>
    6b64:	mov	r8, #1
    6b68:	ldr	r0, [sp, #16]
    6b6c:	ldr	r1, [pc, #-3336]	; 5e6c <main@@Base+0x1240>
    6b70:	add	fp, r5, #1072	; 0x430
    6b74:	ldr	r7, [pc, #-3340]	; 5e70 <main@@Base+0x1244>
    6b78:	ldrd	r2, [fp, #-8]
    6b7c:	add	r1, pc, r1
    6b80:	str	r0, [sp]
    6b84:	mov	r0, r4
    6b88:	str	r8, [sp, #80]	; 0x50
    6b8c:	str	r7, [sp, #84]	; 0x54
    6b90:	bl	15458 <main@@Base+0x1082c>
    6b94:	ldrd	r2, [fp]
    6b98:	ldr	r1, [pc, #-3372]	; 5e74 <main@@Base+0x1248>
    6b9c:	str	r6, [sp]
    6ba0:	add	r1, pc, r1
    6ba4:	mov	r0, r4
    6ba8:	str	r8, [sp, #104]	; 0x68
    6bac:	str	r7, [sp, #108]	; 0x6c
    6bb0:	bl	15458 <main@@Base+0x1082c>
    6bb4:	ldrd	r2, [sp, #24]
    6bb8:	cmp	r2, #0
    6bbc:	sbcs	r1, r3, #0
    6bc0:	blt	6d30 <main@@Base+0x2104>
    6bc4:	ldr	r1, [pc, #-3412]	; 5e78 <main@@Base+0x124c>
    6bc8:	add	r0, sp, #156	; 0x9c
    6bcc:	add	r1, pc, r1
    6bd0:	add	r1, r1, #20
    6bd4:	str	r1, [sp]
    6bd8:	bl	12248 <main@@Base+0xd61c>
    6bdc:	ldr	r1, [pc, #-3432]	; 5e7c <main@@Base+0x1250>
    6be0:	mov	r2, r0
    6be4:	add	r1, pc, r1
    6be8:	mov	r0, r4
    6bec:	bl	12fe4 <main@@Base+0xe3b8>
    6bf0:	add	r3, r5, #1088	; 0x440
    6bf4:	ldrd	r2, [r3, #-8]
    6bf8:	cmp	r2, #1
    6bfc:	sbcs	r1, r3, #0
    6c00:	blt	6d14 <main@@Base+0x20e8>
    6c04:	ldr	r1, [pc, #-3468]	; 5e80 <main@@Base+0x1254>
    6c08:	add	r0, sp, #156	; 0x9c
    6c0c:	add	r1, pc, r1
    6c10:	add	r1, r1, #32
    6c14:	str	r1, [sp]
    6c18:	bl	12248 <main@@Base+0xd61c>
    6c1c:	ldr	r1, [pc, #-3488]	; 5e84 <main@@Base+0x1258>
    6c20:	mov	r2, r0
    6c24:	add	r1, pc, r1
    6c28:	mov	r0, r4
    6c2c:	bl	12fe4 <main@@Base+0xe3b8>
    6c30:	ldr	r2, [r5, #1276]	; 0x4fc
    6c34:	ldr	r1, [pc, #-3508]	; 5e88 <main@@Base+0x125c>
    6c38:	asr	r3, r2, #31
    6c3c:	add	r1, pc, r1
    6c40:	mov	r0, r4
    6c44:	bl	11004 <main@@Base+0xc3d8>
    6c48:	ldr	r3, [pc, #-3524]	; 5e8c <main@@Base+0x1260>
    6c4c:	add	r3, pc, r3
    6c50:	ldr	r3, [r3, #152]	; 0x98
    6c54:	cmp	r3, #0
    6c58:	beq	6ccc <main@@Base+0x20a0>
    6c5c:	ldr	r1, [r5, #1164]	; 0x48c
    6c60:	cmp	r1, #0
    6c64:	beq	6ccc <main@@Base+0x20a0>
    6c68:	mov	r2, #5
    6c6c:	mov	r0, r4
    6c70:	bl	1442c <main@@Base+0xf800>
    6c74:	mov	r6, r0
    6c78:	mov	r0, r4
    6c7c:	bl	ef94 <main@@Base+0xa368>
    6c80:	ldr	r3, [pc, #-3568]	; 5e98 <main@@Base+0x126c>
    6c84:	ldr	r3, [r9, r3]
    6c88:	ldr	r0, [r3]
    6c8c:	bl	417c <fflush@plt>
    6c90:	ldr	r3, [sp, #92]	; 0x5c
    6c94:	cmp	r3, #0
    6c98:	beq	66d0 <main@@Base+0x1aa4>
    6c9c:	b	6678 <main@@Base+0x1a4c>
    6ca0:	ldr	r2, [r7, #60]	; 0x3c
    6ca4:	ldr	r3, [pc, #-3612]	; 5e90 <main@@Base+0x1264>
    6ca8:	str	r2, [sp, #4]
    6cac:	ldr	r2, [pc, #-3616]	; 5e94 <main@@Base+0x1268>
    6cb0:	add	r3, pc, r3
    6cb4:	str	r8, [sp]
    6cb8:	add	r2, pc, r2
    6cbc:	mov	r1, #16
    6cc0:	mov	r0, r4
    6cc4:	bl	40f8 <av_log@plt>
    6cc8:	b	6ac4 <main@@Base+0x1e98>
    6ccc:	mov	r0, r4
    6cd0:	bl	ef94 <main@@Base+0xa368>
    6cd4:	ldr	r3, [pc, #-3652]	; 5e98 <main@@Base+0x126c>
    6cd8:	ldr	r3, [r9, r3]
    6cdc:	ldr	r0, [r3]
    6ce0:	bl	417c <fflush@plt>
    6ce4:	ldr	r6, [sp, #92]	; 0x5c
    6ce8:	cmp	r6, #0
    6cec:	bne	6d4c <main@@Base+0x2120>
    6cf0:	ldr	r4, [pc, #-3676]	; 5e9c <main@@Base+0x1270>
    6cf4:	add	r4, pc, r4
    6cf8:	add	r0, r4, #64	; 0x40
    6cfc:	bl	3ec4 <av_freep@plt>
    6d00:	add	r0, r4, #68	; 0x44
    6d04:	bl	3ec4 <av_freep@plt>
    6d08:	add	r0, r4, #72	; 0x48
    6d0c:	bl	3ec4 <av_freep@plt>
    6d10:	b	6494 <main@@Base+0x1868>
    6d14:	ldr	r2, [pc, #-3708]	; 5ea0 <main@@Base+0x1274>
    6d18:	ldr	r1, [pc, #-3708]	; 5ea4 <main@@Base+0x1278>
    6d1c:	add	r2, pc, r2
    6d20:	add	r1, pc, r1
    6d24:	mov	r0, r4
    6d28:	bl	131bc <main@@Base+0xe590>
    6d2c:	b	6c30 <main@@Base+0x2004>
    6d30:	ldr	r2, [pc, #-3728]	; 5ea8 <main@@Base+0x127c>
    6d34:	ldr	r1, [pc, #-3728]	; 5eac <main@@Base+0x1280>
    6d38:	add	r2, pc, r2
    6d3c:	add	r1, pc, r1
    6d40:	mov	r0, r4
    6d44:	bl	131bc <main@@Base+0xe590>
    6d48:	b	6bf0 <main@@Base+0x1fc4>
    6d4c:	mov	r6, #0
    6d50:	b	6678 <main@@Base+0x1a4c>
    6d54:	ldr	r1, [pc, #-3756]	; 5eb0 <main@@Base+0x1284>
    6d58:	mov	r2, r3
    6d5c:	add	r1, pc, r1
    6d60:	ldr	r0, [r7, #64]	; 0x40
    6d64:	bl	4644 <av_dict_get@plt>
    6d68:	cmp	r0, #0
    6d6c:	addeq	r6, sp, #104	; 0x68
    6d70:	bne	6a68 <main@@Base+0x1e3c>
    6d74:	b	6ae8 <main@@Base+0x1ebc>
    6d78:	mvn	r2, #0
    6d7c:	mvn	r3, #0
    6d80:	strd	r2, [sp, #24]
    6d84:	b	6a40 <main@@Base+0x1e14>
    6d88:	mov	r6, #0
    6d8c:	ldr	r3, [pc, #-3808]	; 5eb4 <main@@Base+0x1288>
    6d90:	mov	r1, #2
    6d94:	add	r3, pc, r3
    6d98:	mov	r0, r4
    6d9c:	str	r3, [sp, #24]
    6da0:	ldr	fp, [sp, #92]	; 0x5c
    6da4:	bl	1198c <main@@Base+0xcd60>
    6da8:	ldr	r3, [pc, #-3832]	; 5eb8 <main@@Base+0x128c>
    6dac:	mov	r8, r6
    6db0:	add	r3, pc, r3
    6db4:	str	r3, [sp, #36]	; 0x24
    6db8:	ldr	r3, [pc, #-3844]	; 5ebc <main@@Base+0x1290>
    6dbc:	add	r3, pc, r3
    6dc0:	str	r3, [sp, #48]	; 0x30
    6dc4:	b	6e98 <main@@Base+0x226c>
    6dc8:	ldr	r3, [fp, #1160]	; 0x488
    6dcc:	mov	r1, #0
    6dd0:	ldr	r5, [r3, r8, lsl #2]
    6dd4:	mov	r0, r4
    6dd8:	mov	r7, r5
    6ddc:	bl	1198c <main@@Base+0xcd60>
    6de0:	ldr	r2, [r7], #4
    6de4:	ldr	r1, [sp, #24]
    6de8:	asr	r3, r2, #31
    6dec:	mov	r0, r4
    6df0:	bl	11004 <main@@Base+0xc3d8>
    6df4:	ldm	r7, {r2, r3}
    6df8:	ldr	r1, [sp, #36]	; 0x24
    6dfc:	mov	r0, r4
    6e00:	bl	146f0 <main@@Base+0xfac4>
    6e04:	ldrd	r2, [r5, #16]
    6e08:	ldr	r1, [sp, #48]	; 0x30
    6e0c:	mov	r0, r4
    6e10:	bl	11004 <main@@Base+0xc3d8>
    6e14:	ldr	r1, [pc, #-3932]	; 5ec0 <main@@Base+0x1294>
    6e18:	str	r7, [sp]
    6e1c:	ldrd	r2, [r5, #16]
    6e20:	add	r1, pc, r1
    6e24:	mov	r0, r4
    6e28:	bl	15458 <main@@Base+0x1082c>
    6e2c:	ldrd	r2, [r5, #24]
    6e30:	ldr	r1, [pc, #-3956]	; 5ec4 <main@@Base+0x1298>
    6e34:	mov	r0, r4
    6e38:	add	r1, pc, r1
    6e3c:	bl	11004 <main@@Base+0xc3d8>
    6e40:	ldr	r1, [pc, #-3968]	; 5ec8 <main@@Base+0x129c>
    6e44:	str	r7, [sp]
    6e48:	ldrd	r2, [r5, #24]
    6e4c:	add	r1, pc, r1
    6e50:	mov	r0, r4
    6e54:	bl	15458 <main@@Base+0x1082c>
    6e58:	ldr	r3, [pc, #-3988]	; 5ecc <main@@Base+0x12a0>
    6e5c:	add	r3, pc, r3
    6e60:	ldr	r3, [r3, #148]	; 0x94
    6e64:	cmp	r3, #0
    6e68:	beq	6e8c <main@@Base+0x2260>
    6e6c:	ldr	r1, [r5, #32]
    6e70:	cmp	r1, #0
    6e74:	moveq	r6, r1
    6e78:	beq	6e8c <main@@Base+0x2260>
    6e7c:	mov	r2, #1
    6e80:	mov	r0, r4
    6e84:	bl	1442c <main@@Base+0xf800>
    6e88:	mov	r6, r0
    6e8c:	mov	r0, r4
    6e90:	bl	ef94 <main@@Base+0xa368>
    6e94:	add	r8, r8, #1
    6e98:	ldr	r3, [fp, #1156]	; 0x484
    6e9c:	cmp	r3, r8
    6ea0:	bhi	6dc8 <main@@Base+0x219c>
    6ea4:	mov	r0, r4
    6ea8:	bl	ef94 <main@@Base+0xa368>
    6eac:	cmp	r6, #0
    6eb0:	bge	6950 <main@@Base+0x1d24>
    6eb4:	b	666c <main@@Base+0x1a40>
    6eb8:	ldr	r2, [pc, #-4080]	; 5ed0 <main@@Base+0x12a4>
    6ebc:	ldr	r1, [pc, #-4080]	; 5ed4 <main@@Base+0x12a8>
    6ec0:	add	r2, pc, r2
    6ec4:	add	r1, pc, r1
    6ec8:	mov	r0, r4
    6ecc:	bl	131bc <main@@Base+0xe590>
    6ed0:	b	6b64 <main@@Base+0x1f38>
    6ed4:	mov	r6, #0
    6ed8:	ldr	r7, [pc, #1460]	; 7494 <main@@Base+0x2868>
    6edc:	mov	r0, r4
    6ee0:	mov	r1, #37	; 0x25
    6ee4:	ldr	fp, [sp, #92]	; 0x5c
    6ee8:	mov	r5, r6
    6eec:	bl	1198c <main@@Base+0xcd60>
    6ef0:	mov	r8, r6
    6ef4:	ldr	r2, [sp, #100]	; 0x64
    6ef8:	add	r7, pc, r7
    6efc:	mov	r0, r6
    6f00:	b	6f08 <main@@Base+0x22dc>
    6f04:	add	r5, r5, #1
    6f08:	cmp	r5, r2
    6f0c:	bge	6f58 <main@@Base+0x232c>
    6f10:	ldr	r3, [r7, #72]	; 0x48
    6f14:	ldr	r3, [r3, r5, lsl #2]
    6f18:	cmp	r3, #0
    6f1c:	beq	6f04 <main@@Base+0x22d8>
    6f20:	ldr	r2, [sp, #96]	; 0x60
    6f24:	str	r8, [sp, #4]
    6f28:	add	r3, r2, r5, lsl #3
    6f2c:	add	r3, r3, #4
    6f30:	str	r3, [sp]
    6f34:	ldr	r3, [r2, r5, lsl #3]
    6f38:	mov	r1, fp
    6f3c:	mov	r2, r5
    6f40:	mov	r0, r4
    6f44:	bl	19634 <main@@Base+0x14a08>
    6f48:	cmp	r0, #0
    6f4c:	blt	6660 <main@@Base+0x1a34>
    6f50:	ldr	r2, [sp, #100]	; 0x64
    6f54:	b	6f04 <main@@Base+0x22d8>
    6f58:	mov	r6, r0
    6f5c:	mov	r0, r4
    6f60:	bl	ef94 <main@@Base+0xa368>
    6f64:	b	693c <main@@Base+0x1d10>
    6f68:	add	r6, sp, #104	; 0x68
    6f6c:	mov	r0, r6
    6f70:	mov	r2, #48	; 0x30
    6f74:	bl	41e8 <memset@plt>
    6f78:	ldr	r2, [sp, #16]
    6f7c:	mov	r3, r6
    6f80:	str	r2, [sp]
    6f84:	ldr	r1, [sp, #20]
    6f88:	add	r2, sp, #96	; 0x60
    6f8c:	mov	r0, r4
    6f90:	bl	17e7c <main@@Base+0x13250>
    6f94:	ldrd	r2, [r5, #16]
    6f98:	orrs	r3, r2, r3
    6f9c:	mov	r6, r0
    6fa0:	beq	6a20 <main@@Base+0x1df4>
    6fa4:	b	6a18 <main@@Base+0x1dec>
    6fa8:	mov	r6, #0
    6fac:	mov	r8, r6
    6fb0:	mov	r1, #33	; 0x21
    6fb4:	mov	r0, r4
    6fb8:	ldr	fp, [sp, #92]	; 0x5c
    6fbc:	bl	1198c <main@@Base+0xcd60>
    6fc0:	ldr	r3, [pc, #1232]	; 7498 <main@@Base+0x286c>
    6fc4:	ldr	r2, [fp, #1128]	; 0x468
    6fc8:	add	r3, pc, r3
    6fcc:	add	r3, r3, #40	; 0x28
    6fd0:	str	r3, [sp, #48]	; 0x30
    6fd4:	ldr	r3, [pc, #1216]	; 749c <main@@Base+0x2870>
    6fd8:	add	r3, pc, r3
    6fdc:	str	r3, [sp, #36]	; 0x24
    6fe0:	ldr	r3, [pc, #1208]	; 74a0 <main@@Base+0x2874>
    6fe4:	add	r3, pc, r3
    6fe8:	str	r3, [sp, #40]	; 0x28
    6fec:	ldr	r3, [pc, #1200]	; 74a4 <main@@Base+0x2878>
    6ff0:	add	r3, pc, r3
    6ff4:	str	r3, [sp, #52]	; 0x34
    6ff8:	cmp	r2, r8
    6ffc:	bls	73c8 <main@@Base+0x279c>
    7000:	ldr	r1, [fp, #1132]	; 0x46c
    7004:	ldr	r5, [r1, r8, lsl #2]
    7008:	cmp	r5, #0
    700c:	beq	73bc <main@@Base+0x2790>
    7010:	ldr	r3, [r4, #24]
    7014:	ldr	r2, [sp, #92]	; 0x5c
    7018:	add	r1, r3, #1
    701c:	cmp	r1, #9
    7020:	str	r2, [sp, #24]
    7024:	str	r1, [r4, #24]
    7028:	bgt	73c4 <main@@Base+0x2798>
    702c:	ldr	r2, [r4, #16]
    7030:	cmp	r1, #0
    7034:	add	r2, r2, #2016	; 0x7e0
    7038:	streq	r1, [r4, #28]
    703c:	streq	r2, [r4, #68]	; 0x44
    7040:	beq	706c <main@@Base+0x2440>
    7044:	mov	r1, #0
    7048:	add	r3, r4, r3, lsl #2
    704c:	ldr	r0, [r3, #68]	; 0x44
    7050:	ldr	r0, [r0]
    7054:	str	r2, [r3, #72]	; 0x48
    7058:	cmp	r0, #18
    705c:	str	r1, [r3, #32]
    7060:	addeq	r3, r4, #8192	; 0x2000
    7064:	ldreq	r2, [r3, #2160]	; 0x870
    7068:	streq	r2, [r3, #2164]	; 0x874
    706c:	ldr	r3, [r4, #4]
    7070:	ldr	r3, [r3, #20]
    7074:	cmp	r3, #0
    7078:	beq	7084 <main@@Base+0x2458>
    707c:	mov	r0, r4
    7080:	blx	r3
    7084:	ldr	r3, [r4, #24]
    7088:	ldr	r6, [r5]
    708c:	add	r3, r4, r3, lsl #2
    7090:	ldr	r2, [r3, #68]	; 0x44
    7094:	asr	r7, r6, #31
    7098:	ldr	r3, [r2, #68]	; 0x44
    709c:	cmp	r3, #0
    70a0:	beq	7474 <main@@Base+0x2848>
    70a4:	ldr	r1, [r4, #4]
    70a8:	mov	r2, r6
    70ac:	ldr	r6, [r1, #28]
    70b0:	ldr	r1, [pc, #1008]	; 74a8 <main@@Base+0x287c>
    70b4:	mov	r3, r7
    70b8:	add	r1, pc, r1
    70bc:	mov	r0, r4
    70c0:	blx	r6
    70c4:	ldr	r3, [r4, #24]
    70c8:	add	r3, r4, r3, lsl #2
    70cc:	ldr	r2, [r3, #28]
    70d0:	add	r2, r2, #1
    70d4:	str	r2, [r3, #28]
    70d8:	ldr	r3, [r4, #24]
    70dc:	ldr	r6, [r5, #24]
    70e0:	add	r3, r4, r3, lsl #2
    70e4:	ldr	r2, [r3, #68]	; 0x44
    70e8:	asr	r7, r6, #31
    70ec:	ldr	r3, [r2, #68]	; 0x44
    70f0:	cmp	r3, #0
    70f4:	beq	7454 <main@@Base+0x2828>
    70f8:	ldr	r1, [r4, #4]
    70fc:	mov	r2, r6
    7100:	ldr	r6, [r1, #28]
    7104:	ldr	r1, [pc, #928]	; 74ac <main@@Base+0x2880>
    7108:	mov	r3, r7
    710c:	add	r1, pc, r1
    7110:	mov	r0, r4
    7114:	blx	r6
    7118:	ldr	r3, [r4, #24]
    711c:	add	r3, r4, r3, lsl #2
    7120:	ldr	r2, [r3, #28]
    7124:	add	r2, r2, #1
    7128:	str	r2, [r3, #28]
    712c:	ldr	r3, [r4, #24]
    7130:	ldr	r6, [r5, #16]
    7134:	add	r3, r4, r3, lsl #2
    7138:	ldr	r2, [r3, #68]	; 0x44
    713c:	ldr	r3, [r2, #68]	; 0x44
    7140:	cmp	r3, #0
    7144:	beq	73f4 <main@@Base+0x27c8>
    7148:	ldr	r3, [r4, #4]
    714c:	ldr	r1, [pc, #860]	; 74b0 <main@@Base+0x2884>
    7150:	mov	r2, r6
    7154:	add	r1, pc, r1
    7158:	ldr	r6, [r3, #28]
    715c:	mov	r0, r4
    7160:	mov	r3, #0
    7164:	blx	r6
    7168:	ldr	r3, [r4, #24]
    716c:	add	r3, r4, r3, lsl #2
    7170:	ldr	r2, [r3, #28]
    7174:	add	r2, r2, #1
    7178:	str	r2, [r3, #28]
    717c:	ldr	r3, [r4, #24]
    7180:	ldr	r6, [r5, #28]
    7184:	add	r3, r4, r3, lsl #2
    7188:	ldr	r2, [r3, #68]	; 0x44
    718c:	asr	r7, r6, #31
    7190:	ldr	r3, [r2, #68]	; 0x44
    7194:	cmp	r3, #0
    7198:	beq	73d4 <main@@Base+0x27a8>
    719c:	ldr	r1, [r4, #4]
    71a0:	mov	r2, r6
    71a4:	ldr	r6, [r1, #28]
    71a8:	ldr	r1, [pc, #772]	; 74b4 <main@@Base+0x2888>
    71ac:	mov	r3, r7
    71b0:	add	r1, pc, r1
    71b4:	mov	r0, r4
    71b8:	blx	r6
    71bc:	ldr	r3, [r4, #24]
    71c0:	add	r3, r4, r3, lsl #2
    71c4:	ldr	r2, [r3, #28]
    71c8:	add	r2, r2, #1
    71cc:	str	r2, [r3, #28]
    71d0:	ldr	r3, [r4, #24]
    71d4:	ldr	r6, [r5, #32]
    71d8:	add	r3, r4, r3, lsl #2
    71dc:	ldr	r2, [r3, #68]	; 0x44
    71e0:	asr	r7, r6, #31
    71e4:	ldr	r3, [r2, #68]	; 0x44
    71e8:	cmp	r3, #0
    71ec:	beq	7414 <main@@Base+0x27e8>
    71f0:	ldr	r1, [r4, #4]
    71f4:	mov	r2, r6
    71f8:	ldr	r6, [r1, #28]
    71fc:	ldr	r1, [pc, #692]	; 74b8 <main@@Base+0x288c>
    7200:	mov	r3, r7
    7204:	add	r1, pc, r1
    7208:	mov	r0, r4
    720c:	blx	r6
    7210:	ldr	r3, [r4, #24]
    7214:	add	r3, r4, r3, lsl #2
    7218:	ldr	r2, [r3, #28]
    721c:	add	r2, r2, #1
    7220:	str	r2, [r3, #28]
    7224:	ldrd	r2, [r5, #40]	; 0x28
    7228:	ldr	r1, [sp, #36]	; 0x24
    722c:	mov	r0, r4
    7230:	bl	147e8 <main@@Base+0xfbbc>
    7234:	ldrd	r2, [r5, #40]	; 0x28
    7238:	ldr	r6, [sp, #48]	; 0x30
    723c:	add	ip, sp, #64	; 0x40
    7240:	ldm	r6, {r0, r1}
    7244:	stm	ip, {r0, r1}
    7248:	str	ip, [sp]
    724c:	ldr	r1, [sp, #40]	; 0x28
    7250:	mov	r0, r4
    7254:	bl	15458 <main@@Base+0x1082c>
    7258:	ldrd	r2, [r5, #48]	; 0x30
    725c:	ldr	r1, [pc, #600]	; 74bc <main@@Base+0x2890>
    7260:	mov	r0, r4
    7264:	add	r1, pc, r1
    7268:	bl	147e8 <main@@Base+0xfbbc>
    726c:	ldm	r6, {r0, r1}
    7270:	ldrd	r2, [r5, #48]	; 0x30
    7274:	add	ip, sp, #72	; 0x48
    7278:	stm	ip, {r0, r1}
    727c:	ldr	r1, [pc, #572]	; 74c0 <main@@Base+0x2894>
    7280:	str	ip, [sp]
    7284:	add	r1, pc, r1
    7288:	mov	r0, r4
    728c:	bl	15458 <main@@Base+0x1082c>
    7290:	ldr	r3, [pc, #556]	; 74c4 <main@@Base+0x2898>
    7294:	add	r3, pc, r3
    7298:	ldr	r6, [r3, #156]	; 0x9c
    729c:	cmp	r6, #0
    72a0:	beq	72c4 <main@@Base+0x2698>
    72a4:	ldr	r1, [r5, #20]
    72a8:	cmp	r1, #0
    72ac:	beq	744c <main@@Base+0x2820>
    72b0:	mov	r2, #31
    72b4:	mov	r0, r4
    72b8:	bl	1442c <main@@Base+0xf800>
    72bc:	subs	r6, r0, #0
    72c0:	blt	7440 <main@@Base+0x2814>
    72c4:	ldr	r1, [r4, #24]
    72c8:	add	r0, r1, #1
    72cc:	cmp	r0, #9
    72d0:	str	r0, [r4, #24]
    72d4:	bgt	73c4 <main@@Base+0x2798>
    72d8:	ldr	r2, [r4, #16]
    72dc:	cmp	r0, #0
    72e0:	add	r2, r2, #2080	; 0x820
    72e4:	add	r2, r2, #8
    72e8:	streq	r0, [r4, #28]
    72ec:	streq	r2, [r4, #68]	; 0x44
    72f0:	beq	731c <main@@Base+0x26f0>
    72f4:	mov	r0, #0
    72f8:	add	r1, r4, r1, lsl #2
    72fc:	ldr	ip, [r1, #68]	; 0x44
    7300:	ldr	ip, [ip]
    7304:	str	r2, [r1, #72]	; 0x48
    7308:	cmp	ip, #18
    730c:	str	r0, [r1, #32]
    7310:	addeq	r2, r4, #8192	; 0x2000
    7314:	ldreq	r1, [r2, #2160]	; 0x870
    7318:	streq	r1, [r2, #2164]	; 0x874
    731c:	ldr	r2, [r4, #4]
    7320:	ldr	r2, [r2, #20]
    7324:	cmp	r2, #0
    7328:	beq	7334 <main@@Base+0x2708>
    732c:	mov	r0, r4
    7330:	blx	r2
    7334:	mov	r7, #0
    7338:	ldr	r1, [r5, #16]
    733c:	mov	r0, r6
    7340:	b	7348 <main@@Base+0x271c>
    7344:	add	r7, r7, #1
    7348:	cmp	r1, r7
    734c:	bls	73a4 <main@@Base+0x2778>
    7350:	ldr	r2, [r5, #12]
    7354:	ldr	r3, [sp, #52]	; 0x34
    7358:	ldr	r2, [r2, r7, lsl #2]
    735c:	ldr	r3, [r3, #72]	; 0x48
    7360:	ldr	r3, [r3, r2, lsl #2]
    7364:	cmp	r3, #0
    7368:	beq	7344 <main@@Base+0x2718>
    736c:	mov	r3, #1
    7370:	ldr	r1, [sp, #96]	; 0x60
    7374:	str	r3, [sp, #4]
    7378:	add	r3, r1, r2, lsl #3
    737c:	add	r3, r3, #4
    7380:	str	r3, [sp]
    7384:	ldr	r3, [r1, r2, lsl #3]
    7388:	mov	r0, r4
    738c:	ldr	r1, [sp, #24]
    7390:	bl	19634 <main@@Base+0x14a08>
    7394:	cmp	r0, #0
    7398:	blt	7434 <main@@Base+0x2808>
    739c:	ldr	r1, [r5, #16]
    73a0:	b	7344 <main@@Base+0x2718>
    73a4:	mov	r6, r0
    73a8:	mov	r0, r4
    73ac:	bl	ef94 <main@@Base+0xa368>
    73b0:	mov	r0, r4
    73b4:	bl	ef94 <main@@Base+0xa368>
    73b8:	ldr	r2, [fp, #1128]	; 0x468
    73bc:	add	r8, r8, #1
    73c0:	b	6ff8 <main@@Base+0x23cc>
    73c4:	bl	11920 <main@@Base+0xccf4>
    73c8:	mov	r0, r4
    73cc:	bl	ef94 <main@@Base+0xa368>
    73d0:	b	6928 <main@@Base+0x1cfc>
    73d4:	ldr	r1, [pc, #236]	; 74c8 <main@@Base+0x289c>
    73d8:	ldr	r0, [r2, #64]	; 0x40
    73dc:	add	r1, pc, r1
    73e0:	mov	r2, r3
    73e4:	bl	4644 <av_dict_get@plt>
    73e8:	cmp	r0, #0
    73ec:	bne	719c <main@@Base+0x2570>
    73f0:	b	71d0 <main@@Base+0x25a4>
    73f4:	ldr	r1, [pc, #208]	; 74cc <main@@Base+0x28a0>
    73f8:	ldr	r0, [r2, #64]	; 0x40
    73fc:	add	r1, pc, r1
    7400:	mov	r2, r3
    7404:	bl	4644 <av_dict_get@plt>
    7408:	cmp	r0, #0
    740c:	bne	7148 <main@@Base+0x251c>
    7410:	b	717c <main@@Base+0x2550>
    7414:	ldr	r1, [pc, #180]	; 74d0 <main@@Base+0x28a4>
    7418:	ldr	r0, [r2, #64]	; 0x40
    741c:	add	r1, pc, r1
    7420:	mov	r2, r3
    7424:	bl	4644 <av_dict_get@plt>
    7428:	cmp	r0, #0
    742c:	bne	71f0 <main@@Base+0x25c4>
    7430:	b	7224 <main@@Base+0x25f8>
    7434:	mov	r6, r0
    7438:	mov	r0, r4
    743c:	bl	ef94 <main@@Base+0xa368>
    7440:	mov	r0, r4
    7444:	bl	ef94 <main@@Base+0xa368>
    7448:	b	6664 <main@@Base+0x1a38>
    744c:	mov	r6, r1
    7450:	b	72c4 <main@@Base+0x2698>
    7454:	ldr	r1, [pc, #120]	; 74d4 <main@@Base+0x28a8>
    7458:	ldr	r0, [r2, #64]	; 0x40
    745c:	add	r1, pc, r1
    7460:	mov	r2, r3
    7464:	bl	4644 <av_dict_get@plt>
    7468:	cmp	r0, #0
    746c:	bne	70f8 <main@@Base+0x24cc>
    7470:	b	712c <main@@Base+0x2500>
    7474:	ldr	r1, [pc, #92]	; 74d8 <main@@Base+0x28ac>
    7478:	ldr	r0, [r2, #64]	; 0x40
    747c:	add	r1, pc, r1
    7480:	mov	r2, r3
    7484:	bl	4644 <av_dict_get@plt>
    7488:	cmp	r0, #0
    748c:	bne	70a4 <main@@Base+0x2478>
    7490:	b	70d8 <main@@Base+0x24ac>
    7494:	andeq	fp, r2, r4, ror sp
    7498:	muleq	r1, r8, r0
    749c:			; <UNDEFINED> instruction: 0x000181b8
    74a0:			; <UNDEFINED> instruction: 0x000181b8
    74a4:	andeq	fp, r2, ip, ror ip
    74a8:	andeq	r8, r1, r0, ror #11
    74ac:	muleq	r1, r8, r5
    74b0:	andeq	r8, r1, ip, asr r5
    74b4:	andeq	r8, r1, ip, lsl #10
    74b8:	andeq	r8, r1, r0, asr #9
    74bc:	andeq	r8, r1, r8, ror #8
    74c0:	andeq	r8, r1, r0, asr r4
    74c4:	ldrdeq	fp, [r2], -r8
    74c8:	andeq	r8, r1, r0, ror #5
    74cc:			; <UNDEFINED> instruction: 0x000182b4
    74d0:	andeq	r8, r1, r8, lsr #5
    74d4:	andeq	r8, r1, r8, asr #4
    74d8:	andeq	r8, r1, ip, lsl r2
    74dc:	mov	fp, #0
    74e0:	mov	lr, #0
    74e4:	pop	{r1}		; (ldr r1, [sp], #4)
    74e8:	mov	r2, sp
    74ec:	push	{r2}		; (str r2, [sp, #-4]!)
    74f0:	push	{r0}		; (str r0, [sp, #-4]!)
    74f4:	ldr	sl, [pc, #40]	; 7524 <main@@Base+0x28f8>
    74f8:	add	r3, pc, #36	; 0x24
    74fc:	add	sl, sl, r3
    7500:	ldr	ip, [pc, #32]	; 7528 <main@@Base+0x28fc>
    7504:	ldr	ip, [sl, ip]
    7508:	push	{ip}		; (str ip, [sp, #-4]!)
    750c:	ldr	r3, [pc, #24]	; 752c <main@@Base+0x2900>
    7510:	ldr	r3, [sl, r3]
    7514:	ldr	r0, [pc, #20]	; 7530 <main@@Base+0x2904>
    7518:	ldr	r0, [sl, r0]
    751c:	bl	447c <__libc_start_main@plt>
    7520:	bl	4278 <abort@plt>
    7524:	andeq	sl, r2, r0, ror #13
    7528:	ldrdeq	r0, [r0], -r4
    752c:			; <UNDEFINED> instruction: 0x000003bc
    7530:	andeq	r0, r0, r8, lsr #7
    7534:	ldr	r3, [pc, #20]	; 7550 <main@@Base+0x2924>
    7538:	ldr	r2, [pc, #20]	; 7554 <main@@Base+0x2928>
    753c:	add	r3, pc, r3
    7540:	ldr	r2, [r3, r2]
    7544:	cmp	r2, #0
    7548:	bxeq	lr
    754c:	b	4488 <__gmon_start__@plt>
    7550:	andeq	sl, r2, r0, asr #13
    7554:	ldrdeq	r0, [r0], -ip
    7558:	ldr	r0, [pc, #44]	; 758c <main@@Base+0x2960>
    755c:	ldr	r3, [pc, #44]	; 7590 <main@@Base+0x2964>
    7560:	add	r0, pc, r0
    7564:	add	r3, pc, r3
    7568:	cmp	r3, r0
    756c:	ldr	r3, [pc, #32]	; 7594 <main@@Base+0x2968>
    7570:	add	r3, pc, r3
    7574:	bxeq	lr
    7578:	ldr	r2, [pc, #24]	; 7598 <main@@Base+0x296c>
    757c:	ldr	r3, [r3, r2]
    7580:	cmp	r3, #0
    7584:	bxeq	lr
    7588:	bx	r3
    758c:	strdeq	fp, [r2], -r8
    7590:	strdeq	fp, [r2], -r4
    7594:	andeq	sl, r2, ip, lsl #13
    7598:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    759c:	ldr	r0, [pc, #56]	; 75dc <main@@Base+0x29b0>
    75a0:	ldr	r3, [pc, #56]	; 75e0 <main@@Base+0x29b4>
    75a4:	add	r0, pc, r0
    75a8:	add	r3, pc, r3
    75ac:	sub	r1, r3, r0
    75b0:	ldr	r3, [pc, #44]	; 75e4 <main@@Base+0x29b8>
    75b4:	asr	r1, r1, #2
    75b8:	add	r3, pc, r3
    75bc:	add	r1, r1, r1, lsr #31
    75c0:	asrs	r1, r1, #1
    75c4:	bxeq	lr
    75c8:	ldr	r2, [pc, #24]	; 75e8 <main@@Base+0x29bc>
    75cc:	ldr	r3, [r3, r2]
    75d0:	cmp	r3, #0
    75d4:	bxeq	lr
    75d8:	bx	r3
    75dc:			; <UNDEFINED> instruction: 0x0002b6b4
    75e0:			; <UNDEFINED> instruction: 0x0002b6b0
    75e4:	andeq	sl, r2, r4, asr #12
    75e8:	andeq	r0, r0, ip, asr #7
    75ec:	ldr	r3, [pc, #76]	; 7640 <main@@Base+0x2a14>
    75f0:	ldr	r2, [pc, #76]	; 7644 <main@@Base+0x2a18>
    75f4:	add	r3, pc, r3
    75f8:	add	r2, pc, r2
    75fc:	ldrb	r3, [r3]
    7600:	cmp	r3, #0
    7604:	bxne	lr
    7608:	ldr	r3, [pc, #56]	; 7648 <main@@Base+0x2a1c>
    760c:	push	{r4, lr}
    7610:	ldr	r3, [r2, r3]
    7614:	cmp	r3, #0
    7618:	beq	7628 <main@@Base+0x29fc>
    761c:	ldr	r3, [pc, #40]	; 764c <main@@Base+0x2a20>
    7620:	ldr	r0, [pc, r3]
    7624:	bl	40b0 <__cxa_finalize@plt>
    7628:	bl	7558 <main@@Base+0x292c>
    762c:	ldr	r3, [pc, #28]	; 7650 <main@@Base+0x2a24>
    7630:	mov	r2, #1
    7634:	add	r3, pc, r3
    7638:	strb	r2, [r3]
    763c:	pop	{r4, pc}
    7640:	andeq	fp, r2, r4, ror #12
    7644:	andeq	sl, r2, r4, lsl #12
    7648:			; <UNDEFINED> instruction: 0x000003b4
    764c:	ldrdeq	sl, [r2], -ip
    7650:	andeq	fp, r2, r4, lsr #12
    7654:	b	759c <main@@Base+0x2970>
    7658:	push	{lr}		; (str lr, [sp, #-4]!)
    765c:	ldr	r1, [pc, #68]	; 76a8 <main@@Base+0x2a7c>
    7660:	ldr	ip, [pc, #68]	; 76ac <main@@Base+0x2a80>
    7664:	add	r1, pc, r1
    7668:	ldr	ip, [r1, ip]
    766c:	sub	sp, sp, #12
    7670:	ldr	lr, [ip]
    7674:	ldr	r0, [pc, #52]	; 76b0 <main@@Base+0x2a84>
    7678:	str	lr, [sp, #4]
    767c:	ldr	lr, [sp, #4]
    7680:	ldr	ip, [ip]
    7684:	ldr	r1, [r1, r0]
    7688:	cmp	lr, ip
    768c:	ldr	r0, [r1]
    7690:	bne	76a4 <main@@Base+0x2a78>
    7694:	mov	r1, #1
    7698:	add	sp, sp, #12
    769c:	pop	{lr}		; (ldr lr, [sp], #4)
    76a0:	b	465c <__vfprintf_chk@plt>
    76a4:	bl	3f00 <__stack_chk_fail@plt>
    76a8:	muleq	r2, r8, r5
    76ac:	andeq	r0, r0, r8, ror #7
    76b0:			; <UNDEFINED> instruction: 0x000003b8
    76b4:	push	{lr}		; (str lr, [sp, #-4]!)
    76b8:	ldr	r3, [pc, #128]	; 7740 <main@@Base+0x2b14>
    76bc:	ldr	r2, [pc, #128]	; 7744 <main@@Base+0x2b18>
    76c0:	add	r3, pc, r3
    76c4:	ldr	r0, [r0]
    76c8:	ldr	r1, [r1]
    76cc:	ldr	r2, [r3, r2]
    76d0:	ldr	lr, [r0, #4]
    76d4:	ldr	ip, [r1, #4]
    76d8:	ldr	r3, [r2]
    76dc:	sub	sp, sp, #12
    76e0:	cmp	lr, ip
    76e4:	str	r3, [sp, #4]
    76e8:	beq	7718 <main@@Base+0x2aec>
    76ec:	movgt	ip, #1
    76f0:	movle	ip, #0
    76f4:	movlt	r0, #1
    76f8:	movge	r0, #0
    76fc:	ldr	r1, [sp, #4]
    7700:	ldr	r3, [r2]
    7704:	sub	r0, ip, r0
    7708:	cmp	r1, r3
    770c:	bne	773c <main@@Base+0x2b10>
    7710:	add	sp, sp, #12
    7714:	pop	{pc}		; (ldr pc, [sp], #4)
    7718:	ldr	ip, [sp, #4]
    771c:	ldr	r3, [r2]
    7720:	cmp	ip, r3
    7724:	bne	773c <main@@Base+0x2b10>
    7728:	ldr	r1, [r1, #8]
    772c:	ldr	r0, [r0, #8]
    7730:	add	sp, sp, #12
    7734:	pop	{lr}		; (ldr lr, [sp], #4)
    7738:	b	46c8 <strcmp@plt>
    773c:	bl	3f00 <__stack_chk_fail@plt>
    7740:	andeq	sl, r2, ip, lsr r5
    7744:	andeq	r0, r0, r8, ror #7
    7748:	push	{r4, r5, r6, r7, r8, r9, lr}
    774c:	ldr	ip, [pc, #164]	; 77f8 <main@@Base+0x2bcc>
    7750:	ldr	lr, [pc, #164]	; 77fc <main@@Base+0x2bd0>
    7754:	add	ip, pc, ip
    7758:	ldr	r5, [ip, lr]
    775c:	sub	sp, sp, #1040	; 0x410
    7760:	ldr	ip, [r5]
    7764:	sub	sp, sp, #12
    7768:	mov	r6, r1
    776c:	mov	r8, r0
    7770:	str	r3, [sp, #16]
    7774:	str	ip, [sp, #1044]	; 0x414
    7778:	mov	r9, r2
    777c:	bl	41c4 <av_log_default_callback@plt>
    7780:	mov	r3, #1024	; 0x400
    7784:	ldr	r4, [pc, #116]	; 7800 <main@@Base+0x2bd4>
    7788:	add	r7, sp, #20
    778c:	add	r4, pc, r4
    7790:	stmib	sp, {r3, r4}
    7794:	mov	r2, r9
    7798:	ldr	r3, [sp, #16]
    779c:	mov	r0, r8
    77a0:	mov	r1, r6
    77a4:	str	r7, [sp]
    77a8:	bl	4584 <av_log_format_line@plt>
    77ac:	ldr	r3, [r4, #4]
    77b0:	cmp	r3, r6
    77b4:	bge	77d4 <main@@Base+0x2ba8>
    77b8:	ldr	r2, [sp, #1044]	; 0x414
    77bc:	ldr	r3, [r5]
    77c0:	cmp	r2, r3
    77c4:	bne	77f4 <main@@Base+0x2bc8>
    77c8:	add	sp, sp, #1040	; 0x410
    77cc:	add	sp, sp, #12
    77d0:	pop	{r4, r5, r6, r7, r8, r9, pc}
    77d4:	ldr	r4, [pc, #40]	; 7804 <main@@Base+0x2bd8>
    77d8:	mov	r0, r7
    77dc:	add	r4, pc, r4
    77e0:	ldr	r1, [r4]
    77e4:	bl	3db0 <fputs@plt>
    77e8:	ldr	r0, [r4]
    77ec:	bl	417c <fflush@plt>
    77f0:	b	77b8 <main@@Base+0x2b8c>
    77f4:	bl	3f00 <__stack_chk_fail@plt>
    77f8:	andeq	sl, r2, r8, lsr #9
    77fc:	andeq	r0, r0, r8, ror #7
    7800:	andeq	sl, r2, r4, ror r8
    7804:	andeq	fp, r2, r0, lsl #9
    7808:	push	{r4, r5, r6, r7, lr}
    780c:	ldr	r3, [pc, #204]	; 78e0 <main@@Base+0x2cb4>
    7810:	ldr	ip, [pc, #204]	; 78e4 <main@@Base+0x2cb8>
    7814:	add	r3, pc, r3
    7818:	ldr	r5, [r3, ip]
    781c:	sub	sp, sp, #20
    7820:	ldr	r3, [r5]
    7824:	subs	r4, r0, #0
    7828:	str	r3, [sp, #12]
    782c:	beq	78c0 <main@@Base+0x2c94>
    7830:	mov	r6, r1
    7834:	mov	r7, r2
    7838:	bl	4080 <av_strdup@plt>
    783c:	cmp	r0, #0
    7840:	str	r0, [r6]
    7844:	beq	78d4 <main@@Base+0x2ca8>
    7848:	mov	r1, #44	; 0x2c
    784c:	bl	4494 <strchr@plt>
    7850:	cmp	r0, #0
    7854:	beq	786c <main@@Base+0x2c40>
    7858:	mov	r3, #0
    785c:	ldrb	r2, [r0, #1]
    7860:	strb	r3, [r0]
    7864:	cmp	r2, r3
    7868:	bne	788c <main@@Base+0x2c60>
    786c:	mov	r4, #0
    7870:	ldr	r2, [sp, #12]
    7874:	ldr	r3, [r5]
    7878:	mov	r0, r4
    787c:	cmp	r2, r3
    7880:	bne	78dc <main@@Base+0x2cb0>
    7884:	add	sp, sp, #20
    7888:	pop	{r4, r5, r6, r7, pc}
    788c:	str	r3, [sp]
    7890:	ldr	r2, [pc, #80]	; 78e8 <main@@Base+0x2cbc>
    7894:	ldr	r3, [pc, #80]	; 78ec <main@@Base+0x2cc0>
    7898:	add	r1, r0, #1
    789c:	add	r3, pc, r3
    78a0:	mov	r0, r7
    78a4:	add	r2, pc, r2
    78a8:	bl	45a8 <av_dict_parse_string@plt>
    78ac:	subs	r4, r0, #0
    78b0:	bge	786c <main@@Base+0x2c40>
    78b4:	mov	r0, r6
    78b8:	bl	3ec4 <av_freep@plt>
    78bc:	b	7870 <main@@Base+0x2c44>
    78c0:	ldr	r1, [pc, #40]	; 78f0 <main@@Base+0x2cc4>
    78c4:	mov	r0, #1
    78c8:	add	r1, pc, r1
    78cc:	bl	474c <__printf_chk@plt>
    78d0:	b	7870 <main@@Base+0x2c44>
    78d4:	mvn	r4, #11
    78d8:	b	7870 <main@@Base+0x2c44>
    78dc:	bl	3f00 <__stack_chk_fail@plt>
    78e0:	andeq	sl, r2, r8, ror #7
    78e4:	andeq	r0, r0, r8, ror #7
    78e8:	andeq	r6, r1, ip, asr #18
    78ec:	andeq	r7, r1, r0, asr r2
    78f0:	andeq	r4, r1, r0, lsr r3
    78f4:	mov	ip, #0
    78f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    78fc:	ldr	r3, [pc, #404]	; 7a98 <main@@Base+0x2e6c>
    7900:	ldr	r2, [pc, #404]	; 7a9c <main@@Base+0x2e70>
    7904:	add	r3, pc, r3
    7908:	ldr	r6, [r3, r2]
    790c:	sub	sp, sp, #16
    7910:	ldr	r3, [r6]
    7914:	subs	r5, r0, #0
    7918:	str	ip, [sp, #8]
    791c:	str	r3, [sp, #12]
    7920:	beq	7a8c <main@@Base+0x2e60>
    7924:	ldr	r3, [r5, #20]
    7928:	cmp	r3, ip
    792c:	beq	7a8c <main@@Base+0x2e60>
    7930:	ldr	r3, [r3, #32]
    7934:	bic	r4, r3, #2
    7938:	cmp	r4, #41	; 0x29
    793c:	cmpne	r3, #45	; 0x2d
    7940:	movne	r4, #1
    7944:	moveq	r4, #0
    7948:	bne	7a8c <main@@Base+0x2e60>
    794c:	mov	r8, r1
    7950:	ldr	r1, [pc, #328]	; 7aa0 <main@@Base+0x2e74>
    7954:	ldr	r2, [r5]
    7958:	add	r1, pc, r1
    795c:	mov	r0, #1
    7960:	bl	474c <__printf_chk@plt>
    7964:	ldr	r3, [r5, #76]	; 0x4c
    7968:	cmp	r3, #0
    796c:	beq	7a5c <main@@Base+0x2e30>
    7970:	add	r7, sp, #8
    7974:	mov	r2, r8
    7978:	mov	r0, r5
    797c:	mov	r3, r7
    7980:	mov	r1, r4
    7984:	bl	4518 <avdevice_list_input_sources@plt>
    7988:	subs	sl, r0, #0
    798c:	blt	7a78 <main@@Base+0x2e4c>
    7990:	ldr	r3, [sp, #8]
    7994:	ldr	r2, [r3, #4]
    7998:	cmp	r2, #0
    799c:	ble	7a00 <main@@Base+0x2dd4>
    79a0:	ldr	r9, [pc, #252]	; 7aa4 <main@@Base+0x2e78>
    79a4:	ldr	r8, [pc, #252]	; 7aa8 <main@@Base+0x2e7c>
    79a8:	ldr	r5, [pc, #252]	; 7aac <main@@Base+0x2e80>
    79ac:	add	r9, pc, r9
    79b0:	add	r8, pc, r8
    79b4:	add	r5, pc, r5
    79b8:	ldr	r2, [r3, #8]
    79bc:	ldr	r3, [r3]
    79c0:	cmp	r2, r4
    79c4:	beq	7a24 <main@@Base+0x2df8>
    79c8:	ldr	r0, [r3, r4, lsl #2]
    79cc:	ldr	r1, [pc, #220]	; 7ab0 <main@@Base+0x2e84>
    79d0:	ldr	r3, [r0]
    79d4:	ldr	r0, [r0, #4]
    79d8:	mov	r2, r5
    79dc:	str	r0, [sp]
    79e0:	add	r1, pc, r1
    79e4:	mov	r0, #1
    79e8:	bl	474c <__printf_chk@plt>
    79ec:	ldr	r3, [sp, #8]
    79f0:	add	r4, r4, #1
    79f4:	ldr	r2, [r3, #4]
    79f8:	cmp	r4, r2
    79fc:	blt	79b8 <main@@Base+0x2d8c>
    7a00:	mov	r0, r7
    7a04:	bl	3fcc <avdevice_free_list_devices@plt>
    7a08:	ldr	r2, [sp, #12]
    7a0c:	ldr	r3, [r6]
    7a10:	mov	r0, sl
    7a14:	cmp	r2, r3
    7a18:	bne	7a94 <main@@Base+0x2e68>
    7a1c:	add	sp, sp, #16
    7a20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    7a24:	ldr	r0, [r3, r4, lsl #2]
    7a28:	mov	r2, r9
    7a2c:	ldr	r3, [r0]
    7a30:	ldr	r0, [r0, #4]
    7a34:	mov	r1, r8
    7a38:	str	r0, [sp]
    7a3c:	mov	r0, #1
    7a40:	bl	474c <__printf_chk@plt>
    7a44:	ldr	r3, [sp, #8]
    7a48:	add	r4, r4, #1
    7a4c:	ldr	r2, [r3, #4]
    7a50:	cmp	r2, r4
    7a54:	bgt	79b8 <main@@Base+0x2d8c>
    7a58:	b	7a00 <main@@Base+0x2dd4>
    7a5c:	ldr	r1, [pc, #80]	; 7ab4 <main@@Base+0x2e88>
    7a60:	mov	r0, #1
    7a64:	add	r1, pc, r1
    7a68:	bl	474c <__printf_chk@plt>
    7a6c:	mvn	sl, #37	; 0x25
    7a70:	add	r7, sp, #8
    7a74:	b	7a00 <main@@Base+0x2dd4>
    7a78:	ldr	r1, [pc, #56]	; 7ab8 <main@@Base+0x2e8c>
    7a7c:	mov	r0, #1
    7a80:	add	r1, pc, r1
    7a84:	bl	474c <__printf_chk@plt>
    7a88:	b	7a00 <main@@Base+0x2dd4>
    7a8c:	mvn	sl, #21
    7a90:	b	7a08 <main@@Base+0x2ddc>
    7a94:	bl	3f00 <__stack_chk_fail@plt>
    7a98:	strdeq	sl, [r2], -r8
    7a9c:	andeq	r0, r0, r8, ror #7
    7aa0:	andeq	r4, r1, r4, lsl #6
    7aa4:	andeq	r4, r1, ip, lsl r3
    7aa8:	andeq	r4, r1, ip, lsl #6
    7aac:	andeq	r4, r1, r0, asr lr
    7ab0:	ldrdeq	r4, [r1], -ip
    7ab4:	andeq	r4, r1, r8, lsl r2
    7ab8:	andeq	r4, r1, r4, lsr #4
    7abc:	mov	ip, #0
    7ac0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    7ac4:	ldr	r3, [pc, #404]	; 7c60 <main@@Base+0x3034>
    7ac8:	ldr	r2, [pc, #404]	; 7c64 <main@@Base+0x3038>
    7acc:	add	r3, pc, r3
    7ad0:	ldr	r6, [r3, r2]
    7ad4:	sub	sp, sp, #16
    7ad8:	ldr	r3, [r6]
    7adc:	subs	r5, r0, #0
    7ae0:	str	ip, [sp, #8]
    7ae4:	str	r3, [sp, #12]
    7ae8:	beq	7c54 <main@@Base+0x3028>
    7aec:	ldr	r3, [r5, #36]	; 0x24
    7af0:	cmp	r3, ip
    7af4:	beq	7c54 <main@@Base+0x3028>
    7af8:	ldr	r3, [r3, #32]
    7afc:	bic	r4, r3, #2
    7b00:	cmp	r4, #40	; 0x28
    7b04:	cmpne	r3, #44	; 0x2c
    7b08:	movne	r4, #1
    7b0c:	moveq	r4, #0
    7b10:	bne	7c54 <main@@Base+0x3028>
    7b14:	mov	r8, r1
    7b18:	ldr	r1, [pc, #328]	; 7c68 <main@@Base+0x303c>
    7b1c:	ldr	r2, [r5]
    7b20:	add	r1, pc, r1
    7b24:	mov	r0, #1
    7b28:	bl	474c <__printf_chk@plt>
    7b2c:	ldr	r3, [r5, #80]	; 0x50
    7b30:	cmp	r3, #0
    7b34:	beq	7c24 <main@@Base+0x2ff8>
    7b38:	add	r7, sp, #8
    7b3c:	mov	r2, r8
    7b40:	mov	r0, r5
    7b44:	mov	r3, r7
    7b48:	mov	r1, r4
    7b4c:	bl	4674 <avdevice_list_output_sinks@plt>
    7b50:	subs	sl, r0, #0
    7b54:	blt	7c40 <main@@Base+0x3014>
    7b58:	ldr	r3, [sp, #8]
    7b5c:	ldr	r2, [r3, #4]
    7b60:	cmp	r2, #0
    7b64:	ble	7bc8 <main@@Base+0x2f9c>
    7b68:	ldr	r9, [pc, #252]	; 7c6c <main@@Base+0x3040>
    7b6c:	ldr	r8, [pc, #252]	; 7c70 <main@@Base+0x3044>
    7b70:	ldr	r5, [pc, #252]	; 7c74 <main@@Base+0x3048>
    7b74:	add	r9, pc, r9
    7b78:	add	r8, pc, r8
    7b7c:	add	r5, pc, r5
    7b80:	ldr	r2, [r3, #8]
    7b84:	ldr	r3, [r3]
    7b88:	cmp	r2, r4
    7b8c:	beq	7bec <main@@Base+0x2fc0>
    7b90:	ldr	r0, [r3, r4, lsl #2]
    7b94:	ldr	r1, [pc, #220]	; 7c78 <main@@Base+0x304c>
    7b98:	ldr	r3, [r0]
    7b9c:	ldr	r0, [r0, #4]
    7ba0:	mov	r2, r5
    7ba4:	str	r0, [sp]
    7ba8:	add	r1, pc, r1
    7bac:	mov	r0, #1
    7bb0:	bl	474c <__printf_chk@plt>
    7bb4:	ldr	r3, [sp, #8]
    7bb8:	add	r4, r4, #1
    7bbc:	ldr	r2, [r3, #4]
    7bc0:	cmp	r4, r2
    7bc4:	blt	7b80 <main@@Base+0x2f54>
    7bc8:	mov	r0, r7
    7bcc:	bl	3fcc <avdevice_free_list_devices@plt>
    7bd0:	ldr	r2, [sp, #12]
    7bd4:	ldr	r3, [r6]
    7bd8:	mov	r0, sl
    7bdc:	cmp	r2, r3
    7be0:	bne	7c5c <main@@Base+0x3030>
    7be4:	add	sp, sp, #16
    7be8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    7bec:	ldr	r0, [r3, r4, lsl #2]
    7bf0:	mov	r2, r9
    7bf4:	ldr	r3, [r0]
    7bf8:	ldr	r0, [r0, #4]
    7bfc:	mov	r1, r8
    7c00:	str	r0, [sp]
    7c04:	mov	r0, #1
    7c08:	bl	474c <__printf_chk@plt>
    7c0c:	ldr	r3, [sp, #8]
    7c10:	add	r4, r4, #1
    7c14:	ldr	r2, [r3, #4]
    7c18:	cmp	r2, r4
    7c1c:	bgt	7b80 <main@@Base+0x2f54>
    7c20:	b	7bc8 <main@@Base+0x2f9c>
    7c24:	ldr	r1, [pc, #80]	; 7c7c <main@@Base+0x3050>
    7c28:	mov	r0, #1
    7c2c:	add	r1, pc, r1
    7c30:	bl	474c <__printf_chk@plt>
    7c34:	mvn	sl, #37	; 0x25
    7c38:	add	r7, sp, #8
    7c3c:	b	7bc8 <main@@Base+0x2f9c>
    7c40:	ldr	r1, [pc, #56]	; 7c80 <main@@Base+0x3054>
    7c44:	mov	r0, #1
    7c48:	add	r1, pc, r1
    7c4c:	bl	474c <__printf_chk@plt>
    7c50:	b	7bc8 <main@@Base+0x2f9c>
    7c54:	mvn	sl, #21
    7c58:	b	7bd0 <main@@Base+0x2fa4>
    7c5c:	bl	3f00 <__stack_chk_fail@plt>
    7c60:	andeq	sl, r2, r0, lsr r1
    7c64:	andeq	r0, r0, r8, ror #7
    7c68:	andeq	r4, r1, ip, lsr #3
    7c6c:	andeq	r4, r1, r4, asr r1
    7c70:	andeq	r4, r1, r4, asr #2
    7c74:	andeq	r4, r1, r8, lsl #25
    7c78:	andeq	r4, r1, r4, lsl r1
    7c7c:	andeq	r4, r1, r0, asr #1
    7c80:	andeq	r4, r1, ip, asr #1
    7c84:	mov	ip, #0
    7c88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7c8c:	ldr	r3, [pc, #900]	; 8018 <main@@Base+0x33ec>
    7c90:	sub	sp, sp, #60	; 0x3c
    7c94:	ldr	r2, [pc, #896]	; 801c <main@@Base+0x33f0>
    7c98:	cmp	r0, #0
    7c9c:	add	r3, pc, r3
    7ca0:	str	r0, [sp, #16]
    7ca4:	ldr	r2, [r3, r2]
    7ca8:	str	r1, [sp, #20]
    7cac:	ldr	r3, [r2]
    7cb0:	str	r2, [sp, #36]	; 0x24
    7cb4:	str	ip, [sp, #44]	; 0x2c
    7cb8:	str	r3, [sp, #52]	; 0x34
    7cbc:	str	ip, [sp, #48]	; 0x30
    7cc0:	bne	7f20 <main@@Base+0x32f4>
    7cc4:	ldr	r2, [pc, #852]	; 8020 <main@@Base+0x33f4>
    7cc8:	add	r2, pc, r2
    7ccc:	ldr	r1, [pc, #848]	; 8024 <main@@Base+0x33f8>
    7cd0:	mov	r0, #1
    7cd4:	add	r1, pc, r1
    7cd8:	bl	474c <__printf_chk@plt>
    7cdc:	ldr	r3, [pc, #836]	; 8028 <main@@Base+0x33fc>
    7ce0:	ldr	r7, [pc, #836]	; 802c <main@@Base+0x3400>
    7ce4:	add	r3, pc, r3
    7ce8:	str	r3, [sp, #24]
    7cec:	ldr	r3, [pc, #828]	; 8030 <main@@Base+0x3404>
    7cf0:	add	r7, pc, r7
    7cf4:	add	r3, pc, r3
    7cf8:	str	r3, [sp, #28]
    7cfc:	ldr	r3, [pc, #816]	; 8034 <main@@Base+0x3408>
    7d00:	add	r3, pc, r3
    7d04:	str	r3, [sp, #32]
    7d08:	ldr	r3, [sp, #20]
    7d0c:	mov	r5, #0
    7d10:	cmp	r3, #1
    7d14:	ldr	r3, [sp, #16]
    7d18:	bne	7e44 <main@@Base+0x3218>
    7d1c:	cmp	r3, r5
    7d20:	str	r5, [sp, #44]	; 0x2c
    7d24:	movne	r4, r5
    7d28:	movne	r8, r5
    7d2c:	beq	7f2c <main@@Base+0x3300>
    7d30:	mov	r9, #0
    7d34:	add	r6, sp, #44	; 0x2c
    7d38:	mov	r0, r6
    7d3c:	bl	3e28 <av_demuxer_iterate@plt>
    7d40:	subs	sl, r0, #0
    7d44:	beq	7d98 <main@@Base+0x316c>
    7d48:	ldr	r3, [sl, #20]
    7d4c:	cmp	r3, #0
    7d50:	beq	7d38 <main@@Base+0x310c>
    7d54:	ldr	r3, [r3, #32]
    7d58:	sub	r3, r3, #40	; 0x28
    7d5c:	cmp	r3, #5
    7d60:	bhi	7d38 <main@@Base+0x310c>
    7d64:	cmp	r4, #0
    7d68:	ldr	fp, [sl]
    7d6c:	beq	7de0 <main@@Base+0x31b4>
    7d70:	mov	r1, r4
    7d74:	mov	r0, fp
    7d78:	bl	46c8 <strcmp@plt>
    7d7c:	cmp	r0, #0
    7d80:	blt	7e04 <main@@Base+0x31d8>
    7d84:	mov	r0, r6
    7d88:	moveq	r9, #1
    7d8c:	bl	3e28 <av_demuxer_iterate@plt>
    7d90:	subs	sl, r0, #0
    7d94:	bne	7d48 <main@@Base+0x311c>
    7d98:	subs	r7, r4, #0
    7d9c:	beq	7f00 <main@@Base+0x32d4>
    7da0:	ldr	r3, [sp, #24]
    7da4:	cmp	r9, #0
    7da8:	ldr	r2, [sp, #28]
    7dac:	movne	r2, r3
    7db0:	cmp	r8, #0
    7db4:	bne	7e28 <main@@Base+0x31fc>
    7db8:	ldr	r3, [pc, #632]	; 8038 <main@@Base+0x340c>
    7dbc:	cmp	r5, #0
    7dc0:	add	r3, pc, r3
    7dc4:	beq	7e38 <main@@Base+0x320c>
    7dc8:	ldr	r1, [pc, #620]	; 803c <main@@Base+0x3410>
    7dcc:	strd	r4, [sp]
    7dd0:	add	r1, pc, r1
    7dd4:	mov	r0, #1
    7dd8:	bl	474c <__printf_chk@plt>
    7ddc:	b	7d08 <main@@Base+0x30dc>
    7de0:	mov	r1, r7
    7de4:	mov	r0, fp
    7de8:	bl	46c8 <strcmp@plt>
    7dec:	cmp	r0, #0
    7df0:	ldrgt	r5, [sl, #4]
    7df4:	movgt	r4, fp
    7df8:	movgt	r8, #0
    7dfc:	movgt	r9, #1
    7e00:	b	7d38 <main@@Base+0x310c>
    7e04:	mov	r1, r7
    7e08:	mov	r0, fp
    7e0c:	bl	46c8 <strcmp@plt>
    7e10:	cmp	r0, #0
    7e14:	ldrgt	r5, [sl, #4]
    7e18:	movgt	r4, fp
    7e1c:	movgt	r8, #0
    7e20:	movgt	r9, #1
    7e24:	b	7d38 <main@@Base+0x310c>
    7e28:	ldr	r3, [pc, #528]	; 8040 <main@@Base+0x3414>
    7e2c:	cmp	r5, #0
    7e30:	add	r3, pc, r3
    7e34:	bne	7dc8 <main@@Base+0x319c>
    7e38:	ldr	r5, [pc, #516]	; 8044 <main@@Base+0x3418>
    7e3c:	add	r5, pc, r5
    7e40:	b	7dc8 <main@@Base+0x319c>
    7e44:	cmp	r3, r5
    7e48:	addne	r3, sp, #48	; 0x30
    7e4c:	str	r5, [sp, #48]	; 0x30
    7e50:	movne	r4, r5
    7e54:	movne	r8, r5
    7e58:	strne	r3, [sp, #12]
    7e5c:	beq	7f7c <main@@Base+0x3350>
    7e60:	ldr	r0, [sp, #12]
    7e64:	bl	450c <av_muxer_iterate@plt>
    7e68:	subs	r6, r0, #0
    7e6c:	beq	7ed8 <main@@Base+0x32ac>
    7e70:	ldr	r3, [r6, #36]	; 0x24
    7e74:	cmp	r3, #0
    7e78:	beq	7e60 <main@@Base+0x3234>
    7e7c:	ldr	r3, [r3, #32]
    7e80:	sub	r3, r3, #40	; 0x28
    7e84:	cmp	r3, #5
    7e88:	bhi	7e60 <main@@Base+0x3234>
    7e8c:	cmp	r4, #0
    7e90:	ldr	r9, [r6]
    7e94:	beq	7eac <main@@Base+0x3280>
    7e98:	mov	r1, r4
    7e9c:	mov	r0, r9
    7ea0:	bl	46c8 <strcmp@plt>
    7ea4:	cmp	r0, #0
    7ea8:	bge	7e60 <main@@Base+0x3234>
    7eac:	mov	r1, r7
    7eb0:	mov	r0, r9
    7eb4:	bl	46c8 <strcmp@plt>
    7eb8:	cmp	r0, #0
    7ebc:	ldr	r0, [sp, #12]
    7ec0:	ldrgt	r5, [r6, #4]
    7ec4:	movgt	r4, r9
    7ec8:	ldrgt	r8, [sp, #16]
    7ecc:	bl	450c <av_muxer_iterate@plt>
    7ed0:	subs	r6, r0, #0
    7ed4:	bne	7e70 <main@@Base+0x3244>
    7ed8:	ldr	r3, [sp, #20]
    7edc:	cmp	r3, #2
    7ee0:	bne	7ef8 <main@@Base+0x32cc>
    7ee4:	cmp	r4, #0
    7ee8:	beq	7f00 <main@@Base+0x32d4>
    7eec:	mov	r7, r4
    7ef0:	ldr	r2, [sp, #32]
    7ef4:	b	7db0 <main@@Base+0x3184>
    7ef8:	str	r6, [sp, #44]	; 0x2c
    7efc:	b	7d30 <main@@Base+0x3104>
    7f00:	ldr	r3, [sp, #36]	; 0x24
    7f04:	ldr	r2, [sp, #52]	; 0x34
    7f08:	ldr	r3, [r3]
    7f0c:	mov	r0, #0
    7f10:	cmp	r2, r3
    7f14:	bne	7f78 <main@@Base+0x334c>
    7f18:	add	sp, sp, #60	; 0x3c
    7f1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7f20:	ldr	r2, [pc, #288]	; 8048 <main@@Base+0x341c>
    7f24:	add	r2, pc, r2
    7f28:	b	7ccc <main@@Base+0x30a0>
    7f2c:	mov	r4, r3
    7f30:	mov	r8, r3
    7f34:	mov	r5, r3
    7f38:	mov	r9, #0
    7f3c:	add	r6, sp, #44	; 0x2c
    7f40:	mov	r0, r6
    7f44:	bl	3e28 <av_demuxer_iterate@plt>
    7f48:	subs	fp, r0, #0
    7f4c:	beq	7d98 <main@@Base+0x316c>
    7f50:	cmp	r4, #0
    7f54:	ldr	sl, [fp]
    7f58:	beq	7fe0 <main@@Base+0x33b4>
    7f5c:	mov	r1, r4
    7f60:	mov	r0, sl
    7f64:	bl	46c8 <strcmp@plt>
    7f68:	cmp	r0, #0
    7f6c:	blt	7fe0 <main@@Base+0x33b4>
    7f70:	moveq	r9, #1
    7f74:	b	7f40 <main@@Base+0x3314>
    7f78:	bl	3f00 <__stack_chk_fail@plt>
    7f7c:	mov	r4, r3
    7f80:	mov	r8, r3
    7f84:	mov	r5, r3
    7f88:	add	r3, sp, #48	; 0x30
    7f8c:	str	r3, [sp, #12]
    7f90:	ldr	r0, [sp, #12]
    7f94:	bl	450c <av_muxer_iterate@plt>
    7f98:	subs	r6, r0, #0
    7f9c:	beq	8004 <main@@Base+0x33d8>
    7fa0:	cmp	r4, #0
    7fa4:	ldr	r9, [r6]
    7fa8:	beq	7fc0 <main@@Base+0x3394>
    7fac:	mov	r1, r4
    7fb0:	mov	r0, r9
    7fb4:	bl	46c8 <strcmp@plt>
    7fb8:	cmp	r0, #0
    7fbc:	bge	7f90 <main@@Base+0x3364>
    7fc0:	mov	r1, r7
    7fc4:	mov	r0, r9
    7fc8:	bl	46c8 <strcmp@plt>
    7fcc:	cmp	r0, #0
    7fd0:	ldrgt	r5, [r6, #4]
    7fd4:	movgt	r4, r9
    7fd8:	movgt	r8, #1
    7fdc:	b	7f90 <main@@Base+0x3364>
    7fe0:	mov	r1, r7
    7fe4:	mov	r0, sl
    7fe8:	bl	46c8 <strcmp@plt>
    7fec:	cmp	r0, #0
    7ff0:	ldrgt	r5, [fp, #4]
    7ff4:	movgt	r4, sl
    7ff8:	movgt	r8, #0
    7ffc:	movgt	r9, #1
    8000:	b	7f40 <main@@Base+0x3314>
    8004:	ldr	r3, [sp, #20]
    8008:	cmp	r3, #2
    800c:	beq	7ee4 <main@@Base+0x32b8>
    8010:	str	r6, [sp, #44]	; 0x2c
    8014:	b	7f38 <main@@Base+0x330c>
    8018:	andeq	r9, r2, r0, ror #30
    801c:	andeq	r0, r0, r8, ror #7
    8020:	andeq	r4, r1, ip, rrx
    8024:	andeq	r4, r1, ip, ror r0
    8028:	andeq	r4, r1, r4, rrx
    802c:	andeq	r4, r1, r4, asr r0
    8030:	andeq	r4, r1, r0, lsl fp
    8034:	andeq	r4, r1, r4, lsl #22
    8038:	andeq	r4, r1, r4, asr #20
    803c:			; <UNDEFINED> instruction: 0x00013fb8
    8040:	andeq	r3, r1, ip, lsl pc
    8044:	andeq	r4, r1, r8, asr #19
    8048:	andeq	r3, r1, r4, lsl #28
    804c:	push	{r4, r5, r6, r7, r8, lr}
    8050:	ldr	r3, [pc, #328]	; 81a0 <main@@Base+0x3574>
    8054:	ldr	r2, [pc, #328]	; 81a4 <main@@Base+0x3578>
    8058:	add	r3, pc, r3
    805c:	ldr	r6, [r3, r2]
    8060:	sub	sp, sp, #1280	; 0x500
    8064:	sub	sp, sp, #8
    8068:	ldr	r1, [pc, #312]	; 81a8 <main@@Base+0x357c>
    806c:	add	r5, sp, #8
    8070:	ldr	r7, [pc, #308]	; 81ac <main@@Base+0x3580>
    8074:	ldr	r3, [r6]
    8078:	ldr	r4, [pc, #304]	; 81b0 <main@@Base+0x3584>
    807c:	mov	r0, r5
    8080:	ldr	r2, [pc, #300]	; 81b4 <main@@Base+0x3588>
    8084:	add	r1, pc, r1
    8088:	str	r3, [sp, #1284]	; 0x504
    808c:	add	r7, pc, r7
    8090:	bl	4524 <memcpy@plt>
    8094:	add	r4, pc, r4
    8098:	b	80ac <main@@Base+0x3480>
    809c:	ldrh	r2, [r4]
    80a0:	ldrb	r3, [r4, #2]
    80a4:	strh	r2, [r0]
    80a8:	strb	r3, [r0, #2]
    80ac:	mov	r1, r7
    80b0:	mov	r0, r5
    80b4:	bl	3e10 <strstr@plt>
    80b8:	cmp	r0, #0
    80bc:	bne	809c <main@@Base+0x3470>
    80c0:	ldr	r7, [pc, #240]	; 81b8 <main@@Base+0x358c>
    80c4:	ldr	r8, [pc, #240]	; 81bc <main@@Base+0x3590>
    80c8:	add	r7, pc, r7
    80cc:	add	r8, pc, r8
    80d0:	b	80f4 <main@@Base+0x34c8>
    80d4:	mov	r3, r8
    80d8:	ldm	r3!, {r0, r1}
    80dc:	ldrh	r2, [r3]
    80e0:	ldrb	r3, [r3, #2]
    80e4:	str	r0, [r4]
    80e8:	str	r1, [r4, #4]
    80ec:	strh	r2, [r4, #8]
    80f0:	strb	r3, [r4, #10]
    80f4:	mov	r1, r7
    80f8:	mov	r0, r5
    80fc:	bl	3e10 <strstr@plt>
    8100:	subs	r4, r0, #0
    8104:	bne	80d4 <main@@Base+0x34a8>
    8108:	ldr	r1, [pc, #176]	; 81c0 <main@@Base+0x3594>
    810c:	mov	r0, r5
    8110:	add	r1, pc, r1
    8114:	bl	4848 <strtok@plt>
    8118:	mov	r7, r0
    811c:	ldr	r5, [pc, #160]	; 81c4 <main@@Base+0x3598>
    8120:	ldr	r2, [pc, #160]	; 81c8 <main@@Base+0x359c>
    8124:	add	r5, pc, r5
    8128:	mov	r0, r4
    812c:	mov	r3, r5
    8130:	add	r2, pc, r2
    8134:	mov	r1, #32
    8138:	bl	40f8 <av_log@plt>
    813c:	cmp	r7, #0
    8140:	beq	8180 <main@@Base+0x3554>
    8144:	mov	r4, r5
    8148:	ldr	r5, [pc, #124]	; 81cc <main@@Base+0x35a0>
    814c:	add	r5, pc, r5
    8150:	stm	sp, {r4, r7}
    8154:	mov	r3, r4
    8158:	mov	r2, r5
    815c:	mov	r1, #32
    8160:	mov	r0, #0
    8164:	bl	40f8 <av_log@plt>
    8168:	ldr	r1, [pc, #96]	; 81d0 <main@@Base+0x35a4>
    816c:	mov	r0, #0
    8170:	add	r1, pc, r1
    8174:	bl	4848 <strtok@plt>
    8178:	subs	r7, r0, #0
    817c:	bne	8150 <main@@Base+0x3524>
    8180:	ldr	r2, [sp, #1284]	; 0x504
    8184:	ldr	r3, [r6]
    8188:	cmp	r2, r3
    818c:	bne	819c <main@@Base+0x3570>
    8190:	add	sp, sp, #1280	; 0x500
    8194:	add	sp, sp, #8
    8198:	pop	{r4, r5, r6, r7, r8, pc}
    819c:	bl	3f00 <__stack_chk_fail@plt>
    81a0:	andeq	r9, r2, r4, lsr #23
    81a4:	andeq	r0, r0, r8, ror #7
    81a8:	andeq	r3, r1, r8, asr sp
    81ac:	andeq	r3, r1, r0, lsl sp
    81b0:	andeq	r3, r1, r4, lsl #26
    81b4:	strdeq	r0, [r0], -r9
    81b8:	andeq	r3, r1, r4, ror #25
    81bc:	ldrdeq	r3, [r1], -r4
    81c0:	andeq	r3, r1, r8, lsr #25
    81c4:	muleq	r1, r8, ip
    81c8:	muleq	r1, r0, ip
    81cc:	andeq	r3, r1, r8, lsl #25
    81d0:	andeq	r3, r1, r8, asr #24
    81d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    81d8:	ldr	r3, [pc, #2924]	; 8d4c <main@@Base+0x4120>
    81dc:	ldr	r2, [pc, #2924]	; 8d50 <main@@Base+0x4124>
    81e0:	add	r3, pc, r3
    81e4:	ldr	r6, [r3, r2]
    81e8:	sub	sp, sp, #44	; 0x2c
    81ec:	ldr	r3, [r6]
    81f0:	tst	r0, #1
    81f4:	mov	r4, r0
    81f8:	str	r3, [sp, #36]	; 0x24
    81fc:	bne	8230 <main@@Base+0x3604>
    8200:	ldr	r5, [pc, #2892]	; 8d54 <main@@Base+0x4128>
    8204:	ands	r7, r4, #2
    8208:	add	r5, pc, r5
    820c:	bne	8240 <main@@Base+0x3614>
    8210:	tst	r4, #4
    8214:	bne	8528 <main@@Base+0x38fc>
    8218:	ldr	r2, [sp, #36]	; 0x24
    821c:	ldr	r3, [r6]
    8220:	cmp	r2, r3
    8224:	bne	8d48 <main@@Base+0x411c>
    8228:	add	sp, sp, #44	; 0x2c
    822c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8230:	ldr	r5, [pc, #2848]	; 8d58 <main@@Base+0x412c>
    8234:	ands	r7, r4, #2
    8238:	add	r5, pc, r5
    823c:	beq	8210 <main@@Base+0x35e4>
    8240:	bl	3f30 <avutil_version@plt>
    8244:	mov	r9, #100	; 0x64
    8248:	mov	ip, #22
    824c:	mov	r1, #56	; 0x38
    8250:	lsr	r2, r0, #8
    8254:	ldr	r8, [pc, #2816]	; 8d5c <main@@Base+0x4130>
    8258:	ldr	r3, [pc, #2816]	; 8d60 <main@@Base+0x4134>
    825c:	uxtb	r2, r2
    8260:	add	r3, pc, r3
    8264:	str	r2, [sp, #20]
    8268:	add	r8, pc, r8
    826c:	uxtb	r2, r0
    8270:	lsr	r0, r0, #16
    8274:	str	r2, [sp, #24]
    8278:	str	r0, [sp, #16]
    827c:	stmib	sp, {r1, ip}
    8280:	str	r3, [sp]
    8284:	str	r9, [sp, #12]
    8288:	mov	r2, r8
    828c:	mov	r3, r5
    8290:	mov	r1, #32
    8294:	mov	r0, #0
    8298:	bl	40f8 <av_log@plt>
    829c:	ands	r4, r4, #4
    82a0:	bne	8528 <main@@Base+0x38fc>
    82a4:	bl	4224 <avcodec_version@plt>
    82a8:	mov	r7, #58	; 0x3a
    82ac:	mov	r1, #35	; 0x23
    82b0:	ldr	r3, [pc, #2732]	; 8d64 <main@@Base+0x4138>
    82b4:	lsr	r2, r0, #8
    82b8:	uxtb	ip, r0
    82bc:	add	r3, pc, r3
    82c0:	uxtb	r2, r2
    82c4:	lsr	r0, r0, #16
    82c8:	str	ip, [sp, #24]
    82cc:	stm	sp, {r3, r7}
    82d0:	str	r2, [sp, #20]
    82d4:	mov	r3, r5
    82d8:	mov	r2, r8
    82dc:	str	r0, [sp, #16]
    82e0:	str	r1, [sp, #8]
    82e4:	mov	r0, r4
    82e8:	mov	r1, #32
    82ec:	str	r9, [sp, #12]
    82f0:	bl	40f8 <av_log@plt>
    82f4:	bl	4338 <avformat_version@plt>
    82f8:	mov	r1, #20
    82fc:	ldr	r3, [pc, #2660]	; 8d68 <main@@Base+0x413c>
    8300:	lsr	r2, r0, #8
    8304:	uxtb	ip, r0
    8308:	add	r3, pc, r3
    830c:	uxtb	r2, r2
    8310:	lsr	r0, r0, #16
    8314:	str	ip, [sp, #24]
    8318:	str	r7, [sp, #4]
    831c:	str	r2, [sp, #20]
    8320:	str	r0, [sp, #16]
    8324:	mov	r2, r8
    8328:	str	r1, [sp, #8]
    832c:	str	r3, [sp]
    8330:	mov	r1, #32
    8334:	mov	r3, r5
    8338:	mov	r0, r4
    833c:	str	r9, [sp, #12]
    8340:	bl	40f8 <av_log@plt>
    8344:	bl	45fc <avdevice_version@plt>
    8348:	mov	sl, #5
    834c:	ldr	r3, [pc, #2584]	; 8d6c <main@@Base+0x4140>
    8350:	lsr	r2, r0, #8
    8354:	uxtb	r1, r0
    8358:	add	r3, pc, r3
    835c:	uxtb	r2, r2
    8360:	lsr	r0, r0, #16
    8364:	str	r7, [sp, #4]
    8368:	str	r2, [sp, #20]
    836c:	str	r1, [sp, #24]
    8370:	mov	r2, r8
    8374:	str	r0, [sp, #16]
    8378:	str	sl, [sp, #8]
    837c:	str	r3, [sp]
    8380:	mov	r1, #32
    8384:	mov	r3, r5
    8388:	mov	r0, r4
    838c:	str	r9, [sp, #12]
    8390:	bl	40f8 <av_log@plt>
    8394:	bl	3dc8 <avfilter_version@plt>
    8398:	mov	ip, #101	; 0x65
    839c:	mov	r1, #40	; 0x28
    83a0:	mov	r2, #7
    83a4:	lsr	r3, r0, #8
    83a8:	uxtb	r3, r3
    83ac:	str	r3, [sp, #20]
    83b0:	uxtb	r3, r0
    83b4:	str	r3, [sp, #24]
    83b8:	ldr	r3, [pc, #2480]	; 8d70 <main@@Base+0x4144>
    83bc:	lsr	r0, r0, #16
    83c0:	add	r3, pc, r3
    83c4:	str	ip, [sp, #12]
    83c8:	str	r0, [sp, #16]
    83cc:	str	r1, [sp, #8]
    83d0:	str	r2, [sp, #4]
    83d4:	str	r3, [sp]
    83d8:	mov	r2, r8
    83dc:	mov	r3, r5
    83e0:	mov	r1, #32
    83e4:	mov	r0, r4
    83e8:	bl	40f8 <av_log@plt>
    83ec:	bl	42cc <avresample_version@plt>
    83f0:	mov	r1, #4
    83f4:	ldr	r3, [pc, #2424]	; 8d74 <main@@Base+0x4148>
    83f8:	lsr	r2, r0, #8
    83fc:	uxtb	ip, r0
    8400:	add	r3, pc, r3
    8404:	uxtb	r2, r2
    8408:	lsr	r0, r0, #16
    840c:	str	ip, [sp, #24]
    8410:	str	r2, [sp, #20]
    8414:	str	r0, [sp, #16]
    8418:	mov	r2, r8
    841c:	str	r1, [sp, #4]
    8420:	str	r3, [sp]
    8424:	mov	r1, #32
    8428:	mov	r3, r5
    842c:	mov	r0, r4
    8430:	str	r4, [sp, #12]
    8434:	str	r4, [sp, #8]
    8438:	bl	40f8 <av_log@plt>
    843c:	bl	46a4 <swscale_version@plt>
    8440:	mov	r7, #3
    8444:	ldr	r3, [pc, #2348]	; 8d78 <main@@Base+0x414c>
    8448:	lsr	r2, r0, #8
    844c:	uxtb	r1, r0
    8450:	add	r3, pc, r3
    8454:	uxtb	r2, r2
    8458:	lsr	r0, r0, #16
    845c:	str	sl, [sp, #4]
    8460:	str	r2, [sp, #20]
    8464:	str	r1, [sp, #24]
    8468:	mov	r2, r8
    846c:	str	r0, [sp, #16]
    8470:	str	r3, [sp]
    8474:	mov	r1, #32
    8478:	mov	r3, r5
    847c:	mov	r0, r4
    8480:	str	r9, [sp, #12]
    8484:	str	r7, [sp, #8]
    8488:	bl	40f8 <av_log@plt>
    848c:	bl	423c <swresample_version@plt>
    8490:	ldr	r3, [pc, #2276]	; 8d7c <main@@Base+0x4150>
    8494:	lsr	r2, r0, #8
    8498:	uxtb	r1, r0
    849c:	add	r3, pc, r3
    84a0:	uxtb	r2, r2
    84a4:	lsr	r0, r0, #16
    84a8:	str	r2, [sp, #20]
    84ac:	str	r1, [sp, #24]
    84b0:	mov	r2, r8
    84b4:	str	r0, [sp, #16]
    84b8:	str	r3, [sp]
    84bc:	mov	r1, #32
    84c0:	mov	r3, r5
    84c4:	mov	r0, r4
    84c8:	str	r7, [sp, #8]
    84cc:	str	r7, [sp, #4]
    84d0:	str	r9, [sp, #12]
    84d4:	bl	40f8 <av_log@plt>
    84d8:	bl	43d4 <postproc_version@plt>
    84dc:	mov	lr, #55	; 0x37
    84e0:	ldr	r1, [pc, #2200]	; 8d80 <main@@Base+0x4154>
    84e4:	lsr	ip, r0, #8
    84e8:	uxtb	sl, r0
    84ec:	lsr	fp, r0, #16
    84f0:	add	r1, pc, r1
    84f4:	uxtb	ip, ip
    84f8:	stm	sp, {r1, lr}
    84fc:	str	r7, [sp, #8]
    8500:	str	r9, [sp, #12]
    8504:	mov	r3, r5
    8508:	mov	r2, r8
    850c:	mov	r0, r4
    8510:	str	ip, [sp, #20]
    8514:	str	sl, [sp, #24]
    8518:	str	fp, [sp, #16]
    851c:	mov	r1, #32
    8520:	bl	40f8 <av_log@plt>
    8524:	b	8218 <main@@Base+0x35ec>
    8528:	bl	3f6c <avutil_configuration@plt>
    852c:	mov	r1, r0
    8530:	mov	r4, r0
    8534:	ldr	r0, [pc, #2120]	; 8d84 <main@@Base+0x4158>
    8538:	add	r0, pc, r0
    853c:	bl	46c8 <strcmp@plt>
    8540:	cmp	r0, #0
    8544:	beq	8580 <main@@Base+0x3954>
    8548:	ldr	r8, [pc, #2104]	; 8d88 <main@@Base+0x415c>
    854c:	add	r8, pc, r8
    8550:	ldr	r0, [r8, #4]
    8554:	cmp	r0, #0
    8558:	beq	8c68 <main@@Base+0x403c>
    855c:	ldr	r3, [pc, #2088]	; 8d8c <main@@Base+0x4160>
    8560:	ldr	r2, [pc, #2088]	; 8d90 <main@@Base+0x4164>
    8564:	add	r3, pc, r3
    8568:	stm	sp, {r3, r4}
    856c:	add	r2, pc, r2
    8570:	mov	r3, r5
    8574:	mov	r1, #32
    8578:	mov	r0, #0
    857c:	bl	40f8 <av_log@plt>
    8580:	cmp	r7, #0
    8584:	bne	8ba8 <main@@Base+0x3f7c>
    8588:	bl	4734 <avcodec_configuration@plt>
    858c:	mov	r1, r0
    8590:	mov	r4, r0
    8594:	ldr	r0, [pc, #2040]	; 8d94 <main@@Base+0x4168>
    8598:	add	r0, pc, r0
    859c:	bl	46c8 <strcmp@plt>
    85a0:	cmp	r0, #0
    85a4:	beq	89e8 <main@@Base+0x3dbc>
    85a8:	ldr	r8, [pc, #2024]	; 8d98 <main@@Base+0x416c>
    85ac:	add	r8, pc, r8
    85b0:	ldr	r0, [r8, #4]
    85b4:	cmp	r0, #0
    85b8:	beq	8d08 <main@@Base+0x40dc>
    85bc:	ldr	r3, [pc, #2008]	; 8d9c <main@@Base+0x4170>
    85c0:	ldr	r2, [pc, #2008]	; 8da0 <main@@Base+0x4174>
    85c4:	add	r3, pc, r3
    85c8:	stm	sp, {r3, r4}
    85cc:	add	r2, pc, r2
    85d0:	mov	r3, r5
    85d4:	mov	r1, #32
    85d8:	mov	r0, #0
    85dc:	bl	40f8 <av_log@plt>
    85e0:	cmp	r7, #0
    85e4:	beq	89e8 <main@@Base+0x3dbc>
    85e8:	bl	4338 <avformat_version@plt>
    85ec:	mov	r2, #58	; 0x3a
    85f0:	mov	ip, #100	; 0x64
    85f4:	mov	r1, #20
    85f8:	lsr	r3, r0, #8
    85fc:	uxtb	r3, r3
    8600:	str	r3, [sp, #20]
    8604:	uxtb	r3, r0
    8608:	str	r3, [sp, #24]
    860c:	ldr	r3, [pc, #1936]	; 8da4 <main@@Base+0x4178>
    8610:	str	r2, [sp, #4]
    8614:	ldr	r2, [pc, #1932]	; 8da8 <main@@Base+0x417c>
    8618:	lsr	r0, r0, #16
    861c:	add	r3, pc, r3
    8620:	str	ip, [sp, #12]
    8624:	add	r2, pc, r2
    8628:	str	r0, [sp, #16]
    862c:	str	r1, [sp, #8]
    8630:	str	r3, [sp]
    8634:	mov	r1, #32
    8638:	mov	r3, r5
    863c:	mov	r0, #0
    8640:	bl	40f8 <av_log@plt>
    8644:	bl	43f8 <avformat_configuration@plt>
    8648:	mov	r1, r0
    864c:	mov	r4, r0
    8650:	ldr	r0, [pc, #1876]	; 8dac <main@@Base+0x4180>
    8654:	add	r0, pc, r0
    8658:	bl	46c8 <strcmp@plt>
    865c:	cmp	r0, #0
    8660:	bne	8a08 <main@@Base+0x3ddc>
    8664:	bl	45fc <avdevice_version@plt>
    8668:	mov	r2, #58	; 0x3a
    866c:	mov	ip, #100	; 0x64
    8670:	mov	r1, #5
    8674:	lsr	r3, r0, #8
    8678:	uxtb	r3, r3
    867c:	str	r3, [sp, #20]
    8680:	uxtb	r3, r0
    8684:	str	r3, [sp, #24]
    8688:	ldr	r3, [pc, #1824]	; 8db0 <main@@Base+0x4184>
    868c:	str	r2, [sp, #4]
    8690:	ldr	r2, [pc, #1820]	; 8db4 <main@@Base+0x4188>
    8694:	lsr	r0, r0, #16
    8698:	add	r3, pc, r3
    869c:	str	ip, [sp, #12]
    86a0:	add	r2, pc, r2
    86a4:	str	r0, [sp, #16]
    86a8:	str	r1, [sp, #8]
    86ac:	str	r3, [sp]
    86b0:	mov	r1, #32
    86b4:	mov	r3, r5
    86b8:	mov	r0, #0
    86bc:	bl	40f8 <av_log@plt>
    86c0:	bl	4260 <avdevice_configuration@plt>
    86c4:	mov	r1, r0
    86c8:	mov	r4, r0
    86cc:	ldr	r0, [pc, #1764]	; 8db8 <main@@Base+0x418c>
    86d0:	add	r0, pc, r0
    86d4:	bl	46c8 <strcmp@plt>
    86d8:	cmp	r0, #0
    86dc:	bne	8a68 <main@@Base+0x3e3c>
    86e0:	bl	3dc8 <avfilter_version@plt>
    86e4:	mov	r2, #7
    86e8:	mov	ip, #101	; 0x65
    86ec:	mov	r1, #40	; 0x28
    86f0:	lsr	r3, r0, #8
    86f4:	uxtb	r3, r3
    86f8:	str	r3, [sp, #20]
    86fc:	uxtb	r3, r0
    8700:	str	r3, [sp, #24]
    8704:	ldr	r3, [pc, #1712]	; 8dbc <main@@Base+0x4190>
    8708:	str	r2, [sp, #4]
    870c:	ldr	r2, [pc, #1708]	; 8dc0 <main@@Base+0x4194>
    8710:	lsr	r0, r0, #16
    8714:	add	r3, pc, r3
    8718:	str	ip, [sp, #12]
    871c:	add	r2, pc, r2
    8720:	str	r0, [sp, #16]
    8724:	str	r1, [sp, #8]
    8728:	str	r3, [sp]
    872c:	mov	r1, #32
    8730:	mov	r3, r5
    8734:	mov	r0, #0
    8738:	bl	40f8 <av_log@plt>
    873c:	bl	3e40 <avfilter_configuration@plt>
    8740:	mov	r1, r0
    8744:	mov	r4, r0
    8748:	ldr	r0, [pc, #1652]	; 8dc4 <main@@Base+0x4198>
    874c:	add	r0, pc, r0
    8750:	bl	46c8 <strcmp@plt>
    8754:	cmp	r0, #0
    8758:	bne	8ac8 <main@@Base+0x3e9c>
    875c:	bl	42cc <avresample_version@plt>
    8760:	mov	r3, r0
    8764:	mov	ip, #4
    8768:	mov	r0, #0
    876c:	ldr	r2, [pc, #1620]	; 8dc8 <main@@Base+0x419c>
    8770:	lsr	r1, r3, #8
    8774:	add	r2, pc, r2
    8778:	stm	sp, {r2, ip}
    877c:	uxtb	r1, r1
    8780:	ldr	r2, [pc, #1604]	; 8dcc <main@@Base+0x41a0>
    8784:	str	r1, [sp, #20]
    8788:	uxtb	r1, r3
    878c:	lsr	r3, r3, #16
    8790:	add	r2, pc, r2
    8794:	str	r1, [sp, #24]
    8798:	str	r3, [sp, #16]
    879c:	mov	r1, #32
    87a0:	mov	r3, r5
    87a4:	str	r0, [sp, #12]
    87a8:	str	r0, [sp, #8]
    87ac:	bl	40f8 <av_log@plt>
    87b0:	bl	3ed0 <avresample_configuration@plt>
    87b4:	mov	r1, r0
    87b8:	mov	r4, r0
    87bc:	ldr	r0, [pc, #1548]	; 8dd0 <main@@Base+0x41a4>
    87c0:	add	r0, pc, r0
    87c4:	bl	46c8 <strcmp@plt>
    87c8:	cmp	r0, #0
    87cc:	beq	8810 <main@@Base+0x3be4>
    87d0:	ldr	r8, [pc, #1532]	; 8dd4 <main@@Base+0x41a8>
    87d4:	add	r8, pc, r8
    87d8:	ldr	r0, [r8, #4]
    87dc:	cmp	r0, #0
    87e0:	beq	8c88 <main@@Base+0x405c>
    87e4:	ldr	r3, [pc, #1516]	; 8dd8 <main@@Base+0x41ac>
    87e8:	ldr	r2, [pc, #1516]	; 8ddc <main@@Base+0x41b0>
    87ec:	add	r3, pc, r3
    87f0:	stm	sp, {r3, r4}
    87f4:	add	r2, pc, r2
    87f8:	mov	r3, r5
    87fc:	mov	r1, #32
    8800:	mov	r0, #0
    8804:	bl	40f8 <av_log@plt>
    8808:	cmp	r7, #0
    880c:	beq	886c <main@@Base+0x3c40>
    8810:	bl	46a4 <swscale_version@plt>
    8814:	mov	r2, #5
    8818:	mov	r1, #3
    881c:	mov	ip, #100	; 0x64
    8820:	lsr	r3, r0, #8
    8824:	uxtb	r3, r3
    8828:	str	r3, [sp, #20]
    882c:	uxtb	r3, r0
    8830:	str	r3, [sp, #24]
    8834:	ldr	r3, [pc, #1444]	; 8de0 <main@@Base+0x41b4>
    8838:	str	r2, [sp, #4]
    883c:	ldr	r2, [pc, #1440]	; 8de4 <main@@Base+0x41b8>
    8840:	lsr	r0, r0, #16
    8844:	add	r3, pc, r3
    8848:	str	r0, [sp, #16]
    884c:	str	r1, [sp, #8]
    8850:	str	r3, [sp]
    8854:	str	ip, [sp, #12]
    8858:	mov	r3, r5
    885c:	add	r2, pc, r2
    8860:	mov	r1, #32
    8864:	mov	r0, #0
    8868:	bl	40f8 <av_log@plt>
    886c:	bl	444c <swscale_configuration@plt>
    8870:	mov	r1, r0
    8874:	mov	r4, r0
    8878:	ldr	r0, [pc, #1384]	; 8de8 <main@@Base+0x41bc>
    887c:	add	r0, pc, r0
    8880:	bl	46c8 <strcmp@plt>
    8884:	cmp	r0, #0
    8888:	beq	88c4 <main@@Base+0x3c98>
    888c:	ldr	r8, [pc, #1368]	; 8dec <main@@Base+0x41c0>
    8890:	add	r8, pc, r8
    8894:	ldr	r0, [r8, #4]
    8898:	cmp	r0, #0
    889c:	beq	8ca8 <main@@Base+0x407c>
    88a0:	ldr	r3, [pc, #1352]	; 8df0 <main@@Base+0x41c4>
    88a4:	ldr	r2, [pc, #1352]	; 8df4 <main@@Base+0x41c8>
    88a8:	add	r3, pc, r3
    88ac:	stm	sp, {r3, r4}
    88b0:	add	r2, pc, r2
    88b4:	mov	r3, r5
    88b8:	mov	r1, #32
    88bc:	mov	r0, #0
    88c0:	bl	40f8 <av_log@plt>
    88c4:	cmp	r7, #0
    88c8:	bne	8b2c <main@@Base+0x3f00>
    88cc:	bl	420c <swresample_configuration@plt>
    88d0:	mov	r1, r0
    88d4:	mov	r4, r0
    88d8:	ldr	r0, [pc, #1304]	; 8df8 <main@@Base+0x41cc>
    88dc:	add	r0, pc, r0
    88e0:	bl	46c8 <strcmp@plt>
    88e4:	cmp	r0, #0
    88e8:	beq	8988 <main@@Base+0x3d5c>
    88ec:	ldr	r8, [pc, #1288]	; 8dfc <main@@Base+0x41d0>
    88f0:	add	r8, pc, r8
    88f4:	ldr	r0, [r8, #4]
    88f8:	cmp	r0, #0
    88fc:	beq	8cc8 <main@@Base+0x409c>
    8900:	ldr	r3, [pc, #1272]	; 8e00 <main@@Base+0x41d4>
    8904:	ldr	r2, [pc, #1272]	; 8e04 <main@@Base+0x41d8>
    8908:	add	r3, pc, r3
    890c:	stm	sp, {r3, r4}
    8910:	add	r2, pc, r2
    8914:	mov	r3, r5
    8918:	mov	r1, #32
    891c:	mov	r0, #0
    8920:	bl	40f8 <av_log@plt>
    8924:	cmp	r7, #0
    8928:	beq	8988 <main@@Base+0x3d5c>
    892c:	bl	43d4 <postproc_version@plt>
    8930:	mov	r2, #55	; 0x37
    8934:	mov	r1, #3
    8938:	mov	ip, #100	; 0x64
    893c:	lsr	r3, r0, #8
    8940:	uxtb	r3, r3
    8944:	str	r3, [sp, #20]
    8948:	uxtb	r3, r0
    894c:	str	r3, [sp, #24]
    8950:	ldr	r3, [pc, #1200]	; 8e08 <main@@Base+0x41dc>
    8954:	str	r2, [sp, #4]
    8958:	ldr	r2, [pc, #1196]	; 8e0c <main@@Base+0x41e0>
    895c:	lsr	r0, r0, #16
    8960:	add	r3, pc, r3
    8964:	str	r0, [sp, #16]
    8968:	str	r1, [sp, #8]
    896c:	str	r3, [sp]
    8970:	str	ip, [sp, #12]
    8974:	mov	r3, r5
    8978:	add	r2, pc, r2
    897c:	mov	r1, #32
    8980:	mov	r0, #0
    8984:	bl	40f8 <av_log@plt>
    8988:	bl	4140 <postproc_configuration@plt>
    898c:	mov	r1, r0
    8990:	mov	r4, r0
    8994:	ldr	r0, [pc, #1140]	; 8e10 <main@@Base+0x41e4>
    8998:	add	r0, pc, r0
    899c:	bl	46c8 <strcmp@plt>
    89a0:	cmp	r0, #0
    89a4:	beq	8218 <main@@Base+0x35ec>
    89a8:	ldr	r7, [pc, #1124]	; 8e14 <main@@Base+0x41e8>
    89ac:	add	r7, pc, r7
    89b0:	ldr	r0, [r7, #4]
    89b4:	cmp	r0, #0
    89b8:	beq	8c28 <main@@Base+0x3ffc>
    89bc:	ldr	r2, [pc, #1108]	; 8e18 <main@@Base+0x41ec>
    89c0:	str	r4, [sp, #4]
    89c4:	add	r2, pc, r2
    89c8:	str	r2, [sp]
    89cc:	ldr	r2, [pc, #1096]	; 8e1c <main@@Base+0x41f0>
    89d0:	mov	r3, r5
    89d4:	add	r2, pc, r2
    89d8:	mov	r1, #32
    89dc:	mov	r0, #0
    89e0:	bl	40f8 <av_log@plt>
    89e4:	b	8218 <main@@Base+0x35ec>
    89e8:	bl	43f8 <avformat_configuration@plt>
    89ec:	mov	r1, r0
    89f0:	mov	r4, r0
    89f4:	ldr	r0, [pc, #1060]	; 8e20 <main@@Base+0x41f4>
    89f8:	add	r0, pc, r0
    89fc:	bl	46c8 <strcmp@plt>
    8a00:	cmp	r0, #0
    8a04:	beq	8a48 <main@@Base+0x3e1c>
    8a08:	ldr	r8, [pc, #1044]	; 8e24 <main@@Base+0x41f8>
    8a0c:	add	r8, pc, r8
    8a10:	ldr	r0, [r8, #4]
    8a14:	cmp	r0, #0
    8a18:	beq	8c48 <main@@Base+0x401c>
    8a1c:	ldr	r3, [pc, #1028]	; 8e28 <main@@Base+0x41fc>
    8a20:	ldr	r2, [pc, #1028]	; 8e2c <main@@Base+0x4200>
    8a24:	add	r3, pc, r3
    8a28:	stm	sp, {r3, r4}
    8a2c:	add	r2, pc, r2
    8a30:	mov	r3, r5
    8a34:	mov	r1, #32
    8a38:	mov	r0, #0
    8a3c:	bl	40f8 <av_log@plt>
    8a40:	cmp	r7, #0
    8a44:	bne	8664 <main@@Base+0x3a38>
    8a48:	bl	4260 <avdevice_configuration@plt>
    8a4c:	mov	r1, r0
    8a50:	mov	r4, r0
    8a54:	ldr	r0, [pc, #980]	; 8e30 <main@@Base+0x4204>
    8a58:	add	r0, pc, r0
    8a5c:	bl	46c8 <strcmp@plt>
    8a60:	cmp	r0, #0
    8a64:	beq	8aa8 <main@@Base+0x3e7c>
    8a68:	ldr	r8, [pc, #964]	; 8e34 <main@@Base+0x4208>
    8a6c:	add	r8, pc, r8
    8a70:	ldr	r0, [r8, #4]
    8a74:	cmp	r0, #0
    8a78:	beq	8ce8 <main@@Base+0x40bc>
    8a7c:	ldr	r3, [pc, #948]	; 8e38 <main@@Base+0x420c>
    8a80:	ldr	r2, [pc, #948]	; 8e3c <main@@Base+0x4210>
    8a84:	add	r3, pc, r3
    8a88:	stm	sp, {r3, r4}
    8a8c:	add	r2, pc, r2
    8a90:	mov	r3, r5
    8a94:	mov	r1, #32
    8a98:	mov	r0, #0
    8a9c:	bl	40f8 <av_log@plt>
    8aa0:	cmp	r7, #0
    8aa4:	bne	86e0 <main@@Base+0x3ab4>
    8aa8:	bl	3e40 <avfilter_configuration@plt>
    8aac:	mov	r1, r0
    8ab0:	mov	r4, r0
    8ab4:	ldr	r0, [pc, #900]	; 8e40 <main@@Base+0x4214>
    8ab8:	add	r0, pc, r0
    8abc:	bl	46c8 <strcmp@plt>
    8ac0:	cmp	r0, #0
    8ac4:	beq	8b08 <main@@Base+0x3edc>
    8ac8:	ldr	r8, [pc, #884]	; 8e44 <main@@Base+0x4218>
    8acc:	add	r8, pc, r8
    8ad0:	ldr	r0, [r8, #4]
    8ad4:	cmp	r0, #0
    8ad8:	beq	8d28 <main@@Base+0x40fc>
    8adc:	ldr	r3, [pc, #868]	; 8e48 <main@@Base+0x421c>
    8ae0:	ldr	r2, [pc, #868]	; 8e4c <main@@Base+0x4220>
    8ae4:	add	r3, pc, r3
    8ae8:	stm	sp, {r3, r4}
    8aec:	add	r2, pc, r2
    8af0:	mov	r3, r5
    8af4:	mov	r1, #32
    8af8:	mov	r0, #0
    8afc:	bl	40f8 <av_log@plt>
    8b00:	cmp	r7, #0
    8b04:	bne	875c <main@@Base+0x3b30>
    8b08:	bl	3ed0 <avresample_configuration@plt>
    8b0c:	mov	r1, r0
    8b10:	mov	r4, r0
    8b14:	ldr	r0, [pc, #820]	; 8e50 <main@@Base+0x4224>
    8b18:	add	r0, pc, r0
    8b1c:	bl	46c8 <strcmp@plt>
    8b20:	cmp	r0, #0
    8b24:	bne	87d0 <main@@Base+0x3ba4>
    8b28:	b	886c <main@@Base+0x3c40>
    8b2c:	bl	423c <swresample_version@plt>
    8b30:	mov	ip, #100	; 0x64
    8b34:	mov	r1, #3
    8b38:	lsr	r2, r0, #8
    8b3c:	uxtb	r2, r2
    8b40:	str	r2, [sp, #20]
    8b44:	ldr	r3, [pc, #776]	; 8e54 <main@@Base+0x4228>
    8b48:	uxtb	r2, r0
    8b4c:	str	r2, [sp, #24]
    8b50:	ldr	r2, [pc, #768]	; 8e58 <main@@Base+0x422c>
    8b54:	add	r3, pc, r3
    8b58:	lsr	r0, r0, #16
    8b5c:	str	ip, [sp, #12]
    8b60:	add	r2, pc, r2
    8b64:	str	r0, [sp, #16]
    8b68:	str	r1, [sp, #8]
    8b6c:	str	r1, [sp, #4]
    8b70:	str	r3, [sp]
    8b74:	mov	r1, #32
    8b78:	mov	r3, r5
    8b7c:	mov	r0, #0
    8b80:	bl	40f8 <av_log@plt>
    8b84:	bl	420c <swresample_configuration@plt>
    8b88:	mov	r1, r0
    8b8c:	mov	r4, r0
    8b90:	ldr	r0, [pc, #708]	; 8e5c <main@@Base+0x4230>
    8b94:	add	r0, pc, r0
    8b98:	bl	46c8 <strcmp@plt>
    8b9c:	cmp	r0, #0
    8ba0:	bne	88ec <main@@Base+0x3cc0>
    8ba4:	b	892c <main@@Base+0x3d00>
    8ba8:	bl	4224 <avcodec_version@plt>
    8bac:	mov	r2, #58	; 0x3a
    8bb0:	mov	ip, #100	; 0x64
    8bb4:	mov	r1, #35	; 0x23
    8bb8:	lsr	r3, r0, #8
    8bbc:	uxtb	r3, r3
    8bc0:	str	r3, [sp, #20]
    8bc4:	uxtb	r3, r0
    8bc8:	str	r3, [sp, #24]
    8bcc:	ldr	r3, [pc, #652]	; 8e60 <main@@Base+0x4234>
    8bd0:	str	r2, [sp, #4]
    8bd4:	ldr	r2, [pc, #648]	; 8e64 <main@@Base+0x4238>
    8bd8:	lsr	r0, r0, #16
    8bdc:	add	r3, pc, r3
    8be0:	str	ip, [sp, #12]
    8be4:	add	r2, pc, r2
    8be8:	str	r0, [sp, #16]
    8bec:	str	r1, [sp, #8]
    8bf0:	str	r3, [sp]
    8bf4:	mov	r1, #32
    8bf8:	mov	r3, r5
    8bfc:	mov	r0, #0
    8c00:	bl	40f8 <av_log@plt>
    8c04:	bl	4734 <avcodec_configuration@plt>
    8c08:	mov	r1, r0
    8c0c:	mov	r4, r0
    8c10:	ldr	r0, [pc, #592]	; 8e68 <main@@Base+0x423c>
    8c14:	add	r0, pc, r0
    8c18:	bl	46c8 <strcmp@plt>
    8c1c:	cmp	r0, #0
    8c20:	bne	85a8 <main@@Base+0x397c>
    8c24:	b	85e8 <main@@Base+0x39bc>
    8c28:	ldr	r2, [pc, #572]	; 8e6c <main@@Base+0x4240>
    8c2c:	mov	r3, r5
    8c30:	add	r2, pc, r2
    8c34:	mov	r1, #32
    8c38:	bl	40f8 <av_log@plt>
    8c3c:	mov	r3, #1
    8c40:	str	r3, [r7, #4]
    8c44:	b	89bc <main@@Base+0x3d90>
    8c48:	ldr	r2, [pc, #544]	; 8e70 <main@@Base+0x4244>
    8c4c:	mov	r3, r5
    8c50:	add	r2, pc, r2
    8c54:	mov	r1, #32
    8c58:	bl	40f8 <av_log@plt>
    8c5c:	mov	r3, #1
    8c60:	str	r3, [r8, #4]
    8c64:	b	8a1c <main@@Base+0x3df0>
    8c68:	ldr	r2, [pc, #516]	; 8e74 <main@@Base+0x4248>
    8c6c:	mov	r3, r5
    8c70:	add	r2, pc, r2
    8c74:	mov	r1, #32
    8c78:	bl	40f8 <av_log@plt>
    8c7c:	mov	r3, #1
    8c80:	str	r3, [r8, #4]
    8c84:	b	855c <main@@Base+0x3930>
    8c88:	ldr	r2, [pc, #488]	; 8e78 <main@@Base+0x424c>
    8c8c:	mov	r3, r5
    8c90:	add	r2, pc, r2
    8c94:	mov	r1, #32
    8c98:	bl	40f8 <av_log@plt>
    8c9c:	mov	r3, #1
    8ca0:	str	r3, [r8, #4]
    8ca4:	b	87e4 <main@@Base+0x3bb8>
    8ca8:	ldr	r2, [pc, #460]	; 8e7c <main@@Base+0x4250>
    8cac:	mov	r3, r5
    8cb0:	add	r2, pc, r2
    8cb4:	mov	r1, #32
    8cb8:	bl	40f8 <av_log@plt>
    8cbc:	mov	r3, #1
    8cc0:	str	r3, [r8, #4]
    8cc4:	b	88a0 <main@@Base+0x3c74>
    8cc8:	ldr	r2, [pc, #432]	; 8e80 <main@@Base+0x4254>
    8ccc:	mov	r3, r5
    8cd0:	add	r2, pc, r2
    8cd4:	mov	r1, #32
    8cd8:	bl	40f8 <av_log@plt>
    8cdc:	mov	r3, #1
    8ce0:	str	r3, [r8, #4]
    8ce4:	b	8900 <main@@Base+0x3cd4>
    8ce8:	ldr	r2, [pc, #404]	; 8e84 <main@@Base+0x4258>
    8cec:	mov	r3, r5
    8cf0:	add	r2, pc, r2
    8cf4:	mov	r1, #32
    8cf8:	bl	40f8 <av_log@plt>
    8cfc:	mov	r3, #1
    8d00:	str	r3, [r8, #4]
    8d04:	b	8a7c <main@@Base+0x3e50>
    8d08:	ldr	r2, [pc, #376]	; 8e88 <main@@Base+0x425c>
    8d0c:	mov	r3, r5
    8d10:	add	r2, pc, r2
    8d14:	mov	r1, #32
    8d18:	bl	40f8 <av_log@plt>
    8d1c:	mov	r3, #1
    8d20:	str	r3, [r8, #4]
    8d24:	b	85bc <main@@Base+0x3990>
    8d28:	ldr	r2, [pc, #348]	; 8e8c <main@@Base+0x4260>
    8d2c:	mov	r3, r5
    8d30:	add	r2, pc, r2
    8d34:	mov	r1, #32
    8d38:	bl	40f8 <av_log@plt>
    8d3c:	mov	r3, #1
    8d40:	str	r3, [r8, #4]
    8d44:	b	8adc <main@@Base+0x3eb0>
    8d48:	bl	3f00 <__stack_chk_fail@plt>
    8d4c:	andeq	r9, r2, ip, lsl sl
    8d50:	andeq	r0, r0, r8, ror #7
    8d54:	andeq	r6, r1, r0, lsr #13
    8d58:	andeq	r3, r1, r4, lsl #23
    8d5c:	andeq	r4, r1, r0, ror r0
    8d60:	andeq	r4, r1, r0, lsr #1
    8d64:	muleq	r1, r4, r0
    8d68:	andeq	r4, r1, r0, asr r0
    8d6c:	andeq	r4, r1, ip
    8d70:			; <UNDEFINED> instruction: 0x00013fb0
    8d74:	andeq	r3, r1, ip, ror pc
    8d78:	andeq	r3, r1, r8, lsr pc
    8d7c:	strdeq	r3, [r1], -r4
    8d80:	andeq	r3, r1, ip, lsr #29
    8d84:	andeq	r3, r1, r4, lsr #17
    8d88:	andeq	sl, r2, r0, lsl r7
    8d8c:	muleq	r1, ip, sp
    8d90:	andeq	r3, r1, r8, asr #27
    8d94:	andeq	r3, r1, r4, asr #16
    8d98:			; <UNDEFINED> instruction: 0x0002a6b0
    8d9c:	andeq	r3, r1, ip, lsl #27
    8da0:	andeq	r3, r1, r8, ror #26
    8da4:	andeq	r3, r1, ip, lsr sp
    8da8:			; <UNDEFINED> instruction: 0x00013cb4
    8dac:	andeq	r3, r1, r8, lsl #15
    8db0:	andeq	r3, r1, ip, asr #25
    8db4:	andeq	r3, r1, r8, lsr ip
    8db8:	andeq	r3, r1, ip, lsl #14
    8dbc:	andeq	r3, r1, ip, asr ip
    8dc0:			; <UNDEFINED> instruction: 0x00013bbc
    8dc4:	muleq	r1, r0, r6
    8dc8:	andeq	r3, r1, r8, lsl #24
    8dcc:	andeq	r3, r1, r8, asr #22
    8dd0:	andeq	r3, r1, ip, lsl r6
    8dd4:	andeq	sl, r2, r8, lsl #9
    8dd8:	muleq	r1, r0, fp
    8ddc:	andeq	r3, r1, r0, asr #22
    8de0:	andeq	r3, r1, r4, asr #22
    8de4:	andeq	r3, r1, ip, ror sl
    8de8:	andeq	r3, r1, r0, ror #10
    8dec:	andeq	sl, r2, ip, asr #7
    8df0:	andeq	r3, r1, r0, ror #21
    8df4:	andeq	r3, r1, r4, lsl #21
    8df8:	andeq	r3, r1, r0, lsl #10
    8dfc:	andeq	sl, r2, ip, ror #6
    8e00:	andeq	r3, r1, r8, lsl #21
    8e04:	andeq	r3, r1, r4, lsr #20
    8e08:	andeq	r3, r1, ip, lsr sl
    8e0c:	andeq	r3, r1, r0, ror #18
    8e10:	andeq	r3, r1, r4, asr #8
    8e14:			; <UNDEFINED> instruction: 0x0002a2b0
    8e18:	ldrdeq	r3, [r1], -r8
    8e1c:	andeq	r3, r1, r0, ror #18
    8e20:	andeq	r3, r1, r4, ror #7
    8e24:	andeq	sl, r2, r0, asr r2
    8e28:	andeq	r3, r1, r4, lsr r9
    8e2c:	andeq	r3, r1, r8, lsl #18
    8e30:	andeq	r3, r1, r4, lsl #7
    8e34:	strdeq	sl, [r2], -r0
    8e38:	andeq	r3, r1, r0, ror #17
    8e3c:	andeq	r3, r1, r8, lsr #17
    8e40:	andeq	r3, r1, r4, lsr #6
    8e44:	muleq	r2, r0, r1
    8e48:	andeq	r3, r1, ip, lsl #17
    8e4c:	andeq	r3, r1, r8, asr #16
    8e50:	andeq	r3, r1, r4, asr #5
    8e54:	andeq	r3, r1, ip, lsr r8
    8e58:	andeq	r3, r1, r8, ror r7
    8e5c:	andeq	r3, r1, r8, asr #4
    8e60:	andeq	r3, r1, r4, ror r7
    8e64:	strdeq	r3, [r1], -r4
    8e68:	andeq	r3, r1, r8, asr #3
    8e6c:	ldrdeq	r3, [r1], -r8
    8e70:			; <UNDEFINED> instruction: 0x000136b8
    8e74:	muleq	r1, r8, r6
    8e78:	andeq	r3, r1, r8, ror r6
    8e7c:	andeq	r3, r1, r8, asr r6
    8e80:	andeq	r3, r1, r8, lsr r6
    8e84:	andeq	r3, r1, r8, lsl r6
    8e88:	strdeq	r3, [r1], -r8
    8e8c:	ldrdeq	r3, [r1], -r8
    8e90:	push	{lr}		; (str lr, [sp, #-4]!)
    8e94:	ldr	r2, [pc, #80]	; 8eec <main@@Base+0x42c0>
    8e98:	ldr	r3, [pc, #80]	; 8ef0 <main@@Base+0x42c4>
    8e9c:	add	r2, pc, r2
    8ea0:	ldr	r3, [r2, r3]
    8ea4:	sub	sp, sp, #12
    8ea8:	ldr	r1, [r3]
    8eac:	str	r1, [sp, #4]
    8eb0:	ldr	r1, [sp, #4]
    8eb4:	ldr	r3, [r3]
    8eb8:	cmp	r1, r3
    8ebc:	bne	8ee8 <main@@Base+0x42bc>
    8ec0:	mov	r3, #0
    8ec4:	ldr	r1, [pc, #40]	; 8ef4 <main@@Base+0x42c8>
    8ec8:	ldr	r0, [r2, r1]
    8ecc:	ldr	r2, [pc, #36]	; 8ef8 <main@@Base+0x42cc>
    8ed0:	ldr	r1, [pc, #36]	; 8efc <main@@Base+0x42d0>
    8ed4:	add	r2, pc, r2
    8ed8:	add	r1, pc, r1
    8edc:	add	sp, sp, #12
    8ee0:	pop	{lr}		; (ldr lr, [sp], #4)
    8ee4:	b	453c <av_dict_set@plt>
    8ee8:	bl	3f00 <__stack_chk_fail@plt>
    8eec:	andeq	r8, r2, r0, ror #26
    8ef0:	andeq	r0, r0, r8, ror #7
    8ef4:	ldrdeq	r0, [r0], -r8
    8ef8:	ldrdeq	r3, [r1], -r4
    8efc:	ldrdeq	r3, [r1], -r8
    8f00:	push	{r4, r5, lr}
    8f04:	ldr	r4, [pc, #108]	; 8f78 <main@@Base+0x434c>
    8f08:	ldr	r2, [pc, #108]	; 8f7c <main@@Base+0x4350>
    8f0c:	add	r4, pc, r4
    8f10:	ldr	r5, [r4, r2]
    8f14:	sub	sp, sp, #12
    8f18:	ldr	r2, [r5]
    8f1c:	ldr	r3, [pc, #92]	; 8f80 <main@@Base+0x4354>
    8f20:	str	r2, [sp, #4]
    8f24:	ldr	r0, [r4, r3]
    8f28:	bl	3ee8 <av_dict_free@plt>
    8f2c:	ldr	r3, [pc, #80]	; 8f84 <main@@Base+0x4358>
    8f30:	ldr	r0, [r4, r3]
    8f34:	bl	3ee8 <av_dict_free@plt>
    8f38:	ldr	r3, [pc, #72]	; 8f88 <main@@Base+0x435c>
    8f3c:	ldr	r0, [r4, r3]
    8f40:	bl	3ee8 <av_dict_free@plt>
    8f44:	ldr	r3, [pc, #64]	; 8f8c <main@@Base+0x4360>
    8f48:	ldr	r0, [r4, r3]
    8f4c:	bl	3ee8 <av_dict_free@plt>
    8f50:	ldr	r2, [sp, #4]
    8f54:	ldr	r3, [r5]
    8f58:	cmp	r2, r3
    8f5c:	bne	8f74 <main@@Base+0x4348>
    8f60:	ldr	r3, [pc, #40]	; 8f90 <main@@Base+0x4364>
    8f64:	ldr	r0, [r4, r3]
    8f68:	add	sp, sp, #12
    8f6c:	pop	{r4, r5, lr}
    8f70:	b	3ee8 <av_dict_free@plt>
    8f74:	bl	3f00 <__stack_chk_fail@plt>
    8f78:	strdeq	r8, [r2], -r0
    8f7c:	andeq	r0, r0, r8, ror #7
    8f80:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    8f84:	ldrdeq	r0, [r0], -r8
    8f88:	andeq	r0, r0, ip, lsr #7
    8f8c:	andeq	r0, r0, ip, ror #7
    8f90:	andeq	r0, r0, r0, ror #7
    8f94:	push	{lr}		; (str lr, [sp, #-4]!)
    8f98:	ldr	r3, [pc, #48]	; 8fd0 <main@@Base+0x43a4>
    8f9c:	ldr	r2, [pc, #48]	; 8fd4 <main@@Base+0x43a8>
    8fa0:	add	r3, pc, r3
    8fa4:	ldr	r3, [r3, r2]
    8fa8:	sub	sp, sp, #12
    8fac:	ldr	r2, [r3]
    8fb0:	str	r2, [sp, #4]
    8fb4:	ldr	r2, [sp, #4]
    8fb8:	ldr	r3, [r3]
    8fbc:	cmp	r2, r3
    8fc0:	bne	8fcc <main@@Base+0x43a0>
    8fc4:	add	sp, sp, #12
    8fc8:	pop	{pc}		; (ldr pc, [sp], #4)
    8fcc:	bl	3f00 <__stack_chk_fail@plt>
    8fd0:	andeq	r8, r2, ip, asr ip
    8fd4:	andeq	r0, r0, r8, ror #7
    8fd8:	push	{lr}		; (str lr, [sp, #-4]!)
    8fdc:	ldr	r3, [pc, #60]	; 9020 <main@@Base+0x43f4>
    8fe0:	ldr	r1, [pc, #60]	; 9024 <main@@Base+0x43f8>
    8fe4:	add	r3, pc, r3
    8fe8:	ldr	r1, [r3, r1]
    8fec:	ldr	r2, [pc, #52]	; 9028 <main@@Base+0x43fc>
    8ff0:	ldr	r3, [r1]
    8ff4:	sub	sp, sp, #12
    8ff8:	add	r2, pc, r2
    8ffc:	str	r3, [sp, #4]
    9000:	str	r0, [r2, #8]
    9004:	ldr	r2, [sp, #4]
    9008:	ldr	r3, [r1]
    900c:	cmp	r2, r3
    9010:	bne	901c <main@@Base+0x43f0>
    9014:	add	sp, sp, #12
    9018:	pop	{pc}		; (ldr pc, [sp], #4)
    901c:	bl	3f00 <__stack_chk_fail@plt>
    9020:	andeq	r8, r2, r8, lsl ip
    9024:	andeq	r0, r0, r8, ror #7
    9028:	andeq	r9, r2, r4, ror #24
    902c:	push	{lr}		; (str lr, [sp, #-4]!)
    9030:	ldr	r3, [pc, #56]	; 9070 <main@@Base+0x4444>
    9034:	ldr	r1, [pc, #56]	; 9074 <main@@Base+0x4448>
    9038:	ldr	r2, [pc, #56]	; 9078 <main@@Base+0x444c>
    903c:	add	r3, pc, r3
    9040:	ldr	r1, [r3, r1]
    9044:	add	r2, pc, r2
    9048:	ldr	r2, [r2, #8]
    904c:	ldr	r1, [r1]
    9050:	sub	sp, sp, #12
    9054:	cmp	r2, #0
    9058:	str	r1, [sp, #4]
    905c:	mov	r4, r0
    9060:	beq	9068 <main@@Base+0x443c>
    9064:	blx	r2
    9068:	mov	r0, r4
    906c:	bl	47c4 <exit@plt>
    9070:	andeq	r8, r2, r0, asr #23
    9074:	andeq	r0, r0, r8, ror #7
    9078:	andeq	r9, r2, r8, lsl ip
    907c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9080:	ldr	fp, [pc, #1200]	; 9538 <main@@Base+0x490c>
    9084:	sub	sp, sp, #1168	; 0x490
    9088:	sub	sp, sp, #12
    908c:	ldr	r2, [pc, #1192]	; 953c <main@@Base+0x4910>
    9090:	ldr	r3, [pc, #1192]	; 9540 <main@@Base+0x4914>
    9094:	add	fp, pc, fp
    9098:	str	r0, [sp, #60]	; 0x3c
    909c:	ldr	r2, [fp, r2]
    90a0:	add	r3, pc, r3
    90a4:	ldr	r6, [r3]
    90a8:	ldr	r3, [r2]
    90ac:	cmp	r6, #0
    90b0:	str	r2, [sp, #44]	; 0x2c
    90b4:	str	r3, [sp, #1172]	; 0x494
    90b8:	movne	r4, #0
    90bc:	beq	90e4 <main@@Base+0x44b8>
    90c0:	ldr	r3, [sp, #44]	; 0x2c
    90c4:	ldr	r2, [sp, #1172]	; 0x494
    90c8:	ldr	r3, [r3]
    90cc:	mov	r0, r4
    90d0:	cmp	r2, r3
    90d4:	bne	9534 <main@@Base+0x4908>
    90d8:	add	sp, sp, #1168	; 0x490
    90dc:	add	sp, sp, #12
    90e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    90e4:	add	r4, sp, #76	; 0x4c
    90e8:	add	r3, sp, #88	; 0x58
    90ec:	mov	r0, r4
    90f0:	str	r3, [sp, #48]	; 0x30
    90f4:	bl	4728 <time@plt>
    90f8:	mov	r0, r4
    90fc:	bl	45e4 <localtime@plt>
    9100:	ldr	r3, [sp, #60]	; 0x3c
    9104:	mov	r7, r0
    9108:	cmp	r3, #0
    910c:	beq	94d0 <main@@Base+0x48a4>
    9110:	ldrb	r3, [r3]
    9114:	cmp	r3, #0
    9118:	beq	94d0 <main@@Base+0x48a4>
    911c:	ldr	r3, [pc, #1056]	; 9544 <main@@Base+0x4918>
    9120:	ldr	sl, [pc, #1056]	; 9548 <main@@Base+0x491c>
    9124:	ldr	r9, [pc, #1056]	; 954c <main@@Base+0x4920>
    9128:	add	r3, pc, r3
    912c:	add	r2, sp, #72	; 0x48
    9130:	add	r1, sp, #68	; 0x44
    9134:	mov	r5, r6
    9138:	str	r6, [sp, #40]	; 0x28
    913c:	str	fp, [sp, #56]	; 0x38
    9140:	add	sl, pc, sl
    9144:	add	r9, pc, r9
    9148:	add	r8, sp, #60	; 0x3c
    914c:	str	r0, [sp, #52]	; 0x34
    9150:	mov	r7, r1
    9154:	mov	fp, r2
    9158:	mov	r6, r3
    915c:	b	91bc <main@@Base+0x4590>
    9160:	ldr	r3, [sp, #48]	; 0x30
    9164:	mov	r2, #10
    9168:	sub	r1, r3, #8
    916c:	ldr	r0, [sp, #72]	; 0x48
    9170:	bl	47ac <strtol@plt>
    9174:	ldr	r1, [sp, #80]	; 0x50
    9178:	ldr	r2, [pc, #976]	; 9550 <main@@Base+0x4924>
    917c:	ldrb	r1, [r1]
    9180:	add	r2, pc, r2
    9184:	cmp	r1, #0
    9188:	str	r0, [r2, #4]
    918c:	ldr	r3, [sp, #36]	; 0x24
    9190:	bne	9518 <main@@Base+0x48ec>
    9194:	ldr	r0, [sp, #72]	; 0x48
    9198:	bl	46ec <av_free@plt>
    919c:	ldr	r0, [sp, #68]	; 0x44
    91a0:	bl	46ec <av_free@plt>
    91a4:	ldr	r3, [sp, #60]	; 0x3c
    91a8:	cmp	r3, #0
    91ac:	beq	9268 <main@@Base+0x463c>
    91b0:	ldrb	r3, [r3]
    91b4:	cmp	r3, #0
    91b8:	beq	9268 <main@@Base+0x463c>
    91bc:	stm	sp, {r7, fp}
    91c0:	mov	r3, #0
    91c4:	mov	r2, sl
    91c8:	mov	r1, r9
    91cc:	mov	r0, r8
    91d0:	bl	3f78 <av_opt_get_key_value@plt>
    91d4:	cmp	r0, #0
    91d8:	blt	942c <main@@Base+0x4800>
    91dc:	ldr	r3, [sp, #60]	; 0x3c
    91e0:	ldr	r4, [sp, #68]	; 0x44
    91e4:	ldrb	r2, [r3]
    91e8:	mov	r1, r6
    91ec:	cmp	r2, #0
    91f0:	addne	r3, r3, #1
    91f4:	mov	r0, r4
    91f8:	strne	r3, [sp, #60]	; 0x3c
    91fc:	bl	46c8 <strcmp@plt>
    9200:	subs	r3, r0, #0
    9204:	add	r5, r5, #1
    9208:	beq	9244 <main@@Base+0x4618>
    920c:	ldr	r1, [pc, #832]	; 9554 <main@@Base+0x4928>
    9210:	mov	r0, r4
    9214:	add	r1, pc, r1
    9218:	bl	46c8 <strcmp@plt>
    921c:	subs	r3, r0, #0
    9220:	str	r3, [sp, #36]	; 0x24
    9224:	beq	9160 <main@@Base+0x4534>
    9228:	ldr	r2, [pc, #808]	; 9558 <main@@Base+0x492c>
    922c:	mov	r3, r4
    9230:	add	r2, pc, r2
    9234:	mov	r1, #16
    9238:	mov	r0, #0
    923c:	bl	40f8 <av_log@plt>
    9240:	b	9194 <main@@Base+0x4568>
    9244:	ldr	r0, [sp, #40]	; 0x28
    9248:	str	r3, [sp, #36]	; 0x24
    924c:	bl	46ec <av_free@plt>
    9250:	ldr	r3, [sp, #72]	; 0x48
    9254:	str	r3, [sp, #40]	; 0x28
    9258:	ldr	r3, [sp, #36]	; 0x24
    925c:	str	r3, [sp, #72]	; 0x48
    9260:	mov	r0, r3
    9264:	b	9198 <main@@Base+0x456c>
    9268:	ldr	r6, [sp, #40]	; 0x28
    926c:	ldr	r7, [sp, #52]	; 0x34
    9270:	ldr	fp, [sp, #56]	; 0x38
    9274:	ldr	r3, [sp, #48]	; 0x30
    9278:	mov	r2, #1
    927c:	sub	r5, r3, #4
    9280:	mov	r0, r5
    9284:	mov	r1, #0
    9288:	bl	3f48 <av_bprint_init@plt>
    928c:	cmp	r6, #0
    9290:	beq	9488 <main@@Base+0x485c>
    9294:	mov	r3, r6
    9298:	ldrb	r1, [r6]
    929c:	ldr	r9, [pc, #696]	; 955c <main@@Base+0x4930>
    92a0:	ldr	r8, [pc, #696]	; 9560 <main@@Base+0x4934>
    92a4:	add	r9, pc, r9
    92a8:	add	r8, pc, r8
    92ac:	b	92e0 <main@@Base+0x46b4>
    92b0:	ldrb	r2, [r3, #1]
    92b4:	add	r4, r3, #2
    92b8:	cmp	r2, #0
    92bc:	beq	9370 <main@@Base+0x4744>
    92c0:	cmp	r2, #112	; 0x70
    92c4:	beq	9358 <main@@Base+0x472c>
    92c8:	cmp	r2, #116	; 0x74
    92cc:	beq	9314 <main@@Base+0x46e8>
    92d0:	cmp	r2, #37	; 0x25
    92d4:	beq	9304 <main@@Base+0x46d8>
    92d8:	mov	r3, r4
    92dc:	ldrb	r1, [r4]
    92e0:	cmp	r1, #0
    92e4:	beq	9370 <main@@Base+0x4744>
    92e8:	cmp	r1, #37	; 0x25
    92ec:	beq	92b0 <main@@Base+0x4684>
    92f0:	mov	r2, #1
    92f4:	mov	r0, r5
    92f8:	add	r4, r3, r2
    92fc:	bl	45f0 <av_bprint_chars@plt>
    9300:	b	92d8 <main@@Base+0x46ac>
    9304:	mov	r2, #1
    9308:	mov	r0, r5
    930c:	bl	45f0 <av_bprint_chars@plt>
    9310:	b	92d8 <main@@Base+0x46ac>
    9314:	ldr	r1, [r7]
    9318:	ldr	r3, [r7, #16]
    931c:	ldr	r2, [r7, #20]
    9320:	str	r1, [sp, #12]
    9324:	ldr	r1, [r7, #4]
    9328:	add	r2, r2, #1888	; 0x760
    932c:	str	r1, [sp, #8]
    9330:	ldr	r1, [r7, #8]
    9334:	add	r3, r3, #1
    9338:	str	r1, [sp, #4]
    933c:	ldr	r1, [r7, #12]
    9340:	add	r2, r2, #12
    9344:	str	r1, [sp]
    9348:	mov	r0, r5
    934c:	mov	r1, r8
    9350:	bl	459c <av_bprintf@plt>
    9354:	b	92d8 <main@@Base+0x46ac>
    9358:	ldr	r3, [pc, #516]	; 9564 <main@@Base+0x4938>
    935c:	mov	r1, r9
    9360:	ldr	r2, [fp, r3]
    9364:	mov	r0, r5
    9368:	bl	459c <av_bprintf@plt>
    936c:	b	92d8 <main@@Base+0x46ac>
    9370:	mov	r0, r6
    9374:	bl	46ec <av_free@plt>
    9378:	ldrd	r2, [sp, #88]	; 0x58
    937c:	cmp	r2, r3
    9380:	bcs	94fc <main@@Base+0x48d0>
    9384:	ldr	r1, [pc, #476]	; 9568 <main@@Base+0x493c>
    9388:	ldr	r0, [sp, #84]	; 0x54
    938c:	add	r1, pc, r1
    9390:	bl	3de0 <fopen64@plt>
    9394:	ldr	r3, [pc, #464]	; 956c <main@@Base+0x4940>
    9398:	cmp	r0, #0
    939c:	add	r3, pc, r3
    93a0:	mov	r6, r0
    93a4:	str	r0, [r3]
    93a8:	beq	9498 <main@@Base+0x486c>
    93ac:	ldr	r0, [pc, #444]	; 9570 <main@@Base+0x4944>
    93b0:	mov	r4, #0
    93b4:	add	r0, pc, r0
    93b8:	bl	3f60 <av_log_set_callback@plt>
    93bc:	ldr	r2, [sp, #84]	; 0x54
    93c0:	ldr	r3, [pc, #412]	; 9564 <main@@Base+0x4938>
    93c4:	ldr	r3, [fp, r3]
    93c8:	str	r2, [sp, #24]
    93cc:	ldr	r2, [r7]
    93d0:	str	r2, [sp, #20]
    93d4:	ldr	r1, [r7, #4]
    93d8:	ldr	r2, [pc, #404]	; 9574 <main@@Base+0x4948>
    93dc:	str	r1, [sp, #16]
    93e0:	ldr	r0, [r7, #8]
    93e4:	add	r2, pc, r2
    93e8:	str	r0, [sp, #12]
    93ec:	ldr	r0, [r7, #12]
    93f0:	mov	r1, #32
    93f4:	str	r0, [sp, #8]
    93f8:	ldr	r0, [r7, #16]
    93fc:	add	r0, r0, #1
    9400:	str	r0, [sp, #4]
    9404:	ldr	ip, [r7, #20]
    9408:	mov	r0, #0
    940c:	add	ip, ip, #1888	; 0x760
    9410:	add	ip, ip, #12
    9414:	str	ip, [sp]
    9418:	bl	40f8 <av_log@plt>
    941c:	mov	r0, r5
    9420:	mov	r1, #0
    9424:	bl	4308 <av_bprint_finalize@plt>
    9428:	b	90c0 <main@@Base+0x4494>
    942c:	cmp	r5, #0
    9430:	ldr	r6, [sp, #40]	; 0x28
    9434:	ldr	r7, [sp, #52]	; 0x34
    9438:	mov	r4, r0
    943c:	ldr	fp, [sp, #56]	; 0x38
    9440:	beq	9274 <main@@Base+0x4648>
    9444:	add	r5, sp, #1104	; 0x450
    9448:	add	r5, r5, #4
    944c:	mov	r0, r5
    9450:	mov	r2, #64	; 0x40
    9454:	mov	r1, #0
    9458:	bl	41e8 <memset@plt>
    945c:	mov	r1, r5
    9460:	mov	r0, r4
    9464:	mov	r2, #64	; 0x40
    9468:	bl	44f4 <av_strerror@plt>
    946c:	ldr	r2, [pc, #260]	; 9578 <main@@Base+0x494c>
    9470:	mov	r3, r5
    9474:	add	r2, pc, r2
    9478:	mov	r1, #16
    947c:	mov	r0, #0
    9480:	bl	40f8 <av_log@plt>
    9484:	b	9274 <main@@Base+0x4648>
    9488:	ldr	r3, [pc, #236]	; 957c <main@@Base+0x4950>
    948c:	mov	r1, #37	; 0x25
    9490:	add	r3, pc, r3
    9494:	b	929c <main@@Base+0x4670>
    9498:	bl	3fb4 <__errno_location@plt>
    949c:	ldr	r4, [r0]
    94a0:	ldr	r5, [sp, #84]	; 0x54
    94a4:	mov	r0, r4
    94a8:	bl	3f3c <strerror@plt>
    94ac:	ldr	r2, [pc, #204]	; 9580 <main@@Base+0x4954>
    94b0:	str	r0, [sp]
    94b4:	mov	r3, r5
    94b8:	add	r2, pc, r2
    94bc:	mov	r0, r6
    94c0:	mov	r1, #16
    94c4:	rsb	r4, r4, #0
    94c8:	bl	40f8 <av_log@plt>
    94cc:	b	90c0 <main@@Base+0x4494>
    94d0:	ldr	r3, [sp, #48]	; 0x30
    94d4:	mov	r1, #0
    94d8:	sub	r5, r3, #4
    94dc:	mov	r0, r5
    94e0:	mov	r2, #1
    94e4:	bl	3f48 <av_bprint_init@plt>
    94e8:	ldr	r3, [pc, #148]	; 9584 <main@@Base+0x4958>
    94ec:	mov	r6, #0
    94f0:	mov	r1, #37	; 0x25
    94f4:	add	r3, pc, r3
    94f8:	b	929c <main@@Base+0x4670>
    94fc:	ldr	r2, [pc, #132]	; 9588 <main@@Base+0x495c>
    9500:	mov	r1, #16
    9504:	add	r2, pc, r2
    9508:	mov	r0, #0
    950c:	bl	40f8 <av_log@plt>
    9510:	mvn	r4, #11
    9514:	b	90c0 <main@@Base+0x4494>
    9518:	ldr	r2, [pc, #108]	; 958c <main@@Base+0x4960>
    951c:	mov	r0, r3
    9520:	add	r2, pc, r2
    9524:	mov	r1, #8
    9528:	bl	40f8 <av_log@plt>
    952c:	mov	r0, #1
    9530:	bl	902c <main@@Base+0x4400>
    9534:	bl	3f00 <__stack_chk_fail@plt>
    9538:	andeq	r8, r2, r8, ror #22
    953c:	andeq	r0, r0, r8, ror #7
    9540:			; <UNDEFINED> instruction: 0x00029bbc
    9544:	ldrdeq	r3, [r1], -r0
    9548:	andeq	r5, r1, ip, lsr #19
    954c:	andeq	r5, r1, ip, lsr #1
    9550:	andeq	r8, r2, r0, lsl #29
    9554:	andeq	r6, r1, r8, lsr #15
    9558:	andeq	r3, r1, ip, ror #3
    955c:	muleq	r1, r4, r3
    9560:	muleq	r1, r4, r1
    9564:	andeq	r0, r0, r8, asr #7
    9568:	andeq	r6, r1, ip, asr #2
    956c:	andeq	r9, r2, r0, asr #17
    9570:			; <UNDEFINED> instruction: 0xffffe38c
    9574:	andeq	r3, r1, r0, asr #1
    9578:	andeq	r2, r1, r0, asr pc
    957c:	andeq	r2, r1, r8, lsr #30
    9580:	andeq	r2, r1, ip, asr #31
    9584:	andeq	r2, r1, r4, asr #29
    9588:	andeq	r2, r1, r4, asr pc
    958c:	andeq	r2, r1, r0, ror #29
    9590:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    9594:	mov	r5, #0
    9598:	ldr	r3, [pc, #248]	; 9698 <main@@Base+0x4a6c>
    959c:	ldr	r2, [pc, #248]	; 969c <main@@Base+0x4a70>
    95a0:	add	r3, pc, r3
    95a4:	ldr	sl, [r3, r2]
    95a8:	sub	sp, sp, #16
    95ac:	ldr	r3, [sl]
    95b0:	mov	r8, r0
    95b4:	mov	r4, r5
    95b8:	str	r3, [sp, #12]
    95bc:	b	95c4 <main@@Base+0x4998>
    95c0:	add	r5, r5, #1
    95c4:	mov	r0, r4
    95c8:	bl	3ff0 <avcodec_descriptor_next@plt>
    95cc:	subs	r4, r0, #0
    95d0:	bne	95c0 <main@@Base+0x4994>
    95d4:	mov	r1, #4
    95d8:	mov	r0, r5
    95dc:	bl	4014 <av_calloc@plt>
    95e0:	subs	r9, r0, #0
    95e4:	beq	964c <main@@Base+0x4a20>
    95e8:	sub	r7, r9, #4
    95ec:	mov	r6, r4
    95f0:	b	95fc <main@@Base+0x49d0>
    95f4:	add	r6, r6, #1
    95f8:	str	r4, [r7, #4]!
    95fc:	mov	r0, r4
    9600:	bl	3ff0 <avcodec_descriptor_next@plt>
    9604:	subs	r4, r0, #0
    9608:	bne	95f4 <main@@Base+0x49c8>
    960c:	cmp	r5, r6
    9610:	bne	9668 <main@@Base+0x4a3c>
    9614:	ldr	r3, [pc, #132]	; 96a0 <main@@Base+0x4a74>
    9618:	mov	r2, #4
    961c:	add	r3, pc, r3
    9620:	mov	r0, r9
    9624:	mov	r1, r5
    9628:	bl	3e94 <qsort@plt>
    962c:	str	r9, [r8]
    9630:	ldr	r2, [sp, #12]
    9634:	ldr	r3, [sl]
    9638:	mov	r0, r5
    963c:	cmp	r2, r3
    9640:	bne	9664 <main@@Base+0x4a38>
    9644:	add	sp, sp, #16
    9648:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    964c:	ldr	r2, [pc, #80]	; 96a4 <main@@Base+0x4a78>
    9650:	mov	r1, #16
    9654:	add	r2, pc, r2
    9658:	bl	40f8 <av_log@plt>
    965c:	mov	r0, #1
    9660:	bl	902c <main@@Base+0x4400>
    9664:	bl	3f00 <__stack_chk_fail@plt>
    9668:	ldr	r3, [pc, #56]	; 96a8 <main@@Base+0x4a7c>
    966c:	ldr	r2, [pc, #56]	; 96ac <main@@Base+0x4a80>
    9670:	add	r3, pc, r3
    9674:	str	r2, [sp, #4]
    9678:	str	r3, [sp]
    967c:	ldr	r2, [pc, #44]	; 96b0 <main@@Base+0x4a84>
    9680:	ldr	r3, [pc, #44]	; 96b4 <main@@Base+0x4a88>
    9684:	mov	r1, r4
    9688:	add	r3, pc, r3
    968c:	add	r2, pc, r2
    9690:	bl	40f8 <av_log@plt>
    9694:	bl	4278 <abort@plt>
    9698:	andeq	r8, r2, ip, asr r6
    969c:	andeq	r0, r0, r8, ror #7
    96a0:			; <UNDEFINED> instruction: 0xffffe090
    96a4:	muleq	r1, r8, lr
    96a8:			; <UNDEFINED> instruction: 0x00012ebc
    96ac:	strdeq	r0, [r0], -fp
    96b0:	andeq	r2, r1, r0, lsl #29
    96b4:	andeq	r2, r1, r4, ror lr
    96b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    96bc:	ldr	r3, [pc, #652]	; 9950 <main@@Base+0x4d24>
    96c0:	ldr	r2, [pc, #652]	; 9954 <main@@Base+0x4d28>
    96c4:	add	r3, pc, r3
    96c8:	ldr	r2, [r3, r2]
    96cc:	sub	sp, sp, #28
    96d0:	ldr	r3, [r2]
    96d4:	mov	r7, r0
    96d8:	add	r0, sp, #16
    96dc:	str	r2, [sp, #12]
    96e0:	str	r3, [sp, #20]
    96e4:	bl	9590 <main@@Base+0x4964>
    96e8:	cmp	r7, #0
    96ec:	str	r0, [sp, #8]
    96f0:	bne	9940 <main@@Base+0x4d14>
    96f4:	ldr	r2, [pc, #604]	; 9958 <main@@Base+0x4d2c>
    96f8:	add	r2, pc, r2
    96fc:	ldr	r1, [pc, #600]	; 995c <main@@Base+0x4d30>
    9700:	mov	r0, #1
    9704:	add	r1, pc, r1
    9708:	bl	474c <__printf_chk@plt>
    970c:	ldr	r3, [sp, #8]
    9710:	cmp	r3, #0
    9714:	beq	98c8 <main@@Base+0x4c9c>
    9718:	mov	r3, #0
    971c:	ldr	fp, [pc, #572]	; 9960 <main@@Base+0x4d34>
    9720:	ldr	r9, [pc, #572]	; 9964 <main@@Base+0x4d38>
    9724:	ldr	sl, [pc, #572]	; 9968 <main@@Base+0x4d3c>
    9728:	ldr	r8, [pc, #572]	; 996c <main@@Base+0x4d40>
    972c:	str	r3, [sp, #4]
    9730:	add	fp, pc, fp
    9734:	add	r9, pc, r9
    9738:	add	sl, pc, sl
    973c:	add	r8, pc, r8
    9740:	ldr	r3, [sp, #16]
    9744:	ldr	r2, [sp, #4]
    9748:	cmp	r7, #0
    974c:	ldr	r6, [r3, r2, lsl #2]
    9750:	mov	r4, #0
    9754:	ldr	r5, [r6]
    9758:	bne	9878 <main@@Base+0x4c4c>
    975c:	mov	r0, r4
    9760:	bl	42e4 <av_codec_next@plt>
    9764:	subs	r4, r0, #0
    9768:	beq	98b0 <main@@Base+0x4c84>
    976c:	ldr	r3, [r4, #12]
    9770:	cmp	r5, r3
    9774:	bne	975c <main@@Base+0x4b30>
    9778:	bl	45d8 <av_codec_is_decoder@plt>
    977c:	cmp	r0, #0
    9780:	beq	975c <main@@Base+0x4b30>
    9784:	ldr	r3, [r6, #4]
    9788:	cmp	r3, #4
    978c:	movhi	r2, #63	; 0x3f
    9790:	ldrbls	r2, [fp, r3]
    9794:	mov	r1, r9
    9798:	mov	r0, #1
    979c:	bl	474c <__printf_chk@plt>
    97a0:	ldr	r3, [r4, #16]
    97a4:	tst	r3, #4096	; 0x1000
    97a8:	movne	r1, sl
    97ac:	ldreq	r1, [pc, #444]	; 9970 <main@@Base+0x4d44>
    97b0:	addeq	r1, pc, r1
    97b4:	mov	r0, #1
    97b8:	bl	474c <__printf_chk@plt>
    97bc:	ldr	r3, [r4, #16]
    97c0:	tst	r3, #8192	; 0x2000
    97c4:	bne	98ec <main@@Base+0x4cc0>
    97c8:	ldr	r1, [pc, #420]	; 9974 <main@@Base+0x4d48>
    97cc:	add	r1, pc, r1
    97d0:	mov	r0, #1
    97d4:	bl	474c <__printf_chk@plt>
    97d8:	ldr	r3, [r4, #16]
    97dc:	tst	r3, #512	; 0x200
    97e0:	bne	9910 <main@@Base+0x4ce4>
    97e4:	ldr	r1, [pc, #396]	; 9978 <main@@Base+0x4d4c>
    97e8:	add	r1, pc, r1
    97ec:	mov	r0, #1
    97f0:	bl	474c <__printf_chk@plt>
    97f4:	ldr	r3, [r4, #16]
    97f8:	tst	r3, #1
    97fc:	bne	9904 <main@@Base+0x4cd8>
    9800:	ldr	r1, [pc, #372]	; 997c <main@@Base+0x4d50>
    9804:	add	r1, pc, r1
    9808:	mov	r0, #1
    980c:	bl	474c <__printf_chk@plt>
    9810:	ldr	r3, [r4, #16]
    9814:	tst	r3, #2
    9818:	bne	98f8 <main@@Base+0x4ccc>
    981c:	ldr	r1, [pc, #348]	; 9980 <main@@Base+0x4d54>
    9820:	add	r1, pc, r1
    9824:	mov	r0, #1
    9828:	bl	474c <__printf_chk@plt>
    982c:	ldrd	r2, [r4]
    9830:	cmp	r3, #0
    9834:	beq	9934 <main@@Base+0x4d08>
    9838:	mov	r1, r8
    983c:	mov	r0, #1
    9840:	bl	474c <__printf_chk@plt>
    9844:	ldr	r5, [r6, #8]
    9848:	ldr	r0, [r4]
    984c:	mov	r1, r5
    9850:	bl	46c8 <strcmp@plt>
    9854:	cmp	r0, #0
    9858:	bne	991c <main@@Base+0x4cf0>
    985c:	ldr	r1, [pc, #288]	; 9984 <main@@Base+0x4d58>
    9860:	mov	r0, #1
    9864:	add	r1, pc, r1
    9868:	bl	474c <__printf_chk@plt>
    986c:	cmp	r7, #0
    9870:	ldr	r5, [r6]
    9874:	beq	975c <main@@Base+0x4b30>
    9878:	mov	r0, r4
    987c:	bl	42e4 <av_codec_next@plt>
    9880:	subs	r4, r0, #0
    9884:	beq	98b0 <main@@Base+0x4c84>
    9888:	ldr	r3, [r4, #12]
    988c:	cmp	r5, r3
    9890:	bne	9878 <main@@Base+0x4c4c>
    9894:	bl	42a8 <av_codec_is_encoder@plt>
    9898:	cmp	r0, #0
    989c:	bne	9784 <main@@Base+0x4b58>
    98a0:	mov	r0, r4
    98a4:	bl	42e4 <av_codec_next@plt>
    98a8:	subs	r4, r0, #0
    98ac:	bne	9888 <main@@Base+0x4c5c>
    98b0:	ldr	r3, [sp, #4]
    98b4:	ldr	r2, [sp, #8]
    98b8:	add	r3, r3, #1
    98bc:	cmp	r2, r3
    98c0:	str	r3, [sp, #4]
    98c4:	bne	9740 <main@@Base+0x4b14>
    98c8:	ldr	r0, [sp, #16]
    98cc:	bl	46ec <av_free@plt>
    98d0:	ldr	r3, [sp, #12]
    98d4:	ldr	r2, [sp, #20]
    98d8:	ldr	r3, [r3]
    98dc:	cmp	r2, r3
    98e0:	bne	994c <main@@Base+0x4d20>
    98e4:	add	sp, sp, #28
    98e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    98ec:	ldr	r1, [pc, #148]	; 9988 <main@@Base+0x4d5c>
    98f0:	add	r1, pc, r1
    98f4:	b	97d0 <main@@Base+0x4ba4>
    98f8:	ldr	r1, [pc, #140]	; 998c <main@@Base+0x4d60>
    98fc:	add	r1, pc, r1
    9900:	b	9824 <main@@Base+0x4bf8>
    9904:	ldr	r1, [pc, #132]	; 9990 <main@@Base+0x4d64>
    9908:	add	r1, pc, r1
    990c:	b	9808 <main@@Base+0x4bdc>
    9910:	ldr	r1, [pc, #124]	; 9994 <main@@Base+0x4d68>
    9914:	add	r1, pc, r1
    9918:	b	97ec <main@@Base+0x4bc0>
    991c:	ldr	r1, [pc, #116]	; 9998 <main@@Base+0x4d6c>
    9920:	mov	r2, r5
    9924:	add	r1, pc, r1
    9928:	mov	r0, #1
    992c:	bl	474c <__printf_chk@plt>
    9930:	b	985c <main@@Base+0x4c30>
    9934:	ldr	r3, [pc, #96]	; 999c <main@@Base+0x4d70>
    9938:	add	r3, pc, r3
    993c:	b	9838 <main@@Base+0x4c0c>
    9940:	ldr	r2, [pc, #88]	; 99a0 <main@@Base+0x4d74>
    9944:	add	r2, pc, r2
    9948:	b	96fc <main@@Base+0x4ad0>
    994c:	bl	3f00 <__stack_chk_fail@plt>
    9950:	andeq	r8, r2, r8, lsr r5
    9954:	andeq	r0, r0, r8, ror #7
    9958:	andeq	r2, r1, r8, asr lr
    995c:	andeq	r2, r1, r8, ror #28
    9960:	andeq	r2, r1, r0, asr #9
    9964:	andeq	r2, r1, r4, lsr pc
    9968:	andeq	r2, r1, r4, lsr #28
    996c:	andeq	r2, r1, r0, lsr pc
    9970:			; <UNDEFINED> instruction: 0x00012db0
    9974:	muleq	r1, r4, sp
    9978:	andeq	r2, r1, r8, ror sp
    997c:	andeq	r2, r1, ip, asr sp
    9980:	andeq	r2, r1, r0, asr #26
    9984:	andeq	r3, r1, ip, lsr #6
    9988:	andeq	r5, r1, r0, lsl #1
    998c:	andeq	r2, r1, ip, asr #8
    9990:	andeq	r2, r1, r0, ror #24
    9994:	andeq	r2, r1, r0, asr ip
    9998:	andeq	r2, r1, r4, asr sp
    999c:	andeq	r4, r1, r0, ror pc
    99a0:	andeq	r2, r1, r0, lsl #24
    99a4:	push	{r4, r5, r6, r7, lr}
    99a8:	vpush	{d8-d9}
    99ac:	mov	r6, r1
    99b0:	ldr	r3, [pc, #284]	; 9ad4 <main@@Base+0x4ea8>
    99b4:	ldr	r1, [pc, #284]	; 9ad8 <main@@Base+0x4eac>
    99b8:	add	r3, pc, r3
    99bc:	ldr	r4, [r3, r1]
    99c0:	sub	sp, sp, #44	; 0x2c
    99c4:	ldr	r3, [r4]
    99c8:	mov	r7, r0
    99cc:	add	r1, sp, #32
    99d0:	mov	r0, r6
    99d4:	str	r3, [sp, #36]	; 0x24
    99d8:	mov	r5, r2
    99dc:	vmov.f64	d8, d0
    99e0:	vmov.f64	d9, d1
    99e4:	bl	4218 <av_strtod@plt>
    99e8:	ldr	r3, [sp, #32]
    99ec:	ldrb	r3, [r3]
    99f0:	cmp	r3, #0
    99f4:	bne	9abc <main@@Base+0x4e90>
    99f8:	vcmpe.f64	d0, d8
    99fc:	vmrs	APSR_nzcv, fpscr
    9a00:	bmi	9aac <main@@Base+0x4e80>
    9a04:	vcmpe.f64	d0, d9
    9a08:	vmrs	APSR_nzcv, fpscr
    9a0c:	bgt	9ac8 <main@@Base+0x4e9c>
    9a10:	cmp	r5, #1024	; 0x400
    9a14:	beq	9a50 <main@@Base+0x4e24>
    9a18:	cmp	r5, #128	; 0x80
    9a1c:	bne	9a34 <main@@Base+0x4e08>
    9a20:	vcvt.s32.f64	s14, d0
    9a24:	vcvt.f64.s32	d7, s14
    9a28:	vcmp.f64	d7, d0
    9a2c:	vmrs	APSR_nzcv, fpscr
    9a30:	bne	9a80 <main@@Base+0x4e54>
    9a34:	ldr	r2, [sp, #36]	; 0x24
    9a38:	ldr	r3, [r4]
    9a3c:	cmp	r2, r3
    9a40:	bne	9ab8 <main@@Base+0x4e8c>
    9a44:	add	sp, sp, #44	; 0x2c
    9a48:	vpop	{d8-d9}
    9a4c:	pop	{r4, r5, r6, r7, pc}
    9a50:	vmov	r0, r1, d0
    9a54:	vstr	d0, [sp, #24]
    9a58:	bl	1b9f0 <vc_gpuserv_execute_code@@Base+0x85c>
    9a5c:	bl	1b8ac <vc_gpuserv_execute_code@@Base+0x718>
    9a60:	vldr	d0, [sp, #24]
    9a64:	vmov	d7, r0, r1
    9a68:	vcmp.f64	d7, d0
    9a6c:	vmrs	APSR_nzcv, fpscr
    9a70:	beq	9a34 <main@@Base+0x4e08>
    9a74:	ldr	r2, [pc, #96]	; 9adc <main@@Base+0x4eb0>
    9a78:	add	r2, pc, r2
    9a7c:	b	9a88 <main@@Base+0x4e5c>
    9a80:	ldr	r2, [pc, #88]	; 9ae0 <main@@Base+0x4eb4>
    9a84:	add	r2, pc, r2
    9a88:	mov	r0, #0
    9a8c:	vstr	d9, [sp, #16]
    9a90:	vstr	d8, [sp, #8]
    9a94:	str	r6, [sp]
    9a98:	mov	r3, r7
    9a9c:	mov	r1, #8
    9aa0:	bl	40f8 <av_log@plt>
    9aa4:	mov	r0, #1
    9aa8:	bl	902c <main@@Base+0x4400>
    9aac:	ldr	r2, [pc, #48]	; 9ae4 <main@@Base+0x4eb8>
    9ab0:	add	r2, pc, r2
    9ab4:	b	9a88 <main@@Base+0x4e5c>
    9ab8:	bl	3f00 <__stack_chk_fail@plt>
    9abc:	ldr	r2, [pc, #36]	; 9ae8 <main@@Base+0x4ebc>
    9ac0:	add	r2, pc, r2
    9ac4:	b	9a88 <main@@Base+0x4e5c>
    9ac8:	ldr	r2, [pc, #28]	; 9aec <main@@Base+0x4ec0>
    9acc:	add	r2, pc, r2
    9ad0:	b	9a88 <main@@Base+0x4e5c>
    9ad4:	andeq	r8, r2, r4, asr #4
    9ad8:	andeq	r0, r0, r8, ror #7
    9adc:	andeq	r2, r1, ip, ror #24
    9ae0:	andeq	r2, r1, r4, lsl #25
    9ae4:	strdeq	r2, [r1], -ip
    9ae8:	andeq	r2, r1, r4, asr #23
    9aec:	andeq	r2, r1, r0, ror #23
    9af0:	push	{r4, r5, r6, r7, lr}
    9af4:	ldr	r3, [pc, #140]	; 9b88 <main@@Base+0x4f5c>
    9af8:	ldr	ip, [pc, #140]	; 9b8c <main@@Base+0x4f60>
    9afc:	add	r3, pc, r3
    9b00:	ldr	r4, [r3, ip]
    9b04:	sub	sp, sp, #28
    9b08:	ldr	r3, [r4]
    9b0c:	mov	r5, r0
    9b10:	add	r0, sp, #8
    9b14:	mov	r6, r1
    9b18:	str	r3, [sp, #20]
    9b1c:	mov	r7, r2
    9b20:	bl	408c <av_parse_time@plt>
    9b24:	cmp	r0, #0
    9b28:	blt	9b48 <main@@Base+0x4f1c>
    9b2c:	ldrd	r0, [sp, #8]
    9b30:	ldr	r2, [sp, #20]
    9b34:	ldr	r3, [r4]
    9b38:	cmp	r2, r3
    9b3c:	bne	9b78 <main@@Base+0x4f4c>
    9b40:	add	sp, sp, #28
    9b44:	pop	{r4, r5, r6, r7, pc}
    9b48:	cmp	r7, #0
    9b4c:	bne	9b7c <main@@Base+0x4f50>
    9b50:	ldr	r3, [pc, #56]	; 9b90 <main@@Base+0x4f64>
    9b54:	add	r3, pc, r3
    9b58:	ldr	r2, [pc, #52]	; 9b94 <main@@Base+0x4f68>
    9b5c:	mov	r0, #0
    9b60:	stm	sp, {r5, r6}
    9b64:	add	r2, pc, r2
    9b68:	mov	r1, #8
    9b6c:	bl	40f8 <av_log@plt>
    9b70:	mov	r0, #1
    9b74:	bl	902c <main@@Base+0x4400>
    9b78:	bl	3f00 <__stack_chk_fail@plt>
    9b7c:	ldr	r3, [pc, #20]	; 9b98 <main@@Base+0x4f6c>
    9b80:	add	r3, pc, r3
    9b84:	b	9b58 <main@@Base+0x4f2c>
    9b88:	andeq	r8, r2, r0, lsl #2
    9b8c:	andeq	r0, r0, r8, ror #7
    9b90:	ldrdeq	r2, [r1], -r8
    9b94:	ldrdeq	r2, [r1], -r0
    9b98:	andeq	r5, r1, r0, lsl #9
    9b9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9ba0:	ldr	lr, [pc, #484]	; 9d8c <main@@Base+0x5160>
    9ba4:	ldr	r5, [pc, #484]	; 9d90 <main@@Base+0x5164>
    9ba8:	add	lr, pc, lr
    9bac:	ldr	r4, [lr, r5]
    9bb0:	sub	sp, sp, #84	; 0x54
    9bb4:	ldr	ip, [r0]
    9bb8:	str	r4, [sp]
    9bbc:	ldr	r4, [r4]
    9bc0:	cmp	ip, #0
    9bc4:	str	r4, [sp, #76]	; 0x4c
    9bc8:	ldr	r8, [sp, #120]	; 0x78
    9bcc:	beq	9c90 <main@@Base+0x5064>
    9bd0:	cmp	r8, #0
    9bd4:	mov	r5, r2
    9bd8:	mov	r9, r1
    9bdc:	mov	r7, r3
    9be0:	mov	r4, r0
    9be4:	mov	r2, #1
    9be8:	beq	9cbc <main@@Base+0x5090>
    9bec:	mov	r1, ip
    9bf0:	ldr	r3, [pc, #412]	; 9d94 <main@@Base+0x5168>
    9bf4:	ldr	sl, [pc, #412]	; 9d98 <main@@Base+0x516c>
    9bf8:	ldr	fp, [pc, #412]	; 9d9c <main@@Base+0x5170>
    9bfc:	add	r3, pc, r3
    9c00:	add	sl, pc, sl
    9c04:	add	fp, pc, fp
    9c08:	str	r3, [sp, #4]
    9c0c:	ldr	r3, [r4, #4]
    9c10:	bics	r0, r5, r3
    9c14:	bne	9c84 <main@@Base+0x5058>
    9c18:	tst	r3, r8
    9c1c:	beq	9c84 <main@@Base+0x5058>
    9c20:	tst	r3, r7
    9c24:	bne	9c84 <main@@Base+0x5058>
    9c28:	cmp	r2, #0
    9c2c:	bne	9d70 <main@@Base+0x5144>
    9c30:	add	r6, sp, #12
    9c34:	mov	r0, r6
    9c38:	mov	r2, #64	; 0x40
    9c3c:	bl	42c0 <av_strlcpy@plt>
    9c40:	ldr	r3, [r4, #16]
    9c44:	cmp	r3, #0
    9c48:	beq	9c6c <main@@Base+0x5040>
    9c4c:	mov	r2, #64	; 0x40
    9c50:	mov	r1, fp
    9c54:	mov	r0, r6
    9c58:	bl	40e0 <av_strlcat@plt>
    9c5c:	mov	r2, #64	; 0x40
    9c60:	ldr	r1, [r4, #16]
    9c64:	mov	r0, r6
    9c68:	bl	40e0 <av_strlcat@plt>
    9c6c:	mov	r2, r6
    9c70:	ldr	r3, [r4, #12]
    9c74:	mov	r1, sl
    9c78:	mov	r0, #1
    9c7c:	bl	474c <__printf_chk@plt>
    9c80:	mov	r2, #0
    9c84:	ldr	r1, [r4, #20]!
    9c88:	cmp	r1, #0
    9c8c:	bne	9c0c <main@@Base+0x4fe0>
    9c90:	ldr	r1, [pc, #264]	; 9da0 <main@@Base+0x5174>
    9c94:	mov	r0, #1
    9c98:	add	r1, pc, r1
    9c9c:	bl	474c <__printf_chk@plt>
    9ca0:	ldr	r3, [sp]
    9ca4:	ldr	r2, [sp, #76]	; 0x4c
    9ca8:	ldr	r3, [r3]
    9cac:	cmp	r2, r3
    9cb0:	bne	9d88 <main@@Base+0x515c>
    9cb4:	add	sp, sp, #84	; 0x54
    9cb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9cbc:	mov	r1, ip
    9cc0:	ldr	fp, [pc, #220]	; 9da4 <main@@Base+0x5178>
    9cc4:	ldr	sl, [pc, #220]	; 9da8 <main@@Base+0x517c>
    9cc8:	ldr	r8, [pc, #220]	; 9dac <main@@Base+0x5180>
    9ccc:	add	fp, pc, fp
    9cd0:	add	sl, pc, sl
    9cd4:	add	r8, pc, r8
    9cd8:	ldr	r3, [r4, #4]
    9cdc:	bics	r0, r5, r3
    9ce0:	bne	9d48 <main@@Base+0x511c>
    9ce4:	tst	r7, r3
    9ce8:	bne	9d48 <main@@Base+0x511c>
    9cec:	cmp	r2, #0
    9cf0:	bne	9d58 <main@@Base+0x512c>
    9cf4:	add	r6, sp, #12
    9cf8:	mov	r0, r6
    9cfc:	mov	r2, #64	; 0x40
    9d00:	bl	42c0 <av_strlcpy@plt>
    9d04:	ldr	r3, [r4, #16]
    9d08:	cmp	r3, #0
    9d0c:	beq	9d30 <main@@Base+0x5104>
    9d10:	mov	r2, #64	; 0x40
    9d14:	mov	r1, sl
    9d18:	mov	r0, r6
    9d1c:	bl	40e0 <av_strlcat@plt>
    9d20:	mov	r2, #64	; 0x40
    9d24:	ldr	r1, [r4, #16]
    9d28:	mov	r0, r6
    9d2c:	bl	40e0 <av_strlcat@plt>
    9d30:	mov	r2, r6
    9d34:	ldr	r3, [r4, #12]
    9d38:	mov	r1, r8
    9d3c:	mov	r0, #1
    9d40:	bl	474c <__printf_chk@plt>
    9d44:	mov	r2, #0
    9d48:	ldr	r1, [r4, #20]!
    9d4c:	cmp	r1, #0
    9d50:	bne	9cd8 <main@@Base+0x50ac>
    9d54:	b	9c90 <main@@Base+0x5064>
    9d58:	mov	r1, fp
    9d5c:	mov	r2, r9
    9d60:	mov	r0, #1
    9d64:	bl	474c <__printf_chk@plt>
    9d68:	ldr	r1, [r4]
    9d6c:	b	9cf4 <main@@Base+0x50c8>
    9d70:	ldr	r1, [sp, #4]
    9d74:	mov	r2, r9
    9d78:	mov	r0, #1
    9d7c:	bl	474c <__printf_chk@plt>
    9d80:	ldr	r1, [r4]
    9d84:	b	9c30 <main@@Base+0x5004>
    9d88:	bl	3f00 <__stack_chk_fail@plt>
    9d8c:	andeq	r8, r2, r4, asr r0
    9d90:	andeq	r0, r0, r8, ror #7
    9d94:	andeq	r2, r1, r8, ror #22
    9d98:	andeq	r2, r1, ip, asr fp
    9d9c:	andeq	r2, r1, r0, lsl #24
    9da0:	strdeq	r2, [r1], -r8
    9da4:	muleq	r1, r8, sl
    9da8:	andeq	r2, r1, r4, lsr fp
    9dac:	andeq	r2, r1, r8, lsl #21
    9db0:	push	{r4, r5, r6, lr}
    9db4:	ldr	r2, [pc, #152]	; 9e54 <main@@Base+0x5228>
    9db8:	sub	sp, sp, #16
    9dbc:	ldr	ip, [pc, #148]	; 9e58 <main@@Base+0x522c>
    9dc0:	add	r2, pc, r2
    9dc4:	str	r0, [sp, #4]
    9dc8:	ldr	r6, [r2, ip]
    9dcc:	ldr	ip, [r0, #8]
    9dd0:	mov	r3, r0
    9dd4:	ldr	r0, [r6]
    9dd8:	cmp	ip, #0
    9ddc:	mov	r5, r1
    9de0:	str	r0, [sp, #12]
    9de4:	beq	9e10 <main@@Base+0x51e4>
    9de8:	mov	r3, #0
    9dec:	mov	r2, r1
    9df0:	add	r0, sp, #4
    9df4:	mov	r1, r3
    9df8:	bl	47d0 <av_opt_show2@plt>
    9dfc:	ldr	r1, [pc, #88]	; 9e5c <main@@Base+0x5230>
    9e00:	mov	r0, #1
    9e04:	add	r1, pc, r1
    9e08:	bl	474c <__printf_chk@plt>
    9e0c:	ldr	r3, [sp, #4]
    9e10:	mov	r4, #0
    9e14:	mov	r1, r4
    9e18:	mov	r0, r3
    9e1c:	bl	4620 <av_opt_child_class_next@plt>
    9e20:	subs	r4, r0, #0
    9e24:	beq	9e38 <main@@Base+0x520c>
    9e28:	mov	r1, r5
    9e2c:	bl	9db0 <main@@Base+0x5184>
    9e30:	ldr	r3, [sp, #4]
    9e34:	b	9e14 <main@@Base+0x51e8>
    9e38:	ldr	r2, [sp, #12]
    9e3c:	ldr	r3, [r6]
    9e40:	cmp	r2, r3
    9e44:	bne	9e50 <main@@Base+0x5224>
    9e48:	add	sp, sp, #16
    9e4c:	pop	{r4, r5, r6, pc}
    9e50:	bl	3f00 <__stack_chk_fail@plt>
    9e54:	andeq	r7, r2, ip, lsr lr
    9e58:	andeq	r0, r0, r8, ror #7
    9e5c:	andeq	r2, r1, ip, lsl #27
    9e60:	push	{r4, r5, r6, r7, r8, r9, lr}
    9e64:	ldr	r3, [pc, #1580]	; a498 <main@@Base+0x586c>
    9e68:	ldr	r2, [pc, #1580]	; a49c <main@@Base+0x5870>
    9e6c:	add	r3, pc, r3
    9e70:	ldr	r6, [r3, r2]
    9e74:	sub	sp, sp, #148	; 0x94
    9e78:	ldr	r3, [r6]
    9e7c:	mov	r4, r0
    9e80:	str	r3, [sp, #140]	; 0x8c
    9e84:	bl	42a8 <av_codec_is_encoder@plt>
    9e88:	cmp	r0, #0
    9e8c:	bne	a228 <main@@Base+0x55fc>
    9e90:	ldr	r1, [r4, #4]
    9e94:	ldr	r2, [pc, #1540]	; a4a0 <main@@Base+0x5874>
    9e98:	cmp	r1, #0
    9e9c:	add	r2, pc, r2
    9ea0:	ldr	r3, [r4]
    9ea4:	beq	a240 <main@@Base+0x5614>
    9ea8:	str	r1, [sp]
    9eac:	ldr	r1, [pc, #1520]	; a4a4 <main@@Base+0x5878>
    9eb0:	mov	r0, #1
    9eb4:	add	r1, pc, r1
    9eb8:	bl	474c <__printf_chk@plt>
    9ebc:	ldr	r1, [pc, #1508]	; a4a8 <main@@Base+0x587c>
    9ec0:	mov	r0, #1
    9ec4:	add	r1, pc, r1
    9ec8:	bl	474c <__printf_chk@plt>
    9ecc:	ldr	r3, [r4, #16]
    9ed0:	tst	r3, #1
    9ed4:	bne	a3cc <main@@Base+0x57a0>
    9ed8:	tst	r3, #2
    9edc:	bne	a3b4 <main@@Base+0x5788>
    9ee0:	tst	r3, #8
    9ee4:	bne	a39c <main@@Base+0x5770>
    9ee8:	tst	r3, #32
    9eec:	bne	a384 <main@@Base+0x5758>
    9ef0:	tst	r3, #64	; 0x40
    9ef4:	bne	a36c <main@@Base+0x5740>
    9ef8:	tst	r3, #256	; 0x100
    9efc:	bne	a354 <main@@Base+0x5728>
    9f00:	tst	r3, #512	; 0x200
    9f04:	bne	a33c <main@@Base+0x5710>
    9f08:	tst	r3, #1024	; 0x400
    9f0c:	bne	a324 <main@@Base+0x56f8>
    9f10:	tst	r3, #16384	; 0x4000
    9f14:	bne	a30c <main@@Base+0x56e0>
    9f18:	tst	r3, #65536	; 0x10000
    9f1c:	bne	a2f4 <main@@Base+0x56c8>
    9f20:	tst	r3, #45056	; 0xb000
    9f24:	bne	a2dc <main@@Base+0x56b0>
    9f28:	tst	r3, #131072	; 0x20000
    9f2c:	bne	a2c4 <main@@Base+0x5698>
    9f30:	tst	r3, #1073741824	; 0x40000000
    9f34:	bne	a290 <main@@Base+0x5664>
    9f38:	cmp	r3, #0
    9f3c:	blt	a2ac <main@@Base+0x5680>
    9f40:	tst	r3, #262144	; 0x40000
    9f44:	bne	a278 <main@@Base+0x564c>
    9f48:	tst	r3, #524288	; 0x80000
    9f4c:	bne	a260 <main@@Base+0x5634>
    9f50:	cmp	r3, #0
    9f54:	beq	a24c <main@@Base+0x5620>
    9f58:	ldr	r1, [pc, #1356]	; a4ac <main@@Base+0x5880>
    9f5c:	mov	r0, #1
    9f60:	add	r1, pc, r1
    9f64:	bl	474c <__printf_chk@plt>
    9f68:	ldr	r3, [r4, #8]
    9f6c:	cmp	r3, #1
    9f70:	bls	a3e4 <main@@Base+0x57b8>
    9f74:	mov	r1, #0
    9f78:	mov	r0, r4
    9f7c:	bl	46e0 <avcodec_get_hw_config@plt>
    9f80:	cmp	r0, #0
    9f84:	beq	9fe8 <main@@Base+0x53bc>
    9f88:	ldr	r1, [pc, #1312]	; a4b0 <main@@Base+0x5884>
    9f8c:	ldr	r7, [pc, #1312]	; a4b4 <main@@Base+0x5888>
    9f90:	add	r1, pc, r1
    9f94:	mov	r0, #1
    9f98:	bl	474c <__printf_chk@plt>
    9f9c:	mov	r5, #0
    9fa0:	add	r7, pc, r7
    9fa4:	b	9fc4 <main@@Base+0x5398>
    9fa8:	ldr	r0, [r0, #8]
    9fac:	bl	3e04 <av_hwdevice_get_type_name@plt>
    9fb0:	mov	r2, r0
    9fb4:	mov	r0, #1
    9fb8:	mov	r1, r7
    9fbc:	add	r5, r5, r0
    9fc0:	bl	474c <__printf_chk@plt>
    9fc4:	mov	r1, r5
    9fc8:	mov	r0, r4
    9fcc:	bl	46e0 <avcodec_get_hw_config@plt>
    9fd0:	cmp	r0, #0
    9fd4:	bne	9fa8 <main@@Base+0x537c>
    9fd8:	ldr	r1, [pc, #1240]	; a4b8 <main@@Base+0x588c>
    9fdc:	mov	r0, #1
    9fe0:	add	r1, pc, r1
    9fe4:	bl	474c <__printf_chk@plt>
    9fe8:	ldr	r5, [r4, #20]
    9fec:	cmp	r5, #0
    9ff0:	beq	a044 <main@@Base+0x5418>
    9ff4:	ldr	r1, [pc, #1216]	; a4bc <main@@Base+0x5890>
    9ff8:	mov	r0, #1
    9ffc:	add	r1, pc, r1
    a000:	bl	474c <__printf_chk@plt>
    a004:	ldr	r2, [r5]
    a008:	ldr	r7, [pc, #1200]	; a4c0 <main@@Base+0x5894>
    a00c:	cmp	r2, #0
    a010:	add	r7, pc, r7
    a014:	beq	a034 <main@@Base+0x5408>
    a018:	ldr	r3, [r5, #4]
    a01c:	mov	r1, r7
    a020:	mov	r0, #1
    a024:	bl	474c <__printf_chk@plt>
    a028:	ldr	r2, [r5, #8]!
    a02c:	cmp	r2, #0
    a030:	bne	a018 <main@@Base+0x53ec>
    a034:	ldr	r1, [pc, #1160]	; a4c4 <main@@Base+0x5898>
    a038:	mov	r0, #1
    a03c:	add	r1, pc, r1
    a040:	bl	474c <__printf_chk@plt>
    a044:	ldr	r5, [r4, #24]
    a048:	cmp	r5, #0
    a04c:	beq	a0a4 <main@@Base+0x5478>
    a050:	ldr	r1, [pc, #1136]	; a4c8 <main@@Base+0x589c>
    a054:	mov	r0, #1
    a058:	add	r1, pc, r1
    a05c:	bl	474c <__printf_chk@plt>
    a060:	ldr	r0, [r5]
    a064:	cmn	r0, #1
    a068:	beq	a094 <main@@Base+0x5468>
    a06c:	ldr	r7, [pc, #1112]	; a4cc <main@@Base+0x58a0>
    a070:	add	r7, pc, r7
    a074:	bl	4794 <av_get_pix_fmt_name@plt>
    a078:	mov	r1, r7
    a07c:	mov	r2, r0
    a080:	mov	r0, #1
    a084:	bl	474c <__printf_chk@plt>
    a088:	ldr	r0, [r5, #4]!
    a08c:	cmn	r0, #1
    a090:	bne	a074 <main@@Base+0x5448>
    a094:	ldr	r1, [pc, #1076]	; a4d0 <main@@Base+0x58a4>
    a098:	mov	r0, #1
    a09c:	add	r1, pc, r1
    a0a0:	bl	474c <__printf_chk@plt>
    a0a4:	ldr	r7, [r4, #28]
    a0a8:	cmp	r7, #0
    a0ac:	beq	a128 <main@@Base+0x54fc>
    a0b0:	ldr	r1, [pc, #1052]	; a4d4 <main@@Base+0x58a8>
    a0b4:	mov	r0, #1
    a0b8:	add	r1, pc, r1
    a0bc:	bl	474c <__printf_chk@plt>
    a0c0:	ldr	r2, [r7]
    a0c4:	cmp	r2, #0
    a0c8:	beq	a118 <main@@Base+0x54ec>
    a0cc:	ldr	r9, [pc, #1028]	; a4d8 <main@@Base+0x58ac>
    a0d0:	ldr	r8, [pc, #1028]	; a4dc <main@@Base+0x58b0>
    a0d4:	add	r5, sp, #12
    a0d8:	add	r9, pc, r9
    a0dc:	add	r8, pc, r8
    a0e0:	mov	r3, #16
    a0e4:	str	r2, [sp, #4]
    a0e8:	mov	r1, r3
    a0ec:	mov	r2, #1
    a0f0:	str	r9, [sp]
    a0f4:	mov	r0, r5
    a0f8:	bl	41dc <__snprintf_chk@plt>
    a0fc:	mov	r2, r5
    a100:	mov	r1, r8
    a104:	mov	r0, #1
    a108:	bl	474c <__printf_chk@plt>
    a10c:	ldr	r2, [r7, #4]!
    a110:	cmp	r2, #0
    a114:	bne	a0e0 <main@@Base+0x54b4>
    a118:	ldr	r1, [pc, #960]	; a4e0 <main@@Base+0x58b4>
    a11c:	mov	r0, #1
    a120:	add	r1, pc, r1
    a124:	bl	474c <__printf_chk@plt>
    a128:	ldr	r5, [r4, #32]
    a12c:	cmp	r5, #0
    a130:	beq	a188 <main@@Base+0x555c>
    a134:	ldr	r1, [pc, #936]	; a4e4 <main@@Base+0x58b8>
    a138:	mov	r0, #1
    a13c:	add	r1, pc, r1
    a140:	bl	474c <__printf_chk@plt>
    a144:	ldr	r0, [r5]
    a148:	cmn	r0, #1
    a14c:	beq	a178 <main@@Base+0x554c>
    a150:	ldr	r7, [pc, #912]	; a4e8 <main@@Base+0x58bc>
    a154:	add	r7, pc, r7
    a158:	bl	438c <av_get_sample_fmt_name@plt>
    a15c:	mov	r1, r7
    a160:	mov	r2, r0
    a164:	mov	r0, #1
    a168:	bl	474c <__printf_chk@plt>
    a16c:	ldr	r0, [r5, #4]!
    a170:	cmn	r0, #1
    a174:	bne	a158 <main@@Base+0x552c>
    a178:	ldr	r1, [pc, #876]	; a4ec <main@@Base+0x58c0>
    a17c:	mov	r0, #1
    a180:	add	r1, pc, r1
    a184:	bl	474c <__printf_chk@plt>
    a188:	ldr	r7, [r4, #36]	; 0x24
    a18c:	cmp	r7, #0
    a190:	beq	a1fc <main@@Base+0x55d0>
    a194:	ldr	r1, [pc, #852]	; a4f0 <main@@Base+0x58c4>
    a198:	mov	r0, #1
    a19c:	add	r1, pc, r1
    a1a0:	bl	474c <__printf_chk@plt>
    a1a4:	ldrd	r2, [r7]
    a1a8:	orrs	r1, r2, r3
    a1ac:	beq	a1ec <main@@Base+0x55c0>
    a1b0:	ldr	r8, [pc, #828]	; a4f4 <main@@Base+0x58c8>
    a1b4:	add	r5, sp, #12
    a1b8:	add	r8, pc, r8
    a1bc:	strd	r2, [sp]
    a1c0:	mov	r1, #128	; 0x80
    a1c4:	mov	r2, #0
    a1c8:	mov	r0, r5
    a1cc:	bl	4008 <av_get_channel_layout_string@plt>
    a1d0:	mov	r2, r5
    a1d4:	mov	r1, r8
    a1d8:	mov	r0, #1
    a1dc:	bl	474c <__printf_chk@plt>
    a1e0:	ldrd	r2, [r7, #8]!
    a1e4:	orrs	r1, r2, r3
    a1e8:	bne	a1bc <main@@Base+0x5590>
    a1ec:	ldr	r1, [pc, #772]	; a4f8 <main@@Base+0x58cc>
    a1f0:	mov	r0, #1
    a1f4:	add	r1, pc, r1
    a1f8:	bl	474c <__printf_chk@plt>
    a1fc:	ldr	r0, [r4, #44]	; 0x2c
    a200:	cmp	r0, #0
    a204:	beq	a210 <main@@Base+0x55e4>
    a208:	mov	r1, #3
    a20c:	bl	9db0 <main@@Base+0x5184>
    a210:	ldr	r2, [sp, #140]	; 0x8c
    a214:	ldr	r3, [r6]
    a218:	cmp	r2, r3
    a21c:	bne	a494 <main@@Base+0x5868>
    a220:	add	sp, sp, #148	; 0x94
    a224:	pop	{r4, r5, r6, r7, r8, r9, pc}
    a228:	ldr	r1, [r4, #4]
    a22c:	ldr	r2, [pc, #712]	; a4fc <main@@Base+0x58d0>
    a230:	cmp	r1, #0
    a234:	add	r2, pc, r2
    a238:	ldr	r3, [r4]
    a23c:	bne	9ea8 <main@@Base+0x527c>
    a240:	ldr	r1, [pc, #696]	; a500 <main@@Base+0x58d4>
    a244:	add	r1, pc, r1
    a248:	b	9ea8 <main@@Base+0x527c>
    a24c:	ldr	r1, [pc, #688]	; a504 <main@@Base+0x58d8>
    a250:	mov	r0, #1
    a254:	add	r1, pc, r1
    a258:	bl	474c <__printf_chk@plt>
    a25c:	b	9f58 <main@@Base+0x532c>
    a260:	ldr	r1, [pc, #672]	; a508 <main@@Base+0x58dc>
    a264:	mov	r0, #1
    a268:	add	r1, pc, r1
    a26c:	bl	474c <__printf_chk@plt>
    a270:	ldr	r3, [r4, #16]
    a274:	b	9f50 <main@@Base+0x5324>
    a278:	ldr	r1, [pc, #652]	; a50c <main@@Base+0x58e0>
    a27c:	mov	r0, #1
    a280:	add	r1, pc, r1
    a284:	bl	474c <__printf_chk@plt>
    a288:	ldr	r3, [r4, #16]
    a28c:	b	9f48 <main@@Base+0x531c>
    a290:	ldr	r1, [pc, #632]	; a510 <main@@Base+0x58e4>
    a294:	mov	r0, #1
    a298:	add	r1, pc, r1
    a29c:	bl	474c <__printf_chk@plt>
    a2a0:	ldr	r3, [r4, #16]
    a2a4:	cmp	r3, #0
    a2a8:	bge	9f40 <main@@Base+0x5314>
    a2ac:	ldr	r1, [pc, #608]	; a514 <main@@Base+0x58e8>
    a2b0:	mov	r0, #1
    a2b4:	add	r1, pc, r1
    a2b8:	bl	474c <__printf_chk@plt>
    a2bc:	ldr	r3, [r4, #16]
    a2c0:	b	9f40 <main@@Base+0x5314>
    a2c4:	ldr	r1, [pc, #588]	; a518 <main@@Base+0x58ec>
    a2c8:	mov	r0, #1
    a2cc:	add	r1, pc, r1
    a2d0:	bl	474c <__printf_chk@plt>
    a2d4:	ldr	r3, [r4, #16]
    a2d8:	b	9f30 <main@@Base+0x5304>
    a2dc:	ldr	r1, [pc, #568]	; a51c <main@@Base+0x58f0>
    a2e0:	mov	r0, #1
    a2e4:	add	r1, pc, r1
    a2e8:	bl	474c <__printf_chk@plt>
    a2ec:	ldr	r3, [r4, #16]
    a2f0:	b	9f28 <main@@Base+0x52fc>
    a2f4:	ldr	r1, [pc, #548]	; a520 <main@@Base+0x58f4>
    a2f8:	mov	r0, #1
    a2fc:	add	r1, pc, r1
    a300:	bl	474c <__printf_chk@plt>
    a304:	ldr	r3, [r4, #16]
    a308:	b	9f20 <main@@Base+0x52f4>
    a30c:	ldr	r1, [pc, #528]	; a524 <main@@Base+0x58f8>
    a310:	mov	r0, #1
    a314:	add	r1, pc, r1
    a318:	bl	474c <__printf_chk@plt>
    a31c:	ldr	r3, [r4, #16]
    a320:	b	9f18 <main@@Base+0x52ec>
    a324:	ldr	r1, [pc, #508]	; a528 <main@@Base+0x58fc>
    a328:	mov	r0, #1
    a32c:	add	r1, pc, r1
    a330:	bl	474c <__printf_chk@plt>
    a334:	ldr	r3, [r4, #16]
    a338:	b	9f10 <main@@Base+0x52e4>
    a33c:	ldr	r1, [pc, #488]	; a52c <main@@Base+0x5900>
    a340:	mov	r0, #1
    a344:	add	r1, pc, r1
    a348:	bl	474c <__printf_chk@plt>
    a34c:	ldr	r3, [r4, #16]
    a350:	b	9f08 <main@@Base+0x52dc>
    a354:	ldr	r1, [pc, #468]	; a530 <main@@Base+0x5904>
    a358:	mov	r0, #1
    a35c:	add	r1, pc, r1
    a360:	bl	474c <__printf_chk@plt>
    a364:	ldr	r3, [r4, #16]
    a368:	b	9f00 <main@@Base+0x52d4>
    a36c:	ldr	r1, [pc, #448]	; a534 <main@@Base+0x5908>
    a370:	mov	r0, #1
    a374:	add	r1, pc, r1
    a378:	bl	474c <__printf_chk@plt>
    a37c:	ldr	r3, [r4, #16]
    a380:	b	9ef8 <main@@Base+0x52cc>
    a384:	ldr	r1, [pc, #428]	; a538 <main@@Base+0x590c>
    a388:	mov	r0, #1
    a38c:	add	r1, pc, r1
    a390:	bl	474c <__printf_chk@plt>
    a394:	ldr	r3, [r4, #16]
    a398:	b	9ef0 <main@@Base+0x52c4>
    a39c:	ldr	r1, [pc, #408]	; a53c <main@@Base+0x5910>
    a3a0:	mov	r0, #1
    a3a4:	add	r1, pc, r1
    a3a8:	bl	474c <__printf_chk@plt>
    a3ac:	ldr	r3, [r4, #16]
    a3b0:	b	9ee8 <main@@Base+0x52bc>
    a3b4:	ldr	r1, [pc, #388]	; a540 <main@@Base+0x5914>
    a3b8:	mov	r0, #1
    a3bc:	add	r1, pc, r1
    a3c0:	bl	474c <__printf_chk@plt>
    a3c4:	ldr	r3, [r4, #16]
    a3c8:	b	9ee0 <main@@Base+0x52b4>
    a3cc:	ldr	r1, [pc, #368]	; a544 <main@@Base+0x5918>
    a3d0:	mov	r0, #1
    a3d4:	add	r1, pc, r1
    a3d8:	bl	474c <__printf_chk@plt>
    a3dc:	ldr	r3, [r4, #16]
    a3e0:	b	9ed8 <main@@Base+0x52ac>
    a3e4:	ldr	r1, [pc, #348]	; a548 <main@@Base+0x591c>
    a3e8:	mov	r0, #1
    a3ec:	add	r1, pc, r1
    a3f0:	bl	474c <__printf_chk@plt>
    a3f4:	ldr	r3, [r4, #16]
    a3f8:	and	r3, r3, #45056	; 0xb000
    a3fc:	cmp	r3, #8192	; 0x2000
    a400:	beq	a480 <main@@Base+0x5854>
    a404:	ble	a42c <main@@Base+0x5800>
    a408:	cmp	r3, #12288	; 0x3000
    a40c:	beq	a458 <main@@Base+0x582c>
    a410:	cmp	r3, #32768	; 0x8000
    a414:	bne	a46c <main@@Base+0x5840>
    a418:	ldr	r1, [pc, #300]	; a54c <main@@Base+0x5920>
    a41c:	mov	r0, #1
    a420:	add	r1, pc, r1
    a424:	bl	474c <__printf_chk@plt>
    a428:	b	a444 <main@@Base+0x5818>
    a42c:	cmp	r3, #4096	; 0x1000
    a430:	bne	a46c <main@@Base+0x5840>
    a434:	ldr	r1, [pc, #276]	; a550 <main@@Base+0x5924>
    a438:	mov	r0, #1
    a43c:	add	r1, pc, r1
    a440:	bl	474c <__printf_chk@plt>
    a444:	ldr	r1, [pc, #264]	; a554 <main@@Base+0x5928>
    a448:	mov	r0, #1
    a44c:	add	r1, pc, r1
    a450:	bl	474c <__printf_chk@plt>
    a454:	b	9f74 <main@@Base+0x5348>
    a458:	ldr	r1, [pc, #248]	; a558 <main@@Base+0x592c>
    a45c:	mov	r0, #1
    a460:	add	r1, pc, r1
    a464:	bl	474c <__printf_chk@plt>
    a468:	b	a444 <main@@Base+0x5818>
    a46c:	ldr	r1, [pc, #232]	; a55c <main@@Base+0x5930>
    a470:	mov	r0, #1
    a474:	add	r1, pc, r1
    a478:	bl	474c <__printf_chk@plt>
    a47c:	b	a444 <main@@Base+0x5818>
    a480:	ldr	r1, [pc, #216]	; a560 <main@@Base+0x5934>
    a484:	mov	r0, #1
    a488:	add	r1, pc, r1
    a48c:	bl	474c <__printf_chk@plt>
    a490:	b	a444 <main@@Base+0x5818>
    a494:	bl	3f00 <__stack_chk_fail@plt>
    a498:	muleq	r2, r0, sp
    a49c:	andeq	r0, r0, r8, ror #7
    a4a0:	ldrdeq	r2, [r1], -r4
    a4a4:	andeq	r2, r1, r4, asr #17
    a4a8:	andeq	r2, r1, r4, asr #17
    a4ac:	andeq	r2, r1, r0, lsr ip
    a4b0:	andeq	r2, r1, r4, lsl #18
    a4b4:	andeq	r2, r1, r8, lsl r9
    a4b8:			; <UNDEFINED> instruction: 0x00012bb0
    a4bc:	andeq	r2, r1, r0, asr #17
    a4c0:	andeq	r2, r1, r8, asr #17
    a4c4:	andeq	r2, r1, r4, asr fp
    a4c8:	andeq	r2, r1, r8, lsl #17
    a4cc:	strdeq	r4, [r1], -r8
    a4d0:	strdeq	r2, [r1], -r4
    a4d4:	andeq	r2, r1, r8, asr #16
    a4d8:	andeq	r6, r1, ip, asr #10
    a4dc:	andeq	r4, r1, ip, lsl #5
    a4e0:	andeq	r2, r1, r0, ror sl
    a4e4:	andeq	r2, r1, r0, ror #15
    a4e8:	andeq	r4, r1, r4, lsl r2
    a4ec:	andeq	r2, r1, r0, lsl sl
    a4f0:	andeq	r2, r1, r0, lsr #15
    a4f4:			; <UNDEFINED> instruction: 0x000141b0
    a4f8:	muleq	r1, ip, r9
    a4fc:	andeq	r2, r1, r4, lsr r5
    a500:	andeq	r4, r1, r4, ror #12
    a504:	strdeq	r2, [r1], -r8
    a508:	ldrdeq	r2, [r1], -ip
    a50c:			; <UNDEFINED> instruction: 0x000125b8
    a510:	andeq	r2, r1, r8, lsl #11
    a514:	andeq	r2, r1, r8, ror r5
    a518:	andeq	r2, r1, r8, asr #10
    a51c:	andeq	r2, r1, r4, lsr #10
    a520:	andeq	r2, r1, r0, lsl #10
    a524:	ldrdeq	r2, [r1], -r8
    a528:			; <UNDEFINED> instruction: 0x000124b8
    a52c:	muleq	r1, r8, r4
    a530:	andeq	r2, r1, r4, ror r4
    a534:	andeq	r2, r1, r4, asr r4
    a538:	andeq	r2, r1, r4, lsr r4
    a53c:	andeq	r2, r1, r4, lsl r4
    a540:	strdeq	r2, [r1], -r4
    a544:	ldrdeq	r2, [r1], -r0
    a548:	andeq	r2, r1, r8, ror #8
    a54c:	andeq	r2, r1, ip, ror #8
    a550:	andeq	r4, r1, r4, ror #17
    a554:	andeq	r2, r1, r4, asr #14
    a558:	andeq	r2, r1, r4, lsl r4
    a55c:	ldrdeq	r2, [r1], -r8
    a560:	strdeq	r2, [r1], -ip
    a564:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    a568:	ldr	r3, [pc, #436]	; a724 <main@@Base+0x5af8>
    a56c:	ldr	r2, [pc, #436]	; a728 <main@@Base+0x5afc>
    a570:	add	r3, pc, r3
    a574:	ldr	r7, [r3, r2]
    a578:	sub	sp, sp, #16
    a57c:	ldr	r3, [r7]
    a580:	subs	r8, r0, #0
    a584:	str	r3, [sp, #12]
    a588:	beq	a6cc <main@@Base+0x5aa0>
    a58c:	cmp	r1, #0
    a590:	mov	r6, r1
    a594:	bne	a5c8 <main@@Base+0x599c>
    a598:	bl	41d0 <avcodec_find_decoder_by_name@plt>
    a59c:	mov	r4, r0
    a5a0:	cmp	r4, #0
    a5a4:	beq	a5d8 <main@@Base+0x59ac>
    a5a8:	ldr	r2, [sp, #12]
    a5ac:	ldr	r3, [r7]
    a5b0:	cmp	r2, r3
    a5b4:	bne	a720 <main@@Base+0x5af4>
    a5b8:	mov	r0, r4
    a5bc:	add	sp, sp, #16
    a5c0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    a5c4:	b	9e60 <main@@Base+0x5234>
    a5c8:	bl	41f4 <avcodec_find_encoder_by_name@plt>
    a5cc:	mov	r4, r0
    a5d0:	cmp	r4, #0
    a5d4:	bne	a5a8 <main@@Base+0x597c>
    a5d8:	mov	r0, r8
    a5dc:	bl	42b4 <avcodec_descriptor_get_by_name@plt>
    a5e0:	subs	r9, r0, #0
    a5e4:	beq	a6f4 <main@@Base+0x5ac8>
    a5e8:	cmp	r6, #0
    a5ec:	mov	sl, r4
    a5f0:	ldr	r5, [r9]
    a5f4:	bne	a638 <main@@Base+0x5a0c>
    a5f8:	mov	r0, r4
    a5fc:	bl	42e4 <av_codec_next@plt>
    a600:	subs	r4, r0, #0
    a604:	beq	a684 <main@@Base+0x5a58>
    a608:	ldr	r3, [r4, #12]
    a60c:	cmp	r5, r3
    a610:	bne	a5f8 <main@@Base+0x59cc>
    a614:	bl	45d8 <av_codec_is_decoder@plt>
    a618:	cmp	r0, #0
    a61c:	beq	a5f8 <main@@Base+0x59cc>
    a620:	mov	r0, r4
    a624:	bl	9e60 <main@@Base+0x5234>
    a628:	cmp	r6, #0
    a62c:	mov	sl, #1
    a630:	ldr	r5, [r9]
    a634:	beq	a5f8 <main@@Base+0x59cc>
    a638:	mov	r0, r4
    a63c:	bl	42e4 <av_codec_next@plt>
    a640:	subs	r4, r0, #0
    a644:	beq	a670 <main@@Base+0x5a44>
    a648:	ldr	r3, [r4, #12]
    a64c:	cmp	r5, r3
    a650:	bne	a638 <main@@Base+0x5a0c>
    a654:	bl	42a8 <av_codec_is_encoder@plt>
    a658:	cmp	r0, #0
    a65c:	bne	a620 <main@@Base+0x59f4>
    a660:	mov	r0, r4
    a664:	bl	42e4 <av_codec_next@plt>
    a668:	subs	r4, r0, #0
    a66c:	bne	a648 <main@@Base+0x5a1c>
    a670:	cmp	sl, #0
    a674:	bne	a68c <main@@Base+0x5a60>
    a678:	ldr	r3, [pc, #172]	; a72c <main@@Base+0x5b00>
    a67c:	add	r3, pc, r3
    a680:	b	a6ac <main@@Base+0x5a80>
    a684:	cmp	sl, #0
    a688:	beq	a6a4 <main@@Base+0x5a78>
    a68c:	ldr	r2, [sp, #12]
    a690:	ldr	r3, [r7]
    a694:	cmp	r2, r3
    a698:	bne	a720 <main@@Base+0x5af4>
    a69c:	add	sp, sp, #16
    a6a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    a6a4:	ldr	r3, [pc, #132]	; a730 <main@@Base+0x5b04>
    a6a8:	add	r3, pc, r3
    a6ac:	ldr	r2, [pc, #128]	; a734 <main@@Base+0x5b08>
    a6b0:	str	r3, [sp]
    a6b4:	add	r2, pc, r2
    a6b8:	mov	r3, r8
    a6bc:	mov	r1, #16
    a6c0:	mov	r0, #0
    a6c4:	bl	40f8 <av_log@plt>
    a6c8:	b	a68c <main@@Base+0x5a60>
    a6cc:	ldr	r2, [sp, #12]
    a6d0:	ldr	r3, [r7]
    a6d4:	cmp	r2, r3
    a6d8:	bne	a720 <main@@Base+0x5af4>
    a6dc:	mov	r1, #16
    a6e0:	ldr	r2, [pc, #80]	; a738 <main@@Base+0x5b0c>
    a6e4:	add	r2, pc, r2
    a6e8:	add	sp, sp, #16
    a6ec:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    a6f0:	b	40f8 <av_log@plt>
    a6f4:	ldr	r2, [sp, #12]
    a6f8:	ldr	r3, [r7]
    a6fc:	cmp	r2, r3
    a700:	bne	a720 <main@@Base+0x5af4>
    a704:	mov	r3, r8
    a708:	mov	r1, #16
    a70c:	ldr	r2, [pc, #40]	; a73c <main@@Base+0x5b10>
    a710:	add	r2, pc, r2
    a714:	add	sp, sp, #16
    a718:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    a71c:	b	40f8 <av_log@plt>
    a720:	bl	3f00 <__stack_chk_fail@plt>
    a724:	andeq	r7, r2, ip, lsl #13
    a728:	andeq	r0, r0, r8, ror #7
    a72c:	andeq	r2, r1, r0, ror #5
    a730:	andeq	r2, r1, r0, asr #5
    a734:	ldrdeq	r2, [r1], -ip
    a738:	muleq	r1, r0, r2
    a73c:	andeq	r2, r1, r8, lsl #6
    a740:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a744:	mov	sl, r0
    a748:	ldr	r0, [pc, #452]	; a914 <main@@Base+0x5ce8>
    a74c:	ldr	ip, [pc, #452]	; a918 <main@@Base+0x5cec>
    a750:	add	r0, pc, r0
    a754:	ldr	ip, [r0, ip]
    a758:	sub	sp, sp, #28
    a75c:	str	r1, [sp]
    a760:	ldr	r1, [ip]
    a764:	cmp	sl, #1
    a768:	str	ip, [sp, #12]
    a76c:	strd	r2, [sp, #4]
    a770:	str	r1, [sp, #20]
    a774:	ble	a834 <main@@Base+0x5c08>
    a778:	mov	r4, #1
    a77c:	b	a78c <main@@Base+0x5b60>
    a780:	add	r4, r4, #1
    a784:	cmp	sl, r4
    a788:	ble	a834 <main@@Base+0x5c08>
    a78c:	ldr	r3, [sp]
    a790:	ldr	r7, [r3, r4, lsl #2]
    a794:	ldrb	r3, [r7]
    a798:	cmp	r3, #45	; 0x2d
    a79c:	bne	a780 <main@@Base+0x5b54>
    a7a0:	add	r8, r7, #1
    a7a4:	mov	r0, r8
    a7a8:	mov	r1, #58	; 0x3a
    a7ac:	bl	4494 <strchr@plt>
    a7b0:	cmp	r0, #0
    a7b4:	subne	r5, r0, r8
    a7b8:	beq	a8f0 <main@@Base+0x5cc4>
    a7bc:	ldr	r6, [sp, #4]
    a7c0:	ldr	r9, [r6]
    a7c4:	cmp	r9, #0
    a7c8:	beq	a804 <main@@Base+0x5bd8>
    a7cc:	mov	fp, r9
    a7d0:	mov	r2, r5
    a7d4:	mov	r1, fp
    a7d8:	mov	r0, r8
    a7dc:	bl	43e0 <strncmp@plt>
    a7e0:	cmp	r0, #0
    a7e4:	bne	a7f8 <main@@Base+0x5bcc>
    a7e8:	mov	r0, fp
    a7ec:	bl	4110 <strlen@plt>
    a7f0:	cmp	r0, r5
    a7f4:	beq	a8cc <main@@Base+0x5ca0>
    a7f8:	ldr	fp, [r6, #20]!
    a7fc:	cmp	fp, #0
    a800:	bne	a7d0 <main@@Base+0x5ba4>
    a804:	ldrb	r3, [r7, #1]
    a808:	cmp	r3, #110	; 0x6e
    a80c:	beq	a858 <main@@Base+0x5c2c>
    a810:	mov	r0, r8
    a814:	ldr	r1, [sp, #8]
    a818:	bl	46c8 <strcmp@plt>
    a81c:	cmp	r0, #0
    a820:	beq	a838 <main@@Base+0x5c0c>
    a824:	add	r4, r4, #1
    a828:	add	r4, r4, #1
    a82c:	cmp	sl, r4
    a830:	bgt	a78c <main@@Base+0x5b60>
    a834:	mov	r4, #0
    a838:	ldr	r3, [sp, #12]
    a83c:	ldr	r2, [sp, #20]
    a840:	ldr	r3, [r3]
    a844:	mov	r0, r4
    a848:	cmp	r2, r3
    a84c:	bne	a910 <main@@Base+0x5ce4>
    a850:	add	sp, sp, #28
    a854:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a858:	ldrb	r3, [r7, #2]
    a85c:	cmp	r3, #111	; 0x6f
    a860:	bne	a810 <main@@Base+0x5be4>
    a864:	add	r7, r7, #3
    a868:	mov	r0, r7
    a86c:	mov	r1, #58	; 0x3a
    a870:	bl	4494 <strchr@plt>
    a874:	cmp	r0, #0
    a878:	subne	r5, r0, r7
    a87c:	beq	a900 <main@@Base+0x5cd4>
    a880:	cmp	r9, #0
    a884:	beq	a810 <main@@Base+0x5be4>
    a888:	ldr	fp, [sp, #4]
    a88c:	b	a89c <main@@Base+0x5c70>
    a890:	ldr	r9, [fp, #20]!
    a894:	cmp	r9, #0
    a898:	beq	a810 <main@@Base+0x5be4>
    a89c:	mov	r2, r5
    a8a0:	mov	r1, r9
    a8a4:	mov	r0, r7
    a8a8:	bl	43e0 <strncmp@plt>
    a8ac:	cmp	r0, #0
    a8b0:	mov	r6, fp
    a8b4:	bne	a890 <main@@Base+0x5c64>
    a8b8:	mov	r0, r9
    a8bc:	bl	4110 <strlen@plt>
    a8c0:	cmp	r0, r5
    a8c4:	bne	a890 <main@@Base+0x5c64>
    a8c8:	mov	fp, r9
    a8cc:	mov	r1, fp
    a8d0:	ldr	r0, [sp, #8]
    a8d4:	bl	46c8 <strcmp@plt>
    a8d8:	cmp	r0, #0
    a8dc:	beq	a838 <main@@Base+0x5c0c>
    a8e0:	ldr	r3, [r6, #4]
    a8e4:	tst	r3, #1
    a8e8:	beq	a780 <main@@Base+0x5b54>
    a8ec:	b	a824 <main@@Base+0x5bf8>
    a8f0:	mov	r0, r8
    a8f4:	bl	4110 <strlen@plt>
    a8f8:	mov	r5, r0
    a8fc:	b	a7bc <main@@Base+0x5b90>
    a900:	mov	r0, r7
    a904:	bl	4110 <strlen@plt>
    a908:	mov	r5, r0
    a90c:	b	a880 <main@@Base+0x5c54>
    a910:	bl	3f00 <__stack_chk_fail@plt>
    a914:	andeq	r7, r2, ip, lsr #9
    a918:	andeq	r0, r0, r8, ror #7
    a91c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    a920:	ldr	r6, [pc, #1448]	; aed0 <main@@Base+0x62a4>
    a924:	ldr	r3, [pc, #1448]	; aed4 <main@@Base+0x62a8>
    a928:	add	r6, pc, r6
    a92c:	ldr	r8, [r6, r3]
    a930:	sub	sp, sp, #168	; 0xa8
    a934:	ldr	r3, [r8]
    a938:	mov	r4, r1
    a93c:	mov	r7, r2
    a940:	str	r3, [sp, #164]	; 0xa4
    a944:	bl	4044 <avcodec_get_class@plt>
    a948:	str	r0, [sp, #12]
    a94c:	bl	4458 <avformat_get_class@plt>
    a950:	str	r0, [sp, #16]
    a954:	bl	3e70 <avresample_get_class@plt>
    a958:	str	r0, [sp, #20]
    a95c:	bl	43a4 <sws_get_class@plt>
    a960:	str	r0, [sp, #24]
    a964:	bl	486c <swr_get_class@plt>
    a968:	ldr	r1, [pc, #1384]	; aed8 <main@@Base+0x62ac>
    a96c:	str	r0, [sp, #28]
    a970:	add	r1, pc, r1
    a974:	mov	r0, r4
    a978:	bl	46c8 <strcmp@plt>
    a97c:	cmp	r0, #0
    a980:	beq	ab20 <main@@Base+0x5ef4>
    a984:	ldr	r1, [pc, #1360]	; aedc <main@@Base+0x62b0>
    a988:	mov	r0, r4
    a98c:	add	r1, pc, r1
    a990:	bl	46c8 <strcmp@plt>
    a994:	cmp	r0, #0
    a998:	beq	ab20 <main@@Base+0x5ef4>
    a99c:	mov	r1, #58	; 0x3a
    a9a0:	mov	r0, r4
    a9a4:	bl	4494 <strchr@plt>
    a9a8:	cmp	r0, #0
    a9ac:	beq	abf0 <main@@Base+0x5fc4>
    a9b0:	sub	r2, r0, r4
    a9b4:	add	r2, r2, #1
    a9b8:	cmp	r2, #128	; 0x80
    a9bc:	add	r5, sp, #36	; 0x24
    a9c0:	movcs	r2, #128	; 0x80
    a9c4:	mov	r1, r4
    a9c8:	mov	r0, r5
    a9cc:	bl	42c0 <av_strlcpy@plt>
    a9d0:	mov	r2, #3
    a9d4:	mov	r3, #0
    a9d8:	add	r9, sp, #12
    a9dc:	str	r2, [sp]
    a9e0:	mov	r1, r5
    a9e4:	mov	r2, r3
    a9e8:	mov	r0, r9
    a9ec:	bl	414c <av_opt_find@plt>
    a9f0:	cmp	r0, #0
    a9f4:	beq	ab44 <main@@Base+0x5f18>
    a9f8:	ldr	r3, [r0, #40]	; 0x28
    a9fc:	cmp	r3, #0
    aa00:	beq	ab44 <main@@Base+0x5f18>
    aa04:	ldr	r3, [r0, #12]
    aa08:	cmp	r3, #0
    aa0c:	movne	r3, #0
    aa10:	beq	ab2c <main@@Base+0x5f00>
    aa14:	ldr	r2, [pc, #1220]	; aee0 <main@@Base+0x62b4>
    aa18:	mov	r1, r4
    aa1c:	ldr	r0, [r6, r2]
    aa20:	mov	r2, r7
    aa24:	bl	453c <av_dict_set@plt>
    aa28:	mov	r2, #3
    aa2c:	mov	r3, #0
    aa30:	str	r2, [sp]
    aa34:	mov	r1, r4
    aa38:	mov	r2, r3
    aa3c:	add	r0, sp, #16
    aa40:	bl	414c <av_opt_find@plt>
    aa44:	cmp	r0, #0
    aa48:	beq	aa98 <main@@Base+0x5e6c>
    aa4c:	ldr	r3, [r0, #40]	; 0x28
    aa50:	cmp	r3, #0
    aa54:	beq	aa98 <main@@Base+0x5e6c>
    aa58:	ldr	r3, [r0, #12]
    aa5c:	cmp	r3, #0
    aa60:	bne	ac00 <main@@Base+0x5fd4>
    aa64:	ldrb	r2, [r7]
    aa68:	sub	r2, r2, #43	; 0x2b
    aa6c:	tst	r2, #253	; 0xfd
    aa70:	moveq	r5, #1
    aa74:	moveq	r3, #32
    aa78:	bne	ae44 <main@@Base+0x6218>
    aa7c:	ldr	r2, [pc, #1120]	; aee4 <main@@Base+0x62b8>
    aa80:	mov	r1, r4
    aa84:	ldr	r0, [r6, r2]
    aa88:	mov	r2, r7
    aa8c:	bl	453c <av_dict_set@plt>
    aa90:	cmp	r5, #0
    aa94:	bne	ac18 <main@@Base+0x5fec>
    aa98:	mov	r2, #3
    aa9c:	mov	r3, #0
    aaa0:	str	r2, [sp]
    aaa4:	mov	r1, r4
    aaa8:	mov	r2, r3
    aaac:	add	r0, sp, #20
    aab0:	bl	414c <av_opt_find@plt>
    aab4:	cmp	r0, #0
    aab8:	beq	ab00 <main@@Base+0x5ed4>
    aabc:	ldr	r5, [r0, #40]	; 0x28
    aac0:	cmp	r5, #0
    aac4:	beq	ab04 <main@@Base+0x5ed8>
    aac8:	ldr	r3, [r0, #12]
    aacc:	cmp	r3, #0
    aad0:	movne	r3, #0
    aad4:	bne	aaec <main@@Base+0x5ec0>
    aad8:	ldrb	r3, [r7]
    aadc:	sub	r3, r3, #43	; 0x2b
    aae0:	tst	r3, #253	; 0xfd
    aae4:	movne	r3, #0
    aae8:	moveq	r3, #32
    aaec:	ldr	r2, [pc, #1012]	; aee8 <main@@Base+0x62bc>
    aaf0:	mov	r1, r4
    aaf4:	ldr	r0, [r6, r2]
    aaf8:	mov	r2, r7
    aafc:	bl	453c <av_dict_set@plt>
    ab00:	mov	r5, #0
    ab04:	ldr	r2, [sp, #164]	; 0xa4
    ab08:	ldr	r3, [r8]
    ab0c:	mov	r0, r5
    ab10:	cmp	r2, r3
    ab14:	bne	ae78 <main@@Base+0x624c>
    ab18:	add	sp, sp, #168	; 0xa8
    ab1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    ab20:	mov	r0, #48	; 0x30
    ab24:	bl	3eac <av_log_set_level@plt>
    ab28:	b	a99c <main@@Base+0x5d70>
    ab2c:	ldrb	r3, [r7]
    ab30:	sub	r3, r3, #43	; 0x2b
    ab34:	tst	r3, #253	; 0xfd
    ab38:	movne	r3, #0
    ab3c:	moveq	r3, #32
    ab40:	b	aa14 <main@@Base+0x5de8>
    ab44:	ldrb	r2, [r4]
    ab48:	cmp	r2, #97	; 0x61
    ab4c:	cmpne	r2, #118	; 0x76
    ab50:	moveq	r3, #1
    ab54:	movne	r3, #0
    ab58:	cmp	r2, #115	; 0x73
    ab5c:	orreq	r3, r3, #1
    ab60:	cmp	r3, #0
    ab64:	beq	ab98 <main@@Base+0x5f6c>
    ab68:	mov	r2, #2
    ab6c:	mov	r3, #0
    ab70:	str	r2, [sp]
    ab74:	mov	r0, r9
    ab78:	mov	r2, r3
    ab7c:	add	r1, r4, #1
    ab80:	bl	414c <av_opt_find@plt>
    ab84:	cmp	r0, #0
    ab88:	beq	ab98 <main@@Base+0x5f6c>
    ab8c:	ldr	r3, [r0, #40]	; 0x28
    ab90:	cmp	r3, #0
    ab94:	bne	aa04 <main@@Base+0x5dd8>
    ab98:	mov	r2, #3
    ab9c:	mov	r3, #0
    aba0:	str	r2, [sp]
    aba4:	mov	r1, r4
    aba8:	mov	r2, r3
    abac:	add	r0, sp, #16
    abb0:	bl	414c <av_opt_find@plt>
    abb4:	cmp	r0, #0
    abb8:	beq	ac34 <main@@Base+0x6008>
    abbc:	ldr	r3, [r0, #40]	; 0x28
    abc0:	cmp	r3, #0
    abc4:	beq	ac34 <main@@Base+0x6008>
    abc8:	ldr	r5, [r0, #12]
    abcc:	cmp	r5, #0
    abd0:	beq	ae10 <main@@Base+0x61e4>
    abd4:	ldr	r2, [pc, #776]	; aee4 <main@@Base+0x62b8>
    abd8:	mov	r3, #0
    abdc:	ldr	r0, [r6, r2]
    abe0:	mov	r1, r4
    abe4:	mov	r2, r7
    abe8:	bl	453c <av_dict_set@plt>
    abec:	b	aa98 <main@@Base+0x5e6c>
    abf0:	mov	r0, r4
    abf4:	bl	4110 <strlen@plt>
    abf8:	add	r0, r4, r0
    abfc:	b	a9b0 <main@@Base+0x5d84>
    ac00:	ldr	r2, [pc, #732]	; aee4 <main@@Base+0x62b8>
    ac04:	mov	r3, #0
    ac08:	ldr	r0, [r6, r2]
    ac0c:	mov	r1, r4
    ac10:	mov	r2, r7
    ac14:	bl	453c <av_dict_set@plt>
    ac18:	ldr	r2, [pc, #716]	; aeec <main@@Base+0x62c0>
    ac1c:	mov	r3, r4
    ac20:	add	r2, pc, r2
    ac24:	mov	r1, #40	; 0x28
    ac28:	mov	r0, #0
    ac2c:	bl	40f8 <av_log@plt>
    ac30:	b	aa98 <main@@Base+0x5e6c>
    ac34:	mov	r2, #3
    ac38:	mov	r3, #0
    ac3c:	str	r2, [sp]
    ac40:	mov	r1, r4
    ac44:	mov	r2, r3
    ac48:	add	r0, sp, #24
    ac4c:	bl	414c <av_opt_find@plt>
    ac50:	subs	r9, r0, #0
    ac54:	beq	ad5c <main@@Base+0x6130>
    ac58:	ldr	r3, [r9, #40]	; 0x28
    ac5c:	cmp	r3, #0
    ac60:	beq	ad5c <main@@Base+0x6130>
    ac64:	bl	3ffc <sws_alloc_context@plt>
    ac68:	mov	r3, #0
    ac6c:	mov	r2, r7
    ac70:	mov	r1, r4
    ac74:	mov	sl, r0
    ac78:	bl	4200 <av_opt_set@plt>
    ac7c:	mov	r5, r0
    ac80:	mov	r0, sl
    ac84:	bl	4230 <sws_freeContext@plt>
    ac88:	ldr	r1, [pc, #608]	; aef0 <main@@Base+0x62c4>
    ac8c:	mov	r0, r4
    ac90:	add	r1, pc, r1
    ac94:	bl	46c8 <strcmp@plt>
    ac98:	cmp	r0, #0
    ac9c:	beq	ae5c <main@@Base+0x6230>
    aca0:	ldr	r1, [pc, #588]	; aef4 <main@@Base+0x62c8>
    aca4:	mov	r0, r4
    aca8:	add	r1, pc, r1
    acac:	bl	46c8 <strcmp@plt>
    acb0:	cmp	r0, #0
    acb4:	beq	ae5c <main@@Base+0x6230>
    acb8:	ldr	r1, [pc, #568]	; aef8 <main@@Base+0x62cc>
    acbc:	mov	r0, r4
    acc0:	add	r1, pc, r1
    acc4:	bl	46c8 <strcmp@plt>
    acc8:	cmp	r0, #0
    accc:	beq	ae5c <main@@Base+0x6230>
    acd0:	ldr	r1, [pc, #548]	; aefc <main@@Base+0x62d0>
    acd4:	mov	r0, r4
    acd8:	add	r1, pc, r1
    acdc:	bl	46c8 <strcmp@plt>
    ace0:	cmp	r0, #0
    ace4:	beq	ae5c <main@@Base+0x6230>
    ace8:	ldr	r1, [pc, #528]	; af00 <main@@Base+0x62d4>
    acec:	mov	r0, r4
    acf0:	add	r1, pc, r1
    acf4:	bl	46c8 <strcmp@plt>
    acf8:	cmp	r0, #0
    acfc:	beq	ae5c <main@@Base+0x6230>
    ad00:	ldr	r1, [pc, #508]	; af04 <main@@Base+0x62d8>
    ad04:	mov	r0, r4
    ad08:	add	r1, pc, r1
    ad0c:	bl	46c8 <strcmp@plt>
    ad10:	cmp	r0, #0
    ad14:	beq	ae5c <main@@Base+0x6230>
    ad18:	cmp	r5, #0
    ad1c:	blt	adf4 <main@@Base+0x61c8>
    ad20:	ldr	r3, [r9, #12]
    ad24:	cmp	r3, #0
    ad28:	movne	r3, #0
    ad2c:	bne	ad44 <main@@Base+0x6118>
    ad30:	ldrb	r3, [r7]
    ad34:	sub	r3, r3, #43	; 0x2b
    ad38:	tst	r3, #253	; 0xfd
    ad3c:	movne	r3, #0
    ad40:	moveq	r3, #32
    ad44:	ldr	r2, [pc, #444]	; af08 <main@@Base+0x62dc>
    ad48:	mov	r1, r4
    ad4c:	ldr	r0, [r6, r2]
    ad50:	mov	r2, r7
    ad54:	bl	453c <av_dict_set@plt>
    ad58:	b	aa98 <main@@Base+0x5e6c>
    ad5c:	mov	r2, #3
    ad60:	mov	r3, #0
    ad64:	str	r2, [sp]
    ad68:	mov	r1, r4
    ad6c:	mov	r2, r3
    ad70:	add	r0, sp, #28
    ad74:	bl	414c <av_opt_find@plt>
    ad78:	subs	r9, r0, #0
    ad7c:	beq	ae98 <main@@Base+0x626c>
    ad80:	ldr	r3, [r9, #40]	; 0x28
    ad84:	cmp	r3, #0
    ad88:	beq	ae98 <main@@Base+0x626c>
    ad8c:	bl	4770 <swr_alloc@plt>
    ad90:	mov	r3, #0
    ad94:	mov	r2, r7
    ad98:	mov	r1, r4
    ad9c:	str	r0, [sp, #32]
    ada0:	bl	4200 <av_opt_set@plt>
    ada4:	mov	r5, r0
    ada8:	add	r0, sp, #32
    adac:	bl	44e8 <swr_free@plt>
    adb0:	cmp	r5, #0
    adb4:	blt	ae28 <main@@Base+0x61fc>
    adb8:	ldr	r3, [r9, #12]
    adbc:	cmp	r3, #0
    adc0:	movne	r3, #0
    adc4:	bne	addc <main@@Base+0x61b0>
    adc8:	ldrb	r3, [r7]
    adcc:	sub	r3, r3, #43	; 0x2b
    add0:	tst	r3, #253	; 0xfd
    add4:	movne	r3, #0
    add8:	moveq	r3, #32
    addc:	ldr	r2, [pc, #296]	; af0c <main@@Base+0x62e0>
    ade0:	mov	r1, r4
    ade4:	ldr	r0, [r6, r2]
    ade8:	mov	r2, r7
    adec:	bl	453c <av_dict_set@plt>
    adf0:	b	aa98 <main@@Base+0x5e6c>
    adf4:	ldr	r2, [pc, #276]	; af10 <main@@Base+0x62e4>
    adf8:	mov	r3, r4
    adfc:	add	r2, pc, r2
    ae00:	mov	r1, #16
    ae04:	mov	r0, #0
    ae08:	bl	40f8 <av_log@plt>
    ae0c:	b	ab04 <main@@Base+0x5ed8>
    ae10:	ldrb	r3, [r7]
    ae14:	sub	r3, r3, #43	; 0x2b
    ae18:	tst	r3, #253	; 0xfd
    ae1c:	beq	ae7c <main@@Base+0x6250>
    ae20:	mov	r3, r5
    ae24:	b	aa7c <main@@Base+0x5e50>
    ae28:	ldr	r2, [pc, #228]	; af14 <main@@Base+0x62e8>
    ae2c:	mov	r3, r4
    ae30:	add	r2, pc, r2
    ae34:	mov	r1, #16
    ae38:	mov	r0, #0
    ae3c:	bl	40f8 <av_log@plt>
    ae40:	b	ab04 <main@@Base+0x5ed8>
    ae44:	ldr	r2, [pc, #152]	; aee4 <main@@Base+0x62b8>
    ae48:	mov	r1, r4
    ae4c:	ldr	r0, [r6, r2]
    ae50:	mov	r2, r7
    ae54:	bl	453c <av_dict_set@plt>
    ae58:	b	ac18 <main@@Base+0x5fec>
    ae5c:	ldr	r2, [pc, #180]	; af18 <main@@Base+0x62ec>
    ae60:	mov	r1, #16
    ae64:	add	r2, pc, r2
    ae68:	mov	r0, #0
    ae6c:	bl	40f8 <av_log@plt>
    ae70:	mvn	r5, #21
    ae74:	b	ab04 <main@@Base+0x5ed8>
    ae78:	bl	3f00 <__stack_chk_fail@plt>
    ae7c:	ldr	r2, [pc, #96]	; aee4 <main@@Base+0x62b8>
    ae80:	mov	r3, #32
    ae84:	ldr	r0, [r6, r2]
    ae88:	mov	r1, r4
    ae8c:	mov	r2, r7
    ae90:	bl	453c <av_dict_set@plt>
    ae94:	b	aa98 <main@@Base+0x5e6c>
    ae98:	mov	r2, #3
    ae9c:	mov	r3, #0
    aea0:	str	r2, [sp]
    aea4:	mov	r1, r4
    aea8:	mov	r2, r3
    aeac:	add	r0, sp, #20
    aeb0:	bl	414c <av_opt_find@plt>
    aeb4:	cmp	r0, #0
    aeb8:	beq	aec8 <main@@Base+0x629c>
    aebc:	ldr	r3, [r0, #40]	; 0x28
    aec0:	cmp	r3, #0
    aec4:	bne	aac8 <main@@Base+0x5e9c>
    aec8:	ldr	r5, [pc, #76]	; af1c <main@@Base+0x62f0>
    aecc:	b	ab04 <main@@Base+0x5ed8>
    aed0:	ldrdeq	r7, [r2], -r4
    aed4:	andeq	r0, r0, r8, ror #7
    aed8:	ldrdeq	r2, [r1], -r4
    aedc:	andeq	r2, r1, r0, asr #1
    aee0:	andeq	r0, r0, ip, ror #7
    aee4:	andeq	r0, r0, ip, lsr #7
    aee8:	andeq	r0, r0, r0, ror #7
    aeec:	andeq	r1, r1, r4, lsr lr
    aef0:	strdeq	r1, [r1], -r8
    aef4:	andeq	r1, r1, r8, ror #27
    aef8:	ldrdeq	r1, [r1], -r8
    aefc:	andeq	r1, r1, r8, asr #27
    af00:			; <UNDEFINED> instruction: 0x00011db8
    af04:	andeq	r1, r1, ip, lsr #27
    af08:	ldrdeq	r0, [r0], -r8
    af0c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    af10:	andeq	r1, r1, r0, lsr sp
    af14:	strdeq	r1, [r1], -ip
    af18:	andeq	r1, r1, ip, asr ip
    af1c:	blge	febf6f44 <__bss_end__@@Base+0xfebc4078>
    af20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    af24:	ldr	r3, [pc, #272]	; b03c <main@@Base+0x6410>
    af28:	ldr	r2, [pc, #272]	; b040 <main@@Base+0x6414>
    af2c:	add	r3, pc, r3
    af30:	ldr	r9, [r3, r2]
    af34:	ldr	r1, [r0, #40]	; 0x28
    af38:	ldr	r2, [r9]
    af3c:	sub	sp, sp, #8
    af40:	cmp	r1, #0
    af44:	mov	r8, r0
    af48:	str	r2, [sp, #4]
    af4c:	ble	b004 <main@@Base+0x63d8>
    af50:	mov	r6, #0
    af54:	mov	r7, r6
    af58:	ldr	r5, [r8, #36]	; 0x24
    af5c:	add	r5, r5, r6
    af60:	ldr	r3, [r5, #8]
    af64:	cmp	r3, #0
    af68:	ble	afe8 <main@@Base+0x63bc>
    af6c:	mov	r4, #0
    af70:	mov	sl, r4
    af74:	ldr	r0, [r5, #4]
    af78:	add	sl, sl, #1
    af7c:	add	r0, r0, r4
    af80:	add	r0, r0, #8
    af84:	bl	3ec4 <av_freep@plt>
    af88:	ldr	r0, [r5, #4]
    af8c:	add	r0, r0, r4
    af90:	add	r0, r0, #16
    af94:	bl	3ee8 <av_dict_free@plt>
    af98:	ldr	r0, [r5, #4]
    af9c:	add	r0, r0, r4
    afa0:	add	r0, r0, #20
    afa4:	bl	3ee8 <av_dict_free@plt>
    afa8:	ldr	r0, [r5, #4]
    afac:	add	r0, r0, r4
    afb0:	add	r0, r0, #24
    afb4:	bl	3ee8 <av_dict_free@plt>
    afb8:	ldr	r0, [r5, #4]
    afbc:	add	r0, r0, r4
    afc0:	add	r0, r0, #28
    afc4:	bl	3ee8 <av_dict_free@plt>
    afc8:	ldr	r0, [r5, #4]
    afcc:	add	r0, r0, r4
    afd0:	add	r0, r0, #32
    afd4:	bl	3ee8 <av_dict_free@plt>
    afd8:	ldr	r3, [r5, #8]
    afdc:	add	r4, r4, #36	; 0x24
    afe0:	cmp	r3, sl
    afe4:	bgt	af74 <main@@Base+0x6348>
    afe8:	add	r0, r5, #4
    afec:	bl	3ec4 <av_freep@plt>
    aff0:	ldr	r3, [r8, #40]	; 0x28
    aff4:	add	r7, r7, #1
    aff8:	cmp	r3, r7
    affc:	add	r6, r6, #12
    b000:	bgt	af58 <main@@Base+0x632c>
    b004:	add	r0, r8, #36	; 0x24
    b008:	bl	3ec4 <av_freep@plt>
    b00c:	add	r0, r8, #52	; 0x34
    b010:	bl	3ec4 <av_freep@plt>
    b014:	add	r0, r8, #8
    b018:	bl	3ec4 <av_freep@plt>
    b01c:	ldr	r2, [sp, #4]
    b020:	ldr	r3, [r9]
    b024:	cmp	r2, r3
    b028:	bne	b038 <main@@Base+0x640c>
    b02c:	add	sp, sp, #8
    b030:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    b034:	b	8f00 <main@@Base+0x42d4>
    b038:	bl	3f00 <__stack_chk_fail@plt>
    b03c:	ldrdeq	r6, [r2], -r0
    b040:	andeq	r0, r0, r8, ror #7
    b044:	push	{r4, r5, lr}
    b048:	ldr	r3, [pc, #92]	; b0ac <main@@Base+0x6480>
    b04c:	ldr	r0, [pc, #92]	; b0b0 <main@@Base+0x6484>
    b050:	add	r3, pc, r3
    b054:	ldr	r4, [r3, r0]
    b058:	sub	sp, sp, #12
    b05c:	ldr	r3, [r4]
    b060:	mov	r5, r2
    b064:	str	r3, [sp, #4]
    b068:	bl	3e34 <av_get_cpu_flags@plt>
    b06c:	mov	r1, r5
    b070:	str	r0, [sp]
    b074:	mov	r0, sp
    b078:	bl	42f0 <av_parse_cpu_caps@plt>
    b07c:	cmp	r0, #0
    b080:	blt	b090 <main@@Base+0x6464>
    b084:	ldr	r0, [sp]
    b088:	bl	42fc <av_force_cpu_flags@plt>
    b08c:	mov	r0, #0
    b090:	ldr	r2, [sp, #4]
    b094:	ldr	r3, [r4]
    b098:	cmp	r2, r3
    b09c:	bne	b0a8 <main@@Base+0x647c>
    b0a0:	add	sp, sp, #12
    b0a4:	pop	{r4, r5, pc}
    b0a8:	bl	3f00 <__stack_chk_fail@plt>
    b0ac:	andeq	r6, r2, ip, lsr #23
    b0b0:	andeq	r0, r0, r8, ror #7
    b0b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b0b8:	ldr	r3, [pc, #952]	; b478 <main@@Base+0x684c>
    b0bc:	mov	r4, r2
    b0c0:	ldr	r2, [pc, #948]	; b47c <main@@Base+0x6850>
    b0c4:	add	r3, pc, r3
    b0c8:	ldr	r2, [r3, r2]
    b0cc:	ldr	r1, [pc, #940]	; b480 <main@@Base+0x6854>
    b0d0:	sub	sp, sp, #116	; 0x74
    b0d4:	ldr	ip, [r2]
    b0d8:	add	r1, pc, r1
    b0dc:	add	r1, r1, #8
    b0e0:	str	r2, [sp, #20]
    b0e4:	add	r0, sp, #36	; 0x24
    b0e8:	mov	r2, #72	; 0x48
    b0ec:	str	ip, [sp, #108]	; 0x6c
    b0f0:	str	r0, [sp, #24]
    b0f4:	bl	4524 <memcpy@plt>
    b0f8:	bl	471c <av_log_get_flags@plt>
    b0fc:	mov	r7, r0
    b100:	bl	45cc <av_log_get_level@plt>
    b104:	cmp	r4, #0
    b108:	str	r0, [sp, #16]
    b10c:	beq	b440 <main@@Base+0x6814>
    b110:	ldrb	r5, [r4]
    b114:	cmp	r5, #0
    b118:	beq	b1f4 <main@@Base+0x65c8>
    b11c:	ldr	r3, [pc, #864]	; b484 <main@@Base+0x6858>
    b120:	ldr	r8, [pc, #864]	; b488 <main@@Base+0x685c>
    b124:	add	r3, pc, r3
    b128:	str	r3, [sp, #28]
    b12c:	ldr	r3, [pc, #856]	; b48c <main@@Base+0x6860>
    b130:	ldr	fp, [pc, #856]	; b490 <main@@Base+0x6864>
    b134:	ldr	r9, [pc, #856]	; b494 <main@@Base+0x6868>
    b138:	add	r3, pc, r3
    b13c:	mov	r6, #0
    b140:	add	r8, pc, r8
    b144:	add	fp, pc, fp
    b148:	add	r9, pc, r9
    b14c:	str	r3, [sp, #12]
    b150:	b	b194 <main@@Base+0x6568>
    b154:	add	sl, r4, #1
    b158:	mov	r0, sl
    b15c:	mov	r2, #6
    b160:	mov	r1, r9
    b164:	bl	43e0 <strncmp@plt>
    b168:	cmp	r0, #0
    b16c:	bne	b250 <main@@Base+0x6624>
    b170:	cmp	r5, #45	; 0x2d
    b174:	bne	b240 <main@@Base+0x6614>
    b178:	mov	r4, sl
    b17c:	orr	r7, r7, #1
    b180:	add	r4, r4, #6
    b184:	ldrb	r5, [r4]
    b188:	add	r6, r6, #1
    b18c:	cmp	r5, #0
    b190:	beq	b1f4 <main@@Base+0x65c8>
    b194:	sub	r3, r5, #43	; 0x2b
    b198:	tst	r3, #253	; 0xfd
    b19c:	beq	b154 <main@@Base+0x6528>
    b1a0:	mov	r2, #6
    b1a4:	mov	r1, r8
    b1a8:	mov	r0, r4
    b1ac:	bl	43e0 <strncmp@plt>
    b1b0:	cmp	r6, #0
    b1b4:	mov	r3, r0
    b1b8:	bne	b224 <main@@Base+0x65f8>
    b1bc:	cmp	r0, #0
    b1c0:	beq	b248 <main@@Base+0x661c>
    b1c4:	mov	r2, #5
    b1c8:	mov	r1, fp
    b1cc:	mov	r0, r4
    b1d0:	bl	43e0 <strncmp@plt>
    b1d4:	subs	r7, r0, #0
    b1d8:	bne	b3fc <main@@Base+0x67d0>
    b1dc:	orr	r7, r7, #2
    b1e0:	add	r4, r4, #5
    b1e4:	ldrb	r5, [r4]
    b1e8:	add	r6, r6, #1
    b1ec:	cmp	r5, #0
    b1f0:	bne	b194 <main@@Base+0x6568>
    b1f4:	mov	r0, r7
    b1f8:	bl	4350 <av_log_set_flags@plt>
    b1fc:	ldr	r0, [sp, #16]
    b200:	bl	3eac <av_log_set_level@plt>
    b204:	ldr	r3, [sp, #20]
    b208:	ldr	r2, [sp, #108]	; 0x6c
    b20c:	ldr	r3, [r3]
    b210:	mov	r0, #0
    b214:	cmp	r2, r3
    b218:	bne	b474 <main@@Base+0x6848>
    b21c:	add	sp, sp, #116	; 0x74
    b220:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b224:	mov	r2, #6
    b228:	mov	r1, r8
    b22c:	mov	r0, r4
    b230:	bl	43e0 <strncmp@plt>
    b234:	cmp	r0, #0
    b238:	bne	b280 <main@@Base+0x6654>
    b23c:	mov	sl, r4
    b240:	mov	r4, sl
    b244:	bic	r3, r7, #1
    b248:	mov	r7, r3
    b24c:	b	b180 <main@@Base+0x6554>
    b250:	mov	r2, #5
    b254:	ldr	r1, [sp, #12]
    b258:	mov	r0, sl
    b25c:	bl	43e0 <strncmp@plt>
    b260:	cmp	r0, #0
    b264:	bne	b298 <main@@Base+0x666c>
    b268:	cmp	r5, #45	; 0x2d
    b26c:	biceq	r7, r7, #2
    b270:	moveq	r4, sl
    b274:	beq	b1e0 <main@@Base+0x65b4>
    b278:	mov	r4, sl
    b27c:	b	b1dc <main@@Base+0x65b0>
    b280:	mov	r2, #5
    b284:	ldr	r1, [sp, #28]
    b288:	mov	r0, r4
    b28c:	bl	43e0 <strncmp@plt>
    b290:	cmp	r0, #0
    b294:	beq	b1dc <main@@Base+0x65b0>
    b298:	cmp	r5, #43	; 0x2b
    b29c:	beq	b3dc <main@@Base+0x67b0>
    b2a0:	cmp	r6, #0
    b2a4:	beq	b404 <main@@Base+0x67d8>
    b2a8:	mov	r1, r4
    b2ac:	ldr	r0, [sp, #36]	; 0x24
    b2b0:	bl	46c8 <strcmp@plt>
    b2b4:	cmp	r0, #0
    b2b8:	beq	b3e8 <main@@Base+0x67bc>
    b2bc:	mov	r1, r4
    b2c0:	ldr	r0, [sp, #44]	; 0x2c
    b2c4:	bl	46c8 <strcmp@plt>
    b2c8:	cmp	r0, #0
    b2cc:	beq	b410 <main@@Base+0x67e4>
    b2d0:	mov	r1, r4
    b2d4:	ldr	r0, [sp, #52]	; 0x34
    b2d8:	bl	46c8 <strcmp@plt>
    b2dc:	cmp	r0, #0
    b2e0:	beq	b418 <main@@Base+0x67ec>
    b2e4:	mov	r1, r4
    b2e8:	ldr	r0, [sp, #60]	; 0x3c
    b2ec:	bl	46c8 <strcmp@plt>
    b2f0:	cmp	r0, #0
    b2f4:	beq	b420 <main@@Base+0x67f4>
    b2f8:	mov	r1, r4
    b2fc:	ldr	r0, [sp, #68]	; 0x44
    b300:	bl	46c8 <strcmp@plt>
    b304:	cmp	r0, #0
    b308:	beq	b428 <main@@Base+0x67fc>
    b30c:	mov	r1, r4
    b310:	ldr	r0, [sp, #76]	; 0x4c
    b314:	bl	46c8 <strcmp@plt>
    b318:	cmp	r0, #0
    b31c:	beq	b430 <main@@Base+0x6804>
    b320:	mov	r1, r4
    b324:	ldr	r0, [sp, #84]	; 0x54
    b328:	bl	46c8 <strcmp@plt>
    b32c:	cmp	r0, #0
    b330:	beq	b438 <main@@Base+0x680c>
    b334:	mov	r1, r4
    b338:	ldr	r0, [sp, #92]	; 0x5c
    b33c:	bl	46c8 <strcmp@plt>
    b340:	cmp	r0, #0
    b344:	beq	b3e4 <main@@Base+0x67b8>
    b348:	mov	r1, r4
    b34c:	ldr	r0, [sp, #100]	; 0x64
    b350:	bl	46c8 <strcmp@plt>
    b354:	cmp	r0, #0
    b358:	moveq	r0, #8
    b35c:	beq	b3e8 <main@@Base+0x67bc>
    b360:	mov	r2, #10
    b364:	add	r1, sp, #32
    b368:	mov	r0, r4
    b36c:	bl	47ac <strtol@plt>
    b370:	ldr	r3, [sp, #32]
    b374:	str	r0, [sp, #16]
    b378:	ldrb	r3, [r3]
    b37c:	cmp	r3, #0
    b380:	beq	b1f4 <main@@Base+0x65c8>
    b384:	ldr	r2, [pc, #268]	; b498 <main@@Base+0x686c>
    b388:	mov	r3, r4
    b38c:	add	r2, pc, r2
    b390:	mov	r1, #8
    b394:	mov	r0, #0
    b398:	bl	40f8 <av_log@plt>
    b39c:	mov	r4, #1
    b3a0:	ldr	r5, [pc, #244]	; b49c <main@@Base+0x6870>
    b3a4:	add	r5, pc, r5
    b3a8:	ldr	r3, [sp, #24]
    b3ac:	mov	r2, r5
    b3b0:	add	r3, r3, r4, lsl #3
    b3b4:	ldr	r3, [r3, #-8]
    b3b8:	add	r4, r4, #1
    b3bc:	mov	r1, #8
    b3c0:	mov	r0, #0
    b3c4:	bl	40f8 <av_log@plt>
    b3c8:	cmp	r4, #10
    b3cc:	bne	b3a8 <main@@Base+0x677c>
    b3d0:	mov	r0, #1
    b3d4:	bl	902c <main@@Base+0x4400>
    b3d8:	mov	r7, r6
    b3dc:	add	r4, r4, #1
    b3e0:	b	b2a8 <main@@Base+0x667c>
    b3e4:	mov	r0, #7
    b3e8:	add	r3, sp, #112	; 0x70
    b3ec:	add	r0, r3, r0, lsl #3
    b3f0:	ldr	r3, [r0, #-72]	; 0xffffffb8
    b3f4:	str	r3, [sp, #16]
    b3f8:	b	b1f4 <main@@Base+0x65c8>
    b3fc:	cmp	r5, #43	; 0x2b
    b400:	beq	b3d8 <main@@Base+0x67ac>
    b404:	bl	471c <av_log_get_flags@plt>
    b408:	mov	r7, r0
    b40c:	b	b2a8 <main@@Base+0x667c>
    b410:	mov	r0, #1
    b414:	b	b3e8 <main@@Base+0x67bc>
    b418:	mov	r0, #2
    b41c:	b	b3e8 <main@@Base+0x67bc>
    b420:	mov	r0, #3
    b424:	b	b3e8 <main@@Base+0x67bc>
    b428:	mov	r0, #4
    b42c:	b	b3e8 <main@@Base+0x67bc>
    b430:	mov	r0, #5
    b434:	b	b3e8 <main@@Base+0x67bc>
    b438:	mov	r0, #6
    b43c:	b	b3e8 <main@@Base+0x67bc>
    b440:	ldr	r3, [pc, #88]	; b4a0 <main@@Base+0x6874>
    b444:	ldr	r2, [pc, #88]	; b4a4 <main@@Base+0x6878>
    b448:	add	r3, pc, r3
    b44c:	str	r2, [sp, #4]
    b450:	str	r3, [sp]
    b454:	ldr	r2, [pc, #76]	; b4a8 <main@@Base+0x687c>
    b458:	ldr	r3, [pc, #76]	; b4ac <main@@Base+0x6880>
    b45c:	add	r2, pc, r2
    b460:	add	r3, pc, r3
    b464:	mov	r1, r4
    b468:	mov	r0, r4
    b46c:	bl	40f8 <av_log@plt>
    b470:	bl	4278 <abort@plt>
    b474:	bl	3f00 <__stack_chk_fail@plt>
    b478:	andeq	r6, r2, r8, lsr fp
    b47c:	andeq	r0, r0, r8, ror #7
    b480:	andeq	r6, r2, r8, lsr #30
    b484:	muleq	r1, r8, r8
    b488:	andeq	r1, r1, ip, lsl #20
    b48c:	andeq	r4, r1, r4, lsl #17
    b490:	andeq	r4, r1, r8, ror r8
    b494:	andeq	r1, r1, r4, lsl #20
    b498:	andeq	r1, r1, r8, asr #15
    b49c:	andeq	r1, r1, r8, ror #15
    b4a0:	andeq	r1, r1, r4, ror #1
    b4a4:	andeq	r0, r0, sl, ror r3
    b4a8:	strheq	r1, [r1], -r0
    b4ac:	andeq	r1, r1, r8, ror #13
    b4b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b4b4:	mov	fp, r2
    b4b8:	ldr	lr, [pc, #1204]	; b974 <main@@Base+0x6d48>
    b4bc:	sub	sp, sp, #44	; 0x2c
    b4c0:	add	lr, pc, lr
    b4c4:	ldr	ip, [pc, #1196]	; b978 <main@@Base+0x6d4c>
    b4c8:	str	lr, [sp, #16]
    b4cc:	ldr	ip, [lr, ip]
    b4d0:	ldr	r3, [pc, #1188]	; b97c <main@@Base+0x6d50>
    b4d4:	str	ip, [sp, #12]
    b4d8:	ldr	ip, [ip]
    b4dc:	add	r3, pc, r3
    b4e0:	mov	r6, r0
    b4e4:	str	r1, [sp, #8]
    b4e8:	str	ip, [sp, #36]	; 0x24
    b4ec:	bl	a740 <main@@Base+0x5b14>
    b4f0:	ldr	r3, [fp]
    b4f4:	cmp	r3, #0
    b4f8:	beq	b520 <main@@Base+0x68f4>
    b4fc:	mov	r3, fp
    b500:	ldr	r2, [r3, #4]
    b504:	tst	r2, #8192	; 0x2000
    b508:	beq	b514 <main@@Base+0x68e8>
    b50c:	ands	r2, r2, #786432	; 0xc0000
    b510:	beq	b93c <main@@Base+0x6d10>
    b514:	ldr	r2, [r3, #20]!
    b518:	cmp	r2, #0
    b51c:	bne	b500 <main@@Base+0x68d4>
    b520:	cmp	r0, #0
    b524:	beq	b918 <main@@Base+0x6cec>
    b528:	ldr	r3, [sp, #8]
    b52c:	add	r0, r0, #1
    b530:	ldr	r2, [r3, r0, lsl #2]
    b534:	cmp	r2, #0
    b538:	beq	b54c <main@@Base+0x6920>
    b53c:	ldr	r1, [pc, #1084]	; b980 <main@@Base+0x6d54>
    b540:	mov	r0, #0
    b544:	add	r1, pc, r1
    b548:	bl	b0b4 <main@@Base+0x6488>
    b54c:	ldr	r3, [pc, #1072]	; b984 <main@@Base+0x6d58>
    b550:	mov	r2, fp
    b554:	add	r3, pc, r3
    b558:	ldr	r1, [sp, #8]
    b55c:	mov	r0, r6
    b560:	bl	a740 <main@@Base+0x5b14>
    b564:	mov	r4, r0
    b568:	ldr	r0, [pc, #1048]	; b988 <main@@Base+0x6d5c>
    b56c:	add	r0, pc, r0
    b570:	bl	46f8 <getenv@plt>
    b574:	orrs	r3, r0, r4
    b578:	beq	b878 <main@@Base+0x6c4c>
    b57c:	bl	907c <main@@Base+0x4450>
    b580:	ldr	r3, [pc, #1028]	; b98c <main@@Base+0x6d60>
    b584:	ldr	r0, [pc, r3]
    b588:	cmp	r0, #0
    b58c:	beq	b878 <main@@Base+0x6c4c>
    b590:	ldr	r2, [pc, #1016]	; b990 <main@@Base+0x6d64>
    b594:	mov	r1, #1
    b598:	add	r2, pc, r2
    b59c:	bl	4254 <__fprintf_chk@plt>
    b5a0:	cmp	r6, #0
    b5a4:	ble	b86c <main@@Base+0x6c40>
    b5a8:	sub	sl, r6, #1
    b5ac:	cmp	sl, #0
    b5b0:	movle	r4, #0
    b5b4:	ble	b724 <main@@Base+0x6af8>
    b5b8:	ldr	r3, [pc, #980]	; b994 <main@@Base+0x6d68>
    b5bc:	cmp	r6, sl
    b5c0:	add	r3, pc, r3
    b5c4:	str	r3, [sp, #20]
    b5c8:	ldr	r3, [pc, #968]	; b998 <main@@Base+0x6d6c>
    b5cc:	str	fp, [sp, #28]
    b5d0:	add	r3, pc, r3
    b5d4:	movlt	sl, r6
    b5d8:	mov	r4, #0
    b5dc:	mov	fp, r3
    b5e0:	ldr	r8, [pc, #948]	; b99c <main@@Base+0x6d70>
    b5e4:	ldr	r9, [pc, #948]	; b9a0 <main@@Base+0x6d74>
    b5e8:	ldr	r2, [sp, #8]
    b5ec:	add	r8, pc, r8
    b5f0:	add	r9, pc, r9
    b5f4:	sub	r7, r2, #4
    b5f8:	str	r6, [sp, #24]
    b5fc:	ldr	r5, [r7, #4]!
    b600:	ldrb	r3, [r5]
    b604:	cmp	r3, #0
    b608:	beq	b904 <main@@Base+0x6cd8>
    b60c:	mov	r1, r5
    b610:	b	b620 <main@@Base+0x69f4>
    b614:	ldrb	r3, [r1, #1]!
    b618:	cmp	r3, #0
    b61c:	beq	b904 <main@@Base+0x6cd8>
    b620:	sub	r2, r3, #43	; 0x2b
    b624:	sub	r0, r3, #64	; 0x40
    b628:	cmp	r2, #15
    b62c:	cmphi	r0, #26
    b630:	movhi	r2, #1
    b634:	movls	r2, #0
    b638:	cmp	r3, #95	; 0x5f
    b63c:	moveq	r2, #0
    b640:	andne	r2, r2, #1
    b644:	cmp	r2, #0
    b648:	beq	b614 <main@@Base+0x69e8>
    b64c:	sub	r3, r3, #97	; 0x61
    b650:	cmp	r3, #25
    b654:	bls	b614 <main@@Base+0x69e8>
    b658:	ldr	r1, [fp]
    b65c:	mov	r0, #34	; 0x22
    b660:	bl	4428 <fputc@plt>
    b664:	ldrb	r3, [r5]
    b668:	cmp	r3, #0
    b66c:	beq	b6e0 <main@@Base+0x6ab4>
    b670:	ldr	r6, [pc, #812]	; b9a4 <main@@Base+0x6d78>
    b674:	add	r6, pc, r6
    b678:	b	b694 <main@@Base+0x6a68>
    b67c:	mov	r2, r9
    b680:	mov	r1, #1
    b684:	bl	4254 <__fprintf_chk@plt>
    b688:	ldrb	r3, [r5, #1]!
    b68c:	cmp	r3, #0
    b690:	beq	b6e0 <main@@Base+0x6ab4>
    b694:	sub	r2, r3, #34	; 0x22
    b698:	tst	r2, #253	; 0xfd
    b69c:	sub	r1, r3, #92	; 0x5c
    b6a0:	moveq	r2, #1
    b6a4:	movne	r2, #0
    b6a8:	tst	r1, #251	; 0xfb
    b6ac:	moveq	r2, #1
    b6b0:	cmp	r2, #0
    b6b4:	ldr	r0, [r6]
    b6b8:	bne	b67c <main@@Base+0x6a50>
    b6bc:	sub	r2, r3, #32
    b6c0:	cmp	r2, #94	; 0x5e
    b6c4:	bls	b8cc <main@@Base+0x6ca0>
    b6c8:	mov	r2, r8
    b6cc:	mov	r1, #1
    b6d0:	bl	4254 <__fprintf_chk@plt>
    b6d4:	ldrb	r3, [r5, #1]!
    b6d8:	cmp	r3, #0
    b6dc:	bne	b694 <main@@Base+0x6a68>
    b6e0:	ldr	r3, [pc, #704]	; b9a8 <main@@Base+0x6d7c>
    b6e4:	mov	r0, #34	; 0x22
    b6e8:	add	r3, pc, r3
    b6ec:	ldr	r1, [r3]
    b6f0:	bl	4428 <fputc@plt>
    b6f4:	ldr	r3, [pc, #688]	; b9ac <main@@Base+0x6d80>
    b6f8:	add	r4, r4, #1
    b6fc:	add	r3, pc, r3
    b700:	ldr	r1, [r3]
    b704:	mov	r0, #32
    b708:	bl	4428 <fputc@plt>
    b70c:	cmp	r4, sl
    b710:	blt	b5fc <main@@Base+0x69d0>
    b714:	ldr	r6, [sp, #24]
    b718:	ldr	fp, [sp, #28]
    b71c:	cmp	r6, r4
    b720:	ble	b86c <main@@Base+0x6c40>
    b724:	ldr	r3, [pc, #644]	; b9b0 <main@@Base+0x6d84>
    b728:	str	fp, [sp, #20]
    b72c:	add	r3, pc, r3
    b730:	mov	fp, r3
    b734:	ldr	r9, [pc, #632]	; b9b4 <main@@Base+0x6d88>
    b738:	ldr	sl, [pc, #632]	; b9b8 <main@@Base+0x6d8c>
    b73c:	ldr	r8, [pc, #632]	; b9bc <main@@Base+0x6d90>
    b740:	ldr	r2, [sp, #8]
    b744:	sub	r7, r4, #-1073741823	; 0xc0000001
    b748:	add	r9, pc, r9
    b74c:	add	sl, pc, sl
    b750:	add	r8, pc, r8
    b754:	add	r7, r2, r7, lsl #2
    b758:	ldr	r5, [r7, #4]!
    b75c:	ldrb	r3, [r5]
    b760:	cmp	r3, #0
    b764:	movne	r1, r5
    b768:	bne	b77c <main@@Base+0x6b50>
    b76c:	b	b8ec <main@@Base+0x6cc0>
    b770:	ldrb	r3, [r1, #1]!
    b774:	cmp	r3, #0
    b778:	beq	b8ec <main@@Base+0x6cc0>
    b77c:	sub	r2, r3, #64	; 0x40
    b780:	sub	r0, r3, #43	; 0x2b
    b784:	cmp	r2, #26
    b788:	cmphi	r0, #15
    b78c:	movhi	r2, #1
    b790:	movls	r2, #0
    b794:	cmp	r3, #95	; 0x5f
    b798:	moveq	r2, #0
    b79c:	andne	r2, r2, #1
    b7a0:	cmp	r2, #0
    b7a4:	beq	b770 <main@@Base+0x6b44>
    b7a8:	sub	r3, r3, #97	; 0x61
    b7ac:	cmp	r3, #25
    b7b0:	bls	b770 <main@@Base+0x6b44>
    b7b4:	ldr	r1, [fp]
    b7b8:	mov	r0, #34	; 0x22
    b7bc:	bl	4428 <fputc@plt>
    b7c0:	ldrb	r3, [r5]
    b7c4:	cmp	r3, #0
    b7c8:	bne	b7e8 <main@@Base+0x6bbc>
    b7cc:	b	b834 <main@@Base+0x6c08>
    b7d0:	mov	r2, r8
    b7d4:	mov	r1, #1
    b7d8:	bl	4254 <__fprintf_chk@plt>
    b7dc:	ldrb	r3, [r5, #1]!
    b7e0:	cmp	r3, #0
    b7e4:	beq	b834 <main@@Base+0x6c08>
    b7e8:	sub	r2, r3, #34	; 0x22
    b7ec:	tst	r2, #253	; 0xfd
    b7f0:	sub	r1, r3, #92	; 0x5c
    b7f4:	moveq	r2, #1
    b7f8:	movne	r2, #0
    b7fc:	tst	r1, #251	; 0xfb
    b800:	moveq	r2, #1
    b804:	cmp	r2, #0
    b808:	ldr	r0, [r9]
    b80c:	bne	b7d0 <main@@Base+0x6ba4>
    b810:	sub	r2, r3, #32
    b814:	cmp	r2, #94	; 0x5e
    b818:	bls	b8dc <main@@Base+0x6cb0>
    b81c:	mov	r2, sl
    b820:	mov	r1, #1
    b824:	bl	4254 <__fprintf_chk@plt>
    b828:	ldrb	r3, [r5, #1]!
    b82c:	cmp	r3, #0
    b830:	bne	b7e8 <main@@Base+0x6bbc>
    b834:	ldr	r3, [pc, #388]	; b9c0 <main@@Base+0x6d94>
    b838:	mov	r0, #34	; 0x22
    b83c:	add	r3, pc, r3
    b840:	ldr	r1, [r3]
    b844:	bl	4428 <fputc@plt>
    b848:	ldr	r3, [pc, #372]	; b9c4 <main@@Base+0x6d98>
    b84c:	add	r4, r4, #1
    b850:	add	r3, pc, r3
    b854:	ldr	r1, [r3]
    b858:	mov	r0, #10
    b85c:	bl	4428 <fputc@plt>
    b860:	cmp	r6, r4
    b864:	bgt	b758 <main@@Base+0x6b2c>
    b868:	ldr	fp, [sp, #20]
    b86c:	ldr	r3, [pc, #340]	; b9c8 <main@@Base+0x6d9c>
    b870:	ldr	r0, [pc, r3]
    b874:	bl	417c <fflush@plt>
    b878:	ldr	r3, [pc, #332]	; b9cc <main@@Base+0x6da0>
    b87c:	mov	r2, fp
    b880:	ldr	r1, [sp, #8]
    b884:	mov	r0, r6
    b888:	add	r3, pc, r3
    b88c:	bl	a740 <main@@Base+0x5b14>
    b890:	cmp	r0, #0
    b894:	bne	b8b4 <main@@Base+0x6c88>
    b898:	ldr	r3, [sp, #12]
    b89c:	ldr	r2, [sp, #36]	; 0x24
    b8a0:	ldr	r3, [r3]
    b8a4:	cmp	r2, r3
    b8a8:	bne	b970 <main@@Base+0x6d44>
    b8ac:	add	sp, sp, #44	; 0x2c
    b8b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b8b4:	mov	r2, #1
    b8b8:	ldr	r3, [pc, #272]	; b9d0 <main@@Base+0x6da4>
    b8bc:	ldr	r1, [sp, #16]
    b8c0:	ldr	r3, [r1, r3]
    b8c4:	str	r2, [r3]
    b8c8:	b	b898 <main@@Base+0x6c6c>
    b8cc:	mov	r1, r0
    b8d0:	mov	r0, r3
    b8d4:	bl	4428 <fputc@plt>
    b8d8:	b	b688 <main@@Base+0x6a5c>
    b8dc:	mov	r1, r0
    b8e0:	mov	r0, r3
    b8e4:	bl	4428 <fputc@plt>
    b8e8:	b	b7dc <main@@Base+0x6bb0>
    b8ec:	ldr	r3, [pc, #224]	; b9d4 <main@@Base+0x6da8>
    b8f0:	mov	r0, r5
    b8f4:	add	r3, pc, r3
    b8f8:	ldr	r1, [r3]
    b8fc:	bl	3db0 <fputs@plt>
    b900:	b	b848 <main@@Base+0x6c1c>
    b904:	ldr	r3, [sp, #20]
    b908:	mov	r0, r5
    b90c:	ldr	r1, [r3]
    b910:	bl	3db0 <fputs@plt>
    b914:	b	b6f4 <main@@Base+0x6ac8>
    b918:	ldr	r3, [pc, #184]	; b9d8 <main@@Base+0x6dac>
    b91c:	mov	r2, fp
    b920:	add	r3, pc, r3
    b924:	ldr	r1, [sp, #8]
    b928:	mov	r0, r6
    b92c:	bl	a740 <main@@Base+0x5b14>
    b930:	cmp	r0, #0
    b934:	beq	b54c <main@@Base+0x6920>
    b938:	b	b528 <main@@Base+0x68fc>
    b93c:	mov	r1, r2
    b940:	ldr	r3, [pc, #148]	; b9dc <main@@Base+0x6db0>
    b944:	ldr	r2, [pc, #148]	; b9e0 <main@@Base+0x6db4>
    b948:	add	r3, pc, r3
    b94c:	str	r2, [sp, #4]
    b950:	str	r3, [sp]
    b954:	ldr	r2, [pc, #136]	; b9e4 <main@@Base+0x6db8>
    b958:	ldr	r3, [pc, #136]	; b9e8 <main@@Base+0x6dbc>
    b95c:	add	r2, pc, r2
    b960:	add	r3, pc, r3
    b964:	mov	r0, r1
    b968:	bl	40f8 <av_log@plt>
    b96c:	bl	4278 <abort@plt>
    b970:	bl	3f00 <__stack_chk_fail@plt>
    b974:	andeq	r6, r2, ip, lsr r7
    b978:	andeq	r0, r0, r8, ror #7
    b97c:			; <UNDEFINED> instruction: 0x000116b8
    b980:	andeq	r1, r1, r0, asr r6
    b984:	andeq	r1, r1, r0, ror r6
    b988:	andeq	r1, r1, r0, ror #12
    b98c:	ldrdeq	r7, [r2], -r8
    b990:	andeq	r1, r1, r0, asr #12
    b994:	muleq	r2, ip, r6
    b998:	andeq	r7, r2, ip, lsl #13
    b99c:	andeq	r1, r1, r0, lsl #12
    b9a0:	strdeq	r1, [r1], -r8
    b9a4:	andeq	r7, r2, r8, ror #11
    b9a8:	andeq	r7, r2, r4, ror r5
    b9ac:	andeq	r7, r2, r0, ror #10
    b9b0:	andeq	r7, r2, r0, lsr r5
    b9b4:	andeq	r7, r2, r4, lsl r5
    b9b8:	andeq	r1, r1, r0, lsr #9
    b9bc:	muleq	r1, r8, r4
    b9c0:	andeq	r7, r2, r0, lsr #8
    b9c4:	andeq	r7, r2, ip, lsl #8
    b9c8:	andeq	r7, r2, ip, ror #7
    b9cc:	andeq	r1, r1, ip, ror #6
    b9d0:			; <UNDEFINED> instruction: 0x000003b0
    b9d4:	andeq	r7, r2, r8, ror #6
    b9d8:	andeq	r1, r1, r0, lsr #5
    b9dc:	andeq	r0, r1, r4, ror #23
    b9e0:	strdeq	r0, [r0], -r5
    b9e4:			; <UNDEFINED> instruction: 0x00010bb0
    b9e8:	andeq	r1, r1, r0, asr #4
    b9ec:	push	{lr}		; (str lr, [sp, #-4]!)
    b9f0:	ldr	r3, [pc, #56]	; ba30 <main@@Base+0x6e04>
    b9f4:	ldr	r2, [pc, #56]	; ba34 <main@@Base+0x6e08>
    b9f8:	add	r3, pc, r3
    b9fc:	ldr	r3, [r3, r2]
    ba00:	sub	sp, sp, #12
    ba04:	ldr	r2, [r3]
    ba08:	str	r2, [sp, #4]
    ba0c:	ldr	r2, [sp, #4]
    ba10:	ldr	r3, [r3]
    ba14:	cmp	r2, r3
    ba18:	bne	ba2c <main@@Base+0x6e00>
    ba1c:	mov	r0, #0
    ba20:	add	sp, sp, #12
    ba24:	pop	{lr}		; (ldr lr, [sp], #4)
    ba28:	b	907c <main@@Base+0x4450>
    ba2c:	bl	3f00 <__stack_chk_fail@plt>
    ba30:	andeq	r6, r2, r4, lsl #4
    ba34:	andeq	r0, r0, r8, ror #7
    ba38:	push	{r4, r5, r6, lr}
    ba3c:	mov	r6, r2
    ba40:	ldr	r2, [pc, #120]	; bac0 <main@@Base+0x6e94>
    ba44:	ldr	r1, [pc, #120]	; bac4 <main@@Base+0x6e98>
    ba48:	add	r2, pc, r2
    ba4c:	ldr	r4, [r2, r1]
    ba50:	sub	sp, sp, #8
    ba54:	ldr	r3, [r4]
    ba58:	mov	r0, r6
    ba5c:	mov	r1, sp
    ba60:	mov	r2, #10
    ba64:	str	r3, [sp, #4]
    ba68:	bl	47ac <strtol@plt>
    ba6c:	ldr	r3, [sp]
    ba70:	ldrb	r5, [r3]
    ba74:	cmp	r5, #0
    ba78:	bne	ba9c <main@@Base+0x6e70>
    ba7c:	bl	4668 <av_max_alloc@plt>
    ba80:	ldr	r2, [sp, #4]
    ba84:	ldr	r3, [r4]
    ba88:	mov	r0, r5
    ba8c:	cmp	r2, r3
    ba90:	bne	babc <main@@Base+0x6e90>
    ba94:	add	sp, sp, #8
    ba98:	pop	{r4, r5, r6, pc}
    ba9c:	ldr	r2, [pc, #36]	; bac8 <main@@Base+0x6e9c>
    baa0:	mov	r0, #0
    baa4:	mov	r3, r6
    baa8:	add	r2, pc, r2
    baac:	mov	r1, #8
    bab0:	bl	40f8 <av_log@plt>
    bab4:	mov	r0, #1
    bab8:	bl	902c <main@@Base+0x4400>
    babc:	bl	3f00 <__stack_chk_fail@plt>
    bac0:			; <UNDEFINED> instruction: 0x000261b4
    bac4:	andeq	r0, r0, r8, ror #7
    bac8:	andeq	r1, r1, r8, asr r1
    bacc:	push	{r4, r5, r6, lr}
    bad0:	ldr	r3, [pc, #160]	; bb78 <main@@Base+0x6f4c>
    bad4:	ldr	ip, [pc, #160]	; bb7c <main@@Base+0x6f50>
    bad8:	add	r3, pc, r3
    badc:	ldr	r6, [r3, ip]
    bae0:	sub	sp, sp, #24
    bae4:	ldr	r3, [r6]
    bae8:	mov	r0, r1
    baec:	vldr	d1, [pc, #116]	; bb68 <main@@Base+0x6f3c>
    baf0:	mov	r1, r2
    baf4:	vldr	d0, [pc, #116]	; bb70 <main@@Base+0x6f44>
    baf8:	mov	r2, #1024	; 0x400
    bafc:	str	r3, [sp, #20]
    bb00:	bl	99a4 <main@@Base+0x4d78>
    bb04:	vcvt.s32.f64	s15, d0
    bb08:	vmov	r2, s15
    bb0c:	add	r4, r2, #1
    bb10:	asr	r3, r2, #31
    bb14:	asr	r5, r4, #31
    bb18:	mov	r1, sp
    bb1c:	mov	r0, #0
    bb20:	strd	r4, [sp, #8]
    bb24:	strd	r2, [sp]
    bb28:	bl	3dbc <setrlimit64@plt>
    bb2c:	cmp	r0, #0
    bb30:	bne	bb50 <main@@Base+0x6f24>
    bb34:	ldr	r2, [sp, #20]
    bb38:	ldr	r3, [r6]
    bb3c:	mov	r0, #0
    bb40:	cmp	r2, r3
    bb44:	bne	bb60 <main@@Base+0x6f34>
    bb48:	add	sp, sp, #24
    bb4c:	pop	{r4, r5, r6, pc}
    bb50:	ldr	r0, [pc, #40]	; bb80 <main@@Base+0x6f54>
    bb54:	add	r0, pc, r0
    bb58:	bl	46b0 <perror@plt>
    bb5c:	b	bb34 <main@@Base+0x6f08>
    bb60:	bl	3f00 <__stack_chk_fail@plt>
    bb64:	nop	{0}
    bb68:			; <UNDEFINED> instruction: 0xffc00000
    bb6c:	ldrshmi	pc, [pc, #255]	; bc73 <main@@Base+0x7047>	; <UNPREDICTABLE>
	...
    bb78:	andeq	r6, r2, r4, lsr #2
    bb7c:	andeq	r0, r0, r8, ror #7
    bb80:	andeq	r1, r1, r8, asr #1
    bb84:	push	{r4, r5, r6, r7, lr}
    bb88:	ldr	r3, [pc, #128]	; bc10 <main@@Base+0x6fe4>
    bb8c:	ldr	r2, [pc, #128]	; bc14 <main@@Base+0x6fe8>
    bb90:	add	r3, pc, r3
    bb94:	ldr	r5, [r3, r2]
    bb98:	sub	sp, sp, #148	; 0x94
    bb9c:	add	r4, sp, #12
    bba0:	ldr	r3, [r5]
    bba4:	mov	r6, r1
    bba8:	mov	r7, r0
    bbac:	mov	r2, #128	; 0x80
    bbb0:	mov	r0, r1
    bbb4:	mov	r1, r4
    bbb8:	str	r3, [sp, #140]	; 0x8c
    bbbc:	bl	44f4 <av_strerror@plt>
    bbc0:	cmp	r0, #0
    bbc4:	blt	bbfc <main@@Base+0x6fd0>
    bbc8:	ldr	r2, [pc, #72]	; bc18 <main@@Base+0x6fec>
    bbcc:	mov	r3, r7
    bbd0:	add	r2, pc, r2
    bbd4:	str	r4, [sp]
    bbd8:	mov	r1, #16
    bbdc:	mov	r0, #0
    bbe0:	bl	40f8 <av_log@plt>
    bbe4:	ldr	r2, [sp, #140]	; 0x8c
    bbe8:	ldr	r3, [r5]
    bbec:	cmp	r2, r3
    bbf0:	bne	bc0c <main@@Base+0x6fe0>
    bbf4:	add	sp, sp, #148	; 0x94
    bbf8:	pop	{r4, r5, r6, r7, pc}
    bbfc:	rsb	r0, r6, #0
    bc00:	bl	3f3c <strerror@plt>
    bc04:	mov	r4, r0
    bc08:	b	bbc8 <main@@Base+0x6f9c>
    bc0c:	bl	3f00 <__stack_chk_fail@plt>
    bc10:	andeq	r6, r2, ip, rrx
    bc14:	andeq	r0, r0, r8, ror #7
    bc18:	andeq	r1, r1, r8, asr r0
    bc1c:	push	{r4, r5, r6, lr}
    bc20:	ldr	r5, [pc, #276]	; bd3c <main@@Base+0x7110>
    bc24:	ldr	ip, [pc, #276]	; bd40 <main@@Base+0x7114>
    bc28:	add	r5, pc, r5
    bc2c:	ldr	r6, [r5, ip]
    bc30:	ldr	r3, [pc, #268]	; bd44 <main@@Base+0x7118>
    bc34:	ldr	ip, [r6]
    bc38:	sub	sp, sp, #16
    bc3c:	add	r3, pc, r3
    bc40:	str	ip, [sp, #12]
    bc44:	bl	a740 <main@@Base+0x5b14>
    bc48:	ldr	r3, [pc, #248]	; bd48 <main@@Base+0x711c>
    bc4c:	ldr	r3, [r5, r3]
    bc50:	ldr	r4, [r3]
    bc54:	orrs	r4, r0, r4
    bc58:	beq	bc74 <main@@Base+0x7048>
    bc5c:	ldr	r2, [sp, #12]
    bc60:	ldr	r3, [r6]
    bc64:	cmp	r2, r3
    bc68:	bne	bd38 <main@@Base+0x710c>
    bc6c:	add	sp, sp, #16
    bc70:	pop	{r4, r5, r6, pc}
    bc74:	ldr	r3, [pc, #208]	; bd4c <main@@Base+0x7120>
    bc78:	ldr	r2, [pc, #208]	; bd50 <main@@Base+0x7124>
    bc7c:	ldr	r3, [r5, r3]
    bc80:	add	r2, pc, r2
    bc84:	mov	r1, #32
    bc88:	mov	r0, r4
    bc8c:	bl	40f8 <av_log@plt>
    bc90:	ldr	r3, [pc, #188]	; bd54 <main@@Base+0x7128>
    bc94:	ldr	r1, [pc, #188]	; bd58 <main@@Base+0x712c>
    bc98:	ldr	r3, [r5, r3]
    bc9c:	ldr	r2, [pc, #184]	; bd5c <main@@Base+0x7130>
    bca0:	ldr	r3, [r3]
    bca4:	add	r2, pc, r2
    bca8:	str	r1, [sp]
    bcac:	mov	r0, r4
    bcb0:	mov	r1, #32
    bcb4:	bl	40f8 <av_log@plt>
    bcb8:	ldr	r2, [pc, #160]	; bd60 <main@@Base+0x7134>
    bcbc:	mov	r1, #32
    bcc0:	add	r2, pc, r2
    bcc4:	mov	r0, r4
    bcc8:	bl	40f8 <av_log@plt>
    bccc:	ldr	r2, [pc, #144]	; bd64 <main@@Base+0x7138>
    bcd0:	ldr	r5, [pc, #144]	; bd68 <main@@Base+0x713c>
    bcd4:	add	r2, pc, r2
    bcd8:	str	r2, [sp]
    bcdc:	ldr	r2, [pc, #136]	; bd6c <main@@Base+0x7140>
    bce0:	add	r5, pc, r5
    bce4:	mov	r3, r5
    bce8:	add	r2, pc, r2
    bcec:	mov	r1, #32
    bcf0:	mov	r0, r4
    bcf4:	bl	40f8 <av_log@plt>
    bcf8:	ldr	r2, [pc, #112]	; bd70 <main@@Base+0x7144>
    bcfc:	mov	r3, r5
    bd00:	add	r2, pc, r2
    bd04:	mov	r0, r4
    bd08:	mov	r1, #32
    bd0c:	bl	40f8 <av_log@plt>
    bd10:	mov	r0, #5
    bd14:	bl	81d4 <main@@Base+0x35a8>
    bd18:	ldr	r2, [sp, #12]
    bd1c:	ldr	r3, [r6]
    bd20:	cmp	r2, r3
    bd24:	bne	bd38 <main@@Base+0x710c>
    bd28:	mov	r0, #3
    bd2c:	add	sp, sp, #16
    bd30:	pop	{r4, r5, r6, lr}
    bd34:	b	81d4 <main@@Base+0x35a8>
    bd38:	bl	3f00 <__stack_chk_fail@plt>
    bd3c:	ldrdeq	r5, [r2], -r4
    bd40:	andeq	r0, r0, r8, ror #7
    bd44:	andeq	r4, r1, r8, asr #18
    bd48:			; <UNDEFINED> instruction: 0x000003b0
    bd4c:	andeq	r0, r0, r8, asr #7
    bd50:			; <UNDEFINED> instruction: 0x00010fb0
    bd54:	andeq	r0, r0, r4, ror #7
    bd58:	andeq	r0, r0, r4, ror #15
    bd5c:	andeq	r0, r1, ip, lsr #31
    bd60:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    bd64:			; <UNDEFINED> instruction: 0x00010fbc
    bd68:	ldrdeq	r0, [r1], -ip
    bd6c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
    bd70:			; <UNDEFINED> instruction: 0x00010fb0
    bd74:	push	{r4, r5, r6, lr}
    bd78:	ldr	r4, [pc, #228]	; be64 <main@@Base+0x7238>
    bd7c:	ldr	r2, [pc, #228]	; be68 <main@@Base+0x723c>
    bd80:	add	r4, pc, r4
    bd84:	ldr	r6, [r4, r2]
    bd88:	sub	sp, sp, #16
    bd8c:	ldr	r2, [r6]
    bd90:	ldr	r3, [pc, #212]	; be6c <main@@Base+0x7240>
    bd94:	str	r2, [sp, #12]
    bd98:	ldr	r0, [r4, r3]
    bd9c:	bl	3f60 <av_log_set_callback@plt>
    bda0:	ldr	r3, [pc, #200]	; be70 <main@@Base+0x7244>
    bda4:	ldr	r2, [pc, #200]	; be74 <main@@Base+0x7248>
    bda8:	ldr	r3, [r4, r3]
    bdac:	add	r2, pc, r2
    bdb0:	mov	r1, #32
    bdb4:	mov	r0, #0
    bdb8:	bl	40f8 <av_log@plt>
    bdbc:	ldr	r3, [pc, #180]	; be78 <main@@Base+0x724c>
    bdc0:	ldr	r1, [pc, #180]	; be7c <main@@Base+0x7250>
    bdc4:	ldr	r3, [r4, r3]
    bdc8:	ldr	r2, [pc, #176]	; be80 <main@@Base+0x7254>
    bdcc:	ldr	r3, [r3]
    bdd0:	add	r2, pc, r2
    bdd4:	str	r1, [sp]
    bdd8:	mov	r0, #0
    bddc:	mov	r1, #32
    bde0:	bl	40f8 <av_log@plt>
    bde4:	ldr	r2, [pc, #152]	; be84 <main@@Base+0x7258>
    bde8:	mov	r1, #32
    bdec:	add	r2, pc, r2
    bdf0:	mov	r0, #0
    bdf4:	bl	40f8 <av_log@plt>
    bdf8:	ldr	r2, [pc, #136]	; be88 <main@@Base+0x725c>
    bdfc:	ldr	r5, [pc, #136]	; be8c <main@@Base+0x7260>
    be00:	add	r2, pc, r2
    be04:	str	r2, [sp]
    be08:	ldr	r2, [pc, #128]	; be90 <main@@Base+0x7264>
    be0c:	add	r5, pc, r5
    be10:	mov	r3, r5
    be14:	add	r2, pc, r2
    be18:	mov	r1, #32
    be1c:	mov	r0, #0
    be20:	bl	40f8 <av_log@plt>
    be24:	ldr	r2, [pc, #104]	; be94 <main@@Base+0x7268>
    be28:	mov	r3, r5
    be2c:	add	r2, pc, r2
    be30:	mov	r1, #32
    be34:	mov	r0, #0
    be38:	bl	40f8 <av_log@plt>
    be3c:	mov	r0, #2
    be40:	bl	81d4 <main@@Base+0x35a8>
    be44:	ldr	r2, [sp, #12]
    be48:	ldr	r3, [r6]
    be4c:	cmp	r2, r3
    be50:	bne	be60 <main@@Base+0x7234>
    be54:	mov	r0, #0
    be58:	add	sp, sp, #16
    be5c:	pop	{r4, r5, r6, pc}
    be60:	bl	3f00 <__stack_chk_fail@plt>
    be64:	andeq	r5, r2, ip, ror lr
    be68:	andeq	r0, r0, r8, ror #7
    be6c:	andeq	r0, r0, r4, asr #7
    be70:	andeq	r0, r0, r8, asr #7
    be74:	andeq	r0, r1, r4, lsl #29
    be78:	andeq	r0, r0, r4, ror #7
    be7c:	andeq	r0, r0, r4, ror #15
    be80:	andeq	r0, r1, r0, lsl #29
    be84:	andeq	r0, r1, r4, lsr #27
    be88:	muleq	r1, r0, lr
    be8c:	muleq	r1, ip, sl
    be90:	andeq	r0, r1, r8, ror #28
    be94:	andeq	r0, r1, r4, lsl #29
    be98:	push	{r4, lr}
    be9c:	ldr	r3, [pc, #68]	; bee8 <main@@Base+0x72bc>
    bea0:	ldr	r1, [pc, #68]	; beec <main@@Base+0x72c0>
    bea4:	add	r3, pc, r3
    bea8:	ldr	r4, [r3, r1]
    beac:	sub	sp, sp, #8
    beb0:	ldr	r1, [r4]
    beb4:	ldr	r2, [pc, #52]	; bef0 <main@@Base+0x72c4>
    beb8:	str	r1, [sp, #4]
    bebc:	ldr	r0, [r3, r2]
    bec0:	bl	3f60 <av_log_set_callback@plt>
    bec4:	bl	804c <main@@Base+0x3420>
    bec8:	ldr	r2, [sp, #4]
    becc:	ldr	r3, [r4]
    bed0:	cmp	r2, r3
    bed4:	bne	bee4 <main@@Base+0x72b8>
    bed8:	mov	r0, #0
    bedc:	add	sp, sp, #8
    bee0:	pop	{r4, pc}
    bee4:	bl	3f00 <__stack_chk_fail@plt>
    bee8:	andeq	r5, r2, r8, asr sp
    beec:	andeq	r0, r0, r8, ror #7
    bef0:	andeq	r0, r0, r4, asr #7
    bef4:	push	{r4, lr}
    bef8:	ldr	r3, [pc, #84]	; bf54 <main@@Base+0x7328>
    befc:	ldr	r1, [pc, #84]	; bf58 <main@@Base+0x732c>
    bf00:	add	r3, pc, r3
    bf04:	ldr	r4, [r3, r1]
    bf08:	sub	sp, sp, #16
    bf0c:	ldr	ip, [r4]
    bf10:	ldr	r2, [pc, #68]	; bf5c <main@@Base+0x7330>
    bf14:	str	ip, [sp, #12]
    bf18:	ldr	r1, [pc, #64]	; bf60 <main@@Base+0x7334>
    bf1c:	ldr	r3, [r3, r2]
    bf20:	add	r1, pc, r1
    bf24:	mov	r2, r3
    bf28:	str	r3, [sp]
    bf2c:	mov	r0, #1
    bf30:	bl	474c <__printf_chk@plt>
    bf34:	ldr	r2, [sp, #12]
    bf38:	ldr	r3, [r4]
    bf3c:	cmp	r2, r3
    bf40:	bne	bf50 <main@@Base+0x7324>
    bf44:	mov	r0, #0
    bf48:	add	sp, sp, #16
    bf4c:	pop	{r4, pc}
    bf50:	bl	3f00 <__stack_chk_fail@plt>
    bf54:	strdeq	r5, [r2], -ip
    bf58:	andeq	r0, r0, r8, ror #7
    bf5c:	andeq	r0, r0, r8, asr #7
    bf60:	muleq	r1, ip, r2
    bf64:	push	{lr}		; (str lr, [sp, #-4]!)
    bf68:	ldr	r3, [pc, #60]	; bfac <main@@Base+0x7380>
    bf6c:	ldr	r2, [pc, #60]	; bfb0 <main@@Base+0x7384>
    bf70:	add	r3, pc, r3
    bf74:	ldr	r3, [r3, r2]
    bf78:	sub	sp, sp, #12
    bf7c:	ldr	r2, [r3]
    bf80:	str	r2, [sp, #4]
    bf84:	ldr	r2, [sp, #4]
    bf88:	ldr	r3, [r3]
    bf8c:	cmp	r2, r3
    bf90:	bne	bfa8 <main@@Base+0x737c>
    bf94:	mov	r1, #0
    bf98:	mov	r0, r1
    bf9c:	add	sp, sp, #12
    bfa0:	pop	{lr}		; (ldr lr, [sp], #4)
    bfa4:	b	7c84 <main@@Base+0x3058>
    bfa8:	bl	3f00 <__stack_chk_fail@plt>
    bfac:	andeq	r5, r2, ip, lsl #25
    bfb0:	andeq	r0, r0, r8, ror #7
    bfb4:	push	{lr}		; (str lr, [sp, #-4]!)
    bfb8:	ldr	r3, [pc, #60]	; bffc <main@@Base+0x73d0>
    bfbc:	ldr	r2, [pc, #60]	; c000 <main@@Base+0x73d4>
    bfc0:	add	r3, pc, r3
    bfc4:	ldr	r3, [r3, r2]
    bfc8:	sub	sp, sp, #12
    bfcc:	ldr	r2, [r3]
    bfd0:	str	r2, [sp, #4]
    bfd4:	ldr	r2, [sp, #4]
    bfd8:	ldr	r3, [r3]
    bfdc:	cmp	r2, r3
    bfe0:	bne	bff8 <main@@Base+0x73cc>
    bfe4:	mov	r1, #2
    bfe8:	mov	r0, #0
    bfec:	add	sp, sp, #12
    bff0:	pop	{lr}		; (ldr lr, [sp], #4)
    bff4:	b	7c84 <main@@Base+0x3058>
    bff8:	bl	3f00 <__stack_chk_fail@plt>
    bffc:	andeq	r5, r2, ip, lsr ip
    c000:	andeq	r0, r0, r8, ror #7
    c004:	push	{lr}		; (str lr, [sp, #-4]!)
    c008:	ldr	r3, [pc, #60]	; c04c <main@@Base+0x7420>
    c00c:	ldr	r2, [pc, #60]	; c050 <main@@Base+0x7424>
    c010:	add	r3, pc, r3
    c014:	ldr	r3, [r3, r2]
    c018:	sub	sp, sp, #12
    c01c:	ldr	r2, [r3]
    c020:	str	r2, [sp, #4]
    c024:	ldr	r2, [sp, #4]
    c028:	ldr	r3, [r3]
    c02c:	cmp	r2, r3
    c030:	bne	c048 <main@@Base+0x741c>
    c034:	mov	r1, #1
    c038:	mov	r0, #0
    c03c:	add	sp, sp, #12
    c040:	pop	{lr}		; (ldr lr, [sp], #4)
    c044:	b	7c84 <main@@Base+0x3058>
    c048:	bl	3f00 <__stack_chk_fail@plt>
    c04c:	andeq	r5, r2, ip, ror #23
    c050:	andeq	r0, r0, r8, ror #7
    c054:	push	{lr}		; (str lr, [sp, #-4]!)
    c058:	ldr	r3, [pc, #60]	; c09c <main@@Base+0x7470>
    c05c:	ldr	r2, [pc, #60]	; c0a0 <main@@Base+0x7474>
    c060:	add	r3, pc, r3
    c064:	ldr	r3, [r3, r2]
    c068:	sub	sp, sp, #12
    c06c:	ldr	r2, [r3]
    c070:	str	r2, [sp, #4]
    c074:	ldr	r2, [sp, #4]
    c078:	ldr	r3, [r3]
    c07c:	cmp	r2, r3
    c080:	bne	c098 <main@@Base+0x746c>
    c084:	mov	r1, #0
    c088:	mov	r0, #1
    c08c:	add	sp, sp, #12
    c090:	pop	{lr}		; (ldr lr, [sp], #4)
    c094:	b	7c84 <main@@Base+0x3058>
    c098:	bl	3f00 <__stack_chk_fail@plt>
    c09c:	muleq	r2, ip, fp
    c0a0:	andeq	r0, r0, r8, ror #7
    c0a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c0a8:	ldr	r3, [pc, #904]	; c438 <main@@Base+0x780c>
    c0ac:	ldr	r2, [pc, #904]	; c43c <main@@Base+0x7810>
    c0b0:	add	r3, pc, r3
    c0b4:	ldr	r2, [r3, r2]
    c0b8:	sub	sp, sp, #28
    c0bc:	ldr	r3, [r2]
    c0c0:	add	r0, sp, #16
    c0c4:	str	r2, [sp, #12]
    c0c8:	str	r3, [sp, #20]
    c0cc:	bl	9590 <main@@Base+0x4964>
    c0d0:	mov	r8, r0
    c0d4:	ldr	r1, [pc, #868]	; c440 <main@@Base+0x7814>
    c0d8:	mov	r0, #1
    c0dc:	add	r1, pc, r1
    c0e0:	bl	474c <__printf_chk@plt>
    c0e4:	cmp	r8, #0
    c0e8:	beq	c42c <main@@Base+0x7800>
    c0ec:	ldr	r3, [pc, #848]	; c444 <main@@Base+0x7818>
    c0f0:	ldr	r9, [pc, #848]	; c448 <main@@Base+0x781c>
    c0f4:	add	r3, pc, r3
    c0f8:	str	r3, [sp, #8]
    c0fc:	ldr	r3, [pc, #840]	; c44c <main@@Base+0x7820>
    c100:	ldr	fp, [pc, #840]	; c450 <main@@Base+0x7824>
    c104:	add	r3, pc, r3
    c108:	mov	r6, #0
    c10c:	ldr	r7, [sp, #16]
    c110:	add	r9, pc, r9
    c114:	add	fp, pc, fp
    c118:	str	r3, [sp, #4]
    c11c:	b	c12c <main@@Base+0x7500>
    c120:	add	r6, r6, #1
    c124:	cmp	r8, r6
    c128:	beq	c3bc <main@@Base+0x7790>
    c12c:	ldr	r4, [r7, r6, lsl #2]
    c130:	mov	r1, r9
    c134:	ldr	r0, [r4, #8]
    c138:	bl	3e10 <strstr@plt>
    c13c:	subs	r5, r0, #0
    c140:	bne	c120 <main@@Base+0x74f4>
    c144:	ldr	r1, [sp, #8]
    c148:	mov	r0, #1
    c14c:	bl	474c <__printf_chk@plt>
    c150:	ldr	r0, [r4]
    c154:	bl	4314 <avcodec_find_decoder@plt>
    c158:	cmp	r0, #0
    c15c:	beq	c408 <main@@Base+0x77dc>
    c160:	ldr	r1, [pc, #748]	; c454 <main@@Base+0x7828>
    c164:	add	r1, pc, r1
    c168:	mov	r0, #1
    c16c:	bl	474c <__printf_chk@plt>
    c170:	ldr	r0, [r4]
    c174:	bl	3f24 <avcodec_find_encoder@plt>
    c178:	cmp	r0, #0
    c17c:	beq	c420 <main@@Base+0x77f4>
    c180:	ldr	r1, [pc, #720]	; c458 <main@@Base+0x782c>
    c184:	add	r1, pc, r1
    c188:	mov	r0, #1
    c18c:	bl	474c <__printf_chk@plt>
    c190:	ldr	r3, [r4, #4]
    c194:	cmp	r3, #4
    c198:	movhi	r2, #63	; 0x3f
    c19c:	ldrls	r2, [pc, #696]	; c45c <main@@Base+0x7830>
    c1a0:	addls	r2, pc, r2
    c1a4:	ldrbls	r2, [r2, r3]
    c1a8:	ldr	r1, [pc, #688]	; c460 <main@@Base+0x7834>
    c1ac:	mov	r0, #1
    c1b0:	add	r1, pc, r1
    c1b4:	bl	474c <__printf_chk@plt>
    c1b8:	ldr	r3, [r4, #16]
    c1bc:	tst	r3, #1
    c1c0:	bne	c3e4 <main@@Base+0x77b8>
    c1c4:	ldr	r1, [pc, #664]	; c464 <main@@Base+0x7838>
    c1c8:	add	r1, pc, r1
    c1cc:	mov	r0, #1
    c1d0:	bl	474c <__printf_chk@plt>
    c1d4:	ldr	r3, [r4, #16]
    c1d8:	tst	r3, #2
    c1dc:	bne	c3fc <main@@Base+0x77d0>
    c1e0:	ldr	r1, [pc, #640]	; c468 <main@@Base+0x783c>
    c1e4:	add	r1, pc, r1
    c1e8:	mov	r0, #1
    c1ec:	bl	474c <__printf_chk@plt>
    c1f0:	ldr	r3, [r4, #16]
    c1f4:	tst	r3, #4
    c1f8:	bne	c3f0 <main@@Base+0x77c4>
    c1fc:	ldr	r1, [pc, #616]	; c46c <main@@Base+0x7840>
    c200:	add	r1, pc, r1
    c204:	mov	r0, #1
    c208:	bl	474c <__printf_chk@plt>
    c20c:	ldrd	r2, [r4, #8]
    c210:	cmp	r3, #0
    c214:	beq	c414 <main@@Base+0x77e8>
    c218:	ldr	r1, [pc, #592]	; c470 <main@@Base+0x7844>
    c21c:	mov	r0, #1
    c220:	add	r1, pc, r1
    c224:	bl	474c <__printf_chk@plt>
    c228:	mov	sl, #0
    c22c:	ldr	r7, [r4]
    c230:	mov	r0, sl
    c234:	bl	42e4 <av_codec_next@plt>
    c238:	subs	sl, r0, #0
    c23c:	beq	c2e4 <main@@Base+0x76b8>
    c240:	ldr	r3, [sl, #12]
    c244:	cmp	r7, r3
    c248:	bne	c230 <main@@Base+0x7604>
    c24c:	bl	45d8 <av_codec_is_decoder@plt>
    c250:	cmp	r0, #0
    c254:	beq	c230 <main@@Base+0x7604>
    c258:	ldr	r1, [r4, #8]
    c25c:	ldr	r0, [sl]
    c260:	bl	46c8 <strcmp@plt>
    c264:	cmp	r0, #0
    c268:	beq	c22c <main@@Base+0x7600>
    c26c:	ldr	r2, [pc, #512]	; c474 <main@@Base+0x7848>
    c270:	ldr	r1, [pc, #512]	; c478 <main@@Base+0x784c>
    c274:	add	r2, pc, r2
    c278:	add	r1, pc, r1
    c27c:	mov	r0, #1
    c280:	ldr	r7, [r4]
    c284:	mov	sl, #0
    c288:	bl	474c <__printf_chk@plt>
    c28c:	mov	r0, sl
    c290:	bl	42e4 <av_codec_next@plt>
    c294:	subs	sl, r0, #0
    c298:	beq	c2d4 <main@@Base+0x76a8>
    c29c:	ldr	r3, [sl, #12]
    c2a0:	cmp	r7, r3
    c2a4:	bne	c28c <main@@Base+0x7660>
    c2a8:	bl	45d8 <av_codec_is_decoder@plt>
    c2ac:	cmp	r0, #0
    c2b0:	beq	c28c <main@@Base+0x7660>
    c2b4:	ldr	r2, [sl]
    c2b8:	ldr	r1, [sp, #4]
    c2bc:	mov	r0, #1
    c2c0:	bl	474c <__printf_chk@plt>
    c2c4:	mov	r0, sl
    c2c8:	bl	42e4 <av_codec_next@plt>
    c2cc:	subs	sl, r0, #0
    c2d0:	bne	c29c <main@@Base+0x7670>
    c2d4:	ldr	r1, [pc, #416]	; c47c <main@@Base+0x7850>
    c2d8:	mov	r0, #1
    c2dc:	add	r1, pc, r1
    c2e0:	bl	474c <__printf_chk@plt>
    c2e4:	mov	sl, #0
    c2e8:	ldr	r7, [r4]
    c2ec:	mov	r0, sl
    c2f0:	bl	42e4 <av_codec_next@plt>
    c2f4:	subs	sl, r0, #0
    c2f8:	beq	c39c <main@@Base+0x7770>
    c2fc:	ldr	r3, [sl, #12]
    c300:	cmp	r7, r3
    c304:	bne	c2ec <main@@Base+0x76c0>
    c308:	bl	42a8 <av_codec_is_encoder@plt>
    c30c:	cmp	r0, #0
    c310:	beq	c2ec <main@@Base+0x76c0>
    c314:	ldr	r1, [r4, #8]
    c318:	ldr	r0, [sl]
    c31c:	bl	46c8 <strcmp@plt>
    c320:	cmp	r0, #0
    c324:	beq	c2e8 <main@@Base+0x76bc>
    c328:	ldr	r2, [pc, #336]	; c480 <main@@Base+0x7854>
    c32c:	ldr	r1, [pc, #336]	; c484 <main@@Base+0x7858>
    c330:	add	r2, pc, r2
    c334:	add	r1, pc, r1
    c338:	mov	r0, #1
    c33c:	ldr	r4, [r4]
    c340:	bl	474c <__printf_chk@plt>
    c344:	mov	r0, r5
    c348:	bl	42e4 <av_codec_next@plt>
    c34c:	subs	r5, r0, #0
    c350:	beq	c38c <main@@Base+0x7760>
    c354:	ldr	r3, [r5, #12]
    c358:	cmp	r4, r3
    c35c:	bne	c344 <main@@Base+0x7718>
    c360:	bl	42a8 <av_codec_is_encoder@plt>
    c364:	cmp	r0, #0
    c368:	beq	c344 <main@@Base+0x7718>
    c36c:	ldr	r2, [r5]
    c370:	mov	r1, fp
    c374:	mov	r0, #1
    c378:	bl	474c <__printf_chk@plt>
    c37c:	mov	r0, r5
    c380:	bl	42e4 <av_codec_next@plt>
    c384:	subs	r5, r0, #0
    c388:	bne	c354 <main@@Base+0x7728>
    c38c:	ldr	r1, [pc, #244]	; c488 <main@@Base+0x785c>
    c390:	mov	r0, #1
    c394:	add	r1, pc, r1
    c398:	bl	474c <__printf_chk@plt>
    c39c:	ldr	r1, [pc, #232]	; c48c <main@@Base+0x7860>
    c3a0:	mov	r0, #1
    c3a4:	add	r1, pc, r1
    c3a8:	add	r6, r6, #1
    c3ac:	bl	474c <__printf_chk@plt>
    c3b0:	cmp	r8, r6
    c3b4:	ldr	r7, [sp, #16]
    c3b8:	bne	c12c <main@@Base+0x7500>
    c3bc:	mov	r0, r7
    c3c0:	bl	46ec <av_free@plt>
    c3c4:	ldr	r3, [sp, #12]
    c3c8:	ldr	r2, [sp, #20]
    c3cc:	ldr	r3, [r3]
    c3d0:	mov	r0, #0
    c3d4:	cmp	r2, r3
    c3d8:	bne	c434 <main@@Base+0x7808>
    c3dc:	add	sp, sp, #28
    c3e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c3e4:	ldr	r1, [pc, #164]	; c490 <main@@Base+0x7864>
    c3e8:	add	r1, pc, r1
    c3ec:	b	c1cc <main@@Base+0x75a0>
    c3f0:	ldr	r1, [pc, #156]	; c494 <main@@Base+0x7868>
    c3f4:	add	r1, pc, r1
    c3f8:	b	c204 <main@@Base+0x75d8>
    c3fc:	ldr	r1, [pc, #148]	; c498 <main@@Base+0x786c>
    c400:	add	r1, pc, r1
    c404:	b	c1e8 <main@@Base+0x75bc>
    c408:	ldr	r1, [pc, #140]	; c49c <main@@Base+0x7870>
    c40c:	add	r1, pc, r1
    c410:	b	c168 <main@@Base+0x753c>
    c414:	ldr	r3, [pc, #132]	; c4a0 <main@@Base+0x7874>
    c418:	add	r3, pc, r3
    c41c:	b	c218 <main@@Base+0x75ec>
    c420:	ldr	r1, [pc, #124]	; c4a4 <main@@Base+0x7878>
    c424:	add	r1, pc, r1
    c428:	b	c188 <main@@Base+0x755c>
    c42c:	ldr	r7, [sp, #16]
    c430:	b	c3bc <main@@Base+0x7790>
    c434:	bl	3f00 <__stack_chk_fail@plt>
    c438:	andeq	r5, r2, ip, asr #22
    c43c:	andeq	r0, r0, r8, ror #7
    c440:	andeq	r1, r1, r4, ror r3
    c444:	andeq	r0, r1, r0, lsl r7
    c448:	andeq	r1, r1, r0, lsr r4
    c44c:			; <UNDEFINED> instruction: 0x000107b4
    c450:	andeq	r0, r1, r4, lsr #15
    c454:	andeq	pc, r0, r4, ror #23
    c458:	andeq	pc, r0, r8, asr #23
    c45c:	andeq	pc, r0, r0, asr sl	; <UNPREDICTABLE>
    c460:			; <UNDEFINED> instruction: 0x000121b0
    c464:	muleq	r1, r8, r3
    c468:	andeq	r0, r1, ip, ror r3
    c46c:	andeq	r0, r1, r0, ror #6
    c470:	andeq	r0, r1, ip, asr #8
    c474:	strdeq	r0, [r1], -r4
    c478:	ldrdeq	r1, [r1], -r4
    c47c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    c480:	andeq	r0, r1, ip, lsr #12
    c484:	andeq	r1, r1, r8, lsl r2
    c488:	andeq	r0, r1, r8, lsl r9
    c48c:	andeq	r0, r1, ip, ror #15
    c490:	andeq	r1, r1, r0, rrx
    c494:	andeq	r2, r1, ip, ror r5
    c498:	andeq	r1, r1, ip, asr #32
    c49c:	andeq	r0, r1, r4, asr r1
    c4a0:	muleq	r1, r0, r4
    c4a4:	andeq	r0, r1, ip, lsr r1
    c4a8:	push	{r4, lr}
    c4ac:	ldr	r3, [pc, #60]	; c4f0 <main@@Base+0x78c4>
    c4b0:	ldr	r2, [pc, #60]	; c4f4 <main@@Base+0x78c8>
    c4b4:	add	r3, pc, r3
    c4b8:	ldr	r4, [r3, r2]
    c4bc:	sub	sp, sp, #8
    c4c0:	ldr	r3, [r4]
    c4c4:	mov	r0, #0
    c4c8:	str	r3, [sp, #4]
    c4cc:	bl	96b8 <main@@Base+0x4a8c>
    c4d0:	ldr	r2, [sp, #4]
    c4d4:	ldr	r3, [r4]
    c4d8:	cmp	r2, r3
    c4dc:	bne	c4ec <main@@Base+0x78c0>
    c4e0:	mov	r0, #0
    c4e4:	add	sp, sp, #8
    c4e8:	pop	{r4, pc}
    c4ec:	bl	3f00 <__stack_chk_fail@plt>
    c4f0:	andeq	r5, r2, r8, asr #14
    c4f4:	andeq	r0, r0, r8, ror #7
    c4f8:	push	{r4, lr}
    c4fc:	ldr	r3, [pc, #60]	; c540 <main@@Base+0x7914>
    c500:	ldr	r2, [pc, #60]	; c544 <main@@Base+0x7918>
    c504:	add	r3, pc, r3
    c508:	ldr	r4, [r3, r2]
    c50c:	sub	sp, sp, #8
    c510:	ldr	r3, [r4]
    c514:	mov	r0, #1
    c518:	str	r3, [sp, #4]
    c51c:	bl	96b8 <main@@Base+0x4a8c>
    c520:	ldr	r2, [sp, #4]
    c524:	ldr	r3, [r4]
    c528:	cmp	r2, r3
    c52c:	bne	c53c <main@@Base+0x7910>
    c530:	mov	r0, #0
    c534:	add	sp, sp, #8
    c538:	pop	{r4, pc}
    c53c:	bl	3f00 <__stack_chk_fail@plt>
    c540:	strdeq	r5, [r2], -r8
    c544:	andeq	r0, r0, r8, ror #7
    c548:	mov	ip, #0
    c54c:	push	{r4, r5, r6, r7, lr}
    c550:	ldr	r3, [pc, #136]	; c5e0 <main@@Base+0x79b4>
    c554:	ldr	r2, [pc, #136]	; c5e4 <main@@Base+0x79b8>
    c558:	add	r3, pc, r3
    c55c:	ldr	r7, [r3, r2]
    c560:	ldr	r1, [pc, #128]	; c5e8 <main@@Base+0x79bc>
    c564:	ldr	r6, [pc, #128]	; c5ec <main@@Base+0x79c0>
    c568:	ldr	r3, [r7]
    c56c:	sub	sp, sp, #12
    c570:	add	r1, pc, r1
    c574:	mov	r0, #1
    c578:	str	ip, [sp]
    c57c:	str	r3, [sp, #4]
    c580:	mov	r5, sp
    c584:	bl	474c <__printf_chk@plt>
    c588:	add	r6, pc, r6
    c58c:	b	c5a0 <main@@Base+0x7974>
    c590:	ldr	r2, [r4]
    c594:	mov	r1, r6
    c598:	mov	r0, #1
    c59c:	bl	474c <__printf_chk@plt>
    c5a0:	mov	r0, r5
    c5a4:	bl	4164 <av_bsf_iterate@plt>
    c5a8:	subs	r4, r0, #0
    c5ac:	bne	c590 <main@@Base+0x7964>
    c5b0:	ldr	r1, [pc, #56]	; c5f0 <main@@Base+0x79c4>
    c5b4:	mov	r0, #1
    c5b8:	add	r1, pc, r1
    c5bc:	bl	474c <__printf_chk@plt>
    c5c0:	ldr	r2, [sp, #4]
    c5c4:	ldr	r3, [r7]
    c5c8:	mov	r0, r4
    c5cc:	cmp	r2, r3
    c5d0:	bne	c5dc <main@@Base+0x79b0>
    c5d4:	add	sp, sp, #12
    c5d8:	pop	{r4, r5, r6, r7, pc}
    c5dc:	bl	3f00 <__stack_chk_fail@plt>
    c5e0:	andeq	r5, r2, r4, lsr #13
    c5e4:	andeq	r0, r0, r8, ror #7
    c5e8:	andeq	r0, r1, r4, ror #31
    c5ec:	ldrdeq	r0, [r1], -ip
    c5f0:	ldrdeq	r0, [r1], -r8
    c5f4:	mov	ip, #0
    c5f8:	push	{r4, r5, r6, lr}
    c5fc:	ldr	r3, [pc, #176]	; c6b4 <main@@Base+0x7a88>
    c600:	ldr	r2, [pc, #176]	; c6b8 <main@@Base+0x7a8c>
    c604:	add	r3, pc, r3
    c608:	ldr	r6, [r3, r2]
    c60c:	ldr	r1, [pc, #168]	; c6bc <main@@Base+0x7a90>
    c610:	ldr	r5, [pc, #168]	; c6c0 <main@@Base+0x7a94>
    c614:	ldr	r3, [r6]
    c618:	sub	sp, sp, #8
    c61c:	add	r1, pc, r1
    c620:	mov	r0, #1
    c624:	str	ip, [sp]
    c628:	str	r3, [sp, #4]
    c62c:	mov	r4, sp
    c630:	bl	474c <__printf_chk@plt>
    c634:	add	r5, pc, r5
    c638:	b	c648 <main@@Base+0x7a1c>
    c63c:	mov	r1, r5
    c640:	mov	r0, #1
    c644:	bl	474c <__printf_chk@plt>
    c648:	mov	r1, #0
    c64c:	mov	r0, r4
    c650:	bl	40d4 <avio_enum_protocols@plt>
    c654:	subs	r2, r0, #0
    c658:	bne	c63c <main@@Base+0x7a10>
    c65c:	ldr	r1, [pc, #96]	; c6c4 <main@@Base+0x7a98>
    c660:	ldr	r5, [pc, #96]	; c6c8 <main@@Base+0x7a9c>
    c664:	add	r1, pc, r1
    c668:	mov	r0, #1
    c66c:	bl	474c <__printf_chk@plt>
    c670:	add	r5, pc, r5
    c674:	b	c684 <main@@Base+0x7a58>
    c678:	mov	r1, r5
    c67c:	mov	r0, #1
    c680:	bl	474c <__printf_chk@plt>
    c684:	mov	r1, #1
    c688:	mov	r0, r4
    c68c:	bl	40d4 <avio_enum_protocols@plt>
    c690:	subs	r2, r0, #0
    c694:	bne	c678 <main@@Base+0x7a4c>
    c698:	ldr	r2, [sp, #4]
    c69c:	ldr	r3, [r6]
    c6a0:	cmp	r2, r3
    c6a4:	bne	c6b0 <main@@Base+0x7a84>
    c6a8:	add	sp, sp, #8
    c6ac:	pop	{r4, r5, r6, pc}
    c6b0:	bl	3f00 <__stack_chk_fail@plt>
    c6b4:	strdeq	r5, [r2], -r8
    c6b8:	andeq	r0, r0, r8, ror #7
    c6bc:	andeq	r0, r1, ip, asr #30
    c6c0:	andeq	r0, r1, r8, asr pc
    c6c4:	andeq	r0, r1, r0, lsr pc
    c6c8:	andeq	r0, r1, ip, lsl pc
    c6cc:	mov	ip, #0
    c6d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c6d4:	ldr	r3, [pc, #440]	; c894 <main@@Base+0x7c68>
    c6d8:	ldr	r2, [pc, #440]	; c898 <main@@Base+0x7c6c>
    c6dc:	add	r3, pc, r3
    c6e0:	ldr	r2, [r3, r2]
    c6e4:	ldr	r1, [pc, #432]	; c89c <main@@Base+0x7c70>
    c6e8:	ldr	r3, [r2]
    c6ec:	sub	sp, sp, #100	; 0x64
    c6f0:	add	r1, pc, r1
    c6f4:	str	r3, [sp, #92]	; 0x5c
    c6f8:	mov	r0, #1
    c6fc:	add	r3, sp, #24
    c700:	str	r2, [sp, #20]
    c704:	str	ip, [sp, #24]
    c708:	str	r3, [sp, #16]
    c70c:	bl	474c <__printf_chk@plt>
    c710:	ldr	r0, [sp, #16]
    c714:	bl	4434 <av_filter_iterate@plt>
    c718:	ldr	r7, [pc, #384]	; c8a0 <main@@Base+0x7c74>
    c71c:	subs	r8, r0, #0
    c720:	add	r7, pc, r7
    c724:	beq	c82c <main@@Base+0x7c00>
    c728:	ldr	r5, [r8, #8]
    c72c:	add	sl, sp, #28
    c730:	cmp	r5, #0
    c734:	mov	r2, sl
    c738:	mov	r9, #0
    c73c:	add	r6, sp, #88	; 0x58
    c740:	beq	c878 <main@@Base+0x7c4c>
    c744:	mov	r4, sl
    c748:	mov	fp, #0
    c74c:	b	c770 <main@@Base+0x7b44>
    c750:	mov	r1, fp
    c754:	mov	r0, r5
    c758:	bl	3fc0 <avfilter_pad_get_type@plt>
    c75c:	cmp	r0, #4
    c760:	movhi	r2, #63	; 0x3f
    c764:	ldrbls	r2, [r7, r0]
    c768:	add	fp, fp, #1
    c76c:	strb	r2, [r4], #1
    c770:	mov	r1, fp
    c774:	mov	r0, r5
    c778:	bl	3edc <avfilter_pad_get_name@plt>
    c77c:	cmp	r0, #0
    c780:	cmpne	r4, r6
    c784:	mov	r2, r4
    c788:	bcc	c750 <main@@Base+0x7b24>
    c78c:	cmp	fp, #0
    c790:	bne	c7b8 <main@@Base+0x7b8c>
    c794:	cmp	r9, #0
    c798:	ldr	r3, [r8, #20]
    c79c:	beq	c87c <main@@Base+0x7c50>
    c7a0:	tst	r3, #2
    c7a4:	moveq	r1, #124	; 0x7c
    c7a8:	movne	r1, #78	; 0x4e
    c7ac:	mov	r3, r2
    c7b0:	add	r2, r2, #1
    c7b4:	strb	r1, [r3]
    c7b8:	cmp	r9, #1
    c7bc:	bne	c848 <main@@Base+0x7c1c>
    c7c0:	mov	r3, #0
    c7c4:	strb	r3, [r2]
    c7c8:	ldr	r3, [r8, #20]
    c7cc:	ldr	r1, [r8, #56]	; 0x38
    c7d0:	tst	r3, #196608	; 0x30000
    c7d4:	movne	r2, #84	; 0x54
    c7d8:	moveq	r2, #46	; 0x2e
    c7dc:	tst	r3, #4
    c7e0:	movne	r3, #83	; 0x53
    c7e4:	moveq	r3, #46	; 0x2e
    c7e8:	cmp	r1, #0
    c7ec:	movne	ip, #67	; 0x43
    c7f0:	moveq	ip, #46	; 0x2e
    c7f4:	ldr	r1, [r8, #4]
    c7f8:	str	sl, [sp, #8]
    c7fc:	str	r1, [sp, #12]
    c800:	ldr	r1, [r8]
    c804:	mov	r0, r9
    c808:	str	r1, [sp, #4]
    c80c:	ldr	r1, [pc, #144]	; c8a4 <main@@Base+0x7c78>
    c810:	str	ip, [sp]
    c814:	add	r1, pc, r1
    c818:	bl	474c <__printf_chk@plt>
    c81c:	ldr	r0, [sp, #16]
    c820:	bl	4434 <av_filter_iterate@plt>
    c824:	subs	r8, r0, #0
    c828:	bne	c728 <main@@Base+0x7afc>
    c82c:	ldr	r3, [sp, #20]
    c830:	ldr	r2, [sp, #92]	; 0x5c
    c834:	ldr	r3, [r3]
    c838:	cmp	r2, r3
    c83c:	bne	c890 <main@@Base+0x7c64>
    c840:	add	sp, sp, #100	; 0x64
    c844:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c848:	mov	r1, #45	; 0x2d
    c84c:	mov	r4, r2
    c850:	mov	r3, #62	; 0x3e
    c854:	strb	r1, [r4], #2
    c858:	strb	r3, [r2, #1]
    c85c:	ldr	r5, [r8, #12]
    c860:	mov	r9, #1
    c864:	cmp	r5, #0
    c868:	bne	c748 <main@@Base+0x7b1c>
    c86c:	mov	r2, r4
    c870:	ldr	r3, [r8, #20]
    c874:	b	c7a0 <main@@Base+0x7b74>
    c878:	ldr	r3, [r8, #20]
    c87c:	tst	r3, #1
    c880:	moveq	r1, #124	; 0x7c
    c884:	movne	r1, #78	; 0x4e
    c888:	mov	r3, r2
    c88c:	b	c7b0 <main@@Base+0x7b84>
    c890:	bl	3f00 <__stack_chk_fail@plt>
    c894:	andeq	r5, r2, r0, lsr #10
    c898:	andeq	r0, r0, r8, ror #7
    c89c:			; <UNDEFINED> instruction: 0x00010eb0
    c8a0:	ldrdeq	pc, [r0], -r0
    c8a4:	andeq	r0, r1, r0, ror #28
    c8a8:	push	{r4, r5, r6, r7, lr}
    c8ac:	ldr	r3, [pc, #152]	; c94c <main@@Base+0x7d20>
    c8b0:	ldr	r1, [pc, #152]	; c950 <main@@Base+0x7d24>
    c8b4:	add	r3, pc, r3
    c8b8:	ldr	r7, [r3, r1]
    c8bc:	ldr	r2, [pc, #144]	; c954 <main@@Base+0x7d28>
    c8c0:	ldr	r1, [pc, #144]	; c958 <main@@Base+0x7d2c>
    c8c4:	ldr	ip, [r7]
    c8c8:	ldr	r6, [pc, #140]	; c95c <main@@Base+0x7d30>
    c8cc:	sub	sp, sp, #20
    c8d0:	add	r2, pc, r2
    c8d4:	add	r1, pc, r1
    c8d8:	mov	r0, #1
    c8dc:	str	ip, [sp, #12]
    c8e0:	mov	r4, #0
    c8e4:	bl	474c <__printf_chk@plt>
    c8e8:	add	r5, sp, #8
    c8ec:	add	r6, pc, r6
    c8f0:	b	c91c <main@@Base+0x7cf0>
    c8f4:	ldr	r1, [sp, #8]
    c8f8:	add	r4, r4, #1
    c8fc:	ldrb	r0, [r1, #2]
    c900:	ldrb	r3, [r1]
    c904:	str	r0, [sp, #4]
    c908:	ldrb	r1, [r1, #1]
    c90c:	mov	r0, #1
    c910:	str	r1, [sp]
    c914:	mov	r1, r6
    c918:	bl	474c <__printf_chk@plt>
    c91c:	mov	r1, r5
    c920:	mov	r0, r4
    c924:	bl	441c <av_get_known_color_name@plt>
    c928:	subs	r2, r0, #0
    c92c:	bne	c8f4 <main@@Base+0x7cc8>
    c930:	ldr	r2, [sp, #12]
    c934:	ldr	r3, [r7]
    c938:	cmp	r2, r3
    c93c:	bne	c948 <main@@Base+0x7d1c>
    c940:	add	sp, sp, #20
    c944:	pop	{r4, r5, r6, r7, pc}
    c948:	bl	3f00 <__stack_chk_fail@plt>
    c94c:	andeq	r5, r2, r8, asr #6
    c950:	andeq	r0, r0, r8, ror #7
    c954:	andeq	r2, r1, ip, asr #28
    c958:			; <UNDEFINED> instruction: 0x00010db8
    c95c:			; <UNDEFINED> instruction: 0x00010db0
    c960:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c964:	mov	r4, #0
    c968:	ldr	r3, [pc, #296]	; ca98 <main@@Base+0x7e6c>
    c96c:	ldr	r2, [pc, #296]	; ca9c <main@@Base+0x7e70>
    c970:	add	r3, pc, r3
    c974:	ldr	r2, [r3, r2]
    c978:	ldr	r1, [pc, #288]	; caa0 <main@@Base+0x7e74>
    c97c:	ldr	r3, [r2]
    c980:	sub	sp, sp, #76	; 0x4c
    c984:	add	r1, pc, r1
    c988:	mov	r0, #1
    c98c:	str	r3, [sp, #68]	; 0x44
    c990:	str	r2, [sp, #60]	; 0x3c
    c994:	bl	474c <__printf_chk@plt>
    c998:	ldr	r3, [pc, #260]	; caa4 <main@@Base+0x7e78>
    c99c:	mov	r5, r4
    c9a0:	add	r3, pc, r3
    c9a4:	str	r3, [sp, #56]	; 0x38
    c9a8:	b	ca68 <main@@Base+0x7e3c>
    c9ac:	bl	4818 <av_pix_fmt_desc_get_id@plt>
    c9b0:	mov	r6, r0
    c9b4:	bl	3e64 <sws_isSupportedInput@plt>
    c9b8:	cmp	r0, #0
    c9bc:	mov	r0, r6
    c9c0:	movne	r8, #73	; 0x49
    c9c4:	moveq	r8, #46	; 0x2e
    c9c8:	bl	4170 <sws_isSupportedOutput@plt>
    c9cc:	ldr	r3, [r4, #8]
    c9d0:	cmp	r0, #0
    c9d4:	and	r2, r3, #8
    c9d8:	str	r2, [sp, #24]
    c9dc:	str	r5, [sp, #28]
    c9e0:	and	r2, r3, #2
    c9e4:	and	r3, r3, #4
    c9e8:	str	r2, [sp, #32]
    c9ec:	str	r3, [sp, #40]	; 0x28
    c9f0:	movne	r9, #79	; 0x4f
    c9f4:	ldrd	r2, [sp, #24]
    c9f8:	moveq	r9, #46	; 0x2e
    c9fc:	orrs	r3, r2, r3
    ca00:	movne	r2, #72	; 0x48
    ca04:	moveq	r2, #46	; 0x2e
    ca08:	str	r5, [sp, #36]	; 0x24
    ca0c:	str	r5, [sp, #44]	; 0x2c
    ca10:	str	r2, [sp, #52]	; 0x34
    ca14:	ldrd	r2, [sp, #32]
    ca18:	orrs	r3, r2, r3
    ca1c:	movne	sl, #80	; 0x50
    ca20:	ldrd	r2, [sp, #40]	; 0x28
    ca24:	moveq	sl, #46	; 0x2e
    ca28:	mov	r0, r4
    ca2c:	orrs	r3, r2, r3
    ca30:	movne	fp, #66	; 0x42
    ca34:	moveq	fp, #46	; 0x2e
    ca38:	ldr	r6, [r4]
    ca3c:	ldrb	r7, [r4, #4]
    ca40:	bl	3e58 <av_get_bits_per_pixel@plt>
    ca44:	ldr	r2, [sp, #52]	; 0x34
    ca48:	str	r0, [sp, #20]
    ca4c:	stm	sp, {r2, sl, fp}
    ca50:	mov	r3, r9
    ca54:	mov	r2, r8
    ca58:	strd	r6, [sp, #12]
    ca5c:	ldr	r1, [sp, #56]	; 0x38
    ca60:	mov	r0, #1
    ca64:	bl	474c <__printf_chk@plt>
    ca68:	mov	r0, r4
    ca6c:	bl	47a0 <av_pix_fmt_desc_next@plt>
    ca70:	subs	r4, r0, #0
    ca74:	bne	c9ac <main@@Base+0x7d80>
    ca78:	ldr	r3, [sp, #60]	; 0x3c
    ca7c:	ldr	r2, [sp, #68]	; 0x44
    ca80:	ldr	r3, [r3]
    ca84:	cmp	r2, r3
    ca88:	bne	ca94 <main@@Base+0x7e68>
    ca8c:	add	sp, sp, #76	; 0x4c
    ca90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ca94:	bl	3f00 <__stack_chk_fail@plt>
    ca98:	andeq	r5, r2, ip, lsl #5
    ca9c:	andeq	r0, r0, r8, ror #7
    caa0:	andeq	r0, r1, r0, lsr sp
    caa4:	andeq	r0, r1, r0, lsl lr
    caa8:	mov	r0, #1
    caac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cab0:	ldr	r3, [pc, #468]	; cc8c <main@@Base+0x8060>
    cab4:	ldr	r2, [pc, #468]	; cc90 <main@@Base+0x8064>
    cab8:	add	r3, pc, r3
    cabc:	ldr	r2, [r3, r2]
    cac0:	ldr	r1, [pc, #460]	; cc94 <main@@Base+0x8068>
    cac4:	ldr	r3, [r2]
    cac8:	sub	sp, sp, #68	; 0x44
    cacc:	add	r1, pc, r1
    cad0:	str	r2, [sp, #36]	; 0x24
    cad4:	str	r3, [sp, #60]	; 0x3c
    cad8:	mov	r5, r0
    cadc:	mov	r4, #0
    cae0:	bl	474c <__printf_chk@plt>
    cae4:	ldr	r6, [pc, #428]	; cc98 <main@@Base+0x806c>
    cae8:	add	r6, pc, r6
    caec:	sub	r7, r4, #32
    caf0:	rsb	r3, r4, #32
    caf4:	lsl	r7, r5, r7
    caf8:	orr	r7, r7, r5, lsr r3
    cafc:	lsl	sl, r5, r4
    cb00:	mov	r1, r7
    cb04:	mov	r0, sl
    cb08:	bl	402c <av_get_channel_name@plt>
    cb0c:	cmp	r0, #0
    cb10:	str	r0, [sp, #44]	; 0x2c
    cb14:	beq	cb38 <main@@Base+0x7f0c>
    cb18:	mov	r1, r7
    cb1c:	mov	r0, sl
    cb20:	bl	3f18 <av_get_channel_description@plt>
    cb24:	ldr	r2, [sp, #44]	; 0x2c
    cb28:	mov	r3, r0
    cb2c:	mov	r1, r6
    cb30:	mov	r0, #1
    cb34:	bl	474c <__printf_chk@plt>
    cb38:	add	r4, r4, #1
    cb3c:	cmp	r4, #63	; 0x3f
    cb40:	bne	caec <main@@Base+0x7ec0>
    cb44:	ldr	r1, [pc, #336]	; cc9c <main@@Base+0x8070>
    cb48:	mov	r0, #1
    cb4c:	add	r1, pc, r1
    cb50:	bl	474c <__printf_chk@plt>
    cb54:	mov	r3, #0
    cb58:	str	r3, [sp, #20]
    cb5c:	add	r3, sp, #44	; 0x2c
    cb60:	str	r3, [sp, #24]
    cb64:	add	r3, sp, #48	; 0x30
    cb68:	str	r3, [sp, #28]
    cb6c:	ldr	r3, [pc, #300]	; cca0 <main@@Base+0x8074>
    cb70:	ldr	fp, [pc, #300]	; cca4 <main@@Base+0x8078>
    cb74:	add	r3, pc, r3
    cb78:	str	r3, [sp, #32]
    cb7c:	ldr	r3, [pc, #292]	; cca8 <main@@Base+0x807c>
    cb80:	add	fp, pc, fp
    cb84:	add	r3, pc, r3
    cb88:	str	r3, [sp, #12]
    cb8c:	str	fp, [sp, #16]
    cb90:	ldr	r0, [sp, #20]
    cb94:	b	cba8 <main@@Base+0x7f7c>
    cb98:	ldr	r3, [sp, #20]
    cb9c:	add	r3, r3, #1
    cba0:	mov	r0, r3
    cba4:	str	r3, [sp, #20]
    cba8:	ldr	r2, [sp, #24]
    cbac:	ldr	r1, [sp, #28]
    cbb0:	bl	40c8 <av_get_standard_channel_layout@plt>
    cbb4:	cmp	r0, #0
    cbb8:	bne	cc68 <main@@Base+0x803c>
    cbbc:	ldr	r2, [sp, #44]	; 0x2c
    cbc0:	cmp	r2, #0
    cbc4:	beq	cb98 <main@@Base+0x7f6c>
    cbc8:	mov	r6, #64	; 0x40
    cbcc:	mov	r4, #1
    cbd0:	mov	r5, #0
    cbd4:	ldr	r1, [sp, #32]
    cbd8:	mov	r0, #1
    cbdc:	bl	474c <__printf_chk@plt>
    cbe0:	ldr	r3, [pc, #196]	; ccac <main@@Base+0x8080>
    cbe4:	add	r3, pc, r3
    cbe8:	str	r3, [sp]
    cbec:	ldrd	r2, [sp, #48]	; 0x30
    cbf0:	and	r8, r2, r4
    cbf4:	and	r9, r3, r5
    cbf8:	orrs	r1, r8, r9
    cbfc:	beq	cc44 <main@@Base+0x8018>
    cc00:	subs	r1, r4, #1
    cc04:	and	sl, r1, r2
    cc08:	sbc	r2, r5, #0
    cc0c:	and	fp, r2, r3
    cc10:	orrs	r3, sl, fp
    cc14:	ldr	r2, [sp]
    cc18:	ldr	r3, [sp, #12]
    cc1c:	mov	r1, r5
    cc20:	mov	r0, r4
    cc24:	movne	r7, r3
    cc28:	moveq	r7, r2
    cc2c:	bl	402c <av_get_channel_name@plt>
    cc30:	mov	r2, r7
    cc34:	mov	r3, r0
    cc38:	ldr	r1, [sp, #16]
    cc3c:	mov	r0, #1
    cc40:	bl	474c <__printf_chk@plt>
    cc44:	adds	r4, r4, r4
    cc48:	adc	r5, r5, r5
    cc4c:	subs	r6, r6, #1
    cc50:	bne	cbec <main@@Base+0x7fc0>
    cc54:	ldr	r1, [pc, #84]	; ccb0 <main@@Base+0x8084>
    cc58:	mov	r0, #1
    cc5c:	add	r1, pc, r1
    cc60:	bl	474c <__printf_chk@plt>
    cc64:	b	cb98 <main@@Base+0x7f6c>
    cc68:	ldr	r3, [sp, #36]	; 0x24
    cc6c:	ldr	r2, [sp, #60]	; 0x3c
    cc70:	ldr	r3, [r3]
    cc74:	mov	r0, #0
    cc78:	cmp	r2, r3
    cc7c:	bne	cc88 <main@@Base+0x805c>
    cc80:	add	sp, sp, #68	; 0x44
    cc84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cc88:	bl	3f00 <__stack_chk_fail@plt>
    cc8c:	andeq	r5, r2, r4, asr #2
    cc90:	andeq	r0, r0, r8, ror #7
    cc94:	andeq	r0, r1, r4, lsl sp
    cc98:	andeq	r0, r1, ip, lsr #26
    cc9c:	ldrdeq	r0, [r1], -r4
    cca0:	andeq	r0, r1, r8, ror #25
    cca4:	andeq	r0, r1, r4, ror #25
    cca8:	andeq	r0, r1, r8, asr ip
    ccac:	andeq	r1, r1, r4, asr #25
    ccb0:	andeq	pc, r0, r4, lsr pc	; <UNPREDICTABLE>
    ccb4:	push	{r4, r5, r6, r7, lr}
    ccb8:	mvn	r4, #0
    ccbc:	ldr	r3, [pc, #108]	; cd30 <main@@Base+0x8104>
    ccc0:	ldr	r2, [pc, #108]	; cd34 <main@@Base+0x8108>
    ccc4:	add	r3, pc, r3
    ccc8:	ldr	r7, [r3, r2]
    cccc:	ldr	r6, [pc, #100]	; cd38 <main@@Base+0x810c>
    ccd0:	ldr	r2, [r7]
    ccd4:	sub	sp, sp, #140	; 0x8c
    ccd8:	add	r6, pc, r6
    ccdc:	add	r5, sp, #4
    cce0:	str	r2, [sp, #132]	; 0x84
    cce4:	mov	r2, r4
    cce8:	mov	r1, #128	; 0x80
    ccec:	mov	r0, r5
    ccf0:	bl	47b8 <av_get_sample_fmt_string@plt>
    ccf4:	add	r4, r4, #1
    ccf8:	mov	r2, r0
    ccfc:	mov	r1, r6
    cd00:	mov	r0, #1
    cd04:	bl	474c <__printf_chk@plt>
    cd08:	cmp	r4, #12
    cd0c:	bne	cce4 <main@@Base+0x80b8>
    cd10:	ldr	r2, [sp, #132]	; 0x84
    cd14:	ldr	r3, [r7]
    cd18:	mov	r0, #0
    cd1c:	cmp	r2, r3
    cd20:	bne	cd2c <main@@Base+0x8100>
    cd24:	add	sp, sp, #140	; 0x8c
    cd28:	pop	{r4, r5, r6, r7, pc}
    cd2c:	bl	3f00 <__stack_chk_fail@plt>
    cd30:	andeq	r4, r2, r8, lsr pc
    cd34:	andeq	r0, r0, r8, ror #7
    cd38:	andeq	pc, r0, ip, lsl #21
    cd3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    cd40:	mov	r4, r2
    cd44:	ldr	r3, [pc, #1520]	; d33c <main@@Base+0x8710>
    cd48:	ldr	r0, [pc, #1520]	; d340 <main@@Base+0x8714>
    cd4c:	add	r3, pc, r3
    cd50:	ldr	r6, [r3, r0]
    cd54:	sub	sp, sp, #16
    cd58:	ldr	r2, [r6]
    cd5c:	ldr	r1, [pc, #1504]	; d344 <main@@Base+0x8718>
    cd60:	str	r2, [sp, #12]
    cd64:	ldr	r0, [r3, r1]
    cd68:	bl	3f60 <av_log_set_callback@plt>
    cd6c:	cmp	r4, #0
    cd70:	beq	cf20 <main@@Base+0x82f4>
    cd74:	mov	r0, r4
    cd78:	bl	4080 <av_strdup@plt>
    cd7c:	cmp	r0, #0
    cd80:	mov	r4, r0
    cd84:	str	r0, [sp, #8]
    cd88:	beq	d2b0 <main@@Base+0x8684>
    cd8c:	mov	r1, #61	; 0x3d
    cd90:	bl	4494 <strchr@plt>
    cd94:	subs	r5, r0, #0
    cd98:	movne	r3, #0
    cd9c:	strbne	r3, [r5], #1
    cda0:	ldrb	r3, [r4]
    cda4:	cmp	r3, #0
    cda8:	beq	cf10 <main@@Base+0x82e4>
    cdac:	ldr	r1, [pc, #1428]	; d348 <main@@Base+0x871c>
    cdb0:	mov	r0, r4
    cdb4:	add	r1, pc, r1
    cdb8:	bl	46c8 <strcmp@plt>
    cdbc:	subs	r1, r0, #0
    cdc0:	beq	cee4 <main@@Base+0x82b8>
    cdc4:	ldr	r1, [pc, #1408]	; d34c <main@@Base+0x8720>
    cdc8:	mov	r0, r4
    cdcc:	add	r1, pc, r1
    cdd0:	bl	46c8 <strcmp@plt>
    cdd4:	cmp	r0, #0
    cdd8:	beq	cfc8 <main@@Base+0x839c>
    cddc:	ldr	r1, [pc, #1388]	; d350 <main@@Base+0x8724>
    cde0:	mov	r0, r4
    cde4:	add	r1, pc, r1
    cde8:	bl	46c8 <strcmp@plt>
    cdec:	cmp	r0, #0
    cdf0:	beq	cfd8 <main@@Base+0x83ac>
    cdf4:	ldr	r1, [pc, #1368]	; d354 <main@@Base+0x8728>
    cdf8:	mov	r0, r4
    cdfc:	add	r1, pc, r1
    ce00:	bl	46c8 <strcmp@plt>
    ce04:	subs	r2, r0, #0
    ce08:	beq	cf2c <main@@Base+0x8300>
    ce0c:	ldr	r1, [pc, #1348]	; d358 <main@@Base+0x872c>
    ce10:	mov	r0, r4
    ce14:	add	r1, pc, r1
    ce18:	bl	46c8 <strcmp@plt>
    ce1c:	subs	r7, r0, #0
    ce20:	beq	d09c <main@@Base+0x8470>
    ce24:	ldr	r1, [pc, #1328]	; d35c <main@@Base+0x8730>
    ce28:	mov	r0, r4
    ce2c:	add	r1, pc, r1
    ce30:	bl	46c8 <strcmp@plt>
    ce34:	cmp	r0, #0
    ce38:	bne	cf10 <main@@Base+0x82e4>
    ce3c:	mov	r0, r5
    ce40:	bl	3ef4 <av_bsf_get_by_name@plt>
    ce44:	cmp	r5, #0
    ce48:	mov	r7, r0
    ce4c:	beq	d2b8 <main@@Base+0x868c>
    ce50:	cmp	r0, #0
    ce54:	beq	d280 <main@@Base+0x8654>
    ce58:	ldr	r1, [pc, #1280]	; d360 <main@@Base+0x8734>
    ce5c:	ldr	r2, [r0]
    ce60:	add	r1, pc, r1
    ce64:	mov	r0, #1
    ce68:	bl	474c <__printf_chk@plt>
    ce6c:	ldr	r4, [r7, #4]
    ce70:	cmp	r4, #0
    ce74:	beq	cecc <main@@Base+0x82a0>
    ce78:	ldr	r1, [pc, #1252]	; d364 <main@@Base+0x8738>
    ce7c:	mov	r0, #1
    ce80:	add	r1, pc, r1
    ce84:	bl	474c <__printf_chk@plt>
    ce88:	ldr	r0, [r4]
    ce8c:	cmp	r0, #0
    ce90:	beq	cebc <main@@Base+0x8290>
    ce94:	ldr	r5, [pc, #1228]	; d368 <main@@Base+0x873c>
    ce98:	add	r5, pc, r5
    ce9c:	bl	4740 <avcodec_descriptor_get@plt>
    cea0:	mov	r1, r5
    cea4:	ldr	r2, [r0, #8]
    cea8:	mov	r0, #1
    ceac:	bl	474c <__printf_chk@plt>
    ceb0:	ldr	r0, [r4, #4]!
    ceb4:	cmp	r0, #0
    ceb8:	bne	ce9c <main@@Base+0x8270>
    cebc:	ldr	r1, [pc, #1192]	; d36c <main@@Base+0x8740>
    cec0:	mov	r0, #1
    cec4:	add	r1, pc, r1
    cec8:	bl	474c <__printf_chk@plt>
    cecc:	ldr	r0, [r7, #8]
    ced0:	cmp	r0, #0
    ced4:	beq	ceec <main@@Base+0x82c0>
    ced8:	mov	r1, #256	; 0x100
    cedc:	bl	9db0 <main@@Base+0x5184>
    cee0:	b	ceec <main@@Base+0x82c0>
    cee4:	mov	r0, r5
    cee8:	bl	a564 <main@@Base+0x5938>
    ceec:	add	r0, sp, #8
    cef0:	bl	3ec4 <av_freep@plt>
    cef4:	mov	r0, #0
    cef8:	ldr	r2, [sp, #12]
    cefc:	ldr	r3, [r6]
    cf00:	cmp	r2, r3
    cf04:	bne	d338 <main@@Base+0x870c>
    cf08:	add	sp, sp, #16
    cf0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    cf10:	mov	r1, r5
    cf14:	mov	r0, r4
    cf18:	bl	1add8 <main@@Base+0x161ac>
    cf1c:	b	ceec <main@@Base+0x82c0>
    cf20:	ldr	r4, [pc, #1096]	; d370 <main@@Base+0x8744>
    cf24:	add	r4, pc, r4
    cf28:	b	cd74 <main@@Base+0x8148>
    cf2c:	mov	r1, r2
    cf30:	mov	r0, r5
    cf34:	bl	4188 <av_guess_format@plt>
    cf38:	subs	r4, r0, #0
    cf3c:	beq	d254 <main@@Base+0x8628>
    cf40:	ldrd	r2, [r4]
    cf44:	ldr	r1, [pc, #1064]	; d374 <main@@Base+0x8748>
    cf48:	mov	r0, #1
    cf4c:	add	r1, pc, r1
    cf50:	bl	474c <__printf_chk@plt>
    cf54:	ldr	r2, [r4, #12]
    cf58:	cmp	r2, #0
    cf5c:	beq	cf70 <main@@Base+0x8344>
    cf60:	ldr	r1, [pc, #1040]	; d378 <main@@Base+0x874c>
    cf64:	mov	r0, #1
    cf68:	add	r1, pc, r1
    cf6c:	bl	474c <__printf_chk@plt>
    cf70:	ldr	r2, [r4, #8]
    cf74:	cmp	r2, #0
    cf78:	beq	cf8c <main@@Base+0x8360>
    cf7c:	ldr	r1, [pc, #1016]	; d37c <main@@Base+0x8750>
    cf80:	mov	r0, #1
    cf84:	add	r1, pc, r1
    cf88:	bl	474c <__printf_chk@plt>
    cf8c:	ldr	r0, [r4, #20]
    cf90:	cmp	r0, #0
    cf94:	bne	d030 <main@@Base+0x8404>
    cf98:	ldr	r0, [r4, #16]
    cf9c:	cmp	r0, #0
    cfa0:	bne	d078 <main@@Base+0x844c>
    cfa4:	ldr	r0, [r4, #24]
    cfa8:	cmp	r0, #0
    cfac:	bne	d054 <main@@Base+0x8428>
    cfb0:	ldr	r0, [r4, #36]	; 0x24
    cfb4:	cmp	r0, #0
    cfb8:	beq	ceec <main@@Base+0x82c0>
    cfbc:	mov	r1, #1
    cfc0:	bl	9db0 <main@@Base+0x5184>
    cfc4:	b	ceec <main@@Base+0x82c0>
    cfc8:	mov	r0, r5
    cfcc:	mov	r1, #1
    cfd0:	bl	a564 <main@@Base+0x5938>
    cfd4:	b	ceec <main@@Base+0x82c0>
    cfd8:	mov	r0, r5
    cfdc:	bl	4248 <av_find_input_format@plt>
    cfe0:	subs	r4, r0, #0
    cfe4:	beq	d23c <main@@Base+0x8610>
    cfe8:	ldrd	r2, [r4]
    cfec:	ldr	r1, [pc, #908]	; d380 <main@@Base+0x8754>
    cff0:	mov	r0, #1
    cff4:	add	r1, pc, r1
    cff8:	bl	474c <__printf_chk@plt>
    cffc:	ldr	r2, [r4, #12]
    d000:	cmp	r2, #0
    d004:	beq	d018 <main@@Base+0x83ec>
    d008:	ldr	r1, [pc, #884]	; d384 <main@@Base+0x8758>
    d00c:	mov	r0, #1
    d010:	add	r1, pc, r1
    d014:	bl	474c <__printf_chk@plt>
    d018:	ldr	r0, [r4, #20]
    d01c:	cmp	r0, #0
    d020:	beq	ceec <main@@Base+0x82c0>
    d024:	mov	r1, #2
    d028:	bl	9db0 <main@@Base+0x5184>
    d02c:	b	ceec <main@@Base+0x82c0>
    d030:	bl	4740 <avcodec_descriptor_get@plt>
    d034:	cmp	r0, #0
    d038:	beq	cf98 <main@@Base+0x836c>
    d03c:	ldr	r1, [pc, #836]	; d388 <main@@Base+0x875c>
    d040:	ldr	r2, [r0, #8]
    d044:	add	r1, pc, r1
    d048:	mov	r0, #1
    d04c:	bl	474c <__printf_chk@plt>
    d050:	b	cf98 <main@@Base+0x836c>
    d054:	bl	4740 <avcodec_descriptor_get@plt>
    d058:	cmp	r0, #0
    d05c:	beq	cfb0 <main@@Base+0x8384>
    d060:	ldr	r1, [pc, #804]	; d38c <main@@Base+0x8760>
    d064:	ldr	r2, [r0, #8]
    d068:	add	r1, pc, r1
    d06c:	mov	r0, #1
    d070:	bl	474c <__printf_chk@plt>
    d074:	b	cfb0 <main@@Base+0x8384>
    d078:	bl	4740 <avcodec_descriptor_get@plt>
    d07c:	cmp	r0, #0
    d080:	beq	cfa4 <main@@Base+0x8378>
    d084:	ldr	r1, [pc, #772]	; d390 <main@@Base+0x8764>
    d088:	ldr	r2, [r0, #8]
    d08c:	add	r1, pc, r1
    d090:	mov	r0, #1
    d094:	bl	474c <__printf_chk@plt>
    d098:	b	cfa4 <main@@Base+0x8378>
    d09c:	mov	r0, r5
    d0a0:	bl	429c <avfilter_get_by_name@plt>
    d0a4:	cmp	r5, #0
    d0a8:	mov	r8, r0
    d0ac:	beq	d2d0 <main@@Base+0x86a4>
    d0b0:	cmp	r0, #0
    d0b4:	beq	d298 <main@@Base+0x866c>
    d0b8:	ldr	r1, [pc, #724]	; d394 <main@@Base+0x8768>
    d0bc:	ldr	r2, [r0]
    d0c0:	add	r1, pc, r1
    d0c4:	mov	r0, #1
    d0c8:	bl	474c <__printf_chk@plt>
    d0cc:	ldr	r2, [r8, #4]
    d0d0:	cmp	r2, #0
    d0d4:	beq	d0e8 <main@@Base+0x84bc>
    d0d8:	ldr	r1, [pc, #696]	; d398 <main@@Base+0x876c>
    d0dc:	mov	r0, #1
    d0e0:	add	r1, pc, r1
    d0e4:	bl	474c <__printf_chk@plt>
    d0e8:	ldr	r3, [r8, #20]
    d0ec:	tst	r3, #4
    d0f0:	bne	d26c <main@@Base+0x8640>
    d0f4:	ldr	r1, [pc, #672]	; d39c <main@@Base+0x8770>
    d0f8:	mov	r0, #1
    d0fc:	add	r1, pc, r1
    d100:	bl	474c <__printf_chk@plt>
    d104:	ldr	r0, [r8, #8]
    d108:	bl	4320 <avfilter_pad_count@plt>
    d10c:	subs	r9, r0, #0
    d110:	ble	d310 <main@@Base+0x86e4>
    d114:	mov	r4, #0
    d118:	ldr	sl, [pc, #640]	; d3a0 <main@@Base+0x8774>
    d11c:	add	sl, pc, sl
    d120:	mov	r1, r4
    d124:	ldr	r0, [r8, #8]
    d128:	bl	3edc <avfilter_pad_get_name@plt>
    d12c:	mov	r1, r4
    d130:	mov	r5, r0
    d134:	ldr	r0, [r8, #8]
    d138:	bl	3fc0 <avfilter_pad_get_type@plt>
    d13c:	bl	47dc <av_get_media_type_string@plt>
    d140:	mov	r2, r4
    d144:	str	r0, [sp]
    d148:	mov	r3, r5
    d14c:	mov	r1, sl
    d150:	add	r4, r4, #1
    d154:	mov	r0, #1
    d158:	bl	474c <__printf_chk@plt>
    d15c:	cmp	r9, r4
    d160:	bne	d120 <main@@Base+0x84f4>
    d164:	ldr	r3, [r8, #20]
    d168:	tst	r3, #1
    d16c:	beq	d180 <main@@Base+0x8554>
    d170:	ldr	r1, [pc, #556]	; d3a4 <main@@Base+0x8778>
    d174:	mov	r0, #1
    d178:	add	r1, pc, r1
    d17c:	bl	474c <__printf_chk@plt>
    d180:	ldr	r1, [pc, #544]	; d3a8 <main@@Base+0x877c>
    d184:	mov	r0, #1
    d188:	add	r1, pc, r1
    d18c:	bl	474c <__printf_chk@plt>
    d190:	ldr	r0, [r8, #12]
    d194:	bl	4320 <avfilter_pad_count@plt>
    d198:	subs	r5, r0, #0
    d19c:	ble	d2e8 <main@@Base+0x86bc>
    d1a0:	ldr	r9, [pc, #516]	; d3ac <main@@Base+0x8780>
    d1a4:	add	r9, pc, r9
    d1a8:	mov	r1, r7
    d1ac:	ldr	r0, [r8, #12]
    d1b0:	bl	3edc <avfilter_pad_get_name@plt>
    d1b4:	mov	r1, r7
    d1b8:	mov	r4, r0
    d1bc:	ldr	r0, [r8, #12]
    d1c0:	bl	3fc0 <avfilter_pad_get_type@plt>
    d1c4:	bl	47dc <av_get_media_type_string@plt>
    d1c8:	mov	r2, r7
    d1cc:	str	r0, [sp]
    d1d0:	mov	r3, r4
    d1d4:	mov	r1, r9
    d1d8:	add	r7, r7, #1
    d1dc:	mov	r0, #1
    d1e0:	bl	474c <__printf_chk@plt>
    d1e4:	cmp	r5, r7
    d1e8:	bne	d1a8 <main@@Base+0x857c>
    d1ec:	ldr	r3, [r8, #20]
    d1f0:	tst	r3, #2
    d1f4:	beq	d208 <main@@Base+0x85dc>
    d1f8:	ldr	r1, [pc, #432]	; d3b0 <main@@Base+0x8784>
    d1fc:	mov	r0, #1
    d200:	add	r1, pc, r1
    d204:	bl	474c <__printf_chk@plt>
    d208:	ldr	r0, [r8, #16]
    d20c:	cmp	r0, #0
    d210:	beq	d21c <main@@Base+0x85f0>
    d214:	ldr	r1, [pc, #408]	; d3b4 <main@@Base+0x8788>
    d218:	bl	9db0 <main@@Base+0x5184>
    d21c:	ldr	r3, [r8, #20]
    d220:	tst	r3, #196608	; 0x30000
    d224:	beq	ceec <main@@Base+0x82c0>
    d228:	ldr	r1, [pc, #392]	; d3b8 <main@@Base+0x878c>
    d22c:	mov	r0, #1
    d230:	add	r1, pc, r1
    d234:	bl	474c <__printf_chk@plt>
    d238:	b	ceec <main@@Base+0x82c0>
    d23c:	ldr	r2, [pc, #376]	; d3bc <main@@Base+0x8790>
    d240:	mov	r3, r5
    d244:	add	r2, pc, r2
    d248:	mov	r1, #16
    d24c:	bl	40f8 <av_log@plt>
    d250:	b	ceec <main@@Base+0x82c0>
    d254:	ldr	r2, [pc, #356]	; d3c0 <main@@Base+0x8794>
    d258:	mov	r3, r5
    d25c:	add	r2, pc, r2
    d260:	mov	r1, #16
    d264:	bl	40f8 <av_log@plt>
    d268:	b	ceec <main@@Base+0x82c0>
    d26c:	ldr	r1, [pc, #336]	; d3c4 <main@@Base+0x8798>
    d270:	mov	r0, #1
    d274:	add	r1, pc, r1
    d278:	bl	474c <__printf_chk@plt>
    d27c:	b	d0f4 <main@@Base+0x84c8>
    d280:	ldr	r2, [pc, #320]	; d3c8 <main@@Base+0x879c>
    d284:	mov	r3, r5
    d288:	add	r2, pc, r2
    d28c:	mov	r1, #16
    d290:	bl	40f8 <av_log@plt>
    d294:	b	ceec <main@@Base+0x82c0>
    d298:	ldr	r2, [pc, #300]	; d3cc <main@@Base+0x87a0>
    d29c:	mov	r3, r5
    d2a0:	add	r2, pc, r2
    d2a4:	mov	r1, #16
    d2a8:	bl	40f8 <av_log@plt>
    d2ac:	b	ceec <main@@Base+0x82c0>
    d2b0:	mvn	r0, #11
    d2b4:	b	cef8 <main@@Base+0x82cc>
    d2b8:	ldr	r2, [pc, #272]	; d3d0 <main@@Base+0x87a4>
    d2bc:	mov	r0, r5
    d2c0:	add	r2, pc, r2
    d2c4:	mov	r1, #16
    d2c8:	bl	40f8 <av_log@plt>
    d2cc:	b	ceec <main@@Base+0x82c0>
    d2d0:	ldr	r2, [pc, #252]	; d3d4 <main@@Base+0x87a8>
    d2d4:	mov	r0, r5
    d2d8:	add	r2, pc, r2
    d2dc:	mov	r1, #16
    d2e0:	bl	40f8 <av_log@plt>
    d2e4:	b	ceec <main@@Base+0x82c0>
    d2e8:	ldr	r3, [r8, #20]
    d2ec:	tst	r3, #2
    d2f0:	bne	d1f8 <main@@Base+0x85cc>
    d2f4:	cmp	r5, #0
    d2f8:	bne	d208 <main@@Base+0x85dc>
    d2fc:	ldr	r1, [pc, #212]	; d3d8 <main@@Base+0x87ac>
    d300:	mov	r0, #1
    d304:	add	r1, pc, r1
    d308:	bl	474c <__printf_chk@plt>
    d30c:	b	d208 <main@@Base+0x85dc>
    d310:	ldr	r3, [r8, #20]
    d314:	tst	r3, #1
    d318:	bne	d170 <main@@Base+0x8544>
    d31c:	cmp	r9, #0
    d320:	bne	d180 <main@@Base+0x8554>
    d324:	ldr	r1, [pc, #176]	; d3dc <main@@Base+0x87b0>
    d328:	mov	r0, #1
    d32c:	add	r1, pc, r1
    d330:	bl	474c <__printf_chk@plt>
    d334:	b	d180 <main@@Base+0x8554>
    d338:	bl	3f00 <__stack_chk_fail@plt>
    d33c:			; <UNDEFINED> instruction: 0x00024eb0
    d340:	andeq	r0, r0, r8, ror #7
    d344:	andeq	r0, r0, r4, asr #7
    d348:			; <UNDEFINED> instruction: 0x00010ab8
    d34c:	andeq	r0, r1, r8, lsr #21
    d350:	muleq	r1, r8, sl
    d354:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    d358:	andeq	r0, r1, r8, asr #22
    d35c:	andeq	r0, r1, ip, ror ip
    d360:	muleq	r1, r8, ip
    d364:	muleq	r1, r0, ip
    d368:	ldrdeq	r1, [r1], -r0
    d36c:	andeq	pc, r0, ip, asr #25
    d370:	andeq	r1, r1, r4, lsl #19
    d374:	andeq	r0, r1, r8, lsl #19
    d378:	andeq	r0, r1, r8, asr #18
    d37c:	andeq	r0, r1, r0, ror #18
    d380:	andeq	r0, r1, r8, lsr #17
    d384:	andeq	r0, r1, r0, lsr #17
    d388:			; <UNDEFINED> instruction: 0x000108b4
    d38c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    d390:	andeq	r0, r1, ip, lsl #17
    d394:	ldrdeq	r0, [r1], -r8
    d398:	andeq	r0, r1, ip, lsr #9
    d39c:	andeq	r0, r1, r8, asr #17
    d3a0:			; <UNDEFINED> instruction: 0x000108b8
    d3a4:	andeq	r0, r1, r4, ror r8
    d3a8:			; <UNDEFINED> instruction: 0x000108b0
    d3ac:	andeq	r0, r1, r0, lsr r8
    d3b0:	andeq	r0, r1, ip, ror #15
    d3b4:	andeq	r0, r1, r8, lsl r0
    d3b8:	andeq	r0, r1, r4, lsr r8
    d3bc:	andeq	r0, r1, r0, asr #12
    d3c0:	andeq	r0, r1, r8, lsr #12
    d3c4:	andeq	r0, r1, r0, lsr r7
    d3c8:	andeq	r0, r1, ip, asr #16
    d3cc:	andeq	r0, r1, r0, ror #13
    d3d0:	andeq	r0, r1, ip, ror #15
    d3d4:	andeq	r0, r1, ip, lsl #13
    d3d8:	andeq	r0, r1, r4, asr #14
    d3dc:	andeq	r0, r1, ip, ror #13
    d3e0:	push	{r4, r5, r6, lr}
    d3e4:	ldr	r3, [pc, #128]	; d46c <main@@Base+0x8840>
    d3e8:	ldr	r1, [pc, #128]	; d470 <main@@Base+0x8844>
    d3ec:	add	r3, pc, r3
    d3f0:	ldr	r6, [r3, r1]
    d3f4:	sub	sp, sp, #8
    d3f8:	ldr	r1, [r6]
    d3fc:	ldr	r2, [pc, #112]	; d474 <main@@Base+0x8848>
    d400:	str	r1, [sp, #4]
    d404:	ldr	r4, [r3, r2]
    d408:	ldr	r0, [r4]
    d40c:	bl	4374 <getc@plt>
    d410:	sub	r3, r0, #97	; 0x61
    d414:	cmp	r3, #25
    d418:	movhi	r5, r0
    d41c:	eorls	r5, r0, #32
    d420:	sub	r5, r5, #89	; 0x59
    d424:	clz	r5, r5
    d428:	cmp	r0, #10
    d42c:	cmnne	r0, #1
    d430:	lsr	r5, r5, #5
    d434:	beq	d44c <main@@Base+0x8820>
    d438:	ldr	r0, [r4]
    d43c:	bl	4374 <getc@plt>
    d440:	cmp	r0, #10
    d444:	cmnne	r0, #1
    d448:	bne	d438 <main@@Base+0x880c>
    d44c:	ldr	r2, [sp, #4]
    d450:	ldr	r3, [r6]
    d454:	mov	r0, r5
    d458:	cmp	r2, r3
    d45c:	bne	d468 <main@@Base+0x883c>
    d460:	add	sp, sp, #8
    d464:	pop	{r4, r5, r6, pc}
    d468:	bl	3f00 <__stack_chk_fail@plt>
    d46c:	andeq	r4, r2, r0, lsl r8
    d470:	andeq	r0, r0, r8, ror #7
    d474:	andeq	r0, r0, r0, asr #7
    d478:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d47c:	ldr	ip, [pc, #456]	; d64c <main@@Base+0x8a20>
    d480:	ldr	lr, [pc, #456]	; d650 <main@@Base+0x8a24>
    d484:	add	ip, pc, ip
    d488:	mov	r6, r0
    d48c:	mov	r0, ip
    d490:	ldr	r0, [ip, lr]
    d494:	sub	sp, sp, #60	; 0x3c
    d498:	mov	ip, r0
    d49c:	str	r0, [sp, #32]
    d4a0:	ldr	r0, [pc, #428]	; d654 <main@@Base+0x8a28>
    d4a4:	ldr	ip, [ip]
    d4a8:	add	r0, pc, r0
    d4ac:	mov	r4, r3
    d4b0:	mov	sl, r1
    d4b4:	mov	r9, r2
    d4b8:	str	ip, [sp, #52]	; 0x34
    d4bc:	ldr	fp, [sp, #96]	; 0x60
    d4c0:	bl	46f8 <getenv@plt>
    d4c4:	mov	r5, r0
    d4c8:	ldr	r0, [pc, #392]	; d658 <main@@Base+0x8a2c>
    d4cc:	str	r5, [sp, #40]	; 0x28
    d4d0:	add	r0, pc, r0
    d4d4:	bl	46f8 <getenv@plt>
    d4d8:	ldr	r3, [pc, #380]	; d65c <main@@Base+0x8a30>
    d4dc:	cmp	r4, #0
    d4e0:	add	r3, pc, r3
    d4e4:	str	r0, [sp, #44]	; 0x2c
    d4e8:	str	r3, [sp, #48]	; 0x30
    d4ec:	bne	d60c <main@@Base+0x89e0>
    d4f0:	ldr	r3, [pc, #360]	; d660 <main@@Base+0x8a34>
    d4f4:	cmp	r5, #0
    d4f8:	add	r3, pc, r3
    d4fc:	str	r3, [sp, #28]
    d500:	ldr	r3, [pc, #348]	; d664 <main@@Base+0x8a38>
    d504:	add	r8, sp, #44	; 0x2c
    d508:	add	r3, pc, r3
    d50c:	str	r3, [sp, #24]
    d510:	ldr	r3, [pc, #336]	; d668 <main@@Base+0x8a3c>
    d514:	add	r3, pc, r3
    d518:	str	r3, [sp, #36]	; 0x24
    d51c:	beq	d59c <main@@Base+0x8970>
    d520:	cmp	r4, #1
    d524:	beq	d5c4 <main@@Base+0x8998>
    d528:	ldr	r7, [pc, #316]	; d66c <main@@Base+0x8a40>
    d52c:	add	r7, pc, r7
    d530:	ldr	r3, [sp, #28]
    d534:	mov	r2, #1
    d538:	str	r3, [sp]
    d53c:	mov	r1, sl
    d540:	mvn	r3, #0
    d544:	stmib	sp, {r5, r7, r9}
    d548:	mov	r0, r6
    d54c:	bl	41dc <__snprintf_chk@plt>
    d550:	ldr	r1, [sp, #24]
    d554:	mov	r0, r6
    d558:	bl	3de0 <fopen64@plt>
    d55c:	clz	r3, r0
    d560:	cmp	fp, #0
    d564:	lsr	r3, r3, #5
    d568:	movne	r2, r3
    d56c:	moveq	r2, #0
    d570:	cmp	r2, #0
    d574:	bne	d5d0 <main@@Base+0x89a4>
    d578:	add	r4, r4, #1
    d57c:	cmp	r4, #2
    d580:	movgt	r3, #0
    d584:	andle	r3, r3, #1
    d588:	cmp	r3, #0
    d58c:	beq	d5a8 <main@@Base+0x897c>
    d590:	ldr	r5, [r8], #4
    d594:	cmp	r5, #0
    d598:	bne	d520 <main@@Base+0x88f4>
    d59c:	mov	r0, r5
    d5a0:	mov	r3, #1
    d5a4:	b	d578 <main@@Base+0x894c>
    d5a8:	ldr	r3, [sp, #32]
    d5ac:	ldr	r2, [sp, #52]	; 0x34
    d5b0:	ldr	r3, [r3]
    d5b4:	cmp	r2, r3
    d5b8:	bne	d648 <main@@Base+0x8a1c>
    d5bc:	add	sp, sp, #60	; 0x3c
    d5c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d5c4:	ldr	r7, [pc, #164]	; d670 <main@@Base+0x8a44>
    d5c8:	add	r7, pc, r7
    d5cc:	b	d530 <main@@Base+0x8904>
    d5d0:	ldr	r3, [sp, #36]	; 0x24
    d5d4:	mov	r2, #1
    d5d8:	str	r3, [sp]
    d5dc:	mov	r1, sl
    d5e0:	mvn	r3, #0
    d5e4:	str	r9, [sp, #16]
    d5e8:	stmib	sp, {r5, r7, fp}
    d5ec:	mov	r0, r6
    d5f0:	bl	41dc <__snprintf_chk@plt>
    d5f4:	ldr	r1, [sp, #24]
    d5f8:	mov	r0, r6
    d5fc:	bl	3de0 <fopen64@plt>
    d600:	clz	r3, r0
    d604:	lsr	r3, r3, #5
    d608:	b	d578 <main@@Base+0x894c>
    d60c:	mov	r2, sl
    d610:	mov	r1, r9
    d614:	mov	r0, r6
    d618:	bl	42c0 <av_strlcpy@plt>
    d61c:	ldr	r3, [sp, #32]
    d620:	ldr	r2, [sp, #52]	; 0x34
    d624:	ldr	r3, [r3]
    d628:	cmp	r2, r3
    d62c:	bne	d648 <main@@Base+0x8a1c>
    d630:	mov	r0, r6
    d634:	ldr	r1, [pc, #56]	; d674 <main@@Base+0x8a48>
    d638:	add	r1, pc, r1
    d63c:	add	sp, sp, #60	; 0x3c
    d640:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d644:	b	3de0 <fopen64@plt>
    d648:	bl	3f00 <__stack_chk_fail@plt>
    d64c:	andeq	r4, r2, r8, ror r7
    d650:	andeq	r0, r0, r8, ror #7
    d654:	andeq	r0, r1, ip, lsl #13
    d658:	andeq	r0, r1, r4, ror r6
    d65c:	andeq	r0, r1, ip, ror #12
    d660:	andeq	r0, r1, r8, ror #12
    d664:	andeq	r0, r1, r8, asr #7
    d668:	andeq	r0, r1, r0, ror #12
    d66c:	andeq	r1, r1, ip, ror r3
    d670:	andeq	r0, r1, r0, ror #10
    d674:	muleq	r1, r8, r2
    d678:	push	{r4, r5, r6, r7, lr}
    d67c:	ldr	r3, [pc, #100]	; d6e8 <main@@Base+0x8abc>
    d680:	ldr	ip, [pc, #100]	; d6ec <main@@Base+0x8ac0>
    d684:	add	r3, pc, r3
    d688:	ldr	r4, [r3, ip]
    d68c:	sub	sp, sp, #12
    d690:	ldr	r3, [r4]
    d694:	mov	r6, r0
    d698:	mov	r7, r2
    d69c:	str	r3, [sp, #4]
    d6a0:	bl	426c <avformat_match_stream_specifier@plt>
    d6a4:	subs	r5, r0, #0
    d6a8:	blt	d6c8 <main@@Base+0x8a9c>
    d6ac:	ldr	r2, [sp, #4]
    d6b0:	ldr	r3, [r4]
    d6b4:	mov	r0, r5
    d6b8:	cmp	r2, r3
    d6bc:	bne	d6e4 <main@@Base+0x8ab8>
    d6c0:	add	sp, sp, #12
    d6c4:	pop	{r4, r5, r6, r7, pc}
    d6c8:	ldr	r2, [pc, #32]	; d6f0 <main@@Base+0x8ac4>
    d6cc:	mov	r3, r7
    d6d0:	mov	r0, r6
    d6d4:	add	r2, pc, r2
    d6d8:	mov	r1, #16
    d6dc:	bl	40f8 <av_log@plt>
    d6e0:	b	d6ac <main@@Base+0x8a80>
    d6e4:	bl	3f00 <__stack_chk_fail@plt>
    d6e8:	andeq	r4, r2, r8, ror r5
    d6ec:	andeq	r0, r0, r8, ror #7
    d6f0:			; <UNDEFINED> instruction: 0x000104b4
    d6f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d6f8:	mov	r4, r2
    d6fc:	mov	ip, #0
    d700:	sub	sp, sp, #44	; 0x2c
    d704:	str	r2, [sp, #12]
    d708:	ldr	r2, [pc, #588]	; d95c <main@@Base+0x8d30>
    d70c:	ldr	lr, [pc, #588]	; d960 <main@@Base+0x8d34>
    d710:	add	r2, pc, r2
    d714:	ldr	lr, [r2, lr]
    d718:	ldr	r4, [r4, #8]
    d71c:	str	lr, [sp, #20]
    d720:	ldr	lr, [lr]
    d724:	cmp	r4, ip
    d728:	movne	r5, #33	; 0x21
    d72c:	moveq	r5, #34	; 0x22
    d730:	movne	r7, #9
    d734:	moveq	r7, #10
    d738:	movne	r4, #17
    d73c:	moveq	r4, #18
    d740:	movne	sl, #1
    d744:	moveq	sl, #2
    d748:	ldr	r9, [sp, #80]	; 0x50
    d74c:	mov	r8, r0
    d750:	mov	r6, r1
    d754:	str	r3, [sp, #8]
    d758:	str	lr, [sp, #36]	; 0x24
    d75c:	str	ip, [sp, #28]
    d760:	bl	4044 <avcodec_get_class@plt>
    d764:	cmp	r9, #0
    d768:	str	r0, [sp, #32]
    d76c:	beq	d914 <main@@Base+0x8ce8>
    d770:	ldr	r3, [sp, #8]
    d774:	ldr	r3, [r3, #176]	; 0xb0
    d778:	ldr	r3, [r3]
    d77c:	cmp	r3, #1
    d780:	beq	d934 <main@@Base+0x8d08>
    d784:	cmp	r3, #3
    d788:	beq	d904 <main@@Base+0x8cd8>
    d78c:	cmp	r3, #0
    d790:	moveq	r3, #118	; 0x76
    d794:	movne	r3, #0
    d798:	moveq	sl, r4
    d79c:	str	r3, [sp, #16]
    d7a0:	mov	r4, #0
    d7a4:	ldr	r7, [pc, #440]	; d964 <main@@Base+0x8d38>
    d7a8:	add	r7, pc, r7
    d7ac:	mov	r2, r4
    d7b0:	mov	r3, #2
    d7b4:	mov	r1, r7
    d7b8:	mov	r0, r8
    d7bc:	bl	4644 <av_dict_get@plt>
    d7c0:	subs	r4, r0, #0
    d7c4:	beq	d8e4 <main@@Base+0x8cb8>
    d7c8:	ldr	r6, [r4]
    d7cc:	mov	r1, #58	; 0x3a
    d7d0:	mov	r0, r6
    d7d4:	bl	4494 <strchr@plt>
    d7d8:	subs	r5, r0, #0
    d7dc:	beq	d80c <main@@Base+0x8be0>
    d7e0:	add	r2, r5, #1
    d7e4:	ldr	r1, [sp, #8]
    d7e8:	ldr	r0, [sp, #12]
    d7ec:	bl	d678 <main@@Base+0x8a4c>
    d7f0:	cmp	r0, #0
    d7f4:	beq	d7ac <main@@Base+0x8b80>
    d7f8:	cmp	r0, #1
    d7fc:	bne	d950 <main@@Base+0x8d24>
    d800:	mov	r3, #0
    d804:	strb	r3, [r5]
    d808:	ldr	r6, [r4]
    d80c:	mov	r3, #2
    d810:	add	fp, sp, #32
    d814:	str	r3, [sp]
    d818:	mov	r2, #0
    d81c:	mov	r1, r6
    d820:	mov	r0, fp
    d824:	mov	r3, sl
    d828:	bl	414c <av_opt_find@plt>
    d82c:	adds	r2, r0, #0
    d830:	movne	r2, #1
    d834:	cmp	r9, #0
    d838:	moveq	r2, #1
    d83c:	cmp	r2, #0
    d840:	beq	d864 <main@@Base+0x8c38>
    d844:	ldm	r4, {r1, r2}
    d848:	mov	r3, #0
    d84c:	add	r0, sp, #28
    d850:	bl	453c <av_dict_set@plt>
    d854:	cmp	r5, #0
    d858:	movne	r3, #58	; 0x3a
    d85c:	strbne	r3, [r5]
    d860:	b	d7ac <main@@Base+0x8b80>
    d864:	ldr	r3, [r9, #44]	; 0x2c
    d868:	ldr	r1, [r4]
    d86c:	cmp	r3, #0
    d870:	beq	d894 <main@@Base+0x8c68>
    d874:	mov	r3, #2
    d878:	add	r0, r9, #44	; 0x2c
    d87c:	str	r3, [sp]
    d880:	mov	r3, sl
    d884:	bl	414c <av_opt_find@plt>
    d888:	cmp	r0, #0
    d88c:	ldreq	r1, [r4]
    d890:	bne	d844 <main@@Base+0x8c18>
    d894:	ldrb	r3, [r1]
    d898:	ldr	r2, [sp, #16]
    d89c:	cmp	r3, r2
    d8a0:	bne	d854 <main@@Base+0x8c28>
    d8a4:	mov	r3, #2
    d8a8:	add	r1, r1, #1
    d8ac:	str	r3, [sp]
    d8b0:	mov	r0, fp
    d8b4:	mov	r3, sl
    d8b8:	mov	r2, #0
    d8bc:	bl	414c <av_opt_find@plt>
    d8c0:	cmp	r0, #0
    d8c4:	beq	d854 <main@@Base+0x8c28>
    d8c8:	ldr	r1, [r4]
    d8cc:	mov	r3, #0
    d8d0:	add	r1, r1, #1
    d8d4:	ldr	r2, [r4, #4]
    d8d8:	add	r0, sp, #28
    d8dc:	bl	453c <av_dict_set@plt>
    d8e0:	b	d854 <main@@Base+0x8c28>
    d8e4:	ldr	r3, [sp, #20]
    d8e8:	ldr	r2, [sp, #36]	; 0x24
    d8ec:	ldr	r3, [r3]
    d8f0:	ldr	r0, [sp, #28]
    d8f4:	cmp	r2, r3
    d8f8:	bne	d958 <main@@Base+0x8d2c>
    d8fc:	add	sp, sp, #44	; 0x2c
    d900:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d904:	mov	r3, #115	; 0x73
    d908:	mov	sl, r5
    d90c:	str	r3, [sp, #16]
    d910:	b	d7a0 <main@@Base+0x8b74>
    d914:	ldr	r3, [sp, #12]
    d918:	mov	r0, r6
    d91c:	ldr	r3, [r3, #8]
    d920:	cmp	r3, #0
    d924:	beq	d944 <main@@Base+0x8d18>
    d928:	bl	3f24 <avcodec_find_encoder@plt>
    d92c:	mov	r9, r0
    d930:	b	d770 <main@@Base+0x8b44>
    d934:	mov	r3, #97	; 0x61
    d938:	mov	sl, r7
    d93c:	str	r3, [sp, #16]
    d940:	b	d7a0 <main@@Base+0x8b74>
    d944:	bl	4314 <avcodec_find_decoder@plt>
    d948:	mov	r9, r0
    d94c:	b	d770 <main@@Base+0x8b44>
    d950:	mov	r0, #1
    d954:	bl	902c <main@@Base+0x4400>
    d958:	bl	3f00 <__stack_chk_fail@plt>
    d95c:	andeq	r4, r2, ip, ror #9
    d960:	andeq	r0, r0, r8, ror #7
    d964:	andeq	r1, r1, r0, lsl #2
    d968:	push	{r4, r5, r6, r7, r8, r9, lr}
    d96c:	ldr	r3, [pc, #184]	; da2c <main@@Base+0x8e00>
    d970:	ldr	r2, [pc, #184]	; da30 <main@@Base+0x8e04>
    d974:	add	r3, pc, r3
    d978:	ldr	r9, [r3, r2]
    d97c:	mov	r5, r0
    d980:	ldr	r0, [r0, #24]
    d984:	ldr	r2, [r9]
    d988:	sub	sp, sp, #20
    d98c:	cmp	r0, #0
    d990:	str	r2, [sp, #12]
    d994:	moveq	r6, r0
    d998:	beq	d9f8 <main@@Base+0x8dcc>
    d99c:	mov	r7, r1
    d9a0:	mov	r1, #4
    d9a4:	bl	405c <av_mallocz_array@plt>
    d9a8:	subs	r6, r0, #0
    d9ac:	beq	da14 <main@@Base+0x8de8>
    d9b0:	ldr	r3, [r5, #24]
    d9b4:	cmp	r3, #0
    d9b8:	movne	r4, #0
    d9bc:	movne	r8, r4
    d9c0:	beq	d9f8 <main@@Base+0x8dcc>
    d9c4:	ldr	r3, [r5, #28]
    d9c8:	mov	r2, r5
    d9cc:	ldr	r3, [r3, r4, lsl #2]
    d9d0:	mov	r0, r7
    d9d4:	ldr	r1, [r3, #176]	; 0xb0
    d9d8:	ldr	r1, [r1, #4]
    d9dc:	str	r8, [sp]
    d9e0:	bl	d6f4 <main@@Base+0x8ac8>
    d9e4:	ldr	r3, [r5, #24]
    d9e8:	str	r0, [r6, r4, lsl #2]
    d9ec:	add	r4, r4, #1
    d9f0:	cmp	r3, r4
    d9f4:	bhi	d9c4 <main@@Base+0x8d98>
    d9f8:	ldr	r2, [sp, #12]
    d9fc:	ldr	r3, [r9]
    da00:	mov	r0, r6
    da04:	cmp	r2, r3
    da08:	bne	da28 <main@@Base+0x8dfc>
    da0c:	add	sp, sp, #20
    da10:	pop	{r4, r5, r6, r7, r8, r9, pc}
    da14:	ldr	r2, [pc, #24]	; da34 <main@@Base+0x8e08>
    da18:	mov	r1, #16
    da1c:	add	r2, pc, r2
    da20:	bl	40f8 <av_log@plt>
    da24:	b	d9f8 <main@@Base+0x8dcc>
    da28:	bl	3f00 <__stack_chk_fail@plt>
    da2c:	andeq	r4, r2, r8, lsl #5
    da30:	andeq	r0, r0, r8, ror #7
    da34:	andeq	r0, r1, ip, lsl #3
    da38:	push	{r4, r5, r6, r7, r8, lr}
    da3c:	ldr	ip, [pc, #208]	; db14 <main@@Base+0x8ee8>
    da40:	ldr	lr, [pc, #208]	; db18 <main@@Base+0x8eec>
    da44:	add	ip, pc, ip
    da48:	ldr	r5, [ip, lr]
    da4c:	mov	r6, r0
    da50:	mov	r0, ip
    da54:	ldr	ip, [r5]
    da58:	sub	sp, sp, #8
    da5c:	mvn	r0, #-2147483648	; 0x80000000
    da60:	mov	r4, r3
    da64:	mov	r7, r2
    da68:	str	ip, [sp, #4]
    da6c:	mov	r8, r1
    da70:	bl	1b30c <vc_gpuserv_execute_code@@Base+0x178>
    da74:	cmp	r0, r4
    da78:	ble	dadc <main@@Base+0x8eb0>
    da7c:	ldr	r3, [r7]
    da80:	cmp	r3, r4
    da84:	blt	daa4 <main@@Base+0x8e78>
    da88:	ldr	r2, [sp, #4]
    da8c:	ldr	r3, [r5]
    da90:	mov	r0, r6
    da94:	cmp	r2, r3
    da98:	bne	daf8 <main@@Base+0x8ecc>
    da9c:	add	sp, sp, #8
    daa0:	pop	{r4, r5, r6, r7, r8, pc}
    daa4:	mov	r0, r6
    daa8:	mov	r2, r8
    daac:	mov	r1, r4
    dab0:	bl	40a4 <av_realloc_array@plt>
    dab4:	subs	r6, r0, #0
    dab8:	beq	dafc <main@@Base+0x8ed0>
    dabc:	ldr	r0, [r7]
    dac0:	mov	r1, #0
    dac4:	sub	r2, r4, r0
    dac8:	mul	r2, r8, r2
    dacc:	mla	r0, r8, r0, r6
    dad0:	bl	41e8 <memset@plt>
    dad4:	str	r4, [r7]
    dad8:	b	da88 <main@@Base+0x8e5c>
    dadc:	ldr	r2, [pc, #56]	; db1c <main@@Base+0x8ef0>
    dae0:	mov	r0, #0
    dae4:	add	r2, pc, r2
    dae8:	mov	r1, #16
    daec:	bl	40f8 <av_log@plt>
    daf0:	mov	r0, #1
    daf4:	bl	902c <main@@Base+0x4400>
    daf8:	bl	3f00 <__stack_chk_fail@plt>
    dafc:	ldr	r2, [pc, #28]	; db20 <main@@Base+0x8ef4>
    db00:	mov	r1, #16
    db04:	add	r2, pc, r2
    db08:	bl	40f8 <av_log@plt>
    db0c:	mov	r0, #1
    db10:	bl	902c <main@@Base+0x4400>
    db14:			; <UNDEFINED> instruction: 0x000241b8
    db18:	andeq	r0, r0, r8, ror #7
    db1c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    db20:	andeq	r0, r1, r0, ror #1
    db24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    db28:	mov	r5, r1
    db2c:	mov	r7, r2
    db30:	ldr	r1, [pc, #664]	; ddd0 <main@@Base+0x91a4>
    db34:	ldr	ip, [pc, #664]	; ddd4 <main@@Base+0x91a8>
    db38:	add	r1, pc, r1
    db3c:	ldr	r2, [r5]
    db40:	ldr	r6, [r1, ip]
    db44:	ldr	r4, [r7]
    db48:	tst	r2, #49152	; 0xc000
    db4c:	ldr	ip, [r6]
    db50:	sub	sp, sp, #84	; 0x54
    db54:	addne	r4, r0, r4
    db58:	tst	r2, #32768	; 0x8000
    db5c:	mov	sl, r0
    db60:	mov	r8, r3
    db64:	str	ip, [sp, #76]	; 0x4c
    db68:	ldr	r9, [sp, #120]	; 0x78
    db6c:	bne	dc14 <main@@Base+0x8fe8>
    db70:	tst	r2, #8
    db74:	bne	dc78 <main@@Base+0x904c>
    db78:	tst	r2, #130	; 0x82
    db7c:	bne	dbcc <main@@Base+0x8fa0>
    db80:	tst	r2, #1024	; 0x400
    db84:	bne	dcc8 <main@@Base+0x909c>
    db88:	tst	r2, #65536	; 0x10000
    db8c:	bne	dcf4 <main@@Base+0x90c8>
    db90:	tst	r2, #256	; 0x100
    db94:	bne	dca0 <main@@Base+0x9074>
    db98:	ands	fp, r2, #131072	; 0x20000
    db9c:	bne	dd1c <main@@Base+0x90f0>
    dba0:	ldr	r3, [r7]
    dba4:	cmp	r3, #0
    dba8:	beq	dbf0 <main@@Base+0x8fc4>
    dbac:	mov	r0, sl
    dbb0:	mov	r2, r9
    dbb4:	mov	r1, r8
    dbb8:	blx	r3
    dbbc:	subs	r4, r0, #0
    dbc0:	blt	dd40 <main@@Base+0x9114>
    dbc4:	ldr	r2, [r5]
    dbc8:	b	dbf0 <main@@Base+0x8fc4>
    dbcc:	mov	r2, #1024	; 0x400
    dbd0:	mov	r1, r9
    dbd4:	mov	r0, r8
    dbd8:	vldr	d1, [pc, #448]	; dda0 <main@@Base+0x9174>
    dbdc:	vldr	d0, [pc, #452]	; dda8 <main@@Base+0x917c>
    dbe0:	bl	99a4 <main@@Base+0x4d78>
    dbe4:	vcvt.s32.f64	s0, d0
    dbe8:	vstr	s0, [r4]
    dbec:	ldr	r2, [r5]
    dbf0:	ands	r4, r2, #2048	; 0x800
    dbf4:	bne	dd90 <main@@Base+0x9164>
    dbf8:	ldr	r2, [sp, #76]	; 0x4c
    dbfc:	ldr	r3, [r6]
    dc00:	mov	r0, r4
    dc04:	cmp	r2, r3
    dc08:	bne	dd98 <main@@Base+0x916c>
    dc0c:	add	sp, sp, #84	; 0x54
    dc10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dc14:	mov	r1, #58	; 0x3a
    dc18:	mov	r0, r3
    dc1c:	bl	4494 <strchr@plt>
    dc20:	mov	r2, r4
    dc24:	ldr	r3, [r4, #4]
    dc28:	mov	fp, r0
    dc2c:	add	r3, r3, #1
    dc30:	ldr	r0, [r2], #4
    dc34:	mov	r1, #16
    dc38:	bl	da38 <main@@Base+0x8e0c>
    dc3c:	cmp	fp, #0
    dc40:	str	r0, [r4]
    dc44:	addne	r0, fp, #1
    dc48:	beq	dd10 <main@@Base+0x90e4>
    dc4c:	bl	4080 <av_strdup@plt>
    dc50:	cmp	r0, #0
    dc54:	beq	dd88 <main@@Base+0x915c>
    dc58:	ldrd	r2, [r4]
    dc5c:	sub	r3, r3, #-268435455	; 0xf0000001
    dc60:	add	r4, r2, r3, lsl #4
    dc64:	str	r0, [r2, r3, lsl #4]
    dc68:	ldr	r2, [r5]
    dc6c:	add	r4, r4, #8
    dc70:	tst	r2, #8
    dc74:	beq	db78 <main@@Base+0x8f4c>
    dc78:	mov	r0, r9
    dc7c:	bl	4080 <av_strdup@plt>
    dc80:	mov	r7, r0
    dc84:	mov	r0, r4
    dc88:	bl	3ec4 <av_freep@plt>
    dc8c:	cmp	r7, #0
    dc90:	beq	dd88 <main@@Base+0x915c>
    dc94:	str	r7, [r4]
    dc98:	ldr	r2, [r5]
    dc9c:	b	dbf0 <main@@Base+0x8fc4>
    dca0:	mov	r2, #256	; 0x100
    dca4:	mov	r1, r9
    dca8:	mov	r0, r8
    dcac:	vldr	d1, [pc, #252]	; ddb0 <main@@Base+0x9184>
    dcb0:	vldr	d0, [pc, #256]	; ddb8 <main@@Base+0x918c>
    dcb4:	bl	99a4 <main@@Base+0x4d78>
    dcb8:	vcvt.f32.f64	s0, d0
    dcbc:	ldr	r2, [r5]
    dcc0:	vstr	s0, [r4]
    dcc4:	b	dbf0 <main@@Base+0x8fc4>
    dcc8:	mov	r2, #1024	; 0x400
    dccc:	mov	r1, r9
    dcd0:	mov	r0, r8
    dcd4:	vldr	d1, [pc, #228]	; ddc0 <main@@Base+0x9194>
    dcd8:	vldr	d0, [pc, #232]	; ddc8 <main@@Base+0x919c>
    dcdc:	bl	99a4 <main@@Base+0x4d78>
    dce0:	vmov	r0, r1, d0
    dce4:	bl	1b9f0 <vc_gpuserv_execute_code@@Base+0x85c>
    dce8:	ldr	r2, [r5]
    dcec:	strd	r0, [r4]
    dcf0:	b	dbf0 <main@@Base+0x8fc4>
    dcf4:	mov	r2, #1
    dcf8:	mov	r1, r9
    dcfc:	mov	r0, r8
    dd00:	bl	9af0 <main@@Base+0x4ec4>
    dd04:	ldr	r2, [r5]
    dd08:	strd	r0, [r4]
    dd0c:	b	dbf0 <main@@Base+0x8fc4>
    dd10:	ldr	r0, [pc, #192]	; ddd8 <main@@Base+0x91ac>
    dd14:	add	r0, pc, r0
    dd18:	b	dc4c <main@@Base+0x9020>
    dd1c:	mov	r2, #131072	; 0x20000
    dd20:	mov	r1, r9
    dd24:	mov	r0, r8
    dd28:	vldr	d1, [pc, #128]	; ddb0 <main@@Base+0x9184>
    dd2c:	vldr	d0, [pc, #132]	; ddb8 <main@@Base+0x918c>
    dd30:	bl	99a4 <main@@Base+0x4d78>
    dd34:	ldr	r2, [r5]
    dd38:	vstr	d0, [r4]
    dd3c:	b	dbf0 <main@@Base+0x8fc4>
    dd40:	add	r5, sp, #12
    dd44:	mov	r1, fp
    dd48:	mov	r0, r5
    dd4c:	mov	r2, #64	; 0x40
    dd50:	bl	41e8 <memset@plt>
    dd54:	mov	r1, r5
    dd58:	mov	r2, #64	; 0x40
    dd5c:	mov	r0, r4
    dd60:	bl	44f4 <av_strerror@plt>
    dd64:	ldr	r2, [pc, #112]	; dddc <main@@Base+0x91b0>
    dd68:	str	r5, [sp, #4]
    dd6c:	str	r8, [sp]
    dd70:	mov	r3, r9
    dd74:	mov	r0, fp
    dd78:	add	r2, pc, r2
    dd7c:	mov	r1, #16
    dd80:	bl	40f8 <av_log@plt>
    dd84:	b	dbf8 <main@@Base+0x8fcc>
    dd88:	mvn	r4, #11
    dd8c:	b	dbf8 <main@@Base+0x8fcc>
    dd90:	mov	r0, #0
    dd94:	bl	902c <main@@Base+0x4400>
    dd98:	bl	3f00 <__stack_chk_fail@plt>
    dd9c:	nop	{0}
    dda0:			; <UNDEFINED> instruction: 0xffc00000
    dda4:	ldrshmi	pc, [pc, #255]	; deab <main@@Base+0x927f>	; <UNPREDICTABLE>
    dda8:	andeq	r0, r0, r0
    ddac:	mvngt	r0, r0
    ddb0:	andeq	r0, r0, r0
    ddb4:	svcvc	0x00f00000	; IMB
    ddb8:	andeq	r0, r0, r0
    ddbc:			; <UNDEFINED> instruction: 0xfff00000	; IMB
    ddc0:	andeq	r0, r0, r0
    ddc4:	mvnmi	r0, #0
    ddc8:	andeq	r0, r0, r0
    ddcc:	mvngt	r0, #0
    ddd0:	andeq	r4, r2, r4, asr #1
    ddd4:	andeq	r0, r0, r8, ror #7
    ddd8:	muleq	r1, r4, fp
    dddc:	andeq	pc, r0, r8, lsl #29
    dde0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dde4:	mov	r7, r1
    dde8:	ldr	r1, [pc, #608]	; e050 <main@@Base+0x9424>
    ddec:	ldr	ip, [pc, #608]	; e054 <main@@Base+0x9428>
    ddf0:	add	r1, pc, r1
    ddf4:	ldr	r1, [r1, ip]
    ddf8:	sub	sp, sp, #36	; 0x24
    ddfc:	ldr	ip, [r1]
    de00:	str	r1, [sp, #12]
    de04:	mov	sl, r0
    de08:	mov	r1, #58	; 0x3a
    de0c:	mov	r0, r7
    de10:	mov	r8, r2
    de14:	mov	r6, r3
    de18:	str	ip, [sp, #28]
    de1c:	bl	4494 <strchr@plt>
    de20:	cmp	r0, #0
    de24:	subne	fp, r0, r7
    de28:	beq	df90 <main@@Base+0x9364>
    de2c:	ldr	r5, [r6]
    de30:	mov	r4, r6
    de34:	cmp	r5, #0
    de38:	beq	de74 <main@@Base+0x9248>
    de3c:	mov	r9, r5
    de40:	mov	r2, fp
    de44:	mov	r1, r9
    de48:	mov	r0, r7
    de4c:	bl	43e0 <strncmp@plt>
    de50:	cmp	r0, #0
    de54:	bne	de68 <main@@Base+0x923c>
    de58:	mov	r0, r9
    de5c:	bl	4110 <strlen@plt>
    de60:	cmp	r0, fp
    de64:	beq	def4 <main@@Base+0x92c8>
    de68:	ldr	r9, [r4, #20]!
    de6c:	cmp	r9, #0
    de70:	bne	de40 <main@@Base+0x9214>
    de74:	ldrb	r3, [r7]
    de78:	cmp	r3, #110	; 0x6e
    de7c:	beq	dfac <main@@Base+0x9380>
    de80:	ldr	r3, [r4, #4]
    de84:	tst	r3, #2
    de88:	bne	dfa0 <main@@Base+0x9374>
    de8c:	cmp	r5, #0
    de90:	beq	ded4 <main@@Base+0x92a8>
    de94:	ldr	fp, [pc, #444]	; e058 <main@@Base+0x942c>
    de98:	add	fp, pc, fp
    de9c:	mov	r2, #7
    dea0:	mov	r1, r5
    dea4:	mov	r0, fp
    dea8:	bl	43e0 <strncmp@plt>
    deac:	cmp	r0, #0
    deb0:	mov	r4, r6
    deb4:	bne	dec8 <main@@Base+0x929c>
    deb8:	mov	r0, r5
    debc:	bl	4110 <strlen@plt>
    dec0:	cmp	r0, #7
    dec4:	beq	e034 <main@@Base+0x9408>
    dec8:	ldr	r5, [r6, #20]!
    decc:	cmp	r5, #0
    ded0:	bne	de9c <main@@Base+0x9270>
    ded4:	ldr	r2, [pc, #384]	; e05c <main@@Base+0x9430>
    ded8:	mov	r0, #0
    dedc:	mov	r3, r7
    dee0:	add	r2, pc, r2
    dee4:	mov	r1, #16
    dee8:	bl	40f8 <av_log@plt>
    deec:	mvn	r0, #21
    def0:	b	df2c <main@@Base+0x9300>
    def4:	ldr	r3, [r4, #4]
    def8:	tst	r3, #2
    defc:	beq	df5c <main@@Base+0x9330>
    df00:	ldr	r8, [pc, #344]	; e060 <main@@Base+0x9434>
    df04:	add	r8, pc, r8
    df08:	str	r8, [sp]
    df0c:	mov	r3, r7
    df10:	mov	r0, sl
    df14:	add	r2, r4, #8
    df18:	add	r1, r4, #4
    df1c:	bl	db24 <main@@Base+0x8ef8>
    df20:	cmp	r0, #0
    df24:	ldrge	r0, [r4, #4]
    df28:	andge	r0, r0, #1
    df2c:	ldr	r3, [sp, #12]
    df30:	ldr	r2, [sp, #28]
    df34:	ldr	r3, [r3]
    df38:	cmp	r2, r3
    df3c:	bne	e04c <main@@Base+0x9420>
    df40:	add	sp, sp, #36	; 0x24
    df44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    df48:	ldr	r3, [r5, #4]
    df4c:	mov	r4, r5
    df50:	tst	r3, #2
    df54:	ldrne	r8, [pc, #264]	; e064 <main@@Base+0x9438>
    df58:	addne	r8, pc, r8
    df5c:	cmp	r8, #0
    df60:	movne	r3, #0
    df64:	andeq	r3, r3, #1
    df68:	cmp	r3, #0
    df6c:	beq	df08 <main@@Base+0x92dc>
    df70:	ldr	r2, [pc, #240]	; e068 <main@@Base+0x943c>
    df74:	mov	r0, #0
    df78:	mov	r3, r7
    df7c:	add	r2, pc, r2
    df80:	mov	r1, #16
    df84:	bl	40f8 <av_log@plt>
    df88:	mvn	r0, #21
    df8c:	b	df2c <main@@Base+0x9300>
    df90:	mov	r0, r7
    df94:	bl	4110 <strlen@plt>
    df98:	mov	fp, r0
    df9c:	b	de2c <main@@Base+0x9200>
    dfa0:	ldr	r8, [pc, #196]	; e06c <main@@Base+0x9440>
    dfa4:	add	r8, pc, r8
    dfa8:	b	de8c <main@@Base+0x9260>
    dfac:	ldrb	r3, [r7, #1]
    dfb0:	cmp	r3, #111	; 0x6f
    dfb4:	bne	de80 <main@@Base+0x9254>
    dfb8:	add	r4, r7, #2
    dfbc:	mov	r0, r4
    dfc0:	mov	r1, #58	; 0x3a
    dfc4:	bl	4494 <strchr@plt>
    dfc8:	cmp	r0, #0
    dfcc:	beq	e03c <main@@Base+0x9410>
    dfd0:	sub	r3, r0, r4
    dfd4:	mov	r2, r3
    dfd8:	cmp	r5, #0
    dfdc:	beq	ded4 <main@@Base+0x92a8>
    dfe0:	mov	fp, r5
    dfe4:	str	r5, [sp, #16]
    dfe8:	mov	r9, r2
    dfec:	mov	r5, r6
    dff0:	str	r6, [sp, #20]
    dff4:	mov	r2, r9
    dff8:	mov	r1, fp
    dffc:	mov	r0, r4
    e000:	bl	43e0 <strncmp@plt>
    e004:	cmp	r0, #0
    e008:	bne	e01c <main@@Base+0x93f0>
    e00c:	mov	r0, fp
    e010:	bl	4110 <strlen@plt>
    e014:	cmp	r0, r9
    e018:	beq	df48 <main@@Base+0x931c>
    e01c:	ldr	fp, [r5, #20]!
    e020:	cmp	fp, #0
    e024:	bne	dff4 <main@@Base+0x93c8>
    e028:	ldr	r5, [sp, #16]
    e02c:	ldr	r6, [sp, #20]
    e030:	b	de94 <main@@Base+0x9268>
    e034:	ldr	r3, [r6, #4]
    e038:	b	df5c <main@@Base+0x9330>
    e03c:	mov	r0, r4
    e040:	bl	4110 <strlen@plt>
    e044:	mov	r2, r0
    e048:	b	dfd8 <main@@Base+0x93ac>
    e04c:	bl	3f00 <__stack_chk_fail@plt>
    e050:	andeq	r3, r2, ip, lsl #28
    e054:	andeq	r0, r0, r8, ror #7
    e058:	muleq	r0, r8, sp
    e05c:	andeq	pc, r0, r8, asr sp	; <UNPREDICTABLE>
    e060:	andeq	r1, r1, r0, ror #10
    e064:	ldrdeq	r1, [r1], -r4
    e068:	ldrdeq	pc, [r0], -r8
    e06c:	andeq	r1, r1, r0, asr #9
    e070:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e074:	mov	r6, r1
    e078:	ldr	r1, [pc, #368]	; e1f0 <main@@Base+0x95c4>
    e07c:	ldr	ip, [pc, #368]	; e1f4 <main@@Base+0x95c8>
    e080:	add	r1, pc, r1
    e084:	ldr	sl, [r1, ip]
    e088:	sub	sp, sp, #12
    e08c:	ldr	r1, [sl]
    e090:	cmp	r6, #1
    e094:	str	r1, [sp, #4]
    e098:	ldr	r9, [sp, #48]	; 0x30
    e09c:	ble	e140 <main@@Base+0x9514>
    e0a0:	mov	r7, #1
    e0a4:	cmp	r9, #0
    e0a8:	mov	r8, r0
    e0ac:	mov	r5, r2
    e0b0:	mov	fp, r3
    e0b4:	mov	r0, r7
    e0b8:	bne	e0d4 <main@@Base+0x94a8>
    e0bc:	b	e170 <main@@Base+0x9544>
    e0c0:	mov	r0, r8
    e0c4:	blx	r9
    e0c8:	mov	r0, r4
    e0cc:	cmp	r0, r6
    e0d0:	bge	e140 <main@@Base+0x9514>
    e0d4:	cmp	r7, #0
    e0d8:	add	r4, r0, #1
    e0dc:	lsl	r3, r0, #2
    e0e0:	ldr	r1, [r5, r0, lsl #2]
    e0e4:	beq	e0c0 <main@@Base+0x9494>
    e0e8:	ldrb	r2, [r1]
    e0ec:	cmp	r2, #45	; 0x2d
    e0f0:	bne	e0c0 <main@@Base+0x9494>
    e0f4:	ldrb	r2, [r1, #1]
    e0f8:	cmp	r2, #0
    e0fc:	beq	e0c0 <main@@Base+0x9494>
    e100:	cmp	r2, #45	; 0x2d
    e104:	bne	e114 <main@@Base+0x94e8>
    e108:	ldrb	r2, [r1, #2]
    e10c:	cmp	r2, #0
    e110:	beq	e1d8 <main@@Base+0x95ac>
    e114:	add	r3, r5, r3
    e118:	ldr	r2, [r3, #4]
    e11c:	add	r1, r1, #1
    e120:	mov	r3, fp
    e124:	mov	r0, r8
    e128:	bl	dde0 <main@@Base+0x91b4>
    e12c:	cmp	r0, #0
    e130:	blt	e1e4 <main@@Base+0x95b8>
    e134:	add	r0, r4, r0
    e138:	cmp	r0, r6
    e13c:	blt	e0d4 <main@@Base+0x94a8>
    e140:	ldr	r2, [sp, #4]
    e144:	ldr	r3, [sl]
    e148:	cmp	r2, r3
    e14c:	bne	e1ec <main@@Base+0x95c0>
    e150:	add	sp, sp, #12
    e154:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e158:	ldrb	r2, [r1, #1]
    e15c:	cmp	r2, #0
    e160:	bne	e194 <main@@Base+0x9568>
    e164:	mov	r0, r4
    e168:	cmp	r6, r0
    e16c:	ble	e140 <main@@Base+0x9514>
    e170:	cmp	r7, #0
    e174:	add	r4, r0, #1
    e178:	lsl	r3, r0, #2
    e17c:	ldr	r1, [r5, r0, lsl #2]
    e180:	beq	e164 <main@@Base+0x9538>
    e184:	ldrb	r2, [r1]
    e188:	cmp	r2, #45	; 0x2d
    e18c:	bne	e164 <main@@Base+0x9538>
    e190:	b	e158 <main@@Base+0x952c>
    e194:	cmp	r2, #45	; 0x2d
    e198:	bne	e1b0 <main@@Base+0x9584>
    e19c:	ldrb	r2, [r1, #2]
    e1a0:	cmp	r2, #0
    e1a4:	moveq	r0, r4
    e1a8:	moveq	r7, r2
    e1ac:	beq	e168 <main@@Base+0x953c>
    e1b0:	add	r3, r5, r3
    e1b4:	ldr	r2, [r3, #4]
    e1b8:	add	r1, r1, #1
    e1bc:	mov	r3, fp
    e1c0:	mov	r0, r8
    e1c4:	bl	dde0 <main@@Base+0x91b4>
    e1c8:	cmp	r0, #0
    e1cc:	blt	e1e4 <main@@Base+0x95b8>
    e1d0:	add	r0, r4, r0
    e1d4:	b	e168 <main@@Base+0x953c>
    e1d8:	mov	r0, r4
    e1dc:	mov	r7, r2
    e1e0:	b	e0cc <main@@Base+0x94a0>
    e1e4:	mov	r0, #1
    e1e8:	bl	902c <main@@Base+0x4400>
    e1ec:	bl	3f00 <__stack_chk_fail@plt>
    e1f0:	andeq	r3, r2, ip, ror fp
    e1f4:	andeq	r0, r0, r8, ror #7
    e1f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    e1fc:	mov	r6, r1
    e200:	ldr	r2, [pc, #332]	; e354 <main@@Base+0x9728>
    e204:	ldr	r3, [pc, #332]	; e358 <main@@Base+0x972c>
    e208:	ldr	r1, [r1]
    e20c:	add	r2, pc, r2
    e210:	ldr	sl, [r2, r3]
    e214:	ldr	r3, [r1]
    e218:	ldr	r2, [pc, #316]	; e35c <main@@Base+0x9730>
    e21c:	ldr	r1, [r6, #4]
    e220:	sub	sp, sp, #24
    e224:	ldr	ip, [sl]
    e228:	mov	r8, r0
    e22c:	str	r1, [sp]
    e230:	add	r2, pc, r2
    e234:	mov	r1, #48	; 0x30
    e238:	mov	r0, #0
    e23c:	str	ip, [sp, #20]
    e240:	bl	40f8 <av_log@plt>
    e244:	ldr	r3, [r6, #12]
    e248:	cmp	r3, #0
    e24c:	ble	e300 <main@@Base+0x96d4>
    e250:	mov	r5, #0
    e254:	ldr	r9, [pc, #260]	; e360 <main@@Base+0x9734>
    e258:	mov	r7, r5
    e25c:	add	r9, pc, r9
    e260:	b	e278 <main@@Base+0x964c>
    e264:	ldr	r3, [r6, #12]
    e268:	add	r7, r7, #1
    e26c:	cmp	r3, r7
    e270:	add	r5, r5, #12
    e274:	ble	e300 <main@@Base+0x96d4>
    e278:	ldr	r1, [r6]
    e27c:	ldr	r3, [r6, #8]
    e280:	ldr	r0, [r1, #8]
    e284:	add	r4, r3, r5
    e288:	cmp	r0, #0
    e28c:	ldr	r2, [r3, r5]
    e290:	beq	e2a0 <main@@Base+0x9674>
    e294:	ldr	r3, [r2, #4]
    e298:	ands	r0, r0, r3
    e29c:	beq	e31c <main@@Base+0x96f0>
    e2a0:	ldr	r1, [r4, #8]
    e2a4:	ldr	r3, [r4, #4]
    e2a8:	str	r1, [sp, #4]
    e2ac:	ldr	r2, [r2, #12]
    e2b0:	mov	r1, #48	; 0x30
    e2b4:	str	r2, [sp]
    e2b8:	mov	r0, #0
    e2bc:	mov	r2, r9
    e2c0:	bl	40f8 <av_log@plt>
    e2c4:	ldm	r4, {r1, r3}
    e2c8:	ldr	r0, [r4, #8]
    e2cc:	add	r2, r1, #8
    e2d0:	str	r0, [sp]
    e2d4:	add	r1, r1, #4
    e2d8:	mov	r0, r8
    e2dc:	bl	db24 <main@@Base+0x8ef8>
    e2e0:	cmp	r0, #0
    e2e4:	bge	e264 <main@@Base+0x9638>
    e2e8:	ldr	r2, [sp, #20]
    e2ec:	ldr	r3, [sl]
    e2f0:	cmp	r2, r3
    e2f4:	bne	e350 <main@@Base+0x9724>
    e2f8:	add	sp, sp, #24
    e2fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    e300:	ldr	r2, [pc, #92]	; e364 <main@@Base+0x9738>
    e304:	mov	r0, #0
    e308:	add	r2, pc, r2
    e30c:	mov	r1, #48	; 0x30
    e310:	bl	40f8 <av_log@plt>
    e314:	mov	r0, #0
    e318:	b	e2e8 <main@@Base+0x96bc>
    e31c:	ldr	ip, [r6, #4]
    e320:	ldr	r3, [r4, #4]
    e324:	str	ip, [sp, #8]
    e328:	ldr	r1, [r1]
    e32c:	str	r1, [sp, #4]
    e330:	ldr	r2, [r2, #12]
    e334:	mov	r1, #16
    e338:	str	r2, [sp]
    e33c:	ldr	r2, [pc, #36]	; e368 <main@@Base+0x973c>
    e340:	add	r2, pc, r2
    e344:	bl	40f8 <av_log@plt>
    e348:	mvn	r0, #21
    e34c:	b	e2e8 <main@@Base+0x96bc>
    e350:	bl	3f00 <__stack_chk_fail@plt>
    e354:	strdeq	r3, [r2], -r0
    e358:	andeq	r0, r0, r8, ror #7
    e35c:	andeq	pc, r0, r8, asr #20
    e360:	andeq	pc, r0, r4, lsl fp	; <UNPREDICTABLE>
    e364:	muleq	r0, r4, r9
    e368:	andeq	pc, r0, r8, lsl #19
    e36c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e370:	mov	r4, r0
    e374:	sub	sp, sp, #76	; 0x4c
    e378:	ldr	r5, [sp, #116]	; 0x74
    e37c:	ldr	r9, [pc, #2032]	; eb74 <main@@Base+0x9f48>
    e380:	ldr	ip, [pc, #2032]	; eb78 <main@@Base+0x9f4c>
    e384:	str	r0, [sp, #16]
    e388:	add	r9, pc, r9
    e38c:	str	r5, [sp, #52]	; 0x34
    e390:	ldr	ip, [r9, ip]
    e394:	str	r3, [sp, #56]	; 0x38
    e398:	str	ip, [sp, #60]	; 0x3c
    e39c:	ldr	r3, [sp, #112]	; 0x70
    e3a0:	ldr	ip, [ip]
    e3a4:	str	r1, [sp, #28]
    e3a8:	str	r2, [sp, #20]
    e3ac:	mov	r1, #0
    e3b0:	mov	r2, #80	; 0x50
    e3b4:	str	ip, [sp, #68]	; 0x44
    e3b8:	str	r3, [sp, #40]	; 0x28
    e3bc:	bl	41e8 <memset@plt>
    e3c0:	str	r5, [r4, #40]	; 0x28
    e3c4:	mov	r0, r5
    e3c8:	mov	r1, #12
    e3cc:	bl	405c <av_mallocz_array@plt>
    e3d0:	cmp	r0, #0
    e3d4:	str	r0, [r4, #36]	; 0x24
    e3d8:	beq	eb68 <main@@Base+0x9f3c>
    e3dc:	ldr	r1, [r4, #40]	; 0x28
    e3e0:	cmp	r1, #0
    e3e4:	ble	e40c <main@@Base+0x97e0>
    e3e8:	mov	r3, #0
    e3ec:	add	r1, r1, r1, lsl #1
    e3f0:	ldr	ip, [sp, #40]	; 0x28
    e3f4:	lsl	r1, r1, #2
    e3f8:	add	r2, ip, r3
    e3fc:	str	r2, [r0, r3]
    e400:	add	r3, r3, #12
    e404:	cmp	r1, r3
    e408:	bne	e3f8 <main@@Base+0x97cc>
    e40c:	ldr	r2, [pc, #1896]	; eb7c <main@@Base+0x9f50>
    e410:	ldr	r3, [pc, #1896]	; eb80 <main@@Base+0x9f54>
    e414:	ldr	r1, [sp, #16]
    e418:	add	r3, pc, r3
    e41c:	add	r2, pc, r2
    e420:	strd	r2, [r1]
    e424:	bl	8e90 <main@@Base+0x4264>
    e428:	ldr	r2, [pc, #1876]	; eb84 <main@@Base+0x9f58>
    e42c:	mov	r1, #48	; 0x30
    e430:	add	r2, pc, r2
    e434:	mov	r0, #0
    e438:	bl	40f8 <av_log@plt>
    e43c:	ldr	r3, [sp, #28]
    e440:	cmp	r3, #1
    e444:	ble	e8cc <main@@Base+0x9ca0>
    e448:	mvn	r3, #1
    e44c:	mov	sl, #1
    e450:	str	r3, [sp, #44]	; 0x2c
    e454:	ldr	r3, [pc, #1836]	; eb88 <main@@Base+0x9f5c>
    e458:	mov	fp, r9
    e45c:	add	r3, pc, r3
    e460:	str	r3, [sp, #36]	; 0x24
    e464:	ldr	r3, [pc, #1824]	; eb8c <main@@Base+0x9f60>
    e468:	mov	r9, sl
    e46c:	add	r3, pc, r3
    e470:	str	r3, [sp, #48]	; 0x30
    e474:	b	e57c <main@@Base+0x9950>
    e478:	ldr	sl, [sp, #16]
    e47c:	mov	r1, #36	; 0x24
    e480:	ldr	r6, [sl, #36]	; 0x24
    e484:	mov	r5, #0
    e488:	mov	r2, r6
    e48c:	ldr	r3, [r2, #8]!
    e490:	ldr	r0, [r6, #4]
    e494:	add	r3, r3, #1
    e498:	bl	da38 <main@@Base+0x8e0c>
    e49c:	ldr	r4, [r6, #8]
    e4a0:	mov	r9, r0
    e4a4:	add	r4, r4, r4, lsl #3
    e4a8:	lsl	r4, r4, #2
    e4ac:	sub	r4, r4, #36	; 0x24
    e4b0:	add	r8, r0, r4
    e4b4:	mov	ip, r8
    e4b8:	add	lr, sl, #44	; 0x2c
    e4bc:	ldm	lr!, {r0, r1, r2, r3}
    e4c0:	str	r9, [r6, #4]
    e4c4:	stmia	ip!, {r0, r1, r2, r3}
    e4c8:	ldm	lr!, {r0, r1, r2, r3}
    e4cc:	stmia	ip!, {r0, r1, r2, r3}
    e4d0:	ldr	r2, [r6]
    e4d4:	ldr	r3, [pc, #1716]	; eb90 <main@@Base+0x9f64>
    e4d8:	str	r7, [r8, #4]
    e4dc:	str	r2, [r9, r4]
    e4e0:	ldr	r0, [fp, r3]
    e4e4:	ldr	r3, [pc, #1704]	; eb94 <main@@Base+0x9f68>
    e4e8:	ldr	r2, [r0]
    e4ec:	ldr	r1, [pc, #1700]	; eb98 <main@@Base+0x9f6c>
    e4f0:	str	r2, [r8, #28]
    e4f4:	ldr	ip, [fp, r3]
    e4f8:	ldr	r2, [pc, #1692]	; eb9c <main@@Base+0x9f70>
    e4fc:	ldr	lr, [ip]
    e500:	ldr	r9, [sp, #12]
    e504:	str	lr, [r8, #32]
    e508:	ldr	r1, [fp, r1]
    e50c:	ldr	r3, [pc, #1676]	; eba0 <main@@Base+0x9f74>
    e510:	ldr	lr, [r1]
    e514:	str	lr, [r8, #16]
    e518:	ldr	r2, [fp, r2]
    e51c:	ldr	lr, [r2]
    e520:	str	lr, [r8, #20]
    e524:	ldr	r3, [fp, r3]
    e528:	str	r5, [ip]
    e52c:	ldr	ip, [r3]
    e530:	str	r5, [r2]
    e534:	str	ip, [r8, #24]
    e538:	str	r5, [r3]
    e53c:	str	r5, [r1]
    e540:	str	r5, [r0]
    e544:	bl	8e90 <main@@Base+0x4264>
    e548:	mov	r1, r5
    e54c:	mov	r2, #36	; 0x24
    e550:	add	r0, sl, #44	; 0x2c
    e554:	bl	41e8 <memset@plt>
    e558:	ldr	r3, [sp, #40]	; 0x28
    e55c:	mov	r0, r5
    e560:	ldr	r3, [r3]
    e564:	ldr	r2, [sp, #48]	; 0x30
    e568:	mov	r1, #48	; 0x30
    e56c:	bl	40f8 <av_log@plt>
    e570:	ldr	r3, [sp, #28]
    e574:	cmp	r9, r3
    e578:	bge	e8c8 <main@@Base+0x9c9c>
    e57c:	ldr	r3, [sp, #20]
    e580:	ldr	r2, [sp, #36]	; 0x24
    e584:	ldr	r7, [r3, r9, lsl #2]
    e588:	mov	r1, #48	; 0x30
    e58c:	mov	r3, r7
    e590:	mov	r0, #0
    e594:	bl	40f8 <av_log@plt>
    e598:	ldrb	r3, [r7]
    e59c:	add	r2, r9, #1
    e5a0:	cmp	r3, #45	; 0x2d
    e5a4:	lsl	r3, r9, #2
    e5a8:	str	r2, [sp, #12]
    e5ac:	str	r3, [sp, #24]
    e5b0:	bne	e478 <main@@Base+0x984c>
    e5b4:	ldrb	r3, [r7, #1]
    e5b8:	cmp	r3, #45	; 0x2d
    e5bc:	str	r3, [sp, #32]
    e5c0:	beq	e920 <main@@Base+0x9cf4>
    e5c4:	ldr	r3, [sp, #44]	; 0x2c
    e5c8:	ldr	r2, [sp, #32]
    e5cc:	sub	r3, r9, r3
    e5d0:	clz	r3, r3
    e5d4:	cmp	r2, #0
    e5d8:	lsr	r3, r3, #5
    e5dc:	moveq	r3, #1
    e5e0:	cmp	r3, #0
    e5e4:	bne	e478 <main@@Base+0x984c>
    e5e8:	ldr	r6, [sp, #52]	; 0x34
    e5ec:	add	sl, r7, #1
    e5f0:	cmp	r6, #0
    e5f4:	ble	e634 <main@@Base+0x9a08>
    e5f8:	mov	r8, r3
    e5fc:	ldr	r5, [sp, #40]	; 0x28
    e600:	ldr	r0, [r5, #4]
    e604:	add	r4, r8, r8, lsl #1
    e608:	cmp	r0, #0
    e60c:	lsl	r4, r4, #2
    e610:	beq	e624 <main@@Base+0x99f8>
    e614:	mov	r1, sl
    e618:	bl	46c8 <strcmp@plt>
    e61c:	subs	r3, r0, #0
    e620:	beq	e788 <main@@Base+0x9b5c>
    e624:	add	r8, r8, #1
    e628:	cmp	r6, r8
    e62c:	add	r5, r5, #12
    e630:	bne	e600 <main@@Base+0x99d4>
    e634:	mov	r1, #58	; 0x3a
    e638:	mov	r0, sl
    e63c:	bl	4494 <strchr@plt>
    e640:	cmp	r0, #0
    e644:	subne	r5, r0, sl
    e648:	beq	e9dc <main@@Base+0x9db0>
    e64c:	ldr	r4, [sp, #56]	; 0x38
    e650:	ldr	r6, [r4]
    e654:	cmp	r6, #0
    e658:	beq	e690 <main@@Base+0x9a64>
    e65c:	mov	r2, r5
    e660:	mov	r1, r6
    e664:	mov	r0, sl
    e668:	bl	43e0 <strncmp@plt>
    e66c:	cmp	r0, #0
    e670:	bne	e684 <main@@Base+0x9a58>
    e674:	mov	r0, r6
    e678:	bl	4110 <strlen@plt>
    e67c:	cmp	r0, r5
    e680:	beq	e938 <main@@Base+0x9d0c>
    e684:	ldr	r6, [r4, #20]!
    e688:	cmp	r6, #0
    e68c:	bne	e65c <main@@Base+0x9a30>
    e690:	ldr	r3, [sp, #24]
    e694:	add	r8, r3, #4
    e698:	ldr	r3, [sp, #20]
    e69c:	ldr	r2, [r3, r8]
    e6a0:	add	r5, r3, r8
    e6a4:	cmp	r2, #0
    e6a8:	beq	e6d4 <main@@Base+0x9aa8>
    e6ac:	mov	r1, sl
    e6b0:	mov	r0, #0
    e6b4:	bl	a91c <main@@Base+0x5cf0>
    e6b8:	cmp	r0, #0
    e6bc:	bge	ead8 <main@@Base+0x9eac>
    e6c0:	ldr	r3, [pc, #1244]	; eba4 <main@@Base+0x9f78>
    e6c4:	cmp	r0, r3
    e6c8:	bne	eb20 <main@@Base+0x9ef4>
    e6cc:	ldrb	r3, [r7, #1]
    e6d0:	str	r3, [sp, #32]
    e6d4:	ldr	r3, [sp, #32]
    e6d8:	cmp	r3, #110	; 0x6e
    e6dc:	bne	e74c <main@@Base+0x9b20>
    e6e0:	ldrb	r3, [r7, #2]
    e6e4:	cmp	r3, #111	; 0x6f
    e6e8:	bne	e74c <main@@Base+0x9b20>
    e6ec:	add	r7, r7, #3
    e6f0:	mov	r0, r7
    e6f4:	mov	r1, #58	; 0x3a
    e6f8:	bl	4494 <strchr@plt>
    e6fc:	cmp	r0, #0
    e700:	subne	r5, r0, r7
    e704:	beq	ea9c <main@@Base+0x9e70>
    e708:	ldr	r4, [sp, #56]	; 0x38
    e70c:	ldr	r6, [r4]
    e710:	cmp	r6, #0
    e714:	beq	e74c <main@@Base+0x9b20>
    e718:	mov	r2, r5
    e71c:	mov	r1, r6
    e720:	mov	r0, r7
    e724:	bl	43e0 <strncmp@plt>
    e728:	cmp	r0, #0
    e72c:	bne	e740 <main@@Base+0x9b14>
    e730:	mov	r0, r6
    e734:	bl	4110 <strlen@plt>
    e738:	cmp	r0, r5
    e73c:	beq	e9ec <main@@Base+0x9dc0>
    e740:	ldr	r6, [r4, #20]!
    e744:	cmp	r6, #0
    e748:	bne	e718 <main@@Base+0x9aec>
    e74c:	ldr	r2, [pc, #1108]	; eba8 <main@@Base+0x9f7c>
    e750:	mov	r3, sl
    e754:	add	r2, pc, r2
    e758:	mov	r1, #16
    e75c:	mov	r0, #0
    e760:	bl	40f8 <av_log@plt>
    e764:	ldr	r4, [pc, #1080]	; eba4 <main@@Base+0x9f78>
    e768:	ldr	r3, [sp, #60]	; 0x3c
    e76c:	ldr	r2, [sp, #68]	; 0x44
    e770:	ldr	r3, [r3]
    e774:	mov	r0, r4
    e778:	cmp	r2, r3
    e77c:	bne	eb70 <main@@Base+0x9f44>
    e780:	add	sp, sp, #76	; 0x4c
    e784:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e788:	mov	r6, r3
    e78c:	ldrd	r2, [sp, #20]
    e790:	add	r8, r3, r2
    e794:	ldr	r3, [r8, #4]
    e798:	add	r9, r9, #2
    e79c:	cmp	r3, #0
    e7a0:	str	r3, [sp, #12]
    e7a4:	beq	eb04 <main@@Base+0x9ed8>
    e7a8:	ldr	sl, [sp, #16]
    e7ac:	mov	r1, #36	; 0x24
    e7b0:	ldr	r3, [sl, #36]	; 0x24
    e7b4:	add	r8, r3, r4
    e7b8:	mov	r2, r8
    e7bc:	str	r3, [sp, #24]
    e7c0:	ldr	r3, [r2, #8]!
    e7c4:	ldr	r0, [r8, #4]
    e7c8:	add	r3, r3, #1
    e7cc:	bl	da38 <main@@Base+0x8e0c>
    e7d0:	ldr	r7, [r8, #8]
    e7d4:	str	sl, [sp, #16]
    e7d8:	add	r7, r7, r7, lsl #3
    e7dc:	lsl	r7, r7, #2
    e7e0:	sub	r3, r7, #36	; 0x24
    e7e4:	add	lr, sl, #44	; 0x2c
    e7e8:	add	sl, r0, r3
    e7ec:	mov	r7, r0
    e7f0:	mov	ip, sl
    e7f4:	str	r3, [sp, #32]
    e7f8:	ldm	lr!, {r0, r1, r2, r3}
    e7fc:	str	r7, [r8, #4]
    e800:	stmia	ip!, {r0, r1, r2, r3}
    e804:	ldm	lr!, {r0, r1, r2, r3}
    e808:	stmia	ip!, {r0, r1, r2, r3}
    e80c:	ldr	r3, [sp, #24]
    e810:	ldr	r1, [sp, #32]
    e814:	ldr	r2, [r3, r4]
    e818:	ldr	r4, [sp, #12]
    e81c:	ldr	r3, [pc, #876]	; eb90 <main@@Base+0x9f64>
    e820:	str	r4, [sl, #4]
    e824:	str	r2, [r7, r1]
    e828:	ldr	r0, [fp, r3]
    e82c:	ldr	r3, [pc, #864]	; eb94 <main@@Base+0x9f68>
    e830:	ldr	r2, [r0]
    e834:	ldr	r1, [pc, #860]	; eb98 <main@@Base+0x9f6c>
    e838:	str	r2, [sl, #28]
    e83c:	ldr	ip, [fp, r3]
    e840:	ldr	r2, [pc, #852]	; eb9c <main@@Base+0x9f70>
    e844:	ldr	lr, [ip]
    e848:	ldr	r3, [pc, #848]	; eba0 <main@@Base+0x9f74>
    e84c:	str	lr, [sl, #32]
    e850:	ldr	r1, [fp, r1]
    e854:	ldr	lr, [r1]
    e858:	str	lr, [sl, #16]
    e85c:	ldr	r2, [fp, r2]
    e860:	ldr	lr, [r2]
    e864:	str	lr, [sl, #20]
    e868:	ldr	r3, [fp, r3]
    e86c:	str	r6, [ip]
    e870:	ldr	ip, [r3]
    e874:	str	r6, [r2]
    e878:	str	ip, [sl, #24]
    e87c:	str	r6, [r3]
    e880:	str	r6, [r1]
    e884:	str	r6, [r0]
    e888:	bl	8e90 <main@@Base+0x4264>
    e88c:	ldr	sl, [sp, #16]
    e890:	mov	r2, #36	; 0x24
    e894:	mov	r1, r6
    e898:	add	r0, sl, #44	; 0x2c
    e89c:	bl	41e8 <memset@plt>
    e8a0:	ldr	r2, [pc, #772]	; ebac <main@@Base+0x9f80>
    e8a4:	str	r4, [sp]
    e8a8:	ldr	r3, [r5]
    e8ac:	mov	r0, r6
    e8b0:	add	r2, pc, r2
    e8b4:	mov	r1, #48	; 0x30
    e8b8:	bl	40f8 <av_log@plt>
    e8bc:	ldr	r3, [sp, #28]
    e8c0:	cmp	r9, r3
    e8c4:	blt	e57c <main@@Base+0x9950>
    e8c8:	mov	r9, fp
    e8cc:	ldr	r3, [sp, #16]
    e8d0:	ldr	r3, [r3, #56]	; 0x38
    e8d4:	cmp	r3, #0
    e8d8:	bne	e8f0 <main@@Base+0x9cc4>
    e8dc:	ldr	r3, [pc, #692]	; eb98 <main@@Base+0x9f6c>
    e8e0:	ldr	r3, [r9, r3]
    e8e4:	ldr	r3, [r3]
    e8e8:	cmp	r3, #0
    e8ec:	beq	eaac <main@@Base+0x9e80>
    e8f0:	ldr	r2, [pc, #696]	; ebb0 <main@@Base+0x9f84>
    e8f4:	mov	r1, #24
    e8f8:	add	r2, pc, r2
    e8fc:	mov	r0, #0
    e900:	bl	40f8 <av_log@plt>
    e904:	ldr	r2, [pc, #680]	; ebb4 <main@@Base+0x9f88>
    e908:	mov	r1, #48	; 0x30
    e90c:	add	r2, pc, r2
    e910:	mov	r0, #0
    e914:	bl	40f8 <av_log@plt>
    e918:	mov	r4, #0
    e91c:	b	e768 <main@@Base+0x9b3c>
    e920:	ldrb	r3, [r7, #2]
    e924:	cmp	r3, #0
    e928:	bne	e5c4 <main@@Base+0x9998>
    e92c:	str	r2, [sp, #44]	; 0x2c
    e930:	mov	r9, r2
    e934:	b	e570 <main@@Base+0x9944>
    e938:	ldr	r3, [r4, #4]
    e93c:	tst	r3, #2048	; 0x800
    e940:	bne	ea74 <main@@Base+0x9e48>
    e944:	tst	r3, #1
    e948:	beq	ea8c <main@@Base+0x9e60>
    e94c:	ldr	r2, [sp, #20]
    e950:	ldr	r1, [sp, #24]
    e954:	add	r9, r9, #2
    e958:	add	r8, r2, r1
    e95c:	ldr	r6, [r8, #4]
    e960:	cmp	r6, #0
    e964:	beq	eb48 <main@@Base+0x9f1c>
    e968:	tst	r3, #57344	; 0xe000
    e96c:	ldrne	r3, [sp, #16]
    e970:	ldreq	r5, [sp, #16]
    e974:	addne	r5, r3, #44	; 0x2c
    e978:	mov	r2, r5
    e97c:	ldr	r3, [r2, #12]!
    e980:	mov	r1, #12
    e984:	add	r3, r3, #1
    e988:	ldr	r0, [r5, #8]
    e98c:	bl	da38 <main@@Base+0x8e0c>
    e990:	ldr	r3, [r5, #12]
    e994:	str	r0, [r5, #8]
    e998:	add	r3, r3, r3, lsl #1
    e99c:	lsl	r3, r3, #2
    e9a0:	sub	r3, r3, #12
    e9a4:	add	r2, r0, r3
    e9a8:	str	r4, [r0, r3]
    e9ac:	str	sl, [r2, #4]
    e9b0:	str	r6, [r2, #8]
    e9b4:	str	r6, [sp, #4]
    e9b8:	ldr	r2, [r4, #12]
    e9bc:	ldr	r3, [r4]
    e9c0:	str	r2, [sp]
    e9c4:	ldr	r2, [pc, #492]	; ebb8 <main@@Base+0x9f8c>
    e9c8:	mov	r1, #48	; 0x30
    e9cc:	add	r2, pc, r2
    e9d0:	mov	r0, #0
    e9d4:	bl	40f8 <av_log@plt>
    e9d8:	b	e570 <main@@Base+0x9944>
    e9dc:	mov	r0, sl
    e9e0:	bl	4110 <strlen@plt>
    e9e4:	mov	r5, r0
    e9e8:	b	e64c <main@@Base+0x9a20>
    e9ec:	ldr	r3, [r4, #4]
    e9f0:	tst	r3, #2
    e9f4:	beq	e74c <main@@Base+0x9b20>
    e9f8:	tst	r3, #57344	; 0xe000
    e9fc:	ldrne	r3, [sp, #16]
    ea00:	ldreq	r5, [sp, #16]
    ea04:	addne	r5, r3, #44	; 0x2c
    ea08:	mov	r2, r5
    ea0c:	ldr	r3, [r2, #12]!
    ea10:	mov	r1, #12
    ea14:	add	r3, r3, #1
    ea18:	ldr	r0, [r5, #8]
    ea1c:	bl	da38 <main@@Base+0x8e0c>
    ea20:	ldr	r3, [r5, #12]
    ea24:	ldr	r2, [pc, #400]	; ebbc <main@@Base+0x9f90>
    ea28:	add	r3, r3, r3, lsl #1
    ea2c:	lsl	r3, r3, #2
    ea30:	sub	r3, r3, #12
    ea34:	add	ip, r0, r3
    ea38:	add	r2, pc, r2
    ea3c:	ldr	r1, [r4, #12]
    ea40:	str	r0, [r5, #8]
    ea44:	str	r4, [r0, r3]
    ea48:	ldr	r3, [r4]
    ea4c:	str	r2, [ip, #8]
    ea50:	ldr	r2, [pc, #360]	; ebc0 <main@@Base+0x9f94>
    ea54:	str	sl, [ip, #4]
    ea58:	add	r2, pc, r2
    ea5c:	str	r1, [sp]
    ea60:	mov	r0, #0
    ea64:	mov	r1, #48	; 0x30
    ea68:	ldr	r9, [sp, #12]
    ea6c:	bl	40f8 <av_log@plt>
    ea70:	b	e570 <main@@Base+0x9944>
    ea74:	ldr	r2, [sp, #20]
    ea78:	ldr	r1, [sp, #24]
    ea7c:	add	r9, r9, #2
    ea80:	add	r8, r2, r1
    ea84:	ldr	r6, [r8, #4]
    ea88:	b	e968 <main@@Base+0x9d3c>
    ea8c:	ldr	r6, [pc, #304]	; ebc4 <main@@Base+0x9f98>
    ea90:	ldr	r9, [sp, #12]
    ea94:	add	r6, pc, r6
    ea98:	b	e968 <main@@Base+0x9d3c>
    ea9c:	mov	r0, r7
    eaa0:	bl	4110 <strlen@plt>
    eaa4:	mov	r5, r0
    eaa8:	b	e708 <main@@Base+0x9adc>
    eaac:	ldr	r3, [pc, #232]	; eb9c <main@@Base+0x9f70>
    eab0:	ldr	r3, [r9, r3]
    eab4:	ldr	r3, [r3]
    eab8:	cmp	r3, #0
    eabc:	bne	e8f0 <main@@Base+0x9cc4>
    eac0:	ldr	r3, [pc, #216]	; eba0 <main@@Base+0x9f74>
    eac4:	ldr	r3, [r9, r3]
    eac8:	ldr	r3, [r3]
    eacc:	cmp	r3, #0
    ead0:	bne	e8f0 <main@@Base+0x9cc4>
    ead4:	b	e904 <main@@Base+0x9cd8>
    ead8:	ldr	r3, [sp, #20]
    eadc:	mov	r1, #48	; 0x30
    eae0:	ldr	r2, [r3, r8]
    eae4:	mov	r0, #0
    eae8:	str	r2, [sp]
    eaec:	ldr	r2, [pc, #212]	; ebc8 <main@@Base+0x9f9c>
    eaf0:	mov	r3, sl
    eaf4:	add	r2, pc, r2
    eaf8:	add	r9, r9, #2
    eafc:	bl	40f8 <av_log@plt>
    eb00:	b	e570 <main@@Base+0x9944>
    eb04:	ldr	r2, [pc, #192]	; ebcc <main@@Base+0x9fa0>
    eb08:	mov	r3, sl
    eb0c:	add	r2, pc, r2
    eb10:	mov	r1, #16
    eb14:	bl	40f8 <av_log@plt>
    eb18:	mvn	r4, #21
    eb1c:	b	e768 <main@@Base+0x9b3c>
    eb20:	ldr	r2, [r5]
    eb24:	mov	r4, r0
    eb28:	str	r2, [sp]
    eb2c:	ldr	r2, [pc, #156]	; ebd0 <main@@Base+0x9fa4>
    eb30:	mov	r3, sl
    eb34:	add	r2, pc, r2
    eb38:	mov	r1, #16
    eb3c:	mov	r0, #0
    eb40:	bl	40f8 <av_log@plt>
    eb44:	b	e768 <main@@Base+0x9b3c>
    eb48:	ldr	r2, [pc, #132]	; ebd4 <main@@Base+0x9fa8>
    eb4c:	mov	r3, sl
    eb50:	mov	r0, r6
    eb54:	add	r2, pc, r2
    eb58:	mov	r1, #16
    eb5c:	bl	40f8 <av_log@plt>
    eb60:	mvn	r4, #21
    eb64:	b	e768 <main@@Base+0x9b3c>
    eb68:	mov	r0, #1
    eb6c:	bl	902c <main@@Base+0x4400>
    eb70:	bl	3f00 <__stack_chk_fail@plt>
    eb74:	andeq	r3, r2, r4, ror r8
    eb78:	andeq	r0, r0, r8, ror #7
    eb7c:	andeq	r2, r2, ip, ror #10
    eb80:	muleq	r1, r0, r4
    eb84:	andeq	pc, r0, ip, ror #18
    eb88:	andeq	pc, r0, ip, asr r9	; <UNPREDICTABLE>
    eb8c:	andeq	pc, r0, r4, ror #18
    eb90:	ldrdeq	r0, [r0], -r8
    eb94:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    eb98:	andeq	r0, r0, ip, ror #7
    eb9c:	andeq	r0, r0, ip, lsr #7
    eba0:	andeq	r0, r0, r0, ror #7
    eba4:	blge	febfabcc <__bss_end__@@Base+0xfebc7d00>
    eba8:	muleq	r0, ip, r7
    ebac:	andeq	pc, r0, r8, asr r5	; <UNPREDICTABLE>
    ebb0:	andeq	pc, r0, r4, lsl r6	; <UNPREDICTABLE>
    ebb4:	andeq	pc, r0, r4, lsr r6	; <UNPREDICTABLE>
    ebb8:	andeq	pc, r0, r0, ror #8
    ebbc:	strdeq	r0, [r1], -r4
    ebc0:	andeq	pc, r0, r8, ror #8
    ebc4:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
    ebc8:	andeq	pc, r0, ip, ror #6
    ebcc:	ldrdeq	pc, [r0], -r8
    ebd0:	andeq	pc, r0, ip, asr r3	; <UNPREDICTABLE>
    ebd4:	muleq	r0, r0, r2
    ebd8:	push	{r4, lr}
    ebdc:	vpush	{d8-d10}
    ebe0:	ldr	r3, [pc, #216]	; ecc0 <main@@Base+0xa094>
    ebe4:	ldr	r1, [pc, #216]	; ecc4 <main@@Base+0xa098>
    ebe8:	add	r3, pc, r3
    ebec:	ldr	r4, [r3, r1]
    ebf0:	sub	sp, sp, #8
    ebf4:	ldr	r3, [r4]
    ebf8:	mov	r2, #0
    ebfc:	mov	r1, #5
    ec00:	str	r3, [sp, #4]
    ec04:	bl	4134 <av_stream_get_side_data@plt>
    ec08:	cmp	r0, #0
    ec0c:	beq	ec8c <main@@Base+0xa060>
    ec10:	bl	43bc <av_display_rotation_get@plt>
    ec14:	vldr	d10, [pc, #124]	; ec98 <main@@Base+0xa06c>
    ec18:	vneg.f64	d8, d0
    ec1c:	vldr	d7, [pc, #124]	; eca0 <main@@Base+0xa074>
    ec20:	vdiv.f64	d0, d8, d10
    ec24:	vadd.f64	d0, d0, d7
    ec28:	bl	4158 <floor@plt>
    ec2c:	vldr	d9, [pc, #116]	; eca8 <main@@Base+0xa07c>
    ec30:	vmls.f64	d8, d0, d10
    ec34:	vdiv.f64	d0, d8, d9
    ec38:	bl	4698 <round@plt>
    ec3c:	vmov.f64	d7, d8
    ec40:	vmls.f64	d7, d0, d9
    ec44:	vldr	d6, [pc, #100]	; ecb0 <main@@Base+0xa084>
    ec48:	vabs.f64	d7, d7
    ec4c:	vcmpe.f64	d7, d6
    ec50:	vmrs	APSR_nzcv, fpscr
    ec54:	ble	ec6c <main@@Base+0xa040>
    ec58:	ldr	r2, [pc, #104]	; ecc8 <main@@Base+0xa09c>
    ec5c:	mov	r1, #24
    ec60:	add	r2, pc, r2
    ec64:	mov	r0, #0
    ec68:	bl	40f8 <av_log@plt>
    ec6c:	ldr	r2, [sp, #4]
    ec70:	ldr	r3, [r4]
    ec74:	vmov.f64	d0, d8
    ec78:	cmp	r2, r3
    ec7c:	bne	ec94 <main@@Base+0xa068>
    ec80:	add	sp, sp, #8
    ec84:	vpop	{d8-d10}
    ec88:	pop	{r4, pc}
    ec8c:	vldr	d8, [pc, #36]	; ecb8 <main@@Base+0xa08c>
    ec90:	b	ec6c <main@@Base+0xa040>
    ec94:	bl	3f00 <__stack_chk_fail@plt>
    ec98:	andeq	r0, r0, r0
    ec9c:	rsbsmi	r8, r6, r0
    eca0:			; <UNDEFINED> instruction: 0x47ae147b
    eca4:	svccc	0x00647ae1
    eca8:	andeq	r0, r0, r0
    ecac:	subsmi	r8, r6, r0
    ecb0:	andeq	r0, r0, r0
    ecb4:	andmi	r0, r0, r0
    ecb8:	andeq	r0, r0, r0
    ecbc:	andhi	r0, r0, r0
    ecc0:	andeq	r3, r2, r4, lsl r0
    ecc4:	andeq	r0, r0, r8, ror #7
    ecc8:	andeq	pc, r0, r8, lsl #6
    eccc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    ecd0:	mov	r4, #0
    ecd4:	ldr	r3, [pc, #308]	; ee10 <main@@Base+0xa1e4>
    ecd8:	ldr	r1, [pc, #308]	; ee14 <main@@Base+0xa1e8>
    ecdc:	add	r3, pc, r3
    ece0:	ldr	r6, [r3, r1]
    ece4:	sub	sp, sp, #16
    ece8:	ldr	r3, [r6]
    ecec:	mov	r5, r2
    ecf0:	str	r3, [sp, #12]
    ecf4:	str	r4, [sp, #4]
    ecf8:	str	r4, [sp, #8]
    ecfc:	bl	45cc <av_log_get_level@plt>
    ed00:	add	r7, sp, #8
    ed04:	mov	r9, r0
    ed08:	mov	r0, #16
    ed0c:	bl	3eac <av_log_set_level@plt>
    ed10:	mov	r0, r5
    ed14:	mov	r2, r7
    ed18:	add	r1, sp, #4
    ed1c:	bl	7808 <main@@Base+0x2bdc>
    ed20:	subs	r8, r0, #0
    ed24:	blt	edd8 <main@@Base+0xa1ac>
    ed28:	ldr	sl, [pc, #232]	; ee18 <main@@Base+0xa1ec>
    ed2c:	add	sl, pc, sl
    ed30:	mov	r0, r4
    ed34:	bl	45b4 <av_input_audio_device_next@plt>
    ed38:	subs	r4, r0, #0
    ed3c:	beq	ed90 <main@@Base+0xa164>
    ed40:	ldr	r5, [r4]
    ed44:	mov	r1, sl
    ed48:	mov	r0, r5
    ed4c:	bl	46c8 <strcmp@plt>
    ed50:	cmp	r0, #0
    ed54:	beq	ed30 <main@@Base+0xa104>
    ed58:	ldr	r0, [sp, #4]
    ed5c:	cmp	r0, #0
    ed60:	beq	ed74 <main@@Base+0xa148>
    ed64:	mov	r1, r5
    ed68:	bl	46bc <av_match_name@plt>
    ed6c:	cmp	r0, #0
    ed70:	beq	ed30 <main@@Base+0xa104>
    ed74:	ldr	r1, [sp, #8]
    ed78:	mov	r0, r4
    ed7c:	bl	78f4 <main@@Base+0x2cc8>
    ed80:	mov	r0, r4
    ed84:	bl	45b4 <av_input_audio_device_next@plt>
    ed88:	subs	r4, r0, #0
    ed8c:	bne	ed40 <main@@Base+0xa114>
    ed90:	mov	r0, r4
    ed94:	bl	4194 <av_input_video_device_next@plt>
    ed98:	subs	r4, r0, #0
    ed9c:	beq	edd8 <main@@Base+0xa1ac>
    eda0:	ldr	r0, [sp, #4]
    eda4:	cmp	r0, #0
    eda8:	beq	edbc <main@@Base+0xa190>
    edac:	ldr	r1, [r4]
    edb0:	bl	46bc <av_match_name@plt>
    edb4:	cmp	r0, #0
    edb8:	beq	ed90 <main@@Base+0xa164>
    edbc:	ldr	r1, [sp, #8]
    edc0:	mov	r0, r4
    edc4:	bl	78f4 <main@@Base+0x2cc8>
    edc8:	mov	r0, r4
    edcc:	bl	4194 <av_input_video_device_next@plt>
    edd0:	subs	r4, r0, #0
    edd4:	bne	eda0 <main@@Base+0xa174>
    edd8:	mov	r0, r7
    eddc:	bl	3ee8 <av_dict_free@plt>
    ede0:	ldr	r0, [sp, #4]
    ede4:	bl	46ec <av_free@plt>
    ede8:	mov	r0, r9
    edec:	bl	3eac <av_log_set_level@plt>
    edf0:	ldr	r2, [sp, #12]
    edf4:	ldr	r3, [r6]
    edf8:	mov	r0, r8
    edfc:	cmp	r2, r3
    ee00:	bne	ee0c <main@@Base+0xa1e0>
    ee04:	add	sp, sp, #16
    ee08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    ee0c:	bl	3f00 <__stack_chk_fail@plt>
    ee10:	andeq	r2, r2, r0, lsr #30
    ee14:	andeq	r0, r0, r8, ror #7
    ee18:	andeq	pc, r0, ip, ror #5
    ee1c:	push	{r4, r5, r6, r7, r8, lr}
    ee20:	mov	r4, #0
    ee24:	ldr	r3, [pc, #276]	; ef40 <main@@Base+0xa314>
    ee28:	ldr	r1, [pc, #276]	; ef44 <main@@Base+0xa318>
    ee2c:	add	r3, pc, r3
    ee30:	ldr	r5, [r3, r1]
    ee34:	sub	sp, sp, #16
    ee38:	ldr	r3, [r5]
    ee3c:	mov	r7, r2
    ee40:	str	r3, [sp, #12]
    ee44:	str	r4, [sp, #4]
    ee48:	str	r4, [sp, #8]
    ee4c:	bl	45cc <av_log_get_level@plt>
    ee50:	add	r6, sp, #8
    ee54:	mov	r8, r0
    ee58:	mov	r0, #16
    ee5c:	bl	3eac <av_log_set_level@plt>
    ee60:	mov	r0, r7
    ee64:	mov	r2, r6
    ee68:	add	r1, sp, #4
    ee6c:	bl	7808 <main@@Base+0x2bdc>
    ee70:	subs	r7, r0, #0
    ee74:	blt	ef08 <main@@Base+0xa2dc>
    ee78:	mov	r0, r4
    ee7c:	bl	4128 <av_output_audio_device_next@plt>
    ee80:	subs	r4, r0, #0
    ee84:	beq	eec0 <main@@Base+0xa294>
    ee88:	ldr	r0, [sp, #4]
    ee8c:	cmp	r0, #0
    ee90:	beq	eea4 <main@@Base+0xa278>
    ee94:	ldr	r1, [r4]
    ee98:	bl	46bc <av_match_name@plt>
    ee9c:	cmp	r0, #0
    eea0:	beq	ee78 <main@@Base+0xa24c>
    eea4:	ldr	r1, [sp, #8]
    eea8:	mov	r0, r4
    eeac:	bl	7abc <main@@Base+0x2e90>
    eeb0:	mov	r0, r4
    eeb4:	bl	4128 <av_output_audio_device_next@plt>
    eeb8:	subs	r4, r0, #0
    eebc:	bne	ee88 <main@@Base+0xa25c>
    eec0:	mov	r0, r4
    eec4:	bl	4764 <av_output_video_device_next@plt>
    eec8:	subs	r4, r0, #0
    eecc:	beq	ef08 <main@@Base+0xa2dc>
    eed0:	ldr	r0, [sp, #4]
    eed4:	cmp	r0, #0
    eed8:	beq	eeec <main@@Base+0xa2c0>
    eedc:	ldr	r1, [r4]
    eee0:	bl	46bc <av_match_name@plt>
    eee4:	cmp	r0, #0
    eee8:	beq	eec0 <main@@Base+0xa294>
    eeec:	ldr	r1, [sp, #8]
    eef0:	mov	r0, r4
    eef4:	bl	7abc <main@@Base+0x2e90>
    eef8:	mov	r0, r4
    eefc:	bl	4764 <av_output_video_device_next@plt>
    ef00:	subs	r4, r0, #0
    ef04:	bne	eed0 <main@@Base+0xa2a4>
    ef08:	mov	r0, r6
    ef0c:	bl	3ee8 <av_dict_free@plt>
    ef10:	ldr	r0, [sp, #4]
    ef14:	bl	46ec <av_free@plt>
    ef18:	mov	r0, r8
    ef1c:	bl	3eac <av_log_set_level@plt>
    ef20:	ldr	r2, [sp, #12]
    ef24:	ldr	r3, [r5]
    ef28:	mov	r0, r7
    ef2c:	cmp	r2, r3
    ef30:	bne	ef3c <main@@Base+0xa310>
    ef34:	add	sp, sp, #16
    ef38:	pop	{r4, r5, r6, r7, r8, pc}
    ef3c:	bl	3f00 <__stack_chk_fail@plt>
    ef40:	ldrdeq	r2, [r2], -r0
    ef44:	andeq	r0, r0, r8, ror #7
    ef48:	push	{lr}		; (str lr, [sp, #-4]!)
    ef4c:	ldr	r3, [pc, #56]	; ef8c <main@@Base+0xa360>
    ef50:	ldr	r2, [pc, #56]	; ef90 <main@@Base+0xa364>
    ef54:	add	r3, pc, r3
    ef58:	ldr	r2, [r3, r2]
    ef5c:	ldr	r1, [r0, #4]
    ef60:	sub	sp, sp, #12
    ef64:	ldr	r0, [r1, #8]
    ef68:	ldr	r1, [r2]
    ef6c:	str	r1, [sp, #4]
    ef70:	ldr	r1, [sp, #4]
    ef74:	ldr	r3, [r2]
    ef78:	cmp	r1, r3
    ef7c:	bne	ef88 <main@@Base+0xa35c>
    ef80:	add	sp, sp, #12
    ef84:	pop	{pc}		; (ldr pc, [sp], #4)
    ef88:	bl	3f00 <__stack_chk_fail@plt>
    ef8c:	andeq	r2, r2, r8, lsr #25
    ef90:	andeq	r0, r0, r8, ror #7
    ef94:	push	{r4, r5, lr}
    ef98:	ldr	r2, [pc, #180]	; f054 <main@@Base+0xa428>
    ef9c:	ldr	r1, [pc, #180]	; f058 <main@@Base+0xa42c>
    efa0:	add	r2, pc, r2
    efa4:	ldr	r5, [r2, r1]
    efa8:	ldr	r3, [r0, #24]
    efac:	ldr	r1, [r5]
    efb0:	sub	sp, sp, #12
    efb4:	cmp	r3, #0
    efb8:	mov	r4, r0
    efbc:	str	r1, [sp, #4]
    efc0:	beq	f014 <main@@Base+0xa3e8>
    efc4:	add	r2, r0, r3, lsl #2
    efc8:	ldr	r1, [r2, #64]	; 0x40
    efcc:	ldr	r0, [r1]
    efd0:	cmn	r0, #1
    efd4:	beq	f014 <main@@Base+0xa3e8>
    efd8:	ldr	r1, [r2, #24]
    efdc:	ldr	ip, [r2, #68]	; 0x44
    efe0:	cmp	r0, #18
    efe4:	add	r1, r1, #1
    efe8:	ldr	r0, [ip]
    efec:	str	r1, [r2, #24]
    eff0:	bne	f014 <main@@Base+0xa3e8>
    eff4:	cmp	r0, #15
    eff8:	add	r1, r4, #8192	; 0x2000
    effc:	ldreq	r2, [r1, #2156]	; 0x86c
    f000:	ldrne	r2, [r1, #2160]	; 0x870
    f004:	addeq	r2, r2, #1
    f008:	addne	r2, r2, #1
    f00c:	streq	r2, [r1, #2156]	; 0x86c
    f010:	strne	r2, [r1, #2160]	; 0x870
    f014:	ldr	r2, [r4, #4]
    f018:	ldr	r2, [r2, #24]
    f01c:	cmp	r2, #0
    f020:	beq	f030 <main@@Base+0xa404>
    f024:	mov	r0, r4
    f028:	blx	r2
    f02c:	ldr	r3, [r4, #24]
    f030:	ldr	r1, [sp, #4]
    f034:	ldr	r2, [r5]
    f038:	sub	r3, r3, #1
    f03c:	cmp	r1, r2
    f040:	str	r3, [r4, #24]
    f044:	bne	f050 <main@@Base+0xa424>
    f048:	add	sp, sp, #12
    f04c:	pop	{r4, r5, pc}
    f050:	bl	3f00 <__stack_chk_fail@plt>
    f054:	andeq	r2, r2, ip, asr ip
    f058:	andeq	r0, r0, r8, ror #7
    f05c:	push	{lr}		; (str lr, [sp, #-4]!)
    f060:	ldr	r3, [pc, #56]	; f0a0 <main@@Base+0xa474>
    f064:	ldr	r2, [pc, #56]	; f0a4 <main@@Base+0xa478>
    f068:	add	r3, pc, r3
    f06c:	ldr	r3, [r3, r2]
    f070:	sub	sp, sp, #12
    f074:	ldr	r2, [r3]
    f078:	str	r2, [sp, #4]
    f07c:	ldr	r2, [sp, #4]
    f080:	ldr	r3, [r3]
    f084:	cmp	r2, r3
    f088:	bne	f09c <main@@Base+0xa470>
    f08c:	ldr	r0, [pc, #20]	; f0a8 <main@@Base+0xa47c>
    f090:	add	r0, pc, r0
    f094:	add	sp, sp, #12
    f098:	pop	{pc}		; (ldr pc, [sp], #4)
    f09c:	bl	3f00 <__stack_chk_fail@plt>
    f0a0:	muleq	r2, r4, fp
    f0a4:	andeq	r0, r0, r8, ror #7
    f0a8:	andeq	lr, r0, r0, lsr #23
    f0ac:	push	{lr}		; (str lr, [sp, #-4]!)
    f0b0:	ldr	r3, [pc, #52]	; f0ec <main@@Base+0xa4c0>
    f0b4:	ldr	r2, [pc, #52]	; f0f0 <main@@Base+0xa4c4>
    f0b8:	add	r3, pc, r3
    f0bc:	ldr	r3, [r3, r2]
    f0c0:	sub	sp, sp, #12
    f0c4:	ldr	r2, [r3]
    f0c8:	str	r2, [sp, #4]
    f0cc:	ldr	r2, [sp, #4]
    f0d0:	ldr	r3, [r3]
    f0d4:	cmp	r2, r3
    f0d8:	bne	f0e8 <main@@Base+0xa4bc>
    f0dc:	mov	r0, r1
    f0e0:	add	sp, sp, #12
    f0e4:	pop	{pc}		; (ldr pc, [sp], #4)
    f0e8:	bl	3f00 <__stack_chk_fail@plt>
    f0ec:	andeq	r2, r2, r4, asr #22
    f0f0:	andeq	r0, r0, r8, ror #7
    f0f4:	push	{lr}		; (str lr, [sp, #-4]!)
    f0f8:	ldr	r3, [pc, #56]	; f138 <main@@Base+0xa50c>
    f0fc:	ldr	r2, [pc, #56]	; f13c <main@@Base+0xa510>
    f100:	add	r3, pc, r3
    f104:	ldr	r3, [r3, r2]
    f108:	sub	sp, sp, #12
    f10c:	ldr	r2, [r3]
    f110:	str	r2, [sp, #4]
    f114:	ldr	r2, [sp, #4]
    f118:	ldr	r3, [r3]
    f11c:	cmp	r2, r3
    f120:	bne	f134 <main@@Base+0xa508>
    f124:	ldr	r0, [pc, #20]	; f140 <main@@Base+0xa514>
    f128:	add	r0, pc, r0
    f12c:	add	sp, sp, #12
    f130:	pop	{pc}		; (ldr pc, [sp], #4)
    f134:	bl	3f00 <__stack_chk_fail@plt>
    f138:	strdeq	r2, [r2], -ip
    f13c:	andeq	r0, r0, r8, ror #7
    f140:	andeq	lr, r0, r4, ror pc
    f144:	push	{lr}		; (str lr, [sp, #-4]!)
    f148:	ldr	r3, [pc, #56]	; f188 <main@@Base+0xa55c>
    f14c:	ldr	r2, [pc, #56]	; f18c <main@@Base+0xa560>
    f150:	add	r3, pc, r3
    f154:	ldr	r3, [r3, r2]
    f158:	sub	sp, sp, #12
    f15c:	ldr	r2, [r3]
    f160:	str	r2, [sp, #4]
    f164:	ldr	r2, [sp, #4]
    f168:	ldr	r3, [r3]
    f16c:	cmp	r2, r3
    f170:	bne	f184 <main@@Base+0xa558>
    f174:	ldr	r0, [pc, #20]	; f190 <main@@Base+0xa564>
    f178:	add	r0, pc, r0
    f17c:	add	sp, sp, #12
    f180:	pop	{pc}		; (ldr pc, [sp], #4)
    f184:	bl	3f00 <__stack_chk_fail@plt>
    f188:	andeq	r2, r2, ip, lsr #21
    f18c:	andeq	r0, r0, r8, ror #7
    f190:	andeq	lr, r0, ip, lsr #30
    f194:	push	{lr}		; (str lr, [sp, #-4]!)
    f198:	ldr	r3, [pc, #56]	; f1d8 <main@@Base+0xa5ac>
    f19c:	ldr	r2, [pc, #56]	; f1dc <main@@Base+0xa5b0>
    f1a0:	add	r3, pc, r3
    f1a4:	ldr	r3, [r3, r2]
    f1a8:	sub	sp, sp, #12
    f1ac:	ldr	r2, [r3]
    f1b0:	str	r2, [sp, #4]
    f1b4:	ldr	r2, [sp, #4]
    f1b8:	ldr	r3, [r3]
    f1bc:	cmp	r2, r3
    f1c0:	bne	f1d4 <main@@Base+0xa5a8>
    f1c4:	ldr	r0, [pc, #20]	; f1e0 <main@@Base+0xa5b4>
    f1c8:	add	r0, pc, r0
    f1cc:	add	sp, sp, #12
    f1d0:	pop	{pc}		; (ldr pc, [sp], #4)
    f1d4:	bl	3f00 <__stack_chk_fail@plt>
    f1d8:	andeq	r2, r2, ip, asr sl
    f1dc:	andeq	r0, r0, r8, ror #7
    f1e0:	andeq	lr, r0, r0, ror #29
    f1e4:	push	{lr}		; (str lr, [sp, #-4]!)
    f1e8:	ldr	r3, [pc, #56]	; f228 <main@@Base+0xa5fc>
    f1ec:	ldr	r2, [pc, #56]	; f22c <main@@Base+0xa600>
    f1f0:	add	r3, pc, r3
    f1f4:	ldr	r3, [r3, r2]
    f1f8:	sub	sp, sp, #12
    f1fc:	ldr	r2, [r3]
    f200:	str	r2, [sp, #4]
    f204:	ldr	r2, [sp, #4]
    f208:	ldr	r3, [r3]
    f20c:	cmp	r2, r3
    f210:	bne	f224 <main@@Base+0xa5f8>
    f214:	ldr	r0, [pc, #20]	; f230 <main@@Base+0xa604>
    f218:	add	r0, pc, r0
    f21c:	add	sp, sp, #12
    f220:	pop	{pc}		; (ldr pc, [sp], #4)
    f224:	bl	3f00 <__stack_chk_fail@plt>
    f228:	andeq	r2, r2, ip, lsl #20
    f22c:	andeq	r0, r0, r8, ror #7
    f230:	muleq	r0, r8, lr
    f234:	push	{lr}		; (str lr, [sp, #-4]!)
    f238:	ldr	r3, [pc, #56]	; f278 <main@@Base+0xa64c>
    f23c:	ldr	r2, [pc, #56]	; f27c <main@@Base+0xa650>
    f240:	add	r3, pc, r3
    f244:	ldr	r3, [r3, r2]
    f248:	sub	sp, sp, #12
    f24c:	ldr	r2, [r3]
    f250:	str	r2, [sp, #4]
    f254:	ldr	r2, [sp, #4]
    f258:	ldr	r3, [r3]
    f25c:	cmp	r2, r3
    f260:	bne	f274 <main@@Base+0xa648>
    f264:	ldr	r0, [pc, #20]	; f280 <main@@Base+0xa654>
    f268:	add	r0, pc, r0
    f26c:	add	sp, sp, #12
    f270:	pop	{pc}		; (ldr pc, [sp], #4)
    f274:	bl	3f00 <__stack_chk_fail@plt>
    f278:			; <UNDEFINED> instruction: 0x000229bc
    f27c:	andeq	r0, r0, r8, ror #7
    f280:	andeq	lr, r0, ip, asr #28
    f284:	push	{lr}		; (str lr, [sp, #-4]!)
    f288:	ldr	r3, [pc, #56]	; f2c8 <main@@Base+0xa69c>
    f28c:	ldr	r2, [pc, #56]	; f2cc <main@@Base+0xa6a0>
    f290:	add	r3, pc, r3
    f294:	ldr	r3, [r3, r2]
    f298:	sub	sp, sp, #12
    f29c:	ldr	r2, [r3]
    f2a0:	str	r2, [sp, #4]
    f2a4:	ldr	r2, [sp, #4]
    f2a8:	ldr	r3, [r3]
    f2ac:	cmp	r2, r3
    f2b0:	bne	f2c4 <main@@Base+0xa698>
    f2b4:	ldr	r0, [pc, #20]	; f2d0 <main@@Base+0xa6a4>
    f2b8:	add	r0, pc, r0
    f2bc:	add	sp, sp, #12
    f2c0:	pop	{pc}		; (ldr pc, [sp], #4)
    f2c4:	bl	3f00 <__stack_chk_fail@plt>
    f2c8:	andeq	r2, r2, ip, ror #18
    f2cc:	andeq	r0, r0, r8, ror #7
    f2d0:	andeq	lr, r0, ip, lsl #28
    f2d4:	mov	r2, #1
    f2d8:	push	{lr}		; (str lr, [sp, #-4]!)
    f2dc:	ldr	r1, [pc, #76]	; f330 <main@@Base+0xa704>
    f2e0:	ldr	r0, [pc, #76]	; f334 <main@@Base+0xa708>
    f2e4:	add	r1, pc, r1
    f2e8:	ldr	r0, [r1, r0]
    f2ec:	sub	sp, sp, #12
    f2f0:	ldr	r1, [r0]
    f2f4:	ldr	r3, [pc, #60]	; f338 <main@@Base+0xa70c>
    f2f8:	str	r1, [sp, #4]
    f2fc:	ldr	ip, [sp, #4]
    f300:	ldr	r1, [r0]
    f304:	add	r3, pc, r3
    f308:	cmp	ip, r1
    f30c:	str	r2, [r3]
    f310:	str	r2, [r3, #4]
    f314:	str	r2, [r3, #8]
    f318:	str	r2, [r3, #12]
    f31c:	bne	f32c <main@@Base+0xa700>
    f320:	mov	r0, #0
    f324:	add	sp, sp, #12
    f328:	pop	{pc}		; (ldr pc, [sp], #4)
    f32c:	bl	3f00 <__stack_chk_fail@plt>
    f330:	andeq	r2, r2, r8, lsl r9
    f334:	andeq	r0, r0, r8, ror #7
    f338:	andeq	r3, r2, r8, ror #18
    f33c:	push	{r4, r5, lr}
    f340:	ldr	r3, [pc, #228]	; f42c <main@@Base+0xa800>
    f344:	ldr	r2, [pc, #228]	; f430 <main@@Base+0xa804>
    f348:	add	r3, pc, r3
    f34c:	ldr	r1, [r0, #12]
    f350:	ldr	r4, [r3, r2]
    f354:	ldr	ip, [r1, #8]
    f358:	ldr	r2, [r4]
    f35c:	sub	sp, sp, #44	; 0x2c
    f360:	cmp	ip, #0
    f364:	str	r2, [sp, #36]	; 0x24
    f368:	bne	f400 <main@@Base+0xa7d4>
    f36c:	ldr	r3, [r0, #24]
    f370:	add	r1, r1, r3, lsl #2
    f374:	ldr	r2, [r1, #12]
    f378:	cmp	r2, #0
    f37c:	bne	f400 <main@@Base+0xa7d4>
    f380:	add	r0, r0, r3, lsl #2
    f384:	ldr	r3, [r0, #68]	; 0x44
    f388:	ldr	r2, [r3, #8]
    f38c:	tst	r2, #3
    f390:	bne	f400 <main@@Base+0xa7d4>
    f394:	ldr	lr, [r3, #4]
    f398:	add	r2, sp, #4
    f39c:	ldrb	r3, [lr]
    f3a0:	cmp	r3, #0
    f3a4:	beq	f420 <main@@Base+0xa7f4>
    f3a8:	mov	r1, lr
    f3ac:	mov	r0, r2
    f3b0:	add	lr, lr, #31
    f3b4:	rsb	r5, r1, #1
    f3b8:	b	f3c4 <main@@Base+0xa798>
    f3bc:	cmp	lr, r1
    f3c0:	beq	f418 <main@@Base+0xa7ec>
    f3c4:	sub	ip, r3, #97	; 0x61
    f3c8:	cmp	ip, #25
    f3cc:	eorls	r3, r3, #32
    f3d0:	strb	r3, [r0], #1
    f3d4:	add	ip, r5, r1
    f3d8:	ldrb	r3, [r1, #1]!
    f3dc:	cmp	r3, #0
    f3e0:	bne	f3bc <main@@Base+0xa790>
    f3e4:	add	ip, r2, ip
    f3e8:	mov	r3, #0
    f3ec:	ldr	r1, [pc, #64]	; f434 <main@@Base+0xa808>
    f3f0:	mov	r0, #1
    f3f4:	add	r1, pc, r1
    f3f8:	strb	r3, [ip]
    f3fc:	bl	474c <__printf_chk@plt>
    f400:	ldr	r2, [sp, #36]	; 0x24
    f404:	ldr	r3, [r4]
    f408:	cmp	r2, r3
    f40c:	bne	f428 <main@@Base+0xa7fc>
    f410:	add	sp, sp, #44	; 0x2c
    f414:	pop	{r4, r5, pc}
    f418:	add	ip, sp, #35	; 0x23
    f41c:	b	f3e8 <main@@Base+0xa7bc>
    f420:	mov	ip, r2
    f424:	b	f3e8 <main@@Base+0xa7bc>
    f428:	bl	3f00 <__stack_chk_fail@plt>
    f42c:			; <UNDEFINED> instruction: 0x000228b4
    f430:	andeq	r0, r0, r8, ror #7
    f434:	strdeq	lr, [r0], -r0
    f438:	push	{r4, r5, lr}
    f43c:	ldr	ip, [pc, #124]	; f4c0 <main@@Base+0xa894>
    f440:	ldr	r3, [pc, #124]	; f4c4 <main@@Base+0xa898>
    f444:	add	ip, pc, ip
    f448:	ldr	lr, [r0, #12]
    f44c:	ldr	r4, [ip, r3]
    f450:	ldr	lr, [lr, #4]
    f454:	ldr	ip, [r4]
    f458:	sub	sp, sp, #12
    f45c:	cmp	lr, #0
    f460:	mov	r5, r2
    f464:	str	ip, [sp, #4]
    f468:	beq	f498 <main@@Base+0xa86c>
    f46c:	ldr	r2, [sp, #4]
    f470:	ldr	r3, [r4]
    f474:	cmp	r2, r3
    f478:	bne	f4bc <main@@Base+0xa890>
    f47c:	mov	r2, r5
    f480:	mov	r0, #1
    f484:	ldr	r1, [pc, #60]	; f4c8 <main@@Base+0xa89c>
    f488:	add	r1, pc, r1
    f48c:	add	sp, sp, #12
    f490:	pop	{r4, r5, lr}
    f494:	b	474c <__printf_chk@plt>
    f498:	ldr	r2, [r0, #24]
    f49c:	mov	r3, r1
    f4a0:	ldr	r1, [pc, #36]	; f4cc <main@@Base+0xa8a0>
    f4a4:	add	r0, r0, r2, lsl #10
    f4a8:	ldr	r2, [r0, #108]	; 0x6c
    f4ac:	add	r1, pc, r1
    f4b0:	mov	r0, #1
    f4b4:	bl	474c <__printf_chk@plt>
    f4b8:	b	f46c <main@@Base+0xa840>
    f4bc:	bl	3f00 <__stack_chk_fail@plt>
    f4c0:			; <UNDEFINED> instruction: 0x000227b8
    f4c4:	andeq	r0, r0, r8, ror #7
    f4c8:	ldrdeq	sp, [r0], -ip
    f4cc:	andeq	lr, r0, r0, asr #26
    f4d0:	push	{r4, r5, r6, r7, lr}
    f4d4:	ldr	ip, [pc, #132]	; f560 <main@@Base+0xa934>
    f4d8:	ldr	lr, [pc, #132]	; f564 <main@@Base+0xa938>
    f4dc:	add	ip, pc, ip
    f4e0:	ldr	r5, [r0, #12]
    f4e4:	ldr	r4, [ip, lr]
    f4e8:	ldr	lr, [r5, #4]
    f4ec:	ldr	ip, [r4]
    f4f0:	sub	sp, sp, #12
    f4f4:	cmp	lr, #0
    f4f8:	mov	r6, r2
    f4fc:	mov	r7, r3
    f500:	str	ip, [sp, #4]
    f504:	beq	f538 <main@@Base+0xa90c>
    f508:	ldr	r2, [sp, #4]
    f50c:	ldr	r3, [r4]
    f510:	cmp	r2, r3
    f514:	bne	f55c <main@@Base+0xa930>
    f518:	mov	r2, r6
    f51c:	mov	r3, r7
    f520:	mov	r0, #1
    f524:	ldr	r1, [pc, #60]	; f568 <main@@Base+0xa93c>
    f528:	add	r1, pc, r1
    f52c:	add	sp, sp, #12
    f530:	pop	{r4, r5, r6, r7, lr}
    f534:	b	474c <__printf_chk@plt>
    f538:	ldr	r2, [r0, #24]
    f53c:	mov	r3, r1
    f540:	ldr	r1, [pc, #36]	; f56c <main@@Base+0xa940>
    f544:	add	r0, r0, r2, lsl #10
    f548:	ldr	r2, [r0, #108]	; 0x6c
    f54c:	add	r1, pc, r1
    f550:	mov	r0, #1
    f554:	bl	474c <__printf_chk@plt>
    f558:	b	f508 <main@@Base+0xa8dc>
    f55c:	bl	3f00 <__stack_chk_fail@plt>
    f560:	andeq	r2, r2, r0, lsr #14
    f564:	andeq	r0, r0, r8, ror #7
    f568:	andeq	lr, r0, ip, asr #25
    f56c:	andeq	lr, r0, r0, lsr #25
    f570:	push	{r4, r5, r6, r7, r8, r9, lr}
    f574:	mov	r4, r0
    f578:	ldr	r0, [pc, #188]	; f63c <main@@Base+0xaa10>
    f57c:	ldr	ip, [r4, #24]
    f580:	ldr	lr, [pc, #184]	; f640 <main@@Base+0xaa14>
    f584:	add	r0, pc, r0
    f588:	ldr	r5, [r0, lr]
    f58c:	add	ip, r4, ip, lsl #2
    f590:	ldr	ip, [ip, #28]
    f594:	mov	r9, r1
    f598:	ldr	r1, [r5]
    f59c:	sub	sp, sp, #12
    f5a0:	cmp	ip, #0
    f5a4:	mov	r6, r2
    f5a8:	mov	r7, r3
    f5ac:	str	r1, [sp, #4]
    f5b0:	ldr	r8, [r4, #12]
    f5b4:	bne	f5f4 <main@@Base+0xa9c8>
    f5b8:	ldr	r3, [r8, #12]
    f5bc:	cmp	r3, #0
    f5c0:	beq	f614 <main@@Base+0xa9e8>
    f5c4:	ldr	r2, [sp, #4]
    f5c8:	ldr	r3, [r5]
    f5cc:	cmp	r2, r3
    f5d0:	bne	f638 <main@@Base+0xaa0c>
    f5d4:	mov	r2, r6
    f5d8:	mov	r3, r7
    f5dc:	mov	r0, #1
    f5e0:	ldr	r1, [pc, #92]	; f644 <main@@Base+0xaa18>
    f5e4:	add	r1, pc, r1
    f5e8:	add	sp, sp, #12
    f5ec:	pop	{r4, r5, r6, r7, r8, r9, lr}
    f5f0:	b	474c <__printf_chk@plt>
    f5f4:	ldr	r1, [pc, #76]	; f648 <main@@Base+0xaa1c>
    f5f8:	ldrb	r2, [r8, #8]
    f5fc:	add	r1, pc, r1
    f600:	mov	r0, #1
    f604:	bl	474c <__printf_chk@plt>
    f608:	ldr	r3, [r8, #12]
    f60c:	cmp	r3, #0
    f610:	bne	f5c4 <main@@Base+0xa998>
    f614:	ldr	r2, [r4, #24]
    f618:	ldr	r1, [pc, #44]	; f64c <main@@Base+0xaa20>
    f61c:	add	r4, r4, r2, lsl #10
    f620:	mov	r3, r9
    f624:	ldr	r2, [r4, #108]	; 0x6c
    f628:	add	r1, pc, r1
    f62c:	mov	r0, #1
    f630:	bl	474c <__printf_chk@plt>
    f634:	b	f5c4 <main@@Base+0xa998>
    f638:	bl	3f00 <__stack_chk_fail@plt>
    f63c:	andeq	r2, r2, r8, ror r6
    f640:	andeq	r0, r0, r8, ror #7
    f644:	andeq	lr, r0, r8, lsl ip
    f648:	andeq	lr, r0, r4, ror #26
    f64c:	andeq	lr, r0, r4, asr #23
    f650:	push	{r4, r5, lr}
    f654:	ldr	ip, [pc, #84]	; f6b0 <main@@Base+0xaa84>
    f658:	ldr	lr, [pc, #84]	; f6b4 <main@@Base+0xaa88>
    f65c:	add	ip, pc, ip
    f660:	ldr	r4, [ip, lr]
    f664:	sub	sp, sp, #20
    f668:	ldr	r5, [r0, #24]
    f66c:	ldr	lr, [r4]
    f670:	strd	r2, [sp]
    f674:	mov	r3, r1
    f678:	ldr	r1, [pc, #56]	; f6b8 <main@@Base+0xaa8c>
    f67c:	add	r0, r0, r5, lsl #10
    f680:	ldr	r2, [r0, #108]	; 0x6c
    f684:	add	r1, pc, r1
    f688:	mov	r0, #1
    f68c:	str	lr, [sp, #12]
    f690:	bl	474c <__printf_chk@plt>
    f694:	ldr	r2, [sp, #12]
    f698:	ldr	r3, [r4]
    f69c:	cmp	r2, r3
    f6a0:	bne	f6ac <main@@Base+0xaa80>
    f6a4:	add	sp, sp, #20
    f6a8:	pop	{r4, r5, pc}
    f6ac:	bl	3f00 <__stack_chk_fail@plt>
    f6b0:	andeq	r2, r2, r0, lsr #11
    f6b4:	andeq	r0, r0, r8, ror #7
    f6b8:	andeq	lr, r0, r0, lsl #23
    f6bc:	push	{r4, lr}
    f6c0:	ldr	ip, [pc, #72]	; f710 <main@@Base+0xaae4>
    f6c4:	ldr	lr, [pc, #72]	; f714 <main@@Base+0xaae8>
    f6c8:	sub	sp, sp, #16
    f6cc:	add	ip, pc, ip
    f6d0:	ldr	r4, [ip, lr]
    f6d4:	strd	r2, [sp]
    f6d8:	mov	r2, r1
    f6dc:	ldr	r1, [pc, #52]	; f718 <main@@Base+0xaaec>
    f6e0:	ldr	r3, [r4]
    f6e4:	mov	r0, #1
    f6e8:	add	r1, pc, r1
    f6ec:	str	r3, [sp, #12]
    f6f0:	bl	474c <__printf_chk@plt>
    f6f4:	ldr	r2, [sp, #12]
    f6f8:	ldr	r3, [r4]
    f6fc:	cmp	r2, r3
    f700:	bne	f70c <main@@Base+0xaae0>
    f704:	add	sp, sp, #16
    f708:	pop	{r4, pc}
    f70c:	bl	3f00 <__stack_chk_fail@plt>
    f710:	andeq	r2, r2, r0, lsr r5
    f714:	andeq	r0, r0, r8, ror #7
    f718:	andeq	lr, r0, r8, lsr #22
    f71c:	push	{r4, r5, lr}
    f720:	ldr	r3, [pc, #296]	; f850 <main@@Base+0xac24>
    f724:	ldr	r2, [pc, #296]	; f854 <main@@Base+0xac28>
    f728:	add	r3, pc, r3
    f72c:	ldr	r5, [r3, r2]
    f730:	ldr	r1, [r0, #24]
    f734:	ldr	r2, [r5]
    f738:	sub	sp, sp, #12
    f73c:	cmp	r1, #0
    f740:	ldr	r4, [r0, #12]
    f744:	str	r2, [sp, #4]
    f748:	beq	f800 <main@@Base+0xabd4>
    f74c:	add	r0, r0, r1, lsl #2
    f750:	ldr	r3, [r0, #68]	; 0x44
    f754:	ldr	r3, [r3, #8]
    f758:	tst	r3, #2
    f75c:	bne	f7b0 <main@@Base+0xab84>
    f760:	ldr	r1, [pc, #240]	; f858 <main@@Base+0xac2c>
    f764:	ldr	r2, [r4, #16]
    f768:	add	r1, pc, r1
    f76c:	mov	r0, #1
    f770:	bl	474c <__printf_chk@plt>
    f774:	ldrd	r2, [r4, #4]
    f778:	sub	r2, r2, #1
    f77c:	cmp	r3, #0
    f780:	str	r2, [r4, #4]
    f784:	beq	f834 <main@@Base+0xac08>
    f788:	ldr	r2, [sp, #4]
    f78c:	ldr	r3, [r5]
    f790:	ldr	r1, [pc, #196]	; f85c <main@@Base+0xac30>
    f794:	cmp	r2, r3
    f798:	add	r1, pc, r1
    f79c:	bne	f7fc <main@@Base+0xabd0>
    f7a0:	mov	r0, #1
    f7a4:	add	sp, sp, #12
    f7a8:	pop	{r4, r5, lr}
    f7ac:	b	474c <__printf_chk@plt>
    f7b0:	ldr	r1, [pc, #168]	; f860 <main@@Base+0xac34>
    f7b4:	mov	r0, #1
    f7b8:	add	r1, pc, r1
    f7bc:	bl	474c <__printf_chk@plt>
    f7c0:	ldr	r2, [r4, #4]
    f7c4:	ldr	r1, [pc, #152]	; f864 <main@@Base+0xac38>
    f7c8:	sub	r2, r2, #1
    f7cc:	mov	r3, #32
    f7d0:	str	r2, [r4, #4]
    f7d4:	add	r1, pc, r1
    f7d8:	lsl	r2, r2, #2
    f7dc:	mov	r0, #1
    f7e0:	bl	474c <__printf_chk@plt>
    f7e4:	ldr	r2, [sp, #4]
    f7e8:	ldr	r3, [r5]
    f7ec:	ldr	r1, [pc, #116]	; f868 <main@@Base+0xac3c>
    f7f0:	cmp	r2, r3
    f7f4:	add	r1, pc, r1
    f7f8:	beq	f7a0 <main@@Base+0xab74>
    f7fc:	bl	3f00 <__stack_chk_fail@plt>
    f800:	ldr	r3, [r4, #4]
    f804:	ldr	r1, [sp, #4]
    f808:	ldr	r2, [r5]
    f80c:	sub	r3, r3, #1
    f810:	cmp	r1, r2
    f814:	str	r3, [r4, #4]
    f818:	bne	f7fc <main@@Base+0xabd0>
    f81c:	mov	r0, #1
    f820:	ldr	r1, [pc, #68]	; f86c <main@@Base+0xac40>
    f824:	add	r1, pc, r1
    f828:	add	sp, sp, #12
    f82c:	pop	{r4, r5, lr}
    f830:	b	474c <__printf_chk@plt>
    f834:	ldr	r1, [pc, #52]	; f870 <main@@Base+0xac44>
    f838:	lsl	r2, r2, #2
    f83c:	mov	r3, #32
    f840:	add	r1, pc, r1
    f844:	mov	r0, #1
    f848:	bl	474c <__printf_chk@plt>
    f84c:	b	f788 <main@@Base+0xab5c>
    f850:	ldrdeq	r2, [r2], -r4
    f854:	andeq	r0, r0, r8, ror #7
    f858:	ldrdeq	lr, [r0], -r0
    f85c:	muleq	r0, r0, sl
    f860:	ldrdeq	sp, [r0], -r8
    f864:	andeq	lr, r0, ip, asr #20
    f868:	andeq	lr, r0, r0, lsr sl
    f86c:	strdeq	lr, [r0], -r8
    f870:	andeq	lr, r0, r0, ror #19
    f874:	push	{r4, r5, r6, r7, r8, lr}
    f878:	ldr	r2, [pc, #452]	; fa44 <main@@Base+0xae18>
    f87c:	ldr	r1, [pc, #452]	; fa48 <main@@Base+0xae1c>
    f880:	add	r2, pc, r2
    f884:	ldr	r6, [r2, r1]
    f888:	ldr	r3, [r0, #24]
    f88c:	ldr	r1, [r6]
    f890:	sub	sp, sp, #8
    f894:	cmp	r3, #0
    f898:	ldr	r5, [r0, #12]
    f89c:	str	r1, [sp, #4]
    f8a0:	bne	f8f8 <main@@Base+0xaccc>
    f8a4:	ldr	r1, [pc, #416]	; fa4c <main@@Base+0xae20>
    f8a8:	mov	r0, #1
    f8ac:	add	r1, pc, r1
    f8b0:	bl	474c <__printf_chk@plt>
    f8b4:	ldr	r3, [r5, #12]
    f8b8:	cmp	r3, #0
    f8bc:	beq	fa18 <main@@Base+0xadec>
    f8c0:	ldr	r2, [pc, #392]	; fa50 <main@@Base+0xae24>
    f8c4:	ldr	r3, [pc, #392]	; fa54 <main@@Base+0xae28>
    f8c8:	add	r2, pc, r2
    f8cc:	add	r3, pc, r3
    f8d0:	ldr	r0, [sp, #4]
    f8d4:	ldr	r1, [r6]
    f8d8:	cmp	r0, r1
    f8dc:	bne	fa40 <main@@Base+0xae14>
    f8e0:	mov	r0, #1
    f8e4:	ldr	r1, [pc, #364]	; fa58 <main@@Base+0xae2c>
    f8e8:	add	r1, pc, r1
    f8ec:	add	sp, sp, #8
    f8f0:	pop	{r4, r5, r6, r7, r8, lr}
    f8f4:	b	474c <__printf_chk@plt>
    f8f8:	ldr	r2, [r5, #4]
    f8fc:	add	r3, r0, r3, lsl #2
    f900:	cmp	r2, #0
    f904:	mov	r4, r0
    f908:	ldr	r7, [r3, #68]	; 0x44
    f90c:	ldr	r8, [r3, #64]	; 0x40
    f910:	bne	f9cc <main@@Base+0xada0>
    f914:	ldr	r3, [r7, #8]
    f918:	tst	r3, #4
    f91c:	beq	f944 <main@@Base+0xad18>
    f920:	ldr	r3, [r5, #8]
    f924:	add	r3, r3, #1
    f928:	str	r3, [r5, #8]
    f92c:	ldr	r2, [sp, #4]
    f930:	ldr	r3, [r6]
    f934:	cmp	r2, r3
    f938:	bne	fa40 <main@@Base+0xae14>
    f93c:	add	sp, sp, #8
    f940:	pop	{r4, r5, r6, r7, r8, pc}
    f944:	cmp	r8, #0
    f948:	beq	f974 <main@@Base+0xad48>
    f94c:	ldr	r2, [r8, #8]
    f950:	tst	r2, #1
    f954:	beq	f974 <main@@Base+0xad48>
    f958:	ldr	r2, [r4, #24]
    f95c:	cmp	r2, #0
    f960:	beq	f974 <main@@Base+0xad48>
    f964:	add	r4, r4, r2, lsl #2
    f968:	ldr	r2, [r4, #24]
    f96c:	cmp	r2, #0
    f970:	bne	fa28 <main@@Base+0xadfc>
    f974:	ldr	r2, [r5, #8]
    f978:	tst	r3, #2
    f97c:	add	r2, r2, #1
    f980:	str	r2, [r5, #8]
    f984:	mov	r3, #32
    f988:	lsl	r2, r2, #2
    f98c:	beq	f9e8 <main@@Base+0xadbc>
    f990:	ldr	r1, [pc, #196]	; fa5c <main@@Base+0xae30>
    f994:	mov	r0, #1
    f998:	add	r1, pc, r1
    f99c:	bl	474c <__printf_chk@plt>
    f9a0:	ldr	r2, [sp, #4]
    f9a4:	ldr	r3, [r6]
    f9a8:	cmp	r2, r3
    f9ac:	bne	fa40 <main@@Base+0xae14>
    f9b0:	mov	r0, #1
    f9b4:	ldr	r1, [pc, #164]	; fa60 <main@@Base+0xae34>
    f9b8:	ldr	r2, [r7, #4]
    f9bc:	add	r1, pc, r1
    f9c0:	add	sp, sp, #8
    f9c4:	pop	{r4, r5, r6, r7, r8, lr}
    f9c8:	b	474c <__printf_chk@plt>
    f9cc:	mov	r3, #0
    f9d0:	ldr	r1, [pc, #140]	; fa64 <main@@Base+0xae38>
    f9d4:	str	r3, [r5, #4]
    f9d8:	add	r1, pc, r1
    f9dc:	mov	r0, #1
    f9e0:	bl	474c <__printf_chk@plt>
    f9e4:	b	f914 <main@@Base+0xace8>
    f9e8:	ldr	r1, [pc, #120]	; fa68 <main@@Base+0xae3c>
    f9ec:	mov	r0, #1
    f9f0:	add	r1, pc, r1
    f9f4:	bl	474c <__printf_chk@plt>
    f9f8:	ldr	r1, [pc, #108]	; fa6c <main@@Base+0xae40>
    f9fc:	ldr	r2, [r7, #4]
    fa00:	add	r1, pc, r1
    fa04:	mov	r0, #1
    fa08:	bl	474c <__printf_chk@plt>
    fa0c:	mov	r3, #1
    fa10:	str	r3, [r5, #4]
    fa14:	b	f92c <main@@Base+0xad00>
    fa18:	ldr	r2, [pc, #80]	; fa70 <main@@Base+0xae44>
    fa1c:	add	r2, pc, r2
    fa20:	mov	r3, r2
    fa24:	b	f8d0 <main@@Base+0xaca4>
    fa28:	ldr	r1, [pc, #68]	; fa74 <main@@Base+0xae48>
    fa2c:	mov	r0, #1
    fa30:	add	r1, pc, r1
    fa34:	bl	474c <__printf_chk@plt>
    fa38:	ldr	r3, [r7, #8]
    fa3c:	b	f974 <main@@Base+0xad48>
    fa40:	bl	3f00 <__stack_chk_fail@plt>
    fa44:	andeq	r2, r2, ip, ror r3
    fa48:	andeq	r0, r0, r8, ror #7
    fa4c:	andeq	lr, r0, r0, ror #20
    fa50:	andeq	lr, r0, r4, ror #18
    fa54:	andeq	lr, r0, ip, ror #18
    fa58:	andeq	lr, r0, r4, lsl #20
    fa5c:	andeq	lr, r0, r8, lsl #17
    fa60:	andeq	lr, r0, r0, asr #18
    fa64:	andeq	lr, r0, r8, ror #23
    fa68:	andeq	lr, r0, r0, lsr r8
    fa6c:	andeq	lr, r0, r4, lsl #18
    fa70:	andeq	lr, r0, ip, lsl #29
    fa74:	andeq	sp, r0, r0, ror #2
    fa78:	push	{r4, r5, r6, lr}
    fa7c:	ldr	r3, [pc, #280]	; fb9c <main@@Base+0xaf70>
    fa80:	ldr	r2, [pc, #280]	; fba0 <main@@Base+0xaf74>
    fa84:	add	r3, pc, r3
    fa88:	ldr	r5, [r3, r2]
    fa8c:	ldr	r1, [r0, #24]
    fa90:	ldr	r2, [r5]
    fa94:	sub	sp, sp, #8
    fa98:	cmp	r1, #0
    fa9c:	ldr	r4, [r0, #12]
    faa0:	str	r2, [sp, #4]
    faa4:	bne	faf0 <main@@Base+0xaec4>
    faa8:	ldr	r3, [r4, #12]
    faac:	cmp	r3, #0
    fab0:	bne	fae4 <main@@Base+0xaeb8>
    fab4:	ldr	r2, [pc, #232]	; fba4 <main@@Base+0xaf78>
    fab8:	add	r2, pc, r2
    fabc:	ldr	r1, [sp, #4]
    fac0:	ldr	r3, [r5]
    fac4:	cmp	r1, r3
    fac8:	bne	fb98 <main@@Base+0xaf6c>
    facc:	mov	r0, #1
    fad0:	ldr	r1, [pc, #208]	; fba8 <main@@Base+0xaf7c>
    fad4:	add	r1, pc, r1
    fad8:	add	sp, sp, #8
    fadc:	pop	{r4, r5, r6, lr}
    fae0:	b	474c <__printf_chk@plt>
    fae4:	ldr	r2, [pc, #192]	; fbac <main@@Base+0xaf80>
    fae8:	add	r2, pc, r2
    faec:	b	fabc <main@@Base+0xae90>
    faf0:	ldr	r3, [r4, #4]
    faf4:	cmp	r3, #0
    faf8:	bne	fb34 <main@@Base+0xaf08>
    fafc:	add	r0, r0, r1, lsl #2
    fb00:	ldr	r6, [r0, #68]	; 0x44
    fb04:	ldr	r2, [r4, #8]
    fb08:	ldr	r3, [r6, #8]
    fb0c:	tst	r3, #4
    fb10:	beq	fb5c <main@@Base+0xaf30>
    fb14:	sub	r2, r2, #1
    fb18:	str	r2, [r4, #8]
    fb1c:	ldr	r2, [sp, #4]
    fb20:	ldr	r3, [r5]
    fb24:	cmp	r2, r3
    fb28:	bne	fb98 <main@@Base+0xaf6c>
    fb2c:	add	sp, sp, #8
    fb30:	pop	{r4, r5, r6, pc}
    fb34:	mov	r3, #0
    fb38:	ldr	r1, [pc, #112]	; fbb0 <main@@Base+0xaf84>
    fb3c:	str	r3, [r4, #4]
    fb40:	add	r1, pc, r1
    fb44:	mov	r0, #1
    fb48:	bl	474c <__printf_chk@plt>
    fb4c:	ldr	r3, [r4, #8]
    fb50:	sub	r3, r3, #1
    fb54:	str	r3, [r4, #8]
    fb58:	b	fb1c <main@@Base+0xaef0>
    fb5c:	ldr	r1, [pc, #80]	; fbb4 <main@@Base+0xaf88>
    fb60:	mov	r3, #32
    fb64:	lsl	r2, r2, #2
    fb68:	add	r1, pc, r1
    fb6c:	mov	r0, #1
    fb70:	bl	474c <__printf_chk@plt>
    fb74:	ldr	r1, [pc, #60]	; fbb8 <main@@Base+0xaf8c>
    fb78:	ldr	r2, [r6, #4]
    fb7c:	add	r1, pc, r1
    fb80:	mov	r0, #1
    fb84:	bl	474c <__printf_chk@plt>
    fb88:	ldr	r3, [r4, #8]
    fb8c:	sub	r3, r3, #1
    fb90:	str	r3, [r4, #8]
    fb94:	b	fb1c <main@@Base+0xaef0>
    fb98:	bl	3f00 <__stack_chk_fail@plt>
    fb9c:	andeq	r2, r2, r8, ror r1
    fba0:	andeq	r0, r0, r8, ror #7
    fba4:	strdeq	lr, [r0], -r0
    fba8:	andeq	lr, r0, r0, ror #16
    fbac:	andeq	lr, r0, r4, asr #14
    fbb0:	andeq	lr, r0, r4, lsl #16
    fbb4:			; <UNDEFINED> instruction: 0x0000e6b8
    fbb8:	andeq	lr, r0, ip, asr #15
    fbbc:	push	{r4, r5, r6, r7, lr}
    fbc0:	ldr	lr, [r0, #24]
    fbc4:	ldr	ip, [pc, #124]	; fc48 <main@@Base+0xb01c>
    fbc8:	add	r0, r0, lr, lsl #2
    fbcc:	ldr	lr, [pc, #120]	; fc4c <main@@Base+0xb020>
    fbd0:	add	ip, pc, ip
    fbd4:	ldr	r4, [ip, lr]
    fbd8:	ldr	r5, [r0, #28]
    fbdc:	mov	r0, ip
    fbe0:	ldr	ip, [r4]
    fbe4:	sub	sp, sp, #20
    fbe8:	cmp	r5, #0
    fbec:	mov	r6, r2
    fbf0:	mov	r5, r1
    fbf4:	mov	r7, r3
    fbf8:	str	ip, [sp, #12]
    fbfc:	bne	fc30 <main@@Base+0xb004>
    fc00:	ldr	r1, [pc, #72]	; fc50 <main@@Base+0xb024>
    fc04:	mov	r2, r5
    fc08:	strd	r6, [sp]
    fc0c:	add	r1, pc, r1
    fc10:	mov	r0, #1
    fc14:	bl	474c <__printf_chk@plt>
    fc18:	ldr	r2, [sp, #12]
    fc1c:	ldr	r3, [r4]
    fc20:	cmp	r2, r3
    fc24:	bne	fc44 <main@@Base+0xb018>
    fc28:	add	sp, sp, #20
    fc2c:	pop	{r4, r5, r6, r7, pc}
    fc30:	ldr	r1, [pc, #28]	; fc54 <main@@Base+0xb028>
    fc34:	mov	r0, #1
    fc38:	add	r1, pc, r1
    fc3c:	bl	474c <__printf_chk@plt>
    fc40:	b	fc00 <main@@Base+0xafd4>
    fc44:	bl	3f00 <__stack_chk_fail@plt>
    fc48:	andeq	r2, r2, ip, lsr #32
    fc4c:	andeq	r0, r0, r8, ror #7
    fc50:	andeq	lr, r0, r4, asr #14
    fc54:	andeq	ip, r0, ip, asr #23
    fc58:	push	{r4, r5, r6, r7, r8, lr}
    fc5c:	ldr	r7, [pc, #272]	; fd74 <main@@Base+0xb148>
    fc60:	lsl	r4, r0, #3
    fc64:	add	r3, r4, r0
    fc68:	add	r7, pc, r7
    fc6c:	add	r7, r7, r3, lsl #3
    fc70:	mov	r8, r0
    fc74:	ldr	r0, [r7, #8]
    fc78:	mov	r5, r1
    fc7c:	tst	r0, #1
    fc80:	movne	r2, #87	; 0x57
    fc84:	moveq	r2, #46	; 0x2e
    fc88:	tst	r0, #2
    fc8c:	movne	r3, #65	; 0x41
    fc90:	moveq	r3, #46	; 0x2e
    fc94:	tst	r0, #4
    fc98:	movne	lr, #86	; 0x56
    fc9c:	moveq	lr, #46	; 0x2e
    fca0:	ldr	r1, [pc, #208]	; fd78 <main@@Base+0xb14c>
    fca4:	ldr	r0, [pc, #208]	; fd7c <main@@Base+0xb150>
    fca8:	add	r1, pc, r1
    fcac:	ldr	r6, [r1, r0]
    fcb0:	ldr	r1, [pc, #200]	; fd80 <main@@Base+0xb154>
    fcb4:	sub	sp, sp, #16
    fcb8:	ldr	ip, [r6]
    fcbc:	add	r1, pc, r1
    fcc0:	str	lr, [sp]
    fcc4:	mov	r0, #1
    fcc8:	str	ip, [sp, #12]
    fccc:	bl	474c <__printf_chk@plt>
    fcd0:	ldr	r3, [r7, #4]
    fcd4:	ldr	r1, [pc, #168]	; fd84 <main@@Base+0xb158>
    fcd8:	lsl	r2, r5, #2
    fcdc:	str	r3, [sp]
    fce0:	add	r1, pc, r1
    fce4:	mov	r3, #32
    fce8:	mov	r0, #1
    fcec:	bl	474c <__printf_chk@plt>
    fcf0:	ldr	r2, [r7, #60]	; 0x3c
    fcf4:	cmp	r2, #0
    fcf8:	beq	fd0c <main@@Base+0xb0e0>
    fcfc:	ldr	r1, [pc, #132]	; fd88 <main@@Base+0xb15c>
    fd00:	mov	r0, #1
    fd04:	add	r1, pc, r1
    fd08:	bl	474c <__printf_chk@plt>
    fd0c:	ldr	r1, [pc, #120]	; fd8c <main@@Base+0xb160>
    fd10:	mov	r0, #1
    fd14:	add	r1, pc, r1
    fd18:	bl	474c <__printf_chk@plt>
    fd1c:	add	r3, r4, r8
    fd20:	ldr	r4, [pc, #104]	; fd90 <main@@Base+0xb164>
    fd24:	lsl	r3, r3, #3
    fd28:	add	r4, pc, r4
    fd2c:	add	r3, r3, #12
    fd30:	ldr	r0, [r4, r3]
    fd34:	add	r4, r4, r3
    fd38:	cmn	r0, #1
    fd3c:	beq	fd58 <main@@Base+0xb12c>
    fd40:	add	r5, r5, #1
    fd44:	mov	r1, r5
    fd48:	bl	fc58 <main@@Base+0xb02c>
    fd4c:	ldr	r0, [r4, #4]!
    fd50:	cmn	r0, #1
    fd54:	bne	fd44 <main@@Base+0xb118>
    fd58:	ldr	r2, [sp, #12]
    fd5c:	ldr	r3, [r6]
    fd60:	cmp	r2, r3
    fd64:	bne	fd70 <main@@Base+0xb144>
    fd68:	add	sp, sp, #16
    fd6c:	pop	{r4, r5, r6, r7, r8, pc}
    fd70:	bl	3f00 <__stack_chk_fail@plt>
    fd74:	strdeq	r2, [r2], -r4
    fd78:	andeq	r1, r2, r4, asr pc
    fd7c:	andeq	r0, r0, r8, ror #7
    fd80:	andeq	lr, r0, r0, lsr #13
    fd84:	andeq	lr, r0, r4, lsl #13
    fd88:	andeq	lr, r0, r8, ror #12
    fd8c:	andeq	ip, r0, ip, ror lr
    fd90:	andeq	r2, r2, r4, lsr r3
    fd94:	push	{r4, lr}
    fd98:	ldr	r3, [pc, #80]	; fdf0 <main@@Base+0xb1c4>
    fd9c:	ldr	r2, [pc, #80]	; fdf4 <main@@Base+0xb1c8>
    fda0:	add	r3, pc, r3
    fda4:	ldr	r4, [r3, r2]
    fda8:	ldr	r1, [pc, #72]	; fdf8 <main@@Base+0xb1cc>
    fdac:	ldr	r3, [r4]
    fdb0:	sub	sp, sp, #8
    fdb4:	add	r1, pc, r1
    fdb8:	mov	r0, #1
    fdbc:	str	r3, [sp, #4]
    fdc0:	bl	474c <__printf_chk@plt>
    fdc4:	mov	r1, #0
    fdc8:	mov	r0, #34	; 0x22
    fdcc:	bl	fc58 <main@@Base+0xb02c>
    fdd0:	ldr	r2, [sp, #4]
    fdd4:	ldr	r3, [r4]
    fdd8:	cmp	r2, r3
    fddc:	bne	fdec <main@@Base+0xb1c0>
    fde0:	mov	r0, #0
    fde4:	add	sp, sp, #8
    fde8:	pop	{r4, pc}
    fdec:	bl	3f00 <__stack_chk_fail@plt>
    fdf0:	andeq	r1, r2, ip, asr lr
    fdf4:	andeq	r0, r0, r8, ror #7
    fdf8:			; <UNDEFINED> instruction: 0x0000e5bc
    fdfc:	push	{r4, r5, r6, r7, r8, lr}
    fe00:	mov	r4, r0
    fe04:	ldr	r0, [pc, #244]	; ff00 <main@@Base+0xb2d4>
    fe08:	ldr	ip, [pc, #244]	; ff04 <main@@Base+0xb2d8>
    fe0c:	ldr	r3, [r4, #24]
    fe10:	add	r0, pc, r0
    fe14:	ldr	r7, [r0, ip]
    fe18:	add	r3, r4, r3, lsl #2
    fe1c:	ldr	ip, [r3, #28]
    fe20:	sub	sp, sp, #1024	; 0x400
    fe24:	mov	r6, r1
    fe28:	ldr	r1, [r7]
    fe2c:	sub	sp, sp, #8
    fe30:	cmp	ip, #0
    fe34:	mov	r8, r2
    fe38:	str	r1, [sp, #1028]	; 0x404
    fe3c:	ldr	r5, [r4, #12]
    fe40:	bne	feb8 <main@@Base+0xb28c>
    fe44:	ldr	r2, [r5, #12]
    fe48:	cmp	r2, #0
    fe4c:	beq	fed8 <main@@Base+0xb2ac>
    fe50:	add	r6, sp, #4
    fe54:	mov	r0, r6
    fe58:	mvn	r2, #0
    fe5c:	mov	r1, #1
    fe60:	bl	3f48 <av_bprint_init@plt>
    fe64:	mov	r3, r4
    fe68:	mov	r1, r8
    fe6c:	ldrb	r2, [r5, #8]
    fe70:	mov	r0, r6
    fe74:	ldr	r4, [r5, #24]
    fe78:	blx	r4
    fe7c:	ldr	r1, [pc, #132]	; ff08 <main@@Base+0xb2dc>
    fe80:	mov	r2, r0
    fe84:	add	r1, pc, r1
    fe88:	mov	r0, #1
    fe8c:	bl	474c <__printf_chk@plt>
    fe90:	mov	r0, r6
    fe94:	mov	r1, #0
    fe98:	bl	4308 <av_bprint_finalize@plt>
    fe9c:	ldr	r2, [sp, #1028]	; 0x404
    fea0:	ldr	r3, [r7]
    fea4:	cmp	r2, r3
    fea8:	bne	fefc <main@@Base+0xb2d0>
    feac:	add	sp, sp, #1024	; 0x400
    feb0:	add	sp, sp, #8
    feb4:	pop	{r4, r5, r6, r7, r8, pc}
    feb8:	ldr	r1, [pc, #76]	; ff0c <main@@Base+0xb2e0>
    febc:	ldrb	r2, [r5, #8]
    fec0:	add	r1, pc, r1
    fec4:	mov	r0, #1
    fec8:	bl	474c <__printf_chk@plt>
    fecc:	ldr	r2, [r5, #12]
    fed0:	cmp	r2, #0
    fed4:	bne	fe50 <main@@Base+0xb224>
    fed8:	ldr	r2, [r4, #24]
    fedc:	ldr	r1, [pc, #44]	; ff10 <main@@Base+0xb2e4>
    fee0:	add	r2, r4, r2, lsl #10
    fee4:	mov	r3, r6
    fee8:	ldr	r2, [r2, #108]	; 0x6c
    feec:	add	r1, pc, r1
    fef0:	mov	r0, #1
    fef4:	bl	474c <__printf_chk@plt>
    fef8:	b	fe50 <main@@Base+0xb224>
    fefc:	bl	3f00 <__stack_chk_fail@plt>
    ff00:	andeq	r1, r2, ip, ror #27
    ff04:	andeq	r0, r0, r8, ror #7
    ff08:			; <UNDEFINED> instruction: 0x0000e7b4
    ff0c:	andeq	lr, r0, r0, lsr #9
    ff10:	andeq	lr, r0, r0, lsl #6
    ff14:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    ff18:	ldr	r2, [pc, #444]	; 100dc <main@@Base+0xb4b0>
    ff1c:	ldr	r1, [pc, #444]	; 100e0 <main@@Base+0xb4b4>
    ff20:	add	r2, pc, r2
    ff24:	ldr	r3, [r0, #24]
    ff28:	ldr	r6, [r2, r1]
    ff2c:	lsl	r7, r3, #10
    ff30:	ldr	r1, [r6]
    ff34:	sub	sp, sp, #8
    ff38:	add	r5, r7, #108	; 0x6c
    ff3c:	cmp	r3, #0
    ff40:	add	r5, r0, r5
    ff44:	str	r1, [sp, #4]
    ff48:	bne	ff7c <main@@Base+0xb350>
    ff4c:	mov	r0, r5
    ff50:	bl	45c0 <av_bprint_clear@plt>
    ff54:	ldr	r2, [sp, #4]
    ff58:	ldr	r3, [r6]
    ff5c:	cmp	r2, r3
    ff60:	bne	100d8 <main@@Base+0xb4ac>
    ff64:	mov	r0, #1
    ff68:	ldr	r1, [pc, #372]	; 100e4 <main@@Base+0xb4b8>
    ff6c:	add	r1, pc, r1
    ff70:	add	sp, sp, #8
    ff74:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    ff78:	b	474c <__printf_chk@plt>
    ff7c:	mov	r4, r0
    ff80:	add	r3, r0, r3, lsl #2
    ff84:	ldr	r8, [r3, #64]	; 0x40
    ff88:	mov	r0, r5
    ff8c:	ldr	r9, [r3, #68]	; 0x44
    ff90:	ldr	sl, [r4, #12]
    ff94:	bl	45c0 <av_bprint_clear@plt>
    ff98:	cmp	r8, #0
    ff9c:	beq	ff54 <main@@Base+0xb328>
    ffa0:	ldr	r3, [r4, #24]
    ffa4:	add	r2, r4, r3, lsl #2
    ffa8:	ldr	r2, [r2, #24]
    ffac:	sub	r3, r3, #1
    ffb0:	cmp	r2, #0
    ffb4:	bne	100bc <main@@Base+0xb490>
    ffb8:	ldr	r1, [pc, #296]	; 100e8 <main@@Base+0xb4bc>
    ffbc:	add	r3, r4, r3, lsl #10
    ffc0:	ldr	r2, [r3, #108]	; 0x6c
    ffc4:	add	r1, pc, r1
    ffc8:	mov	r0, r5
    ffcc:	bl	459c <av_bprintf@plt>
    ffd0:	ldr	r3, [sl, #4]
    ffd4:	cmp	r3, #0
    ffd8:	bne	10000 <main@@Base+0xb3d4>
    ffdc:	ldr	r3, [r9, #8]
    ffe0:	tst	r3, #3
    ffe4:	beq	10000 <main@@Base+0xb3d4>
    ffe8:	ldr	r2, [sp, #4]
    ffec:	ldr	r3, [r6]
    fff0:	cmp	r2, r3
    fff4:	bne	100d8 <main@@Base+0xb4ac>
    fff8:	add	sp, sp, #8
    fffc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10000:	add	r3, r4, r7
   10004:	ldr	r3, [r3, #108]	; 0x6c
   10008:	ldrb	r3, [r3]
   1000c:	cmp	r3, #0
   10010:	bne	100b0 <main@@Base+0xb484>
   10014:	ldr	r2, [pc, #208]	; 100ec <main@@Base+0xb4c0>
   10018:	add	r2, pc, r2
   1001c:	ldr	r3, [r4, #24]
   10020:	ldr	r1, [pc, #200]	; 100f0 <main@@Base+0xb4c4>
   10024:	add	r3, r4, r3, lsl #2
   10028:	ldr	r3, [r3, #68]	; 0x44
   1002c:	add	r1, pc, r1
   10030:	ldr	r3, [r3, #4]
   10034:	mov	r0, r5
   10038:	bl	459c <av_bprintf@plt>
   1003c:	ldr	r3, [r8, #8]
   10040:	tst	r3, #2
   10044:	beq	10074 <main@@Base+0xb448>
   10048:	ldr	r3, [r8]
   1004c:	ldr	r1, [pc, #160]	; 100f4 <main@@Base+0xb4c8>
   10050:	cmp	r3, #18
   10054:	ldrne	r3, [r4, #24]
   10058:	addeq	r3, r4, #8192	; 0x2000
   1005c:	addne	r3, r4, r3, lsl #2
   10060:	ldreq	r2, [r3, #2164]	; 0x874
   10064:	ldrne	r2, [r3, #24]
   10068:	mov	r0, r5
   1006c:	add	r1, pc, r1
   10070:	bl	459c <av_bprintf@plt>
   10074:	ldr	r3, [r9, #8]
   10078:	tst	r3, #3
   1007c:	bne	ffe8 <main@@Base+0xb3bc>
   10080:	ldr	r2, [sp, #4]
   10084:	ldr	r3, [r6]
   10088:	cmp	r2, r3
   1008c:	bne	100d8 <main@@Base+0xb4ac>
   10090:	mov	r0, #1
   10094:	add	r4, r4, r7
   10098:	ldr	r1, [pc, #88]	; 100f8 <main@@Base+0xb4cc>
   1009c:	ldr	r2, [r4, #108]	; 0x6c
   100a0:	add	r1, pc, r1
   100a4:	add	sp, sp, #8
   100a8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   100ac:	b	474c <__printf_chk@plt>
   100b0:	ldr	r2, [pc, #68]	; 100fc <main@@Base+0xb4d0>
   100b4:	add	r2, pc, r2
   100b8:	b	1001c <main@@Base+0xb3f0>
   100bc:	ldr	r1, [pc, #60]	; 10100 <main@@Base+0xb4d4>
   100c0:	mov	r0, #1
   100c4:	add	r1, pc, r1
   100c8:	bl	474c <__printf_chk@plt>
   100cc:	ldr	r3, [r4, #24]
   100d0:	sub	r3, r3, #1
   100d4:	b	ffb8 <main@@Base+0xb38c>
   100d8:	bl	3f00 <__stack_chk_fail@plt>
   100dc:	ldrdeq	r1, [r2], -ip
   100e0:	andeq	r0, r0, r8, ror #7
   100e4:	strdeq	lr, [r0], -r8
   100e8:	andeq	lr, r0, r4, ror r6
   100ec:	muleq	r0, r0, r8
   100f0:	andeq	sp, r0, r8, lsr r8
   100f4:	andeq	lr, r0, ip, lsl #8
   100f8:	ldrdeq	lr, [r0], -ip
   100fc:	andeq	ip, r0, ip, lsr #9
   10100:	andeq	ip, r0, ip, asr #21
   10104:	push	{r4, r5, r6, r7, r8, r9, lr}
   10108:	ldr	r2, [pc, #308]	; 10244 <main@@Base+0xb618>
   1010c:	ldr	r1, [pc, #308]	; 10248 <main@@Base+0xb61c>
   10110:	add	r2, pc, r2
   10114:	ldr	r6, [r2, r1]
   10118:	ldr	r3, [r0, #24]
   1011c:	ldr	r1, [r6]
   10120:	sub	sp, sp, #12
   10124:	add	r5, r0, r3, lsl #10
   10128:	cmp	r3, #0
   1012c:	add	r5, r5, #108	; 0x6c
   10130:	str	r1, [sp, #4]
   10134:	bne	10158 <main@@Base+0xb52c>
   10138:	ldr	r2, [sp, #4]
   1013c:	ldr	r3, [r6]
   10140:	cmp	r2, r3
   10144:	bne	10240 <main@@Base+0xb614>
   10148:	mov	r0, r5
   1014c:	add	sp, sp, #12
   10150:	pop	{r4, r5, r6, r7, r8, r9, lr}
   10154:	b	45c0 <av_bprint_clear@plt>
   10158:	mov	r4, r0
   1015c:	add	r3, r0, r3, lsl #2
   10160:	ldr	r8, [r3, #64]	; 0x40
   10164:	mov	r0, r5
   10168:	ldr	r9, [r3, #68]	; 0x44
   1016c:	ldr	r7, [r4, #12]
   10170:	bl	45c0 <av_bprint_clear@plt>
   10174:	cmp	r8, #0
   10178:	beq	101b0 <main@@Base+0xb584>
   1017c:	ldr	r3, [r4, #24]
   10180:	ldr	r1, [pc, #196]	; 1024c <main@@Base+0xb620>
   10184:	add	r3, r4, r3, lsl #10
   10188:	ldr	r2, [r3, #-916]	; 0xfffffc6c
   1018c:	add	r1, pc, r1
   10190:	mov	r0, r5
   10194:	bl	459c <av_bprintf@plt>
   10198:	ldr	r3, [r7, #12]
   1019c:	cmp	r3, #0
   101a0:	bne	101c8 <main@@Base+0xb59c>
   101a4:	ldr	r3, [r9, #8]
   101a8:	tst	r3, #3
   101ac:	beq	101c8 <main@@Base+0xb59c>
   101b0:	ldr	r2, [sp, #4]
   101b4:	ldr	r3, [r6]
   101b8:	cmp	r2, r3
   101bc:	bne	10240 <main@@Base+0xb614>
   101c0:	add	sp, sp, #12
   101c4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   101c8:	ldr	r2, [r4, #24]
   101cc:	ldr	r1, [pc, #124]	; 10250 <main@@Base+0xb624>
   101d0:	add	r2, r4, r2, lsl #2
   101d4:	ldr	r2, [r2, #68]	; 0x44
   101d8:	ldr	r3, [r7, #4]
   101dc:	add	r1, pc, r1
   101e0:	ldr	r2, [r2, #4]
   101e4:	mov	r0, r5
   101e8:	bl	459c <av_bprintf@plt>
   101ec:	ldr	r3, [r8, #8]
   101f0:	tst	r3, #2
   101f4:	beq	101b0 <main@@Base+0xb584>
   101f8:	ldr	r3, [r8]
   101fc:	ldr	r1, [sp, #4]
   10200:	cmp	r3, #18
   10204:	ldrne	r3, [r4, #24]
   10208:	addeq	r4, r4, #8192	; 0x2000
   1020c:	addne	r4, r4, r3, lsl #2
   10210:	ldr	r3, [r6]
   10214:	ldreq	r2, [r4, #2164]	; 0x874
   10218:	ldrne	r2, [r4, #24]
   1021c:	cmp	r1, r3
   10220:	bne	10240 <main@@Base+0xb614>
   10224:	mov	r0, r5
   10228:	ldr	r1, [pc, #36]	; 10254 <main@@Base+0xb628>
   1022c:	ldr	r3, [r7, #4]
   10230:	add	r1, pc, r1
   10234:	add	sp, sp, #12
   10238:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1023c:	b	459c <av_bprintf@plt>
   10240:	bl	3f00 <__stack_chk_fail@plt>
   10244:	andeq	r1, r2, ip, ror #21
   10248:	andeq	r0, r0, r8, ror #7
   1024c:	andeq	lr, r0, ip, lsr #9
   10250:	andeq	sp, r0, r8, lsl #13
   10254:	andeq	lr, r0, r4, asr r2
   10258:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1025c:	mov	r4, r0
   10260:	ldr	r3, [pc, #372]	; 103dc <main@@Base+0xb7b0>
   10264:	ldr	r2, [pc, #372]	; 103e0 <main@@Base+0xb7b4>
   10268:	add	r3, pc, r3
   1026c:	ldr	r6, [r3, r2]
   10270:	ldr	r0, [r0, #24]
   10274:	ldr	ip, [r6]
   10278:	lsl	r2, r0, #2
   1027c:	sub	sp, sp, #8
   10280:	add	r1, r4, r2
   10284:	cmp	r0, #0
   10288:	ldr	r7, [r1, #68]	; 0x44
   1028c:	str	ip, [sp, #4]
   10290:	ldr	r5, [r4, #12]
   10294:	beq	1030c <main@@Base+0xb6e0>
   10298:	mov	r8, #1
   1029c:	mov	r9, #0
   102a0:	add	r2, r5, r2
   102a4:	add	r0, r4, r0, lsl #10
   102a8:	ldr	sl, [r1, #64]	; 0x40
   102ac:	add	r0, r0, #108	; 0x6c
   102b0:	str	r8, [r2, #108]	; 0x6c
   102b4:	str	r9, [r2, #68]	; 0x44
   102b8:	bl	45c0 <av_bprint_clear@plt>
   102bc:	ldr	r3, [r7, #8]
   102c0:	tst	r3, #2
   102c4:	bne	10374 <main@@Base+0xb748>
   102c8:	cmp	sl, r9
   102cc:	beq	102dc <main@@Base+0xb6b0>
   102d0:	ldr	r3, [sl, #8]
   102d4:	tst	r3, #3
   102d8:	beq	10324 <main@@Base+0xb6f8>
   102dc:	ldr	r3, [r5, #16]
   102e0:	cmp	r3, #0
   102e4:	beq	102f4 <main@@Base+0xb6c8>
   102e8:	ldr	r3, [r7, #8]
   102ec:	tst	r3, #3
   102f0:	beq	103a8 <main@@Base+0xb77c>
   102f4:	ldr	r2, [sp, #4]
   102f8:	ldr	r3, [r6]
   102fc:	cmp	r2, r3
   10300:	bne	103d8 <main@@Base+0xb7ac>
   10304:	add	sp, sp, #8
   10308:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1030c:	mov	r3, #1
   10310:	str	r0, [r5, #68]	; 0x44
   10314:	str	r3, [r5, #108]	; 0x6c
   10318:	add	r0, r4, #108	; 0x6c
   1031c:	bl	45c0 <av_bprint_clear@plt>
   10320:	b	102dc <main@@Base+0xb6b0>
   10324:	ldr	r2, [r4, #24]
   10328:	ldr	r3, [r7, #56]	; 0x38
   1032c:	add	r0, r4, r2, lsl #10
   10330:	add	r5, r5, r2, lsl #2
   10334:	mov	r2, r0
   10338:	ldr	r1, [r7, #4]
   1033c:	cmp	r3, r9
   10340:	moveq	r3, r1
   10344:	ldr	r1, [pc, #152]	; 103e4 <main@@Base+0xb7b8>
   10348:	str	r8, [r5, #28]
   1034c:	str	r8, [r5, #64]	; 0x40
   10350:	add	r0, r0, #108	; 0x6c
   10354:	ldr	r2, [r2, #-916]	; 0xfffffc6c
   10358:	add	r1, pc, r1
   1035c:	bl	459c <av_bprintf@plt>
   10360:	ldr	r3, [r4, #24]
   10364:	add	r4, r4, r3, lsl #2
   10368:	ldr	r3, [r4, #24]
   1036c:	str	r3, [r4, #28]
   10370:	b	102f4 <main@@Base+0xb6c8>
   10374:	cmp	sl, #0
   10378:	beq	102dc <main@@Base+0xb6b0>
   1037c:	ldr	r3, [r4, #24]
   10380:	add	r3, r5, r3, lsl #2
   10384:	ldr	r2, [r3, #64]	; 0x40
   10388:	cmp	r2, #0
   1038c:	beq	102dc <main@@Base+0xb6b0>
   10390:	ldr	r1, [pc, #80]	; 103e8 <main@@Base+0xb7bc>
   10394:	str	r9, [r3, #104]	; 0x68
   10398:	mov	r0, r8
   1039c:	add	r1, pc, r1
   103a0:	bl	474c <__printf_chk@plt>
   103a4:	b	102dc <main@@Base+0xb6b0>
   103a8:	ldr	r2, [sp, #4]
   103ac:	ldr	r3, [r6]
   103b0:	cmp	r2, r3
   103b4:	bne	103d8 <main@@Base+0xb7ac>
   103b8:	mov	r0, #1
   103bc:	ldr	r1, [pc, #40]	; 103ec <main@@Base+0xb7c0>
   103c0:	ldrb	r3, [r5, #8]
   103c4:	ldr	r2, [r7, #4]
   103c8:	add	r1, pc, r1
   103cc:	add	sp, sp, #8
   103d0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   103d4:	b	474c <__printf_chk@plt>
   103d8:	bl	3f00 <__stack_chk_fail@plt>
   103dc:	muleq	r2, r4, r9
   103e0:	andeq	r0, r0, r8, ror #7
   103e4:	andeq	lr, r0, r4, lsr r1
   103e8:	strdeq	ip, [r0], -r4
   103ec:	andeq	lr, r0, ip, asr #1
   103f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   103f4:	mov	r4, r0
   103f8:	ldr	r3, [pc, #456]	; 105c8 <main@@Base+0xb99c>
   103fc:	ldr	r2, [pc, #456]	; 105cc <main@@Base+0xb9a0>
   10400:	add	r3, pc, r3
   10404:	ldr	r6, [r3, r2]
   10408:	ldr	r0, [r0, #24]
   1040c:	ldr	r1, [r6]
   10410:	sub	sp, sp, #40	; 0x28
   10414:	add	r2, r4, r0, lsl #2
   10418:	cmp	r0, #0
   1041c:	ldr	r8, [r2, #68]	; 0x44
   10420:	str	r1, [sp, #36]	; 0x24
   10424:	ldr	r7, [r4, #12]
   10428:	bne	104e8 <main@@Base+0xb8bc>
   1042c:	add	r0, r4, #108	; 0x6c
   10430:	bl	45c0 <av_bprint_clear@plt>
   10434:	ldr	r3, [r7, #8]
   10438:	cmp	r3, #0
   1043c:	bne	104d0 <main@@Base+0xb8a4>
   10440:	ldr	r3, [r4, #24]
   10444:	add	r7, r7, r3, lsl #2
   10448:	ldr	r3, [r7, #12]
   1044c:	cmp	r3, #0
   10450:	bne	104d0 <main@@Base+0xb8a4>
   10454:	ldr	r3, [r8, #8]
   10458:	tst	r3, #3
   1045c:	bne	104d0 <main@@Base+0xb8a4>
   10460:	ldr	lr, [r8, #4]
   10464:	add	r3, sp, #4
   10468:	ldrb	r1, [lr]
   1046c:	cmp	r1, #0
   10470:	beq	105bc <main@@Base+0xb990>
   10474:	mov	r0, lr
   10478:	mov	ip, r3
   1047c:	add	lr, lr, #31
   10480:	rsb	r4, r0, #1
   10484:	b	10490 <main@@Base+0xb864>
   10488:	cmp	lr, r0
   1048c:	beq	105ac <main@@Base+0xb980>
   10490:	sub	r2, r1, #97	; 0x61
   10494:	cmp	r2, #25
   10498:	eorls	r1, r1, #32
   1049c:	strb	r1, [ip], #1
   104a0:	add	r2, r4, r0
   104a4:	ldrb	r1, [r0, #1]!
   104a8:	cmp	r1, #0
   104ac:	bne	10488 <main@@Base+0xb85c>
   104b0:	add	ip, r3, r2
   104b4:	mov	lr, #0
   104b8:	ldr	r1, [pc, #272]	; 105d0 <main@@Base+0xb9a4>
   104bc:	mov	r2, r3
   104c0:	add	r1, pc, r1
   104c4:	mov	r0, #1
   104c8:	strb	lr, [ip]
   104cc:	bl	474c <__printf_chk@plt>
   104d0:	ldr	r2, [sp, #36]	; 0x24
   104d4:	ldr	r3, [r6]
   104d8:	cmp	r2, r3
   104dc:	bne	105c4 <main@@Base+0xb998>
   104e0:	add	sp, sp, #40	; 0x28
   104e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   104e8:	ldr	r5, [r2, #64]	; 0x40
   104ec:	add	r0, r4, r0, lsl #10
   104f0:	add	r0, r0, #108	; 0x6c
   104f4:	bl	45c0 <av_bprint_clear@plt>
   104f8:	cmp	r5, #0
   104fc:	beq	10434 <main@@Base+0xb808>
   10500:	ldr	r3, [r5, #8]
   10504:	tst	r3, #3
   10508:	bne	10434 <main@@Base+0xb808>
   1050c:	ldr	r9, [r8, #56]	; 0x38
   10510:	ldr	r3, [r8, #4]
   10514:	mov	r1, #1
   10518:	cmp	r9, #0
   1051c:	moveq	r9, r3
   10520:	ldr	r3, [r4, #24]
   10524:	add	r0, r4, r3, lsl #10
   10528:	add	r2, r7, r3, lsl #2
   1052c:	mov	r3, r0
   10530:	str	r1, [r2, #12]
   10534:	ldrb	r1, [r9]
   10538:	ldr	r2, [r3, #-916]	; 0xfffffc6c
   1053c:	cmp	r1, #0
   10540:	add	r0, r0, #108	; 0x6c
   10544:	add	r3, sp, #4
   10548:	beq	105b4 <main@@Base+0xb988>
   1054c:	mov	ip, r9
   10550:	mov	lr, r3
   10554:	add	r9, r9, #31
   10558:	rsb	sl, ip, #1
   1055c:	b	10568 <main@@Base+0xb93c>
   10560:	cmp	r9, ip
   10564:	beq	105a4 <main@@Base+0xb978>
   10568:	sub	r5, r1, #97	; 0x61
   1056c:	cmp	r5, #25
   10570:	eorls	r1, r1, #32
   10574:	strb	r1, [lr], #1
   10578:	add	r5, sl, ip
   1057c:	ldrb	r1, [ip, #1]!
   10580:	cmp	r1, #0
   10584:	bne	10560 <main@@Base+0xb934>
   10588:	add	r5, r3, r5
   1058c:	mov	ip, #0
   10590:	ldr	r1, [pc, #60]	; 105d4 <main@@Base+0xb9a8>
   10594:	strb	ip, [r5]
   10598:	add	r1, pc, r1
   1059c:	bl	459c <av_bprintf@plt>
   105a0:	b	10434 <main@@Base+0xb808>
   105a4:	add	r5, sp, #35	; 0x23
   105a8:	b	1058c <main@@Base+0xb960>
   105ac:	add	ip, sp, #35	; 0x23
   105b0:	b	104b4 <main@@Base+0xb888>
   105b4:	mov	r5, r3
   105b8:	b	1058c <main@@Base+0xb960>
   105bc:	mov	ip, r3
   105c0:	b	104b4 <main@@Base+0xb888>
   105c4:	bl	3f00 <__stack_chk_fail@plt>
   105c8:	strdeq	r1, [r2], -ip
   105cc:	andeq	r0, r0, r8, ror #7
   105d0:			; <UNDEFINED> instruction: 0x0000dfbc
   105d4:	strdeq	sp, [r0], -r4
   105d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   105dc:	mov	r6, r0
   105e0:	ldr	r3, [pc, #652]	; 10874 <main@@Base+0xbc48>
   105e4:	ldr	r2, [pc, #652]	; 10878 <main@@Base+0xbc4c>
   105e8:	add	r3, pc, r3
   105ec:	ldr	r7, [r3, r2]
   105f0:	ldr	sl, [pc, #644]	; 1087c <main@@Base+0xbc50>
   105f4:	ldr	r3, [r7]
   105f8:	ldr	r9, [pc, #640]	; 10880 <main@@Base+0xbc54>
   105fc:	ldr	r8, [pc, #640]	; 10884 <main@@Base+0xbc58>
   10600:	sub	sp, sp, #8
   10604:	sub	r5, r1, #1
   10608:	add	sl, pc, sl
   1060c:	str	r3, [sp, #4]
   10610:	add	r9, pc, r9
   10614:	add	r8, pc, r8
   10618:	ldrb	r4, [r5, #1]!
   1061c:	cmp	r4, #0
   10620:	beq	107bc <main@@Base+0xbb90>
   10624:	sub	r3, r4, #8
   10628:	cmp	r3, #84	; 0x54
   1062c:	addls	pc, pc, r3, lsl #2
   10630:	b	10798 <main@@Base+0xbb6c>
   10634:	b	107ec <main@@Base+0xbbc0>
   10638:	b	107d8 <main@@Base+0xbbac>
   1063c:	b	10824 <main@@Base+0xbbf8>
   10640:	b	10798 <main@@Base+0xbb6c>
   10644:	b	10808 <main@@Base+0xbbdc>
   10648:	b	10840 <main@@Base+0xbc14>
   1064c:	b	10798 <main@@Base+0xbb6c>
   10650:	b	10798 <main@@Base+0xbb6c>
   10654:	b	10798 <main@@Base+0xbb6c>
   10658:	b	10798 <main@@Base+0xbb6c>
   1065c:	b	10798 <main@@Base+0xbb6c>
   10660:	b	10798 <main@@Base+0xbb6c>
   10664:	b	10798 <main@@Base+0xbb6c>
   10668:	b	10798 <main@@Base+0xbb6c>
   1066c:	b	10798 <main@@Base+0xbb6c>
   10670:	b	10798 <main@@Base+0xbb6c>
   10674:	b	10798 <main@@Base+0xbb6c>
   10678:	b	10798 <main@@Base+0xbb6c>
   1067c:	b	10798 <main@@Base+0xbb6c>
   10680:	b	10798 <main@@Base+0xbb6c>
   10684:	b	10798 <main@@Base+0xbb6c>
   10688:	b	10798 <main@@Base+0xbb6c>
   1068c:	b	10798 <main@@Base+0xbb6c>
   10690:	b	10798 <main@@Base+0xbb6c>
   10694:	b	10798 <main@@Base+0xbb6c>
   10698:	b	10798 <main@@Base+0xbb6c>
   1069c:	b	10798 <main@@Base+0xbb6c>
   106a0:	b	10788 <main@@Base+0xbb5c>
   106a4:	b	10798 <main@@Base+0xbb6c>
   106a8:	b	10798 <main@@Base+0xbb6c>
   106ac:	b	10798 <main@@Base+0xbb6c>
   106b0:	b	10798 <main@@Base+0xbb6c>
   106b4:	b	10798 <main@@Base+0xbb6c>
   106b8:	b	10798 <main@@Base+0xbb6c>
   106bc:	b	10798 <main@@Base+0xbb6c>
   106c0:	b	10798 <main@@Base+0xbb6c>
   106c4:	b	10798 <main@@Base+0xbb6c>
   106c8:	b	10798 <main@@Base+0xbb6c>
   106cc:	b	10798 <main@@Base+0xbb6c>
   106d0:	b	10798 <main@@Base+0xbb6c>
   106d4:	b	10798 <main@@Base+0xbb6c>
   106d8:	b	10798 <main@@Base+0xbb6c>
   106dc:	b	10798 <main@@Base+0xbb6c>
   106e0:	b	10798 <main@@Base+0xbb6c>
   106e4:	b	10798 <main@@Base+0xbb6c>
   106e8:	b	10798 <main@@Base+0xbb6c>
   106ec:	b	10798 <main@@Base+0xbb6c>
   106f0:	b	10798 <main@@Base+0xbb6c>
   106f4:	b	10798 <main@@Base+0xbb6c>
   106f8:	b	10798 <main@@Base+0xbb6c>
   106fc:	b	10788 <main@@Base+0xbb5c>
   10700:	b	10798 <main@@Base+0xbb6c>
   10704:	b	10798 <main@@Base+0xbb6c>
   10708:	b	10788 <main@@Base+0xbb5c>
   1070c:	b	10798 <main@@Base+0xbb6c>
   10710:	b	10798 <main@@Base+0xbb6c>
   10714:	b	10798 <main@@Base+0xbb6c>
   10718:	b	10798 <main@@Base+0xbb6c>
   1071c:	b	10798 <main@@Base+0xbb6c>
   10720:	b	10798 <main@@Base+0xbb6c>
   10724:	b	10798 <main@@Base+0xbb6c>
   10728:	b	10798 <main@@Base+0xbb6c>
   1072c:	b	10798 <main@@Base+0xbb6c>
   10730:	b	10798 <main@@Base+0xbb6c>
   10734:	b	10798 <main@@Base+0xbb6c>
   10738:	b	10798 <main@@Base+0xbb6c>
   1073c:	b	10798 <main@@Base+0xbb6c>
   10740:	b	10798 <main@@Base+0xbb6c>
   10744:	b	10798 <main@@Base+0xbb6c>
   10748:	b	10798 <main@@Base+0xbb6c>
   1074c:	b	10798 <main@@Base+0xbb6c>
   10750:	b	10798 <main@@Base+0xbb6c>
   10754:	b	10798 <main@@Base+0xbb6c>
   10758:	b	10798 <main@@Base+0xbb6c>
   1075c:	b	10798 <main@@Base+0xbb6c>
   10760:	b	10798 <main@@Base+0xbb6c>
   10764:	b	10798 <main@@Base+0xbb6c>
   10768:	b	10798 <main@@Base+0xbb6c>
   1076c:	b	10798 <main@@Base+0xbb6c>
   10770:	b	10798 <main@@Base+0xbb6c>
   10774:	b	10798 <main@@Base+0xbb6c>
   10778:	b	10798 <main@@Base+0xbb6c>
   1077c:	b	10798 <main@@Base+0xbb6c>
   10780:	b	10798 <main@@Base+0xbb6c>
   10784:	b	10788 <main@@Base+0xbb5c>
   10788:	mov	r2, #1
   1078c:	mov	r1, #92	; 0x5c
   10790:	mov	r0, r6
   10794:	bl	45f0 <av_bprint_chars@plt>
   10798:	cmp	r4, #31
   1079c:	bhi	1085c <main@@Base+0xbc30>
   107a0:	mov	r2, r4
   107a4:	mov	r1, sl
   107a8:	mov	r0, r6
   107ac:	bl	459c <av_bprintf@plt>
   107b0:	ldrb	r4, [r5, #1]!
   107b4:	cmp	r4, #0
   107b8:	bne	10624 <main@@Base+0xb9f8>
   107bc:	ldr	r2, [sp, #4]
   107c0:	ldr	r3, [r7]
   107c4:	ldr	r0, [r6]
   107c8:	cmp	r2, r3
   107cc:	bne	10870 <main@@Base+0xbc44>
   107d0:	add	sp, sp, #8
   107d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   107d8:	mov	r2, r9
   107dc:	mov	r1, r8
   107e0:	mov	r0, r6
   107e4:	bl	459c <av_bprintf@plt>
   107e8:	b	10618 <main@@Base+0xb9ec>
   107ec:	ldr	r2, [pc, #148]	; 10888 <main@@Base+0xbc5c>
   107f0:	ldr	r1, [pc, #148]	; 1088c <main@@Base+0xbc60>
   107f4:	add	r2, pc, r2
   107f8:	add	r1, pc, r1
   107fc:	mov	r0, r6
   10800:	bl	459c <av_bprintf@plt>
   10804:	b	10618 <main@@Base+0xb9ec>
   10808:	ldr	r2, [pc, #128]	; 10890 <main@@Base+0xbc64>
   1080c:	ldr	r1, [pc, #128]	; 10894 <main@@Base+0xbc68>
   10810:	add	r2, pc, r2
   10814:	add	r1, pc, r1
   10818:	mov	r0, r6
   1081c:	bl	459c <av_bprintf@plt>
   10820:	b	10618 <main@@Base+0xb9ec>
   10824:	ldr	r2, [pc, #108]	; 10898 <main@@Base+0xbc6c>
   10828:	ldr	r1, [pc, #108]	; 1089c <main@@Base+0xbc70>
   1082c:	add	r2, pc, r2
   10830:	add	r1, pc, r1
   10834:	mov	r0, r6
   10838:	bl	459c <av_bprintf@plt>
   1083c:	b	10618 <main@@Base+0xb9ec>
   10840:	ldr	r2, [pc, #88]	; 108a0 <main@@Base+0xbc74>
   10844:	ldr	r1, [pc, #88]	; 108a4 <main@@Base+0xbc78>
   10848:	add	r2, pc, r2
   1084c:	add	r1, pc, r1
   10850:	mov	r0, r6
   10854:	bl	459c <av_bprintf@plt>
   10858:	b	10618 <main@@Base+0xb9ec>
   1085c:	mov	r1, r4
   10860:	mov	r2, #1
   10864:	mov	r0, r6
   10868:	bl	45f0 <av_bprint_chars@plt>
   1086c:	b	10618 <main@@Base+0xb9ec>
   10870:	bl	3f00 <__stack_chk_fail@plt>
   10874:	andeq	r1, r2, r4, lsl r6
   10878:	andeq	r0, r0, r8, ror #7
   1087c:	andeq	sp, r0, r8, lsr #29
   10880:	muleq	r0, ip, lr
   10884:	andeq	lr, r0, r4, lsr #32
   10888:	andeq	sp, r0, r8, lsr #25
   1088c:	andeq	sp, r0, r0, asr #28
   10890:	muleq	r0, r0, ip
   10894:	andeq	sp, r0, r4, lsr #28
   10898:	andeq	sp, r0, r8, ror ip
   1089c:	andeq	sp, r0, r8, lsl #28
   108a0:	andeq	sp, r0, r0, ror #24
   108a4:	andeq	sp, r0, ip, ror #27
   108a8:	push	{r4, r5, r6, r7, lr}
   108ac:	mov	r7, r1
   108b0:	ldr	r3, [pc, #164]	; 1095c <main@@Base+0xbd30>
   108b4:	ldr	r0, [pc, #164]	; 10960 <main@@Base+0xbd34>
   108b8:	add	r3, pc, r3
   108bc:	ldr	r5, [r3, r0]
   108c0:	sub	sp, sp, #1024	; 0x400
   108c4:	sub	sp, sp, #12
   108c8:	add	r4, sp, #4
   108cc:	ldr	r3, [r5]
   108d0:	mov	r6, r2
   108d4:	mov	r0, r4
   108d8:	mvn	r2, #0
   108dc:	mov	r1, #1
   108e0:	str	r3, [sp, #1028]	; 0x404
   108e4:	bl	3f48 <av_bprint_init@plt>
   108e8:	mov	r1, r7
   108ec:	mov	r0, r4
   108f0:	bl	105d8 <main@@Base+0xb9ac>
   108f4:	ldr	r1, [pc, #104]	; 10964 <main@@Base+0xbd38>
   108f8:	mov	r2, r0
   108fc:	add	r1, pc, r1
   10900:	mov	r0, #1
   10904:	bl	474c <__printf_chk@plt>
   10908:	mov	r0, r4
   1090c:	bl	45c0 <av_bprint_clear@plt>
   10910:	mov	r1, r6
   10914:	mov	r0, r4
   10918:	bl	105d8 <main@@Base+0xb9ac>
   1091c:	ldr	r1, [pc, #68]	; 10968 <main@@Base+0xbd3c>
   10920:	mov	r2, r0
   10924:	add	r1, pc, r1
   10928:	mov	r0, #1
   1092c:	bl	474c <__printf_chk@plt>
   10930:	mov	r0, r4
   10934:	mov	r1, #0
   10938:	bl	4308 <av_bprint_finalize@plt>
   1093c:	ldr	r2, [sp, #1028]	; 0x404
   10940:	ldr	r3, [r5]
   10944:	cmp	r2, r3
   10948:	bne	10958 <main@@Base+0xbd2c>
   1094c:	add	sp, sp, #1024	; 0x400
   10950:	add	sp, sp, #12
   10954:	pop	{r4, r5, r6, r7, pc}
   10958:	bl	3f00 <__stack_chk_fail@plt>
   1095c:	andeq	r1, r2, r4, asr #6
   10960:	andeq	r0, r0, r8, ror #7
   10964:	andeq	sp, r0, r0, asr #23
   10968:	andeq	fp, r0, r0, asr #28
   1096c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10970:	mov	r4, r1
   10974:	ldr	r3, [pc, #336]	; 10acc <main@@Base+0xbea0>
   10978:	ldr	r1, [pc, #336]	; 10ad0 <main@@Base+0xbea4>
   1097c:	add	r3, pc, r3
   10980:	ldr	r6, [r3, r1]
   10984:	ldrb	r1, [r4]
   10988:	ldr	r3, [r6]
   1098c:	sub	sp, sp, #8
   10990:	cmp	r1, #0
   10994:	mov	r5, r0
   10998:	str	r3, [sp, #4]
   1099c:	beq	10a34 <main@@Base+0xbe08>
   109a0:	ldr	sl, [pc, #300]	; 10ad4 <main@@Base+0xbea8>
   109a4:	ldr	r9, [pc, #300]	; 10ad8 <main@@Base+0xbeac>
   109a8:	ldr	r8, [pc, #300]	; 10adc <main@@Base+0xbeb0>
   109ac:	mov	r7, r2
   109b0:	add	sl, pc, sl
   109b4:	add	r9, pc, r9
   109b8:	add	r8, pc, r8
   109bc:	b	109f4 <main@@Base+0xbdc8>
   109c0:	cmp	r1, #8
   109c4:	beq	10a7c <main@@Base+0xbe50>
   109c8:	cmp	r1, #10
   109cc:	bne	10a64 <main@@Base+0xbe38>
   109d0:	ldr	r2, [pc, #264]	; 10ae0 <main@@Base+0xbeb4>
   109d4:	ldr	r1, [pc, #264]	; 10ae4 <main@@Base+0xbeb8>
   109d8:	add	r2, pc, r2
   109dc:	add	r1, pc, r1
   109e0:	mov	r0, r5
   109e4:	bl	459c <av_bprintf@plt>
   109e8:	ldrb	r1, [r4, #1]!
   109ec:	cmp	r1, #0
   109f0:	beq	10a34 <main@@Base+0xbe08>
   109f4:	cmp	r1, #12
   109f8:	beq	10a50 <main@@Base+0xbe24>
   109fc:	bls	109c0 <main@@Base+0xbd94>
   10a00:	cmp	r1, #13
   10a04:	beq	10a98 <main@@Base+0xbe6c>
   10a08:	cmp	r1, #92	; 0x5c
   10a0c:	bne	10a64 <main@@Base+0xbe38>
   10a10:	ldr	r2, [pc, #208]	; 10ae8 <main@@Base+0xbebc>
   10a14:	ldr	r1, [pc, #208]	; 10aec <main@@Base+0xbec0>
   10a18:	add	r2, pc, r2
   10a1c:	add	r1, pc, r1
   10a20:	mov	r0, r5
   10a24:	bl	459c <av_bprintf@plt>
   10a28:	ldrb	r1, [r4, #1]!
   10a2c:	cmp	r1, #0
   10a30:	bne	109f4 <main@@Base+0xbdc8>
   10a34:	ldr	r2, [sp, #4]
   10a38:	ldr	r3, [r6]
   10a3c:	ldr	r0, [r5]
   10a40:	cmp	r2, r3
   10a44:	bne	10ac8 <main@@Base+0xbe9c>
   10a48:	add	sp, sp, #8
   10a4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a50:	mov	r2, sl
   10a54:	mov	r1, r9
   10a58:	mov	r0, r5
   10a5c:	bl	459c <av_bprintf@plt>
   10a60:	b	109e8 <main@@Base+0xbdbc>
   10a64:	cmp	r7, r1
   10a68:	beq	10ab0 <main@@Base+0xbe84>
   10a6c:	mov	r2, #1
   10a70:	mov	r0, r5
   10a74:	bl	45f0 <av_bprint_chars@plt>
   10a78:	b	109e8 <main@@Base+0xbdbc>
   10a7c:	ldr	r2, [pc, #108]	; 10af0 <main@@Base+0xbec4>
   10a80:	ldr	r1, [pc, #108]	; 10af4 <main@@Base+0xbec8>
   10a84:	add	r2, pc, r2
   10a88:	add	r1, pc, r1
   10a8c:	mov	r0, r5
   10a90:	bl	459c <av_bprintf@plt>
   10a94:	b	109e8 <main@@Base+0xbdbc>
   10a98:	ldr	r1, [pc, #88]	; 10af8 <main@@Base+0xbecc>
   10a9c:	mov	r2, r8
   10aa0:	add	r1, pc, r1
   10aa4:	mov	r0, r5
   10aa8:	bl	459c <av_bprintf@plt>
   10aac:	b	109e8 <main@@Base+0xbdbc>
   10ab0:	mov	r1, #92	; 0x5c
   10ab4:	mov	r2, #1
   10ab8:	mov	r0, r5
   10abc:	bl	45f0 <av_bprint_chars@plt>
   10ac0:	ldrb	r1, [r4]
   10ac4:	b	10a6c <main@@Base+0xbe40>
   10ac8:	bl	3f00 <__stack_chk_fail@plt>
   10acc:	andeq	r1, r2, r0, lsl #5
   10ad0:	andeq	r0, r0, r8, ror #7
   10ad4:	strdeq	sp, [r0], -r0
   10ad8:	andeq	sp, r0, r4, lsl #25
   10adc:	strdeq	sp, [r0], -r0
   10ae0:	andeq	sp, r0, ip, asr #21
   10ae4:	andeq	sp, r0, ip, asr ip
   10ae8:	andeq	sp, r0, r8, lsr #21
   10aec:	andeq	sp, r0, ip, lsl ip
   10af0:	andeq	sp, r0, r8, lsl sl
   10af4:			; <UNDEFINED> instruction: 0x0000dbb0
   10af8:	muleq	r0, r8, fp
   10afc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10b00:	mov	r8, r1
   10b04:	ldr	r6, [pc, #656]	; 10d9c <main@@Base+0xc170>
   10b08:	ldr	ip, [pc, #656]	; 10da0 <main@@Base+0xc174>
   10b0c:	add	r6, pc, r6
   10b10:	ldr	r7, [r6, ip]
   10b14:	sub	sp, sp, #1040	; 0x410
   10b18:	ldr	r1, [r7]
   10b1c:	sub	sp, sp, #12
   10b20:	subs	r4, r0, #0
   10b24:	str	r1, [sp, #1044]	; 0x414
   10b28:	mov	r0, r4
   10b2c:	mov	r1, r8
   10b30:	ldrne	r5, [r4]
   10b34:	moveq	r5, r4
   10b38:	mov	sl, r2
   10b3c:	str	r3, [sp, #16]
   10b40:	bl	41c4 <av_log_default_callback@plt>
   10b44:	mov	r1, #1024	; 0x400
   10b48:	ldr	r3, [pc, #596]	; 10da4 <main@@Base+0xc178>
   10b4c:	add	r9, sp, #20
   10b50:	add	r3, pc, r3
   10b54:	add	r3, r3, #4
   10b58:	mov	r2, sl
   10b5c:	stmib	sp, {r1, r3}
   10b60:	mov	r0, r4
   10b64:	mov	r1, r8
   10b68:	ldr	r3, [sp, #16]
   10b6c:	str	r9, [sp]
   10b70:	bl	4584 <av_log_format_line@plt>
   10b74:	ldr	r3, [pc, #556]	; 10da8 <main@@Base+0xc17c>
   10b78:	ldr	sl, [pc, #556]	; 10dac <main@@Base+0xc180>
   10b7c:	ldr	r6, [r6, r3]
   10b80:	add	sl, pc, sl
   10b84:	mov	r0, r6
   10b88:	bl	3fd8 <pthread_mutex_lock@plt>
   10b8c:	ldr	r1, [sl, #24]
   10b90:	ldr	r0, [sl, #28]
   10b94:	add	r1, r1, #1
   10b98:	mov	r2, #24
   10b9c:	bl	40a4 <av_realloc_array@plt>
   10ba0:	cmp	r0, #0
   10ba4:	beq	10d60 <main@@Base+0xc134>
   10ba8:	mov	r2, #0
   10bac:	ldr	r3, [sl, #24]
   10bb0:	cmp	r5, r2
   10bb4:	add	r3, r3, r3, lsl #1
   10bb8:	lsl	r3, r3, #3
   10bbc:	add	fp, r0, r3
   10bc0:	str	r2, [r0, r3]
   10bc4:	str	r0, [sl, #28]
   10bc8:	str	r2, [fp, #4]
   10bcc:	str	r2, [fp, #8]
   10bd0:	str	r2, [fp, #12]
   10bd4:	str	r2, [fp, #16]
   10bd8:	str	r2, [fp, #20]
   10bdc:	beq	10d20 <main@@Base+0xc0f4>
   10be0:	ldr	r3, [r5, #4]
   10be4:	mov	r0, r4
   10be8:	blx	r3
   10bec:	bl	4080 <av_strdup@plt>
   10bf0:	ldr	r3, [sl, #24]
   10bf4:	ldr	r2, [r5, #36]	; 0x24
   10bf8:	ldr	fp, [sl, #28]
   10bfc:	add	r3, r3, r3, lsl #1
   10c00:	lsl	r3, r3, #3
   10c04:	cmp	r2, #0
   10c08:	str	r0, [fp, r3]
   10c0c:	add	fp, fp, r3
   10c10:	beq	10d84 <main@@Base+0xc158>
   10c14:	mov	r0, r4
   10c18:	blx	r2
   10c1c:	ldr	r3, [sl, #24]
   10c20:	ldr	r2, [sl, #28]
   10c24:	add	r3, r3, r3, lsl #1
   10c28:	str	r0, [fp, #12]
   10c2c:	add	fp, r2, r3, lsl #3
   10c30:	str	r8, [fp, #4]
   10c34:	mov	r0, r9
   10c38:	bl	4080 <av_strdup@plt>
   10c3c:	str	r0, [fp, #8]
   10c40:	mov	r8, r0
   10c44:	bl	4110 <strlen@plt>
   10c48:	subs	r3, r0, #1
   10c4c:	bcc	10c98 <main@@Base+0xc06c>
   10c50:	ldrb	r2, [r8, r3]
   10c54:	add	r3, r8, r3
   10c58:	cmp	r2, #10
   10c5c:	bne	10c90 <main@@Base+0xc064>
   10c60:	sub	r0, r0, #2
   10c64:	mov	ip, #0
   10c68:	add	r0, r8, r0
   10c6c:	add	r3, r3, #1
   10c70:	sub	r1, r8, #1
   10c74:	b	10c84 <main@@Base+0xc058>
   10c78:	ldrb	r2, [r0], #-1
   10c7c:	cmp	r2, #10
   10c80:	bne	10c90 <main@@Base+0xc064>
   10c84:	cmp	r1, r0
   10c88:	strb	ip, [r3, #-1]!
   10c8c:	bne	10c78 <main@@Base+0xc04c>
   10c90:	cmp	r5, #0
   10c94:	beq	10d44 <main@@Base+0xc118>
   10c98:	ldr	r3, [r5, #20]
   10c9c:	cmp	r3, #0
   10ca0:	beq	10d44 <main@@Base+0xc118>
   10ca4:	ldr	r4, [r4, r3]
   10ca8:	cmp	r4, #0
   10cac:	beq	10d44 <main@@Base+0xc118>
   10cb0:	ldr	r3, [r4]
   10cb4:	cmp	r3, #0
   10cb8:	beq	10d44 <main@@Base+0xc118>
   10cbc:	ldr	r3, [r3, #4]
   10cc0:	mov	r0, r4
   10cc4:	blx	r3
   10cc8:	ldr	r2, [pc, #224]	; 10db0 <main@@Base+0xc184>
   10ccc:	add	r2, pc, r2
   10cd0:	ldr	r3, [r2, #24]
   10cd4:	ldr	r5, [r2, #28]
   10cd8:	add	r3, r3, r3, lsl #1
   10cdc:	add	r5, r5, r3, lsl #3
   10ce0:	bl	4080 <av_strdup@plt>
   10ce4:	ldr	r2, [r4]
   10ce8:	str	r0, [r5, #16]
   10cec:	ldr	r3, [r2, #36]	; 0x24
   10cf0:	cmp	r3, #0
   10cf4:	beq	10d90 <main@@Base+0xc164>
   10cf8:	mov	r0, r4
   10cfc:	blx	r3
   10d00:	ldr	r2, [pc, #172]	; 10db4 <main@@Base+0xc188>
   10d04:	add	r2, pc, r2
   10d08:	ldr	r3, [r2, #24]
   10d0c:	ldr	r2, [r2, #28]
   10d10:	add	r1, r3, r3, lsl #1
   10d14:	add	r2, r2, r1, lsl #3
   10d18:	str	r0, [r2, #20]
   10d1c:	b	10d50 <main@@Base+0xc124>
   10d20:	str	r5, [r0, r3]
   10d24:	str	r8, [fp, #4]
   10d28:	mov	r0, r9
   10d2c:	bl	4080 <av_strdup@plt>
   10d30:	str	r0, [fp, #8]
   10d34:	mov	r8, r0
   10d38:	bl	4110 <strlen@plt>
   10d3c:	subs	r3, r0, #1
   10d40:	bcs	10c50 <main@@Base+0xc024>
   10d44:	ldr	r3, [pc, #108]	; 10db8 <main@@Base+0xc18c>
   10d48:	add	r3, pc, r3
   10d4c:	ldr	r3, [r3, #24]
   10d50:	ldr	r2, [pc, #100]	; 10dbc <main@@Base+0xc190>
   10d54:	add	r3, r3, #1
   10d58:	add	r2, pc, r2
   10d5c:	str	r3, [r2, #24]
   10d60:	mov	r0, r6
   10d64:	bl	4860 <pthread_mutex_unlock@plt>
   10d68:	ldr	r2, [sp, #1044]	; 0x414
   10d6c:	ldr	r3, [r7]
   10d70:	cmp	r2, r3
   10d74:	bne	10d98 <main@@Base+0xc16c>
   10d78:	add	sp, sp, #1040	; 0x410
   10d7c:	add	sp, sp, #12
   10d80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d84:	ldr	r3, [r5, #32]
   10d88:	str	r3, [fp, #12]
   10d8c:	b	10c30 <main@@Base+0xc004>
   10d90:	ldr	r0, [r2, #32]
   10d94:	b	10d00 <main@@Base+0xc0d4>
   10d98:	bl	3f00 <__stack_chk_fail@plt>
   10d9c:	strdeq	r1, [r2], -r0
   10da0:	andeq	r0, r0, r8, ror #7
   10da4:	andeq	r1, r2, r0, lsl #10
   10da8:	strdeq	r0, [r0], -r4
   10dac:	andeq	r2, r2, ip, ror #1
   10db0:	andeq	r1, r2, r0, lsr #31
   10db4:	andeq	r1, r2, r8, ror #30
   10db8:	andeq	r1, r2, r4, lsr #30
   10dbc:	andeq	r1, r2, r4, lsl pc
   10dc0:	push	{r4, r5, lr}
   10dc4:	ldr	r2, [pc, #156]	; 10e68 <main@@Base+0xc23c>
   10dc8:	ldr	r0, [pc, #156]	; 10e6c <main@@Base+0xc240>
   10dcc:	ldr	r3, [pc, #156]	; 10e70 <main@@Base+0xc244>
   10dd0:	add	r2, pc, r2
   10dd4:	ldr	r5, [r2, r0]
   10dd8:	add	r3, pc, r3
   10ddc:	ldr	r3, [r3, #32]
   10de0:	ldr	r0, [r5]
   10de4:	sub	sp, sp, #20
   10de8:	cmp	r3, #0
   10dec:	mov	r4, r1
   10df0:	str	r0, [sp, #12]
   10df4:	bne	10e40 <main@@Base+0xc214>
   10df8:	ldr	r1, [pc, #116]	; 10e74 <main@@Base+0xc248>
   10dfc:	mov	r0, r4
   10e00:	add	r1, pc, r1
   10e04:	bl	46c8 <strcmp@plt>
   10e08:	cmp	r0, #0
   10e0c:	beq	10e34 <main@@Base+0xc208>
   10e10:	ldr	r1, [sp, #12]
   10e14:	ldr	r2, [pc, #92]	; 10e78 <main@@Base+0xc24c>
   10e18:	ldr	r3, [r5]
   10e1c:	add	r2, pc, r2
   10e20:	cmp	r1, r3
   10e24:	str	r4, [r2, #32]
   10e28:	bne	10e64 <main@@Base+0xc238>
   10e2c:	add	sp, sp, #20
   10e30:	pop	{r4, r5, pc}
   10e34:	ldr	r4, [pc, #64]	; 10e7c <main@@Base+0xc250>
   10e38:	add	r4, pc, r4
   10e3c:	b	10e10 <main@@Base+0xc1e4>
   10e40:	ldr	r2, [pc, #56]	; 10e80 <main@@Base+0xc254>
   10e44:	str	r3, [sp]
   10e48:	mov	r0, #0
   10e4c:	mov	r3, r1
   10e50:	add	r2, pc, r2
   10e54:	mov	r1, #16
   10e58:	bl	40f8 <av_log@plt>
   10e5c:	mov	r0, #1
   10e60:	bl	902c <main@@Base+0x4400>
   10e64:	bl	3f00 <__stack_chk_fail@plt>
   10e68:	andeq	r0, r2, ip, lsr #28
   10e6c:	andeq	r0, r0, r8, ror #7
   10e70:	muleq	r2, r4, lr
   10e74:	andeq	sp, r0, ip, asr r7
   10e78:	andeq	r1, r2, r0, asr lr
   10e7c:	ldrdeq	sp, [r0], -r0
   10e80:	andeq	sp, r0, r0, asr #13
   10e84:	push	{r4, r5, r6, r7, lr}
   10e88:	ldr	r6, [pc, #96]	; 10ef0 <main@@Base+0xc2c4>
   10e8c:	ldr	r3, [pc, #96]	; 10ef4 <main@@Base+0xc2c8>
   10e90:	add	r6, pc, r6
   10e94:	ldr	r7, [r6, r3]
   10e98:	ldr	r5, [pc, #88]	; 10ef8 <main@@Base+0xc2cc>
   10e9c:	ldr	r3, [r7]
   10ea0:	add	r5, pc, r5
   10ea4:	sub	sp, sp, #12
   10ea8:	add	r4, r5, #64	; 0x40
   10eac:	str	r3, [sp, #4]
   10eb0:	add	r5, r5, #3088	; 0xc10
   10eb4:	mov	r0, r4
   10eb8:	add	r4, r4, #72	; 0x48
   10ebc:	bl	3ee8 <av_dict_free@plt>
   10ec0:	cmp	r4, r5
   10ec4:	bne	10eb4 <main@@Base+0xc288>
   10ec8:	ldr	r2, [sp, #4]
   10ecc:	ldr	r3, [r7]
   10ed0:	cmp	r2, r3
   10ed4:	bne	10eec <main@@Base+0xc2c0>
   10ed8:	ldr	r3, [pc, #28]	; 10efc <main@@Base+0xc2d0>
   10edc:	ldr	r0, [r6, r3]
   10ee0:	add	sp, sp, #12
   10ee4:	pop	{r4, r5, r6, r7, lr}
   10ee8:	b	4680 <pthread_mutex_destroy@plt>
   10eec:	bl	3f00 <__stack_chk_fail@plt>
   10ef0:	andeq	r0, r2, ip, ror #26
   10ef4:	andeq	r0, r0, r8, ror #7
   10ef8:			; <UNDEFINED> instruction: 0x000211bc
   10efc:	strdeq	r0, [r0], -r4
   10f00:	push	{r4, r5, r6, r7, r8, lr}
   10f04:	mov	r4, r1
   10f08:	mov	ip, #0
   10f0c:	mov	r8, #34	; 0x22
   10f10:	ldr	r3, [pc, #224]	; 10ff8 <main@@Base+0xc3cc>
   10f14:	ldr	r1, [pc, #224]	; 10ffc <main@@Base+0xc3d0>
   10f18:	add	r3, pc, r3
   10f1c:	ldr	r6, [r3, r1]
   10f20:	sub	sp, sp, #16
   10f24:	strb	r2, [sp, #4]
   10f28:	ldr	r2, [r6]
   10f2c:	ldr	r3, [pc, #204]	; 11000 <main@@Base+0xc3d4>
   10f30:	mov	r5, r0
   10f34:	add	r1, sp, #4
   10f38:	mov	r0, r4
   10f3c:	strb	r8, [sp, #5]
   10f40:	str	r2, [sp, #12]
   10f44:	strb	ip, [sp, #8]
   10f48:	strh	r3, [sp, #6]
   10f4c:	bl	4410 <strcspn@plt>
   10f50:	ldrb	r7, [r4, r0]
   10f54:	cmp	r7, #0
   10f58:	bne	10fd4 <main@@Base+0xc3a8>
   10f5c:	ldrb	r1, [r4]
   10f60:	cmp	r1, #0
   10f64:	bne	10f88 <main@@Base+0xc35c>
   10f68:	b	10fb8 <main@@Base+0xc38c>
   10f6c:	ldrb	r1, [r4]
   10f70:	mov	r2, #1
   10f74:	mov	r0, r5
   10f78:	bl	45f0 <av_bprint_chars@plt>
   10f7c:	ldrb	r1, [r4, #1]!
   10f80:	cmp	r1, #0
   10f84:	beq	10fa0 <main@@Base+0xc374>
   10f88:	cmp	r1, #34	; 0x22
   10f8c:	bne	10f6c <main@@Base+0xc340>
   10f90:	mov	r2, #1
   10f94:	mov	r0, r5
   10f98:	bl	45f0 <av_bprint_chars@plt>
   10f9c:	b	10f6c <main@@Base+0xc340>
   10fa0:	cmp	r7, #0
   10fa4:	beq	10fb8 <main@@Base+0xc38c>
   10fa8:	mov	r2, #1
   10fac:	mov	r1, #34	; 0x22
   10fb0:	mov	r0, r5
   10fb4:	bl	45f0 <av_bprint_chars@plt>
   10fb8:	ldr	r2, [sp, #12]
   10fbc:	ldr	r3, [r6]
   10fc0:	ldr	r0, [r5]
   10fc4:	cmp	r2, r3
   10fc8:	bne	10ff4 <main@@Base+0xc3c8>
   10fcc:	add	sp, sp, #16
   10fd0:	pop	{r4, r5, r6, r7, r8, pc}
   10fd4:	mov	r1, r8
   10fd8:	mov	r2, #1
   10fdc:	mov	r0, r5
   10fe0:	bl	45f0 <av_bprint_chars@plt>
   10fe4:	ldrb	r1, [r4]
   10fe8:	cmp	r1, #0
   10fec:	bne	10f88 <main@@Base+0xc35c>
   10ff0:	b	10fa8 <main@@Base+0xc37c>
   10ff4:	bl	3f00 <__stack_chk_fail@plt>
   10ff8:	andeq	r0, r2, r4, ror #25
   10ffc:	andeq	r0, r0, r8, ror #7
   11000:	andeq	r0, r0, sl, lsl #26
   11004:	push	{r4, r5, r6, r7, r8, lr}
   11008:	mov	r4, r0
   1100c:	ldr	lr, [r0, #24]
   11010:	ldr	r0, [pc, #156]	; 110b4 <main@@Base+0xc488>
   11014:	ldr	ip, [pc, #156]	; 110b8 <main@@Base+0xc48c>
   11018:	add	lr, r4, lr, lsl #2
   1101c:	add	r0, pc, r0
   11020:	ldr	lr, [lr, #68]	; 0x44
   11024:	ldr	r5, [r0, ip]
   11028:	ldr	ip, [lr, #68]	; 0x44
   1102c:	ldr	r8, [r5]
   11030:	sub	sp, sp, #8
   11034:	cmp	ip, #0
   11038:	str	r8, [sp, #4]
   1103c:	mov	r6, r2
   11040:	mov	r7, r3
   11044:	mov	r8, r1
   11048:	beq	11094 <main@@Base+0xc468>
   1104c:	ldr	r0, [r4, #4]
   11050:	mov	r2, r6
   11054:	mov	r3, r7
   11058:	ldr	r6, [r0, #28]
   1105c:	mov	r1, r8
   11060:	mov	r0, r4
   11064:	blx	r6
   11068:	ldr	r3, [r4, #24]
   1106c:	add	r4, r4, r3, lsl #2
   11070:	ldr	r3, [r4, #28]
   11074:	add	r3, r3, #1
   11078:	str	r3, [r4, #28]
   1107c:	ldr	r2, [sp, #4]
   11080:	ldr	r3, [r5]
   11084:	cmp	r2, r3
   11088:	bne	110b0 <main@@Base+0xc484>
   1108c:	add	sp, sp, #8
   11090:	pop	{r4, r5, r6, r7, r8, pc}
   11094:	ldr	r0, [lr, #64]	; 0x40
   11098:	mov	r3, ip
   1109c:	mov	r2, ip
   110a0:	bl	4644 <av_dict_get@plt>
   110a4:	cmp	r0, #0
   110a8:	bne	1104c <main@@Base+0xc420>
   110ac:	b	1107c <main@@Base+0xc450>
   110b0:	bl	3f00 <__stack_chk_fail@plt>
   110b4:	andeq	r0, r2, r0, ror #23
   110b8:	andeq	r0, r0, r8, ror #7
   110bc:	push	{r4, r5, r6, r7, lr}
   110c0:	ldr	r3, [pc, #200]	; 11190 <main@@Base+0xc564>
   110c4:	ldr	r2, [pc, #200]	; 11194 <main@@Base+0xc568>
   110c8:	add	r3, pc, r3
   110cc:	ldr	r7, [r3, r2]
   110d0:	mov	r5, r0
   110d4:	ldr	r0, [r0]
   110d8:	ldr	r2, [r7]
   110dc:	sub	sp, sp, #12
   110e0:	cmp	r0, #0
   110e4:	str	r2, [sp, #4]
   110e8:	beq	11174 <main@@Base+0xc548>
   110ec:	ldr	r3, [r0, #4]
   110f0:	ldr	r3, [r3, #16]
   110f4:	cmp	r3, #0
   110f8:	beq	11104 <main@@Base+0xc4d8>
   110fc:	blx	r3
   11100:	ldr	r0, [r5]
   11104:	mov	r4, #108	; 0x6c
   11108:	ldr	r6, [pc, #136]	; 11198 <main@@Base+0xc56c>
   1110c:	add	r0, r0, r4
   11110:	mov	r1, #0
   11114:	add	r4, r4, #1024	; 0x400
   11118:	bl	4308 <av_bprint_finalize@plt>
   1111c:	cmp	r4, r6
   11120:	ldr	r0, [r5]
   11124:	bne	1110c <main@@Base+0xc4e0>
   11128:	ldr	r3, [r0, #4]
   1112c:	ldr	r3, [r3]
   11130:	cmp	r3, #0
   11134:	beq	11144 <main@@Base+0xc518>
   11138:	ldr	r0, [r0, #12]
   1113c:	bl	468c <av_opt_free@plt>
   11140:	ldr	r0, [r5]
   11144:	add	r0, r0, #12
   11148:	bl	3ec4 <av_freep@plt>
   1114c:	ldr	r0, [r5]
   11150:	bl	468c <av_opt_free@plt>
   11154:	ldr	r2, [sp, #4]
   11158:	ldr	r3, [r7]
   1115c:	cmp	r2, r3
   11160:	bne	1118c <main@@Base+0xc560>
   11164:	mov	r0, r5
   11168:	add	sp, sp, #12
   1116c:	pop	{r4, r5, r6, r7, lr}
   11170:	b	3ec4 <av_freep@plt>
   11174:	ldr	r2, [sp, #4]
   11178:	ldr	r3, [r7]
   1117c:	cmp	r2, r3
   11180:	bne	1118c <main@@Base+0xc560>
   11184:	add	sp, sp, #12
   11188:	pop	{r4, r5, r6, r7, pc}
   1118c:	bl	3f00 <__stack_chk_fail@plt>
   11190:	andeq	r0, r2, r4, lsr fp
   11194:	andeq	r0, r0, r8, ror #7
   11198:	andeq	r2, r0, ip, ror #16
   1119c:	push	{lr}		; (str lr, [sp, #-4]!)
   111a0:	ldr	r3, [pc, #88]	; 11200 <main@@Base+0xc5d4>
   111a4:	ldr	r2, [pc, #88]	; 11204 <main@@Base+0xc5d8>
   111a8:	add	r3, pc, r3
   111ac:	ldr	r2, [r3, r2]
   111b0:	sub	sp, sp, #12
   111b4:	ldr	r3, [r2]
   111b8:	cmp	r1, #0
   111bc:	str	r3, [sp, #4]
   111c0:	movne	r3, #0
   111c4:	bne	111e0 <main@@Base+0xc5b4>
   111c8:	ldr	r3, [r0, #4]
   111cc:	cmp	r3, #0
   111d0:	beq	111e0 <main@@Base+0xc5b4>
   111d4:	ldr	r3, [r3]
   111d8:	cmp	r3, #0
   111dc:	ldrne	r3, [r0, #12]
   111e0:	ldr	r1, [sp, #4]
   111e4:	ldr	r2, [r2]
   111e8:	mov	r0, r3
   111ec:	cmp	r1, r2
   111f0:	bne	111fc <main@@Base+0xc5d0>
   111f4:	add	sp, sp, #12
   111f8:	pop	{pc}		; (ldr pc, [sp], #4)
   111fc:	bl	3f00 <__stack_chk_fail@plt>
   11200:	andeq	r0, r2, r4, asr sl
   11204:	andeq	r0, r0, r8, ror #7
   11208:	push	{lr}		; (str lr, [sp, #-4]!)
   1120c:	ldr	r3, [pc, #144]	; 112a4 <main@@Base+0xc678>
   11210:	ldr	ip, [r0, #24]
   11214:	ldr	r2, [r0, #12]
   11218:	ldr	r1, [pc, #136]	; 112a8 <main@@Base+0xc67c>
   1121c:	add	r3, pc, r3
   11220:	ldr	r1, [r3, r1]
   11224:	add	r2, r2, ip, lsl #2
   11228:	ldr	lr, [r2, #28]
   1122c:	ldr	r3, [r1]
   11230:	sub	sp, sp, #12
   11234:	cmp	lr, #0
   11238:	str	r3, [sp, #4]
   1123c:	bne	1124c <main@@Base+0xc620>
   11240:	ldr	r3, [r2, #108]	; 0x6c
   11244:	cmp	r3, #0
   11248:	bne	11264 <main@@Base+0xc638>
   1124c:	ldr	r2, [sp, #4]
   11250:	ldr	r3, [r1]
   11254:	cmp	r2, r3
   11258:	bne	112a0 <main@@Base+0xc674>
   1125c:	add	sp, sp, #12
   11260:	pop	{pc}		; (ldr pc, [sp], #4)
   11264:	add	r0, r0, ip, lsl #2
   11268:	ldr	r3, [r0, #68]	; 0x44
   1126c:	ldr	r3, [r3, #8]
   11270:	tst	r3, #3
   11274:	bne	1124c <main@@Base+0xc620>
   11278:	ldr	r2, [sp, #4]
   1127c:	ldr	r3, [r1]
   11280:	cmp	r2, r3
   11284:	bne	112a0 <main@@Base+0xc674>
   11288:	mov	r0, #1
   1128c:	ldr	r1, [pc, #24]	; 112ac <main@@Base+0xc680>
   11290:	add	r1, pc, r1
   11294:	add	sp, sp, #12
   11298:	pop	{lr}		; (ldr lr, [sp], #4)
   1129c:	b	474c <__printf_chk@plt>
   112a0:	bl	3f00 <__stack_chk_fail@plt>
   112a4:	andeq	r0, r2, r0, ror #19
   112a8:	andeq	r0, r0, r8, ror #7
   112ac:	andeq	fp, r0, r0, lsl #18
   112b0:	push	{r4, r5, r6, lr}
   112b4:	ldr	r2, [pc, #200]	; 11384 <main@@Base+0xc758>
   112b8:	add	r0, r0, r0, lsl #3
   112bc:	ldr	r1, [pc, #196]	; 11388 <main@@Base+0xc75c>
   112c0:	ldr	r3, [pc, #196]	; 1138c <main@@Base+0xc760>
   112c4:	add	r2, pc, r2
   112c8:	lsl	r4, r0, #3
   112cc:	add	r3, pc, r3
   112d0:	add	r4, r4, #12
   112d4:	ldr	r5, [r2, r1]
   112d8:	ldr	r0, [r3, r4]
   112dc:	ldr	r1, [r5]
   112e0:	sub	sp, sp, #8
   112e4:	cmn	r0, #1
   112e8:	add	r4, r3, r4
   112ec:	str	r1, [sp, #4]
   112f0:	beq	11378 <main@@Base+0xc74c>
   112f4:	add	r2, r0, r0, lsl #3
   112f8:	add	r3, r3, r2, lsl #3
   112fc:	ldr	r2, [r3, #68]	; 0x44
   11300:	cmp	r2, #0
   11304:	bne	11314 <main@@Base+0xc6e8>
   11308:	ldr	r3, [r3, #64]	; 0x40
   1130c:	cmp	r3, #0
   11310:	beq	11334 <main@@Base+0xc708>
   11314:	mov	r3, #1
   11318:	ldr	r1, [sp, #4]
   1131c:	ldr	r2, [r5]
   11320:	mov	r0, r3
   11324:	cmp	r1, r2
   11328:	bne	11380 <main@@Base+0xc754>
   1132c:	add	sp, sp, #8
   11330:	pop	{r4, r5, r6, pc}
   11334:	ldr	r6, [pc, #84]	; 11390 <main@@Base+0xc764>
   11338:	add	r6, pc, r6
   1133c:	bl	112b0 <main@@Base+0xc684>
   11340:	subs	r3, r0, #0
   11344:	bne	11314 <main@@Base+0xc6e8>
   11348:	ldr	r0, [r4, #4]!
   1134c:	cmn	r0, #1
   11350:	beq	11318 <main@@Base+0xc6ec>
   11354:	add	r3, r0, r0, lsl #3
   11358:	add	r3, r6, r3, lsl #3
   1135c:	ldr	r2, [r3, #68]	; 0x44
   11360:	cmp	r2, #0
   11364:	bne	11314 <main@@Base+0xc6e8>
   11368:	ldr	r3, [r3, #64]	; 0x40
   1136c:	cmp	r3, #0
   11370:	bne	11314 <main@@Base+0xc6e8>
   11374:	b	1133c <main@@Base+0xc710>
   11378:	mov	r3, #0
   1137c:	b	11318 <main@@Base+0xc6ec>
   11380:	bl	3f00 <__stack_chk_fail@plt>
   11384:	andeq	r0, r2, r8, lsr r9
   11388:	andeq	r0, r0, r8, ror #7
   1138c:	muleq	r2, r0, sp
   11390:	andeq	r0, r2, r4, lsr #26
   11394:	push	{r4, r5, r6, r7, r8, r9, lr}
   11398:	ldr	r3, [pc, #380]	; 1151c <main@@Base+0xc8f0>
   1139c:	ldr	r2, [pc, #380]	; 11520 <main@@Base+0xc8f4>
   113a0:	add	r3, pc, r3
   113a4:	ldr	r6, [r3, r2]
   113a8:	mov	r4, r1
   113ac:	ldrb	r1, [r1]
   113b0:	ldr	r2, [r6]
   113b4:	sub	sp, sp, #12
   113b8:	cmp	r1, #0
   113bc:	mov	r5, r0
   113c0:	str	r2, [sp, #4]
   113c4:	beq	11488 <main@@Base+0xc85c>
   113c8:	ldr	r9, [pc, #340]	; 11524 <main@@Base+0xc8f8>
   113cc:	ldr	r8, [pc, #340]	; 11528 <main@@Base+0xc8fc>
   113d0:	ldr	r7, [pc, #340]	; 1152c <main@@Base+0xc900>
   113d4:	add	r9, pc, r9
   113d8:	add	r8, pc, r8
   113dc:	add	r7, pc, r7
   113e0:	sub	r3, r1, #34	; 0x22
   113e4:	cmp	r3, #28
   113e8:	addls	pc, pc, r3, lsl #2
   113ec:	b	11508 <main@@Base+0xc8dc>
   113f0:	b	114f0 <main@@Base+0xc8c4>
   113f4:	b	11508 <main@@Base+0xc8dc>
   113f8:	b	11508 <main@@Base+0xc8dc>
   113fc:	b	11508 <main@@Base+0xc8dc>
   11400:	b	114d4 <main@@Base+0xc8a8>
   11404:	b	114c0 <main@@Base+0xc894>
   11408:	b	11508 <main@@Base+0xc8dc>
   1140c:	b	11508 <main@@Base+0xc8dc>
   11410:	b	11508 <main@@Base+0xc8dc>
   11414:	b	11508 <main@@Base+0xc8dc>
   11418:	b	11508 <main@@Base+0xc8dc>
   1141c:	b	11508 <main@@Base+0xc8dc>
   11420:	b	11508 <main@@Base+0xc8dc>
   11424:	b	11508 <main@@Base+0xc8dc>
   11428:	b	11508 <main@@Base+0xc8dc>
   1142c:	b	11508 <main@@Base+0xc8dc>
   11430:	b	11508 <main@@Base+0xc8dc>
   11434:	b	11508 <main@@Base+0xc8dc>
   11438:	b	11508 <main@@Base+0xc8dc>
   1143c:	b	11508 <main@@Base+0xc8dc>
   11440:	b	11508 <main@@Base+0xc8dc>
   11444:	b	11508 <main@@Base+0xc8dc>
   11448:	b	11508 <main@@Base+0xc8dc>
   1144c:	b	11508 <main@@Base+0xc8dc>
   11450:	b	11508 <main@@Base+0xc8dc>
   11454:	b	11508 <main@@Base+0xc8dc>
   11458:	b	114a4 <main@@Base+0xc878>
   1145c:	b	11508 <main@@Base+0xc8dc>
   11460:	b	11464 <main@@Base+0xc838>
   11464:	ldr	r2, [pc, #196]	; 11530 <main@@Base+0xc904>
   11468:	ldr	r1, [pc, #196]	; 11534 <main@@Base+0xc908>
   1146c:	add	r2, pc, r2
   11470:	add	r1, pc, r1
   11474:	mov	r0, r5
   11478:	bl	459c <av_bprintf@plt>
   1147c:	ldrb	r1, [r4, #1]!
   11480:	cmp	r1, #0
   11484:	bne	113e0 <main@@Base+0xc7b4>
   11488:	ldr	r2, [sp, #4]
   1148c:	ldr	r3, [r6]
   11490:	ldr	r0, [r5]
   11494:	cmp	r2, r3
   11498:	bne	11518 <main@@Base+0xc8ec>
   1149c:	add	sp, sp, #12
   114a0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   114a4:	ldr	r2, [pc, #140]	; 11538 <main@@Base+0xc90c>
   114a8:	ldr	r1, [pc, #140]	; 1153c <main@@Base+0xc910>
   114ac:	add	r2, pc, r2
   114b0:	add	r1, pc, r1
   114b4:	mov	r0, r5
   114b8:	bl	459c <av_bprintf@plt>
   114bc:	b	1147c <main@@Base+0xc850>
   114c0:	mov	r2, r9
   114c4:	mov	r1, r8
   114c8:	mov	r0, r5
   114cc:	bl	459c <av_bprintf@plt>
   114d0:	b	1147c <main@@Base+0xc850>
   114d4:	ldr	r2, [pc, #100]	; 11540 <main@@Base+0xc914>
   114d8:	ldr	r1, [pc, #100]	; 11544 <main@@Base+0xc918>
   114dc:	add	r2, pc, r2
   114e0:	add	r1, pc, r1
   114e4:	mov	r0, r5
   114e8:	bl	459c <av_bprintf@plt>
   114ec:	b	1147c <main@@Base+0xc850>
   114f0:	ldr	r1, [pc, #80]	; 11548 <main@@Base+0xc91c>
   114f4:	mov	r2, r7
   114f8:	add	r1, pc, r1
   114fc:	mov	r0, r5
   11500:	bl	459c <av_bprintf@plt>
   11504:	b	1147c <main@@Base+0xc850>
   11508:	mov	r2, #1
   1150c:	mov	r0, r5
   11510:	bl	45f0 <av_bprint_chars@plt>
   11514:	b	1147c <main@@Base+0xc850>
   11518:	bl	3f00 <__stack_chk_fail@plt>
   1151c:	andeq	r0, r2, ip, asr r8
   11520:	andeq	r0, r0, r8, ror #7
   11524:	andeq	sp, r0, r8, asr #3
   11528:	andeq	sp, r0, r0, ror #4
   1152c:			; <UNDEFINED> instruction: 0x0000d1b8
   11530:	andeq	sp, r0, r0, lsr #2
   11534:	andeq	sp, r0, r8, asr #3
   11538:	ldrdeq	sp, [r0], -r8
   1153c:	andeq	sp, r0, r8, lsl #3
   11540:	andeq	sp, r0, r0, lsr #1
   11544:	andeq	sp, r0, r8, asr r1
   11548:	andeq	sp, r0, r0, asr #2
   1154c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11550:	mov	r4, r0
   11554:	ldr	r3, [pc, #312]	; 11694 <main@@Base+0xca68>
   11558:	ldr	ip, [pc, #312]	; 11698 <main@@Base+0xca6c>
   1155c:	add	r3, pc, r3
   11560:	ldr	r0, [r0, #24]
   11564:	ldr	r6, [r3, ip]
   11568:	sub	sp, sp, #1024	; 0x400
   1156c:	sub	sp, sp, #8
   11570:	add	r0, r4, r0, lsl #2
   11574:	ldr	r7, [r0, #68]	; 0x44
   11578:	ldr	ip, [r6]
   1157c:	add	r5, sp, #4
   11580:	mov	r8, r1
   11584:	mov	r9, r2
   11588:	mov	r0, r5
   1158c:	mvn	r2, #0
   11590:	mov	r1, #1
   11594:	str	ip, [sp, #1028]	; 0x404
   11598:	ldr	sl, [r4, #12]
   1159c:	bl	3f48 <av_bprint_init@plt>
   115a0:	ldr	r3, [r7, #8]
   115a4:	tst	r3, #4
   115a8:	bne	11620 <main@@Base+0xc9f4>
   115ac:	ldr	r3, [r4, #24]
   115b0:	add	r4, r4, r3, lsl #2
   115b4:	ldr	r3, [r4, #28]
   115b8:	cmp	r3, #0
   115bc:	bne	1160c <main@@Base+0xc9e0>
   115c0:	mov	r1, r9
   115c4:	mov	r0, r5
   115c8:	bl	11394 <main@@Base+0xc768>
   115cc:	ldr	r1, [pc, #200]	; 1169c <main@@Base+0xca70>
   115d0:	mov	r3, r0
   115d4:	mov	r2, r8
   115d8:	add	r1, pc, r1
   115dc:	mov	r0, #1
   115e0:	bl	474c <__printf_chk@plt>
   115e4:	mov	r0, r5
   115e8:	mov	r1, #0
   115ec:	bl	4308 <av_bprint_finalize@plt>
   115f0:	ldr	r2, [sp, #1028]	; 0x404
   115f4:	ldr	r3, [r6]
   115f8:	cmp	r2, r3
   115fc:	bne	11690 <main@@Base+0xca64>
   11600:	add	sp, sp, #1024	; 0x400
   11604:	add	sp, sp, #8
   11608:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1160c:	ldr	r1, [pc, #140]	; 116a0 <main@@Base+0xca74>
   11610:	mov	r0, #1
   11614:	add	r1, pc, r1
   11618:	bl	474c <__printf_chk@plt>
   1161c:	b	115c0 <main@@Base+0xc994>
   11620:	ldr	r2, [sl, #8]
   11624:	ldr	r1, [pc, #120]	; 116a4 <main@@Base+0xca78>
   11628:	mov	r3, #32
   1162c:	lsl	r2, r2, #2
   11630:	add	r1, pc, r1
   11634:	mov	r0, #1
   11638:	bl	474c <__printf_chk@plt>
   1163c:	mov	r1, r8
   11640:	mov	r0, r5
   11644:	ldr	r4, [r7, #56]	; 0x38
   11648:	bl	11394 <main@@Base+0xc768>
   1164c:	ldr	r1, [pc, #84]	; 116a8 <main@@Base+0xca7c>
   11650:	mov	r3, r0
   11654:	mov	r2, r4
   11658:	add	r1, pc, r1
   1165c:	mov	r0, #1
   11660:	bl	474c <__printf_chk@plt>
   11664:	mov	r0, r5
   11668:	bl	45c0 <av_bprint_clear@plt>
   1166c:	mov	r1, r9
   11670:	mov	r0, r5
   11674:	bl	11394 <main@@Base+0xc768>
   11678:	ldr	r1, [pc, #44]	; 116ac <main@@Base+0xca80>
   1167c:	mov	r2, r0
   11680:	add	r1, pc, r1
   11684:	mov	r0, #1
   11688:	bl	474c <__printf_chk@plt>
   1168c:	b	115e4 <main@@Base+0xc9b8>
   11690:	bl	3f00 <__stack_chk_fail@plt>
   11694:	andeq	r0, r2, r0, lsr #13
   11698:	andeq	r0, r0, r8, ror #7
   1169c:	andeq	ip, r0, ip, ror #31
   116a0:	strdeq	fp, [r0], -r0
   116a4:	strdeq	ip, [r0], -r0
   116a8:	andeq	ip, r0, ip, asr #30
   116ac:	andeq	ip, r0, r4, lsr pc
   116b0:	push	{r4, r5, r6, r7, r8, r9, lr}
   116b4:	mov	r5, r1
   116b8:	ldr	r3, [pc, #540]	; 118dc <main@@Base+0xccb0>
   116bc:	ldr	r1, [pc, #540]	; 118e0 <main@@Base+0xccb4>
   116c0:	add	r3, pc, r3
   116c4:	ldr	r6, [r3, r1]
   116c8:	ldr	ip, [r0, #24]
   116cc:	sub	sp, sp, #1024	; 0x400
   116d0:	ldr	r1, [pc, #524]	; 118e4 <main@@Base+0xccb8>
   116d4:	sub	sp, sp, #12
   116d8:	add	r0, r0, ip, lsl #10
   116dc:	ldr	ip, [r6]
   116e0:	add	r1, pc, r1
   116e4:	mov	r7, r2
   116e8:	ldr	r2, [r0, #108]	; 0x6c
   116ec:	add	r4, sp, #4
   116f0:	mov	r0, #1
   116f4:	str	ip, [sp, #1028]	; 0x404
   116f8:	bl	474c <__printf_chk@plt>
   116fc:	mov	r1, #1
   11700:	mov	r0, r4
   11704:	mvn	r2, #0
   11708:	bl	3f48 <av_bprint_init@plt>
   1170c:	ldrb	r1, [r5]
   11710:	cmp	r1, #0
   11714:	bne	11730 <main@@Base+0xcb04>
   11718:	b	11768 <main@@Base+0xcb3c>
   1171c:	mov	r0, r4
   11720:	bl	45f0 <av_bprint_chars@plt>
   11724:	ldrb	r1, [r5, #1]!
   11728:	cmp	r1, #0
   1172c:	beq	11768 <main@@Base+0xcb3c>
   11730:	sub	r3, r1, #48	; 0x30
   11734:	cmp	r3, #9
   11738:	mov	r2, #1
   1173c:	bls	1171c <main@@Base+0xcaf0>
   11740:	bic	r3, r1, #32
   11744:	sub	r3, r3, #65	; 0x41
   11748:	cmp	r3, #25
   1174c:	bls	1171c <main@@Base+0xcaf0>
   11750:	mov	r1, #95	; 0x5f
   11754:	mov	r0, r4
   11758:	bl	45f0 <av_bprint_chars@plt>
   1175c:	ldrb	r1, [r5, #1]!
   11760:	cmp	r1, #0
   11764:	bne	11730 <main@@Base+0xcb04>
   11768:	ldr	r1, [pc, #376]	; 118e8 <main@@Base+0xccbc>
   1176c:	ldr	r2, [sp, #4]
   11770:	add	r1, pc, r1
   11774:	mov	r0, #1
   11778:	bl	474c <__printf_chk@plt>
   1177c:	mov	r0, r4
   11780:	bl	45c0 <av_bprint_clear@plt>
   11784:	ldrb	r1, [r7]
   11788:	cmp	r1, #0
   1178c:	beq	1181c <main@@Base+0xcbf0>
   11790:	ldr	r9, [pc, #340]	; 118ec <main@@Base+0xccc0>
   11794:	ldr	r8, [pc, #340]	; 118f0 <main@@Base+0xccc4>
   11798:	ldr	r5, [pc, #340]	; 118f4 <main@@Base+0xccc8>
   1179c:	add	r9, pc, r9
   117a0:	add	r8, pc, r8
   117a4:	add	r5, pc, r5
   117a8:	b	117dc <main@@Base+0xcbb0>
   117ac:	cmp	r1, #92	; 0x5c
   117b0:	beq	118c0 <main@@Base+0xcc94>
   117b4:	cmp	r1, #96	; 0x60
   117b8:	beq	118a4 <main@@Base+0xcc78>
   117bc:	cmp	r1, #36	; 0x24
   117c0:	beq	11888 <main@@Base+0xcc5c>
   117c4:	mov	r2, #1
   117c8:	mov	r0, r4
   117cc:	bl	45f0 <av_bprint_chars@plt>
   117d0:	ldrb	r1, [r7, #1]!
   117d4:	cmp	r1, #0
   117d8:	beq	1181c <main@@Base+0xcbf0>
   117dc:	cmp	r1, #34	; 0x22
   117e0:	beq	11858 <main@@Base+0xcc2c>
   117e4:	bhi	117ac <main@@Base+0xcb80>
   117e8:	cmp	r1, #10
   117ec:	beq	1186c <main@@Base+0xcc40>
   117f0:	cmp	r1, #13
   117f4:	bne	117c4 <main@@Base+0xcb98>
   117f8:	ldr	r2, [pc, #248]	; 118f8 <main@@Base+0xcccc>
   117fc:	ldr	r1, [pc, #248]	; 118fc <main@@Base+0xccd0>
   11800:	add	r2, pc, r2
   11804:	add	r1, pc, r1
   11808:	mov	r0, r4
   1180c:	bl	459c <av_bprintf@plt>
   11810:	ldrb	r1, [r7, #1]!
   11814:	cmp	r1, #0
   11818:	bne	117dc <main@@Base+0xcbb0>
   1181c:	ldr	r1, [pc, #220]	; 11900 <main@@Base+0xccd4>
   11820:	ldr	r2, [sp, #4]
   11824:	add	r1, pc, r1
   11828:	mov	r0, #1
   1182c:	bl	474c <__printf_chk@plt>
   11830:	mov	r0, r4
   11834:	mov	r1, #0
   11838:	bl	4308 <av_bprint_finalize@plt>
   1183c:	ldr	r2, [sp, #1028]	; 0x404
   11840:	ldr	r3, [r6]
   11844:	cmp	r2, r3
   11848:	bne	118d8 <main@@Base+0xccac>
   1184c:	add	sp, sp, #1024	; 0x400
   11850:	add	sp, sp, #12
   11854:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11858:	mov	r2, r9
   1185c:	mov	r1, r8
   11860:	mov	r0, r4
   11864:	bl	459c <av_bprintf@plt>
   11868:	b	117d0 <main@@Base+0xcba4>
   1186c:	ldr	r2, [pc, #144]	; 11904 <main@@Base+0xccd8>
   11870:	ldr	r1, [pc, #144]	; 11908 <main@@Base+0xccdc>
   11874:	add	r2, pc, r2
   11878:	add	r1, pc, r1
   1187c:	mov	r0, r4
   11880:	bl	459c <av_bprintf@plt>
   11884:	b	117d0 <main@@Base+0xcba4>
   11888:	ldr	r2, [pc, #124]	; 1190c <main@@Base+0xcce0>
   1188c:	ldr	r1, [pc, #124]	; 11910 <main@@Base+0xcce4>
   11890:	add	r2, pc, r2
   11894:	add	r1, pc, r1
   11898:	mov	r0, r4
   1189c:	bl	459c <av_bprintf@plt>
   118a0:	b	117d0 <main@@Base+0xcba4>
   118a4:	ldr	r2, [pc, #104]	; 11914 <main@@Base+0xcce8>
   118a8:	ldr	r1, [pc, #104]	; 11918 <main@@Base+0xccec>
   118ac:	add	r2, pc, r2
   118b0:	add	r1, pc, r1
   118b4:	mov	r0, r4
   118b8:	bl	459c <av_bprintf@plt>
   118bc:	b	117d0 <main@@Base+0xcba4>
   118c0:	ldr	r1, [pc, #84]	; 1191c <main@@Base+0xccf0>
   118c4:	mov	r2, r5
   118c8:	add	r1, pc, r1
   118cc:	mov	r0, r4
   118d0:	bl	459c <av_bprintf@plt>
   118d4:	b	117d0 <main@@Base+0xcba4>
   118d8:	bl	3f00 <__stack_chk_fail@plt>
   118dc:	andeq	r0, r2, ip, lsr r5
   118e0:	andeq	r0, r0, r8, ror #7
   118e4:	andeq	ip, r0, r8, asr pc
   118e8:	andeq	ip, r0, ip, asr #26
   118ec:	andeq	ip, r0, r0, lsr lr
   118f0:	muleq	r0, r8, lr
   118f4:	andeq	ip, r0, ip, lsl sp
   118f8:	andeq	ip, r0, r8, lsr #25
   118fc:	andeq	ip, r0, r4, lsr lr
   11900:	andeq	fp, r0, r8, ror #6
   11904:	andeq	ip, r0, r0, lsr ip
   11908:	andeq	ip, r0, r0, asr #27
   1190c:	andeq	ip, r0, r4, asr #26
   11910:	andeq	ip, r0, r4, lsr #27
   11914:	andeq	ip, r0, r4, lsr #26
   11918:	andeq	ip, r0, r8, lsl #27
   1191c:	andeq	ip, r0, r0, ror sp
   11920:	mov	r1, #0
   11924:	push	{lr}		; (str lr, [sp, #-4]!)
   11928:	ldr	r3, [pc, #68]	; 11974 <main@@Base+0xcd48>
   1192c:	ldr	r2, [pc, #68]	; 11978 <main@@Base+0xcd4c>
   11930:	add	r3, pc, r3
   11934:	ldr	ip, [r3, r2]
   11938:	ldr	r2, [pc, #60]	; 1197c <main@@Base+0xcd50>
   1193c:	sub	sp, sp, #20
   11940:	add	r2, pc, r2
   11944:	ldr	ip, [ip]
   11948:	ldr	r0, [pc, #48]	; 11980 <main@@Base+0xcd54>
   1194c:	str	r2, [sp]
   11950:	ldr	r3, [pc, #44]	; 11984 <main@@Base+0xcd58>
   11954:	ldr	r2, [pc, #44]	; 11988 <main@@Base+0xcd5c>
   11958:	str	r0, [sp, #4]
   1195c:	add	r3, pc, r3
   11960:	mov	r0, r1
   11964:	add	r2, pc, r2
   11968:	str	ip, [sp, #12]
   1196c:	bl	40f8 <av_log@plt>
   11970:	bl	4278 <abort@plt>
   11974:	andeq	r0, r2, ip, asr #5
   11978:	andeq	r0, r0, r8, ror #7
   1197c:	andeq	ip, r0, ip, lsr #25
   11980:	andeq	r0, r0, r6, ror r2
   11984:	andeq	ip, r0, ip, ror ip
   11988:	andeq	sl, r0, r8, lsr #23
   1198c:	push	{r4, lr}
   11990:	ldr	r3, [pc, #256]	; 11a98 <main@@Base+0xce6c>
   11994:	ldr	r2, [pc, #256]	; 11a9c <main@@Base+0xce70>
   11998:	add	r3, pc, r3
   1199c:	ldr	lr, [r3, r2]
   119a0:	ldr	ip, [r0, #24]
   119a4:	ldr	r4, [lr]
   119a8:	add	r2, ip, #1
   119ac:	sub	sp, sp, #8
   119b0:	cmp	r2, #9
   119b4:	str	r2, [r0, #24]
   119b8:	str	r4, [sp, #4]
   119bc:	bgt	11a94 <main@@Base+0xce68>
   119c0:	ldr	r3, [r0, #16]
   119c4:	add	r4, r1, r1, lsl #3
   119c8:	cmp	r2, #0
   119cc:	add	r3, r3, r4, lsl #3
   119d0:	bne	11a10 <main@@Base+0xcde4>
   119d4:	cmp	r1, #18
   119d8:	str	r2, [r0, #28]
   119dc:	str	r3, [r0, #68]	; 0x44
   119e0:	beq	11a78 <main@@Base+0xce4c>
   119e4:	ldr	r3, [r0, #4]
   119e8:	ldr	r3, [r3, #20]
   119ec:	cmp	r3, #0
   119f0:	beq	11a60 <main@@Base+0xce34>
   119f4:	ldr	r1, [sp, #4]
   119f8:	ldr	r2, [lr]
   119fc:	cmp	r1, r2
   11a00:	bne	11a90 <main@@Base+0xce64>
   11a04:	add	sp, sp, #8
   11a08:	pop	{r4, lr}
   11a0c:	bx	r3
   11a10:	mov	r2, #0
   11a14:	add	ip, r0, ip, lsl #2
   11a18:	ldr	r4, [ip, #68]	; 0x44
   11a1c:	cmp	r1, #18
   11a20:	ldr	r4, [r4]
   11a24:	str	r3, [ip, #72]	; 0x48
   11a28:	str	r2, [ip, #32]
   11a2c:	beq	11a78 <main@@Base+0xce4c>
   11a30:	cmp	r4, #18
   11a34:	bne	119e4 <main@@Base+0xcdb8>
   11a38:	add	r3, r0, #8192	; 0x2000
   11a3c:	ldr	ip, [r3, #2160]	; 0x870
   11a40:	cmp	r1, #15
   11a44:	ldr	r2, [r3, #2156]	; 0x86c
   11a48:	movne	r2, ip
   11a4c:	str	r2, [r3, #2164]	; 0x874
   11a50:	ldr	r3, [r0, #4]
   11a54:	ldr	r3, [r3, #20]
   11a58:	cmp	r3, #0
   11a5c:	bne	119f4 <main@@Base+0xcdc8>
   11a60:	ldr	r2, [sp, #4]
   11a64:	ldr	r3, [lr]
   11a68:	cmp	r2, r3
   11a6c:	bne	11a90 <main@@Base+0xce64>
   11a70:	add	sp, sp, #8
   11a74:	pop	{r4, pc}
   11a78:	mov	r2, #0
   11a7c:	add	r3, r0, #8192	; 0x2000
   11a80:	str	r2, [r3, #2164]	; 0x874
   11a84:	str	r2, [r3, #2160]	; 0x870
   11a88:	str	r2, [r3, #2156]	; 0x86c
   11a8c:	b	119e4 <main@@Base+0xcdb8>
   11a90:	bl	3f00 <__stack_chk_fail@plt>
   11a94:	bl	11920 <main@@Base+0xccf4>
   11a98:	andeq	r0, r2, r4, ror #4
   11a9c:	andeq	r0, r0, r8, ror #7
   11aa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11aa4:	ldr	r3, [pc, #608]	; 11d0c <main@@Base+0xd0e0>
   11aa8:	ldr	r2, [pc, #608]	; 11d10 <main@@Base+0xd0e4>
   11aac:	add	r3, pc, r3
   11ab0:	ldr	r2, [r3, r2]
   11ab4:	ldr	r5, [r0, #24]
   11ab8:	sub	sp, sp, #1040	; 0x410
   11abc:	sub	sp, sp, #4
   11ac0:	ldr	r1, [r2]
   11ac4:	str	r2, [sp]
   11ac8:	cmp	r5, #0
   11acc:	add	r2, r0, r5, lsl #2
   11ad0:	ldr	r6, [r0, #12]
   11ad4:	ldr	r7, [r2, #68]	; 0x44
   11ad8:	str	r1, [sp, #1036]	; 0x40c
   11adc:	beq	11af0 <main@@Base+0xcec4>
   11ae0:	ldr	r3, [r2, #24]
   11ae4:	ldr	r5, [r2, #64]	; 0x40
   11ae8:	cmp	r3, #0
   11aec:	bne	11c68 <main@@Base+0xd03c>
   11af0:	ldr	r3, [r7, #8]
   11af4:	tst	r3, #1
   11af8:	beq	11b38 <main@@Base+0xcf0c>
   11afc:	ldr	r1, [pc, #528]	; 11d14 <main@@Base+0xd0e8>
   11b00:	mov	r0, #1
   11b04:	add	r1, pc, r1
   11b08:	bl	474c <__printf_chk@plt>
   11b0c:	ldr	r3, [r6, #4]
   11b10:	add	r3, r3, #1
   11b14:	str	r3, [r6, #4]
   11b18:	ldr	r3, [sp]
   11b1c:	ldr	r2, [sp, #1036]	; 0x40c
   11b20:	ldr	r3, [r3]
   11b24:	cmp	r2, r3
   11b28:	bne	11d08 <main@@Base+0xd0dc>
   11b2c:	add	sp, sp, #1040	; 0x410
   11b30:	add	sp, sp, #4
   11b34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b38:	add	r4, sp, #12
   11b3c:	mov	r0, r4
   11b40:	mvn	r2, #0
   11b44:	mov	r1, #1
   11b48:	bl	3f48 <av_bprint_init@plt>
   11b4c:	ldr	r9, [r7, #4]
   11b50:	ldrb	r8, [r9]
   11b54:	cmp	r8, #0
   11b58:	beq	11bd8 <main@@Base+0xcfac>
   11b5c:	ldr	r3, [pc, #436]	; 11d18 <main@@Base+0xd0ec>
   11b60:	ldr	sl, [pc, #436]	; 11d1c <main@@Base+0xd0f0>
   11b64:	add	r3, pc, r3
   11b68:	add	sl, pc, sl
   11b6c:	str	r3, [sp, #4]
   11b70:	b	11ba0 <main@@Base+0xcf74>
   11b74:	mov	r2, #1
   11b78:	mov	r1, #92	; 0x5c
   11b7c:	mov	r0, r4
   11b80:	bl	45f0 <av_bprint_chars@plt>
   11b84:	ldrb	r1, [fp, #8]
   11b88:	mov	r2, #1
   11b8c:	mov	r0, r4
   11b90:	bl	45f0 <av_bprint_chars@plt>
   11b94:	ldrb	r8, [r9, #1]!
   11b98:	cmp	r8, #0
   11b9c:	beq	11bd8 <main@@Base+0xcfac>
   11ba0:	mov	r1, r8
   11ba4:	mov	r0, sl
   11ba8:	bl	4494 <strchr@plt>
   11bac:	subs	fp, r0, #0
   11bb0:	bne	11b74 <main@@Base+0xcf48>
   11bb4:	cmp	r8, #31
   11bb8:	bhi	11c54 <main@@Base+0xd028>
   11bbc:	mov	r2, r8
   11bc0:	ldr	r1, [sp, #4]
   11bc4:	mov	r0, r4
   11bc8:	bl	459c <av_bprintf@plt>
   11bcc:	ldrb	r8, [r9, #1]!
   11bd0:	cmp	r8, #0
   11bd4:	bne	11ba0 <main@@Base+0xcf74>
   11bd8:	ldr	r9, [pc, #320]	; 11d20 <main@@Base+0xd0f4>
   11bdc:	ldr	r2, [r6, #4]
   11be0:	add	r9, pc, r9
   11be4:	lsl	r2, r2, #2
   11be8:	mov	r3, #32
   11bec:	mov	r1, r9
   11bf0:	mov	r0, #1
   11bf4:	bl	474c <__printf_chk@plt>
   11bf8:	ldr	r3, [r6, #4]
   11bfc:	ldr	r2, [r7, #8]
   11c00:	add	r3, r3, #1
   11c04:	tst	r2, #2
   11c08:	str	r3, [r6, #4]
   11c0c:	bne	11c98 <main@@Base+0xd06c>
   11c10:	cmp	r5, #0
   11c14:	ldr	r2, [r6, #16]
   11c18:	beq	11cb0 <main@@Base+0xd084>
   11c1c:	ldr	r3, [r5, #8]
   11c20:	tst	r3, #2
   11c24:	beq	11c7c <main@@Base+0xd050>
   11c28:	ldr	r1, [pc, #244]	; 11d24 <main@@Base+0xd0f8>
   11c2c:	mov	r0, #1
   11c30:	add	r1, pc, r1
   11c34:	bl	474c <__printf_chk@plt>
   11c38:	ldr	r3, [r5]
   11c3c:	cmp	r3, #18
   11c40:	beq	11cc4 <main@@Base+0xd098>
   11c44:	mov	r0, r4
   11c48:	mov	r1, #0
   11c4c:	bl	4308 <av_bprint_finalize@plt>
   11c50:	b	11b18 <main@@Base+0xceec>
   11c54:	mov	r1, r8
   11c58:	mov	r2, #1
   11c5c:	mov	r0, r4
   11c60:	bl	45f0 <av_bprint_chars@plt>
   11c64:	b	11b94 <main@@Base+0xcf68>
   11c68:	ldr	r1, [pc, #184]	; 11d28 <main@@Base+0xd0fc>
   11c6c:	mov	r0, #1
   11c70:	add	r1, pc, r1
   11c74:	bl	474c <__printf_chk@plt>
   11c78:	b	11af0 <main@@Base+0xcec4>
   11c7c:	ldr	r1, [pc, #168]	; 11d2c <main@@Base+0xd100>
   11c80:	mov	r3, r2
   11c84:	add	r1, pc, r1
   11c88:	ldr	r2, [sp, #12]
   11c8c:	mov	r0, #1
   11c90:	bl	474c <__printf_chk@plt>
   11c94:	b	11c44 <main@@Base+0xd018>
   11c98:	ldr	r1, [pc, #144]	; 11d30 <main@@Base+0xd104>
   11c9c:	ldr	r2, [sp, #12]
   11ca0:	add	r1, pc, r1
   11ca4:	mov	r0, #1
   11ca8:	bl	474c <__printf_chk@plt>
   11cac:	b	11c44 <main@@Base+0xd018>
   11cb0:	ldr	r1, [pc, #124]	; 11d34 <main@@Base+0xd108>
   11cb4:	mov	r0, #1
   11cb8:	add	r1, pc, r1
   11cbc:	bl	474c <__printf_chk@plt>
   11cc0:	b	11c44 <main@@Base+0xd018>
   11cc4:	ldr	r3, [r6, #8]
   11cc8:	cmp	r3, #0
   11ccc:	beq	11cec <main@@Base+0xd0c0>
   11cd0:	ldr	r1, [pc, #96]	; 11d38 <main@@Base+0xd10c>
   11cd4:	ldr	r3, [r6, #12]
   11cd8:	ldr	r2, [r7, #4]
   11cdc:	add	r1, pc, r1
   11ce0:	mov	r0, #1
   11ce4:	bl	474c <__printf_chk@plt>
   11ce8:	b	11c44 <main@@Base+0xd018>
   11cec:	ldr	r2, [r6, #4]
   11cf0:	mov	r1, r9
   11cf4:	lsl	r2, r2, #2
   11cf8:	mov	r3, #32
   11cfc:	mov	r0, #1
   11d00:	bl	474c <__printf_chk@plt>
   11d04:	b	11cd0 <main@@Base+0xd0a4>
   11d08:	bl	3f00 <__stack_chk_fail@plt>
   11d0c:	andeq	r0, r2, r0, asr r1
   11d10:	andeq	r0, r0, r8, ror #7
   11d14:	andeq	ip, r0, r0, lsl #22
   11d18:	andeq	ip, r0, r4, lsr #21
   11d1c:	strdeq	ip, [r0], -r8
   11d20:	andeq	ip, r0, r0, asr #12
   11d24:	andeq	ip, r0, ip, lsl #20
   11d28:	andeq	ip, r0, r0, asr r4
   11d2c:	muleq	r0, ip, r9
   11d30:	andeq	ip, r0, r4, ror r9
   11d34:	andeq	ip, r0, r4, lsl #19
   11d38:	andeq	ip, r0, r0, asr r9
   11d3c:	push	{r4, r5, lr}
   11d40:	ldr	r1, [pc, #112]	; 11db8 <main@@Base+0xd18c>
   11d44:	ldr	ip, [pc, #112]	; 11dbc <main@@Base+0xd190>
   11d48:	add	r1, pc, r1
   11d4c:	ldr	r4, [r1, ip]
   11d50:	sub	sp, sp, #12
   11d54:	ldr	r3, [r4]
   11d58:	mov	r0, r2
   11d5c:	mov	r5, r2
   11d60:	str	r3, [sp, #4]
   11d64:	bl	4248 <av_find_input_format@plt>
   11d68:	ldr	r1, [pc, #80]	; 11dc0 <main@@Base+0xd194>
   11d6c:	cmp	r0, #0
   11d70:	add	r1, pc, r1
   11d74:	str	r0, [r1, #36]	; 0x24
   11d78:	movne	r0, #0
   11d7c:	beq	11d98 <main@@Base+0xd16c>
   11d80:	ldr	r2, [sp, #4]
   11d84:	ldr	r3, [r4]
   11d88:	cmp	r2, r3
   11d8c:	bne	11db4 <main@@Base+0xd188>
   11d90:	add	sp, sp, #12
   11d94:	pop	{r4, r5, pc}
   11d98:	ldr	r2, [pc, #36]	; 11dc4 <main@@Base+0xd198>
   11d9c:	mov	r3, r5
   11da0:	add	r2, pc, r2
   11da4:	mov	r1, #16
   11da8:	bl	40f8 <av_log@plt>
   11dac:	mvn	r0, #21
   11db0:	b	11d80 <main@@Base+0xd154>
   11db4:	bl	3f00 <__stack_chk_fail@plt>
   11db8:			; <UNDEFINED> instruction: 0x0001feb4
   11dbc:	andeq	r0, r0, r8, ror #7
   11dc0:	strdeq	r0, [r2], -ip
   11dc4:	andeq	ip, r0, r0, lsr #17
   11dc8:	push	{r4, r5, lr}
   11dcc:	ldr	r1, [pc, #160]	; 11e74 <main@@Base+0xd248>
   11dd0:	ldr	r0, [pc, #160]	; 11e78 <main@@Base+0xd24c>
   11dd4:	ldr	r3, [pc, #160]	; 11e7c <main@@Base+0xd250>
   11dd8:	add	r1, pc, r1
   11ddc:	ldr	r5, [r1, r0]
   11de0:	add	r3, pc, r3
   11de4:	ldr	r3, [r3, #32]
   11de8:	ldr	r0, [r5]
   11dec:	sub	sp, sp, #20
   11df0:	cmp	r3, #0
   11df4:	mov	r4, r2
   11df8:	str	r0, [sp, #12]
   11dfc:	bne	11e4c <main@@Base+0xd220>
   11e00:	ldr	r1, [pc, #120]	; 11e80 <main@@Base+0xd254>
   11e04:	mov	r0, r2
   11e08:	add	r1, pc, r1
   11e0c:	bl	46c8 <strcmp@plt>
   11e10:	cmp	r0, #0
   11e14:	beq	11e40 <main@@Base+0xd214>
   11e18:	ldr	r2, [sp, #12]
   11e1c:	ldr	r1, [pc, #96]	; 11e84 <main@@Base+0xd258>
   11e20:	ldr	r3, [r5]
   11e24:	add	r1, pc, r1
   11e28:	cmp	r2, r3
   11e2c:	str	r4, [r1, #32]
   11e30:	mov	r0, #0
   11e34:	bne	11e70 <main@@Base+0xd244>
   11e38:	add	sp, sp, #20
   11e3c:	pop	{r4, r5, pc}
   11e40:	ldr	r4, [pc, #64]	; 11e88 <main@@Base+0xd25c>
   11e44:	add	r4, pc, r4
   11e48:	b	11e18 <main@@Base+0xd1ec>
   11e4c:	str	r3, [sp]
   11e50:	mov	r3, r2
   11e54:	ldr	r2, [pc, #48]	; 11e8c <main@@Base+0xd260>
   11e58:	mov	r0, #0
   11e5c:	add	r2, pc, r2
   11e60:	mov	r1, #16
   11e64:	bl	40f8 <av_log@plt>
   11e68:	mov	r0, #1
   11e6c:	bl	902c <main@@Base+0x4400>
   11e70:	bl	3f00 <__stack_chk_fail@plt>
   11e74:	andeq	pc, r1, r4, lsr #28
   11e78:	andeq	r0, r0, r8, ror #7
   11e7c:	andeq	r0, r2, ip, lsl #29
   11e80:	andeq	ip, r0, r4, asr r7
   11e84:	andeq	r0, r2, r8, asr #28
   11e88:	andeq	ip, r0, r4, asr #13
   11e8c:			; <UNDEFINED> instruction: 0x0000c6b4
   11e90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e94:	ldr	r3, [pc, #744]	; 12184 <main@@Base+0xd558>
   11e98:	ldr	ip, [pc, #744]	; 12188 <main@@Base+0xd55c>
   11e9c:	add	r3, pc, r3
   11ea0:	ldr	sl, [r3, ip]
   11ea4:	sub	sp, sp, #1040	; 0x410
   11ea8:	ldr	r3, [sl]
   11eac:	sub	sp, sp, #12
   11eb0:	mov	r6, r0
   11eb4:	ldr	r0, [pc, #720]	; 1218c <main@@Base+0xd560>
   11eb8:	mov	r5, r1
   11ebc:	mov	r8, r2
   11ec0:	str	r3, [sp, #1044]	; 0x414
   11ec4:	bl	477c <av_mallocz@plt>
   11ec8:	cmp	r0, #0
   11ecc:	str	r0, [r6]
   11ed0:	beq	120b0 <main@@Base+0xd484>
   11ed4:	mov	r4, r0
   11ed8:	ldr	r0, [r5, #4]
   11edc:	bl	477c <av_mallocz@plt>
   11ee0:	cmp	r0, #0
   11ee4:	str	r0, [r4, #12]
   11ee8:	beq	120b0 <main@@Base+0xd484>
   11eec:	mvn	r1, #0
   11ef0:	mov	r2, #42	; 0x2a
   11ef4:	ldr	r3, [pc, #660]	; 12190 <main@@Base+0xd564>
   11ef8:	ldr	r0, [r6]
   11efc:	add	r3, pc, r3
   11f00:	stm	r0, {r3, r5}
   11f04:	ldr	r3, [pc, #648]	; 12194 <main@@Base+0xd568>
   11f08:	str	r1, [r0, #24]
   11f0c:	add	r3, pc, r3
   11f10:	str	r3, [r0, #16]
   11f14:	str	r2, [r0, #20]
   11f18:	bl	462c <av_opt_set_defaults@plt>
   11f1c:	ldr	r3, [r5]
   11f20:	cmp	r3, #0
   11f24:	beq	11f38 <main@@Base+0xd30c>
   11f28:	ldr	r2, [r6]
   11f2c:	ldr	r0, [r2, #12]
   11f30:	str	r3, [r0]
   11f34:	bl	462c <av_opt_set_defaults@plt>
   11f38:	cmp	r8, #0
   11f3c:	beq	11fbc <main@@Base+0xd390>
   11f40:	mov	r5, #0
   11f44:	ldr	r3, [pc, #588]	; 12198 <main@@Base+0xd56c>
   11f48:	ldr	r2, [pc, #588]	; 1219c <main@@Base+0xd570>
   11f4c:	add	r7, sp, #16
   11f50:	str	r5, [sp]
   11f54:	mov	r0, r7
   11f58:	add	r3, pc, r3
   11f5c:	add	r2, pc, r2
   11f60:	mov	r1, r8
   11f64:	str	r5, [sp, #16]
   11f68:	bl	45a8 <av_dict_parse_string@plt>
   11f6c:	subs	r4, r0, #0
   11f70:	blt	1215c <main@@Base+0xd530>
   11f74:	ldr	r8, [pc, #548]	; 121a0 <main@@Base+0xd574>
   11f78:	add	r8, pc, r8
   11f7c:	b	11f98 <main@@Base+0xd36c>
   11f80:	mov	r3, #1
   11f84:	ldm	r5, {r1, r2}
   11f88:	ldr	r0, [r6]
   11f8c:	bl	4200 <av_opt_set@plt>
   11f90:	subs	r4, r0, #0
   11f94:	blt	12130 <main@@Base+0xd504>
   11f98:	mov	r2, r5
   11f9c:	mov	r3, #2
   11fa0:	mov	r1, r8
   11fa4:	ldr	r0, [sp, #16]
   11fa8:	bl	4644 <av_dict_get@plt>
   11fac:	subs	r5, r0, #0
   11fb0:	bne	11f80 <main@@Base+0xd354>
   11fb4:	mov	r0, r7
   11fb8:	bl	3ee8 <av_dict_free@plt>
   11fbc:	ldr	r4, [r6]
   11fc0:	add	r3, r4, #8192	; 0x2000
   11fc4:	ldr	r5, [r3, #2172]	; 0x87c
   11fc8:	mov	r0, r5
   11fcc:	str	r5, [sp, #12]
   11fd0:	bl	4110 <strlen@plt>
   11fd4:	ldrb	r3, [r5]
   11fd8:	add	r8, r5, r0
   11fdc:	cmp	r3, #0
   11fe0:	beq	120dc <main@@Base+0xd4b0>
   11fe4:	add	fp, sp, #24
   11fe8:	add	r7, sp, #16
   11fec:	add	r9, sp, #12
   11ff0:	b	12008 <main@@Base+0xd3dc>
   11ff4:	ldr	r5, [sp, #12]
   11ff8:	ldr	r4, [r6]
   11ffc:	ldrb	r3, [r5]
   12000:	cmp	r3, #0
   12004:	beq	120dc <main@@Base+0xd4b0>
   12008:	add	r4, r4, #8192	; 0x2000
   1200c:	ldr	r3, [r4, #2176]	; 0x880
   12010:	mov	r2, r8
   12014:	mov	r1, r9
   12018:	mov	r0, r7
   1201c:	bl	44d0 <av_utf8_decode@plt>
   12020:	subs	r4, r0, #0
   12024:	bge	11ff4 <main@@Base+0xd3c8>
   12028:	sub	fp, fp, #4
   1202c:	mov	r0, fp
   12030:	mov	r2, #1
   12034:	mov	r1, #0
   12038:	bl	3f48 <av_bprint_init@plt>
   1203c:	ldr	r7, [sp, #12]
   12040:	ldr	r1, [pc, #348]	; 121a4 <main@@Base+0xd578>
   12044:	mov	r0, fp
   12048:	sub	r7, r7, r5
   1204c:	add	r1, pc, r1
   12050:	bl	459c <av_bprintf@plt>
   12054:	cmp	r7, #0
   12058:	beq	12084 <main@@Base+0xd458>
   1205c:	ldr	r8, [pc, #324]	; 121a8 <main@@Base+0xd57c>
   12060:	sub	r5, r5, #1
   12064:	add	r8, pc, r8
   12068:	add	r7, r5, r7
   1206c:	ldrb	r2, [r5, #1]!
   12070:	mov	r1, r8
   12074:	mov	r0, fp
   12078:	bl	459c <av_bprintf@plt>
   1207c:	cmp	r7, r5
   12080:	bne	1206c <main@@Base+0xd440>
   12084:	ldr	r3, [r6]
   12088:	mov	r0, r6
   1208c:	add	r3, r3, #8192	; 0x2000
   12090:	ldr	r2, [r3, #2172]	; 0x87c
   12094:	mov	r1, #16
   12098:	str	r2, [sp]
   1209c:	ldr	r2, [pc, #264]	; 121ac <main@@Base+0xd580>
   120a0:	ldr	r3, [sp, #20]
   120a4:	add	r2, pc, r2
   120a8:	bl	40f8 <av_log@plt>
   120ac:	b	120bc <main@@Base+0xd490>
   120b0:	mvn	r4, #11
   120b4:	mov	r0, r6
   120b8:	bl	110bc <main@@Base+0xc490>
   120bc:	ldr	r2, [sp, #1044]	; 0x414
   120c0:	ldr	r3, [sl]
   120c4:	mov	r0, r4
   120c8:	cmp	r2, r3
   120cc:	bne	12180 <main@@Base+0xd554>
   120d0:	add	sp, sp, #1040	; 0x410
   120d4:	add	sp, sp, #12
   120d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120dc:	mov	r5, #108	; 0x6c
   120e0:	ldr	r7, [pc, #200]	; 121b0 <main@@Base+0xd584>
   120e4:	b	120ec <main@@Base+0xd4c0>
   120e8:	ldr	r4, [r6]
   120ec:	add	r0, r4, r5
   120f0:	mvn	r2, #0
   120f4:	add	r5, r5, #1024	; 0x400
   120f8:	mov	r1, #1
   120fc:	bl	3f48 <av_bprint_init@plt>
   12100:	cmp	r5, r7
   12104:	bne	120e8 <main@@Base+0xd4bc>
   12108:	ldr	r0, [r6]
   1210c:	ldr	r3, [r0, #4]
   12110:	ldr	r3, [r3, #12]
   12114:	cmp	r3, #0
   12118:	beq	12128 <main@@Base+0xd4fc>
   1211c:	blx	r3
   12120:	subs	r4, r0, #0
   12124:	blt	120b4 <main@@Base+0xd488>
   12128:	mov	r4, #0
   1212c:	b	120bc <main@@Base+0xd490>
   12130:	ldr	r3, [r5, #4]
   12134:	ldr	r2, [pc, #120]	; 121b4 <main@@Base+0xd588>
   12138:	str	r3, [sp]
   1213c:	ldr	r0, [r6]
   12140:	add	r2, pc, r2
   12144:	ldr	r3, [r5]
   12148:	mov	r1, #16
   1214c:	bl	40f8 <av_log@plt>
   12150:	mov	r0, r7
   12154:	bl	3ee8 <av_dict_free@plt>
   12158:	b	120b4 <main@@Base+0xd488>
   1215c:	ldr	r2, [pc, #84]	; 121b8 <main@@Base+0xd58c>
   12160:	ldr	r0, [r6]
   12164:	mov	r3, r8
   12168:	add	r2, pc, r2
   1216c:	mov	r1, #16
   12170:	bl	40f8 <av_log@plt>
   12174:	mov	r0, r7
   12178:	bl	3ee8 <av_dict_free@plt>
   1217c:	b	120b4 <main@@Base+0xd488>
   12180:	bl	3f00 <__stack_chk_fail@plt>
   12184:	andeq	pc, r1, r0, ror #26
   12188:	andeq	r0, r0, r8, ror #7
   1218c:	andeq	r2, r0, r4, lsl #17
   12190:	muleq	r1, ip, sl
   12194:	andeq	r0, r2, r0, asr r1
   12198:	muleq	r0, r4, fp
   1219c:	muleq	r0, r4, r2
   121a0:	andeq	ip, r0, r0, lsr r9
   121a4:	muleq	r0, r8, r6
   121a8:	andeq	ip, r0, r4, lsl #13
   121ac:	andeq	ip, r0, ip, asr #12
   121b0:	andeq	r2, r0, ip, ror #16
   121b4:	andeq	ip, r0, ip, asr r5
   121b8:	strdeq	ip, [r0], -r4
   121bc:	push	{r4, r5, r6, r7, lr}
   121c0:	ldr	r3, [pc, #116]	; 1223c <main@@Base+0xd610>
   121c4:	add	r0, r0, r0, lsl #3
   121c8:	ldr	r2, [pc, #112]	; 12240 <main@@Base+0xd614>
   121cc:	ldr	r5, [pc, #112]	; 12244 <main@@Base+0xd618>
   121d0:	add	r3, pc, r3
   121d4:	lsl	r4, r0, #3
   121d8:	add	r5, pc, r5
   121dc:	add	r4, r4, #12
   121e0:	ldr	r6, [r3, r2]
   121e4:	ldr	r0, [r5, r4]
   121e8:	ldr	r2, [r6]
   121ec:	sub	sp, sp, #12
   121f0:	cmn	r0, #1
   121f4:	add	r4, r5, r4
   121f8:	str	r2, [sp, #4]
   121fc:	beq	12220 <main@@Base+0xd5f4>
   12200:	mov	r7, #1
   12204:	add	r3, r0, r0, lsl #3
   12208:	add	r3, r5, r3, lsl #3
   1220c:	str	r7, [r3, #68]	; 0x44
   12210:	bl	121bc <main@@Base+0xd590>
   12214:	ldr	r0, [r4, #4]!
   12218:	cmn	r0, #1
   1221c:	bne	12204 <main@@Base+0xd5d8>
   12220:	ldr	r2, [sp, #4]
   12224:	ldr	r3, [r6]
   12228:	cmp	r2, r3
   1222c:	bne	12238 <main@@Base+0xd60c>
   12230:	add	sp, sp, #12
   12234:	pop	{r4, r5, r6, r7, pc}
   12238:	bl	3f00 <__stack_chk_fail@plt>
   1223c:	andeq	pc, r1, ip, lsr #20
   12240:	andeq	r0, r0, r8, ror #7
   12244:	andeq	pc, r1, r4, lsl #29
   12248:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1224c:	vpush	{d8}
   12250:	ldr	r1, [pc, #872]	; 125c0 <main@@Base+0xd994>
   12254:	ldr	ip, [pc, #872]	; 125c4 <main@@Base+0xd998>
   12258:	add	r1, pc, r1
   1225c:	ldr	r7, [pc, #868]	; 125c8 <main@@Base+0xd99c>
   12260:	sub	sp, sp, #32
   12264:	ldr	r6, [r1, ip]
   12268:	add	r7, pc, r7
   1226c:	ldr	r5, [sp, #72]	; 0x48
   12270:	ldr	ip, [r6]
   12274:	mov	r9, r3
   12278:	add	r3, r7, #16
   1227c:	cmp	r5, r3
   12280:	mov	r8, r2
   12284:	str	ip, [sp, #28]
   12288:	mov	r4, r0
   1228c:	beq	12418 <main@@Base+0xd7ec>
   12290:	ldr	sl, [pc, #820]	; 125cc <main@@Base+0xd9a0>
   12294:	add	sl, pc, sl
   12298:	ldr	r3, [sl, #4]
   1229c:	cmp	r3, #0
   122a0:	bne	12338 <main@@Base+0xd70c>
   122a4:	ldr	r7, [pc, #804]	; 125d0 <main@@Base+0xd9a4>
   122a8:	add	r7, pc, r7
   122ac:	ldr	r3, [pc, #800]	; 125d4 <main@@Base+0xd9a8>
   122b0:	strd	r8, [sp, #8]
   122b4:	add	r3, pc, r3
   122b8:	str	r3, [sp]
   122bc:	mov	r2, #1
   122c0:	mvn	r3, #0
   122c4:	mov	r1, #128	; 0x80
   122c8:	mov	r0, r4
   122cc:	bl	41dc <__snprintf_chk@plt>
   122d0:	ldrb	r2, [r7]
   122d4:	ldr	r3, [pc, #764]	; 125d8 <main@@Base+0xd9ac>
   122d8:	cmp	r2, #0
   122dc:	add	r3, pc, r3
   122e0:	ldr	r3, [r3]
   122e4:	bne	123fc <main@@Base+0xd7d0>
   122e8:	cmp	r3, #0
   122ec:	bne	12494 <main@@Base+0xd868>
   122f0:	ldr	r5, [pc, #740]	; 125dc <main@@Base+0xd9b0>
   122f4:	add	r5, pc, r5
   122f8:	mov	r3, r5
   122fc:	ldr	r2, [pc, #732]	; 125e0 <main@@Base+0xd9b4>
   12300:	str	r5, [sp, #4]
   12304:	str	r7, [sp]
   12308:	add	r2, pc, r2
   1230c:	mov	r1, #128	; 0x80
   12310:	mov	r0, r4
   12314:	bl	47f4 <av_strlcatf@plt>
   12318:	ldr	r2, [sp, #28]
   1231c:	ldr	r3, [r6]
   12320:	mov	r0, r4
   12324:	cmp	r2, r3
   12328:	bne	125b0 <main@@Base+0xd984>
   1232c:	add	sp, sp, #32
   12330:	vpop	{d8}
   12334:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12338:	mov	r0, r2
   1233c:	mov	r1, r9
   12340:	bl	1b8ac <vc_gpuserv_execute_code@@Base+0x718>
   12344:	vldr	d7, [pc, #620]	; 125b8 <main@@Base+0xd98c>
   12348:	vmov	d8, r0, r1
   1234c:	vcmpe.f64	d8, d7
   12350:	vmrs	APSR_nzcv, fpscr
   12354:	ble	12518 <main@@Base+0xd8ec>
   12358:	add	r7, r7, #20
   1235c:	cmp	r5, r7
   12360:	vmov.f64	d0, d8
   12364:	beq	124b8 <main@@Base+0xd88c>
   12368:	bl	43b0 <log10@plt>
   1236c:	vmov	r0, r1, d0
   12370:	bl	1b9f0 <vc_gpuserv_execute_code@@Base+0x85c>
   12374:	mov	r2, #3
   12378:	mov	r3, #0
   1237c:	bl	1b90c <vc_gpuserv_execute_code@@Base+0x778>
   12380:	cmp	r0, #5
   12384:	movge	r0, #5
   12388:	ldr	r3, [pc, #596]	; 125e4 <main@@Base+0xd9b8>
   1238c:	bic	r0, r0, r0, asr #31
   12390:	add	r0, r0, r0, lsl #1
   12394:	add	r3, pc, r3
   12398:	add	r3, r3, r0, lsl #3
   1239c:	vldr	d7, [r3, #56]	; 0x38
   123a0:	vdiv.f64	d8, d8, d7
   123a4:	vmov	r0, r1, d8
   123a8:	ldr	r7, [r3, #68]	; 0x44
   123ac:	bl	1b9f0 <vc_gpuserv_execute_code@@Base+0x85c>
   123b0:	mov	r8, r0
   123b4:	mov	r9, r1
   123b8:	vmov	r0, r1, d8
   123bc:	bl	1b9f0 <vc_gpuserv_execute_code@@Base+0x85c>
   123c0:	bl	1b8ac <vc_gpuserv_execute_code@@Base+0x718>
   123c4:	vmov	d7, r0, r1
   123c8:	vcmp.f64	d7, d8
   123cc:	vmrs	APSR_nzcv, fpscr
   123d0:	beq	122ac <main@@Base+0xd680>
   123d4:	ldr	r3, [pc, #524]	; 125e8 <main@@Base+0xd9bc>
   123d8:	vstr	d8, [sp, #8]
   123dc:	add	r3, pc, r3
   123e0:	str	r3, [sp]
   123e4:	mov	r2, #1
   123e8:	mvn	r3, #0
   123ec:	mov	r1, #128	; 0x80
   123f0:	mov	r0, r4
   123f4:	bl	41dc <__snprintf_chk@plt>
   123f8:	b	122d0 <main@@Base+0xd6a4>
   123fc:	cmp	r3, #0
   12400:	bne	124a0 <main@@Base+0xd874>
   12404:	ldr	r3, [pc, #480]	; 125ec <main@@Base+0xd9c0>
   12408:	ldr	r5, [pc, #480]	; 125f0 <main@@Base+0xd9c4>
   1240c:	add	r3, pc, r3
   12410:	add	r5, pc, r5
   12414:	b	122fc <main@@Base+0xd6d0>
   12418:	ldr	r3, [pc, #468]	; 125f4 <main@@Base+0xd9c8>
   1241c:	vmov	d8, r8, r9
   12420:	add	r3, pc, r3
   12424:	ldr	r2, [r3, #12]
   12428:	cmp	r2, #0
   1242c:	bne	12524 <main@@Base+0xd8f8>
   12430:	ldr	r3, [r3, #4]
   12434:	cmp	r3, #0
   12438:	beq	124ac <main@@Base+0xd880>
   1243c:	vldr	d7, [pc, #372]	; 125b8 <main@@Base+0xd98c>
   12440:	vcmpe.f64	d8, d7
   12444:	vmrs	APSR_nzcv, fpscr
   12448:	ble	125a4 <main@@Base+0xd978>
   1244c:	vmov.f64	d0, d8
   12450:	bl	43b0 <log10@plt>
   12454:	vmov	r0, r1, d0
   12458:	bl	1b9f0 <vc_gpuserv_execute_code@@Base+0x85c>
   1245c:	mov	r3, #0
   12460:	mov	r2, #3
   12464:	bl	1b90c <vc_gpuserv_execute_code@@Base+0x778>
   12468:	cmp	r0, #5
   1246c:	movge	r0, #5
   12470:	ldr	r3, [pc, #384]	; 125f8 <main@@Base+0xd9cc>
   12474:	bic	r0, r0, r0, asr #31
   12478:	add	r3, pc, r3
   1247c:	add	r0, r0, r0, lsl #1
   12480:	add	r3, r3, r0, lsl #3
   12484:	vldr	d7, [r3, #56]	; 0x38
   12488:	ldr	r7, [r3, #68]	; 0x44
   1248c:	vdiv.f64	d8, d8, d7
   12490:	b	123d4 <main@@Base+0xd7a8>
   12494:	ldr	r3, [pc, #352]	; 125fc <main@@Base+0xd9d0>
   12498:	add	r3, pc, r3
   1249c:	b	122fc <main@@Base+0xd6d0>
   124a0:	ldr	r3, [pc, #344]	; 12600 <main@@Base+0xd9d4>
   124a4:	add	r3, pc, r3
   124a8:	b	122fc <main@@Base+0xd6d0>
   124ac:	ldr	r7, [pc, #336]	; 12604 <main@@Base+0xd9d8>
   124b0:	add	r7, pc, r7
   124b4:	b	123d4 <main@@Base+0xd7a8>
   124b8:	ldr	r3, [sl, #8]
   124bc:	cmp	r3, #0
   124c0:	beq	12368 <main@@Base+0xd73c>
   124c4:	bl	42d8 <log2@plt>
   124c8:	vmov	r0, r1, d0
   124cc:	bl	1b9f0 <vc_gpuserv_execute_code@@Base+0x85c>
   124d0:	mov	r2, #10
   124d4:	mov	r3, #0
   124d8:	bl	1b90c <vc_gpuserv_execute_code@@Base+0x778>
   124dc:	cmp	r0, #5
   124e0:	movge	r0, #5
   124e4:	ldr	r3, [pc, #284]	; 12608 <main@@Base+0xd9dc>
   124e8:	bic	r0, r0, r0, asr #31
   124ec:	add	r0, r0, r0, lsl #1
   124f0:	add	r3, pc, r3
   124f4:	add	r3, r3, r0, lsl #3
   124f8:	vldr	d7, [r3, #48]	; 0x30
   124fc:	vdiv.f64	d8, d8, d7
   12500:	vmov	r0, r1, d8
   12504:	ldr	r7, [r3, #64]	; 0x40
   12508:	bl	1b9f0 <vc_gpuserv_execute_code@@Base+0x85c>
   1250c:	mov	r8, r0
   12510:	mov	r9, r1
   12514:	b	123b8 <main@@Base+0xd78c>
   12518:	ldr	r7, [pc, #236]	; 1260c <main@@Base+0xd9e0>
   1251c:	add	r7, pc, r7
   12520:	b	123b8 <main@@Base+0xd78c>
   12524:	vcvt.s32.f64	s15, d8
   12528:	vmov	r5, s15
   1252c:	ldr	r2, [pc, #220]	; 12610 <main@@Base+0xd9e4>
   12530:	asr	lr, r5, #31
   12534:	smull	r1, r3, r2, r5
   12538:	add	r3, r3, r5
   1253c:	rsb	r3, lr, r3, asr #5
   12540:	rsb	r1, r3, r3, lsl #4
   12544:	lsl	r1, r1, #2
   12548:	vmov	s15, r1
   1254c:	vcvt.f64.s32	d7, s15
   12550:	vsub.f64	d8, d8, d7
   12554:	smull	r1, r2, r2, r3
   12558:	ldr	ip, [pc, #180]	; 12614 <main@@Base+0xd9e8>
   1255c:	add	r1, r2, r3
   12560:	smull	r2, ip, ip, r5
   12564:	asr	r2, r3, #31
   12568:	rsb	r2, r2, r1, asr #5
   1256c:	add	r1, ip, r5
   12570:	ldr	ip, [pc, #160]	; 12618 <main@@Base+0xd9ec>
   12574:	rsb	r2, r2, r2, lsl #4
   12578:	sub	r3, r3, r2, lsl #2
   1257c:	rsb	r1, lr, r1, asr #11
   12580:	add	ip, pc, ip
   12584:	stmib	sp, {r1, r3}
   12588:	vstr	d8, [sp, #16]
   1258c:	str	ip, [sp]
   12590:	mvn	r3, #0
   12594:	mov	r2, #1
   12598:	mov	r1, #128	; 0x80
   1259c:	bl	41dc <__snprintf_chk@plt>
   125a0:	b	12318 <main@@Base+0xd6ec>
   125a4:	ldr	r7, [pc, #112]	; 1261c <main@@Base+0xd9f0>
   125a8:	add	r7, pc, r7
   125ac:	b	123d4 <main@@Base+0xd7a8>
   125b0:	bl	3f00 <__stack_chk_fail@plt>
   125b4:	nop	{0}
   125b8:	andeq	r0, r0, r0
   125bc:	svccc	0x00f00000	; IMB
   125c0:	andeq	pc, r1, r4, lsr #19
   125c4:	andeq	r0, r0, r8, ror #7
   125c8:	strdeq	fp, [r0], -r8
   125cc:	ldrdeq	r0, [r2], -r8
   125d0:	andeq	ip, r0, r0, lsl #12
   125d4:	andeq	fp, r0, r8, asr #30
   125d8:	muleq	r2, r0, r9
   125dc:			; <UNDEFINED> instruction: 0x0000c5b4
   125e0:	andeq	ip, r0, r0, asr #8
   125e4:	andeq	lr, r1, r4, lsl #12
   125e8:	andeq	ip, r0, r8, ror #6
   125ec:	strdeq	sl, [r0], -r8
   125f0:	muleq	r0, r8, r4
   125f4:	andeq	r0, r2, ip, asr #16
   125f8:	andeq	lr, r1, r0, lsr #10
   125fc:	andeq	sl, r0, ip, ror #6
   12600:	andeq	sl, r0, r0, ror #6
   12604:	strdeq	ip, [r0], -r8
   12608:	andeq	lr, r1, r8, lsr #9
   1260c:	andeq	ip, r0, ip, lsl #7
   12610:	stmhi	r8, {r0, r3, r7, fp, pc}
   12614:			; <UNDEFINED> instruction: 0x91a2b3c5
   12618:			; <UNDEFINED> instruction: 0x0000c1b4
   1261c:	andeq	ip, r0, r0, lsl #6
   12620:	push	{r4, r5, r6, r7, r8, lr}
   12624:	ldr	ip, [pc, #196]	; 126f0 <main@@Base+0xdac4>
   12628:	add	r6, r0, r0, lsl #3
   1262c:	ldr	r3, [pc, #192]	; 126f4 <main@@Base+0xdac8>
   12630:	ldr	r0, [pc, #192]	; 126f8 <main@@Base+0xdacc>
   12634:	add	ip, pc, ip
   12638:	lsl	r6, r6, #3
   1263c:	ldr	r5, [ip, r0]
   12640:	add	r3, pc, r3
   12644:	add	r6, r6, #12
   12648:	ldr	r0, [r3, r6]
   1264c:	ldr	lr, [r5]
   12650:	sub	sp, sp, #8
   12654:	cmn	r0, #1
   12658:	add	r6, r3, r6
   1265c:	str	lr, [sp, #4]
   12660:	beq	1269c <main@@Base+0xda70>
   12664:	cmp	r1, #0
   12668:	mov	r4, r2
   1266c:	mov	r8, r3
   12670:	movne	r7, #1
   12674:	beq	126b4 <main@@Base+0xda88>
   12678:	add	r3, r0, r0, lsl #3
   1267c:	add	r3, r8, r3, lsl #3
   12680:	str	r7, [r3, #68]	; 0x44
   12684:	mov	r2, r4
   12688:	mov	r1, #1
   1268c:	bl	12620 <main@@Base+0xd9f4>
   12690:	ldr	r0, [r6, #4]!
   12694:	cmn	r0, #1
   12698:	bne	12678 <main@@Base+0xda4c>
   1269c:	ldr	r2, [sp, #4]
   126a0:	ldr	r3, [r5]
   126a4:	cmp	r2, r3
   126a8:	bne	126ec <main@@Base+0xdac0>
   126ac:	add	sp, sp, #8
   126b0:	pop	{r4, r5, r6, r7, r8, pc}
   126b4:	mov	r7, r1
   126b8:	add	r0, r0, r0, lsl #3
   126bc:	lsl	r0, r0, #3
   126c0:	add	r3, r8, r0
   126c4:	add	r0, r0, #64	; 0x40
   126c8:	str	r7, [r3, #68]	; 0x44
   126cc:	add	r0, r8, r0
   126d0:	mov	r2, #0
   126d4:	mov	r1, r4
   126d8:	bl	4464 <av_dict_copy@plt>
   126dc:	ldr	r0, [r6, #4]!
   126e0:	cmn	r0, #1
   126e4:	bne	126b8 <main@@Base+0xda8c>
   126e8:	b	1269c <main@@Base+0xda70>
   126ec:	bl	3f00 <__stack_chk_fail@plt>
   126f0:	andeq	pc, r1, r8, asr #11
   126f4:	andeq	pc, r1, ip, lsl sl	; <UNPREDICTABLE>
   126f8:	andeq	r0, r0, r8, ror #7
   126fc:	push	{r4, r5, r6, r7, r8, lr}
   12700:	ldr	ip, [pc, #188]	; 127c4 <main@@Base+0xdb98>
   12704:	ldr	r3, [pc, #188]	; 127c8 <main@@Base+0xdb9c>
   12708:	add	ip, pc, ip
   1270c:	ldr	r6, [ip, r3]
   12710:	ldr	r8, [pc, #180]	; 127cc <main@@Base+0xdba0>
   12714:	add	r0, r0, r0, lsl #3
   12718:	lsl	r4, r0, #3
   1271c:	add	r8, pc, r8
   12720:	ldr	r0, [r6]
   12724:	sub	sp, sp, #8
   12728:	add	lr, r8, r4
   1272c:	cmp	r1, #0
   12730:	mov	r5, r2
   12734:	str	r1, [lr, #68]	; 0x44
   12738:	str	r0, [sp, #4]
   1273c:	beq	12794 <main@@Base+0xdb68>
   12740:	add	r4, r4, #12
   12744:	ldr	r0, [r8, r4]
   12748:	add	r4, r8, r4
   1274c:	cmn	r0, #1
   12750:	beq	1277c <main@@Base+0xdb50>
   12754:	mov	r7, #1
   12758:	add	r3, r0, r0, lsl #3
   1275c:	add	r3, r8, r3, lsl #3
   12760:	str	r7, [r3, #68]	; 0x44
   12764:	mov	r2, r5
   12768:	mov	r1, #1
   1276c:	bl	12620 <main@@Base+0xd9f4>
   12770:	ldr	r0, [r4, #4]!
   12774:	cmn	r0, #1
   12778:	bne	12758 <main@@Base+0xdb2c>
   1277c:	ldr	r2, [sp, #4]
   12780:	ldr	r3, [r6]
   12784:	cmp	r2, r3
   12788:	bne	127c0 <main@@Base+0xdb94>
   1278c:	add	sp, sp, #8
   12790:	pop	{r4, r5, r6, r7, r8, pc}
   12794:	ldr	r0, [sp, #4]
   12798:	ldr	r2, [r6]
   1279c:	cmp	r0, r2
   127a0:	bne	127c0 <main@@Base+0xdb94>
   127a4:	mov	r2, r1
   127a8:	mov	r1, r5
   127ac:	add	r4, r4, #64	; 0x40
   127b0:	add	r0, r8, r4
   127b4:	add	sp, sp, #8
   127b8:	pop	{r4, r5, r6, r7, r8, lr}
   127bc:	b	4464 <av_dict_copy@plt>
   127c0:	bl	3f00 <__stack_chk_fail@plt>
   127c4:	strdeq	pc, [r1], -r4
   127c8:	andeq	r0, r0, r8, ror #7
   127cc:	andeq	pc, r1, r0, asr #18
   127d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127d4:	ldr	r3, [pc, #336]	; 1292c <main@@Base+0xdd00>
   127d8:	mov	r9, r2
   127dc:	ldr	r2, [pc, #332]	; 12930 <main@@Base+0xdd04>
   127e0:	add	r3, pc, r3
   127e4:	ldr	r2, [r3, r2]
   127e8:	sub	sp, sp, #36	; 0x24
   127ec:	ldr	r4, [pc, #320]	; 12934 <main@@Base+0xdd08>
   127f0:	mov	r7, r1
   127f4:	str	r2, [sp, #20]
   127f8:	ldr	r1, [pc, #312]	; 12938 <main@@Base+0xdd0c>
   127fc:	ldr	r2, [r2]
   12800:	add	r4, pc, r4
   12804:	ldr	r6, [pc, #304]	; 1293c <main@@Base+0xdd10>
   12808:	add	r1, pc, r1
   1280c:	str	r2, [sp, #28]
   12810:	add	r2, r4, #3024	; 0xbd0
   12814:	mov	r5, r0
   12818:	mov	r8, #0
   1281c:	str	r1, [sp, #16]
   12820:	add	r6, pc, r6
   12824:	str	r2, [sp, #12]
   12828:	ldr	sl, [r4, #4]
   1282c:	mov	r0, r5
   12830:	mov	r1, sl
   12834:	bl	46c8 <strcmp@plt>
   12838:	cmp	r0, #0
   1283c:	ldr	fp, [r4, #60]	; 0x3c
   12840:	beq	128f4 <main@@Base+0xdcc8>
   12844:	cmp	fp, #0
   12848:	beq	128c4 <main@@Base+0xdc98>
   1284c:	mov	r1, fp
   12850:	mov	r0, r5
   12854:	bl	46c8 <strcmp@plt>
   12858:	cmp	r0, #0
   1285c:	bne	128c4 <main@@Base+0xdc98>
   12860:	mov	r3, r5
   12864:	ldr	r2, [sp, #16]
   12868:	str	fp, [sp]
   1286c:	mov	r1, #48	; 0x30
   12870:	mov	r0, #0
   12874:	bl	40f8 <av_log@plt>
   12878:	ldr	r3, [r4]
   1287c:	cmp	r7, #0
   12880:	add	r3, r3, r3, lsl #3
   12884:	lsl	r3, r3, #3
   12888:	add	r2, r6, r3
   1288c:	add	r8, r8, #1
   12890:	str	r7, [r2, #68]	; 0x44
   12894:	beq	12900 <main@@Base+0xdcd4>
   12898:	add	r3, r3, #12
   1289c:	ldr	r0, [r6, r3]
   128a0:	add	fp, r6, r3
   128a4:	cmn	r0, #1
   128a8:	beq	128c4 <main@@Base+0xdc98>
   128ac:	mov	r2, r9
   128b0:	mov	r1, #1
   128b4:	bl	126fc <main@@Base+0xdad0>
   128b8:	ldr	r0, [fp, #4]!
   128bc:	cmn	r0, #1
   128c0:	bne	128ac <main@@Base+0xdc80>
   128c4:	ldr	r3, [sp, #12]
   128c8:	add	r4, r4, #72	; 0x48
   128cc:	cmp	r4, r3
   128d0:	bne	12828 <main@@Base+0xdbfc>
   128d4:	ldr	r3, [sp, #20]
   128d8:	ldr	r2, [sp, #28]
   128dc:	ldr	r3, [r3]
   128e0:	mov	r0, r8
   128e4:	cmp	r2, r3
   128e8:	bne	12928 <main@@Base+0xdcfc>
   128ec:	add	sp, sp, #36	; 0x24
   128f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128f4:	cmp	fp, #0
   128f8:	moveq	fp, sl
   128fc:	b	12860 <main@@Base+0xdc34>
   12900:	add	r3, r3, #64	; 0x40
   12904:	add	r0, r6, r3
   12908:	mov	r2, r7
   1290c:	mov	r1, r9
   12910:	bl	4464 <av_dict_copy@plt>
   12914:	ldr	r3, [sp, #12]
   12918:	add	r4, r4, #72	; 0x48
   1291c:	cmp	r4, r3
   12920:	bne	12828 <main@@Base+0xdbfc>
   12924:	b	128d4 <main@@Base+0xdca8>
   12928:	bl	3f00 <__stack_chk_fail@plt>
   1292c:	andeq	pc, r1, ip, lsl r4	; <UNPREDICTABLE>
   12930:	andeq	r0, r0, r8, ror #7
   12934:	andeq	pc, r1, ip, asr r8	; <UNPREDICTABLE>
   12938:	andeq	fp, r0, r8, asr #30
   1293c:	andeq	pc, r1, ip, lsr r8	; <UNPREDICTABLE>
   12940:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12944:	ldr	r3, [pc, #452]	; 12b10 <main@@Base+0xdee4>
   12948:	ldr	r0, [pc, #452]	; 12b14 <main@@Base+0xdee8>
   1294c:	add	r3, pc, r3
   12950:	ldr	r0, [r3, r0]
   12954:	sub	sp, sp, #36	; 0x24
   12958:	ldrb	r4, [r2]
   1295c:	str	r0, [sp, #12]
   12960:	ldr	r0, [r0]
   12964:	cmp	r4, #0
   12968:	str	r2, [sp, #20]
   1296c:	str	r0, [sp, #28]
   12970:	beq	12a00 <main@@Base+0xddd4>
   12974:	mov	fp, r1
   12978:	ldr	r8, [pc, #408]	; 12b18 <main@@Base+0xdeec>
   1297c:	ldr	sl, [pc, #408]	; 12b1c <main@@Base+0xdef0>
   12980:	add	r8, pc, r8
   12984:	add	sl, pc, sl
   12988:	add	r7, sp, #20
   1298c:	mov	r3, #0
   12990:	ldr	r1, [pc, #392]	; 12b20 <main@@Base+0xdef4>
   12994:	mov	r0, r7
   12998:	add	r1, pc, r1
   1299c:	str	r3, [sp, #24]
   129a0:	bl	41a0 <av_get_token@plt>
   129a4:	subs	r5, r0, #0
   129a8:	beq	12af0 <main@@Base+0xdec4>
   129ac:	ldr	r2, [sp, #20]
   129b0:	ldrb	r3, [r2]
   129b4:	cmp	r3, #61	; 0x3d
   129b8:	movne	r1, #1
   129bc:	addne	r6, sp, #24
   129c0:	beq	12a64 <main@@Base+0xde38>
   129c4:	ldr	r2, [sp, #24]
   129c8:	mov	r0, r5
   129cc:	bl	127d0 <main@@Base+0xdba4>
   129d0:	subs	r4, r0, #0
   129d4:	beq	12a38 <main@@Base+0xde0c>
   129d8:	mov	r0, r6
   129dc:	bl	3ee8 <av_dict_free@plt>
   129e0:	mov	r0, r5
   129e4:	bl	46ec <av_free@plt>
   129e8:	cmp	r4, #0
   129ec:	ble	12a00 <main@@Base+0xddd4>
   129f0:	ldr	r3, [sp, #20]
   129f4:	ldrb	r2, [r3]
   129f8:	cmp	r2, #0
   129fc:	bne	12a20 <main@@Base+0xddf4>
   12a00:	ldr	r3, [sp, #12]
   12a04:	ldr	r2, [sp, #28]
   12a08:	ldr	r3, [r3]
   12a0c:	mov	r0, r4
   12a10:	cmp	r2, r3
   12a14:	bne	12b0c <main@@Base+0xdee0>
   12a18:	add	sp, sp, #36	; 0x24
   12a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a20:	add	r2, r3, #1
   12a24:	str	r2, [sp, #20]
   12a28:	ldrb	r3, [r3, #1]
   12a2c:	cmp	r3, #0
   12a30:	bne	1298c <main@@Base+0xdd60>
   12a34:	b	12a00 <main@@Base+0xddd4>
   12a38:	ldr	r2, [pc, #228]	; 12b24 <main@@Base+0xdef8>
   12a3c:	mov	r3, r5
   12a40:	add	r2, pc, r2
   12a44:	mov	r1, #16
   12a48:	bl	40f8 <av_log@plt>
   12a4c:	mov	r0, r6
   12a50:	bl	3ee8 <av_dict_free@plt>
   12a54:	mov	r0, r5
   12a58:	bl	46ec <av_free@plt>
   12a5c:	mvn	r4, #21
   12a60:	b	12a00 <main@@Base+0xddd4>
   12a64:	ldr	r4, [pc, #188]	; 12b28 <main@@Base+0xdefc>
   12a68:	add	r2, r2, #1
   12a6c:	str	r2, [sp, #20]
   12a70:	add	r6, sp, #24
   12a74:	add	r4, pc, r4
   12a78:	ldrb	r3, [r2]
   12a7c:	b	12ad0 <main@@Base+0xdea4>
   12a80:	mov	r1, r8
   12a84:	mov	r0, r7
   12a88:	bl	41a0 <av_get_token@plt>
   12a8c:	subs	r9, r0, #0
   12a90:	beq	12adc <main@@Base+0xdeb0>
   12a94:	mov	r3, r9
   12a98:	mov	r2, sl
   12a9c:	mov	r1, #40	; 0x28
   12aa0:	mov	r0, #0
   12aa4:	str	r5, [sp]
   12aa8:	bl	40f8 <av_log@plt>
   12aac:	mov	r3, #4
   12ab0:	mov	r2, r4
   12ab4:	mov	r1, r9
   12ab8:	mov	r0, r6
   12abc:	bl	453c <av_dict_set@plt>
   12ac0:	ldr	r2, [sp, #20]
   12ac4:	ldrb	r3, [r2]
   12ac8:	cmp	r3, #44	; 0x2c
   12acc:	beq	12ae4 <main@@Base+0xdeb8>
   12ad0:	cmp	r3, #0
   12ad4:	cmpne	r3, #58	; 0x3a
   12ad8:	bne	12a80 <main@@Base+0xde54>
   12adc:	mov	r1, #0
   12ae0:	b	129c4 <main@@Base+0xdd98>
   12ae4:	add	r2, r2, #1
   12ae8:	str	r2, [sp, #20]
   12aec:	b	12a78 <main@@Base+0xde4c>
   12af0:	ldr	r2, [pc, #52]	; 12b2c <main@@Base+0xdf00>
   12af4:	mov	r3, fp
   12af8:	add	r2, pc, r2
   12afc:	mov	r1, #16
   12b00:	bl	40f8 <av_log@plt>
   12b04:	mvn	r4, #21
   12b08:	b	12a00 <main@@Base+0xddd4>
   12b0c:	bl	3f00 <__stack_chk_fail@plt>
   12b10:			; <UNDEFINED> instruction: 0x0001f2b0
   12b14:	andeq	r0, r0, r8, ror #7
   12b18:	andeq	fp, r0, r8, lsr #28
   12b1c:	andeq	fp, r0, r8, lsr #28
   12b20:	andeq	fp, r0, r4, ror #27
   12b24:	andeq	fp, r0, r0, lsr #27
   12b28:	andeq	fp, r0, r4, lsr lr
   12b2c:	andeq	fp, r0, r8, lsl #25
   12b30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b34:	ldr	r3, [pc, #528]	; 12d4c <main@@Base+0xe120>
   12b38:	ldr	r0, [pc, #528]	; 12d50 <main@@Base+0xe124>
   12b3c:	add	r3, pc, r3
   12b40:	ldr	r3, [r3, r0]
   12b44:	sub	sp, sp, #36	; 0x24
   12b48:	ldr	r0, [pc, #516]	; 12d54 <main@@Base+0xe128>
   12b4c:	str	r3, [sp, #8]
   12b50:	ldr	r3, [r3]
   12b54:	mov	r9, r1
   12b58:	add	r0, pc, r0
   12b5c:	mov	r1, r2
   12b60:	mov	r4, r2
   12b64:	str	r3, [sp, #28]
   12b68:	bl	3f90 <av_asprintf@plt>
   12b6c:	subs	r6, r0, #0
   12b70:	beq	12d40 <main@@Base+0xe114>
   12b74:	ldr	r2, [pc, #476]	; 12d58 <main@@Base+0xe12c>
   12b78:	str	r4, [sp]
   12b7c:	mov	r3, r9
   12b80:	add	r2, pc, r2
   12b84:	mov	r1, #24
   12b88:	mov	r0, #0
   12b8c:	bl	40f8 <av_log@plt>
   12b90:	str	r6, [sp, #20]
   12b94:	ldrb	r7, [r6]
   12b98:	cmp	r7, #0
   12b9c:	beq	12c2c <main@@Base+0xe000>
   12ba0:	ldr	r3, [pc, #436]	; 12d5c <main@@Base+0xe130>
   12ba4:	ldr	fp, [pc, #436]	; 12d60 <main@@Base+0xe134>
   12ba8:	add	r3, pc, r3
   12bac:	add	fp, pc, fp
   12bb0:	str	r3, [sp, #12]
   12bb4:	add	r8, sp, #20
   12bb8:	mov	r3, #0
   12bbc:	ldr	r1, [pc, #416]	; 12d64 <main@@Base+0xe138>
   12bc0:	mov	r0, r8
   12bc4:	add	r1, pc, r1
   12bc8:	str	r3, [sp, #24]
   12bcc:	bl	41a0 <av_get_token@plt>
   12bd0:	subs	r4, r0, #0
   12bd4:	beq	12d24 <main@@Base+0xe0f8>
   12bd8:	ldr	r3, [sp, #20]
   12bdc:	ldrb	r2, [r3]
   12be0:	cmp	r2, #61	; 0x3d
   12be4:	movne	r1, #1
   12be8:	addne	r5, sp, #24
   12bec:	beq	12c98 <main@@Base+0xe06c>
   12bf0:	ldr	r2, [sp, #24]
   12bf4:	mov	r0, r4
   12bf8:	bl	127d0 <main@@Base+0xdba4>
   12bfc:	subs	r7, r0, #0
   12c00:	beq	12c6c <main@@Base+0xe040>
   12c04:	mov	r0, r5
   12c08:	bl	3ee8 <av_dict_free@plt>
   12c0c:	mov	r0, r4
   12c10:	bl	46ec <av_free@plt>
   12c14:	cmp	r7, #0
   12c18:	ble	12c2c <main@@Base+0xe000>
   12c1c:	ldr	r3, [sp, #20]
   12c20:	ldrb	r2, [r3]
   12c24:	cmp	r2, #0
   12c28:	bne	12c54 <main@@Base+0xe028>
   12c2c:	mov	r0, r6
   12c30:	bl	46ec <av_free@plt>
   12c34:	ldr	r3, [sp, #8]
   12c38:	ldr	r2, [sp, #28]
   12c3c:	ldr	r3, [r3]
   12c40:	mov	r0, r7
   12c44:	cmp	r2, r3
   12c48:	bne	12d48 <main@@Base+0xe11c>
   12c4c:	add	sp, sp, #36	; 0x24
   12c50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c54:	add	r2, r3, #1
   12c58:	str	r2, [sp, #20]
   12c5c:	ldrb	r3, [r3, #1]
   12c60:	cmp	r3, #0
   12c64:	bne	12bb8 <main@@Base+0xdf8c>
   12c68:	b	12c2c <main@@Base+0xe000>
   12c6c:	ldr	r2, [pc, #244]	; 12d68 <main@@Base+0xe13c>
   12c70:	mov	r3, r4
   12c74:	add	r2, pc, r2
   12c78:	mov	r1, #16
   12c7c:	bl	40f8 <av_log@plt>
   12c80:	mov	r0, r5
   12c84:	bl	3ee8 <av_dict_free@plt>
   12c88:	mov	r0, r4
   12c8c:	bl	46ec <av_free@plt>
   12c90:	mvn	r7, #21
   12c94:	b	12c2c <main@@Base+0xe000>
   12c98:	ldr	sl, [pc, #204]	; 12d6c <main@@Base+0xe140>
   12c9c:	add	r3, r3, #1
   12ca0:	str	r3, [sp, #20]
   12ca4:	add	r5, sp, #24
   12ca8:	add	sl, pc, sl
   12cac:	ldrb	r2, [r3]
   12cb0:	b	12d04 <main@@Base+0xe0d8>
   12cb4:	mov	r1, fp
   12cb8:	mov	r0, r8
   12cbc:	bl	41a0 <av_get_token@plt>
   12cc0:	subs	r7, r0, #0
   12cc4:	beq	12d10 <main@@Base+0xe0e4>
   12cc8:	mov	r3, r7
   12ccc:	ldr	r2, [sp, #12]
   12cd0:	mov	r1, #40	; 0x28
   12cd4:	mov	r0, #0
   12cd8:	str	r4, [sp]
   12cdc:	bl	40f8 <av_log@plt>
   12ce0:	mov	r3, #4
   12ce4:	mov	r2, sl
   12ce8:	mov	r1, r7
   12cec:	mov	r0, r5
   12cf0:	bl	453c <av_dict_set@plt>
   12cf4:	ldr	r3, [sp, #20]
   12cf8:	ldrb	r2, [r3]
   12cfc:	cmp	r2, #44	; 0x2c
   12d00:	beq	12d18 <main@@Base+0xe0ec>
   12d04:	cmp	r2, #0
   12d08:	cmpne	r2, #58	; 0x3a
   12d0c:	bne	12cb4 <main@@Base+0xe088>
   12d10:	mov	r1, #0
   12d14:	b	12bf0 <main@@Base+0xdfc4>
   12d18:	add	r3, r3, #1
   12d1c:	str	r3, [sp, #20]
   12d20:	b	12cac <main@@Base+0xe080>
   12d24:	ldr	r2, [pc, #68]	; 12d70 <main@@Base+0xe144>
   12d28:	mov	r3, r9
   12d2c:	add	r2, pc, r2
   12d30:	mov	r1, #16
   12d34:	bl	40f8 <av_log@plt>
   12d38:	mvn	r7, #21
   12d3c:	b	12c2c <main@@Base+0xe000>
   12d40:	mvn	r7, #11
   12d44:	b	12c34 <main@@Base+0xe008>
   12d48:	bl	3f00 <__stack_chk_fail@plt>
   12d4c:	andeq	pc, r1, r0, asr #1
   12d50:	andeq	r0, r0, r8, ror #7
   12d54:	andeq	fp, r0, r4, lsr #25
   12d58:	andeq	fp, r0, r8, lsl #25
   12d5c:	andeq	fp, r0, r4, lsl #24
   12d60:	strdeq	fp, [r0], -ip
   12d64:			; <UNDEFINED> instruction: 0x0000bbb8
   12d68:	andeq	fp, r0, ip, ror #22
   12d6c:	andeq	fp, r0, r0, lsl #24
   12d70:	andeq	fp, r0, r4, asr sl
   12d74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d78:	mov	r9, r2
   12d7c:	ldr	r3, [pc, #572]	; 12fc0 <main@@Base+0xe394>
   12d80:	ldr	ip, [pc, #572]	; 12fc4 <main@@Base+0xe398>
   12d84:	add	r3, pc, r3
   12d88:	sub	sp, sp, #2096	; 0x830
   12d8c:	ldr	r3, [r3, ip]
   12d90:	sub	sp, sp, #12
   12d94:	add	r2, sp, #52	; 0x34
   12d98:	str	r3, [sp, #36]	; 0x24
   12d9c:	ldr	r3, [r3]
   12da0:	str	r2, [sp, #12]
   12da4:	str	r0, [sp, #20]
   12da8:	str	r1, [sp, #32]
   12dac:	mov	r0, r2
   12db0:	mov	r1, #0
   12db4:	mvn	r2, #0
   12db8:	str	r3, [sp, #2100]	; 0x834
   12dbc:	bl	3f48 <av_bprint_init@plt>
   12dc0:	mov	r0, r9
   12dc4:	bl	4110 <strlen@plt>
   12dc8:	ldrb	r3, [r9]
   12dcc:	add	r2, r9, r0
   12dd0:	cmp	r3, #0
   12dd4:	str	r2, [sp, #8]
   12dd8:	str	r9, [sp, #44]	; 0x2c
   12ddc:	beq	12f38 <main@@Base+0xe30c>
   12de0:	mov	r3, #0
   12de4:	str	r3, [sp, #16]
   12de8:	ldr	r3, [pc, #472]	; 12fc8 <main@@Base+0xe39c>
   12dec:	add	r6, sp, #1072	; 0x430
   12df0:	add	r3, pc, r3
   12df4:	str	r3, [sp, #28]
   12df8:	ldr	r3, [sp, #20]
   12dfc:	mov	r4, r9
   12e00:	add	r7, r3, #8192	; 0x2000
   12e04:	add	sl, sp, #44	; 0x2c
   12e08:	add	fp, sp, #48	; 0x30
   12e0c:	add	r6, r6, #4
   12e10:	str	r9, [sp, #24]
   12e14:	b	12e3c <main@@Base+0xe210>
   12e18:	ldr	r2, [sp, #44]	; 0x2c
   12e1c:	mov	r1, r4
   12e20:	sub	r2, r2, r4
   12e24:	ldr	r0, [sp, #12]
   12e28:	bl	432c <av_bprint_append_data@plt>
   12e2c:	ldr	r4, [sp, #44]	; 0x2c
   12e30:	ldrb	ip, [r4]
   12e34:	cmp	ip, #0
   12e38:	beq	12f1c <main@@Base+0xe2f0>
   12e3c:	ldr	r3, [r7, #2176]	; 0x880
   12e40:	ldr	r2, [sp, #8]
   12e44:	mov	r1, sl
   12e48:	mov	r0, fp
   12e4c:	bl	44d0 <av_utf8_decode@plt>
   12e50:	cmp	r0, #0
   12e54:	bge	12e18 <main@@Base+0xe1ec>
   12e58:	mov	r2, #1
   12e5c:	mov	r1, #0
   12e60:	mov	r0, r6
   12e64:	bl	3f48 <av_bprint_init@plt>
   12e68:	ldr	r5, [sp, #44]	; 0x2c
   12e6c:	ldr	r1, [sp, #28]
   12e70:	sub	r5, r5, r4
   12e74:	mov	r0, r6
   12e78:	bl	459c <av_bprintf@plt>
   12e7c:	cmp	r5, #0
   12e80:	beq	12eac <main@@Base+0xe280>
   12e84:	ldr	r8, [pc, #320]	; 12fcc <main@@Base+0xe3a0>
   12e88:	sub	r9, r4, #1
   12e8c:	add	r8, pc, r8
   12e90:	add	r5, r9, r5
   12e94:	ldrb	r2, [r9, #1]!
   12e98:	mov	r1, r8
   12e9c:	mov	r0, r6
   12ea0:	bl	459c <av_bprintf@plt>
   12ea4:	cmp	r5, r9
   12ea8:	bne	12e94 <main@@Base+0xe268>
   12eac:	ldr	r3, [sp, #24]
   12eb0:	ldr	r2, [pc, #280]	; 12fd0 <main@@Base+0xe3a4>
   12eb4:	str	r3, [sp]
   12eb8:	add	r2, pc, r2
   12ebc:	ldr	r3, [sp, #1076]	; 0x434
   12ec0:	mov	r1, #48	; 0x30
   12ec4:	ldr	r0, [sp, #20]
   12ec8:	bl	40f8 <av_log@plt>
   12ecc:	ldr	r2, [sp, #16]
   12ed0:	ldr	r3, [r7, #2168]	; 0x878
   12ed4:	add	r2, r2, #1
   12ed8:	cmp	r3, #0
   12edc:	str	r2, [sp, #16]
   12ee0:	beq	12f40 <main@@Base+0xe314>
   12ee4:	cmp	r3, #1
   12ee8:	bne	12f04 <main@@Base+0xe2d8>
   12eec:	ldr	r1, [pc, #224]	; 12fd4 <main@@Base+0xe3a8>
   12ef0:	ldr	r2, [r7, #2172]	; 0x87c
   12ef4:	add	r1, pc, r1
   12ef8:	ldr	r0, [sp, #12]
   12efc:	bl	459c <av_bprintf@plt>
   12f00:	ldr	r3, [r7, #2168]	; 0x878
   12f04:	cmp	r3, #2
   12f08:	beq	12e18 <main@@Base+0xe1ec>
   12f0c:	ldr	r4, [sp, #44]	; 0x2c
   12f10:	ldrb	ip, [r4]
   12f14:	cmp	ip, #0
   12f18:	bne	12e3c <main@@Base+0xe210>
   12f1c:	ldr	r3, [sp, #16]
   12f20:	ldr	r9, [sp, #24]
   12f24:	cmp	r3, #0
   12f28:	beq	12f38 <main@@Base+0xe30c>
   12f2c:	ldr	r3, [r7, #2168]	; 0x878
   12f30:	cmp	r3, #1
   12f34:	beq	12f90 <main@@Base+0xe364>
   12f38:	mov	r4, #0
   12f3c:	b	12f60 <main@@Base+0xe334>
   12f40:	ldr	r9, [sp, #24]
   12f44:	ldr	r2, [pc, #140]	; 12fd8 <main@@Base+0xe3ac>
   12f48:	mov	r3, r9
   12f4c:	ldr	r0, [sp, #20]
   12f50:	add	r2, pc, r2
   12f54:	mov	r1, #16
   12f58:	bl	40f8 <av_log@plt>
   12f5c:	ldr	r4, [pc, #120]	; 12fdc <main@@Base+0xe3b0>
   12f60:	ldr	r1, [sp, #32]
   12f64:	ldr	r0, [sp, #12]
   12f68:	bl	4308 <av_bprint_finalize@plt>
   12f6c:	ldr	r3, [sp, #36]	; 0x24
   12f70:	ldr	r2, [sp, #2100]	; 0x834
   12f74:	ldr	r3, [r3]
   12f78:	mov	r0, r4
   12f7c:	cmp	r2, r3
   12f80:	bne	12fbc <main@@Base+0xe390>
   12f84:	add	sp, sp, #2096	; 0x830
   12f88:	add	sp, sp, #12
   12f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f90:	ldr	r3, [r7, #2172]	; 0x87c
   12f94:	ldr	r2, [pc, #68]	; 12fe0 <main@@Base+0xe3b4>
   12f98:	str	r3, [sp, #4]
   12f9c:	str	r9, [sp]
   12fa0:	ldr	r3, [sp, #16]
   12fa4:	ldr	r0, [sp, #20]
   12fa8:	add	r2, pc, r2
   12fac:	mov	r1, #24
   12fb0:	mov	r4, ip
   12fb4:	bl	40f8 <av_log@plt>
   12fb8:	b	12f60 <main@@Base+0xe334>
   12fbc:	bl	3f00 <__stack_chk_fail@plt>
   12fc0:	andeq	lr, r1, r8, ror lr
   12fc4:	andeq	r0, r0, r8, ror #7
   12fc8:	strdeq	fp, [r0], -r4
   12fcc:	andeq	fp, r0, ip, asr r8
   12fd0:	muleq	r0, r4, r9
   12fd4:	andeq	fp, r0, r4, asr #14
   12fd8:	andeq	fp, r0, ip, lsr #18
   12fdc:	mrclt	1, 5, fp, cr11, cr7, {5}
   12fe0:	andeq	fp, r0, r4, lsl #18
   12fe4:	push	{r4, r5, r6, r7, lr}
   12fe8:	mov	r4, r0
   12fec:	ldr	ip, [r0, #24]
   12ff0:	ldr	r0, [pc, #148]	; 1308c <main@@Base+0xe460>
   12ff4:	ldr	r3, [pc, #148]	; 13090 <main@@Base+0xe464>
   12ff8:	add	ip, r4, ip, lsl #2
   12ffc:	add	r0, pc, r0
   13000:	ldr	ip, [ip, #68]	; 0x44
   13004:	ldr	r5, [r0, r3]
   13008:	ldr	r3, [ip, #68]	; 0x44
   1300c:	ldr	lr, [r5]
   13010:	sub	sp, sp, #12
   13014:	cmp	r3, #0
   13018:	mov	r7, r2
   1301c:	str	lr, [sp, #4]
   13020:	mov	r6, r1
   13024:	beq	13070 <main@@Base+0xe444>
   13028:	ldr	r3, [r4, #4]
   1302c:	mov	r0, r4
   13030:	ldr	r3, [r3, #36]	; 0x24
   13034:	mov	r2, r7
   13038:	mov	r1, r6
   1303c:	blx	r3
   13040:	ldr	r3, [r4, #24]
   13044:	add	r4, r4, r3, lsl #2
   13048:	ldr	r3, [r4, #28]
   1304c:	add	r3, r3, #1
   13050:	str	r3, [r4, #28]
   13054:	ldr	r2, [sp, #4]
   13058:	ldr	r3, [r5]
   1305c:	mov	r0, #0
   13060:	cmp	r2, r3
   13064:	bne	13088 <main@@Base+0xe45c>
   13068:	add	sp, sp, #12
   1306c:	pop	{r4, r5, r6, r7, pc}
   13070:	ldr	r0, [ip, #64]	; 0x40
   13074:	mov	r2, r3
   13078:	bl	4644 <av_dict_get@plt>
   1307c:	cmp	r0, #0
   13080:	bne	13028 <main@@Base+0xe3fc>
   13084:	b	13054 <main@@Base+0xe428>
   13088:	bl	3f00 <__stack_chk_fail@plt>
   1308c:	andeq	lr, r1, r0, lsl #24
   13090:	andeq	r0, r0, r8, ror #7
   13094:	push	{r4, r5, r6, lr}
   13098:	mov	r5, r0
   1309c:	ldr	r3, [pc, #232]	; 1318c <main@@Base+0xe560>
   130a0:	ldr	r2, [pc, #232]	; 13190 <main@@Base+0xe564>
   130a4:	add	r3, pc, r3
   130a8:	ldr	r6, [r3, r2]
   130ac:	sub	sp, sp, #1024	; 0x400
   130b0:	sub	sp, sp, #8
   130b4:	add	r4, sp, #4
   130b8:	ldr	r3, [r6]
   130bc:	mvn	r2, #0
   130c0:	mov	r0, r4
   130c4:	mov	r1, #1
   130c8:	str	r3, [sp, #1028]	; 0x404
   130cc:	bl	3f48 <av_bprint_init@plt>
   130d0:	mov	r0, r5
   130d4:	mov	r1, #32
   130d8:	bl	1198c <main@@Base+0xcd60>
   130dc:	ldr	r2, [pc, #176]	; 13194 <main@@Base+0xe568>
   130e0:	ldr	r1, [pc, #176]	; 13198 <main@@Base+0xe56c>
   130e4:	add	r2, pc, r2
   130e8:	add	r1, pc, r1
   130ec:	mov	r0, r5
   130f0:	bl	12fe4 <main@@Base+0xe3b8>
   130f4:	mov	r0, r4
   130f8:	bl	45c0 <av_bprint_clear@plt>
   130fc:	ldr	r1, [pc, #152]	; 1319c <main@@Base+0xe570>
   13100:	ldr	r3, [pc, #152]	; 131a0 <main@@Base+0xe574>
   13104:	mov	r0, r4
   13108:	ldr	r2, [pc, #148]	; 131a4 <main@@Base+0xe578>
   1310c:	add	r1, pc, r1
   13110:	bl	459c <av_bprintf@plt>
   13114:	ldr	r1, [pc, #140]	; 131a8 <main@@Base+0xe57c>
   13118:	ldr	r2, [sp, #4]
   1311c:	add	r1, pc, r1
   13120:	mov	r0, r5
   13124:	bl	12fe4 <main@@Base+0xe3b8>
   13128:	ldr	r2, [pc, #124]	; 131ac <main@@Base+0xe580>
   1312c:	ldr	r1, [pc, #124]	; 131b0 <main@@Base+0xe584>
   13130:	add	r2, pc, r2
   13134:	add	r1, pc, r1
   13138:	mov	r0, r5
   1313c:	bl	12fe4 <main@@Base+0xe3b8>
   13140:	ldr	r2, [pc, #108]	; 131b4 <main@@Base+0xe588>
   13144:	ldr	r1, [pc, #108]	; 131b8 <main@@Base+0xe58c>
   13148:	add	r2, pc, r2
   1314c:	add	r1, pc, r1
   13150:	mov	r0, r5
   13154:	bl	12fe4 <main@@Base+0xe3b8>
   13158:	mov	r0, r5
   1315c:	bl	ef94 <main@@Base+0xa368>
   13160:	mov	r0, r4
   13164:	mov	r1, #0
   13168:	bl	4308 <av_bprint_finalize@plt>
   1316c:	ldr	r2, [sp, #1028]	; 0x404
   13170:	ldr	r3, [r6]
   13174:	cmp	r2, r3
   13178:	bne	13188 <main@@Base+0xe55c>
   1317c:	add	sp, sp, #1024	; 0x400
   13180:	add	sp, sp, #8
   13184:	pop	{r4, r5, r6, pc}
   13188:	bl	3f00 <__stack_chk_fail@plt>
   1318c:	andeq	lr, r1, r8, asr fp
   13190:	andeq	r0, r0, r8, ror #7
   13194:	andeq	fp, r0, r0, lsl r8
   13198:	muleq	r0, ip, r4
   1319c:	andeq	fp, r0, r0, lsl #16
   131a0:	andeq	r0, r0, r4, ror #15
   131a4:	ldrdeq	r0, [r0], -r7
   131a8:	andeq	fp, r0, ip, lsl r8
   131ac:	andeq	r9, r0, r0, ror #22
   131b0:	andeq	fp, r0, r0, lsl r8
   131b4:	muleq	r0, r4, ip
   131b8:	andeq	fp, r0, r8, lsl #16
   131bc:	push	{r4, r5, r6, r7, lr}
   131c0:	mov	r4, r0
   131c4:	ldr	r3, [pc, #168]	; 13274 <main@@Base+0xe648>
   131c8:	ldr	r0, [pc, #168]	; 13278 <main@@Base+0xe64c>
   131cc:	ldr	ip, [r4, #4]
   131d0:	add	r3, pc, r3
   131d4:	ldr	r5, [r3, r0]
   131d8:	ldr	lr, [ip, #40]	; 0x28
   131dc:	ldr	r0, [r4, #24]
   131e0:	tst	lr, #1
   131e4:	ldr	lr, [r5]
   131e8:	sub	sp, sp, #12
   131ec:	add	r0, r4, r0, lsl #2
   131f0:	mov	r6, r2
   131f4:	ldr	r2, [r0, #68]	; 0x44
   131f8:	str	lr, [sp, #4]
   131fc:	beq	13238 <main@@Base+0xe60c>
   13200:	ldr	r3, [r2, #68]	; 0x44
   13204:	mov	r7, r1
   13208:	cmp	r3, #0
   1320c:	beq	13254 <main@@Base+0xe628>
   13210:	ldr	r3, [ip, #36]	; 0x24
   13214:	mov	r0, r4
   13218:	mov	r2, r6
   1321c:	mov	r1, r7
   13220:	blx	r3
   13224:	ldr	r3, [r4, #24]
   13228:	add	r4, r4, r3, lsl #2
   1322c:	ldr	r3, [r4, #28]
   13230:	add	r3, r3, #1
   13234:	str	r3, [r4, #28]
   13238:	ldr	r2, [sp, #4]
   1323c:	ldr	r3, [r5]
   13240:	mov	r0, #0
   13244:	cmp	r2, r3
   13248:	bne	13270 <main@@Base+0xe644>
   1324c:	add	sp, sp, #12
   13250:	pop	{r4, r5, r6, r7, pc}
   13254:	ldr	r0, [r2, #64]	; 0x40
   13258:	mov	r2, r3
   1325c:	bl	4644 <av_dict_get@plt>
   13260:	cmp	r0, #0
   13264:	beq	13238 <main@@Base+0xe60c>
   13268:	ldr	ip, [r4, #4]
   1326c:	b	13210 <main@@Base+0xe5e4>
   13270:	bl	3f00 <__stack_chk_fail@plt>
   13274:	andeq	lr, r1, ip, lsr #20
   13278:	andeq	r0, r0, r8, ror #7
   1327c:	mov	r1, #1
   13280:	push	{r4, r5, r6, r7, lr}
   13284:	ldr	r2, [pc, #120]	; 13304 <main@@Base+0xe6d8>
   13288:	ldr	r0, [pc, #120]	; 13308 <main@@Base+0xe6dc>
   1328c:	ldr	r3, [pc, #120]	; 1330c <main@@Base+0xe6e0>
   13290:	add	r2, pc, r2
   13294:	ldr	r6, [r2, r0]
   13298:	add	r3, pc, r3
   1329c:	ldr	r0, [r3, #2388]	; 0x954
   132a0:	ldr	ip, [r6]
   132a4:	sub	sp, sp, #12
   132a8:	cmn	r0, #1
   132ac:	str	ip, [sp, #4]
   132b0:	str	r1, [r3, #2444]	; 0x98c
   132b4:	beq	132e4 <main@@Base+0xe6b8>
   132b8:	mov	r5, r1
   132bc:	mov	r7, r3
   132c0:	add	r4, r3, #2384	; 0x950
   132c4:	add	r4, r4, #4
   132c8:	add	r3, r0, r0, lsl #3
   132cc:	add	r3, r7, r3, lsl #3
   132d0:	str	r5, [r3, #68]	; 0x44
   132d4:	bl	121bc <main@@Base+0xd590>
   132d8:	ldr	r0, [r4, #4]!
   132dc:	cmn	r0, #1
   132e0:	bne	132c8 <main@@Base+0xe69c>
   132e4:	ldr	r2, [sp, #4]
   132e8:	ldr	r3, [r6]
   132ec:	mov	r0, #0
   132f0:	cmp	r2, r3
   132f4:	bne	13300 <main@@Base+0xe6d4>
   132f8:	add	sp, sp, #12
   132fc:	pop	{r4, r5, r6, r7, pc}
   13300:	bl	3f00 <__stack_chk_fail@plt>
   13304:	andeq	lr, r1, ip, ror #18
   13308:	andeq	r0, r0, r8, ror #7
   1330c:	andeq	lr, r1, r4, asr #27
   13310:	mov	r1, #1
   13314:	push	{r4, r5, r6, r7, lr}
   13318:	ldr	r2, [pc, #116]	; 13394 <main@@Base+0xe768>
   1331c:	ldr	r0, [pc, #116]	; 13398 <main@@Base+0xe76c>
   13320:	ldr	r3, [pc, #116]	; 1339c <main@@Base+0xe770>
   13324:	add	r2, pc, r2
   13328:	ldr	r6, [r2, r0]
   1332c:	add	r3, pc, r3
   13330:	ldr	r0, [r3, #156]	; 0x9c
   13334:	ldr	ip, [r6]
   13338:	sub	sp, sp, #12
   1333c:	cmn	r0, #1
   13340:	str	ip, [sp, #4]
   13344:	str	r1, [r3, #212]	; 0xd4
   13348:	beq	13374 <main@@Base+0xe748>
   1334c:	mov	r5, r1
   13350:	mov	r7, r3
   13354:	add	r4, r3, #156	; 0x9c
   13358:	add	r3, r0, r0, lsl #3
   1335c:	add	r3, r7, r3, lsl #3
   13360:	str	r5, [r3, #68]	; 0x44
   13364:	bl	121bc <main@@Base+0xd590>
   13368:	ldr	r0, [r4, #4]!
   1336c:	cmn	r0, #1
   13370:	bne	13358 <main@@Base+0xe72c>
   13374:	ldr	r2, [sp, #4]
   13378:	ldr	r3, [r6]
   1337c:	mov	r0, #0
   13380:	cmp	r2, r3
   13384:	bne	13390 <main@@Base+0xe764>
   13388:	add	sp, sp, #12
   1338c:	pop	{r4, r5, r6, r7, pc}
   13390:	bl	3f00 <__stack_chk_fail@plt>
   13394:	ldrdeq	lr, [r1], -r8
   13398:	andeq	r0, r0, r8, ror #7
   1339c:	andeq	lr, r1, r0, lsr sp
   133a0:	mov	r1, #1
   133a4:	push	{r4, r5, r6, r7, lr}
   133a8:	ldr	r2, [pc, #120]	; 13428 <main@@Base+0xe7fc>
   133ac:	ldr	r0, [pc, #120]	; 1342c <main@@Base+0xe800>
   133b0:	ldr	r3, [pc, #120]	; 13430 <main@@Base+0xe804>
   133b4:	add	r2, pc, r2
   133b8:	ldr	r6, [r2, r0]
   133bc:	add	r3, pc, r3
   133c0:	ldr	r0, [r3, #2316]	; 0x90c
   133c4:	ldr	ip, [r6]
   133c8:	sub	sp, sp, #12
   133cc:	cmn	r0, #1
   133d0:	str	ip, [sp, #4]
   133d4:	str	r1, [r3, #2372]	; 0x944
   133d8:	beq	13408 <main@@Base+0xe7dc>
   133dc:	mov	r5, r1
   133e0:	mov	r7, r3
   133e4:	add	r4, r3, #2304	; 0x900
   133e8:	add	r4, r4, #12
   133ec:	add	r3, r0, r0, lsl #3
   133f0:	add	r3, r7, r3, lsl #3
   133f4:	str	r5, [r3, #68]	; 0x44
   133f8:	bl	121bc <main@@Base+0xd590>
   133fc:	ldr	r0, [r4, #4]!
   13400:	cmn	r0, #1
   13404:	bne	133ec <main@@Base+0xe7c0>
   13408:	ldr	r2, [sp, #4]
   1340c:	ldr	r3, [r6]
   13410:	mov	r0, #0
   13414:	cmp	r2, r3
   13418:	bne	13424 <main@@Base+0xe7f8>
   1341c:	add	sp, sp, #12
   13420:	pop	{r4, r5, r6, r7, pc}
   13424:	bl	3f00 <__stack_chk_fail@plt>
   13428:	andeq	lr, r1, r8, asr #16
   1342c:	andeq	r0, r0, r8, ror #7
   13430:	andeq	lr, r1, r0, lsr #25
   13434:	mov	r1, #1
   13438:	push	{r4, r5, r6, r7, lr}
   1343c:	ldr	r2, [pc, #120]	; 134bc <main@@Base+0xe890>
   13440:	ldr	r0, [pc, #120]	; 134c0 <main@@Base+0xe894>
   13444:	ldr	r3, [pc, #120]	; 134c4 <main@@Base+0xe898>
   13448:	add	r2, pc, r2
   1344c:	ldr	r6, [r2, r0]
   13450:	add	r3, pc, r3
   13454:	ldr	r0, [r3, #1236]	; 0x4d4
   13458:	ldr	ip, [r6]
   1345c:	sub	sp, sp, #12
   13460:	cmn	r0, #1
   13464:	str	ip, [sp, #4]
   13468:	str	r1, [r3, #1292]	; 0x50c
   1346c:	beq	1349c <main@@Base+0xe870>
   13470:	mov	r5, r1
   13474:	mov	r7, r3
   13478:	add	r4, r3, #1232	; 0x4d0
   1347c:	add	r4, r4, #4
   13480:	add	r3, r0, r0, lsl #3
   13484:	add	r3, r7, r3, lsl #3
   13488:	str	r5, [r3, #68]	; 0x44
   1348c:	bl	121bc <main@@Base+0xd590>
   13490:	ldr	r0, [r4, #4]!
   13494:	cmn	r0, #1
   13498:	bne	13480 <main@@Base+0xe854>
   1349c:	ldr	r2, [sp, #4]
   134a0:	ldr	r3, [r6]
   134a4:	mov	r0, #0
   134a8:	cmp	r2, r3
   134ac:	bne	134b8 <main@@Base+0xe88c>
   134b0:	add	sp, sp, #12
   134b4:	pop	{r4, r5, r6, r7, pc}
   134b8:	bl	3f00 <__stack_chk_fail@plt>
   134bc:			; <UNDEFINED> instruction: 0x0001e7b4
   134c0:	andeq	r0, r0, r8, ror #7
   134c4:	andeq	lr, r1, ip, lsl #24
   134c8:	mov	r1, #1
   134cc:	push	{r4, r5, r6, r7, lr}
   134d0:	ldr	r2, [pc, #120]	; 13550 <main@@Base+0xe924>
   134d4:	ldr	r0, [pc, #120]	; 13554 <main@@Base+0xe928>
   134d8:	ldr	r3, [pc, #120]	; 13558 <main@@Base+0xe92c>
   134dc:	add	r2, pc, r2
   134e0:	ldr	r6, [r2, r0]
   134e4:	add	r3, pc, r3
   134e8:	ldr	r0, [r3, #1812]	; 0x714
   134ec:	ldr	ip, [r6]
   134f0:	sub	sp, sp, #12
   134f4:	cmn	r0, #1
   134f8:	str	ip, [sp, #4]
   134fc:	str	r1, [r3, #1868]	; 0x74c
   13500:	beq	13530 <main@@Base+0xe904>
   13504:	mov	r5, r1
   13508:	mov	r7, r3
   1350c:	add	r4, r3, #1808	; 0x710
   13510:	add	r4, r4, #4
   13514:	add	r3, r0, r0, lsl #3
   13518:	add	r3, r7, r3, lsl #3
   1351c:	str	r5, [r3, #68]	; 0x44
   13520:	bl	121bc <main@@Base+0xd590>
   13524:	ldr	r0, [r4, #4]!
   13528:	cmn	r0, #1
   1352c:	bne	13514 <main@@Base+0xe8e8>
   13530:	ldr	r2, [sp, #4]
   13534:	ldr	r3, [r6]
   13538:	mov	r0, #0
   1353c:	cmp	r2, r3
   13540:	bne	1354c <main@@Base+0xe920>
   13544:	add	sp, sp, #12
   13548:	pop	{r4, r5, r6, r7, pc}
   1354c:	bl	3f00 <__stack_chk_fail@plt>
   13550:	andeq	lr, r1, r0, lsr #14
   13554:	andeq	r0, r0, r8, ror #7
   13558:	andeq	lr, r1, r8, ror fp
   1355c:	mov	r1, #1
   13560:	push	{r4, r5, r6, r7, lr}
   13564:	ldr	r2, [pc, #116]	; 135e0 <main@@Base+0xe9b4>
   13568:	ldr	r0, [pc, #116]	; 135e4 <main@@Base+0xe9b8>
   1356c:	ldr	r3, [pc, #116]	; 135e8 <main@@Base+0xe9bc>
   13570:	add	r2, pc, r2
   13574:	ldr	r6, [r2, r0]
   13578:	add	r3, pc, r3
   1357c:	ldr	r0, [r3, #228]	; 0xe4
   13580:	ldr	ip, [r6]
   13584:	sub	sp, sp, #12
   13588:	cmn	r0, #1
   1358c:	str	ip, [sp, #4]
   13590:	str	r1, [r3, #284]	; 0x11c
   13594:	beq	135c0 <main@@Base+0xe994>
   13598:	mov	r5, r1
   1359c:	mov	r7, r3
   135a0:	add	r4, r3, #228	; 0xe4
   135a4:	add	r3, r0, r0, lsl #3
   135a8:	add	r3, r7, r3, lsl #3
   135ac:	str	r5, [r3, #68]	; 0x44
   135b0:	bl	121bc <main@@Base+0xd590>
   135b4:	ldr	r0, [r4, #4]!
   135b8:	cmn	r0, #1
   135bc:	bne	135a4 <main@@Base+0xe978>
   135c0:	ldr	r2, [sp, #4]
   135c4:	ldr	r3, [r6]
   135c8:	mov	r0, #0
   135cc:	cmp	r2, r3
   135d0:	bne	135dc <main@@Base+0xe9b0>
   135d4:	add	sp, sp, #12
   135d8:	pop	{r4, r5, r6, r7, pc}
   135dc:	bl	3f00 <__stack_chk_fail@plt>
   135e0:	andeq	lr, r1, ip, lsl #13
   135e4:	andeq	r0, r0, r8, ror #7
   135e8:	andeq	lr, r1, r4, ror #21
   135ec:	mov	r1, #1
   135f0:	push	{r4, r5, r6, r7, lr}
   135f4:	ldr	r2, [pc, #116]	; 13670 <main@@Base+0xea44>
   135f8:	ldr	r0, [pc, #116]	; 13674 <main@@Base+0xea48>
   135fc:	ldr	r3, [pc, #116]	; 13678 <main@@Base+0xea4c>
   13600:	add	r2, pc, r2
   13604:	ldr	r6, [r2, r0]
   13608:	add	r3, pc, r3
   1360c:	ldr	r0, [r3, #300]	; 0x12c
   13610:	ldr	ip, [r6]
   13614:	sub	sp, sp, #12
   13618:	cmn	r0, #1
   1361c:	str	ip, [sp, #4]
   13620:	str	r1, [r3, #356]	; 0x164
   13624:	beq	13650 <main@@Base+0xea24>
   13628:	mov	r5, r1
   1362c:	mov	r7, r3
   13630:	add	r4, r3, #300	; 0x12c
   13634:	add	r3, r0, r0, lsl #3
   13638:	add	r3, r7, r3, lsl #3
   1363c:	str	r5, [r3, #68]	; 0x44
   13640:	bl	121bc <main@@Base+0xd590>
   13644:	ldr	r0, [r4, #4]!
   13648:	cmn	r0, #1
   1364c:	bne	13634 <main@@Base+0xea08>
   13650:	ldr	r2, [sp, #4]
   13654:	ldr	r3, [r6]
   13658:	mov	r0, #0
   1365c:	cmp	r2, r3
   13660:	bne	1366c <main@@Base+0xea40>
   13664:	add	sp, sp, #12
   13668:	pop	{r4, r5, r6, r7, pc}
   1366c:	bl	3f00 <__stack_chk_fail@plt>
   13670:	strdeq	lr, [r1], -ip
   13674:	andeq	r0, r0, r8, ror #7
   13678:	andeq	lr, r1, r4, asr sl
   1367c:	mov	r1, #1
   13680:	push	{r4, r5, r6, r7, lr}
   13684:	ldr	r2, [pc, #116]	; 13700 <main@@Base+0xead4>
   13688:	ldr	r0, [pc, #116]	; 13704 <main@@Base+0xead8>
   1368c:	ldr	r3, [pc, #116]	; 13708 <main@@Base+0xeadc>
   13690:	add	r2, pc, r2
   13694:	ldr	r6, [r2, r0]
   13698:	add	r3, pc, r3
   1369c:	ldr	r0, [r3, #516]	; 0x204
   136a0:	ldr	ip, [r6]
   136a4:	sub	sp, sp, #12
   136a8:	cmn	r0, #1
   136ac:	str	ip, [sp, #4]
   136b0:	str	r1, [r3, #572]	; 0x23c
   136b4:	beq	136e0 <main@@Base+0xeab4>
   136b8:	mov	r5, r1
   136bc:	mov	r7, r3
   136c0:	add	r4, r3, #516	; 0x204
   136c4:	add	r3, r0, r0, lsl #3
   136c8:	add	r3, r7, r3, lsl #3
   136cc:	str	r5, [r3, #68]	; 0x44
   136d0:	bl	121bc <main@@Base+0xd590>
   136d4:	ldr	r0, [r4, #4]!
   136d8:	cmn	r0, #1
   136dc:	bne	136c4 <main@@Base+0xea98>
   136e0:	ldr	r2, [sp, #4]
   136e4:	ldr	r3, [r6]
   136e8:	mov	r0, #0
   136ec:	cmp	r2, r3
   136f0:	bne	136fc <main@@Base+0xead0>
   136f4:	add	sp, sp, #12
   136f8:	pop	{r4, r5, r6, r7, pc}
   136fc:	bl	3f00 <__stack_chk_fail@plt>
   13700:	andeq	lr, r1, ip, ror #10
   13704:	andeq	r0, r0, r8, ror #7
   13708:	andeq	lr, r1, r4, asr #19
   1370c:	mov	r1, #1
   13710:	push	{r4, r5, r6, r7, lr}
   13714:	ldr	r2, [pc, #116]	; 13790 <main@@Base+0xeb64>
   13718:	ldr	r0, [pc, #116]	; 13794 <main@@Base+0xeb68>
   1371c:	ldr	r3, [pc, #116]	; 13798 <main@@Base+0xeb6c>
   13720:	add	r2, pc, r2
   13724:	ldr	r6, [r2, r0]
   13728:	add	r3, pc, r3
   1372c:	ldr	r0, [r3, #1020]	; 0x3fc
   13730:	ldr	ip, [r6]
   13734:	sub	sp, sp, #12
   13738:	cmn	r0, #1
   1373c:	str	ip, [sp, #4]
   13740:	str	r1, [r3, #1076]	; 0x434
   13744:	beq	13770 <main@@Base+0xeb44>
   13748:	mov	r5, r1
   1374c:	mov	r7, r3
   13750:	add	r4, r3, #1020	; 0x3fc
   13754:	add	r3, r0, r0, lsl #3
   13758:	add	r3, r7, r3, lsl #3
   1375c:	str	r5, [r3, #68]	; 0x44
   13760:	bl	121bc <main@@Base+0xd590>
   13764:	ldr	r0, [r4, #4]!
   13768:	cmn	r0, #1
   1376c:	bne	13754 <main@@Base+0xeb28>
   13770:	ldr	r2, [sp, #4]
   13774:	ldr	r3, [r6]
   13778:	mov	r0, #0
   1377c:	cmp	r2, r3
   13780:	bne	1378c <main@@Base+0xeb60>
   13784:	add	sp, sp, #12
   13788:	pop	{r4, r5, r6, r7, pc}
   1378c:	bl	3f00 <__stack_chk_fail@plt>
   13790:	ldrdeq	lr, [r1], -ip
   13794:	andeq	r0, r0, r8, ror #7
   13798:	andeq	lr, r1, r4, lsr r9
   1379c:	mov	r1, #1
   137a0:	push	{r4, r5, r6, r7, lr}
   137a4:	ldr	r2, [pc, #120]	; 13824 <main@@Base+0xebf8>
   137a8:	ldr	r0, [pc, #120]	; 13828 <main@@Base+0xebfc>
   137ac:	ldr	r3, [pc, #120]	; 1382c <main@@Base+0xec00>
   137b0:	add	r2, pc, r2
   137b4:	ldr	r6, [r2, r0]
   137b8:	add	r3, pc, r3
   137bc:	ldr	r0, [r3, #2676]	; 0xa74
   137c0:	ldr	ip, [r6]
   137c4:	sub	sp, sp, #12
   137c8:	cmn	r0, #1
   137cc:	str	ip, [sp, #4]
   137d0:	str	r1, [r3, #2732]	; 0xaac
   137d4:	beq	13804 <main@@Base+0xebd8>
   137d8:	mov	r5, r1
   137dc:	mov	r7, r3
   137e0:	add	r4, r3, #2672	; 0xa70
   137e4:	add	r4, r4, #4
   137e8:	add	r3, r0, r0, lsl #3
   137ec:	add	r3, r7, r3, lsl #3
   137f0:	str	r5, [r3, #68]	; 0x44
   137f4:	bl	121bc <main@@Base+0xd590>
   137f8:	ldr	r0, [r4, #4]!
   137fc:	cmn	r0, #1
   13800:	bne	137e8 <main@@Base+0xebbc>
   13804:	ldr	r2, [sp, #4]
   13808:	ldr	r3, [r6]
   1380c:	mov	r0, #0
   13810:	cmp	r2, r3
   13814:	bne	13820 <main@@Base+0xebf4>
   13818:	add	sp, sp, #12
   1381c:	pop	{r4, r5, r6, r7, pc}
   13820:	bl	3f00 <__stack_chk_fail@plt>
   13824:	andeq	lr, r1, ip, asr #8
   13828:	andeq	r0, r0, r8, ror #7
   1382c:	andeq	lr, r1, r4, lsr #17
   13830:	mov	r1, #1
   13834:	push	{r4, r5, r6, r7, lr}
   13838:	ldr	r2, [pc, #188]	; 138fc <main@@Base+0xecd0>
   1383c:	ldr	r0, [pc, #188]	; 13900 <main@@Base+0xecd4>
   13840:	ldr	r3, [pc, #188]	; 13904 <main@@Base+0xecd8>
   13844:	add	r2, pc, r2
   13848:	ldr	r5, [r2, r0]
   1384c:	add	r3, pc, r3
   13850:	ldr	r0, [r3, #2316]	; 0x90c
   13854:	ldr	ip, [r5]
   13858:	sub	sp, sp, #12
   1385c:	cmn	r0, #1
   13860:	str	ip, [sp, #4]
   13864:	str	r1, [r3, #2372]	; 0x944
   13868:	beq	13898 <main@@Base+0xec6c>
   1386c:	mov	r6, r1
   13870:	mov	r7, r3
   13874:	add	r4, r3, #2304	; 0x900
   13878:	add	r4, r4, #12
   1387c:	add	r3, r0, r0, lsl #3
   13880:	add	r3, r7, r3, lsl #3
   13884:	str	r6, [r3, #68]	; 0x44
   13888:	bl	121bc <main@@Base+0xd590>
   1388c:	ldr	r0, [r4, #4]!
   13890:	cmn	r0, #1
   13894:	bne	1387c <main@@Base+0xec50>
   13898:	mov	r2, #1
   1389c:	ldr	r3, [pc, #100]	; 13908 <main@@Base+0xecdc>
   138a0:	add	r3, pc, r3
   138a4:	ldr	r0, [r3, #948]	; 0x3b4
   138a8:	str	r2, [r3, #1004]	; 0x3ec
   138ac:	cmn	r0, #1
   138b0:	beq	138dc <main@@Base+0xecb0>
   138b4:	mov	r6, r2
   138b8:	mov	r7, r3
   138bc:	add	r4, r3, #948	; 0x3b4
   138c0:	add	r3, r0, r0, lsl #3
   138c4:	add	r3, r7, r3, lsl #3
   138c8:	str	r6, [r3, #68]	; 0x44
   138cc:	bl	121bc <main@@Base+0xd590>
   138d0:	ldr	r0, [r4, #4]!
   138d4:	cmn	r0, #1
   138d8:	bne	138c0 <main@@Base+0xec94>
   138dc:	ldr	r2, [sp, #4]
   138e0:	ldr	r3, [r5]
   138e4:	mov	r0, #0
   138e8:	cmp	r2, r3
   138ec:	bne	138f8 <main@@Base+0xeccc>
   138f0:	add	sp, sp, #12
   138f4:	pop	{r4, r5, r6, r7, pc}
   138f8:	bl	3f00 <__stack_chk_fail@plt>
   138fc:			; <UNDEFINED> instruction: 0x0001e3b8
   13900:	andeq	r0, r0, r8, ror #7
   13904:	andeq	lr, r1, r0, lsl r8
   13908:			; <UNDEFINED> instruction: 0x0001e7bc
   1390c:	push	{r4, r5, r6, r7, r8, lr}
   13910:	mov	r4, r0
   13914:	ldr	ip, [pc, #572]	; 13b58 <main@@Base+0xef2c>
   13918:	ldr	r2, [pc, #572]	; 13b5c <main@@Base+0xef30>
   1391c:	add	ip, pc, ip
   13920:	ldr	r6, [ip, r2]
   13924:	ldr	r2, [pc, #564]	; 13b60 <main@@Base+0xef34>
   13928:	ldr	lr, [r6]
   1392c:	sub	sp, sp, #88	; 0x58
   13930:	ldr	r3, [r0]
   13934:	add	r2, pc, r2
   13938:	mov	r0, #0
   1393c:	str	lr, [sp, #84]	; 0x54
   13940:	mov	r5, r1
   13944:	bl	40f8 <av_log@plt>
   13948:	ldr	r0, [r4, #24]
   1394c:	cmp	r0, #0
   13950:	beq	13aec <main@@Base+0xeec0>
   13954:	ldr	r3, [r4, #32]
   13958:	cmp	r3, #0
   1395c:	bne	13a64 <main@@Base+0xee38>
   13960:	ldr	r8, [pc, #508]	; 13b64 <main@@Base+0xef38>
   13964:	add	r8, pc, r8
   13968:	add	r7, sp, #52	; 0x34
   1396c:	mov	r1, #0
   13970:	mov	r0, r7
   13974:	mov	r2, #32
   13978:	bl	41e8 <memset@plt>
   1397c:	ldrd	r0, [r4, #8]
   13980:	cmp	r1, #-2147483648	; 0x80000000
   13984:	cmpeq	r0, #0
   13988:	beq	13b1c <main@@Base+0xeef0>
   1398c:	bl	1b8ac <vc_gpuserv_execute_code@@Base+0x718>
   13990:	vldr	d7, [pc, #440]	; 13b50 <main@@Base+0xef24>
   13994:	vmov	d6, r0, r1
   13998:	mov	r3, #32
   1399c:	vmul.f64	d7, d6, d7
   139a0:	ldr	r2, [pc, #448]	; 13b68 <main@@Base+0xef3c>
   139a4:	vstr	d7, [sp, #8]
   139a8:	add	r2, pc, r2
   139ac:	str	r2, [sp]
   139b0:	mov	r1, r3
   139b4:	mov	r2, #1
   139b8:	mov	r0, r7
   139bc:	bl	41dc <__snprintf_chk@plt>
   139c0:	ldr	r2, [pc, #420]	; 13b6c <main@@Base+0xef40>
   139c4:	mov	r0, #0
   139c8:	str	r7, [sp]
   139cc:	mov	r3, r8
   139d0:	add	r2, pc, r2
   139d4:	mov	r1, r5
   139d8:	bl	40f8 <av_log@plt>
   139dc:	ldr	r0, [r4, #28]
   139e0:	cmp	r0, #0
   139e4:	beq	13b08 <main@@Base+0xeedc>
   139e8:	ldr	r3, [r4, #36]	; 0x24
   139ec:	cmp	r3, #0
   139f0:	bne	13ae0 <main@@Base+0xeeb4>
   139f4:	ldr	r3, [pc, #372]	; 13b70 <main@@Base+0xef44>
   139f8:	add	r3, pc, r3
   139fc:	ldr	r2, [pc, #368]	; 13b74 <main@@Base+0xef48>
   13a00:	mov	r1, r5
   13a04:	add	r2, pc, r2
   13a08:	mov	r0, #0
   13a0c:	bl	40f8 <av_log@plt>
   13a10:	ldr	r1, [r4, #40]	; 0x28
   13a14:	cmp	r1, #0
   13a18:	beq	13a70 <main@@Base+0xee44>
   13a1c:	ldrd	r0, [r4, #16]
   13a20:	ldr	r2, [pc, #336]	; 13b78 <main@@Base+0xef4c>
   13a24:	strd	r0, [sp]
   13a28:	add	r2, pc, r2
   13a2c:	mov	r1, r5
   13a30:	mov	r0, #0
   13a34:	bl	40f8 <av_log@plt>
   13a38:	ldr	r2, [pc, #316]	; 13b7c <main@@Base+0xef50>
   13a3c:	mov	r1, r5
   13a40:	add	r2, pc, r2
   13a44:	mov	r0, #0
   13a48:	bl	40f8 <av_log@plt>
   13a4c:	ldr	r2, [sp, #84]	; 0x54
   13a50:	ldr	r3, [r6]
   13a54:	cmp	r2, r3
   13a58:	bne	13b4c <main@@Base+0xef20>
   13a5c:	add	sp, sp, #88	; 0x58
   13a60:	pop	{r4, r5, r6, r7, r8, pc}
   13a64:	ldr	r8, [pc, #276]	; 13b80 <main@@Base+0xef54>
   13a68:	add	r8, pc, r8
   13a6c:	b	13968 <main@@Base+0xed3c>
   13a70:	add	r7, sp, #20
   13a74:	mov	r0, r7
   13a78:	mov	r2, #32
   13a7c:	bl	41e8 <memset@plt>
   13a80:	ldrd	r0, [r4, #16]
   13a84:	cmp	r1, #-2147483648	; 0x80000000
   13a88:	cmpeq	r0, #0
   13a8c:	beq	13b34 <main@@Base+0xef08>
   13a90:	bl	1b8ac <vc_gpuserv_execute_code@@Base+0x718>
   13a94:	vldr	d7, [pc, #180]	; 13b50 <main@@Base+0xef24>
   13a98:	vmov	d6, r0, r1
   13a9c:	mov	r3, #32
   13aa0:	vmul.f64	d7, d6, d7
   13aa4:	ldr	r2, [pc, #216]	; 13b84 <main@@Base+0xef58>
   13aa8:	vstr	d7, [sp, #8]
   13aac:	add	r2, pc, r2
   13ab0:	str	r2, [sp]
   13ab4:	mov	r1, r3
   13ab8:	mov	r2, #1
   13abc:	mov	r0, r7
   13ac0:	bl	41dc <__snprintf_chk@plt>
   13ac4:	ldr	r2, [pc, #188]	; 13b88 <main@@Base+0xef5c>
   13ac8:	mov	r3, r7
   13acc:	add	r2, pc, r2
   13ad0:	mov	r1, r5
   13ad4:	mov	r0, #0
   13ad8:	bl	40f8 <av_log@plt>
   13adc:	b	13a38 <main@@Base+0xee0c>
   13ae0:	ldr	r3, [pc, #164]	; 13b8c <main@@Base+0xef60>
   13ae4:	add	r3, pc, r3
   13ae8:	b	139fc <main@@Base+0xedd0>
   13aec:	ldr	r2, [pc, #156]	; 13b90 <main@@Base+0xef64>
   13af0:	mov	r1, r5
   13af4:	add	r2, pc, r2
   13af8:	bl	40f8 <av_log@plt>
   13afc:	ldr	r0, [r4, #28]
   13b00:	cmp	r0, #0
   13b04:	bne	139e8 <main@@Base+0xedbc>
   13b08:	ldr	r2, [pc, #132]	; 13b94 <main@@Base+0xef68>
   13b0c:	mov	r1, r5
   13b10:	add	r2, pc, r2
   13b14:	bl	40f8 <av_log@plt>
   13b18:	b	13a38 <main@@Base+0xee0c>
   13b1c:	ldr	r3, [pc, #116]	; 13b98 <main@@Base+0xef6c>
   13b20:	add	r3, pc, r3
   13b24:	ldm	r3, {r0, r1}
   13b28:	str	r0, [sp, #52]	; 0x34
   13b2c:	strh	r1, [sp, #56]	; 0x38
   13b30:	b	139c0 <main@@Base+0xed94>
   13b34:	ldr	r3, [pc, #96]	; 13b9c <main@@Base+0xef70>
   13b38:	add	r3, pc, r3
   13b3c:	ldm	r3, {r0, r1}
   13b40:	str	r0, [sp, #20]
   13b44:	strh	r1, [sp, #24]
   13b48:	b	13ac4 <main@@Base+0xee98>
   13b4c:	bl	3f00 <__stack_chk_fail@plt>
   13b50:	adcsge	lr, r5, sp, lsl #27
   13b54:	mrccc	6, 5, ip, cr0, cr7, {7}
   13b58:	andeq	lr, r1, r0, ror #5
   13b5c:	andeq	r0, r0, r8, ror #7
   13b60:	andeq	fp, r0, r0, lsr r0
   13b64:	andeq	sl, r0, r4, asr #30
   13b68:	andeq	sl, r0, ip, asr #31
   13b6c:	andeq	sl, r0, ip, lsr #31
   13b70:			; <UNDEFINED> instruction: 0x0000aeb0
   13b74:	muleq	r0, r0, pc	; <UNPREDICTABLE>
   13b78:	andeq	sl, r0, r4, ror pc
   13b7c:	andeq	r9, r0, r0, asr r1
   13b80:	andeq	r9, r0, r4, ror sp
   13b84:	andeq	sl, r0, r8, asr #29
   13b88:	andeq	sl, r0, ip, ror #22
   13b8c:	strdeq	r9, [r0], -r8
   13b90:	muleq	r0, r4, lr
   13b94:	muleq	r0, r4, lr
   13b98:	andeq	sl, r0, ip, asr #28
   13b9c:	andeq	sl, r0, r4, lsr lr
   13ba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ba4:	ldr	r3, [pc, #988]	; 13f88 <main@@Base+0xf35c>
   13ba8:	ldr	r1, [pc, #988]	; 13f8c <main@@Base+0xf360>
   13bac:	add	r3, pc, r3
   13bb0:	ldr	r3, [r3, r1]
   13bb4:	sub	sp, sp, #52	; 0x34
   13bb8:	str	r3, [sp, #16]
   13bbc:	ldr	r3, [r3]
   13bc0:	mov	r0, r2
   13bc4:	str	r3, [sp, #44]	; 0x2c
   13bc8:	bl	4080 <av_strdup@plt>
   13bcc:	subs	r8, r0, #0
   13bd0:	beq	13f48 <main@@Base+0xf31c>
   13bd4:	ldrb	r3, [r8]
   13bd8:	cmp	r3, #0
   13bdc:	beq	13f34 <main@@Base+0xf308>
   13be0:	mov	r1, r8
   13be4:	mov	r2, #0
   13be8:	cmp	r3, #44	; 0x2c
   13bec:	addeq	r3, r2, #2
   13bf0:	add	r4, r2, #1
   13bf4:	moveq	r2, r4
   13bf8:	moveq	r4, r3
   13bfc:	ldrb	r3, [r1, #1]!
   13c00:	cmp	r3, #0
   13c04:	bne	13be8 <main@@Base+0xefbc>
   13c08:	mov	r0, r4
   13c0c:	mov	r1, #48	; 0x30
   13c10:	bl	4554 <av_malloc_array@plt>
   13c14:	ldr	r3, [pc, #884]	; 13f90 <main@@Base+0xf364>
   13c18:	cmp	r0, #0
   13c1c:	add	r3, pc, r3
   13c20:	str	r0, [r3, #40]	; 0x28
   13c24:	beq	13f2c <main@@Base+0xf300>
   13c28:	ldr	r2, [pc, #868]	; 13f94 <main@@Base+0xf368>
   13c2c:	mov	r9, r8
   13c30:	add	r2, pc, r2
   13c34:	str	r2, [sp, #20]
   13c38:	ldr	r2, [pc, #856]	; 13f98 <main@@Base+0xf36c>
   13c3c:	mov	r6, #0
   13c40:	add	r2, pc, r2
   13c44:	str	r2, [sp, #28]
   13c48:	ldr	r2, [pc, #844]	; 13f9c <main@@Base+0xf370>
   13c4c:	str	r4, [r3, #44]	; 0x2c
   13c50:	add	r2, pc, r2
   13c54:	str	r2, [sp, #24]
   13c58:	b	13cf0 <main@@Base+0xf0c4>
   13c5c:	mov	r2, #1
   13c60:	cmp	r3, #43	; 0x2b
   13c64:	str	r2, [r4, #28]
   13c68:	movne	r2, #0
   13c6c:	movne	r3, fp
   13c70:	strne	r2, [r4, #36]	; 0x24
   13c74:	beq	13e60 <main@@Base+0xf234>
   13c78:	mov	fp, #0
   13c7c:	mov	r1, r3
   13c80:	mov	r2, #1
   13c84:	str	fp, [r4, #40]	; 0x28
   13c88:	add	r0, sp, #32
   13c8c:	str	r3, [sp, #12]
   13c90:	bl	408c <av_parse_time@plt>
   13c94:	subs	r7, r0, #0
   13c98:	ldr	r3, [sp, #12]
   13c9c:	blt	13f0c <main@@Base+0xf2e0>
   13ca0:	ldrd	r2, [sp, #32]
   13ca4:	strd	r2, [r4, #16]
   13ca8:	mov	r0, r5
   13cac:	bl	46ec <av_free@plt>
   13cb0:	ldr	r4, [pc, #744]	; 13fa0 <main@@Base+0xf374>
   13cb4:	ldr	r2, [sp, #24]
   13cb8:	mov	r1, #40	; 0x28
   13cbc:	mov	r0, #0
   13cc0:	add	r4, pc, r4
   13cc4:	bl	40f8 <av_log@plt>
   13cc8:	ldr	r0, [r4, #40]	; 0x28
   13ccc:	ldr	r3, [sp, #8]
   13cd0:	mov	r1, #40	; 0x28
   13cd4:	add	r0, r0, r3
   13cd8:	bl	1390c <main@@Base+0xece0>
   13cdc:	cmp	sl, #0
   13ce0:	add	r6, r6, #1
   13ce4:	beq	13ecc <main@@Base+0xf2a0>
   13ce8:	mov	r9, sl
   13cec:	ldr	r4, [r4, #44]	; 0x2c
   13cf0:	cmp	r4, r6
   13cf4:	ble	13f50 <main@@Base+0xf324>
   13cf8:	mov	r1, #44	; 0x2c
   13cfc:	mov	r0, r9
   13d00:	bl	4494 <strchr@plt>
   13d04:	subs	sl, r0, #0
   13d08:	movne	r3, #0
   13d0c:	strbne	r3, [sl], #1
   13d10:	ldr	r3, [sp, #20]
   13d14:	mov	r0, r9
   13d18:	ldr	r4, [r3, #40]	; 0x28
   13d1c:	add	r3, r6, r6, lsl #1
   13d20:	lsl	r2, r3, #4
   13d24:	str	r6, [r4, r3, lsl #4]
   13d28:	str	r2, [sp, #8]
   13d2c:	add	r4, r4, r2
   13d30:	bl	4080 <av_strdup@plt>
   13d34:	subs	r5, r0, #0
   13d38:	beq	13f40 <main@@Base+0xf314>
   13d3c:	ldrb	r2, [r5]
   13d40:	cmp	r2, #0
   13d44:	beq	13e3c <main@@Base+0xf210>
   13d48:	mov	r1, #37	; 0x25
   13d4c:	str	r2, [sp, #12]
   13d50:	bl	4494 <strchr@plt>
   13d54:	subs	fp, r0, #0
   13d58:	ldr	r2, [sp, #12]
   13d5c:	beq	13d9c <main@@Base+0xf170>
   13d60:	mov	r3, #0
   13d64:	strb	r3, [fp], #1
   13d68:	ldrb	r2, [r5]
   13d6c:	cmp	r2, r3
   13d70:	moveq	r7, r2
   13d74:	streq	r2, [r4, #24]
   13d78:	bne	13d9c <main@@Base+0xf170>
   13d7c:	cmp	fp, #0
   13d80:	beq	13d90 <main@@Base+0xf164>
   13d84:	ldrb	r3, [fp]
   13d88:	cmp	r3, #0
   13d8c:	bne	13c5c <main@@Base+0xf030>
   13d90:	mov	r3, #0
   13d94:	str	r3, [r4, #28]
   13d98:	b	13ca8 <main@@Base+0xf07c>
   13d9c:	mov	r3, #1
   13da0:	cmp	r2, #43	; 0x2b
   13da4:	moveq	r2, r3
   13da8:	str	r3, [r4, #24]
   13dac:	movne	r2, #0
   13db0:	movne	r3, r5
   13db4:	addeq	r3, r5, r2
   13db8:	str	r2, [r4, #32]
   13dbc:	mov	r1, r3
   13dc0:	mov	r2, #1
   13dc4:	add	r0, r4, #8
   13dc8:	str	r3, [sp, #12]
   13dcc:	bl	408c <av_parse_time@plt>
   13dd0:	subs	r7, r0, #0
   13dd4:	ldr	r3, [sp, #12]
   13dd8:	bge	13d7c <main@@Base+0xf150>
   13ddc:	ldr	r2, [pc, #448]	; 13fa4 <main@@Base+0xf378>
   13de0:	mov	r0, #0
   13de4:	add	r2, pc, r2
   13de8:	mov	r1, #16
   13dec:	bl	40f8 <av_log@plt>
   13df0:	mov	r0, r5
   13df4:	bl	46ec <av_free@plt>
   13df8:	ldr	r2, [pc, #424]	; 13fa8 <main@@Base+0xf37c>
   13dfc:	str	r9, [sp]
   13e00:	mov	r3, r6
   13e04:	add	r2, pc, r2
   13e08:	mov	r1, #16
   13e0c:	mov	r0, #0
   13e10:	bl	40f8 <av_log@plt>
   13e14:	mov	r0, r8
   13e18:	bl	46ec <av_free@plt>
   13e1c:	ldr	r3, [sp, #16]
   13e20:	ldr	r2, [sp, #44]	; 0x2c
   13e24:	ldr	r3, [r3]
   13e28:	mov	r0, r7
   13e2c:	cmp	r2, r3
   13e30:	bne	13f84 <main@@Base+0xf358>
   13e34:	add	sp, sp, #52	; 0x34
   13e38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e3c:	mov	r0, r2
   13e40:	ldr	r2, [pc, #356]	; 13fac <main@@Base+0xf380>
   13e44:	mov	r1, #16
   13e48:	add	r2, pc, r2
   13e4c:	bl	40f8 <av_log@plt>
   13e50:	mov	r0, r5
   13e54:	bl	46ec <av_free@plt>
   13e58:	mvn	r7, #21
   13e5c:	b	13df8 <main@@Base+0xf1cc>
   13e60:	str	r2, [r4, #36]	; 0x24
   13e64:	ldrb	r1, [fp, #1]
   13e68:	add	r3, fp, r2
   13e6c:	cmp	r1, #35	; 0x23
   13e70:	bne	13c78 <main@@Base+0xf04c>
   13e74:	add	fp, fp, #2
   13e78:	str	r2, [r4, #40]	; 0x28
   13e7c:	mov	r0, fp
   13e80:	mov	r2, #10
   13e84:	add	r1, sp, #32
   13e88:	bl	41ac <strtoll@plt>
   13e8c:	ldr	r3, [sp, #32]
   13e90:	ldrb	r3, [r3]
   13e94:	cmp	r3, #0
   13e98:	movne	r3, #1
   13e9c:	lsreq	r3, r1, #31
   13ea0:	cmp	r3, #0
   13ea4:	strdeq	r0, [r4, #16]
   13ea8:	beq	13ca8 <main@@Base+0xf07c>
   13eac:	mov	r3, fp
   13eb0:	ldr	r2, [sp, #28]
   13eb4:	mov	r1, #16
   13eb8:	mov	r0, #0
   13ebc:	bl	40f8 <av_log@plt>
   13ec0:	mov	r0, r5
   13ec4:	bl	46ec <av_free@plt>
   13ec8:	b	13cb0 <main@@Base+0xf084>
   13ecc:	ldr	r3, [r4, #44]	; 0x2c
   13ed0:	cmp	r6, r3
   13ed4:	beq	13e14 <main@@Base+0xf1e8>
   13ed8:	ldr	r3, [pc, #208]	; 13fb0 <main@@Base+0xf384>
   13edc:	ldr	r2, [pc, #208]	; 13fb4 <main@@Base+0xf388>
   13ee0:	add	r3, pc, r3
   13ee4:	str	r2, [sp, #4]
   13ee8:	str	r3, [sp]
   13eec:	ldr	r2, [pc, #196]	; 13fb8 <main@@Base+0xf38c>
   13ef0:	ldr	r3, [pc, #196]	; 13fbc <main@@Base+0xf390>
   13ef4:	add	r2, pc, r2
   13ef8:	add	r3, pc, r3
   13efc:	mov	r1, sl
   13f00:	mov	r0, sl
   13f04:	bl	40f8 <av_log@plt>
   13f08:	bl	4278 <abort@plt>
   13f0c:	ldr	r2, [pc, #172]	; 13fc0 <main@@Base+0xf394>
   13f10:	mov	r0, fp
   13f14:	add	r2, pc, r2
   13f18:	mov	r1, #16
   13f1c:	bl	40f8 <av_log@plt>
   13f20:	mov	r0, r5
   13f24:	bl	46ec <av_free@plt>
   13f28:	b	13df8 <main@@Base+0xf1cc>
   13f2c:	mvn	r7, #11
   13f30:	b	13e14 <main@@Base+0xf1e8>
   13f34:	mov	r0, #1
   13f38:	mov	r4, r0
   13f3c:	b	13c0c <main@@Base+0xefe0>
   13f40:	mvn	r7, #11
   13f44:	b	13df8 <main@@Base+0xf1cc>
   13f48:	mvn	r7, #11
   13f4c:	b	13e1c <main@@Base+0xf1f0>
   13f50:	mov	r1, #0
   13f54:	ldr	r3, [pc, #104]	; 13fc4 <main@@Base+0xf398>
   13f58:	ldr	r2, [pc, #104]	; 13fc8 <main@@Base+0xf39c>
   13f5c:	add	r3, pc, r3
   13f60:	str	r2, [sp, #4]
   13f64:	str	r3, [sp]
   13f68:	ldr	r2, [pc, #92]	; 13fcc <main@@Base+0xf3a0>
   13f6c:	ldr	r3, [pc, #92]	; 13fd0 <main@@Base+0xf3a4>
   13f70:	mov	r0, r1
   13f74:	add	r3, pc, r3
   13f78:	add	r2, pc, r2
   13f7c:	bl	40f8 <av_log@plt>
   13f80:	bl	4278 <abort@plt>
   13f84:	bl	3f00 <__stack_chk_fail@plt>
   13f88:	andeq	lr, r1, r0, asr r0
   13f8c:	andeq	r0, r0, r8, ror #7
   13f90:	andeq	pc, r1, r0, asr r0	; <UNPREDICTABLE>
   13f94:	andeq	pc, r1, ip, lsr r0	; <UNPREDICTABLE>
   13f98:	ldrdeq	sl, [r0], -ip
   13f9c:	andeq	sl, r0, r8, ror #28
   13fa0:	andeq	lr, r1, ip, lsr #31
   13fa4:	andeq	sl, r0, ip, lsl #24
   13fa8:	andeq	sl, r0, ip, lsl #25
   13fac:	andeq	sl, r0, r0, lsl #23
   13fb0:	andeq	sl, r0, ip, lsl #14
   13fb4:	andeq	r0, r0, r2, asr sp
   13fb8:	andeq	r8, r0, r8, lsl r6
   13fbc:	ldrdeq	sl, [r0], -r8
   13fc0:	andeq	sl, r0, r8, asr #22
   13fc4:	muleq	r0, r0, r6
   13fc8:	andeq	r0, r0, r2, asr #26
   13fcc:	muleq	r0, r4, r5
   13fd0:	andeq	sl, r0, ip, lsr sl
   13fd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fd8:	mov	r7, r0
   13fdc:	ldr	r3, [pc, #444]	; 141a0 <main@@Base+0xf574>
   13fe0:	ldr	r2, [pc, #444]	; 141a4 <main@@Base+0xf578>
   13fe4:	add	r3, pc, r3
   13fe8:	ldr	r8, [r3, r2]
   13fec:	sub	sp, sp, #1024	; 0x400
   13ff0:	sub	sp, sp, #12
   13ff4:	add	r4, sp, #4
   13ff8:	ldr	r3, [r8]
   13ffc:	mov	r6, r1
   14000:	mov	r0, r4
   14004:	mvn	r2, #0
   14008:	mov	r1, #1
   1400c:	str	r3, [sp, #1028]	; 0x404
   14010:	bl	3f48 <av_bprint_init@plt>
   14014:	ldrb	r5, [r7]
   14018:	cmp	r5, #0
   1401c:	beq	14098 <main@@Base+0xf46c>
   14020:	ldr	fp, [pc, #384]	; 141a8 <main@@Base+0xf57c>
   14024:	ldr	sl, [pc, #384]	; 141ac <main@@Base+0xf580>
   14028:	add	fp, pc, fp
   1402c:	add	sl, pc, sl
   14030:	b	14060 <main@@Base+0xf434>
   14034:	mov	r2, #1
   14038:	mov	r1, #92	; 0x5c
   1403c:	mov	r0, r4
   14040:	bl	45f0 <av_bprint_chars@plt>
   14044:	ldrb	r1, [r9, #8]
   14048:	mov	r2, #1
   1404c:	mov	r0, r4
   14050:	bl	45f0 <av_bprint_chars@plt>
   14054:	ldrb	r5, [r7, #1]!
   14058:	cmp	r5, #0
   1405c:	beq	14098 <main@@Base+0xf46c>
   14060:	mov	r1, r5
   14064:	mov	r0, fp
   14068:	bl	4494 <strchr@plt>
   1406c:	subs	r9, r0, #0
   14070:	bne	14034 <main@@Base+0xf408>
   14074:	cmp	r5, #31
   14078:	bhi	14174 <main@@Base+0xf548>
   1407c:	mov	r2, r5
   14080:	mov	r1, sl
   14084:	mov	r0, r4
   14088:	bl	459c <av_bprintf@plt>
   1408c:	ldrb	r5, [r7, #1]!
   14090:	cmp	r5, #0
   14094:	bne	14060 <main@@Base+0xf434>
   14098:	ldr	r1, [pc, #272]	; 141b0 <main@@Base+0xf584>
   1409c:	ldr	r2, [sp, #4]
   140a0:	add	r1, pc, r1
   140a4:	mov	r0, #1
   140a8:	bl	474c <__printf_chk@plt>
   140ac:	mov	r0, r4
   140b0:	bl	45c0 <av_bprint_clear@plt>
   140b4:	ldrb	r5, [r6]
   140b8:	cmp	r5, #0
   140bc:	beq	14138 <main@@Base+0xf50c>
   140c0:	ldr	sl, [pc, #236]	; 141b4 <main@@Base+0xf588>
   140c4:	ldr	r9, [pc, #236]	; 141b8 <main@@Base+0xf58c>
   140c8:	add	sl, pc, sl
   140cc:	add	r9, pc, r9
   140d0:	b	14100 <main@@Base+0xf4d4>
   140d4:	mov	r2, #1
   140d8:	mov	r1, #92	; 0x5c
   140dc:	mov	r0, r4
   140e0:	bl	45f0 <av_bprint_chars@plt>
   140e4:	ldrb	r1, [r7, #8]
   140e8:	mov	r2, #1
   140ec:	mov	r0, r4
   140f0:	bl	45f0 <av_bprint_chars@plt>
   140f4:	ldrb	r5, [r6, #1]!
   140f8:	cmp	r5, #0
   140fc:	beq	14138 <main@@Base+0xf50c>
   14100:	mov	r1, r5
   14104:	mov	r0, sl
   14108:	bl	4494 <strchr@plt>
   1410c:	subs	r7, r0, #0
   14110:	bne	140d4 <main@@Base+0xf4a8>
   14114:	cmp	r5, #31
   14118:	bhi	14188 <main@@Base+0xf55c>
   1411c:	mov	r2, r5
   14120:	mov	r1, r9
   14124:	mov	r0, r4
   14128:	bl	459c <av_bprintf@plt>
   1412c:	ldrb	r5, [r6, #1]!
   14130:	cmp	r5, #0
   14134:	bne	14100 <main@@Base+0xf4d4>
   14138:	ldr	r1, [pc, #124]	; 141bc <main@@Base+0xf590>
   1413c:	ldr	r2, [sp, #4]
   14140:	add	r1, pc, r1
   14144:	mov	r0, #1
   14148:	bl	474c <__printf_chk@plt>
   1414c:	mov	r0, r4
   14150:	mov	r1, #0
   14154:	bl	4308 <av_bprint_finalize@plt>
   14158:	ldr	r2, [sp, #1028]	; 0x404
   1415c:	ldr	r3, [r8]
   14160:	cmp	r2, r3
   14164:	bne	1419c <main@@Base+0xf570>
   14168:	add	sp, sp, #1024	; 0x400
   1416c:	add	sp, sp, #12
   14170:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14174:	mov	r1, r5
   14178:	mov	r2, #1
   1417c:	mov	r0, r4
   14180:	bl	45f0 <av_bprint_chars@plt>
   14184:	b	14054 <main@@Base+0xf428>
   14188:	mov	r1, r5
   1418c:	mov	r2, #1
   14190:	mov	r0, r4
   14194:	bl	45f0 <av_bprint_chars@plt>
   14198:	b	140f4 <main@@Base+0xf4c8>
   1419c:	bl	3f00 <__stack_chk_fail@plt>
   141a0:	andeq	sp, r1, r8, lsl ip
   141a4:	andeq	r0, r0, r8, ror #7
   141a8:	andeq	sl, r0, r8, lsr r0
   141ac:	ldrdeq	sl, [r0], -ip
   141b0:	andeq	sl, r0, r8, asr #20
   141b4:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   141b8:	andeq	sl, r0, ip, lsr r5
   141bc:			; <UNDEFINED> instruction: 0x0000a9b0
   141c0:	push	{r4, r5, r6, r7, lr}
   141c4:	ldr	r3, [pc, #168]	; 14274 <main@@Base+0xf648>
   141c8:	ldr	ip, [r0, #24]
   141cc:	ldr	lr, [pc, #164]	; 14278 <main@@Base+0xf64c>
   141d0:	add	r3, pc, r3
   141d4:	ldr	r4, [r3, lr]
   141d8:	add	ip, r0, ip, lsl #2
   141dc:	ldr	ip, [ip, #28]
   141e0:	ldr	r3, [r4]
   141e4:	sub	sp, sp, #12
   141e8:	cmp	ip, #0
   141ec:	mov	r6, r1
   141f0:	mov	r7, r2
   141f4:	ldr	r5, [r0, #12]
   141f8:	str	r3, [sp, #4]
   141fc:	bne	14230 <main@@Base+0xf604>
   14200:	ldr	r3, [r5, #8]
   14204:	cmp	r3, #0
   14208:	beq	14250 <main@@Base+0xf624>
   1420c:	ldr	r2, [sp, #4]
   14210:	ldr	r3, [r4]
   14214:	cmp	r2, r3
   14218:	bne	14270 <main@@Base+0xf644>
   1421c:	mov	r1, r7
   14220:	mov	r0, r6
   14224:	add	sp, sp, #12
   14228:	pop	{r4, r5, r6, r7, lr}
   1422c:	b	13fd4 <main@@Base+0xf3a8>
   14230:	ldr	r1, [pc, #68]	; 1427c <main@@Base+0xf650>
   14234:	ldr	r2, [r5, #12]
   14238:	add	r1, pc, r1
   1423c:	mov	r0, #1
   14240:	bl	474c <__printf_chk@plt>
   14244:	ldr	r3, [r5, #8]
   14248:	cmp	r3, #0
   1424c:	bne	1420c <main@@Base+0xf5e0>
   14250:	ldr	r2, [r5, #4]
   14254:	ldr	r1, [pc, #36]	; 14280 <main@@Base+0xf654>
   14258:	mov	r3, #32
   1425c:	lsl	r2, r2, #2
   14260:	add	r1, pc, r1
   14264:	mov	r0, #1
   14268:	bl	474c <__printf_chk@plt>
   1426c:	b	1420c <main@@Base+0xf5e0>
   14270:	bl	3f00 <__stack_chk_fail@plt>
   14274:	andeq	sp, r1, ip, lsr #20
   14278:	andeq	r0, r0, r8, ror #7
   1427c:	andeq	sl, r0, r0, lsl #8
   14280:	andeq	r9, r0, r0, asr #31
   14284:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14288:	ldr	ip, [pc, #384]	; 14410 <main@@Base+0xf7e4>
   1428c:	ldr	lr, [r0, #24]
   14290:	ldr	r4, [pc, #380]	; 14414 <main@@Base+0xf7e8>
   14294:	add	ip, pc, ip
   14298:	ldr	r4, [ip, r4]
   1429c:	add	lr, r0, lr, lsl #2
   142a0:	ldr	lr, [lr, #28]
   142a4:	sub	sp, sp, #1040	; 0x410
   142a8:	mov	r6, r1
   142ac:	ldr	r1, [r4]
   142b0:	sub	sp, sp, #12
   142b4:	cmp	lr, #0
   142b8:	str	r4, [sp, #12]
   142bc:	mov	r8, r2
   142c0:	mov	r9, r3
   142c4:	ldr	r4, [r0, #12]
   142c8:	str	r1, [sp, #1044]	; 0x414
   142cc:	bne	143cc <main@@Base+0xf7a0>
   142d0:	ldr	r3, [r4, #8]
   142d4:	cmp	r3, #0
   142d8:	beq	143ec <main@@Base+0xf7c0>
   142dc:	add	r5, sp, #20
   142e0:	mov	r0, r5
   142e4:	mvn	r2, #0
   142e8:	mov	r1, #1
   142ec:	bl	3f48 <av_bprint_init@plt>
   142f0:	ldrb	r4, [r6]
   142f4:	cmp	r4, #0
   142f8:	beq	14374 <main@@Base+0xf748>
   142fc:	ldr	fp, [pc, #276]	; 14418 <main@@Base+0xf7ec>
   14300:	ldr	sl, [pc, #276]	; 1441c <main@@Base+0xf7f0>
   14304:	add	fp, pc, fp
   14308:	add	sl, pc, sl
   1430c:	b	1433c <main@@Base+0xf710>
   14310:	mov	r2, #1
   14314:	mov	r1, #92	; 0x5c
   14318:	mov	r0, r5
   1431c:	bl	45f0 <av_bprint_chars@plt>
   14320:	ldrb	r1, [r7, #8]
   14324:	mov	r2, #1
   14328:	mov	r0, r5
   1432c:	bl	45f0 <av_bprint_chars@plt>
   14330:	ldrb	r4, [r6, #1]!
   14334:	cmp	r4, #0
   14338:	beq	14374 <main@@Base+0xf748>
   1433c:	mov	r1, r4
   14340:	mov	r0, fp
   14344:	bl	4494 <strchr@plt>
   14348:	subs	r7, r0, #0
   1434c:	bne	14310 <main@@Base+0xf6e4>
   14350:	cmp	r4, #31
   14354:	bhi	143b8 <main@@Base+0xf78c>
   14358:	mov	r2, r4
   1435c:	mov	r1, sl
   14360:	mov	r0, r5
   14364:	bl	459c <av_bprintf@plt>
   14368:	ldrb	r4, [r6, #1]!
   1436c:	cmp	r4, #0
   14370:	bne	1433c <main@@Base+0xf710>
   14374:	ldr	r1, [pc, #164]	; 14420 <main@@Base+0xf7f4>
   14378:	ldr	r2, [sp, #20]
   1437c:	add	r1, pc, r1
   14380:	strd	r8, [sp]
   14384:	mov	r0, #1
   14388:	bl	474c <__printf_chk@plt>
   1438c:	mov	r0, r5
   14390:	mov	r1, #0
   14394:	bl	4308 <av_bprint_finalize@plt>
   14398:	ldr	r3, [sp, #12]
   1439c:	ldr	r2, [sp, #1044]	; 0x414
   143a0:	ldr	r3, [r3]
   143a4:	cmp	r2, r3
   143a8:	bne	1440c <main@@Base+0xf7e0>
   143ac:	add	sp, sp, #1040	; 0x410
   143b0:	add	sp, sp, #12
   143b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143b8:	mov	r1, r4
   143bc:	mov	r2, #1
   143c0:	mov	r0, r5
   143c4:	bl	45f0 <av_bprint_chars@plt>
   143c8:	b	14330 <main@@Base+0xf704>
   143cc:	ldr	r1, [pc, #80]	; 14424 <main@@Base+0xf7f8>
   143d0:	ldr	r2, [r4, #12]
   143d4:	add	r1, pc, r1
   143d8:	mov	r0, #1
   143dc:	bl	474c <__printf_chk@plt>
   143e0:	ldr	r3, [r4, #8]
   143e4:	cmp	r3, #0
   143e8:	bne	142dc <main@@Base+0xf6b0>
   143ec:	ldr	r2, [r4, #4]
   143f0:	ldr	r1, [pc, #48]	; 14428 <main@@Base+0xf7fc>
   143f4:	mov	r3, #32
   143f8:	lsl	r2, r2, #2
   143fc:	add	r1, pc, r1
   14400:	mov	r0, #1
   14404:	bl	474c <__printf_chk@plt>
   14408:	b	142dc <main@@Base+0xf6b0>
   1440c:	bl	3f00 <__stack_chk_fail@plt>
   14410:	andeq	sp, r1, r8, ror #18
   14414:	andeq	r0, r0, r8, ror #7
   14418:	andeq	r9, r0, ip, asr sp
   1441c:	andeq	sl, r0, r0, lsl #6
   14420:	andeq	sl, r0, ip, ror r7
   14424:	andeq	sl, r0, r4, ror #4
   14428:	andeq	r9, r0, r4, lsr #28
   1442c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14430:	ldr	r3, [pc, #680]	; 146e0 <main@@Base+0xfab4>
   14434:	mov	r4, r0
   14438:	ldr	r0, [pc, #676]	; 146e4 <main@@Base+0xfab8>
   1443c:	add	r3, pc, r3
   14440:	ldr	r0, [r3, r0]
   14444:	ldr	ip, [r4, #24]
   14448:	mov	lr, r0
   1444c:	sub	sp, sp, #36	; 0x24
   14450:	str	r0, [sp, #12]
   14454:	ldr	lr, [lr]
   14458:	add	r0, ip, #1
   1445c:	cmp	r0, #9
   14460:	str	r0, [r4, #24]
   14464:	str	lr, [sp, #28]
   14468:	bgt	146dc <main@@Base+0xfab0>
   1446c:	ldr	r3, [r4, #16]
   14470:	mov	fp, r1
   14474:	cmp	r0, #0
   14478:	add	r1, r2, r2, lsl #3
   1447c:	add	r3, r3, r1, lsl #3
   14480:	bne	14578 <main@@Base+0xf94c>
   14484:	cmp	r2, #18
   14488:	str	r0, [r4, #28]
   1448c:	str	r3, [r4, #68]	; 0x44
   14490:	beq	146c0 <main@@Base+0xfa94>
   14494:	ldr	r3, [r4, #4]
   14498:	ldr	r3, [r3, #20]
   1449c:	cmp	r3, #0
   144a0:	beq	144ac <main@@Base+0xf880>
   144a4:	mov	r0, r4
   144a8:	blx	r3
   144ac:	mov	r6, #0
   144b0:	mov	r5, r6
   144b4:	mov	r9, r6
   144b8:	ldr	r3, [pc, #552]	; 146e8 <main@@Base+0xfabc>
   144bc:	add	r3, pc, r3
   144c0:	str	r3, [sp, #8]
   144c4:	mov	r2, r5
   144c8:	mov	r3, #2
   144cc:	ldr	r1, [sp, #8]
   144d0:	mov	r0, fp
   144d4:	bl	4644 <av_dict_get@plt>
   144d8:	subs	r5, r0, #0
   144dc:	ldr	r3, [r4, #24]
   144e0:	beq	14624 <main@@Base+0xf9f8>
   144e4:	add	r3, r4, r3, lsl #2
   144e8:	ldr	r7, [r3, #68]	; 0x44
   144ec:	ldr	r8, [r5]
   144f0:	ldr	r6, [r7, #68]	; 0x44
   144f4:	ldr	sl, [r5, #4]
   144f8:	cmp	r6, #0
   144fc:	beq	145bc <main@@Base+0xf990>
   14500:	mov	r2, r8
   14504:	add	r1, sp, #20
   14508:	mov	r0, r4
   1450c:	str	r9, [sp, #20]
   14510:	str	r9, [sp, #24]
   14514:	bl	12d74 <main@@Base+0xe148>
   14518:	subs	r6, r0, #0
   1451c:	blt	145dc <main@@Base+0xf9b0>
   14520:	mov	r2, sl
   14524:	add	r1, sp, #24
   14528:	mov	r0, r4
   1452c:	bl	12d74 <main@@Base+0xe148>
   14530:	subs	r6, r0, #0
   14534:	blt	145dc <main@@Base+0xf9b0>
   14538:	ldr	r3, [r4, #4]
   1453c:	ldr	r2, [sp, #24]
   14540:	ldr	r3, [r3, #36]	; 0x24
   14544:	ldr	r1, [sp, #20]
   14548:	mov	r0, r4
   1454c:	blx	r3
   14550:	ldr	r0, [sp, #20]
   14554:	bl	46ec <av_free@plt>
   14558:	ldr	r0, [sp, #24]
   1455c:	bl	46ec <av_free@plt>
   14560:	ldr	r3, [r4, #24]
   14564:	add	r3, r4, r3, lsl #2
   14568:	ldr	r2, [r3, #28]
   1456c:	add	r2, r2, #1
   14570:	str	r2, [r3, #28]
   14574:	b	144c4 <main@@Base+0xf898>
   14578:	mov	r1, #0
   1457c:	add	ip, r4, ip, lsl #2
   14580:	ldr	r0, [ip, #68]	; 0x44
   14584:	cmp	r2, #18
   14588:	ldr	r0, [r0]
   1458c:	str	r3, [ip, #72]	; 0x48
   14590:	str	r1, [ip, #32]
   14594:	beq	146c0 <main@@Base+0xfa94>
   14598:	cmp	r0, #18
   1459c:	bne	14494 <main@@Base+0xf868>
   145a0:	add	r3, r4, #8192	; 0x2000
   145a4:	ldr	r0, [r3, #2160]	; 0x870
   145a8:	cmp	r2, #15
   145ac:	ldr	r1, [r3, #2156]	; 0x86c
   145b0:	movne	r1, r0
   145b4:	str	r1, [r3, #2164]	; 0x874
   145b8:	b	14494 <main@@Base+0xf868>
   145bc:	mov	r3, r6
   145c0:	mov	r2, r6
   145c4:	mov	r1, r8
   145c8:	ldr	r0, [r7, #64]	; 0x40
   145cc:	bl	4644 <av_dict_get@plt>
   145d0:	cmp	r0, #0
   145d4:	bne	14500 <main@@Base+0xf8d4>
   145d8:	b	144c4 <main@@Base+0xf898>
   145dc:	ldr	r2, [r7, #60]	; 0x3c
   145e0:	mov	r3, r8
   145e4:	str	r2, [sp, #4]
   145e8:	ldr	r2, [pc, #252]	; 146ec <main@@Base+0xfac0>
   145ec:	mov	r1, #16
   145f0:	add	r2, pc, r2
   145f4:	mov	r0, r4
   145f8:	str	sl, [sp]
   145fc:	bl	40f8 <av_log@plt>
   14600:	ldr	r0, [sp, #20]
   14604:	bl	46ec <av_free@plt>
   14608:	ldr	r0, [sp, #24]
   1460c:	bl	46ec <av_free@plt>
   14610:	ldr	r3, [r4, #24]
   14614:	add	r1, r4, r3, lsl #2
   14618:	ldr	r2, [r1, #28]
   1461c:	add	r2, r2, #1
   14620:	str	r2, [r1, #28]
   14624:	cmp	r3, #0
   14628:	beq	1467c <main@@Base+0xfa50>
   1462c:	add	r2, r4, r3, lsl #2
   14630:	ldr	r1, [r2, #64]	; 0x40
   14634:	ldr	r0, [r1]
   14638:	cmn	r0, #1
   1463c:	beq	1467c <main@@Base+0xfa50>
   14640:	ldr	r1, [r2, #24]
   14644:	ldr	ip, [r2, #68]	; 0x44
   14648:	cmp	r0, #18
   1464c:	add	r1, r1, #1
   14650:	ldr	r0, [ip]
   14654:	str	r1, [r2, #24]
   14658:	bne	1467c <main@@Base+0xfa50>
   1465c:	cmp	r0, #15
   14660:	add	r1, r4, #8192	; 0x2000
   14664:	ldreq	r2, [r1, #2156]	; 0x86c
   14668:	ldrne	r2, [r1, #2160]	; 0x870
   1466c:	addeq	r2, r2, #1
   14670:	addne	r2, r2, #1
   14674:	streq	r2, [r1, #2156]	; 0x86c
   14678:	strne	r2, [r1, #2160]	; 0x870
   1467c:	ldr	r2, [r4, #4]
   14680:	ldr	r2, [r2, #24]
   14684:	cmp	r2, #0
   14688:	beq	14698 <main@@Base+0xfa6c>
   1468c:	mov	r0, r4
   14690:	blx	r2
   14694:	ldr	r3, [r4, #24]
   14698:	ldr	r2, [sp, #12]
   1469c:	ldr	r1, [sp, #28]
   146a0:	ldr	r2, [r2]
   146a4:	sub	r3, r3, #1
   146a8:	cmp	r1, r2
   146ac:	str	r3, [r4, #24]
   146b0:	mov	r0, r6
   146b4:	bne	146d8 <main@@Base+0xfaac>
   146b8:	add	sp, sp, #36	; 0x24
   146bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146c0:	mov	r2, #0
   146c4:	add	r3, r4, #8192	; 0x2000
   146c8:	str	r2, [r3, #2164]	; 0x874
   146cc:	str	r2, [r3, #2160]	; 0x870
   146d0:	str	r2, [r3, #2156]	; 0x86c
   146d4:	b	14494 <main@@Base+0xf868>
   146d8:	bl	3f00 <__stack_chk_fail@plt>
   146dc:	bl	11920 <main@@Base+0xccf4>
   146e0:	andeq	sp, r1, r0, asr #15
   146e4:	andeq	r0, r0, r8, ror #7
   146e8:	andeq	sl, r0, ip, ror #7
   146ec:	andeq	sl, r0, r4, lsl r5
   146f0:	push	{r4, r5, r6, r7, lr}
   146f4:	mov	r4, r0
   146f8:	sub	sp, sp, #1040	; 0x410
   146fc:	sub	sp, sp, #12
   14700:	add	r0, sp, #8
   14704:	stm	r0, {r2, r3}
   14708:	ldr	r3, [pc, #204]	; 147dc <main@@Base+0xfbb0>
   1470c:	ldr	r2, [pc, #204]	; 147e0 <main@@Base+0xfbb4>
   14710:	add	r3, pc, r3
   14714:	ldr	r6, [r3, r2]
   14718:	add	r5, sp, #20
   1471c:	ldr	r3, [r6]
   14720:	mov	r0, r5
   14724:	mov	r2, #1
   14728:	mov	r7, r1
   1472c:	mov	r1, #0
   14730:	str	r3, [sp, #1044]	; 0x414
   14734:	bl	3f48 <av_bprint_init@plt>
   14738:	ldr	r3, [sp, #12]
   1473c:	ldr	r1, [pc, #160]	; 147e4 <main@@Base+0xfbb8>
   14740:	mov	r0, r5
   14744:	str	r3, [sp]
   14748:	ldr	r2, [sp, #8]
   1474c:	mov	r3, #47	; 0x2f
   14750:	add	r1, pc, r1
   14754:	bl	459c <av_bprintf@plt>
   14758:	ldr	r3, [r4, #24]
   1475c:	ldr	r5, [sp, #20]
   14760:	add	r3, r4, r3, lsl #2
   14764:	ldr	r2, [r3, #68]	; 0x44
   14768:	ldr	r3, [r2, #68]	; 0x44
   1476c:	cmp	r3, #0
   14770:	beq	147bc <main@@Base+0xfb90>
   14774:	ldr	r3, [r4, #4]
   14778:	mov	r0, r4
   1477c:	ldr	r3, [r3, #36]	; 0x24
   14780:	mov	r2, r5
   14784:	mov	r1, r7
   14788:	blx	r3
   1478c:	ldr	r3, [r4, #24]
   14790:	add	r4, r4, r3, lsl #2
   14794:	ldr	r3, [r4, #28]
   14798:	add	r3, r3, #1
   1479c:	str	r3, [r4, #28]
   147a0:	ldr	r2, [sp, #1044]	; 0x414
   147a4:	ldr	r3, [r6]
   147a8:	cmp	r2, r3
   147ac:	bne	147d8 <main@@Base+0xfbac>
   147b0:	add	sp, sp, #1040	; 0x410
   147b4:	add	sp, sp, #12
   147b8:	pop	{r4, r5, r6, r7, pc}
   147bc:	ldr	r0, [r2, #64]	; 0x40
   147c0:	mov	r1, r7
   147c4:	mov	r2, r3
   147c8:	bl	4644 <av_dict_get@plt>
   147cc:	cmp	r0, #0
   147d0:	bne	14774 <main@@Base+0xfb48>
   147d4:	b	147a0 <main@@Base+0xfb74>
   147d8:	bl	3f00 <__stack_chk_fail@plt>
   147dc:	andeq	sp, r1, ip, ror #9
   147e0:	andeq	r0, r0, r8, ror #7
   147e4:	strdeq	sl, [r0], -r0
   147e8:	push	{r4, r5, r6, r7, r8, lr}
   147ec:	mov	r4, r0
   147f0:	cmp	r3, #-2147483648	; 0x80000000
   147f4:	mov	r7, r3
   147f8:	ldr	r3, [pc, #244]	; 148f4 <main@@Base+0xfcc8>
   147fc:	ldr	r0, [pc, #244]	; 148f8 <main@@Base+0xfccc>
   14800:	add	r3, pc, r3
   14804:	ldr	r5, [r3, r0]
   14808:	mov	r6, r2
   1480c:	cmpeq	r2, #0
   14810:	ldr	r2, [r4, #24]
   14814:	ldr	r0, [r5]
   14818:	sub	sp, sp, #8
   1481c:	add	r2, r4, r2, lsl #2
   14820:	ldr	r2, [r2, #68]	; 0x44
   14824:	str	r0, [sp, #4]
   14828:	mov	r8, r1
   1482c:	beq	1485c <main@@Base+0xfc30>
   14830:	ldr	r3, [r2, #68]	; 0x44
   14834:	cmp	r3, #0
   14838:	beq	148d8 <main@@Base+0xfcac>
   1483c:	ldr	r0, [r4, #4]
   14840:	mov	r2, r6
   14844:	mov	r3, r7
   14848:	ldr	r6, [r0, #28]
   1484c:	mov	r1, r8
   14850:	mov	r0, r4
   14854:	blx	r6
   14858:	b	14890 <main@@Base+0xfc64>
   1485c:	ldr	r0, [r4, #4]
   14860:	ldr	r3, [r0, #40]	; 0x28
   14864:	tst	r3, #1
   14868:	beq	148a4 <main@@Base+0xfc78>
   1486c:	ldr	r3, [r2, #68]	; 0x44
   14870:	cmp	r3, #0
   14874:	beq	148bc <main@@Base+0xfc90>
   14878:	ldr	r2, [pc, #124]	; 148fc <main@@Base+0xfcd0>
   1487c:	ldr	r3, [r0, #36]	; 0x24
   14880:	mov	r1, r8
   14884:	add	r2, pc, r2
   14888:	mov	r0, r4
   1488c:	blx	r3
   14890:	ldr	r3, [r4, #24]
   14894:	add	r4, r4, r3, lsl #2
   14898:	ldr	r3, [r4, #28]
   1489c:	add	r3, r3, #1
   148a0:	str	r3, [r4, #28]
   148a4:	ldr	r2, [sp, #4]
   148a8:	ldr	r3, [r5]
   148ac:	cmp	r2, r3
   148b0:	bne	148f0 <main@@Base+0xfcc4>
   148b4:	add	sp, sp, #8
   148b8:	pop	{r4, r5, r6, r7, r8, pc}
   148bc:	ldr	r0, [r2, #64]	; 0x40
   148c0:	mov	r2, r3
   148c4:	bl	4644 <av_dict_get@plt>
   148c8:	cmp	r0, #0
   148cc:	beq	148a4 <main@@Base+0xfc78>
   148d0:	ldr	r0, [r4, #4]
   148d4:	b	14878 <main@@Base+0xfc4c>
   148d8:	ldr	r0, [r2, #64]	; 0x40
   148dc:	mov	r2, r3
   148e0:	bl	4644 <av_dict_get@plt>
   148e4:	cmp	r0, #0
   148e8:	bne	1483c <main@@Base+0xfc10>
   148ec:	b	148a4 <main@@Base+0xfc78>
   148f0:	bl	3f00 <__stack_chk_fail@plt>
   148f4:	strdeq	sp, [r1], -ip
   148f8:	andeq	r0, r0, r8, ror #7
   148fc:	andeq	sl, r0, r4, asr #5
   14900:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14904:	mov	r5, #9
   14908:	mov	r9, #0
   1490c:	ldr	r3, [pc, #392]	; 14a9c <main@@Base+0xfe70>
   14910:	ldr	r2, [pc, #392]	; 14aa0 <main@@Base+0xfe74>
   14914:	add	r3, pc, r3
   14918:	ldr	r2, [r3, r2]
   1491c:	sub	sp, sp, #1040	; 0x410
   14920:	sub	sp, sp, #12
   14924:	ldr	sl, [pc, #376]	; 14aa4 <main@@Base+0xfe78>
   14928:	ldr	ip, [r2]
   1492c:	add	r6, sp, #20
   14930:	str	r2, [sp, #12]
   14934:	str	r0, [sp, #8]
   14938:	mvn	r2, #0
   1493c:	mov	r0, r6
   14940:	add	sl, pc, sl
   14944:	mov	r4, r1
   14948:	mov	r1, #0
   1494c:	str	ip, [sp, #1044]	; 0x414
   14950:	bl	3f48 <av_bprint_init@plt>
   14954:	mov	r0, r6
   14958:	mov	r1, sl
   1495c:	bl	459c <av_bprintf@plt>
   14960:	ldr	r3, [pc, #320]	; 14aa8 <main@@Base+0xfe7c>
   14964:	ldr	r8, [pc, #320]	; 14aac <main@@Base+0xfe80>
   14968:	add	r3, pc, r3
   1496c:	str	r3, [sp, #4]
   14970:	add	r8, pc, r8
   14974:	mov	r2, r9
   14978:	ldr	r1, [sp, #4]
   1497c:	mov	r0, r6
   14980:	bl	459c <av_bprintf@plt>
   14984:	cmp	r5, #3
   14988:	movlt	r7, r5
   1498c:	movge	r7, #3
   14990:	cmp	r5, #0
   14994:	ble	149dc <main@@Base+0xfdb0>
   14998:	mov	fp, r5
   1499c:	ldrb	r2, [r4, #1]
   149a0:	ldrb	r3, [r4]
   149a4:	ldrb	r1, [r4, #2]
   149a8:	orr	r3, r3, r2, lsl #8
   149ac:	ldrb	r2, [r4, #3]
   149b0:	orr	r3, r3, r1, lsl #16
   149b4:	orr	r2, r3, r2, lsl #24
   149b8:	sub	fp, fp, #1
   149bc:	mov	r1, r8
   149c0:	mov	r0, r6
   149c4:	bl	459c <av_bprintf@plt>
   149c8:	sub	r3, r5, fp
   149cc:	cmp	r7, r3
   149d0:	add	r4, r4, #4
   149d4:	bgt	1499c <main@@Base+0xfd70>
   149d8:	mov	r5, fp
   149dc:	mov	r1, sl
   149e0:	mov	r0, r6
   149e4:	bl	459c <av_bprintf@plt>
   149e8:	cmp	r5, #0
   149ec:	add	r9, r9, #1
   149f0:	bne	14974 <main@@Base+0xfd48>
   149f4:	ldr	r2, [sp, #8]
   149f8:	ldr	r4, [sp, #20]
   149fc:	ldr	r3, [r2, #24]
   14a00:	add	r3, r2, r3, lsl #2
   14a04:	ldr	r3, [r3, #68]	; 0x44
   14a08:	ldr	r2, [r3, #68]	; 0x44
   14a0c:	cmp	r2, #0
   14a10:	beq	14a74 <main@@Base+0xfe48>
   14a14:	ldr	r0, [sp, #8]
   14a18:	mov	r2, r4
   14a1c:	mov	r4, r0
   14a20:	ldr	r3, [r0, #4]
   14a24:	ldr	r1, [pc, #132]	; 14ab0 <main@@Base+0xfe84>
   14a28:	ldr	r3, [r3, #36]	; 0x24
   14a2c:	add	r1, pc, r1
   14a30:	blx	r3
   14a34:	ldr	r3, [r4, #24]
   14a38:	add	fp, r4, r3, lsl #2
   14a3c:	ldr	r3, [fp, #28]
   14a40:	add	r3, r3, #1
   14a44:	str	r3, [fp, #28]
   14a48:	mov	r0, r6
   14a4c:	mov	r1, #0
   14a50:	bl	4308 <av_bprint_finalize@plt>
   14a54:	ldr	r3, [sp, #12]
   14a58:	ldr	r2, [sp, #1044]	; 0x414
   14a5c:	ldr	r3, [r3]
   14a60:	cmp	r2, r3
   14a64:	bne	14a98 <main@@Base+0xfe6c>
   14a68:	add	sp, sp, #1040	; 0x410
   14a6c:	add	sp, sp, #12
   14a70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a74:	ldr	r1, [pc, #56]	; 14ab4 <main@@Base+0xfe88>
   14a78:	ldr	r0, [r3, #64]	; 0x40
   14a7c:	mov	r2, r5
   14a80:	mov	r3, r5
   14a84:	add	r1, pc, r1
   14a88:	bl	4644 <av_dict_get@plt>
   14a8c:	cmp	r0, #0
   14a90:	bne	14a14 <main@@Base+0xfde8>
   14a94:	b	14a48 <main@@Base+0xfe1c>
   14a98:	bl	3f00 <__stack_chk_fail@plt>
   14a9c:	andeq	sp, r1, r8, ror #5
   14aa0:	andeq	r0, r0, r8, ror #7
   14aa4:	andeq	r8, r0, r0, asr r2
   14aa8:	andeq	sl, r0, r4, ror #3
   14aac:	andeq	sl, r0, r4, ror #3
   14ab0:	andeq	sl, r0, r0, lsr r1
   14ab4:	ldrdeq	sl, [r0], -r8
   14ab8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14abc:	mov	r9, r3
   14ac0:	ldr	r3, [pc, #592]	; 14d18 <main@@Base+0x100ec>
   14ac4:	ldr	ip, [pc, #592]	; 14d1c <main@@Base+0x100f0>
   14ac8:	add	r3, pc, r3
   14acc:	ldr	ip, [r3, ip]
   14ad0:	sub	sp, sp, #1056	; 0x420
   14ad4:	sub	sp, sp, #4
   14ad8:	add	r5, sp, #28
   14adc:	ldr	r3, [ip]
   14ae0:	str	r0, [sp, #12]
   14ae4:	str	r1, [sp, #16]
   14ae8:	mov	r0, r5
   14aec:	mov	r1, #0
   14af0:	mov	r7, r2
   14af4:	mvn	r2, #0
   14af8:	str	ip, [sp, #20]
   14afc:	str	r3, [sp, #1052]	; 0x41c
   14b00:	bl	3f48 <av_bprint_init@plt>
   14b04:	ldr	r1, [pc, #532]	; 14d20 <main@@Base+0x100f4>
   14b08:	mov	r0, r5
   14b0c:	add	r1, pc, r1
   14b10:	bl	459c <av_bprintf@plt>
   14b14:	cmp	r9, #0
   14b18:	beq	14c68 <main@@Base+0x1003c>
   14b1c:	mov	sl, #0
   14b20:	ldr	r3, [pc, #508]	; 14d24 <main@@Base+0x100f8>
   14b24:	ldr	r8, [pc, #508]	; 14d28 <main@@Base+0x100fc>
   14b28:	add	r3, pc, r3
   14b2c:	str	r3, [sp, #4]
   14b30:	ldr	r3, [pc, #500]	; 14d2c <main@@Base+0x10100>
   14b34:	add	r8, pc, r8
   14b38:	add	r3, pc, r3
   14b3c:	str	r3, [sp, #8]
   14b40:	ldr	r3, [pc, #488]	; 14d30 <main@@Base+0x10104>
   14b44:	add	r3, pc, r3
   14b48:	str	r3, [sp]
   14b4c:	mov	r2, sl
   14b50:	ldr	r1, [sp, #4]
   14b54:	mov	r0, r5
   14b58:	bl	459c <av_bprintf@plt>
   14b5c:	cmp	r9, #16
   14b60:	movlt	r4, r9
   14b64:	movge	r4, #16
   14b68:	cmp	r9, #0
   14b6c:	ble	14ce4 <main@@Base+0x100b8>
   14b70:	ldrb	r2, [r7]
   14b74:	ldr	r1, [sp, #8]
   14b78:	mov	r0, r5
   14b7c:	bl	459c <av_bprintf@plt>
   14b80:	mov	r6, r7
   14b84:	mov	fp, #0
   14b88:	add	fp, fp, #1
   14b8c:	cmp	r4, fp
   14b90:	ble	14bc4 <main@@Base+0xff98>
   14b94:	ldrb	r2, [r6, #1]!
   14b98:	mov	r1, r8
   14b9c:	mov	r0, r5
   14ba0:	bl	459c <av_bprintf@plt>
   14ba4:	tst	fp, #1
   14ba8:	beq	14b88 <main@@Base+0xff5c>
   14bac:	ldr	r1, [sp]
   14bb0:	mov	r0, r5
   14bb4:	add	fp, fp, #1
   14bb8:	bl	459c <av_bprintf@plt>
   14bbc:	cmp	r4, fp
   14bc0:	bgt	14b94 <main@@Base+0xff68>
   14bc4:	cmp	r4, #1
   14bc8:	movge	r2, r4
   14bcc:	movlt	r2, #1
   14bd0:	rsb	r3, r2, r2, lsl #31
   14bd4:	lsl	r3, r3, #1
   14bd8:	add	r2, r2, r2, lsr #31
   14bdc:	sub	r2, r3, r2, asr #1
   14be0:	add	r2, r2, #41	; 0x29
   14be4:	mov	r1, #32
   14be8:	mov	r0, r5
   14bec:	bl	45f0 <av_bprint_chars@plt>
   14bf0:	sub	fp, r7, #1
   14bf4:	b	14c18 <main@@Base+0xffec>
   14bf8:	add	fp, fp, #2
   14bfc:	mov	r1, #46	; 0x2e
   14c00:	mov	r0, r5
   14c04:	sub	fp, fp, r7
   14c08:	bl	45f0 <av_bprint_chars@plt>
   14c0c:	cmp	fp, r4
   14c10:	bge	14c48 <main@@Base+0x1001c>
   14c14:	mov	fp, r6
   14c18:	ldrb	r1, [fp, #1]
   14c1c:	add	r6, fp, #1
   14c20:	sub	r3, r1, #32
   14c24:	cmp	r3, #94	; 0x5e
   14c28:	mov	r2, #1
   14c2c:	bhi	14bf8 <main@@Base+0xffcc>
   14c30:	add	fp, fp, #2
   14c34:	mov	r0, r5
   14c38:	sub	fp, fp, r7
   14c3c:	bl	45f0 <av_bprint_chars@plt>
   14c40:	cmp	r4, fp
   14c44:	bgt	14c14 <main@@Base+0xffe8>
   14c48:	ldr	r1, [pc, #228]	; 14d34 <main@@Base+0x10108>
   14c4c:	mov	r0, r5
   14c50:	add	r1, pc, r1
   14c54:	bl	459c <av_bprintf@plt>
   14c58:	subs	r9, r9, r4
   14c5c:	add	sl, sl, r4
   14c60:	add	r7, r7, r4
   14c64:	bne	14b4c <main@@Base+0xff20>
   14c68:	ldr	r2, [sp, #12]
   14c6c:	ldr	r4, [sp, #28]
   14c70:	ldr	r3, [r2, #24]
   14c74:	add	r3, r2, r3, lsl #2
   14c78:	ldr	r2, [r3, #68]	; 0x44
   14c7c:	ldr	r3, [r2, #68]	; 0x44
   14c80:	cmp	r3, #0
   14c84:	beq	14cf8 <main@@Base+0x100cc>
   14c88:	ldr	r0, [sp, #12]
   14c8c:	mov	r2, r4
   14c90:	mov	r4, r0
   14c94:	ldr	r3, [r0, #4]
   14c98:	ldr	r1, [sp, #16]
   14c9c:	ldr	r3, [r3, #36]	; 0x24
   14ca0:	blx	r3
   14ca4:	ldr	r3, [r4, #24]
   14ca8:	add	r3, r4, r3, lsl #2
   14cac:	ldr	r2, [r3, #28]
   14cb0:	add	r2, r2, #1
   14cb4:	str	r2, [r3, #28]
   14cb8:	mov	r0, r5
   14cbc:	mov	r1, #0
   14cc0:	bl	4308 <av_bprint_finalize@plt>
   14cc4:	ldr	r3, [sp, #20]
   14cc8:	ldr	r2, [sp, #1052]	; 0x41c
   14ccc:	ldr	r3, [r3]
   14cd0:	cmp	r2, r3
   14cd4:	bne	14d14 <main@@Base+0x100e8>
   14cd8:	add	sp, sp, #1056	; 0x420
   14cdc:	add	sp, sp, #4
   14ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ce4:	mov	r2, #41	; 0x29
   14ce8:	mov	r1, #32
   14cec:	mov	r0, r5
   14cf0:	bl	45f0 <av_bprint_chars@plt>
   14cf4:	b	14c48 <main@@Base+0x1001c>
   14cf8:	ldr	r0, [r2, #64]	; 0x40
   14cfc:	ldr	r1, [sp, #16]
   14d00:	mov	r2, r3
   14d04:	bl	4644 <av_dict_get@plt>
   14d08:	cmp	r0, #0
   14d0c:	bne	14c88 <main@@Base+0x1005c>
   14d10:	b	14cb8 <main@@Base+0x1008c>
   14d14:	bl	3f00 <__stack_chk_fail@plt>
   14d18:	andeq	sp, r1, r4, lsr r1
   14d1c:	andeq	r0, r0, r8, ror #7
   14d20:	andeq	r8, r0, r4, lsl #1
   14d24:	andeq	sl, r0, r4, lsr #32
   14d28:	ldrdeq	r9, [r0], -r8
   14d2c:	ldrdeq	r9, [r0], -r4
   14d30:	andeq	r7, r0, r0, asr #25
   14d34:	andeq	r7, r0, r0, asr #30
   14d38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14d3c:	ldr	ip, [pc, #292]	; 14e68 <main@@Base+0x1023c>
   14d40:	ldr	lr, [pc, #292]	; 14e6c <main@@Base+0x10240>
   14d44:	add	ip, pc, ip
   14d48:	ldr	r7, [ip, lr]
   14d4c:	sub	sp, sp, #208	; 0xd0
   14d50:	ldr	r6, [pc, #280]	; 14e70 <main@@Base+0x10244>
   14d54:	ldr	lr, [r7]
   14d58:	add	r5, sp, #12
   14d5c:	add	r6, pc, r6
   14d60:	mov	r4, r0
   14d64:	mov	r8, r1
   14d68:	mov	r9, r2
   14d6c:	mov	r0, r5
   14d70:	mov	r2, #192	; 0xc0
   14d74:	mov	r1, #0
   14d78:	mov	sl, r3
   14d7c:	str	lr, [sp, #204]	; 0xcc
   14d80:	bl	41e8 <memset@plt>
   14d84:	ldr	r0, [r6, #48]	; 0x30
   14d88:	cmp	r0, #0
   14d8c:	beq	14e30 <main@@Base+0x10204>
   14d90:	bl	3f84 <av_hash_init@plt>
   14d94:	mov	r2, sl
   14d98:	mov	r1, r9
   14d9c:	ldr	r0, [r6, #48]	; 0x30
   14da0:	bl	40ec <av_hash_update@plt>
   14da4:	ldr	r0, [r6, #48]	; 0x30
   14da8:	bl	3e88 <av_hash_get_name@plt>
   14dac:	mov	r3, #192	; 0xc0
   14db0:	ldr	r2, [pc, #188]	; 14e74 <main@@Base+0x10248>
   14db4:	mov	r1, r3
   14db8:	add	r2, pc, r2
   14dbc:	str	r0, [sp, #4]
   14dc0:	str	r2, [sp]
   14dc4:	mov	r0, r5
   14dc8:	mov	r2, #1
   14dcc:	bl	41dc <__snprintf_chk@plt>
   14dd0:	mov	r0, r5
   14dd4:	bl	4110 <strlen@plt>
   14dd8:	add	r2, sp, #204	; 0xcc
   14ddc:	add	r1, r5, r0
   14de0:	sub	r2, r2, r1
   14de4:	ldr	r0, [r6, #48]	; 0x30
   14de8:	bl	3e1c <av_hash_final_hex@plt>
   14dec:	ldr	r3, [r4, #24]
   14df0:	add	r3, r4, r3, lsl #2
   14df4:	ldr	r2, [r3, #68]	; 0x44
   14df8:	ldr	r3, [r2, #68]	; 0x44
   14dfc:	cmp	r3, #0
   14e00:	beq	14e48 <main@@Base+0x1021c>
   14e04:	ldr	r3, [r4, #4]
   14e08:	mov	r0, r4
   14e0c:	ldr	r3, [r3, #36]	; 0x24
   14e10:	mov	r2, r5
   14e14:	mov	r1, r8
   14e18:	blx	r3
   14e1c:	ldr	r3, [r4, #24]
   14e20:	add	r4, r4, r3, lsl #2
   14e24:	ldr	r3, [r4, #28]
   14e28:	add	r3, r3, #1
   14e2c:	str	r3, [r4, #28]
   14e30:	ldr	r2, [sp, #204]	; 0xcc
   14e34:	ldr	r3, [r7]
   14e38:	cmp	r2, r3
   14e3c:	bne	14e64 <main@@Base+0x10238>
   14e40:	add	sp, sp, #208	; 0xd0
   14e44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14e48:	ldr	r0, [r2, #64]	; 0x40
   14e4c:	mov	r1, r8
   14e50:	mov	r2, r3
   14e54:	bl	4644 <av_dict_get@plt>
   14e58:	cmp	r0, #0
   14e5c:	bne	14e04 <main@@Base+0x101d8>
   14e60:	b	14e30 <main@@Base+0x10204>
   14e64:	bl	3f00 <__stack_chk_fail@plt>
   14e68:			; <UNDEFINED> instruction: 0x0001ceb8
   14e6c:	andeq	r0, r0, r8, ror #7
   14e70:	andeq	sp, r1, r0, lsl pc
   14e74:			; <UNDEFINED> instruction: 0x00009db4
   14e78:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14e7c:	mov	r4, r0
   14e80:	ldr	r6, [pc, #1352]	; 153d0 <main@@Base+0x107a4>
   14e84:	ldr	r3, [pc, #1352]	; 153d4 <main@@Base+0x107a8>
   14e88:	add	r6, pc, r6
   14e8c:	ldr	sl, [r6, r3]
   14e90:	sub	sp, sp, #1168	; 0x490
   14e94:	ldr	r3, [sl]
   14e98:	add	r7, sp, #12
   14e9c:	mov	r5, r1
   14ea0:	mov	r1, #1
   14ea4:	mov	r0, r7
   14ea8:	mvn	r2, #0
   14eac:	str	r3, [sp, #1164]	; 0x48c
   14eb0:	bl	3f48 <av_bprint_init@plt>
   14eb4:	ldr	r1, [r4, #24]
   14eb8:	add	r3, r1, #1
   14ebc:	cmp	r3, #9
   14ec0:	str	r3, [r4, #24]
   14ec4:	bgt	15450 <main@@Base+0x10824>
   14ec8:	ldr	r2, [r4, #16]
   14ecc:	cmp	r3, #0
   14ed0:	add	r2, r2, #2944	; 0xb80
   14ed4:	add	r2, r2, #8
   14ed8:	streq	r3, [r4, #28]
   14edc:	streq	r2, [r4, #68]	; 0x44
   14ee0:	bne	152b0 <main@@Base+0x10684>
   14ee4:	ldr	r2, [r4, #4]
   14ee8:	ldr	r2, [r2, #20]
   14eec:	cmp	r2, #0
   14ef0:	beq	14f00 <main@@Base+0x102d4>
   14ef4:	mov	r0, r4
   14ef8:	blx	r2
   14efc:	ldr	r3, [r4, #24]
   14f00:	add	r3, r4, r3, lsl #2
   14f04:	ldr	r2, [r3, #68]	; 0x44
   14f08:	ldr	r3, [r2, #68]	; 0x44
   14f0c:	cmp	r3, #0
   14f10:	beq	153a0 <main@@Base+0x10774>
   14f14:	ldr	r3, [r4, #4]
   14f18:	ldr	r2, [pc, #1208]	; 153d8 <main@@Base+0x107ac>
   14f1c:	ldr	r1, [pc, #1208]	; 153dc <main@@Base+0x107b0>
   14f20:	add	r2, pc, r2
   14f24:	ldr	r3, [r3, #36]	; 0x24
   14f28:	add	r1, pc, r1
   14f2c:	mov	r0, r4
   14f30:	blx	r3
   14f34:	ldr	r3, [r4, #24]
   14f38:	add	r1, r4, r3, lsl #2
   14f3c:	ldr	r2, [r1, #28]
   14f40:	add	r2, r2, #1
   14f44:	str	r2, [r1, #28]
   14f48:	add	r3, r4, r3, lsl #2
   14f4c:	ldrd	r8, [r5, #24]
   14f50:	ldr	r2, [r3, #68]	; 0x44
   14f54:	cmp	r9, #-2147483648	; 0x80000000
   14f58:	cmpeq	r8, #0
   14f5c:	ldr	r3, [r2, #68]	; 0x44
   14f60:	beq	14f90 <main@@Base+0x10364>
   14f64:	cmp	r3, #0
   14f68:	beq	15430 <main@@Base+0x10804>
   14f6c:	ldr	r1, [r4, #4]
   14f70:	mov	r2, r8
   14f74:	ldr	r8, [r1, #28]
   14f78:	ldr	r1, [pc, #1120]	; 153e0 <main@@Base+0x107b4>
   14f7c:	mov	r3, r9
   14f80:	add	r1, pc, r1
   14f84:	mov	r0, r4
   14f88:	blx	r8
   14f8c:	b	14fc4 <main@@Base+0x10398>
   14f90:	ldr	r1, [r4, #4]
   14f94:	ldr	r0, [r1, #40]	; 0x28
   14f98:	tst	r0, #1
   14f9c:	beq	15040 <main@@Base+0x10414>
   14fa0:	cmp	r3, #0
   14fa4:	beq	152dc <main@@Base+0x106b0>
   14fa8:	ldr	r3, [r1, #36]	; 0x24
   14fac:	ldr	r2, [pc, #1072]	; 153e4 <main@@Base+0x107b8>
   14fb0:	ldr	r1, [pc, #1072]	; 153e8 <main@@Base+0x107bc>
   14fb4:	add	r2, pc, r2
   14fb8:	add	r1, pc, r1
   14fbc:	mov	r0, r4
   14fc0:	blx	r3
   14fc4:	ldr	r3, [r4, #24]
   14fc8:	add	r3, r4, r3, lsl #2
   14fcc:	ldr	r2, [r3, #28]
   14fd0:	add	r2, r2, #1
   14fd4:	str	r2, [r3, #28]
   14fd8:	ldrd	r0, [r5, #24]
   14fdc:	cmp	r1, #-2147483648	; 0x80000000
   14fe0:	cmpeq	r0, #0
   14fe4:	beq	151c8 <main@@Base+0x1059c>
   14fe8:	bl	1b8ac <vc_gpuserv_execute_code@@Base+0x718>
   14fec:	vldr	d7, [pc, #980]	; 153c8 <main@@Base+0x1079c>
   14ff0:	vmov	d6, r0, r1
   14ff4:	vmul.f64	d7, d6, d7
   14ff8:	ldr	ip, [pc, #1004]	; 153ec <main@@Base+0x107c0>
   14ffc:	add	r8, sp, #1024	; 0x400
   15000:	add	ip, pc, ip
   15004:	add	ip, ip, #16
   15008:	add	r8, r8, #12
   1500c:	vmov	r2, r3, d7
   15010:	str	ip, [sp]
   15014:	mov	r0, r8
   15018:	bl	12248 <main@@Base+0xd61c>
   1501c:	ldr	r1, [pc, #972]	; 153f0 <main@@Base+0x107c4>
   15020:	mov	r2, r8
   15024:	add	r1, pc, r1
   15028:	mov	r0, r4
   1502c:	bl	12fe4 <main@@Base+0xe3b8>
   15030:	ldr	r3, [r4, #24]
   15034:	add	r3, r4, r3, lsl #2
   15038:	ldr	r2, [r3, #68]	; 0x44
   1503c:	ldr	r3, [r2, #68]	; 0x44
   15040:	cmp	r3, #0
   15044:	ldrh	r8, [r5]
   15048:	mov	r9, #0
   1504c:	beq	15238 <main@@Base+0x1060c>
   15050:	ldr	r1, [r4, #4]
   15054:	mov	r2, r8
   15058:	ldr	r8, [r1, #28]
   1505c:	ldr	r1, [pc, #912]	; 153f4 <main@@Base+0x107c8>
   15060:	mov	r3, r9
   15064:	add	r1, pc, r1
   15068:	mov	r0, r4
   1506c:	blx	r8
   15070:	ldr	r3, [r4, #24]
   15074:	add	r1, r4, r3, lsl #2
   15078:	ldr	r2, [r1, #28]
   1507c:	add	r2, r2, #1
   15080:	str	r2, [r1, #28]
   15084:	add	r3, r4, r3, lsl #2
   15088:	ldr	r2, [r3, #68]	; 0x44
   1508c:	ldr	r8, [r5, #4]
   15090:	ldr	r3, [r2, #68]	; 0x44
   15094:	cmp	r3, #0
   15098:	beq	1537c <main@@Base+0x10750>
   1509c:	ldr	r3, [r4, #4]
   150a0:	ldr	r1, [pc, #848]	; 153f8 <main@@Base+0x107cc>
   150a4:	mov	r2, r8
   150a8:	add	r1, pc, r1
   150ac:	ldr	r8, [r3, #28]
   150b0:	mov	r0, r4
   150b4:	mov	r3, #0
   150b8:	blx	r8
   150bc:	ldr	r3, [r4, #24]
   150c0:	add	r1, r4, r3, lsl #2
   150c4:	ldr	r2, [r1, #28]
   150c8:	add	r2, r2, #1
   150cc:	str	r2, [r1, #28]
   150d0:	add	r3, r4, r3, lsl #2
   150d4:	ldr	r2, [r3, #68]	; 0x44
   150d8:	ldr	r8, [r5, #8]
   150dc:	ldr	r3, [r2, #68]	; 0x44
   150e0:	cmp	r3, #0
   150e4:	beq	15358 <main@@Base+0x1072c>
   150e8:	ldr	r3, [r4, #4]
   150ec:	ldr	r1, [pc, #776]	; 153fc <main@@Base+0x107d0>
   150f0:	mov	r2, r8
   150f4:	add	r1, pc, r1
   150f8:	ldr	r8, [r3, #28]
   150fc:	mov	r0, r4
   15100:	mov	r3, #0
   15104:	blx	r8
   15108:	ldr	r3, [r4, #24]
   1510c:	add	r1, r4, r3, lsl #2
   15110:	ldr	r2, [r1, #28]
   15114:	add	r2, r2, #1
   15118:	str	r2, [r1, #28]
   1511c:	add	r3, r4, r3, lsl #2
   15120:	ldr	r2, [r3, #68]	; 0x44
   15124:	ldr	r5, [r5, #12]
   15128:	ldr	r3, [r2, #68]	; 0x44
   1512c:	cmp	r3, #0
   15130:	beq	15334 <main@@Base+0x10708>
   15134:	ldr	r3, [r4, #4]
   15138:	ldr	r1, [pc, #704]	; 15400 <main@@Base+0x107d4>
   1513c:	mov	r2, r5
   15140:	add	r1, pc, r1
   15144:	ldr	r5, [r3, #28]
   15148:	mov	r0, r4
   1514c:	mov	r3, #0
   15150:	blx	r5
   15154:	ldr	r3, [r4, #24]
   15158:	add	r1, r4, r3, lsl #2
   1515c:	ldr	r2, [r1, #28]
   15160:	add	r2, r2, #1
   15164:	str	r2, [r1, #28]
   15168:	cmp	r3, #0
   1516c:	bne	1525c <main@@Base+0x10630>
   15170:	ldr	r2, [r4, #4]
   15174:	ldr	r2, [r2, #24]
   15178:	cmp	r2, #0
   1517c:	beq	1518c <main@@Base+0x10560>
   15180:	mov	r0, r4
   15184:	blx	r2
   15188:	ldr	r3, [r4, #24]
   1518c:	sub	r3, r3, #1
   15190:	str	r3, [r4, #24]
   15194:	mov	r1, #0
   15198:	mov	r0, r7
   1519c:	bl	4308 <av_bprint_finalize@plt>
   151a0:	ldr	r3, [pc, #604]	; 15404 <main@@Base+0x107d8>
   151a4:	ldr	r3, [r6, r3]
   151a8:	ldr	r0, [r3]
   151ac:	bl	417c <fflush@plt>
   151b0:	ldr	r2, [sp, #1164]	; 0x48c
   151b4:	ldr	r3, [sl]
   151b8:	cmp	r2, r3
   151bc:	bne	15454 <main@@Base+0x10828>
   151c0:	add	sp, sp, #1168	; 0x490
   151c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   151c8:	ldr	r3, [r4, #24]
   151cc:	ldr	r1, [r4, #4]
   151d0:	add	r3, r4, r3, lsl #2
   151d4:	ldr	r0, [r1, #40]	; 0x28
   151d8:	ldr	r2, [r3, #68]	; 0x44
   151dc:	tst	r0, #1
   151e0:	ldr	r3, [r2, #68]	; 0x44
   151e4:	beq	15040 <main@@Base+0x10414>
   151e8:	cmp	r3, #0
   151ec:	beq	15300 <main@@Base+0x106d4>
   151f0:	ldr	r3, [r1, #36]	; 0x24
   151f4:	ldr	r2, [pc, #524]	; 15408 <main@@Base+0x107dc>
   151f8:	ldr	r1, [pc, #524]	; 1540c <main@@Base+0x107e0>
   151fc:	add	r2, pc, r2
   15200:	add	r1, pc, r1
   15204:	mov	r0, r4
   15208:	blx	r3
   1520c:	ldr	r1, [r4, #24]
   15210:	ldrh	r8, [r5]
   15214:	add	r1, r4, r1, lsl #2
   15218:	ldr	r2, [r1, #68]	; 0x44
   1521c:	ldr	r0, [r1, #28]
   15220:	ldr	r3, [r2, #68]	; 0x44
   15224:	add	r0, r0, #1
   15228:	cmp	r3, #0
   1522c:	str	r0, [r1, #28]
   15230:	mov	r9, #0
   15234:	bne	15050 <main@@Base+0x10424>
   15238:	ldr	r1, [pc, #464]	; 15410 <main@@Base+0x107e4>
   1523c:	ldr	r0, [r2, #64]	; 0x40
   15240:	add	r1, pc, r1
   15244:	mov	r2, r3
   15248:	bl	4644 <av_dict_get@plt>
   1524c:	cmp	r0, #0
   15250:	ldreq	r3, [r4, #24]
   15254:	bne	15050 <main@@Base+0x10424>
   15258:	b	15084 <main@@Base+0x10458>
   1525c:	add	r2, r4, r3, lsl #2
   15260:	ldr	r1, [r2, #64]	; 0x40
   15264:	ldr	r0, [r1]
   15268:	cmn	r0, #1
   1526c:	beq	15170 <main@@Base+0x10544>
   15270:	ldr	r1, [r2, #24]
   15274:	ldr	ip, [r2, #68]	; 0x44
   15278:	cmp	r0, #18
   1527c:	add	r1, r1, #1
   15280:	ldr	r0, [ip]
   15284:	str	r1, [r2, #24]
   15288:	bne	15170 <main@@Base+0x10544>
   1528c:	cmp	r0, #15
   15290:	add	r1, r4, #8192	; 0x2000
   15294:	ldreq	r2, [r1, #2156]	; 0x86c
   15298:	ldrne	r2, [r1, #2160]	; 0x870
   1529c:	addeq	r2, r2, #1
   152a0:	addne	r2, r2, #1
   152a4:	streq	r2, [r1, #2156]	; 0x86c
   152a8:	strne	r2, [r1, #2160]	; 0x870
   152ac:	b	15170 <main@@Base+0x10544>
   152b0:	mov	r0, #0
   152b4:	add	r1, r4, r1, lsl #2
   152b8:	ldr	ip, [r1, #68]	; 0x44
   152bc:	ldr	ip, [ip]
   152c0:	str	r2, [r1, #72]	; 0x48
   152c4:	cmp	ip, #18
   152c8:	str	r0, [r1, #32]
   152cc:	addeq	r2, r4, #8192	; 0x2000
   152d0:	ldreq	r1, [r2, #2160]	; 0x870
   152d4:	streq	r1, [r2, #2164]	; 0x874
   152d8:	b	14ee4 <main@@Base+0x102b8>
   152dc:	ldr	r1, [pc, #304]	; 15414 <main@@Base+0x107e8>
   152e0:	ldr	r0, [r2, #64]	; 0x40
   152e4:	add	r1, pc, r1
   152e8:	mov	r2, r3
   152ec:	bl	4644 <av_dict_get@plt>
   152f0:	cmp	r0, #0
   152f4:	beq	14fd8 <main@@Base+0x103ac>
   152f8:	ldr	r1, [r4, #4]
   152fc:	b	14fa8 <main@@Base+0x1037c>
   15300:	ldr	r1, [pc, #272]	; 15418 <main@@Base+0x107ec>
   15304:	ldr	r0, [r2, #64]	; 0x40
   15308:	add	r1, pc, r1
   1530c:	mov	r2, r3
   15310:	bl	4644 <av_dict_get@plt>
   15314:	cmp	r0, #0
   15318:	ldrne	r1, [r4, #4]
   1531c:	bne	151f0 <main@@Base+0x105c4>
   15320:	ldr	r3, [r4, #24]
   15324:	add	r3, r4, r3, lsl #2
   15328:	ldr	r2, [r3, #68]	; 0x44
   1532c:	ldr	r3, [r2, #68]	; 0x44
   15330:	b	15040 <main@@Base+0x10414>
   15334:	ldr	r1, [pc, #224]	; 1541c <main@@Base+0x107f0>
   15338:	ldr	r0, [r2, #64]	; 0x40
   1533c:	add	r1, pc, r1
   15340:	mov	r2, r3
   15344:	bl	4644 <av_dict_get@plt>
   15348:	cmp	r0, #0
   1534c:	ldreq	r3, [r4, #24]
   15350:	bne	15134 <main@@Base+0x10508>
   15354:	b	15168 <main@@Base+0x1053c>
   15358:	ldr	r1, [pc, #192]	; 15420 <main@@Base+0x107f4>
   1535c:	ldr	r0, [r2, #64]	; 0x40
   15360:	add	r1, pc, r1
   15364:	mov	r2, r3
   15368:	bl	4644 <av_dict_get@plt>
   1536c:	cmp	r0, #0
   15370:	ldreq	r3, [r4, #24]
   15374:	bne	150e8 <main@@Base+0x104bc>
   15378:	b	1511c <main@@Base+0x104f0>
   1537c:	ldr	r1, [pc, #160]	; 15424 <main@@Base+0x107f8>
   15380:	ldr	r0, [r2, #64]	; 0x40
   15384:	add	r1, pc, r1
   15388:	mov	r2, r3
   1538c:	bl	4644 <av_dict_get@plt>
   15390:	cmp	r0, #0
   15394:	ldreq	r3, [r4, #24]
   15398:	bne	1509c <main@@Base+0x10470>
   1539c:	b	150d0 <main@@Base+0x104a4>
   153a0:	ldr	r1, [pc, #128]	; 15428 <main@@Base+0x107fc>
   153a4:	ldr	r0, [r2, #64]	; 0x40
   153a8:	add	r1, pc, r1
   153ac:	mov	r2, r3
   153b0:	bl	4644 <av_dict_get@plt>
   153b4:	cmp	r0, #0
   153b8:	ldreq	r3, [r4, #24]
   153bc:	bne	14f14 <main@@Base+0x102e8>
   153c0:	b	14f48 <main@@Base+0x1031c>
   153c4:	nop	{0}
   153c8:	adcsge	lr, r5, sp, lsl #27
   153cc:	mrccc	6, 5, ip, cr0, cr7, {7}
   153d0:	andeq	ip, r1, r4, ror sp
   153d4:	andeq	r0, r0, r8, ror #7
   153d8:	andeq	r9, r0, ip, asr ip
   153dc:	andeq	r9, r0, r8, asr #24
   153e0:	andeq	sl, r0, r0, asr r7
   153e4:	muleq	r0, r4, fp
   153e8:	andeq	sl, r0, r8, lsl r7
   153ec:	andeq	r9, r0, r0, rrx
   153f0:	andeq	r9, r0, r0, lsl sp
   153f4:	andeq	r7, r0, r8, asr #20
   153f8:	andeq	r9, r0, r0, ror #21
   153fc:	andeq	r9, r0, r8, lsr #21
   15400:	andeq	r9, r0, r0, ror sl
   15404:			; <UNDEFINED> instruction: 0x000003b8
   15408:	andeq	r9, r0, ip, asr #18
   1540c:	andeq	r9, r0, r4, lsr fp
   15410:	andeq	r7, r0, ip, ror #16
   15414:	andeq	sl, r0, ip, ror #7
   15418:	andeq	r9, r0, ip, lsr #20
   1541c:	andeq	r9, r0, r4, ror r8
   15420:	andeq	r9, r0, ip, lsr r8
   15424:	andeq	r9, r0, r4, lsl #16
   15428:	andeq	r9, r0, r8, asr #15
   1542c:	muleq	r0, r8, r2
   15430:	ldr	r1, [pc, #-12]	; 1542c <main@@Base+0x10800>
   15434:	ldr	r0, [r2, #64]	; 0x40
   15438:	add	r1, pc, r1
   1543c:	mov	r2, r3
   15440:	bl	4644 <av_dict_get@plt>
   15444:	cmp	r0, #0
   15448:	bne	14f6c <main@@Base+0x10340>
   1544c:	b	14fd8 <main@@Base+0x103ac>
   15450:	bl	11920 <main@@Base+0xccf4>
   15454:	bl	3f00 <__stack_chk_fail@plt>
   15458:	push	{r4, r5, r6, r7, r8, lr}
   1545c:	vpush	{d8}
   15460:	cmp	r3, #-2147483648	; 0x80000000
   15464:	mov	r7, r3
   15468:	ldr	r3, [pc, #332]	; 155bc <main@@Base+0x10990>
   1546c:	ldr	ip, [pc, #332]	; 155c0 <main@@Base+0x10994>
   15470:	add	r3, pc, r3
   15474:	ldr	r5, [r3, ip]
   15478:	mov	r6, r2
   1547c:	cmpeq	r2, #0
   15480:	ldr	r2, [r5]
   15484:	sub	sp, sp, #144	; 0x90
   15488:	mov	r4, r0
   1548c:	mov	r8, r1
   15490:	ldr	r3, [sp, #176]	; 0xb0
   15494:	str	r2, [sp, #140]	; 0x8c
   15498:	beq	15510 <main@@Base+0x108e4>
   1549c:	vldr	s12, [r3]
   154a0:	vldr	s14, [r3, #4]
   154a4:	vcvt.f64.s32	d6, s12
   154a8:	vcvt.f64.s32	d7, s14
   154ac:	mov	r0, r6
   154b0:	mov	r1, r7
   154b4:	vdiv.f64	d8, d6, d7
   154b8:	bl	1b8ac <vc_gpuserv_execute_code@@Base+0x718>
   154bc:	vmov	d7, r0, r1
   154c0:	vmul.f64	d7, d8, d7
   154c4:	ldr	ip, [pc, #248]	; 155c4 <main@@Base+0x10998>
   154c8:	add	r6, sp, #12
   154cc:	add	ip, pc, ip
   154d0:	add	ip, ip, #16
   154d4:	vmov	r2, r3, d7
   154d8:	str	ip, [sp]
   154dc:	mov	r0, r6
   154e0:	bl	12248 <main@@Base+0xd61c>
   154e4:	ldr	r3, [r4, #24]
   154e8:	add	r3, r4, r3, lsl #2
   154ec:	ldr	r2, [r3, #68]	; 0x44
   154f0:	ldr	r3, [r2, #68]	; 0x44
   154f4:	cmp	r3, #0
   154f8:	beq	1559c <main@@Base+0x10970>
   154fc:	ldr	r3, [r4, #4]
   15500:	mov	r2, r6
   15504:	mov	r1, r8
   15508:	ldr	r3, [r3, #36]	; 0x24
   1550c:	b	15548 <main@@Base+0x1091c>
   15510:	ldr	r2, [r0, #4]
   15514:	ldr	r3, [r0, #24]
   15518:	ldr	r0, [r2, #40]	; 0x28
   1551c:	add	r3, r4, r3, lsl #2
   15520:	tst	r0, #1
   15524:	ldr	r0, [r3, #68]	; 0x44
   15528:	beq	15564 <main@@Base+0x10938>
   1552c:	ldr	r3, [r0, #68]	; 0x44
   15530:	cmp	r3, #0
   15534:	beq	15580 <main@@Base+0x10954>
   15538:	mov	r1, r8
   1553c:	ldr	r3, [r2, #36]	; 0x24
   15540:	ldr	r2, [pc, #128]	; 155c8 <main@@Base+0x1099c>
   15544:	add	r2, pc, r2
   15548:	mov	r0, r4
   1554c:	blx	r3
   15550:	ldr	r3, [r4, #24]
   15554:	add	r4, r4, r3, lsl #2
   15558:	ldr	r3, [r4, #28]
   1555c:	add	r3, r3, #1
   15560:	str	r3, [r4, #28]
   15564:	ldr	r2, [sp, #140]	; 0x8c
   15568:	ldr	r3, [r5]
   1556c:	cmp	r2, r3
   15570:	bne	155b8 <main@@Base+0x1098c>
   15574:	add	sp, sp, #144	; 0x90
   15578:	vpop	{d8}
   1557c:	pop	{r4, r5, r6, r7, r8, pc}
   15580:	ldr	r0, [r0, #64]	; 0x40
   15584:	mov	r2, r3
   15588:	bl	4644 <av_dict_get@plt>
   1558c:	cmp	r0, #0
   15590:	beq	15564 <main@@Base+0x10938>
   15594:	ldr	r2, [r4, #4]
   15598:	b	15538 <main@@Base+0x1090c>
   1559c:	ldr	r0, [r2, #64]	; 0x40
   155a0:	mov	r1, r8
   155a4:	mov	r2, r3
   155a8:	bl	4644 <av_dict_get@plt>
   155ac:	cmp	r0, #0
   155b0:	bne	154fc <main@@Base+0x108d0>
   155b4:	b	15564 <main@@Base+0x10938>
   155b8:	bl	3f00 <__stack_chk_fail@plt>
   155bc:	andeq	ip, r1, ip, lsl #15
   155c0:	andeq	r0, r0, r8, ror #7
   155c4:	muleq	r0, r4, fp
   155c8:	andeq	r9, r0, r4, lsl #12
   155cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   155d0:	vpush	{d8}
   155d4:	mov	r4, r0
   155d8:	ldr	r0, [pc, #880]	; 15950 <main@@Base+0x10d24>
   155dc:	ldr	lr, [pc, #880]	; 15954 <main@@Base+0x10d28>
   155e0:	add	r0, pc, r0
   155e4:	ldr	lr, [r0, lr]
   155e8:	ldr	ip, [r4, #24]
   155ec:	mov	r5, lr
   155f0:	sub	sp, sp, #76	; 0x4c
   155f4:	str	lr, [sp, #36]	; 0x24
   155f8:	ldr	r6, [r5]
   155fc:	add	lr, ip, #1
   15600:	cmp	lr, #9
   15604:	str	r2, [sp, #44]	; 0x2c
   15608:	str	r1, [sp, #40]	; 0x28
   1560c:	str	lr, [r4, #24]
   15610:	str	r6, [sp, #68]	; 0x44
   15614:	ldr	sl, [sp, #120]	; 0x78
   15618:	ldr	r2, [sp, #124]	; 0x7c
   1561c:	ldr	r7, [sp, #128]	; 0x80
   15620:	bgt	16400 <main@@Base+0x117d4>
   15624:	mov	r5, r3
   15628:	ldr	r3, [r4, #16]
   1562c:	add	r2, r2, r2, lsl #3
   15630:	cmp	lr, #0
   15634:	add	r2, r3, r2, lsl #3
   15638:	streq	lr, [r4, #28]
   1563c:	streq	r2, [r4, #68]	; 0x44
   15640:	bne	15e30 <main@@Base+0x11204>
   15644:	ldr	r3, [r4, #4]
   15648:	ldr	r3, [r3, #20]
   1564c:	cmp	r3, #0
   15650:	beq	1565c <main@@Base+0x10a30>
   15654:	mov	r0, r4
   15658:	blx	r3
   1565c:	cmp	sl, #0
   15660:	ble	162a4 <main@@Base+0x11678>
   15664:	mov	r6, #0
   15668:	vldr	d8, [pc, #728]	; 15948 <main@@Base+0x10d1c>
   1566c:	ldr	r3, [pc, #740]	; 15958 <main@@Base+0x10d2c>
   15670:	add	r7, r7, r7, lsl #3
   15674:	add	r3, pc, r3
   15678:	ldr	fp, [pc, #732]	; 1595c <main@@Base+0x10d30>
   1567c:	str	r3, [sp, #32]
   15680:	lsl	r3, r7, #3
   15684:	add	fp, pc, fp
   15688:	str	r3, [sp, #20]
   1568c:	ldr	r0, [r5, #8]
   15690:	bl	4548 <av_packet_side_data_name@plt>
   15694:	ldr	r2, [r4, #24]
   15698:	mov	r7, r0
   1569c:	add	r3, r2, #1
   156a0:	cmp	r3, #9
   156a4:	str	r3, [r4, #24]
   156a8:	bgt	163cc <main@@Base+0x117a0>
   156ac:	ldr	r1, [r4, #16]
   156b0:	ldr	r0, [sp, #20]
   156b4:	cmp	r3, #0
   156b8:	add	r1, r1, r0
   156bc:	streq	r3, [r4, #28]
   156c0:	streq	r1, [r4, #68]	; 0x44
   156c4:	beq	156f0 <main@@Base+0x10ac4>
   156c8:	mov	r0, #0
   156cc:	add	r2, r4, r2, lsl #2
   156d0:	ldr	ip, [r2, #68]	; 0x44
   156d4:	ldr	ip, [ip]
   156d8:	str	r1, [r2, #72]	; 0x48
   156dc:	cmp	ip, #18
   156e0:	str	r0, [r2, #32]
   156e4:	addeq	r2, r4, #8192	; 0x2000
   156e8:	ldreq	r1, [r2, #2160]	; 0x870
   156ec:	streq	r1, [r2, #2164]	; 0x874
   156f0:	ldr	r2, [r4, #4]
   156f4:	ldr	r2, [r2, #20]
   156f8:	cmp	r2, #0
   156fc:	beq	1570c <main@@Base+0x10ae0>
   15700:	mov	r0, r4
   15704:	blx	r2
   15708:	ldr	r3, [r4, #24]
   1570c:	add	r3, r4, r3, lsl #2
   15710:	ldr	r2, [r3, #68]	; 0x44
   15714:	cmp	r7, #0
   15718:	ldr	r3, [r2, #68]	; 0x44
   1571c:	moveq	r7, fp
   15720:	cmp	r3, #0
   15724:	beq	15928 <main@@Base+0x10cfc>
   15728:	ldr	r3, [r4, #4]
   1572c:	ldr	r1, [pc, #556]	; 15960 <main@@Base+0x10d34>
   15730:	mov	r2, r7
   15734:	ldr	r3, [r3, #36]	; 0x24
   15738:	add	r1, pc, r1
   1573c:	mov	r0, r4
   15740:	blx	r3
   15744:	ldr	r3, [r4, #24]
   15748:	add	r3, r4, r3, lsl #2
   1574c:	ldr	r2, [r3, #28]
   15750:	add	r2, r2, #1
   15754:	str	r2, [r3, #28]
   15758:	ldr	r2, [r5, #8]
   1575c:	cmp	r2, #5
   15760:	beq	15880 <main@@Base+0x10c54>
   15764:	cmp	r2, #6
   15768:	beq	15b9c <main@@Base+0x10f70>
   1576c:	cmp	r2, #21
   15770:	beq	15c34 <main@@Base+0x11008>
   15774:	cmp	r2, #11
   15778:	beq	15a2c <main@@Base+0x10e00>
   1577c:	cmp	r2, #20
   15780:	bne	15da0 <main@@Base+0x11174>
   15784:	ldr	r7, [r5]
   15788:	ldr	r3, [r7, #80]	; 0x50
   1578c:	cmp	r3, #0
   15790:	bne	15f10 <main@@Base+0x112e4>
   15794:	ldr	r3, [r7, #84]	; 0x54
   15798:	cmp	r3, #0
   1579c:	bne	15ed0 <main@@Base+0x112a4>
   157a0:	ldr	r3, [r4, #24]
   157a4:	add	r2, r4, r3, lsl #2
   157a8:	ldr	r1, [r2, #68]	; 0x44
   157ac:	cmp	r3, #0
   157b0:	beq	15800 <main@@Base+0x10bd4>
   157b4:	add	r2, r4, r3, lsl #2
   157b8:	ldr	r0, [r2, #64]	; 0x40
   157bc:	ldr	ip, [r0]
   157c0:	cmn	ip, #1
   157c4:	beq	15800 <main@@Base+0x10bd4>
   157c8:	ldr	r0, [r2, #24]
   157cc:	cmp	ip, #18
   157d0:	add	r0, r0, #1
   157d4:	ldr	r1, [r1]
   157d8:	str	r0, [r2, #24]
   157dc:	bne	15800 <main@@Base+0x10bd4>
   157e0:	cmp	r1, #15
   157e4:	add	r1, r4, #8192	; 0x2000
   157e8:	ldreq	r2, [r1, #2156]	; 0x86c
   157ec:	ldrne	r2, [r1, #2160]	; 0x870
   157f0:	addeq	r2, r2, #1
   157f4:	addne	r2, r2, #1
   157f8:	streq	r2, [r1, #2156]	; 0x86c
   157fc:	strne	r2, [r1, #2160]	; 0x870
   15800:	ldr	r2, [r4, #4]
   15804:	ldr	r2, [r2, #24]
   15808:	cmp	r2, #0
   1580c:	beq	15904 <main@@Base+0x10cd8>
   15810:	mov	r0, r4
   15814:	blx	r2
   15818:	ldr	r3, [r4, #24]
   1581c:	add	r6, r6, #1
   15820:	sub	r3, r3, #1
   15824:	cmp	sl, r6
   15828:	add	r5, r5, #12
   1582c:	str	r3, [r4, #24]
   15830:	bne	1568c <main@@Base+0x10a60>
   15834:	cmp	r3, #0
   15838:	bne	15e5c <main@@Base+0x11230>
   1583c:	ldr	r2, [r4, #4]
   15840:	ldr	r2, [r2, #24]
   15844:	cmp	r2, #0
   15848:	beq	15858 <main@@Base+0x10c2c>
   1584c:	mov	r0, r4
   15850:	blx	r2
   15854:	ldr	r3, [r4, #24]
   15858:	ldr	r2, [sp, #36]	; 0x24
   1585c:	ldr	r1, [sp, #68]	; 0x44
   15860:	ldr	r2, [r2]
   15864:	sub	r3, r3, #1
   15868:	cmp	r1, r2
   1586c:	str	r3, [r4, #24]
   15870:	bne	16404 <main@@Base+0x117d8>
   15874:	add	sp, sp, #76	; 0x4c
   15878:	vpop	{d8}
   1587c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15880:	ldr	r3, [r5, #4]
   15884:	cmp	r3, #35	; 0x23
   15888:	ble	157a0 <main@@Base+0x10b74>
   1588c:	ldr	r1, [r5]
   15890:	mov	r0, r4
   15894:	bl	14900 <main@@Base+0xfcd4>
   15898:	ldr	r0, [r5]
   1589c:	bl	43bc <av_display_rotation_get@plt>
   158a0:	vmov	r0, r1, d0
   158a4:	bl	1b9f0 <vc_gpuserv_execute_code@@Base+0x85c>
   158a8:	ldr	r3, [r4, #24]
   158ac:	mov	r8, r0
   158b0:	add	r3, r4, r3, lsl #2
   158b4:	ldr	r2, [r3, #68]	; 0x44
   158b8:	mov	r9, r1
   158bc:	ldr	r3, [r2, #68]	; 0x44
   158c0:	cmp	r3, #0
   158c4:	beq	1607c <main@@Base+0x11450>
   158c8:	mov	r2, r8
   158cc:	mov	r3, r9
   158d0:	ldr	r1, [r4, #4]
   158d4:	ldr	r7, [r1, #28]
   158d8:	ldr	r1, [pc, #132]	; 15964 <main@@Base+0x10d38>
   158dc:	add	r1, pc, r1
   158e0:	mov	r0, r4
   158e4:	blx	r7
   158e8:	ldr	r3, [r4, #24]
   158ec:	add	r2, r4, r3, lsl #2
   158f0:	ldr	r0, [r2, #28]
   158f4:	ldr	r1, [r2, #68]	; 0x44
   158f8:	add	r0, r0, #1
   158fc:	str	r0, [r2, #28]
   15900:	b	157ac <main@@Base+0x10b80>
   15904:	add	r6, r6, #1
   15908:	sub	r3, r3, #1
   1590c:	cmp	r6, sl
   15910:	str	r3, [r4, #24]
   15914:	add	r5, r5, #12
   15918:	bne	1568c <main@@Base+0x10a60>
   1591c:	cmp	r3, #0
   15920:	beq	1583c <main@@Base+0x10c10>
   15924:	b	15e5c <main@@Base+0x11230>
   15928:	ldr	r0, [r2, #64]	; 0x40
   1592c:	ldr	r1, [sp, #32]
   15930:	mov	r2, r3
   15934:	bl	4644 <av_dict_get@plt>
   15938:	cmp	r0, #0
   1593c:	bne	15728 <main@@Base+0x10afc>
   15940:	b	15758 <main@@Base+0x10b2c>
   15944:	nop	{0}
   15948:	andeq	r0, r0, r0
   1594c:	cdpcc	0, 15, cr0, cr0, cr0, {0}
   15950:	andeq	ip, r1, ip, lsl r6
   15954:	andeq	r0, r0, r8, ror #7
   15958:	andeq	r9, r0, r0, asr r5
   1595c:	andeq	r9, r0, r8, lsr r5
   15960:	andeq	r9, r0, ip, lsl #9
   15964:	strdeq	r9, [r0], -r8
   15968:	andeq	r9, r0, ip, asr #3
   1596c:	andeq	r9, r0, r4, ror r1
   15970:	andeq	r9, r0, r8, lsr #2
   15974:	andeq	r9, r0, r0, ror #1
   15978:	andeq	r9, r0, ip
   1597c:			; <UNDEFINED> instruction: 0x00008fbc
   15980:	andeq	r8, r0, r8, lsl #31
   15984:	andeq	r8, r0, r0, asr pc
   15988:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   1598c:	andeq	r8, r0, r8, lsr #29
   15990:	andeq	r8, r0, r0, lsr #30
   15994:	andeq	r8, r0, r0, ror #29
   15998:	andeq	r8, r0, r0, lsr sp
   1599c:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   159a0:	strdeq	r8, [r0], -r0
   159a4:	andeq	r8, r0, r8, ror #26
   159a8:	andeq	r8, r0, r8, asr sp
   159ac:	andeq	r8, r0, r8, asr #26
   159b0:	andeq	r8, r0, r8, lsr sp
   159b4:	andeq	r8, r0, r8, lsr #26
   159b8:	andeq	r8, r0, r8, lsl sp
   159bc:	andeq	r8, r0, r8, lsl #26
   159c0:	andeq	r8, r0, r4, lsl #26
   159c4:	andeq	r8, r0, r8, lsl #24
   159c8:	andeq	r8, r0, r4, asr #24
   159cc:	andeq	r8, r0, ip, lsl ip
   159d0:	strdeq	r8, [r0], -r4
   159d4:	muleq	r0, r0, fp
   159d8:	andeq	r8, r0, r0, asr fp
   159dc:	muleq	r0, r4, fp
   159e0:	andeq	r8, r0, r8, lsl #24
   159e4:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   159e8:	andeq	r8, r0, r4, lsr #22
   159ec:	andeq	r8, r0, r0, asr sl
   159f0:	andeq	r8, r0, r0, lsl sl
   159f4:	ldrdeq	r8, [r0], -r0
   159f8:	muleq	r0, r0, r9
   159fc:			; <UNDEFINED> instruction: 0x000089b8
   15a00:	andeq	r8, r0, ip, lsl #19
   15a04:	andeq	r8, r0, r4, asr r9
   15a08:	andeq	r8, r0, r0, lsr #18
   15a0c:	ldrdeq	r8, [r0], -ip
   15a10:			; <UNDEFINED> instruction: 0x000088b0
   15a14:	andeq	r8, r0, r0, lsl #17
   15a18:	andeq	r8, r0, r0, asr r8
   15a1c:	andeq	r8, r0, r4, lsl r2
   15a20:	andeq	r0, r0, r6, ror r2
   15a24:	andeq	r6, r0, r8, lsl r1
   15a28:	andeq	r8, r0, r8, ror #3
   15a2c:	ldr	r1, [r5, #4]
   15a30:	ldr	r3, [r4, #24]
   15a34:	cmp	r1, #10
   15a38:	add	r2, r4, r3, lsl #2
   15a3c:	ldr	r1, [r2, #68]	; 0x44
   15a40:	bne	157ac <main@@Base+0x10b80>
   15a44:	ldr	r0, [r5]
   15a48:	ldr	r3, [r1, #68]	; 0x44
   15a4c:	ldrb	ip, [r0, #1]
   15a50:	ldrb	r2, [r0]
   15a54:	ldrb	r7, [r0, #3]
   15a58:	orr	r2, r2, ip, lsl #8
   15a5c:	ldrb	ip, [r0, #2]
   15a60:	cmp	r3, #0
   15a64:	orr	r2, r2, ip, lsl #16
   15a68:	orr	r7, r2, r7, lsl #24
   15a6c:	beq	1631c <main@@Base+0x116f0>
   15a70:	ldr	r3, [r4, #4]
   15a74:	ldr	r1, [pc, #-276]	; 15968 <main@@Base+0x10d3c>
   15a78:	mov	r2, r7
   15a7c:	add	r1, pc, r1
   15a80:	ldr	r7, [r3, #28]
   15a84:	mov	r0, r4
   15a88:	mov	r3, #0
   15a8c:	blx	r7
   15a90:	ldr	r3, [r4, #24]
   15a94:	add	r1, r4, r3, lsl #2
   15a98:	ldr	r2, [r1, #28]
   15a9c:	add	r2, r2, #1
   15aa0:	str	r2, [r1, #28]
   15aa4:	ldr	r1, [r5]
   15aa8:	add	r3, r4, r3, lsl #2
   15aac:	ldr	r0, [r3, #68]	; 0x44
   15ab0:	ldrb	r2, [r1, #4]
   15ab4:	ldrb	r3, [r1, #5]
   15ab8:	ldrb	ip, [r1, #6]
   15abc:	orr	r2, r2, r3, lsl #8
   15ac0:	ldr	r3, [r0, #68]	; 0x44
   15ac4:	ldrb	r7, [r1, #7]
   15ac8:	orr	r2, r2, ip, lsl #16
   15acc:	cmp	r3, #0
   15ad0:	orr	r7, r2, r7, lsl #24
   15ad4:	beq	162f8 <main@@Base+0x116cc>
   15ad8:	ldr	r3, [r4, #4]
   15adc:	ldr	r1, [pc, #-376]	; 1596c <main@@Base+0x10d40>
   15ae0:	mov	r2, r7
   15ae4:	add	r1, pc, r1
   15ae8:	ldr	r7, [r3, #28]
   15aec:	mov	r0, r4
   15af0:	mov	r3, #0
   15af4:	blx	r7
   15af8:	ldr	r3, [r4, #24]
   15afc:	add	r1, r4, r3, lsl #2
   15b00:	ldr	r2, [r1, #28]
   15b04:	add	r2, r2, #1
   15b08:	str	r2, [r1, #28]
   15b0c:	add	r3, r4, r3, lsl #2
   15b10:	ldr	r2, [r3, #68]	; 0x44
   15b14:	ldr	r1, [r5]
   15b18:	ldr	r3, [r2, #68]	; 0x44
   15b1c:	ldrb	r8, [r1, #8]
   15b20:	cmp	r3, #0
   15b24:	mov	r9, #0
   15b28:	beq	162d4 <main@@Base+0x116a8>
   15b2c:	ldr	r1, [r4, #4]
   15b30:	mov	r2, r8
   15b34:	ldr	r7, [r1, #28]
   15b38:	ldr	r1, [pc, #-464]	; 15970 <main@@Base+0x10d44>
   15b3c:	mov	r3, r9
   15b40:	add	r1, pc, r1
   15b44:	mov	r0, r4
   15b48:	blx	r7
   15b4c:	ldr	r3, [r4, #24]
   15b50:	add	r1, r4, r3, lsl #2
   15b54:	ldr	r2, [r1, #28]
   15b58:	add	r2, r2, #1
   15b5c:	str	r2, [r1, #28]
   15b60:	add	r3, r4, r3, lsl #2
   15b64:	ldr	r2, [r3, #68]	; 0x44
   15b68:	ldr	r1, [r5]
   15b6c:	ldr	r3, [r2, #68]	; 0x44
   15b70:	ldrb	r8, [r1, #9]
   15b74:	cmp	r3, #0
   15b78:	mov	r9, #0
   15b7c:	beq	162b4 <main@@Base+0x11688>
   15b80:	ldr	r1, [r4, #4]
   15b84:	mov	r2, r8
   15b88:	ldr	r7, [r1, #28]
   15b8c:	ldr	r1, [pc, #-544]	; 15974 <main@@Base+0x10d48>
   15b90:	mov	r3, r9
   15b94:	add	r1, pc, r1
   15b98:	b	158e0 <main@@Base+0x10cb4>
   15b9c:	ldr	r7, [r5]
   15ba0:	ldr	r0, [r7]
   15ba4:	bl	4380 <av_stereo3d_type_name@plt>
   15ba8:	ldr	r3, [r4, #24]
   15bac:	mov	r8, r0
   15bb0:	add	r3, r4, r3, lsl #2
   15bb4:	ldr	r2, [r3, #68]	; 0x44
   15bb8:	ldr	r3, [r2, #68]	; 0x44
   15bbc:	cmp	r3, #0
   15bc0:	beq	15fd0 <main@@Base+0x113a4>
   15bc4:	ldr	r3, [r4, #4]
   15bc8:	ldr	r1, [pc, #-600]	; 15978 <main@@Base+0x10d4c>
   15bcc:	mov	r2, r8
   15bd0:	ldr	r3, [r3, #36]	; 0x24
   15bd4:	add	r1, pc, r1
   15bd8:	mov	r0, r4
   15bdc:	blx	r3
   15be0:	ldr	r3, [r4, #24]
   15be4:	add	r1, r4, r3, lsl #2
   15be8:	ldr	r2, [r1, #28]
   15bec:	add	r2, r2, #1
   15bf0:	str	r2, [r1, #28]
   15bf4:	add	r3, r4, r3, lsl #2
   15bf8:	ldr	r2, [r3, #68]	; 0x44
   15bfc:	ldr	r8, [r7, #4]
   15c00:	ldr	r3, [r2, #68]	; 0x44
   15c04:	and	r8, r8, #1
   15c08:	cmp	r3, #0
   15c0c:	uxtb	r8, r8
   15c10:	mov	r9, #0
   15c14:	beq	15eb0 <main@@Base+0x11284>
   15c18:	ldr	r1, [r4, #4]
   15c1c:	mov	r2, r8
   15c20:	ldr	r7, [r1, #28]
   15c24:	ldr	r1, [pc, #-688]	; 1597c <main@@Base+0x10d50>
   15c28:	mov	r3, r9
   15c2c:	add	r1, pc, r1
   15c30:	b	158e0 <main@@Base+0x10cb4>
   15c34:	ldr	r7, [r5]
   15c38:	ldr	r0, [r7]
   15c3c:	bl	4038 <av_spherical_projection_name@plt>
   15c40:	ldr	r3, [r4, #24]
   15c44:	mov	r8, r0
   15c48:	add	r3, r4, r3, lsl #2
   15c4c:	ldr	r2, [r3, #68]	; 0x44
   15c50:	ldr	r3, [r2, #68]	; 0x44
   15c54:	cmp	r3, #0
   15c58:	beq	1605c <main@@Base+0x11430>
   15c5c:	ldr	r3, [r4, #4]
   15c60:	ldr	r1, [pc, #-744]	; 15980 <main@@Base+0x10d54>
   15c64:	mov	r2, r8
   15c68:	ldr	r3, [r3, #36]	; 0x24
   15c6c:	add	r1, pc, r1
   15c70:	mov	r0, r4
   15c74:	blx	r3
   15c78:	ldr	r3, [r4, #24]
   15c7c:	add	r3, r4, r3, lsl #2
   15c80:	ldr	r2, [r3, #28]
   15c84:	add	r2, r2, #1
   15c88:	str	r2, [r3, #28]
   15c8c:	ldr	r3, [r7]
   15c90:	cmp	r3, #1
   15c94:	beq	1609c <main@@Base+0x11470>
   15c98:	cmp	r3, #2
   15c9c:	beq	16154 <main@@Base+0x11528>
   15ca0:	ldr	r8, [r4, #24]
   15ca4:	vldr	s15, [r7, #4]
   15ca8:	vcvt.f64.s32	d7, s15
   15cac:	vmul.f64	d7, d7, d8
   15cb0:	vmov	r0, r1, d7
   15cb4:	bl	1b9f0 <vc_gpuserv_execute_code@@Base+0x85c>
   15cb8:	add	r3, r4, r8, lsl #2
   15cbc:	ldr	r2, [r3, #68]	; 0x44
   15cc0:	strd	r0, [sp, #24]
   15cc4:	ldr	r3, [r2, #68]	; 0x44
   15cc8:	cmp	r3, #0
   15ccc:	beq	16038 <main@@Base+0x1140c>
   15cd0:	ldrd	r2, [sp, #24]
   15cd4:	ldr	r1, [r4, #4]
   15cd8:	mov	r0, r4
   15cdc:	ldr	r8, [r1, #28]
   15ce0:	ldr	r1, [pc, #-868]	; 15984 <main@@Base+0x10d58>
   15ce4:	add	r1, pc, r1
   15ce8:	blx	r8
   15cec:	ldr	r8, [r4, #24]
   15cf0:	add	r1, r4, r8, lsl #2
   15cf4:	ldr	r2, [r1, #28]
   15cf8:	add	r2, r2, #1
   15cfc:	str	r2, [r1, #28]
   15d00:	vldr	s15, [r7, #8]
   15d04:	vcvt.f64.s32	d7, s15
   15d08:	vmul.f64	d7, d7, d8
   15d0c:	vmov	r0, r1, d7
   15d10:	bl	1b9f0 <vc_gpuserv_execute_code@@Base+0x85c>
   15d14:	add	r3, r4, r8, lsl #2
   15d18:	ldr	r2, [r3, #68]	; 0x44
   15d1c:	strd	r0, [sp, #24]
   15d20:	ldr	r3, [r2, #68]	; 0x44
   15d24:	cmp	r3, #0
   15d28:	beq	16014 <main@@Base+0x113e8>
   15d2c:	ldrd	r2, [sp, #24]
   15d30:	ldr	r1, [r4, #4]
   15d34:	mov	r0, r4
   15d38:	ldr	r8, [r1, #28]
   15d3c:	ldr	r1, [pc, #-956]	; 15988 <main@@Base+0x10d5c>
   15d40:	add	r1, pc, r1
   15d44:	blx	r8
   15d48:	ldr	r8, [r4, #24]
   15d4c:	add	r1, r4, r8, lsl #2
   15d50:	ldr	r2, [r1, #28]
   15d54:	add	r2, r2, #1
   15d58:	str	r2, [r1, #28]
   15d5c:	vldr	s14, [r7, #12]
   15d60:	vcvt.f64.s32	d7, s14
   15d64:	vmul.f64	d7, d7, d8
   15d68:	vmov	r0, r1, d7
   15d6c:	bl	1b9f0 <vc_gpuserv_execute_code@@Base+0x85c>
   15d70:	add	r3, r4, r8, lsl #2
   15d74:	ldr	r2, [r3, #68]	; 0x44
   15d78:	strd	r0, [sp, #24]
   15d7c:	ldr	r3, [r2, #68]	; 0x44
   15d80:	cmp	r3, #0
   15d84:	beq	15ff4 <main@@Base+0x113c8>
   15d88:	ldrd	r2, [sp, #24]
   15d8c:	ldr	r1, [r4, #4]
   15d90:	ldr	r7, [r1, #28]
   15d94:	ldr	r1, [pc, #-1040]	; 1598c <main@@Base+0x10d60>
   15d98:	add	r1, pc, r1
   15d9c:	b	158e0 <main@@Base+0x10cb4>
   15da0:	ldr	r3, [r4, #24]
   15da4:	cmp	r2, #22
   15da8:	add	r2, r4, r3, lsl #2
   15dac:	ldr	r1, [r2, #68]	; 0x44
   15db0:	bne	157ac <main@@Base+0x10b80>
   15db4:	ldr	r3, [r1, #68]	; 0x44
   15db8:	ldr	r7, [r5]
   15dbc:	cmp	r3, #0
   15dc0:	ldr	r8, [r7]
   15dc4:	beq	16110 <main@@Base+0x114e4>
   15dc8:	ldr	r3, [r4, #4]
   15dcc:	ldr	r1, [pc, #-1092]	; 15990 <main@@Base+0x10d64>
   15dd0:	mov	r2, r8
   15dd4:	add	r1, pc, r1
   15dd8:	ldr	r8, [r3, #28]
   15ddc:	mov	r0, r4
   15de0:	mov	r3, #0
   15de4:	blx	r8
   15de8:	ldr	r3, [r4, #24]
   15dec:	add	r1, r4, r3, lsl #2
   15df0:	ldr	r2, [r1, #28]
   15df4:	add	r2, r2, #1
   15df8:	str	r2, [r1, #28]
   15dfc:	add	r3, r4, r3, lsl #2
   15e00:	ldr	r2, [r3, #68]	; 0x44
   15e04:	ldr	r7, [r7, #4]
   15e08:	ldr	r3, [r2, #68]	; 0x44
   15e0c:	cmp	r3, #0
   15e10:	beq	160f0 <main@@Base+0x114c4>
   15e14:	ldr	r3, [r4, #4]
   15e18:	ldr	r1, [pc, #-1164]	; 15994 <main@@Base+0x10d68>
   15e1c:	mov	r2, r7
   15e20:	add	r1, pc, r1
   15e24:	ldr	r7, [r3, #28]
   15e28:	mov	r3, #0
   15e2c:	b	158e0 <main@@Base+0x10cb4>
   15e30:	mov	r3, #0
   15e34:	add	ip, r4, ip, lsl #2
   15e38:	ldr	r1, [ip, #68]	; 0x44
   15e3c:	ldr	r1, [r1]
   15e40:	str	r3, [ip, #32]
   15e44:	cmp	r1, #18
   15e48:	str	r2, [ip, #72]	; 0x48
   15e4c:	addeq	r3, r4, #8192	; 0x2000
   15e50:	ldreq	r2, [r3, #2160]	; 0x870
   15e54:	streq	r2, [r3, #2164]	; 0x874
   15e58:	b	15644 <main@@Base+0x10a18>
   15e5c:	add	r2, r4, r3, lsl #2
   15e60:	ldr	r1, [r2, #64]	; 0x40
   15e64:	ldr	r0, [r1]
   15e68:	cmn	r0, #1
   15e6c:	beq	1583c <main@@Base+0x10c10>
   15e70:	ldr	r1, [r2, #24]
   15e74:	ldr	ip, [r2, #68]	; 0x44
   15e78:	cmp	r0, #18
   15e7c:	add	r1, r1, #1
   15e80:	ldr	r0, [ip]
   15e84:	str	r1, [r2, #24]
   15e88:	bne	1583c <main@@Base+0x10c10>
   15e8c:	cmp	r0, #15
   15e90:	add	r1, r4, #8192	; 0x2000
   15e94:	ldreq	r2, [r1, #2156]	; 0x86c
   15e98:	ldrne	r2, [r1, #2160]	; 0x870
   15e9c:	addeq	r2, r2, #1
   15ea0:	addne	r2, r2, #1
   15ea4:	streq	r2, [r1, #2156]	; 0x86c
   15ea8:	strne	r2, [r1, #2160]	; 0x870
   15eac:	b	1583c <main@@Base+0x10c10>
   15eb0:	ldr	r1, [pc, #-1312]	; 15998 <main@@Base+0x10d6c>
   15eb4:	ldr	r0, [r2, #64]	; 0x40
   15eb8:	add	r1, pc, r1
   15ebc:	mov	r2, r3
   15ec0:	bl	4644 <av_dict_get@plt>
   15ec4:	cmp	r0, #0
   15ec8:	bne	15c18 <main@@Base+0x10fec>
   15ecc:	b	157a0 <main@@Base+0x10b74>
   15ed0:	ldr	r1, [pc, #-1340]	; 1599c <main@@Base+0x10d70>
   15ed4:	add	r3, r7, #64	; 0x40
   15ed8:	ldm	r3, {r2, r3}
   15edc:	add	r1, pc, r1
   15ee0:	mov	r0, r4
   15ee4:	bl	146f0 <main@@Base+0xfac4>
   15ee8:	ldr	r1, [pc, #-1360]	; 159a0 <main@@Base+0x10d74>
   15eec:	add	r7, r7, #72	; 0x48
   15ef0:	ldm	r7, {r2, r3}
   15ef4:	add	r1, pc, r1
   15ef8:	mov	r0, r4
   15efc:	bl	146f0 <main@@Base+0xfac4>
   15f00:	ldr	r3, [r4, #24]
   15f04:	add	r2, r4, r3, lsl #2
   15f08:	ldr	r1, [r2, #68]	; 0x44
   15f0c:	b	157ac <main@@Base+0x10b80>
   15f10:	ldr	r1, [pc, #-1396]	; 159a4 <main@@Base+0x10d78>
   15f14:	ldm	r7, {r2, r3}
   15f18:	mov	r0, r4
   15f1c:	add	r1, pc, r1
   15f20:	bl	146f0 <main@@Base+0xfac4>
   15f24:	ldr	r1, [pc, #-1412]	; 159a8 <main@@Base+0x10d7c>
   15f28:	add	r3, r7, #8
   15f2c:	ldm	r3, {r2, r3}
   15f30:	mov	r0, r4
   15f34:	add	r1, pc, r1
   15f38:	bl	146f0 <main@@Base+0xfac4>
   15f3c:	ldr	r1, [pc, #-1432]	; 159ac <main@@Base+0x10d80>
   15f40:	add	r3, r7, #16
   15f44:	ldm	r3, {r2, r3}
   15f48:	mov	r0, r4
   15f4c:	add	r1, pc, r1
   15f50:	bl	146f0 <main@@Base+0xfac4>
   15f54:	ldr	r1, [pc, #-1452]	; 159b0 <main@@Base+0x10d84>
   15f58:	add	r3, r7, #24
   15f5c:	ldm	r3, {r2, r3}
   15f60:	mov	r0, r4
   15f64:	add	r1, pc, r1
   15f68:	bl	146f0 <main@@Base+0xfac4>
   15f6c:	ldr	r1, [pc, #-1472]	; 159b4 <main@@Base+0x10d88>
   15f70:	add	r3, r7, #32
   15f74:	ldm	r3, {r2, r3}
   15f78:	mov	r0, r4
   15f7c:	add	r1, pc, r1
   15f80:	bl	146f0 <main@@Base+0xfac4>
   15f84:	ldr	r1, [pc, #-1492]	; 159b8 <main@@Base+0x10d8c>
   15f88:	add	r3, r7, #40	; 0x28
   15f8c:	ldm	r3, {r2, r3}
   15f90:	mov	r0, r4
   15f94:	add	r1, pc, r1
   15f98:	bl	146f0 <main@@Base+0xfac4>
   15f9c:	ldr	r1, [pc, #-1512]	; 159bc <main@@Base+0x10d90>
   15fa0:	add	r3, r7, #48	; 0x30
   15fa4:	ldm	r3, {r2, r3}
   15fa8:	mov	r0, r4
   15fac:	add	r1, pc, r1
   15fb0:	bl	146f0 <main@@Base+0xfac4>
   15fb4:	ldr	r1, [pc, #-1532]	; 159c0 <main@@Base+0x10d94>
   15fb8:	add	r3, r7, #56	; 0x38
   15fbc:	ldm	r3, {r2, r3}
   15fc0:	add	r1, pc, r1
   15fc4:	mov	r0, r4
   15fc8:	bl	146f0 <main@@Base+0xfac4>
   15fcc:	b	15794 <main@@Base+0x10b68>
   15fd0:	ldr	r1, [pc, #-1556]	; 159c4 <main@@Base+0x10d98>
   15fd4:	ldr	r0, [r2, #64]	; 0x40
   15fd8:	add	r1, pc, r1
   15fdc:	mov	r2, r3
   15fe0:	bl	4644 <av_dict_get@plt>
   15fe4:	cmp	r0, #0
   15fe8:	ldreq	r3, [r4, #24]
   15fec:	bne	15bc4 <main@@Base+0x10f98>
   15ff0:	b	15bf4 <main@@Base+0x10fc8>
   15ff4:	ldr	r1, [pc, #-1588]	; 159c8 <main@@Base+0x10d9c>
   15ff8:	ldr	r0, [r2, #64]	; 0x40
   15ffc:	add	r1, pc, r1
   16000:	mov	r2, r3
   16004:	bl	4644 <av_dict_get@plt>
   16008:	cmp	r0, #0
   1600c:	bne	15d88 <main@@Base+0x1115c>
   16010:	b	157a0 <main@@Base+0x10b74>
   16014:	ldr	r1, [pc, #-1616]	; 159cc <main@@Base+0x10da0>
   16018:	ldr	r0, [r2, #64]	; 0x40
   1601c:	add	r1, pc, r1
   16020:	mov	r2, r3
   16024:	bl	4644 <av_dict_get@plt>
   16028:	cmp	r0, #0
   1602c:	ldreq	r8, [r4, #24]
   16030:	bne	15d2c <main@@Base+0x11100>
   16034:	b	15d5c <main@@Base+0x11130>
   16038:	ldr	r1, [pc, #-1648]	; 159d0 <main@@Base+0x10da4>
   1603c:	ldr	r0, [r2, #64]	; 0x40
   16040:	add	r1, pc, r1
   16044:	mov	r2, r3
   16048:	bl	4644 <av_dict_get@plt>
   1604c:	cmp	r0, #0
   16050:	ldreq	r8, [r4, #24]
   16054:	bne	15cd0 <main@@Base+0x110a4>
   16058:	b	15d00 <main@@Base+0x110d4>
   1605c:	ldr	r1, [pc, #-1680]	; 159d4 <main@@Base+0x10da8>
   16060:	ldr	r0, [r2, #64]	; 0x40
   16064:	add	r1, pc, r1
   16068:	mov	r2, r3
   1606c:	bl	4644 <av_dict_get@plt>
   16070:	cmp	r0, #0
   16074:	bne	15c5c <main@@Base+0x11030>
   16078:	b	15c8c <main@@Base+0x11060>
   1607c:	ldr	r1, [pc, #-1708]	; 159d8 <main@@Base+0x10dac>
   16080:	ldr	r0, [r2, #64]	; 0x40
   16084:	add	r1, pc, r1
   16088:	mov	r2, r3
   1608c:	bl	4644 <av_dict_get@plt>
   16090:	cmp	r0, #0
   16094:	bne	158c8 <main@@Base+0x10c9c>
   16098:	b	157a0 <main@@Base+0x10b74>
   1609c:	ldr	r3, [r4, #24]
   160a0:	ldr	r8, [r7, #32]
   160a4:	add	r3, r4, r3, lsl #2
   160a8:	ldr	r2, [r3, #68]	; 0x44
   160ac:	ldr	r3, [r2, #68]	; 0x44
   160b0:	cmp	r3, #0
   160b4:	beq	16134 <main@@Base+0x11508>
   160b8:	ldr	r3, [r4, #4]
   160bc:	mov	r2, r8
   160c0:	ldr	r8, [r3, #28]
   160c4:	mov	r3, #0
   160c8:	ldr	r1, [pc, #-1780]	; 159dc <main@@Base+0x10db0>
   160cc:	add	r1, pc, r1
   160d0:	mov	r0, r4
   160d4:	blx	r8
   160d8:	ldr	r8, [r4, #24]
   160dc:	add	r1, r4, r8, lsl #2
   160e0:	ldr	r2, [r1, #28]
   160e4:	add	r2, r2, #1
   160e8:	str	r2, [r1, #28]
   160ec:	b	15ca4 <main@@Base+0x11078>
   160f0:	ldr	r1, [pc, #-1816]	; 159e0 <main@@Base+0x10db4>
   160f4:	ldr	r0, [r2, #64]	; 0x40
   160f8:	add	r1, pc, r1
   160fc:	mov	r2, r3
   16100:	bl	4644 <av_dict_get@plt>
   16104:	cmp	r0, #0
   16108:	bne	15e14 <main@@Base+0x111e8>
   1610c:	b	157a0 <main@@Base+0x10b74>
   16110:	ldr	r0, [r1, #64]	; 0x40
   16114:	ldr	r1, [pc, #-1848]	; 159e4 <main@@Base+0x10db8>
   16118:	mov	r2, r3
   1611c:	add	r1, pc, r1
   16120:	bl	4644 <av_dict_get@plt>
   16124:	cmp	r0, #0
   16128:	ldreq	r3, [r4, #24]
   1612c:	bne	15dc8 <main@@Base+0x1119c>
   16130:	b	15dfc <main@@Base+0x111d0>
   16134:	ldr	r1, [pc, #-1876]	; 159e8 <main@@Base+0x10dbc>
   16138:	ldr	r0, [r2, #64]	; 0x40
   1613c:	add	r1, pc, r1
   16140:	mov	r2, r3
   16144:	bl	4644 <av_dict_get@plt>
   16148:	cmp	r0, #0
   1614c:	bne	160b8 <main@@Base+0x1148c>
   16150:	b	15ca0 <main@@Base+0x11074>
   16154:	add	r3, sp, #64	; 0x40
   16158:	str	r3, [sp, #8]
   1615c:	add	r3, sp, #60	; 0x3c
   16160:	str	r3, [sp, #4]
   16164:	ldr	r2, [sp, #44]	; 0x2c
   16168:	add	r3, sp, #56	; 0x38
   1616c:	ldr	r1, [sp, #40]	; 0x28
   16170:	str	r3, [sp]
   16174:	ldr	r2, [r2]
   16178:	add	r3, sp, #52	; 0x34
   1617c:	ldr	r1, [r1]
   16180:	mov	r0, r7
   16184:	bl	44a0 <av_spherical_tile_bounds@plt>
   16188:	ldr	r3, [r4, #24]
   1618c:	ldr	r8, [sp, #52]	; 0x34
   16190:	add	r3, r4, r3, lsl #2
   16194:	ldr	r2, [r3, #68]	; 0x44
   16198:	ldr	r3, [r2, #68]	; 0x44
   1619c:	cmp	r3, #0
   161a0:	beq	163a8 <main@@Base+0x1177c>
   161a4:	ldr	r3, [r4, #4]
   161a8:	ldr	r1, [pc, #-1988]	; 159ec <main@@Base+0x10dc0>
   161ac:	mov	r2, r8
   161b0:	add	r1, pc, r1
   161b4:	ldr	r8, [r3, #28]
   161b8:	mov	r0, r4
   161bc:	mov	r3, #0
   161c0:	blx	r8
   161c4:	ldr	r3, [r4, #24]
   161c8:	add	r1, r4, r3, lsl #2
   161cc:	ldr	r2, [r1, #28]
   161d0:	add	r2, r2, #1
   161d4:	str	r2, [r1, #28]
   161d8:	add	r3, r4, r3, lsl #2
   161dc:	ldr	r2, [r3, #68]	; 0x44
   161e0:	ldr	r8, [sp, #56]	; 0x38
   161e4:	ldr	r3, [r2, #68]	; 0x44
   161e8:	cmp	r3, #0
   161ec:	beq	16384 <main@@Base+0x11758>
   161f0:	ldr	r3, [r4, #4]
   161f4:	ldr	r1, [pc, #-2060]	; 159f0 <main@@Base+0x10dc4>
   161f8:	mov	r2, r8
   161fc:	add	r1, pc, r1
   16200:	ldr	r8, [r3, #28]
   16204:	mov	r0, r4
   16208:	mov	r3, #0
   1620c:	blx	r8
   16210:	ldr	r3, [r4, #24]
   16214:	add	r1, r4, r3, lsl #2
   16218:	ldr	r2, [r1, #28]
   1621c:	add	r2, r2, #1
   16220:	str	r2, [r1, #28]
   16224:	add	r3, r4, r3, lsl #2
   16228:	ldr	r2, [r3, #68]	; 0x44
   1622c:	ldr	r8, [sp, #60]	; 0x3c
   16230:	ldr	r3, [r2, #68]	; 0x44
   16234:	cmp	r3, #0
   16238:	beq	16360 <main@@Base+0x11734>
   1623c:	ldr	r3, [r4, #4]
   16240:	ldr	r1, [pc, #-2132]	; 159f4 <main@@Base+0x10dc8>
   16244:	mov	r2, r8
   16248:	add	r1, pc, r1
   1624c:	ldr	r8, [r3, #28]
   16250:	mov	r0, r4
   16254:	mov	r3, #0
   16258:	blx	r8
   1625c:	ldr	r3, [r4, #24]
   16260:	add	r1, r4, r3, lsl #2
   16264:	ldr	r2, [r1, #28]
   16268:	add	r2, r2, #1
   1626c:	str	r2, [r1, #28]
   16270:	add	r3, r4, r3, lsl #2
   16274:	ldr	r2, [r3, #68]	; 0x44
   16278:	ldr	r8, [sp, #64]	; 0x40
   1627c:	ldr	r3, [r2, #68]	; 0x44
   16280:	cmp	r3, #0
   16284:	beq	16340 <main@@Base+0x11714>
   16288:	ldr	r3, [r4, #4]
   1628c:	ldr	r1, [pc, #-2204]	; 159f8 <main@@Base+0x10dcc>
   16290:	mov	r2, r8
   16294:	add	r1, pc, r1
   16298:	ldr	r8, [r3, #28]
   1629c:	mov	r3, #0
   162a0:	b	160d0 <main@@Base+0x114a4>
   162a4:	ldr	r3, [r4, #24]
   162a8:	cmp	r3, #0
   162ac:	beq	1583c <main@@Base+0x10c10>
   162b0:	b	15e5c <main@@Base+0x11230>
   162b4:	ldr	r1, [pc, #-2240]	; 159fc <main@@Base+0x10dd0>
   162b8:	ldr	r0, [r2, #64]	; 0x40
   162bc:	add	r1, pc, r1
   162c0:	mov	r2, r3
   162c4:	bl	4644 <av_dict_get@plt>
   162c8:	cmp	r0, #0
   162cc:	bne	15b80 <main@@Base+0x10f54>
   162d0:	b	157a0 <main@@Base+0x10b74>
   162d4:	ldr	r1, [pc, #-2268]	; 15a00 <main@@Base+0x10dd4>
   162d8:	ldr	r0, [r2, #64]	; 0x40
   162dc:	add	r1, pc, r1
   162e0:	mov	r2, r3
   162e4:	bl	4644 <av_dict_get@plt>
   162e8:	cmp	r0, #0
   162ec:	ldreq	r3, [r4, #24]
   162f0:	bne	15b2c <main@@Base+0x10f00>
   162f4:	b	15b60 <main@@Base+0x10f34>
   162f8:	ldr	r1, [pc, #-2300]	; 15a04 <main@@Base+0x10dd8>
   162fc:	mov	r2, r3
   16300:	ldr	r0, [r0, #64]	; 0x40
   16304:	add	r1, pc, r1
   16308:	bl	4644 <av_dict_get@plt>
   1630c:	cmp	r0, #0
   16310:	ldreq	r3, [r4, #24]
   16314:	bne	15ad8 <main@@Base+0x10eac>
   16318:	b	15b0c <main@@Base+0x10ee0>
   1631c:	ldr	r0, [r1, #64]	; 0x40
   16320:	ldr	r1, [pc, #-2336]	; 15a08 <main@@Base+0x10ddc>
   16324:	mov	r2, r3
   16328:	add	r1, pc, r1
   1632c:	bl	4644 <av_dict_get@plt>
   16330:	cmp	r0, #0
   16334:	ldreq	r3, [r4, #24]
   16338:	bne	15a70 <main@@Base+0x10e44>
   1633c:	b	15aa4 <main@@Base+0x10e78>
   16340:	ldr	r1, [pc, #-2364]	; 15a0c <main@@Base+0x10de0>
   16344:	ldr	r0, [r2, #64]	; 0x40
   16348:	add	r1, pc, r1
   1634c:	mov	r2, r3
   16350:	bl	4644 <av_dict_get@plt>
   16354:	cmp	r0, #0
   16358:	bne	16288 <main@@Base+0x1165c>
   1635c:	b	15ca0 <main@@Base+0x11074>
   16360:	ldr	r1, [pc, #-2392]	; 15a10 <main@@Base+0x10de4>
   16364:	ldr	r0, [r2, #64]	; 0x40
   16368:	add	r1, pc, r1
   1636c:	mov	r2, r3
   16370:	bl	4644 <av_dict_get@plt>
   16374:	cmp	r0, #0
   16378:	ldreq	r3, [r4, #24]
   1637c:	bne	1623c <main@@Base+0x11610>
   16380:	b	16270 <main@@Base+0x11644>
   16384:	ldr	r1, [pc, #-2424]	; 15a14 <main@@Base+0x10de8>
   16388:	ldr	r0, [r2, #64]	; 0x40
   1638c:	add	r1, pc, r1
   16390:	mov	r2, r3
   16394:	bl	4644 <av_dict_get@plt>
   16398:	cmp	r0, #0
   1639c:	ldreq	r3, [r4, #24]
   163a0:	bne	161f0 <main@@Base+0x115c4>
   163a4:	b	16224 <main@@Base+0x115f8>
   163a8:	ldr	r1, [pc, #-2456]	; 15a18 <main@@Base+0x10dec>
   163ac:	ldr	r0, [r2, #64]	; 0x40
   163b0:	add	r1, pc, r1
   163b4:	mov	r2, r3
   163b8:	bl	4644 <av_dict_get@plt>
   163bc:	cmp	r0, #0
   163c0:	ldreq	r3, [r4, #24]
   163c4:	bne	161a4 <main@@Base+0x11578>
   163c8:	b	161d8 <main@@Base+0x115ac>
   163cc:	mov	r1, #0
   163d0:	ldr	r3, [pc, #-2492]	; 15a1c <main@@Base+0x10df0>
   163d4:	ldr	r2, [pc, #-2492]	; 15a20 <main@@Base+0x10df4>
   163d8:	add	r3, pc, r3
   163dc:	str	r2, [sp, #4]
   163e0:	str	r3, [sp]
   163e4:	ldr	r2, [pc, #-2504]	; 15a24 <main@@Base+0x10df8>
   163e8:	ldr	r3, [pc, #-2504]	; 15a28 <main@@Base+0x10dfc>
   163ec:	mov	r0, r1
   163f0:	add	r3, pc, r3
   163f4:	add	r2, pc, r2
   163f8:	bl	40f8 <av_log@plt>
   163fc:	bl	4278 <abort@plt>
   16400:	bl	11920 <main@@Base+0xccf4>
   16404:	bl	3f00 <__stack_chk_fail@plt>
   16408:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1640c:	vpush	{d8}
   16410:	mov	r4, r0
   16414:	sub	sp, sp, #2256	; 0x8d0
   16418:	ldr	ip, [pc, #4008]	; 173c8 <main@@Base+0x1279c>
   1641c:	sub	sp, sp, #12
   16420:	add	ip, pc, ip
   16424:	add	lr, sp, #60	; 0x3c
   16428:	ldr	r0, [pc, #3996]	; 173cc <main@@Base+0x127a0>
   1642c:	str	ip, [sp, #20]
   16430:	str	lr, [sp, #8]
   16434:	ldr	r0, [ip, r0]
   16438:	mov	fp, r1
   1643c:	ldr	ip, [r0]
   16440:	str	r0, [sp, #24]
   16444:	mov	r5, r2
   16448:	mov	r0, lr
   1644c:	mvn	r2, #0
   16450:	mov	r1, #1
   16454:	mov	r8, r3
   16458:	str	ip, [sp, #2260]	; 0x8d4
   1645c:	bl	3f48 <av_bprint_init@plt>
   16460:	ldr	r2, [r4, #24]
   16464:	add	r3, r2, #1
   16468:	cmp	r3, #9
   1646c:	str	r3, [r4, #24]
   16470:	bgt	17e74 <main@@Base+0x13248>
   16474:	ldr	r1, [r4, #16]
   16478:	cmp	r3, #0
   1647c:	add	r1, r1, #432	; 0x1b0
   16480:	streq	r3, [r4, #28]
   16484:	streq	r1, [r4, #68]	; 0x44
   16488:	bne	16a7c <main@@Base+0x11e50>
   1648c:	ldr	r3, [r4, #4]
   16490:	ldr	r3, [r3, #20]
   16494:	cmp	r3, #0
   16498:	beq	164a4 <main@@Base+0x11878>
   1649c:	mov	r0, r4
   164a0:	blx	r3
   164a4:	ldr	r3, [r5, #176]	; 0xb0
   164a8:	ldr	r0, [r3]
   164ac:	bl	47dc <av_get_media_type_string@plt>
   164b0:	subs	r2, r0, #0
   164b4:	beq	17910 <main@@Base+0x12ce4>
   164b8:	ldr	r1, [pc, #3856]	; 173d0 <main@@Base+0x127a4>
   164bc:	mov	r0, r4
   164c0:	add	r1, pc, r1
   164c4:	bl	12fe4 <main@@Base+0xe3b8>
   164c8:	ldr	r3, [r4, #24]
   164cc:	ldr	r6, [r5]
   164d0:	add	r3, r4, r3, lsl #2
   164d4:	ldr	r2, [r3, #68]	; 0x44
   164d8:	asr	r7, r6, #31
   164dc:	ldr	r3, [r2, #68]	; 0x44
   164e0:	cmp	r3, #0
   164e4:	beq	16f44 <main@@Base+0x12318>
   164e8:	ldr	r1, [r4, #4]
   164ec:	mov	r2, r6
   164f0:	ldr	r6, [r1, #28]
   164f4:	ldr	r1, [pc, #3800]	; 173d4 <main@@Base+0x127a8>
   164f8:	mov	r3, r7
   164fc:	add	r1, pc, r1
   16500:	mov	r0, r4
   16504:	blx	r6
   16508:	ldr	r3, [r4, #24]
   1650c:	add	r1, r4, r3, lsl #2
   16510:	ldr	r2, [r1, #28]
   16514:	add	r2, r2, #1
   16518:	str	r2, [r1, #28]
   1651c:	add	r3, r4, r3, lsl #2
   16520:	ldr	r2, [r3, #68]	; 0x44
   16524:	ldr	r6, [fp, #84]	; 0x54
   16528:	ldr	r3, [r2, #68]	; 0x44
   1652c:	asr	r7, r6, #31
   16530:	cmp	r3, #0
   16534:	beq	16f24 <main@@Base+0x122f8>
   16538:	ldr	r1, [r4, #4]
   1653c:	mov	r2, r6
   16540:	ldr	r6, [r1, #28]
   16544:	ldr	r1, [pc, #3724]	; 173d8 <main@@Base+0x127ac>
   16548:	mov	r3, r7
   1654c:	add	r1, pc, r1
   16550:	mov	r0, r4
   16554:	blx	r6
   16558:	ldr	r3, [r4, #24]
   1655c:	add	r3, r4, r3, lsl #2
   16560:	ldr	r2, [r3, #28]
   16564:	add	r2, r2, #1
   16568:	str	r2, [r3, #28]
   1656c:	ldr	r1, [pc, #3688]	; 173dc <main@@Base+0x127b0>
   16570:	ldrd	r2, [fp, #104]	; 0x68
   16574:	add	r1, pc, r1
   16578:	mov	r0, r4
   1657c:	bl	147e8 <main@@Base+0xfbbc>
   16580:	ldrd	r2, [fp, #104]	; 0x68
   16584:	ldr	r1, [pc, #3668]	; 173e0 <main@@Base+0x127b4>
   16588:	add	r6, r5, #16
   1658c:	str	r6, [sp]
   16590:	add	r1, pc, r1
   16594:	mov	r0, r4
   16598:	bl	15458 <main@@Base+0x1082c>
   1659c:	ldrd	r2, [fp, #120]	; 0x78
   165a0:	ldr	r1, [pc, #3644]	; 173e4 <main@@Base+0x127b8>
   165a4:	mov	r0, r4
   165a8:	add	r1, pc, r1
   165ac:	bl	147e8 <main@@Base+0xfbbc>
   165b0:	ldrd	r2, [fp, #120]	; 0x78
   165b4:	ldr	r1, [pc, #3628]	; 173e8 <main@@Base+0x127bc>
   165b8:	str	r6, [sp]
   165bc:	add	r1, pc, r1
   165c0:	mov	r0, r4
   165c4:	bl	15458 <main@@Base+0x1082c>
   165c8:	ldr	r1, [pc, #3612]	; 173ec <main@@Base+0x127c0>
   165cc:	add	r7, fp, #320	; 0x140
   165d0:	ldrd	r2, [r7]
   165d4:	add	r1, pc, r1
   165d8:	mov	r0, r4
   165dc:	bl	147e8 <main@@Base+0xfbbc>
   165e0:	ldrd	r2, [r7]
   165e4:	ldr	r1, [pc, #3588]	; 173f0 <main@@Base+0x127c4>
   165e8:	str	r6, [sp]
   165ec:	add	r1, pc, r1
   165f0:	mov	r0, r4
   165f4:	add	r6, fp, #336	; 0x150
   165f8:	bl	15458 <main@@Base+0x1082c>
   165fc:	ldrd	r2, [r6]
   16600:	orrs	r1, r2, r3
   16604:	bne	17ad4 <main@@Base+0x12ea8>
   16608:	ldr	r2, [pc, #3556]	; 173f4 <main@@Base+0x127c8>
   1660c:	ldr	r1, [pc, #3556]	; 173f8 <main@@Base+0x127cc>
   16610:	add	r2, pc, r2
   16614:	add	r1, pc, r1
   16618:	mov	r0, r4
   1661c:	bl	131bc <main@@Base+0xe590>
   16620:	ldrd	r0, [r6]
   16624:	orrs	r3, r0, r1
   16628:	bne	17a78 <main@@Base+0x12e4c>
   1662c:	ldr	r2, [pc, #3528]	; 173fc <main@@Base+0x127d0>
   16630:	ldr	r1, [pc, #3528]	; 17400 <main@@Base+0x127d4>
   16634:	add	r2, pc, r2
   16638:	add	r1, pc, r1
   1663c:	mov	r0, r4
   16640:	bl	131bc <main@@Base+0xe590>
   16644:	ldrd	r2, [r6, #-8]
   16648:	mvn	r1, #0
   1664c:	mvn	r0, #0
   16650:	cmp	r3, r1
   16654:	cmpeq	r2, r0
   16658:	beq	16b18 <main@@Base+0x11eec>
   1665c:	ldr	r7, [sp, #8]
   16660:	mov	r0, r7
   16664:	bl	45c0 <av_bprint_clear@plt>
   16668:	ldrd	r2, [r6, #-8]
   1666c:	ldr	r1, [pc, #3472]	; 17404 <main@@Base+0x127d8>
   16670:	mov	r0, r7
   16674:	add	r1, pc, r1
   16678:	bl	459c <av_bprintf@plt>
   1667c:	ldr	r1, [pc, #3460]	; 17408 <main@@Base+0x127dc>
   16680:	ldr	r2, [sp, #60]	; 0x3c
   16684:	add	r1, pc, r1
   16688:	mov	r0, r4
   1668c:	bl	12fe4 <main@@Base+0xe3b8>
   16690:	ldr	r2, [fp, #356]	; 0x164
   16694:	cmn	r2, #1
   16698:	beq	16b3c <main@@Base+0x11f10>
   1669c:	ldr	r1, [pc, #3432]	; 1740c <main@@Base+0x127e0>
   166a0:	add	r0, sp, #2128	; 0x850
   166a4:	add	r1, pc, r1
   166a8:	add	r1, r1, #20
   166ac:	asr	r3, r2, #31
   166b0:	str	r1, [sp]
   166b4:	add	r0, r0, #4
   166b8:	bl	12248 <main@@Base+0xd61c>
   166bc:	ldr	r1, [pc, #3404]	; 17410 <main@@Base+0x127e4>
   166c0:	mov	r2, r0
   166c4:	add	r1, pc, r1
   166c8:	mov	r0, r4
   166cc:	bl	12fe4 <main@@Base+0xe3b8>
   166d0:	ldr	r3, [r5, #176]	; 0xb0
   166d4:	ldr	r3, [r3]
   166d8:	cmp	r3, #0
   166dc:	beq	16b64 <main@@Base+0x11f38>
   166e0:	cmp	r3, #1
   166e4:	bne	167e8 <main@@Base+0x11bbc>
   166e8:	ldr	r0, [fp, #80]	; 0x50
   166ec:	bl	438c <av_get_sample_fmt_name@plt>
   166f0:	subs	r2, r0, #0
   166f4:	beq	17e24 <main@@Base+0x131f8>
   166f8:	ldr	r1, [pc, #3348]	; 17414 <main@@Base+0x127e8>
   166fc:	mov	r0, r4
   16700:	add	r1, pc, r1
   16704:	bl	12fe4 <main@@Base+0xe3b8>
   16708:	ldr	r3, [r4, #24]
   1670c:	ldr	r6, [fp, #76]	; 0x4c
   16710:	add	r3, r4, r3, lsl #2
   16714:	ldr	r2, [r3, #68]	; 0x44
   16718:	asr	r7, r6, #31
   1671c:	ldr	r3, [r2, #68]	; 0x44
   16720:	cmp	r3, #0
   16724:	beq	17dc0 <main@@Base+0x13194>
   16728:	ldr	r1, [r4, #4]
   1672c:	mov	r2, r6
   16730:	ldr	r5, [r1, #28]
   16734:	ldr	r1, [pc, #3292]	; 17418 <main@@Base+0x127ec>
   16738:	mov	r3, r7
   1673c:	add	r1, pc, r1
   16740:	mov	r0, r4
   16744:	blx	r5
   16748:	ldr	r3, [r4, #24]
   1674c:	add	r1, r4, r3, lsl #2
   16750:	ldr	r2, [r1, #28]
   16754:	add	r2, r2, #1
   16758:	str	r2, [r1, #28]
   1675c:	add	r3, r4, r3, lsl #2
   16760:	ldr	r2, [r3, #68]	; 0x44
   16764:	ldr	r6, [fp, #352]	; 0x160
   16768:	ldr	r3, [r2, #68]	; 0x44
   1676c:	asr	r7, r6, #31
   16770:	cmp	r3, #0
   16774:	beq	17da0 <main@@Base+0x13174>
   16778:	ldr	r1, [r4, #4]
   1677c:	mov	r2, r6
   16780:	ldr	r5, [r1, #28]
   16784:	ldr	r1, [pc, #3216]	; 1741c <main@@Base+0x127f0>
   16788:	mov	r3, r7
   1678c:	add	r1, pc, r1
   16790:	mov	r0, r4
   16794:	blx	r5
   16798:	ldr	r3, [r4, #24]
   1679c:	add	r3, r4, r3, lsl #2
   167a0:	ldr	r2, [r3, #28]
   167a4:	add	r2, r2, #1
   167a8:	str	r2, [r3, #28]
   167ac:	ldrd	r2, [fp, #240]	; 0xf0
   167b0:	orrs	r3, r2, r3
   167b4:	beq	17b14 <main@@Base+0x12ee8>
   167b8:	ldr	r5, [sp, #8]
   167bc:	mov	r0, r5
   167c0:	bl	45c0 <av_bprint_clear@plt>
   167c4:	ldrd	r2, [fp, #240]	; 0xf0
   167c8:	ldr	r1, [fp, #352]	; 0x160
   167cc:	mov	r0, r5
   167d0:	bl	40bc <av_bprint_channel_layout@plt>
   167d4:	ldr	r1, [pc, #3140]	; 17420 <main@@Base+0x127f4>
   167d8:	ldr	r2, [sp, #60]	; 0x3c
   167dc:	add	r1, pc, r1
   167e0:	mov	r0, r4
   167e4:	bl	12fe4 <main@@Base+0xe3b8>
   167e8:	ldr	r3, [pc, #3124]	; 17424 <main@@Base+0x127f8>
   167ec:	add	r3, pc, r3
   167f0:	ldr	r3, [r3, #52]	; 0x34
   167f4:	cmp	r3, #0
   167f8:	beq	169e8 <main@@Base+0x11dbc>
   167fc:	ldr	r9, [fp, #344]	; 0x158
   16800:	cmp	r9, #0
   16804:	beq	169e8 <main@@Base+0x11dbc>
   16808:	ldr	r2, [r4, #24]
   1680c:	add	r3, r2, #1
   16810:	cmp	r3, #9
   16814:	str	r3, [r4, #24]
   16818:	bgt	17e74 <main@@Base+0x13248>
   1681c:	ldr	r1, [r4, #16]
   16820:	cmp	r3, #0
   16824:	add	r1, r1, #576	; 0x240
   16828:	streq	r3, [r4, #28]
   1682c:	streq	r1, [r4, #68]	; 0x44
   16830:	bne	17ae8 <main@@Base+0x12ebc>
   16834:	ldr	r3, [r4, #4]
   16838:	ldr	r3, [r3, #20]
   1683c:	cmp	r3, #0
   16840:	beq	1684c <main@@Base+0x11c20>
   16844:	mov	r0, r4
   16848:	blx	r3
   1684c:	mov	r5, #0
   16850:	add	r3, sp, #56	; 0x38
   16854:	ldr	sl, [pc, #3020]	; 17428 <main@@Base+0x127fc>
   16858:	str	r3, [sp, #16]
   1685c:	add	r3, sp, #48	; 0x30
   16860:	str	r3, [sp, #12]
   16864:	add	sl, pc, sl
   16868:	mov	r2, r5
   1686c:	mov	r3, #2
   16870:	mov	r1, sl
   16874:	mov	r0, r9
   16878:	bl	4644 <av_dict_get@plt>
   1687c:	subs	r5, r0, #0
   16880:	beq	17bf0 <main@@Base+0x12fc4>
   16884:	ldr	r3, [r4, #24]
   16888:	ldr	r7, [r5]
   1688c:	add	r3, r4, r3, lsl #2
   16890:	ldr	r6, [r3, #68]	; 0x44
   16894:	ldr	r8, [r5, #4]
   16898:	ldr	r3, [r6, #68]	; 0x44
   1689c:	cmp	r3, #0
   168a0:	beq	16afc <main@@Base+0x11ed0>
   168a4:	mov	r3, #0
   168a8:	mov	r2, r7
   168ac:	ldr	r1, [sp, #12]
   168b0:	mov	r0, r4
   168b4:	str	r3, [sp, #48]	; 0x30
   168b8:	str	r3, [sp, #52]	; 0x34
   168bc:	bl	12d74 <main@@Base+0xe148>
   168c0:	cmp	r0, #0
   168c4:	blt	16924 <main@@Base+0x11cf8>
   168c8:	ldr	r3, [sp, #16]
   168cc:	mov	r2, r8
   168d0:	sub	r1, r3, #4
   168d4:	mov	r0, r4
   168d8:	bl	12d74 <main@@Base+0xe148>
   168dc:	cmp	r0, #0
   168e0:	blt	16924 <main@@Base+0x11cf8>
   168e4:	ldr	r3, [r4, #4]
   168e8:	ldr	r2, [sp, #52]	; 0x34
   168ec:	ldr	r3, [r3, #36]	; 0x24
   168f0:	ldr	r1, [sp, #48]	; 0x30
   168f4:	mov	r0, r4
   168f8:	blx	r3
   168fc:	ldr	r0, [sp, #48]	; 0x30
   16900:	bl	46ec <av_free@plt>
   16904:	ldr	r0, [sp, #52]	; 0x34
   16908:	bl	46ec <av_free@plt>
   1690c:	ldr	r3, [r4, #24]
   16910:	add	r3, r4, r3, lsl #2
   16914:	ldr	r2, [r3, #28]
   16918:	add	r2, r2, #1
   1691c:	str	r2, [r3, #28]
   16920:	b	16868 <main@@Base+0x11c3c>
   16924:	ldr	r2, [r6, #60]	; 0x3c
   16928:	mov	r3, r7
   1692c:	str	r2, [sp, #4]
   16930:	ldr	r2, [pc, #2804]	; 1742c <main@@Base+0x12800>
   16934:	mov	r1, #16
   16938:	add	r2, pc, r2
   1693c:	mov	r0, r4
   16940:	str	r8, [sp]
   16944:	bl	40f8 <av_log@plt>
   16948:	ldr	r0, [sp, #48]	; 0x30
   1694c:	bl	46ec <av_free@plt>
   16950:	ldr	r0, [sp, #52]	; 0x34
   16954:	bl	46ec <av_free@plt>
   16958:	ldr	r2, [r4, #24]
   1695c:	add	r1, r4, r2, lsl #2
   16960:	ldr	r3, [r1, #28]
   16964:	add	r3, r3, #1
   16968:	str	r3, [r1, #28]
   1696c:	cmp	r2, #0
   16970:	beq	169c4 <main@@Base+0x11d98>
   16974:	add	r3, r4, r2, lsl #2
   16978:	ldr	r1, [r3, #64]	; 0x40
   1697c:	ldr	r0, [r1]
   16980:	cmn	r0, #1
   16984:	beq	169c4 <main@@Base+0x11d98>
   16988:	ldr	r1, [r3, #24]
   1698c:	ldr	ip, [r3, #68]	; 0x44
   16990:	cmp	r0, #18
   16994:	add	r1, r1, #1
   16998:	ldr	r0, [ip]
   1699c:	str	r1, [r3, #24]
   169a0:	bne	169c4 <main@@Base+0x11d98>
   169a4:	cmp	r0, #15
   169a8:	add	r1, r4, #8192	; 0x2000
   169ac:	ldreq	r3, [r1, #2156]	; 0x86c
   169b0:	ldrne	r3, [r1, #2160]	; 0x870
   169b4:	addeq	r3, r3, #1
   169b8:	addne	r3, r3, #1
   169bc:	streq	r3, [r1, #2156]	; 0x86c
   169c0:	strne	r3, [r1, #2160]	; 0x870
   169c4:	ldr	r3, [r4, #4]
   169c8:	ldr	r3, [r3, #24]
   169cc:	cmp	r3, #0
   169d0:	beq	169e0 <main@@Base+0x11db4>
   169d4:	mov	r0, r4
   169d8:	blx	r3
   169dc:	ldr	r2, [r4, #24]
   169e0:	sub	r2, r2, #1
   169e4:	str	r2, [r4, #24]
   169e8:	ldr	r9, [pc, #2624]	; 17430 <main@@Base+0x12804>
   169ec:	add	r9, pc, r9
   169f0:	ldr	sl, [r9, #56]	; 0x38
   169f4:	cmp	sl, #0
   169f8:	bne	17368 <main@@Base+0x1273c>
   169fc:	ldr	r2, [fp, #292]	; 0x124
   16a00:	ldr	r3, [r4, #24]
   16a04:	cmp	r2, #0
   16a08:	bne	16f68 <main@@Base+0x1233c>
   16a0c:	cmp	r3, #0
   16a10:	bne	16aa8 <main@@Base+0x11e7c>
   16a14:	ldr	r2, [r4, #4]
   16a18:	ldr	r2, [r2, #24]
   16a1c:	cmp	r2, #0
   16a20:	beq	16a30 <main@@Base+0x11e04>
   16a24:	mov	r0, r4
   16a28:	blx	r2
   16a2c:	ldr	r3, [r4, #24]
   16a30:	sub	r3, r3, #1
   16a34:	str	r3, [r4, #24]
   16a38:	mov	r1, #0
   16a3c:	ldr	r0, [sp, #8]
   16a40:	bl	4308 <av_bprint_finalize@plt>
   16a44:	ldr	r2, [sp, #20]
   16a48:	ldr	r3, [pc, #2532]	; 17434 <main@@Base+0x12808>
   16a4c:	ldr	r3, [r2, r3]
   16a50:	ldr	r0, [r3]
   16a54:	bl	417c <fflush@plt>
   16a58:	ldr	r3, [sp, #24]
   16a5c:	ldr	r2, [sp, #2260]	; 0x8d4
   16a60:	ldr	r3, [r3]
   16a64:	cmp	r2, r3
   16a68:	bne	17e78 <main@@Base+0x1324c>
   16a6c:	add	sp, sp, #2256	; 0x8d0
   16a70:	add	sp, sp, #12
   16a74:	vpop	{d8}
   16a78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a7c:	mov	r3, #0
   16a80:	add	r2, r4, r2, lsl #2
   16a84:	ldr	r0, [r2, #68]	; 0x44
   16a88:	ldr	r0, [r0]
   16a8c:	str	r3, [r2, #32]
   16a90:	cmp	r0, #18
   16a94:	str	r1, [r2, #72]	; 0x48
   16a98:	addeq	r3, r4, #8192	; 0x2000
   16a9c:	ldreq	r2, [r3, #2160]	; 0x870
   16aa0:	streq	r2, [r3, #2164]	; 0x874
   16aa4:	b	1648c <main@@Base+0x11860>
   16aa8:	add	r2, r4, r3, lsl #2
   16aac:	ldr	r1, [r2, #64]	; 0x40
   16ab0:	ldr	r0, [r1]
   16ab4:	cmn	r0, #1
   16ab8:	beq	16a14 <main@@Base+0x11de8>
   16abc:	ldr	r1, [r2, #24]
   16ac0:	ldr	ip, [r2, #68]	; 0x44
   16ac4:	cmp	r0, #18
   16ac8:	add	r1, r1, #1
   16acc:	ldr	r0, [ip]
   16ad0:	str	r1, [r2, #24]
   16ad4:	bne	16a14 <main@@Base+0x11de8>
   16ad8:	cmp	r0, #15
   16adc:	add	r1, r4, #8192	; 0x2000
   16ae0:	ldreq	r2, [r1, #2156]	; 0x86c
   16ae4:	ldrne	r2, [r1, #2160]	; 0x870
   16ae8:	addeq	r2, r2, #1
   16aec:	addne	r2, r2, #1
   16af0:	streq	r2, [r1, #2156]	; 0x86c
   16af4:	strne	r2, [r1, #2160]	; 0x870
   16af8:	b	16a14 <main@@Base+0x11de8>
   16afc:	mov	r2, r3
   16b00:	mov	r1, r7
   16b04:	ldr	r0, [r6, #64]	; 0x40
   16b08:	bl	4644 <av_dict_get@plt>
   16b0c:	cmp	r0, #0
   16b10:	bne	168a4 <main@@Base+0x11c78>
   16b14:	b	16868 <main@@Base+0x11c3c>
   16b18:	ldr	r2, [pc, #2328]	; 17438 <main@@Base+0x1280c>
   16b1c:	ldr	r1, [pc, #2328]	; 1743c <main@@Base+0x12810>
   16b20:	add	r2, pc, r2
   16b24:	add	r1, pc, r1
   16b28:	mov	r0, r4
   16b2c:	bl	131bc <main@@Base+0xe590>
   16b30:	ldr	r2, [fp, #356]	; 0x164
   16b34:	cmn	r2, #1
   16b38:	bne	1669c <main@@Base+0x11a70>
   16b3c:	ldr	r2, [pc, #2300]	; 17440 <main@@Base+0x12814>
   16b40:	ldr	r1, [pc, #2300]	; 17444 <main@@Base+0x12818>
   16b44:	add	r2, pc, r2
   16b48:	add	r1, pc, r1
   16b4c:	mov	r0, r4
   16b50:	bl	131bc <main@@Base+0xe590>
   16b54:	ldr	r3, [r5, #176]	; 0xb0
   16b58:	ldr	r3, [r3]
   16b5c:	cmp	r3, #0
   16b60:	bne	166e0 <main@@Base+0x11ab4>
   16b64:	ldr	r3, [r4, #24]
   16b68:	ldr	r6, [fp, #68]	; 0x44
   16b6c:	add	r3, r4, r3, lsl #2
   16b70:	ldr	r2, [r3, #68]	; 0x44
   16b74:	asr	r7, r6, #31
   16b78:	ldr	r3, [r2, #68]	; 0x44
   16b7c:	cmp	r3, #0
   16b80:	beq	17de4 <main@@Base+0x131b8>
   16b84:	ldr	r1, [r4, #4]
   16b88:	mov	r2, r6
   16b8c:	ldr	r6, [r1, #28]
   16b90:	ldr	r1, [pc, #2224]	; 17448 <main@@Base+0x1281c>
   16b94:	mov	r3, r7
   16b98:	add	r1, pc, r1
   16b9c:	mov	r0, r4
   16ba0:	blx	r6
   16ba4:	ldr	r3, [r4, #24]
   16ba8:	add	r1, r4, r3, lsl #2
   16bac:	ldr	r2, [r1, #28]
   16bb0:	add	r2, r2, #1
   16bb4:	str	r2, [r1, #28]
   16bb8:	add	r3, r4, r3, lsl #2
   16bbc:	ldr	r2, [r3, #68]	; 0x44
   16bc0:	ldr	r6, [fp, #72]	; 0x48
   16bc4:	ldr	r3, [r2, #68]	; 0x44
   16bc8:	asr	r7, r6, #31
   16bcc:	cmp	r3, #0
   16bd0:	beq	17cd0 <main@@Base+0x130a4>
   16bd4:	ldr	r1, [r4, #4]
   16bd8:	mov	r2, r6
   16bdc:	ldr	r6, [r1, #28]
   16be0:	ldr	r1, [pc, #2148]	; 1744c <main@@Base+0x12820>
   16be4:	mov	r3, r7
   16be8:	add	r1, pc, r1
   16bec:	mov	r0, r4
   16bf0:	blx	r6
   16bf4:	ldr	r3, [r4, #24]
   16bf8:	add	r3, r4, r3, lsl #2
   16bfc:	ldr	r2, [r3, #28]
   16c00:	add	r2, r2, #1
   16c04:	str	r2, [r3, #28]
   16c08:	ldr	r0, [fp, #80]	; 0x50
   16c0c:	bl	4794 <av_get_pix_fmt_name@plt>
   16c10:	subs	r2, r0, #0
   16c14:	beq	17e08 <main@@Base+0x131dc>
   16c18:	ldr	r1, [pc, #2096]	; 17450 <main@@Base+0x12824>
   16c1c:	mov	r0, r4
   16c20:	add	r1, pc, r1
   16c24:	bl	12fe4 <main@@Base+0xe3b8>
   16c28:	mov	r2, r5
   16c2c:	mov	r1, r8
   16c30:	mov	r3, fp
   16c34:	add	r0, sp, #52	; 0x34
   16c38:	bl	4068 <av_guess_sample_aspect_ratio@plt>
   16c3c:	ldr	r5, [sp, #52]	; 0x34
   16c40:	cmp	r5, #0
   16c44:	bne	17b30 <main@@Base+0x12f04>
   16c48:	ldr	r2, [pc, #2052]	; 17454 <main@@Base+0x12828>
   16c4c:	ldr	r1, [pc, #2052]	; 17458 <main@@Base+0x1282c>
   16c50:	add	r2, pc, r2
   16c54:	add	r1, pc, r1
   16c58:	mov	r0, r4
   16c5c:	bl	131bc <main@@Base+0xe590>
   16c60:	ldr	r5, [sp, #8]
   16c64:	mov	r0, r5
   16c68:	bl	45c0 <av_bprint_clear@plt>
   16c6c:	ldr	r0, [fp, #88]	; 0x58
   16c70:	bl	4104 <av_get_picture_type_char@plt>
   16c74:	ldr	r1, [pc, #2016]	; 1745c <main@@Base+0x12830>
   16c78:	mov	r2, r0
   16c7c:	add	r1, pc, r1
   16c80:	mov	r0, r5
   16c84:	bl	459c <av_bprintf@plt>
   16c88:	ldr	r1, [pc, #2000]	; 17460 <main@@Base+0x12834>
   16c8c:	ldr	r2, [sp, #60]	; 0x3c
   16c90:	add	r1, pc, r1
   16c94:	mov	r0, r4
   16c98:	bl	12fe4 <main@@Base+0xe3b8>
   16c9c:	ldr	r3, [r4, #24]
   16ca0:	ldr	r6, [fp, #128]	; 0x80
   16ca4:	add	r3, r4, r3, lsl #2
   16ca8:	ldr	r2, [r3, #68]	; 0x44
   16cac:	asr	r7, r6, #31
   16cb0:	ldr	r3, [r2, #68]	; 0x44
   16cb4:	cmp	r3, #0
   16cb8:	beq	17d5c <main@@Base+0x13130>
   16cbc:	ldr	r1, [r4, #4]
   16cc0:	mov	r2, r6
   16cc4:	ldr	r5, [r1, #28]
   16cc8:	ldr	r1, [pc, #1940]	; 17464 <main@@Base+0x12838>
   16ccc:	mov	r3, r7
   16cd0:	add	r1, pc, r1
   16cd4:	mov	r0, r4
   16cd8:	blx	r5
   16cdc:	ldr	r3, [r4, #24]
   16ce0:	add	r1, r4, r3, lsl #2
   16ce4:	ldr	r2, [r1, #28]
   16ce8:	add	r2, r2, #1
   16cec:	str	r2, [r1, #28]
   16cf0:	add	r3, r4, r3, lsl #2
   16cf4:	ldr	r2, [r3, #68]	; 0x44
   16cf8:	ldr	r6, [fp, #132]	; 0x84
   16cfc:	ldr	r3, [r2, #68]	; 0x44
   16d00:	asr	r7, r6, #31
   16d04:	cmp	r3, #0
   16d08:	beq	17d38 <main@@Base+0x1310c>
   16d0c:	ldr	r1, [r4, #4]
   16d10:	mov	r2, r6
   16d14:	ldr	r5, [r1, #28]
   16d18:	ldr	r1, [pc, #1864]	; 17468 <main@@Base+0x1283c>
   16d1c:	mov	r3, r7
   16d20:	add	r1, pc, r1
   16d24:	mov	r0, r4
   16d28:	blx	r5
   16d2c:	ldr	r3, [r4, #24]
   16d30:	add	r1, r4, r3, lsl #2
   16d34:	ldr	r2, [r1, #28]
   16d38:	add	r2, r2, #1
   16d3c:	str	r2, [r1, #28]
   16d40:	add	r3, r4, r3, lsl #2
   16d44:	ldr	r2, [r3, #68]	; 0x44
   16d48:	ldr	r6, [fp, #212]	; 0xd4
   16d4c:	ldr	r3, [r2, #68]	; 0x44
   16d50:	asr	r7, r6, #31
   16d54:	cmp	r3, #0
   16d58:	beq	17d14 <main@@Base+0x130e8>
   16d5c:	ldr	r1, [r4, #4]
   16d60:	mov	r2, r6
   16d64:	ldr	r5, [r1, #28]
   16d68:	ldr	r1, [pc, #1788]	; 1746c <main@@Base+0x12840>
   16d6c:	mov	r3, r7
   16d70:	add	r1, pc, r1
   16d74:	mov	r0, r4
   16d78:	blx	r5
   16d7c:	ldr	r3, [r4, #24]
   16d80:	add	r1, r4, r3, lsl #2
   16d84:	ldr	r2, [r1, #28]
   16d88:	add	r2, r2, #1
   16d8c:	str	r2, [r1, #28]
   16d90:	add	r3, r4, r3, lsl #2
   16d94:	ldr	r2, [r3, #68]	; 0x44
   16d98:	ldr	r6, [fp, #216]	; 0xd8
   16d9c:	ldr	r3, [r2, #68]	; 0x44
   16da0:	asr	r7, r6, #31
   16da4:	cmp	r3, #0
   16da8:	beq	17cf0 <main@@Base+0x130c4>
   16dac:	ldr	r1, [r4, #4]
   16db0:	mov	r2, r6
   16db4:	ldr	r5, [r1, #28]
   16db8:	ldr	r1, [pc, #1712]	; 17470 <main@@Base+0x12844>
   16dbc:	mov	r3, r7
   16dc0:	add	r1, pc, r1
   16dc4:	mov	r0, r4
   16dc8:	blx	r5
   16dcc:	ldr	r3, [r4, #24]
   16dd0:	add	r1, r4, r3, lsl #2
   16dd4:	ldr	r2, [r1, #28]
   16dd8:	add	r2, r2, #1
   16ddc:	str	r2, [r1, #28]
   16de0:	add	r3, r4, r3, lsl #2
   16de4:	ldr	r2, [r3, #68]	; 0x44
   16de8:	ldr	r6, [fp, #208]	; 0xd0
   16dec:	ldr	r3, [r2, #68]	; 0x44
   16df0:	asr	r7, r6, #31
   16df4:	cmp	r3, #0
   16df8:	beq	17d80 <main@@Base+0x13154>
   16dfc:	ldr	r1, [r4, #4]
   16e00:	mov	r2, r6
   16e04:	ldr	r5, [r1, #28]
   16e08:	ldr	r1, [pc, #1636]	; 17474 <main@@Base+0x12848>
   16e0c:	mov	r3, r7
   16e10:	add	r1, pc, r1
   16e14:	mov	r0, r4
   16e18:	blx	r5
   16e1c:	ldr	r3, [r4, #24]
   16e20:	add	r3, r4, r3, lsl #2
   16e24:	ldr	r2, [r3, #28]
   16e28:	add	r2, r2, #1
   16e2c:	str	r2, [r3, #28]
   16e30:	ldr	r5, [fp, #300]	; 0x12c
   16e34:	mov	r0, r5
   16e38:	bl	4284 <av_color_range_name@plt>
   16e3c:	cmp	r5, #0
   16e40:	cmpne	r0, #0
   16e44:	bne	17c8c <main@@Base+0x13060>
   16e48:	ldr	r2, [pc, #1576]	; 17478 <main@@Base+0x1284c>
   16e4c:	ldr	r1, [pc, #1576]	; 1747c <main@@Base+0x12850>
   16e50:	add	r2, pc, r2
   16e54:	add	r1, pc, r1
   16e58:	mov	r0, r4
   16e5c:	bl	131bc <main@@Base+0xe590>
   16e60:	ldr	r5, [fp, #312]	; 0x138
   16e64:	mov	r0, r5
   16e68:	bl	4800 <av_color_space_name@plt>
   16e6c:	cmp	r5, #2
   16e70:	cmpne	r0, #0
   16e74:	bne	17c74 <main@@Base+0x13048>
   16e78:	ldr	r2, [pc, #1536]	; 17480 <main@@Base+0x12854>
   16e7c:	ldr	r1, [pc, #1536]	; 17484 <main@@Base+0x12858>
   16e80:	add	r2, pc, r2
   16e84:	add	r1, pc, r1
   16e88:	mov	r0, r4
   16e8c:	bl	131bc <main@@Base+0xe590>
   16e90:	ldr	r5, [fp, #304]	; 0x130
   16e94:	mov	r0, r5
   16e98:	bl	44c4 <av_color_primaries_name@plt>
   16e9c:	cmp	r5, #2
   16ea0:	cmpne	r0, #0
   16ea4:	bne	17c5c <main@@Base+0x13030>
   16ea8:	ldr	r2, [pc, #1496]	; 17488 <main@@Base+0x1285c>
   16eac:	ldr	r1, [pc, #1496]	; 1748c <main@@Base+0x12860>
   16eb0:	add	r2, pc, r2
   16eb4:	add	r1, pc, r1
   16eb8:	mov	r0, r4
   16ebc:	bl	131bc <main@@Base+0xe590>
   16ec0:	ldr	r5, [fp, #308]	; 0x134
   16ec4:	mov	r0, r5
   16ec8:	bl	4824 <av_color_transfer_name@plt>
   16ecc:	cmp	r5, #2
   16ed0:	cmpne	r0, #0
   16ed4:	bne	17c44 <main@@Base+0x13018>
   16ed8:	ldr	r2, [pc, #1456]	; 17490 <main@@Base+0x12864>
   16edc:	ldr	r1, [pc, #1456]	; 17494 <main@@Base+0x12868>
   16ee0:	add	r2, pc, r2
   16ee4:	add	r1, pc, r1
   16ee8:	mov	r0, r4
   16eec:	bl	131bc <main@@Base+0xe590>
   16ef0:	ldr	r5, [fp, #316]	; 0x13c
   16ef4:	mov	r0, r5
   16ef8:	bl	3eb8 <av_chroma_location_name@plt>
   16efc:	cmp	r5, #0
   16f00:	cmpne	r0, #0
   16f04:	bne	17c2c <main@@Base+0x13000>
   16f08:	ldr	r2, [pc, #1416]	; 17498 <main@@Base+0x1286c>
   16f0c:	ldr	r1, [pc, #1416]	; 1749c <main@@Base+0x12870>
   16f10:	add	r2, pc, r2
   16f14:	add	r1, pc, r1
   16f18:	mov	r0, r4
   16f1c:	bl	131bc <main@@Base+0xe590>
   16f20:	b	167e8 <main@@Base+0x11bbc>
   16f24:	ldr	r1, [pc, #1396]	; 174a0 <main@@Base+0x12874>
   16f28:	ldr	r0, [r2, #64]	; 0x40
   16f2c:	add	r1, pc, r1
   16f30:	mov	r2, r3
   16f34:	bl	4644 <av_dict_get@plt>
   16f38:	cmp	r0, #0
   16f3c:	bne	16538 <main@@Base+0x1190c>
   16f40:	b	1656c <main@@Base+0x11940>
   16f44:	ldr	r1, [pc, #1368]	; 174a4 <main@@Base+0x12878>
   16f48:	ldr	r0, [r2, #64]	; 0x40
   16f4c:	add	r1, pc, r1
   16f50:	mov	r2, r3
   16f54:	bl	4644 <av_dict_get@plt>
   16f58:	cmp	r0, #0
   16f5c:	ldreq	r3, [r4, #24]
   16f60:	bne	164e8 <main@@Base+0x118bc>
   16f64:	b	1651c <main@@Base+0x118f0>
   16f68:	add	r1, r3, #1
   16f6c:	cmp	r1, #9
   16f70:	str	r1, [r4, #24]
   16f74:	bgt	17e74 <main@@Base+0x13248>
   16f78:	ldr	r0, [r4, #16]
   16f7c:	cmp	r1, #0
   16f80:	add	r0, r0, #648	; 0x288
   16f84:	streq	r1, [r4, #28]
   16f88:	streq	r0, [r4, #68]	; 0x44
   16f8c:	bne	17b80 <main@@Base+0x12f54>
   16f90:	ldr	r3, [r4, #4]
   16f94:	ldr	r3, [r3, #20]
   16f98:	cmp	r3, #0
   16f9c:	beq	16fac <main@@Base+0x12380>
   16fa0:	mov	r0, r4
   16fa4:	blx	r3
   16fa8:	ldr	r2, [fp, #292]	; 0x124
   16fac:	cmp	r2, #0
   16fb0:	ble	17900 <main@@Base+0x12cd4>
   16fb4:	ldr	r2, [r4, #24]
   16fb8:	ldr	r1, [fp, #288]	; 0x120
   16fbc:	add	r3, r2, #1
   16fc0:	cmp	r3, #9
   16fc4:	ldr	r9, [r1]
   16fc8:	str	r3, [r4, #24]
   16fcc:	bgt	17e40 <main@@Base+0x13214>
   16fd0:	ldr	r1, [pc, #1232]	; 174a8 <main@@Base+0x1287c>
   16fd4:	mov	sl, #0
   16fd8:	add	r1, pc, r1
   16fdc:	str	r1, [sp, #12]
   16fe0:	ldr	r1, [pc, #1220]	; 174ac <main@@Base+0x12880>
   16fe4:	add	r1, pc, r1
   16fe8:	str	r1, [sp, #44]	; 0x2c
   16fec:	b	170c0 <main@@Base+0x12494>
   16ff0:	cmp	r3, #12
   16ff4:	beq	172cc <main@@Base+0x126a0>
   16ff8:	cmp	r3, #11
   16ffc:	bne	17328 <main@@Base+0x126fc>
   17000:	ldr	r5, [r9, #4]
   17004:	ldr	r3, [r5, #80]	; 0x50
   17008:	cmp	r3, #0
   1700c:	bne	1792c <main@@Base+0x12d00>
   17010:	ldr	r3, [r5, #84]	; 0x54
   17014:	cmp	r3, #0
   17018:	bne	179f4 <main@@Base+0x12dc8>
   1701c:	ldr	r3, [r4, #24]
   17020:	cmp	r3, #0
   17024:	beq	17078 <main@@Base+0x1244c>
   17028:	add	r2, r4, r3, lsl #2
   1702c:	ldr	r1, [r2, #64]	; 0x40
   17030:	ldr	r0, [r1]
   17034:	cmn	r0, #1
   17038:	beq	17078 <main@@Base+0x1244c>
   1703c:	ldr	r1, [r2, #24]
   17040:	ldr	ip, [r2, #68]	; 0x44
   17044:	cmp	r0, #18
   17048:	add	r1, r1, #1
   1704c:	ldr	r0, [ip]
   17050:	str	r1, [r2, #24]
   17054:	bne	17078 <main@@Base+0x1244c>
   17058:	cmp	r0, #15
   1705c:	add	r1, r4, #8192	; 0x2000
   17060:	ldreq	r2, [r1, #2156]	; 0x86c
   17064:	ldrne	r2, [r1, #2160]	; 0x870
   17068:	addeq	r2, r2, #1
   1706c:	addne	r2, r2, #1
   17070:	streq	r2, [r1, #2156]	; 0x86c
   17074:	strne	r2, [r1, #2160]	; 0x870
   17078:	ldr	r2, [r4, #4]
   1707c:	ldr	r2, [r2, #24]
   17080:	cmp	r2, #0
   17084:	beq	17094 <main@@Base+0x12468>
   17088:	mov	r0, r4
   1708c:	blx	r2
   17090:	ldr	r3, [r4, #24]
   17094:	ldr	r2, [fp, #292]	; 0x124
   17098:	add	sl, sl, #1
   1709c:	cmp	r2, sl
   170a0:	sub	r2, r3, #1
   170a4:	str	r2, [r4, #24]
   170a8:	ble	17900 <main@@Base+0x12cd4>
   170ac:	ldr	r1, [fp, #288]	; 0x120
   170b0:	cmp	r3, #9
   170b4:	ldr	r9, [r1, sl, lsl #2]
   170b8:	str	r3, [r4, #24]
   170bc:	bgt	17e40 <main@@Base+0x13214>
   170c0:	ldr	r1, [r4, #16]
   170c4:	cmp	r3, #0
   170c8:	add	r1, r1, #720	; 0x2d0
   170cc:	streq	r3, [r4, #28]
   170d0:	streq	r1, [r4, #68]	; 0x44
   170d4:	beq	17104 <main@@Base+0x124d8>
   170d8:	mov	r0, #0
   170dc:	add	r2, r4, r2, lsl #2
   170e0:	ldr	r2, [r2, #68]	; 0x44
   170e4:	add	r3, r4, r3, lsl #2
   170e8:	ldr	r2, [r2]
   170ec:	str	r1, [r3, #68]	; 0x44
   170f0:	cmp	r2, #18
   170f4:	str	r0, [r3, #28]
   170f8:	addeq	r3, r4, #8192	; 0x2000
   170fc:	ldreq	r2, [r3, #2160]	; 0x870
   17100:	streq	r2, [r3, #2164]	; 0x874
   17104:	ldr	r3, [r4, #4]
   17108:	ldr	r3, [r3, #20]
   1710c:	cmp	r3, #0
   17110:	beq	1711c <main@@Base+0x124f0>
   17114:	mov	r0, r4
   17118:	blx	r3
   1711c:	ldr	r0, [r9]
   17120:	bl	4710 <av_frame_side_data_name@plt>
   17124:	ldr	r3, [r4, #24]
   17128:	subs	r5, r0, #0
   1712c:	add	r3, r4, r3, lsl #2
   17130:	ldr	r2, [r3, #68]	; 0x44
   17134:	ldr	r3, [sp, #12]
   17138:	moveq	r5, r3
   1713c:	ldr	r3, [r2, #68]	; 0x44
   17140:	cmp	r3, #0
   17144:	beq	17308 <main@@Base+0x126dc>
   17148:	ldr	r3, [r4, #4]
   1714c:	ldr	r1, [pc, #860]	; 174b0 <main@@Base+0x12884>
   17150:	mov	r2, r5
   17154:	ldr	r3, [r3, #36]	; 0x24
   17158:	add	r1, pc, r1
   1715c:	mov	r0, r4
   17160:	blx	r3
   17164:	ldr	r3, [r4, #24]
   17168:	add	r3, r4, r3, lsl #2
   1716c:	ldr	r2, [r3, #28]
   17170:	add	r2, r2, #1
   17174:	str	r2, [r3, #28]
   17178:	ldr	r3, [r9]
   1717c:	cmp	r3, #6
   17180:	bne	16ff0 <main@@Base+0x123c4>
   17184:	ldr	r3, [r9, #8]
   17188:	cmp	r3, #35	; 0x23
   1718c:	ble	1701c <main@@Base+0x123f0>
   17190:	add	r7, sp, #1072	; 0x430
   17194:	ldr	r6, [pc, #792]	; 174b4 <main@@Base+0x12888>
   17198:	add	r7, r7, #12
   1719c:	add	r6, pc, r6
   171a0:	mvn	r2, #0
   171a4:	mov	r0, r7
   171a8:	mov	r1, #0
   171ac:	ldr	r5, [r9, #4]
   171b0:	bl	3f48 <av_bprint_init@plt>
   171b4:	mov	r1, r6
   171b8:	mov	r0, r7
   171bc:	bl	459c <av_bprintf@plt>
   171c0:	mov	r2, r6
   171c4:	str	fp, [sp, #40]	; 0x28
   171c8:	mov	r6, #9
   171cc:	mov	r8, #0
   171d0:	mov	fp, r2
   171d4:	ldr	r3, [pc, #732]	; 174b8 <main@@Base+0x1288c>
   171d8:	str	r9, [sp, #28]
   171dc:	add	r3, pc, r3
   171e0:	ldr	r9, [sp, #44]	; 0x2c
   171e4:	str	r3, [sp, #16]
   171e8:	str	sl, [sp, #32]
   171ec:	str	r4, [sp, #36]	; 0x24
   171f0:	mov	r2, r8
   171f4:	ldr	r1, [sp, #16]
   171f8:	mov	r0, r7
   171fc:	bl	459c <av_bprintf@plt>
   17200:	cmp	r6, #3
   17204:	movlt	r4, r6
   17208:	movge	r4, #3
   1720c:	cmp	r6, #0
   17210:	ble	17258 <main@@Base+0x1262c>
   17214:	mov	sl, r6
   17218:	ldrb	r2, [r5, #1]
   1721c:	ldrb	r3, [r5]
   17220:	ldrb	r1, [r5, #2]
   17224:	orr	r3, r3, r2, lsl #8
   17228:	ldrb	r2, [r5, #3]
   1722c:	orr	r3, r3, r1, lsl #16
   17230:	orr	r2, r3, r2, lsl #24
   17234:	sub	sl, sl, #1
   17238:	mov	r1, r9
   1723c:	mov	r0, r7
   17240:	bl	459c <av_bprintf@plt>
   17244:	sub	r3, r6, sl
   17248:	cmp	r4, r3
   1724c:	add	r5, r5, #4
   17250:	bgt	17218 <main@@Base+0x125ec>
   17254:	mov	r6, sl
   17258:	mov	r1, fp
   1725c:	mov	r0, r7
   17260:	bl	459c <av_bprintf@plt>
   17264:	cmp	r6, #0
   17268:	add	r8, r8, #1
   1726c:	bne	171f0 <main@@Base+0x125c4>
   17270:	ldr	r4, [sp, #36]	; 0x24
   17274:	ldr	r1, [pc, #576]	; 174bc <main@@Base+0x12890>
   17278:	ldr	r2, [sp, #1084]	; 0x43c
   1727c:	ldr	r9, [sp, #28]
   17280:	add	r1, pc, r1
   17284:	mov	r0, r4
   17288:	ldr	sl, [sp, #32]
   1728c:	ldr	fp, [sp, #40]	; 0x28
   17290:	bl	12fe4 <main@@Base+0xe3b8>
   17294:	mov	r1, r6
   17298:	mov	r0, r7
   1729c:	bl	4308 <av_bprint_finalize@plt>
   172a0:	ldr	r0, [r9, #4]
   172a4:	bl	43bc <av_display_rotation_get@plt>
   172a8:	vmov	r0, r1, d0
   172ac:	bl	1b9f0 <vc_gpuserv_execute_code@@Base+0x85c>
   172b0:	mov	r3, r1
   172b4:	ldr	r1, [pc, #516]	; 174c0 <main@@Base+0x12894>
   172b8:	mov	r2, r0
   172bc:	add	r1, pc, r1
   172c0:	mov	r0, r4
   172c4:	bl	11004 <main@@Base+0xc3d8>
   172c8:	b	1701c <main@@Base+0x123f0>
   172cc:	ldr	r3, [r9, #8]
   172d0:	cmp	r3, #7
   172d4:	ble	1701c <main@@Base+0x123f0>
   172d8:	ldr	r3, [r9, #4]
   172dc:	add	r5, sp, #2096	; 0x830
   172e0:	add	r5, r5, #12
   172e4:	ldr	r1, [r3]
   172e8:	mov	r0, r5
   172ec:	bl	3f0c <av_timecode_make_mpeg_tc_string@plt>
   172f0:	ldr	r1, [pc, #460]	; 174c4 <main@@Base+0x12898>
   172f4:	mov	r2, r5
   172f8:	add	r1, pc, r1
   172fc:	mov	r0, r4
   17300:	bl	12fe4 <main@@Base+0xe3b8>
   17304:	b	1701c <main@@Base+0x123f0>
   17308:	ldr	r1, [pc, #440]	; 174c8 <main@@Base+0x1289c>
   1730c:	ldr	r0, [r2, #64]	; 0x40
   17310:	add	r1, pc, r1
   17314:	mov	r2, r3
   17318:	bl	4644 <av_dict_get@plt>
   1731c:	cmp	r0, #0
   17320:	bne	17148 <main@@Base+0x1251c>
   17324:	b	17178 <main@@Base+0x1254c>
   17328:	cmp	r3, #14
   1732c:	bne	17a28 <main@@Base+0x12dfc>
   17330:	ldr	r5, [r9, #4]
   17334:	ldr	r1, [pc, #400]	; 174cc <main@@Base+0x128a0>
   17338:	ldr	r2, [r5]
   1733c:	mov	r0, r4
   17340:	mov	r3, #0
   17344:	add	r1, pc, r1
   17348:	bl	11004 <main@@Base+0xc3d8>
   1734c:	ldr	r1, [pc, #380]	; 174d0 <main@@Base+0x128a4>
   17350:	ldr	r2, [r5, #4]
   17354:	mov	r3, #0
   17358:	add	r1, pc, r1
   1735c:	mov	r0, r4
   17360:	bl	11004 <main@@Base+0xc3d8>
   17364:	b	1701c <main@@Base+0x123f0>
   17368:	ldr	r2, [sp, #20]
   1736c:	ldr	r3, [pc, #352]	; 174d4 <main@@Base+0x128a8>
   17370:	ldr	r3, [r2, r3]
   17374:	mov	r0, r3
   17378:	str	r3, [sp, #16]
   1737c:	bl	3fd8 <pthread_mutex_lock@plt>
   17380:	ldr	r3, [r9, #24]
   17384:	cmp	r3, #0
   17388:	beq	17cc4 <main@@Base+0x13098>
   1738c:	mov	r1, #12
   17390:	mov	r0, r4
   17394:	bl	1198c <main@@Base+0xcd60>
   17398:	ldr	r2, [r9, #24]
   1739c:	cmp	r2, #0
   173a0:	ble	178dc <main@@Base+0x12cb0>
   173a4:	ldr	r3, [pc, #300]	; 174d8 <main@@Base+0x128ac>
   173a8:	ldr	r7, [pc, #300]	; 174dc <main@@Base+0x128b0>
   173ac:	add	r3, pc, r3
   173b0:	add	r7, pc, r7
   173b4:	str	fp, [sp, #28]
   173b8:	mov	r8, #0
   173bc:	str	r3, [sp, #12]
   173c0:	mov	fp, r7
   173c4:	b	175e0 <main@@Base+0x129b4>
   173c8:	ldrdeq	fp, [r1], -ip
   173cc:	andeq	r0, r0, r8, ror #7
   173d0:			; <UNDEFINED> instruction: 0x000086b0
   173d4:	andeq	r8, r0, r0, lsl r8
   173d8:	ldrdeq	r8, [r0], -r0
   173dc:			; <UNDEFINED> instruction: 0x000087b4
   173e0:	andeq	r8, r0, r0, lsr #15
   173e4:	muleq	r0, r8, r7
   173e8:	andeq	r8, r0, ip, lsl #15
   173ec:	andeq	r8, r0, r4, lsl #15
   173f0:	andeq	r8, r0, r4, lsl #15
   173f4:	andeq	r8, r0, r8, lsr r5
   173f8:	andeq	r8, r0, r8, ror r7
   173fc:	andeq	r8, r0, r4, lsl r5
   17400:	andeq	r8, r0, r4, ror #14
   17404:	andeq	r7, r0, r8, lsl #23
   17408:	andeq	r8, r0, ip, lsr #14
   1740c:			; <UNDEFINED> instruction: 0x000079bc
   17410:	strdeq	r8, [r0], -r4
   17414:			; <UNDEFINED> instruction: 0x000087b0
   17418:	andeq	r8, r0, r0, lsl #15
   1741c:	andeq	r8, r0, ip, lsr r7
   17420:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   17424:	andeq	ip, r1, r0, lsl #9
   17428:	andeq	r8, r0, r4, asr #32
   1742c:	andeq	r8, r0, ip, asr #3
   17430:	andeq	ip, r1, r0, lsl #5
   17434:			; <UNDEFINED> instruction: 0x000003b8
   17438:	andeq	r8, r0, r8, lsr #32
   1743c:	andeq	r8, r0, ip, lsl #5
   17440:	andeq	r8, r0, r4
   17444:	andeq	r8, r0, r0, ror r2
   17448:	andeq	r8, r0, ip, lsr #4
   1744c:	andeq	r8, r0, r4, ror #3
   17450:			; <UNDEFINED> instruction: 0x000081b4
   17454:	strdeq	r7, [r0], -r8
   17458:	andeq	r8, r0, r8, lsl #3
   1745c:	andeq	r7, r0, r4, ror #13
   17460:	andeq	r8, r0, r0, ror #2
   17464:	andeq	r8, r0, ip, lsr #2
   17468:	strdeq	r8, [r0], -r4
   1746c:	strheq	r8, [r0], -ip
   17470:	andeq	r8, r0, r0, lsl #1
   17474:	andeq	r8, r0, r0, asr #32
   17478:	andeq	r7, r0, ip, ror #26
   1747c:	andeq	r8, r0, r8
   17480:	andeq	r7, r0, ip, lsr sp
   17484:	andeq	r7, r0, r4, ror #31
   17488:	andeq	r7, r0, ip, lsl #26
   1748c:	andeq	r7, r0, r0, asr #31
   17490:	ldrdeq	r7, [r0], -ip
   17494:	andeq	r7, r0, r0, lsr #31
   17498:	andeq	r7, r0, r4, lsl #31
   1749c:	andeq	r7, r0, ip, lsl #31
   174a0:	strdeq	r7, [r0], -r0
   174a4:	andeq	r7, r0, r0, asr #27
   174a8:	andeq	r7, r0, r4, ror #23
   174ac:	andeq	r7, r0, r0, ror fp
   174b0:	andeq	r7, r0, ip, ror #20
   174b4:	strdeq	r5, [r0], -r4
   174b8:	andeq	r7, r0, r0, ror r9
   174bc:	ldrdeq	r7, [r0], -ip
   174c0:	andeq	r7, r0, r8, lsl r9
   174c4:	andeq	r7, r0, r8, lsr #24
   174c8:			; <UNDEFINED> instruction: 0x000078b4
   174cc:			; <UNDEFINED> instruction: 0x000079b0
   174d0:	andeq	r7, r0, r8, lsr #19
   174d4:	strdeq	r0, [r0], -r4
   174d8:	andeq	r7, r0, r8, lsr fp
   174dc:			; <UNDEFINED> instruction: 0x0001b8bc
   174e0:	andeq	fp, r1, r0, lsl #12
   174e4:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   174e8:	andeq	fp, r1, ip, ror r5
   174ec:	ldrdeq	r7, [r0], -r4
   174f0:	andeq	fp, r1, r8, lsr #10
   174f4:	muleq	r0, r4, r7
   174f8:	andeq	r7, r0, ip, ror #14
   174fc:	andeq	fp, r1, r0, lsr #9
   17500:	andeq	r7, r0, r4, asr #14
   17504:	andeq	fp, r1, r4, lsl #8
   17508:	ldrdeq	fp, [r1], -r4
   1750c:	andeq	fp, r1, r4, lsl #7
   17510:	andeq	r7, r0, r4, lsr #5
   17514:	andeq	r7, r0, r4, asr r2
   17518:	andeq	r7, r0, r0, asr r3
   1751c:	andeq	r7, r0, r0, asr #6
   17520:	andeq	r7, r0, r0, lsr r3
   17524:	andeq	r7, r0, r0, lsr #6
   17528:	andeq	r7, r0, r0, lsl r3
   1752c:	andeq	r7, r0, r0, lsl #6
   17530:	strdeq	r7, [r0], -r0
   17534:	andeq	r7, r0, r8, ror #5
   17538:	ldrdeq	r7, [r0], -r0
   1753c:	andeq	r7, r0, ip, asr #5
   17540:	andeq	r7, r0, r0, ror #25
   17544:	andeq	r7, r0, r4, asr r3
   17548:	andeq	r6, r0, r0, asr #11
   1754c:	ldrdeq	r7, [r0], -r8
   17550:			; <UNDEFINED> instruction: 0x000072b0
   17554:	andeq	r7, r0, r0, lsr #1
   17558:			; <UNDEFINED> instruction: 0x000073b4
   1755c:	andeq	r6, r0, r0, ror #31
   17560:	andeq	r7, r0, ip, ror #4
   17564:	andeq	r7, r0, r4, lsr r3
   17568:	andeq	r7, r0, r4, ror #27
   1756c:	andeq	r6, r0, r8, asr #30
   17570:	strdeq	r7, [r0], -r0
   17574:	andeq	r7, r0, ip, ror #5
   17578:	andeq	r7, r0, ip, ror #4
   1757c:	andeq	r7, r0, r8, lsr r2
   17580:	andeq	r7, r0, r0, lsl r2
   17584:	andeq	r7, r0, ip, ror #3
   17588:	andeq	r7, r0, r8, asr #3
   1758c:	andeq	r7, r0, r8, asr r2
   17590:	strdeq	r7, [r0], -r4
   17594:	andeq	r7, r0, r8, asr #2
   17598:	andeq	r7, r0, r0, lsl r1
   1759c:	ldrdeq	r7, [r0], -r4
   175a0:	muleq	r0, r8, r0
   175a4:	andeq	r7, r0, r8, asr #1
   175a8:	andeq	r7, r0, r0, lsr #2
   175ac:	strdeq	r7, [r0], -r4
   175b0:	ldrdeq	r6, [r0], -r8
   175b4:	andeq	r6, r0, ip, lsr #27
   175b8:	andeq	r6, r0, r0, asr #31
   175bc:	muleq	r0, r0, sp
   175c0:	andeq	r7, r0, r0, lsl #1
   175c4:	andeq	r6, r0, r0, lsr #15
   175c8:	andeq	r0, r0, r6, ror r2
   175cc:	andeq	r4, r0, r4, lsr #13
   175d0:	andeq	r6, r0, r4, ror r7
   175d4:	add	r8, r8, #1
   175d8:	cmp	r8, r2
   175dc:	bge	17880 <main@@Base+0x12c54>
   175e0:	add	r5, r8, r8, lsl #1
   175e4:	ldr	r3, [r9, #28]
   175e8:	lsl	r5, r5, #3
   175ec:	add	r3, r3, r5
   175f0:	ldr	r1, [r3, #4]
   175f4:	cmp	sl, r1
   175f8:	blt	175d4 <main@@Base+0x129a8>
   175fc:	ldr	r1, [r4, #24]
   17600:	add	r2, r1, #1
   17604:	cmp	r2, #9
   17608:	str	r2, [r4, #24]
   1760c:	bgt	17e74 <main@@Base+0x13248>
   17610:	ldr	r0, [r4, #16]
   17614:	cmp	r2, #0
   17618:	add	r0, r0, #792	; 0x318
   1761c:	streq	r2, [r4, #28]
   17620:	streq	r0, [r4, #68]	; 0x44
   17624:	beq	17650 <main@@Base+0x12a24>
   17628:	mov	r2, #0
   1762c:	add	r1, r4, r1, lsl #2
   17630:	ldr	ip, [r1, #68]	; 0x44
   17634:	ldr	ip, [ip]
   17638:	str	r2, [r1, #32]
   1763c:	cmp	ip, #18
   17640:	str	r0, [r1, #72]	; 0x48
   17644:	addeq	r2, r4, #8192	; 0x2000
   17648:	ldreq	r1, [r2, #2160]	; 0x870
   1764c:	streq	r1, [r2, #2164]	; 0x874
   17650:	ldr	r2, [r4, #4]
   17654:	ldr	r2, [r2, #20]
   17658:	cmp	r2, #0
   1765c:	beq	17678 <main@@Base+0x12a4c>
   17660:	mov	r0, r4
   17664:	blx	r2
   17668:	ldr	r3, [pc, #-400]	; 174e0 <main@@Base+0x128b4>
   1766c:	add	r3, pc, r3
   17670:	ldr	r3, [r3, #28]
   17674:	add	r3, r3, r5
   17678:	ldr	r2, [r3]
   1767c:	ldr	r1, [sp, #12]
   17680:	mov	r0, r4
   17684:	bl	12fe4 <main@@Base+0xe3b8>
   17688:	ldr	r3, [r4, #24]
   1768c:	ldr	r2, [fp, #28]
   17690:	add	r3, r4, r3, lsl #2
   17694:	ldr	r1, [r3, #68]	; 0x44
   17698:	add	r2, r2, r5
   1769c:	ldr	r3, [r1, #68]	; 0x44
   176a0:	ldr	r6, [r2, #4]
   176a4:	cmp	r3, #0
   176a8:	asr	r7, r6, #31
   176ac:	beq	17bcc <main@@Base+0x12fa0>
   176b0:	ldr	r1, [r4, #4]
   176b4:	mov	r2, r6
   176b8:	ldr	r6, [r1, #28]
   176bc:	ldr	r1, [pc, #-480]	; 174e4 <main@@Base+0x128b8>
   176c0:	mov	r3, r7
   176c4:	add	r1, pc, r1
   176c8:	mov	r0, r4
   176cc:	blx	r6
   176d0:	ldr	r3, [r4, #24]
   176d4:	add	r1, r4, r3, lsl #2
   176d8:	ldr	r2, [r1, #28]
   176dc:	add	r2, r2, #1
   176e0:	str	r2, [r1, #28]
   176e4:	add	r3, r4, r3, lsl #2
   176e8:	ldr	r2, [pc, #-520]	; 174e8 <main@@Base+0x128bc>
   176ec:	ldr	r1, [r3, #68]	; 0x44
   176f0:	add	r2, pc, r2
   176f4:	ldr	r3, [r1, #68]	; 0x44
   176f8:	ldr	r2, [r2, #28]
   176fc:	cmp	r3, #0
   17700:	add	r2, r2, r5
   17704:	ldr	r6, [r2, #12]
   17708:	beq	17bac <main@@Base+0x12f80>
   1770c:	ldr	r3, [r4, #4]
   17710:	ldr	r1, [pc, #-556]	; 174ec <main@@Base+0x128c0>
   17714:	mov	r2, r6
   17718:	add	r1, pc, r1
   1771c:	ldr	r6, [r3, #28]
   17720:	mov	r0, r4
   17724:	mov	r3, #0
   17728:	blx	r6
   1772c:	ldr	r3, [r4, #24]
   17730:	add	r3, r4, r3, lsl #2
   17734:	ldr	r2, [r3, #28]
   17738:	add	r2, r2, #1
   1773c:	str	r2, [r3, #28]
   17740:	ldr	r6, [pc, #-600]	; 174f0 <main@@Base+0x128c4>
   17744:	add	r6, pc, r6
   17748:	ldr	r3, [r6, #28]
   1774c:	add	r3, r3, r5
   17750:	ldr	r2, [r3, #16]
   17754:	cmp	r2, #0
   17758:	beq	17bf8 <main@@Base+0x12fcc>
   1775c:	ldr	r1, [pc, #-624]	; 174f4 <main@@Base+0x128c8>
   17760:	mov	r0, r4
   17764:	add	r1, pc, r1
   17768:	bl	12fe4 <main@@Base+0xe3b8>
   1776c:	ldr	r3, [r4, #24]
   17770:	ldr	r2, [r6, #28]
   17774:	add	r3, r4, r3, lsl #2
   17778:	ldr	r1, [r3, #68]	; 0x44
   1777c:	add	r2, r2, r5
   17780:	ldr	r3, [r1, #68]	; 0x44
   17784:	ldr	r6, [r2, #20]
   17788:	cmp	r3, #0
   1778c:	beq	17ca4 <main@@Base+0x13078>
   17790:	ldr	r3, [r4, #4]
   17794:	ldr	r1, [pc, #-676]	; 174f8 <main@@Base+0x128cc>
   17798:	mov	r2, r6
   1779c:	add	r1, pc, r1
   177a0:	ldr	r6, [r3, #28]
   177a4:	mov	r0, r4
   177a8:	mov	r3, #0
   177ac:	blx	r6
   177b0:	ldr	r3, [r4, #24]
   177b4:	add	r3, r4, r3, lsl #2
   177b8:	ldr	r2, [r3, #28]
   177bc:	add	r2, r2, #1
   177c0:	str	r2, [r3, #28]
   177c4:	ldr	r3, [pc, #-720]	; 174fc <main@@Base+0x128d0>
   177c8:	ldr	r1, [pc, #-720]	; 17500 <main@@Base+0x128d4>
   177cc:	add	r3, pc, r3
   177d0:	ldr	r3, [r3, #28]
   177d4:	add	r1, pc, r1
   177d8:	add	r5, r3, r5
   177dc:	mov	r0, r4
   177e0:	ldr	r2, [r5, #8]
   177e4:	bl	12fe4 <main@@Base+0xe3b8>
   177e8:	ldr	r3, [r4, #24]
   177ec:	cmp	r3, #0
   177f0:	beq	17844 <main@@Base+0x12c18>
   177f4:	add	r2, r4, r3, lsl #2
   177f8:	ldr	r1, [r2, #64]	; 0x40
   177fc:	ldr	r0, [r1]
   17800:	cmn	r0, #1
   17804:	beq	17844 <main@@Base+0x12c18>
   17808:	ldr	r1, [r2, #24]
   1780c:	ldr	ip, [r2, #68]	; 0x44
   17810:	cmp	r0, #18
   17814:	add	r1, r1, #1
   17818:	ldr	r0, [ip]
   1781c:	str	r1, [r2, #24]
   17820:	bne	17844 <main@@Base+0x12c18>
   17824:	cmp	r0, #15
   17828:	add	r1, r4, #8192	; 0x2000
   1782c:	ldreq	r2, [r1, #2156]	; 0x86c
   17830:	ldrne	r2, [r1, #2160]	; 0x870
   17834:	addeq	r2, r2, #1
   17838:	addne	r2, r2, #1
   1783c:	streq	r2, [r1, #2156]	; 0x86c
   17840:	strne	r2, [r1, #2160]	; 0x870
   17844:	ldr	r2, [r4, #4]
   17848:	ldr	r2, [r2, #24]
   1784c:	cmp	r2, #0
   17850:	beq	17860 <main@@Base+0x12c34>
   17854:	mov	r0, r4
   17858:	blx	r2
   1785c:	ldr	r3, [r4, #24]
   17860:	ldr	r2, [pc, #-868]	; 17504 <main@@Base+0x128d8>
   17864:	add	r8, r8, #1
   17868:	add	r2, pc, r2
   1786c:	ldr	r2, [r2, #24]
   17870:	sub	r3, r3, #1
   17874:	cmp	r8, r2
   17878:	str	r3, [r4, #24]
   1787c:	blt	175e0 <main@@Base+0x129b4>
   17880:	cmp	r2, #0
   17884:	ldr	fp, [sp, #28]
   17888:	ble	178dc <main@@Base+0x12cb0>
   1788c:	mov	r5, #0
   17890:	mov	r7, r5
   17894:	ldr	r6, [pc, #-916]	; 17508 <main@@Base+0x128dc>
   17898:	add	r6, pc, r6
   1789c:	ldr	r0, [r6, #28]
   178a0:	add	r7, r7, #1
   178a4:	add	r0, r0, r5
   178a8:	bl	3ec4 <av_freep@plt>
   178ac:	ldr	r0, [r6, #28]
   178b0:	add	r0, r0, r5
   178b4:	add	r0, r0, #16
   178b8:	bl	3ec4 <av_freep@plt>
   178bc:	ldr	r0, [r6, #28]
   178c0:	add	r0, r0, r5
   178c4:	add	r0, r0, #8
   178c8:	bl	3ec4 <av_freep@plt>
   178cc:	ldr	r3, [r6, #24]
   178d0:	add	r5, r5, #24
   178d4:	cmp	r7, r3
   178d8:	blt	1789c <main@@Base+0x12c70>
   178dc:	mov	r2, #0
   178e0:	ldr	r3, [pc, #-988]	; 1750c <main@@Base+0x128e0>
   178e4:	ldr	r0, [sp, #16]
   178e8:	add	r3, pc, r3
   178ec:	str	r2, [r3, #24]
   178f0:	bl	4860 <pthread_mutex_unlock@plt>
   178f4:	mov	r0, r4
   178f8:	bl	ef94 <main@@Base+0xa368>
   178fc:	b	169fc <main@@Base+0x11dd0>
   17900:	mov	r0, r4
   17904:	bl	ef94 <main@@Base+0xa368>
   17908:	ldr	r3, [r4, #24]
   1790c:	b	16a0c <main@@Base+0x11de0>
   17910:	ldr	r2, [pc, #-1032]	; 17510 <main@@Base+0x128e4>
   17914:	ldr	r1, [pc, #-1032]	; 17514 <main@@Base+0x128e8>
   17918:	add	r2, pc, r2
   1791c:	add	r1, pc, r1
   17920:	mov	r0, r4
   17924:	bl	131bc <main@@Base+0xe590>
   17928:	b	164c8 <main@@Base+0x1189c>
   1792c:	ldr	r1, [pc, #-1052]	; 17518 <main@@Base+0x128ec>
   17930:	ldm	r5, {r2, r3}
   17934:	add	r1, pc, r1
   17938:	mov	r0, r4
   1793c:	bl	146f0 <main@@Base+0xfac4>
   17940:	ldr	r1, [pc, #-1068]	; 1751c <main@@Base+0x128f0>
   17944:	add	r3, r5, #8
   17948:	ldm	r3, {r2, r3}
   1794c:	add	r1, pc, r1
   17950:	mov	r0, r4
   17954:	bl	146f0 <main@@Base+0xfac4>
   17958:	ldr	r1, [pc, #-1088]	; 17520 <main@@Base+0x128f4>
   1795c:	add	r3, r5, #16
   17960:	ldm	r3, {r2, r3}
   17964:	add	r1, pc, r1
   17968:	mov	r0, r4
   1796c:	bl	146f0 <main@@Base+0xfac4>
   17970:	ldr	r1, [pc, #-1108]	; 17524 <main@@Base+0x128f8>
   17974:	add	r3, r5, #24
   17978:	ldm	r3, {r2, r3}
   1797c:	add	r1, pc, r1
   17980:	mov	r0, r4
   17984:	bl	146f0 <main@@Base+0xfac4>
   17988:	ldr	r1, [pc, #-1128]	; 17528 <main@@Base+0x128fc>
   1798c:	add	r3, r5, #32
   17990:	ldm	r3, {r2, r3}
   17994:	add	r1, pc, r1
   17998:	mov	r0, r4
   1799c:	bl	146f0 <main@@Base+0xfac4>
   179a0:	ldr	r1, [pc, #-1148]	; 1752c <main@@Base+0x12900>
   179a4:	add	r3, r5, #40	; 0x28
   179a8:	ldm	r3, {r2, r3}
   179ac:	add	r1, pc, r1
   179b0:	mov	r0, r4
   179b4:	bl	146f0 <main@@Base+0xfac4>
   179b8:	ldr	r1, [pc, #-1168]	; 17530 <main@@Base+0x12904>
   179bc:	add	r3, r5, #48	; 0x30
   179c0:	ldm	r3, {r2, r3}
   179c4:	add	r1, pc, r1
   179c8:	mov	r0, r4
   179cc:	bl	146f0 <main@@Base+0xfac4>
   179d0:	ldr	r1, [pc, #-1188]	; 17534 <main@@Base+0x12908>
   179d4:	add	r3, r5, #56	; 0x38
   179d8:	ldm	r3, {r2, r3}
   179dc:	add	r1, pc, r1
   179e0:	mov	r0, r4
   179e4:	bl	146f0 <main@@Base+0xfac4>
   179e8:	ldr	r3, [r5, #84]	; 0x54
   179ec:	cmp	r3, #0
   179f0:	beq	1701c <main@@Base+0x123f0>
   179f4:	ldr	r1, [pc, #-1220]	; 17538 <main@@Base+0x1290c>
   179f8:	add	r3, r5, #64	; 0x40
   179fc:	mov	r0, r4
   17a00:	ldm	r3, {r2, r3}
   17a04:	add	r1, pc, r1
   17a08:	bl	146f0 <main@@Base+0xfac4>
   17a0c:	ldr	r1, [pc, #-1240]	; 1753c <main@@Base+0x12910>
   17a10:	add	r5, r5, #72	; 0x48
   17a14:	ldm	r5, {r2, r3}
   17a18:	add	r1, pc, r1
   17a1c:	mov	r0, r4
   17a20:	bl	146f0 <main@@Base+0xfac4>
   17a24:	b	1701c <main@@Base+0x123f0>
   17a28:	cmp	r3, #15
   17a2c:	bne	1701c <main@@Base+0x123f0>
   17a30:	ldr	r1, [pc, #-1272]	; 17540 <main@@Base+0x12914>
   17a34:	mov	r3, #1
   17a38:	mov	r2, #0
   17a3c:	add	r1, pc, r1
   17a40:	ldr	r0, [r9, #12]
   17a44:	bl	4644 <av_dict_get@plt>
   17a48:	cmp	r0, #0
   17a4c:	beq	17a5c <main@@Base+0x12e30>
   17a50:	ldm	r0, {r1, r2}
   17a54:	mov	r0, r4
   17a58:	bl	12fe4 <main@@Base+0xe3b8>
   17a5c:	ldr	r2, [r9, #8]
   17a60:	ldr	r1, [pc, #-1316]	; 17544 <main@@Base+0x12918>
   17a64:	asr	r3, r2, #31
   17a68:	add	r1, pc, r1
   17a6c:	mov	r0, r4
   17a70:	bl	11004 <main@@Base+0xc3d8>
   17a74:	b	1701c <main@@Base+0x123f0>
   17a78:	vldr	s15, [r5, #16]
   17a7c:	vcvt.f64.s32	d6, s15
   17a80:	vldr	s15, [r5, #20]
   17a84:	vcvt.f64.s32	d7, s15
   17a88:	vdiv.f64	d8, d6, d7
   17a8c:	bl	1b8ac <vc_gpuserv_execute_code@@Base+0x718>
   17a90:	vmov	d7, r0, r1
   17a94:	vmul.f64	d7, d8, d7
   17a98:	ldr	ip, [pc, #-1368]	; 17548 <main@@Base+0x1291c>
   17a9c:	add	r7, sp, #2128	; 0x850
   17aa0:	add	ip, pc, ip
   17aa4:	add	ip, ip, #16
   17aa8:	add	r7, r7, #4
   17aac:	vmov	r2, r3, d7
   17ab0:	str	ip, [sp]
   17ab4:	mov	r0, r7
   17ab8:	bl	12248 <main@@Base+0xd61c>
   17abc:	ldr	r1, [pc, #-1400]	; 1754c <main@@Base+0x12920>
   17ac0:	mov	r2, r7
   17ac4:	add	r1, pc, r1
   17ac8:	mov	r0, r4
   17acc:	bl	12fe4 <main@@Base+0xe3b8>
   17ad0:	b	16644 <main@@Base+0x11a18>
   17ad4:	ldr	r1, [pc, #-1420]	; 17550 <main@@Base+0x12924>
   17ad8:	mov	r0, r4
   17adc:	add	r1, pc, r1
   17ae0:	bl	11004 <main@@Base+0xc3d8>
   17ae4:	b	16620 <main@@Base+0x119f4>
   17ae8:	mov	r3, #0
   17aec:	add	r2, r4, r2, lsl #2
   17af0:	ldr	r0, [r2, #68]	; 0x44
   17af4:	ldr	r0, [r0]
   17af8:	str	r3, [r2, #32]
   17afc:	cmp	r0, #18
   17b00:	str	r1, [r2, #72]	; 0x48
   17b04:	addeq	r3, r4, #8192	; 0x2000
   17b08:	ldreq	r2, [r3, #2160]	; 0x870
   17b0c:	streq	r2, [r3, #2164]	; 0x874
   17b10:	b	16834 <main@@Base+0x11c08>
   17b14:	ldr	r2, [pc, #-1480]	; 17554 <main@@Base+0x12928>
   17b18:	ldr	r1, [pc, #-1480]	; 17558 <main@@Base+0x1292c>
   17b1c:	add	r2, pc, r2
   17b20:	add	r1, pc, r1
   17b24:	mov	r0, r4
   17b28:	bl	131bc <main@@Base+0xe590>
   17b2c:	b	167e8 <main@@Base+0x11bbc>
   17b30:	add	r6, sp, #1072	; 0x430
   17b34:	add	r6, r6, #12
   17b38:	mov	r0, r6
   17b3c:	mov	r2, #1
   17b40:	mov	r1, #0
   17b44:	ldr	r7, [sp, #56]	; 0x38
   17b48:	bl	3f48 <av_bprint_init@plt>
   17b4c:	ldr	r1, [pc, #-1528]	; 1755c <main@@Base+0x12930>
   17b50:	mov	r0, r6
   17b54:	mov	r2, r5
   17b58:	str	r7, [sp]
   17b5c:	mov	r3, #58	; 0x3a
   17b60:	add	r1, pc, r1
   17b64:	bl	459c <av_bprintf@plt>
   17b68:	ldr	r1, [pc, #-1552]	; 17560 <main@@Base+0x12934>
   17b6c:	ldr	r2, [sp, #1084]	; 0x43c
   17b70:	add	r1, pc, r1
   17b74:	mov	r0, r4
   17b78:	bl	12fe4 <main@@Base+0xe3b8>
   17b7c:	b	16c60 <main@@Base+0x12034>
   17b80:	mov	r1, #0
   17b84:	add	r3, r4, r3, lsl #2
   17b88:	ldr	ip, [r3, #68]	; 0x44
   17b8c:	ldr	ip, [ip]
   17b90:	str	r1, [r3, #32]
   17b94:	cmp	ip, #18
   17b98:	str	r0, [r3, #72]	; 0x48
   17b9c:	addeq	r3, r4, #8192	; 0x2000
   17ba0:	ldreq	r1, [r3, #2160]	; 0x870
   17ba4:	streq	r1, [r3, #2164]	; 0x874
   17ba8:	b	16f90 <main@@Base+0x12364>
   17bac:	ldr	r0, [r1, #64]	; 0x40
   17bb0:	ldr	r1, [pc, #-1620]	; 17564 <main@@Base+0x12938>
   17bb4:	mov	r2, r3
   17bb8:	add	r1, pc, r1
   17bbc:	bl	4644 <av_dict_get@plt>
   17bc0:	cmp	r0, #0
   17bc4:	bne	1770c <main@@Base+0x12ae0>
   17bc8:	b	17740 <main@@Base+0x12b14>
   17bcc:	ldr	r0, [r1, #64]	; 0x40
   17bd0:	ldr	r1, [pc, #-1648]	; 17568 <main@@Base+0x1293c>
   17bd4:	mov	r2, r3
   17bd8:	add	r1, pc, r1
   17bdc:	bl	4644 <av_dict_get@plt>
   17be0:	cmp	r0, #0
   17be4:	ldreq	r3, [r4, #24]
   17be8:	bne	176b0 <main@@Base+0x12a84>
   17bec:	b	176e4 <main@@Base+0x12ab8>
   17bf0:	ldr	r2, [r4, #24]
   17bf4:	b	1696c <main@@Base+0x11d40>
   17bf8:	ldr	r6, [pc, #-1684]	; 1756c <main@@Base+0x12940>
   17bfc:	ldr	r1, [pc, #-1684]	; 17570 <main@@Base+0x12944>
   17c00:	add	r6, pc, r6
   17c04:	mov	r2, r6
   17c08:	add	r1, pc, r1
   17c0c:	mov	r0, r4
   17c10:	bl	131bc <main@@Base+0xe590>
   17c14:	ldr	r1, [pc, #-1704]	; 17574 <main@@Base+0x12948>
   17c18:	mov	r2, r6
   17c1c:	add	r1, pc, r1
   17c20:	mov	r0, r4
   17c24:	bl	131bc <main@@Base+0xe590>
   17c28:	b	177c4 <main@@Base+0x12b98>
   17c2c:	ldr	r1, [pc, #-1724]	; 17578 <main@@Base+0x1294c>
   17c30:	mov	r2, r0
   17c34:	add	r1, pc, r1
   17c38:	mov	r0, r4
   17c3c:	bl	12fe4 <main@@Base+0xe3b8>
   17c40:	b	167e8 <main@@Base+0x11bbc>
   17c44:	ldr	r1, [pc, #-1744]	; 1757c <main@@Base+0x12950>
   17c48:	mov	r2, r0
   17c4c:	add	r1, pc, r1
   17c50:	mov	r0, r4
   17c54:	bl	12fe4 <main@@Base+0xe3b8>
   17c58:	b	16ef0 <main@@Base+0x122c4>
   17c5c:	ldr	r1, [pc, #-1764]	; 17580 <main@@Base+0x12954>
   17c60:	mov	r2, r0
   17c64:	add	r1, pc, r1
   17c68:	mov	r0, r4
   17c6c:	bl	12fe4 <main@@Base+0xe3b8>
   17c70:	b	16ec0 <main@@Base+0x12294>
   17c74:	ldr	r1, [pc, #-1784]	; 17584 <main@@Base+0x12958>
   17c78:	mov	r2, r0
   17c7c:	add	r1, pc, r1
   17c80:	mov	r0, r4
   17c84:	bl	12fe4 <main@@Base+0xe3b8>
   17c88:	b	16e90 <main@@Base+0x12264>
   17c8c:	ldr	r1, [pc, #-1804]	; 17588 <main@@Base+0x1295c>
   17c90:	mov	r2, r0
   17c94:	add	r1, pc, r1
   17c98:	mov	r0, r4
   17c9c:	bl	12fe4 <main@@Base+0xe3b8>
   17ca0:	b	16e60 <main@@Base+0x12234>
   17ca4:	ldr	r0, [r1, #64]	; 0x40
   17ca8:	ldr	r1, [pc, #-1828]	; 1758c <main@@Base+0x12960>
   17cac:	mov	r2, r3
   17cb0:	add	r1, pc, r1
   17cb4:	bl	4644 <av_dict_get@plt>
   17cb8:	cmp	r0, #0
   17cbc:	bne	17790 <main@@Base+0x12b64>
   17cc0:	b	177c4 <main@@Base+0x12b98>
   17cc4:	ldr	r0, [sp, #16]
   17cc8:	bl	4860 <pthread_mutex_unlock@plt>
   17ccc:	b	169fc <main@@Base+0x11dd0>
   17cd0:	ldr	r1, [pc, #-1864]	; 17590 <main@@Base+0x12964>
   17cd4:	ldr	r0, [r2, #64]	; 0x40
   17cd8:	add	r1, pc, r1
   17cdc:	mov	r2, r3
   17ce0:	bl	4644 <av_dict_get@plt>
   17ce4:	cmp	r0, #0
   17ce8:	bne	16bd4 <main@@Base+0x11fa8>
   17cec:	b	16c08 <main@@Base+0x11fdc>
   17cf0:	ldr	r1, [pc, #-1892]	; 17594 <main@@Base+0x12968>
   17cf4:	ldr	r0, [r2, #64]	; 0x40
   17cf8:	add	r1, pc, r1
   17cfc:	mov	r2, r3
   17d00:	bl	4644 <av_dict_get@plt>
   17d04:	cmp	r0, #0
   17d08:	ldreq	r3, [r4, #24]
   17d0c:	bne	16dac <main@@Base+0x12180>
   17d10:	b	16de0 <main@@Base+0x121b4>
   17d14:	ldr	r1, [pc, #-1924]	; 17598 <main@@Base+0x1296c>
   17d18:	ldr	r0, [r2, #64]	; 0x40
   17d1c:	add	r1, pc, r1
   17d20:	mov	r2, r3
   17d24:	bl	4644 <av_dict_get@plt>
   17d28:	cmp	r0, #0
   17d2c:	ldreq	r3, [r4, #24]
   17d30:	bne	16d5c <main@@Base+0x12130>
   17d34:	b	16d90 <main@@Base+0x12164>
   17d38:	ldr	r1, [pc, #-1956]	; 1759c <main@@Base+0x12970>
   17d3c:	ldr	r0, [r2, #64]	; 0x40
   17d40:	add	r1, pc, r1
   17d44:	mov	r2, r3
   17d48:	bl	4644 <av_dict_get@plt>
   17d4c:	cmp	r0, #0
   17d50:	ldreq	r3, [r4, #24]
   17d54:	bne	16d0c <main@@Base+0x120e0>
   17d58:	b	16d40 <main@@Base+0x12114>
   17d5c:	ldr	r1, [pc, #-1988]	; 175a0 <main@@Base+0x12974>
   17d60:	ldr	r0, [r2, #64]	; 0x40
   17d64:	add	r1, pc, r1
   17d68:	mov	r2, r3
   17d6c:	bl	4644 <av_dict_get@plt>
   17d70:	cmp	r0, #0
   17d74:	ldreq	r3, [r4, #24]
   17d78:	bne	16cbc <main@@Base+0x12090>
   17d7c:	b	16cf0 <main@@Base+0x120c4>
   17d80:	ldr	r1, [pc, #-2020]	; 175a4 <main@@Base+0x12978>
   17d84:	ldr	r0, [r2, #64]	; 0x40
   17d88:	add	r1, pc, r1
   17d8c:	mov	r2, r3
   17d90:	bl	4644 <av_dict_get@plt>
   17d94:	cmp	r0, #0
   17d98:	bne	16dfc <main@@Base+0x121d0>
   17d9c:	b	16e30 <main@@Base+0x12204>
   17da0:	ldr	r1, [pc, #-2048]	; 175a8 <main@@Base+0x1297c>
   17da4:	ldr	r0, [r2, #64]	; 0x40
   17da8:	add	r1, pc, r1
   17dac:	mov	r2, r3
   17db0:	bl	4644 <av_dict_get@plt>
   17db4:	cmp	r0, #0
   17db8:	bne	16778 <main@@Base+0x11b4c>
   17dbc:	b	167ac <main@@Base+0x11b80>
   17dc0:	ldr	r1, [pc, #-2076]	; 175ac <main@@Base+0x12980>
   17dc4:	ldr	r0, [r2, #64]	; 0x40
   17dc8:	add	r1, pc, r1
   17dcc:	mov	r2, r3
   17dd0:	bl	4644 <av_dict_get@plt>
   17dd4:	cmp	r0, #0
   17dd8:	ldreq	r3, [r4, #24]
   17ddc:	bne	16728 <main@@Base+0x11afc>
   17de0:	b	1675c <main@@Base+0x11b30>
   17de4:	ldr	r1, [pc, #-2108]	; 175b0 <main@@Base+0x12984>
   17de8:	ldr	r0, [r2, #64]	; 0x40
   17dec:	add	r1, pc, r1
   17df0:	mov	r2, r3
   17df4:	bl	4644 <av_dict_get@plt>
   17df8:	cmp	r0, #0
   17dfc:	ldreq	r3, [r4, #24]
   17e00:	bne	16b84 <main@@Base+0x11f58>
   17e04:	b	16bb8 <main@@Base+0x11f8c>
   17e08:	ldr	r2, [pc, #-2140]	; 175b4 <main@@Base+0x12988>
   17e0c:	ldr	r1, [pc, #-2140]	; 175b8 <main@@Base+0x1298c>
   17e10:	add	r2, pc, r2
   17e14:	add	r1, pc, r1
   17e18:	mov	r0, r4
   17e1c:	bl	131bc <main@@Base+0xe590>
   17e20:	b	16c28 <main@@Base+0x11ffc>
   17e24:	ldr	r2, [pc, #-2160]	; 175bc <main@@Base+0x12990>
   17e28:	ldr	r1, [pc, #-2160]	; 175c0 <main@@Base+0x12994>
   17e2c:	add	r2, pc, r2
   17e30:	add	r1, pc, r1
   17e34:	mov	r0, r4
   17e38:	bl	131bc <main@@Base+0xe590>
   17e3c:	b	16708 <main@@Base+0x11adc>
   17e40:	mov	r1, #0
   17e44:	ldr	r3, [pc, #-2184]	; 175c4 <main@@Base+0x12998>
   17e48:	ldr	r2, [pc, #-2184]	; 175c8 <main@@Base+0x1299c>
   17e4c:	add	r3, pc, r3
   17e50:	str	r2, [sp, #4]
   17e54:	str	r3, [sp]
   17e58:	ldr	r2, [pc, #-2196]	; 175cc <main@@Base+0x129a0>
   17e5c:	ldr	r3, [pc, #-2196]	; 175d0 <main@@Base+0x129a4>
   17e60:	mov	r0, r1
   17e64:	add	r3, pc, r3
   17e68:	add	r2, pc, r2
   17e6c:	bl	40f8 <av_log@plt>
   17e70:	bl	4278 <abort@plt>
   17e74:	bl	11920 <main@@Base+0xccf4>
   17e78:	bl	3f00 <__stack_chk_fail@plt>
   17e7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17e80:	ldrd	r4, [r3, #16]
   17e84:	vpush	{d8}
   17e88:	mov	ip, r3
   17e8c:	sub	sp, sp, #1440	; 0x5a0
   17e90:	sub	sp, sp, #12
   17e94:	str	r1, [sp, #68]	; 0x44
   17e98:	mov	r8, r1
   17e9c:	mov	r1, #0
   17ea0:	ldr	lr, [pc, #1160]	; 18330 <main@@Base+0x13704>
   17ea4:	strd	r4, [sp, #96]	; 0x60
   17ea8:	ldr	r4, [ip, #28]
   17eac:	add	lr, pc, lr
   17eb0:	str	r3, [sp, #52]	; 0x34
   17eb4:	ldr	r3, [pc, #1144]	; 18334 <main@@Base+0x13708>
   17eb8:	str	lr, [sp, #116]	; 0x74
   17ebc:	str	r4, [sp, #32]
   17ec0:	ldr	r3, [lr, r3]
   17ec4:	cmp	r4, r1
   17ec8:	str	r3, [sp, #124]	; 0x7c
   17ecc:	ldr	r3, [r3]
   17ed0:	add	r9, sp, #184	; 0xb8
   17ed4:	str	r3, [sp, #1444]	; 0x5a4
   17ed8:	ldr	r3, [sp, #1496]	; 0x5d8
   17edc:	mov	sl, r0
   17ee0:	str	r3, [sp, #60]	; 0x3c
   17ee4:	ldrne	r3, [ip, #36]	; 0x24
   17ee8:	mov	r0, r9
   17eec:	clzne	r3, r3
   17ef0:	lsrne	r3, r3, #5
   17ef4:	strne	r3, [sp, #32]
   17ef8:	str	r2, [sp, #28]
   17efc:	str	r1, [sp, #128]	; 0x80
   17f00:	ldr	fp, [r8]
   17f04:	bl	4638 <av_init_packet@plt>
   17f08:	ldr	r2, [pc, #1064]	; 18338 <main@@Base+0x1370c>
   17f0c:	mov	r1, #40	; 0x28
   17f10:	add	r2, pc, r2
   17f14:	mov	r0, #0
   17f18:	bl	40f8 <av_log@plt>
   17f1c:	ldr	r4, [sp, #52]	; 0x34
   17f20:	mov	r1, #40	; 0x28
   17f24:	mov	r0, r4
   17f28:	bl	1390c <main@@Base+0xece0>
   17f2c:	ldr	r2, [r4, #24]
   17f30:	cmp	r2, #0
   17f34:	str	r2, [sp, #56]	; 0x38
   17f38:	beq	18000 <main@@Base+0x133d4>
   17f3c:	ldr	r3, [r4, #32]
   17f40:	cmp	r3, #0
   17f44:	bne	190c4 <main@@Base+0x14498>
   17f48:	ldr	r3, [sp, #52]	; 0x34
   17f4c:	ldrd	r6, [r3, #8]
   17f50:	add	r4, sp, #1280	; 0x500
   17f54:	add	r4, r4, #4
   17f58:	mov	r0, r4
   17f5c:	mov	r2, #32
   17f60:	mov	r1, #0
   17f64:	bl	41e8 <memset@plt>
   17f68:	cmp	r7, #-2147483648	; 0x80000000
   17f6c:	cmpeq	r6, #0
   17f70:	beq	19494 <main@@Base+0x14868>
   17f74:	mov	r0, r6
   17f78:	mov	r1, r7
   17f7c:	bl	1b8ac <vc_gpuserv_execute_code@@Base+0x718>
   17f80:	vldr	d7, [pc, #928]	; 18328 <main@@Base+0x136fc>
   17f84:	vmov	d6, r0, r1
   17f88:	mov	r3, #32
   17f8c:	vmul.f64	d7, d6, d7
   17f90:	ldr	r2, [pc, #932]	; 1833c <main@@Base+0x13710>
   17f94:	vstr	d7, [sp, #8]
   17f98:	add	r2, pc, r2
   17f9c:	str	r2, [sp]
   17fa0:	mov	r1, r3
   17fa4:	mov	r2, #1
   17fa8:	mov	r0, r4
   17fac:	bl	41dc <__snprintf_chk@plt>
   17fb0:	ldr	r2, [pc, #904]	; 18340 <main@@Base+0x13714>
   17fb4:	mov	r3, r4
   17fb8:	add	r2, pc, r2
   17fbc:	mov	r1, #40	; 0x28
   17fc0:	mov	r0, #0
   17fc4:	bl	40f8 <av_log@plt>
   17fc8:	mov	r4, #0
   17fcc:	mvn	r2, #0
   17fd0:	mvn	r3, #-2147483648	; 0x80000000
   17fd4:	strd	r6, [sp]
   17fd8:	strd	r2, [sp, #8]
   17fdc:	str	r4, [sp, #16]
   17fe0:	mov	r3, #-2147483648	; 0x80000000
   17fe4:	mov	r2, #1
   17fe8:	mvn	r1, #0
   17fec:	mov	r0, fp
   17ff0:	bl	4404 <avformat_seek_file@plt>
   17ff4:	subs	r3, r0, #0
   17ff8:	str	r3, [sp, #56]	; 0x38
   17ffc:	blt	19410 <main@@Base+0x147e4>
   18000:	bl	44b8 <av_frame_alloc@plt>
   18004:	cmp	r0, #0
   18008:	str	r0, [sp, #128]	; 0x80
   1800c:	beq	195c8 <main@@Base+0x1499c>
   18010:	mov	r3, #0
   18014:	str	r3, [sp, #48]	; 0x30
   18018:	str	r3, [sp, #36]	; 0x24
   1801c:	mov	r3, #-2147483648	; 0x80000000
   18020:	mov	r2, #1
   18024:	str	r3, [sp, #112]	; 0x70
   18028:	ldr	r3, [pc, #788]	; 18344 <main@@Base+0x13718>
   1802c:	str	r2, [sp, #108]	; 0x6c
   18030:	add	r3, pc, r3
   18034:	ldr	r2, [pc, #780]	; 18348 <main@@Base+0x1371c>
   18038:	add	r3, r3, #20
   1803c:	ldr	r8, [pc, #776]	; 1834c <main@@Base+0x13720>
   18040:	add	r2, pc, r2
   18044:	str	r3, [sp, #120]	; 0x78
   18048:	add	r3, sp, #136	; 0x88
   1804c:	add	r8, pc, r8
   18050:	str	r2, [sp, #64]	; 0x40
   18054:	str	r3, [sp, #80]	; 0x50
   18058:	b	181e0 <main@@Base+0x135b4>
   1805c:	ldr	r2, [sp, #64]	; 0x40
   18060:	ldr	r3, [sp, #216]	; 0xd8
   18064:	ldr	r2, [r2, #72]	; 0x48
   18068:	ldr	r2, [r2, r3, lsl #2]
   1806c:	cmp	r2, #0
   18070:	beq	181d8 <main@@Base+0x135ac>
   18074:	ldrd	r6, [r9, #8]
   18078:	ldr	r2, [sp, #28]
   1807c:	cmp	r7, #-2147483648	; 0x80000000
   18080:	ldr	r2, [r2]
   18084:	ldr	ip, [sp, #80]	; 0x50
   18088:	ldr	r5, [r2, r3, lsl #3]
   1808c:	lsl	r4, r3, #3
   18090:	cmpeq	r6, #0
   18094:	add	r3, r5, #16
   18098:	ldm	r3, {r0, r1}
   1809c:	str	r3, [sp, #40]	; 0x28
   180a0:	stm	ip, {r0, r1}
   180a4:	beq	180d8 <main@@Base+0x134ac>
   180a8:	mov	r2, #1
   180ac:	ldr	r3, [pc, #668]	; 18350 <main@@Base+0x13724>
   180b0:	strd	r2, [sp, #144]	; 0x90
   180b4:	add	r3, sp, #144	; 0x90
   180b8:	ldm	r3, {r0, r1}
   180bc:	stm	sp, {r0, r1}
   180c0:	mov	r0, r6
   180c4:	ldm	ip, {r2, r3}
   180c8:	mov	r1, r7
   180cc:	bl	4650 <av_rescale_q@plt>
   180d0:	ldr	r3, [sp, #60]	; 0x3c
   180d4:	strd	r0, [r3]
   180d8:	ldr	r3, [sp, #48]	; 0x30
   180dc:	cmp	r3, #0
   180e0:	ldr	r3, [sp, #52]	; 0x34
   180e4:	ldr	r3, [r3, #36]	; 0x24
   180e8:	bne	18104 <main@@Base+0x134d8>
   180ec:	ldr	r2, [sp, #60]	; 0x3c
   180f0:	ldrd	r0, [r2]
   180f4:	cmp	r1, #-2147483648	; 0x80000000
   180f8:	cmpeq	r0, #0
   180fc:	beq	182c4 <main@@Base+0x13698>
   18100:	strd	r0, [sp, #108]	; 0x6c
   18104:	ldr	r2, [sp, #32]
   18108:	cmp	r2, #1
   1810c:	beq	182c0 <main@@Base+0x13694>
   18110:	cmp	r3, #0
   18114:	beq	185fc <main@@Base+0x139d0>
   18118:	ldr	r1, [sp, #52]	; 0x34
   1811c:	ldr	r0, [sp, #108]	; 0x6c
   18120:	ldrd	r2, [r1, #16]
   18124:	adds	r0, r0, r2
   18128:	ldr	r1, [r1, #40]	; 0x28
   1812c:	str	r0, [sp, #96]	; 0x60
   18130:	ldr	r0, [sp, #112]	; 0x70
   18134:	adc	r0, r0, r3
   18138:	cmp	r1, #0
   1813c:	moveq	r3, #1
   18140:	str	r0, [sp, #100]	; 0x64
   18144:	streq	r3, [sp, #48]	; 0x30
   18148:	beq	182ec <main@@Base+0x136c0>
   1814c:	mov	r1, #1
   18150:	str	r1, [sp, #32]
   18154:	str	r1, [sp, #48]	; 0x30
   18158:	ldr	r0, [sp, #36]	; 0x24
   1815c:	asr	r1, r0, #31
   18160:	cmp	r0, r2
   18164:	sbcs	r3, r1, r3
   18168:	bge	18ef8 <main@@Base+0x142cc>
   1816c:	ldr	r2, [sp, #36]	; 0x24
   18170:	ldr	r3, [pc, #476]	; 18354 <main@@Base+0x13728>
   18174:	add	r2, r2, #1
   18178:	add	r3, pc, r3
   1817c:	str	r2, [sp, #36]	; 0x24
   18180:	ldr	r2, [r3, #76]	; 0x4c
   18184:	cmp	r2, #0
   18188:	beq	181c4 <main@@Base+0x13598>
   1818c:	ldr	r3, [r3, #20]
   18190:	cmp	r3, #0
   18194:	bne	1861c <main@@Base+0x139f0>
   18198:	ldr	r3, [pc, #440]	; 18358 <main@@Base+0x1372c>
   1819c:	add	r3, pc, r3
   181a0:	ldr	r1, [r3, #68]	; 0x44
   181a4:	ldr	r3, [r1, r4]
   181a8:	add	r2, r1, r4
   181ac:	ldr	r2, [r2, #4]
   181b0:	adds	r3, r3, #1
   181b4:	adc	r2, r2, #0
   181b8:	add	r0, r1, r4
   181bc:	str	r3, [r1, r4]
   181c0:	str	r2, [r0, #4]
   181c4:	ldr	r3, [pc, #400]	; 1835c <main@@Base+0x13730>
   181c8:	add	r3, pc, r3
   181cc:	ldr	r2, [r3, #88]	; 0x58
   181d0:	cmp	r2, #0
   181d4:	bne	18450 <main@@Base+0x13824>
   181d8:	mov	r0, r9
   181dc:	bl	4758 <av_packet_unref@plt>
   181e0:	mov	r1, r9
   181e4:	mov	r0, fp
   181e8:	bl	4590 <av_read_frame@plt>
   181ec:	subs	r4, r0, #0
   181f0:	bne	18ef8 <main@@Base+0x142cc>
   181f4:	ldr	r1, [fp, #24]
   181f8:	ldr	r3, [r8, #60]	; 0x3c
   181fc:	cmp	r1, r3
   18200:	bls	1805c <main@@Base+0x13430>
   18204:	mov	r2, #8
   18208:	add	r0, r8, #64	; 0x40
   1820c:	bl	483c <av_reallocp_array@plt>
   18210:	subs	r3, r0, #0
   18214:	str	r3, [sp, #56]	; 0x38
   18218:	blt	19464 <main@@Base+0x14838>
   1821c:	ldr	r3, [r8, #60]	; 0x3c
   18220:	ldr	r2, [fp, #24]
   18224:	ldr	r0, [r8, #64]	; 0x40
   18228:	sub	r2, r2, r3
   1822c:	add	r0, r0, r3, lsl #3
   18230:	lsl	r2, r2, #3
   18234:	mov	r1, r4
   18238:	bl	41e8 <memset@plt>
   1823c:	mov	r2, #8
   18240:	ldr	r1, [fp, #24]
   18244:	add	r0, r8, #68	; 0x44
   18248:	bl	483c <av_reallocp_array@plt>
   1824c:	subs	r3, r0, #0
   18250:	str	r3, [sp, #56]	; 0x38
   18254:	blt	19464 <main@@Base+0x14838>
   18258:	ldr	r3, [r8, #60]	; 0x3c
   1825c:	ldr	r2, [fp, #24]
   18260:	ldr	r0, [r8, #68]	; 0x44
   18264:	sub	r2, r2, r3
   18268:	add	r0, r0, r3, lsl #3
   1826c:	lsl	r2, r2, #3
   18270:	mov	r1, r4
   18274:	bl	41e8 <memset@plt>
   18278:	mov	r2, #4
   1827c:	ldr	r1, [fp, #24]
   18280:	add	r0, r8, #72	; 0x48
   18284:	bl	483c <av_reallocp_array@plt>
   18288:	subs	r3, r0, #0
   1828c:	str	r3, [sp, #56]	; 0x38
   18290:	blt	19464 <main@@Base+0x14838>
   18294:	ldr	r3, [r8, #60]	; 0x3c
   18298:	ldr	r2, [fp, #24]
   1829c:	ldr	r0, [r8, #72]	; 0x48
   182a0:	sub	r2, r2, r3
   182a4:	add	r0, r0, r3, lsl #2
   182a8:	mov	r1, r4
   182ac:	lsl	r2, r2, #2
   182b0:	bl	41e8 <memset@plt>
   182b4:	ldr	r3, [fp, #24]
   182b8:	str	r3, [r8, #60]	; 0x3c
   182bc:	b	1805c <main@@Base+0x13430>
   182c0:	str	r2, [sp, #48]	; 0x30
   182c4:	cmp	r3, #0
   182c8:	beq	182e0 <main@@Base+0x136b4>
   182cc:	ldr	r2, [sp, #52]	; 0x34
   182d0:	ldr	r3, [r2, #40]	; 0x28
   182d4:	cmp	r3, #0
   182d8:	ldrdne	r2, [r2, #16]
   182dc:	bne	18158 <main@@Base+0x1352c>
   182e0:	ldr	r3, [sp, #32]
   182e4:	cmp	r3, #0
   182e8:	beq	1816c <main@@Base+0x13540>
   182ec:	ldr	r3, [sp, #60]	; 0x3c
   182f0:	ldrd	r0, [r3]
   182f4:	ldrd	r2, [sp, #96]	; 0x60
   182f8:	cmp	r0, r2
   182fc:	sbcs	r3, r1, r3
   18300:	movge	r3, #1
   18304:	movlt	r3, #0
   18308:	cmp	r1, #-2147483648	; 0x80000000
   1830c:	cmpeq	r0, #0
   18310:	moveq	r3, #0
   18314:	cmp	r3, #0
   18318:	bne	18ef8 <main@@Base+0x142cc>
   1831c:	mov	r3, #1
   18320:	str	r3, [sp, #32]
   18324:	b	1816c <main@@Base+0x13540>
   18328:	adcsge	lr, r5, sp, lsl #27
   1832c:	mrccc	6, 5, ip, cr0, cr7, {7}
   18330:	andeq	r9, r1, r0, asr sp
   18334:	andeq	r0, r0, r8, ror #7
   18338:	andeq	r7, r0, ip, lsl r0
   1833c:	ldrdeq	r6, [r0], -ip
   18340:	ldrdeq	r6, [r0], -ip
   18344:	andeq	r6, r0, r0, lsr r0
   18348:	andeq	sl, r1, ip, lsr #24
   1834c:	andeq	sl, r1, r0, lsr #24
   18350:	andeq	r4, pc, r0, asr #4
   18354:	strdeq	sl, [r1], -r4
   18358:	ldrdeq	sl, [r1], -r0
   1835c:	andeq	sl, r1, r4, lsr #21
   18360:	andeq	sl, r1, r4, lsr #15
   18364:	andeq	sl, r1, r4, asr r7
   18368:	andeq	sl, r1, r4, ror #13
   1836c:	andeq	r6, r0, ip, lsl #18
   18370:	ldrdeq	r6, [r0], -r8
   18374:	andeq	r6, r0, r4, asr #30
   18378:	andeq	r6, r0, r8, ror r5
   1837c:	andeq	r6, r0, r8, lsr r5
   18380:	andeq	r6, r0, r0, lsl r5
   18384:	andeq	r6, r0, r0, ror r7
   18388:			; <UNDEFINED> instruction: 0x000062b4
   1838c:	andeq	r6, r0, r4, lsr #14
   18390:	andeq	r6, r0, r0, asr r2
   18394:	muleq	r0, r8, r6
   18398:	andeq	r6, r0, r8, ror #3
   1839c:	andeq	r6, r0, ip, asr #12
   183a0:	andeq	r6, r0, r4, lsl #3
   183a4:	muleq	r0, r4, r3
   183a8:	andeq	r5, r0, r8, lsl #15
   183ac:	andeq	r6, r0, ip, lsl #6
   183b0:	andeq	r6, r0, r8, lsr r5
   183b4:	andeq	r3, r0, r8, lsl #17
   183b8:	andeq	sl, r1, r0, lsl r1
   183bc:	andeq	r6, r0, r0, asr #9
   183c0:			; <UNDEFINED> instruction: 0x000003b8
   183c4:	andeq	r6, r0, r0, ror r0
   183c8:	andeq	r5, r0, r0, ror lr
   183cc:	andeq	r5, r0, r8, lsr lr
   183d0:			; <UNDEFINED> instruction: 0x000069bc
   183d4:	ldrdeq	r5, [r0], -r4
   183d8:	andeq	r6, r0, ip, lsr r0
   183dc:			; <UNDEFINED> instruction: 0x00019eb8
   183e0:	andeq	r6, r0, r4, lsr r2
   183e4:	strdeq	r5, [r0], -r8
   183e8:	andeq	r5, r0, r0, ror #26
   183ec:	andeq	r6, r0, r8, lsl #3
   183f0:	andeq	r5, r0, r0, asr #30
   183f4:	andeq	r3, r0, r4, lsl r5
   183f8:	andeq	r6, r0, r8, lsl #2
   183fc:	andeq	r9, r1, r8, asr #26
   18400:	strdeq	r0, [r0], -r4
   18404:	andeq	r9, r1, r0, lsl #26
   18408:	andeq	r9, r1, r4, lsr #25
   1840c:	andeq	r9, r1, r8, asr ip
   18410:	andeq	r9, r1, ip, ror #22
   18414:	svcle	0x00b9b0bb
   18418:	andeq	r5, r0, r0, lsl lr
   1841c:	andeq	r4, r0, ip, lsr lr
   18420:	andeq	r5, r0, ip, asr #27
   18424:	andeq	r4, r0, r8, ror #27
   18428:	andeq	r5, r0, ip, ror sp
   1842c:	andeq	r5, r0, r4, asr sp
   18430:	andeq	r5, r0, r0, lsl sp
   18434:	ldrdeq	r5, [r0], -r4
   18438:	andeq	r5, r0, r0, lsl #20
   1843c:	muleq	r0, r0, ip
   18440:	andeq	r6, r0, r0, asr #6
   18444:	andeq	r5, r0, ip, lsr #24
   18448:	ldrdeq	r5, [r0], -r8
   1844c:	andeq	r5, r0, r0, ror fp
   18450:	str	r3, [sp, #84]	; 0x54
   18454:	mov	r3, #1
   18458:	ldr	r2, [sp, #116]	; 0x74
   1845c:	str	r3, [sp, #92]	; 0x5c
   18460:	ldr	r3, [pc, #-104]	; 18400 <main@@Base+0x137d4>
   18464:	ldr	r3, [r2, r3]
   18468:	str	r8, [sp, #104]	; 0x68
   1846c:	str	r3, [sp, #40]	; 0x28
   18470:	ldr	r3, [sp, #28]
   18474:	ldr	r0, [sp, #40]	; 0x28
   18478:	ldr	r3, [r3]
   1847c:	ldr	r2, [r3, r4]
   18480:	add	r4, r3, r4
   18484:	ldr	r3, [sp, #128]	; 0x80
   18488:	ldr	r6, [r2, #176]	; 0xb0
   1848c:	str	r3, [sp, #72]	; 0x48
   18490:	mov	r3, #0
   18494:	ldr	r5, [r4, #4]
   18498:	str	r3, [sp, #132]	; 0x84
   1849c:	ldr	r3, [sp, #68]	; 0x44
   184a0:	ldr	r3, [r3]
   184a4:	str	r3, [sp, #88]	; 0x58
   184a8:	bl	3fd8 <pthread_mutex_lock@plt>
   184ac:	ldr	r3, [sp, #84]	; 0x54
   184b0:	ldr	r3, [r3, #24]
   184b4:	cmp	r3, #0
   184b8:	ble	1850c <main@@Base+0x138e0>
   184bc:	mov	r8, #0
   184c0:	mov	r4, r8
   184c4:	ldr	r7, [pc, #-364]	; 18360 <main@@Base+0x13734>
   184c8:	add	r7, pc, r7
   184cc:	ldr	r0, [r7, #28]
   184d0:	add	r8, r8, #1
   184d4:	add	r0, r0, r4
   184d8:	bl	3ec4 <av_freep@plt>
   184dc:	ldr	r0, [r7, #28]
   184e0:	add	r0, r0, r4
   184e4:	add	r0, r0, #16
   184e8:	bl	3ec4 <av_freep@plt>
   184ec:	ldr	r0, [r7, #28]
   184f0:	add	r0, r0, r4
   184f4:	add	r0, r0, #8
   184f8:	bl	3ec4 <av_freep@plt>
   184fc:	ldr	r3, [r7, #24]
   18500:	add	r4, r4, #24
   18504:	cmp	r8, r3
   18508:	blt	184cc <main@@Base+0x138a0>
   1850c:	mov	r2, #0
   18510:	ldr	r3, [pc, #-436]	; 18364 <main@@Base+0x13738>
   18514:	ldr	r0, [sp, #40]	; 0x28
   18518:	add	r3, pc, r3
   1851c:	str	r2, [r3, #24]
   18520:	bl	4860 <pthread_mutex_unlock@plt>
   18524:	cmp	r5, #0
   18528:	beq	18560 <main@@Base+0x13934>
   1852c:	ldr	r3, [r5, #12]
   18530:	cmp	r3, #0
   18534:	beq	18560 <main@@Base+0x13934>
   18538:	ldr	r2, [r6]
   1853c:	cmp	r2, #0
   18540:	blt	18c88 <main@@Base+0x1405c>
   18544:	cmp	r2, #1
   18548:	ble	18c2c <main@@Base+0x14000>
   1854c:	cmp	r2, #3
   18550:	bne	18c88 <main@@Base+0x1405c>
   18554:	ldr	r3, [sp, #92]	; 0x5c
   18558:	cmp	r3, #0
   1855c:	bne	18e30 <main@@Base+0x14204>
   18560:	ldr	r3, [sp, #132]	; 0x84
   18564:	cmp	r3, #0
   18568:	bne	18574 <main@@Base+0x13948>
   1856c:	ldr	r8, [sp, #104]	; 0x68
   18570:	b	181d8 <main@@Base+0x135ac>
   18574:	mov	r3, #0
   18578:	ldr	r2, [r6]
   1857c:	str	r3, [sp, #92]	; 0x5c
   18580:	ldr	r0, [pc, #-544]	; 18368 <main@@Base+0x1373c>
   18584:	ldr	r4, [sp, #216]	; 0xd8
   18588:	add	r0, pc, r0
   1858c:	ldr	r1, [r0, #64]	; 0x40
   18590:	lsl	r4, r4, #3
   18594:	ldr	r3, [r1, r4]
   18598:	add	ip, r1, r4
   1859c:	ldr	ip, [ip, #4]
   185a0:	ldr	r0, [r0, #16]
   185a4:	adds	r3, r3, #1
   185a8:	adc	ip, ip, #0
   185ac:	cmp	r0, #0
   185b0:	add	r0, r1, r4
   185b4:	str	r3, [r1, r4]
   185b8:	str	ip, [r0, #4]
   185bc:	beq	1860c <main@@Base+0x139e0>
   185c0:	cmp	r2, #3
   185c4:	beq	18d24 <main@@Base+0x140f8>
   185c8:	ldr	r3, [sp, #28]
   185cc:	ldr	r1, [sp, #72]	; 0x48
   185d0:	ldr	r2, [r3]
   185d4:	mov	r0, sl
   185d8:	ldr	r3, [sp, #88]	; 0x58
   185dc:	ldr	r2, [r2, r4]
   185e0:	bl	16408 <main@@Base+0x117dc>
   185e4:	ldr	r3, [sp, #132]	; 0x84
   185e8:	cmp	r3, #0
   185ec:	beq	18d5c <main@@Base+0x14130>
   185f0:	ldr	r4, [sp, #216]	; 0xd8
   185f4:	lsl	r4, r4, #3
   185f8:	b	18470 <main@@Base+0x13844>
   185fc:	str	r3, [sp, #32]
   18600:	mov	r3, #1
   18604:	str	r3, [sp, #48]	; 0x30
   18608:	b	1816c <main@@Base+0x13540>
   1860c:	cmp	r2, #3
   18610:	bne	18470 <main@@Base+0x13844>
   18614:	add	r4, sp, #152	; 0x98
   18618:	b	18d34 <main@@Base+0x14108>
   1861c:	add	r7, sp, #260	; 0x104
   18620:	mvn	r2, #0
   18624:	mov	r1, #1
   18628:	mov	r0, r7
   1862c:	bl	3f48 <av_bprint_init@plt>
   18630:	ldr	r1, [sl, #24]
   18634:	add	r2, r1, #1
   18638:	cmp	r2, #9
   1863c:	str	r2, [sl, #24]
   18640:	bgt	195e8 <main@@Base+0x149bc>
   18644:	ldr	r3, [sl, #16]
   18648:	cmp	r2, #0
   1864c:	add	r3, r3, #1072	; 0x430
   18650:	add	r3, r3, #8
   18654:	streq	r2, [sl, #28]
   18658:	streq	r3, [sl, #68]	; 0x44
   1865c:	beq	18688 <main@@Base+0x13a5c>
   18660:	mov	r2, #0
   18664:	add	r1, sl, r1, lsl #2
   18668:	ldr	r0, [r1, #68]	; 0x44
   1866c:	ldr	r0, [r0]
   18670:	str	r3, [r1, #72]	; 0x48
   18674:	cmp	r0, #18
   18678:	str	r2, [r1, #32]
   1867c:	addeq	r3, sl, #8192	; 0x2000
   18680:	ldreq	r2, [r3, #2156]	; 0x86c
   18684:	streq	r2, [r3, #2164]	; 0x874
   18688:	ldr	r3, [sl, #4]
   1868c:	ldr	r3, [r3, #20]
   18690:	cmp	r3, #0
   18694:	beq	186a0 <main@@Base+0x13a74>
   18698:	mov	r0, sl
   1869c:	blx	r3
   186a0:	ldr	r3, [r5, #176]	; 0xb0
   186a4:	ldr	r0, [r3]
   186a8:	bl	47dc <av_get_media_type_string@plt>
   186ac:	subs	r4, r0, #0
   186b0:	beq	18e54 <main@@Base+0x14228>
   186b4:	ldr	r3, [sl, #24]
   186b8:	add	r3, sl, r3, lsl #2
   186bc:	ldr	r2, [r3, #68]	; 0x44
   186c0:	ldr	r3, [r2, #68]	; 0x44
   186c4:	cmp	r3, #0
   186c8:	beq	193b4 <main@@Base+0x14788>
   186cc:	ldr	r3, [sl, #4]
   186d0:	ldr	r1, [pc, #-876]	; 1836c <main@@Base+0x13740>
   186d4:	mov	r2, r4
   186d8:	ldr	r3, [r3, #36]	; 0x24
   186dc:	add	r1, pc, r1
   186e0:	mov	r0, sl
   186e4:	blx	r3
   186e8:	ldr	r3, [sl, #24]
   186ec:	add	r1, sl, r3, lsl #2
   186f0:	ldr	r2, [r1, #28]
   186f4:	add	r2, r2, #1
   186f8:	str	r2, [r1, #28]
   186fc:	ldr	r4, [sp, #216]	; 0xd8
   18700:	add	r3, sl, r3, lsl #2
   18704:	mov	r0, r4
   18708:	ldr	r2, [r3, #68]	; 0x44
   1870c:	asr	r1, r4, #31
   18710:	ldr	r3, [r2, #68]	; 0x44
   18714:	strd	r0, [sp, #72]	; 0x48
   18718:	cmp	r3, #0
   1871c:	beq	18e0c <main@@Base+0x141e0>
   18720:	ldrd	r2, [sp, #72]	; 0x48
   18724:	ldr	r1, [sl, #4]
   18728:	mov	r0, sl
   1872c:	ldr	r4, [r1, #28]
   18730:	ldr	r1, [pc, #-968]	; 18370 <main@@Base+0x13744>
   18734:	add	r1, pc, r1
   18738:	blx	r4
   1873c:	ldr	r3, [sl, #24]
   18740:	add	r1, sl, r3, lsl #2
   18744:	ldr	r2, [r1, #28]
   18748:	add	r2, r2, #1
   1874c:	str	r2, [r1, #28]
   18750:	ldrd	r0, [r9, #8]
   18754:	cmp	r1, #-2147483648	; 0x80000000
   18758:	add	r3, sl, r3, lsl #2
   1875c:	cmpeq	r0, #0
   18760:	strd	r0, [sp, #72]	; 0x48
   18764:	ldr	r2, [r3, #68]	; 0x44
   18768:	beq	18ce8 <main@@Base+0x140bc>
   1876c:	ldr	r3, [r2, #68]	; 0x44
   18770:	cmp	r3, #0
   18774:	beq	19548 <main@@Base+0x1491c>
   18778:	ldrd	r2, [sp, #72]	; 0x48
   1877c:	ldr	r1, [sl, #4]
   18780:	mov	r0, sl
   18784:	ldr	r4, [r1, #28]
   18788:	ldr	r1, [pc, #-1052]	; 18374 <main@@Base+0x13748>
   1878c:	add	r1, pc, r1
   18790:	blx	r4
   18794:	ldrd	r2, [r9, #8]
   18798:	strd	r2, [sp, #72]	; 0x48
   1879c:	ldr	r3, [sl, #24]
   187a0:	add	r3, sl, r3, lsl #2
   187a4:	ldr	r2, [r3, #28]
   187a8:	add	r2, r2, #1
   187ac:	str	r2, [r3, #28]
   187b0:	ldr	r3, [sp, #40]	; 0x28
   187b4:	ldr	r1, [pc, #-1092]	; 18378 <main@@Base+0x1374c>
   187b8:	str	r3, [sp]
   187bc:	add	r1, pc, r1
   187c0:	ldrd	r2, [sp, #72]	; 0x48
   187c4:	mov	r0, sl
   187c8:	bl	15458 <main@@Base+0x1082c>
   187cc:	ldrd	r2, [r9, #16]
   187d0:	cmp	r3, #-2147483648	; 0x80000000
   187d4:	cmpeq	r2, #0
   187d8:	strd	r2, [sp, #72]	; 0x48
   187dc:	beq	18ca0 <main@@Base+0x14074>
   187e0:	ldr	r3, [sl, #24]
   187e4:	add	r3, sl, r3, lsl #2
   187e8:	ldr	r2, [r3, #68]	; 0x44
   187ec:	ldr	r3, [r2, #68]	; 0x44
   187f0:	cmp	r3, #0
   187f4:	beq	19568 <main@@Base+0x1493c>
   187f8:	ldrd	r2, [sp, #72]	; 0x48
   187fc:	ldr	r1, [sl, #4]
   18800:	mov	r0, sl
   18804:	ldr	r4, [r1, #28]
   18808:	ldr	r1, [pc, #-1172]	; 1837c <main@@Base+0x13750>
   1880c:	add	r1, pc, r1
   18810:	blx	r4
   18814:	ldrd	r2, [r9, #16]
   18818:	strd	r2, [sp, #72]	; 0x48
   1881c:	ldr	r3, [sl, #24]
   18820:	add	r3, sl, r3, lsl #2
   18824:	ldr	r2, [r3, #28]
   18828:	add	r2, r2, #1
   1882c:	str	r2, [r3, #28]
   18830:	ldr	r3, [sp, #40]	; 0x28
   18834:	ldr	r1, [pc, #-1212]	; 18380 <main@@Base+0x13754>
   18838:	str	r3, [sp]
   1883c:	add	r1, pc, r1
   18840:	ldrd	r2, [sp, #72]	; 0x48
   18844:	mov	r0, sl
   18848:	bl	15458 <main@@Base+0x1082c>
   1884c:	ldrd	r2, [r9, #48]	; 0x30
   18850:	strd	r2, [sp, #40]	; 0x28
   18854:	orrs	r3, r2, r3
   18858:	bne	191c4 <main@@Base+0x14598>
   1885c:	ldr	r2, [sl, #4]
   18860:	ldr	r3, [sl, #24]
   18864:	ldr	r1, [r2, #40]	; 0x28
   18868:	add	r3, sl, r3, lsl #2
   1886c:	tst	r1, #1
   18870:	ldr	r1, [r3, #68]	; 0x44
   18874:	beq	18eb4 <main@@Base+0x14288>
   18878:	ldr	r3, [r1, #68]	; 0x44
   1887c:	cmp	r3, #0
   18880:	beq	19364 <main@@Base+0x14738>
   18884:	ldr	r3, [r2, #36]	; 0x24
   18888:	ldr	r1, [pc, #-1292]	; 18384 <main@@Base+0x13758>
   1888c:	ldr	r2, [pc, #-1292]	; 18388 <main@@Base+0x1375c>
   18890:	add	r1, pc, r1
   18894:	add	r2, pc, r2
   18898:	mov	r0, sl
   1889c:	blx	r3
   188a0:	ldr	r3, [sl, #24]
   188a4:	add	r3, sl, r3, lsl #2
   188a8:	ldr	r2, [r3, #28]
   188ac:	add	r2, r2, #1
   188b0:	str	r2, [r3, #28]
   188b4:	ldrd	r0, [r9, #48]	; 0x30
   188b8:	orrs	r3, r0, r1
   188bc:	bne	19250 <main@@Base+0x14624>
   188c0:	ldr	r2, [sl, #4]
   188c4:	ldr	r3, [sl, #24]
   188c8:	ldr	r1, [r2, #40]	; 0x28
   188cc:	add	r3, sl, r3, lsl #2
   188d0:	tst	r1, #1
   188d4:	ldr	r1, [r3, #68]	; 0x44
   188d8:	beq	18eb4 <main@@Base+0x14288>
   188dc:	ldr	r3, [r1, #68]	; 0x44
   188e0:	cmp	r3, #0
   188e4:	beq	192b8 <main@@Base+0x1468c>
   188e8:	ldr	r3, [r2, #36]	; 0x24
   188ec:	ldr	r1, [pc, #-1384]	; 1838c <main@@Base+0x13760>
   188f0:	ldr	r2, [pc, #-1384]	; 18390 <main@@Base+0x13764>
   188f4:	add	r1, pc, r1
   188f8:	add	r2, pc, r2
   188fc:	mov	r0, sl
   18900:	blx	r3
   18904:	ldr	r3, [sl, #24]
   18908:	add	r6, sp, #1312	; 0x520
   1890c:	add	r3, sl, r3, lsl #2
   18910:	ldr	r2, [r3, #28]
   18914:	ldr	r1, [r3, #68]	; 0x44
   18918:	add	r2, r2, #1
   1891c:	add	r6, r6, #4
   18920:	str	r2, [r3, #28]
   18924:	ldrd	r2, [r9, #64]	; 0x40
   18928:	strd	r2, [sp, #40]	; 0x28
   1892c:	orrs	r3, r2, r3
   18930:	bne	18ecc <main@@Base+0x142a0>
   18934:	ldr	r2, [sl, #4]
   18938:	ldr	r3, [r2, #40]	; 0x28
   1893c:	tst	r3, #1
   18940:	beq	189e4 <main@@Base+0x13db8>
   18944:	ldr	r3, [r1, #68]	; 0x44
   18948:	cmp	r3, #0
   1894c:	beq	19314 <main@@Base+0x146e8>
   18950:	ldr	r3, [r2, #36]	; 0x24
   18954:	ldr	r1, [pc, #-1480]	; 18394 <main@@Base+0x13768>
   18958:	ldr	r2, [pc, #-1480]	; 18398 <main@@Base+0x1376c>
   1895c:	add	r1, pc, r1
   18960:	add	r2, pc, r2
   18964:	mov	r0, sl
   18968:	blx	r3
   1896c:	ldr	r3, [sl, #24]
   18970:	add	r3, sl, r3, lsl #2
   18974:	ldr	r2, [r3, #28]
   18978:	add	r2, r2, #1
   1897c:	str	r2, [r3, #28]
   18980:	ldrd	r0, [r9, #64]	; 0x40
   18984:	orrs	r3, r0, r1
   18988:	bne	191fc <main@@Base+0x145d0>
   1898c:	ldr	r2, [sl, #4]
   18990:	ldr	r3, [sl, #24]
   18994:	ldr	r1, [r2, #40]	; 0x28
   18998:	add	r3, sl, r3, lsl #2
   1899c:	tst	r1, #1
   189a0:	ldr	r1, [r3, #68]	; 0x44
   189a4:	beq	189e4 <main@@Base+0x13db8>
   189a8:	ldr	r3, [r1, #68]	; 0x44
   189ac:	cmp	r3, #0
   189b0:	beq	192f0 <main@@Base+0x146c4>
   189b4:	ldr	r3, [r2, #36]	; 0x24
   189b8:	ldr	r1, [pc, #-1572]	; 1839c <main@@Base+0x13770>
   189bc:	ldr	r2, [pc, #-1572]	; 183a0 <main@@Base+0x13774>
   189c0:	add	r1, pc, r1
   189c4:	add	r2, pc, r2
   189c8:	mov	r0, sl
   189cc:	blx	r3
   189d0:	ldr	r3, [sl, #24]
   189d4:	add	r3, sl, r3, lsl #2
   189d8:	ldr	r2, [r3, #28]
   189dc:	add	r2, r2, #1
   189e0:	str	r2, [r3, #28]
   189e4:	ldr	r2, [sp, #212]	; 0xd4
   189e8:	ldr	r3, [sp, #120]	; 0x78
   189ec:	mov	r0, r6
   189f0:	str	r3, [sp]
   189f4:	asr	r3, r2, #31
   189f8:	bl	12248 <main@@Base+0xd61c>
   189fc:	ldr	r3, [sl, #24]
   18a00:	mov	r4, r0
   18a04:	add	r3, sl, r3, lsl #2
   18a08:	ldr	r2, [r3, #68]	; 0x44
   18a0c:	ldr	r3, [r2, #68]	; 0x44
   18a10:	cmp	r3, #0
   18a14:	beq	18e74 <main@@Base+0x14248>
   18a18:	ldr	r3, [sl, #4]
   18a1c:	ldr	r1, [pc, #-1664]	; 183a4 <main@@Base+0x13778>
   18a20:	mov	r2, r4
   18a24:	ldr	r3, [r3, #36]	; 0x24
   18a28:	add	r1, pc, r1
   18a2c:	mov	r0, sl
   18a30:	blx	r3
   18a34:	ldr	r3, [sl, #24]
   18a38:	add	r3, sl, r3, lsl #2
   18a3c:	ldr	r2, [r3, #28]
   18a40:	add	r2, r2, #1
   18a44:	str	r2, [r3, #28]
   18a48:	mvn	r1, #0
   18a4c:	ldrd	r2, [r9, #56]	; 0x38
   18a50:	mvn	r0, #0
   18a54:	cmp	r3, r1
   18a58:	cmpeq	r2, r0
   18a5c:	beq	18d6c <main@@Base+0x14140>
   18a60:	mov	r0, r7
   18a64:	bl	45c0 <av_bprint_clear@plt>
   18a68:	ldrd	r2, [r9, #56]	; 0x38
   18a6c:	ldr	r1, [pc, #-1740]	; 183a8 <main@@Base+0x1377c>
   18a70:	mov	r0, r7
   18a74:	add	r1, pc, r1
   18a78:	bl	459c <av_bprintf@plt>
   18a7c:	ldr	r3, [sl, #24]
   18a80:	ldr	r4, [sp, #260]	; 0x104
   18a84:	add	r3, sl, r3, lsl #2
   18a88:	ldr	r2, [r3, #68]	; 0x44
   18a8c:	ldr	r3, [r2, #68]	; 0x44
   18a90:	cmp	r3, #0
   18a94:	beq	193d4 <main@@Base+0x147a8>
   18a98:	ldr	r3, [sl, #4]
   18a9c:	ldr	r1, [pc, #-1784]	; 183ac <main@@Base+0x13780>
   18aa0:	mov	r2, r4
   18aa4:	ldr	r3, [r3, #36]	; 0x24
   18aa8:	add	r1, pc, r1
   18aac:	mov	r0, sl
   18ab0:	blx	r3
   18ab4:	ldr	r3, [sl, #24]
   18ab8:	add	r3, sl, r3, lsl #2
   18abc:	ldr	r2, [r3, #28]
   18ac0:	add	r2, r2, #1
   18ac4:	str	r2, [r3, #28]
   18ac8:	mov	r0, r7
   18acc:	bl	45c0 <av_bprint_clear@plt>
   18ad0:	ldr	r3, [sp, #220]	; 0xdc
   18ad4:	ldr	r1, [pc, #-1836]	; 183b0 <main@@Base+0x13784>
   18ad8:	tst	r3, #1
   18adc:	movne	r2, #75	; 0x4b
   18ae0:	moveq	r2, #95	; 0x5f
   18ae4:	tst	r3, #4
   18ae8:	movne	r3, #68	; 0x44
   18aec:	moveq	r3, #95	; 0x5f
   18af0:	add	r1, pc, r1
   18af4:	mov	r0, r7
   18af8:	bl	459c <av_bprintf@plt>
   18afc:	ldr	r3, [sl, #24]
   18b00:	ldr	r4, [sp, #260]	; 0x104
   18b04:	add	r3, sl, r3, lsl #2
   18b08:	ldr	r2, [r3, #68]	; 0x44
   18b0c:	ldr	r3, [r2, #68]	; 0x44
   18b10:	cmp	r3, #0
   18b14:	beq	18e94 <main@@Base+0x14268>
   18b18:	ldr	r3, [sl, #4]
   18b1c:	ldr	r1, [pc, #-1904]	; 183b4 <main@@Base+0x13788>
   18b20:	mov	r2, r4
   18b24:	ldr	r3, [r3, #36]	; 0x24
   18b28:	add	r1, pc, r1
   18b2c:	mov	r0, sl
   18b30:	blx	r3
   18b34:	ldr	r3, [sl, #24]
   18b38:	add	r3, sl, r3, lsl #2
   18b3c:	ldr	r2, [r3, #28]
   18b40:	add	r2, r2, #1
   18b44:	str	r2, [r3, #28]
   18b48:	ldr	r3, [sp, #228]	; 0xe4
   18b4c:	cmp	r3, #0
   18b50:	bne	18d88 <main@@Base+0x1415c>
   18b54:	ldr	r3, [pc, #-1956]	; 183b8 <main@@Base+0x1378c>
   18b58:	ldr	r2, [sp, #208]	; 0xd0
   18b5c:	add	r3, pc, r3
   18b60:	ldr	r1, [r3, #84]	; 0x54
   18b64:	ldr	r3, [sp, #212]	; 0xd4
   18b68:	cmp	r1, #0
   18b6c:	bne	18df4 <main@@Base+0x141c8>
   18b70:	ldr	r1, [pc, #-1980]	; 183bc <main@@Base+0x13790>
   18b74:	mov	r0, sl
   18b78:	add	r1, pc, r1
   18b7c:	bl	14d38 <main@@Base+0x1010c>
   18b80:	ldr	r3, [sl, #24]
   18b84:	cmp	r3, #0
   18b88:	beq	18bdc <main@@Base+0x13fb0>
   18b8c:	add	r2, sl, r3, lsl #2
   18b90:	ldr	r1, [r2, #64]	; 0x40
   18b94:	ldr	r0, [r1]
   18b98:	cmn	r0, #1
   18b9c:	beq	18bdc <main@@Base+0x13fb0>
   18ba0:	ldr	r1, [r2, #24]
   18ba4:	ldr	ip, [r2, #68]	; 0x44
   18ba8:	cmp	r0, #18
   18bac:	add	r1, r1, #1
   18bb0:	ldr	r0, [ip]
   18bb4:	str	r1, [r2, #24]
   18bb8:	bne	18bdc <main@@Base+0x13fb0>
   18bbc:	cmp	r0, #15
   18bc0:	add	r1, sl, #8192	; 0x2000
   18bc4:	ldreq	r2, [r1, #2156]	; 0x86c
   18bc8:	ldrne	r2, [r1, #2160]	; 0x870
   18bcc:	addeq	r2, r2, #1
   18bd0:	addne	r2, r2, #1
   18bd4:	streq	r2, [r1, #2156]	; 0x86c
   18bd8:	strne	r2, [r1, #2160]	; 0x870
   18bdc:	ldr	r2, [sl, #4]
   18be0:	ldr	r2, [r2, #24]
   18be4:	cmp	r2, #0
   18be8:	beq	18bf8 <main@@Base+0x13fcc>
   18bec:	mov	r0, sl
   18bf0:	blx	r2
   18bf4:	ldr	r3, [sl, #24]
   18bf8:	sub	r3, r3, #1
   18bfc:	str	r3, [sl, #24]
   18c00:	mov	r1, #0
   18c04:	mov	r0, r7
   18c08:	bl	4308 <av_bprint_finalize@plt>
   18c0c:	ldr	r2, [sp, #116]	; 0x74
   18c10:	ldr	r3, [pc, #-2136]	; 183c0 <main@@Base+0x13794>
   18c14:	ldr	r3, [r2, r3]
   18c18:	ldr	r0, [r3]
   18c1c:	bl	417c <fflush@plt>
   18c20:	ldr	r3, [sp, #216]	; 0xd8
   18c24:	lsl	r4, r3, #3
   18c28:	b	18198 <main@@Base+0x1356c>
   18c2c:	ldr	r3, [sp, #92]	; 0x5c
   18c30:	cmp	r3, #0
   18c34:	beq	18c5c <main@@Base+0x14030>
   18c38:	mov	r1, r9
   18c3c:	mov	r0, r5
   18c40:	bl	4098 <avcodec_send_packet@plt>
   18c44:	cmn	r0, #11
   18c48:	beq	18c64 <main@@Base+0x14038>
   18c4c:	ldr	r3, [pc, #-2112]	; 18414 <main@@Base+0x137e8>
   18c50:	cmp	r0, r3
   18c54:	cmpne	r0, #0
   18c58:	blt	1856c <main@@Base+0x13940>
   18c5c:	mov	r3, #0
   18c60:	str	r3, [sp, #92]	; 0x5c
   18c64:	mov	r0, r5
   18c68:	ldr	r1, [sp, #72]	; 0x48
   18c6c:	bl	411c <avcodec_receive_frame@plt>
   18c70:	cmp	r0, #0
   18c74:	blt	18d40 <main@@Base+0x14114>
   18c78:	mov	r3, #1
   18c7c:	ldr	r2, [r6]
   18c80:	str	r3, [sp, #132]	; 0x84
   18c84:	b	18580 <main@@Base+0x13954>
   18c88:	ldr	r3, [sp, #132]	; 0x84
   18c8c:	cmp	r3, #0
   18c90:	beq	1856c <main@@Base+0x13940>
   18c94:	mov	r3, #0
   18c98:	str	r3, [sp, #92]	; 0x5c
   18c9c:	b	18580 <main@@Base+0x13954>
   18ca0:	ldr	r2, [sl, #4]
   18ca4:	ldr	r3, [sl, #24]
   18ca8:	ldr	r1, [r2, #40]	; 0x28
   18cac:	add	r3, sl, r3, lsl #2
   18cb0:	tst	r1, #1
   18cb4:	ldr	r1, [r3, #68]	; 0x44
   18cb8:	beq	18830 <main@@Base+0x13c04>
   18cbc:	ldr	r3, [r1, #68]	; 0x44
   18cc0:	cmp	r3, #0
   18cc4:	beq	19338 <main@@Base+0x1470c>
   18cc8:	ldr	r3, [r2, #36]	; 0x24
   18ccc:	ldr	r1, [pc, #-2320]	; 183c4 <main@@Base+0x13798>
   18cd0:	ldr	r2, [pc, #-2320]	; 183c8 <main@@Base+0x1379c>
   18cd4:	add	r1, pc, r1
   18cd8:	add	r2, pc, r2
   18cdc:	mov	r0, sl
   18ce0:	blx	r3
   18ce4:	b	18814 <main@@Base+0x13be8>
   18ce8:	ldr	r1, [sl, #4]
   18cec:	ldr	r3, [r1, #40]	; 0x28
   18cf0:	tst	r3, #1
   18cf4:	beq	187b0 <main@@Base+0x13b84>
   18cf8:	ldr	r3, [r2, #68]	; 0x44
   18cfc:	cmp	r3, #0
   18d00:	beq	19388 <main@@Base+0x1475c>
   18d04:	ldr	r3, [r1, #36]	; 0x24
   18d08:	ldr	r2, [pc, #-2372]	; 183cc <main@@Base+0x137a0>
   18d0c:	ldr	r1, [pc, #-2372]	; 183d0 <main@@Base+0x137a4>
   18d10:	add	r2, pc, r2
   18d14:	add	r1, pc, r1
   18d18:	mov	r0, sl
   18d1c:	blx	r3
   18d20:	b	18794 <main@@Base+0x13b68>
   18d24:	add	r4, sp, #152	; 0x98
   18d28:	mov	r1, r4
   18d2c:	mov	r0, sl
   18d30:	bl	14e78 <main@@Base+0x1024c>
   18d34:	mov	r0, r4
   18d38:	bl	3dd4 <avsubtitle_free@plt>
   18d3c:	b	185e4 <main@@Base+0x139b8>
   18d40:	ldr	r3, [pc, #-2356]	; 18414 <main@@Base+0x137e8>
   18d44:	cmn	r0, #11
   18d48:	cmpne	r0, r3
   18d4c:	bne	1856c <main@@Base+0x13940>
   18d50:	ldr	r3, [sp, #132]	; 0x84
   18d54:	cmp	r3, #0
   18d58:	bne	19500 <main@@Base+0x148d4>
   18d5c:	ldr	r3, [sp, #92]	; 0x5c
   18d60:	cmp	r3, #0
   18d64:	bne	185f0 <main@@Base+0x139c4>
   18d68:	b	1856c <main@@Base+0x13940>
   18d6c:	ldr	r2, [pc, #-2464]	; 183d4 <main@@Base+0x137a8>
   18d70:	ldr	r1, [pc, #-2464]	; 183d8 <main@@Base+0x137ac>
   18d74:	add	r2, pc, r2
   18d78:	add	r1, pc, r1
   18d7c:	mov	r0, sl
   18d80:	bl	131bc <main@@Base+0xe590>
   18d84:	b	18ac8 <main@@Base+0x13e9c>
   18d88:	ldr	r3, [sp, #80]	; 0x50
   18d8c:	mov	r1, #13
   18d90:	sub	r2, r3, #4
   18d94:	mov	r0, r9
   18d98:	bl	4290 <av_packet_get_side_data@plt>
   18d9c:	cmp	r0, #0
   18da0:	beq	18dc4 <main@@Base+0x14198>
   18da4:	ldr	r1, [sp, #132]	; 0x84
   18da8:	cmp	r1, #0
   18dac:	beq	18dc4 <main@@Base+0x14198>
   18db0:	ldr	r3, [pc, #-2524]	; 183dc <main@@Base+0x137b0>
   18db4:	add	r3, pc, r3
   18db8:	ldr	r3, [r3, #80]	; 0x50
   18dbc:	cmp	r3, #0
   18dc0:	bne	19508 <main@@Base+0x148dc>
   18dc4:	mov	ip, #20
   18dc8:	mov	r0, #19
   18dcc:	ldr	r1, [r5, #176]	; 0xb0
   18dd0:	ldr	r3, [sp, #228]	; 0xe4
   18dd4:	add	r2, r1, #52	; 0x34
   18dd8:	stmib	sp, {r0, ip}
   18ddc:	str	r3, [sp]
   18de0:	add	r1, r1, #48	; 0x30
   18de4:	ldr	r3, [sp, #224]	; 0xe0
   18de8:	mov	r0, sl
   18dec:	bl	155cc <main@@Base+0x109a0>
   18df0:	b	18b54 <main@@Base+0x13f28>
   18df4:	ldr	r1, [pc, #-2588]	; 183e0 <main@@Base+0x137b4>
   18df8:	mov	r0, sl
   18dfc:	add	r1, pc, r1
   18e00:	bl	14ab8 <main@@Base+0xfe8c>
   18e04:	ldrd	r2, [sp, #208]	; 0xd0
   18e08:	b	18b70 <main@@Base+0x13f44>
   18e0c:	ldr	r1, [pc, #-2608]	; 183e4 <main@@Base+0x137b8>
   18e10:	ldr	r0, [r2, #64]	; 0x40
   18e14:	add	r1, pc, r1
   18e18:	mov	r2, r3
   18e1c:	bl	4644 <av_dict_get@plt>
   18e20:	cmp	r0, #0
   18e24:	ldreq	r3, [sl, #24]
   18e28:	bne	18720 <main@@Base+0x13af4>
   18e2c:	b	18750 <main@@Base+0x13b24>
   18e30:	ldr	r2, [sp, #80]	; 0x50
   18e34:	mov	r0, r5
   18e38:	mov	r3, r9
   18e3c:	sub	r2, r2, #4
   18e40:	add	r1, sp, #152	; 0x98
   18e44:	bl	4368 <avcodec_decode_subtitle2@plt>
   18e48:	cmp	r0, #0
   18e4c:	bge	18560 <main@@Base+0x13934>
   18e50:	b	1856c <main@@Base+0x13940>
   18e54:	ldr	r2, [pc, #-2676]	; 183e8 <main@@Base+0x137bc>
   18e58:	ldr	r1, [pc, #-2676]	; 183ec <main@@Base+0x137c0>
   18e5c:	add	r2, pc, r2
   18e60:	add	r1, pc, r1
   18e64:	mov	r0, sl
   18e68:	bl	131bc <main@@Base+0xe590>
   18e6c:	ldr	r3, [sl, #24]
   18e70:	b	186fc <main@@Base+0x13ad0>
   18e74:	ldr	r1, [pc, #-2700]	; 183f0 <main@@Base+0x137c4>
   18e78:	ldr	r0, [r2, #64]	; 0x40
   18e7c:	add	r1, pc, r1
   18e80:	mov	r2, r3
   18e84:	bl	4644 <av_dict_get@plt>
   18e88:	cmp	r0, #0
   18e8c:	bne	18a18 <main@@Base+0x13dec>
   18e90:	b	18a48 <main@@Base+0x13e1c>
   18e94:	ldr	r1, [pc, #-2728]	; 183f4 <main@@Base+0x137c8>
   18e98:	ldr	r0, [r2, #64]	; 0x40
   18e9c:	add	r1, pc, r1
   18ea0:	mov	r2, r3
   18ea4:	bl	4644 <av_dict_get@plt>
   18ea8:	cmp	r0, #0
   18eac:	bne	18b18 <main@@Base+0x13eec>
   18eb0:	b	18b48 <main@@Base+0x13f1c>
   18eb4:	ldrd	r2, [r9, #64]	; 0x40
   18eb8:	add	r6, sp, #1312	; 0x520
   18ebc:	strd	r2, [sp, #40]	; 0x28
   18ec0:	orrs	r3, r2, r3
   18ec4:	add	r6, r6, #4
   18ec8:	beq	18934 <main@@Base+0x13d08>
   18ecc:	ldr	r3, [r1, #68]	; 0x44
   18ed0:	cmp	r3, #0
   18ed4:	beq	19588 <main@@Base+0x1495c>
   18ed8:	ldrd	r2, [sp, #40]	; 0x28
   18edc:	ldr	r1, [sl, #4]
   18ee0:	mov	r0, sl
   18ee4:	ldr	r4, [r1, #28]
   18ee8:	ldr	r1, [pc, #-2808]	; 183f8 <main@@Base+0x137cc>
   18eec:	add	r1, pc, r1
   18ef0:	blx	r4
   18ef4:	b	1896c <main@@Base+0x13d40>
   18ef8:	mov	r0, r9
   18efc:	bl	4638 <av_init_packet@plt>
   18f00:	mov	r3, #0
   18f04:	ldr	r2, [fp, #24]
   18f08:	str	r3, [sp, #208]	; 0xd0
   18f0c:	cmp	r2, r3
   18f10:	str	r3, [sp, #212]	; 0xd4
   18f14:	beq	19090 <main@@Base+0x14464>
   18f18:	mov	r6, r3
   18f1c:	ldr	r3, [pc, #-2856]	; 183fc <main@@Base+0x137d0>
   18f20:	str	fp, [sp, #60]	; 0x3c
   18f24:	add	r3, pc, r3
   18f28:	str	r3, [sp, #36]	; 0x24
   18f2c:	str	sl, [sp, #64]	; 0x40
   18f30:	str	r9, [sp, #52]	; 0x34
   18f34:	b	18f44 <main@@Base+0x14318>
   18f38:	add	r6, r6, #1
   18f3c:	cmp	r2, r6
   18f40:	bls	19090 <main@@Base+0x14464>
   18f44:	ldr	r3, [sp, #36]	; 0x24
   18f48:	str	r6, [sp, #216]	; 0xd8
   18f4c:	ldr	r3, [r3, #88]	; 0x58
   18f50:	cmp	r3, #0
   18f54:	beq	18f38 <main@@Base+0x1430c>
   18f58:	mov	r8, #0
   18f5c:	ldr	r2, [sp, #116]	; 0x74
   18f60:	ldr	r3, [pc, #-2920]	; 18400 <main@@Base+0x137d4>
   18f64:	ldr	r9, [pc, #-2920]	; 18404 <main@@Base+0x137d8>
   18f68:	ldr	r7, [r2, r3]
   18f6c:	add	r9, pc, r9
   18f70:	lsl	r2, r6, #3
   18f74:	str	r6, [sp, #48]	; 0x30
   18f78:	ldr	r3, [sp, #28]
   18f7c:	mov	r0, r7
   18f80:	ldr	r3, [r3]
   18f84:	ldr	r1, [r3, r2]
   18f88:	add	r2, r3, r2
   18f8c:	ldr	r3, [sp, #128]	; 0x80
   18f90:	ldr	sl, [r1, #176]	; 0xb0
   18f94:	str	r3, [sp, #32]
   18f98:	ldr	r3, [sp, #68]	; 0x44
   18f9c:	ldr	r5, [r2, #4]
   18fa0:	ldr	r3, [r3]
   18fa4:	str	r8, [sp, #136]	; 0x88
   18fa8:	str	r3, [sp, #40]	; 0x28
   18fac:	bl	3fd8 <pthread_mutex_lock@plt>
   18fb0:	ldr	r3, [r9, #24]
   18fb4:	cmp	r3, #0
   18fb8:	ble	1900c <main@@Base+0x143e0>
   18fbc:	mov	r4, #0
   18fc0:	mov	r6, r4
   18fc4:	ldr	fp, [pc, #-3012]	; 18408 <main@@Base+0x137dc>
   18fc8:	add	fp, pc, fp
   18fcc:	ldr	r0, [fp, #28]
   18fd0:	add	r6, r6, #1
   18fd4:	add	r0, r0, r4
   18fd8:	bl	3ec4 <av_freep@plt>
   18fdc:	ldr	r0, [fp, #28]
   18fe0:	add	r0, r0, r4
   18fe4:	add	r0, r0, #16
   18fe8:	bl	3ec4 <av_freep@plt>
   18fec:	ldr	r0, [fp, #28]
   18ff0:	add	r0, r0, r4
   18ff4:	add	r0, r0, #8
   18ff8:	bl	3ec4 <av_freep@plt>
   18ffc:	ldr	r3, [fp, #24]
   19000:	add	r4, r4, #24
   19004:	cmp	r6, r3
   19008:	blt	18fcc <main@@Base+0x143a0>
   1900c:	ldr	r3, [pc, #-3080]	; 1840c <main@@Base+0x137e0>
   19010:	mov	r0, r7
   19014:	add	r3, pc, r3
   19018:	str	r8, [r3, #24]
   1901c:	bl	4860 <pthread_mutex_unlock@plt>
   19020:	cmp	r5, #0
   19024:	beq	1906c <main@@Base+0x14440>
   19028:	ldr	r3, [r5, #12]
   1902c:	cmp	r3, #0
   19030:	beq	1906c <main@@Base+0x14440>
   19034:	ldr	r3, [sl]
   19038:	cmp	r3, #0
   1903c:	blt	191b0 <main@@Base+0x14584>
   19040:	cmp	r3, #1
   19044:	ble	19184 <main@@Base+0x14558>
   19048:	cmp	r3, #3
   1904c:	bne	191b0 <main@@Base+0x14584>
   19050:	mov	r0, r5
   19054:	ldr	r3, [sp, #52]	; 0x34
   19058:	ldr	r2, [sp, #80]	; 0x50
   1905c:	add	r1, sp, #152	; 0x98
   19060:	bl	4368 <avcodec_decode_subtitle2@plt>
   19064:	cmp	r0, #0
   19068:	blt	19078 <main@@Base+0x1444c>
   1906c:	ldr	r3, [sp, #136]	; 0x88
   19070:	cmp	r3, #0
   19074:	bne	190f0 <main@@Base+0x144c4>
   19078:	ldr	r3, [sp, #60]	; 0x3c
   1907c:	ldr	r6, [sp, #48]	; 0x30
   19080:	ldr	r2, [r3, #24]
   19084:	add	r6, r6, #1
   19088:	cmp	r2, r6
   1908c:	bhi	18f44 <main@@Base+0x14318>
   19090:	ldr	r3, [sp, #80]	; 0x50
   19094:	sub	r0, r3, #8
   19098:	bl	3f9c <av_frame_free@plt>
   1909c:	ldr	r3, [sp, #124]	; 0x7c
   190a0:	ldr	r2, [sp, #1444]	; 0x5a4
   190a4:	ldr	r3, [r3]
   190a8:	ldr	r0, [sp, #56]	; 0x38
   190ac:	cmp	r2, r3
   190b0:	bne	195e4 <main@@Base+0x149b8>
   190b4:	add	sp, sp, #1440	; 0x5a0
   190b8:	add	sp, sp, #12
   190bc:	vpop	{d8}
   190c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   190c4:	ldr	r3, [sp, #60]	; 0x3c
   190c8:	ldrd	r2, [r3]
   190cc:	cmp	r3, #-2147483648	; 0x80000000
   190d0:	cmpeq	r2, #0
   190d4:	beq	195ec <main@@Base+0x149c0>
   190d8:	ldr	r0, [sp, #52]	; 0x34
   190dc:	ldr	r1, [r0, #8]
   190e0:	ldr	r0, [r0, #12]
   190e4:	adds	r6, r2, r1
   190e8:	adc	r7, r3, r0
   190ec:	b	17f50 <main@@Base+0x13324>
   190f0:	mov	r4, #0
   190f4:	ldr	r3, [sl]
   190f8:	ldr	ip, [pc, #-3312]	; 18410 <main@@Base+0x137e4>
   190fc:	ldr	r2, [sp, #216]	; 0xd8
   19100:	add	ip, pc, ip
   19104:	ldr	r0, [ip, #64]	; 0x40
   19108:	lsl	r2, r2, #3
   1910c:	ldr	r1, [r0, r2]
   19110:	add	lr, r0, r2
   19114:	ldr	lr, [lr, #4]
   19118:	ldr	ip, [ip, #16]
   1911c:	adds	r1, r1, #1
   19120:	adc	lr, lr, #0
   19124:	cmp	ip, #0
   19128:	add	ip, r0, r2
   1912c:	str	r1, [r0, r2]
   19130:	str	lr, [ip, #4]
   19134:	beq	19174 <main@@Base+0x14548>
   19138:	cmp	r3, #3
   1913c:	beq	193f4 <main@@Base+0x147c8>
   19140:	ldr	r3, [sp, #28]
   19144:	ldr	r1, [sp, #32]
   19148:	ldr	r0, [r3]
   1914c:	ldr	r3, [sp, #40]	; 0x28
   19150:	ldr	r2, [r0, r2]
   19154:	ldr	r0, [sp, #64]	; 0x40
   19158:	bl	16408 <main@@Base+0x117dc>
   1915c:	ldr	r3, [sp, #136]	; 0x88
   19160:	cmp	r3, #0
   19164:	beq	194f4 <main@@Base+0x148c8>
   19168:	ldr	r2, [sp, #216]	; 0xd8
   1916c:	lsl	r2, r2, #3
   19170:	b	18f78 <main@@Base+0x1434c>
   19174:	cmp	r3, #3
   19178:	bne	18f78 <main@@Base+0x1434c>
   1917c:	add	r5, sp, #152	; 0x98
   19180:	b	19404 <main@@Base+0x147d8>
   19184:	ldr	r1, [sp, #52]	; 0x34
   19188:	mov	r0, r5
   1918c:	bl	4098 <avcodec_send_packet@plt>
   19190:	cmn	r0, #11
   19194:	beq	194b4 <main@@Base+0x14888>
   19198:	ldr	r3, [pc, #-3468]	; 18414 <main@@Base+0x137e8>
   1919c:	cmp	r0, r3
   191a0:	cmpne	r0, #0
   191a4:	blt	19078 <main@@Base+0x1444c>
   191a8:	mov	r4, #0
   191ac:	b	194b8 <main@@Base+0x1488c>
   191b0:	ldr	r2, [sp, #136]	; 0x88
   191b4:	cmp	r2, #0
   191b8:	beq	19078 <main@@Base+0x1444c>
   191bc:	mov	r4, #0
   191c0:	b	190f8 <main@@Base+0x144cc>
   191c4:	ldr	r3, [sl, #24]
   191c8:	add	r3, sl, r3, lsl #2
   191cc:	ldr	r2, [r3, #68]	; 0x44
   191d0:	ldr	r3, [r2, #68]	; 0x44
   191d4:	cmp	r3, #0
   191d8:	beq	195a8 <main@@Base+0x1497c>
   191dc:	ldrd	r2, [sp, #40]	; 0x28
   191e0:	ldr	r1, [sl, #4]
   191e4:	mov	r0, sl
   191e8:	ldr	r4, [r1, #28]
   191ec:	ldr	r1, [pc, #-3548]	; 18418 <main@@Base+0x137ec>
   191f0:	add	r1, pc, r1
   191f4:	blx	r4
   191f8:	b	188a0 <main@@Base+0x13c74>
   191fc:	vldr	s15, [r5, #16]
   19200:	vcvt.f64.s32	d6, s15
   19204:	vldr	s15, [r5, #20]
   19208:	vcvt.f64.s32	d7, s15
   1920c:	vdiv.f64	d8, d6, d7
   19210:	bl	1b8ac <vc_gpuserv_execute_code@@Base+0x718>
   19214:	vmov	d7, r0, r1
   19218:	vmul.f64	d7, d8, d7
   1921c:	ldr	ip, [pc, #-3592]	; 1841c <main@@Base+0x137f0>
   19220:	vmov	r2, r3, d7
   19224:	add	ip, pc, ip
   19228:	add	ip, ip, #16
   1922c:	str	ip, [sp]
   19230:	mov	r0, r6
   19234:	bl	12248 <main@@Base+0xd61c>
   19238:	ldr	r1, [pc, #-3616]	; 18420 <main@@Base+0x137f4>
   1923c:	mov	r2, r6
   19240:	add	r1, pc, r1
   19244:	mov	r0, sl
   19248:	bl	12fe4 <main@@Base+0xe3b8>
   1924c:	b	189e4 <main@@Base+0x13db8>
   19250:	vldr	s15, [r5, #16]
   19254:	vcvt.f64.s32	d6, s15
   19258:	vldr	s15, [r5, #20]
   1925c:	vcvt.f64.s32	d7, s15
   19260:	vdiv.f64	d8, d6, d7
   19264:	bl	1b8ac <vc_gpuserv_execute_code@@Base+0x718>
   19268:	vmov	d7, r0, r1
   1926c:	vmul.f64	d7, d8, d7
   19270:	ldr	ip, [pc, #-3668]	; 18424 <main@@Base+0x137f8>
   19274:	add	r6, sp, #1312	; 0x520
   19278:	add	ip, pc, ip
   1927c:	add	ip, ip, #16
   19280:	add	r6, r6, #4
   19284:	vmov	r2, r3, d7
   19288:	str	ip, [sp]
   1928c:	mov	r0, r6
   19290:	bl	12248 <main@@Base+0xd61c>
   19294:	ldr	r1, [pc, #-3700]	; 18428 <main@@Base+0x137fc>
   19298:	mov	r2, r6
   1929c:	add	r1, pc, r1
   192a0:	mov	r0, sl
   192a4:	bl	12fe4 <main@@Base+0xe3b8>
   192a8:	ldr	r3, [sl, #24]
   192ac:	add	r3, sl, r3, lsl #2
   192b0:	ldr	r1, [r3, #68]	; 0x44
   192b4:	b	18924 <main@@Base+0x13cf8>
   192b8:	ldr	r0, [r1, #64]	; 0x40
   192bc:	ldr	r1, [pc, #-3736]	; 1842c <main@@Base+0x13800>
   192c0:	mov	r2, r3
   192c4:	add	r1, pc, r1
   192c8:	bl	4644 <av_dict_get@plt>
   192cc:	cmp	r0, #0
   192d0:	ldrne	r2, [sl, #4]
   192d4:	bne	188e8 <main@@Base+0x13cbc>
   192d8:	ldr	r3, [sl, #24]
   192dc:	add	r6, sp, #1312	; 0x520
   192e0:	add	r3, sl, r3, lsl #2
   192e4:	add	r6, r6, #4
   192e8:	ldr	r1, [r3, #68]	; 0x44
   192ec:	b	18924 <main@@Base+0x13cf8>
   192f0:	ldr	r0, [r1, #64]	; 0x40
   192f4:	ldr	r1, [pc, #-3788]	; 18430 <main@@Base+0x13804>
   192f8:	mov	r2, r3
   192fc:	add	r1, pc, r1
   19300:	bl	4644 <av_dict_get@plt>
   19304:	cmp	r0, #0
   19308:	beq	189e4 <main@@Base+0x13db8>
   1930c:	ldr	r2, [sl, #4]
   19310:	b	189b4 <main@@Base+0x13d88>
   19314:	ldr	r0, [r1, #64]	; 0x40
   19318:	ldr	r1, [pc, #-3820]	; 18434 <main@@Base+0x13808>
   1931c:	mov	r2, r3
   19320:	add	r1, pc, r1
   19324:	bl	4644 <av_dict_get@plt>
   19328:	cmp	r0, #0
   1932c:	beq	18980 <main@@Base+0x13d54>
   19330:	ldr	r2, [sl, #4]
   19334:	b	18950 <main@@Base+0x13d24>
   19338:	ldr	r0, [r1, #64]	; 0x40
   1933c:	ldr	r1, [pc, #-3852]	; 18438 <main@@Base+0x1380c>
   19340:	mov	r2, r3
   19344:	add	r1, pc, r1
   19348:	bl	4644 <av_dict_get@plt>
   1934c:	cmp	r0, #0
   19350:	ldrne	r2, [sl, #4]
   19354:	bne	18cc8 <main@@Base+0x1409c>
   19358:	ldrd	r2, [r9, #16]
   1935c:	strd	r2, [sp, #72]	; 0x48
   19360:	b	18830 <main@@Base+0x13c04>
   19364:	ldr	r0, [r1, #64]	; 0x40
   19368:	ldr	r1, [pc, #-3892]	; 1843c <main@@Base+0x13810>
   1936c:	mov	r2, r3
   19370:	add	r1, pc, r1
   19374:	bl	4644 <av_dict_get@plt>
   19378:	cmp	r0, #0
   1937c:	beq	188b4 <main@@Base+0x13c88>
   19380:	ldr	r2, [sl, #4]
   19384:	b	18884 <main@@Base+0x13c58>
   19388:	ldr	r1, [pc, #-3920]	; 18440 <main@@Base+0x13814>
   1938c:	ldr	r0, [r2, #64]	; 0x40
   19390:	add	r1, pc, r1
   19394:	mov	r2, r3
   19398:	bl	4644 <av_dict_get@plt>
   1939c:	cmp	r0, #0
   193a0:	ldrne	r1, [sl, #4]
   193a4:	bne	18d04 <main@@Base+0x140d8>
   193a8:	ldrd	r2, [r9, #8]
   193ac:	strd	r2, [sp, #72]	; 0x48
   193b0:	b	187b0 <main@@Base+0x13b84>
   193b4:	ldr	r1, [pc, #-3960]	; 18444 <main@@Base+0x13818>
   193b8:	ldr	r0, [r2, #64]	; 0x40
   193bc:	add	r1, pc, r1
   193c0:	mov	r2, r3
   193c4:	bl	4644 <av_dict_get@plt>
   193c8:	cmp	r0, #0
   193cc:	bne	186cc <main@@Base+0x13aa0>
   193d0:	b	18e6c <main@@Base+0x14240>
   193d4:	ldr	r1, [pc, #-3988]	; 18448 <main@@Base+0x1381c>
   193d8:	ldr	r0, [r2, #64]	; 0x40
   193dc:	add	r1, pc, r1
   193e0:	mov	r2, r3
   193e4:	bl	4644 <av_dict_get@plt>
   193e8:	cmp	r0, #0
   193ec:	bne	18a98 <main@@Base+0x13e6c>
   193f0:	b	18ac8 <main@@Base+0x13e9c>
   193f4:	add	r5, sp, #152	; 0x98
   193f8:	mov	r1, r5
   193fc:	ldr	r0, [sp, #64]	; 0x40
   19400:	bl	14e78 <main@@Base+0x1024c>
   19404:	mov	r0, r5
   19408:	bl	3dd4 <avsubtitle_free@plt>
   1940c:	b	1915c <main@@Base+0x14530>
   19410:	add	r5, sp, #1312	; 0x520
   19414:	ldr	r3, [sp, #52]	; 0x34
   19418:	add	r5, r5, #4
   1941c:	mov	r2, #64	; 0x40
   19420:	ldrd	r6, [r3, #8]
   19424:	mov	r1, r4
   19428:	mov	r0, r5
   1942c:	bl	41e8 <memset@plt>
   19430:	mov	r1, r5
   19434:	mov	r2, #64	; 0x40
   19438:	ldr	r0, [sp, #56]	; 0x38
   1943c:	bl	44f4 <av_strerror@plt>
   19440:	ldr	r2, [pc, #-4092]	; 1844c <main@@Base+0x13820>
   19444:	strd	r6, [sp]
   19448:	str	r5, [sp, #8]
   1944c:	mov	r0, r4
   19450:	add	r2, pc, r2
   19454:	mov	r1, #16
   19458:	bl	40f8 <av_log@plt>
   1945c:	add	r3, sp, #136	; 0x88
   19460:	str	r3, [sp, #80]	; 0x50
   19464:	ldr	r3, [sp, #80]	; 0x50
   19468:	sub	r0, r3, #8
   1946c:	bl	3f9c <av_frame_free@plt>
   19470:	ldr	r2, [pc, #412]	; 19614 <main@@Base+0x149e8>
   19474:	mov	r1, #16
   19478:	add	r2, pc, r2
   1947c:	mov	r0, #0
   19480:	bl	40f8 <av_log@plt>
   19484:	ldr	r0, [sp, #52]	; 0x34
   19488:	mov	r1, #16
   1948c:	bl	1390c <main@@Base+0xece0>
   19490:	b	1909c <main@@Base+0x14470>
   19494:	ldr	r3, [pc, #380]	; 19618 <main@@Base+0x149ec>
   19498:	add	r3, pc, r3
   1949c:	ldm	r3, {r0, r1}
   194a0:	add	r3, sp, #1280	; 0x500
   194a4:	add	r3, r3, #8
   194a8:	str	r0, [sp, #1284]	; 0x504
   194ac:	strh	r1, [r3]
   194b0:	b	17fb0 <main@@Base+0x13384>
   194b4:	mov	r4, #1
   194b8:	mov	r0, r5
   194bc:	ldr	r1, [sp, #32]
   194c0:	bl	411c <avcodec_receive_frame@plt>
   194c4:	cmp	r0, #0
   194c8:	movge	r2, #1
   194cc:	ldrge	r3, [sl]
   194d0:	strge	r2, [sp, #136]	; 0x88
   194d4:	bge	190f8 <main@@Base+0x144cc>
   194d8:	ldr	r3, [pc, #316]	; 1961c <main@@Base+0x149f0>
   194dc:	cmn	r0, #11
   194e0:	cmpne	r0, r3
   194e4:	bne	19078 <main@@Base+0x1444c>
   194e8:	ldr	r3, [sp, #136]	; 0x88
   194ec:	cmp	r3, #0
   194f0:	bne	195dc <main@@Base+0x149b0>
   194f4:	cmp	r4, #0
   194f8:	bne	19168 <main@@Base+0x1453c>
   194fc:	b	19078 <main@@Base+0x1444c>
   19500:	ldr	r2, [r6]
   19504:	b	18580 <main@@Base+0x13954>
   19508:	mov	r3, #0
   1950c:	add	r4, sp, #152	; 0x98
   19510:	mov	r2, r4
   19514:	str	r3, [sp, #152]	; 0x98
   19518:	bl	41b8 <av_packet_unpack_dictionary@plt>
   1951c:	cmp	r0, #0
   19520:	blt	1953c <main@@Base+0x14910>
   19524:	ldr	r1, [sp, #152]	; 0x98
   19528:	cmp	r1, #0
   1952c:	beq	1953c <main@@Base+0x14910>
   19530:	mov	r2, #16
   19534:	mov	r0, sl
   19538:	bl	1442c <main@@Base+0xf800>
   1953c:	mov	r0, r4
   19540:	bl	3ee8 <av_dict_free@plt>
   19544:	b	18dc4 <main@@Base+0x14198>
   19548:	ldr	r1, [pc, #208]	; 19620 <main@@Base+0x149f4>
   1954c:	ldr	r0, [r2, #64]	; 0x40
   19550:	add	r1, pc, r1
   19554:	mov	r2, r3
   19558:	bl	4644 <av_dict_get@plt>
   1955c:	cmp	r0, #0
   19560:	bne	18778 <main@@Base+0x13b4c>
   19564:	b	193a8 <main@@Base+0x1477c>
   19568:	ldr	r1, [pc, #180]	; 19624 <main@@Base+0x149f8>
   1956c:	ldr	r0, [r2, #64]	; 0x40
   19570:	add	r1, pc, r1
   19574:	mov	r2, r3
   19578:	bl	4644 <av_dict_get@plt>
   1957c:	cmp	r0, #0
   19580:	bne	187f8 <main@@Base+0x13bcc>
   19584:	b	19358 <main@@Base+0x1472c>
   19588:	ldr	r0, [r1, #64]	; 0x40
   1958c:	ldr	r1, [pc, #148]	; 19628 <main@@Base+0x149fc>
   19590:	mov	r2, r3
   19594:	add	r1, pc, r1
   19598:	bl	4644 <av_dict_get@plt>
   1959c:	cmp	r0, #0
   195a0:	bne	18ed8 <main@@Base+0x142ac>
   195a4:	b	18980 <main@@Base+0x13d54>
   195a8:	ldr	r1, [pc, #124]	; 1962c <main@@Base+0x14a00>
   195ac:	ldr	r0, [r2, #64]	; 0x40
   195b0:	add	r1, pc, r1
   195b4:	mov	r2, r3
   195b8:	bl	4644 <av_dict_get@plt>
   195bc:	cmp	r0, #0
   195c0:	bne	191dc <main@@Base+0x145b0>
   195c4:	b	188b4 <main@@Base+0x13c88>
   195c8:	add	r0, sp, #128	; 0x80
   195cc:	bl	3f9c <av_frame_free@plt>
   195d0:	mvn	r3, #11
   195d4:	str	r3, [sp, #56]	; 0x38
   195d8:	b	19470 <main@@Base+0x14844>
   195dc:	ldr	r3, [sl]
   195e0:	b	190f8 <main@@Base+0x144cc>
   195e4:	bl	3f00 <__stack_chk_fail@plt>
   195e8:	bl	11920 <main@@Base+0xccf4>
   195ec:	ldr	r2, [pc, #60]	; 19630 <main@@Base+0x14a04>
   195f0:	mov	r1, #16
   195f4:	add	r2, pc, r2
   195f8:	mov	r0, #0
   195fc:	bl	40f8 <av_log@plt>
   19600:	add	r0, sp, #128	; 0x80
   19604:	bl	3f9c <av_frame_free@plt>
   19608:	mvn	r3, #21
   1960c:	str	r3, [sp, #56]	; 0x38
   19610:	b	19470 <main@@Base+0x14844>
   19614:	andeq	r5, r0, ip, asr #23
   19618:	ldrdeq	r5, [r0], -r4
   1961c:	svcle	0x00b9b0bb
   19620:	andeq	r6, r0, r0, lsl #3
   19624:	ldrdeq	r5, [r0], -r4
   19628:	andeq	r5, r0, r0, ror #20
   1962c:	andeq	r5, r0, r0, asr sl
   19630:	andeq	r5, r0, r4, asr r9
   19634:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19638:	sub	sp, sp, #2272	; 0x8e0
   1963c:	sub	sp, sp, #12
   19640:	mov	r4, r0
   19644:	mov	r5, r3
   19648:	ldr	r3, [sp, #2324]	; 0x914
   1964c:	ldr	lr, [pc, #4072]	; 1a63c <main@@Base+0x15a10>
   19650:	mov	r6, r3
   19654:	add	lr, pc, lr
   19658:	ldr	r0, [pc, #4064]	; 1a640 <main@@Base+0x15a14>
   1965c:	str	lr, [sp, #28]
   19660:	ldr	r0, [lr, r0]
   19664:	add	fp, sp, #72	; 0x48
   19668:	ldr	ip, [r0]
   1966c:	sub	r7, fp, #4
   19670:	str	r0, [sp, #32]
   19674:	str	r1, [sp, #20]
   19678:	str	r2, [sp, #24]
   1967c:	mov	r1, #1
   19680:	mvn	r2, #0
   19684:	mov	r0, r7
   19688:	str	r3, [sp, #36]	; 0x24
   1968c:	str	ip, [sp, #2276]	; 0x8e4
   19690:	ldr	sl, [sp, #2320]	; 0x910
   19694:	bl	3f48 <av_bprint_init@plt>
   19698:	ldr	r2, [r4, #24]
   1969c:	cmp	r6, #0
   196a0:	add	r3, r2, #1
   196a4:	ldr	r1, [pc, #3992]	; 1a644 <main@@Base+0x15a18>
   196a8:	movne	r1, #2160	; 0x870
   196ac:	cmp	r3, #9
   196b0:	str	r3, [r4, #24]
   196b4:	bgt	1add0 <main@@Base+0x161a4>
   196b8:	ldr	r0, [r4, #16]
   196bc:	cmp	r3, #0
   196c0:	add	r1, r0, r1
   196c4:	streq	r3, [r4, #28]
   196c8:	streq	r1, [r4, #68]	; 0x44
   196cc:	bne	1a070 <main@@Base+0x15444>
   196d0:	ldr	r2, [r4, #4]
   196d4:	ldr	r2, [r2, #20]
   196d8:	cmp	r2, #0
   196dc:	beq	196ec <main@@Base+0x14ac0>
   196e0:	mov	r0, r4
   196e4:	blx	r2
   196e8:	ldr	r3, [r4, #24]
   196ec:	add	r3, r4, r3, lsl #2
   196f0:	ldr	r2, [r3, #68]	; 0x44
   196f4:	ldr	r8, [r5]
   196f8:	ldr	r3, [r2, #68]	; 0x44
   196fc:	asr	r9, r8, #31
   19700:	cmp	r3, #0
   19704:	beq	1a8fc <main@@Base+0x15cd0>
   19708:	ldr	r1, [r4, #4]
   1970c:	mov	r2, r8
   19710:	ldr	r6, [r1, #28]
   19714:	ldr	r1, [pc, #3884]	; 1a648 <main@@Base+0x15a1c>
   19718:	mov	r3, r9
   1971c:	add	r1, pc, r1
   19720:	mov	r0, r4
   19724:	blx	r6
   19728:	ldr	r3, [r4, #24]
   1972c:	add	r3, r4, r3, lsl #2
   19730:	ldr	r2, [r3, #28]
   19734:	add	r2, r2, #1
   19738:	str	r2, [r3, #28]
   1973c:	ldr	r6, [r5, #176]	; 0xb0
   19740:	ldr	r8, [sl]
   19744:	ldr	r0, [r6, #4]
   19748:	bl	4740 <avcodec_descriptor_get@plt>
   1974c:	subs	r9, r0, #0
   19750:	beq	1a91c <main@@Base+0x15cf0>
   19754:	ldr	r1, [pc, #3824]	; 1a64c <main@@Base+0x15a20>
   19758:	ldr	r2, [r9, #8]
   1975c:	add	r1, pc, r1
   19760:	mov	r0, r4
   19764:	bl	12fe4 <main@@Base+0xe3b8>
   19768:	ldr	r3, [pc, #3808]	; 1a650 <main@@Base+0x15a24>
   1976c:	add	r3, pc, r3
   19770:	ldr	r3, [r3, #92]	; 0x5c
   19774:	cmp	r3, #0
   19778:	beq	1a09c <main@@Base+0x15470>
   1977c:	ldr	r1, [r6, #40]	; 0x28
   19780:	cmn	r1, #99	; 0x63
   19784:	beq	1a964 <main@@Base+0x15d38>
   19788:	mov	r3, #12
   1978c:	ldr	r2, [pc, #3776]	; 1a654 <main@@Base+0x15a28>
   19790:	add	r9, sp, #2144	; 0x860
   19794:	add	r2, pc, r2
   19798:	add	r9, r9, #4
   1979c:	str	r1, [sp, #4]
   197a0:	str	r2, [sp]
   197a4:	mov	r1, r3
   197a8:	mov	r2, #1
   197ac:	mov	r0, r9
   197b0:	bl	41dc <__snprintf_chk@plt>
   197b4:	ldr	r1, [pc, #3740]	; 1a658 <main@@Base+0x15a2c>
   197b8:	mov	r2, r9
   197bc:	add	r1, pc, r1
   197c0:	mov	r0, r4
   197c4:	bl	12fe4 <main@@Base+0xe3b8>
   197c8:	ldr	r0, [r6]
   197cc:	bl	47dc <av_get_media_type_string@plt>
   197d0:	subs	r2, r0, #0
   197d4:	beq	1a100 <main@@Base+0x154d4>
   197d8:	ldr	r1, [pc, #3708]	; 1a65c <main@@Base+0x15a30>
   197dc:	mov	r0, r4
   197e0:	add	r1, pc, r1
   197e4:	bl	12fe4 <main@@Base+0xe3b8>
   197e8:	cmp	r8, #0
   197ec:	beq	1a120 <main@@Base+0x154f4>
   197f0:	ldr	r1, [pc, #3688]	; 1a660 <main@@Base+0x15a34>
   197f4:	add	r3, r8, #76	; 0x4c
   197f8:	ldm	r3, {r2, r3}
   197fc:	add	r1, pc, r1
   19800:	mov	r0, r4
   19804:	bl	146f0 <main@@Base+0xfac4>
   19808:	add	r3, sp, #2112	; 0x840
   1980c:	add	r3, r3, #4
   19810:	mov	r0, r3
   19814:	mov	r2, #32
   19818:	mov	r1, #0
   1981c:	bl	41e8 <memset@plt>
   19820:	ldr	r1, [r6, #8]
   19824:	bl	435c <av_fourcc_make_string@plt>
   19828:	ldr	r1, [pc, #3636]	; 1a664 <main@@Base+0x15a38>
   1982c:	mov	r2, r0
   19830:	add	r1, pc, r1
   19834:	mov	r0, r4
   19838:	bl	12fe4 <main@@Base+0xe3b8>
   1983c:	mov	r0, r7
   19840:	bl	45c0 <av_bprint_clear@plt>
   19844:	ldr	r1, [pc, #3612]	; 1a668 <main@@Base+0x15a3c>
   19848:	ldr	r2, [r6, #8]
   1984c:	add	r1, pc, r1
   19850:	mov	r0, r7
   19854:	bl	459c <av_bprintf@plt>
   19858:	ldr	r1, [pc, #3596]	; 1a66c <main@@Base+0x15a40>
   1985c:	ldr	r2, [sp, #68]	; 0x44
   19860:	add	r1, pc, r1
   19864:	mov	r0, r4
   19868:	bl	12fe4 <main@@Base+0xe3b8>
   1986c:	ldr	r3, [r6]
   19870:	cmp	r3, #1
   19874:	beq	1a484 <main@@Base+0x15858>
   19878:	cmp	r3, #3
   1987c:	beq	1a43c <main@@Base+0x15810>
   19880:	cmp	r3, #0
   19884:	beq	1a1a8 <main@@Base+0x1557c>
   19888:	add	r9, sp, #1088	; 0x440
   1988c:	add	r9, r9, #4
   19890:	ldr	r3, [r8, #12]
   19894:	cmp	r3, #0
   19898:	beq	198bc <main@@Base+0x14c90>
   1989c:	ldr	r3, [r3, #44]	; 0x2c
   198a0:	cmp	r3, #0
   198a4:	beq	198bc <main@@Base+0x14c90>
   198a8:	ldr	r3, [pc, #3520]	; 1a670 <main@@Base+0x15a44>
   198ac:	add	r3, pc, r3
   198b0:	ldr	r3, [r3]
   198b4:	cmp	r3, #0
   198b8:	bne	1a980 <main@@Base+0x15d54>
   198bc:	ldr	r3, [sp, #20]
   198c0:	ldr	r3, [r3, #4]
   198c4:	ldr	r3, [r3, #8]
   198c8:	tst	r3, #8
   198cc:	beq	1a5b4 <main@@Base+0x15988>
   198d0:	mov	r0, r7
   198d4:	bl	45c0 <av_bprint_clear@plt>
   198d8:	ldr	r1, [pc, #3476]	; 1a674 <main@@Base+0x15a48>
   198dc:	ldr	r2, [r5, #4]
   198e0:	add	r1, pc, r1
   198e4:	mov	r0, r7
   198e8:	bl	459c <av_bprintf@plt>
   198ec:	ldr	r1, [pc, #3460]	; 1a678 <main@@Base+0x15a4c>
   198f0:	ldr	r2, [sp, #68]	; 0x44
   198f4:	add	r1, pc, r1
   198f8:	mov	r0, r4
   198fc:	bl	12fe4 <main@@Base+0xe3b8>
   19900:	ldr	r3, [r5, #168]	; 0xa8
   19904:	mov	r0, r9
   19908:	mov	r2, #1
   1990c:	mov	r1, #0
   19910:	ldr	sl, [pc, #3428]	; 1a67c <main@@Base+0x15a50>
   19914:	ldr	fp, [r5, #164]	; 0xa4
   19918:	str	r3, [sp, #20]
   1991c:	bl	3f48 <av_bprint_init@plt>
   19920:	ldr	r3, [sp, #20]
   19924:	add	sl, pc, sl
   19928:	mov	r2, fp
   1992c:	mov	r0, r9
   19930:	str	r3, [sp]
   19934:	mov	r1, sl
   19938:	mov	r3, #47	; 0x2f
   1993c:	bl	459c <av_bprintf@plt>
   19940:	ldr	r1, [pc, #3384]	; 1a680 <main@@Base+0x15a54>
   19944:	ldr	r2, [sp, #1092]	; 0x444
   19948:	add	r1, pc, r1
   1994c:	mov	r0, r4
   19950:	bl	12fe4 <main@@Base+0xe3b8>
   19954:	ldr	r3, [r5, #72]	; 0x48
   19958:	mov	r0, r9
   1995c:	mov	r2, #1
   19960:	mov	r1, #0
   19964:	ldr	fp, [r5, #68]	; 0x44
   19968:	str	r3, [sp, #20]
   1996c:	bl	3f48 <av_bprint_init@plt>
   19970:	ldr	r3, [sp, #20]
   19974:	mov	r2, fp
   19978:	mov	r0, r9
   1997c:	str	r3, [sp]
   19980:	mov	r1, sl
   19984:	mov	r3, #47	; 0x2f
   19988:	bl	459c <av_bprintf@plt>
   1998c:	ldr	r1, [pc, #3312]	; 1a684 <main@@Base+0x15a58>
   19990:	ldr	r2, [sp, #1092]	; 0x444
   19994:	add	r1, pc, r1
   19998:	mov	r0, r4
   1999c:	bl	12fe4 <main@@Base+0xe3b8>
   199a0:	ldr	r3, [r5, #20]
   199a4:	mov	r0, r9
   199a8:	mov	r2, #1
   199ac:	mov	r1, #0
   199b0:	ldr	fp, [r5, #16]
   199b4:	str	r3, [sp, #20]
   199b8:	bl	3f48 <av_bprint_init@plt>
   199bc:	ldr	r3, [sp, #20]
   199c0:	mov	r0, r9
   199c4:	str	r3, [sp]
   199c8:	mov	r2, fp
   199cc:	mov	r3, #47	; 0x2f
   199d0:	mov	r1, sl
   199d4:	bl	459c <av_bprintf@plt>
   199d8:	ldr	r1, [pc, #3240]	; 1a688 <main@@Base+0x15a5c>
   199dc:	ldr	r2, [sp, #1092]	; 0x444
   199e0:	add	r1, pc, r1
   199e4:	mov	r0, r4
   199e8:	bl	12fe4 <main@@Base+0xe3b8>
   199ec:	ldrd	r2, [r5, #24]
   199f0:	ldr	r1, [pc, #3220]	; 1a68c <main@@Base+0x15a60>
   199f4:	mov	r0, r4
   199f8:	add	r1, pc, r1
   199fc:	bl	147e8 <main@@Base+0xfbbc>
   19a00:	ldrd	r2, [r5, #24]
   19a04:	ldr	r1, [pc, #3204]	; 1a690 <main@@Base+0x15a64>
   19a08:	add	r9, r5, #16
   19a0c:	add	r1, pc, r1
   19a10:	mov	r0, r4
   19a14:	str	r9, [sp]
   19a18:	bl	15458 <main@@Base+0x1082c>
   19a1c:	ldrd	r2, [r5, #32]
   19a20:	ldr	r1, [pc, #3180]	; 1a694 <main@@Base+0x15a68>
   19a24:	mov	r0, r4
   19a28:	add	r1, pc, r1
   19a2c:	bl	147e8 <main@@Base+0xfbbc>
   19a30:	ldrd	r2, [r5, #32]
   19a34:	ldr	r1, [pc, #3164]	; 1a698 <main@@Base+0x15a6c>
   19a38:	str	r9, [sp]
   19a3c:	add	r1, pc, r1
   19a40:	mov	r0, r4
   19a44:	bl	15458 <main@@Base+0x1082c>
   19a48:	ldrd	r2, [r6, #24]
   19a4c:	cmp	r2, #1
   19a50:	sbcs	r1, r3, #0
   19a54:	blt	1a5d0 <main@@Base+0x159a4>
   19a58:	ldr	r1, [pc, #3132]	; 1a69c <main@@Base+0x15a70>
   19a5c:	add	r0, sp, #2144	; 0x860
   19a60:	add	r1, pc, r1
   19a64:	add	r1, r1, #32
   19a68:	str	r1, [sp]
   19a6c:	add	r0, r0, #4
   19a70:	bl	12248 <main@@Base+0xd61c>
   19a74:	ldr	r1, [pc, #3108]	; 1a6a0 <main@@Base+0x15a74>
   19a78:	mov	r2, r0
   19a7c:	add	r1, pc, r1
   19a80:	mov	r0, r4
   19a84:	bl	12fe4 <main@@Base+0xe3b8>
   19a88:	ldr	r3, [r5, #8]
   19a8c:	add	r3, r3, #448	; 0x1c0
   19a90:	ldrd	r2, [r3, #-8]
   19a94:	cmp	r2, #1
   19a98:	sbcs	r1, r3, #0
   19a9c:	blt	1a5ec <main@@Base+0x159c0>
   19aa0:	ldr	r1, [pc, #3068]	; 1a6a4 <main@@Base+0x15a78>
   19aa4:	add	r0, sp, #2144	; 0x860
   19aa8:	add	r1, pc, r1
   19aac:	add	r1, r1, #32
   19ab0:	str	r1, [sp]
   19ab4:	add	r0, r0, #4
   19ab8:	bl	12248 <main@@Base+0xd61c>
   19abc:	ldr	r1, [pc, #3044]	; 1a6a8 <main@@Base+0x15a7c>
   19ac0:	mov	r2, r0
   19ac4:	add	r1, pc, r1
   19ac8:	mov	r0, r4
   19acc:	bl	12fe4 <main@@Base+0xe3b8>
   19ad0:	cmp	r8, #0
   19ad4:	beq	19ae4 <main@@Base+0x14eb8>
   19ad8:	ldr	r3, [r8, #676]	; 0x2a4
   19adc:	cmp	r3, #0
   19ae0:	bgt	1a608 <main@@Base+0x159dc>
   19ae4:	ldr	r2, [pc, #3008]	; 1a6ac <main@@Base+0x15a80>
   19ae8:	ldr	r1, [pc, #3008]	; 1a6b0 <main@@Base+0x15a84>
   19aec:	add	r2, pc, r2
   19af0:	add	r1, pc, r1
   19af4:	mov	r0, r4
   19af8:	bl	131bc <main@@Base+0xe590>
   19afc:	ldrd	r2, [r5, #40]	; 0x28
   19b00:	orrs	r3, r2, r3
   19b04:	beq	1a598 <main@@Base+0x1596c>
   19b08:	mov	r0, r7
   19b0c:	bl	45c0 <av_bprint_clear@plt>
   19b10:	ldrd	r2, [r5, #40]	; 0x28
   19b14:	ldr	r1, [pc, #2968]	; 1a6b4 <main@@Base+0x15a88>
   19b18:	mov	r0, r7
   19b1c:	add	r1, pc, r1
   19b20:	bl	459c <av_bprintf@plt>
   19b24:	ldr	r1, [pc, #2956]	; 1a6b8 <main@@Base+0x15a8c>
   19b28:	ldr	r2, [sp, #68]	; 0x44
   19b2c:	add	r1, pc, r1
   19b30:	mov	r0, r4
   19b34:	bl	12fe4 <main@@Base+0xe3b8>
   19b38:	ldr	r9, [pc, #2940]	; 1a6bc <main@@Base+0x15a90>
   19b3c:	ldr	r3, [sp, #24]
   19b40:	add	r9, pc, r9
   19b44:	lsl	r8, r3, #3
   19b48:	ldr	r3, [r9, #64]	; 0x40
   19b4c:	ldrd	r2, [r3, r8]
   19b50:	orrs	r3, r2, r3
   19b54:	beq	1a57c <main@@Base+0x15950>
   19b58:	mov	r0, r7
   19b5c:	bl	45c0 <av_bprint_clear@plt>
   19b60:	ldr	r3, [r9, #64]	; 0x40
   19b64:	ldr	r1, [pc, #2900]	; 1a6c0 <main@@Base+0x15a94>
   19b68:	ldrd	r2, [r3, r8]
   19b6c:	add	r1, pc, r1
   19b70:	mov	r0, r7
   19b74:	bl	459c <av_bprintf@plt>
   19b78:	ldr	r1, [pc, #2884]	; 1a6c4 <main@@Base+0x15a98>
   19b7c:	ldr	r2, [sp, #68]	; 0x44
   19b80:	add	r1, pc, r1
   19b84:	mov	r0, r4
   19b88:	bl	12fe4 <main@@Base+0xe3b8>
   19b8c:	ldr	r9, [pc, #2868]	; 1a6c8 <main@@Base+0x15a9c>
   19b90:	add	r9, pc, r9
   19b94:	ldr	r3, [r9, #68]	; 0x44
   19b98:	ldrd	r2, [r3, r8]
   19b9c:	orrs	r3, r2, r3
   19ba0:	beq	1a560 <main@@Base+0x15934>
   19ba4:	mov	r0, r7
   19ba8:	bl	45c0 <av_bprint_clear@plt>
   19bac:	ldr	r3, [r9, #68]	; 0x44
   19bb0:	ldr	r1, [pc, #2836]	; 1a6cc <main@@Base+0x15aa0>
   19bb4:	ldrd	r2, [r3, r8]
   19bb8:	add	r1, pc, r1
   19bbc:	mov	r0, r7
   19bc0:	bl	459c <av_bprintf@plt>
   19bc4:	ldr	r1, [pc, #2820]	; 1a6d0 <main@@Base+0x15aa4>
   19bc8:	ldr	r2, [sp, #68]	; 0x44
   19bcc:	add	r1, pc, r1
   19bd0:	mov	r0, r4
   19bd4:	bl	12fe4 <main@@Base+0xe3b8>
   19bd8:	ldr	r3, [pc, #2804]	; 1a6d4 <main@@Base+0x15aa8>
   19bdc:	ldr	r2, [r6, #12]
   19be0:	add	r3, pc, r3
   19be4:	ldr	r1, [r3, #84]	; 0x54
   19be8:	ldr	r3, [r6, #16]
   19bec:	cmp	r1, #0
   19bf0:	bne	1a8e4 <main@@Base+0x15cb8>
   19bf4:	ldr	r1, [pc, #2780]	; 1a6d8 <main@@Base+0x15aac>
   19bf8:	mov	r0, r4
   19bfc:	add	r1, pc, r1
   19c00:	bl	14d38 <main@@Base+0x1010c>
   19c04:	ldr	r3, [pc, #2768]	; 1a6dc <main@@Base+0x15ab0>
   19c08:	add	r3, pc, r3
   19c0c:	ldr	r3, [r3, #96]	; 0x60
   19c10:	cmp	r3, #0
   19c14:	beq	19f60 <main@@Base+0x15334>
   19c18:	ldr	r3, [sp, #36]	; 0x24
   19c1c:	mov	r0, r4
   19c20:	cmp	r3, #0
   19c24:	movne	r1, #26
   19c28:	moveq	r1, #36	; 0x24
   19c2c:	bl	1198c <main@@Base+0xcd60>
   19c30:	ldr	r3, [r4, #24]
   19c34:	ldr	r8, [r5, #48]	; 0x30
   19c38:	add	r3, r4, r3, lsl #2
   19c3c:	ldr	r2, [r3, #68]	; 0x44
   19c40:	and	r8, r8, #1
   19c44:	ldr	r3, [r2, #68]	; 0x44
   19c48:	uxtb	r8, r8
   19c4c:	cmp	r3, #0
   19c50:	mov	r9, #0
   19c54:	beq	1ac1c <main@@Base+0x15ff0>
   19c58:	ldr	r1, [r4, #4]
   19c5c:	mov	r2, r8
   19c60:	ldr	r6, [r1, #28]
   19c64:	ldr	r1, [pc, #2676]	; 1a6e0 <main@@Base+0x15ab4>
   19c68:	mov	r3, r9
   19c6c:	add	r1, pc, r1
   19c70:	mov	r0, r4
   19c74:	blx	r6
   19c78:	ldr	r3, [r4, #24]
   19c7c:	add	r1, r4, r3, lsl #2
   19c80:	ldr	r2, [r1, #28]
   19c84:	add	r2, r2, #1
   19c88:	str	r2, [r1, #28]
   19c8c:	add	r3, r4, r3, lsl #2
   19c90:	ldr	r1, [r3, #68]	; 0x44
   19c94:	ldr	r2, [r5, #48]	; 0x30
   19c98:	ldr	r3, [r1, #68]	; 0x44
   19c9c:	lsr	r2, r2, #1
   19ca0:	cmp	r3, #0
   19ca4:	and	r6, r2, #1
   19ca8:	beq	1abf8 <main@@Base+0x15fcc>
   19cac:	ldr	r3, [r4, #4]
   19cb0:	ldr	r1, [pc, #2604]	; 1a6e4 <main@@Base+0x15ab8>
   19cb4:	mov	r2, r6
   19cb8:	add	r1, pc, r1
   19cbc:	ldr	r6, [r3, #28]
   19cc0:	mov	r0, r4
   19cc4:	mov	r3, #0
   19cc8:	blx	r6
   19ccc:	ldr	r3, [r4, #24]
   19cd0:	add	r1, r4, r3, lsl #2
   19cd4:	ldr	r2, [r1, #28]
   19cd8:	add	r2, r2, #1
   19cdc:	str	r2, [r1, #28]
   19ce0:	add	r3, r4, r3, lsl #2
   19ce4:	ldr	r1, [r3, #68]	; 0x44
   19ce8:	ldr	r2, [r5, #48]	; 0x30
   19cec:	ldr	r3, [r1, #68]	; 0x44
   19cf0:	lsr	r2, r2, #2
   19cf4:	cmp	r3, #0
   19cf8:	and	r6, r2, #1
   19cfc:	beq	1abd4 <main@@Base+0x15fa8>
   19d00:	ldr	r3, [r4, #4]
   19d04:	ldr	r1, [pc, #2524]	; 1a6e8 <main@@Base+0x15abc>
   19d08:	mov	r2, r6
   19d0c:	add	r1, pc, r1
   19d10:	ldr	r6, [r3, #28]
   19d14:	mov	r0, r4
   19d18:	mov	r3, #0
   19d1c:	blx	r6
   19d20:	ldr	r3, [r4, #24]
   19d24:	add	r1, r4, r3, lsl #2
   19d28:	ldr	r2, [r1, #28]
   19d2c:	add	r2, r2, #1
   19d30:	str	r2, [r1, #28]
   19d34:	add	r3, r4, r3, lsl #2
   19d38:	ldr	r1, [r3, #68]	; 0x44
   19d3c:	ldr	r2, [r5, #48]	; 0x30
   19d40:	ldr	r3, [r1, #68]	; 0x44
   19d44:	lsr	r2, r2, #3
   19d48:	cmp	r3, #0
   19d4c:	and	r6, r2, #1
   19d50:	beq	1abb0 <main@@Base+0x15f84>
   19d54:	ldr	r3, [r4, #4]
   19d58:	ldr	r1, [pc, #2444]	; 1a6ec <main@@Base+0x15ac0>
   19d5c:	mov	r2, r6
   19d60:	add	r1, pc, r1
   19d64:	ldr	r6, [r3, #28]
   19d68:	mov	r0, r4
   19d6c:	mov	r3, #0
   19d70:	blx	r6
   19d74:	ldr	r3, [r4, #24]
   19d78:	add	r1, r4, r3, lsl #2
   19d7c:	ldr	r2, [r1, #28]
   19d80:	add	r2, r2, #1
   19d84:	str	r2, [r1, #28]
   19d88:	add	r3, r4, r3, lsl #2
   19d8c:	ldr	r1, [r3, #68]	; 0x44
   19d90:	ldr	r2, [r5, #48]	; 0x30
   19d94:	ldr	r3, [r1, #68]	; 0x44
   19d98:	lsr	r2, r2, #4
   19d9c:	cmp	r3, #0
   19da0:	and	r6, r2, #1
   19da4:	beq	1ab8c <main@@Base+0x15f60>
   19da8:	ldr	r3, [r4, #4]
   19dac:	ldr	r1, [pc, #2364]	; 1a6f0 <main@@Base+0x15ac4>
   19db0:	mov	r2, r6
   19db4:	add	r1, pc, r1
   19db8:	ldr	r6, [r3, #28]
   19dbc:	mov	r0, r4
   19dc0:	mov	r3, #0
   19dc4:	blx	r6
   19dc8:	ldr	r3, [r4, #24]
   19dcc:	add	r1, r4, r3, lsl #2
   19dd0:	ldr	r2, [r1, #28]
   19dd4:	add	r2, r2, #1
   19dd8:	str	r2, [r1, #28]
   19ddc:	add	r3, r4, r3, lsl #2
   19de0:	ldr	r1, [r3, #68]	; 0x44
   19de4:	ldr	r2, [r5, #48]	; 0x30
   19de8:	ldr	r3, [r1, #68]	; 0x44
   19dec:	lsr	r2, r2, #5
   19df0:	cmp	r3, #0
   19df4:	and	r6, r2, #1
   19df8:	beq	1ab68 <main@@Base+0x15f3c>
   19dfc:	ldr	r3, [r4, #4]
   19e00:	ldr	r1, [pc, #2284]	; 1a6f4 <main@@Base+0x15ac8>
   19e04:	mov	r2, r6
   19e08:	add	r1, pc, r1
   19e0c:	ldr	r6, [r3, #28]
   19e10:	mov	r0, r4
   19e14:	mov	r3, #0
   19e18:	blx	r6
   19e1c:	ldr	r3, [r4, #24]
   19e20:	add	r1, r4, r3, lsl #2
   19e24:	ldr	r2, [r1, #28]
   19e28:	add	r2, r2, #1
   19e2c:	str	r2, [r1, #28]
   19e30:	add	r3, r4, r3, lsl #2
   19e34:	ldr	r1, [r3, #68]	; 0x44
   19e38:	ldr	r2, [r5, #48]	; 0x30
   19e3c:	ldr	r3, [r1, #68]	; 0x44
   19e40:	lsr	r2, r2, #6
   19e44:	cmp	r3, #0
   19e48:	and	r6, r2, #1
   19e4c:	beq	1ab44 <main@@Base+0x15f18>
   19e50:	ldr	r3, [r4, #4]
   19e54:	ldr	r1, [pc, #2204]	; 1a6f8 <main@@Base+0x15acc>
   19e58:	mov	r2, r6
   19e5c:	add	r1, pc, r1
   19e60:	ldr	r6, [r3, #28]
   19e64:	mov	r0, r4
   19e68:	mov	r3, #0
   19e6c:	blx	r6
   19e70:	ldr	r3, [r4, #24]
   19e74:	add	r1, r4, r3, lsl #2
   19e78:	ldr	r2, [r1, #28]
   19e7c:	add	r2, r2, #1
   19e80:	str	r2, [r1, #28]
   19e84:	add	r3, r4, r3, lsl #2
   19e88:	ldr	r1, [r3, #68]	; 0x44
   19e8c:	ldr	r2, [r5, #48]	; 0x30
   19e90:	ldr	r3, [r1, #68]	; 0x44
   19e94:	lsr	r2, r2, #7
   19e98:	cmp	r3, #0
   19e9c:	and	r6, r2, #1
   19ea0:	beq	1ab24 <main@@Base+0x15ef8>
   19ea4:	ldr	r3, [r4, #4]
   19ea8:	ldr	r1, [pc, #2124]	; 1a6fc <main@@Base+0x15ad0>
   19eac:	mov	r2, r6
   19eb0:	add	r1, pc, r1
   19eb4:	ldr	r6, [r3, #28]
   19eb8:	mov	r0, r4
   19ebc:	mov	r3, #0
   19ec0:	blx	r6
   19ec4:	ldr	r3, [r4, #24]
   19ec8:	add	r3, r4, r3, lsl #2
   19ecc:	ldr	r2, [r3, #28]
   19ed0:	add	r2, r2, #1
   19ed4:	str	r2, [r3, #28]
   19ed8:	ldr	r2, [r5, #48]	; 0x30
   19edc:	ldr	r1, [pc, #2076]	; 1a700 <main@@Base+0x15ad4>
   19ee0:	lsr	r2, r2, #8
   19ee4:	mov	r3, #0
   19ee8:	and	r2, r2, #1
   19eec:	add	r1, pc, r1
   19ef0:	mov	r0, r4
   19ef4:	bl	11004 <main@@Base+0xc3d8>
   19ef8:	ldr	r2, [r5, #48]	; 0x30
   19efc:	ldr	r1, [pc, #2048]	; 1a704 <main@@Base+0x15ad8>
   19f00:	lsr	r2, r2, #9
   19f04:	mov	r3, #0
   19f08:	and	r2, r2, #1
   19f0c:	add	r1, pc, r1
   19f10:	mov	r0, r4
   19f14:	bl	11004 <main@@Base+0xc3d8>
   19f18:	ldr	r2, [r5, #48]	; 0x30
   19f1c:	ldr	r1, [pc, #2020]	; 1a708 <main@@Base+0x15adc>
   19f20:	lsr	r2, r2, #10
   19f24:	mov	r3, #0
   19f28:	and	r2, r2, #1
   19f2c:	add	r1, pc, r1
   19f30:	mov	r0, r4
   19f34:	bl	11004 <main@@Base+0xc3d8>
   19f38:	ldr	r2, [r5, #48]	; 0x30
   19f3c:	ldr	r1, [pc, #1992]	; 1a70c <main@@Base+0x15ae0>
   19f40:	lsr	r2, r2, #11
   19f44:	mov	r0, r4
   19f48:	mov	r3, #0
   19f4c:	and	r2, r2, #1
   19f50:	add	r1, pc, r1
   19f54:	bl	11004 <main@@Base+0xc3d8>
   19f58:	mov	r0, r4
   19f5c:	bl	ef94 <main@@Base+0xa368>
   19f60:	ldr	r3, [pc, #1960]	; 1a710 <main@@Base+0x15ae4>
   19f64:	add	r3, pc, r3
   19f68:	ldr	r6, [r3, #100]	; 0x64
   19f6c:	cmp	r6, #0
   19f70:	beq	19fa0 <main@@Base+0x15374>
   19f74:	ldr	r3, [sp, #36]	; 0x24
   19f78:	ldr	r1, [r5, #64]	; 0x40
   19f7c:	cmp	r3, #0
   19f80:	movne	r2, #27
   19f84:	moveq	r2, #38	; 0x26
   19f88:	cmp	r1, #0
   19f8c:	moveq	r6, r1
   19f90:	beq	19fa0 <main@@Base+0x15374>
   19f94:	mov	r0, r4
   19f98:	bl	1442c <main@@Base+0xf800>
   19f9c:	mov	r6, r0
   19fa0:	ldr	r3, [r5, #156]	; 0x9c
   19fa4:	cmp	r3, #0
   19fa8:	bne	1a8b4 <main@@Base+0x15c88>
   19fac:	ldr	r3, [r4, #24]
   19fb0:	cmp	r3, #0
   19fb4:	beq	1a008 <main@@Base+0x153dc>
   19fb8:	add	r2, r4, r3, lsl #2
   19fbc:	ldr	r1, [r2, #64]	; 0x40
   19fc0:	ldr	r0, [r1]
   19fc4:	cmn	r0, #1
   19fc8:	beq	1a008 <main@@Base+0x153dc>
   19fcc:	ldr	r1, [r2, #24]
   19fd0:	ldr	ip, [r2, #68]	; 0x44
   19fd4:	cmp	r0, #18
   19fd8:	add	r1, r1, #1
   19fdc:	ldr	r0, [ip]
   19fe0:	str	r1, [r2, #24]
   19fe4:	bne	1a008 <main@@Base+0x153dc>
   19fe8:	cmp	r0, #15
   19fec:	add	r1, r4, #8192	; 0x2000
   19ff0:	ldreq	r2, [r1, #2156]	; 0x86c
   19ff4:	ldrne	r2, [r1, #2160]	; 0x870
   19ff8:	addeq	r2, r2, #1
   19ffc:	addne	r2, r2, #1
   1a000:	streq	r2, [r1, #2156]	; 0x86c
   1a004:	strne	r2, [r1, #2160]	; 0x870
   1a008:	ldr	r2, [r4, #4]
   1a00c:	ldr	r2, [r2, #24]
   1a010:	cmp	r2, #0
   1a014:	beq	1a024 <main@@Base+0x153f8>
   1a018:	mov	r0, r4
   1a01c:	blx	r2
   1a020:	ldr	r3, [r4, #24]
   1a024:	sub	r3, r3, #1
   1a028:	str	r3, [r4, #24]
   1a02c:	mov	r1, #0
   1a030:	mov	r0, r7
   1a034:	bl	4308 <av_bprint_finalize@plt>
   1a038:	ldr	r2, [sp, #28]
   1a03c:	ldr	r3, [pc, #1744]	; 1a714 <main@@Base+0x15ae8>
   1a040:	ldr	r3, [r2, r3]
   1a044:	ldr	r0, [r3]
   1a048:	bl	417c <fflush@plt>
   1a04c:	ldr	r3, [sp, #32]
   1a050:	ldr	r2, [sp, #2276]	; 0x8e4
   1a054:	ldr	r3, [r3]
   1a058:	mov	r0, r6
   1a05c:	cmp	r2, r3
   1a060:	bne	1add4 <main@@Base+0x161a8>
   1a064:	add	sp, sp, #2272	; 0x8e0
   1a068:	add	sp, sp, #12
   1a06c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a070:	mov	r0, #0
   1a074:	add	r2, r4, r2, lsl #2
   1a078:	ldr	ip, [r2, #68]	; 0x44
   1a07c:	ldr	ip, [ip]
   1a080:	str	r1, [r2, #72]	; 0x48
   1a084:	cmp	ip, #18
   1a088:	str	r0, [r2, #32]
   1a08c:	addeq	r2, r4, #8192	; 0x2000
   1a090:	ldreq	r1, [r2, #2160]	; 0x870
   1a094:	streq	r1, [r2, #2164]	; 0x874
   1a098:	b	196d0 <main@@Base+0x14aa4>
   1a09c:	ldr	r2, [r9, #12]
   1a0a0:	cmp	r2, #0
   1a0a4:	beq	1acd4 <main@@Base+0x160a8>
   1a0a8:	ldr	r1, [pc, #1640]	; 1a718 <main@@Base+0x15aec>
   1a0ac:	mov	r0, r4
   1a0b0:	add	r1, pc, r1
   1a0b4:	bl	12fe4 <main@@Base+0xe3b8>
   1a0b8:	ldr	r3, [pc, #1628]	; 1a71c <main@@Base+0x15af0>
   1a0bc:	ldr	r1, [r6, #40]	; 0x28
   1a0c0:	add	r3, pc, r3
   1a0c4:	ldr	r3, [r3, #92]	; 0x5c
   1a0c8:	cmp	r3, #0
   1a0cc:	bne	19780 <main@@Base+0x14b54>
   1a0d0:	ldr	r0, [r6, #4]
   1a0d4:	bl	456c <avcodec_profile_name@plt>
   1a0d8:	subs	r2, r0, #0
   1a0dc:	beq	1977c <main@@Base+0x14b50>
   1a0e0:	ldr	r1, [pc, #1592]	; 1a720 <main@@Base+0x15af4>
   1a0e4:	mov	r0, r4
   1a0e8:	add	r1, pc, r1
   1a0ec:	bl	12fe4 <main@@Base+0xe3b8>
   1a0f0:	ldr	r0, [r6]
   1a0f4:	bl	47dc <av_get_media_type_string@plt>
   1a0f8:	subs	r2, r0, #0
   1a0fc:	bne	197d8 <main@@Base+0x14bac>
   1a100:	ldr	r2, [pc, #1564]	; 1a724 <main@@Base+0x15af8>
   1a104:	ldr	r1, [pc, #1564]	; 1a728 <main@@Base+0x15afc>
   1a108:	add	r2, pc, r2
   1a10c:	add	r1, pc, r1
   1a110:	mov	r0, r4
   1a114:	bl	131bc <main@@Base+0xe590>
   1a118:	cmp	r8, #0
   1a11c:	bne	197f0 <main@@Base+0x14bc4>
   1a120:	add	r3, sp, #2112	; 0x840
   1a124:	add	r3, r3, #4
   1a128:	mov	r0, r3
   1a12c:	mov	r2, #32
   1a130:	mov	r1, r8
   1a134:	bl	41e8 <memset@plt>
   1a138:	ldr	r1, [r6, #8]
   1a13c:	bl	435c <av_fourcc_make_string@plt>
   1a140:	ldr	r1, [pc, #1508]	; 1a72c <main@@Base+0x15b00>
   1a144:	mov	r2, r0
   1a148:	add	r1, pc, r1
   1a14c:	mov	r0, r4
   1a150:	bl	12fe4 <main@@Base+0xe3b8>
   1a154:	mov	r0, r7
   1a158:	bl	45c0 <av_bprint_clear@plt>
   1a15c:	ldr	r1, [pc, #1484]	; 1a730 <main@@Base+0x15b04>
   1a160:	ldr	r2, [r6, #8]
   1a164:	add	r1, pc, r1
   1a168:	mov	r0, r7
   1a16c:	bl	459c <av_bprintf@plt>
   1a170:	ldr	r1, [pc, #1468]	; 1a734 <main@@Base+0x15b08>
   1a174:	ldr	r2, [sp, #68]	; 0x44
   1a178:	add	r1, pc, r1
   1a17c:	mov	r0, r4
   1a180:	bl	12fe4 <main@@Base+0xe3b8>
   1a184:	ldr	r3, [r6]
   1a188:	cmp	r3, #1
   1a18c:	beq	1a484 <main@@Base+0x15858>
   1a190:	cmp	r3, #3
   1a194:	beq	1a43c <main@@Base+0x15810>
   1a198:	cmp	r3, #0
   1a19c:	addne	r9, sp, #1088	; 0x440
   1a1a0:	addne	r9, r9, #4
   1a1a4:	bne	198bc <main@@Base+0x14c90>
   1a1a8:	ldr	r2, [r6, #48]	; 0x30
   1a1ac:	ldr	r1, [pc, #1412]	; 1a738 <main@@Base+0x15b0c>
   1a1b0:	asr	r3, r2, #31
   1a1b4:	add	r1, pc, r1
   1a1b8:	mov	r0, r4
   1a1bc:	bl	11004 <main@@Base+0xc3d8>
   1a1c0:	ldr	r2, [r6, #52]	; 0x34
   1a1c4:	ldr	r1, [pc, #1392]	; 1a73c <main@@Base+0x15b10>
   1a1c8:	asr	r3, r2, #31
   1a1cc:	add	r1, pc, r1
   1a1d0:	mov	r0, r4
   1a1d4:	bl	11004 <main@@Base+0xc3d8>
   1a1d8:	cmp	r8, #0
   1a1dc:	beq	1a210 <main@@Base+0x155e4>
   1a1e0:	ldr	r2, [r8, #100]	; 0x64
   1a1e4:	ldr	r1, [pc, #1364]	; 1a740 <main@@Base+0x15b14>
   1a1e8:	asr	r3, r2, #31
   1a1ec:	add	r1, pc, r1
   1a1f0:	mov	r0, r4
   1a1f4:	bl	11004 <main@@Base+0xc3d8>
   1a1f8:	ldr	r2, [r8, #104]	; 0x68
   1a1fc:	ldr	r1, [pc, #1344]	; 1a744 <main@@Base+0x15b18>
   1a200:	asr	r3, r2, #31
   1a204:	add	r1, pc, r1
   1a208:	mov	r0, r4
   1a20c:	bl	11004 <main@@Base+0xc3d8>
   1a210:	ldr	r2, [r6, #88]	; 0x58
   1a214:	ldr	r1, [pc, #1324]	; 1a748 <main@@Base+0x15b1c>
   1a218:	asr	r3, r2, #31
   1a21c:	add	r1, pc, r1
   1a220:	mov	r0, r4
   1a224:	bl	11004 <main@@Base+0xc3d8>
   1a228:	mov	r3, #0
   1a22c:	mov	r2, r5
   1a230:	ldr	r1, [sp, #20]
   1a234:	add	r0, sp, #52	; 0x34
   1a238:	bl	4068 <av_guess_sample_aspect_ratio@plt>
   1a23c:	ldr	sl, [sp, #52]	; 0x34
   1a240:	cmp	sl, #0
   1a244:	bne	1a9f0 <main@@Base+0x15dc4>
   1a248:	ldr	r9, [pc, #1276]	; 1a74c <main@@Base+0x15b20>
   1a24c:	ldr	r1, [pc, #1276]	; 1a750 <main@@Base+0x15b24>
   1a250:	add	r9, pc, r9
   1a254:	mov	r2, r9
   1a258:	add	r1, pc, r1
   1a25c:	mov	r0, r4
   1a260:	bl	131bc <main@@Base+0xe590>
   1a264:	ldr	r1, [pc, #1256]	; 1a754 <main@@Base+0x15b28>
   1a268:	mov	r2, r9
   1a26c:	add	r1, pc, r1
   1a270:	mov	r0, r4
   1a274:	bl	131bc <main@@Base+0xe590>
   1a278:	add	r9, sp, #1088	; 0x440
   1a27c:	add	r9, r9, #4
   1a280:	ldr	r0, [r6, #20]
   1a284:	bl	4794 <av_get_pix_fmt_name@plt>
   1a288:	subs	r2, r0, #0
   1a28c:	beq	1ad0c <main@@Base+0x160e0>
   1a290:	ldr	r1, [pc, #1216]	; 1a758 <main@@Base+0x15b2c>
   1a294:	mov	r0, r4
   1a298:	add	r1, pc, r1
   1a29c:	bl	12fe4 <main@@Base+0xe3b8>
   1a2a0:	ldr	r2, [r6, #44]	; 0x2c
   1a2a4:	ldr	r1, [pc, #1200]	; 1a75c <main@@Base+0x15b30>
   1a2a8:	asr	r3, r2, #31
   1a2ac:	add	r1, pc, r1
   1a2b0:	mov	r0, r4
   1a2b4:	bl	11004 <main@@Base+0xc3d8>
   1a2b8:	ldr	sl, [r6, #68]	; 0x44
   1a2bc:	mov	r0, sl
   1a2c0:	bl	4284 <av_color_range_name@plt>
   1a2c4:	cmp	sl, #0
   1a2c8:	cmpne	r0, #0
   1a2cc:	bne	1acbc <main@@Base+0x16090>
   1a2d0:	ldr	r2, [pc, #1160]	; 1a760 <main@@Base+0x15b34>
   1a2d4:	ldr	r1, [pc, #1160]	; 1a764 <main@@Base+0x15b38>
   1a2d8:	add	r2, pc, r2
   1a2dc:	add	r1, pc, r1
   1a2e0:	mov	r0, r4
   1a2e4:	bl	131bc <main@@Base+0xe590>
   1a2e8:	ldr	sl, [r6, #80]	; 0x50
   1a2ec:	mov	r0, sl
   1a2f0:	bl	4800 <av_color_space_name@plt>
   1a2f4:	cmp	sl, #2
   1a2f8:	cmpne	r0, #0
   1a2fc:	bne	1aca4 <main@@Base+0x16078>
   1a300:	ldr	r2, [pc, #1120]	; 1a768 <main@@Base+0x15b3c>
   1a304:	ldr	r1, [pc, #1120]	; 1a76c <main@@Base+0x15b40>
   1a308:	add	r2, pc, r2
   1a30c:	add	r1, pc, r1
   1a310:	mov	r0, r4
   1a314:	bl	131bc <main@@Base+0xe590>
   1a318:	ldr	sl, [r6, #76]	; 0x4c
   1a31c:	mov	r0, sl
   1a320:	bl	4824 <av_color_transfer_name@plt>
   1a324:	cmp	sl, #2
   1a328:	cmpne	r0, #0
   1a32c:	bne	1ac8c <main@@Base+0x16060>
   1a330:	ldr	r2, [pc, #1080]	; 1a770 <main@@Base+0x15b44>
   1a334:	ldr	r1, [pc, #1080]	; 1a774 <main@@Base+0x15b48>
   1a338:	add	r2, pc, r2
   1a33c:	add	r1, pc, r1
   1a340:	mov	r0, r4
   1a344:	bl	131bc <main@@Base+0xe590>
   1a348:	ldr	sl, [r6, #72]	; 0x48
   1a34c:	mov	r0, sl
   1a350:	bl	44c4 <av_color_primaries_name@plt>
   1a354:	cmp	sl, #2
   1a358:	cmpne	r0, #0
   1a35c:	bne	1ac74 <main@@Base+0x16048>
   1a360:	ldr	r2, [pc, #1040]	; 1a778 <main@@Base+0x15b4c>
   1a364:	ldr	r1, [pc, #1040]	; 1a77c <main@@Base+0x15b50>
   1a368:	add	r2, pc, r2
   1a36c:	add	r1, pc, r1
   1a370:	mov	r0, r4
   1a374:	bl	131bc <main@@Base+0xe590>
   1a378:	ldr	sl, [r6, #84]	; 0x54
   1a37c:	mov	r0, sl
   1a380:	bl	3eb8 <av_chroma_location_name@plt>
   1a384:	cmp	sl, #0
   1a388:	cmpne	r0, #0
   1a38c:	bne	1ac5c <main@@Base+0x16030>
   1a390:	ldr	r2, [pc, #1000]	; 1a780 <main@@Base+0x15b54>
   1a394:	ldr	r1, [pc, #1000]	; 1a784 <main@@Base+0x15b58>
   1a398:	add	r2, pc, r2
   1a39c:	add	r1, pc, r1
   1a3a0:	mov	r0, r4
   1a3a4:	bl	131bc <main@@Base+0xe590>
   1a3a8:	ldr	r3, [r6, #64]	; 0x40
   1a3ac:	cmp	r3, #1
   1a3b0:	beq	1ad28 <main@@Base+0x160fc>
   1a3b4:	cmp	r3, #2
   1a3b8:	beq	1ad60 <main@@Base+0x16134>
   1a3bc:	cmp	r3, #3
   1a3c0:	beq	1ad98 <main@@Base+0x1616c>
   1a3c4:	cmp	r3, #4
   1a3c8:	beq	1adb4 <main@@Base+0x16188>
   1a3cc:	cmp	r3, #5
   1a3d0:	beq	1ad7c <main@@Base+0x16150>
   1a3d4:	ldr	r2, [pc, #940]	; 1a788 <main@@Base+0x15b5c>
   1a3d8:	ldr	r1, [pc, #940]	; 1a78c <main@@Base+0x15b60>
   1a3dc:	add	r2, pc, r2
   1a3e0:	add	r1, pc, r1
   1a3e4:	mov	r0, r4
   1a3e8:	bl	131bc <main@@Base+0xe590>
   1a3ec:	cmp	r8, #0
   1a3f0:	beq	1ad44 <main@@Base+0x16118>
   1a3f4:	add	r3, r8, #512	; 0x200
   1a3f8:	ldrd	r2, [r3, #-8]
   1a3fc:	cmp	r2, #0
   1a400:	sbcs	r1, r3, #0
   1a404:	bge	1ace0 <main@@Base+0x160b4>
   1a408:	ldr	r2, [pc, #896]	; 1a790 <main@@Base+0x15b64>
   1a40c:	ldr	r1, [pc, #896]	; 1a794 <main@@Base+0x15b68>
   1a410:	add	r2, pc, r2
   1a414:	add	r1, pc, r1
   1a418:	mov	r0, r4
   1a41c:	bl	131bc <main@@Base+0xe590>
   1a420:	ldr	r2, [r8, #300]	; 0x12c
   1a424:	ldr	r1, [pc, #876]	; 1a798 <main@@Base+0x15b6c>
   1a428:	asr	r3, r2, #31
   1a42c:	add	r1, pc, r1
   1a430:	mov	r0, r4
   1a434:	bl	11004 <main@@Base+0xc3d8>
   1a438:	b	19890 <main@@Base+0x14c64>
   1a43c:	ldr	r2, [r6, #48]	; 0x30
   1a440:	cmp	r2, #0
   1a444:	bne	1aacc <main@@Base+0x15ea0>
   1a448:	ldr	r2, [pc, #844]	; 1a79c <main@@Base+0x15b70>
   1a44c:	ldr	r1, [pc, #844]	; 1a7a0 <main@@Base+0x15b74>
   1a450:	add	r2, pc, r2
   1a454:	add	r1, pc, r1
   1a458:	mov	r0, r4
   1a45c:	bl	131bc <main@@Base+0xe590>
   1a460:	ldr	r2, [r6, #52]	; 0x34
   1a464:	cmp	r2, #0
   1a468:	beq	1aaec <main@@Base+0x15ec0>
   1a46c:	ldr	r1, [pc, #816]	; 1a7a4 <main@@Base+0x15b78>
   1a470:	asr	r3, r2, #31
   1a474:	add	r1, pc, r1
   1a478:	mov	r0, r4
   1a47c:	bl	11004 <main@@Base+0xc3d8>
   1a480:	b	1a54c <main@@Base+0x15920>
   1a484:	ldr	r0, [r6, #20]
   1a488:	bl	438c <av_get_sample_fmt_name@plt>
   1a48c:	subs	r2, r0, #0
   1a490:	beq	1ab08 <main@@Base+0x15edc>
   1a494:	ldr	r1, [pc, #780]	; 1a7a8 <main@@Base+0x15b7c>
   1a498:	mov	r0, r4
   1a49c:	add	r1, pc, r1
   1a4a0:	bl	12fe4 <main@@Base+0xe3b8>
   1a4a4:	ldr	r3, [pc, #768]	; 1a7ac <main@@Base+0x15b80>
   1a4a8:	ldr	r2, [r6, #108]	; 0x6c
   1a4ac:	add	r3, pc, r3
   1a4b0:	add	r3, r3, #28
   1a4b4:	add	r0, sp, #2144	; 0x860
   1a4b8:	str	r3, [sp]
   1a4bc:	add	r0, r0, #4
   1a4c0:	asr	r3, r2, #31
   1a4c4:	bl	12248 <main@@Base+0xd61c>
   1a4c8:	ldr	r1, [pc, #736]	; 1a7b0 <main@@Base+0x15b84>
   1a4cc:	mov	r2, r0
   1a4d0:	add	r1, pc, r1
   1a4d4:	mov	r0, r4
   1a4d8:	bl	12fe4 <main@@Base+0xe3b8>
   1a4dc:	ldr	r2, [r6, #104]	; 0x68
   1a4e0:	ldr	r1, [pc, #716]	; 1a7b4 <main@@Base+0x15b88>
   1a4e4:	asr	r3, r2, #31
   1a4e8:	add	r1, pc, r1
   1a4ec:	mov	r0, r4
   1a4f0:	bl	11004 <main@@Base+0xc3d8>
   1a4f4:	ldrd	r2, [r6, #96]	; 0x60
   1a4f8:	orrs	r3, r2, r3
   1a4fc:	beq	1ac40 <main@@Base+0x16014>
   1a500:	mov	r0, r7
   1a504:	bl	45c0 <av_bprint_clear@plt>
   1a508:	ldrd	r2, [r6, #96]	; 0x60
   1a50c:	ldr	r1, [r6, #104]	; 0x68
   1a510:	mov	r0, r7
   1a514:	bl	40bc <av_bprint_channel_layout@plt>
   1a518:	ldr	r1, [pc, #664]	; 1a7b8 <main@@Base+0x15b8c>
   1a51c:	ldr	r2, [sp, #68]	; 0x44
   1a520:	add	r1, pc, r1
   1a524:	mov	r0, r4
   1a528:	bl	12fe4 <main@@Base+0xe3b8>
   1a52c:	ldr	r0, [r6, #4]
   1a530:	bl	3e7c <av_get_bits_per_sample@plt>
   1a534:	ldr	r1, [pc, #640]	; 1a7bc <main@@Base+0x15b90>
   1a538:	mov	r2, r0
   1a53c:	asr	r3, r0, #31
   1a540:	add	r1, pc, r1
   1a544:	mov	r0, r4
   1a548:	bl	11004 <main@@Base+0xc3d8>
   1a54c:	add	r9, sp, #1088	; 0x440
   1a550:	cmp	r8, #0
   1a554:	add	r9, r9, #4
   1a558:	bne	19890 <main@@Base+0x14c64>
   1a55c:	b	198bc <main@@Base+0x14c90>
   1a560:	ldr	r2, [pc, #600]	; 1a7c0 <main@@Base+0x15b94>
   1a564:	ldr	r1, [pc, #600]	; 1a7c4 <main@@Base+0x15b98>
   1a568:	add	r2, pc, r2
   1a56c:	add	r1, pc, r1
   1a570:	mov	r0, r4
   1a574:	bl	131bc <main@@Base+0xe590>
   1a578:	b	19bd8 <main@@Base+0x14fac>
   1a57c:	ldr	r2, [pc, #580]	; 1a7c8 <main@@Base+0x15b9c>
   1a580:	ldr	r1, [pc, #580]	; 1a7cc <main@@Base+0x15ba0>
   1a584:	add	r2, pc, r2
   1a588:	add	r1, pc, r1
   1a58c:	mov	r0, r4
   1a590:	bl	131bc <main@@Base+0xe590>
   1a594:	b	19b8c <main@@Base+0x14f60>
   1a598:	ldr	r2, [pc, #560]	; 1a7d0 <main@@Base+0x15ba4>
   1a59c:	ldr	r1, [pc, #560]	; 1a7d4 <main@@Base+0x15ba8>
   1a5a0:	add	r2, pc, r2
   1a5a4:	add	r1, pc, r1
   1a5a8:	mov	r0, r4
   1a5ac:	bl	131bc <main@@Base+0xe590>
   1a5b0:	b	19b38 <main@@Base+0x14f0c>
   1a5b4:	ldr	r2, [pc, #540]	; 1a7d8 <main@@Base+0x15bac>
   1a5b8:	ldr	r1, [pc, #540]	; 1a7dc <main@@Base+0x15bb0>
   1a5bc:	add	r2, pc, r2
   1a5c0:	add	r1, pc, r1
   1a5c4:	mov	r0, r4
   1a5c8:	bl	131bc <main@@Base+0xe590>
   1a5cc:	b	19900 <main@@Base+0x14cd4>
   1a5d0:	ldr	r2, [pc, #520]	; 1a7e0 <main@@Base+0x15bb4>
   1a5d4:	ldr	r1, [pc, #520]	; 1a7e4 <main@@Base+0x15bb8>
   1a5d8:	add	r2, pc, r2
   1a5dc:	add	r1, pc, r1
   1a5e0:	mov	r0, r4
   1a5e4:	bl	131bc <main@@Base+0xe590>
   1a5e8:	b	19a88 <main@@Base+0x14e5c>
   1a5ec:	ldr	r2, [pc, #500]	; 1a7e8 <main@@Base+0x15bbc>
   1a5f0:	ldr	r1, [pc, #500]	; 1a7ec <main@@Base+0x15bc0>
   1a5f4:	add	r2, pc, r2
   1a5f8:	add	r1, pc, r1
   1a5fc:	mov	r0, r4
   1a600:	bl	131bc <main@@Base+0xe590>
   1a604:	b	19ad0 <main@@Base+0x14ea4>
   1a608:	mov	r0, r7
   1a60c:	bl	45c0 <av_bprint_clear@plt>
   1a610:	ldr	r1, [pc, #472]	; 1a7f0 <main@@Base+0x15bc4>
   1a614:	ldr	r2, [r8, #676]	; 0x2a4
   1a618:	mov	r0, r7
   1a61c:	add	r1, pc, r1
   1a620:	bl	459c <av_bprintf@plt>
   1a624:	ldr	r1, [pc, #456]	; 1a7f4 <main@@Base+0x15bc8>
   1a628:	ldr	r2, [sp, #68]	; 0x44
   1a62c:	add	r1, pc, r1
   1a630:	mov	r0, r4
   1a634:	bl	12fe4 <main@@Base+0xe3b8>
   1a638:	b	19afc <main@@Base+0x14ed0>
   1a63c:	andeq	r8, r1, r8, lsr #11
   1a640:	andeq	r0, r0, r8, ror #7
   1a644:	ldrdeq	r0, [r0], -r8
   1a648:	andeq	r5, r0, ip, asr #18
   1a64c:	andeq	r5, r0, r4, lsl r9
   1a650:	andeq	r9, r1, r0, lsl #10
   1a654:	muleq	r0, r0, lr
   1a658:	ldrdeq	r5, [r0], -r0
   1a65c:	andeq	r5, r0, r8, lsl #16
   1a660:	muleq	r0, r8, r8
   1a664:	andeq	r5, r0, r4, ror r8
   1a668:	andeq	r5, r0, ip, ror #16
   1a66c:	andeq	r5, r0, r0, ror #16
   1a670:	andeq	r8, r1, r4, lsr #15
   1a674:	andeq	r5, r0, ip, ror r8
   1a678:	andeq	r5, r0, ip, lsr #27
   1a67c:	andeq	r5, r0, ip, lsl r2
   1a680:	andeq	r5, r0, ip, lsl r8
   1a684:	andeq	r5, r0, r0, ror #15
   1a688:	andeq	r5, r0, r4, lsr #15
   1a68c:	muleq	r0, r8, r7
   1a690:	muleq	r0, r0, r7
   1a694:	andeq	r5, r0, r0, lsl #15
   1a698:	andeq	r5, r0, r4, asr #11
   1a69c:	andeq	r4, r0, r0, lsl #12
   1a6a0:	andeq	r5, r0, ip, lsr r7
   1a6a4:			; <UNDEFINED> instruction: 0x000045b8
   1a6a8:	strdeq	r5, [r0], -r0
   1a6ac:	andeq	r5, r0, ip, asr r0
   1a6b0:	ldrdeq	r5, [r0], -r4
   1a6b4:	andeq	r4, r0, r0, ror #13
   1a6b8:	andeq	r5, r0, ip, lsr #13
   1a6bc:	andeq	r9, r1, ip, lsr #2
   1a6c0:	andeq	r5, r0, r8, ror r6
   1a6c4:	andeq	r5, r0, ip, ror #12
   1a6c8:	ldrdeq	r9, [r1], -ip
   1a6cc:	andeq	r5, r0, ip, lsr #12
   1a6d0:	andeq	r5, r0, r0, lsr r6
   1a6d4:	andeq	r9, r1, ip, lsl #1
   1a6d8:	andeq	r5, r0, ip, lsl r6
   1a6dc:	andeq	r9, r1, r4, rrx
   1a6e0:	andeq	r3, r0, r4, asr #31
   1a6e4:	andeq	r5, r0, r0, ror r5
   1a6e8:	andeq	r5, r0, r0, lsr #10
   1a6ec:	ldrdeq	r5, [r0], -r8
   1a6f0:	andeq	r5, r0, ip, lsl #9
   1a6f4:	andeq	r5, r0, r0, asr #8
   1a6f8:	strdeq	r5, [r0], -r4
   1a6fc:	andeq	r5, r0, r8, lsr #7
   1a700:	andeq	r5, r0, r0, lsl #7
   1a704:	andeq	r5, r0, r0, ror r3
   1a708:	andeq	r5, r0, r0, ror #6
   1a70c:	andeq	r5, r0, ip, asr #6
   1a710:	andeq	r8, r1, r8, lsl #26
   1a714:			; <UNDEFINED> instruction: 0x000003b8
   1a718:	andeq	r4, r0, ip, asr #31
   1a71c:	andeq	r8, r1, ip, lsr #23
   1a720:	andeq	r4, r0, r4, lsr #31
   1a724:			; <UNDEFINED> instruction: 0x00004ab4
   1a728:	ldrdeq	r4, [r0], -ip
   1a72c:	andeq	r4, r0, ip, asr pc
   1a730:	andeq	r4, r0, r4, asr pc
   1a734:	andeq	r4, r0, r8, asr #30
   1a738:	andeq	r4, r0, r0, lsl ip
   1a73c:	andeq	r4, r0, r0, lsl #24
   1a740:	andeq	r4, r0, r0, ror #29
   1a744:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   1a748:	andeq	r4, r0, ip, asr #29
   1a74c:	strdeq	r4, [r0], -r8
   1a750:	andeq	r4, r0, r4, lsl #23
   1a754:	andeq	r4, r0, ip, lsl #29
   1a758:	andeq	r4, r0, ip, lsr fp
   1a75c:	andeq	r5, r0, r0, lsl r7
   1a760:	andeq	r4, r0, r4, ror #17
   1a764:	andeq	r4, r0, r0, lsl #23
   1a768:			; <UNDEFINED> instruction: 0x000048b4
   1a76c:	andeq	r4, r0, ip, asr fp
   1a770:	andeq	r4, r0, r4, lsl #17
   1a774:	andeq	r4, r0, r8, asr #22
   1a778:	andeq	r4, r0, r4, asr r8
   1a77c:	andeq	r4, r0, r8, lsl #22
   1a780:	strdeq	r4, [r0], -ip
   1a784:	andeq	r4, r0, r4, lsl #22
   1a788:	andeq	r4, r0, r0, ror #15
   1a78c:	andeq	r4, r0, ip, lsr sp
   1a790:	andeq	r4, r0, r8, lsr r7
   1a794:	andeq	r4, r0, ip, lsl #22
   1a798:	andeq	r4, r0, ip, lsl #26
   1a79c:	strdeq	r4, [r0], -r8
   1a7a0:	andeq	r4, r0, r0, ror r9
   1a7a4:	andeq	r4, r0, r8, asr r9
   1a7a8:	andeq	r4, r0, r4, lsl sl
   1a7ac:			; <UNDEFINED> instruction: 0x00003bb4
   1a7b0:	andeq	r4, r0, r0, ror ip
   1a7b4:	andeq	r4, r0, r0, ror #19
   1a7b8:			; <UNDEFINED> instruction: 0x000049b4
   1a7bc:	andeq	r4, r0, ip, lsl #24
   1a7c0:	andeq	r4, r0, r0, ror #11
   1a7c4:	muleq	r0, r0, ip
   1a7c8:	andeq	r4, r0, r4, asr #11
   1a7cc:	andeq	r4, r0, r4, ror #24
   1a7d0:	andeq	r4, r0, r8, lsr #11
   1a7d4:	andeq	r4, r0, r4, lsr ip
   1a7d8:	andeq	r4, r0, ip, lsl #11
   1a7dc:	andeq	r5, r0, r0, ror #1
   1a7e0:	andeq	r4, r0, r0, ror r5
   1a7e4:	ldrdeq	r4, [r0], -ip
   1a7e8:	andeq	r4, r0, r4, asr r5
   1a7ec:			; <UNDEFINED> instruction: 0x00004bbc
   1a7f0:	andeq	r6, r0, r8
   1a7f4:	muleq	r0, r8, fp
   1a7f8:	andeq	r4, r0, r0, lsr #18
   1a7fc:	andeq	r4, r0, r4, ror #14
   1a800:	muleq	r0, r8, r2
   1a804:	andeq	r4, r0, r8, asr #14
   1a808:	andeq	r8, r1, r0, lsr r3
   1a80c:	andeq	r4, r0, r8, lsr #14
   1a810:	andeq	r4, r0, r0, asr r2
   1a814:	andeq	r4, r0, ip, lsl r7
   1a818:	andeq	r4, r0, ip, lsr r1
   1a81c:	muleq	r0, r8, r3
   1a820:	andeq	r4, r0, ip, lsr r6
   1a824:	strdeq	r4, [r0], -r0
   1a828:	andeq	r4, r0, r4, asr r0
   1a82c:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   1a830:	andeq	r4, r0, ip, lsr #1
   1a834:	muleq	r0, ip, r3
   1a838:	andeq	r4, r0, r8, lsr #14
   1a83c:	andeq	r4, r0, r0, lsl #14
   1a840:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   1a844:	andeq	r4, r0, r8, lsr #13
   1a848:	andeq	r4, r0, ip, ror r6
   1a84c:	andeq	r4, r0, ip, asr #12
   1a850:	andeq	r4, r0, r4, lsr #12
   1a854:	andeq	r3, r0, ip
   1a858:	andeq	r3, r0, r4, ror pc
   1a85c:	andeq	r4, r0, r8, lsl #5
   1a860:	andeq	r4, r0, ip, lsr r2
   1a864:	strdeq	r4, [r0], -r8
   1a868:	strdeq	r4, [r0], -r0
   1a86c:			; <UNDEFINED> instruction: 0x000041bc
   1a870:	muleq	r0, r8, r1
   1a874:	andeq	r3, r0, r4, ror #29
   1a878:	andeq	r4, r0, r4, lsr #4
   1a87c:	andeq	r3, r0, r8, lsr #29
   1a880:	strheq	r4, [r0], -ip
   1a884:	andeq	r4, r0, r0, ror #7
   1a888:	andeq	r4, r0, r8, ror #7
   1a88c:	strdeq	r3, [r0], -ip
   1a890:	ldrdeq	r4, [r0], -r0
   1a894:	andeq	r4, r0, r0, asr #7
   1a898:			; <UNDEFINED> instruction: 0x000043b0
   1a89c:			; <UNDEFINED> instruction: 0x000043b0
   1a8a0:	muleq	r0, r4, r3
   1a8a4:	andeq	r4, r0, ip, lsl #7
   1a8a8:	andeq	r4, r0, r8, ror r3
   1a8ac:	andeq	r4, r0, r4, ror r3
   1a8b0:	andeq	r4, r0, ip, asr r3
   1a8b4:	mov	r0, #40	; 0x28
   1a8b8:	mov	r2, #39	; 0x27
   1a8bc:	ldr	r1, [r5, #176]	; 0xb0
   1a8c0:	str	r0, [sp, #8]
   1a8c4:	str	r2, [sp, #4]
   1a8c8:	str	r3, [sp]
   1a8cc:	add	r2, r1, #52	; 0x34
   1a8d0:	ldr	r3, [r5, #152]	; 0x98
   1a8d4:	add	r1, r1, #48	; 0x30
   1a8d8:	mov	r0, r4
   1a8dc:	bl	155cc <main@@Base+0x109a0>
   1a8e0:	b	19fac <main@@Base+0x15380>
   1a8e4:	ldr	r1, [pc, #-244]	; 1a7f8 <main@@Base+0x15bcc>
   1a8e8:	mov	r0, r4
   1a8ec:	add	r1, pc, r1
   1a8f0:	bl	14ab8 <main@@Base+0xfe8c>
   1a8f4:	ldrd	r2, [r6, #12]
   1a8f8:	b	19bf4 <main@@Base+0x14fc8>
   1a8fc:	ldr	r1, [pc, #-264]	; 1a7fc <main@@Base+0x15bd0>
   1a900:	ldr	r0, [r2, #64]	; 0x40
   1a904:	add	r1, pc, r1
   1a908:	mov	r2, r3
   1a90c:	bl	4644 <av_dict_get@plt>
   1a910:	cmp	r0, #0
   1a914:	bne	19708 <main@@Base+0x14adc>
   1a918:	b	1973c <main@@Base+0x14b10>
   1a91c:	ldr	r9, [pc, #-292]	; 1a800 <main@@Base+0x15bd4>
   1a920:	ldr	r1, [pc, #-292]	; 1a804 <main@@Base+0x15bd8>
   1a924:	add	r9, pc, r9
   1a928:	add	r1, pc, r1
   1a92c:	mov	r2, r9
   1a930:	mov	r0, r4
   1a934:	bl	131bc <main@@Base+0xe590>
   1a938:	ldr	r3, [pc, #-312]	; 1a808 <main@@Base+0x15bdc>
   1a93c:	add	r3, pc, r3
   1a940:	ldr	r3, [r3, #92]	; 0x5c
   1a944:	cmp	r3, #0
   1a948:	bne	1977c <main@@Base+0x14b50>
   1a94c:	ldr	r1, [pc, #-328]	; 1a80c <main@@Base+0x15be0>
   1a950:	mov	r2, r9
   1a954:	add	r1, pc, r1
   1a958:	mov	r0, r4
   1a95c:	bl	131bc <main@@Base+0xe590>
   1a960:	b	1a0b8 <main@@Base+0x1548c>
   1a964:	ldr	r2, [pc, #-348]	; 1a810 <main@@Base+0x15be4>
   1a968:	ldr	r1, [pc, #-348]	; 1a814 <main@@Base+0x15be8>
   1a96c:	add	r2, pc, r2
   1a970:	add	r1, pc, r1
   1a974:	mov	r0, r4
   1a978:	bl	131bc <main@@Base+0xe590>
   1a97c:	b	197c8 <main@@Base+0x14b9c>
   1a980:	mov	sl, #0
   1a984:	ldr	r0, [r8, #24]
   1a988:	add	fp, sp, #48	; 0x30
   1a98c:	mov	r1, sl
   1a990:	bl	44ac <av_opt_next@plt>
   1a994:	subs	sl, r0, #0
   1a998:	beq	198bc <main@@Base+0x14c90>
   1a99c:	ldr	r2, [sl, #40]	; 0x28
   1a9a0:	ldr	r0, [r8, #24]
   1a9a4:	cmp	r2, #0
   1a9a8:	bne	1a98c <main@@Base+0x15d60>
   1a9ac:	mov	r3, fp
   1a9b0:	ldr	r1, [sl]
   1a9b4:	bl	4530 <av_opt_get@plt>
   1a9b8:	cmp	r0, #0
   1a9bc:	blt	1a9d8 <main@@Base+0x15dac>
   1a9c0:	ldr	r2, [sp, #48]	; 0x30
   1a9c4:	ldr	r1, [sl]
   1a9c8:	mov	r0, r4
   1a9cc:	bl	12fe4 <main@@Base+0xe3b8>
   1a9d0:	ldr	r0, [sp, #48]	; 0x30
   1a9d4:	bl	46ec <av_free@plt>
   1a9d8:	mov	r1, sl
   1a9dc:	ldr	r0, [r8, #24]
   1a9e0:	bl	44ac <av_opt_next@plt>
   1a9e4:	subs	sl, r0, #0
   1a9e8:	bne	1a99c <main@@Base+0x15d70>
   1a9ec:	b	198bc <main@@Base+0x14c90>
   1a9f0:	ldr	r3, [sp, #56]	; 0x38
   1a9f4:	add	r9, sp, #1088	; 0x440
   1a9f8:	str	r3, [sp, #40]	; 0x28
   1a9fc:	ldr	r3, [pc, #-492]	; 1a818 <main@@Base+0x15bec>
   1aa00:	add	r9, r9, #4
   1aa04:	add	r3, pc, r3
   1aa08:	mov	r0, r9
   1aa0c:	mov	r2, #1
   1aa10:	mov	r1, #0
   1aa14:	str	r3, [sp, #44]	; 0x2c
   1aa18:	bl	3f48 <av_bprint_init@plt>
   1aa1c:	ldr	r3, [sp, #40]	; 0x28
   1aa20:	mov	r0, r9
   1aa24:	str	r3, [sp]
   1aa28:	ldr	r3, [sp, #44]	; 0x2c
   1aa2c:	mov	r2, sl
   1aa30:	mov	r1, r3
   1aa34:	mov	r3, #58	; 0x3a
   1aa38:	bl	459c <av_bprintf@plt>
   1aa3c:	ldr	r1, [pc, #-552]	; 1a81c <main@@Base+0x15bf0>
   1aa40:	ldr	r2, [sp, #1092]	; 0x444
   1aa44:	add	r1, pc, r1
   1aa48:	mov	r0, r4
   1aa4c:	bl	12fe4 <main@@Base+0xe3b8>
   1aa50:	mov	r0, #1048576	; 0x100000
   1aa54:	mov	r1, #0
   1aa58:	ldr	r2, [r6, #48]	; 0x30
   1aa5c:	strd	r0, [sp, #8]
   1aa60:	ldr	r3, [sp, #40]	; 0x28
   1aa64:	ldr	r0, [r6, #52]	; 0x34
   1aa68:	mul	r2, r2, sl
   1aa6c:	mul	r0, r0, r3
   1aa70:	asr	r1, r0, #31
   1aa74:	asr	r3, r2, #31
   1aa78:	strd	r0, [sp]
   1aa7c:	sub	r1, fp, #8
   1aa80:	sub	r0, fp, #12
   1aa84:	bl	3dec <av_reduce@plt>
   1aa88:	ldrd	sl, [sp, #60]	; 0x3c
   1aa8c:	mov	r0, r9
   1aa90:	mov	r2, #1
   1aa94:	mov	r1, #0
   1aa98:	bl	3f48 <av_bprint_init@plt>
   1aa9c:	mov	r2, sl
   1aaa0:	ldr	r1, [sp, #44]	; 0x2c
   1aaa4:	mov	r0, r9
   1aaa8:	str	fp, [sp]
   1aaac:	mov	r3, #58	; 0x3a
   1aab0:	bl	459c <av_bprintf@plt>
   1aab4:	ldr	r1, [pc, #-668]	; 1a820 <main@@Base+0x15bf4>
   1aab8:	ldr	r2, [sp, #1092]	; 0x444
   1aabc:	add	r1, pc, r1
   1aac0:	mov	r0, r4
   1aac4:	bl	12fe4 <main@@Base+0xe3b8>
   1aac8:	b	1a280 <main@@Base+0x15654>
   1aacc:	ldr	r1, [pc, #-688]	; 1a824 <main@@Base+0x15bf8>
   1aad0:	asr	r3, r2, #31
   1aad4:	add	r1, pc, r1
   1aad8:	mov	r0, r4
   1aadc:	bl	11004 <main@@Base+0xc3d8>
   1aae0:	ldr	r2, [r6, #52]	; 0x34
   1aae4:	cmp	r2, #0
   1aae8:	bne	1a46c <main@@Base+0x15840>
   1aaec:	ldr	r2, [pc, #-716]	; 1a828 <main@@Base+0x15bfc>
   1aaf0:	ldr	r1, [pc, #-716]	; 1a82c <main@@Base+0x15c00>
   1aaf4:	add	r2, pc, r2
   1aaf8:	add	r1, pc, r1
   1aafc:	mov	r0, r4
   1ab00:	bl	131bc <main@@Base+0xe590>
   1ab04:	b	1a54c <main@@Base+0x15920>
   1ab08:	ldr	r2, [pc, #-736]	; 1a830 <main@@Base+0x15c04>
   1ab0c:	ldr	r1, [pc, #-736]	; 1a834 <main@@Base+0x15c08>
   1ab10:	add	r2, pc, r2
   1ab14:	add	r1, pc, r1
   1ab18:	mov	r0, r4
   1ab1c:	bl	131bc <main@@Base+0xe590>
   1ab20:	b	1a4a4 <main@@Base+0x15878>
   1ab24:	ldr	r0, [r1, #64]	; 0x40
   1ab28:	ldr	r1, [pc, #-760]	; 1a838 <main@@Base+0x15c0c>
   1ab2c:	mov	r2, r3
   1ab30:	add	r1, pc, r1
   1ab34:	bl	4644 <av_dict_get@plt>
   1ab38:	cmp	r0, #0
   1ab3c:	bne	19ea4 <main@@Base+0x15278>
   1ab40:	b	19ed8 <main@@Base+0x152ac>
   1ab44:	ldr	r0, [r1, #64]	; 0x40
   1ab48:	ldr	r1, [pc, #-788]	; 1a83c <main@@Base+0x15c10>
   1ab4c:	mov	r2, r3
   1ab50:	add	r1, pc, r1
   1ab54:	bl	4644 <av_dict_get@plt>
   1ab58:	cmp	r0, #0
   1ab5c:	ldreq	r3, [r4, #24]
   1ab60:	bne	19e50 <main@@Base+0x15224>
   1ab64:	b	19e84 <main@@Base+0x15258>
   1ab68:	ldr	r0, [r1, #64]	; 0x40
   1ab6c:	ldr	r1, [pc, #-820]	; 1a840 <main@@Base+0x15c14>
   1ab70:	mov	r2, r3
   1ab74:	add	r1, pc, r1
   1ab78:	bl	4644 <av_dict_get@plt>
   1ab7c:	cmp	r0, #0
   1ab80:	ldreq	r3, [r4, #24]
   1ab84:	bne	19dfc <main@@Base+0x151d0>
   1ab88:	b	19e30 <main@@Base+0x15204>
   1ab8c:	ldr	r0, [r1, #64]	; 0x40
   1ab90:	ldr	r1, [pc, #-852]	; 1a844 <main@@Base+0x15c18>
   1ab94:	mov	r2, r3
   1ab98:	add	r1, pc, r1
   1ab9c:	bl	4644 <av_dict_get@plt>
   1aba0:	cmp	r0, #0
   1aba4:	ldreq	r3, [r4, #24]
   1aba8:	bne	19da8 <main@@Base+0x1517c>
   1abac:	b	19ddc <main@@Base+0x151b0>
   1abb0:	ldr	r0, [r1, #64]	; 0x40
   1abb4:	ldr	r1, [pc, #-884]	; 1a848 <main@@Base+0x15c1c>
   1abb8:	mov	r2, r3
   1abbc:	add	r1, pc, r1
   1abc0:	bl	4644 <av_dict_get@plt>
   1abc4:	cmp	r0, #0
   1abc8:	ldreq	r3, [r4, #24]
   1abcc:	bne	19d54 <main@@Base+0x15128>
   1abd0:	b	19d88 <main@@Base+0x1515c>
   1abd4:	ldr	r0, [r1, #64]	; 0x40
   1abd8:	ldr	r1, [pc, #-916]	; 1a84c <main@@Base+0x15c20>
   1abdc:	mov	r2, r3
   1abe0:	add	r1, pc, r1
   1abe4:	bl	4644 <av_dict_get@plt>
   1abe8:	cmp	r0, #0
   1abec:	ldreq	r3, [r4, #24]
   1abf0:	bne	19d00 <main@@Base+0x150d4>
   1abf4:	b	19d34 <main@@Base+0x15108>
   1abf8:	ldr	r0, [r1, #64]	; 0x40
   1abfc:	ldr	r1, [pc, #-948]	; 1a850 <main@@Base+0x15c24>
   1ac00:	mov	r2, r3
   1ac04:	add	r1, pc, r1
   1ac08:	bl	4644 <av_dict_get@plt>
   1ac0c:	cmp	r0, #0
   1ac10:	ldreq	r3, [r4, #24]
   1ac14:	bne	19cac <main@@Base+0x15080>
   1ac18:	b	19ce0 <main@@Base+0x150b4>
   1ac1c:	ldr	r1, [pc, #-976]	; 1a854 <main@@Base+0x15c28>
   1ac20:	ldr	r0, [r2, #64]	; 0x40
   1ac24:	add	r1, pc, r1
   1ac28:	mov	r2, r3
   1ac2c:	bl	4644 <av_dict_get@plt>
   1ac30:	cmp	r0, #0
   1ac34:	ldreq	r3, [r4, #24]
   1ac38:	bne	19c58 <main@@Base+0x1502c>
   1ac3c:	b	19c8c <main@@Base+0x15060>
   1ac40:	ldr	r2, [pc, #-1008]	; 1a858 <main@@Base+0x15c2c>
   1ac44:	ldr	r1, [pc, #-1008]	; 1a85c <main@@Base+0x15c30>
   1ac48:	add	r2, pc, r2
   1ac4c:	add	r1, pc, r1
   1ac50:	mov	r0, r4
   1ac54:	bl	131bc <main@@Base+0xe590>
   1ac58:	b	1a52c <main@@Base+0x15900>
   1ac5c:	ldr	r1, [pc, #-1028]	; 1a860 <main@@Base+0x15c34>
   1ac60:	mov	r2, r0
   1ac64:	add	r1, pc, r1
   1ac68:	mov	r0, r4
   1ac6c:	bl	12fe4 <main@@Base+0xe3b8>
   1ac70:	b	1a3a8 <main@@Base+0x1577c>
   1ac74:	ldr	r1, [pc, #-1048]	; 1a864 <main@@Base+0x15c38>
   1ac78:	mov	r2, r0
   1ac7c:	add	r1, pc, r1
   1ac80:	mov	r0, r4
   1ac84:	bl	12fe4 <main@@Base+0xe3b8>
   1ac88:	b	1a378 <main@@Base+0x1574c>
   1ac8c:	ldr	r1, [pc, #-1068]	; 1a868 <main@@Base+0x15c3c>
   1ac90:	mov	r2, r0
   1ac94:	add	r1, pc, r1
   1ac98:	mov	r0, r4
   1ac9c:	bl	12fe4 <main@@Base+0xe3b8>
   1aca0:	b	1a348 <main@@Base+0x1571c>
   1aca4:	ldr	r1, [pc, #-1088]	; 1a86c <main@@Base+0x15c40>
   1aca8:	mov	r2, r0
   1acac:	add	r1, pc, r1
   1acb0:	mov	r0, r4
   1acb4:	bl	12fe4 <main@@Base+0xe3b8>
   1acb8:	b	1a318 <main@@Base+0x156ec>
   1acbc:	ldr	r1, [pc, #-1108]	; 1a870 <main@@Base+0x15c44>
   1acc0:	mov	r2, r0
   1acc4:	add	r1, pc, r1
   1acc8:	mov	r0, r4
   1accc:	bl	12fe4 <main@@Base+0xe3b8>
   1acd0:	b	1a2e8 <main@@Base+0x156bc>
   1acd4:	ldr	r2, [pc, #-1128]	; 1a874 <main@@Base+0x15c48>
   1acd8:	add	r2, pc, r2
   1acdc:	b	1a0a8 <main@@Base+0x1547c>
   1ace0:	add	sl, sp, #2144	; 0x860
   1ace4:	add	sl, sl, #4
   1ace8:	mov	r1, r2
   1acec:	mov	r0, sl
   1acf0:	bl	3f0c <av_timecode_make_mpeg_tc_string@plt>
   1acf4:	ldr	r1, [pc, #-1156]	; 1a878 <main@@Base+0x15c4c>
   1acf8:	mov	r2, sl
   1acfc:	add	r1, pc, r1
   1ad00:	mov	r0, r4
   1ad04:	bl	12fe4 <main@@Base+0xe3b8>
   1ad08:	b	1a420 <main@@Base+0x157f4>
   1ad0c:	ldr	r2, [pc, #-1176]	; 1a87c <main@@Base+0x15c50>
   1ad10:	ldr	r1, [pc, #-1176]	; 1a880 <main@@Base+0x15c54>
   1ad14:	add	r2, pc, r2
   1ad18:	add	r1, pc, r1
   1ad1c:	mov	r0, r4
   1ad20:	bl	131bc <main@@Base+0xe590>
   1ad24:	b	1a2a0 <main@@Base+0x15674>
   1ad28:	ldr	r2, [pc, #-1196]	; 1a884 <main@@Base+0x15c58>
   1ad2c:	ldr	r1, [pc, #-1196]	; 1a888 <main@@Base+0x15c5c>
   1ad30:	add	r2, pc, r2
   1ad34:	add	r1, pc, r1
   1ad38:	mov	r0, r4
   1ad3c:	bl	12fe4 <main@@Base+0xe3b8>
   1ad40:	b	1a3ec <main@@Base+0x157c0>
   1ad44:	ldr	r2, [pc, #-1216]	; 1a88c <main@@Base+0x15c60>
   1ad48:	ldr	r1, [pc, #-1216]	; 1a890 <main@@Base+0x15c64>
   1ad4c:	add	r2, pc, r2
   1ad50:	add	r1, pc, r1
   1ad54:	mov	r0, r4
   1ad58:	bl	131bc <main@@Base+0xe590>
   1ad5c:	b	198bc <main@@Base+0x14c90>
   1ad60:	ldr	r2, [pc, #-1236]	; 1a894 <main@@Base+0x15c68>
   1ad64:	ldr	r1, [pc, #-1236]	; 1a898 <main@@Base+0x15c6c>
   1ad68:	add	r2, pc, r2
   1ad6c:	add	r1, pc, r1
   1ad70:	mov	r0, r4
   1ad74:	bl	12fe4 <main@@Base+0xe3b8>
   1ad78:	b	1a3ec <main@@Base+0x157c0>
   1ad7c:	ldr	r2, [pc, #-1256]	; 1a89c <main@@Base+0x15c70>
   1ad80:	ldr	r1, [pc, #-1256]	; 1a8a0 <main@@Base+0x15c74>
   1ad84:	add	r2, pc, r2
   1ad88:	add	r1, pc, r1
   1ad8c:	mov	r0, r4
   1ad90:	bl	12fe4 <main@@Base+0xe3b8>
   1ad94:	b	1a3ec <main@@Base+0x157c0>
   1ad98:	ldr	r2, [pc, #-1276]	; 1a8a4 <main@@Base+0x15c78>
   1ad9c:	ldr	r1, [pc, #-1276]	; 1a8a8 <main@@Base+0x15c7c>
   1ada0:	add	r2, pc, r2
   1ada4:	add	r1, pc, r1
   1ada8:	mov	r0, r4
   1adac:	bl	12fe4 <main@@Base+0xe3b8>
   1adb0:	b	1a3ec <main@@Base+0x157c0>
   1adb4:	ldr	r2, [pc, #-1296]	; 1a8ac <main@@Base+0x15c80>
   1adb8:	ldr	r1, [pc, #-1296]	; 1a8b0 <main@@Base+0x15c84>
   1adbc:	add	r2, pc, r2
   1adc0:	add	r1, pc, r1
   1adc4:	mov	r0, r4
   1adc8:	bl	12fe4 <main@@Base+0xe3b8>
   1adcc:	b	1a3ec <main@@Base+0x157c0>
   1add0:	bl	11920 <main@@Base+0xccf4>
   1add4:	bl	3f00 <__stack_chk_fail@plt>
   1add8:	push	{r4, r5, r6, lr}
   1addc:	ldr	r4, [pc, #204]	; 1aeb0 <main@@Base+0x16284>
   1ade0:	ldr	r2, [pc, #204]	; 1aeb4 <main@@Base+0x16288>
   1ade4:	add	r4, pc, r4
   1ade8:	ldr	r6, [r4, r2]
   1adec:	sub	sp, sp, #16
   1adf0:	ldr	r2, [r6]
   1adf4:	ldr	r3, [pc, #188]	; 1aeb8 <main@@Base+0x1628c>
   1adf8:	str	r2, [sp, #12]
   1adfc:	ldr	r0, [r4, r3]
   1ae00:	bl	3f60 <av_log_set_callback@plt>
   1ae04:	ldr	r2, [pc, #176]	; 1aebc <main@@Base+0x16290>
   1ae08:	mov	r1, #32
   1ae0c:	add	r2, pc, r2
   1ae10:	mov	r0, #0
   1ae14:	bl	40f8 <av_log@plt>
   1ae18:	ldr	r5, [pc, #160]	; 1aec0 <main@@Base+0x16294>
   1ae1c:	ldr	r3, [pc, #160]	; 1aec4 <main@@Base+0x16298>
   1ae20:	ldr	r2, [pc, #160]	; 1aec8 <main@@Base+0x1629c>
   1ae24:	ldr	r3, [r4, r3]
   1ae28:	add	r5, pc, r5
   1ae2c:	add	r2, pc, r2
   1ae30:	mov	r1, #32
   1ae34:	mov	r0, #0
   1ae38:	bl	40f8 <av_log@plt>
   1ae3c:	mov	r2, r5
   1ae40:	mov	r1, #32
   1ae44:	mov	r0, #0
   1ae48:	bl	40f8 <av_log@plt>
   1ae4c:	mov	r3, #0
   1ae50:	ldr	r2, [pc, #116]	; 1aecc <main@@Base+0x162a0>
   1ae54:	ldr	r1, [pc, #116]	; 1aed0 <main@@Base+0x162a4>
   1ae58:	str	r3, [sp]
   1ae5c:	add	r2, pc, r2
   1ae60:	ldr	r0, [r2, #104]	; 0x68
   1ae64:	add	r1, pc, r1
   1ae68:	mov	r2, r3
   1ae6c:	bl	9b9c <main@@Base+0x4f70>
   1ae70:	mov	r1, r5
   1ae74:	mov	r0, #1
   1ae78:	bl	474c <__printf_chk@plt>
   1ae7c:	bl	4458 <avformat_get_class@plt>
   1ae80:	mov	r1, #2
   1ae84:	bl	9db0 <main@@Base+0x5184>
   1ae88:	bl	4044 <avcodec_get_class@plt>
   1ae8c:	ldr	r2, [sp, #12]
   1ae90:	ldr	r3, [r6]
   1ae94:	cmp	r2, r3
   1ae98:	bne	1aeac <main@@Base+0x16280>
   1ae9c:	mov	r1, #2
   1aea0:	add	sp, sp, #16
   1aea4:	pop	{r4, r5, r6, lr}
   1aea8:	b	9db0 <main@@Base+0x5184>
   1aeac:	bl	3f00 <__stack_chk_fail@plt>
   1aeb0:	andeq	r6, r1, r8, lsl lr
   1aeb4:	andeq	r0, r0, r8, ror #7
   1aeb8:	andeq	r0, r0, r4, asr #7
   1aebc:	andeq	r4, r0, r4, lsr #9
   1aec0:	andeq	r1, r0, r8, ror #26
   1aec4:	andeq	r0, r0, r8, asr #7
   1aec8:	andeq	r4, r0, r8, lsr #9
   1aecc:	andeq	r7, r1, r0, lsl lr
   1aed0:	muleq	r0, r4, r4
   1aed4:	cmp	r0, #2
   1aed8:	bne	1af10 <main@@Base+0x162e4>
   1aedc:	push	{r3, r4, r5, lr}
   1aee0:	ldr	r3, [r1, #8]
   1aee4:	mov	r5, r2
   1aee8:	cmp	r3, #0
   1aeec:	mov	r4, r1
   1aef0:	beq	1aefc <main@@Base+0x162d0>
   1aef4:	ldr	r0, [r1, #12]
   1aef8:	blx	r3
   1aefc:	mov	r0, r5
   1af00:	mov	r1, r4
   1af04:	bl	4614 <vchiq_release_message@plt>
   1af08:	mov	r0, #0
   1af0c:	pop	{r3, r4, r5, pc}
   1af10:	mov	r0, #0
   1af14:	bx	lr
   1af18:	ldr	r0, [pc, #32]	; 1af40 <main@@Base+0x16314>
   1af1c:	push	{r3, lr}
   1af20:	add	r0, pc, r0
   1af24:	mov	r1, #0
   1af28:	add	r0, r0, #4
   1af2c:	bl	4878 <pthread_mutex_init@plt>
   1af30:	cmp	r0, #0
   1af34:	popeq	{r3, pc}
   1af38:	pop	{r3, lr}
   1af3c:	b	4050 <vcos_pthreads_map_errno@plt>
   1af40:	andeq	r7, r1, ip, lsl #30

0001af44 <vc_gpuserv_init@@Base>:
   1af44:	push	{r4, r5, r6, lr}
   1af48:	ldr	r4, [pc, #428]	; 1b0fc <vc_gpuserv_init@@Base+0x1b8>
   1af4c:	ldr	r1, [pc, #428]	; 1b100 <vc_gpuserv_init@@Base+0x1bc>
   1af50:	add	r4, pc, r4
   1af54:	sub	sp, sp, #24
   1af58:	add	r1, pc, r1
   1af5c:	add	r0, r4, #76	; 0x4c
   1af60:	add	r5, r4, #4
   1af64:	bl	47e8 <vcos_once@plt>
   1af68:	mov	r0, r5
   1af6c:	bl	3fd8 <pthread_mutex_lock@plt>
   1af70:	ldr	r3, [r4, #72]	; 0x48
   1af74:	cmp	r3, #0
   1af78:	add	r3, r3, #1
   1af7c:	str	r3, [r4, #72]	; 0x48
   1af80:	ble	1af98 <vc_gpuserv_init@@Base+0x54>
   1af84:	mov	r0, r5
   1af88:	bl	4860 <pthread_mutex_unlock@plt>
   1af8c:	mov	r0, #0
   1af90:	add	sp, sp, #24
   1af94:	pop	{r4, r5, r6, pc}
   1af98:	mov	r5, r4
   1af9c:	mov	r6, #5
   1afa0:	ldr	r0, [pc, #348]	; 1b104 <vc_gpuserv_init@@Base+0x1c0>
   1afa4:	str	r6, [r5, #80]!	; 0x50
   1afa8:	mov	r1, r5
   1afac:	add	r0, pc, r0
   1afb0:	bl	4470 <vcos_log_register@plt>
   1afb4:	ldr	r3, [r4, #80]	; 0x50
   1afb8:	cmp	r3, #4
   1afbc:	bhi	1b038 <vc_gpuserv_init@@Base+0xf4>
   1afc0:	ldr	r5, [pc, #320]	; 1b108 <vc_gpuserv_init@@Base+0x1c4>
   1afc4:	add	r5, pc, r5
   1afc8:	add	r0, r5, #104	; 0x68
   1afcc:	bl	3f54 <vchiq_initialise@plt>
   1afd0:	cmp	r0, #0
   1afd4:	bne	1b058 <vc_gpuserv_init@@Base+0x114>
   1afd8:	ldr	r0, [r5, #104]	; 0x68
   1afdc:	bl	4788 <vchiq_connect@plt>
   1afe0:	subs	lr, r0, #0
   1afe4:	bne	1b09c <vc_gpuserv_init@@Base+0x158>
   1afe8:	mov	ip, #1
   1afec:	ldr	r3, [pc, #280]	; 1b10c <vc_gpuserv_init@@Base+0x1c8>
   1aff0:	ldr	r4, [pc, #280]	; 1b110 <vc_gpuserv_init@@Base+0x1cc>
   1aff4:	add	r3, pc, r3
   1aff8:	ldr	r0, [r5, #104]	; 0x68
   1affc:	add	r1, sp, #8
   1b000:	mov	r2, r5
   1b004:	str	r4, [sp, #8]
   1b008:	str	lr, [sp, #16]
   1b00c:	strh	ip, [sp, #20]
   1b010:	strh	ip, [sp, #22]
   1b014:	str	r3, [sp, #12]
   1b018:	bl	3fe4 <vchiq_open_service@plt>
   1b01c:	subs	r4, r0, #0
   1b020:	bne	1b0cc <vc_gpuserv_init@@Base+0x188>
   1b024:	add	r0, r5, #4
   1b028:	bl	4860 <pthread_mutex_unlock@plt>
   1b02c:	mov	r0, r4
   1b030:	add	sp, sp, #24
   1b034:	pop	{r4, r5, r6, pc}
   1b038:	ldr	r2, [pc, #212]	; 1b114 <vc_gpuserv_init@@Base+0x1d0>
   1b03c:	ldr	r3, [pc, #212]	; 1b118 <vc_gpuserv_init@@Base+0x1d4>
   1b040:	mov	r0, r5
   1b044:	mov	r1, r6
   1b048:	add	r2, pc, r2
   1b04c:	add	r3, pc, r3
   1b050:	bl	4830 <vcos_log_impl@plt>
   1b054:	b	1afc0 <vc_gpuserv_init@@Base+0x7c>
   1b058:	ldr	r3, [r5, #80]	; 0x50
   1b05c:	cmp	r3, #1
   1b060:	bls	1b084 <vc_gpuserv_init@@Base+0x140>
   1b064:	ldr	r2, [pc, #176]	; 1b11c <vc_gpuserv_init@@Base+0x1d8>
   1b068:	ldr	r3, [pc, #176]	; 1b120 <vc_gpuserv_init@@Base+0x1dc>
   1b06c:	str	r0, [sp]
   1b070:	mov	r1, #2
   1b074:	add	r0, r5, #80	; 0x50
   1b078:	add	r2, pc, r2
   1b07c:	add	r3, pc, r3
   1b080:	bl	4830 <vcos_log_impl@plt>
   1b084:	ldr	r0, [pc, #152]	; 1b124 <vc_gpuserv_init@@Base+0x1e0>
   1b088:	add	r0, pc, r0
   1b08c:	add	r0, r0, #4
   1b090:	bl	4860 <pthread_mutex_unlock@plt>
   1b094:	mvn	r0, #0
   1b098:	b	1af90 <vc_gpuserv_init@@Base+0x4c>
   1b09c:	ldr	r3, [r5, #80]	; 0x50
   1b0a0:	cmp	r3, #1
   1b0a4:	bls	1b084 <vc_gpuserv_init@@Base+0x140>
   1b0a8:	ldr	r2, [pc, #120]	; 1b128 <vc_gpuserv_init@@Base+0x1e4>
   1b0ac:	ldr	r3, [pc, #120]	; 1b12c <vc_gpuserv_init@@Base+0x1e8>
   1b0b0:	str	lr, [sp]
   1b0b4:	add	r0, r5, #80	; 0x50
   1b0b8:	mov	r1, #2
   1b0bc:	add	r2, pc, r2
   1b0c0:	add	r3, pc, r3
   1b0c4:	bl	4830 <vcos_log_impl@plt>
   1b0c8:	b	1b084 <vc_gpuserv_init@@Base+0x140>
   1b0cc:	ldr	r3, [r5, #80]	; 0x50
   1b0d0:	cmp	r3, #1
   1b0d4:	bls	1b084 <vc_gpuserv_init@@Base+0x140>
   1b0d8:	ldr	r2, [pc, #80]	; 1b130 <vc_gpuserv_init@@Base+0x1ec>
   1b0dc:	ldr	r3, [pc, #80]	; 1b134 <vc_gpuserv_init@@Base+0x1f0>
   1b0e0:	str	r4, [sp]
   1b0e4:	add	r0, r5, #80	; 0x50
   1b0e8:	mov	r1, #2
   1b0ec:	add	r2, pc, r2
   1b0f0:	add	r3, pc, r3
   1b0f4:	bl	4830 <vcos_log_impl@plt>
   1b0f8:	b	1b084 <vc_gpuserv_init@@Base+0x140>
   1b0fc:	ldrdeq	r7, [r1], -ip
   1b100:			; <UNDEFINED> instruction: 0xffffffb8
   1b104:	andeq	r5, r0, r4, lsr r6
   1b108:	andeq	r7, r1, r8, ror #28
   1b10c:			; <UNDEFINED> instruction: 0xfffffed8
   1b110:			; <UNDEFINED> instruction: 0x47505553
   1b114:	andeq	r5, r0, r0, lsr #11
   1b118:	andeq	r5, r0, ip, ror #10
   1b11c:	andeq	r5, r0, ip, lsl #11
   1b120:	andeq	r5, r0, ip, lsr r5
   1b124:	andeq	r7, r1, r4, lsr #27
   1b128:	andeq	r5, r0, ip, ror #10
   1b12c:	strdeq	r5, [r0], -r8
   1b130:	andeq	r5, r0, r0, ror #10
   1b134:	andeq	r5, r0, r8, asr #9

0001b138 <vc_gpuserv_deinit@@Base>:
   1b138:	push	{r3, r4, r5, lr}
   1b13c:	ldr	r5, [pc, #72]	; 1b18c <vc_gpuserv_deinit@@Base+0x54>
   1b140:	add	r5, pc, r5
   1b144:	add	r0, r5, #4
   1b148:	bl	3fd8 <pthread_mutex_lock@plt>
   1b14c:	ldr	r3, [r5, #72]	; 0x48
   1b150:	cmp	r3, #0
   1b154:	ble	1b168 <vc_gpuserv_deinit@@Base+0x30>
   1b158:	sub	r4, r3, #1
   1b15c:	cmp	r4, #0
   1b160:	str	r4, [r5, #72]	; 0x48
   1b164:	beq	1b17c <vc_gpuserv_deinit@@Base+0x44>
   1b168:	pop	{r3, r4, r5, lr}
   1b16c:	ldr	r0, [pc, #28]	; 1b190 <vc_gpuserv_deinit@@Base+0x58>
   1b170:	add	r0, pc, r0
   1b174:	add	r0, r0, #4
   1b178:	b	4860 <pthread_mutex_unlock@plt>
   1b17c:	ldr	r0, [r5]
   1b180:	bl	3df8 <vchi_service_close@plt>
   1b184:	str	r4, [r5]
   1b188:	b	1b168 <vc_gpuserv_deinit@@Base+0x30>
   1b18c:	andeq	r7, r1, ip, ror #25
   1b190:			; <UNDEFINED> instruction: 0x00017cbc

0001b194 <vc_gpuserv_execute_code@@Base>:
   1b194:	push	{r4, r5, r6, r7, r8, lr}
   1b198:	ldr	r6, [pc, #348]	; 1b2fc <vc_gpuserv_execute_code@@Base+0x168>
   1b19c:	mov	r4, r0
   1b1a0:	add	r6, pc, r6
   1b1a4:	ldr	r0, [r6]
   1b1a8:	sub	sp, sp, #64	; 0x40
   1b1ac:	cmp	r0, #0
   1b1b0:	mov	r5, r1
   1b1b4:	beq	1b278 <vc_gpuserv_execute_code@@Base+0xe4>
   1b1b8:	cmp	r4, #8
   1b1bc:	bgt	1b2e0 <vc_gpuserv_execute_code@@Base+0x14c>
   1b1c0:	cmp	r4, #0
   1b1c4:	ble	1b25c <vc_gpuserv_execute_code@@Base+0xc8>
   1b1c8:	mov	r3, #132	; 0x84
   1b1cc:	cmp	r4, #1
   1b1d0:	str	r5, [sp]
   1b1d4:	str	r3, [sp, #4]
   1b1d8:	beq	1b25c <vc_gpuserv_execute_code@@Base+0xc8>
   1b1dc:	add	r2, r5, r3
   1b1e0:	cmp	r4, #2
   1b1e4:	str	r3, [sp, #12]
   1b1e8:	str	r2, [sp, #8]
   1b1ec:	beq	1b25c <vc_gpuserv_execute_code@@Base+0xc8>
   1b1f0:	add	r2, r5, #264	; 0x108
   1b1f4:	cmp	r4, #3
   1b1f8:	str	r3, [sp, #20]
   1b1fc:	str	r2, [sp, #16]
   1b200:	beq	1b25c <vc_gpuserv_execute_code@@Base+0xc8>
   1b204:	add	r2, r5, #396	; 0x18c
   1b208:	cmp	r4, #4
   1b20c:	str	r3, [sp, #28]
   1b210:	str	r2, [sp, #24]
   1b214:	beq	1b25c <vc_gpuserv_execute_code@@Base+0xc8>
   1b218:	add	r2, r5, #528	; 0x210
   1b21c:	cmp	r4, #5
   1b220:	str	r3, [sp, #36]	; 0x24
   1b224:	str	r2, [sp, #32]
   1b228:	beq	1b25c <vc_gpuserv_execute_code@@Base+0xc8>
   1b22c:	add	r2, r5, #660	; 0x294
   1b230:	cmp	r4, #6
   1b234:	str	r3, [sp, #44]	; 0x2c
   1b238:	str	r2, [sp, #40]	; 0x28
   1b23c:	beq	1b25c <vc_gpuserv_execute_code@@Base+0xc8>
   1b240:	add	r2, r5, #792	; 0x318
   1b244:	cmp	r4, #8
   1b248:	str	r3, [sp, #52]	; 0x34
   1b24c:	str	r2, [sp, #48]	; 0x30
   1b250:	addeq	r5, r5, #924	; 0x39c
   1b254:	streq	r5, [sp, #56]	; 0x38
   1b258:	streq	r3, [sp, #60]	; 0x3c
   1b25c:	mov	r2, r4
   1b260:	mov	r1, sp
   1b264:	bl	3ea0 <vchiq_queue_message@plt>
   1b268:	adds	r0, r0, #0
   1b26c:	mvnne	r0, #0
   1b270:	add	sp, sp, #64	; 0x40
   1b274:	pop	{r4, r5, r6, r7, r8, pc}
   1b278:	bl	1af44 <vc_gpuserv_init@@Base>
   1b27c:	ldr	r3, [r6, #80]	; 0x50
   1b280:	cmp	r3, #1
   1b284:	bls	1b2ec <vc_gpuserv_execute_code@@Base+0x158>
   1b288:	ldr	r7, [pc, #112]	; 1b300 <vc_gpuserv_execute_code@@Base+0x16c>
   1b28c:	ldr	r2, [pc, #112]	; 1b304 <vc_gpuserv_execute_code@@Base+0x170>
   1b290:	add	r7, pc, r7
   1b294:	add	r8, r6, #80	; 0x50
   1b298:	add	r7, r7, #16
   1b29c:	mov	r0, r8
   1b2a0:	mov	r3, r7
   1b2a4:	mov	r1, #2
   1b2a8:	add	r2, pc, r2
   1b2ac:	bl	4830 <vcos_log_impl@plt>
   1b2b0:	ldr	r0, [r6]
   1b2b4:	cmp	r0, #0
   1b2b8:	bne	1b1b8 <vc_gpuserv_execute_code@@Base+0x24>
   1b2bc:	ldr	r3, [r6, #80]	; 0x50
   1b2c0:	cmp	r3, #1
   1b2c4:	bls	1b2e0 <vc_gpuserv_execute_code@@Base+0x14c>
   1b2c8:	ldr	r2, [pc, #56]	; 1b308 <vc_gpuserv_execute_code@@Base+0x174>
   1b2cc:	mov	r0, r8
   1b2d0:	mov	r3, r7
   1b2d4:	mov	r1, #2
   1b2d8:	add	r2, pc, r2
   1b2dc:	bl	4830 <vcos_log_impl@plt>
   1b2e0:	mvn	r0, #0
   1b2e4:	add	sp, sp, #64	; 0x40
   1b2e8:	pop	{r4, r5, r6, r7, r8, pc}
   1b2ec:	ldr	r0, [r6]
   1b2f0:	cmp	r0, #0
   1b2f4:	beq	1b2e0 <vc_gpuserv_execute_code@@Base+0x14c>
   1b2f8:	b	1b1b8 <vc_gpuserv_execute_code@@Base+0x24>
   1b2fc:	andeq	r7, r1, ip, lsl #25
   1b300:	andeq	r5, r0, r8, lsr #6
   1b304:	andeq	r5, r0, ip, asr #7
   1b308:	andeq	r5, r0, r8, asr #7
   1b30c:	cmp	r1, #0
   1b310:	beq	1b51c <vc_gpuserv_execute_code@@Base+0x388>
   1b314:	eor	ip, r0, r1
   1b318:	rsbmi	r1, r1, #0
   1b31c:	subs	r2, r1, #1
   1b320:	beq	1b4e8 <vc_gpuserv_execute_code@@Base+0x354>
   1b324:	movs	r3, r0
   1b328:	rsbmi	r3, r0, #0
   1b32c:	cmp	r3, r1
   1b330:	bls	1b4f4 <vc_gpuserv_execute_code@@Base+0x360>
   1b334:	tst	r1, r2
   1b338:	beq	1b504 <vc_gpuserv_execute_code@@Base+0x370>
   1b33c:	clz	r2, r3
   1b340:	clz	r0, r1
   1b344:	sub	r2, r0, r2
   1b348:	rsbs	r2, r2, #31
   1b34c:	addne	r2, r2, r2, lsl #1
   1b350:	mov	r0, #0
   1b354:	addne	pc, pc, r2, lsl #2
   1b358:	nop			; (mov r0, r0)
   1b35c:	cmp	r3, r1, lsl #31
   1b360:	adc	r0, r0, r0
   1b364:	subcs	r3, r3, r1, lsl #31
   1b368:	cmp	r3, r1, lsl #30
   1b36c:	adc	r0, r0, r0
   1b370:	subcs	r3, r3, r1, lsl #30
   1b374:	cmp	r3, r1, lsl #29
   1b378:	adc	r0, r0, r0
   1b37c:	subcs	r3, r3, r1, lsl #29
   1b380:	cmp	r3, r1, lsl #28
   1b384:	adc	r0, r0, r0
   1b388:	subcs	r3, r3, r1, lsl #28
   1b38c:	cmp	r3, r1, lsl #27
   1b390:	adc	r0, r0, r0
   1b394:	subcs	r3, r3, r1, lsl #27
   1b398:	cmp	r3, r1, lsl #26
   1b39c:	adc	r0, r0, r0
   1b3a0:	subcs	r3, r3, r1, lsl #26
   1b3a4:	cmp	r3, r1, lsl #25
   1b3a8:	adc	r0, r0, r0
   1b3ac:	subcs	r3, r3, r1, lsl #25
   1b3b0:	cmp	r3, r1, lsl #24
   1b3b4:	adc	r0, r0, r0
   1b3b8:	subcs	r3, r3, r1, lsl #24
   1b3bc:	cmp	r3, r1, lsl #23
   1b3c0:	adc	r0, r0, r0
   1b3c4:	subcs	r3, r3, r1, lsl #23
   1b3c8:	cmp	r3, r1, lsl #22
   1b3cc:	adc	r0, r0, r0
   1b3d0:	subcs	r3, r3, r1, lsl #22
   1b3d4:	cmp	r3, r1, lsl #21
   1b3d8:	adc	r0, r0, r0
   1b3dc:	subcs	r3, r3, r1, lsl #21
   1b3e0:	cmp	r3, r1, lsl #20
   1b3e4:	adc	r0, r0, r0
   1b3e8:	subcs	r3, r3, r1, lsl #20
   1b3ec:	cmp	r3, r1, lsl #19
   1b3f0:	adc	r0, r0, r0
   1b3f4:	subcs	r3, r3, r1, lsl #19
   1b3f8:	cmp	r3, r1, lsl #18
   1b3fc:	adc	r0, r0, r0
   1b400:	subcs	r3, r3, r1, lsl #18
   1b404:	cmp	r3, r1, lsl #17
   1b408:	adc	r0, r0, r0
   1b40c:	subcs	r3, r3, r1, lsl #17
   1b410:	cmp	r3, r1, lsl #16
   1b414:	adc	r0, r0, r0
   1b418:	subcs	r3, r3, r1, lsl #16
   1b41c:	cmp	r3, r1, lsl #15
   1b420:	adc	r0, r0, r0
   1b424:	subcs	r3, r3, r1, lsl #15
   1b428:	cmp	r3, r1, lsl #14
   1b42c:	adc	r0, r0, r0
   1b430:	subcs	r3, r3, r1, lsl #14
   1b434:	cmp	r3, r1, lsl #13
   1b438:	adc	r0, r0, r0
   1b43c:	subcs	r3, r3, r1, lsl #13
   1b440:	cmp	r3, r1, lsl #12
   1b444:	adc	r0, r0, r0
   1b448:	subcs	r3, r3, r1, lsl #12
   1b44c:	cmp	r3, r1, lsl #11
   1b450:	adc	r0, r0, r0
   1b454:	subcs	r3, r3, r1, lsl #11
   1b458:	cmp	r3, r1, lsl #10
   1b45c:	adc	r0, r0, r0
   1b460:	subcs	r3, r3, r1, lsl #10
   1b464:	cmp	r3, r1, lsl #9
   1b468:	adc	r0, r0, r0
   1b46c:	subcs	r3, r3, r1, lsl #9
   1b470:	cmp	r3, r1, lsl #8
   1b474:	adc	r0, r0, r0
   1b478:	subcs	r3, r3, r1, lsl #8
   1b47c:	cmp	r3, r1, lsl #7
   1b480:	adc	r0, r0, r0
   1b484:	subcs	r3, r3, r1, lsl #7
   1b488:	cmp	r3, r1, lsl #6
   1b48c:	adc	r0, r0, r0
   1b490:	subcs	r3, r3, r1, lsl #6
   1b494:	cmp	r3, r1, lsl #5
   1b498:	adc	r0, r0, r0
   1b49c:	subcs	r3, r3, r1, lsl #5
   1b4a0:	cmp	r3, r1, lsl #4
   1b4a4:	adc	r0, r0, r0
   1b4a8:	subcs	r3, r3, r1, lsl #4
   1b4ac:	cmp	r3, r1, lsl #3
   1b4b0:	adc	r0, r0, r0
   1b4b4:	subcs	r3, r3, r1, lsl #3
   1b4b8:	cmp	r3, r1, lsl #2
   1b4bc:	adc	r0, r0, r0
   1b4c0:	subcs	r3, r3, r1, lsl #2
   1b4c4:	cmp	r3, r1, lsl #1
   1b4c8:	adc	r0, r0, r0
   1b4cc:	subcs	r3, r3, r1, lsl #1
   1b4d0:	cmp	r3, r1
   1b4d4:	adc	r0, r0, r0
   1b4d8:	subcs	r3, r3, r1
   1b4dc:	cmp	ip, #0
   1b4e0:	rsbmi	r0, r0, #0
   1b4e4:	bx	lr
   1b4e8:	teq	ip, r0
   1b4ec:	rsbmi	r0, r0, #0
   1b4f0:	bx	lr
   1b4f4:	movcc	r0, #0
   1b4f8:	asreq	r0, ip, #31
   1b4fc:	orreq	r0, r0, #1
   1b500:	bx	lr
   1b504:	clz	r2, r1
   1b508:	rsb	r2, r2, #31
   1b50c:	cmp	ip, #0
   1b510:	lsr	r0, r3, r2
   1b514:	rsbmi	r0, r0, #0
   1b518:	bx	lr
   1b51c:	cmp	r0, #0
   1b520:	mvngt	r0, #-2147483648	; 0x80000000
   1b524:	movlt	r0, #-2147483648	; 0x80000000
   1b528:	b	1b9e0 <vc_gpuserv_execute_code@@Base+0x84c>
   1b52c:	cmp	r1, #0
   1b530:	beq	1b51c <vc_gpuserv_execute_code@@Base+0x388>
   1b534:	push	{r0, r1, lr}
   1b538:	bl	1b314 <vc_gpuserv_execute_code@@Base+0x180>
   1b53c:	pop	{r1, r2, lr}
   1b540:	mul	r3, r2, r0
   1b544:	sub	r1, r1, r3
   1b548:	bx	lr
   1b54c:	eor	r1, r1, #-2147483648	; 0x80000000
   1b550:	b	1b558 <vc_gpuserv_execute_code@@Base+0x3c4>
   1b554:	eor	r3, r3, #-2147483648	; 0x80000000
   1b558:	push	{r4, r5, lr}
   1b55c:	lsl	r4, r1, #1
   1b560:	lsl	r5, r3, #1
   1b564:	teq	r4, r5
   1b568:	teqeq	r0, r2
   1b56c:	orrsne	ip, r4, r0
   1b570:	orrsne	ip, r5, r2
   1b574:	mvnsne	ip, r4, asr #21
   1b578:	mvnsne	ip, r5, asr #21
   1b57c:	beq	1b768 <vc_gpuserv_execute_code@@Base+0x5d4>
   1b580:	lsr	r4, r4, #21
   1b584:	rsbs	r5, r4, r5, lsr #21
   1b588:	rsblt	r5, r5, #0
   1b58c:	ble	1b5ac <vc_gpuserv_execute_code@@Base+0x418>
   1b590:	add	r4, r4, r5
   1b594:	eor	r2, r0, r2
   1b598:	eor	r3, r1, r3
   1b59c:	eor	r0, r2, r0
   1b5a0:	eor	r1, r3, r1
   1b5a4:	eor	r2, r0, r2
   1b5a8:	eor	r3, r1, r3
   1b5ac:	cmp	r5, #54	; 0x36
   1b5b0:	pophi	{r4, r5, pc}
   1b5b4:	tst	r1, #-2147483648	; 0x80000000
   1b5b8:	lsl	r1, r1, #12
   1b5bc:	mov	ip, #1048576	; 0x100000
   1b5c0:	orr	r1, ip, r1, lsr #12
   1b5c4:	beq	1b5d0 <vc_gpuserv_execute_code@@Base+0x43c>
   1b5c8:	rsbs	r0, r0, #0
   1b5cc:	rsc	r1, r1, #0
   1b5d0:	tst	r3, #-2147483648	; 0x80000000
   1b5d4:	lsl	r3, r3, #12
   1b5d8:	orr	r3, ip, r3, lsr #12
   1b5dc:	beq	1b5e8 <vc_gpuserv_execute_code@@Base+0x454>
   1b5e0:	rsbs	r2, r2, #0
   1b5e4:	rsc	r3, r3, #0
   1b5e8:	teq	r4, r5
   1b5ec:	beq	1b750 <vc_gpuserv_execute_code@@Base+0x5bc>
   1b5f0:	sub	r4, r4, #1
   1b5f4:	rsbs	lr, r5, #32
   1b5f8:	blt	1b614 <vc_gpuserv_execute_code@@Base+0x480>
   1b5fc:	lsl	ip, r2, lr
   1b600:	adds	r0, r0, r2, lsr r5
   1b604:	adc	r1, r1, #0
   1b608:	adds	r0, r0, r3, lsl lr
   1b60c:	adcs	r1, r1, r3, asr r5
   1b610:	b	1b630 <vc_gpuserv_execute_code@@Base+0x49c>
   1b614:	sub	r5, r5, #32
   1b618:	add	lr, lr, #32
   1b61c:	cmp	r2, #1
   1b620:	lsl	ip, r3, lr
   1b624:	orrcs	ip, ip, #2
   1b628:	adds	r0, r0, r3, asr r5
   1b62c:	adcs	r1, r1, r3, asr #31
   1b630:	and	r5, r1, #-2147483648	; 0x80000000
   1b634:	bpl	1b644 <vc_gpuserv_execute_code@@Base+0x4b0>
   1b638:	rsbs	ip, ip, #0
   1b63c:	rscs	r0, r0, #0
   1b640:	rsc	r1, r1, #0
   1b644:	cmp	r1, #1048576	; 0x100000
   1b648:	bcc	1b688 <vc_gpuserv_execute_code@@Base+0x4f4>
   1b64c:	cmp	r1, #2097152	; 0x200000
   1b650:	bcc	1b670 <vc_gpuserv_execute_code@@Base+0x4dc>
   1b654:	lsrs	r1, r1, #1
   1b658:	rrxs	r0, r0
   1b65c:	rrx	ip, ip
   1b660:	add	r4, r4, #1
   1b664:	lsl	r2, r4, #21
   1b668:	cmn	r2, #4194304	; 0x400000
   1b66c:	bcs	1b7c8 <vc_gpuserv_execute_code@@Base+0x634>
   1b670:	cmp	ip, #-2147483648	; 0x80000000
   1b674:	lsrseq	ip, r0, #1
   1b678:	adcs	r0, r0, #0
   1b67c:	adc	r1, r1, r4, lsl #20
   1b680:	orr	r1, r1, r5
   1b684:	pop	{r4, r5, pc}
   1b688:	lsls	ip, ip, #1
   1b68c:	adcs	r0, r0, r0
   1b690:	adc	r1, r1, r1
   1b694:	tst	r1, #1048576	; 0x100000
   1b698:	sub	r4, r4, #1
   1b69c:	bne	1b670 <vc_gpuserv_execute_code@@Base+0x4dc>
   1b6a0:	teq	r1, #0
   1b6a4:	moveq	r1, r0
   1b6a8:	moveq	r0, #0
   1b6ac:	clz	r3, r1
   1b6b0:	addeq	r3, r3, #32
   1b6b4:	sub	r3, r3, #11
   1b6b8:	subs	r2, r3, #32
   1b6bc:	bge	1b6e0 <vc_gpuserv_execute_code@@Base+0x54c>
   1b6c0:	adds	r2, r2, #12
   1b6c4:	ble	1b6dc <vc_gpuserv_execute_code@@Base+0x548>
   1b6c8:	add	ip, r2, #20
   1b6cc:	rsb	r2, r2, #12
   1b6d0:	lsl	r0, r1, ip
   1b6d4:	lsr	r1, r1, r2
   1b6d8:	b	1b6f0 <vc_gpuserv_execute_code@@Base+0x55c>
   1b6dc:	add	r2, r2, #20
   1b6e0:	rsble	ip, r2, #32
   1b6e4:	lsl	r1, r1, r2
   1b6e8:	orrle	r1, r1, r0, lsr ip
   1b6ec:	lslle	r0, r0, r2
   1b6f0:	subs	r4, r4, r3
   1b6f4:	addge	r1, r1, r4, lsl #20
   1b6f8:	orrge	r1, r1, r5
   1b6fc:	popge	{r4, r5, pc}
   1b700:	mvn	r4, r4
   1b704:	subs	r4, r4, #31
   1b708:	bge	1b744 <vc_gpuserv_execute_code@@Base+0x5b0>
   1b70c:	adds	r4, r4, #12
   1b710:	bgt	1b72c <vc_gpuserv_execute_code@@Base+0x598>
   1b714:	add	r4, r4, #20
   1b718:	rsb	r2, r4, #32
   1b71c:	lsr	r0, r0, r4
   1b720:	orr	r0, r0, r1, lsl r2
   1b724:	orr	r1, r5, r1, lsr r4
   1b728:	pop	{r4, r5, pc}
   1b72c:	rsb	r4, r4, #12
   1b730:	rsb	r2, r4, #32
   1b734:	lsr	r0, r0, r2
   1b738:	orr	r0, r0, r1, lsl r4
   1b73c:	mov	r1, r5
   1b740:	pop	{r4, r5, pc}
   1b744:	lsr	r0, r1, r4
   1b748:	mov	r1, r5
   1b74c:	pop	{r4, r5, pc}
   1b750:	teq	r4, #0
   1b754:	eor	r3, r3, #1048576	; 0x100000
   1b758:	eoreq	r1, r1, #1048576	; 0x100000
   1b75c:	addeq	r4, r4, #1
   1b760:	subne	r5, r5, #1
   1b764:	b	1b5f0 <vc_gpuserv_execute_code@@Base+0x45c>
   1b768:	mvns	ip, r4, asr #21
   1b76c:	mvnsne	ip, r5, asr #21
   1b770:	beq	1b7d8 <vc_gpuserv_execute_code@@Base+0x644>
   1b774:	teq	r4, r5
   1b778:	teqeq	r0, r2
   1b77c:	beq	1b790 <vc_gpuserv_execute_code@@Base+0x5fc>
   1b780:	orrs	ip, r4, r0
   1b784:	moveq	r1, r3
   1b788:	moveq	r0, r2
   1b78c:	pop	{r4, r5, pc}
   1b790:	teq	r1, r3
   1b794:	movne	r1, #0
   1b798:	movne	r0, #0
   1b79c:	popne	{r4, r5, pc}
   1b7a0:	lsrs	ip, r4, #21
   1b7a4:	bne	1b7b8 <vc_gpuserv_execute_code@@Base+0x624>
   1b7a8:	lsls	r0, r0, #1
   1b7ac:	adcs	r1, r1, r1
   1b7b0:	orrcs	r1, r1, #-2147483648	; 0x80000000
   1b7b4:	pop	{r4, r5, pc}
   1b7b8:	adds	r4, r4, #4194304	; 0x400000
   1b7bc:	addcc	r1, r1, #1048576	; 0x100000
   1b7c0:	popcc	{r4, r5, pc}
   1b7c4:	and	r5, r1, #-2147483648	; 0x80000000
   1b7c8:	orr	r1, r5, #2130706432	; 0x7f000000
   1b7cc:	orr	r1, r1, #15728640	; 0xf00000
   1b7d0:	mov	r0, #0
   1b7d4:	pop	{r4, r5, pc}
   1b7d8:	mvns	ip, r4, asr #21
   1b7dc:	movne	r1, r3
   1b7e0:	movne	r0, r2
   1b7e4:	mvnseq	ip, r5, asr #21
   1b7e8:	movne	r3, r1
   1b7ec:	movne	r2, r0
   1b7f0:	orrs	r4, r0, r1, lsl #12
   1b7f4:	orrseq	r5, r2, r3, lsl #12
   1b7f8:	teqeq	r1, r3
   1b7fc:	orrne	r1, r1, #524288	; 0x80000
   1b800:	pop	{r4, r5, pc}
   1b804:	teq	r0, #0
   1b808:	moveq	r1, #0
   1b80c:	bxeq	lr
   1b810:	push	{r4, r5, lr}
   1b814:	mov	r4, #1024	; 0x400
   1b818:	add	r4, r4, #50	; 0x32
   1b81c:	mov	r5, #0
   1b820:	mov	r1, #0
   1b824:	b	1b6a0 <vc_gpuserv_execute_code@@Base+0x50c>
   1b828:	teq	r0, #0
   1b82c:	moveq	r1, #0
   1b830:	bxeq	lr
   1b834:	push	{r4, r5, lr}
   1b838:	mov	r4, #1024	; 0x400
   1b83c:	add	r4, r4, #50	; 0x32
   1b840:	ands	r5, r0, #-2147483648	; 0x80000000
   1b844:	rsbmi	r0, r0, #0
   1b848:	mov	r1, #0
   1b84c:	b	1b6a0 <vc_gpuserv_execute_code@@Base+0x50c>
   1b850:	lsls	r2, r0, #1
   1b854:	asr	r1, r2, #3
   1b858:	rrx	r1, r1
   1b85c:	lsl	r0, r2, #28
   1b860:	andsne	r3, r2, #-16777216	; 0xff000000
   1b864:	teqne	r3, #-16777216	; 0xff000000
   1b868:	eorne	r1, r1, #939524096	; 0x38000000
   1b86c:	bxne	lr
   1b870:	bics	r2, r2, #-16777216	; 0xff000000
   1b874:	bxeq	lr
   1b878:	teq	r3, #-16777216	; 0xff000000
   1b87c:	orreq	r1, r1, #524288	; 0x80000
   1b880:	bxeq	lr
   1b884:	push	{r4, r5, lr}
   1b888:	mov	r4, #896	; 0x380
   1b88c:	and	r5, r1, #-2147483648	; 0x80000000
   1b890:	bic	r1, r1, #-2147483648	; 0x80000000
   1b894:	b	1b6a0 <vc_gpuserv_execute_code@@Base+0x50c>
   1b898:	orrs	r2, r0, r1
   1b89c:	bxeq	lr
   1b8a0:	push	{r4, r5, lr}
   1b8a4:	mov	r5, #0
   1b8a8:	b	1b8c8 <vc_gpuserv_execute_code@@Base+0x734>
   1b8ac:	orrs	r2, r0, r1
   1b8b0:	bxeq	lr
   1b8b4:	push	{r4, r5, lr}
   1b8b8:	ands	r5, r1, #-2147483648	; 0x80000000
   1b8bc:	bpl	1b8c8 <vc_gpuserv_execute_code@@Base+0x734>
   1b8c0:	rsbs	r0, r0, #0
   1b8c4:	rsc	r1, r1, #0
   1b8c8:	mov	r4, #1024	; 0x400
   1b8cc:	add	r4, r4, #50	; 0x32
   1b8d0:	lsrs	ip, r1, #22
   1b8d4:	beq	1b644 <vc_gpuserv_execute_code@@Base+0x4b0>
   1b8d8:	mov	r2, #3
   1b8dc:	lsrs	ip, ip, #3
   1b8e0:	addne	r2, r2, #3
   1b8e4:	lsrs	ip, ip, #3
   1b8e8:	addne	r2, r2, #3
   1b8ec:	add	r2, r2, ip, lsr #3
   1b8f0:	rsb	r3, r2, #32
   1b8f4:	lsl	ip, r0, r3
   1b8f8:	lsr	r0, r0, r2
   1b8fc:	orr	r0, r0, r1, lsl r3
   1b900:	lsr	r1, r1, r2
   1b904:	add	r4, r4, r2
   1b908:	b	1b644 <vc_gpuserv_execute_code@@Base+0x4b0>
   1b90c:	cmp	r3, #0
   1b910:	cmpeq	r2, #0
   1b914:	bne	1b938 <vc_gpuserv_execute_code@@Base+0x7a4>
   1b918:	cmp	r1, #0
   1b91c:	movlt	r1, #-2147483648	; 0x80000000
   1b920:	movlt	r0, #0
   1b924:	blt	1b934 <vc_gpuserv_execute_code@@Base+0x7a0>
   1b928:	cmpeq	r0, #0
   1b92c:	mvnne	r1, #-2147483648	; 0x80000000
   1b930:	mvnne	r0, #0
   1b934:	b	1b9e0 <vc_gpuserv_execute_code@@Base+0x84c>
   1b938:	sub	sp, sp, #8
   1b93c:	push	{sp, lr}
   1b940:	cmp	r1, #0
   1b944:	blt	1b964 <vc_gpuserv_execute_code@@Base+0x7d0>
   1b948:	cmp	r3, #0
   1b94c:	blt	1b998 <vc_gpuserv_execute_code@@Base+0x804>
   1b950:	bl	1ba60 <vc_gpuserv_execute_code@@Base+0x8cc>
   1b954:	ldr	lr, [sp, #4]
   1b958:	add	sp, sp, #8
   1b95c:	pop	{r2, r3}
   1b960:	bx	lr
   1b964:	rsbs	r0, r0, #0
   1b968:	sbc	r1, r1, r1, lsl #1
   1b96c:	cmp	r3, #0
   1b970:	blt	1b9bc <vc_gpuserv_execute_code@@Base+0x828>
   1b974:	bl	1ba60 <vc_gpuserv_execute_code@@Base+0x8cc>
   1b978:	ldr	lr, [sp, #4]
   1b97c:	add	sp, sp, #8
   1b980:	pop	{r2, r3}
   1b984:	rsbs	r0, r0, #0
   1b988:	sbc	r1, r1, r1, lsl #1
   1b98c:	rsbs	r2, r2, #0
   1b990:	sbc	r3, r3, r3, lsl #1
   1b994:	bx	lr
   1b998:	rsbs	r2, r2, #0
   1b99c:	sbc	r3, r3, r3, lsl #1
   1b9a0:	bl	1ba60 <vc_gpuserv_execute_code@@Base+0x8cc>
   1b9a4:	ldr	lr, [sp, #4]
   1b9a8:	add	sp, sp, #8
   1b9ac:	pop	{r2, r3}
   1b9b0:	rsbs	r0, r0, #0
   1b9b4:	sbc	r1, r1, r1, lsl #1
   1b9b8:	bx	lr
   1b9bc:	rsbs	r2, r2, #0
   1b9c0:	sbc	r3, r3, r3, lsl #1
   1b9c4:	bl	1ba60 <vc_gpuserv_execute_code@@Base+0x8cc>
   1b9c8:	ldr	lr, [sp, #4]
   1b9cc:	add	sp, sp, #8
   1b9d0:	pop	{r2, r3}
   1b9d4:	rsbs	r2, r2, #0
   1b9d8:	sbc	r3, r3, r3, lsl #1
   1b9dc:	bx	lr
   1b9e0:	push	{r1, lr}
   1b9e4:	mov	r0, #8
   1b9e8:	bl	4074 <raise@plt>
   1b9ec:	pop	{r1, pc}
   1b9f0:	vmov	d7, r0, r1
   1b9f4:	vcmpe.f64	d7, #0.0
   1b9f8:	vmrs	APSR_nzcv, fpscr
   1b9fc:	bmi	1ba04 <vc_gpuserv_execute_code@@Base+0x870>
   1ba00:	b	1ba20 <vc_gpuserv_execute_code@@Base+0x88c>
   1ba04:	push	{r4, lr}
   1ba08:	eor	r1, r1, #-2147483648	; 0x80000000
   1ba0c:	bl	1ba20 <vc_gpuserv_execute_code@@Base+0x88c>
   1ba10:	rsbs	r0, r0, #0
   1ba14:	rsc	r1, r1, #0
   1ba18:	pop	{r4, pc}
   1ba1c:	andeq	r0, r0, r0
   1ba20:	vmov	d6, r0, r1
   1ba24:	vldr	d7, [pc, #36]	; 1ba50 <vc_gpuserv_execute_code@@Base+0x8bc>
   1ba28:	vldr	d5, [pc, #40]	; 1ba58 <vc_gpuserv_execute_code@@Base+0x8c4>
   1ba2c:	vmul.f64	d7, d6, d7
   1ba30:	vcvt.u32.f64	s14, d7
   1ba34:	vcvt.f64.u32	d4, s14
   1ba38:	vmov	r1, s14
   1ba3c:	vmls.f64	d6, d4, d5
   1ba40:	vcvt.u32.f64	s15, d6
   1ba44:	vmov	r0, s15
   1ba48:	bx	lr
   1ba4c:	nop			; (mov r0, r0)
   1ba50:	andeq	r0, r0, r0
   1ba54:	ldclcc	0, cr0, [r0]
   1ba58:	andeq	r0, r0, r0
   1ba5c:	mvnsmi	r0, r0
   1ba60:	cmp	r1, r3
   1ba64:	cmpeq	r0, r2
   1ba68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ba6c:	mov	r4, r0
   1ba70:	movcc	r0, #0
   1ba74:	mov	r5, r1
   1ba78:	ldr	lr, [sp, #36]	; 0x24
   1ba7c:	movcc	r1, r0
   1ba80:	bcc	1bb7c <vc_gpuserv_execute_code@@Base+0x9e8>
   1ba84:	cmp	r3, #0
   1ba88:	clzeq	ip, r2
   1ba8c:	clzne	ip, r3
   1ba90:	addeq	ip, ip, #32
   1ba94:	cmp	r5, #0
   1ba98:	clzeq	r1, r4
   1ba9c:	addeq	r1, r1, #32
   1baa0:	clzne	r1, r5
   1baa4:	sub	ip, ip, r1
   1baa8:	sub	sl, ip, #32
   1baac:	lsl	r9, r3, ip
   1bab0:	rsb	fp, ip, #32
   1bab4:	orr	r9, r9, r2, lsl sl
   1bab8:	orr	r9, r9, r2, lsr fp
   1babc:	lsl	r8, r2, ip
   1bac0:	cmp	r5, r9
   1bac4:	cmpeq	r4, r8
   1bac8:	movcc	r0, #0
   1bacc:	movcc	r1, r0
   1bad0:	bcc	1baec <vc_gpuserv_execute_code@@Base+0x958>
   1bad4:	mov	r0, #1
   1bad8:	subs	r4, r4, r8
   1badc:	lsl	r1, r0, sl
   1bae0:	orr	r1, r1, r0, lsr fp
   1bae4:	lsl	r0, r0, ip
   1bae8:	sbc	r5, r5, r9
   1baec:	cmp	ip, #0
   1baf0:	beq	1bb7c <vc_gpuserv_execute_code@@Base+0x9e8>
   1baf4:	lsr	r6, r8, #1
   1baf8:	orr	r6, r6, r9, lsl #31
   1bafc:	lsr	r7, r9, #1
   1bb00:	mov	r2, ip
   1bb04:	b	1bb28 <vc_gpuserv_execute_code@@Base+0x994>
   1bb08:	subs	r3, r4, r6
   1bb0c:	sbc	r8, r5, r7
   1bb10:	adds	r3, r3, r3
   1bb14:	adc	r8, r8, r8
   1bb18:	adds	r4, r3, #1
   1bb1c:	adc	r5, r8, #0
   1bb20:	subs	r2, r2, #1
   1bb24:	beq	1bb44 <vc_gpuserv_execute_code@@Base+0x9b0>
   1bb28:	cmp	r5, r7
   1bb2c:	cmpeq	r4, r6
   1bb30:	bcs	1bb08 <vc_gpuserv_execute_code@@Base+0x974>
   1bb34:	adds	r4, r4, r4
   1bb38:	adc	r5, r5, r5
   1bb3c:	subs	r2, r2, #1
   1bb40:	bne	1bb28 <vc_gpuserv_execute_code@@Base+0x994>
   1bb44:	lsr	r3, r4, ip
   1bb48:	orr	r3, r3, r5, lsl fp
   1bb4c:	lsr	r2, r5, ip
   1bb50:	orr	r3, r3, r5, lsr sl
   1bb54:	adds	r0, r0, r4
   1bb58:	mov	r4, r3
   1bb5c:	lsl	r3, r2, ip
   1bb60:	orr	r3, r3, r4, lsl sl
   1bb64:	lsl	ip, r4, ip
   1bb68:	orr	r3, r3, r4, lsr fp
   1bb6c:	adc	r1, r1, r5
   1bb70:	subs	r0, r0, ip
   1bb74:	mov	r5, r2
   1bb78:	sbc	r1, r1, r3
   1bb7c:	cmp	lr, #0
   1bb80:	strdne	r4, [lr]
   1bb84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bb88:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1bb8c:	mov	r7, r0
   1bb90:	ldr	r6, [pc, #72]	; 1bbe0 <vc_gpuserv_execute_code@@Base+0xa4c>
   1bb94:	ldr	r5, [pc, #72]	; 1bbe4 <vc_gpuserv_execute_code@@Base+0xa50>
   1bb98:	add	r6, pc, r6
   1bb9c:	add	r5, pc, r5
   1bba0:	sub	r6, r6, r5
   1bba4:	mov	r8, r1
   1bba8:	mov	r9, r2
   1bbac:	bl	3d90 <fputs@plt-0x20>
   1bbb0:	asrs	r6, r6, #2
   1bbb4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bbb8:	mov	r4, #0
   1bbbc:	add	r4, r4, #1
   1bbc0:	ldr	r3, [r5], #4
   1bbc4:	mov	r2, r9
   1bbc8:	mov	r1, r8
   1bbcc:	mov	r0, r7
   1bbd0:	blx	r3
   1bbd4:	cmp	r6, r4
   1bbd8:	bne	1bbbc <vc_gpuserv_execute_code@@Base+0xa28>
   1bbdc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bbe0:	andeq	r4, r1, ip, ror #27
   1bbe4:	andeq	r4, r1, r4, ror #27
   1bbe8:	bx	lr

Disassembly of section .fini:

0001bbec <.fini>:
   1bbec:	push	{r3, lr}
   1bbf0:	pop	{r3, pc}
