
raspbian-preinstalled/mountpoint:     file format elf32-littlearm


Disassembly of section .init:

00010aa8 <.init>:
   10aa8:	push	{r3, lr}
   10aac:	bl	111cc <__snprintf_chk@plt+0x554>
   10ab0:	pop	{r3, pc}

Disassembly of section .plt:

00010ab4 <mnt_unref_table@plt-0x14>:
   10ab4:	push	{lr}		; (str lr, [sp, #-4]!)
   10ab8:	ldr	lr, [pc, #4]	; 10ac4 <mnt_unref_table@plt-0x4>
   10abc:	add	lr, pc, lr
   10ac0:	ldr	pc, [lr, #8]!
   10ac4:	muleq	r1, r8, r4

00010ac8 <mnt_unref_table@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #69632	; 0x11000
   10ad0:	ldr	pc, [ip, #1176]!	; 0x498

00010ad4 <mnt_new_table_from_file@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #69632	; 0x11000
   10adc:	ldr	pc, [ip, #1168]!	; 0x490

00010ae0 <free@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #69632	; 0x11000
   10ae8:	ldr	pc, [ip, #1160]!	; 0x488

00010aec <ferror@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #69632	; 0x11000
   10af4:	ldr	pc, [ip, #1152]!	; 0x480

00010af8 <_exit@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #69632	; 0x11000
   10b00:	ldr	pc, [ip, #1144]!	; 0x478

00010b04 <dcgettext@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #69632	; 0x11000
   10b0c:	ldr	pc, [ip, #1136]!	; 0x470

00010b10 <__stack_chk_fail@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #69632	; 0x11000
   10b18:	ldr	pc, [ip, #1128]!	; 0x468

00010b1c <textdomain@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #69632	; 0x11000
   10b24:	ldr	pc, [ip, #1120]!	; 0x460

00010b28 <err@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #69632	; 0x11000
   10b30:	ldr	pc, [ip, #1112]!	; 0x458

00010b34 <__fpending@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #69632	; 0x11000
   10b3c:	ldr	pc, [ip, #1104]!	; 0x450

00010b40 <mnt_fs_get_target@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #69632	; 0x11000
   10b48:	ldr	pc, [ip, #1096]!	; 0x448

00010b4c <__libc_start_main@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #69632	; 0x11000
   10b54:	ldr	pc, [ip, #1088]!	; 0x440

00010b58 <__gmon_start__@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #69632	; 0x11000
   10b60:	ldr	pc, [ip, #1080]!	; 0x438

00010b64 <getopt_long@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #69632	; 0x11000
   10b6c:	ldr	pc, [ip, #1072]!	; 0x430

00010b70 <exit@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #69632	; 0x11000
   10b78:	ldr	pc, [ip, #1064]!	; 0x428

00010b7c <warnx@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #69632	; 0x11000
   10b84:	ldr	pc, [ip, #1056]!	; 0x420

00010b88 <mnt_init_debug@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #69632	; 0x11000
   10b90:	ldr	pc, [ip, #1048]!	; 0x418

00010b94 <mnt_new_cache@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #69632	; 0x11000
   10b9c:	ldr	pc, [ip, #1040]!	; 0x410

00010ba0 <__errno_location@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #69632	; 0x11000
   10ba8:	ldr	pc, [ip, #1032]!	; 0x408

00010bac <mnt_resolve_path@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #69632	; 0x11000
   10bb4:	ldr	pc, [ip, #1024]!	; 0x400

00010bb8 <__cxa_atexit@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #69632	; 0x11000
   10bc0:	ldr	pc, [ip, #1016]!	; 0x3f8

00010bc4 <memset@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #69632	; 0x11000
   10bcc:	ldr	pc, [ip, #1008]!	; 0x3f0

00010bd0 <mnt_unref_cache@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #69632	; 0x11000
   10bd8:	ldr	pc, [ip, #1000]!	; 0x3e8

00010bdc <__printf_chk@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #69632	; 0x11000
   10be4:	ldr	pc, [ip, #992]!	; 0x3e0

00010be8 <mnt_table_set_cache@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #69632	; 0x11000
   10bf0:	ldr	pc, [ip, #984]!	; 0x3d8

00010bf4 <__fprintf_chk@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #69632	; 0x11000
   10bfc:	ldr	pc, [ip, #976]!	; 0x3d0

00010c00 <mnt_table_find_target@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #69632	; 0x11000
   10c08:	ldr	pc, [ip, #968]!	; 0x3c8

00010c0c <fclose@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #69632	; 0x11000
   10c14:	ldr	pc, [ip, #960]!	; 0x3c0

00010c18 <mnt_fs_get_devno@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #69632	; 0x11000
   10c20:	ldr	pc, [ip, #952]!	; 0x3b8

00010c24 <setlocale@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #69632	; 0x11000
   10c2c:	ldr	pc, [ip, #944]!	; 0x3b0

00010c30 <warn@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #69632	; 0x11000
   10c38:	ldr	pc, [ip, #936]!	; 0x3a8

00010c3c <fputc@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #69632	; 0x11000
   10c44:	ldr	pc, [ip, #928]!	; 0x3a0

00010c48 <bindtextdomain@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #69632	; 0x11000
   10c50:	ldr	pc, [ip, #920]!	; 0x398

00010c54 <__xstat64@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #69632	; 0x11000
   10c5c:	ldr	pc, [ip, #912]!	; 0x390

00010c60 <fputs@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #69632	; 0x11000
   10c68:	ldr	pc, [ip, #904]!	; 0x388

00010c6c <abort@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #69632	; 0x11000
   10c74:	ldr	pc, [ip, #896]!	; 0x380

00010c78 <__snprintf_chk@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #69632	; 0x11000
   10c80:	ldr	pc, [ip, #888]!	; 0x378

Disassembly of section .text:

00010c84 <.text>:
   10c84:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10c88:	sub	sp, sp, #144	; 0x90
   10c8c:	ldr	sl, [pc, #1148]	; 11110 <__snprintf_chk@plt+0x498>
   10c90:	mov	r2, #128	; 0x80
   10c94:	mov	r6, r0
   10c98:	ldr	r3, [sl]
   10c9c:	mov	r5, r1
   10ca0:	add	r0, sp, #8
   10ca4:	mov	r1, #0
   10ca8:	str	r3, [sp, #140]	; 0x8c
   10cac:	bl	10bc4 <memset@plt>
   10cb0:	ldr	r1, [pc, #1116]	; 11114 <__snprintf_chk@plt+0x49c>
   10cb4:	mov	r0, #6
   10cb8:	bl	10c24 <setlocale@plt>
   10cbc:	ldr	r1, [pc, #1108]	; 11118 <__snprintf_chk@plt+0x4a0>
   10cc0:	ldr	r0, [pc, #1108]	; 1111c <__snprintf_chk@plt+0x4a4>
   10cc4:	bl	10c48 <bindtextdomain@plt>
   10cc8:	ldr	r0, [pc, #1100]	; 1111c <__snprintf_chk@plt+0x4a4>
   10ccc:	bl	10b1c <textdomain@plt>
   10cd0:	ldr	r0, [pc, #1096]	; 11120 <__snprintf_chk@plt+0x4a8>
   10cd4:	bl	11588 <__snprintf_chk@plt+0x910>
   10cd8:	mov	r0, #0
   10cdc:	bl	10b88 <mnt_init_debug@plt>
   10ce0:	ldr	r8, [pc, #1084]	; 11124 <__snprintf_chk@plt+0x4ac>
   10ce4:	ldr	r7, [pc, #1084]	; 11128 <__snprintf_chk@plt+0x4b0>
   10ce8:	mov	r9, #0
   10cec:	str	r9, [sp]
   10cf0:	mov	r3, r8
   10cf4:	mov	r2, r7
   10cf8:	mov	r1, r5
   10cfc:	mov	r0, r6
   10d00:	bl	10b64 <getopt_long@plt>
   10d04:	cmn	r0, #1
   10d08:	mov	r4, r0
   10d0c:	beq	10e24 <__snprintf_chk@plt+0x1ac>
   10d10:	sub	r4, r4, #86	; 0x56
   10d14:	cmp	r4, #34	; 0x22
   10d18:	ldrls	pc, [pc, r4, lsl #2]
   10d1c:	b	1103c <__snprintf_chk@plt+0x3c4>
   10d20:	ldrdeq	r0, [r1], -ip
   10d24:	andeq	r1, r1, ip, lsr r0
   10d28:	andeq	r1, r1, ip, lsr r0
   10d2c:	andeq	r1, r1, ip, lsr r0
   10d30:	andeq	r1, r1, ip, lsr r0
   10d34:	andeq	r1, r1, ip, lsr r0
   10d38:	andeq	r1, r1, ip, lsr r0
   10d3c:	andeq	r1, r1, ip, lsr r0
   10d40:	andeq	r1, r1, ip, lsr r0
   10d44:	andeq	r1, r1, ip, lsr r0
   10d48:	andeq	r1, r1, ip, lsr r0
   10d4c:	andeq	r1, r1, ip, lsr r0
   10d50:	andeq	r1, r1, ip, lsr r0
   10d54:	andeq	r1, r1, ip, lsr r0
   10d58:	andeq	r0, r1, ip, asr #27
   10d5c:	andeq	r1, r1, ip, lsr r0
   10d60:	andeq	r1, r1, ip, lsr r0
   10d64:	andeq	r1, r1, ip, lsr r0
   10d68:	andeq	r0, r1, r4, lsl pc
   10d6c:	andeq	r1, r1, ip, lsr r0
   10d70:	andeq	r1, r1, ip, lsr r0
   10d74:	andeq	r1, r1, ip, lsr r0
   10d78:	andeq	r1, r1, ip, lsr r0
   10d7c:	andeq	r1, r1, ip, lsr r0
   10d80:	andeq	r1, r1, ip, lsr r0
   10d84:	andeq	r1, r1, ip, lsr r0
   10d88:	andeq	r1, r1, ip, lsr r0
   10d8c:			; <UNDEFINED> instruction: 0x00010dbc
   10d90:	andeq	r1, r1, ip, lsr r0
   10d94:	andeq	r1, r1, ip, lsr r0
   10d98:	andeq	r1, r1, ip, lsr r0
   10d9c:	andeq	r1, r1, ip, lsr r0
   10da0:	andeq	r1, r1, ip, lsr r0
   10da4:	andeq	r1, r1, ip, lsr r0
   10da8:	andeq	r0, r1, ip, lsr #27
   10dac:	ldrb	r3, [sp, #128]	; 0x80
   10db0:	orr	r3, r3, #1
   10db4:	strb	r3, [sp, #128]	; 0x80
   10db8:	b	10cec <__snprintf_chk@plt+0x74>
   10dbc:	ldrb	r3, [sp, #128]	; 0x80
   10dc0:	orr	r3, r3, #4
   10dc4:	strb	r3, [sp, #128]	; 0x80
   10dc8:	b	10cec <__snprintf_chk@plt+0x74>
   10dcc:	ldrb	r3, [sp, #128]	; 0x80
   10dd0:	orr	r3, r3, #2
   10dd4:	strb	r3, [sp, #128]	; 0x80
   10dd8:	b	10cec <__snprintf_chk@plt+0x74>
   10ddc:	mov	r2, #5
   10de0:	ldr	r1, [pc, #836]	; 1112c <__snprintf_chk@plt+0x4b4>
   10de4:	mov	r0, #0
   10de8:	bl	10b04 <dcgettext@plt>
   10dec:	ldr	r2, [pc, #828]	; 11130 <__snprintf_chk@plt+0x4b8>
   10df0:	ldr	r3, [pc, #828]	; 11134 <__snprintf_chk@plt+0x4bc>
   10df4:	mov	r4, #0
   10df8:	ldr	r2, [r2]
   10dfc:	mov	r1, r0
   10e00:	mov	r0, #1
   10e04:	bl	10bdc <__printf_chk@plt>
   10e08:	ldr	r2, [sp, #140]	; 0x8c
   10e0c:	ldr	r3, [sl]
   10e10:	mov	r0, r4
   10e14:	cmp	r2, r3
   10e18:	bne	110fc <__snprintf_chk@plt+0x484>
   10e1c:	add	sp, sp, #144	; 0x90
   10e20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10e24:	ldr	r3, [pc, #780]	; 11138 <__snprintf_chk@plt+0x4c0>
   10e28:	ldr	r3, [r3]
   10e2c:	add	r2, r3, #1
   10e30:	cmp	r2, r6
   10e34:	bne	11028 <__snprintf_chk@plt+0x3b0>
   10e38:	ldr	r3, [r5, r3, lsl #2]
   10e3c:	add	r2, sp, #24
   10e40:	mov	r1, r3
   10e44:	mov	r0, #3
   10e48:	str	r3, [sp, #8]
   10e4c:	bl	10c54 <__xstat64@plt>
   10e50:	subs	r3, r0, #0
   10e54:	beq	10e6c <__snprintf_chk@plt+0x1f4>
   10e58:	ldrb	r3, [sp, #128]	; 0x80
   10e5c:	tst	r3, #4
   10e60:	beq	11100 <__snprintf_chk@plt+0x488>
   10e64:	mov	r4, #1
   10e68:	b	10e08 <__snprintf_chk@plt+0x190>
   10e6c:	ldrb	r2, [sp, #128]	; 0x80
   10e70:	tst	r2, #1
   10e74:	bne	10ebc <__snprintf_chk@plt+0x244>
   10e78:	add	r0, sp, #8
   10e7c:	bl	11280 <__snprintf_chk@plt+0x608>
   10e80:	ldrb	r3, [sp, #128]	; 0x80
   10e84:	subs	r4, r0, #0
   10e88:	bne	11074 <__snprintf_chk@plt+0x3fc>
   10e8c:	tst	r3, #2
   10e90:	bne	110a0 <__snprintf_chk@plt+0x428>
   10e94:	tst	r3, #4
   10e98:	bne	10e08 <__snprintf_chk@plt+0x190>
   10e9c:	mov	r2, #5
   10ea0:	ldr	r1, [pc, #660]	; 1113c <__snprintf_chk@plt+0x4c4>
   10ea4:	bl	10b04 <dcgettext@plt>
   10ea8:	ldr	r2, [sp, #8]
   10eac:	mov	r1, r0
   10eb0:	mov	r0, #1
   10eb4:	bl	10bdc <__printf_chk@plt>
   10eb8:	b	10e08 <__snprintf_chk@plt+0x190>
   10ebc:	ldr	r1, [sp, #40]	; 0x28
   10ec0:	and	r1, r1, #61440	; 0xf000
   10ec4:	cmp	r1, #24576	; 0x6000
   10ec8:	bne	110dc <__snprintf_chk@plt+0x464>
   10ecc:	ldr	r1, [sp, #56]	; 0x38
   10ed0:	ldr	r2, [sp, #60]	; 0x3c
   10ed4:	mov	r4, r3
   10ed8:	lsr	r3, r1, #12
   10edc:	lsl	r0, r1, #12
   10ee0:	orr	r3, r3, r2, lsl #20
   10ee4:	bic	r2, r2, #4080	; 0xff0
   10ee8:	uxtb	r1, r1
   10eec:	bic	r3, r3, #255	; 0xff
   10ef0:	bic	r2, r2, #15
   10ef4:	orr	r3, r3, r1
   10ef8:	orr	r2, r2, r0, lsr #20
   10efc:	ldr	r1, [pc, #572]	; 11140 <__snprintf_chk@plt+0x4c8>
   10f00:	mov	r0, #1
   10f04:	bl	10bdc <__printf_chk@plt>
   10f08:	adds	r4, r4, #0
   10f0c:	movne	r4, #1
   10f10:	b	10e08 <__snprintf_chk@plt+0x190>
   10f14:	ldr	r3, [pc, #552]	; 11144 <__snprintf_chk@plt+0x4cc>
   10f18:	mov	r2, #5
   10f1c:	ldr	r1, [pc, #548]	; 11148 <__snprintf_chk@plt+0x4d0>
   10f20:	ldr	r4, [r3]
   10f24:	mov	r0, #0
   10f28:	bl	10b04 <dcgettext@plt>
   10f2c:	mov	r1, r4
   10f30:	bl	10c60 <fputs@plt>
   10f34:	mov	r2, #5
   10f38:	ldr	r1, [pc, #524]	; 1114c <__snprintf_chk@plt+0x4d4>
   10f3c:	mov	r0, #0
   10f40:	bl	10b04 <dcgettext@plt>
   10f44:	ldr	r3, [pc, #484]	; 11130 <__snprintf_chk@plt+0x4b8>
   10f48:	mov	r1, #1
   10f4c:	ldr	r3, [r3]
   10f50:	mov	r2, r0
   10f54:	mov	r0, r4
   10f58:	bl	10bf4 <__fprintf_chk@plt>
   10f5c:	mov	r1, r4
   10f60:	mov	r0, #10
   10f64:	bl	10c3c <fputc@plt>
   10f68:	mov	r2, #5
   10f6c:	ldr	r1, [pc, #476]	; 11150 <__snprintf_chk@plt+0x4d8>
   10f70:	mov	r0, #0
   10f74:	bl	10b04 <dcgettext@plt>
   10f78:	mov	r1, r4
   10f7c:	bl	10c60 <fputs@plt>
   10f80:	mov	r2, #5
   10f84:	ldr	r1, [pc, #456]	; 11154 <__snprintf_chk@plt+0x4dc>
   10f88:	mov	r0, #0
   10f8c:	bl	10b04 <dcgettext@plt>
   10f90:	mov	r1, r4
   10f94:	bl	10c60 <fputs@plt>
   10f98:	mov	r2, #5
   10f9c:	ldr	r1, [pc, #436]	; 11158 <__snprintf_chk@plt+0x4e0>
   10fa0:	mov	r0, #0
   10fa4:	bl	10b04 <dcgettext@plt>
   10fa8:	mov	r1, r4
   10fac:	bl	10c60 <fputs@plt>
   10fb0:	mov	r1, r4
   10fb4:	mov	r0, #10
   10fb8:	bl	10c3c <fputc@plt>
   10fbc:	mov	r2, #5
   10fc0:	ldr	r1, [pc, #404]	; 1115c <__snprintf_chk@plt+0x4e4>
   10fc4:	mov	r0, #0
   10fc8:	bl	10b04 <dcgettext@plt>
   10fcc:	mov	r2, #5
   10fd0:	ldr	r1, [pc, #392]	; 11160 <__snprintf_chk@plt+0x4e8>
   10fd4:	mov	r4, r0
   10fd8:	mov	r0, #0
   10fdc:	bl	10b04 <dcgettext@plt>
   10fe0:	ldr	r2, [pc, #380]	; 11164 <__snprintf_chk@plt+0x4ec>
   10fe4:	mov	r3, r4
   10fe8:	str	r2, [sp]
   10fec:	ldr	r1, [pc, #372]	; 11168 <__snprintf_chk@plt+0x4f0>
   10ff0:	ldr	r2, [pc, #372]	; 1116c <__snprintf_chk@plt+0x4f4>
   10ff4:	str	r0, [sp, #4]
   10ff8:	mov	r0, #1
   10ffc:	bl	10bdc <__printf_chk@plt>
   11000:	mov	r2, #5
   11004:	ldr	r1, [pc, #356]	; 11170 <__snprintf_chk@plt+0x4f8>
   11008:	mov	r0, #0
   1100c:	bl	10b04 <dcgettext@plt>
   11010:	ldr	r2, [pc, #348]	; 11174 <__snprintf_chk@plt+0x4fc>
   11014:	mov	r1, r0
   11018:	mov	r0, #1
   1101c:	bl	10bdc <__printf_chk@plt>
   11020:	mov	r0, #0
   11024:	bl	10b70 <exit@plt>
   11028:	mov	r2, #5
   1102c:	ldr	r1, [pc, #324]	; 11178 <__snprintf_chk@plt+0x500>
   11030:	mov	r0, #0
   11034:	bl	10b04 <dcgettext@plt>
   11038:	bl	10b7c <warnx@plt>
   1103c:	ldr	r3, [pc, #312]	; 1117c <__snprintf_chk@plt+0x504>
   11040:	mov	r2, #5
   11044:	ldr	r1, [pc, #308]	; 11180 <__snprintf_chk@plt+0x508>
   11048:	mov	r0, #0
   1104c:	ldr	r4, [r3]
   11050:	bl	10b04 <dcgettext@plt>
   11054:	ldr	r3, [pc, #212]	; 11130 <__snprintf_chk@plt+0x4b8>
   11058:	mov	r1, #1
   1105c:	ldr	r3, [r3]
   11060:	mov	r2, r0
   11064:	mov	r0, r4
   11068:	bl	10bf4 <__fprintf_chk@plt>
   1106c:	mov	r0, #1
   11070:	bl	10b70 <exit@plt>
   11074:	ands	r0, r3, #4
   11078:	bne	10e64 <__snprintf_chk@plt+0x1ec>
   1107c:	mov	r2, #5
   11080:	ldr	r1, [pc, #252]	; 11184 <__snprintf_chk@plt+0x50c>
   11084:	bl	10b04 <dcgettext@plt>
   11088:	mov	r4, #1
   1108c:	ldr	r2, [sp, #8]
   11090:	mov	r1, r0
   11094:	mov	r0, r4
   11098:	bl	10bdc <__printf_chk@plt>
   1109c:	b	10e08 <__snprintf_chk@plt+0x190>
   110a0:	ldr	r0, [sp, #16]
   110a4:	ldr	r2, [sp, #20]
   110a8:	ldr	r1, [pc, #144]	; 11140 <__snprintf_chk@plt+0x4c8>
   110ac:	lsr	r3, r0, #12
   110b0:	uxtb	ip, r0
   110b4:	orr	r3, r3, r2, lsl #20
   110b8:	lsl	r0, r0, #12
   110bc:	bic	r2, r2, #4080	; 0xff0
   110c0:	bic	r3, r3, #255	; 0xff
   110c4:	bic	r2, r2, #15
   110c8:	orr	r2, r2, r0, lsr #20
   110cc:	orr	r3, r3, ip
   110d0:	mov	r0, #1
   110d4:	bl	10bdc <__printf_chk@plt>
   110d8:	b	10e08 <__snprintf_chk@plt+0x190>
   110dc:	tst	r2, #4
   110e0:	bne	10f08 <__snprintf_chk@plt+0x290>
   110e4:	mov	r2, #5
   110e8:	ldr	r1, [pc, #152]	; 11188 <__snprintf_chk@plt+0x510>
   110ec:	bl	10b04 <dcgettext@plt>
   110f0:	ldr	r1, [sp, #8]
   110f4:	bl	10b7c <warnx@plt>
   110f8:	b	10f08 <__snprintf_chk@plt+0x290>
   110fc:	bl	10b10 <__stack_chk_fail@plt>
   11100:	ldr	r2, [sp, #8]
   11104:	ldr	r1, [pc, #128]	; 1118c <__snprintf_chk@plt+0x514>
   11108:	mov	r0, #1
   1110c:	bl	10b28 <err@plt>
   11110:	andeq	r1, r2, r0, asr lr
   11114:	andeq	r1, r1, r0, ror #12
   11118:	andeq	r1, r1, r8, lsr r6
   1111c:	andeq	r1, r1, ip, asr #12
   11120:	andeq	r1, r1, ip, ror #7
   11124:	andeq	r1, r1, ip, lsr #11
   11128:	andeq	r1, r1, r4, ror #16
   1112c:	andeq	r1, r1, ip, lsl r8
   11130:	andeq	r2, r2, r8
   11134:	andeq	r1, r1, r8, lsr #16
   11138:	andeq	r2, r2, r0, lsl r0
   1113c:			; <UNDEFINED> instruction: 0x000118b4
   11140:	muleq	r1, r4, r8
   11144:	andeq	r2, r2, ip, lsl r0
   11148:	andeq	r1, r1, r8, asr r6
   1114c:	andeq	r1, r1, r4, ror #12
   11150:	muleq	r1, ip, r6
   11154:	ldrdeq	r1, [r1], -r0
   11158:	ldrdeq	r1, [r1], -ip
   1115c:	muleq	r1, ip, r7
   11160:			; <UNDEFINED> instruction: 0x000117b0
   11164:	andeq	r1, r1, r0, ror #15
   11168:	andeq	r1, r1, ip, asr #15
   1116c:	andeq	r1, r1, r0, asr #15
   11170:	strdeq	r1, [r1], -r0
   11174:	andeq	r1, r1, ip, lsl #16
   11178:	andeq	r1, r1, ip, ror #16
   1117c:	andeq	r2, r2, r8, lsl r0
   11180:	andeq	r1, r1, ip, lsr r8
   11184:	muleq	r1, ip, r8
   11188:	andeq	r1, r1, ip, ror r8
   1118c:	andeq	r1, r1, r8, ror r8
   11190:	mov	fp, #0
   11194:	mov	lr, #0
   11198:	pop	{r1}		; (ldr r1, [sp], #4)
   1119c:	mov	r2, sp
   111a0:	push	{r2}		; (str r2, [sp, #-4]!)
   111a4:	push	{r0}		; (str r0, [sp, #-4]!)
   111a8:	ldr	ip, [pc, #16]	; 111c0 <__snprintf_chk@plt+0x548>
   111ac:	push	{ip}		; (str ip, [sp, #-4]!)
   111b0:	ldr	r0, [pc, #12]	; 111c4 <__snprintf_chk@plt+0x54c>
   111b4:	ldr	r3, [pc, #12]	; 111c8 <__snprintf_chk@plt+0x550>
   111b8:	bl	10b4c <__libc_start_main@plt>
   111bc:	bl	10c6c <abort@plt>
   111c0:	andeq	r1, r1, r4, lsl #11
   111c4:	andeq	r0, r1, r4, lsl #25
   111c8:	andeq	r1, r1, r4, lsr #10
   111cc:	ldr	r3, [pc, #20]	; 111e8 <__snprintf_chk@plt+0x570>
   111d0:	ldr	r2, [pc, #20]	; 111ec <__snprintf_chk@plt+0x574>
   111d4:	add	r3, pc, r3
   111d8:	ldr	r2, [r3, r2]
   111dc:	cmp	r2, #0
   111e0:	bxeq	lr
   111e4:	b	10b58 <__gmon_start__@plt>
   111e8:	andeq	r0, r1, r0, lsl #27
   111ec:	andeq	r0, r0, r0, lsr #1
   111f0:	ldr	r0, [pc, #24]	; 11210 <__snprintf_chk@plt+0x598>
   111f4:	ldr	r3, [pc, #24]	; 11214 <__snprintf_chk@plt+0x59c>
   111f8:	cmp	r3, r0
   111fc:	bxeq	lr
   11200:	ldr	r3, [pc, #16]	; 11218 <__snprintf_chk@plt+0x5a0>
   11204:	cmp	r3, #0
   11208:	bxeq	lr
   1120c:	bx	r3
   11210:	andeq	r2, r2, r8
   11214:	andeq	r2, r2, r8
   11218:	andeq	r0, r0, r0
   1121c:	ldr	r0, [pc, #36]	; 11248 <__snprintf_chk@plt+0x5d0>
   11220:	ldr	r1, [pc, #36]	; 1124c <__snprintf_chk@plt+0x5d4>
   11224:	sub	r1, r1, r0
   11228:	asr	r1, r1, #2
   1122c:	add	r1, r1, r1, lsr #31
   11230:	asrs	r1, r1, #1
   11234:	bxeq	lr
   11238:	ldr	r3, [pc, #16]	; 11250 <__snprintf_chk@plt+0x5d8>
   1123c:	cmp	r3, #0
   11240:	bxeq	lr
   11244:	bx	r3
   11248:	andeq	r2, r2, r8
   1124c:	andeq	r2, r2, r8
   11250:	andeq	r0, r0, r0
   11254:	push	{r4, lr}
   11258:	ldr	r4, [pc, #24]	; 11278 <__snprintf_chk@plt+0x600>
   1125c:	ldrb	r3, [r4]
   11260:	cmp	r3, #0
   11264:	popne	{r4, pc}
   11268:	bl	111f0 <__snprintf_chk@plt+0x578>
   1126c:	mov	r3, #1
   11270:	strb	r3, [r4]
   11274:	pop	{r4, pc}
   11278:	andeq	r2, r2, r0, lsr #32
   1127c:	b	1121c <__snprintf_chk@plt+0x5a4>
   11280:	push	{r4, r5, r6, r7, r8, r9, lr}
   11284:	sub	sp, sp, #4160	; 0x1040
   11288:	ldr	r4, [pc, #336]	; 113e0 <__snprintf_chk@plt+0x768>
   1128c:	sub	sp, sp, #60	; 0x3c
   11290:	add	r2, sp, #4160	; 0x1040
   11294:	ldr	r3, [r4]
   11298:	add	r2, r2, #52	; 0x34
   1129c:	mov	r5, r0
   112a0:	ldr	r0, [pc, #316]	; 113e4 <__snprintf_chk@plt+0x76c>
   112a4:	str	r3, [r2]
   112a8:	bl	10ad4 <mnt_new_table_from_file@plt>
   112ac:	subs	r7, r0, #0
   112b0:	beq	1133c <__snprintf_chk@plt+0x6c4>
   112b4:	bl	10b94 <mnt_new_cache@plt>
   112b8:	mov	r1, r0
   112bc:	mov	r6, r0
   112c0:	mov	r0, r7
   112c4:	bl	10be8 <mnt_table_set_cache@plt>
   112c8:	mov	r0, r6
   112cc:	bl	10bd0 <mnt_unref_cache@plt>
   112d0:	mov	r2, #1
   112d4:	ldr	r1, [r5]
   112d8:	mov	r0, r7
   112dc:	bl	10c00 <mnt_table_find_target@plt>
   112e0:	subs	r6, r0, #0
   112e4:	beq	11334 <__snprintf_chk@plt+0x6bc>
   112e8:	bl	10b40 <mnt_fs_get_target@plt>
   112ec:	cmp	r0, #0
   112f0:	beq	11334 <__snprintf_chk@plt+0x6bc>
   112f4:	mov	r0, r6
   112f8:	bl	10c18 <mnt_fs_get_devno@plt>
   112fc:	mov	r6, #0
   11300:	strd	r0, [r5, #8]
   11304:	mov	r0, r7
   11308:	bl	10ac8 <mnt_unref_table@plt>
   1130c:	add	r3, sp, #4160	; 0x1040
   11310:	add	r3, r3, #52	; 0x34
   11314:	ldr	r2, [r3]
   11318:	ldr	r3, [r4]
   1131c:	mov	r0, r6
   11320:	cmp	r2, r3
   11324:	bne	113dc <__snprintf_chk@plt+0x764>
   11328:	add	sp, sp, #4160	; 0x1040
   1132c:	add	sp, sp, #60	; 0x3c
   11330:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11334:	mvn	r6, #0
   11338:	b	11304 <__snprintf_chk@plt+0x68c>
   1133c:	mov	r1, r7
   11340:	ldr	r0, [r5]
   11344:	bl	10bac <mnt_resolve_path@plt>
   11348:	ldr	r2, [pc, #152]	; 113e8 <__snprintf_chk@plt+0x770>
   1134c:	mov	r3, #4096	; 0x1000
   11350:	subs	r6, r0, #0
   11354:	movne	r1, r6
   11358:	ldreq	r1, [r5]
   1135c:	add	r0, sp, #116	; 0x74
   11360:	str	r1, [sp, #4]
   11364:	str	r2, [sp]
   11368:	mov	r1, r3
   1136c:	mov	r2, #1
   11370:	bl	10c78 <__snprintf_chk@plt>
   11374:	mov	r7, r0
   11378:	mov	r0, r6
   1137c:	bl	10ae0 <free@plt>
   11380:	cmp	r7, #4096	; 0x1000
   11384:	bcc	11390 <__snprintf_chk@plt+0x718>
   11388:	mvn	r6, #0
   1138c:	b	1130c <__snprintf_chk@plt+0x694>
   11390:	add	r1, sp, #116	; 0x74
   11394:	add	r2, sp, #8
   11398:	mov	r0, #3
   1139c:	bl	10c54 <__xstat64@plt>
   113a0:	subs	r6, r0, #0
   113a4:	bne	11388 <__snprintf_chk@plt+0x710>
   113a8:	ldrd	r0, [r5, #16]
   113ac:	ldrd	r2, [sp, #8]
   113b0:	cmp	r1, r3
   113b4:	cmpeq	r0, r2
   113b8:	beq	113c4 <__snprintf_chk@plt+0x74c>
   113bc:	strd	r0, [r5, #8]
   113c0:	b	1130c <__snprintf_chk@plt+0x694>
   113c4:	ldrd	r8, [r5, #112]	; 0x70
   113c8:	ldrd	r2, [sp, #104]	; 0x68
   113cc:	cmp	r9, r3
   113d0:	cmpeq	r8, r2
   113d4:	bne	11388 <__snprintf_chk@plt+0x710>
   113d8:	b	113bc <__snprintf_chk@plt+0x744>
   113dc:	bl	10b10 <__stack_chk_fail@plt>
   113e0:	andeq	r1, r2, r0, asr lr
   113e4:	andeq	r1, r1, ip, lsl #12
   113e8:	andeq	r1, r1, r4, lsr #12
   113ec:	ldr	r3, [pc, #292]	; 11518 <__snprintf_chk@plt+0x8a0>
   113f0:	push	{r4, r5, r6, lr}
   113f4:	ldr	r4, [r3]
   113f8:	mov	r0, r4
   113fc:	bl	10b34 <__fpending@plt>
   11400:	mov	r6, r0
   11404:	mov	r0, r4
   11408:	bl	10aec <ferror@plt>
   1140c:	mov	r5, r0
   11410:	mov	r0, r4
   11414:	bl	10c0c <fclose@plt>
   11418:	cmp	r5, #0
   1141c:	mov	r4, r0
   11420:	bne	114c8 <__snprintf_chk@plt+0x850>
   11424:	cmp	r0, #0
   11428:	beq	11444 <__snprintf_chk@plt+0x7cc>
   1142c:	bl	10ba0 <__errno_location@plt>
   11430:	cmp	r6, #0
   11434:	ldr	r3, [r0]
   11438:	bne	114a0 <__snprintf_chk@plt+0x828>
   1143c:	cmp	r3, #9
   11440:	bne	114a0 <__snprintf_chk@plt+0x828>
   11444:	ldr	r3, [pc, #208]	; 1151c <__snprintf_chk@plt+0x8a4>
   11448:	ldr	r4, [r3]
   1144c:	mov	r0, r4
   11450:	bl	10b34 <__fpending@plt>
   11454:	mov	r6, r0
   11458:	mov	r0, r4
   1145c:	bl	10aec <ferror@plt>
   11460:	mov	r5, r0
   11464:	mov	r0, r4
   11468:	bl	10c0c <fclose@plt>
   1146c:	cmp	r5, #0
   11470:	mov	r4, r0
   11474:	bne	114fc <__snprintf_chk@plt+0x884>
   11478:	cmp	r0, #0
   1147c:	popeq	{r4, r5, r6, pc}
   11480:	cmp	r6, #0
   11484:	bne	11498 <__snprintf_chk@plt+0x820>
   11488:	bl	10ba0 <__errno_location@plt>
   1148c:	ldr	r3, [r0]
   11490:	cmp	r3, #9
   11494:	popeq	{r4, r5, r6, pc}
   11498:	mov	r0, #1
   1149c:	bl	10af8 <_exit@plt>
   114a0:	cmp	r3, #32
   114a4:	beq	11444 <__snprintf_chk@plt+0x7cc>
   114a8:	cmp	r3, #0
   114ac:	beq	114e4 <__snprintf_chk@plt+0x86c>
   114b0:	mov	r2, #5
   114b4:	ldr	r1, [pc, #100]	; 11520 <__snprintf_chk@plt+0x8a8>
   114b8:	mov	r0, #0
   114bc:	bl	10b04 <dcgettext@plt>
   114c0:	bl	10c30 <warn@plt>
   114c4:	b	11498 <__snprintf_chk@plt+0x820>
   114c8:	bl	10ba0 <__errno_location@plt>
   114cc:	cmp	r4, #0
   114d0:	ldr	r3, [r0]
   114d4:	bne	114a0 <__snprintf_chk@plt+0x828>
   114d8:	cmp	r3, #32
   114dc:	strne	r4, [r0]
   114e0:	beq	11444 <__snprintf_chk@plt+0x7cc>
   114e4:	mov	r2, #5
   114e8:	ldr	r1, [pc, #48]	; 11520 <__snprintf_chk@plt+0x8a8>
   114ec:	mov	r0, #0
   114f0:	bl	10b04 <dcgettext@plt>
   114f4:	bl	10b7c <warnx@plt>
   114f8:	b	11498 <__snprintf_chk@plt+0x820>
   114fc:	cmp	r0, #0
   11500:	bne	11498 <__snprintf_chk@plt+0x820>
   11504:	bl	10ba0 <__errno_location@plt>
   11508:	ldr	r3, [r0]
   1150c:	cmp	r3, #32
   11510:	strne	r4, [r0]
   11514:	b	11498 <__snprintf_chk@plt+0x820>
   11518:	andeq	r2, r2, ip, lsl r0
   1151c:	andeq	r2, r2, r8, lsl r0
   11520:	andeq	r1, r1, ip, lsr #12
   11524:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11528:	mov	r7, r0
   1152c:	ldr	r6, [pc, #72]	; 1157c <__snprintf_chk@plt+0x904>
   11530:	ldr	r5, [pc, #72]	; 11580 <__snprintf_chk@plt+0x908>
   11534:	add	r6, pc, r6
   11538:	add	r5, pc, r5
   1153c:	sub	r6, r6, r5
   11540:	mov	r8, r1
   11544:	mov	r9, r2
   11548:	bl	10aa8 <mnt_unref_table@plt-0x20>
   1154c:	asrs	r6, r6, #2
   11550:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11554:	mov	r4, #0
   11558:	add	r4, r4, #1
   1155c:	ldr	r3, [r5], #4
   11560:	mov	r2, r9
   11564:	mov	r1, r8
   11568:	mov	r0, r7
   1156c:	blx	r3
   11570:	cmp	r6, r4
   11574:	bne	11558 <__snprintf_chk@plt+0x8e0>
   11578:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1157c:	andeq	r0, r1, r0, lsl r9
   11580:	andeq	r0, r1, r8, lsl #18
   11584:	bx	lr
   11588:	ldr	r3, [pc, #12]	; 1159c <__snprintf_chk@plt+0x924>
   1158c:	mov	r1, #0
   11590:	add	r3, pc, r3
   11594:	ldr	r2, [r3]
   11598:	b	10bb8 <__cxa_atexit@plt>
   1159c:	andeq	r0, r1, ip, ror #20

Disassembly of section .fini:

000115a0 <.fini>:
   115a0:	push	{r3, lr}
   115a4:	pop	{r3, pc}
