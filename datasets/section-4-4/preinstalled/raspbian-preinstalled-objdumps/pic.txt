
raspbian-preinstalled/pic:     file format elf32-littlearm


Disassembly of section .init:

00011094 <.init>:
   11094:	push	{r3, lr}
   11098:	bl	118c0 <floor@plt+0x4f4>
   1109c:	pop	{r3, pc}

Disassembly of section .plt:

000110a0 <rand@plt-0x14>:
   110a0:	push	{lr}		; (str lr, [sp, #-4]!)
   110a4:	ldr	lr, [pc, #4]	; 110b0 <rand@plt-0x4>
   110a8:	add	lr, pc, lr
   110ac:	ldr	pc, [lr, #8]!
   110b0:	andeq	r0, r3, r4, lsr lr

000110b4 <rand@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #48, 20	; 0x30000
   110bc:	ldr	pc, [ip, #3636]!	; 0xe34

000110c0 <sqrt@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #48, 20	; 0x30000
   110c8:	ldr	pc, [ip, #3628]!	; 0xe2c

000110cc <__aeabi_atexit@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #48, 20	; 0x30000
   110d4:	ldr	pc, [ip, #3620]!	; 0xe24

000110d8 <strtol@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #48, 20	; 0x30000
   110e0:	ldr	pc, [ip, #3612]!	; 0xe1c

000110e4 <free@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #48, 20	; 0x30000
   110ec:	ldr	pc, [ip, #3604]!	; 0xe14

000110f0 <strncmp@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #48, 20	; 0x30000
   110f8:	ldr	pc, [ip, #3596]!	; 0xe0c

000110fc <__aeabi_uidivmod@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #48, 20	; 0x30000
   11104:	ldr	pc, [ip, #3588]!	; 0xe04

00011108 <exit@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #48, 20	; 0x30000
   11110:	ldr	pc, [ip, #3580]!	; 0xdfc

00011114 <strerror@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #48, 20	; 0x30000
   1111c:	ldr	pc, [ip, #3572]!	; 0xdf4

00011120 <stpcpy@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #48, 20	; 0x30000
   11128:	ldr	pc, [ip, #3564]!	; 0xdec

0001112c <puts@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #48, 20	; 0x30000
   11134:	ldr	pc, [ip, #3556]!	; 0xde4

00011138 <cos@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #48, 20	; 0x30000
   11140:	ldr	pc, [ip, #3548]!	; 0xddc

00011144 <__cxa_guard_release@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #48, 20	; 0x30000
   1114c:	ldr	pc, [ip, #3540]!	; 0xdd4

00011150 <snprintf@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #48, 20	; 0x30000
   11158:	ldr	pc, [ip, #3532]!	; 0xdcc

0001115c <_Znaj@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #48, 20	; 0x30000
   11164:	ldr	pc, [ip, #3524]!	; 0xdc4

00011168 <abort@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #48, 20	; 0x30000
   11170:	ldr	pc, [ip, #3516]!	; 0xdbc

00011174 <pow@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #48, 20	; 0x30000
   1117c:	ldr	pc, [ip, #3508]!	; 0xdb4

00011180 <setbuf@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #48, 20	; 0x30000
   11188:	ldr	pc, [ip, #3500]!	; 0xdac

0001118c <log10@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #48, 20	; 0x30000
   11194:	ldr	pc, [ip, #3492]!	; 0xda4

00011198 <system@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #48, 20	; 0x30000
   111a0:	ldr	pc, [ip, #3484]!	; 0xd9c

000111a4 <realloc@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #48, 20	; 0x30000
   111ac:	ldr	pc, [ip, #3476]!	; 0xd94

000111b0 <strcpy@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #48, 20	; 0x30000
   111b8:	ldr	pc, [ip, #3468]!	; 0xd8c

000111bc <ceil@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #48, 20	; 0x30000
   111c4:	ldr	pc, [ip, #3460]!	; 0xd84

000111c8 <fmod@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #48, 20	; 0x30000
   111d0:	ldr	pc, [ip, #3452]!	; 0xd7c

000111d4 <ungetc@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #48, 20	; 0x30000
   111dc:	ldr	pc, [ip, #3444]!	; 0xd74

000111e0 <__stack_chk_fail@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #48, 20	; 0x30000
   111e8:	ldr	pc, [ip, #3436]!	; 0xd6c

000111ec <__cxa_end_cleanup@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #48, 20	; 0x30000
   111f4:	ldr	pc, [ip, #3428]!	; 0xd64

000111f8 <putc@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #48, 20	; 0x30000
   11200:	ldr	pc, [ip, #3420]!	; 0xd5c

00011204 <getc@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #48, 20	; 0x30000
   1120c:	ldr	pc, [ip, #3412]!	; 0xd54

00011210 <atan2@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #48, 20	; 0x30000
   11218:	ldr	pc, [ip, #3404]!	; 0xd4c

0001121c <_ZdaPv@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #48, 20	; 0x30000
   11224:	ldr	pc, [ip, #3396]!	; 0xd44

00011228 <__ctype_b_loc@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #48, 20	; 0x30000
   11230:	ldr	pc, [ip, #3388]!	; 0xd3c

00011234 <setlocale@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #48, 20	; 0x30000
   1123c:	ldr	pc, [ip, #3380]!	; 0xd34

00011240 <ferror@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #48, 20	; 0x30000
   11248:	ldr	pc, [ip, #3372]!	; 0xd2c

0001124c <fputc@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #48, 20	; 0x30000
   11254:	ldr	pc, [ip, #3364]!	; 0xd24

00011258 <fwrite@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #48, 20	; 0x30000
   11260:	ldr	pc, [ip, #3356]!	; 0xd1c

00011264 <sincos@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #48, 20	; 0x30000
   1126c:	ldr	pc, [ip, #3348]!	; 0xd14

00011270 <memcpy@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #48, 20	; 0x30000
   11278:	ldr	pc, [ip, #3340]!	; 0xd0c

0001127c <malloc@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #48, 20	; 0x30000
   11284:	ldr	pc, [ip, #3332]!	; 0xd04

00011288 <strlen@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #48, 20	; 0x30000
   11290:	ldr	pc, [ip, #3324]!	; 0xcfc

00011294 <__snprintf_chk@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #48, 20	; 0x30000
   1129c:	ldr	pc, [ip, #3316]!	; 0xcf4

000112a0 <fclose@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #48, 20	; 0x30000
   112a8:	ldr	pc, [ip, #3308]!	; 0xcec

000112ac <write@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #48, 20	; 0x30000
   112b4:	ldr	pc, [ip, #3300]!	; 0xce4

000112b8 <__gxx_personality_v0@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #48, 20	; 0x30000
   112c0:	ldr	pc, [ip, #3292]!	; 0xcdc

000112c4 <_exit@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #48, 20	; 0x30000
   112cc:	ldr	pc, [ip, #3284]!	; 0xcd4

000112d0 <strcmp@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #48, 20	; 0x30000
   112d8:	ldr	pc, [ip, #3276]!	; 0xccc

000112dc <__powidf2@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #48, 20	; 0x30000
   112e4:	ldr	pc, [ip, #3268]!	; 0xcc4

000112e8 <__errno_location@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #48, 20	; 0x30000
   112f0:	ldr	pc, [ip, #3260]!	; 0xcbc

000112f4 <memchr@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #48, 20	; 0x30000
   112fc:	ldr	pc, [ip, #3252]!	; 0xcb4

00011300 <sscanf@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #48, 20	; 0x30000
   11308:	ldr	pc, [ip, #3244]!	; 0xcac

0001130c <fflush@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #48, 20	; 0x30000
   11314:	ldr	pc, [ip, #3236]!	; 0xca4

00011318 <fopen64@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #48, 20	; 0x30000
   11320:	ldr	pc, [ip, #3228]!	; 0xc9c

00011324 <memcmp@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #48, 20	; 0x30000
   1132c:	ldr	pc, [ip, #3220]!	; 0xc94

00011330 <__cxa_guard_acquire@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #48, 20	; 0x30000
   11338:	ldr	pc, [ip, #3212]!	; 0xc8c

0001133c <__sprintf_chk@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #48, 20	; 0x30000
   11344:	ldr	pc, [ip, #3204]!	; 0xc84

00011348 <sin@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #48, 20	; 0x30000
   11350:	ldr	pc, [ip, #3196]!	; 0xc7c

00011354 <fputs@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #48, 20	; 0x30000
   1135c:	ldr	pc, [ip, #3188]!	; 0xc74

00011360 <getenv@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #48, 20	; 0x30000
   11368:	ldr	pc, [ip, #3180]!	; 0xc6c

0001136c <__libc_start_main@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #48, 20	; 0x30000
   11374:	ldr	pc, [ip, #3172]!	; 0xc64

00011378 <__gmon_start__@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #48, 20	; 0x30000
   11380:	ldr	pc, [ip, #3164]!	; 0xc5c

00011384 <__cxa_pure_virtual@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #48, 20	; 0x30000
   1138c:	ldr	pc, [ip, #3156]!	; 0xc54

00011390 <srand@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #48, 20	; 0x30000
   11398:	ldr	pc, [ip, #3148]!	; 0xc4c

0001139c <acos@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #48, 20	; 0x30000
   113a4:	ldr	pc, [ip, #3140]!	; 0xc44

000113a8 <strchr@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #48, 20	; 0x30000
   113b0:	ldr	pc, [ip, #3132]!	; 0xc3c

000113b4 <hypot@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #48, 20	; 0x30000
   113bc:	ldr	pc, [ip, #3124]!	; 0xc34

000113c0 <__printf_chk@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #48, 20	; 0x30000
   113c8:	ldr	pc, [ip, #3116]!	; 0xc2c

000113cc <floor@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #48, 20	; 0x30000
   113d4:	ldr	pc, [ip, #3108]!	; 0xc24

Disassembly of section .text:

000113d8 <_Znwj@@Base-0x17288>:
   113d8:	push	{r4, r5, r6, lr}
   113dc:	ldr	r4, [pc, #52]	; 11418 <floor@plt+0x4c>
   113e0:	add	r0, r4, #1104	; 0x450
   113e4:	bl	27030 <floor@plt+0x15c64>
   113e8:	add	r5, r4, #24
   113ec:	add	r0, r4, #8
   113f0:	bl	1c6c8 <floor@plt+0xb2fc>
   113f4:	mov	r0, r5
   113f8:	bl	11a34 <floor@plt+0x668>
   113fc:	mov	r0, r5
   11400:	ldr	r2, [pc, #20]	; 1141c <floor@plt+0x50>
   11404:	ldr	r1, [pc, #20]	; 11420 <floor@plt+0x54>
   11408:	bl	110cc <__aeabi_atexit@plt>
   1140c:	add	r0, r4, #36	; 0x24
   11410:	pop	{r4, r5, r6, lr}
   11414:	b	1df58 <floor@plt+0xcb8c>
   11418:	andeq	r2, r4, r0, ror #8
   1141c:	andeq	r2, r4, r4
   11420:	andeq	r1, r1, r8, ror r9
   11424:	push	{r4, r5, r6, r7, r8, lr}
   11428:	ldr	r4, [pc, #128]	; 114b0 <floor@plt+0xe4>
   1142c:	ldr	r5, [pc, #128]	; 114b4 <floor@plt+0xe8>
   11430:	add	r6, r4, #32
   11434:	add	r0, r4, #76	; 0x4c
   11438:	bl	27030 <floor@plt+0x15c64>
   1143c:	mov	r0, r6
   11440:	bl	16234 <floor@plt+0x4e68>
   11444:	add	r7, r4, #8
   11448:	mov	r2, r5
   1144c:	ldr	r1, [pc, #100]	; 114b8 <floor@plt+0xec>
   11450:	mov	r0, r6
   11454:	ldr	r6, [pc, #96]	; 114bc <floor@plt+0xf0>
   11458:	bl	110cc <__aeabi_atexit@plt>
   1145c:	mov	r0, r7
   11460:	bl	28870 <_ZdlPv@@Base+0x1c0>
   11464:	mov	r2, r5
   11468:	mov	r1, r6
   1146c:	mov	r0, r7
   11470:	add	r7, r4, #20
   11474:	bl	110cc <__aeabi_atexit@plt>
   11478:	mov	r0, r7
   1147c:	bl	28870 <_ZdlPv@@Base+0x1c0>
   11480:	add	r4, r4, #60	; 0x3c
   11484:	mov	r2, r5
   11488:	mov	r1, r6
   1148c:	mov	r0, r7
   11490:	bl	110cc <__aeabi_atexit@plt>
   11494:	mov	r0, r4
   11498:	bl	28870 <_ZdlPv@@Base+0x1c0>
   1149c:	mov	r2, r5
   114a0:	mov	r1, r6
   114a4:	mov	r0, r4
   114a8:	pop	{r4, r5, r6, r7, r8, lr}
   114ac:	b	110cc <__aeabi_atexit@plt>
   114b0:			; <UNDEFINED> instruction: 0x000428b8
   114b4:	andeq	r2, r4, r4
   114b8:	strdeq	r5, [r1], -ip
   114bc:	andeq	r8, r2, ip, asr #19
   114c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   114c4:	sub	sp, sp, #44	; 0x2c
   114c8:	ldr	sl, [pc, #748]	; 117bc <floor@plt+0x3f0>
   114cc:	mov	r5, r1
   114d0:	mov	r6, r0
   114d4:	ldr	r3, [sl]
   114d8:	ldr	r1, [pc, #736]	; 117c0 <floor@plt+0x3f4>
   114dc:	mov	r0, #1
   114e0:	ldr	fp, [pc, #732]	; 117c4 <floor@plt+0x3f8>
   114e4:	str	r3, [sp, #36]	; 0x24
   114e8:	ldr	r8, [pc, #728]	; 117c8 <floor@plt+0x3fc>
   114ec:	bl	11234 <setlocale@plt>
   114f0:	ldr	r7, [pc, #724]	; 117cc <floor@plt+0x400>
   114f4:	ldr	r3, [pc, #724]	; 117d0 <floor@plt+0x404>
   114f8:	ldr	r2, [r5]
   114fc:	ldr	r0, [fp]
   11500:	ldr	r1, [pc, #716]	; 117d4 <floor@plt+0x408>
   11504:	mov	r9, #0
   11508:	str	r2, [r3]
   1150c:	bl	11180 <setbuf@plt>
   11510:	str	r9, [sp, #12]
   11514:	mov	r4, #0
   11518:	str	r4, [sp]
   1151c:	mov	r3, r8
   11520:	mov	r2, r7
   11524:	mov	r1, r5
   11528:	mov	r0, r6
   1152c:	bl	282f0 <floor@plt+0x16f24>
   11530:	cmn	r0, #1
   11534:	beq	116a8 <floor@plt+0x2dc>
   11538:	cmp	r0, #102	; 0x66
   1153c:	beq	11674 <floor@plt+0x2a8>
   11540:	ble	11578 <floor@plt+0x1ac>
   11544:	cmp	r0, #118	; 0x76
   11548:	beq	11628 <floor@plt+0x25c>
   1154c:	bgt	115a0 <floor@plt+0x1d4>
   11550:	cmp	r0, #112	; 0x70
   11554:	beq	115e4 <floor@plt+0x218>
   11558:	cmp	r0, #116	; 0x74
   1155c:	beq	1168c <floor@plt+0x2c0>
   11560:	cmp	r0, #110	; 0x6e
   11564:	beq	1169c <floor@plt+0x2d0>
   11568:	ldr	r1, [pc, #616]	; 117d8 <floor@plt+0x40c>
   1156c:	ldr	r0, [pc, #616]	; 117dc <floor@plt+0x410>
   11570:	bl	26c88 <floor@plt+0x158bc>
   11574:	b	11514 <floor@plt+0x148>
   11578:	cmp	r0, #83	; 0x53
   1157c:	beq	11664 <floor@plt+0x298>
   11580:	ble	115c4 <floor@plt+0x1f8>
   11584:	cmp	r0, #85	; 0x55
   11588:	beq	11658 <floor@plt+0x28c>
   1158c:	blt	11514 <floor@plt+0x148>
   11590:	cmp	r0, #99	; 0x63
   11594:	addeq	r9, r9, #1
   11598:	beq	11514 <floor@plt+0x148>
   1159c:	b	11568 <floor@plt+0x19c>
   115a0:	cmp	r0, #122	; 0x7a
   115a4:	beq	11644 <floor@plt+0x278>
   115a8:	cmp	r0, #256	; 0x100
   115ac:	bne	115dc <floor@plt+0x210>
   115b0:	ldr	r3, [pc, #552]	; 117e0 <floor@plt+0x414>
   115b4:	ldr	r0, [r3]
   115b8:	bl	1b600 <floor@plt+0xa234>
   115bc:	mov	r0, r4
   115c0:	bl	11108 <exit@plt>
   115c4:	cmp	r0, #67	; 0x43
   115c8:	bne	11608 <floor@plt+0x23c>
   115cc:	ldr	r3, [pc, #528]	; 117e4 <floor@plt+0x418>
   115d0:	mov	r2, #1
   115d4:	str	r2, [r3, #4]
   115d8:	b	11514 <floor@plt+0x148>
   115dc:	cmp	r0, #120	; 0x78
   115e0:	bne	11568 <floor@plt+0x19c>
   115e4:	uxtb	r1, r0
   115e8:	add	r0, sp, #16
   115ec:	bl	270a4 <floor@plt+0x15cd8>
   115f0:	ldr	r3, [pc, #496]	; 117e8 <floor@plt+0x41c>
   115f4:	add	r1, sp, #16
   115f8:	mov	r2, r3
   115fc:	ldr	r0, [pc, #488]	; 117ec <floor@plt+0x420>
   11600:	bl	27488 <floor@plt+0x160bc>
   11604:	b	11514 <floor@plt+0x148>
   11608:	cmp	r0, #68	; 0x44
   1160c:	beq	11514 <floor@plt+0x148>
   11610:	cmp	r0, #63	; 0x3f
   11614:	bne	11568 <floor@plt+0x19c>
   11618:	ldr	r0, [fp]
   1161c:	bl	1b600 <floor@plt+0xa234>
   11620:	mov	r0, #1
   11624:	bl	11108 <exit@plt>
   11628:	ldr	r3, [pc, #448]	; 117f0 <floor@plt+0x424>
   1162c:	ldr	r1, [pc, #448]	; 117f4 <floor@plt+0x428>
   11630:	mov	r0, #1
   11634:	ldr	r2, [r3]
   11638:	bl	113c0 <__printf_chk@plt>
   1163c:	mov	r0, r4
   11640:	bl	11108 <exit@plt>
   11644:	ldr	r2, [pc, #408]	; 117e4 <floor@plt+0x418>
   11648:	ldr	r3, [r2, #20]
   1164c:	add	r3, r3, #1
   11650:	str	r3, [r2, #20]
   11654:	b	11514 <floor@plt+0x148>
   11658:	ldr	r3, [pc, #408]	; 117f8 <floor@plt+0x42c>
   1165c:	str	r4, [r3, #4]
   11660:	b	11514 <floor@plt+0x148>
   11664:	ldr	r3, [pc, #396]	; 117f8 <floor@plt+0x42c>
   11668:	mov	r2, #1
   1166c:	str	r2, [r3, #4]
   11670:	b	11514 <floor@plt+0x148>
   11674:	ldr	r2, [pc, #364]	; 117e8 <floor@plt+0x41c>
   11678:	ldr	r0, [pc, #380]	; 117fc <floor@plt+0x430>
   1167c:	mov	r3, r2
   11680:	mov	r1, r2
   11684:	bl	274cc <floor@plt+0x16100>
   11688:	b	11514 <floor@plt+0x148>
   1168c:	ldr	r3, [sp, #12]
   11690:	add	r3, r3, #1
   11694:	str	r3, [sp, #12]
   11698:	b	11514 <floor@plt+0x148>
   1169c:	ldr	r3, [pc, #340]	; 117f8 <floor@plt+0x42c>
   116a0:	str	r4, [r3, #8]
   116a4:	b	11514 <floor@plt+0x148>
   116a8:	bl	120d0 <floor@plt+0xd04>
   116ac:	cmp	r9, #0
   116b0:	bne	117a0 <floor@plt+0x3d4>
   116b4:	ldr	r3, [sp, #12]
   116b8:	cmp	r3, #0
   116bc:	beq	1177c <floor@plt+0x3b0>
   116c0:	bl	2689c <floor@plt+0x154d0>
   116c4:	ldr	r7, [pc, #280]	; 117e4 <floor@plt+0x418>
   116c8:	ldr	r3, [pc, #296]	; 117f8 <floor@plt+0x42c>
   116cc:	mov	r2, #92	; 0x5c
   116d0:	str	r9, [r3]
   116d4:	str	r2, [r3, #12]
   116d8:	str	r0, [r7, #8]
   116dc:	ldr	r3, [pc, #284]	; 11800 <floor@plt+0x434>
   116e0:	ldr	r3, [r3]
   116e4:	cmp	r3, r6
   116e8:	bge	11794 <floor@plt+0x3c8>
   116ec:	sub	r3, r3, #-1073741823	; 0xc0000001
   116f0:	add	r6, r5, r6, lsl #2
   116f4:	sub	r6, r6, #4
   116f8:	add	r5, r5, r3, lsl #2
   116fc:	ldr	r0, [r5, #4]!
   11700:	bl	1abd8 <floor@plt+0x980c>
   11704:	cmp	r5, r6
   11708:	bne	116fc <floor@plt+0x330>
   1170c:	ldr	r0, [r7, #8]
   11710:	cmp	r0, #0
   11714:	beq	11724 <floor@plt+0x358>
   11718:	ldr	r3, [r0]
   1171c:	ldr	r3, [r3, #4]
   11720:	blx	r3
   11724:	ldr	r4, [pc, #180]	; 117e0 <floor@plt+0x414>
   11728:	ldr	r0, [r4]
   1172c:	bl	11240 <ferror@plt>
   11730:	cmp	r0, #0
   11734:	bne	11764 <floor@plt+0x398>
   11738:	ldr	r0, [r4]
   1173c:	bl	1130c <fflush@plt>
   11740:	cmp	r0, #0
   11744:	blt	11764 <floor@plt+0x398>
   11748:	ldr	r2, [sp, #36]	; 0x24
   1174c:	ldr	r3, [sl]
   11750:	ldr	r0, [r7, #16]
   11754:	cmp	r2, r3
   11758:	bne	117b8 <floor@plt+0x3ec>
   1175c:	add	sp, sp, #44	; 0x2c
   11760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11764:	ldr	r3, [pc, #124]	; 117e8 <floor@plt+0x41c>
   11768:	ldr	r0, [pc, #148]	; 11804 <floor@plt+0x438>
   1176c:	mov	r2, r3
   11770:	mov	r1, r3
   11774:	bl	274cc <floor@plt+0x16100>
   11778:	b	11748 <floor@plt+0x37c>
   1177c:	bl	25b04 <floor@plt+0x14738>
   11780:	ldr	r7, [pc, #92]	; 117e4 <floor@plt+0x418>
   11784:	str	r0, [r7, #8]
   11788:	ldr	r0, [pc, #120]	; 11808 <floor@plt+0x43c>
   1178c:	bl	1112c <puts@plt>
   11790:	b	116dc <floor@plt+0x310>
   11794:	ldr	r0, [pc, #112]	; 1180c <floor@plt+0x440>
   11798:	bl	1abd8 <floor@plt+0x980c>
   1179c:	b	1170c <floor@plt+0x340>
   117a0:	bl	26bf4 <floor@plt+0x15828>
   117a4:	ldr	r7, [pc, #56]	; 117e4 <floor@plt+0x418>
   117a8:	ldr	r3, [pc, #72]	; 117f8 <floor@plt+0x42c>
   117ac:	str	r4, [r3]
   117b0:	str	r0, [r7, #8]
   117b4:	b	116dc <floor@plt+0x310>
   117b8:	bl	111e0 <__stack_chk_fail@plt>
   117bc:	andeq	r1, r4, r0, ror sp
   117c0:	andeq	pc, r2, r4, asr #1
   117c4:	andeq	r2, r4, r0, asr r4
   117c8:	andeq	lr, r2, r8, asr pc
   117cc:	andeq	pc, r2, r8, asr #1
   117d0:	andeq	r5, r4, r0, lsr r5
   117d4:	andeq	r2, r4, r4, lsr #18
   117d8:	andeq	lr, r2, ip, ror #31
   117dc:	andeq	r0, r0, sl, asr r2
   117e0:	andeq	r2, r4, r4, asr r4
   117e4:	andeq	r2, r4, r8, lsl #18
   117e8:			; <UNDEFINED> instruction: 0x000454b8
   117ec:	strdeq	pc, [r2], -r4
   117f0:	andeq	r2, r4, ip, lsr r4
   117f4:	andeq	pc, r2, ip, lsl #2
   117f8:	andeq	r2, r4, r0, lsr #6
   117fc:	ldrdeq	pc, [r2], -r8
   11800:	andeq	r2, r4, r0, lsr r3
   11804:	andeq	pc, r2, r8, asr #2
   11808:	andeq	pc, r2, r8, lsr #2
   1180c:	andeq	lr, r2, r0, asr #24
   11810:	ldr	r0, [pc]	; 11818 <floor@plt+0x44c>
   11814:	b	27030 <floor@plt+0x15c64>
   11818:	andeq	r2, r4, r0, lsr #18
   1181c:	ldr	r0, [pc]	; 11824 <floor@plt+0x458>
   11820:	b	27030 <floor@plt+0x15c64>
   11824:	andeq	r4, r4, r4, lsr #19
   11828:	ldr	r0, [pc]	; 11830 <floor@plt+0x464>
   1182c:	b	27030 <floor@plt+0x15c64>
   11830:	andeq	r4, r4, r8, lsr #19
   11834:	ldr	r0, [pc]	; 1183c <floor@plt+0x470>
   11838:	b	27030 <floor@plt+0x15c64>
   1183c:	andeq	r4, r4, ip, lsr #19
   11840:	ldr	r0, [pc]	; 11848 <floor@plt+0x47c>
   11844:	b	27030 <floor@plt+0x15c64>
   11848:			; <UNDEFINED> instruction: 0x000449b0
   1184c:	ldr	r3, [pc, #12]	; 11860 <floor@plt+0x494>
   11850:	ldr	r3, [r3]
   11854:	cmp	r3, #0
   11858:	bxne	lr
   1185c:	b	26ce4 <floor@plt+0x15918>
   11860:			; <UNDEFINED> instruction: 0x000449b4
   11864:	ldr	r3, [pc, #8]	; 11874 <floor@plt+0x4a8>
   11868:	mov	r2, #0
   1186c:	str	r2, [r3]
   11870:	bx	lr
   11874:			; <UNDEFINED> instruction: 0x000454b8
   11878:	ldr	r0, [pc]	; 11880 <floor@plt+0x4b4>
   1187c:	b	27030 <floor@plt+0x15c64>
   11880:	andeq	r5, r4, r8, lsr #10
   11884:	mov	fp, #0
   11888:	mov	lr, #0
   1188c:	pop	{r1}		; (ldr r1, [sp], #4)
   11890:	mov	r2, sp
   11894:	push	{r2}		; (str r2, [sp, #-4]!)
   11898:	push	{r0}		; (str r0, [sp, #-4]!)
   1189c:	ldr	ip, [pc, #16]	; 118b4 <floor@plt+0x4e8>
   118a0:	push	{ip}		; (str ip, [sp, #-4]!)
   118a4:	ldr	r0, [pc, #12]	; 118b8 <floor@plt+0x4ec>
   118a8:	ldr	r3, [pc, #12]	; 118bc <floor@plt+0x4f0>
   118ac:	bl	1136c <__libc_start_main@plt>
   118b0:	bl	11168 <abort@plt>
   118b4:	andeq	sl, r2, r8, ror #31
   118b8:	andeq	r1, r1, r0, asr #9
   118bc:	andeq	sl, r2, r8, lsl #31
   118c0:	ldr	r3, [pc, #20]	; 118dc <floor@plt+0x510>
   118c4:	ldr	r2, [pc, #20]	; 118e0 <floor@plt+0x514>
   118c8:	add	r3, pc, r3
   118cc:	ldr	r2, [r3, r2]
   118d0:	cmp	r2, #0
   118d4:	bxeq	lr
   118d8:	b	11378 <__gmon_start__@plt>
   118dc:	andeq	r0, r3, r4, lsl r6
   118e0:	andeq	r0, r0, r8, lsl r1
   118e4:	ldr	r0, [pc, #24]	; 11904 <floor@plt+0x538>
   118e8:	ldr	r3, [pc, #24]	; 11908 <floor@plt+0x53c>
   118ec:	cmp	r3, r0
   118f0:	bxeq	lr
   118f4:	ldr	r3, [pc, #16]	; 1190c <floor@plt+0x540>
   118f8:	cmp	r3, #0
   118fc:	bxeq	lr
   11900:	bx	r3
   11904:	andeq	r2, r4, r8, asr #8
   11908:	andeq	r2, r4, r8, asr #8
   1190c:	andeq	r0, r0, r0
   11910:	ldr	r0, [pc, #36]	; 1193c <floor@plt+0x570>
   11914:	ldr	r1, [pc, #36]	; 11940 <floor@plt+0x574>
   11918:	sub	r1, r1, r0
   1191c:	asr	r1, r1, #2
   11920:	add	r1, r1, r1, lsr #31
   11924:	asrs	r1, r1, #1
   11928:	bxeq	lr
   1192c:	ldr	r3, [pc, #16]	; 11944 <floor@plt+0x578>
   11930:	cmp	r3, #0
   11934:	bxeq	lr
   11938:	bx	r3
   1193c:	andeq	r2, r4, r8, asr #8
   11940:	andeq	r2, r4, r8, asr #8
   11944:	andeq	r0, r0, r0
   11948:	push	{r4, lr}
   1194c:	ldr	r4, [pc, #24]	; 1196c <floor@plt+0x5a0>
   11950:	ldrb	r3, [r4]
   11954:	cmp	r3, #0
   11958:	popne	{r4, pc}
   1195c:	bl	118e4 <floor@plt+0x518>
   11960:	mov	r3, #1
   11964:	strb	r3, [r4]
   11968:	pop	{r4, pc}
   1196c:	andeq	r2, r4, r8, asr r4
   11970:	b	11910 <floor@plt+0x544>
   11974:	andeq	r0, r0, r0
   11978:	ldr	r3, [r0, #4]
   1197c:	push	{r4, r5, r6, lr}
   11980:	cmp	r3, #0
   11984:	mov	r5, r0
   11988:	beq	119ac <floor@plt+0x5e0>
   1198c:	mov	r4, #0
   11990:	ldr	r3, [r5]
   11994:	ldr	r0, [r3, r4, lsl #3]
   11998:	bl	110e4 <free@plt>
   1199c:	ldr	r3, [r5, #4]
   119a0:	add	r4, r4, #1
   119a4:	cmp	r3, r4
   119a8:	bhi	11990 <floor@plt+0x5c4>
   119ac:	ldr	r0, [r5]
   119b0:	cmp	r0, #0
   119b4:	beq	119bc <floor@plt+0x5f0>
   119b8:	bl	1121c <_ZdaPv@plt>
   119bc:	mov	r0, r5
   119c0:	pop	{r4, r5, r6, pc}
   119c4:	ldr	r3, [pc, #68]	; 11a10 <floor@plt+0x644>
   119c8:	smull	r3, r2, r3, r0
   119cc:	asr	r3, r0, #31
   119d0:	rsb	r3, r3, r2, asr #2
   119d4:	add	r3, r3, r3, lsl #2
   119d8:	sub	r3, r0, r3, lsl #1
   119dc:	cmp	r3, #2
   119e0:	beq	11a08 <floor@plt+0x63c>
   119e4:	cmp	r3, #3
   119e8:	beq	11a00 <floor@plt+0x634>
   119ec:	ldr	r2, [pc, #32]	; 11a14 <floor@plt+0x648>
   119f0:	cmp	r3, #1
   119f4:	ldr	r0, [pc, #28]	; 11a18 <floor@plt+0x64c>
   119f8:	movne	r0, r2
   119fc:	bx	lr
   11a00:	ldr	r0, [pc, #20]	; 11a1c <floor@plt+0x650>
   11a04:	bx	lr
   11a08:	ldr	r0, [pc, #16]	; 11a20 <floor@plt+0x654>
   11a0c:	bx	lr
   11a10:	strbtvs	r6, [r6], -r7, ror #12
   11a14:	andeq	lr, r2, r0, asr #21
   11a18:	andeq	lr, r2, ip, asr #7
   11a1c:	andeq	lr, r2, r4, asr #7
   11a20:	andeq	lr, r2, r8, asr #7
   11a24:	mov	r2, #0
   11a28:	str	r2, [r0]
   11a2c:	str	r2, [r0, #4]
   11a30:	bx	lr
   11a34:	mov	r3, #17
   11a38:	push	{r4, lr}
   11a3c:	mov	r4, r0
   11a40:	str	r3, [r0, #4]
   11a44:	mov	r0, #136	; 0x88
   11a48:	bl	1115c <_Znaj@plt>
   11a4c:	mov	r2, #0
   11a50:	mov	r3, r0
   11a54:	add	r1, r0, #136	; 0x88
   11a58:	str	r2, [r3]
   11a5c:	str	r2, [r3, #4]
   11a60:	add	r3, r3, #8
   11a64:	cmp	r1, r3
   11a68:	bne	11a58 <floor@plt+0x68c>
   11a6c:	str	r0, [r4]
   11a70:	str	r2, [r4, #8]
   11a74:	mov	r0, r4
   11a78:	pop	{r4, pc}
   11a7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a80:	subs	r7, r1, #0
   11a84:	sub	sp, sp, #12
   11a88:	mov	r9, r0
   11a8c:	mov	sl, r2
   11a90:	beq	11b48 <floor@plt+0x77c>
   11a94:	mov	r0, r7
   11a98:	bl	286c8 <_ZdlPv@@Base+0x18>
   11a9c:	ldr	r8, [r9, #4]
   11aa0:	mov	r1, r8
   11aa4:	str	r0, [sp, #4]
   11aa8:	bl	110fc <__aeabi_uidivmod@plt>
   11aac:	ldr	r5, [r9]
   11ab0:	mov	r4, r1
   11ab4:	b	11ad0 <floor@plt+0x704>
   11ab8:	bl	112d0 <strcmp@plt>
   11abc:	cmp	r0, #0
   11ac0:	beq	11b38 <floor@plt+0x76c>
   11ac4:	cmp	r4, #0
   11ac8:	subeq	r4, r8, #1
   11acc:	subne	r4, r4, #1
   11ad0:	ldr	fp, [r5, r4, lsl #3]
   11ad4:	mov	r1, r7
   11ad8:	subs	r0, fp, #0
   11adc:	add	r6, r5, r4, lsl #3
   11ae0:	bne	11ab8 <floor@plt+0x6ec>
   11ae4:	cmp	sl, #0
   11ae8:	beq	11b2c <floor@plt+0x760>
   11aec:	ldr	r4, [r9, #8]
   11af0:	cmp	r8, r4, lsl #2
   11af4:	bls	11b58 <floor@plt+0x78c>
   11af8:	mov	r0, r7
   11afc:	bl	11288 <strlen@plt>
   11b00:	add	r4, r4, #1
   11b04:	add	r5, r0, #1
   11b08:	mov	r0, r5
   11b0c:	bl	1127c <malloc@plt>
   11b10:	mov	r2, r5
   11b14:	mov	r1, r7
   11b18:	mov	fp, r0
   11b1c:	bl	11270 <memcpy@plt>
   11b20:	str	fp, [r6]
   11b24:	str	sl, [r6, #4]
   11b28:	str	r4, [r9, #8]
   11b2c:	mov	r0, fp
   11b30:	add	sp, sp, #12
   11b34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b38:	mov	r0, fp
   11b3c:	str	sl, [r6, #4]
   11b40:	add	sp, sp, #12
   11b44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b48:	ldr	r1, [pc, #320]	; 11c90 <floor@plt+0x8c4>
   11b4c:	mov	r0, #47	; 0x2f
   11b50:	bl	26c88 <floor@plt+0x158bc>
   11b54:	b	11a94 <floor@plt+0x6c8>
   11b58:	mov	r0, r8
   11b5c:	bl	28710 <_ZdlPv@@Base+0x60>
   11b60:	cmn	r0, #-268435455	; 0xf0000001
   11b64:	mov	r6, r0
   11b68:	str	r0, [r9, #4]
   11b6c:	lslls	r0, r0, #3
   11b70:	mvnhi	r0, #0
   11b74:	bl	1115c <_Znaj@plt>
   11b78:	subs	r2, r6, #1
   11b7c:	movpl	r1, #0
   11b80:	mov	r4, r0
   11b84:	movpl	r3, r0
   11b88:	bmi	11ba4 <floor@plt+0x7d8>
   11b8c:	sub	r2, r2, #1
   11b90:	cmn	r2, #1
   11b94:	str	r1, [r3]
   11b98:	str	r1, [r3, #4]
   11b9c:	add	r3, r3, #8
   11ba0:	bne	11b8c <floor@plt+0x7c0>
   11ba4:	cmp	r8, #0
   11ba8:	str	r4, [r9]
   11bac:	addne	r4, r5, r8, lsl #3
   11bb0:	addne	r4, r4, #4
   11bb4:	addne	r6, r5, #4
   11bb8:	bne	11bd0 <floor@plt+0x804>
   11bbc:	b	11c34 <floor@plt+0x868>
   11bc0:	bl	110e4 <free@plt>
   11bc4:	add	r6, r6, #8
   11bc8:	cmp	r4, r6
   11bcc:	beq	11c30 <floor@plt+0x864>
   11bd0:	ldr	r0, [r6, #-4]
   11bd4:	cmp	r0, #0
   11bd8:	beq	11bc4 <floor@plt+0x7f8>
   11bdc:	ldr	r3, [r6]
   11be0:	cmp	r3, #0
   11be4:	beq	11bc0 <floor@plt+0x7f4>
   11be8:	bl	286c8 <_ZdlPv@@Base+0x18>
   11bec:	ldr	r8, [r9, #4]
   11bf0:	mov	r1, r8
   11bf4:	bl	110fc <__aeabi_uidivmod@plt>
   11bf8:	ldr	r3, [r9]
   11bfc:	b	11c0c <floor@plt+0x840>
   11c00:	cmp	r1, #0
   11c04:	subeq	r1, r8, #1
   11c08:	subne	r1, r1, #1
   11c0c:	ldr	r2, [r3, r1, lsl #3]
   11c10:	add	r0, r3, r1, lsl #3
   11c14:	cmp	r2, #0
   11c18:	bne	11c00 <floor@plt+0x834>
   11c1c:	ldrd	r2, [r6, #-4]
   11c20:	add	r6, r6, #8
   11c24:	cmp	r4, r6
   11c28:	strd	r2, [r0]
   11c2c:	bne	11bd0 <floor@plt+0x804>
   11c30:	ldr	r4, [r9]
   11c34:	ldr	fp, [r9, #4]
   11c38:	ldr	r0, [sp, #4]
   11c3c:	mov	r1, fp
   11c40:	bl	110fc <__aeabi_uidivmod@plt>
   11c44:	b	11c54 <floor@plt+0x888>
   11c48:	cmp	r1, #0
   11c4c:	subeq	r1, fp, #1
   11c50:	subne	r1, r1, #1
   11c54:	ldr	r2, [r4, r1, lsl #3]
   11c58:	lsl	r8, r1, #3
   11c5c:	cmp	r2, #0
   11c60:	add	r6, r4, r8
   11c64:	bne	11c48 <floor@plt+0x87c>
   11c68:	cmp	r5, #0
   11c6c:	beq	11c88 <floor@plt+0x8bc>
   11c70:	mov	r0, r5
   11c74:	bl	1121c <_ZdaPv@plt>
   11c78:	ldr	r6, [r9]
   11c7c:	ldr	r4, [r9, #8]
   11c80:	add	r6, r6, r8
   11c84:	b	11af8 <floor@plt+0x72c>
   11c88:	ldr	r4, [r9, #8]
   11c8c:	b	11af8 <floor@plt+0x72c>
   11c90:	ldrdeq	lr, [r2], -r0
   11c94:	push	{r4, r5, r6, r7, r8, lr}
   11c98:	subs	r6, r1, #0
   11c9c:	mov	r5, r0
   11ca0:	beq	11d04 <floor@plt+0x938>
   11ca4:	mov	r0, r6
   11ca8:	bl	286c8 <_ZdlPv@@Base+0x18>
   11cac:	ldr	r8, [r5, #4]
   11cb0:	mov	r1, r8
   11cb4:	bl	110fc <__aeabi_uidivmod@plt>
   11cb8:	ldr	r5, [r5]
   11cbc:	mov	r4, r1
   11cc0:	b	11cdc <floor@plt+0x910>
   11cc4:	bl	112d0 <strcmp@plt>
   11cc8:	cmp	r0, #0
   11ccc:	beq	11cf8 <floor@plt+0x92c>
   11cd0:	cmp	r4, #0
   11cd4:	subeq	r4, r8, #1
   11cd8:	subne	r4, r4, #1
   11cdc:	ldr	r3, [r5, r4, lsl #3]
   11ce0:	mov	r1, r6
   11ce4:	subs	r0, r3, #0
   11ce8:	add	r7, r5, r4, lsl #3
   11cec:	bne	11cc4 <floor@plt+0x8f8>
   11cf0:	mov	r0, r3
   11cf4:	pop	{r4, r5, r6, r7, r8, pc}
   11cf8:	ldr	r3, [r7, #4]
   11cfc:	mov	r0, r3
   11d00:	pop	{r4, r5, r6, r7, r8, pc}
   11d04:	ldr	r1, [pc, #8]	; 11d14 <floor@plt+0x948>
   11d08:	mov	r0, #47	; 0x2f
   11d0c:	bl	26c88 <floor@plt+0x158bc>
   11d10:	b	11ca4 <floor@plt+0x8d8>
   11d14:	ldrdeq	lr, [r2], -r0
   11d18:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11d1c:	mov	sl, r1
   11d20:	ldr	r7, [r1]
   11d24:	mov	r5, r0
   11d28:	cmp	r7, #0
   11d2c:	beq	11d94 <floor@plt+0x9c8>
   11d30:	mov	r0, r7
   11d34:	bl	286c8 <_ZdlPv@@Base+0x18>
   11d38:	ldr	r9, [r5, #4]
   11d3c:	mov	r1, r9
   11d40:	bl	110fc <__aeabi_uidivmod@plt>
   11d44:	ldr	r6, [r5]
   11d48:	mov	r4, r1
   11d4c:	b	11d68 <floor@plt+0x99c>
   11d50:	bl	112d0 <strcmp@plt>
   11d54:	cmp	r0, #0
   11d58:	beq	11d84 <floor@plt+0x9b8>
   11d5c:	cmp	r4, #0
   11d60:	subeq	r4, r9, #1
   11d64:	subne	r4, r4, #1
   11d68:	ldr	r5, [r6, r4, lsl #3]
   11d6c:	mov	r1, r7
   11d70:	subs	r0, r5, #0
   11d74:	add	r8, r6, r4, lsl #3
   11d78:	bne	11d50 <floor@plt+0x984>
   11d7c:	mov	r0, r5
   11d80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d84:	str	r5, [sl]
   11d88:	ldr	r5, [r8, #4]
   11d8c:	mov	r0, r5
   11d90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d94:	ldr	r1, [pc, #8]	; 11da4 <floor@plt+0x9d8>
   11d98:	mov	r0, #47	; 0x2f
   11d9c:	bl	26c88 <floor@plt+0x158bc>
   11da0:	b	11d30 <floor@plt+0x964>
   11da4:	ldrdeq	lr, [r2], -r0
   11da8:	mov	r2, #0
   11dac:	stm	r0, {r1, r2}
   11db0:	bx	lr
   11db4:	ldr	ip, [r0]
   11db8:	push	{r4, r5, r6, r7, lr}
   11dbc:	ldrd	r4, [ip]
   11dc0:	ldr	r3, [r0, #4]
   11dc4:	cmp	r3, r5
   11dc8:	bcs	11e38 <floor@plt+0xa6c>
   11dcc:	ldr	lr, [r4, r3, lsl #3]
   11dd0:	add	r6, r4, r3, lsl #3
   11dd4:	cmp	lr, #0
   11dd8:	addne	ip, r3, #1
   11ddc:	bne	11e1c <floor@plt+0xa50>
   11de0:	add	r3, r3, #1
   11de4:	sub	r7, r4, #8
   11de8:	b	11e00 <floor@plt+0xa34>
   11dec:	ldr	lr, [r7, ip, lsl #3]
   11df0:	add	r6, r4, r3, lsl #3
   11df4:	cmp	lr, #0
   11df8:	mov	r3, ip
   11dfc:	bne	11e1c <floor@plt+0xa50>
   11e00:	cmp	r5, r3
   11e04:	add	ip, r3, #1
   11e08:	bne	11dec <floor@plt+0xa20>
   11e0c:	mov	r3, #0
   11e10:	str	r5, [r0, #4]
   11e14:	mov	r0, r3
   11e18:	pop	{r4, r5, r6, r7, pc}
   11e1c:	ldr	r4, [r6, #4]
   11e20:	mov	r3, #1
   11e24:	str	lr, [r1]
   11e28:	str	r4, [r2]
   11e2c:	str	ip, [r0, #4]
   11e30:	mov	r0, r3
   11e34:	pop	{r4, r5, r6, r7, pc}
   11e38:	mov	r3, #0
   11e3c:	b	11e14 <floor@plt+0xa48>
   11e40:	ldr	r2, [pc, #52]	; 11e7c <floor@plt+0xab0>
   11e44:	ldr	r3, [pc, #52]	; 11e80 <floor@plt+0xab4>
   11e48:	push	{r4, r5, r6, lr}
   11e4c:	mov	r5, r0
   11e50:	ldr	r4, [r2]
   11e54:	ldr	r0, [r3]
   11e58:	mov	r1, r5
   11e5c:	bl	11c94 <floor@plt+0x8c8>
   11e60:	cmp	r0, #0
   11e64:	popne	{r4, r5, r6, pc}
   11e68:	cmp	r4, #0
   11e6c:	popeq	{r4, r5, r6, pc}
   11e70:	ldr	r0, [r4, #28]
   11e74:	ldr	r4, [r4, #24]
   11e78:	b	11e58 <floor@plt+0xa8c>
   11e7c:	andeq	r2, r4, r0, ror #8
   11e80:	andeq	r2, r4, r8
   11e84:	push	{r4, r5, r6, lr}
   11e88:	mov	r6, r0
   11e8c:	mov	r0, #24
   11e90:	mov	r4, r1
   11e94:	bl	1115c <_Znaj@plt>
   11e98:	mov	ip, r4
   11e9c:	ldr	r4, [pc, #40]	; 11ecc <floor@plt+0xb00>
   11ea0:	mov	r5, r0
   11ea4:	mov	lr, r0
   11ea8:	ldm	ip!, {r0, r1, r2, r3}
   11eac:	stmia	lr!, {r0, r1, r2, r3}
   11eb0:	mov	r2, r5
   11eb4:	ldm	ip, {r0, r1}
   11eb8:	stm	lr, {r0, r1}
   11ebc:	mov	r1, r6
   11ec0:	ldr	r0, [r4]
   11ec4:	pop	{r4, r5, r6, lr}
   11ec8:	b	11a7c <floor@plt+0x6b0>
   11ecc:	andeq	r2, r4, r8
   11ed0:	push	{r4, lr}
   11ed4:	mov	r4, r1
   11ed8:	bl	11e40 <floor@plt+0xa74>
   11edc:	cmp	r0, #0
   11ee0:	ldrdne	r2, [r0, #8]
   11ee4:	movne	r0, #1
   11ee8:	strdne	r2, [r4]
   11eec:	pop	{r4, pc}
   11ef0:	push	{r4, r5, r6, r7, r8, lr}
   11ef4:	mov	r4, r0
   11ef8:	vpush	{d8}
   11efc:	mov	r0, #24
   11f00:	vmov.f64	d8, d0
   11f04:	bl	1115c <_Znaj@plt>
   11f08:	ldr	r1, [pc, #136]	; 11f98 <floor@plt+0xbcc>
   11f0c:	mov	r6, #0
   11f10:	mov	r7, #0
   11f14:	mov	r2, #0
   11f18:	mov	r3, r0
   11f1c:	vstr	d8, [r0, #8]
   11f20:	str	r2, [r3]
   11f24:	ldr	r0, [r1]
   11f28:	mov	r2, r3
   11f2c:	strd	r6, [r3, #16]
   11f30:	mov	r1, r4
   11f34:	bl	11a7c <floor@plt+0x6b0>
   11f38:	mov	r0, r4
   11f3c:	ldr	r1, [pc, #88]	; 11f9c <floor@plt+0xbd0>
   11f40:	bl	112d0 <strcmp@plt>
   11f44:	cmp	r0, #0
   11f48:	bne	11f90 <floor@plt+0xbc4>
   11f4c:	ldr	r4, [pc, #76]	; 11fa0 <floor@plt+0xbd4>
   11f50:	mov	r3, #1
   11f54:	add	r5, r4, #528	; 0x210
   11f58:	b	11f6c <floor@plt+0xba0>
   11f5c:	add	r4, r4, #24
   11f60:	cmp	r4, r5
   11f64:	beq	11f90 <floor@plt+0xbc4>
   11f68:	ldr	r3, [r4, #16]
   11f6c:	cmp	r3, #0
   11f70:	beq	11f5c <floor@plt+0xb90>
   11f74:	vldr	d0, [r4, #8]
   11f78:	ldr	r0, [r4]
   11f7c:	add	r4, r4, #24
   11f80:	vmul.f64	d0, d8, d0
   11f84:	bl	11ef0 <floor@plt+0xb24>
   11f88:	cmp	r4, r5
   11f8c:	bne	11f68 <floor@plt+0xb9c>
   11f90:	vpop	{d8}
   11f94:	pop	{r4, r5, r6, r7, r8, pc}
   11f98:	andeq	r2, r4, r8
   11f9c:	andeq	lr, r2, ip, ror #7
   11fa0:	andeq	fp, r2, r0
   11fa4:	push	{r4, r5, r6, r7, r8, lr}
   11fa8:	vpush	{d8-d9}
   11fac:	ldr	r8, [pc, #200]	; 1207c <floor@plt+0xcb0>
   11fb0:	ldr	r5, [pc, #200]	; 12080 <floor@plt+0xcb4>
   11fb4:	ldr	r6, [pc, #200]	; 12084 <floor@plt+0xcb8>
   11fb8:	sub	sp, sp, #24
   11fbc:	ldr	r3, [r8]
   11fc0:	mov	r7, r0
   11fc4:	mov	r4, #0
   11fc8:	str	r3, [sp, #20]
   11fcc:	b	11fe4 <floor@plt+0xc18>
   11fd0:	add	r4, r4, #1
   11fd4:	cmp	r4, #22
   11fd8:	add	r5, r5, #24
   11fdc:	beq	1203c <floor@plt+0xc70>
   11fe0:	ldr	r6, [r5, #-24]	; 0xffffffe8
   11fe4:	mov	r1, r6
   11fe8:	mov	r0, r7
   11fec:	bl	112d0 <strcmp@plt>
   11ff0:	cmp	r0, #0
   11ff4:	bne	11fd0 <floor@plt+0xc04>
   11ff8:	ldr	r3, [pc, #136]	; 12088 <floor@plt+0xcbc>
   11ffc:	add	r4, r4, r4, lsl #1
   12000:	add	r4, r3, r4, lsl #3
   12004:	ldr	r3, [r4, #16]
   12008:	vldr	d8, [r4, #8]
   1200c:	cmp	r3, #0
   12010:	bne	12060 <floor@plt+0xc94>
   12014:	vmov.f64	d0, d8
   12018:	mov	r0, r6
   1201c:	bl	11ef0 <floor@plt+0xb24>
   12020:	ldr	r2, [sp, #20]
   12024:	ldr	r3, [r8]
   12028:	cmp	r2, r3
   1202c:	bne	12078 <floor@plt+0xcac>
   12030:	add	sp, sp, #24
   12034:	vpop	{d8-d9}
   12038:	pop	{r4, r5, r6, r7, r8, pc}
   1203c:	mov	r1, r7
   12040:	mov	r0, sp
   12044:	bl	27058 <floor@plt+0x15c8c>
   12048:	ldr	r3, [pc, #60]	; 1208c <floor@plt+0xcc0>
   1204c:	mov	r1, sp
   12050:	mov	r2, r3
   12054:	ldr	r0, [pc, #52]	; 12090 <floor@plt+0xcc4>
   12058:	bl	17778 <floor@plt+0x63ac>
   1205c:	b	12020 <floor@plt+0xc54>
   12060:	ldr	r0, [pc, #44]	; 12094 <floor@plt+0xcc8>
   12064:	bl	11e40 <floor@plt+0xa74>
   12068:	cmp	r0, #0
   1206c:	vldrne	d9, [r0, #8]
   12070:	vmul.f64	d8, d8, d9
   12074:	b	12014 <floor@plt+0xc48>
   12078:	bl	111e0 <__stack_chk_fail@plt>
   1207c:	andeq	r1, r4, r0, ror sp
   12080:	andeq	fp, r2, r8, lsl r0
   12084:	strdeq	lr, [r2], -r4
   12088:	andeq	fp, r2, r0
   1208c:			; <UNDEFINED> instruction: 0x000454b8
   12090:	strdeq	lr, [r2], -ip
   12094:	andeq	lr, r2, ip, ror #7
   12098:	push	{r4, r5, r6, lr}
   1209c:	ldr	r4, [pc, #40]	; 120cc <floor@plt+0xd00>
   120a0:	add	r5, r4, #528	; 0x210
   120a4:	add	r4, r4, #24
   120a8:	cmp	r4, r5
   120ac:	popeq	{r4, r5, r6, pc}
   120b0:	ldr	r3, [r4, #16]
   120b4:	cmp	r3, #0
   120b8:	bne	120a4 <floor@plt+0xcd8>
   120bc:	vldr	d0, [r4, #8]
   120c0:	ldr	r0, [r4]
   120c4:	bl	11ef0 <floor@plt+0xb24>
   120c8:	b	120a4 <floor@plt+0xcd8>
   120cc:	andeq	fp, r2, r0
   120d0:	ldr	r3, [pc, #24]	; 120f0 <floor@plt+0xd24>
   120d4:	mov	r0, #0
   120d8:	mov	r1, #0
   120dc:	mov	r2, #0
   120e0:	strd	r0, [r3, #8]
   120e4:	strd	r0, [r3, #16]
   120e8:	str	r2, [r3, #4]
   120ec:	b	12098 <floor@plt+0xccc>
   120f0:	andeq	r2, r4, r0, ror #8
   120f4:	push	{r4, r5, r6, r7, r8, lr}
   120f8:	sub	sp, sp, #16
   120fc:	ldr	r5, [pc, #316]	; 12240 <floor@plt+0xe74>
   12100:	ldr	r6, [pc, #316]	; 12244 <floor@plt+0xe78>
   12104:	ldr	r3, [r5]
   12108:	cmp	r3, #0
   1210c:	beq	12150 <floor@plt+0xd84>
   12110:	ldr	r4, [r6]
   12114:	subs	r0, r4, #0
   12118:	beq	12128 <floor@plt+0xd5c>
   1211c:	bl	11978 <floor@plt+0x5ac>
   12120:	mov	r0, r4
   12124:	bl	286b0 <_ZdlPv@@Base>
   12128:	ldr	r3, [r5]
   1212c:	mov	r0, r3
   12130:	ldr	r2, [r3, #28]
   12134:	ldr	r3, [r3, #24]
   12138:	str	r2, [r6]
   1213c:	str	r3, [r5]
   12140:	bl	286b0 <_ZdlPv@@Base>
   12144:	ldr	r3, [r5]
   12148:	cmp	r3, #0
   1214c:	bne	12110 <floor@plt+0xd44>
   12150:	ldr	r7, [r6]
   12154:	ldr	r3, [pc, #236]	; 12248 <floor@plt+0xe7c>
   12158:	cmp	r7, r3
   1215c:	bne	1222c <floor@plt+0xe60>
   12160:	mov	r4, #0
   12164:	ldr	r1, [r7, #4]
   12168:	ldr	r3, [r7]
   1216c:	mov	r8, r4
   12170:	cmp	r4, r1
   12174:	bcc	12188 <floor@plt+0xdbc>
   12178:	b	121dc <floor@plt+0xe10>
   1217c:	add	r4, r4, #1
   12180:	cmp	r4, r1
   12184:	beq	121dc <floor@plt+0xe10>
   12188:	ldr	r2, [r3, r4, lsl #3]
   1218c:	add	r0, r3, r4, lsl #3
   12190:	cmp	r2, #0
   12194:	beq	1217c <floor@plt+0xdb0>
   12198:	ldr	r6, [r0, #4]
   1219c:	add	r4, r4, #1
   121a0:	ldr	r0, [r6]
   121a4:	cmp	r0, #0
   121a8:	beq	12170 <floor@plt+0xda4>
   121ac:	ldr	r3, [r0]
   121b0:	ldr	r3, [r3, #8]
   121b4:	blx	r3
   121b8:	ldr	r1, [r7, #4]
   121bc:	str	r8, [r6]
   121c0:	cmp	r4, r1
   121c4:	ldr	r3, [r7]
   121c8:	vstr	d0, [sp]
   121cc:	vstr	d0, [r6, #8]
   121d0:	vstr	d1, [sp, #8]
   121d4:	vstr	d1, [r6, #16]
   121d8:	bcc	12188 <floor@plt+0xdbc>
   121dc:	ldr	r0, [r5, #36]	; 0x24
   121e0:	cmp	r0, #0
   121e4:	beq	12208 <floor@plt+0xe3c>
   121e8:	ldr	r3, [r0]
   121ec:	ldr	r2, [r0, #8]
   121f0:	ldr	r3, [r3, #4]
   121f4:	str	r2, [r5, #36]	; 0x24
   121f8:	blx	r3
   121fc:	ldr	r0, [r5, #36]	; 0x24
   12200:	cmp	r0, #0
   12204:	bne	121e8 <floor@plt+0xe1c>
   12208:	mov	r2, #0
   1220c:	mov	r3, #0
   12210:	mov	r1, #0
   12214:	str	r1, [r5, #40]	; 0x28
   12218:	str	r1, [r5, #4]
   1221c:	strd	r2, [r5, #8]
   12220:	strd	r2, [r5, #16]
   12224:	add	sp, sp, #16
   12228:	pop	{r4, r5, r6, r7, r8, pc}
   1222c:	ldr	r1, [pc, #24]	; 1224c <floor@plt+0xe80>
   12230:	ldr	r0, [pc, #24]	; 12250 <floor@plt+0xe84>
   12234:	bl	26c88 <floor@plt+0x158bc>
   12238:	ldr	r7, [r6]
   1223c:	b	12160 <floor@plt+0xd94>
   12240:	andeq	r2, r4, r0, ror #8
   12244:	andeq	r2, r4, r8
   12248:	andeq	r2, r4, r8, ror r4
   1224c:	ldrdeq	lr, [r2], -r0
   12250:	andeq	r0, r0, r7, lsl r7
   12254:	sub	r3, r0, #10
   12258:	cmp	r3, #10
   1225c:	bls	12264 <floor@plt+0xe98>
   12260:	b	119c4 <floor@plt+0x5f8>
   12264:	ldr	r0, [pc]	; 1226c <floor@plt+0xea0>
   12268:	bx	lr
   1226c:	andeq	lr, r2, r0, asr #21
   12270:	sub	r0, r0, #1
   12274:	cmp	r0, #9
   12278:	ldrls	r3, [pc, #12]	; 1228c <floor@plt+0xec0>
   1227c:	addls	r0, r3, r0, lsl #2
   12280:	ldrls	r0, [r0, #528]	; 0x210
   12284:	ldrhi	r0, [pc, #4]	; 12290 <floor@plt+0xec4>
   12288:	bx	lr
   1228c:	andeq	fp, r2, r0
   12290:	andeq	lr, r2, r0, lsr #8
   12294:	ldr	r3, [pc, #860]	; 125f8 <floor@plt+0x122c>
   12298:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1229c:	sub	sp, sp, #60	; 0x3c
   122a0:	ldr	r3, [r3]
   122a4:	mov	r6, r0
   122a8:	add	r0, sp, #28
   122ac:	str	r1, [sp, #20]
   122b0:	str	r2, [sp, #16]
   122b4:	str	r3, [sp, #52]	; 0x34
   122b8:	bl	28870 <_ZdlPv@@Base+0x1c0>
   122bc:	add	r0, sp, #40	; 0x28
   122c0:	bl	28870 <_ZdlPv@@Base+0x1c0>
   122c4:	ldr	r7, [pc, #816]	; 125fc <floor@plt+0x1230>
   122c8:	ldr	fp, [pc, #816]	; 12600 <floor@plt+0x1234>
   122cc:	ldr	r9, [pc, #816]	; 12604 <floor@plt+0x1238>
   122d0:	mov	r8, #0
   122d4:	mov	sl, #37	; 0x25
   122d8:	ldrb	r4, [r6]
   122dc:	cmp	r4, #0
   122e0:	beq	12320 <floor@plt+0xf54>
   122e4:	cmp	r4, #37	; 0x25
   122e8:	add	r5, r6, #1
   122ec:	beq	12380 <floor@plt+0xfb4>
   122f0:	ldr	r3, [sp, #32]
   122f4:	ldr	r2, [sp, #36]	; 0x24
   122f8:	cmp	r3, r2
   122fc:	bge	124b8 <floor@plt+0x10ec>
   12300:	ldr	r2, [sp, #28]
   12304:	mov	r6, r5
   12308:	add	r1, r3, #1
   1230c:	str	r1, [sp, #32]
   12310:	strb	r4, [r2, r3]
   12314:	ldrb	r4, [r6]
   12318:	cmp	r4, #0
   1231c:	bne	122e4 <floor@plt+0xf18>
   12320:	ldr	r3, [sp, #32]
   12324:	ldr	r2, [sp, #36]	; 0x24
   12328:	cmp	r3, r2
   1232c:	bge	125b4 <floor@plt+0x11e8>
   12330:	ldr	r2, [sp, #28]
   12334:	add	r0, r3, #1
   12338:	mov	r1, #0
   1233c:	str	r0, [sp, #32]
   12340:	strb	r1, [r2, r3]
   12344:	ldr	r0, [sp, #28]
   12348:	bl	291f4 <_ZdlPv@@Base+0xb44>
   1234c:	mov	r4, r0
   12350:	add	r0, sp, #40	; 0x28
   12354:	bl	289cc <_ZdlPv@@Base+0x31c>
   12358:	add	r0, sp, #28
   1235c:	bl	289cc <_ZdlPv@@Base+0x31c>
   12360:	ldr	r3, [pc, #656]	; 125f8 <floor@plt+0x122c>
   12364:	ldr	r2, [sp, #52]	; 0x34
   12368:	mov	r0, r4
   1236c:	ldr	r3, [r3]
   12370:	cmp	r2, r3
   12374:	bne	125dc <floor@plt+0x1210>
   12378:	add	sp, sp, #60	; 0x3c
   1237c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12380:	ldr	r3, [sp, #44]	; 0x2c
   12384:	ldr	r2, [sp, #48]	; 0x30
   12388:	cmp	r3, r2
   1238c:	bge	124c8 <floor@plt+0x10fc>
   12390:	ldr	r2, [sp, #40]	; 0x28
   12394:	add	r1, r3, #1
   12398:	str	r1, [sp, #44]	; 0x2c
   1239c:	strb	sl, [r2, r3]
   123a0:	ldrb	r4, [r6, #1]
   123a4:	cmp	r4, #0
   123a8:	bne	123cc <floor@plt+0x1000>
   123ac:	b	12578 <floor@plt+0x11ac>
   123b0:	ldr	r2, [sp, #40]	; 0x28
   123b4:	add	r1, r3, #1
   123b8:	str	r1, [sp, #44]	; 0x2c
   123bc:	strb	r4, [r2, r3]
   123c0:	ldrb	r4, [r5, #1]!
   123c4:	cmp	r4, #0
   123c8:	beq	12578 <floor@plt+0x11ac>
   123cc:	mov	r1, r4
   123d0:	mov	r0, r7
   123d4:	bl	113a8 <strchr@plt>
   123d8:	cmp	r0, #0
   123dc:	beq	12400 <floor@plt+0x1034>
   123e0:	ldr	r3, [sp, #44]	; 0x2c
   123e4:	ldr	r2, [sp, #48]	; 0x30
   123e8:	cmp	r3, r2
   123ec:	blt	123b0 <floor@plt+0xfe4>
   123f0:	add	r0, sp, #40	; 0x28
   123f4:	bl	28b34 <_ZdlPv@@Base+0x484>
   123f8:	ldr	r3, [sp, #44]	; 0x2c
   123fc:	b	123b0 <floor@plt+0xfe4>
   12400:	mov	r1, r4
   12404:	mov	r0, fp
   12408:	bl	113a8 <strchr@plt>
   1240c:	cmp	r0, #0
   12410:	beq	12578 <floor@plt+0x11ac>
   12414:	cmp	r4, #37	; 0x25
   12418:	beq	124d8 <floor@plt+0x110c>
   1241c:	ldr	r3, [sp, #16]
   12420:	cmp	r8, r3
   12424:	bge	125c4 <floor@plt+0x11f8>
   12428:	ldr	r3, [sp, #44]	; 0x2c
   1242c:	ldr	r2, [sp, #48]	; 0x30
   12430:	add	r6, r5, #1
   12434:	cmp	r3, r2
   12438:	bge	12548 <floor@plt+0x117c>
   1243c:	ldr	r2, [sp, #40]	; 0x28
   12440:	add	r1, r3, #1
   12444:	str	r1, [sp, #44]	; 0x2c
   12448:	strb	r4, [r2, r3]
   1244c:	ldr	r3, [sp, #44]	; 0x2c
   12450:	ldr	r2, [sp, #48]	; 0x30
   12454:	cmp	r3, r2
   12458:	bge	12538 <floor@plt+0x116c>
   1245c:	ldr	r2, [sp, #20]
   12460:	ldr	r1, [sp, #40]	; 0x28
   12464:	add	r2, r2, r8, lsl #3
   12468:	add	r0, r3, #1
   1246c:	str	r0, [sp, #44]	; 0x2c
   12470:	mov	r0, #0
   12474:	strb	r0, [r1, r3]
   12478:	ldrd	r0, [r2]
   1247c:	ldr	r2, [sp, #40]	; 0x28
   12480:	mov	r3, #1024	; 0x400
   12484:	strd	r0, [sp, #8]
   12488:	str	r2, [sp]
   1248c:	mov	r1, r3
   12490:	mov	r2, #1
   12494:	mov	r0, r9
   12498:	bl	11294 <__snprintf_chk@plt>
   1249c:	add	r8, r8, #1
   124a0:	add	r0, sp, #40	; 0x28
   124a4:	bl	28f98 <_ZdlPv@@Base+0x8e8>
   124a8:	mov	r1, r9
   124ac:	add	r0, sp, #28
   124b0:	bl	28b68 <_ZdlPv@@Base+0x4b8>
   124b4:	b	122d8 <floor@plt+0xf0c>
   124b8:	add	r0, sp, #28
   124bc:	bl	28b34 <_ZdlPv@@Base+0x484>
   124c0:	ldr	r3, [sp, #32]
   124c4:	b	12300 <floor@plt+0xf34>
   124c8:	add	r0, sp, #40	; 0x28
   124cc:	bl	28b34 <_ZdlPv@@Base+0x484>
   124d0:	ldr	r3, [sp, #44]	; 0x2c
   124d4:	b	12390 <floor@plt+0xfc4>
   124d8:	ldr	r3, [sp, #44]	; 0x2c
   124dc:	ldr	r2, [sp, #48]	; 0x30
   124e0:	add	r6, r5, #1
   124e4:	cmp	r3, r2
   124e8:	bge	12568 <floor@plt+0x119c>
   124ec:	ldr	r2, [sp, #40]	; 0x28
   124f0:	add	r1, r3, #1
   124f4:	str	r1, [sp, #44]	; 0x2c
   124f8:	strb	sl, [r2, r3]
   124fc:	ldr	r3, [sp, #44]	; 0x2c
   12500:	ldr	r2, [sp, #48]	; 0x30
   12504:	cmp	r3, r2
   12508:	bge	12558 <floor@plt+0x118c>
   1250c:	ldr	r2, [sp, #40]	; 0x28
   12510:	add	r1, r3, #1
   12514:	str	r1, [sp, #44]	; 0x2c
   12518:	mov	r1, #0
   1251c:	strb	r1, [r2, r3]
   12520:	ldr	r3, [sp, #40]	; 0x28
   12524:	ldr	r2, [pc, #220]	; 12608 <floor@plt+0x123c>
   12528:	mov	r1, #1024	; 0x400
   1252c:	mov	r0, r9
   12530:	bl	11150 <snprintf@plt>
   12534:	b	124a0 <floor@plt+0x10d4>
   12538:	add	r0, sp, #40	; 0x28
   1253c:	bl	28b34 <_ZdlPv@@Base+0x484>
   12540:	ldr	r3, [sp, #44]	; 0x2c
   12544:	b	1245c <floor@plt+0x1090>
   12548:	add	r0, sp, #40	; 0x28
   1254c:	bl	28b34 <_ZdlPv@@Base+0x484>
   12550:	ldr	r3, [sp, #44]	; 0x2c
   12554:	b	1243c <floor@plt+0x1070>
   12558:	add	r0, sp, #40	; 0x28
   1255c:	bl	28b34 <_ZdlPv@@Base+0x484>
   12560:	ldr	r3, [sp, #44]	; 0x2c
   12564:	b	1250c <floor@plt+0x1140>
   12568:	add	r0, sp, #40	; 0x28
   1256c:	bl	28b34 <_ZdlPv@@Base+0x484>
   12570:	ldr	r3, [sp, #44]	; 0x2c
   12574:	b	124ec <floor@plt+0x1120>
   12578:	ldr	r3, [pc, #140]	; 1260c <floor@plt+0x1240>
   1257c:	ldr	r0, [pc, #140]	; 12610 <floor@plt+0x1244>
   12580:	mov	r2, r3
   12584:	mov	r1, r3
   12588:	bl	17778 <floor@plt+0x63ac>
   1258c:	add	r1, sp, #40	; 0x28
   12590:	add	r0, sp, #28
   12594:	bl	28be0 <_ZdlPv@@Base+0x530>
   12598:	mov	r1, r5
   1259c:	add	r0, sp, #28
   125a0:	bl	28b68 <_ZdlPv@@Base+0x4b8>
   125a4:	ldr	r3, [sp, #32]
   125a8:	ldr	r2, [sp, #36]	; 0x24
   125ac:	cmp	r3, r2
   125b0:	blt	12330 <floor@plt+0xf64>
   125b4:	add	r0, sp, #28
   125b8:	bl	28b34 <_ZdlPv@@Base+0x484>
   125bc:	ldr	r3, [sp, #32]
   125c0:	b	12330 <floor@plt+0xf64>
   125c4:	ldr	r3, [pc, #64]	; 1260c <floor@plt+0x1240>
   125c8:	ldr	r0, [pc, #68]	; 12614 <floor@plt+0x1248>
   125cc:	mov	r2, r3
   125d0:	mov	r1, r3
   125d4:	bl	17778 <floor@plt+0x63ac>
   125d8:	b	1258c <floor@plt+0x11c0>
   125dc:	bl	111e0 <__stack_chk_fail@plt>
   125e0:	b	125ec <floor@plt+0x1220>
   125e4:	add	r0, sp, #40	; 0x28
   125e8:	bl	289cc <_ZdlPv@@Base+0x31c>
   125ec:	add	r0, sp, #28
   125f0:	bl	289cc <_ZdlPv@@Base+0x31c>
   125f4:	bl	111ec <__cxa_end_cleanup@plt>
   125f8:	andeq	r1, r4, r0, ror sp
   125fc:	andeq	lr, r2, r8, lsr #8
   12600:	andeq	lr, r2, r0, ror r4
   12604:	andeq	r2, r4, ip, lsl #9
   12608:	andeq	lr, r2, ip, asr #8
   1260c:			; <UNDEFINED> instruction: 0x000454b8
   12610:	andeq	lr, r2, r8, lsr r4
   12614:	andeq	lr, r2, r0, asr r4
   12618:	ldr	r3, [pc, #36]	; 12644 <floor@plt+0x1278>
   1261c:	push	{lr}		; (str lr, [sp, #-4]!)
   12620:	cmp	r0, #0
   12624:	sub	sp, sp, #12
   12628:	mov	r2, #1
   1262c:	moveq	r0, r3
   12630:	mov	r1, sp
   12634:	vstr	d0, [sp]
   12638:	bl	12294 <floor@plt+0xec8>
   1263c:	add	sp, sp, #12
   12640:	pop	{pc}		; (ldr pc, [sp], #4)
   12644:			; <UNDEFINED> instruction: 0x0002e4b4
   12648:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1264c:	vpush	{d8-d12}
   12650:	ldr	r3, [pc, #368]	; 127c8 <floor@plt+0x13fc>
   12654:	ldr	r1, [pc, #400]	; 127ec <floor@plt+0x1420>
   12658:	ldr	fp, [pc, #320]	; 127a0 <floor@plt+0x13d4>
   1265c:	sub	sp, sp, #5376	; 0x1500
   12660:	sub	sp, sp, #20
   12664:	vldr	d8, [pc, #276]	; 12780 <floor@plt+0x13b4>
   12668:	vldr	d9, [pc, #280]	; 12788 <floor@plt+0x13bc>
   1266c:	vldr	d11, [pc, #284]	; 12790 <floor@plt+0x13c4>
   12670:	vldr	d10, [pc, #288]	; 12798 <floor@plt+0x13cc>
   12674:	ldr	r0, [r3]
   12678:	add	lr, sp, #5376	; 0x1500
   1267c:	mov	r3, #0
   12680:	add	ip, fp, #2720	; 0xaa0
   12684:	add	r4, sp, #184	; 0xb8
   12688:	mov	r7, r3
   1268c:	add	lr, lr, #12
   12690:	strh	r3, [sp, #184]	; 0xb8
   12694:	str	r3, [r1, #1068]	; 0x42c
   12698:	str	r3, [sp, #28]
   1269c:	mov	r8, r4
   126a0:	add	r3, ip, #4
   126a4:	mvn	r2, #1
   126a8:	add	r6, sp, #584	; 0x248
   126ac:	str	r3, [sp, #32]
   126b0:	mov	r3, #200	; 0xc8
   126b4:	str	r0, [lr]
   126b8:	str	r2, [r1, #1072]	; 0x430
   126bc:	str	r6, [sp, #24]
   126c0:	str	r3, [sp, #20]
   126c4:	lsl	r7, r7, #1
   126c8:	ldrsh	r5, [fp, r7]
   126cc:	cmn	r5, #240	; 0xf0
   126d0:	mov	r9, r5
   126d4:	beq	12dec <floor@plt+0x1a20>
   126d8:	ldr	r3, [pc, #268]	; 127ec <floor@plt+0x1420>
   126dc:	ldr	r0, [r3, #1072]	; 0x430
   126e0:	cmn	r0, #2
   126e4:	beq	12f24 <floor@plt+0x1b58>
   126e8:	cmp	r0, #0
   126ec:	ble	12ef4 <floor@plt+0x1b28>
   126f0:	cmp	r0, #380	; 0x17c
   126f4:	addge	r9, r5, #2
   126f8:	ldrlt	r3, [pc, #168]	; 127a8 <floor@plt+0x13dc>
   126fc:	movge	r3, #2
   12700:	addlt	r0, r3, r0
   12704:	ldrblt	r3, [r0, #1476]	; 0x5c4
   12708:	addlt	r9, r5, r3
   1270c:	ldr	r2, [pc, #168]	; 127bc <floor@plt+0x13f0>
   12710:	cmp	r9, r2
   12714:	bhi	12dec <floor@plt+0x1a20>
   12718:	ldr	r2, [pc, #160]	; 127c0 <floor@plt+0x13f4>
   1271c:	lsl	r9, r9, #1
   12720:	ldrsh	r2, [r2, r9]
   12724:	cmp	r2, r3
   12728:	bne	12dec <floor@plt+0x1a20>
   1272c:	ldr	r3, [pc, #152]	; 127cc <floor@plt+0x1400>
   12730:	ldrsh	r7, [r3, r9]
   12734:	cmp	r7, #0
   12738:	mov	ip, r7
   1273c:	rsble	r7, r7, #0
   12740:	ble	127f0 <floor@plt+0x1424>
   12744:	ldr	r3, [sp, #28]
   12748:	ldr	r5, [pc, #116]	; 127c4 <floor@plt+0x13f8>
   1274c:	cmp	r3, #0
   12750:	subne	r3, r3, #1
   12754:	strne	r3, [sp, #28]
   12758:	ldm	r5!, {r0, r1, r2, r3}
   1275c:	add	lr, r6, #24
   12760:	mov	r6, lr
   12764:	mvn	r9, #1
   12768:	stmia	lr!, {r0, r1, r2, r3}
   1276c:	ldm	r5, {r0, r1}
   12770:	str	r9, [r5, #-24]	; 0xffffffe8
   12774:	stm	lr, {r0, r1}
   12778:	b	12cf0 <floor@plt+0x1924>
   1277c:	nop			; (mov r0, r0)
	...
   1278c:	svccc	0x00f00000	; IMB
   12790:	andeq	r0, r0, r0
   12794:	svccc	0x00000000
   12798:	andeq	r0, r0, r0
   1279c:	sbcsmi	pc, pc, r0, asr #31
   127a0:	andeq	fp, r2, r8, lsr r2
   127a4:	andeq	r0, r0, r1, lsl #2
   127a8:	andeq	fp, r2, r0
   127ac:	andeq	fp, r2, r0, asr #26
   127b0:	andeq	r2, r0, pc, lsl #14
   127b4:	bge	feabd268 <stdout@@GLIBC_2.4+0xfea7ae14>
   127b8:	andeq	fp, r2, r0, asr #14
   127bc:	andeq	r0, r0, r6, lsl #19
   127c0:	andeq	fp, r2, r4, lsr #27
   127c4:	muleq	r4, r8, r8
   127c8:	andeq	r1, r4, r0, ror sp
   127cc:	strheq	sp, [r2], -r4
   127d0:	andeq	lr, r2, r0, ror #13
   127d4:	strdeq	lr, [r2], -r0
   127d8:	andeq	r2, r4, r0, lsl #18
   127dc:	andeq	lr, r2, r8, asr #9
   127e0:	ldrdeq	lr, [r2], -r0
   127e4:			; <UNDEFINED> instruction: 0x0002e4b8
   127e8:	andeq	lr, r2, r0, asr #9
   127ec:	andeq	r2, r4, r0, ror #8
   127f0:	ldr	r3, [pc, #-80]	; 127a8 <floor@plt+0x13dc>
   127f4:	add	lr, sp, #120	; 0x78
   127f8:	add	r3, r3, r7
   127fc:	ldr	r9, [pc, #-96]	; 127a4 <floor@plt+0x13d8>
   12800:	ldrb	sl, [r3, #2764]	; 0xacc
   12804:	sub	r5, r7, #3
   12808:	rsb	ip, sl, #1
   1280c:	add	ip, ip, ip, lsl #1
   12810:	add	ip, r6, ip, lsl #3
   12814:	ldm	ip!, {r0, r1, r2, r3}
   12818:	stmia	lr!, {r0, r1, r2, r3}
   1281c:	ldm	ip, {r0, r1}
   12820:	stm	lr, {r0, r1}
   12824:	cmp	r5, r9
   12828:	ldrls	pc, [pc, r5, lsl #2]
   1282c:	b	12c78 <floor@plt+0x18ac>
   12830:	strdeq	r3, [r1], -r0
   12834:	andeq	r3, r1, ip, lsl #28
   12838:	andeq	r3, r1, r4, asr #15
   1283c:	andeq	r3, r1, r8, lsr #15
   12840:	andeq	r2, r1, r8, ror ip
   12844:	andeq	r2, r1, r8, ror ip
   12848:	andeq	r2, r1, r8, ror ip
   1284c:	andeq	r2, r1, r8, ror ip
   12850:	muleq	r1, r8, r8
   12854:	muleq	r1, r0, r7
   12858:	andeq	r3, r1, r0, ror #14
   1285c:	andeq	r3, r1, ip, ror #13
   12860:	ldrdeq	r3, [r1], -ip
   12864:	andeq	r3, r1, ip, asr #13
   12868:	andeq	r3, r1, r8, ror #22
   1286c:	andeq	r3, r1, r0, asr fp
   12870:	andeq	r3, r1, r8, lsr fp
   12874:	andeq	r3, r1, r8, lsl #22
   12878:	andeq	r2, r1, r4, ror #30
   1287c:	andeq	r3, r1, r4, lsr #29
   12880:	andeq	r4, r1, r8, lsl #12
   12884:	andeq	r2, r1, r4, ror #31
   12888:	andeq	r2, r1, r4, asr #31
   1288c:	andeq	r2, r1, r8, lsr ip
   12890:	andeq	r2, r1, r4, ror #31
   12894:	andeq	r2, r1, r4, asr #31
   12898:	muleq	r1, r4, sp
   1289c:	andeq	r2, r1, r4, ror #30
   128a0:	andeq	r3, r1, ip, asr lr
   128a4:	andeq	r3, r1, r8, lsr #28
   128a8:	andeq	r2, r1, r4, ror #30
   128ac:	andeq	r4, r1, ip, lsl #17
   128b0:	andeq	r2, r1, r8, ror ip
   128b4:	andeq	r4, r1, ip, ror r8
   128b8:	andeq	r2, r1, r8, ror ip
   128bc:	andeq	r2, r1, r8, ror ip
   128c0:	andeq	r4, r1, r0, ror #16
   128c4:	andeq	r4, r1, r4, asr #16
   128c8:	andeq	r4, r1, r8, lsr #16
   128cc:	andeq	r4, r1, r8, lsl r8
   128d0:	andeq	r4, r1, ip, lsr #15
   128d4:	andeq	r4, r1, r8, ror r7
   128d8:	andeq	r4, r1, r8, ror #14
   128dc:	andeq	r4, r1, ip, lsr #14
   128e0:	andeq	r2, r1, r4, ror #30
   128e4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   128e8:	andeq	r4, r1, r8, asr #13
   128ec:	andeq	r4, r1, r4, lsr fp
   128f0:	andeq	r4, r1, r8, asr #21
   128f4:			; <UNDEFINED> instruction: 0x00014abc
   128f8:	andeq	r4, r1, r0, lsl #21
   128fc:	andeq	r4, r1, r0, ror fp
   12900:	andeq	r4, r1, r0, asr #22
   12904:	andeq	r4, r1, ip, lsr #23
   12908:	andeq	r4, r1, r8, ror #18
   1290c:	andeq	r4, r1, r4, lsr #20
   12910:	andeq	r4, r1, ip, ror #19
   12914:			; <UNDEFINED> instruction: 0x000149b4
   12918:	muleq	r1, r8, r9
   1291c:	andeq	r4, r1, r0, ror sl
   12920:	andeq	r4, r1, ip, asr sl
   12924:	strdeq	r4, [r1], -ip
   12928:	muleq	r1, ip, r4
   1292c:	andeq	r4, r1, r8, ror #27
   12930:			; <UNDEFINED> instruction: 0x00014db8
   12934:	andeq	r4, r1, r8, ror #10
   12938:			; <UNDEFINED> instruction: 0x00014cb4
   1293c:	muleq	r1, r4, ip
   12940:	andeq	r4, r1, r8, ror ip
   12944:	andeq	r4, r1, r8, asr ip
   12948:	andeq	r2, r1, r8, ror ip
   1294c:	andeq	r2, r1, r8, ror ip
   12950:	andeq	r4, r1, r0, lsr #24
   12954:	andeq	r4, r1, r4, lsl #24
   12958:	andeq	r3, r1, r8, lsr r0
   1295c:	andeq	r3, r1, r0, lsl r0
   12960:	andeq	r3, r1, ip, asr r1
   12964:	andeq	r3, r1, ip, lsr #1
   12968:	andeq	r3, r1, r4, lsl #2
   1296c:	andeq	r3, r1, r4, asr r0
   12970:	andeq	r3, r1, r4, lsr #11
   12974:	ldrdeq	r3, [r1], -r0
   12978:	andeq	r3, r1, ip, lsr #10
   1297c:	andeq	r3, r1, r4, asr r4
   12980:	andeq	r3, r1, r4, ror #7
   12984:	andeq	r3, r1, r4, asr #7
   12988:	andeq	r3, r1, r4, lsr #7
   1298c:	andeq	r3, r1, r4, lsl #7
   12990:	andeq	r3, r1, ip, asr r3
   12994:	andeq	r3, r1, r8, lsr #6
   12998:	strdeq	r3, [r1], -r8
   1299c:	andeq	r3, r1, r8, asr #5
   129a0:	muleq	r1, r8, r2
   129a4:	andeq	r3, r1, r8, ror #4
   129a8:	andeq	r3, r1, r8, lsr r2
   129ac:	andeq	r3, r1, r8, lsl #4
   129b0:	muleq	r1, r0, r1
   129b4:	andeq	r4, r1, r0, ror #2
   129b8:	andeq	r4, r1, r8, lsr r1
   129bc:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   129c0:	andeq	r4, r1, r0, ror #3
   129c4:	andeq	r4, r1, r0, asr #3
   129c8:	andeq	r4, r1, ip, lsl r2
   129cc:	strheq	r4, [r1], -ip
   129d0:	andeq	r4, r1, r8, lsl #1
   129d4:	andeq	r4, r1, ip, ror r0
   129d8:	andeq	r4, r1, r0, asr r0
   129dc:	andeq	r4, r1, r0, lsr r0
   129e0:	andeq	r4, r1, r4
   129e4:	andeq	r3, r1, r4, ror #31
   129e8:	andeq	r3, r1, ip, asr #31
   129ec:	andeq	r3, r1, ip, lsr #31
   129f0:	ldrdeq	r4, [r1], -r0
   129f4:			; <UNDEFINED> instruction: 0x000143b0
   129f8:	andeq	r4, r1, r4, ror r3
   129fc:	andeq	r4, r1, r0, lsl r3
   12a00:	andeq	r4, r1, ip, lsl r4
   12a04:	strdeq	r4, [r1], -r0
   12a08:	andeq	r4, r1, r8, asr r4
   12a0c:	andeq	r4, r1, r0, lsl #5
   12a10:	andeq	r4, r1, r0, ror #5
   12a14:	andeq	r4, r1, r8, asr #5
   12a18:			; <UNDEFINED> instruction: 0x000142b0
   12a1c:	muleq	r1, r8, r2
   12a20:	strdeq	r4, [r1], -r8
   12a24:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   12a28:	andeq	r3, r1, r8, asr #30
   12a2c:	andeq	r3, r1, r4, lsl pc
   12a30:	andeq	r4, r1, r4, lsr r9
   12a34:	andeq	r4, r1, r0, lsl #18
   12a38:	strdeq	r3, [r1], -ip
   12a3c:	ldrdeq	r3, [r1], -ip
   12a40:	andeq	r3, r1, r0, ror #26
   12a44:	andeq	r3, r1, r0, asr sp
   12a48:	strdeq	r3, [r1], -r4
   12a4c:	andeq	r3, r1, r0, ror #11
   12a50:	andeq	r5, r1, r0, asr #1
   12a54:	strheq	r5, [r1], -r0
   12a58:	muleq	r1, r0, r0
   12a5c:	andeq	r5, r1, r0, ror r0
   12a60:	andeq	r5, r1, r8, ror #2
   12a64:	andeq	r5, r1, r4, asr #2
   12a68:	andeq	r5, r1, r8, ror r1
   12a6c:	andeq	r4, r1, r4, lsr #13
   12a70:	andeq	r5, r1, ip, lsr #4
   12a74:	andeq	r5, r1, r8, lsl r2
   12a78:	andeq	r5, r1, r0, asr r2
   12a7c:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   12a80:	ldrdeq	r5, [r1], -r0
   12a84:	muleq	r1, ip, r1
   12a88:	andeq	r2, r1, r8, ror ip
   12a8c:	andeq	r2, r1, r8, ror ip
   12a90:	andeq	r5, r1, r4, lsl #4
   12a94:	andeq	r4, r1, r8, lsl #9
   12a98:	andeq	r5, r1, r4, asr r0
   12a9c:	andeq	r5, r1, r0, lsr #32
   12aa0:	andeq	r4, r1, r0, ror #30
   12aa4:	andeq	r4, r1, r8, lsr #30
   12aa8:	andeq	r5, r1, r0
   12aac:	andeq	r4, r1, ip, asr #31
   12ab0:	andeq	r4, r1, ip, asr r5
   12ab4:	andeq	r4, r1, r0, lsl r5
   12ab8:	andeq	r4, r1, r0, ror #28
   12abc:	andeq	r4, r1, r0, asr lr
   12ac0:	andeq	r4, r1, r4, asr #28
   12ac4:	andeq	r4, r1, r8, lsr lr
   12ac8:	andeq	r4, r1, r4, asr #29
   12acc:	andeq	r4, r1, ip, ror #28
   12ad0:	andeq	r4, r1, ip, lsl pc
   12ad4:	muleq	r1, r8, lr
   12ad8:	andeq	r3, r1, r4, ror #3
   12adc:	ldrdeq	r3, [r1], -r8
   12ae0:	andeq	r3, r1, ip, asr #3
   12ae4:	andeq	r3, r1, r0, asr #3
   12ae8:	strdeq	r3, [r1], -ip
   12aec:	strdeq	r3, [r1], -r0
   12af0:			; <UNDEFINED> instruction: 0x000131b4
   12af4:	andeq	r3, r1, r4, lsl sl
   12af8:	strdeq	r3, [r1], -ip
   12afc:	andeq	r3, r1, r0, ror #19
   12b00:	ldrdeq	r3, [r1], -r4
   12b04:			; <UNDEFINED> instruction: 0x000139bc
   12b08:			; <UNDEFINED> instruction: 0x000139b0
   12b0c:	muleq	r1, r8, r9
   12b10:	andeq	r3, r1, ip, lsl r9
   12b14:	ldrdeq	r3, [r1], -r8
   12b18:	andeq	r3, r1, ip, lsl r8
   12b1c:	andeq	r3, r1, r0, ror #15
   12b20:	andeq	r3, r1, r4, asr #20
   12b24:	strdeq	r4, [r1], -r8
   12b28:	andeq	r4, r1, r8, ror #11
   12b2c:	ldrdeq	r2, [r1], -r4
   12b30:	andeq	r3, r1, r0, ror #21
   12b34:	ldrdeq	r3, [r1], -r0
   12b38:	andeq	r2, r1, r4, lsl #31
   12b3c:	andeq	r2, r1, r4, ror pc
   12b40:	andeq	r4, r1, r4, ror #25
   12b44:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   12b48:	andeq	r4, r1, ip, ror #26
   12b4c:	andeq	r4, r1, ip, asr sp
   12b50:	ldrdeq	r2, [r1], -r4
   12b54:	andeq	r2, r1, r4, lsr #31
   12b58:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   12b5c:	andeq	r2, r1, r4, lsl #31
   12b60:	andeq	r2, r1, r4, ror pc
   12b64:			; <UNDEFINED> instruction: 0x00012fb4
   12b68:	strdeq	r2, [r1], -r4
   12b6c:	andeq	r2, r1, r4, lsr #31
   12b70:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   12b74:	andeq	r2, r1, r4, lsl #31
   12b78:	andeq	r2, r1, r4, ror pc
   12b7c:			; <UNDEFINED> instruction: 0x00012fb4
   12b80:	strdeq	r2, [r1], -r4
   12b84:	andeq	r3, r1, r0, lsr #13
   12b88:	muleq	r1, r0, r6
   12b8c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   12b90:	andeq	r2, r1, r4, lsr #31
   12b94:	andeq	r3, r1, r8, lsr r6
   12b98:	andeq	r3, r1, r4, asr #24
   12b9c:	andeq	r3, r1, r4, lsr ip
   12ba0:	andeq	r3, r1, r8, lsr #24
   12ba4:	andeq	r3, r1, ip, lsl ip
   12ba8:	strdeq	r3, [r1], -ip
   12bac:	ldrdeq	r3, [r1], -r8
   12bb0:	andeq	r3, r1, ip, asr #23
   12bb4:	ldrdeq	r4, [r1], -ip
   12bb8:	andeq	r4, r1, r4, lsl sp
   12bbc:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   12bc0:	andeq	r4, r1, r8, lsl lr
   12bc4:	andeq	r4, r1, ip, lsr sp
   12bc8:	muleq	r1, r0, sp
   12bcc:	andeq	r4, r1, ip, ror sp
   12bd0:	andeq	r4, r1, r4, lsr #27
   12bd4:	andeq	r4, r1, r4, lsl #13
   12bd8:	andeq	r4, r1, r4, ror #12
   12bdc:	andeq	r4, r1, r4, lsr #12
   12be0:			; <UNDEFINED> instruction: 0x00013bbc
   12be4:			; <UNDEFINED> instruction: 0x00013bb0
   12be8:	muleq	r1, r4, fp
   12bec:	andeq	r3, r1, r8, ror fp
   12bf0:	andeq	r3, r1, r4, asr ip
   12bf4:	andeq	r3, r1, r8, lsr #25
   12bf8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   12bfc:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   12c00:	andeq	r3, r1, r8, ror sp
   12c04:			; <UNDEFINED> instruction: 0x000136b0
   12c08:	andeq	r3, r1, r4, asr sl
   12c0c:	andeq	r3, r1, r0, ror #12
   12c10:			; <UNDEFINED> instruction: 0x00013ab0
   12c14:	andeq	r3, r1, r8, asr #12
   12c18:	muleq	r1, r8, r5
   12c1c:	andeq	r3, r1, r0, ror sl
   12c20:	andeq	r3, r1, r0, lsr sp
   12c24:	muleq	r1, r0, sl
   12c28:	strdeq	r3, [r1], -r4
   12c2c:			; <UNDEFINED> instruction: 0x000145b8
   12c30:	ldrdeq	r3, [r1], -r4
   12c34:	andeq	r4, r1, ip, lsr ip
   12c38:	ldr	r3, [pc, #-1108]	; 127ec <floor@plt+0x1420>
   12c3c:	ldr	r3, [r3, #1072]	; 0x430
   12c40:	cmp	r3, #0
   12c44:	blt	154ac <floor@plt+0x40e0>
   12c48:	ldr	r0, [r6, #-120]	; 0xffffff88
   12c4c:	ldr	r2, [r6]
   12c50:	ldr	r1, [r6, #-48]	; 0xffffffd0
   12c54:	bl	18434 <floor@plt+0x7068>
   12c58:	ldr	r0, [r6, #-48]	; 0xffffffd0
   12c5c:	cmp	r0, #0
   12c60:	beq	12c68 <floor@plt+0x189c>
   12c64:	bl	1121c <_ZdaPv@plt>
   12c68:	ldr	r0, [r6]
   12c6c:	cmp	r0, #0
   12c70:	beq	12c78 <floor@plt+0x18ac>
   12c74:	bl	1121c <_ZdaPv@plt>
   12c78:	ldr	r3, [pc, #-1240]	; 127a8 <floor@plt+0x13dc>
   12c7c:	add	ip, sp, #120	; 0x78
   12c80:	add	r7, r3, r7
   12c84:	add	r3, sl, sl, lsl #1
   12c88:	ldrb	r5, [r7, #3028]	; 0xbd4
   12c8c:	ldr	lr, [sp, #32]
   12c90:	sub	r4, r4, sl, lsl #1
   12c94:	sub	r5, r5, #146	; 0x92
   12c98:	sub	r6, r6, r3, lsl #3
   12c9c:	lsl	r5, r5, #1
   12ca0:	ldm	ip!, {r0, r1, r2, r3}
   12ca4:	add	r6, r6, #24
   12ca8:	ldrsh	r9, [r4]
   12cac:	ldrsh	r7, [lr, r5]
   12cb0:	mov	lr, r6
   12cb4:	ldr	sl, [pc, #-1280]	; 127bc <floor@plt+0x13f0>
   12cb8:	stmia	lr!, {r0, r1, r2, r3}
   12cbc:	add	r7, r7, r9
   12cc0:	ldm	ip, {r0, r1}
   12cc4:	cmp	r7, sl
   12cc8:	stm	lr, {r0, r1}
   12ccc:	bhi	12ce4 <floor@plt+0x1918>
   12cd0:	ldr	r3, [pc, #-1304]	; 127c0 <floor@plt+0x13f4>
   12cd4:	lsl	r7, r7, #1
   12cd8:	ldrsh	r3, [r3, r7]
   12cdc:	cmp	r3, r9
   12ce0:	beq	12f14 <floor@plt+0x1b48>
   12ce4:	ldr	r3, [pc, #-1344]	; 127ac <floor@plt+0x13e0>
   12ce8:	ldrsh	ip, [r3, r5]
   12cec:	mov	r7, ip
   12cf0:	ldr	r1, [sp, #20]
   12cf4:	strh	ip, [r4, #2]
   12cf8:	sub	r3, r1, #-2147483647	; 0x80000001
   12cfc:	add	r4, r4, #2
   12d00:	lsl	r3, r3, #1
   12d04:	add	r2, r8, r3
   12d08:	cmp	r4, r2
   12d0c:	bcc	12dd8 <floor@plt+0x1a0c>
   12d10:	sub	r6, r4, r8
   12d14:	ldr	r2, [pc, #-1388]	; 127b0 <floor@plt+0x13e4>
   12d18:	asr	r6, r6, #1
   12d1c:	cmp	r1, r2
   12d20:	add	r6, r6, #1
   12d24:	bhi	12f50 <floor@plt+0x1b84>
   12d28:	add	r3, r3, #2
   12d2c:	add	r2, r2, #1
   12d30:	cmp	r3, r2
   12d34:	movcs	r3, r2
   12d38:	str	r3, [sp, #20]
   12d3c:	lsl	r9, r3, #1
   12d40:	add	r0, r9, r3
   12d44:	add	r0, r3, r0, lsl #2
   12d48:	lsl	r0, r0, #1
   12d4c:	add	r0, r0, #23
   12d50:	bl	1127c <malloc@plt>
   12d54:	subs	r5, r0, #0
   12d58:	beq	12f50 <floor@plt+0x1b84>
   12d5c:	lsl	r4, r6, #1
   12d60:	mov	r2, r4
   12d64:	mov	r1, r8
   12d68:	bl	11270 <memcpy@plt>
   12d6c:	ldr	r3, [pc, #-1472]	; 127b4 <floor@plt+0x13e8>
   12d70:	add	sl, r9, #23
   12d74:	add	r6, r4, r6
   12d78:	umull	r3, sl, r3, sl
   12d7c:	ldr	r1, [sp, #24]
   12d80:	lsl	r6, r6, #3
   12d84:	lsr	sl, sl, #4
   12d88:	mov	r2, r6
   12d8c:	add	sl, sl, sl, lsl #1
   12d90:	add	sl, r5, sl, lsl #3
   12d94:	mov	r0, sl
   12d98:	bl	11270 <memcpy@plt>
   12d9c:	add	r3, sp, #184	; 0xb8
   12da0:	cmp	r8, r3
   12da4:	beq	12db0 <floor@plt+0x19e4>
   12da8:	mov	r0, r8
   12dac:	bl	110e4 <free@plt>
   12db0:	sub	r4, r4, #2
   12db4:	sub	r9, r9, #2
   12db8:	add	r4, r5, r4
   12dbc:	add	r9, r5, r9
   12dc0:	sub	r6, r6, #24
   12dc4:	cmp	r4, r9
   12dc8:	add	r6, sl, r6
   12dcc:	bcs	152d4 <floor@plt+0x3f08>
   12dd0:	mov	r8, r5
   12dd4:	str	sl, [sp, #24]
   12dd8:	cmp	r7, #6
   12ddc:	bne	126c4 <floor@plt+0x12f8>
   12de0:	mov	r4, r8
   12de4:	mov	r5, #0
   12de8:	b	12eb0 <floor@plt+0x1ae4>
   12dec:	ldr	r3, [pc, #-1596]	; 127b8 <floor@plt+0x13ec>
   12df0:	ldrh	r7, [r3, r7]
   12df4:	cmp	r7, #0
   12df8:	bne	127f0 <floor@plt+0x1424>
   12dfc:	ldr	r3, [sp, #28]
   12e00:	cmp	r3, #0
   12e04:	beq	12f34 <floor@plt+0x1b68>
   12e08:	ldr	r3, [sp, #28]
   12e0c:	cmp	r3, #3
   12e10:	bne	12e28 <floor@plt+0x1a5c>
   12e14:	ldr	r3, [pc, #-1584]	; 127ec <floor@plt+0x1420>
   12e18:	ldr	r3, [r3, #1072]	; 0x430
   12e1c:	cmp	r3, #0
   12e20:	bgt	12f04 <floor@plt+0x1b38>
   12e24:	beq	13004 <floor@plt+0x1c38>
   12e28:	ldr	r2, [pc, #-1652]	; 127bc <floor@plt+0x13f0>
   12e2c:	ldr	r1, [pc, #-1652]	; 127c0 <floor@plt+0x13f4>
   12e30:	ldr	r0, [pc, #-1644]	; 127cc <floor@plt+0x1400>
   12e34:	b	12e50 <floor@plt+0x1a84>
   12e38:	cmp	r4, r8
   12e3c:	beq	12eac <floor@plt+0x1ae0>
   12e40:	ldrsh	r3, [r4, #-2]!
   12e44:	sub	r6, r6, #24
   12e48:	lsl	r3, r3, #1
   12e4c:	ldrsh	r5, [fp, r3]
   12e50:	cmn	r5, #240	; 0xf0
   12e54:	beq	12e38 <floor@plt+0x1a6c>
   12e58:	add	r5, r5, #1
   12e5c:	cmp	r5, r2
   12e60:	bhi	12e38 <floor@plt+0x1a6c>
   12e64:	lsl	r5, r5, #1
   12e68:	ldrsh	r3, [r1, r5]
   12e6c:	cmp	r3, #1
   12e70:	bne	12e38 <floor@plt+0x1a6c>
   12e74:	ldrsh	ip, [r0, r5]
   12e78:	cmp	ip, #0
   12e7c:	mov	r7, ip
   12e80:	ble	12e38 <floor@plt+0x1a6c>
   12e84:	ldr	r5, [pc, #-1736]	; 127c4 <floor@plt+0x13f8>
   12e88:	add	lr, r6, #24
   12e8c:	mov	r6, lr
   12e90:	ldm	r5!, {r0, r1, r2, r3}
   12e94:	mov	r9, #3
   12e98:	str	r9, [sp, #28]
   12e9c:	stmia	lr!, {r0, r1, r2, r3}
   12ea0:	ldm	r5, {r0, r1}
   12ea4:	stm	lr, {r0, r1}
   12ea8:	b	12cf0 <floor@plt+0x1924>
   12eac:	mov	r5, #1
   12eb0:	add	r3, sp, #184	; 0xb8
   12eb4:	cmp	r4, r3
   12eb8:	beq	12ec4 <floor@plt+0x1af8>
   12ebc:	mov	r0, r4
   12ec0:	bl	110e4 <free@plt>
   12ec4:	add	r3, sp, #5376	; 0x1500
   12ec8:	add	r3, r3, #12
   12ecc:	ldr	r2, [r3]
   12ed0:	ldr	r3, [pc, #-1808]	; 127c8 <floor@plt+0x13fc>
   12ed4:	mov	r0, r5
   12ed8:	ldr	r3, [r3]
   12edc:	cmp	r2, r3
   12ee0:	bne	1563c <floor@plt+0x4270>
   12ee4:	add	sp, sp, #5376	; 0x1500
   12ee8:	add	sp, sp, #20
   12eec:	vpop	{d8-d12}
   12ef0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ef4:	ldr	r2, [pc, #-1808]	; 127ec <floor@plt+0x1420>
   12ef8:	mov	r3, #0
   12efc:	str	r3, [r2, #1072]	; 0x430
   12f00:	b	1270c <floor@plt+0x1340>
   12f04:	ldr	r2, [pc, #-1824]	; 127ec <floor@plt+0x1420>
   12f08:	mvn	r3, #1
   12f0c:	str	r3, [r2, #1072]	; 0x430
   12f10:	b	12e28 <floor@plt+0x1a5c>
   12f14:	ldr	r3, [pc, #-1872]	; 127cc <floor@plt+0x1400>
   12f18:	ldrsh	ip, [r3, r7]
   12f1c:	mov	r7, ip
   12f20:	b	12cf0 <floor@plt+0x1924>
   12f24:	bl	19c6c <floor@plt+0x88a0>
   12f28:	ldr	r3, [pc, #-1860]	; 127ec <floor@plt+0x1420>
   12f2c:	str	r0, [r3, #1072]	; 0x430
   12f30:	b	126e8 <floor@plt+0x131c>
   12f34:	ldr	r2, [pc, #-1872]	; 127ec <floor@plt+0x1420>
   12f38:	ldr	r0, [pc, #-1904]	; 127d0 <floor@plt+0x1404>
   12f3c:	ldr	r3, [r2, #1068]	; 0x42c
   12f40:	add	r3, r3, #1
   12f44:	str	r3, [r2, #1068]	; 0x42c
   12f48:	bl	1a2d8 <floor@plt+0x8f0c>
   12f4c:	b	12e28 <floor@plt+0x1a5c>
   12f50:	ldr	r0, [pc, #-1924]	; 127d4 <floor@plt+0x1408>
   12f54:	mov	r4, r8
   12f58:	bl	1a2d8 <floor@plt+0x8f0c>
   12f5c:	mov	r5, #2
   12f60:	b	12eb0 <floor@plt+0x1ae4>
   12f64:	ldr	r3, [pc, #-1940]	; 127d8 <floor@plt+0x140c>
   12f68:	mov	r2, #1
   12f6c:	str	r2, [r3]
   12f70:	b	12c78 <floor@plt+0x18ac>
   12f74:	mov	r2, #52	; 0x34
   12f78:	mov	r3, #1
   12f7c:	strd	r2, [sp, #120]	; 0x78
   12f80:	b	12c78 <floor@plt+0x18ac>
   12f84:	mov	r2, #44	; 0x2c
   12f88:	mov	r3, #1
   12f8c:	strd	r2, [sp, #120]	; 0x78
   12f90:	b	12c78 <floor@plt+0x18ac>
   12f94:	mov	r2, #32
   12f98:	mov	r3, #1
   12f9c:	strd	r2, [sp, #120]	; 0x78
   12fa0:	b	12c78 <floor@plt+0x18ac>
   12fa4:	mov	r2, #36	; 0x24
   12fa8:	mov	r3, #1
   12fac:	strd	r2, [sp, #120]	; 0x78
   12fb0:	b	12c78 <floor@plt+0x18ac>
   12fb4:	mov	r2, #40	; 0x28
   12fb8:	mov	r3, #1
   12fbc:	strd	r2, [sp, #120]	; 0x78
   12fc0:	b	12c78 <floor@plt+0x18ac>
   12fc4:	ldr	r3, [pc, #-2036]	; 127d8 <floor@plt+0x140c>
   12fc8:	mov	r2, #0
   12fcc:	str	r2, [r3]
   12fd0:	b	12c78 <floor@plt+0x18ac>
   12fd4:	mov	r2, #28
   12fd8:	mov	r3, #1
   12fdc:	strd	r2, [sp, #120]	; 0x78
   12fe0:	b	12c78 <floor@plt+0x18ac>
   12fe4:	ldr	r3, [pc, #-2068]	; 127d8 <floor@plt+0x140c>
   12fe8:	mov	r2, #2
   12fec:	str	r2, [r3]
   12ff0:	b	12c78 <floor@plt+0x18ac>
   12ff4:	mov	r2, #48	; 0x30
   12ff8:	mov	r3, #1
   12ffc:	strd	r2, [sp, #120]	; 0x78
   13000:	b	12c78 <floor@plt+0x18ac>
   13004:	mov	r4, r8
   13008:	mov	r5, #1
   1300c:	b	12eb0 <floor@plt+0x1ae4>
   13010:	mov	r0, #232	; 0xe8
   13014:	bl	28660 <_Znwj@@Base>
   13018:	mov	r1, #4
   1301c:	mov	r9, r0
   13020:	bl	1de34 <floor@plt+0xca68>
   13024:	ldr	r3, [pc, #-2112]	; 127ec <floor@plt+0x1420>
   13028:	str	r9, [sp, #120]	; 0x78
   1302c:	ldr	r3, [r3, #4]
   13030:	str	r3, [r9, #200]	; 0xc8
   13034:	b	12c78 <floor@plt+0x18ac>
   13038:	mov	r0, #232	; 0xe8
   1303c:	bl	28660 <_Znwj@@Base>
   13040:	mov	r1, #3
   13044:	mov	r9, r0
   13048:	bl	1de34 <floor@plt+0xca68>
   1304c:	str	r9, [sp, #120]	; 0x78
   13050:	b	12c78 <floor@plt+0x18ac>
   13054:	mov	r0, #232	; 0xe8
   13058:	bl	28660 <_Znwj@@Base>
   1305c:	mov	r1, #5
   13060:	mov	r9, r0
   13064:	bl	1de34 <floor@plt+0xca68>
   13068:	ldr	r0, [pc, #-2188]	; 127e4 <floor@plt+0x1418>
   1306c:	str	r9, [sp, #120]	; 0x78
   13070:	bl	11e40 <floor@plt+0xa74>
   13074:	ldr	r5, [sp, #120]	; 0x78
   13078:	cmp	r0, #0
   1307c:	ldrdne	r2, [r0, #8]
   13080:	ldr	r0, [pc, #-2208]	; 127e8 <floor@plt+0x141c>
   13084:	strdne	r2, [r9, #136]	; 0x88
   13088:	bl	11e40 <floor@plt+0xa74>
   1308c:	cmp	r0, #0
   13090:	ldrdne	r2, [r0, #8]
   13094:	strdne	r2, [r5, #128]	; 0x80
   13098:	ldr	r2, [pc, #-2228]	; 127ec <floor@plt+0x1420>
   1309c:	ldr	r3, [sp, #120]	; 0x78
   130a0:	ldr	r2, [r2, #4]
   130a4:	str	r2, [r3, #200]	; 0xc8
   130a8:	b	12c78 <floor@plt+0x18ac>
   130ac:	mov	r0, #232	; 0xe8
   130b0:	bl	28660 <_Znwj@@Base>
   130b4:	mov	r1, #7
   130b8:	mov	r9, r0
   130bc:	bl	1de34 <floor@plt+0xca68>
   130c0:	ldr	r0, [pc, #-2276]	; 127e4 <floor@plt+0x1418>
   130c4:	str	r9, [sp, #120]	; 0x78
   130c8:	bl	11e40 <floor@plt+0xa74>
   130cc:	ldr	r5, [sp, #120]	; 0x78
   130d0:	cmp	r0, #0
   130d4:	ldrdne	r2, [r0, #8]
   130d8:	ldr	r0, [pc, #-2296]	; 127e8 <floor@plt+0x141c>
   130dc:	strdne	r2, [r9, #136]	; 0x88
   130e0:	bl	11e40 <floor@plt+0xa74>
   130e4:	cmp	r0, #0
   130e8:	ldrdne	r2, [r0, #8]
   130ec:	strdne	r2, [r5, #128]	; 0x80
   130f0:	ldr	r2, [pc, #-2316]	; 127ec <floor@plt+0x1420>
   130f4:	ldr	r3, [sp, #120]	; 0x78
   130f8:	ldr	r2, [r2, #4]
   130fc:	str	r2, [r3, #200]	; 0xc8
   13100:	b	12c78 <floor@plt+0x18ac>
   13104:	mov	r0, #232	; 0xe8
   13108:	bl	28660 <_Znwj@@Base>
   1310c:	mov	r1, #8
   13110:	mov	r9, r0
   13114:	bl	1de34 <floor@plt+0xca68>
   13118:	ldr	r0, [pc, #-2372]	; 127dc <floor@plt+0x1410>
   1311c:	str	r9, [sp, #120]	; 0x78
   13120:	bl	11e40 <floor@plt+0xa74>
   13124:	ldr	r5, [sp, #120]	; 0x78
   13128:	cmp	r0, #0
   1312c:	ldrdne	r2, [r0, #8]
   13130:	ldr	r0, [pc, #-2392]	; 127e0 <floor@plt+0x1414>
   13134:	strdne	r2, [r9, #136]	; 0x88
   13138:	bl	11e40 <floor@plt+0xa74>
   1313c:	cmp	r0, #0
   13140:	ldrdne	r2, [r0, #8]
   13144:	strdne	r2, [r5, #128]	; 0x80
   13148:	ldr	r2, [pc, #-2404]	; 127ec <floor@plt+0x1420>
   1314c:	ldr	r3, [sp, #120]	; 0x78
   13150:	ldr	r2, [r2, #4]
   13154:	str	r2, [r3, #200]	; 0xc8
   13158:	b	12c78 <floor@plt+0x18ac>
   1315c:	mov	r0, #232	; 0xe8
   13160:	bl	28660 <_Znwj@@Base>
   13164:	mov	r1, #6
   13168:	mov	r9, r0
   1316c:	bl	1de34 <floor@plt+0xca68>
   13170:	ldr	r0, [pc, #-2452]	; 127e4 <floor@plt+0x1418>
   13174:	str	r9, [sp, #120]	; 0x78
   13178:	bl	11e40 <floor@plt+0xa74>
   1317c:	ldr	r5, [sp, #120]	; 0x78
   13180:	cmp	r0, #0
   13184:	ldrdne	r2, [r0, #8]
   13188:	ldr	r0, [pc, #-2472]	; 127e8 <floor@plt+0x141c>
   1318c:	strdne	r2, [r9, #136]	; 0x88
   13190:	bl	11e40 <floor@plt+0xa74>
   13194:	cmp	r0, #0
   13198:	ldrdne	r2, [r0, #8]
   1319c:	strdne	r2, [r5, #128]	; 0x80
   131a0:	ldr	r2, [pc, #-2492]	; 127ec <floor@plt+0x1420>
   131a4:	ldr	r3, [sp, #120]	; 0x78
   131a8:	ldr	r2, [r2, #4]
   131ac:	str	r2, [r3, #200]	; 0xc8
   131b0:	b	12c78 <floor@plt+0x18ac>
   131b4:	mov	r3, #9
   131b8:	str	r3, [sp, #120]	; 0x78
   131bc:	b	12c78 <floor@plt+0x18ac>
   131c0:	mov	r3, #7
   131c4:	str	r3, [sp, #120]	; 0x78
   131c8:	b	12c78 <floor@plt+0x18ac>
   131cc:	mov	r3, #6
   131d0:	str	r3, [sp, #120]	; 0x78
   131d4:	b	12c78 <floor@plt+0x18ac>
   131d8:	mov	r3, #4
   131dc:	str	r3, [sp, #120]	; 0x78
   131e0:	b	12c78 <floor@plt+0x18ac>
   131e4:	mov	r3, #3
   131e8:	str	r3, [sp, #120]	; 0x78
   131ec:	b	12c78 <floor@plt+0x18ac>
   131f0:	mov	r3, #10
   131f4:	str	r3, [sp, #120]	; 0x78
   131f8:	b	12c78 <floor@plt+0x18ac>
   131fc:	mov	r3, #5
   13200:	str	r3, [sp, #120]	; 0x78
   13204:	b	12c78 <floor@plt+0x18ac>
   13208:	ldr	r3, [r6, #-48]	; 0xffffffd0
   1320c:	vldr	d6, [r6]
   13210:	mov	r2, #0
   13214:	vldr	d7, [r3, #208]	; 0xd0
   13218:	str	r2, [r3, #200]	; 0xc8
   1321c:	ldr	r2, [r3]
   13220:	str	r3, [sp, #120]	; 0x78
   13224:	vadd.f64	d7, d7, d6
   13228:	orr	r2, r2, #128	; 0x80
   1322c:	str	r2, [r3]
   13230:	vstr	d7, [r3, #208]	; 0xd0
   13234:	b	12c78 <floor@plt+0x18ac>
   13238:	ldr	r3, [r6, #-24]	; 0xffffffe8
   1323c:	mov	r2, #0
   13240:	str	r3, [sp, #120]	; 0x78
   13244:	vldr	d7, [r3, #208]	; 0xd0
   13248:	vldr	d6, [r3, #128]	; 0x80
   1324c:	str	r2, [r3, #200]	; 0xc8
   13250:	ldr	r2, [r3]
   13254:	vadd.f64	d7, d7, d6
   13258:	orr	r2, r2, #128	; 0x80
   1325c:	str	r2, [r3]
   13260:	vstr	d7, [r3, #208]	; 0xd0
   13264:	b	12c78 <floor@plt+0x18ac>
   13268:	ldr	r3, [r6, #-48]	; 0xffffffd0
   1326c:	vldr	d6, [r6]
   13270:	mov	r2, #3
   13274:	vldr	d7, [r3, #216]	; 0xd8
   13278:	str	r2, [r3, #200]	; 0xc8
   1327c:	ldr	r2, [r3]
   13280:	str	r3, [sp, #120]	; 0x78
   13284:	vsub.f64	d7, d7, d6
   13288:	orr	r2, r2, #128	; 0x80
   1328c:	str	r2, [r3]
   13290:	vstr	d7, [r3, #216]	; 0xd8
   13294:	b	12c78 <floor@plt+0x18ac>
   13298:	ldr	r3, [r6, #-24]	; 0xffffffe8
   1329c:	mov	r2, #3
   132a0:	str	r3, [sp, #120]	; 0x78
   132a4:	vldr	d7, [r3, #216]	; 0xd8
   132a8:	vldr	d6, [r3, #136]	; 0x88
   132ac:	str	r2, [r3, #200]	; 0xc8
   132b0:	ldr	r2, [r3]
   132b4:	vsub.f64	d7, d7, d6
   132b8:	orr	r2, r2, #128	; 0x80
   132bc:	str	r2, [r3]
   132c0:	vstr	d7, [r3, #216]	; 0xd8
   132c4:	b	12c78 <floor@plt+0x18ac>
   132c8:	ldr	r3, [r6, #-48]	; 0xffffffd0
   132cc:	vldr	d6, [r6]
   132d0:	mov	r2, #1
   132d4:	vldr	d7, [r3, #216]	; 0xd8
   132d8:	str	r2, [r3, #200]	; 0xc8
   132dc:	ldr	r2, [r3]
   132e0:	str	r3, [sp, #120]	; 0x78
   132e4:	vadd.f64	d7, d7, d6
   132e8:	orr	r2, r2, #128	; 0x80
   132ec:	str	r2, [r3]
   132f0:	vstr	d7, [r3, #216]	; 0xd8
   132f4:	b	12c78 <floor@plt+0x18ac>
   132f8:	ldr	r3, [r6, #-24]	; 0xffffffe8
   132fc:	mov	r2, #1
   13300:	str	r3, [sp, #120]	; 0x78
   13304:	vldr	d7, [r3, #216]	; 0xd8
   13308:	vldr	d6, [r3, #136]	; 0x88
   1330c:	str	r2, [r3, #200]	; 0xc8
   13310:	ldr	r2, [r3]
   13314:	vadd.f64	d7, d7, d6
   13318:	orr	r2, r2, #128	; 0x80
   1331c:	str	r2, [r3]
   13320:	vstr	d7, [r3, #216]	; 0xd8
   13324:	b	12c78 <floor@plt+0x18ac>
   13328:	ldr	r3, [r6, #-24]	; 0xffffffe8
   1332c:	str	r3, [sp, #120]	; 0x78
   13330:	ldr	r2, [r3]
   13334:	ldr	r1, [r3, #200]	; 0xc8
   13338:	orr	r2, r2, #128	; 0x80
   1333c:	str	r2, [r3]
   13340:	cmp	r1, #3
   13344:	ldrls	pc, [pc, r1, lsl #2]
   13348:	b	12c78 <floor@plt+0x18ac>
   1334c:	andeq	r5, r1, r0, asr #5
   13350:	andeq	r5, r1, ip, lsr #5
   13354:	muleq	r1, r8, r2
   13358:	andeq	r5, r1, r4, lsl #5
   1335c:	vldr	d7, [r6]
   13360:	vldr	d6, [pc, #920]	; 13700 <floor@plt+0x2334>
   13364:	ldr	r3, [r6, #-48]	; 0xffffffd0
   13368:	str	r3, [sp, #120]	; 0x78
   1336c:	vmul.f64	d7, d7, d6
   13370:	ldr	r2, [r3]
   13374:	orr	r2, r2, #16384	; 0x4000
   13378:	str	r2, [r3]
   1337c:	vstr	d7, [r3, #112]	; 0x70
   13380:	b	12c78 <floor@plt+0x18ac>
   13384:	ldr	r3, [r6, #-48]	; 0xffffffd0
   13388:	ldrd	r0, [r6]
   1338c:	str	r3, [sp, #120]	; 0x78
   13390:	ldr	r2, [r3]
   13394:	strd	r0, [r3, #120]	; 0x78
   13398:	orr	r2, r2, #8192	; 0x2000
   1339c:	str	r2, [r3]
   133a0:	b	12c78 <floor@plt+0x18ac>
   133a4:	ldr	r3, [r6, #-48]	; 0xffffffd0
   133a8:	ldrd	r0, [r6]
   133ac:	str	r3, [sp, #120]	; 0x78
   133b0:	ldr	r2, [r3]
   133b4:	strd	r0, [r3, #112]	; 0x70
   133b8:	orr	r2, r2, #16384	; 0x4000
   133bc:	str	r2, [r3]
   133c0:	b	12c78 <floor@plt+0x18ac>
   133c4:	ldr	r3, [r6, #-48]	; 0xffffffd0
   133c8:	ldrd	r0, [r6]
   133cc:	str	r3, [sp, #120]	; 0x78
   133d0:	ldr	r2, [r3]
   133d4:	strd	r0, [r3, #104]	; 0x68
   133d8:	orr	r2, r2, #4096	; 0x1000
   133dc:	str	r2, [r3]
   133e0:	b	12c78 <floor@plt+0x18ac>
   133e4:	ldr	r3, [r6, #-48]	; 0xffffffd0
   133e8:	ldr	r5, [pc, #868]	; 13754 <floor@plt+0x2388>
   133ec:	mov	r0, #232	; 0xe8
   133f0:	vldr	d6, [r3]
   133f4:	vldr	d7, [r3, #8]
   133f8:	ldr	r3, [r3, #16]
   133fc:	vstr	d6, [r5, #8]
   13400:	vstr	d7, [r5, #16]
   13404:	str	r3, [r5, #4]
   13408:	bl	28660 <_Znwj@@Base>
   1340c:	mov	r1, #10
   13410:	mov	r9, r0
   13414:	bl	1de34 <floor@plt+0xca68>
   13418:	add	r1, r9, #8
   1341c:	add	r0, r5, #36	; 0x24
   13420:	str	r9, [sp, #120]	; 0x78
   13424:	bl	1df98 <floor@plt+0xcbcc>
   13428:	ldr	r3, [pc, #728]	; 13708 <floor@plt+0x233c>
   1342c:	ldr	r0, [r6, #-48]	; 0xffffffd0
   13430:	ldr	r2, [sp, #120]	; 0x78
   13434:	ldr	ip, [r3]
   13438:	ldr	r1, [r0, #28]
   1343c:	str	ip, [r2, #16]
   13440:	ldr	r2, [r0, #24]
   13444:	str	r1, [r3]
   13448:	str	r2, [r5]
   1344c:	bl	286b0 <_ZdlPv@@Base>
   13450:	b	12c78 <floor@plt+0x18ac>
   13454:	mov	r0, #32
   13458:	bl	28660 <_Znwj@@Base>
   1345c:	ldr	ip, [pc, #752]	; 13754 <floor@plt+0x2388>
   13460:	ldr	r9, [pc, #672]	; 13708 <floor@plt+0x233c>
   13464:	ldrd	r2, [ip, #16]
   13468:	vstr	d8, [ip, #16]
   1346c:	mov	r5, r0
   13470:	ldrd	r0, [ip, #8]
   13474:	strd	r2, [r5, #8]
   13478:	ldr	r2, [r9]
   1347c:	strd	r0, [r5]
   13480:	ldr	r3, [ip]
   13484:	ldr	r1, [ip, #4]
   13488:	mov	r0, #12
   1348c:	str	r1, [r5, #16]
   13490:	str	r2, [r5, #28]
   13494:	str	r3, [r5, #24]
   13498:	str	r5, [sp, #120]	; 0x78
   1349c:	vstr	d8, [ip, #8]
   134a0:	bl	28660 <_Znwj@@Base>
   134a4:	str	r0, [sp, #36]	; 0x24
   134a8:	bl	11a34 <floor@plt+0x668>
   134ac:	ldr	r0, [pc, #672]	; 13754 <floor@plt+0x2388>
   134b0:	ldr	r3, [sp, #36]	; 0x24
   134b4:	str	r5, [r0]
   134b8:	str	r3, [r9]
   134bc:	bl	1df1c <floor@plt+0xcb50>
   134c0:	mov	r1, r0
   134c4:	ldr	r0, [pc, #616]	; 13734 <floor@plt+0x2368>
   134c8:	bl	1df68 <floor@plt+0xcb9c>
   134cc:	b	12c78 <floor@plt+0x18ac>
   134d0:	mov	r0, #232	; 0xe8
   134d4:	bl	28660 <_Znwj@@Base>
   134d8:	mov	r1, #9
   134dc:	mov	r9, r0
   134e0:	bl	1de34 <floor@plt+0xca68>
   134e4:	vldr	d7, [r6]
   134e8:	add	r1, sp, #144	; 0x90
   134ec:	mov	r2, #1
   134f0:	ldr	r0, [pc, #532]	; 1370c <floor@plt+0x2340>
   134f4:	str	r9, [sp, #120]	; 0x78
   134f8:	vstr	d7, [sp, #144]	; 0x90
   134fc:	bl	12294 <floor@plt+0xec8>
   13500:	mov	r5, r0
   13504:	mov	r0, #24
   13508:	bl	28660 <_Znwj@@Base>
   1350c:	mov	r1, r5
   13510:	mvn	r3, #0
   13514:	mov	r2, #0
   13518:	mov	r9, r0
   1351c:	bl	1ddf4 <floor@plt+0xca28>
   13520:	ldr	r3, [sp, #120]	; 0x78
   13524:	str	r9, [r3, #100]	; 0x64
   13528:	b	12c78 <floor@plt+0x18ac>
   1352c:	mov	r0, #232	; 0xe8
   13530:	bl	28660 <_Znwj@@Base>
   13534:	mov	r1, #9
   13538:	mov	r5, r0
   1353c:	bl	1de34 <floor@plt+0xca68>
   13540:	vldr	d7, [r6, #-24]	; 0xffffffe8
   13544:	ldr	r0, [r6]
   13548:	ldr	r3, [pc, #444]	; 1370c <floor@plt+0x2340>
   1354c:	cmp	r0, #0
   13550:	add	r9, sp, #144	; 0x90
   13554:	mov	r1, r9
   13558:	moveq	r0, r3
   1355c:	mov	r2, #1
   13560:	str	r5, [sp, #120]	; 0x78
   13564:	vstr	d7, [sp, #144]	; 0x90
   13568:	bl	12294 <floor@plt+0xec8>
   1356c:	mov	r5, r0
   13570:	mov	r0, #24
   13574:	bl	28660 <_Znwj@@Base>
   13578:	mov	r1, r5
   1357c:	ldrd	r2, [r6, #4]
   13580:	mov	r9, r0
   13584:	bl	1ddf4 <floor@plt+0xca28>
   13588:	ldr	r0, [r6]
   1358c:	ldr	r3, [sp, #120]	; 0x78
   13590:	cmp	r0, #0
   13594:	str	r9, [r3, #100]	; 0x64
   13598:	beq	12c78 <floor@plt+0x18ac>
   1359c:	bl	1121c <_ZdaPv@plt>
   135a0:	b	12c78 <floor@plt+0x18ac>
   135a4:	mov	r0, #232	; 0xe8
   135a8:	bl	28660 <_Znwj@@Base>
   135ac:	mov	r1, #9
   135b0:	mov	r9, r0
   135b4:	bl	1de34 <floor@plt+0xca68>
   135b8:	mov	r0, #24
   135bc:	str	r9, [sp, #120]	; 0x78
   135c0:	bl	28660 <_Znwj@@Base>
   135c4:	ldrd	r2, [r6, #4]
   135c8:	ldr	r1, [r6]
   135cc:	mov	r9, r0
   135d0:	bl	1ddf4 <floor@plt+0xca28>
   135d4:	ldr	r3, [sp, #120]	; 0x78
   135d8:	str	r9, [r3, #100]	; 0x64
   135dc:	b	12c78 <floor@plt+0x18ac>
   135e0:	mov	r3, #0
   135e4:	str	r3, [sp, #120]	; 0x78
   135e8:	str	r3, [sp, #124]	; 0x7c
   135ec:	str	r3, [sp, #128]	; 0x80
   135f0:	b	12c78 <floor@plt+0x18ac>
   135f4:	ldr	r0, [r6, #-44]	; 0xffffffd4
   135f8:	ldr	r3, [r6, #-40]	; 0xffffffd8
   135fc:	str	r0, [sp, #124]	; 0x7c
   13600:	ldr	r2, [r6, #-20]	; 0xffffffec
   13604:	ldr	r1, [r6, #-24]	; 0xffffffe8
   13608:	ldr	r0, [r6, #-48]	; 0xffffffd0
   1360c:	str	r3, [sp, #128]	; 0x80
   13610:	bl	12294 <floor@plt+0xec8>
   13614:	ldr	r3, [r6, #-24]	; 0xffffffe8
   13618:	cmp	r3, #0
   1361c:	str	r0, [sp, #120]	; 0x78
   13620:	beq	1362c <floor@plt+0x2260>
   13624:	mov	r0, r3
   13628:	bl	1121c <_ZdaPv@plt>
   1362c:	ldr	r0, [r6, #-48]	; 0xffffffd0
   13630:	bl	110e4 <free@plt>
   13634:	b	12c78 <floor@plt+0x18ac>
   13638:	mov	r2, #64	; 0x40
   1363c:	mov	r3, #1
   13640:	strd	r2, [sp, #120]	; 0x78
   13644:	b	12c78 <floor@plt+0x18ac>
   13648:	vldr	d7, [r6, #-24]	; 0xffffffe8
   1364c:	vstr	d8, [sp, #120]	; 0x78
   13650:	vcvt.u32.f64	s15, d7
   13654:	vmov	r0, s15
   13658:	bl	11390 <srand@plt>
   1365c:	b	12c78 <floor@plt+0x18ac>
   13660:	bl	110b4 <rand@plt>
   13664:	vldr	d6, [r6, #-24]	; 0xffffffe8
   13668:	lsl	r0, r0, #17
   1366c:	lsr	r0, r0, #17
   13670:	vmov	s15, r0
   13674:	vcvt.f64.s32	d7, s15
   13678:	vdiv.f64	d0, d7, d10
   1367c:	vmul.f64	d0, d0, d6
   13680:	bl	113cc <floor@plt>
   13684:	vadd.f64	d0, d0, d9
   13688:	vstr	d0, [sp, #120]	; 0x78
   1368c:	b	12c78 <floor@plt+0x18ac>
   13690:	mov	r2, #28
   13694:	mov	r3, #1
   13698:	strd	r2, [sp, #120]	; 0x78
   1369c:	b	12c78 <floor@plt+0x18ac>
   136a0:	mov	r2, #24
   136a4:	mov	r3, #1
   136a8:	strd	r2, [sp, #120]	; 0x78
   136ac:	b	12c78 <floor@plt+0x18ac>
   136b0:	vldr	d7, [r6, #-72]	; 0xffffffb8
   136b4:	vldr	d6, [r6, #-24]	; 0xffffffe8
   136b8:	vcmpe.f64	d7, d6
   136bc:	vmrs	APSR_nzcv, fpscr
   136c0:	vmovpl.f64	d7, d6
   136c4:	vstr	d7, [sp, #120]	; 0x78
   136c8:	b	12c78 <floor@plt+0x18ac>
   136cc:	ldr	r2, [pc, #128]	; 13754 <floor@plt+0x2388>
   136d0:	mov	r3, #2
   136d4:	str	r3, [r2, #4]
   136d8:	b	12c78 <floor@plt+0x18ac>
   136dc:	ldr	r2, [pc, #112]	; 13754 <floor@plt+0x2388>
   136e0:	mov	r3, #3
   136e4:	str	r3, [r2, #4]
   136e8:	b	12c78 <floor@plt+0x18ac>
   136ec:	ldr	r2, [pc, #96]	; 13754 <floor@plt+0x2388>
   136f0:	mov	r3, #1
   136f4:	str	r3, [r2, #4]
   136f8:	b	12c78 <floor@plt+0x18ac>
   136fc:	nop			; (mov r0, r0)
   13700:	andeq	r0, r0, r0
   13704:	svccc	0x00e00000
   13708:	andeq	r2, r4, r8
   1370c:			; <UNDEFINED> instruction: 0x0002e4b4
   13710:	andeq	lr, r2, r4, lsr #11
   13714:	andeq	lr, r2, ip, ror r5
   13718:	andeq	r2, r4, r4, lsl r9
   1371c:	andeq	lr, r2, r4, asr r5
   13720:	andeq	fp, r2, r0
   13724:	andeq	lr, r2, r0, lsr #8
   13728:	andeq	lr, r2, r8, lsr #10
   1372c:	andeq	r2, r4, r0, asr r4
   13730:	andeq	pc, r2, r4, lsr #2
   13734:	andeq	r2, r4, r4, lsl #9
   13738:	andeq	lr, r2, r8, ror r6
   1373c:	muleq	r2, r4, r6
   13740:	andeq	r2, r4, r4, lsr #6
   13744:	andeq	r2, r4, r0, lsl #18
   13748:	muleq	r2, r4, r4
   1374c:	ldrdeq	lr, [r2], -r8
   13750:	andeq	r2, r4, r4, ror #8
   13754:	andeq	r2, r4, r0, ror #8
   13758:			; <UNDEFINED> instruction: 0x000454b8
   1375c:	andeq	lr, r2, r4, lsr r6
   13760:	ldr	r0, [r6, #-72]	; 0xffffffb8
   13764:	bl	11e40 <floor@plt+0xa74>
   13768:	cmp	r0, #0
   1376c:	beq	15668 <floor@plt+0x429c>
   13770:	mov	r3, #0
   13774:	str	r3, [r0]
   13778:	ldrd	r2, [r6]
   1377c:	vstr	d8, [r0, #16]
   13780:	strd	r2, [r0, #8]
   13784:	ldr	r0, [r6, #-72]	; 0xffffffb8
   13788:	bl	110e4 <free@plt>
   1378c:	b	12c78 <floor@plt+0x18ac>
   13790:	ldr	r0, [r6, #-48]	; 0xffffffd0
   13794:	vldr	d0, [r6]
   13798:	bl	11ef0 <floor@plt+0xb24>
   1379c:	ldr	r0, [r6, #-48]	; 0xffffffd0
   137a0:	bl	110e4 <free@plt>
   137a4:	b	12c78 <floor@plt+0x18ac>
   137a8:	sub	lr, r6, #48	; 0x30
   137ac:	add	ip, sp, #120	; 0x78
   137b0:	ldm	lr!, {r0, r1, r2, r3}
   137b4:	stmia	ip!, {r0, r1, r2, r3}
   137b8:	ldm	lr, {r0, r1}
   137bc:	stm	ip, {r0, r1}
   137c0:	b	12c78 <floor@plt+0x18ac>
   137c4:	mov	lr, r6
   137c8:	add	ip, sp, #120	; 0x78
   137cc:	ldm	lr!, {r0, r1, r2, r3}
   137d0:	stmia	ip!, {r0, r1, r2, r3}
   137d4:	ldm	lr, {r0, r1}
   137d8:	stm	ip, {r0, r1}
   137dc:	b	12c78 <floor@plt+0x18ac>
   137e0:	ldr	r1, [r6, #-24]	; 0xffffffe8
   137e4:	add	r0, sp, #144	; 0x90
   137e8:	bl	27058 <floor@plt+0x15c8c>
   137ec:	ldr	r3, [pc, #-156]	; 13758 <floor@plt+0x238c>
   137f0:	ldr	r0, [pc, #-232]	; 13710 <floor@plt+0x2344>
   137f4:	add	r1, sp, #144	; 0x90
   137f8:	mov	r2, r3
   137fc:	bl	1854c <floor@plt+0x7180>
   13800:	ldr	r0, [r6, #-24]	; 0xffffffe8
   13804:	cmp	r0, #0
   13808:	beq	13810 <floor@plt+0x2444>
   1380c:	bl	1121c <_ZdaPv@plt>
   13810:	ldr	r3, [r6]
   13814:	str	r3, [sp, #120]	; 0x78
   13818:	b	12c78 <floor@plt+0x18ac>
   1381c:	add	r9, sp, #80	; 0x50
   13820:	sub	r5, r9, #24
   13824:	mov	r0, r5
   13828:	ldr	r1, [r6, #-48]	; 0xffffffd0
   1382c:	bl	27084 <floor@plt+0x15cb8>
   13830:	ldr	r0, [r6, #-48]	; 0xffffffd0
   13834:	sub	r3, r0, #10
   13838:	cmp	r3, #10
   1383c:	bls	15340 <floor@plt+0x3f74>
   13840:	bl	119c4 <floor@plt+0x5f8>
   13844:	mov	r1, r0
   13848:	sub	r9, r9, #8
   1384c:	mov	r0, r9
   13850:	bl	27058 <floor@plt+0x15c8c>
   13854:	ldr	r3, [r6, #-24]	; 0xffffffe8
   13858:	add	r0, sp, #144	; 0x90
   1385c:	sub	r3, r3, #1
   13860:	cmp	r3, #9
   13864:	ldrls	r2, [pc, #-332]	; 13720 <floor@plt+0x2354>
   13868:	ldrhi	r1, [pc, #-332]	; 13724 <floor@plt+0x2358>
   1386c:	addls	r3, r2, r3, lsl #2
   13870:	ldrls	r1, [r3, #528]	; 0x210
   13874:	bl	27058 <floor@plt+0x15c8c>
   13878:	add	r3, sp, #144	; 0x90
   1387c:	mov	r2, r9
   13880:	mov	r1, r5
   13884:	ldr	r0, [pc, #-376]	; 13714 <floor@plt+0x2348>
   13888:	bl	1854c <floor@plt+0x7180>
   1388c:	ldr	r3, [r6]
   13890:	str	r3, [sp, #120]	; 0x78
   13894:	b	12c78 <floor@plt+0x18ac>
   13898:	ldr	r5, [pc, #-392]	; 13718 <floor@plt+0x234c>
   1389c:	ldr	r0, [r5]
   138a0:	cmp	r0, #0
   138a4:	beq	138ac <floor@plt+0x24e0>
   138a8:	bl	1121c <_ZdaPv@plt>
   138ac:	ldr	r0, [r6]
   138b0:	bl	11288 <strlen@plt>
   138b4:	add	r0, r0, #1
   138b8:	bl	1115c <_Znaj@plt>
   138bc:	ldr	r9, [r6]
   138c0:	mov	r1, r9
   138c4:	str	r0, [r5]
   138c8:	bl	111b0 <strcpy@plt>
   138cc:	mov	r0, r9
   138d0:	bl	1121c <_ZdaPv@plt>
   138d4:	b	12c78 <floor@plt+0x18ac>
   138d8:	ldr	r3, [r6, #-24]	; 0xffffffe8
   138dc:	add	r0, sp, #144	; 0x90
   138e0:	sub	r3, r3, #1
   138e4:	cmp	r3, #9
   138e8:	ldrls	r2, [pc, #-464]	; 13720 <floor@plt+0x2354>
   138ec:	ldrhi	r1, [pc, #-464]	; 13724 <floor@plt+0x2358>
   138f0:	addls	r3, r2, r3, lsl #2
   138f4:	ldrls	r1, [r3, #528]	; 0x210
   138f8:	bl	27058 <floor@plt+0x15c8c>
   138fc:	ldr	r3, [pc, #-428]	; 13758 <floor@plt+0x238c>
   13900:	add	r1, sp, #144	; 0x90
   13904:	mov	r2, r3
   13908:	ldr	r0, [pc, #-500]	; 1371c <floor@plt+0x2350>
   1390c:	bl	1854c <floor@plt+0x7180>
   13910:	ldr	r3, [r6]
   13914:	str	r3, [sp, #120]	; 0x78
   13918:	b	12c78 <floor@plt+0x18ac>
   1391c:	add	r9, sp, #80	; 0x50
   13920:	sub	r5, r9, #24
   13924:	mov	r0, r5
   13928:	ldr	r1, [r6, #-72]	; 0xffffffb8
   1392c:	bl	27084 <floor@plt+0x15cb8>
   13930:	ldr	r0, [r6, #-72]	; 0xffffffb8
   13934:	sub	r3, r0, #10
   13938:	cmp	r3, #10
   1393c:	bls	15348 <floor@plt+0x3f7c>
   13940:	bl	119c4 <floor@plt+0x5f8>
   13944:	mov	r1, r0
   13948:	sub	r9, r9, #8
   1394c:	mov	r0, r9
   13950:	bl	27058 <floor@plt+0x15c8c>
   13954:	ldr	r3, [r6, #-24]	; 0xffffffe8
   13958:	add	r0, sp, #144	; 0x90
   1395c:	sub	r3, r3, #1
   13960:	cmp	r3, #9
   13964:	ldrls	r2, [pc, #-588]	; 13720 <floor@plt+0x2354>
   13968:	ldrhi	r1, [pc, #-588]	; 13724 <floor@plt+0x2358>
   1396c:	addls	r3, r2, r3, lsl #2
   13970:	ldrls	r1, [r3, #528]	; 0x210
   13974:	bl	27058 <floor@plt+0x15c8c>
   13978:	add	r3, sp, #144	; 0x90
   1397c:	mov	r2, r9
   13980:	mov	r1, r5
   13984:	ldr	r0, [pc, #-612]	; 13728 <floor@plt+0x235c>
   13988:	bl	1854c <floor@plt+0x7180>
   1398c:	ldr	r3, [r6]
   13990:	str	r3, [sp, #120]	; 0x78
   13994:	b	12c78 <floor@plt+0x18ac>
   13998:	ldr	r3, [r6, #-72]	; 0xffffffb8
   1399c:	ldr	r1, [r6, #-24]	; 0xffffffe8
   139a0:	mov	r0, r3
   139a4:	str	r3, [sp, #120]	; 0x78
   139a8:	bl	1f274 <floor@plt+0xdea8>
   139ac:	b	12c78 <floor@plt+0x18ac>
   139b0:	ldr	r3, [r6]
   139b4:	str	r3, [sp, #120]	; 0x78
   139b8:	b	12c78 <floor@plt+0x18ac>
   139bc:	ldr	r3, [r6, #-24]	; 0xffffffe8
   139c0:	ldm	r6, {r1, r2}
   139c4:	mov	r0, r3
   139c8:	str	r3, [sp, #120]	; 0x78
   139cc:	bl	1f1d0 <floor@plt+0xde04>
   139d0:	b	12c78 <floor@plt+0x18ac>
   139d4:	ldr	r3, [r6]
   139d8:	str	r3, [sp, #120]	; 0x78
   139dc:	b	12c78 <floor@plt+0x18ac>
   139e0:	mov	r0, #40	; 0x28
   139e4:	bl	28660 <_Znwj@@Base>
   139e8:	ldm	r6, {r1, r2}
   139ec:	mov	r9, r0
   139f0:	bl	1efa0 <floor@plt+0xdbd4>
   139f4:	str	r9, [sp, #120]	; 0x78
   139f8:	b	12c78 <floor@plt+0x18ac>
   139fc:	ldr	r3, [r6, #-48]	; 0xffffffd0
   13a00:	ldr	r1, [r6]
   13a04:	mov	r0, r3
   13a08:	str	r3, [sp, #120]	; 0x78
   13a0c:	bl	1f228 <floor@plt+0xde5c>
   13a10:	b	12c78 <floor@plt+0x18ac>
   13a14:	mov	r0, #40	; 0x28
   13a18:	bl	28660 <_Znwj@@Base>
   13a1c:	add	r3, sp, #48	; 0x30
   13a20:	mov	r2, #0
   13a24:	str	r2, [sp, #48]	; 0x30
   13a28:	str	r2, [sp, #52]	; 0x34
   13a2c:	ldr	r1, [r6]
   13a30:	ldm	r3, {r2, r3}
   13a34:	mov	r9, r0
   13a38:	bl	1f020 <floor@plt+0xdc54>
   13a3c:	str	r9, [sp, #120]	; 0x78
   13a40:	b	12c78 <floor@plt+0x18ac>
   13a44:	mov	r2, #24
   13a48:	mov	r3, #1
   13a4c:	strd	r2, [sp, #120]	; 0x78
   13a50:	b	12c78 <floor@plt+0x18ac>
   13a54:	vldr	d0, [r6, #-24]	; 0xffffffe8
   13a58:	vcmpe.f64	d0, #0.0
   13a5c:	vmrs	APSR_nzcv, fpscr
   13a60:	bmi	1549c <floor@plt+0x40d0>
   13a64:	bl	113cc <floor@plt>
   13a68:	vstr	d0, [sp, #120]	; 0x78
   13a6c:	b	12c78 <floor@plt+0x18ac>
   13a70:	vldr	d7, [r6]
   13a74:	vldr	d6, [r6, #-48]	; 0xffffffd0
   13a78:	vcmpe.f64	d6, d7
   13a7c:	vmrs	APSR_nzcv, fpscr
   13a80:	vmovle.f64	d7, d8
   13a84:	vmovgt.f64	d7, d9
   13a88:	vstr	d7, [sp, #120]	; 0x78
   13a8c:	b	12c78 <floor@plt+0x18ac>
   13a90:	vldr	d7, [r6]
   13a94:	vldr	d6, [r6, #-48]	; 0xffffffd0
   13a98:	vcmp.f64	d6, d7
   13a9c:	vmrs	APSR_nzcv, fpscr
   13aa0:	vmovne.f64	d7, d8
   13aa4:	vmoveq.f64	d7, d9
   13aa8:	vstr	d7, [sp, #120]	; 0x78
   13aac:	b	12c78 <floor@plt+0x18ac>
   13ab0:	bl	110b4 <rand@plt>
   13ab4:	lsl	r0, r0, #17
   13ab8:	lsr	r0, r0, #17
   13abc:	vmov	s15, r0
   13ac0:	vcvt.f64.s32	d7, s15
   13ac4:	vmul.f64	d7, d7, d11
   13ac8:	vstr	d7, [sp, #120]	; 0x78
   13acc:	b	12c78 <floor@plt+0x18ac>
   13ad0:	mov	r2, #48	; 0x30
   13ad4:	mov	r3, #1
   13ad8:	strd	r2, [sp, #120]	; 0x78
   13adc:	b	12c78 <floor@plt+0x18ac>
   13ae0:	mov	r2, #40	; 0x28
   13ae4:	mov	r3, #1
   13ae8:	strd	r2, [sp, #120]	; 0x78
   13aec:	b	12c78 <floor@plt+0x18ac>
   13af0:	ldr	r3, [pc, #-932]	; 13754 <floor@plt+0x2388>
   13af4:	ldr	r0, [r3, #36]	; 0x24
   13af8:	cmp	r0, #0
   13afc:	beq	12c78 <floor@plt+0x18ac>
   13b00:	bl	209d0 <floor@plt+0xf604>
   13b04:	b	12c78 <floor@plt+0x18ac>
   13b08:	ldr	r5, [pc, #-996]	; 1372c <floor@plt+0x2360>
   13b0c:	ldr	r2, [r6]
   13b10:	ldr	r1, [pc, #-1000]	; 13730 <floor@plt+0x2364>
   13b14:	ldr	r0, [r5]
   13b18:	bl	29278 <_ZdlPv@@Base+0xbc8>
   13b1c:	ldr	r0, [r6]
   13b20:	cmp	r0, #0
   13b24:	beq	13b2c <floor@plt+0x2760>
   13b28:	bl	1121c <_ZdaPv@plt>
   13b2c:	ldr	r0, [r5]
   13b30:	bl	1130c <fflush@plt>
   13b34:	b	12c78 <floor@plt+0x18ac>
   13b38:	ldm	r6, {r0, r1, r2}
   13b3c:	bl	1dedc <floor@plt+0xcb10>
   13b40:	mov	r1, r0
   13b44:	ldr	r0, [pc, #-1048]	; 13734 <floor@plt+0x2368>
   13b48:	bl	1df68 <floor@plt+0xcb9c>
   13b4c:	b	12c78 <floor@plt+0x18ac>
   13b50:	ldm	r6, {r0, r1, r2}
   13b54:	bl	1dedc <floor@plt+0xcb10>
   13b58:	mov	r1, r0
   13b5c:	ldr	r0, [pc, #-1072]	; 13734 <floor@plt+0x2368>
   13b60:	bl	1df68 <floor@plt+0xcb9c>
   13b64:	b	12c78 <floor@plt+0x18ac>
   13b68:	ldr	r2, [pc, #-1052]	; 13754 <floor@plt+0x2388>
   13b6c:	mov	r3, #0
   13b70:	str	r3, [r2, #4]
   13b74:	b	12c78 <floor@plt+0x18ac>
   13b78:	bl	112e8 <__errno_location@plt>
   13b7c:	mov	r3, #0
   13b80:	vldr	d0, [r6, #-24]	; 0xffffffe8
   13b84:	str	r3, [r0]
   13b88:	bl	11138 <cos@plt>
   13b8c:	vstr	d0, [sp, #120]	; 0x78
   13b90:	b	12c78 <floor@plt+0x18ac>
   13b94:	bl	112e8 <__errno_location@plt>
   13b98:	mov	r3, #0
   13b9c:	vldr	d0, [r6, #-24]	; 0xffffffe8
   13ba0:	str	r3, [r0]
   13ba4:	bl	11348 <sin@plt>
   13ba8:	vstr	d0, [sp, #120]	; 0x78
   13bac:	b	12c78 <floor@plt+0x18ac>
   13bb0:	ldrd	r0, [r6, #-24]	; 0xffffffe8
   13bb4:	strd	r0, [sp, #120]	; 0x78
   13bb8:	b	12c78 <floor@plt+0x18ac>
   13bbc:	vldr	d7, [r6]
   13bc0:	vneg.f64	d7, d7
   13bc4:	vstr	d7, [sp, #120]	; 0x78
   13bc8:	b	12c78 <floor@plt+0x18ac>
   13bcc:	ldrd	r0, [r6]
   13bd0:	strd	r0, [sp, #120]	; 0x78
   13bd4:	b	12c78 <floor@plt+0x18ac>
   13bd8:	ldr	r0, [r6]
   13bdc:	bl	11e40 <floor@plt+0xa74>
   13be0:	cmp	r0, #0
   13be4:	beq	154b4 <floor@plt+0x40e8>
   13be8:	ldrd	r2, [r0, #8]
   13bec:	ldr	r0, [r6]
   13bf0:	strd	r2, [sp, #120]	; 0x78
   13bf4:	bl	110e4 <free@plt>
   13bf8:	b	12c78 <floor@plt+0x18ac>
   13bfc:	vldr	d7, [r6]
   13c00:	vldr	d6, [r6, #-48]	; 0xffffffd0
   13c04:	vcmpe.f64	d6, d7
   13c08:	vmrs	APSR_nzcv, fpscr
   13c0c:	vmovpl.f64	d7, d8
   13c10:	vmovmi.f64	d7, d9
   13c14:	vstr	d7, [sp, #120]	; 0x78
   13c18:	b	12c78 <floor@plt+0x18ac>
   13c1c:	ldrd	r0, [r6]
   13c20:	strd	r0, [sp, #120]	; 0x78
   13c24:	b	12c78 <floor@plt+0x18ac>
   13c28:	ldrd	r0, [r6]
   13c2c:	strd	r0, [sp, #120]	; 0x78
   13c30:	b	12c78 <floor@plt+0x18ac>
   13c34:	mov	r2, #60	; 0x3c
   13c38:	mov	r3, #1
   13c3c:	strd	r2, [sp, #120]	; 0x78
   13c40:	b	12c78 <floor@plt+0x18ac>
   13c44:	mov	r2, #56	; 0x38
   13c48:	mov	r3, #1
   13c4c:	strd	r2, [sp, #120]	; 0x78
   13c50:	b	12c78 <floor@plt+0x18ac>
   13c54:	bl	112e8 <__errno_location@plt>
   13c58:	mov	r3, #0
   13c5c:	vldr	d1, [r6, #-24]	; 0xffffffe8
   13c60:	vldr	d0, [r6, #-72]	; 0xffffffb8
   13c64:	str	r3, [r0]
   13c68:	mov	r5, r0
   13c6c:	bl	11210 <atan2@plt>
   13c70:	ldr	r2, [r5]
   13c74:	cmp	r2, #33	; 0x21
   13c78:	vstr	d0, [sp, #120]	; 0x78
   13c7c:	beq	155a8 <floor@plt+0x41dc>
   13c80:	cmp	r2, #34	; 0x22
   13c84:	bne	12c78 <floor@plt+0x18ac>
   13c88:	ldr	r3, [pc, #-1336]	; 13758 <floor@plt+0x238c>
   13c8c:	ldr	r0, [pc, #-1372]	; 13738 <floor@plt+0x236c>
   13c90:	mov	r2, r3
   13c94:	mov	r1, r3
   13c98:	mov	r4, r8
   13c9c:	bl	17778 <floor@plt+0x63ac>
   13ca0:	mov	r5, #1
   13ca4:	b	12eb0 <floor@plt+0x1ae4>
   13ca8:	bl	112e8 <__errno_location@plt>
   13cac:	mov	r3, #0
   13cb0:	vldr	d0, [r6, #-24]	; 0xffffffe8
   13cb4:	str	r3, [r0]
   13cb8:	mov	r5, r0
   13cbc:	bl	1118c <log10@plt>
   13cc0:	ldr	r2, [r5]
   13cc4:	cmp	r2, #34	; 0x22
   13cc8:	vstr	d0, [sp, #120]	; 0x78
   13ccc:	bne	12c78 <floor@plt+0x18ac>
   13cd0:	ldr	r3, [pc, #-1408]	; 13758 <floor@plt+0x238c>
   13cd4:	ldr	r0, [pc, #-1440]	; 1373c <floor@plt+0x2370>
   13cd8:	b	13c90 <floor@plt+0x28c4>
   13cdc:	ldr	r3, [r6, #-48]	; 0xffffffd0
   13ce0:	ldrd	r0, [r6]
   13ce4:	str	r3, [sp, #120]	; 0x78
   13ce8:	ldr	r2, [r3]
   13cec:	strd	r0, [r3, #160]	; 0xa0
   13cf0:	orr	r2, r2, #262144	; 0x40000
   13cf4:	str	r2, [r3]
   13cf8:	b	12c78 <floor@plt+0x18ac>
   13cfc:	ldr	r3, [r6, #-24]	; 0xffffffe8
   13d00:	str	r3, [sp, #120]	; 0x78
   13d04:	ldr	r3, [r3, #100]	; 0x64
   13d08:	cmp	r3, #0
   13d0c:	beq	12c78 <floor@plt+0x18ac>
   13d10:	b	13d18 <floor@plt+0x294c>
   13d14:	mov	r3, r2
   13d18:	ldr	r2, [r3]
   13d1c:	cmp	r2, #0
   13d20:	bne	13d14 <floor@plt+0x2948>
   13d24:	mov	r2, #2
   13d28:	str	r2, [r3, #12]
   13d2c:	b	12c78 <floor@plt+0x18ac>
   13d30:	vldr	d7, [r6]
   13d34:	vldr	d6, [r6, #-48]	; 0xffffffd0
   13d38:	vcmpe.f64	d6, d7
   13d3c:	vmrs	APSR_nzcv, fpscr
   13d40:	vmovlt.f64	d7, d8
   13d44:	vmovge.f64	d7, d9
   13d48:	vstr	d7, [sp, #120]	; 0x78
   13d4c:	b	12c78 <floor@plt+0x18ac>
   13d50:	ldm	r6, {r0, r1, r2}
   13d54:	add	r3, sp, #120	; 0x78
   13d58:	stm	r3, {r0, r1, r2}
   13d5c:	b	12c78 <floor@plt+0x18ac>
   13d60:	ldr	r3, [r6, #-24]	; 0xffffffe8
   13d64:	str	r3, [sp, #120]	; 0x78
   13d68:	ldr	r2, [r3]
   13d6c:	orr	r2, r2, #2097152	; 0x200000
   13d70:	str	r2, [r3]
   13d74:	b	12c78 <floor@plt+0x18ac>
   13d78:	vldr	d7, [r6, #-72]	; 0xffffffb8
   13d7c:	vldr	d6, [r6, #-24]	; 0xffffffe8
   13d80:	vcmpe.f64	d7, d6
   13d84:	vmrs	APSR_nzcv, fpscr
   13d88:	vmovle.f64	d7, d6
   13d8c:	vstr	d7, [sp, #120]	; 0x78
   13d90:	b	12c78 <floor@plt+0x18ac>
   13d94:	ldr	r3, [pc, #-1608]	; 13754 <floor@plt+0x2388>
   13d98:	ldr	r3, [r3, #1072]	; 0x430
   13d9c:	cmp	r3, #0
   13da0:	blt	154f4 <floor@plt+0x4128>
   13da4:	ldr	r0, [r6, #-48]	; 0xffffffd0
   13da8:	ldr	r1, [r6]
   13dac:	bl	17d94 <floor@plt+0x69c8>
   13db0:	ldr	r0, [r6, #-48]	; 0xffffffd0
   13db4:	cmp	r0, #0
   13db8:	beq	13dc0 <floor@plt+0x29f4>
   13dbc:	bl	1121c <_ZdaPv@plt>
   13dc0:	ldr	r0, [r6]
   13dc4:	cmp	r0, #0
   13dc8:	beq	12c78 <floor@plt+0x18ac>
   13dcc:	bl	1121c <_ZdaPv@plt>
   13dd0:	b	12c78 <floor@plt+0x18ac>
   13dd4:	vldr	d7, [r6, #-48]	; 0xffffffd0
   13dd8:	vcmp.f64	d7, #0.0
   13ddc:	vmrs	APSR_nzcv, fpscr
   13de0:	vmovne.f64	d7, d9
   13de4:	bne	13e04 <floor@plt+0x2a38>
   13de8:	vldr	d7, [r6]
   13dec:	vcmp.f64	d7, #0.0
   13df0:	vmrs	APSR_nzcv, fpscr
   13df4:	movne	r3, #1
   13df8:	moveq	r3, #0
   13dfc:	vmov	s14, r3
   13e00:	vcvt.f64.u32	d7, s14
   13e04:	vstr	d7, [sp, #120]	; 0x78
   13e08:	b	12c78 <floor@plt+0x18ac>
   13e0c:	sub	lr, r6, #24
   13e10:	add	ip, sp, #120	; 0x78
   13e14:	ldm	lr!, {r0, r1, r2, r3}
   13e18:	stmia	ip!, {r0, r1, r2, r3}
   13e1c:	ldm	lr, {r0, r1}
   13e20:	stm	ip, {r0, r1}
   13e24:	b	12c78 <floor@plt+0x18ac>
   13e28:	ldr	r3, [pc, #-1756]	; 13754 <floor@plt+0x2388>
   13e2c:	ldr	r3, [r3, #1072]	; 0x430
   13e30:	cmp	r3, #0
   13e34:	blt	154ec <floor@plt+0x4120>
   13e38:	vldr	d7, [r6]
   13e3c:	ldr	r0, [r6, #8]
   13e40:	vcmp.f64	d7, #0.0
   13e44:	vmrs	APSR_nzcv, fpscr
   13e48:	bne	154e0 <floor@plt+0x4114>
   13e4c:	cmp	r0, #0
   13e50:	beq	12c78 <floor@plt+0x18ac>
   13e54:	bl	1121c <_ZdaPv@plt>
   13e58:	b	12c78 <floor@plt+0x18ac>
   13e5c:	ldr	r2, [pc, #-1808]	; 13754 <floor@plt+0x2388>
   13e60:	ldr	r3, [pc, #-1828]	; 13744 <floor@plt+0x2378>
   13e64:	ldr	r1, [r2, #1072]	; 0x430
   13e68:	mov	r2, #0
   13e6c:	cmp	r1, r2
   13e70:	str	r2, [r3]
   13e74:	blt	15584 <floor@plt+0x41b8>
   13e78:	ldr	r2, [r6]
   13e7c:	vldr	d2, [r6, #-72]	; 0xffffffb8
   13e80:	ldr	r1, [r6, #-64]	; 0xffffffc0
   13e84:	vldr	d1, [r6, #-96]	; 0xffffffa0
   13e88:	vldr	d0, [r6, #-144]	; 0xffffff70
   13e8c:	ldr	r0, [r6, #-192]	; 0xffffff40
   13e90:	bl	1751c <floor@plt+0x6150>
   13e94:	b	12c78 <floor@plt+0x18ac>
   13e98:	mov	r3, #2
   13e9c:	str	r3, [sp, #120]	; 0x78
   13ea0:	b	12c78 <floor@plt+0x18ac>
   13ea4:	ldr	r3, [pc, #-1900]	; 13740 <floor@plt+0x2374>
   13ea8:	ldr	r2, [pc, #-1900]	; 13744 <floor@plt+0x2378>
   13eac:	mov	r1, #0
   13eb0:	ldr	r3, [r3]
   13eb4:	str	r1, [r2]
   13eb8:	cmp	r3, r1
   13ebc:	ldr	r1, [r6]
   13ec0:	beq	15484 <floor@plt+0x40b8>
   13ec4:	add	r0, sp, #144	; 0x90
   13ec8:	bl	27058 <floor@plt+0x15c8c>
   13ecc:	ldr	r3, [pc, #-1916]	; 13758 <floor@plt+0x238c>
   13ed0:	add	r1, sp, #144	; 0x90
   13ed4:	mov	r2, r3
   13ed8:	ldr	r0, [pc, #-1944]	; 13748 <floor@plt+0x237c>
   13edc:	bl	17778 <floor@plt+0x63ac>
   13ee0:	ldr	r0, [r6]
   13ee4:	cmp	r0, #0
   13ee8:	beq	12c78 <floor@plt+0x18ac>
   13eec:	bl	1121c <_ZdaPv@plt>
   13ef0:	b	12c78 <floor@plt+0x18ac>
   13ef4:	vldr	d7, [r6]
   13ef8:	vldr	d6, [r6, #-48]	; 0xffffffd0
   13efc:	vcmp.f64	d6, d7
   13f00:	vmrs	APSR_nzcv, fpscr
   13f04:	vmoveq.f64	d7, d8
   13f08:	vmovne.f64	d7, d9
   13f0c:	vstr	d7, [sp, #120]	; 0x78
   13f10:	b	12c78 <floor@plt+0x18ac>
   13f14:	ldr	r3, [r6, #-24]	; 0xffffffe8
   13f18:	str	r3, [sp, #120]	; 0x78
   13f1c:	ldr	r3, [r3, #100]	; 0x64
   13f20:	cmp	r3, #0
   13f24:	beq	12c78 <floor@plt+0x18ac>
   13f28:	b	13f30 <floor@plt+0x2b64>
   13f2c:	mov	r3, r2
   13f30:	ldr	r2, [r3]
   13f34:	cmp	r2, #0
   13f38:	bne	13f2c <floor@plt+0x2b60>
   13f3c:	mov	r2, #1
   13f40:	str	r2, [r3, #8]
   13f44:	b	12c78 <floor@plt+0x18ac>
   13f48:	ldr	r5, [r6, #-24]	; 0xffffffe8
   13f4c:	str	r5, [sp, #120]	; 0x78
   13f50:	ldr	r3, [r5, #100]	; 0x64
   13f54:	cmp	r3, #0
   13f58:	bne	13f64 <floor@plt+0x2b98>
   13f5c:	b	155a0 <floor@plt+0x41d4>
   13f60:	mov	r3, r2
   13f64:	ldr	r2, [r3]
   13f68:	cmp	r2, #0
   13f6c:	bne	13f60 <floor@plt+0x2b94>
   13f70:	mov	r5, r3
   13f74:	mov	r0, #24
   13f78:	bl	28660 <_Znwj@@Base>
   13f7c:	ldrd	r2, [r6, #4]
   13f80:	ldr	r1, [r6]
   13f84:	mov	r9, r0
   13f88:	bl	1ddf4 <floor@plt+0xca28>
   13f8c:	str	r9, [r5]
   13f90:	b	12c78 <floor@plt+0x18ac>
   13f94:	ldr	r3, [r6, #-24]	; 0xffffffe8
   13f98:	str	r3, [sp, #120]	; 0x78
   13f9c:	ldr	r2, [r3]
   13fa0:	bic	r2, r2, #4
   13fa4:	str	r2, [r3]
   13fa8:	b	12c78 <floor@plt+0x18ac>
   13fac:	ldr	r3, [r6, #-48]	; 0xffffffd0
   13fb0:	ldrd	r0, [r6]
   13fb4:	str	r3, [sp, #120]	; 0x78
   13fb8:	ldr	r2, [r3]
   13fbc:	strd	r0, [r3, #168]	; 0xa8
   13fc0:	orr	r2, r2, #524288	; 0x80000
   13fc4:	str	r2, [r3]
   13fc8:	b	12c78 <floor@plt+0x18ac>
   13fcc:	ldr	r3, [r6, #-24]	; 0xffffffe8
   13fd0:	str	r3, [sp, #120]	; 0x78
   13fd4:	ldr	r2, [r3]
   13fd8:	orr	r2, r2, #1048576	; 0x100000
   13fdc:	str	r2, [r3]
   13fe0:	b	12c78 <floor@plt+0x18ac>
   13fe4:	ldr	r3, [r6, #-48]	; 0xffffffd0
   13fe8:	ldrd	r0, [r6]
   13fec:	str	r3, [sp, #120]	; 0x78
   13ff0:	ldr	r2, [r3]
   13ff4:	strd	r0, [r3, #24]
   13ff8:	orr	r2, r2, #2
   13ffc:	str	r2, [r3]
   14000:	b	12c78 <floor@plt+0x18ac>
   14004:	ldr	r5, [r6, #-24]	; 0xffffffe8
   14008:	ldr	r0, [pc, #-2244]	; 1374c <floor@plt+0x2380>
   1400c:	str	r5, [sp, #120]	; 0x78
   14010:	ldr	r3, [r5]
   14014:	orr	r3, r3, #2
   14018:	str	r3, [r5]
   1401c:	bl	11e40 <floor@plt+0xa74>
   14020:	cmp	r0, #0
   14024:	ldrdne	r2, [r0, #8]
   14028:	strdne	r2, [r5, #24]
   1402c:	b	12c78 <floor@plt+0x18ac>
   14030:	ldr	r3, [r6, #-48]	; 0xffffffd0
   14034:	ldrd	r0, [r6]
   14038:	str	r3, [sp, #120]	; 0x78
   1403c:	ldr	r2, [r3]
   14040:	strd	r0, [r3, #24]
   14044:	orr	r2, r2, #1
   14048:	str	r2, [r3]
   1404c:	b	12c78 <floor@plt+0x18ac>
   14050:	ldr	r5, [r6, #-24]	; 0xffffffe8
   14054:	ldr	r0, [pc, #-2320]	; 1374c <floor@plt+0x2380>
   14058:	str	r5, [sp, #120]	; 0x78
   1405c:	ldr	r3, [r5]
   14060:	orr	r3, r3, #1
   14064:	str	r3, [r5]
   14068:	bl	11e40 <floor@plt+0xa74>
   1406c:	cmp	r0, #0
   14070:	ldrdne	r2, [r0, #8]
   14074:	strdne	r2, [r5, #24]
   14078:	b	12c78 <floor@plt+0x18ac>
   1407c:	ldr	r3, [r6, #-24]	; 0xffffffe8
   14080:	str	r3, [sp, #120]	; 0x78
   14084:	b	12c78 <floor@plt+0x18ac>
   14088:	ldr	r3, [r6, #-24]	; 0xffffffe8
   1408c:	str	r3, [sp, #120]	; 0x78
   14090:	ldr	r2, [r3]
   14094:	tst	r2, #128	; 0x80
   14098:	bne	152f8 <floor@plt+0x3f2c>
   1409c:	ldr	r2, [r3, #200]	; 0xc8
   140a0:	cmp	r2, #3
   140a4:	ldrls	pc, [pc, r2, lsl #2]
   140a8:	b	152f8 <floor@plt+0x3f2c>
   140ac:	andeq	r5, r1, r4, asr r6
   140b0:	andeq	r5, r1, r8, ror #5
   140b4:	andeq	r5, r1, r0, asr #12
   140b8:	andeq	r5, r1, r0, asr #11
   140bc:	ldr	r3, [r6, #-48]	; 0xffffffd0
   140c0:	vldr	d5, [r6]
   140c4:	vldr	d4, [r6, #8]
   140c8:	vldr	d6, [r3, #208]	; 0xd0
   140cc:	vldr	d7, [r3, #216]	; 0xd8
   140d0:	ldr	r2, [r3]
   140d4:	str	r3, [sp, #120]	; 0x78
   140d8:	vadd.f64	d6, d6, d5
   140dc:	vadd.f64	d7, d7, d4
   140e0:	orr	r2, r2, #128	; 0x80
   140e4:	str	r2, [r3]
   140e8:	vstr	d6, [r3, #208]	; 0xd0
   140ec:	vstr	d7, [r3, #216]	; 0xd8
   140f0:	b	12c78 <floor@plt+0x18ac>
   140f4:	ldr	r3, [r6, #-48]	; 0xffffffd0
   140f8:	str	r3, [sp, #120]	; 0x78
   140fc:	ldr	r2, [r3]
   14100:	tst	r2, #128	; 0x80
   14104:	bne	15508 <floor@plt+0x413c>
   14108:	vldr	d7, [r6]
   1410c:	ldrd	r0, [r6, #8]
   14110:	orr	r2, r2, #32768	; 0x8000
   14114:	orr	r2, r2, #128	; 0x80
   14118:	mov	ip, #1
   1411c:	vstr	d7, [r3, #208]	; 0xd0
   14120:	str	r2, [r3]
   14124:	strd	r0, [r3, #216]	; 0xd8
   14128:	vstr	d7, [r3, #48]	; 0x30
   1412c:	strd	r0, [r3, #56]	; 0x38
   14130:	str	ip, [r3, #224]	; 0xe0
   14134:	b	12c78 <floor@plt+0x18ac>
   14138:	ldr	r3, [r6, #-48]	; 0xffffffd0
   1413c:	vldr	d7, [r6]
   14140:	ldrd	r0, [r6, #8]
   14144:	ldr	r2, [r3]
   14148:	str	r3, [sp, #120]	; 0x78
   1414c:	orr	r2, r2, #512	; 0x200
   14150:	str	r2, [r3]
   14154:	vstr	d7, [r3, #32]
   14158:	strd	r0, [r3, #40]	; 0x28
   1415c:	b	12c78 <floor@plt+0x18ac>
   14160:	ldr	r3, [r6, #-48]	; 0xffffffd0
   14164:	vldr	d6, [r6]
   14168:	mov	r2, #2
   1416c:	vldr	d7, [r3, #208]	; 0xd0
   14170:	str	r2, [r3, #200]	; 0xc8
   14174:	ldr	r2, [r3]
   14178:	str	r3, [sp, #120]	; 0x78
   1417c:	vsub.f64	d7, d7, d6
   14180:	orr	r2, r2, #128	; 0x80
   14184:	str	r2, [r3]
   14188:	vstr	d7, [r3, #208]	; 0xd0
   1418c:	b	12c78 <floor@plt+0x18ac>
   14190:	ldr	r3, [r6, #-24]	; 0xffffffe8
   14194:	mov	r2, #2
   14198:	str	r3, [sp, #120]	; 0x78
   1419c:	vldr	d7, [r3, #208]	; 0xd0
   141a0:	vldr	d6, [r3, #128]	; 0x80
   141a4:	str	r2, [r3, #200]	; 0xc8
   141a8:	ldr	r2, [r3]
   141ac:	vsub.f64	d7, d7, d6
   141b0:	orr	r2, r2, #128	; 0x80
   141b4:	str	r2, [r3]
   141b8:	vstr	d7, [r3, #208]	; 0xd0
   141bc:	b	12c78 <floor@plt+0x18ac>
   141c0:	ldr	r3, [r6, #-48]	; 0xffffffd0
   141c4:	ldr	r1, [r6]
   141c8:	str	r3, [sp, #120]	; 0x78
   141cc:	ldr	r2, [r3]
   141d0:	str	r1, [r3, #96]	; 0x60
   141d4:	orr	r2, r2, #2048	; 0x800
   141d8:	str	r2, [r3]
   141dc:	b	12c78 <floor@plt+0x18ac>
   141e0:	ldr	r3, [r6, #-48]	; 0xffffffd0
   141e4:	vldr	d7, [r6]
   141e8:	ldrd	r0, [r6, #8]
   141ec:	ldm	r3, {r2, lr}
   141f0:	str	r3, [sp, #120]	; 0x78
   141f4:	vstr	d7, [r3, #64]	; 0x40
   141f8:	orr	ip, r2, #1024	; 0x400
   141fc:	cmp	lr, #4
   14200:	str	ip, [r3]
   14204:	strd	r0, [r3, #72]	; 0x48
   14208:	orrne	r2, r2, #1536	; 0x600
   1420c:	strne	r2, [r3]
   14210:	vstrne	d7, [r3, #32]
   14214:	strdne	r0, [r3, #40]	; 0x28
   14218:	b	12c78 <floor@plt+0x18ac>
   1421c:	ldr	r3, [r6, #-48]	; 0xffffffd0
   14220:	add	r9, sp, #72	; 0x48
   14224:	mov	r0, r9
   14228:	ldr	r2, [r3]
   1422c:	str	r3, [sp, #120]	; 0x78
   14230:	orr	r2, r2, #2048	; 0x800
   14234:	str	r2, [r3]
   14238:	bl	1c6c8 <floor@plt+0xb2fc>
   1423c:	ldrd	r0, [r6]
   14240:	ldrd	r2, [r6, #8]
   14244:	add	r5, sp, #144	; 0x90
   14248:	strd	r0, [sp, #72]	; 0x48
   1424c:	strd	r2, [sp, #80]	; 0x50
   14250:	ldm	r9, {r0, r1, r2, r3}
   14254:	stm	r5, {r0, r1, r2, r3}
   14258:	mov	r0, #40	; 0x28
   1425c:	bl	28660 <_Znwj@@Base>
   14260:	add	r3, sp, #160	; 0xa0
   14264:	vldr	d0, [r5]
   14268:	vldr	d1, [r3, #-8]
   1426c:	mov	r9, r0
   14270:	bl	1eff0 <floor@plt+0xdc24>
   14274:	ldr	r3, [sp, #120]	; 0x78
   14278:	str	r9, [r3, #96]	; 0x60
   1427c:	b	12c78 <floor@plt+0x18ac>
   14280:	ldr	r3, [r6, #-24]	; 0xffffffe8
   14284:	str	r3, [sp, #120]	; 0x78
   14288:	ldr	r2, [r3]
   1428c:	orr	r2, r2, #256	; 0x100
   14290:	str	r2, [r3]
   14294:	b	12c78 <floor@plt+0x18ac>
   14298:	ldr	r3, [r6, #-24]	; 0xffffffe8
   1429c:	str	r3, [sp, #120]	; 0x78
   142a0:	ldr	r2, [r3]
   142a4:	orr	r2, r2, #96	; 0x60
   142a8:	str	r2, [r3]
   142ac:	b	12c78 <floor@plt+0x18ac>
   142b0:	ldr	r3, [r6, #-24]	; 0xffffffe8
   142b4:	str	r3, [sp, #120]	; 0x78
   142b8:	ldr	r2, [r3]
   142bc:	orr	r2, r2, #64	; 0x40
   142c0:	str	r2, [r3]
   142c4:	b	12c78 <floor@plt+0x18ac>
   142c8:	ldr	r3, [r6, #-24]	; 0xffffffe8
   142cc:	str	r3, [sp, #120]	; 0x78
   142d0:	ldr	r2, [r3]
   142d4:	orr	r2, r2, #32
   142d8:	str	r2, [r3]
   142dc:	b	12c78 <floor@plt+0x18ac>
   142e0:	ldr	r3, [r6, #-24]	; 0xffffffe8
   142e4:	str	r3, [sp, #120]	; 0x78
   142e8:	ldr	r2, [r3]
   142ec:	orr	r2, r2, #16
   142f0:	str	r2, [r3]
   142f4:	b	12c78 <floor@plt+0x18ac>
   142f8:	ldr	r3, [r6, #-24]	; 0xffffffe8
   142fc:	str	r3, [sp, #120]	; 0x78
   14300:	ldr	r2, [r3]
   14304:	orr	r2, r2, #4
   14308:	str	r2, [r3]
   1430c:	b	12c78 <floor@plt+0x18ac>
   14310:	ldr	r5, [r6, #-48]	; 0xffffffd0
   14314:	ldr	r0, [r6]
   14318:	str	r5, [sp, #120]	; 0x78
   1431c:	ldr	r3, [r5]
   14320:	orr	r3, r3, #13107200	; 0xc80000
   14324:	str	r3, [r5]
   14328:	bl	11288 <strlen@plt>
   1432c:	add	r0, r0, #1
   14330:	bl	1115c <_Znaj@plt>
   14334:	ldr	r3, [sp, #120]	; 0x78
   14338:	ldr	r1, [r6]
   1433c:	str	r0, [r5, #192]	; 0xc0
   14340:	ldr	r0, [r3, #192]	; 0xc0
   14344:	bl	111b0 <strcpy@plt>
   14348:	ldr	r0, [r6]
   1434c:	bl	11288 <strlen@plt>
   14350:	ldr	r5, [sp, #120]	; 0x78
   14354:	add	r0, r0, #1
   14358:	bl	1115c <_Znaj@plt>
   1435c:	ldr	r3, [sp, #120]	; 0x78
   14360:	ldr	r1, [r6]
   14364:	str	r0, [r5, #196]	; 0xc4
   14368:	ldr	r0, [r3, #196]	; 0xc4
   1436c:	bl	111b0 <strcpy@plt>
   14370:	b	12c78 <floor@plt+0x18ac>
   14374:	ldr	r5, [r6, #-48]	; 0xffffffd0
   14378:	ldr	r0, [r6]
   1437c:	str	r5, [sp, #120]	; 0x78
   14380:	ldr	r3, [r5]
   14384:	orr	r3, r3, #4718592	; 0x480000
   14388:	str	r3, [r5]
   1438c:	bl	11288 <strlen@plt>
   14390:	add	r0, r0, #1
   14394:	bl	1115c <_Znaj@plt>
   14398:	ldr	r3, [sp, #120]	; 0x78
   1439c:	ldr	r1, [r6]
   143a0:	str	r0, [r5, #192]	; 0xc0
   143a4:	ldr	r0, [r3, #192]	; 0xc0
   143a8:	bl	111b0 <strcpy@plt>
   143ac:	b	12c78 <floor@plt+0x18ac>
   143b0:	ldr	r3, [r6, #-48]	; 0xffffffd0
   143b4:	ldrd	r0, [r6]
   143b8:	str	r3, [sp, #120]	; 0x78
   143bc:	ldr	r2, [r3]
   143c0:	strd	r0, [r3, #184]	; 0xb8
   143c4:	orr	r2, r2, #33554432	; 0x2000000
   143c8:	str	r2, [r3]
   143cc:	b	12c78 <floor@plt+0x18ac>
   143d0:	ldr	r3, [r6, #-48]	; 0xffffffd0
   143d4:	ldrd	r0, [r6]
   143d8:	str	r3, [sp, #120]	; 0x78
   143dc:	ldr	r2, [r3]
   143e0:	strd	r0, [r3, #176]	; 0xb0
   143e4:	orr	r2, r2, #16777216	; 0x1000000
   143e8:	str	r2, [r3]
   143ec:	b	12c78 <floor@plt+0x18ac>
   143f0:	ldr	r2, [r6, #-24]	; 0xffffffe8
   143f4:	str	r2, [sp, #120]	; 0x78
   143f8:	ldr	r3, [r2]
   143fc:	tst	r3, #131072	; 0x20000
   14400:	beq	15454 <floor@plt+0x4088>
   14404:	bic	r3, r3, #131072	; 0x20000
   14408:	orr	r3, r3, #65536	; 0x10000
   1440c:	str	r3, [r2]
   14410:	vstr	d8, [r2, #152]	; 0x98
   14414:	vstr	d8, [r2, #144]	; 0x90
   14418:	b	12c78 <floor@plt+0x18ac>
   1441c:	ldr	r5, [r6, #-48]	; 0xffffffd0
   14420:	ldr	r0, [r6]
   14424:	str	r5, [sp, #120]	; 0x78
   14428:	ldr	r3, [r5]
   1442c:	orr	r3, r3, #8388608	; 0x800000
   14430:	str	r3, [r5]
   14434:	bl	11288 <strlen@plt>
   14438:	add	r0, r0, #1
   1443c:	bl	1115c <_Znaj@plt>
   14440:	ldr	r3, [sp, #120]	; 0x78
   14444:	ldr	r1, [r6]
   14448:	str	r0, [r5, #196]	; 0xc4
   1444c:	ldr	r0, [r3, #196]	; 0xc4
   14450:	bl	111b0 <strcpy@plt>
   14454:	b	12c78 <floor@plt+0x18ac>
   14458:	ldr	r2, [r6, #-48]	; 0xffffffd0
   1445c:	ldrd	r0, [r6]
   14460:	str	r2, [sp, #120]	; 0x78
   14464:	ldr	r3, [r2]
   14468:	tst	r3, #131072	; 0x20000
   1446c:	beq	15468 <floor@plt+0x409c>
   14470:	bic	r3, r3, #131072	; 0x20000
   14474:	orr	r3, r3, #65536	; 0x10000
   14478:	str	r3, [r2]
   1447c:	vstr	d8, [r2, #144]	; 0x90
   14480:	strd	r0, [r2, #152]	; 0x98
   14484:	b	12c78 <floor@plt+0x18ac>
   14488:	sub	r3, r6, #24
   1448c:	add	ip, sp, #120	; 0x78
   14490:	ldm	r3, {r0, r1, r2, r3}
   14494:	stm	ip, {r0, r1, r2, r3}
   14498:	b	12c78 <floor@plt+0x18ac>
   1449c:	ldr	r2, [pc, #-3412]	; 13750 <floor@plt+0x2384>
   144a0:	ldr	r0, [r6]
   144a4:	add	r1, r2, #4
   144a8:	bl	20708 <floor@plt+0xf33c>
   144ac:	cmp	r0, #0
   144b0:	mov	r1, r0
   144b4:	str	r0, [sp, #120]	; 0x78
   144b8:	beq	13004 <floor@plt+0x1c38>
   144bc:	ldr	r9, [r6]
   144c0:	cmp	r9, #0
   144c4:	beq	15350 <floor@plt+0x3f84>
   144c8:	mov	r0, r9
   144cc:	bl	1f0e0 <floor@plt+0xdd14>
   144d0:	mov	r0, r9
   144d4:	bl	286b0 <_ZdlPv@@Base>
   144d8:	ldr	r1, [sp, #120]	; 0x78
   144dc:	cmp	r1, #0
   144e0:	bne	15350 <floor@plt+0x3f84>
   144e4:	ldr	r3, [pc, #-3480]	; 13754 <floor@plt+0x2388>
   144e8:	vldr	d7, [r3, #8]
   144ec:	ldrd	r0, [r3, #16]
   144f0:	vstr	d7, [sp, #128]	; 0x80
   144f4:	strd	r0, [sp, #136]	; 0x88
   144f8:	b	12c78 <floor@plt+0x18ac>
   144fc:	ldrd	r0, [r6]
   14500:	mov	r2, #1
   14504:	str	r2, [sp, #128]	; 0x80
   14508:	strd	r0, [sp, #120]	; 0x78
   1450c:	b	12c78 <floor@plt+0x18ac>
   14510:	mov	r5, r6
   14514:	add	r3, sp, #40	; 0x28
   14518:	mov	r2, #0
   1451c:	add	r9, sp, #144	; 0x90
   14520:	ldr	r1, [r5], #-48	; 0xffffffd0
   14524:	str	r2, [sp, #40]	; 0x28
   14528:	str	r2, [sp, #44]	; 0x2c
   1452c:	mov	r0, r9
   14530:	ldm	r3, {r2, r3}
   14534:	bl	1f020 <floor@plt+0xdc54>
   14538:	mov	r1, r5
   1453c:	sub	r2, r9, #24
   14540:	mov	r0, r9
   14544:	bl	1f27c <floor@plt+0xdeb0>
   14548:	cmp	r0, #0
   1454c:	mov	r0, r9
   14550:	beq	15600 <floor@plt+0x4234>
   14554:	bl	1f078 <floor@plt+0xdcac>
   14558:	b	12c78 <floor@plt+0x18ac>
   1455c:	ldr	r3, [r6]
   14560:	str	r3, [sp, #120]	; 0x78
   14564:	b	12c78 <floor@plt+0x18ac>
   14568:	mov	lr, r6
   1456c:	add	ip, sp, #120	; 0x78
   14570:	ldm	lr!, {r0, r1, r2, r3}
   14574:	stmia	ip!, {r0, r1, r2, r3}
   14578:	ldm	lr, {r0, r1}
   1457c:	stm	ip, {r0, r1}
   14580:	ldr	r0, [r6, #-72]	; 0xffffffb8
   14584:	add	r1, sp, #120	; 0x78
   14588:	bl	11e84 <floor@plt+0xab8>
   1458c:	ldr	r0, [r6, #-72]	; 0xffffffb8
   14590:	bl	110e4 <free@plt>
   14594:	b	12c78 <floor@plt+0x18ac>
   14598:	vldr	d7, [r6]
   1459c:	vldr	d6, [r6, #-48]	; 0xffffffd0
   145a0:	vcmpe.f64	d6, d7
   145a4:	vmrs	APSR_nzcv, fpscr
   145a8:	vmovhi.f64	d7, d8
   145ac:	vmovls.f64	d7, d9
   145b0:	vstr	d7, [sp, #120]	; 0x78
   145b4:	b	12c78 <floor@plt+0x18ac>
   145b8:	vldr	d7, [r6, #-48]	; 0xffffffd0
   145bc:	vcmp.f64	d7, #0.0
   145c0:	vmrs	APSR_nzcv, fpscr
   145c4:	vmoveq.f64	d7, d8
   145c8:	beq	145e0 <floor@plt+0x3214>
   145cc:	vldr	d7, [r6]
   145d0:	vcmp.f64	d7, #0.0
   145d4:	vmrs	APSR_nzcv, fpscr
   145d8:	vmovne.f64	d7, d9
   145dc:	vmoveq.f64	d7, d8
   145e0:	vstr	d7, [sp, #120]	; 0x78
   145e4:	b	12c78 <floor@plt+0x18ac>
   145e8:	mov	r2, #36	; 0x24
   145ec:	mov	r3, #1
   145f0:	strd	r2, [sp, #120]	; 0x78
   145f4:	b	12c78 <floor@plt+0x18ac>
   145f8:	mov	r2, #32
   145fc:	mov	r3, #1
   14600:	strd	r2, [sp, #120]	; 0x78
   14604:	b	12c78 <floor@plt+0x18ac>
   14608:	ldr	r3, [pc, #-3772]	; 13754 <floor@plt+0x2388>
   1460c:	ldr	r3, [r3, #1072]	; 0x430
   14610:	cmp	r3, #0
   14614:	blt	15574 <floor@plt+0x41a8>
   14618:	ldr	r0, [r6]
   1461c:	bl	1833c <floor@plt+0x6f70>
   14620:	b	12c78 <floor@plt+0x18ac>
   14624:	bl	112e8 <__errno_location@plt>
   14628:	mov	r3, #0
   1462c:	vldr	d1, [r6]
   14630:	vldr	d0, [r6, #-48]	; 0xffffffd0
   14634:	str	r3, [r0]
   14638:	mov	r5, r0
   1463c:	bl	11174 <pow@plt>
   14640:	ldr	r2, [r5]
   14644:	cmp	r2, #33	; 0x21
   14648:	vstr	d0, [sp, #120]	; 0x78
   1464c:	beq	155f4 <floor@plt+0x4228>
   14650:	cmp	r2, #34	; 0x22
   14654:	bne	12c78 <floor@plt+0x18ac>
   14658:	ldr	r3, [pc, #-3848]	; 13758 <floor@plt+0x238c>
   1465c:	ldr	r0, [pc, #-3848]	; 1375c <floor@plt+0x2390>
   14660:	b	13c90 <floor@plt+0x28c4>
   14664:	vldr	d1, [r6]
   14668:	vcmp.f64	d1, #0.0
   1466c:	vmrs	APSR_nzcv, fpscr
   14670:	beq	15594 <floor@plt+0x41c8>
   14674:	vldr	d0, [r6, #-48]	; 0xffffffd0
   14678:	bl	111c8 <fmod@plt>
   1467c:	vstr	d0, [sp, #120]	; 0x78
   14680:	b	12c78 <floor@plt+0x18ac>
   14684:	vldr	d7, [r6]
   14688:	vcmp.f64	d7, #0.0
   1468c:	vmrs	APSR_nzcv, fpscr
   14690:	beq	155b4 <floor@plt+0x41e8>
   14694:	vldr	d5, [r6, #-48]	; 0xffffffd0
   14698:	vdiv.f64	d6, d5, d7
   1469c:	vstr	d6, [sp, #120]	; 0x78
   146a0:	b	12c78 <floor@plt+0x18ac>
   146a4:	vldr	d6, [r6, #-48]	; 0xffffffd0
   146a8:	vldr	d5, [r6]
   146ac:	vldr	d7, [r6, #-40]	; 0xffffffd8
   146b0:	vldr	d4, [r6, #8]
   146b4:	vsub.f64	d6, d6, d5
   146b8:	vsub.f64	d7, d7, d4
   146bc:	vstr	d6, [sp, #120]	; 0x78
   146c0:	vstr	d7, [sp, #128]	; 0x80
   146c4:	b	12c78 <floor@plt+0x18ac>
   146c8:	mov	r3, #0
   146cc:	str	r3, [sp, #120]	; 0x78
   146d0:	b	12c78 <floor@plt+0x18ac>
   146d4:	vldr	d7, [r6, #-72]	; 0xffffffb8
   146d8:	ldr	r1, [pc, #1024]	; 14ae0 <floor@plt+0x3714>
   146dc:	ldr	r2, [r6]
   146e0:	mov	r3, #0
   146e4:	vstr	d7, [sp, #120]	; 0x78
   146e8:	str	r3, [r1]
   146ec:	str	r2, [sp, #128]	; 0x80
   146f0:	b	12c78 <floor@plt+0x18ac>
   146f4:	bl	112e8 <__errno_location@plt>
   146f8:	mov	r3, #0
   146fc:	vldr	d1, [r6, #-24]	; 0xffffffe8
   14700:	vldr	d0, [pc, #976]	; 14ad8 <floor@plt+0x370c>
   14704:	str	r3, [r0]
   14708:	mov	r5, r0
   1470c:	bl	11174 <pow@plt>
   14710:	ldr	r2, [r5]
   14714:	cmp	r2, #34	; 0x22
   14718:	vstr	d0, [sp, #120]	; 0x78
   1471c:	bne	12c78 <floor@plt+0x18ac>
   14720:	ldr	r3, [pc, #1028]	; 14b2c <floor@plt+0x3760>
   14724:	ldr	r0, [pc, #952]	; 14ae4 <floor@plt+0x3718>
   14728:	b	13c90 <floor@plt+0x28c4>
   1472c:	mov	r0, #31
   14730:	bl	1115c <_Znaj@plt>
   14734:	vldr	d7, [r6, #8]
   14738:	ldr	r3, [pc, #936]	; 14ae8 <floor@plt+0x371c>
   1473c:	mov	r2, #31
   14740:	mov	r1, #1
   14744:	vstr	d7, [sp, #8]
   14748:	vldr	d7, [r6]
   1474c:	vstr	d7, [sp]
   14750:	str	r0, [sp, #120]	; 0x78
   14754:	bl	1133c <__sprintf_chk@plt>
   14758:	mov	r3, #0
   1475c:	str	r3, [sp, #124]	; 0x7c
   14760:	str	r3, [sp, #128]	; 0x80
   14764:	b	12c78 <floor@plt+0x18ac>
   14768:	ldm	r6, {r0, r1, r2}
   1476c:	add	r3, sp, #120	; 0x78
   14770:	stm	r3, {r0, r1, r2}
   14774:	b	12c78 <floor@plt+0x18ac>
   14778:	mov	r0, #15
   1477c:	bl	1115c <_Znaj@plt>
   14780:	vldr	d7, [r6]
   14784:	ldr	r3, [pc, #864]	; 14aec <floor@plt+0x3720>
   14788:	mov	r2, #15
   1478c:	mov	r1, #1
   14790:	vstr	d7, [sp]
   14794:	str	r0, [sp, #120]	; 0x78
   14798:	bl	1133c <__sprintf_chk@plt>
   1479c:	mov	r3, #0
   147a0:	str	r3, [sp, #124]	; 0x7c
   147a4:	str	r3, [sp, #128]	; 0x80
   147a8:	b	12c78 <floor@plt+0x18ac>
   147ac:	ldr	r0, [r6, #-24]	; 0xffffffe8
   147b0:	bl	11288 <strlen@plt>
   147b4:	mov	r5, r0
   147b8:	ldr	r0, [r6]
   147bc:	bl	11288 <strlen@plt>
   147c0:	add	r0, r5, r0
   147c4:	add	r0, r0, #1
   147c8:	bl	1115c <_Znaj@plt>
   147cc:	ldr	r5, [r6, #-24]	; 0xffffffe8
   147d0:	mov	r1, r5
   147d4:	str	r0, [sp, #120]	; 0x78
   147d8:	bl	11120 <stpcpy@plt>
   147dc:	ldr	r1, [r6]
   147e0:	bl	111b0 <strcpy@plt>
   147e4:	mov	r0, r5
   147e8:	bl	1121c <_ZdaPv@plt>
   147ec:	ldr	r0, [r6]
   147f0:	cmp	r0, #0
   147f4:	beq	147fc <floor@plt+0x3430>
   147f8:	bl	1121c <_ZdaPv@plt>
   147fc:	ldr	r3, [r6, #-20]	; 0xffffffec
   14800:	cmp	r3, #0
   14804:	beq	1555c <floor@plt+0x4190>
   14808:	ldr	r2, [r6, #-16]
   1480c:	str	r3, [sp, #124]	; 0x7c
   14810:	str	r2, [sp, #128]	; 0x80
   14814:	b	12c78 <floor@plt+0x18ac>
   14818:	ldm	r6, {r0, r1, r2}
   1481c:	add	r3, sp, #120	; 0x78
   14820:	stm	r3, {r0, r1, r2}
   14824:	b	12c78 <floor@plt+0x18ac>
   14828:	ldr	r0, [r6]
   1482c:	bl	11fa4 <floor@plt+0xbd8>
   14830:	ldr	r0, [r6]
   14834:	cmp	r0, #0
   14838:	beq	12c78 <floor@plt+0x18ac>
   1483c:	bl	1121c <_ZdaPv@plt>
   14840:	b	12c78 <floor@plt+0x18ac>
   14844:	ldr	r0, [r6]
   14848:	bl	11fa4 <floor@plt+0xbd8>
   1484c:	ldr	r0, [r6]
   14850:	cmp	r0, #0
   14854:	beq	12c78 <floor@plt+0x18ac>
   14858:	bl	1121c <_ZdaPv@plt>
   1485c:	b	12c78 <floor@plt+0x18ac>
   14860:	ldr	r0, [r6]
   14864:	bl	11fa4 <floor@plt+0xbd8>
   14868:	ldr	r0, [r6]
   1486c:	cmp	r0, #0
   14870:	beq	12c78 <floor@plt+0x18ac>
   14874:	bl	1121c <_ZdaPv@plt>
   14878:	b	12c78 <floor@plt+0x18ac>
   1487c:	vmov.f64	d0, d9
   14880:	ldr	r0, [pc, #616]	; 14af0 <floor@plt+0x3724>
   14884:	bl	11ef0 <floor@plt+0xb24>
   14888:	b	12c78 <floor@plt+0x18ac>
   1488c:	ldr	r2, [pc, #608]	; 14af4 <floor@plt+0x3728>
   14890:	ldr	r3, [pc, #584]	; 14ae0 <floor@plt+0x3714>
   14894:	ldr	r1, [r2, #1072]	; 0x430
   14898:	mov	r2, #0
   1489c:	cmp	r1, r2
   148a0:	str	r2, [r3]
   148a4:	blt	15554 <floor@plt+0x4188>
   148a8:	vldr	d7, [r6, #-72]	; 0xffffffb8
   148ac:	vcmp.f64	d7, #0.0
   148b0:	vmrs	APSR_nzcv, fpscr
   148b4:	ldrne	r0, [r6, #-64]	; 0xffffffc0
   148b8:	ldreq	r0, [r6]
   148bc:	bl	176f4 <floor@plt+0x6328>
   148c0:	ldr	r0, [r6, #-64]	; 0xffffffc0
   148c4:	bl	110e4 <free@plt>
   148c8:	ldr	r0, [r6]
   148cc:	bl	110e4 <free@plt>
   148d0:	b	12c78 <floor@plt+0x18ac>
   148d4:	bl	112e8 <__errno_location@plt>
   148d8:	vldr	d0, [r6, #-24]	; 0xffffffe8
   148dc:	mov	r3, #0
   148e0:	vcmp.f64	d0, #0.0
   148e4:	vsqrt.f64	d12, d0
   148e8:	mov	r5, r0
   148ec:	str	r3, [r0]
   148f0:	vmrs	APSR_nzcv, fpscr
   148f4:	bmi	155d4 <floor@plt+0x4208>
   148f8:	vstr	d12, [sp, #120]	; 0x78
   148fc:	b	12c78 <floor@plt+0x18ac>
   14900:	ldr	r3, [r6, #-24]	; 0xffffffe8
   14904:	str	r3, [sp, #120]	; 0x78
   14908:	ldr	r3, [r3, #100]	; 0x64
   1490c:	cmp	r3, #0
   14910:	beq	12c78 <floor@plt+0x18ac>
   14914:	b	1491c <floor@plt+0x3550>
   14918:	mov	r3, r2
   1491c:	ldr	r2, [r3]
   14920:	cmp	r2, #0
   14924:	bne	14918 <floor@plt+0x354c>
   14928:	mov	r2, #1
   1492c:	str	r2, [r3, #12]
   14930:	b	12c78 <floor@plt+0x18ac>
   14934:	ldr	r3, [r6, #-24]	; 0xffffffe8
   14938:	str	r3, [sp, #120]	; 0x78
   1493c:	ldr	r3, [r3, #100]	; 0x64
   14940:	cmp	r3, #0
   14944:	beq	12c78 <floor@plt+0x18ac>
   14948:	b	14950 <floor@plt+0x3584>
   1494c:	mov	r3, r2
   14950:	ldr	r2, [r3]
   14954:	cmp	r2, #0
   14958:	bne	1494c <floor@plt+0x3580>
   1495c:	mov	r2, #2
   14960:	str	r2, [r3, #8]
   14964:	b	12c78 <floor@plt+0x18ac>
   14968:	vldr	d7, [r6, #-48]	; 0xffffffd0
   1496c:	vcmp.f64	d7, #0.0
   14970:	vmrs	APSR_nzcv, fpscr
   14974:	vmoveq.f64	d7, d8
   14978:	beq	14990 <floor@plt+0x35c4>
   1497c:	vldr	d7, [r6]
   14980:	vcmp.f64	d7, #0.0
   14984:	vmrs	APSR_nzcv, fpscr
   14988:	vmovne.f64	d7, d9
   1498c:	vmoveq.f64	d7, d8
   14990:	vstr	d7, [sp, #120]	; 0x78
   14994:	b	12c78 <floor@plt+0x18ac>
   14998:	vldr	d7, [r6]
   1499c:	vcmp.f64	d7, #0.0
   149a0:	vmrs	APSR_nzcv, fpscr
   149a4:	vmovne.f64	d7, d8
   149a8:	vmoveq.f64	d7, d9
   149ac:	vstr	d7, [sp, #120]	; 0x78
   149b0:	b	12c78 <floor@plt+0x18ac>
   149b4:	vldr	d7, [r6, #-48]	; 0xffffffd0
   149b8:	vcmp.f64	d7, #0.0
   149bc:	vmrs	APSR_nzcv, fpscr
   149c0:	vmovne.f64	d7, d9
   149c4:	bne	149e4 <floor@plt+0x3618>
   149c8:	vldr	d7, [r6]
   149cc:	vcmp.f64	d7, #0.0
   149d0:	vmrs	APSR_nzcv, fpscr
   149d4:	movne	r3, #1
   149d8:	moveq	r3, #0
   149dc:	vmov	s14, r3
   149e0:	vcvt.f64.u32	d7, s14
   149e4:	vstr	d7, [sp, #120]	; 0x78
   149e8:	b	12c78 <floor@plt+0x18ac>
   149ec:	vldr	d7, [r6, #-48]	; 0xffffffd0
   149f0:	vcmp.f64	d7, #0.0
   149f4:	vmrs	APSR_nzcv, fpscr
   149f8:	vmovne.f64	d7, d9
   149fc:	bne	14a1c <floor@plt+0x3650>
   14a00:	vldr	d7, [r6]
   14a04:	vcmp.f64	d7, #0.0
   14a08:	vmrs	APSR_nzcv, fpscr
   14a0c:	movne	r3, #1
   14a10:	moveq	r3, #0
   14a14:	vmov	s14, r3
   14a18:	vcvt.f64.u32	d7, s14
   14a1c:	vstr	d7, [sp, #120]	; 0x78
   14a20:	b	12c78 <floor@plt+0x18ac>
   14a24:	vldr	d7, [r6, #-48]	; 0xffffffd0
   14a28:	vcmp.f64	d7, #0.0
   14a2c:	vmrs	APSR_nzcv, fpscr
   14a30:	vmovne.f64	d7, d9
   14a34:	bne	14a54 <floor@plt+0x3688>
   14a38:	vldr	d7, [r6]
   14a3c:	vcmp.f64	d7, #0.0
   14a40:	vmrs	APSR_nzcv, fpscr
   14a44:	movne	r3, #1
   14a48:	moveq	r3, #0
   14a4c:	vmov	s14, r3
   14a50:	vcvt.f64.u32	d7, s14
   14a54:	vstr	d7, [sp, #120]	; 0x78
   14a58:	b	12c78 <floor@plt+0x18ac>
   14a5c:	ldrd	r0, [r6]
   14a60:	mov	r2, #0
   14a64:	str	r2, [sp, #128]	; 0x80
   14a68:	strd	r0, [sp, #120]	; 0x78
   14a6c:	b	12c78 <floor@plt+0x18ac>
   14a70:	mov	r2, #0
   14a74:	vstr	d9, [sp, #120]	; 0x78
   14a78:	str	r2, [sp, #128]	; 0x80
   14a7c:	b	12c78 <floor@plt+0x18ac>
   14a80:	ldr	r5, [r6, #-48]	; 0xffffffd0
   14a84:	ldr	r1, [r6]
   14a88:	mov	r0, r5
   14a8c:	bl	112d0 <strcmp@plt>
   14a90:	cmp	r0, #0
   14a94:	mov	r0, r5
   14a98:	vmovne.f64	d7, d8
   14a9c:	vmoveq.f64	d7, d9
   14aa0:	vstr	d7, [sp, #120]	; 0x78
   14aa4:	bl	1121c <_ZdaPv@plt>
   14aa8:	ldr	r0, [r6]
   14aac:	cmp	r0, #0
   14ab0:	beq	12c78 <floor@plt+0x18ac>
   14ab4:	bl	1121c <_ZdaPv@plt>
   14ab8:	b	12c78 <floor@plt+0x18ac>
   14abc:	ldrd	r0, [r6]
   14ac0:	strd	r0, [sp, #120]	; 0x78
   14ac4:	b	12c78 <floor@plt+0x18ac>
   14ac8:	ldrd	r0, [r6]
   14acc:	strd	r0, [sp, #120]	; 0x78
   14ad0:	b	12c78 <floor@plt+0x18ac>
   14ad4:	nop			; (mov r0, r0)
   14ad8:	andeq	r0, r0, r0
   14adc:	eormi	r0, r4, r0
   14ae0:	andeq	r2, r4, r0, lsl #18
   14ae4:	andeq	lr, r2, ip, lsr #13
   14ae8:			; <UNDEFINED> instruction: 0x0002e4b0
   14aec:			; <UNDEFINED> instruction: 0x0002e4b4
   14af0:	andeq	lr, r2, ip, ror #7
   14af4:	andeq	r2, r4, r0, ror #8
   14af8:	andeq	r2, r4, r4, lsl #9
   14afc:	strdeq	lr, [r2], -r8
   14b00:	andeq	fp, r2, r0
   14b04:	andeq	lr, r2, r0, lsr #8
   14b08:	andeq	lr, r2, ip, lsl #10
   14b0c:	andeq	lr, r2, ip, asr #11
   14b10:	andeq	lr, r2, r0, asr #21
   14b14:	strdeq	lr, [r2], -ip
   14b18:	andeq	lr, r2, r8, asr r6
   14b1c:	andeq	lr, r2, r8, ror #11
   14b20:	andeq	lr, r2, r4, asr #13
   14b24:	andeq	lr, r2, ip, lsl #12
   14b28:	andeq	lr, r2, r0, ror #9
   14b2c:			; <UNDEFINED> instruction: 0x000454b8
   14b30:	andeq	lr, r2, r8, ror r4
   14b34:	ldr	r3, [r6]
   14b38:	str	r3, [sp, #120]	; 0x78
   14b3c:	b	12c78 <floor@plt+0x18ac>
   14b40:	vldr	d7, [r6, #-48]	; 0xffffffd0
   14b44:	vcmp.f64	d7, #0.0
   14b48:	vmrs	APSR_nzcv, fpscr
   14b4c:	vmoveq.f64	d7, d8
   14b50:	beq	14b68 <floor@plt+0x379c>
   14b54:	vldr	d7, [r6]
   14b58:	vcmp.f64	d7, #0.0
   14b5c:	vmrs	APSR_nzcv, fpscr
   14b60:	vmovne.f64	d7, d9
   14b64:	vmoveq.f64	d7, d8
   14b68:	vstr	d7, [sp, #120]	; 0x78
   14b6c:	b	12c78 <floor@plt+0x18ac>
   14b70:	ldr	r5, [r6, #-48]	; 0xffffffd0
   14b74:	ldr	r1, [r6]
   14b78:	mov	r0, r5
   14b7c:	bl	112d0 <strcmp@plt>
   14b80:	cmp	r0, #0
   14b84:	mov	r0, r5
   14b88:	vmoveq.f64	d7, d8
   14b8c:	vmovne.f64	d7, d9
   14b90:	vstr	d7, [sp, #120]	; 0x78
   14b94:	bl	1121c <_ZdaPv@plt>
   14b98:	ldr	r0, [r6]
   14b9c:	cmp	r0, #0
   14ba0:	beq	12c78 <floor@plt+0x18ac>
   14ba4:	bl	1121c <_ZdaPv@plt>
   14ba8:	b	12c78 <floor@plt+0x18ac>
   14bac:	vldr	d7, [r6, #-48]	; 0xffffffd0
   14bb0:	vcmp.f64	d7, #0.0
   14bb4:	vmrs	APSR_nzcv, fpscr
   14bb8:	vmoveq.f64	d7, d8
   14bbc:	beq	14bd4 <floor@plt+0x3808>
   14bc0:	vldr	d7, [r6]
   14bc4:	vcmp.f64	d7, #0.0
   14bc8:	vmrs	APSR_nzcv, fpscr
   14bcc:	vmovne.f64	d7, d9
   14bd0:	vmoveq.f64	d7, d8
   14bd4:	vstr	d7, [sp, #120]	; 0x78
   14bd8:	b	12c78 <floor@plt+0x18ac>
   14bdc:	ldr	r0, [r6, #-24]	; 0xffffffe8
   14be0:	cmp	r0, #0
   14be4:	beq	15490 <floor@plt+0x40c4>
   14be8:	ldr	r3, [r0]
   14bec:	ldr	r3, [r3, #8]
   14bf0:	blx	r3
   14bf4:	vstr	d0, [sp, #88]	; 0x58
   14bf8:	vstr	d0, [sp, #120]	; 0x78
   14bfc:	vstr	d1, [sp, #96]	; 0x60
   14c00:	b	12c78 <floor@plt+0x18ac>
   14c04:	mov	r0, #232	; 0xe8
   14c08:	bl	28660 <_Znwj@@Base>
   14c0c:	mov	r1, #2
   14c10:	mov	r9, r0
   14c14:	bl	1de34 <floor@plt+0xca68>
   14c18:	str	r9, [sp, #120]	; 0x78
   14c1c:	b	12c78 <floor@plt+0x18ac>
   14c20:	mov	r0, #232	; 0xe8
   14c24:	bl	28660 <_Znwj@@Base>
   14c28:	mov	r1, #1
   14c2c:	mov	r9, r0
   14c30:	bl	1de34 <floor@plt+0xca68>
   14c34:	str	r9, [sp, #120]	; 0x78
   14c38:	b	12c78 <floor@plt+0x18ac>
   14c3c:	vldr	d7, [r6]
   14c40:	vcmp.f64	d7, #0.0
   14c44:	vmrs	APSR_nzcv, fpscr
   14c48:	vmovne.f64	d7, d8
   14c4c:	vmoveq.f64	d7, d9
   14c50:	vstr	d7, [sp, #120]	; 0x78
   14c54:	b	12c78 <floor@plt+0x18ac>
   14c58:	ldr	r3, [pc, #-364]	; 14af4 <floor@plt+0x3728>
   14c5c:	mov	r2, #0
   14c60:	str	r2, [sp, #120]	; 0x78
   14c64:	vldr	d7, [r3, #8]
   14c68:	ldrd	r0, [r3, #16]
   14c6c:	vstr	d7, [sp, #128]	; 0x80
   14c70:	strd	r0, [sp, #136]	; 0x88
   14c74:	b	12c78 <floor@plt+0x18ac>
   14c78:	sub	lr, r6, #72	; 0x48
   14c7c:	add	ip, sp, #120	; 0x78
   14c80:	ldm	lr!, {r0, r1, r2, r3}
   14c84:	stmia	ip!, {r0, r1, r2, r3}
   14c88:	ldm	lr, {r0, r1}
   14c8c:	stm	ip, {r0, r1}
   14c90:	b	12c78 <floor@plt+0x18ac>
   14c94:	vldr	d7, [r6, #-48]	; 0xffffffd0
   14c98:	ldr	r2, [pc, #-428]	; 14af4 <floor@plt+0x3728>
   14c9c:	ldrd	r0, [r6, #-40]	; 0xffffffd8
   14ca0:	ldr	r3, [r6, #-32]	; 0xffffffe0
   14ca4:	vstr	d7, [r2, #8]
   14ca8:	strd	r0, [r2, #16]
   14cac:	str	r3, [r2, #4]
   14cb0:	b	12c78 <floor@plt+0x18ac>
   14cb4:	ldr	r2, [pc, #-456]	; 14af4 <floor@plt+0x3728>
   14cb8:	vldr	d7, [r2, #8]
   14cbc:	ldrd	r0, [r2, #16]
   14cc0:	ldr	r2, [r2, #4]
   14cc4:	vstr	d7, [sp, #120]	; 0x78
   14cc8:	strd	r0, [sp, #128]	; 0x80
   14ccc:	str	r2, [sp, #136]	; 0x88
   14cd0:	b	12c78 <floor@plt+0x18ac>
   14cd4:	mov	r2, #56	; 0x38
   14cd8:	mov	r3, #1
   14cdc:	strd	r2, [sp, #120]	; 0x78
   14ce0:	b	12c78 <floor@plt+0x18ac>
   14ce4:	mov	r2, #64	; 0x40
   14ce8:	mov	r3, #1
   14cec:	strd	r2, [sp, #120]	; 0x78
   14cf0:	b	12c78 <floor@plt+0x18ac>
   14cf4:	ldr	r0, [r6, #-24]	; 0xffffffe8
   14cf8:	cmp	r0, #0
   14cfc:	beq	152e0 <floor@plt+0x3f14>
   14d00:	ldr	r3, [r0]
   14d04:	ldr	r3, [r3, #20]
   14d08:	blx	r3
   14d0c:	vstr	d0, [sp, #120]	; 0x78
   14d10:	b	12c78 <floor@plt+0x18ac>
   14d14:	ldr	r0, [r6, #-24]	; 0xffffffe8
   14d18:	cmp	r0, #0
   14d1c:	beq	154fc <floor@plt+0x4130>
   14d20:	ldr	r3, [r0]
   14d24:	ldr	r3, [r3, #8]
   14d28:	blx	r3
   14d2c:	vstr	d1, [sp, #112]	; 0x70
   14d30:	vstr	d1, [sp, #120]	; 0x78
   14d34:	vstr	d0, [sp, #104]	; 0x68
   14d38:	b	12c78 <floor@plt+0x18ac>
   14d3c:	ldr	r0, [r6, #-24]	; 0xffffffe8
   14d40:	cmp	r0, #0
   14d44:	beq	152e0 <floor@plt+0x3f14>
   14d48:	ldr	r3, [r0]
   14d4c:	ldr	r3, [r3, #16]
   14d50:	blx	r3
   14d54:	vstr	d0, [sp, #120]	; 0x78
   14d58:	b	12c78 <floor@plt+0x18ac>
   14d5c:	mov	r2, #24
   14d60:	mov	r3, #1
   14d64:	strd	r2, [sp, #120]	; 0x78
   14d68:	b	12c78 <floor@plt+0x18ac>
   14d6c:	mov	r2, #60	; 0x3c
   14d70:	mov	r3, #1
   14d74:	strd	r2, [sp, #120]	; 0x78
   14d78:	b	12c78 <floor@plt+0x18ac>
   14d7c:	vldr	d7, [r6, #-48]	; 0xffffffd0
   14d80:	vldr	d6, [r6]
   14d84:	vsub.f64	d7, d7, d6
   14d88:	vstr	d7, [sp, #120]	; 0x78
   14d8c:	b	12c78 <floor@plt+0x18ac>
   14d90:	vldr	d7, [r6, #-48]	; 0xffffffd0
   14d94:	vldr	d6, [r6]
   14d98:	vadd.f64	d7, d7, d6
   14d9c:	vstr	d7, [sp, #120]	; 0x78
   14da0:	b	12c78 <floor@plt+0x18ac>
   14da4:	vldr	d7, [r6, #-48]	; 0xffffffd0
   14da8:	vldr	d6, [r6]
   14dac:	vmul.f64	d7, d7, d6
   14db0:	vstr	d7, [sp, #120]	; 0x78
   14db4:	b	12c78 <floor@plt+0x18ac>
   14db8:	ldrd	r0, [r6, #8]
   14dbc:	vldr	d7, [r6]
   14dc0:	mov	r2, #0
   14dc4:	strd	r0, [sp, #136]	; 0x88
   14dc8:	ldr	r0, [r6, #-72]	; 0xffffffb8
   14dcc:	add	r1, sp, #120	; 0x78
   14dd0:	vstr	d7, [sp, #128]	; 0x80
   14dd4:	str	r2, [sp, #120]	; 0x78
   14dd8:	bl	11e84 <floor@plt+0xab8>
   14ddc:	ldr	r0, [r6, #-72]	; 0xffffffb8
   14de0:	bl	110e4 <free@plt>
   14de4:	b	12c78 <floor@plt+0x18ac>
   14de8:	mov	lr, r6
   14dec:	add	ip, sp, #120	; 0x78
   14df0:	ldm	lr!, {r0, r1, r2, r3}
   14df4:	stmia	ip!, {r0, r1, r2, r3}
   14df8:	ldm	lr, {r0, r1}
   14dfc:	stm	ip, {r0, r1}
   14e00:	ldr	r0, [r6, #-72]	; 0xffffffb8
   14e04:	add	r1, sp, #120	; 0x78
   14e08:	bl	11e84 <floor@plt+0xab8>
   14e0c:	ldr	r0, [r6, #-72]	; 0xffffffb8
   14e10:	bl	110e4 <free@plt>
   14e14:	b	12c78 <floor@plt+0x18ac>
   14e18:	ldr	r0, [r6, #-24]	; 0xffffffe8
   14e1c:	cmp	r0, #0
   14e20:	beq	152e0 <floor@plt+0x3f14>
   14e24:	ldr	r3, [r0]
   14e28:	ldr	r3, [r3, #12]
   14e2c:	blx	r3
   14e30:	vstr	d0, [sp, #120]	; 0x78
   14e34:	b	12c78 <floor@plt+0x18ac>
   14e38:	ldr	r3, [r6, #-24]	; 0xffffffe8
   14e3c:	str	r3, [sp, #120]	; 0x78
   14e40:	b	12c78 <floor@plt+0x18ac>
   14e44:	mov	r3, #1
   14e48:	str	r3, [sp, #120]	; 0x78
   14e4c:	b	12c78 <floor@plt+0x18ac>
   14e50:	vldr	d7, [r6, #-24]	; 0xffffffe8
   14e54:	vcvt.s32.f64	s14, d7
   14e58:	vstr	s14, [sp, #120]	; 0x78
   14e5c:	b	12c78 <floor@plt+0x18ac>
   14e60:	ldr	r3, [r6]
   14e64:	str	r3, [sp, #120]	; 0x78
   14e68:	b	12c78 <floor@plt+0x18ac>
   14e6c:	ldr	r3, [pc, #-896]	; 14af4 <floor@plt+0x3728>
   14e70:	ldr	r9, [r3, #40]	; 0x28
   14e74:	cmp	r9, #0
   14e78:	beq	153d8 <floor@plt+0x400c>
   14e7c:	mov	r5, #0
   14e80:	b	14e90 <floor@plt+0x3ac4>
   14e84:	ldr	r9, [r9, #4]
   14e88:	cmp	r9, #0
   14e8c:	beq	153d8 <floor@plt+0x400c>
   14e90:	ldr	r3, [r9]
   14e94:	mov	r0, r9
   14e98:	ldr	r3, [r3, #84]	; 0x54
   14e9c:	blx	r3
   14ea0:	ldr	r3, [r6]
   14ea4:	cmp	r3, r0
   14ea8:	bne	14e84 <floor@plt+0x3ab8>
   14eac:	ldr	r3, [r6, #-24]	; 0xffffffe8
   14eb0:	add	r5, r5, #1
   14eb4:	cmp	r3, r5
   14eb8:	bne	14e84 <floor@plt+0x3ab8>
   14ebc:	str	r9, [sp, #120]	; 0x78
   14ec0:	b	12c78 <floor@plt+0x18ac>
   14ec4:	ldr	r3, [pc, #-984]	; 14af4 <floor@plt+0x3728>
   14ec8:	ldr	r9, [r3, #36]	; 0x24
   14ecc:	cmp	r9, #0
   14ed0:	beq	1535c <floor@plt+0x3f90>
   14ed4:	mov	r5, #0
   14ed8:	b	14ee8 <floor@plt+0x3b1c>
   14edc:	ldr	r9, [r9, #8]
   14ee0:	cmp	r9, #0
   14ee4:	beq	1535c <floor@plt+0x3f90>
   14ee8:	ldr	r3, [r9]
   14eec:	mov	r0, r9
   14ef0:	ldr	r3, [r3, #84]	; 0x54
   14ef4:	blx	r3
   14ef8:	ldr	r3, [r6]
   14efc:	cmp	r3, r0
   14f00:	bne	14edc <floor@plt+0x3b10>
   14f04:	ldr	r3, [r6, #-24]	; 0xffffffe8
   14f08:	add	r5, r5, #1
   14f0c:	cmp	r3, r5
   14f10:	bne	14edc <floor@plt+0x3b10>
   14f14:	str	r9, [sp, #120]	; 0x78
   14f18:	b	12c78 <floor@plt+0x18ac>
   14f1c:	mov	r3, #1
   14f20:	str	r3, [sp, #120]	; 0x78
   14f24:	b	12c78 <floor@plt+0x18ac>
   14f28:	sub	r3, r6, #48	; 0x30
   14f2c:	add	r9, sp, #144	; 0x90
   14f30:	ldm	r3, {r1, r2}
   14f34:	mov	r0, r9
   14f38:	bl	1efa0 <floor@plt+0xdbd4>
   14f3c:	sub	r2, r9, #24
   14f40:	mov	r0, r9
   14f44:	mov	r1, r6
   14f48:	bl	1f27c <floor@plt+0xdeb0>
   14f4c:	cmp	r0, #0
   14f50:	mov	r0, r9
   14f54:	beq	15600 <floor@plt+0x4234>
   14f58:	bl	1f078 <floor@plt+0xdcac>
   14f5c:	b	12c78 <floor@plt+0x18ac>
   14f60:	sub	r3, r6, #24
   14f64:	add	r9, sp, #144	; 0x90
   14f68:	ldm	r3, {r1, r2}
   14f6c:	mov	r0, r9
   14f70:	bl	1efa0 <floor@plt+0xdbd4>
   14f74:	sub	r2, r9, #24
   14f78:	mov	r0, r9
   14f7c:	mov	r1, r6
   14f80:	bl	1f27c <floor@plt+0xdeb0>
   14f84:	cmp	r0, #0
   14f88:	mov	r0, r9
   14f8c:	beq	15600 <floor@plt+0x4234>
   14f90:	bl	1f078 <floor@plt+0xdcac>
   14f94:	b	12c78 <floor@plt+0x18ac>
   14f98:	vldr	d4, [r6, #-120]	; 0xffffff88
   14f9c:	vldr	d7, [r6, #-24]	; 0xffffffe8
   14fa0:	vldr	d5, [r6, #-16]
   14fa4:	vldr	d6, [r6, #-72]	; 0xffffffb8
   14fa8:	vsub.f64	d3, d9, d4
   14fac:	vmul.f64	d7, d4, d7
   14fb0:	vmul.f64	d5, d4, d5
   14fb4:	vldr	d4, [r6, #-64]	; 0xffffffc0
   14fb8:	vmla.f64	d7, d3, d6
   14fbc:	vmla.f64	d5, d3, d4
   14fc0:	vstr	d7, [sp, #120]	; 0x78
   14fc4:	vstr	d5, [sp, #128]	; 0x80
   14fc8:	b	12c78 <floor@plt+0x18ac>
   14fcc:	ldr	r0, [r6]
   14fd0:	bl	11e40 <floor@plt+0xa74>
   14fd4:	cmp	r0, #0
   14fd8:	beq	15610 <floor@plt+0x4244>
   14fdc:	mov	lr, r0
   14fe0:	add	ip, sp, #120	; 0x78
   14fe4:	ldm	lr!, {r0, r1, r2, r3}
   14fe8:	stmia	ip!, {r0, r1, r2, r3}
   14fec:	ldm	lr, {r0, r1}
   14ff0:	stm	ip, {r0, r1}
   14ff4:	ldr	r0, [r6]
   14ff8:	bl	110e4 <free@plt>
   14ffc:	b	12c78 <floor@plt+0x18ac>
   15000:	ldr	r3, [pc, #-1300]	; 14af4 <floor@plt+0x3728>
   15004:	mov	r2, #0
   15008:	str	r2, [sp, #120]	; 0x78
   1500c:	vldr	d7, [r3, #8]
   15010:	ldrd	r0, [r3, #16]
   15014:	vstr	d7, [sp, #128]	; 0x80
   15018:	strd	r0, [sp, #136]	; 0x88
   1501c:	b	12c78 <floor@plt+0x18ac>
   15020:	add	r9, sp, #144	; 0x90
   15024:	ldm	r6, {r1, r2}
   15028:	mov	r0, r9
   1502c:	bl	1efa0 <floor@plt+0xdbd4>
   15030:	sub	r2, r9, #24
   15034:	mov	r0, r9
   15038:	sub	r1, r6, #24
   1503c:	bl	1f27c <floor@plt+0xdeb0>
   15040:	cmp	r0, #0
   15044:	mov	r0, r9
   15048:	beq	15600 <floor@plt+0x4234>
   1504c:	bl	1f078 <floor@plt+0xdcac>
   15050:	b	12c78 <floor@plt+0x18ac>
   15054:	mov	lr, r6
   15058:	add	ip, sp, #120	; 0x78
   1505c:	ldm	lr!, {r0, r1, r2, r3}
   15060:	stmia	ip!, {r0, r1, r2, r3}
   15064:	ldm	lr, {r0, r1}
   15068:	stm	ip, {r0, r1}
   1506c:	b	12c78 <floor@plt+0x18ac>
   15070:	sub	r1, r6, #24
   15074:	add	r0, sp, #144	; 0x90
   15078:	bl	1c680 <floor@plt+0xb2b4>
   1507c:	vldr	d7, [sp, #144]	; 0x90
   15080:	ldrd	r0, [sp, #152]	; 0x98
   15084:	vstr	d7, [sp, #120]	; 0x78
   15088:	strd	r0, [sp, #128]	; 0x80
   1508c:	b	12c78 <floor@plt+0x18ac>
   15090:	mov	r1, r6
   15094:	add	r0, sp, #144	; 0x90
   15098:	bl	1c680 <floor@plt+0xb2b4>
   1509c:	vldr	d7, [sp, #144]	; 0x90
   150a0:	ldrd	r0, [sp, #152]	; 0x98
   150a4:	vstr	d7, [sp, #120]	; 0x78
   150a8:	strd	r0, [sp, #128]	; 0x80
   150ac:	b	12c78 <floor@plt+0x18ac>
   150b0:	ldm	r6, {r0, r1, r2, r3}
   150b4:	add	ip, sp, #120	; 0x78
   150b8:	stm	ip, {r0, r1, r2, r3}
   150bc:	b	12c78 <floor@plt+0x18ac>
   150c0:	sub	r2, r6, #48	; 0x30
   150c4:	add	r3, sp, #120	; 0x78
   150c8:	ldm	r2, {r0, r1, r2}
   150cc:	stm	r3, {r0, r1, r2}
   150d0:	ldrd	r2, [sp, #124]	; 0x7c
   150d4:	cmp	r2, r3
   150d8:	blt	15124 <floor@plt+0x3d58>
   150dc:	cmp	r2, #0
   150e0:	beq	15538 <floor@plt+0x416c>
   150e4:	lsl	r2, r3, #1
   150e8:	cmn	r2, #-268435455	; 0xf0000001
   150ec:	lslls	r0, r3, #4
   150f0:	mvnhi	r0, #0
   150f4:	ldr	r5, [sp, #120]	; 0x78
   150f8:	str	r2, [sp, #128]	; 0x80
   150fc:	bl	1115c <_Znaj@plt>
   15100:	ldr	r2, [sp, #124]	; 0x7c
   15104:	mov	r1, r5
   15108:	lsl	r2, r2, #3
   1510c:	bl	11270 <memcpy@plt>
   15110:	mov	r3, r0
   15114:	mov	r0, r5
   15118:	str	r3, [sp, #120]	; 0x78
   1511c:	bl	1121c <_ZdaPv@plt>
   15120:	ldr	r2, [sp, #124]	; 0x7c
   15124:	ldr	r3, [sp, #120]	; 0x78
   15128:	ldrd	r0, [r6]
   1512c:	add	r2, r3, r2, lsl #3
   15130:	strd	r0, [r2]
   15134:	ldr	r3, [sp, #124]	; 0x7c
   15138:	add	r3, r3, #1
   1513c:	str	r3, [sp, #124]	; 0x7c
   15140:	b	12c78 <floor@plt+0x18ac>
   15144:	vldr	d6, [r6, #-48]	; 0xffffffd0
   15148:	vldr	d5, [r6]
   1514c:	vldr	d7, [r6, #-40]	; 0xffffffd8
   15150:	vldr	d4, [r6, #8]
   15154:	vadd.f64	d6, d6, d5
   15158:	vadd.f64	d7, d7, d4
   1515c:	vstr	d6, [sp, #120]	; 0x78
   15160:	vstr	d7, [sp, #128]	; 0x80
   15164:	b	12c78 <floor@plt+0x18ac>
   15168:	ldm	r6, {r0, r1, r2, r3}
   1516c:	add	ip, sp, #120	; 0x78
   15170:	stm	ip, {r0, r1, r2, r3}
   15174:	b	12c78 <floor@plt+0x18ac>
   15178:	vldr	d6, [r6, #-72]	; 0xffffffb8
   1517c:	vldr	d5, [r6, #-24]	; 0xffffffe8
   15180:	vldr	d7, [r6, #-64]	; 0xffffffc0
   15184:	vldr	d4, [r6, #-16]
   15188:	vadd.f64	d6, d6, d5
   1518c:	vadd.f64	d7, d7, d4
   15190:	vstr	d6, [sp, #120]	; 0x78
   15194:	vstr	d7, [sp, #128]	; 0x80
   15198:	b	12c78 <floor@plt+0x18ac>
   1519c:	vldr	d4, [r6, #-144]	; 0xffffff70
   151a0:	vldr	d7, [r6, #-48]	; 0xffffffd0
   151a4:	vldr	d5, [r6, #-40]	; 0xffffffd8
   151a8:	vldr	d6, [r6, #-96]	; 0xffffffa0
   151ac:	vsub.f64	d3, d9, d4
   151b0:	vmul.f64	d7, d4, d7
   151b4:	vmul.f64	d5, d4, d5
   151b8:	vldr	d4, [r6, #-88]	; 0xffffffa8
   151bc:	vmla.f64	d7, d3, d6
   151c0:	vmla.f64	d5, d3, d4
   151c4:	vstr	d7, [sp, #120]	; 0x78
   151c8:	vstr	d5, [sp, #128]	; 0x80
   151cc:	b	12c78 <floor@plt+0x18ac>
   151d0:	vldr	d4, [r6, #-120]	; 0xffffff88
   151d4:	vldr	d7, [r6, #-24]	; 0xffffffe8
   151d8:	vldr	d5, [r6, #-16]
   151dc:	vldr	d6, [r6, #-72]	; 0xffffffb8
   151e0:	vsub.f64	d3, d9, d4
   151e4:	vmul.f64	d7, d4, d7
   151e8:	vmul.f64	d5, d4, d5
   151ec:	vldr	d4, [r6, #-64]	; 0xffffffc0
   151f0:	vmla.f64	d7, d3, d6
   151f4:	vmla.f64	d5, d3, d4
   151f8:	vstr	d7, [sp, #120]	; 0x78
   151fc:	vstr	d5, [sp, #128]	; 0x80
   15200:	b	12c78 <floor@plt+0x18ac>
   15204:	vldr	d7, [r6, #-48]	; 0xffffffd0
   15208:	ldrd	r0, [r6]
   1520c:	vstr	d7, [sp, #120]	; 0x78
   15210:	strd	r0, [sp, #128]	; 0x80
   15214:	b	12c78 <floor@plt+0x18ac>
   15218:	vldr	d7, [r6, #-72]	; 0xffffffb8
   1521c:	ldrd	r0, [r6, #-16]
   15220:	vstr	d7, [sp, #120]	; 0x78
   15224:	strd	r0, [sp, #128]	; 0x80
   15228:	b	12c78 <floor@plt+0x18ac>
   1522c:	vldr	d6, [r6, #-72]	; 0xffffffb8
   15230:	vldr	d5, [r6, #-24]	; 0xffffffe8
   15234:	vldr	d7, [r6, #-64]	; 0xffffffc0
   15238:	vldr	d4, [r6, #-16]
   1523c:	vsub.f64	d6, d6, d5
   15240:	vsub.f64	d7, d7, d4
   15244:	vstr	d6, [sp, #120]	; 0x78
   15248:	vstr	d7, [sp, #128]	; 0x80
   1524c:	b	12c78 <floor@plt+0x18ac>
   15250:	vldr	d4, [r6, #-96]	; 0xffffffa0
   15254:	vldr	d7, [r6]
   15258:	vldr	d5, [r6, #8]
   1525c:	vldr	d6, [r6, #-48]	; 0xffffffd0
   15260:	vsub.f64	d3, d9, d4
   15264:	vmul.f64	d7, d4, d7
   15268:	vmul.f64	d5, d4, d5
   1526c:	vldr	d4, [r6, #-40]	; 0xffffffd8
   15270:	vmla.f64	d7, d3, d6
   15274:	vmla.f64	d5, d3, d4
   15278:	vstr	d7, [sp, #120]	; 0x78
   1527c:	vstr	d5, [sp, #128]	; 0x80
   15280:	b	12c78 <floor@plt+0x18ac>
   15284:	vldr	d7, [r3, #216]	; 0xd8
   15288:	vldr	d6, [r6]
   1528c:	vsub.f64	d7, d7, d6
   15290:	vstr	d7, [r3, #216]	; 0xd8
   15294:	b	12c78 <floor@plt+0x18ac>
   15298:	vldr	d7, [r3, #208]	; 0xd0
   1529c:	vldr	d6, [r6]
   152a0:	vsub.f64	d7, d7, d6
   152a4:	vstr	d7, [r3, #208]	; 0xd0
   152a8:	b	12c78 <floor@plt+0x18ac>
   152ac:	vldr	d7, [r3, #216]	; 0xd8
   152b0:	vldr	d6, [r6]
   152b4:	vadd.f64	d7, d7, d6
   152b8:	vstr	d7, [r3, #216]	; 0xd8
   152bc:	b	12c78 <floor@plt+0x18ac>
   152c0:	vldr	d7, [r3, #208]	; 0xd0
   152c4:	vldr	d6, [r6]
   152c8:	vadd.f64	d7, d7, d6
   152cc:	vstr	d7, [r3, #208]	; 0xd0
   152d0:	b	12c78 <floor@plt+0x18ac>
   152d4:	mov	r4, r5
   152d8:	mov	r5, #1
   152dc:	b	12ebc <floor@plt+0x1af0>
   152e0:	vstr	d8, [sp, #120]	; 0x78
   152e4:	b	12c78 <floor@plt+0x18ac>
   152e8:	vldr	d7, [r3, #216]	; 0xd8
   152ec:	vldr	d6, [r3, #128]	; 0x80
   152f0:	vadd.f64	d7, d7, d6
   152f4:	vstr	d7, [r3, #216]	; 0xd8
   152f8:	mov	r0, #32
   152fc:	bl	28660 <_Znwj@@Base>
   15300:	ldr	r2, [sp, #120]	; 0x78
   15304:	add	r1, r2, #208	; 0xd0
   15308:	ldr	r3, [r2, #204]	; 0xcc
   1530c:	ldr	r2, [r2, #224]	; 0xe0
   15310:	mov	r9, r0
   15314:	bl	1ddcc <floor@plt+0xca00>
   15318:	ldr	r3, [sp, #120]	; 0x78
   1531c:	mov	r1, #0
   15320:	ldr	r2, [r3]
   15324:	str	r9, [r3, #204]	; 0xcc
   15328:	bic	r2, r2, #128	; 0x80
   1532c:	vstr	d8, [r3, #216]	; 0xd8
   15330:	vstr	d8, [r3, #208]	; 0xd0
   15334:	str	r2, [r3]
   15338:	str	r1, [r3, #224]	; 0xe0
   1533c:	b	12c78 <floor@plt+0x18ac>
   15340:	ldr	r1, [pc, #-2104]	; 14b10 <floor@plt+0x3744>
   15344:	b	13848 <floor@plt+0x247c>
   15348:	ldr	r1, [pc, #-2112]	; 14b10 <floor@plt+0x3744>
   1534c:	b	13948 <floor@plt+0x257c>
   15350:	ldr	r0, [pc, #-2144]	; 14af8 <floor@plt+0x372c>
   15354:	bl	1df68 <floor@plt+0xcb9c>
   15358:	b	12c78 <floor@plt+0x18ac>
   1535c:	add	r4, sp, #80	; 0x50
   15360:	sub	r5, r4, #24
   15364:	mov	r0, r5
   15368:	ldr	r1, [r6, #-24]	; 0xffffffe8
   1536c:	bl	27084 <floor@plt+0x15cb8>
   15370:	ldr	r0, [r6, #-24]	; 0xffffffe8
   15374:	sub	r3, r0, #10
   15378:	cmp	r3, #10
   1537c:	bls	1558c <floor@plt+0x41c0>
   15380:	bl	119c4 <floor@plt+0x5f8>
   15384:	mov	r1, r0
   15388:	sub	r4, r4, #8
   1538c:	mov	r0, r4
   15390:	bl	27058 <floor@plt+0x15c8c>
   15394:	ldr	r3, [r6]
   15398:	add	r0, sp, #144	; 0x90
   1539c:	sub	r3, r3, #1
   153a0:	cmp	r3, #9
   153a4:	ldrls	r2, [pc, #-2220]	; 14b00 <floor@plt+0x3734>
   153a8:	ldrhi	r1, [pc, #-2220]	; 14b04 <floor@plt+0x3738>
   153ac:	addls	r3, r2, r3, lsl #2
   153b0:	ldrls	r1, [r3, #528]	; 0x210
   153b4:	bl	27058 <floor@plt+0x15c8c>
   153b8:	mov	r2, r4
   153bc:	mov	r1, r5
   153c0:	add	r3, sp, #144	; 0x90
   153c4:	ldr	r0, [pc, #-2256]	; 14afc <floor@plt+0x3730>
   153c8:	mov	r4, r8
   153cc:	bl	17778 <floor@plt+0x63ac>
   153d0:	mov	r5, #1
   153d4:	b	12eb0 <floor@plt+0x1ae4>
   153d8:	add	r4, sp, #80	; 0x50
   153dc:	sub	r5, r4, #24
   153e0:	mov	r0, r5
   153e4:	ldr	r1, [r6, #-24]	; 0xffffffe8
   153e8:	bl	27084 <floor@plt+0x15cb8>
   153ec:	ldr	r0, [r6, #-24]	; 0xffffffe8
   153f0:	sub	r3, r0, #10
   153f4:	cmp	r3, #10
   153f8:	bls	1557c <floor@plt+0x41b0>
   153fc:	bl	119c4 <floor@plt+0x5f8>
   15400:	mov	r1, r0
   15404:	sub	r4, r4, #8
   15408:	mov	r0, r4
   1540c:	bl	27058 <floor@plt+0x15c8c>
   15410:	ldr	r3, [r6]
   15414:	add	r0, sp, #144	; 0x90
   15418:	sub	r3, r3, #1
   1541c:	cmp	r3, #9
   15420:	ldrls	r2, [pc, #-2344]	; 14b00 <floor@plt+0x3734>
   15424:	ldrhi	r1, [pc, #-2344]	; 14b04 <floor@plt+0x3738>
   15428:	addls	r3, r2, r3, lsl #2
   1542c:	ldrls	r1, [r3, #528]	; 0x210
   15430:	bl	27058 <floor@plt+0x15c8c>
   15434:	mov	r2, r4
   15438:	mov	r1, r5
   1543c:	add	r3, sp, #144	; 0x90
   15440:	ldr	r0, [pc, #-2368]	; 14b08 <floor@plt+0x373c>
   15444:	mov	r4, r8
   15448:	bl	17778 <floor@plt+0x63ac>
   1544c:	mov	r5, #1
   15450:	b	12eb0 <floor@plt+0x1ae4>
   15454:	tst	r3, #65536	; 0x10000
   15458:	orreq	r3, r3, #131072	; 0x20000
   1545c:	vstrne	d8, [r2, #152]	; 0x98
   15460:	streq	r3, [r2]
   15464:	b	12c78 <floor@plt+0x18ac>
   15468:	tst	r3, #65536	; 0x10000
   1546c:	orreq	r3, r3, #65536	; 0x10000
   15470:	strdne	r0, [r2, #152]	; 0x98
   15474:	streq	r3, [r2]
   15478:	strdeq	r0, [r2, #152]	; 0x98
   1547c:	strdeq	r0, [r2, #144]	; 0x90
   15480:	b	12c78 <floor@plt+0x18ac>
   15484:	mov	r0, r1
   15488:	bl	11198 <system@plt>
   1548c:	b	13ee0 <floor@plt+0x2b14>
   15490:	ldrd	r0, [r6, #-16]
   15494:	strd	r0, [sp, #120]	; 0x78
   15498:	b	12c78 <floor@plt+0x18ac>
   1549c:	vneg.f64	d0, d0
   154a0:	bl	113cc <floor@plt>
   154a4:	vneg.f64	d0, d0
   154a8:	b	13a68 <floor@plt+0x269c>
   154ac:	bl	19c34 <floor@plt+0x8868>
   154b0:	b	12c48 <floor@plt+0x187c>
   154b4:	ldr	r1, [r6]
   154b8:	add	r0, sp, #144	; 0x90
   154bc:	bl	27058 <floor@plt+0x15c8c>
   154c0:	ldr	r3, [pc, #-2460]	; 14b2c <floor@plt+0x3760>
   154c4:	add	r1, sp, #144	; 0x90
   154c8:	mov	r2, r3
   154cc:	ldr	r0, [pc, #-2504]	; 14b0c <floor@plt+0x3740>
   154d0:	mov	r4, r8
   154d4:	bl	17778 <floor@plt+0x63ac>
   154d8:	mov	r5, #1
   154dc:	b	12eb0 <floor@plt+0x1ae4>
   154e0:	bl	176f4 <floor@plt+0x6328>
   154e4:	ldr	r0, [r6, #8]
   154e8:	b	13e4c <floor@plt+0x2a80>
   154ec:	bl	19c34 <floor@plt+0x8868>
   154f0:	b	13e38 <floor@plt+0x2a6c>
   154f4:	bl	19c34 <floor@plt+0x8868>
   154f8:	b	13da4 <floor@plt+0x29d8>
   154fc:	ldrd	r0, [r6, #-8]
   15500:	strd	r0, [sp, #120]	; 0x78
   15504:	b	12c78 <floor@plt+0x18ac>
   15508:	mov	r0, #32
   1550c:	bl	28660 <_Znwj@@Base>
   15510:	ldr	r2, [sp, #120]	; 0x78
   15514:	add	r1, r2, #208	; 0xd0
   15518:	ldr	r3, [r2, #204]	; 0xcc
   1551c:	ldr	r2, [r2, #224]	; 0xe0
   15520:	mov	r9, r0
   15524:	bl	1ddcc <floor@plt+0xca00>
   15528:	ldr	r3, [sp, #120]	; 0x78
   1552c:	ldr	r2, [r3]
   15530:	str	r9, [r3, #204]	; 0xcc
   15534:	b	14108 <floor@plt+0x2d3c>
   15538:	mov	r0, #32
   1553c:	bl	1115c <_Znaj@plt>
   15540:	mov	r3, #4
   15544:	str	r3, [sp, #128]	; 0x80
   15548:	ldr	r2, [sp, #124]	; 0x7c
   1554c:	str	r0, [sp, #120]	; 0x78
   15550:	b	15124 <floor@plt+0x3d58>
   15554:	bl	19c34 <floor@plt+0x8868>
   15558:	b	148a8 <floor@plt+0x34dc>
   1555c:	ldr	r3, [r6, #4]
   15560:	cmp	r3, #0
   15564:	ldrne	r2, [r6, #8]
   15568:	strne	r3, [sp, #124]	; 0x7c
   1556c:	strne	r2, [sp, #128]	; 0x80
   15570:	b	12c78 <floor@plt+0x18ac>
   15574:	bl	19c34 <floor@plt+0x8868>
   15578:	b	14618 <floor@plt+0x324c>
   1557c:	ldr	r1, [pc, #-2676]	; 14b10 <floor@plt+0x3744>
   15580:	b	15404 <floor@plt+0x4038>
   15584:	bl	19c34 <floor@plt+0x8868>
   15588:	b	13e78 <floor@plt+0x2aac>
   1558c:	ldr	r1, [pc, #-2692]	; 14b10 <floor@plt+0x3744>
   15590:	b	15388 <floor@plt+0x3fbc>
   15594:	ldr	r3, [pc, #-2672]	; 14b2c <floor@plt+0x3760>
   15598:	ldr	r0, [pc, #-2700]	; 14b14 <floor@plt+0x3748>
   1559c:	b	13c90 <floor@plt+0x28c4>
   155a0:	add	r5, r5, #100	; 0x64
   155a4:	b	13f74 <floor@plt+0x2ba8>
   155a8:	ldr	r3, [pc, #-2692]	; 14b2c <floor@plt+0x3760>
   155ac:	ldr	r0, [pc, #-2716]	; 14b18 <floor@plt+0x374c>
   155b0:	b	13c90 <floor@plt+0x28c4>
   155b4:	ldr	r3, [pc, #-2704]	; 14b2c <floor@plt+0x3760>
   155b8:	ldr	r0, [pc, #-2724]	; 14b1c <floor@plt+0x3750>
   155bc:	b	13c90 <floor@plt+0x28c4>
   155c0:	vldr	d7, [r3, #216]	; 0xd8
   155c4:	vldr	d6, [r3, #128]	; 0x80
   155c8:	vsub.f64	d7, d7, d6
   155cc:	vstr	d7, [r3, #216]	; 0xd8
   155d0:	b	152f8 <floor@plt+0x3f2c>
   155d4:	bl	110c0 <sqrt@plt>
   155d8:	ldr	r2, [r5]
   155dc:	vstr	d12, [sp, #120]	; 0x78
   155e0:	cmp	r2, #33	; 0x21
   155e4:	bne	12c78 <floor@plt+0x18ac>
   155e8:	ldr	r3, [pc, #-2756]	; 14b2c <floor@plt+0x3760>
   155ec:	ldr	r0, [pc, #-2772]	; 14b20 <floor@plt+0x3754>
   155f0:	b	13c90 <floor@plt+0x28c4>
   155f4:	ldr	r3, [pc, #-2768]	; 14b2c <floor@plt+0x3760>
   155f8:	ldr	r0, [pc, #-2780]	; 14b24 <floor@plt+0x3758>
   155fc:	b	13c90 <floor@plt+0x28c4>
   15600:	bl	1f078 <floor@plt+0xdcac>
   15604:	mov	r4, r8
   15608:	mov	r5, #1
   1560c:	b	12eb0 <floor@plt+0x1ae4>
   15610:	ldr	r1, [r6]
   15614:	add	r0, sp, #144	; 0x90
   15618:	bl	27058 <floor@plt+0x15c8c>
   1561c:	ldr	r3, [pc, #-2808]	; 14b2c <floor@plt+0x3760>
   15620:	add	r1, sp, #144	; 0x90
   15624:	mov	r2, r3
   15628:	ldr	r0, [pc, #-2824]	; 14b28 <floor@plt+0x375c>
   1562c:	mov	r4, r8
   15630:	bl	17778 <floor@plt+0x63ac>
   15634:	mov	r5, #1
   15638:	b	12eb0 <floor@plt+0x1ae4>
   1563c:	bl	111e0 <__stack_chk_fail@plt>
   15640:	vldr	d7, [r3, #208]	; 0xd0
   15644:	vldr	d6, [r3, #128]	; 0x80
   15648:	vsub.f64	d7, d7, d6
   1564c:	vstr	d7, [r3, #208]	; 0xd0
   15650:	b	152f8 <floor@plt+0x3f2c>
   15654:	vldr	d7, [r3, #208]	; 0xd0
   15658:	vldr	d6, [r3, #128]	; 0x80
   1565c:	vadd.f64	d7, d7, d6
   15660:	vstr	d7, [r3, #208]	; 0xd0
   15664:	b	152f8 <floor@plt+0x3f2c>
   15668:	ldr	r1, [r6, #-72]	; 0xffffffb8
   1566c:	add	r0, sp, #144	; 0x90
   15670:	bl	27058 <floor@plt+0x15c8c>
   15674:	ldr	r3, [pc, #-2896]	; 14b2c <floor@plt+0x3760>
   15678:	add	r1, sp, #144	; 0x90
   1567c:	mov	r2, r3
   15680:	ldr	r0, [pc, #-2904]	; 14b30 <floor@plt+0x3764>
   15684:	mov	r4, r8
   15688:	bl	17778 <floor@plt+0x63ac>
   1568c:	mov	r5, #1
   15690:	b	12eb0 <floor@plt+0x1ae4>
   15694:	mov	r0, r9
   15698:	bl	286b0 <_ZdlPv@@Base>
   1569c:	bl	111ec <__cxa_end_cleanup@plt>
   156a0:	b	15694 <floor@plt+0x42c8>
   156a4:	ldr	r0, [sp, #36]	; 0x24
   156a8:	bl	286b0 <_ZdlPv@@Base>
   156ac:	bl	111ec <__cxa_end_cleanup@plt>
   156b0:	mov	r0, r9
   156b4:	bl	1f078 <floor@plt+0xdcac>
   156b8:	bl	111ec <__cxa_end_cleanup@plt>
   156bc:	mov	r0, r9
   156c0:	bl	1f078 <floor@plt+0xdcac>
   156c4:	bl	111ec <__cxa_end_cleanup@plt>
   156c8:	mov	r0, r9
   156cc:	bl	286b0 <_ZdlPv@@Base>
   156d0:	bl	111ec <__cxa_end_cleanup@plt>
   156d4:	mov	r0, r9
   156d8:	bl	1f078 <floor@plt+0xdcac>
   156dc:	bl	111ec <__cxa_end_cleanup@plt>
   156e0:	b	15694 <floor@plt+0x42c8>
   156e4:	mov	r0, r9
   156e8:	bl	1f078 <floor@plt+0xdcac>
   156ec:	bl	111ec <__cxa_end_cleanup@plt>
   156f0:	b	15694 <floor@plt+0x42c8>
   156f4:	b	156c8 <floor@plt+0x42fc>
   156f8:	b	15694 <floor@plt+0x42c8>
   156fc:	b	15694 <floor@plt+0x42c8>
   15700:	b	15694 <floor@plt+0x42c8>
   15704:	b	15694 <floor@plt+0x42c8>
   15708:	b	15694 <floor@plt+0x42c8>
   1570c:	b	15694 <floor@plt+0x42c8>
   15710:	b	15694 <floor@plt+0x42c8>
   15714:	b	15694 <floor@plt+0x42c8>
   15718:	b	15694 <floor@plt+0x42c8>
   1571c:	b	15694 <floor@plt+0x42c8>
   15720:	b	15694 <floor@plt+0x42c8>
   15724:	mov	r0, r5
   15728:	bl	286b0 <_ZdlPv@@Base>
   1572c:	bl	111ec <__cxa_end_cleanup@plt>
   15730:	b	15694 <floor@plt+0x42c8>
   15734:	b	15694 <floor@plt+0x42c8>
   15738:	b	15694 <floor@plt+0x42c8>
   1573c:	b	15694 <floor@plt+0x42c8>
   15740:	mov	r0, #0
   15744:	bx	lr
   15748:	mov	r3, r0
   1574c:	mov	r0, #1
   15750:	ldr	ip, [r3, #12]
   15754:	ldr	r3, [r3, #16]
   15758:	str	ip, [r1]
   1575c:	str	r3, [r2]
   15760:	bx	lr
   15764:	ldr	r3, [r0, #12]
   15768:	cmp	r3, #0
   1576c:	beq	1578c <floor@plt+0x43c0>
   15770:	ldrb	r2, [r3]
   15774:	cmp	r2, #0
   15778:	beq	1578c <floor@plt+0x43c0>
   1577c:	add	r2, r3, #1
   15780:	str	r2, [r0, #12]
   15784:	ldrb	r0, [r3]
   15788:	bx	lr
   1578c:	mvn	r0, #0
   15790:	bx	lr
   15794:	ldr	r3, [r0, #12]
   15798:	cmp	r3, #0
   1579c:	beq	157b0 <floor@plt+0x43e4>
   157a0:	ldrb	r0, [r3]
   157a4:	cmp	r0, #0
   157a8:	mvneq	r0, #0
   157ac:	bx	lr
   157b0:	mvn	r0, #0
   157b4:	bx	lr
   157b8:	mov	r3, r0
   157bc:	mvn	r2, #0
   157c0:	ldr	r0, [r0, #8]
   157c4:	str	r2, [r3, #8]
   157c8:	bx	lr
   157cc:	ldr	r0, [r0, #8]
   157d0:	bx	lr
   157d4:	ldr	r0, [r0, #172]	; 0xac
   157d8:	cmp	r0, #0
   157dc:	beq	157ec <floor@plt+0x4420>
   157e0:	ldr	r3, [r0]
   157e4:	ldr	r3, [r3, #8]
   157e8:	bx	r3
   157ec:	mvn	r0, #0
   157f0:	bx	lr
   157f4:	push	{r4, lr}
   157f8:	mov	r4, r0
   157fc:	ldr	r0, [r0, #4]
   15800:	cmp	r0, #0
   15804:	bne	15828 <floor@plt+0x445c>
   15808:	b	15850 <floor@plt+0x4484>
   1580c:	ldr	r3, [r3]
   15810:	str	r2, [r4, #4]
   15814:	ldr	r3, [r3, #4]
   15818:	blx	r3
   1581c:	ldr	r0, [r4, #4]
   15820:	cmp	r0, #0
   15824:	beq	15850 <floor@plt+0x4484>
   15828:	ldr	r3, [r0]
   1582c:	ldr	r3, [r3, #8]
   15830:	blx	r3
   15834:	cmn	r0, #1
   15838:	popne	{r4, pc}
   1583c:	ldr	r3, [r4, #4]
   15840:	mov	r0, r3
   15844:	ldr	r2, [r3, #4]
   15848:	cmp	r2, #0
   1584c:	bne	1580c <floor@plt+0x4440>
   15850:	mvn	r0, #0
   15854:	pop	{r4, pc}
   15858:	mov	r3, r0
   1585c:	mov	r0, #1
   15860:	ldr	ip, [r3, #8]
   15864:	ldr	r3, [r3, #12]
   15868:	str	ip, [r1]
   1586c:	str	r3, [r2]
   15870:	bx	lr
   15874:	push	{r4, lr}
   15878:	mov	r4, r0
   1587c:	ldr	r0, [r0, #8]
   15880:	bl	110e4 <free@plt>
   15884:	mov	r0, r4
   15888:	pop	{r4, pc}
   1588c:	ldr	r3, [r0, #20]
   15890:	ldr	r2, [pc, #64]	; 158d8 <floor@plt+0x450c>
   15894:	cmp	r3, #0
   15898:	push	{r4, r5, r6, lr}
   1589c:	mov	r6, r0
   158a0:	str	r2, [r0]
   158a4:	ble	158c8 <floor@plt+0x44fc>
   158a8:	add	r5, r0, #20
   158ac:	mov	r4, #0
   158b0:	ldr	r0, [r5, #4]!
   158b4:	bl	110e4 <free@plt>
   158b8:	ldr	r3, [r6, #20]
   158bc:	add	r4, r4, #1
   158c0:	cmp	r3, r4
   158c4:	bgt	158b0 <floor@plt+0x44e4>
   158c8:	ldr	r0, [r6, #8]
   158cc:	bl	110e4 <free@plt>
   158d0:	mov	r0, r6
   158d4:	pop	{r4, r5, r6, pc}
   158d8:	andeq	lr, r2, r0, ror #15
   158dc:	push	{r4, lr}
   158e0:	mov	r4, r0
   158e4:	ldr	r0, [r0, #8]
   158e8:	bl	110e4 <free@plt>
   158ec:	ldr	r0, [r4, #12]
   158f0:	bl	110e4 <free@plt>
   158f4:	mov	r0, r4
   158f8:	pop	{r4, pc}
   158fc:	ldr	r3, [r0, #4]
   15900:	push	{r4, r5, r6, lr}
   15904:	cmp	r3, #0
   15908:	mov	r5, r0
   1590c:	beq	15930 <floor@plt+0x4564>
   15910:	mov	r4, #0
   15914:	ldr	r3, [r5]
   15918:	ldr	r0, [r3, r4, lsl #3]
   1591c:	bl	110e4 <free@plt>
   15920:	ldr	r3, [r5, #4]
   15924:	add	r4, r4, #1
   15928:	cmp	r3, r4
   1592c:	bhi	15914 <floor@plt+0x4548>
   15930:	ldr	r0, [r5]
   15934:	cmp	r0, #0
   15938:	beq	15940 <floor@plt+0x4574>
   1593c:	bl	1121c <_ZdaPv@plt>
   15940:	mov	r0, r5
   15944:	pop	{r4, r5, r6, pc}
   15948:	push	{r4, lr}
   1594c:	mov	r4, r0
   15950:	ldr	r0, [r0, #8]
   15954:	bl	110e4 <free@plt>
   15958:	mov	r0, r4
   1595c:	bl	286b0 <_ZdlPv@@Base>
   15960:	mov	r0, r4
   15964:	pop	{r4, pc}
   15968:	push	{r4, lr}
   1596c:	mov	r4, r0
   15970:	bl	1588c <floor@plt+0x44c0>
   15974:	mov	r0, r4
   15978:	bl	286b0 <_ZdlPv@@Base>
   1597c:	mov	r0, r4
   15980:	pop	{r4, pc}
   15984:	push	{r4, lr}
   15988:	mov	r4, r0
   1598c:	ldr	r0, [r0, #8]
   15990:	bl	110e4 <free@plt>
   15994:	ldr	r0, [r4, #12]
   15998:	bl	110e4 <free@plt>
   1599c:	mov	r0, r4
   159a0:	bl	286b0 <_ZdlPv@@Base>
   159a4:	mov	r0, r4
   159a8:	pop	{r4, pc}
   159ac:	push	{r4, lr}
   159b0:	mov	r4, r0
   159b4:	ldr	r3, [pc, #16]	; 159cc <floor@plt+0x4600>
   159b8:	ldr	r0, [r0, #16]
   159bc:	str	r3, [r4]
   159c0:	bl	112a0 <fclose@plt>
   159c4:	mov	r0, r4
   159c8:	pop	{r4, pc}
   159cc:	strdeq	lr, [r2], -ip
   159d0:	push	{r4, lr}
   159d4:	mov	r4, r0
   159d8:	ldr	r3, [pc, #36]	; 15a04 <floor@plt+0x4638>
   159dc:	ldr	r0, [r0, #16]
   159e0:	str	r3, [r4]
   159e4:	bl	112a0 <fclose@plt>
   159e8:	mov	r0, r4
   159ec:	bl	286b0 <_ZdlPv@@Base>
   159f0:	mov	r0, r4
   159f4:	pop	{r4, pc}
   159f8:	mov	r0, r4
   159fc:	bl	286b0 <_ZdlPv@@Base>
   15a00:	bl	111ec <__cxa_end_cleanup@plt>
   15a04:	strdeq	lr, [r2], -ip
   15a08:	push	{r4, lr}
   15a0c:	mov	r4, r0
   15a10:	ldr	r3, [pc, #36]	; 15a3c <floor@plt+0x4670>
   15a14:	ldr	r0, [r0, #8]
   15a18:	str	r3, [r4]
   15a1c:	bl	112a0 <fclose@plt>
   15a20:	add	r0, r4, #20
   15a24:	bl	289cc <_ZdlPv@@Base+0x31c>
   15a28:	mov	r0, r4
   15a2c:	pop	{r4, pc}
   15a30:	add	r0, r4, #20
   15a34:	bl	289cc <_ZdlPv@@Base+0x31c>
   15a38:	bl	111ec <__cxa_end_cleanup@plt>
   15a3c:	andeq	lr, r2, r8, lsl r8
   15a40:	push	{r4, lr}
   15a44:	mov	r4, r0
   15a48:	bl	15a08 <floor@plt+0x463c>
   15a4c:	mov	r0, r4
   15a50:	bl	286b0 <_ZdlPv@@Base>
   15a54:	mov	r0, r4
   15a58:	pop	{r4, pc}
   15a5c:	mov	r0, r4
   15a60:	bl	286b0 <_ZdlPv@@Base>
   15a64:	bl	111ec <__cxa_end_cleanup@plt>
   15a68:	push	{r4, r5, r6, r7, r8, lr}
   15a6c:	sub	sp, sp, #24
   15a70:	ldr	r5, [pc, #152]	; 15b10 <floor@plt+0x4744>
   15a74:	mov	r4, r0
   15a78:	ldr	r0, [r0, #16]
   15a7c:	ldr	r3, [r5]
   15a80:	str	r3, [sp, #20]
   15a84:	bl	11204 <getc@plt>
   15a88:	cmp	r0, #0
   15a8c:	blt	15af4 <floor@plt+0x4728>
   15a90:	ldr	r6, [pc, #124]	; 15b14 <floor@plt+0x4748>
   15a94:	ldrb	r3, [r6, r0]
   15a98:	cmp	r3, #0
   15a9c:	beq	15ae4 <floor@plt+0x4718>
   15aa0:	ldr	r8, [pc, #112]	; 15b18 <floor@plt+0x474c>
   15aa4:	ldr	r7, [pc, #112]	; 15b1c <floor@plt+0x4750>
   15aa8:	mov	r1, r0
   15aac:	mov	r0, sp
   15ab0:	bl	27084 <floor@plt+0x15cb8>
   15ab4:	mov	r3, r8
   15ab8:	ldr	r2, [pc, #88]	; 15b18 <floor@plt+0x474c>
   15abc:	mov	r1, sp
   15ac0:	mov	r0, r7
   15ac4:	bl	27444 <floor@plt+0x16078>
   15ac8:	ldr	r0, [r4, #16]
   15acc:	bl	11204 <getc@plt>
   15ad0:	cmp	r0, #0
   15ad4:	blt	15af4 <floor@plt+0x4728>
   15ad8:	ldrb	r3, [r6, r0]
   15adc:	cmp	r3, #0
   15ae0:	bne	15aa8 <floor@plt+0x46dc>
   15ae4:	cmp	r0, #10
   15ae8:	ldreq	r3, [r4, #12]
   15aec:	addeq	r3, r3, #1
   15af0:	streq	r3, [r4, #12]
   15af4:	ldr	r2, [sp, #20]
   15af8:	ldr	r3, [r5]
   15afc:	cmp	r2, r3
   15b00:	bne	15b0c <floor@plt+0x4740>
   15b04:	add	sp, sp, #24
   15b08:	pop	{r4, r5, r6, r7, r8, pc}
   15b0c:	bl	111e0 <__stack_chk_fail@plt>
   15b10:	andeq	r1, r4, r0, ror sp
   15b14:	andeq	r2, r4, ip, lsr r3
   15b18:			; <UNDEFINED> instruction: 0x000454b8
   15b1c:	andeq	lr, r2, r4, lsr #20
   15b20:	push	{r4, r5, r6, r7, r8, r9, lr}
   15b24:	sub	sp, sp, #28
   15b28:	ldr	r5, [pc, #164]	; 15bd4 <floor@plt+0x4808>
   15b2c:	mov	r6, r0
   15b30:	ldr	r0, [r0, #16]
   15b34:	ldr	r3, [r5]
   15b38:	str	r3, [sp, #20]
   15b3c:	bl	11204 <getc@plt>
   15b40:	subs	r4, r0, #0
   15b44:	blt	15bac <floor@plt+0x47e0>
   15b48:	ldr	r7, [pc, #136]	; 15bd8 <floor@plt+0x480c>
   15b4c:	ldrb	r3, [r7, r4]
   15b50:	cmp	r3, #0
   15b54:	beq	15b9c <floor@plt+0x47d0>
   15b58:	ldr	r9, [pc, #124]	; 15bdc <floor@plt+0x4810>
   15b5c:	ldr	r8, [pc, #124]	; 15be0 <floor@plt+0x4814>
   15b60:	mov	r1, r4
   15b64:	mov	r0, sp
   15b68:	bl	27084 <floor@plt+0x15cb8>
   15b6c:	mov	r3, r9
   15b70:	ldr	r2, [pc, #100]	; 15bdc <floor@plt+0x4810>
   15b74:	mov	r1, sp
   15b78:	mov	r0, r8
   15b7c:	bl	27444 <floor@plt+0x16078>
   15b80:	ldr	r0, [r6, #16]
   15b84:	bl	11204 <getc@plt>
   15b88:	subs	r4, r0, #0
   15b8c:	blt	15bac <floor@plt+0x47e0>
   15b90:	ldrb	r3, [r7, r4]
   15b94:	cmp	r3, #0
   15b98:	bne	15b60 <floor@plt+0x4794>
   15b9c:	ldr	r1, [r6, #16]
   15ba0:	mov	r0, r4
   15ba4:	bl	111d4 <ungetc@plt>
   15ba8:	b	15bb4 <floor@plt+0x47e8>
   15bac:	cmn	r4, #1
   15bb0:	bne	15b9c <floor@plt+0x47d0>
   15bb4:	ldr	r2, [sp, #20]
   15bb8:	ldr	r3, [r5]
   15bbc:	mov	r0, r4
   15bc0:	cmp	r2, r3
   15bc4:	bne	15bd0 <floor@plt+0x4804>
   15bc8:	add	sp, sp, #28
   15bcc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15bd0:	bl	111e0 <__stack_chk_fail@plt>
   15bd4:	andeq	r1, r4, r0, ror sp
   15bd8:	andeq	r2, r4, ip, lsr r3
   15bdc:			; <UNDEFINED> instruction: 0x000454b8
   15be0:	andeq	lr, r2, r4, lsr #20
   15be4:	ldr	r3, [r0, #16]
   15be8:	cmp	r3, #0
   15bec:	beq	15c10 <floor@plt+0x4844>
   15bf0:	ldrb	r2, [r3]
   15bf4:	cmp	r2, #0
   15bf8:	beq	15c0c <floor@plt+0x4840>
   15bfc:	add	r2, r3, #1
   15c00:	str	r2, [r0, #16]
   15c04:	ldrb	r0, [r3]
   15c08:	bx	lr
   15c0c:	str	r2, [r0, #16]
   15c10:	ldr	r3, [r0, #12]
   15c14:	cmp	r3, #0
   15c18:	beq	15c8c <floor@plt+0x48c0>
   15c1c:	mov	ip, r3
   15c20:	ldrb	r2, [r3], #1
   15c24:	eor	r1, r2, #128	; 0x80
   15c28:	cmp	r1, #31
   15c2c:	bhi	15c74 <floor@plt+0x48a8>
   15c30:	str	r3, [r0, #12]
   15c34:	ldrb	r2, [r3, #-1]
   15c38:	ldr	r1, [r0, #20]
   15c3c:	sub	ip, r2, #122	; 0x7a
   15c40:	sub	r2, r2, #128	; 0x80
   15c44:	cmp	r2, r1
   15c48:	bge	15c1c <floor@plt+0x4850>
   15c4c:	ldr	r2, [r0, ip, lsl #2]
   15c50:	cmp	r2, #0
   15c54:	beq	15c1c <floor@plt+0x4850>
   15c58:	ldrb	r1, [r2]
   15c5c:	cmp	r1, #0
   15c60:	beq	15c1c <floor@plt+0x4850>
   15c64:	add	r3, r2, #1
   15c68:	str	r3, [r0, #16]
   15c6c:	ldrb	r0, [r2]
   15c70:	bx	lr
   15c74:	cmp	r2, #0
   15c78:	beq	15c8c <floor@plt+0x48c0>
   15c7c:	add	r3, ip, #1
   15c80:	str	r3, [r0, #12]
   15c84:	ldrb	r0, [ip]
   15c88:	bx	lr
   15c8c:	mvn	r0, #0
   15c90:	bx	lr
   15c94:	ldr	r3, [r0, #16]
   15c98:	cmp	r3, #0
   15c9c:	beq	15cb0 <floor@plt+0x48e4>
   15ca0:	ldrb	r3, [r3]
   15ca4:	cmp	r3, #0
   15ca8:	streq	r3, [r0, #16]
   15cac:	bne	15d14 <floor@plt+0x4948>
   15cb0:	ldr	r2, [r0, #12]
   15cb4:	cmp	r2, #0
   15cb8:	beq	15d1c <floor@plt+0x4950>
   15cbc:	ldrb	r3, [r2], #1
   15cc0:	eor	r1, r3, #128	; 0x80
   15cc4:	cmp	r1, #31
   15cc8:	bhi	15d0c <floor@plt+0x4940>
   15ccc:	str	r2, [r0, #12]
   15cd0:	ldrb	r3, [r2, #-1]
   15cd4:	ldr	r1, [r0, #20]
   15cd8:	sub	ip, r3, #122	; 0x7a
   15cdc:	sub	r3, r3, #128	; 0x80
   15ce0:	cmp	r3, r1
   15ce4:	bge	15cbc <floor@plt+0x48f0>
   15ce8:	ldr	r3, [r0, ip, lsl #2]
   15cec:	cmp	r3, #0
   15cf0:	beq	15cbc <floor@plt+0x48f0>
   15cf4:	ldrb	r1, [r3]
   15cf8:	cmp	r1, #0
   15cfc:	beq	15cbc <floor@plt+0x48f0>
   15d00:	str	r3, [r0, #16]
   15d04:	ldrb	r0, [r3]
   15d08:	bx	lr
   15d0c:	cmp	r3, #0
   15d10:	beq	15d1c <floor@plt+0x4950>
   15d14:	mov	r0, r3
   15d18:	bx	lr
   15d1c:	mvn	r0, #0
   15d20:	bx	lr
   15d24:	push	{r4, r5, lr}
   15d28:	sub	sp, sp, #20
   15d2c:	ldr	r5, [pc, #236]	; 15e20 <floor@plt+0x4a54>
   15d30:	ldr	r3, [r0, #48]	; 0x30
   15d34:	ldr	r2, [r5]
   15d38:	cmp	r3, #0
   15d3c:	str	r2, [sp, #12]
   15d40:	beq	15e14 <floor@plt+0x4a48>
   15d44:	mov	r4, r0
   15d48:	ldrb	r0, [r3]
   15d4c:	cmp	r0, #0
   15d50:	bne	15db0 <floor@plt+0x49e4>
   15d54:	ldr	r3, [r4, #52]	; 0x34
   15d58:	cmp	r3, #0
   15d5c:	moveq	r0, #10
   15d60:	beq	15db0 <floor@plt+0x49e4>
   15d64:	mov	r1, sp
   15d68:	ldr	r0, [r4, #8]
   15d6c:	bl	11ed0 <floor@plt+0xb04>
   15d70:	cmp	r0, #0
   15d74:	beq	15e14 <floor@plt+0x4a48>
   15d78:	ldr	r3, [r4, #32]
   15d7c:	vldr	d7, [r4, #24]
   15d80:	cmp	r3, #0
   15d84:	beq	15dc8 <floor@plt+0x49fc>
   15d88:	vldr	d6, [r4, #40]	; 0x28
   15d8c:	vldr	d5, [sp]
   15d90:	vmul.f64	d6, d6, d5
   15d94:	vcmpe.f64	d6, d7
   15d98:	vmrs	APSR_nzcv, fpscr
   15d9c:	bgt	15e14 <floor@plt+0x4a48>
   15da0:	ldr	r3, [r4, #12]
   15da4:	ldrb	r0, [r3]
   15da8:	cmp	r0, #0
   15dac:	mvneq	r0, #0
   15db0:	ldr	r2, [sp, #12]
   15db4:	ldr	r3, [r5]
   15db8:	cmp	r2, r3
   15dbc:	bne	15e1c <floor@plt+0x4a50>
   15dc0:	add	sp, sp, #20
   15dc4:	pop	{r4, r5, pc}
   15dc8:	vldr	d6, [r4, #16]
   15dcc:	vcmpe.f64	d6, d7
   15dd0:	vmrs	APSR_nzcv, fpscr
   15dd4:	bhi	15df0 <floor@plt+0x4a24>
   15dd8:	vldr	d5, [r4, #40]	; 0x28
   15ddc:	vldr	d4, [sp]
   15de0:	vadd.f64	d5, d5, d4
   15de4:	vcmpe.f64	d5, d7
   15de8:	vmrs	APSR_nzcv, fpscr
   15dec:	bgt	15e14 <floor@plt+0x4a48>
   15df0:	vcmpe.f64	d6, d7
   15df4:	vmrs	APSR_nzcv, fpscr
   15df8:	blt	15da0 <floor@plt+0x49d4>
   15dfc:	vldr	d6, [r4, #40]	; 0x28
   15e00:	vldr	d5, [sp]
   15e04:	vadd.f64	d6, d6, d5
   15e08:	vcmpe.f64	d6, d7
   15e0c:	vmrs	APSR_nzcv, fpscr
   15e10:	bpl	15da0 <floor@plt+0x49d4>
   15e14:	mvn	r0, #0
   15e18:	b	15db0 <floor@plt+0x49e4>
   15e1c:	bl	111e0 <__stack_chk_fail@plt>
   15e20:	andeq	r1, r4, r0, ror sp
   15e24:	push	{r4, r5, r6, r7, r8, lr}
   15e28:	mov	r4, r0
   15e2c:	add	r6, r0, #160	; 0xa0
   15e30:	mov	r0, r6
   15e34:	bl	28f98 <_ZdlPv@@Base+0x8e8>
   15e38:	ldr	r3, [r4]
   15e3c:	mov	r7, #0
   15e40:	str	r7, [r4, #156]	; 0x9c
   15e44:	ldr	r3, [r3, #20]
   15e48:	mov	r0, r4
   15e4c:	blx	r3
   15e50:	mov	r5, r0
   15e54:	cmp	r5, #32
   15e58:	beq	15f88 <floor@plt+0x4bbc>
   15e5c:	cmn	r5, #1
   15e60:	cmpne	r5, #10
   15e64:	ldr	r2, [r4, #156]	; 0x9c
   15e68:	beq	15f04 <floor@plt+0x4b38>
   15e6c:	cmp	r2, #32
   15e70:	beq	15ee0 <floor@plt+0x4b14>
   15e74:	add	r1, r4, r2, lsl #2
   15e78:	ldr	r3, [r4, #164]	; 0xa4
   15e7c:	add	r2, r2, #1
   15e80:	str	r2, [r4, #156]	; 0x9c
   15e84:	str	r3, [r1, #28]
   15e88:	b	15ec0 <floor@plt+0x4af4>
   15e8c:	ldr	r2, [r4, #160]	; 0xa0
   15e90:	add	r1, r3, #1
   15e94:	str	r1, [r4, #164]	; 0xa4
   15e98:	strb	r5, [r2, r3]
   15e9c:	ldr	r3, [r4]
   15ea0:	mov	r0, r4
   15ea4:	ldr	r3, [r3, #20]
   15ea8:	blx	r3
   15eac:	ldr	r3, [r4, #164]	; 0xa4
   15eb0:	cmp	r0, #10
   15eb4:	cmpne	r0, #32
   15eb8:	mov	r5, r0
   15ebc:	beq	15f64 <floor@plt+0x4b98>
   15ec0:	ldr	r2, [r4, #168]	; 0xa8
   15ec4:	uxtb	r5, r5
   15ec8:	cmp	r2, r3
   15ecc:	bgt	15e8c <floor@plt+0x4ac0>
   15ed0:	mov	r0, r6
   15ed4:	bl	28b34 <_ZdlPv@@Base+0x484>
   15ed8:	ldr	r3, [r4, #164]	; 0xa4
   15edc:	b	15e8c <floor@plt+0x4ac0>
   15ee0:	ldr	r3, [r4]
   15ee4:	mov	r0, r4
   15ee8:	ldr	r3, [r3, #20]
   15eec:	blx	r3
   15ef0:	cmn	r0, #1
   15ef4:	cmpne	r0, #10
   15ef8:	mov	r5, r0
   15efc:	bne	15ee0 <floor@plt+0x4b14>
   15f00:	ldr	r2, [r4, #156]	; 0x9c
   15f04:	ldr	r1, [r4, #16]
   15f08:	cmp	r1, #0
   15f0c:	beq	15f48 <floor@plt+0x4b7c>
   15f10:	cmp	r2, #0
   15f14:	ble	15f48 <floor@plt+0x4b7c>
   15f18:	ldr	r6, [r4, #28]
   15f1c:	cmp	r6, #0
   15f20:	blt	15fb0 <floor@plt+0x4be4>
   15f24:	ldr	r3, [r4, #164]	; 0xa4
   15f28:	cmp	r6, r3
   15f2c:	bge	15fb0 <floor@plt+0x4be4>
   15f30:	ldr	r0, [r4, #160]	; 0xa0
   15f34:	add	r0, r0, r6
   15f38:	bl	112d0 <strcmp@plt>
   15f3c:	cmp	r0, #0
   15f40:	beq	15fc4 <floor@plt+0x4bf8>
   15f44:	ldr	r2, [r4, #156]	; 0x9c
   15f48:	cmp	r2, #0
   15f4c:	movle	r2, #0
   15f50:	movgt	r2, #1
   15f54:	cmp	r5, #10
   15f58:	movne	r0, r2
   15f5c:	orreq	r0, r2, #1
   15f60:	pop	{r4, r5, r6, r7, r8, pc}
   15f64:	ldr	r2, [r4, #168]	; 0xa8
   15f68:	cmp	r3, r2
   15f6c:	bge	15fa0 <floor@plt+0x4bd4>
   15f70:	ldr	r2, [r4, #160]	; 0xa0
   15f74:	add	r1, r3, #1
   15f78:	cmp	r5, #32
   15f7c:	str	r1, [r4, #164]	; 0xa4
   15f80:	strb	r7, [r2, r3]
   15f84:	bne	15e5c <floor@plt+0x4a90>
   15f88:	ldr	r3, [r4]
   15f8c:	mov	r0, r4
   15f90:	ldr	r3, [r3, #20]
   15f94:	blx	r3
   15f98:	mov	r5, r0
   15f9c:	b	15e54 <floor@plt+0x4a88>
   15fa0:	mov	r0, r6
   15fa4:	bl	28b34 <_ZdlPv@@Base+0x484>
   15fa8:	ldr	r3, [r4, #164]	; 0xa4
   15fac:	b	15f70 <floor@plt+0x4ba4>
   15fb0:	ldr	r1, [pc, #24]	; 15fd0 <floor@plt+0x4c04>
   15fb4:	mov	r0, #98	; 0x62
   15fb8:	bl	26c88 <floor@plt+0x158bc>
   15fbc:	ldr	r1, [r4, #16]
   15fc0:	b	15f30 <floor@plt+0x4b64>
   15fc4:	mov	r3, #1
   15fc8:	str	r3, [r4, #8]
   15fcc:	pop	{r4, r5, r6, r7, r8, pc}
   15fd0:	andeq	lr, r2, r4, asr #20
   15fd4:	ldr	r3, [r0, #24]
   15fd8:	cmp	r3, #0
   15fdc:	beq	16000 <floor@plt+0x4c34>
   15fe0:	ldrb	r2, [r3]
   15fe4:	cmp	r2, #0
   15fe8:	beq	15ffc <floor@plt+0x4c30>
   15fec:	add	r2, r3, #1
   15ff0:	str	r2, [r0, #24]
   15ff4:	ldrb	r0, [r3]
   15ff8:	bx	lr
   15ffc:	str	r2, [r0, #24]
   16000:	push	{r4, r5, r6, r7, r8, lr}
   16004:	mov	r4, r0
   16008:	ldr	r3, [r0, #20]
   1600c:	ldr	r6, [pc, #240]	; 16104 <floor@plt+0x4d38>
   16010:	cmp	r3, #0
   16014:	beq	160ac <floor@plt+0x4ce0>
   16018:	ldrb	r2, [r3]
   1601c:	cmp	r2, #0
   16020:	bne	16048 <floor@plt+0x4c7c>
   16024:	b	160f8 <floor@plt+0x4d2c>
   16028:	add	r3, r3, #1
   1602c:	str	r3, [r4, #20]
   16030:	ldrb	r2, [r3, #-1]
   16034:	ldr	r1, [r4, #156]	; 0x9c
   16038:	sub	r5, r2, #128	; 0x80
   1603c:	cmp	r5, r1
   16040:	blt	1606c <floor@plt+0x4ca0>
   16044:	ldrb	r2, [r3]
   16048:	eor	r1, r2, #128	; 0x80
   1604c:	cmp	r1, #31
   16050:	bls	16028 <floor@plt+0x4c5c>
   16054:	cmp	r2, #0
   16058:	beq	16010 <floor@plt+0x4c44>
   1605c:	add	r2, r3, #1
   16060:	str	r2, [r4, #20]
   16064:	ldrb	r0, [r3]
   16068:	pop	{r4, r5, r6, r7, r8, pc}
   1606c:	add	r2, r4, r2, lsl #2
   16070:	mov	r1, r6
   16074:	ldr	r7, [r2, #-484]	; 0xfffffe1c
   16078:	mov	r0, #98	; 0x62
   1607c:	cmp	r7, #0
   16080:	blt	16090 <floor@plt+0x4cc4>
   16084:	ldr	r3, [r4, #164]	; 0xa4
   16088:	cmp	r7, r3
   1608c:	blt	16094 <floor@plt+0x4cc8>
   16090:	bl	26c88 <floor@plt+0x158bc>
   16094:	ldr	r3, [r4, #160]	; 0xa0
   16098:	ldrb	r2, [r3, r7]
   1609c:	cmp	r2, #0
   160a0:	bne	160dc <floor@plt+0x4d10>
   160a4:	ldr	r3, [r4, #20]
   160a8:	b	16044 <floor@plt+0x4c78>
   160ac:	ldr	r3, [r4, #8]
   160b0:	cmp	r3, #0
   160b4:	beq	160c0 <floor@plt+0x4cf4>
   160b8:	mvn	r0, #0
   160bc:	pop	{r4, r5, r6, r7, r8, pc}
   160c0:	mov	r0, r4
   160c4:	bl	15e24 <floor@plt+0x4a58>
   160c8:	cmp	r0, #0
   160cc:	beq	160b8 <floor@plt+0x4cec>
   160d0:	ldr	r3, [r4, #12]
   160d4:	str	r3, [r4, #20]
   160d8:	b	16018 <floor@plt+0x4c4c>
   160dc:	add	r5, r4, r5, lsl #2
   160e0:	ldr	r1, [r5, #28]
   160e4:	add	r2, r3, r1
   160e8:	add	r2, r2, #1
   160ec:	str	r2, [r4, #24]
   160f0:	ldrb	r0, [r3, r1]
   160f4:	pop	{r4, r5, r6, r7, r8, pc}
   160f8:	str	r2, [r4, #20]
   160fc:	mov	r0, #10
   16100:	pop	{r4, r5, r6, r7, r8, pc}
   16104:	andeq	lr, r2, r4, asr #20
   16108:	ldr	r3, [r0, #24]
   1610c:	cmp	r3, #0
   16110:	beq	16124 <floor@plt+0x4d58>
   16114:	ldrb	r2, [r3]
   16118:	cmp	r2, #0
   1611c:	streq	r2, [r0, #24]
   16120:	bne	161dc <floor@plt+0x4e10>
   16124:	push	{r4, r5, r6, r7, r8, lr}
   16128:	mov	r4, r0
   1612c:	ldr	r3, [r0, #20]
   16130:	ldr	r6, [pc, #232]	; 16220 <floor@plt+0x4e54>
   16134:	cmp	r3, #0
   16138:	beq	161c8 <floor@plt+0x4dfc>
   1613c:	ldrb	r2, [r3]
   16140:	cmp	r2, #0
   16144:	bne	1616c <floor@plt+0x4da0>
   16148:	b	16218 <floor@plt+0x4e4c>
   1614c:	add	r3, r3, #1
   16150:	str	r3, [r4, #20]
   16154:	ldrb	r2, [r3, #-1]
   16158:	ldr	r1, [r4, #156]	; 0x9c
   1615c:	sub	r5, r2, #128	; 0x80
   16160:	cmp	r5, r1
   16164:	blt	16188 <floor@plt+0x4dbc>
   16168:	ldrb	r2, [r3]
   1616c:	eor	r1, r2, #128	; 0x80
   16170:	cmp	r1, #31
   16174:	bls	1614c <floor@plt+0x4d80>
   16178:	cmp	r2, #0
   1617c:	beq	16134 <floor@plt+0x4d68>
   16180:	mov	r0, r2
   16184:	pop	{r4, r5, r6, r7, r8, pc}
   16188:	add	r2, r4, r2, lsl #2
   1618c:	mov	r1, r6
   16190:	ldr	r7, [r2, #-484]	; 0xfffffe1c
   16194:	mov	r0, #98	; 0x62
   16198:	cmp	r7, #0
   1619c:	blt	161ac <floor@plt+0x4de0>
   161a0:	ldr	r3, [r4, #164]	; 0xa4
   161a4:	cmp	r7, r3
   161a8:	blt	161b0 <floor@plt+0x4de4>
   161ac:	bl	26c88 <floor@plt+0x158bc>
   161b0:	ldr	r3, [r4, #160]	; 0xa0
   161b4:	ldrb	r2, [r3, r7]
   161b8:	cmp	r2, #0
   161bc:	bne	16200 <floor@plt+0x4e34>
   161c0:	ldr	r3, [r4, #20]
   161c4:	b	16168 <floor@plt+0x4d9c>
   161c8:	ldr	r3, [r4, #8]
   161cc:	cmp	r3, #0
   161d0:	beq	161e4 <floor@plt+0x4e18>
   161d4:	mvn	r0, #0
   161d8:	pop	{r4, r5, r6, r7, r8, pc}
   161dc:	mov	r0, r2
   161e0:	bx	lr
   161e4:	mov	r0, r4
   161e8:	bl	15e24 <floor@plt+0x4a58>
   161ec:	cmp	r0, #0
   161f0:	beq	161d4 <floor@plt+0x4e08>
   161f4:	ldr	r3, [r4, #12]
   161f8:	str	r3, [r4, #20]
   161fc:	b	1613c <floor@plt+0x4d70>
   16200:	add	r5, r4, r5, lsl #2
   16204:	ldr	r2, [r5, #28]
   16208:	add	r1, r3, r2
   1620c:	str	r1, [r4, #24]
   16210:	ldrb	r0, [r3, r2]
   16214:	pop	{r4, r5, r6, r7, r8, pc}
   16218:	mov	r0, #10
   1621c:	pop	{r4, r5, r6, r7, r8, pc}
   16220:	andeq	lr, r2, r4, asr #20
   16224:	mov	r2, #0
   16228:	str	r2, [r0]
   1622c:	str	r2, [r0, #4]
   16230:	bx	lr
   16234:	mov	r3, #17
   16238:	push	{r4, lr}
   1623c:	mov	r4, r0
   16240:	str	r3, [r0, #4]
   16244:	mov	r0, #136	; 0x88
   16248:	bl	1115c <_Znaj@plt>
   1624c:	mov	r2, #0
   16250:	mov	r3, r0
   16254:	add	r1, r0, #136	; 0x88
   16258:	str	r2, [r3]
   1625c:	str	r2, [r3, #4]
   16260:	add	r3, r3, #8
   16264:	cmp	r1, r3
   16268:	bne	16258 <floor@plt+0x4e8c>
   1626c:	str	r0, [r4]
   16270:	str	r2, [r4, #8]
   16274:	mov	r0, r4
   16278:	pop	{r4, pc}
   1627c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16280:	subs	r7, r1, #0
   16284:	sub	sp, sp, #12
   16288:	mov	r9, r0
   1628c:	mov	sl, r2
   16290:	beq	16348 <floor@plt+0x4f7c>
   16294:	mov	r0, r7
   16298:	bl	286c8 <_ZdlPv@@Base+0x18>
   1629c:	ldr	r8, [r9, #4]
   162a0:	mov	r1, r8
   162a4:	str	r0, [sp, #4]
   162a8:	bl	110fc <__aeabi_uidivmod@plt>
   162ac:	ldr	r5, [r9]
   162b0:	mov	r4, r1
   162b4:	b	162d0 <floor@plt+0x4f04>
   162b8:	bl	112d0 <strcmp@plt>
   162bc:	cmp	r0, #0
   162c0:	beq	16338 <floor@plt+0x4f6c>
   162c4:	cmp	r4, #0
   162c8:	subeq	r4, r8, #1
   162cc:	subne	r4, r4, #1
   162d0:	ldr	fp, [r5, r4, lsl #3]
   162d4:	mov	r1, r7
   162d8:	subs	r0, fp, #0
   162dc:	add	r6, r5, r4, lsl #3
   162e0:	bne	162b8 <floor@plt+0x4eec>
   162e4:	cmp	sl, #0
   162e8:	beq	1632c <floor@plt+0x4f60>
   162ec:	ldr	r4, [r9, #8]
   162f0:	cmp	r8, r4, lsl #2
   162f4:	bls	16358 <floor@plt+0x4f8c>
   162f8:	mov	r0, r7
   162fc:	bl	11288 <strlen@plt>
   16300:	add	r4, r4, #1
   16304:	add	r5, r0, #1
   16308:	mov	r0, r5
   1630c:	bl	1127c <malloc@plt>
   16310:	mov	r2, r5
   16314:	mov	r1, r7
   16318:	mov	fp, r0
   1631c:	bl	11270 <memcpy@plt>
   16320:	str	fp, [r6]
   16324:	str	sl, [r6, #4]
   16328:	str	r4, [r9, #8]
   1632c:	mov	r0, fp
   16330:	add	sp, sp, #12
   16334:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16338:	mov	r0, fp
   1633c:	str	sl, [r6, #4]
   16340:	add	sp, sp, #12
   16344:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16348:	ldr	r1, [pc, #328]	; 16498 <floor@plt+0x50cc>
   1634c:	mov	r0, #26
   16350:	bl	26c88 <floor@plt+0x158bc>
   16354:	b	16294 <floor@plt+0x4ec8>
   16358:	mov	r0, r8
   1635c:	bl	28710 <_ZdlPv@@Base+0x60>
   16360:	cmn	r0, #-268435455	; 0xf0000001
   16364:	mov	r6, r0
   16368:	str	r0, [r9, #4]
   1636c:	lslls	r0, r0, #3
   16370:	mvnhi	r0, #0
   16374:	bl	1115c <_Znaj@plt>
   16378:	subs	r2, r6, #1
   1637c:	movpl	r1, #0
   16380:	mov	r4, r0
   16384:	movpl	r3, r0
   16388:	bmi	163a4 <floor@plt+0x4fd8>
   1638c:	sub	r2, r2, #1
   16390:	cmn	r2, #1
   16394:	str	r1, [r3]
   16398:	str	r1, [r3, #4]
   1639c:	add	r3, r3, #8
   163a0:	bne	1638c <floor@plt+0x4fc0>
   163a4:	cmp	r8, #0
   163a8:	str	r4, [r9]
   163ac:	addne	r4, r5, r8, lsl #3
   163b0:	addne	r4, r4, #4
   163b4:	addne	r6, r5, #4
   163b8:	bne	163d0 <floor@plt+0x5004>
   163bc:	b	1643c <floor@plt+0x5070>
   163c0:	bl	110e4 <free@plt>
   163c4:	add	r6, r6, #8
   163c8:	cmp	r4, r6
   163cc:	beq	16438 <floor@plt+0x506c>
   163d0:	ldr	r0, [r6, #-4]
   163d4:	cmp	r0, #0
   163d8:	beq	163c4 <floor@plt+0x4ff8>
   163dc:	ldr	r3, [r6]
   163e0:	cmp	r3, #0
   163e4:	beq	163c0 <floor@plt+0x4ff4>
   163e8:	bl	286c8 <_ZdlPv@@Base+0x18>
   163ec:	ldr	r8, [r9, #4]
   163f0:	mov	r1, r8
   163f4:	bl	110fc <__aeabi_uidivmod@plt>
   163f8:	ldr	r3, [r9]
   163fc:	b	1640c <floor@plt+0x5040>
   16400:	cmp	r1, #0
   16404:	subeq	r1, r8, #1
   16408:	subne	r1, r1, #1
   1640c:	ldr	r2, [r3, r1, lsl #3]
   16410:	add	r0, r3, r1, lsl #3
   16414:	cmp	r2, #0
   16418:	bne	16400 <floor@plt+0x5034>
   1641c:	ldr	r3, [r6, #-4]
   16420:	add	r6, r6, #8
   16424:	str	r3, [r0]
   16428:	ldr	r3, [r6, #-8]
   1642c:	cmp	r4, r6
   16430:	str	r3, [r0, #4]
   16434:	bne	163d0 <floor@plt+0x5004>
   16438:	ldr	r4, [r9]
   1643c:	ldr	fp, [r9, #4]
   16440:	ldr	r0, [sp, #4]
   16444:	mov	r1, fp
   16448:	bl	110fc <__aeabi_uidivmod@plt>
   1644c:	b	1645c <floor@plt+0x5090>
   16450:	cmp	r1, #0
   16454:	subeq	r1, fp, #1
   16458:	subne	r1, r1, #1
   1645c:	ldr	r2, [r4, r1, lsl #3]
   16460:	lsl	r8, r1, #3
   16464:	cmp	r2, #0
   16468:	add	r6, r4, r8
   1646c:	bne	16450 <floor@plt+0x5084>
   16470:	cmp	r5, #0
   16474:	beq	16490 <floor@plt+0x50c4>
   16478:	mov	r0, r5
   1647c:	bl	1121c <_ZdaPv@plt>
   16480:	ldr	r6, [r9]
   16484:	ldr	r4, [r9, #8]
   16488:	add	r6, r6, r8
   1648c:	b	162f8 <floor@plt+0x4f2c>
   16490:	ldr	r4, [r9, #8]
   16494:	b	162f8 <floor@plt+0x4f2c>
   16498:	andeq	lr, r2, r4, ror #20
   1649c:	push	{r4, r5, r6, r7, r8, lr}
   164a0:	subs	r6, r1, #0
   164a4:	mov	r5, r0
   164a8:	beq	1650c <floor@plt+0x5140>
   164ac:	mov	r0, r6
   164b0:	bl	286c8 <_ZdlPv@@Base+0x18>
   164b4:	ldr	r8, [r5, #4]
   164b8:	mov	r1, r8
   164bc:	bl	110fc <__aeabi_uidivmod@plt>
   164c0:	ldr	r5, [r5]
   164c4:	mov	r4, r1
   164c8:	b	164e4 <floor@plt+0x5118>
   164cc:	bl	112d0 <strcmp@plt>
   164d0:	cmp	r0, #0
   164d4:	beq	16500 <floor@plt+0x5134>
   164d8:	cmp	r4, #0
   164dc:	subeq	r4, r8, #1
   164e0:	subne	r4, r4, #1
   164e4:	ldr	r3, [r5, r4, lsl #3]
   164e8:	mov	r1, r6
   164ec:	subs	r0, r3, #0
   164f0:	add	r7, r5, r4, lsl #3
   164f4:	bne	164cc <floor@plt+0x5100>
   164f8:	mov	r0, r3
   164fc:	pop	{r4, r5, r6, r7, r8, pc}
   16500:	ldr	r3, [r7, #4]
   16504:	mov	r0, r3
   16508:	pop	{r4, r5, r6, r7, r8, pc}
   1650c:	ldr	r1, [pc, #8]	; 1651c <floor@plt+0x5150>
   16510:	mov	r0, #26
   16514:	bl	26c88 <floor@plt+0x158bc>
   16518:	b	164ac <floor@plt+0x50e0>
   1651c:	andeq	lr, r2, r4, ror #20
   16520:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16524:	mov	sl, r1
   16528:	ldr	r7, [r1]
   1652c:	mov	r5, r0
   16530:	cmp	r7, #0
   16534:	beq	1659c <floor@plt+0x51d0>
   16538:	mov	r0, r7
   1653c:	bl	286c8 <_ZdlPv@@Base+0x18>
   16540:	ldr	r9, [r5, #4]
   16544:	mov	r1, r9
   16548:	bl	110fc <__aeabi_uidivmod@plt>
   1654c:	ldr	r6, [r5]
   16550:	mov	r4, r1
   16554:	b	16570 <floor@plt+0x51a4>
   16558:	bl	112d0 <strcmp@plt>
   1655c:	cmp	r0, #0
   16560:	beq	1658c <floor@plt+0x51c0>
   16564:	cmp	r4, #0
   16568:	subeq	r4, r9, #1
   1656c:	subne	r4, r4, #1
   16570:	ldr	r5, [r6, r4, lsl #3]
   16574:	mov	r1, r7
   16578:	subs	r0, r5, #0
   1657c:	add	r8, r6, r4, lsl #3
   16580:	bne	16558 <floor@plt+0x518c>
   16584:	mov	r0, r5
   16588:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1658c:	str	r5, [sl]
   16590:	ldr	r5, [r8, #4]
   16594:	mov	r0, r5
   16598:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1659c:	ldr	r1, [pc, #8]	; 165ac <floor@plt+0x51e0>
   165a0:	mov	r0, #26
   165a4:	bl	26c88 <floor@plt+0x158bc>
   165a8:	b	16538 <floor@plt+0x516c>
   165ac:	andeq	lr, r2, r4, ror #20
   165b0:	mov	r2, #0
   165b4:	stm	r0, {r1, r2}
   165b8:	bx	lr
   165bc:	ldr	ip, [r0]
   165c0:	push	{r4, r5, r6, r7, lr}
   165c4:	ldrd	r4, [ip]
   165c8:	ldr	r3, [r0, #4]
   165cc:	cmp	r3, r5
   165d0:	bcs	16640 <floor@plt+0x5274>
   165d4:	ldr	lr, [r4, r3, lsl #3]
   165d8:	add	r6, r4, r3, lsl #3
   165dc:	cmp	lr, #0
   165e0:	addne	ip, r3, #1
   165e4:	bne	16624 <floor@plt+0x5258>
   165e8:	add	r3, r3, #1
   165ec:	sub	r7, r4, #8
   165f0:	b	16608 <floor@plt+0x523c>
   165f4:	ldr	lr, [r7, ip, lsl #3]
   165f8:	add	r6, r4, r3, lsl #3
   165fc:	cmp	lr, #0
   16600:	mov	r3, ip
   16604:	bne	16624 <floor@plt+0x5258>
   16608:	cmp	r5, r3
   1660c:	add	ip, r3, #1
   16610:	bne	165f4 <floor@plt+0x5228>
   16614:	mov	r3, #0
   16618:	str	r5, [r0, #4]
   1661c:	mov	r0, r3
   16620:	pop	{r4, r5, r6, r7, pc}
   16624:	str	lr, [r1]
   16628:	ldr	r1, [r6, #4]
   1662c:	mov	r3, #1
   16630:	str	r1, [r2]
   16634:	str	ip, [r0, #4]
   16638:	mov	r0, r3
   1663c:	pop	{r4, r5, r6, r7, pc}
   16640:	mov	r3, #0
   16644:	b	1661c <floor@plt+0x5250>
   16648:	ldr	r1, [pc, #8]	; 16658 <floor@plt+0x528c>
   1664c:	mov	r2, #0
   16650:	stm	r0, {r1, r2}
   16654:	bx	lr
   16658:	andeq	lr, r2, r4, lsr r8
   1665c:	bx	lr
   16660:	push	{r4, lr}
   16664:	mov	r4, r0
   16668:	bl	286b0 <_ZdlPv@@Base>
   1666c:	mov	r0, r4
   16670:	pop	{r4, pc}
   16674:	push	{r4, lr}
   16678:	mov	r4, r0
   1667c:	ldr	r0, [pc, #40]	; 166ac <floor@plt+0x52e0>
   16680:	mov	r3, #0
   16684:	str	r3, [r4, #16]
   16688:	stm	r4, {r0, r3}
   1668c:	str	r1, [r4, #8]
   16690:	str	r2, [r4, #12]
   16694:	add	r0, r4, #20
   16698:	bl	28870 <_ZdlPv@@Base+0x1c0>
   1669c:	ldr	r3, [pc, #12]	; 166b0 <floor@plt+0x52e4>
   166a0:	mov	r0, r4
   166a4:	str	r3, [r4, #32]
   166a8:	pop	{r4, pc}
   166ac:	andeq	lr, r2, r8, lsl r8
   166b0:	andeq	r0, r3, r8, asr r3
   166b4:	push	{r4, lr}
   166b8:	mov	r4, r0
   166bc:	ldr	r3, [pc, #32]	; 166e4 <floor@plt+0x5318>
   166c0:	mov	r2, #0
   166c4:	mov	r0, r1
   166c8:	str	r2, [r4, #4]
   166cc:	str	r3, [r4]
   166d0:	bl	291f4 <_ZdlPv@@Base+0xb44>
   166d4:	str	r0, [r4, #8]
   166d8:	str	r0, [r4, #12]
   166dc:	mov	r0, r4
   166e0:	pop	{r4, pc}
   166e4:	andeq	lr, r2, r0, asr r8
   166e8:	push	{r4, lr}
   166ec:	ldr	r4, [pc, #52]	; 16728 <floor@plt+0x535c>
   166f0:	ldr	r0, [r4]
   166f4:	cmp	r0, #0
   166f8:	beq	1671c <floor@plt+0x5350>
   166fc:	ldr	r3, [r0]
   16700:	ldr	r2, [r0, #4]
   16704:	ldr	r3, [r3, #4]
   16708:	str	r2, [r4]
   1670c:	blx	r3
   16710:	ldr	r0, [r4]
   16714:	cmp	r0, #0
   16718:	bne	166fc <floor@plt+0x5330>
   1671c:	mov	r3, #1
   16720:	str	r3, [r4, #4]
   16724:	pop	{r4, pc}
   16728:			; <UNDEFINED> instruction: 0x000428b8
   1672c:	ldr	r3, [pc, #12]	; 16740 <floor@plt+0x5374>
   16730:	ldr	r2, [r3]
   16734:	str	r0, [r3]
   16738:	str	r2, [r0, #4]
   1673c:	bx	lr
   16740:			; <UNDEFINED> instruction: 0x000428b8
   16744:	push	{r4, r5, r6, lr}
   16748:	mov	r5, r0
   1674c:	ldr	r4, [pc, #64]	; 16794 <floor@plt+0x53c8>
   16750:	ldr	r0, [r4]
   16754:	cmp	r0, #0
   16758:	beq	1677c <floor@plt+0x53b0>
   1675c:	ldr	r3, [r0]
   16760:	ldr	r2, [r0, #4]
   16764:	ldr	r3, [r3, #4]
   16768:	str	r2, [r4]
   1676c:	blx	r3
   16770:	ldr	r0, [r4]
   16774:	cmp	r0, #0
   16778:	bne	1675c <floor@plt+0x5390>
   1677c:	mov	r2, #1
   16780:	mov	r3, #0
   16784:	str	r5, [r4]
   16788:	str	r2, [r4, #4]
   1678c:	str	r3, [r5, #4]
   16790:	pop	{r4, r5, r6, pc}
   16794:			; <UNDEFINED> instruction: 0x000428b8
   16798:	push	{r4, lr}
   1679c:	ldr	r4, [pc, #108]	; 16810 <floor@plt+0x5444>
   167a0:	ldr	r0, [r4]
   167a4:	cmp	r0, #0
   167a8:	bne	167e0 <floor@plt+0x5414>
   167ac:	b	16808 <floor@plt+0x543c>
   167b0:	ldr	r3, [r4]
   167b4:	mov	r0, r3
   167b8:	ldr	r2, [r3, #4]
   167bc:	cmp	r2, #0
   167c0:	beq	16808 <floor@plt+0x543c>
   167c4:	ldr	r3, [r3]
   167c8:	str	r2, [r4]
   167cc:	ldr	r3, [r3, #4]
   167d0:	blx	r3
   167d4:	ldr	r0, [r4]
   167d8:	cmp	r0, #0
   167dc:	beq	16808 <floor@plt+0x543c>
   167e0:	ldr	r3, [r0]
   167e4:	ldr	r3, [r3, #8]
   167e8:	blx	r3
   167ec:	cmn	r0, #1
   167f0:	beq	167b0 <floor@plt+0x53e4>
   167f4:	sub	r3, r0, #10
   167f8:	clz	r3, r3
   167fc:	lsr	r3, r3, #5
   16800:	str	r3, [r4, #4]
   16804:	pop	{r4, pc}
   16808:	mvn	r0, #0
   1680c:	pop	{r4, pc}
   16810:			; <UNDEFINED> instruction: 0x000428b8
   16814:	push	{r4, lr}
   16818:	bl	16798 <floor@plt+0x53cc>
   1681c:	cmn	r0, #1
   16820:	bne	16818 <floor@plt+0x544c>
   16824:	pop	{r4, pc}
   16828:	push	{r4, lr}
   1682c:	ldr	r4, [pc, #88]	; 1688c <floor@plt+0x54c0>
   16830:	ldr	r0, [r4]
   16834:	cmp	r0, #0
   16838:	bne	1685c <floor@plt+0x5490>
   1683c:	b	16884 <floor@plt+0x54b8>
   16840:	ldr	r3, [r3]
   16844:	str	r2, [r4]
   16848:	ldr	r3, [r3, #4]
   1684c:	blx	r3
   16850:	ldr	r0, [r4]
   16854:	cmp	r0, #0
   16858:	beq	16884 <floor@plt+0x54b8>
   1685c:	ldr	r3, [r0]
   16860:	ldr	r3, [r3, #12]
   16864:	blx	r3
   16868:	cmn	r0, #1
   1686c:	popne	{r4, pc}
   16870:	ldr	r3, [r4]
   16874:	mov	r0, r3
   16878:	ldr	r2, [r3, #4]
   1687c:	cmp	r2, #0
   16880:	bne	16840 <floor@plt+0x5474>
   16884:	mvn	r0, #0
   16888:	pop	{r4, pc}
   1688c:			; <UNDEFINED> instruction: 0x000428b8
   16890:	ldr	r2, [pc, #16]	; 168a8 <floor@plt+0x54dc>
   16894:	mov	ip, #0
   16898:	uxtb	r1, r1
   1689c:	str	r1, [r0, #8]
   168a0:	stm	r0, {r2, ip}
   168a4:	bx	lr
   168a8:	andeq	lr, r2, ip, ror #16
   168ac:	push	{r4, r5, r6, lr}
   168b0:	mov	r5, r0
   168b4:	mov	r0, #12
   168b8:	mov	r4, r1
   168bc:	bl	28660 <_Znwj@@Base>
   168c0:	ldr	r3, [pc, #28]	; 168e4 <floor@plt+0x5518>
   168c4:	ldr	r1, [pc, #28]	; 168e8 <floor@plt+0x551c>
   168c8:	ldr	r2, [r3]
   168cc:	str	r4, [r3, #4]
   168d0:	str	r5, [r0, #8]
   168d4:	str	r1, [r0]
   168d8:	str	r2, [r0, #4]
   168dc:	str	r0, [r3]
   168e0:	pop	{r4, r5, r6, pc}
   168e4:			; <UNDEFINED> instruction: 0x000428b8
   168e8:	andeq	lr, r2, ip, ror #16
   168ec:	ldr	r3, [pc, #84]	; 16948 <floor@plt+0x557c>
   168f0:	push	{r4, r5, r6, lr}
   168f4:	ldr	r4, [r3]
   168f8:	cmp	r4, #0
   168fc:	beq	16940 <floor@plt+0x5574>
   16900:	mov	r6, r0
   16904:	mov	r5, r1
   16908:	b	16918 <floor@plt+0x554c>
   1690c:	ldr	r4, [r4, #4]
   16910:	cmp	r4, #0
   16914:	beq	16940 <floor@plt+0x5574>
   16918:	ldr	r3, [r4]
   1691c:	mov	r2, r5
   16920:	mov	r1, r6
   16924:	ldr	r3, [r3, #16]
   16928:	mov	r0, r4
   1692c:	blx	r3
   16930:	cmp	r0, #0
   16934:	beq	1690c <floor@plt+0x5540>
   16938:	mov	r0, #1
   1693c:	pop	{r4, r5, r6, pc}
   16940:	mov	r0, #0
   16944:	pop	{r4, r5, r6, pc}
   16948:			; <UNDEFINED> instruction: 0x000428b8
   1694c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16950:	mov	r7, r0
   16954:	ldr	r5, [pc, #180]	; 16a10 <floor@plt+0x5644>
   16958:	mov	r6, r1
   1695c:	sub	r8, r5, #784	; 0x310
   16960:	sub	r3, r5, r8
   16964:	asr	r3, r3, #3
   16968:	add	r3, r3, r3, lsr #31
   1696c:	asr	r3, r3, #1
   16970:	ldr	r9, [r8, r3, lsl #3]
   16974:	add	r4, r8, r3, lsl #3
   16978:	mov	r0, r9
   1697c:	bl	11288 <strlen@plt>
   16980:	cmp	r0, r6
   16984:	bgt	169ec <floor@plt+0x5620>
   16988:	bge	169bc <floor@plt+0x55f0>
   1698c:	mov	r2, r0
   16990:	mov	r1, r9
   16994:	mov	r0, r7
   16998:	bl	11324 <memcmp@plt>
   1699c:	cmp	r0, #0
   169a0:	bne	169d4 <floor@plt+0x5608>
   169a4:	add	r8, r4, #8
   169a8:	cmp	r8, r5
   169ac:	movcc	r4, r5
   169b0:	bcc	169e4 <floor@plt+0x5618>
   169b4:	mov	r0, #0
   169b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   169bc:	mov	r1, r9
   169c0:	mov	r2, r6
   169c4:	mov	r0, r7
   169c8:	bl	11324 <memcmp@plt>
   169cc:	cmp	r0, #0
   169d0:	beq	16a08 <floor@plt+0x563c>
   169d4:	cmp	r0, #0
   169d8:	bge	169a4 <floor@plt+0x55d8>
   169dc:	cmp	r4, r8
   169e0:	bls	169b4 <floor@plt+0x55e8>
   169e4:	mov	r5, r4
   169e8:	b	16960 <floor@plt+0x5594>
   169ec:	mov	r1, r9
   169f0:	mov	r2, r6
   169f4:	mov	r0, r7
   169f8:	bl	11324 <memcmp@plt>
   169fc:	cmp	r0, #0
   16a00:	bne	169d4 <floor@plt+0x5608>
   16a04:	b	169dc <floor@plt+0x5610>
   16a08:	ldr	r0, [r4, #4]
   16a0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16a10:	andeq	r2, r4, ip, lsl r3
   16a14:	sub	r0, r0, #98	; 0x62
   16a18:	push	{r4, r5, r6, lr}
   16a1c:	cmp	r0, #23
   16a20:	ldrls	pc, [pc, r0, lsl #2]
   16a24:	b	16cb8 <floor@plt+0x58ec>
   16a28:	andeq	r6, r1, r0, lsr #21
   16a2c:	andeq	r6, r1, r8, asr #21
   16a30:			; <UNDEFINED> instruction: 0x00016cb8
   16a34:	andeq	r6, r1, ip, ror #21
   16a38:			; <UNDEFINED> instruction: 0x00016cb8
   16a3c:			; <UNDEFINED> instruction: 0x00016cb8
   16a40:	andeq	r6, r1, r4, lsl fp
   16a44:			; <UNDEFINED> instruction: 0x00016cb8
   16a48:			; <UNDEFINED> instruction: 0x00016cb8
   16a4c:			; <UNDEFINED> instruction: 0x00016cb8
   16a50:	andeq	r6, r1, r0, ror #22
   16a54:			; <UNDEFINED> instruction: 0x00016cb8
   16a58:	andeq	r6, r1, r4, lsl #23
   16a5c:			; <UNDEFINED> instruction: 0x00016cb8
   16a60:			; <UNDEFINED> instruction: 0x00016cb8
   16a64:			; <UNDEFINED> instruction: 0x00016cb8
   16a68:			; <UNDEFINED> instruction: 0x00016bb0
   16a6c:	andeq	r6, r1, r0, ror #23
   16a70:	andeq	r6, r1, r8, ror ip
   16a74:			; <UNDEFINED> instruction: 0x00016cb8
   16a78:			; <UNDEFINED> instruction: 0x00016cb8
   16a7c:	andeq	r6, r1, r0, asr ip
   16a80:	andeq	r6, r1, r0, lsr #25
   16a84:	andeq	r6, r1, r8, lsl #21
   16a88:	bl	16798 <floor@plt+0x53cc>
   16a8c:	ldr	r1, [pc, #2464]	; 17434 <floor@plt+0x6068>
   16a90:	ldr	r0, [pc, #2464]	; 17438 <floor@plt+0x606c>
   16a94:	bl	28a34 <_ZdlPv@@Base+0x384>
   16a98:	ldr	r0, [pc, #2460]	; 1743c <floor@plt+0x6070>
   16a9c:	pop	{r4, r5, r6, pc}
   16aa0:	bl	16798 <floor@plt+0x53cc>
   16aa4:	bl	16828 <floor@plt+0x545c>
   16aa8:	cmp	r0, #111	; 0x6f
   16aac:	mov	r4, r0
   16ab0:	beq	16e38 <floor@plt+0x5a6c>
   16ab4:	ldr	r1, [pc, #2436]	; 17440 <floor@plt+0x6074>
   16ab8:	ldr	r0, [pc, #2424]	; 17438 <floor@plt+0x606c>
   16abc:	bl	28a34 <_ZdlPv@@Base+0x384>
   16ac0:	mov	r0, #312	; 0x138
   16ac4:	pop	{r4, r5, r6, pc}
   16ac8:	bl	16798 <floor@plt+0x53cc>
   16acc:	bl	16828 <floor@plt+0x545c>
   16ad0:	cmp	r0, #101	; 0x65
   16ad4:	beq	16db4 <floor@plt+0x59e8>
   16ad8:	ldr	r1, [pc, #2404]	; 17444 <floor@plt+0x6078>
   16adc:	ldr	r0, [pc, #2388]	; 17438 <floor@plt+0x606c>
   16ae0:	bl	28a34 <_ZdlPv@@Base+0x384>
   16ae4:	ldr	r0, [pc, #2396]	; 17448 <floor@plt+0x607c>
   16ae8:	pop	{r4, r5, r6, pc}
   16aec:	bl	16798 <floor@plt+0x53cc>
   16af0:	bl	16828 <floor@plt+0x545c>
   16af4:	cmp	r0, #110	; 0x6e
   16af8:	mov	r4, r0
   16afc:	beq	16d64 <floor@plt+0x5998>
   16b00:	ldr	r1, [pc, #2372]	; 1744c <floor@plt+0x6080>
   16b04:	ldr	r0, [pc, #2348]	; 17438 <floor@plt+0x606c>
   16b08:	bl	28a34 <_ZdlPv@@Base+0x384>
   16b0c:	ldr	r0, [pc, #2364]	; 17450 <floor@plt+0x6084>
   16b10:	pop	{r4, r5, r6, pc}
   16b14:	bl	16798 <floor@plt+0x53cc>
   16b18:	bl	16828 <floor@plt+0x545c>
   16b1c:	cmp	r0, #116	; 0x74
   16b20:	beq	16f6c <floor@plt+0x5ba0>
   16b24:	cmp	r0, #101	; 0x65
   16b28:	beq	16ce4 <floor@plt+0x5918>
   16b2c:	ldr	r5, [pc, #2336]	; 17454 <floor@plt+0x6088>
   16b30:	ldr	r4, [pc, #2336]	; 17458 <floor@plt+0x608c>
   16b34:	mov	r0, #12
   16b38:	bl	28660 <_Znwj@@Base>
   16b3c:	ldr	r2, [r4]
   16b40:	mov	r3, #0
   16b44:	mov	r1, #104	; 0x68
   16b48:	str	r5, [r0]
   16b4c:	str	r1, [r0, #8]
   16b50:	str	r2, [r0, #4]
   16b54:	stm	r4, {r0, r3}
   16b58:	mov	r0, #46	; 0x2e
   16b5c:	pop	{r4, r5, r6, pc}
   16b60:	bl	16798 <floor@plt+0x53cc>
   16b64:	bl	16828 <floor@plt+0x545c>
   16b68:	cmp	r0, #101	; 0x65
   16b6c:	beq	16df4 <floor@plt+0x5a28>
   16b70:	ldr	r1, [pc, #2276]	; 1745c <floor@plt+0x6090>
   16b74:	ldr	r0, [pc, #2236]	; 17438 <floor@plt+0x606c>
   16b78:	bl	28a34 <_ZdlPv@@Base+0x384>
   16b7c:	ldr	r0, [pc, #2268]	; 17460 <floor@plt+0x6094>
   16b80:	pop	{r4, r5, r6, pc}
   16b84:	bl	16798 <floor@plt+0x53cc>
   16b88:	bl	16828 <floor@plt+0x545c>
   16b8c:	cmp	r0, #101	; 0x65
   16b90:	beq	16f9c <floor@plt+0x5bd0>
   16b94:	cmp	r0, #119	; 0x77
   16b98:	beq	16ccc <floor@plt+0x5900>
   16b9c:	ldr	r1, [pc, #2240]	; 17464 <floor@plt+0x6098>
   16ba0:	ldr	r0, [pc, #2192]	; 17438 <floor@plt+0x606c>
   16ba4:	bl	28a34 <_ZdlPv@@Base+0x384>
   16ba8:	ldr	r0, [pc, #2232]	; 17468 <floor@plt+0x609c>
   16bac:	pop	{r4, r5, r6, pc}
   16bb0:	bl	16798 <floor@plt+0x53cc>
   16bb4:	bl	16828 <floor@plt+0x545c>
   16bb8:	cmp	r0, #97	; 0x61
   16bbc:	mov	r4, r0
   16bc0:	beq	16eec <floor@plt+0x5b20>
   16bc4:	cmp	r0, #105	; 0x69
   16bc8:	beq	16d24 <floor@plt+0x5958>
   16bcc:	ldr	r1, [pc, #2200]	; 1746c <floor@plt+0x60a0>
   16bd0:	ldr	r0, [pc, #2144]	; 17438 <floor@plt+0x606c>
   16bd4:	bl	28a34 <_ZdlPv@@Base+0x384>
   16bd8:	ldr	r0, [pc, #2160]	; 17450 <floor@plt+0x6084>
   16bdc:	pop	{r4, r5, r6, pc}
   16be0:	bl	16798 <floor@plt+0x53cc>
   16be4:	bl	16828 <floor@plt+0x545c>
   16be8:	cmp	r0, #101	; 0x65
   16bec:	beq	17058 <floor@plt+0x5c8c>
   16bf0:	cmp	r0, #119	; 0x77
   16bf4:	beq	1710c <floor@plt+0x5d40>
   16bf8:	cmp	r0, #116	; 0x74
   16bfc:	bne	16c3c <floor@plt+0x5870>
   16c00:	bl	16798 <floor@plt+0x53cc>
   16c04:	bl	16828 <floor@plt+0x545c>
   16c08:	cmp	r0, #97	; 0x61
   16c0c:	beq	16f28 <floor@plt+0x5b5c>
   16c10:	ldr	r5, [pc, #2108]	; 17454 <floor@plt+0x6088>
   16c14:	ldr	r4, [pc, #2108]	; 17458 <floor@plt+0x608c>
   16c18:	mov	r0, #12
   16c1c:	bl	28660 <_Znwj@@Base>
   16c20:	ldr	r2, [r4]
   16c24:	mov	r3, #0
   16c28:	mov	r1, #116	; 0x74
   16c2c:	str	r5, [r0]
   16c30:	str	r1, [r0, #8]
   16c34:	str	r2, [r0, #4]
   16c38:	stm	r4, {r0, r3}
   16c3c:	ldr	r1, [pc, #2092]	; 17470 <floor@plt+0x60a4>
   16c40:	ldr	r0, [pc, #2032]	; 17438 <floor@plt+0x606c>
   16c44:	bl	28a34 <_ZdlPv@@Base+0x384>
   16c48:	mov	r0, #312	; 0x138
   16c4c:	pop	{r4, r5, r6, pc}
   16c50:	bl	16798 <floor@plt+0x53cc>
   16c54:	bl	16828 <floor@plt+0x545c>
   16c58:	cmp	r0, #105	; 0x69
   16c5c:	mov	r4, r0
   16c60:	beq	16e74 <floor@plt+0x5aa8>
   16c64:	ldr	r1, [pc, #2056]	; 17474 <floor@plt+0x60a8>
   16c68:	ldr	r0, [pc, #1992]	; 17438 <floor@plt+0x606c>
   16c6c:	bl	28a34 <_ZdlPv@@Base+0x384>
   16c70:	ldr	r0, [pc, #2024]	; 17460 <floor@plt+0x6094>
   16c74:	pop	{r4, r5, r6, pc}
   16c78:	bl	16798 <floor@plt+0x53cc>
   16c7c:	bl	16828 <floor@plt+0x545c>
   16c80:	cmp	r0, #111	; 0x6f
   16c84:	mov	r4, r0
   16c88:	beq	16eb0 <floor@plt+0x5ae4>
   16c8c:	ldr	r1, [pc, #2020]	; 17478 <floor@plt+0x60ac>
   16c90:	ldr	r0, [pc, #1952]	; 17438 <floor@plt+0x606c>
   16c94:	bl	28a34 <_ZdlPv@@Base+0x384>
   16c98:	ldr	r0, [pc, #1992]	; 17468 <floor@plt+0x609c>
   16c9c:	pop	{r4, r5, r6, pc}
   16ca0:	bl	16798 <floor@plt+0x53cc>
   16ca4:	ldr	r1, [pc, #2000]	; 1747c <floor@plt+0x60b0>
   16ca8:	ldr	r0, [pc, #1928]	; 17438 <floor@plt+0x606c>
   16cac:	bl	28a34 <_ZdlPv@@Base+0x384>
   16cb0:	mov	r0, #320	; 0x140
   16cb4:	pop	{r4, r5, r6, pc}
   16cb8:	mov	r1, #46	; 0x2e
   16cbc:	ldr	r0, [pc, #1908]	; 17438 <floor@plt+0x606c>
   16cc0:	bl	28ab8 <_ZdlPv@@Base+0x408>
   16cc4:	mov	r0, #46	; 0x2e
   16cc8:	pop	{r4, r5, r6, pc}
   16ccc:	bl	16798 <floor@plt+0x53cc>
   16cd0:	ldr	r1, [pc, #1960]	; 17480 <floor@plt+0x60b4>
   16cd4:	ldr	r0, [pc, #1884]	; 17438 <floor@plt+0x606c>
   16cd8:	bl	28a34 <_ZdlPv@@Base+0x384>
   16cdc:	ldr	r0, [pc, #1952]	; 17484 <floor@plt+0x60b8>
   16ce0:	pop	{r4, r5, r6, pc}
   16ce4:	bl	16798 <floor@plt+0x53cc>
   16ce8:	bl	16828 <floor@plt+0x545c>
   16cec:	cmp	r0, #105	; 0x69
   16cf0:	beq	17124 <floor@plt+0x5d58>
   16cf4:	ldr	r5, [pc, #1880]	; 17454 <floor@plt+0x6088>
   16cf8:	ldr	r4, [pc, #1880]	; 17458 <floor@plt+0x608c>
   16cfc:	mov	r0, #12
   16d00:	bl	28660 <_Znwj@@Base>
   16d04:	ldr	r2, [r4]
   16d08:	mov	r3, #0
   16d0c:	mov	r1, #101	; 0x65
   16d10:	str	r5, [r0]
   16d14:	str	r1, [r0, #8]
   16d18:	str	r2, [r0, #4]
   16d1c:	stm	r4, {r0, r3}
   16d20:	b	16b34 <floor@plt+0x5768>
   16d24:	bl	16798 <floor@plt+0x53cc>
   16d28:	bl	16828 <floor@plt+0x545c>
   16d2c:	cmp	r0, #103	; 0x67
   16d30:	beq	171b8 <floor@plt+0x5dec>
   16d34:	ldr	r5, [pc, #1816]	; 17454 <floor@plt+0x6088>
   16d38:	ldr	r4, [pc, #1816]	; 17458 <floor@plt+0x608c>
   16d3c:	mov	r0, #12
   16d40:	bl	28660 <_Znwj@@Base>
   16d44:	ldr	r2, [r4]
   16d48:	mov	r3, #0
   16d4c:	mov	r1, #105	; 0x69
   16d50:	str	r5, [r0]
   16d54:	str	r1, [r0, #8]
   16d58:	str	r2, [r0, #4]
   16d5c:	stm	r4, {r0, r3}
   16d60:	b	16bcc <floor@plt+0x5800>
   16d64:	bl	16798 <floor@plt+0x53cc>
   16d68:	bl	16828 <floor@plt+0x545c>
   16d6c:	cmp	r0, #100	; 0x64
   16d70:	beq	16f84 <floor@plt+0x5bb8>
   16d74:	mov	r0, #12
   16d78:	bl	28660 <_Znwj@@Base>
   16d7c:	ldr	r3, [pc, #1748]	; 17458 <floor@plt+0x608c>
   16d80:	ldr	r1, [pc, #1740]	; 17454 <floor@plt+0x6088>
   16d84:	mov	ip, #0
   16d88:	ldr	lr, [r3]
   16d8c:	mov	r2, r0
   16d90:	str	r4, [r0, #8]
   16d94:	str	r1, [r2]
   16d98:	add	r0, r3, #8
   16d9c:	ldr	r1, [pc, #1704]	; 1744c <floor@plt+0x6080>
   16da0:	str	lr, [r2, #4]
   16da4:	stm	r3, {r2, ip}
   16da8:	bl	28a34 <_ZdlPv@@Base+0x384>
   16dac:	ldr	r0, [pc, #1692]	; 17450 <floor@plt+0x6084>
   16db0:	pop	{r4, r5, r6, pc}
   16db4:	bl	16798 <floor@plt+0x53cc>
   16db8:	bl	16828 <floor@plt+0x545c>
   16dbc:	cmp	r0, #110	; 0x6e
   16dc0:	beq	16fb4 <floor@plt+0x5be8>
   16dc4:	ldr	r5, [pc, #1672]	; 17454 <floor@plt+0x6088>
   16dc8:	ldr	r4, [pc, #1672]	; 17458 <floor@plt+0x608c>
   16dcc:	mov	r0, #12
   16dd0:	bl	28660 <_Znwj@@Base>
   16dd4:	ldr	r2, [r4]
   16dd8:	mov	r3, #0
   16ddc:	mov	r1, #101	; 0x65
   16de0:	str	r5, [r0]
   16de4:	str	r1, [r0, #8]
   16de8:	str	r2, [r0, #4]
   16dec:	stm	r4, {r0, r3}
   16df0:	b	16ad8 <floor@plt+0x570c>
   16df4:	bl	16798 <floor@plt+0x53cc>
   16df8:	bl	16828 <floor@plt+0x545c>
   16dfc:	cmp	r0, #102	; 0x66
   16e00:	mov	r6, r0
   16e04:	beq	17070 <floor@plt+0x5ca4>
   16e08:	ldr	r5, [pc, #1604]	; 17454 <floor@plt+0x6088>
   16e0c:	ldr	r4, [pc, #1604]	; 17458 <floor@plt+0x608c>
   16e10:	mov	r0, #12
   16e14:	bl	28660 <_Znwj@@Base>
   16e18:	ldr	r2, [r4]
   16e1c:	mov	r3, #0
   16e20:	mov	r1, #101	; 0x65
   16e24:	str	r5, [r0]
   16e28:	str	r1, [r0, #8]
   16e2c:	str	r2, [r0, #4]
   16e30:	stm	r4, {r0, r3}
   16e34:	b	16b70 <floor@plt+0x57a4>
   16e38:	bl	16798 <floor@plt+0x53cc>
   16e3c:	bl	16828 <floor@plt+0x545c>
   16e40:	cmp	r0, #116	; 0x74
   16e44:	beq	16ff4 <floor@plt+0x5c28>
   16e48:	mov	r0, #12
   16e4c:	bl	28660 <_Znwj@@Base>
   16e50:	ldr	r3, [pc, #1536]	; 17458 <floor@plt+0x608c>
   16e54:	ldr	ip, [pc, #1528]	; 17454 <floor@plt+0x6088>
   16e58:	mov	r2, #0
   16e5c:	ldr	r1, [r3]
   16e60:	str	r4, [r0, #8]
   16e64:	str	ip, [r0]
   16e68:	str	r1, [r0, #4]
   16e6c:	stm	r3, {r0, r2}
   16e70:	b	16ab4 <floor@plt+0x56e8>
   16e74:	bl	16798 <floor@plt+0x53cc>
   16e78:	bl	16828 <floor@plt+0x545c>
   16e7c:	cmp	r0, #100	; 0x64
   16e80:	beq	170ac <floor@plt+0x5ce0>
   16e84:	mov	r0, #12
   16e88:	bl	28660 <_Znwj@@Base>
   16e8c:	ldr	r3, [pc, #1476]	; 17458 <floor@plt+0x608c>
   16e90:	ldr	ip, [pc, #1468]	; 17454 <floor@plt+0x6088>
   16e94:	mov	r2, #0
   16e98:	ldr	r1, [r3]
   16e9c:	str	r4, [r0, #8]
   16ea0:	str	ip, [r0]
   16ea4:	str	r1, [r0, #4]
   16ea8:	stm	r3, {r0, r2}
   16eac:	b	16c64 <floor@plt+0x5898>
   16eb0:	bl	16798 <floor@plt+0x53cc>
   16eb4:	bl	16828 <floor@plt+0x545c>
   16eb8:	cmp	r0, #112	; 0x70
   16ebc:	beq	171a0 <floor@plt+0x5dd4>
   16ec0:	mov	r0, #12
   16ec4:	bl	28660 <_Znwj@@Base>
   16ec8:	ldr	r3, [pc, #1416]	; 17458 <floor@plt+0x608c>
   16ecc:	ldr	ip, [pc, #1408]	; 17454 <floor@plt+0x6088>
   16ed0:	mov	r2, #0
   16ed4:	ldr	r1, [r3]
   16ed8:	str	r4, [r0, #8]
   16edc:	str	ip, [r0]
   16ee0:	str	r1, [r0, #4]
   16ee4:	stm	r3, {r0, r2}
   16ee8:	b	16c8c <floor@plt+0x58c0>
   16eec:	bl	16798 <floor@plt+0x53cc>
   16ef0:	bl	16828 <floor@plt+0x545c>
   16ef4:	cmp	r0, #100	; 0x64
   16ef8:	beq	171fc <floor@plt+0x5e30>
   16efc:	mov	r0, #12
   16f00:	bl	28660 <_Znwj@@Base>
   16f04:	ldr	r3, [pc, #1356]	; 17458 <floor@plt+0x608c>
   16f08:	ldr	ip, [pc, #1348]	; 17454 <floor@plt+0x6088>
   16f0c:	mov	r2, #0
   16f10:	ldr	r1, [r3]
   16f14:	str	r4, [r0, #8]
   16f18:	str	ip, [r0]
   16f1c:	str	r1, [r0, #4]
   16f20:	stm	r3, {r0, r2}
   16f24:	b	16bcc <floor@plt+0x5800>
   16f28:	bl	16798 <floor@plt+0x53cc>
   16f2c:	bl	16828 <floor@plt+0x545c>
   16f30:	cmp	r0, #114	; 0x72
   16f34:	mov	r6, r0
   16f38:	beq	17164 <floor@plt+0x5d98>
   16f3c:	ldr	r5, [pc, #1296]	; 17454 <floor@plt+0x6088>
   16f40:	ldr	r4, [pc, #1296]	; 17458 <floor@plt+0x608c>
   16f44:	mov	r0, #12
   16f48:	bl	28660 <_Znwj@@Base>
   16f4c:	ldr	r2, [r4]
   16f50:	mov	r3, #0
   16f54:	mov	r1, #97	; 0x61
   16f58:	str	r5, [r0]
   16f5c:	str	r1, [r0, #8]
   16f60:	str	r2, [r0, #4]
   16f64:	stm	r4, {r0, r3}
   16f68:	b	16c18 <floor@plt+0x584c>
   16f6c:	bl	16798 <floor@plt+0x53cc>
   16f70:	ldr	r1, [pc, #1296]	; 17488 <floor@plt+0x60bc>
   16f74:	ldr	r0, [pc, #1212]	; 17438 <floor@plt+0x606c>
   16f78:	bl	28a34 <_ZdlPv@@Base+0x384>
   16f7c:	ldr	r0, [pc, #1288]	; 1748c <floor@plt+0x60c0>
   16f80:	pop	{r4, r5, r6, pc}
   16f84:	bl	16798 <floor@plt+0x53cc>
   16f88:	ldr	r1, [pc, #1280]	; 17490 <floor@plt+0x60c4>
   16f8c:	ldr	r0, [pc, #1188]	; 17438 <floor@plt+0x606c>
   16f90:	bl	28a34 <_ZdlPv@@Base+0x384>
   16f94:	ldr	r0, [pc, #1272]	; 17494 <floor@plt+0x60c8>
   16f98:	pop	{r4, r5, r6, pc}
   16f9c:	bl	16798 <floor@plt+0x53cc>
   16fa0:	ldr	r1, [pc, #1264]	; 17498 <floor@plt+0x60cc>
   16fa4:	ldr	r0, [pc, #1164]	; 17438 <floor@plt+0x606c>
   16fa8:	bl	28a34 <_ZdlPv@@Base+0x384>
   16fac:	ldr	r0, [pc, #1256]	; 1749c <floor@plt+0x60d0>
   16fb0:	pop	{r4, r5, r6, pc}
   16fb4:	bl	16798 <floor@plt+0x53cc>
   16fb8:	bl	16828 <floor@plt+0x545c>
   16fbc:	cmp	r0, #116	; 0x74
   16fc0:	beq	17214 <floor@plt+0x5e48>
   16fc4:	ldr	r5, [pc, #1160]	; 17454 <floor@plt+0x6088>
   16fc8:	ldr	r4, [pc, #1160]	; 17458 <floor@plt+0x608c>
   16fcc:	mov	r0, #12
   16fd0:	bl	28660 <_Znwj@@Base>
   16fd4:	ldr	r2, [r4]
   16fd8:	mov	r3, #0
   16fdc:	mov	r1, #110	; 0x6e
   16fe0:	str	r5, [r0]
   16fe4:	str	r1, [r0, #8]
   16fe8:	str	r2, [r0, #4]
   16fec:	stm	r4, {r0, r3}
   16ff0:	b	16dcc <floor@plt+0x5a00>
   16ff4:	bl	16798 <floor@plt+0x53cc>
   16ff8:	bl	16828 <floor@plt+0x545c>
   16ffc:	cmp	r0, #116	; 0x74
   17000:	bne	17044 <floor@plt+0x5c78>
   17004:	bl	16798 <floor@plt+0x53cc>
   17008:	bl	16828 <floor@plt+0x545c>
   1700c:	cmp	r0, #111	; 0x6f
   17010:	mov	r6, r0
   17014:	beq	172b4 <floor@plt+0x5ee8>
   17018:	ldr	r5, [pc, #1076]	; 17454 <floor@plt+0x6088>
   1701c:	ldr	r4, [pc, #1076]	; 17458 <floor@plt+0x608c>
   17020:	mov	r0, #12
   17024:	bl	28660 <_Znwj@@Base>
   17028:	ldr	r2, [r4]
   1702c:	mov	r3, #0
   17030:	mov	r1, #116	; 0x74
   17034:	str	r5, [r0]
   17038:	str	r1, [r0, #8]
   1703c:	str	r2, [r0, #4]
   17040:	stm	r4, {r0, r3}
   17044:	ldr	r1, [pc, #1108]	; 174a0 <floor@plt+0x60d4>
   17048:	ldr	r0, [pc, #1000]	; 17438 <floor@plt+0x606c>
   1704c:	bl	28a34 <_ZdlPv@@Base+0x384>
   17050:	mov	r0, #312	; 0x138
   17054:	pop	{r4, r5, r6, pc}
   17058:	bl	16798 <floor@plt+0x53cc>
   1705c:	ldr	r1, [pc, #1088]	; 174a4 <floor@plt+0x60d8>
   17060:	ldr	r0, [pc, #976]	; 17438 <floor@plt+0x606c>
   17064:	bl	28a34 <_ZdlPv@@Base+0x384>
   17068:	ldr	r0, [pc, #1080]	; 174a8 <floor@plt+0x60dc>
   1706c:	pop	{r4, r5, r6, pc}
   17070:	bl	16798 <floor@plt+0x53cc>
   17074:	bl	16828 <floor@plt+0x545c>
   17078:	cmp	r0, #116	; 0x74
   1707c:	beq	172f0 <floor@plt+0x5f24>
   17080:	mov	r0, #12
   17084:	bl	28660 <_Znwj@@Base>
   17088:	ldr	r4, [pc, #968]	; 17458 <floor@plt+0x608c>
   1708c:	ldr	r5, [pc, #960]	; 17454 <floor@plt+0x6088>
   17090:	mov	r3, #0
   17094:	ldr	r2, [r4]
   17098:	str	r3, [r4, #4]
   1709c:	stmib	r0, {r2, r6}
   170a0:	str	r0, [r4]
   170a4:	str	r5, [r0]
   170a8:	b	16e10 <floor@plt+0x5a44>
   170ac:	bl	16798 <floor@plt+0x53cc>
   170b0:	bl	16828 <floor@plt+0x545c>
   170b4:	cmp	r0, #116	; 0x74
   170b8:	mov	r4, r0
   170bc:	bne	170f8 <floor@plt+0x5d2c>
   170c0:	bl	16798 <floor@plt+0x53cc>
   170c4:	bl	16828 <floor@plt+0x545c>
   170c8:	cmp	r0, #104	; 0x68
   170cc:	beq	17308 <floor@plt+0x5f3c>
   170d0:	mov	r0, #12
   170d4:	bl	28660 <_Znwj@@Base>
   170d8:	ldr	r3, [pc, #888]	; 17458 <floor@plt+0x608c>
   170dc:	ldr	ip, [pc, #880]	; 17454 <floor@plt+0x6088>
   170e0:	mov	r2, #0
   170e4:	ldr	r1, [r3]
   170e8:	str	r4, [r0, #8]
   170ec:	str	ip, [r0]
   170f0:	str	r1, [r0, #4]
   170f4:	stm	r3, {r0, r2}
   170f8:	ldr	r1, [pc, #940]	; 174ac <floor@plt+0x60e0>
   170fc:	ldr	r0, [pc, #820]	; 17438 <floor@plt+0x606c>
   17100:	bl	28a34 <_ZdlPv@@Base+0x384>
   17104:	ldr	r0, [pc, #932]	; 174b0 <floor@plt+0x60e4>
   17108:	pop	{r4, r5, r6, pc}
   1710c:	bl	16798 <floor@plt+0x53cc>
   17110:	ldr	r1, [pc, #924]	; 174b4 <floor@plt+0x60e8>
   17114:	ldr	r0, [pc, #796]	; 17438 <floor@plt+0x606c>
   17118:	bl	28a34 <_ZdlPv@@Base+0x384>
   1711c:	mov	r0, #316	; 0x13c
   17120:	pop	{r4, r5, r6, pc}
   17124:	bl	16798 <floor@plt+0x53cc>
   17128:	bl	16828 <floor@plt+0x545c>
   1712c:	cmp	r0, #103	; 0x67
   17130:	beq	17258 <floor@plt+0x5e8c>
   17134:	ldr	r5, [pc, #792]	; 17454 <floor@plt+0x6088>
   17138:	ldr	r4, [pc, #792]	; 17458 <floor@plt+0x608c>
   1713c:	mov	r0, #12
   17140:	bl	28660 <_Znwj@@Base>
   17144:	ldr	r2, [r4]
   17148:	mov	r3, #0
   1714c:	mov	r1, #105	; 0x69
   17150:	str	r5, [r0]
   17154:	str	r1, [r0, #8]
   17158:	str	r2, [r0, #4]
   1715c:	stm	r4, {r0, r3}
   17160:	b	16cfc <floor@plt+0x5930>
   17164:	bl	16798 <floor@plt+0x53cc>
   17168:	bl	16828 <floor@plt+0x545c>
   1716c:	cmp	r0, #116	; 0x74
   17170:	beq	1729c <floor@plt+0x5ed0>
   17174:	mov	r0, #12
   17178:	bl	28660 <_Znwj@@Base>
   1717c:	ldr	r4, [pc, #724]	; 17458 <floor@plt+0x608c>
   17180:	ldr	r5, [pc, #716]	; 17454 <floor@plt+0x6088>
   17184:	mov	r3, #0
   17188:	ldr	r2, [r4]
   1718c:	str	r3, [r4, #4]
   17190:	stmib	r0, {r2, r6}
   17194:	str	r0, [r4]
   17198:	str	r5, [r0]
   1719c:	b	16f44 <floor@plt+0x5b78>
   171a0:	bl	16798 <floor@plt+0x53cc>
   171a4:	ldr	r1, [pc, #780]	; 174b8 <floor@plt+0x60ec>
   171a8:	ldr	r0, [pc, #648]	; 17438 <floor@plt+0x606c>
   171ac:	bl	28a34 <_ZdlPv@@Base+0x384>
   171b0:	ldr	r0, [pc, #688]	; 17468 <floor@plt+0x609c>
   171b4:	pop	{r4, r5, r6, pc}
   171b8:	bl	16798 <floor@plt+0x53cc>
   171bc:	bl	16828 <floor@plt+0x545c>
   171c0:	cmp	r0, #104	; 0x68
   171c4:	mov	r6, r0
   171c8:	beq	17320 <floor@plt+0x5f54>
   171cc:	ldr	r5, [pc, #640]	; 17454 <floor@plt+0x6088>
   171d0:	ldr	r4, [pc, #640]	; 17458 <floor@plt+0x608c>
   171d4:	mov	r0, #12
   171d8:	bl	28660 <_Znwj@@Base>
   171dc:	ldr	r2, [r4]
   171e0:	mov	r3, #0
   171e4:	mov	r1, #103	; 0x67
   171e8:	str	r5, [r0]
   171ec:	str	r1, [r0, #8]
   171f0:	str	r2, [r0, #4]
   171f4:	stm	r4, {r0, r3}
   171f8:	b	16d3c <floor@plt+0x5970>
   171fc:	bl	16798 <floor@plt+0x53cc>
   17200:	ldr	r1, [pc, #692]	; 174bc <floor@plt+0x60f0>
   17204:	ldr	r0, [pc, #556]	; 17438 <floor@plt+0x606c>
   17208:	bl	28a34 <_ZdlPv@@Base+0x384>
   1720c:	mov	r0, #324	; 0x144
   17210:	pop	{r4, r5, r6, pc}
   17214:	bl	16798 <floor@plt+0x53cc>
   17218:	bl	16828 <floor@plt+0x545c>
   1721c:	cmp	r0, #101	; 0x65
   17220:	mov	r6, r0
   17224:	beq	1735c <floor@plt+0x5f90>
   17228:	ldr	r5, [pc, #548]	; 17454 <floor@plt+0x6088>
   1722c:	ldr	r4, [pc, #548]	; 17458 <floor@plt+0x608c>
   17230:	mov	r0, #12
   17234:	bl	28660 <_Znwj@@Base>
   17238:	ldr	r2, [r4]
   1723c:	mov	r3, #0
   17240:	mov	r1, #116	; 0x74
   17244:	str	r5, [r0]
   17248:	str	r1, [r0, #8]
   1724c:	str	r2, [r0, #4]
   17250:	stm	r4, {r0, r3}
   17254:	b	16fcc <floor@plt+0x5c00>
   17258:	bl	16798 <floor@plt+0x53cc>
   1725c:	bl	16828 <floor@plt+0x545c>
   17260:	cmp	r0, #104	; 0x68
   17264:	mov	r6, r0
   17268:	beq	17398 <floor@plt+0x5fcc>
   1726c:	ldr	r5, [pc, #480]	; 17454 <floor@plt+0x6088>
   17270:	ldr	r4, [pc, #480]	; 17458 <floor@plt+0x608c>
   17274:	mov	r0, #12
   17278:	bl	28660 <_Znwj@@Base>
   1727c:	ldr	r2, [r4]
   17280:	mov	r3, #0
   17284:	mov	r1, #103	; 0x67
   17288:	str	r5, [r0]
   1728c:	str	r1, [r0, #8]
   17290:	str	r2, [r0, #4]
   17294:	stm	r4, {r0, r3}
   17298:	b	1713c <floor@plt+0x5d70>
   1729c:	bl	16798 <floor@plt+0x53cc>
   172a0:	ldr	r1, [pc, #536]	; 174c0 <floor@plt+0x60f4>
   172a4:	ldr	r0, [pc, #396]	; 17438 <floor@plt+0x606c>
   172a8:	bl	28a34 <_ZdlPv@@Base+0x384>
   172ac:	ldr	r0, [pc, #528]	; 174c4 <floor@plt+0x60f8>
   172b0:	pop	{r4, r5, r6, pc}
   172b4:	bl	16798 <floor@plt+0x53cc>
   172b8:	bl	16828 <floor@plt+0x545c>
   172bc:	cmp	r0, #109	; 0x6d
   172c0:	beq	173d4 <floor@plt+0x6008>
   172c4:	mov	r0, #12
   172c8:	bl	28660 <_Znwj@@Base>
   172cc:	ldr	r4, [pc, #388]	; 17458 <floor@plt+0x608c>
   172d0:	ldr	r5, [pc, #380]	; 17454 <floor@plt+0x6088>
   172d4:	mov	r3, #0
   172d8:	ldr	r2, [r4]
   172dc:	str	r3, [r4, #4]
   172e0:	stmib	r0, {r2, r6}
   172e4:	str	r0, [r4]
   172e8:	str	r5, [r0]
   172ec:	b	17020 <floor@plt+0x5c54>
   172f0:	bl	16798 <floor@plt+0x53cc>
   172f4:	ldr	r1, [pc, #460]	; 174c8 <floor@plt+0x60fc>
   172f8:	ldr	r0, [pc, #312]	; 17438 <floor@plt+0x606c>
   172fc:	bl	28a34 <_ZdlPv@@Base+0x384>
   17300:	ldr	r0, [pc, #344]	; 17460 <floor@plt+0x6094>
   17304:	pop	{r4, r5, r6, pc}
   17308:	bl	16798 <floor@plt+0x53cc>
   1730c:	ldr	r1, [pc, #440]	; 174cc <floor@plt+0x6100>
   17310:	ldr	r0, [pc, #288]	; 17438 <floor@plt+0x606c>
   17314:	bl	28a34 <_ZdlPv@@Base+0x384>
   17318:	ldr	r0, [pc, #400]	; 174b0 <floor@plt+0x60e4>
   1731c:	pop	{r4, r5, r6, pc}
   17320:	bl	16798 <floor@plt+0x53cc>
   17324:	bl	16828 <floor@plt+0x545c>
   17328:	cmp	r0, #116	; 0x74
   1732c:	beq	173ec <floor@plt+0x6020>
   17330:	mov	r0, #12
   17334:	bl	28660 <_Znwj@@Base>
   17338:	ldr	r4, [pc, #280]	; 17458 <floor@plt+0x608c>
   1733c:	ldr	r5, [pc, #272]	; 17454 <floor@plt+0x6088>
   17340:	mov	r3, #0
   17344:	ldr	r2, [r4]
   17348:	str	r3, [r4, #4]
   1734c:	stmib	r0, {r2, r6}
   17350:	str	r0, [r4]
   17354:	str	r5, [r0]
   17358:	b	171d4 <floor@plt+0x5e08>
   1735c:	bl	16798 <floor@plt+0x53cc>
   17360:	bl	16828 <floor@plt+0x545c>
   17364:	cmp	r0, #114	; 0x72
   17368:	beq	17404 <floor@plt+0x6038>
   1736c:	mov	r0, #12
   17370:	bl	28660 <_Znwj@@Base>
   17374:	ldr	r4, [pc, #220]	; 17458 <floor@plt+0x608c>
   17378:	ldr	r5, [pc, #212]	; 17454 <floor@plt+0x6088>
   1737c:	mov	r3, #0
   17380:	ldr	r2, [r4]
   17384:	str	r3, [r4, #4]
   17388:	stmib	r0, {r2, r6}
   1738c:	str	r0, [r4]
   17390:	str	r5, [r0]
   17394:	b	17230 <floor@plt+0x5e64>
   17398:	bl	16798 <floor@plt+0x53cc>
   1739c:	bl	16828 <floor@plt+0x545c>
   173a0:	cmp	r0, #116	; 0x74
   173a4:	beq	1741c <floor@plt+0x6050>
   173a8:	mov	r0, #12
   173ac:	bl	28660 <_Znwj@@Base>
   173b0:	ldr	r4, [pc, #160]	; 17458 <floor@plt+0x608c>
   173b4:	ldr	r5, [pc, #152]	; 17454 <floor@plt+0x6088>
   173b8:	mov	r3, #0
   173bc:	ldr	r2, [r4]
   173c0:	str	r3, [r4, #4]
   173c4:	stmib	r0, {r2, r6}
   173c8:	str	r0, [r4]
   173cc:	str	r5, [r0]
   173d0:	b	17274 <floor@plt+0x5ea8>
   173d4:	bl	16798 <floor@plt+0x53cc>
   173d8:	ldr	r1, [pc, #240]	; 174d0 <floor@plt+0x6104>
   173dc:	ldr	r0, [pc, #84]	; 17438 <floor@plt+0x606c>
   173e0:	bl	28a34 <_ZdlPv@@Base+0x384>
   173e4:	mov	r0, #312	; 0x138
   173e8:	pop	{r4, r5, r6, pc}
   173ec:	bl	16798 <floor@plt+0x53cc>
   173f0:	ldr	r1, [pc, #220]	; 174d4 <floor@plt+0x6108>
   173f4:	ldr	r0, [pc, #60]	; 17438 <floor@plt+0x606c>
   173f8:	bl	28a34 <_ZdlPv@@Base+0x384>
   173fc:	ldr	r0, [pc, #76]	; 17450 <floor@plt+0x6084>
   17400:	pop	{r4, r5, r6, pc}
   17404:	bl	16798 <floor@plt+0x53cc>
   17408:	ldr	r1, [pc, #200]	; 174d8 <floor@plt+0x610c>
   1740c:	ldr	r0, [pc, #36]	; 17438 <floor@plt+0x606c>
   17410:	bl	28a34 <_ZdlPv@@Base+0x384>
   17414:	ldr	r0, [pc, #44]	; 17448 <floor@plt+0x607c>
   17418:	pop	{r4, r5, r6, pc}
   1741c:	bl	16798 <floor@plt+0x53cc>
   17420:	ldr	r1, [pc, #180]	; 174dc <floor@plt+0x6110>
   17424:	ldr	r0, [pc, #12]	; 17438 <floor@plt+0x606c>
   17428:	bl	28a34 <_ZdlPv@@Base+0x384>
   1742c:	ldr	r0, [pc, #88]	; 1748c <floor@plt+0x60c0>
   17430:	pop	{r4, r5, r6, pc}
   17434:	muleq	r2, r4, sl
   17438:	andeq	r2, r4, r0, asr #17
   1743c:	andeq	r0, r0, r1, asr #2
   17440:	andeq	lr, r2, r0, lsr #22
   17444:	andeq	lr, r2, r0, lsr #21
   17448:	andeq	r0, r0, sp, lsr r1
   1744c:			; <UNDEFINED> instruction: 0x0002eab8
   17450:	andeq	r0, r0, r6, lsr r1
   17454:	andeq	lr, r2, ip, ror #16
   17458:			; <UNDEFINED> instruction: 0x000428b8
   1745c:	strdeq	lr, [r2], -r8
   17460:	andeq	r0, r0, r7, lsr r1
   17464:	andeq	lr, r2, ip, lsr #21
   17468:	andeq	r0, r0, r5, lsr r1
   1746c:	andeq	lr, r2, ip, lsl #22
   17470:	andeq	lr, r2, r0, ror #21
   17474:	andeq	lr, r2, ip, asr #21
   17478:	andeq	lr, r2, ip, ror #21
   1747c:	muleq	r2, r0, sl
   17480:	andeq	lr, r2, r8, lsr #21
   17484:	andeq	r0, r0, fp, lsr r1
   17488:	andeq	lr, r2, r4, lsl #21
   1748c:	andeq	r0, r0, r2, asr #2
   17490:			; <UNDEFINED> instruction: 0x0002eab0
   17494:	andeq	r0, r0, pc, lsr r1
   17498:	andeq	lr, r2, r4, lsr #21
   1749c:	andeq	r0, r0, r9, lsr r1
   174a0:	andeq	lr, r2, r8, lsl fp
   174a4:	ldrdeq	lr, [r2], -r0
   174a8:	andeq	r0, r0, sl, lsr r1
   174ac:	andeq	lr, r2, r4, asr #21
   174b0:	andeq	r0, r0, r3, asr #2
   174b4:	ldrdeq	lr, [r2], -r4
   174b8:	andeq	lr, r2, r4, ror #21
   174bc:	strdeq	lr, [r2], -ip
   174c0:	ldrdeq	lr, [r2], -r8
   174c4:	andeq	r0, r0, lr, lsr r1
   174c8:	strdeq	lr, [r2], -r0
   174cc:			; <UNDEFINED> instruction: 0x0002eabc
   174d0:	andeq	lr, r2, r0, lsl fp
   174d4:	andeq	lr, r2, r4, lsl #22
   174d8:	muleq	r2, r8, sl
   174dc:	andeq	lr, r2, r8, lsl #21
   174e0:	push	{lr}		; (str lr, [sp, #-4]!)
   174e4:	vstr	d0, [r0, #16]
   174e8:	ldr	lr, [pc, #40]	; 17518 <floor@plt+0x614c>
   174ec:	str	r1, [r0, #8]
   174f0:	mov	r1, #0
   174f4:	str	r3, [r0, #12]
   174f8:	vstr	d1, [r0, #24]
   174fc:	str	r2, [r0, #32]
   17500:	vstr	d2, [r0, #40]	; 0x28
   17504:	str	r3, [r0, #48]	; 0x30
   17508:	str	lr, [r0]
   1750c:	str	r1, [r0, #4]
   17510:	str	r1, [r0, #52]	; 0x34
   17514:	pop	{pc}		; (ldr pc, [sp], #4)
   17518:	andeq	lr, r2, r8, lsl #17
   1751c:	push	{r4, r5, r6, lr}
   17520:	mov	r4, r1
   17524:	vpush	{d8-d10}
   17528:	mov	r5, r2
   1752c:	vmov.f64	d9, d1
   17530:	vmov.f64	d8, d2
   17534:	mov	r6, r0
   17538:	vmov.f64	d10, d0
   1753c:	bl	11ef0 <floor@plt+0xb24>
   17540:	cmp	r4, #0
   17544:	beq	17554 <floor@plt+0x6188>
   17548:	vcmpe.f64	d8, #0.0
   1754c:	vmrs	APSR_nzcv, fpscr
   17550:	bls	175c8 <floor@plt+0x61fc>
   17554:	vcmpe.f64	d8, #0.0
   17558:	vmrs	APSR_nzcv, fpscr
   1755c:	ble	1756c <floor@plt+0x61a0>
   17560:	vcmpe.f64	d10, d9
   17564:	vmrs	APSR_nzcv, fpscr
   17568:	bgt	175c8 <floor@plt+0x61fc>
   1756c:	vcmpe.f64	d8, #0.0
   17570:	vmrs	APSR_nzcv, fpscr
   17574:	bpl	17584 <floor@plt+0x61b8>
   17578:	vcmpe.f64	d10, d9
   1757c:	vmrs	APSR_nzcv, fpscr
   17580:	bmi	175c8 <floor@plt+0x61fc>
   17584:	mov	r0, #56	; 0x38
   17588:	bl	28660 <_Znwj@@Base>
   1758c:	ldr	r3, [pc, #60]	; 175d0 <floor@plt+0x6204>
   17590:	ldr	ip, [pc, #60]	; 175d4 <floor@plt+0x6208>
   17594:	mov	r1, #0
   17598:	ldr	r2, [r3]
   1759c:	vstr	d10, [r0, #16]
   175a0:	vstr	d9, [r0, #24]
   175a4:	vstr	d8, [r0, #40]	; 0x28
   175a8:	str	r6, [r0, #8]
   175ac:	str	r5, [r0, #12]
   175b0:	str	r4, [r0, #32]
   175b4:	str	r5, [r0, #48]	; 0x30
   175b8:	str	ip, [r0]
   175bc:	str	r1, [r0, #52]	; 0x34
   175c0:	str	r2, [r0, #4]
   175c4:	str	r0, [r3]
   175c8:	vpop	{d8-d10}
   175cc:	pop	{r4, r5, r6, pc}
   175d0:			; <UNDEFINED> instruction: 0x000428b8
   175d4:	andeq	lr, r2, r8, lsl #17
   175d8:	push	{r4, lr}
   175dc:	mov	r4, r0
   175e0:	ldr	r0, [r0, #12]
   175e4:	ldr	r3, [pc, #44]	; 17618 <floor@plt+0x624c>
   175e8:	cmp	r0, #0
   175ec:	str	r3, [r4]
   175f0:	beq	175f8 <floor@plt+0x622c>
   175f4:	bl	1121c <_ZdaPv@plt>
   175f8:	ldr	r0, [r4, #16]
   175fc:	cmp	r0, #0
   17600:	beq	17608 <floor@plt+0x623c>
   17604:	bl	1121c <_ZdaPv@plt>
   17608:	add	r0, r4, #160	; 0xa0
   1760c:	bl	289cc <_ZdlPv@@Base+0x31c>
   17610:	mov	r0, r4
   17614:	pop	{r4, pc}
   17618:	andeq	lr, r2, r4, lsr #17
   1761c:	push	{r4, lr}
   17620:	mov	r4, r0
   17624:	ldr	r0, [r0, #172]	; 0xac
   17628:	ldr	r3, [pc, #48]	; 17660 <floor@plt+0x6294>
   1762c:	cmp	r0, #0
   17630:	str	r3, [r4]
   17634:	beq	17644 <floor@plt+0x6278>
   17638:	ldr	r3, [r0]
   1763c:	ldr	r3, [r3, #4]
   17640:	blx	r3
   17644:	mov	r0, r4
   17648:	bl	175d8 <floor@plt+0x620c>
   1764c:	mov	r0, r4
   17650:	pop	{r4, pc}
   17654:	mov	r0, r4
   17658:	bl	175d8 <floor@plt+0x620c>
   1765c:	bl	111ec <__cxa_end_cleanup@plt>
   17660:	andeq	lr, r2, r4, ror #17
   17664:	push	{r4, lr}
   17668:	mov	r4, r0
   1766c:	bl	1761c <floor@plt+0x6250>
   17670:	mov	r0, r4
   17674:	bl	286b0 <_ZdlPv@@Base>
   17678:	mov	r0, r4
   1767c:	pop	{r4, pc}
   17680:	mov	r0, r4
   17684:	bl	286b0 <_ZdlPv@@Base>
   17688:	bl	111ec <__cxa_end_cleanup@plt>
   1768c:	push	{r4, lr}
   17690:	mov	r4, r0
   17694:	bl	175d8 <floor@plt+0x620c>
   17698:	mov	r0, r4
   1769c:	bl	286b0 <_ZdlPv@@Base>
   176a0:	mov	r0, r4
   176a4:	pop	{r4, pc}
   176a8:	mov	r0, r4
   176ac:	bl	286b0 <_ZdlPv@@Base>
   176b0:	bl	111ec <__cxa_end_cleanup@plt>
   176b4:	ldr	r3, [r0, #8]
   176b8:	cmp	r3, #0
   176bc:	beq	176c8 <floor@plt+0x62fc>
   176c0:	mov	r0, #0
   176c4:	bx	lr
   176c8:	b	15e24 <floor@plt+0x4a58>
   176cc:	ldr	ip, [pc, #28]	; 176f0 <floor@plt+0x6324>
   176d0:	push	{lr}		; (str lr, [sp, #-4]!)
   176d4:	mov	lr, #0
   176d8:	str	r2, [r0, #8]
   176dc:	mov	r2, #1
   176e0:	str	r1, [r0, #16]
   176e4:	stm	r0, {ip, lr}
   176e8:	str	r2, [r0, #12]
   176ec:	pop	{pc}		; (ldr pc, [sp], #4)
   176f0:	strdeq	lr, [r2], -ip
   176f4:	push	{r4, r5, r6, r7, r8, lr}
   176f8:	mov	r7, r0
   176fc:	mov	r0, #12
   17700:	bl	28660 <_Znwj@@Base>
   17704:	ldr	r5, [pc, #100]	; 17770 <floor@plt+0x63a4>
   17708:	ldr	r6, [pc, #100]	; 17774 <floor@plt+0x63a8>
   1770c:	mov	r1, #10
   17710:	ldr	r2, [r5]
   17714:	mov	r3, r0
   17718:	str	r1, [r0, #8]
   1771c:	str	r6, [r3]
   17720:	str	r2, [r3, #4]
   17724:	mov	r0, #16
   17728:	str	r3, [r5]
   1772c:	bl	28660 <_Znwj@@Base>
   17730:	sub	r6, r6, #28
   17734:	mov	r3, #0
   17738:	mov	r4, r0
   1773c:	mov	r0, r7
   17740:	str	r6, [r4]
   17744:	str	r3, [r4, #4]
   17748:	bl	291f4 <_ZdlPv@@Base+0xb44>
   1774c:	ldr	r3, [r5]
   17750:	str	r0, [r4, #8]
   17754:	str	r0, [r4, #12]
   17758:	str	r3, [r4, #4]
   1775c:	str	r4, [r5]
   17760:	pop	{r4, r5, r6, r7, r8, pc}
   17764:	mov	r0, r4
   17768:	bl	286b0 <_ZdlPv@@Base>
   1776c:	bl	111ec <__cxa_end_cleanup@plt>
   17770:			; <UNDEFINED> instruction: 0x000428b8
   17774:	andeq	lr, r2, ip, ror #16
   17778:	ldr	ip, [pc, #164]	; 17824 <floor@plt+0x6458>
   1777c:	push	{r4, r5, r6, r7, r8, r9, lr}
   17780:	mov	r6, r0
   17784:	ldr	r5, [pc, #156]	; 17828 <floor@plt+0x645c>
   17788:	ldr	r4, [ip]
   1778c:	sub	sp, sp, #28
   17790:	ldr	r0, [r5]
   17794:	cmp	r4, #0
   17798:	mov	r7, r1
   1779c:	mov	r8, r2
   177a0:	mov	r9, r3
   177a4:	str	r0, [sp, #20]
   177a8:	bne	177bc <floor@plt+0x63f0>
   177ac:	b	17808 <floor@plt+0x643c>
   177b0:	ldr	r4, [r4, #4]
   177b4:	cmp	r4, #0
   177b8:	beq	17808 <floor@plt+0x643c>
   177bc:	ldr	r3, [r4]
   177c0:	add	r2, sp, #16
   177c4:	add	r1, sp, #12
   177c8:	ldr	r3, [r3, #16]
   177cc:	mov	r0, r4
   177d0:	blx	r3
   177d4:	cmp	r0, #0
   177d8:	beq	177b0 <floor@plt+0x63e4>
   177dc:	strd	r8, [sp]
   177e0:	mov	r3, r7
   177e4:	mov	r2, r6
   177e8:	ldrd	r0, [sp, #12]
   177ec:	bl	27510 <floor@plt+0x16144>
   177f0:	ldr	r2, [sp, #20]
   177f4:	ldr	r3, [r5]
   177f8:	cmp	r2, r3
   177fc:	bne	17820 <floor@plt+0x6454>
   17800:	add	sp, sp, #28
   17804:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17808:	mov	r3, r9
   1780c:	mov	r2, r8
   17810:	mov	r1, r7
   17814:	mov	r0, r6
   17818:	bl	27444 <floor@plt+0x16078>
   1781c:	b	177f0 <floor@plt+0x6424>
   17820:	bl	111e0 <__stack_chk_fail@plt>
   17824:			; <UNDEFINED> instruction: 0x000428b8
   17828:	andeq	r1, r4, r0, ror sp
   1782c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17830:	mov	r5, r0
   17834:	ldr	sl, [pc, #488]	; 17a24 <floor@plt+0x6658>
   17838:	ldr	r6, [pc, #488]	; 17a28 <floor@plt+0x665c>
   1783c:	ldr	r8, [pc, #488]	; 17a2c <floor@plt+0x6660>
   17840:	ldr	r7, [pc, #488]	; 17a30 <floor@plt+0x6664>
   17844:	sub	sp, sp, #28
   17848:	ldr	r3, [sl]
   1784c:	add	r9, r0, #20
   17850:	str	r3, [sp, #20]
   17854:	mov	r0, r9
   17858:	bl	28f98 <_ZdlPv@@Base+0x8e8>
   1785c:	ldr	r3, [r5, #16]
   17860:	add	r3, r3, #1
   17864:	str	r3, [r5, #16]
   17868:	ldr	r0, [r5, #8]
   1786c:	bl	11204 <getc@plt>
   17870:	cmp	r0, #13
   17874:	mov	r4, r0
   17878:	beq	17988 <floor@plt+0x65bc>
   1787c:	cmn	r4, #1
   17880:	beq	178e8 <floor@plt+0x651c>
   17884:	cmp	r4, #0
   17888:	blt	178bc <floor@plt+0x64f0>
   1788c:	ldrb	r3, [r6, r4]
   17890:	cmp	r3, #0
   17894:	beq	178bc <floor@plt+0x64f0>
   17898:	mov	r1, r4
   1789c:	mov	r0, sp
   178a0:	bl	27084 <floor@plt+0x15cb8>
   178a4:	mov	r3, r8
   178a8:	ldr	r2, [pc, #380]	; 17a2c <floor@plt+0x6660>
   178ac:	mov	r1, sp
   178b0:	mov	r0, r7
   178b4:	bl	17778 <floor@plt+0x63ac>
   178b8:	b	17868 <floor@plt+0x649c>
   178bc:	ldr	r3, [r5, #24]
   178c0:	ldr	r2, [r5, #28]
   178c4:	uxtb	fp, r4
   178c8:	cmp	r2, r3
   178cc:	ble	17978 <floor@plt+0x65ac>
   178d0:	ldr	r2, [r5, #20]
   178d4:	add	r1, r3, #1
   178d8:	cmp	r4, #10
   178dc:	str	r1, [r5, #24]
   178e0:	strb	fp, [r2, r3]
   178e4:	bne	17868 <floor@plt+0x649c>
   178e8:	ldr	r3, [r5, #24]
   178ec:	cmp	r3, #0
   178f0:	mov	r0, r3
   178f4:	beq	17960 <floor@plt+0x6594>
   178f8:	cmp	r3, #2
   178fc:	ble	17934 <floor@plt+0x6568>
   17900:	ldr	r2, [r5, #20]
   17904:	ldrb	r1, [r2]
   17908:	cmp	r1, #46	; 0x2e
   1790c:	bne	17934 <floor@plt+0x6568>
   17910:	ldrb	r1, [r2, #1]
   17914:	cmp	r1, #80	; 0x50
   17918:	bne	17934 <floor@plt+0x6568>
   1791c:	ldrb	r1, [r2, #2]
   17920:	cmp	r1, #83	; 0x53
   17924:	beq	179c0 <floor@plt+0x65f4>
   17928:	sub	r1, r1, #69	; 0x45
   1792c:	cmp	r1, #1
   17930:	bls	179c0 <floor@plt+0x65f4>
   17934:	ldr	r3, [r5, #28]
   17938:	cmp	r3, r0
   1793c:	ble	17a10 <floor@plt+0x6644>
   17940:	ldr	r3, [r5, #20]
   17944:	add	r1, r0, #1
   17948:	mov	r2, #0
   1794c:	str	r1, [r5, #24]
   17950:	strb	r2, [r3, r0]
   17954:	mov	r0, #1
   17958:	ldr	r3, [r5, #20]
   1795c:	str	r3, [r5, #32]
   17960:	ldr	r2, [sp, #20]
   17964:	ldr	r3, [sl]
   17968:	cmp	r2, r3
   1796c:	bne	17a20 <floor@plt+0x6654>
   17970:	add	sp, sp, #28
   17974:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17978:	mov	r0, r9
   1797c:	bl	28b34 <_ZdlPv@@Base+0x484>
   17980:	ldr	r3, [r5, #24]
   17984:	b	178d0 <floor@plt+0x6504>
   17988:	ldr	r0, [r5, #8]
   1798c:	bl	11204 <getc@plt>
   17990:	cmp	r0, #10
   17994:	mov	r4, r0
   17998:	beq	1788c <floor@plt+0x64c0>
   1799c:	mov	r1, #13
   179a0:	mov	r0, sp
   179a4:	bl	270a4 <floor@plt+0x15cd8>
   179a8:	mov	r3, r8
   179ac:	ldr	r2, [pc, #120]	; 17a2c <floor@plt+0x6660>
   179b0:	mov	r1, sp
   179b4:	mov	r0, r7
   179b8:	bl	17778 <floor@plt+0x63ac>
   179bc:	b	1787c <floor@plt+0x64b0>
   179c0:	cmp	r3, #3
   179c4:	beq	17854 <floor@plt+0x6488>
   179c8:	ldrb	r2, [r2, #3]
   179cc:	cmp	r2, #32
   179d0:	beq	17854 <floor@plt+0x6488>
   179d4:	cmp	r3, #3
   179d8:	bgt	179f0 <floor@plt+0x6624>
   179dc:	ldr	r1, [pc, #80]	; 17a34 <floor@plt+0x6668>
   179e0:	mov	r0, #98	; 0x62
   179e4:	bl	26c88 <floor@plt+0x158bc>
   179e8:	ldr	r3, [r5, #20]
   179ec:	ldrb	r2, [r3, #3]
   179f0:	cmp	r2, #10
   179f4:	beq	17854 <floor@plt+0x6488>
   179f8:	ldr	r3, [pc, #56]	; 17a38 <floor@plt+0x666c>
   179fc:	ldr	r3, [r3]
   17a00:	cmp	r3, #0
   17a04:	bne	17854 <floor@plt+0x6488>
   17a08:	ldr	r0, [r5, #24]
   17a0c:	b	17934 <floor@plt+0x6568>
   17a10:	mov	r0, r9
   17a14:	bl	28b34 <_ZdlPv@@Base+0x484>
   17a18:	ldr	r0, [r5, #24]
   17a1c:	b	17940 <floor@plt+0x6574>
   17a20:	bl	111e0 <__stack_chk_fail@plt>
   17a24:	andeq	r1, r4, r0, ror sp
   17a28:	andeq	r2, r4, ip, lsr r3
   17a2c:			; <UNDEFINED> instruction: 0x000454b8
   17a30:	andeq	lr, r2, r4, lsr #20
   17a34:	andeq	lr, r2, r4, asr #20
   17a38:	andeq	r2, r4, ip, lsl #18
   17a3c:	ldr	r3, [r0, #32]
   17a40:	push	{r4, lr}
   17a44:	mov	r4, r0
   17a48:	ldrb	r2, [r3]
   17a4c:	cmp	r2, #0
   17a50:	beq	17a64 <floor@plt+0x6698>
   17a54:	add	r2, r3, #1
   17a58:	str	r2, [r4, #32]
   17a5c:	ldrb	r0, [r3]
   17a60:	pop	{r4, pc}
   17a64:	bl	1782c <floor@plt+0x6460>
   17a68:	cmp	r0, #0
   17a6c:	ldrne	r3, [r4, #32]
   17a70:	bne	17a54 <floor@plt+0x6688>
   17a74:	mvn	r0, #0
   17a78:	pop	{r4, pc}
   17a7c:	ldr	r3, [r0, #32]
   17a80:	ldrb	r3, [r3]
   17a84:	cmp	r3, #0
   17a88:	beq	17a94 <floor@plt+0x66c8>
   17a8c:	mov	r0, r3
   17a90:	bx	lr
   17a94:	push	{r4, lr}
   17a98:	mov	r4, r0
   17a9c:	bl	1782c <floor@plt+0x6460>
   17aa0:	cmp	r0, #0
   17aa4:	ldrne	r3, [r4, #32]
   17aa8:	ldrbne	r3, [r3]
   17aac:	movne	r0, r3
   17ab0:	mvneq	r0, #0
   17ab4:	pop	{r4, pc}
   17ab8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17abc:	sub	sp, sp, #52	; 0x34
   17ac0:	ldr	fp, [pc, #420]	; 17c6c <floor@plt+0x68a0>
   17ac4:	ldr	r3, [fp]
   17ac8:	str	r3, [sp, #44]	; 0x2c
   17acc:	bl	291f4 <_ZdlPv@@Base+0xb44>
   17ad0:	ldrb	r3, [r0]
   17ad4:	mov	r7, r0
   17ad8:	cmp	r3, #0
   17adc:	beq	17c54 <floor@plt+0x6888>
   17ae0:	mov	r8, #0
   17ae4:	ldr	r9, [pc, #388]	; 17c70 <floor@plt+0x68a4>
   17ae8:	mov	r6, r8
   17aec:	mov	r4, r8
   17af0:	b	17b10 <floor@plt+0x6744>
   17af4:	strb	r3, [r7, r6]
   17af8:	ldrb	r3, [r7, r5]
   17afc:	mov	r4, r5
   17b00:	mov	r8, r5
   17b04:	add	r6, r6, #1
   17b08:	cmp	r3, #0
   17b0c:	beq	17b68 <floor@plt+0x679c>
   17b10:	cmp	r3, #36	; 0x24
   17b14:	add	r5, r8, #1
   17b18:	bne	17af4 <floor@plt+0x6728>
   17b1c:	add	r4, r7, r4
   17b20:	ldrb	r2, [r4, #1]
   17b24:	ldrb	r2, [r9, r2]
   17b28:	cmp	r2, #0
   17b2c:	addne	r1, r7, r5
   17b30:	movne	r2, #0
   17b34:	beq	17af4 <floor@plt+0x6728>
   17b38:	mov	sl, r1
   17b3c:	ldrb	r3, [r1], #1
   17b40:	mov	r4, r5
   17b44:	ldrb	r0, [r9, r3]
   17b48:	cmp	r0, #0
   17b4c:	beq	17b90 <floor@plt+0x67c4>
   17b50:	cmp	r2, #32
   17b54:	add	r5, r5, #1
   17b58:	addle	r2, r2, r2, lsl #2
   17b5c:	addle	r3, r3, r2, lsl #1
   17b60:	suble	r2, r3, #48	; 0x30
   17b64:	b	17b38 <floor@plt+0x676c>
   17b68:	add	r6, r7, r6
   17b6c:	mov	r3, #0
   17b70:	strb	r3, [r6]
   17b74:	ldr	r2, [sp, #44]	; 0x2c
   17b78:	ldr	r3, [fp]
   17b7c:	mov	r0, r7
   17b80:	cmp	r2, r3
   17b84:	bne	17c5c <floor@plt+0x6890>
   17b88:	add	sp, sp, #52	; 0x34
   17b8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b90:	cmp	r2, #32
   17b94:	bgt	17bb4 <floor@plt+0x67e8>
   17b98:	cmp	r2, #0
   17b9c:	addgt	r2, r2, #127	; 0x7f
   17ba0:	strbgt	r2, [r7, r6]
   17ba4:	ldrbgt	r3, [sl]
   17ba8:	addgt	r6, r6, #1
   17bac:	mov	r8, r5
   17bb0:	b	17b08 <floor@plt+0x673c>
   17bb4:	add	r0, sp, #12
   17bb8:	bl	28870 <_ZdlPv@@Base+0x1c0>
   17bbc:	cmp	r5, r8
   17bc0:	ble	17c24 <floor@plt+0x6858>
   17bc4:	sub	r3, r7, #1
   17bc8:	sub	r8, r8, #1
   17bcc:	add	r3, r3, r5
   17bd0:	add	r8, r7, r8
   17bd4:	str	r3, [sp, #4]
   17bd8:	b	17bfc <floor@plt+0x6830>
   17bdc:	ldr	r1, [sp, #4]
   17be0:	ldr	r2, [sp, #12]
   17be4:	cmp	r1, r8
   17be8:	add	r1, r3, #1
   17bec:	str	r1, [sp, #16]
   17bf0:	ldr	r1, [sp]
   17bf4:	strb	r1, [r2, r3]
   17bf8:	beq	17c24 <floor@plt+0x6858>
   17bfc:	ldr	r3, [sp, #16]
   17c00:	ldr	r2, [sp, #20]
   17c04:	ldrb	r1, [r8, #1]!
   17c08:	cmp	r3, r2
   17c0c:	str	r1, [sp]
   17c10:	blt	17bdc <floor@plt+0x6810>
   17c14:	add	r0, sp, #12
   17c18:	bl	28b34 <_ZdlPv@@Base+0x484>
   17c1c:	ldr	r3, [sp, #16]
   17c20:	b	17bdc <floor@plt+0x6810>
   17c24:	add	r0, sp, #24
   17c28:	ldr	r1, [sp, #12]
   17c2c:	bl	27058 <floor@plt+0x15c8c>
   17c30:	ldr	r3, [pc, #60]	; 17c74 <floor@plt+0x68a8>
   17c34:	add	r1, sp, #24
   17c38:	mov	r2, r3
   17c3c:	ldr	r0, [pc, #52]	; 17c78 <floor@plt+0x68ac>
   17c40:	bl	17778 <floor@plt+0x63ac>
   17c44:	add	r0, sp, #12
   17c48:	bl	289cc <_ZdlPv@@Base+0x31c>
   17c4c:	ldrb	r3, [sl]
   17c50:	b	17bac <floor@plt+0x67e0>
   17c54:	mov	r6, r0
   17c58:	b	17b6c <floor@plt+0x67a0>
   17c5c:	bl	111e0 <__stack_chk_fail@plt>
   17c60:	add	r0, sp, #12
   17c64:	bl	289cc <_ZdlPv@@Base+0x31c>
   17c68:	bl	111ec <__cxa_end_cleanup@plt>
   17c6c:	andeq	r1, r4, r0, ror sp
   17c70:			; <UNDEFINED> instruction: 0x00044db8
   17c74:			; <UNDEFINED> instruction: 0x000454b8
   17c78:	andeq	lr, r2, r4, lsr #22
   17c7c:	push	{r4, lr}
   17c80:	mov	r4, r0
   17c84:	ldr	r0, [pc, #72]	; 17cd4 <floor@plt+0x6908>
   17c88:	mov	ip, #0
   17c8c:	cmp	r2, #0
   17c90:	str	r2, [r4, #20]
   17c94:	stm	r4, {r0, ip}
   17c98:	str	ip, [r4, #16]
   17c9c:	ble	17cbc <floor@plt+0x68f0>
   17ca0:	sub	r3, r3, #4
   17ca4:	add	r2, r3, r2, lsl #2
   17ca8:	add	ip, r4, #20
   17cac:	ldr	lr, [r3, #4]!
   17cb0:	cmp	r3, r2
   17cb4:	str	lr, [ip, #4]!
   17cb8:	bne	17cac <floor@plt+0x68e0>
   17cbc:	mov	r0, r1
   17cc0:	bl	17ab8 <floor@plt+0x66ec>
   17cc4:	str	r0, [r4, #8]
   17cc8:	str	r0, [r4, #12]
   17ccc:	mov	r0, r4
   17cd0:	pop	{r4, pc}
   17cd4:	andeq	lr, r2, r0, ror #15
   17cd8:	push	{r4, r5, r6, r7, r8, lr}
   17cdc:	mov	r4, r0
   17ce0:	ldr	r3, [pc, #84]	; 17d3c <floor@plt+0x6970>
   17ce4:	mov	r5, #0
   17ce8:	add	r6, r0, #160	; 0xa0
   17cec:	str	r3, [r0]
   17cf0:	mov	r8, r1
   17cf4:	mov	r0, r6
   17cf8:	str	r5, [r4, #4]
   17cfc:	str	r5, [r4, #8]
   17d00:	mov	r7, r2
   17d04:	bl	28870 <_ZdlPv@@Base+0x1c0>
   17d08:	str	r5, [r4, #24]
   17d0c:	mov	r0, r8
   17d10:	bl	17ab8 <floor@plt+0x66ec>
   17d14:	str	r0, [r4, #12]
   17d18:	str	r5, [r4, #20]
   17d1c:	mov	r0, r7
   17d20:	bl	291f4 <_ZdlPv@@Base+0xb44>
   17d24:	str	r0, [r4, #16]
   17d28:	mov	r0, r4
   17d2c:	pop	{r4, r5, r6, r7, r8, pc}
   17d30:	mov	r0, r6
   17d34:	bl	289cc <_ZdlPv@@Base+0x31c>
   17d38:	bl	111ec <__cxa_end_cleanup@plt>
   17d3c:	andeq	lr, r2, r4, lsr #17
   17d40:	mov	ip, r2
   17d44:	push	{r4, r5, r6, lr}
   17d48:	mov	r2, r3
   17d4c:	mov	r5, r1
   17d50:	mov	r1, ip
   17d54:	mov	r4, r0
   17d58:	bl	17cd8 <floor@plt+0x690c>
   17d5c:	ldr	r3, [pc, #12]	; 17d70 <floor@plt+0x69a4>
   17d60:	str	r5, [r4, #172]	; 0xac
   17d64:	str	r3, [r4]
   17d68:	mov	r0, r4
   17d6c:	pop	{r4, r5, r6, pc}
   17d70:	andeq	lr, r2, r4, ror #17
   17d74:	push	{r4, lr}
   17d78:	mov	r4, r0
   17d7c:	bl	17cd8 <floor@plt+0x690c>
   17d80:	ldr	r3, [pc, #8]	; 17d90 <floor@plt+0x69c4>
   17d84:	mov	r0, r4
   17d88:	str	r3, [r4]
   17d8c:	pop	{r4, pc}
   17d90:	andeq	lr, r2, r4, asr #17
   17d94:	push	{r4, r5, r6, lr}
   17d98:	mov	r5, r0
   17d9c:	mov	r0, #172	; 0xac
   17da0:	mov	r6, r1
   17da4:	bl	28660 <_Znwj@@Base>
   17da8:	mov	r2, r6
   17dac:	mov	r1, r5
   17db0:	mov	r4, r0
   17db4:	bl	17cd8 <floor@plt+0x690c>
   17db8:	ldr	r3, [pc, #28]	; 17ddc <floor@plt+0x6a10>
   17dbc:	ldr	r1, [pc, #28]	; 17de0 <floor@plt+0x6a14>
   17dc0:	ldr	r2, [r3]
   17dc4:	str	r4, [r3]
   17dc8:	stm	r4, {r1, r2}
   17dcc:	pop	{r4, r5, r6, pc}
   17dd0:	mov	r0, r4
   17dd4:	bl	286b0 <_ZdlPv@@Base>
   17dd8:	bl	111ec <__cxa_end_cleanup@plt>
   17ddc:			; <UNDEFINED> instruction: 0x000428b8
   17de0:	andeq	lr, r2, r4, asr #17
   17de4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17de8:	sub	sp, sp, #12
   17dec:	ldr	r0, [pc, #508]	; 17ff0 <floor@plt+0x6c24>
   17df0:	bl	28f98 <_ZdlPv@@Base+0x8e8>
   17df4:	bl	16798 <floor@plt+0x53cc>
   17df8:	sub	r3, r0, #9
   17dfc:	cmp	r0, #32
   17e00:	cmpne	r3, #1
   17e04:	bhi	17fe8 <floor@plt+0x6c1c>
   17e08:	bl	16798 <floor@plt+0x53cc>
   17e0c:	sub	r3, r0, #9
   17e10:	cmp	r0, #32
   17e14:	cmpne	r3, #1
   17e18:	mov	r5, r0
   17e1c:	bls	17e08 <floor@plt+0x6a3c>
   17e20:	cmn	r5, #1
   17e24:	beq	17fc8 <floor@plt+0x6bfc>
   17e28:	ldr	fp, [pc, #452]	; 17ff4 <floor@plt+0x6c28>
   17e2c:	mov	sl, #0
   17e30:	uxtb	r1, r5
   17e34:	ldr	r0, [pc, #444]	; 17ff8 <floor@plt+0x6c2c>
   17e38:	bl	28ab8 <_ZdlPv@@Base+0x408>
   17e3c:	ldr	r8, [pc, #440]	; 17ffc <floor@plt+0x6c30>
   17e40:	add	r7, fp, #20
   17e44:	str	sl, [sp, #4]
   17e48:	mov	r6, sl
   17e4c:	b	17e88 <floor@plt+0x6abc>
   17e50:	mov	r1, r8
   17e54:	mov	r0, #1328	; 0x530
   17e58:	bl	26c88 <floor@plt+0x158bc>
   17e5c:	cmp	sl, #3
   17e60:	beq	17f88 <floor@plt+0x6bbc>
   17e64:	ldr	r2, [fp, #24]
   17e68:	ldr	r1, [fp, #28]
   17e6c:	uxtb	r4, r4
   17e70:	cmp	r2, r1
   17e74:	bge	17f24 <floor@plt+0x6b58>
   17e78:	ldr	r1, [fp, #20]
   17e7c:	add	r0, r2, #1
   17e80:	str	r0, [fp, #24]
   17e84:	strb	r4, [r1, r2]
   17e88:	bl	16798 <floor@plt+0x53cc>
   17e8c:	cmn	r0, #1
   17e90:	mov	r4, r0
   17e94:	beq	17fa8 <floor@plt+0x6bdc>
   17e98:	cmp	r0, #10
   17e9c:	beq	17ef0 <floor@plt+0x6b24>
   17ea0:	cmp	r6, #0
   17ea4:	bne	17ecc <floor@plt+0x6b00>
   17ea8:	ldr	r2, [fp, #12]
   17eac:	ldr	r0, [fp, #16]
   17eb0:	uxtb	r9, r4
   17eb4:	cmp	r2, r0
   17eb8:	bge	17f54 <floor@plt+0x6b88>
   17ebc:	ldr	r0, [fp, #8]
   17ec0:	add	ip, r2, #1
   17ec4:	str	ip, [fp, #12]
   17ec8:	strb	r9, [r0, r2]
   17ecc:	cmp	sl, #1
   17ed0:	beq	17f34 <floor@plt+0x6b68>
   17ed4:	cmp	sl, #0
   17ed8:	beq	17f04 <floor@plt+0x6b38>
   17edc:	cmp	sl, #2
   17ee0:	bne	17e50 <floor@plt+0x6a84>
   17ee4:	subs	sl, r4, #10
   17ee8:	movne	sl, #1
   17eec:	b	17e64 <floor@plt+0x6a98>
   17ef0:	cmp	sl, #1
   17ef4:	beq	17f48 <floor@plt+0x6b7c>
   17ef8:	cmp	sl, #0
   17efc:	mov	r6, #1
   17f00:	bne	17edc <floor@plt+0x6b10>
   17f04:	cmp	r5, #123	; 0x7b
   17f08:	beq	17f64 <floor@plt+0x6b98>
   17f0c:	cmp	r4, r5
   17f10:	beq	17f88 <floor@plt+0x6bbc>
   17f14:	sub	sl, r4, #34	; 0x22
   17f18:	clz	sl, sl
   17f1c:	lsr	sl, sl, #5
   17f20:	b	17e64 <floor@plt+0x6a98>
   17f24:	mov	r0, r7
   17f28:	bl	28b34 <_ZdlPv@@Base+0x484>
   17f2c:	ldr	r2, [fp, #24]
   17f30:	b	17e78 <floor@plt+0x6aac>
   17f34:	cmp	r4, #34	; 0x22
   17f38:	beq	17f4c <floor@plt+0x6b80>
   17f3c:	cmp	r4, #92	; 0x5c
   17f40:	moveq	sl, #2
   17f44:	b	17e64 <floor@plt+0x6a98>
   17f48:	mov	r6, sl
   17f4c:	mov	sl, #0
   17f50:	b	17e64 <floor@plt+0x6a98>
   17f54:	ldr	r0, [pc, #156]	; 17ff8 <floor@plt+0x6c2c>
   17f58:	bl	28b34 <_ZdlPv@@Base+0x484>
   17f5c:	ldr	r2, [fp, #12]
   17f60:	b	17ebc <floor@plt+0x6af0>
   17f64:	cmp	r4, #123	; 0x7b
   17f68:	beq	17f94 <floor@plt+0x6bc8>
   17f6c:	cmp	r4, #125	; 0x7d
   17f70:	bne	17f14 <floor@plt+0x6b48>
   17f74:	ldr	r3, [sp, #4]
   17f78:	sub	r3, r3, #1
   17f7c:	cmn	r3, #1
   17f80:	str	r3, [sp, #4]
   17f84:	bne	17f4c <floor@plt+0x6b80>
   17f88:	mov	r0, #1
   17f8c:	add	sp, sp, #12
   17f90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17f94:	ldr	r3, [sp, #4]
   17f98:	mov	sl, #0
   17f9c:	add	r3, r3, #1
   17fa0:	str	r3, [sp, #4]
   17fa4:	b	17e64 <floor@plt+0x6a98>
   17fa8:	ldr	r3, [pc, #80]	; 18000 <floor@plt+0x6c34>
   17fac:	ldr	r0, [pc, #80]	; 18004 <floor@plt+0x6c38>
   17fb0:	mov	r2, r3
   17fb4:	mov	r1, r3
   17fb8:	bl	17778 <floor@plt+0x63ac>
   17fbc:	mov	r0, #0
   17fc0:	add	sp, sp, #12
   17fc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17fc8:	ldr	r3, [pc, #48]	; 18000 <floor@plt+0x6c34>
   17fcc:	ldr	r0, [pc, #52]	; 18008 <floor@plt+0x6c3c>
   17fd0:	mov	r2, r3
   17fd4:	mov	r1, r3
   17fd8:	bl	17778 <floor@plt+0x63ac>
   17fdc:	mov	r0, #0
   17fe0:	add	sp, sp, #12
   17fe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17fe8:	mov	r5, r0
   17fec:	b	17e20 <floor@plt+0x6a54>
   17ff0:	andeq	r2, r4, ip, asr #17
   17ff4:			; <UNDEFINED> instruction: 0x000428b8
   17ff8:	andeq	r2, r4, r0, asr #17
   17ffc:	andeq	lr, r2, r4, ror #20
   18000:			; <UNDEFINED> instruction: 0x000454b8
   18004:	andeq	lr, r2, ip, asr fp
   18008:	andeq	lr, r2, r8, asr #22
   1800c:	push	{r4, r5, r6, r7, r8, lr}
   18010:	bl	16828 <floor@plt+0x545c>
   18014:	cmp	r0, #32
   18018:	bne	1802c <floor@plt+0x6c60>
   1801c:	bl	16798 <floor@plt+0x53cc>
   18020:	bl	16828 <floor@plt+0x545c>
   18024:	cmp	r0, #32
   18028:	beq	1801c <floor@plt+0x6c50>
   1802c:	cmn	r0, #1
   18030:	beq	18048 <floor@plt+0x6c7c>
   18034:	ldr	r3, [pc, #408]	; 181d4 <floor@plt+0x6e08>
   18038:	uxtb	r4, r0
   1803c:	ldrb	r3, [r3, r4]
   18040:	cmp	r3, #0
   18044:	bne	18098 <floor@plt+0x6ccc>
   18048:	bl	17de4 <floor@plt+0x6a18>
   1804c:	cmp	r0, #0
   18050:	popeq	{r4, r5, r6, r7, r8, pc}
   18054:	ldr	r4, [pc, #380]	; 181d8 <floor@plt+0x6e0c>
   18058:	ldr	r3, [r4, #24]
   1805c:	ldr	r2, [r4, #28]
   18060:	cmp	r3, r2
   18064:	bge	18088 <floor@plt+0x6cbc>
   18068:	ldr	r2, [r4, #20]
   1806c:	add	r0, r3, #1
   18070:	mov	r1, #0
   18074:	str	r0, [r4, #24]
   18078:	strb	r1, [r2, r3]
   1807c:	ldr	r0, [r4, #20]
   18080:	pop	{r4, r5, r6, r7, r8, lr}
   18084:	b	291f4 <_ZdlPv@@Base+0xb44>
   18088:	add	r0, r4, #20
   1808c:	bl	28b34 <_ZdlPv@@Base+0x484>
   18090:	ldr	r3, [r4, #24]
   18094:	b	18068 <floor@plt+0x6c9c>
   18098:	bl	16798 <floor@plt+0x53cc>
   1809c:	mov	r1, r4
   180a0:	ldr	r4, [pc, #304]	; 181d8 <floor@plt+0x6e0c>
   180a4:	ldr	r0, [pc, #304]	; 181dc <floor@plt+0x6e10>
   180a8:	bl	28ab8 <_ZdlPv@@Base+0x408>
   180ac:	ldr	r6, [pc, #300]	; 181e0 <floor@plt+0x6e14>
   180b0:	add	r7, r4, #20
   180b4:	b	180c8 <floor@plt+0x6cfc>
   180b8:	ldr	r2, [r4, #20]
   180bc:	add	r1, r3, #1
   180c0:	str	r1, [r4, #24]
   180c4:	strb	r5, [r2, r3]
   180c8:	bl	16828 <floor@plt+0x545c>
   180cc:	cmn	r0, #1
   180d0:	uxtb	r5, r0
   180d4:	beq	18118 <floor@plt+0x6d4c>
   180d8:	ldrb	r3, [r6, r5]
   180dc:	subs	r0, r0, #95	; 0x5f
   180e0:	movne	r0, #1
   180e4:	cmp	r3, #0
   180e8:	movne	r0, #0
   180ec:	cmp	r0, #0
   180f0:	bne	18118 <floor@plt+0x6d4c>
   180f4:	bl	16798 <floor@plt+0x53cc>
   180f8:	ldr	r3, [r4, #24]
   180fc:	ldr	r2, [r4, #28]
   18100:	cmp	r3, r2
   18104:	blt	180b8 <floor@plt+0x6cec>
   18108:	mov	r0, r7
   1810c:	bl	28b34 <_ZdlPv@@Base+0x484>
   18110:	ldr	r3, [r4, #24]
   18114:	b	180b8 <floor@plt+0x6cec>
   18118:	ldr	r1, [pc, #188]	; 181dc <floor@plt+0x6e10>
   1811c:	sub	r0, r1, #12
   18120:	bl	289ec <_ZdlPv@@Base+0x33c>
   18124:	ldr	r3, [r4, #24]
   18128:	ldr	r2, [r4, #28]
   1812c:	cmp	r3, r2
   18130:	bge	181c4 <floor@plt+0x6df8>
   18134:	ldr	r2, [r4, #20]
   18138:	add	r0, r3, #1
   1813c:	mov	r1, #0
   18140:	str	r0, [r4, #24]
   18144:	strb	r1, [r2, r3]
   18148:	ldr	r0, [pc, #148]	; 181e4 <floor@plt+0x6e18>
   1814c:	ldr	r1, [r4, #20]
   18150:	bl	1649c <floor@plt+0x50d0>
   18154:	cmp	r0, #0
   18158:	bne	18080 <floor@plt+0x6cb4>
   1815c:	ldr	r3, [r4, #24]
   18160:	subs	r5, r3, #2
   18164:	bmi	18048 <floor@plt+0x6c7c>
   18168:	ldr	r7, [pc, #120]	; 181e8 <floor@plt+0x6e1c>
   1816c:	ldr	r6, [pc, #120]	; 181ec <floor@plt+0x6e20>
   18170:	b	18178 <floor@plt+0x6dac>
   18174:	ldr	r3, [r4, #24]
   18178:	cmp	r5, r3
   1817c:	mov	r1, r6
   18180:	mov	r0, #98	; 0x62
   18184:	blt	1818c <floor@plt+0x6dc0>
   18188:	bl	26c88 <floor@plt+0x158bc>
   1818c:	ldr	r3, [r4, #20]
   18190:	mov	r0, #12
   18194:	ldrb	r8, [r3, r5]
   18198:	bl	28660 <_Znwj@@Base>
   1819c:	sub	r5, r5, #1
   181a0:	ldr	r2, [r4]
   181a4:	mov	r3, #0
   181a8:	cmn	r5, #1
   181ac:	str	r8, [r0, #8]
   181b0:	str	r7, [r0]
   181b4:	str	r2, [r0, #4]
   181b8:	stm	r4, {r0, r3}
   181bc:	bne	18174 <floor@plt+0x6da8>
   181c0:	b	18048 <floor@plt+0x6c7c>
   181c4:	ldr	r0, [pc, #16]	; 181dc <floor@plt+0x6e10>
   181c8:	bl	28b34 <_ZdlPv@@Base+0x484>
   181cc:	ldr	r3, [r4, #24]
   181d0:	b	18134 <floor@plt+0x6d68>
   181d4:			; <UNDEFINED> instruction: 0x00044ab8
   181d8:			; <UNDEFINED> instruction: 0x000428b8
   181dc:	andeq	r2, r4, ip, asr #17
   181e0:			; <UNDEFINED> instruction: 0x00044fb8
   181e4:	ldrdeq	r2, [r4], -r8
   181e8:	andeq	lr, r2, ip, ror #16
   181ec:	andeq	lr, r2, r4, asr #20
   181f0:	push	{r4, r5, lr}
   181f4:	sub	sp, sp, #20
   181f8:	ldr	r5, [pc, #304]	; 18330 <floor@plt+0x6f64>
   181fc:	ldr	r3, [r0, #48]	; 0x30
   18200:	ldr	r2, [r5]
   18204:	cmp	r3, #0
   18208:	str	r2, [sp, #12]
   1820c:	beq	18324 <floor@plt+0x6f58>
   18210:	ldrb	r2, [r3]
   18214:	mov	r4, r0
   18218:	cmp	r2, #0
   1821c:	bne	182e8 <floor@plt+0x6f1c>
   18220:	ldr	r3, [r0, #52]	; 0x34
   18224:	cmp	r3, #0
   18228:	beq	182c4 <floor@plt+0x6ef8>
   1822c:	mov	r1, sp
   18230:	ldr	r0, [r0, #8]
   18234:	bl	11ed0 <floor@plt+0xb04>
   18238:	cmp	r0, #0
   1823c:	beq	182f8 <floor@plt+0x6f2c>
   18240:	vldr	d7, [sp]
   18244:	vldr	d6, [r4, #40]	; 0x28
   18248:	ldr	r3, [r4, #32]
   1824c:	ldr	r0, [r4, #8]
   18250:	cmp	r3, #0
   18254:	vmulne.f64	d7, d7, d6
   18258:	vaddeq.f64	d7, d7, d6
   1825c:	vmov.f64	d0, d7
   18260:	vstr	d7, [sp]
   18264:	bl	11ef0 <floor@plt+0xb24>
   18268:	vldr	d6, [r4, #16]
   1826c:	vldr	d7, [r4, #24]
   18270:	vcmpe.f64	d6, d7
   18274:	vmrs	APSR_nzcv, fpscr
   18278:	bhi	1828c <floor@plt+0x6ec0>
   1827c:	vldr	d5, [sp]
   18280:	vcmpe.f64	d7, d5
   18284:	vmrs	APSR_nzcv, fpscr
   18288:	bmi	18314 <floor@plt+0x6f48>
   1828c:	vcmpe.f64	d6, d7
   18290:	vmrs	APSR_nzcv, fpscr
   18294:	blt	182a8 <floor@plt+0x6edc>
   18298:	vldr	d6, [sp]
   1829c:	vcmpe.f64	d7, d6
   182a0:	vmrs	APSR_nzcv, fpscr
   182a4:	bgt	18314 <floor@plt+0x6f48>
   182a8:	ldr	r3, [r4, #12]
   182ac:	mov	r2, #0
   182b0:	str	r3, [r4, #48]	; 0x30
   182b4:	str	r2, [r4, #52]	; 0x34
   182b8:	ldrb	r2, [r3]
   182bc:	cmp	r2, #0
   182c0:	bne	182e8 <floor@plt+0x6f1c>
   182c4:	mov	r0, #10
   182c8:	mov	r3, #1
   182cc:	str	r3, [r4, #52]	; 0x34
   182d0:	ldr	r2, [sp, #12]
   182d4:	ldr	r3, [r5]
   182d8:	cmp	r2, r3
   182dc:	bne	1832c <floor@plt+0x6f60>
   182e0:	add	sp, sp, #20
   182e4:	pop	{r4, r5, pc}
   182e8:	add	r2, r3, #1
   182ec:	str	r2, [r4, #48]	; 0x30
   182f0:	ldrb	r0, [r3]
   182f4:	b	182d0 <floor@plt+0x6f04>
   182f8:	ldr	r3, [pc, #52]	; 18334 <floor@plt+0x6f68>
   182fc:	ldr	r0, [pc, #52]	; 18338 <floor@plt+0x6f6c>
   18300:	mov	r2, r3
   18304:	mov	r1, r3
   18308:	bl	17778 <floor@plt+0x63ac>
   1830c:	mvn	r0, #0
   18310:	b	182d0 <floor@plt+0x6f04>
   18314:	mov	r3, #0
   18318:	str	r3, [r4, #48]	; 0x30
   1831c:	mvn	r0, #0
   18320:	b	182d0 <floor@plt+0x6f04>
   18324:	mvn	r0, #0
   18328:	b	182d0 <floor@plt+0x6f04>
   1832c:	bl	111e0 <__stack_chk_fail@plt>
   18330:	andeq	r1, r4, r0, ror sp
   18334:			; <UNDEFINED> instruction: 0x000454b8
   18338:	andeq	lr, r2, r8, ror fp
   1833c:	push	{r4, r5, r6, r7, r8, lr}
   18340:	sub	sp, sp, #40	; 0x28
   18344:	ldr	r6, [pc, #204]	; 18418 <floor@plt+0x704c>
   18348:	mov	r7, r0
   1834c:	mov	r5, #0
   18350:	ldr	r3, [r6]
   18354:	str	r3, [sp, #36]	; 0x24
   18358:	bl	112e8 <__errno_location@plt>
   1835c:	ldr	r1, [pc, #184]	; 1841c <floor@plt+0x7050>
   18360:	str	r5, [r0]
   18364:	mov	r4, r0
   18368:	mov	r0, r7
   1836c:	bl	11318 <fopen64@plt>
   18370:	subs	r8, r0, #0
   18374:	beq	183d0 <floor@plt+0x7004>
   18378:	mov	r0, #36	; 0x24
   1837c:	bl	28660 <_Znwj@@Base>
   18380:	ldr	r3, [pc, #152]	; 18420 <floor@plt+0x7054>
   18384:	mov	r4, r0
   18388:	stmib	r0, {r5, r8}
   1838c:	add	r0, r0, #20
   18390:	str	r7, [r4, #12]
   18394:	str	r5, [r4, #16]
   18398:	str	r3, [r4]
   1839c:	bl	28870 <_ZdlPv@@Base+0x1c0>
   183a0:	ldr	r3, [pc, #124]	; 18424 <floor@plt+0x7058>
   183a4:	ldr	r1, [pc, #124]	; 18428 <floor@plt+0x705c>
   183a8:	ldr	r2, [r3]
   183ac:	str	r1, [r4, #32]
   183b0:	str	r2, [r4, #4]
   183b4:	str	r4, [r3]
   183b8:	ldr	r2, [sp, #36]	; 0x24
   183bc:	ldr	r3, [r6]
   183c0:	cmp	r2, r3
   183c4:	bne	18408 <floor@plt+0x703c>
   183c8:	add	sp, sp, #40	; 0x28
   183cc:	pop	{r4, r5, r6, r7, r8, pc}
   183d0:	mov	r1, r7
   183d4:	mov	r0, sp
   183d8:	bl	27058 <floor@plt+0x15c8c>
   183dc:	ldr	r0, [r4]
   183e0:	bl	11114 <strerror@plt>
   183e4:	mov	r1, r0
   183e8:	add	r0, sp, #16
   183ec:	bl	27058 <floor@plt+0x15c8c>
   183f0:	add	r2, sp, #16
   183f4:	mov	r1, sp
   183f8:	ldr	r3, [pc, #44]	; 1842c <floor@plt+0x7060>
   183fc:	ldr	r0, [pc, #44]	; 18430 <floor@plt+0x7064>
   18400:	bl	17778 <floor@plt+0x63ac>
   18404:	b	183b8 <floor@plt+0x6fec>
   18408:	bl	111e0 <__stack_chk_fail@plt>
   1840c:	mov	r0, r4
   18410:	bl	286b0 <_ZdlPv@@Base>
   18414:	bl	111ec <__cxa_end_cleanup@plt>
   18418:	andeq	r1, r4, r0, ror sp
   1841c:	muleq	r2, r8, ip
   18420:	andeq	lr, r2, r8, lsl r8
   18424:			; <UNDEFINED> instruction: 0x000428b8
   18428:	andeq	r0, r3, r8, asr r3
   1842c:			; <UNDEFINED> instruction: 0x000454b8
   18430:	andeq	lr, r2, r4, lsr #23
   18434:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18438:	sub	sp, sp, #40	; 0x28
   1843c:	ldr	r6, [pc, #236]	; 18530 <floor@plt+0x7164>
   18440:	mov	r5, r0
   18444:	mov	r8, r1
   18448:	ldr	r3, [r6]
   1844c:	mov	r9, r2
   18450:	str	r3, [sp, #36]	; 0x24
   18454:	bl	112e8 <__errno_location@plt>
   18458:	mov	r7, #0
   1845c:	ldr	r1, [pc, #208]	; 18534 <floor@plt+0x7168>
   18460:	str	r7, [r0]
   18464:	mov	r4, r0
   18468:	mov	r0, r5
   1846c:	bl	11318 <fopen64@plt>
   18470:	subs	sl, r0, #0
   18474:	beq	184e8 <floor@plt+0x711c>
   18478:	mov	r0, #20
   1847c:	bl	28660 <_Znwj@@Base>
   18480:	ldr	r2, [pc, #176]	; 18538 <floor@plt+0x716c>
   18484:	mov	r3, #1
   18488:	mov	r4, r0
   1848c:	str	r5, [r0, #8]
   18490:	str	r7, [r0, #4]
   18494:	str	r2, [r4]
   18498:	mov	r0, #176	; 0xb0
   1849c:	str	sl, [r4, #16]
   184a0:	str	r3, [r4, #12]
   184a4:	bl	28660 <_Znwj@@Base>
   184a8:	mov	r2, r9
   184ac:	mov	r1, r8
   184b0:	mov	r5, r0
   184b4:	bl	17cd8 <floor@plt+0x690c>
   184b8:	ldr	r3, [pc, #124]	; 1853c <floor@plt+0x7170>
   184bc:	ldr	r1, [pc, #124]	; 18540 <floor@plt+0x7174>
   184c0:	str	r4, [r5, #172]	; 0xac
   184c4:	ldr	r2, [r3]
   184c8:	str	r5, [r3]
   184cc:	stm	r5, {r1, r2}
   184d0:	ldr	r2, [sp, #36]	; 0x24
   184d4:	ldr	r3, [r6]
   184d8:	cmp	r2, r3
   184dc:	bne	18520 <floor@plt+0x7154>
   184e0:	add	sp, sp, #40	; 0x28
   184e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   184e8:	mov	r1, r5
   184ec:	mov	r0, sp
   184f0:	bl	27058 <floor@plt+0x15c8c>
   184f4:	ldr	r0, [r4]
   184f8:	bl	11114 <strerror@plt>
   184fc:	mov	r1, r0
   18500:	add	r0, sp, #16
   18504:	bl	27058 <floor@plt+0x15c8c>
   18508:	add	r2, sp, #16
   1850c:	mov	r1, sp
   18510:	ldr	r3, [pc, #44]	; 18544 <floor@plt+0x7178>
   18514:	ldr	r0, [pc, #44]	; 18548 <floor@plt+0x717c>
   18518:	bl	17778 <floor@plt+0x63ac>
   1851c:	b	184d0 <floor@plt+0x7104>
   18520:	bl	111e0 <__stack_chk_fail@plt>
   18524:	mov	r0, r5
   18528:	bl	286b0 <_ZdlPv@@Base>
   1852c:	bl	111ec <__cxa_end_cleanup@plt>
   18530:	andeq	r1, r4, r0, ror sp
   18534:	muleq	r2, r8, ip
   18538:	strdeq	lr, [r2], -ip
   1853c:			; <UNDEFINED> instruction: 0x000428b8
   18540:	andeq	lr, r2, r4, ror #17
   18544:			; <UNDEFINED> instruction: 0x000454b8
   18548:	andeq	lr, r2, r4, lsr #23
   1854c:	ldr	ip, [pc, #164]	; 185f8 <floor@plt+0x722c>
   18550:	push	{r4, r5, r6, r7, r8, r9, lr}
   18554:	mov	r6, r0
   18558:	ldr	r5, [pc, #156]	; 185fc <floor@plt+0x7230>
   1855c:	ldr	r4, [ip]
   18560:	sub	sp, sp, #28
   18564:	ldr	r0, [r5]
   18568:	cmp	r4, #0
   1856c:	mov	r7, r1
   18570:	mov	r8, r2
   18574:	mov	r9, r3
   18578:	str	r0, [sp, #20]
   1857c:	bne	18590 <floor@plt+0x71c4>
   18580:	b	185dc <floor@plt+0x7210>
   18584:	ldr	r4, [r4, #4]
   18588:	cmp	r4, #0
   1858c:	beq	185dc <floor@plt+0x7210>
   18590:	ldr	r3, [r4]
   18594:	add	r2, sp, #16
   18598:	add	r1, sp, #12
   1859c:	ldr	r3, [r3, #16]
   185a0:	mov	r0, r4
   185a4:	blx	r3
   185a8:	cmp	r0, #0
   185ac:	beq	18584 <floor@plt+0x71b8>
   185b0:	strd	r8, [sp]
   185b4:	mov	r3, r7
   185b8:	mov	r2, r6
   185bc:	ldrd	r0, [sp, #12]
   185c0:	bl	27544 <floor@plt+0x16178>
   185c4:	ldr	r2, [sp, #20]
   185c8:	ldr	r3, [r5]
   185cc:	cmp	r2, r3
   185d0:	bne	185f4 <floor@plt+0x7228>
   185d4:	add	sp, sp, #28
   185d8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   185dc:	mov	r3, r9
   185e0:	mov	r2, r8
   185e4:	mov	r1, r7
   185e8:	mov	r0, r6
   185ec:	bl	27488 <floor@plt+0x160bc>
   185f0:	b	185c4 <floor@plt+0x71f8>
   185f4:	bl	111e0 <__stack_chk_fail@plt>
   185f8:			; <UNDEFINED> instruction: 0x000428b8
   185fc:	andeq	r1, r4, r0, ror sp
   18600:	ldr	r2, [pc, #576]	; 18848 <floor@plt+0x747c>
   18604:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18608:	sub	sp, sp, #164	; 0xa4
   1860c:	add	r3, sp, #24
   18610:	str	r0, [sp, #4]
   18614:	add	r1, sp, #152	; 0x98
   18618:	ldr	r0, [r2]
   1861c:	mov	r2, #0
   18620:	str	r0, [sp, #156]	; 0x9c
   18624:	str	r2, [r3, #4]!
   18628:	cmp	r1, r3
   1862c:	bne	18624 <floor@plt+0x7258>
   18630:	ldr	r7, [pc, #532]	; 1884c <floor@plt+0x7480>
   18634:	mov	r8, #0
   18638:	sub	r5, r7, #20
   1863c:	mov	r9, r8
   18640:	mov	r0, r7
   18644:	bl	28f98 <_ZdlPv@@Base+0x8e8>
   18648:	mov	r4, #0
   1864c:	mov	sl, r4
   18650:	bl	16798 <floor@plt+0x53cc>
   18654:	cmn	r0, #1
   18658:	mov	r6, r0
   1865c:	beq	186d8 <floor@plt+0x730c>
   18660:	orrs	r3, sl, r4
   18664:	ldr	r3, [r5, #24]
   18668:	bne	18734 <floor@plt+0x7368>
   1866c:	cmp	r0, #41	; 0x29
   18670:	cmpne	r0, #44	; 0x2c
   18674:	beq	18794 <floor@plt+0x73c8>
   18678:	ldr	r2, [r5, #28]
   1867c:	uxtb	fp, r0
   18680:	cmp	r2, r3
   18684:	ble	18770 <floor@plt+0x73a4>
   18688:	ldr	r2, [r5, #20]
   1868c:	add	r1, r3, #1
   18690:	str	r1, [r5, #24]
   18694:	strb	fp, [r2, r3]
   18698:	cmp	r6, #34	; 0x22
   1869c:	moveq	r4, #1
   186a0:	beq	18650 <floor@plt+0x7284>
   186a4:	cmp	r6, #40	; 0x28
   186a8:	addeq	sl, sl, #1
   186ac:	moveq	r4, #0
   186b0:	beq	18650 <floor@plt+0x7284>
   186b4:	cmp	r6, #41	; 0x29
   186b8:	subeq	sl, sl, #1
   186bc:	moveq	r4, #0
   186c0:	beq	18650 <floor@plt+0x7284>
   186c4:	bl	16798 <floor@plt+0x53cc>
   186c8:	mov	r4, #0
   186cc:	cmn	r0, #1
   186d0:	mov	r6, r0
   186d4:	bne	18660 <floor@plt+0x7294>
   186d8:	ldr	r3, [pc, #368]	; 18850 <floor@plt+0x7484>
   186dc:	ldr	r0, [pc, #368]	; 18854 <floor@plt+0x7488>
   186e0:	mov	r2, r3
   186e4:	mov	r1, r3
   186e8:	bl	17778 <floor@plt+0x63ac>
   186ec:	mov	r0, #152	; 0x98
   186f0:	bl	28660 <_Znwj@@Base>
   186f4:	mov	r2, r9
   186f8:	ldr	r1, [sp, #4]
   186fc:	add	r3, sp, #28
   18700:	mov	r4, r0
   18704:	bl	17c7c <floor@plt+0x68b0>
   18708:	ldr	r2, [pc, #312]	; 18848 <floor@plt+0x747c>
   1870c:	ldr	r3, [pc, #324]	; 18858 <floor@plt+0x748c>
   18710:	ldr	r0, [sp, #156]	; 0x9c
   18714:	ldr	r1, [r2]
   18718:	ldr	r2, [r3]
   1871c:	cmp	r0, r1
   18720:	str	r2, [r4, #4]
   18724:	str	r4, [r3]
   18728:	bne	18838 <floor@plt+0x746c>
   1872c:	add	sp, sp, #164	; 0xa4
   18730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18734:	ldr	r2, [r5, #28]
   18738:	uxtb	fp, r0
   1873c:	cmp	r2, r3
   18740:	ble	18770 <floor@plt+0x73a4>
   18744:	ldr	r2, [r5, #20]
   18748:	add	r1, r3, #1
   1874c:	cmp	r4, #1
   18750:	str	r1, [r5, #24]
   18754:	strb	fp, [r2, r3]
   18758:	beq	18780 <floor@plt+0x73b4>
   1875c:	cmp	r4, #0
   18760:	beq	18698 <floor@plt+0x72cc>
   18764:	cmp	r4, #2
   18768:	moveq	r4, #1
   1876c:	b	18650 <floor@plt+0x7284>
   18770:	mov	r0, r7
   18774:	bl	28b34 <_ZdlPv@@Base+0x484>
   18778:	ldr	r3, [r5, #24]
   1877c:	b	18744 <floor@plt+0x7378>
   18780:	cmp	r6, #34	; 0x22
   18784:	beq	186c4 <floor@plt+0x72f8>
   18788:	cmp	r6, #92	; 0x5c
   1878c:	moveq	r4, #2
   18790:	b	18650 <floor@plt+0x7284>
   18794:	cmp	r3, #0
   18798:	ble	187f4 <floor@plt+0x7428>
   1879c:	ldr	r2, [r5, #28]
   187a0:	cmp	r2, r3
   187a4:	ble	18800 <floor@plt+0x7434>
   187a8:	ldr	r2, [r5, #20]
   187ac:	add	r1, r3, #1
   187b0:	str	r1, [r5, #24]
   187b4:	cmp	r8, #0
   187b8:	mov	r1, #0
   187bc:	strb	r1, [r2, r3]
   187c0:	bne	187e8 <floor@plt+0x741c>
   187c4:	cmp	r9, #32
   187c8:	beq	18810 <floor@plt+0x7444>
   187cc:	ldr	r0, [r5, #20]
   187d0:	bl	291f4 <_ZdlPv@@Base+0xb44>
   187d4:	add	r3, sp, #160	; 0xa0
   187d8:	add	r3, r3, r9, lsl #2
   187dc:	str	r0, [r3, #-132]	; 0xffffff7c
   187e0:	add	r9, r9, #1
   187e4:	mov	r8, #0
   187e8:	cmp	r6, #41	; 0x29
   187ec:	bne	18640 <floor@plt+0x7274>
   187f0:	b	186ec <floor@plt+0x7320>
   187f4:	cmp	r8, #0
   187f8:	beq	187e0 <floor@plt+0x7414>
   187fc:	b	187e8 <floor@plt+0x741c>
   18800:	mov	r0, r7
   18804:	bl	28b34 <_ZdlPv@@Base+0x484>
   18808:	ldr	r3, [r5, #24]
   1880c:	b	187a8 <floor@plt+0x73dc>
   18810:	mov	r1, r9
   18814:	add	r0, sp, #8
   18818:	bl	27084 <floor@plt+0x15cb8>
   1881c:	ldr	r3, [pc, #44]	; 18850 <floor@plt+0x7484>
   18820:	add	r1, sp, #8
   18824:	mov	r2, r3
   18828:	ldr	r0, [pc, #44]	; 1885c <floor@plt+0x7490>
   1882c:	bl	1854c <floor@plt+0x7180>
   18830:	mov	r8, #1
   18834:	b	187e8 <floor@plt+0x741c>
   18838:	bl	111e0 <__stack_chk_fail@plt>
   1883c:	mov	r0, r4
   18840:	bl	286b0 <_ZdlPv@@Base>
   18844:	bl	111ec <__cxa_end_cleanup@plt>
   18848:	andeq	r1, r4, r0, ror sp
   1884c:	andeq	r2, r4, ip, asr #17
   18850:			; <UNDEFINED> instruction: 0x000454b8
   18854:			; <UNDEFINED> instruction: 0x0002ebb8
   18858:			; <UNDEFINED> instruction: 0x000428b8
   1885c:	andeq	lr, r2, r4, ror #23
   18860:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18864:	vpush	{d8-d9}
   18868:	mov	r9, r0
   1886c:	ldr	r0, [pc, #3020]	; 19440 <floor@plt+0x8074>
   18870:	ldr	r4, [pc, #3020]	; 19444 <floor@plt+0x8078>
   18874:	sub	sp, sp, #12
   18878:	bl	28f98 <_ZdlPv@@Base+0x8e8>
   1887c:	ldr	r6, [pc, #3012]	; 19448 <floor@plt+0x807c>
   18880:	ldr	r8, [pc, #3012]	; 1944c <floor@plt+0x8080>
   18884:	ldr	r5, [pc, #3012]	; 19450 <floor@plt+0x8084>
   18888:	add	r7, r4, #20
   1888c:	ldr	sl, [r4, #4]
   18890:	bl	16798 <floor@plt+0x53cc>
   18894:	cmp	sl, #0
   18898:	mov	fp, r0
   1889c:	beq	188ac <floor@plt+0x74e0>
   188a0:	ldr	sl, [r6]
   188a4:	cmp	sl, r0
   188a8:	beq	196ac <floor@plt+0x82e0>
   188ac:	add	r3, fp, #1
   188b0:	cmp	r3, #125	; 0x7d
   188b4:	ldrls	pc, [pc, r3, lsl #2]
   188b8:	b	18d78 <floor@plt+0x79ac>
   188bc:	ldrdeq	r8, [r1], -r0
   188c0:	andeq	r8, r1, r8, ror sp
   188c4:	andeq	r8, r1, r8, ror sp
   188c8:	andeq	r8, r1, r8, ror sp
   188cc:	andeq	r8, r1, r8, ror sp
   188d0:	andeq	r8, r1, r8, ror sp
   188d4:	andeq	r8, r1, r8, ror sp
   188d8:	andeq	r8, r1, r8, ror sp
   188dc:	andeq	r8, r1, r8, ror sp
   188e0:	andeq	r8, r1, r8, ror sp
   188e4:	andeq	r8, r1, ip, lsl #17
   188e8:	andeq	r8, r1, r8, ror sp
   188ec:	andeq	r8, r1, r8, ror sp
   188f0:	andeq	r8, r1, r8, ror sp
   188f4:	andeq	r8, r1, r8, ror sp
   188f8:	andeq	r8, r1, r8, ror sp
   188fc:	andeq	r8, r1, r8, ror sp
   18900:	andeq	r8, r1, r8, ror sp
   18904:	andeq	r8, r1, r8, ror sp
   18908:	andeq	r8, r1, r8, ror sp
   1890c:	andeq	r8, r1, r8, ror sp
   18910:	andeq	r8, r1, r8, ror sp
   18914:	andeq	r8, r1, r8, ror sp
   18918:	andeq	r8, r1, r8, ror sp
   1891c:	andeq	r8, r1, r8, ror sp
   18920:	andeq	r8, r1, r8, ror sp
   18924:	andeq	r8, r1, r8, ror sp
   18928:	andeq	r8, r1, r8, ror sp
   1892c:	andeq	r8, r1, r8, ror sp
   18930:	andeq	r8, r1, r8, ror sp
   18934:	andeq	r8, r1, r8, ror sp
   18938:	andeq	r8, r1, r8, ror sp
   1893c:	andeq	r8, r1, r8, ror sp
   18940:	andeq	r8, r1, ip, lsl #17
   18944:	strdeq	r8, [r1], -r0
   18948:	andeq	r8, r1, ip, lsl #24
   1894c:			; <UNDEFINED> instruction: 0x00018ab4
   18950:	andeq	r8, r1, r8, ror sp
   18954:	andeq	r8, r1, r8, ror sp
   18958:	strdeq	r8, [r1], -r0
   1895c:	andeq	r8, r1, r8, asr sp
   18960:	andeq	r8, r1, r8, ror sp
   18964:	andeq	r8, r1, r8, ror sp
   18968:	andeq	r8, r1, r8, ror sp
   1896c:	andeq	r8, r1, r8, ror sp
   18970:	andeq	r8, r1, r8, ror sp
   18974:	andeq	r8, r1, ip, lsl #26
   18978:	andeq	r8, r1, r8, lsr #26
   1897c:	andeq	r8, r1, r8, ror sp
   18980:	andeq	r8, r1, r0, ror #21
   18984:	andeq	r8, r1, r0, ror #21
   18988:	andeq	r8, r1, r0, ror #21
   1898c:	andeq	r8, r1, r0, ror #21
   18990:	andeq	r8, r1, r0, ror #21
   18994:	andeq	r8, r1, r0, ror #21
   18998:	andeq	r8, r1, r0, ror #21
   1899c:	andeq	r8, r1, r0, ror #21
   189a0:	andeq	r8, r1, r0, ror #21
   189a4:	andeq	r8, r1, r0, ror #21
   189a8:	andeq	r8, r1, r8, ror sp
   189ac:	andeq	r8, r1, r8, ror sp
   189b0:	andeq	r8, r1, r4, ror #22
   189b4:	andeq	r8, r1, r8, lsl #23
   189b8:	andeq	r8, r1, r4, lsr #23
   189bc:	andeq	r8, r1, r8, ror sp
   189c0:	andeq	r8, r1, r8, ror sp
   189c4:	andeq	r8, r1, r8, ror sp
   189c8:	andeq	r8, r1, r8, ror sp
   189cc:	andeq	r8, r1, r8, ror sp
   189d0:	andeq	r8, r1, r8, ror sp
   189d4:	andeq	r8, r1, r8, ror sp
   189d8:	andeq	r8, r1, r8, ror sp
   189dc:	andeq	r8, r1, r8, ror sp
   189e0:	andeq	r8, r1, r8, ror sp
   189e4:	andeq	r8, r1, r8, ror sp
   189e8:	andeq	r8, r1, r8, ror sp
   189ec:	andeq	r8, r1, r8, ror sp
   189f0:	andeq	r8, r1, r8, ror sp
   189f4:	andeq	r8, r1, r8, ror sp
   189f8:	andeq	r8, r1, r8, ror sp
   189fc:	andeq	r8, r1, r8, ror sp
   18a00:	andeq	r8, r1, r8, ror sp
   18a04:	andeq	r8, r1, r8, ror sp
   18a08:	andeq	r8, r1, r8, ror sp
   18a0c:	andeq	r8, r1, r8, ror sp
   18a10:	andeq	r8, r1, r8, ror sp
   18a14:	andeq	r8, r1, r8, ror sp
   18a18:	andeq	r8, r1, r8, ror sp
   18a1c:	andeq	r8, r1, r8, ror sp
   18a20:	andeq	r8, r1, r8, ror sp
   18a24:	andeq	r8, r1, r8, ror sp
   18a28:	andeq	r8, r1, r8, ror sp
   18a2c:	andeq	r8, r1, r8, ror sp
   18a30:	andeq	r8, r1, r0, asr #23
   18a34:	andeq	r8, r1, r8, ror sp
   18a38:	andeq	r8, r1, r8, ror sp
   18a3c:	andeq	r8, r1, r8, ror sp
   18a40:	andeq	r8, r1, r8, ror sp
   18a44:	andeq	r8, r1, r8, ror sp
   18a48:	andeq	r8, r1, r8, ror sp
   18a4c:	andeq	r8, r1, r8, ror sp
   18a50:	andeq	r8, r1, r8, ror sp
   18a54:	andeq	r8, r1, r8, ror sp
   18a58:	andeq	r8, r1, r8, ror sp
   18a5c:	andeq	r8, r1, r8, ror sp
   18a60:	andeq	r8, r1, r8, ror sp
   18a64:	andeq	r8, r1, r8, ror sp
   18a68:	andeq	r8, r1, r8, ror sp
   18a6c:	andeq	r8, r1, r8, ror sp
   18a70:	andeq	r8, r1, r8, ror sp
   18a74:	andeq	r8, r1, r8, ror sp
   18a78:	andeq	r8, r1, r8, ror sp
   18a7c:	andeq	r8, r1, r8, ror sp
   18a80:	andeq	r8, r1, r8, ror sp
   18a84:	andeq	r8, r1, r8, ror sp
   18a88:	andeq	r8, r1, r8, ror sp
   18a8c:	andeq	r8, r1, r8, ror sp
   18a90:	andeq	r8, r1, r8, ror sp
   18a94:	andeq	r8, r1, r8, ror sp
   18a98:	andeq	r8, r1, r8, ror sp
   18a9c:	andeq	r8, r1, r8, ror sp
   18aa0:	andeq	r8, r1, r8, ror sp
   18aa4:	andeq	r8, r1, r8, ror sp
   18aa8:	andeq	r8, r1, r8, ror sp
   18aac:	andeq	r8, r1, r8, ror sp
   18ab0:	ldrdeq	r8, [r1], -r4
   18ab4:	bl	16798 <floor@plt+0x53cc>
   18ab8:	cmn	r0, #1
   18abc:	cmpne	r0, #10
   18ac0:	mov	fp, r0
   18ac4:	bne	18ab4 <floor@plt+0x76e8>
   18ac8:	cmp	r0, #10
   18acc:	beq	1900c <floor@plt+0x7c40>
   18ad0:	mov	r0, fp
   18ad4:	add	sp, sp, #12
   18ad8:	vpop	{d8-d9}
   18adc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18ae0:	ldr	r9, [pc, #2392]	; 19440 <floor@plt+0x8074>
   18ae4:	ldr	r7, [pc, #2408]	; 19454 <floor@plt+0x8088>
   18ae8:	ldr	r8, [pc, #2408]	; 19458 <floor@plt+0x808c>
   18aec:	mov	r5, #0
   18af0:	b	18b34 <floor@plt+0x7768>
   18af4:	ldr	r1, [r4, #8]
   18af8:	add	r2, r3, #1
   18afc:	str	r2, [r4, #12]
   18b00:	strb	fp, [r1, r3]
   18b04:	bl	16828 <floor@plt+0x545c>
   18b08:	cmn	r0, #1
   18b0c:	mov	r6, r0
   18b10:	beq	190ec <floor@plt+0x7d20>
   18b14:	uxtb	r3, r0
   18b18:	ldrb	r3, [r7, r3]
   18b1c:	cmp	r3, #0
   18b20:	beq	190ec <floor@plt+0x7d20>
   18b24:	bl	16798 <floor@plt+0x53cc>
   18b28:	cmp	r5, r8
   18b2c:	mov	fp, r0
   18b30:	bgt	1941c <floor@plt+0x8050>
   18b34:	ldr	r3, [r4, #12]
   18b38:	ldr	r0, [r4, #16]
   18b3c:	add	r5, r5, r5, lsl #2
   18b40:	sub	r1, fp, #48	; 0x30
   18b44:	cmp	r3, r0
   18b48:	add	r5, r1, r5, lsl #1
   18b4c:	uxtb	fp, fp
   18b50:	blt	18af4 <floor@plt+0x7728>
   18b54:	mov	r0, r9
   18b58:	bl	28b34 <_ZdlPv@@Base+0x484>
   18b5c:	ldr	r3, [r4, #12]
   18b60:	b	18af4 <floor@plt+0x7728>
   18b64:	bl	16828 <floor@plt+0x545c>
   18b68:	cmp	r0, #45	; 0x2d
   18b6c:	beq	19688 <floor@plt+0x82bc>
   18b70:	cmp	r0, #61	; 0x3d
   18b74:	beq	1901c <floor@plt+0x7c50>
   18b78:	ldr	r1, [pc, #2268]	; 1945c <floor@plt+0x8090>
   18b7c:	ldr	r0, [pc, #2236]	; 19440 <floor@plt+0x8074>
   18b80:	bl	28a34 <_ZdlPv@@Base+0x384>
   18b84:	b	18ad0 <floor@plt+0x7704>
   18b88:	bl	16828 <floor@plt+0x545c>
   18b8c:	cmp	r0, #61	; 0x3d
   18b90:	beq	19670 <floor@plt+0x82a4>
   18b94:	ldr	r1, [pc, #2244]	; 19460 <floor@plt+0x8094>
   18b98:	ldr	r0, [pc, #2208]	; 19440 <floor@plt+0x8074>
   18b9c:	bl	28a34 <_ZdlPv@@Base+0x384>
   18ba0:	b	18ad0 <floor@plt+0x7704>
   18ba4:	bl	16828 <floor@plt+0x545c>
   18ba8:	cmp	r0, #61	; 0x3d
   18bac:	beq	19658 <floor@plt+0x828c>
   18bb0:	ldr	r1, [pc, #2220]	; 19464 <floor@plt+0x8098>
   18bb4:	ldr	r0, [pc, #2180]	; 19440 <floor@plt+0x8074>
   18bb8:	bl	28a34 <_ZdlPv@@Base+0x384>
   18bbc:	b	18ad0 <floor@plt+0x7704>
   18bc0:	bl	16828 <floor@plt+0x545c>
   18bc4:	cmp	r0, #10
   18bc8:	bne	19a3c <floor@plt+0x8670>
   18bcc:	bl	16798 <floor@plt+0x53cc>
   18bd0:	b	1888c <floor@plt+0x74c0>
   18bd4:	bl	16828 <floor@plt+0x545c>
   18bd8:	cmp	r0, #124	; 0x7c
   18bdc:	beq	19628 <floor@plt+0x825c>
   18be0:	ldr	r1, [pc, #2176]	; 19468 <floor@plt+0x809c>
   18be4:	ldr	r0, [pc, #2132]	; 19440 <floor@plt+0x8074>
   18be8:	bl	28a34 <_ZdlPv@@Base+0x384>
   18bec:	b	18ad0 <floor@plt+0x7704>
   18bf0:	bl	16828 <floor@plt+0x545c>
   18bf4:	cmp	r0, #61	; 0x3d
   18bf8:	beq	19640 <floor@plt+0x8274>
   18bfc:	ldr	r1, [pc, #2152]	; 1946c <floor@plt+0x80a0>
   18c00:	ldr	r0, [pc, #2104]	; 19440 <floor@plt+0x8074>
   18c04:	bl	28a34 <_ZdlPv@@Base+0x384>
   18c08:	b	18ad0 <floor@plt+0x7704>
   18c0c:	mov	r1, #34	; 0x22
   18c10:	ldr	r0, [pc, #2088]	; 19440 <floor@plt+0x8074>
   18c14:	bl	28ab8 <_ZdlPv@@Base+0x408>
   18c18:	ldr	r0, [pc, #2128]	; 19470 <floor@plt+0x80a4>
   18c1c:	bl	28f98 <_ZdlPv@@Base+0x8e8>
   18c20:	ldr	r7, [pc, #2120]	; 19470 <floor@plt+0x80a4>
   18c24:	mov	r6, #92	; 0x5c
   18c28:	sub	r8, r7, #12
   18c2c:	bl	16798 <floor@plt+0x53cc>
   18c30:	cmp	r0, #92	; 0x5c
   18c34:	beq	18ca0 <floor@plt+0x78d4>
   18c38:	cmp	r0, #10
   18c3c:	beq	19528 <floor@plt+0x815c>
   18c40:	cmn	r0, #1
   18c44:	beq	19544 <floor@plt+0x8178>
   18c48:	cmp	r0, #34	; 0x22
   18c4c:	ldr	r3, [r4, #12]
   18c50:	ldr	r2, [r4, #16]
   18c54:	beq	19560 <floor@plt+0x8194>
   18c58:	cmp	r3, r2
   18c5c:	uxtb	r5, r0
   18c60:	bge	18e14 <floor@plt+0x7a48>
   18c64:	ldr	r2, [r4, #8]
   18c68:	add	r1, r3, #1
   18c6c:	str	r1, [r4, #12]
   18c70:	strb	r5, [r2, r3]
   18c74:	ldr	r3, [r4, #24]
   18c78:	ldr	r2, [r4, #28]
   18c7c:	cmp	r3, r2
   18c80:	bge	18e04 <floor@plt+0x7a38>
   18c84:	ldr	r2, [r4, #20]
   18c88:	add	r1, r3, #1
   18c8c:	str	r1, [r4, #24]
   18c90:	strb	r5, [r2, r3]
   18c94:	bl	16798 <floor@plt+0x53cc>
   18c98:	cmp	r0, #92	; 0x5c
   18c9c:	bne	18c38 <floor@plt+0x786c>
   18ca0:	ldr	r3, [r4, #12]
   18ca4:	ldr	r2, [r4, #16]
   18ca8:	cmp	r2, r3
   18cac:	ble	18e24 <floor@plt+0x7a58>
   18cb0:	ldr	r2, [r4, #8]
   18cb4:	add	r1, r3, #1
   18cb8:	str	r1, [r4, #12]
   18cbc:	strb	r6, [r2, r3]
   18cc0:	bl	16828 <floor@plt+0x545c>
   18cc4:	cmp	r0, #34	; 0x22
   18cc8:	beq	18e44 <floor@plt+0x7a78>
   18ccc:	ldr	r3, [r4, #24]
   18cd0:	ldr	r2, [r4, #28]
   18cd4:	cmp	r3, r2
   18cd8:	bge	18e34 <floor@plt+0x7a68>
   18cdc:	ldr	r2, [r4, #20]
   18ce0:	add	r1, r3, #1
   18ce4:	str	r1, [r4, #24]
   18ce8:	strb	r6, [r2, r3]
   18cec:	b	18c2c <floor@plt+0x7860>
   18cf0:	bl	16828 <floor@plt+0x545c>
   18cf4:	cmp	r0, #38	; 0x26
   18cf8:	beq	19610 <floor@plt+0x8244>
   18cfc:	ldr	r1, [pc, #1904]	; 19474 <floor@plt+0x80a8>
   18d00:	ldr	r0, [pc, #1848]	; 19440 <floor@plt+0x8074>
   18d04:	bl	28a34 <_ZdlPv@@Base+0x384>
   18d08:	b	18ad0 <floor@plt+0x7704>
   18d0c:	bl	16828 <floor@plt+0x545c>
   18d10:	cmp	r0, #62	; 0x3e
   18d14:	beq	195f8 <floor@plt+0x822c>
   18d18:	ldr	r1, [pc, #1880]	; 19478 <floor@plt+0x80ac>
   18d1c:	ldr	r0, [pc, #1820]	; 19440 <floor@plt+0x8074>
   18d20:	bl	28a34 <_ZdlPv@@Base+0x384>
   18d24:	b	18ad0 <floor@plt+0x7704>
   18d28:	bl	16828 <floor@plt+0x545c>
   18d2c:	cmn	r0, #1
   18d30:	beq	18d48 <floor@plt+0x797c>
   18d34:	ldr	r2, [pc, #1816]	; 19454 <floor@plt+0x8088>
   18d38:	uxtb	r3, r0
   18d3c:	ldrb	r3, [r2, r3]
   18d40:	cmp	r3, #0
   18d44:	bne	19034 <floor@plt+0x7c68>
   18d48:	add	sp, sp, #12
   18d4c:	vpop	{d8-d9}
   18d50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18d54:	b	16a14 <floor@plt+0x5648>
   18d58:	bl	16828 <floor@plt+0x545c>
   18d5c:	cmp	r0, #116	; 0x74
   18d60:	mov	r5, r0
   18d64:	beq	18f50 <floor@plt+0x7b84>
   18d68:	ldr	r1, [pc, #1804]	; 1947c <floor@plt+0x80b0>
   18d6c:	ldr	r0, [pc, #1740]	; 19440 <floor@plt+0x8074>
   18d70:	bl	28a34 <_ZdlPv@@Base+0x384>
   18d74:	b	18ad0 <floor@plt+0x7704>
   18d78:	uxtb	fp, fp
   18d7c:	ldrb	r3, [r8, fp]
   18d80:	cmp	r3, #0
   18d84:	beq	1900c <floor@plt+0x7c40>
   18d88:	mov	r0, r7
   18d8c:	bl	28f98 <_ZdlPv@@Base+0x8e8>
   18d90:	mov	r1, fp
   18d94:	mov	r0, r7
   18d98:	bl	28ab8 <_ZdlPv@@Base+0x408>
   18d9c:	b	18db0 <floor@plt+0x79e4>
   18da0:	ldr	r2, [r4, #20]
   18da4:	add	r1, r3, #1
   18da8:	str	r1, [r4, #24]
   18dac:	strb	fp, [r2, r3]
   18db0:	bl	16828 <floor@plt+0x545c>
   18db4:	cmn	r0, #1
   18db8:	mov	sl, r0
   18dbc:	beq	18e94 <floor@plt+0x7ac8>
   18dc0:	uxtb	fp, r0
   18dc4:	subs	r3, r0, #95	; 0x5f
   18dc8:	ldrb	r2, [r5, fp]
   18dcc:	movne	r3, #1
   18dd0:	cmp	r2, #0
   18dd4:	movne	r3, #0
   18dd8:	cmp	r3, #0
   18ddc:	bne	18e94 <floor@plt+0x7ac8>
   18de0:	bl	16798 <floor@plt+0x53cc>
   18de4:	ldr	r3, [r4, #24]
   18de8:	ldr	r2, [r4, #28]
   18dec:	cmp	r3, r2
   18df0:	blt	18da0 <floor@plt+0x79d4>
   18df4:	mov	r0, r7
   18df8:	bl	28b34 <_ZdlPv@@Base+0x484>
   18dfc:	ldr	r3, [r4, #24]
   18e00:	b	18da0 <floor@plt+0x79d4>
   18e04:	mov	r0, r7
   18e08:	bl	28b34 <_ZdlPv@@Base+0x484>
   18e0c:	ldr	r3, [r4, #24]
   18e10:	b	18c84 <floor@plt+0x78b8>
   18e14:	mov	r0, r8
   18e18:	bl	28b34 <_ZdlPv@@Base+0x484>
   18e1c:	ldr	r3, [r4, #12]
   18e20:	b	18c64 <floor@plt+0x7898>
   18e24:	mov	r0, r8
   18e28:	bl	28b34 <_ZdlPv@@Base+0x484>
   18e2c:	ldr	r3, [r4, #12]
   18e30:	b	18cb0 <floor@plt+0x78e4>
   18e34:	mov	r0, r7
   18e38:	bl	28b34 <_ZdlPv@@Base+0x484>
   18e3c:	ldr	r3, [r4, #24]
   18e40:	b	18cdc <floor@plt+0x7910>
   18e44:	bl	16798 <floor@plt+0x53cc>
   18e48:	ldr	r3, [r4, #24]
   18e4c:	ldr	r2, [r4, #28]
   18e50:	cmp	r3, r2
   18e54:	bge	18f88 <floor@plt+0x7bbc>
   18e58:	ldr	r2, [r4, #20]
   18e5c:	add	r0, r3, #1
   18e60:	mov	r1, #34	; 0x22
   18e64:	str	r0, [r4, #24]
   18e68:	strb	r1, [r2, r3]
   18e6c:	ldr	r3, [r4, #12]
   18e70:	ldr	r2, [r4, #16]
   18e74:	cmp	r3, r2
   18e78:	bge	18f98 <floor@plt+0x7bcc>
   18e7c:	ldr	r2, [r4, #8]
   18e80:	add	r0, r3, #1
   18e84:	mov	r1, #34	; 0x22
   18e88:	str	r0, [r4, #12]
   18e8c:	strb	r1, [r2, r3]
   18e90:	b	18c2c <floor@plt+0x7860>
   18e94:	ldr	r3, [r4, #20]
   18e98:	mov	r0, r3
   18e9c:	str	r3, [sp]
   18ea0:	ldr	r3, [r4, #24]
   18ea4:	mov	r1, r3
   18ea8:	str	r3, [sp, #4]
   18eac:	bl	1694c <floor@plt+0x5580>
   18eb0:	ldr	r3, [sp, #4]
   18eb4:	subs	fp, r0, #0
   18eb8:	bne	19a4c <floor@plt+0x8680>
   18ebc:	cmp	r9, #0
   18ec0:	beq	18fc0 <floor@plt+0x7bf4>
   18ec4:	ldr	r2, [r4, #28]
   18ec8:	cmp	r3, r2
   18ecc:	bge	18fa8 <floor@plt+0x7bdc>
   18ed0:	add	r2, r3, #1
   18ed4:	str	r2, [r4, #24]
   18ed8:	ldr	r2, [sp]
   18edc:	mov	r1, #0
   18ee0:	ldr	r0, [pc, #1432]	; 19480 <floor@plt+0x80b4>
   18ee4:	strb	r1, [r2, r3]
   18ee8:	ldr	r1, [r4, #20]
   18eec:	bl	1649c <floor@plt+0x50d0>
   18ef0:	ldr	r1, [r4, #24]
   18ef4:	sub	r1, r1, #1
   18ef8:	mov	fp, r0
   18efc:	mov	r0, r7
   18f00:	bl	28f24 <_ZdlPv@@Base+0x874>
   18f04:	cmp	fp, #0
   18f08:	beq	18fc0 <floor@plt+0x7bf4>
   18f0c:	cmp	sl, #40	; 0x28
   18f10:	beq	195e8 <floor@plt+0x821c>
   18f14:	mov	r0, #16
   18f18:	bl	28660 <_Znwj@@Base>
   18f1c:	ldr	r3, [pc, #1376]	; 19484 <floor@plt+0x80b8>
   18f20:	mov	r2, #0
   18f24:	mov	sl, r0
   18f28:	mov	r0, fp
   18f2c:	str	r2, [sl, #4]
   18f30:	str	r3, [sl]
   18f34:	bl	291f4 <_ZdlPv@@Base+0xb44>
   18f38:	ldr	r3, [r4]
   18f3c:	str	r0, [sl, #8]
   18f40:	str	r0, [sl, #12]
   18f44:	str	r3, [sl, #4]
   18f48:	str	sl, [r4]
   18f4c:	b	1888c <floor@plt+0x74c0>
   18f50:	bl	16798 <floor@plt+0x53cc>
   18f54:	bl	16828 <floor@plt+0x545c>
   18f58:	cmp	r0, #104	; 0x68
   18f5c:	beq	19830 <floor@plt+0x8464>
   18f60:	mov	r0, #12
   18f64:	bl	28660 <_Znwj@@Base>
   18f68:	ldr	r1, [r4]
   18f6c:	ldr	ip, [pc, #1300]	; 19488 <floor@plt+0x80bc>
   18f70:	mov	r3, #0
   18f74:	str	r5, [r0, #8]
   18f78:	str	ip, [r0]
   18f7c:	str	r1, [r0, #4]
   18f80:	stm	r4, {r0, r3}
   18f84:	b	18d68 <floor@plt+0x799c>
   18f88:	mov	r0, r7
   18f8c:	bl	28b34 <_ZdlPv@@Base+0x484>
   18f90:	ldr	r3, [r4, #24]
   18f94:	b	18e58 <floor@plt+0x7a8c>
   18f98:	mov	r0, r8
   18f9c:	bl	28b34 <_ZdlPv@@Base+0x484>
   18fa0:	ldr	r3, [r4, #12]
   18fa4:	b	18e7c <floor@plt+0x7ab0>
   18fa8:	mov	r0, r7
   18fac:	bl	28b34 <_ZdlPv@@Base+0x484>
   18fb0:	ldr	r3, [r4, #20]
   18fb4:	str	r3, [sp]
   18fb8:	ldr	r3, [r4, #24]
   18fbc:	b	18ed0 <floor@plt+0x7b04>
   18fc0:	ldr	r1, [pc, #1192]	; 19470 <floor@plt+0x80a4>
   18fc4:	sub	r0, r1, #12
   18fc8:	bl	289ec <_ZdlPv@@Base+0x33c>
   18fcc:	ldr	r3, [r4, #24]
   18fd0:	cmp	r3, #0
   18fd4:	bgt	18fe4 <floor@plt+0x7c18>
   18fd8:	ldr	r1, [pc, #1196]	; 1948c <floor@plt+0x80c0>
   18fdc:	mov	r0, #98	; 0x62
   18fe0:	bl	26c88 <floor@plt+0x158bc>
   18fe4:	ldr	r3, [r4, #20]
   18fe8:	ldr	r0, [pc, #1184]	; 19490 <floor@plt+0x80c4>
   18fec:	ldr	r2, [pc, #1184]	; 19494 <floor@plt+0x80c8>
   18ff0:	ldrb	r1, [r3]
   18ff4:	ldr	r3, [pc, #1180]	; 19498 <floor@plt+0x80cc>
   18ff8:	ldrb	r1, [r0, r1]
   18ffc:	cmp	r1, #0
   19000:	movne	fp, r2
   19004:	moveq	fp, r3
   19008:	b	18ad0 <floor@plt+0x7704>
   1900c:	mov	r1, fp
   19010:	ldr	r0, [pc, #1064]	; 19440 <floor@plt+0x8074>
   19014:	bl	28ab8 <_ZdlPv@@Base+0x408>
   19018:	b	18ad0 <floor@plt+0x7704>
   1901c:	bl	16798 <floor@plt+0x53cc>
   19020:	ldr	r1, [pc, #1140]	; 1949c <floor@plt+0x80d0>
   19024:	ldr	r0, [pc, #1044]	; 19440 <floor@plt+0x8074>
   19028:	bl	28a34 <_ZdlPv@@Base+0x384>
   1902c:	ldr	fp, [pc, #1132]	; 194a0 <floor@plt+0x80d4>
   19030:	b	18ad0 <floor@plt+0x7704>
   19034:	mov	r2, #0
   19038:	mov	r3, #0
   1903c:	mov	r1, #46	; 0x2e
   19040:	ldr	r0, [pc, #1016]	; 19440 <floor@plt+0x8074>
   19044:	strd	r2, [r4, #48]	; 0x30
   19048:	bl	28ab8 <_ZdlPv@@Base+0x408>
   1904c:	vldr	d8, [pc, #988]	; 19430 <floor@plt+0x8064>
   19050:	vldr	d9, [pc, #992]	; 19438 <floor@plt+0x806c>
   19054:	ldr	r7, [pc, #1016]	; 19454 <floor@plt+0x8088>
   19058:	ldr	r8, [pc, #992]	; 19440 <floor@plt+0x8074>
   1905c:	bl	16828 <floor@plt+0x545c>
   19060:	cmn	r0, #1
   19064:	mov	r6, r0
   19068:	beq	190d4 <floor@plt+0x7d08>
   1906c:	uxtb	r5, r0
   19070:	ldrb	r3, [r7, r5]
   19074:	cmp	r3, #0
   19078:	beq	195a8 <floor@plt+0x81dc>
   1907c:	bl	16798 <floor@plt+0x53cc>
   19080:	ldr	r3, [r4, #12]
   19084:	ldr	r2, [r4, #16]
   19088:	cmp	r3, r2
   1908c:	bge	190dc <floor@plt+0x7d10>
   19090:	ldr	r2, [r4, #8]
   19094:	add	r1, r3, #1
   19098:	cmp	r6, #48	; 0x30
   1909c:	str	r1, [r4, #12]
   190a0:	vdiv.f64	d8, d8, d9
   190a4:	strb	r5, [r2, r3]
   190a8:	beq	1905c <floor@plt+0x7c90>
   190ac:	sub	r6, r6, #48	; 0x30
   190b0:	vldr	d7, [r4, #48]	; 0x30
   190b4:	vmov	s13, r6
   190b8:	vcvt.f64.s32	d6, s13
   190bc:	vmla.f64	d7, d6, d8
   190c0:	vstr	d7, [r4, #48]	; 0x30
   190c4:	bl	16828 <floor@plt+0x545c>
   190c8:	cmn	r0, #1
   190cc:	mov	r6, r0
   190d0:	bne	1906c <floor@plt+0x7ca0>
   190d4:	mov	fp, #260	; 0x104
   190d8:	b	18ad0 <floor@plt+0x7704>
   190dc:	mov	r0, r8
   190e0:	bl	28b34 <_ZdlPv@@Base+0x484>
   190e4:	ldr	r3, [r4, #12]
   190e8:	b	19090 <floor@plt+0x7cc4>
   190ec:	vmov	s15, r5
   190f0:	vcvt.f64.s32	d7, s15
   190f4:	vstr	d7, [r4, #48]	; 0x30
   190f8:	sub	r3, r6, #46	; 0x2e
   190fc:	cmp	r3, #70	; 0x46
   19100:	ldrls	pc, [pc, r3, lsl #2]
   19104:	b	190d4 <floor@plt+0x7d08>
   19108:	andeq	r9, r1, r0, lsl r3
   1910c:	ldrdeq	r9, [r1], -r4
   19110:	ldrdeq	r9, [r1], -r4
   19114:	ldrdeq	r9, [r1], -r4
   19118:	ldrdeq	r9, [r1], -r4
   1911c:	ldrdeq	r9, [r1], -r4
   19120:	ldrdeq	r9, [r1], -r4
   19124:	ldrdeq	r9, [r1], -r4
   19128:	ldrdeq	r9, [r1], -r4
   1912c:	ldrdeq	r9, [r1], -r4
   19130:	ldrdeq	r9, [r1], -r4
   19134:	ldrdeq	r9, [r1], -r4
   19138:	ldrdeq	r9, [r1], -r4
   1913c:	ldrdeq	r9, [r1], -r4
   19140:	ldrdeq	r9, [r1], -r4
   19144:	ldrdeq	r9, [r1], -r4
   19148:	ldrdeq	r9, [r1], -r4
   1914c:	ldrdeq	r9, [r1], -r4
   19150:	ldrdeq	r9, [r1], -r4
   19154:	ldrdeq	r9, [r1], -r4
   19158:	ldrdeq	r9, [r1], -r4
   1915c:	ldrdeq	r9, [r1], -r4
   19160:	ldrdeq	r9, [r1], -r4
   19164:	andeq	r9, r1, r4, lsr #4
   19168:	ldrdeq	r9, [r1], -r4
   1916c:	ldrdeq	r9, [r1], -r4
   19170:	ldrdeq	r9, [r1], -r4
   19174:	andeq	r9, r1, ip, ror #7
   19178:	ldrdeq	r9, [r1], -r4
   1917c:	ldrdeq	r9, [r1], -r4
   19180:	ldrdeq	r9, [r1], -r4
   19184:	ldrdeq	r9, [r1], -r4
   19188:	ldrdeq	r9, [r1], -r4
   1918c:	ldrdeq	r9, [r1], -r4
   19190:	ldrdeq	r9, [r1], -r4
   19194:	ldrdeq	r9, [r1], -r4
   19198:	ldrdeq	r9, [r1], -r4
   1919c:	ldrdeq	r9, [r1], -r4
   191a0:	ldrdeq	r9, [r1], -r4
   191a4:	ldrdeq	r9, [r1], -r4
   191a8:	ldrdeq	r9, [r1], -r4
   191ac:	ldrdeq	r9, [r1], -r4
   191b0:	ldrdeq	r9, [r1], -r4
   191b4:	ldrdeq	r9, [r1], -r4
   191b8:	ldrdeq	r9, [r1], -r4
   191bc:	ldrdeq	r9, [r1], -r4
   191c0:	ldrdeq	r9, [r1], -r4
   191c4:	ldrdeq	r9, [r1], -r4
   191c8:	ldrdeq	r9, [r1], -r4
   191cc:	ldrdeq	r9, [r1], -r4
   191d0:	ldrdeq	r9, [r1], -r4
   191d4:	ldrdeq	r9, [r1], -r4
   191d8:	ldrdeq	r9, [r1], -r4
   191dc:	ldrdeq	r9, [r1], -r4
   191e0:	ldrdeq	r9, [r1], -r4
   191e4:	andeq	r9, r1, r4, lsr #4
   191e8:	ldrdeq	r9, [r1], -r4
   191ec:	ldrdeq	r9, [r1], -r4
   191f0:	ldrdeq	r9, [r1], -r4
   191f4:	andeq	r9, r1, ip, ror #7
   191f8:	ldrdeq	r9, [r1], -r4
   191fc:	ldrdeq	r9, [r1], -r4
   19200:	ldrdeq	r9, [r1], -r4
   19204:	ldrdeq	r9, [r1], -r4
   19208:	muleq	r1, ip, r3
   1920c:	ldrdeq	r9, [r1], -r4
   19210:	ldrdeq	r9, [r1], -r4
   19214:	ldrdeq	r9, [r1], -r4
   19218:	andeq	r9, r1, r4, asr #7
   1921c:	andeq	r9, r1, r4, ror r3
   19220:	andeq	r9, r1, r8, lsr r3
   19224:	bl	16798 <floor@plt+0x53cc>
   19228:	bl	16828 <floor@plt+0x545c>
   1922c:	sub	r3, r0, #43	; 0x2b
   19230:	bics	r3, r3, #2
   19234:	mov	r5, r0
   19238:	beq	19740 <floor@plt+0x8374>
   1923c:	cmn	r0, #1
   19240:	beq	19848 <floor@plt+0x847c>
   19244:	ldr	r8, [pc, #520]	; 19454 <floor@plt+0x8088>
   19248:	uxtb	r7, r0
   1924c:	ldrb	r3, [r8, r7]
   19250:	cmp	r3, #0
   19254:	beq	19848 <floor@plt+0x847c>
   19258:	ldr	r3, [r4, #12]
   1925c:	ldr	r2, [r4, #16]
   19260:	uxtb	r6, r6
   19264:	cmp	r3, r2
   19268:	bge	198a4 <floor@plt+0x84d8>
   1926c:	ldr	r2, [r4, #8]
   19270:	mov	sl, #43	; 0x2b
   19274:	add	r1, r3, #1
   19278:	str	r1, [r4, #12]
   1927c:	strb	r6, [r2, r3]
   19280:	bl	16798 <floor@plt+0x53cc>
   19284:	ldr	r3, [r4, #12]
   19288:	ldr	r2, [r4, #16]
   1928c:	cmp	r3, r2
   19290:	bge	1986c <floor@plt+0x84a0>
   19294:	ldr	r2, [r4, #8]
   19298:	add	r1, r3, #1
   1929c:	str	r1, [r4, #12]
   192a0:	sub	r6, r5, #48	; 0x30
   192a4:	ldr	r9, [pc, #404]	; 19440 <floor@plt+0x8074>
   192a8:	strb	r7, [r2, r3]
   192ac:	b	192cc <floor@plt+0x7f00>
   192b0:	add	r6, r6, r6, lsl #2
   192b4:	ldr	r2, [r4, #8]
   192b8:	sub	r5, r5, #48	; 0x30
   192bc:	add	r6, r5, r6, lsl #1
   192c0:	add	r1, r3, #1
   192c4:	str	r1, [r4, #12]
   192c8:	strb	r7, [r2, r3]
   192cc:	bl	16828 <floor@plt+0x545c>
   192d0:	cmn	r0, #1
   192d4:	mov	r5, r0
   192d8:	beq	197c0 <floor@plt+0x83f4>
   192dc:	uxtb	r7, r0
   192e0:	ldrb	r3, [r8, r7]
   192e4:	cmp	r3, #0
   192e8:	beq	197f4 <floor@plt+0x8428>
   192ec:	bl	16798 <floor@plt+0x53cc>
   192f0:	ldr	r3, [r4, #12]
   192f4:	ldr	r2, [r4, #16]
   192f8:	cmp	r3, r2
   192fc:	blt	192b0 <floor@plt+0x7ee4>
   19300:	mov	r0, r9
   19304:	bl	28b34 <_ZdlPv@@Base+0x484>
   19308:	ldr	r3, [r4, #12]
   1930c:	b	192b0 <floor@plt+0x7ee4>
   19310:	ldrd	r2, [r4, #12]
   19314:	cmp	r2, r3
   19318:	bge	1990c <floor@plt+0x8540>
   1931c:	ldrd	r2, [r4, #8]
   19320:	mov	r1, #46	; 0x2e
   19324:	add	r0, r3, #1
   19328:	str	r0, [r4, #12]
   1932c:	strb	r1, [r2, r3]
   19330:	bl	16798 <floor@plt+0x53cc>
   19334:	b	1904c <floor@plt+0x7c80>
   19338:	bl	16798 <floor@plt+0x53cc>
   1933c:	bl	16828 <floor@plt+0x545c>
   19340:	cmp	r0, #104	; 0x68
   19344:	beq	19938 <floor@plt+0x856c>
   19348:	mov	r0, #12
   1934c:	bl	28660 <_Znwj@@Base>
   19350:	ldr	ip, [pc, #304]	; 19488 <floor@plt+0x80bc>
   19354:	ldr	r2, [r4]
   19358:	mov	r1, #116	; 0x74
   1935c:	mov	r3, #0
   19360:	str	ip, [r0]
   19364:	str	r1, [r0, #8]
   19368:	str	r2, [r0, #4]
   1936c:	stm	r4, {r0, r3}
   19370:	b	190d4 <floor@plt+0x7d08>
   19374:	bl	16798 <floor@plt+0x53cc>
   19378:	bl	16828 <floor@plt+0x545c>
   1937c:	cmp	r0, #116	; 0x74
   19380:	beq	199e4 <floor@plt+0x8618>
   19384:	mov	r0, #12
   19388:	bl	28660 <_Znwj@@Base>
   1938c:	ldr	ip, [pc, #244]	; 19488 <floor@plt+0x80bc>
   19390:	ldr	r2, [r4]
   19394:	mov	r1, #115	; 0x73
   19398:	b	1935c <floor@plt+0x7f90>
   1939c:	bl	16798 <floor@plt+0x53cc>
   193a0:	bl	16828 <floor@plt+0x545c>
   193a4:	cmp	r0, #100	; 0x64
   193a8:	beq	19954 <floor@plt+0x8588>
   193ac:	mov	r0, #12
   193b0:	bl	28660 <_Znwj@@Base>
   193b4:	ldr	ip, [pc, #204]	; 19488 <floor@plt+0x80bc>
   193b8:	ldr	r2, [r4]
   193bc:	mov	r1, #110	; 0x6e
   193c0:	b	1935c <floor@plt+0x7f90>
   193c4:	bl	16798 <floor@plt+0x53cc>
   193c8:	bl	16828 <floor@plt+0x545c>
   193cc:	cmp	r0, #100	; 0x64
   193d0:	beq	19a00 <floor@plt+0x8634>
   193d4:	mov	r0, #12
   193d8:	bl	28660 <_Znwj@@Base>
   193dc:	ldr	ip, [pc, #164]	; 19488 <floor@plt+0x80bc>
   193e0:	ldr	r2, [r4]
   193e4:	mov	r1, #114	; 0x72
   193e8:	b	1935c <floor@plt+0x7f90>
   193ec:	ldr	r3, [r4, #12]
   193f0:	ldr	r2, [r4, #16]
   193f4:	uxtb	r6, r6
   193f8:	cmp	r3, r2
   193fc:	bge	19918 <floor@plt+0x854c>
   19400:	ldr	r2, [r4, #8]
   19404:	add	r1, r3, #1
   19408:	str	r1, [r4, #12]
   1940c:	strb	r6, [r2, r3]
   19410:	bl	16798 <floor@plt+0x53cc>
   19414:	mov	fp, #260	; 0x104
   19418:	b	18ad0 <floor@plt+0x7704>
   1941c:	vmov	s15, r5
   19420:	vldr	d8, [pc, #16]	; 19438 <floor@plt+0x806c>
   19424:	ldr	r5, [pc, #20]	; 19440 <floor@plt+0x8074>
   19428:	vcvt.f64.s32	d6, s15
   1942c:	b	194f0 <floor@plt+0x8124>
   19430:	andeq	r0, r0, r0
   19434:	svccc	0x00f00000	; IMB
   19438:	andeq	r0, r0, r0
   1943c:	eormi	r0, r4, r0
   19440:	andeq	r2, r4, r0, asr #17
   19444:			; <UNDEFINED> instruction: 0x000428b8
   19448:	andeq	r2, r4, ip, lsr #6
   1944c:			; <UNDEFINED> instruction: 0x00044ab8
   19450:			; <UNDEFINED> instruction: 0x00044fb8
   19454:			; <UNDEFINED> instruction: 0x00044db8
   19458:	stcleq	12, cr12, [ip], {203}	; 0xcb
   1945c:	andeq	lr, r2, r8, lsr ip
   19460:	andeq	lr, r2, r8, asr ip
   19464:	andeq	lr, r2, r0, asr ip
   19468:	andeq	lr, r2, r8, ror #24
   1946c:	andeq	lr, r2, r8, asr #24
   19470:	andeq	r2, r4, ip, asr #17
   19474:	andeq	lr, r2, r0, ror #24
   19478:	andeq	lr, r2, r0, asr #24
   1947c:	andeq	lr, r2, r4, ror #11
   19480:	ldrdeq	r2, [r4], -r8
   19484:	andeq	lr, r2, r0, asr r8
   19488:	andeq	lr, r2, ip, ror #16
   1948c:	andeq	lr, r2, r4, asr #20
   19490:			; <UNDEFINED> instruction: 0x00044bb8
   19494:	andeq	r0, r0, r2, lsl #2
   19498:	andeq	r0, r0, r3, lsl #2
   1949c:	andeq	lr, r2, r4, lsr ip
   194a0:	andeq	r0, r0, r2, ror #2
   194a4:	andeq	lr, r2, r8, lsl #24
   194a8:			; <UNDEFINED> instruction: 0x000454b8
   194ac:	andeq	lr, r2, ip, lsl ip
   194b0:	andeq	r0, r0, r5, lsl #2
   194b4:	ldr	r1, [r4, #8]
   194b8:	add	r2, r3, #1
   194bc:	str	r2, [r4, #12]
   194c0:	strb	fp, [r1, r3]
   194c4:	bl	16828 <floor@plt+0x545c>
   194c8:	cmn	r0, #1
   194cc:	mov	r6, r0
   194d0:	beq	190d4 <floor@plt+0x7d08>
   194d4:	uxtb	r3, r0
   194d8:	ldrb	r3, [r7, r3]
   194dc:	cmp	r3, #0
   194e0:	beq	19588 <floor@plt+0x81bc>
   194e4:	bl	16798 <floor@plt+0x53cc>
   194e8:	vldr	d6, [r4, #48]	; 0x30
   194ec:	mov	fp, r0
   194f0:	sub	r3, fp, #48	; 0x30
   194f4:	ldr	r1, [r4, #16]
   194f8:	vmov	s14, r3
   194fc:	ldr	r3, [r4, #12]
   19500:	uxtb	fp, fp
   19504:	cmp	r3, r1
   19508:	vcvt.f64.s32	d7, s14
   1950c:	vmla.f64	d7, d6, d8
   19510:	vstr	d7, [r4, #48]	; 0x30
   19514:	blt	194b4 <floor@plt+0x80e8>
   19518:	mov	r0, r5
   1951c:	bl	28b34 <_ZdlPv@@Base+0x484>
   19520:	ldr	r3, [r4, #12]
   19524:	b	194b4 <floor@plt+0x80e8>
   19528:	ldr	r3, [pc, #-136]	; 194a8 <floor@plt+0x80dc>
   1952c:	ldr	r0, [pc, #-144]	; 194a4 <floor@plt+0x80d8>
   19530:	mov	r2, r3
   19534:	mov	r1, r3
   19538:	bl	27444 <floor@plt+0x16078>
   1953c:	ldr	fp, [pc, #-148]	; 194b0 <floor@plt+0x80e4>
   19540:	b	18ad0 <floor@plt+0x7704>
   19544:	ldr	r3, [pc, #-164]	; 194a8 <floor@plt+0x80dc>
   19548:	ldr	r0, [pc, #-164]	; 194ac <floor@plt+0x80e0>
   1954c:	mov	r2, r3
   19550:	mov	r1, r3
   19554:	bl	27444 <floor@plt+0x16078>
   19558:	ldr	fp, [pc, #-176]	; 194b0 <floor@plt+0x80e4>
   1955c:	b	18ad0 <floor@plt+0x7704>
   19560:	cmp	r3, r2
   19564:	bge	197e8 <floor@plt+0x841c>
   19568:	ldr	r3, [r4, #12]
   1956c:	ldr	r1, [r4, #8]
   19570:	add	r2, r3, #1
   19574:	mov	r0, #34	; 0x22
   19578:	str	r2, [r4, #12]
   1957c:	ldr	fp, [pc, #-212]	; 194b0 <floor@plt+0x80e4>
   19580:	strb	r0, [r1, r3]
   19584:	b	18ad0 <floor@plt+0x7704>
   19588:	vldr	d7, [r4, #48]	; 0x30
   1958c:	vldr	d6, [pc, #988]	; 19970 <floor@plt+0x85a4>
   19590:	vcmpe.f64	d7, d6
   19594:	vmrs	APSR_nzcv, fpscr
   19598:	vcvtle.s32.f64	s15, d7
   1959c:	mvngt	r5, #-2147483648	; 0x80000000
   195a0:	vmovle	r5, s15
   195a4:	b	190f8 <floor@plt+0x7d2c>
   195a8:	bic	r3, r0, #32
   195ac:	cmp	r3, #69	; 0x45
   195b0:	beq	19224 <floor@plt+0x7e58>
   195b4:	cmp	r3, #73	; 0x49
   195b8:	bne	190d4 <floor@plt+0x7d08>
   195bc:	ldr	r3, [r4, #12]
   195c0:	ldr	r2, [r4, #16]
   195c4:	cmp	r3, r2
   195c8:	bge	19a5c <floor@plt+0x8690>
   195cc:	ldr	r2, [r4, #8]
   195d0:	add	r1, r3, #1
   195d4:	str	r1, [r4, #12]
   195d8:	strb	r5, [r2, r3]
   195dc:	bl	16798 <floor@plt+0x53cc>
   195e0:	mov	fp, #260	; 0x104
   195e4:	b	18ad0 <floor@plt+0x7704>
   195e8:	bl	16798 <floor@plt+0x53cc>
   195ec:	mov	r0, fp
   195f0:	bl	18600 <floor@plt+0x7234>
   195f4:	b	1888c <floor@plt+0x74c0>
   195f8:	bl	16798 <floor@plt+0x53cc>
   195fc:	ldr	r1, [pc, #892]	; 19980 <floor@plt+0x85b4>
   19600:	ldr	r0, [pc, #984]	; 199e0 <floor@plt+0x8614>
   19604:	bl	28a34 <_ZdlPv@@Base+0x384>
   19608:	ldr	fp, [pc, #884]	; 19984 <floor@plt+0x85b8>
   1960c:	b	18ad0 <floor@plt+0x7704>
   19610:	bl	16798 <floor@plt+0x53cc>
   19614:	ldr	r1, [pc, #876]	; 19988 <floor@plt+0x85bc>
   19618:	ldr	r0, [pc, #960]	; 199e0 <floor@plt+0x8614>
   1961c:	bl	28a34 <_ZdlPv@@Base+0x384>
   19620:	ldr	fp, [pc, #868]	; 1998c <floor@plt+0x85c0>
   19624:	b	18ad0 <floor@plt+0x7704>
   19628:	bl	16798 <floor@plt+0x53cc>
   1962c:	ldr	r1, [pc, #860]	; 19990 <floor@plt+0x85c4>
   19630:	ldr	r0, [pc, #936]	; 199e0 <floor@plt+0x8614>
   19634:	bl	28a34 <_ZdlPv@@Base+0x384>
   19638:	ldr	fp, [pc, #852]	; 19994 <floor@plt+0x85c8>
   1963c:	b	18ad0 <floor@plt+0x7704>
   19640:	bl	16798 <floor@plt+0x53cc>
   19644:	ldr	r1, [pc, #844]	; 19998 <floor@plt+0x85cc>
   19648:	ldr	r0, [pc, #912]	; 199e0 <floor@plt+0x8614>
   1964c:	bl	28a34 <_ZdlPv@@Base+0x384>
   19650:	mov	fp, #352	; 0x160
   19654:	b	18ad0 <floor@plt+0x7704>
   19658:	bl	16798 <floor@plt+0x53cc>
   1965c:	ldr	r1, [pc, #824]	; 1999c <floor@plt+0x85d0>
   19660:	ldr	r0, [pc, #888]	; 199e0 <floor@plt+0x8614>
   19664:	bl	28a34 <_ZdlPv@@Base+0x384>
   19668:	ldr	fp, [pc, #816]	; 199a0 <floor@plt+0x85d4>
   1966c:	b	18ad0 <floor@plt+0x7704>
   19670:	bl	16798 <floor@plt+0x53cc>
   19674:	ldr	r1, [pc, #808]	; 199a4 <floor@plt+0x85d8>
   19678:	ldr	r0, [pc, #864]	; 199e0 <floor@plt+0x8614>
   1967c:	bl	28a34 <_ZdlPv@@Base+0x384>
   19680:	ldr	fp, [pc, #800]	; 199a8 <floor@plt+0x85dc>
   19684:	b	18ad0 <floor@plt+0x7704>
   19688:	bl	16798 <floor@plt+0x53cc>
   1968c:	bl	16828 <floor@plt+0x545c>
   19690:	cmp	r0, #62	; 0x3e
   19694:	beq	1987c <floor@plt+0x84b0>
   19698:	ldr	r1, [pc, #780]	; 199ac <floor@plt+0x85e0>
   1969c:	ldr	r0, [pc, #828]	; 199e0 <floor@plt+0x8614>
   196a0:	bl	28a34 <_ZdlPv@@Base+0x384>
   196a4:	ldr	fp, [pc, #772]	; 199b0 <floor@plt+0x85e4>
   196a8:	b	18ad0 <floor@plt+0x7704>
   196ac:	ldr	r0, [pc, #808]	; 199dc <floor@plt+0x8610>
   196b0:	bl	28f98 <_ZdlPv@@Base+0x8e8>
   196b4:	ldr	r3, [r4, #24]
   196b8:	ldr	r2, [r4, #28]
   196bc:	uxtb	sl, sl
   196c0:	cmp	r2, r3
   196c4:	ble	19894 <floor@plt+0x84c8>
   196c8:	ldr	r2, [r4, #20]
   196cc:	add	r1, r3, #1
   196d0:	str	r1, [r4, #24]
   196d4:	ldr	r6, [pc, #768]	; 199dc <floor@plt+0x8610>
   196d8:	strb	sl, [r2, r3]
   196dc:	b	196f0 <floor@plt+0x8324>
   196e0:	ldr	r2, [r4, #20]
   196e4:	add	r1, r3, #1
   196e8:	str	r1, [r4, #24]
   196ec:	strb	r5, [r2, r3]
   196f0:	bl	16828 <floor@plt+0x545c>
   196f4:	cmn	r0, #1
   196f8:	cmpne	r0, #10
   196fc:	mov	r5, r0
   19700:	beq	1972c <floor@plt+0x8360>
   19704:	bl	16798 <floor@plt+0x53cc>
   19708:	ldr	r3, [r4, #24]
   1970c:	ldr	r2, [r4, #28]
   19710:	uxtb	r5, r5
   19714:	cmp	r2, r3
   19718:	bgt	196e0 <floor@plt+0x8314>
   1971c:	mov	r0, r6
   19720:	bl	28b34 <_ZdlPv@@Base+0x484>
   19724:	ldr	r3, [r4, #24]
   19728:	b	196e0 <floor@plt+0x8314>
   1972c:	ldr	r1, [pc, #680]	; 199dc <floor@plt+0x8610>
   19730:	ldr	fp, [pc, #636]	; 199b4 <floor@plt+0x85e8>
   19734:	sub	r0, r1, #12
   19738:	bl	289ec <_ZdlPv@@Base+0x33c>
   1973c:	b	18ad0 <floor@plt+0x7704>
   19740:	bl	16798 <floor@plt+0x53cc>
   19744:	bl	16828 <floor@plt+0x545c>
   19748:	cmn	r0, #1
   1974c:	mov	r7, r0
   19750:	beq	198b4 <floor@plt+0x84e8>
   19754:	ldr	r8, [pc, #604]	; 199b8 <floor@plt+0x85ec>
   19758:	uxtb	r3, r0
   1975c:	ldrb	r3, [r8, r3]
   19760:	cmp	r3, #0
   19764:	beq	198b4 <floor@plt+0x84e8>
   19768:	ldr	r3, [r4, #12]
   1976c:	ldr	r2, [r4, #16]
   19770:	uxtb	r6, r6
   19774:	cmp	r3, r2
   19778:	bge	19a1c <floor@plt+0x8650>
   1977c:	ldr	r2, [r4, #8]
   19780:	add	r1, r3, #1
   19784:	str	r1, [r4, #12]
   19788:	strb	r6, [r2, r3]
   1978c:	ldr	r3, [r4, #12]
   19790:	ldr	r2, [r4, #16]
   19794:	uxtb	r6, r5
   19798:	cmp	r3, r2
   1979c:	bge	19a2c <floor@plt+0x8660>
   197a0:	ldr	r2, [r4, #8]
   197a4:	add	r1, r3, #1
   197a8:	mov	sl, r5
   197ac:	str	r1, [r4, #12]
   197b0:	mov	r5, r7
   197b4:	strb	r6, [r2, r3]
   197b8:	uxtb	r7, r7
   197bc:	b	19280 <floor@plt+0x7eb4>
   197c0:	cmp	sl, #45	; 0x2d
   197c4:	rsbeq	r6, r6, #0
   197c8:	mov	r0, r6
   197cc:	vldr	d0, [pc, #420]	; 19978 <floor@plt+0x85ac>
   197d0:	bl	112dc <__powidf2@plt>
   197d4:	vldr	d7, [r4, #48]	; 0x30
   197d8:	mov	fp, #260	; 0x104
   197dc:	vmul.f64	d7, d7, d0
   197e0:	vstr	d7, [r4, #48]	; 0x30
   197e4:	b	18ad0 <floor@plt+0x7704>
   197e8:	ldr	r0, [pc, #496]	; 199e0 <floor@plt+0x8614>
   197ec:	bl	28b34 <_ZdlPv@@Base+0x484>
   197f0:	b	19568 <floor@plt+0x819c>
   197f4:	cmp	sl, #45	; 0x2d
   197f8:	bic	r5, r0, #32
   197fc:	rsbeq	r6, r6, #0
   19800:	cmp	r5, #73	; 0x49
   19804:	bne	197c8 <floor@plt+0x83fc>
   19808:	ldr	r3, [r4, #12]
   1980c:	ldr	r2, [r4, #16]
   19810:	cmp	r3, r2
   19814:	bge	19928 <floor@plt+0x855c>
   19818:	ldr	r2, [r4, #8]
   1981c:	add	r1, r3, #1
   19820:	str	r1, [r4, #12]
   19824:	strb	r7, [r2, r3]
   19828:	bl	16798 <floor@plt+0x53cc>
   1982c:	b	197c8 <floor@plt+0x83fc>
   19830:	bl	16798 <floor@plt+0x53cc>
   19834:	ldr	r1, [pc, #384]	; 199bc <floor@plt+0x85f0>
   19838:	ldr	r0, [pc, #416]	; 199e0 <floor@plt+0x8614>
   1983c:	bl	28a34 <_ZdlPv@@Base+0x384>
   19840:	ldr	fp, [pc, #376]	; 199c0 <floor@plt+0x85f4>
   19844:	b	18ad0 <floor@plt+0x7704>
   19848:	mov	r0, #12
   1984c:	bl	28660 <_Znwj@@Base>
   19850:	ldr	r2, [r4]
   19854:	ldr	r1, [pc, #360]	; 199c4 <floor@plt+0x85f8>
   19858:	mov	r3, #0
   1985c:	mov	fp, #260	; 0x104
   19860:	stm	r0, {r1, r2, r6}
   19864:	stm	r4, {r0, r3}
   19868:	b	18ad0 <floor@plt+0x7704>
   1986c:	ldr	r0, [pc, #364]	; 199e0 <floor@plt+0x8614>
   19870:	bl	28b34 <_ZdlPv@@Base+0x484>
   19874:	ldr	r3, [r4, #12]
   19878:	b	19294 <floor@plt+0x7ec8>
   1987c:	bl	16798 <floor@plt+0x53cc>
   19880:	ldr	r1, [pc, #320]	; 199c8 <floor@plt+0x85fc>
   19884:	ldr	r0, [pc, #340]	; 199e0 <floor@plt+0x8614>
   19888:	bl	28a34 <_ZdlPv@@Base+0x384>
   1988c:	mov	fp, #268	; 0x10c
   19890:	b	18ad0 <floor@plt+0x7704>
   19894:	ldr	r0, [pc, #320]	; 199dc <floor@plt+0x8610>
   19898:	bl	28b34 <_ZdlPv@@Base+0x484>
   1989c:	ldr	r3, [r4, #24]
   198a0:	b	196c8 <floor@plt+0x82fc>
   198a4:	ldr	r0, [pc, #308]	; 199e0 <floor@plt+0x8614>
   198a8:	bl	28b34 <_ZdlPv@@Base+0x484>
   198ac:	ldr	r3, [r4, #12]
   198b0:	b	1926c <floor@plt+0x7ea0>
   198b4:	mov	r0, #12
   198b8:	bl	28660 <_Znwj@@Base>
   198bc:	ldr	r7, [pc, #256]	; 199c4 <floor@plt+0x85f8>
   198c0:	ldr	r2, [r4]
   198c4:	uxtb	r5, r5
   198c8:	mov	fp, #260	; 0x104
   198cc:	mov	r3, r0
   198d0:	str	r5, [r0, #8]
   198d4:	str	r2, [r0, #4]
   198d8:	mov	r5, #0
   198dc:	str	r7, [r3]
   198e0:	mov	r0, #12
   198e4:	str	r3, [r4]
   198e8:	str	r5, [r4, #4]
   198ec:	bl	28660 <_Znwj@@Base>
   198f0:	ldr	r3, [r4]
   198f4:	str	r5, [r4, #4]
   198f8:	str	r7, [r0]
   198fc:	str	r6, [r0, #8]
   19900:	str	r3, [r0, #4]
   19904:	str	r0, [r4]
   19908:	b	18ad0 <floor@plt+0x7704>
   1990c:	ldr	r0, [pc, #204]	; 199e0 <floor@plt+0x8614>
   19910:	bl	28b34 <_ZdlPv@@Base+0x484>
   19914:	b	1931c <floor@plt+0x7f50>
   19918:	ldr	r0, [pc, #192]	; 199e0 <floor@plt+0x8614>
   1991c:	bl	28b34 <_ZdlPv@@Base+0x484>
   19920:	ldr	r3, [r4, #12]
   19924:	b	19400 <floor@plt+0x8034>
   19928:	ldr	r0, [pc, #176]	; 199e0 <floor@plt+0x8614>
   1992c:	bl	28b34 <_ZdlPv@@Base+0x484>
   19930:	ldr	r3, [r4, #12]
   19934:	b	19818 <floor@plt+0x844c>
   19938:	bl	16798 <floor@plt+0x53cc>
   1993c:	ldr	r1, [pc, #136]	; 199cc <floor@plt+0x8600>
   19940:	ldr	r0, [pc, #152]	; 199e0 <floor@plt+0x8614>
   19944:	str	r5, [r4, #56]	; 0x38
   19948:	mov	fp, #264	; 0x108
   1994c:	bl	28b68 <_ZdlPv@@Base+0x4b8>
   19950:	b	18ad0 <floor@plt+0x7704>
   19954:	bl	16798 <floor@plt+0x53cc>
   19958:	ldr	r1, [pc, #112]	; 199d0 <floor@plt+0x8604>
   1995c:	ldr	r0, [pc, #124]	; 199e0 <floor@plt+0x8614>
   19960:	str	r5, [r4, #56]	; 0x38
   19964:	mov	fp, #264	; 0x108
   19968:	bl	28b68 <_ZdlPv@@Base+0x4b8>
   1996c:	b	18ad0 <floor@plt+0x7704>
   19970:			; <UNDEFINED> instruction: 0xffc00000
   19974:	ldrshmi	pc, [pc, #255]	; 19a7b <floor@plt+0x86af>	; <UNPREDICTABLE>
   19978:	andeq	r0, r0, r0
   1997c:	eormi	r0, r4, r0
   19980:	andeq	lr, r2, ip, lsr ip
   19984:	andeq	r0, r0, fp, lsl #2
   19988:	andeq	lr, r2, ip, asr ip
   1998c:	andeq	r0, r0, lr, asr r1
   19990:	andeq	lr, r2, r4, ror #24
   19994:	andeq	r0, r0, pc, asr r1
   19998:	andeq	lr, r2, r4, asr #24
   1999c:	andeq	lr, r2, ip, asr #24
   199a0:	andeq	r0, r0, r3, ror #2
   199a4:	andeq	lr, r2, r4, asr ip
   199a8:	andeq	r0, r0, r1, ror #2
   199ac:	andeq	lr, r2, r0, lsr ip
   199b0:	andeq	r0, r0, sl, lsl #2
   199b4:	andeq	r0, r0, r6, lsl #2
   199b8:			; <UNDEFINED> instruction: 0x00044db8
   199bc:	andeq	lr, r2, r8, lsr #24
   199c0:	andeq	r0, r0, r9, lsl #2
   199c4:	andeq	lr, r2, ip, ror #16
   199c8:	andeq	lr, r2, ip, lsr #24
   199cc:	andeq	lr, r2, r0, asr #21
   199d0:	andeq	lr, r2, r8, asr #7
   199d4:	andeq	lr, r2, ip, asr #7
   199d8:	andeq	lr, r2, r4, asr #7
   199dc:	andeq	r2, r4, ip, asr #17
   199e0:	andeq	r2, r4, r0, asr #17
   199e4:	bl	16798 <floor@plt+0x53cc>
   199e8:	ldr	r1, [pc, #-28]	; 199d4 <floor@plt+0x8608>
   199ec:	ldr	r0, [pc, #-20]	; 199e0 <floor@plt+0x8614>
   199f0:	str	r5, [r4, #56]	; 0x38
   199f4:	mov	fp, #264	; 0x108
   199f8:	bl	28b68 <_ZdlPv@@Base+0x4b8>
   199fc:	b	18ad0 <floor@plt+0x7704>
   19a00:	bl	16798 <floor@plt+0x53cc>
   19a04:	ldr	r1, [pc, #-52]	; 199d8 <floor@plt+0x860c>
   19a08:	ldr	r0, [pc, #-48]	; 199e0 <floor@plt+0x8614>
   19a0c:	str	r5, [r4, #56]	; 0x38
   19a10:	mov	fp, #264	; 0x108
   19a14:	bl	28b68 <_ZdlPv@@Base+0x4b8>
   19a18:	b	18ad0 <floor@plt+0x7704>
   19a1c:	ldr	r0, [pc, #-68]	; 199e0 <floor@plt+0x8614>
   19a20:	bl	28b34 <_ZdlPv@@Base+0x484>
   19a24:	ldr	r3, [r4, #12]
   19a28:	b	1977c <floor@plt+0x83b0>
   19a2c:	ldr	r0, [pc, #-84]	; 199e0 <floor@plt+0x8614>
   19a30:	bl	28b34 <_ZdlPv@@Base+0x484>
   19a34:	ldr	r3, [r4, #12]
   19a38:	b	197a0 <floor@plt+0x83d4>
   19a3c:	mov	r1, #92	; 0x5c
   19a40:	ldr	r0, [pc, #-104]	; 199e0 <floor@plt+0x8614>
   19a44:	bl	28ab8 <_ZdlPv@@Base+0x408>
   19a48:	b	18ad0 <floor@plt+0x7704>
   19a4c:	ldr	r1, [pc, #-120]	; 199dc <floor@plt+0x8610>
   19a50:	sub	r0, r1, #12
   19a54:	bl	289ec <_ZdlPv@@Base+0x33c>
   19a58:	b	18ad0 <floor@plt+0x7704>
   19a5c:	ldr	r0, [pc, #-132]	; 199e0 <floor@plt+0x8614>
   19a60:	bl	28b34 <_ZdlPv@@Base+0x484>
   19a64:	ldr	r3, [r4, #12]
   19a68:	b	195cc <floor@plt+0x8200>
   19a6c:	mov	r0, sl
   19a70:	bl	286b0 <_ZdlPv@@Base>
   19a74:	bl	111ec <__cxa_end_cleanup@plt>
   19a78:	push	{r4, r5, r6, lr}
   19a7c:	sub	sp, sp, #16
   19a80:	ldr	r5, [pc, #260]	; 19b8c <floor@plt+0x87c0>
   19a84:	mov	r0, #0
   19a88:	ldr	r3, [r5]
   19a8c:	str	r3, [sp, #12]
   19a90:	bl	18860 <floor@plt+0x7494>
   19a94:	sub	r0, r0, #256	; 0x100
   19a98:	sub	r0, r0, #2
   19a9c:	cmp	r0, #1
   19aa0:	bhi	19b54 <floor@plt+0x8788>
   19aa4:	ldr	r4, [pc, #228]	; 19b90 <floor@plt+0x87c4>
   19aa8:	ldr	r3, [r4, #24]
   19aac:	ldr	r2, [r4, #28]
   19ab0:	cmp	r2, r3
   19ab4:	ble	19b44 <floor@plt+0x8778>
   19ab8:	ldr	r2, [r4, #20]
   19abc:	add	r0, r3, #1
   19ac0:	mov	r1, #0
   19ac4:	str	r0, [r4, #24]
   19ac8:	strb	r1, [r2, r3]
   19acc:	mov	r0, sp
   19ad0:	ldr	r1, [pc, #188]	; 19b94 <floor@plt+0x87c8>
   19ad4:	bl	28974 <_ZdlPv@@Base+0x2c4>
   19ad8:	ldr	r6, [sp]
   19adc:	bl	17de4 <floor@plt+0x6a18>
   19ae0:	cmp	r0, #0
   19ae4:	beq	19b24 <floor@plt+0x8758>
   19ae8:	ldr	r3, [r4, #24]
   19aec:	ldr	r2, [r4, #28]
   19af0:	cmp	r3, r2
   19af4:	bge	19b6c <floor@plt+0x87a0>
   19af8:	ldr	r2, [r4, #20]
   19afc:	add	r0, r3, #1
   19b00:	mov	r1, #0
   19b04:	str	r0, [r4, #24]
   19b08:	strb	r1, [r2, r3]
   19b0c:	ldr	r0, [r4, #20]
   19b10:	bl	291f4 <_ZdlPv@@Base+0xb44>
   19b14:	mov	r2, r0
   19b18:	mov	r1, r6
   19b1c:	ldr	r0, [pc, #116]	; 19b98 <floor@plt+0x87cc>
   19b20:	bl	1627c <floor@plt+0x4eb0>
   19b24:	mov	r0, sp
   19b28:	bl	289cc <_ZdlPv@@Base+0x31c>
   19b2c:	ldr	r2, [sp, #12]
   19b30:	ldr	r3, [r5]
   19b34:	cmp	r2, r3
   19b38:	bne	19b7c <floor@plt+0x87b0>
   19b3c:	add	sp, sp, #16
   19b40:	pop	{r4, r5, r6, pc}
   19b44:	add	r0, r4, #20
   19b48:	bl	28b34 <_ZdlPv@@Base+0x484>
   19b4c:	ldr	r3, [r4, #24]
   19b50:	b	19ab8 <floor@plt+0x86ec>
   19b54:	ldr	r3, [pc, #64]	; 19b9c <floor@plt+0x87d0>
   19b58:	ldr	r0, [pc, #64]	; 19ba0 <floor@plt+0x87d4>
   19b5c:	mov	r2, r3
   19b60:	mov	r1, r3
   19b64:	bl	17778 <floor@plt+0x63ac>
   19b68:	b	19b2c <floor@plt+0x8760>
   19b6c:	ldr	r0, [pc, #32]	; 19b94 <floor@plt+0x87c8>
   19b70:	bl	28b34 <_ZdlPv@@Base+0x484>
   19b74:	ldr	r3, [r4, #24]
   19b78:	b	19af8 <floor@plt+0x872c>
   19b7c:	bl	111e0 <__stack_chk_fail@plt>
   19b80:	mov	r0, sp
   19b84:	bl	289cc <_ZdlPv@@Base+0x31c>
   19b88:	bl	111ec <__cxa_end_cleanup@plt>
   19b8c:	andeq	r1, r4, r0, ror sp
   19b90:			; <UNDEFINED> instruction: 0x000428b8
   19b94:	andeq	r2, r4, ip, asr #17
   19b98:	ldrdeq	r2, [r4], -r8
   19b9c:			; <UNDEFINED> instruction: 0x000454b8
   19ba0:	andeq	lr, r2, ip, ror #24
   19ba4:	push	{r4, lr}
   19ba8:	mov	r0, #0
   19bac:	bl	18860 <floor@plt+0x7494>
   19bb0:	sub	r0, r0, #256	; 0x100
   19bb4:	sub	r0, r0, #2
   19bb8:	cmp	r0, #1
   19bbc:	bhi	19c0c <floor@plt+0x8840>
   19bc0:	ldr	r4, [pc, #92]	; 19c24 <floor@plt+0x8858>
   19bc4:	ldr	r3, [r4, #24]
   19bc8:	ldr	r2, [r4, #28]
   19bcc:	cmp	r3, r2
   19bd0:	bge	19bfc <floor@plt+0x8830>
   19bd4:	ldr	r0, [r4, #20]
   19bd8:	mov	r1, #0
   19bdc:	add	r2, r3, #1
   19be0:	str	r2, [r4, #24]
   19be4:	strb	r1, [r0, r3]
   19be8:	mov	r2, r1
   19bec:	ldr	r0, [pc, #52]	; 19c28 <floor@plt+0x885c>
   19bf0:	ldr	r1, [r4, #20]
   19bf4:	pop	{r4, lr}
   19bf8:	b	1627c <floor@plt+0x4eb0>
   19bfc:	add	r0, r4, #20
   19c00:	bl	28b34 <_ZdlPv@@Base+0x484>
   19c04:	ldr	r3, [r4, #24]
   19c08:	b	19bd4 <floor@plt+0x8808>
   19c0c:	ldr	r3, [pc, #24]	; 19c2c <floor@plt+0x8860>
   19c10:	ldr	r0, [pc, #24]	; 19c30 <floor@plt+0x8864>
   19c14:	mov	r2, r3
   19c18:	mov	r1, r3
   19c1c:	pop	{r4, lr}
   19c20:	b	17778 <floor@plt+0x63ac>
   19c24:			; <UNDEFINED> instruction: 0x000428b8
   19c28:	ldrdeq	r2, [r4], -r8
   19c2c:			; <UNDEFINED> instruction: 0x000454b8
   19c30:	andeq	lr, r2, ip, ror #24
   19c34:	push	{r4, lr}
   19c38:	ldr	r4, [pc, #36]	; 19c64 <floor@plt+0x8898>
   19c3c:	ldr	r3, [r4, #784]	; 0x310
   19c40:	cmn	r3, #1
   19c44:	popne	{r4, pc}
   19c48:	ldr	r1, [pc, #24]	; 19c68 <floor@plt+0x889c>
   19c4c:	add	r0, r1, #52	; 0x34
   19c50:	bl	289ec <_ZdlPv@@Base+0x33c>
   19c54:	mov	r0, #1
   19c58:	bl	18860 <floor@plt+0x7494>
   19c5c:	str	r0, [r4, #784]	; 0x310
   19c60:	pop	{r4, pc}
   19c64:	andeq	r2, r4, ip
   19c68:	andeq	r2, r4, r0, asr #17
   19c6c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19c70:	ldr	r5, [pc, #1496]	; 1a250 <floor@plt+0x8e84>
   19c74:	ldr	r6, [pc, #1496]	; 1a254 <floor@plt+0x8e88>
   19c78:	ldr	r3, [r5, #72]	; 0x48
   19c7c:	ldr	r4, [r6, #784]	; 0x310
   19c80:	cmp	r3, #0
   19c84:	bne	19e94 <floor@plt+0x8ac8>
   19c88:	ldr	r9, [pc, #1480]	; 1a258 <floor@plt+0x8e8c>
   19c8c:	ldr	r8, [pc, #1480]	; 1a25c <floor@plt+0x8e90>
   19c90:	ldr	r7, [pc, #1480]	; 1a260 <floor@plt+0x8e94>
   19c94:	cmp	r4, #0
   19c98:	blt	19ebc <floor@plt+0x8af0>
   19c9c:	mvn	r3, #0
   19ca0:	str	r3, [r6, #784]	; 0x310
   19ca4:	cmp	r4, r9
   19ca8:	beq	1a1a8 <floor@plt+0x8ddc>
   19cac:	ble	19dc0 <floor@plt+0x89f4>
   19cb0:	cmp	r4, r8
   19cb4:	beq	1a1e4 <floor@plt+0x8e18>
   19cb8:	bgt	19d60 <floor@plt+0x8994>
   19cbc:	ldr	r3, [pc, #1440]	; 1a264 <floor@plt+0x8e98>
   19cc0:	cmp	r4, r3
   19cc4:	beq	19f60 <floor@plt+0x8b94>
   19cc8:	bgt	19d10 <floor@plt+0x8944>
   19ccc:	cmp	r4, #340	; 0x154
   19cd0:	beq	1a0b4 <floor@plt+0x8ce8>
   19cd4:	sub	r3, r3, #17
   19cd8:	cmp	r4, r3
   19cdc:	bne	19d08 <floor@plt+0x893c>
   19ce0:	ldr	r1, [pc, #1408]	; 1a268 <floor@plt+0x8e9c>
   19ce4:	add	r0, r1, #52	; 0x34
   19ce8:	bl	289ec <_ZdlPv@@Base+0x33c>
   19cec:	mov	r0, #1
   19cf0:	bl	18860 <floor@plt+0x7494>
   19cf4:	sub	r3, r0, #284	; 0x11c
   19cf8:	sub	r3, r3, #1
   19cfc:	cmp	r3, #1
   19d00:	str	r0, [r6, #784]	; 0x310
   19d04:	bhi	19f38 <floor@plt+0x8b6c>
   19d08:	mov	r0, r4
   19d0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19d10:	ldr	r3, [pc, #1364]	; 1a26c <floor@plt+0x8ea0>
   19d14:	cmp	r4, r3
   19d18:	beq	19f9c <floor@plt+0x8bd0>
   19d1c:	cmp	r4, #360	; 0x168
   19d20:	bne	19d08 <floor@plt+0x893c>
   19d24:	ldr	r1, [pc, #1340]	; 1a268 <floor@plt+0x8e9c>
   19d28:	add	r0, r1, #52	; 0x34
   19d2c:	bl	289ec <_ZdlPv@@Base+0x33c>
   19d30:	mov	r0, #1
   19d34:	bl	18860 <floor@plt+0x7494>
   19d38:	ldr	r3, [pc, #1328]	; 1a270 <floor@plt+0x8ea4>
   19d3c:	cmp	r0, r3
   19d40:	str	r0, [r6, #784]	; 0x310
   19d44:	beq	19d08 <floor@plt+0x893c>
   19d48:	ldr	r0, [pc, #1316]	; 1a274 <floor@plt+0x8ea8>
   19d4c:	bl	291f4 <_ZdlPv@@Base+0xb44>
   19d50:	ldr	r3, [pc, #1312]	; 1a278 <floor@plt+0x8eac>
   19d54:	ldr	r4, [pc, #1312]	; 1a27c <floor@plt+0x8eb0>
   19d58:	str	r0, [r3]
   19d5c:	b	19d08 <floor@plt+0x893c>
   19d60:	cmp	r4, #364	; 0x16c
   19d64:	beq	1a0f4 <floor@plt+0x8d28>
   19d68:	bgt	19dfc <floor@plt+0x8a30>
   19d6c:	ldr	r3, [pc, #1292]	; 1a280 <floor@plt+0x8eb4>
   19d70:	cmp	r4, r3
   19d74:	beq	19fd8 <floor@plt+0x8c0c>
   19d78:	add	r3, r3, #1
   19d7c:	cmp	r4, r3
   19d80:	bne	19d08 <floor@plt+0x893c>
   19d84:	ldr	r1, [pc, #1244]	; 1a268 <floor@plt+0x8e9c>
   19d88:	add	r0, r1, #52	; 0x34
   19d8c:	bl	289ec <_ZdlPv@@Base+0x33c>
   19d90:	mov	r0, #1
   19d94:	bl	18860 <floor@plt+0x7494>
   19d98:	ldr	r3, [pc, #1232]	; 1a270 <floor@plt+0x8ea4>
   19d9c:	cmp	r0, r3
   19da0:	str	r0, [r6, #784]	; 0x310
   19da4:	beq	19d08 <floor@plt+0x893c>
   19da8:	ldr	r0, [pc, #1236]	; 1a284 <floor@plt+0x8eb8>
   19dac:	bl	291f4 <_ZdlPv@@Base+0xb44>
   19db0:	ldr	r3, [pc, #1216]	; 1a278 <floor@plt+0x8eac>
   19db4:	ldr	r4, [pc, #1216]	; 1a27c <floor@plt+0x8eb0>
   19db8:	str	r0, [r3]
   19dbc:	b	19d08 <floor@plt+0x893c>
   19dc0:	ldr	r3, [pc, #1216]	; 1a288 <floor@plt+0x8ebc>
   19dc4:	cmp	r4, r3
   19dc8:	bgt	19e1c <floor@plt+0x8a50>
   19dcc:	cmp	r4, #260	; 0x104
   19dd0:	bgt	1a130 <floor@plt+0x8d64>
   19dd4:	bge	1a044 <floor@plt+0x8c78>
   19dd8:	sub	r3, r3, #4
   19ddc:	cmp	r4, r3
   19de0:	bge	1a054 <floor@plt+0x8c88>
   19de4:	cmn	r4, #1
   19de8:	beq	19eb0 <floor@plt+0x8ae4>
   19dec:	cmp	r4, #10
   19df0:	moveq	r4, #59	; 0x3b
   19df4:	mov	r0, r4
   19df8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19dfc:	cmp	r4, r7
   19e00:	beq	1a03c <floor@plt+0x8c70>
   19e04:	ldr	r3, [pc, #1152]	; 1a28c <floor@plt+0x8ec0>
   19e08:	cmp	r4, r3
   19e0c:	bne	19d08 <floor@plt+0x893c>
   19e10:	bl	19ba4 <floor@plt+0x87d8>
   19e14:	ldr	r4, [r6, #784]	; 0x310
   19e18:	b	19c94 <floor@plt+0x88c8>
   19e1c:	ldr	r3, [pc, #1132]	; 1a290 <floor@plt+0x8ec4>
   19e20:	cmp	r4, r3
   19e24:	beq	1a088 <floor@plt+0x8cbc>
   19e28:	ble	19e80 <floor@plt+0x8ab4>
   19e2c:	ldr	r3, [pc, #1120]	; 1a294 <floor@plt+0x8ec8>
   19e30:	cmp	r4, r3
   19e34:	beq	1a014 <floor@plt+0x8c48>
   19e38:	add	r3, r3, #52	; 0x34
   19e3c:	cmp	r4, r3
   19e40:	bne	19d08 <floor@plt+0x893c>
   19e44:	ldr	r1, [pc, #1052]	; 1a268 <floor@plt+0x8e9c>
   19e48:	add	r0, r1, #52	; 0x34
   19e4c:	bl	289ec <_ZdlPv@@Base+0x33c>
   19e50:	mov	r0, #1
   19e54:	bl	18860 <floor@plt+0x7494>
   19e58:	ldr	r3, [pc, #1040]	; 1a270 <floor@plt+0x8ea4>
   19e5c:	cmp	r0, r3
   19e60:	str	r0, [r6, #784]	; 0x310
   19e64:	beq	19d08 <floor@plt+0x893c>
   19e68:	ldr	r0, [pc, #1064]	; 1a298 <floor@plt+0x8ecc>
   19e6c:	bl	291f4 <_ZdlPv@@Base+0xb44>
   19e70:	ldr	r3, [pc, #1024]	; 1a278 <floor@plt+0x8eac>
   19e74:	ldr	r4, [pc, #1024]	; 1a27c <floor@plt+0x8eb0>
   19e78:	str	r0, [r3]
   19e7c:	b	19d08 <floor@plt+0x893c>
   19e80:	cmp	r4, #264	; 0x108
   19e84:	ldreq	r3, [pc, #1004]	; 1a278 <floor@plt+0x8eac>
   19e88:	ldreq	r2, [r5, #56]	; 0x38
   19e8c:	streq	r2, [r3]
   19e90:	b	19d08 <floor@plt+0x893c>
   19e94:	cmn	r4, #1
   19e98:	bne	19f24 <floor@plt+0x8b58>
   19e9c:	cmp	r3, #2
   19ea0:	beq	19f08 <floor@plt+0x8b3c>
   19ea4:	bl	17de4 <floor@plt+0x6a18>
   19ea8:	cmp	r0, #0
   19eac:	bne	19ecc <floor@plt+0x8b00>
   19eb0:	mov	r4, #0
   19eb4:	mov	r0, r4
   19eb8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19ebc:	mov	r0, #1
   19ec0:	bl	18860 <floor@plt+0x7494>
   19ec4:	mov	r4, r0
   19ec8:	b	19ca4 <floor@plt+0x88d8>
   19ecc:	ldr	r3, [r5, #24]
   19ed0:	ldr	r2, [r5, #28]
   19ed4:	cmp	r2, r3
   19ed8:	ble	19f50 <floor@plt+0x8b84>
   19edc:	ldr	r2, [r5, #20]
   19ee0:	add	r0, r3, #1
   19ee4:	mov	r1, #0
   19ee8:	str	r0, [r5, #24]
   19eec:	strb	r1, [r2, r3]
   19ef0:	ldr	r0, [r5, #20]
   19ef4:	bl	291f4 <_ZdlPv@@Base+0xb44>
   19ef8:	ldr	r3, [pc, #888]	; 1a278 <floor@plt+0x8eac>
   19efc:	ldr	r4, [pc, #920]	; 1a29c <floor@plt+0x8ed0>
   19f00:	str	r0, [r3]
   19f04:	b	19d08 <floor@plt+0x893c>
   19f08:	bl	1800c <floor@plt+0x6c40>
   19f0c:	ldr	r3, [pc, #868]	; 1a278 <floor@plt+0x8eac>
   19f10:	cmp	r0, #0
   19f14:	str	r0, [r3]
   19f18:	ldrne	r4, [pc, #892]	; 1a29c <floor@plt+0x8ed0>
   19f1c:	bne	19d08 <floor@plt+0x893c>
   19f20:	b	19eb0 <floor@plt+0x8ae4>
   19f24:	ldr	r1, [pc, #884]	; 1a2a0 <floor@plt+0x8ed4>
   19f28:	ldr	r0, [pc, #884]	; 1a2a4 <floor@plt+0x8ed8>
   19f2c:	bl	26c88 <floor@plt+0x158bc>
   19f30:	ldr	r3, [r5, #72]	; 0x48
   19f34:	b	19e9c <floor@plt+0x8ad0>
   19f38:	ldr	r0, [pc, #872]	; 1a2a8 <floor@plt+0x8edc>
   19f3c:	bl	291f4 <_ZdlPv@@Base+0xb44>
   19f40:	ldr	r3, [pc, #816]	; 1a278 <floor@plt+0x8eac>
   19f44:	ldr	r4, [pc, #816]	; 1a27c <floor@plt+0x8eb0>
   19f48:	str	r0, [r3]
   19f4c:	b	19d08 <floor@plt+0x893c>
   19f50:	ldr	r0, [pc, #852]	; 1a2ac <floor@plt+0x8ee0>
   19f54:	bl	28b34 <_ZdlPv@@Base+0x484>
   19f58:	ldr	r3, [r5, #24]
   19f5c:	b	19edc <floor@plt+0x8b10>
   19f60:	ldr	r1, [pc, #768]	; 1a268 <floor@plt+0x8e9c>
   19f64:	add	r0, r1, #52	; 0x34
   19f68:	bl	289ec <_ZdlPv@@Base+0x33c>
   19f6c:	mov	r0, #1
   19f70:	bl	18860 <floor@plt+0x7494>
   19f74:	ldr	r3, [pc, #756]	; 1a270 <floor@plt+0x8ea4>
   19f78:	cmp	r0, r3
   19f7c:	str	r0, [r6, #784]	; 0x310
   19f80:	beq	19d08 <floor@plt+0x893c>
   19f84:	ldr	r0, [pc, #804]	; 1a2b0 <floor@plt+0x8ee4>
   19f88:	bl	291f4 <_ZdlPv@@Base+0xb44>
   19f8c:	ldr	r3, [pc, #740]	; 1a278 <floor@plt+0x8eac>
   19f90:	ldr	r4, [pc, #740]	; 1a27c <floor@plt+0x8eb0>
   19f94:	str	r0, [r3]
   19f98:	b	19d08 <floor@plt+0x893c>
   19f9c:	ldr	r1, [pc, #708]	; 1a268 <floor@plt+0x8e9c>
   19fa0:	add	r0, r1, #52	; 0x34
   19fa4:	bl	289ec <_ZdlPv@@Base+0x33c>
   19fa8:	mov	r0, #1
   19fac:	bl	18860 <floor@plt+0x7494>
   19fb0:	ldr	r3, [pc, #696]	; 1a270 <floor@plt+0x8ea4>
   19fb4:	cmp	r0, r3
   19fb8:	str	r0, [r6, #784]	; 0x310
   19fbc:	beq	19d08 <floor@plt+0x893c>
   19fc0:	ldr	r0, [pc, #748]	; 1a2b4 <floor@plt+0x8ee8>
   19fc4:	bl	291f4 <_ZdlPv@@Base+0xb44>
   19fc8:	ldr	r3, [pc, #680]	; 1a278 <floor@plt+0x8eac>
   19fcc:	ldr	r4, [pc, #680]	; 1a27c <floor@plt+0x8eb0>
   19fd0:	str	r0, [r3]
   19fd4:	b	19d08 <floor@plt+0x893c>
   19fd8:	ldr	r1, [pc, #648]	; 1a268 <floor@plt+0x8e9c>
   19fdc:	add	r0, r1, #52	; 0x34
   19fe0:	bl	289ec <_ZdlPv@@Base+0x33c>
   19fe4:	mov	r0, #1
   19fe8:	bl	18860 <floor@plt+0x7494>
   19fec:	ldr	r3, [pc, #636]	; 1a270 <floor@plt+0x8ea4>
   19ff0:	cmp	r0, r3
   19ff4:	str	r0, [r6, #784]	; 0x310
   19ff8:	beq	19d08 <floor@plt+0x893c>
   19ffc:	ldr	r0, [pc, #692]	; 1a2b8 <floor@plt+0x8eec>
   1a000:	bl	291f4 <_ZdlPv@@Base+0xb44>
   1a004:	ldr	r3, [pc, #620]	; 1a278 <floor@plt+0x8eac>
   1a008:	ldr	r4, [pc, #620]	; 1a27c <floor@plt+0x8eb0>
   1a00c:	str	r0, [r3]
   1a010:	b	19d08 <floor@plt+0x893c>
   1a014:	ldr	r1, [pc, #588]	; 1a268 <floor@plt+0x8e9c>
   1a018:	add	r0, r1, #52	; 0x34
   1a01c:	bl	289ec <_ZdlPv@@Base+0x33c>
   1a020:	mov	r0, #1
   1a024:	bl	18860 <floor@plt+0x7494>
   1a028:	ldr	r3, [pc, #576]	; 1a270 <floor@plt+0x8ea4>
   1a02c:	cmp	r0, r3
   1a030:	str	r0, [r6, #784]	; 0x310
   1a034:	moveq	r4, #356	; 0x164
   1a038:	b	19d08 <floor@plt+0x893c>
   1a03c:	bl	19a78 <floor@plt+0x86ac>
   1a040:	b	19e14 <floor@plt+0x8a48>
   1a044:	ldrd	r0, [r5, #48]	; 0x30
   1a048:	ldr	r3, [pc, #552]	; 1a278 <floor@plt+0x8eac>
   1a04c:	strd	r0, [r3]
   1a050:	b	19d08 <floor@plt+0x893c>
   1a054:	ldrd	r2, [r5, #24]
   1a058:	cmp	r2, r3
   1a05c:	bge	1a244 <floor@plt+0x8e78>
   1a060:	ldrd	r2, [r5, #20]
   1a064:	mov	r1, #0
   1a068:	add	r0, r3, #1
   1a06c:	str	r0, [r5, #24]
   1a070:	strb	r1, [r2, r3]
   1a074:	ldr	r0, [r5, #20]
   1a078:	bl	291f4 <_ZdlPv@@Base+0xb44>
   1a07c:	ldr	r3, [pc, #500]	; 1a278 <floor@plt+0x8eac>
   1a080:	str	r0, [r3]
   1a084:	b	19d08 <floor@plt+0x893c>
   1a088:	ldr	r1, [pc, #472]	; 1a268 <floor@plt+0x8e9c>
   1a08c:	add	r0, r1, #52	; 0x34
   1a090:	bl	289ec <_ZdlPv@@Base+0x33c>
   1a094:	mov	r0, #1
   1a098:	bl	18860 <floor@plt+0x7494>
   1a09c:	ldr	r2, [pc, #460]	; 1a270 <floor@plt+0x8ea4>
   1a0a0:	ldr	r3, [pc, #532]	; 1a2bc <floor@plt+0x8ef0>
   1a0a4:	cmp	r0, r2
   1a0a8:	str	r0, [r6, #784]	; 0x310
   1a0ac:	moveq	r4, r3
   1a0b0:	b	19d08 <floor@plt+0x893c>
   1a0b4:	ldr	r1, [pc, #428]	; 1a268 <floor@plt+0x8e9c>
   1a0b8:	add	r0, r1, #52	; 0x34
   1a0bc:	bl	289ec <_ZdlPv@@Base+0x33c>
   1a0c0:	mov	r0, #1
   1a0c4:	bl	18860 <floor@plt+0x7494>
   1a0c8:	sub	r3, r0, #284	; 0x11c
   1a0cc:	sub	r3, r3, #1
   1a0d0:	cmp	r3, #1
   1a0d4:	str	r0, [r6, #784]	; 0x310
   1a0d8:	bls	19d08 <floor@plt+0x893c>
   1a0dc:	ldr	r0, [pc, #476]	; 1a2c0 <floor@plt+0x8ef4>
   1a0e0:	bl	291f4 <_ZdlPv@@Base+0xb44>
   1a0e4:	ldr	r3, [pc, #396]	; 1a278 <floor@plt+0x8eac>
   1a0e8:	ldr	r4, [pc, #396]	; 1a27c <floor@plt+0x8eb0>
   1a0ec:	str	r0, [r3]
   1a0f0:	b	19d08 <floor@plt+0x893c>
   1a0f4:	ldr	r1, [pc, #364]	; 1a268 <floor@plt+0x8e9c>
   1a0f8:	add	r0, r1, #52	; 0x34
   1a0fc:	bl	289ec <_ZdlPv@@Base+0x33c>
   1a100:	mov	r0, #1
   1a104:	bl	18860 <floor@plt+0x7494>
   1a108:	ldr	r3, [pc, #352]	; 1a270 <floor@plt+0x8ea4>
   1a10c:	cmp	r0, r3
   1a110:	str	r0, [r6, #784]	; 0x310
   1a114:	beq	19d08 <floor@plt+0x893c>
   1a118:	ldr	r0, [pc, #420]	; 1a2c4 <floor@plt+0x8ef8>
   1a11c:	bl	291f4 <_ZdlPv@@Base+0xb44>
   1a120:	ldr	r3, [pc, #336]	; 1a278 <floor@plt+0x8eac>
   1a124:	ldr	r4, [pc, #336]	; 1a27c <floor@plt+0x8eb0>
   1a128:	str	r0, [r3]
   1a12c:	b	19d08 <floor@plt+0x893c>
   1a130:	ldr	r3, [r5, #24]
   1a134:	ldr	r2, [r5, #28]
   1a138:	cmp	r3, r2
   1a13c:	bge	1a234 <floor@plt+0x8e68>
   1a140:	ldr	r2, [r5, #20]
   1a144:	mov	r1, #0
   1a148:	add	r0, r3, #1
   1a14c:	str	r0, [r5, #24]
   1a150:	strb	r1, [r2, r3]
   1a154:	ldr	r6, [r5]
   1a158:	cmp	r6, r1
   1a15c:	beq	1a220 <floor@plt+0x8e54>
   1a160:	ldr	r7, [pc, #352]	; 1a2c8 <floor@plt+0x8efc>
   1a164:	b	1a174 <floor@plt+0x8da8>
   1a168:	ldr	r6, [r6, #4]
   1a16c:	cmp	r6, #0
   1a170:	beq	1a220 <floor@plt+0x8e54>
   1a174:	ldr	r3, [r6]
   1a178:	mov	r2, r7
   1a17c:	ldr	r1, [pc, #328]	; 1a2cc <floor@plt+0x8f00>
   1a180:	ldr	r3, [r3, #16]
   1a184:	mov	r0, r6
   1a188:	blx	r3
   1a18c:	cmp	r0, #0
   1a190:	beq	1a168 <floor@plt+0x8d9c>
   1a194:	ldr	r6, [pc, #220]	; 1a278 <floor@plt+0x8eac>
   1a198:	ldr	r0, [r5, #20]
   1a19c:	bl	291f4 <_ZdlPv@@Base+0xb44>
   1a1a0:	str	r0, [r6]
   1a1a4:	b	19d08 <floor@plt+0x893c>
   1a1a8:	ldr	r1, [pc, #184]	; 1a268 <floor@plt+0x8e9c>
   1a1ac:	add	r0, r1, #52	; 0x34
   1a1b0:	bl	289ec <_ZdlPv@@Base+0x33c>
   1a1b4:	mov	r0, #1
   1a1b8:	bl	18860 <floor@plt+0x7494>
   1a1bc:	ldr	r3, [pc, #172]	; 1a270 <floor@plt+0x8ea4>
   1a1c0:	cmp	r0, r3
   1a1c4:	str	r0, [r6, #784]	; 0x310
   1a1c8:	beq	19d08 <floor@plt+0x893c>
   1a1cc:	ldr	r0, [pc, #252]	; 1a2d0 <floor@plt+0x8f04>
   1a1d0:	bl	291f4 <_ZdlPv@@Base+0xb44>
   1a1d4:	ldr	r3, [pc, #156]	; 1a278 <floor@plt+0x8eac>
   1a1d8:	ldr	r4, [pc, #156]	; 1a27c <floor@plt+0x8eb0>
   1a1dc:	str	r0, [r3]
   1a1e0:	b	19d08 <floor@plt+0x893c>
   1a1e4:	ldr	r1, [pc, #124]	; 1a268 <floor@plt+0x8e9c>
   1a1e8:	add	r0, r1, #52	; 0x34
   1a1ec:	bl	289ec <_ZdlPv@@Base+0x33c>
   1a1f0:	mov	r0, #1
   1a1f4:	bl	18860 <floor@plt+0x7494>
   1a1f8:	ldr	r3, [pc, #112]	; 1a270 <floor@plt+0x8ea4>
   1a1fc:	cmp	r0, r3
   1a200:	str	r0, [r6, #784]	; 0x310
   1a204:	beq	19d08 <floor@plt+0x893c>
   1a208:	ldr	r0, [pc, #196]	; 1a2d4 <floor@plt+0x8f08>
   1a20c:	bl	291f4 <_ZdlPv@@Base+0xb44>
   1a210:	ldr	r3, [pc, #96]	; 1a278 <floor@plt+0x8eac>
   1a214:	ldr	r4, [pc, #96]	; 1a27c <floor@plt+0x8eb0>
   1a218:	str	r0, [r3]
   1a21c:	b	19d08 <floor@plt+0x893c>
   1a220:	ldr	r6, [pc, #80]	; 1a278 <floor@plt+0x8eac>
   1a224:	mov	r2, #0
   1a228:	mvn	r3, #0
   1a22c:	strd	r2, [r6, #4]
   1a230:	b	1a198 <floor@plt+0x8dcc>
   1a234:	ldr	r0, [pc, #112]	; 1a2ac <floor@plt+0x8ee0>
   1a238:	bl	28b34 <_ZdlPv@@Base+0x484>
   1a23c:	ldr	r3, [r5, #24]
   1a240:	b	1a140 <floor@plt+0x8d74>
   1a244:	ldr	r0, [pc, #96]	; 1a2ac <floor@plt+0x8ee0>
   1a248:	bl	28b34 <_ZdlPv@@Base+0x484>
   1a24c:	b	1a060 <floor@plt+0x8c94>
   1a250:			; <UNDEFINED> instruction: 0x000428b8
   1a254:	andeq	r2, r4, ip
   1a258:	andeq	r0, r0, r3, asr r1
   1a25c:	andeq	r0, r0, r9, ror #2
   1a260:	andeq	r0, r0, sl, ror r1
   1a264:	andeq	r0, r0, r6, ror #2
   1a268:	andeq	r2, r4, r0, asr #17
   1a26c:	andeq	r0, r0, r7, ror #2
   1a270:	andeq	r0, r0, pc, lsr #2
   1a274:			; <UNDEFINED> instruction: 0x0002ecb4
   1a278:	muleq	r4, r8, r8
   1a27c:	andeq	r0, r0, r3, lsl #2
   1a280:	andeq	r0, r0, sl, ror #2
   1a284:	andeq	lr, r2, r0, ror #25
   1a288:	andeq	r0, r0, r6, lsl #2
   1a28c:	andeq	r0, r0, fp, ror r1
   1a290:	andeq	r0, r0, sp, lsl r1
   1a294:	andeq	r0, r0, lr, lsl r1
   1a298:	andeq	lr, r2, r4, asr #25
   1a29c:	andeq	r0, r0, r7, lsl #2
   1a2a0:	andeq	lr, r2, r4, ror #20
   1a2a4:	strdeq	r0, [r0], -r9
   1a2a8:	muleq	r2, ip, ip
   1a2ac:	andeq	r2, r4, ip, asr #17
   1a2b0:	andeq	lr, r2, r4, lsr #25
   1a2b4:	andeq	lr, r2, ip, lsr #25
   1a2b8:	ldrdeq	lr, [r2], -r0
   1a2bc:	andeq	r0, r0, r5, ror #2
   1a2c0:	muleq	r2, r4, ip
   1a2c4:	ldrdeq	lr, [r2], -r8
   1a2c8:	andeq	r2, r4, r0, lsr #17
   1a2cc:	muleq	r4, ip, r8
   1a2d0:	andeq	lr, r2, r8, asr #25
   1a2d4:			; <UNDEFINED> instruction: 0x0002ecbc
   1a2d8:	ldr	r3, [pc, #612]	; 1a544 <floor@plt+0x9178>
   1a2dc:	push	{r4, r5, r6, r7, r8, r9, lr}
   1a2e0:	sub	sp, sp, #60	; 0x3c
   1a2e4:	ldr	r6, [pc, #604]	; 1a548 <floor@plt+0x917c>
   1a2e8:	ldr	r2, [r3, #784]	; 0x310
   1a2ec:	mov	r7, r0
   1a2f0:	ldr	r3, [r6]
   1a2f4:	cmn	r2, #1
   1a2f8:	ldr	r4, [pc, #588]	; 1a54c <floor@plt+0x9180>
   1a2fc:	str	r3, [sp, #52]	; 0x34
   1a300:	beq	1a44c <floor@plt+0x9080>
   1a304:	ldr	r3, [r4, #64]	; 0x40
   1a308:	cmp	r3, #0
   1a30c:	ble	1a3e8 <floor@plt+0x901c>
   1a310:	ldr	r2, [r4, #68]	; 0x44
   1a314:	cmp	r3, r2
   1a318:	bge	1a4dc <floor@plt+0x9110>
   1a31c:	ldr	r2, [r4, #60]	; 0x3c
   1a320:	add	r0, r3, #1
   1a324:	mov	r1, #0
   1a328:	str	r0, [r4, #64]	; 0x40
   1a32c:	strb	r1, [r2, r3]
   1a330:	ldr	r5, [r4, #60]	; 0x3c
   1a334:	ldr	r4, [r4]
   1a338:	cmp	r4, #0
   1a33c:	bne	1a350 <floor@plt+0x8f84>
   1a340:	b	1a3fc <floor@plt+0x9030>
   1a344:	ldr	r4, [r4, #4]
   1a348:	cmp	r4, #0
   1a34c:	beq	1a3fc <floor@plt+0x9030>
   1a350:	ldr	r3, [r4]
   1a354:	add	r2, sp, #12
   1a358:	add	r1, sp, #8
   1a35c:	ldr	r3, [r3, #16]
   1a360:	mov	r0, r4
   1a364:	blx	r3
   1a368:	cmp	r0, #0
   1a36c:	beq	1a344 <floor@plt+0x8f78>
   1a370:	cmp	r5, #0
   1a374:	ldrd	r8, [sp, #8]
   1a378:	beq	1a4ec <floor@plt+0x9120>
   1a37c:	ldrb	r3, [r5]
   1a380:	mov	r1, r7
   1a384:	cmp	r3, #10
   1a388:	bne	1a398 <floor@plt+0x8fcc>
   1a38c:	ldrb	r3, [r5, #1]
   1a390:	cmp	r3, #0
   1a394:	beq	1a4a0 <floor@plt+0x90d4>
   1a398:	add	r4, sp, #32
   1a39c:	add	r0, sp, #16
   1a3a0:	bl	27058 <floor@plt+0x15c8c>
   1a3a4:	mov	r1, r5
   1a3a8:	mov	r0, r4
   1a3ac:	bl	27058 <floor@plt+0x15c8c>
   1a3b0:	ldr	r2, [pc, #408]	; 1a550 <floor@plt+0x9184>
   1a3b4:	str	r4, [sp]
   1a3b8:	str	r2, [sp, #4]
   1a3bc:	add	r3, sp, #16
   1a3c0:	mov	r1, r9
   1a3c4:	mov	r0, r8
   1a3c8:	ldr	r2, [pc, #388]	; 1a554 <floor@plt+0x9188>
   1a3cc:	bl	27510 <floor@plt+0x16144>
   1a3d0:	ldr	r2, [sp, #52]	; 0x34
   1a3d4:	ldr	r3, [r6]
   1a3d8:	cmp	r2, r3
   1a3dc:	bne	1a540 <floor@plt+0x9174>
   1a3e0:	add	sp, sp, #60	; 0x3c
   1a3e4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1a3e8:	ldr	r4, [r4]
   1a3ec:	cmp	r4, #0
   1a3f0:	beq	1a51c <floor@plt+0x9150>
   1a3f4:	mov	r5, #0
   1a3f8:	b	1a350 <floor@plt+0x8f84>
   1a3fc:	cmp	r5, #0
   1a400:	beq	1a51c <floor@plt+0x9150>
   1a404:	ldrb	r3, [r5]
   1a408:	mov	r1, r7
   1a40c:	cmp	r3, #10
   1a410:	bne	1a420 <floor@plt+0x9054>
   1a414:	ldrb	r3, [r5, #1]
   1a418:	cmp	r3, #0
   1a41c:	beq	1a480 <floor@plt+0x90b4>
   1a420:	add	r0, sp, #16
   1a424:	bl	27058 <floor@plt+0x15c8c>
   1a428:	mov	r1, r5
   1a42c:	add	r0, sp, #32
   1a430:	bl	27058 <floor@plt+0x15c8c>
   1a434:	add	r2, sp, #32
   1a438:	add	r1, sp, #16
   1a43c:	ldr	r3, [pc, #268]	; 1a550 <floor@plt+0x9184>
   1a440:	ldr	r0, [pc, #268]	; 1a554 <floor@plt+0x9188>
   1a444:	bl	27444 <floor@plt+0x16078>
   1a448:	b	1a3d0 <floor@plt+0x9004>
   1a44c:	ldr	r3, [r4, #12]
   1a450:	cmp	r3, #0
   1a454:	ble	1a3e8 <floor@plt+0x901c>
   1a458:	ldr	r2, [r4, #16]
   1a45c:	cmp	r2, r3
   1a460:	ble	1a4cc <floor@plt+0x9100>
   1a464:	ldr	r2, [r4, #8]
   1a468:	add	r0, r3, #1
   1a46c:	mov	r1, #0
   1a470:	str	r0, [r4, #12]
   1a474:	strb	r1, [r2, r3]
   1a478:	ldr	r5, [r4, #8]
   1a47c:	b	1a334 <floor@plt+0x8f68>
   1a480:	add	r0, sp, #32
   1a484:	bl	27058 <floor@plt+0x15c8c>
   1a488:	ldr	r3, [pc, #192]	; 1a550 <floor@plt+0x9184>
   1a48c:	add	r1, sp, #32
   1a490:	mov	r2, r3
   1a494:	ldr	r0, [pc, #188]	; 1a558 <floor@plt+0x918c>
   1a498:	bl	27444 <floor@plt+0x16078>
   1a49c:	b	1a3d0 <floor@plt+0x9004>
   1a4a0:	add	r0, sp, #32
   1a4a4:	bl	27058 <floor@plt+0x15c8c>
   1a4a8:	ldr	r2, [pc, #160]	; 1a550 <floor@plt+0x9184>
   1a4ac:	add	r3, sp, #32
   1a4b0:	str	r2, [sp, #4]
   1a4b4:	str	r2, [sp]
   1a4b8:	mov	r1, r9
   1a4bc:	mov	r0, r8
   1a4c0:	ldr	r2, [pc, #144]	; 1a558 <floor@plt+0x918c>
   1a4c4:	bl	27510 <floor@plt+0x16144>
   1a4c8:	b	1a3d0 <floor@plt+0x9004>
   1a4cc:	add	r0, r4, #8
   1a4d0:	bl	28b34 <_ZdlPv@@Base+0x484>
   1a4d4:	ldr	r3, [r4, #12]
   1a4d8:	b	1a464 <floor@plt+0x9098>
   1a4dc:	add	r0, r4, #60	; 0x3c
   1a4e0:	bl	28b34 <_ZdlPv@@Base+0x484>
   1a4e4:	ldr	r3, [r4, #64]	; 0x40
   1a4e8:	b	1a31c <floor@plt+0x8f50>
   1a4ec:	mov	r1, r7
   1a4f0:	add	r0, sp, #32
   1a4f4:	bl	27058 <floor@plt+0x15c8c>
   1a4f8:	ldr	r2, [pc, #80]	; 1a550 <floor@plt+0x9184>
   1a4fc:	add	r3, sp, #32
   1a500:	str	r2, [sp, #4]
   1a504:	str	r2, [sp]
   1a508:	mov	r1, r9
   1a50c:	mov	r0, r8
   1a510:	ldr	r2, [pc, #68]	; 1a55c <floor@plt+0x9190>
   1a514:	bl	27510 <floor@plt+0x16144>
   1a518:	b	1a3d0 <floor@plt+0x9004>
   1a51c:	mov	r1, r7
   1a520:	add	r0, sp, #32
   1a524:	bl	27058 <floor@plt+0x15c8c>
   1a528:	ldr	r3, [pc, #32]	; 1a550 <floor@plt+0x9184>
   1a52c:	add	r1, sp, #32
   1a530:	mov	r2, r3
   1a534:	ldr	r0, [pc, #32]	; 1a55c <floor@plt+0x9190>
   1a538:	bl	27444 <floor@plt+0x16078>
   1a53c:	b	1a3d0 <floor@plt+0x9004>
   1a540:	bl	111e0 <__stack_chk_fail@plt>
   1a544:	andeq	r2, r4, ip
   1a548:	andeq	r1, r4, r0, ror sp
   1a54c:			; <UNDEFINED> instruction: 0x000428b8
   1a550:			; <UNDEFINED> instruction: 0x000454b8
   1a554:	strdeq	lr, [r2], -r8
   1a558:	andeq	lr, r2, r4, ror #25
   1a55c:	andeq	lr, r2, r8, lsl #26
   1a560:	bx	lr
   1a564:	push	{r4, lr}
   1a568:	mov	r4, r0
   1a56c:	bl	286b0 <_ZdlPv@@Base>
   1a570:	mov	r0, r4
   1a574:	pop	{r4, pc}
   1a578:	ldr	r3, [pc, #20]	; 1a594 <floor@plt+0x91c8>
   1a57c:	push	{r4, lr}
   1a580:	mov	r4, r0
   1a584:	str	r3, [r0]
   1a588:	bl	175d8 <floor@plt+0x620c>
   1a58c:	mov	r0, r4
   1a590:	pop	{r4, pc}
   1a594:	andeq	lr, r2, r4, asr #17
   1a598:	ldr	r3, [pc, #40]	; 1a5c8 <floor@plt+0x91fc>
   1a59c:	push	{r4, lr}
   1a5a0:	mov	r4, r0
   1a5a4:	str	r3, [r0]
   1a5a8:	bl	175d8 <floor@plt+0x620c>
   1a5ac:	mov	r0, r4
   1a5b0:	bl	286b0 <_ZdlPv@@Base>
   1a5b4:	mov	r0, r4
   1a5b8:	pop	{r4, pc}
   1a5bc:	mov	r0, r4
   1a5c0:	bl	286b0 <_ZdlPv@@Base>
   1a5c4:	bl	111ec <__cxa_end_cleanup@plt>
   1a5c8:	andeq	lr, r2, r4, asr #17
   1a5cc:	andeq	r0, r0, r0
   1a5d0:	ldr	ip, [pc, #24]	; 1a5f0 <floor@plt+0x9224>
   1a5d4:	ldr	r3, [pc, #24]	; 1a5f4 <floor@plt+0x9228>
   1a5d8:	mov	r0, #1
   1a5dc:	ldr	ip, [ip]
   1a5e0:	ldr	r3, [r3]
   1a5e4:	str	ip, [r1]
   1a5e8:	str	r3, [r2]
   1a5ec:	bx	lr
   1a5f0:	andeq	r5, r4, ip, asr #9
   1a5f4:	andeq	r5, r4, ip, lsr #10
   1a5f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a5fc:	sub	sp, sp, #32
   1a600:	ldr	r6, [pc, #724]	; 1a8dc <floor@plt+0x9510>
   1a604:	ldr	r7, [r0, #16]
   1a608:	ldr	r3, [r6]
   1a60c:	cmp	r7, #0
   1a610:	str	r3, [sp, #28]
   1a614:	bne	1a7c8 <floor@plt+0x93fc>
   1a618:	ldr	r5, [r0, #28]
   1a61c:	mov	r4, r0
   1a620:	cmn	r5, #1
   1a624:	mvnne	r3, #0
   1a628:	strne	r3, [r0, #28]
   1a62c:	bne	1a658 <floor@plt+0x928c>
   1a630:	ldr	r5, [r0, #24]
   1a634:	cmn	r5, #1
   1a638:	mvnne	r3, #0
   1a63c:	strne	r3, [r0, #24]
   1a640:	bne	1a658 <floor@plt+0x928c>
   1a644:	ldr	r5, [r0, #20]
   1a648:	cmn	r5, #1
   1a64c:	beq	1a674 <floor@plt+0x92a8>
   1a650:	mvn	r3, #0
   1a654:	str	r3, [r0, #20]
   1a658:	ldr	r2, [sp, #28]
   1a65c:	ldr	r3, [r6]
   1a660:	mov	r0, r5
   1a664:	cmp	r2, r3
   1a668:	bne	1a8d8 <floor@plt+0x950c>
   1a66c:	add	sp, sp, #32
   1a670:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a674:	ldr	r0, [r0, #8]
   1a678:	bl	11204 <getc@plt>
   1a67c:	subs	r1, r0, #0
   1a680:	blt	1a6e0 <floor@plt+0x9314>
   1a684:	ldr	r8, [pc, #596]	; 1a8e0 <floor@plt+0x9514>
   1a688:	ldrb	r3, [r8, r1]
   1a68c:	cmp	r3, #0
   1a690:	beq	1a744 <floor@plt+0x9378>
   1a694:	ldr	sl, [pc, #584]	; 1a8e4 <floor@plt+0x9518>
   1a698:	ldr	r9, [pc, #584]	; 1a8e8 <floor@plt+0x951c>
   1a69c:	add	r0, sp, #8
   1a6a0:	bl	27084 <floor@plt+0x15cb8>
   1a6a4:	mov	r3, sl
   1a6a8:	ldr	r2, [pc, #564]	; 1a8e4 <floor@plt+0x9518>
   1a6ac:	add	r1, sp, #8
   1a6b0:	mov	r0, r9
   1a6b4:	bl	27444 <floor@plt+0x16078>
   1a6b8:	ldr	r0, [r4, #8]
   1a6bc:	bl	11204 <getc@plt>
   1a6c0:	str	r7, [r4, #12]
   1a6c4:	subs	r5, r0, #0
   1a6c8:	blt	1a6ec <floor@plt+0x9320>
   1a6cc:	ldrb	r3, [r8, r5]
   1a6d0:	cmp	r3, #0
   1a6d4:	beq	1a7d0 <floor@plt+0x9404>
   1a6d8:	mov	r1, r5
   1a6dc:	b	1a69c <floor@plt+0x92d0>
   1a6e0:	cmp	r1, #10
   1a6e4:	movne	r5, r1
   1a6e8:	beq	1a7d8 <floor@plt+0x940c>
   1a6ec:	mov	r3, #0
   1a6f0:	cmn	r5, #1
   1a6f4:	str	r3, [r4, #12]
   1a6f8:	bne	1a658 <floor@plt+0x928c>
   1a6fc:	ldr	r7, [pc, #480]	; 1a8e4 <floor@plt+0x9518>
   1a700:	mov	r0, #1
   1a704:	mov	r3, r7
   1a708:	mov	r2, r7
   1a70c:	mov	r1, r7
   1a710:	str	r0, [r4, #16]
   1a714:	ldr	r0, [pc, #464]	; 1a8ec <floor@plt+0x9520>
   1a718:	bl	27444 <floor@plt+0x16078>
   1a71c:	ldr	r2, [pc, #460]	; 1a8f0 <floor@plt+0x9524>
   1a720:	ldr	r1, [r4, #32]
   1a724:	mov	r3, r7
   1a728:	str	r7, [sp, #4]
   1a72c:	str	r7, [sp]
   1a730:	sub	r1, r1, #1
   1a734:	ldr	r0, [r2]
   1a738:	ldr	r2, [pc, #436]	; 1a8f4 <floor@plt+0x9528>
   1a73c:	bl	27510 <floor@plt+0x16144>
   1a740:	b	1a658 <floor@plt+0x928c>
   1a744:	ldr	r2, [r4, #12]
   1a748:	sub	r3, r1, #46	; 0x2e
   1a74c:	cmp	r2, #0
   1a750:	clz	r3, r3
   1a754:	lsr	r3, r3, #5
   1a758:	moveq	r3, #0
   1a75c:	cmp	r3, #0
   1a760:	beq	1a6e0 <floor@plt+0x9314>
   1a764:	ldr	r0, [r4, #8]
   1a768:	bl	11204 <getc@plt>
   1a76c:	cmp	r0, #80	; 0x50
   1a770:	bne	1a7f8 <floor@plt+0x942c>
   1a774:	ldr	r0, [r4, #8]
   1a778:	bl	11204 <getc@plt>
   1a77c:	sub	r3, r0, #69	; 0x45
   1a780:	cmp	r3, #1
   1a784:	mov	r7, r0
   1a788:	bls	1a86c <floor@plt+0x94a0>
   1a78c:	cmp	r0, #83	; 0x53
   1a790:	bne	1a814 <floor@plt+0x9448>
   1a794:	ldr	r0, [r4, #8]
   1a798:	bl	11204 <getc@plt>
   1a79c:	cmn	r0, #1
   1a7a0:	mov	r7, r0
   1a7a4:	bne	1a834 <floor@plt+0x9468>
   1a7a8:	ldr	r3, [pc, #308]	; 1a8e4 <floor@plt+0x9518>
   1a7ac:	ldr	r0, [pc, #324]	; 1a8f8 <floor@plt+0x952c>
   1a7b0:	mov	r2, r3
   1a7b4:	mov	r1, r3
   1a7b8:	bl	27444 <floor@plt+0x16078>
   1a7bc:	mov	r3, #1
   1a7c0:	str	r3, [r4, #16]
   1a7c4:	b	1a658 <floor@plt+0x928c>
   1a7c8:	mvn	r5, #0
   1a7cc:	b	1a658 <floor@plt+0x928c>
   1a7d0:	cmp	r5, #10
   1a7d4:	bne	1a658 <floor@plt+0x928c>
   1a7d8:	ldr	r2, [pc, #284]	; 1a8fc <floor@plt+0x9530>
   1a7dc:	mov	r3, #1
   1a7e0:	str	r3, [r4, #12]
   1a7e4:	ldr	r3, [r2]
   1a7e8:	mov	r5, #10
   1a7ec:	add	r3, r3, #1
   1a7f0:	str	r3, [r2]
   1a7f4:	b	1a658 <floor@plt+0x928c>
   1a7f8:	cmn	r0, #1
   1a7fc:	moveq	r5, #46	; 0x2e
   1a800:	beq	1a658 <floor@plt+0x928c>
   1a804:	ldr	r1, [r4, #8]
   1a808:	bl	111d4 <ungetc@plt>
   1a80c:	mov	r5, #46	; 0x2e
   1a810:	b	1a658 <floor@plt+0x928c>
   1a814:	cmn	r0, #1
   1a818:	beq	1a824 <floor@plt+0x9458>
   1a81c:	ldr	r1, [r4, #8]
   1a820:	bl	111d4 <ungetc@plt>
   1a824:	mov	r3, #80	; 0x50
   1a828:	str	r3, [r4, #20]
   1a82c:	mov	r5, #46	; 0x2e
   1a830:	b	1a658 <floor@plt+0x928c>
   1a834:	ldr	r1, [r4, #8]
   1a838:	bl	111d4 <ungetc@plt>
   1a83c:	cmp	r7, #10
   1a840:	cmpne	r7, #32
   1a844:	beq	1a7a8 <floor@plt+0x93dc>
   1a848:	ldr	r3, [pc, #176]	; 1a900 <floor@plt+0x9534>
   1a84c:	ldr	r3, [r3, #4]
   1a850:	cmp	r3, #0
   1a854:	bne	1a7a8 <floor@plt+0x93dc>
   1a858:	mov	r2, #83	; 0x53
   1a85c:	mov	r3, #80	; 0x50
   1a860:	mov	r5, #46	; 0x2e
   1a864:	strd	r2, [r4, #20]
   1a868:	b	1a658 <floor@plt+0x928c>
   1a86c:	ldr	r0, [r4, #8]
   1a870:	bl	11204 <getc@plt>
   1a874:	cmn	r0, #1
   1a878:	mov	r8, r0
   1a87c:	bne	1a8a0 <floor@plt+0x94d4>
   1a880:	ldr	r3, [pc, #120]	; 1a900 <floor@plt+0x9534>
   1a884:	sub	r7, r7, #70	; 0x46
   1a888:	mov	r2, #1
   1a88c:	clz	r7, r7
   1a890:	lsr	r7, r7, #5
   1a894:	str	r7, [r3]
   1a898:	str	r2, [r4, #16]
   1a89c:	b	1a658 <floor@plt+0x928c>
   1a8a0:	ldr	r1, [r4, #8]
   1a8a4:	bl	111d4 <ungetc@plt>
   1a8a8:	cmp	r8, #10
   1a8ac:	cmpne	r8, #32
   1a8b0:	beq	1a880 <floor@plt+0x94b4>
   1a8b4:	ldr	r3, [pc, #68]	; 1a900 <floor@plt+0x9534>
   1a8b8:	ldr	r2, [r3, #4]
   1a8bc:	cmp	r2, #0
   1a8c0:	bne	1a884 <floor@plt+0x94b8>
   1a8c4:	mov	r3, #80	; 0x50
   1a8c8:	str	r7, [r4, #20]
   1a8cc:	str	r3, [r4, #24]
   1a8d0:	mov	r5, #46	; 0x2e
   1a8d4:	b	1a658 <floor@plt+0x928c>
   1a8d8:	bl	111e0 <__stack_chk_fail@plt>
   1a8dc:	andeq	r1, r4, r0, ror sp
   1a8e0:	andeq	r2, r4, ip, lsr r3
   1a8e4:			; <UNDEFINED> instruction: 0x000454b8
   1a8e8:	andeq	lr, r2, r4, lsr #20
   1a8ec:	andeq	lr, r2, ip, lsr #31
   1a8f0:	andeq	r5, r4, ip, asr #9
   1a8f4:	andeq	lr, r2, ip, asr #31
   1a8f8:	andeq	lr, r2, r0, lsr #31
   1a8fc:	andeq	r5, r4, ip, lsr #10
   1a900:	andeq	r2, r4, r8, lsl #18
   1a904:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a908:	sub	sp, sp, #24
   1a90c:	ldr	r6, [pc, #596]	; 1ab68 <floor@plt+0x979c>
   1a910:	ldr	r7, [r0, #16]
   1a914:	ldr	r3, [r6]
   1a918:	cmp	r7, #0
   1a91c:	str	r3, [sp, #20]
   1a920:	bne	1a9ec <floor@plt+0x9620>
   1a924:	ldr	r4, [r0, #28]
   1a928:	mov	r5, r0
   1a92c:	cmn	r4, #1
   1a930:	beq	1a950 <floor@plt+0x9584>
   1a934:	ldr	r2, [sp, #20]
   1a938:	ldr	r3, [r6]
   1a93c:	mov	r0, r4
   1a940:	cmp	r2, r3
   1a944:	bne	1ab64 <floor@plt+0x9798>
   1a948:	add	sp, sp, #24
   1a94c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a950:	ldr	r4, [r0, #24]
   1a954:	cmn	r4, #1
   1a958:	bne	1a934 <floor@plt+0x9568>
   1a95c:	ldr	r4, [r0, #20]
   1a960:	cmn	r4, #1
   1a964:	bne	1a934 <floor@plt+0x9568>
   1a968:	ldr	r0, [r0, #8]
   1a96c:	bl	11204 <getc@plt>
   1a970:	subs	r8, r0, #0
   1a974:	blt	1a9e4 <floor@plt+0x9618>
   1a978:	ldr	r9, [pc, #492]	; 1ab6c <floor@plt+0x97a0>
   1a97c:	ldrb	r3, [r9, r8]
   1a980:	cmp	r3, #0
   1a984:	beq	1a9f4 <floor@plt+0x9628>
   1a988:	ldr	sl, [pc, #480]	; 1ab70 <floor@plt+0x97a4>
   1a98c:	ldr	r4, [pc, #480]	; 1ab74 <floor@plt+0x97a8>
   1a990:	mov	r1, r8
   1a994:	mov	r0, sp
   1a998:	bl	27084 <floor@plt+0x15cb8>
   1a99c:	mov	r3, sl
   1a9a0:	ldr	r2, [pc, #456]	; 1ab70 <floor@plt+0x97a4>
   1a9a4:	mov	r1, sp
   1a9a8:	mov	r0, r4
   1a9ac:	bl	27444 <floor@plt+0x16078>
   1a9b0:	ldr	r0, [r5, #8]
   1a9b4:	bl	11204 <getc@plt>
   1a9b8:	str	r7, [r5, #12]
   1a9bc:	subs	r8, r0, #0
   1a9c0:	blt	1a9e4 <floor@plt+0x9618>
   1a9c4:	ldrb	r3, [r9, r8]
   1a9c8:	cmp	r3, #0
   1a9cc:	bne	1a990 <floor@plt+0x95c4>
   1a9d0:	ldr	r1, [r5, #8]
   1a9d4:	mov	r0, r8
   1a9d8:	bl	111d4 <ungetc@plt>
   1a9dc:	mov	r4, r8
   1a9e0:	b	1a934 <floor@plt+0x9568>
   1a9e4:	cmn	r8, #1
   1a9e8:	bne	1a9d0 <floor@plt+0x9604>
   1a9ec:	mvn	r4, #0
   1a9f0:	b	1a934 <floor@plt+0x9568>
   1a9f4:	ldr	r2, [r5, #12]
   1a9f8:	sub	r3, r8, #46	; 0x2e
   1a9fc:	cmp	r2, #0
   1aa00:	clz	r3, r3
   1aa04:	lsr	r3, r3, #5
   1aa08:	moveq	r3, #0
   1aa0c:	cmp	r3, #0
   1aa10:	beq	1a9d0 <floor@plt+0x9604>
   1aa14:	ldr	r0, [r5, #8]
   1aa18:	bl	11204 <getc@plt>
   1aa1c:	cmp	r0, #80	; 0x50
   1aa20:	bne	1aa78 <floor@plt+0x96ac>
   1aa24:	ldr	r0, [r5, #8]
   1aa28:	bl	11204 <getc@plt>
   1aa2c:	sub	r3, r0, #69	; 0x45
   1aa30:	cmp	r3, #1
   1aa34:	mov	r7, r0
   1aa38:	bls	1aaf4 <floor@plt+0x9728>
   1aa3c:	cmp	r0, #83	; 0x53
   1aa40:	bne	1aa94 <floor@plt+0x96c8>
   1aa44:	ldr	r0, [r5, #8]
   1aa48:	bl	11204 <getc@plt>
   1aa4c:	cmn	r0, #1
   1aa50:	mov	r7, r0
   1aa54:	bne	1aab8 <floor@plt+0x96ec>
   1aa58:	ldr	r3, [pc, #272]	; 1ab70 <floor@plt+0x97a4>
   1aa5c:	ldr	r0, [pc, #276]	; 1ab78 <floor@plt+0x97ac>
   1aa60:	mov	r2, r3
   1aa64:	mov	r1, r3
   1aa68:	bl	27444 <floor@plt+0x16078>
   1aa6c:	mov	r3, #1
   1aa70:	str	r3, [r5, #16]
   1aa74:	b	1a934 <floor@plt+0x9568>
   1aa78:	cmn	r0, #1
   1aa7c:	beq	1aa88 <floor@plt+0x96bc>
   1aa80:	ldr	r1, [r5, #8]
   1aa84:	bl	111d4 <ungetc@plt>
   1aa88:	mov	r4, #46	; 0x2e
   1aa8c:	str	r4, [r5, #20]
   1aa90:	b	1a934 <floor@plt+0x9568>
   1aa94:	cmn	r0, #1
   1aa98:	beq	1aaa4 <floor@plt+0x96d8>
   1aa9c:	ldr	r1, [r5, #8]
   1aaa0:	bl	111d4 <ungetc@plt>
   1aaa4:	mov	r3, #80	; 0x50
   1aaa8:	mov	r4, #46	; 0x2e
   1aaac:	str	r3, [r5, #20]
   1aab0:	str	r4, [r5, #24]
   1aab4:	b	1a934 <floor@plt+0x9568>
   1aab8:	ldr	r1, [r5, #8]
   1aabc:	bl	111d4 <ungetc@plt>
   1aac0:	cmp	r7, #10
   1aac4:	cmpne	r7, #32
   1aac8:	beq	1aa58 <floor@plt+0x968c>
   1aacc:	ldr	r3, [pc, #168]	; 1ab7c <floor@plt+0x97b0>
   1aad0:	ldr	r3, [r3, #4]
   1aad4:	cmp	r3, #0
   1aad8:	bne	1aa58 <floor@plt+0x968c>
   1aadc:	mov	r2, #83	; 0x53
   1aae0:	mov	r3, #80	; 0x50
   1aae4:	mov	r4, #46	; 0x2e
   1aae8:	strd	r2, [r5, #20]
   1aaec:	str	r4, [r5, #28]
   1aaf0:	b	1a934 <floor@plt+0x9568>
   1aaf4:	ldr	r0, [r5, #8]
   1aaf8:	bl	11204 <getc@plt>
   1aafc:	cmn	r0, #1
   1ab00:	mov	r8, r0
   1ab04:	bne	1ab28 <floor@plt+0x975c>
   1ab08:	ldr	r3, [pc, #108]	; 1ab7c <floor@plt+0x97b0>
   1ab0c:	sub	r7, r7, #70	; 0x46
   1ab10:	mov	r2, #1
   1ab14:	clz	r7, r7
   1ab18:	lsr	r7, r7, #5
   1ab1c:	str	r7, [r3]
   1ab20:	str	r2, [r5, #16]
   1ab24:	b	1a934 <floor@plt+0x9568>
   1ab28:	ldr	r1, [r5, #8]
   1ab2c:	bl	111d4 <ungetc@plt>
   1ab30:	cmp	r8, #10
   1ab34:	cmpne	r8, #32
   1ab38:	beq	1ab08 <floor@plt+0x973c>
   1ab3c:	ldr	r3, [pc, #56]	; 1ab7c <floor@plt+0x97b0>
   1ab40:	ldr	r2, [r3, #4]
   1ab44:	cmp	r2, #0
   1ab48:	bne	1ab0c <floor@plt+0x9740>
   1ab4c:	mov	r3, #80	; 0x50
   1ab50:	mov	r4, #46	; 0x2e
   1ab54:	str	r7, [r5, #20]
   1ab58:	str	r3, [r5, #24]
   1ab5c:	str	r4, [r5, #28]
   1ab60:	b	1a934 <floor@plt+0x9568>
   1ab64:	bl	111e0 <__stack_chk_fail@plt>
   1ab68:	andeq	r1, r4, r0, ror sp
   1ab6c:	andeq	r2, r4, ip, lsr r3
   1ab70:			; <UNDEFINED> instruction: 0x000454b8
   1ab74:	andeq	lr, r2, r4, lsr #20
   1ab78:	andeq	lr, r2, r0, lsr #31
   1ab7c:	andeq	r2, r4, r8, lsl #18
   1ab80:	push	{r4, r5, r6, lr}
   1ab84:	mov	r4, r0
   1ab88:	mov	r5, r1
   1ab8c:	bl	16648 <floor@plt+0x527c>
   1ab90:	ldr	r3, [pc, #56]	; 1abd0 <floor@plt+0x9804>
   1ab94:	ldr	lr, [pc, #56]	; 1abd4 <floor@plt+0x9808>
   1ab98:	mov	ip, #1
   1ab9c:	ldr	r2, [r3]
   1aba0:	mov	r0, #0
   1aba4:	mvn	r3, #0
   1aba8:	str	r0, [r4, #16]
   1abac:	str	r5, [r4, #8]
   1abb0:	str	lr, [r4]
   1abb4:	str	ip, [r4, #12]
   1abb8:	str	r2, [r4, #32]
   1abbc:	str	r3, [r4, #28]
   1abc0:	str	r3, [r4, #24]
   1abc4:	str	r3, [r4, #20]
   1abc8:	mov	r0, r4
   1abcc:	pop	{r4, r5, r6, pc}
   1abd0:	andeq	r5, r4, ip, lsr #10
   1abd4:	andeq	lr, r2, r4, asr #30
   1abd8:	ldr	r3, [pc, #1392]	; 1b150 <floor@plt+0x9d84>
   1abdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1abe0:	sub	sp, sp, #52	; 0x34
   1abe4:	ldr	r3, [r3]
   1abe8:	ldr	r1, [pc, #1380]	; 1b154 <floor@plt+0x9d88>
   1abec:	mov	r4, r0
   1abf0:	str	r3, [sp, #44]	; 0x2c
   1abf4:	bl	112d0 <strcmp@plt>
   1abf8:	cmp	r0, #0
   1abfc:	bne	1afec <floor@plt+0x9c20>
   1ac00:	ldr	r3, [pc, #1360]	; 1b158 <floor@plt+0x9d8c>
   1ac04:	add	r2, sp, #8
   1ac08:	str	r2, [sp, #4]
   1ac0c:	ldr	r6, [r3]
   1ac10:	mov	r1, r4
   1ac14:	ldr	r0, [sp, #4]
   1ac18:	bl	288e0 <_ZdlPv@@Base+0x230>
   1ac1c:	ldr	r3, [sp, #12]
   1ac20:	ldr	r2, [sp, #16]
   1ac24:	cmp	r3, r2
   1ac28:	bge	1afdc <floor@plt+0x9c10>
   1ac2c:	ldr	r2, [sp, #8]
   1ac30:	add	r0, r3, #1
   1ac34:	mov	r1, #0
   1ac38:	str	r0, [sp, #12]
   1ac3c:	strb	r1, [r2, r3]
   1ac40:	ldr	r0, [sp, #4]
   1ac44:	bl	2863c <floor@plt+0x17270>
   1ac48:	ldr	r3, [pc, #1292]	; 1b15c <floor@plt+0x9d90>
   1ac4c:	ldr	r2, [pc, #1292]	; 1b160 <floor@plt+0x9d94>
   1ac50:	ldr	ip, [pc, #1292]	; 1b164 <floor@plt+0x9d98>
   1ac54:	ldr	r0, [r3, #8]
   1ac58:	ldr	r1, [sp, #8]
   1ac5c:	ldr	r3, [r0]
   1ac60:	str	r1, [ip]
   1ac64:	ldr	r3, [r3, #52]	; 0x34
   1ac68:	cmp	r3, r2
   1ac6c:	bne	1b01c <floor@plt+0x9c50>
   1ac70:	ldr	r2, [pc, #1264]	; 1b168 <floor@plt+0x9d9c>
   1ac74:	ldr	r9, [pc, #1264]	; 1b16c <floor@plt+0x9da0>
   1ac78:	ldr	r8, [pc, #1264]	; 1b170 <floor@plt+0x9da4>
   1ac7c:	mov	r5, #0
   1ac80:	mov	r3, #1
   1ac84:	str	r3, [r2]
   1ac88:	mov	r0, r6
   1ac8c:	bl	11204 <getc@plt>
   1ac90:	subs	r4, r0, #0
   1ac94:	blt	1aea0 <floor@plt+0x9ad4>
   1ac98:	ldrb	r3, [r8, r4]
   1ac9c:	cmp	r3, #0
   1aca0:	beq	1acec <floor@plt+0x9920>
   1aca4:	ldr	sl, [pc, #1224]	; 1b174 <floor@plt+0x9da8>
   1aca8:	ldr	fp, [pc, #1224]	; 1b178 <floor@plt+0x9dac>
   1acac:	add	r7, sp, #24
   1acb0:	mov	r1, r4
   1acb4:	mov	r0, r7
   1acb8:	bl	27084 <floor@plt+0x15cb8>
   1acbc:	mov	r3, sl
   1acc0:	ldr	r2, [pc, #1196]	; 1b174 <floor@plt+0x9da8>
   1acc4:	mov	r1, r7
   1acc8:	mov	r0, fp
   1accc:	bl	27444 <floor@plt+0x16078>
   1acd0:	mov	r0, r6
   1acd4:	bl	11204 <getc@plt>
   1acd8:	subs	r4, r0, #0
   1acdc:	blt	1aea0 <floor@plt+0x9ad4>
   1ace0:	ldrb	r3, [r8, r4]
   1ace4:	cmp	r3, #0
   1ace8:	bne	1acb0 <floor@plt+0x98e4>
   1acec:	cmp	r5, #6
   1acf0:	ldrls	pc, [pc, r5, lsl #2]
   1acf4:	b	1b128 <floor@plt+0x9d5c>
   1acf8:	andeq	sl, r1, r4, lsl sp
   1acfc:	andeq	sl, r1, r0, lsr #26
   1ad00:	andeq	sl, r1, r4, lsr #27
   1ad04:	andeq	sl, r1, r8, lsl lr
   1ad08:	andeq	sl, r1, r0, ror #27
   1ad0c:	andeq	sl, r1, ip, ror sp
   1ad10:	andeq	sl, r1, ip, lsr sp
   1ad14:	cmp	r4, #46	; 0x2e
   1ad18:	moveq	r5, #2
   1ad1c:	beq	1ac88 <floor@plt+0x98bc>
   1ad20:	ldr	r1, [r9]
   1ad24:	mov	r0, r4
   1ad28:	bl	111f8 <putc@plt>
   1ad2c:	cmp	r4, #10
   1ad30:	beq	1aed0 <floor@plt+0x9b04>
   1ad34:	mov	r5, #1
   1ad38:	b	1ac88 <floor@plt+0x98bc>
   1ad3c:	cmp	r4, #10
   1ad40:	cmpne	r4, #32
   1ad44:	beq	1ae40 <floor@plt+0x9a74>
   1ad48:	ldr	r3, [pc, #1036]	; 1b15c <floor@plt+0x9d90>
   1ad4c:	ldr	r3, [r3, #4]
   1ad50:	cmp	r3, #0
   1ad54:	bne	1ae40 <floor@plt+0x9a74>
   1ad58:	ldr	r3, [r9]
   1ad5c:	mov	r2, #3
   1ad60:	mov	r1, #1
   1ad64:	ldr	r0, [pc, #1040]	; 1b17c <floor@plt+0x9db0>
   1ad68:	bl	11258 <fwrite@plt>
   1ad6c:	mov	r0, r4
   1ad70:	ldr	r1, [r9]
   1ad74:	bl	111f8 <putc@plt>
   1ad78:	b	1ad34 <floor@plt+0x9968>
   1ad7c:	cmp	r4, #102	; 0x66
   1ad80:	moveq	r5, #6
   1ad84:	beq	1ac88 <floor@plt+0x98bc>
   1ad88:	ldr	r1, [r9]
   1ad8c:	mov	r0, #46	; 0x2e
   1ad90:	bl	111f8 <putc@plt>
   1ad94:	ldr	r1, [r9]
   1ad98:	mov	r0, #108	; 0x6c
   1ad9c:	bl	111f8 <putc@plt>
   1ada0:	b	1ad20 <floor@plt+0x9954>
   1ada4:	cmp	r4, #80	; 0x50
   1ada8:	beq	1afd4 <floor@plt+0x9c08>
   1adac:	ldr	r3, [pc, #972]	; 1b180 <floor@plt+0x9db4>
   1adb0:	ldr	r2, [r3]
   1adb4:	sub	r3, r4, #108	; 0x6c
   1adb8:	cmp	r2, #0
   1adbc:	clz	r3, r3
   1adc0:	lsr	r3, r3, #5
   1adc4:	moveq	r3, #0
   1adc8:	cmp	r3, #0
   1adcc:	bne	1b0bc <floor@plt+0x9cf0>
   1add0:	ldr	r1, [r9]
   1add4:	mov	r0, #46	; 0x2e
   1add8:	bl	111f8 <putc@plt>
   1addc:	b	1ad20 <floor@plt+0x9954>
   1ade0:	cmp	r4, #10
   1ade4:	cmpne	r4, #32
   1ade8:	beq	1adfc <floor@plt+0x9a30>
   1adec:	ldr	r3, [pc, #872]	; 1b15c <floor@plt+0x9d90>
   1adf0:	ldr	r3, [r3, #4]
   1adf4:	cmp	r3, #0
   1adf8:	beq	1afbc <floor@plt+0x9bf0>
   1adfc:	mov	r0, r4
   1ae00:	mov	r1, r6
   1ae04:	bl	111d4 <ungetc@plt>
   1ae08:	mov	r0, r6
   1ae0c:	bl	1b1b0 <floor@plt+0x9de4>
   1ae10:	mov	r5, #0
   1ae14:	b	1ac88 <floor@plt+0x98bc>
   1ae18:	cmp	r4, #83	; 0x53
   1ae1c:	moveq	r5, #4
   1ae20:	beq	1ac88 <floor@plt+0x98bc>
   1ae24:	ldr	r1, [r9]
   1ae28:	mov	r0, #46	; 0x2e
   1ae2c:	bl	111f8 <putc@plt>
   1ae30:	ldr	r1, [r9]
   1ae34:	mov	r0, #80	; 0x50
   1ae38:	bl	111f8 <putc@plt>
   1ae3c:	b	1ad20 <floor@plt+0x9954>
   1ae40:	add	r7, sp, #24
   1ae44:	mov	r0, r7
   1ae48:	bl	28870 <_ZdlPv@@Base+0x1c0>
   1ae4c:	b	1ae7c <floor@plt+0x9ab0>
   1ae50:	ldr	r2, [sp, #24]
   1ae54:	add	r1, r3, #1
   1ae58:	cmp	r4, #10
   1ae5c:	str	r1, [sp, #28]
   1ae60:	strb	r5, [r2, r3]
   1ae64:	beq	1af64 <floor@plt+0x9b98>
   1ae68:	mov	r0, r6
   1ae6c:	bl	11204 <getc@plt>
   1ae70:	cmn	r0, #1
   1ae74:	mov	r4, r0
   1ae78:	beq	1af74 <floor@plt+0x9ba8>
   1ae7c:	ldr	r3, [sp, #28]
   1ae80:	ldr	r2, [sp, #32]
   1ae84:	uxtb	r5, r4
   1ae88:	cmp	r3, r2
   1ae8c:	blt	1ae50 <floor@plt+0x9a84>
   1ae90:	mov	r0, r7
   1ae94:	bl	28b34 <_ZdlPv@@Base+0x484>
   1ae98:	ldr	r3, [sp, #28]
   1ae9c:	b	1ae50 <floor@plt+0x9a84>
   1aea0:	cmn	r4, #1
   1aea4:	beq	1aee8 <floor@plt+0x9b1c>
   1aea8:	cmp	r5, #6
   1aeac:	ldrls	pc, [pc, r5, lsl #2]
   1aeb0:	b	1b128 <floor@plt+0x9d5c>
   1aeb4:	andeq	sl, r1, r0, lsr #26
   1aeb8:	andeq	sl, r1, r0, lsr #26
   1aebc:	andeq	sl, r1, r4, lsr #27
   1aec0:	andeq	sl, r1, r8, lsl lr
   1aec4:	andeq	sl, r1, r0, ror #27
   1aec8:	andeq	sl, r1, ip, ror sp
   1aecc:	andeq	sl, r1, ip, lsr sp
   1aed0:	ldr	r2, [pc, #656]	; 1b168 <floor@plt+0x9d9c>
   1aed4:	mov	r5, #0
   1aed8:	ldr	r3, [r2]
   1aedc:	add	r3, r3, #1
   1aee0:	str	r3, [r2]
   1aee4:	b	1ac88 <floor@plt+0x98bc>
   1aee8:	sub	r5, r5, #1
   1aeec:	cmp	r5, #5
   1aef0:	ldrls	pc, [pc, r5, lsl #2]
   1aef4:	b	1af28 <floor@plt+0x9b5c>
   1aef8:	andeq	fp, r1, r8, lsr r0
   1aefc:	andeq	fp, r1, ip, asr #32
   1af00:	andeq	fp, r1, r8, rrx
   1af04:	andeq	fp, r1, r4, lsl #1
   1af08:	andeq	fp, r1, r0, lsr #1
   1af0c:	andeq	sl, r1, r0, lsl pc
   1af10:	ldr	r3, [pc, #596]	; 1b16c <floor@plt+0x9da0>
   1af14:	mov	r2, #4
   1af18:	mov	r1, #1
   1af1c:	ldr	r3, [r3]
   1af20:	ldr	r0, [pc, #604]	; 1b184 <floor@plt+0x9db8>
   1af24:	bl	11258 <fwrite@plt>
   1af28:	ldr	r3, [pc, #552]	; 1b158 <floor@plt+0x9d8c>
   1af2c:	ldr	r3, [r3]
   1af30:	cmp	r3, r6
   1af34:	beq	1af40 <floor@plt+0x9b74>
   1af38:	mov	r0, r6
   1af3c:	bl	112a0 <fclose@plt>
   1af40:	ldr	r0, [sp, #4]
   1af44:	bl	289cc <_ZdlPv@@Base+0x31c>
   1af48:	ldr	r3, [pc, #512]	; 1b150 <floor@plt+0x9d84>
   1af4c:	ldr	r2, [sp, #44]	; 0x2c
   1af50:	ldr	r3, [r3]
   1af54:	cmp	r2, r3
   1af58:	bne	1b124 <floor@plt+0x9d58>
   1af5c:	add	sp, sp, #52	; 0x34
   1af60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1af64:	ldr	r2, [pc, #508]	; 1b168 <floor@plt+0x9d9c>
   1af68:	ldr	r3, [r2]
   1af6c:	add	r3, r3, #1
   1af70:	str	r3, [r2]
   1af74:	ldr	r3, [sp, #28]
   1af78:	ldr	r2, [sp, #32]
   1af7c:	cmp	r3, r2
   1af80:	bge	1b028 <floor@plt+0x9c5c>
   1af84:	ldr	r2, [sp, #24]
   1af88:	add	r0, r3, #1
   1af8c:	mov	r1, #0
   1af90:	str	r0, [sp, #28]
   1af94:	strb	r1, [r2, r3]
   1af98:	ldr	r0, [sp, #24]
   1af9c:	bl	2846c <floor@plt+0x170a0>
   1afa0:	ldr	r2, [sp, #24]
   1afa4:	ldr	r1, [pc, #476]	; 1b188 <floor@plt+0x9dbc>
   1afa8:	mov	r0, #1
   1afac:	bl	113c0 <__printf_chk@plt>
   1afb0:	mov	r0, r7
   1afb4:	bl	289cc <_ZdlPv@@Base+0x31c>
   1afb8:	b	1ae10 <floor@plt+0x9a44>
   1afbc:	ldr	r3, [r9]
   1afc0:	mov	r2, #3
   1afc4:	mov	r1, #1
   1afc8:	ldr	r0, [pc, #444]	; 1b18c <floor@plt+0x9dc0>
   1afcc:	bl	11258 <fwrite@plt>
   1afd0:	b	1ad6c <floor@plt+0x99a0>
   1afd4:	mov	r5, #3
   1afd8:	b	1ac88 <floor@plt+0x98bc>
   1afdc:	ldr	r0, [sp, #4]
   1afe0:	bl	28b34 <_ZdlPv@@Base+0x484>
   1afe4:	ldr	r3, [sp, #12]
   1afe8:	b	1ac2c <floor@plt+0x9860>
   1afec:	bl	112e8 <__errno_location@plt>
   1aff0:	mov	r3, #0
   1aff4:	ldr	r1, [pc, #404]	; 1b190 <floor@plt+0x9dc4>
   1aff8:	str	r3, [r0]
   1affc:	mov	r5, r0
   1b000:	mov	r0, r4
   1b004:	bl	11318 <fopen64@plt>
   1b008:	subs	r6, r0, #0
   1b00c:	beq	1b0c4 <floor@plt+0x9cf8>
   1b010:	add	r3, sp, #8
   1b014:	str	r3, [sp, #4]
   1b018:	b	1ac10 <floor@plt+0x9844>
   1b01c:	mov	r2, #1
   1b020:	blx	r3
   1b024:	b	1ac70 <floor@plt+0x98a4>
   1b028:	mov	r0, r7
   1b02c:	bl	28b34 <_ZdlPv@@Base+0x484>
   1b030:	ldr	r3, [sp, #28]
   1b034:	b	1af84 <floor@plt+0x9bb8>
   1b038:	ldr	r3, [pc, #300]	; 1b16c <floor@plt+0x9da0>
   1b03c:	mov	r0, #10
   1b040:	ldr	r1, [r3]
   1b044:	bl	111f8 <putc@plt>
   1b048:	b	1af28 <floor@plt+0x9b5c>
   1b04c:	ldr	r3, [pc, #280]	; 1b16c <floor@plt+0x9da0>
   1b050:	mov	r2, #2
   1b054:	mov	r1, #1
   1b058:	ldr	r3, [r3]
   1b05c:	ldr	r0, [pc, #304]	; 1b194 <floor@plt+0x9dc8>
   1b060:	bl	11258 <fwrite@plt>
   1b064:	b	1af28 <floor@plt+0x9b5c>
   1b068:	ldr	r3, [pc, #252]	; 1b16c <floor@plt+0x9da0>
   1b06c:	mov	r2, #3
   1b070:	mov	r1, #1
   1b074:	ldr	r3, [r3]
   1b078:	ldr	r0, [pc, #280]	; 1b198 <floor@plt+0x9dcc>
   1b07c:	bl	11258 <fwrite@plt>
   1b080:	b	1af28 <floor@plt+0x9b5c>
   1b084:	ldr	r3, [pc, #224]	; 1b16c <floor@plt+0x9da0>
   1b088:	mov	r2, #4
   1b08c:	mov	r1, #1
   1b090:	ldr	r3, [r3]
   1b094:	ldr	r0, [pc, #256]	; 1b19c <floor@plt+0x9dd0>
   1b098:	bl	11258 <fwrite@plt>
   1b09c:	b	1af28 <floor@plt+0x9b5c>
   1b0a0:	ldr	r3, [pc, #196]	; 1b16c <floor@plt+0x9da0>
   1b0a4:	mov	r2, #3
   1b0a8:	mov	r1, #1
   1b0ac:	ldr	r3, [r3]
   1b0b0:	ldr	r0, [pc, #232]	; 1b1a0 <floor@plt+0x9dd4>
   1b0b4:	bl	11258 <fwrite@plt>
   1b0b8:	b	1af28 <floor@plt+0x9b5c>
   1b0bc:	mov	r5, #5
   1b0c0:	b	1ac88 <floor@plt+0x98bc>
   1b0c4:	ldr	r3, [pc, #144]	; 1b15c <floor@plt+0x9d90>
   1b0c8:	ldr	r0, [r3, #8]
   1b0cc:	cmp	r0, #0
   1b0d0:	beq	1b0e0 <floor@plt+0x9d14>
   1b0d4:	ldr	r3, [r0]
   1b0d8:	ldr	r3, [r3, #4]
   1b0dc:	blx	r3
   1b0e0:	add	r8, sp, #8
   1b0e4:	mov	r1, r4
   1b0e8:	mov	r0, r8
   1b0ec:	str	r8, [sp, #4]
   1b0f0:	bl	27058 <floor@plt+0x15c8c>
   1b0f4:	ldr	r0, [r5]
   1b0f8:	bl	11114 <strerror@plt>
   1b0fc:	add	r7, sp, #24
   1b100:	mov	r1, r0
   1b104:	mov	r0, r7
   1b108:	bl	27058 <floor@plt+0x15c8c>
   1b10c:	mov	r2, r7
   1b110:	mov	r1, r8
   1b114:	ldr	r3, [pc, #88]	; 1b174 <floor@plt+0x9da8>
   1b118:	ldr	r0, [pc, #132]	; 1b1a4 <floor@plt+0x9dd8>
   1b11c:	bl	274cc <floor@plt+0x16100>
   1b120:	b	1ac10 <floor@plt+0x9844>
   1b124:	bl	111e0 <__stack_chk_fail@plt>
   1b128:	ldr	r1, [pc, #120]	; 1b1a8 <floor@plt+0x9ddc>
   1b12c:	ldr	r0, [pc, #120]	; 1b1ac <floor@plt+0x9de0>
   1b130:	bl	26c88 <floor@plt+0x158bc>
   1b134:	b	1ac88 <floor@plt+0x98bc>
   1b138:	mov	r0, r7
   1b13c:	bl	289cc <_ZdlPv@@Base+0x31c>
   1b140:	ldr	r0, [sp, #4]
   1b144:	bl	289cc <_ZdlPv@@Base+0x31c>
   1b148:	bl	111ec <__cxa_end_cleanup@plt>
   1b14c:	b	1b140 <floor@plt+0x9d74>
   1b150:	andeq	r1, r4, r0, ror sp
   1b154:	andeq	lr, r2, r0, asr #24
   1b158:	andeq	r2, r4, r8, asr #8
   1b15c:	andeq	r2, r4, r8, lsl #18
   1b160:	andeq	fp, r1, r8, lsr r6
   1b164:	andeq	r5, r4, ip, asr #9
   1b168:	andeq	r5, r4, ip, lsr #10
   1b16c:	andeq	r2, r4, r4, asr r4
   1b170:	andeq	r2, r4, ip, lsr r3
   1b174:			; <UNDEFINED> instruction: 0x000454b8
   1b178:	andeq	lr, r2, r4, lsr #20
   1b17c:	andeq	lr, r2, r8, ror #31
   1b180:	andeq	r2, r4, r0, lsr #6
   1b184:	andeq	pc, r2, r0, lsr #32
   1b188:	andeq	lr, r2, r0, ror #31
   1b18c:	ldrdeq	lr, [r2], -ip
   1b190:	muleq	r2, r8, ip
   1b194:	andeq	pc, r2, ip
   1b198:	andeq	pc, r2, r0, lsl r0	; <UNPREDICTABLE>
   1b19c:	andeq	pc, r2, r4, lsl r0	; <UNPREDICTABLE>
   1b1a0:	andeq	pc, r2, ip, lsl r0	; <UNPREDICTABLE>
   1b1a4:	andeq	lr, r2, r4, lsr #23
   1b1a8:	andeq	lr, r2, ip, ror #31
   1b1ac:	andeq	r0, r0, lr, lsr #3
   1b1b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b1b4:	sub	sp, sp, #32
   1b1b8:	ldr	r8, [pc, #1040]	; 1b5d0 <floor@plt+0xa204>
   1b1bc:	ldr	r6, [pc, #1040]	; 1b5d4 <floor@plt+0xa208>
   1b1c0:	mov	r3, #0
   1b1c4:	ldr	r2, [r8]
   1b1c8:	mov	r5, r0
   1b1cc:	ldr	r0, [pc, #1028]	; 1b5d8 <floor@plt+0xa20c>
   1b1d0:	str	r2, [sp, #28]
   1b1d4:	str	r3, [r6]
   1b1d8:	bl	291f4 <_ZdlPv@@Base+0xb44>
   1b1dc:	str	r0, [r6, #12]
   1b1e0:	mov	r0, r5
   1b1e4:	bl	11204 <getc@plt>
   1b1e8:	cmp	r0, #32
   1b1ec:	mov	r4, r0
   1b1f0:	beq	1b1e0 <floor@plt+0x9e14>
   1b1f4:	cmp	r0, #60	; 0x3c
   1b1f8:	beq	1b428 <floor@plt+0xa05c>
   1b1fc:	ldr	r0, [r6, #8]
   1b200:	ldr	r9, [pc, #980]	; 1b5dc <floor@plt+0xa210>
   1b204:	ldr	r3, [r0]
   1b208:	ldr	r3, [r3, #52]	; 0x34
   1b20c:	cmp	r3, r9
   1b210:	bne	1b53c <floor@plt+0xa170>
   1b214:	add	r7, sp, #16
   1b218:	mov	r0, r7
   1b21c:	bl	28870 <_ZdlPv@@Base+0x1c0>
   1b220:	cmn	r4, #1
   1b224:	bne	1b250 <floor@plt+0x9e84>
   1b228:	b	1b3d0 <floor@plt+0xa004>
   1b22c:	ldr	r2, [sp, #16]
   1b230:	add	r1, r3, #1
   1b234:	str	r1, [sp, #20]
   1b238:	mov	r0, r5
   1b23c:	strb	r4, [r2, r3]
   1b240:	bl	11204 <getc@plt>
   1b244:	cmn	r0, #1
   1b248:	mov	r4, r0
   1b24c:	beq	1b3d0 <floor@plt+0xa004>
   1b250:	cmp	r4, #10
   1b254:	beq	1b27c <floor@plt+0x9eb0>
   1b258:	ldr	r3, [sp, #20]
   1b25c:	ldr	r2, [sp, #24]
   1b260:	uxtb	r4, r4
   1b264:	cmp	r3, r2
   1b268:	blt	1b22c <floor@plt+0x9e60>
   1b26c:	mov	r0, r7
   1b270:	bl	28b34 <_ZdlPv@@Base+0x484>
   1b274:	ldr	r3, [sp, #20]
   1b278:	b	1b22c <floor@plt+0x9e60>
   1b27c:	ldr	r4, [pc, #860]	; 1b5e0 <floor@plt+0xa214>
   1b280:	ldr	r3, [sp, #20]
   1b284:	ldr	r1, [sp, #24]
   1b288:	ldr	r2, [r4]
   1b28c:	cmp	r3, r1
   1b290:	add	r2, r2, #1
   1b294:	str	r2, [r4]
   1b298:	blt	1b2a8 <floor@plt+0x9edc>
   1b29c:	mov	r0, r7
   1b2a0:	bl	28b34 <_ZdlPv@@Base+0x484>
   1b2a4:	ldr	r3, [sp, #20]
   1b2a8:	ldr	r2, [sp, #16]
   1b2ac:	add	r0, r3, #1
   1b2b0:	mov	r1, #0
   1b2b4:	str	r0, [sp, #20]
   1b2b8:	strb	r1, [r2, r3]
   1b2bc:	ldr	r3, [sp, #20]
   1b2c0:	cmp	r3, r1
   1b2c4:	bgt	1b2d4 <floor@plt+0x9f08>
   1b2c8:	ldr	r1, [pc, #788]	; 1b5e4 <floor@plt+0xa218>
   1b2cc:	mov	r0, #98	; 0x62
   1b2d0:	bl	26c88 <floor@plt+0x158bc>
   1b2d4:	add	r3, sp, #8
   1b2d8:	mov	r2, sp
   1b2dc:	ldr	r1, [pc, #772]	; 1b5e8 <floor@plt+0xa21c>
   1b2e0:	ldr	r0, [sp, #16]
   1b2e4:	bl	11300 <sscanf@plt>
   1b2e8:	cmp	r0, #1
   1b2ec:	beq	1b408 <floor@plt+0xa03c>
   1b2f0:	cmp	r0, #2
   1b2f4:	bne	1b3f0 <floor@plt+0xa024>
   1b2f8:	vldr	d0, [sp]
   1b2fc:	vldr	d1, [sp, #8]
   1b300:	ldr	r0, [r6, #8]
   1b304:	bl	1c450 <floor@plt+0xb084>
   1b308:	ldr	r1, [sp, #16]
   1b30c:	ldr	r0, [r6, #8]
   1b310:	bl	1c45c <floor@plt+0xb090>
   1b314:	mov	r0, #36	; 0x24
   1b318:	bl	28660 <_Znwj@@Base>
   1b31c:	mov	sl, r0
   1b320:	bl	16648 <floor@plt+0x527c>
   1b324:	ldr	r3, [pc, #704]	; 1b5ec <floor@plt+0xa220>
   1b328:	ldr	r2, [r4]
   1b32c:	str	r3, [sl]
   1b330:	mov	r3, #1
   1b334:	str	r2, [sl, #32]
   1b338:	str	r3, [sl, #12]
   1b33c:	mov	r2, #0
   1b340:	mvn	r3, #0
   1b344:	str	r5, [sl, #8]
   1b348:	str	r2, [sl, #16]
   1b34c:	mov	r0, sl
   1b350:	str	r3, [sl, #28]
   1b354:	str	r3, [sl, #24]
   1b358:	str	r3, [sl, #20]
   1b35c:	bl	16744 <floor@plt+0x5378>
   1b360:	bl	12648 <floor@plt+0x127c>
   1b364:	cmp	r0, #0
   1b368:	beq	1b388 <floor@plt+0x9fbc>
   1b36c:	ldr	r3, [pc, #636]	; 1b5f0 <floor@plt+0xa224>
   1b370:	mov	ip, #1
   1b374:	mov	r2, r3
   1b378:	mov	r1, r3
   1b37c:	ldr	r0, [pc, #624]	; 1b5f4 <floor@plt+0xa228>
   1b380:	str	ip, [r6, #16]
   1b384:	bl	17778 <floor@plt+0x63ac>
   1b388:	bl	120f4 <floor@plt+0xd28>
   1b38c:	bl	16814 <floor@plt+0x5448>
   1b390:	b	1b39c <floor@plt+0x9fd0>
   1b394:	cmp	r0, #10
   1b398:	beq	1b418 <floor@plt+0xa04c>
   1b39c:	mov	r0, r5
   1b3a0:	bl	11204 <getc@plt>
   1b3a4:	cmn	r0, #1
   1b3a8:	bne	1b394 <floor@plt+0x9fc8>
   1b3ac:	ldr	r2, [r4]
   1b3b0:	ldr	r0, [r6, #8]
   1b3b4:	ldr	r3, [r0]
   1b3b8:	ldr	r3, [r3, #52]	; 0x34
   1b3bc:	cmp	r3, r9
   1b3c0:	beq	1b3d0 <floor@plt+0xa004>
   1b3c4:	ldr	r1, [pc, #556]	; 1b5f8 <floor@plt+0xa22c>
   1b3c8:	ldr	r1, [r1]
   1b3cc:	blx	r3
   1b3d0:	mov	r0, r7
   1b3d4:	bl	289cc <_ZdlPv@@Base+0x31c>
   1b3d8:	ldr	r2, [sp, #28]
   1b3dc:	ldr	r3, [r8]
   1b3e0:	cmp	r2, r3
   1b3e4:	bne	1b5a0 <floor@plt+0xa1d4>
   1b3e8:	add	sp, sp, #32
   1b3ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b3f0:	vldr	d7, [pc, #464]	; 1b5c8 <floor@plt+0xa1fc>
   1b3f4:	vmov.f64	d1, d7
   1b3f8:	vstr	d7, [sp]
   1b3fc:	vstr	d7, [sp, #8]
   1b400:	vmov.f64	d0, d7
   1b404:	b	1b300 <floor@plt+0x9f34>
   1b408:	vldr	d1, [pc, #440]	; 1b5c8 <floor@plt+0xa1fc>
   1b40c:	vldr	d0, [sp]
   1b410:	vstr	d1, [sp, #8]
   1b414:	b	1b300 <floor@plt+0x9f34>
   1b418:	ldr	r2, [r4]
   1b41c:	add	r2, r2, #1
   1b420:	str	r2, [r4]
   1b424:	b	1b3b0 <floor@plt+0x9fe4>
   1b428:	add	r7, sp, #16
   1b42c:	mov	r0, r7
   1b430:	bl	28870 <_ZdlPv@@Base+0x1c0>
   1b434:	mov	r0, r5
   1b438:	bl	11204 <getc@plt>
   1b43c:	cmp	r0, #32
   1b440:	beq	1b434 <floor@plt+0xa068>
   1b444:	cmn	r0, #1
   1b448:	cmpne	r0, #32
   1b44c:	bne	1b51c <floor@plt+0xa150>
   1b450:	cmp	r0, #32
   1b454:	bne	1b46c <floor@plt+0xa0a0>
   1b458:	mov	r0, r5
   1b45c:	bl	11204 <getc@plt>
   1b460:	cmn	r0, #1
   1b464:	cmpne	r0, #10
   1b468:	bne	1b458 <floor@plt+0xa08c>
   1b46c:	cmp	r0, #10
   1b470:	ldr	r3, [sp, #20]
   1b474:	beq	1b554 <floor@plt+0xa188>
   1b478:	cmp	r3, #0
   1b47c:	beq	1b568 <floor@plt+0xa19c>
   1b480:	ldr	r2, [sp, #24]
   1b484:	cmp	r2, r3
   1b488:	ble	1b590 <floor@plt+0xa1c4>
   1b48c:	ldr	r2, [sp, #16]
   1b490:	add	r0, r3, #1
   1b494:	mov	r1, #0
   1b498:	ldr	sl, [pc, #344]	; 1b5f8 <floor@plt+0xa22c>
   1b49c:	ldr	r4, [pc, #316]	; 1b5e0 <floor@plt+0xa214>
   1b4a0:	str	r0, [sp, #20]
   1b4a4:	strb	r1, [r2, r3]
   1b4a8:	ldr	r0, [sp, #16]
   1b4ac:	ldr	r5, [sl]
   1b4b0:	ldr	r9, [r4]
   1b4b4:	bl	291f4 <_ZdlPv@@Base+0xb44>
   1b4b8:	bl	1abd8 <floor@plt+0x980c>
   1b4bc:	str	r5, [sl]
   1b4c0:	str	r9, [r4]
   1b4c4:	ldr	r0, [r6, #8]
   1b4c8:	ldr	r2, [pc, #268]	; 1b5dc <floor@plt+0xa210>
   1b4cc:	ldr	r3, [r0]
   1b4d0:	ldr	r3, [r3, #52]	; 0x34
   1b4d4:	cmp	r3, r2
   1b4d8:	beq	1b3d0 <floor@plt+0xa004>
   1b4dc:	mov	r2, r9
   1b4e0:	mov	r1, r5
   1b4e4:	blx	r3
   1b4e8:	b	1b3d0 <floor@plt+0xa004>
   1b4ec:	mov	r0, r7
   1b4f0:	bl	28b34 <_ZdlPv@@Base+0x484>
   1b4f4:	ldr	r3, [sp, #20]
   1b4f8:	ldr	r2, [sp, #16]
   1b4fc:	add	r1, r3, #1
   1b500:	str	r1, [sp, #20]
   1b504:	mov	r0, r5
   1b508:	strb	r4, [r2, r3]
   1b50c:	bl	11204 <getc@plt>
   1b510:	cmn	r0, #1
   1b514:	cmpne	r0, #32
   1b518:	beq	1b450 <floor@plt+0xa084>
   1b51c:	cmp	r0, #10
   1b520:	ldr	r3, [sp, #20]
   1b524:	beq	1b554 <floor@plt+0xa188>
   1b528:	ldr	r2, [sp, #24]
   1b52c:	uxtb	r4, r0
   1b530:	cmp	r2, r3
   1b534:	bgt	1b4f8 <floor@plt+0xa12c>
   1b538:	b	1b4ec <floor@plt+0xa120>
   1b53c:	ldr	r2, [pc, #156]	; 1b5e0 <floor@plt+0xa214>
   1b540:	ldr	r1, [pc, #176]	; 1b5f8 <floor@plt+0xa22c>
   1b544:	ldr	r2, [r2]
   1b548:	ldr	r1, [r1]
   1b54c:	blx	r3
   1b550:	b	1b214 <floor@plt+0x9e48>
   1b554:	ldr	r1, [pc, #132]	; 1b5e0 <floor@plt+0xa214>
   1b558:	ldr	r2, [r1]
   1b55c:	add	r2, r2, #1
   1b560:	str	r2, [r1]
   1b564:	b	1b478 <floor@plt+0xa0ac>
   1b568:	ldr	r3, [pc, #128]	; 1b5f0 <floor@plt+0xa224>
   1b56c:	ldr	r0, [pc, #136]	; 1b5fc <floor@plt+0xa230>
   1b570:	mov	r2, r3
   1b574:	mov	r1, r3
   1b578:	bl	27444 <floor@plt+0x16078>
   1b57c:	ldr	r2, [pc, #116]	; 1b5f8 <floor@plt+0xa22c>
   1b580:	ldr	r3, [pc, #88]	; 1b5e0 <floor@plt+0xa214>
   1b584:	ldr	r5, [r2]
   1b588:	ldr	r9, [r3]
   1b58c:	b	1b4c4 <floor@plt+0xa0f8>
   1b590:	mov	r0, r7
   1b594:	bl	28b34 <_ZdlPv@@Base+0x484>
   1b598:	ldr	r3, [sp, #20]
   1b59c:	b	1b48c <floor@plt+0xa0c0>
   1b5a0:	bl	111e0 <__stack_chk_fail@plt>
   1b5a4:	b	1b5b0 <floor@plt+0xa1e4>
   1b5a8:	mov	r0, sl
   1b5ac:	bl	286b0 <_ZdlPv@@Base>
   1b5b0:	mov	r0, r7
   1b5b4:	bl	289cc <_ZdlPv@@Base+0x31c>
   1b5b8:	bl	111ec <__cxa_end_cleanup@plt>
   1b5bc:	mov	r0, r7
   1b5c0:	bl	289cc <_ZdlPv@@Base+0x31c>
   1b5c4:	bl	111ec <__cxa_end_cleanup@plt>
	...
   1b5d0:	andeq	r1, r4, r0, ror sp
   1b5d4:	andeq	r2, r4, r8, lsl #18
   1b5d8:	andeq	pc, r2, r8, lsr #32
   1b5dc:	andeq	fp, r1, r8, lsr r6
   1b5e0:	andeq	r5, r4, ip, lsr #10
   1b5e4:	andeq	lr, r2, r4, asr #20
   1b5e8:	andeq	pc, r2, ip, asr #32
   1b5ec:	andeq	lr, r2, r4, asr #30
   1b5f0:			; <UNDEFINED> instruction: 0x000454b8
   1b5f4:	andeq	pc, r2, r4, asr r0	; <UNPREDICTABLE>
   1b5f8:	andeq	r5, r4, ip, asr #9
   1b5fc:	andeq	pc, r2, r0, lsr r0	; <UNPREDICTABLE>
   1b600:	push	{r4, r5, r6, lr}
   1b604:	mov	r5, r0
   1b608:	ldr	r4, [pc, #28]	; 1b62c <floor@plt+0xa260>
   1b60c:	ldr	r1, [pc, #28]	; 1b630 <floor@plt+0xa264>
   1b610:	ldr	r2, [r4]
   1b614:	bl	29278 <_ZdlPv@@Base+0xbc8>
   1b618:	ldr	r2, [r4]
   1b61c:	mov	r0, r5
   1b620:	ldr	r1, [pc, #12]	; 1b634 <floor@plt+0xa268>
   1b624:	pop	{r4, r5, r6, lr}
   1b628:	b	29278 <_ZdlPv@@Base+0xbc8>
   1b62c:	andeq	r5, r4, r0, lsr r5
   1b630:	andeq	pc, r2, r0, ror r0	; <UNPREDICTABLE>
   1b634:	muleq	r2, r8, r0
   1b638:	bx	lr
   1b63c:	ldr	r3, [pc, #20]	; 1b658 <floor@plt+0xa28c>
   1b640:	push	{r4, lr}
   1b644:	mov	r4, r0
   1b648:	str	r3, [r0]
   1b64c:	bl	1665c <floor@plt+0x5290>
   1b650:	mov	r0, r4
   1b654:	pop	{r4, pc}
   1b658:	andeq	lr, r2, r4, asr #30
   1b65c:	ldr	r3, [pc, #40]	; 1b68c <floor@plt+0xa2c0>
   1b660:	push	{r4, lr}
   1b664:	mov	r4, r0
   1b668:	str	r3, [r0]
   1b66c:	bl	1665c <floor@plt+0x5290>
   1b670:	mov	r0, r4
   1b674:	bl	286b0 <_ZdlPv@@Base>
   1b678:	mov	r0, r4
   1b67c:	pop	{r4, pc}
   1b680:	mov	r0, r4
   1b684:	bl	286b0 <_ZdlPv@@Base>
   1b688:	bl	111ec <__cxa_end_cleanup@plt>
   1b68c:	andeq	lr, r2, r4, asr #30
   1b690:	mov	r0, #0
   1b694:	bx	lr
   1b698:	bx	lr
   1b69c:	bx	lr
   1b6a0:	bx	lr
   1b6a4:	vldr	d0, [pc, #12]	; 1b6b8 <floor@plt+0xa2ec>
   1b6a8:	sub	sp, sp, #32
   1b6ac:	vmov.f64	d1, d0
   1b6b0:	add	sp, sp, #32
   1b6b4:	bx	lr
	...
   1b6c0:	ldr	r3, [r0]
   1b6c4:	sub	sp, sp, #16
   1b6c8:	ldr	r3, [r3, #8]
   1b6cc:	add	sp, sp, #16
   1b6d0:	bx	r3
   1b6d4:	vldr	d0, [pc, #4]	; 1b6e0 <floor@plt+0xa314>
   1b6d8:	bx	lr
   1b6dc:	nop			; (mov r0, r0)
	...
   1b6e8:	mov	r0, #0
   1b6ec:	bx	lr
   1b6f0:	ldr	r3, [pc, #44]	; 1b724 <floor@plt+0xa358>
   1b6f4:	mov	r1, r0
   1b6f8:	push	{lr}		; (str lr, [sp, #-4]!)
   1b6fc:	ldr	r2, [r3]
   1b700:	ldr	r3, [r0, #20]
   1b704:	mov	r0, r2
   1b708:	ldr	ip, [r2]
   1b70c:	ldr	r2, [r1, #16]
   1b710:	ldr	r1, [r1, #12]
   1b714:	ldr	lr, [ip, #48]	; 0x30
   1b718:	mov	ip, lr
   1b71c:	pop	{lr}		; (ldr lr, [sp], #4)
   1b720:	bx	ip
   1b724:	andeq	r2, r4, r0, lsl r9
   1b728:	mov	r0, #11
   1b72c:	bx	lr
   1b730:	bx	lr
   1b734:	vldr	d4, [r1]
   1b738:	vldr	d5, [r1, #8]
   1b73c:	vldr	d6, [r0, #56]	; 0x38
   1b740:	vldr	d7, [r0, #64]	; 0x40
   1b744:	vadd.f64	d6, d6, d4
   1b748:	vadd.f64	d7, d7, d5
   1b74c:	vstr	d6, [r0, #56]	; 0x38
   1b750:	vstr	d7, [r0, #64]	; 0x40
   1b754:	bx	lr
   1b758:	vstr	d0, [r0, #96]	; 0x60
   1b75c:	bx	lr
   1b760:	vstr	d0, [r0, #104]	; 0x68
   1b764:	bx	lr
   1b768:	vldr	d5, [pc, #56]	; 1b7a8 <floor@plt+0xa3dc>
   1b76c:	vldr	d7, [r0, #80]	; 0x50
   1b770:	vldr	d6, [r0, #72]	; 0x48
   1b774:	vldr	d1, [r0, #64]	; 0x40
   1b778:	vldr	d0, [r0, #56]	; 0x38
   1b77c:	vldr	d4, [r0, #128]	; 0x80
   1b780:	sub	sp, sp, #32
   1b784:	vmla.f64	d1, d7, d5
   1b788:	vldr	d7, [pc, #32]	; 1b7b0 <floor@plt+0xa3e4>
   1b78c:	vmla.f64	d0, d6, d5
   1b790:	vldr	d6, [r0, #120]	; 0x78
   1b794:	vmls.f64	d1, d4, d7
   1b798:	vmls.f64	d0, d6, d7
   1b79c:	add	sp, sp, #32
   1b7a0:	bx	lr
   1b7a4:	nop			; (mov r0, r0)
   1b7a8:	andeq	r0, r0, r0
   1b7ac:	svccc	0x00e00000
   1b7b0:	movwcc	r8, #6248	; 0x1868
   1b7b4:	svccc	0x00d2bec3
   1b7b8:	vldr	d5, [pc, #56]	; 1b7f8 <floor@plt+0xa42c>
   1b7bc:	vldr	d7, [r0, #80]	; 0x50
   1b7c0:	vldr	d6, [r0, #72]	; 0x48
   1b7c4:	vldr	d1, [r0, #64]	; 0x40
   1b7c8:	vldr	d0, [r0, #56]	; 0x38
   1b7cc:	vldr	d4, [r0, #128]	; 0x80
   1b7d0:	sub	sp, sp, #32
   1b7d4:	vmla.f64	d1, d7, d5
   1b7d8:	vldr	d7, [pc, #32]	; 1b800 <floor@plt+0xa434>
   1b7dc:	vmls.f64	d0, d6, d5
   1b7e0:	vldr	d6, [r0, #120]	; 0x78
   1b7e4:	vmls.f64	d1, d4, d7
   1b7e8:	vmla.f64	d0, d6, d7
   1b7ec:	add	sp, sp, #32
   1b7f0:	bx	lr
   1b7f4:	nop			; (mov r0, r0)
   1b7f8:	andeq	r0, r0, r0
   1b7fc:	svccc	0x00e00000
   1b800:	movwcc	r8, #6248	; 0x1868
   1b804:	svccc	0x00d2bec3
   1b808:	vldr	d5, [pc, #56]	; 1b848 <floor@plt+0xa47c>
   1b80c:	vldr	d7, [r0, #80]	; 0x50
   1b810:	vldr	d6, [r0, #72]	; 0x48
   1b814:	vldr	d1, [r0, #64]	; 0x40
   1b818:	vldr	d0, [r0, #56]	; 0x38
   1b81c:	vldr	d4, [r0, #128]	; 0x80
   1b820:	sub	sp, sp, #32
   1b824:	vmls.f64	d1, d7, d5
   1b828:	vldr	d7, [pc, #32]	; 1b850 <floor@plt+0xa484>
   1b82c:	vmla.f64	d0, d6, d5
   1b830:	vldr	d6, [r0, #120]	; 0x78
   1b834:	vmla.f64	d1, d4, d7
   1b838:	vmls.f64	d0, d6, d7
   1b83c:	add	sp, sp, #32
   1b840:	bx	lr
   1b844:	nop			; (mov r0, r0)
   1b848:	andeq	r0, r0, r0
   1b84c:	svccc	0x00e00000
   1b850:	movwcc	r8, #6248	; 0x1868
   1b854:	svccc	0x00d2bec3
   1b858:	vldr	d5, [pc, #56]	; 1b898 <floor@plt+0xa4cc>
   1b85c:	vldr	d7, [r0, #80]	; 0x50
   1b860:	vldr	d6, [r0, #72]	; 0x48
   1b864:	vldr	d1, [r0, #64]	; 0x40
   1b868:	vldr	d0, [r0, #56]	; 0x38
   1b86c:	vldr	d4, [r0, #128]	; 0x80
   1b870:	sub	sp, sp, #32
   1b874:	vmls.f64	d1, d7, d5
   1b878:	vldr	d7, [pc, #32]	; 1b8a0 <floor@plt+0xa4d4>
   1b87c:	vmls.f64	d0, d6, d5
   1b880:	vldr	d6, [r0, #120]	; 0x78
   1b884:	vmla.f64	d1, d4, d7
   1b888:	vmla.f64	d0, d6, d7
   1b88c:	add	sp, sp, #32
   1b890:	bx	lr
   1b894:	nop			; (mov r0, r0)
   1b898:	andeq	r0, r0, r0
   1b89c:	svccc	0x00e00000
   1b8a0:	movwcc	r8, #6248	; 0x1868
   1b8a4:	svccc	0x00d2bec3
   1b8a8:	push	{r4, r5, r6, r7, lr}
   1b8ac:	vpush	{d8}
   1b8b0:	ldr	r6, [pc, #416]	; 1ba58 <floor@plt+0xa68c>
   1b8b4:	ldr	r2, [r0, #24]
   1b8b8:	mov	r4, r0
   1b8bc:	sub	sp, sp, #100	; 0x64
   1b8c0:	ldr	r3, [r6]
   1b8c4:	cmp	r2, #0
   1b8c8:	ldr	r1, [r0, #112]	; 0x70
   1b8cc:	str	r3, [sp, #92]	; 0x5c
   1b8d0:	bne	1b8e4 <floor@plt+0xa518>
   1b8d4:	vldr	d7, [r0, #88]	; 0x58
   1b8d8:	vcmpe.f64	d7, #0.0
   1b8dc:	vmrs	APSR_nzcv, fpscr
   1b8e0:	bmi	1ba3c <floor@plt+0xa670>
   1b8e4:	ldr	r5, [pc, #368]	; 1ba5c <floor@plt+0xa690>
   1b8e8:	ldr	r2, [r4, #48]	; 0x30
   1b8ec:	ldr	r3, [r5]
   1b8f0:	mov	r0, r3
   1b8f4:	ldr	r3, [r3]
   1b8f8:	ldr	r3, [r3, #56]	; 0x38
   1b8fc:	blx	r3
   1b900:	vldr	d0, [r4, #120]	; 0x78
   1b904:	add	r3, r4, #24
   1b908:	vcmp.f64	d0, #0.0
   1b90c:	vmrs	APSR_nzcv, fpscr
   1b910:	beq	1b984 <floor@plt+0xa5b8>
   1b914:	vldr	d6, [r4, #72]	; 0x48
   1b918:	vldr	d7, [r4, #80]	; 0x50
   1b91c:	ldr	r0, [r5]
   1b920:	ldr	r1, [r4, #112]	; 0x70
   1b924:	vabs.f64	d6, d6
   1b928:	vabs.f64	d7, d7
   1b92c:	ldr	r2, [r0]
   1b930:	vabs.f64	d0, d0
   1b934:	str	r1, [sp]
   1b938:	vstr	d6, [sp, #8]
   1b93c:	ldr	r7, [r2, #44]	; 0x2c
   1b940:	vstr	d7, [sp, #16]
   1b944:	vldr	d1, [r4, #88]	; 0x58
   1b948:	add	r1, r4, #56	; 0x38
   1b94c:	add	r2, sp, #8
   1b950:	blx	r7
   1b954:	ldr	r3, [r5]
   1b958:	mov	r0, r3
   1b95c:	ldr	r3, [r3]
   1b960:	ldr	r3, [r3, #60]	; 0x3c
   1b964:	blx	r3
   1b968:	ldr	r2, [sp, #92]	; 0x5c
   1b96c:	ldr	r3, [r6]
   1b970:	cmp	r2, r3
   1b974:	bne	1ba48 <floor@plt+0xa67c>
   1b978:	add	sp, sp, #100	; 0x64
   1b97c:	vpop	{d8}
   1b980:	pop	{r4, r5, r6, r7, pc}
   1b984:	vldr	d6, [pc, #196]	; 1ba50 <floor@plt+0xa684>
   1b988:	vldr	d7, [r4, #72]	; 0x48
   1b98c:	vldr	d1, [r4, #80]	; 0x50
   1b990:	mov	r0, #0
   1b994:	mov	r1, #0
   1b998:	vmul.f64	d7, d7, d6
   1b99c:	add	r2, sp, #24
   1b9a0:	vmul.f64	d1, d1, d6
   1b9a4:	add	ip, sp, #88	; 0x58
   1b9a8:	strd	r0, [r2]
   1b9ac:	strd	r0, [r2, #8]
   1b9b0:	add	r2, r2, #16
   1b9b4:	cmp	r2, ip
   1b9b8:	bne	1b9a8 <floor@plt+0xa5dc>
   1b9bc:	vldr	d2, [r4, #104]	; 0x68
   1b9c0:	vldr	d4, [r4, #96]	; 0x60
   1b9c4:	vldr	d6, [r4, #64]	; 0x40
   1b9c8:	vldr	d5, [r4, #56]	; 0x38
   1b9cc:	vsub.f64	d0, d1, d2
   1b9d0:	vadd.f64	d3, d4, d7
   1b9d4:	vadd.f64	d2, d2, d1
   1b9d8:	vsub.f64	d4, d7, d4
   1b9dc:	vadd.f64	d8, d7, d5
   1b9e0:	vsub.f64	d7, d5, d7
   1b9e4:	ldr	r0, [r5]
   1b9e8:	add	r1, sp, #24
   1b9ec:	vsub.f64	d0, d6, d0
   1b9f0:	vadd.f64	d3, d3, d5
   1b9f4:	vadd.f64	d2, d2, d6
   1b9f8:	vsub.f64	d5, d5, d4
   1b9fc:	vadd.f64	d4, d1, d6
   1ba00:	vsub.f64	d6, d6, d1
   1ba04:	ldr	r2, [r0]
   1ba08:	vstr	d8, [sp, #24]
   1ba0c:	vstr	d0, [sp, #32]
   1ba10:	ldr	r7, [r2, #28]
   1ba14:	vstr	d2, [sp, #48]	; 0x30
   1ba18:	vstr	d3, [sp, #40]	; 0x28
   1ba1c:	vstr	d5, [sp, #56]	; 0x38
   1ba20:	vstr	d7, [sp, #72]	; 0x48
   1ba24:	vstr	d4, [sp, #64]	; 0x40
   1ba28:	vstr	d6, [sp, #80]	; 0x50
   1ba2c:	vldr	d0, [r4, #88]	; 0x58
   1ba30:	mov	r2, #4
   1ba34:	blx	r7
   1ba38:	b	1b954 <floor@plt+0xa588>
   1ba3c:	cmp	r1, #0
   1ba40:	bne	1b8e4 <floor@plt+0xa518>
   1ba44:	b	1b968 <floor@plt+0xa59c>
   1ba48:	bl	111e0 <__stack_chk_fail@plt>
   1ba4c:	nop			; (mov r0, r0)
   1ba50:	andeq	r0, r0, r0
   1ba54:	svccc	0x00e00000
   1ba58:	andeq	r1, r4, r0, ror sp
   1ba5c:	andeq	r2, r4, r0, lsl r9
   1ba60:	mov	r0, #10
   1ba64:	bx	lr
   1ba68:	ldr	r3, [r0, #24]
   1ba6c:	ldr	r1, [r0, #112]	; 0x70
   1ba70:	cmp	r3, #0
   1ba74:	bne	1ba88 <floor@plt+0xa6bc>
   1ba78:	vldr	d7, [r0, #88]	; 0x58
   1ba7c:	vcmpe.f64	d7, #0.0
   1ba80:	vmrs	APSR_nzcv, fpscr
   1ba84:	bmi	1bae8 <floor@plt+0xa71c>
   1ba88:	push	{r4, r5, r6, lr}
   1ba8c:	mov	r4, r0
   1ba90:	ldr	r5, [pc, #92]	; 1baf4 <floor@plt+0xa728>
   1ba94:	ldr	r2, [r0, #48]	; 0x30
   1ba98:	ldr	r3, [r5]
   1ba9c:	mov	r0, r3
   1baa0:	ldr	r3, [r3]
   1baa4:	ldr	r3, [r3, #56]	; 0x38
   1baa8:	blx	r3
   1baac:	ldr	r3, [r5]
   1bab0:	vldr	d0, [r4, #88]	; 0x58
   1bab4:	mov	r0, r3
   1bab8:	ldr	r1, [r3]
   1babc:	add	r2, r4, #72	; 0x48
   1bac0:	add	r3, r4, #24
   1bac4:	ldr	r6, [r1, #40]	; 0x28
   1bac8:	add	r1, r4, #56	; 0x38
   1bacc:	blx	r6
   1bad0:	ldr	r3, [r5]
   1bad4:	pop	{r4, r5, r6, lr}
   1bad8:	mov	r0, r3
   1badc:	ldr	r3, [r3]
   1bae0:	ldr	r3, [r3, #60]	; 0x3c
   1bae4:	bx	r3
   1bae8:	cmp	r1, #0
   1baec:	bne	1ba88 <floor@plt+0xa6bc>
   1baf0:	bx	lr
   1baf4:	andeq	r2, r4, r0, lsl r9
   1baf8:	ldr	r3, [r0, #24]
   1bafc:	ldr	r1, [r0, #112]	; 0x70
   1bb00:	cmp	r3, #0
   1bb04:	bne	1bb18 <floor@plt+0xa74c>
   1bb08:	vldr	d7, [r0, #88]	; 0x58
   1bb0c:	vcmpe.f64	d7, #0.0
   1bb10:	vmrs	APSR_nzcv, fpscr
   1bb14:	bmi	1bb7c <floor@plt+0xa7b0>
   1bb18:	push	{r4, r5, r6, lr}
   1bb1c:	mov	r4, r0
   1bb20:	ldr	r5, [pc, #104]	; 1bb90 <floor@plt+0xa7c4>
   1bb24:	ldr	r2, [r0, #48]	; 0x30
   1bb28:	ldr	r3, [r5]
   1bb2c:	mov	r0, r3
   1bb30:	ldr	r3, [r3]
   1bb34:	ldr	r3, [r3, #56]	; 0x38
   1bb38:	blx	r3
   1bb3c:	ldr	r0, [r5]
   1bb40:	vldr	d0, [r4, #72]	; 0x48
   1bb44:	vldr	d7, [pc, #60]	; 1bb88 <floor@plt+0xa7bc>
   1bb48:	ldr	r3, [r0]
   1bb4c:	vldr	d1, [r4, #88]	; 0x58
   1bb50:	add	r2, r4, #24
   1bb54:	ldr	r3, [r3, #16]
   1bb58:	add	r1, r4, #56	; 0x38
   1bb5c:	vmul.f64	d0, d0, d7
   1bb60:	blx	r3
   1bb64:	ldr	r3, [r5]
   1bb68:	pop	{r4, r5, r6, lr}
   1bb6c:	mov	r0, r3
   1bb70:	ldr	r3, [r3]
   1bb74:	ldr	r3, [r3, #60]	; 0x3c
   1bb78:	bx	r3
   1bb7c:	cmp	r1, #0
   1bb80:	bne	1bb18 <floor@plt+0xa74c>
   1bb84:	bx	lr
   1bb88:	andeq	r0, r0, r0
   1bb8c:	svccc	0x00e00000
   1bb90:	andeq	r2, r4, r0, lsl r9
   1bb94:	vldr	d4, [r1, #8]
   1bb98:	vldr	d3, [r1]
   1bb9c:	vldr	d7, [r0, #56]	; 0x38
   1bba0:	vldr	d5, [r0, #64]	; 0x40
   1bba4:	vldr	d6, [r0, #72]	; 0x48
   1bba8:	vadd.f64	d3, d7, d3
   1bbac:	vadd.f64	d5, d5, d4
   1bbb0:	vldr	d7, [r0, #80]	; 0x50
   1bbb4:	vstr	d3, [r0, #56]	; 0x38
   1bbb8:	vstr	d5, [r0, #64]	; 0x40
   1bbbc:	vldr	d4, [r1]
   1bbc0:	vldr	d5, [r1, #8]
   1bbc4:	vadd.f64	d6, d6, d4
   1bbc8:	vadd.f64	d7, d7, d5
   1bbcc:	vstr	d6, [r0, #72]	; 0x48
   1bbd0:	vstr	d7, [r0, #80]	; 0x50
   1bbd4:	bx	lr
   1bbd8:	vldr	d4, [r1, #8]
   1bbdc:	vldr	d3, [r1]
   1bbe0:	vldr	d7, [r0, #88]	; 0x58
   1bbe4:	vldr	d5, [r0, #96]	; 0x60
   1bbe8:	vldr	d6, [r0, #104]	; 0x68
   1bbec:	vadd.f64	d3, d7, d3
   1bbf0:	vadd.f64	d5, d5, d4
   1bbf4:	vldr	d7, [r0, #112]	; 0x70
   1bbf8:	vstr	d3, [r0, #88]	; 0x58
   1bbfc:	vstr	d5, [r0, #96]	; 0x60
   1bc00:	vldr	d4, [r1]
   1bc04:	vldr	d5, [r1, #8]
   1bc08:	vadd.f64	d6, d6, d4
   1bc0c:	vadd.f64	d7, d7, d5
   1bc10:	vstr	d6, [r0, #104]	; 0x68
   1bc14:	vstr	d7, [r0, #112]	; 0x70
   1bc18:	bx	lr
   1bc1c:	vldr	d4, [r1, #8]
   1bc20:	vldr	d3, [r1]
   1bc24:	vldr	d7, [r0, #88]	; 0x58
   1bc28:	vldr	d5, [r0, #96]	; 0x60
   1bc2c:	vldr	d6, [r0, #104]	; 0x68
   1bc30:	ldr	r2, [r0, #124]	; 0x7c
   1bc34:	vadd.f64	d3, d7, d3
   1bc38:	vadd.f64	d5, d5, d4
   1bc3c:	vldr	d7, [r0, #112]	; 0x70
   1bc40:	cmp	r2, #0
   1bc44:	vstr	d3, [r0, #88]	; 0x58
   1bc48:	vstr	d5, [r0, #96]	; 0x60
   1bc4c:	vldr	d4, [r1]
   1bc50:	vldr	d5, [r1, #8]
   1bc54:	vadd.f64	d6, d6, d4
   1bc58:	vadd.f64	d7, d7, d5
   1bc5c:	vstr	d6, [r0, #104]	; 0x68
   1bc60:	vstr	d7, [r0, #112]	; 0x70
   1bc64:	bxle	lr
   1bc68:	ldr	r3, [r0, #120]	; 0x78
   1bc6c:	add	r0, r3, r2, lsl #4
   1bc70:	add	r2, r3, #8
   1bc74:	vldr	d7, [r2, #-8]
   1bc78:	vldr	d6, [r1]
   1bc7c:	add	r3, r3, #16
   1bc80:	add	r2, r2, #16
   1bc84:	vadd.f64	d7, d7, d6
   1bc88:	vstr	d7, [r2, #-24]	; 0xffffffe8
   1bc8c:	vldr	d7, [r3, #-8]
   1bc90:	vldr	d6, [r1, #8]
   1bc94:	vadd.f64	d7, d7, d6
   1bc98:	vstr	d7, [r3, #-8]
   1bc9c:	cmp	r3, r0
   1bca0:	bne	1bc74 <floor@plt+0xa8a8>
   1bca4:	bx	lr
   1bca8:	vldr	d3, [r1]
   1bcac:	vldr	d4, [r1, #8]
   1bcb0:	vldr	d6, [r0, #88]	; 0x58
   1bcb4:	vldr	d7, [r0, #96]	; 0x60
   1bcb8:	vldr	d5, [r0, #104]	; 0x68
   1bcbc:	vldr	d2, [r0, #136]	; 0x88
   1bcc0:	vadd.f64	d3, d6, d3
   1bcc4:	vadd.f64	d4, d7, d4
   1bcc8:	vldr	d6, [r0, #112]	; 0x70
   1bccc:	vldr	d7, [r0, #128]	; 0x80
   1bcd0:	vstr	d3, [r0, #88]	; 0x58
   1bcd4:	vstr	d4, [r0, #96]	; 0x60
   1bcd8:	vldr	d3, [r1]
   1bcdc:	vldr	d4, [r1, #8]
   1bce0:	vadd.f64	d5, d5, d3
   1bce4:	vadd.f64	d6, d6, d4
   1bce8:	vstr	d5, [r0, #104]	; 0x68
   1bcec:	vstr	d6, [r0, #112]	; 0x70
   1bcf0:	vldr	d5, [r1]
   1bcf4:	vldr	d6, [r1, #8]
   1bcf8:	vadd.f64	d7, d7, d5
   1bcfc:	vadd.f64	d2, d2, d6
   1bd00:	vstr	d7, [r0, #128]	; 0x80
   1bd04:	vstr	d2, [r0, #136]	; 0x88
   1bd08:	bx	lr
   1bd0c:	vldr	d7, [r0, #144]	; 0x90
   1bd10:	vldr	d6, [r0, #136]	; 0x88
   1bd14:	add	r3, r0, #128	; 0x80
   1bd18:	sub	sp, sp, #48	; 0x30
   1bd1c:	ldm	r3, {r0, r1, r2, r3}
   1bd20:	vadd.f64	d7, d7, d6
   1bd24:	add	ip, sp, #16
   1bd28:	stm	ip, {r0, r1, r2, r3}
   1bd2c:	vstr	d7, [sp, #24]
   1bd30:	ldm	ip, {r0, r1, r2, r3}
   1bd34:	add	ip, sp, #48	; 0x30
   1bd38:	stmdb	ip, {r0, r1, r2, r3}
   1bd3c:	vldr	d0, [sp, #32]
   1bd40:	vldr	d1, [sp, #40]	; 0x28
   1bd44:	add	sp, sp, #48	; 0x30
   1bd48:	bx	lr
   1bd4c:	vldr	d7, [r0, #136]	; 0x88
   1bd50:	vldr	d6, [r0, #144]	; 0x90
   1bd54:	add	r3, r0, #128	; 0x80
   1bd58:	sub	sp, sp, #48	; 0x30
   1bd5c:	ldm	r3, {r0, r1, r2, r3}
   1bd60:	vsub.f64	d7, d7, d6
   1bd64:	add	ip, sp, #16
   1bd68:	stm	ip, {r0, r1, r2, r3}
   1bd6c:	vstr	d7, [sp, #24]
   1bd70:	ldm	ip, {r0, r1, r2, r3}
   1bd74:	add	ip, sp, #48	; 0x30
   1bd78:	stmdb	ip, {r0, r1, r2, r3}
   1bd7c:	vldr	d0, [sp, #32]
   1bd80:	vldr	d1, [sp, #40]	; 0x28
   1bd84:	add	sp, sp, #48	; 0x30
   1bd88:	bx	lr
   1bd8c:	vldr	d7, [r0, #144]	; 0x90
   1bd90:	vldr	d6, [r0, #128]	; 0x80
   1bd94:	add	r3, r0, #128	; 0x80
   1bd98:	sub	sp, sp, #48	; 0x30
   1bd9c:	ldm	r3, {r0, r1, r2, r3}
   1bda0:	vadd.f64	d7, d7, d6
   1bda4:	add	ip, sp, #16
   1bda8:	stm	ip, {r0, r1, r2, r3}
   1bdac:	vstr	d7, [sp, #16]
   1bdb0:	ldm	ip, {r0, r1, r2, r3}
   1bdb4:	add	ip, sp, #48	; 0x30
   1bdb8:	stmdb	ip, {r0, r1, r2, r3}
   1bdbc:	vldr	d0, [sp, #32]
   1bdc0:	vldr	d1, [sp, #40]	; 0x28
   1bdc4:	add	sp, sp, #48	; 0x30
   1bdc8:	bx	lr
   1bdcc:	vldr	d7, [r0, #128]	; 0x80
   1bdd0:	vldr	d6, [r0, #144]	; 0x90
   1bdd4:	add	r3, r0, #128	; 0x80
   1bdd8:	sub	sp, sp, #48	; 0x30
   1bddc:	ldm	r3, {r0, r1, r2, r3}
   1bde0:	vsub.f64	d7, d7, d6
   1bde4:	add	ip, sp, #16
   1bde8:	stm	ip, {r0, r1, r2, r3}
   1bdec:	vstr	d7, [sp, #16]
   1bdf0:	ldm	ip, {r0, r1, r2, r3}
   1bdf4:	add	ip, sp, #48	; 0x30
   1bdf8:	stmdb	ip, {r0, r1, r2, r3}
   1bdfc:	vldr	d0, [sp, #32]
   1be00:	vldr	d1, [sp, #40]	; 0x28
   1be04:	add	sp, sp, #48	; 0x30
   1be08:	bx	lr
   1be0c:	vldr	d6, [pc, #36]	; 1be38 <floor@plt+0xaa6c>
   1be10:	vldr	d5, [r0, #144]	; 0x90
   1be14:	vldr	d0, [r0, #128]	; 0x80
   1be18:	vldr	d1, [r0, #136]	; 0x88
   1be1c:	sub	sp, sp, #32
   1be20:	vdiv.f64	d7, d5, d6
   1be24:	vadd.f64	d0, d0, d7
   1be28:	vadd.f64	d1, d7, d1
   1be2c:	add	sp, sp, #32
   1be30:	bx	lr
   1be34:	nop			; (mov r0, r0)
   1be38:	ldrbtvs	r3, [pc], -sp, asr #23
   1be3c:	svccc	0x00f6a09e
   1be40:	vldr	d6, [pc, #32]	; 1be68 <floor@plt+0xaa9c>
   1be44:	vldr	d5, [r0, #144]	; 0x90
   1be48:	vldr	d0, [r0, #128]	; 0x80
   1be4c:	vldr	d1, [r0, #136]	; 0x88
   1be50:	sub	sp, sp, #32
   1be54:	vdiv.f64	d7, d5, d6
   1be58:	vsub.f64	d0, d0, d7
   1be5c:	vadd.f64	d1, d7, d1
   1be60:	add	sp, sp, #32
   1be64:	bx	lr
   1be68:	ldrbtvs	r3, [pc], -sp, asr #23
   1be6c:	svccc	0x00f6a09e
   1be70:	vldr	d6, [pc, #32]	; 1be98 <floor@plt+0xaacc>
   1be74:	vldr	d5, [r0, #144]	; 0x90
   1be78:	vldr	d0, [r0, #128]	; 0x80
   1be7c:	vldr	d1, [r0, #136]	; 0x88
   1be80:	sub	sp, sp, #32
   1be84:	vdiv.f64	d7, d5, d6
   1be88:	vadd.f64	d0, d0, d7
   1be8c:	vsub.f64	d1, d1, d7
   1be90:	add	sp, sp, #32
   1be94:	bx	lr
   1be98:	ldrbtvs	r3, [pc], -sp, asr #23
   1be9c:	svccc	0x00f6a09e
   1bea0:	vldr	d6, [pc, #32]	; 1bec8 <floor@plt+0xaafc>
   1bea4:	vldr	d5, [r0, #144]	; 0x90
   1bea8:	vldr	d0, [r0, #128]	; 0x80
   1beac:	vldr	d1, [r0, #136]	; 0x88
   1beb0:	sub	sp, sp, #32
   1beb4:	vdiv.f64	d7, d5, d6
   1beb8:	vsub.f64	d0, d0, d7
   1bebc:	vsub.f64	d1, d1, d7
   1bec0:	add	sp, sp, #32
   1bec4:	bx	lr
   1bec8:	ldrbtvs	r3, [pc], -sp, asr #23
   1becc:	svccc	0x00f6a09e
   1bed0:	push	{r4, lr}
   1bed4:	mov	r4, r0
   1bed8:	ldr	r0, [r0, #12]
   1bedc:	ldr	r3, [pc, #20]	; 1bef8 <floor@plt+0xab2c>
   1bee0:	cmp	r0, #0
   1bee4:	str	r3, [r4]
   1bee8:	beq	1bef0 <floor@plt+0xab24>
   1beec:	bl	1121c <_ZdaPv@plt>
   1bef0:	mov	r0, r4
   1bef4:	pop	{r4, pc}
   1bef8:	muleq	r2, r8, r2
   1befc:	push	{r4, lr}
   1bf00:	mov	r4, r0
   1bf04:	ldr	r0, [r0, #12]
   1bf08:	ldr	r3, [pc, #28]	; 1bf2c <floor@plt+0xab60>
   1bf0c:	cmp	r0, #0
   1bf10:	str	r3, [r4]
   1bf14:	beq	1bf1c <floor@plt+0xab50>
   1bf18:	bl	1121c <_ZdaPv@plt>
   1bf1c:	mov	r0, r4
   1bf20:	bl	286b0 <_ZdlPv@@Base>
   1bf24:	mov	r0, r4
   1bf28:	pop	{r4, pc}
   1bf2c:	muleq	r2, r8, r2
   1bf30:	push	{r4, lr}
   1bf34:	mov	r4, r0
   1bf38:	mov	r0, r1
   1bf3c:	bl	291f4 <_ZdlPv@@Base+0xb44>
   1bf40:	str	r0, [r4, #52]	; 0x34
   1bf44:	pop	{r4, pc}
   1bf48:	push	{r4, lr}
   1bf4c:	mov	r4, r0
   1bf50:	mov	r0, r1
   1bf54:	bl	291f4 <_ZdlPv@@Base+0xb44>
   1bf58:	str	r0, [r4, #112]	; 0x70
   1bf5c:	pop	{r4, pc}
   1bf60:	vcmpe.f64	d0, #0.0
   1bf64:	push	{r4, lr}
   1bf68:	mov	r4, r0
   1bf6c:	vpush	{d8}
   1bf70:	vmrs	APSR_nzcv, fpscr
   1bf74:	vmov.f64	d8, d0
   1bf78:	blt	1bf88 <floor@plt+0xabbc>
   1bf7c:	vstr	d8, [r4, #88]	; 0x58
   1bf80:	vpop	{d8}
   1bf84:	pop	{r4, pc}
   1bf88:	ldr	r1, [pc, #16]	; 1bfa0 <floor@plt+0xabd4>
   1bf8c:	mov	r0, #732	; 0x2dc
   1bf90:	bl	26c88 <floor@plt+0x158bc>
   1bf94:	vstr	d8, [r4, #88]	; 0x58
   1bf98:	vpop	{d8}
   1bf9c:	pop	{r4, pc}
   1bfa0:	andeq	pc, r2, ip, ror fp	; <UNPREDICTABLE>
   1bfa4:	push	{r4, r5, r6, r7, r8, lr}
   1bfa8:	vpush	{d8}
   1bfac:	ldr	r5, [pc, #308]	; 1c0e8 <floor@plt+0xad1c>
   1bfb0:	ldr	r2, [r0, #20]
   1bfb4:	mov	r4, r0
   1bfb8:	sub	sp, sp, #40	; 0x28
   1bfbc:	ldr	r3, [r5]
   1bfc0:	cmp	r2, #0
   1bfc4:	str	r3, [sp, #36]	; 0x24
   1bfc8:	beq	1c03c <floor@plt+0xac70>
   1bfcc:	ldr	r3, [r0]
   1bfd0:	ldr	r3, [r3, #60]	; 0x3c
   1bfd4:	blx	r3
   1bfd8:	ldr	r3, [r4]
   1bfdc:	mov	r0, r4
   1bfe0:	ldr	r3, [r3, #56]	; 0x38
   1bfe4:	vstr	d0, [sp]
   1bfe8:	vstr	d1, [sp, #8]
   1bfec:	blx	r3
   1bff0:	vldr	d6, [sp]
   1bff4:	vldr	d7, [sp, #8]
   1bff8:	vsub.f64	d6, d6, d0
   1bffc:	vstr	d0, [sp, #16]
   1c000:	vsub.f64	d0, d7, d1
   1c004:	vstr	d1, [sp, #24]
   1c008:	vcmp.f64	d6, #0.0
   1c00c:	vmrs	APSR_nzcv, fpscr
   1c010:	vcmp.f64	d0, #0.0
   1c014:	movne	r3, #1
   1c018:	moveq	r3, #0
   1c01c:	vmrs	APSR_nzcv, fpscr
   1c020:	movne	r3, #1
   1c024:	cmp	r3, #0
   1c028:	beq	1c03c <floor@plt+0xac70>
   1c02c:	vmov.f64	d1, d6
   1c030:	bl	11210 <atan2@plt>
   1c034:	vmov.f64	d8, d0
   1c038:	b	1c040 <floor@plt+0xac74>
   1c03c:	vldr	d8, [pc, #156]	; 1c0e0 <floor@plt+0xad14>
   1c040:	ldr	r3, [r4, #16]
   1c044:	cmp	r3, #0
   1c048:	beq	1c0bc <floor@plt+0xacf0>
   1c04c:	ldr	r6, [pc, #152]	; 1c0ec <floor@plt+0xad20>
   1c050:	ldr	r1, [r4, #52]	; 0x34
   1c054:	ldr	r2, [r4, #48]	; 0x30
   1c058:	ldr	r3, [r6]
   1c05c:	mov	r0, r3
   1c060:	ldr	r3, [r3]
   1c064:	ldr	r3, [r3, #56]	; 0x38
   1c068:	blx	r3
   1c06c:	ldr	r7, [r6]
   1c070:	ldr	r3, [r4]
   1c074:	mov	r0, r4
   1c078:	ldr	r2, [r7]
   1c07c:	ldr	r3, [r3, #64]	; 0x40
   1c080:	ldr	r8, [r2, #20]
   1c084:	blx	r3
   1c088:	mov	r0, r7
   1c08c:	ldr	r3, [r4, #12]
   1c090:	ldr	r2, [r4, #16]
   1c094:	add	r1, sp, #16
   1c098:	vstr	d0, [sp, #16]
   1c09c:	vstr	d1, [sp, #24]
   1c0a0:	vmov.f64	d0, d8
   1c0a4:	blx	r8
   1c0a8:	ldr	r3, [r6]
   1c0ac:	mov	r0, r3
   1c0b0:	ldr	r3, [r3]
   1c0b4:	ldr	r3, [r3, #60]	; 0x3c
   1c0b8:	blx	r3
   1c0bc:	ldr	r2, [sp, #36]	; 0x24
   1c0c0:	ldr	r3, [r5]
   1c0c4:	cmp	r2, r3
   1c0c8:	bne	1c0d8 <floor@plt+0xad0c>
   1c0cc:	add	sp, sp, #40	; 0x28
   1c0d0:	vpop	{d8}
   1c0d4:	pop	{r4, r5, r6, r7, r8, pc}
   1c0d8:	bl	111e0 <__stack_chk_fail@plt>
   1c0dc:	nop			; (mov r0, r0)
	...
   1c0e8:	andeq	r1, r4, r0, ror sp
   1c0ec:	andeq	r2, r4, r0, lsl r9
   1c0f0:	ldr	r0, [r0, #96]	; 0x60
   1c0f4:	b	11c94 <floor@plt+0x8c8>
   1c0f8:	push	{r4, r5, r6, r7, lr}
   1c0fc:	sub	sp, sp, #28
   1c100:	ldr	r5, [pc, #160]	; 1c1a8 <floor@plt+0xaddc>
   1c104:	mov	r7, r1
   1c108:	mov	r1, r0
   1c10c:	ldr	r3, [r5]
   1c110:	add	r0, sp, #12
   1c114:	mov	r6, r2
   1c118:	str	r3, [sp, #20]
   1c11c:	bl	11da8 <floor@plt+0x9dc>
   1c120:	ldr	r4, [pc, #132]	; 1c1ac <floor@plt+0xade0>
   1c124:	add	r2, sp, #8
   1c128:	add	r1, sp, #4
   1c12c:	add	r0, sp, #12
   1c130:	bl	11db4 <floor@plt+0x9e8>
   1c134:	cmp	r0, #0
   1c138:	beq	1c18c <floor@plt+0xadc0>
   1c13c:	ldr	r3, [sp, #4]
   1c140:	cmp	r3, #0
   1c144:	beq	1c124 <floor@plt+0xad58>
   1c148:	ldrb	r3, [r3]
   1c14c:	ldrb	r3, [r4, r3]
   1c150:	cmp	r3, #0
   1c154:	beq	1c124 <floor@plt+0xad58>
   1c158:	ldr	r3, [sp, #8]
   1c15c:	ldr	r2, [r3]
   1c160:	cmp	r2, #0
   1c164:	bne	1c124 <floor@plt+0xad58>
   1c168:	vldr	d5, [r7]
   1c16c:	vldr	d6, [r3, #8]
   1c170:	vldr	d7, [r3, #16]
   1c174:	vadd.f64	d6, d6, d5
   1c178:	vstr	d6, [r3, #8]
   1c17c:	vldr	d6, [r6]
   1c180:	vadd.f64	d7, d7, d6
   1c184:	vstr	d7, [r3, #16]
   1c188:	b	1c124 <floor@plt+0xad58>
   1c18c:	ldr	r2, [sp, #20]
   1c190:	ldr	r3, [r5]
   1c194:	cmp	r2, r3
   1c198:	bne	1c1a4 <floor@plt+0xadd8>
   1c19c:	add	sp, sp, #28
   1c1a0:	pop	{r4, r5, r6, r7, pc}
   1c1a4:	bl	111e0 <__stack_chk_fail@plt>
   1c1a8:	andeq	r1, r4, r0, ror sp
   1c1ac:			; <UNDEFINED> instruction: 0x00044bb8
   1c1b0:	vldr	d4, [r1]
   1c1b4:	vldr	d5, [r1, #8]
   1c1b8:	vldr	d6, [r0, #56]	; 0x38
   1c1bc:	vldr	d7, [r0, #64]	; 0x40
   1c1c0:	push	{r4, r5, r6, lr}
   1c1c4:	mov	r6, r0
   1c1c8:	vadd.f64	d6, d6, d4
   1c1cc:	vadd.f64	d7, d7, d5
   1c1d0:	ldr	r4, [r0, #88]	; 0x58
   1c1d4:	mov	r5, r1
   1c1d8:	cmp	r4, #0
   1c1dc:	vstr	d6, [r0, #56]	; 0x38
   1c1e0:	vstr	d7, [r0, #64]	; 0x40
   1c1e4:	beq	1c208 <floor@plt+0xae3c>
   1c1e8:	ldr	r3, [r4]
   1c1ec:	mov	r0, r4
   1c1f0:	mov	r1, r5
   1c1f4:	ldr	r3, [r3, #72]	; 0x48
   1c1f8:	blx	r3
   1c1fc:	ldr	r4, [r4, #8]
   1c200:	cmp	r4, #0
   1c204:	bne	1c1e8 <floor@plt+0xae1c>
   1c208:	ldr	r0, [r6, #96]	; 0x60
   1c20c:	add	r2, r5, #8
   1c210:	mov	r1, r5
   1c214:	pop	{r4, r5, r6, lr}
   1c218:	b	1c0f8 <floor@plt+0xad2c>
   1c21c:	push	{r4, r5, r6, r7, r8, lr}
   1c220:	sub	sp, sp, #40	; 0x28
   1c224:	ldr	r6, [pc, #348]	; 1c388 <floor@plt+0xafbc>
   1c228:	ldr	r3, [r0]
   1c22c:	ldr	r5, [pc, #344]	; 1c38c <floor@plt+0xafc0>
   1c230:	ldr	r8, [r6]
   1c234:	ldr	lr, [pc, #340]	; 1c390 <floor@plt+0xafc4>
   1c238:	ldr	r2, [r3, #52]	; 0x34
   1c23c:	ldr	ip, [r8]
   1c240:	ldr	r1, [r5]
   1c244:	cmp	r2, lr
   1c248:	mov	r4, r0
   1c24c:	ldr	r7, [ip, #76]	; 0x4c
   1c250:	str	r1, [sp, #36]	; 0x24
   1c254:	bne	1c324 <floor@plt+0xaf58>
   1c258:	vldr	d5, [pc, #288]	; 1c380 <floor@plt+0xafb4>
   1c25c:	vldr	d3, [r0, #80]	; 0x50
   1c260:	vldr	d6, [r0, #64]	; 0x40
   1c264:	vldr	d4, [r0, #72]	; 0x48
   1c268:	vldr	d7, [r0, #56]	; 0x38
   1c26c:	ldr	r3, [r3, #40]	; 0x28
   1c270:	vmls.f64	d6, d3, d5
   1c274:	ldr	r2, [pc, #280]	; 1c394 <floor@plt+0xafc8>
   1c278:	vmls.f64	d7, d4, d5
   1c27c:	cmp	r3, r2
   1c280:	vstr	d6, [sp, #8]
   1c284:	vstr	d7, [sp]
   1c288:	bne	1c344 <floor@plt+0xaf78>
   1c28c:	vldr	d5, [pc, #236]	; 1c380 <floor@plt+0xafb4>
   1c290:	vldr	d3, [r4, #80]	; 0x50
   1c294:	vldr	d6, [r4, #64]	; 0x40
   1c298:	vldr	d4, [r4, #72]	; 0x48
   1c29c:	vldr	d7, [r4, #56]	; 0x38
   1c2a0:	ldr	r3, [pc, #240]	; 1c398 <floor@plt+0xafcc>
   1c2a4:	vmla.f64	d6, d3, d5
   1c2a8:	cmp	r7, r3
   1c2ac:	vmla.f64	d7, d4, d5
   1c2b0:	vstr	d6, [sp, #24]
   1c2b4:	vstr	d7, [sp, #16]
   1c2b8:	bne	1c360 <floor@plt+0xaf94>
   1c2bc:	ldr	r4, [r4, #88]	; 0x58
   1c2c0:	cmp	r4, #0
   1c2c4:	beq	1c2f4 <floor@plt+0xaf28>
   1c2c8:	ldr	r3, [r4]
   1c2cc:	mov	r0, r4
   1c2d0:	ldr	r3, [r3, #88]	; 0x58
   1c2d4:	blx	r3
   1c2d8:	ldr	r3, [r4]
   1c2dc:	mov	r0, r4
   1c2e0:	ldr	r3, [r3, #92]	; 0x5c
   1c2e4:	blx	r3
   1c2e8:	ldr	r4, [r4, #8]
   1c2ec:	cmp	r4, #0
   1c2f0:	bne	1c2c8 <floor@plt+0xaefc>
   1c2f4:	ldr	r0, [r6]
   1c2f8:	ldr	r2, [pc, #156]	; 1c39c <floor@plt+0xafd0>
   1c2fc:	ldr	r3, [r0]
   1c300:	ldr	r3, [r3, #80]	; 0x50
   1c304:	cmp	r3, r2
   1c308:	bne	1c374 <floor@plt+0xafa8>
   1c30c:	ldr	r2, [sp, #36]	; 0x24
   1c310:	ldr	r3, [r5]
   1c314:	cmp	r2, r3
   1c318:	bne	1c37c <floor@plt+0xafb0>
   1c31c:	add	sp, sp, #40	; 0x28
   1c320:	pop	{r4, r5, r6, r7, r8, pc}
   1c324:	blx	r2
   1c328:	ldr	r3, [r4]
   1c32c:	ldr	r2, [pc, #96]	; 1c394 <floor@plt+0xafc8>
   1c330:	ldr	r3, [r3, #40]	; 0x28
   1c334:	cmp	r3, r2
   1c338:	vstr	d0, [sp]
   1c33c:	vstr	d1, [sp, #8]
   1c340:	beq	1c28c <floor@plt+0xaec0>
   1c344:	mov	r0, r4
   1c348:	blx	r3
   1c34c:	ldr	r3, [pc, #68]	; 1c398 <floor@plt+0xafcc>
   1c350:	cmp	r7, r3
   1c354:	vstr	d0, [sp, #16]
   1c358:	vstr	d1, [sp, #24]
   1c35c:	beq	1c2bc <floor@plt+0xaef0>
   1c360:	mov	r0, r8
   1c364:	add	r2, sp, #16
   1c368:	mov	r1, sp
   1c36c:	blx	r7
   1c370:	b	1c2bc <floor@plt+0xaef0>
   1c374:	blx	r3
   1c378:	b	1c30c <floor@plt+0xaf40>
   1c37c:	bl	111e0 <__stack_chk_fail@plt>
   1c380:	andeq	r0, r0, r0
   1c384:	svccc	0x00e00000
   1c388:	andeq	r2, r4, r0, lsl r9
   1c38c:	andeq	r1, r4, r0, ror sp
   1c390:	muleq	r2, r0, ip
   1c394:	andeq	r0, r2, r0, lsl #24
   1c398:	muleq	r1, r8, r6
   1c39c:	muleq	r1, ip, r6
   1c3a0:	push	{r4, r5}
   1c3a4:	mov	r4, #0
   1c3a8:	ldr	r5, [pc, #16]	; 1c3c0 <floor@plt+0xaff4>
   1c3ac:	mov	r2, #1
   1c3b0:	str	r2, [r0]
   1c3b4:	strd	r4, [r0, #16]
   1c3b8:	pop	{r4, r5}
   1c3bc:	bx	lr
   1c3c0:	svccc	0x00f00000	; IMB
   1c3c4:	ldr	r1, [pc, #32]	; 1c3ec <floor@plt+0xb020>
   1c3c8:	push	{r4, r5}
   1c3cc:	mov	r2, #0
   1c3d0:	mov	r4, #0
   1c3d4:	mov	r5, #0
   1c3d8:	stm	r0, {r1, r2}
   1c3dc:	strd	r4, [r0, #8]
   1c3e0:	strd	r4, [r0, #16]
   1c3e4:	pop	{r4, r5}
   1c3e8:	bx	lr
   1c3ec:	andeq	pc, r2, r0, lsl #6
   1c3f0:	push	{r4, lr}
   1c3f4:	mov	r4, r0
   1c3f8:	ldr	r0, [r0, #4]
   1c3fc:	ldr	r3, [pc, #20]	; 1c418 <floor@plt+0xb04c>
   1c400:	cmp	r0, #0
   1c404:	str	r3, [r4]
   1c408:	beq	1c410 <floor@plt+0xb044>
   1c40c:	bl	1121c <_ZdaPv@plt>
   1c410:	mov	r0, r4
   1c414:	pop	{r4, pc}
   1c418:	andeq	pc, r2, r0, lsl #6
   1c41c:	push	{r4, lr}
   1c420:	mov	r4, r0
   1c424:	ldr	r0, [r0, #4]
   1c428:	ldr	r3, [pc, #28]	; 1c44c <floor@plt+0xb080>
   1c42c:	cmp	r0, #0
   1c430:	str	r3, [r4]
   1c434:	beq	1c43c <floor@plt+0xb070>
   1c438:	bl	1121c <_ZdaPv@plt>
   1c43c:	mov	r0, r4
   1c440:	bl	286b0 <_ZdlPv@@Base>
   1c444:	mov	r0, r4
   1c448:	pop	{r4, pc}
   1c44c:	andeq	pc, r2, r0, lsl #6
   1c450:	vstr	d0, [r0, #16]
   1c454:	vstr	d1, [r0, #8]
   1c458:	bx	lr
   1c45c:	push	{r4, r5, r6, lr}
   1c460:	mov	r4, r0
   1c464:	ldr	r0, [r0, #4]
   1c468:	mov	r5, r1
   1c46c:	cmp	r0, #0
   1c470:	beq	1c478 <floor@plt+0xb0ac>
   1c474:	bl	1121c <_ZdaPv@plt>
   1c478:	cmp	r5, #0
   1c47c:	beq	1c48c <floor@plt+0xb0c0>
   1c480:	ldrb	r3, [r5]
   1c484:	cmp	r3, #0
   1c488:	bne	1c498 <floor@plt+0xb0cc>
   1c48c:	mov	r3, #0
   1c490:	str	r3, [r4, #4]
   1c494:	pop	{r4, r5, r6, pc}
   1c498:	mov	r0, r5
   1c49c:	bl	291f4 <_ZdlPv@@Base+0xb44>
   1c4a0:	str	r0, [r4, #4]
   1c4a4:	pop	{r4, r5, r6, pc}
   1c4a8:	vldr	d6, [r0, #16]
   1c4ac:	push	{r4, r5, r6, r7, lr}
   1c4b0:	vpush	{d8-d12}
   1c4b4:	ldr	r5, [pc, #428]	; 1c668 <floor@plt+0xb29c>
   1c4b8:	vcmp.f64	d6, #0.0
   1c4bc:	vldr	d12, [r2]
   1c4c0:	vldr	d5, [r1]
   1c4c4:	vldr	d8, [r2, #8]
   1c4c8:	vldr	d7, [r1, #8]
   1c4cc:	vmrs	APSR_nzcv, fpscr
   1c4d0:	sub	sp, sp, #28
   1c4d4:	ldr	r3, [r5]
   1c4d8:	mov	r4, r0
   1c4dc:	vsub.f64	d12, d12, d5
   1c4e0:	vsub.f64	d8, d8, d7
   1c4e4:	str	r3, [sp, #20]
   1c4e8:	bne	1c59c <floor@plt+0xb1d0>
   1c4ec:	vldr	d7, [r0, #8]
   1c4f0:	vcmp.f64	d7, #0.0
   1c4f4:	vmrs	APSR_nzcv, fpscr
   1c4f8:	bne	1c5cc <floor@plt+0xb200>
   1c4fc:	vcmpe.f64	d0, #0.0
   1c500:	mov	r6, #0
   1c504:	mov	r7, #0
   1c508:	mov	r1, sp
   1c50c:	vmrs	APSR_nzcv, fpscr
   1c510:	ldr	r0, [pc, #340]	; 1c66c <floor@plt+0xb2a0>
   1c514:	strd	r6, [sp]
   1c518:	vdivhi.f64	d10, d12, d0
   1c51c:	vmovhi.f64	d9, d0
   1c520:	vmovls.f64	d11, d8
   1c524:	vmovls.f64	d10, d12
   1c528:	vldrls	d9, [pc, #296]	; 1c658 <floor@plt+0xb28c>
   1c52c:	vdivhi.f64	d11, d8, d0
   1c530:	bl	11ed0 <floor@plt+0xb04>
   1c534:	add	r1, sp, #8
   1c538:	ldr	r0, [pc, #304]	; 1c670 <floor@plt+0xb2a4>
   1c53c:	strd	r6, [sp, #8]
   1c540:	bl	11ed0 <floor@plt+0xb04>
   1c544:	vldr	d7, [sp]
   1c548:	vcmpe.f64	d7, #0.0
   1c54c:	vmrs	APSR_nzcv, fpscr
   1c550:	ble	1c648 <floor@plt+0xb27c>
   1c554:	vcmpe.f64	d7, d10
   1c558:	vldr	d6, [sp, #8]
   1c55c:	vmrs	APSR_nzcv, fpscr
   1c560:	bmi	1c5f0 <floor@plt+0xb224>
   1c564:	vcmpe.f64	d6, #0.0
   1c568:	vmrs	APSR_nzcv, fpscr
   1c56c:	ble	1c57c <floor@plt+0xb1b0>
   1c570:	vcmpe.f64	d11, d6
   1c574:	vmrs	APSR_nzcv, fpscr
   1c578:	bgt	1c5f0 <floor@plt+0xb224>
   1c57c:	ldr	r2, [sp, #20]
   1c580:	ldr	r3, [r5]
   1c584:	vmov.f64	d0, d9
   1c588:	cmp	r2, r3
   1c58c:	bne	1c650 <floor@plt+0xb284>
   1c590:	add	sp, sp, #28
   1c594:	vpop	{d8-d12}
   1c598:	pop	{r4, r5, r6, r7, pc}
   1c59c:	vcmp.f64	d12, #0.0
   1c5a0:	vmrs	APSR_nzcv, fpscr
   1c5a4:	bne	1c608 <floor@plt+0xb23c>
   1c5a8:	ldr	r3, [pc, #196]	; 1c674 <floor@plt+0xb2a8>
   1c5ac:	ldr	r0, [pc, #196]	; 1c678 <floor@plt+0xb2ac>
   1c5b0:	mov	r2, r3
   1c5b4:	mov	r1, r3
   1c5b8:	bl	27444 <floor@plt+0x16078>
   1c5bc:	vldr	d7, [r4, #8]
   1c5c0:	vcmp.f64	d7, #0.0
   1c5c4:	vmrs	APSR_nzcv, fpscr
   1c5c8:	beq	1c628 <floor@plt+0xb25c>
   1c5cc:	vldr	d9, [pc, #140]	; 1c660 <floor@plt+0xb294>
   1c5d0:	vcmp.f64	d8, #0.0
   1c5d4:	vmrs	APSR_nzcv, fpscr
   1c5d8:	beq	1c630 <floor@plt+0xb264>
   1c5dc:	vdiv.f64	d6, d8, d7
   1c5e0:	vcmp.f64	d6, d9
   1c5e4:	vmrs	APSR_nzcv, fpscr
   1c5e8:	vmovgt.f64	d9, d6
   1c5ec:	b	1c61c <floor@plt+0xb250>
   1c5f0:	vdiv.f64	d9, d12, d7
   1c5f4:	vdiv.f64	d7, d8, d6
   1c5f8:	vcmpe.f64	d9, d7
   1c5fc:	vmrs	APSR_nzcv, fpscr
   1c600:	vmovle.f64	d9, d7
   1c604:	b	1c57c <floor@plt+0xb1b0>
   1c608:	vldr	d7, [r0, #8]
   1c60c:	vdiv.f64	d9, d12, d6
   1c610:	vcmp.f64	d7, #0.0
   1c614:	vmrs	APSR_nzcv, fpscr
   1c618:	bne	1c5d0 <floor@plt+0xb204>
   1c61c:	vcmp.f64	d9, #0.0
   1c620:	vmrs	APSR_nzcv, fpscr
   1c624:	bne	1c57c <floor@plt+0xb1b0>
   1c628:	vldr	d9, [pc, #40]	; 1c658 <floor@plt+0xb28c>
   1c62c:	b	1c57c <floor@plt+0xb1b0>
   1c630:	ldr	r3, [pc, #60]	; 1c674 <floor@plt+0xb2a8>
   1c634:	ldr	r0, [pc, #64]	; 1c67c <floor@plt+0xb2b0>
   1c638:	mov	r2, r3
   1c63c:	mov	r1, r3
   1c640:	bl	27444 <floor@plt+0x16078>
   1c644:	b	1c61c <floor@plt+0xb250>
   1c648:	vldr	d6, [sp, #8]
   1c64c:	b	1c564 <floor@plt+0xb198>
   1c650:	bl	111e0 <__stack_chk_fail@plt>
   1c654:	nop			; (mov r0, r0)
   1c658:	andeq	r0, r0, r0
   1c65c:	svccc	0x00f00000	; IMB
	...
   1c668:	andeq	r1, r4, r0, ror sp
   1c66c:	andeq	lr, r2, r4, asr #15
   1c670:	ldrdeq	lr, [r2], -r0
   1c674:			; <UNDEFINED> instruction: 0x000454b8
   1c678:	andeq	pc, r2, r0, lsr #23
   1c67c:	andeq	pc, r2, ip, asr #23
   1c680:	push	{r4, r6, r7, lr}
   1c684:	mov	r4, r0
   1c688:	ldr	r0, [r1]
   1c68c:	cmp	r0, #0
   1c690:	beq	1c6b0 <floor@plt+0xb2e4>
   1c694:	ldr	r3, [r0]
   1c698:	ldr	r3, [r3, #8]
   1c69c:	blx	r3
   1c6a0:	mov	r0, r4
   1c6a4:	vstr	d0, [r4]
   1c6a8:	vstr	d1, [r4, #8]
   1c6ac:	pop	{r4, r6, r7, pc}
   1c6b0:	ldrd	r6, [r1, #8]
   1c6b4:	ldrd	r2, [r1, #16]
   1c6b8:	mov	r0, r4
   1c6bc:	strd	r6, [r4]
   1c6c0:	strd	r2, [r4, #8]
   1c6c4:	pop	{r4, r6, r7, pc}
   1c6c8:	push	{r4, r5}
   1c6cc:	mov	r4, #0
   1c6d0:	mov	r5, #0
   1c6d4:	strd	r4, [r0]
   1c6d8:	strd	r4, [r0, #8]
   1c6dc:	pop	{r4, r5}
   1c6e0:	bx	lr
   1c6e4:	vstr	d0, [r0]
   1c6e8:	vstr	d1, [r0, #8]
   1c6ec:	bx	lr
   1c6f0:	vldr	d6, [r0]
   1c6f4:	vldr	d7, [r1]
   1c6f8:	vcmp.f64	d6, d7
   1c6fc:	vmrs	APSR_nzcv, fpscr
   1c700:	bne	1c720 <floor@plt+0xb354>
   1c704:	vldr	d6, [r0, #8]
   1c708:	vldr	d7, [r1, #8]
   1c70c:	vcmp.f64	d6, d7
   1c710:	vmrs	APSR_nzcv, fpscr
   1c714:	moveq	r0, #1
   1c718:	movne	r0, #0
   1c71c:	bx	lr
   1c720:	mov	r0, #0
   1c724:	bx	lr
   1c728:	vldr	d6, [r0]
   1c72c:	vldr	d7, [r1]
   1c730:	vcmp.f64	d6, d7
   1c734:	vmrs	APSR_nzcv, fpscr
   1c738:	bne	1c758 <floor@plt+0xb38c>
   1c73c:	vldr	d6, [r0, #8]
   1c740:	vldr	d7, [r1, #8]
   1c744:	vcmp.f64	d6, d7
   1c748:	vmrs	APSR_nzcv, fpscr
   1c74c:	movne	r0, #1
   1c750:	moveq	r0, #0
   1c754:	bx	lr
   1c758:	mov	r0, #1
   1c75c:	bx	lr
   1c760:	vldr	d4, [r1]
   1c764:	vldr	d5, [r1, #8]
   1c768:	vldr	d6, [r0]
   1c76c:	vldr	d7, [r0, #8]
   1c770:	vadd.f64	d6, d6, d4
   1c774:	vadd.f64	d7, d7, d5
   1c778:	vstr	d6, [r0]
   1c77c:	vstr	d7, [r0, #8]
   1c780:	bx	lr
   1c784:	vldr	d4, [r1]
   1c788:	vldr	d5, [r1, #8]
   1c78c:	vldr	d6, [r0]
   1c790:	vldr	d7, [r0, #8]
   1c794:	vsub.f64	d6, d6, d4
   1c798:	vsub.f64	d7, d7, d5
   1c79c:	vstr	d6, [r0]
   1c7a0:	vstr	d7, [r0, #8]
   1c7a4:	bx	lr
   1c7a8:	vldr	d6, [r0]
   1c7ac:	vldr	d7, [r0, #8]
   1c7b0:	vmul.f64	d6, d6, d0
   1c7b4:	vmul.f64	d7, d7, d0
   1c7b8:	vstr	d6, [r0]
   1c7bc:	vstr	d7, [r0, #8]
   1c7c0:	bx	lr
   1c7c4:	vldr	d7, [r0]
   1c7c8:	vldr	d5, [r0, #8]
   1c7cc:	vdiv.f64	d6, d7, d0
   1c7d0:	vdiv.f64	d7, d5, d0
   1c7d4:	vstr	d6, [r0]
   1c7d8:	vstr	d7, [r0, #8]
   1c7dc:	bx	lr
   1c7e0:	vldr	d1, [r0, #8]
   1c7e4:	vldr	d0, [r0]
   1c7e8:	sub	sp, sp, #32
   1c7ec:	vneg.f64	d1, d1
   1c7f0:	vneg.f64	d0, d0
   1c7f4:	add	sp, sp, #32
   1c7f8:	bx	lr
   1c7fc:	vldr	d1, [r0, #8]
   1c800:	vldr	d6, [r1, #8]
   1c804:	vldr	d0, [r0]
   1c808:	vldr	d7, [r1]
   1c80c:	sub	sp, sp, #32
   1c810:	vadd.f64	d1, d1, d6
   1c814:	vadd.f64	d0, d0, d7
   1c818:	add	sp, sp, #32
   1c81c:	bx	lr
   1c820:	vldr	d1, [r0, #8]
   1c824:	vldr	d6, [r1, #8]
   1c828:	vldr	d0, [r0]
   1c82c:	vldr	d7, [r1]
   1c830:	sub	sp, sp, #32
   1c834:	vsub.f64	d1, d1, d6
   1c838:	vsub.f64	d0, d0, d7
   1c83c:	add	sp, sp, #32
   1c840:	bx	lr
   1c844:	vldr	d1, [r0, #8]
   1c848:	vldr	d7, [r0]
   1c84c:	sub	sp, sp, #32
   1c850:	vdiv.f64	d1, d1, d0
   1c854:	vdiv.f64	d0, d7, d0
   1c858:	add	sp, sp, #32
   1c85c:	bx	lr
   1c860:	vldr	d1, [r0, #8]
   1c864:	vldr	d7, [r0]
   1c868:	sub	sp, sp, #32
   1c86c:	vmul.f64	d1, d0, d1
   1c870:	vmul.f64	d0, d7, d0
   1c874:	add	sp, sp, #32
   1c878:	bx	lr
   1c87c:	vldr	d0, [r0, #8]
   1c880:	vldr	d5, [r1, #8]
   1c884:	vldr	d6, [r0]
   1c888:	vldr	d7, [r1]
   1c88c:	vmul.f64	d0, d0, d5
   1c890:	vmla.f64	d0, d6, d7
   1c894:	bx	lr
   1c898:	vldr	d1, [r0, #8]
   1c89c:	vldr	d0, [r0]
   1c8a0:	b	283a0 <floor@plt+0x16fd4>
   1c8a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c8a8:	vpush	{d8-d11}
   1c8ac:	ldr	r8, [pc, #564]	; 1cae8 <floor@plt+0xb71c>
   1c8b0:	mov	r6, r1
   1c8b4:	mov	r5, r0
   1c8b8:	sub	sp, sp, #108	; 0x6c
   1c8bc:	ldr	r1, [r8]
   1c8c0:	vldr	d1, [r6, #8]
   1c8c4:	vldr	d0, [r6]
   1c8c8:	mov	r7, r2
   1c8cc:	mov	r4, r3
   1c8d0:	str	r1, [sp, #100]	; 0x64
   1c8d4:	ldr	r9, [sp, #176]	; 0xb0
   1c8d8:	bl	283a0 <floor@plt+0x16fd4>
   1c8dc:	vcmp.f64	d0, #0.0
   1c8e0:	vmrs	APSR_nzcv, fpscr
   1c8e4:	beq	1cab8 <floor@plt+0xb6ec>
   1c8e8:	vadd.f64	d6, d0, d0
   1c8ec:	vldr	d5, [r7, #8]
   1c8f0:	vldr	d4, [r7]
   1c8f4:	mov	ip, r4
   1c8f8:	vldr	d7, [r6]
   1c8fc:	ldm	ip!, {r0, r1, r2, r3}
   1c900:	vdiv.f64	d8, d4, d0
   1c904:	vldr	d10, [r6, #8]
   1c908:	add	r4, sp, #24
   1c90c:	ldr	r6, [pc, #472]	; 1caec <floor@plt+0xb720>
   1c910:	mov	lr, r4
   1c914:	vneg.f64	d7, d7
   1c918:	stmia	lr!, {r0, r1, r2, r3}
   1c91c:	mov	sl, #1
   1c920:	ldr	r2, [r7, #16]
   1c924:	ldm	ip, {r0, r1}
   1c928:	ldr	r3, [r6]
   1c92c:	cmp	r2, #0
   1c930:	stm	lr, {r0, r1}
   1c934:	ldr	r2, [r3]
   1c938:	str	sl, [sp, #24]
   1c93c:	vdiv.f64	d9, d5, d6
   1c940:	vmul.f64	d11, d8, d7
   1c944:	vnmul.f64	d8, d10, d8
   1c948:	vmul.f64	d10, d9, d10
   1c94c:	vmul.f64	d9, d9, d7
   1c950:	bne	1c9ec <floor@plt+0xb620>
   1c954:	vldr	d5, [r5, #8]
   1c958:	vldr	d6, [r5]
   1c95c:	ldr	r7, [r2, #24]
   1c960:	mov	r0, r3
   1c964:	vadd.f64	d5, d8, d5
   1c968:	vadd.f64	d6, d11, d6
   1c96c:	mov	r2, r5
   1c970:	add	r1, sp, #8
   1c974:	mov	r3, #1
   1c978:	str	r4, [sp]
   1c97c:	vsub.f64	d5, d5, d9
   1c980:	vsub.f64	d6, d6, d10
   1c984:	vstr	d5, [sp, #16]
   1c988:	vstr	d6, [sp, #8]
   1c98c:	blx	r7
   1c990:	vldr	d6, [r5, #8]
   1c994:	vldr	d7, [r5]
   1c998:	ldr	r0, [r6]
   1c99c:	mov	r2, r5
   1c9a0:	vadd.f64	d8, d8, d6
   1c9a4:	vadd.f64	d7, d11, d7
   1c9a8:	ldr	r3, [r0]
   1c9ac:	add	r1, sp, #8
   1c9b0:	ldr	r5, [r3, #24]
   1c9b4:	mov	r3, #1
   1c9b8:	str	r4, [sp]
   1c9bc:	vadd.f64	d9, d8, d9
   1c9c0:	vadd.f64	d10, d7, d10
   1c9c4:	vstr	d9, [sp, #16]
   1c9c8:	vstr	d10, [sp, #8]
   1c9cc:	blx	r5
   1c9d0:	ldr	r2, [sp, #100]	; 0x64
   1c9d4:	ldr	r3, [r8]
   1c9d8:	cmp	r2, r3
   1c9dc:	bne	1cadc <floor@plt+0xb710>
   1c9e0:	add	sp, sp, #108	; 0x6c
   1c9e4:	vpop	{d8-d11}
   1c9e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c9ec:	ldr	r1, [r2, #72]	; 0x48
   1c9f0:	ldr	r0, [pc, #248]	; 1caf0 <floor@plt+0xb724>
   1c9f4:	cmp	r1, r0
   1c9f8:	beq	1c954 <floor@plt+0xb588>
   1c9fc:	mov	r0, r3
   1ca00:	blx	r1
   1ca04:	cmp	r0, #0
   1ca08:	beq	1cad0 <floor@plt+0xb704>
   1ca0c:	add	r7, sp, #48	; 0x30
   1ca10:	mov	r0, #0
   1ca14:	mov	r1, #0
   1ca18:	mov	r3, r7
   1ca1c:	add	r2, sp, #96	; 0x60
   1ca20:	strd	r0, [r3]
   1ca24:	strd	r0, [r3, #8]
   1ca28:	add	r3, r3, #16
   1ca2c:	cmp	r2, r3
   1ca30:	bne	1ca20 <floor@plt+0xb654>
   1ca34:	vldr	d6, [r5, #8]
   1ca38:	vldr	d7, [r5]
   1ca3c:	ldr	ip, [r6]
   1ca40:	ldm	r5, {r0, r1, r2, r3}
   1ca44:	vadd.f64	d8, d8, d6
   1ca48:	vadd.f64	d7, d11, d7
   1ca4c:	ldr	lr, [ip]
   1ca50:	stm	r7, {r0, r1, r2, r3}
   1ca54:	mov	r0, ip
   1ca58:	ldr	r3, [lr, #56]	; 0x38
   1ca5c:	mov	r2, r9
   1ca60:	mov	r1, r9
   1ca64:	vadd.f64	d6, d9, d8
   1ca68:	vadd.f64	d5, d10, d7
   1ca6c:	vsub.f64	d8, d8, d9
   1ca70:	vsub.f64	d7, d7, d10
   1ca74:	ldr	sl, [pc, #120]	; 1caf4 <floor@plt+0xb728>
   1ca78:	ldr	fp, [pc, #120]	; 1caf8 <floor@plt+0xb72c>
   1ca7c:	vstr	d6, [sp, #72]	; 0x48
   1ca80:	vstr	d5, [sp, #64]	; 0x40
   1ca84:	vstr	d8, [sp, #88]	; 0x58
   1ca88:	vstr	d7, [sp, #80]	; 0x50
   1ca8c:	blx	r3
   1ca90:	ldr	r0, [r6]
   1ca94:	mov	r3, r4
   1ca98:	mov	r1, r7
   1ca9c:	ldr	r2, [r0]
   1caa0:	vldr	d0, [pc, #56]	; 1cae0 <floor@plt+0xb714>
   1caa4:	strd	sl, [sp, #40]	; 0x28
   1caa8:	ldr	r4, [r2, #28]
   1caac:	mov	r2, #3
   1cab0:	blx	r4
   1cab4:	b	1c9d0 <floor@plt+0xb604>
   1cab8:	ldr	r3, [pc, #60]	; 1cafc <floor@plt+0xb730>
   1cabc:	ldr	r0, [pc, #60]	; 1cb00 <floor@plt+0xb734>
   1cac0:	mov	r2, r3
   1cac4:	mov	r1, r3
   1cac8:	bl	27444 <floor@plt+0x16078>
   1cacc:	b	1c9d0 <floor@plt+0xb604>
   1cad0:	ldr	r3, [r6]
   1cad4:	ldr	r2, [r3]
   1cad8:	b	1c954 <floor@plt+0xb588>
   1cadc:	bl	111e0 <__stack_chk_fail@plt>
   1cae0:	andeq	r0, r0, r0
   1cae4:	svccc	0x00f00000	; IMB
   1cae8:	andeq	r1, r4, r0, ror sp
   1caec:	andeq	r2, r4, r0, lsl r9
   1caf0:	muleq	r1, r0, r6
   1caf4:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   1caf8:	svccc	0x00b99999
   1cafc:			; <UNDEFINED> instruction: 0x000454b8
   1cb00:	strdeq	pc, [r2], -ip
   1cb04:	push	{r4, r5, r6, r7, r8, lr}
   1cb08:	vpush	{d8-d10}
   1cb0c:	ldr	r7, [pc, #980]	; 1cee8 <floor@plt+0xbb1c>
   1cb10:	ldr	r2, [r0, #24]
   1cb14:	sub	sp, sp, #64	; 0x40
   1cb18:	ldr	r3, [r7]
   1cb1c:	cmp	r2, #0
   1cb20:	str	r3, [sp, #60]	; 0x3c
   1cb24:	beq	1cba8 <floor@plt+0xb7dc>
   1cb28:	ldr	r8, [pc, #956]	; 1ceec <floor@plt+0xbb20>
   1cb2c:	ldr	r2, [r0, #48]	; 0x30
   1cb30:	mov	r4, r0
   1cb34:	ldr	r3, [r8]
   1cb38:	add	r5, r0, #88	; 0x58
   1cb3c:	mov	r0, r3
   1cb40:	ldr	r3, [r3]
   1cb44:	mov	r1, #0
   1cb48:	add	r6, sp, #24
   1cb4c:	ldr	r3, [r3, #56]	; 0x38
   1cb50:	blx	r3
   1cb54:	ldm	r5, {r0, r1, r2, r3}
   1cb58:	ldrb	ip, [r4, #56]	; 0x38
   1cb5c:	stm	r6, {r0, r1, r2, r3}
   1cb60:	cmp	ip, #0
   1cb64:	bne	1ccc4 <floor@plt+0xb8f8>
   1cb68:	ldrb	r1, [r4, #57]	; 0x39
   1cb6c:	ldrd	r2, [r4, #120]	; 0x78
   1cb70:	cmp	r1, #0
   1cb74:	addeq	r5, r4, #24
   1cb78:	bne	1cbc4 <floor@plt+0xb7f8>
   1cb7c:	ldr	r0, [r8]
   1cb80:	mov	r1, r6
   1cb84:	ldr	ip, [r0]
   1cb88:	str	r5, [sp]
   1cb8c:	ldr	r4, [ip, #24]
   1cb90:	blx	r4
   1cb94:	ldr	r3, [r8]
   1cb98:	mov	r0, r3
   1cb9c:	ldr	r3, [r3]
   1cba0:	ldr	r3, [r3, #60]	; 0x3c
   1cba4:	blx	r3
   1cba8:	ldr	r2, [sp, #60]	; 0x3c
   1cbac:	ldr	r3, [r7]
   1cbb0:	cmp	r2, r3
   1cbb4:	bne	1ced0 <floor@plt+0xbb04>
   1cbb8:	add	sp, sp, #64	; 0x40
   1cbbc:	vpop	{d8-d10}
   1cbc0:	pop	{r4, r5, r6, r7, r8, pc}
   1cbc4:	sub	r1, r3, #-268435455	; 0xf0000001
   1cbc8:	cmp	r3, #1
   1cbcc:	lsl	r3, r1, #4
   1cbd0:	add	r1, r2, r3
   1cbd4:	subgt	r3, r3, #16
   1cbd8:	addgt	r2, r2, r3
   1cbdc:	movle	r2, r5
   1cbe0:	vldr	d8, [r1]
   1cbe4:	vldr	d6, [r2]
   1cbe8:	vldr	d9, [r1, #8]
   1cbec:	vldr	d7, [r2, #8]
   1cbf0:	vsub.f64	d8, d8, d6
   1cbf4:	vsub.f64	d9, d9, d7
   1cbf8:	vmov.f64	d0, d8
   1cbfc:	vmov.f64	d1, d9
   1cc00:	bl	283a0 <floor@plt+0x16fd4>
   1cc04:	vcmp.f64	d0, #0.0
   1cc08:	vmrs	APSR_nzcv, fpscr
   1cc0c:	beq	1cd8c <floor@plt+0xb9c0>
   1cc10:	ldr	r3, [r4, #80]	; 0x50
   1cc14:	cmp	r3, #0
   1cc18:	beq	1cc34 <floor@plt+0xb868>
   1cc1c:	ldr	r0, [r8]
   1cc20:	ldr	r2, [pc, #712]	; 1cef0 <floor@plt+0xbb24>
   1cc24:	ldr	r3, [r0]
   1cc28:	ldr	r3, [r3, #72]	; 0x48
   1cc2c:	cmp	r3, r2
   1cc30:	bne	1cda4 <floor@plt+0xb9d8>
   1cc34:	vldr	d4, [r4, #40]	; 0x28
   1cc38:	vldr	d2, [pc, #664]	; 1ced8 <floor@plt+0xbb0c>
   1cc3c:	vldr	d3, [pc, #668]	; 1cee0 <floor@plt+0xbb14>
   1cc40:	vldr	d7, [r4, #104]	; 0x68
   1cc44:	vabs.f64	d4, d4
   1cc48:	vldr	d6, [r4, #112]	; 0x70
   1cc4c:	ldr	r2, [r4, #124]	; 0x7c
   1cc50:	ldr	r1, [r4, #120]	; 0x78
   1cc54:	vdiv.f64	d1, d4, d0
   1cc58:	sub	r3, r2, #-268435455	; 0xf0000001
   1cc5c:	cmp	r2, #1
   1cc60:	lsl	r3, r3, #4
   1cc64:	add	r0, r1, r3
   1cc68:	subgt	r5, r3, #16
   1cc6c:	addgt	r5, r1, r5
   1cc70:	ldr	r3, [r4, #48]	; 0x30
   1cc74:	add	r2, r4, #64	; 0x40
   1cc78:	add	r1, sp, #40	; 0x28
   1cc7c:	vdiv.f64	d5, d1, d2
   1cc80:	vmul.f64	d5, d5, d3
   1cc84:	vmls.f64	d7, d5, d8
   1cc88:	vmls.f64	d6, d5, d9
   1cc8c:	vstr	d7, [r0]
   1cc90:	vstr	d6, [r0, #8]
   1cc94:	vldr	d4, [r5, #8]
   1cc98:	vldr	d5, [r5]
   1cc9c:	add	r5, r4, #24
   1cca0:	str	r3, [sp]
   1cca4:	vsub.f64	d6, d6, d4
   1cca8:	vsub.f64	d7, d7, d5
   1ccac:	mov	r3, r5
   1ccb0:	vstr	d6, [sp, #48]	; 0x30
   1ccb4:	vstr	d7, [sp, #40]	; 0x28
   1ccb8:	bl	1c8a4 <floor@plt+0xb4d8>
   1ccbc:	ldrd	r2, [r4, #120]	; 0x78
   1ccc0:	b	1cb7c <floor@plt+0xb7b0>
   1ccc4:	ldr	r3, [r4, #120]	; 0x78
   1ccc8:	vldr	d6, [r4, #88]	; 0x58
   1cccc:	vldr	d7, [r4, #96]	; 0x60
   1ccd0:	vldr	d8, [r3]
   1ccd4:	vldr	d9, [r3, #8]
   1ccd8:	vsub.f64	d8, d8, d6
   1ccdc:	vsub.f64	d9, d9, d7
   1cce0:	vmov.f64	d0, d8
   1cce4:	vmov.f64	d1, d9
   1cce8:	bl	283a0 <floor@plt+0x16fd4>
   1ccec:	vcmp.f64	d0, #0.0
   1ccf0:	vmrs	APSR_nzcv, fpscr
   1ccf4:	beq	1cd8c <floor@plt+0xb9c0>
   1ccf8:	ldr	r3, [r4, #80]	; 0x50
   1ccfc:	add	r2, r4, #64	; 0x40
   1cd00:	cmp	r3, #0
   1cd04:	add	r3, r4, #24
   1cd08:	beq	1cd24 <floor@plt+0xb958>
   1cd0c:	ldr	r0, [r8]
   1cd10:	ldr	ip, [pc, #472]	; 1cef0 <floor@plt+0xbb24>
   1cd14:	ldr	r1, [r0]
   1cd18:	ldr	r1, [r1, #72]	; 0x48
   1cd1c:	cmp	r1, ip
   1cd20:	bne	1ce50 <floor@plt+0xba84>
   1cd24:	vldr	d4, [r4, #40]	; 0x28
   1cd28:	vldr	d2, [pc, #424]	; 1ced8 <floor@plt+0xbb0c>
   1cd2c:	vldr	d3, [pc, #428]	; 1cee0 <floor@plt+0xbb14>
   1cd30:	vldr	d7, [r4, #88]	; 0x58
   1cd34:	vabs.f64	d4, d4
   1cd38:	vldr	d6, [r4, #96]	; 0x60
   1cd3c:	ldr	ip, [r4, #120]	; 0x78
   1cd40:	ldr	lr, [r4, #48]	; 0x30
   1cd44:	vdiv.f64	d1, d4, d0
   1cd48:	add	r1, sp, #40	; 0x28
   1cd4c:	mov	r0, r6
   1cd50:	vdiv.f64	d5, d1, d2
   1cd54:	vmul.f64	d5, d5, d3
   1cd58:	vmla.f64	d7, d5, d8
   1cd5c:	vmla.f64	d6, d5, d9
   1cd60:	vstr	d7, [sp, #24]
   1cd64:	vstr	d6, [sp, #32]
   1cd68:	vldr	d4, [ip, #8]
   1cd6c:	vldr	d5, [ip]
   1cd70:	str	lr, [sp]
   1cd74:	vsub.f64	d6, d6, d4
   1cd78:	vsub.f64	d7, d7, d5
   1cd7c:	vstr	d6, [sp, #48]	; 0x30
   1cd80:	vstr	d7, [sp, #40]	; 0x28
   1cd84:	bl	1c8a4 <floor@plt+0xb4d8>
   1cd88:	b	1cb68 <floor@plt+0xb79c>
   1cd8c:	ldr	r3, [pc, #352]	; 1cef4 <floor@plt+0xbb28>
   1cd90:	ldr	r0, [pc, #352]	; 1cef8 <floor@plt+0xbb2c>
   1cd94:	mov	r2, r3
   1cd98:	mov	r1, r3
   1cd9c:	bl	27444 <floor@plt+0x16078>
   1cda0:	b	1cba8 <floor@plt+0xb7dc>
   1cda4:	vstr	d0, [sp, #8]
   1cda8:	blx	r3
   1cdac:	vldr	d0, [sp, #8]
   1cdb0:	cmp	r0, #0
   1cdb4:	beq	1cc34 <floor@plt+0xb868>
   1cdb8:	vldr	d6, [r4, #64]	; 0x40
   1cdbc:	ldr	r1, [r4, #124]	; 0x7c
   1cdc0:	ldr	r2, [r4, #120]	; 0x78
   1cdc4:	sub	r3, r1, #-268435455	; 0xf0000001
   1cdc8:	vdiv.f64	d10, d6, d0
   1cdcc:	cmp	r1, #1
   1cdd0:	lsl	r3, r3, #4
   1cdd4:	add	r1, r2, r3
   1cdd8:	subgt	r3, r3, #16
   1cddc:	addgt	r5, r2, r3
   1cde0:	vldr	d6, [r1, #8]
   1cde4:	vldr	d4, [r5, #8]
   1cde8:	vldr	d7, [r1]
   1cdec:	vldr	d5, [r5]
   1cdf0:	ldr	r3, [r4, #48]	; 0x30
   1cdf4:	vsub.f64	d6, d6, d4
   1cdf8:	add	r5, r4, #24
   1cdfc:	vsub.f64	d7, d7, d5
   1ce00:	str	r3, [sp]
   1ce04:	add	r2, r4, #64	; 0x40
   1ce08:	mov	r3, r5
   1ce0c:	add	r1, sp, #40	; 0x28
   1ce10:	add	r0, r4, #104	; 0x68
   1ce14:	vstr	d6, [sp, #48]	; 0x30
   1ce18:	vstr	d7, [sp, #40]	; 0x28
   1ce1c:	bl	1c8a4 <floor@plt+0xb4d8>
   1ce20:	vldr	d7, [r4, #104]	; 0x68
   1ce24:	ldrd	r2, [r4, #120]	; 0x78
   1ce28:	sub	r1, r3, #-268435455	; 0xf0000001
   1ce2c:	add	r1, r2, r1, lsl #4
   1ce30:	vmul.f64	d8, d10, d8
   1ce34:	vmul.f64	d10, d10, d9
   1ce38:	vldr	d9, [r4, #112]	; 0x70
   1ce3c:	vsub.f64	d8, d7, d8
   1ce40:	vsub.f64	d9, d9, d10
   1ce44:	vstr	d8, [r1]
   1ce48:	vstr	d9, [r1, #8]
   1ce4c:	b	1cb7c <floor@plt+0xb7b0>
   1ce50:	strd	r2, [sp, #16]
   1ce54:	vstr	d0, [sp, #8]
   1ce58:	blx	r1
   1ce5c:	vldr	d0, [sp, #8]
   1ce60:	ldrd	r2, [sp, #16]
   1ce64:	cmp	r0, #0
   1ce68:	beq	1cd24 <floor@plt+0xb958>
   1ce6c:	vldr	d5, [r4, #64]	; 0x40
   1ce70:	ldr	r1, [r4, #120]	; 0x78
   1ce74:	vldr	d6, [r4, #96]	; 0x60
   1ce78:	vldr	d7, [r4, #88]	; 0x58
   1ce7c:	vdiv.f64	d4, d5, d0
   1ce80:	vldr	d3, [r1, #8]
   1ce84:	vldr	d5, [r1]
   1ce88:	ldr	r1, [r4, #48]	; 0x30
   1ce8c:	mov	r0, r5
   1ce90:	vsub.f64	d6, d6, d3
   1ce94:	vsub.f64	d7, d7, d5
   1ce98:	str	r1, [sp]
   1ce9c:	add	r1, sp, #40	; 0x28
   1cea0:	vstr	d6, [sp, #48]	; 0x30
   1cea4:	vstr	d7, [sp, #40]	; 0x28
   1cea8:	vmul.f64	d8, d4, d8
   1ceac:	vmul.f64	d9, d4, d9
   1ceb0:	bl	1c8a4 <floor@plt+0xb4d8>
   1ceb4:	vldr	d4, [r4, #96]	; 0x60
   1ceb8:	vldr	d7, [r4, #88]	; 0x58
   1cebc:	vadd.f64	d7, d7, d8
   1cec0:	vadd.f64	d9, d9, d4
   1cec4:	vstr	d7, [sp, #24]
   1cec8:	vstr	d9, [sp, #32]
   1cecc:	b	1cb68 <floor@plt+0xb79c>
   1ced0:	bl	111e0 <__stack_chk_fail@plt>
   1ced4:	nop			; (mov r0, r0)
   1ced8:	andeq	r0, r0, r0
   1cedc:	subsmi	r0, r2, r0
   1cee0:	andeq	r0, r0, r0
   1cee4:	svccc	0x00d00000
   1cee8:	andeq	r1, r4, r0, ror sp
   1ceec:	andeq	r2, r4, r0, lsl r9
   1cef0:	muleq	r1, r0, r6
   1cef4:			; <UNDEFINED> instruction: 0x000454b8
   1cef8:	strdeq	pc, [r2], -ip
   1cefc:	push	{r4, r5, r6, r7, r8, lr}
   1cf00:	vpush	{d8-d9}
   1cf04:	ldr	r7, [pc, #996]	; 1d2f0 <floor@plt+0xbf24>
   1cf08:	ldr	r2, [r0, #24]
   1cf0c:	sub	sp, sp, #64	; 0x40
   1cf10:	ldr	r3, [r7]
   1cf14:	cmp	r2, #0
   1cf18:	str	r3, [sp, #60]	; 0x3c
   1cf1c:	beq	1cfa0 <floor@plt+0xbbd4>
   1cf20:	ldr	r8, [pc, #972]	; 1d2f4 <floor@plt+0xbf28>
   1cf24:	ldr	r2, [r0, #48]	; 0x30
   1cf28:	mov	r4, r0
   1cf2c:	ldr	r3, [r8]
   1cf30:	add	r5, r0, #88	; 0x58
   1cf34:	mov	r0, r3
   1cf38:	ldr	r3, [r3]
   1cf3c:	mov	r1, #0
   1cf40:	add	r6, sp, #24
   1cf44:	ldr	r3, [r3, #56]	; 0x38
   1cf48:	blx	r3
   1cf4c:	ldm	r5, {r0, r1, r2, r3}
   1cf50:	ldrb	ip, [r4, #56]	; 0x38
   1cf54:	stm	r6, {r0, r1, r2, r3}
   1cf58:	cmp	ip, #0
   1cf5c:	bne	1d0bc <floor@plt+0xbcf0>
   1cf60:	ldrb	r1, [r4, #57]	; 0x39
   1cf64:	ldrd	r2, [r4, #120]	; 0x78
   1cf68:	cmp	r1, #0
   1cf6c:	addeq	r5, r4, #24
   1cf70:	bne	1cfbc <floor@plt+0xbbf0>
   1cf74:	ldr	r0, [r8]
   1cf78:	mov	r1, r6
   1cf7c:	ldr	ip, [r0]
   1cf80:	str	r5, [sp]
   1cf84:	ldr	r4, [ip, #32]
   1cf88:	blx	r4
   1cf8c:	ldr	r3, [r8]
   1cf90:	mov	r0, r3
   1cf94:	ldr	r3, [r3]
   1cf98:	ldr	r3, [r3, #60]	; 0x3c
   1cf9c:	blx	r3
   1cfa0:	ldr	r2, [sp, #60]	; 0x3c
   1cfa4:	ldr	r3, [r7]
   1cfa8:	cmp	r2, r3
   1cfac:	bne	1d2d0 <floor@plt+0xbf04>
   1cfb0:	add	sp, sp, #64	; 0x40
   1cfb4:	vpop	{d8-d9}
   1cfb8:	pop	{r4, r5, r6, r7, r8, pc}
   1cfbc:	sub	r1, r3, #-268435455	; 0xf0000001
   1cfc0:	cmp	r3, #1
   1cfc4:	lsl	r3, r1, #4
   1cfc8:	add	r1, r2, r3
   1cfcc:	subgt	r3, r3, #16
   1cfd0:	addgt	r2, r2, r3
   1cfd4:	movle	r2, r5
   1cfd8:	vldr	d8, [r1]
   1cfdc:	vldr	d6, [r2]
   1cfe0:	vldr	d9, [r1, #8]
   1cfe4:	vldr	d7, [r2, #8]
   1cfe8:	vsub.f64	d8, d8, d6
   1cfec:	vsub.f64	d9, d9, d7
   1cff0:	vmov.f64	d0, d8
   1cff4:	vmov.f64	d1, d9
   1cff8:	bl	283a0 <floor@plt+0x16fd4>
   1cffc:	vcmp.f64	d0, #0.0
   1d000:	vmrs	APSR_nzcv, fpscr
   1d004:	beq	1d184 <floor@plt+0xbdb8>
   1d008:	ldr	r3, [r4, #80]	; 0x50
   1d00c:	cmp	r3, #0
   1d010:	beq	1d02c <floor@plt+0xbc60>
   1d014:	ldr	r0, [r8]
   1d018:	ldr	r2, [pc, #728]	; 1d2f8 <floor@plt+0xbf2c>
   1d01c:	ldr	r3, [r0]
   1d020:	ldr	r3, [r3, #72]	; 0x48
   1d024:	cmp	r3, r2
   1d028:	bne	1d19c <floor@plt+0xbdd0>
   1d02c:	vldr	d4, [r4, #40]	; 0x28
   1d030:	vldr	d2, [pc, #672]	; 1d2d8 <floor@plt+0xbf0c>
   1d034:	vldr	d3, [pc, #676]	; 1d2e0 <floor@plt+0xbf14>
   1d038:	vldr	d7, [r4, #104]	; 0x68
   1d03c:	vabs.f64	d4, d4
   1d040:	vldr	d6, [r4, #112]	; 0x70
   1d044:	ldr	r2, [r4, #124]	; 0x7c
   1d048:	ldr	r1, [r4, #120]	; 0x78
   1d04c:	vdiv.f64	d1, d4, d0
   1d050:	sub	r3, r2, #-268435455	; 0xf0000001
   1d054:	cmp	r2, #1
   1d058:	lsl	r3, r3, #4
   1d05c:	add	r0, r1, r3
   1d060:	subgt	r5, r3, #16
   1d064:	addgt	r5, r1, r5
   1d068:	ldr	r3, [r4, #48]	; 0x30
   1d06c:	add	r2, r4, #64	; 0x40
   1d070:	add	r1, sp, #40	; 0x28
   1d074:	vdiv.f64	d5, d1, d2
   1d078:	vmul.f64	d5, d5, d3
   1d07c:	vmls.f64	d7, d5, d8
   1d080:	vmls.f64	d6, d5, d9
   1d084:	vstr	d7, [r0]
   1d088:	vstr	d6, [r0, #8]
   1d08c:	vldr	d4, [r5, #8]
   1d090:	vldr	d5, [r5]
   1d094:	add	r5, r4, #24
   1d098:	str	r3, [sp]
   1d09c:	vsub.f64	d6, d6, d4
   1d0a0:	vsub.f64	d7, d7, d5
   1d0a4:	mov	r3, r5
   1d0a8:	vstr	d6, [sp, #48]	; 0x30
   1d0ac:	vstr	d7, [sp, #40]	; 0x28
   1d0b0:	bl	1c8a4 <floor@plt+0xb4d8>
   1d0b4:	ldrd	r2, [r4, #120]	; 0x78
   1d0b8:	b	1cf74 <floor@plt+0xbba8>
   1d0bc:	ldr	r3, [r4, #120]	; 0x78
   1d0c0:	vldr	d6, [r4, #88]	; 0x58
   1d0c4:	vldr	d7, [r4, #96]	; 0x60
   1d0c8:	vldr	d8, [r3]
   1d0cc:	vldr	d9, [r3, #8]
   1d0d0:	vsub.f64	d8, d8, d6
   1d0d4:	vsub.f64	d9, d9, d7
   1d0d8:	vmov.f64	d0, d8
   1d0dc:	vmov.f64	d1, d9
   1d0e0:	bl	283a0 <floor@plt+0x16fd4>
   1d0e4:	vcmp.f64	d0, #0.0
   1d0e8:	vmrs	APSR_nzcv, fpscr
   1d0ec:	beq	1d184 <floor@plt+0xbdb8>
   1d0f0:	ldr	r3, [r4, #80]	; 0x50
   1d0f4:	add	r2, r4, #64	; 0x40
   1d0f8:	cmp	r3, #0
   1d0fc:	add	r3, r4, #24
   1d100:	beq	1d11c <floor@plt+0xbd50>
   1d104:	ldr	r0, [r8]
   1d108:	ldr	ip, [pc, #488]	; 1d2f8 <floor@plt+0xbf2c>
   1d10c:	ldr	r1, [r0]
   1d110:	ldr	r1, [r1, #72]	; 0x48
   1d114:	cmp	r1, ip
   1d118:	bne	1d24c <floor@plt+0xbe80>
   1d11c:	vldr	d4, [r4, #40]	; 0x28
   1d120:	vldr	d2, [pc, #432]	; 1d2d8 <floor@plt+0xbf0c>
   1d124:	vldr	d3, [pc, #436]	; 1d2e0 <floor@plt+0xbf14>
   1d128:	vldr	d7, [r4, #88]	; 0x58
   1d12c:	vabs.f64	d4, d4
   1d130:	vldr	d6, [r4, #96]	; 0x60
   1d134:	ldr	ip, [r4, #120]	; 0x78
   1d138:	ldr	lr, [r4, #48]	; 0x30
   1d13c:	vdiv.f64	d1, d4, d0
   1d140:	add	r1, sp, #40	; 0x28
   1d144:	mov	r0, r6
   1d148:	vdiv.f64	d5, d1, d2
   1d14c:	vmul.f64	d5, d5, d3
   1d150:	vmla.f64	d7, d5, d8
   1d154:	vmla.f64	d6, d5, d9
   1d158:	vstr	d7, [sp, #24]
   1d15c:	vstr	d6, [sp, #32]
   1d160:	vldr	d4, [ip, #8]
   1d164:	vldr	d5, [ip]
   1d168:	str	lr, [sp]
   1d16c:	vsub.f64	d6, d6, d4
   1d170:	vsub.f64	d7, d7, d5
   1d174:	vstr	d6, [sp, #48]	; 0x30
   1d178:	vstr	d7, [sp, #40]	; 0x28
   1d17c:	bl	1c8a4 <floor@plt+0xb4d8>
   1d180:	b	1cf60 <floor@plt+0xbb94>
   1d184:	ldr	r3, [pc, #368]	; 1d2fc <floor@plt+0xbf30>
   1d188:	ldr	r0, [pc, #368]	; 1d300 <floor@plt+0xbf34>
   1d18c:	mov	r2, r3
   1d190:	mov	r1, r3
   1d194:	bl	27444 <floor@plt+0x16078>
   1d198:	b	1cfa0 <floor@plt+0xbbd4>
   1d19c:	vstr	d0, [sp, #8]
   1d1a0:	blx	r3
   1d1a4:	vldr	d0, [sp, #8]
   1d1a8:	cmp	r0, #0
   1d1ac:	beq	1d02c <floor@plt+0xbc60>
   1d1b0:	vldr	d6, [r4, #64]	; 0x40
   1d1b4:	ldr	r1, [r4, #124]	; 0x7c
   1d1b8:	ldr	r2, [r4, #120]	; 0x78
   1d1bc:	sub	r3, r1, #-268435455	; 0xf0000001
   1d1c0:	vdiv.f64	d7, d6, d0
   1d1c4:	cmp	r1, #1
   1d1c8:	lsl	r3, r3, #4
   1d1cc:	add	r1, r2, r3
   1d1d0:	subgt	r3, r3, #16
   1d1d4:	addgt	r5, r2, r3
   1d1d8:	vldr	d6, [r1, #8]
   1d1dc:	vldr	d5, [r5]
   1d1e0:	vldr	d4, [r5, #8]
   1d1e4:	ldr	r3, [r4, #48]	; 0x30
   1d1e8:	add	r5, r4, #24
   1d1ec:	add	r2, r4, #64	; 0x40
   1d1f0:	vsub.f64	d6, d6, d4
   1d1f4:	add	r0, r4, #104	; 0x68
   1d1f8:	vmul.f64	d8, d7, d8
   1d1fc:	vmul.f64	d9, d7, d9
   1d200:	vldr	d7, [r1]
   1d204:	str	r3, [sp]
   1d208:	add	r1, sp, #40	; 0x28
   1d20c:	mov	r3, r5
   1d210:	vsub.f64	d7, d7, d5
   1d214:	vstr	d6, [sp, #48]	; 0x30
   1d218:	vstr	d7, [sp, #40]	; 0x28
   1d21c:	bl	1c8a4 <floor@plt+0xb4d8>
   1d220:	vldr	d6, [r4, #104]	; 0x68
   1d224:	vldr	d7, [r4, #112]	; 0x70
   1d228:	vldr	d5, [pc, #184]	; 1d2e8 <floor@plt+0xbf1c>
   1d22c:	ldrd	r2, [r4, #120]	; 0x78
   1d230:	vmls.f64	d6, d8, d5
   1d234:	sub	r1, r3, #-268435455	; 0xf0000001
   1d238:	vmls.f64	d7, d9, d5
   1d23c:	add	r1, r2, r1, lsl #4
   1d240:	vstr	d6, [r1]
   1d244:	vstr	d7, [r1, #8]
   1d248:	b	1cf74 <floor@plt+0xbba8>
   1d24c:	strd	r2, [sp, #16]
   1d250:	vstr	d0, [sp, #8]
   1d254:	blx	r1
   1d258:	vldr	d0, [sp, #8]
   1d25c:	ldrd	r2, [sp, #16]
   1d260:	cmp	r0, #0
   1d264:	beq	1d11c <floor@plt+0xbd50>
   1d268:	vldr	d5, [r4, #64]	; 0x40
   1d26c:	ldr	r1, [r4, #120]	; 0x78
   1d270:	vldr	d6, [r4, #96]	; 0x60
   1d274:	vldr	d7, [r4, #88]	; 0x58
   1d278:	vdiv.f64	d4, d5, d0
   1d27c:	vldr	d3, [r1, #8]
   1d280:	vldr	d5, [r1]
   1d284:	ldr	r1, [r4, #48]	; 0x30
   1d288:	mov	r0, r5
   1d28c:	vsub.f64	d6, d6, d3
   1d290:	vsub.f64	d7, d7, d5
   1d294:	str	r1, [sp]
   1d298:	add	r1, sp, #40	; 0x28
   1d29c:	vstr	d6, [sp, #48]	; 0x30
   1d2a0:	vstr	d7, [sp, #40]	; 0x28
   1d2a4:	vmul.f64	d8, d4, d8
   1d2a8:	vmul.f64	d9, d4, d9
   1d2ac:	bl	1c8a4 <floor@plt+0xb4d8>
   1d2b0:	vldr	d5, [pc, #48]	; 1d2e8 <floor@plt+0xbf1c>
   1d2b4:	vldr	d7, [r4, #96]	; 0x60
   1d2b8:	vldr	d6, [r4, #88]	; 0x58
   1d2bc:	vmla.f64	d6, d8, d5
   1d2c0:	vmla.f64	d7, d9, d5
   1d2c4:	vstr	d6, [sp, #24]
   1d2c8:	vstr	d7, [sp, #32]
   1d2cc:	b	1cf60 <floor@plt+0xbb94>
   1d2d0:	bl	111e0 <__stack_chk_fail@plt>
   1d2d4:	nop			; (mov r0, r0)
   1d2d8:	andeq	r0, r0, r0
   1d2dc:	subsmi	r0, r2, r0
   1d2e0:	andeq	r0, r0, r0
   1d2e4:	svccc	0x00d00000
   1d2e8:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   1d2ec:	svccc	0x00b99999
   1d2f0:	andeq	r1, r4, r0, ror sp
   1d2f4:	andeq	r2, r4, r0, lsl r9
   1d2f8:	muleq	r1, r0, r6
   1d2fc:			; <UNDEFINED> instruction: 0x000454b8
   1d300:	strdeq	pc, [r2], -ip
   1d304:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d308:	vpush	{d8-d11}
   1d30c:	ldr	r8, [pc, #1316]	; 1d838 <floor@plt+0xc46c>
   1d310:	ldr	r2, [pc, #1316]	; 1d83c <floor@plt+0xc470>
   1d314:	mov	r4, r0
   1d318:	ldr	r3, [r8]
   1d31c:	sub	sp, sp, #140	; 0x8c
   1d320:	mov	r0, r3
   1d324:	ldr	r3, [r3]
   1d328:	ldr	r2, [r2]
   1d32c:	mov	r1, #0
   1d330:	str	r2, [sp, #132]	; 0x84
   1d334:	ldr	r3, [r3, #56]	; 0x38
   1d338:	ldr	r2, [r4, #48]	; 0x30
   1d33c:	blx	r3
   1d340:	ldr	sl, [r4, #120]	; 0x78
   1d344:	mov	r2, #0
   1d348:	mov	r3, #0
   1d34c:	cmp	sl, #0
   1d350:	add	fp, r4, #24
   1d354:	strd	r2, [sp, #80]	; 0x50
   1d358:	strd	r2, [sp, #88]	; 0x58
   1d35c:	beq	1d740 <floor@plt+0xc374>
   1d360:	add	r3, r4, #104	; 0x68
   1d364:	str	r3, [sp, #28]
   1d368:	ldm	r3, {r0, r1, r2, r3}
   1d36c:	add	r6, sp, #48	; 0x30
   1d370:	add	r9, r4, #88	; 0x58
   1d374:	ldrb	ip, [r4, #56]	; 0x38
   1d378:	stm	r6, {r0, r1, r2, r3}
   1d37c:	add	r7, sp, #64	; 0x40
   1d380:	ldm	r9, {r0, r1, r2, r3}
   1d384:	cmp	ip, #0
   1d388:	stm	r7, {r0, r1, r2, r3}
   1d38c:	beq	1d6b8 <floor@plt+0xc2ec>
   1d390:	vldr	d6, [r4, #64]	; 0x40
   1d394:	vldr	d7, [r4, #144]	; 0x90
   1d398:	vdiv.f64	d0, d6, d7
   1d39c:	vneg.f64	d0, d0
   1d3a0:	add	r3, sp, #32
   1d3a4:	add	r0, sp, #40	; 0x28
   1d3a8:	mov	r1, r3
   1d3ac:	str	r0, [sp, #16]
   1d3b0:	str	r3, [sp, #12]
   1d3b4:	bl	11264 <sincos@plt>
   1d3b8:	vldr	d11, [r4, #136]	; 0x88
   1d3bc:	vldr	d8, [r4, #96]	; 0x60
   1d3c0:	vldr	d5, [sp, #40]	; 0x28
   1d3c4:	vldr	d4, [sp, #32]
   1d3c8:	vldr	d10, [r4, #128]	; 0x80
   1d3cc:	vsub.f64	d8, d8, d11
   1d3d0:	vldr	d9, [r4, #88]	; 0x58
   1d3d4:	add	r5, sp, #80	; 0x50
   1d3d8:	cmp	sl, #0
   1d3dc:	vsub.f64	d9, d9, d10
   1d3e0:	vmul.f64	d6, d8, d5
   1d3e4:	vmul.f64	d7, d8, d4
   1d3e8:	vnmls.f64	d6, d9, d4
   1d3ec:	vmla.f64	d7, d9, d5
   1d3f0:	vadd.f64	d6, d6, d10
   1d3f4:	vadd.f64	d7, d7, d11
   1d3f8:	vstr	d6, [sp, #80]	; 0x50
   1d3fc:	vstr	d7, [sp, #88]	; 0x58
   1d400:	ldm	r5, {r0, r1, r2, r3}
   1d404:	stmne	r7, {r0, r1, r2, r3}
   1d408:	stmeq	r6, {r0, r1, r2, r3}
   1d40c:	add	r3, r4, #64	; 0x40
   1d410:	str	r3, [sp, #20]
   1d414:	ldr	r3, [r4, #80]	; 0x50
   1d418:	cmp	r3, #0
   1d41c:	beq	1d438 <floor@plt+0xc06c>
   1d420:	ldr	r0, [r8]
   1d424:	ldr	r2, [pc, #1044]	; 1d840 <floor@plt+0xc474>
   1d428:	ldr	r3, [r0]
   1d42c:	ldr	r3, [r3, #72]	; 0x48
   1d430:	cmp	r3, r2
   1d434:	bne	1d784 <floor@plt+0xc3b8>
   1d438:	vldr	d7, [r4, #40]	; 0x28
   1d43c:	vldr	d3, [pc, #996]	; 1d828 <floor@plt+0xc45c>
   1d440:	vldr	d4, [pc, #1000]	; 1d830 <floor@plt+0xc464>
   1d444:	vldr	d6, [r4, #144]	; 0x90
   1d448:	vabs.f64	d7, d7
   1d44c:	ldm	r5, {r0, r1, r2, r3}
   1d450:	cmp	sl, #0
   1d454:	add	r9, sp, #96	; 0x60
   1d458:	vdiv.f64	d5, d7, d3
   1d45c:	stm	r9, {r0, r1, r2, r3}
   1d460:	ldr	r1, [sp, #12]
   1d464:	ldr	r0, [sp, #16]
   1d468:	vmul.f64	d5, d5, d4
   1d46c:	vdiv.f64	d0, d5, d6
   1d470:	vnegne.f64	d0, d0
   1d474:	bl	11264 <sincos@plt>
   1d478:	vldr	d6, [sp, #40]	; 0x28
   1d47c:	vldr	d4, [sp, #32]
   1d480:	vldr	d7, [sp, #104]	; 0x68
   1d484:	ldr	r3, [r4, #48]	; 0x30
   1d488:	add	r2, sp, #112	; 0x70
   1d48c:	vmul.f64	d5, d4, d8
   1d490:	mov	r1, r2
   1d494:	vmul.f64	d8, d6, d8
   1d498:	str	r2, [sp, #24]
   1d49c:	str	r3, [sp]
   1d4a0:	add	r2, r4, #64	; 0x40
   1d4a4:	mov	r3, fp
   1d4a8:	mov	r0, r5
   1d4ac:	vmla.f64	d5, d6, d9
   1d4b0:	vldr	d6, [sp, #96]	; 0x60
   1d4b4:	vnmls.f64	d8, d4, d9
   1d4b8:	vadd.f64	d11, d5, d11
   1d4bc:	vadd.f64	d8, d8, d10
   1d4c0:	vsub.f64	d7, d11, d7
   1d4c4:	vstr	d11, [sp, #88]	; 0x58
   1d4c8:	vsub.f64	d6, d8, d6
   1d4cc:	vstr	d8, [sp, #80]	; 0x50
   1d4d0:	vstr	d7, [sp, #120]	; 0x78
   1d4d4:	vstr	d6, [sp, #112]	; 0x70
   1d4d8:	bl	1c8a4 <floor@plt+0xb4d8>
   1d4dc:	ldr	r3, [r8]
   1d4e0:	mov	r2, r9
   1d4e4:	mov	r0, r3
   1d4e8:	ldr	ip, [r3]
   1d4ec:	mov	r1, r5
   1d4f0:	str	fp, [sp]
   1d4f4:	mov	r3, #1
   1d4f8:	ldr	r9, [ip, #24]
   1d4fc:	blx	r9
   1d500:	ldrb	r3, [r4, #57]	; 0x39
   1d504:	cmp	r3, #0
   1d508:	beq	1d664 <floor@plt+0xc298>
   1d50c:	vldr	d6, [r4, #64]	; 0x40
   1d510:	vldr	d7, [r4, #144]	; 0x90
   1d514:	ldr	sl, [r4, #120]	; 0x78
   1d518:	cmp	sl, #0
   1d51c:	vdiv.f64	d0, d6, d7
   1d520:	beq	1d734 <floor@plt+0xc368>
   1d524:	ldr	r1, [sp, #12]
   1d528:	ldr	r0, [sp, #16]
   1d52c:	bl	11264 <sincos@plt>
   1d530:	vldr	d11, [r4, #136]	; 0x88
   1d534:	vldr	d8, [r4, #112]	; 0x70
   1d538:	vldr	d5, [sp, #40]	; 0x28
   1d53c:	vldr	d4, [sp, #32]
   1d540:	vldr	d10, [r4, #128]	; 0x80
   1d544:	vsub.f64	d8, d8, d11
   1d548:	vldr	d9, [r4, #104]	; 0x68
   1d54c:	cmp	sl, #0
   1d550:	vsub.f64	d9, d9, d10
   1d554:	vmul.f64	d6, d8, d5
   1d558:	vmul.f64	d7, d8, d4
   1d55c:	vnmls.f64	d6, d9, d4
   1d560:	vmla.f64	d7, d9, d5
   1d564:	vadd.f64	d6, d6, d10
   1d568:	vadd.f64	d7, d7, d11
   1d56c:	vstr	d6, [sp, #80]	; 0x50
   1d570:	vstr	d7, [sp, #88]	; 0x58
   1d574:	ldm	r5, {r0, r1, r2, r3}
   1d578:	stmne	r6, {r0, r1, r2, r3}
   1d57c:	stmeq	r7, {r0, r1, r2, r3}
   1d580:	ldr	r3, [r4, #80]	; 0x50
   1d584:	cmp	r3, #0
   1d588:	beq	1d5a4 <floor@plt+0xc1d8>
   1d58c:	ldr	r0, [r8]
   1d590:	ldr	r2, [pc, #680]	; 1d840 <floor@plt+0xc474>
   1d594:	ldr	r3, [r0]
   1d598:	ldr	r3, [r3, #72]	; 0x48
   1d59c:	cmp	r3, r2
   1d5a0:	bne	1d7d8 <floor@plt+0xc40c>
   1d5a4:	vldr	d7, [r4, #40]	; 0x28
   1d5a8:	vldr	d3, [pc, #632]	; 1d828 <floor@plt+0xc45c>
   1d5ac:	vldr	d4, [pc, #636]	; 1d830 <floor@plt+0xc464>
   1d5b0:	vldr	d6, [r4, #144]	; 0x90
   1d5b4:	vabs.f64	d7, d7
   1d5b8:	ldm	r5, {r0, r1, r2, r3}
   1d5bc:	add	r9, sp, #96	; 0x60
   1d5c0:	ldr	ip, [r4, #120]	; 0x78
   1d5c4:	vdiv.f64	d5, d7, d3
   1d5c8:	cmp	ip, #0
   1d5cc:	stm	r9, {r0, r1, r2, r3}
   1d5d0:	ldr	r1, [sp, #12]
   1d5d4:	ldr	r0, [sp, #16]
   1d5d8:	vmul.f64	d5, d5, d4
   1d5dc:	vdiv.f64	d0, d5, d6
   1d5e0:	vnegeq.f64	d0, d0
   1d5e4:	bl	11264 <sincos@plt>
   1d5e8:	vldr	d6, [sp, #40]	; 0x28
   1d5ec:	vldr	d4, [sp, #32]
   1d5f0:	vldr	d7, [sp, #104]	; 0x68
   1d5f4:	ldr	r3, [r4, #48]	; 0x30
   1d5f8:	mov	r0, r5
   1d5fc:	vmul.f64	d5, d4, d8
   1d600:	ldr	r2, [sp, #20]
   1d604:	vmul.f64	d8, d6, d8
   1d608:	ldr	r1, [sp, #24]
   1d60c:	str	r3, [sp]
   1d610:	mov	r3, fp
   1d614:	vmla.f64	d5, d6, d9
   1d618:	vldr	d6, [sp, #96]	; 0x60
   1d61c:	vnmls.f64	d8, d4, d9
   1d620:	vadd.f64	d11, d5, d11
   1d624:	vadd.f64	d8, d8, d10
   1d628:	vsub.f64	d7, d11, d7
   1d62c:	vstr	d11, [sp, #88]	; 0x58
   1d630:	vsub.f64	d6, d8, d6
   1d634:	vstr	d8, [sp, #80]	; 0x50
   1d638:	vstr	d7, [sp, #120]	; 0x78
   1d63c:	vstr	d6, [sp, #112]	; 0x70
   1d640:	bl	1c8a4 <floor@plt+0xb4d8>
   1d644:	ldr	r0, [r8]
   1d648:	mov	r1, r5
   1d64c:	mov	r2, r9
   1d650:	ldr	ip, [r0]
   1d654:	mov	r3, #1
   1d658:	str	fp, [sp]
   1d65c:	ldr	r5, [ip, #24]
   1d660:	blx	r5
   1d664:	ldr	r0, [r8]
   1d668:	add	r2, r4, #128	; 0x80
   1d66c:	mov	r3, r7
   1d670:	ldr	ip, [r0]
   1d674:	mov	r1, r6
   1d678:	str	fp, [sp]
   1d67c:	ldr	r4, [ip, #36]	; 0x24
   1d680:	blx	r4
   1d684:	ldr	r3, [r8]
   1d688:	mov	r0, r3
   1d68c:	ldr	r3, [r3]
   1d690:	ldr	r3, [r3, #60]	; 0x3c
   1d694:	blx	r3
   1d698:	ldr	r3, [pc, #412]	; 1d83c <floor@plt+0xc470>
   1d69c:	ldr	r2, [sp, #132]	; 0x84
   1d6a0:	ldr	r3, [r3]
   1d6a4:	cmp	r2, r3
   1d6a8:	bne	1d880 <floor@plt+0xc4b4>
   1d6ac:	add	sp, sp, #140	; 0x8c
   1d6b0:	vpop	{d8-d11}
   1d6b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d6b8:	ldrb	r3, [r4, #57]	; 0x39
   1d6bc:	cmp	r3, #0
   1d6c0:	beq	1d664 <floor@plt+0xc298>
   1d6c4:	add	r3, r4, #64	; 0x40
   1d6c8:	vldr	d6, [r4, #64]	; 0x40
   1d6cc:	vldr	d7, [r4, #144]	; 0x90
   1d6d0:	str	r3, [sp, #20]
   1d6d4:	add	r3, sp, #40	; 0x28
   1d6d8:	str	r3, [sp, #16]
   1d6dc:	add	r3, sp, #32
   1d6e0:	str	r3, [sp, #12]
   1d6e4:	add	r3, sp, #112	; 0x70
   1d6e8:	vdiv.f64	d0, d6, d7
   1d6ec:	add	r5, sp, #80	; 0x50
   1d6f0:	str	r3, [sp, #24]
   1d6f4:	b	1d524 <floor@plt+0xc158>
   1d6f8:	ldrb	r3, [r4, #57]	; 0x39
   1d6fc:	cmp	r3, #0
   1d700:	beq	1d664 <floor@plt+0xc298>
   1d704:	vldr	d6, [r4, #64]	; 0x40
   1d708:	vldr	d7, [r4, #144]	; 0x90
   1d70c:	add	r3, r4, #64	; 0x40
   1d710:	str	r3, [sp, #20]
   1d714:	add	r3, sp, #40	; 0x28
   1d718:	vdiv.f64	d0, d6, d7
   1d71c:	str	r3, [sp, #16]
   1d720:	add	r5, sp, #80	; 0x50
   1d724:	add	r3, sp, #32
   1d728:	str	r3, [sp, #12]
   1d72c:	add	r3, sp, #112	; 0x70
   1d730:	str	r3, [sp, #24]
   1d734:	vneg.f64	d0, d0
   1d738:	mov	sl, #0
   1d73c:	b	1d524 <floor@plt+0xc158>
   1d740:	add	r9, r4, #88	; 0x58
   1d744:	add	ip, r4, #104	; 0x68
   1d748:	ldm	r9, {r0, r1, r2, r3}
   1d74c:	mov	lr, ip
   1d750:	add	r6, sp, #48	; 0x30
   1d754:	str	ip, [sp, #28]
   1d758:	stm	r6, {r0, r1, r2, r3}
   1d75c:	add	r7, sp, #64	; 0x40
   1d760:	ldrb	ip, [r4, #56]	; 0x38
   1d764:	ldm	lr, {r0, r1, r2, r3}
   1d768:	cmp	ip, #0
   1d76c:	stm	r7, {r0, r1, r2, r3}
   1d770:	beq	1d6f8 <floor@plt+0xc32c>
   1d774:	vldr	d6, [r4, #64]	; 0x40
   1d778:	vldr	d7, [r4, #144]	; 0x90
   1d77c:	vdiv.f64	d0, d6, d7
   1d780:	b	1d3a0 <floor@plt+0xbfd4>
   1d784:	blx	r3
   1d788:	cmp	r0, #0
   1d78c:	beq	1d860 <floor@plt+0xc494>
   1d790:	vldr	d6, [r4, #96]	; 0x60
   1d794:	vldr	d7, [r4, #88]	; 0x58
   1d798:	vldr	d4, [sp, #88]	; 0x58
   1d79c:	vldr	d5, [sp, #80]	; 0x50
   1d7a0:	ldr	r3, [r4, #48]	; 0x30
   1d7a4:	add	r2, sp, #112	; 0x70
   1d7a8:	vsub.f64	d6, d6, d4
   1d7ac:	vsub.f64	d7, d7, d5
   1d7b0:	str	r2, [sp, #24]
   1d7b4:	str	r3, [sp]
   1d7b8:	mov	r1, r2
   1d7bc:	mov	r0, r9
   1d7c0:	mov	r3, fp
   1d7c4:	add	r2, r4, #64	; 0x40
   1d7c8:	vstr	d6, [sp, #120]	; 0x78
   1d7cc:	vstr	d7, [sp, #112]	; 0x70
   1d7d0:	bl	1c8a4 <floor@plt+0xb4d8>
   1d7d4:	b	1d500 <floor@plt+0xc134>
   1d7d8:	blx	r3
   1d7dc:	cmp	r0, #0
   1d7e0:	beq	1d844 <floor@plt+0xc478>
   1d7e4:	vldr	d6, [r4, #112]	; 0x70
   1d7e8:	vldr	d7, [r4, #104]	; 0x68
   1d7ec:	vldr	d4, [sp, #88]	; 0x58
   1d7f0:	vldr	d5, [sp, #80]	; 0x50
   1d7f4:	ldr	r3, [r4, #48]	; 0x30
   1d7f8:	ldr	r2, [sp, #20]
   1d7fc:	vsub.f64	d6, d6, d4
   1d800:	vsub.f64	d7, d7, d5
   1d804:	str	r3, [sp]
   1d808:	ldr	r1, [sp, #24]
   1d80c:	ldr	r0, [sp, #28]
   1d810:	mov	r3, fp
   1d814:	vstr	d6, [sp, #120]	; 0x78
   1d818:	vstr	d7, [sp, #112]	; 0x70
   1d81c:	bl	1c8a4 <floor@plt+0xb4d8>
   1d820:	b	1d664 <floor@plt+0xc298>
   1d824:	nop			; (mov r0, r0)
   1d828:	andeq	r0, r0, r0
   1d82c:	subsmi	r0, r2, r0
   1d830:	andeq	r0, r0, r0
   1d834:	svccc	0x00d00000
   1d838:	andeq	r2, r4, r0, lsl r9
   1d83c:	andeq	r1, r4, r0, ror sp
   1d840:	muleq	r1, r0, r6
   1d844:	vldr	d10, [r4, #128]	; 0x80
   1d848:	vldr	d9, [r4, #104]	; 0x68
   1d84c:	vldr	d11, [r4, #136]	; 0x88
   1d850:	vldr	d8, [r4, #112]	; 0x70
   1d854:	vsub.f64	d9, d9, d10
   1d858:	vsub.f64	d8, d8, d11
   1d85c:	b	1d5a4 <floor@plt+0xc1d8>
   1d860:	vldr	d10, [r4, #128]	; 0x80
   1d864:	vldr	d9, [r4, #88]	; 0x58
   1d868:	vldr	d11, [r4, #136]	; 0x88
   1d86c:	vldr	d8, [r4, #96]	; 0x60
   1d870:	ldr	sl, [r4, #120]	; 0x78
   1d874:	vsub.f64	d9, d9, d10
   1d878:	vsub.f64	d8, d8, d11
   1d87c:	b	1d438 <floor@plt+0xc06c>
   1d880:	bl	111e0 <__stack_chk_fail@plt>
   1d884:	ldr	r3, [r0, #24]
   1d888:	cmp	r3, #0
   1d88c:	bxeq	lr
   1d890:	b	1d304 <floor@plt+0xbf38>
   1d894:	ldr	r1, [pc, #12]	; 1d8a8 <floor@plt+0xc4dc>
   1d898:	mov	r2, #0
   1d89c:	str	r2, [r0, #8]
   1d8a0:	stm	r0, {r1, r2}
   1d8a4:	bx	lr
   1d8a8:	andeq	pc, r2, ip, asr r3	; <UNPREDICTABLE>
   1d8ac:	bx	lr
   1d8b0:	push	{r4, lr}
   1d8b4:	mov	r4, r0
   1d8b8:	bl	286b0 <_ZdlPv@@Base>
   1d8bc:	mov	r0, r4
   1d8c0:	pop	{r4, pc}
   1d8c4:	push	{r4, r5}
   1d8c8:	mov	r4, #0
   1d8cc:	mov	r5, #0
   1d8d0:	mov	r2, #1
   1d8d4:	strd	r4, [r0, #8]
   1d8d8:	strd	r4, [r0, #16]
   1d8dc:	strd	r4, [r0, #24]
   1d8e0:	strd	r4, [r0, #32]
   1d8e4:	str	r2, [r0]
   1d8e8:	pop	{r4, r5}
   1d8ec:	bx	lr
   1d8f0:	ldr	r3, [r0]
   1d8f4:	push	{r4, r5, lr}
   1d8f8:	cmp	r3, #0
   1d8fc:	mov	ip, r0
   1d900:	mov	lr, r1
   1d904:	beq	1d92c <floor@plt+0xc560>
   1d908:	ldm	r1, {r0, r1, r2, r3}
   1d90c:	add	r5, ip, #8
   1d910:	add	r4, ip, #24
   1d914:	stm	r5, {r0, r1, r2, r3}
   1d918:	mov	r5, #0
   1d91c:	ldm	lr, {r0, r1, r2, r3}
   1d920:	stm	r4, {r0, r1, r2, r3}
   1d924:	str	r5, [ip]
   1d928:	pop	{r4, r5, pc}
   1d92c:	vldr	d6, [r1]
   1d930:	vldr	d7, [r0, #8]
   1d934:	vldr	d5, [r0, #16]
   1d938:	vcmpe.f64	d6, d7
   1d93c:	vldr	d7, [r1, #8]
   1d940:	vmrs	APSR_nzcv, fpscr
   1d944:	vcmpe.f64	d7, d5
   1d948:	vstrmi	d6, [r0, #8]
   1d94c:	vldr	d5, [r0, #24]
   1d950:	vldrmi	d6, [r1]
   1d954:	vmrs	APSR_nzcv, fpscr
   1d958:	vcmpe.f64	d6, d5
   1d95c:	vstrmi	d7, [r0, #16]
   1d960:	vldrmi	d7, [r1, #8]
   1d964:	vmrs	APSR_nzcv, fpscr
   1d968:	vstrgt	d6, [r0, #24]
   1d96c:	vldr	d6, [r0, #32]
   1d970:	vcmpe.f64	d7, d6
   1d974:	vmrs	APSR_nzcv, fpscr
   1d978:	vstrgt	d7, [r0, #32]
   1d97c:	pop	{r4, r5, pc}
   1d980:	vldr	d4, [pc, #144]	; 1da18 <floor@plt+0xc64c>
   1d984:	vldr	d3, [r0, #80]	; 0x50
   1d988:	vldr	d5, [r0, #72]	; 0x48
   1d98c:	vldr	d6, [r0, #64]	; 0x40
   1d990:	vldr	d7, [r0, #56]	; 0x38
   1d994:	push	{r4, r5, r6, lr}
   1d998:	sub	sp, sp, #24
   1d99c:	vmls.f64	d6, d3, d4
   1d9a0:	ldr	r5, [pc, #120]	; 1da20 <floor@plt+0xc654>
   1d9a4:	vmls.f64	d7, d5, d4
   1d9a8:	mov	r4, r0
   1d9ac:	ldr	r3, [r5]
   1d9b0:	mov	r0, r1
   1d9b4:	mov	r6, r1
   1d9b8:	mov	r1, sp
   1d9bc:	str	r3, [sp, #20]
   1d9c0:	vstr	d6, [sp, #8]
   1d9c4:	vstr	d7, [sp]
   1d9c8:	bl	1d8f0 <floor@plt+0xc524>
   1d9cc:	vldr	d3, [r4, #80]	; 0x50
   1d9d0:	vldr	d6, [r4, #64]	; 0x40
   1d9d4:	vldr	d5, [r4, #72]	; 0x48
   1d9d8:	vldr	d7, [r4, #56]	; 0x38
   1d9dc:	mov	r1, sp
   1d9e0:	mov	r0, r6
   1d9e4:	vmla.f64	d6, d3, d4
   1d9e8:	vmla.f64	d7, d5, d4
   1d9ec:	vstr	d6, [sp, #8]
   1d9f0:	vstr	d7, [sp]
   1d9f4:	bl	1d8f0 <floor@plt+0xc524>
   1d9f8:	ldr	r2, [sp, #20]
   1d9fc:	ldr	r3, [r5]
   1da00:	cmp	r2, r3
   1da04:	bne	1da10 <floor@plt+0xc644>
   1da08:	add	sp, sp, #24
   1da0c:	pop	{r4, r5, r6, pc}
   1da10:	bl	111e0 <__stack_chk_fail@plt>
   1da14:	nop			; (mov r0, r0)
   1da18:	andeq	r0, r0, r0
   1da1c:	svccc	0x00e00000
   1da20:	andeq	r1, r4, r0, ror sp
   1da24:	push	{r4, r5, r6, lr}
   1da28:	mov	r5, r0
   1da2c:	mov	r4, r1
   1da30:	mov	r0, r1
   1da34:	add	r1, r5, #56	; 0x38
   1da38:	bl	1d8f0 <floor@plt+0xc524>
   1da3c:	add	r1, r5, #72	; 0x48
   1da40:	mov	r0, r4
   1da44:	pop	{r4, r5, r6, lr}
   1da48:	b	1d8f0 <floor@plt+0xc524>
   1da4c:	push	{r4, r5, r6, lr}
   1da50:	mov	r5, r0
   1da54:	mov	r6, r1
   1da58:	mov	r0, r1
   1da5c:	add	r1, r5, #88	; 0x58
   1da60:	bl	1d8f0 <floor@plt+0xc524>
   1da64:	ldr	r3, [r5, #124]	; 0x7c
   1da68:	cmp	r3, #0
   1da6c:	pople	{r4, r5, r6, pc}
   1da70:	mov	r4, #0
   1da74:	ldr	r1, [r5, #120]	; 0x78
   1da78:	mov	r0, r6
   1da7c:	add	r1, r1, r4, lsl #4
   1da80:	bl	1d8f0 <floor@plt+0xc524>
   1da84:	ldr	r3, [r5, #124]	; 0x7c
   1da88:	add	r4, r4, #1
   1da8c:	cmp	r3, r4
   1da90:	bgt	1da74 <floor@plt+0xc6a8>
   1da94:	pop	{r4, r5, r6, pc}
   1da98:	push	{r4, r5, r6, r7, r8, lr}
   1da9c:	mov	r6, r1
   1daa0:	ldr	r7, [pc, #224]	; 1db88 <floor@plt+0xc7bc>
   1daa4:	sub	sp, sp, #24
   1daa8:	add	r4, r0, #88	; 0x58
   1daac:	ldr	r3, [r7]
   1dab0:	mov	r8, r0
   1dab4:	mov	r1, r4
   1dab8:	mov	r0, r6
   1dabc:	str	r3, [sp, #20]
   1dac0:	bl	1d8f0 <floor@plt+0xc524>
   1dac4:	add	r1, r8, #104	; 0x68
   1dac8:	mov	r0, r6
   1dacc:	bl	1d8f0 <floor@plt+0xc524>
   1dad0:	ldr	r3, [r8, #124]	; 0x7c
   1dad4:	cmp	r3, #1
   1dad8:	ble	1db5c <floor@plt+0xc790>
   1dadc:	ldr	r3, [r8, #120]	; 0x78
   1dae0:	mov	r5, #1
   1dae4:	vldr	d4, [pc, #140]	; 1db78 <floor@plt+0xc7ac>
   1dae8:	vldr	d3, [pc, #144]	; 1db80 <floor@plt+0xc7b4>
   1daec:	b	1daf8 <floor@plt+0xc72c>
   1daf0:	ldr	r3, [r8, #120]	; 0x78
   1daf4:	add	r4, r3, r4
   1daf8:	vldr	d7, [r4]
   1dafc:	vldr	d6, [r4, #8]
   1db00:	lsl	r2, r5, #4
   1db04:	sub	r4, r2, #16
   1db08:	vmul.f64	d7, d7, d3
   1db0c:	add	r1, r3, r4
   1db10:	vmul.f64	d6, d6, d3
   1db14:	vldr	d1, [r1]
   1db18:	vldr	d0, [r1, #8]
   1db1c:	add	r3, r3, r2
   1db20:	mov	r1, sp
   1db24:	vldr	d5, [r3]
   1db28:	vldr	d2, [r3, #8]
   1db2c:	vmla.f64	d7, d1, d4
   1db30:	mov	r0, r6
   1db34:	vmla.f64	d6, d0, d4
   1db38:	add	r5, r5, #1
   1db3c:	vmla.f64	d7, d5, d3
   1db40:	vmla.f64	d6, d2, d3
   1db44:	vstr	d7, [sp]
   1db48:	vstr	d6, [sp, #8]
   1db4c:	bl	1d8f0 <floor@plt+0xc524>
   1db50:	ldr	r3, [r8, #124]	; 0x7c
   1db54:	cmp	r3, r5
   1db58:	bgt	1daf0 <floor@plt+0xc724>
   1db5c:	ldr	r2, [sp, #20]
   1db60:	ldr	r3, [r7]
   1db64:	cmp	r2, r3
   1db68:	bne	1db74 <floor@plt+0xc7a8>
   1db6c:	add	sp, sp, #24
   1db70:	pop	{r4, r5, r6, r7, r8, pc}
   1db74:	bl	111e0 <__stack_chk_fail@plt>
   1db78:	andeq	r0, r0, r0
   1db7c:	svccc	0x00e80000
   1db80:	andeq	r0, r0, r0
   1db84:	svccc	0x00c00000
   1db88:	andeq	r1, r4, r0, ror sp
   1db8c:	push	{r4, r5, r6, r7, lr}
   1db90:	vpush	{d8-d14}
   1db94:	ldr	r7, [pc, #556]	; 1ddc8 <floor@plt+0xc9fc>
   1db98:	mov	r6, r1
   1db9c:	mov	r5, r0
   1dba0:	ldr	r3, [r7]
   1dba4:	sub	sp, sp, #28
   1dba8:	add	r1, r0, #88	; 0x58
   1dbac:	mov	r0, r6
   1dbb0:	str	r3, [sp, #20]
   1dbb4:	bl	1d8f0 <floor@plt+0xc524>
   1dbb8:	add	r1, r5, #104	; 0x68
   1dbbc:	mov	r0, r6
   1dbc0:	bl	1d8f0 <floor@plt+0xc524>
   1dbc4:	vldr	d6, [r5, #136]	; 0x88
   1dbc8:	vldr	d13, [r5, #96]	; 0x60
   1dbcc:	vldr	d7, [r5, #128]	; 0x80
   1dbd0:	vldr	d10, [r5, #88]	; 0x58
   1dbd4:	vsub.f64	d13, d13, d6
   1dbd8:	vsub.f64	d10, d10, d7
   1dbdc:	vcmp.f64	d13, #0.0
   1dbe0:	vmrs	APSR_nzcv, fpscr
   1dbe4:	vcmp.f64	d10, #0.0
   1dbe8:	movne	r3, #0
   1dbec:	moveq	r3, #1
   1dbf0:	vmrs	APSR_nzcv, fpscr
   1dbf4:	movne	r3, #0
   1dbf8:	cmp	r3, #0
   1dbfc:	bne	1dd60 <floor@plt+0xc994>
   1dc00:	vldr	d12, [r5, #112]	; 0x70
   1dc04:	vldr	d11, [r5, #104]	; 0x68
   1dc08:	vsub.f64	d12, d12, d6
   1dc0c:	vsub.f64	d11, d11, d7
   1dc10:	vcmp.f64	d12, #0.0
   1dc14:	vmrs	APSR_nzcv, fpscr
   1dc18:	vcmp.f64	d11, #0.0
   1dc1c:	movne	r3, #0
   1dc20:	moveq	r3, #1
   1dc24:	vmrs	APSR_nzcv, fpscr
   1dc28:	movne	r3, #0
   1dc2c:	cmp	r3, #0
   1dc30:	bne	1dd60 <floor@plt+0xc994>
   1dc34:	vmov.f64	d1, d10
   1dc38:	vmov.f64	d0, d13
   1dc3c:	bl	11210 <atan2@plt>
   1dc40:	vldr	d14, [pc, #360]	; 1ddb0 <floor@plt+0xc9e4>
   1dc44:	vmov.f64	d1, d11
   1dc48:	vdiv.f64	d8, d0, d14
   1dc4c:	vmov.f64	d0, d12
   1dc50:	bl	11210 <atan2@plt>
   1dc54:	ldr	r3, [r5, #120]	; 0x78
   1dc58:	cmp	r3, #0
   1dc5c:	vdiv.f64	d9, d0, d14
   1dc60:	vmovne.f64	d7, d8
   1dc64:	vmoveq.f64	d7, d9
   1dc68:	vmovne.f64	d8, d9
   1dc6c:	vmov.f64	d9, d7
   1dc70:	vcmpe.f64	d8, #0.0
   1dc74:	vmrs	APSR_nzcv, fpscr
   1dc78:	vldrmi	d6, [pc, #312]	; 1ddb8 <floor@plt+0xc9ec>
   1dc7c:	vaddmi.f64	d8, d8, d6
   1dc80:	vcmpe.f64	d7, d8
   1dc84:	vmrs	APSR_nzcv, fpscr
   1dc88:	bhi	1dca0 <floor@plt+0xc8d4>
   1dc8c:	vldr	d7, [pc, #292]	; 1ddb8 <floor@plt+0xc9ec>
   1dc90:	vadd.f64	d9, d9, d7
   1dc94:	vcmpe.f64	d9, d8
   1dc98:	vmrs	APSR_nzcv, fpscr
   1dc9c:	bls	1dc90 <floor@plt+0xc8c4>
   1dca0:	vmov.f64	d1, d13
   1dca4:	vmov.f64	d0, d10
   1dca8:	bl	283a0 <floor@plt+0x16fd4>
   1dcac:	vmov.f64	d1, d12
   1dcb0:	vmov.f64	d10, d0
   1dcb4:	vmov.f64	d0, d11
   1dcb8:	bl	283a0 <floor@plt+0x16fd4>
   1dcbc:	vcvt.s32.f64	s15, d8
   1dcc0:	vmov	r4, s15
   1dcc4:	add	r4, r4, #1
   1dcc8:	vmov	s15, r4
   1dccc:	vcvt.f64.s32	d7, s15
   1dcd0:	vcmpe.f64	d10, d0
   1dcd4:	vmrs	APSR_nzcv, fpscr
   1dcd8:	vcmpe.f64	d7, d9
   1dcdc:	vmovle.f64	d10, d0
   1dce0:	vmrs	APSR_nzcv, fpscr
   1dce4:	bpl	1dd60 <floor@plt+0xc994>
   1dce8:	vldr	d4, [pc, #208]	; 1ddc0 <floor@plt+0xc9f4>
   1dcec:	vneg.f64	d3, d10
   1dcf0:	rsbs	r2, r4, #0
   1dcf4:	and	r2, r2, #3
   1dcf8:	and	r3, r4, #3
   1dcfc:	rsbpl	r3, r2, #0
   1dd00:	cmp	r3, #3
   1dd04:	ldrls	pc, [pc, r3, lsl #2]
   1dd08:	b	1dda4 <floor@plt+0xc9d8>
   1dd0c:	muleq	r1, r4, sp
   1dd10:	andeq	sp, r1, r8, lsl #27
   1dd14:	andeq	sp, r1, ip, ror sp
   1dd18:	andeq	sp, r1, ip, lsl sp
   1dd1c:	vmov.f64	d5, d3
   1dd20:	vmov.f64	d2, d4
   1dd24:	vldr	d6, [r5, #136]	; 0x88
   1dd28:	vldr	d7, [r5, #128]	; 0x80
   1dd2c:	add	r4, r4, #1
   1dd30:	mov	r1, sp
   1dd34:	vadd.f64	d6, d5, d6
   1dd38:	vadd.f64	d7, d7, d2
   1dd3c:	mov	r0, r6
   1dd40:	vstr	d6, [sp, #8]
   1dd44:	vstr	d7, [sp]
   1dd48:	bl	1d8f0 <floor@plt+0xc524>
   1dd4c:	vmov	s15, r4
   1dd50:	vcvt.f64.s32	d7, s15
   1dd54:	vcmpe.f64	d7, d9
   1dd58:	vmrs	APSR_nzcv, fpscr
   1dd5c:	bmi	1dcf0 <floor@plt+0xc924>
   1dd60:	ldr	r2, [sp, #20]
   1dd64:	ldr	r3, [r7]
   1dd68:	cmp	r2, r3
   1dd6c:	bne	1dda0 <floor@plt+0xc9d4>
   1dd70:	add	sp, sp, #28
   1dd74:	vpop	{d8-d14}
   1dd78:	pop	{r4, r5, r6, r7, pc}
   1dd7c:	vmov.f64	d2, d3
   1dd80:	vmov.f64	d5, d4
   1dd84:	b	1dd24 <floor@plt+0xc958>
   1dd88:	vmov.f64	d5, d10
   1dd8c:	vmov.f64	d2, d4
   1dd90:	b	1dd24 <floor@plt+0xc958>
   1dd94:	vmov.f64	d2, d10
   1dd98:	vmov.f64	d5, d4
   1dd9c:	b	1dd24 <floor@plt+0xc958>
   1dda0:	bl	111e0 <__stack_chk_fail@plt>
   1dda4:	vmov.f64	d5, d4
   1dda8:	vmov.f64	d2, d4
   1ddac:	b	1dd24 <floor@plt+0xc958>
   1ddb0:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   1ddb4:	svccc	0x00f921fb
   1ddb8:	andeq	r0, r0, r0
   1ddbc:	andsmi	r0, r0, r0
	...
   1ddc8:	andeq	r1, r4, r0, ror sp
   1ddcc:	mov	ip, r0
   1ddd0:	push	{r4, lr}
   1ddd4:	mov	lr, r0
   1ddd8:	str	r2, [ip], #8
   1dddc:	mov	r4, r3
   1dde0:	ldm	r1, {r0, r1, r2, r3}
   1dde4:	stm	ip, {r0, r1, r2, r3}
   1dde8:	mov	r0, lr
   1ddec:	str	r4, [lr, #24]
   1ddf0:	pop	{r4, pc}
   1ddf4:	push	{lr}		; (str lr, [sp, #-4]!)
   1ddf8:	mov	lr, #0
   1ddfc:	str	r1, [r0, #4]
   1de00:	strd	r2, [r0, #16]
   1de04:	str	lr, [r0]
   1de08:	str	lr, [r0, #8]
   1de0c:	str	lr, [r0, #12]
   1de10:	pop	{pc}		; (ldr pc, [sp], #4)
   1de14:	push	{r4, lr}
   1de18:	mov	r4, r0
   1de1c:	ldr	r0, [r0, #4]
   1de20:	cmp	r0, #0
   1de24:	beq	1de2c <floor@plt+0xca60>
   1de28:	bl	1121c <_ZdaPv@plt>
   1de2c:	mov	r0, r4
   1de30:	pop	{r4, pc}
   1de34:	push	{r4, r5}
   1de38:	mov	r4, #0
   1de3c:	mov	r5, #0
   1de40:	mov	r2, #0
   1de44:	strd	r4, [r0, #32]
   1de48:	strd	r4, [r0, #40]	; 0x28
   1de4c:	strd	r4, [r0, #48]	; 0x30
   1de50:	strd	r4, [r0, #56]	; 0x38
   1de54:	strd	r4, [r0, #64]	; 0x40
   1de58:	strd	r4, [r0, #72]	; 0x48
   1de5c:	strd	r4, [r0, #80]	; 0x50
   1de60:	strd	r4, [r0, #88]	; 0x58
   1de64:	strd	r4, [r0, #208]	; 0xd0
   1de68:	strd	r4, [r0, #216]	; 0xd8
   1de6c:	strd	r4, [r0, #136]	; 0x88
   1de70:	strd	r4, [r0, #128]	; 0x80
   1de74:	strd	r4, [r0, #176]	; 0xb0
   1de78:	strd	r4, [r0, #184]	; 0xb8
   1de7c:	str	r1, [r0, #4]
   1de80:	str	r2, [r0, #8]
   1de84:	str	r2, [r0, #12]
   1de88:	str	r2, [r0]
   1de8c:	str	r2, [r0, #16]
   1de90:	str	r2, [r0, #204]	; 0xcc
   1de94:	str	r2, [r0, #224]	; 0xe0
   1de98:	str	r2, [r0, #100]	; 0x64
   1de9c:	str	r2, [r0, #192]	; 0xc0
   1dea0:	str	r2, [r0, #196]	; 0xc4
   1dea4:	str	r2, [r0, #96]	; 0x60
   1dea8:	str	r2, [r0, #200]	; 0xc8
   1deac:	pop	{r4, r5}
   1deb0:	bx	lr
   1deb4:	push	{lr}		; (str lr, [sp, #-4]!)
   1deb8:	ldr	lr, [pc, #24]	; 1ded8 <floor@plt+0xcb0c>
   1debc:	str	r1, [r0, #12]
   1dec0:	mov	r1, #0
   1dec4:	strd	r2, [r0, #16]
   1dec8:	str	lr, [r0]
   1decc:	str	r1, [r0, #4]
   1ded0:	str	r1, [r0, #8]
   1ded4:	pop	{pc}		; (ldr pc, [sp], #4)
   1ded8:	muleq	r2, r8, r2
   1dedc:	push	{r4, r5, r6, lr}
   1dee0:	mov	r6, r0
   1dee4:	mov	r0, #24
   1dee8:	mov	r5, r1
   1deec:	mov	r4, r2
   1def0:	bl	28660 <_Znwj@@Base>
   1def4:	ldr	lr, [pc, #28]	; 1df18 <floor@plt+0xcb4c>
   1def8:	mov	ip, #0
   1defc:	str	r6, [r0, #12]
   1df00:	str	r5, [r0, #16]
   1df04:	str	r4, [r0, #20]
   1df08:	str	lr, [r0]
   1df0c:	str	ip, [r0, #4]
   1df10:	str	ip, [r0, #8]
   1df14:	pop	{r4, r5, r6, pc}
   1df18:	muleq	r2, r8, r2
   1df1c:	push	{r4, lr}
   1df20:	mov	r0, #12
   1df24:	bl	28660 <_Znwj@@Base>
   1df28:	ldr	r1, [pc, #12]	; 1df3c <floor@plt+0xcb70>
   1df2c:	mov	r2, #0
   1df30:	str	r2, [r0, #8]
   1df34:	stm	r0, {r1, r2}
   1df38:	pop	{r4, pc}
   1df3c:	andeq	pc, r2, r4, asr #7
   1df40:	ldr	r1, [pc, #12]	; 1df54 <floor@plt+0xcb88>
   1df44:	mov	r2, #0
   1df48:	str	r2, [r0, #8]
   1df4c:	stm	r0, {r1, r2}
   1df50:	bx	lr
   1df54:	andeq	pc, r2, r4, asr #7
   1df58:	mov	r2, #0
   1df5c:	str	r2, [r0]
   1df60:	str	r2, [r0, #4]
   1df64:	bx	lr
   1df68:	ldr	r3, [r0, #4]
   1df6c:	cmp	r3, #0
   1df70:	movne	r2, #0
   1df74:	streq	r3, [r1, #4]
   1df78:	streq	r3, [r1, #8]
   1df7c:	strne	r3, [r1, #4]
   1df80:	strne	r2, [r1, #8]
   1df84:	streq	r1, [r0, #4]
   1df88:	strne	r1, [r3, #8]
   1df8c:	streq	r1, [r0]
   1df90:	strne	r1, [r0, #4]
   1df94:	bx	lr
   1df98:	push	{r4, r5, r6, lr}
   1df9c:	ldr	r4, [r0, #4]
   1dfa0:	cmp	r4, #0
   1dfa4:	beq	1e024 <floor@plt+0xcc58>
   1dfa8:	mov	r5, r0
   1dfac:	mov	r6, r1
   1dfb0:	b	1dfc0 <floor@plt+0xcbf4>
   1dfb4:	ldr	r4, [r4, #4]
   1dfb8:	cmp	r4, #0
   1dfbc:	beq	1e024 <floor@plt+0xcc58>
   1dfc0:	ldr	r3, [r4]
   1dfc4:	mov	r0, r4
   1dfc8:	ldr	r3, [r3, #84]	; 0x54
   1dfcc:	blx	r3
   1dfd0:	cmp	r0, #11
   1dfd4:	bne	1dfb4 <floor@plt+0xcbe8>
   1dfd8:	ldr	r3, [r4, #8]
   1dfdc:	mov	r0, r4
   1dfe0:	cmp	r3, #0
   1dfe4:	movne	r2, #0
   1dfe8:	ldrne	r1, [r5, #4]
   1dfec:	str	r3, [r6]
   1dff0:	strne	r1, [r6, #4]
   1dff4:	streq	r3, [r6, #4]
   1dff8:	strne	r2, [r3, #4]
   1dffc:	ldr	r3, [r4, #4]
   1e000:	cmp	r3, #0
   1e004:	movne	r2, #0
   1e008:	str	r3, [r5, #4]
   1e00c:	streq	r3, [r5]
   1e010:	strne	r2, [r3, #8]
   1e014:	ldr	r3, [r4]
   1e018:	pop	{r4, r5, r6, lr}
   1e01c:	ldr	r3, [r3, #4]
   1e020:	bx	r3
   1e024:	ldr	r1, [pc, #16]	; 1e03c <floor@plt+0xcc70>
   1e028:	mov	r0, #520	; 0x208
   1e02c:	bl	26c88 <floor@plt+0x158bc>
   1e030:	mov	r3, #0
   1e034:	ldr	r3, [r3, #8]
   1e038:	udf	#0
   1e03c:	andeq	pc, r2, ip, ror fp	; <UNPREDICTABLE>
   1e040:	mov	r2, #0
   1e044:	mvn	r1, #0
   1e048:	str	r1, [r0, #16]
   1e04c:	str	r2, [r0]
   1e050:	str	r2, [r0, #12]
   1e054:	str	r2, [r0, #4]
   1e058:	str	r2, [r0, #8]
   1e05c:	bx	lr
   1e060:	push	{r4, lr}
   1e064:	mov	r4, r0
   1e068:	ldr	r0, [r0]
   1e06c:	bl	110e4 <free@plt>
   1e070:	mov	r0, r4
   1e074:	pop	{r4, pc}
   1e078:	push	{r4, r5}
   1e07c:	mov	r4, #0
   1e080:	ldr	r5, [pc, #56]	; 1e0c0 <floor@plt+0xccf4>
   1e084:	ldr	ip, [pc, #56]	; 1e0c4 <floor@plt+0xccf8>
   1e088:	mov	r2, #0
   1e08c:	mov	r1, #1
   1e090:	strd	r4, [r0, #40]	; 0x28
   1e094:	str	ip, [r0]
   1e098:	str	r1, [r0, #24]
   1e09c:	str	r2, [r0, #4]
   1e0a0:	str	r2, [r0, #8]
   1e0a4:	str	r2, [r0, #12]
   1e0a8:	str	r2, [r0, #16]
   1e0ac:	str	r2, [r0, #20]
   1e0b0:	str	r2, [r0, #48]	; 0x30
   1e0b4:	str	r2, [r0, #52]	; 0x34
   1e0b8:	pop	{r4, r5}
   1e0bc:	bx	lr
   1e0c0:	svccc	0x00f00000	; IMB
   1e0c4:	andeq	pc, r2, ip, lsr #8
   1e0c8:	mov	r3, #2
   1e0cc:	vstr	d0, [r0, #32]
   1e0d0:	str	r3, [r0, #24]
   1e0d4:	bx	lr
   1e0d8:	mov	r3, #3
   1e0dc:	vstr	d0, [r0, #32]
   1e0e0:	str	r3, [r0, #24]
   1e0e4:	bx	lr
   1e0e8:	vstr	d0, [r0, #40]	; 0x28
   1e0ec:	bx	lr
   1e0f0:	push	{r4, lr}
   1e0f4:	mov	r4, r0
   1e0f8:	mov	r0, r1
   1e0fc:	bl	291f4 <_ZdlPv@@Base+0xb44>
   1e100:	str	r0, [r4, #48]	; 0x30
   1e104:	pop	{r4, pc}
   1e108:	ldr	r0, [r0, #48]	; 0x30
   1e10c:	bx	lr
   1e110:	mov	r3, #0
   1e114:	str	r3, [r0, #24]
   1e118:	bx	lr
   1e11c:	push	{r4, r5, r6, r7, r8, lr}
   1e120:	subs	r4, r1, #0
   1e124:	mov	r7, r0
   1e128:	str	r2, [r0, #20]
   1e12c:	beq	1e208 <floor@plt+0xce3c>
   1e130:	mov	r3, r4
   1e134:	mov	r5, #0
   1e138:	b	1e140 <floor@plt+0xcd74>
   1e13c:	mov	r5, r6
   1e140:	ldr	r3, [r3]
   1e144:	add	r6, r5, #1
   1e148:	cmp	r3, #0
   1e14c:	bne	1e13c <floor@plt+0xcd70>
   1e150:	ldr	r3, [pc, #192]	; 1e218 <floor@plt+0xce4c>
   1e154:	sub	r5, r5, #1
   1e158:	cmp	r6, r3
   1e15c:	addle	r0, r6, r6, lsl #2
   1e160:	mvngt	r0, #0
   1e164:	lslle	r0, r0, #2
   1e168:	addle	r0, r0, #8
   1e16c:	bl	1115c <_Znaj@plt>
   1e170:	mov	r2, #0
   1e174:	mvn	r1, #0
   1e178:	mov	ip, #20
   1e17c:	add	lr, r0, #8
   1e180:	mov	r3, lr
   1e184:	str	r6, [r0, #4]
   1e188:	str	ip, [r0]
   1e18c:	sub	r5, r5, #1
   1e190:	cmn	r5, #2
   1e194:	str	r2, [r3]
   1e198:	str	r2, [r3, #12]
   1e19c:	str	r1, [r3, #16]
   1e1a0:	str	r2, [r3, #4]
   1e1a4:	str	r2, [r3, #8]
   1e1a8:	add	r3, r3, #20
   1e1ac:	bne	1e18c <floor@plt+0xcdc0>
   1e1b0:	mov	ip, #0
   1e1b4:	mov	r3, r0
   1e1b8:	mov	r6, ip
   1e1bc:	str	lr, [r7, #16]
   1e1c0:	ldr	r1, [r4, #4]
   1e1c4:	add	r2, r4, #8
   1e1c8:	str	r1, [r3, #8]
   1e1cc:	ldr	lr, [r4, #20]
   1e1d0:	ldm	r2, {r0, r1}
   1e1d4:	ldr	r5, [r4, #16]
   1e1d8:	str	r6, [r4, #4]
   1e1dc:	ldr	r4, [r4]
   1e1e0:	add	r2, r3, #12
   1e1e4:	cmp	r4, #0
   1e1e8:	stm	r2, {r0, r1}
   1e1ec:	add	ip, ip, #1
   1e1f0:	str	r5, [r3, #20]
   1e1f4:	str	lr, [r3, #24]
   1e1f8:	add	r3, r3, #20
   1e1fc:	bne	1e1c0 <floor@plt+0xcdf4>
   1e200:	str	ip, [r7, #12]
   1e204:	pop	{r4, r5, r6, r7, r8, pc}
   1e208:	mov	ip, r4
   1e20c:	str	r4, [r0, #16]
   1e210:	str	ip, [r7, #12]
   1e214:	pop	{r4, r5, r6, r7, r8, pc}
   1e218:	strbteq	r6, [r6], -r6, ror #12
   1e21c:	ldr	r3, [r0, #16]
   1e220:	ldr	r2, [pc, #72]	; 1e270 <floor@plt+0xcea4>
   1e224:	cmp	r3, #0
   1e228:	push	{r4, r5, r6, lr}
   1e22c:	mov	r5, r0
   1e230:	str	r2, [r0]
   1e234:	beq	1e268 <floor@plt+0xce9c>
   1e238:	ldr	r4, [r3, #-4]
   1e23c:	add	r4, r4, r4, lsl #2
   1e240:	add	r4, r3, r4, lsl #2
   1e244:	cmp	r3, r4
   1e248:	beq	1e260 <floor@plt+0xce94>
   1e24c:	ldr	r0, [r4, #-20]!	; 0xffffffec
   1e250:	bl	110e4 <free@plt>
   1e254:	ldr	r3, [r5, #16]
   1e258:	cmp	r3, r4
   1e25c:	bne	1e24c <floor@plt+0xce80>
   1e260:	sub	r0, r4, #8
   1e264:	bl	1121c <_ZdaPv@plt>
   1e268:	mov	r0, r5
   1e26c:	pop	{r4, r5, r6, pc}
   1e270:	andeq	pc, r2, ip, lsr #8
   1e274:	push	{r4, r5, r6, lr}
   1e278:	mov	r5, r0
   1e27c:	ldr	r4, [r0, #96]	; 0x60
   1e280:	ldr	r3, [pc, #120]	; 1e300 <floor@plt+0xcf34>
   1e284:	cmp	r4, #0
   1e288:	str	r3, [r0]
   1e28c:	beq	1e2a0 <floor@plt+0xced4>
   1e290:	mov	r0, r4
   1e294:	bl	11978 <floor@plt+0x5ac>
   1e298:	mov	r0, r4
   1e29c:	bl	286b0 <_ZdlPv@@Base>
   1e2a0:	ldr	r4, [r5, #88]	; 0x58
   1e2a4:	cmp	r4, #0
   1e2a8:	beq	1e2c8 <floor@plt+0xcefc>
   1e2ac:	ldr	r2, [r4]
   1e2b0:	mov	r0, r4
   1e2b4:	ldr	r4, [r4, #8]
   1e2b8:	ldr	r3, [r2, #4]
   1e2bc:	blx	r3
   1e2c0:	cmp	r4, #0
   1e2c4:	bne	1e2ac <floor@plt+0xcee0>
   1e2c8:	ldr	r3, [pc, #52]	; 1e304 <floor@plt+0xcf38>
   1e2cc:	mov	r0, r5
   1e2d0:	str	r3, [r5]
   1e2d4:	bl	1e21c <floor@plt+0xce50>
   1e2d8:	mov	r0, r5
   1e2dc:	pop	{r4, r5, r6, pc}
   1e2e0:	mov	r0, r4
   1e2e4:	bl	286b0 <_ZdlPv@@Base>
   1e2e8:	ldr	r3, [pc, #20]	; 1e304 <floor@plt+0xcf38>
   1e2ec:	mov	r0, r5
   1e2f0:	str	r3, [r5]
   1e2f4:	bl	1e21c <floor@plt+0xce50>
   1e2f8:	bl	111ec <__cxa_end_cleanup@plt>
   1e2fc:	b	1e2e8 <floor@plt+0xcf1c>
   1e300:	muleq	r2, r4, r5
   1e304:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   1e308:	push	{r4, lr}
   1e30c:	mov	r4, r0
   1e310:	bl	1e274 <floor@plt+0xcea8>
   1e314:	mov	r0, r4
   1e318:	bl	286b0 <_ZdlPv@@Base>
   1e31c:	mov	r0, r4
   1e320:	pop	{r4, pc}
   1e324:	mov	r0, r4
   1e328:	bl	286b0 <_ZdlPv@@Base>
   1e32c:	bl	111ec <__cxa_end_cleanup@plt>
   1e330:	push	{r4, lr}
   1e334:	mov	r4, r0
   1e338:	ldr	r0, [r0, #120]	; 0x78
   1e33c:	ldr	r3, [pc, #36]	; 1e368 <floor@plt+0xcf9c>
   1e340:	cmp	r0, #0
   1e344:	str	r3, [r4]
   1e348:	beq	1e350 <floor@plt+0xcf84>
   1e34c:	bl	1121c <_ZdaPv@plt>
   1e350:	ldr	r3, [pc, #20]	; 1e36c <floor@plt+0xcfa0>
   1e354:	mov	r0, r4
   1e358:	str	r3, [r4]
   1e35c:	bl	1e21c <floor@plt+0xce50>
   1e360:	mov	r0, r4
   1e364:	pop	{r4, pc}
   1e368:	andeq	pc, r2, r4, lsl #13
   1e36c:	andeq	pc, r2, ip, lsl #12
   1e370:	push	{r4, lr}
   1e374:	mov	r4, r0
   1e378:	bl	1e330 <floor@plt+0xcf64>
   1e37c:	mov	r0, r4
   1e380:	bl	286b0 <_ZdlPv@@Base>
   1e384:	mov	r0, r4
   1e388:	pop	{r4, pc}
   1e38c:	push	{r4, lr}
   1e390:	mov	r4, r0
   1e394:	bl	1e21c <floor@plt+0xce50>
   1e398:	mov	r0, r4
   1e39c:	bl	286b0 <_ZdlPv@@Base>
   1e3a0:	mov	r0, r4
   1e3a4:	pop	{r4, pc}
   1e3a8:	mov	ip, r0
   1e3ac:	mov	r2, #0
   1e3b0:	mov	r3, #0
   1e3b4:	mov	r0, #1
   1e3b8:	push	{r4, r5, r6, r7, lr}
   1e3bc:	mov	lr, #0
   1e3c0:	strd	r2, [ip, #56]	; 0x38
   1e3c4:	strd	r2, [ip, #64]	; 0x40
   1e3c8:	str	r0, [ip, #24]
   1e3cc:	ldm	r1, {r0, r1, r2, r3}
   1e3d0:	mov	r6, #0
   1e3d4:	ldr	r7, [pc, #48]	; 1e40c <floor@plt+0xd040>
   1e3d8:	ldr	r5, [pc, #48]	; 1e410 <floor@plt+0xd044>
   1e3dc:	add	r4, ip, #72	; 0x48
   1e3e0:	strd	r6, [ip, #40]	; 0x28
   1e3e4:	stm	ip, {r5, lr}
   1e3e8:	str	lr, [ip, #8]
   1e3ec:	str	lr, [ip, #12]
   1e3f0:	str	lr, [ip, #16]
   1e3f4:	str	lr, [ip, #20]
   1e3f8:	str	lr, [ip, #48]	; 0x30
   1e3fc:	str	lr, [ip, #52]	; 0x34
   1e400:	stm	r4, {r0, r1, r2, r3}
   1e404:	mov	r0, ip
   1e408:	pop	{r4, r5, r6, r7, pc}
   1e40c:	svccc	0x00f00000	; IMB
   1e410:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   1e414:	push	{r4, r5, r6, r8, r9, sl, fp, lr}
   1e418:	mov	r4, #0
   1e41c:	mov	r5, #0
   1e420:	mov	r3, #1
   1e424:	mov	ip, r0
   1e428:	strd	r4, [r0, #56]	; 0x38
   1e42c:	strd	r4, [r0, #64]	; 0x40
   1e430:	str	r3, [r0, #24]
   1e434:	add	r6, r0, #72	; 0x48
   1e438:	ldm	r1, {r0, r1, r2, r3}
   1e43c:	mov	sl, #0
   1e440:	ldr	fp, [pc, #76]	; 1e494 <floor@plt+0xd0c8>
   1e444:	mov	lr, #0
   1e448:	ldr	r9, [pc, #72]	; 1e498 <floor@plt+0xd0cc>
   1e44c:	mov	r8, #0
   1e450:	strd	sl, [ip, #40]	; 0x28
   1e454:	str	lr, [ip, #4]
   1e458:	str	lr, [ip, #8]
   1e45c:	str	lr, [ip, #12]
   1e460:	str	lr, [ip, #16]
   1e464:	str	lr, [ip, #20]
   1e468:	str	lr, [ip, #48]	; 0x30
   1e46c:	str	lr, [ip, #52]	; 0x34
   1e470:	stm	r6, {r0, r1, r2, r3}
   1e474:	mov	r0, ip
   1e478:	ldr	r3, [pc, #28]	; 1e49c <floor@plt+0xd0d0>
   1e47c:	strd	r4, [ip, #96]	; 0x60
   1e480:	strd	r4, [ip, #104]	; 0x68
   1e484:	str	lr, [ip, #112]	; 0x70
   1e488:	str	r3, [ip]
   1e48c:	strd	r8, [ip, #88]	; 0x58
   1e490:	pop	{r4, r5, r6, r8, r9, sl, fp, pc}
   1e494:	svccc	0x00f00000	; IMB
   1e498:	svclt	0x00f00000	; IMB
   1e49c:	andeq	pc, r2, r4, ror r7	; <UNPREDICTABLE>
   1e4a0:	push	{r4, r5, r6, r8, r9, lr}
   1e4a4:	mov	r4, #0
   1e4a8:	mov	r5, #0
   1e4ac:	mov	r3, #1
   1e4b0:	mov	ip, r0
   1e4b4:	strd	r4, [r0, #56]	; 0x38
   1e4b8:	strd	r4, [r0, #64]	; 0x40
   1e4bc:	str	r3, [r0, #24]
   1e4c0:	add	r6, r0, #72	; 0x48
   1e4c4:	ldm	r1, {r0, r1, r2, r3}
   1e4c8:	mov	r8, #0
   1e4cc:	ldr	r9, [pc, #120]	; 1e54c <floor@plt+0xd180>
   1e4d0:	mov	lr, #0
   1e4d4:	str	lr, [ip, #4]
   1e4d8:	strd	r8, [ip, #40]	; 0x28
   1e4dc:	str	lr, [ip, #8]
   1e4e0:	str	lr, [ip, #12]
   1e4e4:	str	lr, [ip, #16]
   1e4e8:	str	lr, [ip, #20]
   1e4ec:	str	lr, [ip, #48]	; 0x30
   1e4f0:	str	lr, [ip, #52]	; 0x34
   1e4f4:	stm	r6, {r0, r1, r2, r3}
   1e4f8:	vldr	d7, [ip, #72]	; 0x48
   1e4fc:	ldr	r3, [pc, #76]	; 1e550 <floor@plt+0xd184>
   1e500:	mov	r2, #0
   1e504:	ldr	r1, [pc, #72]	; 1e554 <floor@plt+0xd188>
   1e508:	vcmpe.f64	d7, #0.0
   1e50c:	vldr	d7, [ip, #80]	; 0x50
   1e510:	strd	r4, [ip, #96]	; 0x60
   1e514:	strd	r4, [ip, #104]	; 0x68
   1e518:	vmrs	APSR_nzcv, fpscr
   1e51c:	vcmpe.f64	d7, #0.0
   1e520:	str	lr, [ip, #112]	; 0x70
   1e524:	str	r1, [ip]
   1e528:	vnegle.f64	d6, d0
   1e52c:	vmovgt.f64	d6, d0
   1e530:	vmrs	APSR_nzcv, fpscr
   1e534:	strd	r2, [ip, #88]	; 0x58
   1e538:	mov	r0, ip
   1e53c:	vnegle.f64	d0, d0
   1e540:	vstr	d6, [ip, #120]	; 0x78
   1e544:	vstr	d0, [ip, #128]	; 0x80
   1e548:	pop	{r4, r5, r6, r8, r9, pc}
   1e54c:	svccc	0x00f00000	; IMB
   1e550:	svclt	0x00f00000	; IMB
   1e554:	andeq	pc, r2, ip, ror #15
   1e558:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e55c:	mov	r6, #0
   1e560:	mov	r7, #0
   1e564:	mov	ip, r0
   1e568:	strd	r6, [r0, #56]	; 0x38
   1e56c:	strd	r6, [r0, #64]	; 0x40
   1e570:	mov	r5, r2
   1e574:	mov	r8, r3
   1e578:	add	r4, r0, #72	; 0x48
   1e57c:	ldm	r1, {r0, r1, r2, r3}
   1e580:	mov	sl, #0
   1e584:	ldr	fp, [pc, #76]	; 1e5d8 <floor@plt+0xd20c>
   1e588:	mov	lr, #0
   1e58c:	mov	r6, #1
   1e590:	strd	sl, [ip, #40]	; 0x28
   1e594:	str	r6, [ip, #24]
   1e598:	str	lr, [ip, #4]
   1e59c:	str	lr, [ip, #8]
   1e5a0:	str	lr, [ip, #12]
   1e5a4:	str	lr, [ip, #16]
   1e5a8:	str	lr, [ip, #20]
   1e5ac:	str	lr, [ip, #48]	; 0x30
   1e5b0:	str	lr, [ip, #52]	; 0x34
   1e5b4:	stm	r4, {r0, r1, r2, r3}
   1e5b8:	mov	r3, ip
   1e5bc:	ldm	r5, {r0, r1}
   1e5c0:	ldr	r2, [pc, #20]	; 1e5dc <floor@plt+0xd210>
   1e5c4:	str	r2, [r3], #88	; 0x58
   1e5c8:	stm	r3, {r0, r1}
   1e5cc:	str	r8, [ip, #96]	; 0x60
   1e5d0:	mov	r0, ip
   1e5d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1e5d8:	svccc	0x00f00000	; IMB
   1e5dc:	muleq	r2, r4, r5
   1e5e0:	mov	ip, r0
   1e5e4:	mov	r2, #0
   1e5e8:	mov	r3, #0
   1e5ec:	mov	r0, #1
   1e5f0:	push	{r4, r5, r6, r7, lr}
   1e5f4:	mov	r6, #0
   1e5f8:	strd	r2, [ip, #56]	; 0x38
   1e5fc:	strd	r2, [ip, #64]	; 0x40
   1e600:	str	r0, [ip, #24]
   1e604:	ldm	r1, {r0, r1, r2, r3}
   1e608:	add	r4, ip, #72	; 0x48
   1e60c:	ldr	r7, [pc, #52]	; 1e648 <floor@plt+0xd27c>
   1e610:	ldr	r5, [pc, #52]	; 1e64c <floor@plt+0xd280>
   1e614:	mov	lr, #0
   1e618:	strd	r6, [ip, #40]	; 0x28
   1e61c:	str	lr, [ip, #4]
   1e620:	str	lr, [ip, #8]
   1e624:	str	lr, [ip, #12]
   1e628:	str	lr, [ip, #16]
   1e62c:	str	lr, [ip, #20]
   1e630:	str	lr, [ip, #48]	; 0x30
   1e634:	str	lr, [ip, #52]	; 0x34
   1e638:	stm	r4, {r0, r1, r2, r3}
   1e63c:	mov	r0, ip
   1e640:	str	r5, [ip]
   1e644:	pop	{r4, r5, r6, r7, pc}
   1e648:	svccc	0x00f00000	; IMB
   1e64c:	andeq	pc, r2, r8, lsr #3
   1e650:	push	{r4, r5, r6, r8, r9, sl, fp, lr}
   1e654:	mov	r4, #0
   1e658:	mov	r5, #0
   1e65c:	mov	r3, #1
   1e660:	mov	ip, r0
   1e664:	strd	r4, [r0, #56]	; 0x38
   1e668:	strd	r4, [r0, #64]	; 0x40
   1e66c:	str	r3, [r0, #24]
   1e670:	add	r6, r0, #72	; 0x48
   1e674:	ldm	r1, {r0, r1, r2, r3}
   1e678:	mov	sl, #0
   1e67c:	ldr	fp, [pc, #76]	; 1e6d0 <floor@plt+0xd304>
   1e680:	mov	lr, #0
   1e684:	ldr	r9, [pc, #72]	; 1e6d4 <floor@plt+0xd308>
   1e688:	mov	r8, #0
   1e68c:	strd	sl, [ip, #40]	; 0x28
   1e690:	str	lr, [ip, #4]
   1e694:	str	lr, [ip, #8]
   1e698:	str	lr, [ip, #12]
   1e69c:	str	lr, [ip, #16]
   1e6a0:	str	lr, [ip, #20]
   1e6a4:	str	lr, [ip, #48]	; 0x30
   1e6a8:	str	lr, [ip, #52]	; 0x34
   1e6ac:	stm	r6, {r0, r1, r2, r3}
   1e6b0:	mov	r0, ip
   1e6b4:	ldr	r3, [pc, #28]	; 1e6d8 <floor@plt+0xd30c>
   1e6b8:	strd	r4, [ip, #96]	; 0x60
   1e6bc:	strd	r4, [ip, #104]	; 0x68
   1e6c0:	str	lr, [ip, #112]	; 0x70
   1e6c4:	strd	r8, [ip, #88]	; 0x58
   1e6c8:	str	r3, [ip]
   1e6cc:	pop	{r4, r5, r6, r8, r9, sl, fp, pc}
   1e6d0:	svccc	0x00f00000	; IMB
   1e6d4:	svclt	0x00f00000	; IMB
   1e6d8:	andeq	pc, r2, r4, ror #16
   1e6dc:	push	{r4, r5, r6, r7, r8, r9}
   1e6e0:	mov	r2, #1
   1e6e4:	ldr	r9, [pc, #100]	; 1e750 <floor@plt+0xd384>
   1e6e8:	ldr	r7, [pc, #100]	; 1e754 <floor@plt+0xd388>
   1e6ec:	ldr	r1, [pc, #100]	; 1e758 <floor@plt+0xd38c>
   1e6f0:	mov	r4, #0
   1e6f4:	mov	r5, #0
   1e6f8:	mov	r8, #0
   1e6fc:	mov	r6, #0
   1e700:	str	r2, [r0, #24]
   1e704:	mov	r2, #0
   1e708:	strd	r8, [r0, #40]	; 0x28
   1e70c:	strd	r6, [r0, #88]	; 0x58
   1e710:	strd	r4, [r0, #56]	; 0x38
   1e714:	strd	r4, [r0, #64]	; 0x40
   1e718:	strd	r4, [r0, #96]	; 0x60
   1e71c:	strd	r4, [r0, #104]	; 0x68
   1e720:	vstr	d0, [r0, #72]	; 0x48
   1e724:	vstr	d0, [r0, #80]	; 0x50
   1e728:	stm	r0, {r1, r2}
   1e72c:	str	r2, [r0, #8]
   1e730:	str	r2, [r0, #12]
   1e734:	str	r2, [r0, #16]
   1e738:	str	r2, [r0, #20]
   1e73c:	str	r2, [r0, #48]	; 0x30
   1e740:	str	r2, [r0, #52]	; 0x34
   1e744:	str	r2, [r0, #112]	; 0x70
   1e748:	pop	{r4, r5, r6, r7, r8, r9}
   1e74c:	bx	lr
   1e750:	svccc	0x00f00000	; IMB
   1e754:	svclt	0x00f00000	; IMB
   1e758:	ldrdeq	pc, [r2], -ip
   1e75c:	push	{r4, r5, r6, r7, lr}
   1e760:	mov	ip, r0
   1e764:	ldr	r7, [pc, #88]	; 1e7c4 <floor@plt+0xd3f8>
   1e768:	mov	r5, r2
   1e76c:	mov	r6, #0
   1e770:	ldm	r1, {r0, r1, r2, r3}
   1e774:	mov	r4, ip
   1e778:	strd	r6, [ip, #40]	; 0x28
   1e77c:	mov	lr, #1
   1e780:	ldr	r6, [pc, #64]	; 1e7c8 <floor@plt+0xd3fc>
   1e784:	str	lr, [ip, #24]
   1e788:	mov	lr, #0
   1e78c:	str	lr, [ip, #4]
   1e790:	str	lr, [ip, #8]
   1e794:	str	lr, [ip, #12]
   1e798:	str	lr, [ip, #16]
   1e79c:	str	lr, [ip, #20]
   1e7a0:	str	lr, [ip, #48]	; 0x30
   1e7a4:	str	lr, [ip, #52]	; 0x34
   1e7a8:	str	r6, [r4], #56	; 0x38
   1e7ac:	stm	r4, {r0, r1, r2, r3}
   1e7b0:	add	lr, ip, #72	; 0x48
   1e7b4:	ldm	r5, {r0, r1, r2, r3}
   1e7b8:	stm	lr, {r0, r1, r2, r3}
   1e7bc:	mov	r0, ip
   1e7c0:	pop	{r4, r5, r6, r7, pc}
   1e7c4:	svccc	0x00f00000	; IMB
   1e7c8:	andeq	pc, r2, r4, lsr #9
   1e7cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e7d0:	vpush	{d8-d11}
   1e7d4:	ldr	r7, [pc, #528]	; 1e9ec <floor@plt+0xd620>
   1e7d8:	mov	r5, r0
   1e7dc:	mov	r6, r1
   1e7e0:	ldrb	r3, [r7]
   1e7e4:	mov	r4, r2
   1e7e8:	mcr	15, 0, r0, cr7, cr10, {5}
   1e7ec:	tst	r3, #1
   1e7f0:	beq	1e974 <floor@plt+0xd5a8>
   1e7f4:	ldr	r3, [r5]
   1e7f8:	ldr	r1, [r5, #200]	; 0xc8
   1e7fc:	tst	r3, #512	; 0x200
   1e800:	addne	r2, r5, #32
   1e804:	moveq	r2, r6
   1e808:	tst	r3, #128	; 0x80
   1e80c:	str	r1, [r4]
   1e810:	vldr	d11, [r2]
   1e814:	vldr	d10, [r2, #8]
   1e818:	bne	1e850 <floor@plt+0xd484>
   1e81c:	tst	r3, #256	; 0x100
   1e820:	beq	1e958 <floor@plt+0xd58c>
   1e824:	ldr	r3, [r7, #24]
   1e828:	cmp	r3, #0
   1e82c:	beq	1e958 <floor@plt+0xd58c>
   1e830:	ldr	r3, [pc, #440]	; 1e9f0 <floor@plt+0xd624>
   1e834:	add	r4, r5, #208	; 0xd0
   1e838:	ldm	r3, {r0, r1, r2, r3}
   1e83c:	stm	r4, {r0, r1, r2, r3}
   1e840:	b	1e854 <floor@plt+0xd488>
   1e844:	ldr	r1, [pc, #424]	; 1e9f4 <floor@plt+0xd628>
   1e848:	ldr	r0, [pc, #424]	; 1e9f8 <floor@plt+0xd62c>
   1e84c:	bl	26c88 <floor@plt+0x158bc>
   1e850:	add	r4, r5, #208	; 0xd0
   1e854:	mov	r0, #32
   1e858:	bl	28660 <_Znwj@@Base>
   1e85c:	mov	r8, #0
   1e860:	mov	ip, r0
   1e864:	ldm	r4, {r0, r1, r2, r3}
   1e868:	mov	lr, ip
   1e86c:	ldr	r4, [r5, #224]	; 0xe0
   1e870:	str	r4, [lr], #8
   1e874:	stm	lr, {r0, r1, r2, r3}
   1e878:	mov	r4, r8
   1e87c:	ldr	r3, [r5, #204]	; 0xcc
   1e880:	str	r8, [r5, #204]	; 0xcc
   1e884:	str	r3, [ip, #24]
   1e888:	b	1e898 <floor@plt+0xd4cc>
   1e88c:	mov	r4, ip
   1e890:	mov	ip, r3
   1e894:	ldr	r3, [r3, #24]
   1e898:	cmp	r3, #0
   1e89c:	str	r4, [ip, #24]
   1e8a0:	bne	1e88c <floor@plt+0xd4c0>
   1e8a4:	vmov.f64	d6, d10
   1e8a8:	vmov.f64	d7, d11
   1e8ac:	str	ip, [r5, #204]	; 0xcc
   1e8b0:	b	1e8c4 <floor@plt+0xd4f8>
   1e8b4:	vmov.f64	d6, d8
   1e8b8:	vmov.f64	d7, d9
   1e8bc:	mov	ip, r4
   1e8c0:	ldr	r4, [r4, #24]
   1e8c4:	ldr	r3, [ip]
   1e8c8:	vldr	d8, [ip, #16]
   1e8cc:	vldr	d9, [ip, #8]
   1e8d0:	cmp	r3, #0
   1e8d4:	vaddeq.f64	d8, d8, d6
   1e8d8:	vaddeq.f64	d9, d9, d7
   1e8dc:	cmp	r4, #0
   1e8e0:	bne	1e8b4 <floor@plt+0xd4e8>
   1e8e4:	vsub.f64	d6, d9, d11
   1e8e8:	vsub.f64	d7, d8, d10
   1e8ec:	mov	r5, #1
   1e8f0:	mov	r0, #88	; 0x58
   1e8f4:	str	r5, [r7, #24]
   1e8f8:	ldr	r9, [pc, #252]	; 1e9fc <floor@plt+0xd630>
   1e8fc:	mov	r8, #0
   1e900:	vstr	d6, [r7, #8]
   1e904:	vstr	d7, [r7, #16]
   1e908:	bl	28660 <_Znwj@@Base>
   1e90c:	vstr	d9, [r6]
   1e910:	vstr	d8, [r6, #8]
   1e914:	ldr	r2, [pc, #228]	; 1ea00 <floor@plt+0xd634>
   1e918:	vstr	d11, [r0, #56]	; 0x38
   1e91c:	vstr	d10, [r0, #64]	; 0x40
   1e920:	vstr	d9, [r0, #72]	; 0x48
   1e924:	vstr	d8, [r0, #80]	; 0x50
   1e928:	vpop	{d8-d11}
   1e92c:	str	r5, [r0, #24]
   1e930:	str	r4, [r0, #4]
   1e934:	str	r4, [r0, #8]
   1e938:	str	r4, [r0, #12]
   1e93c:	str	r4, [r0, #16]
   1e940:	str	r4, [r0, #20]
   1e944:	str	r4, [r0, #48]	; 0x30
   1e948:	str	r4, [r0, #52]	; 0x34
   1e94c:	strd	r8, [r0, #40]	; 0x28
   1e950:	str	r2, [r0]
   1e954:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e958:	cmp	r1, #3
   1e95c:	ldrls	pc, [pc, r1, lsl #2]
   1e960:	b	1e844 <floor@plt+0xd478>
   1e964:	ldrdeq	lr, [r1], -ip
   1e968:	andeq	lr, r1, ip, asr #19
   1e96c:			; <UNDEFINED> instruction: 0x0001e9b4
   1e970:	andeq	lr, r1, r0, lsr #19
   1e974:	mov	r0, r7
   1e978:	bl	11330 <__cxa_guard_acquire@plt>
   1e97c:	cmp	r0, #0
   1e980:	beq	1e7f4 <floor@plt+0xd428>
   1e984:	mov	r2, #0
   1e988:	mov	r3, #0
   1e98c:	mov	r0, r7
   1e990:	strd	r2, [r7, #8]
   1e994:	strd	r2, [r7, #16]
   1e998:	bl	11144 <__cxa_guard_release@plt>
   1e99c:	b	1e7f4 <floor@plt+0xd428>
   1e9a0:	vldr	d7, [r5, #136]	; 0x88
   1e9a4:	add	r4, r5, #208	; 0xd0
   1e9a8:	vneg.f64	d7, d7
   1e9ac:	vstr	d7, [r5, #216]	; 0xd8
   1e9b0:	b	1e854 <floor@plt+0xd488>
   1e9b4:	vldr	d7, [r5, #128]	; 0x80
   1e9b8:	mov	r4, r5
   1e9bc:	vneg.f64	d7, d7
   1e9c0:	vmov	r2, r3, d7
   1e9c4:	strd	r2, [r4, #208]!	; 0xd0
   1e9c8:	b	1e854 <floor@plt+0xd488>
   1e9cc:	ldrd	r2, [r5, #136]	; 0x88
   1e9d0:	add	r4, r5, #208	; 0xd0
   1e9d4:	strd	r2, [r5, #216]	; 0xd8
   1e9d8:	b	1e854 <floor@plt+0xd488>
   1e9dc:	ldrd	r2, [r5, #128]	; 0x80
   1e9e0:	mov	r4, r5
   1e9e4:	strd	r2, [r4, #208]!	; 0xd0
   1e9e8:	b	1e854 <floor@plt+0xd488>
   1e9ec:	andeq	r4, r4, r8, lsr #18
   1e9f0:	andeq	r4, r4, r0, lsr r9
   1e9f4:	andeq	pc, r2, ip, ror fp	; <UNPREDICTABLE>
   1e9f8:	andeq	r0, r0, r1, lsr #9
   1e9fc:	svccc	0x00f00000	; IMB
   1ea00:	andeq	pc, r2, r4, lsr #9
   1ea04:	mov	ip, r0
   1ea08:	push	{r4, r5, r6, r7, lr}
   1ea0c:	mov	lr, #0
   1ea10:	mov	r5, #1
   1ea14:	strh	lr, [r0, #56]	; 0x38
   1ea18:	mov	r4, r2
   1ea1c:	ldm	r1, {r0, r1, r2, r3}
   1ea20:	mov	r6, #0
   1ea24:	str	r5, [ip, #24]
   1ea28:	ldr	r5, [pc, #64]	; 1ea70 <floor@plt+0xd6a4>
   1ea2c:	ldr	r7, [pc, #64]	; 1ea74 <floor@plt+0xd6a8>
   1ea30:	str	r5, [ip]
   1ea34:	add	r5, ip, #88	; 0x58
   1ea38:	str	lr, [ip, #4]
   1ea3c:	str	lr, [ip, #8]
   1ea40:	str	lr, [ip, #12]
   1ea44:	str	lr, [ip, #16]
   1ea48:	str	lr, [ip, #20]
   1ea4c:	str	lr, [ip, #48]	; 0x30
   1ea50:	str	lr, [ip, #52]	; 0x34
   1ea54:	strd	r6, [ip, #40]	; 0x28
   1ea58:	stm	r5, {r0, r1, r2, r3}
   1ea5c:	add	lr, ip, #104	; 0x68
   1ea60:	ldm	r4, {r0, r1, r2, r3}
   1ea64:	stm	lr, {r0, r1, r2, r3}
   1ea68:	mov	r0, ip
   1ea6c:	pop	{r4, r5, r6, r7, pc}
   1ea70:	andeq	pc, r2, ip, lsl #12
   1ea74:	svccc	0x00f00000	; IMB
   1ea78:	push	{lr}		; (str lr, [sp, #-4]!)
   1ea7c:	mov	lr, r3
   1ea80:	strb	r1, [r0, #56]	; 0x38
   1ea84:	strb	r2, [r0, #57]	; 0x39
   1ea88:	mov	ip, r0
   1ea8c:	ldm	lr!, {r0, r1, r2, r3}
   1ea90:	add	ip, ip, #64	; 0x40
   1ea94:	stmia	ip!, {r0, r1, r2, r3}
   1ea98:	ldm	lr, {r0, r1}
   1ea9c:	stm	ip, {r0, r1}
   1eaa0:	pop	{pc}		; (ldr pc, [sp], #4)
   1eaa4:	push	{r4, r5, r6, r8, r9, lr}
   1eaa8:	mov	lr, #0
   1eaac:	strh	lr, [r0, #56]	; 0x38
   1eab0:	mov	ip, r0
   1eab4:	mov	r4, r2
   1eab8:	mov	r6, r3
   1eabc:	ldm	r1, {r0, r1, r2, r3}
   1eac0:	mov	r5, #1
   1eac4:	ldr	r9, [pc, #84]	; 1eb20 <floor@plt+0xd754>
   1eac8:	str	r5, [ip, #24]
   1eacc:	mov	r8, #0
   1ead0:	add	r5, ip, #88	; 0x58
   1ead4:	str	lr, [ip, #4]
   1ead8:	str	lr, [ip, #8]
   1eadc:	str	lr, [ip, #12]
   1eae0:	str	lr, [ip, #16]
   1eae4:	str	lr, [ip, #20]
   1eae8:	str	lr, [ip, #48]	; 0x30
   1eaec:	str	lr, [ip, #52]	; 0x34
   1eaf0:	strd	r8, [ip, #40]	; 0x28
   1eaf4:	stm	r5, {r0, r1, r2, r3}
   1eaf8:	add	lr, ip, #104	; 0x68
   1eafc:	ldm	r4, {r0, r1, r2, r3}
   1eb00:	ldr	r5, [pc, #28]	; 1eb24 <floor@plt+0xd758>
   1eb04:	ldr	r4, [sp, #24]
   1eb08:	stm	lr, {r0, r1, r2, r3}
   1eb0c:	mov	r0, ip
   1eb10:	str	r6, [ip, #120]	; 0x78
   1eb14:	str	r5, [ip]
   1eb18:	str	r4, [ip, #124]	; 0x7c
   1eb1c:	pop	{r4, r5, r6, r8, r9, pc}
   1eb20:	svccc	0x00f00000	; IMB
   1eb24:	andeq	pc, r2, r4, lsl #13
   1eb28:	push	{r4, r5, r6, r8, r9, lr}
   1eb2c:	mov	lr, #0
   1eb30:	strh	lr, [r0, #56]	; 0x38
   1eb34:	mov	ip, r0
   1eb38:	mov	r4, r2
   1eb3c:	mov	r6, r3
   1eb40:	ldm	r1, {r0, r1, r2, r3}
   1eb44:	mov	r5, #1
   1eb48:	ldr	r9, [pc, #84]	; 1eba4 <floor@plt+0xd7d8>
   1eb4c:	str	r5, [ip, #24]
   1eb50:	mov	r8, #0
   1eb54:	add	r5, ip, #88	; 0x58
   1eb58:	str	lr, [ip, #4]
   1eb5c:	str	lr, [ip, #8]
   1eb60:	str	lr, [ip, #12]
   1eb64:	str	lr, [ip, #16]
   1eb68:	str	lr, [ip, #20]
   1eb6c:	str	lr, [ip, #48]	; 0x30
   1eb70:	str	lr, [ip, #52]	; 0x34
   1eb74:	strd	r8, [ip, #40]	; 0x28
   1eb78:	stm	r5, {r0, r1, r2, r3}
   1eb7c:	add	lr, ip, #104	; 0x68
   1eb80:	ldm	r4, {r0, r1, r2, r3}
   1eb84:	ldr	r5, [sp, #24]
   1eb88:	ldr	r4, [pc, #24]	; 1eba8 <floor@plt+0xd7dc>
   1eb8c:	stm	lr, {r0, r1, r2, r3}
   1eb90:	mov	r0, ip
   1eb94:	str	r6, [ip, #120]	; 0x78
   1eb98:	str	r5, [ip, #124]	; 0x7c
   1eb9c:	str	r4, [ip]
   1eba0:	pop	{r4, r5, r6, r8, r9, pc}
   1eba4:	svccc	0x00f00000	; IMB
   1eba8:	andeq	pc, r2, r0, lsr #4
   1ebac:	push	{r4, r5, r6, r8, r9, lr}
   1ebb0:	mov	lr, #0
   1ebb4:	strh	lr, [r0, #56]	; 0x38
   1ebb8:	mov	ip, r0
   1ebbc:	mov	r4, r2
   1ebc0:	mov	r6, r3
   1ebc4:	ldm	r1, {r0, r1, r2, r3}
   1ebc8:	mov	r5, #1
   1ebcc:	ldr	r9, [pc, #84]	; 1ec28 <floor@plt+0xd85c>
   1ebd0:	str	r5, [ip, #24]
   1ebd4:	mov	r8, #0
   1ebd8:	add	r5, ip, #88	; 0x58
   1ebdc:	str	lr, [ip, #4]
   1ebe0:	str	lr, [ip, #8]
   1ebe4:	str	lr, [ip, #12]
   1ebe8:	str	lr, [ip, #16]
   1ebec:	str	lr, [ip, #20]
   1ebf0:	str	lr, [ip, #48]	; 0x30
   1ebf4:	str	lr, [ip, #52]	; 0x34
   1ebf8:	strd	r8, [ip, #40]	; 0x28
   1ebfc:	stm	r5, {r0, r1, r2, r3}
   1ec00:	add	lr, ip, #104	; 0x68
   1ec04:	ldm	r4, {r0, r1, r2, r3}
   1ec08:	ldr	r5, [sp, #24]
   1ec0c:	ldr	r4, [pc, #24]	; 1ec2c <floor@plt+0xd860>
   1ec10:	stm	lr, {r0, r1, r2, r3}
   1ec14:	mov	r0, ip
   1ec18:	str	r6, [ip, #120]	; 0x78
   1ec1c:	str	r5, [ip, #124]	; 0x7c
   1ec20:	str	r4, [ip]
   1ec24:	pop	{r4, r5, r6, r8, r9, pc}
   1ec28:	svccc	0x00f00000	; IMB
   1ec2c:	strdeq	pc, [r2], -ip
   1ec30:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ec34:	mov	ip, #0
   1ec38:	ldr	r7, [pc, #172]	; 1ecec <floor@plt+0xd920>
   1ec3c:	strh	ip, [r0, #56]	; 0x38
   1ec40:	mov	r4, r0
   1ec44:	mov	lr, r2
   1ec48:	mov	r5, r3
   1ec4c:	mov	r8, r1
   1ec50:	mov	r6, #0
   1ec54:	ldm	r2, {r0, r1, r2, r3}
   1ec58:	mov	r9, #1
   1ec5c:	strd	r6, [r4, #40]	; 0x28
   1ec60:	add	r6, r4, #88	; 0x58
   1ec64:	str	ip, [r4, #4]
   1ec68:	str	ip, [r4, #8]
   1ec6c:	str	ip, [r4, #12]
   1ec70:	str	ip, [r4, #16]
   1ec74:	str	ip, [r4, #20]
   1ec78:	str	ip, [r4, #48]	; 0x30
   1ec7c:	str	ip, [r4, #52]	; 0x34
   1ec80:	str	r9, [r4, #24]
   1ec84:	stm	r6, {r0, r1, r2, r3}
   1ec88:	add	r6, r4, #104	; 0x68
   1ec8c:	ldm	r5, {r0, r1, r2, r3}
   1ec90:	add	r5, r4, #128	; 0x80
   1ec94:	ldr	ip, [sp, #32]
   1ec98:	ldr	r7, [pc, #80]	; 1ecf0 <floor@plt+0xd924>
   1ec9c:	stm	r6, {r0, r1, r2, r3}
   1eca0:	str	r8, [r4, #120]	; 0x78
   1eca4:	str	r7, [r4]
   1eca8:	ldm	ip, {r0, r1, r2, r3}
   1ecac:	stm	r5, {r0, r1, r2, r3}
   1ecb0:	vldr	d1, [ip, #8]
   1ecb4:	vldr	d6, [lr, #8]
   1ecb8:	vldr	d0, [ip]
   1ecbc:	vldr	d7, [lr]
   1ecc0:	vsub.f64	d1, d1, d6
   1ecc4:	vsub.f64	d0, d0, d7
   1ecc8:	bl	283a0 <floor@plt+0x16fd4>
   1eccc:	vstr	d0, [r4, #144]	; 0x90
   1ecd0:	mov	r0, r4
   1ecd4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ecd8:	ldr	r3, [pc, #20]	; 1ecf4 <floor@plt+0xd928>
   1ecdc:	mov	r0, r4
   1ece0:	str	r3, [r4]
   1ece4:	bl	1e21c <floor@plt+0xce50>
   1ece8:	bl	111ec <__cxa_end_cleanup@plt>
   1ecec:	svccc	0x00f00000	; IMB
   1ecf0:	andeq	pc, r2, r4, asr r9	; <UNPREDICTABLE>
   1ecf4:	andeq	pc, r2, ip, lsl #12
   1ecf8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ecfc:	vpush	{d8-d10}
   1ed00:	ldr	r8, [pc, #616]	; 1ef70 <floor@plt+0xdba4>
   1ed04:	ldr	ip, [r0]
   1ed08:	mov	r5, r2
   1ed0c:	ldr	r3, [r8]
   1ed10:	sub	sp, sp, #80	; 0x50
   1ed14:	ands	sl, ip, #4
   1ed18:	movne	r9, #1
   1ed1c:	moveq	r9, #0
   1ed20:	tst	ip, #512	; 0x200
   1ed24:	ldr	r2, [r0, #200]	; 0xc8
   1ed28:	str	r3, [sp, #76]	; 0x4c
   1ed2c:	mov	r6, r1
   1ed30:	addne	r3, r0, #32
   1ed34:	mov	r4, r0
   1ed38:	str	r2, [r5]
   1ed3c:	ldmne	r3, {r0, r1, r2, r3}
   1ed40:	addne	r7, sp, #24
   1ed44:	ldmeq	r6, {r0, r1, r2, r3}
   1ed48:	addeq	r7, sp, #24
   1ed4c:	tst	ip, #16384	; 0x4000
   1ed50:	stm	r7, {r0, r1, r2, r3}
   1ed54:	beq	1ef18 <floor@plt+0xdb4c>
   1ed58:	tst	ip, #32768	; 0x8000
   1ed5c:	bne	1ee30 <floor@plt+0xda64>
   1ed60:	ldr	r3, [r4, #200]	; 0xc8
   1ed64:	cmp	sl, #0
   1ed68:	sub	r2, r3, #2
   1ed6c:	vldr	d7, [r4, #112]	; 0x70
   1ed70:	beq	1ef2c <floor@plt+0xdb60>
   1ed74:	cmp	r2, #1
   1ed78:	vnegls.f64	d4, d7
   1ed7c:	vmovhi.f64	d4, d7
   1ed80:	cmp	r3, #0
   1ed84:	cmpne	r3, #3
   1ed88:	add	r3, r3, #3
   1ed8c:	vnegeq.f64	d7, d7
   1ed90:	vldr	d5, [sp, #32]
   1ed94:	vldr	d6, [sp, #24]
   1ed98:	rsbs	r2, r3, #0
   1ed9c:	and	r2, r2, #3
   1eda0:	vadd.f64	d7, d7, d5
   1eda4:	vadd.f64	d6, d6, d4
   1eda8:	and	r3, r3, #3
   1edac:	rsbpl	r3, r2, #0
   1edb0:	str	r3, [r5]
   1edb4:	add	r5, sp, #40	; 0x28
   1edb8:	vstr	d7, [sp, #48]	; 0x30
   1edbc:	vstr	d6, [sp, #40]	; 0x28
   1edc0:	mov	r2, #0
   1edc4:	mov	r3, #0
   1edc8:	tst	ip, #1024	; 0x400
   1edcc:	strd	r2, [sp, #56]	; 0x38
   1edd0:	strd	r2, [sp, #64]	; 0x40
   1edd4:	beq	1ee44 <floor@plt+0xda78>
   1edd8:	add	r4, r4, #64	; 0x40
   1eddc:	add	sl, sp, #56	; 0x38
   1ede0:	ldm	r4, {r0, r1, r2, r3}
   1ede4:	stm	sl, {r0, r1, r2, r3}
   1ede8:	mov	r0, #152	; 0x98
   1edec:	bl	28660 <_Znwj@@Base>
   1edf0:	str	sl, [sp]
   1edf4:	mov	r2, r7
   1edf8:	mov	r1, r9
   1edfc:	mov	r3, r5
   1ee00:	mov	r4, r0
   1ee04:	bl	1ec30 <floor@plt+0xd864>
   1ee08:	ldm	r5, {r0, r1, r2, r3}
   1ee0c:	ldr	lr, [sp, #76]	; 0x4c
   1ee10:	ldr	ip, [r8]
   1ee14:	stm	r6, {r0, r1, r2, r3}
   1ee18:	cmp	lr, ip
   1ee1c:	mov	r0, r4
   1ee20:	bne	1ef4c <floor@plt+0xdb80>
   1ee24:	add	sp, sp, #80	; 0x50
   1ee28:	vpop	{d8-d10}
   1ee2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ee30:	add	r3, r4, #48	; 0x30
   1ee34:	add	r5, sp, #40	; 0x28
   1ee38:	ldm	r3, {r0, r1, r2, r3}
   1ee3c:	stm	r5, {r0, r1, r2, r3}
   1ee40:	b	1edc0 <floor@plt+0xd9f4>
   1ee44:	vldr	d9, [sp, #24]
   1ee48:	vldr	d7, [sp, #40]	; 0x28
   1ee4c:	vldr	d6, [sp, #32]
   1ee50:	vldr	d8, [sp, #48]	; 0x30
   1ee54:	vcmp.f64	d9, d7
   1ee58:	vmrs	APSR_nzcv, fpscr
   1ee5c:	bne	1ee78 <floor@plt+0xdaac>
   1ee60:	vcmp.f64	d6, d8
   1ee64:	vmrs	APSR_nzcv, fpscr
   1ee68:	ldmeq	r7, {r0, r1, r2, r3}
   1ee6c:	addeq	sl, sp, #56	; 0x38
   1ee70:	stmeq	sl, {r0, r1, r2, r3}
   1ee74:	beq	1ede8 <floor@plt+0xda1c>
   1ee78:	vsub.f64	d9, d7, d9
   1ee7c:	vsub.f64	d8, d8, d6
   1ee80:	vldr	d6, [pc, #216]	; 1ef60 <floor@plt+0xdb94>
   1ee84:	vmul.f64	d9, d9, d6
   1ee88:	vmul.f64	d8, d8, d6
   1ee8c:	vmov.f64	d0, d9
   1ee90:	vmov.f64	d1, d8
   1ee94:	bl	283a0 <floor@plt+0x16fd4>
   1ee98:	vldr	d7, [r4, #112]	; 0x70
   1ee9c:	vcmpe.f64	d7, #0.0
   1eea0:	vmrs	APSR_nzcv, fpscr
   1eea4:	vldrls	d7, [pc, #188]	; 1ef68 <floor@plt+0xdb9c>
   1eea8:	vstrls	d7, [r4, #112]	; 0x70
   1eeac:	vcmpe.f64	d0, d7
   1eeb0:	vmrs	APSR_nzcv, fpscr
   1eeb4:	vmovgt.f64	d7, d0
   1eeb8:	vstrgt	d0, [r4, #112]	; 0x70
   1eebc:	vdiv.f64	d0, d0, d7
   1eec0:	bl	1139c <acos@plt>
   1eec4:	vmov.f64	d1, d9
   1eec8:	vmov.f64	d10, d0
   1eecc:	vmov.f64	d0, d8
   1eed0:	bl	11210 <atan2@plt>
   1eed4:	cmp	sl, #0
   1eed8:	add	r1, sp, #8
   1eedc:	add	r0, sp, #16
   1eee0:	add	sl, sp, #56	; 0x38
   1eee4:	vsubne.f64	d0, d0, d10
   1eee8:	vaddeq.f64	d0, d10, d0
   1eeec:	bl	11264 <sincos@plt>
   1eef0:	vldr	d5, [r4, #112]	; 0x70
   1eef4:	vldr	d3, [sp, #16]
   1eef8:	vldr	d6, [sp, #32]
   1eefc:	vldr	d4, [sp, #8]
   1ef00:	vldr	d7, [sp, #24]
   1ef04:	vmla.f64	d6, d3, d5
   1ef08:	vmla.f64	d7, d4, d5
   1ef0c:	vstr	d6, [sp, #64]	; 0x40
   1ef10:	vstr	d7, [sp, #56]	; 0x38
   1ef14:	b	1ede8 <floor@plt+0xda1c>
   1ef18:	add	r1, r4, #112	; 0x70
   1ef1c:	ldr	r0, [pc, #80]	; 1ef74 <floor@plt+0xdba8>
   1ef20:	bl	11ed0 <floor@plt+0xb04>
   1ef24:	ldr	ip, [r4]
   1ef28:	b	1ed58 <floor@plt+0xd98c>
   1ef2c:	sub	r1, r3, #1
   1ef30:	cmp	r1, #1
   1ef34:	add	r3, r3, #1
   1ef38:	vnegls.f64	d4, d7
   1ef3c:	vmovhi.f64	d4, d7
   1ef40:	cmp	r2, #1
   1ef44:	vnegls.f64	d7, d7
   1ef48:	b	1ed90 <floor@plt+0xd9c4>
   1ef4c:	bl	111e0 <__stack_chk_fail@plt>
   1ef50:	mov	r0, r4
   1ef54:	bl	286b0 <_ZdlPv@@Base>
   1ef58:	bl	111ec <__cxa_end_cleanup@plt>
   1ef5c:	nop			; (mov r0, r0)
   1ef60:	andeq	r0, r0, r0
   1ef64:	svccc	0x00e00000
   1ef68:	andeq	r0, r0, r0
   1ef6c:	svccc	0x00d00000
   1ef70:	andeq	r1, r4, r0, ror sp
   1ef74:	strdeq	lr, [r2], -r4
   1ef78:	mov	r2, #0
   1ef7c:	str	r1, [r0, #4]
   1ef80:	str	r2, [r0]
   1ef84:	bx	lr
   1ef88:	push	{r4, lr}
   1ef8c:	mov	r4, r0
   1ef90:	ldr	r0, [r0, #4]
   1ef94:	bl	110e4 <free@plt>
   1ef98:	mov	r0, r4
   1ef9c:	pop	{r4, pc}
   1efa0:	push	{r4, r5}
   1efa4:	sub	sp, sp, #8
   1efa8:	mov	ip, sp
   1efac:	mov	r3, r0
   1efb0:	stm	ip, {r1, r2}
   1efb4:	ldm	ip, {r0, r1}
   1efb8:	mov	r4, #0
   1efbc:	mov	r5, #0
   1efc0:	add	ip, r3, #16
   1efc4:	mov	r1, #0
   1efc8:	strd	r4, [r3]
   1efcc:	strd	r4, [r3, #8]
   1efd0:	stm	ip, {r0, r2}
   1efd4:	mov	r0, r3
   1efd8:	str	r1, [r3, #24]
   1efdc:	str	r1, [r3, #28]
   1efe0:	str	r1, [r3, #32]
   1efe4:	add	sp, sp, #8
   1efe8:	pop	{r4, r5}
   1efec:	bx	lr
   1eff0:	mov	r2, #0
   1eff4:	mov	r1, #1
   1eff8:	sub	sp, sp, #16
   1effc:	vstr	d0, [r0]
   1f000:	vstr	d1, [r0, #8]
   1f004:	str	r1, [r0, #32]
   1f008:	str	r2, [r0, #16]
   1f00c:	str	r2, [r0, #20]
   1f010:	str	r2, [r0, #24]
   1f014:	str	r2, [r0, #28]
   1f018:	add	sp, sp, #16
   1f01c:	bx	lr
   1f020:	push	{r4, r5, r6, r7, lr}
   1f024:	mov	r6, #0
   1f028:	mov	r7, #0
   1f02c:	mov	r4, r0
   1f030:	strd	r6, [r0]
   1f034:	strd	r6, [r0, #8]
   1f038:	sub	sp, sp, #12
   1f03c:	add	ip, r0, #16
   1f040:	mov	r0, #8
   1f044:	mov	r5, #0
   1f048:	mov	r6, r1
   1f04c:	add	r1, sp, r0
   1f050:	stm	ip, {r2, r3}
   1f054:	str	r5, [r4, #28]
   1f058:	str	r5, [r4, #32]
   1f05c:	stmdb	r1, {r2, r3}
   1f060:	bl	28660 <_Znwj@@Base>
   1f064:	str	r0, [r4, #24]
   1f068:	stm	r0, {r5, r6}
   1f06c:	mov	r0, r4
   1f070:	add	sp, sp, #12
   1f074:	pop	{r4, r5, r6, r7, pc}
   1f078:	push	{r4, r5, r6, lr}
   1f07c:	mov	r5, r0
   1f080:	ldr	r4, [r0, #24]
   1f084:	cmp	r4, #0
   1f088:	beq	1f0b0 <floor@plt+0xdce4>
   1f08c:	ldr	r3, [r4]
   1f090:	ldr	r0, [r4, #4]
   1f094:	str	r3, [r5, #24]
   1f098:	bl	110e4 <free@plt>
   1f09c:	mov	r0, r4
   1f0a0:	bl	286b0 <_ZdlPv@@Base>
   1f0a4:	ldr	r4, [r5, #24]
   1f0a8:	cmp	r4, #0
   1f0ac:	bne	1f08c <floor@plt+0xdcc0>
   1f0b0:	ldr	r4, [r5, #28]
   1f0b4:	cmp	r4, #0
   1f0b8:	beq	1f0cc <floor@plt+0xdd00>
   1f0bc:	mov	r0, r4
   1f0c0:	bl	1f078 <floor@plt+0xdcac>
   1f0c4:	mov	r0, r4
   1f0c8:	bl	286b0 <_ZdlPv@@Base>
   1f0cc:	mov	r0, r5
   1f0d0:	pop	{r4, r5, r6, pc}
   1f0d4:	mov	r0, r4
   1f0d8:	bl	286b0 <_ZdlPv@@Base>
   1f0dc:	bl	111ec <__cxa_end_cleanup@plt>
   1f0e0:	push	{r4, r5, r6, lr}
   1f0e4:	mov	r5, r0
   1f0e8:	ldr	r4, [r0, #16]
   1f0ec:	cmp	r4, #0
   1f0f0:	beq	1f114 <floor@plt+0xdd48>
   1f0f4:	mov	r0, r4
   1f0f8:	bl	11978 <floor@plt+0x5ac>
   1f0fc:	mov	r0, r4
   1f100:	bl	286b0 <_ZdlPv@@Base>
   1f104:	b	1f114 <floor@plt+0xdd48>
   1f108:	ldr	r3, [r0, #24]
   1f10c:	str	r3, [r5, #204]	; 0xcc
   1f110:	bl	286b0 <_ZdlPv@@Base>
   1f114:	ldr	r0, [r5, #204]	; 0xcc
   1f118:	cmp	r0, #0
   1f11c:	bne	1f108 <floor@plt+0xdd3c>
   1f120:	ldr	r0, [r5, #8]
   1f124:	cmp	r0, #0
   1f128:	beq	1f170 <floor@plt+0xdda4>
   1f12c:	ldr	r3, [r0]
   1f130:	ldr	r4, [r0, #8]
   1f134:	ldr	r3, [r3, #4]
   1f138:	blx	r3
   1f13c:	subs	r0, r4, #0
   1f140:	bne	1f12c <floor@plt+0xdd60>
   1f144:	ldr	r4, [r5, #100]	; 0x64
   1f148:	cmp	r4, #0
   1f14c:	beq	1f17c <floor@plt+0xddb0>
   1f150:	ldr	r0, [r4, #4]
   1f154:	ldr	r3, [r4]
   1f158:	cmp	r0, #0
   1f15c:	str	r3, [r5, #100]	; 0x64
   1f160:	beq	1f168 <floor@plt+0xdd9c>
   1f164:	bl	1121c <_ZdaPv@plt>
   1f168:	mov	r0, r4
   1f16c:	bl	286b0 <_ZdlPv@@Base>
   1f170:	ldr	r4, [r5, #100]	; 0x64
   1f174:	cmp	r4, #0
   1f178:	bne	1f150 <floor@plt+0xdd84>
   1f17c:	ldr	r4, [r5, #96]	; 0x60
   1f180:	cmp	r4, #0
   1f184:	beq	1f198 <floor@plt+0xddcc>
   1f188:	mov	r0, r4
   1f18c:	bl	1f078 <floor@plt+0xdcac>
   1f190:	mov	r0, r4
   1f194:	bl	286b0 <_ZdlPv@@Base>
   1f198:	ldr	r0, [r5, #192]	; 0xc0
   1f19c:	cmp	r0, #0
   1f1a0:	beq	1f1a8 <floor@plt+0xdddc>
   1f1a4:	bl	1121c <_ZdaPv@plt>
   1f1a8:	ldr	r0, [r5, #196]	; 0xc4
   1f1ac:	cmp	r0, #0
   1f1b0:	beq	1f1b8 <floor@plt+0xddec>
   1f1b4:	bl	1121c <_ZdaPv@plt>
   1f1b8:	mov	r0, r5
   1f1bc:	pop	{r4, r5, r6, pc}
   1f1c0:	mov	r0, r4
   1f1c4:	bl	286b0 <_ZdlPv@@Base>
   1f1c8:	bl	111ec <__cxa_end_cleanup@plt>
   1f1cc:	b	1f1c0 <floor@plt+0xddf4>
   1f1d0:	push	{r4, r5, lr}
   1f1d4:	sub	sp, sp, #12
   1f1d8:	ldr	r3, [r0, #16]
   1f1dc:	mov	r5, sp
   1f1e0:	cmp	r3, #0
   1f1e4:	mov	r4, r0
   1f1e8:	stm	r5, {r1, r2}
   1f1ec:	beq	1f210 <floor@plt+0xde44>
   1f1f0:	ldr	r1, [pc, #40]	; 1f220 <floor@plt+0xde54>
   1f1f4:	ldr	r0, [pc, #40]	; 1f224 <floor@plt+0xde58>
   1f1f8:	bl	26c88 <floor@plt+0x158bc>
   1f1fc:	ldm	r5, {r0, r1}
   1f200:	add	r4, r4, #16
   1f204:	stm	r4, {r0, r1}
   1f208:	add	sp, sp, #12
   1f20c:	pop	{r4, r5, pc}
   1f210:	ldr	r3, [r0, #20]
   1f214:	tst	r3, #1
   1f218:	beq	1f1fc <floor@plt+0xde30>
   1f21c:	b	1f1f0 <floor@plt+0xde24>
   1f220:	andeq	pc, r2, ip, ror fp	; <UNPREDICTABLE>
   1f224:	ldrdeq	r0, [r0], -r4
   1f228:	ldr	r2, [r0, #24]
   1f22c:	push	{r4, r5, r6, lr}
   1f230:	cmp	r2, #0
   1f234:	mov	r5, r1
   1f238:	bne	1f244 <floor@plt+0xde78>
   1f23c:	b	1f26c <floor@plt+0xdea0>
   1f240:	mov	r2, r3
   1f244:	ldr	r3, [r2]
   1f248:	cmp	r3, #0
   1f24c:	bne	1f240 <floor@plt+0xde74>
   1f250:	mov	r4, r2
   1f254:	mov	r0, #8
   1f258:	bl	28660 <_Znwj@@Base>
   1f25c:	mov	r3, #0
   1f260:	stm	r0, {r3, r5}
   1f264:	str	r0, [r4]
   1f268:	pop	{r4, r5, r6, pc}
   1f26c:	add	r4, r0, #24
   1f270:	b	1f254 <floor@plt+0xde88>
   1f274:	str	r1, [r0, #28]
   1f278:	bx	lr
   1f27c:	push	{lr}		; (str lr, [sp, #-4]!)
   1f280:	ldr	lr, [r0, #32]
   1f284:	cmp	lr, #0
   1f288:	bne	1f294 <floor@plt+0xdec8>
   1f28c:	pop	{lr}		; (ldr lr, [sp], #4)
   1f290:	b	1f2bc <floor@plt+0xdef0>
   1f294:	mov	r3, r0
   1f298:	mov	ip, r2
   1f29c:	ldrd	r0, [r0]
   1f2a0:	ldrd	r2, [r3, #8]
   1f2a4:	mov	lr, #0
   1f2a8:	strd	r0, [ip, #8]
   1f2ac:	str	lr, [ip]
   1f2b0:	strd	r2, [ip, #16]
   1f2b4:	mov	r0, #1
   1f2b8:	pop	{pc}		; (ldr pc, [sp], #4)
   1f2bc:	push	{r4, r5, r6, r7, r8, lr}
   1f2c0:	sub	sp, sp, #32
   1f2c4:	ldr	r5, [pc, #364]	; 1f438 <floor@plt+0xe06c>
   1f2c8:	ldr	r4, [r0, #24]
   1f2cc:	mov	r6, r0
   1f2d0:	ldr	r3, [r5]
   1f2d4:	cmp	r4, #0
   1f2d8:	mov	r7, r1
   1f2dc:	mov	r8, r2
   1f2e0:	str	r3, [sp, #28]
   1f2e4:	beq	1f364 <floor@plt+0xdf98>
   1f2e8:	ldr	r0, [r1]
   1f2ec:	cmp	r0, #0
   1f2f0:	bne	1f310 <floor@plt+0xdf44>
   1f2f4:	b	1f328 <floor@plt+0xdf5c>
   1f2f8:	ldr	r4, [r4]
   1f2fc:	cmp	r4, #0
   1f300:	beq	1f368 <floor@plt+0xdf9c>
   1f304:	ldr	r0, [r0]
   1f308:	cmp	r0, #0
   1f30c:	beq	1f328 <floor@plt+0xdf5c>
   1f310:	ldr	r3, [r0]
   1f314:	ldr	r1, [r4, #4]
   1f318:	ldr	r3, [r3, #68]	; 0x44
   1f31c:	blx	r3
   1f320:	cmp	r0, #0
   1f324:	bne	1f2f8 <floor@plt+0xdf2c>
   1f328:	ldr	r1, [r4, #4]
   1f32c:	mov	r0, sp
   1f330:	bl	27058 <floor@plt+0x15c8c>
   1f334:	ldr	r3, [pc, #256]	; 1f43c <floor@plt+0xe070>
   1f338:	ldr	r0, [pc, #256]	; 1f440 <floor@plt+0xe074>
   1f33c:	mov	r1, sp
   1f340:	mov	r2, r3
   1f344:	bl	17778 <floor@plt+0x63ac>
   1f348:	mov	r0, #0
   1f34c:	ldr	r2, [sp, #28]
   1f350:	ldr	r3, [r5]
   1f354:	cmp	r2, r3
   1f358:	bne	1f434 <floor@plt+0xe068>
   1f35c:	add	sp, sp, #32
   1f360:	pop	{r4, r5, r6, r7, r8, pc}
   1f364:	mov	r0, r1
   1f368:	ldr	r2, [r6, #16]
   1f36c:	cmp	r2, #0
   1f370:	beq	1f3f0 <floor@plt+0xe024>
   1f374:	ldr	r3, [r0]
   1f378:	cmp	r3, #0
   1f37c:	beq	1f40c <floor@plt+0xe040>
   1f380:	ldr	r0, [r6, #20]
   1f384:	tst	r0, #1
   1f388:	add	r0, r3, r0, asr #1
   1f38c:	bne	1f428 <floor@plt+0xe05c>
   1f390:	blx	r2
   1f394:	mov	r3, #0
   1f398:	str	r3, [r8]
   1f39c:	vstr	d0, [r8, #8]
   1f3a0:	vstr	d1, [r8, #16]
   1f3a4:	vstr	d0, [sp]
   1f3a8:	vstr	d1, [sp, #8]
   1f3ac:	ldr	r0, [r6, #28]
   1f3b0:	cmp	r0, #0
   1f3b4:	beq	1f3e8 <floor@plt+0xe01c>
   1f3b8:	mov	r1, r7
   1f3bc:	mov	r2, sp
   1f3c0:	bl	1f27c <floor@plt+0xdeb0>
   1f3c4:	cmp	r0, #0
   1f3c8:	beq	1f34c <floor@plt+0xdf80>
   1f3cc:	ldr	r3, [sp]
   1f3d0:	ldr	r2, [r8]
   1f3d4:	ldrd	r0, [sp, #16]
   1f3d8:	cmp	r2, r3
   1f3dc:	movne	r3, #0
   1f3e0:	strd	r0, [r8, #16]
   1f3e4:	strne	r3, [r8]
   1f3e8:	mov	r0, #1
   1f3ec:	b	1f34c <floor@plt+0xdf80>
   1f3f0:	ldr	r1, [r6, #20]
   1f3f4:	tst	r1, #1
   1f3f8:	beq	1f40c <floor@plt+0xe040>
   1f3fc:	ldr	r3, [r0]
   1f400:	cmp	r3, #0
   1f404:	addne	r0, r3, r1, asr #1
   1f408:	bne	1f428 <floor@plt+0xe05c>
   1f40c:	mov	ip, r0
   1f410:	mov	lr, r8
   1f414:	ldm	ip!, {r0, r1, r2, r3}
   1f418:	stmia	lr!, {r0, r1, r2, r3}
   1f41c:	ldm	ip, {r0, r1}
   1f420:	stm	lr, {r0, r1}
   1f424:	b	1f3ac <floor@plt+0xdfe0>
   1f428:	ldr	r3, [r0]
   1f42c:	ldr	r2, [r3, r2]
   1f430:	b	1f390 <floor@plt+0xdfc4>
   1f434:	bl	111e0 <__stack_chk_fail@plt>
   1f438:	andeq	r1, r4, r0, ror sp
   1f43c:			; <UNDEFINED> instruction: 0x000454b8
   1f440:	andeq	pc, r2, ip, lsr #24
   1f444:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1f448:	vpush	{d8-d9}
   1f44c:	ldr	r8, [pc, #612]	; 1f6b8 <floor@plt+0xe2ec>
   1f450:	mov	sl, #0
   1f454:	mov	fp, #0
   1f458:	sub	sp, sp, #88	; 0x58
   1f45c:	mov	r7, r0
   1f460:	ldr	r3, [r3]
   1f464:	ldr	r0, [r8]
   1f468:	str	r3, [r7, #200]	; 0xc8
   1f46c:	mov	r6, r1
   1f470:	mov	r5, r2
   1f474:	str	r0, [sp, #84]	; 0x54
   1f478:	strd	sl, [sp]
   1f47c:	strd	sl, [sp, #8]
   1f480:	cmp	r3, #3
   1f484:	ldrls	pc, [pc, r3, lsl #2]
   1f488:	b	1f690 <floor@plt+0xe2c4>
   1f48c:	andeq	pc, r1, r4, asr #10
   1f490:	andeq	pc, r1, ip, lsl r5	; <UNPREDICTABLE>
   1f494:	strdeq	pc, [r1], -r4
   1f498:	muleq	r1, ip, r4
   1f49c:	ldr	r3, [r1]
   1f4a0:	ldr	r2, [pc, #532]	; 1f6bc <floor@plt+0xe2f0>
   1f4a4:	ldr	r3, [r3, #20]
   1f4a8:	cmp	r3, r2
   1f4ac:	bne	1f65c <floor@plt+0xe290>
   1f4b0:	vldr	d0, [r1, #80]	; 0x50
   1f4b4:	vldr	d8, [pc, #492]	; 1f6a8 <floor@plt+0xe2dc>
   1f4b8:	ldr	ip, [r7]
   1f4bc:	vldr	d9, [pc, #492]	; 1f6b0 <floor@plt+0xe2e4>
   1f4c0:	tst	ip, #1024	; 0x400
   1f4c4:	vnmul.f64	d8, d0, d8
   1f4c8:	bne	1f574 <floor@plt+0xe1a8>
   1f4cc:	ldm	r5, {r0, r1, r2, r3}
   1f4d0:	mov	r4, sp
   1f4d4:	stm	r4, {r0, r1, r2, r3}
   1f4d8:	vldr	d6, [sp]
   1f4dc:	vldr	d7, [sp, #8]
   1f4e0:	vadd.f64	d6, d6, d9
   1f4e4:	vadd.f64	d7, d7, d8
   1f4e8:	vstr	d6, [sp]
   1f4ec:	vstr	d7, [sp, #8]
   1f4f0:	b	1f5e4 <floor@plt+0xe218>
   1f4f4:	ldr	r3, [r1]
   1f4f8:	ldr	r2, [pc, #448]	; 1f6c0 <floor@plt+0xe2f4>
   1f4fc:	ldr	r3, [r3, #12]
   1f500:	cmp	r3, r2
   1f504:	bne	1f668 <floor@plt+0xe29c>
   1f508:	vldr	d0, [r1, #72]	; 0x48
   1f50c:	vldr	d9, [pc, #404]	; 1f6a8 <floor@plt+0xe2dc>
   1f510:	vldr	d8, [pc, #408]	; 1f6b0 <floor@plt+0xe2e4>
   1f514:	vnmul.f64	d9, d0, d9
   1f518:	b	1f568 <floor@plt+0xe19c>
   1f51c:	ldr	r3, [r1]
   1f520:	ldr	r2, [pc, #404]	; 1f6bc <floor@plt+0xe2f0>
   1f524:	ldr	r3, [r3, #20]
   1f528:	cmp	r3, r2
   1f52c:	bne	1f674 <floor@plt+0xe2a8>
   1f530:	vldr	d0, [r1, #80]	; 0x50
   1f534:	vldr	d8, [pc, #364]	; 1f6a8 <floor@plt+0xe2dc>
   1f538:	vldr	d9, [pc, #368]	; 1f6b0 <floor@plt+0xe2e4>
   1f53c:	vmul.f64	d8, d0, d8
   1f540:	b	1f568 <floor@plt+0xe19c>
   1f544:	ldr	r3, [r1]
   1f548:	ldr	r2, [pc, #368]	; 1f6c0 <floor@plt+0xe2f4>
   1f54c:	ldr	r3, [r3, #12]
   1f550:	cmp	r3, r2
   1f554:	bne	1f680 <floor@plt+0xe2b4>
   1f558:	vldr	d0, [r1, #72]	; 0x48
   1f55c:	vldr	d9, [pc, #324]	; 1f6a8 <floor@plt+0xe2dc>
   1f560:	vldr	d8, [pc, #328]	; 1f6b0 <floor@plt+0xe2e4>
   1f564:	vmul.f64	d9, d0, d9
   1f568:	ldr	ip, [r7]
   1f56c:	tst	ip, #1024	; 0x400
   1f570:	beq	1f4cc <floor@plt+0xe100>
   1f574:	add	r3, r7, #64	; 0x40
   1f578:	mov	r4, sp
   1f57c:	ldm	r3, {r0, r1, r2, r3}
   1f580:	tst	ip, #2048	; 0x800
   1f584:	stm	r4, {r0, r1, r2, r3}
   1f588:	beq	1f5e4 <floor@plt+0xe218>
   1f58c:	ldr	r0, [r7, #96]	; 0x60
   1f590:	str	r6, [sp, #56]	; 0x38
   1f594:	ldr	r3, [r0, #32]
   1f598:	cmp	r3, #0
   1f59c:	bne	1f63c <floor@plt+0xe270>
   1f5a0:	add	r7, sp, #32
   1f5a4:	mov	r2, r7
   1f5a8:	add	r1, sp, #56	; 0x38
   1f5ac:	bl	1f2bc <floor@plt+0xdef0>
   1f5b0:	subs	ip, r0, #0
   1f5b4:	beq	1f61c <floor@plt+0xe250>
   1f5b8:	mov	r1, r7
   1f5bc:	add	r0, sp, #16
   1f5c0:	bl	1c680 <floor@plt+0xb2b4>
   1f5c4:	vldr	d6, [sp]
   1f5c8:	vldr	d7, [sp, #8]
   1f5cc:	vldr	d5, [sp, #16]
   1f5d0:	vldr	d4, [sp, #24]
   1f5d4:	vsub.f64	d6, d6, d5
   1f5d8:	vsub.f64	d7, d7, d4
   1f5dc:	vstr	d6, [sp]
   1f5e0:	vstr	d7, [sp, #8]
   1f5e4:	ldr	r3, [r6]
   1f5e8:	mov	r0, r6
   1f5ec:	mov	r1, r4
   1f5f0:	ldr	r3, [r3, #72]	; 0x48
   1f5f4:	blx	r3
   1f5f8:	vldr	d0, [sp]
   1f5fc:	vldr	d7, [sp, #8]
   1f600:	mov	ip, #1
   1f604:	vadd.f64	d0, d0, d9
   1f608:	vadd.f64	d8, d7, d8
   1f60c:	vstr	d0, [sp]
   1f610:	vstr	d8, [sp, #8]
   1f614:	ldm	r4, {r0, r1, r2, r3}
   1f618:	stm	r5, {r0, r1, r2, r3}
   1f61c:	mov	r0, ip
   1f620:	ldr	r2, [sp, #84]	; 0x54
   1f624:	ldr	r3, [r8]
   1f628:	cmp	r2, r3
   1f62c:	bne	1f68c <floor@plt+0xe2c0>
   1f630:	add	sp, sp, #88	; 0x58
   1f634:	vpop	{d8-d9}
   1f638:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1f63c:	ldrd	sl, [r0]
   1f640:	ldrd	r2, [r0, #8]
   1f644:	mov	r1, #0
   1f648:	str	r1, [sp, #32]
   1f64c:	strd	sl, [sp, #40]	; 0x28
   1f650:	strd	r2, [sp, #48]	; 0x30
   1f654:	add	r7, sp, #32
   1f658:	b	1f5b8 <floor@plt+0xe1ec>
   1f65c:	mov	r0, r1
   1f660:	blx	r3
   1f664:	b	1f4b4 <floor@plt+0xe0e8>
   1f668:	mov	r0, r1
   1f66c:	blx	r3
   1f670:	b	1f50c <floor@plt+0xe140>
   1f674:	mov	r0, r1
   1f678:	blx	r3
   1f67c:	b	1f534 <floor@plt+0xe168>
   1f680:	mov	r0, r1
   1f684:	blx	r3
   1f688:	b	1f55c <floor@plt+0xe190>
   1f68c:	bl	111e0 <__stack_chk_fail@plt>
   1f690:	vldr	d8, [pc, #24]	; 1f6b0 <floor@plt+0xe2e4>
   1f694:	ldr	r1, [pc, #40]	; 1f6c4 <floor@plt+0xe2f8>
   1f698:	mov	r0, #884	; 0x374
   1f69c:	bl	26c88 <floor@plt+0x158bc>
   1f6a0:	vmov.f64	d9, d8
   1f6a4:	b	1f568 <floor@plt+0xe19c>
   1f6a8:	andeq	r0, r0, r0
   1f6ac:	svccc	0x00e00000
	...
   1f6b8:	andeq	r1, r4, r0, ror sp
   1f6bc:	andeq	r0, r2, ip, lsl #22
   1f6c0:	andeq	r0, r2, r4, lsl #22
   1f6c4:	andeq	pc, r2, ip, ror fp	; <UNPREDICTABLE>
   1f6c8:	push	{r4, r5, r6, r7, r8, lr}
   1f6cc:	mov	r7, r1
   1f6d0:	ldr	r6, [pc, #464]	; 1f8a8 <floor@plt+0xe4dc>
   1f6d4:	ldr	r3, [r0]
   1f6d8:	sub	sp, sp, #24
   1f6dc:	ldr	r1, [r6]
   1f6e0:	tst	r3, #4096	; 0x1000
   1f6e4:	mov	r4, r0
   1f6e8:	mov	r8, r2
   1f6ec:	str	r1, [sp, #20]
   1f6f0:	beq	1f814 <floor@plt+0xe448>
   1f6f4:	ldr	r5, [pc, #432]	; 1f8ac <floor@plt+0xe4e0>
   1f6f8:	mov	r2, r3
   1f6fc:	tst	r3, #8192	; 0x2000
   1f700:	bne	1f728 <floor@plt+0xe35c>
   1f704:	tst	r3, #256	; 0x100
   1f708:	beq	1f718 <floor@plt+0xe34c>
   1f70c:	ldr	r2, [r5, #28]
   1f710:	cmp	r2, #0
   1f714:	bne	1f878 <floor@plt+0xe4ac>
   1f718:	add	r1, r4, #120	; 0x78
   1f71c:	ldr	r0, [pc, #396]	; 1f8b0 <floor@plt+0xe4e4>
   1f720:	bl	11ed0 <floor@plt+0xb04>
   1f724:	ldr	r2, [r4]
   1f728:	tst	r2, #16384	; 0x4000
   1f72c:	beq	1f7f0 <floor@plt+0xe424>
   1f730:	vldr	d7, [r4, #120]	; 0x78
   1f734:	vldr	d2, [r4, #112]	; 0x70
   1f738:	vabs.f64	d3, d2
   1f73c:	vabs.f64	d5, d7
   1f740:	vldr	d6, [r4, #104]	; 0x68
   1f744:	mov	r3, #1
   1f748:	vadd.f64	d4, d3, d3
   1f74c:	mov	r0, #136	; 0x88
   1f750:	vstr	d7, [r5, #40]	; 0x28
   1f754:	vstr	d2, [r5, #48]	; 0x30
   1f758:	vstr	d6, [r5, #32]
   1f75c:	str	r3, [r5, #28]
   1f760:	vstr	d7, [sp]
   1f764:	vstr	d6, [sp, #8]
   1f768:	vcmpe.f64	d4, d5
   1f76c:	vmrs	APSR_nzcv, fpscr
   1f770:	vldrgt	d5, [pc, #296]	; 1f8a0 <floor@plt+0xe4d4>
   1f774:	vstrle	d3, [r4, #112]	; 0x70
   1f778:	vmulgt.f64	d5, d7, d5
   1f77c:	vabsgt.f64	d5, d5
   1f780:	vaddgt.f64	d4, d5, d5
   1f784:	vstrgt	d5, [r4, #112]	; 0x70
   1f788:	vabs.f64	d5, d6
   1f78c:	vcmpe.f64	d5, d4
   1f790:	vmrs	APSR_nzcv, fpscr
   1f794:	vldrmi	d5, [pc, #260]	; 1f8a0 <floor@plt+0xe4d4>
   1f798:	vmulmi.f64	d5, d6, d5
   1f79c:	vabsmi.f64	d5, d5
   1f7a0:	vstrmi	d5, [r4, #112]	; 0x70
   1f7a4:	bl	28660 <_Znwj@@Base>
   1f7a8:	vldr	d0, [r4, #112]	; 0x70
   1f7ac:	mov	r1, sp
   1f7b0:	mov	r5, r0
   1f7b4:	bl	1e4a0 <floor@plt+0xd0d4>
   1f7b8:	mov	r3, r8
   1f7bc:	mov	r2, r7
   1f7c0:	mov	r1, r5
   1f7c4:	mov	r0, r4
   1f7c8:	bl	1f444 <floor@plt+0xe078>
   1f7cc:	subs	r3, r0, #0
   1f7d0:	beq	1f860 <floor@plt+0xe494>
   1f7d4:	ldr	r2, [sp, #20]
   1f7d8:	ldr	r3, [r6]
   1f7dc:	mov	r0, r5
   1f7e0:	cmp	r2, r3
   1f7e4:	bne	1f898 <floor@plt+0xe4cc>
   1f7e8:	add	sp, sp, #24
   1f7ec:	pop	{r4, r5, r6, r7, r8, pc}
   1f7f0:	tst	r2, #256	; 0x100
   1f7f4:	beq	1f804 <floor@plt+0xe438>
   1f7f8:	ldr	r3, [r5, #28]
   1f7fc:	cmp	r3, #0
   1f800:	bne	1f888 <floor@plt+0xe4bc>
   1f804:	add	r1, r4, #112	; 0x70
   1f808:	ldr	r0, [pc, #164]	; 1f8b4 <floor@plt+0xe4e8>
   1f80c:	bl	11ed0 <floor@plt+0xb04>
   1f810:	b	1f730 <floor@plt+0xe364>
   1f814:	tst	r3, #256	; 0x100
   1f818:	ldr	r5, [pc, #140]	; 1f8ac <floor@plt+0xe4e0>
   1f81c:	beq	1f848 <floor@plt+0xe47c>
   1f820:	ldr	r2, [r5, #28]
   1f824:	cmp	r2, #0
   1f828:	beq	1f848 <floor@plt+0xe47c>
   1f82c:	ldrd	r0, [r5, #32]
   1f830:	tst	r3, #8192	; 0x2000
   1f834:	strd	r0, [r4, #104]	; 0x68
   1f838:	beq	1f878 <floor@plt+0xe4ac>
   1f83c:	tst	r3, #16384	; 0x4000
   1f840:	bne	1f730 <floor@plt+0xe364>
   1f844:	b	1f7f8 <floor@plt+0xe42c>
   1f848:	add	r1, r4, #104	; 0x68
   1f84c:	ldr	r0, [pc, #100]	; 1f8b8 <floor@plt+0xe4ec>
   1f850:	bl	11ed0 <floor@plt+0xb04>
   1f854:	ldr	r3, [r4]
   1f858:	mov	r2, r3
   1f85c:	b	1f6fc <floor@plt+0xe330>
   1f860:	ldr	r2, [r5]
   1f864:	mov	r0, r5
   1f868:	mov	r5, r3
   1f86c:	ldr	r3, [r2, #4]
   1f870:	blx	r3
   1f874:	b	1f7d4 <floor@plt+0xe408>
   1f878:	vldr	d7, [r5, #40]	; 0x28
   1f87c:	tst	r3, #16384	; 0x4000
   1f880:	vstr	d7, [r4, #120]	; 0x78
   1f884:	bne	1f734 <floor@plt+0xe368>
   1f888:	vldr	d2, [r5, #48]	; 0x30
   1f88c:	vldr	d7, [r4, #120]	; 0x78
   1f890:	vstr	d2, [r4, #112]	; 0x70
   1f894:	b	1f738 <floor@plt+0xe36c>
   1f898:	bl	111e0 <__stack_chk_fail@plt>
   1f89c:	nop			; (mov r0, r0)
   1f8a0:	andeq	r0, r0, r0
   1f8a4:	svccc	0x00e00000
   1f8a8:	andeq	r1, r4, r0, ror sp
   1f8ac:	andeq	r4, r4, r8, lsr #18
   1f8b0:	andeq	lr, r2, ip, ror #14
   1f8b4:	andeq	lr, r2, r4, ror r7
   1f8b8:	andeq	lr, r2, r4, ror #14
   1f8bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f8c0:	vpush	{d8-d9}
   1f8c4:	ldr	r6, [pc, #516]	; 1fad0 <floor@plt+0xe704>
   1f8c8:	ldr	r4, [r0, #8]
   1f8cc:	mov	sl, #0
   1f8d0:	sub	sp, sp, #68	; 0x44
   1f8d4:	ldr	r3, [r6]
   1f8d8:	mov	fp, #0
   1f8dc:	str	r3, [sp, #60]	; 0x3c
   1f8e0:	cmp	r4, #0
   1f8e4:	mov	r3, #1
   1f8e8:	mov	r5, r0
   1f8ec:	mov	r7, r1
   1f8f0:	mov	r8, r2
   1f8f4:	strd	sl, [sp, #24]
   1f8f8:	strd	sl, [sp, #32]
   1f8fc:	strd	sl, [sp, #40]	; 0x28
   1f900:	strd	sl, [sp, #48]	; 0x30
   1f904:	str	r3, [sp, #16]
   1f908:	beq	1f9c0 <floor@plt+0xe5f4>
   1f90c:	ldr	r3, [r4]
   1f910:	mov	r0, r4
   1f914:	add	r1, sp, #16
   1f918:	ldr	r3, [r3, #80]	; 0x50
   1f91c:	blx	r3
   1f920:	ldr	r4, [r4, #8]
   1f924:	cmp	r4, #0
   1f928:	bne	1f90c <floor@plt+0xe540>
   1f92c:	ldr	r3, [sp, #16]
   1f930:	cmp	r3, #0
   1f934:	bne	1f9c0 <floor@plt+0xe5f4>
   1f938:	vldr	d5, [sp, #48]	; 0x30
   1f93c:	vldr	d6, [sp, #32]
   1f940:	vldr	d7, [sp, #24]
   1f944:	vldr	d4, [sp, #40]	; 0x28
   1f948:	ldr	r4, [r5, #8]
   1f94c:	vadd.f64	d6, d6, d5
   1f950:	vldr	d5, [pc, #352]	; 1fab8 <floor@plt+0xe6ec>
   1f954:	vadd.f64	d7, d7, d4
   1f958:	cmp	r4, #0
   1f95c:	mov	r9, sp
   1f960:	vnmul.f64	d6, d6, d5
   1f964:	vnmul.f64	d7, d7, d5
   1f968:	vstr	d6, [sp, #8]
   1f96c:	vstr	d7, [sp]
   1f970:	beq	1f994 <floor@plt+0xe5c8>
   1f974:	ldr	r3, [r4]
   1f978:	mov	r0, r4
   1f97c:	mov	r1, r9
   1f980:	ldr	r3, [r3, #72]	; 0x48
   1f984:	blx	r3
   1f988:	ldr	r4, [r4, #8]
   1f98c:	cmp	r4, #0
   1f990:	bne	1f974 <floor@plt+0xe5a8>
   1f994:	mov	r1, r9
   1f998:	add	r2, sp, #8
   1f99c:	ldr	r0, [r5, #16]
   1f9a0:	bl	1c0f8 <floor@plt+0xad2c>
   1f9a4:	vldr	d9, [sp, #40]	; 0x28
   1f9a8:	vldr	d6, [sp, #24]
   1f9ac:	vldr	d8, [sp, #48]	; 0x30
   1f9b0:	vldr	d7, [sp, #32]
   1f9b4:	vsub.f64	d9, d9, d6
   1f9b8:	vsub.f64	d8, d8, d7
   1f9bc:	b	1f9c8 <floor@plt+0xe5fc>
   1f9c0:	vldr	d8, [pc, #248]	; 1fac0 <floor@plt+0xe6f4>
   1f9c4:	vmov.f64	d9, d8
   1f9c8:	ldr	r3, [r5]
   1f9cc:	mov	r0, #104	; 0x68
   1f9d0:	tst	r3, #8192	; 0x2000
   1f9d4:	mov	sl, #0
   1f9d8:	vldrne	d9, [r5, #120]	; 0x78
   1f9dc:	tst	r3, #4096	; 0x1000
   1f9e0:	mov	fp, #0
   1f9e4:	vldrne	d8, [r5, #104]	; 0x68
   1f9e8:	bl	28660 <_Znwj@@Base>
   1f9ec:	add	r1, r5, #8
   1f9f0:	vldr	d7, [pc, #208]	; 1fac8 <floor@plt+0xe6fc>
   1f9f4:	mov	ip, #0
   1f9f8:	mov	r2, r7
   1f9fc:	ldr	r7, [pc, #208]	; 1fad4 <floor@plt+0xe708>
   1fa00:	mov	r3, r8
   1fa04:	mov	r4, r0
   1fa08:	mov	r0, #1
   1fa0c:	str	r0, [r4, #24]
   1fa10:	ldm	r1, {r0, r1}
   1fa14:	str	ip, [r4, #4]
   1fa18:	str	ip, [r4, #8]
   1fa1c:	str	ip, [r4, #12]
   1fa20:	str	ip, [r4, #16]
   1fa24:	str	ip, [r4, #20]
   1fa28:	str	ip, [r4, #48]	; 0x30
   1fa2c:	str	ip, [r4, #52]	; 0x34
   1fa30:	mov	lr, r4
   1fa34:	ldr	ip, [r5, #16]
   1fa38:	vstr	d9, [r4, #72]	; 0x48
   1fa3c:	vstr	d8, [r4, #80]	; 0x50
   1fa40:	vstr	d7, [r4, #40]	; 0x28
   1fa44:	strd	sl, [r4, #56]	; 0x38
   1fa48:	strd	sl, [r4, #64]	; 0x40
   1fa4c:	str	r7, [lr], #88	; 0x58
   1fa50:	stm	lr, {r0, r1}
   1fa54:	str	ip, [r4, #96]	; 0x60
   1fa58:	mov	r1, r4
   1fa5c:	mov	r0, r5
   1fa60:	bl	1f444 <floor@plt+0xe078>
   1fa64:	subs	r3, r0, #0
   1fa68:	beq	1fa9c <floor@plt+0xe6d0>
   1fa6c:	ldr	r1, [sp, #60]	; 0x3c
   1fa70:	ldr	r2, [r6]
   1fa74:	mov	r3, #0
   1fa78:	cmp	r1, r2
   1fa7c:	mov	r0, r4
   1fa80:	str	r3, [r5, #16]
   1fa84:	str	r3, [r5, #12]
   1fa88:	str	r3, [r5, #8]
   1fa8c:	bne	1fab4 <floor@plt+0xe6e8>
   1fa90:	add	sp, sp, #68	; 0x44
   1fa94:	vpop	{d8-d9}
   1fa98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fa9c:	ldr	r2, [r4]
   1faa0:	mov	r0, r4
   1faa4:	mov	r4, r3
   1faa8:	ldr	r3, [r2, #4]
   1faac:	blx	r3
   1fab0:	b	1fa6c <floor@plt+0xe6a0>
   1fab4:	bl	111e0 <__stack_chk_fail@plt>
   1fab8:	andeq	r0, r0, r0
   1fabc:	svccc	0x00e00000
	...
   1facc:	svccc	0x00f00000	; IMB
   1fad0:	andeq	r1, r4, r0, ror sp
   1fad4:	muleq	r2, r4, r5
   1fad8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fadc:	mov	r5, r0
   1fae0:	ldr	r3, [r0]
   1fae4:	vpush	{d8}
   1fae8:	ands	r4, r3, #4096	; 0x1000
   1faec:	mov	r6, r1
   1faf0:	mov	r7, r2
   1faf4:	beq	1fb90 <floor@plt+0xe7c4>
   1faf8:	tst	r3, #8192	; 0x2000
   1fafc:	beq	1fbdc <floor@plt+0xe810>
   1fb00:	mov	r0, #88	; 0x58
   1fb04:	ldrd	r8, [r5, #120]	; 0x78
   1fb08:	vldr	d8, [r5, #104]	; 0x68
   1fb0c:	bl	28660 <_Znwj@@Base>
   1fb10:	ldr	fp, [pc, #264]	; 1fc20 <floor@plt+0xe854>
   1fb14:	mov	r1, #1
   1fb18:	ldr	ip, [pc, #260]	; 1fc24 <floor@plt+0xe858>
   1fb1c:	mov	sl, #0
   1fb20:	mov	r3, r7
   1fb24:	mov	r2, r6
   1fb28:	mov	r4, r0
   1fb2c:	strd	r8, [r0, #72]	; 0x48
   1fb30:	mov	r8, #0
   1fb34:	mov	r9, #0
   1fb38:	vstr	d8, [r0, #80]	; 0x50
   1fb3c:	str	r1, [r4, #24]
   1fb40:	mov	r1, #0
   1fb44:	str	r1, [r4, #4]
   1fb48:	str	r1, [r4, #8]
   1fb4c:	str	r1, [r4, #12]
   1fb50:	str	r1, [r4, #16]
   1fb54:	str	r1, [r4, #20]
   1fb58:	str	r1, [r4, #48]	; 0x30
   1fb5c:	str	r1, [r4, #52]	; 0x34
   1fb60:	mov	r0, r5
   1fb64:	strd	sl, [r4, #40]	; 0x28
   1fb68:	str	ip, [r4]
   1fb6c:	strd	r8, [r4, #56]	; 0x38
   1fb70:	strd	r8, [r4, #64]	; 0x40
   1fb74:	mov	r1, r4
   1fb78:	bl	1f444 <floor@plt+0xe078>
   1fb7c:	subs	r3, r0, #0
   1fb80:	beq	1fbec <floor@plt+0xe820>
   1fb84:	vpop	{d8}
   1fb88:	mov	r0, r4
   1fb8c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fb90:	add	r1, r0, #104	; 0x68
   1fb94:	ldr	r0, [pc, #140]	; 1fc28 <floor@plt+0xe85c>
   1fb98:	bl	11ed0 <floor@plt+0xb04>
   1fb9c:	ldr	r3, [r5, #100]	; 0x64
   1fba0:	cmp	r3, #0
   1fba4:	beq	1fc0c <floor@plt+0xe840>
   1fba8:	mov	r2, r4
   1fbac:	ldr	r3, [r3]
   1fbb0:	add	r2, r2, #1
   1fbb4:	cmp	r3, #0
   1fbb8:	bne	1fbac <floor@plt+0xe7e0>
   1fbbc:	vmov	s15, r2
   1fbc0:	vcvt.f64.s32	d7, s15
   1fbc4:	vldr	d6, [r5, #104]	; 0x68
   1fbc8:	ldr	r3, [r5]
   1fbcc:	tst	r3, #8192	; 0x2000
   1fbd0:	vmul.f64	d7, d6, d7
   1fbd4:	vstr	d7, [r5, #104]	; 0x68
   1fbd8:	bne	1fb00 <floor@plt+0xe734>
   1fbdc:	add	r1, r5, #120	; 0x78
   1fbe0:	ldr	r0, [pc, #68]	; 1fc2c <floor@plt+0xe860>
   1fbe4:	bl	11ed0 <floor@plt+0xb04>
   1fbe8:	b	1fb00 <floor@plt+0xe734>
   1fbec:	ldr	r2, [r4]
   1fbf0:	mov	r0, r4
   1fbf4:	mov	r4, r3
   1fbf8:	ldr	r3, [r2, #4]
   1fbfc:	blx	r3
   1fc00:	vpop	{d8}
   1fc04:	mov	r0, r4
   1fc08:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fc0c:	vldr	d7, [pc, #4]	; 1fc18 <floor@plt+0xe84c>
   1fc10:	b	1fbc4 <floor@plt+0xe7f8>
   1fc14:	nop			; (mov r0, r0)
	...
   1fc20:	svccc	0x00f00000	; IMB
   1fc24:	andeq	pc, r2, r8, lsr #3
   1fc28:	muleq	r2, r4, r7
   1fc2c:	muleq	r2, ip, r7
   1fc30:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fc34:	mov	r5, r0
   1fc38:	ldr	r3, [r0]
   1fc3c:	mov	r8, r1
   1fc40:	tst	r3, #4096	; 0x1000
   1fc44:	mov	r9, r2
   1fc48:	ldr	r4, [pc, #336]	; 1fda0 <floor@plt+0xe9d4>
   1fc4c:	bne	1fc8c <floor@plt+0xe8c0>
   1fc50:	tst	r3, #256	; 0x100
   1fc54:	beq	1fc7c <floor@plt+0xe8b0>
   1fc58:	ldr	r2, [r4, #56]	; 0x38
   1fc5c:	cmp	r2, #0
   1fc60:	beq	1fc7c <floor@plt+0xe8b0>
   1fc64:	ldrd	sl, [r4, #64]	; 0x40
   1fc68:	tst	r3, #8192	; 0x2000
   1fc6c:	strd	sl, [r0, #104]	; 0x68
   1fc70:	beq	1fd64 <floor@plt+0xe998>
   1fc74:	ldrd	r6, [r0, #120]	; 0x78
   1fc78:	b	1fc9c <floor@plt+0xe8d0>
   1fc7c:	add	r1, r5, #104	; 0x68
   1fc80:	ldr	r0, [pc, #284]	; 1fda4 <floor@plt+0xe9d8>
   1fc84:	bl	11ed0 <floor@plt+0xb04>
   1fc88:	ldr	r3, [r5]
   1fc8c:	tst	r3, #8192	; 0x2000
   1fc90:	beq	1fd40 <floor@plt+0xe974>
   1fc94:	ldrd	r6, [r5, #120]	; 0x78
   1fc98:	ldrd	sl, [r5, #104]	; 0x68
   1fc9c:	mov	r3, #1
   1fca0:	mov	r0, #120	; 0x78
   1fca4:	strd	r6, [r4, #72]	; 0x48
   1fca8:	str	r3, [r4, #56]	; 0x38
   1fcac:	strd	sl, [r4, #64]	; 0x40
   1fcb0:	bl	28660 <_Znwj@@Base>
   1fcb4:	vldr	d6, [pc, #212]	; 1fd90 <floor@plt+0xe9c4>
   1fcb8:	vldr	d7, [pc, #216]	; 1fd98 <floor@plt+0xe9cc>
   1fcbc:	ldr	ip, [pc, #228]	; 1fda8 <floor@plt+0xe9dc>
   1fcc0:	mov	r1, #0
   1fcc4:	mov	r3, #1
   1fcc8:	mov	r2, r8
   1fccc:	strd	r6, [r0, #72]	; 0x48
   1fcd0:	mov	r4, r0
   1fcd4:	mov	r6, #0
   1fcd8:	mov	r7, #0
   1fcdc:	str	r3, [r0, #24]
   1fce0:	strd	sl, [r0, #80]	; 0x50
   1fce4:	mov	r3, r9
   1fce8:	str	r1, [r4, #4]
   1fcec:	str	r1, [r4, #8]
   1fcf0:	str	r1, [r4, #12]
   1fcf4:	str	r1, [r4, #16]
   1fcf8:	str	r1, [r4, #20]
   1fcfc:	str	r1, [r4, #48]	; 0x30
   1fd00:	str	r1, [r4, #52]	; 0x34
   1fd04:	str	r1, [r4, #112]	; 0x70
   1fd08:	mov	r0, r5
   1fd0c:	vstr	d6, [r4, #40]	; 0x28
   1fd10:	vstr	d7, [r4, #88]	; 0x58
   1fd14:	str	ip, [r4]
   1fd18:	strd	r6, [r4, #56]	; 0x38
   1fd1c:	strd	r6, [r4, #64]	; 0x40
   1fd20:	strd	r6, [r4, #96]	; 0x60
   1fd24:	strd	r6, [r4, #104]	; 0x68
   1fd28:	mov	r1, r4
   1fd2c:	bl	1f444 <floor@plt+0xe078>
   1fd30:	subs	r3, r0, #0
   1fd34:	beq	1fd74 <floor@plt+0xe9a8>
   1fd38:	mov	r0, r4
   1fd3c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fd40:	tst	r3, #256	; 0x100
   1fd44:	beq	1fd54 <floor@plt+0xe988>
   1fd48:	ldr	r3, [r4, #56]	; 0x38
   1fd4c:	cmp	r3, #0
   1fd50:	bne	1fd64 <floor@plt+0xe998>
   1fd54:	add	r1, r5, #120	; 0x78
   1fd58:	ldr	r0, [pc, #76]	; 1fdac <floor@plt+0xe9e0>
   1fd5c:	bl	11ed0 <floor@plt+0xb04>
   1fd60:	b	1fc94 <floor@plt+0xe8c8>
   1fd64:	ldrd	r6, [r4, #72]	; 0x48
   1fd68:	ldrd	sl, [r5, #104]	; 0x68
   1fd6c:	strd	r6, [r5, #120]	; 0x78
   1fd70:	b	1fc9c <floor@plt+0xe8d0>
   1fd74:	ldr	r2, [r4]
   1fd78:	mov	r0, r4
   1fd7c:	mov	r4, r3
   1fd80:	ldr	r3, [r2, #4]
   1fd84:	blx	r3
   1fd88:	mov	r0, r4
   1fd8c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fd90:	andeq	r0, r0, r0
   1fd94:	svccc	0x00f00000	; IMB
   1fd98:	andeq	r0, r0, r0
   1fd9c:	svclt	0x00f00000	; IMB
   1fda0:	andeq	r4, r4, r8, lsr #18
   1fda4:	andeq	lr, r2, ip, ror r7
   1fda8:	andeq	pc, r2, r4, ror #16
   1fdac:	andeq	lr, r2, r8, lsl #15
   1fdb0:	ldr	r3, [r0]
   1fdb4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1fdb8:	tst	r3, #16384	; 0x4000
   1fdbc:	mov	r5, r0
   1fdc0:	mov	r7, r1
   1fdc4:	mov	r8, r2
   1fdc8:	beq	1fe80 <floor@plt+0xeab4>
   1fdcc:	ldrd	r2, [r0, #112]	; 0x70
   1fdd0:	ldr	r4, [pc, #248]	; 1fed0 <floor@plt+0xeb04>
   1fdd4:	mov	r6, #1
   1fdd8:	mov	r0, #120	; 0x78
   1fddc:	strd	r2, [r4, #88]	; 0x58
   1fde0:	str	r6, [r4, #80]	; 0x50
   1fde4:	bl	28660 <_Znwj@@Base>
   1fde8:	vldr	d7, [r5, #112]	; 0x70
   1fdec:	ldr	r1, [pc, #224]	; 1fed4 <floor@plt+0xeb08>
   1fdf0:	ldr	fp, [pc, #224]	; 1fed8 <floor@plt+0xeb0c>
   1fdf4:	mov	r2, r7
   1fdf8:	vadd.f64	d7, d7, d7
   1fdfc:	mov	r7, #0
   1fe00:	mov	sl, #0
   1fe04:	mov	r3, r8
   1fe08:	str	r6, [r0, #24]
   1fe0c:	mov	r4, r0
   1fe10:	mov	r0, #0
   1fe14:	mov	r6, #0
   1fe18:	strd	r0, [r4, #88]	; 0x58
   1fe1c:	ldr	r1, [pc, #184]	; 1fedc <floor@plt+0xeb10>
   1fe20:	strd	sl, [r4, #40]	; 0x28
   1fe24:	str	r1, [r4]
   1fe28:	mov	r1, #0
   1fe2c:	str	r1, [r4, #4]
   1fe30:	str	r1, [r4, #8]
   1fe34:	str	r1, [r4, #12]
   1fe38:	str	r1, [r4, #16]
   1fe3c:	str	r1, [r4, #20]
   1fe40:	str	r1, [r4, #48]	; 0x30
   1fe44:	str	r1, [r4, #52]	; 0x34
   1fe48:	str	r1, [r4, #112]	; 0x70
   1fe4c:	mov	r0, r5
   1fe50:	vstr	d7, [r4, #72]	; 0x48
   1fe54:	vstr	d7, [r4, #80]	; 0x50
   1fe58:	strd	r6, [r4, #56]	; 0x38
   1fe5c:	strd	r6, [r4, #64]	; 0x40
   1fe60:	strd	r6, [r4, #96]	; 0x60
   1fe64:	strd	r6, [r4, #104]	; 0x68
   1fe68:	mov	r1, r4
   1fe6c:	bl	1f444 <floor@plt+0xe078>
   1fe70:	subs	r3, r0, #0
   1fe74:	beq	1feb4 <floor@plt+0xeae8>
   1fe78:	mov	r0, r4
   1fe7c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1fe80:	tst	r3, #256	; 0x100
   1fe84:	ldr	r4, [pc, #68]	; 1fed0 <floor@plt+0xeb04>
   1fe88:	beq	1fea0 <floor@plt+0xead4>
   1fe8c:	ldr	r3, [r4, #80]	; 0x50
   1fe90:	cmp	r3, #0
   1fe94:	ldrdne	r2, [r4, #88]	; 0x58
   1fe98:	strdne	r2, [r0, #112]	; 0x70
   1fe9c:	bne	1fdd4 <floor@plt+0xea08>
   1fea0:	add	r1, r5, #112	; 0x70
   1fea4:	ldr	r0, [pc, #52]	; 1fee0 <floor@plt+0xeb14>
   1fea8:	bl	11ed0 <floor@plt+0xb04>
   1feac:	ldrd	r2, [r5, #112]	; 0x70
   1feb0:	b	1fdd4 <floor@plt+0xea08>
   1feb4:	ldr	r2, [r4]
   1feb8:	mov	r0, r4
   1febc:	mov	r4, r3
   1fec0:	ldr	r3, [r2, #4]
   1fec4:	blx	r3
   1fec8:	mov	r0, r4
   1fecc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1fed0:	andeq	r4, r4, r8, lsr #18
   1fed4:	svclt	0x00f00000	; IMB
   1fed8:	svccc	0x00f00000	; IMB
   1fedc:	ldrdeq	pc, [r2], -ip
   1fee0:	andeq	lr, r2, r8, asr r7
   1fee4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fee8:	vpush	{d8-d15}
   1feec:	ldr	r3, [pc, #1668]	; 20578 <floor@plt+0xf1ac>
   1fef0:	ldr	sl, [pc, #1668]	; 2057c <floor@plt+0xf1b0>
   1fef4:	mov	r7, r0
   1fef8:	ldr	r3, [r3]
   1fefc:	sub	sp, sp, #252	; 0xfc
   1ff00:	mov	r4, r2
   1ff04:	str	r1, [sp, #4]
   1ff08:	str	r3, [sp, #244]	; 0xf4
   1ff0c:	ldrb	r3, [sl, #96]	; 0x60
   1ff10:	mcr	15, 0, r0, cr7, cr10, {5}
   1ff14:	tst	r3, #1
   1ff18:	beq	20294 <floor@plt+0xeec8>
   1ff1c:	ldr	lr, [r7, #200]	; 0xc8
   1ff20:	str	lr, [r4]
   1ff24:	ldr	ip, [r7]
   1ff28:	and	r3, ip, #3072	; 0xc00
   1ff2c:	cmp	r3, #3072	; 0xc00
   1ff30:	beq	1ff3c <floor@plt+0xeb70>
   1ff34:	tst	ip, #512	; 0x200
   1ff38:	bne	20170 <floor@plt+0xeda4>
   1ff3c:	ldr	r3, [sp, #4]
   1ff40:	add	r8, sp, #16
   1ff44:	ldm	r3, {r0, r1, r2, r3}
   1ff48:	stm	r8, {r0, r1, r2, r3}
   1ff4c:	tst	ip, #128	; 0x80
   1ff50:	bne	1ff94 <floor@plt+0xebc8>
   1ff54:	tst	ip, #256	; 0x100
   1ff58:	beq	1ff6c <floor@plt+0xeba0>
   1ff5c:	ldr	r3, [r7, #4]
   1ff60:	sub	r3, r3, #6
   1ff64:	cmp	r3, #1
   1ff68:	bls	204fc <floor@plt+0xf130>
   1ff6c:	cmp	lr, #3
   1ff70:	ldrls	pc, [pc, lr, lsl #2]
   1ff74:	b	1ff88 <floor@plt+0xebbc>
   1ff78:	andeq	r0, r2, ip, ror #9
   1ff7c:	ldrdeq	r0, [r2], -ip
   1ff80:	andeq	r0, r2, r4, asr #9
   1ff84:			; <UNDEFINED> instruction: 0x000204b0
   1ff88:	ldr	r1, [pc, #1520]	; 20580 <floor@plt+0xf1b4>
   1ff8c:	ldr	r0, [pc, #1520]	; 20584 <floor@plt+0xf1b8>
   1ff90:	bl	26c88 <floor@plt+0x158bc>
   1ff94:	add	r5, r7, #208	; 0xd0
   1ff98:	mov	r0, #32
   1ff9c:	bl	28660 <_Znwj@@Base>
   1ffa0:	mov	lr, #0
   1ffa4:	mov	r4, r0
   1ffa8:	mov	ip, r4
   1ffac:	ldm	r5, {r0, r1, r2, r3}
   1ffb0:	ldr	r5, [r7, #224]	; 0xe0
   1ffb4:	str	r5, [ip], #8
   1ffb8:	ldr	r5, [r7, #204]	; 0xcc
   1ffbc:	stm	ip, {r0, r1, r2, r3}
   1ffc0:	mov	r3, lr
   1ffc4:	str	lr, [r7, #204]	; 0xcc
   1ffc8:	str	r5, [r4, #24]
   1ffcc:	b	1ffdc <floor@plt+0xec10>
   1ffd0:	mov	r3, r4
   1ffd4:	mov	r4, r5
   1ffd8:	ldr	r5, [r5, #24]
   1ffdc:	cmp	r5, #0
   1ffe0:	str	r3, [r4, #24]
   1ffe4:	bne	1ffd0 <floor@plt+0xec04>
   1ffe8:	ldm	r8, {r0, r1, r2, r3}
   1ffec:	add	ip, sp, #32
   1fff0:	str	r4, [r7, #204]	; 0xcc
   1fff4:	mov	lr, #1
   1fff8:	stm	ip, {r0, r1, r2, r3}
   1fffc:	vldr	d9, [sp, #16]
   20000:	vldr	d8, [sp, #24]
   20004:	b	20030 <floor@plt+0xec64>
   20008:	add	r3, r4, #8
   2000c:	vldr	d9, [r4, #8]
   20010:	ldm	r3, {r0, r1, r2, r3}
   20014:	vldr	d8, [r4, #16]
   20018:	ldr	r4, [r4, #24]
   2001c:	add	r6, r5, #1
   20020:	cmp	r4, #0
   20024:	stm	ip, {r0, r1, r2, r3}
   20028:	beq	20068 <floor@plt+0xec9c>
   2002c:	mov	r5, r6
   20030:	ldr	r3, [r4]
   20034:	cmp	r3, #0
   20038:	bne	20008 <floor@plt+0xec3c>
   2003c:	vldr	d6, [r4, #8]
   20040:	vldr	d7, [r4, #16]
   20044:	str	lr, [r4]
   20048:	add	r6, r5, #1
   2004c:	vadd.f64	d9, d9, d6
   20050:	vadd.f64	d8, d8, d7
   20054:	vstr	d9, [r4, #8]
   20058:	vstr	d8, [r4, #16]
   2005c:	ldr	r4, [r4, #24]
   20060:	cmp	r4, #0
   20064:	bne	2002c <floor@plt+0xec60>
   20068:	ldr	r3, [r7]
   2006c:	and	r3, r3, #3072	; 0xc00
   20070:	cmp	r3, #3072	; 0xc00
   20074:	beq	20184 <floor@plt+0xedb8>
   20078:	cmn	r6, #-134217727	; 0xf8000001
   2007c:	lslle	r0, r6, #4
   20080:	mvngt	r0, #0
   20084:	bl	1115c <_Znaj@plt>
   20088:	mov	r1, #0
   2008c:	sub	r2, r5, #1
   20090:	mov	r9, r0
   20094:	mov	r3, r9
   20098:	mov	r0, #0
   2009c:	sub	r2, r2, #1
   200a0:	cmn	r2, #2
   200a4:	strd	r0, [r3]
   200a8:	strd	r0, [r3, #8]
   200ac:	add	r3, r3, #16
   200b0:	bne	2009c <floor@plt+0xecd0>
   200b4:	ldr	lr, [r7, #204]	; 0xcc
   200b8:	cmp	lr, #0
   200bc:	movne	fp, #0
   200c0:	beq	200e4 <floor@plt+0xed18>
   200c4:	add	r3, lr, #8
   200c8:	ldr	lr, [lr, #24]
   200cc:	ldm	r3, {r0, r1, r2, r3}
   200d0:	add	ip, r9, fp, lsl #4
   200d4:	cmp	lr, #0
   200d8:	add	fp, fp, #1
   200dc:	stm	ip, {r0, r1, r2, r3}
   200e0:	bne	200c4 <floor@plt+0xecf8>
   200e4:	ldr	r3, [r7]
   200e8:	tst	r3, #131072	; 0x20000
   200ec:	bne	202c0 <floor@plt+0xeef4>
   200f0:	tst	r3, #65536	; 0x10000
   200f4:	bne	204a8 <floor@plt+0xf0dc>
   200f8:	ldr	r3, [r7, #4]
   200fc:	cmp	r3, #6
   20100:	beq	2039c <floor@plt+0xefd0>
   20104:	cmp	r3, #7
   20108:	beq	2046c <floor@plt+0xf0a0>
   2010c:	cmp	r3, #5
   20110:	beq	20404 <floor@plt+0xf038>
   20114:	ldr	r1, [pc, #1124]	; 20580 <floor@plt+0xf1b4>
   20118:	ldr	r0, [pc, #1128]	; 20588 <floor@plt+0xf1bc>
   2011c:	bl	26c88 <floor@plt+0x158bc>
   20120:	vldr	d6, [sp, #24]
   20124:	vldr	d7, [sp, #16]
   20128:	ldr	r2, [sp, #4]
   2012c:	mov	r3, #1
   20130:	vsub.f64	d6, d8, d6
   20134:	vsub.f64	d7, d9, d7
   20138:	vstr	d9, [r2]
   2013c:	vstr	d8, [r2, #8]
   20140:	str	r3, [sl, #120]	; 0x78
   20144:	vstr	d6, [sl, #112]	; 0x70
   20148:	vstr	d7, [sl, #104]	; 0x68
   2014c:	ldr	r3, [pc, #1060]	; 20578 <floor@plt+0xf1ac>
   20150:	ldr	r2, [sp, #244]	; 0xf4
   20154:	mov	r0, r4
   20158:	ldr	r3, [r3]
   2015c:	cmp	r2, r3
   20160:	bne	205ac <floor@plt+0xf1e0>
   20164:	add	sp, sp, #252	; 0xfc
   20168:	vpop	{d8-d15}
   2016c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20170:	add	r3, r7, #32
   20174:	add	r8, sp, #16
   20178:	ldm	r3, {r0, r1, r2, r3}
   2017c:	stm	r8, {r0, r1, r2, r3}
   20180:	b	1ff4c <floor@plt+0xeb80>
   20184:	ldm	r8, {r0, r1, r2, r3}
   20188:	vstr	d9, [sp, #32]
   2018c:	vstr	d8, [sp, #40]	; 0x28
   20190:	add	lr, sp, #200	; 0xc8
   20194:	vldr	d7, [pc, #972]	; 20568 <floor@plt+0xf19c>
   20198:	stm	lr, {r0, r1, r2, r3}
   2019c:	vldr	d11, [r7, #64]	; 0x40
   201a0:	ldm	ip, {r0, r1, r2, r3}
   201a4:	add	ip, sp, #216	; 0xd8
   201a8:	ldr	lr, [pc, #988]	; 2058c <floor@plt+0xf1c0>
   201ac:	str	r4, [sp, #232]	; 0xe8
   201b0:	str	r4, [sp, #236]	; 0xec
   201b4:	stm	ip, {r0, r1, r2, r3}
   201b8:	mov	r3, #1
   201bc:	str	r3, [sp, #136]	; 0x88
   201c0:	str	r4, [sp, #116]	; 0x74
   201c4:	str	r4, [sp, #120]	; 0x78
   201c8:	str	r4, [sp, #124]	; 0x7c
   201cc:	str	r4, [sp, #128]	; 0x80
   201d0:	str	r4, [sp, #132]	; 0x84
   201d4:	str	r4, [sp, #160]	; 0xa0
   201d8:	str	r4, [sp, #164]	; 0xa4
   201dc:	strh	r4, [sp, #168]	; 0xa8
   201e0:	vstr	d7, [sp, #152]	; 0x98
   201e4:	str	lr, [sp, #112]	; 0x70
   201e8:	vldr	d10, [r7, #72]	; 0x48
   201ec:	ldr	r0, [r7, #96]	; 0x60
   201f0:	add	r9, sp, #112	; 0x70
   201f4:	str	r9, [sp, #88]	; 0x58
   201f8:	ldr	r3, [r0, #32]
   201fc:	cmp	r3, #0
   20200:	bne	20548 <floor@plt+0xf17c>
   20204:	add	fp, sp, #64	; 0x40
   20208:	mov	r2, fp
   2020c:	add	r1, sp, #88	; 0x58
   20210:	bl	1f2bc <floor@plt+0xdef0>
   20214:	cmp	r0, #0
   20218:	beq	205a0 <floor@plt+0xf1d4>
   2021c:	mov	r1, fp
   20220:	add	r0, sp, #48	; 0x30
   20224:	bl	1c680 <floor@plt+0xb2b4>
   20228:	vldr	d5, [sp, #48]	; 0x30
   2022c:	vldr	d4, [sp, #56]	; 0x38
   20230:	ldr	r3, [r7, #204]	; 0xcc
   20234:	cmp	r3, #0
   20238:	vsub.f64	d5, d11, d5
   2023c:	vsub.f64	d4, d10, d4
   20240:	beq	20268 <floor@plt+0xee9c>
   20244:	vldr	d6, [r3, #8]
   20248:	vldr	d7, [r3, #16]
   2024c:	vadd.f64	d6, d6, d5
   20250:	vadd.f64	d7, d7, d4
   20254:	vstr	d6, [r3, #8]
   20258:	vstr	d7, [r3, #16]
   2025c:	ldr	r3, [r3, #24]
   20260:	cmp	r3, #0
   20264:	bne	20244 <floor@plt+0xee78>
   20268:	vldr	d6, [sp, #16]
   2026c:	vldr	d7, [sp, #24]
   20270:	mov	r0, r9
   20274:	vadd.f64	d9, d9, d5
   20278:	vadd.f64	d6, d6, d5
   2027c:	vadd.f64	d7, d7, d4
   20280:	vadd.f64	d8, d8, d4
   20284:	vstr	d6, [sp, #16]
   20288:	vstr	d7, [sp, #24]
   2028c:	bl	1e330 <floor@plt+0xcf64>
   20290:	b	20078 <floor@plt+0xecac>
   20294:	add	r0, sl, #96	; 0x60
   20298:	bl	11330 <__cxa_guard_acquire@plt>
   2029c:	cmp	r0, #0
   202a0:	beq	1ff1c <floor@plt+0xeb50>
   202a4:	mov	r2, #0
   202a8:	mov	r3, #0
   202ac:	add	r0, sl, #96	; 0x60
   202b0:	strd	r2, [sl, #104]	; 0x68
   202b4:	strd	r2, [sl, #112]	; 0x70
   202b8:	bl	11144 <__cxa_guard_release@plt>
   202bc:	b	1ff1c <floor@plt+0xeb50>
   202c0:	add	r1, r7, #144	; 0x90
   202c4:	ldr	r0, [pc, #708]	; 20590 <floor@plt+0xf1c4>
   202c8:	bl	11ed0 <floor@plt+0xb04>
   202cc:	vldr	d14, [r7, #144]	; 0x90
   202d0:	ldr	r3, [r7]
   202d4:	orr	r3, r3, #65536	; 0x10000
   202d8:	vstr	d14, [r7, #152]	; 0x98
   202dc:	str	r3, [r7]
   202e0:	vcmp.f64	d14, #0.0
   202e4:	vldr	d12, [sp, #16]
   202e8:	vldr	d11, [sp, #24]
   202ec:	vmrs	APSR_nzcv, fpscr
   202f0:	bne	2051c <floor@plt+0xf150>
   202f4:	vldr	d10, [pc, #628]	; 20570 <floor@plt+0xf1a4>
   202f8:	vmov.f64	d13, d10
   202fc:	vldr	d14, [r7, #152]	; 0x98
   20300:	lsl	r5, r5, #4
   20304:	add	fp, r9, r5
   20308:	vcmp.f64	d14, #0.0
   2030c:	vmrs	APSR_nzcv, fpscr
   20310:	beq	2049c <floor@plt+0xf0d0>
   20314:	cmp	r6, #1
   20318:	subne	r5, r5, #16
   2031c:	addne	r3, r9, r5
   20320:	vldr	d5, [fp]
   20324:	vldrne	d15, [r3]
   20328:	vldrne	d7, [r3, #8]
   2032c:	vmoveq.f64	d7, d11
   20330:	vmoveq.f64	d15, d12
   20334:	vldr	d6, [fp, #8]
   20338:	vsub.f64	d15, d5, d15
   2033c:	vsub.f64	d6, d6, d7
   20340:	vmov.f64	d0, d15
   20344:	vmov.f64	d1, d6
   20348:	vstr	d6, [sp, #8]
   2034c:	bl	283a0 <floor@plt+0x16fd4>
   20350:	vldr	d6, [sp, #8]
   20354:	vdiv.f64	d0, d14, d0
   20358:	vmul.f64	d5, d0, d15
   2035c:	vmul.f64	d0, d0, d6
   20360:	vsub.f64	d9, d9, d5
   20364:	vsub.f64	d8, d8, d0
   20368:	vldr	d6, [fp]
   2036c:	vldr	d4, [fp, #8]
   20370:	vadd.f64	d12, d13, d12
   20374:	vadd.f64	d10, d10, d11
   20378:	vsub.f64	d5, d6, d5
   2037c:	vsub.f64	d4, d4, d0
   20380:	ldr	r3, [r7, #4]
   20384:	cmp	r3, #6
   20388:	vstr	d12, [sp, #16]
   2038c:	vstr	d10, [sp, #24]
   20390:	vstr	d5, [fp]
   20394:	vstr	d4, [fp, #8]
   20398:	bne	20104 <floor@plt+0xed38>
   2039c:	mov	r0, #128	; 0x80
   203a0:	bl	28660 <_Znwj@@Base>
   203a4:	vldr	d7, [pc, #444]	; 20568 <floor@plt+0xf19c>
   203a8:	mov	ip, #1
   203ac:	ldr	r5, [pc, #472]	; 2058c <floor@plt+0xf1c0>
   203b0:	mov	r4, r0
   203b4:	ldm	r8, {r0, r1, r2, r3}
   203b8:	add	lr, r4, #88	; 0x58
   203bc:	str	ip, [r4, #24]
   203c0:	mov	ip, #0
   203c4:	vstr	d7, [r4, #40]	; 0x28
   203c8:	str	ip, [r4, #4]
   203cc:	str	ip, [r4, #8]
   203d0:	str	ip, [r4, #12]
   203d4:	str	ip, [r4, #16]
   203d8:	str	ip, [r4, #20]
   203dc:	str	ip, [r4, #48]	; 0x30
   203e0:	str	ip, [r4, #52]	; 0x34
   203e4:	strh	ip, [r4, #56]	; 0x38
   203e8:	stm	lr, {r0, r1, r2, r3}
   203ec:	vstr	d9, [r4, #104]	; 0x68
   203f0:	vstr	d8, [r4, #112]	; 0x70
   203f4:	str	r9, [r4, #120]	; 0x78
   203f8:	str	r6, [r4, #124]	; 0x7c
   203fc:	str	r5, [r4]
   20400:	b	20120 <floor@plt+0xed54>
   20404:	mov	r0, #128	; 0x80
   20408:	bl	28660 <_Znwj@@Base>
   2040c:	vldr	d7, [pc, #340]	; 20568 <floor@plt+0xf19c>
   20410:	mov	ip, #1
   20414:	ldr	r5, [pc, #376]	; 20594 <floor@plt+0xf1c8>
   20418:	mov	r4, r0
   2041c:	ldm	r8, {r0, r1, r2, r3}
   20420:	vstr	d7, [r4, #40]	; 0x28
   20424:	str	ip, [r4, #24]
   20428:	add	lr, r4, #88	; 0x58
   2042c:	mov	ip, #0
   20430:	str	ip, [r4, #4]
   20434:	str	ip, [r4, #8]
   20438:	str	ip, [r4, #12]
   2043c:	str	ip, [r4, #16]
   20440:	str	ip, [r4, #20]
   20444:	str	ip, [r4, #48]	; 0x30
   20448:	str	ip, [r4, #52]	; 0x34
   2044c:	strh	ip, [r4, #56]	; 0x38
   20450:	stm	lr, {r0, r1, r2, r3}
   20454:	vstr	d9, [r4, #104]	; 0x68
   20458:	str	r9, [r4, #120]	; 0x78
   2045c:	vstr	d8, [r4, #112]	; 0x70
   20460:	str	r6, [r4, #124]	; 0x7c
   20464:	str	r5, [r4]
   20468:	b	20120 <floor@plt+0xed54>
   2046c:	mov	r0, #128	; 0x80
   20470:	bl	28660 <_Znwj@@Base>
   20474:	vldr	d7, [pc, #236]	; 20568 <floor@plt+0xf19c>
   20478:	mov	ip, #1
   2047c:	ldr	r5, [pc, #276]	; 20598 <floor@plt+0xf1cc>
   20480:	mov	r4, r0
   20484:	add	lr, r4, #88	; 0x58
   20488:	str	ip, [r4, #24]
   2048c:	ldm	r8, {r0, r1, r2, r3}
   20490:	vstr	d7, [r4, #40]	; 0x28
   20494:	mov	ip, #0
   20498:	b	20430 <floor@plt+0xf064>
   2049c:	vldr	d0, [pc, #204]	; 20570 <floor@plt+0xf1a4>
   204a0:	vmov.f64	d5, d0
   204a4:	b	20368 <floor@plt+0xef9c>
   204a8:	vldr	d14, [r7, #144]	; 0x90
   204ac:	b	202e0 <floor@plt+0xef14>
   204b0:	vldr	d7, [r7, #136]	; 0x88
   204b4:	add	r5, r7, #208	; 0xd0
   204b8:	vneg.f64	d7, d7
   204bc:	vstr	d7, [r7, #216]	; 0xd8
   204c0:	b	1ff98 <floor@plt+0xebcc>
   204c4:	vldr	d7, [r7, #128]	; 0x80
   204c8:	mov	r5, r7
   204cc:	vneg.f64	d7, d7
   204d0:	vmov	r2, r3, d7
   204d4:	strd	r2, [r5, #208]!	; 0xd0
   204d8:	b	1ff98 <floor@plt+0xebcc>
   204dc:	ldrd	r2, [r7, #136]	; 0x88
   204e0:	add	r5, r7, #208	; 0xd0
   204e4:	strd	r2, [r7, #216]	; 0xd8
   204e8:	b	1ff98 <floor@plt+0xebcc>
   204ec:	ldrd	r2, [r7, #128]	; 0x80
   204f0:	mov	r5, r7
   204f4:	strd	r2, [r5, #208]!	; 0xd0
   204f8:	b	1ff98 <floor@plt+0xebcc>
   204fc:	ldr	r3, [sl, #120]	; 0x78
   20500:	cmp	r3, #0
   20504:	beq	1ff6c <floor@plt+0xeba0>
   20508:	ldr	r3, [pc, #140]	; 2059c <floor@plt+0xf1d0>
   2050c:	add	r5, r7, #208	; 0xd0
   20510:	ldm	r3, {r0, r1, r2, r3}
   20514:	stm	r5, {r0, r1, r2, r3}
   20518:	b	1ff98 <floor@plt+0xebcc>
   2051c:	vldr	d13, [r9]
   20520:	vldr	d10, [r9, #8]
   20524:	vsub.f64	d13, d13, d12
   20528:	vsub.f64	d10, d10, d11
   2052c:	vmov.f64	d0, d13
   20530:	vmov.f64	d1, d10
   20534:	bl	283a0 <floor@plt+0x16fd4>
   20538:	vdiv.f64	d0, d14, d0
   2053c:	vmul.f64	d13, d0, d13
   20540:	vmul.f64	d10, d0, d10
   20544:	b	202fc <floor@plt+0xef30>
   20548:	vldr	d7, [r0]
   2054c:	ldrd	r2, [r0, #8]
   20550:	str	r4, [sp, #64]	; 0x40
   20554:	add	fp, sp, #64	; 0x40
   20558:	vstr	d7, [sp, #72]	; 0x48
   2055c:	strd	r2, [sp, #80]	; 0x50
   20560:	b	2021c <floor@plt+0xee50>
   20564:	nop			; (mov r0, r0)
   20568:	andeq	r0, r0, r0
   2056c:	svccc	0x00f00000	; IMB
	...
   20578:	andeq	r1, r4, r0, ror sp
   2057c:	andeq	r4, r4, r8, lsr #18
   20580:	andeq	pc, r2, ip, ror fp	; <UNPREDICTABLE>
   20584:	andeq	r0, r0, r9, asr #11
   20588:	andeq	r0, r0, r6, lsl r6
   2058c:	andeq	pc, r2, r4, lsl #13
   20590:	andeq	lr, r2, r8, asr r7
   20594:	strdeq	pc, [r2], -ip
   20598:	andeq	pc, r2, r0, lsr #4
   2059c:	muleq	r4, r0, r9
   205a0:	mov	r0, r9
   205a4:	bl	1e330 <floor@plt+0xcf64>
   205a8:	b	2014c <floor@plt+0xed80>
   205ac:	bl	111e0 <__stack_chk_fail@plt>
   205b0:	mov	r0, r9
   205b4:	bl	1e330 <floor@plt+0xcf64>
   205b8:	bl	111ec <__cxa_end_cleanup@plt>
   205bc:	push	{r4, r5, r6, r7, r8, r9, lr}
   205c0:	sub	sp, sp, #44	; 0x2c
   205c4:	ldr	r7, [pc, #300]	; 206f8 <floor@plt+0xf32c>
   205c8:	ldr	ip, [r0, #4]
   205cc:	mov	r4, r0
   205d0:	ldr	r3, [r7]
   205d4:	cmp	ip, #4
   205d8:	str	r3, [sp, #36]	; 0x24
   205dc:	beq	206b4 <floor@plt+0xf2e8>
   205e0:	bl	1fee4 <floor@plt+0xeb18>
   205e4:	mov	r5, r0
   205e8:	ldr	r3, [r4, #4]
   205ec:	cmp	r3, #7
   205f0:	beq	20624 <floor@plt+0xf258>
   205f4:	cmp	r5, #0
   205f8:	beq	20608 <floor@plt+0xf23c>
   205fc:	ldr	r3, [r4]
   20600:	tst	r3, #96	; 0x60
   20604:	bne	20638 <floor@plt+0xf26c>
   20608:	ldr	r2, [sp, #36]	; 0x24
   2060c:	ldr	r3, [r7]
   20610:	mov	r0, r5
   20614:	cmp	r2, r3
   20618:	bne	206f4 <floor@plt+0xf328>
   2061c:	add	sp, sp, #44	; 0x2c
   20620:	pop	{r4, r5, r6, r7, r8, r9, pc}
   20624:	ldr	r3, [r4]
   20628:	tst	r3, #96	; 0x60
   2062c:	beq	206c0 <floor@plt+0xf2f4>
   20630:	cmp	r5, #0
   20634:	beq	20608 <floor@plt+0xf23c>
   20638:	lsr	r9, r3, #5
   2063c:	lsr	r8, r3, #6
   20640:	tst	r3, #4096	; 0x1000
   20644:	and	r9, r9, #1
   20648:	and	r8, r8, #1
   2064c:	beq	206dc <floor@plt+0xf310>
   20650:	ldrd	r0, [r4, #104]	; 0x68
   20654:	add	r6, sp, #8
   20658:	strd	r0, [sp, #8]
   2065c:	tst	r3, #8192	; 0x2000
   20660:	beq	206cc <floor@plt+0xf300>
   20664:	ldrd	r2, [r4, #120]	; 0x78
   20668:	strd	r2, [sp, #16]
   2066c:	mov	r1, sp
   20670:	ldr	r0, [pc, #132]	; 206fc <floor@plt+0xf330>
   20674:	bl	11ed0 <floor@plt+0xb04>
   20678:	vldr	d7, [sp]
   2067c:	mov	ip, r6
   20680:	add	lr, r5, #64	; 0x40
   20684:	ldm	ip!, {r0, r1, r2, r3}
   20688:	vcmp.f64	d7, #0.0
   2068c:	strb	r9, [r5, #56]	; 0x38
   20690:	strb	r8, [r5, #57]	; 0x39
   20694:	stmia	lr!, {r0, r1, r2, r3}
   20698:	vmrs	APSR_nzcv, fpscr
   2069c:	movne	r3, #1
   206a0:	moveq	r3, #0
   206a4:	str	r3, [sp, #24]
   206a8:	ldm	ip, {r0, r1}
   206ac:	stm	lr, {r0, r1}
   206b0:	b	20608 <floor@plt+0xf23c>
   206b4:	bl	1ecf8 <floor@plt+0xd92c>
   206b8:	mov	r5, r0
   206bc:	b	205e8 <floor@plt+0xf21c>
   206c0:	orr	r3, r3, #64	; 0x40
   206c4:	str	r3, [r4]
   206c8:	b	205f4 <floor@plt+0xf228>
   206cc:	add	r1, sp, #16
   206d0:	ldr	r0, [pc, #40]	; 20700 <floor@plt+0xf334>
   206d4:	bl	11ed0 <floor@plt+0xb04>
   206d8:	b	2066c <floor@plt+0xf2a0>
   206dc:	add	r6, sp, #8
   206e0:	mov	r1, r6
   206e4:	ldr	r0, [pc, #24]	; 20704 <floor@plt+0xf338>
   206e8:	bl	11ed0 <floor@plt+0xb04>
   206ec:	ldr	r3, [r4]
   206f0:	b	2065c <floor@plt+0xf290>
   206f4:	bl	111e0 <__stack_chk_fail@plt>
   206f8:	andeq	r1, r4, r0, ror sp
   206fc:			; <UNDEFINED> instruction: 0x0002e7b8
   20700:	andeq	lr, r2, ip, asr #14
   20704:	andeq	lr, r2, r4, asr #14
   20708:	push	{r4, r5, r6, lr}
   2070c:	mov	r4, r0
   20710:	ldr	r6, [pc, #608]	; 20978 <floor@plt+0xf5ac>
   20714:	ldr	r3, [r0, #4]
   20718:	sub	sp, sp, #32
   2071c:	ldr	r0, [r6]
   20720:	sub	r3, r3, #1
   20724:	str	r0, [sp, #28]
   20728:	cmp	r3, #9
   2072c:	ldrls	pc, [pc, r3, lsl #2]
   20730:	b	20964 <floor@plt+0xf598>
   20734:	andeq	r0, r2, r4, asr r8
   20738:	andeq	r0, r2, r4, ror #16
   2073c:	andeq	r0, r2, r4, ror r8
   20740:	andeq	r0, r2, r4, lsl #17
   20744:	andeq	r0, r2, r4, lsl #17
   20748:	andeq	r0, r2, r4, lsl #17
   2074c:	andeq	r0, r2, r4, lsl #17
   20750:	muleq	r2, r4, r8
   20754:	andeq	r0, r2, r4, lsr #17
   20758:	andeq	r0, r2, ip, asr r7
   2075c:	mov	r0, r4
   20760:	bl	1f8bc <floor@plt+0xe4f0>
   20764:	mov	r5, r0
   20768:	cmp	r5, #0
   2076c:	beq	20838 <floor@plt+0xf46c>
   20770:	ldr	r2, [r4]
   20774:	ldr	r1, [r4, #100]	; 0x64
   20778:	tst	r2, #16
   2077c:	movne	r3, #0
   20780:	strne	r3, [r5, #24]
   20784:	cmp	r1, #0
   20788:	beq	207a0 <floor@plt+0xf3d4>
   2078c:	lsr	r2, r2, #21
   20790:	and	r2, r2, #1
   20794:	mov	r0, r5
   20798:	bl	1e11c <floor@plt+0xcd50>
   2079c:	ldr	r2, [r4]
   207a0:	tst	r2, #1
   207a4:	beq	208b4 <floor@plt+0xf4e8>
   207a8:	ldrd	r0, [r4, #24]
   207ac:	mov	r3, #2
   207b0:	tst	r2, #262144	; 0x40000
   207b4:	str	r3, [r5, #24]
   207b8:	strd	r0, [r5, #32]
   207bc:	beq	208d0 <floor@plt+0xf504>
   207c0:	ldrd	r0, [r4, #160]	; 0xa0
   207c4:	tst	r2, #8388608	; 0x800000
   207c8:	strd	r0, [sp]
   207cc:	strd	r0, [r5, #40]	; 0x28
   207d0:	bne	208f0 <floor@plt+0xf524>
   207d4:	tst	r2, #16777216	; 0x1000000
   207d8:	beq	207f4 <floor@plt+0xf428>
   207dc:	ldr	r3, [r5]
   207e0:	vldr	d0, [r4, #176]	; 0xb0
   207e4:	mov	r0, r5
   207e8:	ldr	r3, [r3, #100]	; 0x64
   207ec:	blx	r3
   207f0:	ldr	r2, [r4]
   207f4:	tst	r2, #33554432	; 0x2000000
   207f8:	beq	20814 <floor@plt+0xf448>
   207fc:	ldr	r3, [r5]
   20800:	vldr	d0, [r4, #184]	; 0xb8
   20804:	mov	r0, r5
   20808:	ldr	r3, [r3, #104]	; 0x68
   2080c:	blx	r3
   20810:	ldr	r2, [r4]
   20814:	tst	r2, #1572864	; 0x180000
   20818:	beq	20838 <floor@plt+0xf46c>
   2081c:	tst	r2, #4194304	; 0x400000
   20820:	beq	20904 <floor@plt+0xf538>
   20824:	ldr	r3, [r5]
   20828:	ldr	r1, [r4, #192]	; 0xc0
   2082c:	mov	r0, r5
   20830:	ldr	r3, [r3, #108]	; 0x6c
   20834:	blx	r3
   20838:	ldr	r2, [sp, #28]
   2083c:	ldr	r3, [r6]
   20840:	mov	r0, r5
   20844:	cmp	r2, r3
   20848:	bne	20960 <floor@plt+0xf594>
   2084c:	add	sp, sp, #32
   20850:	pop	{r4, r5, r6, pc}
   20854:	mov	r0, r4
   20858:	bl	1f6c8 <floor@plt+0xe2fc>
   2085c:	mov	r5, r0
   20860:	b	20768 <floor@plt+0xf39c>
   20864:	mov	r0, r4
   20868:	bl	1fdb0 <floor@plt+0xe9e4>
   2086c:	mov	r5, r0
   20870:	b	20768 <floor@plt+0xf39c>
   20874:	mov	r0, r4
   20878:	bl	1fc30 <floor@plt+0xe864>
   2087c:	mov	r5, r0
   20880:	b	20768 <floor@plt+0xf39c>
   20884:	mov	r0, r4
   20888:	bl	205bc <floor@plt+0xf1f0>
   2088c:	mov	r5, r0
   20890:	b	20768 <floor@plt+0xf39c>
   20894:	mov	r0, r4
   20898:	bl	1e7cc <floor@plt+0xd400>
   2089c:	mov	r5, r0
   208a0:	b	20768 <floor@plt+0xf39c>
   208a4:	mov	r0, r4
   208a8:	bl	1fad8 <floor@plt+0xe70c>
   208ac:	mov	r5, r0
   208b0:	b	20768 <floor@plt+0xf39c>
   208b4:	tst	r2, #2
   208b8:	movne	r3, #3
   208bc:	ldrdne	r0, [r4, #24]
   208c0:	strne	r3, [r5, #24]
   208c4:	strdne	r0, [r5, #32]
   208c8:	tst	r2, #262144	; 0x40000
   208cc:	bne	207c0 <floor@plt+0xf3f4>
   208d0:	mov	r1, sp
   208d4:	ldr	r0, [pc, #160]	; 2097c <floor@plt+0xf5b0>
   208d8:	bl	11ed0 <floor@plt+0xb04>
   208dc:	ldr	r2, [r4]
   208e0:	ldrd	r0, [sp]
   208e4:	tst	r2, #8388608	; 0x800000
   208e8:	strd	r0, [r5, #40]	; 0x28
   208ec:	beq	207d4 <floor@plt+0xf408>
   208f0:	ldr	r0, [r4, #196]	; 0xc4
   208f4:	bl	291f4 <_ZdlPv@@Base+0xb44>
   208f8:	ldr	r2, [r4]
   208fc:	str	r0, [r5, #48]	; 0x30
   20900:	b	207d4 <floor@plt+0xf408>
   20904:	tst	r2, #1048576	; 0x100000
   20908:	bne	20930 <floor@plt+0xf564>
   2090c:	vldr	d0, [r4, #168]	; 0xa8
   20910:	vcmpe.f64	d0, #0.0
   20914:	vmrs	APSR_nzcv, fpscr
   20918:	bmi	20940 <floor@plt+0xf574>
   2091c:	ldr	r3, [r5]
   20920:	mov	r0, r5
   20924:	ldr	r3, [r3, #96]	; 0x60
   20928:	blx	r3
   2092c:	b	20838 <floor@plt+0xf46c>
   20930:	add	r1, r4, #168	; 0xa8
   20934:	ldr	r0, [pc, #68]	; 20980 <floor@plt+0xf5b4>
   20938:	bl	11ed0 <floor@plt+0xb04>
   2093c:	b	2090c <floor@plt+0xf540>
   20940:	add	r0, sp, #8
   20944:	bl	270b4 <floor@plt+0x15ce8>
   20948:	ldr	r3, [pc, #52]	; 20984 <floor@plt+0xf5b8>
   2094c:	add	r1, sp, #8
   20950:	mov	r2, r3
   20954:	ldr	r0, [pc, #44]	; 20988 <floor@plt+0xf5bc>
   20958:	bl	27444 <floor@plt+0x16078>
   2095c:	b	20838 <floor@plt+0xf46c>
   20960:	bl	111e0 <__stack_chk_fail@plt>
   20964:	ldr	r1, [pc, #32]	; 2098c <floor@plt+0xf5c0>
   20968:	ldr	r0, [pc, #32]	; 20990 <floor@plt+0xf5c4>
   2096c:	bl	26c88 <floor@plt+0x158bc>
   20970:	mov	r5, #0
   20974:	b	20838 <floor@plt+0xf46c>
   20978:	andeq	r1, r4, r0, ror sp
   2097c:	andeq	lr, r2, r4, lsr #15
   20980:			; <UNDEFINED> instruction: 0x0002e7b0
   20984:			; <UNDEFINED> instruction: 0x000454b8
   20988:	andeq	pc, r2, r4, asr ip	; <UNPREDICTABLE>
   2098c:	andeq	pc, r2, ip, ror fp	; <UNPREDICTABLE>
   20990:	andeq	r0, r0, r5, ror r7
   20994:	push	{r4, lr}
   20998:	subs	r4, r0, #0
   2099c:	popeq	{r4, pc}
   209a0:	ldr	r3, [r4]
   209a4:	mov	r0, r4
   209a8:	ldr	r3, [r3, #88]	; 0x58
   209ac:	blx	r3
   209b0:	ldr	r3, [r4]
   209b4:	mov	r0, r4
   209b8:	ldr	r3, [r3, #92]	; 0x5c
   209bc:	blx	r3
   209c0:	ldr	r4, [r4, #8]
   209c4:	cmp	r4, #0
   209c8:	bne	209a0 <floor@plt+0xf5d4>
   209cc:	pop	{r4, pc}
   209d0:	push	{r4, r5, r6, lr}
   209d4:	mov	r2, #0
   209d8:	ldr	r6, [pc, #272]	; 20af0 <floor@plt+0xf724>
   209dc:	sub	sp, sp, #56	; 0x38
   209e0:	mov	r3, #0
   209e4:	subs	r4, r0, #0
   209e8:	ldr	r0, [r6]
   209ec:	mov	r1, #1
   209f0:	str	r0, [sp, #52]	; 0x34
   209f4:	strd	r2, [sp, #16]
   209f8:	strd	r2, [sp, #24]
   209fc:	strd	r2, [sp, #32]
   20a00:	strd	r2, [sp, #40]	; 0x28
   20a04:	str	r1, [sp, #8]
   20a08:	beq	20ab8 <floor@plt+0xf6ec>
   20a0c:	mov	r5, r4
   20a10:	ldr	r3, [r5]
   20a14:	mov	r0, r5
   20a18:	add	r1, sp, #8
   20a1c:	ldr	r3, [r3, #80]	; 0x50
   20a20:	blx	r3
   20a24:	ldr	r5, [r5, #8]
   20a28:	cmp	r5, #0
   20a2c:	bne	20a10 <floor@plt+0xf644>
   20a30:	ldr	r5, [pc, #188]	; 20af4 <floor@plt+0xf728>
   20a34:	mov	r1, sp
   20a38:	ldr	r0, [pc, #184]	; 20af8 <floor@plt+0xf72c>
   20a3c:	bl	11ed0 <floor@plt+0xb04>
   20a40:	ldr	r3, [r5]
   20a44:	add	r2, sp, #32
   20a48:	mov	r0, r3
   20a4c:	ldr	r3, [r3]
   20a50:	add	r1, sp, #16
   20a54:	vldr	d0, [sp]
   20a58:	ldr	r3, [r3, #8]
   20a5c:	blx	r3
   20a60:	ldr	r3, [r4]
   20a64:	mov	r0, r4
   20a68:	ldr	r3, [r3, #88]	; 0x58
   20a6c:	blx	r3
   20a70:	ldr	r3, [r4]
   20a74:	mov	r0, r4
   20a78:	ldr	r3, [r3, #92]	; 0x5c
   20a7c:	blx	r3
   20a80:	ldr	r4, [r4, #8]
   20a84:	cmp	r4, #0
   20a88:	bne	20a60 <floor@plt+0xf694>
   20a8c:	ldr	r3, [r5]
   20a90:	mov	r0, r3
   20a94:	ldr	r3, [r3]
   20a98:	ldr	r3, [r3, #12]
   20a9c:	blx	r3
   20aa0:	ldr	r2, [sp, #52]	; 0x34
   20aa4:	ldr	r3, [r6]
   20aa8:	cmp	r2, r3
   20aac:	bne	20aec <floor@plt+0xf720>
   20ab0:	add	sp, sp, #56	; 0x38
   20ab4:	pop	{r4, r5, r6, pc}
   20ab8:	ldr	r5, [pc, #52]	; 20af4 <floor@plt+0xf728>
   20abc:	mov	r1, sp
   20ac0:	ldr	r0, [pc, #48]	; 20af8 <floor@plt+0xf72c>
   20ac4:	bl	11ed0 <floor@plt+0xb04>
   20ac8:	ldr	r3, [r5]
   20acc:	add	r2, sp, #32
   20ad0:	mov	r0, r3
   20ad4:	ldr	r3, [r3]
   20ad8:	add	r1, sp, #16
   20adc:	vldr	d0, [sp]
   20ae0:	ldr	r3, [r3, #8]
   20ae4:	blx	r3
   20ae8:	b	20a8c <floor@plt+0xf6c0>
   20aec:	bl	111e0 <__stack_chk_fail@plt>
   20af0:	andeq	r1, r4, r0, ror sp
   20af4:	andeq	r2, r4, r0, lsl r9
   20af8:	andeq	lr, r2, ip, ror #7
   20afc:	mov	r0, #0
   20b00:	bx	lr
   20b04:	vldr	d0, [r0, #72]	; 0x48
   20b08:	bx	lr
   20b0c:	vldr	d0, [r0, #80]	; 0x50
   20b10:	bx	lr
   20b14:	add	r0, r0, #56	; 0x38
   20b18:	sub	sp, sp, #32
   20b1c:	ldm	r0, {r0, r1, r2, r3}
   20b20:	add	ip, sp, #32
   20b24:	stmdb	ip, {r0, r1, r2, r3}
   20b28:	vldr	d0, [sp, #16]
   20b2c:	vldr	d1, [sp, #24]
   20b30:	add	sp, sp, #32
   20b34:	bx	lr
   20b38:	add	r0, r0, #56	; 0x38
   20b3c:	sub	sp, sp, #32
   20b40:	ldm	r0, {r0, r1, r2, r3}
   20b44:	add	ip, sp, #32
   20b48:	stmdb	ip, {r0, r1, r2, r3}
   20b4c:	vldr	d0, [sp, #16]
   20b50:	vldr	d1, [sp, #24]
   20b54:	add	sp, sp, #32
   20b58:	bx	lr
   20b5c:	andeq	r0, r0, r0
   20b60:	vldr	d7, [pc, #24]	; 20b80 <floor@plt+0xf7b4>
   20b64:	vldr	d6, [r0, #80]	; 0x50
   20b68:	vldr	d1, [r0, #64]	; 0x40
   20b6c:	vldr	d0, [r0, #56]	; 0x38
   20b70:	sub	sp, sp, #32
   20b74:	vmla.f64	d1, d6, d7
   20b78:	add	sp, sp, #32
   20b7c:	bx	lr
   20b80:	andeq	r0, r0, r0
   20b84:	svccc	0x00e00000
   20b88:	vldr	d7, [pc, #24]	; 20ba8 <floor@plt+0xf7dc>
   20b8c:	vldr	d6, [r0, #80]	; 0x50
   20b90:	vldr	d1, [r0, #64]	; 0x40
   20b94:	vldr	d0, [r0, #56]	; 0x38
   20b98:	sub	sp, sp, #32
   20b9c:	vmls.f64	d1, d6, d7
   20ba0:	add	sp, sp, #32
   20ba4:	bx	lr
   20ba8:	andeq	r0, r0, r0
   20bac:	svccc	0x00e00000
   20bb0:	vldr	d7, [pc, #24]	; 20bd0 <floor@plt+0xf804>
   20bb4:	vldr	d6, [r0, #72]	; 0x48
   20bb8:	vldr	d0, [r0, #56]	; 0x38
   20bbc:	vldr	d1, [r0, #64]	; 0x40
   20bc0:	sub	sp, sp, #32
   20bc4:	vmla.f64	d0, d6, d7
   20bc8:	add	sp, sp, #32
   20bcc:	bx	lr
   20bd0:	andeq	r0, r0, r0
   20bd4:	svccc	0x00e00000
   20bd8:	vldr	d7, [pc, #24]	; 20bf8 <floor@plt+0xf82c>
   20bdc:	vldr	d6, [r0, #72]	; 0x48
   20be0:	vldr	d0, [r0, #56]	; 0x38
   20be4:	vldr	d1, [r0, #64]	; 0x40
   20be8:	sub	sp, sp, #32
   20bec:	vmls.f64	d0, d6, d7
   20bf0:	add	sp, sp, #32
   20bf4:	bx	lr
   20bf8:	andeq	r0, r0, r0
   20bfc:	svccc	0x00e00000
   20c00:	vldr	d7, [pc, #32]	; 20c28 <floor@plt+0xf85c>
   20c04:	vldr	d5, [r0, #80]	; 0x50
   20c08:	vldr	d1, [r0, #64]	; 0x40
   20c0c:	vldr	d6, [r0, #72]	; 0x48
   20c10:	vldr	d0, [r0, #56]	; 0x38
   20c14:	sub	sp, sp, #32
   20c18:	vmla.f64	d1, d5, d7
   20c1c:	vmla.f64	d0, d6, d7
   20c20:	add	sp, sp, #32
   20c24:	bx	lr
   20c28:	andeq	r0, r0, r0
   20c2c:	svccc	0x00e00000
   20c30:	vldr	d7, [pc, #32]	; 20c58 <floor@plt+0xf88c>
   20c34:	vldr	d5, [r0, #80]	; 0x50
   20c38:	vldr	d1, [r0, #64]	; 0x40
   20c3c:	vldr	d6, [r0, #72]	; 0x48
   20c40:	vldr	d0, [r0, #56]	; 0x38
   20c44:	sub	sp, sp, #32
   20c48:	vmla.f64	d1, d5, d7
   20c4c:	vmls.f64	d0, d6, d7
   20c50:	add	sp, sp, #32
   20c54:	bx	lr
   20c58:	andeq	r0, r0, r0
   20c5c:	svccc	0x00e00000
   20c60:	vldr	d7, [pc, #32]	; 20c88 <floor@plt+0xf8bc>
   20c64:	vldr	d5, [r0, #80]	; 0x50
   20c68:	vldr	d1, [r0, #64]	; 0x40
   20c6c:	vldr	d6, [r0, #72]	; 0x48
   20c70:	vldr	d0, [r0, #56]	; 0x38
   20c74:	sub	sp, sp, #32
   20c78:	vmls.f64	d1, d5, d7
   20c7c:	vmla.f64	d0, d6, d7
   20c80:	add	sp, sp, #32
   20c84:	bx	lr
   20c88:	andeq	r0, r0, r0
   20c8c:	svccc	0x00e00000
   20c90:	vldr	d7, [pc, #32]	; 20cb8 <floor@plt+0xf8ec>
   20c94:	vldr	d5, [r0, #80]	; 0x50
   20c98:	vldr	d1, [r0, #64]	; 0x40
   20c9c:	vldr	d6, [r0, #72]	; 0x48
   20ca0:	vldr	d0, [r0, #56]	; 0x38
   20ca4:	sub	sp, sp, #32
   20ca8:	vmls.f64	d1, d5, d7
   20cac:	vmls.f64	d0, d6, d7
   20cb0:	add	sp, sp, #32
   20cb4:	bx	lr
   20cb8:	andeq	r0, r0, r0
   20cbc:	svccc	0x00e00000
   20cc0:	mov	r0, #1
   20cc4:	bx	lr
   20cc8:	mov	r0, #9
   20ccc:	bx	lr
   20cd0:	vldr	d7, [pc, #40]	; 20d00 <floor@plt+0xf934>
   20cd4:	vldr	d3, [r0, #80]	; 0x50
   20cd8:	vldr	d4, [r0, #72]	; 0x48
   20cdc:	vldr	d5, [r0, #64]	; 0x40
   20ce0:	vldr	d6, [r0, #56]	; 0x38
   20ce4:	vdiv.f64	d1, d3, d7
   20ce8:	sub	sp, sp, #32
   20cec:	vdiv.f64	d0, d4, d7
   20cf0:	vadd.f64	d1, d1, d5
   20cf4:	vadd.f64	d0, d0, d6
   20cf8:	add	sp, sp, #32
   20cfc:	bx	lr
   20d00:	ldrbtvs	r3, [pc], -sp, asr #23
   20d04:	mulmi	r6, lr, r0
   20d08:	vldr	d7, [pc, #40]	; 20d38 <floor@plt+0xf96c>
   20d0c:	vldr	d6, [r0, #80]	; 0x50
   20d10:	vldr	d4, [r0, #72]	; 0x48
   20d14:	vldr	d5, [r0, #64]	; 0x40
   20d18:	vldr	d0, [r0, #56]	; 0x38
   20d1c:	vdiv.f64	d1, d6, d7
   20d20:	sub	sp, sp, #32
   20d24:	vdiv.f64	d6, d4, d7
   20d28:	vadd.f64	d1, d1, d5
   20d2c:	vsub.f64	d0, d0, d6
   20d30:	add	sp, sp, #32
   20d34:	bx	lr
   20d38:	ldrbtvs	r3, [pc], -sp, asr #23
   20d3c:	mulmi	r6, lr, r0
   20d40:	vldr	d7, [pc, #40]	; 20d70 <floor@plt+0xf9a4>
   20d44:	vldr	d3, [r0, #80]	; 0x50
   20d48:	vldr	d4, [r0, #72]	; 0x48
   20d4c:	vldr	d1, [r0, #64]	; 0x40
   20d50:	vldr	d6, [r0, #56]	; 0x38
   20d54:	vdiv.f64	d5, d3, d7
   20d58:	sub	sp, sp, #32
   20d5c:	vdiv.f64	d0, d4, d7
   20d60:	vsub.f64	d1, d1, d5
   20d64:	vadd.f64	d0, d0, d6
   20d68:	add	sp, sp, #32
   20d6c:	bx	lr
   20d70:	ldrbtvs	r3, [pc], -sp, asr #23
   20d74:	mulmi	r6, lr, r0
   20d78:	vldr	d7, [pc, #40]	; 20da8 <floor@plt+0xf9dc>
   20d7c:	vldr	d6, [r0, #80]	; 0x50
   20d80:	vldr	d4, [r0, #72]	; 0x48
   20d84:	vldr	d1, [r0, #64]	; 0x40
   20d88:	vldr	d0, [r0, #56]	; 0x38
   20d8c:	vdiv.f64	d5, d6, d7
   20d90:	sub	sp, sp, #32
   20d94:	vdiv.f64	d6, d4, d7
   20d98:	vsub.f64	d1, d1, d5
   20d9c:	vsub.f64	d0, d0, d6
   20da0:	add	sp, sp, #32
   20da4:	bx	lr
   20da8:	ldrbtvs	r3, [pc], -sp, asr #23
   20dac:	mulmi	r6, lr, r0
   20db0:	vldr	d0, [r0, #72]	; 0x48
   20db4:	vldr	d7, [pc, #4]	; 20dc0 <floor@plt+0xf9f4>
   20db8:	vmul.f64	d0, d0, d7
   20dbc:	bx	lr
   20dc0:	andeq	r0, r0, r0
   20dc4:	svccc	0x00e00000
   20dc8:	mov	r0, #3
   20dcc:	bx	lr
   20dd0:	mov	r0, #2
   20dd4:	bx	lr
   20dd8:	add	r0, r0, #72	; 0x48
   20ddc:	sub	sp, sp, #32
   20de0:	ldm	r0, {r0, r1, r2, r3}
   20de4:	add	ip, sp, #32
   20de8:	stmdb	ip, {r0, r1, r2, r3}
   20dec:	vldr	d0, [sp, #16]
   20df0:	vldr	d1, [sp, #24]
   20df4:	add	sp, sp, #32
   20df8:	bx	lr
   20dfc:	mov	r0, #8
   20e00:	bx	lr
   20e04:	add	r0, r0, #88	; 0x58
   20e08:	sub	sp, sp, #32
   20e0c:	ldm	r0, {r0, r1, r2, r3}
   20e10:	add	ip, sp, #32
   20e14:	stmdb	ip, {r0, r1, r2, r3}
   20e18:	vldr	d0, [sp, #16]
   20e1c:	vldr	d1, [sp, #24]
   20e20:	add	sp, sp, #32
   20e24:	bx	lr
   20e28:	add	r0, r0, #104	; 0x68
   20e2c:	sub	sp, sp, #32
   20e30:	ldm	r0, {r0, r1, r2, r3}
   20e34:	add	ip, sp, #32
   20e38:	stmdb	ip, {r0, r1, r2, r3}
   20e3c:	vldr	d0, [sp, #16]
   20e40:	vldr	d1, [sp, #24]
   20e44:	add	sp, sp, #32
   20e48:	bx	lr
   20e4c:	add	r0, r0, #88	; 0x58
   20e50:	sub	sp, sp, #32
   20e54:	ldm	r0, {r0, r1, r2, r3}
   20e58:	add	ip, sp, #32
   20e5c:	stmdb	ip, {r0, r1, r2, r3}
   20e60:	vldr	d0, [sp, #16]
   20e64:	vldr	d1, [sp, #24]
   20e68:	add	sp, sp, #32
   20e6c:	bx	lr
   20e70:	vldr	d1, [r0, #96]	; 0x60
   20e74:	vldr	d5, [r0, #112]	; 0x70
   20e78:	vldr	d7, [r0, #88]	; 0x58
   20e7c:	vldr	d6, [r0, #104]	; 0x68
   20e80:	vldr	d0, [pc, #24]	; 20ea0 <floor@plt+0xfad4>
   20e84:	vadd.f64	d1, d1, d5
   20e88:	sub	sp, sp, #32
   20e8c:	vadd.f64	d7, d7, d6
   20e90:	vmul.f64	d1, d1, d0
   20e94:	vmul.f64	d0, d7, d0
   20e98:	add	sp, sp, #32
   20e9c:	bx	lr
   20ea0:	andeq	r0, r0, r0
   20ea4:	svccc	0x00e00000
   20ea8:	vldr	d7, [r0, #112]	; 0x70
   20eac:	vldr	d6, [r0, #96]	; 0x60
   20eb0:	sub	sp, sp, #32
   20eb4:	add	ip, sp, #32
   20eb8:	vsub.f64	d7, d7, d6
   20ebc:	vcmpe.f64	d7, #0.0
   20ec0:	vmrs	APSR_nzcv, fpscr
   20ec4:	addgt	r0, r0, #104	; 0x68
   20ec8:	addle	r0, r0, #88	; 0x58
   20ecc:	ldm	r0, {r0, r1, r2, r3}
   20ed0:	stmdb	ip, {r0, r1, r2, r3}
   20ed4:	vldr	d0, [sp, #16]
   20ed8:	vldr	d1, [sp, #24]
   20edc:	add	sp, sp, #32
   20ee0:	bx	lr
   20ee4:	vldr	d7, [r0, #112]	; 0x70
   20ee8:	vldr	d6, [r0, #96]	; 0x60
   20eec:	sub	sp, sp, #32
   20ef0:	add	ip, sp, #32
   20ef4:	vsub.f64	d7, d7, d6
   20ef8:	vcmpe.f64	d7, #0.0
   20efc:	vmrs	APSR_nzcv, fpscr
   20f00:	addmi	r0, r0, #104	; 0x68
   20f04:	addpl	r0, r0, #88	; 0x58
   20f08:	ldm	r0, {r0, r1, r2, r3}
   20f0c:	stmdb	ip, {r0, r1, r2, r3}
   20f10:	vldr	d0, [sp, #16]
   20f14:	vldr	d1, [sp, #24]
   20f18:	add	sp, sp, #32
   20f1c:	bx	lr
   20f20:	vldr	d7, [r0, #104]	; 0x68
   20f24:	vldr	d6, [r0, #88]	; 0x58
   20f28:	sub	sp, sp, #32
   20f2c:	add	ip, sp, #32
   20f30:	vsub.f64	d7, d7, d6
   20f34:	vcmpe.f64	d7, #0.0
   20f38:	vmrs	APSR_nzcv, fpscr
   20f3c:	addgt	r0, r0, #104	; 0x68
   20f40:	addle	r0, r0, #88	; 0x58
   20f44:	ldm	r0, {r0, r1, r2, r3}
   20f48:	stmdb	ip, {r0, r1, r2, r3}
   20f4c:	vldr	d0, [sp, #16]
   20f50:	vldr	d1, [sp, #24]
   20f54:	add	sp, sp, #32
   20f58:	bx	lr
   20f5c:	vldr	d7, [r0, #104]	; 0x68
   20f60:	vldr	d6, [r0, #88]	; 0x58
   20f64:	sub	sp, sp, #32
   20f68:	add	ip, sp, #32
   20f6c:	vsub.f64	d7, d7, d6
   20f70:	vcmpe.f64	d7, #0.0
   20f74:	vmrs	APSR_nzcv, fpscr
   20f78:	addmi	r0, r0, #104	; 0x68
   20f7c:	addpl	r0, r0, #88	; 0x58
   20f80:	ldm	r0, {r0, r1, r2, r3}
   20f84:	stmdb	ip, {r0, r1, r2, r3}
   20f88:	vldr	d0, [sp, #16]
   20f8c:	vldr	d1, [sp, #24]
   20f90:	add	sp, sp, #32
   20f94:	bx	lr
   20f98:	mov	r0, #6
   20f9c:	bx	lr
   20fa0:	mov	r0, #7
   20fa4:	bx	lr
   20fa8:	mov	r0, #5
   20fac:	bx	lr
   20fb0:	add	r0, r0, #128	; 0x80
   20fb4:	sub	sp, sp, #32
   20fb8:	ldm	r0, {r0, r1, r2, r3}
   20fbc:	add	ip, sp, #32
   20fc0:	stmdb	ip, {r0, r1, r2, r3}
   20fc4:	vldr	d0, [sp, #16]
   20fc8:	vldr	d1, [sp, #24]
   20fcc:	add	sp, sp, #32
   20fd0:	bx	lr
   20fd4:	add	r0, r0, #128	; 0x80
   20fd8:	sub	sp, sp, #32
   20fdc:	ldm	r0, {r0, r1, r2, r3}
   20fe0:	add	ip, sp, #32
   20fe4:	stmdb	ip, {r0, r1, r2, r3}
   20fe8:	vldr	d0, [sp, #16]
   20fec:	vldr	d1, [sp, #24]
   20ff0:	add	sp, sp, #32
   20ff4:	bx	lr
   20ff8:	vldr	d0, [r0, #144]	; 0x90
   20ffc:	bx	lr
   21000:	mov	r0, #4
   21004:	bx	lr
   21008:	bx	lr
   2100c:	push	{r4, lr}
   21010:	mov	r4, r0
   21014:	bl	286b0 <_ZdlPv@@Base>
   21018:	mov	r0, r4
   2101c:	pop	{r4, pc}
   21020:	ldr	r3, [pc, #20]	; 2103c <floor@plt+0xfc70>
   21024:	push	{r4, lr}
   21028:	mov	r4, r0
   2102c:	str	r3, [r0]
   21030:	bl	1e21c <floor@plt+0xce50>
   21034:	mov	r0, r4
   21038:	pop	{r4, pc}
   2103c:	andeq	pc, r2, r4, lsr #9
   21040:	ldr	r3, [pc, #28]	; 21064 <floor@plt+0xfc98>
   21044:	push	{r4, lr}
   21048:	mov	r4, r0
   2104c:	str	r3, [r0]
   21050:	bl	1e21c <floor@plt+0xce50>
   21054:	mov	r0, r4
   21058:	bl	286b0 <_ZdlPv@@Base>
   2105c:	mov	r0, r4
   21060:	pop	{r4, pc}
   21064:	andeq	pc, r2, r4, lsr #9
   21068:	ldr	r3, [pc, #20]	; 21084 <floor@plt+0xfcb8>
   2106c:	push	{r4, lr}
   21070:	mov	r4, r0
   21074:	str	r3, [r0]
   21078:	bl	1e21c <floor@plt+0xce50>
   2107c:	mov	r0, r4
   21080:	pop	{r4, pc}
   21084:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   21088:	ldr	r3, [pc, #28]	; 210ac <floor@plt+0xfce0>
   2108c:	push	{r4, lr}
   21090:	mov	r4, r0
   21094:	str	r3, [r0]
   21098:	bl	1e21c <floor@plt+0xce50>
   2109c:	mov	r0, r4
   210a0:	bl	286b0 <_ZdlPv@@Base>
   210a4:	mov	r0, r4
   210a8:	pop	{r4, pc}
   210ac:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   210b0:	ldr	r3, [pc, #20]	; 210cc <floor@plt+0xfd00>
   210b4:	push	{r4, lr}
   210b8:	mov	r4, r0
   210bc:	str	r3, [r0]
   210c0:	bl	1e21c <floor@plt+0xce50>
   210c4:	mov	r0, r4
   210c8:	pop	{r4, pc}
   210cc:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   210d0:	ldr	r3, [pc, #28]	; 210f4 <floor@plt+0xfd28>
   210d4:	push	{r4, lr}
   210d8:	mov	r4, r0
   210dc:	str	r3, [r0]
   210e0:	bl	1e21c <floor@plt+0xce50>
   210e4:	mov	r0, r4
   210e8:	bl	286b0 <_ZdlPv@@Base>
   210ec:	mov	r0, r4
   210f0:	pop	{r4, pc}
   210f4:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   210f8:	ldr	r3, [pc, #20]	; 21114 <floor@plt+0xfd48>
   210fc:	push	{r4, lr}
   21100:	mov	r4, r0
   21104:	str	r3, [r0]
   21108:	bl	1e21c <floor@plt+0xce50>
   2110c:	mov	r0, r4
   21110:	pop	{r4, pc}
   21114:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   21118:	ldr	r3, [pc, #28]	; 2113c <floor@plt+0xfd70>
   2111c:	push	{r4, lr}
   21120:	mov	r4, r0
   21124:	str	r3, [r0]
   21128:	bl	1e21c <floor@plt+0xce50>
   2112c:	mov	r0, r4
   21130:	bl	286b0 <_ZdlPv@@Base>
   21134:	mov	r0, r4
   21138:	pop	{r4, pc}
   2113c:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   21140:	ldr	r3, [pc, #20]	; 2115c <floor@plt+0xfd90>
   21144:	push	{r4, lr}
   21148:	mov	r4, r0
   2114c:	str	r3, [r0]
   21150:	bl	1e21c <floor@plt+0xce50>
   21154:	mov	r0, r4
   21158:	pop	{r4, pc}
   2115c:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   21160:	ldr	r3, [pc, #28]	; 21184 <floor@plt+0xfdb8>
   21164:	push	{r4, lr}
   21168:	mov	r4, r0
   2116c:	str	r3, [r0]
   21170:	bl	1e21c <floor@plt+0xce50>
   21174:	mov	r0, r4
   21178:	bl	286b0 <_ZdlPv@@Base>
   2117c:	mov	r0, r4
   21180:	pop	{r4, pc}
   21184:	andeq	pc, r2, ip, lsl r5	; <UNPREDICTABLE>
   21188:	ldr	r3, [pc, #20]	; 211a4 <floor@plt+0xfdd8>
   2118c:	push	{r4, lr}
   21190:	mov	r4, r0
   21194:	str	r3, [r0]
   21198:	bl	1e21c <floor@plt+0xce50>
   2119c:	mov	r0, r4
   211a0:	pop	{r4, pc}
   211a4:	andeq	pc, r2, ip, lsl #12
   211a8:	ldr	r3, [pc, #28]	; 211cc <floor@plt+0xfe00>
   211ac:	push	{r4, lr}
   211b0:	mov	r4, r0
   211b4:	str	r3, [r0]
   211b8:	bl	1e21c <floor@plt+0xce50>
   211bc:	mov	r0, r4
   211c0:	bl	286b0 <_ZdlPv@@Base>
   211c4:	mov	r0, r4
   211c8:	pop	{r4, pc}
   211cc:	andeq	pc, r2, ip, lsl #12
   211d0:	ldr	r3, [pc, #20]	; 211ec <floor@plt+0xfe20>
   211d4:	push	{r4, lr}
   211d8:	mov	r4, r0
   211dc:	str	r3, [r0]
   211e0:	bl	1e330 <floor@plt+0xcf64>
   211e4:	mov	r0, r4
   211e8:	pop	{r4, pc}
   211ec:	strdeq	pc, [r2], -ip
   211f0:	ldr	r3, [pc, #28]	; 21214 <floor@plt+0xfe48>
   211f4:	push	{r4, lr}
   211f8:	mov	r4, r0
   211fc:	str	r3, [r0]
   21200:	bl	1e330 <floor@plt+0xcf64>
   21204:	mov	r0, r4
   21208:	bl	286b0 <_ZdlPv@@Base>
   2120c:	mov	r0, r4
   21210:	pop	{r4, pc}
   21214:	strdeq	pc, [r2], -ip
   21218:	ldr	r3, [pc, #20]	; 21234 <floor@plt+0xfe68>
   2121c:	push	{r4, lr}
   21220:	mov	r4, r0
   21224:	str	r3, [r0]
   21228:	bl	1e330 <floor@plt+0xcf64>
   2122c:	mov	r0, r4
   21230:	pop	{r4, pc}
   21234:	andeq	pc, r2, r0, lsr #4
   21238:	ldr	r3, [pc, #28]	; 2125c <floor@plt+0xfe90>
   2123c:	push	{r4, lr}
   21240:	mov	r4, r0
   21244:	str	r3, [r0]
   21248:	bl	1e330 <floor@plt+0xcf64>
   2124c:	mov	r0, r4
   21250:	bl	286b0 <_ZdlPv@@Base>
   21254:	mov	r0, r4
   21258:	pop	{r4, pc}
   2125c:	andeq	pc, r2, r0, lsr #4
   21260:	push	{r4, r5, r6, r7, lr}
   21264:	vpush	{d8-d10}
   21268:	ldr	r6, [pc, #280]	; 21388 <floor@plt+0xffbc>
   2126c:	vmov.f64	d9, d1
   21270:	mov	r5, r1
   21274:	sub	sp, sp, #156	; 0x9c
   21278:	ldr	r3, [r6]
   2127c:	mov	r7, r0
   21280:	vmov.f64	d8, d0
   21284:	add	r0, sp, #16
   21288:	vmov.f64	d0, d2
   2128c:	add	r1, sp, #8
   21290:	mov	r4, r2
   21294:	str	r3, [sp, #148]	; 0x94
   21298:	bl	11264 <sincos@plt>
   2129c:	vmov.f64	d0, d9
   212a0:	add	r1, sp, #8
   212a4:	add	r0, sp, #16
   212a8:	vldr	d9, [sp, #8]
   212ac:	vldr	d10, [sp, #16]
   212b0:	bl	11264 <sincos@plt>
   212b4:	mov	ip, r4
   212b8:	add	lr, sp, #120	; 0x78
   212bc:	ldm	ip!, {r0, r1, r2, r3}
   212c0:	vldr	d1, [sp, #16]
   212c4:	vldr	d0, [sp, #8]
   212c8:	stmia	lr!, {r0, r1, r2, r3}
   212cc:	mov	r3, #1
   212d0:	ldm	ip, {r0, r1}
   212d4:	ldr	r2, [r7]
   212d8:	str	r3, [sp, #120]	; 0x78
   212dc:	stm	lr, {r0, r1}
   212e0:	add	r0, sp, #24
   212e4:	ldr	r4, [r2, #36]	; 0x24
   212e8:	bl	1c6e4 <floor@plt+0xb318>
   212ec:	vmov.f64	d0, d8
   212f0:	add	r0, sp, #24
   212f4:	bl	1c860 <floor@plt+0xb494>
   212f8:	add	r1, sp, #40	; 0x28
   212fc:	mov	r0, r5
   21300:	vstr	d1, [sp, #48]	; 0x30
   21304:	vstr	d0, [sp, #40]	; 0x28
   21308:	bl	1c7fc <floor@plt+0xb430>
   2130c:	add	r0, sp, #72	; 0x48
   21310:	vstr	d1, [sp, #64]	; 0x40
   21314:	vstr	d0, [sp, #56]	; 0x38
   21318:	vmov.f64	d1, d10
   2131c:	vmov.f64	d0, d9
   21320:	bl	1c6e4 <floor@plt+0xb318>
   21324:	vmov.f64	d0, d8
   21328:	add	r0, sp, #72	; 0x48
   2132c:	bl	1c860 <floor@plt+0xb494>
   21330:	mov	r0, r5
   21334:	add	r1, sp, #88	; 0x58
   21338:	vstr	d1, [sp, #96]	; 0x60
   2133c:	vstr	d0, [sp, #88]	; 0x58
   21340:	bl	1c7fc <floor@plt+0xb430>
   21344:	add	r3, sp, #120	; 0x78
   21348:	mov	r2, r5
   2134c:	str	r3, [sp]
   21350:	mov	r0, r7
   21354:	add	r3, sp, #104	; 0x68
   21358:	add	r1, sp, #56	; 0x38
   2135c:	vstr	d1, [sp, #112]	; 0x70
   21360:	vstr	d0, [sp, #104]	; 0x68
   21364:	blx	r4
   21368:	ldr	r2, [sp, #148]	; 0x94
   2136c:	ldr	r3, [r6]
   21370:	cmp	r2, r3
   21374:	bne	21384 <floor@plt+0xffb8>
   21378:	add	sp, sp, #156	; 0x9c
   2137c:	vpop	{d8-d10}
   21380:	pop	{r4, r5, r6, r7, pc}
   21384:	bl	111e0 <__stack_chk_fail@plt>
   21388:	andeq	r1, r4, r0, ror sp
   2138c:	push	{r4, r5, r6, r7, r8, r9, lr}
   21390:	vpush	{d8-d11}
   21394:	ldr	r9, [pc, #436]	; 21550 <floor@plt+0x10184>
   21398:	mov	r6, r2
   2139c:	ldr	r2, [r2]
   213a0:	sub	sp, sp, #36	; 0x24
   213a4:	ldr	r3, [r9]
   213a8:	cmp	r2, #3
   213ac:	mov	r5, r0
   213b0:	mov	r8, r1
   213b4:	vmov.f64	d11, d0
   213b8:	str	r3, [sp, #28]
   213bc:	bne	214e0 <floor@plt+0x10114>
   213c0:	vldr	d6, [r6, #8]
   213c4:	vldr	d7, [pc, #332]	; 21518 <floor@plt+0x1014c>
   213c8:	mov	lr, r6
   213cc:	mov	ip, sp
   213d0:	vdiv.f64	d8, d6, d11
   213d4:	ldm	lr!, {r0, r1, r2, r3}
   213d8:	mov	r4, #1
   213dc:	stmia	ip!, {r0, r1, r2, r3}
   213e0:	ldm	lr, {r0, r1}
   213e4:	str	r4, [sp]
   213e8:	stm	ip, {r0, r1}
   213ec:	vcmpe.f64	d8, d7
   213f0:	vmrs	APSR_nzcv, fpscr
   213f4:	blt	21418 <floor@plt+0x1004c>
   213f8:	vldr	d9, [pc, #288]	; 21520 <floor@plt+0x10154>
   213fc:	ldr	r3, [r5]
   21400:	vcmpe.f64	d8, d9
   21404:	vmrs	APSR_nzcv, fpscr
   21408:	bpl	214c4 <floor@plt+0x100f8>
   2140c:	vsub.f64	d9, d9, d8
   21410:	mov	r7, #4
   21414:	b	21458 <floor@plt+0x1008c>
   21418:	vldr	d7, [pc, #264]	; 21528 <floor@plt+0x1015c>
   2141c:	vldr	d0, [pc, #268]	; 21530 <floor@plt+0x10164>
   21420:	vmul.f64	d7, d8, d7
   21424:	vdiv.f64	d0, d0, d7
   21428:	bl	111bc <ceil@plt>
   2142c:	vcvt.s32.f64	s0, d0
   21430:	vmov	r3, s0
   21434:	lsl	r7, r3, #2
   21438:	cmp	r7, #0
   2143c:	ble	214a8 <floor@plt+0x100dc>
   21440:	vmov	s15, r7
   21444:	vldr	d6, [pc, #236]	; 21538 <floor@plt+0x1016c>
   21448:	ldr	r3, [r5]
   2144c:	vcvt.f64.s32	d7, s15
   21450:	vdiv.f64	d9, d6, d7
   21454:	vsub.f64	d9, d9, d8
   21458:	vldr	d10, [pc, #224]	; 21540 <floor@plt+0x10174>
   2145c:	vadd.f64	d9, d8, d9
   21460:	mov	r4, #0
   21464:	vmul.f64	d10, d8, d10
   21468:	b	21470 <floor@plt+0x100a4>
   2146c:	ldr	r3, [r5]
   21470:	vmov	s15, r4
   21474:	vmov.f64	d1, d10
   21478:	ldr	r3, [r3, #88]	; 0x58
   2147c:	mov	r2, r6
   21480:	vcvt.f64.s32	d7, s15
   21484:	add	r4, r4, #1
   21488:	vmov.f64	d0, d11
   2148c:	mov	r1, r8
   21490:	mov	r0, r5
   21494:	vnmls.f64	d1, d7, d9
   21498:	vadd.f64	d2, d8, d1
   2149c:	blx	r3
   214a0:	cmp	r4, r7
   214a4:	blt	2146c <floor@plt+0x100a0>
   214a8:	ldr	r2, [sp, #28]
   214ac:	ldr	r3, [r9]
   214b0:	cmp	r2, r3
   214b4:	bne	21510 <floor@plt+0x10144>
   214b8:	add	sp, sp, #36	; 0x24
   214bc:	vpop	{d8-d11}
   214c0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   214c4:	vldr	d9, [pc, #100]	; 21530 <floor@plt+0x10164>
   214c8:	vcmpe.f64	d8, d9
   214cc:	vmrs	APSR_nzcv, fpscr
   214d0:	bpl	214f0 <floor@plt+0x10124>
   214d4:	vsub.f64	d9, d9, d8
   214d8:	mov	r7, #2
   214dc:	b	21458 <floor@plt+0x1008c>
   214e0:	ldr	r1, [pc, #108]	; 21554 <floor@plt+0x10188>
   214e4:	mov	r0, #28
   214e8:	bl	26c88 <floor@plt+0x158bc>
   214ec:	b	213c0 <floor@plt+0xfff4>
   214f0:	ldr	r3, [r3, #16]
   214f4:	mov	r2, sp
   214f8:	vmov.f64	d0, d11
   214fc:	mov	r1, r8
   21500:	mov	r0, r5
   21504:	vldr	d1, [pc, #60]	; 21548 <floor@plt+0x1017c>
   21508:	blx	r3
   2150c:	b	214a8 <floor@plt+0x100dc>
   21510:	bl	111e0 <__stack_chk_fail@plt>
   21514:	nop			; (mov r0, r0)
   21518:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   2151c:	svccc	0x00e921fb
   21520:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   21524:	svccc	0x00f921fb
   21528:	andeq	r0, r0, r0
   2152c:	andsmi	r0, r0, r0
   21530:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   21534:	strdmi	r2, [r9], -fp
   21538:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   2153c:			; <UNDEFINED> instruction: 0x401921fb
   21540:	andeq	r0, r0, r0
   21544:	svccc	0x00e00000
   21548:	andeq	r0, r0, r0
   2154c:	svclt	0x00f00000	; IMB
   21550:	andeq	r1, r4, r0, ror sp
   21554:	andeq	pc, r2, r8, ror #25
   21558:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2155c:	vpush	{d8-d10}
   21560:	ldr	sl, [pc, #344]	; 216c0 <floor@plt+0x102f4>
   21564:	mov	r8, r2
   21568:	ldr	r2, [r2]
   2156c:	sub	sp, sp, #72	; 0x48
   21570:	ldr	r3, [sl]
   21574:	cmp	r2, #2
   21578:	mov	r5, r0
   2157c:	mov	r9, r1
   21580:	vmov.f64	d9, d0
   21584:	str	r3, [sp, #68]	; 0x44
   21588:	bne	21680 <floor@plt+0x102b4>
   2158c:	vldr	d5, [r8, #8]
   21590:	vldr	d6, [pc, #256]	; 21698 <floor@plt+0x102cc>
   21594:	vdiv.f64	d7, d5, d9
   21598:	vcmpe.f64	d7, d6
   2159c:	vmrs	APSR_nzcv, fpscr
   215a0:	bge	215d8 <floor@plt+0x1020c>
   215a4:	vadd.f64	d6, d7, d7
   215a8:	vldr	d5, [pc, #240]	; 216a0 <floor@plt+0x102d4>
   215ac:	vdiv.f64	d7, d5, d6
   215b0:	vcvt.s32.f64	s15, d7
   215b4:	vmov	r7, s15
   215b8:	lsl	r7, r7, #2
   215bc:	cmp	r7, #0
   215c0:	ble	21664 <floor@plt+0x10298>
   215c4:	vmov	s15, r7
   215c8:	vldr	d6, [pc, #216]	; 216a8 <floor@plt+0x102dc>
   215cc:	vcvt.f64.s32	d7, s15
   215d0:	vdiv.f64	d10, d6, d7
   215d4:	b	215e0 <floor@plt+0x10214>
   215d8:	vldr	d10, [pc, #192]	; 216a0 <floor@plt+0x102d4>
   215dc:	mov	r7, #2
   215e0:	vldr	d1, [pc, #200]	; 216b0 <floor@plt+0x102e4>
   215e4:	vldr	d0, [pc, #204]	; 216b8 <floor@plt+0x102ec>
   215e8:	mov	r4, #0
   215ec:	vmov.f64	d8, d1
   215f0:	b	2160c <floor@plt+0x10240>
   215f4:	vmov.f64	d0, d8
   215f8:	mov	r1, sp
   215fc:	add	r0, sp, #8
   21600:	bl	11264 <sincos@plt>
   21604:	vldr	d0, [sp]
   21608:	vldr	d1, [sp, #8]
   2160c:	ldr	r3, [r5]
   21610:	add	r0, sp, #16
   21614:	add	r4, r4, #1
   21618:	ldr	r6, [r3, #84]	; 0x54
   2161c:	bl	1c6e4 <floor@plt+0xb318>
   21620:	vmov.f64	d0, d9
   21624:	add	r0, sp, #16
   21628:	bl	1c860 <floor@plt+0xb494>
   2162c:	add	r1, sp, #32
   21630:	mov	r0, r9
   21634:	vstr	d1, [sp, #40]	; 0x28
   21638:	vstr	d0, [sp, #32]
   2163c:	bl	1c7fc <floor@plt+0xb430>
   21640:	mov	r2, r8
   21644:	add	r1, sp, #48	; 0x30
   21648:	mov	r0, r5
   2164c:	vstr	d0, [sp, #48]	; 0x30
   21650:	vstr	d1, [sp, #56]	; 0x38
   21654:	blx	r6
   21658:	cmp	r4, r7
   2165c:	vadd.f64	d8, d8, d10
   21660:	blt	215f4 <floor@plt+0x10228>
   21664:	ldr	r2, [sp, #68]	; 0x44
   21668:	ldr	r3, [sl]
   2166c:	cmp	r2, r3
   21670:	bne	21690 <floor@plt+0x102c4>
   21674:	add	sp, sp, #72	; 0x48
   21678:	vpop	{d8-d10}
   2167c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   21680:	ldr	r1, [pc, #60]	; 216c4 <floor@plt+0x102f8>
   21684:	mov	r0, #63	; 0x3f
   21688:	bl	26c88 <floor@plt+0x158bc>
   2168c:	b	2158c <floor@plt+0x101c0>
   21690:	bl	111e0 <__stack_chk_fail@plt>
   21694:	nop			; (mov r0, r0)
   21698:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   2169c:	svccc	0x00f921fb
   216a0:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   216a4:	strdmi	r2, [r9], -fp
   216a8:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   216ac:			; <UNDEFINED> instruction: 0x401921fb
	...
   216bc:	svccc	0x00f00000	; IMB
   216c0:	andeq	r1, r4, r0, ror sp
   216c4:	andeq	pc, r2, r8, ror #25
   216c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   216cc:	vpush	{d8-d13}
   216d0:	ldr	r8, [pc, #880]	; 21a48 <floor@plt+0x1067c>
   216d4:	mov	r9, r0
   216d8:	mov	sl, r1
   216dc:	sub	sp, sp, #128	; 0x80
   216e0:	ldr	r0, [r8]
   216e4:	ldr	r7, [sp, #212]	; 0xd4
   216e8:	mov	r6, r2
   216ec:	mov	r5, r3
   216f0:	ldr	ip, [r7]
   216f4:	str	r0, [sp, #124]	; 0x7c
   216f8:	cmp	ip, #1
   216fc:	ldr	r4, [sp, #208]	; 0xd0
   21700:	bne	21a04 <floor@plt+0x10638>
   21704:	vldr	d7, [r4]
   21708:	vcmp.f64	d7, #0.0
   2170c:	vmrs	APSR_nzcv, fpscr
   21710:	beq	219b8 <floor@plt+0x105ec>
   21714:	vldr	d7, [r4, #8]
   21718:	vcmp.f64	d7, #0.0
   2171c:	vmrs	APSR_nzcv, fpscr
   21720:	beq	219b8 <floor@plt+0x105ec>
   21724:	mov	r1, r5
   21728:	mov	r0, r6
   2172c:	bl	1c7fc <floor@plt+0xb430>
   21730:	add	r0, sp, #104	; 0x68
   21734:	vstr	d0, [sp, #104]	; 0x68
   21738:	vldr	d0, [pc, #760]	; 21a38 <floor@plt+0x1066c>
   2173c:	vstr	d1, [sp, #112]	; 0x70
   21740:	bl	1c844 <floor@plt+0xb478>
   21744:	vldr	d6, [r4, #8]
   21748:	vmov.f64	d7, d1
   2174c:	vldr	d1, [r4]
   21750:	vstr	d0, [sp, #24]
   21754:	vstr	d7, [sp, #32]
   21758:	vdiv.f64	d1, d0, d1
   2175c:	vdiv.f64	d0, d7, d6
   21760:	bl	11210 <atan2@plt>
   21764:	add	r0, sp, #16
   21768:	add	r1, sp, #8
   2176c:	bl	11264 <sincos@plt>
   21770:	vldr	d6, [r4, #8]
   21774:	vldr	d7, [r4]
   21778:	vldr	d1, [sp, #16]
   2177c:	vldr	d0, [sp, #8]
   21780:	add	r0, sp, #40	; 0x28
   21784:	vmul.f64	d1, d1, d6
   21788:	vmul.f64	d0, d0, d7
   2178c:	bl	1c6e4 <floor@plt+0xb318>
   21790:	vldr	d10, [r4, #8]
   21794:	vldr	d9, [r4]
   21798:	vldr	d6, [sp, #40]	; 0x28
   2179c:	vldr	d5, [sp, #48]	; 0x30
   217a0:	vmul.f64	d10, d10, d10
   217a4:	vmul.f64	d9, d9, d9
   217a8:	vmul.f64	d3, d10, d10
   217ac:	vmul.f64	d2, d9, d9
   217b0:	vsub.f64	d11, d9, d10
   217b4:	vmul.f64	d7, d6, d3
   217b8:	vmul.f64	d4, d5, d2
   217bc:	vmul.f64	d7, d7, d6
   217c0:	vmla.f64	d7, d4, d5
   217c4:	vdiv.f64	d1, d7, d2
   217c8:	vdiv.f64	d4, d1, d3
   217cc:	vmul.f64	d4, d4, d7
   217d0:	vdiv.f64	d1, d4, d2
   217d4:	vdiv.f64	d0, d1, d3
   217d8:	vmul.f64	d0, d0, d7
   217dc:	vcmp.f64	d0, #0.0
   217e0:	vsqrt.f64	d8, d0
   217e4:	vmrs	APSR_nzcv, fpscr
   217e8:	bmi	21a24 <floor@plt+0x10658>
   217ec:	vnmul.f64	d7, d11, d5
   217f0:	add	r0, sp, #56	; 0x38
   217f4:	vmul.f64	d11, d11, d6
   217f8:	vdiv.f64	d4, d7, d10
   217fc:	vdiv.f64	d7, d11, d9
   21800:	vmul.f64	d4, d4, d5
   21804:	vdiv.f64	d1, d4, d10
   21808:	vmul.f64	d7, d7, d6
   2180c:	vdiv.f64	d0, d7, d9
   21810:	vmul.f64	d1, d1, d5
   21814:	vmul.f64	d0, d0, d6
   21818:	bl	1c6e4 <floor@plt+0xb318>
   2181c:	vldr	d6, [sp, #56]	; 0x38
   21820:	vldr	d7, [sp, #64]	; 0x40
   21824:	vldr	d1, [r6]
   21828:	vldr	d0, [r6, #8]
   2182c:	vsub.f64	d1, d1, d6
   21830:	vsub.f64	d0, d0, d7
   21834:	bl	11210 <atan2@plt>
   21838:	add	r1, sp, #8
   2183c:	add	r0, sp, #16
   21840:	vmov.f64	d11, d0
   21844:	bl	11264 <sincos@plt>
   21848:	vldr	d6, [sp, #56]	; 0x38
   2184c:	vldr	d7, [sp, #64]	; 0x40
   21850:	vldr	d1, [r5]
   21854:	vldr	d0, [r5, #8]
   21858:	vldr	d9, [sp, #8]
   2185c:	vldr	d10, [sp, #16]
   21860:	vsub.f64	d1, d1, d6
   21864:	vsub.f64	d0, d0, d7
   21868:	bl	11210 <atan2@plt>
   2186c:	add	r1, sp, #8
   21870:	add	r0, sp, #16
   21874:	vmov.f64	d13, d0
   21878:	bl	11264 <sincos@plt>
   2187c:	vmul.f64	d1, d10, d8
   21880:	add	r0, sp, #104	; 0x68
   21884:	vmul.f64	d0, d9, d8
   21888:	vldr	d10, [sp, #8]
   2188c:	vldr	d9, [sp, #16]
   21890:	bl	1c6e4 <floor@plt+0xb318>
   21894:	add	r1, sp, #56	; 0x38
   21898:	add	r0, sp, #104	; 0x68
   2189c:	bl	1c7fc <floor@plt+0xb430>
   218a0:	add	r0, sp, #104	; 0x68
   218a4:	vstr	d0, [sp, #72]	; 0x48
   218a8:	vstr	d1, [sp, #80]	; 0x50
   218ac:	vmul.f64	d0, d10, d8
   218b0:	vmul.f64	d1, d9, d8
   218b4:	bl	1c6e4 <floor@plt+0xb318>
   218b8:	add	r1, sp, #56	; 0x38
   218bc:	add	r0, sp, #104	; 0x68
   218c0:	bl	1c7fc <floor@plt+0xb430>
   218c4:	add	r1, sp, #72	; 0x48
   218c8:	mov	r0, r6
   218cc:	vstr	d1, [sp, #96]	; 0x60
   218d0:	vstr	d0, [sp, #88]	; 0x58
   218d4:	bl	1c820 <floor@plt+0xb454>
   218d8:	add	r0, sp, #104	; 0x68
   218dc:	vstr	d1, [sp, #112]	; 0x70
   218e0:	vstr	d0, [sp, #104]	; 0x68
   218e4:	bl	1c898 <floor@plt+0xb4cc>
   218e8:	mov	r1, r6
   218ec:	mov	r0, r6
   218f0:	vmov.f64	d12, d0
   218f4:	bl	1c87c <floor@plt+0xb4b0>
   218f8:	vcmp.f64	d0, #0.0
   218fc:	vsqrt.f64	d10, d0
   21900:	vmrs	APSR_nzcv, fpscr
   21904:	bmi	21a1c <floor@plt+0x10650>
   21908:	add	r1, sp, #88	; 0x58
   2190c:	mov	r0, r5
   21910:	bl	1c820 <floor@plt+0xb454>
   21914:	add	r0, sp, #104	; 0x68
   21918:	vdiv.f64	d9, d12, d10
   2191c:	vstr	d1, [sp, #112]	; 0x70
   21920:	vstr	d0, [sp, #104]	; 0x68
   21924:	bl	1c898 <floor@plt+0xb4cc>
   21928:	mov	r1, r5
   2192c:	mov	r0, r5
   21930:	vmov.f64	d10, d0
   21934:	bl	1c87c <floor@plt+0xb4b0>
   21938:	vcmp.f64	d0, #0.0
   2193c:	vmov.f64	d12, d0
   21940:	vmrs	APSR_nzcv, fpscr
   21944:	bmi	21a14 <floor@plt+0x10648>
   21948:	vldr	d7, [pc, #240]	; 21a40 <floor@plt+0x10674>
   2194c:	vcmpe.f64	d9, d7
   21950:	vmrs	APSR_nzcv, fpscr
   21954:	bpl	2196c <floor@plt+0x105a0>
   21958:	vsqrt.f64	d5, d12
   2195c:	vdiv.f64	d6, d10, d5
   21960:	vcmpe.f64	d6, d7
   21964:	vmrs	APSR_nzcv, fpscr
   21968:	bmi	219c8 <floor@plt+0x105fc>
   2196c:	mov	r2, r6
   21970:	add	r3, sp, #40	; 0x28
   21974:	mov	r1, sl
   21978:	mov	r0, r9
   2197c:	stm	sp, {r4, r7}
   21980:	bl	216c8 <floor@plt+0x102fc>
   21984:	stm	sp, {r4, r7}
   21988:	mov	r3, r5
   2198c:	add	r2, sp, #40	; 0x28
   21990:	mov	r1, sl
   21994:	mov	r0, r9
   21998:	bl	216c8 <floor@plt+0x102fc>
   2199c:	ldr	r2, [sp, #124]	; 0x7c
   219a0:	ldr	r3, [r8]
   219a4:	cmp	r2, r3
   219a8:	bne	21a34 <floor@plt+0x10668>
   219ac:	add	sp, sp, #128	; 0x80
   219b0:	vpop	{d8-d13}
   219b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   219b8:	ldr	r1, [pc, #140]	; 21a4c <floor@plt+0x10680>
   219bc:	mov	r0, #87	; 0x57
   219c0:	bl	26c88 <floor@plt+0x158bc>
   219c4:	b	21724 <floor@plt+0x10358>
   219c8:	ldr	r3, [r9]
   219cc:	mov	r1, sl
   219d0:	add	r0, sp, #56	; 0x38
   219d4:	ldr	r4, [r3, #88]	; 0x58
   219d8:	bl	1c7fc <floor@plt+0xb430>
   219dc:	mov	r2, r7
   219e0:	vmov.f64	d2, d13
   219e4:	add	r1, sp, #104	; 0x68
   219e8:	mov	r0, r9
   219ec:	vstr	d0, [sp, #104]	; 0x68
   219f0:	vstr	d1, [sp, #112]	; 0x70
   219f4:	vmov.f64	d0, d8
   219f8:	vmov.f64	d1, d11
   219fc:	blx	r4
   21a00:	b	2199c <floor@plt+0x105d0>
   21a04:	ldr	r1, [pc, #64]	; 21a4c <floor@plt+0x10680>
   21a08:	mov	r0, #86	; 0x56
   21a0c:	bl	26c88 <floor@plt+0x158bc>
   21a10:	b	21704 <floor@plt+0x10338>
   21a14:	bl	110c0 <sqrt@plt>
   21a18:	b	21948 <floor@plt+0x1057c>
   21a1c:	bl	110c0 <sqrt@plt>
   21a20:	b	21908 <floor@plt+0x1053c>
   21a24:	bl	110c0 <sqrt@plt>
   21a28:	vldr	d6, [sp, #40]	; 0x28
   21a2c:	vldr	d5, [sp, #48]	; 0x30
   21a30:	b	217ec <floor@plt+0x10420>
   21a34:	bl	111e0 <__stack_chk_fail@plt>
   21a38:	andeq	r0, r0, r0
   21a3c:	andmi	r0, r0, r0
   21a40:	bl	7326fc <stdout@@GLIBC_2.4+0x6f02a8>
   21a44:	svccc	0x001a36e2
   21a48:	andeq	r1, r4, r0, ror sp
   21a4c:	andeq	pc, r2, r8, ror #25
   21a50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21a54:	vpush	{d8-d15}
   21a58:	ldr	ip, [r3]
   21a5c:	mov	r5, r3
   21a60:	ldr	r3, [pc, #896]	; 21de8 <floor@plt+0x10a1c>
   21a64:	sub	sp, sp, #188	; 0xbc
   21a68:	cmp	ip, #3
   21a6c:	ldr	r3, [r3]
   21a70:	str	r0, [sp, #32]
   21a74:	str	r1, [sp, #36]	; 0x24
   21a78:	str	r2, [sp, #28]
   21a7c:	str	r3, [sp, #180]	; 0xb4
   21a80:	bne	21d7c <floor@plt+0x109b0>
   21a84:	ldr	r3, [sp, #28]
   21a88:	vldr	d6, [pc, #768]	; 21d90 <floor@plt+0x109c4>
   21a8c:	vldr	d1, [pc, #772]	; 21d98 <floor@plt+0x109cc>
   21a90:	vldr	d9, [r3]
   21a94:	vldr	d11, [r3, #8]
   21a98:	vldr	d3, [pc, #768]	; 21da0 <floor@plt+0x109d4>
   21a9c:	vldr	d2, [pc, #772]	; 21da8 <floor@plt+0x109dc>
   21aa0:	vldr	d14, [r5, #8]
   21aa4:	vadd.f64	d7, d9, d11
   21aa8:	vsub.f64	d4, d9, d11
   21aac:	vmov.f64	d0, d3
   21ab0:	mov	lr, r5
   21ab4:	add	ip, sp, #152	; 0x98
   21ab8:	ldm	lr!, {r0, r1, r2, r3}
   21abc:	mov	r4, #1
   21ac0:	vldr	d13, [pc, #744]	; 21db0 <floor@plt+0x109e4>
   21ac4:	vmul.f64	d2, d7, d2
   21ac8:	stmia	ip!, {r0, r1, r2, r3}
   21acc:	vdiv.f64	d5, d4, d7
   21ad0:	vldr	d4, [pc, #736]	; 21db8 <floor@plt+0x109ec>
   21ad4:	vldr	d7, [pc, #740]	; 21dc0 <floor@plt+0x109f4>
   21ad8:	ldm	lr, {r0, r1}
   21adc:	str	r4, [sp, #152]	; 0x98
   21ae0:	mov	r9, #0
   21ae4:	vmul.f64	d9, d9, d7
   21ae8:	stm	ip, {r0, r1}
   21aec:	vmul.f64	d11, d11, d7
   21af0:	add	r8, sp, #72	; 0x48
   21af4:	mov	r7, r9
   21af8:	add	r6, sp, #88	; 0x58
   21afc:	add	sl, sp, #104	; 0x68
   21b00:	vmul.f64	d6, d5, d6
   21b04:	vmul.f64	d1, d5, d1
   21b08:	vmul.f64	d6, d6, d5
   21b0c:	vmls.f64	d0, d1, d5
   21b10:	vldr	d1, [pc, #688]	; 21dc8 <floor@plt+0x109fc>
   21b14:	vmov.f64	d15, d1
   21b18:	vmul.f64	d6, d6, d5
   21b1c:	vmls.f64	d3, d6, d5
   21b20:	vdiv.f64	d6, d3, d0
   21b24:	vmov.f64	d0, d9
   21b28:	vmul.f64	d2, d6, d2
   21b2c:	vdiv.f64	d6, d2, d14
   21b30:	vmla.f64	d7, d6, d4
   21b34:	vcvt.s32.f64	s14, d7
   21b38:	vmov	r3, s14
   21b3c:	lsl	r3, r3, #3
   21b40:	cmp	r3, #7
   21b44:	str	r3, [sp, #12]
   21b48:	asrgt	r3, r3, r4
   21b4c:	vmulle.f64	d14, d2, d4
   21b50:	vldrle	d6, [pc, #632]	; 21dd0 <floor@plt+0x10a04>
   21b54:	vmovgt	s12, r3
   21b58:	add	r4, sp, #56	; 0x38
   21b5c:	movle	r3, #8
   21b60:	mov	r0, r4
   21b64:	vcvtgt.f64.s32	d6, s12
   21b68:	strle	r3, [sp, #12]
   21b6c:	vmls.f64	d2, d14, d6
   21b70:	vdiv.f64	d7, d2, d6
   21b74:	vstr	d7, [sp, #16]
   21b78:	bl	1c6e4 <floor@plt+0xb318>
   21b7c:	vldr	d5, [r5, #8]
   21b80:	vldr	d4, [pc, #592]	; 21dd8 <floor@plt+0x10a0c>
   21b84:	ldm	r4, {r0, r1, r2, r3}
   21b88:	add	r5, sp, #136	; 0x88
   21b8c:	vdiv.f64	d6, d4, d5
   21b90:	stm	r8, {r0, r1, r2, r3}
   21b94:	vcvt.s32.f64	s15, d6
   21b98:	vstr	s15, [sp, #24]
   21b9c:	asr	r3, r9, #1
   21ba0:	add	fp, r9, #1
   21ba4:	vmov	s15, r3
   21ba8:	asr	r2, fp, #1
   21bac:	vmov	s16, r2
   21bb0:	vcvt.f64.s32	d6, s15
   21bb4:	vldr	d7, [pc, #516]	; 21dc0 <floor@plt+0x109f4>
   21bb8:	ldm	r4, {r0, r1, r2, r3}
   21bbc:	vcvt.f64.s32	d8, s16
   21bc0:	stm	r6, {r0, r1, r2, r3}
   21bc4:	vadd.f64	d6, d6, d7
   21bc8:	vldr	d7, [sp, #16]
   21bcc:	ldm	r8, {r0, r1, r2, r3}
   21bd0:	vmul.f64	d8, d8, d7
   21bd4:	stm	sl, {r0, r1, r2, r3}
   21bd8:	vmla.f64	d8, d6, d14
   21bdc:	vcmpe.f64	d8, d15
   21be0:	vmrs	APSR_nzcv, fpscr
   21be4:	ble	21c7c <floor@plt+0x108b0>
   21be8:	vldr	s15, [sp, #24]
   21bec:	vmov.f64	d10, d15
   21bf0:	vcvt.f64.s32	d12, s15
   21bf4:	b	21bfc <floor@plt+0x10830>
   21bf8:	vmov.f64	d10, d15
   21bfc:	add	r7, r7, #1
   21c00:	ldm	r4, {r0, r1, r2, r3}
   21c04:	lsl	ip, r7, #1
   21c08:	vmov	s0, ip
   21c0c:	stm	r6, {r0, r1, r2, r3}
   21c10:	add	r1, sp, #40	; 0x28
   21c14:	add	r0, sp, #48	; 0x30
   21c18:	vcvt.f64.s32	d0, s0
   21c1c:	vmul.f64	d0, d0, d13
   21c20:	vdiv.f64	d0, d0, d12
   21c24:	bl	11264 <sincos@plt>
   21c28:	vldr	d0, [sp, #40]	; 0x28
   21c2c:	vldr	d1, [sp, #48]	; 0x30
   21c30:	mov	r0, r5
   21c34:	vmul.f64	d0, d0, d9
   21c38:	vmul.f64	d1, d1, d11
   21c3c:	bl	1c6e4 <floor@plt+0xb318>
   21c40:	ldm	r5, {r0, r1, r2, r3}
   21c44:	stm	r4, {r0, r1, r2, r3}
   21c48:	mov	r1, r6
   21c4c:	mov	r0, r4
   21c50:	bl	1c820 <floor@plt+0xb454>
   21c54:	mov	r0, r5
   21c58:	vstr	d0, [sp, #136]	; 0x88
   21c5c:	vstr	d1, [sp, #144]	; 0x90
   21c60:	bl	1c898 <floor@plt+0xb4cc>
   21c64:	vadd.f64	d15, d0, d15
   21c68:	vcmpe.f64	d8, d15
   21c6c:	vmrs	APSR_nzcv, fpscr
   21c70:	bgt	21bf8 <floor@plt+0x1082c>
   21c74:	vsub.f64	d10, d8, d10
   21c78:	vdiv.f64	d8, d10, d0
   21c7c:	mov	r1, r6
   21c80:	mov	r0, r4
   21c84:	bl	1c820 <floor@plt+0xb454>
   21c88:	add	r0, sp, #120	; 0x78
   21c8c:	vstr	d0, [sp, #120]	; 0x78
   21c90:	vmov.f64	d0, d8
   21c94:	vstr	d1, [sp, #128]	; 0x80
   21c98:	bl	1c860 <floor@plt+0xb494>
   21c9c:	mov	r1, r5
   21ca0:	mov	r0, r6
   21ca4:	vstr	d1, [sp, #144]	; 0x90
   21ca8:	vstr	d0, [sp, #136]	; 0x88
   21cac:	bl	1c7fc <floor@plt+0xb430>
   21cb0:	vmov.f64	d6, d1
   21cb4:	vstr	d0, [sp, #72]	; 0x48
   21cb8:	vdiv.f64	d1, d0, d9
   21cbc:	vstr	d6, [sp, #80]	; 0x50
   21cc0:	vdiv.f64	d0, d6, d11
   21cc4:	bl	11210 <atan2@plt>
   21cc8:	add	r1, sp, #40	; 0x28
   21ccc:	add	r0, sp, #48	; 0x30
   21cd0:	bl	11264 <sincos@plt>
   21cd4:	vldr	d0, [sp, #40]	; 0x28
   21cd8:	vldr	d1, [sp, #48]	; 0x30
   21cdc:	mov	r0, r5
   21ce0:	vmul.f64	d0, d0, d9
   21ce4:	vmul.f64	d1, d1, d11
   21ce8:	bl	1c6e4 <floor@plt+0xb318>
   21cec:	ldm	r5, {r0, r1, r2, r3}
   21cf0:	mvn	ip, r9
   21cf4:	cmp	r9, #1
   21cf8:	movle	ip, #0
   21cfc:	andgt	ip, ip, #1
   21d00:	cmp	ip, #0
   21d04:	stm	r8, {r0, r1, r2, r3}
   21d08:	bne	21d20 <floor@plt+0x10954>
   21d0c:	ldr	r3, [sp, #12]
   21d10:	cmp	r3, r9
   21d14:	beq	21d5c <floor@plt+0x10990>
   21d18:	mov	r9, fp
   21d1c:	b	21b9c <floor@plt+0x107d0>
   21d20:	vldr	d0, [pc, #184]	; 21de0 <floor@plt+0x10a14>
   21d24:	ldr	r0, [sp, #28]
   21d28:	bl	1c844 <floor@plt+0xb478>
   21d2c:	add	r3, sp, #152	; 0x98
   21d30:	str	r3, [sp, #4]
   21d34:	str	r5, [sp]
   21d38:	mov	r3, r8
   21d3c:	mov	r2, sl
   21d40:	ldrd	r0, [sp, #32]
   21d44:	vstr	d0, [sp, #136]	; 0x88
   21d48:	vstr	d1, [sp, #144]	; 0x90
   21d4c:	bl	216c8 <floor@plt+0x102fc>
   21d50:	ldr	r3, [sp, #12]
   21d54:	cmp	r3, r9
   21d58:	bne	21d18 <floor@plt+0x1094c>
   21d5c:	ldr	r3, [pc, #132]	; 21de8 <floor@plt+0x10a1c>
   21d60:	ldr	r2, [sp, #180]	; 0xb4
   21d64:	ldr	r3, [r3]
   21d68:	cmp	r2, r3
   21d6c:	bne	21d8c <floor@plt+0x109c0>
   21d70:	add	sp, sp, #188	; 0xbc
   21d74:	vpop	{d8-d15}
   21d78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21d7c:	ldr	r1, [pc, #104]	; 21dec <floor@plt+0x10a20>
   21d80:	mov	r0, #126	; 0x7e
   21d84:	bl	26c88 <floor@plt+0x158bc>
   21d88:	b	21a84 <floor@plt+0x106b8>
   21d8c:	bl	111e0 <__stack_chk_fail@plt>
   21d90:	andeq	r0, r0, r0
   21d94:	andmi	r0, r8, r0
   21d98:	andeq	r0, r0, r0
   21d9c:	eorsmi	r0, r0, r0
   21da0:	andeq	r0, r0, r0
   21da4:	subsmi	r0, r0, r0
   21da8:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   21dac:	svccc	0x00f921fb
   21db0:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   21db4:	strdmi	r2, [r9], -fp
   21db8:	andeq	r0, r0, r0
   21dbc:	svccc	0x00c00000
   21dc0:	andeq	r0, r0, r0
   21dc4:	svccc	0x00e00000
	...
   21dd4:	andsmi	r0, r0, r0
   21dd8:	andeq	r0, r0, r0
   21ddc:	eormi	r0, r4, r0
   21de0:	andeq	r0, r0, r0
   21de4:	andmi	r0, r0, r0
   21de8:	andeq	r1, r4, r0, ror sp
   21dec:	andeq	pc, r2, r8, ror #25
   21df0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21df4:	vpush	{d8-d15}
   21df8:	ldr	ip, [r3]
   21dfc:	mov	fp, r3
   21e00:	ldr	r3, [pc, #784]	; 22118 <floor@plt+0x10d4c>
   21e04:	sub	sp, sp, #156	; 0x9c
   21e08:	cmp	ip, #2
   21e0c:	ldr	r3, [r3]
   21e10:	mov	sl, r0
   21e14:	str	r1, [sp, #16]
   21e18:	mov	r4, r2
   21e1c:	str	r3, [sp, #148]	; 0x94
   21e20:	bne	220b4 <floor@plt+0x10ce8>
   21e24:	vldr	d9, [r4]
   21e28:	vldr	d10, [r4, #8]
   21e2c:	vldr	d4, [pc, #660]	; 220c8 <floor@plt+0x10cfc>
   21e30:	vldr	d2, [pc, #664]	; 220d0 <floor@plt+0x10d04>
   21e34:	vldr	d3, [pc, #668]	; 220d8 <floor@plt+0x10d0c>
   21e38:	vadd.f64	d7, d9, d10
   21e3c:	vsub.f64	d6, d9, d10
   21e40:	vldr	d14, [pc, #664]	; 220e0 <floor@plt+0x10d14>
   21e44:	vldr	d8, [fp, #8]
   21e48:	vldr	d5, [pc, #664]	; 220e8 <floor@plt+0x10d1c>
   21e4c:	mov	lr, fp
   21e50:	add	ip, sp, #120	; 0x78
   21e54:	ldm	lr!, {r0, r1, r2, r3}
   21e58:	vmul.f64	d14, d7, d14
   21e5c:	vldr	d1, [pc, #652]	; 220f0 <floor@plt+0x10d24>
   21e60:	vdiv.f64	d0, d6, d7
   21e64:	vmov.f64	d7, d3
   21e68:	vldr	d6, [pc, #648]	; 220f8 <floor@plt+0x10d2c>
   21e6c:	stmia	ip!, {r0, r1, r2, r3}
   21e70:	add	r4, sp, #40	; 0x28
   21e74:	ldm	lr, {r0, r1}
   21e78:	vmul.f64	d9, d9, d6
   21e7c:	mov	r9, #1
   21e80:	vmul.f64	d10, d10, d6
   21e84:	stm	ip, {r0, r1}
   21e88:	mov	r0, r4
   21e8c:	str	r9, [sp, #120]	; 0x78
   21e90:	vmov.f64	d15, d1
   21e94:	vldr	d13, [pc, #612]	; 22100 <floor@plt+0x10d34>
   21e98:	mov	r7, #0
   21e9c:	add	r6, sp, #56	; 0x38
   21ea0:	add	r5, sp, #104	; 0x68
   21ea4:	add	r8, sp, #72	; 0x48
   21ea8:	vmul.f64	d4, d0, d4
   21eac:	vmul.f64	d2, d0, d2
   21eb0:	vmul.f64	d4, d4, d0
   21eb4:	vmls.f64	d7, d2, d0
   21eb8:	vmul.f64	d4, d4, d0
   21ebc:	vmls.f64	d3, d4, d0
   21ec0:	vmov.f64	d0, d9
   21ec4:	vdiv.f64	d4, d3, d7
   21ec8:	vmul.f64	d14, d4, d14
   21ecc:	vdiv.f64	d4, d14, d8
   21ed0:	vmla.f64	d6, d4, d5
   21ed4:	vcvt.s32.f64	s12, d6
   21ed8:	vmov	r3, s12
   21edc:	lsl	r3, r3, #2
   21ee0:	cmp	r3, #4
   21ee4:	movlt	r3, #4
   21ee8:	vmov	s16, r3
   21eec:	bl	1c6e4 <floor@plt+0xb318>
   21ef0:	vldr	d4, [pc, #528]	; 22108 <floor@plt+0x10d3c>
   21ef4:	vldr	d5, [fp, #8]
   21ef8:	vcvt.f64.s32	d7, s16
   21efc:	vmov	r3, s16
   21f00:	vdiv.f64	d6, d4, d5
   21f04:	add	r3, r3, r9
   21f08:	str	r3, [sp, #4]
   21f0c:	vstr	d7, [sp, #8]
   21f10:	vcvt.s32.f64	s15, d6
   21f14:	vstr	s15, [sp, #20]
   21f18:	vmov	s15, r9
   21f1c:	ldm	r4, {r0, r1, r2, r3}
   21f20:	vcvt.f64.s32	d6, s15
   21f24:	vldr	d7, [sp, #8]
   21f28:	stm	r6, {r0, r1, r2, r3}
   21f2c:	vmul.f64	d6, d6, d14
   21f30:	vdiv.f64	d8, d6, d7
   21f34:	vcmpe.f64	d8, d15
   21f38:	vmrs	APSR_nzcv, fpscr
   21f3c:	ble	220a8 <floor@plt+0x10cdc>
   21f40:	vldr	s15, [sp, #20]
   21f44:	vmov.f64	d11, d15
   21f48:	vcvt.f64.s32	d12, s15
   21f4c:	b	21f54 <floor@plt+0x10b88>
   21f50:	vmov.f64	d11, d15
   21f54:	add	r7, r7, #1
   21f58:	ldm	r4, {r0, r1, r2, r3}
   21f5c:	lsl	ip, r7, #1
   21f60:	vmov	s0, ip
   21f64:	stm	r6, {r0, r1, r2, r3}
   21f68:	add	r1, sp, #24
   21f6c:	add	r0, sp, #32
   21f70:	vcvt.f64.s32	d0, s0
   21f74:	vmul.f64	d0, d0, d13
   21f78:	vdiv.f64	d0, d0, d12
   21f7c:	bl	11264 <sincos@plt>
   21f80:	vldr	d0, [sp, #24]
   21f84:	vldr	d1, [sp, #32]
   21f88:	mov	r0, r5
   21f8c:	vmul.f64	d0, d0, d9
   21f90:	vmul.f64	d1, d1, d10
   21f94:	bl	1c6e4 <floor@plt+0xb318>
   21f98:	ldm	r5, {r0, r1, r2, r3}
   21f9c:	stm	r4, {r0, r1, r2, r3}
   21fa0:	mov	r1, r6
   21fa4:	mov	r0, r4
   21fa8:	bl	1c820 <floor@plt+0xb454>
   21fac:	mov	r0, r5
   21fb0:	vstr	d0, [sp, #104]	; 0x68
   21fb4:	vstr	d1, [sp, #112]	; 0x70
   21fb8:	bl	1c898 <floor@plt+0xb4cc>
   21fbc:	vadd.f64	d15, d15, d0
   21fc0:	vcmpe.f64	d8, d15
   21fc4:	vmrs	APSR_nzcv, fpscr
   21fc8:	bgt	21f50 <floor@plt+0x10b84>
   21fcc:	vsub.f64	d8, d8, d11
   21fd0:	mov	r1, r6
   21fd4:	mov	r0, r4
   21fd8:	add	r9, r9, #1
   21fdc:	vdiv.f64	d12, d8, d0
   21fe0:	bl	1c820 <floor@plt+0xb454>
   21fe4:	add	r0, sp, #88	; 0x58
   21fe8:	vstr	d0, [sp, #88]	; 0x58
   21fec:	vmov.f64	d0, d12
   21ff0:	vstr	d1, [sp, #96]	; 0x60
   21ff4:	bl	1c860 <floor@plt+0xb494>
   21ff8:	mov	r1, r5
   21ffc:	mov	r0, r6
   22000:	vstr	d1, [sp, #112]	; 0x70
   22004:	vstr	d0, [sp, #104]	; 0x68
   22008:	bl	1c7fc <floor@plt+0xb430>
   2200c:	vmov.f64	d6, d1
   22010:	vstr	d0, [sp, #72]	; 0x48
   22014:	vdiv.f64	d1, d0, d9
   22018:	vstr	d6, [sp, #80]	; 0x50
   2201c:	vdiv.f64	d0, d6, d10
   22020:	bl	11210 <atan2@plt>
   22024:	add	r1, sp, #24
   22028:	add	r0, sp, #32
   2202c:	bl	11264 <sincos@plt>
   22030:	vldr	d0, [sp, #24]
   22034:	vldr	d1, [sp, #32]
   22038:	mov	r0, r5
   2203c:	vmul.f64	d0, d0, d9
   22040:	vmul.f64	d1, d1, d10
   22044:	bl	1c6e4 <floor@plt+0xb318>
   22048:	ldm	r5, {r0, r1, r2, r3}
   2204c:	ldr	ip, [sl]
   22050:	stm	r8, {r0, r1, r2, r3}
   22054:	mov	r1, r8
   22058:	ldr	r0, [sp, #16]
   2205c:	ldr	fp, [ip, #84]	; 0x54
   22060:	bl	1c7fc <floor@plt+0xb430>
   22064:	add	r2, sp, #120	; 0x78
   22068:	mov	r1, r5
   2206c:	mov	r0, sl
   22070:	vstr	d0, [sp, #104]	; 0x68
   22074:	vstr	d1, [sp, #112]	; 0x70
   22078:	blx	fp
   2207c:	ldr	r3, [sp, #4]
   22080:	cmp	r9, r3
   22084:	bne	21f18 <floor@plt+0x10b4c>
   22088:	ldr	r3, [pc, #136]	; 22118 <floor@plt+0x10d4c>
   2208c:	ldr	r2, [sp, #148]	; 0x94
   22090:	ldr	r3, [r3]
   22094:	cmp	r2, r3
   22098:	bne	220c4 <floor@plt+0x10cf8>
   2209c:	add	sp, sp, #156	; 0x9c
   220a0:	vpop	{d8-d15}
   220a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   220a8:	vmov.f64	d11, d15
   220ac:	vldr	d0, [pc, #92]	; 22110 <floor@plt+0x10d44>
   220b0:	b	21fcc <floor@plt+0x10c00>
   220b4:	ldr	r1, [pc, #96]	; 2211c <floor@plt+0x10d50>
   220b8:	mov	r0, #185	; 0xb9
   220bc:	bl	26c88 <floor@plt+0x158bc>
   220c0:	b	21e24 <floor@plt+0x10a58>
   220c4:	bl	111e0 <__stack_chk_fail@plt>
   220c8:	andeq	r0, r0, r0
   220cc:	andmi	r0, r8, r0
   220d0:	andeq	r0, r0, r0
   220d4:	eorsmi	r0, r0, r0
   220d8:	andeq	r0, r0, r0
   220dc:	subsmi	r0, r0, r0
   220e0:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   220e4:	svccc	0x00f921fb
   220e8:	andeq	r0, r0, r0
   220ec:	svccc	0x00d00000
	...
   220fc:	svccc	0x00e00000
   22100:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   22104:	strdmi	r2, [r9], -fp
   22108:	andeq	r0, r0, r0
   2210c:	eormi	r0, r4, r0
   22110:	andeq	r0, r0, r0
   22114:	svccc	0x00f00000	; IMB
   22118:	andeq	r1, r4, r0, ror sp
   2211c:	andeq	pc, r2, r8, ror #25
   22120:	push	{r4, r5, r6, r7, lr}
   22124:	vpush	{d8}
   22128:	ldr	r5, [pc, #184]	; 221e8 <floor@plt+0x10e1c>
   2212c:	mov	r4, r0
   22130:	mov	r0, r1
   22134:	sub	sp, sp, #60	; 0x3c
   22138:	ldr	ip, [r5]
   2213c:	mov	r1, r4
   22140:	mov	r6, r2
   22144:	mov	r7, r3
   22148:	str	ip, [sp, #52]	; 0x34
   2214c:	bl	1c820 <floor@plt+0xb454>
   22150:	mov	r0, r6
   22154:	mov	r1, r4
   22158:	vstr	d0, [sp]
   2215c:	vstr	d1, [sp, #8]
   22160:	bl	1c820 <floor@plt+0xb454>
   22164:	mov	r0, sp
   22168:	add	r1, sp, #16
   2216c:	vstr	d0, [sp, #16]
   22170:	vstr	d1, [sp, #24]
   22174:	bl	1c87c <floor@plt+0xb4b0>
   22178:	vcmp.f64	d0, #0.0
   2217c:	vmrs	APSR_nzcv, fpscr
   22180:	moveq	r0, #0
   22184:	beq	221c8 <floor@plt+0x10dfc>
   22188:	add	r1, sp, #16
   2218c:	mov	r0, r1
   22190:	vmov.f64	d8, d0
   22194:	bl	1c87c <floor@plt+0xb4b0>
   22198:	mov	r0, sp
   2219c:	vadd.f64	d8, d8, d8
   221a0:	vdiv.f64	d0, d0, d8
   221a4:	bl	1c860 <floor@plt+0xb494>
   221a8:	mov	r0, r4
   221ac:	add	r1, sp, #32
   221b0:	vstr	d1, [sp, #40]	; 0x28
   221b4:	vstr	d0, [sp, #32]
   221b8:	bl	1c7fc <floor@plt+0xb430>
   221bc:	mov	r0, #1
   221c0:	vstr	d0, [r7]
   221c4:	vstr	d1, [r7, #8]
   221c8:	ldr	r2, [sp, #52]	; 0x34
   221cc:	ldr	r3, [r5]
   221d0:	cmp	r2, r3
   221d4:	bne	221e4 <floor@plt+0x10e18>
   221d8:	add	sp, sp, #60	; 0x3c
   221dc:	vpop	{d8}
   221e0:	pop	{r4, r5, r6, r7, pc}
   221e4:	bl	111e0 <__stack_chk_fail@plt>
   221e8:	andeq	r1, r4, r0, ror sp
   221ec:	push	{r4, r5, r6, r7, r8, r9, lr}
   221f0:	vpush	{d8-d11}
   221f4:	ldr	r9, [pc, #492]	; 223e8 <floor@plt+0x1101c>
   221f8:	mov	r5, r0
   221fc:	mov	r4, r1
   22200:	sub	sp, sp, #84	; 0x54
   22204:	ldr	r0, [r9]
   22208:	ldr	r6, [sp, #144]	; 0x90
   2220c:	mov	r8, r2
   22210:	mov	r7, r3
   22214:	ldr	ip, [r6]
   22218:	str	r0, [sp, #76]	; 0x4c
   2221c:	cmp	ip, #3
   22220:	bne	22398 <floor@plt+0x10fcc>
   22224:	add	r0, sp, #8
   22228:	bl	1c6c8 <floor@plt+0xb2fc>
   2222c:	add	r3, sp, #8
   22230:	mov	r2, r7
   22234:	mov	r1, r8
   22238:	mov	r0, r4
   2223c:	bl	22120 <floor@plt+0x10d54>
   22240:	cmp	r0, #0
   22244:	bne	22284 <floor@plt+0x10eb8>
   22248:	ldr	r3, [r5]
   2224c:	mov	r1, r4
   22250:	str	r6, [sp]
   22254:	mov	r2, r7
   22258:	ldr	r4, [r3, #24]
   2225c:	mov	r0, r5
   22260:	mov	r3, #1
   22264:	blx	r4
   22268:	ldr	r2, [sp, #76]	; 0x4c
   2226c:	ldr	r3, [r9]
   22270:	cmp	r2, r3
   22274:	bne	223d0 <floor@plt+0x11004>
   22278:	add	sp, sp, #84	; 0x54
   2227c:	vpop	{d8-d11}
   22280:	pop	{r4, r5, r6, r7, r8, r9, pc}
   22284:	add	r1, sp, #8
   22288:	mov	r0, r4
   2228c:	bl	1c820 <floor@plt+0xb454>
   22290:	mov	r0, r7
   22294:	add	r1, sp, #8
   22298:	vstr	d0, [sp, #24]
   2229c:	vstr	d1, [sp, #32]
   222a0:	bl	1c820 <floor@plt+0xb454>
   222a4:	vstr	d0, [sp, #40]	; 0x28
   222a8:	vstr	d1, [sp, #48]	; 0x30
   222ac:	vldr	d0, [sp, #32]
   222b0:	vldr	d1, [sp, #24]
   222b4:	bl	11210 <atan2@plt>
   222b8:	vldr	d1, [sp, #40]	; 0x28
   222bc:	vmov.f64	d9, d0
   222c0:	vldr	d0, [sp, #48]	; 0x30
   222c4:	bl	11210 <atan2@plt>
   222c8:	mov	r1, r4
   222cc:	add	r0, sp, #8
   222d0:	vmov.f64	d11, d0
   222d4:	bl	1c820 <floor@plt+0xb454>
   222d8:	add	r0, sp, #56	; 0x38
   222dc:	vstr	d0, [sp, #56]	; 0x38
   222e0:	vstr	d1, [sp, #64]	; 0x40
   222e4:	bl	1c898 <floor@plt+0xb4cc>
   222e8:	vsub.f64	d7, d11, d9
   222ec:	vldr	d6, [r6, #8]
   222f0:	vcmpe.f64	d7, #0.0
   222f4:	vmrs	APSR_nzcv, fpscr
   222f8:	vmov.f64	d10, d0
   222fc:	vdiv.f64	d8, d6, d0
   22300:	bpl	22318 <floor@plt+0x10f4c>
   22304:	vldr	d6, [pc, #204]	; 223d8 <floor@plt+0x1100c>
   22308:	vadd.f64	d7, d7, d6
   2230c:	vcmpe.f64	d7, #0.0
   22310:	vmrs	APSR_nzcv, fpscr
   22314:	bmi	22308 <floor@plt+0x10f3c>
   22318:	vadd.f64	d5, d8, d8
   2231c:	vcmpe.f64	d5, d7
   22320:	vmrs	APSR_nzcv, fpscr
   22324:	bge	223a8 <floor@plt+0x10fdc>
   22328:	vsub.f64	d7, d7, d8
   2232c:	vldr	d4, [pc, #172]	; 223e0 <floor@plt+0x11014>
   22330:	vdiv.f64	d6, d7, d5
   22334:	vadd.f64	d6, d6, d4
   22338:	vcvt.s32.f64	s12, d6
   2233c:	vcvt.f64.s32	d5, s12
   22340:	vmov	r3, s12
   22344:	cmp	r3, #0
   22348:	vdiv.f64	d11, d7, d5
   2234c:	blt	22268 <floor@plt+0x10e9c>
   22350:	add	r7, r3, #1
   22354:	mov	r4, #0
   22358:	vmov	s15, r4
   2235c:	vmov.f64	d1, d9
   22360:	ldr	r3, [r5]
   22364:	add	r4, r4, #1
   22368:	vcvt.f64.s32	d7, s15
   2236c:	mov	r2, r6
   22370:	ldr	r3, [r3, #88]	; 0x58
   22374:	vmov.f64	d0, d10
   22378:	mov	r1, r8
   2237c:	mov	r0, r5
   22380:	vmla.f64	d1, d7, d11
   22384:	vadd.f64	d2, d1, d8
   22388:	blx	r3
   2238c:	cmp	r4, r7
   22390:	bne	22358 <floor@plt+0x10f8c>
   22394:	b	22268 <floor@plt+0x10e9c>
   22398:	ldr	r1, [pc, #76]	; 223ec <floor@plt+0x11020>
   2239c:	mov	r0, #252	; 0xfc
   223a0:	bl	26c88 <floor@plt+0x158bc>
   223a4:	b	22224 <floor@plt+0x10e58>
   223a8:	ldr	r3, [r5]
   223ac:	mov	r2, r6
   223b0:	vmov.f64	d2, d11
   223b4:	vmov.f64	d1, d9
   223b8:	vmov.f64	d0, d10
   223bc:	mov	r1, r8
   223c0:	ldr	r3, [r3, #88]	; 0x58
   223c4:	mov	r0, r5
   223c8:	blx	r3
   223cc:	b	22268 <floor@plt+0x10e9c>
   223d0:	bl	111e0 <__stack_chk_fail@plt>
   223d4:	nop			; (mov r0, r0)
   223d8:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   223dc:			; <UNDEFINED> instruction: 0x401921fb
   223e0:	andeq	r0, r0, r0
   223e4:	svccc	0x00e00000
   223e8:	andeq	r1, r4, r0, ror sp
   223ec:	andeq	pc, r2, r8, ror #25
   223f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   223f4:	vpush	{d8-d11}
   223f8:	ldr	sl, [pc, #520]	; 22608 <floor@plt+0x1123c>
   223fc:	mov	r5, r0
   22400:	mov	r4, r1
   22404:	sub	sp, sp, #128	; 0x80
   22408:	ldr	r0, [sl]
   2240c:	ldr	r7, [sp, #192]	; 0xc0
   22410:	mov	r8, r2
   22414:	mov	r6, r3
   22418:	ldr	ip, [r7]
   2241c:	str	r0, [sp, #124]	; 0x7c
   22420:	cmp	ip, #2
   22424:	bne	22550 <floor@plt+0x11184>
   22428:	add	r0, sp, #24
   2242c:	bl	1c6c8 <floor@plt+0xb2fc>
   22430:	add	r3, sp, #24
   22434:	mov	r2, r6
   22438:	mov	r1, r8
   2243c:	mov	r0, r4
   22440:	bl	22120 <floor@plt+0x10d54>
   22444:	cmp	r0, #0
   22448:	bne	22488 <floor@plt+0x110bc>
   2244c:	ldr	r3, [r5]
   22450:	mov	r1, r4
   22454:	str	r7, [sp]
   22458:	mov	r2, r6
   2245c:	ldr	r4, [r3, #24]
   22460:	mov	r0, r5
   22464:	mov	r3, #1
   22468:	blx	r4
   2246c:	ldr	r2, [sp, #124]	; 0x7c
   22470:	ldr	r3, [sl]
   22474:	cmp	r2, r3
   22478:	bne	225f0 <floor@plt+0x11224>
   2247c:	add	sp, sp, #128	; 0x80
   22480:	vpop	{d8-d11}
   22484:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22488:	add	r1, sp, #24
   2248c:	mov	r0, r4
   22490:	bl	1c820 <floor@plt+0xb454>
   22494:	mov	r0, r6
   22498:	add	r1, sp, #24
   2249c:	vstr	d0, [sp, #40]	; 0x28
   224a0:	vstr	d1, [sp, #48]	; 0x30
   224a4:	bl	1c820 <floor@plt+0xb454>
   224a8:	vstr	d0, [sp, #56]	; 0x38
   224ac:	vstr	d1, [sp, #64]	; 0x40
   224b0:	vldr	d0, [sp, #48]	; 0x30
   224b4:	vldr	d1, [sp, #40]	; 0x28
   224b8:	bl	11210 <atan2@plt>
   224bc:	vldr	d1, [sp, #56]	; 0x38
   224c0:	vmov.f64	d9, d0
   224c4:	vldr	d0, [sp, #64]	; 0x40
   224c8:	bl	11210 <atan2@plt>
   224cc:	vsub.f64	d8, d0, d9
   224d0:	vcmpe.f64	d8, #0.0
   224d4:	vmrs	APSR_nzcv, fpscr
   224d8:	bpl	224f0 <floor@plt+0x11124>
   224dc:	vldr	d7, [pc, #276]	; 225f8 <floor@plt+0x1122c>
   224e0:	vadd.f64	d8, d8, d7
   224e4:	vcmpe.f64	d8, #0.0
   224e8:	vmrs	APSR_nzcv, fpscr
   224ec:	bmi	224e0 <floor@plt+0x11114>
   224f0:	add	r0, sp, #24
   224f4:	mov	r1, r4
   224f8:	bl	1c820 <floor@plt+0xb454>
   224fc:	add	r0, sp, #104	; 0x68
   22500:	vstr	d0, [sp, #104]	; 0x68
   22504:	vstr	d1, [sp, #112]	; 0x70
   22508:	bl	1c898 <floor@plt+0xb4cc>
   2250c:	vldr	d7, [r7, #8]
   22510:	vldr	d6, [pc, #232]	; 22600 <floor@plt+0x11234>
   22514:	vdiv.f64	d5, d7, d0
   22518:	vmov.f64	d10, d0
   2251c:	vdiv.f64	d7, d8, d5
   22520:	vadd.f64	d7, d7, d6
   22524:	vcvt.s32.f64	s14, d7
   22528:	vmov	r3, s14
   2252c:	cmp	r3, #0
   22530:	bne	22560 <floor@plt+0x11194>
   22534:	ldr	r3, [r5]
   22538:	mov	r2, r7
   2253c:	mov	r1, r4
   22540:	ldr	r3, [r3, #84]	; 0x54
   22544:	mov	r0, r5
   22548:	blx	r3
   2254c:	b	2246c <floor@plt+0x110a0>
   22550:	ldr	r1, [pc, #180]	; 2260c <floor@plt+0x11240>
   22554:	ldr	r0, [pc, #180]	; 22610 <floor@plt+0x11244>
   22558:	bl	26c88 <floor@plt+0x158bc>
   2255c:	b	22428 <floor@plt+0x1105c>
   22560:	blt	2246c <floor@plt+0x110a0>
   22564:	vcvt.f64.s32	d11, s14
   22568:	add	r6, r3, #1
   2256c:	mov	r4, #0
   22570:	vmov	s15, r4
   22574:	add	r1, sp, #8
   22578:	add	r0, sp, #16
   2257c:	add	r4, r4, #1
   22580:	vcvt.f64.s32	d7, s15
   22584:	vmul.f64	d7, d7, d8
   22588:	vdiv.f64	d0, d7, d11
   2258c:	vadd.f64	d0, d0, d9
   22590:	bl	11264 <sincos@plt>
   22594:	ldr	r3, [r5]
   22598:	vldr	d1, [sp, #16]
   2259c:	vldr	d0, [sp, #8]
   225a0:	add	r0, sp, #72	; 0x48
   225a4:	ldr	r9, [r3, #84]	; 0x54
   225a8:	bl	1c6e4 <floor@plt+0xb318>
   225ac:	vmov.f64	d0, d10
   225b0:	add	r0, sp, #72	; 0x48
   225b4:	bl	1c860 <floor@plt+0xb494>
   225b8:	add	r1, sp, #88	; 0x58
   225bc:	mov	r0, r8
   225c0:	vstr	d1, [sp, #96]	; 0x60
   225c4:	vstr	d0, [sp, #88]	; 0x58
   225c8:	bl	1c7fc <floor@plt+0xb430>
   225cc:	mov	r2, r7
   225d0:	add	r1, sp, #104	; 0x68
   225d4:	mov	r0, r5
   225d8:	vstr	d0, [sp, #104]	; 0x68
   225dc:	vstr	d1, [sp, #112]	; 0x70
   225e0:	blx	r9
   225e4:	cmp	r4, r6
   225e8:	bne	22570 <floor@plt+0x111a4>
   225ec:	b	2246c <floor@plt+0x110a0>
   225f0:	bl	111e0 <__stack_chk_fail@plt>
   225f4:	nop			; (mov r0, r0)
   225f8:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   225fc:			; <UNDEFINED> instruction: 0x401921fb
   22600:	andeq	r0, r0, r0
   22604:	svccc	0x00e00000
   22608:	andeq	r1, r4, r0, ror sp
   2260c:	andeq	pc, r2, r8, ror #25
   22610:	andeq	r0, r0, fp, lsl r1
   22614:	push	{r4, r5, r6, r7, lr}
   22618:	vpush	{d8-d15}
   2261c:	vsub.f64	d14, d2, d1
   22620:	vldr	d9, [pc, #248]	; 22720 <floor@plt+0x11354>
   22624:	vmov.f64	d13, d1
   22628:	sub	sp, sp, #12
   2262c:	vmov.f64	d12, d0
   22630:	vstr	d2, [sp]
   22634:	vmov.f64	d8, d3
   22638:	vmov.f64	d10, d4
   2263c:	vmul.f64	d14, d14, d0
   22640:	vldr	d7, [r3]
   22644:	vmov.f64	d11, d9
   22648:	vmov.f64	d15, d9
   2264c:	mov	r5, r3
   22650:	mov	r4, r0
   22654:	mov	r6, r1
   22658:	mov	r7, r2
   2265c:	vcmpe.f64	d8, d7
   22660:	mov	r2, r7
   22664:	vmov.f64	d0, d12
   22668:	mov	r1, r6
   2266c:	vmrs	APSR_nzcv, fpscr
   22670:	mov	r0, r4
   22674:	bhi	226a0 <floor@plt+0x112d4>
   22678:	vadd.f64	d6, d8, d10
   2267c:	vsub.f64	d6, d6, d7
   22680:	vadd.f64	d6, d6, d9
   22684:	vcmpe.f64	d6, d14
   22688:	vmrs	APSR_nzcv, fpscr
   2268c:	bgt	226e0 <floor@plt+0x11314>
   22690:	vstr	d11, [r5]
   22694:	vmov.f64	d9, d6
   22698:	vmov.f64	d7, d15
   2269c:	b	2265c <floor@plt+0x11290>
   226a0:	vdiv.f64	d1, d9, d12
   226a4:	vsub.f64	d7, d8, d7
   226a8:	ldr	r3, [r4]
   226ac:	ldr	r3, [r3, #88]	; 0x58
   226b0:	vadd.f64	d7, d7, d9
   226b4:	vcmpe.f64	d7, d14
   226b8:	vmrs	APSR_nzcv, fpscr
   226bc:	vadd.f64	d1, d1, d13
   226c0:	bgt	226f8 <floor@plt+0x1132c>
   226c4:	vdiv.f64	d2, d7, d12
   226c8:	vmov.f64	d9, d7
   226cc:	vadd.f64	d2, d2, d13
   226d0:	blx	r3
   226d4:	vstr	d8, [r5]
   226d8:	vmov.f64	d7, d8
   226dc:	b	2265c <floor@plt+0x11290>
   226e0:	vsub.f64	d9, d14, d9
   226e4:	vadd.f64	d7, d9, d7
   226e8:	vstr	d7, [r5]
   226ec:	add	sp, sp, #12
   226f0:	vpop	{d8-d15}
   226f4:	pop	{r4, r5, r6, r7, pc}
   226f8:	vldr	d2, [sp]
   226fc:	blx	r3
   22700:	vsub.f64	d9, d14, d9
   22704:	vldr	d14, [r5]
   22708:	vadd.f64	d9, d14, d9
   2270c:	vstr	d9, [r5]
   22710:	add	sp, sp, #12
   22714:	vpop	{d8-d15}
   22718:	pop	{r4, r5, r6, r7, pc}
   2271c:	nop			; (mov r0, r0)
	...
   22728:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2272c:	vpush	{d8-d14}
   22730:	ldr	r9, [pc, #448]	; 228f8 <floor@plt+0x1152c>
   22734:	mov	sl, r2
   22738:	mov	r5, r0
   2273c:	sub	sp, sp, #80	; 0x50
   22740:	ldr	r2, [r9]
   22744:	mov	r0, sl
   22748:	mov	r8, r3
   2274c:	vmov.f64	d12, d0
   22750:	vmov.f64	d9, d1
   22754:	str	r2, [sp, #76]	; 0x4c
   22758:	mov	r6, r1
   2275c:	ldr	r4, [sp, #168]	; 0xa8
   22760:	bl	1c820 <floor@plt+0xb454>
   22764:	add	r0, sp, #8
   22768:	vstr	d0, [sp, #8]
   2276c:	vstr	d1, [sp, #16]
   22770:	bl	1c898 <floor@plt+0xb4cc>
   22774:	vcmp.f64	d0, #0.0
   22778:	vmrs	APSR_nzcv, fpscr
   2277c:	beq	22870 <floor@plt+0x114a4>
   22780:	vldr	d13, [pc, #360]	; 228f0 <floor@plt+0x11524>
   22784:	vmov.f64	d14, d0
   22788:	vldr	d7, [r4]
   2278c:	vmov.f64	d11, d13
   22790:	vmov.f64	d10, d13
   22794:	vcmpe.f64	d12, d7
   22798:	vmrs	APSR_nzcv, fpscr
   2279c:	bhi	227d0 <floor@plt+0x11404>
   227a0:	vadd.f64	d6, d12, d9
   227a4:	vsub.f64	d6, d6, d7
   227a8:	vadd.f64	d6, d6, d13
   227ac:	vcmpe.f64	d6, d14
   227b0:	vmrs	APSR_nzcv, fpscr
   227b4:	bgt	22864 <floor@plt+0x11498>
   227b8:	vmov.f64	d7, d10
   227bc:	vstr	d11, [r4]
   227c0:	vmov.f64	d13, d6
   227c4:	vcmpe.f64	d12, d7
   227c8:	vmrs	APSR_nzcv, fpscr
   227cc:	bls	227a0 <floor@plt+0x113d4>
   227d0:	vsub.f64	d7, d12, d7
   227d4:	vadd.f64	d8, d7, d13
   227d8:	vcmpe.f64	d8, d14
   227dc:	vmrs	APSR_nzcv, fpscr
   227e0:	bgt	2288c <floor@plt+0x114c0>
   227e4:	vdiv.f64	d0, d8, d14
   227e8:	add	r0, sp, #8
   227ec:	bl	1c860 <floor@plt+0xb494>
   227f0:	add	r1, sp, #56	; 0x38
   227f4:	mov	r0, r6
   227f8:	vstr	d1, [sp, #64]	; 0x40
   227fc:	vstr	d0, [sp, #56]	; 0x38
   22800:	bl	1c7fc <floor@plt+0xb430>
   22804:	ldr	r3, [r5]
   22808:	add	r0, sp, #8
   2280c:	ldr	r7, [r3, #24]
   22810:	vstr	d0, [sp, #24]
   22814:	vdiv.f64	d0, d13, d14
   22818:	vstr	d1, [sp, #32]
   2281c:	bl	1c860 <floor@plt+0xb494>
   22820:	add	r1, sp, #40	; 0x28
   22824:	mov	r0, r6
   22828:	vmov.f64	d13, d8
   2282c:	vstr	d1, [sp, #48]	; 0x30
   22830:	vstr	d0, [sp, #40]	; 0x28
   22834:	bl	1c7fc <floor@plt+0xb430>
   22838:	str	r8, [sp]
   2283c:	mov	r3, #1
   22840:	add	r2, sp, #24
   22844:	add	r1, sp, #56	; 0x38
   22848:	mov	r0, r5
   2284c:	vstr	d0, [sp, #56]	; 0x38
   22850:	vstr	d1, [sp, #64]	; 0x40
   22854:	blx	r7
   22858:	vstr	d12, [r4]
   2285c:	vmov.f64	d7, d12
   22860:	b	22794 <floor@plt+0x113c8>
   22864:	vsub.f64	d13, d14, d13
   22868:	vadd.f64	d7, d13, d7
   2286c:	vstr	d7, [r4]
   22870:	ldr	r2, [sp, #76]	; 0x4c
   22874:	ldr	r3, [r9]
   22878:	cmp	r2, r3
   2287c:	bne	228e8 <floor@plt+0x1151c>
   22880:	add	sp, sp, #80	; 0x50
   22884:	vpop	{d8-d14}
   22888:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2288c:	ldr	r3, [r5]
   22890:	vdiv.f64	d0, d13, d14
   22894:	add	r0, sp, #8
   22898:	ldr	r7, [r3, #24]
   2289c:	bl	1c860 <floor@plt+0xb494>
   228a0:	mov	r0, r6
   228a4:	add	r1, sp, #40	; 0x28
   228a8:	vstr	d0, [sp, #40]	; 0x28
   228ac:	vstr	d1, [sp, #48]	; 0x30
   228b0:	bl	1c7fc <floor@plt+0xb430>
   228b4:	str	r8, [sp]
   228b8:	mov	r2, sl
   228bc:	mov	r0, r5
   228c0:	mov	r3, #1
   228c4:	add	r1, sp, #56	; 0x38
   228c8:	vstr	d0, [sp, #56]	; 0x38
   228cc:	vstr	d1, [sp, #64]	; 0x40
   228d0:	blx	r7
   228d4:	vsub.f64	d13, d14, d13
   228d8:	vldr	d14, [r4]
   228dc:	vadd.f64	d13, d14, d13
   228e0:	vstr	d13, [r4]
   228e4:	b	22870 <floor@plt+0x114a4>
   228e8:	bl	111e0 <__stack_chk_fail@plt>
   228ec:	nop			; (mov r0, r0)
	...
   228f8:	andeq	r1, r4, r0, ror sp
   228fc:	vldr	d3, [pc, #1012]	; 22cf8 <floor@plt+0x1192c>
   22900:	vldr	d5, [r2]
   22904:	vldr	d6, [r3, #8]
   22908:	vldr	d1, [pc, #1008]	; 22d00 <floor@plt+0x11934>
   2290c:	vmul.f64	d3, d0, d3
   22910:	push	{r4, r5, r6, r7, r8, r9, lr}
   22914:	vadd.f64	d2, d6, d6
   22918:	vpush	{d8-d11}
   2291c:	mov	lr, r3
   22920:	mov	r4, r2
   22924:	mov	r6, r1
   22928:	mov	r5, r3
   2292c:	mov	r7, r0
   22930:	vadd.f64	d4, d5, d3
   22934:	ldm	lr!, {r0, r1, r2, r3}
   22938:	sub	sp, sp, #116	; 0x74
   2293c:	ldr	r9, [pc, #1012]	; 22d38 <floor@plt+0x1196c>
   22940:	add	ip, sp, #80	; 0x50
   22944:	vldr	d8, [pc, #948]	; 22d00 <floor@plt+0x11934>
   22948:	stmia	ip!, {r0, r1, r2, r3}
   2294c:	vmov.f64	d9, d0
   22950:	vdiv.f64	d7, d4, d2
   22954:	ldr	r3, [r9]
   22958:	ldm	lr, {r0, r1}
   2295c:	str	r3, [sp, #108]	; 0x6c
   22960:	mov	r2, #1
   22964:	stm	ip, {r0, r1}
   22968:	add	r0, sp, #48	; 0x30
   2296c:	str	r2, [sp, #80]	; 0x50
   22970:	add	r8, sp, #8
   22974:	vadd.f64	d7, d7, d1
   22978:	vldr	d1, [pc, #896]	; 22d00 <floor@plt+0x11934>
   2297c:	vcvt.s32.f64	s14, d7
   22980:	vmov	r3, s14
   22984:	cmp	r3, #0
   22988:	vcvtne.f64.s32	d7, s14
   2298c:	vldreq	d11, [pc, #884]	; 22d08 <floor@plt+0x1193c>
   22990:	vdivne.f64	d11, d4, d7
   22994:	vldr	d4, [r4, #8]
   22998:	vadd.f64	d3, d3, d4
   2299c:	vdiv.f64	d7, d3, d2
   229a0:	vsubne.f64	d11, d11, d6
   229a4:	vadd.f64	d7, d7, d1
   229a8:	vmov.f64	d1, d0
   229ac:	vnmls.f64	d0, d5, d8
   229b0:	vmls.f64	d1, d4, d8
   229b4:	vcvt.s32.f64	s14, d7
   229b8:	vmov	r3, s14
   229bc:	cmp	r3, #0
   229c0:	vcvtne.f64.s32	d7, s14
   229c4:	vldreq	d10, [pc, #828]	; 22d08 <floor@plt+0x1193c>
   229c8:	vdivne.f64	d10, d3, d7
   229cc:	vsubne.f64	d10, d10, d6
   229d0:	vmul.f64	d6, d6, d8
   229d4:	vstr	d6, [sp, #8]
   229d8:	bl	1c6e4 <floor@plt+0xb318>
   229dc:	add	r1, sp, #48	; 0x30
   229e0:	mov	r0, r6
   229e4:	bl	1c7fc <floor@plt+0xb430>
   229e8:	vmov.f64	d4, d10
   229ec:	vldr	d3, [r5, #8]
   229f0:	vldr	d2, [pc, #784]	; 22d08 <floor@plt+0x1193c>
   229f4:	mov	r3, r8
   229f8:	add	r2, sp, #80	; 0x50
   229fc:	add	r1, sp, #64	; 0x40
   22a00:	mov	r0, r7
   22a04:	vstr	d0, [sp, #64]	; 0x40
   22a08:	vstr	d1, [sp, #72]	; 0x48
   22a0c:	vmov.f64	d0, d9
   22a10:	vldr	d1, [pc, #760]	; 22d10 <floor@plt+0x11944>
   22a14:	bl	22614 <floor@plt+0x11248>
   22a18:	vldr	d7, [r4, #8]
   22a1c:	vldr	d0, [r4]
   22a20:	vmov.f64	d1, d9
   22a24:	add	r0, sp, #16
   22a28:	vmul.f64	d0, d0, d8
   22a2c:	vmls.f64	d1, d7, d8
   22a30:	bl	1c6e4 <floor@plt+0xb318>
   22a34:	add	r1, sp, #16
   22a38:	mov	r0, r6
   22a3c:	bl	1c7fc <floor@plt+0xb430>
   22a40:	vldr	d7, [r4, #8]
   22a44:	vldr	d6, [r4]
   22a48:	add	r0, sp, #48	; 0x30
   22a4c:	vstr	d1, [sp, #40]	; 0x28
   22a50:	vmov.f64	d1, d9
   22a54:	vstr	d0, [sp, #32]
   22a58:	vmul.f64	d0, d6, d8
   22a5c:	vnmls.f64	d1, d7, d8
   22a60:	bl	1c6e4 <floor@plt+0xb318>
   22a64:	add	r1, sp, #48	; 0x30
   22a68:	mov	r0, r6
   22a6c:	bl	1c7fc <floor@plt+0xb430>
   22a70:	add	r2, sp, #64	; 0x40
   22a74:	add	r3, sp, #80	; 0x50
   22a78:	add	r1, sp, #32
   22a7c:	str	r8, [sp]
   22a80:	mov	r0, r7
   22a84:	vstr	d0, [sp, #64]	; 0x40
   22a88:	vstr	d1, [sp, #72]	; 0x48
   22a8c:	vldr	d0, [r5, #8]
   22a90:	vmov.f64	d1, d10
   22a94:	bl	22728 <floor@plt+0x1135c>
   22a98:	vldr	d6, [r4, #8]
   22a9c:	vldr	d7, [r4]
   22aa0:	vmov.f64	d1, d9
   22aa4:	vmov.f64	d0, d9
   22aa8:	add	r0, sp, #48	; 0x30
   22aac:	vnmls.f64	d1, d6, d8
   22ab0:	vnmls.f64	d0, d7, d8
   22ab4:	bl	1c6e4 <floor@plt+0xb318>
   22ab8:	add	r1, sp, #48	; 0x30
   22abc:	mov	r0, r6
   22ac0:	bl	1c7fc <floor@plt+0xb430>
   22ac4:	mov	r3, r8
   22ac8:	vmov.f64	d4, d10
   22acc:	vldr	d3, [r5, #8]
   22ad0:	add	r2, sp, #80	; 0x50
   22ad4:	vldr	d2, [pc, #572]	; 22d18 <floor@plt+0x1194c>
   22ad8:	add	r1, sp, #64	; 0x40
   22adc:	mov	r0, r7
   22ae0:	vstr	d0, [sp, #64]	; 0x40
   22ae4:	vstr	d1, [sp, #72]	; 0x48
   22ae8:	vmov.f64	d0, d9
   22aec:	vldr	d1, [pc, #532]	; 22d08 <floor@plt+0x1193c>
   22af0:	bl	22614 <floor@plt+0x11248>
   22af4:	vldr	d7, [r5, #8]
   22af8:	vldr	d5, [r4]
   22afc:	vldr	d6, [r4, #8]
   22b00:	vmov.f64	d1, d9
   22b04:	vmul.f64	d7, d7, d8
   22b08:	add	r0, sp, #48	; 0x30
   22b0c:	vmov.f64	d0, d9
   22b10:	vnmls.f64	d1, d6, d8
   22b14:	vnmls.f64	d0, d5, d8
   22b18:	vstr	d7, [sp, #8]
   22b1c:	bl	1c6e4 <floor@plt+0xb318>
   22b20:	add	r1, sp, #48	; 0x30
   22b24:	mov	r0, r6
   22b28:	bl	1c7fc <floor@plt+0xb430>
   22b2c:	vmov.f64	d4, d11
   22b30:	vldr	d3, [r5, #8]
   22b34:	vldr	d2, [pc, #484]	; 22d20 <floor@plt+0x11954>
   22b38:	mov	r3, r8
   22b3c:	add	r2, sp, #80	; 0x50
   22b40:	add	r1, sp, #64	; 0x40
   22b44:	mov	r0, r7
   22b48:	vstr	d0, [sp, #64]	; 0x40
   22b4c:	vstr	d1, [sp, #72]	; 0x48
   22b50:	vmov.f64	d0, d9
   22b54:	vldr	d1, [pc, #444]	; 22d18 <floor@plt+0x1194c>
   22b58:	bl	22614 <floor@plt+0x11248>
   22b5c:	vldr	d7, [r4]
   22b60:	vldr	d1, [r4, #8]
   22b64:	vmov.f64	d0, d9
   22b68:	add	r0, sp, #16
   22b6c:	vmul.f64	d1, d1, d8
   22b70:	vnmls.f64	d0, d7, d8
   22b74:	bl	1c6e4 <floor@plt+0xb318>
   22b78:	add	r1, sp, #16
   22b7c:	mov	r0, r6
   22b80:	bl	1c7fc <floor@plt+0xb430>
   22b84:	vldr	d7, [r4, #8]
   22b88:	vldr	d6, [r4]
   22b8c:	add	r0, sp, #48	; 0x30
   22b90:	vstr	d0, [sp, #32]
   22b94:	vmov.f64	d0, d9
   22b98:	vstr	d1, [sp, #40]	; 0x28
   22b9c:	vmul.f64	d1, d7, d8
   22ba0:	vmls.f64	d0, d6, d8
   22ba4:	bl	1c6e4 <floor@plt+0xb318>
   22ba8:	add	r1, sp, #48	; 0x30
   22bac:	mov	r0, r6
   22bb0:	bl	1c7fc <floor@plt+0xb430>
   22bb4:	add	r2, sp, #64	; 0x40
   22bb8:	add	r3, sp, #80	; 0x50
   22bbc:	add	r1, sp, #32
   22bc0:	str	r8, [sp]
   22bc4:	mov	r0, r7
   22bc8:	vstr	d0, [sp, #64]	; 0x40
   22bcc:	vstr	d1, [sp, #72]	; 0x48
   22bd0:	vldr	d0, [r5, #8]
   22bd4:	vmov.f64	d1, d11
   22bd8:	bl	22728 <floor@plt+0x1135c>
   22bdc:	vldr	d6, [r4, #8]
   22be0:	vldr	d7, [r4]
   22be4:	vmov.f64	d1, d9
   22be8:	vmov.f64	d0, d9
   22bec:	add	r0, sp, #48	; 0x30
   22bf0:	vnmls.f64	d1, d6, d8
   22bf4:	vmls.f64	d0, d7, d8
   22bf8:	bl	1c6e4 <floor@plt+0xb318>
   22bfc:	add	r1, sp, #48	; 0x30
   22c00:	mov	r0, r6
   22c04:	bl	1c7fc <floor@plt+0xb430>
   22c08:	mov	r3, r8
   22c0c:	vmov.f64	d4, d11
   22c10:	vldr	d3, [r5, #8]
   22c14:	add	r2, sp, #80	; 0x50
   22c18:	vldr	d2, [pc, #264]	; 22d28 <floor@plt+0x1195c>
   22c1c:	add	r1, sp, #64	; 0x40
   22c20:	mov	r0, r7
   22c24:	vstr	d0, [sp, #64]	; 0x40
   22c28:	vstr	d1, [sp, #72]	; 0x48
   22c2c:	vmov.f64	d0, d9
   22c30:	vldr	d1, [pc, #232]	; 22d20 <floor@plt+0x11954>
   22c34:	bl	22614 <floor@plt+0x11248>
   22c38:	vldr	d7, [r5, #8]
   22c3c:	vldr	d5, [r4]
   22c40:	vldr	d6, [r4, #8]
   22c44:	vmov.f64	d1, d9
   22c48:	vmul.f64	d7, d7, d8
   22c4c:	add	r0, sp, #48	; 0x30
   22c50:	vmov.f64	d0, d9
   22c54:	vnmls.f64	d1, d6, d8
   22c58:	vmls.f64	d0, d5, d8
   22c5c:	vstr	d7, [sp, #8]
   22c60:	bl	1c6e4 <floor@plt+0xb318>
   22c64:	add	r1, sp, #48	; 0x30
   22c68:	mov	r0, r6
   22c6c:	bl	1c7fc <floor@plt+0xb430>
   22c70:	vmov.f64	d4, d10
   22c74:	vldr	d3, [r5, #8]
   22c78:	vldr	d2, [pc, #176]	; 22d30 <floor@plt+0x11964>
   22c7c:	mov	r3, r8
   22c80:	add	r2, sp, #80	; 0x50
   22c84:	add	r1, sp, #64	; 0x40
   22c88:	mov	r0, r7
   22c8c:	vstr	d0, [sp, #64]	; 0x40
   22c90:	vstr	d1, [sp, #72]	; 0x48
   22c94:	vmov.f64	d0, d9
   22c98:	vldr	d1, [pc, #136]	; 22d28 <floor@plt+0x1195c>
   22c9c:	bl	22614 <floor@plt+0x11248>
   22ca0:	vldr	d7, [r4, #8]
   22ca4:	vldr	d0, [r4]
   22ca8:	vmov.f64	d1, d9
   22cac:	add	r0, sp, #16
   22cb0:	vnmul.f64	d0, d0, d8
   22cb4:	vnmls.f64	d1, d7, d8
   22cb8:	bl	1c6e4 <floor@plt+0xb318>
   22cbc:	add	r1, sp, #16
   22cc0:	mov	r0, r6
   22cc4:	bl	1c7fc <floor@plt+0xb430>
   22cc8:	vldr	d7, [r4, #8]
   22ccc:	vldr	d6, [r4]
   22cd0:	add	r0, sp, #48	; 0x30
   22cd4:	vstr	d1, [sp, #40]	; 0x28
   22cd8:	vmov.f64	d1, d9
   22cdc:	vstr	d0, [sp, #32]
   22ce0:	vnmul.f64	d0, d6, d8
   22ce4:	vmls.f64	d1, d7, d8
   22ce8:	bl	1c6e4 <floor@plt+0xb318>
   22cec:	add	r1, sp, #48	; 0x30
   22cf0:	b	22d3c <floor@plt+0x11970>
   22cf4:	nop			; (mov r0, r0)
   22cf8:	vfmage.f64	d20, d31, d16
   22cfc:	svclt	0x00db7812
   22d00:	andeq	r0, r0, r0
   22d04:	svccc	0x00e00000
	...
   22d10:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   22d14:	svclt	0x00e921fb
   22d18:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   22d1c:	svccc	0x00e921fb
   22d20:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   22d24:	svccc	0x00f921fb
   22d28:	svcvc	0x003321d2
   22d2c:	andmi	sp, r2, ip, ror r9
   22d30:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   22d34:	strdmi	r2, [r9], -fp
   22d38:	andeq	r1, r4, r0, ror sp
   22d3c:	mov	r0, r6
   22d40:	bl	1c7fc <floor@plt+0xb430>
   22d44:	add	r2, sp, #64	; 0x40
   22d48:	add	r3, sp, #80	; 0x50
   22d4c:	add	r1, sp, #32
   22d50:	str	r8, [sp]
   22d54:	mov	r0, r7
   22d58:	vstr	d0, [sp, #64]	; 0x40
   22d5c:	vstr	d1, [sp, #72]	; 0x48
   22d60:	vldr	d0, [r5, #8]
   22d64:	vmov.f64	d1, d10
   22d68:	bl	22728 <floor@plt+0x1135c>
   22d6c:	vldr	d6, [r4, #8]
   22d70:	vldr	d7, [r4]
   22d74:	vmov.f64	d1, d9
   22d78:	vmov.f64	d0, d9
   22d7c:	add	r0, sp, #48	; 0x30
   22d80:	vmls.f64	d1, d6, d8
   22d84:	vmls.f64	d0, d7, d8
   22d88:	bl	1c6e4 <floor@plt+0xb318>
   22d8c:	add	r1, sp, #48	; 0x30
   22d90:	mov	r0, r6
   22d94:	bl	1c7fc <floor@plt+0xb430>
   22d98:	vmov.f64	d4, d10
   22d9c:	mov	r3, r8
   22da0:	vldr	d3, [r5, #8]
   22da4:	add	r2, sp, #80	; 0x50
   22da8:	vldr	d2, [pc, #384]	; 22f30 <floor@plt+0x11b64>
   22dac:	add	r1, sp, #64	; 0x40
   22db0:	mov	r0, r7
   22db4:	vstr	d0, [sp, #64]	; 0x40
   22db8:	vstr	d1, [sp, #72]	; 0x48
   22dbc:	vmov.f64	d0, d9
   22dc0:	vldr	d1, [pc, #368]	; 22f38 <floor@plt+0x11b6c>
   22dc4:	bl	22614 <floor@plt+0x11248>
   22dc8:	vldr	d7, [r5, #8]
   22dcc:	vldr	d5, [r4]
   22dd0:	vldr	d6, [r4, #8]
   22dd4:	vmov.f64	d1, d9
   22dd8:	vmul.f64	d7, d7, d8
   22ddc:	add	r0, sp, #48	; 0x30
   22de0:	vmov.f64	d0, d9
   22de4:	vmls.f64	d1, d6, d8
   22de8:	vmls.f64	d0, d5, d8
   22dec:	vstr	d7, [sp, #8]
   22df0:	bl	1c6e4 <floor@plt+0xb318>
   22df4:	add	r1, sp, #48	; 0x30
   22df8:	mov	r0, r6
   22dfc:	bl	1c7fc <floor@plt+0xb430>
   22e00:	vmov.f64	d4, d11
   22e04:	vldr	d3, [r5, #8]
   22e08:	vldr	d2, [pc, #304]	; 22f40 <floor@plt+0x11b74>
   22e0c:	mov	r3, r8
   22e10:	add	r2, sp, #80	; 0x50
   22e14:	add	r1, sp, #64	; 0x40
   22e18:	mov	r0, r7
   22e1c:	vstr	d0, [sp, #64]	; 0x40
   22e20:	vstr	d1, [sp, #72]	; 0x48
   22e24:	vmov.f64	d0, d9
   22e28:	vldr	d1, [pc, #256]	; 22f30 <floor@plt+0x11b64>
   22e2c:	bl	22614 <floor@plt+0x11248>
   22e30:	vldr	d7, [r4]
   22e34:	vldr	d1, [r4, #8]
   22e38:	vmov.f64	d0, d9
   22e3c:	add	r0, sp, #16
   22e40:	vnmul.f64	d1, d1, d8
   22e44:	vmls.f64	d0, d7, d8
   22e48:	bl	1c6e4 <floor@plt+0xb318>
   22e4c:	add	r1, sp, #16
   22e50:	mov	r0, r6
   22e54:	bl	1c7fc <floor@plt+0xb430>
   22e58:	vldr	d7, [r4, #8]
   22e5c:	vldr	d6, [r4]
   22e60:	add	r0, sp, #48	; 0x30
   22e64:	vstr	d0, [sp, #32]
   22e68:	vmov.f64	d0, d9
   22e6c:	vstr	d1, [sp, #40]	; 0x28
   22e70:	vnmul.f64	d1, d7, d8
   22e74:	vnmls.f64	d0, d6, d8
   22e78:	bl	1c6e4 <floor@plt+0xb318>
   22e7c:	add	r1, sp, #48	; 0x30
   22e80:	mov	r0, r6
   22e84:	bl	1c7fc <floor@plt+0xb430>
   22e88:	add	r2, sp, #64	; 0x40
   22e8c:	add	r3, sp, #80	; 0x50
   22e90:	add	r1, sp, #32
   22e94:	str	r8, [sp]
   22e98:	mov	r0, r7
   22e9c:	vstr	d0, [sp, #64]	; 0x40
   22ea0:	vstr	d1, [sp, #72]	; 0x48
   22ea4:	vldr	d0, [r5, #8]
   22ea8:	vmov.f64	d1, d11
   22eac:	bl	22728 <floor@plt+0x1135c>
   22eb0:	vldr	d6, [r4, #8]
   22eb4:	vldr	d7, [r4]
   22eb8:	vmov.f64	d1, d9
   22ebc:	vmov.f64	d0, d9
   22ec0:	add	r0, sp, #48	; 0x30
   22ec4:	vmls.f64	d1, d6, d8
   22ec8:	vnmls.f64	d0, d7, d8
   22ecc:	bl	1c6e4 <floor@plt+0xb318>
   22ed0:	add	r1, sp, #48	; 0x30
   22ed4:	mov	r0, r6
   22ed8:	bl	1c7fc <floor@plt+0xb430>
   22edc:	mov	r3, r8
   22ee0:	add	r2, sp, #80	; 0x50
   22ee4:	add	r1, sp, #64	; 0x40
   22ee8:	vmov.f64	d4, d11
   22eec:	mov	r0, r7
   22ef0:	vldr	d3, [r5, #8]
   22ef4:	vldr	d2, [pc, #76]	; 22f48 <floor@plt+0x11b7c>
   22ef8:	vstr	d0, [sp, #64]	; 0x40
   22efc:	vstr	d1, [sp, #72]	; 0x48
   22f00:	vmov.f64	d0, d9
   22f04:	vldr	d1, [pc, #52]	; 22f40 <floor@plt+0x11b74>
   22f08:	bl	22614 <floor@plt+0x11248>
   22f0c:	ldr	r2, [sp, #108]	; 0x6c
   22f10:	ldr	r3, [r9]
   22f14:	cmp	r2, r3
   22f18:	bne	22f28 <floor@plt+0x11b5c>
   22f1c:	add	sp, sp, #116	; 0x74
   22f20:	vpop	{d8-d11}
   22f24:	pop	{r4, r5, r6, r7, r8, r9, pc}
   22f28:	bl	111e0 <__stack_chk_fail@plt>
   22f2c:	nop			; (mov r0, r0)
   22f30:	ldmdbcs	r5, {r1, r2, r3, r4, r6, fp, ip, sp}^
   22f34:	andmi	r6, pc, sl, ror sl	; <UNPREDICTABLE>
   22f38:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   22f3c:	strdmi	r2, [r9], -fp
   22f40:	svcvc	0x003321d2
   22f44:	andsmi	sp, r2, ip, ror r9
   22f48:	ldmib	fp!, {r0, r2, r4, r5, r6, r8, r9, sl, sp, pc}
   22f4c:			; <UNDEFINED> instruction: 0x4015fdbb
   22f50:	vsub.f64	d2, d2, d1
   22f54:	push	{r4, r5, r6, r7, r8, r9, lr}
   22f58:	vpush	{d8-d14}
   22f5c:	ldr	r9, [pc, #268]	; 23070 <floor@plt+0x11ca4>
   22f60:	vldr	d8, [pc, #256]	; 23068 <floor@plt+0x11c9c>
   22f64:	mov	r4, r3
   22f68:	sub	sp, sp, #76	; 0x4c
   22f6c:	vldr	d6, [r3]
   22f70:	ldr	r3, [r9]
   22f74:	vmov.f64	d10, d1
   22f78:	vmov.f64	d9, d0
   22f7c:	vmov.f64	d12, d3
   22f80:	vmov.f64	d14, d8
   22f84:	vmov.f64	d13, d8
   22f88:	mov	r5, r0
   22f8c:	mov	r8, r1
   22f90:	vmul.f64	d11, d2, d0
   22f94:	mov	r7, r2
   22f98:	str	r3, [sp, #68]	; 0x44
   22f9c:	b	22fc0 <floor@plt+0x11bf4>
   22fa0:	vsub.f64	d7, d12, d6
   22fa4:	vadd.f64	d7, d7, d8
   22fa8:	vcmpe.f64	d7, d11
   22fac:	vmrs	APSR_nzcv, fpscr
   22fb0:	bgt	23038 <floor@plt+0x11c6c>
   22fb4:	vstr	d14, [r4]
   22fb8:	vmov.f64	d8, d7
   22fbc:	vmov.f64	d6, d13
   22fc0:	vcmp.f64	d6, #0.0
   22fc4:	vmrs	APSR_nzcv, fpscr
   22fc8:	bne	22fa0 <floor@plt+0x11bd4>
   22fcc:	vdiv.f64	d0, d8, d9
   22fd0:	mov	r1, sp
   22fd4:	add	r0, sp, #8
   22fd8:	vadd.f64	d0, d0, d10
   22fdc:	bl	11264 <sincos@plt>
   22fe0:	ldr	r3, [r5]
   22fe4:	vldr	d1, [sp, #8]
   22fe8:	vldr	d0, [sp]
   22fec:	add	r0, sp, #16
   22ff0:	ldr	r6, [r3, #84]	; 0x54
   22ff4:	bl	1c6e4 <floor@plt+0xb318>
   22ff8:	vmov.f64	d0, d9
   22ffc:	add	r0, sp, #16
   23000:	bl	1c860 <floor@plt+0xb494>
   23004:	add	r1, sp, #32
   23008:	mov	r0, r8
   2300c:	vstr	d1, [sp, #40]	; 0x28
   23010:	vstr	d0, [sp, #32]
   23014:	bl	1c7fc <floor@plt+0xb430>
   23018:	mov	r2, r7
   2301c:	add	r1, sp, #48	; 0x30
   23020:	mov	r0, r5
   23024:	vstr	d1, [sp, #56]	; 0x38
   23028:	vstr	d0, [sp, #48]	; 0x30
   2302c:	blx	r6
   23030:	vldr	d6, [r4]
   23034:	b	22fa0 <floor@plt+0x11bd4>
   23038:	vsub.f64	d8, d11, d8
   2303c:	ldr	r2, [sp, #68]	; 0x44
   23040:	ldr	r3, [r9]
   23044:	cmp	r2, r3
   23048:	vadd.f64	d6, d8, d6
   2304c:	vstr	d6, [r4]
   23050:	bne	23060 <floor@plt+0x11c94>
   23054:	add	sp, sp, #76	; 0x4c
   23058:	vpop	{d8-d14}
   2305c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   23060:	bl	111e0 <__stack_chk_fail@plt>
   23064:	nop			; (mov r0, r0)
	...
   23070:	andeq	r1, r4, r0, ror sp
   23074:	push	{r4, r5, r6, r7, r8, r9, lr}
   23078:	vpush	{d8-d12}
   2307c:	ldr	r7, [pc, #260]	; 23188 <floor@plt+0x11dbc>
   23080:	mov	r5, r0
   23084:	mov	r0, r2
   23088:	sub	sp, sp, #60	; 0x3c
   2308c:	ldr	r2, [r7]
   23090:	mov	r9, r3
   23094:	vmov.f64	d10, d0
   23098:	str	r2, [sp, #52]	; 0x34
   2309c:	mov	r8, r1
   230a0:	ldr	r4, [sp, #128]	; 0x80
   230a4:	bl	1c820 <floor@plt+0xb454>
   230a8:	mov	r0, sp
   230ac:	vstr	d0, [sp]
   230b0:	vstr	d1, [sp, #8]
   230b4:	bl	1c898 <floor@plt+0xb4cc>
   230b8:	vcmp.f64	d0, #0.0
   230bc:	vmrs	APSR_nzcv, fpscr
   230c0:	beq	2315c <floor@plt+0x11d90>
   230c4:	vldr	d8, [pc, #180]	; 23180 <floor@plt+0x11db4>
   230c8:	vmov.f64	d9, d0
   230cc:	vldr	d6, [r4]
   230d0:	vmov.f64	d12, d8
   230d4:	vmov.f64	d11, d8
   230d8:	b	230fc <floor@plt+0x11d30>
   230dc:	vsub.f64	d7, d10, d6
   230e0:	vadd.f64	d7, d7, d8
   230e4:	vcmpe.f64	d7, d9
   230e8:	vmrs	APSR_nzcv, fpscr
   230ec:	bgt	23150 <floor@plt+0x11d84>
   230f0:	vstr	d12, [r4]
   230f4:	vmov.f64	d8, d7
   230f8:	vmov.f64	d6, d11
   230fc:	vcmp.f64	d6, #0.0
   23100:	vmrs	APSR_nzcv, fpscr
   23104:	bne	230dc <floor@plt+0x11d10>
   23108:	ldr	r3, [r5]
   2310c:	vdiv.f64	d0, d8, d9
   23110:	mov	r0, sp
   23114:	ldr	r6, [r3, #84]	; 0x54
   23118:	bl	1c860 <floor@plt+0xb494>
   2311c:	add	r1, sp, #16
   23120:	mov	r0, r8
   23124:	vstr	d0, [sp, #16]
   23128:	vstr	d1, [sp, #24]
   2312c:	bl	1c7fc <floor@plt+0xb430>
   23130:	mov	r2, r9
   23134:	add	r1, sp, #32
   23138:	mov	r0, r5
   2313c:	vstr	d0, [sp, #32]
   23140:	vstr	d1, [sp, #40]	; 0x28
   23144:	blx	r6
   23148:	vldr	d6, [r4]
   2314c:	b	230dc <floor@plt+0x11d10>
   23150:	vsub.f64	d8, d9, d8
   23154:	vadd.f64	d6, d8, d6
   23158:	vstr	d6, [r4]
   2315c:	ldr	r2, [sp, #52]	; 0x34
   23160:	ldr	r3, [r7]
   23164:	cmp	r2, r3
   23168:	bne	23178 <floor@plt+0x11dac>
   2316c:	add	sp, sp, #60	; 0x3c
   23170:	vpop	{d8-d12}
   23174:	pop	{r4, r5, r6, r7, r8, r9, pc}
   23178:	bl	111e0 <__stack_chk_fail@plt>
   2317c:	nop			; (mov r0, r0)
	...
   23188:	andeq	r1, r4, r0, ror sp
   2318c:	vldr	d3, [pc, #1012]	; 23588 <floor@plt+0x121bc>
   23190:	vldr	d5, [r2]
   23194:	vldr	d6, [r3, #8]
   23198:	vldr	d2, [pc, #1008]	; 23590 <floor@plt+0x121c4>
   2319c:	vmul.f64	d3, d0, d3
   231a0:	push	{r4, r5, r6, r7, r8, lr}
   231a4:	vpush	{d8-d15}
   231a8:	mov	ip, r3
   231ac:	mov	r4, r2
   231b0:	mov	r5, r1
   231b4:	mov	r6, r0
   231b8:	ldm	ip!, {r0, r1, r2, r3}
   231bc:	sub	sp, sp, #112	; 0x70
   231c0:	vadd.f64	d4, d5, d3
   231c4:	ldr	r8, [pc, #1028]	; 235d0 <floor@plt+0x12204>
   231c8:	add	lr, sp, #80	; 0x50
   231cc:	vldr	d9, [pc, #956]	; 23590 <floor@plt+0x121c4>
   231d0:	stmia	lr!, {r0, r1, r2, r3}
   231d4:	mov	r3, #1
   231d8:	str	r3, [sp, #80]	; 0x50
   231dc:	ldr	r3, [r8]
   231e0:	vdiv.f64	d7, d4, d6
   231e4:	str	r3, [sp, #108]	; 0x6c
   231e8:	vmov.f64	d1, d0
   231ec:	ldm	ip, {r0, r1}
   231f0:	vldr	d12, [pc, #928]	; 23598 <floor@plt+0x121cc>
   231f4:	vmov.f64	d8, d0
   231f8:	stm	lr, {r0, r1}
   231fc:	add	r0, sp, #48	; 0x30
   23200:	vstr	d12, [sp, #8]
   23204:	add	r7, sp, #8
   23208:	vldr	d14, [pc, #912]	; 235a0 <floor@plt+0x121d4>
   2320c:	vldr	d15, [pc, #916]	; 235a8 <floor@plt+0x121dc>
   23210:	vadd.f64	d7, d7, d2
   23214:	vldr	d2, [pc, #884]	; 23590 <floor@plt+0x121c4>
   23218:	vcvt.s32.f64	s14, d7
   2321c:	vmov	r3, s14
   23220:	cmp	r3, #0
   23224:	vcvtne.f64.s32	d7, s14
   23228:	vmoveq.f64	d11, d6
   2322c:	vdivne.f64	d11, d4, d7
   23230:	vldr	d4, [r4, #8]
   23234:	vadd.f64	d3, d3, d4
   23238:	vmls.f64	d1, d4, d9
   2323c:	vdiv.f64	d7, d3, d6
   23240:	vadd.f64	d7, d7, d2
   23244:	vcvt.s32.f64	s14, d7
   23248:	vmov	r3, s14
   2324c:	cmp	r3, #0
   23250:	vcvtne.f64.s32	d7, s14
   23254:	vmoveq.f64	d10, d6
   23258:	vdivne.f64	d10, d3, d7
   2325c:	vldr	d7, [pc, #844]	; 235b0 <floor@plt+0x121e4>
   23260:	vmul.f64	d7, d0, d7
   23264:	vnmls.f64	d0, d5, d9
   23268:	vdiv.f64	d13, d6, d7
   2326c:	bl	1c6e4 <floor@plt+0xb318>
   23270:	add	r1, sp, #48	; 0x30
   23274:	mov	r0, r5
   23278:	bl	1c7fc <floor@plt+0xb430>
   2327c:	vmov.f64	d2, d12
   23280:	vmov.f64	d3, d10
   23284:	mov	r3, r7
   23288:	add	r2, sp, #80	; 0x50
   2328c:	add	r1, sp, #64	; 0x40
   23290:	mov	r0, r6
   23294:	vstr	d0, [sp, #64]	; 0x40
   23298:	vstr	d1, [sp, #72]	; 0x48
   2329c:	vmov.f64	d0, d8
   232a0:	vldr	d1, [pc, #784]	; 235b8 <floor@plt+0x121ec>
   232a4:	bl	22f50 <floor@plt+0x11b84>
   232a8:	vldr	d7, [r4, #8]
   232ac:	vldr	d0, [r4]
   232b0:	vmov.f64	d1, d8
   232b4:	add	r0, sp, #16
   232b8:	vmul.f64	d0, d0, d9
   232bc:	vmls.f64	d1, d7, d9
   232c0:	bl	1c6e4 <floor@plt+0xb318>
   232c4:	add	r1, sp, #16
   232c8:	mov	r0, r5
   232cc:	bl	1c7fc <floor@plt+0xb430>
   232d0:	vldr	d7, [r4, #8]
   232d4:	vldr	d6, [r4]
   232d8:	add	r0, sp, #48	; 0x30
   232dc:	vstr	d1, [sp, #40]	; 0x28
   232e0:	vmov.f64	d1, d8
   232e4:	vstr	d0, [sp, #32]
   232e8:	vmul.f64	d0, d6, d9
   232ec:	vnmls.f64	d1, d7, d9
   232f0:	bl	1c6e4 <floor@plt+0xb318>
   232f4:	add	r1, sp, #48	; 0x30
   232f8:	mov	r0, r5
   232fc:	bl	1c7fc <floor@plt+0xb430>
   23300:	add	r2, sp, #64	; 0x40
   23304:	add	r3, sp, #80	; 0x50
   23308:	add	r1, sp, #32
   2330c:	mov	r0, r6
   23310:	str	r7, [sp]
   23314:	vstr	d0, [sp, #64]	; 0x40
   23318:	vmov.f64	d0, d10
   2331c:	vstr	d1, [sp, #72]	; 0x48
   23320:	bl	23074 <floor@plt+0x11ca8>
   23324:	vldr	d6, [r4, #8]
   23328:	vldr	d7, [r4]
   2332c:	vmov.f64	d1, d8
   23330:	vmov.f64	d0, d8
   23334:	add	r0, sp, #48	; 0x30
   23338:	vnmls.f64	d1, d6, d9
   2333c:	vnmls.f64	d0, d7, d9
   23340:	bl	1c6e4 <floor@plt+0xb318>
   23344:	add	r1, sp, #48	; 0x30
   23348:	mov	r0, r5
   2334c:	bl	1c7fc <floor@plt+0xb430>
   23350:	vsub.f64	d2, d14, d13
   23354:	mov	r3, r7
   23358:	vmov.f64	d3, d10
   2335c:	add	r2, sp, #80	; 0x50
   23360:	add	r1, sp, #64	; 0x40
   23364:	mov	r0, r6
   23368:	vstr	d0, [sp, #64]	; 0x40
   2336c:	vstr	d1, [sp, #72]	; 0x48
   23370:	vmov.f64	d0, d8
   23374:	vmov.f64	d1, d12
   23378:	bl	22f50 <floor@plt+0x11b84>
   2337c:	vldr	d6, [r4, #8]
   23380:	vldr	d7, [r4]
   23384:	vmov.f64	d1, d8
   23388:	vmov.f64	d0, d8
   2338c:	add	r0, sp, #48	; 0x30
   23390:	vstr	d12, [sp, #8]
   23394:	vnmls.f64	d1, d6, d9
   23398:	vnmls.f64	d0, d7, d9
   2339c:	bl	1c6e4 <floor@plt+0xb318>
   233a0:	add	r1, sp, #48	; 0x30
   233a4:	mov	r0, r5
   233a8:	bl	1c7fc <floor@plt+0xb430>
   233ac:	vmov.f64	d3, d11
   233b0:	vldr	d2, [pc, #520]	; 235c0 <floor@plt+0x121f4>
   233b4:	mov	r3, r7
   233b8:	add	r2, sp, #80	; 0x50
   233bc:	add	r1, sp, #64	; 0x40
   233c0:	mov	r0, r6
   233c4:	vstr	d0, [sp, #64]	; 0x40
   233c8:	vstr	d1, [sp, #72]	; 0x48
   233cc:	vmov.f64	d0, d8
   233d0:	vmov.f64	d1, d14
   233d4:	bl	22f50 <floor@plt+0x11b84>
   233d8:	vldr	d7, [r4]
   233dc:	vldr	d1, [r4, #8]
   233e0:	vmov.f64	d0, d8
   233e4:	add	r0, sp, #16
   233e8:	vmul.f64	d1, d1, d9
   233ec:	vnmls.f64	d0, d7, d9
   233f0:	bl	1c6e4 <floor@plt+0xb318>
   233f4:	add	r1, sp, #16
   233f8:	mov	r0, r5
   233fc:	bl	1c7fc <floor@plt+0xb430>
   23400:	vldr	d7, [r4, #8]
   23404:	vldr	d6, [r4]
   23408:	add	r0, sp, #48	; 0x30
   2340c:	vstr	d0, [sp, #32]
   23410:	vmov.f64	d0, d8
   23414:	vstr	d1, [sp, #40]	; 0x28
   23418:	vmul.f64	d1, d7, d9
   2341c:	vmls.f64	d0, d6, d9
   23420:	bl	1c6e4 <floor@plt+0xb318>
   23424:	add	r1, sp, #48	; 0x30
   23428:	mov	r0, r5
   2342c:	bl	1c7fc <floor@plt+0xb430>
   23430:	add	r2, sp, #64	; 0x40
   23434:	add	r3, sp, #80	; 0x50
   23438:	add	r1, sp, #32
   2343c:	mov	r0, r6
   23440:	str	r7, [sp]
   23444:	vstr	d0, [sp, #64]	; 0x40
   23448:	vmov.f64	d0, d11
   2344c:	vstr	d1, [sp, #72]	; 0x48
   23450:	bl	23074 <floor@plt+0x11ca8>
   23454:	vldr	d6, [r4, #8]
   23458:	vldr	d7, [r4]
   2345c:	vmov.f64	d1, d8
   23460:	vmov.f64	d0, d8
   23464:	add	r0, sp, #48	; 0x30
   23468:	vnmls.f64	d1, d6, d9
   2346c:	vmls.f64	d0, d7, d9
   23470:	bl	1c6e4 <floor@plt+0xb318>
   23474:	add	r1, sp, #48	; 0x30
   23478:	mov	r0, r5
   2347c:	bl	1c7fc <floor@plt+0xb430>
   23480:	vsub.f64	d2, d15, d13
   23484:	mov	r3, r7
   23488:	vmov.f64	d3, d11
   2348c:	add	r2, sp, #80	; 0x50
   23490:	add	r1, sp, #64	; 0x40
   23494:	mov	r0, r6
   23498:	vstr	d0, [sp, #64]	; 0x40
   2349c:	vstr	d1, [sp, #72]	; 0x48
   234a0:	vmov.f64	d0, d8
   234a4:	vldr	d1, [pc, #276]	; 235c0 <floor@plt+0x121f4>
   234a8:	bl	22f50 <floor@plt+0x11b84>
   234ac:	vldr	d6, [r4, #8]
   234b0:	vldr	d7, [r4]
   234b4:	vmov.f64	d1, d8
   234b8:	vmov.f64	d0, d8
   234bc:	add	r0, sp, #48	; 0x30
   234c0:	vstr	d12, [sp, #8]
   234c4:	vnmls.f64	d1, d6, d9
   234c8:	vmls.f64	d0, d7, d9
   234cc:	bl	1c6e4 <floor@plt+0xb318>
   234d0:	add	r1, sp, #48	; 0x30
   234d4:	mov	r0, r5
   234d8:	bl	1c7fc <floor@plt+0xb430>
   234dc:	vmov.f64	d3, d10
   234e0:	vldr	d2, [pc, #224]	; 235c8 <floor@plt+0x121fc>
   234e4:	mov	r3, r7
   234e8:	add	r2, sp, #80	; 0x50
   234ec:	add	r1, sp, #64	; 0x40
   234f0:	mov	r0, r6
   234f4:	vstr	d0, [sp, #64]	; 0x40
   234f8:	vstr	d1, [sp, #72]	; 0x48
   234fc:	vmov.f64	d0, d8
   23500:	vmov.f64	d1, d15
   23504:	bl	22f50 <floor@plt+0x11b84>
   23508:	vldr	d7, [r4, #8]
   2350c:	vldr	d0, [r4]
   23510:	vmov.f64	d1, d8
   23514:	add	r0, sp, #16
   23518:	vnmul.f64	d0, d0, d9
   2351c:	vnmls.f64	d1, d7, d9
   23520:	bl	1c6e4 <floor@plt+0xb318>
   23524:	add	r1, sp, #16
   23528:	mov	r0, r5
   2352c:	bl	1c7fc <floor@plt+0xb430>
   23530:	vldr	d7, [r4, #8]
   23534:	vldr	d6, [r4]
   23538:	add	r0, sp, #48	; 0x30
   2353c:	vstr	d1, [sp, #40]	; 0x28
   23540:	vmov.f64	d1, d8
   23544:	vstr	d0, [sp, #32]
   23548:	vnmul.f64	d0, d6, d9
   2354c:	vmls.f64	d1, d7, d9
   23550:	bl	1c6e4 <floor@plt+0xb318>
   23554:	add	r1, sp, #48	; 0x30
   23558:	mov	r0, r5
   2355c:	bl	1c7fc <floor@plt+0xb430>
   23560:	add	r2, sp, #64	; 0x40
   23564:	add	r3, sp, #80	; 0x50
   23568:	add	r1, sp, #32
   2356c:	mov	r0, r6
   23570:	str	r7, [sp]
   23574:	vstr	d0, [sp, #64]	; 0x40
   23578:	vmov.f64	d0, d10
   2357c:	vstr	d1, [sp, #72]	; 0x48
   23580:	b	235d4 <floor@plt+0x12208>
   23584:	nop			; (mov r0, r0)
   23588:	vfmage.f64	d20, d31, d16
   2358c:	svclt	0x00db7812
   23590:	andeq	r0, r0, r0
   23594:	svccc	0x00e00000
	...
   235a0:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   235a4:	svccc	0x00e921fb
   235a8:	svcvc	0x003321d2
   235ac:	andmi	sp, r2, ip, ror r9
   235b0:	andeq	r0, r0, r0
   235b4:	subsmi	r0, r9, r0
   235b8:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   235bc:	svclt	0x00e921fb
   235c0:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   235c4:	svccc	0x00f921fb
   235c8:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   235cc:	strdmi	r2, [r9], -fp
   235d0:	andeq	r1, r4, r0, ror sp
   235d4:	bl	23074 <floor@plt+0x11ca8>
   235d8:	vldr	d6, [r4, #8]
   235dc:	vldr	d7, [r4]
   235e0:	vmov.f64	d1, d8
   235e4:	vmov.f64	d0, d8
   235e8:	add	r0, sp, #48	; 0x30
   235ec:	vmls.f64	d1, d6, d9
   235f0:	vmls.f64	d0, d7, d9
   235f4:	bl	1c6e4 <floor@plt+0xb318>
   235f8:	add	r1, sp, #48	; 0x30
   235fc:	mov	r0, r5
   23600:	bl	1c7fc <floor@plt+0xb430>
   23604:	vldr	d7, [pc, #380]	; 23788 <floor@plt+0x123bc>
   23608:	vmov.f64	d3, d10
   2360c:	mov	r3, r7
   23610:	add	r2, sp, #80	; 0x50
   23614:	vsub.f64	d2, d7, d13
   23618:	add	r1, sp, #64	; 0x40
   2361c:	mov	r0, r6
   23620:	vstr	d0, [sp, #64]	; 0x40
   23624:	vstr	d1, [sp, #72]	; 0x48
   23628:	vmov.f64	d0, d8
   2362c:	vldr	d1, [pc, #348]	; 23790 <floor@plt+0x123c4>
   23630:	bl	22f50 <floor@plt+0x11b84>
   23634:	vldr	d6, [r4, #8]
   23638:	vldr	d7, [r4]
   2363c:	vmov.f64	d1, d8
   23640:	vmov.f64	d0, d8
   23644:	add	r0, sp, #48	; 0x30
   23648:	vstr	d12, [sp, #8]
   2364c:	vmls.f64	d1, d6, d9
   23650:	vmls.f64	d0, d7, d9
   23654:	bl	1c6e4 <floor@plt+0xb318>
   23658:	add	r1, sp, #48	; 0x30
   2365c:	mov	r0, r5
   23660:	bl	1c7fc <floor@plt+0xb430>
   23664:	vmov.f64	d3, d11
   23668:	vldr	d2, [pc, #296]	; 23798 <floor@plt+0x123cc>
   2366c:	mov	r3, r7
   23670:	add	r2, sp, #80	; 0x50
   23674:	add	r1, sp, #64	; 0x40
   23678:	mov	r0, r6
   2367c:	vstr	d0, [sp, #64]	; 0x40
   23680:	vstr	d1, [sp, #72]	; 0x48
   23684:	vmov.f64	d0, d8
   23688:	vldr	d1, [pc, #248]	; 23788 <floor@plt+0x123bc>
   2368c:	bl	22f50 <floor@plt+0x11b84>
   23690:	vldr	d7, [r4]
   23694:	vldr	d1, [r4, #8]
   23698:	vmov.f64	d0, d8
   2369c:	add	r0, sp, #16
   236a0:	vnmul.f64	d1, d1, d9
   236a4:	vmls.f64	d0, d7, d9
   236a8:	bl	1c6e4 <floor@plt+0xb318>
   236ac:	add	r1, sp, #16
   236b0:	mov	r0, r5
   236b4:	bl	1c7fc <floor@plt+0xb430>
   236b8:	vldr	d7, [r4, #8]
   236bc:	vldr	d6, [r4]
   236c0:	add	r0, sp, #48	; 0x30
   236c4:	vstr	d0, [sp, #32]
   236c8:	vmov.f64	d0, d8
   236cc:	vstr	d1, [sp, #40]	; 0x28
   236d0:	vnmul.f64	d1, d7, d9
   236d4:	vnmls.f64	d0, d6, d9
   236d8:	bl	1c6e4 <floor@plt+0xb318>
   236dc:	add	r1, sp, #48	; 0x30
   236e0:	mov	r0, r5
   236e4:	bl	1c7fc <floor@plt+0xb430>
   236e8:	add	r2, sp, #64	; 0x40
   236ec:	add	r3, sp, #80	; 0x50
   236f0:	add	r1, sp, #32
   236f4:	mov	r0, r6
   236f8:	str	r7, [sp]
   236fc:	vstr	d0, [sp, #64]	; 0x40
   23700:	vmov.f64	d0, d11
   23704:	vstr	d1, [sp, #72]	; 0x48
   23708:	bl	23074 <floor@plt+0x11ca8>
   2370c:	vldr	d6, [r4, #8]
   23710:	vldr	d7, [r4]
   23714:	vmov.f64	d1, d8
   23718:	vmov.f64	d0, d8
   2371c:	add	r0, sp, #48	; 0x30
   23720:	vmls.f64	d1, d6, d9
   23724:	vnmls.f64	d0, d7, d9
   23728:	bl	1c6e4 <floor@plt+0xb318>
   2372c:	add	r1, sp, #48	; 0x30
   23730:	mov	r0, r5
   23734:	bl	1c7fc <floor@plt+0xb430>
   23738:	vldr	d2, [pc, #96]	; 237a0 <floor@plt+0x123d4>
   2373c:	mov	r3, r7
   23740:	add	r2, sp, #80	; 0x50
   23744:	add	r1, sp, #64	; 0x40
   23748:	vmov.f64	d3, d11
   2374c:	mov	r0, r6
   23750:	vsub.f64	d2, d2, d13
   23754:	vstr	d0, [sp, #64]	; 0x40
   23758:	vstr	d1, [sp, #72]	; 0x48
   2375c:	vmov.f64	d0, d8
   23760:	vldr	d1, [pc, #48]	; 23798 <floor@plt+0x123cc>
   23764:	bl	22f50 <floor@plt+0x11b84>
   23768:	ldr	r2, [sp, #108]	; 0x6c
   2376c:	ldr	r3, [r8]
   23770:	cmp	r2, r3
   23774:	bne	23784 <floor@plt+0x123b8>
   23778:	add	sp, sp, #112	; 0x70
   2377c:	vpop	{d8-d15}
   23780:	pop	{r4, r5, r6, r7, r8, pc}
   23784:	bl	111e0 <__stack_chk_fail@plt>
   23788:	ldmdbcs	r5, {r1, r2, r3, r4, r6, fp, ip, sp}^
   2378c:	andmi	r6, pc, sl, ror sl	; <UNPREDICTABLE>
   23790:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   23794:	strdmi	r2, [r9], -fp
   23798:	svcvc	0x003321d2
   2379c:	andsmi	sp, r2, ip, ror r9
   237a0:	ldmib	fp!, {r0, r2, r4, r5, r6, r8, r9, sl, sp, pc}
   237a4:			; <UNDEFINED> instruction: 0x4015fdbb
   237a8:	push	{r4, r5, r6, r7, r8, r9, lr}
   237ac:	vpush	{d8-d10}
   237b0:	ldr	r8, [pc, #1056]	; 23bd8 <floor@plt+0x1280c>
   237b4:	mov	r4, r2
   237b8:	vmov.f64	d9, d0
   237bc:	sub	sp, sp, #132	; 0x84
   237c0:	ldr	r2, [r8]
   237c4:	mov	r5, r0
   237c8:	vldr	d0, [pc, #1008]	; 23bc0 <floor@plt+0x127f4>
   237cc:	mov	r0, r4
   237d0:	mov	r6, r1
   237d4:	mov	r7, r3
   237d8:	str	r2, [sp, #124]	; 0x7c
   237dc:	bl	1c844 <floor@plt+0xb478>
   237e0:	add	r1, sp, #104	; 0x68
   237e4:	mov	r0, r6
   237e8:	vldr	d8, [pc, #984]	; 23bc8 <floor@plt+0x127fc>
   237ec:	vneg.f64	d10, d9
   237f0:	vstr	d0, [sp, #104]	; 0x68
   237f4:	vstr	d1, [sp, #112]	; 0x70
   237f8:	bl	1c820 <floor@plt+0xb454>
   237fc:	ldr	r3, [r5]
   23800:	add	r0, sp, #24
   23804:	ldr	r9, [r3, #36]	; 0x24
   23808:	vstr	d0, [sp, #8]
   2380c:	vstr	d1, [sp, #16]
   23810:	vldr	d0, [pc, #952]	; 23bd0 <floor@plt+0x12804>
   23814:	vmov.f64	d1, d9
   23818:	bl	1c6e4 <floor@plt+0xb318>
   2381c:	add	r1, sp, #24
   23820:	add	r0, sp, #8
   23824:	bl	1c7fc <floor@plt+0xb430>
   23828:	add	r0, sp, #56	; 0x38
   2382c:	vstr	d0, [sp, #40]	; 0x28
   23830:	vstr	d1, [sp, #48]	; 0x30
   23834:	vmov.f64	d0, d9
   23838:	vmov.f64	d1, d9
   2383c:	bl	1c6e4 <floor@plt+0xb318>
   23840:	add	r1, sp, #56	; 0x38
   23844:	add	r0, sp, #8
   23848:	bl	1c7fc <floor@plt+0xb430>
   2384c:	add	r0, sp, #88	; 0x58
   23850:	vstr	d0, [sp, #72]	; 0x48
   23854:	vstr	d1, [sp, #80]	; 0x50
   23858:	vmov.f64	d0, d9
   2385c:	vldr	d1, [pc, #876]	; 23bd0 <floor@plt+0x12804>
   23860:	bl	1c6e4 <floor@plt+0xb318>
   23864:	add	r1, sp, #88	; 0x58
   23868:	add	r0, sp, #8
   2386c:	bl	1c7fc <floor@plt+0xb430>
   23870:	add	r2, sp, #72	; 0x48
   23874:	add	r3, sp, #104	; 0x68
   23878:	add	r1, sp, #40	; 0x28
   2387c:	mov	r0, r5
   23880:	str	r7, [sp]
   23884:	vstr	d0, [sp, #104]	; 0x68
   23888:	vstr	d1, [sp, #112]	; 0x70
   2388c:	blx	r9
   23890:	vldr	d1, [r4, #8]
   23894:	vldr	d0, [r4]
   23898:	add	r0, sp, #104	; 0x68
   2389c:	vmul.f64	d1, d1, d8
   238a0:	vnmul.f64	d0, d0, d8
   238a4:	bl	1c6e4 <floor@plt+0xb318>
   238a8:	add	r1, sp, #104	; 0x68
   238ac:	mov	r0, r6
   238b0:	bl	1c7fc <floor@plt+0xb430>
   238b4:	ldr	r3, [r5]
   238b8:	add	r0, sp, #24
   238bc:	ldr	r9, [r3, #36]	; 0x24
   238c0:	vstr	d0, [sp, #8]
   238c4:	vstr	d1, [sp, #16]
   238c8:	vmov.f64	d0, d9
   238cc:	vldr	d1, [pc, #764]	; 23bd0 <floor@plt+0x12804>
   238d0:	bl	1c6e4 <floor@plt+0xb318>
   238d4:	add	r1, sp, #24
   238d8:	add	r0, sp, #8
   238dc:	bl	1c7fc <floor@plt+0xb430>
   238e0:	add	r0, sp, #56	; 0x38
   238e4:	vstr	d0, [sp, #40]	; 0x28
   238e8:	vstr	d1, [sp, #48]	; 0x30
   238ec:	vmov.f64	d0, d9
   238f0:	vmov.f64	d1, d10
   238f4:	bl	1c6e4 <floor@plt+0xb318>
   238f8:	add	r1, sp, #56	; 0x38
   238fc:	add	r0, sp, #8
   23900:	bl	1c7fc <floor@plt+0xb430>
   23904:	add	r0, sp, #88	; 0x58
   23908:	vstr	d0, [sp, #72]	; 0x48
   2390c:	vstr	d1, [sp, #80]	; 0x50
   23910:	vldr	d0, [pc, #696]	; 23bd0 <floor@plt+0x12804>
   23914:	vmov.f64	d1, d10
   23918:	bl	1c6e4 <floor@plt+0xb318>
   2391c:	add	r1, sp, #88	; 0x58
   23920:	add	r0, sp, #8
   23924:	bl	1c7fc <floor@plt+0xb430>
   23928:	add	r2, sp, #72	; 0x48
   2392c:	add	r3, sp, #104	; 0x68
   23930:	add	r1, sp, #40	; 0x28
   23934:	mov	r0, r5
   23938:	str	r7, [sp]
   2393c:	vstr	d1, [sp, #112]	; 0x70
   23940:	vstr	d0, [sp, #104]	; 0x68
   23944:	blx	r9
   23948:	vldr	d0, [pc, #624]	; 23bc0 <floor@plt+0x127f4>
   2394c:	mov	r0, r4
   23950:	bl	1c844 <floor@plt+0xb478>
   23954:	add	r1, sp, #104	; 0x68
   23958:	mov	r0, r6
   2395c:	vstr	d1, [sp, #112]	; 0x70
   23960:	vstr	d0, [sp, #104]	; 0x68
   23964:	bl	1c7fc <floor@plt+0xb430>
   23968:	ldr	r3, [r5]
   2396c:	add	r0, sp, #24
   23970:	ldr	r9, [r3, #36]	; 0x24
   23974:	vstr	d1, [sp, #16]
   23978:	vstr	d0, [sp, #8]
   2397c:	vmov.f64	d1, d10
   23980:	vldr	d0, [pc, #584]	; 23bd0 <floor@plt+0x12804>
   23984:	bl	1c6e4 <floor@plt+0xb318>
   23988:	add	r1, sp, #24
   2398c:	add	r0, sp, #8
   23990:	bl	1c7fc <floor@plt+0xb430>
   23994:	add	r0, sp, #56	; 0x38
   23998:	vstr	d0, [sp, #40]	; 0x28
   2399c:	vstr	d1, [sp, #48]	; 0x30
   239a0:	vmov.f64	d0, d10
   239a4:	vmov.f64	d1, d10
   239a8:	bl	1c6e4 <floor@plt+0xb318>
   239ac:	add	r1, sp, #56	; 0x38
   239b0:	add	r0, sp, #8
   239b4:	bl	1c7fc <floor@plt+0xb430>
   239b8:	add	r0, sp, #88	; 0x58
   239bc:	vstr	d0, [sp, #72]	; 0x48
   239c0:	vstr	d1, [sp, #80]	; 0x50
   239c4:	vmov.f64	d0, d10
   239c8:	vldr	d1, [pc, #512]	; 23bd0 <floor@plt+0x12804>
   239cc:	bl	1c6e4 <floor@plt+0xb318>
   239d0:	add	r1, sp, #88	; 0x58
   239d4:	add	r0, sp, #8
   239d8:	bl	1c7fc <floor@plt+0xb430>
   239dc:	add	r2, sp, #72	; 0x48
   239e0:	add	r3, sp, #104	; 0x68
   239e4:	add	r1, sp, #40	; 0x28
   239e8:	mov	r0, r5
   239ec:	str	r7, [sp]
   239f0:	vstr	d0, [sp, #104]	; 0x68
   239f4:	vstr	d1, [sp, #112]	; 0x70
   239f8:	blx	r9
   239fc:	vldr	d1, [r4, #8]
   23a00:	vldr	d0, [r4]
   23a04:	add	r0, sp, #104	; 0x68
   23a08:	vnmul.f64	d1, d1, d8
   23a0c:	vmul.f64	d0, d0, d8
   23a10:	bl	1c6e4 <floor@plt+0xb318>
   23a14:	add	r1, sp, #104	; 0x68
   23a18:	mov	r0, r6
   23a1c:	bl	1c7fc <floor@plt+0xb430>
   23a20:	ldr	r3, [r5]
   23a24:	add	r0, sp, #24
   23a28:	ldr	r9, [r3, #36]	; 0x24
   23a2c:	vstr	d0, [sp, #8]
   23a30:	vstr	d1, [sp, #16]
   23a34:	vmov.f64	d0, d10
   23a38:	vldr	d1, [pc, #400]	; 23bd0 <floor@plt+0x12804>
   23a3c:	bl	1c6e4 <floor@plt+0xb318>
   23a40:	add	r1, sp, #24
   23a44:	add	r0, sp, #8
   23a48:	bl	1c7fc <floor@plt+0xb430>
   23a4c:	add	r0, sp, #56	; 0x38
   23a50:	vstr	d0, [sp, #40]	; 0x28
   23a54:	vstr	d1, [sp, #48]	; 0x30
   23a58:	vmov.f64	d0, d10
   23a5c:	vmov.f64	d1, d9
   23a60:	bl	1c6e4 <floor@plt+0xb318>
   23a64:	add	r1, sp, #56	; 0x38
   23a68:	add	r0, sp, #8
   23a6c:	bl	1c7fc <floor@plt+0xb430>
   23a70:	add	r0, sp, #88	; 0x58
   23a74:	vstr	d0, [sp, #72]	; 0x48
   23a78:	vstr	d1, [sp, #80]	; 0x50
   23a7c:	vldr	d0, [pc, #332]	; 23bd0 <floor@plt+0x12804>
   23a80:	vmov.f64	d1, d9
   23a84:	bl	1c6e4 <floor@plt+0xb318>
   23a88:	add	r1, sp, #88	; 0x58
   23a8c:	add	r0, sp, #8
   23a90:	bl	1c7fc <floor@plt+0xb430>
   23a94:	add	r2, sp, #72	; 0x48
   23a98:	add	r3, sp, #104	; 0x68
   23a9c:	add	r1, sp, #40	; 0x28
   23aa0:	mov	r0, r5
   23aa4:	str	r7, [sp]
   23aa8:	vstr	d0, [sp, #104]	; 0x68
   23aac:	vstr	d1, [sp, #112]	; 0x70
   23ab0:	blx	r9
   23ab4:	add	r0, sp, #40	; 0x28
   23ab8:	bl	1c6c8 <floor@plt+0xb2fc>
   23abc:	vldr	d7, [r4, #8]
   23ac0:	vldr	d0, [r4]
   23ac4:	vmov.f64	d1, d9
   23ac8:	add	r0, sp, #104	; 0x68
   23acc:	vnmul.f64	d0, d0, d8
   23ad0:	vnmls.f64	d1, d7, d8
   23ad4:	bl	1c6e4 <floor@plt+0xb318>
   23ad8:	add	r1, sp, #104	; 0x68
   23adc:	mov	r0, r6
   23ae0:	bl	1c7fc <floor@plt+0xb430>
   23ae4:	ldr	r3, [r5]
   23ae8:	mov	r0, r4
   23aec:	ldr	r9, [r3, #24]
   23af0:	vstr	d0, [sp, #40]	; 0x28
   23af4:	vldr	d0, [pc, #196]	; 23bc0 <floor@plt+0x127f4>
   23af8:	vstr	d1, [sp, #48]	; 0x30
   23afc:	bl	1c844 <floor@plt+0xb478>
   23b00:	add	r1, sp, #56	; 0x38
   23b04:	mov	r0, r6
   23b08:	vstr	d1, [sp, #64]	; 0x40
   23b0c:	vstr	d0, [sp, #56]	; 0x38
   23b10:	bl	1c820 <floor@plt+0xb454>
   23b14:	add	r0, sp, #88	; 0x58
   23b18:	vstr	d1, [sp, #80]	; 0x50
   23b1c:	vstr	d0, [sp, #72]	; 0x48
   23b20:	vmov.f64	d1, d9
   23b24:	vldr	d0, [pc, #164]	; 23bd0 <floor@plt+0x12804>
   23b28:	bl	1c6e4 <floor@plt+0xb318>
   23b2c:	add	r1, sp, #88	; 0x58
   23b30:	add	r0, sp, #72	; 0x48
   23b34:	bl	1c7fc <floor@plt+0xb430>
   23b38:	add	r2, sp, #40	; 0x28
   23b3c:	mov	r3, #1
   23b40:	add	r1, sp, #104	; 0x68
   23b44:	mov	r0, r5
   23b48:	str	r7, [sp]
   23b4c:	vstr	d0, [sp, #104]	; 0x68
   23b50:	vstr	d1, [sp, #112]	; 0x70
   23b54:	blx	r9
   23b58:	vldr	d7, [r4]
   23b5c:	vldr	d1, [r4, #8]
   23b60:	vmov.f64	d0, d9
   23b64:	add	r0, sp, #104	; 0x68
   23b68:	vmul.f64	d1, d1, d8
   23b6c:	vnmls.f64	d0, d7, d8
   23b70:	bl	1c6e4 <floor@plt+0xb318>
   23b74:	add	r1, sp, #104	; 0x68
   23b78:	mov	r0, r6
   23b7c:	bl	1c7fc <floor@plt+0xb430>
   23b80:	ldr	r3, [r5]
   23b84:	vldr	d6, [r4]
   23b88:	vldr	d7, [r4, #8]
   23b8c:	ldr	r9, [r3, #24]
   23b90:	add	r0, sp, #88	; 0x58
   23b94:	vstr	d0, [sp, #40]	; 0x28
   23b98:	vmov.f64	d0, d9
   23b9c:	vstr	d1, [sp, #48]	; 0x30
   23ba0:	vmul.f64	d1, d7, d8
   23ba4:	vmls.f64	d0, d6, d8
   23ba8:	bl	1c6e4 <floor@plt+0xb318>
   23bac:	add	r1, sp, #88	; 0x58
   23bb0:	mov	r0, r6
   23bb4:	bl	1c7fc <floor@plt+0xb430>
   23bb8:	add	r2, sp, #40	; 0x28
   23bbc:	b	23bdc <floor@plt+0x12810>
   23bc0:	andeq	r0, r0, r0
   23bc4:	andmi	r0, r0, r0
   23bc8:	andeq	r0, r0, r0
   23bcc:	svccc	0x00e00000
	...
   23bd8:	andeq	r1, r4, r0, ror sp
   23bdc:	mov	r3, #1
   23be0:	add	r1, sp, #104	; 0x68
   23be4:	mov	r0, r5
   23be8:	str	r7, [sp]
   23bec:	vstr	d0, [sp, #104]	; 0x68
   23bf0:	vstr	d1, [sp, #112]	; 0x70
   23bf4:	blx	r9
   23bf8:	vldr	d7, [r4, #8]
   23bfc:	vldr	d0, [r4]
   23c00:	vmov.f64	d1, d9
   23c04:	add	r0, sp, #104	; 0x68
   23c08:	vmul.f64	d0, d0, d8
   23c0c:	vmls.f64	d1, d7, d8
   23c10:	bl	1c6e4 <floor@plt+0xb318>
   23c14:	add	r1, sp, #104	; 0x68
   23c18:	mov	r0, r6
   23c1c:	bl	1c7fc <floor@plt+0xb430>
   23c20:	ldr	r3, [r5]
   23c24:	vldr	d6, [r4]
   23c28:	vldr	d7, [r4, #8]
   23c2c:	ldr	r9, [r3, #24]
   23c30:	add	r0, sp, #88	; 0x58
   23c34:	vstr	d1, [sp, #48]	; 0x30
   23c38:	vmov.f64	d1, d9
   23c3c:	vstr	d0, [sp, #40]	; 0x28
   23c40:	vmul.f64	d0, d6, d8
   23c44:	vnmls.f64	d1, d7, d8
   23c48:	bl	1c6e4 <floor@plt+0xb318>
   23c4c:	add	r1, sp, #88	; 0x58
   23c50:	mov	r0, r6
   23c54:	bl	1c7fc <floor@plt+0xb430>
   23c58:	add	r2, sp, #40	; 0x28
   23c5c:	mov	r3, #1
   23c60:	add	r1, sp, #104	; 0x68
   23c64:	mov	r0, r5
   23c68:	str	r7, [sp]
   23c6c:	vstr	d0, [sp, #104]	; 0x68
   23c70:	vstr	d1, [sp, #112]	; 0x70
   23c74:	blx	r9
   23c78:	vldr	d7, [r4]
   23c7c:	vldr	d1, [r4, #8]
   23c80:	vmov.f64	d0, d9
   23c84:	add	r0, sp, #104	; 0x68
   23c88:	vnmul.f64	d1, d1, d8
   23c8c:	vmls.f64	d0, d7, d8
   23c90:	bl	1c6e4 <floor@plt+0xb318>
   23c94:	add	r1, sp, #104	; 0x68
   23c98:	mov	r0, r6
   23c9c:	bl	1c7fc <floor@plt+0xb430>
   23ca0:	ldr	r3, [r5]
   23ca4:	vldr	d6, [r4]
   23ca8:	vldr	d7, [r4, #8]
   23cac:	ldr	r4, [r3, #24]
   23cb0:	add	r0, sp, #88	; 0x58
   23cb4:	vstr	d0, [sp, #40]	; 0x28
   23cb8:	vmov.f64	d0, d9
   23cbc:	vstr	d1, [sp, #48]	; 0x30
   23cc0:	vnmul.f64	d1, d7, d8
   23cc4:	vnmls.f64	d0, d6, d8
   23cc8:	bl	1c6e4 <floor@plt+0xb318>
   23ccc:	add	r1, sp, #88	; 0x58
   23cd0:	mov	r0, r6
   23cd4:	bl	1c7fc <floor@plt+0xb430>
   23cd8:	add	r2, sp, #40	; 0x28
   23cdc:	mov	r3, #1
   23ce0:	str	r7, [sp]
   23ce4:	add	r1, sp, #104	; 0x68
   23ce8:	mov	r0, r5
   23cec:	vstr	d0, [sp, #104]	; 0x68
   23cf0:	vstr	d1, [sp, #112]	; 0x70
   23cf4:	blx	r4
   23cf8:	ldr	r2, [sp, #124]	; 0x7c
   23cfc:	ldr	r3, [r8]
   23d00:	cmp	r2, r3
   23d04:	bne	23d14 <floor@plt+0x12948>
   23d08:	add	sp, sp, #132	; 0x84
   23d0c:	vpop	{d8-d10}
   23d10:	pop	{r4, r5, r6, r7, r8, r9, pc}
   23d14:	bl	111e0 <__stack_chk_fail@plt>
   23d18:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   23d1c:	vpush	{d8-d10}
   23d20:	ldr	r9, [pc, #904]	; 240b0 <floor@plt+0x12ce4>
   23d24:	vmov.f64	d8, d0
   23d28:	mov	r4, r2
   23d2c:	sub	sp, sp, #128	; 0x80
   23d30:	ldr	r3, [r9]
   23d34:	mov	r6, r0
   23d38:	add	r0, sp, #32
   23d3c:	vldr	d9, [pc, #868]	; 240a8 <floor@plt+0x12cdc>
   23d40:	mov	r7, r1
   23d44:	vmov.f64	d10, d1
   23d48:	str	r3, [sp, #124]	; 0x7c
   23d4c:	bl	1c3a0 <floor@plt+0xafd4>
   23d50:	vldr	d6, [r4, #8]
   23d54:	vldr	d7, [r4]
   23d58:	vmov.f64	d1, d8
   23d5c:	vmov.f64	d0, d8
   23d60:	ldr	r2, [r6]
   23d64:	mov	r3, #0
   23d68:	vnmls.f64	d1, d6, d9
   23d6c:	mov	r0, sp
   23d70:	vnmls.f64	d0, d7, d9
   23d74:	ldr	sl, [r2, #16]
   23d78:	str	r3, [sp, #32]
   23d7c:	bl	1c6e4 <floor@plt+0xb318>
   23d80:	mov	r1, sp
   23d84:	mov	r0, r7
   23d88:	bl	1c7fc <floor@plt+0xb430>
   23d8c:	add	r2, sp, #32
   23d90:	add	r1, sp, #16
   23d94:	mov	r0, r6
   23d98:	add	r5, sp, #56	; 0x38
   23d9c:	add	r8, sp, #120	; 0x78
   23da0:	vstr	d0, [sp, #16]
   23da4:	vstr	d1, [sp, #24]
   23da8:	vmov.f64	d0, d8
   23dac:	vmov.f64	d1, d10
   23db0:	blx	sl
   23db4:	vldr	d6, [r4, #8]
   23db8:	vldr	d7, [r4]
   23dbc:	vmov.f64	d1, d8
   23dc0:	vmov.f64	d0, d8
   23dc4:	ldr	r3, [r6]
   23dc8:	mov	r0, sp
   23dcc:	vnmls.f64	d1, d6, d9
   23dd0:	ldr	sl, [r3, #16]
   23dd4:	vmls.f64	d0, d7, d9
   23dd8:	bl	1c6e4 <floor@plt+0xb318>
   23ddc:	mov	r1, sp
   23de0:	mov	r0, r7
   23de4:	bl	1c7fc <floor@plt+0xb430>
   23de8:	add	r2, sp, #32
   23dec:	add	r1, sp, #16
   23df0:	mov	r0, r6
   23df4:	vstr	d0, [sp, #16]
   23df8:	vstr	d1, [sp, #24]
   23dfc:	vmov.f64	d0, d8
   23e00:	vmov.f64	d1, d10
   23e04:	blx	sl
   23e08:	vldr	d6, [r4, #8]
   23e0c:	vldr	d7, [r4]
   23e10:	vmov.f64	d1, d8
   23e14:	vmov.f64	d0, d8
   23e18:	ldr	r3, [r6]
   23e1c:	mov	r0, sp
   23e20:	vmls.f64	d1, d6, d9
   23e24:	ldr	sl, [r3, #16]
   23e28:	vmls.f64	d0, d7, d9
   23e2c:	bl	1c6e4 <floor@plt+0xb318>
   23e30:	mov	r1, sp
   23e34:	mov	r0, r7
   23e38:	bl	1c7fc <floor@plt+0xb430>
   23e3c:	add	r2, sp, #32
   23e40:	add	r1, sp, #16
   23e44:	mov	r0, r6
   23e48:	vstr	d0, [sp, #16]
   23e4c:	vstr	d1, [sp, #24]
   23e50:	vmov.f64	d0, d8
   23e54:	vmov.f64	d1, d10
   23e58:	blx	sl
   23e5c:	vldr	d6, [r4, #8]
   23e60:	vldr	d7, [r4]
   23e64:	vmov.f64	d1, d8
   23e68:	vmov.f64	d0, d8
   23e6c:	ldr	r3, [r6]
   23e70:	mov	r0, sp
   23e74:	vmls.f64	d1, d6, d9
   23e78:	ldr	sl, [r3, #16]
   23e7c:	vnmls.f64	d0, d7, d9
   23e80:	bl	1c6e4 <floor@plt+0xb318>
   23e84:	mov	r1, sp
   23e88:	mov	r0, r7
   23e8c:	bl	1c7fc <floor@plt+0xb430>
   23e90:	add	r2, sp, #32
   23e94:	add	r1, sp, #16
   23e98:	mov	r0, r6
   23e9c:	vstr	d0, [sp, #16]
   23ea0:	vstr	d1, [sp, #24]
   23ea4:	vmov.f64	d0, d8
   23ea8:	vmov.f64	d1, d10
   23eac:	blx	sl
   23eb0:	mov	r0, r5
   23eb4:	add	r5, r5, #16
   23eb8:	bl	1c6c8 <floor@plt+0xb2fc>
   23ebc:	cmp	r8, r5
   23ec0:	bne	23eb0 <floor@plt+0x12ae4>
   23ec4:	vldr	d9, [pc, #476]	; 240a8 <floor@plt+0x12cdc>
   23ec8:	vldr	d7, [r4, #8]
   23ecc:	vldr	d0, [r4]
   23ed0:	vmov.f64	d1, d8
   23ed4:	add	r0, sp, #16
   23ed8:	vmul.f64	d0, d0, d9
   23edc:	vnmls.f64	d1, d7, d9
   23ee0:	bl	1c6e4 <floor@plt+0xb318>
   23ee4:	add	r1, sp, #16
   23ee8:	mov	r0, r7
   23eec:	bl	1c7fc <floor@plt+0xb430>
   23ef0:	vldr	d7, [r4, #8]
   23ef4:	vldr	d6, [r4]
   23ef8:	add	r0, sp, #16
   23efc:	vstr	d1, [sp, #64]	; 0x40
   23f00:	vmov.f64	d1, d8
   23f04:	vstr	d0, [sp, #56]	; 0x38
   23f08:	vnmul.f64	d0, d6, d9
   23f0c:	vnmls.f64	d1, d7, d9
   23f10:	bl	1c6e4 <floor@plt+0xb318>
   23f14:	add	r1, sp, #16
   23f18:	mov	r0, r7
   23f1c:	bl	1c7fc <floor@plt+0xb430>
   23f20:	vldr	d7, [r4, #8]
   23f24:	vldr	d6, [r4]
   23f28:	add	r0, sp, #16
   23f2c:	vstr	d1, [sp, #80]	; 0x50
   23f30:	vmov.f64	d1, d8
   23f34:	vstr	d0, [sp, #72]	; 0x48
   23f38:	vnmul.f64	d0, d6, d9
   23f3c:	vmls.f64	d1, d7, d9
   23f40:	bl	1c6e4 <floor@plt+0xb318>
   23f44:	add	r1, sp, #16
   23f48:	mov	r0, r7
   23f4c:	bl	1c7fc <floor@plt+0xb430>
   23f50:	vldr	d6, [r4]
   23f54:	vldr	d7, [r4, #8]
   23f58:	add	r0, sp, #16
   23f5c:	vstr	d1, [sp, #96]	; 0x60
   23f60:	vmov.f64	d1, d8
   23f64:	vstr	d0, [sp, #88]	; 0x58
   23f68:	vmul.f64	d0, d6, d9
   23f6c:	vmls.f64	d1, d7, d9
   23f70:	bl	1c6e4 <floor@plt+0xb318>
   23f74:	add	r1, sp, #16
   23f78:	mov	r0, r7
   23f7c:	bl	1c7fc <floor@plt+0xb430>
   23f80:	ldr	r1, [r6]
   23f84:	add	r3, sp, #32
   23f88:	mov	r2, #4
   23f8c:	ldr	r5, [r1, #28]
   23f90:	mov	r0, r6
   23f94:	add	r1, sp, #56	; 0x38
   23f98:	vstr	d0, [sp, #104]	; 0x68
   23f9c:	vstr	d1, [sp, #112]	; 0x70
   23fa0:	vmov.f64	d0, d10
   23fa4:	blx	r5
   23fa8:	vldr	d7, [r4]
   23fac:	vldr	d1, [r4, #8]
   23fb0:	vmov.f64	d0, d8
   23fb4:	add	r0, sp, #16
   23fb8:	vmul.f64	d1, d1, d9
   23fbc:	vnmls.f64	d0, d7, d9
   23fc0:	bl	1c6e4 <floor@plt+0xb318>
   23fc4:	add	r1, sp, #16
   23fc8:	mov	r0, r7
   23fcc:	bl	1c7fc <floor@plt+0xb430>
   23fd0:	vldr	d7, [r4, #8]
   23fd4:	vldr	d6, [r4]
   23fd8:	add	r0, sp, #16
   23fdc:	vstr	d0, [sp, #56]	; 0x38
   23fe0:	vmov.f64	d0, d8
   23fe4:	vstr	d1, [sp, #64]	; 0x40
   23fe8:	vmul.f64	d1, d7, d9
   23fec:	vmls.f64	d0, d6, d9
   23ff0:	bl	1c6e4 <floor@plt+0xb318>
   23ff4:	add	r1, sp, #16
   23ff8:	mov	r0, r7
   23ffc:	bl	1c7fc <floor@plt+0xb430>
   24000:	vldr	d7, [r4, #8]
   24004:	vldr	d6, [r4]
   24008:	add	r0, sp, #16
   2400c:	vstr	d0, [sp, #72]	; 0x48
   24010:	vmov.f64	d0, d8
   24014:	vstr	d1, [sp, #80]	; 0x50
   24018:	vnmul.f64	d1, d7, d9
   2401c:	vmls.f64	d0, d6, d9
   24020:	bl	1c6e4 <floor@plt+0xb318>
   24024:	add	r1, sp, #16
   24028:	mov	r0, r7
   2402c:	bl	1c7fc <floor@plt+0xb430>
   24030:	vldr	d6, [r4]
   24034:	vldr	d7, [r4, #8]
   24038:	add	r0, sp, #16
   2403c:	vstr	d0, [sp, #88]	; 0x58
   24040:	vmov.f64	d0, d8
   24044:	vstr	d1, [sp, #96]	; 0x60
   24048:	vnmul.f64	d1, d7, d9
   2404c:	vnmls.f64	d0, d6, d9
   24050:	bl	1c6e4 <floor@plt+0xb318>
   24054:	add	r1, sp, #16
   24058:	mov	r0, r7
   2405c:	bl	1c7fc <floor@plt+0xb430>
   24060:	ldr	r2, [r6]
   24064:	add	r3, sp, #32
   24068:	add	r1, sp, #56	; 0x38
   2406c:	ldr	r4, [r2, #28]
   24070:	mov	r0, r6
   24074:	mov	r2, #4
   24078:	vstr	d0, [sp, #104]	; 0x68
   2407c:	vstr	d1, [sp, #112]	; 0x70
   24080:	vmov.f64	d0, d10
   24084:	blx	r4
   24088:	ldr	r2, [sp, #124]	; 0x7c
   2408c:	ldr	r3, [r9]
   24090:	cmp	r2, r3
   24094:	bne	240a4 <floor@plt+0x12cd8>
   24098:	add	sp, sp, #128	; 0x80
   2409c:	vpop	{d8-d10}
   240a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   240a4:	bl	111e0 <__stack_chk_fail@plt>
   240a8:	andeq	r0, r0, r0
   240ac:	svccc	0x00e00000
   240b0:	andeq	r1, r4, r0, ror sp
   240b4:	vcmpe.f64	d1, #0.0
   240b8:	push	{r4, r5, r6, r7, r8, lr}
   240bc:	vpush	{d8}
   240c0:	mov	r4, r3
   240c4:	vmrs	APSR_nzcv, fpscr
   240c8:	mov	r5, r0
   240cc:	mov	r6, r1
   240d0:	mov	r7, r2
   240d4:	vmov.f64	d8, d0
   240d8:	ldr	r3, [sp, #32]
   240dc:	bge	240e8 <floor@plt+0x12d1c>
   240e0:	cmp	r3, #0
   240e4:	beq	240fc <floor@plt+0x12d30>
   240e8:	vmov.f64	d0, d8
   240ec:	mov	r2, r7
   240f0:	mov	r1, r6
   240f4:	mov	r0, r5
   240f8:	bl	23d18 <floor@plt+0x1294c>
   240fc:	ldr	r2, [r4]
   24100:	cmp	r2, #3
   24104:	ldrls	pc, [pc, r2, lsl #2]
   24108:	b	24184 <floor@plt+0x12db8>
   2410c:	andeq	r4, r2, ip, ror r1
   24110:	andeq	r4, r2, ip, asr r1
   24114:	andeq	r4, r2, ip, lsr r1
   24118:	andeq	r4, r2, ip, lsl r1
   2411c:	vmov.f64	d0, d8
   24120:	vpop	{d8}
   24124:	mov	r3, r4
   24128:	mov	r2, r7
   2412c:	mov	r1, r6
   24130:	mov	r0, r5
   24134:	pop	{r4, r5, r6, r7, r8, lr}
   24138:	b	228fc <floor@plt+0x11530>
   2413c:	vmov.f64	d0, d8
   24140:	vpop	{d8}
   24144:	mov	r3, r4
   24148:	mov	r2, r7
   2414c:	mov	r1, r6
   24150:	mov	r0, r5
   24154:	pop	{r4, r5, r6, r7, r8, lr}
   24158:	b	2318c <floor@plt+0x11dc0>
   2415c:	vmov.f64	d0, d8
   24160:	vpop	{d8}
   24164:	mov	r3, r4
   24168:	mov	r2, r7
   2416c:	mov	r1, r6
   24170:	mov	r0, r5
   24174:	pop	{r4, r5, r6, r7, r8, lr}
   24178:	b	237a8 <floor@plt+0x123dc>
   2417c:	vpop	{d8}
   24180:	pop	{r4, r5, r6, r7, r8, pc}
   24184:	vpop	{d8}
   24188:	ldr	r1, [pc, #8]	; 24198 <floor@plt+0x12dcc>
   2418c:	ldr	r0, [pc, #8]	; 2419c <floor@plt+0x12dd0>
   24190:	pop	{r4, r5, r6, r7, r8, lr}
   24194:	b	26c88 <floor@plt+0x158bc>
   24198:	andeq	pc, r2, r8, ror #25
   2419c:	andeq	r0, r0, r3, asr r1
   241a0:	ldr	r3, [pc, #12]	; 241b4 <floor@plt+0x12de8>
   241a4:	ldr	r0, [r3]
   241a8:	adds	r0, r0, #0
   241ac:	movne	r0, #1
   241b0:	bx	lr
   241b4:	andeq	r2, r4, r8, lsr #6
   241b8:	push	{r4, r5, r6, r7, r8, lr}
   241bc:	mov	r4, r0
   241c0:	ldr	lr, [sp, #24]
   241c4:	ldr	ip, [r0]
   241c8:	mov	r5, r1
   241cc:	vldr	d0, [lr, #16]
   241d0:	ldr	r1, [ip, #116]	; 0x74
   241d4:	mov	r6, r2
   241d8:	mov	r7, r3
   241dc:	blx	r1
   241e0:	ldr	r0, [r4]
   241e4:	mov	r3, r7
   241e8:	mov	r2, r6
   241ec:	ldr	lr, [r0, #96]	; 0x60
   241f0:	mov	r1, r5
   241f4:	mov	r0, r4
   241f8:	mov	ip, lr
   241fc:	pop	{r4, r5, r6, r7, r8, lr}
   24200:	bx	ip
   24204:	ldr	r0, [r0, #80]	; 0x50
   24208:	bx	lr
   2420c:	ldr	r0, [r0, #84]	; 0x54
   24210:	bx	lr
   24214:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24218:	vpush	{d8-d10}
   2421c:	mov	r5, r0
   24220:	ldr	ip, [pc, #736]	; 24508 <floor@plt+0x1313c>
   24224:	mov	r9, r3
   24228:	sub	sp, sp, #124	; 0x7c
   2422c:	mov	r4, r2
   24230:	ldm	r1, {r0, r1, r2, r3}
   24234:	add	sl, sp, #16
   24238:	ldr	lr, [r5]
   2423c:	ldr	r6, [sp, #184]	; 0xb8
   24240:	ldr	ip, [ip]
   24244:	stm	sl, {r0, r1, r2, r3}
   24248:	vldr	d0, [r6, #16]
   2424c:	ldr	r8, [lr, #116]	; 0x74
   24250:	str	ip, [sp, #116]	; 0x74
   24254:	mov	r0, r5
   24258:	blx	r8
   2425c:	cmp	r9, #0
   24260:	ble	242f4 <floor@plt+0x12f28>
   24264:	vldr	d9, [pc, #660]	; 24500 <floor@plt+0x13134>
   24268:	add	r9, r4, r9, lsl #4
   2426c:	ldr	r3, [r6]
   24270:	cmp	r3, #3
   24274:	ldrls	pc, [pc, r3, lsl #2]
   24278:	b	244ec <floor@plt+0x13120>
   2427c:	andeq	r4, r2, r0, ror #5
   24280:	andeq	r4, r2, r8, asr #6
   24284:	andeq	r4, r2, ip, lsl #5
   24288:	andeq	r4, r2, r4, lsl r3
   2428c:	mov	r1, sl
   24290:	mov	r0, r4
   24294:	bl	1c820 <floor@plt+0xb454>
   24298:	add	r8, sp, #64	; 0x40
   2429c:	mov	r0, r8
   242a0:	vstr	d0, [sp, #64]	; 0x40
   242a4:	vstr	d1, [sp, #72]	; 0x48
   242a8:	bl	1c898 <floor@plt+0xb4cc>
   242ac:	vldr	d7, [r6, #8]
   242b0:	vdiv.f64	d0, d0, d7
   242b4:	vadd.f64	d0, d0, d9
   242b8:	vcvt.s32.f64	s15, d0
   242bc:	vmov	r7, s15
   242c0:	cmp	r7, #0
   242c4:	bne	24454 <floor@plt+0x13088>
   242c8:	ldr	r3, [r5]
   242cc:	mov	r2, r6
   242d0:	mov	r1, sl
   242d4:	ldr	r3, [r3, #84]	; 0x54
   242d8:	mov	r0, r5
   242dc:	blx	r3
   242e0:	ldm	r4, {r0, r1, r2, r3}
   242e4:	add	r4, r4, #16
   242e8:	cmp	r9, r4
   242ec:	stm	sl, {r0, r1, r2, r3}
   242f0:	bne	2426c <floor@plt+0x12ea0>
   242f4:	ldr	r3, [pc, #524]	; 24508 <floor@plt+0x1313c>
   242f8:	ldr	r2, [sp, #116]	; 0x74
   242fc:	ldr	r3, [r3]
   24300:	cmp	r2, r3
   24304:	bne	244e8 <floor@plt+0x1311c>
   24308:	add	sp, sp, #124	; 0x7c
   2430c:	vpop	{d8-d10}
   24310:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24314:	mov	r1, sl
   24318:	mov	r0, r4
   2431c:	bl	1c820 <floor@plt+0xb454>
   24320:	add	r0, sp, #32
   24324:	vstr	d0, [sp, #32]
   24328:	vstr	d1, [sp, #40]	; 0x28
   2432c:	bl	1c898 <floor@plt+0xb4cc>
   24330:	vmov.f64	d8, d0
   24334:	vldr	d0, [r6, #8]
   24338:	vadd.f64	d7, d0, d0
   2433c:	vcmpe.f64	d7, d8
   24340:	vmrs	APSR_nzcv, fpscr
   24344:	blt	24364 <floor@plt+0x12f98>
   24348:	ldr	r3, [r5]
   2434c:	mov	r2, r4
   24350:	mov	r1, sl
   24354:	ldr	r3, [r3, #92]	; 0x5c
   24358:	mov	r0, r5
   2435c:	blx	r3
   24360:	b	242e0 <floor@plt+0x12f14>
   24364:	vsub.f64	d5, d8, d0
   24368:	add	r0, sp, #32
   2436c:	vdiv.f64	d0, d0, d8
   24370:	vdiv.f64	d6, d5, d7
   24374:	vadd.f64	d6, d6, d9
   24378:	vcvt.s32.f64	s20, d6
   2437c:	bl	1c860 <floor@plt+0xb494>
   24380:	vldr	d7, [r6, #8]
   24384:	add	r0, sp, #32
   24388:	vsub.f64	d7, d8, d7
   2438c:	vcvt.f64.s32	d5, s20
   24390:	vdiv.f64	d6, d7, d5
   24394:	vstr	d0, [sp, #48]	; 0x30
   24398:	vstr	d1, [sp, #56]	; 0x38
   2439c:	vdiv.f64	d0, d6, d8
   243a0:	bl	1c860 <floor@plt+0xb494>
   243a4:	vmov	r3, s20
   243a8:	cmp	r3, #0
   243ac:	vstr	d1, [sp, #72]	; 0x48
   243b0:	vstr	d0, [sp, #64]	; 0x40
   243b4:	blt	242e0 <floor@plt+0x12f14>
   243b8:	add	r3, r3, #1
   243bc:	add	r2, sp, #96	; 0x60
   243c0:	str	r9, [sp, #4]
   243c4:	str	r4, [sp, #8]
   243c8:	mov	r7, #0
   243cc:	add	r8, sp, #64	; 0x40
   243d0:	add	fp, sp, #80	; 0x50
   243d4:	mov	r9, r3
   243d8:	mov	r4, r2
   243dc:	str	r6, [sp, #12]
   243e0:	vmov	s15, r7
   243e4:	mov	r0, r8
   243e8:	add	r7, r7, #1
   243ec:	vcvt.f64.s32	d0, s15
   243f0:	bl	1c860 <floor@plt+0xb494>
   243f4:	mov	r1, r4
   243f8:	mov	r0, sl
   243fc:	vstr	d0, [sp, #96]	; 0x60
   24400:	vstr	d1, [sp, #104]	; 0x68
   24404:	bl	1c7fc <floor@plt+0xb430>
   24408:	ldr	r3, [r5]
   2440c:	add	r1, sp, #48	; 0x30
   24410:	mov	r0, fp
   24414:	ldr	r6, [r3, #92]	; 0x5c
   24418:	vstr	d0, [sp, #80]	; 0x50
   2441c:	vstr	d1, [sp, #88]	; 0x58
   24420:	bl	1c7fc <floor@plt+0xb430>
   24424:	mov	r2, r4
   24428:	mov	r1, fp
   2442c:	mov	r0, r5
   24430:	vstr	d0, [sp, #96]	; 0x60
   24434:	vstr	d1, [sp, #104]	; 0x68
   24438:	blx	r6
   2443c:	cmp	r9, r7
   24440:	bne	243e0 <floor@plt+0x13014>
   24444:	ldr	r9, [sp, #4]
   24448:	ldr	r4, [sp, #8]
   2444c:	ldr	r6, [sp, #12]
   24450:	b	242e0 <floor@plt+0x12f14>
   24454:	vcvt.f64.s32	d0, s15
   24458:	mov	r0, r8
   2445c:	bl	1c7c4 <floor@plt+0xb3f8>
   24460:	cmp	r7, #0
   24464:	blt	242e0 <floor@plt+0x12f14>
   24468:	add	r3, r7, #1
   2446c:	str	r3, [sp, #4]
   24470:	add	r3, sp, #96	; 0x60
   24474:	str	r9, [sp, #8]
   24478:	mov	r7, #0
   2447c:	add	fp, sp, #80	; 0x50
   24480:	mov	r9, r3
   24484:	str	r4, [sp, #12]
   24488:	vmov	s15, r7
   2448c:	ldr	r3, [r5]
   24490:	mov	r0, r8
   24494:	add	r7, r7, #1
   24498:	vcvt.f64.s32	d0, s15
   2449c:	ldr	r4, [r3, #84]	; 0x54
   244a0:	bl	1c860 <floor@plt+0xb494>
   244a4:	mov	r1, fp
   244a8:	mov	r0, sl
   244ac:	vstr	d0, [sp, #80]	; 0x50
   244b0:	vstr	d1, [sp, #88]	; 0x58
   244b4:	bl	1c7fc <floor@plt+0xb430>
   244b8:	mov	r2, r6
   244bc:	mov	r1, r9
   244c0:	mov	r0, r5
   244c4:	vstr	d0, [sp, #96]	; 0x60
   244c8:	vstr	d1, [sp, #104]	; 0x68
   244cc:	blx	r4
   244d0:	ldr	r3, [sp, #4]
   244d4:	cmp	r3, r7
   244d8:	bne	24488 <floor@plt+0x130bc>
   244dc:	ldr	r9, [sp, #8]
   244e0:	ldr	r4, [sp, #12]
   244e4:	b	242e0 <floor@plt+0x12f14>
   244e8:	bl	111e0 <__stack_chk_fail@plt>
   244ec:	ldr	r1, [pc, #24]	; 2450c <floor@plt+0x13140>
   244f0:	mov	r0, #127	; 0x7f
   244f4:	bl	26c88 <floor@plt+0x158bc>
   244f8:	b	242e0 <floor@plt+0x12f14>
   244fc:	nop			; (mov r0, r0)
   24500:	andeq	r0, r0, r0
   24504:	svccc	0x00e00000
   24508:	andeq	r1, r4, r0, ror sp
   2450c:	andeq	pc, r2, ip, asr #28
   24510:	ldr	r3, [pc, #20]	; 2452c <floor@plt+0x13160>
   24514:	push	{r4, lr}
   24518:	mov	r4, r0
   2451c:	str	r3, [r0]
   24520:	bl	1c3f0 <floor@plt+0xb024>
   24524:	mov	r0, r4
   24528:	pop	{r4, pc}
   2452c:	andeq	pc, r2, ip, lsl #25
   24530:	ldr	r3, [pc, #40]	; 24560 <floor@plt+0x13194>
   24534:	push	{r4, lr}
   24538:	mov	r4, r0
   2453c:	str	r3, [r0]
   24540:	bl	1c3f0 <floor@plt+0xb024>
   24544:	mov	r0, r4
   24548:	bl	286b0 <_ZdlPv@@Base>
   2454c:	mov	r0, r4
   24550:	pop	{r4, pc}
   24554:	mov	r0, r4
   24558:	bl	286b0 <_ZdlPv@@Base>
   2455c:	bl	111ec <__cxa_end_cleanup@plt>
   24560:	andeq	pc, r2, ip, lsl #25
   24564:	vcmp.f64	d0, #0.0
   24568:	ldr	r3, [pc, #112]	; 245e0 <floor@plt+0x13214>
   2456c:	vldr	d7, [pc, #100]	; 245d8 <floor@plt+0x1320c>
   24570:	vmrs	APSR_nzcv, fpscr
   24574:	ldr	r3, [r3]
   24578:	vmovmi.f64	d0, d7
   2457c:	cmp	r3, #0
   24580:	bxeq	lr
   24584:	vldr	d7, [r0, #64]	; 0x40
   24588:	push	{r4, lr}
   2458c:	mov	r4, r0
   24590:	sub	sp, sp, #16
   24594:	vcmp.f64	d7, d0
   24598:	vmrs	APSR_nzcv, fpscr
   2459c:	bne	245a8 <floor@plt+0x131dc>
   245a0:	add	sp, sp, #16
   245a4:	pop	{r4, pc}
   245a8:	vneg.f64	d7, d0
   245ac:	vmov	r2, r3, d0
   245b0:	ldr	r1, [pc, #44]	; 245e4 <floor@plt+0x13218>
   245b4:	mov	r0, #1
   245b8:	vstr	d7, [sp]
   245bc:	vstr	d0, [sp, #8]
   245c0:	bl	113c0 <__printf_chk@plt>
   245c4:	vldr	d0, [sp, #8]
   245c8:	vstr	d0, [r4, #64]	; 0x40
   245cc:	add	sp, sp, #16
   245d0:	pop	{r4, pc}
   245d4:	nop			; (mov r0, r0)
   245d8:	andeq	r0, r0, r0
   245dc:	svclt	0x00f00000	; IMB
   245e0:	andeq	r2, r4, r8, lsr #6
   245e4:	andeq	pc, r2, ip, ror #28
   245e8:	push	{r4, r5, r6, r8, r9, sl, fp, lr}
   245ec:	vpush	{d8}
   245f0:	ldrd	sl, [r1]
   245f4:	ldrd	r8, [r2, #8]
   245f8:	mov	r4, r0
   245fc:	sub	sp, sp, #24
   24600:	strd	sl, [r0, #32]
   24604:	strd	r8, [r0, #40]	; 0x28
   24608:	mov	r5, r1
   2460c:	mov	r6, r2
   24610:	bl	1c4a8 <floor@plt+0xb0dc>
   24614:	vldr	d5, [r5]
   24618:	vldr	d6, [r6, #8]
   2461c:	vldr	d4, [r5, #8]
   24620:	vldr	d7, [r6]
   24624:	ldr	r1, [pc, #200]	; 246f4 <floor@plt+0x13328>
   24628:	mov	r0, #1
   2462c:	vsub.f64	d6, d6, d4
   24630:	vsub.f64	d7, d7, d5
   24634:	vdiv.f64	d5, d6, d0
   24638:	vstr	d0, [r4, #56]	; 0x38
   2463c:	vdiv.f64	d8, d7, d0
   24640:	vstr	d5, [r4, #48]	; 0x30
   24644:	vmov	r2, r3, d5
   24648:	vstr	d8, [sp]
   2464c:	bl	113c0 <__printf_chk@plt>
   24650:	ldr	r2, [r4, #4]
   24654:	cmp	r2, #0
   24658:	beq	246e0 <floor@plt+0x13314>
   2465c:	ldr	r1, [pc, #148]	; 246f8 <floor@plt+0x1332c>
   24660:	mov	r0, #1
   24664:	bl	113c0 <__printf_chk@plt>
   24668:	ldrd	r0, [r6]
   2466c:	ldrd	r2, [r5, #8]
   24670:	ldrd	r8, [r6, #8]
   24674:	strd	r0, [sp, #8]
   24678:	strd	r2, [sp]
   2467c:	strd	r8, [sp, #16]
   24680:	ldr	r1, [pc, #116]	; 246fc <floor@plt+0x13330>
   24684:	ldrd	r2, [r5]
   24688:	mov	r0, #1
   2468c:	bl	113c0 <__printf_chk@plt>
   24690:	ldrd	r4, [r4, #48]	; 0x30
   24694:	mov	r2, #0
   24698:	mov	r3, #0
   2469c:	ldr	r1, [pc, #92]	; 24700 <floor@plt+0x13334>
   246a0:	strd	r2, [sp, #16]
   246a4:	vstr	d8, [sp, #8]
   246a8:	strd	r4, [sp]
   246ac:	mov	r0, #1
   246b0:	bl	113c0 <__printf_chk@plt>
   246b4:	ldr	r0, [pc, #72]	; 24704 <floor@plt+0x13338>
   246b8:	bl	1112c <puts@plt>
   246bc:	ldr	r0, [pc, #68]	; 24708 <floor@plt+0x1333c>
   246c0:	bl	1112c <puts@plt>
   246c4:	vmov	r2, r3, d8
   246c8:	ldr	r1, [pc, #60]	; 2470c <floor@plt+0x13340>
   246cc:	mov	r0, #1
   246d0:	add	sp, sp, #24
   246d4:	vpop	{d8}
   246d8:	pop	{r4, r5, r6, r8, r9, sl, fp, lr}
   246dc:	b	113c0 <__printf_chk@plt>
   246e0:	ldr	r3, [pc, #40]	; 24710 <floor@plt+0x13344>
   246e4:	mov	r0, #10
   246e8:	ldr	r1, [r3]
   246ec:	bl	111f8 <putc@plt>
   246f0:	b	24668 <floor@plt+0x1329c>
   246f4:	andeq	pc, r2, ip, lsl #29
   246f8:	muleq	r2, ip, lr
   246fc:	andeq	pc, r2, r4, lsr #29
   24700:			; <UNDEFINED> instruction: 0x0002feb8
   24704:	ldrdeq	pc, [r2], -r8
   24708:	andeq	pc, r2, ip, ror #29
   2470c:	strdeq	pc, [r2], -r8
   24710:	andeq	r2, r4, r4, asr r4
   24714:	subs	ip, r2, #0
   24718:	push	{r4, r5, r6, lr}
   2471c:	mov	r5, r1
   24720:	beq	24738 <floor@plt+0x1336c>
   24724:	ldr	lr, [r0]
   24728:	mov	r2, r3
   2472c:	mov	r1, ip
   24730:	ldr	r3, [lr, #52]	; 0x34
   24734:	blx	r3
   24738:	ldr	r4, [pc, #24]	; 24758 <floor@plt+0x1338c>
   2473c:	mov	r0, r5
   24740:	ldr	r1, [r4]
   24744:	bl	11354 <fputs@plt>
   24748:	ldr	r1, [r4]
   2474c:	mov	r0, #10
   24750:	pop	{r4, r5, r6, lr}
   24754:	b	111f8 <putc@plt>
   24758:	andeq	r2, r4, r4, asr r4
   2475c:	ldr	r3, [r0]
   24760:	push	{r4, r5, r6, r7, r8, lr}
   24764:	mov	r4, r0
   24768:	vldr	d0, [pc, #176]	; 24820 <floor@plt+0x13454>
   2476c:	ldr	r3, [r3, #116]	; 0x74
   24770:	blx	r3
   24774:	ldr	r7, [pc, #172]	; 24828 <floor@plt+0x1345c>
   24778:	ldr	r3, [r4]
   2477c:	ldr	r5, [pc, #168]	; 2482c <floor@plt+0x13460>
   24780:	mov	r6, #0
   24784:	ldr	r3, [r3, #60]	; 0x3c
   24788:	mov	r0, r4
   2478c:	strd	r6, [r4, #72]	; 0x48
   24790:	blx	r3
   24794:	ldr	r3, [r5]
   24798:	cmp	r3, #0
   2479c:	beq	24808 <floor@plt+0x1343c>
   247a0:	ldr	r0, [pc, #136]	; 24830 <floor@plt+0x13464>
   247a4:	bl	1112c <puts@plt>
   247a8:	ldr	r0, [pc, #132]	; 24834 <floor@plt+0x13468>
   247ac:	bl	1112c <puts@plt>
   247b0:	ldr	r0, [pc, #128]	; 24838 <floor@plt+0x1346c>
   247b4:	bl	1112c <puts@plt>
   247b8:	ldr	r3, [r4]
   247bc:	ldr	r2, [pc, #120]	; 2483c <floor@plt+0x13470>
   247c0:	ldr	r1, [pc, #120]	; 24840 <floor@plt+0x13474>
   247c4:	mov	r0, r4
   247c8:	ldr	r2, [r2]
   247cc:	ldr	r1, [r1]
   247d0:	ldr	r3, [r3, #52]	; 0x34
   247d4:	blx	r3
   247d8:	ldr	r0, [r5]
   247dc:	ldr	r3, [pc, #96]	; 24844 <floor@plt+0x13478>
   247e0:	ldr	r1, [pc, #96]	; 24848 <floor@plt+0x1347c>
   247e4:	ldr	r2, [pc, #96]	; 2484c <floor@plt+0x13480>
   247e8:	cmp	r0, #0
   247ec:	movne	r0, r1
   247f0:	moveq	r0, r2
   247f4:	ldr	r3, [r3]
   247f8:	mov	r2, #4
   247fc:	mov	r1, #1
   24800:	pop	{r4, r5, r6, r7, r8, lr}
   24804:	b	11258 <fwrite@plt>
   24808:	ldrd	r2, [r4, #48]	; 0x30
   2480c:	ldr	r1, [pc, #60]	; 24850 <floor@plt+0x13484>
   24810:	mov	r0, #1
   24814:	bl	113c0 <__printf_chk@plt>
   24818:	b	247a0 <floor@plt+0x133d4>
   2481c:	nop			; (mov r0, r0)
   24820:	andeq	r0, r0, r0
   24824:	andgt	r0, r0, r0
   24828:	svclt	0x00f00000	; IMB
   2482c:	andeq	r2, r4, r8, lsl #18
   24830:	andeq	pc, r2, ip, lsr #30
   24834:	andeq	pc, r2, ip, lsr pc	; <UNPREDICTABLE>
   24838:	andeq	pc, r2, r0, asr #30
   2483c:	andeq	r5, r4, ip, lsr #10
   24840:	andeq	r5, r4, ip, asr #9
   24844:	andeq	r2, r4, r4, asr r4
   24848:	andeq	pc, r2, ip, lsl #30
   2484c:	andeq	pc, r2, r4, lsl pc	; <UNPREDICTABLE>
   24850:	andeq	pc, r2, ip, lsl pc	; <UNPREDICTABLE>
   24854:	ldr	r3, [pc, #132]	; 248e0 <floor@plt+0x13514>
   24858:	push	{r4, lr}
   2485c:	mov	r4, r0
   24860:	ldr	r3, [r3]
   24864:	sub	sp, sp, #8
   24868:	cmp	r3, #0
   2486c:	beq	24880 <floor@plt+0x134b4>
   24870:	vldr	d7, [r0, #72]	; 0x48
   24874:	vcmp.f64	d7, d0
   24878:	vmrs	APSR_nzcv, fpscr
   2487c:	bne	248b0 <floor@plt+0x134e4>
   24880:	ldr	r0, [r4, #80]	; 0x50
   24884:	cmp	r0, #0
   24888:	beq	248a8 <floor@plt+0x134dc>
   2488c:	bl	110e4 <free@plt>
   24890:	mov	r3, #0
   24894:	str	r3, [r4, #80]	; 0x50
   24898:	ldr	r0, [pc, #68]	; 248e4 <floor@plt+0x13518>
   2489c:	add	sp, sp, #8
   248a0:	pop	{r4, lr}
   248a4:	b	1112c <puts@plt>
   248a8:	add	sp, sp, #8
   248ac:	pop	{r4, pc}
   248b0:	vldr	d7, [pc, #32]	; 248d8 <floor@plt+0x1350c>
   248b4:	ldr	r1, [pc, #44]	; 248e8 <floor@plt+0x1351c>
   248b8:	mov	r0, #1
   248bc:	vstr	d0, [sp]
   248c0:	vsub.f64	d7, d7, d0
   248c4:	vmov	r2, r3, d7
   248c8:	bl	113c0 <__printf_chk@plt>
   248cc:	vldr	d0, [sp]
   248d0:	vstr	d0, [r4, #72]	; 0x48
   248d4:	b	24880 <floor@plt+0x134b4>
   248d8:	andeq	r0, r0, r0
   248dc:	svccc	0x00f00000	; IMB
   248e0:	andeq	r2, r4, r8, lsr #6
   248e4:	andeq	pc, r2, r4, ror #30
   248e8:	andeq	pc, r2, ip, asr #30
   248ec:	push	{r4, r5, r6, r7, r8, lr}
   248f0:	ldr	r8, [sp, #24]
   248f4:	ldr	ip, [r8]
   248f8:	cmp	ip, #2
   248fc:	beq	2495c <floor@plt+0x13590>
   24900:	cmp	ip, #3
   24904:	beq	24954 <floor@plt+0x13588>
   24908:	cmp	ip, #1
   2490c:	popne	{r4, r5, r6, r7, r8, pc}
   24910:	mov	r6, r3
   24914:	ldr	r3, [r0]
   24918:	mov	r7, r0
   2491c:	vldr	d0, [r8, #16]
   24920:	ldr	r3, [r3, #116]	; 0x74
   24924:	mov	r5, r2
   24928:	mov	r4, r1
   2492c:	blx	r3
   24930:	ldr	r0, [r7]
   24934:	mov	r3, r6
   24938:	mov	r2, r5
   2493c:	ldr	lr, [r0, #100]	; 0x64
   24940:	mov	r1, r4
   24944:	mov	r0, r7
   24948:	mov	ip, lr
   2494c:	pop	{r4, r5, r6, r7, r8, lr}
   24950:	bx	ip
   24954:	pop	{r4, r5, r6, r7, r8, lr}
   24958:	b	221ec <floor@plt+0x10e20>
   2495c:	pop	{r4, r5, r6, r7, r8, lr}
   24960:	b	223f0 <floor@plt+0x11024>
   24964:	ldr	r3, [pc, #92]	; 249c8 <floor@plt+0x135fc>
   24968:	ldr	r3, [r3]
   2496c:	cmp	r3, #0
   24970:	bxeq	lr
   24974:	ldr	r3, [r0, #80]	; 0x50
   24978:	push	{r4, lr}
   2497c:	cmp	r3, #0
   24980:	mov	r4, r0
   24984:	beq	249a0 <floor@plt+0x135d4>
   24988:	ldr	r0, [pc, #60]	; 249cc <floor@plt+0x13600>
   2498c:	bl	1112c <puts@plt>
   24990:	ldr	r0, [r4, #80]	; 0x50
   24994:	bl	110e4 <free@plt>
   24998:	mov	r3, #0
   2499c:	str	r3, [r4, #80]	; 0x50
   249a0:	ldr	r3, [r4, #84]	; 0x54
   249a4:	cmp	r3, #0
   249a8:	popeq	{r4, pc}
   249ac:	ldr	r0, [pc, #28]	; 249d0 <floor@plt+0x13604>
   249b0:	bl	1112c <puts@plt>
   249b4:	ldr	r0, [r4, #84]	; 0x54
   249b8:	bl	110e4 <free@plt>
   249bc:	mov	r3, #0
   249c0:	str	r3, [r4, #84]	; 0x54
   249c4:	pop	{r4, pc}
   249c8:	andeq	r2, r4, r8, lsr #6
   249cc:	andeq	pc, r2, r4, ror #30
   249d0:	andeq	pc, r2, ip, ror #30
   249d4:	ldr	r3, [pc, #144]	; 24a6c <floor@plt+0x136a0>
   249d8:	ldr	r3, [r3]
   249dc:	cmp	r3, #0
   249e0:	bxeq	lr
   249e4:	ldr	r3, [r0, #80]	; 0x50
   249e8:	push	{r4, r5, r6, lr}
   249ec:	cmp	r3, #0
   249f0:	mov	r5, r2
   249f4:	mov	r6, r1
   249f8:	mov	r4, r0
   249fc:	beq	24a5c <floor@plt+0x13690>
   24a00:	ldr	r3, [r4]
   24a04:	mov	r0, r4
   24a08:	ldr	r3, [r3, #60]	; 0x3c
   24a0c:	blx	r3
   24a10:	cmp	r6, #0
   24a14:	beq	24a34 <floor@plt+0x13668>
   24a18:	mov	r2, r6
   24a1c:	ldr	r1, [pc, #76]	; 24a70 <floor@plt+0x136a4>
   24a20:	mov	r0, #1
   24a24:	bl	113c0 <__printf_chk@plt>
   24a28:	mov	r0, r6
   24a2c:	bl	291f4 <_ZdlPv@@Base+0xb44>
   24a30:	str	r0, [r4, #80]	; 0x50
   24a34:	cmp	r5, #0
   24a38:	popeq	{r4, r5, r6, pc}
   24a3c:	mov	r2, r5
   24a40:	ldr	r1, [pc, #44]	; 24a74 <floor@plt+0x136a8>
   24a44:	mov	r0, #1
   24a48:	bl	113c0 <__printf_chk@plt>
   24a4c:	mov	r0, r5
   24a50:	bl	291f4 <_ZdlPv@@Base+0xb44>
   24a54:	str	r0, [r4, #84]	; 0x54
   24a58:	pop	{r4, r5, r6, pc}
   24a5c:	ldr	r3, [r0, #84]	; 0x54
   24a60:	cmp	r3, #0
   24a64:	bne	24a00 <floor@plt+0x13634>
   24a68:	b	24a10 <floor@plt+0x13644>
   24a6c:	andeq	r2, r4, r8, lsr #6
   24a70:	andeq	pc, r2, r4, ror pc	; <UNPREDICTABLE>
   24a74:	andeq	pc, r2, r0, lsl #31
   24a78:	push	{r4, r5, r6, lr}
   24a7c:	mov	r4, r1
   24a80:	ldr	r1, [r0, #24]
   24a84:	mov	r5, r0
   24a88:	cmp	r1, #0
   24a8c:	mov	r6, r2
   24a90:	beq	24aa4 <floor@plt+0x136d8>
   24a94:	mov	r0, r4
   24a98:	bl	112d0 <strcmp@plt>
   24a9c:	cmp	r0, #0
   24aa0:	beq	24ac0 <floor@plt+0x136f4>
   24aa4:	mov	r2, r6
   24aa8:	mov	r3, r4
   24aac:	ldr	r1, [pc, #32]	; 24ad4 <floor@plt+0x13708>
   24ab0:	mov	r0, #1
   24ab4:	bl	113c0 <__printf_chk@plt>
   24ab8:	str	r4, [r5, #24]
   24abc:	pop	{r4, r5, r6, pc}
   24ac0:	mov	r2, r6
   24ac4:	ldr	r1, [pc, #12]	; 24ad8 <floor@plt+0x1370c>
   24ac8:	mov	r0, #1
   24acc:	pop	{r4, r5, r6, lr}
   24ad0:	b	113c0 <__printf_chk@plt>
   24ad4:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   24ad8:	andeq	pc, r2, ip, lsl #31
   24adc:	push	{r4, r5, r6, r7, r8, r9, lr}
   24ae0:	mov	r7, r2
   24ae4:	ldr	r8, [pc, #360]	; 24c54 <floor@plt+0x13888>
   24ae8:	sub	sp, sp, #20
   24aec:	mov	r6, r1
   24af0:	ldr	r2, [r8]
   24af4:	mov	r5, r3
   24af8:	cmp	r2, #0
   24afc:	mov	r4, r0
   24b00:	beq	24b64 <floor@plt+0x13798>
   24b04:	vcmpe.f64	d0, #0.0
   24b08:	ldr	r3, [r0]
   24b0c:	ldr	r9, [pc, #324]	; 24c58 <floor@plt+0x1388c>
   24b10:	vmrs	APSR_nzcv, fpscr
   24b14:	ldr	r2, [r3, #64]	; 0x40
   24b18:	blt	24bb0 <floor@plt+0x137e4>
   24b1c:	cmp	r2, r9
   24b20:	bne	24c2c <floor@plt+0x13860>
   24b24:	ldr	r0, [r4, #80]	; 0x50
   24b28:	cmp	r0, #0
   24b2c:	beq	24c18 <floor@plt+0x1384c>
   24b30:	ldr	r9, [r3, #112]	; 0x70
   24b34:	mov	r2, r6
   24b38:	mov	r3, r7
   24b3c:	mov	r1, #1
   24b40:	mov	r0, r4
   24b44:	blx	r9
   24b48:	ldr	r3, [r5]
   24b4c:	cmp	r3, #1
   24b50:	beq	24bd0 <floor@plt+0x13804>
   24b54:	cmp	r3, #0
   24b58:	bne	24b70 <floor@plt+0x137a4>
   24b5c:	add	sp, sp, #20
   24b60:	pop	{r4, r5, r6, r7, r8, r9, pc}
   24b64:	ldr	r3, [r3]
   24b68:	cmp	r3, #1
   24b6c:	bne	24b54 <floor@plt+0x13788>
   24b70:	vldr	d0, [r5, #16]
   24b74:	ldr	r3, [r4]
   24b78:	mov	r0, r4
   24b7c:	ldr	r3, [r3, #116]	; 0x74
   24b80:	blx	r3
   24b84:	ldr	r3, [r4]
   24b88:	sub	r1, r7, #-268435455	; 0xf0000001
   24b8c:	str	r5, [sp]
   24b90:	mov	r0, r4
   24b94:	add	r1, r6, r1, lsl #4
   24b98:	ldr	r4, [r3, #24]
   24b9c:	mov	r2, r6
   24ba0:	mov	r3, r7
   24ba4:	blx	r4
   24ba8:	add	sp, sp, #20
   24bac:	pop	{r4, r5, r6, r7, r8, r9, pc}
   24bb0:	cmp	r2, r9
   24bb4:	bne	24c44 <floor@plt+0x13878>
   24bb8:	ldr	r0, [r0, #80]	; 0x50
   24bbc:	cmp	r0, #0
   24bc0:	beq	24b48 <floor@plt+0x1377c>
   24bc4:	ldr	r3, [r4]
   24bc8:	ldr	r2, [r3, #64]	; 0x40
   24bcc:	b	24b1c <floor@plt+0x13750>
   24bd0:	ldr	r2, [r8]
   24bd4:	ldr	r3, [r4]
   24bd8:	cmp	r2, #0
   24bdc:	vldr	d0, [r5, #16]
   24be0:	ldr	r2, [r3, #116]	; 0x74
   24be4:	beq	24b78 <floor@plt+0x137ac>
   24be8:	mov	r0, r4
   24bec:	blx	r2
   24bf0:	ldr	r1, [r4]
   24bf4:	mov	r3, r7
   24bf8:	mov	r2, r6
   24bfc:	ldr	lr, [r1, #112]	; 0x70
   24c00:	mov	r0, r4
   24c04:	mov	r1, #0
   24c08:	mov	ip, lr
   24c0c:	add	sp, sp, #20
   24c10:	pop	{r4, r5, r6, r7, r8, r9, lr}
   24c14:	bx	ip
   24c18:	ldr	r3, [r3, #120]	; 0x78
   24c1c:	mov	r0, r4
   24c20:	blx	r3
   24c24:	ldr	r3, [r4]
   24c28:	b	24b30 <floor@plt+0x13764>
   24c2c:	vstr	d0, [sp, #8]
   24c30:	mov	r0, r4
   24c34:	blx	r2
   24c38:	ldr	r3, [r4]
   24c3c:	vldr	d0, [sp, #8]
   24c40:	b	24b28 <floor@plt+0x1375c>
   24c44:	vstr	d0, [sp, #8]
   24c48:	blx	r2
   24c4c:	vldr	d0, [sp, #8]
   24c50:	b	24bbc <floor@plt+0x137f0>
   24c54:	andeq	r2, r4, r8, lsr #6
   24c58:	andeq	r4, r2, r4, lsl #4
   24c5c:	ldr	r3, [pc, #392]	; 24dec <floor@plt+0x13a20>
   24c60:	push	{r4, r5, r6, r7, lr}
   24c64:	vpush	{d8}
   24c68:	ldr	r3, [r3]
   24c6c:	mov	r4, r0
   24c70:	cmp	r3, #0
   24c74:	sub	sp, sp, #12
   24c78:	mov	r6, r1
   24c7c:	vmov.f64	d8, d0
   24c80:	mov	r5, r2
   24c84:	ldr	r3, [r0]
   24c88:	beq	24cd0 <floor@plt+0x13904>
   24c8c:	vcmpe.f64	d1, #0.0
   24c90:	ldr	r2, [r3, #64]	; 0x40
   24c94:	ldr	r7, [pc, #340]	; 24df0 <floor@plt+0x13a24>
   24c98:	vmrs	APSR_nzcv, fpscr
   24c9c:	blt	24d68 <floor@plt+0x1399c>
   24ca0:	cmp	r2, r7
   24ca4:	bne	24da8 <floor@plt+0x139dc>
   24ca8:	ldr	r0, [r4, #80]	; 0x50
   24cac:	cmp	r0, #0
   24cb0:	beq	24d90 <floor@plt+0x139c4>
   24cb4:	ldr	r3, [r3, #104]	; 0x68
   24cb8:	vmov.f64	d0, d8
   24cbc:	mov	r2, r6
   24cc0:	mov	r1, #1
   24cc4:	mov	r0, r4
   24cc8:	blx	r3
   24ccc:	ldr	r3, [r4]
   24cd0:	ldr	r3, [r3, #116]	; 0x74
   24cd4:	vldr	d0, [r5, #16]
   24cd8:	mov	r0, r4
   24cdc:	blx	r3
   24ce0:	ldr	r3, [r5]
   24ce4:	cmp	r3, #3
   24ce8:	ldrls	pc, [pc, r3, lsl #2]
   24cec:	b	24dd4 <floor@plt+0x13a08>
   24cf0:	andeq	r4, r2, r4, lsl #27
   24cf4:	andeq	r4, r2, r0, asr #26
   24cf8:	andeq	r4, r2, r0, lsr #26
   24cfc:	andeq	r4, r2, r0, lsl #26
   24d00:	vmov.f64	d0, d8
   24d04:	mov	r2, r5
   24d08:	mov	r1, r6
   24d0c:	mov	r0, r4
   24d10:	add	sp, sp, #12
   24d14:	vpop	{d8}
   24d18:	pop	{r4, r5, r6, r7, lr}
   24d1c:	b	2138c <floor@plt+0xffc0>
   24d20:	vmov.f64	d0, d8
   24d24:	mov	r2, r5
   24d28:	mov	r1, r6
   24d2c:	mov	r0, r4
   24d30:	add	sp, sp, #12
   24d34:	vpop	{d8}
   24d38:	pop	{r4, r5, r6, r7, lr}
   24d3c:	b	21558 <floor@plt+0x1018c>
   24d40:	vmov.f64	d0, d8
   24d44:	ldr	r3, [r4]
   24d48:	mov	r2, r6
   24d4c:	mov	r0, r4
   24d50:	ldr	r3, [r3, #104]	; 0x68
   24d54:	mov	r1, #0
   24d58:	add	sp, sp, #12
   24d5c:	vpop	{d8}
   24d60:	pop	{r4, r5, r6, r7, lr}
   24d64:	bx	r3
   24d68:	cmp	r2, r7
   24d6c:	bne	24dc0 <floor@plt+0x139f4>
   24d70:	ldr	r0, [r0, #80]	; 0x50
   24d74:	cmp	r0, #0
   24d78:	beq	24cd0 <floor@plt+0x13904>
   24d7c:	ldr	r2, [r3, #64]	; 0x40
   24d80:	b	24ca0 <floor@plt+0x138d4>
   24d84:	add	sp, sp, #12
   24d88:	vpop	{d8}
   24d8c:	pop	{r4, r5, r6, r7, pc}
   24d90:	ldr	r3, [r3, #120]	; 0x78
   24d94:	vmov.f64	d0, d1
   24d98:	mov	r0, r4
   24d9c:	blx	r3
   24da0:	ldr	r3, [r4]
   24da4:	b	24cb4 <floor@plt+0x138e8>
   24da8:	vstr	d1, [sp]
   24dac:	mov	r0, r4
   24db0:	blx	r2
   24db4:	ldr	r3, [r4]
   24db8:	vldr	d1, [sp]
   24dbc:	b	24cac <floor@plt+0x138e0>
   24dc0:	vstr	d1, [sp]
   24dc4:	blx	r2
   24dc8:	ldr	r3, [r4]
   24dcc:	vldr	d1, [sp]
   24dd0:	b	24d74 <floor@plt+0x139a8>
   24dd4:	ldr	r1, [pc, #24]	; 24df4 <floor@plt+0x13a28>
   24dd8:	mov	r0, #180	; 0xb4
   24ddc:	add	sp, sp, #12
   24de0:	vpop	{d8}
   24de4:	pop	{r4, r5, r6, r7, lr}
   24de8:	b	26c88 <floor@plt+0x158bc>
   24dec:	andeq	r2, r4, r8, lsr #6
   24df0:	andeq	r4, r2, r4, lsl #4
   24df4:	andeq	pc, r2, ip, asr #28
   24df8:	ldr	ip, [pc, #380]	; 24f7c <floor@plt+0x13bb0>
   24dfc:	push	{r4, r5, r6, r7, r8, lr}
   24e00:	mov	r7, r2
   24e04:	ldr	r2, [ip]
   24e08:	sub	sp, sp, #8
   24e0c:	cmp	r2, #0
   24e10:	mov	r6, r1
   24e14:	mov	r5, r3
   24e18:	mov	r4, r0
   24e1c:	beq	24e64 <floor@plt+0x13a98>
   24e20:	vcmpe.f64	d0, #0.0
   24e24:	ldr	r3, [r0]
   24e28:	ldr	r8, [pc, #336]	; 24f80 <floor@plt+0x13bb4>
   24e2c:	vmrs	APSR_nzcv, fpscr
   24e30:	ldr	r2, [r3, #64]	; 0x40
   24e34:	blt	24f04 <floor@plt+0x13b38>
   24e38:	cmp	r2, r8
   24e3c:	bne	24f40 <floor@plt+0x13b74>
   24e40:	ldr	r0, [r4, #80]	; 0x50
   24e44:	cmp	r0, #0
   24e48:	beq	24f2c <floor@plt+0x13b60>
   24e4c:	ldr	r8, [r3, #108]	; 0x6c
   24e50:	mov	r2, r6
   24e54:	mov	r3, r7
   24e58:	mov	r1, #1
   24e5c:	mov	r0, r4
   24e60:	blx	r8
   24e64:	ldr	r3, [r5]
   24e68:	cmp	r3, #0
   24e6c:	beq	24f24 <floor@plt+0x13b58>
   24e70:	ldr	r3, [r4]
   24e74:	vldr	d0, [r5, #16]
   24e78:	mov	r0, r4
   24e7c:	ldr	r3, [r3, #116]	; 0x74
   24e80:	blx	r3
   24e84:	ldr	r3, [r5]
   24e88:	cmp	r3, #3
   24e8c:	ldrls	pc, [pc, r3, lsl #2]
   24e90:	b	24f68 <floor@plt+0x13b9c>
   24e94:	andeq	r4, r2, r4, lsr #30
   24e98:	ldrdeq	r4, [r2], -ip
   24e9c:	andeq	r4, r2, r0, asr #29
   24ea0:	andeq	r4, r2, r4, lsr #29
   24ea4:	mov	r3, r5
   24ea8:	mov	r2, r7
   24eac:	mov	r1, r6
   24eb0:	mov	r0, r4
   24eb4:	add	sp, sp, #8
   24eb8:	pop	{r4, r5, r6, r7, r8, lr}
   24ebc:	b	21a50 <floor@plt+0x10684>
   24ec0:	mov	r3, r5
   24ec4:	mov	r2, r7
   24ec8:	mov	r1, r6
   24ecc:	mov	r0, r4
   24ed0:	add	sp, sp, #8
   24ed4:	pop	{r4, r5, r6, r7, r8, lr}
   24ed8:	b	21df0 <floor@plt+0x10a24>
   24edc:	ldr	r1, [r4]
   24ee0:	mov	r3, r7
   24ee4:	mov	r2, r6
   24ee8:	ldr	lr, [r1, #108]	; 0x6c
   24eec:	mov	r0, r4
   24ef0:	mov	r1, #0
   24ef4:	mov	ip, lr
   24ef8:	add	sp, sp, #8
   24efc:	pop	{r4, r5, r6, r7, r8, lr}
   24f00:	bx	ip
   24f04:	cmp	r2, r8
   24f08:	bne	24f58 <floor@plt+0x13b8c>
   24f0c:	ldr	r0, [r0, #80]	; 0x50
   24f10:	cmp	r0, #0
   24f14:	beq	24e64 <floor@plt+0x13a98>
   24f18:	ldr	r3, [r4]
   24f1c:	ldr	r2, [r3, #64]	; 0x40
   24f20:	b	24e38 <floor@plt+0x13a6c>
   24f24:	add	sp, sp, #8
   24f28:	pop	{r4, r5, r6, r7, r8, pc}
   24f2c:	ldr	r3, [r3, #120]	; 0x78
   24f30:	mov	r0, r4
   24f34:	blx	r3
   24f38:	ldr	r3, [r4]
   24f3c:	b	24e4c <floor@plt+0x13a80>
   24f40:	vstr	d0, [sp]
   24f44:	mov	r0, r4
   24f48:	blx	r2
   24f4c:	ldr	r3, [r4]
   24f50:	vldr	d0, [sp]
   24f54:	b	24e44 <floor@plt+0x13a78>
   24f58:	vstr	d0, [sp]
   24f5c:	blx	r2
   24f60:	vldr	d0, [sp]
   24f64:	b	24f10 <floor@plt+0x13b44>
   24f68:	ldr	r1, [pc, #20]	; 24f84 <floor@plt+0x13bb8>
   24f6c:	mov	r0, #207	; 0xcf
   24f70:	add	sp, sp, #8
   24f74:	pop	{r4, r5, r6, r7, r8, lr}
   24f78:	b	26c88 <floor@plt+0x158bc>
   24f7c:	andeq	r2, r4, r8, lsr #6
   24f80:	andeq	r4, r2, r4, lsl #4
   24f84:	andeq	pc, r2, ip, asr #28
   24f88:	vldr	d4, [r2, #8]
   24f8c:	vldr	d5, [r0, #32]
   24f90:	vldr	d1, [r0, #40]	; 0x28
   24f94:	vldr	d7, [r2]
   24f98:	push	{r4, r5, r6, r7, lr}
   24f9c:	vpush	{d8}
   24fa0:	vsub.f64	d1, d1, d4
   24fa4:	vsub.f64	d7, d7, d5
   24fa8:	vldr	d6, [r0, #56]	; 0x38
   24fac:	ldr	r6, [pc, #152]	; 2504c <floor@plt+0x13c80>
   24fb0:	sub	sp, sp, #68	; 0x44
   24fb4:	mov	r5, r0
   24fb8:	ldr	r3, [r6]
   24fbc:	add	r4, sp, #24
   24fc0:	vmov.f64	d8, d0
   24fc4:	vdiv.f64	d1, d1, d6
   24fc8:	mov	r0, r4
   24fcc:	mov	r7, r1
   24fd0:	str	r3, [sp, #60]	; 0x3c
   24fd4:	vdiv.f64	d0, d7, d6
   24fd8:	bl	1c6e4 <floor@plt+0xb318>
   24fdc:	vldr	d7, [r5, #56]	; 0x38
   24fe0:	vadd.f64	d3, d8, d8
   24fe4:	ldm	r4, {r0, r1, r2, r3}
   24fe8:	add	ip, sp, #40	; 0x28
   24fec:	cmp	r7, #0
   24ff0:	movne	lr, #67	; 0x43
   24ff4:	stm	ip, {r0, r1, r2, r3}
   24ff8:	vldr	d4, [sp, #40]	; 0x28
   24ffc:	ldrd	r2, [sp, #48]	; 0x30
   25000:	moveq	lr, #99	; 0x63
   25004:	mov	r0, #1
   25008:	strd	r2, [sp]
   2500c:	ldr	r1, [pc, #60]	; 25050 <floor@plt+0x13c84>
   25010:	vdiv.f64	d5, d8, d7
   25014:	str	lr, [sp, #8]
   25018:	vdiv.f64	d6, d3, d7
   2501c:	vsub.f64	d7, d4, d5
   25020:	vmov	r2, r3, d7
   25024:	vstr	d6, [sp, #16]
   25028:	bl	113c0 <__printf_chk@plt>
   2502c:	ldr	r2, [sp, #60]	; 0x3c
   25030:	ldr	r3, [r6]
   25034:	cmp	r2, r3
   25038:	bne	25048 <floor@plt+0x13c7c>
   2503c:	add	sp, sp, #68	; 0x44
   25040:	vpop	{d8}
   25044:	pop	{r4, r5, r6, r7, pc}
   25048:	bl	111e0 <__stack_chk_fail@plt>
   2504c:	andeq	r1, r4, r0, ror sp
   25050:	andeq	pc, r2, r0, lsr #31
   25054:	vldr	d5, [r2, #8]
   25058:	vldr	d6, [r0, #32]
   2505c:	vldr	d1, [r0, #40]	; 0x28
   25060:	vldr	d7, [r2]
   25064:	push	{r4, r5, r6, r7, r8, lr}
   25068:	vldr	d0, [r0, #56]	; 0x38
   2506c:	vsub.f64	d1, d1, d5
   25070:	vsub.f64	d7, d7, d6
   25074:	ldr	r6, [pc, #164]	; 25120 <floor@plt+0x13d54>
   25078:	sub	sp, sp, #72	; 0x48
   2507c:	mov	r5, r0
   25080:	ldr	r2, [r6]
   25084:	add	r4, sp, #32
   25088:	mov	r0, r4
   2508c:	vdiv.f64	d1, d1, d0
   25090:	mov	r7, r3
   25094:	mov	r8, r1
   25098:	str	r2, [sp, #68]	; 0x44
   2509c:	vdiv.f64	d0, d7, d0
   250a0:	bl	1c6e4 <floor@plt+0xb318>
   250a4:	vldr	d7, [r5, #56]	; 0x38
   250a8:	vldr	d6, [r7]
   250ac:	ldm	r4, {r0, r1, r2, r3}
   250b0:	add	ip, sp, #48	; 0x30
   250b4:	vadd.f64	d5, d7, d7
   250b8:	vldr	d4, [r7, #8]
   250bc:	stm	ip, {r0, r1, r2, r3}
   250c0:	vldr	d3, [sp, #48]	; 0x30
   250c4:	ldrd	r2, [sp, #56]	; 0x38
   250c8:	cmp	r8, #0
   250cc:	movne	lr, #69	; 0x45
   250d0:	strd	r2, [sp]
   250d4:	moveq	lr, #101	; 0x65
   250d8:	mov	r0, #1
   250dc:	ldr	r1, [pc, #64]	; 25124 <floor@plt+0x13d58>
   250e0:	vdiv.f64	d2, d6, d5
   250e4:	str	lr, [sp, #8]
   250e8:	vdiv.f64	d5, d6, d7
   250ec:	vsub.f64	d6, d3, d2
   250f0:	vmov	r2, r3, d6
   250f4:	vdiv.f64	d6, d4, d7
   250f8:	vstr	d5, [sp, #16]
   250fc:	vstr	d6, [sp, #24]
   25100:	bl	113c0 <__printf_chk@plt>
   25104:	ldr	r2, [sp, #68]	; 0x44
   25108:	ldr	r3, [r6]
   2510c:	cmp	r2, r3
   25110:	bne	2511c <floor@plt+0x13d50>
   25114:	add	sp, sp, #72	; 0x48
   25118:	pop	{r4, r5, r6, r7, r8, pc}
   2511c:	bl	111e0 <__stack_chk_fail@plt>
   25120:	andeq	r1, r4, r0, ror sp
   25124:	andeq	pc, r2, r8, asr #31
   25128:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2512c:	vpush	{d8}
   25130:	ldr	ip, [pc, #744]	; 25420 <floor@plt+0x14054>
   25134:	vmov.f64	d8, d0
   25138:	ldr	lr, [r0]
   2513c:	sub	sp, sp, #92	; 0x5c
   25140:	ldr	ip, [ip]
   25144:	vldr	d0, [pc, #692]	; 25400 <floor@plt+0x14034>
   25148:	ldr	r5, [lr, #116]	; 0x74
   2514c:	str	ip, [sp, #84]	; 0x54
   25150:	mov	r4, r2
   25154:	mov	sl, r3
   25158:	mov	fp, r0
   2515c:	mov	r9, r1
   25160:	blx	r5
   25164:	vcmp.f64	d8, #0.0
   25168:	ldr	r3, [pc, #692]	; 25424 <floor@plt+0x14058>
   2516c:	vmrs	APSR_nzcv, fpscr
   25170:	ldr	r2, [r3]
   25174:	movne	r3, #1
   25178:	moveq	r3, #0
   2517c:	cmp	r2, #0
   25180:	moveq	r3, #0
   25184:	cmp	r3, #0
   25188:	bne	25344 <floor@plt+0x13f78>
   2518c:	cmp	sl, #0
   25190:	strgt	r3, [sp, #28]
   25194:	ble	25324 <floor@plt+0x13f58>
   25198:	vldr	d8, [pc, #616]	; 25408 <floor@plt+0x1403c>
   2519c:	ldr	r7, [pc, #644]	; 25428 <floor@plt+0x1405c>
   251a0:	mov	r5, #0
   251a4:	mov	r6, r9
   251a8:	b	251bc <floor@plt+0x13df0>
   251ac:	add	r5, r5, #1
   251b0:	cmp	sl, r5
   251b4:	add	r4, r4, #20
   251b8:	ble	25318 <floor@plt+0x13f4c>
   251bc:	ldr	r3, [r4]
   251c0:	cmp	r3, #0
   251c4:	beq	251ac <floor@plt+0x13de0>
   251c8:	ldrb	r3, [r3]
   251cc:	cmp	r3, #0
   251d0:	beq	251ac <floor@plt+0x13de0>
   251d4:	vldr	d1, [fp, #40]	; 0x28
   251d8:	vldr	d5, [r6, #8]
   251dc:	vldr	d7, [r6]
   251e0:	vldr	d6, [fp, #32]
   251e4:	vldr	d0, [fp, #56]	; 0x38
   251e8:	vsub.f64	d1, d1, d5
   251ec:	add	r8, sp, #48	; 0x30
   251f0:	vsub.f64	d7, d7, d6
   251f4:	mov	r0, r8
   251f8:	vdiv.f64	d1, d1, d0
   251fc:	vdiv.f64	d0, d7, d0
   25200:	bl	1c6e4 <floor@plt+0xb318>
   25204:	ldm	r8, {r0, r1, r2, r3}
   25208:	add	lr, sp, #64	; 0x40
   2520c:	ldr	ip, [r4, #12]
   25210:	stm	lr, {r0, r1, r2, r3}
   25214:	vldr	d7, [sp, #72]	; 0x48
   25218:	cmp	ip, #0
   2521c:	ldrd	r8, [sp, #64]	; 0x40
   25220:	vstr	d7, [sp, #16]
   25224:	beq	25240 <floor@plt+0x13e74>
   25228:	ldr	r3, [fp]
   2522c:	mov	r1, ip
   25230:	ldr	r2, [r4, #16]
   25234:	ldr	r3, [r3, #52]	; 0x34
   25238:	mov	r0, fp
   2523c:	blx	r3
   25240:	mov	r2, r8
   25244:	mov	r3, r9
   25248:	ldr	r1, [pc, #476]	; 2542c <floor@plt+0x14060>
   2524c:	mov	r0, #1
   25250:	bl	113c0 <__printf_chk@plt>
   25254:	ldr	r8, [r4]
   25258:	mov	r1, #39	; 0x27
   2525c:	mov	r0, r8
   25260:	bl	113a8 <strchr@plt>
   25264:	ldr	r1, [r4, #4]
   25268:	ldr	r3, [pc, #448]	; 25430 <floor@plt+0x14064>
   2526c:	ldr	r2, [pc, #448]	; 25434 <floor@plt+0x14068>
   25270:	cmp	r0, #0
   25274:	movne	r2, r3
   25278:	cmp	r1, #2
   2527c:	beq	253d4 <floor@plt+0x14008>
   25280:	cmp	r1, #1
   25284:	beq	2529c <floor@plt+0x13ed0>
   25288:	str	r2, [sp]
   2528c:	mov	r3, r8
   25290:	ldr	r1, [pc, #416]	; 25438 <floor@plt+0x1406c>
   25294:	mov	r0, #1
   25298:	bl	113c0 <__printf_chk@plt>
   2529c:	ldr	r1, [r7]
   252a0:	mov	r0, #39	; 0x27
   252a4:	bl	111f8 <putc@plt>
   252a8:	sub	r1, sl, #1
   252ac:	str	r1, [sp]
   252b0:	vstr	d8, [sp, #8]
   252b4:	str	r5, [sp, #4]
   252b8:	ldrd	r2, [sp, #16]
   252bc:	ldr	r1, [pc, #376]	; 2543c <floor@plt+0x14070>
   252c0:	mov	r0, #1
   252c4:	bl	113c0 <__printf_chk@plt>
   252c8:	ldr	r0, [r4, #8]
   252cc:	cmp	r0, #1
   252d0:	beq	253c8 <floor@plt+0x13ffc>
   252d4:	cmp	r0, #2
   252d8:	beq	253ec <floor@plt+0x14020>
   252dc:	ldr	r1, [r7]
   252e0:	mov	r0, #39	; 0x27
   252e4:	bl	111f8 <putc@plt>
   252e8:	ldr	r1, [r7]
   252ec:	ldr	r0, [r4]
   252f0:	bl	11354 <fputs@plt>
   252f4:	add	r5, r5, #1
   252f8:	ldr	r3, [r7]
   252fc:	mov	r2, #8
   25300:	mov	r1, #1
   25304:	ldr	r0, [pc, #308]	; 25440 <floor@plt+0x14074>
   25308:	bl	11258 <fwrite@plt>
   2530c:	cmp	sl, r5
   25310:	add	r4, r4, #20
   25314:	bgt	251bc <floor@plt+0x13df0>
   25318:	ldr	r3, [sp, #28]
   2531c:	cmp	r3, #0
   25320:	bne	253bc <floor@plt+0x13ff0>
   25324:	ldr	r3, [pc, #244]	; 25420 <floor@plt+0x14054>
   25328:	ldr	r2, [sp, #84]	; 0x54
   2532c:	ldr	r3, [r3]
   25330:	cmp	r2, r3
   25334:	bne	253fc <floor@plt+0x14030>
   25338:	add	sp, sp, #92	; 0x5c
   2533c:	vpop	{d8}
   25340:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25344:	vldr	d5, [r9, #8]
   25348:	vldr	d6, [fp, #32]
   2534c:	vldr	d1, [fp, #40]	; 0x28
   25350:	vldr	d7, [r9]
   25354:	vldr	d0, [fp, #56]	; 0x38
   25358:	add	r5, sp, #64	; 0x40
   2535c:	vsub.f64	d1, d1, d5
   25360:	vsub.f64	d7, d7, d6
   25364:	mov	r0, r5
   25368:	vdiv.f64	d1, d1, d0
   2536c:	vdiv.f64	d0, d7, d0
   25370:	bl	1c6e4 <floor@plt+0xb318>
   25374:	vldr	d7, [pc, #148]	; 25410 <floor@plt+0x14044>
   25378:	vldr	d6, [pc, #152]	; 25418 <floor@plt+0x1404c>
   2537c:	ldm	r5, {r0, r1, r2, r3}
   25380:	add	ip, sp, #32
   25384:	vnmul.f64	d8, d8, d7
   25388:	stm	ip, {r0, r1, r2, r3}
   2538c:	mov	r0, #1
   25390:	ldrd	r6, [sp, #40]	; 0x28
   25394:	ldrd	r2, [sp, #32]
   25398:	ldr	r1, [pc, #164]	; 25444 <floor@plt+0x14078>
   2539c:	strd	r6, [sp]
   253a0:	vdiv.f64	d7, d8, d6
   253a4:	vstr	d7, [sp, #8]
   253a8:	bl	113c0 <__printf_chk@plt>
   253ac:	cmp	sl, #0
   253b0:	movgt	r3, #1
   253b4:	strgt	r3, [sp, #28]
   253b8:	bgt	25198 <floor@plt+0x13dcc>
   253bc:	ldr	r0, [pc, #132]	; 25448 <floor@plt+0x1407c>
   253c0:	bl	1112c <puts@plt>
   253c4:	b	25324 <floor@plt+0x13f58>
   253c8:	ldr	r1, [pc, #124]	; 2544c <floor@plt+0x14080>
   253cc:	bl	113c0 <__printf_chk@plt>
   253d0:	b	252dc <floor@plt+0x13f10>
   253d4:	str	r2, [sp]
   253d8:	mov	r3, r8
   253dc:	ldr	r1, [pc, #108]	; 25450 <floor@plt+0x14084>
   253e0:	mov	r0, #1
   253e4:	bl	113c0 <__printf_chk@plt>
   253e8:	b	2529c <floor@plt+0x13ed0>
   253ec:	ldr	r1, [pc, #96]	; 25454 <floor@plt+0x14088>
   253f0:	mov	r0, #1
   253f4:	bl	113c0 <__printf_chk@plt>
   253f8:	b	252dc <floor@plt+0x13f10>
   253fc:	bl	111e0 <__stack_chk_fail@plt>
   25400:	andeq	r0, r0, r0
   25404:	andgt	r0, r0, r0
   25408:	addgt	r5, pc, #10496	; 0x2900
   2540c:	svccc	0x00cc28f5
   25410:	andeq	r0, r0, r0
   25414:	rsbmi	r8, r6, r0
   25418:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   2541c:	strdmi	r2, [r9], -fp
   25420:	andeq	r1, r4, r0, ror sp
   25424:	andeq	r2, r4, r8, lsr #6
   25428:	andeq	r2, r4, r4, asr r4
   2542c:	strheq	r0, [r3], -r8
   25430:	strdeq	pc, [r2], -r8
   25434:	andeq	lr, r2, r4, ror #11
   25438:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   2543c:	andeq	r0, r3, r0, ror #1
   25440:	andeq	pc, r2, ip, ror #31
   25444:	andeq	r0, r3, r0
   25448:	andeq	r0, r3, r8, lsl #1
   2544c:	strdeq	r0, [r3], -ip
   25450:	andeq	r0, r3, r4, asr #1
   25454:	andeq	r0, r3, r4, lsl #2
   25458:	vldr	d5, [r1, #8]
   2545c:	vldr	d6, [r0, #32]
   25460:	vldr	d1, [r0, #40]	; 0x28
   25464:	vldr	d7, [r1]
   25468:	push	{r4, r5, r6, r7, r8, lr}
   2546c:	vldr	d0, [r0, #56]	; 0x38
   25470:	vsub.f64	d1, d1, d5
   25474:	vsub.f64	d7, d7, d6
   25478:	ldr	r7, [pc, #200]	; 25548 <floor@plt+0x1417c>
   2547c:	sub	sp, sp, #112	; 0x70
   25480:	mov	r5, r0
   25484:	mov	r8, r2
   25488:	ldr	r3, [r7]
   2548c:	add	r4, sp, #72	; 0x48
   25490:	vdiv.f64	d1, d1, d0
   25494:	mov	r0, r4
   25498:	str	r3, [sp, #108]	; 0x6c
   2549c:	add	r6, sp, #24
   254a0:	vdiv.f64	d0, d7, d0
   254a4:	bl	1c6e4 <floor@plt+0xb318>
   254a8:	vldr	d6, [r8, #8]
   254ac:	vldr	d0, [r5, #32]
   254b0:	vldr	d1, [r5, #40]	; 0x28
   254b4:	vldr	d7, [r8]
   254b8:	ldm	r4, {r0, r1, r2, r3}
   254bc:	add	ip, sp, #88	; 0x58
   254c0:	vsub.f64	d1, d1, d6
   254c4:	vsub.f64	d7, d7, d0
   254c8:	vldr	d0, [r5, #56]	; 0x38
   254cc:	add	r5, sp, #56	; 0x38
   254d0:	stm	ip, {r0, r1, r2, r3}
   254d4:	stm	r6, {r0, r1, r2, r3}
   254d8:	mov	r0, r5
   254dc:	vdiv.f64	d1, d1, d0
   254e0:	vdiv.f64	d0, d7, d0
   254e4:	bl	1c6e4 <floor@plt+0xb318>
   254e8:	ldm	r5, {r0, r1, r2, r3}
   254ec:	add	ip, sp, #40	; 0x28
   254f0:	stm	r4, {r0, r1, r2, r3}
   254f4:	stm	ip, {r0, r1, r2, r3}
   254f8:	mov	r0, ip
   254fc:	mov	r1, r6
   25500:	bl	1c820 <floor@plt+0xb454>
   25504:	ldrd	r0, [sp, #32]
   25508:	ldrd	r2, [sp, #24]
   2550c:	strd	r0, [sp]
   25510:	ldr	r1, [pc, #52]	; 2554c <floor@plt+0x14180>
   25514:	mov	r0, #1
   25518:	vstr	d0, [sp, #8]
   2551c:	vstr	d1, [sp, #16]
   25520:	vstr	d0, [sp, #56]	; 0x38
   25524:	vstr	d1, [sp, #64]	; 0x40
   25528:	bl	113c0 <__printf_chk@plt>
   2552c:	ldr	r2, [sp, #108]	; 0x6c
   25530:	ldr	r3, [r7]
   25534:	cmp	r2, r3
   25538:	bne	25544 <floor@plt+0x14178>
   2553c:	add	sp, sp, #112	; 0x70
   25540:	pop	{r4, r5, r6, r7, r8, pc}
   25544:	bl	111e0 <__stack_chk_fail@plt>
   25548:	andeq	r1, r4, r0, ror sp
   2554c:	andeq	r0, r3, ip, lsl #2
   25550:	vldr	d5, [r1, #8]
   25554:	vldr	d6, [r0, #32]
   25558:	vldr	d1, [r0, #40]	; 0x28
   2555c:	vldr	d7, [r1]
   25560:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25564:	vldr	d0, [r0, #56]	; 0x38
   25568:	vsub.f64	d1, d1, d5
   2556c:	vsub.f64	d7, d7, d6
   25570:	ldr	r9, [pc, #304]	; 256a8 <floor@plt+0x142dc>
   25574:	sub	sp, sp, #180	; 0xb4
   25578:	mov	r7, r0
   2557c:	mov	r4, r2
   25580:	add	r5, sp, #136	; 0x88
   25584:	ldr	r2, [r9]
   25588:	vdiv.f64	d1, d1, d0
   2558c:	mov	r0, r5
   25590:	mov	sl, r3
   25594:	str	r2, [sp, #172]	; 0xac
   25598:	add	r8, sp, #40	; 0x28
   2559c:	add	fp, sp, #56	; 0x38
   255a0:	add	r6, sp, #104	; 0x68
   255a4:	vdiv.f64	d0, d7, d0
   255a8:	bl	1c6e4 <floor@plt+0xb318>
   255ac:	vldr	d6, [r4, #8]
   255b0:	vldr	d7, [r4]
   255b4:	vldr	d0, [r7, #32]
   255b8:	vldr	d1, [r7, #40]	; 0x28
   255bc:	ldm	r5, {r0, r1, r2, r3}
   255c0:	add	ip, sp, #152	; 0x98
   255c4:	vsub.f64	d7, d7, d0
   255c8:	vsub.f64	d1, d1, d6
   255cc:	vldr	d0, [r7, #56]	; 0x38
   255d0:	add	r4, sp, #120	; 0x78
   255d4:	stm	ip, {r0, r1, r2, r3}
   255d8:	stm	r8, {r0, r1, r2, r3}
   255dc:	mov	r0, r4
   255e0:	vdiv.f64	d1, d1, d0
   255e4:	vdiv.f64	d0, d7, d0
   255e8:	bl	1c6e4 <floor@plt+0xb318>
   255ec:	ldm	r4, {r0, r1, r2, r3}
   255f0:	stm	r5, {r0, r1, r2, r3}
   255f4:	stm	fp, {r0, r1, r2, r3}
   255f8:	mov	r1, r8
   255fc:	mov	r0, fp
   25600:	bl	1c820 <floor@plt+0xb454>
   25604:	vldr	d3, [sl, #8]
   25608:	vldr	d4, [r7, #32]
   2560c:	vldr	d7, [r7, #40]	; 0x28
   25610:	vldr	d6, [sl]
   25614:	vldr	d5, [r7, #56]	; 0x38
   25618:	mov	r0, r6
   2561c:	vsub.f64	d7, d7, d3
   25620:	vsub.f64	d6, d6, d4
   25624:	vstr	d0, [sp, #72]	; 0x48
   25628:	vstr	d1, [sp, #80]	; 0x50
   2562c:	vdiv.f64	d0, d6, d5
   25630:	vdiv.f64	d1, d7, d5
   25634:	bl	1c6e4 <floor@plt+0xb318>
   25638:	ldm	r6, {r0, r1, r2, r3}
   2563c:	add	ip, sp, #88	; 0x58
   25640:	stm	r4, {r0, r1, r2, r3}
   25644:	stm	ip, {r0, r1, r2, r3}
   25648:	mov	r0, ip
   2564c:	mov	r1, fp
   25650:	bl	1c820 <floor@plt+0xb454>
   25654:	ldrd	r0, [sp, #72]	; 0x48
   25658:	ldrd	r2, [sp, #48]	; 0x30
   2565c:	ldrd	r4, [sp, #80]	; 0x50
   25660:	strd	r0, [sp, #8]
   25664:	strd	r2, [sp]
   25668:	strd	r4, [sp, #16]
   2566c:	ldrd	r2, [sp, #40]	; 0x28
   25670:	ldr	r1, [pc, #52]	; 256ac <floor@plt+0x142e0>
   25674:	mov	r0, #1
   25678:	vstr	d0, [sp, #24]
   2567c:	vstr	d1, [sp, #32]
   25680:	vstr	d0, [sp, #104]	; 0x68
   25684:	vstr	d1, [sp, #112]	; 0x70
   25688:	bl	113c0 <__printf_chk@plt>
   2568c:	ldr	r2, [sp, #172]	; 0xac
   25690:	ldr	r3, [r9]
   25694:	cmp	r2, r3
   25698:	bne	256a4 <floor@plt+0x142d8>
   2569c:	add	sp, sp, #180	; 0xb4
   256a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   256a4:	bl	111e0 <__stack_chk_fail@plt>
   256a8:	andeq	r1, r4, r0, ror sp
   256ac:	andeq	r0, r3, r8, lsr r1
   256b0:	vldr	d5, [r1, #8]
   256b4:	vldr	d6, [r0, #32]
   256b8:	vldr	d1, [r0, #40]	; 0x28
   256bc:	vldr	d7, [r1]
   256c0:	vldr	d0, [r0, #56]	; 0x38
   256c4:	ldr	r1, [pc, #328]	; 25814 <floor@plt+0x14448>
   256c8:	vsub.f64	d1, d1, d5
   256cc:	vsub.f64	d7, d7, d6
   256d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   256d4:	sub	sp, sp, #100	; 0x64
   256d8:	ldr	r1, [r1]
   256dc:	add	r5, sp, #72	; 0x48
   256e0:	mov	sl, r0
   256e4:	mov	r0, r5
   256e8:	vdiv.f64	d1, d1, d0
   256ec:	mov	fp, r3
   256f0:	mov	r8, r2
   256f4:	str	r1, [sp, #92]	; 0x5c
   256f8:	add	r7, sp, #8
   256fc:	vdiv.f64	d0, d7, d0
   25700:	bl	1c6e4 <floor@plt+0xb318>
   25704:	ldm	r5, {r0, r1, r2, r3}
   25708:	add	ip, sp, #40	; 0x28
   2570c:	stm	r7, {r0, r1, r2, r3}
   25710:	vldr	d7, [sp, #16]
   25714:	stm	ip, {r0, r1, r2, r3}
   25718:	mov	r0, #1
   2571c:	ldrd	r2, [sp, #8]
   25720:	ldr	r1, [pc, #240]	; 25818 <floor@plt+0x1444c>
   25724:	vstr	d7, [sp]
   25728:	bl	113c0 <__printf_chk@plt>
   2572c:	ldr	r3, [pc, #232]	; 2581c <floor@plt+0x14450>
   25730:	mov	r2, #5
   25734:	mov	r1, #1
   25738:	ldr	r3, [r3]
   2573c:	ldr	r0, [pc, #220]	; 25820 <floor@plt+0x14454>
   25740:	bl	11258 <fwrite@plt>
   25744:	cmp	fp, #0
   25748:	ble	257ec <floor@plt+0x14420>
   2574c:	mov	r9, #0
   25750:	add	r4, sp, #56	; 0x38
   25754:	add	r6, sp, #24
   25758:	vldr	d5, [r8, #8]
   2575c:	vldr	d6, [sl, #32]
   25760:	vldr	d1, [sl, #40]	; 0x28
   25764:	vldr	d7, [r8]
   25768:	vldr	d0, [sl, #56]	; 0x38
   2576c:	mov	r0, r4
   25770:	vsub.f64	d1, d1, d5
   25774:	vsub.f64	d7, d7, d6
   25778:	vdiv.f64	d1, d1, d0
   2577c:	vdiv.f64	d0, d7, d0
   25780:	bl	1c6e4 <floor@plt+0xb318>
   25784:	ldm	r4, {r0, r1, r2, r3}
   25788:	stm	r5, {r0, r1, r2, r3}
   2578c:	stm	r6, {r0, r1, r2, r3}
   25790:	mov	r1, r7
   25794:	mov	r0, r6
   25798:	bl	1c820 <floor@plt+0xb454>
   2579c:	ldm	r6, {r0, r1, r2, r3}
   257a0:	cmp	r9, #0
   257a4:	stm	r7, {r0, r1, r2, r3}
   257a8:	vstr	d0, [sp, #56]	; 0x38
   257ac:	vstr	d1, [sp, #64]	; 0x40
   257b0:	beq	257c4 <floor@plt+0x143f8>
   257b4:	ldr	r3, [pc, #96]	; 2581c <floor@plt+0x14450>
   257b8:	mov	r0, #32
   257bc:	ldr	r1, [r3]
   257c0:	bl	111f8 <putc@plt>
   257c4:	ldrd	r0, [sp, #64]	; 0x40
   257c8:	add	r9, r9, #1
   257cc:	ldrd	r2, [sp, #56]	; 0x38
   257d0:	strd	r0, [sp]
   257d4:	ldr	r1, [pc, #72]	; 25824 <floor@plt+0x14458>
   257d8:	mov	r0, #1
   257dc:	bl	113c0 <__printf_chk@plt>
   257e0:	cmp	fp, r9
   257e4:	add	r8, r8, #16
   257e8:	bne	25758 <floor@plt+0x1438c>
   257ec:	ldr	r0, [pc, #52]	; 25828 <floor@plt+0x1445c>
   257f0:	bl	1112c <puts@plt>
   257f4:	ldr	r3, [pc, #24]	; 25814 <floor@plt+0x14448>
   257f8:	ldr	r2, [sp, #92]	; 0x5c
   257fc:	ldr	r3, [r3]
   25800:	cmp	r2, r3
   25804:	bne	25810 <floor@plt+0x14444>
   25808:	add	sp, sp, #100	; 0x64
   2580c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25810:	bl	111e0 <__stack_chk_fail@plt>
   25814:	andeq	r1, r4, r0, ror sp
   25818:	andeq	r0, r3, r0, ror r1
   2581c:	andeq	r2, r4, r4, asr r4
   25820:	andeq	r0, r3, r4, lsl #3
   25824:	muleq	r2, r0, lr
   25828:	andeq	r0, r3, ip, lsl #3
   2582c:	vldr	d5, [r2, #8]
   25830:	vldr	d6, [r0, #32]
   25834:	vldr	d1, [r0, #40]	; 0x28
   25838:	vldr	d7, [r2]
   2583c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25840:	vldr	d0, [r0, #56]	; 0x38
   25844:	vsub.f64	d1, d1, d5
   25848:	vsub.f64	d7, d7, d6
   2584c:	mov	r8, r2
   25850:	ldr	r2, [pc, #316]	; 25994 <floor@plt+0x145c8>
   25854:	sub	sp, sp, #100	; 0x64
   25858:	add	r5, sp, #72	; 0x48
   2585c:	ldr	r2, [r2]
   25860:	mov	sl, r0
   25864:	vdiv.f64	d1, d1, d0
   25868:	mov	r0, r5
   2586c:	mov	r4, r1
   25870:	mov	fp, r3
   25874:	str	r2, [sp, #92]	; 0x5c
   25878:	add	r7, sp, #8
   2587c:	vdiv.f64	d0, d7, d0
   25880:	bl	1c6e4 <floor@plt+0xb318>
   25884:	ldm	r5, {r0, r1, r2, r3}
   25888:	add	ip, sp, #40	; 0x28
   2588c:	stm	r7, {r0, r1, r2, r3}
   25890:	vldr	d7, [sp, #16]
   25894:	stm	ip, {r0, r1, r2, r3}
   25898:	mov	r0, #1
   2589c:	ldrd	r2, [sp, #8]
   258a0:	ldr	r1, [pc, #240]	; 25998 <floor@plt+0x145cc>
   258a4:	vstr	d7, [sp]
   258a8:	bl	113c0 <__printf_chk@plt>
   258ac:	cmp	r4, #0
   258b0:	movne	r2, #80	; 0x50
   258b4:	moveq	r2, #112	; 0x70
   258b8:	ldr	r1, [pc, #220]	; 2599c <floor@plt+0x145d0>
   258bc:	mov	r0, #1
   258c0:	bl	113c0 <__printf_chk@plt>
   258c4:	cmp	fp, #1
   258c8:	ble	2596c <floor@plt+0x145a0>
   258cc:	mov	r9, #1
   258d0:	add	r4, sp, #56	; 0x38
   258d4:	add	r6, sp, #24
   258d8:	vldr	d5, [r8, #24]
   258dc:	vldr	d6, [sl, #32]
   258e0:	vldr	d1, [sl, #40]	; 0x28
   258e4:	vldr	d7, [r8, #16]
   258e8:	vldr	d0, [sl, #56]	; 0x38
   258ec:	mov	r0, r4
   258f0:	vsub.f64	d1, d1, d5
   258f4:	vsub.f64	d7, d7, d6
   258f8:	vdiv.f64	d1, d1, d0
   258fc:	vdiv.f64	d0, d7, d0
   25900:	bl	1c6e4 <floor@plt+0xb318>
   25904:	ldm	r4, {r0, r1, r2, r3}
   25908:	stm	r5, {r0, r1, r2, r3}
   2590c:	stm	r6, {r0, r1, r2, r3}
   25910:	mov	r1, r7
   25914:	mov	r0, r6
   25918:	bl	1c820 <floor@plt+0xb454>
   2591c:	ldm	r6, {r0, r1, r2, r3}
   25920:	cmp	r9, #1
   25924:	stm	r7, {r0, r1, r2, r3}
   25928:	vstr	d0, [sp, #56]	; 0x38
   2592c:	vstr	d1, [sp, #64]	; 0x40
   25930:	beq	25944 <floor@plt+0x14578>
   25934:	ldr	r3, [pc, #100]	; 259a0 <floor@plt+0x145d4>
   25938:	mov	r0, #32
   2593c:	ldr	r1, [r3]
   25940:	bl	111f8 <putc@plt>
   25944:	ldrd	r0, [sp, #64]	; 0x40
   25948:	add	r9, r9, #1
   2594c:	ldrd	r2, [sp, #56]	; 0x38
   25950:	strd	r0, [sp]
   25954:	ldr	r1, [pc, #72]	; 259a4 <floor@plt+0x145d8>
   25958:	mov	r0, #1
   2595c:	bl	113c0 <__printf_chk@plt>
   25960:	cmp	fp, r9
   25964:	add	r8, r8, #16
   25968:	bne	258d8 <floor@plt+0x1450c>
   2596c:	ldr	r0, [pc, #52]	; 259a8 <floor@plt+0x145dc>
   25970:	bl	1112c <puts@plt>
   25974:	ldr	r3, [pc, #24]	; 25994 <floor@plt+0x145c8>
   25978:	ldr	r2, [sp, #92]	; 0x5c
   2597c:	ldr	r3, [r3]
   25980:	cmp	r2, r3
   25984:	bne	25990 <floor@plt+0x145c4>
   25988:	add	sp, sp, #100	; 0x64
   2598c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25990:	bl	111e0 <__stack_chk_fail@plt>
   25994:	andeq	r1, r4, r0, ror sp
   25998:	andeq	r0, r3, r0, ror r1
   2599c:	muleq	r3, r8, r1
   259a0:	andeq	r2, r4, r4, asr r4
   259a4:	muleq	r2, r0, lr
   259a8:	andeq	r0, r3, ip, lsl #3
   259ac:	ldr	r3, [pc, #204]	; 25a80 <floor@plt+0x146b4>
   259b0:	push	{r4, r5, r6, r7, r8, r9, lr}
   259b4:	mov	r6, r1
   259b8:	ldr	r5, [pc, #196]	; 25a84 <floor@plt+0x146b8>
   259bc:	ldr	r1, [r3]
   259c0:	sub	sp, sp, #60	; 0x3c
   259c4:	ldr	r3, [r5]
   259c8:	cmp	r1, #0
   259cc:	str	r3, [sp, #52]	; 0x34
   259d0:	mov	r4, r0
   259d4:	beq	25a18 <floor@plt+0x1464c>
   259d8:	ldr	r3, [r0]
   259dc:	vldr	d0, [r2, #16]
   259e0:	ldr	r3, [r3, #116]	; 0x74
   259e4:	blx	r3
   259e8:	ldr	r3, [r4]
   259ec:	mov	r0, r4
   259f0:	mov	r2, r6
   259f4:	ldr	r3, [r3, #92]	; 0x5c
   259f8:	mov	r1, r6
   259fc:	blx	r3
   25a00:	ldr	r2, [sp, #52]	; 0x34
   25a04:	ldr	r3, [r5]
   25a08:	cmp	r2, r3
   25a0c:	bne	25a7c <floor@plt+0x146b0>
   25a10:	add	sp, sp, #60	; 0x3c
   25a14:	pop	{r4, r5, r6, r7, r8, r9, pc}
   25a18:	vldr	d5, [r6, #8]
   25a1c:	vldr	d6, [r0, #32]
   25a20:	vldr	d1, [r0, #40]	; 0x28
   25a24:	vldr	d7, [r6]
   25a28:	vldr	d0, [r0, #56]	; 0x38
   25a2c:	add	r4, sp, #16
   25a30:	vsub.f64	d1, d1, d5
   25a34:	vsub.f64	d7, d7, d6
   25a38:	mov	r0, r4
   25a3c:	ldr	r8, [pc, #68]	; 25a88 <floor@plt+0x146bc>
   25a40:	ldr	r9, [pc, #68]	; 25a8c <floor@plt+0x146c0>
   25a44:	vdiv.f64	d1, d1, d0
   25a48:	vdiv.f64	d0, d7, d0
   25a4c:	bl	1c6e4 <floor@plt+0xb318>
   25a50:	ldm	r4, {r0, r1, r2, r3}
   25a54:	add	ip, sp, #32
   25a58:	stm	ip, {r0, r1, r2, r3}
   25a5c:	mov	r0, #1
   25a60:	ldrd	r6, [sp, #40]	; 0x28
   25a64:	strd	r8, [sp, #8]
   25a68:	ldrd	r2, [sp, #32]
   25a6c:	strd	r6, [sp]
   25a70:	ldr	r1, [pc, #24]	; 25a90 <floor@plt+0x146c4>
   25a74:	bl	113c0 <__printf_chk@plt>
   25a78:	b	25a00 <floor@plt+0x14634>
   25a7c:	bl	111e0 <__stack_chk_fail@plt>
   25a80:	andeq	r2, r4, r8, lsr #6
   25a84:	andeq	r1, r4, r0, ror sp
   25a88:	andeq	r4, ip, #3047424	; 0x2e8000
   25a8c:	svccc	0x00a6872b
   25a90:	andeq	r0, r3, r0, lsr #3
   25a94:	push	{r4, r6, r7, lr}
   25a98:	mov	r4, r0
   25a9c:	bl	1c3c4 <floor@plt+0xaff8>
   25aa0:	ldr	r2, [pc, #80]	; 25af8 <floor@plt+0x1472c>
   25aa4:	mov	r3, #0
   25aa8:	str	r2, [r4]
   25aac:	str	r3, [r4, #24]
   25ab0:	add	r0, r4, #32
   25ab4:	bl	1c6c8 <floor@plt+0xb2fc>
   25ab8:	ldr	r1, [pc, #60]	; 25afc <floor@plt+0x14730>
   25abc:	mov	r6, #0
   25ac0:	mov	r7, #-1073741824	; 0xc0000000
   25ac4:	mov	r0, #0
   25ac8:	mov	r3, #0
   25acc:	strd	r0, [r4, #72]	; 0x48
   25ad0:	str	r3, [r4, #80]	; 0x50
   25ad4:	strd	r6, [r4, #64]	; 0x40
   25ad8:	str	r3, [r4, #84]	; 0x54
   25adc:	mov	r0, r4
   25ae0:	pop	{r4, r6, r7, pc}
   25ae4:	ldr	r3, [pc, #20]	; 25b00 <floor@plt+0x14734>
   25ae8:	mov	r0, r4
   25aec:	str	r3, [r4]
   25af0:	bl	1c3f0 <floor@plt+0xb024>
   25af4:	bl	111ec <__cxa_end_cleanup@plt>
   25af8:	andeq	pc, r2, r4, lsl sp	; <UNPREDICTABLE>
   25afc:	svclt	0x00f00000	; IMB
   25b00:	andeq	pc, r2, ip, lsl #25
   25b04:	push	{r4, lr}
   25b08:	mov	r0, #88	; 0x58
   25b0c:	bl	28660 <_Znwj@@Base>
   25b10:	mov	r4, r0
   25b14:	bl	25a94 <floor@plt+0x146c8>
   25b18:	mov	r0, r4
   25b1c:	pop	{r4, pc}
   25b20:	mov	r0, r4
   25b24:	bl	286b0 <_ZdlPv@@Base>
   25b28:	bl	111ec <__cxa_end_cleanup@plt>
   25b2c:	andeq	r0, r0, r0
   25b30:	mov	r0, #1
   25b34:	bx	lr
   25b38:	bx	lr
   25b3c:	bx	lr
   25b40:	mov	r0, #0
   25b44:	bx	lr
   25b48:	ldr	r3, [pc, #20]	; 25b64 <floor@plt+0x14798>
   25b4c:	push	{r4, lr}
   25b50:	mov	r4, r0
   25b54:	str	r3, [r0]
   25b58:	bl	1c3f0 <floor@plt+0xb024>
   25b5c:	mov	r0, r4
   25b60:	pop	{r4, pc}
   25b64:	andeq	pc, r2, ip, lsl #25
   25b68:	ldr	r3, [pc, #40]	; 25b98 <floor@plt+0x147cc>
   25b6c:	push	{r4, lr}
   25b70:	mov	r4, r0
   25b74:	str	r3, [r0]
   25b78:	bl	1c3f0 <floor@plt+0xb024>
   25b7c:	mov	r0, r4
   25b80:	bl	286b0 <_ZdlPv@@Base>
   25b84:	mov	r0, r4
   25b88:	pop	{r4, pc}
   25b8c:	mov	r0, r4
   25b90:	bl	286b0 <_ZdlPv@@Base>
   25b94:	bl	111ec <__cxa_end_cleanup@plt>
   25b98:	andeq	pc, r2, ip, lsl #25
   25b9c:	vcmpe.f64	d0, #0.0
   25ba0:	vldr	d7, [r0, #64]	; 0x40
   25ba4:	vmrs	APSR_nzcv, fpscr
   25ba8:	bmi	25bdc <floor@plt+0x14810>
   25bac:	vcmp.f64	d7, d0
   25bb0:	vmrs	APSR_nzcv, fpscr
   25bb4:	bxeq	lr
   25bb8:	vldr	d6, [pc, #64]	; 25c00 <floor@plt+0x14834>
   25bbc:	vldr	d7, [pc, #68]	; 25c08 <floor@plt+0x1483c>
   25bc0:	vstr	d0, [r0, #64]	; 0x40
   25bc4:	ldr	r1, [pc, #76]	; 25c18 <floor@plt+0x1484c>
   25bc8:	mov	r0, #1
   25bcc:	vmla.f64	d7, d0, d6
   25bd0:	vcvt.s32.f64	s15, d7
   25bd4:	vmov	r2, s15
   25bd8:	b	113c0 <__printf_chk@plt>
   25bdc:	vldr	d6, [pc, #44]	; 25c10 <floor@plt+0x14844>
   25be0:	vcmp.f64	d7, d6
   25be4:	vmrs	APSR_nzcv, fpscr
   25be8:	bxeq	lr
   25bec:	vstr	d6, [r0, #64]	; 0x40
   25bf0:	mov	r2, #8
   25bf4:	ldr	r1, [pc, #28]	; 25c18 <floor@plt+0x1484c>
   25bf8:	mov	r0, #1
   25bfc:	b	113c0 <__printf_chk@plt>
   25c00:	bicvc	r1, r7, r2, ror ip
   25c04:	eormi	ip, fp, ip, lsl r7
   25c08:	andeq	r0, r0, r0
   25c0c:	svccc	0x00e00000
   25c10:	andeq	r0, r0, r0
   25c14:	svclt	0x00f00000	; IMB
   25c18:	ldrdeq	r0, [r3], -r8
   25c1c:	push	{r4, r5, lr}
   25c20:	sub	sp, sp, #12
   25c24:	ldrd	r4, [r0, #48]	; 0x30
   25c28:	ldrd	r2, [r0, #40]	; 0x28
   25c2c:	ldr	r1, [pc, #16]	; 25c44 <floor@plt+0x14878>
   25c30:	strd	r4, [sp]
   25c34:	mov	r0, #1
   25c38:	bl	113c0 <__printf_chk@plt>
   25c3c:	add	sp, sp, #12
   25c40:	pop	{r4, r5, pc}
   25c44:	strdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   25c48:	vcmpe.f64	d0, #0.0
   25c4c:	push	{r4, r5, r6, r7, lr}
   25c50:	mov	r6, r0
   25c54:	sub	sp, sp, #12
   25c58:	vmrs	APSR_nzcv, fpscr
   25c5c:	mov	r4, r1
   25c60:	mov	r5, r2
   25c64:	mov	r7, r3
   25c68:	blt	25c8c <floor@plt+0x148c0>
   25c6c:	vldr	d7, [pc, #68]	; 25cb8 <floor@plt+0x148ec>
   25c70:	ldr	r1, [pc, #72]	; 25cc0 <floor@plt+0x148f4>
   25c74:	mov	r0, #1
   25c78:	vcmp.f64	d0, d7
   25c7c:	vmrs	APSR_nzcv, fpscr
   25c80:	vmovgt	r2, r3, d7
   25c84:	vmovle	r2, r3, d0
   25c88:	bl	113c0 <__printf_chk@plt>
   25c8c:	ldr	r3, [r6]
   25c90:	sub	r1, r5, #-268435455	; 0xf0000001
   25c94:	str	r7, [sp]
   25c98:	mov	r0, r6
   25c9c:	add	r1, r4, r1, lsl #4
   25ca0:	ldr	r6, [r3, #24]
   25ca4:	mov	r2, r4
   25ca8:	mov	r3, r5
   25cac:	blx	r6
   25cb0:	add	sp, sp, #12
   25cb4:	pop	{r4, r5, r6, r7, pc}
   25cb8:	andeq	r0, r0, r0
   25cbc:	svccc	0x00f00000	; IMB
   25cc0:	andeq	r0, r3, r0, asr #6
   25cc4:	push	{r4, r5, r6, r8, r9, sl, fp, lr}
   25cc8:	sub	sp, sp, #8
   25ccc:	ldrd	sl, [r1]
   25cd0:	ldrd	r8, [r2, #8]
   25cd4:	mov	r4, r0
   25cd8:	strd	sl, [r0, #24]
   25cdc:	strd	r8, [r0, #32]
   25ce0:	mov	r5, r1
   25ce4:	mov	r6, r2
   25ce8:	bl	1c4a8 <floor@plt+0xb0dc>
   25cec:	vldr	d5, [r5]
   25cf0:	vldr	d6, [r6, #8]
   25cf4:	vldr	d4, [r5, #8]
   25cf8:	vldr	d7, [r6]
   25cfc:	ldr	r3, [pc, #68]	; 25d48 <floor@plt+0x1497c>
   25d00:	ldr	r1, [pc, #68]	; 25d4c <floor@plt+0x14980>
   25d04:	vsub.f64	d6, d6, d4
   25d08:	vsub.f64	d7, d7, d5
   25d0c:	ldr	r3, [r3]
   25d10:	mov	r0, #1
   25d14:	mov	r2, r3
   25d18:	vdiv.f64	d5, d6, d0
   25d1c:	vstr	d0, [r4, #56]	; 0x38
   25d20:	str	r3, [sp]
   25d24:	vdiv.f64	d6, d7, d0
   25d28:	vstr	d5, [r4, #40]	; 0x28
   25d2c:	vstr	d6, [r4, #48]	; 0x30
   25d30:	bl	113c0 <__printf_chk@plt>
   25d34:	mov	r2, #0
   25d38:	mov	r3, #-1073741824	; 0xc0000000
   25d3c:	strd	r2, [r4, #64]	; 0x40
   25d40:	add	sp, sp, #8
   25d44:	pop	{r4, r5, r6, r8, r9, sl, fp, pc}
   25d48:	andeq	r2, r4, r4, lsl r9
   25d4c:	andeq	r0, r3, ip, asr r3
   25d50:	vcmpe.f64	d1, #0.0
   25d54:	push	{r4, r5, r6, r7, r8, lr}
   25d58:	vpush	{d8-d9}
   25d5c:	ldr	r4, [pc, #316]	; 25ea0 <floor@plt+0x14ad4>
   25d60:	vmrs	APSR_nzcv, fpscr
   25d64:	vmov.f64	d8, d1
   25d68:	ldr	r3, [r4]
   25d6c:	sub	sp, sp, #48	; 0x30
   25d70:	mov	r5, r2
   25d74:	str	r3, [sp, #44]	; 0x2c
   25d78:	mov	r6, r0
   25d7c:	mov	r7, r1
   25d80:	vmov.f64	d9, d0
   25d84:	ldr	r3, [r2]
   25d88:	blt	25de8 <floor@plt+0x14a1c>
   25d8c:	cmp	r3, #1
   25d90:	beq	25e5c <floor@plt+0x14a90>
   25d94:	vldr	d7, [pc, #252]	; 25e98 <floor@plt+0x14acc>
   25d98:	add	r0, sp, #16
   25d9c:	vcmp.f64	d1, d7
   25da0:	vmrs	APSR_nzcv, fpscr
   25da4:	vmovgt.f64	d8, d7
   25da8:	bl	1c3a0 <floor@plt+0xafd4>
   25dac:	vadd.f64	d1, d9, d9
   25db0:	ldr	r2, [r6]
   25db4:	mov	r3, #0
   25db8:	mov	r0, sp
   25dbc:	ldr	r8, [r2, #40]	; 0x28
   25dc0:	str	r3, [sp, #16]
   25dc4:	vmov.f64	d0, d1
   25dc8:	bl	1c6e4 <floor@plt+0xb318>
   25dcc:	add	r3, sp, #16
   25dd0:	vmov.f64	d0, d8
   25dd4:	mov	r2, sp
   25dd8:	mov	r1, r7
   25ddc:	mov	r0, r6
   25de0:	blx	r8
   25de4:	ldr	r3, [r5]
   25de8:	cmp	r3, #3
   25dec:	ldrls	pc, [pc, r3, lsl #2]
   25df0:	b	25e04 <floor@plt+0x14a38>
   25df4:	andeq	r5, r2, r0, lsl lr
   25df8:	andeq	r5, r2, ip, asr lr
   25dfc:	andeq	r5, r2, r4, asr #28
   25e00:	andeq	r5, r2, ip, lsr #28
   25e04:	ldr	r1, [pc, #152]	; 25ea4 <floor@plt+0x14ad8>
   25e08:	ldr	r0, [pc, #152]	; 25ea8 <floor@plt+0x14adc>
   25e0c:	bl	26c88 <floor@plt+0x158bc>
   25e10:	ldr	r2, [sp, #44]	; 0x2c
   25e14:	ldr	r3, [r4]
   25e18:	cmp	r2, r3
   25e1c:	bne	25e90 <floor@plt+0x14ac4>
   25e20:	add	sp, sp, #48	; 0x30
   25e24:	vpop	{d8-d9}
   25e28:	pop	{r4, r5, r6, r7, r8, pc}
   25e2c:	mov	r2, r5
   25e30:	vmov.f64	d0, d9
   25e34:	mov	r1, r7
   25e38:	mov	r0, r6
   25e3c:	bl	2138c <floor@plt+0xffc0>
   25e40:	b	25e10 <floor@plt+0x14a44>
   25e44:	mov	r2, r5
   25e48:	vmov.f64	d0, d9
   25e4c:	mov	r1, r7
   25e50:	mov	r0, r6
   25e54:	bl	21558 <floor@plt+0x1018c>
   25e58:	b	25e10 <floor@plt+0x14a44>
   25e5c:	vadd.f64	d1, d9, d9
   25e60:	ldr	r3, [r6]
   25e64:	add	r0, sp, #16
   25e68:	ldr	r8, [r3, #40]	; 0x28
   25e6c:	vmov.f64	d0, d1
   25e70:	bl	1c6e4 <floor@plt+0xb318>
   25e74:	vmov.f64	d0, d8
   25e78:	mov	r3, r5
   25e7c:	add	r2, sp, #16
   25e80:	mov	r1, r7
   25e84:	mov	r0, r6
   25e88:	blx	r8
   25e8c:	b	25e10 <floor@plt+0x14a44>
   25e90:	bl	111e0 <__stack_chk_fail@plt>
   25e94:	nop			; (mov r0, r0)
   25e98:	andeq	r0, r0, r0
   25e9c:	svccc	0x00f00000	; IMB
   25ea0:	andeq	r1, r4, r0, ror sp
   25ea4:	andeq	r0, r3, r0, asr r4
   25ea8:	andeq	r0, r0, r3, lsr r1
   25eac:	push	{r4, r5, r6, r7, r8, r9, lr}
   25eb0:	vpush	{d8}
   25eb4:	ldr	r8, [pc, #500]	; 260b0 <floor@plt+0x14ce4>
   25eb8:	ldr	ip, [r3]
   25ebc:	mov	r6, r3
   25ec0:	sub	sp, sp, #60	; 0x3c
   25ec4:	ldr	r3, [r8]
   25ec8:	cmp	ip, #0
   25ecc:	mov	r7, r1
   25ed0:	mov	r9, r2
   25ed4:	vmov.f64	d8, d0
   25ed8:	str	r3, [sp, #52]	; 0x34
   25edc:	mov	r5, r0
   25ee0:	bne	26080 <floor@plt+0x14cb4>
   25ee4:	vcmpe.f64	d0, #0.0
   25ee8:	vmrs	APSR_nzcv, fpscr
   25eec:	bmi	25f84 <floor@plt+0x14bb8>
   25ef0:	vcmpe.f64	d8, #0.0
   25ef4:	vmrs	APSR_nzcv, fpscr
   25ef8:	blt	25f1c <floor@plt+0x14b50>
   25efc:	vldr	d7, [pc, #404]	; 26098 <floor@plt+0x14ccc>
   25f00:	ldr	r1, [pc, #428]	; 260b4 <floor@plt+0x14ce8>
   25f04:	mov	r0, #1
   25f08:	vcmp.f64	d8, d7
   25f0c:	vmrs	APSR_nzcv, fpscr
   25f10:	vmovgt	r2, r3, d7
   25f14:	vmovle	r2, r3, d8
   25f18:	bl	113c0 <__printf_chk@plt>
   25f1c:	vldr	d1, [r5, #32]
   25f20:	vldr	d5, [r7, #8]
   25f24:	vldr	d7, [r7]
   25f28:	vldr	d6, [r5, #24]
   25f2c:	vldr	d0, [r5, #56]	; 0x38
   25f30:	vsub.f64	d1, d1, d5
   25f34:	add	r4, sp, #16
   25f38:	vsub.f64	d7, d7, d6
   25f3c:	mov	r0, r4
   25f40:	vdiv.f64	d1, d1, d0
   25f44:	vdiv.f64	d0, d7, d0
   25f48:	bl	1c6e4 <floor@plt+0xb318>
   25f4c:	ldm	r4, {r0, r1, r2, r3}
   25f50:	add	ip, sp, #32
   25f54:	ldr	lr, [r6]
   25f58:	stm	ip, {r0, r1, r2, r3}
   25f5c:	cmp	lr, #3
   25f60:	ldrls	pc, [pc, lr, lsl #2]
   25f64:	b	25f78 <floor@plt+0x14bac>
   25f68:	strdeq	r5, [r2], -r8
   25f6c:	strdeq	r5, [r2], -r8
   25f70:	andeq	r5, r2, ip, asr #31
   25f74:	andeq	r5, r2, r0, lsr #31
   25f78:	ldr	r1, [pc, #312]	; 260b8 <floor@plt+0x14cec>
   25f7c:	ldr	r0, [pc, #312]	; 260bc <floor@plt+0x14cf0>
   25f80:	bl	26c88 <floor@plt+0x158bc>
   25f84:	ldr	r2, [sp, #52]	; 0x34
   25f88:	ldr	r3, [r8]
   25f8c:	cmp	r2, r3
   25f90:	bne	26094 <floor@plt+0x14cc8>
   25f94:	add	sp, sp, #60	; 0x3c
   25f98:	vpop	{d8}
   25f9c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   25fa0:	mov	r0, r9
   25fa4:	vldr	d0, [r5, #56]	; 0x38
   25fa8:	bl	1c844 <floor@plt+0xb478>
   25fac:	mov	r3, r6
   25fb0:	mov	r2, r4
   25fb4:	mov	r1, r7
   25fb8:	mov	r0, r5
   25fbc:	vstr	d0, [sp, #16]
   25fc0:	vstr	d1, [sp, #24]
   25fc4:	bl	21a50 <floor@plt+0x10684>
   25fc8:	b	25f84 <floor@plt+0x14bb8>
   25fcc:	mov	r0, r9
   25fd0:	vldr	d0, [r5, #56]	; 0x38
   25fd4:	bl	1c844 <floor@plt+0xb478>
   25fd8:	mov	r3, r6
   25fdc:	mov	r2, r4
   25fe0:	mov	r1, r7
   25fe4:	mov	r0, r5
   25fe8:	vstr	d0, [sp, #16]
   25fec:	vstr	d1, [sp, #24]
   25ff0:	bl	21df0 <floor@plt+0x10a24>
   25ff4:	b	25f84 <floor@plt+0x14bb8>
   25ff8:	vldr	d7, [pc, #160]	; 260a0 <floor@plt+0x14cd4>
   25ffc:	vldr	d4, [pc, #164]	; 260a8 <floor@plt+0x14cdc>
   26000:	vldr	d5, [sp, #40]	; 0x28
   26004:	vldr	d3, [sp, #32]
   26008:	vmov.f64	d1, d7
   2600c:	vldr	d6, [r5, #56]	; 0x38
   26010:	vldr	d0, [r9, #8]
   26014:	vldr	d2, [r9]
   26018:	vmla.f64	d1, d5, d4
   2601c:	ldr	r3, [pc, #156]	; 260c0 <floor@plt+0x14cf4>
   26020:	vadd.f64	d6, d6, d6
   26024:	cmp	lr, #0
   26028:	ldr	r2, [pc, #148]	; 260c4 <floor@plt+0x14cf8>
   2602c:	movne	r2, r3
   26030:	ldr	r1, [pc, #144]	; 260c8 <floor@plt+0x14cfc>
   26034:	mov	r0, #1
   26038:	vmov.f64	d5, d1
   2603c:	vmov.f64	d1, d7
   26040:	vcvt.s32.f64	s10, d5
   26044:	vmla.f64	d1, d3, d4
   26048:	vdiv.f64	d3, d0, d6
   2604c:	vstr	s10, [sp]
   26050:	vcvt.s32.f64	s11, d1
   26054:	vmov	r3, s11
   26058:	vdiv.f64	d5, d2, d6
   2605c:	vmov.f64	d6, d7
   26060:	vmla.f64	d6, d3, d4
   26064:	vcvt.s32.f64	s12, d6
   26068:	vstr	s12, [sp, #8]
   2606c:	vmla.f64	d7, d5, d4
   26070:	vcvt.s32.f64	s14, d7
   26074:	vstr	s14, [sp, #4]
   26078:	bl	113c0 <__printf_chk@plt>
   2607c:	b	25f84 <floor@plt+0x14bb8>
   26080:	ldr	r3, [r0]
   26084:	vldr	d0, [r6, #16]
   26088:	ldr	r3, [r3, #92]	; 0x5c
   2608c:	blx	r3
   26090:	b	25ef0 <floor@plt+0x14b24>
   26094:	bl	111e0 <__stack_chk_fail@plt>
   26098:	andeq	r0, r0, r0
   2609c:	svccc	0x00f00000	; IMB
   260a0:	andeq	r0, r0, r0
   260a4:	svccc	0x00e00000
   260a8:	andeq	r0, r0, r0
   260ac:	addmi	r4, pc, r0
   260b0:	andeq	r1, r4, r0, ror sp
   260b4:	andeq	r0, r3, r0, asr #6
   260b8:	andeq	r0, r3, r0, asr r4
   260bc:	andeq	r0, r0, r7, asr r1
   260c0:	andeq	r0, r3, r4, ror r4
   260c4:	andeq	r0, r3, r0, ror r4
   260c8:	andeq	r0, r3, r8, ror r4
   260cc:	push	{r4, lr}
   260d0:	mov	r0, r1
   260d4:	ldr	r4, [pc, #32]	; 260fc <floor@plt+0x14d30>
   260d8:	ldr	r1, [r4]
   260dc:	bl	11354 <fputs@plt>
   260e0:	ldr	r1, [r4]
   260e4:	mov	r0, #37	; 0x25
   260e8:	bl	111f8 <putc@plt>
   260ec:	ldr	r1, [r4]
   260f0:	mov	r0, #10
   260f4:	pop	{r4, lr}
   260f8:	b	111f8 <putc@plt>
   260fc:	andeq	r2, r4, r4, asr r4
   26100:	vcmpe.f64	d0, #0.0
   26104:	vmrs	APSR_nzcv, fpscr
   26108:	bmi	26110 <floor@plt+0x14d44>
   2610c:	b	25b9c <floor@plt+0x147d0>
   26110:	ldr	r2, [r0, #72]	; 0x48
   26114:	ldr	r1, [pc, #4]	; 26120 <floor@plt+0x14d54>
   26118:	mov	r0, #1
   2611c:	b	113c0 <__printf_chk@plt>
   26120:	ldrdeq	r0, [r3], -r8
   26124:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   26128:	vpush	{d8-d9}
   2612c:	ldr	r5, [pc, #316]	; 26270 <floor@plt+0x14ea4>
   26130:	sub	sp, sp, #48	; 0x30
   26134:	ldr	ip, [r5]
   26138:	ldr	r6, [sp, #96]	; 0x60
   2613c:	str	ip, [sp, #44]	; 0x2c
   26140:	ldr	r4, [r6]
   26144:	cmp	r4, #2
   26148:	beq	26178 <floor@plt+0x14dac>
   2614c:	cmp	r4, #3
   26150:	beq	261dc <floor@plt+0x14e10>
   26154:	cmp	r4, #1
   26158:	beq	26184 <floor@plt+0x14db8>
   2615c:	ldr	r2, [sp, #44]	; 0x2c
   26160:	ldr	r3, [r5]
   26164:	cmp	r2, r3
   26168:	bne	2626c <floor@plt+0x14ea0>
   2616c:	add	sp, sp, #48	; 0x30
   26170:	vpop	{d8-d9}
   26174:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   26178:	str	r6, [sp]
   2617c:	bl	223f0 <floor@plt+0x11024>
   26180:	b	2615c <floor@plt+0x14d90>
   26184:	mov	r7, r1
   26188:	mov	sl, r2
   2618c:	mov	r8, r3
   26190:	mov	r9, r0
   26194:	add	r0, sp, #8
   26198:	bl	1c6c8 <floor@plt+0xb2fc>
   2619c:	add	r3, sp, #8
   261a0:	mov	r2, r8
   261a4:	mov	r1, sl
   261a8:	mov	r0, r7
   261ac:	bl	22120 <floor@plt+0x10d54>
   261b0:	cmp	r0, #0
   261b4:	bne	261e8 <floor@plt+0x14e1c>
   261b8:	ldr	r0, [r9]
   261bc:	mov	r3, r4
   261c0:	str	r6, [sp]
   261c4:	mov	r2, r8
   261c8:	ldr	r4, [r0, #24]
   261cc:	mov	r1, r7
   261d0:	mov	r0, r9
   261d4:	blx	r4
   261d8:	b	2615c <floor@plt+0x14d90>
   261dc:	str	r6, [sp]
   261e0:	bl	221ec <floor@plt+0x10e20>
   261e4:	b	2615c <floor@plt+0x14d90>
   261e8:	ldr	r3, [r9]
   261ec:	mov	r1, r7
   261f0:	mov	r0, sl
   261f4:	ldr	r4, [r3, #88]	; 0x58
   261f8:	bl	1c820 <floor@plt+0xb454>
   261fc:	add	r0, sp, #24
   26200:	vstr	d1, [sp, #32]
   26204:	vstr	d0, [sp, #24]
   26208:	bl	1c898 <floor@plt+0xb4cc>
   2620c:	vldr	d6, [sp, #8]
   26210:	vldr	d7, [sp, #16]
   26214:	vldr	d1, [r7]
   26218:	vsub.f64	d1, d1, d6
   2621c:	vmov.f64	d8, d0
   26220:	vldr	d0, [r7, #8]
   26224:	vsub.f64	d0, d0, d7
   26228:	bl	11210 <atan2@plt>
   2622c:	vldr	d1, [r8]
   26230:	vldr	d6, [sp, #8]
   26234:	vldr	d7, [sp, #16]
   26238:	vsub.f64	d1, d1, d6
   2623c:	vmov.f64	d9, d0
   26240:	vldr	d0, [r8, #8]
   26244:	vsub.f64	d0, d0, d7
   26248:	bl	11210 <atan2@plt>
   2624c:	mov	r2, r6
   26250:	vmov.f64	d1, d9
   26254:	add	r1, sp, #8
   26258:	mov	r0, r9
   2625c:	vmov.f64	d2, d0
   26260:	vmov.f64	d0, d8
   26264:	blx	r4
   26268:	b	2615c <floor@plt+0x14d90>
   2626c:	bl	111e0 <__stack_chk_fail@plt>
   26270:	andeq	r1, r4, r0, ror sp
   26274:	push	{r4, r5, r6, r7, r8, lr}
   26278:	mov	r4, r1
   2627c:	ldr	r5, [pc, #344]	; 263dc <floor@plt+0x15010>
   26280:	ldrb	ip, [r1]
   26284:	sub	sp, sp, #16
   26288:	ldr	r1, [r5]
   2628c:	cmp	ip, #46	; 0x2e
   26290:	mov	r6, r0
   26294:	mov	r7, r2
   26298:	mov	r8, r3
   2629c:	str	r1, [sp, #12]
   262a0:	bne	262e4 <floor@plt+0x14f18>
   262a4:	ldrb	r2, [r4, #1]
   262a8:	cmp	r2, #112	; 0x70
   262ac:	bne	262bc <floor@plt+0x14ef0>
   262b0:	ldrb	r3, [r4, #2]
   262b4:	cmp	r3, #115	; 0x73
   262b8:	beq	262f4 <floor@plt+0x14f28>
   262bc:	add	r2, r4, #1
   262c0:	ldr	r1, [pc, #280]	; 263e0 <floor@plt+0x15014>
   262c4:	mov	r0, #1
   262c8:	bl	113c0 <__printf_chk@plt>
   262cc:	ldr	r2, [sp, #12]
   262d0:	ldr	r3, [r5]
   262d4:	cmp	r2, r3
   262d8:	bne	263d8 <floor@plt+0x1500c>
   262dc:	add	sp, sp, #16
   262e0:	pop	{r4, r5, r6, r7, r8, pc}
   262e4:	ldr	r1, [pc, #248]	; 263e4 <floor@plt+0x15018>
   262e8:	mov	r0, #416	; 0x1a0
   262ec:	bl	26c88 <floor@plt+0x158bc>
   262f0:	b	262a4 <floor@plt+0x14ed8>
   262f4:	ldrb	r2, [r4, #3]
   262f8:	cmp	r2, #0
   262fc:	beq	26358 <floor@plt+0x14f8c>
   26300:	ldr	r3, [pc, #224]	; 263e8 <floor@plt+0x1501c>
   26304:	ldrb	r3, [r3, r2]
   26308:	cmp	r3, #0
   2630c:	bne	262bc <floor@plt+0x14ef0>
   26310:	ldr	r3, [pc, #212]	; 263ec <floor@plt+0x15020>
   26314:	add	r4, r4, #3
   26318:	ldrb	r2, [r3, r2]
   2631c:	cmp	r2, #0
   26320:	bne	2636c <floor@plt+0x14fa0>
   26324:	mov	r2, #10
   26328:	add	r1, sp, #8
   2632c:	mov	r0, r4
   26330:	bl	110d8 <strtol@plt>
   26334:	cmp	r0, #0
   26338:	bne	26394 <floor@plt+0x14fc8>
   2633c:	ldr	r3, [sp, #8]
   26340:	cmp	r3, r4
   26344:	beq	263b8 <floor@plt+0x14fec>
   26348:	ldr	r3, [r6, #72]	; 0x48
   2634c:	str	r0, [r6, #72]	; 0x48
   26350:	str	r3, [r6, #76]	; 0x4c
   26354:	b	262cc <floor@plt+0x14f00>
   26358:	ldr	r3, [pc, #140]	; 263ec <floor@plt+0x15020>
   2635c:	add	r4, r4, #3
   26360:	ldrb	r2, [r3]
   26364:	cmp	r2, #0
   26368:	beq	26384 <floor@plt+0x14fb8>
   2636c:	ldrb	r2, [r4, #1]!
   26370:	ldrb	r1, [r3, r2]
   26374:	cmp	r1, #0
   26378:	bne	2636c <floor@plt+0x14fa0>
   2637c:	cmp	r2, #0
   26380:	bne	26324 <floor@plt+0x14f58>
   26384:	ldrd	r2, [r6, #72]	; 0x48
   26388:	str	r2, [r6, #76]	; 0x4c
   2638c:	str	r3, [r6, #72]	; 0x48
   26390:	b	262cc <floor@plt+0x14f00>
   26394:	bge	26348 <floor@plt+0x14f7c>
   26398:	ldr	r3, [pc, #80]	; 263f0 <floor@plt+0x15024>
   2639c:	mov	r1, r8
   263a0:	mov	r0, r7
   263a4:	str	r3, [sp, #4]
   263a8:	str	r3, [sp]
   263ac:	ldr	r2, [pc, #64]	; 263f4 <floor@plt+0x15028>
   263b0:	bl	27510 <floor@plt+0x16144>
   263b4:	b	262cc <floor@plt+0x14f00>
   263b8:	ldr	r3, [pc, #48]	; 263f0 <floor@plt+0x15024>
   263bc:	mov	r1, r8
   263c0:	mov	r0, r7
   263c4:	str	r3, [sp, #4]
   263c8:	str	r3, [sp]
   263cc:	ldr	r2, [pc, #36]	; 263f8 <floor@plt+0x1502c>
   263d0:	bl	27510 <floor@plt+0x16144>
   263d4:	b	262cc <floor@plt+0x14f00>
   263d8:	bl	111e0 <__stack_chk_fail@plt>
   263dc:	andeq	r1, r4, r0, ror sp
   263e0:	ldrdeq	r0, [r3], -ip
   263e4:	andeq	r0, r3, r0, asr r4
   263e8:			; <UNDEFINED> instruction: 0x00044ab8
   263ec:			; <UNDEFINED> instruction: 0x00044eb8
   263f0:			; <UNDEFINED> instruction: 0x000454b8
   263f4:	andeq	r0, r3, r8, asr #9
   263f8:	andeq	r0, r3, r4, lsr #9
   263fc:	push	{r4, r5, r6, lr}
   26400:	vpush	{d8-d10}
   26404:	ldr	r6, [pc, #284]	; 26528 <floor@plt+0x1515c>
   26408:	ldr	r3, [r0]
   2640c:	mov	r4, r1
   26410:	sub	sp, sp, #64	; 0x40
   26414:	ldr	r1, [r6]
   26418:	mov	r5, r0
   2641c:	ldr	r3, [r3, #92]	; 0x5c
   26420:	str	r1, [sp, #60]	; 0x3c
   26424:	vmov.f64	d9, d0
   26428:	vldr	d0, [r2, #16]
   2642c:	vmov.f64	d8, d1
   26430:	vmov.f64	d10, d2
   26434:	blx	r3
   26438:	vldr	d5, [r4, #8]
   2643c:	vldr	d6, [r4]
   26440:	vldr	d1, [r5, #32]
   26444:	vldr	d7, [r5, #24]
   26448:	vldr	d0, [r5, #56]	; 0x38
   2644c:	add	r4, sp, #24
   26450:	vsub.f64	d1, d1, d5
   26454:	vsub.f64	d7, d6, d7
   26458:	mov	r0, r4
   2645c:	vdiv.f64	d1, d1, d0
   26460:	vdiv.f64	d0, d7, d0
   26464:	bl	1c6e4 <floor@plt+0xb318>
   26468:	vldr	d3, [r5, #56]	; 0x38
   2646c:	ldm	r4, {r0, r1, r2, r3}
   26470:	vldr	d7, [pc, #152]	; 26510 <floor@plt+0x15144>
   26474:	add	ip, sp, #40	; 0x28
   26478:	vldr	d4, [pc, #152]	; 26518 <floor@plt+0x1514c>
   2647c:	stm	ip, {r0, r1, r2, r3}
   26480:	vmov.f64	d2, d7
   26484:	vldr	d6, [sp, #40]	; 0x28
   26488:	vldr	d5, [sp, #48]	; 0x30
   2648c:	vcmpe.f64	d10, d8
   26490:	vneg.f64	d10, d10
   26494:	vmla.f64	d2, d6, d4
   26498:	ldr	r1, [pc, #140]	; 2652c <floor@plt+0x15160>
   2649c:	mov	r0, #1
   264a0:	vstr	d10, [sp, #8]
   264a4:	vmov.f64	d6, d2
   264a8:	vmov.f64	d2, d7
   264ac:	vcvt.s32.f64	s12, d6
   264b0:	vmla.f64	d2, d5, d4
   264b4:	vdiv.f64	d1, d9, d3
   264b8:	vmov	r2, s12
   264bc:	vcvt.s32.f64	s10, d2
   264c0:	vmrs	APSR_nzcv, fpscr
   264c4:	vmla.f64	d7, d1, d4
   264c8:	vnegpl.f64	d8, d8
   264cc:	vcvt.s32.f64	s15, d7
   264d0:	vmov	r3, s15
   264d4:	vldrmi	d7, [pc, #68]	; 26520 <floor@plt+0x15154>
   264d8:	str	r3, [sp, #4]
   264dc:	vsubmi.f64	d8, d7, d8
   264e0:	str	r3, [sp]
   264e4:	vmov	r3, s10
   264e8:	vstr	d8, [sp, #16]
   264ec:	bl	113c0 <__printf_chk@plt>
   264f0:	ldr	r2, [sp, #60]	; 0x3c
   264f4:	ldr	r3, [r6]
   264f8:	cmp	r2, r3
   264fc:	bne	2650c <floor@plt+0x15140>
   26500:	add	sp, sp, #64	; 0x40
   26504:	vpop	{d8-d10}
   26508:	pop	{r4, r5, r6, pc}
   2650c:	bl	111e0 <__stack_chk_fail@plt>
   26510:	andeq	r0, r0, r0
   26514:	svccc	0x00e00000
   26518:	andeq	r0, r0, r0
   2651c:	addmi	r4, pc, r0
   26520:	strbpl	r2, [r4], #-3352	; 0xfffff2e8
   26524:			; <UNDEFINED> instruction: 0x401921fb
   26528:	andeq	r1, r4, r0, ror sp
   2652c:	andeq	r0, r3, r4, ror #9
   26530:	push	{r4, r5, r6, r7, lr}
   26534:	vpush	{d8}
   26538:	ldr	r3, [pc, #312]	; 26678 <floor@plt+0x152ac>
   2653c:	ldr	r5, [pc, #312]	; 2667c <floor@plt+0x152b0>
   26540:	mov	r4, r0
   26544:	ldr	r0, [r3]
   26548:	sub	sp, sp, #60	; 0x3c
   2654c:	ldr	r3, [r5]
   26550:	cmp	r0, #0
   26554:	mov	r6, r1
   26558:	str	r3, [sp, #52]	; 0x34
   2655c:	beq	265b8 <floor@plt+0x151ec>
   26560:	mov	ip, r2
   26564:	add	lr, sp, #24
   26568:	ldm	ip!, {r0, r1, r2, r3}
   2656c:	str	lr, [sp]
   26570:	ldr	r7, [r4]
   26574:	stmia	lr!, {r0, r1, r2, r3}
   26578:	mov	r3, #1
   2657c:	ldm	ip, {r0, r1}
   26580:	ldr	r7, [r7, #24]
   26584:	mov	r2, r6
   26588:	stm	lr, {r0, r1}
   2658c:	str	r3, [sp, #24]
   26590:	mov	r0, r4
   26594:	mov	r1, r6
   26598:	blx	r7
   2659c:	ldr	r2, [sp, #52]	; 0x34
   265a0:	ldr	r3, [r5]
   265a4:	cmp	r2, r3
   265a8:	bne	26658 <floor@plt+0x1528c>
   265ac:	add	sp, sp, #60	; 0x3c
   265b0:	vpop	{d8}
   265b4:	pop	{r4, r5, r6, r7, pc}
   265b8:	vldr	d8, [pc, #160]	; 26660 <floor@plt+0x15294>
   265bc:	vldr	d5, [r2, #16]
   265c0:	vldr	d7, [pc, #160]	; 26668 <floor@plt+0x1529c>
   265c4:	vldr	d4, [r1, #8]
   265c8:	vmov.f64	d3, d8
   265cc:	vldr	d1, [r4, #32]
   265d0:	vldr	d6, [r1]
   265d4:	vldr	d0, [r4, #56]	; 0x38
   265d8:	vmla.f64	d3, d5, d7
   265dc:	vldr	d5, [r4, #24]
   265e0:	vsub.f64	d1, d1, d4
   265e4:	add	r6, sp, #8
   265e8:	mov	r0, r6
   265ec:	vsub.f64	d6, d6, d5
   265f0:	vcvt.s32.f64	s15, d3
   265f4:	vdiv.f64	d1, d1, d0
   265f8:	vmov	r4, s15
   265fc:	cmp	r4, #0
   26600:	moveq	r4, #1
   26604:	vdiv.f64	d0, d6, d0
   26608:	bl	1c6e4 <floor@plt+0xb318>
   2660c:	ldm	r6, {r0, r1, r2, r3}
   26610:	add	ip, sp, #24
   26614:	vldr	d7, [pc, #84]	; 26670 <floor@plt+0x152a4>
   26618:	str	r4, [sp, #4]
   2661c:	vmov.f64	d4, d8
   26620:	stm	ip, {r0, r1, r2, r3}
   26624:	vldr	d6, [sp, #32]
   26628:	vldr	d5, [sp, #24]
   2662c:	str	r4, [sp]
   26630:	ldr	r1, [pc, #72]	; 26680 <floor@plt+0x152b4>
   26634:	vmla.f64	d4, d6, d7
   26638:	mov	r0, #1
   2663c:	vmla.f64	d8, d5, d7
   26640:	vcvt.s32.f64	s15, d4
   26644:	vmov	r3, s15
   26648:	vcvt.s32.f64	s15, d8
   2664c:	vmov	r2, s15
   26650:	bl	113c0 <__printf_chk@plt>
   26654:	b	2659c <floor@plt+0x151d0>
   26658:	bl	111e0 <__stack_chk_fail@plt>
   2665c:	nop			; (mov r0, r0)
   26660:	andeq	r0, r0, r0
   26664:	svccc	0x00e00000
   26668:	bicvc	r1, r7, r2, ror ip
   2666c:	andsmi	ip, fp, ip, lsl r7
   26670:	andeq	r0, r0, r0
   26674:	addmi	r4, pc, r0
   26678:	andeq	r2, r4, ip, lsl r9
   2667c:	andeq	r1, r4, r0, ror sp
   26680:	andeq	r0, r3, ip, lsl #10
   26684:	vldr	d1, [r0, #32]
   26688:	vldr	d5, [r1, #8]
   2668c:	vldr	d7, [r1]
   26690:	vldr	d6, [r0, #24]
   26694:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26698:	vsub.f64	d1, d1, d5
   2669c:	vldr	d0, [r0, #56]	; 0x38
   266a0:	vsub.f64	d7, d7, d6
   266a4:	ldr	fp, [pc, #396]	; 26838 <floor@plt+0x1546c>
   266a8:	sub	sp, sp, #68	; 0x44
   266ac:	add	r4, sp, #24
   266b0:	ldr	r1, [fp]
   266b4:	mov	r0, r4
   266b8:	vdiv.f64	d1, d1, d0
   266bc:	mov	r7, r3
   266c0:	mov	r5, r2
   266c4:	str	r1, [sp, #60]	; 0x3c
   266c8:	vdiv.f64	d0, d7, d0
   266cc:	bl	1c6e4 <floor@plt+0xb318>
   266d0:	ldm	r4, {r0, r1, r2, r3}
   266d4:	add	ip, sp, #40	; 0x28
   266d8:	cmp	r7, #0
   266dc:	stm	ip, {r0, r1, r2, r3}
   266e0:	vldr	d7, [sp, #40]	; 0x28
   266e4:	vstr	d7, [sp, #8]
   266e8:	vldr	d7, [sp, #48]	; 0x30
   266ec:	vstr	d7, [sp, #16]
   266f0:	ble	26804 <floor@plt+0x15438>
   266f4:	ldr	sl, [pc, #320]	; 2683c <floor@plt+0x15470>
   266f8:	ldr	r6, [pc, #320]	; 26840 <floor@plt+0x15474>
   266fc:	ldr	r9, [pc, #320]	; 26844 <floor@plt+0x15478>
   26700:	ldr	r8, [pc, #320]	; 26848 <floor@plt+0x1547c>
   26704:	rsb	r4, r7, #0
   26708:	b	267dc <floor@plt+0x15410>
   2670c:	ldr	r3, [r5, #8]
   26710:	mov	r2, r4
   26714:	cmp	r3, #1
   26718:	addeq	r4, r4, #2
   2671c:	beq	26734 <floor@plt+0x15368>
   26720:	cmp	r3, #2
   26724:	addeq	r4, r2, #2
   26728:	addne	r2, r2, #1
   2672c:	addne	r4, r4, #2
   26730:	moveq	r2, r4
   26734:	cmp	r2, #0
   26738:	bne	2681c <floor@plt+0x15450>
   2673c:	ldrd	r2, [sp, #16]
   26740:	ldr	r1, [pc, #260]	; 2684c <floor@plt+0x15480>
   26744:	mov	r0, #1
   26748:	bl	113c0 <__printf_chk@plt>
   2674c:	ldrd	r2, [sp, #8]
   26750:	mov	r1, sl
   26754:	mov	r0, #1
   26758:	bl	113c0 <__printf_chk@plt>
   2675c:	ldr	r3, [r6]
   26760:	mov	r2, #13
   26764:	mov	r1, #1
   26768:	mov	r0, r9
   2676c:	bl	11258 <fwrite@plt>
   26770:	ldr	r3, [r5, #4]
   26774:	cmp	r3, #1
   26778:	beq	26790 <floor@plt+0x153c4>
   2677c:	ldr	r3, [r6]
   26780:	mov	r2, #5
   26784:	mov	r1, #1
   26788:	ldr	r0, [pc, #192]	; 26850 <floor@plt+0x15484>
   2678c:	bl	11258 <fwrite@plt>
   26790:	ldr	r1, [r6]
   26794:	ldr	r0, [r5]
   26798:	bl	11354 <fputs@plt>
   2679c:	ldr	r3, [r5, #4]
   267a0:	cmp	r3, #2
   267a4:	beq	267bc <floor@plt+0x153f0>
   267a8:	ldr	r3, [r6]
   267ac:	mov	r2, #4
   267b0:	mov	r1, #1
   267b4:	ldr	r0, [pc, #152]	; 26854 <floor@plt+0x15488>
   267b8:	bl	11258 <fwrite@plt>
   267bc:	ldr	r3, [r6]
   267c0:	mov	r2, #4
   267c4:	mov	r1, #1
   267c8:	mov	r0, r8
   267cc:	bl	11258 <fwrite@plt>
   267d0:	cmp	r7, r4
   267d4:	add	r5, r5, #20
   267d8:	beq	26804 <floor@plt+0x15438>
   267dc:	ldr	r3, [r5]
   267e0:	cmp	r3, #0
   267e4:	beq	267f4 <floor@plt+0x15428>
   267e8:	ldrb	r3, [r3]
   267ec:	cmp	r3, #0
   267f0:	bne	2670c <floor@plt+0x15340>
   267f4:	add	r4, r4, #2
   267f8:	cmp	r7, r4
   267fc:	add	r5, r5, #20
   26800:	bne	267dc <floor@plt+0x15410>
   26804:	ldr	r2, [sp, #60]	; 0x3c
   26808:	ldr	r3, [fp]
   2680c:	cmp	r2, r3
   26810:	bne	26834 <floor@plt+0x15468>
   26814:	add	sp, sp, #68	; 0x44
   26818:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2681c:	vldr	d7, [sp, #16]
   26820:	ldr	r1, [pc, #48]	; 26858 <floor@plt+0x1548c>
   26824:	mov	r0, #1
   26828:	vstr	d7, [sp]
   2682c:	bl	113c0 <__printf_chk@plt>
   26830:	b	2674c <floor@plt+0x15380>
   26834:	bl	111e0 <__stack_chk_fail@plt>
   26838:	andeq	r1, r4, r0, ror sp
   2683c:	andeq	r0, r3, ip, lsl r6
   26840:	andeq	r2, r4, r4, asr r4
   26844:	andeq	r0, r3, r4, asr #12
   26848:	andeq	r0, r3, r4, ror #12
   2684c:	andeq	r0, r3, ip, asr #10
   26850:	andeq	r0, r3, r4, asr r6
   26854:	andeq	r0, r3, ip, asr r6
   26858:	andeq	r0, r3, r4, lsl #11
   2685c:	push	{r4, lr}
   26860:	mov	r4, r0
   26864:	bl	1c3c4 <floor@plt+0xaff8>
   26868:	mov	r0, r4
   2686c:	ldr	r3, [pc, #32]	; 26894 <floor@plt+0x154c8>
   26870:	str	r3, [r0], #24
   26874:	bl	1c6c8 <floor@plt+0xb2fc>
   26878:	mov	r0, r4
   2687c:	pop	{r4, pc}
   26880:	ldr	r3, [pc, #16]	; 26898 <floor@plt+0x154cc>
   26884:	mov	r0, r4
   26888:	str	r3, [r4]
   2688c:	bl	1c3f0 <floor@plt+0xb024>
   26890:	bl	111ec <__cxa_end_cleanup@plt>
   26894:	ldrdeq	r0, [r3], -r8
   26898:	andeq	pc, r2, ip, lsl #25
   2689c:	push	{r4, lr}
   268a0:	mov	r0, #72	; 0x48
   268a4:	bl	28660 <_Znwj@@Base>
   268a8:	mov	r4, r0
   268ac:	bl	2685c <floor@plt+0x15490>
   268b0:	mov	r0, r4
   268b4:	pop	{r4, pc}
   268b8:	mov	r0, r4
   268bc:	bl	286b0 <_ZdlPv@@Base>
   268c0:	bl	111ec <__cxa_end_cleanup@plt>
   268c4:	vldr	d5, [r1, #8]
   268c8:	vldr	d6, [r0, #24]
   268cc:	vldr	d1, [r0, #32]
   268d0:	vldr	d7, [r1]
   268d4:	push	{r4, r5, lr}
   268d8:	vldr	d0, [r0, #56]	; 0x38
   268dc:	vsub.f64	d1, d1, d5
   268e0:	vsub.f64	d7, d7, d6
   268e4:	ldr	r5, [pc, #140]	; 26978 <floor@plt+0x155ac>
   268e8:	sub	sp, sp, #44	; 0x2c
   268ec:	mov	r4, sp
   268f0:	ldr	r3, [r5]
   268f4:	mov	r0, r4
   268f8:	str	r3, [sp, #36]	; 0x24
   268fc:	vdiv.f64	d1, d1, d0
   26900:	vdiv.f64	d0, d7, d0
   26904:	bl	1c6e4 <floor@plt+0xb318>
   26908:	ldm	r4, {r0, r1, r2, r3}
   2690c:	vldr	d7, [pc, #84]	; 26968 <floor@plt+0x1559c>
   26910:	add	ip, sp, #16
   26914:	vldr	d6, [pc, #84]	; 26970 <floor@plt+0x155a4>
   26918:	stm	ip, {r0, r1, r2, r3}
   2691c:	vmov.f64	d3, d7
   26920:	vldr	d5, [sp, #24]
   26924:	vldr	d4, [sp, #16]
   26928:	mov	r0, #1
   2692c:	ldr	r1, [pc, #72]	; 2697c <floor@plt+0x155b0>
   26930:	vmla.f64	d3, d5, d6
   26934:	vmla.f64	d7, d4, d6
   26938:	vcvt.s32.f64	s13, d3
   2693c:	vcvt.s32.f64	s15, d7
   26940:	vmov	r3, s13
   26944:	vmov	r2, s15
   26948:	bl	113c0 <__printf_chk@plt>
   2694c:	ldr	r2, [sp, #36]	; 0x24
   26950:	ldr	r3, [r5]
   26954:	cmp	r2, r3
   26958:	bne	26964 <floor@plt+0x15598>
   2695c:	add	sp, sp, #44	; 0x2c
   26960:	pop	{r4, r5, pc}
   26964:	bl	111e0 <__stack_chk_fail@plt>
   26968:	andeq	r0, r0, r0
   2696c:	svccc	0x00e00000
   26970:	andeq	r0, r0, r0
   26974:	addmi	r4, pc, r0
   26978:	andeq	r1, r4, r0, ror sp
   2697c:	andeq	r0, r3, ip, ror #12
   26980:	push	{r4, r5, r6, r7, r8, lr}
   26984:	mov	r6, r0
   26988:	ldr	ip, [r0]
   2698c:	ldr	r7, [sp, #24]
   26990:	mov	r8, r1
   26994:	ldr	r1, [ip, #92]	; 0x5c
   26998:	vldr	d0, [r7, #16]
   2699c:	mov	r5, r3
   269a0:	mov	r4, r2
   269a4:	blx	r1
   269a8:	mov	r1, r8
   269ac:	mov	r0, r6
   269b0:	bl	268c4 <floor@plt+0x154f8>
   269b4:	cmp	r5, #0
   269b8:	ble	269d8 <floor@plt+0x1560c>
   269bc:	add	r5, r4, r5, lsl #4
   269c0:	mov	r1, r4
   269c4:	mov	r0, r6
   269c8:	add	r4, r4, #16
   269cc:	bl	268c4 <floor@plt+0x154f8>
   269d0:	cmp	r4, r5
   269d4:	bne	269c0 <floor@plt+0x155f4>
   269d8:	ldr	r4, [pc, #180]	; 26a94 <floor@plt+0x156c8>
   269dc:	mov	r2, #13
   269e0:	mov	r1, #1
   269e4:	ldr	r3, [r4]
   269e8:	ldr	r0, [pc, #168]	; 26a98 <floor@plt+0x156cc>
   269ec:	bl	11258 <fwrite@plt>
   269f0:	ldr	r3, [r7]
   269f4:	cmp	r3, #3
   269f8:	ldrls	pc, [pc, r3, lsl #2]
   269fc:	b	26a2c <floor@plt+0x15660>
   26a00:	andeq	r6, r2, ip, ror sl
   26a04:	andeq	r6, r2, r4, ror #20
   26a08:	andeq	r6, r2, r4, asr #20
   26a0c:	andeq	r6, r2, r0, lsl sl
   26a10:	vldr	d6, [r7, #8]
   26a14:	vldr	d7, [r6, #56]	; 0x38
   26a18:	ldr	r1, [pc, #124]	; 26a9c <floor@plt+0x156d0>
   26a1c:	mov	r0, #1
   26a20:	vdiv.f64	d7, d6, d7
   26a24:	vmov	r2, r3, d7
   26a28:	bl	113c0 <__printf_chk@plt>
   26a2c:	ldr	r3, [r4]
   26a30:	mov	r2, #3
   26a34:	mov	r1, #1
   26a38:	ldr	r0, [pc, #96]	; 26aa0 <floor@plt+0x156d4>
   26a3c:	pop	{r4, r5, r6, r7, r8, lr}
   26a40:	b	11258 <fwrite@plt>
   26a44:	vldr	d6, [r7, #8]
   26a48:	vldr	d7, [r6, #56]	; 0x38
   26a4c:	ldr	r1, [pc, #80]	; 26aa4 <floor@plt+0x156d8>
   26a50:	mov	r0, #1
   26a54:	vdiv.f64	d7, d6, d7
   26a58:	vmov	r2, r3, d7
   26a5c:	bl	113c0 <__printf_chk@plt>
   26a60:	b	26a2c <floor@plt+0x15660>
   26a64:	ldr	r3, [r4]
   26a68:	mov	r2, #2
   26a6c:	mov	r1, #1
   26a70:	ldr	r0, [pc, #48]	; 26aa8 <floor@plt+0x156dc>
   26a74:	bl	11258 <fwrite@plt>
   26a78:	b	26a2c <floor@plt+0x15660>
   26a7c:	ldr	r3, [r4]
   26a80:	mov	r2, #2
   26a84:	mov	r1, #1
   26a88:	ldr	r0, [pc, #28]	; 26aac <floor@plt+0x156e0>
   26a8c:	bl	11258 <fwrite@plt>
   26a90:	b	26a2c <floor@plt+0x15660>
   26a94:	andeq	r2, r4, r4, asr r4
   26a98:	andeq	r0, r3, r8, lsl #13
   26a9c:	andeq	r0, r3, r8, lsr #13
   26aa0:			; <UNDEFINED> instruction: 0x000306b0
   26aa4:	andeq	r0, r3, r0, lsr #13
   26aa8:	muleq	r3, ip, r6
   26aac:	muleq	r3, r8, r6
   26ab0:	push	{r4, r5, r6, r7, r8, lr}
   26ab4:	ldr	r7, [sp, #24]
   26ab8:	ldr	ip, [r7]
   26abc:	cmp	ip, #0
   26ac0:	popeq	{r4, r5, r6, r7, r8, pc}
   26ac4:	mov	r5, r3
   26ac8:	ldr	r3, [r0]
   26acc:	mov	r6, r0
   26ad0:	mov	r8, r1
   26ad4:	vldr	d0, [r7, #16]
   26ad8:	ldr	r3, [r3, #92]	; 0x5c
   26adc:	mov	r4, r2
   26ae0:	blx	r3
   26ae4:	mov	r1, r8
   26ae8:	mov	r0, r6
   26aec:	bl	268c4 <floor@plt+0x154f8>
   26af0:	cmp	r5, #0
   26af4:	ble	26b14 <floor@plt+0x15748>
   26af8:	add	r5, r4, r5, lsl #4
   26afc:	mov	r1, r4
   26b00:	mov	r0, r6
   26b04:	add	r4, r4, #16
   26b08:	bl	268c4 <floor@plt+0x154f8>
   26b0c:	cmp	r4, r5
   26b10:	bne	26afc <floor@plt+0x15730>
   26b14:	ldr	r4, [pc, #152]	; 26bb4 <floor@plt+0x157e8>
   26b18:	mov	r2, #15
   26b1c:	mov	r1, #1
   26b20:	ldr	r3, [r4]
   26b24:	ldr	r0, [pc, #140]	; 26bb8 <floor@plt+0x157ec>
   26b28:	bl	11258 <fwrite@plt>
   26b2c:	ldr	r3, [r7]
   26b30:	cmp	r3, #2
   26b34:	beq	26b90 <floor@plt+0x157c4>
   26b38:	cmp	r3, #3
   26b3c:	beq	26b70 <floor@plt+0x157a4>
   26b40:	cmp	r3, #0
   26b44:	beq	26b60 <floor@plt+0x15794>
   26b48:	ldr	r3, [r4]
   26b4c:	mov	r2, #3
   26b50:	mov	r1, #1
   26b54:	ldr	r0, [pc, #96]	; 26bbc <floor@plt+0x157f0>
   26b58:	pop	{r4, r5, r6, r7, r8, lr}
   26b5c:	b	11258 <fwrite@plt>
   26b60:	ldr	r1, [pc, #88]	; 26bc0 <floor@plt+0x157f4>
   26b64:	mov	r0, #234	; 0xea
   26b68:	bl	26c88 <floor@plt+0x158bc>
   26b6c:	b	26b48 <floor@plt+0x1577c>
   26b70:	vldr	d6, [r7, #8]
   26b74:	vldr	d7, [r6, #56]	; 0x38
   26b78:	ldr	r1, [pc, #68]	; 26bc4 <floor@plt+0x157f8>
   26b7c:	mov	r0, #1
   26b80:	vdiv.f64	d7, d6, d7
   26b84:	vmov	r2, r3, d7
   26b88:	bl	113c0 <__printf_chk@plt>
   26b8c:	b	26b48 <floor@plt+0x1577c>
   26b90:	vldr	d7, [r7, #8]
   26b94:	vldr	d6, [r6, #56]	; 0x38
   26b98:	ldr	r1, [pc, #36]	; 26bc4 <floor@plt+0x157f8>
   26b9c:	mov	r0, #1
   26ba0:	vneg.f64	d7, d7
   26ba4:	vdiv.f64	d7, d7, d6
   26ba8:	vmov	r2, r3, d7
   26bac:	bl	113c0 <__printf_chk@plt>
   26bb0:	b	26b48 <floor@plt+0x1577c>
   26bb4:	andeq	r2, r4, r4, asr r4
   26bb8:			; <UNDEFINED> instruction: 0x000306b4
   26bbc:			; <UNDEFINED> instruction: 0x000306b0
   26bc0:	andeq	r0, r3, r0, asr r4
   26bc4:	andeq	r0, r3, r4, asr #13
   26bc8:	push	{r4, lr}
   26bcc:	mov	r4, r0
   26bd0:	bl	2685c <floor@plt+0x15490>
   26bd4:	ldr	r2, [pc, #20]	; 26bf0 <floor@plt+0x15824>
   26bd8:	mov	r3, #8
   26bdc:	str	r2, [r4]
   26be0:	str	r3, [r4, #72]	; 0x48
   26be4:	str	r3, [r4, #76]	; 0x4c
   26be8:	mov	r0, r4
   26bec:	pop	{r4, pc}
   26bf0:	andeq	r0, r3, r0, asr #4
   26bf4:	push	{r4, lr}
   26bf8:	mov	r0, #80	; 0x50
   26bfc:	bl	28660 <_Znwj@@Base>
   26c00:	mov	r4, r0
   26c04:	bl	2685c <floor@plt+0x15490>
   26c08:	ldr	r2, [pc, #32]	; 26c30 <floor@plt+0x15864>
   26c0c:	mov	r3, #8
   26c10:	str	r2, [r4]
   26c14:	str	r3, [r4, #72]	; 0x48
   26c18:	str	r3, [r4, #76]	; 0x4c
   26c1c:	mov	r0, r4
   26c20:	pop	{r4, pc}
   26c24:	mov	r0, r4
   26c28:	bl	286b0 <_ZdlPv@@Base>
   26c2c:	bl	111ec <__cxa_end_cleanup@plt>
   26c30:	andeq	r0, r3, r0, asr #4
   26c34:	ldr	r3, [pc, #20]	; 26c50 <floor@plt+0x15884>
   26c38:	push	{r4, lr}
   26c3c:	mov	r4, r0
   26c40:	str	r3, [r0]
   26c44:	bl	1c3f0 <floor@plt+0xb024>
   26c48:	mov	r0, r4
   26c4c:	pop	{r4, pc}
   26c50:	andeq	pc, r2, ip, lsl #25
   26c54:	ldr	r3, [pc, #40]	; 26c84 <floor@plt+0x158b8>
   26c58:	push	{r4, lr}
   26c5c:	mov	r4, r0
   26c60:	str	r3, [r0]
   26c64:	bl	1c3f0 <floor@plt+0xb024>
   26c68:	mov	r0, r4
   26c6c:	bl	286b0 <_ZdlPv@@Base>
   26c70:	mov	r0, r4
   26c74:	pop	{r4, pc}
   26c78:	mov	r0, r4
   26c7c:	bl	286b0 <_ZdlPv@@Base>
   26c80:	bl	111ec <__cxa_end_cleanup@plt>
   26c84:	andeq	pc, r2, ip, lsl #25
   26c88:	ldr	r3, [pc, #68]	; 26cd4 <floor@plt+0x15908>
   26c8c:	push	{r4, r5, r6, lr}
   26c90:	mov	r5, r0
   26c94:	ldr	r2, [r3]
   26c98:	mov	r6, r1
   26c9c:	cmp	r2, #0
   26ca0:	ldr	r4, [pc, #48]	; 26cd8 <floor@plt+0x1590c>
   26ca4:	beq	26cb4 <floor@plt+0x158e8>
   26ca8:	ldr	r1, [pc, #44]	; 26cdc <floor@plt+0x15910>
   26cac:	ldr	r0, [r4]
   26cb0:	bl	29278 <_ZdlPv@@Base+0xbc8>
   26cb4:	mov	r3, r6
   26cb8:	mov	r2, r5
   26cbc:	ldr	r1, [pc, #28]	; 26ce0 <floor@plt+0x15914>
   26cc0:	ldr	r0, [r4]
   26cc4:	bl	29278 <_ZdlPv@@Base+0xbc8>
   26cc8:	ldr	r0, [r4]
   26ccc:	bl	1130c <fflush@plt>
   26cd0:	bl	11168 <abort@plt>
   26cd4:	andeq	r5, r4, r0, lsr r5
   26cd8:	andeq	r2, r4, r0, asr r4
   26cdc:	andeq	r0, r3, ip, asr #13
   26ce0:	ldrdeq	r0, [r3], -r4
   26ce4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26ce8:	sub	sp, sp, #28
   26cec:	ldr	r6, [pc, #596]	; 26f48 <floor@plt+0x15b7c>
   26cf0:	mov	r4, #0
   26cf4:	add	r3, r6, #1792	; 0x700
   26cf8:	add	r2, r6, #2048	; 0x800
   26cfc:	add	r3, r3, #4
   26d00:	add	r7, r6, #1024	; 0x400
   26d04:	add	r9, r6, #1280	; 0x500
   26d08:	add	r8, r6, #1536	; 0x600
   26d0c:	add	r0, r6, #2304	; 0x900
   26d10:	str	r3, [sp, #8]
   26d14:	add	r3, r2, #4
   26d18:	add	ip, r6, #2560	; 0xa00
   26d1c:	mov	r2, r6
   26d20:	str	r3, [sp, #12]
   26d24:	add	fp, r6, #260	; 0x104
   26d28:	add	r3, r0, #4
   26d2c:	add	sl, r6, #516	; 0x204
   26d30:	add	r7, r7, #4
   26d34:	add	r9, r9, #4
   26d38:	add	r8, r8, #4
   26d3c:	add	r6, r6, #772	; 0x304
   26d40:	mov	r5, r4
   26d44:	mov	r1, #1
   26d48:	str	r3, [sp, #16]
   26d4c:	add	r3, ip, #4
   26d50:	str	r3, [sp, #4]
   26d54:	str	r1, [r2], #3
   26d58:	bics	r1, r4, #127	; 0x7f
   26d5c:	bne	26e80 <floor@plt+0x15ab4>
   26d60:	str	r2, [sp, #20]
   26d64:	bl	11228 <__ctype_b_loc@plt>
   26d68:	lsl	r1, r4, #1
   26d6c:	mov	r3, #1
   26d70:	ldr	r2, [sp, #20]
   26d74:	ldr	ip, [r0]
   26d78:	ldrh	ip, [ip, r1]
   26d7c:	ands	ip, ip, #1024	; 0x400
   26d80:	strbne	r3, [fp]
   26d84:	strbeq	ip, [fp]
   26d88:	ldr	ip, [r0]
   26d8c:	ldrh	ip, [ip, r1]
   26d90:	ands	ip, ip, #256	; 0x100
   26d94:	strbne	r3, [sl]
   26d98:	strbeq	ip, [sl]
   26d9c:	ldr	ip, [r0]
   26da0:	ldrh	ip, [ip, r1]
   26da4:	ands	ip, ip, #512	; 0x200
   26da8:	strbeq	ip, [r6]
   26dac:	sub	ip, r4, #48	; 0x30
   26db0:	strbne	r3, [r6]
   26db4:	cmp	ip, #9
   26db8:	bls	26f40 <floor@plt+0x15b74>
   26dbc:	strb	r5, [r7]
   26dc0:	ldr	ip, [r0]
   26dc4:	ldrh	ip, [ip, r1]
   26dc8:	ands	ip, ip, #4096	; 0x1000
   26dcc:	bne	26f14 <floor@plt+0x15b48>
   26dd0:	ldr	lr, [sp, #8]
   26dd4:	strb	ip, [lr, r4]
   26dd8:	ldr	ip, [r0]
   26ddc:	ldrh	ip, [ip, r1]
   26de0:	ands	ip, ip, #8192	; 0x2000
   26de4:	bne	26f2c <floor@plt+0x15b60>
   26de8:	strb	ip, [r9]
   26dec:	ldr	ip, [r0]
   26df0:	ldrh	ip, [ip, r1]
   26df4:	ands	ip, ip, #4
   26df8:	bne	26ef4 <floor@plt+0x15b28>
   26dfc:	ldr	lr, [sp, #12]
   26e00:	strb	ip, [lr, r4]
   26e04:	ldr	ip, [r0]
   26e08:	ldrh	ip, [ip, r1]
   26e0c:	ands	ip, ip, #8
   26e10:	bne	26f0c <floor@plt+0x15b40>
   26e14:	strb	ip, [r8]
   26e18:	ldr	ip, [r0]
   26e1c:	ldrh	ip, [ip, r1]
   26e20:	ands	ip, ip, #16384	; 0x4000
   26e24:	bne	26ed0 <floor@plt+0x15b04>
   26e28:	ldr	lr, [sp, #16]
   26e2c:	strb	ip, [lr, r4]
   26e30:	ldr	lr, [r0]
   26e34:	ldrsh	lr, [lr, r1]
   26e38:	cmp	lr, #0
   26e3c:	blt	26f34 <floor@plt+0x15b68>
   26e40:	ldr	lr, [sp, #4]
   26e44:	strb	ip, [lr, r4]
   26e48:	ldr	r0, [r0]
   26e4c:	add	r4, r4, #1
   26e50:	add	fp, fp, #1
   26e54:	ldrh	r1, [r0, r1]
   26e58:	add	sl, sl, #1
   26e5c:	add	r6, r6, #1
   26e60:	add	r7, r7, #1
   26e64:	lsr	r1, r1, #1
   26e68:	and	r1, r1, #1
   26e6c:	strb	r1, [r2, #1]!
   26e70:	bics	r1, r4, #127	; 0x7f
   26e74:	add	r9, r9, #1
   26e78:	add	r8, r8, #1
   26e7c:	beq	26d60 <floor@plt+0x15994>
   26e80:	ldr	r1, [sp, #8]
   26e84:	strb	r5, [fp], #1
   26e88:	strb	r5, [sl], #1
   26e8c:	strb	r5, [r4, r1]
   26e90:	ldr	r1, [sp, #12]
   26e94:	strb	r5, [r6], #1
   26e98:	strb	r5, [r7], #1
   26e9c:	strb	r5, [r4, r1]
   26ea0:	ldr	r1, [sp, #16]
   26ea4:	strb	r5, [r9], #1
   26ea8:	strb	r5, [r8], #1
   26eac:	strb	r5, [r4, r1]
   26eb0:	ldr	r1, [sp, #4]
   26eb4:	strb	r5, [r2, #1]!
   26eb8:	strb	r5, [r4, r1]
   26ebc:	add	r4, r4, #1
   26ec0:	cmp	r4, #256	; 0x100
   26ec4:	bne	26d58 <floor@plt+0x1598c>
   26ec8:	add	sp, sp, #28
   26ecc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26ed0:	ldr	ip, [sp, #16]
   26ed4:	strb	r3, [ip, r4]
   26ed8:	ldr	ip, [r0]
   26edc:	ldrsh	ip, [ip, r1]
   26ee0:	cmp	ip, #0
   26ee4:	blt	26f34 <floor@plt+0x15b68>
   26ee8:	ldr	ip, [sp, #4]
   26eec:	strb	r5, [ip, r4]
   26ef0:	b	26e48 <floor@plt+0x15a7c>
   26ef4:	ldr	ip, [sp, #12]
   26ef8:	strb	r3, [ip, r4]
   26efc:	ldr	ip, [r0]
   26f00:	ldrh	ip, [ip, r1]
   26f04:	ands	ip, ip, #8
   26f08:	beq	26e14 <floor@plt+0x15a48>
   26f0c:	strb	r3, [r8]
   26f10:	b	26e18 <floor@plt+0x15a4c>
   26f14:	ldr	ip, [sp, #8]
   26f18:	strb	r3, [ip, r4]
   26f1c:	ldr	ip, [r0]
   26f20:	ldrh	ip, [ip, r1]
   26f24:	ands	ip, ip, #8192	; 0x2000
   26f28:	beq	26de8 <floor@plt+0x15a1c>
   26f2c:	strb	r3, [r9]
   26f30:	b	26dec <floor@plt+0x15a20>
   26f34:	ldr	ip, [sp, #4]
   26f38:	strb	r3, [ip, r4]
   26f3c:	b	26e48 <floor@plt+0x15a7c>
   26f40:	strb	r3, [r7]
   26f44:	b	26dc0 <floor@plt+0x159f4>
   26f48:			; <UNDEFINED> instruction: 0x000449b4
   26f4c:	sub	r3, r0, #1
   26f50:	add	r2, r0, #255	; 0xff
   26f54:	mov	r1, #0
   26f58:	strb	r1, [r3, #1]!
   26f5c:	cmp	r3, r2
   26f60:	bne	26f58 <floor@plt+0x15b8c>
   26f64:	bx	lr
   26f68:	sub	r3, r0, #1
   26f6c:	add	r1, r0, #255	; 0xff
   26f70:	mov	r2, #0
   26f74:	strb	r2, [r3, #1]!
   26f78:	cmp	r3, r1
   26f7c:	bne	26f74 <floor@plt+0x15ba8>
   26f80:	bx	lr
   26f84:	sub	r3, r0, #1
   26f88:	add	ip, r0, #255	; 0xff
   26f8c:	mov	r2, #0
   26f90:	strb	r2, [r3, #1]!
   26f94:	cmp	r3, ip
   26f98:	bne	26f90 <floor@plt+0x15bc4>
   26f9c:	ldrb	r3, [r1]
   26fa0:	cmp	r3, #0
   26fa4:	bxeq	lr
   26fa8:	mov	r2, #1
   26fac:	strb	r2, [r0, r3]
   26fb0:	ldrb	r3, [r1, #1]!
   26fb4:	cmp	r3, #0
   26fb8:	bne	26fac <floor@plt+0x15be0>
   26fbc:	bx	lr
   26fc0:	sub	r3, r0, #1
   26fc4:	add	ip, r0, #255	; 0xff
   26fc8:	mov	r2, #0
   26fcc:	strb	r2, [r3, #1]!
   26fd0:	cmp	r3, ip
   26fd4:	bne	26fcc <floor@plt+0x15c00>
   26fd8:	ldrb	r3, [r1]
   26fdc:	cmp	r3, #0
   26fe0:	bxeq	lr
   26fe4:	mov	r2, #1
   26fe8:	strb	r2, [r0, r3]
   26fec:	ldrb	r3, [r1, #1]!
   26ff0:	cmp	r3, #0
   26ff4:	bne	26fe8 <floor@plt+0x15c1c>
   26ff8:	bx	lr
   26ffc:	bx	lr
   27000:	push	{lr}		; (str lr, [sp, #-4]!)
   27004:	sub	r1, r1, #1
   27008:	mov	r3, r0
   2700c:	add	ip, r0, #256	; 0x100
   27010:	mov	lr, #1
   27014:	ldrb	r2, [r1, #1]!
   27018:	add	r3, r3, #1
   2701c:	cmp	r2, #0
   27020:	strbne	lr, [r3, #-1]
   27024:	cmp	r3, ip
   27028:	bne	27014 <floor@plt+0x15c48>
   2702c:	pop	{pc}		; (ldr pc, [sp], #4)
   27030:	ldr	r3, [pc, #28]	; 27054 <floor@plt+0x15c88>
   27034:	push	{r4, lr}
   27038:	mov	r4, r0
   2703c:	ldr	r3, [r3]
   27040:	cmp	r3, #0
   27044:	bne	2704c <floor@plt+0x15c80>
   27048:	bl	26ce4 <floor@plt+0x15918>
   2704c:	mov	r0, r4
   27050:	pop	{r4, pc}
   27054:			; <UNDEFINED> instruction: 0x000449b4
   27058:	ldr	r3, [pc, #20]	; 27074 <floor@plt+0x15ca8>
   2705c:	cmp	r1, #0
   27060:	moveq	r1, r3
   27064:	mov	r3, #1
   27068:	str	r1, [r0, #8]
   2706c:	str	r3, [r0]
   27070:	bx	lr
   27074:	andeq	r0, r3, r0, lsl #14
   27078:	mov	r2, #0
   2707c:	str	r2, [r0]
   27080:	bx	lr
   27084:	mov	r2, #3
   27088:	str	r1, [r0, #8]
   2708c:	str	r2, [r0]
   27090:	bx	lr
   27094:	mov	r2, #4
   27098:	str	r1, [r0, #8]
   2709c:	str	r2, [r0]
   270a0:	bx	lr
   270a4:	mov	r2, #2
   270a8:	strb	r1, [r0, #8]
   270ac:	str	r2, [r0]
   270b0:	bx	lr
   270b4:	mov	r2, #5
   270b8:	vstr	d0, [r0, #8]
   270bc:	str	r2, [r0]
   270c0:	bx	lr
   270c4:	ldr	r0, [r0]
   270c8:	clz	r0, r0
   270cc:	lsr	r0, r0, #5
   270d0:	bx	lr
   270d4:	ldr	r3, [r0]
   270d8:	push	{r4, lr}
   270dc:	sub	r3, r3, #1
   270e0:	cmp	r3, #4
   270e4:	ldrls	pc, [pc, r3, lsl #2]
   270e8:	b	27170 <floor@plt+0x15da4>
   270ec:	andeq	r7, r2, r0, lsr r1
   270f0:	andeq	r7, r2, r4, asr #2
   270f4:	andeq	r7, r2, r8, asr r1
   270f8:	andeq	r7, r2, r0, lsl #2
   270fc:	andeq	r7, r2, r8, lsl r1
   27100:	ldr	r0, [r0, #8]
   27104:	bl	28430 <floor@plt+0x17064>
   27108:	ldr	r3, [pc, #100]	; 27174 <floor@plt+0x15da8>
   2710c:	pop	{r4, lr}
   27110:	ldr	r1, [r3]
   27114:	b	11354 <fputs@plt>
   27118:	ldr	ip, [pc, #84]	; 27174 <floor@plt+0x15da8>
   2711c:	ldrd	r2, [r0, #8]
   27120:	ldr	r1, [pc, #80]	; 27178 <floor@plt+0x15dac>
   27124:	ldr	r0, [ip]
   27128:	pop	{r4, lr}
   2712c:	b	29278 <_ZdlPv@@Base+0xbc8>
   27130:	ldr	r3, [pc, #60]	; 27174 <floor@plt+0x15da8>
   27134:	ldr	r0, [r0, #8]
   27138:	pop	{r4, lr}
   2713c:	ldr	r1, [r3]
   27140:	b	11354 <fputs@plt>
   27144:	ldr	r3, [pc, #40]	; 27174 <floor@plt+0x15da8>
   27148:	ldrb	r0, [r0, #8]
   2714c:	pop	{r4, lr}
   27150:	ldr	r1, [r3]
   27154:	b	111f8 <putc@plt>
   27158:	ldr	r0, [r0, #8]
   2715c:	bl	283a4 <floor@plt+0x16fd8>
   27160:	ldr	r3, [pc, #12]	; 27174 <floor@plt+0x15da8>
   27164:	pop	{r4, lr}
   27168:	ldr	r1, [r3]
   2716c:	b	11354 <fputs@plt>
   27170:	pop	{r4, pc}
   27174:	andeq	r2, r4, r0, asr r4
   27178:			; <UNDEFINED> instruction: 0x0002e4b4
   2717c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   27180:	subs	r4, r0, #0
   27184:	mov	r6, r1
   27188:	mov	r7, r2
   2718c:	mov	r8, r3
   27190:	beq	2727c <floor@plt+0x15eb0>
   27194:	ldr	r5, [pc, #288]	; 272bc <floor@plt+0x15ef0>
   27198:	ldr	r9, [pc, #288]	; 272c0 <floor@plt+0x15ef4>
   2719c:	ldrb	r0, [r4]
   271a0:	cmp	r0, #0
   271a4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   271a8:	cmp	r0, #37	; 0x25
   271ac:	bne	2726c <floor@plt+0x15ea0>
   271b0:	ldrb	r3, [r4, #1]
   271b4:	add	r4, r4, #2
   271b8:	sub	r3, r3, #37	; 0x25
   271bc:	cmp	r3, #14
   271c0:	ldrls	pc, [pc, r3, lsl #2]
   271c4:	b	2725c <floor@plt+0x15e90>
   271c8:	andeq	r7, r2, ip, asr #4
   271cc:	andeq	r7, r2, ip, asr r2
   271d0:	andeq	r7, r2, ip, asr r2
   271d4:	andeq	r7, r2, ip, asr r2
   271d8:	andeq	r7, r2, ip, asr r2
   271dc:	andeq	r7, r2, ip, asr r2
   271e0:	andeq	r7, r2, ip, asr r2
   271e4:	andeq	r7, r2, ip, asr r2
   271e8:	andeq	r7, r2, ip, asr r2
   271ec:	andeq	r7, r2, ip, asr r2
   271f0:	andeq	r7, r2, ip, asr r2
   271f4:	andeq	r7, r2, ip, asr r2
   271f8:	andeq	r7, r2, r4, lsr r2
   271fc:	andeq	r7, r2, ip, lsl r2
   27200:	andeq	r7, r2, r4, lsl #4
   27204:	ldr	r3, [r8]
   27208:	cmp	r3, #0
   2720c:	beq	272ac <floor@plt+0x15ee0>
   27210:	mov	r0, r8
   27214:	bl	270d4 <floor@plt+0x15d08>
   27218:	b	2719c <floor@plt+0x15dd0>
   2721c:	ldr	r3, [r7]
   27220:	cmp	r3, #0
   27224:	beq	2729c <floor@plt+0x15ed0>
   27228:	mov	r0, r7
   2722c:	bl	270d4 <floor@plt+0x15d08>
   27230:	b	2719c <floor@plt+0x15dd0>
   27234:	ldr	r3, [r6]
   27238:	cmp	r3, #0
   2723c:	beq	2728c <floor@plt+0x15ec0>
   27240:	mov	r0, r6
   27244:	bl	270d4 <floor@plt+0x15d08>
   27248:	b	2719c <floor@plt+0x15dd0>
   2724c:	ldr	r1, [r5]
   27250:	mov	r0, #37	; 0x25
   27254:	bl	1124c <fputc@plt>
   27258:	b	2719c <floor@plt+0x15dd0>
   2725c:	mov	r1, r9
   27260:	mov	r0, #120	; 0x78
   27264:	bl	26c88 <floor@plt+0x158bc>
   27268:	b	2719c <floor@plt+0x15dd0>
   2726c:	ldr	r1, [r5]
   27270:	add	r4, r4, #1
   27274:	bl	111f8 <putc@plt>
   27278:	b	2719c <floor@plt+0x15dd0>
   2727c:	ldr	r1, [pc, #60]	; 272c0 <floor@plt+0x15ef4>
   27280:	mov	r0, #98	; 0x62
   27284:	bl	26c88 <floor@plt+0x158bc>
   27288:	b	27194 <floor@plt+0x15dc8>
   2728c:	mov	r1, r9
   27290:	mov	r0, #108	; 0x6c
   27294:	bl	26c88 <floor@plt+0x158bc>
   27298:	b	27240 <floor@plt+0x15e74>
   2729c:	mov	r1, r9
   272a0:	mov	r0, #112	; 0x70
   272a4:	bl	26c88 <floor@plt+0x158bc>
   272a8:	b	27228 <floor@plt+0x15e5c>
   272ac:	mov	r1, r9
   272b0:	mov	r0, #116	; 0x74
   272b4:	bl	26c88 <floor@plt+0x158bc>
   272b8:	b	27210 <floor@plt+0x15e44>
   272bc:	andeq	r2, r4, r0, asr r4
   272c0:	andeq	r0, r3, r8, lsl #14
   272c4:	ldr	ip, [pc, #340]	; 27420 <floor@plt+0x16054>
   272c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   272cc:	sub	sp, sp, #20
   272d0:	mvn	r5, r2
   272d4:	mov	r8, r2
   272d8:	ldr	r2, [ip]
   272dc:	cmp	r0, #0
   272e0:	mov	r6, r3
   272e4:	add	r9, sp, #60	; 0x3c
   272e8:	ldr	r3, [sp, #56]	; 0x38
   272ec:	lsr	r5, r5, #31
   272f0:	moveq	r5, #0
   272f4:	cmp	r2, #0
   272f8:	ldr	r4, [pc, #292]	; 27424 <floor@plt+0x16058>
   272fc:	str	r1, [sp, #12]
   27300:	mov	r7, r0
   27304:	str	r3, [sp, #8]
   27308:	ldm	r9, {r9, sl, fp}
   2730c:	beq	27398 <floor@plt+0x15fcc>
   27310:	ldr	r1, [pc, #272]	; 27428 <floor@plt+0x1605c>
   27314:	ldr	r0, [r4]
   27318:	bl	29278 <_ZdlPv@@Base+0xbc8>
   2731c:	cmp	r5, #0
   27320:	bne	273a0 <floor@plt+0x15fd4>
   27324:	ldr	r1, [r4]
   27328:	mov	r0, #32
   2732c:	bl	1124c <fputc@plt>
   27330:	cmp	r6, #0
   27334:	beq	273e4 <floor@plt+0x16018>
   27338:	cmp	r6, #2
   2733c:	bne	27360 <floor@plt+0x15f94>
   27340:	ldr	r3, [r4]
   27344:	mov	r2, #12
   27348:	mov	r1, #1
   2734c:	ldr	r0, [pc, #216]	; 2742c <floor@plt+0x16060>
   27350:	bl	11258 <fwrite@plt>
   27354:	ldr	r1, [r4]
   27358:	mov	r0, #32
   2735c:	bl	1124c <fputc@plt>
   27360:	mov	r3, fp
   27364:	mov	r2, sl
   27368:	mov	r1, r9
   2736c:	ldr	r0, [sp, #8]
   27370:	bl	2717c <floor@plt+0x15db0>
   27374:	ldr	r1, [r4]
   27378:	mov	r0, #10
   2737c:	bl	1124c <fputc@plt>
   27380:	ldr	r0, [r4]
   27384:	bl	1130c <fflush@plt>
   27388:	cmp	r6, #2
   2738c:	beq	273fc <floor@plt+0x16030>
   27390:	add	sp, sp, #20
   27394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27398:	cmp	r5, #0
   2739c:	beq	27330 <floor@plt+0x15f64>
   273a0:	ldr	r1, [pc, #136]	; 27430 <floor@plt+0x16064>
   273a4:	mov	r0, r7
   273a8:	bl	112d0 <strcmp@plt>
   273ac:	ldr	r3, [pc, #128]	; 27434 <floor@plt+0x16068>
   273b0:	ldr	r1, [r4]
   273b4:	cmp	r0, #0
   273b8:	moveq	r7, r3
   273bc:	ldr	r3, [sp, #12]
   273c0:	cmp	r3, #0
   273c4:	beq	27408 <floor@plt+0x1603c>
   273c8:	str	r8, [sp]
   273cc:	ldr	r3, [sp, #12]
   273d0:	mov	r2, r7
   273d4:	mov	r0, r1
   273d8:	ldr	r1, [pc, #88]	; 27438 <floor@plt+0x1606c>
   273dc:	bl	29278 <_ZdlPv@@Base+0xbc8>
   273e0:	b	27324 <floor@plt+0x15f58>
   273e4:	ldr	r3, [r4]
   273e8:	mov	r2, #8
   273ec:	mov	r1, #1
   273f0:	ldr	r0, [pc, #68]	; 2743c <floor@plt+0x16070>
   273f4:	bl	11258 <fwrite@plt>
   273f8:	b	27354 <floor@plt+0x15f88>
   273fc:	add	sp, sp, #20
   27400:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27404:	b	275b0 <floor@plt+0x161e4>
   27408:	mov	r3, r8
   2740c:	mov	r2, r7
   27410:	mov	r0, r1
   27414:	ldr	r1, [pc, #36]	; 27440 <floor@plt+0x16074>
   27418:	bl	29278 <_ZdlPv@@Base+0xbc8>
   2741c:	b	27324 <floor@plt+0x15f58>
   27420:	andeq	r5, r4, r0, lsr r5
   27424:	andeq	r2, r4, r0, asr r4
   27428:	andeq	r0, r3, r0, asr #14
   2742c:	andeq	r0, r3, r8, asr r7
   27430:	andeq	lr, r2, r0, asr #24
   27434:	andeq	r0, r3, ip, lsr #14
   27438:	andeq	r0, r3, r4, asr #14
   2743c:	andeq	r0, r3, r8, ror #14
   27440:	andeq	r0, r3, r0, asr r7
   27444:	push	{r4, lr}
   27448:	sub	sp, sp, #16
   2744c:	ldr	lr, [pc, #40]	; 2747c <floor@plt+0x160b0>
   27450:	ldr	ip, [pc, #40]	; 27480 <floor@plt+0x160b4>
   27454:	ldr	r4, [pc, #40]	; 27484 <floor@plt+0x160b8>
   27458:	strd	r2, [sp, #8]
   2745c:	strd	r0, [sp]
   27460:	ldr	r2, [r4]
   27464:	ldr	r1, [lr]
   27468:	ldr	r0, [ip]
   2746c:	mov	r3, #1
   27470:	bl	272c4 <floor@plt+0x15ef8>
   27474:	add	sp, sp, #16
   27478:	pop	{r4, pc}
   2747c:	andeq	r5, r4, r8, asr #9
   27480:	andeq	r5, r4, ip, asr #9
   27484:	andeq	r5, r4, ip, lsr #10
   27488:	push	{r4, lr}
   2748c:	sub	sp, sp, #16
   27490:	ldr	lr, [pc, #40]	; 274c0 <floor@plt+0x160f4>
   27494:	ldr	ip, [pc, #40]	; 274c4 <floor@plt+0x160f8>
   27498:	ldr	r4, [pc, #40]	; 274c8 <floor@plt+0x160fc>
   2749c:	strd	r2, [sp, #8]
   274a0:	strd	r0, [sp]
   274a4:	ldr	r2, [r4]
   274a8:	ldr	r1, [lr]
   274ac:	ldr	r0, [ip]
   274b0:	mov	r3, #0
   274b4:	bl	272c4 <floor@plt+0x15ef8>
   274b8:	add	sp, sp, #16
   274bc:	pop	{r4, pc}
   274c0:	andeq	r5, r4, r8, asr #9
   274c4:	andeq	r5, r4, ip, asr #9
   274c8:	andeq	r5, r4, ip, lsr #10
   274cc:	push	{r4, lr}
   274d0:	sub	sp, sp, #16
   274d4:	ldr	lr, [pc, #40]	; 27504 <floor@plt+0x16138>
   274d8:	ldr	ip, [pc, #40]	; 27508 <floor@plt+0x1613c>
   274dc:	ldr	r4, [pc, #40]	; 2750c <floor@plt+0x16140>
   274e0:	strd	r2, [sp, #8]
   274e4:	strd	r0, [sp]
   274e8:	ldr	r2, [r4]
   274ec:	ldr	r1, [lr]
   274f0:	ldr	r0, [ip]
   274f4:	mov	r3, #2
   274f8:	bl	272c4 <floor@plt+0x15ef8>
   274fc:	add	sp, sp, #16
   27500:	pop	{r4, pc}
   27504:	andeq	r5, r4, r8, asr #9
   27508:	andeq	r5, r4, ip, asr #9
   2750c:	andeq	r5, r4, ip, lsr #10
   27510:	push	{lr}		; (str lr, [sp, #-4]!)
   27514:	sub	sp, sp, #20
   27518:	ldr	lr, [sp, #24]
   2751c:	ldr	ip, [sp, #28]
   27520:	strd	r2, [sp]
   27524:	str	lr, [sp, #8]
   27528:	mov	r2, r1
   2752c:	str	ip, [sp, #12]
   27530:	mov	r3, #1
   27534:	mov	r1, #0
   27538:	bl	272c4 <floor@plt+0x15ef8>
   2753c:	add	sp, sp, #20
   27540:	pop	{pc}		; (ldr pc, [sp], #4)
   27544:	push	{lr}		; (str lr, [sp, #-4]!)
   27548:	sub	sp, sp, #20
   2754c:	ldr	lr, [sp, #24]
   27550:	ldr	ip, [sp, #28]
   27554:	str	r3, [sp, #4]
   27558:	mov	r3, #0
   2755c:	str	r2, [sp]
   27560:	str	lr, [sp, #8]
   27564:	mov	r2, r1
   27568:	str	ip, [sp, #12]
   2756c:	mov	r1, r3
   27570:	bl	272c4 <floor@plt+0x15ef8>
   27574:	add	sp, sp, #20
   27578:	pop	{pc}		; (ldr pc, [sp], #4)
   2757c:	push	{lr}		; (str lr, [sp, #-4]!)
   27580:	sub	sp, sp, #20
   27584:	ldr	lr, [sp, #24]
   27588:	ldr	ip, [sp, #28]
   2758c:	strd	r2, [sp]
   27590:	str	lr, [sp, #8]
   27594:	mov	r2, r1
   27598:	str	ip, [sp, #12]
   2759c:	mov	r3, #2
   275a0:	mov	r1, #0
   275a4:	bl	272c4 <floor@plt+0x15ef8>
   275a8:	add	sp, sp, #20
   275ac:	pop	{pc}		; (ldr pc, [sp], #4)
   275b0:	push	{r4, lr}
   275b4:	mov	r0, #3
   275b8:	bl	11108 <exit@plt>
   275bc:	ldr	ip, [r1, #36]	; 0x24
   275c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   275c4:	ldr	r7, [r1, #32]
   275c8:	ldr	r6, [r1]
   275cc:	add	r5, r0, ip, lsl #2
   275d0:	mov	r4, r7
   275d4:	mov	lr, r6
   275d8:	cmp	lr, ip
   275dc:	movle	r3, #0
   275e0:	movgt	r3, #1
   275e4:	cmp	r4, ip
   275e8:	movge	r3, #0
   275ec:	cmp	r3, #0
   275f0:	beq	2766c <floor@plt+0x162a0>
   275f4:	sub	fp, lr, ip
   275f8:	sub	r8, ip, r4
   275fc:	cmp	fp, r8
   27600:	ble	27638 <floor@plt+0x1626c>
   27604:	sub	lr, lr, r8
   27608:	add	r8, r8, lr
   2760c:	sub	r2, r4, #-1073741823	; 0xc0000001
   27610:	add	r8, r0, r8, lsl #2
   27614:	add	r3, r0, lr, lsl #2
   27618:	add	r2, r0, r2, lsl #2
   2761c:	ldr	r9, [r2, #4]!
   27620:	ldr	sl, [r3]
   27624:	str	sl, [r2]
   27628:	str	r9, [r3], #4
   2762c:	cmp	r8, r3
   27630:	bne	2761c <floor@plt+0x16250>
   27634:	b	275d8 <floor@plt+0x1620c>
   27638:	sub	r2, r4, #-1073741823	; 0xc0000001
   2763c:	add	sl, fp, ip
   27640:	add	r2, r0, r2, lsl #2
   27644:	add	sl, r0, sl, lsl #2
   27648:	mov	r3, r5
   2764c:	ldr	r8, [r2, #4]!
   27650:	ldr	r9, [r3]
   27654:	str	r9, [r2]
   27658:	str	r8, [r3], #4
   2765c:	cmp	r3, sl
   27660:	bne	2764c <floor@plt+0x16280>
   27664:	add	r4, r4, fp
   27668:	b	275d8 <floor@plt+0x1620c>
   2766c:	sub	ip, r6, ip
   27670:	add	r7, ip, r7
   27674:	str	r7, [r1, #32]
   27678:	str	r6, [r1, #36]	; 0x24
   2767c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27680:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27684:	sub	sp, sp, #60	; 0x3c
   27688:	mov	r9, r2
   2768c:	ldr	r4, [sp, #108]	; 0x6c
   27690:	ldrb	r2, [r2]
   27694:	str	r1, [sp, #8]
   27698:	ldr	r1, [r4, #4]
   2769c:	cmp	r2, #58	; 0x3a
   276a0:	movne	r2, r1
   276a4:	moveq	r2, #0
   276a8:	subs	r7, r0, #0
   276ac:	str	r2, [sp, #16]
   276b0:	str	r3, [sp, #12]
   276b4:	ble	27918 <floor@plt+0x1654c>
   276b8:	ldr	r3, [r4]
   276bc:	mov	r2, #0
   276c0:	cmp	r3, r2
   276c4:	str	r2, [r4, #12]
   276c8:	beq	277b4 <floor@plt+0x163e8>
   276cc:	ldr	r2, [r4, #16]
   276d0:	cmp	r2, #0
   276d4:	beq	277c0 <floor@plt+0x163f4>
   276d8:	ldr	r5, [r4, #20]
   276dc:	cmp	r5, #0
   276e0:	beq	27808 <floor@plt+0x1643c>
   276e4:	ldrb	r3, [r5]
   276e8:	cmp	r3, #0
   276ec:	beq	27808 <floor@plt+0x1643c>
   276f0:	ldr	r3, [sp, #12]
   276f4:	cmp	r3, #0
   276f8:	beq	27754 <floor@plt+0x16388>
   276fc:	ldr	r3, [r4]
   27700:	ldr	r2, [sp, #8]
   27704:	str	r3, [sp, #20]
   27708:	ldr	r2, [r2, r3, lsl #2]
   2770c:	lsl	r3, r3, #2
   27710:	str	r3, [sp, #48]	; 0x30
   27714:	ldrb	r1, [r2, #1]
   27718:	str	r2, [sp, #32]
   2771c:	mov	r3, r2
   27720:	cmp	r1, #45	; 0x2d
   27724:	str	r1, [sp, #28]
   27728:	beq	27b98 <floor@plt+0x167cc>
   2772c:	ldr	r2, [sp, #100]	; 0x64
   27730:	cmp	r2, #0
   27734:	beq	27754 <floor@plt+0x16388>
   27738:	ldrb	r3, [r3, #2]
   2773c:	cmp	r3, #0
   27740:	bne	27b98 <floor@plt+0x167cc>
   27744:	mov	r0, r9
   27748:	bl	113a8 <strchr@plt>
   2774c:	cmp	r0, #0
   27750:	beq	27b98 <floor@plt+0x167cc>
   27754:	add	r6, r5, #1
   27758:	str	r6, [r4, #20]
   2775c:	ldrb	r8, [r5]
   27760:	mov	r0, r9
   27764:	mov	r1, r8
   27768:	bl	113a8 <strchr@plt>
   2776c:	ldrb	r2, [r5, #1]
   27770:	mov	r3, r8
   27774:	cmp	r2, #0
   27778:	ldreq	r2, [r4]
   2777c:	addeq	r2, r2, #1
   27780:	streq	r2, [r4]
   27784:	cmp	r8, #58	; 0x3a
   27788:	cmpne	r0, #0
   2778c:	beq	27cf0 <floor@plt+0x16924>
   27790:	ldrb	r1, [r0]
   27794:	ldrb	r2, [r0, #1]
   27798:	cmp	r1, #87	; 0x57
   2779c:	beq	279c8 <floor@plt+0x165fc>
   277a0:	cmp	r2, #58	; 0x3a
   277a4:	beq	27b54 <floor@plt+0x16788>
   277a8:	mov	r0, r3
   277ac:	add	sp, sp, #60	; 0x3c
   277b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   277b4:	mov	r2, #1
   277b8:	mov	r3, r2
   277bc:	str	r2, [r4]
   277c0:	ldr	r2, [sp, #104]	; 0x68
   277c4:	str	r3, [r4, #36]	; 0x24
   277c8:	cmp	r2, #0
   277cc:	mov	r2, #0
   277d0:	str	r3, [r4, #32]
   277d4:	str	r2, [r4, #20]
   277d8:	beq	278c4 <floor@plt+0x164f8>
   277dc:	mov	r3, #1
   277e0:	str	r3, [r4, #28]
   277e4:	ldrb	r1, [r9]
   277e8:	cmp	r1, #45	; 0x2d
   277ec:	beq	27cb0 <floor@plt+0x168e4>
   277f0:	cmp	r1, #43	; 0x2b
   277f4:	strne	r2, [r4, #24]
   277f8:	strne	r3, [r4, #16]
   277fc:	addeq	r9, r9, #1
   27800:	streq	r2, [r4, #24]
   27804:	streq	r3, [r4, #16]
   27808:	ldr	r6, [r4]
   2780c:	ldr	r3, [r4, #36]	; 0x24
   27810:	cmp	r3, r6
   27814:	ldr	r3, [r4, #32]
   27818:	strgt	r6, [r4, #36]	; 0x24
   2781c:	cmp	r6, r3
   27820:	ldr	r3, [r4, #24]
   27824:	strlt	r6, [r4, #32]
   27828:	cmp	r3, #1
   2782c:	beq	27920 <floor@plt+0x16554>
   27830:	cmp	r7, r6
   27834:	beq	27908 <floor@plt+0x1653c>
   27838:	ldr	r8, [sp, #8]
   2783c:	ldr	r1, [pc, #2528]	; 28224 <floor@plt+0x16e58>
   27840:	ldr	r5, [r8, r6, lsl #2]
   27844:	mov	r0, r5
   27848:	bl	112d0 <strcmp@plt>
   2784c:	cmp	r0, #0
   27850:	bne	27890 <floor@plt+0x164c4>
   27854:	ldr	r3, [r4, #32]
   27858:	ldr	r2, [r4, #36]	; 0x24
   2785c:	add	r6, r6, #1
   27860:	cmp	r3, r2
   27864:	str	r6, [r4]
   27868:	beq	27d74 <floor@plt+0x169a8>
   2786c:	cmp	r6, r2
   27870:	beq	27884 <floor@plt+0x164b8>
   27874:	mov	r0, r8
   27878:	mov	r1, r4
   2787c:	bl	275bc <floor@plt+0x161f0>
   27880:	ldr	r3, [r4, #32]
   27884:	str	r7, [r4, #36]	; 0x24
   27888:	str	r7, [r4]
   2788c:	b	27910 <floor@plt+0x16544>
   27890:	ldrb	r3, [r5]
   27894:	cmp	r3, #45	; 0x2d
   27898:	beq	27994 <floor@plt+0x165c8>
   2789c:	ldr	r3, [r4, #24]
   278a0:	cmp	r3, #0
   278a4:	beq	27918 <floor@plt+0x1654c>
   278a8:	add	r6, r6, #1
   278ac:	mov	r3, #1
   278b0:	mov	r0, r3
   278b4:	str	r6, [r4]
   278b8:	str	r5, [r4, #12]
   278bc:	add	sp, sp, #60	; 0x3c
   278c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   278c4:	ldr	r0, [pc, #2396]	; 28228 <floor@plt+0x16e5c>
   278c8:	bl	11360 <getenv@plt>
   278cc:	cmp	r0, #0
   278d0:	beq	27b1c <floor@plt+0x16750>
   278d4:	mov	r3, #1
   278d8:	str	r3, [r4, #28]
   278dc:	ldrb	r3, [r9]
   278e0:	ldr	r5, [r4, #20]
   278e4:	cmp	r3, #45	; 0x2d
   278e8:	beq	27b88 <floor@plt+0x167bc>
   278ec:	cmp	r3, #43	; 0x2b
   278f0:	ldrne	r3, [sp, #104]	; 0x68
   278f4:	strne	r3, [r4, #24]
   278f8:	beq	27b44 <floor@plt+0x16778>
   278fc:	mov	r3, #1
   27900:	str	r3, [r4, #16]
   27904:	b	276dc <floor@plt+0x16310>
   27908:	ldr	r7, [r4, #36]	; 0x24
   2790c:	ldr	r3, [r4, #32]
   27910:	cmp	r7, r3
   27914:	strne	r3, [r4]
   27918:	mvn	r3, #0
   2791c:	b	277a8 <floor@plt+0x163dc>
   27920:	ldrd	r2, [r4, #32]
   27924:	cmp	r2, r3
   27928:	beq	27b0c <floor@plt+0x16740>
   2792c:	cmp	r6, r3
   27930:	beq	27944 <floor@plt+0x16578>
   27934:	mov	r1, r4
   27938:	ldr	r0, [sp, #8]
   2793c:	bl	275bc <floor@plt+0x161f0>
   27940:	ldr	r3, [r4]
   27944:	cmp	r7, r3
   27948:	ble	27cc4 <floor@plt+0x168f8>
   2794c:	sub	r1, r3, #-1073741823	; 0xc0000001
   27950:	ldr	r2, [sp, #8]
   27954:	add	r1, r2, r1, lsl #2
   27958:	b	2796c <floor@plt+0x165a0>
   2795c:	add	r3, r3, #1
   27960:	cmp	r3, r7
   27964:	str	r3, [r4]
   27968:	beq	27cc4 <floor@plt+0x168f8>
   2796c:	ldr	r2, [r1, #4]!
   27970:	ldrb	r0, [r2]
   27974:	cmp	r0, #45	; 0x2d
   27978:	bne	2795c <floor@plt+0x16590>
   2797c:	ldrb	r2, [r2, #1]
   27980:	cmp	r2, #0
   27984:	beq	2795c <floor@plt+0x16590>
   27988:	ldr	r6, [r4]
   2798c:	str	r3, [r4, #36]	; 0x24
   27990:	b	27830 <floor@plt+0x16464>
   27994:	ldrb	r3, [r5, #1]
   27998:	cmp	r3, #0
   2799c:	beq	2789c <floor@plt+0x164d0>
   279a0:	sub	r0, r3, #45	; 0x2d
   279a4:	ldr	r3, [sp, #12]
   279a8:	clz	r0, r0
   279ac:	cmp	r3, #0
   279b0:	lsr	r0, r0, #5
   279b4:	moveq	r0, #0
   279b8:	add	r0, r0, #1
   279bc:	add	r5, r5, r0
   279c0:	str	r5, [r4, #20]
   279c4:	b	276f0 <floor@plt+0x16324>
   279c8:	cmp	r2, #59	; 0x3b
   279cc:	bne	277a0 <floor@plt+0x163d4>
   279d0:	ldrb	r2, [r5, #1]
   279d4:	ldr	r3, [r4]
   279d8:	cmp	r2, #0
   279dc:	beq	27ee8 <floor@plt+0x16b1c>
   279e0:	add	r3, r3, #1
   279e4:	str	r3, [r4]
   279e8:	str	r6, [r4, #12]
   279ec:	str	r6, [r4, #20]
   279f0:	ldrb	r5, [r6]
   279f4:	cmp	r5, #0
   279f8:	cmpne	r5, #61	; 0x3d
   279fc:	beq	280e4 <floor@plt+0x16d18>
   27a00:	mov	r3, r6
   27a04:	ldrb	r5, [r3, #1]!
   27a08:	cmp	r5, #0
   27a0c:	cmpne	r5, #61	; 0x3d
   27a10:	bne	27a04 <floor@plt+0x16638>
   27a14:	str	r3, [sp, #20]
   27a18:	ldr	sl, [sp, #12]
   27a1c:	ldr	r3, [sl]
   27a20:	cmp	r3, #0
   27a24:	beq	2810c <floor@plt+0x16d40>
   27a28:	ldr	r2, [sp, #20]
   27a2c:	mov	r8, #0
   27a30:	str	r5, [sp, #24]
   27a34:	str	r7, [sp, #28]
   27a38:	str	r4, [sp, #108]	; 0x6c
   27a3c:	sub	fp, r2, r6
   27a40:	mov	r5, r8
   27a44:	mov	r7, r8
   27a48:	mov	r4, r3
   27a4c:	str	r8, [sp, #12]
   27a50:	mov	r2, fp
   27a54:	mov	r1, r6
   27a58:	mov	r0, r4
   27a5c:	bl	110f0 <strncmp@plt>
   27a60:	cmp	r0, #0
   27a64:	mov	r0, r4
   27a68:	bne	27a88 <floor@plt+0x166bc>
   27a6c:	bl	11288 <strlen@plt>
   27a70:	cmp	r0, fp
   27a74:	beq	28030 <floor@plt+0x16c64>
   27a78:	cmp	r5, #0
   27a7c:	moveq	r5, sl
   27a80:	movne	r7, #1
   27a84:	streq	r8, [sp, #12]
   27a88:	ldr	r4, [sl, #16]!
   27a8c:	add	r8, r8, #1
   27a90:	cmp	r4, #0
   27a94:	bne	27a50 <floor@plt+0x16684>
   27a98:	mov	r3, r7
   27a9c:	cmp	r3, #0
   27aa0:	mov	r8, r5
   27aa4:	ldr	r7, [sp, #28]
   27aa8:	ldr	r5, [sp, #24]
   27aac:	ldr	r4, [sp, #108]	; 0x6c
   27ab0:	bne	28080 <floor@plt+0x16cb4>
   27ab4:	cmp	r8, #0
   27ab8:	beq	2810c <floor@plt+0x16d40>
   27abc:	cmp	r5, #0
   27ac0:	ldr	r3, [r8, #4]
   27ac4:	beq	27fe0 <floor@plt+0x16c14>
   27ac8:	cmp	r3, #0
   27acc:	beq	2812c <floor@plt+0x16d60>
   27ad0:	ldr	r3, [sp, #20]
   27ad4:	add	r3, r3, #1
   27ad8:	str	r3, [r4, #12]
   27adc:	mov	r0, r6
   27ae0:	bl	11288 <strlen@plt>
   27ae4:	ldr	r3, [sp, #96]	; 0x60
   27ae8:	cmp	r3, #0
   27aec:	ldrne	r2, [sp, #12]
   27af0:	add	r0, r6, r0
   27af4:	str	r0, [r4, #20]
   27af8:	strne	r2, [r3]
   27afc:	ldrd	r2, [r8, #8]
   27b00:	cmp	r2, #0
   27b04:	bne	27d68 <floor@plt+0x1699c>
   27b08:	b	277a8 <floor@plt+0x163dc>
   27b0c:	cmp	r6, r3
   27b10:	strne	r6, [r4, #32]
   27b14:	movne	r3, r6
   27b18:	b	27944 <floor@plt+0x16578>
   27b1c:	ldr	r3, [sp, #104]	; 0x68
   27b20:	ldr	r5, [r4, #20]
   27b24:	str	r3, [r4, #28]
   27b28:	ldrb	r3, [r9]
   27b2c:	cmp	r3, #45	; 0x2d
   27b30:	beq	27b88 <floor@plt+0x167bc>
   27b34:	cmp	r3, #43	; 0x2b
   27b38:	movne	r3, #1
   27b3c:	strne	r3, [r4, #24]
   27b40:	bne	278fc <floor@plt+0x16530>
   27b44:	mov	r3, #0
   27b48:	add	r9, r9, #1
   27b4c:	str	r3, [r4, #24]
   27b50:	b	278fc <floor@plt+0x16530>
   27b54:	ldrb	r1, [r0, #2]
   27b58:	ldrb	r2, [r5, #1]
   27b5c:	cmp	r1, #58	; 0x3a
   27b60:	beq	27e48 <floor@plt+0x16a7c>
   27b64:	cmp	r2, #0
   27b68:	ldr	r2, [r4]
   27b6c:	beq	27e9c <floor@plt+0x16ad0>
   27b70:	add	r2, r2, #1
   27b74:	str	r2, [r4]
   27b78:	str	r6, [r4, #12]
   27b7c:	mov	r2, #0
   27b80:	str	r2, [r4, #20]
   27b84:	b	277a8 <floor@plt+0x163dc>
   27b88:	mov	r3, #2
   27b8c:	add	r9, r9, #1
   27b90:	str	r3, [r4, #24]
   27b94:	b	278fc <floor@plt+0x16530>
   27b98:	ldrb	r3, [r5]
   27b9c:	mov	fp, r5
   27ba0:	cmp	r3, #0
   27ba4:	cmpne	r3, #61	; 0x3d
   27ba8:	str	r3, [sp, #52]	; 0x34
   27bac:	beq	27bc0 <floor@plt+0x167f4>
   27bb0:	ldrb	r3, [fp, #1]!
   27bb4:	cmp	r3, #0
   27bb8:	cmpne	r3, #61	; 0x3d
   27bbc:	bne	27bb0 <floor@plt+0x167e4>
   27bc0:	ldr	r3, [sp, #12]
   27bc4:	ldr	r6, [r3]
   27bc8:	cmp	r6, #0
   27bcc:	beq	27d94 <floor@plt+0x169c8>
   27bd0:	mov	sl, r3
   27bd4:	mov	r8, #0
   27bd8:	sub	r2, fp, r5
   27bdc:	mvn	r3, #0
   27be0:	str	r7, [sp, #40]	; 0x28
   27be4:	str	r9, [sp, #44]	; 0x2c
   27be8:	str	r4, [sp, #108]	; 0x6c
   27bec:	mov	r9, sl
   27bf0:	str	r3, [sp, #24]
   27bf4:	str	fp, [sp, #36]	; 0x24
   27bf8:	mov	r7, r2
   27bfc:	mov	sl, r8
   27c00:	mov	r4, r8
   27c04:	b	27c38 <floor@plt+0x1686c>
   27c08:	ldr	r3, [sp, #100]	; 0x64
   27c0c:	cmp	r3, #0
   27c10:	bne	27c24 <floor@plt+0x16858>
   27c14:	ldr	r1, [sl, #4]
   27c18:	ldr	r2, [r9, #4]
   27c1c:	cmp	r1, r2
   27c20:	beq	27ccc <floor@plt+0x16900>
   27c24:	mov	r4, #1
   27c28:	ldr	r6, [r9, #16]!
   27c2c:	add	r8, r8, #1
   27c30:	cmp	r6, #0
   27c34:	beq	27c80 <floor@plt+0x168b4>
   27c38:	mov	r2, r7
   27c3c:	mov	r1, r5
   27c40:	mov	r0, r6
   27c44:	bl	110f0 <strncmp@plt>
   27c48:	cmp	r0, #0
   27c4c:	bne	27c28 <floor@plt+0x1685c>
   27c50:	mov	r0, r6
   27c54:	bl	11288 <strlen@plt>
   27c58:	cmp	r0, r7
   27c5c:	beq	27d08 <floor@plt+0x1693c>
   27c60:	cmp	sl, #0
   27c64:	bne	27c08 <floor@plt+0x1683c>
   27c68:	mov	sl, r9
   27c6c:	ldr	r6, [r9, #16]!
   27c70:	str	r8, [sp, #24]
   27c74:	cmp	r6, #0
   27c78:	add	r8, r8, #1
   27c7c:	bne	27c38 <floor@plt+0x1686c>
   27c80:	mov	r3, r4
   27c84:	cmp	r3, #0
   27c88:	ldr	fp, [sp, #36]	; 0x24
   27c8c:	ldr	r7, [sp, #40]	; 0x28
   27c90:	ldr	r9, [sp, #44]	; 0x2c
   27c94:	ldr	r4, [sp, #108]	; 0x6c
   27c98:	bne	27e64 <floor@plt+0x16a98>
   27c9c:	cmp	sl, #0
   27ca0:	beq	27d94 <floor@plt+0x169c8>
   27ca4:	ldr	r8, [sp, #24]
   27ca8:	mov	r6, sl
   27cac:	b	27d1c <floor@plt+0x16950>
   27cb0:	mov	r2, #2
   27cb4:	add	r9, r9, #1
   27cb8:	str	r3, [r4, #16]
   27cbc:	str	r2, [r4, #24]
   27cc0:	b	27808 <floor@plt+0x1643c>
   27cc4:	mov	r6, r3
   27cc8:	b	2798c <floor@plt+0x165c0>
   27ccc:	ldr	r1, [sl, #8]
   27cd0:	ldr	r2, [r9, #8]
   27cd4:	cmp	r1, r2
   27cd8:	bne	27c24 <floor@plt+0x16858>
   27cdc:	ldr	r1, [sl, #12]
   27ce0:	ldr	r2, [r9, #12]
   27ce4:	cmp	r1, r2
   27ce8:	movne	r4, #1
   27cec:	b	27c28 <floor@plt+0x1685c>
   27cf0:	ldr	r3, [sp, #16]
   27cf4:	cmp	r3, #0
   27cf8:	bne	27e1c <floor@plt+0x16a50>
   27cfc:	str	r8, [r4, #8]
   27d00:	mov	r3, #63	; 0x3f
   27d04:	b	277a8 <floor@plt+0x163dc>
   27d08:	mov	r6, r9
   27d0c:	ldr	fp, [sp, #36]	; 0x24
   27d10:	ldr	r7, [sp, #40]	; 0x28
   27d14:	ldr	r9, [sp, #44]	; 0x2c
   27d18:	ldr	r4, [sp, #108]	; 0x6c
   27d1c:	ldr	r3, [sp, #20]
   27d20:	ldr	r2, [r6, #4]
   27d24:	add	r3, r3, #1
   27d28:	str	r3, [r4]
   27d2c:	ldrb	r1, [fp]
   27d30:	cmp	r1, #0
   27d34:	bne	27d80 <floor@plt+0x169b4>
   27d38:	cmp	r2, #1
   27d3c:	beq	27ebc <floor@plt+0x16af0>
   27d40:	mov	r0, r5
   27d44:	bl	11288 <strlen@plt>
   27d48:	ldr	r3, [sp, #96]	; 0x60
   27d4c:	cmp	r3, #0
   27d50:	add	r0, r5, r0
   27d54:	str	r0, [r4, #20]
   27d58:	strne	r8, [r3]
   27d5c:	ldrd	r2, [r6, #8]
   27d60:	cmp	r2, #0
   27d64:	beq	277a8 <floor@plt+0x163dc>
   27d68:	str	r3, [r2]
   27d6c:	mov	r3, #0
   27d70:	b	277a8 <floor@plt+0x163dc>
   27d74:	mov	r3, r6
   27d78:	str	r6, [r4, #32]
   27d7c:	b	27884 <floor@plt+0x164b8>
   27d80:	cmp	r2, #0
   27d84:	beq	27f34 <floor@plt+0x16b68>
   27d88:	add	r3, fp, #1
   27d8c:	str	r3, [r4, #12]
   27d90:	b	27d40 <floor@plt+0x16974>
   27d94:	ldr	r3, [sp, #100]	; 0x64
   27d98:	cmp	r3, #0
   27d9c:	beq	27fa0 <floor@plt+0x16bd4>
   27da0:	ldr	r3, [sp, #28]
   27da4:	cmp	r3, #45	; 0x2d
   27da8:	beq	280b0 <floor@plt+0x16ce4>
   27dac:	ldr	r1, [sp, #52]	; 0x34
   27db0:	mov	r0, r9
   27db4:	bl	113a8 <strchr@plt>
   27db8:	cmp	r0, #0
   27dbc:	bne	27754 <floor@plt+0x16388>
   27dc0:	ldr	r3, [sp, #16]
   27dc4:	cmp	r3, #0
   27dc8:	beq	27df8 <floor@plt+0x16a2c>
   27dcc:	ldr	r3, [sp, #32]
   27dd0:	ldr	r1, [pc, #1108]	; 2822c <floor@plt+0x16e60>
   27dd4:	ldr	r2, [sp, #8]
   27dd8:	ldrb	r3, [r3]
   27ddc:	str	r5, [sp]
   27de0:	ldr	r0, [r1]
   27de4:	ldr	r2, [r2]
   27de8:	ldr	r1, [pc, #1088]	; 28230 <floor@plt+0x16e64>
   27dec:	bl	29278 <_ZdlPv@@Base+0xbc8>
   27df0:	ldr	r3, [r4]
   27df4:	str	r3, [sp, #20]
   27df8:	ldr	r3, [sp, #20]
   27dfc:	ldr	r2, [pc, #1072]	; 28234 <floor@plt+0x16e68>
   27e00:	add	r1, r3, #1
   27e04:	mov	r3, #0
   27e08:	str	r3, [r4, #8]
   27e0c:	str	r1, [r4]
   27e10:	str	r2, [r4, #20]
   27e14:	mov	r3, #63	; 0x3f
   27e18:	b	277a8 <floor@plt+0x163dc>
   27e1c:	ldr	r1, [r4, #28]
   27e20:	ldr	r3, [pc, #1028]	; 2822c <floor@plt+0x16e60>
   27e24:	ldr	r2, [sp, #8]
   27e28:	cmp	r1, #0
   27e2c:	ldr	r0, [r3]
   27e30:	ldr	r2, [r2]
   27e34:	mov	r3, r8
   27e38:	ldrne	r1, [pc, #1016]	; 28238 <floor@plt+0x16e6c>
   27e3c:	ldreq	r1, [pc, #1016]	; 2823c <floor@plt+0x16e70>
   27e40:	bl	29278 <_ZdlPv@@Base+0xbc8>
   27e44:	b	27cfc <floor@plt+0x16930>
   27e48:	cmp	r2, #0
   27e4c:	strne	r6, [r4, #12]
   27e50:	ldrne	r2, [r4]
   27e54:	streq	r2, [r4, #12]
   27e58:	addne	r2, r2, #1
   27e5c:	strne	r2, [r4]
   27e60:	b	27b7c <floor@plt+0x167b0>
   27e64:	ldr	r3, [sp, #16]
   27e68:	cmp	r3, #0
   27e6c:	bne	27f08 <floor@plt+0x16b3c>
   27e70:	mov	r0, r5
   27e74:	bl	11288 <strlen@plt>
   27e78:	ldr	r3, [sp, #20]
   27e7c:	add	r2, r3, #1
   27e80:	mov	r3, #0
   27e84:	str	r3, [r4, #8]
   27e88:	str	r2, [r4]
   27e8c:	mov	r3, #63	; 0x3f
   27e90:	add	r0, r5, r0
   27e94:	str	r0, [r4, #20]
   27e98:	b	277a8 <floor@plt+0x163dc>
   27e9c:	cmp	r7, r2
   27ea0:	beq	2800c <floor@plt+0x16c40>
   27ea4:	ldr	r1, [sp, #8]
   27ea8:	ldr	r1, [r1, r2, lsl #2]
   27eac:	add	r2, r2, #1
   27eb0:	str	r1, [r4, #12]
   27eb4:	str	r2, [r4]
   27eb8:	b	27b7c <floor@plt+0x167b0>
   27ebc:	cmp	r3, r7
   27ec0:	bge	28048 <floor@plt+0x16c7c>
   27ec4:	ldr	r2, [sp, #48]	; 0x30
   27ec8:	ldr	r3, [sp, #8]
   27ecc:	add	r3, r3, r2
   27ed0:	ldr	r2, [sp, #20]
   27ed4:	ldr	r3, [r3, #4]
   27ed8:	add	r2, r2, #2
   27edc:	str	r2, [r4]
   27ee0:	str	r3, [r4, #12]
   27ee4:	b	27d40 <floor@plt+0x16974>
   27ee8:	cmp	r7, r3
   27eec:	beq	280c0 <floor@plt+0x16cf4>
   27ef0:	ldr	r2, [sp, #8]
   27ef4:	ldr	r6, [r2, r3, lsl #2]
   27ef8:	add	r3, r3, #1
   27efc:	str	r6, [r4, #12]
   27f00:	str	r3, [r4]
   27f04:	b	279ec <floor@plt+0x16620>
   27f08:	ldr	r1, [pc, #796]	; 2822c <floor@plt+0x16e60>
   27f0c:	ldr	r2, [sp, #8]
   27f10:	ldr	r3, [sp, #32]
   27f14:	ldr	r0, [r1]
   27f18:	ldr	r2, [r2]
   27f1c:	ldr	r1, [pc, #796]	; 28240 <floor@plt+0x16e74>
   27f20:	bl	29278 <_ZdlPv@@Base+0xbc8>
   27f24:	ldr	r3, [r4]
   27f28:	ldr	r5, [r4, #20]
   27f2c:	str	r3, [sp, #20]
   27f30:	b	27e70 <floor@plt+0x16aa4>
   27f34:	ldr	r3, [sp, #16]
   27f38:	cmp	r3, #0
   27f3c:	beq	27f80 <floor@plt+0x16bb4>
   27f40:	ldr	r2, [sp, #8]
   27f44:	ldr	r3, [sp, #20]
   27f48:	ldr	r1, [r2, r3, lsl #2]
   27f4c:	ldr	r3, [pc, #728]	; 2822c <floor@plt+0x16e60>
   27f50:	ldr	r2, [r2]
   27f54:	ldrb	ip, [r1, #1]
   27f58:	ldr	r0, [r3]
   27f5c:	ldr	r3, [r6]
   27f60:	cmp	ip, #45	; 0x2d
   27f64:	beq	2811c <floor@plt+0x16d50>
   27f68:	ldrb	r1, [r1]
   27f6c:	str	r3, [sp]
   27f70:	mov	r3, r1
   27f74:	ldr	r1, [pc, #712]	; 28244 <floor@plt+0x16e78>
   27f78:	bl	29278 <_ZdlPv@@Base+0xbc8>
   27f7c:	ldr	r5, [r4, #20]
   27f80:	mov	r0, r5
   27f84:	bl	11288 <strlen@plt>
   27f88:	ldr	r2, [r6, #12]
   27f8c:	mov	r3, #63	; 0x3f
   27f90:	str	r2, [r4, #8]
   27f94:	add	r0, r5, r0
   27f98:	str	r0, [r4, #20]
   27f9c:	b	277a8 <floor@plt+0x163dc>
   27fa0:	ldr	r3, [sp, #16]
   27fa4:	cmp	r3, #0
   27fa8:	beq	27df8 <floor@plt+0x16a2c>
   27fac:	ldr	r3, [sp, #28]
   27fb0:	cmp	r3, #45	; 0x2d
   27fb4:	bne	27dcc <floor@plt+0x16a00>
   27fb8:	ldr	r1, [pc, #620]	; 2822c <floor@plt+0x16e60>
   27fbc:	ldr	r2, [sp, #8]
   27fc0:	mov	r3, r5
   27fc4:	ldr	r0, [r1]
   27fc8:	ldr	r2, [r2]
   27fcc:	ldr	r1, [pc, #628]	; 28248 <floor@plt+0x16e7c>
   27fd0:	bl	29278 <_ZdlPv@@Base+0xbc8>
   27fd4:	ldr	r3, [r4]
   27fd8:	str	r3, [sp, #20]
   27fdc:	b	27df8 <floor@plt+0x16a2c>
   27fe0:	cmp	r3, #1
   27fe4:	bne	27adc <floor@plt+0x16710>
   27fe8:	ldr	r3, [r4]
   27fec:	cmp	r3, r7
   27ff0:	bge	281a0 <floor@plt+0x16dd4>
   27ff4:	ldr	r2, [sp, #8]
   27ff8:	ldr	r2, [r2, r3, lsl #2]
   27ffc:	add	r3, r3, #1
   28000:	str	r2, [r4, #12]
   28004:	str	r3, [r4]
   28008:	b	27adc <floor@plt+0x16710>
   2800c:	ldr	r3, [sp, #16]
   28010:	cmp	r3, #0
   28014:	bne	280ec <floor@plt+0x16d20>
   28018:	str	r8, [r4, #8]
   2801c:	ldrb	r3, [r9]
   28020:	cmp	r3, #58	; 0x3a
   28024:	moveq	r3, #58	; 0x3a
   28028:	movne	r3, #63	; 0x3f
   2802c:	b	27b7c <floor@plt+0x167b0>
   28030:	str	r8, [sp, #12]
   28034:	ldr	r5, [sp, #24]
   28038:	ldr	r7, [sp, #28]
   2803c:	ldr	r4, [sp, #108]	; 0x6c
   28040:	mov	r8, sl
   28044:	b	27abc <floor@plt+0x166f0>
   28048:	ldr	r3, [sp, #16]
   2804c:	cmp	r3, #0
   28050:	bne	28150 <floor@plt+0x16d84>
   28054:	mov	r0, r5
   28058:	bl	11288 <strlen@plt>
   2805c:	ldr	r3, [r6, #12]
   28060:	str	r3, [r4, #8]
   28064:	add	r0, r5, r0
   28068:	str	r0, [r4, #20]
   2806c:	ldrb	r3, [r9]
   28070:	cmp	r3, #58	; 0x3a
   28074:	moveq	r3, #58	; 0x3a
   28078:	bne	27d00 <floor@plt+0x16934>
   2807c:	b	277a8 <floor@plt+0x163dc>
   28080:	ldr	r3, [sp, #16]
   28084:	ldr	r5, [r4]
   28088:	cmp	r3, #0
   2808c:	bne	28178 <floor@plt+0x16dac>
   28090:	mov	r0, r6
   28094:	bl	11288 <strlen@plt>
   28098:	add	r5, r5, #1
   2809c:	str	r5, [r4]
   280a0:	mov	r3, #63	; 0x3f
   280a4:	add	r0, r6, r0
   280a8:	str	r0, [r4, #20]
   280ac:	b	277a8 <floor@plt+0x163dc>
   280b0:	ldr	r3, [sp, #16]
   280b4:	cmp	r3, #0
   280b8:	bne	27fb8 <floor@plt+0x16bec>
   280bc:	b	27df8 <floor@plt+0x16a2c>
   280c0:	ldr	r3, [sp, #16]
   280c4:	cmp	r3, #0
   280c8:	bne	281bc <floor@plt+0x16df0>
   280cc:	str	r8, [r4, #8]
   280d0:	ldrb	r3, [r9]
   280d4:	cmp	r3, #58	; 0x3a
   280d8:	moveq	r3, #58	; 0x3a
   280dc:	movne	r3, #63	; 0x3f
   280e0:	b	277a8 <floor@plt+0x163dc>
   280e4:	str	r6, [sp, #20]
   280e8:	b	27a18 <floor@plt+0x1664c>
   280ec:	ldr	r3, [sp, #8]
   280f0:	ldr	r1, [pc, #308]	; 2822c <floor@plt+0x16e60>
   280f4:	ldr	r2, [r3]
   280f8:	ldr	r0, [r1]
   280fc:	mov	r3, r8
   28100:	ldr	r1, [pc, #324]	; 2824c <floor@plt+0x16e80>
   28104:	bl	29278 <_ZdlPv@@Base+0xbc8>
   28108:	b	28018 <floor@plt+0x16c4c>
   2810c:	mov	r3, #0
   28110:	str	r3, [r4, #20]
   28114:	mov	r3, #87	; 0x57
   28118:	b	277a8 <floor@plt+0x163dc>
   2811c:	ldr	r1, [pc, #300]	; 28250 <floor@plt+0x16e84>
   28120:	bl	29278 <_ZdlPv@@Base+0xbc8>
   28124:	ldr	r5, [r4, #20]
   28128:	b	27f80 <floor@plt+0x16bb4>
   2812c:	ldr	r3, [sp, #16]
   28130:	cmp	r3, #0
   28134:	bne	281dc <floor@plt+0x16e10>
   28138:	mov	r0, r6
   2813c:	bl	11288 <strlen@plt>
   28140:	mov	r3, #63	; 0x3f
   28144:	add	r0, r6, r0
   28148:	str	r0, [r4, #20]
   2814c:	b	277a8 <floor@plt+0x163dc>
   28150:	ldr	r2, [sp, #8]
   28154:	ldr	r0, [sp, #20]
   28158:	ldr	r1, [pc, #204]	; 2822c <floor@plt+0x16e60>
   2815c:	ldr	r3, [r2, r0, lsl #2]
   28160:	ldr	r0, [r1]
   28164:	ldr	r2, [r2]
   28168:	ldr	r1, [pc, #228]	; 28254 <floor@plt+0x16e88>
   2816c:	bl	29278 <_ZdlPv@@Base+0xbc8>
   28170:	ldr	r5, [r4, #20]
   28174:	b	28054 <floor@plt+0x16c88>
   28178:	ldr	r2, [sp, #8]
   2817c:	ldr	r1, [pc, #168]	; 2822c <floor@plt+0x16e60>
   28180:	ldr	r3, [r2, r5, lsl #2]
   28184:	ldr	r0, [r1]
   28188:	ldr	r2, [r2]
   2818c:	ldr	r1, [pc, #196]	; 28258 <floor@plt+0x16e8c>
   28190:	bl	29278 <_ZdlPv@@Base+0xbc8>
   28194:	ldr	r6, [r4, #20]
   28198:	ldr	r5, [r4]
   2819c:	b	28090 <floor@plt+0x16cc4>
   281a0:	ldr	r2, [sp, #16]
   281a4:	cmp	r2, #0
   281a8:	bne	28200 <floor@plt+0x16e34>
   281ac:	ldr	r5, [r4, #20]
   281b0:	mov	r0, r5
   281b4:	bl	11288 <strlen@plt>
   281b8:	b	28064 <floor@plt+0x16c98>
   281bc:	ldr	r3, [sp, #8]
   281c0:	ldr	r1, [pc, #100]	; 2822c <floor@plt+0x16e60>
   281c4:	ldr	r2, [r3]
   281c8:	ldr	r0, [r1]
   281cc:	mov	r3, r8
   281d0:	ldr	r1, [pc, #116]	; 2824c <floor@plt+0x16e80>
   281d4:	bl	29278 <_ZdlPv@@Base+0xbc8>
   281d8:	b	280cc <floor@plt+0x16d00>
   281dc:	ldr	r1, [pc, #72]	; 2822c <floor@plt+0x16e60>
   281e0:	ldr	r2, [sp, #8]
   281e4:	ldr	r3, [r8]
   281e8:	ldr	r0, [r1]
   281ec:	ldr	r2, [r2]
   281f0:	ldr	r1, [pc, #100]	; 2825c <floor@plt+0x16e90>
   281f4:	bl	29278 <_ZdlPv@@Base+0xbc8>
   281f8:	ldr	r6, [r4, #20]
   281fc:	b	28138 <floor@plt+0x16d6c>
   28200:	ldr	r0, [sp, #8]
   28204:	ldr	r1, [pc, #32]	; 2822c <floor@plt+0x16e60>
   28208:	sub	r3, r3, #-1073741823	; 0xc0000001
   2820c:	ldr	r2, [r0]
   28210:	ldr	r3, [r0, r3, lsl #2]
   28214:	ldr	r0, [r1]
   28218:	ldr	r1, [pc, #52]	; 28254 <floor@plt+0x16e88>
   2821c:	bl	29278 <_ZdlPv@@Base+0xbc8>
   28220:	b	281ac <floor@plt+0x16de0>
   28224:	andeq	r0, r3, r4, lsl #15
   28228:	andeq	r0, r3, r4, ror r7
   2822c:	andeq	r2, r4, r0, asr r4
   28230:	andeq	r0, r3, r0, asr r8
   28234:	andeq	r0, r3, r8, asr r3
   28238:	andeq	r0, r3, r0, ror r8
   2823c:	andeq	r0, r3, ip, lsl #17
   28240:	andeq	r0, r3, r8, lsl #15
   28244:	ldrdeq	r0, [r3], -r8
   28248:	andeq	r0, r3, r0, lsr r8
   2824c:	andeq	r0, r3, r8, lsr #17
   28250:	andeq	r0, r3, r8, lsr #15
   28254:	andeq	r0, r3, r8, lsl #16
   28258:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   2825c:	strdeq	r0, [r3], -r4
   28260:	push	{r4, r5, r6, lr}
   28264:	sub	sp, sp, #16
   28268:	ldr	r5, [pc, #80]	; 282c0 <floor@plt+0x16ef4>
   2826c:	ldr	ip, [sp, #32]
   28270:	ldr	r6, [sp, #36]	; 0x24
   28274:	str	ip, [sp]
   28278:	ldr	ip, [sp, #40]	; 0x28
   2827c:	ldr	r4, [pc, #64]	; 282c4 <floor@plt+0x16ef8>
   28280:	ldr	lr, [r5]
   28284:	stmib	sp, {r6, ip}
   28288:	ldr	ip, [r5, #4]
   2828c:	str	r4, [sp, #12]
   28290:	str	ip, [r4, #4]
   28294:	str	lr, [r4]
   28298:	bl	27680 <floor@plt+0x162b4>
   2829c:	ldr	r3, [pc, #36]	; 282c8 <floor@plt+0x16efc>
   282a0:	ldr	ip, [r4]
   282a4:	ldr	r1, [r4, #8]
   282a8:	ldr	r2, [r4, #12]
   282ac:	str	ip, [r5]
   282b0:	str	r1, [r5, #8]
   282b4:	str	r2, [r3]
   282b8:	add	sp, sp, #16
   282bc:	pop	{r4, r5, r6, pc}
   282c0:	andeq	r2, r4, r0, lsr r3
   282c4:	ldrdeq	r5, [r4], -r0
   282c8:	andeq	r5, r4, r0, asr #10
   282cc:	push	{lr}		; (str lr, [sp, #-4]!)
   282d0:	mov	r3, #0
   282d4:	sub	sp, sp, #20
   282d8:	mov	ip, #1
   282dc:	str	r3, [sp]
   282e0:	stmib	sp, {r3, ip}
   282e4:	bl	28260 <floor@plt+0x16e94>
   282e8:	add	sp, sp, #20
   282ec:	pop	{pc}		; (ldr pc, [sp], #4)
   282f0:	push	{lr}		; (str lr, [sp, #-4]!)
   282f4:	sub	sp, sp, #20
   282f8:	mov	ip, #0
   282fc:	ldr	lr, [sp, #24]
   28300:	str	ip, [sp, #8]
   28304:	str	lr, [sp]
   28308:	str	ip, [sp, #4]
   2830c:	bl	28260 <floor@plt+0x16e94>
   28310:	add	sp, sp, #20
   28314:	pop	{pc}		; (ldr pc, [sp], #4)
   28318:	push	{lr}		; (str lr, [sp, #-4]!)
   2831c:	sub	sp, sp, #20
   28320:	ldr	ip, [sp, #24]
   28324:	ldr	lr, [sp, #28]
   28328:	str	ip, [sp]
   2832c:	mov	ip, #0
   28330:	str	lr, [sp, #12]
   28334:	str	ip, [sp, #8]
   28338:	str	ip, [sp, #4]
   2833c:	bl	27680 <floor@plt+0x162b4>
   28340:	add	sp, sp, #20
   28344:	pop	{pc}		; (ldr pc, [sp], #4)
   28348:	push	{lr}		; (str lr, [sp, #-4]!)
   2834c:	sub	sp, sp, #20
   28350:	mov	lr, #0
   28354:	ldr	ip, [sp, #24]
   28358:	str	ip, [sp]
   2835c:	mov	ip, #1
   28360:	stmib	sp, {ip, lr}
   28364:	bl	28260 <floor@plt+0x16e94>
   28368:	add	sp, sp, #20
   2836c:	pop	{pc}		; (ldr pc, [sp], #4)
   28370:	push	{lr}		; (str lr, [sp, #-4]!)
   28374:	sub	sp, sp, #20
   28378:	ldr	lr, [sp, #24]
   2837c:	ldr	ip, [sp, #28]
   28380:	str	lr, [sp]
   28384:	str	ip, [sp, #12]
   28388:	mov	lr, #0
   2838c:	mov	ip, #1
   28390:	stmib	sp, {ip, lr}
   28394:	bl	27680 <floor@plt+0x162b4>
   28398:	add	sp, sp, #20
   2839c:	pop	{pc}		; (ldr pc, [sp], #4)
   283a0:	b	113b4 <hypot@plt>
   283a4:	subs	r2, r0, #0
   283a8:	bge	283f8 <floor@plt+0x1702c>
   283ac:	push	{lr}		; (str lr, [sp, #-4]!)
   283b0:	ldr	r1, [pc, #108]	; 28424 <floor@plt+0x17058>
   283b4:	ldr	lr, [pc, #108]	; 28428 <floor@plt+0x1705c>
   283b8:	b	283c0 <floor@plt+0x16ff4>
   283bc:	mov	r1, ip
   283c0:	smull	r3, r0, lr, r2
   283c4:	asr	r3, r2, #31
   283c8:	rsb	r3, r3, r0, asr #2
   283cc:	sub	ip, r1, #1
   283d0:	add	r0, r3, r3, lsl #2
   283d4:	sub	r0, r2, r0, lsl #1
   283d8:	rsb	r0, r0, #48	; 0x30
   283dc:	subs	r2, r3, #0
   283e0:	strb	r0, [r1, #-1]
   283e4:	bne	283bc <floor@plt+0x16ff0>
   283e8:	mov	r3, #45	; 0x2d
   283ec:	sub	r0, r1, #2
   283f0:	strb	r3, [ip, #-1]
   283f4:	pop	{pc}		; (ldr pc, [sp], #4)
   283f8:	ldr	r0, [pc, #36]	; 28424 <floor@plt+0x17058>
   283fc:	ldr	ip, [pc, #40]	; 2842c <floor@plt+0x17060>
   28400:	umull	r1, r3, ip, r2
   28404:	lsr	r3, r3, #3
   28408:	add	r1, r3, r3, lsl #2
   2840c:	sub	r1, r2, r1, lsl #1
   28410:	add	r1, r1, #48	; 0x30
   28414:	subs	r2, r3, #0
   28418:	strb	r1, [r0, #-1]!
   2841c:	bne	28400 <floor@plt+0x17034>
   28420:	bx	lr
   28424:	andeq	r5, r4, ip, lsl #10
   28428:	strbtvs	r6, [r6], -r7, ror #12
   2842c:	stclgt	12, cr12, [ip], {205}	; 0xcd
   28430:	mov	r1, r0
   28434:	ldr	ip, [pc, #40]	; 28464 <floor@plt+0x17098>
   28438:	ldr	r0, [pc, #40]	; 28468 <floor@plt+0x1709c>
   2843c:	umull	r3, r2, ip, r1
   28440:	cmp	r1, #9
   28444:	lsr	r2, r2, #3
   28448:	add	r3, r2, r2, lsl #2
   2844c:	sub	r3, r1, r3, lsl #1
   28450:	add	r3, r3, #48	; 0x30
   28454:	mov	r1, r2
   28458:	strb	r3, [r0, #-1]!
   2845c:	bhi	2843c <floor@plt+0x17070>
   28460:	bx	lr
   28464:	stclgt	12, cr12, [ip], {205}	; 0xcd
   28468:	andeq	r5, r4, r4, lsr #10
   2846c:	push	{r4, r5, r6, lr}
   28470:	sub	sp, sp, #16
   28474:	ldr	r5, [pc, #440]	; 28634 <floor@plt+0x17268>
   28478:	ldrb	r3, [r0]
   2847c:	ldr	r2, [r5]
   28480:	cmp	r3, #32
   28484:	str	r2, [sp, #12]
   28488:	bne	28498 <floor@plt+0x170cc>
   2848c:	ldrb	r3, [r0, #1]!
   28490:	cmp	r3, #32
   28494:	beq	2848c <floor@plt+0x170c0>
   28498:	ldr	r1, [pc, #408]	; 28638 <floor@plt+0x1726c>
   2849c:	ldrb	r2, [r1, r3]
   284a0:	cmp	r2, #0
   284a4:	beq	285f8 <floor@plt+0x1722c>
   284a8:	ldrb	r3, [r0]
   284ac:	mov	r4, #0
   284b0:	sub	r2, r3, #48	; 0x30
   284b4:	ldrb	r3, [r0, #1]!
   284b8:	add	r4, r4, r4, lsl #2
   284bc:	add	r4, r2, r4, lsl #1
   284c0:	ldrb	r2, [r1, r3]
   284c4:	cmp	r2, #0
   284c8:	bne	284b0 <floor@plt+0x170e4>
   284cc:	and	r1, r3, #223	; 0xdf
   284d0:	cmp	r3, #10
   284d4:	cmpne	r1, #0
   284d8:	beq	284e4 <floor@plt+0x17118>
   284dc:	b	285f8 <floor@plt+0x1722c>
   284e0:	ldrb	r3, [r0, #1]!
   284e4:	cmp	r3, #32
   284e8:	beq	284e0 <floor@plt+0x17114>
   284ec:	sub	r2, r3, #10
   284f0:	cmp	r3, #0
   284f4:	clz	r2, r2
   284f8:	lsr	r2, r2, #5
   284fc:	movne	r3, r2
   28500:	moveq	r3, #1
   28504:	cmp	r3, #0
   28508:	bne	285d0 <floor@plt+0x17204>
   2850c:	ldrb	r1, [r0]
   28510:	cmp	r1, #92	; 0x5c
   28514:	cmpne	r1, #10
   28518:	moveq	r2, #1
   2851c:	movne	r2, #0
   28520:	tst	r1, #223	; 0xdf
   28524:	moveq	r2, #1
   28528:	cmp	r2, #0
   2852c:	bne	28618 <floor@plt+0x1724c>
   28530:	mov	r6, r0
   28534:	ldrb	r2, [r6, #1]!
   28538:	cmp	r2, #92	; 0x5c
   2853c:	cmpne	r2, #10
   28540:	moveq	r3, #1
   28544:	movne	r3, #0
   28548:	tst	r2, #223	; 0xdf
   2854c:	moveq	r3, #1
   28550:	cmp	r3, #0
   28554:	beq	28534 <floor@plt+0x17168>
   28558:	sub	r2, r6, r0
   2855c:	mov	r1, r0
   28560:	mov	r0, sp
   28564:	bl	28884 <_ZdlPv@@Base+0x1d4>
   28568:	ldrb	r3, [r6]
   2856c:	cmp	r3, #32
   28570:	bne	28580 <floor@plt+0x171b4>
   28574:	ldrb	r3, [r6, #1]!
   28578:	cmp	r3, #32
   2857c:	beq	28574 <floor@plt+0x171a8>
   28580:	cmp	r3, #0
   28584:	cmpne	r3, #10
   28588:	bne	28610 <floor@plt+0x17244>
   2858c:	ldr	r3, [sp, #4]
   28590:	ldr	r2, [sp, #8]
   28594:	cmp	r3, r2
   28598:	bge	28600 <floor@plt+0x17234>
   2859c:	ldr	r2, [sp]
   285a0:	add	r0, r3, #1
   285a4:	mov	r1, #0
   285a8:	str	r0, [sp, #4]
   285ac:	strb	r1, [r2, r3]
   285b0:	ldr	r0, [sp]
   285b4:	bl	2922c <_ZdlPv@@Base+0xb7c>
   285b8:	mov	r0, r4
   285bc:	bl	29268 <_ZdlPv@@Base+0xbb8>
   285c0:	mov	r4, #1
   285c4:	mov	r0, sp
   285c8:	bl	289cc <_ZdlPv@@Base+0x31c>
   285cc:	b	285dc <floor@plt+0x17210>
   285d0:	mov	r0, r4
   285d4:	bl	29268 <_ZdlPv@@Base+0xbb8>
   285d8:	mov	r4, #1
   285dc:	ldr	r2, [sp, #12]
   285e0:	ldr	r3, [r5]
   285e4:	mov	r0, r4
   285e8:	cmp	r2, r3
   285ec:	bne	28624 <floor@plt+0x17258>
   285f0:	add	sp, sp, #16
   285f4:	pop	{r4, r5, r6, pc}
   285f8:	mov	r4, r2
   285fc:	b	285dc <floor@plt+0x17210>
   28600:	mov	r0, sp
   28604:	bl	28b34 <_ZdlPv@@Base+0x484>
   28608:	ldr	r3, [sp, #4]
   2860c:	b	2859c <floor@plt+0x171d0>
   28610:	mov	r4, #0
   28614:	b	285c4 <floor@plt+0x171f8>
   28618:	mov	r2, r3
   2861c:	mov	r6, r0
   28620:	b	2855c <floor@plt+0x17190>
   28624:	bl	111e0 <__stack_chk_fail@plt>
   28628:	mov	r0, sp
   2862c:	bl	289cc <_ZdlPv@@Base+0x31c>
   28630:	bl	111ec <__cxa_end_cleanup@plt>
   28634:	andeq	r1, r4, r0, ror sp
   28638:			; <UNDEFINED> instruction: 0x00044db8
   2863c:	bx	lr
   28640:	push	{r4, lr}
   28644:	mov	r4, r0
   28648:	bl	11288 <strlen@plt>
   2864c:	mov	r1, r4
   28650:	pop	{r4, lr}
   28654:	mov	r2, r0
   28658:	mov	r0, #2
   2865c:	b	112ac <write@plt>

00028660 <_Znwj@@Base>:
   28660:	cmp	r0, #0
   28664:	moveq	r0, #1
   28668:	push	{r4, lr}
   2866c:	bl	1127c <malloc@plt>
   28670:	cmp	r0, #0
   28674:	popne	{r4, pc}
   28678:	ldr	r3, [pc, #36]	; 286a4 <_Znwj@@Base+0x44>
   2867c:	ldr	r0, [r3]
   28680:	cmp	r0, #0
   28684:	beq	28694 <_Znwj@@Base+0x34>
   28688:	bl	28640 <floor@plt+0x17274>
   2868c:	ldr	r0, [pc, #20]	; 286a8 <_Znwj@@Base+0x48>
   28690:	bl	28640 <floor@plt+0x17274>
   28694:	ldr	r0, [pc, #16]	; 286ac <_Znwj@@Base+0x4c>
   28698:	bl	28640 <floor@plt+0x17274>
   2869c:	mvn	r0, #0
   286a0:	bl	112c4 <_exit@plt>
   286a4:	andeq	r5, r4, r0, lsr r5
   286a8:	andeq	r0, r3, r4, lsr #18
   286ac:	andeq	r0, r3, r8, lsr #18

000286b0 <_ZdlPv@@Base>:
   286b0:	cmp	r0, #0
   286b4:	bxeq	lr
   286b8:	b	110e4 <free@plt>
   286bc:	cmp	r0, #0
   286c0:	bxeq	lr
   286c4:	b	110e4 <free@plt>
   286c8:	push	{r4, lr}
   286cc:	subs	r4, r0, #0
   286d0:	beq	286fc <_ZdlPv@@Base+0x4c>
   286d4:	sub	r2, r4, #1
   286d8:	mov	r0, #0
   286dc:	ldrb	r3, [r2, #1]!
   286e0:	cmp	r3, #0
   286e4:	popeq	{r4, pc}
   286e8:	add	r0, r3, r0, lsl #4
   286ec:	ands	r1, r0, #-268435456	; 0xf0000000
   286f0:	bic	r3, r0, #-268435456	; 0xf0000000
   286f4:	eorne	r0, r3, r1, lsr #24
   286f8:	b	286dc <_ZdlPv@@Base+0x2c>
   286fc:	ldr	r1, [pc, #8]	; 2870c <_ZdlPv@@Base+0x5c>
   28700:	mov	r0, #27
   28704:	bl	26c88 <floor@plt+0x158bc>
   28708:	b	286d4 <_ZdlPv@@Base+0x24>
   2870c:	muleq	r3, r0, r9
   28710:	cmp	r0, #100	; 0x64
   28714:	bls	28764 <_ZdlPv@@Base+0xb4>
   28718:	push	{r4, r5, r6, r7, r8, lr}
   2871c:	mov	r5, r0
   28720:	ldr	r0, [pc, #68]	; 2876c <_ZdlPv@@Base+0xbc>
   28724:	ldr	r4, [pc, #68]	; 28770 <_ZdlPv@@Base+0xc0>
   28728:	cmp	r5, r0
   2872c:	ldr	r7, [pc, #64]	; 28774 <_ZdlPv@@Base+0xc4>
   28730:	ldr	r6, [pc, #64]	; 28778 <_ZdlPv@@Base+0xc8>
   28734:	popcc	{r4, r5, r6, r7, r8, pc}
   28738:	cmp	r0, #0
   2873c:	bne	28754 <_ZdlPv@@Base+0xa4>
   28740:	ldr	r2, [pc, #44]	; 28774 <_ZdlPv@@Base+0xc4>
   28744:	mov	r3, r7
   28748:	mov	r1, r2
   2874c:	mov	r0, r6
   28750:	bl	274cc <floor@plt+0x16100>
   28754:	ldr	r0, [r4], #4
   28758:	cmp	r5, r0
   2875c:	bcs	28738 <_ZdlPv@@Base+0x88>
   28760:	pop	{r4, r5, r6, r7, r8, pc}
   28764:	mov	r0, #101	; 0x65
   28768:	bx	lr
   2876c:	strdeq	r0, [r0], -r7
   28770:	andeq	r0, r3, r0, asr #18
   28774:			; <UNDEFINED> instruction: 0x000454b8
   28778:			; <UNDEFINED> instruction: 0x000309b4
   2877c:	cmp	r1, r2
   28780:	push	{r4, r5, r6, lr}
   28784:	mov	r4, r0
   28788:	bge	287b8 <_ZdlPv@@Base+0x108>
   2878c:	cmp	r0, #0
   28790:	mov	r5, r3
   28794:	mov	r4, r2
   28798:	beq	287a0 <_ZdlPv@@Base+0xf0>
   2879c:	bl	1121c <_ZdaPv@plt>
   287a0:	cmp	r4, #0
   287a4:	beq	287c0 <_ZdlPv@@Base+0x110>
   287a8:	lsl	r0, r4, #1
   287ac:	str	r0, [r5]
   287b0:	pop	{r4, r5, r6, lr}
   287b4:	b	1115c <_Znaj@plt>
   287b8:	str	r1, [r3]
   287bc:	pop	{r4, r5, r6, pc}
   287c0:	str	r4, [r5]
   287c4:	mov	r0, r4
   287c8:	pop	{r4, r5, r6, pc}
   287cc:	cmp	r1, r3
   287d0:	push	{r4, r5, r6, r7, r8, lr}
   287d4:	mov	r5, r0
   287d8:	bge	28840 <_ZdlPv@@Base+0x190>
   287dc:	cmp	r3, #0
   287e0:	mov	r6, r2
   287e4:	mov	r4, r3
   287e8:	beq	2881c <_ZdlPv@@Base+0x16c>
   287ec:	lsl	r0, r3, #1
   287f0:	ldr	r3, [sp, #24]
   287f4:	str	r0, [r3]
   287f8:	bl	1115c <_Znaj@plt>
   287fc:	cmp	r6, #0
   28800:	cmpne	r4, r6
   28804:	mov	r7, r0
   28808:	bgt	28854 <_ZdlPv@@Base+0x1a4>
   2880c:	cmp	r5, #0
   28810:	bne	28860 <_ZdlPv@@Base+0x1b0>
   28814:	mov	r0, r7
   28818:	pop	{r4, r5, r6, r7, r8, pc}
   2881c:	cmp	r0, #0
   28820:	beq	28828 <_ZdlPv@@Base+0x178>
   28824:	bl	1121c <_ZdaPv@plt>
   28828:	ldr	r3, [sp, #24]
   2882c:	mov	ip, #0
   28830:	mov	r7, ip
   28834:	str	ip, [r3]
   28838:	mov	r0, r7
   2883c:	pop	{r4, r5, r6, r7, r8, pc}
   28840:	ldr	r3, [sp, #24]
   28844:	mov	r7, r0
   28848:	mov	r0, r7
   2884c:	str	r1, [r3]
   28850:	pop	{r4, r5, r6, r7, r8, pc}
   28854:	mov	r2, r6
   28858:	mov	r1, r5
   2885c:	bl	11270 <memcpy@plt>
   28860:	mov	r0, r5
   28864:	bl	1121c <_ZdaPv@plt>
   28868:	mov	r0, r7
   2886c:	pop	{r4, r5, r6, r7, r8, pc}
   28870:	mov	r2, #0
   28874:	str	r2, [r0]
   28878:	str	r2, [r0, #4]
   2887c:	str	r2, [r0, #8]
   28880:	bx	lr
   28884:	push	{r4, r5, r6, lr}
   28888:	subs	r5, r2, #0
   2888c:	mov	r4, r0
   28890:	str	r2, [r0, #4]
   28894:	mov	r6, r1
   28898:	blt	288cc <_ZdlPv@@Base+0x21c>
   2889c:	streq	r5, [r0, #8]
   288a0:	streq	r5, [r0]
   288a4:	beq	288c4 <_ZdlPv@@Base+0x214>
   288a8:	lsl	r0, r5, #1
   288ac:	str	r0, [r4, #8]
   288b0:	bl	1115c <_Znaj@plt>
   288b4:	mov	r2, r5
   288b8:	mov	r1, r6
   288bc:	str	r0, [r4]
   288c0:	bl	11270 <memcpy@plt>
   288c4:	mov	r0, r4
   288c8:	pop	{r4, r5, r6, pc}
   288cc:	ldr	r1, [pc, #8]	; 288dc <_ZdlPv@@Base+0x22c>
   288d0:	mov	r0, #87	; 0x57
   288d4:	bl	26c88 <floor@plt+0x158bc>
   288d8:	b	288a8 <_ZdlPv@@Base+0x1f8>
   288dc:	andeq	r0, r3, r8, asr #19
   288e0:	push	{r4, r5, r6, lr}
   288e4:	subs	r5, r1, #0
   288e8:	mov	r4, r0
   288ec:	streq	r5, [r0, #4]
   288f0:	streq	r5, [r0]
   288f4:	streq	r5, [r0, #8]
   288f8:	beq	2893c <_ZdlPv@@Base+0x28c>
   288fc:	mov	r0, r5
   28900:	bl	11288 <strlen@plt>
   28904:	cmp	r0, #0
   28908:	str	r0, [r4, #4]
   2890c:	streq	r0, [r4, #8]
   28910:	streq	r0, [r4]
   28914:	beq	2893c <_ZdlPv@@Base+0x28c>
   28918:	lsl	r0, r0, #1
   2891c:	str	r0, [r4, #8]
   28920:	bl	1115c <_Znaj@plt>
   28924:	ldr	r2, [r4, #4]
   28928:	cmp	r2, #0
   2892c:	str	r0, [r4]
   28930:	beq	2893c <_ZdlPv@@Base+0x28c>
   28934:	mov	r1, r5
   28938:	bl	11270 <memcpy@plt>
   2893c:	mov	r0, r4
   28940:	pop	{r4, r5, r6, pc}
   28944:	push	{r4, r5, r6, lr}
   28948:	mov	r4, r0
   2894c:	mov	r3, #1
   28950:	mov	r0, #2
   28954:	str	r3, [r4, #4]
   28958:	str	r0, [r4, #8]
   2895c:	mov	r5, r1
   28960:	bl	1115c <_Znaj@plt>
   28964:	str	r0, [r4]
   28968:	strb	r5, [r0]
   2896c:	mov	r0, r4
   28970:	pop	{r4, r5, r6, pc}
   28974:	push	{r4, r5, r6, lr}
   28978:	mov	r4, r0
   2897c:	ldr	r0, [r1, #4]
   28980:	cmp	r0, #0
   28984:	str	r0, [r4, #4]
   28988:	streq	r0, [r4, #8]
   2898c:	streq	r0, [r4]
   28990:	beq	289b4 <_ZdlPv@@Base+0x304>
   28994:	lsl	r0, r0, #1
   28998:	str	r0, [r4, #8]
   2899c:	mov	r5, r1
   289a0:	bl	1115c <_Znaj@plt>
   289a4:	ldr	r2, [r4, #4]
   289a8:	cmp	r2, #0
   289ac:	str	r0, [r4]
   289b0:	bne	289bc <_ZdlPv@@Base+0x30c>
   289b4:	mov	r0, r4
   289b8:	pop	{r4, r5, r6, pc}
   289bc:	ldr	r1, [r5]
   289c0:	bl	11270 <memcpy@plt>
   289c4:	mov	r0, r4
   289c8:	pop	{r4, r5, r6, pc}
   289cc:	push	{r4, lr}
   289d0:	mov	r4, r0
   289d4:	ldr	r0, [r0]
   289d8:	cmp	r0, #0
   289dc:	beq	289e4 <_ZdlPv@@Base+0x334>
   289e0:	bl	1121c <_ZdaPv@plt>
   289e4:	mov	r0, r4
   289e8:	pop	{r4, pc}
   289ec:	push	{r4, r5, r6, lr}
   289f0:	add	r3, r0, #8
   289f4:	ldr	r2, [r1, #4]
   289f8:	mov	r4, r0
   289fc:	mov	r5, r1
   28a00:	ldr	r1, [r0, #8]
   28a04:	ldr	r0, [r0]
   28a08:	bl	2877c <_ZdlPv@@Base+0xcc>
   28a0c:	ldr	r2, [r5, #4]
   28a10:	cmp	r2, #0
   28a14:	stm	r4, {r0, r2}
   28a18:	bne	28a24 <_ZdlPv@@Base+0x374>
   28a1c:	mov	r0, r4
   28a20:	pop	{r4, r5, r6, pc}
   28a24:	ldr	r1, [r5]
   28a28:	bl	11270 <memcpy@plt>
   28a2c:	mov	r0, r4
   28a30:	pop	{r4, r5, r6, pc}
   28a34:	push	{r4, r5, r6, r7, r8, lr}
   28a38:	subs	r7, r1, #0
   28a3c:	mov	r4, r0
   28a40:	ldr	r6, [r0]
   28a44:	beq	28a7c <_ZdlPv@@Base+0x3cc>
   28a48:	mov	r0, r7
   28a4c:	bl	11288 <strlen@plt>
   28a50:	add	r3, r4, #8
   28a54:	ldr	r1, [r4, #8]
   28a58:	mov	r5, r0
   28a5c:	mov	r2, r0
   28a60:	mov	r0, r6
   28a64:	bl	2877c <_ZdlPv@@Base+0xcc>
   28a68:	cmp	r5, #0
   28a6c:	stm	r4, {r0, r5}
   28a70:	bne	28aa4 <_ZdlPv@@Base+0x3f4>
   28a74:	mov	r0, r4
   28a78:	pop	{r4, r5, r6, r7, r8, pc}
   28a7c:	cmp	r6, #0
   28a80:	beq	28a8c <_ZdlPv@@Base+0x3dc>
   28a84:	mov	r0, r6
   28a88:	bl	1121c <_ZdaPv@plt>
   28a8c:	mov	r3, #0
   28a90:	str	r3, [r4, #4]
   28a94:	str	r3, [r4]
   28a98:	str	r3, [r4, #8]
   28a9c:	mov	r0, r4
   28aa0:	pop	{r4, r5, r6, r7, r8, pc}
   28aa4:	mov	r2, r5
   28aa8:	mov	r1, r7
   28aac:	bl	11270 <memcpy@plt>
   28ab0:	mov	r0, r4
   28ab4:	pop	{r4, r5, r6, r7, r8, pc}
   28ab8:	push	{r4, r5, r6, lr}
   28abc:	add	r3, r0, #8
   28ac0:	mov	r4, r0
   28ac4:	mov	r5, r1
   28ac8:	mov	r2, #1
   28acc:	ldr	r1, [r0, #8]
   28ad0:	ldr	r0, [r0]
   28ad4:	bl	2877c <_ZdlPv@@Base+0xcc>
   28ad8:	mov	r2, #1
   28adc:	str	r2, [r4, #4]
   28ae0:	mov	r3, r0
   28ae4:	str	r0, [r4]
   28ae8:	mov	r0, r4
   28aec:	strb	r5, [r3]
   28af0:	pop	{r4, r5, r6, pc}
   28af4:	push	{r4, r5, r6, lr}
   28af8:	mov	r5, r0
   28afc:	ldr	r0, [r0]
   28b00:	mov	r4, r1
   28b04:	cmp	r0, #0
   28b08:	beq	28b10 <_ZdlPv@@Base+0x460>
   28b0c:	bl	1121c <_ZdaPv@plt>
   28b10:	ldrd	r0, [r4]
   28b14:	ldr	r2, [r4, #8]
   28b18:	mov	r3, #0
   28b1c:	strd	r0, [r5]
   28b20:	str	r2, [r5, #8]
   28b24:	str	r3, [r4]
   28b28:	str	r3, [r4, #4]
   28b2c:	str	r3, [r4, #8]
   28b30:	pop	{r4, r5, r6, pc}
   28b34:	mov	r1, r0
   28b38:	push	{r4, lr}
   28b3c:	mov	r4, r0
   28b40:	sub	sp, sp, #8
   28b44:	ldr	r2, [r0, #4]
   28b48:	ldr	r0, [r1], #8
   28b4c:	add	r3, r2, #1
   28b50:	str	r1, [sp]
   28b54:	ldr	r1, [r4, #8]
   28b58:	bl	287cc <_ZdlPv@@Base+0x11c>
   28b5c:	str	r0, [r4]
   28b60:	add	sp, sp, #8
   28b64:	pop	{r4, pc}
   28b68:	push	{r4, r5, r6, r7, lr}
   28b6c:	subs	r5, r1, #0
   28b70:	sub	sp, sp, #12
   28b74:	mov	r4, r0
   28b78:	beq	28bb4 <_ZdlPv@@Base+0x504>
   28b7c:	mov	r0, r5
   28b80:	bl	11288 <strlen@plt>
   28b84:	ldr	r3, [r4, #4]
   28b88:	ldr	r1, [r4, #8]
   28b8c:	add	r6, r0, r3
   28b90:	cmp	r1, r6
   28b94:	mov	r7, r0
   28b98:	ldr	r0, [r4]
   28b9c:	blt	28bc0 <_ZdlPv@@Base+0x510>
   28ba0:	mov	r2, r7
   28ba4:	mov	r1, r5
   28ba8:	add	r0, r0, r3
   28bac:	bl	11270 <memcpy@plt>
   28bb0:	str	r6, [r4, #4]
   28bb4:	mov	r0, r4
   28bb8:	add	sp, sp, #12
   28bbc:	pop	{r4, r5, r6, r7, pc}
   28bc0:	add	ip, r4, #8
   28bc4:	mov	r2, r3
   28bc8:	str	ip, [sp]
   28bcc:	mov	r3, r6
   28bd0:	bl	287cc <_ZdlPv@@Base+0x11c>
   28bd4:	ldr	r3, [r4, #4]
   28bd8:	str	r0, [r4]
   28bdc:	b	28ba0 <_ZdlPv@@Base+0x4f0>
   28be0:	ldr	r2, [r1, #4]
   28be4:	push	{r4, r5, r6, lr}
   28be8:	cmp	r2, #0
   28bec:	sub	sp, sp, #8
   28bf0:	mov	r4, r0
   28bf4:	beq	28c24 <_ZdlPv@@Base+0x574>
   28bf8:	ldr	r3, [r0, #4]
   28bfc:	mov	r5, r1
   28c00:	ldr	r1, [r0, #8]
   28c04:	add	r6, r2, r3
   28c08:	cmp	r1, r6
   28c0c:	ldr	r0, [r0]
   28c10:	blt	28c30 <_ZdlPv@@Base+0x580>
   28c14:	ldr	r1, [r5]
   28c18:	add	r0, r0, r3
   28c1c:	bl	11270 <memcpy@plt>
   28c20:	str	r6, [r4, #4]
   28c24:	mov	r0, r4
   28c28:	add	sp, sp, #8
   28c2c:	pop	{r4, r5, r6, pc}
   28c30:	add	ip, r4, #8
   28c34:	mov	r2, r3
   28c38:	str	ip, [sp]
   28c3c:	mov	r3, r6
   28c40:	bl	287cc <_ZdlPv@@Base+0x11c>
   28c44:	ldr	r3, [r4, #4]
   28c48:	ldr	r2, [r5, #4]
   28c4c:	str	r0, [r4]
   28c50:	add	r0, r0, r3
   28c54:	ldr	r1, [r5]
   28c58:	bl	11270 <memcpy@plt>
   28c5c:	str	r6, [r4, #4]
   28c60:	b	28c24 <_ZdlPv@@Base+0x574>
   28c64:	push	{r4, r5, r6, r7, lr}
   28c68:	subs	r5, r2, #0
   28c6c:	sub	sp, sp, #12
   28c70:	ble	28ca8 <_ZdlPv@@Base+0x5f8>
   28c74:	ldr	r3, [r0, #4]
   28c78:	mov	r7, r1
   28c7c:	ldr	r1, [r0, #8]
   28c80:	add	r6, r3, r5
   28c84:	cmp	r1, r6
   28c88:	mov	r4, r0
   28c8c:	ldr	r0, [r0]
   28c90:	blt	28cb0 <_ZdlPv@@Base+0x600>
   28c94:	mov	r2, r5
   28c98:	mov	r1, r7
   28c9c:	add	r0, r0, r3
   28ca0:	bl	11270 <memcpy@plt>
   28ca4:	str	r6, [r4, #4]
   28ca8:	add	sp, sp, #12
   28cac:	pop	{r4, r5, r6, r7, pc}
   28cb0:	add	ip, r4, #8
   28cb4:	mov	r2, r3
   28cb8:	str	ip, [sp]
   28cbc:	mov	r3, r6
   28cc0:	bl	287cc <_ZdlPv@@Base+0x11c>
   28cc4:	ldr	r3, [r4, #4]
   28cc8:	str	r0, [r4]
   28ccc:	b	28c94 <_ZdlPv@@Base+0x5e4>
   28cd0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   28cd4:	mov	r5, r2
   28cd8:	ldr	r6, [sp, #32]
   28cdc:	mov	r4, r0
   28ce0:	cmp	r2, #0
   28ce4:	cmpge	r6, #0
   28ce8:	mov	r8, r1
   28cec:	mov	r7, r3
   28cf0:	blt	28d14 <_ZdlPv@@Base+0x664>
   28cf4:	add	r0, r5, r6
   28cf8:	cmp	r0, #0
   28cfc:	str	r0, [r4, #4]
   28d00:	bne	28d30 <_ZdlPv@@Base+0x680>
   28d04:	str	r0, [r4, #8]
   28d08:	str	r0, [r4]
   28d0c:	mov	r0, r4
   28d10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   28d14:	mov	r0, #215	; 0xd7
   28d18:	ldr	r1, [pc, #104]	; 28d88 <_ZdlPv@@Base+0x6d8>
   28d1c:	bl	26c88 <floor@plt+0x158bc>
   28d20:	add	r0, r5, r6
   28d24:	cmp	r0, #0
   28d28:	str	r0, [r4, #4]
   28d2c:	beq	28d04 <_ZdlPv@@Base+0x654>
   28d30:	lsl	r0, r0, #1
   28d34:	str	r0, [r4, #8]
   28d38:	bl	1115c <_Znaj@plt>
   28d3c:	cmp	r5, #0
   28d40:	mov	r9, r0
   28d44:	str	r0, [r4]
   28d48:	beq	28d74 <_ZdlPv@@Base+0x6c4>
   28d4c:	mov	r1, r8
   28d50:	mov	r2, r5
   28d54:	bl	11270 <memcpy@plt>
   28d58:	cmp	r6, #0
   28d5c:	beq	28d0c <_ZdlPv@@Base+0x65c>
   28d60:	mov	r2, r6
   28d64:	mov	r1, r7
   28d68:	add	r0, r9, r5
   28d6c:	bl	11270 <memcpy@plt>
   28d70:	b	28d0c <_ZdlPv@@Base+0x65c>
   28d74:	mov	r2, r6
   28d78:	mov	r1, r7
   28d7c:	bl	11270 <memcpy@plt>
   28d80:	mov	r0, r4
   28d84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   28d88:	andeq	r0, r3, r8, asr #19
   28d8c:	ldr	r2, [r0, #4]
   28d90:	mov	r3, r0
   28d94:	ldr	r0, [r1, #4]
   28d98:	push	{r4, lr}
   28d9c:	cmp	r2, r0
   28da0:	bgt	28dd0 <_ZdlPv@@Base+0x720>
   28da4:	cmp	r2, #0
   28da8:	bne	28db4 <_ZdlPv@@Base+0x704>
   28dac:	mov	r0, #1
   28db0:	pop	{r4, pc}
   28db4:	ldr	r1, [r1]
   28db8:	ldr	r0, [r3]
   28dbc:	bl	11324 <memcmp@plt>
   28dc0:	cmp	r0, #0
   28dc4:	movgt	r0, #0
   28dc8:	movle	r0, #1
   28dcc:	pop	{r4, pc}
   28dd0:	cmp	r0, #0
   28dd4:	popeq	{r4, pc}
   28dd8:	mov	r2, r0
   28ddc:	ldr	r1, [r1]
   28de0:	ldr	r0, [r3]
   28de4:	bl	11324 <memcmp@plt>
   28de8:	lsr	r0, r0, #31
   28dec:	pop	{r4, pc}
   28df0:	ldr	r2, [r0, #4]
   28df4:	mov	r3, r0
   28df8:	ldr	r0, [r1, #4]
   28dfc:	push	{r4, lr}
   28e00:	cmp	r2, r0
   28e04:	bge	28e34 <_ZdlPv@@Base+0x784>
   28e08:	cmp	r2, #0
   28e0c:	bne	28e18 <_ZdlPv@@Base+0x768>
   28e10:	mov	r0, #1
   28e14:	pop	{r4, pc}
   28e18:	ldr	r1, [r1]
   28e1c:	ldr	r0, [r3]
   28e20:	bl	11324 <memcmp@plt>
   28e24:	cmp	r0, #0
   28e28:	movgt	r0, #0
   28e2c:	movle	r0, #1
   28e30:	pop	{r4, pc}
   28e34:	cmp	r0, #0
   28e38:	popeq	{r4, pc}
   28e3c:	mov	r2, r0
   28e40:	ldr	r1, [r1]
   28e44:	ldr	r0, [r3]
   28e48:	bl	11324 <memcmp@plt>
   28e4c:	lsr	r0, r0, #31
   28e50:	pop	{r4, pc}
   28e54:	mov	r3, r0
   28e58:	ldr	r2, [r1, #4]
   28e5c:	ldr	r0, [r0, #4]
   28e60:	push	{r4, lr}
   28e64:	cmp	r0, r2
   28e68:	blt	28e94 <_ZdlPv@@Base+0x7e4>
   28e6c:	cmp	r2, #0
   28e70:	bne	28e7c <_ZdlPv@@Base+0x7cc>
   28e74:	mov	r0, #1
   28e78:	pop	{r4, pc}
   28e7c:	ldr	r1, [r1]
   28e80:	ldr	r0, [r3]
   28e84:	bl	11324 <memcmp@plt>
   28e88:	mvn	r0, r0
   28e8c:	lsr	r0, r0, #31
   28e90:	pop	{r4, pc}
   28e94:	cmp	r0, #0
   28e98:	popeq	{r4, pc}
   28e9c:	mov	r2, r0
   28ea0:	ldr	r1, [r1]
   28ea4:	ldr	r0, [r3]
   28ea8:	bl	11324 <memcmp@plt>
   28eac:	cmp	r0, #0
   28eb0:	movle	r0, #0
   28eb4:	movgt	r0, #1
   28eb8:	pop	{r4, pc}
   28ebc:	mov	r3, r0
   28ec0:	ldr	r2, [r1, #4]
   28ec4:	ldr	r0, [r0, #4]
   28ec8:	push	{r4, lr}
   28ecc:	cmp	r0, r2
   28ed0:	ble	28efc <_ZdlPv@@Base+0x84c>
   28ed4:	cmp	r2, #0
   28ed8:	bne	28ee4 <_ZdlPv@@Base+0x834>
   28edc:	mov	r0, #1
   28ee0:	pop	{r4, pc}
   28ee4:	ldr	r1, [r1]
   28ee8:	ldr	r0, [r3]
   28eec:	bl	11324 <memcmp@plt>
   28ef0:	mvn	r0, r0
   28ef4:	lsr	r0, r0, #31
   28ef8:	pop	{r4, pc}
   28efc:	cmp	r0, #0
   28f00:	popeq	{r4, pc}
   28f04:	mov	r2, r0
   28f08:	ldr	r1, [r1]
   28f0c:	ldr	r0, [r3]
   28f10:	bl	11324 <memcmp@plt>
   28f14:	cmp	r0, #0
   28f18:	movle	r0, #0
   28f1c:	movgt	r0, #1
   28f20:	pop	{r4, pc}
   28f24:	push	{r4, r5, lr}
   28f28:	subs	r5, r1, #0
   28f2c:	sub	sp, sp, #12
   28f30:	mov	r4, r0
   28f34:	blt	28f50 <_ZdlPv@@Base+0x8a0>
   28f38:	ldr	r1, [r4, #8]
   28f3c:	cmp	r1, r5
   28f40:	blt	28f68 <_ZdlPv@@Base+0x8b8>
   28f44:	str	r5, [r4, #4]
   28f48:	add	sp, sp, #12
   28f4c:	pop	{r4, r5, pc}
   28f50:	ldr	r1, [pc, #56]	; 28f90 <_ZdlPv@@Base+0x8e0>
   28f54:	ldr	r0, [pc, #56]	; 28f94 <_ZdlPv@@Base+0x8e4>
   28f58:	bl	26c88 <floor@plt+0x158bc>
   28f5c:	ldr	r1, [r4, #8]
   28f60:	cmp	r1, r5
   28f64:	bge	28f44 <_ZdlPv@@Base+0x894>
   28f68:	mov	r2, r4
   28f6c:	mov	r3, r5
   28f70:	ldr	r0, [r2], #8
   28f74:	str	r2, [sp]
   28f78:	ldr	r2, [r4, #4]
   28f7c:	bl	287cc <_ZdlPv@@Base+0x11c>
   28f80:	str	r5, [r4, #4]
   28f84:	str	r0, [r4]
   28f88:	add	sp, sp, #12
   28f8c:	pop	{r4, r5, pc}
   28f90:	andeq	r0, r3, r8, asr #19
   28f94:	andeq	r0, r0, r7, lsl #2
   28f98:	mov	r3, #0
   28f9c:	str	r3, [r0, #4]
   28fa0:	bx	lr
   28fa4:	push	{r4, lr}
   28fa8:	ldr	r4, [r0]
   28fac:	cmp	r4, #0
   28fb0:	beq	28fd0 <_ZdlPv@@Base+0x920>
   28fb4:	ldr	r2, [r0, #4]
   28fb8:	mov	r0, r4
   28fbc:	bl	112f4 <memchr@plt>
   28fc0:	cmp	r0, #0
   28fc4:	beq	28fd0 <_ZdlPv@@Base+0x920>
   28fc8:	sub	r0, r0, r4
   28fcc:	pop	{r4, pc}
   28fd0:	mvn	r0, #0
   28fd4:	pop	{r4, pc}
   28fd8:	push	{r4, r5, r6, lr}
   28fdc:	ldrd	r4, [r0]
   28fe0:	cmp	r5, #0
   28fe4:	add	r0, r5, #1
   28fe8:	ble	29048 <_ZdlPv@@Base+0x998>
   28fec:	add	r5, r4, r5
   28ff0:	sub	r4, r4, #1
   28ff4:	sub	r5, r5, #1
   28ff8:	mov	r3, r4
   28ffc:	mov	r1, #0
   29000:	ldrb	r2, [r3, #1]!
   29004:	cmp	r2, #0
   29008:	addeq	r1, r1, #1
   2900c:	cmp	r3, r5
   29010:	bne	29000 <_ZdlPv@@Base+0x950>
   29014:	sub	r0, r0, r1
   29018:	bl	1127c <malloc@plt>
   2901c:	mov	r1, r0
   29020:	ldrb	r2, [r4, #1]!
   29024:	mov	r3, r1
   29028:	cmp	r2, #0
   2902c:	strbne	r2, [r3], #1
   29030:	movne	r1, r3
   29034:	cmp	r4, r5
   29038:	bne	29020 <_ZdlPv@@Base+0x970>
   2903c:	mov	r3, #0
   29040:	strb	r3, [r1]
   29044:	pop	{r4, r5, r6, pc}
   29048:	bl	1127c <malloc@plt>
   2904c:	mov	r1, r0
   29050:	b	2903c <_ZdlPv@@Base+0x98c>
   29054:	push	{r4, r5, r6, lr}
   29058:	ldr	r4, [r0, #4]
   2905c:	ldr	lr, [r0]
   29060:	subs	r6, r4, #1
   29064:	popmi	{r4, r5, r6, pc}
   29068:	ldrb	r3, [lr, r6]
   2906c:	mov	r5, r0
   29070:	cmp	r3, #32
   29074:	bne	2914c <_ZdlPv@@Base+0xa9c>
   29078:	add	r1, lr, r6
   2907c:	mov	r2, r6
   29080:	b	29094 <_ZdlPv@@Base+0x9e4>
   29084:	ldrb	ip, [r1, #-1]!
   29088:	cmp	ip, #32
   2908c:	bne	290c0 <_ZdlPv@@Base+0xa10>
   29090:	mov	r2, r3
   29094:	subs	r3, r2, #1
   29098:	bcs	29084 <_ZdlPv@@Base+0x9d4>
   2909c:	cmp	lr, #0
   290a0:	mov	r4, #0
   290a4:	str	r4, [r5, #4]
   290a8:	popeq	{r4, r5, r6, pc}
   290ac:	mov	r0, lr
   290b0:	bl	1121c <_ZdaPv@plt>
   290b4:	str	r4, [r5]
   290b8:	str	r4, [r5, #8]
   290bc:	pop	{r4, r5, r6, pc}
   290c0:	cmp	r3, #0
   290c4:	beq	29168 <_ZdlPv@@Base+0xab8>
   290c8:	ldrb	r1, [lr]
   290cc:	cmp	r1, #32
   290d0:	bne	29138 <_ZdlPv@@Base+0xa88>
   290d4:	add	r3, lr, r3
   290d8:	add	r2, lr, #1
   290dc:	mov	r4, r2
   290e0:	sub	ip, r3, r2
   290e4:	ldrb	r1, [r2], #1
   290e8:	cmp	r1, #32
   290ec:	beq	290dc <_ZdlPv@@Base+0xa2c>
   290f0:	cmp	r6, ip
   290f4:	popeq	{r4, r5, r6, pc}
   290f8:	cmp	ip, #0
   290fc:	blt	2909c <_ZdlPv@@Base+0x9ec>
   29100:	add	r3, ip, #1
   29104:	str	r3, [r5, #4]
   29108:	ldr	r0, [r5, #8]
   2910c:	bl	1115c <_Znaj@plt>
   29110:	mov	r1, r4
   29114:	ldr	r2, [r5, #4]
   29118:	mov	r6, r0
   2911c:	bl	11270 <memcpy@plt>
   29120:	ldr	r0, [r5]
   29124:	cmp	r0, #0
   29128:	beq	29130 <_ZdlPv@@Base+0xa80>
   2912c:	bl	1121c <_ZdaPv@plt>
   29130:	str	r6, [r5]
   29134:	pop	{r4, r5, r6, pc}
   29138:	cmp	r4, r2
   2913c:	popeq	{r4, r5, r6, pc}
   29140:	mov	r4, lr
   29144:	mov	ip, r3
   29148:	b	29100 <_ZdlPv@@Base+0xa50>
   2914c:	cmp	r6, #0
   29150:	popeq	{r4, r5, r6, pc}
   29154:	ldrb	r3, [lr]
   29158:	cmp	r3, #32
   2915c:	popne	{r4, r5, r6, pc}
   29160:	mov	r3, r6
   29164:	b	290d4 <_ZdlPv@@Base+0xa24>
   29168:	cmp	r6, #0
   2916c:	bne	29140 <_ZdlPv@@Base+0xa90>
   29170:	pop	{r4, r5, r6, pc}
   29174:	push	{r4, r5, r6, lr}
   29178:	ldrd	r4, [r0]
   2917c:	cmp	r5, #0
   29180:	pople	{r4, r5, r6, pc}
   29184:	add	r5, r4, r5
   29188:	mov	r6, r1
   2918c:	sub	r5, r5, #1
   29190:	sub	r4, r4, #1
   29194:	ldrb	r0, [r4, #1]!
   29198:	mov	r1, r6
   2919c:	bl	111f8 <putc@plt>
   291a0:	cmp	r4, r5
   291a4:	bne	29194 <_ZdlPv@@Base+0xae4>
   291a8:	pop	{r4, r5, r6, pc}
   291ac:	push	{r4, r5, lr}
   291b0:	sub	sp, sp, #12
   291b4:	ldr	r5, [pc, #48]	; 291ec <_ZdlPv@@Base+0xb3c>
   291b8:	mov	r4, r0
   291bc:	str	r1, [sp]
   291c0:	ldr	r3, [pc, #40]	; 291f0 <_ZdlPv@@Base+0xb40>
   291c4:	mov	r2, #12
   291c8:	mov	r0, r5
   291cc:	mov	r1, #1
   291d0:	bl	1133c <__sprintf_chk@plt>
   291d4:	mov	r1, r5
   291d8:	mov	r0, r4
   291dc:	bl	288e0 <_ZdlPv@@Base+0x230>
   291e0:	mov	r0, r4
   291e4:	add	sp, sp, #12
   291e8:	pop	{r4, r5, pc}
   291ec:	andeq	r5, r4, r4, lsr r5
   291f0:	andeq	r0, r3, ip, ror #19
   291f4:	subs	r1, r0, #0
   291f8:	beq	29224 <_ZdlPv@@Base+0xb74>
   291fc:	push	{r4, r5, r6, lr}
   29200:	mov	r4, r1
   29204:	bl	11288 <strlen@plt>
   29208:	add	r5, r0, #1
   2920c:	mov	r0, r5
   29210:	bl	1127c <malloc@plt>
   29214:	mov	r2, r5
   29218:	mov	r1, r4
   2921c:	bl	11270 <memcpy@plt>
   29220:	pop	{r4, r5, r6, pc}
   29224:	mov	r0, r1
   29228:	bx	lr
   2922c:	push	{r4, r5, r6, lr}
   29230:	mov	r5, r0
   29234:	ldr	r4, [pc, #40]	; 29264 <_ZdlPv@@Base+0xbb4>
   29238:	ldr	r0, [r4]
   2923c:	cmp	r0, #0
   29240:	beq	29254 <_ZdlPv@@Base+0xba4>
   29244:	mov	r1, r5
   29248:	bl	112d0 <strcmp@plt>
   2924c:	cmp	r0, #0
   29250:	popeq	{r4, r5, r6, pc}
   29254:	mov	r0, r5
   29258:	bl	291f4 <_ZdlPv@@Base+0xb44>
   2925c:	str	r0, [r4]
   29260:	pop	{r4, r5, r6, pc}
   29264:	andeq	r5, r4, ip, asr #9
   29268:	ldr	r3, [pc, #4]	; 29274 <_ZdlPv@@Base+0xbc4>
   2926c:	str	r0, [r3]
   29270:	bx	lr
   29274:	andeq	r5, r4, ip, lsr #10
   29278:	push	{r1, r2, r3}
   2927c:	push	{r4, r5, r6, r7, r8, lr}
   29280:	sub	sp, sp, #2016	; 0x7e0
   29284:	ldr	r5, [pc, #228]	; 29370 <_ZdlPv@@Base+0xcc0>
   29288:	sub	sp, sp, #4
   2928c:	add	r2, sp, #2048	; 0x800
   29290:	ldr	ip, [r5]
   29294:	add	r3, sp, #16
   29298:	add	r6, sp, #12
   2929c:	sub	r1, r3, #12
   292a0:	str	ip, [sp, #2012]	; 0x7dc
   292a4:	mov	r3, r2
   292a8:	mov	ip, #2000	; 0x7d0
   292ac:	str	r2, [sp, #8]
   292b0:	mov	r8, r0
   292b4:	ldr	r2, [sp, #2044]	; 0x7fc
   292b8:	mov	r0, r6
   292bc:	str	ip, [sp, #4]
   292c0:	bl	29384 <_ZdlPv@@Base+0xcd4>
   292c4:	ldr	r4, [sp, #4]
   292c8:	subs	r7, r0, #0
   292cc:	beq	2935c <_ZdlPv@@Base+0xcac>
   292d0:	mov	r3, r8
   292d4:	mov	r2, r4
   292d8:	mov	r1, #1
   292dc:	bl	11258 <fwrite@plt>
   292e0:	cmp	r0, r4
   292e4:	bcc	29324 <_ZdlPv@@Base+0xc74>
   292e8:	cmp	r7, r6
   292ec:	beq	292f8 <_ZdlPv@@Base+0xc48>
   292f0:	mov	r0, r7
   292f4:	bl	110e4 <free@plt>
   292f8:	subs	r0, r4, #0
   292fc:	blt	29350 <_ZdlPv@@Base+0xca0>
   29300:	ldr	r2, [sp, #2012]	; 0x7dc
   29304:	ldr	r3, [r5]
   29308:	cmp	r2, r3
   2930c:	bne	2936c <_ZdlPv@@Base+0xcbc>
   29310:	add	sp, sp, #2016	; 0x7e0
   29314:	add	sp, sp, #4
   29318:	pop	{r4, r5, r6, r7, r8, lr}
   2931c:	add	sp, sp, #12
   29320:	bx	lr
   29324:	cmp	r7, r6
   29328:	mvneq	r0, #0
   2932c:	beq	29300 <_ZdlPv@@Base+0xc50>
   29330:	bl	112e8 <__errno_location@plt>
   29334:	mov	r4, r0
   29338:	mov	r0, r7
   2933c:	ldr	r6, [r4]
   29340:	bl	110e4 <free@plt>
   29344:	str	r6, [r4]
   29348:	mvn	r0, #0
   2934c:	b	29300 <_ZdlPv@@Base+0xc50>
   29350:	bl	112e8 <__errno_location@plt>
   29354:	mov	r3, #75	; 0x4b
   29358:	str	r3, [r0]
   2935c:	mov	r0, r8
   29360:	bl	29374 <_ZdlPv@@Base+0xcc4>
   29364:	mvn	r0, #0
   29368:	b	29300 <_ZdlPv@@Base+0xc50>
   2936c:	bl	111e0 <__stack_chk_fail@plt>
   29370:	andeq	r1, r4, r0, ror sp
   29374:	ldr	r3, [r0]
   29378:	orr	r3, r3, #32
   2937c:	str	r3, [r0]
   29380:	bx	lr
   29384:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29388:	mov	r9, r2
   2938c:	ldr	r2, [pc, #3592]	; 2a19c <_ZdlPv@@Base+0x1aec>
   29390:	add	fp, sp, #32
   29394:	sub	sp, sp, #540	; 0x21c
   29398:	ldr	ip, [r2]
   2939c:	str	r0, [fp, #-504]	; 0xfffffe08
   293a0:	str	r1, [fp, #-532]	; 0xfffffdec
   293a4:	mov	r0, r9
   293a8:	sub	r2, fp, #484	; 0x1e4
   293ac:	sub	r1, fp, #364	; 0x16c
   293b0:	mov	r4, r3
   293b4:	str	ip, [fp, #-40]	; 0xffffffd8
   293b8:	bl	2a2d4 <_ZdlPv@@Base+0x1c24>
   293bc:	cmp	r0, #0
   293c0:	blt	29998 <_ZdlPv@@Base+0x12e8>
   293c4:	sub	r1, fp, #484	; 0x1e4
   293c8:	mov	r0, r4
   293cc:	bl	2a1a0 <_ZdlPv@@Base+0x1af0>
   293d0:	cmp	r0, #0
   293d4:	blt	29f54 <_ZdlPv@@Base+0x18a4>
   293d8:	ldr	r2, [fp, #-356]	; 0xfffffe9c
   293dc:	ldr	r3, [fp, #-352]	; 0xfffffea0
   293e0:	adds	r2, r2, #7
   293e4:	mvncs	r2, #0
   293e8:	adds	r3, r3, r2
   293ec:	bcs	2998c <_ZdlPv@@Base+0x12dc>
   293f0:	mov	r0, #6
   293f4:	adds	r0, r3, r0
   293f8:	bcs	2998c <_ZdlPv@@Base+0x12dc>
   293fc:	cmp	r0, #4000	; 0xfa0
   29400:	bcc	29630 <_ZdlPv@@Base+0xf80>
   29404:	cmn	r0, #1
   29408:	beq	2998c <_ZdlPv@@Base+0x12dc>
   2940c:	bl	1127c <malloc@plt>
   29410:	subs	r3, r0, #0
   29414:	str	r3, [fp, #-516]	; 0xfffffdfc
   29418:	beq	2998c <_ZdlPv@@Base+0x12dc>
   2941c:	str	r3, [fp, #-536]	; 0xfffffde8
   29420:	ldr	r3, [fp, #-504]	; 0xfffffe08
   29424:	ldr	sl, [fp, #-360]	; 0xfffffe98
   29428:	cmp	r3, #0
   2942c:	ldr	r5, [fp, #-504]	; 0xfffffe08
   29430:	ldrne	r3, [fp, #-532]	; 0xfffffdec
   29434:	ldreq	r6, [fp, #-504]	; 0xfffffe08
   29438:	mov	r4, #0
   2943c:	ldrne	r6, [r3]
   29440:	mov	r3, r5
   29444:	ldr	r5, [sl]
   29448:	str	r4, [fp, #-528]	; 0xfffffdf0
   2944c:	cmp	r5, r9
   29450:	beq	298a8 <_ZdlPv@@Base+0x11f8>
   29454:	sub	r5, r5, r9
   29458:	adds	r2, r4, r5
   2945c:	mov	r7, r2
   29460:	bcs	298b0 <_ZdlPv@@Base+0x1200>
   29464:	cmp	r6, r2
   29468:	bcs	294dc <_ZdlPv@@Base+0xe2c>
   2946c:	cmp	r6, #0
   29470:	bne	299a0 <_ZdlPv@@Base+0x12f0>
   29474:	cmp	r2, #12
   29478:	movls	r6, #12
   2947c:	bhi	299b0 <_ZdlPv@@Base+0x1300>
   29480:	ldr	r2, [fp, #-504]	; 0xfffffe08
   29484:	cmp	r3, r2
   29488:	cmpne	r3, #0
   2948c:	sub	r8, r3, r2
   29490:	clz	r8, r8
   29494:	lsr	r8, r8, #5
   29498:	bne	29944 <_ZdlPv@@Base+0x1294>
   2949c:	mov	r0, r6
   294a0:	str	r3, [fp, #-508]	; 0xfffffe04
   294a4:	bl	1127c <malloc@plt>
   294a8:	ldr	r3, [fp, #-508]	; 0xfffffe04
   294ac:	subs	ip, r0, #0
   294b0:	beq	29d68 <_ZdlPv@@Base+0x16b8>
   294b4:	cmp	r4, #0
   294b8:	moveq	r8, #0
   294bc:	cmp	r8, #0
   294c0:	moveq	r3, ip
   294c4:	beq	294dc <_ZdlPv@@Base+0xe2c>
   294c8:	mov	r1, r3
   294cc:	mov	r2, r4
   294d0:	str	ip, [fp, #-508]	; 0xfffffe04
   294d4:	bl	11270 <memcpy@plt>
   294d8:	ldr	r3, [fp, #-508]	; 0xfffffe04
   294dc:	add	r0, r3, r4
   294e0:	mov	r2, r5
   294e4:	mov	r1, r9
   294e8:	str	r3, [fp, #-508]	; 0xfffffe04
   294ec:	bl	11270 <memcpy@plt>
   294f0:	ldr	r3, [fp, #-508]	; 0xfffffe04
   294f4:	ldr	r2, [fp, #-364]	; 0xfffffe94
   294f8:	ldr	r1, [fp, #-528]	; 0xfffffdf0
   294fc:	cmp	r2, r1
   29500:	beq	2a03c <_ZdlPv@@Base+0x198c>
   29504:	ldrb	r1, [sl, #36]	; 0x24
   29508:	ldr	r2, [sl, #40]	; 0x28
   2950c:	cmp	r1, #37	; 0x25
   29510:	beq	297f0 <_ZdlPv@@Base+0x1140>
   29514:	cmn	r2, #1
   29518:	beq	2a198 <_ZdlPv@@Base+0x1ae8>
   2951c:	ldr	r9, [fp, #-480]	; 0xfffffe20
   29520:	cmp	r1, #110	; 0x6e
   29524:	add	r1, r9, r2, lsl #4
   29528:	ldr	r5, [r9, r2, lsl #4]
   2952c:	beq	29968 <_ZdlPv@@Base+0x12b8>
   29530:	ldr	r2, [sl, #8]
   29534:	ldr	r0, [fp, #-516]	; 0xfffffdfc
   29538:	tst	r2, #1
   2953c:	mov	r1, #37	; 0x25
   29540:	strb	r1, [r0]
   29544:	ldrne	r0, [fp, #-516]	; 0xfffffdfc
   29548:	movne	r1, #39	; 0x27
   2954c:	addne	r4, r0, #2
   29550:	strbne	r1, [r0, #1]
   29554:	addeq	r4, r0, #1
   29558:	tst	r2, #2
   2955c:	movne	r1, #45	; 0x2d
   29560:	strbne	r1, [r4], #1
   29564:	tst	r2, #4
   29568:	movne	r1, #43	; 0x2b
   2956c:	strbne	r1, [r4], #1
   29570:	tst	r2, #8
   29574:	movne	r1, #32
   29578:	strbne	r1, [r4], #1
   2957c:	tst	r2, #16
   29580:	movne	r1, #35	; 0x23
   29584:	strbne	r1, [r4], #1
   29588:	tst	r2, #64	; 0x40
   2958c:	movne	r1, #73	; 0x49
   29590:	strbne	r1, [r4], #1
   29594:	tst	r2, #32
   29598:	movne	r2, #48	; 0x30
   2959c:	strbne	r2, [r4], #1
   295a0:	ldr	r1, [sl, #12]
   295a4:	ldr	r8, [sl, #16]
   295a8:	cmp	r1, r8
   295ac:	beq	295cc <_ZdlPv@@Base+0xf1c>
   295b0:	sub	r8, r8, r1
   295b4:	mov	r0, r4
   295b8:	mov	r2, r8
   295bc:	str	r3, [fp, #-508]	; 0xfffffe04
   295c0:	bl	11270 <memcpy@plt>
   295c4:	ldr	r3, [fp, #-508]	; 0xfffffe04
   295c8:	add	r4, r4, r8
   295cc:	ldr	r1, [sl, #24]
   295d0:	ldr	r8, [sl, #28]
   295d4:	cmp	r1, r8
   295d8:	beq	295f8 <_ZdlPv@@Base+0xf48>
   295dc:	sub	r8, r8, r1
   295e0:	mov	r0, r4
   295e4:	mov	r2, r8
   295e8:	str	r3, [fp, #-508]	; 0xfffffe04
   295ec:	bl	11270 <memcpy@plt>
   295f0:	ldr	r3, [fp, #-508]	; 0xfffffe04
   295f4:	add	r4, r4, r8
   295f8:	sub	r2, r5, #7
   295fc:	cmp	r2, #9
   29600:	ldrls	pc, [pc, r2, lsl #2]
   29604:	b	29660 <_ZdlPv@@Base+0xfb0>
   29608:	andeq	r9, r2, r8, asr r6
   2960c:	andeq	r9, r2, r8, asr r6
   29610:	andeq	r9, r2, r0, asr r6
   29614:	andeq	r9, r2, r0, asr r6
   29618:	andeq	r9, r2, r0, ror #12
   2961c:	andeq	r9, r2, r0, asr #19
   29620:	andeq	r9, r2, r0, ror #12
   29624:	andeq	r9, r2, r8, asr r6
   29628:	andeq	r9, r2, r0, ror #12
   2962c:	andeq	r9, r2, r8, asr r6
   29630:	add	r3, r3, #13
   29634:	bic	r3, r3, #7
   29638:	sub	sp, sp, r3
   2963c:	add	r3, sp, #32
   29640:	str	r3, [fp, #-516]	; 0xfffffdfc
   29644:	mov	r3, #0
   29648:	str	r3, [fp, #-536]	; 0xfffffde8
   2964c:	b	29420 <_ZdlPv@@Base+0xd70>
   29650:	mov	r2, #108	; 0x6c
   29654:	strb	r2, [r4], #1
   29658:	mov	r2, #108	; 0x6c
   2965c:	strb	r2, [r4], #1
   29660:	ldrb	r2, [sl, #36]	; 0x24
   29664:	mov	r1, #0
   29668:	strb	r1, [r4, #1]
   2966c:	strb	r2, [r4]
   29670:	ldr	r2, [sl, #20]
   29674:	cmn	r2, #1
   29678:	beq	29e18 <_ZdlPv@@Base+0x1768>
   2967c:	ldr	r1, [r9, r2, lsl #4]
   29680:	add	r2, r9, r2, lsl #4
   29684:	cmp	r1, #5
   29688:	bne	2a198 <_ZdlPv@@Base+0x1ae8>
   2968c:	ldr	r2, [r2, #8]
   29690:	mov	r8, #1
   29694:	str	r2, [fp, #-492]	; 0xfffffe14
   29698:	ldr	r2, [sl, #32]
   2969c:	cmn	r2, #1
   296a0:	beq	296c8 <_ZdlPv@@Base+0x1018>
   296a4:	ldr	r1, [r9, r2, lsl #4]
   296a8:	add	r9, r9, r2, lsl #4
   296ac:	cmp	r1, #5
   296b0:	bne	2a198 <_ZdlPv@@Base+0x1ae8>
   296b4:	sub	r2, fp, #36	; 0x24
   296b8:	add	r2, r2, r8, lsl #2
   296bc:	ldr	r1, [r9, #8]
   296c0:	add	r8, r8, #1
   296c4:	str	r1, [r2, #-456]	; 0xfffffe38
   296c8:	mov	r2, #2
   296cc:	adds	r2, r7, r2
   296d0:	str	r2, [fp, #-524]	; 0xfffffdf4
   296d4:	bcs	29e50 <_ZdlPv@@Base+0x17a0>
   296d8:	cmp	r6, r2
   296dc:	bcs	29e58 <_ZdlPv@@Base+0x17a8>
   296e0:	cmp	r6, #0
   296e4:	bne	29d14 <_ZdlPv@@Base+0x1664>
   296e8:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   296ec:	cmp	r2, #12
   296f0:	movls	r6, #12
   296f4:	bhi	29d28 <_ZdlPv@@Base+0x1678>
   296f8:	ldr	r1, [fp, #-504]	; 0xfffffe08
   296fc:	sub	r2, r3, r1
   29700:	cmp	r3, r1
   29704:	cmpne	r3, #0
   29708:	clz	r2, r2
   2970c:	lsr	r2, r2, #5
   29710:	str	r2, [fp, #-508]	; 0xfffffe04
   29714:	bne	29e20 <_ZdlPv@@Base+0x1770>
   29718:	mov	r0, r6
   2971c:	str	r3, [fp, #-512]	; 0xfffffe00
   29720:	bl	1127c <malloc@plt>
   29724:	ldr	r3, [fp, #-512]	; 0xfffffe00
   29728:	ldr	r2, [fp, #-508]	; 0xfffffe04
   2972c:	subs	r9, r0, #0
   29730:	beq	29d68 <_ZdlPv@@Base+0x16b8>
   29734:	cmp	r7, #0
   29738:	moveq	r2, #0
   2973c:	cmp	r2, #0
   29740:	beq	29750 <_ZdlPv@@Base+0x10a0>
   29744:	mov	r1, r3
   29748:	mov	r2, r7
   2974c:	bl	11270 <memcpy@plt>
   29750:	mov	r3, #0
   29754:	strb	r3, [r9, r7]
   29758:	bl	112e8 <__errno_location@plt>
   2975c:	sub	r3, r5, #1
   29760:	str	r3, [fp, #-520]	; 0xfffffdf8
   29764:	ldr	r3, [r0]
   29768:	str	r0, [fp, #-508]	; 0xfffffe04
   2976c:	str	r3, [fp, #-540]	; 0xfffffde4
   29770:	sub	r3, r6, r7
   29774:	str	r3, [fp, #-512]	; 0xfffffe00
   29778:	ldr	r3, [fp, #-512]	; 0xfffffe00
   2977c:	mvn	r2, #0
   29780:	cmp	r3, #0
   29784:	str	r2, [fp, #-496]	; 0xfffffe10
   29788:	ldr	r2, [fp, #-508]	; 0xfffffe04
   2978c:	movge	r5, r3
   29790:	ldr	r3, [fp, #-520]	; 0xfffffdf8
   29794:	mov	r1, #0
   29798:	str	r1, [r2]
   2979c:	mvnlt	r5, #-2147483648	; 0x80000000
   297a0:	cmp	r3, #16
   297a4:	ldrls	pc, [pc, r3, lsl #2]
   297a8:	b	2a198 <_ZdlPv@@Base+0x1ae8>
   297ac:	strdeq	r9, [r2], -r4
   297b0:	ldrdeq	r9, [r2], -r4
   297b4:	andeq	r9, r2, r8, ror ip
   297b8:	andeq	r9, r2, ip, lsr #24
   297bc:	andeq	r9, r2, ip, asr #19
   297c0:	andeq	r9, r2, ip, asr #19
   297c4:	andeq	r9, r2, ip, asr #19
   297c8:	andeq	r9, r2, ip, asr #19
   297cc:	strdeq	r9, [r2], -r0
   297d0:	strdeq	r9, [r2], -r0
   297d4:	andeq	r9, r2, r0, ror #23
   297d8:	andeq	r9, r2, r0, ror #23
   297dc:	andeq	r9, r2, ip, asr #19
   297e0:	andeq	r9, r2, ip, asr #19
   297e4:	andeq	r9, r2, ip, asr #19
   297e8:	andeq	r9, r2, ip, asr #19
   297ec:	andeq	r9, r2, ip, asr #19
   297f0:	cmn	r2, #1
   297f4:	bne	2a198 <_ZdlPv@@Base+0x1ae8>
   297f8:	mov	r2, #1
   297fc:	adds	r2, r7, r2
   29800:	mov	r4, r2
   29804:	bcs	29e40 <_ZdlPv@@Base+0x1790>
   29808:	cmp	r6, r2
   2980c:	bcs	29880 <_ZdlPv@@Base+0x11d0>
   29810:	cmp	r6, #0
   29814:	bne	29d64 <_ZdlPv@@Base+0x16b4>
   29818:	cmp	r2, #12
   2981c:	movls	r6, #12
   29820:	bhi	29f9c <_ZdlPv@@Base+0x18ec>
   29824:	ldr	r2, [fp, #-504]	; 0xfffffe08
   29828:	cmp	r3, r2
   2982c:	cmpne	r3, #0
   29830:	sub	r5, r3, r2
   29834:	clz	r5, r5
   29838:	lsr	r5, r5, #5
   2983c:	bne	29f30 <_ZdlPv@@Base+0x1880>
   29840:	mov	r0, r6
   29844:	str	r3, [fp, #-508]	; 0xfffffe04
   29848:	bl	1127c <malloc@plt>
   2984c:	ldr	r3, [fp, #-508]	; 0xfffffe04
   29850:	subs	ip, r0, #0
   29854:	beq	29d68 <_ZdlPv@@Base+0x16b8>
   29858:	cmp	r7, #0
   2985c:	moveq	r5, #0
   29860:	cmp	r5, #0
   29864:	moveq	r3, ip
   29868:	beq	29880 <_ZdlPv@@Base+0x11d0>
   2986c:	mov	r1, r3
   29870:	mov	r2, r7
   29874:	str	ip, [fp, #-508]	; 0xfffffe04
   29878:	bl	11270 <memcpy@plt>
   2987c:	ldr	r3, [fp, #-508]	; 0xfffffe04
   29880:	mov	r2, #37	; 0x25
   29884:	strb	r2, [r3, r7]
   29888:	ldr	r9, [sl, #4]
   2988c:	add	sl, sl, #44	; 0x2c
   29890:	ldr	r2, [fp, #-528]	; 0xfffffdf0
   29894:	ldr	r5, [sl]
   29898:	add	r2, r2, #1
   2989c:	cmp	r5, r9
   298a0:	str	r2, [fp, #-528]	; 0xfffffdf0
   298a4:	bne	29454 <_ZdlPv@@Base+0xda4>
   298a8:	mov	r7, r4
   298ac:	b	294f4 <_ZdlPv@@Base+0xe44>
   298b0:	cmn	r6, #1
   298b4:	beq	29f28 <_ZdlPv@@Base+0x1878>
   298b8:	mov	r5, r3
   298bc:	bl	112e8 <__errno_location@plt>
   298c0:	mov	r9, r5
   298c4:	str	r0, [fp, #-508]	; 0xfffffe04
   298c8:	ldr	r3, [fp, #-504]	; 0xfffffe08
   298cc:	cmp	r9, r3
   298d0:	cmpne	r9, #0
   298d4:	bne	29d84 <_ZdlPv@@Base+0x16d4>
   298d8:	ldr	r3, [fp, #-536]	; 0xfffffde8
   298dc:	cmp	r3, #0
   298e0:	beq	298ec <_ZdlPv@@Base+0x123c>
   298e4:	mov	r0, r3
   298e8:	bl	110e4 <free@plt>
   298ec:	ldr	r0, [fp, #-360]	; 0xfffffe98
   298f0:	sub	r3, fp, #348	; 0x15c
   298f4:	cmp	r0, r3
   298f8:	beq	29900 <_ZdlPv@@Base+0x1250>
   298fc:	bl	110e4 <free@plt>
   29900:	ldr	r0, [fp, #-480]	; 0xfffffe20
   29904:	sub	r3, fp, #476	; 0x1dc
   29908:	cmp	r0, r3
   2990c:	beq	29914 <_ZdlPv@@Base+0x1264>
   29910:	bl	110e4 <free@plt>
   29914:	ldr	r2, [fp, #-508]	; 0xfffffe04
   29918:	mov	r5, #0
   2991c:	mov	r3, #12
   29920:	str	r3, [r2]
   29924:	ldr	r3, [pc, #2160]	; 2a19c <_ZdlPv@@Base+0x1aec>
   29928:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2992c:	mov	r0, r5
   29930:	ldr	r3, [r3]
   29934:	cmp	r2, r3
   29938:	bne	2a188 <_ZdlPv@@Base+0x1ad8>
   2993c:	sub	sp, fp, #32
   29940:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29944:	mov	r0, r3
   29948:	mov	r1, r6
   2994c:	str	r3, [fp, #-508]	; 0xfffffe04
   29950:	bl	111a4 <realloc@plt>
   29954:	ldr	r3, [fp, #-508]	; 0xfffffe04
   29958:	cmp	r0, #0
   2995c:	beq	2a120 <_ZdlPv@@Base+0x1a70>
   29960:	mov	r3, r0
   29964:	b	294dc <_ZdlPv@@Base+0xe2c>
   29968:	sub	r5, r5, #18
   2996c:	cmp	r5, #4
   29970:	ldrls	pc, [pc, r5, lsl #2]
   29974:	b	2a198 <_ZdlPv@@Base+0x1ae8>
   29978:			; <UNDEFINED> instruction: 0x00029db8
   2997c:	andeq	r9, r2, r8, lsr #27
   29980:	andeq	r9, r2, r4, asr sp
   29984:	andeq	r9, r2, r4, asr sp
   29988:	muleq	r2, r0, sp
   2998c:	bl	112e8 <__errno_location@plt>
   29990:	str	r0, [fp, #-508]	; 0xfffffe04
   29994:	b	298ec <_ZdlPv@@Base+0x123c>
   29998:	mov	r5, #0
   2999c:	b	29924 <_ZdlPv@@Base+0x1274>
   299a0:	blt	29d68 <_ZdlPv@@Base+0x16b8>
   299a4:	lsl	r6, r6, #1
   299a8:	cmp	r6, r2
   299ac:	bcs	29480 <_ZdlPv@@Base+0xdd0>
   299b0:	cmn	r2, #1
   299b4:	beq	298b8 <_ZdlPv@@Base+0x1208>
   299b8:	mov	r6, r2
   299bc:	b	29480 <_ZdlPv@@Base+0xdd0>
   299c0:	mov	r2, #76	; 0x4c
   299c4:	strb	r2, [r4], #1
   299c8:	b	29660 <_ZdlPv@@Base+0xfb0>
   299cc:	ldr	r2, [sl, #40]	; 0x28
   299d0:	ldr	r3, [fp, #-480]	; 0xfffffe20
   299d4:	cmp	r8, #1
   299d8:	add	r3, r3, r2, lsl #4
   299dc:	add	r0, r9, r7
   299e0:	ldr	r3, [r3, #8]
   299e4:	beq	29c48 <_ZdlPv@@Base+0x1598>
   299e8:	cmp	r8, #2
   299ec:	beq	29c9c <_ZdlPv@@Base+0x15ec>
   299f0:	str	r3, [sp, #4]
   299f4:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   299f8:	sub	r2, fp, #496	; 0x1f0
   299fc:	str	r2, [sp, #8]
   29a00:	str	r3, [sp]
   29a04:	mov	r2, #1
   29a08:	mvn	r3, #0
   29a0c:	mov	r1, r5
   29a10:	bl	11294 <__snprintf_chk@plt>
   29a14:	ldr	r2, [fp, #-496]	; 0xfffffe10
   29a18:	cmp	r2, #0
   29a1c:	blt	29b44 <_ZdlPv@@Base+0x1494>
   29a20:	cmp	r2, r5
   29a24:	mov	r3, r2
   29a28:	bcs	29a3c <_ZdlPv@@Base+0x138c>
   29a2c:	add	r1, r9, r2
   29a30:	ldrb	r1, [r1, r7]
   29a34:	cmp	r1, #0
   29a38:	bne	2a198 <_ZdlPv@@Base+0x1ae8>
   29a3c:	cmp	r2, r0
   29a40:	bge	29a4c <_ZdlPv@@Base+0x139c>
   29a44:	mov	r3, r0
   29a48:	str	r0, [fp, #-496]	; 0xfffffe10
   29a4c:	add	r2, r3, #1
   29a50:	cmp	r2, r5
   29a54:	bcc	29fac <_ZdlPv@@Base+0x18fc>
   29a58:	cmn	r5, #-2147483647	; 0x80000001
   29a5c:	beq	29fc4 <_ZdlPv@@Base+0x1914>
   29a60:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   29a64:	add	r3, r3, r2
   29a68:	cmp	r7, r3
   29a6c:	mvnhi	r3, #0
   29a70:	cmp	r6, #0
   29a74:	blt	29dc8 <_ZdlPv@@Base+0x1718>
   29a78:	lsl	r2, r6, #1
   29a7c:	cmp	r2, r3
   29a80:	movcs	r3, r2
   29a84:	cmp	r6, r3
   29a88:	bcs	29778 <_ZdlPv@@Base+0x10c8>
   29a8c:	cmp	r2, r3
   29a90:	bcc	29dd4 <_ZdlPv@@Base+0x1724>
   29a94:	mov	r6, r2
   29a98:	ldr	r3, [fp, #-504]	; 0xfffffe08
   29a9c:	cmp	r9, r3
   29aa0:	cmpne	r9, #0
   29aa4:	sub	r5, r9, r3
   29aa8:	clz	r5, r5
   29aac:	lsr	r5, r5, #5
   29ab0:	bne	29de4 <_ZdlPv@@Base+0x1734>
   29ab4:	mov	r0, r6
   29ab8:	bl	1127c <malloc@plt>
   29abc:	subs	r3, r0, #0
   29ac0:	beq	298c8 <_ZdlPv@@Base+0x1218>
   29ac4:	cmp	r7, #0
   29ac8:	moveq	r5, #0
   29acc:	cmp	r5, #0
   29ad0:	beq	29e08 <_ZdlPv@@Base+0x1758>
   29ad4:	mov	r1, r9
   29ad8:	mov	r2, r7
   29adc:	mov	r9, r3
   29ae0:	bl	11270 <memcpy@plt>
   29ae4:	sub	r3, r6, r7
   29ae8:	str	r3, [fp, #-512]	; 0xfffffe00
   29aec:	b	29778 <_ZdlPv@@Base+0x10c8>
   29af0:	ldr	r2, [sl, #40]	; 0x28
   29af4:	ldr	r3, [fp, #-480]	; 0xfffffe20
   29af8:	cmp	r8, #1
   29afc:	add	r3, r3, r2, lsl #4
   29b00:	add	r0, r9, r7
   29b04:	ldrd	r2, [r3, #8]
   29b08:	beq	29e94 <_ZdlPv@@Base+0x17e4>
   29b0c:	cmp	r8, #2
   29b10:	beq	29e60 <_ZdlPv@@Base+0x17b0>
   29b14:	strd	r2, [sp, #8]
   29b18:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   29b1c:	sub	r1, fp, #496	; 0x1f0
   29b20:	str	r1, [sp, #16]
   29b24:	str	r3, [sp]
   29b28:	mov	r2, #1
   29b2c:	mvn	r3, #0
   29b30:	mov	r1, r5
   29b34:	bl	11294 <__snprintf_chk@plt>
   29b38:	ldr	r2, [fp, #-496]	; 0xfffffe10
   29b3c:	cmp	r2, #0
   29b40:	bge	29a20 <_ZdlPv@@Base+0x1370>
   29b44:	ldrb	r3, [r4, #1]
   29b48:	cmp	r3, #0
   29b4c:	movne	r3, #0
   29b50:	strbne	r3, [r4, #1]
   29b54:	bne	29778 <_ZdlPv@@Base+0x10c8>
   29b58:	cmp	r0, #0
   29b5c:	bge	29a44 <_ZdlPv@@Base+0x1394>
   29b60:	ldr	r3, [fp, #-508]	; 0xfffffe04
   29b64:	ldr	r4, [r3]
   29b68:	cmp	r4, #0
   29b6c:	bne	29b84 <_ZdlPv@@Base+0x14d4>
   29b70:	ldrb	r3, [sl, #36]	; 0x24
   29b74:	and	r3, r3, #239	; 0xef
   29b78:	cmp	r3, #99	; 0x63
   29b7c:	moveq	r4, #84	; 0x54
   29b80:	movne	r4, #22
   29b84:	ldr	r3, [fp, #-504]	; 0xfffffe08
   29b88:	cmp	r9, r3
   29b8c:	cmpne	r9, #0
   29b90:	bne	2a024 <_ZdlPv@@Base+0x1974>
   29b94:	ldr	r3, [fp, #-536]	; 0xfffffde8
   29b98:	cmp	r3, #0
   29b9c:	beq	29ba8 <_ZdlPv@@Base+0x14f8>
   29ba0:	mov	r0, r3
   29ba4:	bl	110e4 <free@plt>
   29ba8:	ldr	r0, [fp, #-360]	; 0xfffffe98
   29bac:	sub	r3, fp, #348	; 0x15c
   29bb0:	cmp	r0, r3
   29bb4:	beq	29bbc <_ZdlPv@@Base+0x150c>
   29bb8:	bl	110e4 <free@plt>
   29bbc:	ldr	r0, [fp, #-480]	; 0xfffffe20
   29bc0:	sub	r3, fp, #476	; 0x1dc
   29bc4:	cmp	r0, r3
   29bc8:	beq	29bd0 <_ZdlPv@@Base+0x1520>
   29bcc:	bl	110e4 <free@plt>
   29bd0:	ldr	r3, [fp, #-508]	; 0xfffffe04
   29bd4:	mov	r5, #0
   29bd8:	str	r4, [r3]
   29bdc:	b	29924 <_ZdlPv@@Base+0x1274>
   29be0:	ldr	r2, [sl, #40]	; 0x28
   29be4:	ldr	r3, [fp, #-480]	; 0xfffffe20
   29be8:	cmp	r8, #1
   29bec:	add	r3, r3, r2, lsl #4
   29bf0:	add	r0, r9, r7
   29bf4:	ldrd	r2, [r3, #8]
   29bf8:	beq	29ef8 <_ZdlPv@@Base+0x1848>
   29bfc:	cmp	r8, #2
   29c00:	beq	29ec4 <_ZdlPv@@Base+0x1814>
   29c04:	strd	r2, [sp, #8]
   29c08:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   29c0c:	sub	r1, fp, #496	; 0x1f0
   29c10:	str	r1, [sp, #16]
   29c14:	str	r3, [sp]
   29c18:	mov	r2, #1
   29c1c:	mvn	r3, #0
   29c20:	mov	r1, r5
   29c24:	bl	11294 <__snprintf_chk@plt>
   29c28:	b	29a14 <_ZdlPv@@Base+0x1364>
   29c2c:	ldr	r2, [sl, #40]	; 0x28
   29c30:	ldr	r3, [fp, #-480]	; 0xfffffe20
   29c34:	cmp	r8, #1
   29c38:	add	r3, r3, r2, lsl #4
   29c3c:	add	r0, r9, r7
   29c40:	ldrh	r3, [r3, #8]
   29c44:	bne	299e8 <_ZdlPv@@Base+0x1338>
   29c48:	ldr	r2, [fp, #-492]	; 0xfffffe14
   29c4c:	str	r3, [sp, #8]
   29c50:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   29c54:	sub	r1, fp, #496	; 0x1f0
   29c58:	str	r1, [sp, #12]
   29c5c:	str	r3, [sp]
   29c60:	str	r2, [sp, #4]
   29c64:	mvn	r3, #0
   29c68:	mov	r2, r8
   29c6c:	mov	r1, r5
   29c70:	bl	11294 <__snprintf_chk@plt>
   29c74:	b	29a14 <_ZdlPv@@Base+0x1364>
   29c78:	ldr	r2, [sl, #40]	; 0x28
   29c7c:	ldr	r3, [fp, #-480]	; 0xfffffe20
   29c80:	cmp	r8, #1
   29c84:	add	r3, r3, r2, lsl #4
   29c88:	add	r0, r9, r7
   29c8c:	ldrsh	r3, [r3, #8]
   29c90:	beq	29c48 <_ZdlPv@@Base+0x1598>
   29c94:	cmp	r8, #2
   29c98:	bne	299f0 <_ZdlPv@@Base+0x1340>
   29c9c:	ldr	r1, [fp, #-488]	; 0xfffffe18
   29ca0:	ldr	r2, [fp, #-492]	; 0xfffffe14
   29ca4:	str	r3, [sp, #12]
   29ca8:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   29cac:	sub	ip, fp, #496	; 0x1f0
   29cb0:	str	r3, [sp]
   29cb4:	str	r1, [sp, #8]
   29cb8:	str	r2, [sp, #4]
   29cbc:	str	ip, [sp, #16]
   29cc0:	mvn	r3, #0
   29cc4:	mov	r2, #1
   29cc8:	mov	r1, r5
   29ccc:	bl	11294 <__snprintf_chk@plt>
   29cd0:	b	29a14 <_ZdlPv@@Base+0x1364>
   29cd4:	ldr	r2, [sl, #40]	; 0x28
   29cd8:	ldr	r3, [fp, #-480]	; 0xfffffe20
   29cdc:	cmp	r8, #1
   29ce0:	add	r3, r3, r2, lsl #4
   29ce4:	add	r0, r9, r7
   29ce8:	ldrb	r3, [r3, #8]
   29cec:	bne	299e8 <_ZdlPv@@Base+0x1338>
   29cf0:	b	29c48 <_ZdlPv@@Base+0x1598>
   29cf4:	ldr	r2, [sl, #40]	; 0x28
   29cf8:	ldr	r3, [fp, #-480]	; 0xfffffe20
   29cfc:	cmp	r8, #1
   29d00:	add	r3, r3, r2, lsl #4
   29d04:	add	r0, r9, r7
   29d08:	ldrsb	r3, [r3, #8]
   29d0c:	bne	299e8 <_ZdlPv@@Base+0x1338>
   29d10:	b	29c48 <_ZdlPv@@Base+0x1598>
   29d14:	blt	29d68 <_ZdlPv@@Base+0x16b8>
   29d18:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   29d1c:	lsl	r6, r6, #1
   29d20:	cmp	r6, r2
   29d24:	bcs	296f8 <_ZdlPv@@Base+0x1048>
   29d28:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   29d2c:	mov	r1, #0
   29d30:	cmn	r2, #1
   29d34:	movne	r2, #0
   29d38:	moveq	r2, #1
   29d3c:	cmp	r1, r1
   29d40:	movne	r2, #255	; 0xff
   29d44:	cmp	r2, r1
   29d48:	bne	298b8 <_ZdlPv@@Base+0x1208>
   29d4c:	ldr	r6, [fp, #-524]	; 0xfffffdf4
   29d50:	b	296f8 <_ZdlPv@@Base+0x1048>
   29d54:	ldr	r2, [r1, #8]
   29d58:	mov	r4, r7
   29d5c:	str	r7, [r2]
   29d60:	b	29888 <_ZdlPv@@Base+0x11d8>
   29d64:	bge	29f90 <_ZdlPv@@Base+0x18e0>
   29d68:	mov	r9, r3
   29d6c:	bl	112e8 <__errno_location@plt>
   29d70:	ldr	r3, [fp, #-504]	; 0xfffffe08
   29d74:	cmp	r9, r3
   29d78:	cmpne	r9, #0
   29d7c:	str	r0, [fp, #-508]	; 0xfffffe04
   29d80:	beq	298d8 <_ZdlPv@@Base+0x1228>
   29d84:	mov	r0, r9
   29d88:	bl	110e4 <free@plt>
   29d8c:	b	298d8 <_ZdlPv@@Base+0x1228>
   29d90:	ldr	r2, [r1, #8]
   29d94:	mov	r1, #0
   29d98:	mov	r4, r7
   29d9c:	str	r7, [r2]
   29da0:	str	r1, [r2, #4]
   29da4:	b	29888 <_ZdlPv@@Base+0x11d8>
   29da8:	ldr	r2, [r1, #8]
   29dac:	mov	r4, r7
   29db0:	strh	r7, [r2]
   29db4:	b	29888 <_ZdlPv@@Base+0x11d8>
   29db8:	ldr	r2, [r1, #8]
   29dbc:	mov	r4, r7
   29dc0:	strb	r7, [r2]
   29dc4:	b	29888 <_ZdlPv@@Base+0x11d8>
   29dc8:	cmn	r6, #1
   29dcc:	beq	29778 <_ZdlPv@@Base+0x10c8>
   29dd0:	b	298c8 <_ZdlPv@@Base+0x1218>
   29dd4:	cmn	r3, #1
   29dd8:	beq	298c8 <_ZdlPv@@Base+0x1218>
   29ddc:	mov	r6, r3
   29de0:	b	29a98 <_ZdlPv@@Base+0x13e8>
   29de4:	mov	r1, r6
   29de8:	mov	r0, r9
   29dec:	bl	111a4 <realloc@plt>
   29df0:	cmp	r0, #0
   29df4:	beq	298c8 <_ZdlPv@@Base+0x1218>
   29df8:	sub	r3, r6, r7
   29dfc:	mov	r9, r0
   29e00:	str	r3, [fp, #-512]	; 0xfffffe00
   29e04:	b	29778 <_ZdlPv@@Base+0x10c8>
   29e08:	mov	r9, r3
   29e0c:	sub	r3, r6, r7
   29e10:	str	r3, [fp, #-512]	; 0xfffffe00
   29e14:	b	29778 <_ZdlPv@@Base+0x10c8>
   29e18:	mov	r8, #0
   29e1c:	b	29698 <_ZdlPv@@Base+0xfe8>
   29e20:	mov	r0, r3
   29e24:	mov	r1, r6
   29e28:	str	r3, [fp, #-508]	; 0xfffffe04
   29e2c:	bl	111a4 <realloc@plt>
   29e30:	ldr	r3, [fp, #-508]	; 0xfffffe04
   29e34:	subs	r9, r0, #0
   29e38:	bne	29750 <_ZdlPv@@Base+0x10a0>
   29e3c:	b	29d68 <_ZdlPv@@Base+0x16b8>
   29e40:	cmn	r6, #1
   29e44:	bne	298b8 <_ZdlPv@@Base+0x1208>
   29e48:	mov	r4, r6
   29e4c:	b	29880 <_ZdlPv@@Base+0x11d0>
   29e50:	cmn	r6, #1
   29e54:	bne	298b8 <_ZdlPv@@Base+0x1208>
   29e58:	mov	r9, r3
   29e5c:	b	29750 <_ZdlPv@@Base+0x10a0>
   29e60:	ldr	r1, [fp, #-492]	; 0xfffffe14
   29e64:	ldr	ip, [fp, #-488]	; 0xfffffe18
   29e68:	strd	r2, [sp, #16]
   29e6c:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   29e70:	sub	lr, fp, #496	; 0x1f0
   29e74:	str	r3, [sp]
   29e78:	stmib	sp, {r1, ip}
   29e7c:	str	lr, [sp, #24]
   29e80:	mvn	r3, #0
   29e84:	mov	r2, #1
   29e88:	mov	r1, r5
   29e8c:	bl	11294 <__snprintf_chk@plt>
   29e90:	b	29a14 <_ZdlPv@@Base+0x1364>
   29e94:	ldr	r1, [fp, #-492]	; 0xfffffe14
   29e98:	strd	r2, [sp, #8]
   29e9c:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   29ea0:	sub	ip, fp, #496	; 0x1f0
   29ea4:	str	r3, [sp]
   29ea8:	str	r1, [sp, #4]
   29eac:	str	ip, [sp, #16]
   29eb0:	mvn	r3, #0
   29eb4:	mov	r2, r8
   29eb8:	mov	r1, r5
   29ebc:	bl	11294 <__snprintf_chk@plt>
   29ec0:	b	29a14 <_ZdlPv@@Base+0x1364>
   29ec4:	ldr	r1, [fp, #-492]	; 0xfffffe14
   29ec8:	ldr	ip, [fp, #-488]	; 0xfffffe18
   29ecc:	strd	r2, [sp, #16]
   29ed0:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   29ed4:	sub	lr, fp, #496	; 0x1f0
   29ed8:	str	r3, [sp]
   29edc:	stmib	sp, {r1, ip}
   29ee0:	str	lr, [sp, #24]
   29ee4:	mvn	r3, #0
   29ee8:	mov	r2, #1
   29eec:	mov	r1, r5
   29ef0:	bl	11294 <__snprintf_chk@plt>
   29ef4:	b	29a14 <_ZdlPv@@Base+0x1364>
   29ef8:	ldr	r1, [fp, #-492]	; 0xfffffe14
   29efc:	strd	r2, [sp, #8]
   29f00:	ldr	r3, [fp, #-516]	; 0xfffffdfc
   29f04:	sub	ip, fp, #496	; 0x1f0
   29f08:	str	r3, [sp]
   29f0c:	str	r1, [sp, #4]
   29f10:	str	ip, [sp, #16]
   29f14:	mvn	r3, #0
   29f18:	mov	r2, r8
   29f1c:	mov	r1, r5
   29f20:	bl	11294 <__snprintf_chk@plt>
   29f24:	b	29a14 <_ZdlPv@@Base+0x1364>
   29f28:	mov	r7, r6
   29f2c:	b	294dc <_ZdlPv@@Base+0xe2c>
   29f30:	mov	r0, r3
   29f34:	mov	r1, r6
   29f38:	str	r3, [fp, #-508]	; 0xfffffe04
   29f3c:	bl	111a4 <realloc@plt>
   29f40:	ldr	r3, [fp, #-508]	; 0xfffffe04
   29f44:	cmp	r0, #0
   29f48:	beq	2a120 <_ZdlPv@@Base+0x1a70>
   29f4c:	mov	r3, r0
   29f50:	b	29880 <_ZdlPv@@Base+0x11d0>
   29f54:	ldr	r0, [fp, #-360]	; 0xfffffe98
   29f58:	sub	r3, fp, #348	; 0x15c
   29f5c:	cmp	r0, r3
   29f60:	beq	29f68 <_ZdlPv@@Base+0x18b8>
   29f64:	bl	110e4 <free@plt>
   29f68:	ldr	r0, [fp, #-480]	; 0xfffffe20
   29f6c:	sub	r3, fp, #476	; 0x1dc
   29f70:	cmp	r0, r3
   29f74:	beq	29f7c <_ZdlPv@@Base+0x18cc>
   29f78:	bl	110e4 <free@plt>
   29f7c:	bl	112e8 <__errno_location@plt>
   29f80:	mov	r3, #22
   29f84:	mov	r5, #0
   29f88:	str	r3, [r0]
   29f8c:	b	29924 <_ZdlPv@@Base+0x1274>
   29f90:	lsl	r6, r6, #1
   29f94:	cmp	r6, r2
   29f98:	bcs	29824 <_ZdlPv@@Base+0x1174>
   29f9c:	cmn	r2, #1
   29fa0:	beq	298b8 <_ZdlPv@@Base+0x1208>
   29fa4:	mov	r6, r2
   29fa8:	b	29824 <_ZdlPv@@Base+0x1174>
   29fac:	add	r4, r7, r3
   29fb0:	ldr	r3, [fp, #-508]	; 0xfffffe04
   29fb4:	ldr	r2, [fp, #-540]	; 0xfffffde4
   29fb8:	str	r2, [r3]
   29fbc:	mov	r3, r9
   29fc0:	b	29888 <_ZdlPv@@Base+0x11d8>
   29fc4:	ldr	r3, [fp, #-504]	; 0xfffffe08
   29fc8:	cmp	r9, r3
   29fcc:	cmpne	r9, #0
   29fd0:	bne	2a030 <_ZdlPv@@Base+0x1980>
   29fd4:	ldr	r3, [fp, #-536]	; 0xfffffde8
   29fd8:	cmp	r3, #0
   29fdc:	beq	29fe8 <_ZdlPv@@Base+0x1938>
   29fe0:	mov	r0, r3
   29fe4:	bl	110e4 <free@plt>
   29fe8:	ldr	r0, [fp, #-360]	; 0xfffffe98
   29fec:	sub	r3, fp, #348	; 0x15c
   29ff0:	cmp	r0, r3
   29ff4:	beq	29ffc <_ZdlPv@@Base+0x194c>
   29ff8:	bl	110e4 <free@plt>
   29ffc:	ldr	r0, [fp, #-480]	; 0xfffffe20
   2a000:	sub	r3, fp, #476	; 0x1dc
   2a004:	cmp	r0, r3
   2a008:	beq	2a010 <_ZdlPv@@Base+0x1960>
   2a00c:	bl	110e4 <free@plt>
   2a010:	ldr	r2, [fp, #-508]	; 0xfffffe04
   2a014:	mov	r3, #75	; 0x4b
   2a018:	mov	r5, #0
   2a01c:	str	r3, [r2]
   2a020:	b	29924 <_ZdlPv@@Base+0x1274>
   2a024:	mov	r0, r9
   2a028:	bl	110e4 <free@plt>
   2a02c:	b	29b94 <_ZdlPv@@Base+0x14e4>
   2a030:	mov	r0, r9
   2a034:	bl	110e4 <free@plt>
   2a038:	b	29fd4 <_ZdlPv@@Base+0x1924>
   2a03c:	mov	r5, r3
   2a040:	mov	r3, #1
   2a044:	adds	r4, r7, r3
   2a048:	mov	r8, r7
   2a04c:	bcs	2a18c <_ZdlPv@@Base+0x1adc>
   2a050:	cmp	r6, r4
   2a054:	bcs	2a0c0 <_ZdlPv@@Base+0x1a10>
   2a058:	cmp	r6, #0
   2a05c:	bne	2a168 <_ZdlPv@@Base+0x1ab8>
   2a060:	cmp	r4, #12
   2a064:	movls	r6, #12
   2a068:	bhi	2a178 <_ZdlPv@@Base+0x1ac8>
   2a06c:	ldr	r3, [fp, #-504]	; 0xfffffe08
   2a070:	cmp	r5, r3
   2a074:	cmpne	r5, #0
   2a078:	sub	r7, r5, r3
   2a07c:	clz	r7, r7
   2a080:	lsr	r7, r7, #5
   2a084:	bne	2a14c <_ZdlPv@@Base+0x1a9c>
   2a088:	mov	r0, r6
   2a08c:	bl	1127c <malloc@plt>
   2a090:	subs	r3, r0, #0
   2a094:	beq	298bc <_ZdlPv@@Base+0x120c>
   2a098:	cmp	r8, #0
   2a09c:	movne	r2, r7
   2a0a0:	moveq	r2, #0
   2a0a4:	cmp	r2, #0
   2a0a8:	moveq	r5, r3
   2a0ac:	beq	2a0c0 <_ZdlPv@@Base+0x1a10>
   2a0b0:	mov	r1, r5
   2a0b4:	mov	r2, r8
   2a0b8:	mov	r5, r3
   2a0bc:	bl	11270 <memcpy@plt>
   2a0c0:	ldr	r3, [fp, #-504]	; 0xfffffe08
   2a0c4:	cmp	r5, r3
   2a0c8:	cmpne	r6, r4
   2a0cc:	mov	r3, #0
   2a0d0:	strb	r3, [r5, r8]
   2a0d4:	bhi	2a134 <_ZdlPv@@Base+0x1a84>
   2a0d8:	ldr	r3, [fp, #-536]	; 0xfffffde8
   2a0dc:	cmp	r3, #0
   2a0e0:	beq	2a0ec <_ZdlPv@@Base+0x1a3c>
   2a0e4:	mov	r0, r3
   2a0e8:	bl	110e4 <free@plt>
   2a0ec:	ldr	r0, [fp, #-360]	; 0xfffffe98
   2a0f0:	sub	r3, fp, #348	; 0x15c
   2a0f4:	cmp	r0, r3
   2a0f8:	beq	2a100 <_ZdlPv@@Base+0x1a50>
   2a0fc:	bl	110e4 <free@plt>
   2a100:	ldr	r0, [fp, #-480]	; 0xfffffe20
   2a104:	sub	r3, fp, #476	; 0x1dc
   2a108:	cmp	r0, r3
   2a10c:	beq	2a114 <_ZdlPv@@Base+0x1a64>
   2a110:	bl	110e4 <free@plt>
   2a114:	ldr	r3, [fp, #-532]	; 0xfffffdec
   2a118:	str	r8, [r3]
   2a11c:	b	29924 <_ZdlPv@@Base+0x1274>
   2a120:	mov	r5, r3
   2a124:	bl	112e8 <__errno_location@plt>
   2a128:	mov	r9, r5
   2a12c:	str	r0, [fp, #-508]	; 0xfffffe04
   2a130:	b	29d84 <_ZdlPv@@Base+0x16d4>
   2a134:	mov	r0, r5
   2a138:	mov	r1, r4
   2a13c:	bl	111a4 <realloc@plt>
   2a140:	cmp	r0, #0
   2a144:	movne	r5, r0
   2a148:	b	2a0d8 <_ZdlPv@@Base+0x1a28>
   2a14c:	mov	r1, r6
   2a150:	mov	r0, r5
   2a154:	bl	111a4 <realloc@plt>
   2a158:	cmp	r0, #0
   2a15c:	beq	2a124 <_ZdlPv@@Base+0x1a74>
   2a160:	mov	r5, r0
   2a164:	b	2a0c0 <_ZdlPv@@Base+0x1a10>
   2a168:	blt	298bc <_ZdlPv@@Base+0x120c>
   2a16c:	lsl	r6, r6, #1
   2a170:	cmp	r6, r4
   2a174:	bcs	2a06c <_ZdlPv@@Base+0x19bc>
   2a178:	cmn	r4, #1
   2a17c:	movne	r6, r4
   2a180:	bne	2a06c <_ZdlPv@@Base+0x19bc>
   2a184:	b	298bc <_ZdlPv@@Base+0x120c>
   2a188:	bl	111e0 <__stack_chk_fail@plt>
   2a18c:	cmn	r6, #1
   2a190:	beq	2a0c0 <_ZdlPv@@Base+0x1a10>
   2a194:	b	298bc <_ZdlPv@@Base+0x120c>
   2a198:	bl	11168 <abort@plt>
   2a19c:	andeq	r1, r4, r0, ror sp
   2a1a0:	ldr	r3, [r1]
   2a1a4:	ldr	r2, [r1, #4]
   2a1a8:	cmp	r3, #0
   2a1ac:	beq	2a2bc <_ZdlPv@@Base+0x1c0c>
   2a1b0:	push	{r4, r5, r6, lr}
   2a1b4:	add	r2, r2, #8
   2a1b8:	ldr	r6, [pc, #268]	; 2a2cc <_ZdlPv@@Base+0x1c1c>
   2a1bc:	ldr	lr, [pc, #268]	; 2a2d0 <_ZdlPv@@Base+0x1c20>
   2a1c0:	mov	ip, #0
   2a1c4:	ldr	r3, [r2, #-8]
   2a1c8:	sub	r3, r3, #1
   2a1cc:	cmp	r3, #21
   2a1d0:	ldrls	pc, [pc, r3, lsl #2]
   2a1d4:	b	2a2c4 <_ZdlPv@@Base+0x1c14>
   2a1d8:	andeq	sl, r2, r4, ror r2
   2a1dc:	andeq	sl, r2, r4, ror r2
   2a1e0:	andeq	sl, r2, r8, ror #4
   2a1e4:	andeq	sl, r2, r8, ror #4
   2a1e8:	andeq	sl, r2, r0, lsr r2
   2a1ec:	andeq	sl, r2, r0, lsr r2
   2a1f0:	andeq	sl, r2, r0, lsr r2
   2a1f4:	andeq	sl, r2, r0, lsr r2
   2a1f8:	andeq	sl, r2, r4, asr r2
   2a1fc:	andeq	sl, r2, r4, asr r2
   2a200:	andeq	sl, r2, r0, lsl #5
   2a204:	andeq	sl, r2, r0, lsl #5
   2a208:	andeq	sl, r2, r0, lsr r2
   2a20c:	andeq	sl, r2, r0, lsr r2
   2a210:	muleq	r2, r4, r2
   2a214:	andeq	sl, r2, r8, lsr #5
   2a218:	andeq	sl, r2, r0, lsr r2
   2a21c:	andeq	sl, r2, r0, lsr r2
   2a220:	andeq	sl, r2, r0, lsr r2
   2a224:	andeq	sl, r2, r0, lsr r2
   2a228:	andeq	sl, r2, r0, lsr r2
   2a22c:	andeq	sl, r2, r0, lsr r2
   2a230:	ldr	r3, [r0], #4
   2a234:	str	r3, [r2]
   2a238:	ldr	r3, [r1]
   2a23c:	add	ip, ip, #1
   2a240:	cmp	r3, ip
   2a244:	add	r2, r2, #16
   2a248:	bhi	2a1c4 <_ZdlPv@@Base+0x1b14>
   2a24c:	mov	r0, #0
   2a250:	pop	{r4, r5, r6, pc}
   2a254:	add	r0, r0, #7
   2a258:	bic	r0, r0, #7
   2a25c:	ldrd	r4, [r0], #8
   2a260:	strd	r4, [r2]
   2a264:	b	2a238 <_ZdlPv@@Base+0x1b88>
   2a268:	ldr	r3, [r0], #4
   2a26c:	strh	r3, [r2]
   2a270:	b	2a238 <_ZdlPv@@Base+0x1b88>
   2a274:	ldr	r3, [r0], #4
   2a278:	strb	r3, [r2]
   2a27c:	b	2a238 <_ZdlPv@@Base+0x1b88>
   2a280:	add	r0, r0, #7
   2a284:	bic	r0, r0, #7
   2a288:	ldrd	r4, [r0], #8
   2a28c:	strd	r4, [r2]
   2a290:	b	2a238 <_ZdlPv@@Base+0x1b88>
   2a294:	ldr	r3, [r0], #4
   2a298:	cmp	r3, #0
   2a29c:	streq	lr, [r2]
   2a2a0:	bne	2a234 <_ZdlPv@@Base+0x1b84>
   2a2a4:	b	2a238 <_ZdlPv@@Base+0x1b88>
   2a2a8:	ldr	r3, [r0], #4
   2a2ac:	cmp	r3, #0
   2a2b0:	streq	r6, [r2]
   2a2b4:	bne	2a234 <_ZdlPv@@Base+0x1b84>
   2a2b8:	b	2a238 <_ZdlPv@@Base+0x1b88>
   2a2bc:	mov	r0, #0
   2a2c0:	bx	lr
   2a2c4:	mvn	r0, #0
   2a2c8:	pop	{r4, r5, r6, pc}
   2a2cc:	andeq	r0, r3, r4, lsl #20
   2a2d0:	andeq	r0, r3, r0, lsr #20
   2a2d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a2d8:	mov	sl, r2
   2a2dc:	sub	sp, sp, #44	; 0x2c
   2a2e0:	mov	fp, r1
   2a2e4:	mov	r3, r1
   2a2e8:	mov	r1, sl
   2a2ec:	mov	r2, #0
   2a2f0:	mov	ip, #7
   2a2f4:	str	r2, [r3], #16
   2a2f8:	str	fp, [sp, #4]
   2a2fc:	str	r3, [fp, #4]
   2a300:	mov	r4, r2
   2a304:	str	r2, [r1], #8
   2a308:	str	ip, [sp, #8]
   2a30c:	mov	r7, r0
   2a310:	str	r3, [sp, #36]	; 0x24
   2a314:	str	r2, [sp, #28]
   2a318:	str	r1, [sp, #12]
   2a31c:	str	r2, [sp, #16]
   2a320:	str	r1, [sl, #4]
   2a324:	str	r2, [sp, #32]
   2a328:	mov	r9, r2
   2a32c:	str	ip, [sp, #24]
   2a330:	mov	fp, sl
   2a334:	b	2a344 <_ZdlPv@@Base+0x1c94>
   2a338:	cmp	r0, #37	; 0x25
   2a33c:	mov	r5, r7
   2a340:	beq	2a384 <_ZdlPv@@Base+0x1cd4>
   2a344:	mov	r2, r7
   2a348:	ldrb	r0, [r7], #1
   2a34c:	cmp	r0, #0
   2a350:	bne	2a338 <_ZdlPv@@Base+0x1c88>
   2a354:	add	ip, r4, r4, lsl #2
   2a358:	ldr	fp, [sp, #4]
   2a35c:	add	r4, r4, ip, lsl #1
   2a360:	mov	r1, r0
   2a364:	str	r2, [r3, r4, lsl #2]
   2a368:	ldr	r3, [sp, #16]
   2a36c:	str	r3, [fp, #8]
   2a370:	ldr	r3, [sp, #28]
   2a374:	str	r3, [fp, #12]
   2a378:	mov	r0, r1
   2a37c:	add	sp, sp, #44	; 0x2c
   2a380:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a384:	add	r1, r4, r4, lsl #2
   2a388:	mvn	r8, #0
   2a38c:	add	r4, r4, r1, lsl #1
   2a390:	add	r6, r3, r4, lsl #2
   2a394:	str	r2, [r3, r4, lsl #2]
   2a398:	str	r9, [r6, #8]
   2a39c:	str	r9, [r6, #12]
   2a3a0:	str	r9, [r6, #16]
   2a3a4:	str	r9, [r6, #24]
   2a3a8:	str	r9, [r6, #28]
   2a3ac:	str	r8, [r6, #20]
   2a3b0:	str	r8, [r6, #32]
   2a3b4:	str	r8, [r6, #40]	; 0x28
   2a3b8:	ldrb	r4, [r7]
   2a3bc:	sub	r0, r4, #48	; 0x30
   2a3c0:	uxtb	r3, r0
   2a3c4:	cmp	r3, #9
   2a3c8:	bhi	2a414 <_ZdlPv@@Base+0x1d64>
   2a3cc:	b	2a88c <_ZdlPv@@Base+0x21dc>
   2a3d0:	cmp	r4, #45	; 0x2d
   2a3d4:	beq	2a430 <_ZdlPv@@Base+0x1d80>
   2a3d8:	cmp	r4, #43	; 0x2b
   2a3dc:	beq	2a440 <_ZdlPv@@Base+0x1d90>
   2a3e0:	cmp	r4, #32
   2a3e4:	beq	2a450 <_ZdlPv@@Base+0x1da0>
   2a3e8:	cmp	r4, #35	; 0x23
   2a3ec:	beq	2a460 <_ZdlPv@@Base+0x1db0>
   2a3f0:	cmp	r4, #48	; 0x30
   2a3f4:	beq	2a470 <_ZdlPv@@Base+0x1dc0>
   2a3f8:	cmp	r4, #73	; 0x49
   2a3fc:	bne	2a480 <_ZdlPv@@Base+0x1dd0>
   2a400:	ldr	r3, [r6, #8]
   2a404:	orr	r3, r3, #64	; 0x40
   2a408:	str	r3, [r6, #8]
   2a40c:	ldrb	r4, [r7]
   2a410:	mov	r5, r7
   2a414:	cmp	r4, #39	; 0x27
   2a418:	add	r7, r5, #1
   2a41c:	bne	2a3d0 <_ZdlPv@@Base+0x1d20>
   2a420:	ldr	r3, [r6, #8]
   2a424:	orr	r3, r3, #1
   2a428:	str	r3, [r6, #8]
   2a42c:	b	2a40c <_ZdlPv@@Base+0x1d5c>
   2a430:	ldr	r3, [r6, #8]
   2a434:	orr	r3, r3, #2
   2a438:	str	r3, [r6, #8]
   2a43c:	b	2a40c <_ZdlPv@@Base+0x1d5c>
   2a440:	ldr	r3, [r6, #8]
   2a444:	orr	r3, r3, #4
   2a448:	str	r3, [r6, #8]
   2a44c:	b	2a40c <_ZdlPv@@Base+0x1d5c>
   2a450:	ldr	r3, [r6, #8]
   2a454:	orr	r3, r3, #8
   2a458:	str	r3, [r6, #8]
   2a45c:	b	2a40c <_ZdlPv@@Base+0x1d5c>
   2a460:	ldr	r3, [r6, #8]
   2a464:	orr	r3, r3, #16
   2a468:	str	r3, [r6, #8]
   2a46c:	b	2a40c <_ZdlPv@@Base+0x1d5c>
   2a470:	ldr	r3, [r6, #8]
   2a474:	orr	r3, r3, #32
   2a478:	str	r3, [r6, #8]
   2a47c:	b	2a40c <_ZdlPv@@Base+0x1d5c>
   2a480:	cmp	r4, #42	; 0x2a
   2a484:	beq	2a65c <_ZdlPv@@Base+0x1fac>
   2a488:	sub	r3, r4, #48	; 0x30
   2a48c:	cmp	r3, #9
   2a490:	bls	2ac7c <_ZdlPv@@Base+0x25cc>
   2a494:	cmp	r4, #46	; 0x2e
   2a498:	beq	2a6f4 <_ZdlPv@@Base+0x2044>
   2a49c:	add	r5, r5, #1
   2a4a0:	mov	r3, #0
   2a4a4:	mov	r1, #1
   2a4a8:	b	2a4b0 <_ZdlPv@@Base+0x1e00>
   2a4ac:	ldrb	r4, [r5], #1
   2a4b0:	cmp	r4, #104	; 0x68
   2a4b4:	andeq	r2, r3, #1
   2a4b8:	mov	r7, r5
   2a4bc:	orreq	r3, r3, r1, lsl r2
   2a4c0:	beq	2a4ac <_ZdlPv@@Base+0x1dfc>
   2a4c4:	cmp	r4, #76	; 0x4c
   2a4c8:	orreq	r3, r3, #4
   2a4cc:	beq	2a4ac <_ZdlPv@@Base+0x1dfc>
   2a4d0:	cmp	r4, #108	; 0x6c
   2a4d4:	addeq	r3, r3, #8
   2a4d8:	beq	2a4ac <_ZdlPv@@Base+0x1dfc>
   2a4dc:	cmp	r4, #106	; 0x6a
   2a4e0:	addeq	r3, r3, #16
   2a4e4:	beq	2a4ac <_ZdlPv@@Base+0x1dfc>
   2a4e8:	and	r2, r4, #223	; 0xdf
   2a4ec:	cmp	r2, #90	; 0x5a
   2a4f0:	beq	2a4ac <_ZdlPv@@Base+0x1dfc>
   2a4f4:	cmp	r4, #116	; 0x74
   2a4f8:	beq	2a4ac <_ZdlPv@@Base+0x1dfc>
   2a4fc:	sub	r2, r4, #37	; 0x25
   2a500:	cmp	r2, #83	; 0x53
   2a504:	ldrls	pc, [pc, r2, lsl #2]
   2a508:	b	2a8fc <_ZdlPv@@Base+0x224c>
   2a50c:	strdeq	sl, [r2], -r0
   2a510:	strdeq	sl, [r2], -ip
   2a514:	strdeq	sl, [r2], -ip
   2a518:	strdeq	sl, [r2], -ip
   2a51c:	strdeq	sl, [r2], -ip
   2a520:	strdeq	sl, [r2], -ip
   2a524:	strdeq	sl, [r2], -ip
   2a528:	strdeq	sl, [r2], -ip
   2a52c:	strdeq	sl, [r2], -ip
   2a530:	strdeq	sl, [r2], -ip
   2a534:	strdeq	sl, [r2], -ip
   2a538:	strdeq	sl, [r2], -ip
   2a53c:	strdeq	sl, [r2], -ip
   2a540:	strdeq	sl, [r2], -ip
   2a544:	strdeq	sl, [r2], -ip
   2a548:	strdeq	sl, [r2], -ip
   2a54c:	strdeq	sl, [r2], -ip
   2a550:	strdeq	sl, [r2], -ip
   2a554:	strdeq	sl, [r2], -ip
   2a558:	strdeq	sl, [r2], -ip
   2a55c:	strdeq	sl, [r2], -ip
   2a560:	strdeq	sl, [r2], -ip
   2a564:	strdeq	sl, [r2], -ip
   2a568:	strdeq	sl, [r2], -ip
   2a56c:	strdeq	sl, [r2], -ip
   2a570:	strdeq	sl, [r2], -ip
   2a574:	strdeq	sl, [r2], -ip
   2a578:	strdeq	sl, [r2], -ip
   2a57c:	andeq	sl, r2, r4, asr #20
   2a580:	strdeq	sl, [r2], -ip
   2a584:	muleq	r2, r0, r7
   2a588:	strdeq	sl, [r2], -ip
   2a58c:	andeq	sl, r2, r4, asr #20
   2a590:	andeq	sl, r2, r4, asr #20
   2a594:	andeq	sl, r2, r4, asr #20
   2a598:	strdeq	sl, [r2], -ip
   2a59c:	strdeq	sl, [r2], -ip
   2a5a0:	strdeq	sl, [r2], -ip
   2a5a4:	strdeq	sl, [r2], -ip
   2a5a8:	strdeq	sl, [r2], -ip
   2a5ac:	strdeq	sl, [r2], -ip
   2a5b0:	strdeq	sl, [r2], -ip
   2a5b4:	strdeq	sl, [r2], -ip
   2a5b8:	strdeq	sl, [r2], -ip
   2a5bc:	strdeq	sl, [r2], -ip
   2a5c0:	strdeq	sl, [r2], -ip
   2a5c4:	andeq	sl, r2, r8, lsl #23
   2a5c8:	strdeq	sl, [r2], -ip
   2a5cc:	strdeq	sl, [r2], -ip
   2a5d0:	strdeq	sl, [r2], -ip
   2a5d4:	strdeq	sl, [r2], -ip
   2a5d8:	andeq	sl, r2, r4, asr #22
   2a5dc:	strdeq	sl, [r2], -ip
   2a5e0:	strdeq	sl, [r2], -ip
   2a5e4:	strdeq	sl, [r2], -ip
   2a5e8:	strdeq	sl, [r2], -ip
   2a5ec:	strdeq	sl, [r2], -ip
   2a5f0:	strdeq	sl, [r2], -ip
   2a5f4:	strdeq	sl, [r2], -ip
   2a5f8:	strdeq	sl, [r2], -ip
   2a5fc:	andeq	sl, r2, r4, asr #20
   2a600:	strdeq	sl, [r2], -ip
   2a604:	andeq	sl, r2, r0, lsr fp
   2a608:	andeq	sl, r2, ip, ror #21
   2a60c:	andeq	sl, r2, r4, asr #20
   2a610:	andeq	sl, r2, r4, asr #20
   2a614:	andeq	sl, r2, r4, asr #20
   2a618:	strdeq	sl, [r2], -ip
   2a61c:	andeq	sl, r2, ip, ror #21
   2a620:	strdeq	sl, [r2], -ip
   2a624:	strdeq	sl, [r2], -ip
   2a628:	strdeq	sl, [r2], -ip
   2a62c:	strdeq	sl, [r2], -ip
   2a630:	andeq	sl, r2, r4, lsr #23
   2a634:	andeq	sl, r2, r4, asr #22
   2a638:	muleq	r2, r8, fp
   2a63c:	strdeq	sl, [r2], -ip
   2a640:	strdeq	sl, [r2], -ip
   2a644:	ldrdeq	sl, [r2], -r8
   2a648:	strdeq	sl, [r2], -ip
   2a64c:	andeq	sl, r2, r4, asr #22
   2a650:	strdeq	sl, [r2], -ip
   2a654:	strdeq	sl, [r2], -ip
   2a658:	andeq	sl, r2, r4, asr #22
   2a65c:	str	r5, [r6, #12]
   2a660:	str	r7, [r6, #16]
   2a664:	ldrb	r3, [r5, #1]
   2a668:	ldr	r2, [sp, #16]
   2a66c:	sub	r3, r3, #48	; 0x30
   2a670:	cmp	r2, #0
   2a674:	moveq	r2, #1
   2a678:	str	r2, [sp, #16]
   2a67c:	uxtb	r2, r3
   2a680:	cmp	r2, #9
   2a684:	bls	2aa68 <_ZdlPv@@Base+0x23b8>
   2a688:	ldr	r4, [r6, #20]
   2a68c:	cmn	r4, #1
   2a690:	beq	2aa24 <_ZdlPv@@Base+0x2374>
   2a694:	ldr	r3, [sp, #8]
   2a698:	ldr	sl, [fp, #4]
   2a69c:	cmp	r3, r4
   2a6a0:	bls	2a98c <_ZdlPv@@Base+0x22dc>
   2a6a4:	ldr	r2, [fp]
   2a6a8:	cmp	r2, r4
   2a6ac:	bhi	2a6c8 <_ZdlPv@@Base+0x2018>
   2a6b0:	sub	r1, sl, #16
   2a6b4:	add	r2, r2, #1
   2a6b8:	cmp	r2, r4
   2a6bc:	str	r9, [r1, r2, lsl #4]
   2a6c0:	bls	2a6b4 <_ZdlPv@@Base+0x2004>
   2a6c4:	str	r2, [fp]
   2a6c8:	ldr	r3, [sl, r4, lsl #4]
   2a6cc:	cmp	r3, #0
   2a6d0:	bne	2acd8 <_ZdlPv@@Base+0x2628>
   2a6d4:	mov	r3, r7
   2a6d8:	mov	r2, #5
   2a6dc:	str	r2, [sl, r4, lsl #4]
   2a6e0:	ldrb	r4, [r3], #1
   2a6e4:	mov	r5, r7
   2a6e8:	cmp	r4, #46	; 0x2e
   2a6ec:	mov	r7, r3
   2a6f0:	bne	2a49c <_ZdlPv@@Base+0x1dec>
   2a6f4:	ldrb	r3, [r5, #1]
   2a6f8:	cmp	r3, #42	; 0x2a
   2a6fc:	bne	2a944 <_ZdlPv@@Base+0x2294>
   2a700:	add	r7, r5, #2
   2a704:	str	r5, [r6, #24]
   2a708:	str	r7, [r6, #28]
   2a70c:	ldrb	r1, [r5, #2]
   2a710:	ldr	r3, [sp, #28]
   2a714:	sub	r1, r1, #48	; 0x30
   2a718:	cmp	r3, #2
   2a71c:	movcc	r3, #2
   2a720:	str	r3, [sp, #28]
   2a724:	uxtb	r3, r1
   2a728:	cmp	r3, #9
   2a72c:	bls	2ae58 <_ZdlPv@@Base+0x27a8>
   2a730:	ldr	r4, [r6, #32]
   2a734:	cmn	r4, #1
   2a738:	beq	2ae38 <_ZdlPv@@Base+0x2788>
   2a73c:	ldr	r3, [sp, #8]
   2a740:	ldr	sl, [fp, #4]
   2a744:	cmp	r3, r4
   2a748:	bls	2ad5c <_ZdlPv@@Base+0x26ac>
   2a74c:	ldr	r2, [fp]
   2a750:	cmp	r2, r4
   2a754:	bhi	2a770 <_ZdlPv@@Base+0x20c0>
   2a758:	sub	r1, sl, #16
   2a75c:	add	r2, r2, #1
   2a760:	cmp	r2, r4
   2a764:	str	r9, [r1, r2, lsl #4]
   2a768:	bls	2a75c <_ZdlPv@@Base+0x20ac>
   2a76c:	str	r2, [fp]
   2a770:	ldr	r3, [sl, r4, lsl #4]
   2a774:	cmp	r3, #0
   2a778:	bne	2adbc <_ZdlPv@@Base+0x270c>
   2a77c:	mov	r3, #5
   2a780:	str	r3, [sl, r4, lsl #4]
   2a784:	mov	r5, r7
   2a788:	ldrb	r4, [r7]
   2a78c:	b	2a49c <_ZdlPv@@Base+0x1dec>
   2a790:	mov	r4, #99	; 0x63
   2a794:	mov	r3, #14
   2a798:	str	r3, [sp, #20]
   2a79c:	cmn	r8, #1
   2a7a0:	strne	r8, [r6, #40]	; 0x28
   2a7a4:	beq	2ac5c <_ZdlPv@@Base+0x25ac>
   2a7a8:	ldr	r3, [sp, #8]
   2a7ac:	ldr	sl, [fp, #4]
   2a7b0:	cmp	r3, r8
   2a7b4:	bls	2ac00 <_ZdlPv@@Base+0x2550>
   2a7b8:	ldr	r3, [fp]
   2a7bc:	cmp	r3, r8
   2a7c0:	bhi	2a7dc <_ZdlPv@@Base+0x212c>
   2a7c4:	sub	r1, sl, #16
   2a7c8:	add	r3, r3, #1
   2a7cc:	cmp	r3, r8
   2a7d0:	str	r9, [r1, r3, lsl #4]
   2a7d4:	bls	2a7c8 <_ZdlPv@@Base+0x2118>
   2a7d8:	str	r3, [fp]
   2a7dc:	ldr	r3, [sl, r8, lsl #4]
   2a7e0:	cmp	r3, #0
   2a7e4:	bne	2abe8 <_ZdlPv@@Base+0x2538>
   2a7e8:	ldr	r3, [sp, #20]
   2a7ec:	str	r3, [sl, r8, lsl #4]
   2a7f0:	ldr	r3, [sp, #4]
   2a7f4:	strb	r4, [r6, #36]	; 0x24
   2a7f8:	ldr	r2, [sp, #24]
   2a7fc:	ldr	r4, [r3]
   2a800:	str	r5, [r6, #4]
   2a804:	add	r4, r4, #1
   2a808:	cmp	r2, r4
   2a80c:	str	r4, [r3]
   2a810:	ldrhi	r3, [r3, #4]
   2a814:	bhi	2a344 <_ZdlPv@@Base+0x1c94>
   2a818:	ldr	r3, [sp, #24]
   2a81c:	cmp	r3, #0
   2a820:	blt	2af40 <_ZdlPv@@Base+0x2890>
   2a824:	ldr	r3, [sp, #24]
   2a828:	ldr	r2, [pc, #1872]	; 2af80 <_ZdlPv@@Base+0x28d0>
   2a82c:	lsl	r5, r3, #1
   2a830:	cmp	r5, r2
   2a834:	bhi	2af40 <_ZdlPv@@Base+0x2890>
   2a838:	ldr	r2, [sp, #4]
   2a83c:	add	r1, r3, r3, lsl #2
   2a840:	ldr	r6, [r2, #4]
   2a844:	add	r1, r3, r1, lsl #1
   2a848:	ldr	r3, [sp, #36]	; 0x24
   2a84c:	lsl	r1, r1, #3
   2a850:	cmp	r3, r6
   2a854:	beq	2a9ec <_ZdlPv@@Base+0x233c>
   2a858:	mov	r0, r6
   2a85c:	bl	111a4 <realloc@plt>
   2a860:	subs	r3, r0, #0
   2a864:	beq	2af40 <_ZdlPv@@Base+0x2890>
   2a868:	ldr	r2, [sp, #4]
   2a86c:	ldm	r2, {r4, r6}
   2a870:	ldr	r2, [sp, #36]	; 0x24
   2a874:	cmp	r2, r6
   2a878:	beq	2a9fc <_ZdlPv@@Base+0x234c>
   2a87c:	ldr	r2, [sp, #4]
   2a880:	str	r5, [sp, #24]
   2a884:	str	r3, [r2, #4]
   2a888:	b	2a344 <_ZdlPv@@Base+0x1c94>
   2a88c:	mov	r2, r7
   2a890:	ldrb	r3, [r2, #1]!
   2a894:	sub	r1, r3, #48	; 0x30
   2a898:	cmp	r1, #9
   2a89c:	bls	2a890 <_ZdlPv@@Base+0x21e0>
   2a8a0:	cmp	r3, #36	; 0x24
   2a8a4:	mvnne	r8, #0
   2a8a8:	bne	2a414 <_ZdlPv@@Base+0x1d64>
   2a8ac:	mov	r2, #0
   2a8b0:	b	2a8bc <_ZdlPv@@Base+0x220c>
   2a8b4:	cmp	ip, #9
   2a8b8:	bhi	2aec8 <_ZdlPv@@Base+0x2818>
   2a8bc:	ldr	r3, [pc, #1728]	; 2af84 <_ZdlPv@@Base+0x28d4>
   2a8c0:	mov	r1, r5
   2a8c4:	cmp	r2, r3
   2a8c8:	addls	r2, r2, r2, lsl #2
   2a8cc:	mvnhi	r3, #0
   2a8d0:	lslls	r3, r2, #1
   2a8d4:	ldrb	ip, [r5, #1]!
   2a8d8:	adds	r3, r0, r3
   2a8dc:	mov	r2, r3
   2a8e0:	sub	r0, ip, #48	; 0x30
   2a8e4:	uxtb	ip, r0
   2a8e8:	bcc	2a8b4 <_ZdlPv@@Base+0x2204>
   2a8ec:	cmp	ip, #9
   2a8f0:	mvn	r3, #0
   2a8f4:	mov	r1, r5
   2a8f8:	bls	2a8d4 <_ZdlPv@@Base+0x2224>
   2a8fc:	mov	sl, fp
   2a900:	ldr	fp, [sp, #4]
   2a904:	ldr	r3, [sl, #4]
   2a908:	ldr	r2, [sp, #12]
   2a90c:	cmp	r2, r3
   2a910:	beq	2a91c <_ZdlPv@@Base+0x226c>
   2a914:	mov	r0, r3
   2a918:	bl	110e4 <free@plt>
   2a91c:	ldr	r0, [fp, #4]
   2a920:	ldr	r3, [sp, #36]	; 0x24
   2a924:	cmp	r3, r0
   2a928:	beq	2a930 <_ZdlPv@@Base+0x2280>
   2a92c:	bl	110e4 <free@plt>
   2a930:	bl	112e8 <__errno_location@plt>
   2a934:	mov	r3, #22
   2a938:	mvn	r1, #0
   2a93c:	str	r3, [r0]
   2a940:	b	2a378 <_ZdlPv@@Base+0x1cc8>
   2a944:	str	r5, [r6, #24]
   2a948:	ldrb	r3, [r5, #1]
   2a94c:	sub	r3, r3, #48	; 0x30
   2a950:	cmp	r3, #9
   2a954:	bhi	2af5c <_ZdlPv@@Base+0x28ac>
   2a958:	ldrb	r3, [r7, #1]!
   2a95c:	sub	r3, r3, #48	; 0x30
   2a960:	cmp	r3, #9
   2a964:	bls	2a958 <_ZdlPv@@Base+0x22a8>
   2a968:	sub	r3, r7, r5
   2a96c:	mov	r5, r7
   2a970:	ldr	r2, [sp, #28]
   2a974:	str	r7, [r6, #28]
   2a978:	cmp	r2, r3
   2a97c:	movcs	r3, r2
   2a980:	ldrb	r4, [r7]
   2a984:	str	r3, [sp, #28]
   2a988:	b	2a49c <_ZdlPv@@Base+0x1dec>
   2a98c:	ldr	r3, [sp, #8]
   2a990:	lsl	r3, r3, #1
   2a994:	cmp	r3, r4
   2a998:	str	r3, [sp, #8]
   2a99c:	addls	r3, r4, #1
   2a9a0:	strls	r3, [sp, #8]
   2a9a4:	ldr	r3, [sp, #8]
   2a9a8:	cmn	r3, #-268435455	; 0xf0000001
   2a9ac:	bhi	2af68 <_ZdlPv@@Base+0x28b8>
   2a9b0:	ldr	r2, [sp, #12]
   2a9b4:	lsl	r1, r3, #4
   2a9b8:	cmp	r2, sl
   2a9bc:	beq	2ad18 <_ZdlPv@@Base+0x2668>
   2a9c0:	mov	r0, sl
   2a9c4:	bl	111a4 <realloc@plt>
   2a9c8:	ldr	r1, [fp, #4]
   2a9cc:	subs	sl, r0, #0
   2a9d0:	beq	2af6c <_ZdlPv@@Base+0x28bc>
   2a9d4:	ldr	r3, [sp, #12]
   2a9d8:	ldr	r2, [fp]
   2a9dc:	cmp	r3, r1
   2a9e0:	beq	2ae00 <_ZdlPv@@Base+0x2750>
   2a9e4:	str	sl, [fp, #4]
   2a9e8:	b	2a6a8 <_ZdlPv@@Base+0x1ff8>
   2a9ec:	mov	r0, r1
   2a9f0:	bl	1127c <malloc@plt>
   2a9f4:	subs	r3, r0, #0
   2a9f8:	beq	2ae14 <_ZdlPv@@Base+0x2764>
   2a9fc:	add	r2, r4, r4, lsl #2
   2aa00:	mov	r0, r3
   2aa04:	add	r2, r4, r2, lsl #1
   2aa08:	mov	r1, r6
   2aa0c:	lsl	r2, r2, #2
   2aa10:	bl	11270 <memcpy@plt>
   2aa14:	ldr	r2, [sp, #4]
   2aa18:	ldr	r4, [r2]
   2aa1c:	mov	r3, r0
   2aa20:	b	2a87c <_ZdlPv@@Base+0x21cc>
   2aa24:	ldr	r3, [sp, #32]
   2aa28:	cmn	r3, #1
   2aa2c:	str	r3, [r6, #20]
   2aa30:	add	r3, r3, #1
   2aa34:	beq	2a8fc <_ZdlPv@@Base+0x224c>
   2aa38:	ldr	r4, [sp, #32]
   2aa3c:	str	r3, [sp, #32]
   2aa40:	b	2a694 <_ZdlPv@@Base+0x1fe4>
   2aa44:	cmp	r3, #15
   2aa48:	movgt	r3, #12
   2aa4c:	strgt	r3, [sp, #20]
   2aa50:	bgt	2a79c <_ZdlPv@@Base+0x20ec>
   2aa54:	tst	r3, #4
   2aa58:	movne	r3, #12
   2aa5c:	moveq	r3, #11
   2aa60:	str	r3, [sp, #20]
   2aa64:	b	2a79c <_ZdlPv@@Base+0x20ec>
   2aa68:	mov	r1, r7
   2aa6c:	ldrb	r2, [r1, #1]!
   2aa70:	sub	r0, r2, #48	; 0x30
   2aa74:	cmp	r0, #9
   2aa78:	bls	2aa6c <_ZdlPv@@Base+0x23bc>
   2aa7c:	cmp	r2, #36	; 0x24
   2aa80:	bne	2a688 <_ZdlPv@@Base+0x1fd8>
   2aa84:	mov	r1, #0
   2aa88:	b	2aa94 <_ZdlPv@@Base+0x23e4>
   2aa8c:	cmp	ip, #9
   2aa90:	bhi	2af10 <_ZdlPv@@Base+0x2860>
   2aa94:	ldr	r2, [pc, #1256]	; 2af84 <_ZdlPv@@Base+0x28d4>
   2aa98:	mov	r0, r7
   2aa9c:	cmp	r1, r2
   2aaa0:	addls	r1, r1, r1, lsl #2
   2aaa4:	mvnhi	r2, #0
   2aaa8:	lslls	r2, r1, #1
   2aaac:	ldrb	ip, [r7, #1]!
   2aab0:	adds	r2, r3, r2
   2aab4:	mov	r1, r2
   2aab8:	sub	r3, ip, #48	; 0x30
   2aabc:	uxtb	ip, r3
   2aac0:	bcc	2aa8c <_ZdlPv@@Base+0x23dc>
   2aac4:	cmp	ip, #9
   2aac8:	mvn	r2, #0
   2aacc:	mov	r0, r7
   2aad0:	bls	2aaac <_ZdlPv@@Base+0x23fc>
   2aad4:	b	2a8fc <_ZdlPv@@Base+0x224c>
   2aad8:	cmp	r3, #7
   2aadc:	movgt	r3, #16
   2aae0:	movle	r3, #15
   2aae4:	str	r3, [sp, #20]
   2aae8:	b	2a79c <_ZdlPv@@Base+0x20ec>
   2aaec:	cmp	r3, #15
   2aaf0:	bgt	2ade8 <_ZdlPv@@Base+0x2738>
   2aaf4:	tst	r3, #4
   2aaf8:	bne	2ade8 <_ZdlPv@@Base+0x2738>
   2aafc:	cmp	r3, #7
   2ab00:	movgt	r3, #7
   2ab04:	strgt	r3, [sp, #20]
   2ab08:	bgt	2a79c <_ZdlPv@@Base+0x20ec>
   2ab0c:	tst	r3, #2
   2ab10:	movne	r3, #1
   2ab14:	strne	r3, [sp, #20]
   2ab18:	bne	2a79c <_ZdlPv@@Base+0x20ec>
   2ab1c:	tst	r3, #1
   2ab20:	movne	r3, #3
   2ab24:	moveq	r3, #5
   2ab28:	str	r3, [sp, #20]
   2ab2c:	b	2a79c <_ZdlPv@@Base+0x20ec>
   2ab30:	cmp	r3, #7
   2ab34:	movgt	r3, #14
   2ab38:	movle	r3, #13
   2ab3c:	str	r3, [sp, #20]
   2ab40:	b	2a79c <_ZdlPv@@Base+0x20ec>
   2ab44:	cmp	r3, #15
   2ab48:	bgt	2addc <_ZdlPv@@Base+0x272c>
   2ab4c:	tst	r3, #4
   2ab50:	bne	2addc <_ZdlPv@@Base+0x272c>
   2ab54:	cmp	r3, #7
   2ab58:	movgt	r3, #8
   2ab5c:	strgt	r3, [sp, #20]
   2ab60:	bgt	2a79c <_ZdlPv@@Base+0x20ec>
   2ab64:	tst	r3, #2
   2ab68:	movne	r3, #2
   2ab6c:	strne	r3, [sp, #20]
   2ab70:	bne	2a79c <_ZdlPv@@Base+0x20ec>
   2ab74:	tst	r3, #1
   2ab78:	movne	r3, #4
   2ab7c:	moveq	r3, #6
   2ab80:	str	r3, [sp, #20]
   2ab84:	b	2a79c <_ZdlPv@@Base+0x20ec>
   2ab88:	mov	r3, #16
   2ab8c:	str	r3, [sp, #20]
   2ab90:	mov	r4, #115	; 0x73
   2ab94:	b	2a79c <_ZdlPv@@Base+0x20ec>
   2ab98:	mov	r3, #17
   2ab9c:	str	r3, [sp, #20]
   2aba0:	b	2a79c <_ZdlPv@@Base+0x20ec>
   2aba4:	cmp	r3, #15
   2aba8:	bgt	2add0 <_ZdlPv@@Base+0x2720>
   2abac:	tst	r3, #4
   2abb0:	bne	2add0 <_ZdlPv@@Base+0x2720>
   2abb4:	cmp	r3, #7
   2abb8:	movgt	r3, #21
   2abbc:	strgt	r3, [sp, #20]
   2abc0:	bgt	2a79c <_ZdlPv@@Base+0x20ec>
   2abc4:	tst	r3, #2
   2abc8:	movne	r3, #18
   2abcc:	strne	r3, [sp, #20]
   2abd0:	bne	2a79c <_ZdlPv@@Base+0x20ec>
   2abd4:	tst	r3, #1
   2abd8:	movne	r3, #19
   2abdc:	moveq	r3, #20
   2abe0:	str	r3, [sp, #20]
   2abe4:	b	2a79c <_ZdlPv@@Base+0x20ec>
   2abe8:	ldr	r2, [sp, #20]
   2abec:	cmp	r3, r2
   2abf0:	beq	2a7f0 <_ZdlPv@@Base+0x2140>
   2abf4:	mov	r3, sl
   2abf8:	ldr	fp, [sp, #4]
   2abfc:	b	2a908 <_ZdlPv@@Base+0x2258>
   2ac00:	ldr	r3, [sp, #8]
   2ac04:	lsl	r3, r3, #1
   2ac08:	cmp	r3, r8
   2ac0c:	str	r3, [sp, #8]
   2ac10:	addls	r3, r8, #1
   2ac14:	strls	r3, [sp, #8]
   2ac18:	ldr	r3, [sp, #8]
   2ac1c:	cmn	r3, #-268435455	; 0xf0000001
   2ac20:	bhi	2af68 <_ZdlPv@@Base+0x28b8>
   2ac24:	ldr	r2, [sp, #12]
   2ac28:	lsl	r1, r3, #4
   2ac2c:	cmp	r2, sl
   2ac30:	beq	2acec <_ZdlPv@@Base+0x263c>
   2ac34:	mov	r0, sl
   2ac38:	bl	111a4 <realloc@plt>
   2ac3c:	subs	sl, r0, #0
   2ac40:	beq	2af40 <_ZdlPv@@Base+0x2890>
   2ac44:	ldr	r3, [fp, #4]
   2ac48:	ldr	r2, [sp, #12]
   2ac4c:	cmp	r2, r3
   2ac50:	beq	2af74 <_ZdlPv@@Base+0x28c4>
   2ac54:	str	sl, [fp, #4]
   2ac58:	b	2a7b8 <_ZdlPv@@Base+0x2108>
   2ac5c:	ldr	r3, [sp, #32]
   2ac60:	cmn	r3, #1
   2ac64:	str	r3, [r6, #40]	; 0x28
   2ac68:	add	r3, r3, #1
   2ac6c:	beq	2a8fc <_ZdlPv@@Base+0x224c>
   2ac70:	ldr	r8, [sp, #32]
   2ac74:	str	r3, [sp, #32]
   2ac78:	b	2a7a8 <_ZdlPv@@Base+0x20f8>
   2ac7c:	str	r5, [r6, #12]
   2ac80:	ldrb	r3, [r5]
   2ac84:	sub	r3, r3, #48	; 0x30
   2ac88:	cmp	r3, #9
   2ac8c:	bhi	2accc <_ZdlPv@@Base+0x261c>
   2ac90:	mov	r7, r5
   2ac94:	b	2ac9c <_ZdlPv@@Base+0x25ec>
   2ac98:	mov	r7, r2
   2ac9c:	ldrb	r3, [r7, #1]
   2aca0:	add	r2, r7, #1
   2aca4:	sub	r3, r3, #48	; 0x30
   2aca8:	cmp	r3, #9
   2acac:	bls	2ac98 <_ZdlPv@@Base+0x25e8>
   2acb0:	ldr	r3, [sp, #16]
   2acb4:	sub	r5, r2, r5
   2acb8:	cmp	r3, r5
   2acbc:	movcc	r3, r5
   2acc0:	add	r7, r7, #2
   2acc4:	mov	r5, r2
   2acc8:	str	r3, [sp, #16]
   2accc:	str	r5, [r6, #16]
   2acd0:	ldrb	r4, [r5]
   2acd4:	b	2a494 <_ZdlPv@@Base+0x1de4>
   2acd8:	cmp	r3, #5
   2acdc:	bne	2abf4 <_ZdlPv@@Base+0x2544>
   2ace0:	mov	r5, r7
   2ace4:	ldrb	r4, [r7], #1
   2ace8:	b	2a494 <_ZdlPv@@Base+0x1de4>
   2acec:	mov	r0, r1
   2acf0:	bl	1127c <malloc@plt>
   2acf4:	subs	r3, r0, #0
   2acf8:	beq	2ad28 <_ZdlPv@@Base+0x2678>
   2acfc:	ldr	r2, [fp]
   2ad00:	mov	r1, sl
   2ad04:	mov	r0, r3
   2ad08:	lsl	r2, r2, #4
   2ad0c:	bl	11270 <memcpy@plt>
   2ad10:	mov	sl, r0
   2ad14:	b	2ac54 <_ZdlPv@@Base+0x25a4>
   2ad18:	mov	r0, r1
   2ad1c:	bl	1127c <malloc@plt>
   2ad20:	cmp	r0, #0
   2ad24:	bne	2adf4 <_ZdlPv@@Base+0x2744>
   2ad28:	ldr	fp, [sp, #4]
   2ad2c:	ldr	r0, [fp, #4]
   2ad30:	ldr	r3, [sp, #36]	; 0x24
   2ad34:	cmp	r3, r0
   2ad38:	beq	2ad40 <_ZdlPv@@Base+0x2690>
   2ad3c:	bl	110e4 <free@plt>
   2ad40:	bl	112e8 <__errno_location@plt>
   2ad44:	mov	r3, #12
   2ad48:	mvn	r1, #0
   2ad4c:	str	r3, [r0]
   2ad50:	mov	r0, r1
   2ad54:	add	sp, sp, #44	; 0x2c
   2ad58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ad5c:	ldr	r3, [sp, #8]
   2ad60:	lsl	r3, r3, #1
   2ad64:	cmp	r3, r4
   2ad68:	str	r3, [sp, #8]
   2ad6c:	addls	r3, r4, #1
   2ad70:	strls	r3, [sp, #8]
   2ad74:	ldr	r3, [sp, #8]
   2ad78:	cmn	r3, #-268435455	; 0xf0000001
   2ad7c:	bhi	2af68 <_ZdlPv@@Base+0x28b8>
   2ad80:	ldr	r2, [sp, #12]
   2ad84:	lsl	r1, r3, #4
   2ad88:	cmp	r2, sl
   2ad8c:	beq	2aee0 <_ZdlPv@@Base+0x2830>
   2ad90:	mov	r0, sl
   2ad94:	bl	111a4 <realloc@plt>
   2ad98:	ldr	r1, [fp, #4]
   2ad9c:	subs	sl, r0, #0
   2ada0:	beq	2af6c <_ZdlPv@@Base+0x28bc>
   2ada4:	ldr	r3, [sp, #12]
   2ada8:	ldr	r2, [fp]
   2adac:	cmp	r3, r1
   2adb0:	beq	2aefc <_ZdlPv@@Base+0x284c>
   2adb4:	str	sl, [fp, #4]
   2adb8:	b	2a750 <_ZdlPv@@Base+0x20a0>
   2adbc:	cmp	r3, #5
   2adc0:	bne	2abf4 <_ZdlPv@@Base+0x2544>
   2adc4:	ldrb	r4, [r7]
   2adc8:	mov	r5, r7
   2adcc:	b	2a49c <_ZdlPv@@Base+0x1dec>
   2add0:	mov	r3, #22
   2add4:	str	r3, [sp, #20]
   2add8:	b	2a79c <_ZdlPv@@Base+0x20ec>
   2addc:	mov	r3, #10
   2ade0:	str	r3, [sp, #20]
   2ade4:	b	2a79c <_ZdlPv@@Base+0x20ec>
   2ade8:	mov	r3, #9
   2adec:	str	r3, [sp, #20]
   2adf0:	b	2a79c <_ZdlPv@@Base+0x20ec>
   2adf4:	ldr	r2, [fp]
   2adf8:	ldr	r1, [sp, #12]
   2adfc:	mov	sl, r0
   2ae00:	lsl	r2, r2, #4
   2ae04:	mov	r0, sl
   2ae08:	bl	11270 <memcpy@plt>
   2ae0c:	ldr	r2, [fp]
   2ae10:	b	2a9e4 <_ZdlPv@@Base+0x2334>
   2ae14:	mov	sl, fp
   2ae18:	ldr	r3, [sp, #12]
   2ae1c:	ldr	r1, [sl, #4]
   2ae20:	ldr	fp, [sp, #4]
   2ae24:	cmp	r3, r1
   2ae28:	beq	2ad40 <_ZdlPv@@Base+0x2690>
   2ae2c:	mov	r0, r1
   2ae30:	bl	110e4 <free@plt>
   2ae34:	b	2ad2c <_ZdlPv@@Base+0x267c>
   2ae38:	ldr	r3, [sp, #32]
   2ae3c:	cmn	r3, #1
   2ae40:	str	r3, [r6, #32]
   2ae44:	add	r3, r3, #1
   2ae48:	beq	2a8fc <_ZdlPv@@Base+0x224c>
   2ae4c:	ldr	r4, [sp, #32]
   2ae50:	str	r3, [sp, #32]
   2ae54:	b	2a73c <_ZdlPv@@Base+0x208c>
   2ae58:	mov	r2, r7
   2ae5c:	ldrb	r3, [r2, #1]!
   2ae60:	sub	r0, r3, #48	; 0x30
   2ae64:	cmp	r0, #9
   2ae68:	bls	2ae5c <_ZdlPv@@Base+0x27ac>
   2ae6c:	cmp	r3, #36	; 0x24
   2ae70:	bne	2a730 <_ZdlPv@@Base+0x2080>
   2ae74:	mov	r2, #0
   2ae78:	b	2ae84 <_ZdlPv@@Base+0x27d4>
   2ae7c:	cmp	ip, #9
   2ae80:	bhi	2af28 <_ZdlPv@@Base+0x2878>
   2ae84:	ldr	r3, [pc, #248]	; 2af84 <_ZdlPv@@Base+0x28d4>
   2ae88:	mov	r0, r7
   2ae8c:	cmp	r2, r3
   2ae90:	addls	r2, r2, r2, lsl #2
   2ae94:	mvnhi	r3, #0
   2ae98:	lslls	r3, r2, #1
   2ae9c:	ldrb	ip, [r7, #1]!
   2aea0:	adds	r3, r1, r3
   2aea4:	mov	r2, r3
   2aea8:	sub	r1, ip, #48	; 0x30
   2aeac:	uxtb	ip, r1
   2aeb0:	bcc	2ae7c <_ZdlPv@@Base+0x27cc>
   2aeb4:	cmp	ip, #9
   2aeb8:	mvn	r3, #0
   2aebc:	mov	r0, r7
   2aec0:	bls	2ae9c <_ZdlPv@@Base+0x27ec>
   2aec4:	b	2a8fc <_ZdlPv@@Base+0x224c>
   2aec8:	sub	r8, r3, #1
   2aecc:	cmn	r8, #3
   2aed0:	bhi	2a8fc <_ZdlPv@@Base+0x224c>
   2aed4:	add	r5, r1, #2
   2aed8:	ldrb	r4, [r1, #2]
   2aedc:	b	2a414 <_ZdlPv@@Base+0x1d64>
   2aee0:	mov	r0, r1
   2aee4:	bl	1127c <malloc@plt>
   2aee8:	cmp	r0, #0
   2aeec:	beq	2ad28 <_ZdlPv@@Base+0x2678>
   2aef0:	ldr	r2, [fp]
   2aef4:	ldr	r1, [sp, #12]
   2aef8:	mov	sl, r0
   2aefc:	lsl	r2, r2, #4
   2af00:	mov	r0, sl
   2af04:	bl	11270 <memcpy@plt>
   2af08:	ldr	r2, [fp]
   2af0c:	b	2adb4 <_ZdlPv@@Base+0x2704>
   2af10:	sub	r4, r2, #1
   2af14:	cmn	r4, #3
   2af18:	bhi	2a8fc <_ZdlPv@@Base+0x224c>
   2af1c:	str	r4, [r6, #20]
   2af20:	add	r7, r0, #2
   2af24:	b	2a694 <_ZdlPv@@Base+0x1fe4>
   2af28:	sub	r4, r3, #1
   2af2c:	cmn	r4, #3
   2af30:	bhi	2a8fc <_ZdlPv@@Base+0x224c>
   2af34:	str	r4, [r6, #32]
   2af38:	add	r7, r0, #2
   2af3c:	b	2a73c <_ZdlPv@@Base+0x208c>
   2af40:	mov	sl, fp
   2af44:	ldr	fp, [sp, #4]
   2af48:	ldr	r1, [sl, #4]
   2af4c:	ldr	r3, [sp, #12]
   2af50:	cmp	r3, r1
   2af54:	bne	2ae2c <_ZdlPv@@Base+0x277c>
   2af58:	b	2ad2c <_ZdlPv@@Base+0x267c>
   2af5c:	mov	r5, r7
   2af60:	mov	r3, #1
   2af64:	b	2a970 <_ZdlPv@@Base+0x22c0>
   2af68:	mov	r1, sl
   2af6c:	ldr	fp, [sp, #4]
   2af70:	b	2af4c <_ZdlPv@@Base+0x289c>
   2af74:	mov	r3, sl
   2af78:	mov	sl, r2
   2af7c:	b	2acfc <_ZdlPv@@Base+0x264c>
   2af80:	ldrbeq	r7, [r1, #1117]	; 0x45d
   2af84:	ldmibne	r9, {r0, r3, r4, r7, r8, fp, ip, pc}
   2af88:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2af8c:	mov	r7, r0
   2af90:	ldr	r6, [pc, #72]	; 2afe0 <_ZdlPv@@Base+0x2930>
   2af94:	ldr	r5, [pc, #72]	; 2afe4 <_ZdlPv@@Base+0x2934>
   2af98:	add	r6, pc, r6
   2af9c:	add	r5, pc, r5
   2afa0:	sub	r6, r6, r5
   2afa4:	mov	r8, r1
   2afa8:	mov	r9, r2
   2afac:	bl	11094 <rand@plt-0x20>
   2afb0:	asrs	r6, r6, #2
   2afb4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2afb8:	mov	r4, #0
   2afbc:	add	r4, r4, #1
   2afc0:	ldr	r3, [r5], #4
   2afc4:	mov	r2, r9
   2afc8:	mov	r1, r8
   2afcc:	mov	r0, r7
   2afd0:	blx	r3
   2afd4:	cmp	r6, r4
   2afd8:	bne	2afbc <_ZdlPv@@Base+0x290c>
   2afdc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2afe0:	andeq	r6, r1, ip, asr #27
   2afe4:	muleq	r1, ip, sp
   2afe8:	bx	lr

Disassembly of section .fini:

0002afec <.fini>:
   2afec:	push	{r3, lr}
   2aff0:	pop	{r3, pc}
