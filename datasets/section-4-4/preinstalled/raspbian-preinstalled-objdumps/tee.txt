
raspbian-preinstalled/tee:     file format elf32-littlearm


Disassembly of section .init:

00010d2c <.init>:
   10d2c:	push	{r3, lr}
   10d30:	bl	1125c <close@plt+0x294>
   10d34:	pop	{r3, pc}

Disassembly of section .plt:

00010d38 <fdopen@plt-0x14>:
   10d38:	push	{lr}		; (str lr, [sp, #-4]!)
   10d3c:	ldr	lr, [pc, #4]	; 10d48 <fdopen@plt-0x4>
   10d40:	add	lr, pc, lr
   10d44:	ldr	pc, [lr, #8]!
   10d48:			; <UNDEFINED> instruction: 0x000152b8

00010d4c <fdopen@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #86016	; 0x15000
   10d54:	ldr	pc, [ip, #696]!	; 0x2b8

00010d58 <calloc@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #86016	; 0x15000
   10d60:	ldr	pc, [ip, #688]!	; 0x2b0

00010d64 <fputs_unlocked@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #86016	; 0x15000
   10d6c:	ldr	pc, [ip, #680]!	; 0x2a8

00010d70 <raise@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #86016	; 0x15000
   10d78:	ldr	pc, [ip, #672]!	; 0x2a0

00010d7c <strcmp@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #86016	; 0x15000
   10d84:	ldr	pc, [ip, #664]!	; 0x298

00010d88 <posix_fadvise64@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #86016	; 0x15000
   10d90:	ldr	pc, [ip, #656]!	; 0x290

00010d94 <read@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #86016	; 0x15000
   10d9c:	ldr	pc, [ip, #648]!	; 0x288

00010da0 <fflush@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #86016	; 0x15000
   10da8:	ldr	pc, [ip, #640]!	; 0x280

00010dac <free@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #86016	; 0x15000
   10db4:	ldr	pc, [ip, #632]!	; 0x278

00010db8 <_exit@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #86016	; 0x15000
   10dc0:	ldr	pc, [ip, #624]!	; 0x270

00010dc4 <memcpy@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #86016	; 0x15000
   10dcc:	ldr	pc, [ip, #616]!	; 0x268

00010dd0 <mbsinit@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #86016	; 0x15000
   10dd8:	ldr	pc, [ip, #608]!	; 0x260

00010ddc <signal@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #86016	; 0x15000
   10de4:	ldr	pc, [ip, #600]!	; 0x258

00010de8 <fwrite_unlocked@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #86016	; 0x15000
   10df0:	ldr	pc, [ip, #592]!	; 0x250

00010df4 <memcmp@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #86016	; 0x15000
   10dfc:	ldr	pc, [ip, #584]!	; 0x248

00010e00 <dcgettext@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #86016	; 0x15000
   10e08:	ldr	pc, [ip, #576]!	; 0x240

00010e0c <__stack_chk_fail@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #86016	; 0x15000
   10e14:	ldr	pc, [ip, #568]!	; 0x238

00010e18 <realloc@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #86016	; 0x15000
   10e20:	ldr	pc, [ip, #560]!	; 0x230

00010e24 <textdomain@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #86016	; 0x15000
   10e2c:	ldr	pc, [ip, #552]!	; 0x228

00010e30 <iswprint@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #86016	; 0x15000
   10e38:	ldr	pc, [ip, #544]!	; 0x220

00010e3c <fwrite@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #86016	; 0x15000
   10e44:	ldr	pc, [ip, #536]!	; 0x218

00010e48 <lseek64@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #86016	; 0x15000
   10e50:	ldr	pc, [ip, #528]!	; 0x210

00010e54 <__ctype_get_mb_cur_max@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #86016	; 0x15000
   10e5c:	ldr	pc, [ip, #520]!	; 0x208

00010e60 <__fpending@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #86016	; 0x15000
   10e68:	ldr	pc, [ip, #512]!	; 0x200

00010e6c <mbrtowc@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #86016	; 0x15000
   10e74:	ldr	pc, [ip, #504]!	; 0x1f8

00010e78 <error@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #86016	; 0x15000
   10e80:	ldr	pc, [ip, #496]!	; 0x1f0

00010e84 <malloc@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #86016	; 0x15000
   10e8c:	ldr	pc, [ip, #488]!	; 0x1e8

00010e90 <__libc_start_main@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #86016	; 0x15000
   10e98:	ldr	pc, [ip, #480]!	; 0x1e0

00010e9c <__freading@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #86016	; 0x15000
   10ea4:	ldr	pc, [ip, #472]!	; 0x1d8

00010ea8 <__gmon_start__@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #86016	; 0x15000
   10eb0:	ldr	pc, [ip, #464]!	; 0x1d0

00010eb4 <getopt_long@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #86016	; 0x15000
   10ebc:	ldr	pc, [ip, #456]!	; 0x1c8

00010ec0 <__ctype_b_loc@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #86016	; 0x15000
   10ec8:	ldr	pc, [ip, #448]!	; 0x1c0

00010ecc <exit@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #86016	; 0x15000
   10ed4:	ldr	pc, [ip, #440]!	; 0x1b8

00010ed8 <strlen@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #86016	; 0x15000
   10ee0:	ldr	pc, [ip, #432]!	; 0x1b0

00010ee4 <__errno_location@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #86016	; 0x15000
   10eec:	ldr	pc, [ip, #424]!	; 0x1a8

00010ef0 <__cxa_atexit@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #86016	; 0x15000
   10ef8:	ldr	pc, [ip, #416]!	; 0x1a0

00010efc <setvbuf@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #86016	; 0x15000
   10f04:	ldr	pc, [ip, #408]!	; 0x198

00010f08 <memset@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #86016	; 0x15000
   10f10:	ldr	pc, [ip, #400]!	; 0x190

00010f14 <__printf_chk@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #86016	; 0x15000
   10f1c:	ldr	pc, [ip, #392]!	; 0x188

00010f20 <fileno@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #86016	; 0x15000
   10f28:	ldr	pc, [ip, #384]!	; 0x180

00010f2c <__fprintf_chk@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #86016	; 0x15000
   10f34:	ldr	pc, [ip, #376]!	; 0x178

00010f38 <fclose@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #86016	; 0x15000
   10f40:	ldr	pc, [ip, #368]!	; 0x170

00010f44 <fseeko64@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #86016	; 0x15000
   10f4c:	ldr	pc, [ip, #360]!	; 0x168

00010f50 <fcntl64@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #86016	; 0x15000
   10f58:	ldr	pc, [ip, #352]!	; 0x160

00010f5c <__overflow@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #86016	; 0x15000
   10f64:	ldr	pc, [ip, #344]!	; 0x158

00010f68 <setlocale@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #86016	; 0x15000
   10f70:	ldr	pc, [ip, #336]!	; 0x150

00010f74 <strrchr@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #86016	; 0x15000
   10f7c:	ldr	pc, [ip, #328]!	; 0x148

00010f80 <nl_langinfo@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #86016	; 0x15000
   10f88:	ldr	pc, [ip, #320]!	; 0x140

00010f8c <clearerr_unlocked@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #86016	; 0x15000
   10f94:	ldr	pc, [ip, #312]!	; 0x138

00010f98 <fopen64@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #86016	; 0x15000
   10fa0:	ldr	pc, [ip, #304]!	; 0x130

00010fa4 <bindtextdomain@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #86016	; 0x15000
   10fac:	ldr	pc, [ip, #296]!	; 0x128

00010fb0 <strncmp@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #86016	; 0x15000
   10fb8:	ldr	pc, [ip, #288]!	; 0x120

00010fbc <abort@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #86016	; 0x15000
   10fc4:	ldr	pc, [ip, #280]!	; 0x118

00010fc8 <close@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #86016	; 0x15000
   10fd0:	ldr	pc, [ip, #272]!	; 0x110

Disassembly of section .text:

00010fd4 <.text>:
   10fd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fd8:	mov	r7, r0
   10fdc:	sub	sp, sp, #20
   10fe0:	ldr	r0, [r1]
   10fe4:	mov	r6, r1
   10fe8:	bl	11ef0 <close@plt+0xf28>
   10fec:	ldr	r1, [pc, #472]	; 111cc <close@plt+0x204>
   10ff0:	mov	r0, #6
   10ff4:	bl	10f68 <setlocale@plt>
   10ff8:	ldr	sl, [pc, #464]	; 111d0 <close@plt+0x208>
   10ffc:	ldr	r1, [pc, #464]	; 111d4 <close@plt+0x20c>
   11000:	ldr	r0, [pc, #464]	; 111d8 <close@plt+0x210>
   11004:	bl	10fa4 <bindtextdomain@plt>
   11008:	ldr	r5, [pc, #460]	; 111dc <close@plt+0x214>
   1100c:	ldr	r0, [pc, #452]	; 111d8 <close@plt+0x210>
   11010:	ldr	r8, [pc, #456]	; 111e0 <close@plt+0x218>
   11014:	ldr	fp, [pc, #456]	; 111e4 <close@plt+0x21c>
   11018:	bl	10e24 <textdomain@plt>
   1101c:	add	r9, sl, #92	; 0x5c
   11020:	ldr	r0, [pc, #448]	; 111e8 <close@plt+0x220>
   11024:	bl	15038 <close@plt+0x4070>
   11028:	mov	r3, #0
   1102c:	strb	r3, [r5]
   11030:	strb	r3, [r5, #8]
   11034:	mov	r4, #0
   11038:	str	r4, [sp]
   1103c:	mov	r3, r9
   11040:	mov	r2, r8
   11044:	mov	r1, r6
   11048:	mov	r0, r7
   1104c:	bl	10eb4 <getopt_long@plt>
   11050:	cmn	r0, #1
   11054:	beq	11128 <close@plt+0x160>
   11058:	cmp	r0, #97	; 0x61
   1105c:	beq	1111c <close@plt+0x154>
   11060:	ble	11078 <close@plt+0xb0>
   11064:	cmp	r0, #105	; 0x69
   11068:	bne	110bc <close@plt+0xf4>
   1106c:	mov	r3, #1
   11070:	strb	r3, [r5, #8]
   11074:	b	11034 <close@plt+0x6c>
   11078:	cmn	r0, #3
   1107c:	bne	1110c <close@plt+0x144>
   11080:	ldr	ip, [pc, #356]	; 111ec <close@plt+0x224>
   11084:	ldr	r1, [pc, #356]	; 111f0 <close@plt+0x228>
   11088:	ldr	r3, [pc, #356]	; 111f4 <close@plt+0x22c>
   1108c:	ldr	r0, [pc, #356]	; 111f8 <close@plt+0x230>
   11090:	ldr	r2, [pc, #356]	; 111fc <close@plt+0x234>
   11094:	str	r4, [sp, #12]
   11098:	ldr	r0, [r0]
   1109c:	ldr	r3, [r3]
   110a0:	stmib	sp, {r1, ip}
   110a4:	str	r2, [sp]
   110a8:	ldr	r1, [pc, #336]	; 11200 <close@plt+0x238>
   110ac:	ldr	r2, [pc, #336]	; 11204 <close@plt+0x23c>
   110b0:	bl	145cc <close@plt+0x3604>
   110b4:	mov	r0, r4
   110b8:	bl	10ecc <exit@plt>
   110bc:	cmp	r0, #112	; 0x70
   110c0:	bne	11198 <close@plt+0x1d0>
   110c4:	ldr	r1, [fp]
   110c8:	cmp	r1, #0
   110cc:	moveq	r3, #2
   110d0:	streq	r3, [r5, #4]
   110d4:	beq	11034 <close@plt+0x6c>
   110d8:	ldr	r2, [pc, #296]	; 11208 <close@plt+0x240>
   110dc:	ldr	r3, [pc, #296]	; 1120c <close@plt+0x244>
   110e0:	mov	r0, #4
   110e4:	ldr	r2, [r2]
   110e8:	str	r0, [sp]
   110ec:	str	r2, [sp, #4]
   110f0:	ldr	r0, [pc, #280]	; 11210 <close@plt+0x248>
   110f4:	add	r2, r3, #16
   110f8:	bl	11c74 <close@plt+0xcac>
   110fc:	add	r0, sl, r0, lsl #2
   11100:	ldr	r3, [r0, #56]	; 0x38
   11104:	str	r3, [r5, #4]
   11108:	b	11034 <close@plt+0x6c>
   1110c:	cmn	r0, #2
   11110:	bne	11198 <close@plt+0x1d0>
   11114:	mov	r0, r4
   11118:	bl	116ec <close@plt+0x724>
   1111c:	mov	r3, #1
   11120:	strb	r3, [r5]
   11124:	b	11034 <close@plt+0x6c>
   11128:	ldrb	r3, [r5, #8]
   1112c:	cmp	r3, r4
   11130:	bne	11178 <close@plt+0x1b0>
   11134:	ldr	r3, [r5, #4]
   11138:	cmp	r3, #0
   1113c:	bne	11188 <close@plt+0x1c0>
   11140:	ldr	r3, [pc, #204]	; 11214 <close@plt+0x24c>
   11144:	ldr	r1, [r3]
   11148:	sub	r0, r7, r1
   1114c:	add	r1, r6, r1, lsl #2
   11150:	bl	11310 <close@plt+0x348>
   11154:	mov	r4, r0
   11158:	mov	r0, #0
   1115c:	bl	10fc8 <close@plt>
   11160:	cmp	r0, #0
   11164:	bne	111a0 <close@plt+0x1d8>
   11168:	eor	r0, r4, #1
   1116c:	uxtb	r0, r0
   11170:	add	sp, sp, #20
   11174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11178:	mov	r1, #1
   1117c:	mov	r0, #2
   11180:	bl	10ddc <signal@plt>
   11184:	b	11134 <close@plt+0x16c>
   11188:	mov	r1, #1
   1118c:	mov	r0, #13
   11190:	bl	10ddc <signal@plt>
   11194:	b	11140 <close@plt+0x178>
   11198:	mov	r0, #1
   1119c:	bl	116ec <close@plt+0x724>
   111a0:	bl	10ee4 <__errno_location@plt>
   111a4:	mov	r2, #5
   111a8:	ldr	r1, [pc, #104]	; 11218 <close@plt+0x250>
   111ac:	ldr	r4, [r0]
   111b0:	mov	r0, #0
   111b4:	bl	10e00 <dcgettext@plt>
   111b8:	mov	r1, r4
   111bc:	ldr	r2, [pc, #88]	; 1121c <close@plt+0x254>
   111c0:	mov	r3, r0
   111c4:	mov	r0, #1
   111c8:	bl	10e78 <error@plt>
   111cc:	andeq	r5, r1, r8, lsl #3
   111d0:	andeq	r5, r1, ip, asr r0
   111d4:	andeq	r5, r1, r4, lsr r6
   111d8:	andeq	r5, r1, r8, lsl #11
   111dc:	andeq	r6, r2, r8, ror #2
   111e0:	andeq	r5, r1, r8, lsl #13
   111e4:	andeq	r6, r2, r0, ror #2
   111e8:	andeq	r1, r1, r8, asr #26
   111ec:	andeq	r5, r1, r8, asr r6
   111f0:	andeq	r5, r1, r8, ror #12
   111f4:	strdeq	r6, [r2], -r0
   111f8:	andeq	r6, r2, ip, asr r1
   111fc:	andeq	r5, r1, ip, ror r6
   11200:	andeq	r5, r1, ip, lsr r1
   11204:	andeq	r5, r1, r4, lsl #11
   11208:	strdeq	r6, [r2], -r4
   1120c:	muleq	r1, r4, r0
   11210:	andeq	r5, r1, r8, asr #12
   11214:	andeq	r6, r2, r8, asr #2
   11218:	andeq	r5, r1, ip, lsl #13
   1121c:	andeq	r5, r1, r8, ror #15
   11220:	mov	fp, #0
   11224:	mov	lr, #0
   11228:	pop	{r1}		; (ldr r1, [sp], #4)
   1122c:	mov	r2, sp
   11230:	push	{r2}		; (str r2, [sp, #-4]!)
   11234:	push	{r0}		; (str r0, [sp, #-4]!)
   11238:	ldr	ip, [pc, #16]	; 11250 <close@plt+0x288>
   1123c:	push	{ip}		; (str ip, [sp, #-4]!)
   11240:	ldr	r0, [pc, #12]	; 11254 <close@plt+0x28c>
   11244:	ldr	r3, [pc, #12]	; 11258 <close@plt+0x290>
   11248:	bl	10e90 <__libc_start_main@plt>
   1124c:	bl	10fbc <abort@plt>
   11250:	andeq	r5, r1, r4, lsr r0
   11254:	ldrdeq	r0, [r1], -r4
   11258:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1125c:	ldr	r3, [pc, #20]	; 11278 <close@plt+0x2b0>
   11260:	ldr	r2, [pc, #20]	; 1127c <close@plt+0x2b4>
   11264:	add	r3, pc, r3
   11268:	ldr	r2, [r3, r2]
   1126c:	cmp	r2, #0
   11270:	bxeq	lr
   11274:	b	10ea8 <__gmon_start__@plt>
   11278:	muleq	r1, r4, sp
   1127c:	andeq	r0, r0, r4, ror #1
   11280:	ldr	r0, [pc, #24]	; 112a0 <close@plt+0x2d8>
   11284:	ldr	r3, [pc, #24]	; 112a4 <close@plt+0x2dc>
   11288:	cmp	r3, r0
   1128c:	bxeq	lr
   11290:	ldr	r3, [pc, #16]	; 112a8 <close@plt+0x2e0>
   11294:	cmp	r3, #0
   11298:	bxeq	lr
   1129c:	bx	r3
   112a0:	andeq	r6, r2, ip, lsr r1
   112a4:	andeq	r6, r2, ip, lsr r1
   112a8:	andeq	r0, r0, r0
   112ac:	ldr	r0, [pc, #36]	; 112d8 <close@plt+0x310>
   112b0:	ldr	r1, [pc, #36]	; 112dc <close@plt+0x314>
   112b4:	sub	r1, r1, r0
   112b8:	asr	r1, r1, #2
   112bc:	add	r1, r1, r1, lsr #31
   112c0:	asrs	r1, r1, #1
   112c4:	bxeq	lr
   112c8:	ldr	r3, [pc, #16]	; 112e0 <close@plt+0x318>
   112cc:	cmp	r3, #0
   112d0:	bxeq	lr
   112d4:	bx	r3
   112d8:	andeq	r6, r2, ip, lsr r1
   112dc:	andeq	r6, r2, ip, lsr r1
   112e0:	andeq	r0, r0, r0
   112e4:	push	{r4, lr}
   112e8:	ldr	r4, [pc, #24]	; 11308 <close@plt+0x340>
   112ec:	ldrb	r3, [r4]
   112f0:	cmp	r3, #0
   112f4:	popne	{r4, pc}
   112f8:	bl	11280 <close@plt+0x2b8>
   112fc:	mov	r3, #1
   11300:	strb	r3, [r4]
   11304:	pop	{r4, pc}
   11308:	andeq	r6, r2, r4, ror #2
   1130c:	b	112ac <close@plt+0x2e4>
   11310:	ldr	r3, [pc, #944]	; 116c8 <close@plt+0x700>
   11314:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11318:	sub	sp, sp, #8192	; 0x2000
   1131c:	ldrb	r2, [r3]
   11320:	ldr	r3, [pc, #932]	; 116cc <close@plt+0x704>
   11324:	ldr	r8, [pc, #932]	; 116d0 <close@plt+0x708>
   11328:	cmp	r2, #0
   1132c:	moveq	r8, r3
   11330:	ldr	r3, [pc, #924]	; 116d4 <close@plt+0x70c>
   11334:	sub	sp, sp, #36	; 0x24
   11338:	ldr	ip, [pc, #920]	; 116d8 <close@plt+0x710>
   1133c:	add	r2, sp, #8192	; 0x2000
   11340:	ldr	r3, [r3]
   11344:	mov	r4, r0
   11348:	add	r2, r2, #28
   1134c:	str	r0, [sp, #8]
   11350:	add	r4, r4, #1
   11354:	mov	r5, r1
   11358:	ldr	r0, [ip]
   1135c:	mov	r1, #2
   11360:	str	r3, [r2]
   11364:	bl	11e24 <close@plt+0xe5c>
   11368:	lsrs	r3, r4, #30
   1136c:	movne	r6, #1
   11370:	moveq	r6, #0
   11374:	lsls	r4, r4, #2
   11378:	bmi	116c0 <close@plt+0x6f8>
   1137c:	cmp	r6, #0
   11380:	bne	116c0 <close@plt+0x6f8>
   11384:	mov	r0, r4
   11388:	bl	146d0 <close@plt+0x3708>
   1138c:	ldr	r7, [pc, #840]	; 116dc <close@plt+0x714>
   11390:	mov	r2, #5
   11394:	ldr	r1, [pc, #836]	; 116e0 <close@plt+0x718>
   11398:	ldr	r3, [r7]
   1139c:	mov	sl, r0
   113a0:	str	r0, [sp, #12]
   113a4:	str	r3, [sl]
   113a8:	mov	r0, r6
   113ac:	bl	10e00 <dcgettext@plt>
   113b0:	mov	r3, r6
   113b4:	mov	r1, r6
   113b8:	mov	r2, #2
   113bc:	sub	r6, r5, #4
   113c0:	str	r6, [sp, #16]
   113c4:	str	r0, [r5, #-4]
   113c8:	ldr	r0, [r7]
   113cc:	bl	10efc <setvbuf@plt>
   113d0:	ldr	r3, [sp, #8]
   113d4:	cmp	r3, #0
   113d8:	ble	116ac <close@plt+0x6e4>
   113dc:	sub	r3, r4, #4
   113e0:	mov	r7, #1
   113e4:	str	r3, [sp, #20]
   113e8:	str	r7, [sp, #4]
   113ec:	mov	r4, r6
   113f0:	add	r9, r6, r3
   113f4:	mov	r5, sl
   113f8:	b	11418 <close@plt+0x450>
   113fc:	mov	r3, #0
   11400:	mov	r1, r3
   11404:	mov	r2, #2
   11408:	bl	10efc <setvbuf@plt>
   1140c:	cmp	r4, r9
   11410:	add	r7, r7, #1
   11414:	beq	11484 <close@plt+0x4bc>
   11418:	mov	r1, r8
   1141c:	ldr	r0, [r4, #4]!
   11420:	bl	11e58 <close@plt+0xe90>
   11424:	cmp	r0, #0
   11428:	mov	fp, r0
   1142c:	str	r0, [r5, #4]!
   11430:	bne	113fc <close@plt+0x434>
   11434:	ldr	r3, [pc, #652]	; 116c8 <close@plt+0x700>
   11438:	str	r0, [sp, #4]
   1143c:	ldr	r6, [r3, #4]
   11440:	sub	r6, r6, #3
   11444:	cmp	r6, #1
   11448:	movhi	r6, #0
   1144c:	movls	r6, #1
   11450:	bl	10ee4 <__errno_location@plt>
   11454:	ldr	r2, [r4]
   11458:	mov	r1, #3
   1145c:	ldr	sl, [r0]
   11460:	mov	r0, fp
   11464:	bl	13f88 <close@plt+0x2fc0>
   11468:	ldr	r2, [pc, #628]	; 116e4 <close@plt+0x71c>
   1146c:	mov	r1, sl
   11470:	mov	r3, r0
   11474:	mov	r0, r6
   11478:	bl	10e78 <error@plt>
   1147c:	cmp	r4, r9
   11480:	bne	11418 <close@plt+0x450>
   11484:	cmp	r7, #0
   11488:	beq	114d4 <close@plt+0x50c>
   1148c:	ldr	r3, [sp, #12]
   11490:	ldr	r2, [sp, #20]
   11494:	add	r8, r3, r2
   11498:	mov	r2, #8192	; 0x2000
   1149c:	add	r1, sp, #28
   114a0:	mov	r0, #0
   114a4:	bl	10d94 <read@plt>
   114a8:	subs	r9, r0, #0
   114ac:	bge	11590 <close@plt+0x5c8>
   114b0:	bl	10ee4 <__errno_location@plt>
   114b4:	ldr	r3, [r0]
   114b8:	cmp	r3, #4
   114bc:	beq	11584 <close@plt+0x5bc>
   114c0:	cmn	r9, #1
   114c4:	beq	11678 <close@plt+0x6b0>
   114c8:	ldr	r3, [sp, #8]
   114cc:	cmp	r3, #0
   114d0:	ble	11550 <close@plt+0x588>
   114d4:	ldr	r7, [pc, #520]	; 116e4 <close@plt+0x71c>
   114d8:	ldr	r5, [sp, #12]
   114dc:	mov	r4, #1
   114e0:	ldr	r9, [sp, #16]
   114e4:	ldr	r6, [sp, #8]
   114e8:	b	114f8 <close@plt+0x530>
   114ec:	add	r4, r4, #1
   114f0:	cmp	r6, r4
   114f4:	blt	11550 <close@plt+0x588>
   114f8:	ldr	r0, [r5, #4]!
   114fc:	cmp	r0, #0
   11500:	beq	114ec <close@plt+0x524>
   11504:	bl	14958 <close@plt+0x3990>
   11508:	cmp	r0, #0
   1150c:	beq	114ec <close@plt+0x524>
   11510:	bl	10ee4 <__errno_location@plt>
   11514:	mov	r3, #0
   11518:	ldr	r2, [r9, r4, lsl #2]
   1151c:	mov	r1, #3
   11520:	str	r3, [sp, #4]
   11524:	add	r4, r4, #1
   11528:	ldr	r8, [r0]
   1152c:	mov	r0, r3
   11530:	bl	13f88 <close@plt+0x2fc0>
   11534:	mov	r2, r7
   11538:	mov	r1, r8
   1153c:	mov	r3, r0
   11540:	mov	r0, #0
   11544:	bl	10e78 <error@plt>
   11548:	cmp	r6, r4
   1154c:	bge	114f8 <close@plt+0x530>
   11550:	ldr	r0, [sp, #12]
   11554:	bl	10dac <free@plt>
   11558:	add	r3, sp, #8192	; 0x2000
   1155c:	add	r3, r3, #28
   11560:	ldr	r2, [r3]
   11564:	ldr	r3, [pc, #360]	; 116d4 <close@plt+0x70c>
   11568:	ldr	r0, [sp, #4]
   1156c:	ldr	r3, [r3]
   11570:	cmp	r2, r3
   11574:	bne	116c4 <close@plt+0x6fc>
   11578:	add	sp, sp, #8192	; 0x2000
   1157c:	add	sp, sp, #36	; 0x24
   11580:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11584:	cmp	r7, #0
   11588:	bne	11498 <close@plt+0x4d0>
   1158c:	b	114c0 <close@plt+0x4f8>
   11590:	beq	114c8 <close@plt+0x500>
   11594:	ldr	r3, [sp, #8]
   11598:	cmp	r3, #0
   1159c:	blt	11584 <close@plt+0x5bc>
   115a0:	ldr	r3, [sp, #12]
   115a4:	ldr	r6, [sp, #16]
   115a8:	sub	r4, r3, #4
   115ac:	b	11610 <close@plt+0x648>
   115b0:	cmp	r5, r3
   115b4:	bne	115c0 <close@plt+0x5f8>
   115b8:	mov	r0, r5
   115bc:	bl	10f8c <clearerr_unlocked@plt>
   115c0:	ldr	r2, [r6]
   115c4:	mov	r1, #3
   115c8:	mov	r0, #0
   115cc:	bl	13f88 <close@plt+0x2fc0>
   115d0:	sub	fp, fp, #3
   115d4:	mov	r3, #0
   115d8:	cmp	fp, #1
   115dc:	str	r3, [sp, #4]
   115e0:	mov	r1, sl
   115e4:	ldr	r2, [pc, #248]	; 116e4 <close@plt+0x71c>
   115e8:	mov	r3, r0
   115ec:	movhi	r0, #0
   115f0:	movls	r0, #1
   115f4:	bl	10e78 <error@plt>
   115f8:	sub	r7, r7, #1
   115fc:	mov	r3, #0
   11600:	str	r3, [r4]
   11604:	cmp	r4, r8
   11608:	add	r6, r6, #4
   1160c:	beq	11584 <close@plt+0x5bc>
   11610:	ldr	r5, [r4, #4]!
   11614:	cmp	r5, #0
   11618:	beq	11604 <close@plt+0x63c>
   1161c:	mov	r3, r5
   11620:	mov	r2, #1
   11624:	mov	r1, r9
   11628:	add	r0, sp, #28
   1162c:	bl	10de8 <fwrite_unlocked@plt>
   11630:	cmp	r0, #1
   11634:	beq	11604 <close@plt+0x63c>
   11638:	bl	10ee4 <__errno_location@plt>
   1163c:	ldr	r3, [pc, #132]	; 116c8 <close@plt+0x700>
   11640:	ldr	fp, [r3, #4]
   11644:	ldr	r3, [pc, #144]	; 116dc <close@plt+0x714>
   11648:	ldr	r3, [r3]
   1164c:	ldr	sl, [r0]
   11650:	cmp	sl, #32
   11654:	bne	115b0 <close@plt+0x5e8>
   11658:	bic	r2, fp, #2
   1165c:	cmp	r2, #1
   11660:	beq	115b0 <close@plt+0x5e8>
   11664:	cmp	r5, r3
   11668:	bne	115f8 <close@plt+0x630>
   1166c:	mov	r0, r5
   11670:	bl	10f8c <clearerr_unlocked@plt>
   11674:	b	115f8 <close@plt+0x630>
   11678:	bl	10ee4 <__errno_location@plt>
   1167c:	mov	r3, #0
   11680:	mov	r2, #5
   11684:	ldr	r1, [pc, #92]	; 116e8 <close@plt+0x720>
   11688:	str	r3, [sp, #4]
   1168c:	ldr	r4, [r0]
   11690:	mov	r0, r3
   11694:	bl	10e00 <dcgettext@plt>
   11698:	mov	r1, r4
   1169c:	mov	r2, r0
   116a0:	mov	r0, #0
   116a4:	bl	10e78 <error@plt>
   116a8:	b	114c8 <close@plt+0x500>
   116ac:	mov	r7, #1
   116b0:	sub	r3, r4, #4
   116b4:	str	r7, [sp, #4]
   116b8:	str	r3, [sp, #20]
   116bc:	b	1148c <close@plt+0x4c4>
   116c0:	bl	14918 <close@plt+0x3950>
   116c4:	bl	10e0c <__stack_chk_fail@plt>
   116c8:	andeq	r6, r2, r8, ror #2
   116cc:	andeq	r5, r1, ip, lsl r1
   116d0:	andeq	r5, r1, r8, lsl r1
   116d4:	andeq	r5, r2, r8, lsl #30
   116d8:	andeq	r6, r2, r8, asr r1
   116dc:	andeq	r6, r2, ip, asr r1
   116e0:	andeq	r5, r1, r0, lsr #2
   116e4:	andeq	r5, r1, r8, ror #15
   116e8:	andeq	r5, r1, r0, lsr r1
   116ec:	ldr	r3, [pc, #696]	; 119ac <close@plt+0x9e4>
   116f0:	push	{r7, lr}
   116f4:	sub	sp, sp, #64	; 0x40
   116f8:	ldr	r3, [r3]
   116fc:	subs	r4, r0, #0
   11700:	str	r3, [sp, #60]	; 0x3c
   11704:	beq	11740 <close@plt+0x778>
   11708:	ldr	r3, [pc, #672]	; 119b0 <close@plt+0x9e8>
   1170c:	mov	r2, #5
   11710:	ldr	r1, [pc, #668]	; 119b4 <close@plt+0x9ec>
   11714:	mov	r0, #0
   11718:	ldr	r5, [r3]
   1171c:	bl	10e00 <dcgettext@plt>
   11720:	ldr	r3, [pc, #656]	; 119b8 <close@plt+0x9f0>
   11724:	mov	r1, #1
   11728:	ldr	r3, [r3]
   1172c:	mov	r2, r0
   11730:	mov	r0, r5
   11734:	bl	10f2c <__fprintf_chk@plt>
   11738:	mov	r0, r4
   1173c:	bl	10ecc <exit@plt>
   11740:	mov	r2, #5
   11744:	ldr	r1, [pc, #624]	; 119bc <close@plt+0x9f4>
   11748:	bl	10e00 <dcgettext@plt>
   1174c:	ldr	r3, [pc, #612]	; 119b8 <close@plt+0x9f0>
   11750:	ldr	r5, [pc, #616]	; 119c0 <close@plt+0x9f8>
   11754:	ldr	r2, [r3]
   11758:	mov	r1, r0
   1175c:	mov	r0, #1
   11760:	bl	10f14 <__printf_chk@plt>
   11764:	mov	r2, #5
   11768:	ldr	r1, [pc, #596]	; 119c4 <close@plt+0x9fc>
   1176c:	mov	r0, r4
   11770:	bl	10e00 <dcgettext@plt>
   11774:	ldr	r1, [r5]
   11778:	bl	10d64 <fputs_unlocked@plt>
   1177c:	mov	r2, #5
   11780:	ldr	r1, [pc, #576]	; 119c8 <close@plt+0xa00>
   11784:	mov	r0, r4
   11788:	bl	10e00 <dcgettext@plt>
   1178c:	ldr	r1, [r5]
   11790:	bl	10d64 <fputs_unlocked@plt>
   11794:	mov	r2, #5
   11798:	ldr	r1, [pc, #556]	; 119cc <close@plt+0xa04>
   1179c:	mov	r0, r4
   117a0:	bl	10e00 <dcgettext@plt>
   117a4:	ldr	r1, [r5]
   117a8:	bl	10d64 <fputs_unlocked@plt>
   117ac:	mov	r2, #5
   117b0:	ldr	r1, [pc, #536]	; 119d0 <close@plt+0xa08>
   117b4:	mov	r0, r4
   117b8:	bl	10e00 <dcgettext@plt>
   117bc:	ldr	r1, [r5]
   117c0:	bl	10d64 <fputs_unlocked@plt>
   117c4:	mov	r2, #5
   117c8:	ldr	r1, [pc, #516]	; 119d4 <close@plt+0xa0c>
   117cc:	mov	r0, r4
   117d0:	bl	10e00 <dcgettext@plt>
   117d4:	ldr	r1, [r5]
   117d8:	bl	10d64 <fputs_unlocked@plt>
   117dc:	ldr	lr, [pc, #500]	; 119d8 <close@plt+0xa10>
   117e0:	add	ip, sp, #4
   117e4:	ldm	lr!, {r0, r1, r2, r3}
   117e8:	stmia	ip!, {r0, r1, r2, r3}
   117ec:	ldm	lr!, {r0, r1, r2, r3}
   117f0:	ldr	r6, [sp, #4]
   117f4:	stmia	ip!, {r0, r1, r2, r3}
   117f8:	cmp	r6, #0
   117fc:	ldm	lr!, {r0, r1, r2, r3}
   11800:	addeq	r5, sp, #4
   11804:	stmia	ip!, {r0, r1, r2, r3}
   11808:	ldm	lr, {r0, r1}
   1180c:	stm	ip, {r0, r1}
   11810:	beq	11840 <close@plt+0x878>
   11814:	ldr	r7, [pc, #448]	; 119dc <close@plt+0xa14>
   11818:	add	r5, sp, #4
   1181c:	b	1182c <close@plt+0x864>
   11820:	ldr	r6, [r5, #8]!
   11824:	cmp	r6, #0
   11828:	beq	11840 <close@plt+0x878>
   1182c:	mov	r1, r6
   11830:	mov	r0, r7
   11834:	bl	10d7c <strcmp@plt>
   11838:	cmp	r0, #0
   1183c:	bne	11820 <close@plt+0x858>
   11840:	ldr	r5, [r5, #4]
   11844:	mov	r2, #5
   11848:	cmp	r5, #0
   1184c:	ldr	r1, [pc, #396]	; 119e0 <close@plt+0xa18>
   11850:	beq	118f8 <close@plt+0x930>
   11854:	mov	r0, #0
   11858:	bl	10e00 <dcgettext@plt>
   1185c:	ldr	r3, [pc, #384]	; 119e4 <close@plt+0xa1c>
   11860:	ldr	r2, [pc, #384]	; 119e8 <close@plt+0xa20>
   11864:	mov	r1, r0
   11868:	mov	r0, #1
   1186c:	bl	10f14 <__printf_chk@plt>
   11870:	mov	r1, #0
   11874:	mov	r0, #5
   11878:	bl	10f68 <setlocale@plt>
   1187c:	cmp	r0, #0
   11880:	ldreq	r6, [pc, #340]	; 119dc <close@plt+0xa14>
   11884:	beq	118a0 <close@plt+0x8d8>
   11888:	mov	r2, #3
   1188c:	ldr	r1, [pc, #344]	; 119ec <close@plt+0xa24>
   11890:	bl	10fb0 <strncmp@plt>
   11894:	ldr	r6, [pc, #320]	; 119dc <close@plt+0xa14>
   11898:	cmp	r0, #0
   1189c:	bne	11988 <close@plt+0x9c0>
   118a0:	mov	r2, #5
   118a4:	ldr	r1, [pc, #324]	; 119f0 <close@plt+0xa28>
   118a8:	mov	r0, #0
   118ac:	bl	10e00 <dcgettext@plt>
   118b0:	ldr	r3, [pc, #292]	; 119dc <close@plt+0xa14>
   118b4:	ldr	r2, [pc, #296]	; 119e4 <close@plt+0xa1c>
   118b8:	mov	r1, r0
   118bc:	mov	r0, #1
   118c0:	bl	10f14 <__printf_chk@plt>
   118c4:	mov	r2, #5
   118c8:	ldr	r1, [pc, #292]	; 119f4 <close@plt+0xa2c>
   118cc:	mov	r0, #0
   118d0:	bl	10e00 <dcgettext@plt>
   118d4:	ldr	r2, [pc, #284]	; 119f8 <close@plt+0xa30>
   118d8:	cmp	r5, r6
   118dc:	ldr	r3, [pc, #280]	; 119fc <close@plt+0xa34>
   118e0:	movne	r3, r2
   118e4:	mov	r1, r0
   118e8:	mov	r2, r5
   118ec:	mov	r0, #1
   118f0:	bl	10f14 <__printf_chk@plt>
   118f4:	b	11738 <close@plt+0x770>
   118f8:	mov	r0, r5
   118fc:	bl	10e00 <dcgettext@plt>
   11900:	ldr	r3, [pc, #220]	; 119e4 <close@plt+0xa1c>
   11904:	ldr	r2, [pc, #220]	; 119e8 <close@plt+0xa20>
   11908:	mov	r1, r0
   1190c:	mov	r0, #1
   11910:	bl	10f14 <__printf_chk@plt>
   11914:	mov	r1, r5
   11918:	mov	r0, #5
   1191c:	bl	10f68 <setlocale@plt>
   11920:	cmp	r0, #0
   11924:	beq	1193c <close@plt+0x974>
   11928:	mov	r2, #3
   1192c:	ldr	r1, [pc, #184]	; 119ec <close@plt+0xa24>
   11930:	bl	10fb0 <strncmp@plt>
   11934:	cmp	r0, #0
   11938:	bne	11980 <close@plt+0x9b8>
   1193c:	mov	r2, #5
   11940:	ldr	r1, [pc, #168]	; 119f0 <close@plt+0xa28>
   11944:	mov	r0, #0
   11948:	bl	10e00 <dcgettext@plt>
   1194c:	ldr	r3, [pc, #136]	; 119dc <close@plt+0xa14>
   11950:	ldr	r2, [pc, #140]	; 119e4 <close@plt+0xa1c>
   11954:	mov	r5, r3
   11958:	mov	r1, r0
   1195c:	mov	r0, #1
   11960:	bl	10f14 <__printf_chk@plt>
   11964:	ldr	r1, [pc, #136]	; 119f4 <close@plt+0xa2c>
   11968:	mov	r2, #5
   1196c:	mov	r0, #0
   11970:	bl	10e00 <dcgettext@plt>
   11974:	ldr	r3, [pc, #128]	; 119fc <close@plt+0xa34>
   11978:	mov	r1, r0
   1197c:	b	118e8 <close@plt+0x920>
   11980:	ldr	r6, [pc, #84]	; 119dc <close@plt+0xa14>
   11984:	mov	r5, r6
   11988:	mov	r2, #5
   1198c:	ldr	r1, [pc, #108]	; 11a00 <close@plt+0xa38>
   11990:	mov	r0, #0
   11994:	bl	10e00 <dcgettext@plt>
   11998:	ldr	r2, [pc, #60]	; 119dc <close@plt+0xa14>
   1199c:	mov	r1, r0
   119a0:	mov	r0, #1
   119a4:	bl	10f14 <__printf_chk@plt>
   119a8:	b	118a0 <close@plt+0x8d8>
   119ac:	andeq	r5, r2, r8, lsl #30
   119b0:	andeq	r6, r2, r0, asr r1
   119b4:	andeq	r5, r1, r0, asr #2
   119b8:	andeq	r6, r2, ip, ror r1
   119bc:	andeq	r5, r1, r8, ror #2
   119c0:	andeq	r6, r2, ip, asr r1
   119c4:	andeq	r5, r1, ip, lsl #3
   119c8:	andeq	r5, r1, ip, asr #4
   119cc:	ldrdeq	r5, [r1], -ip
   119d0:	andeq	r5, r1, ip, lsl #6
   119d4:	andeq	r5, r1, r4, asr #6
   119d8:	andeq	r5, r1, ip, asr r0
   119dc:	andeq	r5, r1, ip, lsr r1
   119e0:	andeq	r5, r1, r4, asr #10
   119e4:	andeq	r5, r1, ip, asr r5
   119e8:	andeq	r5, r1, r4, lsl #11
   119ec:	muleq	r1, r4, r5
   119f0:	andeq	r5, r1, r0, ror #11
   119f4:	andeq	r5, r1, r0, lsl #12
   119f8:	andeq	r5, r1, r8, lsl #3
   119fc:	andeq	r5, r1, r4, lsr #13
   11a00:	muleq	r1, r8, r5
   11a04:	mov	r0, #1
   11a08:	b	116ec <close@plt+0x724>
   11a0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a10:	mov	r5, r1
   11a14:	sub	sp, sp, #12
   11a18:	mov	r4, r2
   11a1c:	str	r2, [sp]
   11a20:	mov	r7, r3
   11a24:	mov	sl, r0
   11a28:	bl	10ed8 <strlen@plt>
   11a2c:	ldr	fp, [r5]
   11a30:	cmp	fp, #0
   11a34:	beq	11af8 <close@plt+0xb30>
   11a38:	mov	r6, #0
   11a3c:	mov	r8, r0
   11a40:	str	r6, [sp, #4]
   11a44:	mvn	r9, #0
   11a48:	b	11a74 <close@plt+0xaac>
   11a4c:	bl	10df4 <memcmp@plt>
   11a50:	ldr	r3, [sp, #4]
   11a54:	cmp	r0, #0
   11a58:	movne	r3, #1
   11a5c:	str	r3, [sp, #4]
   11a60:	ldr	fp, [r5, #4]!
   11a64:	add	r6, r6, #1
   11a68:	cmp	fp, #0
   11a6c:	add	r4, r4, r7
   11a70:	beq	11ad0 <close@plt+0xb08>
   11a74:	mov	r2, r8
   11a78:	mov	r1, sl
   11a7c:	mov	r0, fp
   11a80:	bl	10fb0 <strncmp@plt>
   11a84:	cmp	r0, #0
   11a88:	mov	r0, fp
   11a8c:	bne	11a60 <close@plt+0xa98>
   11a90:	bl	10ed8 <strlen@plt>
   11a94:	ldr	r3, [sp]
   11a98:	mov	r2, r7
   11a9c:	mov	r1, r4
   11aa0:	cmp	r0, r8
   11aa4:	mla	r0, r7, r9, r3
   11aa8:	beq	11ae8 <close@plt+0xb20>
   11aac:	cmn	r9, #1
   11ab0:	moveq	r9, r6
   11ab4:	beq	11a60 <close@plt+0xa98>
   11ab8:	ldr	r3, [sp]
   11abc:	cmp	r3, #0
   11ac0:	bne	11a4c <close@plt+0xa84>
   11ac4:	mov	r3, #1
   11ac8:	str	r3, [sp, #4]
   11acc:	b	11a60 <close@plt+0xa98>
   11ad0:	ldr	r3, [sp, #4]
   11ad4:	cmp	r3, #0
   11ad8:	mvnne	r9, #1
   11adc:	mov	r0, r9
   11ae0:	add	sp, sp, #12
   11ae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ae8:	mov	r9, r6
   11aec:	mov	r0, r9
   11af0:	add	sp, sp, #12
   11af4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11af8:	mvn	r9, #0
   11afc:	b	11adc <close@plt+0xb14>
   11b00:	cmn	r2, #1
   11b04:	push	{r4, r5, r6, lr}
   11b08:	mov	r2, #5
   11b0c:	sub	sp, sp, #8
   11b10:	mov	r5, r1
   11b14:	mov	r6, r0
   11b18:	ldreq	r1, [pc, #76]	; 11b6c <close@plt+0xba4>
   11b1c:	ldrne	r1, [pc, #76]	; 11b70 <close@plt+0xba8>
   11b20:	mov	r0, #0
   11b24:	bl	10e00 <dcgettext@plt>
   11b28:	mov	r2, r5
   11b2c:	mov	r1, #8
   11b30:	mov	r4, r0
   11b34:	mov	r0, #0
   11b38:	bl	13df8 <close@plt+0x2e30>
   11b3c:	mov	r1, r6
   11b40:	mov	r5, r0
   11b44:	mov	r0, #1
   11b48:	bl	14144 <close@plt+0x317c>
   11b4c:	mov	r1, #0
   11b50:	mov	r3, r5
   11b54:	mov	r2, r4
   11b58:	str	r0, [sp]
   11b5c:	mov	r0, r1
   11b60:	bl	10e78 <error@plt>
   11b64:	add	sp, sp, #8
   11b68:	pop	{r4, r5, r6, pc}
   11b6c:	andeq	r5, r1, r4, ror r7
   11b70:	muleq	r1, r0, r7
   11b74:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b78:	mov	r6, r0
   11b7c:	ldr	sl, [pc, #224]	; 11c64 <close@plt+0xc9c>
   11b80:	mov	r4, r1
   11b84:	mov	r7, r2
   11b88:	ldr	r1, [pc, #216]	; 11c68 <close@plt+0xca0>
   11b8c:	mov	r2, #5
   11b90:	mov	r0, #0
   11b94:	bl	10e00 <dcgettext@plt>
   11b98:	ldr	r1, [sl]
   11b9c:	bl	10d64 <fputs_unlocked@plt>
   11ba0:	ldr	fp, [r6]
   11ba4:	cmp	fp, #0
   11ba8:	movne	r9, #0
   11bac:	movne	r5, r9
   11bb0:	bne	11bec <close@plt+0xc24>
   11bb4:	b	11c30 <close@plt+0xc68>
   11bb8:	mov	r0, fp
   11bbc:	bl	14154 <close@plt+0x318c>
   11bc0:	ldr	r2, [pc, #164]	; 11c6c <close@plt+0xca4>
   11bc4:	mov	r1, #1
   11bc8:	mov	r9, r4
   11bcc:	mov	r3, r0
   11bd0:	mov	r0, r8
   11bd4:	bl	10f2c <__fprintf_chk@plt>
   11bd8:	ldr	fp, [r6, #4]!
   11bdc:	add	r5, r5, #1
   11be0:	cmp	fp, #0
   11be4:	add	r4, r4, r7
   11be8:	beq	11c30 <close@plt+0xc68>
   11bec:	cmp	r5, #0
   11bf0:	mov	r1, r4
   11bf4:	mov	r2, r7
   11bf8:	mov	r0, r9
   11bfc:	ldr	r8, [sl]
   11c00:	beq	11bb8 <close@plt+0xbf0>
   11c04:	bl	10df4 <memcmp@plt>
   11c08:	cmp	r0, #0
   11c0c:	bne	11bb8 <close@plt+0xbf0>
   11c10:	mov	r0, fp
   11c14:	bl	14154 <close@plt+0x318c>
   11c18:	ldr	r2, [pc, #80]	; 11c70 <close@plt+0xca8>
   11c1c:	mov	r1, #1
   11c20:	mov	r3, r0
   11c24:	mov	r0, r8
   11c28:	bl	10f2c <__fprintf_chk@plt>
   11c2c:	b	11bd8 <close@plt+0xc10>
   11c30:	ldr	r0, [sl]
   11c34:	ldr	r3, [r0, #20]
   11c38:	ldr	r2, [r0, #24]
   11c3c:	cmp	r3, r2
   11c40:	bcs	11c58 <close@plt+0xc90>
   11c44:	add	r1, r3, #1
   11c48:	mov	r2, #10
   11c4c:	str	r1, [r0, #20]
   11c50:	strb	r2, [r3]
   11c54:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c58:	mov	r1, #10
   11c5c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c60:	b	10f5c <__overflow@plt>
   11c64:	andeq	r6, r2, r0, asr r1
   11c68:			; <UNDEFINED> instruction: 0x000157b0
   11c6c:	andeq	r5, r1, r8, asr #15
   11c70:	ldrdeq	r5, [r1], -r0
   11c74:	push	{r4, r5, r6, r7, r8, lr}
   11c78:	mov	r6, r1
   11c7c:	mov	r4, r2
   11c80:	mov	r5, r3
   11c84:	mov	r7, r0
   11c88:	ldr	r3, [sp, #24]
   11c8c:	mov	r2, r5
   11c90:	mov	r1, r4
   11c94:	mov	r0, r6
   11c98:	bl	11a0c <close@plt+0xa44>
   11c9c:	cmp	r0, #0
   11ca0:	popge	{r4, r5, r6, r7, r8, pc}
   11ca4:	mov	r2, r0
   11ca8:	mov	r1, r6
   11cac:	mov	r0, r7
   11cb0:	bl	11b00 <close@plt+0xb38>
   11cb4:	mov	r0, r4
   11cb8:	ldr	r2, [sp, #24]
   11cbc:	mov	r1, r5
   11cc0:	bl	11b74 <close@plt+0xbac>
   11cc4:	ldr	r3, [sp, #28]
   11cc8:	blx	r3
   11ccc:	mvn	r0, #0
   11cd0:	pop	{r4, r5, r6, r7, r8, pc}
   11cd4:	push	{r4, r5, r6, r7, r8, lr}
   11cd8:	ldr	r7, [r1]
   11cdc:	cmp	r7, #0
   11ce0:	beq	11d20 <close@plt+0xd58>
   11ce4:	mov	r6, r3
   11ce8:	mov	r8, r0
   11cec:	mov	r4, r2
   11cf0:	mov	r5, r1
   11cf4:	b	11d04 <close@plt+0xd3c>
   11cf8:	ldr	r7, [r5, #4]!
   11cfc:	cmp	r7, #0
   11d00:	beq	11d20 <close@plt+0xd58>
   11d04:	mov	r1, r4
   11d08:	mov	r2, r6
   11d0c:	mov	r0, r8
   11d10:	bl	10df4 <memcmp@plt>
   11d14:	add	r4, r4, r6
   11d18:	cmp	r0, #0
   11d1c:	bne	11cf8 <close@plt+0xd30>
   11d20:	mov	r0, r7
   11d24:	pop	{r4, r5, r6, r7, r8, pc}
   11d28:	ldr	r3, [pc, #4]	; 11d34 <close@plt+0xd6c>
   11d2c:	str	r0, [r3]
   11d30:	bx	lr
   11d34:	andeq	r6, r2, r4, ror r1
   11d38:	ldr	r3, [pc, #4]	; 11d44 <close@plt+0xd7c>
   11d3c:	strb	r0, [r3, #4]
   11d40:	bx	lr
   11d44:	andeq	r6, r2, r4, ror r1
   11d48:	ldr	r3, [pc, #180]	; 11e04 <close@plt+0xe3c>
   11d4c:	push	{r4, r5, r6, lr}
   11d50:	sub	sp, sp, #8
   11d54:	ldr	r0, [r3]
   11d58:	bl	14cc4 <close@plt+0x3cfc>
   11d5c:	cmp	r0, #0
   11d60:	beq	11d88 <close@plt+0xdc0>
   11d64:	bl	10ee4 <__errno_location@plt>
   11d68:	ldr	r5, [pc, #152]	; 11e08 <close@plt+0xe40>
   11d6c:	ldrb	r3, [r5, #4]
   11d70:	cmp	r3, #0
   11d74:	mov	r4, r0
   11d78:	beq	11da4 <close@plt+0xddc>
   11d7c:	ldr	r3, [r0]
   11d80:	cmp	r3, #32
   11d84:	bne	11da4 <close@plt+0xddc>
   11d88:	ldr	r3, [pc, #124]	; 11e0c <close@plt+0xe44>
   11d8c:	ldr	r0, [r3]
   11d90:	bl	14cc4 <close@plt+0x3cfc>
   11d94:	cmp	r0, #0
   11d98:	bne	11de4 <close@plt+0xe1c>
   11d9c:	add	sp, sp, #8
   11da0:	pop	{r4, r5, r6, pc}
   11da4:	mov	r2, #5
   11da8:	ldr	r1, [pc, #96]	; 11e10 <close@plt+0xe48>
   11dac:	mov	r0, #0
   11db0:	bl	10e00 <dcgettext@plt>
   11db4:	mov	r6, r0
   11db8:	ldr	r0, [r5]
   11dbc:	cmp	r0, #0
   11dc0:	beq	11df0 <close@plt+0xe28>
   11dc4:	ldr	r4, [r4]
   11dc8:	bl	13f74 <close@plt+0x2fac>
   11dcc:	mov	r1, r4
   11dd0:	str	r6, [sp]
   11dd4:	ldr	r2, [pc, #56]	; 11e14 <close@plt+0xe4c>
   11dd8:	mov	r3, r0
   11ddc:	mov	r0, #0
   11de0:	bl	10e78 <error@plt>
   11de4:	ldr	r3, [pc, #44]	; 11e18 <close@plt+0xe50>
   11de8:	ldr	r0, [r3]
   11dec:	bl	10db8 <_exit@plt>
   11df0:	mov	r3, r6
   11df4:	ldr	r1, [r4]
   11df8:	ldr	r2, [pc, #28]	; 11e1c <close@plt+0xe54>
   11dfc:	bl	10e78 <error@plt>
   11e00:	b	11de4 <close@plt+0xe1c>
   11e04:	andeq	r6, r2, ip, asr r1
   11e08:	andeq	r6, r2, r4, ror r1
   11e0c:	andeq	r6, r2, r0, asr r1
   11e10:	ldrdeq	r5, [r1], -r8
   11e14:	andeq	r5, r1, r4, ror #15
   11e18:	strdeq	r6, [r2], -r8
   11e1c:	andeq	r5, r1, r8, ror #15
   11e20:	b	10d88 <posix_fadvise64@plt>
   11e24:	cmp	r0, #0
   11e28:	bxeq	lr
   11e2c:	push	{r4, lr}
   11e30:	sub	sp, sp, #16
   11e34:	mov	r4, r1
   11e38:	bl	10f20 <fileno@plt>
   11e3c:	mov	r2, #0
   11e40:	mov	r3, #0
   11e44:	str	r4, [sp, #8]
   11e48:	strd	r2, [sp]
   11e4c:	bl	10d88 <posix_fadvise64@plt>
   11e50:	add	sp, sp, #16
   11e54:	pop	{r4, pc}
   11e58:	push	{r4, r5, r6, lr}
   11e5c:	mov	r5, r1
   11e60:	bl	10f98 <fopen64@plt>
   11e64:	subs	r4, r0, #0
   11e68:	beq	11e78 <close@plt+0xeb0>
   11e6c:	bl	10f20 <fileno@plt>
   11e70:	cmp	r0, #2
   11e74:	bls	11e80 <close@plt+0xeb8>
   11e78:	mov	r0, r4
   11e7c:	pop	{r4, r5, r6, pc}
   11e80:	bl	1416c <close@plt+0x31a4>
   11e84:	subs	r6, r0, #0
   11e88:	blt	11ed0 <close@plt+0xf08>
   11e8c:	mov	r0, r4
   11e90:	bl	14958 <close@plt+0x3990>
   11e94:	cmp	r0, #0
   11e98:	bne	11eb0 <close@plt+0xee8>
   11e9c:	mov	r1, r5
   11ea0:	mov	r0, r6
   11ea4:	bl	10d4c <fdopen@plt>
   11ea8:	subs	r4, r0, #0
   11eac:	bne	11e78 <close@plt+0xeb0>
   11eb0:	bl	10ee4 <__errno_location@plt>
   11eb4:	mov	r4, #0
   11eb8:	mov	r5, r0
   11ebc:	mov	r0, r6
   11ec0:	ldr	r6, [r5]
   11ec4:	bl	10fc8 <close@plt>
   11ec8:	str	r6, [r5]
   11ecc:	b	11e78 <close@plt+0xeb0>
   11ed0:	bl	10ee4 <__errno_location@plt>
   11ed4:	mov	r5, r0
   11ed8:	mov	r0, r4
   11edc:	ldr	r6, [r5]
   11ee0:	mov	r4, #0
   11ee4:	bl	14958 <close@plt+0x3990>
   11ee8:	str	r6, [r5]
   11eec:	b	11e78 <close@plt+0xeb0>
   11ef0:	push	{r4, r5, r6, lr}
   11ef4:	subs	r4, r0, #0
   11ef8:	beq	11f6c <close@plt+0xfa4>
   11efc:	mov	r1, #47	; 0x2f
   11f00:	bl	10f74 <strrchr@plt>
   11f04:	subs	r5, r0, #0
   11f08:	beq	11f58 <close@plt+0xf90>
   11f0c:	add	r6, r5, #1
   11f10:	sub	r3, r6, r4
   11f14:	cmp	r3, #6
   11f18:	ble	11f58 <close@plt+0xf90>
   11f1c:	mov	r2, #7
   11f20:	ldr	r1, [pc, #96]	; 11f88 <close@plt+0xfc0>
   11f24:	sub	r0, r5, #6
   11f28:	bl	10fb0 <strncmp@plt>
   11f2c:	cmp	r0, #0
   11f30:	bne	11f58 <close@plt+0xf90>
   11f34:	mov	r2, #3
   11f38:	ldr	r1, [pc, #76]	; 11f8c <close@plt+0xfc4>
   11f3c:	mov	r0, r6
   11f40:	bl	10fb0 <strncmp@plt>
   11f44:	cmp	r0, #0
   11f48:	movne	r4, r6
   11f4c:	ldreq	r3, [pc, #60]	; 11f90 <close@plt+0xfc8>
   11f50:	addeq	r4, r5, #4
   11f54:	streq	r4, [r3]
   11f58:	ldr	r2, [pc, #52]	; 11f94 <close@plt+0xfcc>
   11f5c:	ldr	r3, [pc, #52]	; 11f98 <close@plt+0xfd0>
   11f60:	str	r4, [r2]
   11f64:	str	r4, [r3]
   11f68:	pop	{r4, r5, r6, pc}
   11f6c:	ldr	r3, [pc, #40]	; 11f9c <close@plt+0xfd4>
   11f70:	mov	r2, #55	; 0x37
   11f74:	mov	r1, #1
   11f78:	ldr	r3, [r3]
   11f7c:	ldr	r0, [pc, #28]	; 11fa0 <close@plt+0xfd8>
   11f80:	bl	10e3c <fwrite@plt>
   11f84:	bl	10fbc <abort@plt>
   11f88:	andeq	r5, r1, r4, lsr #16
   11f8c:	andeq	r5, r1, ip, lsr #16
   11f90:	andeq	r6, r2, r0, asr #2
   11f94:	andeq	r6, r2, ip, ror r1
   11f98:	andeq	r6, r2, r4, asr #2
   11f9c:	andeq	r6, r2, r0, asr r1
   11fa0:	andeq	r5, r1, ip, ror #15
   11fa4:	push	{r4, lr}
   11fa8:	mov	r2, #48	; 0x30
   11fac:	mov	r4, r1
   11fb0:	mov	r1, #0
   11fb4:	bl	10f08 <memset@plt>
   11fb8:	cmp	r4, #10
   11fbc:	beq	11fc8 <close@plt+0x1000>
   11fc0:	str	r4, [r0]
   11fc4:	pop	{r4, pc}
   11fc8:	bl	10fbc <abort@plt>
   11fcc:	push	{r4, r5, r6, lr}
   11fd0:	mov	r2, #5
   11fd4:	mov	r5, r0
   11fd8:	mov	r6, r1
   11fdc:	mov	r1, r0
   11fe0:	mov	r0, #0
   11fe4:	bl	10e00 <dcgettext@plt>
   11fe8:	cmp	r5, r0
   11fec:	mov	r4, r0
   11ff0:	beq	11ffc <close@plt+0x1034>
   11ff4:	mov	r0, r4
   11ff8:	pop	{r4, r5, r6, pc}
   11ffc:	bl	14d84 <close@plt+0x3dbc>
   12000:	ldrb	r3, [r0]
   12004:	bic	r3, r3, #32
   12008:	cmp	r3, #85	; 0x55
   1200c:	bne	1206c <close@plt+0x10a4>
   12010:	ldrb	r3, [r0, #1]
   12014:	bic	r3, r3, #32
   12018:	cmp	r3, #84	; 0x54
   1201c:	bne	120e4 <close@plt+0x111c>
   12020:	ldrb	r3, [r0, #2]
   12024:	bic	r3, r3, #32
   12028:	cmp	r3, #70	; 0x46
   1202c:	bne	120e4 <close@plt+0x111c>
   12030:	ldrb	r3, [r0, #3]
   12034:	cmp	r3, #45	; 0x2d
   12038:	bne	120e4 <close@plt+0x111c>
   1203c:	ldrb	r3, [r0, #4]
   12040:	cmp	r3, #56	; 0x38
   12044:	bne	120e4 <close@plt+0x111c>
   12048:	ldrb	r3, [r0, #5]
   1204c:	cmp	r3, #0
   12050:	bne	120e4 <close@plt+0x111c>
   12054:	ldrb	r2, [r4]
   12058:	ldr	r3, [pc, #156]	; 120fc <close@plt+0x1134>
   1205c:	ldr	r4, [pc, #156]	; 12100 <close@plt+0x1138>
   12060:	cmp	r2, #96	; 0x60
   12064:	movne	r4, r3
   12068:	b	11ff4 <close@plt+0x102c>
   1206c:	cmp	r3, #71	; 0x47
   12070:	bne	120e4 <close@plt+0x111c>
   12074:	ldrb	r3, [r0, #1]
   12078:	bic	r3, r3, #32
   1207c:	cmp	r3, #66	; 0x42
   12080:	bne	120e4 <close@plt+0x111c>
   12084:	ldrb	r3, [r0, #2]
   12088:	cmp	r3, #49	; 0x31
   1208c:	bne	120e4 <close@plt+0x111c>
   12090:	ldrb	r3, [r0, #3]
   12094:	cmp	r3, #56	; 0x38
   12098:	bne	120e4 <close@plt+0x111c>
   1209c:	ldrb	r3, [r0, #4]
   120a0:	cmp	r3, #48	; 0x30
   120a4:	bne	120e4 <close@plt+0x111c>
   120a8:	ldrb	r3, [r0, #5]
   120ac:	cmp	r3, #51	; 0x33
   120b0:	bne	120e4 <close@plt+0x111c>
   120b4:	ldrb	r3, [r0, #6]
   120b8:	cmp	r3, #48	; 0x30
   120bc:	bne	120e4 <close@plt+0x111c>
   120c0:	ldrb	r3, [r0, #7]
   120c4:	cmp	r3, #0
   120c8:	bne	120e4 <close@plt+0x111c>
   120cc:	ldrb	r2, [r4]
   120d0:	ldr	r3, [pc, #44]	; 12104 <close@plt+0x113c>
   120d4:	ldr	r4, [pc, #44]	; 12108 <close@plt+0x1140>
   120d8:	cmp	r2, #96	; 0x60
   120dc:	movne	r4, r3
   120e0:	b	11ff4 <close@plt+0x102c>
   120e4:	ldr	r3, [pc, #32]	; 1210c <close@plt+0x1144>
   120e8:	ldr	r4, [pc, #32]	; 12110 <close@plt+0x1148>
   120ec:	cmp	r6, #9
   120f0:	movne	r4, r3
   120f4:	mov	r0, r4
   120f8:	pop	{r4, r5, r6, pc}
   120fc:	andeq	r5, r1, r8, lsl #17
   12100:	muleq	r1, r4, r8
   12104:	andeq	r5, r1, ip, lsl #17
   12108:	muleq	r1, r0, r8
   1210c:	muleq	r1, r8, r8
   12110:	andeq	r5, r1, r4, lsl #17
   12114:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12118:	sub	sp, sp, #124	; 0x7c
   1211c:	ldr	ip, [pc, #3576]	; 12f1c <close@plt+0x1f54>
   12120:	str	r3, [sp, #24]
   12124:	ldr	r3, [sp, #168]	; 0xa8
   12128:	ldr	ip, [ip]
   1212c:	str	r3, [sp, #56]	; 0x38
   12130:	ldr	r3, [sp, #172]	; 0xac
   12134:	ldr	r8, [sp, #160]	; 0xa0
   12138:	str	r3, [sp, #80]	; 0x50
   1213c:	ldr	r3, [sp, #176]	; 0xb0
   12140:	mov	fp, r0
   12144:	str	r3, [sp, #76]	; 0x4c
   12148:	mov	sl, r1
   1214c:	str	r2, [sp, #36]	; 0x24
   12150:	str	ip, [sp, #116]	; 0x74
   12154:	bl	10e54 <__ctype_get_mb_cur_max@plt>
   12158:	ldr	r3, [sp, #164]	; 0xa4
   1215c:	ands	r4, r3, #2
   12160:	movne	r3, #1
   12164:	moveq	r3, #0
   12168:	str	r3, [sp, #32]
   1216c:	str	r0, [sp, #64]	; 0x40
   12170:	cmp	r8, #10
   12174:	ldrls	pc, [pc, r8, lsl #2]
   12178:	b	13928 <close@plt+0x2960>
   1217c:	andeq	r2, r1, r0, ror r5
   12180:	andeq	r2, r1, r8, lsl #12
   12184:	andeq	r2, r1, r8, lsl #24
   12188:	andeq	r2, r1, r8, lsr #12
   1218c:	ldrdeq	r2, [r1], -ip
   12190:	andeq	r2, r1, r4, lsr #10
   12194:	andeq	r2, r1, r0, lsr #11
   12198:	ldrdeq	r2, [r1], -r8
   1219c:	andeq	r2, r1, r8, lsr #3
   121a0:	andeq	r2, r1, r8, lsr #3
   121a4:	andeq	r2, r1, r8, lsr #3
   121a8:	cmp	r8, #10
   121ac:	beq	121d0 <close@plt+0x1208>
   121b0:	mov	r1, r8
   121b4:	ldr	r0, [pc, #3428]	; 12f20 <close@plt+0x1f58>
   121b8:	bl	11fcc <close@plt+0x1004>
   121bc:	mov	r1, r8
   121c0:	str	r0, [sp, #80]	; 0x50
   121c4:	ldr	r0, [pc, #3420]	; 12f28 <close@plt+0x1f60>
   121c8:	bl	11fcc <close@plt+0x1004>
   121cc:	str	r0, [sp, #76]	; 0x4c
   121d0:	cmp	r4, #0
   121d4:	movne	r4, #0
   121d8:	beq	135e8 <close@plt+0x2620>
   121dc:	ldr	r7, [sp, #76]	; 0x4c
   121e0:	mov	r5, #0
   121e4:	mov	r6, #1
   121e8:	mov	r0, r7
   121ec:	str	r6, [sp, #40]	; 0x28
   121f0:	str	r5, [sp, #68]	; 0x44
   121f4:	bl	10ed8 <strlen@plt>
   121f8:	str	r6, [sp, #28]
   121fc:	str	r5, [sp, #44]	; 0x2c
   12200:	str	r5, [sp, #72]	; 0x48
   12204:	str	r7, [sp, #60]	; 0x3c
   12208:	str	r0, [sp, #52]	; 0x34
   1220c:	str	r8, [sp, #160]	; 0xa0
   12210:	mov	r8, fp
   12214:	ldr	fp, [sp, #160]	; 0xa0
   12218:	mov	r9, #0
   1221c:	ldr	r3, [sp, #24]
   12220:	cmn	r3, #1
   12224:	beq	1278c <close@plt+0x17c4>
   12228:	ldr	r3, [sp, #24]
   1222c:	subs	r6, r3, r9
   12230:	movne	r6, #1
   12234:	cmp	r6, #0
   12238:	beq	127a4 <close@plt+0x17dc>
   1223c:	ldr	r7, [sp, #28]
   12240:	ldr	r0, [sp, #36]	; 0x24
   12244:	cmp	fp, #2
   12248:	moveq	r7, #0
   1224c:	andne	r7, r7, #1
   12250:	add	r3, r0, r9
   12254:	cmp	r7, #0
   12258:	str	r3, [sp, #48]	; 0x30
   1225c:	beq	12c48 <close@plt+0x1c80>
   12260:	ldr	r2, [sp, #52]	; 0x34
   12264:	cmp	r2, #0
   12268:	beq	12f2c <close@plt+0x1f64>
   1226c:	ldr	r1, [sp, #24]
   12270:	cmp	r2, #1
   12274:	mov	r3, r2
   12278:	movls	r3, #0
   1227c:	movhi	r3, #1
   12280:	cmn	r1, #1
   12284:	movne	r3, #0
   12288:	cmp	r3, #0
   1228c:	add	r5, r9, r2
   12290:	beq	1229c <close@plt+0x12d4>
   12294:	bl	10ed8 <strlen@plt>
   12298:	str	r0, [sp, #24]
   1229c:	ldr	r3, [sp, #24]
   122a0:	cmp	r5, r3
   122a4:	bhi	12f2c <close@plt+0x1f64>
   122a8:	ldr	r2, [sp, #52]	; 0x34
   122ac:	ldr	r1, [sp, #60]	; 0x3c
   122b0:	ldr	r0, [sp, #48]	; 0x30
   122b4:	bl	10df4 <memcmp@plt>
   122b8:	cmp	r0, #0
   122bc:	bne	12f2c <close@plt+0x1f64>
   122c0:	ldr	r3, [sp, #32]
   122c4:	cmp	r3, #0
   122c8:	bne	137e8 <close@plt+0x2820>
   122cc:	ldr	r3, [sp, #48]	; 0x30
   122d0:	ldrb	r5, [r3]
   122d4:	cmp	r5, #126	; 0x7e
   122d8:	ldrls	pc, [pc, r5, lsl #2]
   122dc:	b	12bac <close@plt+0x1be4>
   122e0:	muleq	r1, r8, sl
   122e4:	andeq	r2, r1, ip, lsr #23
   122e8:	andeq	r2, r1, ip, lsr #23
   122ec:	andeq	r2, r1, ip, lsr #23
   122f0:	andeq	r2, r1, ip, lsr #23
   122f4:	andeq	r2, r1, ip, lsr #23
   122f8:	andeq	r2, r1, ip, lsr #23
   122fc:	andeq	r2, r1, r4, ror #22
   12300:	andeq	r2, r1, r4, asr fp
   12304:	andeq	r2, r1, r4, asr sl
   12308:	andeq	r2, r1, ip, lsl sl
   1230c:	andeq	r2, r1, r4, ror sl
   12310:	andeq	r2, r1, ip, asr sl
   12314:	andeq	r2, r1, ip, lsl #19
   12318:	andeq	r2, r1, ip, lsr #23
   1231c:	andeq	r2, r1, ip, lsr #23
   12320:	andeq	r2, r1, ip, lsr #23
   12324:	andeq	r2, r1, ip, lsr #23
   12328:	andeq	r2, r1, ip, lsr #23
   1232c:	andeq	r2, r1, ip, lsr #23
   12330:	andeq	r2, r1, ip, lsr #23
   12334:	andeq	r2, r1, ip, lsr #23
   12338:	andeq	r2, r1, ip, lsr #23
   1233c:	andeq	r2, r1, ip, lsr #23
   12340:	andeq	r2, r1, ip, lsr #23
   12344:	andeq	r2, r1, ip, lsr #23
   12348:	andeq	r2, r1, ip, lsr #23
   1234c:	andeq	r2, r1, ip, lsr #23
   12350:	andeq	r2, r1, ip, lsr #23
   12354:	andeq	r2, r1, ip, lsr #23
   12358:	andeq	r2, r1, ip, lsr #23
   1235c:	andeq	r2, r1, ip, lsr #23
   12360:	andeq	r2, r1, ip, ror #22
   12364:	andeq	r2, r1, r0, lsl #21
   12368:	andeq	r2, r1, r0, lsl #21
   1236c:	andeq	r2, r1, r4, lsl #23
   12370:	andeq	r2, r1, r0, lsl #21
   12374:	andeq	r2, r1, r0, lsr #23
   12378:	andeq	r2, r1, r0, lsl #21
   1237c:	andeq	r2, r1, r0, asr #17
   12380:	andeq	r2, r1, r0, lsl #21
   12384:	andeq	r2, r1, r0, lsl #21
   12388:	andeq	r2, r1, r0, lsl #21
   1238c:	andeq	r2, r1, r0, lsr #23
   12390:	andeq	r2, r1, r0, lsr #23
   12394:	andeq	r2, r1, r0, lsr #23
   12398:	andeq	r2, r1, r0, lsr #23
   1239c:	andeq	r2, r1, r0, lsr #23
   123a0:	andeq	r2, r1, r0, lsr #23
   123a4:	andeq	r2, r1, r0, lsr #23
   123a8:	andeq	r2, r1, r0, lsr #23
   123ac:	andeq	r2, r1, r0, lsr #23
   123b0:	andeq	r2, r1, r0, lsr #23
   123b4:	andeq	r2, r1, r0, lsr #23
   123b8:	andeq	r2, r1, r0, lsr #23
   123bc:	andeq	r2, r1, r0, lsr #23
   123c0:	andeq	r2, r1, r0, lsr #23
   123c4:	andeq	r2, r1, r0, lsr #23
   123c8:	andeq	r2, r1, r0, lsr #23
   123cc:	andeq	r2, r1, r0, lsl #21
   123d0:	andeq	r2, r1, r0, lsl #21
   123d4:	andeq	r2, r1, r0, lsl #21
   123d8:	andeq	r2, r1, r0, lsl #21
   123dc:	muleq	r1, r4, r8
   123e0:	andeq	r2, r1, ip, lsr #23
   123e4:	andeq	r2, r1, r0, lsr #23
   123e8:	andeq	r2, r1, r0, lsr #23
   123ec:	andeq	r2, r1, r0, lsr #23
   123f0:	andeq	r2, r1, r0, lsr #23
   123f4:	andeq	r2, r1, r0, lsr #23
   123f8:	andeq	r2, r1, r0, lsr #23
   123fc:	andeq	r2, r1, r0, lsr #23
   12400:	andeq	r2, r1, r0, lsr #23
   12404:	andeq	r2, r1, r0, lsr #23
   12408:	andeq	r2, r1, r0, lsr #23
   1240c:	andeq	r2, r1, r0, lsr #23
   12410:	andeq	r2, r1, r0, lsr #23
   12414:	andeq	r2, r1, r0, lsr #23
   12418:	andeq	r2, r1, r0, lsr #23
   1241c:	andeq	r2, r1, r0, lsr #23
   12420:	andeq	r2, r1, r0, lsr #23
   12424:	andeq	r2, r1, r0, lsr #23
   12428:	andeq	r2, r1, r0, lsr #23
   1242c:	andeq	r2, r1, r0, lsr #23
   12430:	andeq	r2, r1, r0, lsr #23
   12434:	andeq	r2, r1, r0, lsr #23
   12438:	andeq	r2, r1, r0, lsr #23
   1243c:	andeq	r2, r1, r0, lsr #23
   12440:	andeq	r2, r1, r0, lsr #23
   12444:	andeq	r2, r1, r0, lsr #23
   12448:	andeq	r2, r1, r0, lsr #23
   1244c:	andeq	r2, r1, r0, lsl #21
   12450:	andeq	r2, r1, ip, asr #16
   12454:	andeq	r2, r1, r0, lsr #23
   12458:	andeq	r2, r1, r0, lsl #21
   1245c:	andeq	r2, r1, r0, lsr #23
   12460:	andeq	r2, r1, r0, lsl #21
   12464:	andeq	r2, r1, r0, lsr #23
   12468:	andeq	r2, r1, r0, lsr #23
   1246c:	andeq	r2, r1, r0, lsr #23
   12470:	andeq	r2, r1, r0, lsr #23
   12474:	andeq	r2, r1, r0, lsr #23
   12478:	andeq	r2, r1, r0, lsr #23
   1247c:	andeq	r2, r1, r0, lsr #23
   12480:	andeq	r2, r1, r0, lsr #23
   12484:	andeq	r2, r1, r0, lsr #23
   12488:	andeq	r2, r1, r0, lsr #23
   1248c:	andeq	r2, r1, r0, lsr #23
   12490:	andeq	r2, r1, r0, lsr #23
   12494:	andeq	r2, r1, r0, lsr #23
   12498:	andeq	r2, r1, r0, lsr #23
   1249c:	andeq	r2, r1, r0, lsr #23
   124a0:	andeq	r2, r1, r0, lsr #23
   124a4:	andeq	r2, r1, r0, lsr #23
   124a8:	andeq	r2, r1, r0, lsr #23
   124ac:	andeq	r2, r1, r0, lsr #23
   124b0:	andeq	r2, r1, r0, lsr #23
   124b4:	andeq	r2, r1, r0, lsr #23
   124b8:	andeq	r2, r1, r0, lsr #23
   124bc:	andeq	r2, r1, r0, lsr #23
   124c0:	andeq	r2, r1, r0, lsr #23
   124c4:	andeq	r2, r1, r0, lsr #23
   124c8:	andeq	r2, r1, r0, lsr #23
   124cc:	andeq	r2, r1, r4, ror #12
   124d0:	andeq	r2, r1, r0, lsl #21
   124d4:	andeq	r2, r1, r4, ror #12
   124d8:	andeq	r2, r1, r4, lsl #23
   124dc:	cmp	r4, #0
   124e0:	moveq	r3, #1
   124e4:	streq	r3, [sp, #28]
   124e8:	beq	12c14 <close@plt+0x1c4c>
   124ec:	mov	r3, #0
   124f0:	mov	r4, r3
   124f4:	mov	r2, #1
   124f8:	str	r2, [sp, #40]	; 0x28
   124fc:	str	r3, [sp, #68]	; 0x44
   12500:	str	r2, [sp, #32]
   12504:	str	r2, [sp, #52]	; 0x34
   12508:	ldr	r3, [pc, #2584]	; 12f28 <close@plt+0x1f60>
   1250c:	str	r4, [sp, #44]	; 0x2c
   12510:	str	r4, [sp, #72]	; 0x48
   12514:	str	r4, [sp, #28]
   12518:	str	r3, [sp, #60]	; 0x3c
   1251c:	mov	r8, #2
   12520:	b	1220c <close@plt+0x1244>
   12524:	cmp	r4, #0
   12528:	bne	137b4 <close@plt+0x27ec>
   1252c:	cmp	sl, #0
   12530:	beq	13574 <close@plt+0x25ac>
   12534:	mov	r3, #34	; 0x22
   12538:	strb	r3, [fp]
   1253c:	ldr	r3, [pc, #2528]	; 12f24 <close@plt+0x1f5c>
   12540:	mov	r1, r4
   12544:	mov	r2, #1
   12548:	str	r4, [sp, #68]	; 0x44
   1254c:	str	r2, [sp, #40]	; 0x28
   12550:	mov	r4, r2
   12554:	str	r1, [sp, #44]	; 0x2c
   12558:	str	r1, [sp, #72]	; 0x48
   1255c:	str	r1, [sp, #32]
   12560:	str	r2, [sp, #28]
   12564:	str	r2, [sp, #52]	; 0x34
   12568:	str	r3, [sp, #60]	; 0x3c
   1256c:	b	1220c <close@plt+0x1244>
   12570:	mov	r3, #0
   12574:	str	r3, [sp, #68]	; 0x44
   12578:	str	r3, [sp, #44]	; 0x2c
   1257c:	str	r3, [sp, #32]
   12580:	str	r3, [sp, #28]
   12584:	str	r3, [sp, #60]	; 0x3c
   12588:	mov	r3, #1
   1258c:	str	r8, [sp, #72]	; 0x48
   12590:	str	r8, [sp, #52]	; 0x34
   12594:	mov	r4, r8
   12598:	str	r3, [sp, #40]	; 0x28
   1259c:	b	1220c <close@plt+0x1244>
   125a0:	mov	r3, #1
   125a4:	str	r3, [sp, #40]	; 0x28
   125a8:	str	r3, [sp, #32]
   125ac:	str	r3, [sp, #28]
   125b0:	str	r3, [sp, #52]	; 0x34
   125b4:	ldr	r3, [pc, #2408]	; 12f24 <close@plt+0x1f5c>
   125b8:	mov	r2, #0
   125bc:	mov	r4, r2
   125c0:	str	r2, [sp, #68]	; 0x44
   125c4:	str	r2, [sp, #44]	; 0x2c
   125c8:	str	r2, [sp, #72]	; 0x48
   125cc:	str	r3, [sp, #60]	; 0x3c
   125d0:	mov	r8, #5
   125d4:	b	1220c <close@plt+0x1244>
   125d8:	mov	r3, #0
   125dc:	mov	r2, #1
   125e0:	str	r2, [sp, #40]	; 0x28
   125e4:	mov	r4, r3
   125e8:	str	r3, [sp, #68]	; 0x44
   125ec:	str	r2, [sp, #28]
   125f0:	str	r3, [sp, #44]	; 0x2c
   125f4:	str	r3, [sp, #72]	; 0x48
   125f8:	str	r3, [sp, #32]
   125fc:	str	r3, [sp, #52]	; 0x34
   12600:	str	r3, [sp, #60]	; 0x3c
   12604:	b	1220c <close@plt+0x1244>
   12608:	mov	r2, #1
   1260c:	mov	r3, #0
   12610:	str	r2, [sp, #40]	; 0x28
   12614:	mov	r4, r3
   12618:	str	r3, [sp, #68]	; 0x44
   1261c:	str	r8, [sp, #52]	; 0x34
   12620:	str	r2, [sp, #32]
   12624:	b	12508 <close@plt+0x1540>
   12628:	mov	r3, #1
   1262c:	str	r3, [sp, #40]	; 0x28
   12630:	str	r3, [sp, #32]
   12634:	str	r3, [sp, #28]
   12638:	str	r3, [sp, #52]	; 0x34
   1263c:	ldr	r3, [pc, #2276]	; 12f28 <close@plt+0x1f60>
   12640:	mov	r2, #0
   12644:	mov	r4, r2
   12648:	str	r2, [sp, #68]	; 0x44
   1264c:	str	r2, [sp, #44]	; 0x2c
   12650:	str	r2, [sp, #72]	; 0x48
   12654:	str	r3, [sp, #60]	; 0x3c
   12658:	mov	r8, #2
   1265c:	b	1220c <close@plt+0x1244>
   12660:	mov	r7, #0
   12664:	ldr	r3, [sp, #24]
   12668:	cmn	r3, #1
   1266c:	beq	131a8 <close@plt+0x21e0>
   12670:	ldr	r3, [sp, #24]
   12674:	subs	r3, r3, #1
   12678:	movne	r3, #1
   1267c:	cmp	r3, #0
   12680:	sub	r2, fp, #2
   12684:	clz	r2, r2
   12688:	lsr	r2, r2, #5
   1268c:	bne	12888 <close@plt+0x18c0>
   12690:	cmp	r9, #0
   12694:	bne	12888 <close@plt+0x18c0>
   12698:	ldr	r3, [sp, #32]
   1269c:	tst	r3, r2
   126a0:	bne	129a8 <close@plt+0x19e0>
   126a4:	ldr	r3, [sp, #28]
   126a8:	eor	r3, r3, #1
   126ac:	orr	r3, r2, r3
   126b0:	ldr	r2, [sp, #32]
   126b4:	eor	r3, r3, #1
   126b8:	orrs	r3, r2, r3
   126bc:	beq	126ec <close@plt+0x1724>
   126c0:	mov	r3, #0
   126c4:	ldr	r1, [sp, #56]	; 0x38
   126c8:	cmp	r1, #0
   126cc:	beq	126ec <close@plt+0x1724>
   126d0:	lsr	r2, r5, #5
   126d4:	and	r0, r5, #31
   126d8:	uxtb	r2, r2
   126dc:	ldr	r1, [r1, r2, lsl #2]
   126e0:	lsr	r2, r1, r0
   126e4:	tst	r2, #1
   126e8:	bne	126f4 <close@plt+0x172c>
   126ec:	cmp	r7, #0
   126f0:	beq	12944 <close@plt+0x197c>
   126f4:	sub	r2, fp, #2
   126f8:	clz	r2, r2
   126fc:	lsr	r2, r2, #5
   12700:	ldr	r3, [sp, #32]
   12704:	cmp	r3, #0
   12708:	bne	12a34 <close@plt+0x1a6c>
   1270c:	ldr	r3, [sp, #44]	; 0x2c
   12710:	eor	r3, r3, #1
   12714:	ands	r3, r2, r3
   12718:	beq	12750 <close@plt+0x1788>
   1271c:	cmp	sl, r4
   12720:	movhi	r2, #39	; 0x27
   12724:	strbhi	r2, [r8, r4]
   12728:	add	r2, r4, #1
   1272c:	cmp	r2, sl
   12730:	movcc	r1, #36	; 0x24
   12734:	strbcc	r1, [r8, r2]
   12738:	add	r2, r4, #2
   1273c:	cmp	r2, sl
   12740:	add	r4, r4, #3
   12744:	movcc	r1, #39	; 0x27
   12748:	strbcc	r1, [r8, r2]
   1274c:	str	r3, [sp, #44]	; 0x2c
   12750:	cmp	r4, sl
   12754:	movcc	r3, #92	; 0x5c
   12758:	strbcc	r3, [r8, r4]
   1275c:	add	r9, r9, #1
   12760:	add	r4, r4, #1
   12764:	cmp	r4, sl
   12768:	ldr	r3, [sp, #40]	; 0x28
   1276c:	strbcc	r5, [r8, r4]
   12770:	cmp	r6, #0
   12774:	moveq	r3, #0
   12778:	str	r3, [sp, #40]	; 0x28
   1277c:	ldr	r3, [sp, #24]
   12780:	add	r4, r4, #1
   12784:	cmn	r3, #1
   12788:	bne	12228 <close@plt+0x1260>
   1278c:	ldr	r3, [sp, #36]	; 0x24
   12790:	ldrb	r6, [r3, r9]
   12794:	adds	r6, r6, #0
   12798:	movne	r6, #1
   1279c:	cmp	r6, #0
   127a0:	bne	1223c <close@plt+0x1274>
   127a4:	str	fp, [sp, #160]	; 0xa0
   127a8:	mov	fp, r8
   127ac:	ldr	r8, [sp, #160]	; 0xa0
   127b0:	ldr	r1, [sp, #32]
   127b4:	cmp	r4, #0
   127b8:	sub	r2, r8, #2
   127bc:	clz	r2, r2
   127c0:	lsr	r2, r2, #5
   127c4:	andeq	r3, r2, r1
   127c8:	movne	r3, #0
   127cc:	cmp	r3, #0
   127d0:	bne	138bc <close@plt+0x28f4>
   127d4:	eor	r3, r1, #1
   127d8:	ands	r2, r2, r3
   127dc:	beq	137f8 <close@plt+0x2830>
   127e0:	ldr	r3, [sp, #68]	; 0x44
   127e4:	cmp	r3, #0
   127e8:	beq	137fc <close@plt+0x2834>
   127ec:	ldr	r3, [sp, #40]	; 0x28
   127f0:	cmp	r3, #0
   127f4:	bne	13878 <close@plt+0x28b0>
   127f8:	ldr	r3, [sp, #72]	; 0x48
   127fc:	adds	r3, r3, #0
   12800:	movne	r3, #1
   12804:	cmp	sl, #0
   12808:	movne	r3, #0
   1280c:	cmp	r3, #0
   12810:	ldreq	r2, [sp, #68]	; 0x44
   12814:	beq	137fc <close@plt+0x2834>
   12818:	ldr	sl, [sp, #72]	; 0x48
   1281c:	str	r3, [sp, #68]	; 0x44
   12820:	ldr	r3, [pc, #1792]	; 12f28 <close@plt+0x1f60>
   12824:	mov	r2, #39	; 0x27
   12828:	mov	r4, #1
   1282c:	str	r3, [sp, #60]	; 0x3c
   12830:	mov	r3, #0
   12834:	strb	r2, [fp]
   12838:	str	r4, [sp, #52]	; 0x34
   1283c:	mov	r8, #2
   12840:	str	r3, [sp, #32]
   12844:	b	1220c <close@plt+0x1244>
   12848:	mov	r7, #0
   1284c:	cmp	fp, #2
   12850:	beq	13188 <close@plt+0x21c0>
   12854:	ldr	r3, [sp, #52]	; 0x34
   12858:	ldr	r2, [sp, #28]
   1285c:	ldr	r1, [sp, #32]
   12860:	cmp	r3, #0
   12864:	andne	r2, r2, r1
   12868:	moveq	r2, #0
   1286c:	cmp	r2, #0
   12870:	moveq	r5, #92	; 0x5c
   12874:	moveq	r3, r5
   12878:	bne	13194 <close@plt+0x21cc>
   1287c:	ldr	r1, [sp, #28]
   12880:	cmp	r1, #0
   12884:	bne	13904 <close@plt+0x293c>
   12888:	mov	r6, #0
   1288c:	b	126a4 <close@plt+0x16dc>
   12890:	mov	r7, #0
   12894:	cmp	fp, #2
   12898:	beq	131f8 <close@plt+0x2230>
   1289c:	cmp	fp, #5
   128a0:	beq	131bc <close@plt+0x21f4>
   128a4:	sub	r2, fp, #2
   128a8:	mov	r6, #0
   128ac:	clz	r2, r2
   128b0:	mov	r5, #63	; 0x3f
   128b4:	lsr	r2, r2, #5
   128b8:	b	126a4 <close@plt+0x16dc>
   128bc:	mov	r7, #0
   128c0:	cmp	fp, #2
   128c4:	strne	r6, [sp, #68]	; 0x44
   128c8:	movne	r2, #0
   128cc:	movne	r5, #39	; 0x27
   128d0:	bne	126a4 <close@plt+0x16dc>
   128d4:	ldr	r3, [sp, #32]
   128d8:	cmp	r3, #0
   128dc:	bne	135d8 <close@plt+0x2610>
   128e0:	cmp	sl, #0
   128e4:	ldr	r3, [sp, #72]	; 0x48
   128e8:	clz	r3, r3
   128ec:	lsr	r3, r3, #5
   128f0:	moveq	r3, #0
   128f4:	cmp	r3, #0
   128f8:	bne	1350c <close@plt+0x2544>
   128fc:	cmp	sl, r4
   12900:	movhi	r3, #39	; 0x27
   12904:	strbhi	r3, [r8, r4]
   12908:	add	r3, r4, #1
   1290c:	cmp	sl, r3
   12910:	movhi	r2, #92	; 0x5c
   12914:	strbhi	r2, [r8, r3]
   12918:	add	r3, r4, #2
   1291c:	cmp	sl, r3
   12920:	movhi	r2, #39	; 0x27
   12924:	strbhi	r2, [r8, r3]
   12928:	mov	r3, #0
   1292c:	cmp	r7, #0
   12930:	add	r4, r4, #3
   12934:	str	r3, [sp, #44]	; 0x2c
   12938:	str	r6, [sp, #68]	; 0x44
   1293c:	mov	r5, #39	; 0x27
   12940:	bne	126f4 <close@plt+0x172c>
   12944:	ldr	r2, [sp, #44]	; 0x2c
   12948:	eor	r3, r3, #1
   1294c:	and	r3, r3, r2
   12950:	add	r9, r9, #1
   12954:	uxtb	r3, r3
   12958:	cmp	r3, #0
   1295c:	beq	12764 <close@plt+0x179c>
   12960:	cmp	sl, r4
   12964:	movhi	r3, #39	; 0x27
   12968:	strbhi	r3, [r8, r4]
   1296c:	add	r3, r4, #1
   12970:	cmp	sl, r3
   12974:	movhi	r2, #39	; 0x27
   12978:	strbhi	r2, [r8, r3]
   1297c:	mov	r3, #0
   12980:	add	r4, r4, #2
   12984:	str	r3, [sp, #44]	; 0x2c
   12988:	b	12764 <close@plt+0x179c>
   1298c:	mov	r3, #114	; 0x72
   12990:	ldr	r1, [sp, #32]
   12994:	sub	r2, fp, #2
   12998:	clz	r2, r2
   1299c:	lsr	r2, r2, #5
   129a0:	tst	r2, r1
   129a4:	beq	1287c <close@plt+0x18b4>
   129a8:	mov	fp, r8
   129ac:	mov	r8, #2
   129b0:	ldr	r3, [sp, #28]
   129b4:	cmp	r3, #0
   129b8:	movne	r8, #4
   129bc:	ldr	r3, [sp, #164]	; 0xa4
   129c0:	mov	ip, #0
   129c4:	bic	r3, r3, #2
   129c8:	str	r3, [sp, #4]
   129cc:	ldr	r3, [sp, #76]	; 0x4c
   129d0:	str	r8, [sp]
   129d4:	str	r3, [sp, #16]
   129d8:	ldr	r3, [sp, #80]	; 0x50
   129dc:	ldr	r2, [sp, #36]	; 0x24
   129e0:	str	r3, [sp, #12]
   129e4:	mov	r1, sl
   129e8:	ldr	r3, [sp, #24]
   129ec:	mov	r0, fp
   129f0:	str	ip, [sp, #8]
   129f4:	bl	12114 <close@plt+0x114c>
   129f8:	mov	r4, r0
   129fc:	ldr	r3, [pc, #1304]	; 12f1c <close@plt+0x1f54>
   12a00:	ldr	r2, [sp, #116]	; 0x74
   12a04:	mov	r0, r4
   12a08:	ldr	r3, [r3]
   12a0c:	cmp	r2, r3
   12a10:	bne	13900 <close@plt+0x2938>
   12a14:	add	sp, sp, #124	; 0x7c
   12a18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a1c:	mov	r5, #110	; 0x6e
   12a20:	ldr	r3, [sp, #32]
   12a24:	mov	r2, #0
   12a28:	cmp	r3, #0
   12a2c:	mov	r6, r2
   12a30:	beq	1270c <close@plt+0x1744>
   12a34:	str	fp, [sp, #160]	; 0xa0
   12a38:	mov	fp, r8
   12a3c:	ldr	r8, [sp, #160]	; 0xa0
   12a40:	mov	r3, r2
   12a44:	ldr	r2, [sp, #28]
   12a48:	and	r2, r2, r3
   12a4c:	str	r2, [sp, #28]
   12a50:	b	129b0 <close@plt+0x19e8>
   12a54:	mov	r5, #116	; 0x74
   12a58:	b	12a20 <close@plt+0x1a58>
   12a5c:	mov	r5, #102	; 0x66
   12a60:	ldr	r3, [sp, #32]
   12a64:	cmp	r3, #0
   12a68:	bne	13614 <close@plt+0x264c>
   12a6c:	mov	r6, #0
   12a70:	b	12750 <close@plt+0x1788>
   12a74:	mov	r5, #118	; 0x76
   12a78:	b	12a60 <close@plt+0x1a98>
   12a7c:	mov	r7, #0
   12a80:	mov	r6, #0
   12a84:	b	126c0 <close@plt+0x16f8>
   12a88:	ldr	r3, [sp, #32]
   12a8c:	cmp	r3, #0
   12a90:	bne	13858 <close@plt+0x2890>
   12a94:	mov	r7, r3
   12a98:	ldr	r3, [sp, #44]	; 0x2c
   12a9c:	sub	r2, fp, #2
   12aa0:	eor	r3, r3, #1
   12aa4:	clz	r2, r2
   12aa8:	lsr	r2, r2, #5
   12aac:	ands	r3, r2, r3
   12ab0:	beq	134f8 <close@plt+0x2530>
   12ab4:	cmp	sl, r4
   12ab8:	movhi	r1, #39	; 0x27
   12abc:	strbhi	r1, [r8, r4]
   12ac0:	add	r1, r4, #1
   12ac4:	cmp	sl, r1
   12ac8:	movhi	r0, #36	; 0x24
   12acc:	strbhi	r0, [r8, r1]
   12ad0:	add	r1, r4, #2
   12ad4:	cmp	sl, r1
   12ad8:	movhi	r0, #39	; 0x27
   12adc:	strbhi	r0, [r8, r1]
   12ae0:	add	r1, r4, #3
   12ae4:	cmp	sl, r1
   12ae8:	bls	13558 <close@plt+0x2590>
   12aec:	mov	r4, r1
   12af0:	mov	r1, #92	; 0x5c
   12af4:	strb	r1, [r8, r4]
   12af8:	mov	r1, r4
   12afc:	str	r3, [sp, #44]	; 0x2c
   12b00:	cmp	fp, #2
   12b04:	add	r4, r4, #1
   12b08:	beq	135a0 <close@plt+0x25d8>
   12b0c:	ldr	r0, [sp, #24]
   12b10:	add	r3, r9, #1
   12b14:	cmp	r3, r0
   12b18:	bcs	12b30 <close@plt+0x1b68>
   12b1c:	ldr	r0, [sp, #36]	; 0x24
   12b20:	ldrb	r3, [r0, r3]
   12b24:	sub	r3, r3, #48	; 0x30
   12b28:	cmp	r3, #9
   12b2c:	bls	135b0 <close@plt+0x25e8>
   12b30:	mov	r5, #48	; 0x30
   12b34:	ldr	r3, [sp, #28]
   12b38:	eor	r3, r3, #1
   12b3c:	orrs	r2, r2, r3
   12b40:	mov	r3, r6
   12b44:	moveq	r6, r2
   12b48:	beq	126c4 <close@plt+0x16fc>
   12b4c:	mov	r6, #0
   12b50:	b	126ec <close@plt+0x1724>
   12b54:	mov	r2, #0
   12b58:	mov	r6, r2
   12b5c:	mov	r5, #98	; 0x62
   12b60:	b	1270c <close@plt+0x1744>
   12b64:	mov	r5, #97	; 0x61
   12b68:	b	12a6c <close@plt+0x1aa4>
   12b6c:	mov	r3, r7
   12b70:	mov	r6, r7
   12b74:	mov	r2, #0
   12b78:	mov	r7, r3
   12b7c:	mov	r5, #32
   12b80:	b	126a4 <close@plt+0x16dc>
   12b84:	cmp	r9, #0
   12b88:	mov	r3, r7
   12b8c:	bne	13154 <close@plt+0x218c>
   12b90:	mov	r6, r7
   12b94:	mov	r2, r9
   12b98:	mov	r7, r3
   12b9c:	b	126a4 <close@plt+0x16dc>
   12ba0:	mov	r6, r7
   12ba4:	b	126c0 <close@plt+0x16f8>
   12ba8:	mov	r7, #0
   12bac:	ldr	r3, [sp, #64]	; 0x40
   12bb0:	cmp	r3, #1
   12bb4:	bne	13210 <close@plt+0x2248>
   12bb8:	bl	10ec0 <__ctype_b_loc@plt>
   12bbc:	ldr	r2, [sp, #64]	; 0x40
   12bc0:	sxth	r3, r5
   12bc4:	mov	ip, r2
   12bc8:	lsl	r3, r3, #1
   12bcc:	ldr	r2, [r0]
   12bd0:	ldrh	r3, [r2, r3]
   12bd4:	and	r3, r3, #16384	; 0x4000
   12bd8:	cmp	r3, #0
   12bdc:	ldr	r3, [sp, #28]
   12be0:	movne	r6, #1
   12be4:	moveq	r6, #0
   12be8:	movne	r2, #0
   12bec:	andeq	r2, r3, #1
   12bf0:	cmp	r2, #0
   12bf4:	bne	13520 <close@plt+0x2558>
   12bf8:	sub	r2, fp, #2
   12bfc:	clz	r2, r2
   12c00:	lsr	r2, r2, #5
   12c04:	b	126a4 <close@plt+0x16dc>
   12c08:	cmp	r4, #0
   12c0c:	bne	138cc <close@plt+0x2904>
   12c10:	str	r4, [sp, #28]
   12c14:	cmp	sl, #0
   12c18:	bne	13910 <close@plt+0x2948>
   12c1c:	ldr	r3, [pc, #772]	; 12f28 <close@plt+0x1f60>
   12c20:	mov	r4, #1
   12c24:	str	r4, [sp, #40]	; 0x28
   12c28:	str	r3, [sp, #60]	; 0x3c
   12c2c:	str	r4, [sp, #52]	; 0x34
   12c30:	str	sl, [sp, #72]	; 0x48
   12c34:	str	sl, [sp, #68]	; 0x44
   12c38:	str	sl, [sp, #44]	; 0x2c
   12c3c:	str	sl, [sp, #32]
   12c40:	mov	r8, #2
   12c44:	b	1220c <close@plt+0x1244>
   12c48:	ldr	r3, [sp, #36]	; 0x24
   12c4c:	ldrb	r5, [r3, r9]
   12c50:	cmp	r5, #126	; 0x7e
   12c54:	ldrls	pc, [pc, r5, lsl #2]
   12c58:	b	12bac <close@plt+0x1be4>
   12c5c:	muleq	r1, r0, lr
   12c60:	andeq	r2, r1, ip, lsr #23
   12c64:	andeq	r2, r1, ip, lsr #23
   12c68:	andeq	r2, r1, ip, lsr #23
   12c6c:	andeq	r2, r1, ip, lsr #23
   12c70:	andeq	r2, r1, ip, lsr #23
   12c74:	andeq	r2, r1, ip, lsr #23
   12c78:	andeq	r2, r1, ip, ror lr
   12c7c:	andeq	r2, r1, r8, ror #28
   12c80:	andeq	r2, r1, r0, ror #28
   12c84:	andeq	r2, r1, r8, asr lr
   12c88:	andeq	r2, r1, r8, lsl #30
   12c8c:	strdeq	r2, [r1], -r4
   12c90:	andeq	r2, r1, ip, lsl #19
   12c94:	andeq	r2, r1, ip, lsr #23
   12c98:	andeq	r2, r1, ip, lsr #23
   12c9c:	andeq	r2, r1, ip, lsr #23
   12ca0:	andeq	r2, r1, ip, lsr #23
   12ca4:	andeq	r2, r1, ip, lsr #23
   12ca8:	andeq	r2, r1, ip, lsr #23
   12cac:	andeq	r2, r1, ip, lsr #23
   12cb0:	andeq	r2, r1, ip, lsr #23
   12cb4:	andeq	r2, r1, ip, lsr #23
   12cb8:	andeq	r2, r1, ip, lsr #23
   12cbc:	andeq	r2, r1, ip, lsr #23
   12cc0:	andeq	r2, r1, ip, lsr #23
   12cc4:	andeq	r2, r1, ip, lsr #23
   12cc8:	andeq	r2, r1, ip, lsr #23
   12ccc:	andeq	r2, r1, ip, lsr #23
   12cd0:	andeq	r2, r1, ip, lsr #23
   12cd4:	andeq	r2, r1, ip, lsr #23
   12cd8:	andeq	r2, r1, ip, lsr #23
   12cdc:	andeq	r2, r1, r4, ror #29
   12ce0:	ldrdeq	r2, [r1], -r0
   12ce4:	ldrdeq	r2, [r1], -r0
   12ce8:	andeq	r2, r1, r0, asr #29
   12cec:	ldrdeq	r2, [r1], -r0
   12cf0:	strdeq	r2, [r1], -r8
   12cf4:	ldrdeq	r2, [r1], -r0
   12cf8:	andeq	r2, r1, r0, asr #17
   12cfc:	ldrdeq	r2, [r1], -r0
   12d00:	ldrdeq	r2, [r1], -r0
   12d04:	ldrdeq	r2, [r1], -r0
   12d08:	strdeq	r2, [r1], -r8
   12d0c:	strdeq	r2, [r1], -r8
   12d10:	strdeq	r2, [r1], -r8
   12d14:	strdeq	r2, [r1], -r8
   12d18:	strdeq	r2, [r1], -r8
   12d1c:	strdeq	r2, [r1], -r8
   12d20:	strdeq	r2, [r1], -r8
   12d24:	strdeq	r2, [r1], -r8
   12d28:	strdeq	r2, [r1], -r8
   12d2c:	strdeq	r2, [r1], -r8
   12d30:	strdeq	r2, [r1], -r8
   12d34:	strdeq	r2, [r1], -r8
   12d38:	strdeq	r2, [r1], -r8
   12d3c:	strdeq	r2, [r1], -r8
   12d40:	strdeq	r2, [r1], -r8
   12d44:	strdeq	r2, [r1], -r8
   12d48:	ldrdeq	r2, [r1], -r0
   12d4c:	ldrdeq	r2, [r1], -r0
   12d50:	ldrdeq	r2, [r1], -r0
   12d54:	ldrdeq	r2, [r1], -r0
   12d58:	muleq	r1, r4, r8
   12d5c:	andeq	r2, r1, ip, lsr #23
   12d60:	strdeq	r2, [r1], -r8
   12d64:	strdeq	r2, [r1], -r8
   12d68:	strdeq	r2, [r1], -r8
   12d6c:	strdeq	r2, [r1], -r8
   12d70:	strdeq	r2, [r1], -r8
   12d74:	strdeq	r2, [r1], -r8
   12d78:	strdeq	r2, [r1], -r8
   12d7c:	strdeq	r2, [r1], -r8
   12d80:	strdeq	r2, [r1], -r8
   12d84:	strdeq	r2, [r1], -r8
   12d88:	strdeq	r2, [r1], -r8
   12d8c:	strdeq	r2, [r1], -r8
   12d90:	strdeq	r2, [r1], -r8
   12d94:	strdeq	r2, [r1], -r8
   12d98:	strdeq	r2, [r1], -r8
   12d9c:	strdeq	r2, [r1], -r8
   12da0:	strdeq	r2, [r1], -r8
   12da4:	strdeq	r2, [r1], -r8
   12da8:	strdeq	r2, [r1], -r8
   12dac:	strdeq	r2, [r1], -r8
   12db0:	strdeq	r2, [r1], -r8
   12db4:	strdeq	r2, [r1], -r8
   12db8:	strdeq	r2, [r1], -r8
   12dbc:	strdeq	r2, [r1], -r8
   12dc0:	strdeq	r2, [r1], -r8
   12dc4:	strdeq	r2, [r1], -r8
   12dc8:	ldrdeq	r2, [r1], -r0
   12dcc:	andeq	r2, r1, ip, asr #16
   12dd0:	strdeq	r2, [r1], -r8
   12dd4:	ldrdeq	r2, [r1], -r0
   12dd8:	strdeq	r2, [r1], -r8
   12ddc:	ldrdeq	r2, [r1], -r0
   12de0:	strdeq	r2, [r1], -r8
   12de4:	strdeq	r2, [r1], -r8
   12de8:	strdeq	r2, [r1], -r8
   12dec:	strdeq	r2, [r1], -r8
   12df0:	strdeq	r2, [r1], -r8
   12df4:	strdeq	r2, [r1], -r8
   12df8:	strdeq	r2, [r1], -r8
   12dfc:	strdeq	r2, [r1], -r8
   12e00:	strdeq	r2, [r1], -r8
   12e04:	strdeq	r2, [r1], -r8
   12e08:	strdeq	r2, [r1], -r8
   12e0c:	strdeq	r2, [r1], -r8
   12e10:	strdeq	r2, [r1], -r8
   12e14:	strdeq	r2, [r1], -r8
   12e18:	strdeq	r2, [r1], -r8
   12e1c:	strdeq	r2, [r1], -r8
   12e20:	strdeq	r2, [r1], -r8
   12e24:	strdeq	r2, [r1], -r8
   12e28:	strdeq	r2, [r1], -r8
   12e2c:	strdeq	r2, [r1], -r8
   12e30:	strdeq	r2, [r1], -r8
   12e34:	strdeq	r2, [r1], -r8
   12e38:	strdeq	r2, [r1], -r8
   12e3c:	strdeq	r2, [r1], -r8
   12e40:	strdeq	r2, [r1], -r8
   12e44:	strdeq	r2, [r1], -r8
   12e48:	andeq	r2, r1, r4, ror #12
   12e4c:	ldrdeq	r2, [r1], -r0
   12e50:	andeq	r2, r1, r4, ror #12
   12e54:	andeq	r2, r1, r0, asr #29
   12e58:	mov	r3, #110	; 0x6e
   12e5c:	b	12990 <close@plt+0x19c8>
   12e60:	mov	r3, #116	; 0x74
   12e64:	b	12990 <close@plt+0x19c8>
   12e68:	sub	r2, fp, #2
   12e6c:	mov	r3, #98	; 0x62
   12e70:	clz	r2, r2
   12e74:	lsr	r2, r2, #5
   12e78:	b	1287c <close@plt+0x18b4>
   12e7c:	sub	r2, fp, #2
   12e80:	mov	r3, #97	; 0x61
   12e84:	clz	r2, r2
   12e88:	lsr	r2, r2, #5
   12e8c:	b	1287c <close@plt+0x18b4>
   12e90:	ldr	r3, [sp, #28]
   12e94:	cmp	r3, #0
   12e98:	bne	12a88 <close@plt+0x1ac0>
   12e9c:	ldr	r3, [sp, #164]	; 0xa4
   12ea0:	tst	r3, #1
   12ea4:	bne	13518 <close@plt+0x2550>
   12ea8:	ldr	r6, [sp, #28]
   12eac:	sub	r2, fp, #2
   12eb0:	mov	r7, r6
   12eb4:	clz	r2, r2
   12eb8:	lsr	r2, r2, #5
   12ebc:	b	126a4 <close@plt+0x16dc>
   12ec0:	sub	r2, fp, #2
   12ec4:	clz	r2, r2
   12ec8:	lsr	r2, r2, #5
   12ecc:	b	12690 <close@plt+0x16c8>
   12ed0:	sub	r2, fp, #2
   12ed4:	mov	r6, #0
   12ed8:	clz	r2, r2
   12edc:	lsr	r2, r2, #5
   12ee0:	b	12698 <close@plt+0x16d0>
   12ee4:	sub	r2, fp, #2
   12ee8:	clz	r2, r2
   12eec:	lsr	r2, r2, #5
   12ef0:	b	12698 <close@plt+0x16d0>
   12ef4:	sub	r2, fp, #2
   12ef8:	mov	r3, #102	; 0x66
   12efc:	clz	r2, r2
   12f00:	lsr	r2, r2, #5
   12f04:	b	1287c <close@plt+0x18b4>
   12f08:	sub	r2, fp, #2
   12f0c:	mov	r3, #118	; 0x76
   12f10:	clz	r2, r2
   12f14:	lsr	r2, r2, #5
   12f18:	b	1287c <close@plt+0x18b4>
   12f1c:	andeq	r5, r2, r8, lsl #30
   12f20:	muleq	r1, ip, r8
   12f24:	andeq	r5, r1, r4, lsl #17
   12f28:	muleq	r1, r8, r8
   12f2c:	ldr	r3, [sp, #48]	; 0x30
   12f30:	ldrb	r5, [r3]
   12f34:	cmp	r5, #126	; 0x7e
   12f38:	ldrls	pc, [pc, r5, lsl #2]
   12f3c:	b	12ba8 <close@plt+0x1be0>
   12f40:	andeq	r2, r1, r8, lsl #21
   12f44:	andeq	r2, r1, r8, lsr #23
   12f48:	andeq	r2, r1, r8, lsr #23
   12f4c:	andeq	r2, r1, r8, lsr #23
   12f50:	andeq	r2, r1, r8, lsr #23
   12f54:	andeq	r2, r1, r8, lsr #23
   12f58:	andeq	r2, r1, r8, lsr #23
   12f5c:	andeq	r3, r1, r0, lsl #3
   12f60:	andeq	r3, r1, r8, ror r1
   12f64:	andeq	r2, r1, r4, asr sl
   12f68:	andeq	r2, r1, ip, lsl sl
   12f6c:	andeq	r2, r1, r4, ror sl
   12f70:	andeq	r2, r1, ip, asr sl
   12f74:	andeq	r3, r1, ip, ror #2
   12f78:	andeq	r2, r1, r8, lsr #23
   12f7c:	andeq	r2, r1, r8, lsr #23
   12f80:	andeq	r2, r1, r8, lsr #23
   12f84:	andeq	r2, r1, r8, lsr #23
   12f88:	andeq	r2, r1, r8, lsr #23
   12f8c:	andeq	r2, r1, r8, lsr #23
   12f90:	andeq	r2, r1, r8, lsr #23
   12f94:	andeq	r2, r1, r8, lsr #23
   12f98:	andeq	r2, r1, r8, lsr #23
   12f9c:	andeq	r2, r1, r8, lsr #23
   12fa0:	andeq	r2, r1, r8, lsr #23
   12fa4:	andeq	r2, r1, r8, lsr #23
   12fa8:	andeq	r2, r1, r8, lsr #23
   12fac:	andeq	r2, r1, r8, lsr #23
   12fb0:	andeq	r2, r1, r8, lsr #23
   12fb4:	andeq	r2, r1, r8, lsr #23
   12fb8:	andeq	r2, r1, r8, lsr #23
   12fbc:	andeq	r2, r1, r8, lsr #23
   12fc0:	andeq	r3, r1, r4, ror #2
   12fc4:	andeq	r2, r1, ip, ror sl
   12fc8:	andeq	r2, r1, ip, ror sl
   12fcc:	andeq	r3, r1, r8, asr #2
   12fd0:	andeq	r2, r1, ip, ror sl
   12fd4:	andeq	r3, r1, ip, lsr r1
   12fd8:	andeq	r2, r1, ip, ror sl
   12fdc:			; <UNDEFINED> instruction: 0x000128bc
   12fe0:	andeq	r2, r1, ip, ror sl
   12fe4:	andeq	r2, r1, ip, ror sl
   12fe8:	andeq	r2, r1, ip, ror sl
   12fec:	andeq	r3, r1, ip, lsr r1
   12ff0:	andeq	r3, r1, ip, lsr r1
   12ff4:	andeq	r3, r1, ip, lsr r1
   12ff8:	andeq	r3, r1, ip, lsr r1
   12ffc:	andeq	r3, r1, ip, lsr r1
   13000:	andeq	r3, r1, ip, lsr r1
   13004:	andeq	r3, r1, ip, lsr r1
   13008:	andeq	r3, r1, ip, lsr r1
   1300c:	andeq	r3, r1, ip, lsr r1
   13010:	andeq	r3, r1, ip, lsr r1
   13014:	andeq	r3, r1, ip, lsr r1
   13018:	andeq	r3, r1, ip, lsr r1
   1301c:	andeq	r3, r1, ip, lsr r1
   13020:	andeq	r3, r1, ip, lsr r1
   13024:	andeq	r3, r1, ip, lsr r1
   13028:	andeq	r3, r1, ip, lsr r1
   1302c:	andeq	r2, r1, ip, ror sl
   13030:	andeq	r2, r1, ip, ror sl
   13034:	andeq	r2, r1, ip, ror sl
   13038:	andeq	r2, r1, ip, ror sl
   1303c:	muleq	r1, r0, r8
   13040:	andeq	r2, r1, r8, lsr #23
   13044:	andeq	r3, r1, ip, lsr r1
   13048:	andeq	r3, r1, ip, lsr r1
   1304c:	andeq	r3, r1, ip, lsr r1
   13050:	andeq	r3, r1, ip, lsr r1
   13054:	andeq	r3, r1, ip, lsr r1
   13058:	andeq	r3, r1, ip, lsr r1
   1305c:	andeq	r3, r1, ip, lsr r1
   13060:	andeq	r3, r1, ip, lsr r1
   13064:	andeq	r3, r1, ip, lsr r1
   13068:	andeq	r3, r1, ip, lsr r1
   1306c:	andeq	r3, r1, ip, lsr r1
   13070:	andeq	r3, r1, ip, lsr r1
   13074:	andeq	r3, r1, ip, lsr r1
   13078:	andeq	r3, r1, ip, lsr r1
   1307c:	andeq	r3, r1, ip, lsr r1
   13080:	andeq	r3, r1, ip, lsr r1
   13084:	andeq	r3, r1, ip, lsr r1
   13088:	andeq	r3, r1, ip, lsr r1
   1308c:	andeq	r3, r1, ip, lsr r1
   13090:	andeq	r3, r1, ip, lsr r1
   13094:	andeq	r3, r1, ip, lsr r1
   13098:	andeq	r3, r1, ip, lsr r1
   1309c:	andeq	r3, r1, ip, lsr r1
   130a0:	andeq	r3, r1, ip, lsr r1
   130a4:	andeq	r3, r1, ip, lsr r1
   130a8:	andeq	r3, r1, ip, lsr r1
   130ac:	andeq	r2, r1, ip, ror sl
   130b0:	andeq	r2, r1, r8, asr #16
   130b4:	andeq	r3, r1, ip, lsr r1
   130b8:	andeq	r2, r1, ip, ror sl
   130bc:	andeq	r3, r1, ip, lsr r1
   130c0:	andeq	r2, r1, ip, ror sl
   130c4:	andeq	r3, r1, ip, lsr r1
   130c8:	andeq	r3, r1, ip, lsr r1
   130cc:	andeq	r3, r1, ip, lsr r1
   130d0:	andeq	r3, r1, ip, lsr r1
   130d4:	andeq	r3, r1, ip, lsr r1
   130d8:	andeq	r3, r1, ip, lsr r1
   130dc:	andeq	r3, r1, ip, lsr r1
   130e0:	andeq	r3, r1, ip, lsr r1
   130e4:	andeq	r3, r1, ip, lsr r1
   130e8:	andeq	r3, r1, ip, lsr r1
   130ec:	andeq	r3, r1, ip, lsr r1
   130f0:	andeq	r3, r1, ip, lsr r1
   130f4:	andeq	r3, r1, ip, lsr r1
   130f8:	andeq	r3, r1, ip, lsr r1
   130fc:	andeq	r3, r1, ip, lsr r1
   13100:	andeq	r3, r1, ip, lsr r1
   13104:	andeq	r3, r1, ip, lsr r1
   13108:	andeq	r3, r1, ip, lsr r1
   1310c:	andeq	r3, r1, ip, lsr r1
   13110:	andeq	r3, r1, ip, lsr r1
   13114:	andeq	r3, r1, ip, lsr r1
   13118:	andeq	r3, r1, ip, lsr r1
   1311c:	andeq	r3, r1, ip, lsr r1
   13120:	andeq	r3, r1, ip, lsr r1
   13124:	andeq	r3, r1, ip, lsr r1
   13128:	andeq	r3, r1, ip, lsr r1
   1312c:	andeq	r2, r1, r0, ror #12
   13130:	andeq	r2, r1, ip, ror sl
   13134:	andeq	r2, r1, r0, ror #12
   13138:	andeq	r3, r1, r8, asr #2
   1313c:	mov	r6, r7
   13140:	mov	r7, #0
   13144:	b	126c0 <close@plt+0x16f8>
   13148:	cmp	r9, #0
   1314c:	mov	r3, #0
   13150:	beq	12b90 <close@plt+0x1bc8>
   13154:	mov	r6, #0
   13158:	mov	r7, r3
   1315c:	mov	r3, r6
   13160:	b	126c4 <close@plt+0x16fc>
   13164:	mov	r3, #0
   13168:	b	12b70 <close@plt+0x1ba8>
   1316c:	mov	r7, #0
   13170:	mov	r3, #114	; 0x72
   13174:	b	12990 <close@plt+0x19c8>
   13178:	mov	r5, #98	; 0x62
   1317c:	b	12a20 <close@plt+0x1a58>
   13180:	mov	r5, #97	; 0x61
   13184:	b	12a60 <close@plt+0x1a98>
   13188:	ldr	r3, [sp, #32]
   1318c:	cmp	r3, #0
   13190:	bne	135d8 <close@plt+0x2610>
   13194:	add	r9, r9, #1
   13198:	ldr	r3, [sp, #44]	; 0x2c
   1319c:	mov	r6, #0
   131a0:	mov	r5, #92	; 0x5c
   131a4:	b	12958 <close@plt+0x1990>
   131a8:	ldr	r3, [sp, #36]	; 0x24
   131ac:	ldrb	r3, [r3, #1]
   131b0:	adds	r3, r3, #0
   131b4:	movne	r3, #1
   131b8:	b	1267c <close@plt+0x16b4>
   131bc:	ldr	r3, [sp, #164]	; 0xa4
   131c0:	ands	r3, r3, #4
   131c4:	beq	131e8 <close@plt+0x2220>
   131c8:	ldr	r2, [sp, #24]
   131cc:	add	r3, r9, #2
   131d0:	cmp	r3, r2
   131d4:	bcs	131e8 <close@plt+0x2220>
   131d8:	ldr	r2, [sp, #48]	; 0x30
   131dc:	ldrb	r5, [r2, #1]
   131e0:	cmp	r5, #63	; 0x3f
   131e4:	beq	1364c <close@plt+0x2684>
   131e8:	mov	r2, #0
   131ec:	mov	r6, r2
   131f0:	mov	r5, #63	; 0x3f
   131f4:	b	126a4 <close@plt+0x16dc>
   131f8:	ldr	r3, [sp, #32]
   131fc:	cmp	r3, #0
   13200:	bne	135d8 <close@plt+0x2610>
   13204:	mov	r6, r3
   13208:	mov	r5, #63	; 0x3f
   1320c:	b	126ec <close@plt+0x1724>
   13210:	ldr	r3, [sp, #24]
   13214:	cmn	r3, #1
   13218:	mov	r3, #0
   1321c:	str	r3, [sp, #108]	; 0x6c
   13220:	str	r3, [sp, #112]	; 0x70
   13224:	bne	13234 <close@plt+0x226c>
   13228:	ldr	r0, [sp, #36]	; 0x24
   1322c:	bl	10ed8 <strlen@plt>
   13230:	str	r0, [sp, #24]
   13234:	mov	r3, #0
   13238:	str	sl, [sp, #88]	; 0x58
   1323c:	ldr	sl, [sp, #36]	; 0x24
   13240:	str	r5, [sp, #92]	; 0x5c
   13244:	mov	r5, r3
   13248:	str	r7, [sp, #96]	; 0x60
   1324c:	str	r4, [sp, #100]	; 0x64
   13250:	str	r8, [sp, #84]	; 0x54
   13254:	ldr	r3, [sp, #24]
   13258:	add	r4, r9, r5
   1325c:	add	r7, sl, r4
   13260:	sub	r2, r3, r4
   13264:	mov	r1, r7
   13268:	add	r3, sp, #108	; 0x6c
   1326c:	add	r0, sp, #104	; 0x68
   13270:	bl	14c44 <close@plt+0x3c7c>
   13274:	subs	r8, r0, #0
   13278:	beq	132c8 <close@plt+0x2300>
   1327c:	cmn	r8, #1
   13280:	beq	13628 <close@plt+0x2660>
   13284:	cmn	r8, #2
   13288:	beq	13748 <close@plt+0x2780>
   1328c:	ldr	r3, [sp, #32]
   13290:	cmp	fp, #2
   13294:	movne	r3, #0
   13298:	andeq	r3, r3, #1
   1329c:	cmp	r3, #0
   132a0:	bne	13428 <close@plt+0x2460>
   132a4:	ldr	r0, [sp, #104]	; 0x68
   132a8:	bl	10e30 <iswprint@plt>
   132ac:	add	r5, r5, r8
   132b0:	cmp	r0, #0
   132b4:	add	r0, sp, #108	; 0x6c
   132b8:	moveq	r6, #0
   132bc:	bl	10dd0 <mbsinit@plt>
   132c0:	cmp	r0, #0
   132c4:	beq	13254 <close@plt+0x228c>
   132c8:	ldr	r3, [sp, #28]
   132cc:	mov	ip, r5
   132d0:	eor	r2, r6, #1
   132d4:	ldr	r5, [sp, #92]	; 0x5c
   132d8:	ldr	r7, [sp, #96]	; 0x60
   132dc:	ldr	r4, [sp, #100]	; 0x64
   132e0:	ldr	r8, [sp, #84]	; 0x54
   132e4:	ldr	sl, [sp, #88]	; 0x58
   132e8:	and	r2, r2, r3
   132ec:	cmp	ip, #1
   132f0:	bls	12bf0 <close@plt+0x1c28>
   132f4:	add	r1, ip, r9
   132f8:	ldr	lr, [sp, #48]	; 0x30
   132fc:	mov	r0, #0
   13300:	str	r6, [sp, #48]	; 0x30
   13304:	mov	ip, #39	; 0x27
   13308:	ldr	r6, [sp, #44]	; 0x2c
   1330c:	b	133c4 <close@plt+0x23fc>
   13310:	ldr	r0, [sp, #32]
   13314:	sub	r3, fp, #2
   13318:	cmp	r0, #0
   1331c:	clz	r3, r3
   13320:	lsr	r3, r3, #5
   13324:	bne	1352c <close@plt+0x2564>
   13328:	eor	r0, r6, #1
   1332c:	ands	r3, r3, r0
   13330:	beq	13360 <close@plt+0x2398>
   13334:	add	r0, r4, #1
   13338:	cmp	sl, r4
   1333c:	strbhi	ip, [r8, r4]
   13340:	cmp	sl, r0
   13344:	movhi	r6, #36	; 0x24
   13348:	strbhi	r6, [r8, r0]
   1334c:	add	r0, r4, #2
   13350:	mov	r6, r3
   13354:	add	r4, r4, #3
   13358:	cmp	sl, r0
   1335c:	strbhi	ip, [r8, r0]
   13360:	cmp	sl, r4
   13364:	movhi	r3, #92	; 0x5c
   13368:	strbhi	r3, [r8, r4]
   1336c:	add	r3, r4, #1
   13370:	cmp	sl, r3
   13374:	lsrhi	r0, r5, #6
   13378:	addhi	r0, r0, #48	; 0x30
   1337c:	strbhi	r0, [r8, r3]
   13380:	add	r0, r4, #2
   13384:	cmp	sl, r0
   13388:	lsrhi	r3, r5, #3
   1338c:	andhi	r3, r3, #7
   13390:	addhi	r3, r3, #48	; 0x30
   13394:	add	r9, r9, #1
   13398:	strbhi	r3, [r8, r0]
   1339c:	and	r5, r5, #7
   133a0:	cmp	r9, r1
   133a4:	add	r5, r5, #48	; 0x30
   133a8:	add	r4, r4, #3
   133ac:	bcs	1354c <close@plt+0x2584>
   133b0:	mov	r0, r2
   133b4:	cmp	sl, r4
   133b8:	strbhi	r5, [r8, r4]
   133bc:	ldrb	r5, [lr, #1]!
   133c0:	add	r4, r4, #1
   133c4:	cmp	r2, #0
   133c8:	bne	13310 <close@plt+0x2348>
   133cc:	eor	r3, r0, #1
   133d0:	and	r3, r3, r6
   133d4:	cmp	r7, #0
   133d8:	uxtb	r3, r3
   133dc:	beq	133f0 <close@plt+0x2428>
   133e0:	cmp	sl, r4
   133e4:	movhi	r7, #92	; 0x5c
   133e8:	strbhi	r7, [r8, r4]
   133ec:	add	r4, r4, #1
   133f0:	add	r9, r9, #1
   133f4:	cmp	r9, r1
   133f8:	bcs	13540 <close@plt+0x2578>
   133fc:	cmp	r3, #0
   13400:	beq	1356c <close@plt+0x25a4>
   13404:	cmp	sl, r4
   13408:	add	r3, r4, #1
   1340c:	strbhi	ip, [r8, r4]
   13410:	mov	r7, #0
   13414:	cmp	sl, r3
   13418:	strbhi	ip, [r8, r3]
   1341c:	add	r4, r4, #2
   13420:	mov	r6, r7
   13424:	b	133b4 <close@plt+0x23ec>
   13428:	cmp	r8, #1
   1342c:	beq	132a4 <close@plt+0x22dc>
   13430:	add	r1, r4, #1
   13434:	add	r3, sl, r8
   13438:	add	r1, sl, r1
   1343c:	add	r4, r3, r4
   13440:	ldrb	r3, [r1], #1
   13444:	sub	r3, r3, #91	; 0x5b
   13448:	cmp	r3, #33	; 0x21
   1344c:	ldrls	pc, [pc, r3, lsl #2]
   13450:	b	134dc <close@plt+0x2514>
   13454:	andeq	r3, r1, r8, ror #9
   13458:	andeq	r3, r1, r8, ror #9
   1345c:	ldrdeq	r3, [r1], -ip
   13460:	andeq	r3, r1, r8, ror #9
   13464:	ldrdeq	r3, [r1], -ip
   13468:	andeq	r3, r1, r8, ror #9
   1346c:	ldrdeq	r3, [r1], -ip
   13470:	ldrdeq	r3, [r1], -ip
   13474:	ldrdeq	r3, [r1], -ip
   13478:	ldrdeq	r3, [r1], -ip
   1347c:	ldrdeq	r3, [r1], -ip
   13480:	ldrdeq	r3, [r1], -ip
   13484:	ldrdeq	r3, [r1], -ip
   13488:	ldrdeq	r3, [r1], -ip
   1348c:	ldrdeq	r3, [r1], -ip
   13490:	ldrdeq	r3, [r1], -ip
   13494:	ldrdeq	r3, [r1], -ip
   13498:	ldrdeq	r3, [r1], -ip
   1349c:	ldrdeq	r3, [r1], -ip
   134a0:	ldrdeq	r3, [r1], -ip
   134a4:	ldrdeq	r3, [r1], -ip
   134a8:	ldrdeq	r3, [r1], -ip
   134ac:	ldrdeq	r3, [r1], -ip
   134b0:	ldrdeq	r3, [r1], -ip
   134b4:	ldrdeq	r3, [r1], -ip
   134b8:	ldrdeq	r3, [r1], -ip
   134bc:	ldrdeq	r3, [r1], -ip
   134c0:	ldrdeq	r3, [r1], -ip
   134c4:	ldrdeq	r3, [r1], -ip
   134c8:	ldrdeq	r3, [r1], -ip
   134cc:	ldrdeq	r3, [r1], -ip
   134d0:	ldrdeq	r3, [r1], -ip
   134d4:	ldrdeq	r3, [r1], -ip
   134d8:	andeq	r3, r1, r8, ror #9
   134dc:	cmp	r4, r1
   134e0:	bne	13440 <close@plt+0x2478>
   134e4:	b	132a4 <close@plt+0x22dc>
   134e8:	ldr	fp, [sp, #84]	; 0x54
   134ec:	ldr	sl, [sp, #88]	; 0x58
   134f0:	mov	r8, #2
   134f4:	b	129b0 <close@plt+0x19e8>
   134f8:	cmp	sl, r4
   134fc:	movls	r1, r4
   13500:	bls	12b00 <close@plt+0x1b38>
   13504:	ldr	r3, [sp, #44]	; 0x2c
   13508:	b	12af0 <close@plt+0x1b28>
   1350c:	str	sl, [sp, #72]	; 0x48
   13510:	ldr	sl, [sp, #32]
   13514:	b	12928 <close@plt+0x1960>
   13518:	add	r9, r9, #1
   1351c:	b	1221c <close@plt+0x1254>
   13520:	ldr	r2, [sp, #28]
   13524:	mov	r6, #0
   13528:	b	132f4 <close@plt+0x232c>
   1352c:	str	fp, [sp, #160]	; 0xa0
   13530:	str	r3, [sp, #28]
   13534:	mov	fp, r8
   13538:	ldr	r8, [sp, #160]	; 0xa0
   1353c:	b	129b0 <close@plt+0x19e8>
   13540:	str	r6, [sp, #44]	; 0x2c
   13544:	ldr	r6, [sp, #48]	; 0x30
   13548:	b	12958 <close@plt+0x1990>
   1354c:	str	r6, [sp, #44]	; 0x2c
   13550:	ldr	r6, [sp, #48]	; 0x30
   13554:	b	12764 <close@plt+0x179c>
   13558:	add	r4, r4, #4
   1355c:	str	r3, [sp, #44]	; 0x2c
   13560:	mov	r6, #0
   13564:	mov	r5, #48	; 0x30
   13568:	b	126ec <close@plt+0x1724>
   1356c:	mov	r7, r3
   13570:	b	133b4 <close@plt+0x23ec>
   13574:	ldr	r3, [pc, #-1624]	; 12f24 <close@plt+0x1f5c>
   13578:	mov	r4, #1
   1357c:	str	r4, [sp, #40]	; 0x28
   13580:	str	r4, [sp, #28]
   13584:	str	r4, [sp, #52]	; 0x34
   13588:	str	sl, [sp, #72]	; 0x48
   1358c:	str	sl, [sp, #68]	; 0x44
   13590:	str	sl, [sp, #44]	; 0x2c
   13594:	str	sl, [sp, #32]
   13598:	str	r3, [sp, #60]	; 0x3c
   1359c:	b	1220c <close@plt+0x1244>
   135a0:	mov	r3, r6
   135a4:	mov	r5, #48	; 0x30
   135a8:	mov	r6, #0
   135ac:	b	126ec <close@plt+0x1724>
   135b0:	cmp	sl, r4
   135b4:	movhi	r3, #48	; 0x30
   135b8:	strbhi	r3, [r8, r4]
   135bc:	add	r3, r1, #2
   135c0:	cmp	sl, r3
   135c4:	movhi	r0, #48	; 0x30
   135c8:	strbhi	r0, [r8, r3]
   135cc:	add	r4, r1, #3
   135d0:	mov	r5, #48	; 0x30
   135d4:	b	12b34 <close@plt+0x1b6c>
   135d8:	str	fp, [sp, #160]	; 0xa0
   135dc:	mov	fp, r8
   135e0:	ldr	r8, [sp, #160]	; 0xa0
   135e4:	b	129b0 <close@plt+0x19e8>
   135e8:	ldr	r2, [sp, #80]	; 0x50
   135ec:	ldrb	r3, [r2]
   135f0:	cmp	r3, #0
   135f4:	beq	121dc <close@plt+0x1214>
   135f8:	cmp	sl, r4
   135fc:	strbhi	r3, [fp, r4]
   13600:	ldrb	r3, [r2, #1]!
   13604:	add	r4, r4, #1
   13608:	cmp	r3, #0
   1360c:	bne	135f8 <close@plt+0x2630>
   13610:	b	121dc <close@plt+0x1214>
   13614:	str	fp, [sp, #160]	; 0xa0
   13618:	mov	r3, #0
   1361c:	mov	fp, r8
   13620:	ldr	r8, [sp, #160]	; 0xa0
   13624:	b	12a44 <close@plt+0x1a7c>
   13628:	mov	ip, r5
   1362c:	ldr	r7, [sp, #96]	; 0x60
   13630:	ldr	r5, [sp, #92]	; 0x5c
   13634:	ldr	r4, [sp, #100]	; 0x64
   13638:	ldr	r8, [sp, #84]	; 0x54
   1363c:	ldr	sl, [sp, #88]	; 0x58
   13640:	ldr	r2, [sp, #28]
   13644:	mov	r6, #0
   13648:	b	132ec <close@plt+0x2324>
   1364c:	ldr	r2, [sp, #36]	; 0x24
   13650:	ldrb	r1, [r2, r3]
   13654:	sub	r2, r1, #33	; 0x21
   13658:	cmp	r2, #29
   1365c:	ldrls	pc, [pc, r2, lsl #2]
   13660:	b	1373c <close@plt+0x2774>
   13664:	ldrdeq	r3, [r1], -ip
   13668:	andeq	r3, r1, ip, lsr r7
   1366c:	andeq	r3, r1, ip, lsr r7
   13670:	andeq	r3, r1, ip, lsr r7
   13674:	andeq	r3, r1, ip, lsr r7
   13678:	andeq	r3, r1, ip, lsr r7
   1367c:	ldrdeq	r3, [r1], -ip
   13680:	ldrdeq	r3, [r1], -ip
   13684:	ldrdeq	r3, [r1], -ip
   13688:	andeq	r3, r1, ip, lsr r7
   1368c:	andeq	r3, r1, ip, lsr r7
   13690:	andeq	r3, r1, ip, lsr r7
   13694:	ldrdeq	r3, [r1], -ip
   13698:	andeq	r3, r1, ip, lsr r7
   1369c:	ldrdeq	r3, [r1], -ip
   136a0:	andeq	r3, r1, ip, lsr r7
   136a4:	andeq	r3, r1, ip, lsr r7
   136a8:	andeq	r3, r1, ip, lsr r7
   136ac:	andeq	r3, r1, ip, lsr r7
   136b0:	andeq	r3, r1, ip, lsr r7
   136b4:	andeq	r3, r1, ip, lsr r7
   136b8:	andeq	r3, r1, ip, lsr r7
   136bc:	andeq	r3, r1, ip, lsr r7
   136c0:	andeq	r3, r1, ip, lsr r7
   136c4:	andeq	r3, r1, ip, lsr r7
   136c8:	andeq	r3, r1, ip, lsr r7
   136cc:	andeq	r3, r1, ip, lsr r7
   136d0:	ldrdeq	r3, [r1], -ip
   136d4:	ldrdeq	r3, [r1], -ip
   136d8:	ldrdeq	r3, [r1], -ip
   136dc:	ldr	r2, [sp, #32]
   136e0:	cmp	r2, #0
   136e4:	bne	137e8 <close@plt+0x2820>
   136e8:	cmp	sl, r4
   136ec:	movhi	r2, #63	; 0x3f
   136f0:	strbhi	r2, [r8, r4]
   136f4:	add	r2, r4, #1
   136f8:	cmp	sl, r2
   136fc:	movhi	r0, #34	; 0x22
   13700:	strbhi	r0, [r8, r2]
   13704:	add	r2, r4, #2
   13708:	cmp	sl, r2
   1370c:	movhi	r0, #34	; 0x22
   13710:	strbhi	r0, [r8, r2]
   13714:	add	r2, r4, #3
   13718:	cmp	sl, r2
   1371c:	movhi	r0, #63	; 0x3f
   13720:	strbhi	r0, [r8, r2]
   13724:	mov	r2, #0
   13728:	add	r4, r4, #4
   1372c:	mov	r5, r1
   13730:	mov	r9, r3
   13734:	mov	r6, r2
   13738:	b	12b34 <close@plt+0x1b6c>
   1373c:	mov	r2, #0
   13740:	mov	r6, r2
   13744:	b	126a4 <close@plt+0x16dc>
   13748:	ldr	r0, [sp, #24]
   1374c:	mov	r1, r4
   13750:	cmp	r1, r0
   13754:	mov	r2, r7
   13758:	mov	r3, r5
   1375c:	mov	ip, r5
   13760:	ldr	r7, [sp, #96]	; 0x60
   13764:	ldr	r5, [sp, #92]	; 0x5c
   13768:	ldr	r4, [sp, #100]	; 0x64
   1376c:	ldr	r8, [sp, #84]	; 0x54
   13770:	ldr	sl, [sp, #88]	; 0x58
   13774:	bcs	137a8 <close@plt+0x27e0>
   13778:	ldrb	r6, [r2]
   1377c:	cmp	r6, #0
   13780:	bne	13794 <close@plt+0x27cc>
   13784:	b	138c4 <close@plt+0x28fc>
   13788:	ldrb	r6, [r2, #1]!
   1378c:	cmp	r6, #0
   13790:	beq	1384c <close@plt+0x2884>
   13794:	add	r3, r3, #1
   13798:	add	r1, r9, r3
   1379c:	cmp	r1, r0
   137a0:	bcc	13788 <close@plt+0x27c0>
   137a4:	mov	ip, r3
   137a8:	ldr	r2, [sp, #28]
   137ac:	mov	r6, #0
   137b0:	b	132ec <close@plt+0x2324>
   137b4:	mov	r3, #1
   137b8:	str	r3, [sp, #40]	; 0x28
   137bc:	str	r3, [sp, #32]
   137c0:	str	r3, [sp, #28]
   137c4:	str	r3, [sp, #52]	; 0x34
   137c8:	ldr	r3, [pc, #-2220]	; 12f24 <close@plt+0x1f5c>
   137cc:	mov	r2, #0
   137d0:	str	r2, [sp, #68]	; 0x44
   137d4:	str	r2, [sp, #44]	; 0x2c
   137d8:	str	r2, [sp, #72]	; 0x48
   137dc:	mov	r4, r2
   137e0:	str	r3, [sp, #60]	; 0x3c
   137e4:	b	1220c <close@plt+0x1244>
   137e8:	str	fp, [sp, #160]	; 0xa0
   137ec:	mov	fp, r8
   137f0:	ldr	r8, [sp, #160]	; 0xa0
   137f4:	b	129bc <close@plt+0x19f4>
   137f8:	mov	r2, r3
   137fc:	ldr	r3, [sp, #60]	; 0x3c
   13800:	cmp	r3, #0
   13804:	moveq	r2, #0
   13808:	andne	r2, r2, #1
   1380c:	cmp	r2, #0
   13810:	beq	1383c <close@plt+0x2874>
   13814:	mov	r2, r3
   13818:	ldrb	r3, [r3]
   1381c:	cmp	r3, #0
   13820:	beq	1383c <close@plt+0x2874>
   13824:	cmp	sl, r4
   13828:	strbhi	r3, [fp, r4]
   1382c:	ldrb	r3, [r2, #1]!
   13830:	add	r4, r4, #1
   13834:	cmp	r3, #0
   13838:	bne	13824 <close@plt+0x285c>
   1383c:	cmp	sl, r4
   13840:	movhi	r3, #0
   13844:	strbhi	r3, [fp, r4]
   13848:	b	129fc <close@plt+0x1a34>
   1384c:	mov	ip, r3
   13850:	ldr	r2, [sp, #28]
   13854:	b	132ec <close@plt+0x2324>
   13858:	str	fp, [sp, #160]	; 0xa0
   1385c:	mov	fp, r8
   13860:	ldr	r8, [sp, #160]	; 0xa0
   13864:	sub	r3, r8, #2
   13868:	clz	r3, r3
   1386c:	lsr	r3, r3, #5
   13870:	str	r3, [sp, #28]
   13874:	b	129b0 <close@plt+0x19e8>
   13878:	ldr	r3, [sp, #76]	; 0x4c
   1387c:	mov	ip, #5
   13880:	str	r3, [sp, #16]
   13884:	ldr	r3, [sp, #80]	; 0x50
   13888:	ldr	r2, [sp, #36]	; 0x24
   1388c:	str	r3, [sp, #12]
   13890:	ldr	r3, [sp, #56]	; 0x38
   13894:	ldr	r1, [sp, #72]	; 0x48
   13898:	str	r3, [sp, #8]
   1389c:	ldr	r3, [sp, #164]	; 0xa4
   138a0:	mov	r0, fp
   138a4:	str	r3, [sp, #4]
   138a8:	str	ip, [sp]
   138ac:	ldr	r3, [sp, #24]
   138b0:	bl	12114 <close@plt+0x114c>
   138b4:	mov	r4, r0
   138b8:	b	129fc <close@plt+0x1a34>
   138bc:	mov	r8, #2
   138c0:	b	129b0 <close@plt+0x19e8>
   138c4:	ldr	r2, [sp, #28]
   138c8:	b	132ec <close@plt+0x2324>
   138cc:	mov	r3, #0
   138d0:	str	r3, [sp, #68]	; 0x44
   138d4:	str	r3, [sp, #44]	; 0x2c
   138d8:	str	r3, [sp, #72]	; 0x48
   138dc:	str	r3, [sp, #28]
   138e0:	mov	r4, r3
   138e4:	ldr	r3, [pc, #-2500]	; 12f28 <close@plt+0x1f60>
   138e8:	mov	r2, #1
   138ec:	str	r2, [sp, #40]	; 0x28
   138f0:	str	r2, [sp, #32]
   138f4:	str	r2, [sp, #52]	; 0x34
   138f8:	str	r3, [sp, #60]	; 0x3c
   138fc:	b	1220c <close@plt+0x1244>
   13900:	bl	10e0c <__stack_chk_fail@plt>
   13904:	mov	r5, r3
   13908:	mov	r6, #0
   1390c:	b	12700 <close@plt+0x1738>
   13910:	mov	r3, #0
   13914:	mov	r2, #1
   13918:	str	r3, [sp, #44]	; 0x2c
   1391c:	str	r3, [sp, #72]	; 0x48
   13920:	str	r2, [sp, #40]	; 0x28
   13924:	b	1281c <close@plt+0x1854>
   13928:	bl	10fbc <abort@plt>
   1392c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13930:	sub	sp, sp, #44	; 0x2c
   13934:	mov	r6, r0
   13938:	mov	r4, r3
   1393c:	mov	sl, r1
   13940:	mov	fp, r2
   13944:	bl	10ee4 <__errno_location@plt>
   13948:	ldr	r7, [pc, #364]	; 13abc <close@plt+0x2af4>
   1394c:	cmp	r6, #0
   13950:	ldr	r5, [r7]
   13954:	ldr	r3, [r0]
   13958:	str	r3, [sp, #24]
   1395c:	blt	13ab8 <close@plt+0x2af0>
   13960:	ldr	r3, [r7, #4]
   13964:	mov	r8, r0
   13968:	cmp	r3, r6
   1396c:	bgt	139b8 <close@plt+0x29f0>
   13970:	cmn	r6, #-268435454	; 0xf0000002
   13974:	bgt	13ab4 <close@plt+0x2aec>
   13978:	add	r9, r6, #1
   1397c:	add	r3, r7, #8
   13980:	cmp	r5, r3
   13984:	lsl	r1, r9, #3
   13988:	beq	13a94 <close@plt+0x2acc>
   1398c:	mov	r0, r5
   13990:	bl	1472c <close@plt+0x3764>
   13994:	mov	r5, r0
   13998:	str	r0, [r7]
   1399c:	ldr	r0, [r7, #4]
   139a0:	mov	r1, #0
   139a4:	sub	r2, r9, r0
   139a8:	add	r0, r5, r0, lsl #3
   139ac:	lsl	r2, r2, #3
   139b0:	bl	10f08 <memset@plt>
   139b4:	str	r9, [r7, #4]
   139b8:	add	r3, r5, r6, lsl #3
   139bc:	ldr	r1, [r4, #4]
   139c0:	ldr	r7, [r3, #4]
   139c4:	ldr	r9, [r5, r6, lsl #3]
   139c8:	ldr	r2, [r4, #40]	; 0x28
   139cc:	ldr	ip, [r4, #44]	; 0x2c
   139d0:	str	r3, [sp, #28]
   139d4:	ldr	r3, [r4]
   139d8:	orr	r1, r1, #1
   139dc:	add	lr, r4, #8
   139e0:	str	r1, [sp, #36]	; 0x24
   139e4:	str	r1, [sp, #4]
   139e8:	str	r2, [sp, #12]
   139ec:	str	r3, [sp]
   139f0:	mov	r0, r7
   139f4:	mov	r1, r9
   139f8:	str	ip, [sp, #16]
   139fc:	str	lr, [sp, #8]
   13a00:	mov	r3, fp
   13a04:	mov	r2, sl
   13a08:	str	lr, [sp, #32]
   13a0c:	bl	12114 <close@plt+0x114c>
   13a10:	cmp	r9, r0
   13a14:	bhi	13a80 <close@plt+0x2ab8>
   13a18:	ldr	r3, [pc, #160]	; 13ac0 <close@plt+0x2af8>
   13a1c:	add	r9, r0, #1
   13a20:	cmp	r7, r3
   13a24:	str	r9, [r5, r6, lsl #3]
   13a28:	beq	13a34 <close@plt+0x2a6c>
   13a2c:	mov	r0, r7
   13a30:	bl	10dac <free@plt>
   13a34:	mov	r0, r9
   13a38:	bl	146d0 <close@plt+0x3708>
   13a3c:	ldr	lr, [sp, #28]
   13a40:	ldr	ip, [r4, #44]	; 0x2c
   13a44:	ldr	r5, [r4, #40]	; 0x28
   13a48:	mov	r3, fp
   13a4c:	mov	r2, sl
   13a50:	mov	r1, r9
   13a54:	str	r0, [lr, #4]
   13a58:	ldr	lr, [r4]
   13a5c:	ldr	r4, [sp, #32]
   13a60:	str	ip, [sp, #16]
   13a64:	str	r4, [sp, #8]
   13a68:	ldr	r4, [sp, #36]	; 0x24
   13a6c:	str	r5, [sp, #12]
   13a70:	str	r4, [sp, #4]
   13a74:	str	lr, [sp]
   13a78:	mov	r7, r0
   13a7c:	bl	12114 <close@plt+0x114c>
   13a80:	ldr	r3, [sp, #24]
   13a84:	mov	r0, r7
   13a88:	str	r3, [r8]
   13a8c:	add	sp, sp, #44	; 0x2c
   13a90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a94:	mov	r0, #0
   13a98:	bl	1472c <close@plt+0x3764>
   13a9c:	ldr	r3, [pc, #32]	; 13ac4 <close@plt+0x2afc>
   13aa0:	mov	r5, r0
   13aa4:	ldm	r3, {r0, r1}
   13aa8:	str	r5, [r7]
   13aac:	stm	r5, {r0, r1}
   13ab0:	b	1399c <close@plt+0x29d4>
   13ab4:	bl	14918 <close@plt+0x3950>
   13ab8:	bl	10fbc <abort@plt>
   13abc:	strdeq	r6, [r2], -ip
   13ac0:	andeq	r6, r2, r0, lsl #3
   13ac4:	andeq	r6, r2, r4, lsl #2
   13ac8:	push	{r4, r5, r6, lr}
   13acc:	mov	r5, r0
   13ad0:	bl	10ee4 <__errno_location@plt>
   13ad4:	cmp	r5, #0
   13ad8:	mov	r1, #48	; 0x30
   13adc:	mov	r4, r0
   13ae0:	ldr	r0, [pc, #16]	; 13af8 <close@plt+0x2b30>
   13ae4:	ldr	r6, [r4]
   13ae8:	movne	r0, r5
   13aec:	bl	148d8 <close@plt+0x3910>
   13af0:	str	r6, [r4]
   13af4:	pop	{r4, r5, r6, pc}
   13af8:	andeq	r6, r2, r0, lsl #5
   13afc:	ldr	r3, [pc, #12]	; 13b10 <close@plt+0x2b48>
   13b00:	cmp	r0, #0
   13b04:	moveq	r0, r3
   13b08:	ldr	r0, [r0]
   13b0c:	bx	lr
   13b10:	andeq	r6, r2, r0, lsl #5
   13b14:	ldr	r3, [pc, #12]	; 13b28 <close@plt+0x2b60>
   13b18:	cmp	r0, #0
   13b1c:	moveq	r0, r3
   13b20:	str	r1, [r0]
   13b24:	bx	lr
   13b28:	andeq	r6, r2, r0, lsl #5
   13b2c:	ldr	r3, [pc, #52]	; 13b68 <close@plt+0x2ba0>
   13b30:	cmp	r0, #0
   13b34:	moveq	r0, r3
   13b38:	add	r3, r0, #8
   13b3c:	push	{lr}		; (str lr, [sp, #-4]!)
   13b40:	lsr	lr, r1, #5
   13b44:	and	r1, r1, #31
   13b48:	ldr	ip, [r3, lr, lsl #2]
   13b4c:	lsr	r0, ip, r1
   13b50:	eor	r2, r2, r0
   13b54:	and	r2, r2, #1
   13b58:	and	r0, r0, #1
   13b5c:	eor	r1, ip, r2, lsl r1
   13b60:	str	r1, [r3, lr, lsl #2]
   13b64:	pop	{pc}		; (ldr pc, [sp], #4)
   13b68:	andeq	r6, r2, r0, lsl #5
   13b6c:	ldr	r3, [pc, #16]	; 13b84 <close@plt+0x2bbc>
   13b70:	cmp	r0, #0
   13b74:	movne	r3, r0
   13b78:	ldr	r0, [r3, #4]
   13b7c:	str	r1, [r3, #4]
   13b80:	bx	lr
   13b84:	andeq	r6, r2, r0, lsl #5
   13b88:	ldr	r3, [pc, #44]	; 13bbc <close@plt+0x2bf4>
   13b8c:	cmp	r0, #0
   13b90:	moveq	r0, r3
   13b94:	mov	ip, #10
   13b98:	cmp	r2, #0
   13b9c:	cmpne	r1, #0
   13ba0:	str	ip, [r0]
   13ba4:	beq	13bb4 <close@plt+0x2bec>
   13ba8:	str	r1, [r0, #40]	; 0x28
   13bac:	str	r2, [r0, #44]	; 0x2c
   13bb0:	bx	lr
   13bb4:	push	{r4, lr}
   13bb8:	bl	10fbc <abort@plt>
   13bbc:	andeq	r6, r2, r0, lsl #5
   13bc0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13bc4:	sub	sp, sp, #24
   13bc8:	ldr	ip, [pc, #108]	; 13c3c <close@plt+0x2c74>
   13bcc:	ldr	r4, [sp, #56]	; 0x38
   13bd0:	mov	r9, r2
   13bd4:	cmp	r4, #0
   13bd8:	moveq	r4, ip
   13bdc:	mov	sl, r3
   13be0:	mov	r7, r0
   13be4:	mov	r8, r1
   13be8:	bl	10ee4 <__errno_location@plt>
   13bec:	ldr	r3, [r4, #44]	; 0x2c
   13bf0:	mov	r1, r8
   13bf4:	ldr	r6, [r0]
   13bf8:	str	r3, [sp, #16]
   13bfc:	ldr	r2, [r4, #40]	; 0x28
   13c00:	add	r3, r4, #8
   13c04:	str	r3, [sp, #8]
   13c08:	str	r2, [sp, #12]
   13c0c:	ldr	r2, [r4, #4]
   13c10:	mov	r5, r0
   13c14:	str	r2, [sp, #4]
   13c18:	ldr	ip, [r4]
   13c1c:	mov	r3, sl
   13c20:	mov	r2, r9
   13c24:	mov	r0, r7
   13c28:	str	ip, [sp]
   13c2c:	bl	12114 <close@plt+0x114c>
   13c30:	str	r6, [r5]
   13c34:	add	sp, sp, #24
   13c38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13c3c:	andeq	r6, r2, r0, lsl #5
   13c40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c44:	cmp	r3, #0
   13c48:	sub	sp, sp, #44	; 0x2c
   13c4c:	ldr	r4, [pc, #192]	; 13d14 <close@plt+0x2d4c>
   13c50:	mov	r6, r2
   13c54:	movne	r4, r3
   13c58:	mov	r9, r1
   13c5c:	mov	r8, r0
   13c60:	bl	10ee4 <__errno_location@plt>
   13c64:	ldr	r3, [r4, #44]	; 0x2c
   13c68:	ldr	r5, [r4, #4]
   13c6c:	add	sl, r4, #8
   13c70:	cmp	r6, #0
   13c74:	orreq	r5, r5, #1
   13c78:	mov	r1, #0
   13c7c:	ldr	r2, [r0]
   13c80:	str	r3, [sp, #16]
   13c84:	ldr	r3, [r4, #40]	; 0x28
   13c88:	stmib	sp, {r5, sl}
   13c8c:	str	r3, [sp, #12]
   13c90:	ldr	r3, [r4]
   13c94:	mov	r7, r0
   13c98:	str	r2, [sp, #28]
   13c9c:	str	r3, [sp]
   13ca0:	mov	r2, r8
   13ca4:	mov	r3, r9
   13ca8:	mov	r0, r1
   13cac:	bl	12114 <close@plt+0x114c>
   13cb0:	add	r1, r0, #1
   13cb4:	mov	fp, r0
   13cb8:	mov	r0, r1
   13cbc:	str	r1, [sp, #36]	; 0x24
   13cc0:	bl	146d0 <close@plt+0x3708>
   13cc4:	ldr	r3, [r4, #44]	; 0x2c
   13cc8:	mov	r2, r8
   13ccc:	str	r3, [sp, #16]
   13cd0:	ldr	r3, [r4, #40]	; 0x28
   13cd4:	str	r5, [sp, #4]
   13cd8:	str	r3, [sp, #12]
   13cdc:	str	sl, [sp, #8]
   13ce0:	ldr	ip, [r4]
   13ce4:	ldr	r1, [sp, #36]	; 0x24
   13ce8:	mov	r3, r9
   13cec:	str	ip, [sp]
   13cf0:	str	r0, [sp, #32]
   13cf4:	bl	12114 <close@plt+0x114c>
   13cf8:	ldr	r2, [sp, #28]
   13cfc:	cmp	r6, #0
   13d00:	str	r2, [r7]
   13d04:	ldr	r0, [sp, #32]
   13d08:	strne	fp, [r6]
   13d0c:	add	sp, sp, #44	; 0x2c
   13d10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d14:	andeq	r6, r2, r0, lsl #5
   13d18:	mov	r3, r2
   13d1c:	mov	r2, #0
   13d20:	b	13c40 <close@plt+0x2c78>
   13d24:	push	{r4, r5, r6, r7, r8, lr}
   13d28:	ldr	r6, [pc, #112]	; 13da0 <close@plt+0x2dd8>
   13d2c:	ldr	r3, [r6, #4]
   13d30:	ldr	r7, [r6]
   13d34:	cmp	r3, #1
   13d38:	ble	13d5c <close@plt+0x2d94>
   13d3c:	sub	r5, r7, #8
   13d40:	add	r5, r5, r3, lsl #3
   13d44:	mov	r4, r7
   13d48:	ldr	r0, [r4, #12]
   13d4c:	add	r4, r4, #8
   13d50:	bl	10dac <free@plt>
   13d54:	cmp	r4, r5
   13d58:	bne	13d48 <close@plt+0x2d80>
   13d5c:	ldr	r0, [r7, #4]
   13d60:	ldr	r4, [pc, #60]	; 13da4 <close@plt+0x2ddc>
   13d64:	cmp	r0, r4
   13d68:	beq	13d7c <close@plt+0x2db4>
   13d6c:	bl	10dac <free@plt>
   13d70:	mov	r3, #256	; 0x100
   13d74:	str	r4, [r6, #12]
   13d78:	str	r3, [r6, #8]
   13d7c:	ldr	r4, [pc, #36]	; 13da8 <close@plt+0x2de0>
   13d80:	cmp	r7, r4
   13d84:	beq	13d94 <close@plt+0x2dcc>
   13d88:	mov	r0, r7
   13d8c:	bl	10dac <free@plt>
   13d90:	str	r4, [r6]
   13d94:	mov	r3, #1
   13d98:	str	r3, [r6, #4]
   13d9c:	pop	{r4, r5, r6, r7, r8, pc}
   13da0:	strdeq	r6, [r2], -ip
   13da4:	andeq	r6, r2, r0, lsl #3
   13da8:	andeq	r6, r2, r4, lsl #2
   13dac:	ldr	r3, [pc, #4]	; 13db8 <close@plt+0x2df0>
   13db0:	mvn	r2, #0
   13db4:	b	1392c <close@plt+0x2964>
   13db8:	andeq	r6, r2, r0, lsl #5
   13dbc:	ldr	r3, [pc]	; 13dc4 <close@plt+0x2dfc>
   13dc0:	b	1392c <close@plt+0x2964>
   13dc4:	andeq	r6, r2, r0, lsl #5
   13dc8:	mov	r1, r0
   13dcc:	ldr	r3, [pc, #8]	; 13ddc <close@plt+0x2e14>
   13dd0:	mvn	r2, #0
   13dd4:	mov	r0, #0
   13dd8:	b	1392c <close@plt+0x2964>
   13ddc:	andeq	r6, r2, r0, lsl #5
   13de0:	mov	r2, r1
   13de4:	ldr	r3, [pc, #8]	; 13df4 <close@plt+0x2e2c>
   13de8:	mov	r1, r0
   13dec:	mov	r0, #0
   13df0:	b	1392c <close@plt+0x2964>
   13df4:	andeq	r6, r2, r0, lsl #5
   13df8:	push	{r4, r5, r6, lr}
   13dfc:	sub	sp, sp, #56	; 0x38
   13e00:	ldr	r4, [pc, #68]	; 13e4c <close@plt+0x2e84>
   13e04:	mov	r6, r2
   13e08:	mov	r5, r0
   13e0c:	ldr	r3, [r4]
   13e10:	add	r0, sp, #4
   13e14:	str	r3, [sp, #52]	; 0x34
   13e18:	bl	11fa4 <close@plt+0xfdc>
   13e1c:	add	r3, sp, #4
   13e20:	mvn	r2, #0
   13e24:	mov	r1, r6
   13e28:	mov	r0, r5
   13e2c:	bl	1392c <close@plt+0x2964>
   13e30:	ldr	r2, [sp, #52]	; 0x34
   13e34:	ldr	r3, [r4]
   13e38:	cmp	r2, r3
   13e3c:	bne	13e48 <close@plt+0x2e80>
   13e40:	add	sp, sp, #56	; 0x38
   13e44:	pop	{r4, r5, r6, pc}
   13e48:	bl	10e0c <__stack_chk_fail@plt>
   13e4c:	andeq	r5, r2, r8, lsl #30
   13e50:	push	{r4, r5, r6, r7, lr}
   13e54:	sub	sp, sp, #60	; 0x3c
   13e58:	ldr	r4, [pc, #72]	; 13ea8 <close@plt+0x2ee0>
   13e5c:	mov	r6, r2
   13e60:	mov	r7, r3
   13e64:	ldr	ip, [r4]
   13e68:	mov	r5, r0
   13e6c:	add	r0, sp, #4
   13e70:	str	ip, [sp, #52]	; 0x34
   13e74:	bl	11fa4 <close@plt+0xfdc>
   13e78:	add	r3, sp, #4
   13e7c:	mov	r2, r7
   13e80:	mov	r1, r6
   13e84:	mov	r0, r5
   13e88:	bl	1392c <close@plt+0x2964>
   13e8c:	ldr	r2, [sp, #52]	; 0x34
   13e90:	ldr	r3, [r4]
   13e94:	cmp	r2, r3
   13e98:	bne	13ea4 <close@plt+0x2edc>
   13e9c:	add	sp, sp, #60	; 0x3c
   13ea0:	pop	{r4, r5, r6, r7, pc}
   13ea4:	bl	10e0c <__stack_chk_fail@plt>
   13ea8:	andeq	r5, r2, r8, lsl #30
   13eac:	mov	r2, r1
   13eb0:	mov	r1, r0
   13eb4:	mov	r0, #0
   13eb8:	b	13df8 <close@plt+0x2e30>
   13ebc:	mov	r3, r2
   13ec0:	mov	r2, r1
   13ec4:	mov	r1, r0
   13ec8:	mov	r0, #0
   13ecc:	b	13e50 <close@plt+0x2e88>
   13ed0:	push	{r4, r5, r6, r7, r8, r9, lr}
   13ed4:	mov	r4, r2
   13ed8:	ldr	lr, [pc, #128]	; 13f60 <close@plt+0x2f98>
   13edc:	mov	r8, r0
   13ee0:	mov	r9, r1
   13ee4:	ldm	lr!, {r0, r1, r2, r3}
   13ee8:	sub	sp, sp, #60	; 0x3c
   13eec:	add	ip, sp, #4
   13ef0:	lsr	r6, r4, #5
   13ef4:	stmia	ip!, {r0, r1, r2, r3}
   13ef8:	add	r7, sp, #12
   13efc:	ldm	lr!, {r0, r1, r2, r3}
   13f00:	and	r4, r4, #31
   13f04:	ldr	r5, [pc, #88]	; 13f64 <close@plt+0x2f9c>
   13f08:	stmia	ip!, {r0, r1, r2, r3}
   13f0c:	ldm	lr, {r0, r1, r2, r3}
   13f10:	stm	ip, {r0, r1, r2, r3}
   13f14:	mov	r2, r9
   13f18:	ldr	r3, [r7, r6, lsl #2]
   13f1c:	ldr	ip, [r5]
   13f20:	mov	r1, r8
   13f24:	mvn	r0, r3, lsr r4
   13f28:	and	r0, r0, #1
   13f2c:	str	ip, [sp, #52]	; 0x34
   13f30:	eor	r4, r3, r0, lsl r4
   13f34:	add	r3, sp, #4
   13f38:	mov	r0, #0
   13f3c:	str	r4, [r7, r6, lsl #2]
   13f40:	bl	1392c <close@plt+0x2964>
   13f44:	ldr	r2, [sp, #52]	; 0x34
   13f48:	ldr	r3, [r5]
   13f4c:	cmp	r2, r3
   13f50:	bne	13f5c <close@plt+0x2f94>
   13f54:	add	sp, sp, #60	; 0x3c
   13f58:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13f5c:	bl	10e0c <__stack_chk_fail@plt>
   13f60:	andeq	r6, r2, r0, lsl #5
   13f64:	andeq	r5, r2, r8, lsl #30
   13f68:	mov	r2, r1
   13f6c:	mvn	r1, #0
   13f70:	b	13ed0 <close@plt+0x2f08>
   13f74:	mov	r2, #58	; 0x3a
   13f78:	mvn	r1, #0
   13f7c:	b	13ed0 <close@plt+0x2f08>
   13f80:	mov	r2, #58	; 0x3a
   13f84:	b	13ed0 <close@plt+0x2f08>
   13f88:	push	{r4, r5, r6, r7, r8, lr}
   13f8c:	sub	sp, sp, #104	; 0x68
   13f90:	ldr	r5, [pc, #120]	; 14010 <close@plt+0x3048>
   13f94:	mov	r6, r0
   13f98:	mov	r0, sp
   13f9c:	ldr	r3, [r5]
   13fa0:	mov	r7, r2
   13fa4:	str	r3, [sp, #100]	; 0x64
   13fa8:	bl	11fa4 <close@plt+0xfdc>
   13fac:	mov	ip, sp
   13fb0:	add	lr, sp, #52	; 0x34
   13fb4:	ldm	ip!, {r0, r1, r2, r3}
   13fb8:	stmia	lr!, {r0, r1, r2, r3}
   13fbc:	ldm	ip!, {r0, r1, r2, r3}
   13fc0:	ldr	r8, [sp, #64]	; 0x40
   13fc4:	stmia	lr!, {r0, r1, r2, r3}
   13fc8:	mvn	r4, r8
   13fcc:	ldm	ip, {r0, r1, r2, r3}
   13fd0:	and	ip, r4, #67108864	; 0x4000000
   13fd4:	eor	ip, ip, r8
   13fd8:	str	ip, [sp, #64]	; 0x40
   13fdc:	stm	lr, {r0, r1, r2, r3}
   13fe0:	add	r3, sp, #52	; 0x34
   13fe4:	mvn	r2, #0
   13fe8:	mov	r1, r7
   13fec:	mov	r0, r6
   13ff0:	bl	1392c <close@plt+0x2964>
   13ff4:	ldr	r2, [sp, #100]	; 0x64
   13ff8:	ldr	r3, [r5]
   13ffc:	cmp	r2, r3
   14000:	bne	1400c <close@plt+0x3044>
   14004:	add	sp, sp, #104	; 0x68
   14008:	pop	{r4, r5, r6, r7, r8, pc}
   1400c:	bl	10e0c <__stack_chk_fail@plt>
   14010:	andeq	r5, r2, r8, lsl #30
   14014:	push	{r4, r5, r6, r7, r8, r9, lr}
   14018:	mov	r6, r1
   1401c:	ldr	lr, [pc, #132]	; 140a8 <close@plt+0x30e0>
   14020:	mov	r5, r2
   14024:	mov	r8, r0
   14028:	mov	r9, r3
   1402c:	ldm	lr!, {r0, r1, r2, r3}
   14030:	sub	sp, sp, #60	; 0x3c
   14034:	add	ip, sp, #4
   14038:	ldr	r4, [pc, #108]	; 140ac <close@plt+0x30e4>
   1403c:	stmia	ip!, {r0, r1, r2, r3}
   14040:	mov	r7, #10
   14044:	ldm	lr!, {r0, r1, r2, r3}
   14048:	cmp	r5, #0
   1404c:	cmpne	r6, #0
   14050:	str	r7, [sp, #4]
   14054:	stmia	ip!, {r0, r1, r2, r3}
   14058:	ldm	lr, {r0, r1, r2, r3}
   1405c:	ldr	lr, [r4]
   14060:	stm	ip, {r0, r1, r2, r3}
   14064:	str	lr, [sp, #52]	; 0x34
   14068:	beq	140a4 <close@plt+0x30dc>
   1406c:	add	r3, sp, #4
   14070:	ldr	r2, [sp, #88]	; 0x58
   14074:	mov	r1, r9
   14078:	mov	r0, r8
   1407c:	str	r6, [sp, #44]	; 0x2c
   14080:	str	r5, [sp, #48]	; 0x30
   14084:	bl	1392c <close@plt+0x2964>
   14088:	ldr	r2, [sp, #52]	; 0x34
   1408c:	ldr	r3, [r4]
   14090:	cmp	r2, r3
   14094:	bne	140a0 <close@plt+0x30d8>
   14098:	add	sp, sp, #60	; 0x3c
   1409c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   140a0:	bl	10e0c <__stack_chk_fail@plt>
   140a4:	bl	10fbc <abort@plt>
   140a8:	andeq	r6, r2, r0, lsl #5
   140ac:	andeq	r5, r2, r8, lsl #30
   140b0:	push	{lr}		; (str lr, [sp, #-4]!)
   140b4:	sub	sp, sp, #12
   140b8:	mvn	ip, #0
   140bc:	str	ip, [sp]
   140c0:	bl	14014 <close@plt+0x304c>
   140c4:	add	sp, sp, #12
   140c8:	pop	{pc}		; (ldr pc, [sp], #4)
   140cc:	push	{lr}		; (str lr, [sp, #-4]!)
   140d0:	sub	sp, sp, #12
   140d4:	mvn	ip, #0
   140d8:	mov	r3, r2
   140dc:	str	ip, [sp]
   140e0:	mov	r2, r1
   140e4:	mov	r1, r0
   140e8:	mov	r0, #0
   140ec:	bl	14014 <close@plt+0x304c>
   140f0:	add	sp, sp, #12
   140f4:	pop	{pc}		; (ldr pc, [sp], #4)
   140f8:	push	{lr}		; (str lr, [sp, #-4]!)
   140fc:	sub	sp, sp, #12
   14100:	str	r3, [sp]
   14104:	mov	r3, r2
   14108:	mov	r2, r1
   1410c:	mov	r1, r0
   14110:	mov	r0, #0
   14114:	bl	14014 <close@plt+0x304c>
   14118:	add	sp, sp, #12
   1411c:	pop	{pc}		; (ldr pc, [sp], #4)
   14120:	ldr	r3, [pc]	; 14128 <close@plt+0x3160>
   14124:	b	1392c <close@plt+0x2964>
   14128:	andeq	r6, r2, ip, lsl #2
   1412c:	mov	r2, r1
   14130:	ldr	r3, [pc, #8]	; 14140 <close@plt+0x3178>
   14134:	mov	r1, r0
   14138:	mov	r0, #0
   1413c:	b	1392c <close@plt+0x2964>
   14140:	andeq	r6, r2, ip, lsl #2
   14144:	ldr	r3, [pc, #4]	; 14150 <close@plt+0x3188>
   14148:	mvn	r2, #0
   1414c:	b	1392c <close@plt+0x2964>
   14150:	andeq	r6, r2, ip, lsl #2
   14154:	mov	r1, r0
   14158:	ldr	r3, [pc, #8]	; 14168 <close@plt+0x31a0>
   1415c:	mvn	r2, #0
   14160:	mov	r0, #0
   14164:	b	1392c <close@plt+0x2964>
   14168:	andeq	r6, r2, ip, lsl #2
   1416c:	mov	r2, #3
   14170:	mov	r1, #0
   14174:	b	149f8 <close@plt+0x3a30>
   14178:	push	{r4, r5, r6, lr}
   1417c:	sub	sp, sp, #32
   14180:	cmp	r1, #0
   14184:	mov	r5, r0
   14188:	ldr	r4, [sp, #48]	; 0x30
   1418c:	ldr	r6, [sp, #52]	; 0x34
   14190:	beq	14220 <close@plt+0x3258>
   14194:	strd	r2, [sp]
   14198:	mov	r3, r1
   1419c:	ldr	r2, [pc, #828]	; 144e0 <close@plt+0x3518>
   141a0:	mov	r1, #1
   141a4:	bl	10f2c <__fprintf_chk@plt>
   141a8:	mov	r2, #5
   141ac:	ldr	r1, [pc, #816]	; 144e4 <close@plt+0x351c>
   141b0:	mov	r0, #0
   141b4:	bl	10e00 <dcgettext@plt>
   141b8:	ldr	r3, [pc, #808]	; 144e8 <close@plt+0x3520>
   141bc:	ldr	r2, [pc, #808]	; 144ec <close@plt+0x3524>
   141c0:	str	r3, [sp]
   141c4:	mov	r1, #1
   141c8:	mov	r3, r0
   141cc:	mov	r0, r5
   141d0:	bl	10f2c <__fprintf_chk@plt>
   141d4:	ldr	r1, [pc, #788]	; 144f0 <close@plt+0x3528>
   141d8:	mov	r2, #5
   141dc:	mov	r0, #0
   141e0:	bl	10e00 <dcgettext@plt>
   141e4:	mov	r1, r5
   141e8:	bl	10d64 <fputs_unlocked@plt>
   141ec:	cmp	r6, #9
   141f0:	ldrls	pc, [pc, r6, lsl #2]
   141f4:	b	144d0 <close@plt+0x3508>
   141f8:	ldrdeq	r4, [r1], -ip
   141fc:	andeq	r4, r1, r4, lsr #5
   14200:	ldrdeq	r4, [r1], -r0
   14204:	andeq	r4, r1, r4, lsl #6
   14208:	andeq	r4, r1, r0, asr #6
   1420c:	andeq	r4, r1, r0, lsl #7
   14210:	andeq	r4, r1, r8, asr #7
   14214:	andeq	r4, r1, r8, lsl r4
   14218:	andeq	r4, r1, r0, ror r4
   1421c:	andeq	r4, r1, r8, lsr r2
   14220:	str	r3, [sp]
   14224:	mov	r1, #1
   14228:	mov	r3, r2
   1422c:	ldr	r2, [pc, #704]	; 144f4 <close@plt+0x352c>
   14230:	bl	10f2c <__fprintf_chk@plt>
   14234:	b	141a8 <close@plt+0x31e0>
   14238:	ldr	r1, [pc, #696]	; 144f8 <close@plt+0x3530>
   1423c:	mov	r2, #5
   14240:	mov	r0, #0
   14244:	bl	10e00 <dcgettext@plt>
   14248:	ldr	r2, [r4, #32]
   1424c:	ldr	r3, [r4, #28]
   14250:	ldr	r1, [r4, #24]
   14254:	str	r2, [sp, #28]
   14258:	ldr	r2, [r4, #20]
   1425c:	str	r3, [sp, #24]
   14260:	ldr	r3, [r4, #16]
   14264:	str	r1, [sp, #20]
   14268:	ldr	r1, [r4, #12]
   1426c:	str	r2, [sp, #16]
   14270:	ldr	r2, [r4, #8]
   14274:	str	r3, [sp, #12]
   14278:	ldr	r3, [r4, #4]
   1427c:	str	r1, [sp, #8]
   14280:	str	r2, [sp, #4]
   14284:	str	r3, [sp]
   14288:	mov	r1, #1
   1428c:	ldr	r3, [r4]
   14290:	mov	r2, r0
   14294:	mov	r0, r5
   14298:	bl	10f2c <__fprintf_chk@plt>
   1429c:	add	sp, sp, #32
   142a0:	pop	{r4, r5, r6, pc}
   142a4:	mov	r2, #5
   142a8:	ldr	r1, [pc, #588]	; 144fc <close@plt+0x3534>
   142ac:	mov	r0, #0
   142b0:	bl	10e00 <dcgettext@plt>
   142b4:	ldr	r3, [r4]
   142b8:	mov	r1, #1
   142bc:	mov	r2, r0
   142c0:	mov	r0, r5
   142c4:	add	sp, sp, #32
   142c8:	pop	{r4, r5, r6, lr}
   142cc:	b	10f2c <__fprintf_chk@plt>
   142d0:	mov	r2, #5
   142d4:	ldr	r1, [pc, #548]	; 14500 <close@plt+0x3538>
   142d8:	mov	r0, #0
   142dc:	bl	10e00 <dcgettext@plt>
   142e0:	ldr	r2, [r4, #4]
   142e4:	ldr	r3, [r4]
   142e8:	mov	r1, #1
   142ec:	str	r2, [sp, #48]	; 0x30
   142f0:	mov	r2, r0
   142f4:	mov	r0, r5
   142f8:	add	sp, sp, #32
   142fc:	pop	{r4, r5, r6, lr}
   14300:	b	10f2c <__fprintf_chk@plt>
   14304:	mov	r2, #5
   14308:	ldr	r1, [pc, #500]	; 14504 <close@plt+0x353c>
   1430c:	mov	r0, #0
   14310:	bl	10e00 <dcgettext@plt>
   14314:	ldr	r2, [r4, #8]
   14318:	ldr	r3, [r4, #4]
   1431c:	mov	r1, #1
   14320:	str	r2, [sp, #52]	; 0x34
   14324:	str	r3, [sp, #48]	; 0x30
   14328:	ldr	r3, [r4]
   1432c:	mov	r2, r0
   14330:	mov	r0, r5
   14334:	add	sp, sp, #32
   14338:	pop	{r4, r5, r6, lr}
   1433c:	b	10f2c <__fprintf_chk@plt>
   14340:	mov	r2, #5
   14344:	ldr	r1, [pc, #444]	; 14508 <close@plt+0x3540>
   14348:	mov	r0, #0
   1434c:	bl	10e00 <dcgettext@plt>
   14350:	ldr	r1, [r4, #12]
   14354:	ldr	r2, [r4, #8]
   14358:	ldr	r3, [r4, #4]
   1435c:	str	r1, [sp, #8]
   14360:	str	r2, [sp, #4]
   14364:	str	r3, [sp]
   14368:	mov	r1, #1
   1436c:	ldr	r3, [r4]
   14370:	mov	r2, r0
   14374:	mov	r0, r5
   14378:	bl	10f2c <__fprintf_chk@plt>
   1437c:	b	1429c <close@plt+0x32d4>
   14380:	mov	r2, #5
   14384:	ldr	r1, [pc, #384]	; 1450c <close@plt+0x3544>
   14388:	mov	r0, #0
   1438c:	bl	10e00 <dcgettext@plt>
   14390:	ldr	r3, [r4, #16]
   14394:	ldr	r1, [r4, #12]
   14398:	ldr	r2, [r4, #8]
   1439c:	str	r3, [sp, #12]
   143a0:	ldr	r3, [r4, #4]
   143a4:	str	r1, [sp, #8]
   143a8:	str	r2, [sp, #4]
   143ac:	str	r3, [sp]
   143b0:	mov	r1, #1
   143b4:	ldr	r3, [r4]
   143b8:	mov	r2, r0
   143bc:	mov	r0, r5
   143c0:	bl	10f2c <__fprintf_chk@plt>
   143c4:	b	1429c <close@plt+0x32d4>
   143c8:	mov	r2, #5
   143cc:	ldr	r1, [pc, #316]	; 14510 <close@plt+0x3548>
   143d0:	mov	r0, #0
   143d4:	bl	10e00 <dcgettext@plt>
   143d8:	ldr	r2, [r4, #20]
   143dc:	ldr	r3, [r4, #16]
   143e0:	ldr	r1, [r4, #12]
   143e4:	str	r2, [sp, #16]
   143e8:	ldr	r2, [r4, #8]
   143ec:	str	r3, [sp, #12]
   143f0:	ldr	r3, [r4, #4]
   143f4:	str	r1, [sp, #8]
   143f8:	str	r2, [sp, #4]
   143fc:	str	r3, [sp]
   14400:	mov	r1, #1
   14404:	ldr	r3, [r4]
   14408:	mov	r2, r0
   1440c:	mov	r0, r5
   14410:	bl	10f2c <__fprintf_chk@plt>
   14414:	b	1429c <close@plt+0x32d4>
   14418:	mov	r2, #5
   1441c:	ldr	r1, [pc, #240]	; 14514 <close@plt+0x354c>
   14420:	mov	r0, #0
   14424:	bl	10e00 <dcgettext@plt>
   14428:	ldr	r1, [r4, #24]
   1442c:	ldr	r2, [r4, #20]
   14430:	ldr	r3, [r4, #16]
   14434:	str	r1, [sp, #20]
   14438:	ldr	r1, [r4, #12]
   1443c:	str	r2, [sp, #16]
   14440:	ldr	r2, [r4, #8]
   14444:	str	r3, [sp, #12]
   14448:	ldr	r3, [r4, #4]
   1444c:	str	r1, [sp, #8]
   14450:	str	r2, [sp, #4]
   14454:	str	r3, [sp]
   14458:	mov	r1, #1
   1445c:	ldr	r3, [r4]
   14460:	mov	r2, r0
   14464:	mov	r0, r5
   14468:	bl	10f2c <__fprintf_chk@plt>
   1446c:	b	1429c <close@plt+0x32d4>
   14470:	mov	r2, #5
   14474:	ldr	r1, [pc, #156]	; 14518 <close@plt+0x3550>
   14478:	mov	r0, #0
   1447c:	bl	10e00 <dcgettext@plt>
   14480:	ldr	r3, [r4, #28]
   14484:	ldr	r1, [r4, #24]
   14488:	ldr	r2, [r4, #20]
   1448c:	str	r3, [sp, #24]
   14490:	ldr	r3, [r4, #16]
   14494:	str	r1, [sp, #20]
   14498:	ldr	r1, [r4, #12]
   1449c:	str	r2, [sp, #16]
   144a0:	ldr	r2, [r4, #8]
   144a4:	str	r3, [sp, #12]
   144a8:	ldr	r3, [r4, #4]
   144ac:	str	r1, [sp, #8]
   144b0:	str	r2, [sp, #4]
   144b4:	str	r3, [sp]
   144b8:	mov	r1, #1
   144bc:	ldr	r3, [r4]
   144c0:	mov	r2, r0
   144c4:	mov	r0, r5
   144c8:	bl	10f2c <__fprintf_chk@plt>
   144cc:	b	1429c <close@plt+0x32d4>
   144d0:	mov	r2, #5
   144d4:	ldr	r1, [pc, #64]	; 1451c <close@plt+0x3554>
   144d8:	b	14240 <close@plt+0x3278>
   144dc:	bl	10fbc <abort@plt>
   144e0:	andeq	r5, r1, r8, lsl #18
   144e4:	andeq	r5, r1, ip, lsl r9
   144e8:	andeq	r0, r0, r2, ror #15
   144ec:	strdeq	r5, [r1], -r0
   144f0:	andeq	r5, r1, r0, lsr #18
   144f4:	andeq	r5, r1, r4, lsl r9
   144f8:	strdeq	r5, [r1], -r8
   144fc:	andeq	r5, r1, ip, ror #19
   14500:	strdeq	r5, [r1], -ip
   14504:	andeq	r5, r1, r4, lsl sl
   14508:	andeq	r5, r1, r0, lsr sl
   1450c:	andeq	r5, r1, r0, asr sl
   14510:	andeq	r5, r1, r4, ror sl
   14514:	muleq	r1, ip, sl
   14518:	andeq	r5, r1, r8, asr #21
   1451c:	andeq	r5, r1, ip, lsr #22
   14520:	push	{r4, r5, lr}
   14524:	sub	sp, sp, #12
   14528:	ldr	r5, [sp, #24]
   1452c:	ldr	ip, [r5]
   14530:	cmp	ip, #0
   14534:	beq	14550 <close@plt+0x3588>
   14538:	mov	lr, r5
   1453c:	mov	ip, #0
   14540:	ldr	r4, [lr, #4]!
   14544:	add	ip, ip, #1
   14548:	cmp	r4, #0
   1454c:	bne	14540 <close@plt+0x3578>
   14550:	stm	sp, {r5, ip}
   14554:	bl	14178 <close@plt+0x31b0>
   14558:	add	sp, sp, #12
   1455c:	pop	{r4, r5, pc}
   14560:	push	{r4, r5, r6, lr}
   14564:	sub	sp, sp, #56	; 0x38
   14568:	ldr	r6, [pc, #88]	; 145c8 <close@plt+0x3600>
   1456c:	ldr	r5, [sp, #72]	; 0x48
   14570:	add	r4, sp, #8
   14574:	ldr	ip, [r6]
   14578:	str	ip, [sp, #52]	; 0x34
   1457c:	mov	ip, #0
   14580:	ldr	lr, [r5], #4
   14584:	cmp	lr, #0
   14588:	str	lr, [r4, #4]!
   1458c:	beq	1459c <close@plt+0x35d4>
   14590:	add	ip, ip, #1
   14594:	cmp	ip, #10
   14598:	bne	14580 <close@plt+0x35b8>
   1459c:	add	lr, sp, #12
   145a0:	str	ip, [sp, #4]
   145a4:	str	lr, [sp]
   145a8:	bl	14178 <close@plt+0x31b0>
   145ac:	ldr	r2, [sp, #52]	; 0x34
   145b0:	ldr	r3, [r6]
   145b4:	cmp	r2, r3
   145b8:	bne	145c4 <close@plt+0x35fc>
   145bc:	add	sp, sp, #56	; 0x38
   145c0:	pop	{r4, r5, r6, pc}
   145c4:	bl	10e0c <__stack_chk_fail@plt>
   145c8:	andeq	r5, r2, r8, lsl #30
   145cc:	push	{r3}		; (str r3, [sp, #-4]!)
   145d0:	mov	ip, #0
   145d4:	push	{r4, r5, r6, lr}
   145d8:	sub	sp, sp, #60	; 0x3c
   145dc:	ldr	r6, [pc, #100]	; 14648 <close@plt+0x3680>
   145e0:	add	r5, sp, #8
   145e4:	add	r4, sp, #80	; 0x50
   145e8:	ldr	r3, [r6]
   145ec:	str	r4, [sp, #8]
   145f0:	str	r3, [sp, #52]	; 0x34
   145f4:	ldr	r3, [sp, #76]	; 0x4c
   145f8:	ldr	lr, [r4], #4
   145fc:	cmp	lr, #0
   14600:	str	lr, [r5, #4]!
   14604:	beq	14614 <close@plt+0x364c>
   14608:	add	ip, ip, #1
   1460c:	cmp	ip, #10
   14610:	bne	145f8 <close@plt+0x3630>
   14614:	add	lr, sp, #12
   14618:	str	ip, [sp, #4]
   1461c:	str	lr, [sp]
   14620:	bl	14178 <close@plt+0x31b0>
   14624:	ldr	r2, [sp, #52]	; 0x34
   14628:	ldr	r3, [r6]
   1462c:	cmp	r2, r3
   14630:	bne	14644 <close@plt+0x367c>
   14634:	add	sp, sp, #60	; 0x3c
   14638:	pop	{r4, r5, r6, lr}
   1463c:	add	sp, sp, #4
   14640:	bx	lr
   14644:	bl	10e0c <__stack_chk_fail@plt>
   14648:	andeq	r5, r2, r8, lsl #30
   1464c:	push	{r4, lr}
   14650:	mov	r2, #5
   14654:	ldr	r1, [pc, #88]	; 146b4 <close@plt+0x36ec>
   14658:	mov	r0, #0
   1465c:	bl	10e00 <dcgettext@plt>
   14660:	ldr	r2, [pc, #80]	; 146b8 <close@plt+0x36f0>
   14664:	mov	r1, r0
   14668:	mov	r0, #1
   1466c:	bl	10f14 <__printf_chk@plt>
   14670:	mov	r2, #5
   14674:	ldr	r1, [pc, #64]	; 146bc <close@plt+0x36f4>
   14678:	mov	r0, #0
   1467c:	bl	10e00 <dcgettext@plt>
   14680:	ldr	r3, [pc, #56]	; 146c0 <close@plt+0x36f8>
   14684:	ldr	r2, [pc, #56]	; 146c4 <close@plt+0x36fc>
   14688:	mov	r1, r0
   1468c:	mov	r0, #1
   14690:	bl	10f14 <__printf_chk@plt>
   14694:	ldr	r1, [pc, #44]	; 146c8 <close@plt+0x3700>
   14698:	mov	r2, #5
   1469c:	mov	r0, #0
   146a0:	bl	10e00 <dcgettext@plt>
   146a4:	ldr	r3, [pc, #32]	; 146cc <close@plt+0x3704>
   146a8:	pop	{r4, lr}
   146ac:	ldr	r1, [r3]
   146b0:	b	10d64 <fputs_unlocked@plt>
   146b4:	andeq	r5, r1, r8, ror #22
   146b8:	andeq	r5, r1, r0, lsl #23
   146bc:	muleq	r1, r8, fp
   146c0:	andeq	r5, r1, ip, asr r5
   146c4:	andeq	r5, r1, r4, lsl #11
   146c8:	andeq	r5, r1, ip, lsr #23
   146cc:	andeq	r6, r2, ip, asr r1
   146d0:	push	{r4, lr}
   146d4:	mov	r4, r0
   146d8:	bl	10e84 <malloc@plt>
   146dc:	adds	r4, r4, #0
   146e0:	movne	r4, #1
   146e4:	cmp	r0, #0
   146e8:	movne	r4, #0
   146ec:	cmp	r4, #0
   146f0:	popeq	{r4, pc}
   146f4:	bl	14918 <close@plt+0x3950>
   146f8:	push	{r4, r5, r6, lr}
   146fc:	umull	r4, r5, r0, r1
   14700:	adds	r3, r5, #0
   14704:	movne	r3, #1
   14708:	cmp	r4, #0
   1470c:	blt	14724 <close@plt+0x375c>
   14710:	cmp	r3, #0
   14714:	bne	14724 <close@plt+0x375c>
   14718:	mul	r0, r1, r0
   1471c:	pop	{r4, r5, r6, lr}
   14720:	b	146d0 <close@plt+0x3708>
   14724:	bl	14918 <close@plt+0x3950>
   14728:	b	146d0 <close@plt+0x3708>
   1472c:	adds	r3, r0, #0
   14730:	movne	r3, #1
   14734:	cmp	r1, #0
   14738:	movne	r3, #0
   1473c:	cmp	r3, #0
   14740:	push	{r4, lr}
   14744:	bne	1476c <close@plt+0x37a4>
   14748:	mov	r4, r1
   1474c:	bl	10e18 <realloc@plt>
   14750:	adds	r4, r4, #0
   14754:	movne	r4, #1
   14758:	cmp	r0, #0
   1475c:	movne	r4, #0
   14760:	cmp	r4, #0
   14764:	popeq	{r4, pc}
   14768:	bl	14918 <close@plt+0x3950>
   1476c:	bl	10dac <free@plt>
   14770:	mov	r0, #0
   14774:	pop	{r4, pc}
   14778:	push	{r4, r5, r6, lr}
   1477c:	umull	r4, r5, r1, r2
   14780:	adds	r3, r5, #0
   14784:	movne	r3, #1
   14788:	cmp	r4, #0
   1478c:	blt	147a4 <close@plt+0x37dc>
   14790:	cmp	r3, #0
   14794:	bne	147a4 <close@plt+0x37dc>
   14798:	mul	r1, r2, r1
   1479c:	pop	{r4, r5, r6, lr}
   147a0:	b	1472c <close@plt+0x3764>
   147a4:	bl	14918 <close@plt+0x3950>
   147a8:	push	{r4, r5, r6, r7, r8, lr}
   147ac:	subs	r7, r0, #0
   147b0:	mov	r6, r1
   147b4:	mov	r5, r2
   147b8:	ldr	r4, [r1]
   147bc:	beq	147f0 <close@plt+0x3828>
   147c0:	mov	r1, r2
   147c4:	ldr	r0, [pc, #104]	; 14834 <close@plt+0x386c>
   147c8:	bl	14db8 <close@plt+0x3df0>
   147cc:	cmp	r0, r4
   147d0:	bls	14814 <close@plt+0x384c>
   147d4:	add	r3, r4, #1
   147d8:	add	r4, r3, r4, lsr #1
   147dc:	str	r4, [r6]
   147e0:	mul	r1, r5, r4
   147e4:	mov	r0, r7
   147e8:	pop	{r4, r5, r6, r7, r8, lr}
   147ec:	b	1472c <close@plt+0x3764>
   147f0:	cmp	r4, #0
   147f4:	beq	14818 <close@plt+0x3850>
   147f8:	umull	r0, r1, r4, r5
   147fc:	adds	r3, r1, #0
   14800:	movne	r3, #1
   14804:	cmp	r0, #0
   14808:	blt	14814 <close@plt+0x384c>
   1480c:	cmp	r3, #0
   14810:	beq	147dc <close@plt+0x3814>
   14814:	bl	14918 <close@plt+0x3950>
   14818:	mov	r1, r2
   1481c:	mov	r0, #64	; 0x40
   14820:	bl	14db8 <close@plt+0x3df0>
   14824:	cmp	r5, #64	; 0x40
   14828:	movls	r4, r0
   1482c:	addhi	r4, r0, #1
   14830:	b	147f8 <close@plt+0x3830>
   14834:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   14838:	cmp	r0, #0
   1483c:	ldr	r3, [r1]
   14840:	beq	14864 <close@plt+0x389c>
   14844:	ldr	r2, [pc, #60]	; 14888 <close@plt+0x38c0>
   14848:	cmp	r3, r2
   1484c:	bhi	14880 <close@plt+0x38b8>
   14850:	add	r2, r3, #1
   14854:	add	r3, r2, r3, lsr #1
   14858:	str	r3, [r1]
   1485c:	mov	r1, r3
   14860:	b	1472c <close@plt+0x3764>
   14864:	cmp	r3, #0
   14868:	bne	1487c <close@plt+0x38b4>
   1486c:	mov	r3, #64	; 0x40
   14870:	str	r3, [r1]
   14874:	mov	r1, r3
   14878:	b	1472c <close@plt+0x3764>
   1487c:	bge	14858 <close@plt+0x3890>
   14880:	push	{r4, lr}
   14884:	bl	14918 <close@plt+0x3950>
   14888:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   1488c:	push	{r4, lr}
   14890:	mov	r4, r0
   14894:	bl	146d0 <close@plt+0x3708>
   14898:	mov	r2, r4
   1489c:	mov	r1, #0
   148a0:	pop	{r4, lr}
   148a4:	b	10f08 <memset@plt>
   148a8:	push	{r4, r5, r6, lr}
   148ac:	umull	r4, r5, r0, r1
   148b0:	adds	r3, r5, #0
   148b4:	movne	r3, #1
   148b8:	cmp	r4, #0
   148bc:	blt	148d4 <close@plt+0x390c>
   148c0:	cmp	r3, #0
   148c4:	bne	148d4 <close@plt+0x390c>
   148c8:	bl	10d58 <calloc@plt>
   148cc:	cmp	r0, #0
   148d0:	popne	{r4, r5, r6, pc}
   148d4:	bl	14918 <close@plt+0x3950>
   148d8:	push	{r4, r5, r6, lr}
   148dc:	mov	r4, r1
   148e0:	mov	r5, r0
   148e4:	mov	r0, r1
   148e8:	bl	146d0 <close@plt+0x3708>
   148ec:	mov	r2, r4
   148f0:	mov	r1, r5
   148f4:	pop	{r4, r5, r6, lr}
   148f8:	b	10dc4 <memcpy@plt>
   148fc:	push	{r4, lr}
   14900:	mov	r4, r0
   14904:	bl	10ed8 <strlen@plt>
   14908:	add	r1, r0, #1
   1490c:	mov	r0, r4
   14910:	pop	{r4, lr}
   14914:	b	148d8 <close@plt+0x3910>
   14918:	ldr	r3, [pc, #44]	; 1494c <close@plt+0x3984>
   1491c:	push	{r4, lr}
   14920:	mov	r2, #5
   14924:	ldr	r1, [pc, #36]	; 14950 <close@plt+0x3988>
   14928:	mov	r0, #0
   1492c:	ldr	r4, [r3]
   14930:	bl	10e00 <dcgettext@plt>
   14934:	ldr	r2, [pc, #24]	; 14954 <close@plt+0x398c>
   14938:	mov	r1, #0
   1493c:	mov	r3, r0
   14940:	mov	r0, r4
   14944:	bl	10e78 <error@plt>
   14948:	bl	10fbc <abort@plt>
   1494c:	strdeq	r6, [r2], -r8
   14950:	andeq	r5, r1, r0, lsr #24
   14954:	andeq	r5, r1, r8, ror #15
   14958:	push	{r4, r5, lr}
   1495c:	sub	sp, sp, #12
   14960:	mov	r4, r0
   14964:	bl	10f20 <fileno@plt>
   14968:	cmp	r0, #0
   1496c:	mov	r0, r4
   14970:	blt	149ec <close@plt+0x3a24>
   14974:	bl	10e9c <__freading@plt>
   14978:	cmp	r0, #0
   1497c:	bne	149b8 <close@plt+0x39f0>
   14980:	mov	r0, r4
   14984:	bl	14b44 <close@plt+0x3b7c>
   14988:	cmp	r0, #0
   1498c:	beq	149e8 <close@plt+0x3a20>
   14990:	bl	10ee4 <__errno_location@plt>
   14994:	mov	r5, r0
   14998:	mov	r0, r4
   1499c:	ldr	r4, [r5]
   149a0:	bl	10f38 <fclose@plt>
   149a4:	cmp	r4, #0
   149a8:	mvnne	r0, #0
   149ac:	strne	r4, [r5]
   149b0:	add	sp, sp, #12
   149b4:	pop	{r4, r5, pc}
   149b8:	mov	r0, r4
   149bc:	bl	10f20 <fileno@plt>
   149c0:	mov	r3, #1
   149c4:	str	r3, [sp]
   149c8:	mov	r2, #0
   149cc:	mov	r3, #0
   149d0:	bl	10e48 <lseek64@plt>
   149d4:	mvn	r3, #0
   149d8:	mvn	r2, #0
   149dc:	cmp	r1, r3
   149e0:	cmpeq	r0, r2
   149e4:	bne	14980 <close@plt+0x39b8>
   149e8:	mov	r0, r4
   149ec:	add	sp, sp, #12
   149f0:	pop	{r4, r5, lr}
   149f4:	b	10f38 <fclose@plt>
   149f8:	push	{r1, r2, r3}
   149fc:	push	{r4, r5, r6, r7, r8, lr}
   14a00:	sub	sp, sp, #12
   14a04:	ldr	r4, [pc, #300]	; 14b38 <close@plt+0x3b70>
   14a08:	ldr	r3, [pc, #300]	; 14b3c <close@plt+0x3b74>
   14a0c:	ldr	r1, [sp, #36]	; 0x24
   14a10:	ldr	r2, [r4]
   14a14:	cmp	r1, r3
   14a18:	add	r3, sp, #40	; 0x28
   14a1c:	str	r2, [sp, #4]
   14a20:	str	r3, [sp]
   14a24:	bne	14af0 <close@plt+0x3b28>
   14a28:	ldr	r6, [pc, #272]	; 14b40 <close@plt+0x3b78>
   14a2c:	add	r3, sp, #44	; 0x2c
   14a30:	str	r3, [sp]
   14a34:	ldr	r3, [r6]
   14a38:	ldr	r7, [sp, #40]	; 0x28
   14a3c:	cmp	r3, #0
   14a40:	blt	14a84 <close@plt+0x3abc>
   14a44:	mov	r2, r7
   14a48:	mov	r8, r0
   14a4c:	bl	10f50 <fcntl64@plt>
   14a50:	subs	r5, r0, #0
   14a54:	blt	14b00 <close@plt+0x3b38>
   14a58:	mov	r3, #1
   14a5c:	str	r3, [r6]
   14a60:	ldr	r2, [sp, #4]
   14a64:	ldr	r3, [r4]
   14a68:	mov	r0, r5
   14a6c:	cmp	r2, r3
   14a70:	bne	14b34 <close@plt+0x3b6c>
   14a74:	add	sp, sp, #12
   14a78:	pop	{r4, r5, r6, r7, r8, lr}
   14a7c:	add	sp, sp, #12
   14a80:	bx	lr
   14a84:	mov	r2, r7
   14a88:	mov	r1, #0
   14a8c:	bl	149f8 <close@plt+0x3a30>
   14a90:	subs	r5, r0, #0
   14a94:	blt	14a60 <close@plt+0x3a98>
   14a98:	ldr	r3, [r6]
   14a9c:	cmn	r3, #1
   14aa0:	bne	14a60 <close@plt+0x3a98>
   14aa4:	mov	r1, #1
   14aa8:	mov	r0, r5
   14aac:	bl	10f50 <fcntl64@plt>
   14ab0:	subs	r2, r0, #0
   14ab4:	blt	14ad0 <close@plt+0x3b08>
   14ab8:	orr	r2, r2, #1
   14abc:	mov	r1, #2
   14ac0:	mov	r0, r5
   14ac4:	bl	10f50 <fcntl64@plt>
   14ac8:	cmn	r0, #1
   14acc:	bne	14a60 <close@plt+0x3a98>
   14ad0:	bl	10ee4 <__errno_location@plt>
   14ad4:	mov	r6, r0
   14ad8:	mov	r0, r5
   14adc:	ldr	r7, [r6]
   14ae0:	mvn	r5, #0
   14ae4:	bl	10fc8 <close@plt>
   14ae8:	str	r7, [r6]
   14aec:	b	14a60 <close@plt+0x3a98>
   14af0:	ldr	r2, [sp, #40]	; 0x28
   14af4:	bl	10f50 <fcntl64@plt>
   14af8:	mov	r5, r0
   14afc:	b	14a60 <close@plt+0x3a98>
   14b00:	bl	10ee4 <__errno_location@plt>
   14b04:	ldr	r3, [r0]
   14b08:	cmp	r3, #22
   14b0c:	bne	14a58 <close@plt+0x3a90>
   14b10:	mov	r2, r7
   14b14:	mov	r0, r8
   14b18:	mov	r1, #0
   14b1c:	bl	149f8 <close@plt+0x3a30>
   14b20:	subs	r5, r0, #0
   14b24:	mvnge	r3, #0
   14b28:	strge	r3, [r6]
   14b2c:	bge	14aa4 <close@plt+0x3adc>
   14b30:	b	14a60 <close@plt+0x3a98>
   14b34:	bl	10e0c <__stack_chk_fail@plt>
   14b38:	andeq	r5, r2, r8, lsl #30
   14b3c:	andeq	r0, r0, r6, lsl #8
   14b40:			; <UNDEFINED> instruction: 0x000262b0
   14b44:	push	{r4, lr}
   14b48:	subs	r4, r0, #0
   14b4c:	sub	sp, sp, #8
   14b50:	beq	14b6c <close@plt+0x3ba4>
   14b54:	bl	10e9c <__freading@plt>
   14b58:	cmp	r0, #0
   14b5c:	beq	14b6c <close@plt+0x3ba4>
   14b60:	ldr	r3, [r4]
   14b64:	tst	r3, #256	; 0x100
   14b68:	bne	14b7c <close@plt+0x3bb4>
   14b6c:	mov	r0, r4
   14b70:	add	sp, sp, #8
   14b74:	pop	{r4, lr}
   14b78:	b	10da0 <fflush@plt>
   14b7c:	mov	r3, #1
   14b80:	str	r3, [sp]
   14b84:	mov	r2, #0
   14b88:	mov	r3, #0
   14b8c:	mov	r0, r4
   14b90:	bl	14ba4 <close@plt+0x3bdc>
   14b94:	mov	r0, r4
   14b98:	add	sp, sp, #8
   14b9c:	pop	{r4, lr}
   14ba0:	b	10da0 <fflush@plt>
   14ba4:	push	{r4, r5, r6, r7, r8, lr}
   14ba8:	sub	sp, sp, #8
   14bac:	ldmib	r0, {ip, lr}
   14bb0:	mov	r4, r0
   14bb4:	ldr	r5, [sp, #32]
   14bb8:	cmp	lr, ip
   14bbc:	beq	14bd4 <close@plt+0x3c0c>
   14bc0:	str	r5, [sp, #32]
   14bc4:	mov	r0, r4
   14bc8:	add	sp, sp, #8
   14bcc:	pop	{r4, r5, r6, r7, r8, lr}
   14bd0:	b	10f44 <fseeko64@plt>
   14bd4:	ldr	lr, [r0, #20]
   14bd8:	ldr	ip, [r0, #16]
   14bdc:	cmp	lr, ip
   14be0:	bne	14bc0 <close@plt+0x3bf8>
   14be4:	ldr	r8, [r0, #36]	; 0x24
   14be8:	cmp	r8, #0
   14bec:	bne	14bc0 <close@plt+0x3bf8>
   14bf0:	mov	r6, r2
   14bf4:	mov	r7, r3
   14bf8:	bl	10f20 <fileno@plt>
   14bfc:	mov	r2, r6
   14c00:	mov	r3, r7
   14c04:	str	r5, [sp]
   14c08:	bl	10e48 <lseek64@plt>
   14c0c:	mvn	r3, #0
   14c10:	mvn	r2, #0
   14c14:	cmp	r1, r3
   14c18:	cmpeq	r0, r2
   14c1c:	beq	14c3c <close@plt+0x3c74>
   14c20:	ldr	r3, [r4]
   14c24:	strd	r0, [r4, #80]	; 0x50
   14c28:	mov	r0, r8
   14c2c:	bic	r3, r3, #16
   14c30:	str	r3, [r4]
   14c34:	add	sp, sp, #8
   14c38:	pop	{r4, r5, r6, r7, r8, pc}
   14c3c:	mvn	r0, #0
   14c40:	b	14c34 <close@plt+0x3c6c>
   14c44:	push	{r4, r5, r6, r7, r8, lr}
   14c48:	subs	r7, r0, #0
   14c4c:	ldr	r5, [pc, #108]	; 14cc0 <close@plt+0x3cf8>
   14c50:	sub	sp, sp, #8
   14c54:	mov	r8, r1
   14c58:	ldr	r1, [r5]
   14c5c:	moveq	r7, sp
   14c60:	str	r1, [sp, #4]
   14c64:	mov	r0, r7
   14c68:	mov	r1, r8
   14c6c:	mov	r6, r2
   14c70:	bl	10e6c <mbrtowc@plt>
   14c74:	cmp	r6, #0
   14c78:	cmnne	r0, #3
   14c7c:	mov	r4, r0
   14c80:	bhi	14ca0 <close@plt+0x3cd8>
   14c84:	ldr	r2, [sp, #4]
   14c88:	ldr	r3, [r5]
   14c8c:	mov	r0, r4
   14c90:	cmp	r2, r3
   14c94:	bne	14cbc <close@plt+0x3cf4>
   14c98:	add	sp, sp, #8
   14c9c:	pop	{r4, r5, r6, r7, r8, pc}
   14ca0:	mov	r0, #0
   14ca4:	bl	14d38 <close@plt+0x3d70>
   14ca8:	cmp	r0, #0
   14cac:	moveq	r4, #1
   14cb0:	ldrbeq	r3, [r8]
   14cb4:	streq	r3, [r7]
   14cb8:	b	14c84 <close@plt+0x3cbc>
   14cbc:	bl	10e0c <__stack_chk_fail@plt>
   14cc0:	andeq	r5, r2, r8, lsl #30
   14cc4:	push	{r4, r5, r6, lr}
   14cc8:	mov	r4, r0
   14ccc:	bl	10e60 <__fpending@plt>
   14cd0:	ldr	r5, [r4]
   14cd4:	and	r5, r5, #32
   14cd8:	mov	r6, r0
   14cdc:	mov	r0, r4
   14ce0:	bl	14958 <close@plt+0x3990>
   14ce4:	cmp	r5, #0
   14ce8:	mov	r4, r0
   14cec:	bne	14d18 <close@plt+0x3d50>
   14cf0:	cmp	r0, #0
   14cf4:	beq	14d10 <close@plt+0x3d48>
   14cf8:	cmp	r6, #0
   14cfc:	bne	14d30 <close@plt+0x3d68>
   14d00:	bl	10ee4 <__errno_location@plt>
   14d04:	ldr	r4, [r0]
   14d08:	subs	r4, r4, #9
   14d0c:	mvnne	r4, #0
   14d10:	mov	r0, r4
   14d14:	pop	{r4, r5, r6, pc}
   14d18:	cmp	r0, #0
   14d1c:	bne	14d30 <close@plt+0x3d68>
   14d20:	bl	10ee4 <__errno_location@plt>
   14d24:	str	r4, [r0]
   14d28:	mvn	r4, #0
   14d2c:	b	14d10 <close@plt+0x3d48>
   14d30:	mvn	r4, #0
   14d34:	b	14d10 <close@plt+0x3d48>
   14d38:	push	{r4, lr}
   14d3c:	mov	r1, #0
   14d40:	bl	10f68 <setlocale@plt>
   14d44:	subs	r4, r0, #0
   14d48:	beq	14d74 <close@plt+0x3dac>
   14d4c:	ldr	r1, [pc, #40]	; 14d7c <close@plt+0x3db4>
   14d50:	bl	10d7c <strcmp@plt>
   14d54:	cmp	r0, #0
   14d58:	popeq	{r4, pc}
   14d5c:	mov	r0, r4
   14d60:	ldr	r1, [pc, #24]	; 14d80 <close@plt+0x3db8>
   14d64:	bl	10d7c <strcmp@plt>
   14d68:	adds	r0, r0, #0
   14d6c:	movne	r0, #1
   14d70:	pop	{r4, pc}
   14d74:	mov	r0, #1
   14d78:	pop	{r4, pc}
   14d7c:	andeq	r5, r1, r4, lsr ip
   14d80:	andeq	r5, r1, r8, lsr ip
   14d84:	push	{r4, lr}
   14d88:	mov	r0, #14
   14d8c:	bl	10f80 <nl_langinfo@plt>
   14d90:	cmp	r0, #0
   14d94:	beq	14dac <close@plt+0x3de4>
   14d98:	ldrb	r2, [r0]
   14d9c:	ldr	r3, [pc, #16]	; 14db4 <close@plt+0x3dec>
   14da0:	cmp	r2, #0
   14da4:	moveq	r0, r3
   14da8:	pop	{r4, pc}
   14dac:	ldr	r0, [pc]	; 14db4 <close@plt+0x3dec>
   14db0:	pop	{r4, pc}
   14db4:	andeq	r5, r1, r0, asr #24
   14db8:	subs	r2, r1, #1
   14dbc:	bxeq	lr
   14dc0:	bcc	14f98 <close@plt+0x3fd0>
   14dc4:	cmp	r0, r1
   14dc8:	bls	14f7c <close@plt+0x3fb4>
   14dcc:	tst	r1, r2
   14dd0:	beq	14f88 <close@plt+0x3fc0>
   14dd4:	clz	r3, r0
   14dd8:	clz	r2, r1
   14ddc:	sub	r3, r2, r3
   14de0:	rsbs	r3, r3, #31
   14de4:	addne	r3, r3, r3, lsl #1
   14de8:	mov	r2, #0
   14dec:	addne	pc, pc, r3, lsl #2
   14df0:	nop			; (mov r0, r0)
   14df4:	cmp	r0, r1, lsl #31
   14df8:	adc	r2, r2, r2
   14dfc:	subcs	r0, r0, r1, lsl #31
   14e00:	cmp	r0, r1, lsl #30
   14e04:	adc	r2, r2, r2
   14e08:	subcs	r0, r0, r1, lsl #30
   14e0c:	cmp	r0, r1, lsl #29
   14e10:	adc	r2, r2, r2
   14e14:	subcs	r0, r0, r1, lsl #29
   14e18:	cmp	r0, r1, lsl #28
   14e1c:	adc	r2, r2, r2
   14e20:	subcs	r0, r0, r1, lsl #28
   14e24:	cmp	r0, r1, lsl #27
   14e28:	adc	r2, r2, r2
   14e2c:	subcs	r0, r0, r1, lsl #27
   14e30:	cmp	r0, r1, lsl #26
   14e34:	adc	r2, r2, r2
   14e38:	subcs	r0, r0, r1, lsl #26
   14e3c:	cmp	r0, r1, lsl #25
   14e40:	adc	r2, r2, r2
   14e44:	subcs	r0, r0, r1, lsl #25
   14e48:	cmp	r0, r1, lsl #24
   14e4c:	adc	r2, r2, r2
   14e50:	subcs	r0, r0, r1, lsl #24
   14e54:	cmp	r0, r1, lsl #23
   14e58:	adc	r2, r2, r2
   14e5c:	subcs	r0, r0, r1, lsl #23
   14e60:	cmp	r0, r1, lsl #22
   14e64:	adc	r2, r2, r2
   14e68:	subcs	r0, r0, r1, lsl #22
   14e6c:	cmp	r0, r1, lsl #21
   14e70:	adc	r2, r2, r2
   14e74:	subcs	r0, r0, r1, lsl #21
   14e78:	cmp	r0, r1, lsl #20
   14e7c:	adc	r2, r2, r2
   14e80:	subcs	r0, r0, r1, lsl #20
   14e84:	cmp	r0, r1, lsl #19
   14e88:	adc	r2, r2, r2
   14e8c:	subcs	r0, r0, r1, lsl #19
   14e90:	cmp	r0, r1, lsl #18
   14e94:	adc	r2, r2, r2
   14e98:	subcs	r0, r0, r1, lsl #18
   14e9c:	cmp	r0, r1, lsl #17
   14ea0:	adc	r2, r2, r2
   14ea4:	subcs	r0, r0, r1, lsl #17
   14ea8:	cmp	r0, r1, lsl #16
   14eac:	adc	r2, r2, r2
   14eb0:	subcs	r0, r0, r1, lsl #16
   14eb4:	cmp	r0, r1, lsl #15
   14eb8:	adc	r2, r2, r2
   14ebc:	subcs	r0, r0, r1, lsl #15
   14ec0:	cmp	r0, r1, lsl #14
   14ec4:	adc	r2, r2, r2
   14ec8:	subcs	r0, r0, r1, lsl #14
   14ecc:	cmp	r0, r1, lsl #13
   14ed0:	adc	r2, r2, r2
   14ed4:	subcs	r0, r0, r1, lsl #13
   14ed8:	cmp	r0, r1, lsl #12
   14edc:	adc	r2, r2, r2
   14ee0:	subcs	r0, r0, r1, lsl #12
   14ee4:	cmp	r0, r1, lsl #11
   14ee8:	adc	r2, r2, r2
   14eec:	subcs	r0, r0, r1, lsl #11
   14ef0:	cmp	r0, r1, lsl #10
   14ef4:	adc	r2, r2, r2
   14ef8:	subcs	r0, r0, r1, lsl #10
   14efc:	cmp	r0, r1, lsl #9
   14f00:	adc	r2, r2, r2
   14f04:	subcs	r0, r0, r1, lsl #9
   14f08:	cmp	r0, r1, lsl #8
   14f0c:	adc	r2, r2, r2
   14f10:	subcs	r0, r0, r1, lsl #8
   14f14:	cmp	r0, r1, lsl #7
   14f18:	adc	r2, r2, r2
   14f1c:	subcs	r0, r0, r1, lsl #7
   14f20:	cmp	r0, r1, lsl #6
   14f24:	adc	r2, r2, r2
   14f28:	subcs	r0, r0, r1, lsl #6
   14f2c:	cmp	r0, r1, lsl #5
   14f30:	adc	r2, r2, r2
   14f34:	subcs	r0, r0, r1, lsl #5
   14f38:	cmp	r0, r1, lsl #4
   14f3c:	adc	r2, r2, r2
   14f40:	subcs	r0, r0, r1, lsl #4
   14f44:	cmp	r0, r1, lsl #3
   14f48:	adc	r2, r2, r2
   14f4c:	subcs	r0, r0, r1, lsl #3
   14f50:	cmp	r0, r1, lsl #2
   14f54:	adc	r2, r2, r2
   14f58:	subcs	r0, r0, r1, lsl #2
   14f5c:	cmp	r0, r1, lsl #1
   14f60:	adc	r2, r2, r2
   14f64:	subcs	r0, r0, r1, lsl #1
   14f68:	cmp	r0, r1
   14f6c:	adc	r2, r2, r2
   14f70:	subcs	r0, r0, r1
   14f74:	mov	r0, r2
   14f78:	bx	lr
   14f7c:	moveq	r0, #1
   14f80:	movne	r0, #0
   14f84:	bx	lr
   14f88:	clz	r2, r1
   14f8c:	rsb	r2, r2, #31
   14f90:	lsr	r0, r0, r2
   14f94:	bx	lr
   14f98:	cmp	r0, #0
   14f9c:	mvnne	r0, #0
   14fa0:	b	14fc4 <close@plt+0x3ffc>
   14fa4:	cmp	r1, #0
   14fa8:	beq	14f98 <close@plt+0x3fd0>
   14fac:	push	{r0, r1, lr}
   14fb0:	bl	14db8 <close@plt+0x3df0>
   14fb4:	pop	{r1, r2, lr}
   14fb8:	mul	r3, r2, r0
   14fbc:	sub	r1, r1, r3
   14fc0:	bx	lr
   14fc4:	push	{r1, lr}
   14fc8:	mov	r0, #8
   14fcc:	bl	10d70 <raise@plt>
   14fd0:	pop	{r1, pc}
   14fd4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14fd8:	mov	r7, r0
   14fdc:	ldr	r6, [pc, #72]	; 1502c <close@plt+0x4064>
   14fe0:	ldr	r5, [pc, #72]	; 15030 <close@plt+0x4068>
   14fe4:	add	r6, pc, r6
   14fe8:	add	r5, pc, r5
   14fec:	sub	r6, r6, r5
   14ff0:	mov	r8, r1
   14ff4:	mov	r9, r2
   14ff8:	bl	10d2c <fdopen@plt-0x20>
   14ffc:	asrs	r6, r6, #2
   15000:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15004:	mov	r4, #0
   15008:	add	r4, r4, #1
   1500c:	ldr	r3, [r5], #4
   15010:	mov	r2, r9
   15014:	mov	r1, r8
   15018:	mov	r0, r7
   1501c:	blx	r3
   15020:	cmp	r6, r4
   15024:	bne	15008 <close@plt+0x4040>
   15028:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1502c:	andeq	r0, r1, r8, lsl pc
   15030:	andeq	r0, r1, r0, lsl pc
   15034:	bx	lr
   15038:	ldr	r3, [pc, #12]	; 1504c <close@plt+0x4084>
   1503c:	mov	r1, #0
   15040:	add	r3, pc, r3
   15044:	ldr	r2, [r3]
   15048:	b	10ef0 <__cxa_atexit@plt>
   1504c:	andeq	r1, r1, r4, lsr #1

Disassembly of section .fini:

00015050 <.fini>:
   15050:	push	{r3, lr}
   15054:	pop	{r3, pc}
