
raspbian-preinstalled/timeout:     file format elf32-littlearm


Disassembly of section .init:

00011060 <.init>:
   11060:	push	{r3, lr}
   11064:	bl	119dc <__snprintf_chk@plt+0x638>
   11068:	pop	{r3, pc}

Disassembly of section .plt:

0001106c <calloc@plt-0x14>:
   1106c:	push	{lr}		; (str lr, [sp, #-4]!)
   11070:	ldr	lr, [pc, #4]	; 1107c <calloc@plt-0x4>
   11074:	add	lr, pc, lr
   11078:	ldr	pc, [lr, #8]!
   1107c:	andeq	r5, r1, r4, lsl #31

00011080 <calloc@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #86016	; 0x15000
   11088:	ldr	pc, [ip, #3972]!	; 0xf84

0001108c <fputs_unlocked@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #86016	; 0x15000
   11094:	ldr	pc, [ip, #3964]!	; 0xf7c

00011098 <raise@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #86016	; 0x15000
   110a0:	ldr	pc, [ip, #3956]!	; 0xf74

000110a4 <strcmp@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #86016	; 0x15000
   110ac:	ldr	pc, [ip, #3948]!	; 0xf6c

000110b0 <strtol@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #86016	; 0x15000
   110b8:	ldr	pc, [ip, #3940]!	; 0xf64

000110bc <fflush@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #86016	; 0x15000
   110c4:	ldr	pc, [ip, #3932]!	; 0xf5c

000110c8 <sigprocmask@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #86016	; 0x15000
   110d0:	ldr	pc, [ip, #3924]!	; 0xf54

000110d4 <free@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #86016	; 0x15000
   110dc:	ldr	pc, [ip, #3916]!	; 0xf4c

000110e0 <_exit@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #86016	; 0x15000
   110e8:	ldr	pc, [ip, #3908]!	; 0xf44

000110ec <memcpy@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #86016	; 0x15000
   110f4:	ldr	pc, [ip, #3900]!	; 0xf3c

000110f8 <execvp@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #86016	; 0x15000
   11100:	ldr	pc, [ip, #3892]!	; 0xf34

00011104 <mbsinit@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #86016	; 0x15000
   1110c:	ldr	pc, [ip, #3884]!	; 0xf2c

00011110 <signal@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #86016	; 0x15000
   11118:	ldr	pc, [ip, #3876]!	; 0xf24

0001111c <memcmp@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #86016	; 0x15000
   11124:	ldr	pc, [ip, #3868]!	; 0xf1c

00011128 <dcgettext@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #86016	; 0x15000
   11130:	ldr	pc, [ip, #3860]!	; 0xf14

00011134 <__stack_chk_fail@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #86016	; 0x15000
   1113c:	ldr	pc, [ip, #3852]!	; 0xf0c

00011140 <alarm@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #86016	; 0x15000
   11148:	ldr	pc, [ip, #3844]!	; 0xf04

0001114c <realloc@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #86016	; 0x15000
   11154:	ldr	pc, [ip, #3836]!	; 0xefc

00011158 <timer_create@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #86016	; 0x15000
   11160:	ldr	pc, [ip, #3828]!	; 0xef4

00011164 <textdomain@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #86016	; 0x15000
   1116c:	ldr	pc, [ip, #3820]!	; 0xeec

00011170 <iswprint@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #86016	; 0x15000
   11178:	ldr	pc, [ip, #3812]!	; 0xee4

0001117c <timer_settime@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #86016	; 0x15000
   11184:	ldr	pc, [ip, #3804]!	; 0xedc

00011188 <sigaction@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #86016	; 0x15000
   11190:	ldr	pc, [ip, #3796]!	; 0xed4

00011194 <fwrite@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #86016	; 0x15000
   1119c:	ldr	pc, [ip, #3788]!	; 0xecc

000111a0 <lseek64@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #86016	; 0x15000
   111a8:	ldr	pc, [ip, #3780]!	; 0xec4

000111ac <waitpid@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #86016	; 0x15000
   111b4:	ldr	pc, [ip, #3772]!	; 0xebc

000111b8 <__ctype_get_mb_cur_max@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #86016	; 0x15000
   111c0:	ldr	pc, [ip, #3764]!	; 0xeb4

000111c4 <strcpy@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #86016	; 0x15000
   111cc:	ldr	pc, [ip, #3756]!	; 0xeac

000111d0 <__fpending@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #86016	; 0x15000
   111d8:	ldr	pc, [ip, #3748]!	; 0xea4

000111dc <mbrtowc@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #86016	; 0x15000
   111e4:	ldr	pc, [ip, #3740]!	; 0xe9c

000111e8 <error@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #86016	; 0x15000
   111f0:	ldr	pc, [ip, #3732]!	; 0xe94

000111f4 <timer_delete@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #86016	; 0x15000
   111fc:	ldr	pc, [ip, #3724]!	; 0xe8c

00011200 <malloc@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #86016	; 0x15000
   11208:	ldr	pc, [ip, #3716]!	; 0xe84

0001120c <sigaddset@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #86016	; 0x15000
   11214:	ldr	pc, [ip, #3708]!	; 0xe7c

00011218 <__libc_start_main@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #86016	; 0x15000
   11220:	ldr	pc, [ip, #3700]!	; 0xe74

00011224 <__freading@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #86016	; 0x15000
   1122c:	ldr	pc, [ip, #3692]!	; 0xe6c

00011230 <__gmon_start__@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #86016	; 0x15000
   11238:	ldr	pc, [ip, #3684]!	; 0xe64

0001123c <getopt_long@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #86016	; 0x15000
   11244:	ldr	pc, [ip, #3676]!	; 0xe5c

00011248 <kill@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #86016	; 0x15000
   11250:	ldr	pc, [ip, #3668]!	; 0xe54

00011254 <__ctype_b_loc@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #86016	; 0x15000
   1125c:	ldr	pc, [ip, #3660]!	; 0xe4c

00011260 <exit@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #86016	; 0x15000
   11268:	ldr	pc, [ip, #3652]!	; 0xe44

0001126c <strlen@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #86016	; 0x15000
   11274:	ldr	pc, [ip, #3644]!	; 0xe3c

00011278 <__libc_current_sigrtmax@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #86016	; 0x15000
   11280:	ldr	pc, [ip, #3636]!	; 0xe34

00011284 <strchr@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #86016	; 0x15000
   1128c:	ldr	pc, [ip, #3628]!	; 0xe2c

00011290 <__errno_location@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #86016	; 0x15000
   11298:	ldr	pc, [ip, #3620]!	; 0xe24

0001129c <__sprintf_chk@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #86016	; 0x15000
   112a4:	ldr	pc, [ip, #3612]!	; 0xe1c

000112a8 <__cxa_atexit@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #86016	; 0x15000
   112b0:	ldr	pc, [ip, #3604]!	; 0xe14

000112b4 <memset@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #86016	; 0x15000
   112bc:	ldr	pc, [ip, #3596]!	; 0xe0c

000112c0 <sigsuspend@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #86016	; 0x15000
   112c8:	ldr	pc, [ip, #3588]!	; 0xe04

000112cc <__printf_chk@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #86016	; 0x15000
   112d4:	ldr	pc, [ip, #3580]!	; 0xdfc

000112d8 <prctl@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #86016	; 0x15000
   112e0:	ldr	pc, [ip, #3572]!	; 0xdf4

000112e4 <fileno@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #86016	; 0x15000
   112ec:	ldr	pc, [ip, #3564]!	; 0xdec

000112f0 <__fprintf_chk@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #86016	; 0x15000
   112f8:	ldr	pc, [ip, #3556]!	; 0xde4

000112fc <fclose@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #86016	; 0x15000
   11304:	ldr	pc, [ip, #3548]!	; 0xddc

00011308 <fseeko64@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #86016	; 0x15000
   11310:	ldr	pc, [ip, #3540]!	; 0xdd4

00011314 <strtod_l@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #86016	; 0x15000
   1131c:	ldr	pc, [ip, #3532]!	; 0xdcc

00011320 <setlocale@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #86016	; 0x15000
   11328:	ldr	pc, [ip, #3524]!	; 0xdc4

0001132c <sigemptyset@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #86016	; 0x15000
   11334:	ldr	pc, [ip, #3516]!	; 0xdbc

00011338 <fork@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #86016	; 0x15000
   11340:	ldr	pc, [ip, #3508]!	; 0xdb4

00011344 <strrchr@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #86016	; 0x15000
   1134c:	ldr	pc, [ip, #3500]!	; 0xdac

00011350 <nl_langinfo@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #86016	; 0x15000
   11358:	ldr	pc, [ip, #3492]!	; 0xda4

0001135c <newlocale@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #86016	; 0x15000
   11364:	ldr	pc, [ip, #3484]!	; 0xd9c

00011368 <setpgid@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #86016	; 0x15000
   11370:	ldr	pc, [ip, #3476]!	; 0xd94

00011374 <bindtextdomain@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #86016	; 0x15000
   1137c:	ldr	pc, [ip, #3468]!	; 0xd8c

00011380 <__libc_current_sigrtmin@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #86016	; 0x15000
   11388:	ldr	pc, [ip, #3460]!	; 0xd84

0001138c <strncmp@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #86016	; 0x15000
   11394:	ldr	pc, [ip, #3452]!	; 0xd7c

00011398 <abort@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #86016	; 0x15000
   113a0:	ldr	pc, [ip, #3444]!	; 0xd74

000113a4 <__snprintf_chk@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #86016	; 0x15000
   113ac:	ldr	pc, [ip, #3436]!	; 0xd6c

Disassembly of section .text:

000113b0 <.text>:
   113b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113b4:	vpush	{d8}
   113b8:	ldr	r3, [pc, #1396]	; 11934 <__snprintf_chk@plt+0x590>
   113bc:	mov	r6, r0
   113c0:	ldr	r0, [r1]
   113c4:	sub	sp, sp, #308	; 0x134
   113c8:	ldr	r3, [r3]
   113cc:	mov	r5, r1
   113d0:	str	r3, [sp, #300]	; 0x12c
   113d4:	bl	12744 <__snprintf_chk@plt+0x13a0>
   113d8:	ldr	r1, [pc, #1368]	; 11938 <__snprintf_chk@plt+0x594>
   113dc:	mov	r0, #6
   113e0:	bl	11320 <setlocale@plt>
   113e4:	ldr	r1, [pc, #1360]	; 1193c <__snprintf_chk@plt+0x598>
   113e8:	ldr	r0, [pc, #1360]	; 11940 <__snprintf_chk@plt+0x59c>
   113ec:	bl	11374 <bindtextdomain@plt>
   113f0:	ldr	r0, [pc, #1352]	; 11940 <__snprintf_chk@plt+0x59c>
   113f4:	bl	11164 <textdomain@plt>
   113f8:	ldr	r3, [pc, #1348]	; 11944 <__snprintf_chk@plt+0x5a0>
   113fc:	mov	r2, #125	; 0x7d
   11400:	ldr	r0, [pc, #1344]	; 11948 <__snprintf_chk@plt+0x5a4>
   11404:	str	r2, [r3]
   11408:	bl	15a90 <__snprintf_chk@plt+0x46ec>
   1140c:	ldr	r8, [pc, #1336]	; 1194c <__snprintf_chk@plt+0x5a8>
   11410:	ldr	r7, [pc, #1336]	; 11950 <__snprintf_chk@plt+0x5ac>
   11414:	ldr	fp, [pc, #1336]	; 11954 <__snprintf_chk@plt+0x5b0>
   11418:	ldr	sl, [pc, #1336]	; 11958 <__snprintf_chk@plt+0x5b4>
   1141c:	ldr	r9, [pc, #1336]	; 1195c <__snprintf_chk@plt+0x5b8>
   11420:	mov	r4, #0
   11424:	str	r4, [sp]
   11428:	mov	r3, r8
   1142c:	mov	r2, r7
   11430:	mov	r1, r5
   11434:	mov	r0, r6
   11438:	bl	1123c <getopt_long@plt>
   1143c:	cmn	r0, #1
   11440:	beq	1150c <__snprintf_chk@plt+0x168>
   11444:	cmp	r0, #115	; 0x73
   11448:	beq	114d4 <__snprintf_chk@plt+0x130>
   1144c:	ble	1146c <__snprintf_chk@plt+0xc8>
   11450:	cmp	r0, #256	; 0x100
   11454:	beq	114f4 <__snprintf_chk@plt+0x150>
   11458:	cmp	r0, r9
   1145c:	bne	1148c <__snprintf_chk@plt+0xe8>
   11460:	mov	r3, #1
   11464:	strb	r3, [sl, #25]
   11468:	b	11420 <__snprintf_chk@plt+0x7c>
   1146c:	cmn	r0, #2
   11470:	beq	118fc <__snprintf_chk@plt+0x558>
   11474:	cmp	r0, #107	; 0x6b
   11478:	bne	1149c <__snprintf_chk@plt+0xf8>
   1147c:	ldr	r0, [fp]
   11480:	bl	121dc <__snprintf_chk@plt+0xe38>
   11484:	vstr	d0, [sl, #8]
   11488:	b	11420 <__snprintf_chk@plt+0x7c>
   1148c:	cmp	r0, #118	; 0x76
   11490:	beq	11500 <__snprintf_chk@plt+0x15c>
   11494:	mov	r0, #125	; 0x7d
   11498:	bl	11e6c <__snprintf_chk@plt+0xac8>
   1149c:	cmn	r0, #3
   114a0:	bne	11494 <__snprintf_chk@plt+0xf0>
   114a4:	ldr	r1, [pc, #1204]	; 11960 <__snprintf_chk@plt+0x5bc>
   114a8:	ldr	r3, [pc, #1204]	; 11964 <__snprintf_chk@plt+0x5c0>
   114ac:	ldr	r2, [pc, #1204]	; 11968 <__snprintf_chk@plt+0x5c4>
   114b0:	str	r4, [sp, #4]
   114b4:	ldr	r0, [r1]
   114b8:	ldr	r3, [r3]
   114bc:	ldr	r1, [pc, #1192]	; 1196c <__snprintf_chk@plt+0x5c8>
   114c0:	str	r2, [sp]
   114c4:	ldr	r2, [pc, #1188]	; 11970 <__snprintf_chk@plt+0x5cc>
   114c8:	bl	14e14 <__snprintf_chk@plt+0x3a70>
   114cc:	mov	r0, r4
   114d0:	bl	11260 <exit@plt>
   114d4:	add	r1, sp, #280	; 0x118
   114d8:	ldr	r0, [fp]
   114dc:	bl	12334 <__snprintf_chk@plt+0xf90>
   114e0:	ldr	r3, [pc, #1164]	; 11974 <__snprintf_chk@plt+0x5d0>
   114e4:	cmn	r0, #1
   114e8:	str	r0, [r3]
   114ec:	bne	11420 <__snprintf_chk@plt+0x7c>
   114f0:	b	11494 <__snprintf_chk@plt+0xf0>
   114f4:	mov	r3, #1
   114f8:	strb	r3, [sl, #24]
   114fc:	b	11420 <__snprintf_chk@plt+0x7c>
   11500:	mov	r3, #1
   11504:	strb	r3, [sl, #16]
   11508:	b	11420 <__snprintf_chk@plt+0x7c>
   1150c:	ldr	r7, [pc, #1124]	; 11978 <__snprintf_chk@plt+0x5d4>
   11510:	ldr	r3, [r7]
   11514:	sub	r6, r6, r3
   11518:	cmp	r6, #1
   1151c:	ble	11494 <__snprintf_chk@plt+0xf0>
   11520:	add	r2, r3, #1
   11524:	ldr	r0, [r5, r3, lsl #2]
   11528:	str	r2, [r7]
   1152c:	bl	121dc <__snprintf_chk@plt+0xe38>
   11530:	ldr	r4, [pc, #1056]	; 11958 <__snprintf_chk@plt+0x5b4>
   11534:	ldr	r7, [r7]
   11538:	ldrb	r1, [r4, #24]
   1153c:	ldr	r3, [r5, r7, lsl #2]
   11540:	add	r9, r5, r7, lsl #2
   11544:	cmp	r1, #0
   11548:	str	r3, [r4, #20]
   1154c:	vmov.f64	d8, d0
   11550:	beq	1180c <__snprintf_chk@plt+0x468>
   11554:	ldr	r8, [pc, #1048]	; 11974 <__snprintf_chk@plt+0x5d0>
   11558:	add	r0, sp, #144	; 0x90
   1155c:	mov	r6, #268435456	; 0x10000000
   11560:	ldr	sl, [r8]
   11564:	bl	1132c <sigemptyset@plt>
   11568:	ldr	r3, [pc, #1036]	; 1197c <__snprintf_chk@plt+0x5d8>
   1156c:	add	r1, sp, #140	; 0x8c
   11570:	mov	r2, #0
   11574:	mov	r0, #14
   11578:	str	r3, [sp, #140]	; 0x8c
   1157c:	str	r6, [sp, #272]	; 0x110
   11580:	bl	11188 <sigaction@plt>
   11584:	add	r1, sp, #140	; 0x8c
   11588:	mov	r2, #0
   1158c:	mov	r0, #2
   11590:	bl	11188 <sigaction@plt>
   11594:	add	r1, sp, #140	; 0x8c
   11598:	mov	r2, #0
   1159c:	mov	r0, #3
   115a0:	bl	11188 <sigaction@plt>
   115a4:	add	r1, sp, #140	; 0x8c
   115a8:	mov	r2, #0
   115ac:	mov	r0, #1
   115b0:	bl	11188 <sigaction@plt>
   115b4:	add	r1, sp, #140	; 0x8c
   115b8:	mov	r2, #0
   115bc:	mov	r0, #15
   115c0:	bl	11188 <sigaction@plt>
   115c4:	mov	r2, #0
   115c8:	add	r1, sp, #140	; 0x8c
   115cc:	mov	r0, sl
   115d0:	bl	11188 <sigaction@plt>
   115d4:	mov	r1, #1
   115d8:	mov	r0, #21
   115dc:	bl	11110 <signal@plt>
   115e0:	mov	r1, #1
   115e4:	mov	r0, #22
   115e8:	bl	11110 <signal@plt>
   115ec:	add	r0, sp, #144	; 0x90
   115f0:	bl	1132c <sigemptyset@plt>
   115f4:	ldr	r3, [pc, #900]	; 11980 <__snprintf_chk@plt+0x5dc>
   115f8:	add	r1, sp, #140	; 0x8c
   115fc:	mov	r2, #0
   11600:	mov	r0, #17
   11604:	str	r3, [sp, #140]	; 0x8c
   11608:	str	r6, [sp, #272]	; 0x110
   1160c:	bl	11188 <sigaction@plt>
   11610:	mov	r0, #17
   11614:	bl	11bfc <__snprintf_chk@plt+0x858>
   11618:	bl	11338 <fork@plt>
   1161c:	cmn	r0, #1
   11620:	mov	r6, r0
   11624:	str	r0, [r4, #4]
   11628:	beq	11848 <__snprintf_chk@plt+0x4a4>
   1162c:	cmp	r0, #0
   11630:	bne	116c0 <__snprintf_chk@plt+0x31c>
   11634:	mov	r1, r0
   11638:	mov	r0, #21
   1163c:	bl	11110 <signal@plt>
   11640:	mov	r1, r6
   11644:	mov	r0, #22
   11648:	bl	11110 <signal@plt>
   1164c:	ldr	r0, [r5, r7, lsl #2]
   11650:	mov	r1, r9
   11654:	bl	110f8 <execvp@plt>
   11658:	bl	11290 <__errno_location@plt>
   1165c:	mov	r2, #5
   11660:	ldr	r1, [pc, #796]	; 11984 <__snprintf_chk@plt+0x5e0>
   11664:	ldr	r7, [r0]
   11668:	mov	r0, r6
   1166c:	cmp	r7, #2
   11670:	moveq	r5, #127	; 0x7f
   11674:	movne	r5, #126	; 0x7e
   11678:	bl	11128 <dcgettext@plt>
   1167c:	mov	r8, r0
   11680:	ldr	r0, [r4, #20]
   11684:	bl	149a8 <__snprintf_chk@plt+0x3604>
   11688:	mov	r2, r8
   1168c:	mov	r1, r7
   11690:	mov	r3, r0
   11694:	mov	r0, r6
   11698:	bl	111e8 <error@plt>
   1169c:	ldr	r3, [pc, #656]	; 11934 <__snprintf_chk@plt+0x590>
   116a0:	ldr	r2, [sp, #300]	; 0x12c
   116a4:	mov	r0, r5
   116a8:	ldr	r3, [r3]
   116ac:	cmp	r2, r3
   116b0:	bne	11930 <__snprintf_chk@plt+0x58c>
   116b4:	add	sp, sp, #308	; 0x134
   116b8:	vpop	{d8}
   116bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   116c0:	mov	r0, #14
   116c4:	bl	11bfc <__snprintf_chk@plt+0x858>
   116c8:	vmov.f64	d0, d8
   116cc:	mov	r0, #1
   116d0:	bl	11a94 <__snprintf_chk@plt+0x6f0>
   116d4:	add	r0, sp, #140	; 0x8c
   116d8:	ldr	r5, [r8]
   116dc:	bl	1132c <sigemptyset@plt>
   116e0:	mov	r1, #14
   116e4:	add	r0, sp, #140	; 0x8c
   116e8:	bl	1120c <sigaddset@plt>
   116ec:	mov	r1, #2
   116f0:	add	r0, sp, #140	; 0x8c
   116f4:	bl	1120c <sigaddset@plt>
   116f8:	mov	r1, #3
   116fc:	add	r0, sp, #140	; 0x8c
   11700:	bl	1120c <sigaddset@plt>
   11704:	mov	r1, #1
   11708:	add	r0, sp, #140	; 0x8c
   1170c:	bl	1120c <sigaddset@plt>
   11710:	mov	r1, #15
   11714:	add	r0, sp, #140	; 0x8c
   11718:	bl	1120c <sigaddset@plt>
   1171c:	mov	r1, r5
   11720:	add	r0, sp, #140	; 0x8c
   11724:	bl	1120c <sigaddset@plt>
   11728:	mov	r1, #17
   1172c:	add	r0, sp, #140	; 0x8c
   11730:	bl	1120c <sigaddset@plt>
   11734:	add	r1, sp, #140	; 0x8c
   11738:	add	r2, sp, #12
   1173c:	mov	r0, #0
   11740:	bl	110c8 <sigprocmask@plt>
   11744:	cmp	r0, #0
   11748:	beq	11780 <__snprintf_chk@plt+0x3dc>
   1174c:	bl	11290 <__errno_location@plt>
   11750:	mov	r2, #5
   11754:	ldr	r1, [pc, #556]	; 11988 <__snprintf_chk@plt+0x5e4>
   11758:	ldr	r5, [r0]
   1175c:	mov	r0, #0
   11760:	bl	11128 <dcgettext@plt>
   11764:	mov	r1, r5
   11768:	mov	r2, r0
   1176c:	mov	r0, #0
   11770:	bl	111e8 <error@plt>
   11774:	b	11780 <__snprintf_chk@plt+0x3dc>
   11778:	add	r0, sp, #12
   1177c:	bl	112c0 <sigsuspend@plt>
   11780:	mov	r2, #1
   11784:	add	r1, sp, #8
   11788:	ldr	r0, [r4, #4]
   1178c:	bl	111ac <waitpid@plt>
   11790:	cmp	r0, #0
   11794:	beq	11778 <__snprintf_chk@plt+0x3d4>
   11798:	blt	117d8 <__snprintf_chk@plt+0x434>
   1179c:	ldr	r3, [sp, #8]
   117a0:	ands	r5, r3, #127	; 0x7f
   117a4:	bne	11818 <__snprintf_chk@plt+0x474>
   117a8:	asr	r3, r3, #8
   117ac:	uxtb	r3, r3
   117b0:	str	r3, [sp, #8]
   117b4:	ldr	r3, [r4]
   117b8:	cmp	r3, #0
   117bc:	beq	117d0 <__snprintf_chk@plt+0x42c>
   117c0:	ldrb	r3, [r4, #25]
   117c4:	cmp	r3, #0
   117c8:	moveq	r3, #124	; 0x7c
   117cc:	streq	r3, [sp, #8]
   117d0:	ldr	r5, [sp, #8]
   117d4:	b	1169c <__snprintf_chk@plt+0x2f8>
   117d8:	bl	11290 <__errno_location@plt>
   117dc:	mov	r2, #5
   117e0:	ldr	r1, [pc, #420]	; 1198c <__snprintf_chk@plt+0x5e8>
   117e4:	ldr	r5, [r0]
   117e8:	mov	r0, #0
   117ec:	bl	11128 <dcgettext@plt>
   117f0:	mov	r1, r5
   117f4:	mov	r2, r0
   117f8:	mov	r0, #0
   117fc:	bl	111e8 <error@plt>
   11800:	mov	r3, #125	; 0x7d
   11804:	str	r3, [sp, #8]
   11808:	b	117b4 <__snprintf_chk@plt+0x410>
   1180c:	mov	r0, r1
   11810:	bl	11368 <setpgid@plt>
   11814:	b	11554 <__snprintf_chk@plt+0x1b0>
   11818:	add	r2, r5, #1
   1181c:	sxtb	r2, r2
   11820:	cmp	r2, #1
   11824:	ble	11878 <__snprintf_chk@plt+0x4d4>
   11828:	tst	r3, #128	; 0x80
   1182c:	bne	118a8 <__snprintf_chk@plt+0x504>
   11830:	ldr	r6, [r4]
   11834:	cmp	r6, #0
   11838:	beq	118cc <__snprintf_chk@plt+0x528>
   1183c:	add	r5, r5, #128	; 0x80
   11840:	str	r5, [sp, #8]
   11844:	b	117b4 <__snprintf_chk@plt+0x410>
   11848:	bl	11290 <__errno_location@plt>
   1184c:	mov	r2, #5
   11850:	ldr	r1, [pc, #312]	; 11990 <__snprintf_chk@plt+0x5ec>
   11854:	mov	r5, #125	; 0x7d
   11858:	ldr	r4, [r0]
   1185c:	mov	r0, #0
   11860:	bl	11128 <dcgettext@plt>
   11864:	mov	r1, r4
   11868:	mov	r2, r0
   1186c:	mov	r0, #0
   11870:	bl	111e8 <error@plt>
   11874:	b	1169c <__snprintf_chk@plt+0x2f8>
   11878:	mov	r2, #5
   1187c:	ldr	r1, [pc, #272]	; 11994 <__snprintf_chk@plt+0x5f0>
   11880:	mov	r0, #0
   11884:	bl	11128 <dcgettext@plt>
   11888:	mov	r1, #0
   1188c:	ldr	r3, [sp, #8]
   11890:	mov	r2, r0
   11894:	mov	r0, r1
   11898:	bl	111e8 <error@plt>
   1189c:	mov	r3, #1
   118a0:	str	r3, [sp, #8]
   118a4:	b	117b4 <__snprintf_chk@plt+0x410>
   118a8:	mov	r2, #5
   118ac:	ldr	r1, [pc, #228]	; 11998 <__snprintf_chk@plt+0x5f4>
   118b0:	mov	r0, #0
   118b4:	bl	11128 <dcgettext@plt>
   118b8:	mov	r1, #0
   118bc:	mov	r2, r0
   118c0:	mov	r0, r1
   118c4:	bl	111e8 <error@plt>
   118c8:	b	11830 <__snprintf_chk@plt+0x48c>
   118cc:	mov	r1, r6
   118d0:	mov	r0, #4
   118d4:	bl	112d8 <prctl@plt>
   118d8:	subs	r1, r0, #0
   118dc:	bne	11904 <__snprintf_chk@plt+0x560>
   118e0:	mov	r0, r5
   118e4:	bl	11110 <signal@plt>
   118e8:	mov	r0, r5
   118ec:	bl	11bfc <__snprintf_chk@plt+0x858>
   118f0:	mov	r0, r5
   118f4:	bl	11098 <raise@plt>
   118f8:	b	1183c <__snprintf_chk@plt+0x498>
   118fc:	mov	r0, r4
   11900:	bl	11e6c <__snprintf_chk@plt+0xac8>
   11904:	bl	11290 <__errno_location@plt>
   11908:	mov	r2, #5
   1190c:	ldr	r1, [pc, #136]	; 1199c <__snprintf_chk@plt+0x5f8>
   11910:	ldr	r7, [r0]
   11914:	mov	r0, r6
   11918:	bl	11128 <dcgettext@plt>
   1191c:	mov	r1, r7
   11920:	mov	r2, r0
   11924:	mov	r0, r6
   11928:	bl	111e8 <error@plt>
   1192c:	b	1183c <__snprintf_chk@plt+0x498>
   11930:	bl	11134 <__stack_chk_fail@plt>
   11934:	strdeq	r6, [r2], -r8
   11938:	andeq	r5, r1, r8, lsl #25
   1193c:	andeq	r6, r1, ip, asr #7
   11940:	andeq	r6, r1, r4, lsl #6
   11944:	andeq	r7, r2, r0, lsr r1
   11948:	muleq	r1, ip, r5
   1194c:	andeq	r5, r1, ip, ror #21
   11950:	strdeq	r6, [r1], -r0
   11954:	andeq	r7, r2, r0, lsr r3
   11958:	andeq	r7, r2, r8, lsr r3
   1195c:	andeq	r0, r0, r1, lsl #2
   11960:	andeq	r7, r2, ip, lsr #6
   11964:	andeq	r7, r2, ip, lsr #2
   11968:	andeq	r6, r1, r0, ror #7
   1196c:	ldrdeq	r5, [r1], -r8
   11970:	andeq	r6, r1, r0, lsl #6
   11974:	andeq	r7, r2, r8, lsr #2
   11978:	andeq	r7, r2, r0, lsr #6
   1197c:	muleq	r1, r0, ip
   11980:	muleq	r1, r0, sl
   11984:	andeq	r6, r1, r0, lsl r4
   11988:	muleq	r1, ip, fp
   1198c:	andeq	r6, r1, ip, lsr #8
   11990:	strdeq	r6, [r1], -r8
   11994:	muleq	r1, r4, r4
   11998:	andeq	r6, r1, r8, asr #8
   1199c:	andeq	r6, r1, ip, ror #8
   119a0:	mov	fp, #0
   119a4:	mov	lr, #0
   119a8:	pop	{r1}		; (ldr r1, [sp], #4)
   119ac:	mov	r2, sp
   119b0:	push	{r2}		; (str r2, [sp, #-4]!)
   119b4:	push	{r0}		; (str r0, [sp, #-4]!)
   119b8:	ldr	ip, [pc, #16]	; 119d0 <__snprintf_chk@plt+0x62c>
   119bc:	push	{ip}		; (str ip, [sp, #-4]!)
   119c0:	ldr	r0, [pc, #12]	; 119d4 <__snprintf_chk@plt+0x630>
   119c4:	ldr	r3, [pc, #12]	; 119d8 <__snprintf_chk@plt+0x634>
   119c8:	bl	11218 <__libc_start_main@plt>
   119cc:	bl	11398 <abort@plt>
   119d0:	andeq	r5, r1, ip, lsl #21
   119d4:			; <UNDEFINED> instruction: 0x000113b0
   119d8:	andeq	r5, r1, ip, lsr #20
   119dc:	ldr	r3, [pc, #20]	; 119f8 <__snprintf_chk@plt+0x654>
   119e0:	ldr	r2, [pc, #20]	; 119fc <__snprintf_chk@plt+0x658>
   119e4:	add	r3, pc, r3
   119e8:	ldr	r2, [r3, r2]
   119ec:	cmp	r2, #0
   119f0:	bxeq	lr
   119f4:	b	11230 <__gmon_start__@plt>
   119f8:	andeq	r5, r1, r4, lsl r6
   119fc:	andeq	r0, r0, ip, lsl r1
   11a00:	ldr	r0, [pc, #24]	; 11a20 <__snprintf_chk@plt+0x67c>
   11a04:	ldr	r3, [pc, #24]	; 11a24 <__snprintf_chk@plt+0x680>
   11a08:	cmp	r3, r0
   11a0c:	bxeq	lr
   11a10:	ldr	r3, [pc, #16]	; 11a28 <__snprintf_chk@plt+0x684>
   11a14:	cmp	r3, #0
   11a18:	bxeq	lr
   11a1c:	bx	r3
   11a20:	andeq	r7, r2, r8, lsl r3
   11a24:	andeq	r7, r2, r8, lsl r3
   11a28:	andeq	r0, r0, r0
   11a2c:	ldr	r0, [pc, #36]	; 11a58 <__snprintf_chk@plt+0x6b4>
   11a30:	ldr	r1, [pc, #36]	; 11a5c <__snprintf_chk@plt+0x6b8>
   11a34:	sub	r1, r1, r0
   11a38:	asr	r1, r1, #2
   11a3c:	add	r1, r1, r1, lsr #31
   11a40:	asrs	r1, r1, #1
   11a44:	bxeq	lr
   11a48:	ldr	r3, [pc, #16]	; 11a60 <__snprintf_chk@plt+0x6bc>
   11a4c:	cmp	r3, #0
   11a50:	bxeq	lr
   11a54:	bx	r3
   11a58:	andeq	r7, r2, r8, lsl r3
   11a5c:	andeq	r7, r2, r8, lsl r3
   11a60:	andeq	r0, r0, r0
   11a64:	push	{r4, lr}
   11a68:	ldr	r4, [pc, #24]	; 11a88 <__snprintf_chk@plt+0x6e4>
   11a6c:	ldrb	r3, [r4]
   11a70:	cmp	r3, #0
   11a74:	popne	{r4, pc}
   11a78:	bl	11a00 <__snprintf_chk@plt+0x65c>
   11a7c:	mov	r3, #1
   11a80:	strb	r3, [r4]
   11a84:	pop	{r4, pc}
   11a88:	andeq	r7, r2, r4, lsr r3
   11a8c:	b	11a2c <__snprintf_chk@plt+0x688>
   11a90:	bx	lr
   11a94:	push	{r4, r5, r6, r7, lr}
   11a98:	vpush	{d8}
   11a9c:	ldr	r5, [pc, #332]	; 11bf0 <__snprintf_chk@plt+0x84c>
   11aa0:	mov	r6, r0
   11aa4:	vmov.f64	d8, d0
   11aa8:	sub	sp, sp, #36	; 0x24
   11aac:	add	r4, sp, #4
   11ab0:	ldr	r3, [r5]
   11ab4:	mov	r0, r4
   11ab8:	str	r3, [sp, #28]
   11abc:	bl	12678 <__snprintf_chk@plt+0x12d4>
   11ac0:	ldm	r4, {r0, r1}
   11ac4:	add	r3, sp, #20
   11ac8:	mov	r4, #0
   11acc:	stm	r3, {r0, r1}
   11ad0:	mov	r2, sp
   11ad4:	mov	r1, r4
   11ad8:	mov	r0, r4
   11adc:	str	r4, [sp, #12]
   11ae0:	str	r4, [sp, #16]
   11ae4:	bl	11158 <timer_create@plt>
   11ae8:	subs	r7, r0, #0
   11aec:	beq	11b60 <__snprintf_chk@plt+0x7bc>
   11af0:	cmp	r6, #0
   11af4:	beq	11b08 <__snprintf_chk@plt+0x764>
   11af8:	bl	11290 <__errno_location@plt>
   11afc:	ldr	r6, [r0]
   11b00:	cmp	r6, #38	; 0x26
   11b04:	bne	11b90 <__snprintf_chk@plt+0x7ec>
   11b08:	vldr	d7, [pc, #216]	; 11be8 <__snprintf_chk@plt+0x844>
   11b0c:	vcmpe.f64	d8, d7
   11b10:	vmrs	APSR_nzcv, fpscr
   11b14:	mvnge	r0, #0
   11b18:	blt	11b3c <__snprintf_chk@plt+0x798>
   11b1c:	bl	11140 <alarm@plt>
   11b20:	ldr	r2, [sp, #28]
   11b24:	ldr	r3, [r5]
   11b28:	cmp	r2, r3
   11b2c:	bne	11be0 <__snprintf_chk@plt+0x83c>
   11b30:	add	sp, sp, #36	; 0x24
   11b34:	vpop	{d8}
   11b38:	pop	{r4, r5, r6, r7, pc}
   11b3c:	vcvt.u32.f64	s15, d8
   11b40:	vcvt.f64.u32	d6, s15
   11b44:	vmov	r3, s15
   11b48:	vcmpe.f64	d6, d8
   11b4c:	vmrs	APSR_nzcv, fpscr
   11b50:	movmi	r0, #1
   11b54:	movpl	r0, #0
   11b58:	add	r0, r0, r3
   11b5c:	b	11b1c <__snprintf_chk@plt+0x778>
   11b60:	mov	r3, r7
   11b64:	add	r2, sp, #12
   11b68:	mov	r1, r7
   11b6c:	ldr	r0, [sp]
   11b70:	bl	1117c <timer_settime@plt>
   11b74:	cmp	r0, r4
   11b78:	beq	11b20 <__snprintf_chk@plt+0x77c>
   11b7c:	cmp	r6, r4
   11b80:	bne	11bb4 <__snprintf_chk@plt+0x810>
   11b84:	ldr	r0, [sp]
   11b88:	bl	111f4 <timer_delete@plt>
   11b8c:	b	11b08 <__snprintf_chk@plt+0x764>
   11b90:	mov	r2, #5
   11b94:	ldr	r1, [pc, #88]	; 11bf4 <__snprintf_chk@plt+0x850>
   11b98:	mov	r0, r4
   11b9c:	bl	11128 <dcgettext@plt>
   11ba0:	mov	r1, r6
   11ba4:	mov	r2, r0
   11ba8:	mov	r0, r4
   11bac:	bl	111e8 <error@plt>
   11bb0:	b	11b08 <__snprintf_chk@plt+0x764>
   11bb4:	bl	11290 <__errno_location@plt>
   11bb8:	mov	r2, #5
   11bbc:	ldr	r1, [pc, #52]	; 11bf8 <__snprintf_chk@plt+0x854>
   11bc0:	ldr	r4, [r0]
   11bc4:	mov	r0, r7
   11bc8:	bl	11128 <dcgettext@plt>
   11bcc:	mov	r1, r4
   11bd0:	mov	r2, r0
   11bd4:	mov	r0, r7
   11bd8:	bl	111e8 <error@plt>
   11bdc:	b	11b84 <__snprintf_chk@plt+0x7e0>
   11be0:	bl	11134 <__stack_chk_fail@plt>
   11be4:	nop			; (mov r0, r0)
   11be8:			; <UNDEFINED> instruction: 0xffe00000
   11bec:	strdmi	pc, [pc, #255]	; 11cf3 <__snprintf_chk@plt+0x94f>
   11bf0:	strdeq	r6, [r2], -r8
   11bf4:	andeq	r5, r1, r4, lsl #23
   11bf8:	andeq	r5, r1, ip, ror #22
   11bfc:	push	{r4, r5, lr}
   11c00:	sub	sp, sp, #140	; 0x8c
   11c04:	ldr	r4, [pc, #124]	; 11c88 <__snprintf_chk@plt+0x8e4>
   11c08:	mov	r5, r0
   11c0c:	add	r0, sp, #4
   11c10:	ldr	r3, [r4]
   11c14:	str	r3, [sp, #132]	; 0x84
   11c18:	bl	1132c <sigemptyset@plt>
   11c1c:	mov	r1, r5
   11c20:	add	r0, sp, #4
   11c24:	bl	1120c <sigaddset@plt>
   11c28:	add	r1, sp, #4
   11c2c:	mov	r2, #0
   11c30:	mov	r0, #1
   11c34:	bl	110c8 <sigprocmask@plt>
   11c38:	cmp	r0, #0
   11c3c:	bne	11c58 <__snprintf_chk@plt+0x8b4>
   11c40:	ldr	r2, [sp, #132]	; 0x84
   11c44:	ldr	r3, [r4]
   11c48:	cmp	r2, r3
   11c4c:	bne	11c84 <__snprintf_chk@plt+0x8e0>
   11c50:	add	sp, sp, #140	; 0x8c
   11c54:	pop	{r4, r5, pc}
   11c58:	bl	11290 <__errno_location@plt>
   11c5c:	mov	r2, #5
   11c60:	ldr	r1, [pc, #36]	; 11c8c <__snprintf_chk@plt+0x8e8>
   11c64:	ldr	r5, [r0]
   11c68:	mov	r0, #0
   11c6c:	bl	11128 <dcgettext@plt>
   11c70:	mov	r1, r5
   11c74:	mov	r2, r0
   11c78:	mov	r0, #0
   11c7c:	bl	111e8 <error@plt>
   11c80:	b	11c40 <__snprintf_chk@plt+0x89c>
   11c84:	bl	11134 <__stack_chk_fail@plt>
   11c88:	strdeq	r6, [r2], -r8
   11c8c:	muleq	r1, ip, fp
   11c90:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11c94:	cmp	r0, #14
   11c98:	vpush	{d8}
   11c9c:	ldr	r7, [pc, #436]	; 11e58 <__snprintf_chk@plt+0xab4>
   11ca0:	ldreq	r4, [pc, #436]	; 11e5c <__snprintf_chk@plt+0xab8>
   11ca4:	ldrne	r4, [pc, #432]	; 11e5c <__snprintf_chk@plt+0xab8>
   11ca8:	ldr	r3, [r7]
   11cac:	ldreq	r2, [pc, #428]	; 11e60 <__snprintf_chk@plt+0xabc>
   11cb0:	sub	sp, sp, #32
   11cb4:	ldr	r6, [r4, #4]
   11cb8:	str	r3, [sp, #28]
   11cbc:	moveq	r3, #1
   11cc0:	movne	r5, r0
   11cc4:	ldreq	r5, [r2]
   11cc8:	streq	r3, [r4]
   11ccc:	cmp	r6, #0
   11cd0:	beq	11e4c <__snprintf_chk@plt+0xaa8>
   11cd4:	vldr	d8, [r4, #8]
   11cd8:	mov	r8, #0
   11cdc:	mov	r9, #0
   11ce0:	vcmp.f64	d8, #0.0
   11ce4:	vmrs	APSR_nzcv, fpscr
   11ce8:	bne	11d2c <__snprintf_chk@plt+0x988>
   11cec:	ldrb	r3, [r4, #16]
   11cf0:	cmp	r3, #0
   11cf4:	bne	11d64 <__snprintf_chk@plt+0x9c0>
   11cf8:	mov	r1, r5
   11cfc:	mov	r0, r6
   11d00:	bl	11248 <kill@plt>
   11d04:	ldrb	r4, [r4, #24]
   11d08:	cmp	r4, #0
   11d0c:	beq	11dc8 <__snprintf_chk@plt+0xa24>
   11d10:	ldr	r2, [sp, #28]
   11d14:	ldr	r3, [r7]
   11d18:	cmp	r2, r3
   11d1c:	bne	11e54 <__snprintf_chk@plt+0xab0>
   11d20:	add	sp, sp, #32
   11d24:	vpop	{d8}
   11d28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d2c:	bl	11290 <__errno_location@plt>
   11d30:	ldr	r3, [pc, #296]	; 11e60 <__snprintf_chk@plt+0xabc>
   11d34:	mov	r2, #9
   11d38:	vmov.f64	d0, d8
   11d3c:	str	r2, [r3]
   11d40:	mov	r6, r0
   11d44:	mov	r0, #0
   11d48:	ldr	sl, [r6]
   11d4c:	bl	11a94 <__snprintf_chk@plt+0x6f0>
   11d50:	ldrb	r3, [r4, #16]
   11d54:	str	sl, [r6]
   11d58:	strd	r8, [r4, #8]
   11d5c:	cmp	r3, #0
   11d60:	beq	11dac <__snprintf_chk@plt+0xa08>
   11d64:	add	r1, sp, #8
   11d68:	mov	r0, r5
   11d6c:	bl	1548c <__snprintf_chk@plt+0x40e8>
   11d70:	cmp	r0, #0
   11d74:	bne	11e1c <__snprintf_chk@plt+0xa78>
   11d78:	mov	r2, #5
   11d7c:	ldr	r1, [pc, #224]	; 11e64 <__snprintf_chk@plt+0xac0>
   11d80:	mov	r0, #0
   11d84:	bl	11128 <dcgettext@plt>
   11d88:	mov	r6, r0
   11d8c:	ldr	r0, [r4, #20]
   11d90:	bl	149a8 <__snprintf_chk@plt+0x3604>
   11d94:	mov	r1, #0
   11d98:	mov	r2, r6
   11d9c:	add	r3, sp, #8
   11da0:	str	r0, [sp]
   11da4:	mov	r0, r1
   11da8:	bl	111e8 <error@plt>
   11dac:	ldr	r6, [r4, #4]
   11db0:	cmp	r6, #0
   11db4:	bne	11cf8 <__snprintf_chk@plt+0x954>
   11db8:	mov	r1, #1
   11dbc:	mov	r0, r5
   11dc0:	bl	11110 <signal@plt>
   11dc4:	b	11cf8 <__snprintf_chk@plt+0x954>
   11dc8:	mov	r1, #1
   11dcc:	mov	r0, r5
   11dd0:	bl	11110 <signal@plt>
   11dd4:	mov	r1, r5
   11dd8:	mov	r0, r4
   11ddc:	bl	11248 <kill@plt>
   11de0:	cmp	r5, #9
   11de4:	cmpne	r5, #18
   11de8:	beq	11d10 <__snprintf_chk@plt+0x96c>
   11dec:	cmp	r6, #0
   11df0:	beq	11e3c <__snprintf_chk@plt+0xa98>
   11df4:	mov	r0, r6
   11df8:	mov	r1, #18
   11dfc:	bl	11248 <kill@plt>
   11e00:	mov	r1, #1
   11e04:	mov	r0, #18
   11e08:	bl	11110 <signal@plt>
   11e0c:	mov	r1, #18
   11e10:	mov	r0, #0
   11e14:	bl	11248 <kill@plt>
   11e18:	b	11d10 <__snprintf_chk@plt+0x96c>
   11e1c:	ldr	r2, [pc, #68]	; 11e68 <__snprintf_chk@plt+0xac4>
   11e20:	mov	r3, #19
   11e24:	mov	r1, r3
   11e28:	stm	sp, {r2, r5}
   11e2c:	add	r0, sp, #8
   11e30:	mov	r2, #1
   11e34:	bl	113a4 <__snprintf_chk@plt>
   11e38:	b	11d78 <__snprintf_chk@plt+0x9d4>
   11e3c:	mov	r1, #1
   11e40:	mov	r0, #18
   11e44:	bl	11110 <signal@plt>
   11e48:	b	11df4 <__snprintf_chk@plt+0xa50>
   11e4c:	add	r0, r5, #128	; 0x80
   11e50:	bl	110e0 <_exit@plt>
   11e54:	bl	11134 <__stack_chk_fail@plt>
   11e58:	strdeq	r6, [r2], -r8
   11e5c:	andeq	r7, r2, r8, lsr r3
   11e60:	andeq	r7, r2, r8, lsr #2
   11e64:			; <UNDEFINED> instruction: 0x00015bb8
   11e68:			; <UNDEFINED> instruction: 0x00015bb4
   11e6c:	ldr	r3, [pc, #772]	; 12178 <__snprintf_chk@plt+0xdd4>
   11e70:	push	{r7, lr}
   11e74:	sub	sp, sp, #64	; 0x40
   11e78:	ldr	r3, [r3]
   11e7c:	subs	r4, r0, #0
   11e80:	str	r3, [sp, #60]	; 0x3c
   11e84:	beq	11ec0 <__snprintf_chk@plt+0xb1c>
   11e88:	ldr	r3, [pc, #748]	; 1217c <__snprintf_chk@plt+0xdd8>
   11e8c:	mov	r2, #5
   11e90:	ldr	r1, [pc, #744]	; 12180 <__snprintf_chk@plt+0xddc>
   11e94:	mov	r0, #0
   11e98:	ldr	r5, [r3]
   11e9c:	bl	11128 <dcgettext@plt>
   11ea0:	ldr	r3, [pc, #732]	; 12184 <__snprintf_chk@plt+0xde0>
   11ea4:	mov	r1, #1
   11ea8:	ldr	r3, [r3]
   11eac:	mov	r2, r0
   11eb0:	mov	r0, r5
   11eb4:	bl	112f0 <__fprintf_chk@plt>
   11eb8:	mov	r0, r4
   11ebc:	bl	11260 <exit@plt>
   11ec0:	mov	r2, #5
   11ec4:	ldr	r1, [pc, #700]	; 12188 <__snprintf_chk@plt+0xde4>
   11ec8:	bl	11128 <dcgettext@plt>
   11ecc:	ldr	r3, [pc, #688]	; 12184 <__snprintf_chk@plt+0xde0>
   11ed0:	ldr	r5, [pc, #692]	; 1218c <__snprintf_chk@plt+0xde8>
   11ed4:	ldr	r3, [r3]
   11ed8:	mov	r2, r3
   11edc:	mov	r1, r0
   11ee0:	mov	r0, #1
   11ee4:	bl	112cc <__printf_chk@plt>
   11ee8:	mov	r2, #5
   11eec:	ldr	r1, [pc, #668]	; 12190 <__snprintf_chk@plt+0xdec>
   11ef0:	mov	r0, r4
   11ef4:	bl	11128 <dcgettext@plt>
   11ef8:	ldr	r1, [r5]
   11efc:	bl	1108c <fputs_unlocked@plt>
   11f00:	mov	r2, #5
   11f04:	ldr	r1, [pc, #648]	; 12194 <__snprintf_chk@plt+0xdf0>
   11f08:	mov	r0, r4
   11f0c:	bl	11128 <dcgettext@plt>
   11f10:	ldr	r1, [r5]
   11f14:	bl	1108c <fputs_unlocked@plt>
   11f18:	mov	r2, #5
   11f1c:	ldr	r1, [pc, #628]	; 12198 <__snprintf_chk@plt+0xdf4>
   11f20:	mov	r0, r4
   11f24:	bl	11128 <dcgettext@plt>
   11f28:	ldr	r1, [r5]
   11f2c:	bl	1108c <fputs_unlocked@plt>
   11f30:	mov	r2, #5
   11f34:	ldr	r1, [pc, #608]	; 1219c <__snprintf_chk@plt+0xdf8>
   11f38:	mov	r0, r4
   11f3c:	bl	11128 <dcgettext@plt>
   11f40:	ldr	r1, [r5]
   11f44:	bl	1108c <fputs_unlocked@plt>
   11f48:	mov	r2, #5
   11f4c:	ldr	r1, [pc, #588]	; 121a0 <__snprintf_chk@plt+0xdfc>
   11f50:	mov	r0, r4
   11f54:	bl	11128 <dcgettext@plt>
   11f58:	ldr	r1, [r5]
   11f5c:	bl	1108c <fputs_unlocked@plt>
   11f60:	mov	r2, #5
   11f64:	ldr	r1, [pc, #568]	; 121a4 <__snprintf_chk@plt+0xe00>
   11f68:	mov	r0, r4
   11f6c:	bl	11128 <dcgettext@plt>
   11f70:	ldr	r1, [r5]
   11f74:	bl	1108c <fputs_unlocked@plt>
   11f78:	mov	r2, #5
   11f7c:	ldr	r1, [pc, #548]	; 121a8 <__snprintf_chk@plt+0xe04>
   11f80:	mov	r0, r4
   11f84:	bl	11128 <dcgettext@plt>
   11f88:	ldr	r1, [r5]
   11f8c:	bl	1108c <fputs_unlocked@plt>
   11f90:	mov	r2, #5
   11f94:	ldr	r1, [pc, #528]	; 121ac <__snprintf_chk@plt+0xe08>
   11f98:	mov	r0, r4
   11f9c:	bl	11128 <dcgettext@plt>
   11fa0:	ldr	r1, [r5]
   11fa4:	bl	1108c <fputs_unlocked@plt>
   11fa8:	ldr	lr, [pc, #512]	; 121b0 <__snprintf_chk@plt+0xe0c>
   11fac:	add	ip, sp, #4
   11fb0:	ldm	lr!, {r0, r1, r2, r3}
   11fb4:	stmia	ip!, {r0, r1, r2, r3}
   11fb8:	ldm	lr!, {r0, r1, r2, r3}
   11fbc:	ldr	r6, [sp, #4]
   11fc0:	stmia	ip!, {r0, r1, r2, r3}
   11fc4:	cmp	r6, #0
   11fc8:	ldm	lr!, {r0, r1, r2, r3}
   11fcc:	addeq	r5, sp, #4
   11fd0:	stmia	ip!, {r0, r1, r2, r3}
   11fd4:	ldm	lr, {r0, r1}
   11fd8:	stm	ip, {r0, r1}
   11fdc:	beq	1200c <__snprintf_chk@plt+0xc68>
   11fe0:	ldr	r7, [pc, #460]	; 121b4 <__snprintf_chk@plt+0xe10>
   11fe4:	add	r5, sp, #4
   11fe8:	b	11ff8 <__snprintf_chk@plt+0xc54>
   11fec:	ldr	r6, [r5, #8]!
   11ff0:	cmp	r6, #0
   11ff4:	beq	1200c <__snprintf_chk@plt+0xc68>
   11ff8:	mov	r1, r6
   11ffc:	mov	r0, r7
   12000:	bl	110a4 <strcmp@plt>
   12004:	cmp	r0, #0
   12008:	bne	11fec <__snprintf_chk@plt+0xc48>
   1200c:	ldr	r5, [r5, #4]
   12010:	mov	r2, #5
   12014:	cmp	r5, #0
   12018:	ldr	r1, [pc, #408]	; 121b8 <__snprintf_chk@plt+0xe14>
   1201c:	beq	120c4 <__snprintf_chk@plt+0xd20>
   12020:	mov	r0, #0
   12024:	bl	11128 <dcgettext@plt>
   12028:	ldr	r3, [pc, #396]	; 121bc <__snprintf_chk@plt+0xe18>
   1202c:	ldr	r2, [pc, #396]	; 121c0 <__snprintf_chk@plt+0xe1c>
   12030:	mov	r1, r0
   12034:	mov	r0, #1
   12038:	bl	112cc <__printf_chk@plt>
   1203c:	mov	r1, #0
   12040:	mov	r0, #5
   12044:	bl	11320 <setlocale@plt>
   12048:	cmp	r0, #0
   1204c:	ldreq	r6, [pc, #352]	; 121b4 <__snprintf_chk@plt+0xe10>
   12050:	beq	1206c <__snprintf_chk@plt+0xcc8>
   12054:	mov	r2, #3
   12058:	ldr	r1, [pc, #356]	; 121c4 <__snprintf_chk@plt+0xe20>
   1205c:	bl	1138c <strncmp@plt>
   12060:	ldr	r6, [pc, #332]	; 121b4 <__snprintf_chk@plt+0xe10>
   12064:	cmp	r0, #0
   12068:	bne	12154 <__snprintf_chk@plt+0xdb0>
   1206c:	mov	r2, #5
   12070:	ldr	r1, [pc, #336]	; 121c8 <__snprintf_chk@plt+0xe24>
   12074:	mov	r0, #0
   12078:	bl	11128 <dcgettext@plt>
   1207c:	ldr	r3, [pc, #304]	; 121b4 <__snprintf_chk@plt+0xe10>
   12080:	ldr	r2, [pc, #308]	; 121bc <__snprintf_chk@plt+0xe18>
   12084:	mov	r1, r0
   12088:	mov	r0, #1
   1208c:	bl	112cc <__printf_chk@plt>
   12090:	mov	r2, #5
   12094:	ldr	r1, [pc, #304]	; 121cc <__snprintf_chk@plt+0xe28>
   12098:	mov	r0, #0
   1209c:	bl	11128 <dcgettext@plt>
   120a0:	ldr	r2, [pc, #296]	; 121d0 <__snprintf_chk@plt+0xe2c>
   120a4:	cmp	r5, r6
   120a8:	ldr	r3, [pc, #292]	; 121d4 <__snprintf_chk@plt+0xe30>
   120ac:	movne	r3, r2
   120b0:	mov	r1, r0
   120b4:	mov	r2, r5
   120b8:	mov	r0, #1
   120bc:	bl	112cc <__printf_chk@plt>
   120c0:	b	11eb8 <__snprintf_chk@plt+0xb14>
   120c4:	mov	r0, r5
   120c8:	bl	11128 <dcgettext@plt>
   120cc:	ldr	r3, [pc, #232]	; 121bc <__snprintf_chk@plt+0xe18>
   120d0:	ldr	r2, [pc, #232]	; 121c0 <__snprintf_chk@plt+0xe1c>
   120d4:	mov	r1, r0
   120d8:	mov	r0, #1
   120dc:	bl	112cc <__printf_chk@plt>
   120e0:	mov	r1, r5
   120e4:	mov	r0, #5
   120e8:	bl	11320 <setlocale@plt>
   120ec:	cmp	r0, #0
   120f0:	beq	12108 <__snprintf_chk@plt+0xd64>
   120f4:	mov	r2, #3
   120f8:	ldr	r1, [pc, #196]	; 121c4 <__snprintf_chk@plt+0xe20>
   120fc:	bl	1138c <strncmp@plt>
   12100:	cmp	r0, #0
   12104:	bne	1214c <__snprintf_chk@plt+0xda8>
   12108:	mov	r2, #5
   1210c:	ldr	r1, [pc, #180]	; 121c8 <__snprintf_chk@plt+0xe24>
   12110:	mov	r0, #0
   12114:	bl	11128 <dcgettext@plt>
   12118:	ldr	r3, [pc, #148]	; 121b4 <__snprintf_chk@plt+0xe10>
   1211c:	ldr	r2, [pc, #152]	; 121bc <__snprintf_chk@plt+0xe18>
   12120:	mov	r5, r3
   12124:	mov	r1, r0
   12128:	mov	r0, #1
   1212c:	bl	112cc <__printf_chk@plt>
   12130:	ldr	r1, [pc, #148]	; 121cc <__snprintf_chk@plt+0xe28>
   12134:	mov	r2, #5
   12138:	mov	r0, #0
   1213c:	bl	11128 <dcgettext@plt>
   12140:	ldr	r3, [pc, #140]	; 121d4 <__snprintf_chk@plt+0xe30>
   12144:	mov	r1, r0
   12148:	b	120b4 <__snprintf_chk@plt+0xd10>
   1214c:	ldr	r6, [pc, #96]	; 121b4 <__snprintf_chk@plt+0xe10>
   12150:	mov	r5, r6
   12154:	mov	r2, #5
   12158:	ldr	r1, [pc, #120]	; 121d8 <__snprintf_chk@plt+0xe34>
   1215c:	mov	r0, #0
   12160:	bl	11128 <dcgettext@plt>
   12164:	ldr	r2, [pc, #72]	; 121b4 <__snprintf_chk@plt+0xe10>
   12168:	mov	r1, r0
   1216c:	mov	r0, #1
   12170:	bl	112cc <__printf_chk@plt>
   12174:	b	1206c <__snprintf_chk@plt+0xcc8>
   12178:	strdeq	r6, [r2], -r8
   1217c:	andeq	r7, r2, r8, lsr #6
   12180:	andeq	r5, r1, r0, ror #23
   12184:	andeq	r7, r2, r0, ror #6
   12188:	andeq	r5, r1, r8, lsl #24
   1218c:	andeq	r7, r2, ip, lsr #6
   12190:	andeq	r5, r1, ip, asr #24
   12194:	andeq	r5, r1, ip, lsl #25
   12198:	ldrdeq	r5, [r1], -r8
   1219c:			; <UNDEFINED> instruction: 0x00015fb4
   121a0:	strdeq	r5, [r1], -r8
   121a4:	andeq	r6, r1, r8, lsr #32
   121a8:	andeq	r6, r1, r0, rrx
   121ac:	andeq	r6, r1, r0, lsr #2
   121b0:			; <UNDEFINED> instruction: 0x00015ab4
   121b4:	ldrdeq	r5, [r1], -r8
   121b8:	andeq	r6, r1, r0, asr #5
   121bc:	ldrdeq	r6, [r1], -r8
   121c0:	andeq	r6, r1, r0, lsl #6
   121c4:	andeq	r6, r1, r0, lsl r3
   121c8:	andeq	r6, r1, ip, asr r3
   121cc:	andeq	r6, r1, ip, ror r3
   121d0:	andeq	r5, r1, r8, lsl #25
   121d4:	andeq	r6, r1, r0, asr #9
   121d8:	andeq	r6, r1, r4, lsl r3
   121dc:	push	{r4, r5, lr}
   121e0:	sub	sp, sp, #28
   121e4:	ldr	r4, [pc, #316]	; 12328 <__snprintf_chk@plt+0xf84>
   121e8:	ldr	r3, [pc, #316]	; 1232c <__snprintf_chk@plt+0xf88>
   121ec:	add	r2, sp, #8
   121f0:	ldr	ip, [r4]
   121f4:	add	r1, sp, #4
   121f8:	str	ip, [sp, #20]
   121fc:	mov	r5, r0
   12200:	bl	151a0 <__snprintf_chk@plt+0x3dfc>
   12204:	cmp	r0, #0
   12208:	bne	1221c <__snprintf_chk@plt+0xe78>
   1220c:	bl	11290 <__errno_location@plt>
   12210:	ldr	r3, [r0]
   12214:	cmp	r3, #34	; 0x22
   12218:	bne	122b8 <__snprintf_chk@plt+0xf14>
   1221c:	vldr	d0, [sp, #8]
   12220:	vcmpe.f64	d0, #0.0
   12224:	vmrs	APSR_nzcv, fpscr
   12228:	blt	122b8 <__snprintf_chk@plt+0xf14>
   1222c:	ldr	r2, [sp, #4]
   12230:	ldrb	r3, [r2]
   12234:	cmp	r3, #0
   12238:	beq	122a0 <__snprintf_chk@plt+0xefc>
   1223c:	ldrb	r2, [r2, #1]
   12240:	cmp	r2, #0
   12244:	bne	122b8 <__snprintf_chk@plt+0xf14>
   12248:	sub	r3, r3, #100	; 0x64
   1224c:	cmp	r3, #15
   12250:	ldrls	pc, [pc, r3, lsl #2]
   12254:	b	122b8 <__snprintf_chk@plt+0xf14>
   12258:	strdeq	r2, [r1], -ip
   1225c:			; <UNDEFINED> instruction: 0x000122b8
   12260:			; <UNDEFINED> instruction: 0x000122b8
   12264:			; <UNDEFINED> instruction: 0x000122b8
   12268:	muleq	r1, r8, r2
   1226c:			; <UNDEFINED> instruction: 0x000122b8
   12270:			; <UNDEFINED> instruction: 0x000122b8
   12274:			; <UNDEFINED> instruction: 0x000122b8
   12278:			; <UNDEFINED> instruction: 0x000122b8
   1227c:	strdeq	r2, [r1], -r0
   12280:			; <UNDEFINED> instruction: 0x000122b8
   12284:			; <UNDEFINED> instruction: 0x000122b8
   12288:			; <UNDEFINED> instruction: 0x000122b8
   1228c:			; <UNDEFINED> instruction: 0x000122b8
   12290:			; <UNDEFINED> instruction: 0x000122b8
   12294:	andeq	r2, r1, r0, lsr #5
   12298:	vldr	d7, [pc, #112]	; 12310 <__snprintf_chk@plt+0xf6c>
   1229c:	vmul.f64	d0, d0, d7
   122a0:	ldr	r2, [sp, #20]
   122a4:	ldr	r3, [r4]
   122a8:	cmp	r2, r3
   122ac:	bne	12308 <__snprintf_chk@plt+0xf64>
   122b0:	add	sp, sp, #28
   122b4:	pop	{r4, r5, pc}
   122b8:	mov	r2, #5
   122bc:	ldr	r1, [pc, #108]	; 12330 <__snprintf_chk@plt+0xf8c>
   122c0:	mov	r0, #0
   122c4:	bl	11128 <dcgettext@plt>
   122c8:	mov	r4, r0
   122cc:	mov	r0, r5
   122d0:	bl	149a8 <__snprintf_chk@plt+0x3604>
   122d4:	mov	r1, #0
   122d8:	mov	r2, r4
   122dc:	mov	r3, r0
   122e0:	mov	r0, r1
   122e4:	bl	111e8 <error@plt>
   122e8:	mov	r0, #125	; 0x7d
   122ec:	bl	11e6c <__snprintf_chk@plt+0xac8>
   122f0:	vldr	d7, [pc, #32]	; 12318 <__snprintf_chk@plt+0xf74>
   122f4:	vmul.f64	d0, d0, d7
   122f8:	b	122a0 <__snprintf_chk@plt+0xefc>
   122fc:	vldr	d7, [pc, #28]	; 12320 <__snprintf_chk@plt+0xf7c>
   12300:	vmul.f64	d0, d0, d7
   12304:	b	122a0 <__snprintf_chk@plt+0xefc>
   12308:	bl	11134 <__stack_chk_fail@plt>
   1230c:	nop			; (mov r0, r0)
   12310:	andeq	r0, r0, r0
   12314:	adcmi	r2, ip, r0
   12318:	andeq	r0, r0, r0
   1231c:	submi	r0, lr, r0
   12320:	andeq	r0, r0, r0
   12324:	rscsmi	r1, r5, r0, lsl #16
   12328:	strdeq	r6, [r2], -r8
   1232c:	andeq	r2, r1, r0, lsl #10
   12330:			; <UNDEFINED> instruction: 0x000163b0
   12334:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12338:	sub	sp, sp, #16
   1233c:	ldr	r8, [pc, #432]	; 124f4 <__snprintf_chk@plt+0x1150>
   12340:	ldrb	r3, [r0]
   12344:	mov	r7, r0
   12348:	ldr	r2, [r8]
   1234c:	sub	r3, r3, #48	; 0x30
   12350:	cmp	r3, #9
   12354:	mov	r9, r1
   12358:	str	r2, [sp, #12]
   1235c:	bhi	123c8 <__snprintf_chk@plt+0x1024>
   12360:	bl	11290 <__errno_location@plt>
   12364:	mov	r3, #0
   12368:	mov	r2, #10
   1236c:	add	r1, sp, #8
   12370:	str	r3, [r0]
   12374:	mov	r4, r0
   12378:	mov	r0, r7
   1237c:	bl	110b0 <strtol@plt>
   12380:	ldr	r3, [sp, #8]
   12384:	cmp	r3, r7
   12388:	beq	12480 <__snprintf_chk@plt+0x10dc>
   1238c:	ldrb	r3, [r3]
   12390:	cmp	r3, #0
   12394:	bne	12480 <__snprintf_chk@plt+0x10dc>
   12398:	ldr	r3, [r4]
   1239c:	cmp	r3, #0
   123a0:	bne	12480 <__snprintf_chk@plt+0x10dc>
   123a4:	cmn	r0, #1
   123a8:	streq	r0, [sp, #4]
   123ac:	beq	12488 <__snprintf_chk@plt+0x10e4>
   123b0:	cmp	r0, #254	; 0xfe
   123b4:	movgt	r4, #255	; 0xff
   123b8:	movle	r4, #127	; 0x7f
   123bc:	and	r4, r4, r0
   123c0:	str	r4, [sp, #4]
   123c4:	b	12430 <__snprintf_chk@plt+0x108c>
   123c8:	bl	15144 <__snprintf_chk@plt+0x3da0>
   123cc:	ldrb	r4, [r0]
   123d0:	mov	sl, r0
   123d4:	cmp	r4, #0
   123d8:	movne	r5, r0
   123dc:	ldrne	r6, [pc, #276]	; 124f8 <__snprintf_chk@plt+0x1154>
   123e0:	beq	12408 <__snprintf_chk@plt+0x1064>
   123e4:	mov	r1, r4
   123e8:	mov	r0, r6
   123ec:	bl	11284 <strchr@plt>
   123f0:	cmp	r0, #0
   123f4:	subne	r4, r4, #32
   123f8:	strbne	r4, [r5]
   123fc:	ldrb	r4, [r5, #1]!
   12400:	cmp	r4, #0
   12404:	bne	123e4 <__snprintf_chk@plt+0x1040>
   12408:	add	r1, sp, #4
   1240c:	mov	r0, sl
   12410:	bl	152ec <__snprintf_chk@plt+0x3f48>
   12414:	cmp	r0, #0
   12418:	bne	12460 <__snprintf_chk@plt+0x10bc>
   1241c:	ldr	r4, [sp, #4]
   12420:	mov	r0, sl
   12424:	bl	110d4 <free@plt>
   12428:	cmp	r4, #0
   1242c:	blt	12488 <__snprintf_chk@plt+0x10e4>
   12430:	mov	r1, r9
   12434:	mov	r0, r4
   12438:	bl	1548c <__snprintf_chk@plt+0x40e8>
   1243c:	cmp	r0, #0
   12440:	bne	12488 <__snprintf_chk@plt+0x10e4>
   12444:	ldr	r0, [sp, #4]
   12448:	ldr	r2, [sp, #12]
   1244c:	ldr	r3, [r8]
   12450:	cmp	r2, r3
   12454:	bne	124f0 <__snprintf_chk@plt+0x114c>
   12458:	add	sp, sp, #16
   1245c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12460:	ldrb	r3, [sl]
   12464:	cmp	r3, #83	; 0x53
   12468:	beq	124c0 <__snprintf_chk@plt+0x111c>
   1246c:	mvn	r3, #0
   12470:	mov	r0, sl
   12474:	str	r3, [sp, #4]
   12478:	bl	110d4 <free@plt>
   1247c:	b	12488 <__snprintf_chk@plt+0x10e4>
   12480:	mvn	r3, #0
   12484:	str	r3, [sp, #4]
   12488:	mov	r2, #5
   1248c:	ldr	r1, [pc, #104]	; 124fc <__snprintf_chk@plt+0x1158>
   12490:	mov	r0, #0
   12494:	bl	11128 <dcgettext@plt>
   12498:	mov	r4, r0
   1249c:	mov	r0, r7
   124a0:	bl	149a8 <__snprintf_chk@plt+0x3604>
   124a4:	mov	r1, #0
   124a8:	mov	r2, r4
   124ac:	mov	r3, r0
   124b0:	mov	r0, r1
   124b4:	bl	111e8 <error@plt>
   124b8:	mvn	r0, #0
   124bc:	b	12448 <__snprintf_chk@plt+0x10a4>
   124c0:	ldrb	r3, [sl, #1]
   124c4:	cmp	r3, #73	; 0x49
   124c8:	bne	1246c <__snprintf_chk@plt+0x10c8>
   124cc:	ldrb	r3, [sl, #2]
   124d0:	cmp	r3, #71	; 0x47
   124d4:	bne	1246c <__snprintf_chk@plt+0x10c8>
   124d8:	add	r1, sp, #4
   124dc:	add	r0, sl, #3
   124e0:	bl	152ec <__snprintf_chk@plt+0x3f48>
   124e4:	cmp	r0, #0
   124e8:	bne	1246c <__snprintf_chk@plt+0x10c8>
   124ec:	b	1241c <__snprintf_chk@plt+0x1078>
   124f0:	bl	11134 <__stack_chk_fail@plt>
   124f4:	strdeq	r6, [r2], -r8
   124f8:	andeq	r6, r1, r4, ror #10
   124fc:	andeq	r6, r1, r0, lsl #11
   12500:	push	{r4, r5, r6, lr}
   12504:	mov	r6, r0
   12508:	ldr	r4, [pc, #96]	; 12570 <__snprintf_chk@plt+0x11cc>
   1250c:	mov	r5, r1
   12510:	ldr	r2, [r4]
   12514:	cmp	r2, #0
   12518:	beq	1254c <__snprintf_chk@plt+0x11a8>
   1251c:	ldr	r2, [r4]
   12520:	cmp	r2, #0
   12524:	beq	12538 <__snprintf_chk@plt+0x1194>
   12528:	mov	r1, r5
   1252c:	mov	r0, r6
   12530:	pop	{r4, r5, r6, lr}
   12534:	b	11314 <strtod_l@plt>
   12538:	cmp	r5, #0
   1253c:	beq	12560 <__snprintf_chk@plt+0x11bc>
   12540:	str	r6, [r5]
   12544:	vldr	d0, [pc, #28]	; 12568 <__snprintf_chk@plt+0x11c4>
   12548:	pop	{r4, r5, r6, pc}
   1254c:	ldr	r1, [pc, #32]	; 12574 <__snprintf_chk@plt+0x11d0>
   12550:	ldr	r0, [pc, #32]	; 12578 <__snprintf_chk@plt+0x11d4>
   12554:	bl	1135c <newlocale@plt>
   12558:	str	r0, [r4]
   1255c:	b	1251c <__snprintf_chk@plt+0x1178>
   12560:	vldr	d0, [pc]	; 12568 <__snprintf_chk@plt+0x11c4>
   12564:	pop	{r4, r5, r6, pc}
	...
   12570:	andeq	r7, r2, r4, asr r3
   12574:	muleq	r1, ip, r5
   12578:			; <UNDEFINED> instruction: 0x00001fbf
   1257c:	ldr	r3, [pc, #4]	; 12588 <__snprintf_chk@plt+0x11e4>
   12580:	str	r0, [r3]
   12584:	bx	lr
   12588:	andeq	r7, r2, r8, asr r3
   1258c:	ldr	r3, [pc, #4]	; 12598 <__snprintf_chk@plt+0x11f4>
   12590:	strb	r0, [r3, #4]
   12594:	bx	lr
   12598:	andeq	r7, r2, r8, asr r3
   1259c:	ldr	r3, [pc, #180]	; 12658 <__snprintf_chk@plt+0x12b4>
   125a0:	push	{r4, r5, r6, lr}
   125a4:	sub	sp, sp, #8
   125a8:	ldr	r0, [r3]
   125ac:	bl	1557c <__snprintf_chk@plt+0x41d8>
   125b0:	cmp	r0, #0
   125b4:	beq	125dc <__snprintf_chk@plt+0x1238>
   125b8:	bl	11290 <__errno_location@plt>
   125bc:	ldr	r5, [pc, #152]	; 1265c <__snprintf_chk@plt+0x12b8>
   125c0:	ldrb	r3, [r5, #4]
   125c4:	cmp	r3, #0
   125c8:	mov	r4, r0
   125cc:	beq	125f8 <__snprintf_chk@plt+0x1254>
   125d0:	ldr	r3, [r0]
   125d4:	cmp	r3, #32
   125d8:	bne	125f8 <__snprintf_chk@plt+0x1254>
   125dc:	ldr	r3, [pc, #124]	; 12660 <__snprintf_chk@plt+0x12bc>
   125e0:	ldr	r0, [r3]
   125e4:	bl	1557c <__snprintf_chk@plt+0x41d8>
   125e8:	cmp	r0, #0
   125ec:	bne	12638 <__snprintf_chk@plt+0x1294>
   125f0:	add	sp, sp, #8
   125f4:	pop	{r4, r5, r6, pc}
   125f8:	mov	r2, #5
   125fc:	ldr	r1, [pc, #96]	; 12664 <__snprintf_chk@plt+0x12c0>
   12600:	mov	r0, #0
   12604:	bl	11128 <dcgettext@plt>
   12608:	mov	r6, r0
   1260c:	ldr	r0, [r5]
   12610:	cmp	r0, #0
   12614:	beq	12644 <__snprintf_chk@plt+0x12a0>
   12618:	ldr	r4, [r4]
   1261c:	bl	147c8 <__snprintf_chk@plt+0x3424>
   12620:	mov	r1, r4
   12624:	str	r6, [sp]
   12628:	ldr	r2, [pc, #56]	; 12668 <__snprintf_chk@plt+0x12c4>
   1262c:	mov	r3, r0
   12630:	mov	r0, #0
   12634:	bl	111e8 <error@plt>
   12638:	ldr	r3, [pc, #44]	; 1266c <__snprintf_chk@plt+0x12c8>
   1263c:	ldr	r0, [r3]
   12640:	bl	110e0 <_exit@plt>
   12644:	mov	r3, r6
   12648:	ldr	r1, [r4]
   1264c:	ldr	r2, [pc, #28]	; 12670 <__snprintf_chk@plt+0x12cc>
   12650:	bl	111e8 <error@plt>
   12654:	b	12638 <__snprintf_chk@plt+0x1294>
   12658:	andeq	r7, r2, ip, lsr #6
   1265c:	andeq	r7, r2, r8, asr r3
   12660:	andeq	r7, r2, r8, lsr #6
   12664:	andeq	r6, r1, r0, lsr #11
   12668:	andeq	r6, r1, ip, lsr #11
   1266c:	andeq	r7, r2, r0, lsr r1
   12670:			; <UNDEFINED> instruction: 0x000165b0
   12674:	andeq	r0, r0, r0
   12678:	vldr	d7, [pc, #160]	; 12720 <__snprintf_chk@plt+0x137c>
   1267c:	vcmpe.f64	d0, d7
   12680:	vmrs	APSR_nzcv, fpscr
   12684:	ble	12710 <__snprintf_chk@plt+0x136c>
   12688:	vldr	d7, [pc, #152]	; 12728 <__snprintf_chk@plt+0x1384>
   1268c:	vcmpe.f64	d0, d7
   12690:	vmrs	APSR_nzcv, fpscr
   12694:	bmi	126a8 <__snprintf_chk@plt+0x1304>
   12698:	ldr	r3, [pc, #152]	; 12738 <__snprintf_chk@plt+0x1394>
   1269c:	mvn	r2, #-2147483648	; 0x80000000
   126a0:	strd	r2, [r0]
   126a4:	bx	lr
   126a8:	vcvt.s32.f64	s15, d0
   126ac:	vldr	d6, [pc, #124]	; 12730 <__snprintf_chk@plt+0x138c>
   126b0:	ldr	r2, [pc, #132]	; 1273c <__snprintf_chk@plt+0x1398>
   126b4:	ldr	ip, [pc, #132]	; 12740 <__snprintf_chk@plt+0x139c>
   126b8:	vcvt.f64.s32	d5, s15
   126bc:	vsub.f64	d0, d0, d5
   126c0:	vmul.f64	d0, d0, d6
   126c4:	vcvt.s32.f64	s14, d0
   126c8:	vcvt.f64.s32	d6, s14
   126cc:	vmov	r1, s14
   126d0:	vcmpe.f64	d6, d0
   126d4:	vmrs	APSR_nzcv, fpscr
   126d8:	movmi	r3, #1
   126dc:	movpl	r3, #0
   126e0:	add	r3, r3, r1
   126e4:	smull	r2, r1, r2, r3
   126e8:	asr	r2, r3, #31
   126ec:	rsb	r2, r2, r1, asr #28
   126f0:	vmov	r1, s15
   126f4:	add	r1, r2, r1
   126f8:	mul	r2, ip, r2
   126fc:	subs	r3, r3, r2
   12700:	submi	r1, r1, #1
   12704:	addmi	r3, r3, ip
   12708:	stm	r0, {r1, r3}
   1270c:	bx	lr
   12710:	mov	r2, #-2147483648	; 0x80000000
   12714:	mov	r3, #0
   12718:	strd	r2, [r0]
   1271c:	bx	lr
   12720:	andeq	r0, r0, r0
   12724:	mvngt	r0, r0
   12728:	andeq	r0, r0, r0
   1272c:	mvnmi	r0, r0
   12730:	andeq	r0, r0, r0
   12734:	bicmi	ip, sp, r5, ror #26
   12738:	blcc	fe6c4f3c <optarg@@GLIBC_2.4+0xfe69dc0c>
   1273c:	ldrtmi	r2, [r8], #4001	; 0xfa1
   12740:	blcc	fe6c4f48 <optarg@@GLIBC_2.4+0xfe69dc18>
   12744:	push	{r4, r5, r6, lr}
   12748:	subs	r4, r0, #0
   1274c:	beq	127c0 <__snprintf_chk@plt+0x141c>
   12750:	mov	r1, #47	; 0x2f
   12754:	bl	11344 <strrchr@plt>
   12758:	subs	r5, r0, #0
   1275c:	beq	127ac <__snprintf_chk@plt+0x1408>
   12760:	add	r6, r5, #1
   12764:	sub	r3, r6, r4
   12768:	cmp	r3, #6
   1276c:	ble	127ac <__snprintf_chk@plt+0x1408>
   12770:	mov	r2, #7
   12774:	ldr	r1, [pc, #96]	; 127dc <__snprintf_chk@plt+0x1438>
   12778:	sub	r0, r5, #6
   1277c:	bl	1138c <strncmp@plt>
   12780:	cmp	r0, #0
   12784:	bne	127ac <__snprintf_chk@plt+0x1408>
   12788:	mov	r2, #3
   1278c:	ldr	r1, [pc, #76]	; 127e0 <__snprintf_chk@plt+0x143c>
   12790:	mov	r0, r6
   12794:	bl	1138c <strncmp@plt>
   12798:	cmp	r0, #0
   1279c:	movne	r4, r6
   127a0:	ldreq	r3, [pc, #60]	; 127e4 <__snprintf_chk@plt+0x1440>
   127a4:	addeq	r4, r5, #4
   127a8:	streq	r4, [r3]
   127ac:	ldr	r2, [pc, #52]	; 127e8 <__snprintf_chk@plt+0x1444>
   127b0:	ldr	r3, [pc, #52]	; 127ec <__snprintf_chk@plt+0x1448>
   127b4:	str	r4, [r2]
   127b8:	str	r4, [r3]
   127bc:	pop	{r4, r5, r6, pc}
   127c0:	ldr	r3, [pc, #40]	; 127f0 <__snprintf_chk@plt+0x144c>
   127c4:	mov	r2, #55	; 0x37
   127c8:	mov	r1, #1
   127cc:	ldr	r3, [r3]
   127d0:	ldr	r0, [pc, #28]	; 127f4 <__snprintf_chk@plt+0x1450>
   127d4:	bl	11194 <fwrite@plt>
   127d8:	bl	11398 <abort@plt>
   127dc:	andeq	r6, r1, ip, ror #11
   127e0:	strdeq	r6, [r1], -r4
   127e4:	andeq	r7, r2, r8, lsl r3
   127e8:	andeq	r7, r2, r0, ror #6
   127ec:	andeq	r7, r2, ip, lsl r3
   127f0:	andeq	r7, r2, r8, lsr #6
   127f4:			; <UNDEFINED> instruction: 0x000165b4
   127f8:	push	{r4, lr}
   127fc:	mov	r2, #48	; 0x30
   12800:	mov	r4, r1
   12804:	mov	r1, #0
   12808:	bl	112b4 <memset@plt>
   1280c:	cmp	r4, #10
   12810:	beq	1281c <__snprintf_chk@plt+0x1478>
   12814:	str	r4, [r0]
   12818:	pop	{r4, pc}
   1281c:	bl	11398 <abort@plt>
   12820:	push	{r4, r5, r6, lr}
   12824:	mov	r2, #5
   12828:	mov	r5, r0
   1282c:	mov	r6, r1
   12830:	mov	r1, r0
   12834:	mov	r0, #0
   12838:	bl	11128 <dcgettext@plt>
   1283c:	cmp	r5, r0
   12840:	mov	r4, r0
   12844:	beq	12850 <__snprintf_chk@plt+0x14ac>
   12848:	mov	r0, r4
   1284c:	pop	{r4, r5, r6, pc}
   12850:	bl	1563c <__snprintf_chk@plt+0x4298>
   12854:	ldrb	r3, [r0]
   12858:	bic	r3, r3, #32
   1285c:	cmp	r3, #85	; 0x55
   12860:	bne	128c0 <__snprintf_chk@plt+0x151c>
   12864:	ldrb	r3, [r0, #1]
   12868:	bic	r3, r3, #32
   1286c:	cmp	r3, #84	; 0x54
   12870:	bne	12938 <__snprintf_chk@plt+0x1594>
   12874:	ldrb	r3, [r0, #2]
   12878:	bic	r3, r3, #32
   1287c:	cmp	r3, #70	; 0x46
   12880:	bne	12938 <__snprintf_chk@plt+0x1594>
   12884:	ldrb	r3, [r0, #3]
   12888:	cmp	r3, #45	; 0x2d
   1288c:	bne	12938 <__snprintf_chk@plt+0x1594>
   12890:	ldrb	r3, [r0, #4]
   12894:	cmp	r3, #56	; 0x38
   12898:	bne	12938 <__snprintf_chk@plt+0x1594>
   1289c:	ldrb	r3, [r0, #5]
   128a0:	cmp	r3, #0
   128a4:	bne	12938 <__snprintf_chk@plt+0x1594>
   128a8:	ldrb	r2, [r4]
   128ac:	ldr	r3, [pc, #156]	; 12950 <__snprintf_chk@plt+0x15ac>
   128b0:	ldr	r4, [pc, #156]	; 12954 <__snprintf_chk@plt+0x15b0>
   128b4:	cmp	r2, #96	; 0x60
   128b8:	movne	r4, r3
   128bc:	b	12848 <__snprintf_chk@plt+0x14a4>
   128c0:	cmp	r3, #71	; 0x47
   128c4:	bne	12938 <__snprintf_chk@plt+0x1594>
   128c8:	ldrb	r3, [r0, #1]
   128cc:	bic	r3, r3, #32
   128d0:	cmp	r3, #66	; 0x42
   128d4:	bne	12938 <__snprintf_chk@plt+0x1594>
   128d8:	ldrb	r3, [r0, #2]
   128dc:	cmp	r3, #49	; 0x31
   128e0:	bne	12938 <__snprintf_chk@plt+0x1594>
   128e4:	ldrb	r3, [r0, #3]
   128e8:	cmp	r3, #56	; 0x38
   128ec:	bne	12938 <__snprintf_chk@plt+0x1594>
   128f0:	ldrb	r3, [r0, #4]
   128f4:	cmp	r3, #48	; 0x30
   128f8:	bne	12938 <__snprintf_chk@plt+0x1594>
   128fc:	ldrb	r3, [r0, #5]
   12900:	cmp	r3, #51	; 0x33
   12904:	bne	12938 <__snprintf_chk@plt+0x1594>
   12908:	ldrb	r3, [r0, #6]
   1290c:	cmp	r3, #48	; 0x30
   12910:	bne	12938 <__snprintf_chk@plt+0x1594>
   12914:	ldrb	r3, [r0, #7]
   12918:	cmp	r3, #0
   1291c:	bne	12938 <__snprintf_chk@plt+0x1594>
   12920:	ldrb	r2, [r4]
   12924:	ldr	r3, [pc, #44]	; 12958 <__snprintf_chk@plt+0x15b4>
   12928:	ldr	r4, [pc, #44]	; 1295c <__snprintf_chk@plt+0x15b8>
   1292c:	cmp	r2, #96	; 0x60
   12930:	movne	r4, r3
   12934:	b	12848 <__snprintf_chk@plt+0x14a4>
   12938:	ldr	r3, [pc, #32]	; 12960 <__snprintf_chk@plt+0x15bc>
   1293c:	ldr	r4, [pc, #32]	; 12964 <__snprintf_chk@plt+0x15c0>
   12940:	cmp	r6, #9
   12944:	movne	r4, r3
   12948:	mov	r0, r4
   1294c:	pop	{r4, r5, r6, pc}
   12950:	andeq	r6, r1, r0, asr r6
   12954:	andeq	r6, r1, ip, asr r6
   12958:	andeq	r6, r1, r4, asr r6
   1295c:	andeq	r6, r1, r8, asr r6
   12960:	andeq	r6, r1, r0, ror #12
   12964:	andeq	r6, r1, ip, asr #12
   12968:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1296c:	sub	sp, sp, #124	; 0x7c
   12970:	ldr	ip, [pc, #3576]	; 13770 <__snprintf_chk@plt+0x23cc>
   12974:	str	r3, [sp, #24]
   12978:	ldr	r3, [sp, #168]	; 0xa8
   1297c:	ldr	ip, [ip]
   12980:	str	r3, [sp, #56]	; 0x38
   12984:	ldr	r3, [sp, #172]	; 0xac
   12988:	ldr	r8, [sp, #160]	; 0xa0
   1298c:	str	r3, [sp, #80]	; 0x50
   12990:	ldr	r3, [sp, #176]	; 0xb0
   12994:	mov	fp, r0
   12998:	str	r3, [sp, #76]	; 0x4c
   1299c:	mov	sl, r1
   129a0:	str	r2, [sp, #36]	; 0x24
   129a4:	str	ip, [sp, #116]	; 0x74
   129a8:	bl	111b8 <__ctype_get_mb_cur_max@plt>
   129ac:	ldr	r3, [sp, #164]	; 0xa4
   129b0:	ands	r4, r3, #2
   129b4:	movne	r3, #1
   129b8:	moveq	r3, #0
   129bc:	str	r3, [sp, #32]
   129c0:	str	r0, [sp, #64]	; 0x40
   129c4:	cmp	r8, #10
   129c8:	ldrls	pc, [pc, r8, lsl #2]
   129cc:	b	1417c <__snprintf_chk@plt+0x2dd8>
   129d0:	andeq	r2, r1, r4, asr #27
   129d4:	andeq	r2, r1, ip, asr lr
   129d8:	andeq	r3, r1, ip, asr r4
   129dc:	andeq	r2, r1, ip, ror lr
   129e0:	andeq	r2, r1, r0, lsr sp
   129e4:	andeq	r2, r1, r8, ror sp
   129e8:	strdeq	r2, [r1], -r4
   129ec:	andeq	r2, r1, ip, lsr #28
   129f0:	strdeq	r2, [r1], -ip
   129f4:	strdeq	r2, [r1], -ip
   129f8:	strdeq	r2, [r1], -ip
   129fc:	cmp	r8, #10
   12a00:	beq	12a24 <__snprintf_chk@plt+0x1680>
   12a04:	mov	r1, r8
   12a08:	ldr	r0, [pc, #3428]	; 13774 <__snprintf_chk@plt+0x23d0>
   12a0c:	bl	12820 <__snprintf_chk@plt+0x147c>
   12a10:	mov	r1, r8
   12a14:	str	r0, [sp, #80]	; 0x50
   12a18:	ldr	r0, [pc, #3420]	; 1377c <__snprintf_chk@plt+0x23d8>
   12a1c:	bl	12820 <__snprintf_chk@plt+0x147c>
   12a20:	str	r0, [sp, #76]	; 0x4c
   12a24:	cmp	r4, #0
   12a28:	movne	r4, #0
   12a2c:	beq	13e3c <__snprintf_chk@plt+0x2a98>
   12a30:	ldr	r7, [sp, #76]	; 0x4c
   12a34:	mov	r5, #0
   12a38:	mov	r6, #1
   12a3c:	mov	r0, r7
   12a40:	str	r6, [sp, #40]	; 0x28
   12a44:	str	r5, [sp, #68]	; 0x44
   12a48:	bl	1126c <strlen@plt>
   12a4c:	str	r6, [sp, #28]
   12a50:	str	r5, [sp, #44]	; 0x2c
   12a54:	str	r5, [sp, #72]	; 0x48
   12a58:	str	r7, [sp, #60]	; 0x3c
   12a5c:	str	r0, [sp, #52]	; 0x34
   12a60:	str	r8, [sp, #160]	; 0xa0
   12a64:	mov	r8, fp
   12a68:	ldr	fp, [sp, #160]	; 0xa0
   12a6c:	mov	r9, #0
   12a70:	ldr	r3, [sp, #24]
   12a74:	cmn	r3, #1
   12a78:	beq	12fe0 <__snprintf_chk@plt+0x1c3c>
   12a7c:	ldr	r3, [sp, #24]
   12a80:	subs	r6, r3, r9
   12a84:	movne	r6, #1
   12a88:	cmp	r6, #0
   12a8c:	beq	12ff8 <__snprintf_chk@plt+0x1c54>
   12a90:	ldr	r7, [sp, #28]
   12a94:	ldr	r0, [sp, #36]	; 0x24
   12a98:	cmp	fp, #2
   12a9c:	moveq	r7, #0
   12aa0:	andne	r7, r7, #1
   12aa4:	add	r3, r0, r9
   12aa8:	cmp	r7, #0
   12aac:	str	r3, [sp, #48]	; 0x30
   12ab0:	beq	1349c <__snprintf_chk@plt+0x20f8>
   12ab4:	ldr	r2, [sp, #52]	; 0x34
   12ab8:	cmp	r2, #0
   12abc:	beq	13780 <__snprintf_chk@plt+0x23dc>
   12ac0:	ldr	r1, [sp, #24]
   12ac4:	cmp	r2, #1
   12ac8:	mov	r3, r2
   12acc:	movls	r3, #0
   12ad0:	movhi	r3, #1
   12ad4:	cmn	r1, #1
   12ad8:	movne	r3, #0
   12adc:	cmp	r3, #0
   12ae0:	add	r5, r9, r2
   12ae4:	beq	12af0 <__snprintf_chk@plt+0x174c>
   12ae8:	bl	1126c <strlen@plt>
   12aec:	str	r0, [sp, #24]
   12af0:	ldr	r3, [sp, #24]
   12af4:	cmp	r5, r3
   12af8:	bhi	13780 <__snprintf_chk@plt+0x23dc>
   12afc:	ldr	r2, [sp, #52]	; 0x34
   12b00:	ldr	r1, [sp, #60]	; 0x3c
   12b04:	ldr	r0, [sp, #48]	; 0x30
   12b08:	bl	1111c <memcmp@plt>
   12b0c:	cmp	r0, #0
   12b10:	bne	13780 <__snprintf_chk@plt+0x23dc>
   12b14:	ldr	r3, [sp, #32]
   12b18:	cmp	r3, #0
   12b1c:	bne	1403c <__snprintf_chk@plt+0x2c98>
   12b20:	ldr	r3, [sp, #48]	; 0x30
   12b24:	ldrb	r5, [r3]
   12b28:	cmp	r5, #126	; 0x7e
   12b2c:	ldrls	pc, [pc, r5, lsl #2]
   12b30:	b	13400 <__snprintf_chk@plt+0x205c>
   12b34:	andeq	r3, r1, ip, ror #5
   12b38:	andeq	r3, r1, r0, lsl #8
   12b3c:	andeq	r3, r1, r0, lsl #8
   12b40:	andeq	r3, r1, r0, lsl #8
   12b44:	andeq	r3, r1, r0, lsl #8
   12b48:	andeq	r3, r1, r0, lsl #8
   12b4c:	andeq	r3, r1, r0, lsl #8
   12b50:			; <UNDEFINED> instruction: 0x000133b8
   12b54:	andeq	r3, r1, r8, lsr #7
   12b58:	andeq	r3, r1, r8, lsr #5
   12b5c:	andeq	r3, r1, r0, ror r2
   12b60:	andeq	r3, r1, r8, asr #5
   12b64:			; <UNDEFINED> instruction: 0x000132b0
   12b68:	andeq	r3, r1, r0, ror #3
   12b6c:	andeq	r3, r1, r0, lsl #8
   12b70:	andeq	r3, r1, r0, lsl #8
   12b74:	andeq	r3, r1, r0, lsl #8
   12b78:	andeq	r3, r1, r0, lsl #8
   12b7c:	andeq	r3, r1, r0, lsl #8
   12b80:	andeq	r3, r1, r0, lsl #8
   12b84:	andeq	r3, r1, r0, lsl #8
   12b88:	andeq	r3, r1, r0, lsl #8
   12b8c:	andeq	r3, r1, r0, lsl #8
   12b90:	andeq	r3, r1, r0, lsl #8
   12b94:	andeq	r3, r1, r0, lsl #8
   12b98:	andeq	r3, r1, r0, lsl #8
   12b9c:	andeq	r3, r1, r0, lsl #8
   12ba0:	andeq	r3, r1, r0, lsl #8
   12ba4:	andeq	r3, r1, r0, lsl #8
   12ba8:	andeq	r3, r1, r0, lsl #8
   12bac:	andeq	r3, r1, r0, lsl #8
   12bb0:	andeq	r3, r1, r0, lsl #8
   12bb4:	andeq	r3, r1, r0, asr #7
   12bb8:	ldrdeq	r3, [r1], -r4
   12bbc:	ldrdeq	r3, [r1], -r4
   12bc0:	ldrdeq	r3, [r1], -r8
   12bc4:	ldrdeq	r3, [r1], -r4
   12bc8:	strdeq	r3, [r1], -r4
   12bcc:	ldrdeq	r3, [r1], -r4
   12bd0:	andeq	r3, r1, r4, lsl r1
   12bd4:	ldrdeq	r3, [r1], -r4
   12bd8:	ldrdeq	r3, [r1], -r4
   12bdc:	ldrdeq	r3, [r1], -r4
   12be0:	strdeq	r3, [r1], -r4
   12be4:	strdeq	r3, [r1], -r4
   12be8:	strdeq	r3, [r1], -r4
   12bec:	strdeq	r3, [r1], -r4
   12bf0:	strdeq	r3, [r1], -r4
   12bf4:	strdeq	r3, [r1], -r4
   12bf8:	strdeq	r3, [r1], -r4
   12bfc:	strdeq	r3, [r1], -r4
   12c00:	strdeq	r3, [r1], -r4
   12c04:	strdeq	r3, [r1], -r4
   12c08:	strdeq	r3, [r1], -r4
   12c0c:	strdeq	r3, [r1], -r4
   12c10:	strdeq	r3, [r1], -r4
   12c14:	strdeq	r3, [r1], -r4
   12c18:	strdeq	r3, [r1], -r4
   12c1c:	strdeq	r3, [r1], -r4
   12c20:	ldrdeq	r3, [r1], -r4
   12c24:	ldrdeq	r3, [r1], -r4
   12c28:	ldrdeq	r3, [r1], -r4
   12c2c:	ldrdeq	r3, [r1], -r4
   12c30:	andeq	r3, r1, r8, ror #1
   12c34:	andeq	r3, r1, r0, lsl #8
   12c38:	strdeq	r3, [r1], -r4
   12c3c:	strdeq	r3, [r1], -r4
   12c40:	strdeq	r3, [r1], -r4
   12c44:	strdeq	r3, [r1], -r4
   12c48:	strdeq	r3, [r1], -r4
   12c4c:	strdeq	r3, [r1], -r4
   12c50:	strdeq	r3, [r1], -r4
   12c54:	strdeq	r3, [r1], -r4
   12c58:	strdeq	r3, [r1], -r4
   12c5c:	strdeq	r3, [r1], -r4
   12c60:	strdeq	r3, [r1], -r4
   12c64:	strdeq	r3, [r1], -r4
   12c68:	strdeq	r3, [r1], -r4
   12c6c:	strdeq	r3, [r1], -r4
   12c70:	strdeq	r3, [r1], -r4
   12c74:	strdeq	r3, [r1], -r4
   12c78:	strdeq	r3, [r1], -r4
   12c7c:	strdeq	r3, [r1], -r4
   12c80:	strdeq	r3, [r1], -r4
   12c84:	strdeq	r3, [r1], -r4
   12c88:	strdeq	r3, [r1], -r4
   12c8c:	strdeq	r3, [r1], -r4
   12c90:	strdeq	r3, [r1], -r4
   12c94:	strdeq	r3, [r1], -r4
   12c98:	strdeq	r3, [r1], -r4
   12c9c:	strdeq	r3, [r1], -r4
   12ca0:	ldrdeq	r3, [r1], -r4
   12ca4:	andeq	r3, r1, r0, lsr #1
   12ca8:	strdeq	r3, [r1], -r4
   12cac:	ldrdeq	r3, [r1], -r4
   12cb0:	strdeq	r3, [r1], -r4
   12cb4:	ldrdeq	r3, [r1], -r4
   12cb8:	strdeq	r3, [r1], -r4
   12cbc:	strdeq	r3, [r1], -r4
   12cc0:	strdeq	r3, [r1], -r4
   12cc4:	strdeq	r3, [r1], -r4
   12cc8:	strdeq	r3, [r1], -r4
   12ccc:	strdeq	r3, [r1], -r4
   12cd0:	strdeq	r3, [r1], -r4
   12cd4:	strdeq	r3, [r1], -r4
   12cd8:	strdeq	r3, [r1], -r4
   12cdc:	strdeq	r3, [r1], -r4
   12ce0:	strdeq	r3, [r1], -r4
   12ce4:	strdeq	r3, [r1], -r4
   12ce8:	strdeq	r3, [r1], -r4
   12cec:	strdeq	r3, [r1], -r4
   12cf0:	strdeq	r3, [r1], -r4
   12cf4:	strdeq	r3, [r1], -r4
   12cf8:	strdeq	r3, [r1], -r4
   12cfc:	strdeq	r3, [r1], -r4
   12d00:	strdeq	r3, [r1], -r4
   12d04:	strdeq	r3, [r1], -r4
   12d08:	strdeq	r3, [r1], -r4
   12d0c:	strdeq	r3, [r1], -r4
   12d10:	strdeq	r3, [r1], -r4
   12d14:	strdeq	r3, [r1], -r4
   12d18:	strdeq	r3, [r1], -r4
   12d1c:	strdeq	r3, [r1], -r4
   12d20:			; <UNDEFINED> instruction: 0x00012eb8
   12d24:	ldrdeq	r3, [r1], -r4
   12d28:			; <UNDEFINED> instruction: 0x00012eb8
   12d2c:	ldrdeq	r3, [r1], -r8
   12d30:	cmp	r4, #0
   12d34:	moveq	r3, #1
   12d38:	streq	r3, [sp, #28]
   12d3c:	beq	13468 <__snprintf_chk@plt+0x20c4>
   12d40:	mov	r3, #0
   12d44:	mov	r4, r3
   12d48:	mov	r2, #1
   12d4c:	str	r2, [sp, #40]	; 0x28
   12d50:	str	r3, [sp, #68]	; 0x44
   12d54:	str	r2, [sp, #32]
   12d58:	str	r2, [sp, #52]	; 0x34
   12d5c:	ldr	r3, [pc, #2584]	; 1377c <__snprintf_chk@plt+0x23d8>
   12d60:	str	r4, [sp, #44]	; 0x2c
   12d64:	str	r4, [sp, #72]	; 0x48
   12d68:	str	r4, [sp, #28]
   12d6c:	str	r3, [sp, #60]	; 0x3c
   12d70:	mov	r8, #2
   12d74:	b	12a60 <__snprintf_chk@plt+0x16bc>
   12d78:	cmp	r4, #0
   12d7c:	bne	14008 <__snprintf_chk@plt+0x2c64>
   12d80:	cmp	sl, #0
   12d84:	beq	13dc8 <__snprintf_chk@plt+0x2a24>
   12d88:	mov	r3, #34	; 0x22
   12d8c:	strb	r3, [fp]
   12d90:	ldr	r3, [pc, #2528]	; 13778 <__snprintf_chk@plt+0x23d4>
   12d94:	mov	r1, r4
   12d98:	mov	r2, #1
   12d9c:	str	r4, [sp, #68]	; 0x44
   12da0:	str	r2, [sp, #40]	; 0x28
   12da4:	mov	r4, r2
   12da8:	str	r1, [sp, #44]	; 0x2c
   12dac:	str	r1, [sp, #72]	; 0x48
   12db0:	str	r1, [sp, #32]
   12db4:	str	r2, [sp, #28]
   12db8:	str	r2, [sp, #52]	; 0x34
   12dbc:	str	r3, [sp, #60]	; 0x3c
   12dc0:	b	12a60 <__snprintf_chk@plt+0x16bc>
   12dc4:	mov	r3, #0
   12dc8:	str	r3, [sp, #68]	; 0x44
   12dcc:	str	r3, [sp, #44]	; 0x2c
   12dd0:	str	r3, [sp, #32]
   12dd4:	str	r3, [sp, #28]
   12dd8:	str	r3, [sp, #60]	; 0x3c
   12ddc:	mov	r3, #1
   12de0:	str	r8, [sp, #72]	; 0x48
   12de4:	str	r8, [sp, #52]	; 0x34
   12de8:	mov	r4, r8
   12dec:	str	r3, [sp, #40]	; 0x28
   12df0:	b	12a60 <__snprintf_chk@plt+0x16bc>
   12df4:	mov	r3, #1
   12df8:	str	r3, [sp, #40]	; 0x28
   12dfc:	str	r3, [sp, #32]
   12e00:	str	r3, [sp, #28]
   12e04:	str	r3, [sp, #52]	; 0x34
   12e08:	ldr	r3, [pc, #2408]	; 13778 <__snprintf_chk@plt+0x23d4>
   12e0c:	mov	r2, #0
   12e10:	mov	r4, r2
   12e14:	str	r2, [sp, #68]	; 0x44
   12e18:	str	r2, [sp, #44]	; 0x2c
   12e1c:	str	r2, [sp, #72]	; 0x48
   12e20:	str	r3, [sp, #60]	; 0x3c
   12e24:	mov	r8, #5
   12e28:	b	12a60 <__snprintf_chk@plt+0x16bc>
   12e2c:	mov	r3, #0
   12e30:	mov	r2, #1
   12e34:	str	r2, [sp, #40]	; 0x28
   12e38:	mov	r4, r3
   12e3c:	str	r3, [sp, #68]	; 0x44
   12e40:	str	r2, [sp, #28]
   12e44:	str	r3, [sp, #44]	; 0x2c
   12e48:	str	r3, [sp, #72]	; 0x48
   12e4c:	str	r3, [sp, #32]
   12e50:	str	r3, [sp, #52]	; 0x34
   12e54:	str	r3, [sp, #60]	; 0x3c
   12e58:	b	12a60 <__snprintf_chk@plt+0x16bc>
   12e5c:	mov	r2, #1
   12e60:	mov	r3, #0
   12e64:	str	r2, [sp, #40]	; 0x28
   12e68:	mov	r4, r3
   12e6c:	str	r3, [sp, #68]	; 0x44
   12e70:	str	r8, [sp, #52]	; 0x34
   12e74:	str	r2, [sp, #32]
   12e78:	b	12d5c <__snprintf_chk@plt+0x19b8>
   12e7c:	mov	r3, #1
   12e80:	str	r3, [sp, #40]	; 0x28
   12e84:	str	r3, [sp, #32]
   12e88:	str	r3, [sp, #28]
   12e8c:	str	r3, [sp, #52]	; 0x34
   12e90:	ldr	r3, [pc, #2276]	; 1377c <__snprintf_chk@plt+0x23d8>
   12e94:	mov	r2, #0
   12e98:	mov	r4, r2
   12e9c:	str	r2, [sp, #68]	; 0x44
   12ea0:	str	r2, [sp, #44]	; 0x2c
   12ea4:	str	r2, [sp, #72]	; 0x48
   12ea8:	str	r3, [sp, #60]	; 0x3c
   12eac:	mov	r8, #2
   12eb0:	b	12a60 <__snprintf_chk@plt+0x16bc>
   12eb4:	mov	r7, #0
   12eb8:	ldr	r3, [sp, #24]
   12ebc:	cmn	r3, #1
   12ec0:	beq	139fc <__snprintf_chk@plt+0x2658>
   12ec4:	ldr	r3, [sp, #24]
   12ec8:	subs	r3, r3, #1
   12ecc:	movne	r3, #1
   12ed0:	cmp	r3, #0
   12ed4:	sub	r2, fp, #2
   12ed8:	clz	r2, r2
   12edc:	lsr	r2, r2, #5
   12ee0:	bne	130dc <__snprintf_chk@plt+0x1d38>
   12ee4:	cmp	r9, #0
   12ee8:	bne	130dc <__snprintf_chk@plt+0x1d38>
   12eec:	ldr	r3, [sp, #32]
   12ef0:	tst	r3, r2
   12ef4:	bne	131fc <__snprintf_chk@plt+0x1e58>
   12ef8:	ldr	r3, [sp, #28]
   12efc:	eor	r3, r3, #1
   12f00:	orr	r3, r2, r3
   12f04:	ldr	r2, [sp, #32]
   12f08:	eor	r3, r3, #1
   12f0c:	orrs	r3, r2, r3
   12f10:	beq	12f40 <__snprintf_chk@plt+0x1b9c>
   12f14:	mov	r3, #0
   12f18:	ldr	r1, [sp, #56]	; 0x38
   12f1c:	cmp	r1, #0
   12f20:	beq	12f40 <__snprintf_chk@plt+0x1b9c>
   12f24:	lsr	r2, r5, #5
   12f28:	and	r0, r5, #31
   12f2c:	uxtb	r2, r2
   12f30:	ldr	r1, [r1, r2, lsl #2]
   12f34:	lsr	r2, r1, r0
   12f38:	tst	r2, #1
   12f3c:	bne	12f48 <__snprintf_chk@plt+0x1ba4>
   12f40:	cmp	r7, #0
   12f44:	beq	13198 <__snprintf_chk@plt+0x1df4>
   12f48:	sub	r2, fp, #2
   12f4c:	clz	r2, r2
   12f50:	lsr	r2, r2, #5
   12f54:	ldr	r3, [sp, #32]
   12f58:	cmp	r3, #0
   12f5c:	bne	13288 <__snprintf_chk@plt+0x1ee4>
   12f60:	ldr	r3, [sp, #44]	; 0x2c
   12f64:	eor	r3, r3, #1
   12f68:	ands	r3, r2, r3
   12f6c:	beq	12fa4 <__snprintf_chk@plt+0x1c00>
   12f70:	cmp	sl, r4
   12f74:	movhi	r2, #39	; 0x27
   12f78:	strbhi	r2, [r8, r4]
   12f7c:	add	r2, r4, #1
   12f80:	cmp	r2, sl
   12f84:	movcc	r1, #36	; 0x24
   12f88:	strbcc	r1, [r8, r2]
   12f8c:	add	r2, r4, #2
   12f90:	cmp	r2, sl
   12f94:	add	r4, r4, #3
   12f98:	movcc	r1, #39	; 0x27
   12f9c:	strbcc	r1, [r8, r2]
   12fa0:	str	r3, [sp, #44]	; 0x2c
   12fa4:	cmp	r4, sl
   12fa8:	movcc	r3, #92	; 0x5c
   12fac:	strbcc	r3, [r8, r4]
   12fb0:	add	r9, r9, #1
   12fb4:	add	r4, r4, #1
   12fb8:	cmp	r4, sl
   12fbc:	ldr	r3, [sp, #40]	; 0x28
   12fc0:	strbcc	r5, [r8, r4]
   12fc4:	cmp	r6, #0
   12fc8:	moveq	r3, #0
   12fcc:	str	r3, [sp, #40]	; 0x28
   12fd0:	ldr	r3, [sp, #24]
   12fd4:	add	r4, r4, #1
   12fd8:	cmn	r3, #1
   12fdc:	bne	12a7c <__snprintf_chk@plt+0x16d8>
   12fe0:	ldr	r3, [sp, #36]	; 0x24
   12fe4:	ldrb	r6, [r3, r9]
   12fe8:	adds	r6, r6, #0
   12fec:	movne	r6, #1
   12ff0:	cmp	r6, #0
   12ff4:	bne	12a90 <__snprintf_chk@plt+0x16ec>
   12ff8:	str	fp, [sp, #160]	; 0xa0
   12ffc:	mov	fp, r8
   13000:	ldr	r8, [sp, #160]	; 0xa0
   13004:	ldr	r1, [sp, #32]
   13008:	cmp	r4, #0
   1300c:	sub	r2, r8, #2
   13010:	clz	r2, r2
   13014:	lsr	r2, r2, #5
   13018:	andeq	r3, r2, r1
   1301c:	movne	r3, #0
   13020:	cmp	r3, #0
   13024:	bne	14110 <__snprintf_chk@plt+0x2d6c>
   13028:	eor	r3, r1, #1
   1302c:	ands	r2, r2, r3
   13030:	beq	1404c <__snprintf_chk@plt+0x2ca8>
   13034:	ldr	r3, [sp, #68]	; 0x44
   13038:	cmp	r3, #0
   1303c:	beq	14050 <__snprintf_chk@plt+0x2cac>
   13040:	ldr	r3, [sp, #40]	; 0x28
   13044:	cmp	r3, #0
   13048:	bne	140cc <__snprintf_chk@plt+0x2d28>
   1304c:	ldr	r3, [sp, #72]	; 0x48
   13050:	adds	r3, r3, #0
   13054:	movne	r3, #1
   13058:	cmp	sl, #0
   1305c:	movne	r3, #0
   13060:	cmp	r3, #0
   13064:	ldreq	r2, [sp, #68]	; 0x44
   13068:	beq	14050 <__snprintf_chk@plt+0x2cac>
   1306c:	ldr	sl, [sp, #72]	; 0x48
   13070:	str	r3, [sp, #68]	; 0x44
   13074:	ldr	r3, [pc, #1792]	; 1377c <__snprintf_chk@plt+0x23d8>
   13078:	mov	r2, #39	; 0x27
   1307c:	mov	r4, #1
   13080:	str	r3, [sp, #60]	; 0x3c
   13084:	mov	r3, #0
   13088:	strb	r2, [fp]
   1308c:	str	r4, [sp, #52]	; 0x34
   13090:	mov	r8, #2
   13094:	str	r3, [sp, #32]
   13098:	b	12a60 <__snprintf_chk@plt+0x16bc>
   1309c:	mov	r7, #0
   130a0:	cmp	fp, #2
   130a4:	beq	139dc <__snprintf_chk@plt+0x2638>
   130a8:	ldr	r3, [sp, #52]	; 0x34
   130ac:	ldr	r2, [sp, #28]
   130b0:	ldr	r1, [sp, #32]
   130b4:	cmp	r3, #0
   130b8:	andne	r2, r2, r1
   130bc:	moveq	r2, #0
   130c0:	cmp	r2, #0
   130c4:	moveq	r5, #92	; 0x5c
   130c8:	moveq	r3, r5
   130cc:	bne	139e8 <__snprintf_chk@plt+0x2644>
   130d0:	ldr	r1, [sp, #28]
   130d4:	cmp	r1, #0
   130d8:	bne	14158 <__snprintf_chk@plt+0x2db4>
   130dc:	mov	r6, #0
   130e0:	b	12ef8 <__snprintf_chk@plt+0x1b54>
   130e4:	mov	r7, #0
   130e8:	cmp	fp, #2
   130ec:	beq	13a4c <__snprintf_chk@plt+0x26a8>
   130f0:	cmp	fp, #5
   130f4:	beq	13a10 <__snprintf_chk@plt+0x266c>
   130f8:	sub	r2, fp, #2
   130fc:	mov	r6, #0
   13100:	clz	r2, r2
   13104:	mov	r5, #63	; 0x3f
   13108:	lsr	r2, r2, #5
   1310c:	b	12ef8 <__snprintf_chk@plt+0x1b54>
   13110:	mov	r7, #0
   13114:	cmp	fp, #2
   13118:	strne	r6, [sp, #68]	; 0x44
   1311c:	movne	r2, #0
   13120:	movne	r5, #39	; 0x27
   13124:	bne	12ef8 <__snprintf_chk@plt+0x1b54>
   13128:	ldr	r3, [sp, #32]
   1312c:	cmp	r3, #0
   13130:	bne	13e2c <__snprintf_chk@plt+0x2a88>
   13134:	cmp	sl, #0
   13138:	ldr	r3, [sp, #72]	; 0x48
   1313c:	clz	r3, r3
   13140:	lsr	r3, r3, #5
   13144:	moveq	r3, #0
   13148:	cmp	r3, #0
   1314c:	bne	13d60 <__snprintf_chk@plt+0x29bc>
   13150:	cmp	sl, r4
   13154:	movhi	r3, #39	; 0x27
   13158:	strbhi	r3, [r8, r4]
   1315c:	add	r3, r4, #1
   13160:	cmp	sl, r3
   13164:	movhi	r2, #92	; 0x5c
   13168:	strbhi	r2, [r8, r3]
   1316c:	add	r3, r4, #2
   13170:	cmp	sl, r3
   13174:	movhi	r2, #39	; 0x27
   13178:	strbhi	r2, [r8, r3]
   1317c:	mov	r3, #0
   13180:	cmp	r7, #0
   13184:	add	r4, r4, #3
   13188:	str	r3, [sp, #44]	; 0x2c
   1318c:	str	r6, [sp, #68]	; 0x44
   13190:	mov	r5, #39	; 0x27
   13194:	bne	12f48 <__snprintf_chk@plt+0x1ba4>
   13198:	ldr	r2, [sp, #44]	; 0x2c
   1319c:	eor	r3, r3, #1
   131a0:	and	r3, r3, r2
   131a4:	add	r9, r9, #1
   131a8:	uxtb	r3, r3
   131ac:	cmp	r3, #0
   131b0:	beq	12fb8 <__snprintf_chk@plt+0x1c14>
   131b4:	cmp	sl, r4
   131b8:	movhi	r3, #39	; 0x27
   131bc:	strbhi	r3, [r8, r4]
   131c0:	add	r3, r4, #1
   131c4:	cmp	sl, r3
   131c8:	movhi	r2, #39	; 0x27
   131cc:	strbhi	r2, [r8, r3]
   131d0:	mov	r3, #0
   131d4:	add	r4, r4, #2
   131d8:	str	r3, [sp, #44]	; 0x2c
   131dc:	b	12fb8 <__snprintf_chk@plt+0x1c14>
   131e0:	mov	r3, #114	; 0x72
   131e4:	ldr	r1, [sp, #32]
   131e8:	sub	r2, fp, #2
   131ec:	clz	r2, r2
   131f0:	lsr	r2, r2, #5
   131f4:	tst	r2, r1
   131f8:	beq	130d0 <__snprintf_chk@plt+0x1d2c>
   131fc:	mov	fp, r8
   13200:	mov	r8, #2
   13204:	ldr	r3, [sp, #28]
   13208:	cmp	r3, #0
   1320c:	movne	r8, #4
   13210:	ldr	r3, [sp, #164]	; 0xa4
   13214:	mov	ip, #0
   13218:	bic	r3, r3, #2
   1321c:	str	r3, [sp, #4]
   13220:	ldr	r3, [sp, #76]	; 0x4c
   13224:	str	r8, [sp]
   13228:	str	r3, [sp, #16]
   1322c:	ldr	r3, [sp, #80]	; 0x50
   13230:	ldr	r2, [sp, #36]	; 0x24
   13234:	str	r3, [sp, #12]
   13238:	mov	r1, sl
   1323c:	ldr	r3, [sp, #24]
   13240:	mov	r0, fp
   13244:	str	ip, [sp, #8]
   13248:	bl	12968 <__snprintf_chk@plt+0x15c4>
   1324c:	mov	r4, r0
   13250:	ldr	r3, [pc, #1304]	; 13770 <__snprintf_chk@plt+0x23cc>
   13254:	ldr	r2, [sp, #116]	; 0x74
   13258:	mov	r0, r4
   1325c:	ldr	r3, [r3]
   13260:	cmp	r2, r3
   13264:	bne	14154 <__snprintf_chk@plt+0x2db0>
   13268:	add	sp, sp, #124	; 0x7c
   1326c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13270:	mov	r5, #110	; 0x6e
   13274:	ldr	r3, [sp, #32]
   13278:	mov	r2, #0
   1327c:	cmp	r3, #0
   13280:	mov	r6, r2
   13284:	beq	12f60 <__snprintf_chk@plt+0x1bbc>
   13288:	str	fp, [sp, #160]	; 0xa0
   1328c:	mov	fp, r8
   13290:	ldr	r8, [sp, #160]	; 0xa0
   13294:	mov	r3, r2
   13298:	ldr	r2, [sp, #28]
   1329c:	and	r2, r2, r3
   132a0:	str	r2, [sp, #28]
   132a4:	b	13204 <__snprintf_chk@plt+0x1e60>
   132a8:	mov	r5, #116	; 0x74
   132ac:	b	13274 <__snprintf_chk@plt+0x1ed0>
   132b0:	mov	r5, #102	; 0x66
   132b4:	ldr	r3, [sp, #32]
   132b8:	cmp	r3, #0
   132bc:	bne	13e68 <__snprintf_chk@plt+0x2ac4>
   132c0:	mov	r6, #0
   132c4:	b	12fa4 <__snprintf_chk@plt+0x1c00>
   132c8:	mov	r5, #118	; 0x76
   132cc:	b	132b4 <__snprintf_chk@plt+0x1f10>
   132d0:	mov	r7, #0
   132d4:	mov	r6, #0
   132d8:	b	12f14 <__snprintf_chk@plt+0x1b70>
   132dc:	ldr	r3, [sp, #32]
   132e0:	cmp	r3, #0
   132e4:	bne	140ac <__snprintf_chk@plt+0x2d08>
   132e8:	mov	r7, r3
   132ec:	ldr	r3, [sp, #44]	; 0x2c
   132f0:	sub	r2, fp, #2
   132f4:	eor	r3, r3, #1
   132f8:	clz	r2, r2
   132fc:	lsr	r2, r2, #5
   13300:	ands	r3, r2, r3
   13304:	beq	13d4c <__snprintf_chk@plt+0x29a8>
   13308:	cmp	sl, r4
   1330c:	movhi	r1, #39	; 0x27
   13310:	strbhi	r1, [r8, r4]
   13314:	add	r1, r4, #1
   13318:	cmp	sl, r1
   1331c:	movhi	r0, #36	; 0x24
   13320:	strbhi	r0, [r8, r1]
   13324:	add	r1, r4, #2
   13328:	cmp	sl, r1
   1332c:	movhi	r0, #39	; 0x27
   13330:	strbhi	r0, [r8, r1]
   13334:	add	r1, r4, #3
   13338:	cmp	sl, r1
   1333c:	bls	13dac <__snprintf_chk@plt+0x2a08>
   13340:	mov	r4, r1
   13344:	mov	r1, #92	; 0x5c
   13348:	strb	r1, [r8, r4]
   1334c:	mov	r1, r4
   13350:	str	r3, [sp, #44]	; 0x2c
   13354:	cmp	fp, #2
   13358:	add	r4, r4, #1
   1335c:	beq	13df4 <__snprintf_chk@plt+0x2a50>
   13360:	ldr	r0, [sp, #24]
   13364:	add	r3, r9, #1
   13368:	cmp	r3, r0
   1336c:	bcs	13384 <__snprintf_chk@plt+0x1fe0>
   13370:	ldr	r0, [sp, #36]	; 0x24
   13374:	ldrb	r3, [r0, r3]
   13378:	sub	r3, r3, #48	; 0x30
   1337c:	cmp	r3, #9
   13380:	bls	13e04 <__snprintf_chk@plt+0x2a60>
   13384:	mov	r5, #48	; 0x30
   13388:	ldr	r3, [sp, #28]
   1338c:	eor	r3, r3, #1
   13390:	orrs	r2, r2, r3
   13394:	mov	r3, r6
   13398:	moveq	r6, r2
   1339c:	beq	12f18 <__snprintf_chk@plt+0x1b74>
   133a0:	mov	r6, #0
   133a4:	b	12f40 <__snprintf_chk@plt+0x1b9c>
   133a8:	mov	r2, #0
   133ac:	mov	r6, r2
   133b0:	mov	r5, #98	; 0x62
   133b4:	b	12f60 <__snprintf_chk@plt+0x1bbc>
   133b8:	mov	r5, #97	; 0x61
   133bc:	b	132c0 <__snprintf_chk@plt+0x1f1c>
   133c0:	mov	r3, r7
   133c4:	mov	r6, r7
   133c8:	mov	r2, #0
   133cc:	mov	r7, r3
   133d0:	mov	r5, #32
   133d4:	b	12ef8 <__snprintf_chk@plt+0x1b54>
   133d8:	cmp	r9, #0
   133dc:	mov	r3, r7
   133e0:	bne	139a8 <__snprintf_chk@plt+0x2604>
   133e4:	mov	r6, r7
   133e8:	mov	r2, r9
   133ec:	mov	r7, r3
   133f0:	b	12ef8 <__snprintf_chk@plt+0x1b54>
   133f4:	mov	r6, r7
   133f8:	b	12f14 <__snprintf_chk@plt+0x1b70>
   133fc:	mov	r7, #0
   13400:	ldr	r3, [sp, #64]	; 0x40
   13404:	cmp	r3, #1
   13408:	bne	13a64 <__snprintf_chk@plt+0x26c0>
   1340c:	bl	11254 <__ctype_b_loc@plt>
   13410:	ldr	r2, [sp, #64]	; 0x40
   13414:	sxth	r3, r5
   13418:	mov	ip, r2
   1341c:	lsl	r3, r3, #1
   13420:	ldr	r2, [r0]
   13424:	ldrh	r3, [r2, r3]
   13428:	and	r3, r3, #16384	; 0x4000
   1342c:	cmp	r3, #0
   13430:	ldr	r3, [sp, #28]
   13434:	movne	r6, #1
   13438:	moveq	r6, #0
   1343c:	movne	r2, #0
   13440:	andeq	r2, r3, #1
   13444:	cmp	r2, #0
   13448:	bne	13d74 <__snprintf_chk@plt+0x29d0>
   1344c:	sub	r2, fp, #2
   13450:	clz	r2, r2
   13454:	lsr	r2, r2, #5
   13458:	b	12ef8 <__snprintf_chk@plt+0x1b54>
   1345c:	cmp	r4, #0
   13460:	bne	14120 <__snprintf_chk@plt+0x2d7c>
   13464:	str	r4, [sp, #28]
   13468:	cmp	sl, #0
   1346c:	bne	14164 <__snprintf_chk@plt+0x2dc0>
   13470:	ldr	r3, [pc, #772]	; 1377c <__snprintf_chk@plt+0x23d8>
   13474:	mov	r4, #1
   13478:	str	r4, [sp, #40]	; 0x28
   1347c:	str	r3, [sp, #60]	; 0x3c
   13480:	str	r4, [sp, #52]	; 0x34
   13484:	str	sl, [sp, #72]	; 0x48
   13488:	str	sl, [sp, #68]	; 0x44
   1348c:	str	sl, [sp, #44]	; 0x2c
   13490:	str	sl, [sp, #32]
   13494:	mov	r8, #2
   13498:	b	12a60 <__snprintf_chk@plt+0x16bc>
   1349c:	ldr	r3, [sp, #36]	; 0x24
   134a0:	ldrb	r5, [r3, r9]
   134a4:	cmp	r5, #126	; 0x7e
   134a8:	ldrls	pc, [pc, r5, lsl #2]
   134ac:	b	13400 <__snprintf_chk@plt+0x205c>
   134b0:	andeq	r3, r1, r4, ror #13
   134b4:	andeq	r3, r1, r0, lsl #8
   134b8:	andeq	r3, r1, r0, lsl #8
   134bc:	andeq	r3, r1, r0, lsl #8
   134c0:	andeq	r3, r1, r0, lsl #8
   134c4:	andeq	r3, r1, r0, lsl #8
   134c8:	andeq	r3, r1, r0, lsl #8
   134cc:	ldrdeq	r3, [r1], -r0
   134d0:			; <UNDEFINED> instruction: 0x000136bc
   134d4:			; <UNDEFINED> instruction: 0x000136b4
   134d8:	andeq	r3, r1, ip, lsr #13
   134dc:	andeq	r3, r1, ip, asr r7
   134e0:	andeq	r3, r1, r8, asr #14
   134e4:	andeq	r3, r1, r0, ror #3
   134e8:	andeq	r3, r1, r0, lsl #8
   134ec:	andeq	r3, r1, r0, lsl #8
   134f0:	andeq	r3, r1, r0, lsl #8
   134f4:	andeq	r3, r1, r0, lsl #8
   134f8:	andeq	r3, r1, r0, lsl #8
   134fc:	andeq	r3, r1, r0, lsl #8
   13500:	andeq	r3, r1, r0, lsl #8
   13504:	andeq	r3, r1, r0, lsl #8
   13508:	andeq	r3, r1, r0, lsl #8
   1350c:	andeq	r3, r1, r0, lsl #8
   13510:	andeq	r3, r1, r0, lsl #8
   13514:	andeq	r3, r1, r0, lsl #8
   13518:	andeq	r3, r1, r0, lsl #8
   1351c:	andeq	r3, r1, r0, lsl #8
   13520:	andeq	r3, r1, r0, lsl #8
   13524:	andeq	r3, r1, r0, lsl #8
   13528:	andeq	r3, r1, r0, lsl #8
   1352c:	andeq	r3, r1, r0, lsl #8
   13530:	andeq	r3, r1, r8, lsr r7
   13534:	andeq	r3, r1, r4, lsr #14
   13538:	andeq	r3, r1, r4, lsr #14
   1353c:	andeq	r3, r1, r4, lsl r7
   13540:	andeq	r3, r1, r4, lsr #14
   13544:	andeq	r3, r1, ip, asr #8
   13548:	andeq	r3, r1, r4, lsr #14
   1354c:	andeq	r3, r1, r4, lsl r1
   13550:	andeq	r3, r1, r4, lsr #14
   13554:	andeq	r3, r1, r4, lsr #14
   13558:	andeq	r3, r1, r4, lsr #14
   1355c:	andeq	r3, r1, ip, asr #8
   13560:	andeq	r3, r1, ip, asr #8
   13564:	andeq	r3, r1, ip, asr #8
   13568:	andeq	r3, r1, ip, asr #8
   1356c:	andeq	r3, r1, ip, asr #8
   13570:	andeq	r3, r1, ip, asr #8
   13574:	andeq	r3, r1, ip, asr #8
   13578:	andeq	r3, r1, ip, asr #8
   1357c:	andeq	r3, r1, ip, asr #8
   13580:	andeq	r3, r1, ip, asr #8
   13584:	andeq	r3, r1, ip, asr #8
   13588:	andeq	r3, r1, ip, asr #8
   1358c:	andeq	r3, r1, ip, asr #8
   13590:	andeq	r3, r1, ip, asr #8
   13594:	andeq	r3, r1, ip, asr #8
   13598:	andeq	r3, r1, ip, asr #8
   1359c:	andeq	r3, r1, r4, lsr #14
   135a0:	andeq	r3, r1, r4, lsr #14
   135a4:	andeq	r3, r1, r4, lsr #14
   135a8:	andeq	r3, r1, r4, lsr #14
   135ac:	andeq	r3, r1, r8, ror #1
   135b0:	andeq	r3, r1, r0, lsl #8
   135b4:	andeq	r3, r1, ip, asr #8
   135b8:	andeq	r3, r1, ip, asr #8
   135bc:	andeq	r3, r1, ip, asr #8
   135c0:	andeq	r3, r1, ip, asr #8
   135c4:	andeq	r3, r1, ip, asr #8
   135c8:	andeq	r3, r1, ip, asr #8
   135cc:	andeq	r3, r1, ip, asr #8
   135d0:	andeq	r3, r1, ip, asr #8
   135d4:	andeq	r3, r1, ip, asr #8
   135d8:	andeq	r3, r1, ip, asr #8
   135dc:	andeq	r3, r1, ip, asr #8
   135e0:	andeq	r3, r1, ip, asr #8
   135e4:	andeq	r3, r1, ip, asr #8
   135e8:	andeq	r3, r1, ip, asr #8
   135ec:	andeq	r3, r1, ip, asr #8
   135f0:	andeq	r3, r1, ip, asr #8
   135f4:	andeq	r3, r1, ip, asr #8
   135f8:	andeq	r3, r1, ip, asr #8
   135fc:	andeq	r3, r1, ip, asr #8
   13600:	andeq	r3, r1, ip, asr #8
   13604:	andeq	r3, r1, ip, asr #8
   13608:	andeq	r3, r1, ip, asr #8
   1360c:	andeq	r3, r1, ip, asr #8
   13610:	andeq	r3, r1, ip, asr #8
   13614:	andeq	r3, r1, ip, asr #8
   13618:	andeq	r3, r1, ip, asr #8
   1361c:	andeq	r3, r1, r4, lsr #14
   13620:	andeq	r3, r1, r0, lsr #1
   13624:	andeq	r3, r1, ip, asr #8
   13628:	andeq	r3, r1, r4, lsr #14
   1362c:	andeq	r3, r1, ip, asr #8
   13630:	andeq	r3, r1, r4, lsr #14
   13634:	andeq	r3, r1, ip, asr #8
   13638:	andeq	r3, r1, ip, asr #8
   1363c:	andeq	r3, r1, ip, asr #8
   13640:	andeq	r3, r1, ip, asr #8
   13644:	andeq	r3, r1, ip, asr #8
   13648:	andeq	r3, r1, ip, asr #8
   1364c:	andeq	r3, r1, ip, asr #8
   13650:	andeq	r3, r1, ip, asr #8
   13654:	andeq	r3, r1, ip, asr #8
   13658:	andeq	r3, r1, ip, asr #8
   1365c:	andeq	r3, r1, ip, asr #8
   13660:	andeq	r3, r1, ip, asr #8
   13664:	andeq	r3, r1, ip, asr #8
   13668:	andeq	r3, r1, ip, asr #8
   1366c:	andeq	r3, r1, ip, asr #8
   13670:	andeq	r3, r1, ip, asr #8
   13674:	andeq	r3, r1, ip, asr #8
   13678:	andeq	r3, r1, ip, asr #8
   1367c:	andeq	r3, r1, ip, asr #8
   13680:	andeq	r3, r1, ip, asr #8
   13684:	andeq	r3, r1, ip, asr #8
   13688:	andeq	r3, r1, ip, asr #8
   1368c:	andeq	r3, r1, ip, asr #8
   13690:	andeq	r3, r1, ip, asr #8
   13694:	andeq	r3, r1, ip, asr #8
   13698:	andeq	r3, r1, ip, asr #8
   1369c:			; <UNDEFINED> instruction: 0x00012eb8
   136a0:	andeq	r3, r1, r4, lsr #14
   136a4:			; <UNDEFINED> instruction: 0x00012eb8
   136a8:	andeq	r3, r1, r4, lsl r7
   136ac:	mov	r3, #110	; 0x6e
   136b0:	b	131e4 <__snprintf_chk@plt+0x1e40>
   136b4:	mov	r3, #116	; 0x74
   136b8:	b	131e4 <__snprintf_chk@plt+0x1e40>
   136bc:	sub	r2, fp, #2
   136c0:	mov	r3, #98	; 0x62
   136c4:	clz	r2, r2
   136c8:	lsr	r2, r2, #5
   136cc:	b	130d0 <__snprintf_chk@plt+0x1d2c>
   136d0:	sub	r2, fp, #2
   136d4:	mov	r3, #97	; 0x61
   136d8:	clz	r2, r2
   136dc:	lsr	r2, r2, #5
   136e0:	b	130d0 <__snprintf_chk@plt+0x1d2c>
   136e4:	ldr	r3, [sp, #28]
   136e8:	cmp	r3, #0
   136ec:	bne	132dc <__snprintf_chk@plt+0x1f38>
   136f0:	ldr	r3, [sp, #164]	; 0xa4
   136f4:	tst	r3, #1
   136f8:	bne	13d6c <__snprintf_chk@plt+0x29c8>
   136fc:	ldr	r6, [sp, #28]
   13700:	sub	r2, fp, #2
   13704:	mov	r7, r6
   13708:	clz	r2, r2
   1370c:	lsr	r2, r2, #5
   13710:	b	12ef8 <__snprintf_chk@plt+0x1b54>
   13714:	sub	r2, fp, #2
   13718:	clz	r2, r2
   1371c:	lsr	r2, r2, #5
   13720:	b	12ee4 <__snprintf_chk@plt+0x1b40>
   13724:	sub	r2, fp, #2
   13728:	mov	r6, #0
   1372c:	clz	r2, r2
   13730:	lsr	r2, r2, #5
   13734:	b	12eec <__snprintf_chk@plt+0x1b48>
   13738:	sub	r2, fp, #2
   1373c:	clz	r2, r2
   13740:	lsr	r2, r2, #5
   13744:	b	12eec <__snprintf_chk@plt+0x1b48>
   13748:	sub	r2, fp, #2
   1374c:	mov	r3, #102	; 0x66
   13750:	clz	r2, r2
   13754:	lsr	r2, r2, #5
   13758:	b	130d0 <__snprintf_chk@plt+0x1d2c>
   1375c:	sub	r2, fp, #2
   13760:	mov	r3, #118	; 0x76
   13764:	clz	r2, r2
   13768:	lsr	r2, r2, #5
   1376c:	b	130d0 <__snprintf_chk@plt+0x1d2c>
   13770:	strdeq	r6, [r2], -r8
   13774:	andeq	r6, r1, r4, ror #12
   13778:	andeq	r6, r1, ip, asr #12
   1377c:	andeq	r6, r1, r0, ror #12
   13780:	ldr	r3, [sp, #48]	; 0x30
   13784:	ldrb	r5, [r3]
   13788:	cmp	r5, #126	; 0x7e
   1378c:	ldrls	pc, [pc, r5, lsl #2]
   13790:	b	133fc <__snprintf_chk@plt+0x2058>
   13794:	ldrdeq	r3, [r1], -ip
   13798:	strdeq	r3, [r1], -ip
   1379c:	strdeq	r3, [r1], -ip
   137a0:	strdeq	r3, [r1], -ip
   137a4:	strdeq	r3, [r1], -ip
   137a8:	strdeq	r3, [r1], -ip
   137ac:	strdeq	r3, [r1], -ip
   137b0:	ldrdeq	r3, [r1], -r4
   137b4:	andeq	r3, r1, ip, asr #19
   137b8:	andeq	r3, r1, r8, lsr #5
   137bc:	andeq	r3, r1, r0, ror r2
   137c0:	andeq	r3, r1, r8, asr #5
   137c4:			; <UNDEFINED> instruction: 0x000132b0
   137c8:	andeq	r3, r1, r0, asr #19
   137cc:	strdeq	r3, [r1], -ip
   137d0:	strdeq	r3, [r1], -ip
   137d4:	strdeq	r3, [r1], -ip
   137d8:	strdeq	r3, [r1], -ip
   137dc:	strdeq	r3, [r1], -ip
   137e0:	strdeq	r3, [r1], -ip
   137e4:	strdeq	r3, [r1], -ip
   137e8:	strdeq	r3, [r1], -ip
   137ec:	strdeq	r3, [r1], -ip
   137f0:	strdeq	r3, [r1], -ip
   137f4:	strdeq	r3, [r1], -ip
   137f8:	strdeq	r3, [r1], -ip
   137fc:	strdeq	r3, [r1], -ip
   13800:	strdeq	r3, [r1], -ip
   13804:	strdeq	r3, [r1], -ip
   13808:	strdeq	r3, [r1], -ip
   1380c:	strdeq	r3, [r1], -ip
   13810:	strdeq	r3, [r1], -ip
   13814:			; <UNDEFINED> instruction: 0x000139b8
   13818:	ldrdeq	r3, [r1], -r0
   1381c:	ldrdeq	r3, [r1], -r0
   13820:	muleq	r1, ip, r9
   13824:	ldrdeq	r3, [r1], -r0
   13828:	muleq	r1, r0, r9
   1382c:	ldrdeq	r3, [r1], -r0
   13830:	andeq	r3, r1, r0, lsl r1
   13834:	ldrdeq	r3, [r1], -r0
   13838:	ldrdeq	r3, [r1], -r0
   1383c:	ldrdeq	r3, [r1], -r0
   13840:	muleq	r1, r0, r9
   13844:	muleq	r1, r0, r9
   13848:	muleq	r1, r0, r9
   1384c:	muleq	r1, r0, r9
   13850:	muleq	r1, r0, r9
   13854:	muleq	r1, r0, r9
   13858:	muleq	r1, r0, r9
   1385c:	muleq	r1, r0, r9
   13860:	muleq	r1, r0, r9
   13864:	muleq	r1, r0, r9
   13868:	muleq	r1, r0, r9
   1386c:	muleq	r1, r0, r9
   13870:	muleq	r1, r0, r9
   13874:	muleq	r1, r0, r9
   13878:	muleq	r1, r0, r9
   1387c:	muleq	r1, r0, r9
   13880:	ldrdeq	r3, [r1], -r0
   13884:	ldrdeq	r3, [r1], -r0
   13888:	ldrdeq	r3, [r1], -r0
   1388c:	ldrdeq	r3, [r1], -r0
   13890:	andeq	r3, r1, r4, ror #1
   13894:	strdeq	r3, [r1], -ip
   13898:	muleq	r1, r0, r9
   1389c:	muleq	r1, r0, r9
   138a0:	muleq	r1, r0, r9
   138a4:	muleq	r1, r0, r9
   138a8:	muleq	r1, r0, r9
   138ac:	muleq	r1, r0, r9
   138b0:	muleq	r1, r0, r9
   138b4:	muleq	r1, r0, r9
   138b8:	muleq	r1, r0, r9
   138bc:	muleq	r1, r0, r9
   138c0:	muleq	r1, r0, r9
   138c4:	muleq	r1, r0, r9
   138c8:	muleq	r1, r0, r9
   138cc:	muleq	r1, r0, r9
   138d0:	muleq	r1, r0, r9
   138d4:	muleq	r1, r0, r9
   138d8:	muleq	r1, r0, r9
   138dc:	muleq	r1, r0, r9
   138e0:	muleq	r1, r0, r9
   138e4:	muleq	r1, r0, r9
   138e8:	muleq	r1, r0, r9
   138ec:	muleq	r1, r0, r9
   138f0:	muleq	r1, r0, r9
   138f4:	muleq	r1, r0, r9
   138f8:	muleq	r1, r0, r9
   138fc:	muleq	r1, r0, r9
   13900:	ldrdeq	r3, [r1], -r0
   13904:	muleq	r1, ip, r0
   13908:	muleq	r1, r0, r9
   1390c:	ldrdeq	r3, [r1], -r0
   13910:	muleq	r1, r0, r9
   13914:	ldrdeq	r3, [r1], -r0
   13918:	muleq	r1, r0, r9
   1391c:	muleq	r1, r0, r9
   13920:	muleq	r1, r0, r9
   13924:	muleq	r1, r0, r9
   13928:	muleq	r1, r0, r9
   1392c:	muleq	r1, r0, r9
   13930:	muleq	r1, r0, r9
   13934:	muleq	r1, r0, r9
   13938:	muleq	r1, r0, r9
   1393c:	muleq	r1, r0, r9
   13940:	muleq	r1, r0, r9
   13944:	muleq	r1, r0, r9
   13948:	muleq	r1, r0, r9
   1394c:	muleq	r1, r0, r9
   13950:	muleq	r1, r0, r9
   13954:	muleq	r1, r0, r9
   13958:	muleq	r1, r0, r9
   1395c:	muleq	r1, r0, r9
   13960:	muleq	r1, r0, r9
   13964:	muleq	r1, r0, r9
   13968:	muleq	r1, r0, r9
   1396c:	muleq	r1, r0, r9
   13970:	muleq	r1, r0, r9
   13974:	muleq	r1, r0, r9
   13978:	muleq	r1, r0, r9
   1397c:	muleq	r1, r0, r9
   13980:			; <UNDEFINED> instruction: 0x00012eb4
   13984:	ldrdeq	r3, [r1], -r0
   13988:			; <UNDEFINED> instruction: 0x00012eb4
   1398c:	muleq	r1, ip, r9
   13990:	mov	r6, r7
   13994:	mov	r7, #0
   13998:	b	12f14 <__snprintf_chk@plt+0x1b70>
   1399c:	cmp	r9, #0
   139a0:	mov	r3, #0
   139a4:	beq	133e4 <__snprintf_chk@plt+0x2040>
   139a8:	mov	r6, #0
   139ac:	mov	r7, r3
   139b0:	mov	r3, r6
   139b4:	b	12f18 <__snprintf_chk@plt+0x1b74>
   139b8:	mov	r3, #0
   139bc:	b	133c4 <__snprintf_chk@plt+0x2020>
   139c0:	mov	r7, #0
   139c4:	mov	r3, #114	; 0x72
   139c8:	b	131e4 <__snprintf_chk@plt+0x1e40>
   139cc:	mov	r5, #98	; 0x62
   139d0:	b	13274 <__snprintf_chk@plt+0x1ed0>
   139d4:	mov	r5, #97	; 0x61
   139d8:	b	132b4 <__snprintf_chk@plt+0x1f10>
   139dc:	ldr	r3, [sp, #32]
   139e0:	cmp	r3, #0
   139e4:	bne	13e2c <__snprintf_chk@plt+0x2a88>
   139e8:	add	r9, r9, #1
   139ec:	ldr	r3, [sp, #44]	; 0x2c
   139f0:	mov	r6, #0
   139f4:	mov	r5, #92	; 0x5c
   139f8:	b	131ac <__snprintf_chk@plt+0x1e08>
   139fc:	ldr	r3, [sp, #36]	; 0x24
   13a00:	ldrb	r3, [r3, #1]
   13a04:	adds	r3, r3, #0
   13a08:	movne	r3, #1
   13a0c:	b	12ed0 <__snprintf_chk@plt+0x1b2c>
   13a10:	ldr	r3, [sp, #164]	; 0xa4
   13a14:	ands	r3, r3, #4
   13a18:	beq	13a3c <__snprintf_chk@plt+0x2698>
   13a1c:	ldr	r2, [sp, #24]
   13a20:	add	r3, r9, #2
   13a24:	cmp	r3, r2
   13a28:	bcs	13a3c <__snprintf_chk@plt+0x2698>
   13a2c:	ldr	r2, [sp, #48]	; 0x30
   13a30:	ldrb	r5, [r2, #1]
   13a34:	cmp	r5, #63	; 0x3f
   13a38:	beq	13ea0 <__snprintf_chk@plt+0x2afc>
   13a3c:	mov	r2, #0
   13a40:	mov	r6, r2
   13a44:	mov	r5, #63	; 0x3f
   13a48:	b	12ef8 <__snprintf_chk@plt+0x1b54>
   13a4c:	ldr	r3, [sp, #32]
   13a50:	cmp	r3, #0
   13a54:	bne	13e2c <__snprintf_chk@plt+0x2a88>
   13a58:	mov	r6, r3
   13a5c:	mov	r5, #63	; 0x3f
   13a60:	b	12f40 <__snprintf_chk@plt+0x1b9c>
   13a64:	ldr	r3, [sp, #24]
   13a68:	cmn	r3, #1
   13a6c:	mov	r3, #0
   13a70:	str	r3, [sp, #108]	; 0x6c
   13a74:	str	r3, [sp, #112]	; 0x70
   13a78:	bne	13a88 <__snprintf_chk@plt+0x26e4>
   13a7c:	ldr	r0, [sp, #36]	; 0x24
   13a80:	bl	1126c <strlen@plt>
   13a84:	str	r0, [sp, #24]
   13a88:	mov	r3, #0
   13a8c:	str	sl, [sp, #88]	; 0x58
   13a90:	ldr	sl, [sp, #36]	; 0x24
   13a94:	str	r5, [sp, #92]	; 0x5c
   13a98:	mov	r5, r3
   13a9c:	str	r7, [sp, #96]	; 0x60
   13aa0:	str	r4, [sp, #100]	; 0x64
   13aa4:	str	r8, [sp, #84]	; 0x54
   13aa8:	ldr	r3, [sp, #24]
   13aac:	add	r4, r9, r5
   13ab0:	add	r7, sl, r4
   13ab4:	sub	r2, r3, r4
   13ab8:	mov	r1, r7
   13abc:	add	r3, sp, #108	; 0x6c
   13ac0:	add	r0, sp, #104	; 0x68
   13ac4:	bl	1526c <__snprintf_chk@plt+0x3ec8>
   13ac8:	subs	r8, r0, #0
   13acc:	beq	13b1c <__snprintf_chk@plt+0x2778>
   13ad0:	cmn	r8, #1
   13ad4:	beq	13e7c <__snprintf_chk@plt+0x2ad8>
   13ad8:	cmn	r8, #2
   13adc:	beq	13f9c <__snprintf_chk@plt+0x2bf8>
   13ae0:	ldr	r3, [sp, #32]
   13ae4:	cmp	fp, #2
   13ae8:	movne	r3, #0
   13aec:	andeq	r3, r3, #1
   13af0:	cmp	r3, #0
   13af4:	bne	13c7c <__snprintf_chk@plt+0x28d8>
   13af8:	ldr	r0, [sp, #104]	; 0x68
   13afc:	bl	11170 <iswprint@plt>
   13b00:	add	r5, r5, r8
   13b04:	cmp	r0, #0
   13b08:	add	r0, sp, #108	; 0x6c
   13b0c:	moveq	r6, #0
   13b10:	bl	11104 <mbsinit@plt>
   13b14:	cmp	r0, #0
   13b18:	beq	13aa8 <__snprintf_chk@plt+0x2704>
   13b1c:	ldr	r3, [sp, #28]
   13b20:	mov	ip, r5
   13b24:	eor	r2, r6, #1
   13b28:	ldr	r5, [sp, #92]	; 0x5c
   13b2c:	ldr	r7, [sp, #96]	; 0x60
   13b30:	ldr	r4, [sp, #100]	; 0x64
   13b34:	ldr	r8, [sp, #84]	; 0x54
   13b38:	ldr	sl, [sp, #88]	; 0x58
   13b3c:	and	r2, r2, r3
   13b40:	cmp	ip, #1
   13b44:	bls	13444 <__snprintf_chk@plt+0x20a0>
   13b48:	add	r1, ip, r9
   13b4c:	ldr	lr, [sp, #48]	; 0x30
   13b50:	mov	r0, #0
   13b54:	str	r6, [sp, #48]	; 0x30
   13b58:	mov	ip, #39	; 0x27
   13b5c:	ldr	r6, [sp, #44]	; 0x2c
   13b60:	b	13c18 <__snprintf_chk@plt+0x2874>
   13b64:	ldr	r0, [sp, #32]
   13b68:	sub	r3, fp, #2
   13b6c:	cmp	r0, #0
   13b70:	clz	r3, r3
   13b74:	lsr	r3, r3, #5
   13b78:	bne	13d80 <__snprintf_chk@plt+0x29dc>
   13b7c:	eor	r0, r6, #1
   13b80:	ands	r3, r3, r0
   13b84:	beq	13bb4 <__snprintf_chk@plt+0x2810>
   13b88:	add	r0, r4, #1
   13b8c:	cmp	sl, r4
   13b90:	strbhi	ip, [r8, r4]
   13b94:	cmp	sl, r0
   13b98:	movhi	r6, #36	; 0x24
   13b9c:	strbhi	r6, [r8, r0]
   13ba0:	add	r0, r4, #2
   13ba4:	mov	r6, r3
   13ba8:	add	r4, r4, #3
   13bac:	cmp	sl, r0
   13bb0:	strbhi	ip, [r8, r0]
   13bb4:	cmp	sl, r4
   13bb8:	movhi	r3, #92	; 0x5c
   13bbc:	strbhi	r3, [r8, r4]
   13bc0:	add	r3, r4, #1
   13bc4:	cmp	sl, r3
   13bc8:	lsrhi	r0, r5, #6
   13bcc:	addhi	r0, r0, #48	; 0x30
   13bd0:	strbhi	r0, [r8, r3]
   13bd4:	add	r0, r4, #2
   13bd8:	cmp	sl, r0
   13bdc:	lsrhi	r3, r5, #3
   13be0:	andhi	r3, r3, #7
   13be4:	addhi	r3, r3, #48	; 0x30
   13be8:	add	r9, r9, #1
   13bec:	strbhi	r3, [r8, r0]
   13bf0:	and	r5, r5, #7
   13bf4:	cmp	r9, r1
   13bf8:	add	r5, r5, #48	; 0x30
   13bfc:	add	r4, r4, #3
   13c00:	bcs	13da0 <__snprintf_chk@plt+0x29fc>
   13c04:	mov	r0, r2
   13c08:	cmp	sl, r4
   13c0c:	strbhi	r5, [r8, r4]
   13c10:	ldrb	r5, [lr, #1]!
   13c14:	add	r4, r4, #1
   13c18:	cmp	r2, #0
   13c1c:	bne	13b64 <__snprintf_chk@plt+0x27c0>
   13c20:	eor	r3, r0, #1
   13c24:	and	r3, r3, r6
   13c28:	cmp	r7, #0
   13c2c:	uxtb	r3, r3
   13c30:	beq	13c44 <__snprintf_chk@plt+0x28a0>
   13c34:	cmp	sl, r4
   13c38:	movhi	r7, #92	; 0x5c
   13c3c:	strbhi	r7, [r8, r4]
   13c40:	add	r4, r4, #1
   13c44:	add	r9, r9, #1
   13c48:	cmp	r9, r1
   13c4c:	bcs	13d94 <__snprintf_chk@plt+0x29f0>
   13c50:	cmp	r3, #0
   13c54:	beq	13dc0 <__snprintf_chk@plt+0x2a1c>
   13c58:	cmp	sl, r4
   13c5c:	add	r3, r4, #1
   13c60:	strbhi	ip, [r8, r4]
   13c64:	mov	r7, #0
   13c68:	cmp	sl, r3
   13c6c:	strbhi	ip, [r8, r3]
   13c70:	add	r4, r4, #2
   13c74:	mov	r6, r7
   13c78:	b	13c08 <__snprintf_chk@plt+0x2864>
   13c7c:	cmp	r8, #1
   13c80:	beq	13af8 <__snprintf_chk@plt+0x2754>
   13c84:	add	r1, r4, #1
   13c88:	add	r3, sl, r8
   13c8c:	add	r1, sl, r1
   13c90:	add	r4, r3, r4
   13c94:	ldrb	r3, [r1], #1
   13c98:	sub	r3, r3, #91	; 0x5b
   13c9c:	cmp	r3, #33	; 0x21
   13ca0:	ldrls	pc, [pc, r3, lsl #2]
   13ca4:	b	13d30 <__snprintf_chk@plt+0x298c>
   13ca8:	andeq	r3, r1, ip, lsr sp
   13cac:	andeq	r3, r1, ip, lsr sp
   13cb0:	andeq	r3, r1, r0, lsr sp
   13cb4:	andeq	r3, r1, ip, lsr sp
   13cb8:	andeq	r3, r1, r0, lsr sp
   13cbc:	andeq	r3, r1, ip, lsr sp
   13cc0:	andeq	r3, r1, r0, lsr sp
   13cc4:	andeq	r3, r1, r0, lsr sp
   13cc8:	andeq	r3, r1, r0, lsr sp
   13ccc:	andeq	r3, r1, r0, lsr sp
   13cd0:	andeq	r3, r1, r0, lsr sp
   13cd4:	andeq	r3, r1, r0, lsr sp
   13cd8:	andeq	r3, r1, r0, lsr sp
   13cdc:	andeq	r3, r1, r0, lsr sp
   13ce0:	andeq	r3, r1, r0, lsr sp
   13ce4:	andeq	r3, r1, r0, lsr sp
   13ce8:	andeq	r3, r1, r0, lsr sp
   13cec:	andeq	r3, r1, r0, lsr sp
   13cf0:	andeq	r3, r1, r0, lsr sp
   13cf4:	andeq	r3, r1, r0, lsr sp
   13cf8:	andeq	r3, r1, r0, lsr sp
   13cfc:	andeq	r3, r1, r0, lsr sp
   13d00:	andeq	r3, r1, r0, lsr sp
   13d04:	andeq	r3, r1, r0, lsr sp
   13d08:	andeq	r3, r1, r0, lsr sp
   13d0c:	andeq	r3, r1, r0, lsr sp
   13d10:	andeq	r3, r1, r0, lsr sp
   13d14:	andeq	r3, r1, r0, lsr sp
   13d18:	andeq	r3, r1, r0, lsr sp
   13d1c:	andeq	r3, r1, r0, lsr sp
   13d20:	andeq	r3, r1, r0, lsr sp
   13d24:	andeq	r3, r1, r0, lsr sp
   13d28:	andeq	r3, r1, r0, lsr sp
   13d2c:	andeq	r3, r1, ip, lsr sp
   13d30:	cmp	r4, r1
   13d34:	bne	13c94 <__snprintf_chk@plt+0x28f0>
   13d38:	b	13af8 <__snprintf_chk@plt+0x2754>
   13d3c:	ldr	fp, [sp, #84]	; 0x54
   13d40:	ldr	sl, [sp, #88]	; 0x58
   13d44:	mov	r8, #2
   13d48:	b	13204 <__snprintf_chk@plt+0x1e60>
   13d4c:	cmp	sl, r4
   13d50:	movls	r1, r4
   13d54:	bls	13354 <__snprintf_chk@plt+0x1fb0>
   13d58:	ldr	r3, [sp, #44]	; 0x2c
   13d5c:	b	13344 <__snprintf_chk@plt+0x1fa0>
   13d60:	str	sl, [sp, #72]	; 0x48
   13d64:	ldr	sl, [sp, #32]
   13d68:	b	1317c <__snprintf_chk@plt+0x1dd8>
   13d6c:	add	r9, r9, #1
   13d70:	b	12a70 <__snprintf_chk@plt+0x16cc>
   13d74:	ldr	r2, [sp, #28]
   13d78:	mov	r6, #0
   13d7c:	b	13b48 <__snprintf_chk@plt+0x27a4>
   13d80:	str	fp, [sp, #160]	; 0xa0
   13d84:	str	r3, [sp, #28]
   13d88:	mov	fp, r8
   13d8c:	ldr	r8, [sp, #160]	; 0xa0
   13d90:	b	13204 <__snprintf_chk@plt+0x1e60>
   13d94:	str	r6, [sp, #44]	; 0x2c
   13d98:	ldr	r6, [sp, #48]	; 0x30
   13d9c:	b	131ac <__snprintf_chk@plt+0x1e08>
   13da0:	str	r6, [sp, #44]	; 0x2c
   13da4:	ldr	r6, [sp, #48]	; 0x30
   13da8:	b	12fb8 <__snprintf_chk@plt+0x1c14>
   13dac:	add	r4, r4, #4
   13db0:	str	r3, [sp, #44]	; 0x2c
   13db4:	mov	r6, #0
   13db8:	mov	r5, #48	; 0x30
   13dbc:	b	12f40 <__snprintf_chk@plt+0x1b9c>
   13dc0:	mov	r7, r3
   13dc4:	b	13c08 <__snprintf_chk@plt+0x2864>
   13dc8:	ldr	r3, [pc, #-1624]	; 13778 <__snprintf_chk@plt+0x23d4>
   13dcc:	mov	r4, #1
   13dd0:	str	r4, [sp, #40]	; 0x28
   13dd4:	str	r4, [sp, #28]
   13dd8:	str	r4, [sp, #52]	; 0x34
   13ddc:	str	sl, [sp, #72]	; 0x48
   13de0:	str	sl, [sp, #68]	; 0x44
   13de4:	str	sl, [sp, #44]	; 0x2c
   13de8:	str	sl, [sp, #32]
   13dec:	str	r3, [sp, #60]	; 0x3c
   13df0:	b	12a60 <__snprintf_chk@plt+0x16bc>
   13df4:	mov	r3, r6
   13df8:	mov	r5, #48	; 0x30
   13dfc:	mov	r6, #0
   13e00:	b	12f40 <__snprintf_chk@plt+0x1b9c>
   13e04:	cmp	sl, r4
   13e08:	movhi	r3, #48	; 0x30
   13e0c:	strbhi	r3, [r8, r4]
   13e10:	add	r3, r1, #2
   13e14:	cmp	sl, r3
   13e18:	movhi	r0, #48	; 0x30
   13e1c:	strbhi	r0, [r8, r3]
   13e20:	add	r4, r1, #3
   13e24:	mov	r5, #48	; 0x30
   13e28:	b	13388 <__snprintf_chk@plt+0x1fe4>
   13e2c:	str	fp, [sp, #160]	; 0xa0
   13e30:	mov	fp, r8
   13e34:	ldr	r8, [sp, #160]	; 0xa0
   13e38:	b	13204 <__snprintf_chk@plt+0x1e60>
   13e3c:	ldr	r2, [sp, #80]	; 0x50
   13e40:	ldrb	r3, [r2]
   13e44:	cmp	r3, #0
   13e48:	beq	12a30 <__snprintf_chk@plt+0x168c>
   13e4c:	cmp	sl, r4
   13e50:	strbhi	r3, [fp, r4]
   13e54:	ldrb	r3, [r2, #1]!
   13e58:	add	r4, r4, #1
   13e5c:	cmp	r3, #0
   13e60:	bne	13e4c <__snprintf_chk@plt+0x2aa8>
   13e64:	b	12a30 <__snprintf_chk@plt+0x168c>
   13e68:	str	fp, [sp, #160]	; 0xa0
   13e6c:	mov	r3, #0
   13e70:	mov	fp, r8
   13e74:	ldr	r8, [sp, #160]	; 0xa0
   13e78:	b	13298 <__snprintf_chk@plt+0x1ef4>
   13e7c:	mov	ip, r5
   13e80:	ldr	r7, [sp, #96]	; 0x60
   13e84:	ldr	r5, [sp, #92]	; 0x5c
   13e88:	ldr	r4, [sp, #100]	; 0x64
   13e8c:	ldr	r8, [sp, #84]	; 0x54
   13e90:	ldr	sl, [sp, #88]	; 0x58
   13e94:	ldr	r2, [sp, #28]
   13e98:	mov	r6, #0
   13e9c:	b	13b40 <__snprintf_chk@plt+0x279c>
   13ea0:	ldr	r2, [sp, #36]	; 0x24
   13ea4:	ldrb	r1, [r2, r3]
   13ea8:	sub	r2, r1, #33	; 0x21
   13eac:	cmp	r2, #29
   13eb0:	ldrls	pc, [pc, r2, lsl #2]
   13eb4:	b	13f90 <__snprintf_chk@plt+0x2bec>
   13eb8:	andeq	r3, r1, r0, lsr pc
   13ebc:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13ec0:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13ec4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13ec8:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13ecc:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13ed0:	andeq	r3, r1, r0, lsr pc
   13ed4:	andeq	r3, r1, r0, lsr pc
   13ed8:	andeq	r3, r1, r0, lsr pc
   13edc:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13ee0:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13ee4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13ee8:	andeq	r3, r1, r0, lsr pc
   13eec:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13ef0:	andeq	r3, r1, r0, lsr pc
   13ef4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13ef8:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13efc:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13f00:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13f04:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13f08:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13f0c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13f10:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13f14:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13f18:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13f1c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13f20:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13f24:	andeq	r3, r1, r0, lsr pc
   13f28:	andeq	r3, r1, r0, lsr pc
   13f2c:	andeq	r3, r1, r0, lsr pc
   13f30:	ldr	r2, [sp, #32]
   13f34:	cmp	r2, #0
   13f38:	bne	1403c <__snprintf_chk@plt+0x2c98>
   13f3c:	cmp	sl, r4
   13f40:	movhi	r2, #63	; 0x3f
   13f44:	strbhi	r2, [r8, r4]
   13f48:	add	r2, r4, #1
   13f4c:	cmp	sl, r2
   13f50:	movhi	r0, #34	; 0x22
   13f54:	strbhi	r0, [r8, r2]
   13f58:	add	r2, r4, #2
   13f5c:	cmp	sl, r2
   13f60:	movhi	r0, #34	; 0x22
   13f64:	strbhi	r0, [r8, r2]
   13f68:	add	r2, r4, #3
   13f6c:	cmp	sl, r2
   13f70:	movhi	r0, #63	; 0x3f
   13f74:	strbhi	r0, [r8, r2]
   13f78:	mov	r2, #0
   13f7c:	add	r4, r4, #4
   13f80:	mov	r5, r1
   13f84:	mov	r9, r3
   13f88:	mov	r6, r2
   13f8c:	b	13388 <__snprintf_chk@plt+0x1fe4>
   13f90:	mov	r2, #0
   13f94:	mov	r6, r2
   13f98:	b	12ef8 <__snprintf_chk@plt+0x1b54>
   13f9c:	ldr	r0, [sp, #24]
   13fa0:	mov	r1, r4
   13fa4:	cmp	r1, r0
   13fa8:	mov	r2, r7
   13fac:	mov	r3, r5
   13fb0:	mov	ip, r5
   13fb4:	ldr	r7, [sp, #96]	; 0x60
   13fb8:	ldr	r5, [sp, #92]	; 0x5c
   13fbc:	ldr	r4, [sp, #100]	; 0x64
   13fc0:	ldr	r8, [sp, #84]	; 0x54
   13fc4:	ldr	sl, [sp, #88]	; 0x58
   13fc8:	bcs	13ffc <__snprintf_chk@plt+0x2c58>
   13fcc:	ldrb	r6, [r2]
   13fd0:	cmp	r6, #0
   13fd4:	bne	13fe8 <__snprintf_chk@plt+0x2c44>
   13fd8:	b	14118 <__snprintf_chk@plt+0x2d74>
   13fdc:	ldrb	r6, [r2, #1]!
   13fe0:	cmp	r6, #0
   13fe4:	beq	140a0 <__snprintf_chk@plt+0x2cfc>
   13fe8:	add	r3, r3, #1
   13fec:	add	r1, r9, r3
   13ff0:	cmp	r1, r0
   13ff4:	bcc	13fdc <__snprintf_chk@plt+0x2c38>
   13ff8:	mov	ip, r3
   13ffc:	ldr	r2, [sp, #28]
   14000:	mov	r6, #0
   14004:	b	13b40 <__snprintf_chk@plt+0x279c>
   14008:	mov	r3, #1
   1400c:	str	r3, [sp, #40]	; 0x28
   14010:	str	r3, [sp, #32]
   14014:	str	r3, [sp, #28]
   14018:	str	r3, [sp, #52]	; 0x34
   1401c:	ldr	r3, [pc, #-2220]	; 13778 <__snprintf_chk@plt+0x23d4>
   14020:	mov	r2, #0
   14024:	str	r2, [sp, #68]	; 0x44
   14028:	str	r2, [sp, #44]	; 0x2c
   1402c:	str	r2, [sp, #72]	; 0x48
   14030:	mov	r4, r2
   14034:	str	r3, [sp, #60]	; 0x3c
   14038:	b	12a60 <__snprintf_chk@plt+0x16bc>
   1403c:	str	fp, [sp, #160]	; 0xa0
   14040:	mov	fp, r8
   14044:	ldr	r8, [sp, #160]	; 0xa0
   14048:	b	13210 <__snprintf_chk@plt+0x1e6c>
   1404c:	mov	r2, r3
   14050:	ldr	r3, [sp, #60]	; 0x3c
   14054:	cmp	r3, #0
   14058:	moveq	r2, #0
   1405c:	andne	r2, r2, #1
   14060:	cmp	r2, #0
   14064:	beq	14090 <__snprintf_chk@plt+0x2cec>
   14068:	mov	r2, r3
   1406c:	ldrb	r3, [r3]
   14070:	cmp	r3, #0
   14074:	beq	14090 <__snprintf_chk@plt+0x2cec>
   14078:	cmp	sl, r4
   1407c:	strbhi	r3, [fp, r4]
   14080:	ldrb	r3, [r2, #1]!
   14084:	add	r4, r4, #1
   14088:	cmp	r3, #0
   1408c:	bne	14078 <__snprintf_chk@plt+0x2cd4>
   14090:	cmp	sl, r4
   14094:	movhi	r3, #0
   14098:	strbhi	r3, [fp, r4]
   1409c:	b	13250 <__snprintf_chk@plt+0x1eac>
   140a0:	mov	ip, r3
   140a4:	ldr	r2, [sp, #28]
   140a8:	b	13b40 <__snprintf_chk@plt+0x279c>
   140ac:	str	fp, [sp, #160]	; 0xa0
   140b0:	mov	fp, r8
   140b4:	ldr	r8, [sp, #160]	; 0xa0
   140b8:	sub	r3, r8, #2
   140bc:	clz	r3, r3
   140c0:	lsr	r3, r3, #5
   140c4:	str	r3, [sp, #28]
   140c8:	b	13204 <__snprintf_chk@plt+0x1e60>
   140cc:	ldr	r3, [sp, #76]	; 0x4c
   140d0:	mov	ip, #5
   140d4:	str	r3, [sp, #16]
   140d8:	ldr	r3, [sp, #80]	; 0x50
   140dc:	ldr	r2, [sp, #36]	; 0x24
   140e0:	str	r3, [sp, #12]
   140e4:	ldr	r3, [sp, #56]	; 0x38
   140e8:	ldr	r1, [sp, #72]	; 0x48
   140ec:	str	r3, [sp, #8]
   140f0:	ldr	r3, [sp, #164]	; 0xa4
   140f4:	mov	r0, fp
   140f8:	str	r3, [sp, #4]
   140fc:	str	ip, [sp]
   14100:	ldr	r3, [sp, #24]
   14104:	bl	12968 <__snprintf_chk@plt+0x15c4>
   14108:	mov	r4, r0
   1410c:	b	13250 <__snprintf_chk@plt+0x1eac>
   14110:	mov	r8, #2
   14114:	b	13204 <__snprintf_chk@plt+0x1e60>
   14118:	ldr	r2, [sp, #28]
   1411c:	b	13b40 <__snprintf_chk@plt+0x279c>
   14120:	mov	r3, #0
   14124:	str	r3, [sp, #68]	; 0x44
   14128:	str	r3, [sp, #44]	; 0x2c
   1412c:	str	r3, [sp, #72]	; 0x48
   14130:	str	r3, [sp, #28]
   14134:	mov	r4, r3
   14138:	ldr	r3, [pc, #-2500]	; 1377c <__snprintf_chk@plt+0x23d8>
   1413c:	mov	r2, #1
   14140:	str	r2, [sp, #40]	; 0x28
   14144:	str	r2, [sp, #32]
   14148:	str	r2, [sp, #52]	; 0x34
   1414c:	str	r3, [sp, #60]	; 0x3c
   14150:	b	12a60 <__snprintf_chk@plt+0x16bc>
   14154:	bl	11134 <__stack_chk_fail@plt>
   14158:	mov	r5, r3
   1415c:	mov	r6, #0
   14160:	b	12f54 <__snprintf_chk@plt+0x1bb0>
   14164:	mov	r3, #0
   14168:	mov	r2, #1
   1416c:	str	r3, [sp, #44]	; 0x2c
   14170:	str	r3, [sp, #72]	; 0x48
   14174:	str	r2, [sp, #40]	; 0x28
   14178:	b	13070 <__snprintf_chk@plt+0x1ccc>
   1417c:	bl	11398 <abort@plt>
   14180:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14184:	sub	sp, sp, #44	; 0x2c
   14188:	mov	r6, r0
   1418c:	mov	r4, r3
   14190:	mov	sl, r1
   14194:	mov	fp, r2
   14198:	bl	11290 <__errno_location@plt>
   1419c:	ldr	r7, [pc, #364]	; 14310 <__snprintf_chk@plt+0x2f6c>
   141a0:	cmp	r6, #0
   141a4:	ldr	r5, [r7]
   141a8:	ldr	r3, [r0]
   141ac:	str	r3, [sp, #24]
   141b0:	blt	1430c <__snprintf_chk@plt+0x2f68>
   141b4:	ldr	r3, [r7, #4]
   141b8:	mov	r8, r0
   141bc:	cmp	r3, r6
   141c0:	bgt	1420c <__snprintf_chk@plt+0x2e68>
   141c4:	cmn	r6, #-268435454	; 0xf0000002
   141c8:	bgt	14308 <__snprintf_chk@plt+0x2f64>
   141cc:	add	r9, r6, #1
   141d0:	add	r3, r7, #8
   141d4:	cmp	r5, r3
   141d8:	lsl	r1, r9, #3
   141dc:	beq	142e8 <__snprintf_chk@plt+0x2f44>
   141e0:	mov	r0, r5
   141e4:	bl	14f74 <__snprintf_chk@plt+0x3bd0>
   141e8:	mov	r5, r0
   141ec:	str	r0, [r7]
   141f0:	ldr	r0, [r7, #4]
   141f4:	mov	r1, #0
   141f8:	sub	r2, r9, r0
   141fc:	add	r0, r5, r0, lsl #3
   14200:	lsl	r2, r2, #3
   14204:	bl	112b4 <memset@plt>
   14208:	str	r9, [r7, #4]
   1420c:	add	r3, r5, r6, lsl #3
   14210:	ldr	r1, [r4, #4]
   14214:	ldr	r7, [r3, #4]
   14218:	ldr	r9, [r5, r6, lsl #3]
   1421c:	ldr	r2, [r4, #40]	; 0x28
   14220:	ldr	ip, [r4, #44]	; 0x2c
   14224:	str	r3, [sp, #28]
   14228:	ldr	r3, [r4]
   1422c:	orr	r1, r1, #1
   14230:	add	lr, r4, #8
   14234:	str	r1, [sp, #36]	; 0x24
   14238:	str	r1, [sp, #4]
   1423c:	str	r2, [sp, #12]
   14240:	str	r3, [sp]
   14244:	mov	r0, r7
   14248:	mov	r1, r9
   1424c:	str	ip, [sp, #16]
   14250:	str	lr, [sp, #8]
   14254:	mov	r3, fp
   14258:	mov	r2, sl
   1425c:	str	lr, [sp, #32]
   14260:	bl	12968 <__snprintf_chk@plt+0x15c4>
   14264:	cmp	r9, r0
   14268:	bhi	142d4 <__snprintf_chk@plt+0x2f30>
   1426c:	ldr	r3, [pc, #160]	; 14314 <__snprintf_chk@plt+0x2f70>
   14270:	add	r9, r0, #1
   14274:	cmp	r7, r3
   14278:	str	r9, [r5, r6, lsl #3]
   1427c:	beq	14288 <__snprintf_chk@plt+0x2ee4>
   14280:	mov	r0, r7
   14284:	bl	110d4 <free@plt>
   14288:	mov	r0, r9
   1428c:	bl	14f18 <__snprintf_chk@plt+0x3b74>
   14290:	ldr	lr, [sp, #28]
   14294:	ldr	ip, [r4, #44]	; 0x2c
   14298:	ldr	r5, [r4, #40]	; 0x28
   1429c:	mov	r3, fp
   142a0:	mov	r2, sl
   142a4:	mov	r1, r9
   142a8:	str	r0, [lr, #4]
   142ac:	ldr	lr, [r4]
   142b0:	ldr	r4, [sp, #32]
   142b4:	str	ip, [sp, #16]
   142b8:	str	r4, [sp, #8]
   142bc:	ldr	r4, [sp, #36]	; 0x24
   142c0:	str	r5, [sp, #12]
   142c4:	str	r4, [sp, #4]
   142c8:	str	lr, [sp]
   142cc:	mov	r7, r0
   142d0:	bl	12968 <__snprintf_chk@plt+0x15c4>
   142d4:	ldr	r3, [sp, #24]
   142d8:	mov	r0, r7
   142dc:	str	r3, [r8]
   142e0:	add	sp, sp, #44	; 0x2c
   142e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142e8:	mov	r0, #0
   142ec:	bl	14f74 <__snprintf_chk@plt+0x3bd0>
   142f0:	ldr	r3, [pc, #32]	; 14318 <__snprintf_chk@plt+0x2f74>
   142f4:	mov	r5, r0
   142f8:	ldm	r3, {r0, r1}
   142fc:	str	r5, [r7]
   14300:	stm	r5, {r0, r1}
   14304:	b	141f0 <__snprintf_chk@plt+0x2e4c>
   14308:	bl	15160 <__snprintf_chk@plt+0x3dbc>
   1430c:	bl	11398 <abort@plt>
   14310:	andeq	r7, r2, r4, lsr r1
   14314:	andeq	r7, r2, r4, ror #6
   14318:	andeq	r7, r2, ip, lsr r1
   1431c:	push	{r4, r5, r6, lr}
   14320:	mov	r5, r0
   14324:	bl	11290 <__errno_location@plt>
   14328:	cmp	r5, #0
   1432c:	mov	r1, #48	; 0x30
   14330:	mov	r4, r0
   14334:	ldr	r0, [pc, #16]	; 1434c <__snprintf_chk@plt+0x2fa8>
   14338:	ldr	r6, [r4]
   1433c:	movne	r0, r5
   14340:	bl	15120 <__snprintf_chk@plt+0x3d7c>
   14344:	str	r6, [r4]
   14348:	pop	{r4, r5, r6, pc}
   1434c:	andeq	r7, r2, r4, ror #8
   14350:	ldr	r3, [pc, #12]	; 14364 <__snprintf_chk@plt+0x2fc0>
   14354:	cmp	r0, #0
   14358:	moveq	r0, r3
   1435c:	ldr	r0, [r0]
   14360:	bx	lr
   14364:	andeq	r7, r2, r4, ror #8
   14368:	ldr	r3, [pc, #12]	; 1437c <__snprintf_chk@plt+0x2fd8>
   1436c:	cmp	r0, #0
   14370:	moveq	r0, r3
   14374:	str	r1, [r0]
   14378:	bx	lr
   1437c:	andeq	r7, r2, r4, ror #8
   14380:	ldr	r3, [pc, #52]	; 143bc <__snprintf_chk@plt+0x3018>
   14384:	cmp	r0, #0
   14388:	moveq	r0, r3
   1438c:	add	r3, r0, #8
   14390:	push	{lr}		; (str lr, [sp, #-4]!)
   14394:	lsr	lr, r1, #5
   14398:	and	r1, r1, #31
   1439c:	ldr	ip, [r3, lr, lsl #2]
   143a0:	lsr	r0, ip, r1
   143a4:	eor	r2, r2, r0
   143a8:	and	r2, r2, #1
   143ac:	and	r0, r0, #1
   143b0:	eor	r1, ip, r2, lsl r1
   143b4:	str	r1, [r3, lr, lsl #2]
   143b8:	pop	{pc}		; (ldr pc, [sp], #4)
   143bc:	andeq	r7, r2, r4, ror #8
   143c0:	ldr	r3, [pc, #16]	; 143d8 <__snprintf_chk@plt+0x3034>
   143c4:	cmp	r0, #0
   143c8:	movne	r3, r0
   143cc:	ldr	r0, [r3, #4]
   143d0:	str	r1, [r3, #4]
   143d4:	bx	lr
   143d8:	andeq	r7, r2, r4, ror #8
   143dc:	ldr	r3, [pc, #44]	; 14410 <__snprintf_chk@plt+0x306c>
   143e0:	cmp	r0, #0
   143e4:	moveq	r0, r3
   143e8:	mov	ip, #10
   143ec:	cmp	r2, #0
   143f0:	cmpne	r1, #0
   143f4:	str	ip, [r0]
   143f8:	beq	14408 <__snprintf_chk@plt+0x3064>
   143fc:	str	r1, [r0, #40]	; 0x28
   14400:	str	r2, [r0, #44]	; 0x2c
   14404:	bx	lr
   14408:	push	{r4, lr}
   1440c:	bl	11398 <abort@plt>
   14410:	andeq	r7, r2, r4, ror #8
   14414:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14418:	sub	sp, sp, #24
   1441c:	ldr	ip, [pc, #108]	; 14490 <__snprintf_chk@plt+0x30ec>
   14420:	ldr	r4, [sp, #56]	; 0x38
   14424:	mov	r9, r2
   14428:	cmp	r4, #0
   1442c:	moveq	r4, ip
   14430:	mov	sl, r3
   14434:	mov	r7, r0
   14438:	mov	r8, r1
   1443c:	bl	11290 <__errno_location@plt>
   14440:	ldr	r3, [r4, #44]	; 0x2c
   14444:	mov	r1, r8
   14448:	ldr	r6, [r0]
   1444c:	str	r3, [sp, #16]
   14450:	ldr	r2, [r4, #40]	; 0x28
   14454:	add	r3, r4, #8
   14458:	str	r3, [sp, #8]
   1445c:	str	r2, [sp, #12]
   14460:	ldr	r2, [r4, #4]
   14464:	mov	r5, r0
   14468:	str	r2, [sp, #4]
   1446c:	ldr	ip, [r4]
   14470:	mov	r3, sl
   14474:	mov	r2, r9
   14478:	mov	r0, r7
   1447c:	str	ip, [sp]
   14480:	bl	12968 <__snprintf_chk@plt+0x15c4>
   14484:	str	r6, [r5]
   14488:	add	sp, sp, #24
   1448c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14490:	andeq	r7, r2, r4, ror #8
   14494:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14498:	cmp	r3, #0
   1449c:	sub	sp, sp, #44	; 0x2c
   144a0:	ldr	r4, [pc, #192]	; 14568 <__snprintf_chk@plt+0x31c4>
   144a4:	mov	r6, r2
   144a8:	movne	r4, r3
   144ac:	mov	r9, r1
   144b0:	mov	r8, r0
   144b4:	bl	11290 <__errno_location@plt>
   144b8:	ldr	r3, [r4, #44]	; 0x2c
   144bc:	ldr	r5, [r4, #4]
   144c0:	add	sl, r4, #8
   144c4:	cmp	r6, #0
   144c8:	orreq	r5, r5, #1
   144cc:	mov	r1, #0
   144d0:	ldr	r2, [r0]
   144d4:	str	r3, [sp, #16]
   144d8:	ldr	r3, [r4, #40]	; 0x28
   144dc:	stmib	sp, {r5, sl}
   144e0:	str	r3, [sp, #12]
   144e4:	ldr	r3, [r4]
   144e8:	mov	r7, r0
   144ec:	str	r2, [sp, #28]
   144f0:	str	r3, [sp]
   144f4:	mov	r2, r8
   144f8:	mov	r3, r9
   144fc:	mov	r0, r1
   14500:	bl	12968 <__snprintf_chk@plt+0x15c4>
   14504:	add	r1, r0, #1
   14508:	mov	fp, r0
   1450c:	mov	r0, r1
   14510:	str	r1, [sp, #36]	; 0x24
   14514:	bl	14f18 <__snprintf_chk@plt+0x3b74>
   14518:	ldr	r3, [r4, #44]	; 0x2c
   1451c:	mov	r2, r8
   14520:	str	r3, [sp, #16]
   14524:	ldr	r3, [r4, #40]	; 0x28
   14528:	str	r5, [sp, #4]
   1452c:	str	r3, [sp, #12]
   14530:	str	sl, [sp, #8]
   14534:	ldr	ip, [r4]
   14538:	ldr	r1, [sp, #36]	; 0x24
   1453c:	mov	r3, r9
   14540:	str	ip, [sp]
   14544:	str	r0, [sp, #32]
   14548:	bl	12968 <__snprintf_chk@plt+0x15c4>
   1454c:	ldr	r2, [sp, #28]
   14550:	cmp	r6, #0
   14554:	str	r2, [r7]
   14558:	ldr	r0, [sp, #32]
   1455c:	strne	fp, [r6]
   14560:	add	sp, sp, #44	; 0x2c
   14564:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14568:	andeq	r7, r2, r4, ror #8
   1456c:	mov	r3, r2
   14570:	mov	r2, #0
   14574:	b	14494 <__snprintf_chk@plt+0x30f0>
   14578:	push	{r4, r5, r6, r7, r8, lr}
   1457c:	ldr	r6, [pc, #112]	; 145f4 <__snprintf_chk@plt+0x3250>
   14580:	ldr	r3, [r6, #4]
   14584:	ldr	r7, [r6]
   14588:	cmp	r3, #1
   1458c:	ble	145b0 <__snprintf_chk@plt+0x320c>
   14590:	sub	r5, r7, #8
   14594:	add	r5, r5, r3, lsl #3
   14598:	mov	r4, r7
   1459c:	ldr	r0, [r4, #12]
   145a0:	add	r4, r4, #8
   145a4:	bl	110d4 <free@plt>
   145a8:	cmp	r4, r5
   145ac:	bne	1459c <__snprintf_chk@plt+0x31f8>
   145b0:	ldr	r0, [r7, #4]
   145b4:	ldr	r4, [pc, #60]	; 145f8 <__snprintf_chk@plt+0x3254>
   145b8:	cmp	r0, r4
   145bc:	beq	145d0 <__snprintf_chk@plt+0x322c>
   145c0:	bl	110d4 <free@plt>
   145c4:	mov	r3, #256	; 0x100
   145c8:	str	r4, [r6, #12]
   145cc:	str	r3, [r6, #8]
   145d0:	ldr	r4, [pc, #36]	; 145fc <__snprintf_chk@plt+0x3258>
   145d4:	cmp	r7, r4
   145d8:	beq	145e8 <__snprintf_chk@plt+0x3244>
   145dc:	mov	r0, r7
   145e0:	bl	110d4 <free@plt>
   145e4:	str	r4, [r6]
   145e8:	mov	r3, #1
   145ec:	str	r3, [r6, #4]
   145f0:	pop	{r4, r5, r6, r7, r8, pc}
   145f4:	andeq	r7, r2, r4, lsr r1
   145f8:	andeq	r7, r2, r4, ror #6
   145fc:	andeq	r7, r2, ip, lsr r1
   14600:	ldr	r3, [pc, #4]	; 1460c <__snprintf_chk@plt+0x3268>
   14604:	mvn	r2, #0
   14608:	b	14180 <__snprintf_chk@plt+0x2ddc>
   1460c:	andeq	r7, r2, r4, ror #8
   14610:	ldr	r3, [pc]	; 14618 <__snprintf_chk@plt+0x3274>
   14614:	b	14180 <__snprintf_chk@plt+0x2ddc>
   14618:	andeq	r7, r2, r4, ror #8
   1461c:	mov	r1, r0
   14620:	ldr	r3, [pc, #8]	; 14630 <__snprintf_chk@plt+0x328c>
   14624:	mvn	r2, #0
   14628:	mov	r0, #0
   1462c:	b	14180 <__snprintf_chk@plt+0x2ddc>
   14630:	andeq	r7, r2, r4, ror #8
   14634:	mov	r2, r1
   14638:	ldr	r3, [pc, #8]	; 14648 <__snprintf_chk@plt+0x32a4>
   1463c:	mov	r1, r0
   14640:	mov	r0, #0
   14644:	b	14180 <__snprintf_chk@plt+0x2ddc>
   14648:	andeq	r7, r2, r4, ror #8
   1464c:	push	{r4, r5, r6, lr}
   14650:	sub	sp, sp, #56	; 0x38
   14654:	ldr	r4, [pc, #68]	; 146a0 <__snprintf_chk@plt+0x32fc>
   14658:	mov	r6, r2
   1465c:	mov	r5, r0
   14660:	ldr	r3, [r4]
   14664:	add	r0, sp, #4
   14668:	str	r3, [sp, #52]	; 0x34
   1466c:	bl	127f8 <__snprintf_chk@plt+0x1454>
   14670:	add	r3, sp, #4
   14674:	mvn	r2, #0
   14678:	mov	r1, r6
   1467c:	mov	r0, r5
   14680:	bl	14180 <__snprintf_chk@plt+0x2ddc>
   14684:	ldr	r2, [sp, #52]	; 0x34
   14688:	ldr	r3, [r4]
   1468c:	cmp	r2, r3
   14690:	bne	1469c <__snprintf_chk@plt+0x32f8>
   14694:	add	sp, sp, #56	; 0x38
   14698:	pop	{r4, r5, r6, pc}
   1469c:	bl	11134 <__stack_chk_fail@plt>
   146a0:	strdeq	r6, [r2], -r8
   146a4:	push	{r4, r5, r6, r7, lr}
   146a8:	sub	sp, sp, #60	; 0x3c
   146ac:	ldr	r4, [pc, #72]	; 146fc <__snprintf_chk@plt+0x3358>
   146b0:	mov	r6, r2
   146b4:	mov	r7, r3
   146b8:	ldr	ip, [r4]
   146bc:	mov	r5, r0
   146c0:	add	r0, sp, #4
   146c4:	str	ip, [sp, #52]	; 0x34
   146c8:	bl	127f8 <__snprintf_chk@plt+0x1454>
   146cc:	add	r3, sp, #4
   146d0:	mov	r2, r7
   146d4:	mov	r1, r6
   146d8:	mov	r0, r5
   146dc:	bl	14180 <__snprintf_chk@plt+0x2ddc>
   146e0:	ldr	r2, [sp, #52]	; 0x34
   146e4:	ldr	r3, [r4]
   146e8:	cmp	r2, r3
   146ec:	bne	146f8 <__snprintf_chk@plt+0x3354>
   146f0:	add	sp, sp, #60	; 0x3c
   146f4:	pop	{r4, r5, r6, r7, pc}
   146f8:	bl	11134 <__stack_chk_fail@plt>
   146fc:	strdeq	r6, [r2], -r8
   14700:	mov	r2, r1
   14704:	mov	r1, r0
   14708:	mov	r0, #0
   1470c:	b	1464c <__snprintf_chk@plt+0x32a8>
   14710:	mov	r3, r2
   14714:	mov	r2, r1
   14718:	mov	r1, r0
   1471c:	mov	r0, #0
   14720:	b	146a4 <__snprintf_chk@plt+0x3300>
   14724:	push	{r4, r5, r6, r7, r8, r9, lr}
   14728:	mov	r4, r2
   1472c:	ldr	lr, [pc, #128]	; 147b4 <__snprintf_chk@plt+0x3410>
   14730:	mov	r8, r0
   14734:	mov	r9, r1
   14738:	ldm	lr!, {r0, r1, r2, r3}
   1473c:	sub	sp, sp, #60	; 0x3c
   14740:	add	ip, sp, #4
   14744:	lsr	r6, r4, #5
   14748:	stmia	ip!, {r0, r1, r2, r3}
   1474c:	add	r7, sp, #12
   14750:	ldm	lr!, {r0, r1, r2, r3}
   14754:	and	r4, r4, #31
   14758:	ldr	r5, [pc, #88]	; 147b8 <__snprintf_chk@plt+0x3414>
   1475c:	stmia	ip!, {r0, r1, r2, r3}
   14760:	ldm	lr, {r0, r1, r2, r3}
   14764:	stm	ip, {r0, r1, r2, r3}
   14768:	mov	r2, r9
   1476c:	ldr	r3, [r7, r6, lsl #2]
   14770:	ldr	ip, [r5]
   14774:	mov	r1, r8
   14778:	mvn	r0, r3, lsr r4
   1477c:	and	r0, r0, #1
   14780:	str	ip, [sp, #52]	; 0x34
   14784:	eor	r4, r3, r0, lsl r4
   14788:	add	r3, sp, #4
   1478c:	mov	r0, #0
   14790:	str	r4, [r7, r6, lsl #2]
   14794:	bl	14180 <__snprintf_chk@plt+0x2ddc>
   14798:	ldr	r2, [sp, #52]	; 0x34
   1479c:	ldr	r3, [r5]
   147a0:	cmp	r2, r3
   147a4:	bne	147b0 <__snprintf_chk@plt+0x340c>
   147a8:	add	sp, sp, #60	; 0x3c
   147ac:	pop	{r4, r5, r6, r7, r8, r9, pc}
   147b0:	bl	11134 <__stack_chk_fail@plt>
   147b4:	andeq	r7, r2, r4, ror #8
   147b8:	strdeq	r6, [r2], -r8
   147bc:	mov	r2, r1
   147c0:	mvn	r1, #0
   147c4:	b	14724 <__snprintf_chk@plt+0x3380>
   147c8:	mov	r2, #58	; 0x3a
   147cc:	mvn	r1, #0
   147d0:	b	14724 <__snprintf_chk@plt+0x3380>
   147d4:	mov	r2, #58	; 0x3a
   147d8:	b	14724 <__snprintf_chk@plt+0x3380>
   147dc:	push	{r4, r5, r6, r7, r8, lr}
   147e0:	sub	sp, sp, #104	; 0x68
   147e4:	ldr	r5, [pc, #120]	; 14864 <__snprintf_chk@plt+0x34c0>
   147e8:	mov	r6, r0
   147ec:	mov	r0, sp
   147f0:	ldr	r3, [r5]
   147f4:	mov	r7, r2
   147f8:	str	r3, [sp, #100]	; 0x64
   147fc:	bl	127f8 <__snprintf_chk@plt+0x1454>
   14800:	mov	ip, sp
   14804:	add	lr, sp, #52	; 0x34
   14808:	ldm	ip!, {r0, r1, r2, r3}
   1480c:	stmia	lr!, {r0, r1, r2, r3}
   14810:	ldm	ip!, {r0, r1, r2, r3}
   14814:	ldr	r8, [sp, #64]	; 0x40
   14818:	stmia	lr!, {r0, r1, r2, r3}
   1481c:	mvn	r4, r8
   14820:	ldm	ip, {r0, r1, r2, r3}
   14824:	and	ip, r4, #67108864	; 0x4000000
   14828:	eor	ip, ip, r8
   1482c:	str	ip, [sp, #64]	; 0x40
   14830:	stm	lr, {r0, r1, r2, r3}
   14834:	add	r3, sp, #52	; 0x34
   14838:	mvn	r2, #0
   1483c:	mov	r1, r7
   14840:	mov	r0, r6
   14844:	bl	14180 <__snprintf_chk@plt+0x2ddc>
   14848:	ldr	r2, [sp, #100]	; 0x64
   1484c:	ldr	r3, [r5]
   14850:	cmp	r2, r3
   14854:	bne	14860 <__snprintf_chk@plt+0x34bc>
   14858:	add	sp, sp, #104	; 0x68
   1485c:	pop	{r4, r5, r6, r7, r8, pc}
   14860:	bl	11134 <__stack_chk_fail@plt>
   14864:	strdeq	r6, [r2], -r8
   14868:	push	{r4, r5, r6, r7, r8, r9, lr}
   1486c:	mov	r6, r1
   14870:	ldr	lr, [pc, #132]	; 148fc <__snprintf_chk@plt+0x3558>
   14874:	mov	r5, r2
   14878:	mov	r8, r0
   1487c:	mov	r9, r3
   14880:	ldm	lr!, {r0, r1, r2, r3}
   14884:	sub	sp, sp, #60	; 0x3c
   14888:	add	ip, sp, #4
   1488c:	ldr	r4, [pc, #108]	; 14900 <__snprintf_chk@plt+0x355c>
   14890:	stmia	ip!, {r0, r1, r2, r3}
   14894:	mov	r7, #10
   14898:	ldm	lr!, {r0, r1, r2, r3}
   1489c:	cmp	r5, #0
   148a0:	cmpne	r6, #0
   148a4:	str	r7, [sp, #4]
   148a8:	stmia	ip!, {r0, r1, r2, r3}
   148ac:	ldm	lr, {r0, r1, r2, r3}
   148b0:	ldr	lr, [r4]
   148b4:	stm	ip, {r0, r1, r2, r3}
   148b8:	str	lr, [sp, #52]	; 0x34
   148bc:	beq	148f8 <__snprintf_chk@plt+0x3554>
   148c0:	add	r3, sp, #4
   148c4:	ldr	r2, [sp, #88]	; 0x58
   148c8:	mov	r1, r9
   148cc:	mov	r0, r8
   148d0:	str	r6, [sp, #44]	; 0x2c
   148d4:	str	r5, [sp, #48]	; 0x30
   148d8:	bl	14180 <__snprintf_chk@plt+0x2ddc>
   148dc:	ldr	r2, [sp, #52]	; 0x34
   148e0:	ldr	r3, [r4]
   148e4:	cmp	r2, r3
   148e8:	bne	148f4 <__snprintf_chk@plt+0x3550>
   148ec:	add	sp, sp, #60	; 0x3c
   148f0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   148f4:	bl	11134 <__stack_chk_fail@plt>
   148f8:	bl	11398 <abort@plt>
   148fc:	andeq	r7, r2, r4, ror #8
   14900:	strdeq	r6, [r2], -r8
   14904:	push	{lr}		; (str lr, [sp, #-4]!)
   14908:	sub	sp, sp, #12
   1490c:	mvn	ip, #0
   14910:	str	ip, [sp]
   14914:	bl	14868 <__snprintf_chk@plt+0x34c4>
   14918:	add	sp, sp, #12
   1491c:	pop	{pc}		; (ldr pc, [sp], #4)
   14920:	push	{lr}		; (str lr, [sp, #-4]!)
   14924:	sub	sp, sp, #12
   14928:	mvn	ip, #0
   1492c:	mov	r3, r2
   14930:	str	ip, [sp]
   14934:	mov	r2, r1
   14938:	mov	r1, r0
   1493c:	mov	r0, #0
   14940:	bl	14868 <__snprintf_chk@plt+0x34c4>
   14944:	add	sp, sp, #12
   14948:	pop	{pc}		; (ldr pc, [sp], #4)
   1494c:	push	{lr}		; (str lr, [sp, #-4]!)
   14950:	sub	sp, sp, #12
   14954:	str	r3, [sp]
   14958:	mov	r3, r2
   1495c:	mov	r2, r1
   14960:	mov	r1, r0
   14964:	mov	r0, #0
   14968:	bl	14868 <__snprintf_chk@plt+0x34c4>
   1496c:	add	sp, sp, #12
   14970:	pop	{pc}		; (ldr pc, [sp], #4)
   14974:	ldr	r3, [pc]	; 1497c <__snprintf_chk@plt+0x35d8>
   14978:	b	14180 <__snprintf_chk@plt+0x2ddc>
   1497c:	andeq	r7, r2, r4, asr #2
   14980:	mov	r2, r1
   14984:	ldr	r3, [pc, #8]	; 14994 <__snprintf_chk@plt+0x35f0>
   14988:	mov	r1, r0
   1498c:	mov	r0, #0
   14990:	b	14180 <__snprintf_chk@plt+0x2ddc>
   14994:	andeq	r7, r2, r4, asr #2
   14998:	ldr	r3, [pc, #4]	; 149a4 <__snprintf_chk@plt+0x3600>
   1499c:	mvn	r2, #0
   149a0:	b	14180 <__snprintf_chk@plt+0x2ddc>
   149a4:	andeq	r7, r2, r4, asr #2
   149a8:	mov	r1, r0
   149ac:	ldr	r3, [pc, #8]	; 149bc <__snprintf_chk@plt+0x3618>
   149b0:	mvn	r2, #0
   149b4:	mov	r0, #0
   149b8:	b	14180 <__snprintf_chk@plt+0x2ddc>
   149bc:	andeq	r7, r2, r4, asr #2
   149c0:	push	{r4, r5, r6, lr}
   149c4:	sub	sp, sp, #32
   149c8:	cmp	r1, #0
   149cc:	mov	r5, r0
   149d0:	ldr	r4, [sp, #48]	; 0x30
   149d4:	ldr	r6, [sp, #52]	; 0x34
   149d8:	beq	14a68 <__snprintf_chk@plt+0x36c4>
   149dc:	strd	r2, [sp]
   149e0:	mov	r3, r1
   149e4:	ldr	r2, [pc, #828]	; 14d28 <__snprintf_chk@plt+0x3984>
   149e8:	mov	r1, #1
   149ec:	bl	112f0 <__fprintf_chk@plt>
   149f0:	mov	r2, #5
   149f4:	ldr	r1, [pc, #816]	; 14d2c <__snprintf_chk@plt+0x3988>
   149f8:	mov	r0, #0
   149fc:	bl	11128 <dcgettext@plt>
   14a00:	ldr	r3, [pc, #808]	; 14d30 <__snprintf_chk@plt+0x398c>
   14a04:	ldr	r2, [pc, #808]	; 14d34 <__snprintf_chk@plt+0x3990>
   14a08:	str	r3, [sp]
   14a0c:	mov	r1, #1
   14a10:	mov	r3, r0
   14a14:	mov	r0, r5
   14a18:	bl	112f0 <__fprintf_chk@plt>
   14a1c:	ldr	r1, [pc, #788]	; 14d38 <__snprintf_chk@plt+0x3994>
   14a20:	mov	r2, #5
   14a24:	mov	r0, #0
   14a28:	bl	11128 <dcgettext@plt>
   14a2c:	mov	r1, r5
   14a30:	bl	1108c <fputs_unlocked@plt>
   14a34:	cmp	r6, #9
   14a38:	ldrls	pc, [pc, r6, lsl #2]
   14a3c:	b	14d18 <__snprintf_chk@plt+0x3974>
   14a40:	andeq	r4, r1, r4, lsr #26
   14a44:	andeq	r4, r1, ip, ror #21
   14a48:	andeq	r4, r1, r8, lsl fp
   14a4c:	andeq	r4, r1, ip, asr #22
   14a50:	andeq	r4, r1, r8, lsl #23
   14a54:	andeq	r4, r1, r8, asr #23
   14a58:	andeq	r4, r1, r0, lsl ip
   14a5c:	andeq	r4, r1, r0, ror #24
   14a60:			; <UNDEFINED> instruction: 0x00014cb8
   14a64:	andeq	r4, r1, r0, lsl #21
   14a68:	str	r3, [sp]
   14a6c:	mov	r1, #1
   14a70:	mov	r3, r2
   14a74:	ldr	r2, [pc, #704]	; 14d3c <__snprintf_chk@plt+0x3998>
   14a78:	bl	112f0 <__fprintf_chk@plt>
   14a7c:	b	149f0 <__snprintf_chk@plt+0x364c>
   14a80:	ldr	r1, [pc, #696]	; 14d40 <__snprintf_chk@plt+0x399c>
   14a84:	mov	r2, #5
   14a88:	mov	r0, #0
   14a8c:	bl	11128 <dcgettext@plt>
   14a90:	ldr	r2, [r4, #32]
   14a94:	ldr	r3, [r4, #28]
   14a98:	ldr	r1, [r4, #24]
   14a9c:	str	r2, [sp, #28]
   14aa0:	ldr	r2, [r4, #20]
   14aa4:	str	r3, [sp, #24]
   14aa8:	ldr	r3, [r4, #16]
   14aac:	str	r1, [sp, #20]
   14ab0:	ldr	r1, [r4, #12]
   14ab4:	str	r2, [sp, #16]
   14ab8:	ldr	r2, [r4, #8]
   14abc:	str	r3, [sp, #12]
   14ac0:	ldr	r3, [r4, #4]
   14ac4:	str	r1, [sp, #8]
   14ac8:	str	r2, [sp, #4]
   14acc:	str	r3, [sp]
   14ad0:	mov	r1, #1
   14ad4:	ldr	r3, [r4]
   14ad8:	mov	r2, r0
   14adc:	mov	r0, r5
   14ae0:	bl	112f0 <__fprintf_chk@plt>
   14ae4:	add	sp, sp, #32
   14ae8:	pop	{r4, r5, r6, pc}
   14aec:	mov	r2, #5
   14af0:	ldr	r1, [pc, #588]	; 14d44 <__snprintf_chk@plt+0x39a0>
   14af4:	mov	r0, #0
   14af8:	bl	11128 <dcgettext@plt>
   14afc:	ldr	r3, [r4]
   14b00:	mov	r1, #1
   14b04:	mov	r2, r0
   14b08:	mov	r0, r5
   14b0c:	add	sp, sp, #32
   14b10:	pop	{r4, r5, r6, lr}
   14b14:	b	112f0 <__fprintf_chk@plt>
   14b18:	mov	r2, #5
   14b1c:	ldr	r1, [pc, #548]	; 14d48 <__snprintf_chk@plt+0x39a4>
   14b20:	mov	r0, #0
   14b24:	bl	11128 <dcgettext@plt>
   14b28:	ldr	r2, [r4, #4]
   14b2c:	ldr	r3, [r4]
   14b30:	mov	r1, #1
   14b34:	str	r2, [sp, #48]	; 0x30
   14b38:	mov	r2, r0
   14b3c:	mov	r0, r5
   14b40:	add	sp, sp, #32
   14b44:	pop	{r4, r5, r6, lr}
   14b48:	b	112f0 <__fprintf_chk@plt>
   14b4c:	mov	r2, #5
   14b50:	ldr	r1, [pc, #500]	; 14d4c <__snprintf_chk@plt+0x39a8>
   14b54:	mov	r0, #0
   14b58:	bl	11128 <dcgettext@plt>
   14b5c:	ldr	r2, [r4, #8]
   14b60:	ldr	r3, [r4, #4]
   14b64:	mov	r1, #1
   14b68:	str	r2, [sp, #52]	; 0x34
   14b6c:	str	r3, [sp, #48]	; 0x30
   14b70:	ldr	r3, [r4]
   14b74:	mov	r2, r0
   14b78:	mov	r0, r5
   14b7c:	add	sp, sp, #32
   14b80:	pop	{r4, r5, r6, lr}
   14b84:	b	112f0 <__fprintf_chk@plt>
   14b88:	mov	r2, #5
   14b8c:	ldr	r1, [pc, #444]	; 14d50 <__snprintf_chk@plt+0x39ac>
   14b90:	mov	r0, #0
   14b94:	bl	11128 <dcgettext@plt>
   14b98:	ldr	r1, [r4, #12]
   14b9c:	ldr	r2, [r4, #8]
   14ba0:	ldr	r3, [r4, #4]
   14ba4:	str	r1, [sp, #8]
   14ba8:	str	r2, [sp, #4]
   14bac:	str	r3, [sp]
   14bb0:	mov	r1, #1
   14bb4:	ldr	r3, [r4]
   14bb8:	mov	r2, r0
   14bbc:	mov	r0, r5
   14bc0:	bl	112f0 <__fprintf_chk@plt>
   14bc4:	b	14ae4 <__snprintf_chk@plt+0x3740>
   14bc8:	mov	r2, #5
   14bcc:	ldr	r1, [pc, #384]	; 14d54 <__snprintf_chk@plt+0x39b0>
   14bd0:	mov	r0, #0
   14bd4:	bl	11128 <dcgettext@plt>
   14bd8:	ldr	r3, [r4, #16]
   14bdc:	ldr	r1, [r4, #12]
   14be0:	ldr	r2, [r4, #8]
   14be4:	str	r3, [sp, #12]
   14be8:	ldr	r3, [r4, #4]
   14bec:	str	r1, [sp, #8]
   14bf0:	str	r2, [sp, #4]
   14bf4:	str	r3, [sp]
   14bf8:	mov	r1, #1
   14bfc:	ldr	r3, [r4]
   14c00:	mov	r2, r0
   14c04:	mov	r0, r5
   14c08:	bl	112f0 <__fprintf_chk@plt>
   14c0c:	b	14ae4 <__snprintf_chk@plt+0x3740>
   14c10:	mov	r2, #5
   14c14:	ldr	r1, [pc, #316]	; 14d58 <__snprintf_chk@plt+0x39b4>
   14c18:	mov	r0, #0
   14c1c:	bl	11128 <dcgettext@plt>
   14c20:	ldr	r2, [r4, #20]
   14c24:	ldr	r3, [r4, #16]
   14c28:	ldr	r1, [r4, #12]
   14c2c:	str	r2, [sp, #16]
   14c30:	ldr	r2, [r4, #8]
   14c34:	str	r3, [sp, #12]
   14c38:	ldr	r3, [r4, #4]
   14c3c:	str	r1, [sp, #8]
   14c40:	str	r2, [sp, #4]
   14c44:	str	r3, [sp]
   14c48:	mov	r1, #1
   14c4c:	ldr	r3, [r4]
   14c50:	mov	r2, r0
   14c54:	mov	r0, r5
   14c58:	bl	112f0 <__fprintf_chk@plt>
   14c5c:	b	14ae4 <__snprintf_chk@plt+0x3740>
   14c60:	mov	r2, #5
   14c64:	ldr	r1, [pc, #240]	; 14d5c <__snprintf_chk@plt+0x39b8>
   14c68:	mov	r0, #0
   14c6c:	bl	11128 <dcgettext@plt>
   14c70:	ldr	r1, [r4, #24]
   14c74:	ldr	r2, [r4, #20]
   14c78:	ldr	r3, [r4, #16]
   14c7c:	str	r1, [sp, #20]
   14c80:	ldr	r1, [r4, #12]
   14c84:	str	r2, [sp, #16]
   14c88:	ldr	r2, [r4, #8]
   14c8c:	str	r3, [sp, #12]
   14c90:	ldr	r3, [r4, #4]
   14c94:	str	r1, [sp, #8]
   14c98:	str	r2, [sp, #4]
   14c9c:	str	r3, [sp]
   14ca0:	mov	r1, #1
   14ca4:	ldr	r3, [r4]
   14ca8:	mov	r2, r0
   14cac:	mov	r0, r5
   14cb0:	bl	112f0 <__fprintf_chk@plt>
   14cb4:	b	14ae4 <__snprintf_chk@plt+0x3740>
   14cb8:	mov	r2, #5
   14cbc:	ldr	r1, [pc, #156]	; 14d60 <__snprintf_chk@plt+0x39bc>
   14cc0:	mov	r0, #0
   14cc4:	bl	11128 <dcgettext@plt>
   14cc8:	ldr	r3, [r4, #28]
   14ccc:	ldr	r1, [r4, #24]
   14cd0:	ldr	r2, [r4, #20]
   14cd4:	str	r3, [sp, #24]
   14cd8:	ldr	r3, [r4, #16]
   14cdc:	str	r1, [sp, #20]
   14ce0:	ldr	r1, [r4, #12]
   14ce4:	str	r2, [sp, #16]
   14ce8:	ldr	r2, [r4, #8]
   14cec:	str	r3, [sp, #12]
   14cf0:	ldr	r3, [r4, #4]
   14cf4:	str	r1, [sp, #8]
   14cf8:	str	r2, [sp, #4]
   14cfc:	str	r3, [sp]
   14d00:	mov	r1, #1
   14d04:	ldr	r3, [r4]
   14d08:	mov	r2, r0
   14d0c:	mov	r0, r5
   14d10:	bl	112f0 <__fprintf_chk@plt>
   14d14:	b	14ae4 <__snprintf_chk@plt+0x3740>
   14d18:	mov	r2, #5
   14d1c:	ldr	r1, [pc, #64]	; 14d64 <__snprintf_chk@plt+0x39c0>
   14d20:	b	14a88 <__snprintf_chk@plt+0x36e4>
   14d24:	bl	11398 <abort@plt>
   14d28:	ldrdeq	r6, [r1], -r0
   14d2c:	andeq	r6, r1, r4, ror #13
   14d30:	andeq	r0, r0, r2, ror #15
   14d34:			; <UNDEFINED> instruction: 0x000169b8
   14d38:	andeq	r6, r1, r8, ror #13
   14d3c:	ldrdeq	r6, [r1], -ip
   14d40:	andeq	r6, r1, r0, asr #17
   14d44:			; <UNDEFINED> instruction: 0x000167b4
   14d48:	andeq	r6, r1, r4, asr #15
   14d4c:	ldrdeq	r6, [r1], -ip
   14d50:	strdeq	r6, [r1], -r8
   14d54:	andeq	r6, r1, r8, lsl r8
   14d58:	andeq	r6, r1, ip, lsr r8
   14d5c:	andeq	r6, r1, r4, ror #16
   14d60:	muleq	r1, r0, r8
   14d64:	strdeq	r6, [r1], -r4
   14d68:	push	{r4, r5, lr}
   14d6c:	sub	sp, sp, #12
   14d70:	ldr	r5, [sp, #24]
   14d74:	ldr	ip, [r5]
   14d78:	cmp	ip, #0
   14d7c:	beq	14d98 <__snprintf_chk@plt+0x39f4>
   14d80:	mov	lr, r5
   14d84:	mov	ip, #0
   14d88:	ldr	r4, [lr, #4]!
   14d8c:	add	ip, ip, #1
   14d90:	cmp	r4, #0
   14d94:	bne	14d88 <__snprintf_chk@plt+0x39e4>
   14d98:	stm	sp, {r5, ip}
   14d9c:	bl	149c0 <__snprintf_chk@plt+0x361c>
   14da0:	add	sp, sp, #12
   14da4:	pop	{r4, r5, pc}
   14da8:	push	{r4, r5, r6, lr}
   14dac:	sub	sp, sp, #56	; 0x38
   14db0:	ldr	r6, [pc, #88]	; 14e10 <__snprintf_chk@plt+0x3a6c>
   14db4:	ldr	r5, [sp, #72]	; 0x48
   14db8:	add	r4, sp, #8
   14dbc:	ldr	ip, [r6]
   14dc0:	str	ip, [sp, #52]	; 0x34
   14dc4:	mov	ip, #0
   14dc8:	ldr	lr, [r5], #4
   14dcc:	cmp	lr, #0
   14dd0:	str	lr, [r4, #4]!
   14dd4:	beq	14de4 <__snprintf_chk@plt+0x3a40>
   14dd8:	add	ip, ip, #1
   14ddc:	cmp	ip, #10
   14de0:	bne	14dc8 <__snprintf_chk@plt+0x3a24>
   14de4:	add	lr, sp, #12
   14de8:	str	ip, [sp, #4]
   14dec:	str	lr, [sp]
   14df0:	bl	149c0 <__snprintf_chk@plt+0x361c>
   14df4:	ldr	r2, [sp, #52]	; 0x34
   14df8:	ldr	r3, [r6]
   14dfc:	cmp	r2, r3
   14e00:	bne	14e0c <__snprintf_chk@plt+0x3a68>
   14e04:	add	sp, sp, #56	; 0x38
   14e08:	pop	{r4, r5, r6, pc}
   14e0c:	bl	11134 <__stack_chk_fail@plt>
   14e10:	strdeq	r6, [r2], -r8
   14e14:	push	{r3}		; (str r3, [sp, #-4]!)
   14e18:	mov	ip, #0
   14e1c:	push	{r4, r5, r6, lr}
   14e20:	sub	sp, sp, #60	; 0x3c
   14e24:	ldr	r6, [pc, #100]	; 14e90 <__snprintf_chk@plt+0x3aec>
   14e28:	add	r5, sp, #8
   14e2c:	add	r4, sp, #80	; 0x50
   14e30:	ldr	r3, [r6]
   14e34:	str	r4, [sp, #8]
   14e38:	str	r3, [sp, #52]	; 0x34
   14e3c:	ldr	r3, [sp, #76]	; 0x4c
   14e40:	ldr	lr, [r4], #4
   14e44:	cmp	lr, #0
   14e48:	str	lr, [r5, #4]!
   14e4c:	beq	14e5c <__snprintf_chk@plt+0x3ab8>
   14e50:	add	ip, ip, #1
   14e54:	cmp	ip, #10
   14e58:	bne	14e40 <__snprintf_chk@plt+0x3a9c>
   14e5c:	add	lr, sp, #12
   14e60:	str	ip, [sp, #4]
   14e64:	str	lr, [sp]
   14e68:	bl	149c0 <__snprintf_chk@plt+0x361c>
   14e6c:	ldr	r2, [sp, #52]	; 0x34
   14e70:	ldr	r3, [r6]
   14e74:	cmp	r2, r3
   14e78:	bne	14e8c <__snprintf_chk@plt+0x3ae8>
   14e7c:	add	sp, sp, #60	; 0x3c
   14e80:	pop	{r4, r5, r6, lr}
   14e84:	add	sp, sp, #4
   14e88:	bx	lr
   14e8c:	bl	11134 <__stack_chk_fail@plt>
   14e90:	strdeq	r6, [r2], -r8
   14e94:	push	{r4, lr}
   14e98:	mov	r2, #5
   14e9c:	ldr	r1, [pc, #88]	; 14efc <__snprintf_chk@plt+0x3b58>
   14ea0:	mov	r0, #0
   14ea4:	bl	11128 <dcgettext@plt>
   14ea8:	ldr	r2, [pc, #80]	; 14f00 <__snprintf_chk@plt+0x3b5c>
   14eac:	mov	r1, r0
   14eb0:	mov	r0, #1
   14eb4:	bl	112cc <__printf_chk@plt>
   14eb8:	mov	r2, #5
   14ebc:	ldr	r1, [pc, #64]	; 14f04 <__snprintf_chk@plt+0x3b60>
   14ec0:	mov	r0, #0
   14ec4:	bl	11128 <dcgettext@plt>
   14ec8:	ldr	r3, [pc, #56]	; 14f08 <__snprintf_chk@plt+0x3b64>
   14ecc:	ldr	r2, [pc, #56]	; 14f0c <__snprintf_chk@plt+0x3b68>
   14ed0:	mov	r1, r0
   14ed4:	mov	r0, #1
   14ed8:	bl	112cc <__printf_chk@plt>
   14edc:	ldr	r1, [pc, #44]	; 14f10 <__snprintf_chk@plt+0x3b6c>
   14ee0:	mov	r2, #5
   14ee4:	mov	r0, #0
   14ee8:	bl	11128 <dcgettext@plt>
   14eec:	ldr	r3, [pc, #32]	; 14f14 <__snprintf_chk@plt+0x3b70>
   14ef0:	pop	{r4, lr}
   14ef4:	ldr	r1, [r3]
   14ef8:	b	1108c <fputs_unlocked@plt>
   14efc:	andeq	r6, r1, r0, lsr r9
   14f00:	andeq	r6, r1, r8, asr #18
   14f04:	andeq	r6, r1, r0, ror #18
   14f08:	ldrdeq	r6, [r1], -r8
   14f0c:	andeq	r6, r1, r0, lsl #6
   14f10:	andeq	r6, r1, r4, ror r9
   14f14:	andeq	r7, r2, ip, lsr #6
   14f18:	push	{r4, lr}
   14f1c:	mov	r4, r0
   14f20:	bl	11200 <malloc@plt>
   14f24:	adds	r4, r4, #0
   14f28:	movne	r4, #1
   14f2c:	cmp	r0, #0
   14f30:	movne	r4, #0
   14f34:	cmp	r4, #0
   14f38:	popeq	{r4, pc}
   14f3c:	bl	15160 <__snprintf_chk@plt+0x3dbc>
   14f40:	push	{r4, r5, r6, lr}
   14f44:	umull	r4, r5, r0, r1
   14f48:	adds	r3, r5, #0
   14f4c:	movne	r3, #1
   14f50:	cmp	r4, #0
   14f54:	blt	14f6c <__snprintf_chk@plt+0x3bc8>
   14f58:	cmp	r3, #0
   14f5c:	bne	14f6c <__snprintf_chk@plt+0x3bc8>
   14f60:	mul	r0, r1, r0
   14f64:	pop	{r4, r5, r6, lr}
   14f68:	b	14f18 <__snprintf_chk@plt+0x3b74>
   14f6c:	bl	15160 <__snprintf_chk@plt+0x3dbc>
   14f70:	b	14f18 <__snprintf_chk@plt+0x3b74>
   14f74:	adds	r3, r0, #0
   14f78:	movne	r3, #1
   14f7c:	cmp	r1, #0
   14f80:	movne	r3, #0
   14f84:	cmp	r3, #0
   14f88:	push	{r4, lr}
   14f8c:	bne	14fb4 <__snprintf_chk@plt+0x3c10>
   14f90:	mov	r4, r1
   14f94:	bl	1114c <realloc@plt>
   14f98:	adds	r4, r4, #0
   14f9c:	movne	r4, #1
   14fa0:	cmp	r0, #0
   14fa4:	movne	r4, #0
   14fa8:	cmp	r4, #0
   14fac:	popeq	{r4, pc}
   14fb0:	bl	15160 <__snprintf_chk@plt+0x3dbc>
   14fb4:	bl	110d4 <free@plt>
   14fb8:	mov	r0, #0
   14fbc:	pop	{r4, pc}
   14fc0:	push	{r4, r5, r6, lr}
   14fc4:	umull	r4, r5, r1, r2
   14fc8:	adds	r3, r5, #0
   14fcc:	movne	r3, #1
   14fd0:	cmp	r4, #0
   14fd4:	blt	14fec <__snprintf_chk@plt+0x3c48>
   14fd8:	cmp	r3, #0
   14fdc:	bne	14fec <__snprintf_chk@plt+0x3c48>
   14fe0:	mul	r1, r2, r1
   14fe4:	pop	{r4, r5, r6, lr}
   14fe8:	b	14f74 <__snprintf_chk@plt+0x3bd0>
   14fec:	bl	15160 <__snprintf_chk@plt+0x3dbc>
   14ff0:	push	{r4, r5, r6, r7, r8, lr}
   14ff4:	subs	r7, r0, #0
   14ff8:	mov	r6, r1
   14ffc:	mov	r5, r2
   15000:	ldr	r4, [r1]
   15004:	beq	15038 <__snprintf_chk@plt+0x3c94>
   15008:	mov	r1, r2
   1500c:	ldr	r0, [pc, #104]	; 1507c <__snprintf_chk@plt+0x3cd8>
   15010:	bl	15810 <__snprintf_chk@plt+0x446c>
   15014:	cmp	r0, r4
   15018:	bls	1505c <__snprintf_chk@plt+0x3cb8>
   1501c:	add	r3, r4, #1
   15020:	add	r4, r3, r4, lsr #1
   15024:	str	r4, [r6]
   15028:	mul	r1, r5, r4
   1502c:	mov	r0, r7
   15030:	pop	{r4, r5, r6, r7, r8, lr}
   15034:	b	14f74 <__snprintf_chk@plt+0x3bd0>
   15038:	cmp	r4, #0
   1503c:	beq	15060 <__snprintf_chk@plt+0x3cbc>
   15040:	umull	r0, r1, r4, r5
   15044:	adds	r3, r1, #0
   15048:	movne	r3, #1
   1504c:	cmp	r0, #0
   15050:	blt	1505c <__snprintf_chk@plt+0x3cb8>
   15054:	cmp	r3, #0
   15058:	beq	15024 <__snprintf_chk@plt+0x3c80>
   1505c:	bl	15160 <__snprintf_chk@plt+0x3dbc>
   15060:	mov	r1, r2
   15064:	mov	r0, #64	; 0x40
   15068:	bl	15810 <__snprintf_chk@plt+0x446c>
   1506c:	cmp	r5, #64	; 0x40
   15070:	movls	r4, r0
   15074:	addhi	r4, r0, #1
   15078:	b	15040 <__snprintf_chk@plt+0x3c9c>
   1507c:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   15080:	cmp	r0, #0
   15084:	ldr	r3, [r1]
   15088:	beq	150ac <__snprintf_chk@plt+0x3d08>
   1508c:	ldr	r2, [pc, #60]	; 150d0 <__snprintf_chk@plt+0x3d2c>
   15090:	cmp	r3, r2
   15094:	bhi	150c8 <__snprintf_chk@plt+0x3d24>
   15098:	add	r2, r3, #1
   1509c:	add	r3, r2, r3, lsr #1
   150a0:	str	r3, [r1]
   150a4:	mov	r1, r3
   150a8:	b	14f74 <__snprintf_chk@plt+0x3bd0>
   150ac:	cmp	r3, #0
   150b0:	bne	150c4 <__snprintf_chk@plt+0x3d20>
   150b4:	mov	r3, #64	; 0x40
   150b8:	str	r3, [r1]
   150bc:	mov	r1, r3
   150c0:	b	14f74 <__snprintf_chk@plt+0x3bd0>
   150c4:	bge	150a0 <__snprintf_chk@plt+0x3cfc>
   150c8:	push	{r4, lr}
   150cc:	bl	15160 <__snprintf_chk@plt+0x3dbc>
   150d0:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   150d4:	push	{r4, lr}
   150d8:	mov	r4, r0
   150dc:	bl	14f18 <__snprintf_chk@plt+0x3b74>
   150e0:	mov	r2, r4
   150e4:	mov	r1, #0
   150e8:	pop	{r4, lr}
   150ec:	b	112b4 <memset@plt>
   150f0:	push	{r4, r5, r6, lr}
   150f4:	umull	r4, r5, r0, r1
   150f8:	adds	r3, r5, #0
   150fc:	movne	r3, #1
   15100:	cmp	r4, #0
   15104:	blt	1511c <__snprintf_chk@plt+0x3d78>
   15108:	cmp	r3, #0
   1510c:	bne	1511c <__snprintf_chk@plt+0x3d78>
   15110:	bl	11080 <calloc@plt>
   15114:	cmp	r0, #0
   15118:	popne	{r4, r5, r6, pc}
   1511c:	bl	15160 <__snprintf_chk@plt+0x3dbc>
   15120:	push	{r4, r5, r6, lr}
   15124:	mov	r4, r1
   15128:	mov	r5, r0
   1512c:	mov	r0, r1
   15130:	bl	14f18 <__snprintf_chk@plt+0x3b74>
   15134:	mov	r2, r4
   15138:	mov	r1, r5
   1513c:	pop	{r4, r5, r6, lr}
   15140:	b	110ec <memcpy@plt>
   15144:	push	{r4, lr}
   15148:	mov	r4, r0
   1514c:	bl	1126c <strlen@plt>
   15150:	add	r1, r0, #1
   15154:	mov	r0, r4
   15158:	pop	{r4, lr}
   1515c:	b	15120 <__snprintf_chk@plt+0x3d7c>
   15160:	ldr	r3, [pc, #44]	; 15194 <__snprintf_chk@plt+0x3df0>
   15164:	push	{r4, lr}
   15168:	mov	r2, #5
   1516c:	ldr	r1, [pc, #36]	; 15198 <__snprintf_chk@plt+0x3df4>
   15170:	mov	r0, #0
   15174:	ldr	r4, [r3]
   15178:	bl	11128 <dcgettext@plt>
   1517c:	ldr	r2, [pc, #24]	; 1519c <__snprintf_chk@plt+0x3df8>
   15180:	mov	r1, #0
   15184:	mov	r3, r0
   15188:	mov	r0, r4
   1518c:	bl	111e8 <error@plt>
   15190:	bl	11398 <abort@plt>
   15194:	andeq	r7, r2, r0, lsr r1
   15198:	andeq	r6, r1, r8, ror #19
   1519c:			; <UNDEFINED> instruction: 0x000165b0
   151a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   151a4:	mov	r5, r1
   151a8:	ldr	r6, [pc, #184]	; 15268 <__snprintf_chk@plt+0x3ec4>
   151ac:	sub	sp, sp, #8
   151b0:	mov	r7, r0
   151b4:	ldr	r1, [r6]
   151b8:	mov	sl, r3
   151bc:	mov	r9, r2
   151c0:	str	r1, [sp, #4]
   151c4:	bl	11290 <__errno_location@plt>
   151c8:	mov	r4, #0
   151cc:	mov	r1, sp
   151d0:	str	r4, [r0]
   151d4:	mov	r8, r0
   151d8:	mov	r0, r7
   151dc:	blx	sl
   151e0:	ldr	r3, [sp]
   151e4:	cmp	r3, r7
   151e8:	beq	1525c <__snprintf_chk@plt+0x3eb8>
   151ec:	cmp	r5, r4
   151f0:	beq	15238 <__snprintf_chk@plt+0x3e94>
   151f4:	vcmp.f64	d0, #0.0
   151f8:	vmrs	APSR_nzcv, fpscr
   151fc:	moveq	r0, #1
   15200:	beq	15218 <__snprintf_chk@plt+0x3e74>
   15204:	ldr	r0, [r8]
   15208:	subs	r0, r0, #34	; 0x22
   1520c:	movne	r0, #1
   15210:	cmp	r5, #0
   15214:	beq	1521c <__snprintf_chk@plt+0x3e78>
   15218:	str	r3, [r5]
   1521c:	ldr	r2, [sp, #4]
   15220:	ldr	r3, [r6]
   15224:	vstr	d0, [r9]
   15228:	cmp	r2, r3
   1522c:	bne	15264 <__snprintf_chk@plt+0x3ec0>
   15230:	add	sp, sp, #8
   15234:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15238:	ldrb	r2, [r3]
   1523c:	cmp	r2, r4
   15240:	movne	r0, r5
   15244:	bne	1521c <__snprintf_chk@plt+0x3e78>
   15248:	vcmp.f64	d0, #0.0
   1524c:	vmrs	APSR_nzcv, fpscr
   15250:	moveq	r0, #1
   15254:	bne	15204 <__snprintf_chk@plt+0x3e60>
   15258:	b	1521c <__snprintf_chk@plt+0x3e78>
   1525c:	mov	r0, r4
   15260:	b	15210 <__snprintf_chk@plt+0x3e6c>
   15264:	bl	11134 <__stack_chk_fail@plt>
   15268:	strdeq	r6, [r2], -r8
   1526c:	push	{r4, r5, r6, r7, r8, lr}
   15270:	subs	r7, r0, #0
   15274:	ldr	r5, [pc, #108]	; 152e8 <__snprintf_chk@plt+0x3f44>
   15278:	sub	sp, sp, #8
   1527c:	mov	r8, r1
   15280:	ldr	r1, [r5]
   15284:	moveq	r7, sp
   15288:	str	r1, [sp, #4]
   1528c:	mov	r0, r7
   15290:	mov	r1, r8
   15294:	mov	r6, r2
   15298:	bl	111dc <mbrtowc@plt>
   1529c:	cmp	r6, #0
   152a0:	cmnne	r0, #3
   152a4:	mov	r4, r0
   152a8:	bhi	152c8 <__snprintf_chk@plt+0x3f24>
   152ac:	ldr	r2, [sp, #4]
   152b0:	ldr	r3, [r5]
   152b4:	mov	r0, r4
   152b8:	cmp	r2, r3
   152bc:	bne	152e4 <__snprintf_chk@plt+0x3f40>
   152c0:	add	sp, sp, #8
   152c4:	pop	{r4, r5, r6, r7, r8, pc}
   152c8:	mov	r0, #0
   152cc:	bl	155f0 <__snprintf_chk@plt+0x424c>
   152d0:	cmp	r0, #0
   152d4:	moveq	r4, #1
   152d8:	ldrbeq	r3, [r8]
   152dc:	streq	r3, [r7]
   152e0:	b	152ac <__snprintf_chk@plt+0x3f08>
   152e4:	bl	11134 <__stack_chk_fail@plt>
   152e8:	strdeq	r6, [r2], -r8
   152ec:	push	{r4, r5, r6, r7, r8, lr}
   152f0:	sub	sp, sp, #8
   152f4:	ldr	r5, [pc, #380]	; 15478 <__snprintf_chk@plt+0x40d4>
   152f8:	ldrb	r3, [r0]
   152fc:	mov	r6, r1
   15300:	ldr	r2, [r5]
   15304:	sub	r3, r3, #48	; 0x30
   15308:	cmp	r3, #9
   1530c:	str	r2, [sp, #4]
   15310:	bls	15374 <__snprintf_chk@plt+0x3fd0>
   15314:	mov	r8, r0
   15318:	ldr	r7, [pc, #348]	; 1547c <__snprintf_chk@plt+0x40d8>
   1531c:	mov	r4, #0
   15320:	b	15334 <__snprintf_chk@plt+0x3f90>
   15324:	add	r4, r4, #1
   15328:	cmp	r4, #35	; 0x23
   1532c:	add	r7, r7, #12
   15330:	beq	153a4 <__snprintf_chk@plt+0x4000>
   15334:	mov	r1, r8
   15338:	mov	r0, r7
   1533c:	bl	110a4 <strcmp@plt>
   15340:	cmp	r0, #0
   15344:	bne	15324 <__snprintf_chk@plt+0x3f80>
   15348:	ldr	r3, [pc, #304]	; 15480 <__snprintf_chk@plt+0x40dc>
   1534c:	add	r4, r4, r4, lsl #1
   15350:	ldr	r4, [r3, r4, lsl #2]
   15354:	asr	r0, r4, #31
   15358:	str	r4, [r6]
   1535c:	ldr	r2, [sp, #4]
   15360:	ldr	r3, [r5]
   15364:	cmp	r2, r3
   15368:	bne	15474 <__snprintf_chk@plt+0x40d0>
   1536c:	add	sp, sp, #8
   15370:	pop	{r4, r5, r6, r7, r8, pc}
   15374:	mov	r2, #10
   15378:	mov	r1, sp
   1537c:	bl	110b0 <strtol@plt>
   15380:	ldr	r2, [sp]
   15384:	ldrb	r2, [r2]
   15388:	cmp	r0, #64	; 0x40
   1538c:	cmple	r2, #0
   15390:	mov	r4, r0
   15394:	beq	15354 <__snprintf_chk@plt+0x3fb0>
   15398:	mvn	r0, #0
   1539c:	str	r0, [r6]
   153a0:	b	1535c <__snprintf_chk@plt+0x3fb8>
   153a4:	bl	11380 <__libc_current_sigrtmin@plt>
   153a8:	mov	r7, r0
   153ac:	bl	11278 <__libc_current_sigrtmax@plt>
   153b0:	cmp	r7, #0
   153b4:	mov	r4, r0
   153b8:	ble	153d4 <__snprintf_chk@plt+0x4030>
   153bc:	mov	r2, #5
   153c0:	ldr	r1, [pc, #188]	; 15484 <__snprintf_chk@plt+0x40e0>
   153c4:	mov	r0, r8
   153c8:	bl	1138c <strncmp@plt>
   153cc:	cmp	r0, #0
   153d0:	beq	1543c <__snprintf_chk@plt+0x4098>
   153d4:	cmp	r4, #0
   153d8:	ble	15398 <__snprintf_chk@plt+0x3ff4>
   153dc:	mov	r2, #5
   153e0:	ldr	r1, [pc, #160]	; 15488 <__snprintf_chk@plt+0x40e4>
   153e4:	mov	r0, r8
   153e8:	bl	1138c <strncmp@plt>
   153ec:	cmp	r0, #0
   153f0:	bne	15398 <__snprintf_chk@plt+0x3ff4>
   153f4:	add	r0, r8, #5
   153f8:	mov	r2, #10
   153fc:	mov	r1, sp
   15400:	bl	110b0 <strtol@plt>
   15404:	ldr	r3, [sp]
   15408:	ldrb	r3, [r3]
   1540c:	cmp	r3, #0
   15410:	bne	15398 <__snprintf_chk@plt+0x3ff4>
   15414:	sub	r3, r7, r4
   15418:	cmp	r0, r3
   1541c:	movlt	r7, #0
   15420:	movge	r7, #1
   15424:	cmp	r0, #0
   15428:	movgt	r7, #0
   1542c:	cmp	r7, #0
   15430:	beq	15398 <__snprintf_chk@plt+0x3ff4>
   15434:	add	r4, r4, r0
   15438:	b	15354 <__snprintf_chk@plt+0x3fb0>
   1543c:	add	r0, r8, #5
   15440:	mov	r2, #10
   15444:	mov	r1, sp
   15448:	bl	110b0 <strtol@plt>
   1544c:	ldr	r3, [sp]
   15450:	ldrb	r3, [r3]
   15454:	cmp	r0, #0
   15458:	cmpge	r3, #0
   1545c:	bne	15398 <__snprintf_chk@plt+0x3ff4>
   15460:	sub	r3, r4, r7
   15464:	cmp	r0, r3
   15468:	bgt	15398 <__snprintf_chk@plt+0x3ff4>
   1546c:	add	r4, r7, r0
   15470:	b	15354 <__snprintf_chk@plt+0x3fb0>
   15474:	bl	11134 <__stack_chk_fail@plt>
   15478:	strdeq	r6, [r2], -r8
   1547c:	andeq	r7, r2, r8, ror r1
   15480:	andeq	r7, r2, r4, ror r1
   15484:	strdeq	r6, [r1], -ip
   15488:	andeq	r6, r1, r4, lsl #20
   1548c:	push	{r4, r5, r6, lr}
   15490:	mov	r3, #0
   15494:	ldr	lr, [pc, #208]	; 1556c <__snprintf_chk@plt+0x41c8>
   15498:	sub	sp, sp, #8
   1549c:	mov	r4, r0
   154a0:	mov	r5, r1
   154a4:	mov	r2, lr
   154a8:	b	154b8 <__snprintf_chk@plt+0x4114>
   154ac:	add	r3, r3, #1
   154b0:	cmp	r3, #35	; 0x23
   154b4:	beq	154e8 <__snprintf_chk@plt+0x4144>
   154b8:	ldr	ip, [r2]
   154bc:	add	r2, r2, #12
   154c0:	cmp	ip, r4
   154c4:	bne	154ac <__snprintf_chk@plt+0x4108>
   154c8:	add	r3, r3, r3, lsl #1
   154cc:	mov	r0, r5
   154d0:	add	r3, lr, r3, lsl #2
   154d4:	add	r1, r3, #4
   154d8:	bl	111c4 <strcpy@plt>
   154dc:	mov	r0, #0
   154e0:	add	sp, sp, #8
   154e4:	pop	{r4, r5, r6, pc}
   154e8:	bl	11380 <__libc_current_sigrtmin@plt>
   154ec:	mov	r6, r0
   154f0:	bl	11278 <__libc_current_sigrtmax@plt>
   154f4:	cmp	r4, r0
   154f8:	movle	r3, #0
   154fc:	movgt	r3, #1
   15500:	cmp	r4, r6
   15504:	orrlt	r3, r3, #1
   15508:	cmp	r3, #0
   1550c:	bne	15564 <__snprintf_chk@plt+0x41c0>
   15510:	sub	r3, r0, r6
   15514:	add	r3, r6, r3, asr #1
   15518:	cmp	r3, r4
   1551c:	movlt	r6, r0
   15520:	ldrge	r3, [pc, #72]	; 15570 <__snprintf_chk@plt+0x41cc>
   15524:	ldrlt	r3, [pc, #72]	; 15574 <__snprintf_chk@plt+0x41d0>
   15528:	ldr	r0, [r3]
   1552c:	ldrh	r2, [r3, #4]
   15530:	str	r0, [r5]
   15534:	subs	r0, r4, r6
   15538:	strh	r2, [r5, #4]
   1553c:	beq	154e0 <__snprintf_chk@plt+0x413c>
   15540:	str	r0, [sp]
   15544:	ldr	r3, [pc, #44]	; 15578 <__snprintf_chk@plt+0x41d4>
   15548:	add	r0, r5, #5
   1554c:	mvn	r2, #0
   15550:	mov	r1, #1
   15554:	bl	1129c <__sprintf_chk@plt>
   15558:	mov	r0, #0
   1555c:	add	sp, sp, #8
   15560:	pop	{r4, r5, r6, pc}
   15564:	mvn	r0, #0
   15568:	b	154e0 <__snprintf_chk@plt+0x413c>
   1556c:	andeq	r7, r2, r4, ror r1
   15570:	strdeq	r6, [r1], -ip
   15574:	andeq	r6, r1, r4, lsl #20
   15578:	andeq	r6, r1, ip, lsl #20
   1557c:	push	{r4, r5, r6, lr}
   15580:	mov	r4, r0
   15584:	bl	111d0 <__fpending@plt>
   15588:	ldr	r5, [r4]
   1558c:	and	r5, r5, #32
   15590:	mov	r6, r0
   15594:	mov	r0, r4
   15598:	bl	15670 <__snprintf_chk@plt+0x42cc>
   1559c:	cmp	r5, #0
   155a0:	mov	r4, r0
   155a4:	bne	155d0 <__snprintf_chk@plt+0x422c>
   155a8:	cmp	r0, #0
   155ac:	beq	155c8 <__snprintf_chk@plt+0x4224>
   155b0:	cmp	r6, #0
   155b4:	bne	155e8 <__snprintf_chk@plt+0x4244>
   155b8:	bl	11290 <__errno_location@plt>
   155bc:	ldr	r4, [r0]
   155c0:	subs	r4, r4, #9
   155c4:	mvnne	r4, #0
   155c8:	mov	r0, r4
   155cc:	pop	{r4, r5, r6, pc}
   155d0:	cmp	r0, #0
   155d4:	bne	155e8 <__snprintf_chk@plt+0x4244>
   155d8:	bl	11290 <__errno_location@plt>
   155dc:	str	r4, [r0]
   155e0:	mvn	r4, #0
   155e4:	b	155c8 <__snprintf_chk@plt+0x4224>
   155e8:	mvn	r4, #0
   155ec:	b	155c8 <__snprintf_chk@plt+0x4224>
   155f0:	push	{r4, lr}
   155f4:	mov	r1, #0
   155f8:	bl	11320 <setlocale@plt>
   155fc:	subs	r4, r0, #0
   15600:	beq	1562c <__snprintf_chk@plt+0x4288>
   15604:	ldr	r1, [pc, #40]	; 15634 <__snprintf_chk@plt+0x4290>
   15608:	bl	110a4 <strcmp@plt>
   1560c:	cmp	r0, #0
   15610:	popeq	{r4, pc}
   15614:	mov	r0, r4
   15618:	ldr	r1, [pc, #24]	; 15638 <__snprintf_chk@plt+0x4294>
   1561c:	bl	110a4 <strcmp@plt>
   15620:	adds	r0, r0, #0
   15624:	movne	r0, #1
   15628:	pop	{r4, pc}
   1562c:	mov	r0, #1
   15630:	pop	{r4, pc}
   15634:	muleq	r1, ip, r5
   15638:	andeq	r6, r1, r0, lsl sl
   1563c:	push	{r4, lr}
   15640:	mov	r0, #14
   15644:	bl	11350 <nl_langinfo@plt>
   15648:	cmp	r0, #0
   1564c:	beq	15664 <__snprintf_chk@plt+0x42c0>
   15650:	ldrb	r2, [r0]
   15654:	ldr	r3, [pc, #16]	; 1566c <__snprintf_chk@plt+0x42c8>
   15658:	cmp	r2, #0
   1565c:	moveq	r0, r3
   15660:	pop	{r4, pc}
   15664:	ldr	r0, [pc]	; 1566c <__snprintf_chk@plt+0x42c8>
   15668:	pop	{r4, pc}
   1566c:	andeq	r6, r1, r8, lsl sl
   15670:	push	{r4, r5, lr}
   15674:	sub	sp, sp, #12
   15678:	mov	r4, r0
   1567c:	bl	112e4 <fileno@plt>
   15680:	cmp	r0, #0
   15684:	mov	r0, r4
   15688:	blt	15704 <__snprintf_chk@plt+0x4360>
   1568c:	bl	11224 <__freading@plt>
   15690:	cmp	r0, #0
   15694:	bne	156d0 <__snprintf_chk@plt+0x432c>
   15698:	mov	r0, r4
   1569c:	bl	15710 <__snprintf_chk@plt+0x436c>
   156a0:	cmp	r0, #0
   156a4:	beq	15700 <__snprintf_chk@plt+0x435c>
   156a8:	bl	11290 <__errno_location@plt>
   156ac:	mov	r5, r0
   156b0:	mov	r0, r4
   156b4:	ldr	r4, [r5]
   156b8:	bl	112fc <fclose@plt>
   156bc:	cmp	r4, #0
   156c0:	mvnne	r0, #0
   156c4:	strne	r4, [r5]
   156c8:	add	sp, sp, #12
   156cc:	pop	{r4, r5, pc}
   156d0:	mov	r0, r4
   156d4:	bl	112e4 <fileno@plt>
   156d8:	mov	r3, #1
   156dc:	str	r3, [sp]
   156e0:	mov	r2, #0
   156e4:	mov	r3, #0
   156e8:	bl	111a0 <lseek64@plt>
   156ec:	mvn	r3, #0
   156f0:	mvn	r2, #0
   156f4:	cmp	r1, r3
   156f8:	cmpeq	r0, r2
   156fc:	bne	15698 <__snprintf_chk@plt+0x42f4>
   15700:	mov	r0, r4
   15704:	add	sp, sp, #12
   15708:	pop	{r4, r5, lr}
   1570c:	b	112fc <fclose@plt>
   15710:	push	{r4, lr}
   15714:	subs	r4, r0, #0
   15718:	sub	sp, sp, #8
   1571c:	beq	15738 <__snprintf_chk@plt+0x4394>
   15720:	bl	11224 <__freading@plt>
   15724:	cmp	r0, #0
   15728:	beq	15738 <__snprintf_chk@plt+0x4394>
   1572c:	ldr	r3, [r4]
   15730:	tst	r3, #256	; 0x100
   15734:	bne	15748 <__snprintf_chk@plt+0x43a4>
   15738:	mov	r0, r4
   1573c:	add	sp, sp, #8
   15740:	pop	{r4, lr}
   15744:	b	110bc <fflush@plt>
   15748:	mov	r3, #1
   1574c:	str	r3, [sp]
   15750:	mov	r2, #0
   15754:	mov	r3, #0
   15758:	mov	r0, r4
   1575c:	bl	15770 <__snprintf_chk@plt+0x43cc>
   15760:	mov	r0, r4
   15764:	add	sp, sp, #8
   15768:	pop	{r4, lr}
   1576c:	b	110bc <fflush@plt>
   15770:	push	{r4, r5, r6, r7, r8, lr}
   15774:	sub	sp, sp, #8
   15778:	ldmib	r0, {ip, lr}
   1577c:	mov	r4, r0
   15780:	ldr	r5, [sp, #32]
   15784:	cmp	lr, ip
   15788:	beq	157a0 <__snprintf_chk@plt+0x43fc>
   1578c:	str	r5, [sp, #32]
   15790:	mov	r0, r4
   15794:	add	sp, sp, #8
   15798:	pop	{r4, r5, r6, r7, r8, lr}
   1579c:	b	11308 <fseeko64@plt>
   157a0:	ldr	lr, [r0, #20]
   157a4:	ldr	ip, [r0, #16]
   157a8:	cmp	lr, ip
   157ac:	bne	1578c <__snprintf_chk@plt+0x43e8>
   157b0:	ldr	r8, [r0, #36]	; 0x24
   157b4:	cmp	r8, #0
   157b8:	bne	1578c <__snprintf_chk@plt+0x43e8>
   157bc:	mov	r6, r2
   157c0:	mov	r7, r3
   157c4:	bl	112e4 <fileno@plt>
   157c8:	mov	r2, r6
   157cc:	mov	r3, r7
   157d0:	str	r5, [sp]
   157d4:	bl	111a0 <lseek64@plt>
   157d8:	mvn	r3, #0
   157dc:	mvn	r2, #0
   157e0:	cmp	r1, r3
   157e4:	cmpeq	r0, r2
   157e8:	beq	15808 <__snprintf_chk@plt+0x4464>
   157ec:	ldr	r3, [r4]
   157f0:	strd	r0, [r4, #80]	; 0x50
   157f4:	mov	r0, r8
   157f8:	bic	r3, r3, #16
   157fc:	str	r3, [r4]
   15800:	add	sp, sp, #8
   15804:	pop	{r4, r5, r6, r7, r8, pc}
   15808:	mvn	r0, #0
   1580c:	b	15800 <__snprintf_chk@plt+0x445c>
   15810:	subs	r2, r1, #1
   15814:	bxeq	lr
   15818:	bcc	159f0 <__snprintf_chk@plt+0x464c>
   1581c:	cmp	r0, r1
   15820:	bls	159d4 <__snprintf_chk@plt+0x4630>
   15824:	tst	r1, r2
   15828:	beq	159e0 <__snprintf_chk@plt+0x463c>
   1582c:	clz	r3, r0
   15830:	clz	r2, r1
   15834:	sub	r3, r2, r3
   15838:	rsbs	r3, r3, #31
   1583c:	addne	r3, r3, r3, lsl #1
   15840:	mov	r2, #0
   15844:	addne	pc, pc, r3, lsl #2
   15848:	nop			; (mov r0, r0)
   1584c:	cmp	r0, r1, lsl #31
   15850:	adc	r2, r2, r2
   15854:	subcs	r0, r0, r1, lsl #31
   15858:	cmp	r0, r1, lsl #30
   1585c:	adc	r2, r2, r2
   15860:	subcs	r0, r0, r1, lsl #30
   15864:	cmp	r0, r1, lsl #29
   15868:	adc	r2, r2, r2
   1586c:	subcs	r0, r0, r1, lsl #29
   15870:	cmp	r0, r1, lsl #28
   15874:	adc	r2, r2, r2
   15878:	subcs	r0, r0, r1, lsl #28
   1587c:	cmp	r0, r1, lsl #27
   15880:	adc	r2, r2, r2
   15884:	subcs	r0, r0, r1, lsl #27
   15888:	cmp	r0, r1, lsl #26
   1588c:	adc	r2, r2, r2
   15890:	subcs	r0, r0, r1, lsl #26
   15894:	cmp	r0, r1, lsl #25
   15898:	adc	r2, r2, r2
   1589c:	subcs	r0, r0, r1, lsl #25
   158a0:	cmp	r0, r1, lsl #24
   158a4:	adc	r2, r2, r2
   158a8:	subcs	r0, r0, r1, lsl #24
   158ac:	cmp	r0, r1, lsl #23
   158b0:	adc	r2, r2, r2
   158b4:	subcs	r0, r0, r1, lsl #23
   158b8:	cmp	r0, r1, lsl #22
   158bc:	adc	r2, r2, r2
   158c0:	subcs	r0, r0, r1, lsl #22
   158c4:	cmp	r0, r1, lsl #21
   158c8:	adc	r2, r2, r2
   158cc:	subcs	r0, r0, r1, lsl #21
   158d0:	cmp	r0, r1, lsl #20
   158d4:	adc	r2, r2, r2
   158d8:	subcs	r0, r0, r1, lsl #20
   158dc:	cmp	r0, r1, lsl #19
   158e0:	adc	r2, r2, r2
   158e4:	subcs	r0, r0, r1, lsl #19
   158e8:	cmp	r0, r1, lsl #18
   158ec:	adc	r2, r2, r2
   158f0:	subcs	r0, r0, r1, lsl #18
   158f4:	cmp	r0, r1, lsl #17
   158f8:	adc	r2, r2, r2
   158fc:	subcs	r0, r0, r1, lsl #17
   15900:	cmp	r0, r1, lsl #16
   15904:	adc	r2, r2, r2
   15908:	subcs	r0, r0, r1, lsl #16
   1590c:	cmp	r0, r1, lsl #15
   15910:	adc	r2, r2, r2
   15914:	subcs	r0, r0, r1, lsl #15
   15918:	cmp	r0, r1, lsl #14
   1591c:	adc	r2, r2, r2
   15920:	subcs	r0, r0, r1, lsl #14
   15924:	cmp	r0, r1, lsl #13
   15928:	adc	r2, r2, r2
   1592c:	subcs	r0, r0, r1, lsl #13
   15930:	cmp	r0, r1, lsl #12
   15934:	adc	r2, r2, r2
   15938:	subcs	r0, r0, r1, lsl #12
   1593c:	cmp	r0, r1, lsl #11
   15940:	adc	r2, r2, r2
   15944:	subcs	r0, r0, r1, lsl #11
   15948:	cmp	r0, r1, lsl #10
   1594c:	adc	r2, r2, r2
   15950:	subcs	r0, r0, r1, lsl #10
   15954:	cmp	r0, r1, lsl #9
   15958:	adc	r2, r2, r2
   1595c:	subcs	r0, r0, r1, lsl #9
   15960:	cmp	r0, r1, lsl #8
   15964:	adc	r2, r2, r2
   15968:	subcs	r0, r0, r1, lsl #8
   1596c:	cmp	r0, r1, lsl #7
   15970:	adc	r2, r2, r2
   15974:	subcs	r0, r0, r1, lsl #7
   15978:	cmp	r0, r1, lsl #6
   1597c:	adc	r2, r2, r2
   15980:	subcs	r0, r0, r1, lsl #6
   15984:	cmp	r0, r1, lsl #5
   15988:	adc	r2, r2, r2
   1598c:	subcs	r0, r0, r1, lsl #5
   15990:	cmp	r0, r1, lsl #4
   15994:	adc	r2, r2, r2
   15998:	subcs	r0, r0, r1, lsl #4
   1599c:	cmp	r0, r1, lsl #3
   159a0:	adc	r2, r2, r2
   159a4:	subcs	r0, r0, r1, lsl #3
   159a8:	cmp	r0, r1, lsl #2
   159ac:	adc	r2, r2, r2
   159b0:	subcs	r0, r0, r1, lsl #2
   159b4:	cmp	r0, r1, lsl #1
   159b8:	adc	r2, r2, r2
   159bc:	subcs	r0, r0, r1, lsl #1
   159c0:	cmp	r0, r1
   159c4:	adc	r2, r2, r2
   159c8:	subcs	r0, r0, r1
   159cc:	mov	r0, r2
   159d0:	bx	lr
   159d4:	moveq	r0, #1
   159d8:	movne	r0, #0
   159dc:	bx	lr
   159e0:	clz	r2, r1
   159e4:	rsb	r2, r2, #31
   159e8:	lsr	r0, r0, r2
   159ec:	bx	lr
   159f0:	cmp	r0, #0
   159f4:	mvnne	r0, #0
   159f8:	b	15a1c <__snprintf_chk@plt+0x4678>
   159fc:	cmp	r1, #0
   15a00:	beq	159f0 <__snprintf_chk@plt+0x464c>
   15a04:	push	{r0, r1, lr}
   15a08:	bl	15810 <__snprintf_chk@plt+0x446c>
   15a0c:	pop	{r1, r2, lr}
   15a10:	mul	r3, r2, r0
   15a14:	sub	r1, r1, r3
   15a18:	bx	lr
   15a1c:	push	{r1, lr}
   15a20:	mov	r0, #8
   15a24:	bl	11098 <raise@plt>
   15a28:	pop	{r1, pc}
   15a2c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15a30:	mov	r7, r0
   15a34:	ldr	r6, [pc, #72]	; 15a84 <__snprintf_chk@plt+0x46e0>
   15a38:	ldr	r5, [pc, #72]	; 15a88 <__snprintf_chk@plt+0x46e4>
   15a3c:	add	r6, pc, r6
   15a40:	add	r5, pc, r5
   15a44:	sub	r6, r6, r5
   15a48:	mov	r8, r1
   15a4c:	mov	r9, r2
   15a50:	bl	11060 <calloc@plt-0x20>
   15a54:	asrs	r6, r6, #2
   15a58:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15a5c:	mov	r4, #0
   15a60:	add	r4, r4, #1
   15a64:	ldr	r3, [r5], #4
   15a68:	mov	r2, r9
   15a6c:	mov	r1, r8
   15a70:	mov	r0, r7
   15a74:	blx	r3
   15a78:	cmp	r6, r4
   15a7c:	bne	15a60 <__snprintf_chk@plt+0x46bc>
   15a80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15a84:			; <UNDEFINED> instruction: 0x000114b0
   15a88:	andeq	r1, r1, r8, lsr #9
   15a8c:	bx	lr
   15a90:	ldr	r3, [pc, #12]	; 15aa4 <__snprintf_chk@plt+0x4700>
   15a94:	mov	r1, #0
   15a98:	add	r3, pc, r3
   15a9c:	ldr	r2, [r3]
   15aa0:	b	112a8 <__cxa_atexit@plt>
   15aa4:	andeq	r1, r1, r4, lsl #13

Disassembly of section .fini:

00015aa8 <.fini>:
   15aa8:	push	{r3, lr}
   15aac:	pop	{r3, pc}
