
raspbian-preinstalled/raspi-gpio:     file format elf32-littlearm


Disassembly of section .init:

000105fc <.init>:
   105fc:	push	{r3, lr}
   10600:	bl	10ef0 <abort@plt+0x7f0>
   10604:	pop	{r3, pc}

Disassembly of section .plt:

00010608 <strcmp@plt-0x14>:
   10608:	push	{lr}		; (str lr, [sp, #-4]!)
   1060c:	ldr	lr, [pc, #4]	; 10618 <strcmp@plt-0x4>
   10610:	add	lr, pc, lr
   10614:	ldr	pc, [lr, #8]!
   10618:	andeq	r3, r1, r8, ror #19

0001061c <strcmp@plt>:
   1061c:	add	ip, pc, #0, 12
   10620:	add	ip, ip, #77824	; 0x13000
   10624:	ldr	pc, [ip, #2536]!	; 0x9e8

00010628 <fopen@plt>:
   10628:	add	ip, pc, #0, 12
   1062c:	add	ip, ip, #77824	; 0x13000
   10630:	ldr	pc, [ip, #2528]!	; 0x9e0

00010634 <nanosleep@plt>:
   10634:	add	ip, pc, #0, 12
   10638:	add	ip, ip, #77824	; 0x13000
   1063c:	ldr	pc, [ip, #2520]!	; 0x9d8

00010640 <__stack_chk_fail@plt>:
   10640:	add	ip, pc, #0, 12
   10644:	add	ip, ip, #77824	; 0x13000
   10648:	ldr	pc, [ip, #2512]!	; 0x9d0

0001064c <geteuid@plt>:
   1064c:	add	ip, pc, #0, 12
   10650:	add	ip, ip, #77824	; 0x13000
   10654:	ldr	pc, [ip, #2504]!	; 0x9c8

00010658 <fread@plt>:
   10658:	add	ip, pc, #0, 12
   1065c:	add	ip, ip, #77824	; 0x13000
   10660:	ldr	pc, [ip, #2496]!	; 0x9c0

00010664 <puts@plt>:
   10664:	add	ip, pc, #0, 12
   10668:	add	ip, ip, #77824	; 0x13000
   1066c:	ldr	pc, [ip, #2488]!	; 0x9b8

00010670 <__libc_start_main@plt>:
   10670:	add	ip, pc, #0, 12
   10674:	add	ip, ip, #77824	; 0x13000
   10678:	ldr	pc, [ip, #2480]!	; 0x9b0

0001067c <strerror@plt>:
   1067c:	add	ip, pc, #0, 12
   10680:	add	ip, ip, #77824	; 0x13000
   10684:	ldr	pc, [ip, #2472]!	; 0x9a8

00010688 <__gmon_start__@plt>:
   10688:	add	ip, pc, #0, 12
   1068c:	add	ip, ip, #77824	; 0x13000
   10690:	ldr	pc, [ip, #2464]!	; 0x9a0

00010694 <open@plt>:
   10694:	add	ip, pc, #0, 12
   10698:	add	ip, ip, #77824	; 0x13000
   1069c:	ldr	pc, [ip, #2456]!	; 0x998

000106a0 <mmap@plt>:
   106a0:	add	ip, pc, #0, 12
   106a4:	add	ip, ip, #77824	; 0x13000
   106a8:	ldr	pc, [ip, #2448]!	; 0x990

000106ac <__errno_location@plt>:
   106ac:	add	ip, pc, #0, 12
   106b0:	add	ip, ip, #77824	; 0x13000
   106b4:	ldr	pc, [ip, #2440]!	; 0x988

000106b8 <__sprintf_chk@plt>:
   106b8:	add	ip, pc, #0, 12
   106bc:	add	ip, ip, #77824	; 0x13000
   106c0:	ldr	pc, [ip, #2432]!	; 0x980

000106c4 <__isoc99_sscanf@plt>:
   106c4:	add	ip, pc, #0, 12
   106c8:	add	ip, ip, #77824	; 0x13000
   106cc:	ldr	pc, [ip, #2424]!	; 0x978

000106d0 <putchar@plt>:
   106d0:	add	ip, pc, #0, 12
   106d4:	add	ip, ip, #77824	; 0x13000
   106d8:	ldr	pc, [ip, #2416]!	; 0x970

000106dc <__printf_chk@plt>:
   106dc:	add	ip, pc, #0, 12
   106e0:	add	ip, ip, #77824	; 0x13000
   106e4:	ldr	pc, [ip, #2408]!	; 0x968

000106e8 <fclose@plt>:
   106e8:	add	ip, pc, #0, 12
   106ec:	add	ip, ip, #77824	; 0x13000
   106f0:	ldr	pc, [ip, #2400]!	; 0x960

000106f4 <sprintf@plt>:
   106f4:	add	ip, pc, #0, 12
   106f8:	add	ip, ip, #77824	; 0x13000
   106fc:	ldr	pc, [ip, #2392]!	; 0x958

00010700 <abort@plt>:
   10700:	add	ip, pc, #0, 12
   10704:	add	ip, ip, #77824	; 0x13000
   10708:	ldr	pc, [ip, #2384]!	; 0x950

Disassembly of section .text:

0001070c <.text>:
   1070c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10710:	sub	sp, sp, #60	; 0x3c
   10714:	ldr	fp, [pc, #1784]	; 10e14 <abort@plt+0x714>
   10718:	mov	r3, #0
   1071c:	cmp	r0, #1
   10720:	ldr	r2, [fp]
   10724:	str	r3, [sp, #44]	; 0x2c
   10728:	str	r2, [sp, #52]	; 0x34
   1072c:	str	r3, [sp, #48]	; 0x30
   10730:	ble	10b78 <abort@plt+0x478>
   10734:	ldr	r6, [r1, #4]
   10738:	mov	r8, r0
   1073c:	mov	r7, r1
   10740:	mov	r0, r6
   10744:	ldr	r1, [pc, #1740]	; 10e18 <abort@plt+0x718>
   10748:	bl	1061c <strcmp@plt>
   1074c:	subs	r4, r0, #0
   10750:	beq	10b70 <abort@plt+0x470>
   10754:	ldr	r1, [pc, #1728]	; 10e1c <abort@plt+0x71c>
   10758:	mov	r0, r6
   1075c:	bl	1061c <strcmp@plt>
   10760:	ldr	r1, [pc, #1720]	; 10e20 <abort@plt+0x720>
   10764:	str	r0, [sp, #16]
   10768:	clz	r5, r0
   1076c:	mov	r0, r6
   10770:	bl	1061c <strcmp@plt>
   10774:	ldr	r1, [pc, #1704]	; 10e24 <abort@plt+0x724>
   10778:	lsr	r5, r5, #5
   1077c:	clz	r9, r0
   10780:	mov	sl, r0
   10784:	mov	r0, r6
   10788:	bl	1061c <strcmp@plt>
   1078c:	lsr	r9, r9, #5
   10790:	ldr	r1, [pc, #1680]	; 10e28 <abort@plt+0x728>
   10794:	orr	r2, r5, r9
   10798:	str	r2, [sp, #12]
   1079c:	clz	r3, r0
   107a0:	mov	r4, r0
   107a4:	mov	r0, r6
   107a8:	str	r3, [sp, #8]
   107ac:	bl	1061c <strcmp@plt>
   107b0:	ldr	r3, [sp, #8]
   107b4:	orr	r2, r5, r9
   107b8:	lsr	r3, r3, #5
   107bc:	cmp	r0, #0
   107c0:	movne	r1, r3
   107c4:	moveq	r1, #1
   107c8:	orrs	r2, r2, r1
   107cc:	str	r1, [sp, #8]
   107d0:	beq	10b88 <abort@plt+0x488>
   107d4:	orr	r5, r5, r3
   107d8:	cmp	r8, #3
   107dc:	movle	r5, #0
   107e0:	andgt	r5, r5, #1
   107e4:	cmp	r5, #0
   107e8:	bne	10a48 <abort@plt+0x348>
   107ec:	cmp	r8, #2
   107f0:	movgt	r3, #0
   107f4:	andle	r3, r9, #1
   107f8:	cmp	r3, #0
   107fc:	bne	10ca4 <abort@plt+0x5a4>
   10800:	cmp	r8, #2
   10804:	beq	10a18 <abort@plt+0x318>
   10808:	ldr	r6, [r7, #8]
   1080c:	cmp	r6, #0
   10810:	beq	108bc <abort@plt+0x1bc>
   10814:	ldr	sl, [pc, #1552]	; 10e2c <abort@plt+0x72c>
   10818:	mov	r5, #1
   1081c:	add	r3, sp, #40	; 0x28
   10820:	add	r2, sp, #32
   10824:	mov	r1, sl
   10828:	mov	r0, r6
   1082c:	bl	106c4 <__isoc99_sscanf@plt>
   10830:	cmp	r0, #1
   10834:	bne	10cbc <abort@plt+0x5bc>
   10838:	ldr	r3, [sp, #32]
   1083c:	cmp	r3, #53	; 0x35
   10840:	bhi	10cbc <abort@plt+0x5bc>
   10844:	ldr	r2, [sp, #40]	; 0x28
   10848:	ldrb	r2, [r6, r2]!
   1084c:	cmp	r2, #45	; 0x2d
   10850:	movne	r1, r3
   10854:	strne	r3, [sp, #36]	; 0x24
   10858:	beq	10b10 <abort@plt+0x410>
   1085c:	cmp	r3, #0
   10860:	add	r2, r3, #31
   10864:	movge	r2, r3
   10868:	add	r0, sp, #56	; 0x38
   1086c:	asr	r2, r2, #5
   10870:	rsbs	ip, r3, #0
   10874:	add	r2, r0, r2, lsl #2
   10878:	and	ip, ip, #31
   1087c:	and	lr, r3, #31
   10880:	ldr	r0, [r2, #-12]
   10884:	rsbpl	lr, ip, #0
   10888:	add	r3, r3, #1
   1088c:	orr	r0, r0, r5, lsl lr
   10890:	cmp	r3, r1
   10894:	str	r0, [r2, #-12]
   10898:	ble	1085c <abort@plt+0x15c>
   1089c:	str	r3, [sp, #32]
   108a0:	ldrb	r3, [r6]
   108a4:	cmp	r3, #0
   108a8:	beq	108bc <abort@plt+0x1bc>
   108ac:	cmp	r3, #44	; 0x2c
   108b0:	bne	10cbc <abort@plt+0x5bc>
   108b4:	adds	r6, r6, #1
   108b8:	bne	1081c <abort@plt+0x11c>
   108bc:	cmp	r8, #3
   108c0:	movgt	r9, #0
   108c4:	andle	r9, r9, #1
   108c8:	cmp	r9, #0
   108cc:	bne	10a20 <abort@plt+0x320>
   108d0:	cmp	r8, #3
   108d4:	ble	10d90 <abort@plt+0x690>
   108d8:	mvn	sl, #0
   108dc:	ldr	r9, [pc, #1356]	; 10e30 <abort@plt+0x730>
   108e0:	str	r4, [sp, #28]
   108e4:	add	r7, r7, #8
   108e8:	mov	r5, #3
   108ec:	mov	r4, sl
   108f0:	str	sl, [sp, #20]
   108f4:	ldr	r6, [r7, #4]!
   108f8:	mov	r1, r9
   108fc:	mov	r0, r6
   10900:	bl	1061c <strcmp@plt>
   10904:	cmp	r0, #0
   10908:	beq	10a58 <abort@plt+0x358>
   1090c:	ldr	r1, [pc, #1312]	; 10e34 <abort@plt+0x734>
   10910:	mov	r0, r6
   10914:	bl	1061c <strcmp@plt>
   10918:	cmp	r0, #0
   1091c:	beq	10b00 <abort@plt+0x400>
   10920:	ldr	r1, [pc, #1296]	; 10e38 <abort@plt+0x738>
   10924:	mov	r0, r6
   10928:	bl	1061c <strcmp@plt>
   1092c:	cmp	r0, #0
   10930:	beq	10b08 <abort@plt+0x408>
   10934:	ldr	r1, [pc, #1280]	; 10e3c <abort@plt+0x73c>
   10938:	mov	r0, r6
   1093c:	bl	1061c <strcmp@plt>
   10940:	cmp	r0, #0
   10944:	beq	10b68 <abort@plt+0x468>
   10948:	ldr	r1, [pc, #1264]	; 10e40 <abort@plt+0x740>
   1094c:	mov	r0, r6
   10950:	bl	1061c <strcmp@plt>
   10954:	cmp	r0, #0
   10958:	beq	10ba0 <abort@plt+0x4a0>
   1095c:	ldr	r1, [pc, #1248]	; 10e44 <abort@plt+0x744>
   10960:	mov	r0, r6
   10964:	bl	1061c <strcmp@plt>
   10968:	cmp	r0, #0
   1096c:	beq	10cd4 <abort@plt+0x5d4>
   10970:	ldr	r1, [pc, #1232]	; 10e48 <abort@plt+0x748>
   10974:	mov	r0, r6
   10978:	bl	1061c <strcmp@plt>
   1097c:	cmp	r0, #0
   10980:	beq	10d2c <abort@plt+0x62c>
   10984:	ldr	r1, [pc, #1216]	; 10e4c <abort@plt+0x74c>
   10988:	mov	r0, r6
   1098c:	bl	1061c <strcmp@plt>
   10990:	cmp	r0, #0
   10994:	beq	10d88 <abort@plt+0x688>
   10998:	ldr	r1, [pc, #1200]	; 10e50 <abort@plt+0x750>
   1099c:	mov	r0, r6
   109a0:	bl	1061c <strcmp@plt>
   109a4:	cmp	r0, #0
   109a8:	beq	10dc4 <abort@plt+0x6c4>
   109ac:	ldr	r1, [pc, #1184]	; 10e54 <abort@plt+0x754>
   109b0:	mov	r0, r6
   109b4:	bl	1061c <strcmp@plt>
   109b8:	cmp	r0, #0
   109bc:	beq	10df0 <abort@plt+0x6f0>
   109c0:	ldr	r1, [pc, #1168]	; 10e58 <abort@plt+0x758>
   109c4:	mov	r0, r6
   109c8:	bl	1061c <strcmp@plt>
   109cc:	cmp	r0, #0
   109d0:	beq	10df8 <abort@plt+0x6f8>
   109d4:	ldr	r1, [pc, #1152]	; 10e5c <abort@plt+0x75c>
   109d8:	mov	r0, r6
   109dc:	bl	1061c <strcmp@plt>
   109e0:	cmp	r0, #0
   109e4:	beq	10e04 <abort@plt+0x704>
   109e8:	ldr	r1, [pc, #1136]	; 10e60 <abort@plt+0x760>
   109ec:	mov	r0, r6
   109f0:	bl	1061c <strcmp@plt>
   109f4:	subs	r3, r0, #0
   109f8:	str	r3, [sp, #20]
   109fc:	beq	10a5c <abort@plt+0x35c>
   10a00:	mov	r2, r6
   10a04:	ldr	r1, [pc, #1112]	; 10e64 <abort@plt+0x764>
   10a08:	mov	r0, #1
   10a0c:	bl	106dc <__printf_chk@plt>
   10a10:	mov	r4, #1
   10a14:	b	10a2c <abort@plt+0x32c>
   10a18:	cmp	sl, #0
   10a1c:	bne	10d90 <abort@plt+0x690>
   10a20:	ldr	r0, [pc, #1088]	; 10e68 <abort@plt+0x768>
   10a24:	bl	10664 <puts@plt>
   10a28:	mov	r4, #0
   10a2c:	ldr	r2, [sp, #52]	; 0x34
   10a30:	ldr	r3, [fp]
   10a34:	mov	r0, r4
   10a38:	cmp	r2, r3
   10a3c:	bne	10e10 <abort@plt+0x710>
   10a40:	add	sp, sp, #60	; 0x3c
   10a44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a48:	ldr	r0, [pc, #1052]	; 10e6c <abort@plt+0x76c>
   10a4c:	bl	10664 <puts@plt>
   10a50:	mov	r4, #1
   10a54:	b	10a2c <abort@plt+0x32c>
   10a58:	mov	sl, #1
   10a5c:	add	r5, r5, #1
   10a60:	cmp	r8, r5
   10a64:	bne	108f4 <abort@plt+0x1f4>
   10a68:	str	r4, [sp, #24]
   10a6c:	ldr	r4, [sp, #28]
   10a70:	ldr	r5, [sp, #44]	; 0x2c
   10a74:	ldr	r3, [sp, #48]	; 0x30
   10a78:	orr	r5, r5, r3
   10a7c:	bl	11118 <abort@plt+0xa18>
   10a80:	cmp	r4, #0
   10a84:	mov	r6, r0
   10a88:	bne	10ba8 <abort@plt+0x4a8>
   10a8c:	ldr	r2, [pc, #988]	; 10e70 <abort@plt+0x770>
   10a90:	ldr	r3, [pc, #988]	; 10e74 <abort@plt+0x774>
   10a94:	cmp	r0, #-33554432	; 0xfe000000
   10a98:	add	r1, r2, #1296	; 0x510
   10a9c:	movne	r2, r1
   10aa0:	moveq	r1, #1
   10aa4:	movne	r1, #0
   10aa8:	ldr	r0, [pc, #968]	; 10e78 <abort@plt+0x778>
   10aac:	str	r2, [r3]
   10ab0:	str	r1, [r3, #8]
   10ab4:	bl	10664 <puts@plt>
   10ab8:	mov	r6, #1
   10abc:	cmp	r5, #0
   10ac0:	beq	10ae4 <abort@plt+0x3e4>
   10ac4:	asr	r3, r4, #5
   10ac8:	add	r1, sp, #56	; 0x38
   10acc:	add	r3, r1, r3, lsl #2
   10ad0:	and	r2, r4, #31
   10ad4:	ldr	r1, [r3, #-12]
   10ad8:	mov	r3, r2
   10adc:	ands	r3, r1, r6, lsl r3
   10ae0:	beq	10aec <abort@plt+0x3ec>
   10ae4:	mov	r0, r4
   10ae8:	bl	10fa4 <abort@plt+0x8a4>
   10aec:	add	r4, r4, #1
   10af0:	cmp	r4, #54	; 0x36
   10af4:	bne	10abc <abort@plt+0x3bc>
   10af8:	mov	r4, #0
   10afc:	b	10a2c <abort@plt+0x32c>
   10b00:	mov	sl, r0
   10b04:	b	10a5c <abort@plt+0x35c>
   10b08:	mov	r4, r0
   10b0c:	b	10a5c <abort@plt+0x35c>
   10b10:	add	r6, r6, #1
   10b14:	mov	r0, r6
   10b18:	add	r3, sp, #40	; 0x28
   10b1c:	add	r2, sp, #36	; 0x24
   10b20:	mov	r1, sl
   10b24:	bl	106c4 <__isoc99_sscanf@plt>
   10b28:	cmp	r0, #1
   10b2c:	bne	10cb4 <abort@plt+0x5b4>
   10b30:	ldr	r1, [sp, #36]	; 0x24
   10b34:	cmp	r1, #53	; 0x35
   10b38:	bhi	10cb4 <abort@plt+0x5b4>
   10b3c:	ldr	r3, [sp, #32]
   10b40:	cmp	r1, r3
   10b44:	bge	10b5c <abort@plt+0x45c>
   10b48:	mov	r2, r3
   10b4c:	str	r3, [sp, #36]	; 0x24
   10b50:	str	r1, [sp, #32]
   10b54:	mov	r3, r1
   10b58:	mov	r1, r2
   10b5c:	ldr	r2, [sp, #40]	; 0x28
   10b60:	add	r6, r6, r2
   10b64:	b	1085c <abort@plt+0x15c>
   10b68:	mov	r4, #1
   10b6c:	b	10a5c <abort@plt+0x35c>
   10b70:	bl	11544 <abort@plt+0xe44>
   10b74:	b	10a2c <abort@plt+0x32c>
   10b78:	ldr	r0, [pc, #764]	; 10e7c <abort@plt+0x77c>
   10b7c:	mov	r4, r3
   10b80:	bl	10664 <puts@plt>
   10b84:	b	10a2c <abort@plt+0x32c>
   10b88:	mov	r2, r6
   10b8c:	ldr	r1, [pc, #748]	; 10e80 <abort@plt+0x780>
   10b90:	mov	r0, #1
   10b94:	bl	106dc <__printf_chk@plt>
   10b98:	mov	r4, #1
   10b9c:	b	10a2c <abort@plt+0x32c>
   10ba0:	mov	r4, #4
   10ba4:	b	10a5c <abort@plt+0x35c>
   10ba8:	ldr	r1, [pc, #724]	; 10e84 <abort@plt+0x784>
   10bac:	ldr	r0, [pc, #724]	; 10e88 <abort@plt+0x788>
   10bb0:	bl	10694 <open@plt>
   10bb4:	subs	r3, r0, #0
   10bb8:	blt	10cdc <abort@plt+0x5dc>
   10bbc:	mov	r0, #0
   10bc0:	str	r3, [sp]
   10bc4:	str	r0, [sp, #4]
   10bc8:	mov	r3, #1
   10bcc:	mov	r2, #3
   10bd0:	mov	r1, #4096	; 0x1000
   10bd4:	bl	106a0 <mmap@plt>
   10bd8:	ldr	r3, [pc, #660]	; 10e74 <abort@plt+0x774>
   10bdc:	str	r0, [r3, #4]
   10be0:	ldr	r2, [r3, #4]
   10be4:	cmn	r2, #1
   10be8:	beq	10da0 <abort@plt+0x6a0>
   10bec:	ldr	r1, [pc, #636]	; 10e70 <abort@plt+0x770>
   10bf0:	ldr	r0, [pc, #660]	; 10e8c <abort@plt+0x78c>
   10bf4:	ldr	r2, [r2, #240]	; 0xf0
   10bf8:	add	ip, r1, #1296	; 0x510
   10bfc:	cmp	r2, r0
   10c00:	moveq	r1, ip
   10c04:	subs	r2, r2, r0
   10c08:	ldr	r0, [sp, #12]
   10c0c:	movne	r2, #1
   10c10:	cmp	r0, #0
   10c14:	str	r1, [r3]
   10c18:	str	r2, [r3, #8]
   10c1c:	beq	10d20 <abort@plt+0x620>
   10c20:	ldr	r8, [pc, #616]	; 10e90 <abort@plt+0x790>
   10c24:	ldr	r7, [pc, #616]	; 10e94 <abort@plt+0x794>
   10c28:	ldr	r6, [pc, #616]	; 10e98 <abort@plt+0x798>
   10c2c:	mov	r4, #0
   10c30:	ldr	r9, [sp, #16]
   10c34:	b	10c74 <abort@plt+0x574>
   10c38:	cmp	r4, #0
   10c3c:	beq	10d64 <abort@plt+0x664>
   10c40:	cmp	r4, #28
   10c44:	beq	10d70 <abort@plt+0x670>
   10c48:	cmp	r4, #46	; 0x2e
   10c4c:	beq	10d7c <abort@plt+0x67c>
   10c50:	cmp	r9, #0
   10c54:	bne	10d40 <abort@plt+0x640>
   10c58:	mov	r0, r4
   10c5c:	bl	11950 <abort@plt+0x1250>
   10c60:	cmp	r0, #0
   10c64:	bne	10d5c <abort@plt+0x65c>
   10c68:	add	r4, r4, #1
   10c6c:	cmp	r4, #54	; 0x36
   10c70:	beq	10d14 <abort@plt+0x614>
   10c74:	cmp	r5, #0
   10c78:	beq	10c38 <abort@plt+0x538>
   10c7c:	asr	r3, r4, #5
   10c80:	add	r1, sp, #56	; 0x38
   10c84:	add	r3, r1, r3, lsl #2
   10c88:	and	r2, r4, #31
   10c8c:	ldr	r1, [r3, #-12]
   10c90:	mov	r0, #1
   10c94:	mov	r3, r2
   10c98:	ands	r3, r1, r0, lsl r3
   10c9c:	bne	10c50 <abort@plt+0x550>
   10ca0:	b	10c68 <abort@plt+0x568>
   10ca4:	ldr	r0, [pc, #496]	; 10e9c <abort@plt+0x79c>
   10ca8:	bl	10664 <puts@plt>
   10cac:	mov	r4, #1
   10cb0:	b	10a2c <abort@plt+0x32c>
   10cb4:	cmp	r6, #0
   10cb8:	beq	108bc <abort@plt+0x1bc>
   10cbc:	mov	r2, r6
   10cc0:	ldr	r1, [pc, #472]	; 10ea0 <abort@plt+0x7a0>
   10cc4:	mov	r0, #1
   10cc8:	bl	106dc <__printf_chk@plt>
   10ccc:	mov	r4, #1
   10cd0:	b	10a2c <abort@plt+0x32c>
   10cd4:	mov	r4, #5
   10cd8:	b	10a5c <abort@plt+0x35c>
   10cdc:	bl	1064c <geteuid@plt>
   10ce0:	subs	r4, r0, #0
   10ce4:	bne	10d34 <abort@plt+0x634>
   10ce8:	cmp	r6, #0
   10cec:	beq	10d5c <abort@plt+0x65c>
   10cf0:	ldr	r1, [pc, #396]	; 10e84 <abort@plt+0x784>
   10cf4:	ldr	r0, [pc, #424]	; 10ea4 <abort@plt+0x7a4>
   10cf8:	bl	10694 <open@plt>
   10cfc:	cmp	r0, #0
   10d00:	blt	10dcc <abort@plt+0x6cc>
   10d04:	add	r6, r6, #2097152	; 0x200000
   10d08:	stm	sp, {r0, r6}
   10d0c:	mov	r0, r4
   10d10:	b	10bc8 <abort@plt+0x4c8>
   10d14:	ldr	r3, [sp, #8]
   10d18:	cmp	r3, #0
   10d1c:	beq	10af8 <abort@plt+0x3f8>
   10d20:	bl	114bc <abort@plt+0xdbc>
   10d24:	mov	r4, #0
   10d28:	b	10a2c <abort@plt+0x32c>
   10d2c:	mov	r4, #6
   10d30:	b	10a5c <abort@plt+0x35c>
   10d34:	ldr	r0, [pc, #364]	; 10ea8 <abort@plt+0x7a8>
   10d38:	bl	10664 <puts@plt>
   10d3c:	b	10af8 <abort@plt+0x3f8>
   10d40:	ldr	r3, [sp, #20]
   10d44:	mov	r2, sl
   10d48:	ldr	r1, [sp, #24]
   10d4c:	mov	r0, r4
   10d50:	bl	11ad0 <abort@plt+0x13d0>
   10d54:	cmp	r0, #0
   10d58:	beq	10c68 <abort@plt+0x568>
   10d5c:	mov	r4, #1
   10d60:	b	10a2c <abort@plt+0x32c>
   10d64:	mov	r0, r6
   10d68:	bl	10664 <puts@plt>
   10d6c:	b	10c50 <abort@plt+0x550>
   10d70:	mov	r0, r7
   10d74:	bl	10664 <puts@plt>
   10d78:	b	10c50 <abort@plt+0x550>
   10d7c:	mov	r0, r8
   10d80:	bl	10664 <puts@plt>
   10d84:	b	10c50 <abort@plt+0x550>
   10d88:	mov	r4, #7
   10d8c:	b	10a5c <abort@plt+0x35c>
   10d90:	mvn	sl, #0
   10d94:	str	sl, [sp, #24]
   10d98:	str	sl, [sp, #20]
   10d9c:	b	10a70 <abort@plt+0x370>
   10da0:	bl	106ac <__errno_location@plt>
   10da4:	mov	r4, #1
   10da8:	ldr	r0, [r0]
   10dac:	bl	1067c <strerror@plt>
   10db0:	ldr	r1, [pc, #244]	; 10eac <abort@plt+0x7ac>
   10db4:	mov	r2, r0
   10db8:	mov	r0, r4
   10dbc:	bl	106dc <__printf_chk@plt>
   10dc0:	b	10a2c <abort@plt+0x32c>
   10dc4:	mov	r4, #3
   10dc8:	b	10a5c <abort@plt+0x35c>
   10dcc:	bl	106ac <__errno_location@plt>
   10dd0:	mov	r4, #1
   10dd4:	ldr	r0, [r0]
   10dd8:	bl	1067c <strerror@plt>
   10ddc:	ldr	r1, [pc, #204]	; 10eb0 <abort@plt+0x7b0>
   10de0:	mov	r2, r0
   10de4:	mov	r0, r4
   10de8:	bl	106dc <__printf_chk@plt>
   10dec:	b	10a2c <abort@plt+0x32c>
   10df0:	mov	r4, #2
   10df4:	b	10a5c <abort@plt+0x35c>
   10df8:	mov	r3, #2
   10dfc:	str	r3, [sp, #20]
   10e00:	b	10a5c <abort@plt+0x35c>
   10e04:	mov	r3, #1
   10e08:	str	r3, [sp, #20]
   10e0c:	b	10a5c <abort@plt+0x35c>
   10e10:	bl	10640 <__stack_chk_fail@plt>
   10e14:	andeq	r3, r2, r8, lsl #30
   10e18:			; <UNDEFINED> instruction: 0x000126bc
   10e1c:	andeq	r2, r1, r4, asr #13
   10e20:	andeq	r2, r1, ip, lsr #14
   10e24:	andeq	r2, r1, r8, asr #13
   10e28:	ldrdeq	r2, [r1], -r0
   10e2c:	andeq	r2, r1, r0, lsr r7
   10e30:	andeq	r2, r1, ip, asr r7
   10e34:	andeq	r2, r1, r0, ror #14
   10e38:	andeq	r2, r1, r4, ror #14
   10e3c:	andeq	r2, r1, r8, ror #14
   10e40:	andeq	r2, r1, ip, ror #14
   10e44:	andeq	r2, r1, r0, ror r7
   10e48:	andeq	r2, r1, r4, ror r7
   10e4c:	andeq	r2, r1, r8, ror r7
   10e50:	andeq	r2, r1, ip, ror r7
   10e54:	andeq	r2, r1, r0, lsl #15
   10e58:	andeq	r2, r1, r4, lsl #15
   10e5c:	andeq	r2, r1, r8, lsl #15
   10e60:	andeq	r2, r1, ip, lsl #15
   10e64:	muleq	r1, r0, r7
   10e68:	andeq	r2, r1, ip, asr #14
   10e6c:	andeq	r2, r1, r4, lsl #14
   10e70:	andeq	r4, r2, r8, rrx
   10e74:	andeq	r4, r2, ip, lsl #21
   10e78:	andeq	r2, r1, r8, lsr #15
   10e7c:	muleq	r1, r0, r6
   10e80:	ldrdeq	r2, [r1], -r4
   10e84:	andseq	r1, r8, r2
   10e88:	andeq	r2, r1, r0, ror #15
   10e8c:	ldrbvs	r6, [r0, -pc, ror #18]!
   10e90:	andeq	r2, r1, r4, ror r8
   10e94:	andeq	r2, r1, ip, asr r8
   10e98:	andeq	r2, r1, r4, asr #16
   10e9c:	andeq	r2, r1, r8, lsl r7
   10ea0:	andeq	r2, r1, r8, lsr r7
   10ea4:	andeq	r2, r1, r0, lsl #16
   10ea8:	strdeq	r2, [r1], -r0
   10eac:	andeq	r2, r1, ip, lsr #16
   10eb0:	andeq	r2, r1, ip, lsl #16
   10eb4:	mov	fp, #0
   10eb8:	mov	lr, #0
   10ebc:	pop	{r1}		; (ldr r1, [sp], #4)
   10ec0:	mov	r2, sp
   10ec4:	push	{r2}		; (str r2, [sp, #-4]!)
   10ec8:	push	{r0}		; (str r0, [sp, #-4]!)
   10ecc:	ldr	ip, [pc, #16]	; 10ee4 <abort@plt+0x7e4>
   10ed0:	push	{ip}		; (str ip, [sp, #-4]!)
   10ed4:	ldr	r0, [pc, #12]	; 10ee8 <abort@plt+0x7e8>
   10ed8:	ldr	r3, [pc, #12]	; 10eec <abort@plt+0x7ec>
   10edc:	bl	10670 <__libc_start_main@plt>
   10ee0:	bl	10700 <abort@plt>
   10ee4:	ldrdeq	r1, [r1], -ip
   10ee8:	andeq	r0, r1, ip, lsl #14
   10eec:	andeq	r1, r1, ip, ror fp
   10ef0:	ldr	r3, [pc, #20]	; 10f0c <abort@plt+0x80c>
   10ef4:	ldr	r2, [pc, #20]	; 10f10 <abort@plt+0x810>
   10ef8:	add	r3, pc, r3
   10efc:	ldr	r2, [r3, r2]
   10f00:	cmp	r2, #0
   10f04:	bxeq	lr
   10f08:	b	10688 <__gmon_start__@plt>
   10f0c:	andeq	r3, r1, r0, lsl #2
   10f10:	andeq	r0, r0, ip, asr r0
   10f14:	ldr	r0, [pc, #24]	; 10f34 <abort@plt+0x834>
   10f18:	ldr	r3, [pc, #24]	; 10f38 <abort@plt+0x838>
   10f1c:	cmp	r3, r0
   10f20:	bxeq	lr
   10f24:	ldr	r3, [pc, #16]	; 10f3c <abort@plt+0x83c>
   10f28:	cmp	r3, #0
   10f2c:	bxeq	lr
   10f30:	bx	r3
   10f34:	andeq	r4, r2, r8, lsl #21
   10f38:	andeq	r4, r2, r8, lsl #21
   10f3c:	andeq	r0, r0, r0
   10f40:	ldr	r0, [pc, #36]	; 10f6c <abort@plt+0x86c>
   10f44:	ldr	r1, [pc, #36]	; 10f70 <abort@plt+0x870>
   10f48:	sub	r1, r1, r0
   10f4c:	asr	r1, r1, #2
   10f50:	add	r1, r1, r1, lsr #31
   10f54:	asrs	r1, r1, #1
   10f58:	bxeq	lr
   10f5c:	ldr	r3, [pc, #16]	; 10f74 <abort@plt+0x874>
   10f60:	cmp	r3, #0
   10f64:	bxeq	lr
   10f68:	bx	r3
   10f6c:	andeq	r4, r2, r8, lsl #21
   10f70:	andeq	r4, r2, r8, lsl #21
   10f74:	andeq	r0, r0, r0
   10f78:	push	{r4, lr}
   10f7c:	ldr	r4, [pc, #24]	; 10f9c <abort@plt+0x89c>
   10f80:	ldrb	r3, [r4]
   10f84:	cmp	r3, #0
   10f88:	popne	{r4, pc}
   10f8c:	bl	10f14 <abort@plt+0x814>
   10f90:	mov	r3, #1
   10f94:	strb	r3, [r4]
   10f98:	pop	{r4, pc}
   10f9c:	andeq	r4, r2, r8, lsl #21
   10fa0:	b	10f40 <abort@plt+0x840>
   10fa4:	push	{r4, r5, r6, r7, r8, lr}
   10fa8:	mov	r2, r0
   10fac:	mov	r4, r0
   10fb0:	ldr	r1, [pc, #132]	; 1103c <abort@plt+0x93c>
   10fb4:	mov	r0, #1
   10fb8:	bl	106dc <__printf_chk@plt>
   10fbc:	ldr	r3, [pc, #124]	; 11040 <abort@plt+0x940>
   10fc0:	ldr	r0, [r3, r4, lsl #2]
   10fc4:	cmp	r0, #0
   10fc8:	beq	1102c <abort@plt+0x92c>
   10fcc:	cmp	r0, #1
   10fd0:	beq	11020 <abort@plt+0x920>
   10fd4:	ldr	r1, [pc, #104]	; 11044 <abort@plt+0x944>
   10fd8:	mov	r0, #1
   10fdc:	bl	106dc <__printf_chk@plt>
   10fe0:	add	r4, r4, r4, lsl #1
   10fe4:	ldr	r7, [pc, #92]	; 11048 <abort@plt+0x948>
   10fe8:	lsl	r4, r4, #3
   10fec:	ldr	r5, [pc, #88]	; 1104c <abort@plt+0x94c>
   10ff0:	add	r6, r4, #24
   10ff4:	ldr	r3, [r7]
   10ff8:	mov	r1, r5
   10ffc:	mov	r0, #1
   11000:	ldr	r2, [r3, r4]
   11004:	add	r4, r4, #4
   11008:	bl	106dc <__printf_chk@plt>
   1100c:	cmp	r6, r4
   11010:	bne	10ff4 <abort@plt+0x8f4>
   11014:	mov	r0, #10
   11018:	pop	{r4, r5, r6, r7, r8, lr}
   1101c:	b	106d0 <putchar@plt>
   11020:	ldr	r1, [pc, #40]	; 11050 <abort@plt+0x950>
   11024:	bl	106dc <__printf_chk@plt>
   11028:	b	10fe0 <abort@plt+0x8e0>
   1102c:	ldr	r1, [pc, #32]	; 11054 <abort@plt+0x954>
   11030:	mov	r0, #1
   11034:	bl	106dc <__printf_chk@plt>
   11038:	b	10fe0 <abort@plt+0x8e0>
   1103c:	andeq	r1, r1, ip, lsl #26
   11040:	andeq	r1, r1, ip, ror #23
   11044:	andeq	r1, r1, r0, lsr #26
   11048:	andeq	r4, r2, ip, lsl #21
   1104c:	andeq	r1, r1, r8, lsr #26
   11050:	andeq	r1, r1, r8, lsl sp
   11054:	andeq	r1, r1, r0, lsl sp
   11058:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1105c:	mov	r4, #0
   11060:	ldr	r7, [pc, #160]	; 11108 <abort@plt+0xa08>
   11064:	ldr	fp, [pc, #160]	; 1110c <abort@plt+0xa0c>
   11068:	ldr	r9, [pc, #160]	; 11110 <abort@plt+0xa10>
   1106c:	umull	r3, r7, r7, r0
   11070:	ldr	sl, [pc, #156]	; 11114 <abort@plt+0xa14>
   11074:	sub	sp, sp, #28
   11078:	lsr	r7, r7, #6
   1107c:	ldr	r3, [fp]
   11080:	rsb	r6, r7, r7, lsl #5
   11084:	add	r8, r7, #1
   11088:	add	r6, r7, r6, lsl #2
   1108c:	mov	r5, r4
   11090:	sub	r0, r0, r6, lsl #3
   11094:	str	r3, [sp, #20]
   11098:	rsb	r6, r0, r0, lsl #5
   1109c:	add	r0, r0, r6, lsl #2
   110a0:	lsl	r6, r0, #3
   110a4:	cmp	r4, r7
   110a8:	moveq	r3, r6
   110ac:	movne	r3, r9
   110b0:	add	r1, sp, #12
   110b4:	add	r0, sp, #4
   110b8:	str	r3, [sp, #8]
   110bc:	str	r5, [sp, #4]
   110c0:	str	r5, [sp, #12]
   110c4:	str	r5, [sp, #16]
   110c8:	bl	10634 <nanosleep@plt>
   110cc:	ldrd	r2, [sp, #12]
   110d0:	orrs	r3, r2, r3
   110d4:	beq	110e0 <abort@plt+0x9e0>
   110d8:	mov	r0, sl
   110dc:	bl	10664 <puts@plt>
   110e0:	add	r4, r4, #1
   110e4:	cmp	r8, r4
   110e8:	bne	110a4 <abort@plt+0x9a4>
   110ec:	ldr	r2, [sp, #20]
   110f0:	ldr	r3, [fp]
   110f4:	cmp	r2, r3
   110f8:	bne	11104 <abort@plt+0xa04>
   110fc:	add	sp, sp, #28
   11100:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11104:	bl	10640 <__stack_chk_fail@plt>
   11108:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   1110c:	andeq	r3, r2, r8, lsl #30
   11110:	andeq	r4, pc, r0, asr #4
   11114:	andeq	r1, r1, r0, lsr sp
   11118:	push	{r4, r5, r6, r7, r8, r9, lr}
   1111c:	sub	sp, sp, #60	; 0x3c
   11120:	ldr	r5, [pc, #300]	; 11254 <abort@plt+0xb54>
   11124:	mov	r4, #0
   11128:	ldr	r1, [pc, #296]	; 11258 <abort@plt+0xb58>
   1112c:	ldr	r3, [r5]
   11130:	ldr	r0, [pc, #292]	; 1125c <abort@plt+0xb5c>
   11134:	str	r3, [sp, #52]	; 0x34
   11138:	str	r4, [sp, #44]	; 0x2c
   1113c:	str	r4, [sp, #40]	; 0x28
   11140:	str	r4, [sp, #48]	; 0x30
   11144:	bl	10628 <fopen@plt>
   11148:	subs	r6, r0, #0
   1114c:	beq	11238 <abort@plt+0xb38>
   11150:	add	r0, sp, #40	; 0x28
   11154:	mov	r3, r6
   11158:	mov	r2, #12
   1115c:	mov	r1, #1
   11160:	bl	10658 <fread@plt>
   11164:	cmp	r0, #7
   11168:	bls	1120c <abort@plt+0xb0c>
   1116c:	ldr	r4, [sp, #44]	; 0x2c
   11170:	ldrb	r2, [sp, #40]	; 0x28
   11174:	rev	r4, r4
   11178:	cmp	r4, #0
   1117c:	ldrb	ip, [sp, #44]	; 0x2c
   11180:	ldreq	r4, [sp, #48]	; 0x30
   11184:	ldrb	lr, [sp, #45]	; 0x2d
   11188:	reveq	r4, r4
   1118c:	cmp	r2, #126	; 0x7e
   11190:	ldrb	r7, [sp, #46]	; 0x2e
   11194:	ldrb	r8, [sp, #47]	; 0x2f
   11198:	ldrb	r3, [sp, #41]	; 0x29
   1119c:	ldrb	r1, [sp, #42]	; 0x2a
   111a0:	ldrb	r0, [sp, #43]	; 0x2b
   111a4:	bne	111c8 <abort@plt+0xac8>
   111a8:	orr	r9, r3, r1
   111ac:	orrs	r9, r0, r9
   111b0:	bne	111c8 <abort@plt+0xac8>
   111b4:	cmp	r4, #536870912	; 0x20000000
   111b8:	cmpne	r4, #1056964608	; 0x3f000000
   111bc:	beq	11214 <abort@plt+0xb14>
   111c0:	cmp	r4, #-33554432	; 0xfe000000
   111c4:	beq	11214 <abort@plt+0xb14>
   111c8:	ldrb	r4, [sp, #50]	; 0x32
   111cc:	ldrb	r9, [sp, #51]	; 0x33
   111d0:	str	r8, [sp, #20]
   111d4:	str	r7, [sp, #16]
   111d8:	ldrb	r8, [sp, #49]	; 0x31
   111dc:	ldrb	r7, [sp, #48]	; 0x30
   111e0:	stmib	sp, {r0, ip, lr}
   111e4:	mov	r0, #1
   111e8:	str	r1, [sp]
   111ec:	str	r4, [sp, #32]
   111f0:	str	r9, [sp, #36]	; 0x24
   111f4:	str	r8, [sp, #28]
   111f8:	str	r7, [sp, #24]
   111fc:	ldr	r1, [pc, #92]	; 11260 <abort@plt+0xb60>
   11200:	bl	106dc <__printf_chk@plt>
   11204:	mov	r4, #0
   11208:	b	11214 <abort@plt+0xb14>
   1120c:	ldr	r0, [pc, #80]	; 11264 <abort@plt+0xb64>
   11210:	bl	10664 <puts@plt>
   11214:	mov	r0, r6
   11218:	bl	106e8 <fclose@plt>
   1121c:	ldr	r2, [sp, #52]	; 0x34
   11220:	ldr	r3, [r5]
   11224:	mov	r0, r4
   11228:	cmp	r2, r3
   1122c:	bne	11250 <abort@plt+0xb50>
   11230:	add	sp, sp, #60	; 0x3c
   11234:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11238:	ldr	r2, [pc, #28]	; 1125c <abort@plt+0xb5c>
   1123c:	ldr	r1, [pc, #36]	; 11268 <abort@plt+0xb68>
   11240:	mov	r0, #1
   11244:	bl	106dc <__printf_chk@plt>
   11248:	mov	r4, r6
   1124c:	b	11214 <abort@plt+0xb14>
   11250:	bl	10640 <__stack_chk_fail@plt>
   11254:	andeq	r3, r2, r8, lsl #30
   11258:	andeq	r1, r1, ip, lsr sp
   1125c:	andeq	r1, r1, r0, asr #26
   11260:	andeq	r1, r1, r4, ror sp
   11264:	andeq	r1, r1, r4, asr #27
   11268:	andeq	r1, r1, r0, ror #26
   1126c:	ldr	r3, [pc, #52]	; 112a8 <abort@plt+0xba8>
   11270:	cmp	r0, #53	; 0x35
   11274:	smull	r3, r2, r3, r0
   11278:	asr	r3, r0, #31
   1127c:	rsb	r3, r3, r2, asr #2
   11280:	add	r2, r3, r3, lsl #2
   11284:	sub	r0, r0, r2, lsl #1
   11288:	ldrls	r2, [pc, #28]	; 112ac <abort@plt+0xbac>
   1128c:	addls	r0, r0, r0, lsl #1
   11290:	ldrls	r2, [r2, #4]
   11294:	ldrls	r3, [r2, r3, lsl #2]
   11298:	lsrls	r0, r3, r0
   1129c:	andls	r0, r0, #7
   112a0:	mvnhi	r0, #0
   112a4:	bx	lr
   112a8:	strbtvs	r6, [r6], -r7, ror #12
   112ac:	andeq	r4, r2, ip, lsl #21
   112b0:	ldr	r3, [pc, #96]	; 11318 <abort@plt+0xc18>
   112b4:	cmp	r0, #53	; 0x35
   112b8:	smull	r2, r3, r3, r0
   112bc:	asr	r2, r0, #31
   112c0:	rsb	r3, r2, r3, asr #2
   112c4:	add	r2, r3, r3, lsl #2
   112c8:	sub	r0, r0, r2, lsl #1
   112cc:	bhi	11310 <abort@plt+0xc10>
   112d0:	ldr	r2, [pc, #68]	; 1131c <abort@plt+0xc1c>
   112d4:	push	{lr}		; (str lr, [sp, #-4]!)
   112d8:	add	r0, r0, r0, lsl #1
   112dc:	ldr	r2, [r2, #4]
   112e0:	mov	lr, #7
   112e4:	and	r1, r1, lr
   112e8:	ldr	ip, [r2, r3, lsl #2]
   112ec:	bic	ip, ip, lr, lsl r0
   112f0:	str	ip, [r2, r3, lsl #2]
   112f4:	ldr	ip, [r2, r3, lsl #2]
   112f8:	orr	r1, ip, r1, lsl r0
   112fc:	str	r1, [r2, r3, lsl #2]
   11300:	ldr	r3, [r2, r3, lsl #2]
   11304:	lsr	r0, r3, r0
   11308:	and	r0, r0, lr
   1130c:	pop	{pc}		; (ldr pc, [sp], #4)
   11310:	mvn	r0, #0
   11314:	bx	lr
   11318:	strbtvs	r6, [r6], -r7, ror #12
   1131c:	andeq	r4, r2, ip, lsl #21
   11320:	cmp	r0, #53	; 0x35
   11324:	bhi	11350 <abort@plt+0xc50>
   11328:	ldr	r3, [pc, #40]	; 11358 <abort@plt+0xc58>
   1132c:	cmp	r0, #31
   11330:	subgt	r0, r0, #32
   11334:	ldr	r3, [r3, #4]
   11338:	ldrle	r2, [r3, #52]	; 0x34
   1133c:	ldrgt	r3, [r3, #56]	; 0x38
   11340:	lsrle	r0, r2, r0
   11344:	lsrgt	r0, r3, r0
   11348:	and	r0, r0, #1
   1134c:	bx	lr
   11350:	mvn	r0, #0
   11354:	bx	lr
   11358:	andeq	r4, r2, ip, lsl #21
   1135c:	cmp	r0, #53	; 0x35
   11360:	mov	r3, r0
   11364:	bhi	113d0 <abort@plt+0xcd0>
   11368:	ldr	r2, [pc, #104]	; 113d8 <abort@plt+0xcd8>
   1136c:	cmp	r1, #0
   11370:	ldr	r2, [r2, #4]
   11374:	beq	113a4 <abort@plt+0xca4>
   11378:	cmp	r0, #31
   1137c:	subgt	r3, r3, #32
   11380:	movle	r1, #1
   11384:	movgt	r1, #1
   11388:	lslle	r3, r1, r3
   1138c:	lslgt	r3, r1, r3
   11390:	movle	r0, #0
   11394:	strle	r3, [r2, #28]
   11398:	strgt	r3, [r2, #32]
   1139c:	movgt	r0, #0
   113a0:	bx	lr
   113a4:	cmp	r0, #31
   113a8:	subgt	r3, r3, #32
   113ac:	movle	ip, #1
   113b0:	movgt	ip, #1
   113b4:	lslle	r3, ip, r3
   113b8:	lslgt	r3, ip, r3
   113bc:	movle	r0, r1
   113c0:	strle	r3, [r2, #40]	; 0x28
   113c4:	strgt	r3, [r2, #44]	; 0x2c
   113c8:	movgt	r0, r1
   113cc:	bx	lr
   113d0:	mvn	r0, #0
   113d4:	bx	lr
   113d8:	andeq	r4, r2, ip, lsl #21
   113dc:	cmp	r0, #53	; 0x35
   113e0:	bhi	1149c <abort@plt+0xd9c>
   113e4:	cmp	r1, #6
   113e8:	ldrls	pc, [pc, r1, lsl #2]
   113ec:	b	114a4 <abort@plt+0xda4>
   113f0:	andeq	r1, r1, r0, asr r4
   113f4:	andeq	r1, r1, r0, ror r4
   113f8:	andeq	r1, r1, ip, lsl #8
   113fc:	andeq	r1, r1, r0, lsr r4
   11400:	andeq	r1, r1, r8, lsr r4
   11404:	andeq	r1, r1, r0, asr #8
   11408:	andeq	r1, r1, r8, asr #8
   1140c:	mov	r1, #5
   11410:	ldr	ip, [pc, #148]	; 114ac <abort@plt+0xdac>
   11414:	add	r3, r0, r0, lsl #1
   11418:	mov	r0, r2
   1141c:	ldr	r2, [ip]
   11420:	add	r3, r1, r3, lsl #1
   11424:	ldr	r1, [pc, #132]	; 114b0 <abort@plt+0xdb0>
   11428:	ldr	r2, [r2, r3, lsl #2]
   1142c:	b	106f4 <sprintf@plt>
   11430:	mov	r1, #4
   11434:	b	11410 <abort@plt+0xd10>
   11438:	mov	r1, #0
   1143c:	b	11410 <abort@plt+0xd10>
   11440:	mov	r1, #1
   11444:	b	11410 <abort@plt+0xd10>
   11448:	mov	r1, #2
   1144c:	b	11410 <abort@plt+0xd10>
   11450:	ldr	r1, [pc, #92]	; 114b4 <abort@plt+0xdb4>
   11454:	mov	r3, #5
   11458:	ldrh	ip, [r1, #4]
   1145c:	ldr	r0, [r1]
   11460:	strh	ip, [r2, #4]
   11464:	str	r0, [r2]
   11468:	mov	r0, r3
   1146c:	bx	lr
   11470:	ldr	r1, [pc, #64]	; 114b8 <abort@plt+0xdb8>
   11474:	push	{lr}		; (str lr, [sp, #-4]!)
   11478:	mov	r3, #6
   1147c:	ldrh	lr, [r1, #4]
   11480:	ldrb	ip, [r1, #6]
   11484:	ldr	r0, [r1]
   11488:	strh	lr, [r2, #4]
   1148c:	str	r0, [r2]
   11490:	strb	ip, [r2, #6]
   11494:	mov	r0, r3
   11498:	pop	{pc}		; (ldr pc, [sp], #4)
   1149c:	mvn	r3, #0
   114a0:	b	11468 <abort@plt+0xd68>
   114a4:	mov	r1, #3
   114a8:	b	11410 <abort@plt+0xd10>
   114ac:	andeq	r4, r2, ip, lsl #21
   114b0:	andeq	r1, r1, ip, ror #27
   114b4:	ldrdeq	r1, [r1], -ip
   114b8:	andeq	r1, r1, r4, ror #27
   114bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   114c0:	mov	r4, #0
   114c4:	ldr	r8, [pc, #108]	; 11538 <abort@plt+0xe38>
   114c8:	ldr	r7, [pc, #108]	; 1153c <abort@plt+0xe3c>
   114cc:	ldr	r9, [pc, #108]	; 11540 <abort@plt+0xe40>
   114d0:	b	114ec <abort@plt+0xdec>
   114d4:	bl	106dc <__printf_chk@plt>
   114d8:	cmp	r6, #3
   114dc:	beq	1152c <abort@plt+0xe2c>
   114e0:	add	r4, r4, #1
   114e4:	cmp	r4, #40	; 0x28
   114e8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   114ec:	ldr	r3, [r8, #4]
   114f0:	ands	r6, r4, #3
   114f4:	mov	r1, r7
   114f8:	ldr	r5, [r3, r4, lsl #2]
   114fc:	mov	r0, #1
   11500:	lsl	r3, r4, #2
   11504:	mov	r2, r5
   11508:	bne	114d4 <abort@plt+0xdd4>
   1150c:	mov	r2, r3
   11510:	mov	r1, r9
   11514:	bl	106dc <__printf_chk@plt>
   11518:	mov	r2, r5
   1151c:	mov	r1, r7
   11520:	mov	r0, #1
   11524:	bl	106dc <__printf_chk@plt>
   11528:	b	114e0 <abort@plt+0xde0>
   1152c:	mov	r0, #10
   11530:	bl	106d0 <putchar@plt>
   11534:	b	114e0 <abort@plt+0xde0>
   11538:	andeq	r4, r2, ip, lsl #21
   1153c:	strdeq	r1, [r1], -r8
   11540:	strdeq	r1, [r1], -r0
   11544:	push	{r4, r5, r6, lr}
   11548:	mov	r0, #10
   1154c:	ldr	r4, [pc, #552]	; 1177c <abort@plt+0x107c>
   11550:	bl	106d0 <putchar@plt>
   11554:	mov	r2, r4
   11558:	ldr	r1, [pc, #544]	; 11780 <abort@plt+0x1080>
   1155c:	mov	r0, #1
   11560:	bl	106dc <__printf_chk@plt>
   11564:	ldr	r0, [pc, #536]	; 11784 <abort@plt+0x1084>
   11568:	bl	10664 <puts@plt>
   1156c:	ldr	r0, [pc, #532]	; 11788 <abort@plt+0x1088>
   11570:	bl	10664 <puts@plt>
   11574:	ldr	r0, [pc, #528]	; 1178c <abort@plt+0x108c>
   11578:	bl	10664 <puts@plt>
   1157c:	mov	r0, #10
   11580:	bl	106d0 <putchar@plt>
   11584:	mov	r2, r4
   11588:	ldr	r1, [pc, #512]	; 11790 <abort@plt+0x1090>
   1158c:	mov	r0, #1
   11590:	bl	106dc <__printf_chk@plt>
   11594:	mov	r2, r4
   11598:	ldr	r1, [pc, #500]	; 11794 <abort@plt+0x1094>
   1159c:	mov	r0, #1
   115a0:	bl	106dc <__printf_chk@plt>
   115a4:	mov	r2, r4
   115a8:	ldr	r1, [pc, #488]	; 11798 <abort@plt+0x1098>
   115ac:	mov	r0, #1
   115b0:	bl	106dc <__printf_chk@plt>
   115b4:	ldr	r0, [pc, #480]	; 1179c <abort@plt+0x109c>
   115b8:	bl	10664 <puts@plt>
   115bc:	mov	r2, r4
   115c0:	ldr	r1, [pc, #472]	; 117a0 <abort@plt+0x10a0>
   115c4:	mov	r0, #1
   115c8:	bl	106dc <__printf_chk@plt>
   115cc:	ldr	r5, [pc, #464]	; 117a4 <abort@plt+0x10a4>
   115d0:	ldr	r0, [pc, #464]	; 117a8 <abort@plt+0x10a8>
   115d4:	bl	10664 <puts@plt>
   115d8:	mov	r2, r4
   115dc:	ldr	r1, [pc, #456]	; 117ac <abort@plt+0x10ac>
   115e0:	mov	r0, #1
   115e4:	bl	106dc <__printf_chk@plt>
   115e8:	mov	r0, r5
   115ec:	bl	10664 <puts@plt>
   115f0:	mov	r2, r4
   115f4:	ldr	r1, [pc, #436]	; 117b0 <abort@plt+0x10b0>
   115f8:	mov	r0, #1
   115fc:	bl	106dc <__printf_chk@plt>
   11600:	mov	r0, r5
   11604:	bl	10664 <puts@plt>
   11608:	mov	r2, r4
   1160c:	ldr	r1, [pc, #416]	; 117b4 <abort@plt+0x10b4>
   11610:	mov	r0, #1
   11614:	bl	106dc <__printf_chk@plt>
   11618:	mov	r0, r5
   1161c:	bl	10664 <puts@plt>
   11620:	mov	r2, r4
   11624:	ldr	r1, [pc, #396]	; 117b8 <abort@plt+0x10b8>
   11628:	mov	r0, #1
   1162c:	bl	106dc <__printf_chk@plt>
   11630:	mov	r0, #10
   11634:	bl	106d0 <putchar@plt>
   11638:	ldr	r0, [pc, #380]	; 117bc <abort@plt+0x10bc>
   1163c:	bl	10664 <puts@plt>
   11640:	ldr	r0, [pc, #376]	; 117c0 <abort@plt+0x10c0>
   11644:	bl	10664 <puts@plt>
   11648:	mov	r2, r4
   1164c:	ldr	r1, [pc, #368]	; 117c4 <abort@plt+0x10c4>
   11650:	mov	r0, #1
   11654:	bl	106dc <__printf_chk@plt>
   11658:	mov	r2, r4
   1165c:	ldr	r1, [pc, #356]	; 117c8 <abort@plt+0x10c8>
   11660:	mov	r0, #1
   11664:	bl	106dc <__printf_chk@plt>
   11668:	ldr	r0, [pc, #348]	; 117cc <abort@plt+0x10cc>
   1166c:	bl	10664 <puts@plt>
   11670:	mov	r2, r4
   11674:	ldr	r1, [pc, #340]	; 117d0 <abort@plt+0x10d0>
   11678:	mov	r0, #1
   1167c:	bl	106dc <__printf_chk@plt>
   11680:	ldr	r0, [pc, #332]	; 117d4 <abort@plt+0x10d4>
   11684:	bl	10664 <puts@plt>
   11688:	ldr	r0, [pc, #328]	; 117d8 <abort@plt+0x10d8>
   1168c:	bl	10664 <puts@plt>
   11690:	ldr	r0, [pc, #324]	; 117dc <abort@plt+0x10dc>
   11694:	bl	10664 <puts@plt>
   11698:	ldr	r0, [pc, #320]	; 117e0 <abort@plt+0x10e0>
   1169c:	bl	10664 <puts@plt>
   116a0:	ldr	r0, [pc, #316]	; 117e4 <abort@plt+0x10e4>
   116a4:	bl	10664 <puts@plt>
   116a8:	ldr	r0, [pc, #312]	; 117e8 <abort@plt+0x10e8>
   116ac:	bl	10664 <puts@plt>
   116b0:	ldr	r0, [pc, #308]	; 117ec <abort@plt+0x10ec>
   116b4:	bl	10664 <puts@plt>
   116b8:	ldr	r0, [pc, #304]	; 117f0 <abort@plt+0x10f0>
   116bc:	bl	10664 <puts@plt>
   116c0:	ldr	r0, [pc, #300]	; 117f4 <abort@plt+0x10f4>
   116c4:	bl	10664 <puts@plt>
   116c8:	mov	r2, r4
   116cc:	ldr	r1, [pc, #292]	; 117f8 <abort@plt+0x10f8>
   116d0:	mov	r0, #1
   116d4:	bl	106dc <__printf_chk@plt>
   116d8:	mov	r2, r4
   116dc:	ldr	r1, [pc, #280]	; 117fc <abort@plt+0x10fc>
   116e0:	mov	r0, #1
   116e4:	bl	106dc <__printf_chk@plt>
   116e8:	mov	r2, r4
   116ec:	ldr	r1, [pc, #268]	; 11800 <abort@plt+0x1100>
   116f0:	mov	r0, #1
   116f4:	bl	106dc <__printf_chk@plt>
   116f8:	mov	r2, r4
   116fc:	ldr	r1, [pc, #256]	; 11804 <abort@plt+0x1104>
   11700:	mov	r0, #1
   11704:	bl	106dc <__printf_chk@plt>
   11708:	mov	r2, r4
   1170c:	ldr	r1, [pc, #244]	; 11808 <abort@plt+0x1108>
   11710:	mov	r0, #1
   11714:	bl	106dc <__printf_chk@plt>
   11718:	mov	r2, r4
   1171c:	ldr	r1, [pc, #232]	; 1180c <abort@plt+0x110c>
   11720:	mov	r0, #1
   11724:	bl	106dc <__printf_chk@plt>
   11728:	mov	r2, r4
   1172c:	ldr	r1, [pc, #220]	; 11810 <abort@plt+0x1110>
   11730:	mov	r0, #1
   11734:	bl	106dc <__printf_chk@plt>
   11738:	mov	r2, r4
   1173c:	ldr	r1, [pc, #208]	; 11814 <abort@plt+0x1114>
   11740:	mov	r0, #1
   11744:	bl	106dc <__printf_chk@plt>
   11748:	mov	r2, r4
   1174c:	ldr	r1, [pc, #196]	; 11818 <abort@plt+0x1118>
   11750:	mov	r0, #1
   11754:	bl	106dc <__printf_chk@plt>
   11758:	mov	r2, r4
   1175c:	ldr	r1, [pc, #184]	; 1181c <abort@plt+0x111c>
   11760:	mov	r0, #1
   11764:	bl	106dc <__printf_chk@plt>
   11768:	mov	r2, r4
   1176c:	ldr	r1, [pc, #172]	; 11820 <abort@plt+0x1120>
   11770:	mov	r0, #1
   11774:	pop	{r4, r5, r6, lr}
   11778:	b	106dc <__printf_chk@plt>
   1177c:	andeq	r1, r1, r0, lsl #28
   11780:	andeq	r1, r1, ip, lsl #28
   11784:	andeq	r1, r1, ip, asr #28
   11788:	muleq	r1, r0, lr
   1178c:	ldrdeq	r1, [r1], -r4
   11790:	strdeq	r1, [r1], -r4
   11794:	andeq	r1, r1, r0, lsr pc
   11798:	andeq	r1, r1, r8, ror #30
   1179c:	andeq	r1, r1, r4, lsr #31
   117a0:	andeq	r1, r1, r4, ror #31
   117a4:	andeq	r2, r1, ip, lsl r0
   117a8:	andeq	r2, r1, r0
   117ac:	andeq	r2, r1, r8
   117b0:	andeq	r2, r1, r0, lsr #32
   117b4:	andeq	r2, r1, ip, lsr r0
   117b8:	andeq	r2, r1, r0, asr r0
   117bc:	andeq	r2, r1, ip, asr r0
   117c0:	andeq	r2, r1, r8, lsr #1
   117c4:	andeq	r2, r1, r4, asr #1
   117c8:	andeq	r2, r1, r0, lsl #2
   117cc:	andeq	r2, r1, r8, asr #2
   117d0:	muleq	r1, r4, r1
   117d4:			; <UNDEFINED> instruction: 0x000121b8
   117d8:	ldrdeq	r2, [r1], -r4
   117dc:	strdeq	r2, [r1], -r4
   117e0:	andeq	r2, r1, r8, lsr #4
   117e4:	andeq	r2, r1, ip, asr #4
   117e8:	andeq	r2, r1, r4, ror r2
   117ec:	muleq	r1, ip, r2
   117f0:	strdeq	r2, [r1], -r0
   117f4:	andeq	r2, r1, r0, asr #6
   117f8:	andeq	r2, r1, ip, asr #6
   117fc:	andeq	r2, r1, ip, lsl #7
   11800:			; <UNDEFINED> instruction: 0x000123bc
   11804:	strdeq	r2, [r1], -r8
   11808:	andeq	r2, r1, r4, lsr r4
   1180c:	andeq	r2, r1, r0, ror r4
   11810:	andeq	r2, r1, ip, lsr #9
   11814:	andeq	r2, r1, r0, ror #9
   11818:	andeq	r2, r1, r8, lsr r5
   1181c:	andeq	r2, r1, r4, ror r5
   11820:	andeq	r2, r1, r0, asr #11
   11824:	cmp	r0, #53	; 0x35
   11828:	push	{r4, r5, r6, lr}
   1182c:	bhi	11888 <abort@plt+0x1188>
   11830:	cmp	r1, #2
   11834:	bhi	11888 <abort@plt+0x1188>
   11838:	ldr	r6, [pc, #176]	; 118f0 <abort@plt+0x11f0>
   1183c:	ldr	r5, [r6, #8]
   11840:	ldr	ip, [r6, #4]
   11844:	cmp	r5, #0
   11848:	beq	11894 <abort@plt+0x1194>
   1184c:	asr	r2, r0, #4
   11850:	ldr	r3, [pc, #156]	; 118f4 <abort@plt+0x11f4>
   11854:	add	r2, r2, #57	; 0x39
   11858:	add	r1, r3, r1, lsl #2
   1185c:	lsl	r0, r0, #1
   11860:	ldr	r3, [ip, r2, lsl #2]
   11864:	and	r0, r0, #30
   11868:	mov	lr, #3
   1186c:	ldr	r1, [r1, #216]	; 0xd8
   11870:	bic	r3, r3, lr, lsl r0
   11874:	orr	r0, r3, r1, lsl r0
   11878:	mov	r5, #0
   1187c:	str	r0, [ip, r2, lsl #2]
   11880:	mov	r0, r5
   11884:	pop	{r4, r5, r6, pc}
   11888:	mvn	r5, #0
   1188c:	mov	r0, r5
   11890:	pop	{r4, r5, r6, pc}
   11894:	str	r1, [ip, #148]	; 0x94
   11898:	mov	r4, r0
   1189c:	mov	r0, #10
   118a0:	bl	11058 <abort@plt+0x958>
   118a4:	and	r1, r4, #31
   118a8:	mov	r3, #1
   118ac:	ldr	r2, [r6, #4]
   118b0:	asr	r4, r4, #5
   118b4:	lsl	r3, r3, r1
   118b8:	add	r4, r4, #38	; 0x26
   118bc:	mov	r0, #10
   118c0:	str	r3, [r2, r4, lsl #2]
   118c4:	bl	11058 <abort@plt+0x958>
   118c8:	ldr	r3, [r6, #4]
   118cc:	mov	r0, #10
   118d0:	str	r5, [r3, #148]	; 0x94
   118d4:	bl	11058 <abort@plt+0x958>
   118d8:	ldr	r3, [r6, #4]
   118dc:	mov	r0, #10
   118e0:	str	r5, [r3, r4, lsl #2]
   118e4:	bl	11058 <abort@plt+0x958>
   118e8:	mov	r0, r5
   118ec:	pop	{r4, r5, r6, pc}
   118f0:	andeq	r4, r2, ip, lsl #21
   118f4:	andeq	r1, r1, ip, ror #23
   118f8:	ldr	r3, [pc, #72]	; 11948 <abort@plt+0x1248>
   118fc:	ldr	r2, [r3, #8]
   11900:	cmp	r2, #0
   11904:	beq	11930 <abort@plt+0x1230>
   11908:	ldr	r2, [r3, #4]
   1190c:	asr	r3, r0, #4
   11910:	add	r3, r3, #57	; 0x39
   11914:	lsl	r0, r0, #1
   11918:	ldr	r3, [r2, r3, lsl #2]
   1191c:	and	r0, r0, #30
   11920:	lsr	r0, r3, r0
   11924:	and	r0, r0, #3
   11928:	cmp	r0, #3
   1192c:	bne	11938 <abort@plt+0x1238>
   11930:	mvn	r0, #0
   11934:	bx	lr
   11938:	ldr	r3, [pc, #12]	; 1194c <abort@plt+0x124c>
   1193c:	add	r0, r3, r0, lsl #2
   11940:	ldr	r0, [r0, #228]	; 0xe4
   11944:	bx	lr
   11948:	andeq	r4, r2, ip, lsl #21
   1194c:	andeq	r1, r1, ip, ror #23
   11950:	ldr	r3, [pc, #348]	; 11ab4 <abort@plt+0x13b4>
   11954:	push	{r4, r5, r6, r7, r8, r9, lr}
   11958:	cmp	r0, #53	; 0x35
   1195c:	smull	r3, r2, r3, r0
   11960:	ldr	r9, [pc, #336]	; 11ab8 <abort@plt+0x13b8>
   11964:	asr	r3, r0, #31
   11968:	rsb	r3, r3, r2, asr #2
   1196c:	ldr	r6, [pc, #328]	; 11abc <abort@plt+0x13bc>
   11970:	add	r5, r3, r3, lsl #2
   11974:	ldrls	r2, [r9, #4]
   11978:	sub	sp, sp, #548	; 0x224
   1197c:	ldr	r1, [r6]
   11980:	sub	r5, r0, r5, lsl #1
   11984:	str	r1, [sp, #540]	; 0x21c
   11988:	ldrls	r3, [r2, r3, lsl #2]
   1198c:	addls	r5, r5, r5, lsl #1
   11990:	mvnhi	r5, #0
   11994:	lsrls	r5, r3, r5
   11998:	add	r7, sp, #28
   1199c:	andls	r5, r5, #7
   119a0:	mov	r2, r7
   119a4:	mov	r4, r0
   119a8:	mov	r1, r5
   119ac:	bl	113dc <abort@plt+0xcdc>
   119b0:	mov	r0, r4
   119b4:	bl	11320 <abort@plt+0xc20>
   119b8:	ldr	r2, [r9, #8]
   119bc:	mov	r3, #0
   119c0:	cmp	r2, r3
   119c4:	strb	r3, [sp, #16]
   119c8:	mov	r8, r0
   119cc:	beq	119f8 <abort@plt+0x12f8>
   119d0:	ldr	r1, [r9, #4]
   119d4:	asr	r2, r4, #4
   119d8:	add	r2, r2, #57	; 0x39
   119dc:	lsl	r3, r4, #1
   119e0:	ldr	r2, [r1, r2, lsl #2]
   119e4:	and	r3, r3, #30
   119e8:	lsr	r3, r2, r3
   119ec:	and	r3, r3, #3
   119f0:	cmp	r3, #3
   119f4:	bne	11a50 <abort@plt+0x1350>
   119f8:	cmp	r5, #1
   119fc:	add	r9, sp, #16
   11a00:	ble	11a94 <abort@plt+0x1394>
   11a04:	ldr	r3, [pc, #180]	; 11ac0 <abort@plt+0x13c0>
   11a08:	str	r9, [sp, #12]
   11a0c:	add	r3, r3, r5, lsl #2
   11a10:	str	r7, [sp, #8]
   11a14:	ldr	r1, [r3, #256]	; 0x100
   11a18:	str	r5, [sp]
   11a1c:	str	r1, [sp, #4]
   11a20:	mov	r3, r8
   11a24:	mov	r2, r4
   11a28:	ldr	r1, [pc, #148]	; 11ac4 <abort@plt+0x13c4>
   11a2c:	mov	r0, #1
   11a30:	bl	106dc <__printf_chk@plt>
   11a34:	ldr	r2, [sp, #540]	; 0x21c
   11a38:	ldr	r3, [r6]
   11a3c:	mov	r0, #0
   11a40:	cmp	r2, r3
   11a44:	bne	11ab0 <abort@plt+0x13b0>
   11a48:	add	sp, sp, #548	; 0x224
   11a4c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11a50:	ldr	r2, [pc, #104]	; 11ac0 <abort@plt+0x13c0>
   11a54:	add	r3, r2, r3, lsl #2
   11a58:	ldr	r3, [r3, #228]	; 0xe4
   11a5c:	cmn	r3, #1
   11a60:	beq	119f8 <abort@plt+0x12f8>
   11a64:	and	r3, r3, #3
   11a68:	add	r9, sp, #16
   11a6c:	add	r2, r2, r3, lsl #2
   11a70:	mov	r0, r9
   11a74:	ldr	r2, [r2, #240]	; 0xf0
   11a78:	ldr	r3, [pc, #72]	; 11ac8 <abort@plt+0x13c8>
   11a7c:	str	r2, [sp]
   11a80:	mov	r1, #1
   11a84:	mov	r2, #12
   11a88:	bl	106b8 <__sprintf_chk@plt>
   11a8c:	cmp	r5, #1
   11a90:	bgt	11a04 <abort@plt+0x1304>
   11a94:	stm	sp, {r5, r7, r9}
   11a98:	mov	r3, r8
   11a9c:	mov	r2, r4
   11aa0:	ldr	r1, [pc, #36]	; 11acc <abort@plt+0x13cc>
   11aa4:	mov	r0, #1
   11aa8:	bl	106dc <__printf_chk@plt>
   11aac:	b	11a34 <abort@plt+0x1334>
   11ab0:	bl	10640 <__stack_chk_fail@plt>
   11ab4:	strbtvs	r6, [r6], -r7, ror #12
   11ab8:	andeq	r4, r2, ip, lsl #21
   11abc:	andeq	r3, r2, r8, lsl #30
   11ac0:	andeq	r1, r1, ip, ror #23
   11ac4:	andeq	r2, r1, r0, asr #12
   11ac8:	andeq	r2, r1, ip, lsl #12
   11acc:	andeq	r2, r1, r8, lsl r6
   11ad0:	cmn	r1, #1
   11ad4:	push	{r4, r5, r6, lr}
   11ad8:	mov	r5, r2
   11adc:	mov	r6, r3
   11ae0:	mov	r4, r0
   11ae4:	beq	11aec <abort@plt+0x13ec>
   11ae8:	bl	112b0 <abort@plt+0xbb0>
   11aec:	cmn	r5, #1
   11af0:	beq	11b50 <abort@plt+0x1450>
   11af4:	ldr	r3, [pc, #116]	; 11b70 <abort@plt+0x1470>
   11af8:	asr	r1, r4, #31
   11afc:	cmp	r4, #53	; 0x35
   11b00:	smull	r2, r3, r3, r4
   11b04:	rsb	r1, r1, r3, asr #2
   11b08:	add	r0, r1, r1, lsl #2
   11b0c:	sub	r0, r4, r0, lsl #1
   11b10:	bhi	11b34 <abort@plt+0x1434>
   11b14:	ldr	r3, [pc, #88]	; 11b74 <abort@plt+0x1474>
   11b18:	add	r0, r0, r0, lsl #1
   11b1c:	ldr	r3, [r3, #4]
   11b20:	ldr	r3, [r3, r1, lsl #2]
   11b24:	lsr	r0, r3, r0
   11b28:	and	r0, r0, #7
   11b2c:	cmp	r0, #1
   11b30:	beq	11b44 <abort@plt+0x1444>
   11b34:	ldr	r0, [pc, #60]	; 11b78 <abort@plt+0x1478>
   11b38:	bl	10664 <puts@plt>
   11b3c:	mov	r0, #1
   11b40:	pop	{r4, r5, r6, pc}
   11b44:	mov	r1, r5
   11b48:	mov	r0, r4
   11b4c:	bl	1135c <abort@plt+0xc5c>
   11b50:	cmn	r6, #1
   11b54:	bne	11b60 <abort@plt+0x1460>
   11b58:	mov	r0, #0
   11b5c:	pop	{r4, r5, r6, pc}
   11b60:	mov	r1, r6
   11b64:	mov	r0, r4
   11b68:	pop	{r4, r5, r6, lr}
   11b6c:	b	11824 <abort@plt+0x1124>
   11b70:	strbtvs	r6, [r6], -r7, ror #12
   11b74:	andeq	r4, r2, ip, lsl #21
   11b78:	andeq	r2, r1, ip, ror #12
   11b7c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11b80:	mov	r7, r0
   11b84:	ldr	r6, [pc, #72]	; 11bd4 <abort@plt+0x14d4>
   11b88:	ldr	r5, [pc, #72]	; 11bd8 <abort@plt+0x14d8>
   11b8c:	add	r6, pc, r6
   11b90:	add	r5, pc, r5
   11b94:	sub	r6, r6, r5
   11b98:	mov	r8, r1
   11b9c:	mov	r9, r2
   11ba0:	bl	105fc <strcmp@plt-0x20>
   11ba4:	asrs	r6, r6, #2
   11ba8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11bac:	mov	r4, #0
   11bb0:	add	r4, r4, #1
   11bb4:	ldr	r3, [r5], #4
   11bb8:	mov	r2, r9
   11bbc:	mov	r1, r8
   11bc0:	mov	r0, r7
   11bc4:	blx	r3
   11bc8:	cmp	r6, r4
   11bcc:	bne	11bb0 <abort@plt+0x14b0>
   11bd0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11bd4:	andeq	r2, r1, r0, ror r3
   11bd8:	andeq	r2, r1, r8, ror #6
   11bdc:	bx	lr

Disassembly of section .fini:

00011be0 <.fini>:
   11be0:	push	{r3, lr}
   11be4:	pop	{r3, pc}
