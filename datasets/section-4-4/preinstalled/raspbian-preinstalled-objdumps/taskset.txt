
raspbian-preinstalled/taskset:     file format elf32-littlearm


Disassembly of section .init:

00010f8c <.init>:
   10f8c:	push	{r3, lr}
   10f90:	bl	11914 <strspn@plt+0x62c>
   10f94:	pop	{r3, pc}

Disassembly of section .plt:

00010f98 <fdopen@plt-0x14>:
   10f98:	push	{lr}		; (str lr, [sp, #-4]!)
   10f9c:	ldr	lr, [pc, #4]	; 10fa8 <fdopen@plt-0x4>
   10fa0:	add	lr, pc, lr
   10fa4:	ldr	pc, [lr, #8]!
   10fa8:	andeq	r4, r1, ip, lsr #30

00010fac <fdopen@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #20, 20	; 0x14000
   10fb4:	ldr	pc, [ip, #3884]!	; 0xf2c

00010fb8 <calloc@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #20, 20	; 0x14000
   10fc0:	ldr	pc, [ip, #3876]!	; 0xf24

00010fc4 <raise@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #20, 20	; 0x14000
   10fcc:	ldr	pc, [ip, #3868]!	; 0xf1c

00010fd0 <strcmp@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #20, 20	; 0x14000
   10fd8:	ldr	pc, [ip, #3860]!	; 0xf14

00010fdc <strtol@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #20, 20	; 0x14000
   10fe4:	ldr	pc, [ip, #3852]!	; 0xf0c

00010fe8 <strcspn@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #20, 20	; 0x14000
   10ff0:	ldr	pc, [ip, #3844]!	; 0xf04

00010ff4 <read@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #20, 20	; 0x14000
   10ffc:	ldr	pc, [ip, #3836]!	; 0xefc

00011000 <free@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #20, 20	; 0x14000
   11008:	ldr	pc, [ip, #3828]!	; 0xef4

0001100c <fgets@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #20, 20	; 0x14000
   11014:	ldr	pc, [ip, #3820]!	; 0xeec

00011018 <nanosleep@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #20, 20	; 0x14000
   11020:	ldr	pc, [ip, #3812]!	; 0xee4

00011024 <ferror@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #20, 20	; 0x14000
   1102c:	ldr	pc, [ip, #3804]!	; 0xedc

00011030 <strndup@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #20, 20	; 0x14000
   11038:	ldr	pc, [ip, #3796]!	; 0xed4

0001103c <_exit@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #20, 20	; 0x14000
   11044:	ldr	pc, [ip, #3788]!	; 0xecc

00011048 <memcpy@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #20, 20	; 0x14000
   11050:	ldr	pc, [ip, #3780]!	; 0xec4

00011054 <execvp@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #20, 20	; 0x14000
   1105c:	ldr	pc, [ip, #3772]!	; 0xebc

00011060 <__strtoull_internal@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #20, 20	; 0x14000
   11068:	ldr	pc, [ip, #3764]!	; 0xeb4

0001106c <dcgettext@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #20, 20	; 0x14000
   11074:	ldr	pc, [ip, #3756]!	; 0xeac

00011078 <strdup@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #20, 20	; 0x14000
   11080:	ldr	pc, [ip, #3748]!	; 0xea4

00011084 <__stack_chk_fail@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #20, 20	; 0x14000
   1108c:	ldr	pc, [ip, #3740]!	; 0xe9c

00011090 <textdomain@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #20, 20	; 0x14000
   11098:	ldr	pc, [ip, #3732]!	; 0xe94

0001109c <err@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #20, 20	; 0x14000
   110a4:	ldr	pc, [ip, #3724]!	; 0xe8c

000110a8 <__fxstatat64@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #20, 20	; 0x14000
   110b0:	ldr	pc, [ip, #3716]!	; 0xe84

000110b4 <__fpending@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #20, 20	; 0x14000
   110bc:	ldr	pc, [ip, #3708]!	; 0xe7c

000110c0 <opendir@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #20, 20	; 0x14000
   110c8:	ldr	pc, [ip, #3700]!	; 0xe74

000110cc <open64@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #20, 20	; 0x14000
   110d4:	ldr	pc, [ip, #3692]!	; 0xe6c

000110d8 <malloc@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #20, 20	; 0x14000
   110e0:	ldr	pc, [ip, #3684]!	; 0xe64

000110e4 <__libc_start_main@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #20, 20	; 0x14000
   110ec:	ldr	pc, [ip, #3676]!	; 0xe5c

000110f0 <__ctype_tolower_loc@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #20, 20	; 0x14000
   110f8:	ldr	pc, [ip, #3668]!	; 0xe54

000110fc <__gmon_start__@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #20, 20	; 0x14000
   11104:	ldr	pc, [ip, #3660]!	; 0xe4c

00011108 <getopt_long@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #20, 20	; 0x14000
   11110:	ldr	pc, [ip, #3652]!	; 0xe44

00011114 <__ctype_b_loc@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #20, 20	; 0x14000
   1111c:	ldr	pc, [ip, #3644]!	; 0xe3c

00011120 <getpid@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #20, 20	; 0x14000
   11128:	ldr	pc, [ip, #3636]!	; 0xe34

0001112c <exit@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #20, 20	; 0x14000
   11134:	ldr	pc, [ip, #3628]!	; 0xe2c

00011138 <syscall@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #20, 20	; 0x14000
   11140:	ldr	pc, [ip, #3620]!	; 0xe24

00011144 <strtoul@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #20, 20	; 0x14000
   1114c:	ldr	pc, [ip, #3612]!	; 0xe1c

00011150 <strlen@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #20, 20	; 0x14000
   11158:	ldr	pc, [ip, #3604]!	; 0xe14

0001115c <strchr@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #20, 20	; 0x14000
   11164:	ldr	pc, [ip, #3596]!	; 0xe0c

00011168 <openat64@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #20, 20	; 0x14000
   11170:	ldr	pc, [ip, #3588]!	; 0xe04

00011174 <warnx@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #20, 20	; 0x14000
   1117c:	ldr	pc, [ip, #3580]!	; 0xdfc

00011180 <__errno_location@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #20, 20	; 0x14000
   11188:	ldr	pc, [ip, #3572]!	; 0xdf4

0001118c <__sprintf_chk@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #20, 20	; 0x14000
   11194:	ldr	pc, [ip, #3564]!	; 0xdec

00011198 <__cxa_atexit@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #20, 20	; 0x14000
   111a0:	ldr	pc, [ip, #3556]!	; 0xde4

000111a4 <__vasprintf_chk@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #20, 20	; 0x14000
   111ac:	ldr	pc, [ip, #3548]!	; 0xddc

000111b0 <__sched_cpufree@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #20, 20	; 0x14000
   111b8:	ldr	pc, [ip, #3540]!	; 0xdd4

000111bc <memset@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #20, 20	; 0x14000
   111c4:	ldr	pc, [ip, #3532]!	; 0xdcc

000111c8 <fgetc@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #20, 20	; 0x14000
   111d0:	ldr	pc, [ip, #3524]!	; 0xdc4

000111d4 <__printf_chk@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #20, 20	; 0x14000
   111dc:	ldr	pc, [ip, #3516]!	; 0xdbc

000111e0 <strtod@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #20, 20	; 0x14000
   111e8:	ldr	pc, [ip, #3508]!	; 0xdb4

000111ec <__sched_cpualloc@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #20, 20	; 0x14000
   111f4:	ldr	pc, [ip, #3500]!	; 0xdac

000111f8 <__fprintf_chk@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #20, 20	; 0x14000
   11200:	ldr	pc, [ip, #3492]!	; 0xda4

00011204 <sched_setaffinity@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #20, 20	; 0x14000
   1120c:	ldr	pc, [ip, #3484]!	; 0xd9c

00011210 <fclose@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #20, 20	; 0x14000
   11218:	ldr	pc, [ip, #3476]!	; 0xd94

0001121c <setlocale@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #20, 20	; 0x14000
   11224:	ldr	pc, [ip, #3468]!	; 0xd8c

00011228 <errx@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #20, 20	; 0x14000
   11230:	ldr	pc, [ip, #3460]!	; 0xd84

00011234 <warn@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #20, 20	; 0x14000
   1123c:	ldr	pc, [ip, #3452]!	; 0xd7c

00011240 <fputc@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #20, 20	; 0x14000
   11248:	ldr	pc, [ip, #3444]!	; 0xd74

0001124c <sscanf@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #20, 20	; 0x14000
   11254:	ldr	pc, [ip, #3436]!	; 0xd6c

00011258 <localeconv@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #20, 20	; 0x14000
   11260:	ldr	pc, [ip, #3428]!	; 0xd64

00011264 <readdir64@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #20, 20	; 0x14000
   1126c:	ldr	pc, [ip, #3420]!	; 0xd5c

00011270 <dirfd@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #20, 20	; 0x14000
   11278:	ldr	pc, [ip, #3412]!	; 0xd54

0001127c <__strtoll_internal@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #20, 20	; 0x14000
   11284:	ldr	pc, [ip, #3404]!	; 0xd4c

00011288 <sched_getaffinity@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #20, 20	; 0x14000
   11290:	ldr	pc, [ip, #3396]!	; 0xd44

00011294 <bindtextdomain@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #20, 20	; 0x14000
   1129c:	ldr	pc, [ip, #3388]!	; 0xd3c

000112a0 <fputs@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #20, 20	; 0x14000
   112a8:	ldr	pc, [ip, #3380]!	; 0xd34

000112ac <strncmp@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #20, 20	; 0x14000
   112b4:	ldr	pc, [ip, #3372]!	; 0xd2c

000112b8 <abort@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #20, 20	; 0x14000
   112c0:	ldr	pc, [ip, #3364]!	; 0xd24

000112c4 <close@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #20, 20	; 0x14000
   112cc:	ldr	pc, [ip, #3356]!	; 0xd1c

000112d0 <closedir@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #20, 20	; 0x14000
   112d8:	ldr	pc, [ip, #3348]!	; 0xd14

000112dc <__snprintf_chk@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #20, 20	; 0x14000
   112e4:	ldr	pc, [ip, #3340]!	; 0xd0c

000112e8 <strspn@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #20, 20	; 0x14000
   112f0:	ldr	pc, [ip, #3332]!	; 0xd04

Disassembly of section .text:

000112f8 <.text>:
   112f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112fc:	sub	sp, sp, #60	; 0x3c
   11300:	ldr	sl, [pc, #1356]	; 11854 <strspn@plt+0x56c>
   11304:	mov	r5, r0
   11308:	mov	r6, r1
   1130c:	ldr	r3, [sl]
   11310:	ldr	r1, [pc, #1344]	; 11858 <strspn@plt+0x570>
   11314:	mov	r0, #6
   11318:	str	r3, [sp, #52]	; 0x34
   1131c:	bl	1121c <setlocale@plt>
   11320:	ldr	r1, [pc, #1332]	; 1185c <strspn@plt+0x574>
   11324:	ldr	r0, [pc, #1332]	; 11860 <strspn@plt+0x578>
   11328:	bl	11294 <bindtextdomain@plt>
   1132c:	ldr	r0, [pc, #1324]	; 11860 <strspn@plt+0x578>
   11330:	bl	11090 <textdomain@plt>
   11334:	ldr	r0, [pc, #1320]	; 11864 <strspn@plt+0x57c>
   11338:	bl	14d38 <strspn@plt+0x3a50>
   1133c:	ldr	r8, [pc, #1316]	; 11868 <strspn@plt+0x580>
   11340:	mov	r3, #0
   11344:	sub	r2, r5, #-1073741823	; 0xc0000001
   11348:	ldr	r7, [pc, #1308]	; 1186c <strspn@plt+0x584>
   1134c:	mov	r9, r3
   11350:	mov	fp, r3
   11354:	add	r2, r6, r2, lsl #2
   11358:	str	r2, [sp, #12]
   1135c:	str	r3, [sp, #28]
   11360:	str	r3, [sp, #32]
   11364:	str	r3, [sp, #36]	; 0x24
   11368:	str	r3, [sp, #40]	; 0x28
   1136c:	str	r3, [sp, #44]	; 0x2c
   11370:	str	r3, [sp, #48]	; 0x30
   11374:	mov	r4, #0
   11378:	str	r4, [sp]
   1137c:	mov	r3, r8
   11380:	mov	r2, r7
   11384:	mov	r1, r6
   11388:	mov	r0, r5
   1138c:	bl	11108 <getopt_long@plt>
   11390:	cmn	r0, #1
   11394:	beq	1149c <strspn@plt+0x1b4>
   11398:	sub	r0, r0, #86	; 0x56
   1139c:	cmp	r0, #26
   113a0:	ldrls	pc, [pc, r0, lsl #2]
   113a4:	b	11620 <strspn@plt+0x338>
   113a8:	andeq	r1, r1, r8, asr r4
   113ac:	andeq	r1, r1, r0, lsr #12
   113b0:	andeq	r1, r1, r0, lsr #12
   113b4:	andeq	r1, r1, r0, lsr #12
   113b8:	andeq	r1, r1, r0, lsr #12
   113bc:	andeq	r1, r1, r0, lsr #12
   113c0:	andeq	r1, r1, r0, lsr #12
   113c4:	andeq	r1, r1, r0, lsr #12
   113c8:	andeq	r1, r1, r0, lsr #12
   113cc:	andeq	r1, r1, r0, lsr #12
   113d0:	andeq	r1, r1, r0, lsr #12
   113d4:	andeq	r1, r1, r0, asr r4
   113d8:	andeq	r1, r1, r0, lsr #12
   113dc:	andeq	r1, r1, r0, asr #8
   113e0:	andeq	r1, r1, r0, lsr #12
   113e4:	andeq	r1, r1, r0, lsr #12
   113e8:	andeq	r1, r1, r0, lsr #12
   113ec:	andeq	r1, r1, r0, lsr #12
   113f0:	ldrdeq	r1, [r1], -r4
   113f4:	andeq	r1, r1, r0, lsr #12
   113f8:	andeq	r1, r1, r0, lsr #12
   113fc:	andeq	r1, r1, r0, lsr #12
   11400:	andeq	r1, r1, r0, lsr #12
   11404:	andeq	r1, r1, r0, lsr #12
   11408:	andeq	r1, r1, r0, lsr #12
   1140c:	andeq	r1, r1, r0, lsr #12
   11410:	andeq	r1, r1, r4, lsl r4
   11414:	ldr	r3, [sp, #12]
   11418:	mov	r2, #5
   1141c:	ldr	r1, [pc, #1100]	; 11870 <strspn@plt+0x588>
   11420:	mov	r0, #0
   11424:	ldr	r4, [r3]
   11428:	bl	1106c <dcgettext@plt>
   1142c:	mov	r1, r0
   11430:	mov	r0, r4
   11434:	bl	12a28 <strspn@plt+0x1740>
   11438:	mov	fp, r0
   1143c:	b	11374 <strspn@plt+0x8c>
   11440:	ldrb	r3, [sp, #48]	; 0x30
   11444:	orr	r3, r3, #1
   11448:	strb	r3, [sp, #48]	; 0x30
   1144c:	b	11374 <strspn@plt+0x8c>
   11450:	mov	r9, #1
   11454:	b	11378 <strspn@plt+0x90>
   11458:	mov	r2, #5
   1145c:	ldr	r1, [pc, #1040]	; 11874 <strspn@plt+0x58c>
   11460:	mov	r0, #0
   11464:	bl	1106c <dcgettext@plt>
   11468:	ldr	r2, [pc, #1032]	; 11878 <strspn@plt+0x590>
   1146c:	ldr	r3, [pc, #1032]	; 1187c <strspn@plt+0x594>
   11470:	ldr	r2, [r2]
   11474:	mov	r1, r0
   11478:	mov	r0, #1
   1147c:	bl	111d4 <__printf_chk@plt>
   11480:	ldr	r2, [sp, #52]	; 0x34
   11484:	ldr	r3, [sl]
   11488:	mov	r0, #0
   1148c:	cmp	r2, r3
   11490:	bne	11810 <strspn@plt+0x528>
   11494:	add	sp, sp, #60	; 0x3c
   11498:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1149c:	ldr	r8, [pc, #988]	; 11880 <strspn@plt+0x598>
   114a0:	cmp	fp, #0
   114a4:	ldr	r3, [r8]
   114a8:	sub	r3, r5, r3
   114ac:	beq	11604 <strspn@plt+0x31c>
   114b0:	sub	r3, r3, #1
   114b4:	cmp	r3, #1
   114b8:	bhi	1160c <strspn@plt+0x324>
   114bc:	bl	13cd8 <strspn@plt+0x29f0>
   114c0:	subs	r4, r0, #0
   114c4:	ble	11814 <strspn@plt+0x52c>
   114c8:	add	r2, sp, #24
   114cc:	add	r1, sp, #36	; 0x24
   114d0:	bl	13c90 <strspn@plt+0x29a8>
   114d4:	cmp	r0, #0
   114d8:	str	r0, [sp, #32]
   114dc:	beq	1183c <strspn@plt+0x554>
   114e0:	ldr	r2, [sp, #24]
   114e4:	rsb	r2, r2, r2, lsl #3
   114e8:	mov	r0, r2
   114ec:	str	r2, [sp, #44]	; 0x2c
   114f0:	str	r2, [sp, #12]
   114f4:	bl	110d8 <malloc@plt>
   114f8:	ldr	r2, [sp, #12]
   114fc:	adds	r7, r2, #0
   11500:	movne	r7, #1
   11504:	cmp	r0, #0
   11508:	movne	r7, #0
   1150c:	cmp	r7, #0
   11510:	mov	r3, r0
   11514:	bne	11830 <strspn@plt+0x548>
   11518:	mov	r0, r4
   1151c:	mov	r2, r7
   11520:	add	r1, sp, #20
   11524:	str	r3, [sp, #40]	; 0x28
   11528:	bl	13c90 <strspn@plt+0x29a8>
   1152c:	subs	r4, r0, #0
   11530:	beq	1183c <strspn@plt+0x554>
   11534:	ldr	r3, [r8]
   11538:	sub	r5, r5, r3
   1153c:	cmp	r5, #1
   11540:	ldrbeq	r3, [sp, #48]	; 0x30
   11544:	orreq	r3, r3, #2
   11548:	strbeq	r3, [sp, #48]	; 0x30
   1154c:	beq	1159c <strspn@plt+0x2b4>
   11550:	ldrb	r1, [sp, #48]	; 0x30
   11554:	ldr	r0, [r6, r3, lsl #2]
   11558:	ldr	r2, [sp, #20]
   1155c:	ands	r5, r1, #1
   11560:	beq	117f0 <strspn@plt+0x508>
   11564:	mov	r1, r4
   11568:	mov	r3, r7
   1156c:	bl	14218 <strspn@plt+0x2f30>
   11570:	cmp	r0, #0
   11574:	movne	r0, r7
   11578:	movne	r2, #5
   1157c:	ldrne	r1, [pc, #768]	; 11884 <strspn@plt+0x59c>
   11580:	beq	1159c <strspn@plt+0x2b4>
   11584:	bl	1106c <dcgettext@plt>
   11588:	ldr	r3, [r8]
   1158c:	ldr	r2, [r6, r3, lsl #2]
   11590:	mov	r1, r0
   11594:	mov	r0, #1
   11598:	bl	11228 <errx@plt>
   1159c:	cmp	fp, #0
   115a0:	moveq	r9, #0
   115a4:	cmp	r9, #0
   115a8:	beq	11658 <strspn@plt+0x370>
   115ac:	mov	r0, fp
   115b0:	bl	14620 <strspn@plt+0x3338>
   115b4:	mov	r5, r0
   115b8:	b	115cc <strspn@plt+0x2e4>
   115bc:	mov	r2, r4
   115c0:	ldr	r1, [sp, #20]
   115c4:	add	r0, sp, #28
   115c8:	bl	11b04 <strspn@plt+0x81c>
   115cc:	add	r1, sp, #28
   115d0:	mov	r0, r5
   115d4:	bl	14700 <strspn@plt+0x3418>
   115d8:	cmp	r0, #0
   115dc:	beq	115bc <strspn@plt+0x2d4>
   115e0:	mov	r0, r5
   115e4:	bl	146d8 <strspn@plt+0x33f0>
   115e8:	ldr	r0, [sp, #40]	; 0x28
   115ec:	bl	11000 <free@plt>
   115f0:	ldr	r0, [sp, #32]
   115f4:	bl	13cd4 <strspn@plt+0x29ec>
   115f8:	mov	r0, r4
   115fc:	bl	13cd4 <strspn@plt+0x29ec>
   11600:	b	11480 <strspn@plt+0x198>
   11604:	cmp	r3, #1
   11608:	bgt	114bc <strspn@plt+0x1d4>
   1160c:	mov	r2, #5
   11610:	ldr	r1, [pc, #624]	; 11888 <strspn@plt+0x5a0>
   11614:	mov	r0, #0
   11618:	bl	1106c <dcgettext@plt>
   1161c:	bl	11174 <warnx@plt>
   11620:	ldr	r3, [pc, #612]	; 1188c <strspn@plt+0x5a4>
   11624:	mov	r2, #5
   11628:	ldr	r1, [pc, #608]	; 11890 <strspn@plt+0x5a8>
   1162c:	mov	r0, #0
   11630:	ldr	r4, [r3]
   11634:	bl	1106c <dcgettext@plt>
   11638:	ldr	r3, [pc, #568]	; 11878 <strspn@plt+0x590>
   1163c:	mov	r1, #1
   11640:	ldr	r3, [r3]
   11644:	mov	r2, r0
   11648:	mov	r0, r4
   1164c:	bl	111f8 <__fprintf_chk@plt>
   11650:	mov	r0, #1
   11654:	bl	1112c <exit@plt>
   11658:	mov	r2, r4
   1165c:	ldr	r1, [sp, #20]
   11660:	add	r0, sp, #28
   11664:	str	fp, [sp, #28]
   11668:	bl	11b04 <strspn@plt+0x81c>
   1166c:	ldr	r0, [sp, #40]	; 0x28
   11670:	bl	11000 <free@plt>
   11674:	ldr	r0, [sp, #32]
   11678:	bl	13cd4 <strspn@plt+0x29ec>
   1167c:	mov	r0, r4
   11680:	bl	13cd4 <strspn@plt+0x29ec>
   11684:	cmp	fp, #0
   11688:	bne	11480 <strspn@plt+0x198>
   1168c:	ldr	r4, [r8]
   11690:	add	r4, r4, #1
   11694:	add	r1, r6, r4, lsl #2
   11698:	ldr	r0, [r6, r4, lsl #2]
   1169c:	bl	11054 <execvp@plt>
   116a0:	bl	11180 <__errno_location@plt>
   116a4:	mov	r2, #5
   116a8:	ldr	r1, [pc, #484]	; 11894 <strspn@plt+0x5ac>
   116ac:	ldr	r3, [r0]
   116b0:	mov	r0, fp
   116b4:	cmp	r3, #2
   116b8:	moveq	r5, #127	; 0x7f
   116bc:	movne	r5, #126	; 0x7e
   116c0:	bl	1106c <dcgettext@plt>
   116c4:	ldr	r2, [r6, r4, lsl #2]
   116c8:	mov	r1, r0
   116cc:	mov	r0, r5
   116d0:	bl	1109c <err@plt>
   116d4:	ldr	r3, [pc, #444]	; 11898 <strspn@plt+0x5b0>
   116d8:	mov	r2, #5
   116dc:	ldr	r1, [pc, #440]	; 1189c <strspn@plt+0x5b4>
   116e0:	mov	r0, #0
   116e4:	ldr	r4, [r3]
   116e8:	bl	1106c <dcgettext@plt>
   116ec:	ldr	r5, [pc, #388]	; 11878 <strspn@plt+0x590>
   116f0:	mov	r1, #1
   116f4:	ldr	r3, [r5]
   116f8:	mov	r2, r0
   116fc:	mov	r0, r4
   11700:	bl	111f8 <__fprintf_chk@plt>
   11704:	mov	r1, r4
   11708:	mov	r0, #10
   1170c:	bl	11240 <fputc@plt>
   11710:	mov	r2, #5
   11714:	ldr	r1, [pc, #388]	; 118a0 <strspn@plt+0x5b8>
   11718:	mov	r0, #0
   1171c:	bl	1106c <dcgettext@plt>
   11720:	mov	r1, r4
   11724:	bl	112a0 <fputs@plt>
   11728:	mov	r1, r4
   1172c:	mov	r0, #10
   11730:	bl	11240 <fputc@plt>
   11734:	mov	r2, #5
   11738:	ldr	r1, [pc, #356]	; 118a4 <strspn@plt+0x5bc>
   1173c:	mov	r0, #0
   11740:	bl	1106c <dcgettext@plt>
   11744:	mov	r1, #1
   11748:	mov	r2, r0
   1174c:	mov	r0, r4
   11750:	bl	111f8 <__fprintf_chk@plt>
   11754:	mov	r2, #5
   11758:	ldr	r1, [pc, #328]	; 118a8 <strspn@plt+0x5c0>
   1175c:	mov	r0, #0
   11760:	bl	1106c <dcgettext@plt>
   11764:	mov	r2, #5
   11768:	ldr	r1, [pc, #316]	; 118ac <strspn@plt+0x5c4>
   1176c:	mov	r6, r0
   11770:	mov	r0, #0
   11774:	bl	1106c <dcgettext@plt>
   11778:	ldr	r2, [pc, #304]	; 118b0 <strspn@plt+0x5c8>
   1177c:	mov	r3, r6
   11780:	str	r2, [sp]
   11784:	ldr	r1, [pc, #296]	; 118b4 <strspn@plt+0x5cc>
   11788:	ldr	r2, [pc, #296]	; 118b8 <strspn@plt+0x5d0>
   1178c:	str	r0, [sp, #4]
   11790:	mov	r0, #1
   11794:	bl	111d4 <__printf_chk@plt>
   11798:	mov	r1, r4
   1179c:	mov	r0, #10
   117a0:	bl	11240 <fputc@plt>
   117a4:	mov	r2, #5
   117a8:	ldr	r1, [pc, #268]	; 118bc <strspn@plt+0x5d4>
   117ac:	mov	r0, #0
   117b0:	bl	1106c <dcgettext@plt>
   117b4:	ldr	r3, [r5]
   117b8:	mov	r1, #1
   117bc:	mov	r2, r0
   117c0:	mov	r0, r4
   117c4:	bl	111f8 <__fprintf_chk@plt>
   117c8:	mov	r2, #5
   117cc:	ldr	r1, [pc, #236]	; 118c0 <strspn@plt+0x5d8>
   117d0:	mov	r0, #0
   117d4:	bl	1106c <dcgettext@plt>
   117d8:	ldr	r2, [pc, #228]	; 118c4 <strspn@plt+0x5dc>
   117dc:	mov	r1, r0
   117e0:	mov	r0, #1
   117e4:	bl	111d4 <__printf_chk@plt>
   117e8:	mov	r0, #0
   117ec:	bl	1112c <exit@plt>
   117f0:	mov	r1, r4
   117f4:	bl	140c0 <strspn@plt+0x2dd8>
   117f8:	cmp	r0, #0
   117fc:	beq	1159c <strspn@plt+0x2b4>
   11800:	mov	r0, r5
   11804:	mov	r2, #5
   11808:	ldr	r1, [pc, #184]	; 118c8 <strspn@plt+0x5e0>
   1180c:	b	11584 <strspn@plt+0x29c>
   11810:	bl	11084 <__stack_chk_fail@plt>
   11814:	ldr	r1, [pc, #176]	; 118cc <strspn@plt+0x5e4>
   11818:	mov	r2, #5
   1181c:	mov	r0, #0
   11820:	bl	1106c <dcgettext@plt>
   11824:	mov	r1, r0
   11828:	mov	r0, #1
   1182c:	bl	11228 <errx@plt>
   11830:	ldr	r1, [pc, #152]	; 118d0 <strspn@plt+0x5e8>
   11834:	mov	r0, #1
   11838:	bl	1109c <err@plt>
   1183c:	ldr	r1, [pc, #144]	; 118d4 <strspn@plt+0x5ec>
   11840:	mov	r2, #5
   11844:	bl	1106c <dcgettext@plt>
   11848:	mov	r1, r0
   1184c:	mov	r0, #1
   11850:	bl	1109c <err@plt>
   11854:	ldrdeq	r5, [r2], -r0
   11858:	andeq	r5, r1, ip, lsl #4
   1185c:	andeq	r4, r1, r8, asr #29
   11860:	ldrdeq	r4, [r1], -ip
   11864:			; <UNDEFINED> instruction: 0x00011bb8
   11868:	andeq	r4, r1, ip, asr sp
   1186c:	andeq	r5, r1, r0, ror #4
   11870:	andeq	r4, r1, r8, ror #29
   11874:	andeq	r4, r1, r0, lsl #30
   11878:	andeq	r6, r2, r0, lsl r0
   1187c:	andeq	r4, r1, ip, lsl #30
   11880:	andeq	r6, r2, r8, lsl r0
   11884:	andeq	r5, r1, r8, asr #5
   11888:	andeq	r5, r1, r8, ror #4
   1188c:	andeq	r6, r2, r0, lsr #32
   11890:	andeq	r5, r1, r8, lsr r2
   11894:	andeq	r5, r1, r8, lsl #6
   11898:	andeq	r6, r2, r4, lsr #32
   1189c:	andeq	r4, r1, r0, lsr #30
   118a0:	andeq	r4, r1, ip, asr pc
   118a4:	andeq	r4, r1, ip, lsl #31
   118a8:	andeq	r5, r1, ip, asr r0
   118ac:	andeq	r5, r1, r0, ror r0
   118b0:	andeq	r5, r1, r0, lsr #1
   118b4:	andeq	r5, r1, ip, lsl #1
   118b8:	andeq	r5, r1, r0, lsl #1
   118bc:	strheq	r5, [r1], -r0
   118c0:	andeq	r5, r1, r0, lsl r2
   118c4:	andeq	r5, r1, ip, lsr #4
   118c8:	andeq	r5, r1, r8, ror #5
   118cc:	andeq	r5, r1, r4, ror r2
   118d0:	andeq	r5, r1, ip, lsr #5
   118d4:	muleq	r1, r8, r2
   118d8:	mov	fp, #0
   118dc:	mov	lr, #0
   118e0:	pop	{r1}		; (ldr r1, [sp], #4)
   118e4:	mov	r2, sp
   118e8:	push	{r2}		; (str r2, [sp, #-4]!)
   118ec:	push	{r0}		; (str r0, [sp, #-4]!)
   118f0:	ldr	ip, [pc, #16]	; 11908 <strspn@plt+0x620>
   118f4:	push	{ip}		; (str ip, [sp, #-4]!)
   118f8:	ldr	r0, [pc, #12]	; 1190c <strspn@plt+0x624>
   118fc:	ldr	r3, [pc, #12]	; 11910 <strspn@plt+0x628>
   11900:	bl	110e4 <__libc_start_main@plt>
   11904:	bl	112b8 <abort@plt>
   11908:	andeq	r4, r1, r4, lsr sp
   1190c:	strdeq	r1, [r1], -r8
   11910:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11914:	ldr	r3, [pc, #20]	; 11930 <strspn@plt+0x648>
   11918:	ldr	r2, [pc, #20]	; 11934 <strspn@plt+0x64c>
   1191c:	add	r3, pc, r3
   11920:	ldr	r2, [r3, r2]
   11924:	cmp	r2, #0
   11928:	bxeq	lr
   1192c:	b	110fc <__gmon_start__@plt>
   11930:			; <UNDEFINED> instruction: 0x000145b0
   11934:	andeq	r0, r0, r8, lsr #2
   11938:	ldr	r0, [pc, #24]	; 11958 <strspn@plt+0x670>
   1193c:	ldr	r3, [pc, #24]	; 1195c <strspn@plt+0x674>
   11940:	cmp	r3, r0
   11944:	bxeq	lr
   11948:	ldr	r3, [pc, #16]	; 11960 <strspn@plt+0x678>
   1194c:	cmp	r3, #0
   11950:	bxeq	lr
   11954:	bx	r3
   11958:	andeq	r6, r2, ip
   1195c:	andeq	r6, r2, ip
   11960:	andeq	r0, r0, r0
   11964:	ldr	r0, [pc, #36]	; 11990 <strspn@plt+0x6a8>
   11968:	ldr	r1, [pc, #36]	; 11994 <strspn@plt+0x6ac>
   1196c:	sub	r1, r1, r0
   11970:	asr	r1, r1, #2
   11974:	add	r1, r1, r1, lsr #31
   11978:	asrs	r1, r1, #1
   1197c:	bxeq	lr
   11980:	ldr	r3, [pc, #16]	; 11998 <strspn@plt+0x6b0>
   11984:	cmp	r3, #0
   11988:	bxeq	lr
   1198c:	bx	r3
   11990:	andeq	r6, r2, ip
   11994:	andeq	r6, r2, ip
   11998:	andeq	r0, r0, r0
   1199c:	push	{r4, lr}
   119a0:	ldr	r4, [pc, #24]	; 119c0 <strspn@plt+0x6d8>
   119a4:	ldrb	r3, [r4]
   119a8:	cmp	r3, #0
   119ac:	popne	{r4, pc}
   119b0:	bl	11938 <strspn@plt+0x650>
   119b4:	mov	r3, #1
   119b8:	strb	r3, [r4]
   119bc:	pop	{r4, pc}
   119c0:	andeq	r6, r2, r8, lsr #32
   119c4:	b	11964 <strspn@plt+0x67c>
   119c8:	cmp	r1, #0
   119cc:	push	{r4, lr}
   119d0:	movne	r2, #5
   119d4:	mov	r4, r0
   119d8:	ldrne	r1, [pc, #56]	; 11a18 <strspn@plt+0x730>
   119dc:	moveq	r0, r1
   119e0:	movne	r0, #0
   119e4:	moveq	r2, #5
   119e8:	ldreq	r1, [pc, #44]	; 11a1c <strspn@plt+0x734>
   119ec:	bl	1106c <dcgettext@plt>
   119f0:	cmp	r4, #0
   119f4:	mov	r5, r0
   119f8:	beq	11a0c <strspn@plt+0x724>
   119fc:	mov	r2, r4
   11a00:	mov	r1, r5
   11a04:	mov	r0, #1
   11a08:	bl	1109c <err@plt>
   11a0c:	bl	11120 <getpid@plt>
   11a10:	mov	r4, r0
   11a14:	b	119fc <strspn@plt+0x714>
   11a18:			; <UNDEFINED> instruction: 0x00014dbc
   11a1c:	ldrdeq	r4, [r1], -ip
   11a20:	ldrb	r3, [r0, #20]
   11a24:	push	{r4, r5, r6, r7, r8, lr}
   11a28:	mov	r4, r0
   11a2c:	ands	r5, r3, #1
   11a30:	mov	r7, r1
   11a34:	ldr	r0, [r0, #12]
   11a38:	ldr	r1, [r4, #16]
   11a3c:	ldrd	r2, [r4, #4]
   11a40:	beq	11a98 <strspn@plt+0x7b0>
   11a44:	bl	13dc0 <strspn@plt+0x2ad8>
   11a48:	cmp	r7, #0
   11a4c:	movne	r2, #5
   11a50:	ldrne	r1, [pc, #152]	; 11af0 <strspn@plt+0x808>
   11a54:	moveq	r2, #5
   11a58:	ldreq	r1, [pc, #148]	; 11af4 <strspn@plt+0x80c>
   11a5c:	mov	r6, r0
   11a60:	movne	r0, #0
   11a64:	moveq	r0, r7
   11a68:	bl	1106c <dcgettext@plt>
   11a6c:	mov	r5, r0
   11a70:	cmp	r6, #0
   11a74:	beq	11ad4 <strspn@plt+0x7ec>
   11a78:	ldr	r2, [r4]
   11a7c:	cmp	r2, #0
   11a80:	beq	11ac8 <strspn@plt+0x7e0>
   11a84:	mov	r3, r6
   11a88:	mov	r1, r5
   11a8c:	mov	r0, #1
   11a90:	pop	{r4, r5, r6, r7, r8, lr}
   11a94:	b	111d4 <__printf_chk@plt>
   11a98:	bl	13f80 <strspn@plt+0x2c98>
   11a9c:	cmp	r7, #0
   11aa0:	movne	r2, #5
   11aa4:	ldrne	r1, [pc, #76]	; 11af8 <strspn@plt+0x810>
   11aa8:	moveq	r2, #5
   11aac:	ldreq	r1, [pc, #72]	; 11afc <strspn@plt+0x814>
   11ab0:	mov	r6, r0
   11ab4:	movne	r0, r5
   11ab8:	moveq	r0, r7
   11abc:	bl	1106c <dcgettext@plt>
   11ac0:	mov	r5, r0
   11ac4:	b	11a70 <strspn@plt+0x788>
   11ac8:	bl	11120 <getpid@plt>
   11acc:	mov	r2, r0
   11ad0:	b	11a84 <strspn@plt+0x79c>
   11ad4:	ldr	r1, [pc, #36]	; 11b00 <strspn@plt+0x818>
   11ad8:	mov	r0, r6
   11adc:	mov	r2, #5
   11ae0:	bl	1106c <dcgettext@plt>
   11ae4:	mov	r1, r0
   11ae8:	mov	r0, #1
   11aec:	bl	11228 <errx@plt>
   11af0:	strdeq	r4, [r1], -ip
   11af4:	andeq	r4, r1, ip, lsl lr
   11af8:	andeq	r4, r1, r0, asr #28
   11afc:	andeq	r4, r1, r0, ror #28
   11b00:	andeq	r4, r1, r4, lsl #29
   11b04:	push	{r4, r5, r6, r7, r8, lr}
   11b08:	mov	r4, r0
   11b0c:	ldr	r0, [r0]
   11b10:	mov	r6, r1
   11b14:	cmp	r0, #0
   11b18:	mov	r7, r2
   11b1c:	bne	11b74 <strspn@plt+0x88c>
   11b20:	ldrb	r3, [r4, #20]
   11b24:	ands	r5, r3, #2
   11b28:	popne	{r4, r5, r6, r7, r8, pc}
   11b2c:	mov	r2, r7
   11b30:	mov	r1, r6
   11b34:	ldr	r0, [r4]
   11b38:	bl	11204 <sched_setaffinity@plt>
   11b3c:	cmp	r0, #0
   11b40:	ldr	r0, [r4]
   11b44:	blt	11b98 <strspn@plt+0x8b0>
   11b48:	cmp	r0, #0
   11b4c:	popeq	{r4, r5, r6, r7, r8, pc}
   11b50:	ldr	r2, [r4, #4]
   11b54:	ldr	r1, [r4, #8]
   11b58:	bl	11288 <sched_getaffinity@plt>
   11b5c:	cmp	r0, #0
   11b60:	blt	11ba0 <strspn@plt+0x8b8>
   11b64:	mov	r0, r4
   11b68:	mov	r1, #1
   11b6c:	pop	{r4, r5, r6, r7, r8, lr}
   11b70:	b	11a20 <strspn@plt+0x738>
   11b74:	ldr	r2, [r4, #4]
   11b78:	ldr	r1, [r4, #8]
   11b7c:	bl	11288 <sched_getaffinity@plt>
   11b80:	cmp	r0, #0
   11b84:	blt	11bac <strspn@plt+0x8c4>
   11b88:	mov	r1, #0
   11b8c:	mov	r0, r4
   11b90:	bl	11a20 <strspn@plt+0x738>
   11b94:	b	11b20 <strspn@plt+0x838>
   11b98:	mov	r1, #1
   11b9c:	bl	119c8 <strspn@plt+0x6e0>
   11ba0:	mov	r1, r5
   11ba4:	ldr	r0, [r4]
   11ba8:	bl	119c8 <strspn@plt+0x6e0>
   11bac:	ldr	r0, [r4]
   11bb0:	mov	r1, #1
   11bb4:	bl	119c8 <strspn@plt+0x6e0>
   11bb8:	ldr	r3, [pc, #292]	; 11ce4 <strspn@plt+0x9fc>
   11bbc:	push	{r4, r5, r6, lr}
   11bc0:	ldr	r4, [r3]
   11bc4:	mov	r0, r4
   11bc8:	bl	110b4 <__fpending@plt>
   11bcc:	mov	r6, r0
   11bd0:	mov	r0, r4
   11bd4:	bl	11024 <ferror@plt>
   11bd8:	mov	r5, r0
   11bdc:	mov	r0, r4
   11be0:	bl	11210 <fclose@plt>
   11be4:	cmp	r5, #0
   11be8:	mov	r4, r0
   11bec:	bne	11c94 <strspn@plt+0x9ac>
   11bf0:	cmp	r0, #0
   11bf4:	beq	11c10 <strspn@plt+0x928>
   11bf8:	bl	11180 <__errno_location@plt>
   11bfc:	cmp	r6, #0
   11c00:	ldr	r3, [r0]
   11c04:	bne	11c6c <strspn@plt+0x984>
   11c08:	cmp	r3, #9
   11c0c:	bne	11c6c <strspn@plt+0x984>
   11c10:	ldr	r3, [pc, #208]	; 11ce8 <strspn@plt+0xa00>
   11c14:	ldr	r4, [r3]
   11c18:	mov	r0, r4
   11c1c:	bl	110b4 <__fpending@plt>
   11c20:	mov	r6, r0
   11c24:	mov	r0, r4
   11c28:	bl	11024 <ferror@plt>
   11c2c:	mov	r5, r0
   11c30:	mov	r0, r4
   11c34:	bl	11210 <fclose@plt>
   11c38:	cmp	r5, #0
   11c3c:	mov	r4, r0
   11c40:	bne	11cc8 <strspn@plt+0x9e0>
   11c44:	cmp	r0, #0
   11c48:	popeq	{r4, r5, r6, pc}
   11c4c:	cmp	r6, #0
   11c50:	bne	11c64 <strspn@plt+0x97c>
   11c54:	bl	11180 <__errno_location@plt>
   11c58:	ldr	r3, [r0]
   11c5c:	cmp	r3, #9
   11c60:	popeq	{r4, r5, r6, pc}
   11c64:	mov	r0, #1
   11c68:	bl	1103c <_exit@plt>
   11c6c:	cmp	r3, #32
   11c70:	beq	11c10 <strspn@plt+0x928>
   11c74:	cmp	r3, #0
   11c78:	beq	11cb0 <strspn@plt+0x9c8>
   11c7c:	mov	r2, #5
   11c80:	ldr	r1, [pc, #100]	; 11cec <strspn@plt+0xa04>
   11c84:	mov	r0, #0
   11c88:	bl	1106c <dcgettext@plt>
   11c8c:	bl	11234 <warn@plt>
   11c90:	b	11c64 <strspn@plt+0x97c>
   11c94:	bl	11180 <__errno_location@plt>
   11c98:	cmp	r4, #0
   11c9c:	ldr	r3, [r0]
   11ca0:	bne	11c6c <strspn@plt+0x984>
   11ca4:	cmp	r3, #32
   11ca8:	strne	r4, [r0]
   11cac:	beq	11c10 <strspn@plt+0x928>
   11cb0:	mov	r2, #5
   11cb4:	ldr	r1, [pc, #48]	; 11cec <strspn@plt+0xa04>
   11cb8:	mov	r0, #0
   11cbc:	bl	1106c <dcgettext@plt>
   11cc0:	bl	11174 <warnx@plt>
   11cc4:	b	11c64 <strspn@plt+0x97c>
   11cc8:	cmp	r0, #0
   11ccc:	bne	11c64 <strspn@plt+0x97c>
   11cd0:	bl	11180 <__errno_location@plt>
   11cd4:	ldr	r3, [r0]
   11cd8:	cmp	r3, #32
   11cdc:	strne	r4, [r0]
   11ce0:	b	11c64 <strspn@plt+0x97c>
   11ce4:	andeq	r6, r2, r4, lsr #32
   11ce8:	andeq	r6, r2, r0, lsr #32
   11cec:			; <UNDEFINED> instruction: 0x00014ebc
   11cf0:	cmp	r0, #0
   11cf4:	mov	r3, #0
   11cf8:	str	r3, [r1]
   11cfc:	bxeq	lr
   11d00:	ldrsb	r2, [r0]
   11d04:	cmp	r2, #47	; 0x2f
   11d08:	bne	11d44 <strspn@plt+0xa5c>
   11d0c:	ldrsb	r3, [r0, #1]
   11d10:	cmp	r3, #47	; 0x2f
   11d14:	bne	11d4c <strspn@plt+0xa64>
   11d18:	add	r3, r0, #1
   11d1c:	b	11d2c <strspn@plt+0xa44>
   11d20:	ldrsb	r2, [r3]
   11d24:	cmp	r2, #47	; 0x2f
   11d28:	bne	11d4c <strspn@plt+0xa64>
   11d2c:	cmp	r3, #0
   11d30:	mov	r0, r3
   11d34:	bxeq	lr
   11d38:	ldrsb	r2, [r3], #1
   11d3c:	cmp	r2, #47	; 0x2f
   11d40:	beq	11d20 <strspn@plt+0xa38>
   11d44:	cmp	r2, #0
   11d48:	beq	11d88 <strspn@plt+0xaa0>
   11d4c:	mov	r3, #1
   11d50:	str	r3, [r1]
   11d54:	ldrsb	r3, [r0, #1]
   11d58:	add	r2, r0, #1
   11d5c:	cmp	r3, #47	; 0x2f
   11d60:	cmpne	r3, #0
   11d64:	bxeq	lr
   11d68:	rsb	r3, r0, #1
   11d6c:	add	ip, r2, r3
   11d70:	str	ip, [r1]
   11d74:	ldrsb	ip, [r2, #1]!
   11d78:	cmp	ip, #0
   11d7c:	cmpne	ip, #47	; 0x2f
   11d80:	bne	11d6c <strspn@plt+0xa84>
   11d84:	bx	lr
   11d88:	mov	r0, r2
   11d8c:	bx	lr
   11d90:	push	{r4, r5, r6, r7, r8, lr}
   11d94:	mov	r7, r1
   11d98:	ldrsb	r1, [r0]
   11d9c:	cmp	r1, #0
   11da0:	movne	r5, r0
   11da4:	movne	r4, #0
   11da8:	beq	11e14 <strspn@plt+0xb2c>
   11dac:	cmp	r1, #92	; 0x5c
   11db0:	addne	r6, r5, r4
   11db4:	beq	11de4 <strspn@plt+0xafc>
   11db8:	mov	r0, r7
   11dbc:	bl	1115c <strchr@plt>
   11dc0:	cmp	r0, #0
   11dc4:	bne	11e0c <strspn@plt+0xb24>
   11dc8:	ldrsb	r1, [r6, #1]!
   11dcc:	add	r4, r4, #1
   11dd0:	mov	r0, r4
   11dd4:	cmp	r1, #0
   11dd8:	popeq	{r4, r5, r6, r7, r8, pc}
   11ddc:	cmp	r1, #92	; 0x5c
   11de0:	bne	11db8 <strspn@plt+0xad0>
   11de4:	add	r3, r5, r4
   11de8:	ldrsb	r3, [r3, #1]
   11dec:	cmp	r3, #0
   11df0:	beq	11e0c <strspn@plt+0xb24>
   11df4:	add	r4, r4, #2
   11df8:	mov	r0, r4
   11dfc:	ldrsb	r1, [r5, r4]
   11e00:	cmp	r1, #0
   11e04:	bne	11dac <strspn@plt+0xac4>
   11e08:	pop	{r4, r5, r6, r7, r8, pc}
   11e0c:	mov	r0, r4
   11e10:	pop	{r4, r5, r6, r7, r8, pc}
   11e14:	mov	r0, r1
   11e18:	pop	{r4, r5, r6, r7, r8, pc}
   11e1c:	ldr	ip, [pc, #244]	; 11f18 <strspn@plt+0xc30>
   11e20:	push	{r4, r5, r6, r7, r8, r9, lr}
   11e24:	add	ip, pc, ip
   11e28:	ldr	lr, [pc, #236]	; 11f1c <strspn@plt+0xc34>
   11e2c:	sub	sp, sp, #12
   11e30:	mov	r5, #0
   11e34:	ldr	r7, [ip, lr]
   11e38:	mov	r4, r0
   11e3c:	mov	r8, r1
   11e40:	ldr	r3, [r7]
   11e44:	mov	r0, ip
   11e48:	mov	r9, r2
   11e4c:	str	r5, [sp]
   11e50:	str	r3, [sp, #4]
   11e54:	bl	11180 <__errno_location@plt>
   11e58:	cmp	r4, r5
   11e5c:	str	r5, [r0]
   11e60:	beq	11e70 <strspn@plt+0xb88>
   11e64:	ldrsb	r3, [r4]
   11e68:	cmp	r3, r5
   11e6c:	bne	11e90 <strspn@plt+0xba8>
   11e70:	ldr	r1, [pc, #168]	; 11f20 <strspn@plt+0xc38>
   11e74:	mov	r3, r4
   11e78:	add	r1, pc, r1
   11e7c:	mov	r2, r8
   11e80:	ldr	r0, [r1]
   11e84:	ldr	r1, [pc, #152]	; 11f24 <strspn@plt+0xc3c>
   11e88:	add	r1, pc, r1
   11e8c:	bl	11228 <errx@plt>
   11e90:	mov	r6, r0
   11e94:	mov	r2, r9
   11e98:	mov	r3, r5
   11e9c:	mov	r1, sp
   11ea0:	mov	r0, r4
   11ea4:	bl	11060 <__strtoull_internal@plt>
   11ea8:	ldr	r2, [r6]
   11eac:	cmp	r2, r5
   11eb0:	bne	11eec <strspn@plt+0xc04>
   11eb4:	ldr	r3, [sp]
   11eb8:	cmp	r3, r4
   11ebc:	beq	11e70 <strspn@plt+0xb88>
   11ec0:	cmp	r3, r5
   11ec4:	beq	11ed4 <strspn@plt+0xbec>
   11ec8:	ldrsb	r3, [r3]
   11ecc:	cmp	r3, r5
   11ed0:	bne	11e70 <strspn@plt+0xb88>
   11ed4:	ldr	r2, [sp, #4]
   11ed8:	ldr	r3, [r7]
   11edc:	cmp	r2, r3
   11ee0:	bne	11f14 <strspn@plt+0xc2c>
   11ee4:	add	sp, sp, #12
   11ee8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11eec:	ldr	r3, [pc, #52]	; 11f28 <strspn@plt+0xc40>
   11ef0:	cmp	r2, #34	; 0x22
   11ef4:	add	r3, pc, r3
   11ef8:	ldr	r0, [r3]
   11efc:	bne	11e70 <strspn@plt+0xb88>
   11f00:	ldr	r1, [pc, #36]	; 11f2c <strspn@plt+0xc44>
   11f04:	mov	r3, r4
   11f08:	mov	r2, r8
   11f0c:	add	r1, pc, r1
   11f10:	bl	1109c <err@plt>
   11f14:	bl	11084 <__stack_chk_fail@plt>
   11f18:	andeq	r4, r1, r8, lsr #1
   11f1c:	andeq	r0, r0, r4, lsr #2
   11f20:	andeq	r4, r1, r8, lsl #3
   11f24:			; <UNDEFINED> instruction: 0x000034b4
   11f28:	andeq	r4, r1, ip, lsl #2
   11f2c:	andeq	r3, r0, r0, lsr r4
   11f30:	push	{r4, lr}
   11f34:	mov	r5, r0
   11f38:	mov	r4, r1
   11f3c:	bl	11180 <__errno_location@plt>
   11f40:	ldr	ip, [pc, #32]	; 11f68 <strspn@plt+0xc80>
   11f44:	ldr	r1, [pc, #32]	; 11f6c <strspn@plt+0xc84>
   11f48:	add	ip, pc, ip
   11f4c:	mov	lr, #34	; 0x22
   11f50:	mov	r3, r5
   11f54:	mov	r2, r4
   11f58:	add	r1, pc, r1
   11f5c:	str	lr, [r0]
   11f60:	ldr	r0, [ip]
   11f64:	bl	1109c <err@plt>
   11f68:	strheq	r4, [r1], -r8
   11f6c:	andeq	r3, r0, r4, ror #7
   11f70:	push	{r4, r5, r6, lr}
   11f74:	mov	r4, r0
   11f78:	mov	r5, r1
   11f7c:	bl	11e1c <strspn@plt+0xb34>
   11f80:	mov	r3, #0
   11f84:	mvn	r2, #0
   11f88:	cmp	r1, r3
   11f8c:	cmpeq	r0, r2
   11f90:	popls	{r4, r5, r6, pc}
   11f94:	mov	r1, r5
   11f98:	mov	r0, r4
   11f9c:	bl	11f30 <strspn@plt+0xc48>
   11fa0:	ldr	r3, [pc, #8]	; 11fb0 <strspn@plt+0xcc8>
   11fa4:	add	r3, pc, r3
   11fa8:	str	r0, [r3]
   11fac:	bx	lr
   11fb0:	andeq	r4, r1, ip, asr r0
   11fb4:	ldr	r3, [pc, #1648]	; 1262c <strspn@plt+0x1344>
   11fb8:	ldr	ip, [pc, #1648]	; 12630 <strspn@plt+0x1348>
   11fbc:	add	r3, pc, r3
   11fc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fc4:	mov	r5, r1
   11fc8:	ldr	r1, [r3, ip]
   11fcc:	sub	sp, sp, #52	; 0x34
   11fd0:	mov	ip, r1
   11fd4:	mov	r8, r0
   11fd8:	str	r1, [sp, #24]
   11fdc:	mov	r0, #0
   11fe0:	mov	r1, #0
   11fe4:	ldr	r3, [ip]
   11fe8:	strd	r0, [r5]
   11fec:	mov	r9, r2
   11ff0:	str	r3, [sp, #44]	; 0x2c
   11ff4:	bl	11180 <__errno_location@plt>
   11ff8:	cmp	r8, #0
   11ffc:	mov	r4, r0
   12000:	beq	121e0 <strspn@plt+0xef8>
   12004:	ldrsb	fp, [r8]
   12008:	cmp	fp, #0
   1200c:	beq	121e0 <strspn@plt+0xef8>
   12010:	bl	11114 <__ctype_b_loc@plt>
   12014:	mov	r2, r8
   12018:	ldr	r1, [r0]
   1201c:	b	12024 <strspn@plt+0xd3c>
   12020:	ldrsb	fp, [r2, #1]!
   12024:	uxtb	r3, fp
   12028:	lsl	r3, r3, #1
   1202c:	ldrh	ip, [r1, r3]
   12030:	ands	ip, ip, #8192	; 0x2000
   12034:	bne	12020 <strspn@plt+0xd38>
   12038:	cmp	fp, #45	; 0x2d
   1203c:	beq	121e0 <strspn@plt+0xef8>
   12040:	add	fp, sp, #40	; 0x28
   12044:	mov	r3, ip
   12048:	mov	r2, ip
   1204c:	str	ip, [r4]
   12050:	mov	r1, fp
   12054:	mov	r0, r8
   12058:	str	ip, [sp, #40]	; 0x28
   1205c:	bl	11060 <__strtoull_internal@plt>
   12060:	ldr	sl, [sp, #40]	; 0x28
   12064:	cmp	sl, r8
   12068:	mov	r2, r0
   1206c:	mov	r3, r1
   12070:	ldr	r0, [r4]
   12074:	strd	r2, [sp, #16]
   12078:	beq	12360 <strspn@plt+0x1078>
   1207c:	cmp	r0, #0
   12080:	bne	12208 <strspn@plt+0xf20>
   12084:	cmp	sl, #0
   12088:	beq	12394 <strspn@plt+0x10ac>
   1208c:	ldrsb	r0, [sl]
   12090:	cmp	r0, #0
   12094:	beq	12388 <strspn@plt+0x10a0>
   12098:	mov	r8, #0
   1209c:	mov	r2, #0
   120a0:	mov	r3, #0
   120a4:	str	r9, [sp, #32]
   120a8:	mov	r6, fp
   120ac:	mov	r9, sl
   120b0:	mov	r7, r8
   120b4:	mov	sl, r2
   120b8:	mov	fp, r3
   120bc:	str	r5, [sp, #28]
   120c0:	ldrsb	r2, [r9, #1]
   120c4:	cmp	r2, #105	; 0x69
   120c8:	beq	1224c <strspn@plt+0xf64>
   120cc:	bic	r1, r2, #32
   120d0:	cmp	r1, #66	; 0x42
   120d4:	bne	1236c <strspn@plt+0x1084>
   120d8:	ldrsb	r2, [r9, #2]
   120dc:	cmp	r2, #0
   120e0:	beq	12550 <strspn@plt+0x1268>
   120e4:	bl	11258 <localeconv@plt>
   120e8:	cmp	r0, #0
   120ec:	beq	121e0 <strspn@plt+0xef8>
   120f0:	ldr	r2, [r0]
   120f4:	cmp	r2, #0
   120f8:	beq	121e0 <strspn@plt+0xef8>
   120fc:	mov	r0, r2
   12100:	str	r2, [sp]
   12104:	bl	11150 <strlen@plt>
   12108:	orrs	r3, sl, fp
   1210c:	mov	r5, r0
   12110:	bne	121e0 <strspn@plt+0xef8>
   12114:	ldrsb	r1, [r9]
   12118:	cmp	r1, #0
   1211c:	beq	121e0 <strspn@plt+0xef8>
   12120:	ldr	r2, [sp]
   12124:	mov	r1, r9
   12128:	mov	r0, r2
   1212c:	mov	r2, r5
   12130:	bl	112ac <strncmp@plt>
   12134:	cmp	r0, #0
   12138:	bne	121e0 <strspn@plt+0xef8>
   1213c:	ldrsb	r2, [r9, r5]
   12140:	add	r5, r9, r5
   12144:	cmp	r2, #48	; 0x30
   12148:	bne	12168 <strspn@plt+0xe80>
   1214c:	add	r8, r8, #1
   12150:	sub	r1, r8, r5
   12154:	mov	r3, r5
   12158:	add	r8, r3, r1
   1215c:	ldrsb	r2, [r3, #1]!
   12160:	cmp	r2, #48	; 0x30
   12164:	beq	12158 <strspn@plt+0xe70>
   12168:	mov	r3, #0
   1216c:	str	r7, [r4]
   12170:	mov	r2, r3
   12174:	mov	r1, r6
   12178:	mov	r0, r5
   1217c:	str	r7, [sp, #40]	; 0x28
   12180:	bl	11060 <__strtoull_internal@plt>
   12184:	ldr	r9, [sp, #40]	; 0x28
   12188:	cmp	r9, r5
   1218c:	mov	sl, r0
   12190:	mov	fp, r1
   12194:	beq	1235c <strspn@plt+0x1074>
   12198:	ldr	ip, [r4]
   1219c:	cmp	ip, #0
   121a0:	beq	12238 <strspn@plt+0xf50>
   121a4:	subs	r3, r0, #1
   121a8:	str	r3, [sp, #8]
   121ac:	sbc	r3, r1, #0
   121b0:	str	r3, [sp, #12]
   121b4:	ldrd	r2, [sp, #8]
   121b8:	mvn	r1, #0
   121bc:	mvn	r0, #2
   121c0:	cmp	r3, r1
   121c4:	cmpeq	r2, r0
   121c8:	bhi	1258c <strspn@plt+0x12a4>
   121cc:	cmp	r9, #0
   121d0:	beq	121e0 <strspn@plt+0xef8>
   121d4:	ldrsb	r2, [r9]
   121d8:	cmp	r2, #0
   121dc:	bne	120c0 <strspn@plt+0xdd8>
   121e0:	mov	r3, #22
   121e4:	mvn	r0, #21
   121e8:	str	r3, [r4]
   121ec:	ldr	r3, [sp, #24]
   121f0:	ldr	r2, [sp, #44]	; 0x2c
   121f4:	ldr	r3, [r3]
   121f8:	cmp	r2, r3
   121fc:	bne	12628 <strspn@plt+0x1340>
   12200:	add	sp, sp, #52	; 0x34
   12204:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12208:	subs	r6, r2, #1
   1220c:	sbc	r7, r3, #0
   12210:	mvn	r3, #0
   12214:	mvn	r2, #2
   12218:	cmp	r7, r3
   1221c:	cmpeq	r6, r2
   12220:	bls	12084 <strspn@plt+0xd9c>
   12224:	rsb	r0, r0, #0
   12228:	cmp	r0, #0
   1222c:	bge	121ec <strspn@plt+0xf04>
   12230:	rsb	r3, r0, #0
   12234:	b	121e8 <strspn@plt+0xf00>
   12238:	orrs	r3, sl, fp
   1223c:	bne	121cc <strspn@plt+0xee4>
   12240:	ldrsb	r2, [r9, #1]
   12244:	cmp	r2, #105	; 0x69
   12248:	bne	120cc <strspn@plt+0xde4>
   1224c:	ldrsb	r2, [r9, #2]
   12250:	bic	r2, r2, #32
   12254:	cmp	r2, #66	; 0x42
   12258:	bne	120e4 <strspn@plt+0xdfc>
   1225c:	ldrsb	r2, [r9, #3]
   12260:	cmp	r2, #0
   12264:	bne	120e4 <strspn@plt+0xdfc>
   12268:	strd	sl, [sp]
   1226c:	mov	sl, r9
   12270:	ldr	r9, [sp, #32]
   12274:	mov	r3, #1024	; 0x400
   12278:	ldr	r5, [sp, #28]
   1227c:	str	r3, [sp, #28]
   12280:	ldrsb	r7, [sl]
   12284:	ldr	r6, [pc, #936]	; 12634 <strspn@plt+0x134c>
   12288:	add	r6, pc, r6
   1228c:	mov	r1, r7
   12290:	mov	r0, r6
   12294:	bl	1115c <strchr@plt>
   12298:	cmp	r0, #0
   1229c:	beq	1256c <strspn@plt+0x1284>
   122a0:	sub	ip, r0, r6
   122a4:	add	fp, ip, #1
   122a8:	cmp	fp, #0
   122ac:	beq	12378 <strspn@plt+0x1090>
   122b0:	ldr	r3, [sp, #20]
   122b4:	ldr	r6, [sp, #28]
   122b8:	cmp	r3, #0
   122bc:	mov	r0, #0
   122c0:	asr	r7, r6, #31
   122c4:	mov	r1, #0
   122c8:	bne	125c8 <strspn@plt+0x12e0>
   122cc:	orrs	r3, r0, r1
   122d0:	bne	123bc <strspn@plt+0x10d4>
   122d4:	str	fp, [sp, #32]
   122d8:	sub	ip, ip, #1
   122dc:	str	r8, [sp, #36]	; 0x24
   122e0:	mov	fp, r4
   122e4:	ldrd	r0, [sp, #16]
   122e8:	mov	lr, r5
   122ec:	mov	sl, r9
   122f0:	b	12300 <strspn@plt+0x1018>
   122f4:	orrs	r3, r4, r5
   122f8:	sub	ip, ip, #1
   122fc:	bne	123a4 <strspn@plt+0x10bc>
   12300:	mul	r2, r0, r7
   12304:	cmn	ip, #1
   12308:	mla	r2, r6, r1, r2
   1230c:	umull	r0, r1, r0, r6
   12310:	add	r2, r2, r1
   12314:	mov	r1, r2
   12318:	beq	12530 <strspn@plt+0x1248>
   1231c:	cmp	r2, #0
   12320:	mov	r4, #0
   12324:	mov	r5, #0
   12328:	beq	122f4 <strspn@plt+0x100c>
   1232c:	umull	r2, r3, r6, r2
   12330:	umull	r8, r9, r0, r6
   12334:	strd	r2, [sp, #8]
   12338:	mov	r8, r9
   1233c:	ldr	r3, [sp, #12]
   12340:	adds	r8, r2, r8
   12344:	mov	r2, #0
   12348:	adc	r3, r3, r2
   1234c:	cmp	r3, r2
   12350:	movne	r4, #1
   12354:	movne	r5, #0
   12358:	b	122f4 <strspn@plt+0x100c>
   1235c:	ldr	r0, [r4]
   12360:	cmp	r0, #0
   12364:	beq	121e0 <strspn@plt+0xef8>
   12368:	b	12224 <strspn@plt+0xf3c>
   1236c:	cmp	r2, #0
   12370:	bne	120e4 <strspn@plt+0xdfc>
   12374:	b	12268 <strspn@plt+0xf80>
   12378:	cmp	r9, #0
   1237c:	movne	r0, fp
   12380:	bne	123c8 <strspn@plt+0x10e0>
   12384:	mov	r0, r9
   12388:	ldrd	r2, [sp, #16]
   1238c:	strd	r2, [r5]
   12390:	b	121ec <strspn@plt+0xf04>
   12394:	ldrd	r2, [sp, #16]
   12398:	mov	r0, sl
   1239c:	strd	r2, [r5]
   123a0:	b	121ec <strspn@plt+0xf04>
   123a4:	mov	r4, fp
   123a8:	ldr	r8, [sp, #36]	; 0x24
   123ac:	ldr	fp, [sp, #32]
   123b0:	mov	r5, lr
   123b4:	mov	r9, sl
   123b8:	strd	r0, [sp, #16]
   123bc:	mvn	r0, #33	; 0x21
   123c0:	cmp	r9, #0
   123c4:	beq	123cc <strspn@plt+0x10e4>
   123c8:	str	fp, [r9]
   123cc:	ldrd	r2, [sp]
   123d0:	mov	r1, r2
   123d4:	orrs	r3, r1, r3
   123d8:	movne	r3, #1
   123dc:	moveq	r3, #0
   123e0:	cmp	fp, #0
   123e4:	moveq	r3, #0
   123e8:	cmp	r3, #0
   123ec:	beq	12524 <strspn@plt+0x123c>
   123f0:	ldr	r3, [pc, #576]	; 12638 <strspn@plt+0x1350>
   123f4:	ldr	r1, [pc, #576]	; 1263c <strspn@plt+0x1354>
   123f8:	umull	ip, r3, r3, r8
   123fc:	smull	ip, r1, r1, r8
   12400:	lsr	r3, r3, #1
   12404:	rsb	r1, r1, r8, asr #31
   12408:	add	r3, r3, r3, lsl #1
   1240c:	add	r1, r1, fp
   12410:	subs	r3, r8, r3
   12414:	sub	r6, r1, #1
   12418:	bne	12594 <strspn@plt+0x12ac>
   1241c:	ldrd	r8, [sp]
   12420:	adds	r3, r8, r8
   12424:	adc	r2, r9, r9
   12428:	adds	r3, r3, r8
   1242c:	adc	r2, r2, r9
   12430:	lsl	ip, r3, #5
   12434:	lsl	lr, r2, #5
   12438:	orr	lr, lr, r3, lsr #27
   1243c:	adds	r3, r3, ip
   12440:	adc	r2, r2, lr
   12444:	adds	r3, r8, r3
   12448:	str	r3, [sp]
   1244c:	ldr	r3, [sp, #4]
   12450:	adc	r3, r3, r2
   12454:	str	r3, [sp, #4]
   12458:	cmp	r6, #0
   1245c:	blt	121e0 <strspn@plt+0xef8>
   12460:	beq	12508 <strspn@plt+0x1220>
   12464:	ldr	r3, [sp, #4]
   12468:	ldr	r8, [sp, #28]
   1246c:	cmp	r3, #0
   12470:	mov	r6, #0
   12474:	asr	r9, r8, #31
   12478:	mov	r7, #0
   1247c:	bne	125fc <strspn@plt+0x1314>
   12480:	orrs	r3, r6, r7
   12484:	bne	12508 <strspn@plt+0x1220>
   12488:	sub	r1, r1, #3
   1248c:	ldrd	r2, [sp]
   12490:	mov	lr, r4
   12494:	str	r5, [sp, #8]
   12498:	b	124a8 <strspn@plt+0x11c0>
   1249c:	orrs	ip, r6, r7
   124a0:	sub	r1, r1, #1
   124a4:	bne	124fc <strspn@plt+0x1214>
   124a8:	mul	ip, r2, r9
   124ac:	cmn	r1, #1
   124b0:	mla	ip, r8, r3, ip
   124b4:	umull	r2, r3, r2, r8
   124b8:	add	ip, ip, r3
   124bc:	mov	r3, ip
   124c0:	beq	124fc <strspn@plt+0x1214>
   124c4:	cmp	ip, #0
   124c8:	mov	r6, #0
   124cc:	mov	r7, #0
   124d0:	beq	1249c <strspn@plt+0x11b4>
   124d4:	umull	sl, fp, r2, r8
   124d8:	umull	r4, r5, r8, ip
   124dc:	mov	ip, fp
   124e0:	adds	ip, r4, ip
   124e4:	mov	ip, #0
   124e8:	adc	ip, r5, ip
   124ec:	cmp	ip, #0
   124f0:	movne	r6, #1
   124f4:	movne	r7, #0
   124f8:	b	1249c <strspn@plt+0x11b4>
   124fc:	ldr	r5, [sp, #8]
   12500:	mov	r4, lr
   12504:	strd	r2, [sp]
   12508:	ldrd	r2, [sp]
   1250c:	ldr	r1, [sp, #16]
   12510:	adds	r1, r1, r2
   12514:	str	r1, [sp, #16]
   12518:	ldr	r1, [sp, #20]
   1251c:	adc	r3, r1, r3
   12520:	str	r3, [sp, #20]
   12524:	ldrd	r2, [sp, #16]
   12528:	strd	r2, [r5]
   1252c:	b	12228 <strspn@plt+0xf40>
   12530:	mov	r4, fp
   12534:	strd	r0, [sp, #16]
   12538:	ldr	r8, [sp, #36]	; 0x24
   1253c:	ldr	fp, [sp, #32]
   12540:	mov	r5, lr
   12544:	mov	r9, sl
   12548:	mov	r0, #0
   1254c:	b	123c0 <strspn@plt+0x10d8>
   12550:	mov	r3, #1000	; 0x3e8
   12554:	strd	sl, [sp]
   12558:	ldr	r5, [sp, #28]
   1255c:	mov	sl, r9
   12560:	str	r3, [sp, #28]
   12564:	ldr	r9, [sp, #32]
   12568:	b	12280 <strspn@plt+0xf98>
   1256c:	ldr	r6, [pc, #204]	; 12640 <strspn@plt+0x1358>
   12570:	mov	r1, r7
   12574:	add	r6, pc, r6
   12578:	mov	r0, r6
   1257c:	bl	1115c <strchr@plt>
   12580:	cmp	r0, #0
   12584:	bne	122a0 <strspn@plt+0xfb8>
   12588:	b	121e0 <strspn@plt+0xef8>
   1258c:	mov	r0, ip
   12590:	b	12224 <strspn@plt+0xf3c>
   12594:	cmp	r3, #1
   12598:	bne	12458 <strspn@plt+0x1170>
   1259c:	ldrd	r8, [sp]
   125a0:	lsl	r2, r9, #2
   125a4:	lsl	r3, r8, #2
   125a8:	adds	r3, r3, r8
   125ac:	orr	r2, r2, r8, lsr #30
   125b0:	adc	r2, r2, r9
   125b4:	adds	r3, r3, r3
   125b8:	str	r3, [sp]
   125bc:	adc	r3, r2, r2
   125c0:	str	r3, [sp, #4]
   125c4:	b	12458 <strspn@plt+0x1170>
   125c8:	ldr	lr, [sp, #28]
   125cc:	ldr	r3, [sp, #16]
   125d0:	ldr	sl, [sp, #20]
   125d4:	umull	r2, r3, r3, lr
   125d8:	str	r3, [sp, #8]
   125dc:	mov	r3, #0
   125e0:	str	r3, [sp, #12]
   125e4:	ldrd	r2, [sp, #8]
   125e8:	umlal	r2, r3, sl, lr
   125ec:	cmp	r3, #0
   125f0:	movne	r0, #1
   125f4:	movne	r1, #0
   125f8:	b	122cc <strspn@plt+0xfe4>
   125fc:	ldr	r3, [sp]
   12600:	ldr	ip, [sp, #28]
   12604:	ldr	lr, [sp, #4]
   12608:	umull	sl, fp, r3, ip
   1260c:	mov	r3, #0
   12610:	mov	r2, fp
   12614:	umlal	r2, r3, lr, ip
   12618:	cmp	r3, #0
   1261c:	movne	r6, #1
   12620:	movne	r7, #0
   12624:	b	12480 <strspn@plt+0x1198>
   12628:	bl	11084 <__stack_chk_fail@plt>
   1262c:	andeq	r3, r1, r0, lsl pc
   12630:	andeq	r0, r0, r4, lsr #2
   12634:	andeq	r3, r0, r0, asr #1
   12638:	bge	feabd0ec <stdout@@GLIBC_2.4+0xfea970c8>
   1263c:	ldrbpl	r5, [r5, #-1366]	; 0xfffffaaa
   12640:	andeq	r2, r0, r0, ror #27
   12644:	mov	r2, #0
   12648:	b	11fb4 <strspn@plt+0xccc>
   1264c:	push	{r4, r5, r6, lr}
   12650:	subs	r5, r0, #0
   12654:	mov	r6, r1
   12658:	beq	126c4 <strspn@plt+0x13dc>
   1265c:	ldrsb	r4, [r5]
   12660:	cmp	r4, #0
   12664:	beq	126d8 <strspn@plt+0x13f0>
   12668:	bl	11114 <__ctype_b_loc@plt>
   1266c:	mov	r3, r5
   12670:	ldr	r0, [r0]
   12674:	b	1268c <strspn@plt+0x13a4>
   12678:	adds	r3, r3, #1
   1267c:	beq	126c4 <strspn@plt+0x13dc>
   12680:	ldrsb	r4, [r3]
   12684:	cmp	r4, #0
   12688:	beq	126a0 <strspn@plt+0x13b8>
   1268c:	uxtb	r4, r4
   12690:	lsl	r4, r4, #1
   12694:	ldrh	r2, [r0, r4]
   12698:	tst	r2, #2048	; 0x800
   1269c:	bne	12678 <strspn@plt+0x1390>
   126a0:	cmp	r6, #0
   126a4:	strne	r3, [r6]
   126a8:	cmp	r5, r3
   126ac:	bcs	126d0 <strspn@plt+0x13e8>
   126b0:	ldrsb	r3, [r3]
   126b4:	cmp	r3, #0
   126b8:	bne	126d0 <strspn@plt+0x13e8>
   126bc:	mov	r0, #1
   126c0:	pop	{r4, r5, r6, pc}
   126c4:	cmp	r6, #0
   126c8:	movne	r3, #0
   126cc:	strne	r3, [r6]
   126d0:	mov	r0, #0
   126d4:	pop	{r4, r5, r6, pc}
   126d8:	cmp	r1, #0
   126dc:	strne	r5, [r1]
   126e0:	b	126d0 <strspn@plt+0x13e8>
   126e4:	push	{r4, r5, r6, lr}
   126e8:	subs	r5, r0, #0
   126ec:	mov	r6, r1
   126f0:	beq	1275c <strspn@plt+0x1474>
   126f4:	ldrsb	r4, [r5]
   126f8:	cmp	r4, #0
   126fc:	beq	12770 <strspn@plt+0x1488>
   12700:	bl	11114 <__ctype_b_loc@plt>
   12704:	mov	r3, r5
   12708:	ldr	r0, [r0]
   1270c:	b	12724 <strspn@plt+0x143c>
   12710:	adds	r3, r3, #1
   12714:	beq	1275c <strspn@plt+0x1474>
   12718:	ldrsb	r4, [r3]
   1271c:	cmp	r4, #0
   12720:	beq	12738 <strspn@plt+0x1450>
   12724:	uxtb	r4, r4
   12728:	lsl	r4, r4, #1
   1272c:	ldrh	r2, [r0, r4]
   12730:	tst	r2, #4096	; 0x1000
   12734:	bne	12710 <strspn@plt+0x1428>
   12738:	cmp	r6, #0
   1273c:	strne	r3, [r6]
   12740:	cmp	r5, r3
   12744:	bcs	12768 <strspn@plt+0x1480>
   12748:	ldrsb	r3, [r3]
   1274c:	cmp	r3, #0
   12750:	bne	12768 <strspn@plt+0x1480>
   12754:	mov	r0, #1
   12758:	pop	{r4, r5, r6, pc}
   1275c:	cmp	r6, #0
   12760:	movne	r3, #0
   12764:	strne	r3, [r6]
   12768:	mov	r0, #0
   1276c:	pop	{r4, r5, r6, pc}
   12770:	cmp	r1, #0
   12774:	strne	r5, [r1]
   12778:	b	12768 <strspn@plt+0x1480>
   1277c:	push	{r1, r2, r3}
   12780:	ldr	r3, [pc, #188]	; 12844 <strspn@plt+0x155c>
   12784:	ldr	r2, [pc, #188]	; 12848 <strspn@plt+0x1560>
   12788:	add	r3, pc, r3
   1278c:	push	{r4, r5, r6, r7, r8, lr}
   12790:	sub	sp, sp, #12
   12794:	ldr	r7, [r3, r2]
   12798:	ldr	r8, [sp, #36]	; 0x24
   1279c:	mov	r6, r0
   127a0:	ldr	r3, [r7]
   127a4:	add	r4, sp, #48	; 0x30
   127a8:	str	r3, [sp, #4]
   127ac:	b	127c8 <strspn@plt+0x14e0>
   127b0:	mov	r1, r5
   127b4:	mov	r0, r6
   127b8:	bl	10fd0 <strcmp@plt>
   127bc:	add	r4, r4, #8
   127c0:	cmp	r0, #0
   127c4:	beq	12800 <strspn@plt+0x1518>
   127c8:	ldr	r1, [r4, #-8]
   127cc:	sub	r3, r4, #4
   127d0:	cmp	r1, #0
   127d4:	str	r3, [sp]
   127d8:	beq	12820 <strspn@plt+0x1538>
   127dc:	ldr	r5, [r4, #-4]
   127e0:	str	r4, [sp]
   127e4:	cmp	r5, #0
   127e8:	beq	12820 <strspn@plt+0x1538>
   127ec:	mov	r0, r6
   127f0:	bl	10fd0 <strcmp@plt>
   127f4:	cmp	r0, #0
   127f8:	bne	127b0 <strspn@plt+0x14c8>
   127fc:	mov	r0, #1
   12800:	ldr	r2, [sp, #4]
   12804:	ldr	r3, [r7]
   12808:	cmp	r2, r3
   1280c:	bne	12840 <strspn@plt+0x1558>
   12810:	add	sp, sp, #12
   12814:	pop	{r4, r5, r6, r7, r8, lr}
   12818:	add	sp, sp, #12
   1281c:	bx	lr
   12820:	ldr	r1, [pc, #36]	; 1284c <strspn@plt+0x1564>
   12824:	mov	r3, r6
   12828:	add	r1, pc, r1
   1282c:	mov	r2, r8
   12830:	ldr	r0, [r1]
   12834:	ldr	r1, [pc, #20]	; 12850 <strspn@plt+0x1568>
   12838:	add	r1, pc, r1
   1283c:	bl	11228 <errx@plt>
   12840:	bl	11084 <__stack_chk_fail@plt>
   12844:	andeq	r3, r1, r4, asr #14
   12848:	andeq	r0, r0, r4, lsr #2
   1284c:	ldrdeq	r3, [r1], -r8
   12850:	andeq	r2, r0, r4, lsl #22
   12854:	cmp	r1, #0
   12858:	beq	128a4 <strspn@plt+0x15bc>
   1285c:	ldrsb	r3, [r0]
   12860:	cmp	r3, #0
   12864:	beq	128a4 <strspn@plt+0x15bc>
   12868:	sxtb	r2, r2
   1286c:	cmp	r3, r2
   12870:	bxeq	lr
   12874:	add	r1, r0, r1
   12878:	add	r3, r0, #1
   1287c:	b	12898 <strspn@plt+0x15b0>
   12880:	ldrsb	ip, [r3]
   12884:	add	r3, r3, #1
   12888:	cmp	ip, #0
   1288c:	beq	128a4 <strspn@plt+0x15bc>
   12890:	cmp	ip, r2
   12894:	bxeq	lr
   12898:	cmp	r3, r1
   1289c:	mov	r0, r3
   128a0:	bne	12880 <strspn@plt+0x1598>
   128a4:	mov	r0, #0
   128a8:	bx	lr
   128ac:	push	{r4, r5, r6, lr}
   128b0:	mov	r2, #10
   128b4:	mov	r4, r0
   128b8:	mov	r5, r1
   128bc:	bl	11f70 <strspn@plt+0xc88>
   128c0:	cmp	r0, #65536	; 0x10000
   128c4:	bcs	128d0 <strspn@plt+0x15e8>
   128c8:	uxth	r0, r0
   128cc:	pop	{r4, r5, r6, pc}
   128d0:	mov	r1, r5
   128d4:	mov	r0, r4
   128d8:	bl	11f30 <strspn@plt+0xc48>
   128dc:	push	{r4, r5, r6, lr}
   128e0:	mov	r2, #16
   128e4:	mov	r4, r0
   128e8:	mov	r5, r1
   128ec:	bl	11f70 <strspn@plt+0xc88>
   128f0:	cmp	r0, #65536	; 0x10000
   128f4:	bcs	12900 <strspn@plt+0x1618>
   128f8:	uxth	r0, r0
   128fc:	pop	{r4, r5, r6, pc}
   12900:	mov	r1, r5
   12904:	mov	r0, r4
   12908:	bl	11f30 <strspn@plt+0xc48>
   1290c:	mov	r2, #10
   12910:	b	11f70 <strspn@plt+0xc88>
   12914:	mov	r2, #16
   12918:	b	11f70 <strspn@plt+0xc88>
   1291c:	ldr	r2, [pc, #236]	; 12a10 <strspn@plt+0x1728>
   12920:	ldr	ip, [pc, #236]	; 12a14 <strspn@plt+0x172c>
   12924:	add	r2, pc, r2
   12928:	push	{r4, r5, r6, r7, r8, lr}
   1292c:	sub	sp, sp, #8
   12930:	ldr	r7, [r2, ip]
   12934:	mov	r5, #0
   12938:	mov	r4, r0
   1293c:	ldr	r3, [r7]
   12940:	mov	r8, r1
   12944:	str	r5, [sp]
   12948:	str	r3, [sp, #4]
   1294c:	bl	11180 <__errno_location@plt>
   12950:	cmp	r4, r5
   12954:	str	r5, [r0]
   12958:	beq	12968 <strspn@plt+0x1680>
   1295c:	ldrsb	r3, [r4]
   12960:	cmp	r3, r5
   12964:	bne	12988 <strspn@plt+0x16a0>
   12968:	ldr	r1, [pc, #168]	; 12a18 <strspn@plt+0x1730>
   1296c:	mov	r3, r4
   12970:	add	r1, pc, r1
   12974:	mov	r2, r8
   12978:	ldr	r0, [r1]
   1297c:	ldr	r1, [pc, #152]	; 12a1c <strspn@plt+0x1734>
   12980:	add	r1, pc, r1
   12984:	bl	11228 <errx@plt>
   12988:	mov	r6, r0
   1298c:	mov	r2, #10
   12990:	mov	r3, r5
   12994:	mov	r1, sp
   12998:	mov	r0, r4
   1299c:	bl	1127c <__strtoll_internal@plt>
   129a0:	ldr	r2, [r6]
   129a4:	cmp	r2, r5
   129a8:	bne	129e4 <strspn@plt+0x16fc>
   129ac:	ldr	r3, [sp]
   129b0:	cmp	r3, r4
   129b4:	beq	12968 <strspn@plt+0x1680>
   129b8:	cmp	r3, r5
   129bc:	beq	129cc <strspn@plt+0x16e4>
   129c0:	ldrsb	r3, [r3]
   129c4:	cmp	r3, r5
   129c8:	bne	12968 <strspn@plt+0x1680>
   129cc:	ldr	r2, [sp, #4]
   129d0:	ldr	r3, [r7]
   129d4:	cmp	r2, r3
   129d8:	bne	12a0c <strspn@plt+0x1724>
   129dc:	add	sp, sp, #8
   129e0:	pop	{r4, r5, r6, r7, r8, pc}
   129e4:	ldr	r3, [pc, #52]	; 12a20 <strspn@plt+0x1738>
   129e8:	cmp	r2, #34	; 0x22
   129ec:	add	r3, pc, r3
   129f0:	ldr	r0, [r3]
   129f4:	bne	12968 <strspn@plt+0x1680>
   129f8:	ldr	r1, [pc, #36]	; 12a24 <strspn@plt+0x173c>
   129fc:	mov	r3, r4
   12a00:	mov	r2, r8
   12a04:	add	r1, pc, r1
   12a08:	bl	1109c <err@plt>
   12a0c:	bl	11084 <__stack_chk_fail@plt>
   12a10:	andeq	r3, r1, r8, lsr #11
   12a14:	andeq	r0, r0, r4, lsr #2
   12a18:	muleq	r1, r0, r6
   12a1c:			; <UNDEFINED> instruction: 0x000029bc
   12a20:	andeq	r3, r1, r4, lsl r6
   12a24:	andeq	r2, r0, r8, lsr r9
   12a28:	push	{r4, r5, r6, r7, r8, lr}
   12a2c:	mov	r7, r0
   12a30:	mov	r6, r1
   12a34:	bl	1291c <strspn@plt+0x1634>
   12a38:	mov	r3, #0
   12a3c:	mvn	r2, #0
   12a40:	adds	r4, r0, #-2147483648	; 0x80000000
   12a44:	adc	r5, r1, #0
   12a48:	cmp	r5, r3
   12a4c:	cmpeq	r4, r2
   12a50:	popls	{r4, r5, r6, r7, r8, pc}
   12a54:	bl	11180 <__errno_location@plt>
   12a58:	ldr	ip, [pc, #32]	; 12a80 <strspn@plt+0x1798>
   12a5c:	ldr	r1, [pc, #32]	; 12a84 <strspn@plt+0x179c>
   12a60:	add	ip, pc, ip
   12a64:	mov	lr, #34	; 0x22
   12a68:	mov	r3, r7
   12a6c:	mov	r2, r6
   12a70:	add	r1, pc, r1
   12a74:	str	lr, [r0]
   12a78:	ldr	r0, [ip]
   12a7c:	bl	1109c <err@plt>
   12a80:	andeq	r3, r1, r0, lsr #11
   12a84:	andeq	r2, r0, ip, asr #17
   12a88:	push	{r4, r5, r6, lr}
   12a8c:	mov	r5, r0
   12a90:	mov	r4, r1
   12a94:	bl	12a28 <strspn@plt+0x1740>
   12a98:	add	r3, r0, #32768	; 0x8000
   12a9c:	cmp	r3, #65536	; 0x10000
   12aa0:	bcs	12aac <strspn@plt+0x17c4>
   12aa4:	sxth	r0, r0
   12aa8:	pop	{r4, r5, r6, pc}
   12aac:	bl	11180 <__errno_location@plt>
   12ab0:	ldr	ip, [pc, #32]	; 12ad8 <strspn@plt+0x17f0>
   12ab4:	ldr	r1, [pc, #32]	; 12adc <strspn@plt+0x17f4>
   12ab8:	add	ip, pc, ip
   12abc:	mov	lr, #34	; 0x22
   12ac0:	mov	r3, r5
   12ac4:	mov	r2, r4
   12ac8:	add	r1, pc, r1
   12acc:	str	lr, [r0]
   12ad0:	ldr	r0, [ip]
   12ad4:	bl	1109c <err@plt>
   12ad8:	andeq	r3, r1, r8, asr #10
   12adc:	andeq	r2, r0, r4, ror r8
   12ae0:	mov	r2, #10
   12ae4:	b	11e1c <strspn@plt+0xb34>
   12ae8:	mov	r2, #16
   12aec:	b	11e1c <strspn@plt+0xb34>
   12af0:	ldr	r2, [pc, #228]	; 12bdc <strspn@plt+0x18f4>
   12af4:	ldr	r3, [pc, #228]	; 12be0 <strspn@plt+0x18f8>
   12af8:	add	r2, pc, r2
   12afc:	push	{r4, r5, r6, r7, r8, lr}
   12b00:	sub	sp, sp, #8
   12b04:	ldr	r7, [r2, r3]
   12b08:	mov	r5, #0
   12b0c:	mov	r4, r0
   12b10:	ldr	r3, [r7]
   12b14:	mov	r8, r1
   12b18:	str	r5, [sp]
   12b1c:	str	r3, [sp, #4]
   12b20:	bl	11180 <__errno_location@plt>
   12b24:	cmp	r4, r5
   12b28:	str	r5, [r0]
   12b2c:	beq	12b3c <strspn@plt+0x1854>
   12b30:	ldrsb	r3, [r4]
   12b34:	cmp	r3, r5
   12b38:	bne	12b5c <strspn@plt+0x1874>
   12b3c:	ldr	r1, [pc, #160]	; 12be4 <strspn@plt+0x18fc>
   12b40:	mov	r3, r4
   12b44:	add	r1, pc, r1
   12b48:	mov	r2, r8
   12b4c:	ldr	r0, [r1]
   12b50:	ldr	r1, [pc, #144]	; 12be8 <strspn@plt+0x1900>
   12b54:	add	r1, pc, r1
   12b58:	bl	11228 <errx@plt>
   12b5c:	mov	r6, r0
   12b60:	mov	r1, sp
   12b64:	mov	r0, r4
   12b68:	bl	111e0 <strtod@plt>
   12b6c:	ldr	r2, [r6]
   12b70:	cmp	r2, r5
   12b74:	bne	12bb0 <strspn@plt+0x18c8>
   12b78:	ldr	r3, [sp]
   12b7c:	cmp	r3, r4
   12b80:	beq	12b3c <strspn@plt+0x1854>
   12b84:	cmp	r3, r5
   12b88:	beq	12b98 <strspn@plt+0x18b0>
   12b8c:	ldrsb	r3, [r3]
   12b90:	cmp	r3, r5
   12b94:	bne	12b3c <strspn@plt+0x1854>
   12b98:	ldr	r2, [sp, #4]
   12b9c:	ldr	r3, [r7]
   12ba0:	cmp	r2, r3
   12ba4:	bne	12bd8 <strspn@plt+0x18f0>
   12ba8:	add	sp, sp, #8
   12bac:	pop	{r4, r5, r6, r7, r8, pc}
   12bb0:	ldr	r3, [pc, #52]	; 12bec <strspn@plt+0x1904>
   12bb4:	cmp	r2, #34	; 0x22
   12bb8:	add	r3, pc, r3
   12bbc:	ldr	r0, [r3]
   12bc0:	bne	12b3c <strspn@plt+0x1854>
   12bc4:	ldr	r1, [pc, #36]	; 12bf0 <strspn@plt+0x1908>
   12bc8:	mov	r3, r4
   12bcc:	mov	r2, r8
   12bd0:	add	r1, pc, r1
   12bd4:	bl	1109c <err@plt>
   12bd8:	bl	11084 <__stack_chk_fail@plt>
   12bdc:	ldrdeq	r3, [r1], -r4
   12be0:	andeq	r0, r0, r4, lsr #2
   12be4:			; <UNDEFINED> instruction: 0x000134bc
   12be8:	andeq	r2, r0, r8, ror #15
   12bec:	andeq	r3, r1, r8, asr #8
   12bf0:	andeq	r2, r0, ip, ror #14
   12bf4:	ldr	r2, [pc, #232]	; 12ce4 <strspn@plt+0x19fc>
   12bf8:	ldr	r3, [pc, #232]	; 12ce8 <strspn@plt+0x1a00>
   12bfc:	add	r2, pc, r2
   12c00:	push	{r4, r5, r6, r7, r8, lr}
   12c04:	sub	sp, sp, #8
   12c08:	ldr	r7, [r2, r3]
   12c0c:	mov	r5, #0
   12c10:	mov	r4, r0
   12c14:	ldr	r3, [r7]
   12c18:	mov	r8, r1
   12c1c:	str	r5, [sp]
   12c20:	str	r3, [sp, #4]
   12c24:	bl	11180 <__errno_location@plt>
   12c28:	cmp	r4, r5
   12c2c:	str	r5, [r0]
   12c30:	beq	12c40 <strspn@plt+0x1958>
   12c34:	ldrsb	r3, [r4]
   12c38:	cmp	r3, r5
   12c3c:	bne	12c60 <strspn@plt+0x1978>
   12c40:	ldr	r1, [pc, #164]	; 12cec <strspn@plt+0x1a04>
   12c44:	mov	r3, r4
   12c48:	add	r1, pc, r1
   12c4c:	mov	r2, r8
   12c50:	ldr	r0, [r1]
   12c54:	ldr	r1, [pc, #148]	; 12cf0 <strspn@plt+0x1a08>
   12c58:	add	r1, pc, r1
   12c5c:	bl	11228 <errx@plt>
   12c60:	mov	r6, r0
   12c64:	mov	r2, #10
   12c68:	mov	r1, sp
   12c6c:	mov	r0, r4
   12c70:	bl	10fdc <strtol@plt>
   12c74:	ldr	r2, [r6]
   12c78:	cmp	r2, r5
   12c7c:	bne	12cb8 <strspn@plt+0x19d0>
   12c80:	ldr	r3, [sp]
   12c84:	cmp	r3, r4
   12c88:	beq	12c40 <strspn@plt+0x1958>
   12c8c:	cmp	r3, r5
   12c90:	beq	12ca0 <strspn@plt+0x19b8>
   12c94:	ldrsb	r3, [r3]
   12c98:	cmp	r3, r5
   12c9c:	bne	12c40 <strspn@plt+0x1958>
   12ca0:	ldr	r2, [sp, #4]
   12ca4:	ldr	r3, [r7]
   12ca8:	cmp	r2, r3
   12cac:	bne	12ce0 <strspn@plt+0x19f8>
   12cb0:	add	sp, sp, #8
   12cb4:	pop	{r4, r5, r6, r7, r8, pc}
   12cb8:	ldr	r3, [pc, #52]	; 12cf4 <strspn@plt+0x1a0c>
   12cbc:	cmp	r2, #34	; 0x22
   12cc0:	add	r3, pc, r3
   12cc4:	ldr	r0, [r3]
   12cc8:	bne	12c40 <strspn@plt+0x1958>
   12ccc:	ldr	r1, [pc, #36]	; 12cf8 <strspn@plt+0x1a10>
   12cd0:	mov	r3, r4
   12cd4:	mov	r2, r8
   12cd8:	add	r1, pc, r1
   12cdc:	bl	1109c <err@plt>
   12ce0:	bl	11084 <__stack_chk_fail@plt>
   12ce4:	ldrdeq	r3, [r1], -r0
   12ce8:	andeq	r0, r0, r4, lsr #2
   12cec:			; <UNDEFINED> instruction: 0x000133b8
   12cf0:	andeq	r2, r0, r4, ror #13
   12cf4:	andeq	r3, r1, r0, asr #6
   12cf8:	andeq	r2, r0, r4, ror #12
   12cfc:	ldr	r2, [pc, #232]	; 12dec <strspn@plt+0x1b04>
   12d00:	ldr	r3, [pc, #232]	; 12df0 <strspn@plt+0x1b08>
   12d04:	add	r2, pc, r2
   12d08:	push	{r4, r5, r6, r7, r8, lr}
   12d0c:	sub	sp, sp, #8
   12d10:	ldr	r7, [r2, r3]
   12d14:	mov	r5, #0
   12d18:	mov	r4, r0
   12d1c:	ldr	r3, [r7]
   12d20:	mov	r8, r1
   12d24:	str	r5, [sp]
   12d28:	str	r3, [sp, #4]
   12d2c:	bl	11180 <__errno_location@plt>
   12d30:	cmp	r4, r5
   12d34:	str	r5, [r0]
   12d38:	beq	12d48 <strspn@plt+0x1a60>
   12d3c:	ldrsb	r3, [r4]
   12d40:	cmp	r3, r5
   12d44:	bne	12d68 <strspn@plt+0x1a80>
   12d48:	ldr	r1, [pc, #164]	; 12df4 <strspn@plt+0x1b0c>
   12d4c:	mov	r3, r4
   12d50:	add	r1, pc, r1
   12d54:	mov	r2, r8
   12d58:	ldr	r0, [r1]
   12d5c:	ldr	r1, [pc, #148]	; 12df8 <strspn@plt+0x1b10>
   12d60:	add	r1, pc, r1
   12d64:	bl	11228 <errx@plt>
   12d68:	mov	r6, r0
   12d6c:	mov	r2, #10
   12d70:	mov	r1, sp
   12d74:	mov	r0, r4
   12d78:	bl	11144 <strtoul@plt>
   12d7c:	ldr	r2, [r6]
   12d80:	cmp	r2, r5
   12d84:	bne	12dc0 <strspn@plt+0x1ad8>
   12d88:	ldr	r3, [sp]
   12d8c:	cmp	r3, r4
   12d90:	beq	12d48 <strspn@plt+0x1a60>
   12d94:	cmp	r3, r5
   12d98:	beq	12da8 <strspn@plt+0x1ac0>
   12d9c:	ldrsb	r3, [r3]
   12da0:	cmp	r3, r5
   12da4:	bne	12d48 <strspn@plt+0x1a60>
   12da8:	ldr	r2, [sp, #4]
   12dac:	ldr	r3, [r7]
   12db0:	cmp	r2, r3
   12db4:	bne	12de8 <strspn@plt+0x1b00>
   12db8:	add	sp, sp, #8
   12dbc:	pop	{r4, r5, r6, r7, r8, pc}
   12dc0:	ldr	r3, [pc, #52]	; 12dfc <strspn@plt+0x1b14>
   12dc4:	cmp	r2, #34	; 0x22
   12dc8:	add	r3, pc, r3
   12dcc:	ldr	r0, [r3]
   12dd0:	bne	12d48 <strspn@plt+0x1a60>
   12dd4:	ldr	r1, [pc, #36]	; 12e00 <strspn@plt+0x1b18>
   12dd8:	mov	r3, r4
   12ddc:	mov	r2, r8
   12de0:	add	r1, pc, r1
   12de4:	bl	1109c <err@plt>
   12de8:	bl	11084 <__stack_chk_fail@plt>
   12dec:	andeq	r3, r1, r8, asr #3
   12df0:	andeq	r0, r0, r4, lsr #2
   12df4:			; <UNDEFINED> instruction: 0x000132b0
   12df8:	ldrdeq	r2, [r0], -ip
   12dfc:	andeq	r3, r1, r8, lsr r2
   12e00:	andeq	r2, r0, ip, asr r5
   12e04:	ldr	r3, [pc, #140]	; 12e98 <strspn@plt+0x1bb0>
   12e08:	ldr	r2, [pc, #140]	; 12e9c <strspn@plt+0x1bb4>
   12e0c:	add	r3, pc, r3
   12e10:	push	{r4, r5, r6, lr}
   12e14:	sub	sp, sp, #16
   12e18:	ldr	r4, [r3, r2]
   12e1c:	mov	r5, r1
   12e20:	mov	r1, sp
   12e24:	ldr	r3, [r4]
   12e28:	mov	r6, r0
   12e2c:	str	r3, [sp, #12]
   12e30:	bl	12644 <strspn@plt+0x135c>
   12e34:	cmp	r0, #0
   12e38:	beq	12e78 <strspn@plt+0x1b90>
   12e3c:	bl	11180 <__errno_location@plt>
   12e40:	ldr	r3, [pc, #88]	; 12ea0 <strspn@plt+0x1bb8>
   12e44:	mov	r2, r5
   12e48:	ldr	r1, [pc, r3]
   12e4c:	ldr	r3, [r0]
   12e50:	mov	r0, r1
   12e54:	cmp	r3, #0
   12e58:	mov	r3, r6
   12e5c:	beq	12e6c <strspn@plt+0x1b84>
   12e60:	ldr	r1, [pc, #60]	; 12ea4 <strspn@plt+0x1bbc>
   12e64:	add	r1, pc, r1
   12e68:	bl	1109c <err@plt>
   12e6c:	ldr	r1, [pc, #52]	; 12ea8 <strspn@plt+0x1bc0>
   12e70:	add	r1, pc, r1
   12e74:	bl	11228 <errx@plt>
   12e78:	ldr	r2, [sp, #12]
   12e7c:	ldr	r3, [r4]
   12e80:	ldrd	r0, [sp]
   12e84:	cmp	r2, r3
   12e88:	bne	12e94 <strspn@plt+0x1bac>
   12e8c:	add	sp, sp, #16
   12e90:	pop	{r4, r5, r6, pc}
   12e94:	bl	11084 <__stack_chk_fail@plt>
   12e98:	andeq	r3, r1, r0, asr #1
   12e9c:	andeq	r0, r0, r4, lsr #2
   12ea0:			; <UNDEFINED> instruction: 0x000131b8
   12ea4:	ldrdeq	r2, [r0], -r8
   12ea8:	andeq	r2, r0, ip, asr #9
   12eac:	push	{r4, lr}
   12eb0:	mov	r4, r1
   12eb4:	mov	r1, r2
   12eb8:	bl	12af0 <strspn@plt+0x1808>
   12ebc:	vldr	d6, [pc, #28]	; 12ee0 <strspn@plt+0x1bf8>
   12ec0:	vcvt.s32.f64	s15, d0
   12ec4:	vcvt.f64.s32	d5, s15
   12ec8:	vstr	s15, [r4]
   12ecc:	vsub.f64	d0, d0, d5
   12ed0:	vmul.f64	d0, d0, d6
   12ed4:	vcvt.s32.f64	s0, d0
   12ed8:	vstr	s0, [r4, #4]
   12edc:	pop	{r4, pc}
   12ee0:	andeq	r0, r0, r0
   12ee4:	smlawbmi	lr, r0, r4, r8
   12ee8:	and	r2, r0, #61440	; 0xf000
   12eec:	cmp	r2, #16384	; 0x4000
   12ef0:	moveq	r2, r1
   12ef4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ef8:	moveq	sl, #100	; 0x64
   12efc:	mov	r3, r0
   12f00:	add	r9, r1, #1
   12f04:	add	r8, r1, #2
   12f08:	add	r7, r1, #3
   12f0c:	add	r6, r1, #4
   12f10:	add	r5, r1, #5
   12f14:	add	r4, r1, #6
   12f18:	add	lr, r1, #7
   12f1c:	add	ip, r1, #8
   12f20:	add	r0, r1, #9
   12f24:	strbeq	sl, [r2], #10
   12f28:	beq	12fcc <strspn@plt+0x1ce4>
   12f2c:	cmp	r2, #40960	; 0xa000
   12f30:	moveq	r2, r1
   12f34:	moveq	sl, #108	; 0x6c
   12f38:	strbeq	sl, [r2], #10
   12f3c:	beq	12fcc <strspn@plt+0x1ce4>
   12f40:	cmp	r2, #8192	; 0x2000
   12f44:	moveq	r2, r1
   12f48:	moveq	sl, #99	; 0x63
   12f4c:	strbeq	sl, [r2], #10
   12f50:	beq	12fcc <strspn@plt+0x1ce4>
   12f54:	cmp	r2, #24576	; 0x6000
   12f58:	moveq	r2, r1
   12f5c:	moveq	sl, #98	; 0x62
   12f60:	strbeq	sl, [r2], #10
   12f64:	beq	12fcc <strspn@plt+0x1ce4>
   12f68:	cmp	r2, #49152	; 0xc000
   12f6c:	moveq	r2, r1
   12f70:	moveq	sl, #115	; 0x73
   12f74:	strbeq	sl, [r2], #10
   12f78:	beq	12fcc <strspn@plt+0x1ce4>
   12f7c:	cmp	r2, #4096	; 0x1000
   12f80:	moveq	r2, r1
   12f84:	moveq	sl, #112	; 0x70
   12f88:	strbeq	sl, [r2], #10
   12f8c:	beq	12fcc <strspn@plt+0x1ce4>
   12f90:	cmp	r2, #32768	; 0x8000
   12f94:	moveq	r2, r1
   12f98:	moveq	sl, #45	; 0x2d
   12f9c:	strbeq	sl, [r2], #10
   12fa0:	beq	12fcc <strspn@plt+0x1ce4>
   12fa4:	mov	r2, r0
   12fa8:	mov	r0, ip
   12fac:	mov	ip, lr
   12fb0:	mov	lr, r4
   12fb4:	mov	r4, r5
   12fb8:	mov	r5, r6
   12fbc:	mov	r6, r7
   12fc0:	mov	r7, r8
   12fc4:	mov	r8, r9
   12fc8:	mov	r9, r1
   12fcc:	tst	r3, #256	; 0x100
   12fd0:	movne	fp, #114	; 0x72
   12fd4:	moveq	fp, #45	; 0x2d
   12fd8:	tst	r3, #128	; 0x80
   12fdc:	movne	sl, #119	; 0x77
   12fe0:	moveq	sl, #45	; 0x2d
   12fe4:	tst	r3, #2048	; 0x800
   12fe8:	strb	fp, [r9]
   12fec:	and	r9, r3, #64	; 0x40
   12ff0:	strb	sl, [r8]
   12ff4:	beq	13090 <strspn@plt+0x1da8>
   12ff8:	cmp	r9, #0
   12ffc:	movne	r9, #115	; 0x73
   13000:	moveq	r9, #83	; 0x53
   13004:	tst	r3, #32
   13008:	movne	r8, #114	; 0x72
   1300c:	moveq	r8, #45	; 0x2d
   13010:	tst	r3, #16
   13014:	strb	r9, [r7]
   13018:	movne	r7, #119	; 0x77
   1301c:	moveq	r7, #45	; 0x2d
   13020:	tst	r3, #1024	; 0x400
   13024:	strb	r8, [r6]
   13028:	and	r6, r3, #8
   1302c:	strb	r7, [r5]
   13030:	beq	130a0 <strspn@plt+0x1db8>
   13034:	cmp	r6, #0
   13038:	movne	r6, #115	; 0x73
   1303c:	moveq	r6, #83	; 0x53
   13040:	tst	r3, #4
   13044:	movne	r5, #114	; 0x72
   13048:	moveq	r5, #45	; 0x2d
   1304c:	tst	r3, #2
   13050:	strb	r6, [r4]
   13054:	movne	r4, #119	; 0x77
   13058:	moveq	r4, #45	; 0x2d
   1305c:	tst	r3, #512	; 0x200
   13060:	strb	r5, [lr]
   13064:	and	r3, r3, #1
   13068:	strb	r4, [ip]
   1306c:	beq	130b0 <strspn@plt+0x1dc8>
   13070:	cmp	r3, #0
   13074:	movne	ip, #116	; 0x74
   13078:	moveq	ip, #84	; 0x54
   1307c:	mov	r3, #0
   13080:	strb	ip, [r0]
   13084:	mov	r0, r1
   13088:	strb	r3, [r2]
   1308c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13090:	cmp	r9, #0
   13094:	movne	r9, #120	; 0x78
   13098:	moveq	r9, #45	; 0x2d
   1309c:	b	13004 <strspn@plt+0x1d1c>
   130a0:	cmp	r6, #0
   130a4:	movne	r6, #120	; 0x78
   130a8:	moveq	r6, #45	; 0x2d
   130ac:	b	13040 <strspn@plt+0x1d58>
   130b0:	cmp	r3, #0
   130b4:	movne	ip, #120	; 0x78
   130b8:	moveq	ip, #45	; 0x2d
   130bc:	b	1307c <strspn@plt+0x1d94>
   130c0:	ldr	r1, [pc, #680]	; 13370 <strspn@plt+0x2088>
   130c4:	ldr	ip, [pc, #680]	; 13374 <strspn@plt+0x208c>
   130c8:	add	r1, pc, r1
   130cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130d0:	sub	sp, sp, #108	; 0x6c
   130d4:	ldr	r8, [r1, ip]
   130d8:	tst	r0, #2
   130dc:	strd	r2, [sp, #32]
   130e0:	ldr	r1, [r8]
   130e4:	addeq	r9, sp, #60	; 0x3c
   130e8:	str	r1, [sp, #100]	; 0x64
   130ec:	ldrd	r2, [sp, #32]
   130f0:	movne	r1, #32
   130f4:	strbne	r1, [sp, #60]	; 0x3c
   130f8:	addne	ip, sp, #61	; 0x3d
   130fc:	addne	r9, sp, #60	; 0x3c
   13100:	moveq	ip, r9
   13104:	mov	r1, #10
   13108:	mov	sl, #1
   1310c:	sub	lr, r1, #32
   13110:	lsl	r4, sl, r1
   13114:	lsl	r5, sl, lr
   13118:	rsb	lr, r1, #32
   1311c:	orr	r5, r5, sl, lsr lr
   13120:	cmp	r3, r5
   13124:	cmpeq	r2, r4
   13128:	bcc	132e4 <strspn@plt+0x1ffc>
   1312c:	add	r1, r1, #10
   13130:	cmp	r1, #70	; 0x46
   13134:	bne	1310c <strspn@plt+0x1e24>
   13138:	mov	lr, ip
   1313c:	strd	r2, [sp, #32]
   13140:	mov	r4, r2
   13144:	tst	r0, #1
   13148:	mov	r2, #69	; 0x45
   1314c:	bic	r5, r3, #-268435456	; 0xf0000000
   13150:	lsr	sl, r3, #28
   13154:	strb	r2, [lr], #1
   13158:	bne	132cc <strspn@plt+0x1fe4>
   1315c:	orrs	r3, r4, r5
   13160:	mov	r3, #0
   13164:	strb	r3, [lr]
   13168:	beq	1330c <strspn@plt+0x2024>
   1316c:	sub	r2, r1, #20
   13170:	rsb	r0, r2, #32
   13174:	lsr	r3, r4, r2
   13178:	sub	r1, r1, #52	; 0x34
   1317c:	orr	r3, r3, r5, lsl r0
   13180:	orr	r3, r3, r5, lsr r1
   13184:	lsr	r2, r5, r2
   13188:	adds	r6, r3, #50	; 0x32
   1318c:	adc	r7, r2, #0
   13190:	mov	r3, #0
   13194:	mov	r2, #100	; 0x64
   13198:	mov	r0, r6
   1319c:	mov	r1, r7
   131a0:	bl	14b60 <strspn@plt+0x3878>
   131a4:	cmp	r1, #0
   131a8:	cmpeq	r0, #10
   131ac:	mov	r2, r0
   131b0:	mov	r3, r1
   131b4:	addeq	sl, sl, #1
   131b8:	beq	1330c <strspn@plt+0x2024>
   131bc:	cmp	r7, #0
   131c0:	cmpeq	r6, #99	; 0x63
   131c4:	strd	r2, [sp, #32]
   131c8:	bls	1330c <strspn@plt+0x2024>
   131cc:	bl	11258 <localeconv@plt>
   131d0:	ldrd	r2, [sp, #32]
   131d4:	cmp	r0, #0
   131d8:	beq	13354 <strspn@plt+0x206c>
   131dc:	ldr	r0, [r0]
   131e0:	cmp	r0, #0
   131e4:	beq	13360 <strspn@plt+0x2078>
   131e8:	ldrsb	r1, [r0]
   131ec:	cmp	r1, #0
   131f0:	ldreq	r0, [pc, #384]	; 13378 <strspn@plt+0x2090>
   131f4:	addeq	r0, pc, r0
   131f8:	ldr	r1, [pc, #380]	; 1337c <strspn@plt+0x2094>
   131fc:	strd	r2, [sp, #16]
   13200:	add	r1, pc, r1
   13204:	add	r4, sp, #68	; 0x44
   13208:	mov	r3, #32
   1320c:	str	r0, [sp, #8]
   13210:	str	r1, [sp]
   13214:	str	r9, [sp, #24]
   13218:	str	sl, [sp, #4]
   1321c:	mov	r0, r4
   13220:	mov	r1, r3
   13224:	mov	r2, #1
   13228:	bl	112dc <__snprintf_chk@plt>
   1322c:	b	13334 <strspn@plt+0x204c>
   13230:	ldr	r4, [pc, #328]	; 13380 <strspn@plt+0x2098>
   13234:	mvn	sl, #0
   13238:	ldr	fp, [pc, #324]	; 13384 <strspn@plt+0x209c>
   1323c:	umull	r2, r3, lr, r4
   13240:	sub	r4, r1, #42	; 0x2a
   13244:	strd	r2, [sp, #40]	; 0x28
   13248:	ldr	r3, [sp, #44]	; 0x2c
   1324c:	lsl	r2, sl, lr
   13250:	lsr	r3, r3, #3
   13254:	str	r3, [sp, #52]	; 0x34
   13258:	ldr	r3, [sp, #32]
   1325c:	str	r4, [sp, #48]	; 0x30
   13260:	orr	r4, r2, sl, lsl r4
   13264:	lsr	r2, r3, lr
   13268:	mov	r3, r2
   1326c:	ldr	r2, [sp, #52]	; 0x34
   13270:	add	fp, pc, fp
   13274:	str	r4, [sp, #40]	; 0x28
   13278:	ldrsb	fp, [fp, r2]
   1327c:	mov	r2, r3
   13280:	ldr	r3, [sp, #36]	; 0x24
   13284:	rsb	r5, lr, #32
   13288:	ldr	r4, [sp, #40]	; 0x28
   1328c:	orr	r2, r2, r3, lsl r5
   13290:	orr	r4, r4, sl, lsr r5
   13294:	ldr	r3, [sp, #32]
   13298:	str	r4, [sp, #40]	; 0x28
   1329c:	cmp	r0, #0
   132a0:	bic	r4, r3, sl, lsl lr
   132a4:	ldr	r0, [sp, #36]	; 0x24
   132a8:	ldr	r3, [sp, #48]	; 0x30
   132ac:	mov	lr, ip
   132b0:	orr	sl, r2, r0, lsr r3
   132b4:	ldr	r3, [sp, #40]	; 0x28
   132b8:	strb	fp, [lr], #1
   132bc:	bic	r5, r0, r3
   132c0:	beq	1315c <strspn@plt+0x1e74>
   132c4:	cmp	fp, #66	; 0x42
   132c8:	beq	1315c <strspn@plt+0x1e74>
   132cc:	mov	r3, #105	; 0x69
   132d0:	strb	r3, [ip, #1]
   132d4:	mov	r3, #66	; 0x42
   132d8:	add	lr, ip, #3
   132dc:	strb	r3, [ip, #2]
   132e0:	b	1315c <strspn@plt+0x1e74>
   132e4:	subs	lr, r1, #10
   132e8:	strd	r2, [sp, #32]
   132ec:	and	r0, r0, #1
   132f0:	bne	13230 <strspn@plt+0x1f48>
   132f4:	ldr	sl, [sp, #32]
   132f8:	cmp	r0, #0
   132fc:	movne	r0, lr
   13300:	mov	r3, #66	; 0x42
   13304:	strb	r0, [ip, #1]
   13308:	strb	r3, [ip]
   1330c:	ldr	r2, [pc, #116]	; 13388 <strspn@plt+0x20a0>
   13310:	add	r4, sp, #68	; 0x44
   13314:	add	r2, pc, r2
   13318:	mov	r3, #32
   1331c:	stm	sp, {r2, sl}
   13320:	str	r9, [sp, #8]
   13324:	mov	r0, r4
   13328:	mov	r1, r3
   1332c:	mov	r2, #1
   13330:	bl	112dc <__snprintf_chk@plt>
   13334:	mov	r0, r4
   13338:	bl	11078 <strdup@plt>
   1333c:	ldr	r2, [sp, #100]	; 0x64
   13340:	ldr	r3, [r8]
   13344:	cmp	r2, r3
   13348:	bne	1336c <strspn@plt+0x2084>
   1334c:	add	sp, sp, #108	; 0x6c
   13350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13354:	ldr	r0, [pc, #48]	; 1338c <strspn@plt+0x20a4>
   13358:	add	r0, pc, r0
   1335c:	b	131f8 <strspn@plt+0x1f10>
   13360:	ldr	r0, [pc, #40]	; 13390 <strspn@plt+0x20a8>
   13364:	add	r0, pc, r0
   13368:	b	131f8 <strspn@plt+0x1f10>
   1336c:	bl	11084 <__stack_chk_fail@plt>
   13370:	andeq	r2, r1, r4, lsl #28
   13374:	andeq	r0, r0, r4, lsr #2
   13378:	andeq	r2, r0, ip, ror #2
   1337c:	andeq	r2, r0, ip, ror #2
   13380:	stclgt	12, cr12, [ip], {205}	; 0xcd
   13384:	strdeq	r2, [r0], -r4
   13388:	andeq	r2, r0, r4, rrx
   1338c:	andeq	r2, r0, r8
   13390:	strdeq	r1, [r0], -ip
   13394:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13398:	subs	r4, r0, #0
   1339c:	beq	1346c <strspn@plt+0x2184>
   133a0:	ldrsb	lr, [r4]
   133a4:	cmp	lr, #0
   133a8:	beq	1346c <strspn@plt+0x2184>
   133ac:	cmp	r1, #0
   133b0:	clz	ip, r2
   133b4:	lsr	ip, ip, #5
   133b8:	moveq	r0, #1
   133bc:	movne	r0, ip
   133c0:	cmp	r3, #0
   133c4:	moveq	r0, #1
   133c8:	cmp	r0, #0
   133cc:	bne	1346c <strspn@plt+0x2184>
   133d0:	mov	r8, r3
   133d4:	mov	r7, r2
   133d8:	mov	r9, r1
   133dc:	mov	r5, r0
   133e0:	b	1343c <strspn@plt+0x2154>
   133e4:	cmp	r3, #0
   133e8:	bne	13428 <strspn@plt+0x2140>
   133ec:	cmn	r4, #1
   133f0:	add	r6, r4, #1
   133f4:	beq	13474 <strspn@plt+0x218c>
   133f8:	cmp	r0, r6
   133fc:	bcs	1346c <strspn@plt+0x2184>
   13400:	sub	r1, r6, r0
   13404:	blx	r8
   13408:	cmn	r0, #1
   1340c:	beq	1346c <strspn@plt+0x2184>
   13410:	str	r0, [r9, r5, lsl #2]
   13414:	ldrsb	r3, [r6]
   13418:	add	r5, r5, #1
   1341c:	cmp	r3, #0
   13420:	beq	13474 <strspn@plt+0x218c>
   13424:	mov	r0, #0
   13428:	cmn	r4, #1
   1342c:	beq	13474 <strspn@plt+0x218c>
   13430:	ldrsb	lr, [r4, #1]!
   13434:	cmp	lr, #0
   13438:	beq	13474 <strspn@plt+0x218c>
   1343c:	cmp	r7, r5
   13440:	mov	r6, r4
   13444:	bls	1347c <strspn@plt+0x2194>
   13448:	cmp	r0, #0
   1344c:	moveq	r0, r4
   13450:	cmp	lr, #44	; 0x2c
   13454:	ldrsb	r3, [r4, #1]
   13458:	bne	133e4 <strspn@plt+0x20fc>
   1345c:	cmp	r3, #0
   13460:	beq	133ec <strspn@plt+0x2104>
   13464:	cmp	r0, r6
   13468:	bcc	13400 <strspn@plt+0x2118>
   1346c:	mvn	r0, #0
   13470:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13474:	mov	r0, r5
   13478:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1347c:	mvn	r0, #1
   13480:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13484:	cmp	r0, #0
   13488:	beq	134f4 <strspn@plt+0x220c>
   1348c:	push	{r4, lr}
   13490:	mov	r4, r3
   13494:	cmp	r4, #0
   13498:	ldrsb	ip, [r0]
   1349c:	clz	r3, ip
   134a0:	lsr	r3, r3, #5
   134a4:	moveq	r3, #1
   134a8:	cmp	r3, #0
   134ac:	bne	134ec <strspn@plt+0x2204>
   134b0:	ldr	lr, [r4]
   134b4:	cmp	lr, r2
   134b8:	bhi	134ec <strspn@plt+0x2204>
   134bc:	cmp	ip, #43	; 0x2b
   134c0:	strne	r3, [r4]
   134c4:	addeq	r0, r0, #1
   134c8:	ldr	r3, [sp, #8]
   134cc:	addeq	r1, r1, lr, lsl #2
   134d0:	subeq	r2, r2, lr
   134d4:	bl	13394 <strspn@plt+0x20ac>
   134d8:	cmp	r0, #0
   134dc:	ldrgt	r3, [r4]
   134e0:	addgt	r3, r3, r0
   134e4:	strgt	r3, [r4]
   134e8:	pop	{r4, pc}
   134ec:	mvn	r0, #0
   134f0:	pop	{r4, pc}
   134f4:	mvn	r0, #0
   134f8:	bx	lr
   134fc:	cmp	r2, #0
   13500:	clz	r3, r1
   13504:	lsr	r3, r3, #5
   13508:	moveq	r3, #1
   1350c:	cmp	r0, #0
   13510:	moveq	r3, #1
   13514:	cmp	r3, #0
   13518:	bne	135e4 <strspn@plt+0x22fc>
   1351c:	push	{r4, r5, r6, r7, r8, lr}
   13520:	mov	r6, r2
   13524:	mov	r2, r3
   13528:	ldrsb	r3, [r0]
   1352c:	mov	r8, r1
   13530:	mov	r4, r0
   13534:	mov	r7, #1
   13538:	cmp	r3, #0
   1353c:	beq	135ac <strspn@plt+0x22c4>
   13540:	cmp	r2, #0
   13544:	moveq	r2, r4
   13548:	cmp	r3, #44	; 0x2c
   1354c:	mov	r5, r4
   13550:	ldrsb	r3, [r4, #1]!
   13554:	beq	135b4 <strspn@plt+0x22cc>
   13558:	cmp	r3, #0
   1355c:	bne	135d4 <strspn@plt+0x22ec>
   13560:	mov	r5, r4
   13564:	cmp	r2, r5
   13568:	sub	r1, r5, r2
   1356c:	mov	r0, r2
   13570:	bcs	135cc <strspn@plt+0x22e4>
   13574:	blx	r6
   13578:	mov	r2, r4
   1357c:	cmp	r0, #0
   13580:	and	r1, r0, #7
   13584:	poplt	{r4, r5, r6, r7, r8, pc}
   13588:	ldrb	r3, [r8, r0, asr #3]
   1358c:	orr	r3, r3, r7, lsl r1
   13590:	strb	r3, [r8, r0, asr #3]
   13594:	ldrsb	r3, [r5]
   13598:	cmp	r3, #0
   1359c:	beq	135ac <strspn@plt+0x22c4>
   135a0:	ldrsb	r3, [r4]
   135a4:	cmp	r3, #0
   135a8:	bne	13548 <strspn@plt+0x2260>
   135ac:	mov	r0, #0
   135b0:	pop	{r4, r5, r6, r7, r8, pc}
   135b4:	cmp	r3, #0
   135b8:	moveq	r5, r4
   135bc:	cmp	r2, r5
   135c0:	sub	r1, r5, r2
   135c4:	mov	r0, r2
   135c8:	bcc	13574 <strspn@plt+0x228c>
   135cc:	mvn	r0, #0
   135d0:	pop	{r4, r5, r6, r7, r8, pc}
   135d4:	adds	r4, r5, #1
   135d8:	bne	13538 <strspn@plt+0x2250>
   135dc:	mov	r0, #0
   135e0:	pop	{r4, r5, r6, r7, r8, pc}
   135e4:	mvn	r0, #21
   135e8:	bx	lr
   135ec:	cmp	r2, #0
   135f0:	clz	r3, r1
   135f4:	lsr	r3, r3, #5
   135f8:	moveq	r3, #1
   135fc:	cmp	r0, #0
   13600:	moveq	r3, #1
   13604:	cmp	r3, #0
   13608:	bne	136cc <strspn@plt+0x23e4>
   1360c:	push	{r4, r5, r6, r7, r8, lr}
   13610:	mov	r6, r2
   13614:	mov	r2, r3
   13618:	ldrsb	r3, [r0]
   1361c:	mov	r7, r1
   13620:	mov	r4, r0
   13624:	cmp	r3, #0
   13628:	beq	13694 <strspn@plt+0x23ac>
   1362c:	cmp	r2, #0
   13630:	moveq	r2, r4
   13634:	cmp	r3, #44	; 0x2c
   13638:	mov	r5, r4
   1363c:	ldrsb	r3, [r4, #1]!
   13640:	beq	1369c <strspn@plt+0x23b4>
   13644:	cmp	r3, #0
   13648:	bne	136bc <strspn@plt+0x23d4>
   1364c:	mov	r5, r4
   13650:	cmp	r2, r5
   13654:	sub	r1, r5, r2
   13658:	mov	r0, r2
   1365c:	bcs	136b4 <strspn@plt+0x23cc>
   13660:	blx	r6
   13664:	mov	r2, r4
   13668:	cmp	r0, #0
   1366c:	poplt	{r4, r5, r6, r7, r8, pc}
   13670:	ldr	r3, [r7]
   13674:	orr	r3, r3, r0
   13678:	str	r3, [r7]
   1367c:	ldrsb	r3, [r5]
   13680:	cmp	r3, #0
   13684:	beq	13694 <strspn@plt+0x23ac>
   13688:	ldrsb	r3, [r4]
   1368c:	cmp	r3, #0
   13690:	bne	13634 <strspn@plt+0x234c>
   13694:	mov	r0, #0
   13698:	pop	{r4, r5, r6, r7, r8, pc}
   1369c:	cmp	r3, #0
   136a0:	moveq	r5, r4
   136a4:	cmp	r2, r5
   136a8:	sub	r1, r5, r2
   136ac:	mov	r0, r2
   136b0:	bcc	13660 <strspn@plt+0x2378>
   136b4:	mvn	r0, #0
   136b8:	pop	{r4, r5, r6, r7, r8, pc}
   136bc:	adds	r4, r5, #1
   136c0:	bne	13624 <strspn@plt+0x233c>
   136c4:	mov	r0, #0
   136c8:	pop	{r4, r5, r6, r7, r8, pc}
   136cc:	mvn	r0, #21
   136d0:	bx	lr
   136d4:	ldr	ip, [pc, #396]	; 13868 <strspn@plt+0x2580>
   136d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   136dc:	add	ip, pc, ip
   136e0:	ldr	lr, [pc, #388]	; 1386c <strspn@plt+0x2584>
   136e4:	sub	sp, sp, #8
   136e8:	mov	r9, r3
   136ec:	ldr	r5, [ip, lr]
   136f0:	mov	sl, #0
   136f4:	subs	r4, r0, #0
   136f8:	ldr	r3, [r5]
   136fc:	mov	r7, r1
   13700:	str	sl, [sp]
   13704:	mov	r1, ip
   13708:	str	r3, [sp, #4]
   1370c:	beq	13780 <strspn@plt+0x2498>
   13710:	str	r9, [r7]
   13714:	str	r9, [r2]
   13718:	mov	r6, r2
   1371c:	bl	11180 <__errno_location@plt>
   13720:	str	sl, [r0]
   13724:	ldrsb	r3, [r4]
   13728:	mov	r8, r0
   1372c:	cmp	r3, #58	; 0x3a
   13730:	beq	1379c <strspn@plt+0x24b4>
   13734:	mov	sl, sp
   13738:	mov	r1, sl
   1373c:	mov	r2, #10
   13740:	mov	r0, r4
   13744:	bl	10fdc <strtol@plt>
   13748:	str	r0, [r7]
   1374c:	str	r0, [r6]
   13750:	ldr	r0, [r8]
   13754:	cmp	r0, #0
   13758:	bne	137ec <strspn@plt+0x2504>
   1375c:	ldr	r2, [sp]
   13760:	cmp	r2, #0
   13764:	cmpne	r2, r4
   13768:	beq	137ec <strspn@plt+0x2504>
   1376c:	ldrsb	r3, [r2]
   13770:	cmp	r3, #58	; 0x3a
   13774:	beq	137f4 <strspn@plt+0x250c>
   13778:	cmp	r3, #45	; 0x2d
   1377c:	beq	13804 <strspn@plt+0x251c>
   13780:	mov	r0, #0
   13784:	ldr	r2, [sp, #4]
   13788:	ldr	r3, [r5]
   1378c:	cmp	r2, r3
   13790:	bne	13864 <strspn@plt+0x257c>
   13794:	add	sp, sp, #8
   13798:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1379c:	add	r4, r4, #1
   137a0:	mov	r0, r4
   137a4:	mov	r2, #10
   137a8:	mov	r1, sp
   137ac:	bl	10fdc <strtol@plt>
   137b0:	str	r0, [r6]
   137b4:	ldr	r3, [r8]
   137b8:	cmp	r3, #0
   137bc:	bne	137ec <strspn@plt+0x2504>
   137c0:	ldr	r3, [sp]
   137c4:	cmp	r3, #0
   137c8:	beq	137ec <strspn@plt+0x2504>
   137cc:	ldrsb	r2, [r3]
   137d0:	sub	r3, r3, r4
   137d4:	clz	r3, r3
   137d8:	cmp	r2, #0
   137dc:	lsr	r3, r3, #5
   137e0:	movne	r3, #1
   137e4:	cmp	r3, #0
   137e8:	beq	13780 <strspn@plt+0x2498>
   137ec:	mvn	r0, #0
   137f0:	b	13784 <strspn@plt+0x249c>
   137f4:	ldrsb	r3, [r2, #1]
   137f8:	cmp	r3, #0
   137fc:	streq	r9, [r6]
   13800:	beq	13784 <strspn@plt+0x249c>
   13804:	mov	r3, #0
   13808:	add	r4, r2, #1
   1380c:	str	r3, [r8]
   13810:	mov	r1, sl
   13814:	mov	r0, r4
   13818:	mov	r2, #10
   1381c:	str	r3, [sp]
   13820:	bl	10fdc <strtol@plt>
   13824:	str	r0, [r6]
   13828:	ldr	r3, [r8]
   1382c:	cmp	r3, #0
   13830:	bne	137ec <strspn@plt+0x2504>
   13834:	ldr	r2, [sp]
   13838:	cmp	r2, #0
   1383c:	beq	137ec <strspn@plt+0x2504>
   13840:	ldrsb	r3, [r2]
   13844:	sub	r2, r2, r4
   13848:	clz	r2, r2
   1384c:	cmp	r3, #0
   13850:	lsr	r2, r2, #5
   13854:	movne	r2, #1
   13858:	cmp	r2, #0
   1385c:	beq	13780 <strspn@plt+0x2498>
   13860:	b	137ec <strspn@plt+0x2504>
   13864:	bl	11084 <__stack_chk_fail@plt>
   13868:	strdeq	r2, [r1], -r0
   1386c:	andeq	r0, r0, r4, lsr #2
   13870:	ldr	r3, [pc, #244]	; 1396c <strspn@plt+0x2684>
   13874:	ldr	r2, [pc, #244]	; 13970 <strspn@plt+0x2688>
   13878:	add	r3, pc, r3
   1387c:	push	{r4, r5, r6, r7, r8, r9, lr}
   13880:	sub	sp, sp, #20
   13884:	ldr	r9, [r3, r2]
   13888:	cmp	r0, #0
   1388c:	cmpne	r1, #0
   13890:	ldr	r3, [r9]
   13894:	str	r3, [sp, #12]
   13898:	beq	13960 <strspn@plt+0x2678>
   1389c:	mov	r4, r1
   138a0:	add	r8, sp, #4
   138a4:	add	r7, sp, #8
   138a8:	b	138e8 <strspn@plt+0x2600>
   138ac:	cmp	r4, r3
   138b0:	bne	13960 <strspn@plt+0x2678>
   138b4:	mov	r2, r4
   138b8:	mov	r1, r6
   138bc:	mov	r0, r5
   138c0:	bl	112ac <strncmp@plt>
   138c4:	cmp	r0, #0
   138c8:	bne	13960 <strspn@plt+0x2678>
   138cc:	adds	r0, r5, r4
   138d0:	moveq	r3, #0
   138d4:	movne	r3, #1
   138d8:	adds	r4, r6, r4
   138dc:	moveq	r3, #0
   138e0:	cmp	r3, #0
   138e4:	beq	13960 <strspn@plt+0x2678>
   138e8:	mov	r1, r8
   138ec:	bl	11cf0 <strspn@plt+0xa08>
   138f0:	mov	r1, r7
   138f4:	mov	r5, r0
   138f8:	mov	r0, r4
   138fc:	bl	11cf0 <strspn@plt+0xa08>
   13900:	ldr	r4, [sp, #4]
   13904:	ldr	r3, [sp, #8]
   13908:	mov	r6, r0
   1390c:	adds	r0, r4, r3
   13910:	beq	13944 <strspn@plt+0x265c>
   13914:	cmp	r0, #1
   13918:	bne	138ac <strspn@plt+0x25c4>
   1391c:	cmp	r5, #0
   13920:	beq	13930 <strspn@plt+0x2648>
   13924:	ldrsb	r2, [r5]
   13928:	cmp	r2, #47	; 0x2f
   1392c:	beq	13948 <strspn@plt+0x2660>
   13930:	cmp	r6, #0
   13934:	beq	138ac <strspn@plt+0x25c4>
   13938:	ldrsb	r2, [r6]
   1393c:	cmp	r2, #47	; 0x2f
   13940:	bne	138ac <strspn@plt+0x25c4>
   13944:	mov	r0, #1
   13948:	ldr	r2, [sp, #12]
   1394c:	ldr	r3, [r9]
   13950:	cmp	r2, r3
   13954:	bne	13968 <strspn@plt+0x2680>
   13958:	add	sp, sp, #20
   1395c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13960:	mov	r0, #0
   13964:	b	13948 <strspn@plt+0x2660>
   13968:	bl	11084 <__stack_chk_fail@plt>
   1396c:	andeq	r2, r1, r4, asr r6
   13970:	andeq	r0, r0, r4, lsr #2
   13974:	orrs	r3, r0, r1
   13978:	beq	139f4 <strspn@plt+0x270c>
   1397c:	cmp	r0, #0
   13980:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13984:	mov	r4, r1
   13988:	mov	r5, r0
   1398c:	beq	13a00 <strspn@plt+0x2718>
   13990:	cmp	r1, #0
   13994:	beq	13a10 <strspn@plt+0x2728>
   13998:	mov	r6, r2
   1399c:	bl	11150 <strlen@plt>
   139a0:	mvn	r3, r0
   139a4:	cmp	r6, r3
   139a8:	mov	r7, r0
   139ac:	movhi	r8, #0
   139b0:	bhi	139ec <strspn@plt+0x2704>
   139b4:	add	r9, r6, r0
   139b8:	add	r0, r9, #1
   139bc:	bl	110d8 <malloc@plt>
   139c0:	subs	r8, r0, #0
   139c4:	beq	139ec <strspn@plt+0x2704>
   139c8:	mov	r1, r5
   139cc:	mov	r2, r7
   139d0:	bl	11048 <memcpy@plt>
   139d4:	mov	r2, r6
   139d8:	mov	r1, r4
   139dc:	add	r0, r8, r7
   139e0:	bl	11048 <memcpy@plt>
   139e4:	mov	r3, #0
   139e8:	strb	r3, [r8, r9]
   139ec:	mov	r0, r8
   139f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   139f4:	ldr	r0, [pc, #28]	; 13a18 <strspn@plt+0x2730>
   139f8:	add	r0, pc, r0
   139fc:	b	11078 <strdup@plt>
   13a00:	mov	r0, r4
   13a04:	mov	r1, r2
   13a08:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13a0c:	b	11030 <strndup@plt>
   13a10:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13a14:	b	11078 <strdup@plt>
   13a18:	andeq	r1, r0, ip, lsl #16
   13a1c:	push	{r4, r5, r6, lr}
   13a20:	subs	r4, r1, #0
   13a24:	mov	r5, r0
   13a28:	moveq	r2, r4
   13a2c:	beq	13a3c <strspn@plt+0x2754>
   13a30:	mov	r0, r4
   13a34:	bl	11150 <strlen@plt>
   13a38:	mov	r2, r0
   13a3c:	mov	r1, r4
   13a40:	mov	r0, r5
   13a44:	pop	{r4, r5, r6, lr}
   13a48:	b	13974 <strspn@plt+0x268c>
   13a4c:	push	{r1, r2, r3}
   13a50:	ldr	r1, [pc, #132]	; 13adc <strspn@plt+0x27f4>
   13a54:	ldr	r3, [pc, #132]	; 13ae0 <strspn@plt+0x27f8>
   13a58:	add	r1, pc, r1
   13a5c:	push	{r4, r5, lr}
   13a60:	mov	r5, r0
   13a64:	ldr	r4, [r1, r3]
   13a68:	sub	sp, sp, #16
   13a6c:	add	ip, sp, #32
   13a70:	ldr	r0, [r4]
   13a74:	ldr	r2, [sp, #28]
   13a78:	str	r0, [sp, #12]
   13a7c:	mov	r3, ip
   13a80:	add	r0, sp, #8
   13a84:	mov	r1, #1
   13a88:	str	ip, [sp, #4]
   13a8c:	bl	111a4 <__vasprintf_chk@plt>
   13a90:	subs	r2, r0, #0
   13a94:	movlt	r5, #0
   13a98:	blt	13ab4 <strspn@plt+0x27cc>
   13a9c:	mov	r0, r5
   13aa0:	ldr	r1, [sp, #8]
   13aa4:	bl	13974 <strspn@plt+0x268c>
   13aa8:	mov	r5, r0
   13aac:	ldr	r0, [sp, #8]
   13ab0:	bl	11000 <free@plt>
   13ab4:	ldr	r2, [sp, #12]
   13ab8:	ldr	r3, [r4]
   13abc:	mov	r0, r5
   13ac0:	cmp	r2, r3
   13ac4:	bne	13ad8 <strspn@plt+0x27f0>
   13ac8:	add	sp, sp, #16
   13acc:	pop	{r4, r5, lr}
   13ad0:	add	sp, sp, #12
   13ad4:	bx	lr
   13ad8:	bl	11084 <__stack_chk_fail@plt>
   13adc:	andeq	r2, r1, r4, ror r4
   13ae0:	andeq	r0, r0, r4, lsr #2
   13ae4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13ae8:	mov	r6, r0
   13aec:	ldr	r0, [pc, #348]	; 13c50 <strspn@plt+0x2968>
   13af0:	ldr	ip, [pc, #348]	; 13c54 <strspn@plt+0x296c>
   13af4:	add	r0, pc, r0
   13af8:	ldr	r5, [r6]
   13afc:	ldr	r8, [r0, ip]
   13b00:	sub	sp, sp, #8
   13b04:	ldrsb	r4, [r5]
   13b08:	mov	r9, r2
   13b0c:	ldr	r2, [r8]
   13b10:	cmp	r4, #0
   13b14:	mov	r7, r1
   13b18:	str	r2, [sp, #4]
   13b1c:	mov	r1, r0
   13b20:	beq	13bd0 <strspn@plt+0x28e8>
   13b24:	mov	r0, r5
   13b28:	mov	r1, r9
   13b2c:	mov	sl, r3
   13b30:	bl	112e8 <strspn@plt>
   13b34:	add	r4, r5, r0
   13b38:	ldrsb	r5, [r5, r0]
   13b3c:	cmp	r5, #0
   13b40:	beq	13c38 <strspn@plt+0x2950>
   13b44:	cmp	sl, #0
   13b48:	beq	13bec <strspn@plt+0x2904>
   13b4c:	ldr	r0, [pc, #260]	; 13c58 <strspn@plt+0x2970>
   13b50:	mov	r1, r5
   13b54:	add	r0, pc, r0
   13b58:	bl	1115c <strchr@plt>
   13b5c:	cmp	r0, #0
   13b60:	beq	13c08 <strspn@plt+0x2920>
   13b64:	add	sl, r4, #1
   13b68:	mov	r3, #0
   13b6c:	mov	r0, sl
   13b70:	mov	r1, sp
   13b74:	strb	r5, [sp]
   13b78:	strb	r3, [sp, #1]
   13b7c:	bl	11d90 <strspn@plt+0xaa8>
   13b80:	add	r3, r4, r0
   13b84:	str	r0, [r7]
   13b88:	ldrsb	r3, [r3, #1]
   13b8c:	subs	r5, r5, r3
   13b90:	movne	r5, #1
   13b94:	cmp	r3, #0
   13b98:	moveq	r5, #1
   13b9c:	cmp	r5, #0
   13ba0:	bne	13c38 <strspn@plt+0x2950>
   13ba4:	add	r0, r0, #2
   13ba8:	add	r5, r4, r0
   13bac:	ldrsb	r1, [r4, r0]
   13bb0:	cmp	r1, #0
   13bb4:	beq	13bc8 <strspn@plt+0x28e0>
   13bb8:	mov	r0, r9
   13bbc:	bl	1115c <strchr@plt>
   13bc0:	cmp	r0, #0
   13bc4:	beq	13c38 <strspn@plt+0x2950>
   13bc8:	mov	r4, sl
   13bcc:	str	r5, [r6]
   13bd0:	ldr	r2, [sp, #4]
   13bd4:	ldr	r3, [r8]
   13bd8:	mov	r0, r4
   13bdc:	cmp	r2, r3
   13be0:	bne	13c4c <strspn@plt+0x2964>
   13be4:	add	sp, sp, #8
   13be8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13bec:	mov	r1, r9
   13bf0:	mov	r0, r4
   13bf4:	bl	10fe8 <strcspn@plt>
   13bf8:	add	r3, r4, r0
   13bfc:	str	r0, [r7]
   13c00:	str	r3, [r6]
   13c04:	b	13bd0 <strspn@plt+0x28e8>
   13c08:	mov	r1, r9
   13c0c:	mov	r0, r4
   13c10:	bl	11d90 <strspn@plt+0xaa8>
   13c14:	str	r0, [r7]
   13c18:	ldrsb	r1, [r4, r0]
   13c1c:	add	r5, r4, r0
   13c20:	cmp	r1, #0
   13c24:	beq	13c44 <strspn@plt+0x295c>
   13c28:	mov	r0, r9
   13c2c:	bl	1115c <strchr@plt>
   13c30:	cmp	r0, #0
   13c34:	bne	13c44 <strspn@plt+0x295c>
   13c38:	str	r4, [r6]
   13c3c:	mov	r4, #0
   13c40:	b	13bd0 <strspn@plt+0x28e8>
   13c44:	str	r5, [r6]
   13c48:	b	13bd0 <strspn@plt+0x28e8>
   13c4c:	bl	11084 <__stack_chk_fail@plt>
   13c50:	ldrdeq	r2, [r1], -r8
   13c54:	andeq	r0, r0, r4, lsr #2
   13c58:	andeq	r1, r0, ip, lsr #16
   13c5c:	push	{r4, lr}
   13c60:	mov	r4, r0
   13c64:	b	13c70 <strspn@plt+0x2988>
   13c68:	cmp	r0, #10
   13c6c:	beq	13c88 <strspn@plt+0x29a0>
   13c70:	mov	r0, r4
   13c74:	bl	111c8 <fgetc@plt>
   13c78:	cmn	r0, #1
   13c7c:	bne	13c68 <strspn@plt+0x2980>
   13c80:	mov	r0, #1
   13c84:	pop	{r4, pc}
   13c88:	mov	r0, #0
   13c8c:	pop	{r4, pc}
   13c90:	push	{r4, r5, r6, lr}
   13c94:	mov	r6, r1
   13c98:	mov	r5, r2
   13c9c:	mov	r4, r0
   13ca0:	bl	111ec <__sched_cpualloc@plt>
   13ca4:	cmp	r0, #0
   13ca8:	popeq	{r4, r5, r6, pc}
   13cac:	cmp	r6, #0
   13cb0:	addne	r3, r4, #31
   13cb4:	lsrne	r3, r3, #5
   13cb8:	lslne	r3, r3, #2
   13cbc:	strne	r3, [r6]
   13cc0:	cmp	r5, #0
   13cc4:	addne	r4, r4, #31
   13cc8:	bicne	r4, r4, #31
   13ccc:	strne	r4, [r5]
   13cd0:	pop	{r4, r5, r6, pc}
   13cd4:	b	111b0 <__sched_cpufree@plt>
   13cd8:	ldr	r3, [pc, #212]	; 13db4 <strspn@plt+0x2acc>
   13cdc:	ldr	r2, [pc, #212]	; 13db8 <strspn@plt+0x2ad0>
   13ce0:	add	r3, pc, r3
   13ce4:	push	{r4, r5, r6, r7, r8, r9, lr}
   13ce8:	sub	sp, sp, #12
   13cec:	ldr	r9, [r3, r2]
   13cf0:	mov	r7, sp
   13cf4:	mov	r1, r7
   13cf8:	ldr	r3, [r9]
   13cfc:	mov	r2, #0
   13d00:	mov	r0, #2048	; 0x800
   13d04:	str	r3, [sp, #4]
   13d08:	bl	13c90 <strspn@plt+0x29a8>
   13d0c:	subs	r4, r0, #0
   13d10:	movne	r5, #2048	; 0x800
   13d14:	ldrne	r8, [pc, #160]	; 13dbc <strspn@plt+0x2ad4>
   13d18:	bne	13d44 <strspn@plt+0x2a5c>
   13d1c:	b	13da8 <strspn@plt+0x2ac0>
   13d20:	mov	r0, r4
   13d24:	lsl	r5, r5, #1
   13d28:	bl	13cd4 <strspn@plt+0x29ec>
   13d2c:	mov	r0, r5
   13d30:	mov	r2, #0
   13d34:	mov	r1, r7
   13d38:	bl	13c90 <strspn@plt+0x29a8>
   13d3c:	subs	r4, r0, #0
   13d40:	beq	13da8 <strspn@plt+0x2ac0>
   13d44:	ldr	r2, [sp]
   13d48:	mov	r1, #0
   13d4c:	mov	r0, r4
   13d50:	bl	111bc <memset@plt>
   13d54:	mov	r3, r4
   13d58:	ldr	r2, [sp]
   13d5c:	mov	r1, #0
   13d60:	mov	r0, #242	; 0xf2
   13d64:	bl	11138 <syscall@plt>
   13d68:	subs	r6, r0, #0
   13d6c:	bge	13d84 <strspn@plt+0x2a9c>
   13d70:	bl	11180 <__errno_location@plt>
   13d74:	ldr	r3, [r0]
   13d78:	cmp	r5, r8
   13d7c:	cmple	r3, #22
   13d80:	beq	13d20 <strspn@plt+0x2a38>
   13d84:	mov	r0, r4
   13d88:	bl	13cd4 <strspn@plt+0x29ec>
   13d8c:	lsl	r0, r6, #3
   13d90:	ldr	r2, [sp, #4]
   13d94:	ldr	r3, [r9]
   13d98:	cmp	r2, r3
   13d9c:	bne	13db0 <strspn@plt+0x2ac8>
   13da0:	add	sp, sp, #12
   13da4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13da8:	mvn	r0, #0
   13dac:	b	13d90 <strspn@plt+0x2aa8>
   13db0:	bl	11084 <__stack_chk_fail@plt>
   13db4:	andeq	r2, r1, ip, ror #3
   13db8:	andeq	r0, r0, r4, lsr #2
   13dbc:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   13dc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13dc4:	lsls	r7, r3, #3
   13dc8:	sub	sp, sp, #28
   13dcc:	mov	sl, r0
   13dd0:	beq	13f6c <strspn@plt+0x2c84>
   13dd4:	mov	r5, r3
   13dd8:	ldr	r3, [pc, #404]	; 13f74 <strspn@plt+0x2c8c>
   13ddc:	ldr	fp, [pc, #404]	; 13f78 <strspn@plt+0x2c90>
   13de0:	add	r3, pc, r3
   13de4:	str	r3, [sp, #16]
   13de8:	ldr	r3, [pc, #396]	; 13f7c <strspn@plt+0x2c94>
   13dec:	mov	r9, r1
   13df0:	add	r3, pc, r3
   13df4:	mov	r1, #0
   13df8:	mov	r6, r2
   13dfc:	add	fp, pc, fp
   13e00:	str	r3, [sp, #20]
   13e04:	mov	ip, r1
   13e08:	mov	r8, r0
   13e0c:	b	13e1c <strspn@plt+0x2b34>
   13e10:	cmp	r7, r4
   13e14:	mov	ip, r4
   13e18:	bls	13ef8 <strspn@plt+0x2c10>
   13e1c:	cmp	r5, ip, lsr #3
   13e20:	add	r4, ip, #1
   13e24:	bls	13e10 <strspn@plt+0x2b28>
   13e28:	lsr	r2, ip, #5
   13e2c:	and	r3, ip, #31
   13e30:	ldr	r2, [r6, r2, lsl #2]
   13e34:	lsr	r3, r2, r3
   13e38:	tst	r3, #1
   13e3c:	beq	13e10 <strspn@plt+0x2b28>
   13e40:	cmp	r7, r4
   13e44:	bls	13f10 <strspn@plt+0x2c28>
   13e48:	cmp	r5, r4, lsr #3
   13e4c:	bls	13f10 <strspn@plt+0x2c28>
   13e50:	lsr	r2, r4, #5
   13e54:	and	r3, r4, #31
   13e58:	ldr	r2, [r6, r2, lsl #2]
   13e5c:	lsr	r3, r2, r3
   13e60:	tst	r3, #1
   13e64:	beq	13f10 <strspn@plt+0x2c28>
   13e68:	sub	r0, r7, #1
   13e6c:	sub	r0, r0, ip
   13e70:	mov	r2, #1
   13e74:	b	13e98 <strspn@plt+0x2bb0>
   13e78:	cmp	r5, r3, lsr #3
   13e7c:	bls	13eac <strspn@plt+0x2bc4>
   13e80:	ldr	r3, [r6, lr, lsl #2]
   13e84:	add	lr, r2, #1
   13e88:	lsr	r3, r3, r1
   13e8c:	tst	r3, #1
   13e90:	beq	13eac <strspn@plt+0x2bc4>
   13e94:	mov	r2, lr
   13e98:	add	r3, r2, r4
   13e9c:	cmp	r0, r2
   13ea0:	and	r1, r3, #31
   13ea4:	lsr	lr, r3, #5
   13ea8:	bne	13e78 <strspn@plt+0x2b90>
   13eac:	cmp	r2, #1
   13eb0:	beq	13f48 <strspn@plt+0x2c60>
   13eb4:	add	r4, ip, r2
   13eb8:	str	r4, [sp, #8]
   13ebc:	stm	sp, {fp, ip}
   13ec0:	mvn	r3, #0
   13ec4:	mov	r2, #1
   13ec8:	mov	r1, r9
   13ecc:	mov	r0, r8
   13ed0:	bl	112dc <__snprintf_chk@plt>
   13ed4:	cmp	r0, r9
   13ed8:	bcs	13f3c <strspn@plt+0x2c54>
   13edc:	add	r4, r4, #1
   13ee0:	cmp	r7, r4
   13ee4:	add	r8, r8, r0
   13ee8:	sub	r9, r9, r0
   13eec:	mov	r1, #1
   13ef0:	mov	ip, r4
   13ef4:	bhi	13e1c <strspn@plt+0x2b34>
   13ef8:	sub	r8, r8, r1
   13efc:	mov	r3, #0
   13f00:	mov	r0, sl
   13f04:	strb	r3, [r8]
   13f08:	add	sp, sp, #28
   13f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f10:	ldr	r3, [sp, #16]
   13f14:	str	ip, [sp, #4]
   13f18:	str	r3, [sp]
   13f1c:	mov	r2, #1
   13f20:	mvn	r3, #0
   13f24:	mov	r1, r9
   13f28:	mov	r0, r8
   13f2c:	mov	r4, ip
   13f30:	bl	112dc <__snprintf_chk@plt>
   13f34:	cmp	r0, r9
   13f38:	bcc	13edc <strspn@plt+0x2bf4>
   13f3c:	mov	r0, #0
   13f40:	add	sp, sp, #28
   13f44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f48:	ldr	r3, [sp, #20]
   13f4c:	str	r4, [sp, #8]
   13f50:	str	r3, [sp]
   13f54:	str	ip, [sp, #4]
   13f58:	mvn	r3, #0
   13f5c:	mov	r1, r9
   13f60:	mov	r0, r8
   13f64:	bl	112dc <__snprintf_chk@plt>
   13f68:	b	13ed4 <strspn@plt+0x2bec>
   13f6c:	mov	r8, r0
   13f70:	b	13efc <strspn@plt+0x2c14>
   13f74:	andeq	r1, r0, r8, lsr #11
   13f78:	muleq	r0, r4, r5
   13f7c:	muleq	r0, r4, r5
   13f80:	lsl	ip, r3, #3
   13f84:	subs	ip, ip, #4
   13f88:	push	{r4, r5, r6, r7, r8, lr}
   13f8c:	mov	r7, r0
   13f90:	mov	r6, r0
   13f94:	bmi	140b0 <strspn@plt+0x2dc8>
   13f98:	cmp	r1, #0
   13f9c:	beq	140b0 <strspn@plt+0x2dc8>
   13fa0:	mov	r0, #0
   13fa4:	b	13ffc <strspn@plt+0x2d14>
   13fa8:	lsr	r8, r5, #5
   13fac:	and	r5, r5, #31
   13fb0:	ldr	r8, [r2, r8, lsl #2]
   13fb4:	lsr	r5, r8, r5
   13fb8:	tst	r5, #1
   13fbc:	beq	14074 <strspn@plt+0x2d8c>
   13fc0:	orr	r4, lr, #8
   13fc4:	cmp	r0, #0
   13fc8:	moveq	r0, r6
   13fcc:	cmp	r4, #9
   13fd0:	mov	lr, r4
   13fd4:	addgt	lr, r4, #87	; 0x57
   13fd8:	ble	14084 <strspn@plt+0x2d9c>
   13fdc:	mov	r4, r6
   13fe0:	subs	ip, ip, #4
   13fe4:	strb	lr, [r4], #1
   13fe8:	bmi	14098 <strspn@plt+0x2db0>
   13fec:	sub	lr, r4, r7
   13ff0:	cmp	lr, r1
   13ff4:	beq	14098 <strspn@plt+0x2db0>
   13ff8:	mov	r6, r4
   13ffc:	cmp	r3, ip, lsr #3
   14000:	lsrhi	r4, ip, #5
   14004:	andhi	lr, ip, #31
   14008:	ldrhi	r4, [r2, r4, lsl #2]
   1400c:	movls	lr, #0
   14010:	lsrhi	lr, r4, lr
   14014:	add	r4, ip, #1
   14018:	andhi	lr, lr, #1
   1401c:	cmp	r3, r4, lsr #3
   14020:	bls	1403c <strspn@plt+0x2d54>
   14024:	lsr	r5, r4, #5
   14028:	and	r4, r4, #31
   1402c:	ldr	r5, [r2, r5, lsl #2]
   14030:	lsr	r4, r5, r4
   14034:	tst	r4, #1
   14038:	orrne	lr, lr, #2
   1403c:	add	r4, ip, #2
   14040:	cmp	r3, r4, lsr #3
   14044:	bls	14060 <strspn@plt+0x2d78>
   14048:	lsr	r5, r4, #5
   1404c:	and	r4, r4, #31
   14050:	ldr	r5, [r2, r5, lsl #2]
   14054:	lsr	r4, r5, r4
   14058:	tst	r4, #1
   1405c:	orrne	lr, lr, #4
   14060:	add	r5, ip, #3
   14064:	clz	r4, r0
   14068:	cmp	r3, r5, lsr #3
   1406c:	lsr	r4, r4, #5
   14070:	bhi	13fa8 <strspn@plt+0x2cc0>
   14074:	cmp	lr, #0
   14078:	moveq	r4, #0
   1407c:	cmp	r4, #0
   14080:	movne	r0, r6
   14084:	mov	r4, r6
   14088:	add	lr, lr, #48	; 0x30
   1408c:	subs	ip, ip, #4
   14090:	strb	lr, [r4], #1
   14094:	bpl	13fec <strspn@plt+0x2d04>
   14098:	cmp	r0, #0
   1409c:	mov	r3, #0
   140a0:	strb	r3, [r4]
   140a4:	popne	{r4, r5, r6, r7, r8, pc}
   140a8:	mov	r0, r6
   140ac:	pop	{r4, r5, r6, r7, r8, pc}
   140b0:	mov	r3, #0
   140b4:	strb	r3, [r6], #-1
   140b8:	mov	r0, r6
   140bc:	pop	{r4, r5, r6, r7, r8, pc}
   140c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   140c4:	mov	r7, r0
   140c8:	mov	r6, r1
   140cc:	mov	r9, r2
   140d0:	bl	11150 <strlen@plt>
   140d4:	cmp	r0, #1
   140d8:	sub	r0, r0, #1
   140dc:	add	r4, r7, r0
   140e0:	bls	140f0 <strspn@plt+0x2e08>
   140e4:	ldrb	r3, [r7]
   140e8:	cmp	r3, #48	; 0x30
   140ec:	beq	14200 <strspn@plt+0x2f18>
   140f0:	mov	r2, r9
   140f4:	mov	r1, #0
   140f8:	mov	r0, r6
   140fc:	bl	111bc <memset@plt>
   14100:	cmp	r7, r4
   14104:	movls	r5, #0
   14108:	movls	r8, #1
   1410c:	bls	141bc <strspn@plt+0x2ed4>
   14110:	b	141f8 <strspn@plt+0x2f10>
   14114:	sxtb	r0, r3
   14118:	cmn	r0, #1
   1411c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14120:	tst	r3, #1
   14124:	beq	14140 <strspn@plt+0x2e58>
   14128:	cmp	r9, r5, lsr #3
   1412c:	lsrhi	r0, r5, #5
   14130:	andhi	r2, r5, #31
   14134:	ldrhi	r1, [r6, r0, lsl #2]
   14138:	orrhi	r2, r1, r8, lsl r2
   1413c:	strhi	r2, [r6, r0, lsl #2]
   14140:	tst	r3, #2
   14144:	beq	14164 <strspn@plt+0x2e7c>
   14148:	add	r2, r5, #1
   1414c:	cmp	r9, r2, lsr #3
   14150:	lsrhi	r0, r2, #5
   14154:	andhi	r2, r2, #31
   14158:	ldrhi	r1, [r6, r0, lsl #2]
   1415c:	orrhi	r2, r1, r8, lsl r2
   14160:	strhi	r2, [r6, r0, lsl #2]
   14164:	tst	r3, #4
   14168:	beq	14188 <strspn@plt+0x2ea0>
   1416c:	add	r2, r5, #2
   14170:	cmp	r9, r2, lsr #3
   14174:	lsrhi	r0, r2, #5
   14178:	andhi	r2, r2, #31
   1417c:	ldrhi	r1, [r6, r0, lsl #2]
   14180:	orrhi	r2, r1, r8, lsl r2
   14184:	strhi	r2, [r6, r0, lsl #2]
   14188:	tst	r3, #8
   1418c:	beq	141ac <strspn@plt+0x2ec4>
   14190:	add	r3, r5, #3
   14194:	cmp	r9, r3, lsr #3
   14198:	lsrhi	r1, r3, #5
   1419c:	andhi	r3, r3, #31
   141a0:	ldrhi	r2, [r6, r1, lsl #2]
   141a4:	orrhi	r3, r2, r8, lsl r3
   141a8:	strhi	r3, [r6, r1, lsl #2]
   141ac:	sub	r4, r4, #1
   141b0:	cmp	r7, r4
   141b4:	add	r5, r5, #4
   141b8:	bhi	141f8 <strspn@plt+0x2f10>
   141bc:	ldrsb	sl, [r4]
   141c0:	cmp	sl, #44	; 0x2c
   141c4:	ldrsbeq	sl, [r4, #-1]
   141c8:	subeq	r4, r4, #1
   141cc:	sub	r3, sl, #48	; 0x30
   141d0:	cmp	r3, #9
   141d4:	bls	14114 <strspn@plt+0x2e2c>
   141d8:	bl	110f0 <__ctype_tolower_loc@plt>
   141dc:	ldr	r3, [r0]
   141e0:	ldr	r3, [r3, sl, lsl #2]
   141e4:	sub	r2, r3, #97	; 0x61
   141e8:	cmp	r2, #5
   141ec:	bhi	14210 <strspn@plt+0x2f28>
   141f0:	sub	r3, r3, #87	; 0x57
   141f4:	b	14120 <strspn@plt+0x2e38>
   141f8:	mov	r0, #0
   141fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14200:	ldrb	r3, [r7, #1]
   14204:	cmp	r3, #120	; 0x78
   14208:	addeq	r7, r7, #2
   1420c:	b	140f0 <strspn@plt+0x2e08>
   14210:	mvn	r0, #0
   14214:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14218:	ldr	ip, [pc, #584]	; 14468 <strspn@plt+0x3180>
   1421c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14220:	add	ip, pc, ip
   14224:	ldr	lr, [pc, #576]	; 1446c <strspn@plt+0x3184>
   14228:	mov	r6, r1
   1422c:	sub	sp, sp, #52	; 0x34
   14230:	ldr	r1, [ip, lr]
   14234:	mov	sl, r0
   14238:	mov	lr, r1
   1423c:	str	r1, [sp, #16]
   14240:	ldr	lr, [lr]
   14244:	mov	r1, #0
   14248:	mov	r0, r6
   1424c:	str	r3, [sp, #8]
   14250:	mov	r4, r2
   14254:	str	lr, [sp, #44]	; 0x2c
   14258:	lsl	r5, r2, #3
   1425c:	bl	111bc <memset@plt>
   14260:	mov	r3, #0
   14264:	str	r3, [sp]
   14268:	ldr	r3, [pc, #512]	; 14470 <strspn@plt+0x3188>
   1426c:	cmp	sl, #0
   14270:	add	r3, pc, r3
   14274:	str	r3, [sp, #4]
   14278:	ldr	r3, [pc, #500]	; 14474 <strspn@plt+0x318c>
   1427c:	add	r3, pc, r3
   14280:	str	r3, [sp, #20]
   14284:	beq	14398 <strspn@plt+0x30b0>
   14288:	mov	r1, #44	; 0x2c
   1428c:	mov	r0, sl
   14290:	bl	1115c <strchr@plt>
   14294:	subs	r9, r0, #0
   14298:	addne	r9, r9, #1
   1429c:	add	r3, sp, #31
   142a0:	add	r2, sp, #32
   142a4:	ldr	r1, [sp, #4]
   142a8:	mov	r0, sl
   142ac:	str	r3, [sp, #12]
   142b0:	bl	1124c <sscanf@plt>
   142b4:	subs	r3, r0, #0
   142b8:	str	r3, [sp]
   142bc:	ble	14430 <strspn@plt+0x3148>
   142c0:	ldr	fp, [sp, #32]
   142c4:	mov	r7, #1
   142c8:	mov	r1, #45	; 0x2d
   142cc:	mov	r0, sl
   142d0:	str	fp, [sp, #36]	; 0x24
   142d4:	str	r7, [sp, #40]	; 0x28
   142d8:	bl	1115c <strchr@plt>
   142dc:	subs	r8, r0, #0
   142e0:	beq	14324 <strspn@plt+0x303c>
   142e4:	mov	r0, sl
   142e8:	mov	r1, #44	; 0x2c
   142ec:	bl	1115c <strchr@plt>
   142f0:	add	r8, r8, r7
   142f4:	subs	sl, r0, #0
   142f8:	beq	143cc <strspn@plt+0x30e4>
   142fc:	cmp	r8, #0
   14300:	add	sl, sl, r7
   14304:	beq	14324 <strspn@plt+0x303c>
   14308:	clz	r7, sl
   1430c:	lsr	r7, r7, #5
   14310:	cmp	sl, r8
   14314:	movls	r2, r7
   14318:	orrhi	r2, r7, #1
   1431c:	cmp	r2, #0
   14320:	bne	143d4 <strspn@plt+0x30ec>
   14324:	mov	lr, fp
   14328:	ldr	r3, [sp, #8]
   1432c:	adds	ip, r3, #0
   14330:	movne	ip, #1
   14334:	cmp	r5, fp
   14338:	movhi	r2, #0
   1433c:	andls	r2, ip, #1
   14340:	cmp	r2, #0
   14344:	bne	143ac <strspn@plt+0x30c4>
   14348:	ldr	r7, [sp, #40]	; 0x28
   1434c:	mov	r8, #1
   14350:	b	14368 <strspn@plt+0x3080>
   14354:	cmp	fp, r5
   14358:	movcc	r3, #0
   1435c:	andcs	r3, ip, #1
   14360:	cmp	r3, #0
   14364:	bne	143ac <strspn@plt+0x30c4>
   14368:	cmp	r4, fp, lsr #3
   1436c:	lsrhi	r1, fp, #5
   14370:	andhi	r3, fp, #31
   14374:	ldrhi	r2, [r6, r1, lsl #2]
   14378:	add	fp, fp, r7
   1437c:	orrhi	r3, r2, r8, lsl r3
   14380:	strhi	r3, [r6, r1, lsl #2]
   14384:	cmp	fp, lr
   14388:	bls	14354 <strspn@plt+0x306c>
   1438c:	mov	sl, r9
   14390:	cmp	sl, #0
   14394:	bne	14288 <strspn@plt+0x2fa0>
   14398:	ldr	r3, [sp]
   1439c:	sub	r0, r3, #2
   143a0:	clz	r0, r0
   143a4:	lsr	r0, r0, #5
   143a8:	b	143b0 <strspn@plt+0x30c8>
   143ac:	mov	r0, #2
   143b0:	ldr	r3, [sp, #16]
   143b4:	ldr	r2, [sp, #44]	; 0x2c
   143b8:	ldr	r3, [r3]
   143bc:	cmp	r2, r3
   143c0:	bne	14464 <strspn@plt+0x317c>
   143c4:	add	sp, sp, #52	; 0x34
   143c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143cc:	cmp	r8, #0
   143d0:	beq	14324 <strspn@plt+0x303c>
   143d4:	ldr	r3, [sp, #12]
   143d8:	add	r2, sp, #36	; 0x24
   143dc:	ldr	r1, [sp, #20]
   143e0:	mov	r0, r8
   143e4:	bl	1124c <sscanf@plt>
   143e8:	subs	r3, r0, #0
   143ec:	str	r3, [sp]
   143f0:	ble	14430 <strspn@plt+0x3148>
   143f4:	mov	r0, r8
   143f8:	mov	r1, #58	; 0x3a
   143fc:	bl	1115c <strchr@plt>
   14400:	cmp	r0, #0
   14404:	beq	14420 <strspn@plt+0x3138>
   14408:	adds	r0, r0, #1
   1440c:	beq	14420 <strspn@plt+0x3138>
   14410:	cmp	r0, sl
   14414:	orrcc	r7, r7, #1
   14418:	cmp	r7, #0
   1441c:	bne	14438 <strspn@plt+0x3150>
   14420:	ldr	fp, [sp, #32]
   14424:	ldr	lr, [sp, #36]	; 0x24
   14428:	cmp	fp, lr
   1442c:	bls	14328 <strspn@plt+0x3040>
   14430:	mov	r0, #1
   14434:	b	143b0 <strspn@plt+0x30c8>
   14438:	ldr	r3, [sp, #12]
   1443c:	add	r2, sp, #40	; 0x28
   14440:	ldr	r1, [sp, #20]
   14444:	bl	1124c <sscanf@plt>
   14448:	subs	r3, r0, #0
   1444c:	str	r3, [sp]
   14450:	ble	14430 <strspn@plt+0x3148>
   14454:	ldr	r3, [sp, #40]	; 0x28
   14458:	cmp	r3, #0
   1445c:	bne	14420 <strspn@plt+0x3138>
   14460:	b	14430 <strspn@plt+0x3148>
   14464:	bl	11084 <__stack_chk_fail@plt>
   14468:	andeq	r1, r1, ip, lsr #25
   1446c:	andeq	r0, r0, r4, lsr #2
   14470:	andeq	r1, r0, r0, lsr r1
   14474:	andeq	r1, r0, r4, lsr #2
   14478:	ldr	r2, [pc, #400]	; 14610 <strspn@plt+0x3328>
   1447c:	ldr	r3, [pc, #400]	; 14614 <strspn@plt+0x332c>
   14480:	add	r2, pc, r2
   14484:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14488:	sub	sp, sp, #8192	; 0x2000
   1448c:	ldr	r3, [r2, r3]
   14490:	ldr	ip, [pc, #384]	; 14618 <strspn@plt+0x3330>
   14494:	sub	sp, sp, #44	; 0x2c
   14498:	mov	lr, r3
   1449c:	add	ip, pc, ip
   144a0:	str	r1, [sp, #8]
   144a4:	ldr	lr, [lr]
   144a8:	str	ip, [sp]
   144ac:	add	ip, sp, #8192	; 0x2000
   144b0:	add	ip, ip, #36	; 0x24
   144b4:	add	r7, sp, #40	; 0x28
   144b8:	sub	r6, r7, #4
   144bc:	str	r3, [sp, #16]
   144c0:	mov	r3, #8192	; 0x2000
   144c4:	str	r0, [sp, #4]
   144c8:	mov	r1, r3
   144cc:	str	lr, [ip]
   144d0:	mov	r0, r6
   144d4:	mov	r2, #1
   144d8:	bl	112dc <__snprintf_chk@plt>
   144dc:	mov	r0, r6
   144e0:	mov	r1, #0
   144e4:	bl	110cc <open64@plt>
   144e8:	subs	r8, r0, #0
   144ec:	movlt	r7, #0
   144f0:	blt	145c0 <strspn@plt+0x32d8>
   144f4:	mov	r1, #0
   144f8:	mov	sl, r1
   144fc:	mov	r2, #8192	; 0x2000
   14500:	mov	r0, r6
   14504:	mov	r9, sl
   14508:	mov	fp, sl
   1450c:	mov	r4, #8192	; 0x2000
   14510:	mov	r5, r6
   14514:	bl	111bc <memset@plt>
   14518:	sub	r3, r7, #12
   1451c:	str	r3, [sp, #20]
   14520:	mov	r2, r4
   14524:	mov	r1, r5
   14528:	mov	r0, r8
   1452c:	bl	10ff4 <read@plt>
   14530:	cmp	r0, #0
   14534:	ble	14550 <strspn@plt+0x3268>
   14538:	subs	r4, r4, r0
   1453c:	add	r5, r5, r0
   14540:	add	sl, sl, r0
   14544:	beq	1457c <strspn@plt+0x3294>
   14548:	mov	r9, #0
   1454c:	b	14520 <strspn@plt+0x3238>
   14550:	beq	14570 <strspn@plt+0x3288>
   14554:	bl	11180 <__errno_location@plt>
   14558:	ldr	r3, [r0]
   1455c:	cmp	r3, #4
   14560:	cmpne	r3, #11
   14564:	bne	14570 <strspn@plt+0x3288>
   14568:	cmp	r9, #4
   1456c:	ble	145ec <strspn@plt+0x3304>
   14570:	cmp	sl, #0
   14574:	moveq	r7, sl
   14578:	beq	145b8 <strspn@plt+0x32d0>
   1457c:	mov	r1, r6
   14580:	mov	r2, #0
   14584:	mov	ip, #32
   14588:	ldrsb	r3, [r1], #1
   1458c:	add	r2, r2, #1
   14590:	cmp	r3, #0
   14594:	strbeq	ip, [r1, #-1]
   14598:	cmp	r2, sl
   1459c:	bcc	14588 <strspn@plt+0x32a0>
   145a0:	add	r7, r7, sl
   145a4:	mov	r3, #0
   145a8:	mov	r0, r6
   145ac:	strb	r3, [r7, #-5]
   145b0:	bl	11078 <strdup@plt>
   145b4:	mov	r7, r0
   145b8:	mov	r0, r8
   145bc:	bl	112c4 <close@plt>
   145c0:	add	r3, sp, #8192	; 0x2000
   145c4:	add	r3, r3, #36	; 0x24
   145c8:	ldr	r2, [r3]
   145cc:	ldr	r3, [sp, #16]
   145d0:	mov	r0, r7
   145d4:	ldr	r3, [r3]
   145d8:	cmp	r2, r3
   145dc:	bne	1460c <strspn@plt+0x3324>
   145e0:	add	sp, sp, #8192	; 0x2000
   145e4:	add	sp, sp, #44	; 0x2c
   145e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145ec:	ldr	r3, [pc, #40]	; 1461c <strspn@plt+0x3334>
   145f0:	mov	r1, #0
   145f4:	ldr	r0, [sp, #20]
   145f8:	add	r9, r9, #1
   145fc:	str	fp, [r7, #-12]
   14600:	str	r3, [r7, #-8]
   14604:	bl	11018 <nanosleep@plt>
   14608:	b	14520 <strspn@plt+0x3238>
   1460c:	bl	11084 <__stack_chk_fail@plt>
   14610:	andeq	r1, r1, ip, asr #20
   14614:	andeq	r0, r0, r4, lsr #2
   14618:	andeq	r0, r0, ip, lsl #30
   1461c:	cdpeq	2, 14, cr11, cr6, cr0, {4}
   14620:	ldr	r1, [pc, #164]	; 146cc <strspn@plt+0x33e4>
   14624:	ldr	r2, [pc, #164]	; 146d0 <strspn@plt+0x33e8>
   14628:	add	r1, pc, r1
   1462c:	push	{r4, r5, r6, lr}
   14630:	sub	sp, sp, #4096	; 0x1000
   14634:	ldr	r5, [r1, r2]
   14638:	sub	sp, sp, #16
   1463c:	add	lr, sp, #4096	; 0x1000
   14640:	str	r0, [sp]
   14644:	add	lr, lr, #12
   14648:	ldr	ip, [r5]
   1464c:	ldr	r3, [pc, #128]	; 146d4 <strspn@plt+0x33ec>
   14650:	add	r6, sp, #12
   14654:	add	r3, pc, r3
   14658:	mov	r2, #4096	; 0x1000
   1465c:	str	ip, [lr]
   14660:	mov	r0, r6
   14664:	mov	r1, #1
   14668:	bl	1118c <__sprintf_chk@plt>
   1466c:	mov	r0, #4
   14670:	bl	110d8 <malloc@plt>
   14674:	subs	r4, r0, #0
   14678:	beq	146b8 <strspn@plt+0x33d0>
   1467c:	mov	r0, r6
   14680:	bl	110c0 <opendir@plt>
   14684:	cmp	r0, #0
   14688:	str	r0, [r4]
   1468c:	beq	146b8 <strspn@plt+0x33d0>
   14690:	add	r3, sp, #4096	; 0x1000
   14694:	add	r3, r3, #12
   14698:	ldr	r2, [r3]
   1469c:	ldr	r3, [r5]
   146a0:	mov	r0, r4
   146a4:	cmp	r2, r3
   146a8:	bne	146c8 <strspn@plt+0x33e0>
   146ac:	add	sp, sp, #4096	; 0x1000
   146b0:	add	sp, sp, #16
   146b4:	pop	{r4, r5, r6, pc}
   146b8:	mov	r0, r4
   146bc:	bl	11000 <free@plt>
   146c0:	mov	r4, #0
   146c4:	b	14690 <strspn@plt+0x33a8>
   146c8:	bl	11084 <__stack_chk_fail@plt>
   146cc:	andeq	r1, r1, r4, lsr #17
   146d0:	andeq	r0, r0, r4, lsr #2
   146d4:	andeq	r0, r0, r0, ror #26
   146d8:	push	{r4, lr}
   146dc:	subs	r4, r0, #0
   146e0:	beq	146f4 <strspn@plt+0x340c>
   146e4:	ldr	r0, [r4]
   146e8:	cmp	r0, #0
   146ec:	beq	146f4 <strspn@plt+0x340c>
   146f0:	bl	112d0 <closedir@plt>
   146f4:	mov	r0, r4
   146f8:	pop	{r4, lr}
   146fc:	b	11000 <free@plt>
   14700:	ldr	r3, [pc, #280]	; 14820 <strspn@plt+0x3538>
   14704:	ldr	r2, [pc, #280]	; 14824 <strspn@plt+0x353c>
   14708:	add	r3, pc, r3
   1470c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14710:	cmp	r0, #0
   14714:	ldr	r9, [r3, r2]
   14718:	sub	sp, sp, #8
   1471c:	clz	sl, r1
   14720:	ldr	r2, [r9]
   14724:	lsr	sl, sl, #5
   14728:	moveq	sl, #1
   1472c:	cmp	sl, #0
   14730:	str	r2, [sp, #4]
   14734:	bne	14814 <strspn@plt+0x352c>
   14738:	str	sl, [r1]
   1473c:	mov	r6, r0
   14740:	mov	r5, r1
   14744:	bl	11180 <__errno_location@plt>
   14748:	mov	r8, sl
   1474c:	mov	r7, sp
   14750:	mov	r4, r0
   14754:	str	sl, [r0]
   14758:	b	14768 <strspn@plt+0x3480>
   1475c:	ldr	r0, [r5]
   14760:	cmp	r0, #0
   14764:	bne	1480c <strspn@plt+0x3524>
   14768:	ldr	r0, [r6]
   1476c:	bl	11264 <readdir64@plt>
   14770:	subs	sl, r0, #0
   14774:	beq	147f8 <strspn@plt+0x3510>
   14778:	bl	11114 <__ctype_b_loc@plt>
   1477c:	ldrb	r3, [sl, #19]
   14780:	lsl	r3, r3, #1
   14784:	ldr	r2, [r0]
   14788:	ldrh	r3, [r2, r3]
   1478c:	tst	r3, #2048	; 0x800
   14790:	beq	1475c <strspn@plt+0x3474>
   14794:	add	sl, sl, #19
   14798:	str	r8, [r4]
   1479c:	mov	r0, sl
   147a0:	mov	r2, #10
   147a4:	mov	r1, r7
   147a8:	bl	10fdc <strtol@plt>
   147ac:	str	r0, [r5]
   147b0:	ldr	r3, [r4]
   147b4:	cmp	r3, #0
   147b8:	bne	147dc <strspn@plt+0x34f4>
   147bc:	ldr	r3, [sp]
   147c0:	cmp	sl, r3
   147c4:	beq	147dc <strspn@plt+0x34f4>
   147c8:	cmp	r3, #0
   147cc:	beq	14760 <strspn@plt+0x3478>
   147d0:	ldrsb	r3, [r3]
   147d4:	cmp	r3, #0
   147d8:	beq	14760 <strspn@plt+0x3478>
   147dc:	mvn	r0, #0
   147e0:	ldr	r2, [sp, #4]
   147e4:	ldr	r3, [r9]
   147e8:	cmp	r2, r3
   147ec:	bne	1481c <strspn@plt+0x3534>
   147f0:	add	sp, sp, #8
   147f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   147f8:	ldr	r3, [r4]
   147fc:	cmp	r3, #0
   14800:	moveq	r0, #1
   14804:	beq	147e0 <strspn@plt+0x34f8>
   14808:	b	147dc <strspn@plt+0x34f4>
   1480c:	mov	r0, #0
   14810:	b	147e0 <strspn@plt+0x34f8>
   14814:	mvn	r0, #21
   14818:	b	147e0 <strspn@plt+0x34f8>
   1481c:	bl	11084 <__stack_chk_fail@plt>
   14820:	andeq	r1, r1, r4, asr #15
   14824:	andeq	r0, r0, r4, lsr #2
   14828:	ldr	r1, [pc, #4]	; 14834 <strspn@plt+0x354c>
   1482c:	add	r1, pc, r1
   14830:	b	14478 <strspn@plt+0x3190>
   14834:	muleq	r0, r8, fp
   14838:	ldr	r1, [pc, #4]	; 14844 <strspn@plt+0x355c>
   1483c:	add	r1, pc, r1
   14840:	b	14478 <strspn@plt+0x3190>
   14844:	muleq	r0, r0, fp
   14848:	push	{r4, lr}
   1484c:	mov	r1, #16
   14850:	mov	r0, #1
   14854:	bl	10fb8 <calloc@plt>
   14858:	subs	r4, r0, #0
   1485c:	beq	14880 <strspn@plt+0x3598>
   14860:	ldr	r0, [pc, #44]	; 14894 <strspn@plt+0x35ac>
   14864:	add	r0, pc, r0
   14868:	bl	110c0 <opendir@plt>
   1486c:	cmp	r0, #0
   14870:	str	r0, [r4]
   14874:	beq	14880 <strspn@plt+0x3598>
   14878:	mov	r0, r4
   1487c:	pop	{r4, pc}
   14880:	mov	r0, r4
   14884:	mov	r4, #0
   14888:	bl	11000 <free@plt>
   1488c:	mov	r0, r4
   14890:	pop	{r4, pc}
   14894:	andeq	r0, r0, r0, ror fp
   14898:	push	{r4, lr}
   1489c:	subs	r4, r0, #0
   148a0:	beq	148b4 <strspn@plt+0x35cc>
   148a4:	ldr	r0, [r4]
   148a8:	cmp	r0, #0
   148ac:	beq	148b4 <strspn@plt+0x35cc>
   148b0:	bl	112d0 <closedir@plt>
   148b4:	mov	r0, r4
   148b8:	pop	{r4, lr}
   148bc:	b	11000 <free@plt>
   148c0:	ldrb	r3, [r0, #12]
   148c4:	str	r1, [r0, #4]
   148c8:	bic	r3, r3, #1
   148cc:	cmp	r1, #0
   148d0:	orrne	r3, r3, #1
   148d4:	strb	r3, [r0, #12]
   148d8:	bx	lr
   148dc:	ldrb	r3, [r0, #12]
   148e0:	str	r1, [r0, #8]
   148e4:	orr	r3, r3, #2
   148e8:	strb	r3, [r0, #12]
   148ec:	bx	lr
   148f0:	ldr	r2, [pc, #596]	; 14b4c <strspn@plt+0x3864>
   148f4:	ldr	ip, [pc, #596]	; 14b50 <strspn@plt+0x3868>
   148f8:	add	r2, pc, r2
   148fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14900:	sub	sp, sp, #8576	; 0x2180
   14904:	ldr	ip, [r2, ip]
   14908:	sub	sp, sp, #12
   1490c:	cmp	r0, #0
   14910:	add	r2, sp, #8576	; 0x2180
   14914:	clz	r3, r1
   14918:	str	ip, [sp, #16]
   1491c:	lsr	r3, r3, #5
   14920:	ldr	ip, [ip]
   14924:	moveq	r3, #1
   14928:	add	r2, r2, #4
   1492c:	cmp	r3, #0
   14930:	str	ip, [r2]
   14934:	bne	14b40 <strspn@plt+0x3858>
   14938:	str	r3, [r1]
   1493c:	ldr	r3, [pc, #528]	; 14b54 <strspn@plt+0x386c>
   14940:	mov	r5, r0
   14944:	add	r3, pc, r3
   14948:	mov	sl, r1
   1494c:	str	r3, [sp, #12]
   14950:	bl	11180 <__errno_location@plt>
   14954:	ldr	r9, [pc, #508]	; 14b58 <strspn@plt+0x3870>
   14958:	ldr	fp, [pc, #508]	; 14b5c <strspn@plt+0x3874>
   1495c:	add	r9, pc, r9
   14960:	add	fp, pc, fp
   14964:	mov	r8, r0
   14968:	mov	r6, #0
   1496c:	str	r6, [r8]
   14970:	ldr	r0, [r5]
   14974:	bl	11264 <readdir64@plt>
   14978:	subs	r4, r0, #0
   1497c:	beq	14b28 <strspn@plt+0x3840>
   14980:	bl	11114 <__ctype_b_loc@plt>
   14984:	ldrb	r3, [r4, #19]
   14988:	lsl	r3, r3, #1
   1498c:	ldr	r2, [r0]
   14990:	ldrh	r3, [r2, r3]
   14994:	tst	r3, #2048	; 0x800
   14998:	beq	14968 <strspn@plt+0x3680>
   1499c:	ldrb	r3, [r5, #12]
   149a0:	add	r4, r4, #19
   149a4:	tst	r3, #2
   149a8:	addeq	r7, sp, #392	; 0x188
   149ac:	bne	14ae4 <strspn@plt+0x37fc>
   149b0:	tst	r3, #1
   149b4:	beq	14a6c <strspn@plt+0x3784>
   149b8:	mov	r3, #8192	; 0x2000
   149bc:	sub	r6, r7, #4
   149c0:	mov	r1, r3
   149c4:	mov	r2, #1
   149c8:	str	r4, [sp, #4]
   149cc:	str	r9, [sp]
   149d0:	mov	r0, r6
   149d4:	bl	112dc <__snprintf_chk@plt>
   149d8:	ldr	r0, [r5]
   149dc:	bl	11270 <dirfd@plt>
   149e0:	mov	r1, r6
   149e4:	mov	r2, #524288	; 0x80000
   149e8:	bl	11168 <openat64@plt>
   149ec:	cmp	r0, #0
   149f0:	blt	14968 <strspn@plt+0x3680>
   149f4:	mov	r1, fp
   149f8:	bl	10fac <fdopen@plt>
   149fc:	subs	r3, r0, #0
   14a00:	beq	14968 <strspn@plt+0x3680>
   14a04:	mov	r2, r3
   14a08:	mov	r1, #8192	; 0x2000
   14a0c:	mov	r0, r6
   14a10:	str	r3, [sp, #20]
   14a14:	bl	1100c <fgets@plt>
   14a18:	ldr	r3, [sp, #20]
   14a1c:	str	r0, [r7, #-368]	; 0xfffffe90
   14a20:	mov	r0, r3
   14a24:	bl	11210 <fclose@plt>
   14a28:	ldr	r3, [r7, #-368]	; 0xfffffe90
   14a2c:	cmp	r3, #0
   14a30:	beq	14968 <strspn@plt+0x3680>
   14a34:	add	r3, sp, #132	; 0x84
   14a38:	mov	r0, r6
   14a3c:	mov	r2, r3
   14a40:	ldr	r1, [sp, #12]
   14a44:	str	r3, [sp, #20]
   14a48:	bl	1124c <sscanf@plt>
   14a4c:	cmp	r0, #1
   14a50:	bne	14968 <strspn@plt+0x3680>
   14a54:	ldr	r3, [sp, #20]
   14a58:	ldr	r1, [r5, #4]
   14a5c:	mov	r0, r3
   14a60:	bl	10fd0 <strcmp@plt>
   14a64:	cmp	r0, #0
   14a68:	bne	14968 <strspn@plt+0x3680>
   14a6c:	mov	r3, #0
   14a70:	str	r3, [r8]
   14a74:	mov	r2, #10
   14a78:	add	r1, sp, #24
   14a7c:	mov	r0, r4
   14a80:	str	r3, [r7, #-368]	; 0xfffffe90
   14a84:	bl	10fdc <strtol@plt>
   14a88:	str	r0, [sl]
   14a8c:	ldr	r0, [r8]
   14a90:	cmp	r0, #0
   14a94:	rsbne	r0, r0, #0
   14a98:	bne	14abc <strspn@plt+0x37d4>
   14a9c:	ldr	r3, [r7, #-368]	; 0xfffffe90
   14aa0:	cmp	r3, r4
   14aa4:	beq	14b38 <strspn@plt+0x3850>
   14aa8:	cmp	r3, #0
   14aac:	beq	14abc <strspn@plt+0x37d4>
   14ab0:	ldrsb	r3, [r3]
   14ab4:	cmp	r3, #0
   14ab8:	bne	14b38 <strspn@plt+0x3850>
   14abc:	add	r3, sp, #8576	; 0x2180
   14ac0:	add	r3, r3, #4
   14ac4:	ldr	r2, [r3]
   14ac8:	ldr	r3, [sp, #16]
   14acc:	ldr	r3, [r3]
   14ad0:	cmp	r2, r3
   14ad4:	bne	14b48 <strspn@plt+0x3860>
   14ad8:	add	sp, sp, #8576	; 0x2180
   14adc:	add	sp, sp, #12
   14ae0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ae4:	ldr	r0, [r5]
   14ae8:	bl	11270 <dirfd@plt>
   14aec:	str	r6, [sp]
   14af0:	add	r3, sp, #24
   14af4:	mov	r2, r4
   14af8:	mov	r1, r0
   14afc:	mov	r0, #3
   14b00:	bl	110a8 <__fxstatat64@plt>
   14b04:	cmp	r0, #0
   14b08:	bne	14968 <strspn@plt+0x3680>
   14b0c:	add	r7, sp, #392	; 0x188
   14b10:	ldr	r2, [r5, #8]
   14b14:	ldr	r3, [r7, #-344]	; 0xfffffea8
   14b18:	cmp	r2, r3
   14b1c:	bne	14968 <strspn@plt+0x3680>
   14b20:	ldrb	r3, [r5, #12]
   14b24:	b	149b0 <strspn@plt+0x36c8>
   14b28:	ldr	r3, [r8]
   14b2c:	cmp	r3, r6
   14b30:	moveq	r0, #1
   14b34:	beq	14abc <strspn@plt+0x37d4>
   14b38:	mvn	r0, #0
   14b3c:	b	14abc <strspn@plt+0x37d4>
   14b40:	mvn	r0, #21
   14b44:	b	14abc <strspn@plt+0x37d4>
   14b48:	bl	11084 <__stack_chk_fail@plt>
   14b4c:	ldrdeq	r1, [r1], -r4
   14b50:	andeq	r0, r0, r4, lsr #2
   14b54:	andeq	r0, r0, r4, lsr #21
   14b58:	andeq	r0, r0, r0, lsl #21
   14b5c:	andeq	r0, r0, r4, lsl #21
   14b60:	cmp	r3, #0
   14b64:	cmpeq	r2, #0
   14b68:	bne	14b80 <strspn@plt+0x3898>
   14b6c:	cmp	r1, #0
   14b70:	cmpeq	r0, #0
   14b74:	mvnne	r1, #0
   14b78:	mvnne	r0, #0
   14b7c:	b	14b9c <strspn@plt+0x38b4>
   14b80:	sub	sp, sp, #8
   14b84:	push	{sp, lr}
   14b88:	bl	14bac <strspn@plt+0x38c4>
   14b8c:	ldr	lr, [sp, #4]
   14b90:	add	sp, sp, #8
   14b94:	pop	{r2, r3}
   14b98:	bx	lr
   14b9c:	push	{r1, lr}
   14ba0:	mov	r0, #8
   14ba4:	bl	10fc4 <raise@plt>
   14ba8:	pop	{r1, pc}
   14bac:	cmp	r1, r3
   14bb0:	cmpeq	r0, r2
   14bb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14bb8:	mov	r4, r0
   14bbc:	movcc	r0, #0
   14bc0:	mov	r5, r1
   14bc4:	ldr	lr, [sp, #36]	; 0x24
   14bc8:	movcc	r1, r0
   14bcc:	bcc	14cc8 <strspn@plt+0x39e0>
   14bd0:	cmp	r3, #0
   14bd4:	clzeq	ip, r2
   14bd8:	clzne	ip, r3
   14bdc:	addeq	ip, ip, #32
   14be0:	cmp	r5, #0
   14be4:	clzeq	r1, r4
   14be8:	addeq	r1, r1, #32
   14bec:	clzne	r1, r5
   14bf0:	sub	ip, ip, r1
   14bf4:	sub	sl, ip, #32
   14bf8:	lsl	r9, r3, ip
   14bfc:	rsb	fp, ip, #32
   14c00:	orr	r9, r9, r2, lsl sl
   14c04:	orr	r9, r9, r2, lsr fp
   14c08:	lsl	r8, r2, ip
   14c0c:	cmp	r5, r9
   14c10:	cmpeq	r4, r8
   14c14:	movcc	r0, #0
   14c18:	movcc	r1, r0
   14c1c:	bcc	14c38 <strspn@plt+0x3950>
   14c20:	mov	r0, #1
   14c24:	subs	r4, r4, r8
   14c28:	lsl	r1, r0, sl
   14c2c:	orr	r1, r1, r0, lsr fp
   14c30:	lsl	r0, r0, ip
   14c34:	sbc	r5, r5, r9
   14c38:	cmp	ip, #0
   14c3c:	beq	14cc8 <strspn@plt+0x39e0>
   14c40:	lsr	r6, r8, #1
   14c44:	orr	r6, r6, r9, lsl #31
   14c48:	lsr	r7, r9, #1
   14c4c:	mov	r2, ip
   14c50:	b	14c74 <strspn@plt+0x398c>
   14c54:	subs	r3, r4, r6
   14c58:	sbc	r8, r5, r7
   14c5c:	adds	r3, r3, r3
   14c60:	adc	r8, r8, r8
   14c64:	adds	r4, r3, #1
   14c68:	adc	r5, r8, #0
   14c6c:	subs	r2, r2, #1
   14c70:	beq	14c90 <strspn@plt+0x39a8>
   14c74:	cmp	r5, r7
   14c78:	cmpeq	r4, r6
   14c7c:	bcs	14c54 <strspn@plt+0x396c>
   14c80:	adds	r4, r4, r4
   14c84:	adc	r5, r5, r5
   14c88:	subs	r2, r2, #1
   14c8c:	bne	14c74 <strspn@plt+0x398c>
   14c90:	lsr	r3, r4, ip
   14c94:	orr	r3, r3, r5, lsl fp
   14c98:	lsr	r2, r5, ip
   14c9c:	orr	r3, r3, r5, lsr sl
   14ca0:	adds	r0, r0, r4
   14ca4:	mov	r4, r3
   14ca8:	lsl	r3, r2, ip
   14cac:	orr	r3, r3, r4, lsl sl
   14cb0:	lsl	ip, r4, ip
   14cb4:	orr	r3, r3, r4, lsr fp
   14cb8:	adc	r1, r1, r5
   14cbc:	subs	r0, r0, ip
   14cc0:	mov	r5, r2
   14cc4:	sbc	r1, r1, r3
   14cc8:	cmp	lr, #0
   14ccc:	strdne	r4, [lr]
   14cd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14cd4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14cd8:	mov	r7, r0
   14cdc:	ldr	r6, [pc, #72]	; 14d2c <strspn@plt+0x3a44>
   14ce0:	ldr	r5, [pc, #72]	; 14d30 <strspn@plt+0x3a48>
   14ce4:	add	r6, pc, r6
   14ce8:	add	r5, pc, r5
   14cec:	sub	r6, r6, r5
   14cf0:	mov	r8, r1
   14cf4:	mov	r9, r2
   14cf8:	bl	10f8c <fdopen@plt-0x20>
   14cfc:	asrs	r6, r6, #2
   14d00:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14d04:	mov	r4, #0
   14d08:	add	r4, r4, #1
   14d0c:	ldr	r3, [r5], #4
   14d10:	mov	r2, r9
   14d14:	mov	r1, r8
   14d18:	mov	r0, r7
   14d1c:	blx	r3
   14d20:	cmp	r6, r4
   14d24:	bne	14d08 <strspn@plt+0x3a20>
   14d28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14d2c:	andeq	r1, r1, r0, ror #1
   14d30:	ldrdeq	r1, [r1], -r8
   14d34:	bx	lr
   14d38:	ldr	r3, [pc, #12]	; 14d4c <strspn@plt+0x3a64>
   14d3c:	mov	r1, #0
   14d40:	add	r3, pc, r3
   14d44:	ldr	r2, [r3]
   14d48:	b	11198 <__cxa_atexit@plt>
   14d4c:			; <UNDEFINED> instruction: 0x000112bc

Disassembly of section .fini:

00014d50 <.fini>:
   14d50:	push	{r3, lr}
   14d54:	pop	{r3, pc}
