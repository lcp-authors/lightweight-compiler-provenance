
raspbian-preinstalled/printenv:     file format elf32-littlearm


Disassembly of section .init:

00010b90 <.init>:
   10b90:	push	{r3, lr}
   10b94:	bl	11054 <abort@plt+0x2a0>
   10b98:	pop	{r3, pc}

Disassembly of section .plt:

00010b9c <calloc@plt-0x14>:
   10b9c:	push	{lr}		; (str lr, [sp, #-4]!)
   10ba0:	ldr	lr, [pc, #4]	; 10bac <calloc@plt-0x4>
   10ba4:	add	lr, pc, lr
   10ba8:	ldr	pc, [lr, #8]!
   10bac:	andeq	r4, r1, r4, asr r4

00010bb0 <calloc@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #20, 20	; 0x14000
   10bb8:	ldr	pc, [ip, #1108]!	; 0x454

00010bbc <fputs_unlocked@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #20, 20	; 0x14000
   10bc4:	ldr	pc, [ip, #1100]!	; 0x44c

00010bc8 <raise@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #20, 20	; 0x14000
   10bd0:	ldr	pc, [ip, #1092]!	; 0x444

00010bd4 <strcmp@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #20, 20	; 0x14000
   10bdc:	ldr	pc, [ip, #1084]!	; 0x43c

00010be0 <fflush@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #20, 20	; 0x14000
   10be8:	ldr	pc, [ip, #1076]!	; 0x434

00010bec <free@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #20, 20	; 0x14000
   10bf4:	ldr	pc, [ip, #1068]!	; 0x42c

00010bf8 <_exit@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #20, 20	; 0x14000
   10c00:	ldr	pc, [ip, #1060]!	; 0x424

00010c04 <memcpy@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #20, 20	; 0x14000
   10c0c:	ldr	pc, [ip, #1052]!	; 0x41c

00010c10 <mbsinit@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #20, 20	; 0x14000
   10c18:	ldr	pc, [ip, #1044]!	; 0x414

00010c1c <memcmp@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #20, 20	; 0x14000
   10c24:	ldr	pc, [ip, #1036]!	; 0x40c

00010c28 <dcgettext@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #20, 20	; 0x14000
   10c30:	ldr	pc, [ip, #1028]!	; 0x404

00010c34 <__stack_chk_fail@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #20, 20	; 0x14000
   10c3c:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c40 <realloc@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #20, 20	; 0x14000
   10c48:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c4c <textdomain@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #20, 20	; 0x14000
   10c54:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c58 <iswprint@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #20, 20	; 0x14000
   10c60:	ldr	pc, [ip, #996]!	; 0x3e4

00010c64 <fwrite@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #20, 20	; 0x14000
   10c6c:	ldr	pc, [ip, #988]!	; 0x3dc

00010c70 <lseek64@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #20, 20	; 0x14000
   10c78:	ldr	pc, [ip, #980]!	; 0x3d4

00010c7c <__ctype_get_mb_cur_max@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #20, 20	; 0x14000
   10c84:	ldr	pc, [ip, #972]!	; 0x3cc

00010c88 <__fpending@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #20, 20	; 0x14000
   10c90:	ldr	pc, [ip, #964]!	; 0x3c4

00010c94 <mbrtowc@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #20, 20	; 0x14000
   10c9c:	ldr	pc, [ip, #956]!	; 0x3bc

00010ca0 <error@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #20, 20	; 0x14000
   10ca8:	ldr	pc, [ip, #948]!	; 0x3b4

00010cac <malloc@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #20, 20	; 0x14000
   10cb4:	ldr	pc, [ip, #940]!	; 0x3ac

00010cb8 <__libc_start_main@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #20, 20	; 0x14000
   10cc0:	ldr	pc, [ip, #932]!	; 0x3a4

00010cc4 <__freading@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #20, 20	; 0x14000
   10ccc:	ldr	pc, [ip, #924]!	; 0x39c

00010cd0 <__gmon_start__@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #20, 20	; 0x14000
   10cd8:	ldr	pc, [ip, #916]!	; 0x394

00010cdc <getopt_long@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #20, 20	; 0x14000
   10ce4:	ldr	pc, [ip, #908]!	; 0x38c

00010ce8 <__ctype_b_loc@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #20, 20	; 0x14000
   10cf0:	ldr	pc, [ip, #900]!	; 0x384

00010cf4 <exit@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #20, 20	; 0x14000
   10cfc:	ldr	pc, [ip, #892]!	; 0x37c

00010d00 <strlen@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #20, 20	; 0x14000
   10d08:	ldr	pc, [ip, #884]!	; 0x374

00010d0c <strchr@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #20, 20	; 0x14000
   10d14:	ldr	pc, [ip, #876]!	; 0x36c

00010d18 <__errno_location@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #20, 20	; 0x14000
   10d20:	ldr	pc, [ip, #868]!	; 0x364

00010d24 <__cxa_atexit@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #20, 20	; 0x14000
   10d2c:	ldr	pc, [ip, #860]!	; 0x35c

00010d30 <memset@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #20, 20	; 0x14000
   10d38:	ldr	pc, [ip, #852]!	; 0x354

00010d3c <__printf_chk@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #20, 20	; 0x14000
   10d44:	ldr	pc, [ip, #844]!	; 0x34c

00010d48 <fileno@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #20, 20	; 0x14000
   10d50:	ldr	pc, [ip, #836]!	; 0x344

00010d54 <__fprintf_chk@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #20, 20	; 0x14000
   10d5c:	ldr	pc, [ip, #828]!	; 0x33c

00010d60 <fclose@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #20, 20	; 0x14000
   10d68:	ldr	pc, [ip, #820]!	; 0x334

00010d6c <fseeko64@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #20, 20	; 0x14000
   10d74:	ldr	pc, [ip, #812]!	; 0x32c

00010d78 <setlocale@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #20, 20	; 0x14000
   10d80:	ldr	pc, [ip, #804]!	; 0x324

00010d84 <strrchr@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #20, 20	; 0x14000
   10d8c:	ldr	pc, [ip, #796]!	; 0x31c

00010d90 <nl_langinfo@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #20, 20	; 0x14000
   10d98:	ldr	pc, [ip, #788]!	; 0x314

00010d9c <bindtextdomain@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #20, 20	; 0x14000
   10da4:	ldr	pc, [ip, #780]!	; 0x30c

00010da8 <strncmp@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #20, 20	; 0x14000
   10db0:	ldr	pc, [ip, #772]!	; 0x304

00010db4 <abort@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #20, 20	; 0x14000
   10dbc:	ldr	pc, [ip, #764]!	; 0x2fc

Disassembly of section .text:

00010dc0 <.text>:
   10dc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10dc4:	mov	r5, r0
   10dc8:	sub	sp, sp, #28
   10dcc:	ldr	r0, [r1]
   10dd0:	mov	r4, r1
   10dd4:	bl	11504 <abort@plt+0x750>
   10dd8:	ldr	r1, [pc, #504]	; 10fd8 <abort@plt+0x224>
   10ddc:	mov	r0, #6
   10de0:	bl	10d78 <setlocale@plt>
   10de4:	ldr	r1, [pc, #496]	; 10fdc <abort@plt+0x228>
   10de8:	ldr	r0, [pc, #496]	; 10fe0 <abort@plt+0x22c>
   10dec:	bl	10d9c <bindtextdomain@plt>
   10df0:	ldr	r0, [pc, #488]	; 10fe0 <abort@plt+0x22c>
   10df4:	bl	10c4c <textdomain@plt>
   10df8:	ldr	r3, [pc, #484]	; 10fe4 <abort@plt+0x230>
   10dfc:	mov	r2, #2
   10e00:	ldr	r0, [pc, #480]	; 10fe8 <abort@plt+0x234>
   10e04:	str	r2, [r3]
   10e08:	bl	144f4 <abort@plt+0x3740>
   10e0c:	mov	r7, #0
   10e10:	ldr	r9, [pc, #468]	; 10fec <abort@plt+0x238>
   10e14:	ldr	r8, [pc, #468]	; 10ff0 <abort@plt+0x23c>
   10e18:	mov	r6, r7
   10e1c:	str	r6, [sp]
   10e20:	mov	r3, r9
   10e24:	mov	r2, r8
   10e28:	mov	r1, r4
   10e2c:	mov	r0, r5
   10e30:	bl	10cdc <getopt_long@plt>
   10e34:	cmn	r0, #1
   10e38:	beq	10e98 <abort@plt+0xe4>
   10e3c:	cmn	r0, #2
   10e40:	beq	10fd0 <abort@plt+0x21c>
   10e44:	cmp	r0, #48	; 0x30
   10e48:	mov	r7, #1
   10e4c:	beq	10e1c <abort@plt+0x68>
   10e50:	cmn	r0, #3
   10e54:	beq	10e60 <abort@plt+0xac>
   10e58:	mov	r0, #2
   10e5c:	bl	11108 <abort@plt+0x354>
   10e60:	ldr	r3, [pc, #396]	; 10ff4 <abort@plt+0x240>
   10e64:	ldr	r0, [pc, #396]	; 10ff8 <abort@plt+0x244>
   10e68:	ldr	r1, [pc, #396]	; 10ffc <abort@plt+0x248>
   10e6c:	ldr	r2, [pc, #396]	; 11000 <abort@plt+0x24c>
   10e70:	str	r6, [sp, #8]
   10e74:	ldr	r0, [r0]
   10e78:	ldr	r3, [r3]
   10e7c:	str	r1, [sp, #4]
   10e80:	str	r2, [sp]
   10e84:	ldr	r1, [pc, #376]	; 11004 <abort@plt+0x250>
   10e88:	ldr	r2, [pc, #376]	; 11008 <abort@plt+0x254>
   10e8c:	bl	13bd4 <abort@plt+0x2e20>
   10e90:	mov	r0, #0
   10e94:	bl	10cf4 <exit@plt>
   10e98:	ldr	r9, [pc, #364]	; 1100c <abort@plt+0x258>
   10e9c:	ldr	r6, [r9]
   10ea0:	cmp	r6, r5
   10ea4:	blt	10ef4 <abort@plt+0x140>
   10ea8:	ldr	r3, [pc, #352]	; 11010 <abort@plt+0x25c>
   10eac:	cmp	r7, #0
   10eb0:	movne	r6, #0
   10eb4:	ldr	r4, [r3]
   10eb8:	moveq	r6, #10
   10ebc:	ldr	r5, [pc, #336]	; 11014 <abort@plt+0x260>
   10ec0:	sub	r4, r4, #4
   10ec4:	b	10ed8 <abort@plt+0x124>
   10ec8:	mov	r3, r6
   10ecc:	mov	r1, r5
   10ed0:	mov	r0, #1
   10ed4:	bl	10d3c <__printf_chk@plt>
   10ed8:	ldr	r2, [r4, #4]!
   10edc:	cmp	r2, #0
   10ee0:	bne	10ec8 <abort@plt+0x114>
   10ee4:	mov	r0, #1
   10ee8:	eor	r0, r0, #1
   10eec:	add	sp, sp, #28
   10ef0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ef4:	cmp	r7, #0
   10ef8:	movne	r3, #0
   10efc:	moveq	r3, #10
   10f00:	add	r6, r4, r6, lsl #2
   10f04:	ldr	sl, [pc, #260]	; 11010 <abort@plt+0x25c>
   10f08:	ldr	fp, [pc, #260]	; 11014 <abort@plt+0x260>
   10f0c:	add	r4, r4, r5, lsl #2
   10f10:	str	r3, [sp, #20]
   10f14:	mov	r8, #0
   10f18:	b	10f24 <abort@plt+0x170>
   10f1c:	cmp	r4, r6
   10f20:	beq	10fb8 <abort@plt+0x204>
   10f24:	mov	r1, #61	; 0x3d
   10f28:	ldr	r0, [r6], #4
   10f2c:	bl	10d0c <strchr@plt>
   10f30:	cmp	r0, #0
   10f34:	ldreq	r7, [sl]
   10f38:	subeq	r7, r7, #4
   10f3c:	bne	10f1c <abort@plt+0x168>
   10f40:	ldr	r1, [r7, #4]!
   10f44:	cmp	r1, #0
   10f48:	beq	10f94 <abort@plt+0x1e0>
   10f4c:	ldrb	r3, [r1]
   10f50:	ldr	lr, [r6, #-4]
   10f54:	cmp	r3, #0
   10f58:	mov	r2, r1
   10f5c:	beq	10f40 <abort@plt+0x18c>
   10f60:	ldrb	ip, [lr], #1
   10f64:	cmp	ip, #0
   10f68:	beq	10f40 <abort@plt+0x18c>
   10f6c:	cmp	r3, ip
   10f70:	bne	10f40 <abort@plt+0x18c>
   10f74:	ldrb	r3, [r1, #1]!
   10f78:	cmp	r3, #61	; 0x3d
   10f7c:	bne	10f54 <abort@plt+0x1a0>
   10f80:	ldrb	ip, [lr]
   10f84:	cmp	ip, #0
   10f88:	beq	10f9c <abort@plt+0x1e8>
   10f8c:	mov	r2, r1
   10f90:	b	10f60 <abort@plt+0x1ac>
   10f94:	add	r8, r8, r0
   10f98:	b	10f1c <abort@plt+0x168>
   10f9c:	add	r2, r2, #2
   10fa0:	ldr	r3, [sp, #20]
   10fa4:	mov	r1, fp
   10fa8:	mov	r0, #1
   10fac:	bl	10d3c <__printf_chk@plt>
   10fb0:	mov	r0, #1
   10fb4:	b	10f40 <abort@plt+0x18c>
   10fb8:	ldr	r0, [r9]
   10fbc:	sub	r0, r5, r0
   10fc0:	sub	r0, r0, r8
   10fc4:	clz	r0, r0
   10fc8:	lsr	r0, r0, #5
   10fcc:	b	10ee8 <abort@plt+0x134>
   10fd0:	mov	r0, #0
   10fd4:	bl	11108 <abort@plt+0x354>
   10fd8:	andeq	r4, r1, ip, lsr #27
   10fdc:	andeq	r4, r1, r4, asr #17
   10fe0:	andeq	r4, r1, r8, lsl r8
   10fe4:	andeq	r5, r2, ip, asr #1
   10fe8:	andeq	r1, r1, ip, lsr #8
   10fec:	andeq	r4, r1, r0, asr r5
   10ff0:	strdeq	r4, [r1], -ip
   10ff4:	andeq	r5, r2, r8, asr #1
   10ff8:	andeq	r5, r2, ip, lsr #2
   10ffc:	ldrdeq	r4, [r1], -r8
   11000:	andeq	r4, r1, ip, ror #17
   11004:	muleq	r1, r0, r5
   11008:	andeq	r4, r1, r4, lsl r8
   1100c:	andeq	r5, r2, r0, lsr #2
   11010:	andeq	r5, r2, r4, lsl r1
   11014:	andeq	r4, r1, r4, lsl #18
   11018:	mov	fp, #0
   1101c:	mov	lr, #0
   11020:	pop	{r1}		; (ldr r1, [sp], #4)
   11024:	mov	r2, sp
   11028:	push	{r2}		; (str r2, [sp, #-4]!)
   1102c:	push	{r0}		; (str r0, [sp, #-4]!)
   11030:	ldr	ip, [pc, #16]	; 11048 <abort@plt+0x294>
   11034:	push	{ip}		; (str ip, [sp, #-4]!)
   11038:	ldr	r0, [pc, #12]	; 1104c <abort@plt+0x298>
   1103c:	ldr	r3, [pc, #12]	; 11050 <abort@plt+0x29c>
   11040:	bl	10cb8 <__libc_start_main@plt>
   11044:	bl	10db4 <abort@plt>
   11048:	strdeq	r4, [r1], -r0
   1104c:	andeq	r0, r1, r0, asr #27
   11050:	muleq	r1, r0, r4
   11054:	ldr	r3, [pc, #20]	; 11070 <abort@plt+0x2bc>
   11058:	ldr	r2, [pc, #20]	; 11074 <abort@plt+0x2c0>
   1105c:	add	r3, pc, r3
   11060:	ldr	r2, [r3, r2]
   11064:	cmp	r2, #0
   11068:	bxeq	lr
   1106c:	b	10cd0 <__gmon_start__@plt>
   11070:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   11074:	strheq	r0, [r0], -ip
   11078:	ldr	r0, [pc, #24]	; 11098 <abort@plt+0x2e4>
   1107c:	ldr	r3, [pc, #24]	; 1109c <abort@plt+0x2e8>
   11080:	cmp	r3, r0
   11084:	bxeq	lr
   11088:	ldr	r3, [pc, #16]	; 110a0 <abort@plt+0x2ec>
   1108c:	cmp	r3, #0
   11090:	bxeq	lr
   11094:	bx	r3
   11098:	andeq	r5, r2, r0, lsl r1
   1109c:	andeq	r5, r2, r0, lsl r1
   110a0:	andeq	r0, r0, r0
   110a4:	ldr	r0, [pc, #36]	; 110d0 <abort@plt+0x31c>
   110a8:	ldr	r1, [pc, #36]	; 110d4 <abort@plt+0x320>
   110ac:	sub	r1, r1, r0
   110b0:	asr	r1, r1, #2
   110b4:	add	r1, r1, r1, lsr #31
   110b8:	asrs	r1, r1, #1
   110bc:	bxeq	lr
   110c0:	ldr	r3, [pc, #16]	; 110d8 <abort@plt+0x324>
   110c4:	cmp	r3, #0
   110c8:	bxeq	lr
   110cc:	bx	r3
   110d0:	andeq	r5, r2, r0, lsl r1
   110d4:	andeq	r5, r2, r0, lsl r1
   110d8:	andeq	r0, r0, r0
   110dc:	push	{r4, lr}
   110e0:	ldr	r4, [pc, #24]	; 11100 <abort@plt+0x34c>
   110e4:	ldrb	r3, [r4]
   110e8:	cmp	r3, #0
   110ec:	popne	{r4, pc}
   110f0:	bl	11078 <abort@plt+0x2c4>
   110f4:	mov	r3, #1
   110f8:	strb	r3, [r4]
   110fc:	pop	{r4, pc}
   11100:	andeq	r5, r2, r0, lsr r1
   11104:	b	110a4 <abort@plt+0x2f0>
   11108:	ldr	r3, [pc, #680]	; 113b8 <abort@plt+0x604>
   1110c:	push	{r7, lr}
   11110:	sub	sp, sp, #64	; 0x40
   11114:	ldr	r3, [r3]
   11118:	subs	r5, r0, #0
   1111c:	str	r3, [sp, #60]	; 0x3c
   11120:	beq	1115c <abort@plt+0x3a8>
   11124:	ldr	r3, [pc, #656]	; 113bc <abort@plt+0x608>
   11128:	mov	r2, #5
   1112c:	ldr	r1, [pc, #652]	; 113c0 <abort@plt+0x60c>
   11130:	mov	r0, #0
   11134:	ldr	r4, [r3]
   11138:	bl	10c28 <dcgettext@plt>
   1113c:	ldr	r3, [pc, #640]	; 113c4 <abort@plt+0x610>
   11140:	mov	r1, #1
   11144:	ldr	r3, [r3]
   11148:	mov	r2, r0
   1114c:	mov	r0, r4
   11150:	bl	10d54 <__fprintf_chk@plt>
   11154:	mov	r0, r5
   11158:	bl	10cf4 <exit@plt>
   1115c:	mov	r2, #5
   11160:	ldr	r1, [pc, #608]	; 113c8 <abort@plt+0x614>
   11164:	bl	10c28 <dcgettext@plt>
   11168:	ldr	r3, [pc, #596]	; 113c4 <abort@plt+0x610>
   1116c:	ldr	r4, [pc, #600]	; 113cc <abort@plt+0x618>
   11170:	ldr	r2, [r3]
   11174:	mov	r1, r0
   11178:	mov	r0, #1
   1117c:	bl	10d3c <__printf_chk@plt>
   11180:	mov	r2, #5
   11184:	ldr	r1, [pc, #580]	; 113d0 <abort@plt+0x61c>
   11188:	mov	r0, r5
   1118c:	bl	10c28 <dcgettext@plt>
   11190:	ldr	r1, [r4]
   11194:	bl	10bbc <fputs_unlocked@plt>
   11198:	mov	r2, #5
   1119c:	ldr	r1, [pc, #560]	; 113d4 <abort@plt+0x620>
   111a0:	mov	r0, r5
   111a4:	bl	10c28 <dcgettext@plt>
   111a8:	ldr	r1, [r4]
   111ac:	bl	10bbc <fputs_unlocked@plt>
   111b0:	mov	r2, #5
   111b4:	ldr	r1, [pc, #540]	; 113d8 <abort@plt+0x624>
   111b8:	mov	r0, r5
   111bc:	bl	10c28 <dcgettext@plt>
   111c0:	ldr	r1, [r4]
   111c4:	bl	10bbc <fputs_unlocked@plt>
   111c8:	mov	r2, #5
   111cc:	ldr	r1, [pc, #520]	; 113dc <abort@plt+0x628>
   111d0:	mov	r0, r5
   111d4:	bl	10c28 <dcgettext@plt>
   111d8:	ldr	r2, [pc, #512]	; 113e0 <abort@plt+0x62c>
   111dc:	mov	r1, r0
   111e0:	mov	r0, #1
   111e4:	bl	10d3c <__printf_chk@plt>
   111e8:	ldr	lr, [pc, #500]	; 113e4 <abort@plt+0x630>
   111ec:	add	ip, sp, #4
   111f0:	ldm	lr!, {r0, r1, r2, r3}
   111f4:	stmia	ip!, {r0, r1, r2, r3}
   111f8:	ldm	lr!, {r0, r1, r2, r3}
   111fc:	ldr	r6, [sp, #4]
   11200:	stmia	ip!, {r0, r1, r2, r3}
   11204:	cmp	r6, #0
   11208:	ldm	lr!, {r0, r1, r2, r3}
   1120c:	addeq	r4, sp, #4
   11210:	stmia	ip!, {r0, r1, r2, r3}
   11214:	ldm	lr, {r0, r1}
   11218:	stm	ip, {r0, r1}
   1121c:	beq	1124c <abort@plt+0x498>
   11220:	ldr	r7, [pc, #440]	; 113e0 <abort@plt+0x62c>
   11224:	add	r4, sp, #4
   11228:	b	11238 <abort@plt+0x484>
   1122c:	ldr	r6, [r4, #8]!
   11230:	cmp	r6, #0
   11234:	beq	1124c <abort@plt+0x498>
   11238:	mov	r1, r6
   1123c:	mov	r0, r7
   11240:	bl	10bd4 <strcmp@plt>
   11244:	cmp	r0, #0
   11248:	bne	1122c <abort@plt+0x478>
   1124c:	ldr	r4, [r4, #4]
   11250:	mov	r2, #5
   11254:	cmp	r4, #0
   11258:	ldr	r1, [pc, #392]	; 113e8 <abort@plt+0x634>
   1125c:	beq	11304 <abort@plt+0x550>
   11260:	mov	r0, #0
   11264:	bl	10c28 <dcgettext@plt>
   11268:	ldr	r3, [pc, #380]	; 113ec <abort@plt+0x638>
   1126c:	ldr	r2, [pc, #380]	; 113f0 <abort@plt+0x63c>
   11270:	mov	r1, r0
   11274:	mov	r0, #1
   11278:	bl	10d3c <__printf_chk@plt>
   1127c:	mov	r1, #0
   11280:	mov	r0, #5
   11284:	bl	10d78 <setlocale@plt>
   11288:	cmp	r0, #0
   1128c:	ldreq	r6, [pc, #332]	; 113e0 <abort@plt+0x62c>
   11290:	beq	112ac <abort@plt+0x4f8>
   11294:	mov	r2, #3
   11298:	ldr	r1, [pc, #340]	; 113f4 <abort@plt+0x640>
   1129c:	bl	10da8 <strncmp@plt>
   112a0:	ldr	r6, [pc, #312]	; 113e0 <abort@plt+0x62c>
   112a4:	cmp	r0, #0
   112a8:	bne	11394 <abort@plt+0x5e0>
   112ac:	mov	r2, #5
   112b0:	ldr	r1, [pc, #320]	; 113f8 <abort@plt+0x644>
   112b4:	mov	r0, #0
   112b8:	bl	10c28 <dcgettext@plt>
   112bc:	ldr	r3, [pc, #284]	; 113e0 <abort@plt+0x62c>
   112c0:	ldr	r2, [pc, #292]	; 113ec <abort@plt+0x638>
   112c4:	mov	r1, r0
   112c8:	mov	r0, #1
   112cc:	bl	10d3c <__printf_chk@plt>
   112d0:	mov	r2, #5
   112d4:	ldr	r1, [pc, #288]	; 113fc <abort@plt+0x648>
   112d8:	mov	r0, #0
   112dc:	bl	10c28 <dcgettext@plt>
   112e0:	ldr	r2, [pc, #280]	; 11400 <abort@plt+0x64c>
   112e4:	cmp	r4, r6
   112e8:	ldr	r3, [pc, #276]	; 11404 <abort@plt+0x650>
   112ec:	movne	r3, r2
   112f0:	mov	r1, r0
   112f4:	mov	r2, r4
   112f8:	mov	r0, #1
   112fc:	bl	10d3c <__printf_chk@plt>
   11300:	b	11154 <abort@plt+0x3a0>
   11304:	mov	r0, r4
   11308:	bl	10c28 <dcgettext@plt>
   1130c:	ldr	r3, [pc, #216]	; 113ec <abort@plt+0x638>
   11310:	ldr	r2, [pc, #216]	; 113f0 <abort@plt+0x63c>
   11314:	mov	r1, r0
   11318:	mov	r0, #1
   1131c:	bl	10d3c <__printf_chk@plt>
   11320:	mov	r1, r4
   11324:	mov	r0, #5
   11328:	bl	10d78 <setlocale@plt>
   1132c:	cmp	r0, #0
   11330:	beq	11348 <abort@plt+0x594>
   11334:	mov	r2, #3
   11338:	ldr	r1, [pc, #180]	; 113f4 <abort@plt+0x640>
   1133c:	bl	10da8 <strncmp@plt>
   11340:	cmp	r0, #0
   11344:	bne	1138c <abort@plt+0x5d8>
   11348:	mov	r2, #5
   1134c:	ldr	r1, [pc, #164]	; 113f8 <abort@plt+0x644>
   11350:	mov	r0, #0
   11354:	bl	10c28 <dcgettext@plt>
   11358:	ldr	r3, [pc, #128]	; 113e0 <abort@plt+0x62c>
   1135c:	ldr	r2, [pc, #136]	; 113ec <abort@plt+0x638>
   11360:	mov	r4, r3
   11364:	mov	r1, r0
   11368:	mov	r0, #1
   1136c:	bl	10d3c <__printf_chk@plt>
   11370:	ldr	r1, [pc, #132]	; 113fc <abort@plt+0x648>
   11374:	mov	r2, #5
   11378:	mov	r0, #0
   1137c:	bl	10c28 <dcgettext@plt>
   11380:	ldr	r3, [pc, #124]	; 11404 <abort@plt+0x650>
   11384:	mov	r1, r0
   11388:	b	112f4 <abort@plt+0x540>
   1138c:	ldr	r6, [pc, #76]	; 113e0 <abort@plt+0x62c>
   11390:	mov	r4, r6
   11394:	mov	r2, #5
   11398:	ldr	r1, [pc, #104]	; 11408 <abort@plt+0x654>
   1139c:	mov	r0, #0
   113a0:	bl	10c28 <dcgettext@plt>
   113a4:	ldr	r2, [pc, #52]	; 113e0 <abort@plt+0x62c>
   113a8:	mov	r1, r0
   113ac:	mov	r0, #1
   113b0:	bl	10d3c <__printf_chk@plt>
   113b4:	b	112ac <abort@plt+0x4f8>
   113b8:	andeq	r4, r2, r8, lsl #30
   113bc:	andeq	r5, r2, r8, lsr #2
   113c0:	muleq	r1, ip, r5
   113c4:	andeq	r5, r2, ip, lsr r1
   113c8:	andeq	r4, r1, r4, asr #11
   113cc:	andeq	r5, r2, ip, lsr #2
   113d0:	andeq	r4, r1, ip, ror #12
   113d4:	andeq	r4, r1, ip, lsr #13
   113d8:	ldrdeq	r4, [r1], -ip
   113dc:	andeq	r4, r1, r4, lsl r7
   113e0:	muleq	r1, r0, r5
   113e4:	andeq	r4, r1, r8, lsl r5
   113e8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   113ec:	andeq	r4, r1, ip, ror #15
   113f0:	andeq	r4, r1, r4, lsl r8
   113f4:	andeq	r4, r1, r4, lsr #16
   113f8:	andeq	r4, r1, r0, ror r8
   113fc:	muleq	r1, r0, r8
   11400:	andeq	r4, r1, ip, lsr #27
   11404:	andeq	r4, r1, r4, lsl r9
   11408:	andeq	r4, r1, r8, lsr #16
   1140c:	ldr	r3, [pc, #4]	; 11418 <abort@plt+0x664>
   11410:	str	r0, [r3]
   11414:	bx	lr
   11418:	andeq	r5, r2, r4, lsr r1
   1141c:	ldr	r3, [pc, #4]	; 11428 <abort@plt+0x674>
   11420:	strb	r0, [r3, #4]
   11424:	bx	lr
   11428:	andeq	r5, r2, r4, lsr r1
   1142c:	ldr	r3, [pc, #180]	; 114e8 <abort@plt+0x734>
   11430:	push	{r4, r5, r6, lr}
   11434:	sub	sp, sp, #8
   11438:	ldr	r0, [r3]
   1143c:	bl	13fe0 <abort@plt+0x322c>
   11440:	cmp	r0, #0
   11444:	beq	1146c <abort@plt+0x6b8>
   11448:	bl	10d18 <__errno_location@plt>
   1144c:	ldr	r5, [pc, #152]	; 114ec <abort@plt+0x738>
   11450:	ldrb	r3, [r5, #4]
   11454:	cmp	r3, #0
   11458:	mov	r4, r0
   1145c:	beq	11488 <abort@plt+0x6d4>
   11460:	ldr	r3, [r0]
   11464:	cmp	r3, #32
   11468:	bne	11488 <abort@plt+0x6d4>
   1146c:	ldr	r3, [pc, #124]	; 114f0 <abort@plt+0x73c>
   11470:	ldr	r0, [r3]
   11474:	bl	13fe0 <abort@plt+0x322c>
   11478:	cmp	r0, #0
   1147c:	bne	114c8 <abort@plt+0x714>
   11480:	add	sp, sp, #8
   11484:	pop	{r4, r5, r6, pc}
   11488:	mov	r2, #5
   1148c:	ldr	r1, [pc, #96]	; 114f4 <abort@plt+0x740>
   11490:	mov	r0, #0
   11494:	bl	10c28 <dcgettext@plt>
   11498:	mov	r6, r0
   1149c:	ldr	r0, [r5]
   114a0:	cmp	r0, #0
   114a4:	beq	114d4 <abort@plt+0x720>
   114a8:	ldr	r4, [r4]
   114ac:	bl	13588 <abort@plt+0x27d4>
   114b0:	mov	r1, r4
   114b4:	str	r6, [sp]
   114b8:	ldr	r2, [pc, #56]	; 114f8 <abort@plt+0x744>
   114bc:	mov	r3, r0
   114c0:	mov	r0, #0
   114c4:	bl	10ca0 <error@plt>
   114c8:	ldr	r3, [pc, #44]	; 114fc <abort@plt+0x748>
   114cc:	ldr	r0, [r3]
   114d0:	bl	10bf8 <_exit@plt>
   114d4:	mov	r3, r6
   114d8:	ldr	r1, [r4]
   114dc:	ldr	r2, [pc, #28]	; 11500 <abort@plt+0x74c>
   114e0:	bl	10ca0 <error@plt>
   114e4:	b	114c8 <abort@plt+0x714>
   114e8:	andeq	r5, r2, ip, lsr #2
   114ec:	andeq	r5, r2, r4, lsr r1
   114f0:	andeq	r5, r2, r8, lsr #2
   114f4:	muleq	r1, r8, r9
   114f8:	andeq	r4, r1, r4, lsr #19
   114fc:	andeq	r5, r2, ip, asr #1
   11500:	andeq	r4, r1, r8, lsr #19
   11504:	push	{r4, r5, r6, lr}
   11508:	subs	r4, r0, #0
   1150c:	beq	11580 <abort@plt+0x7cc>
   11510:	mov	r1, #47	; 0x2f
   11514:	bl	10d84 <strrchr@plt>
   11518:	subs	r5, r0, #0
   1151c:	beq	1156c <abort@plt+0x7b8>
   11520:	add	r6, r5, #1
   11524:	sub	r3, r6, r4
   11528:	cmp	r3, #6
   1152c:	ble	1156c <abort@plt+0x7b8>
   11530:	mov	r2, #7
   11534:	ldr	r1, [pc, #96]	; 1159c <abort@plt+0x7e8>
   11538:	sub	r0, r5, #6
   1153c:	bl	10da8 <strncmp@plt>
   11540:	cmp	r0, #0
   11544:	bne	1156c <abort@plt+0x7b8>
   11548:	mov	r2, #3
   1154c:	ldr	r1, [pc, #76]	; 115a0 <abort@plt+0x7ec>
   11550:	mov	r0, r6
   11554:	bl	10da8 <strncmp@plt>
   11558:	cmp	r0, #0
   1155c:	movne	r4, r6
   11560:	ldreq	r3, [pc, #60]	; 115a4 <abort@plt+0x7f0>
   11564:	addeq	r4, r5, #4
   11568:	streq	r4, [r3]
   1156c:	ldr	r2, [pc, #52]	; 115a8 <abort@plt+0x7f4>
   11570:	ldr	r3, [pc, #52]	; 115ac <abort@plt+0x7f8>
   11574:	str	r4, [r2]
   11578:	str	r4, [r3]
   1157c:	pop	{r4, r5, r6, pc}
   11580:	ldr	r3, [pc, #40]	; 115b0 <abort@plt+0x7fc>
   11584:	mov	r2, #55	; 0x37
   11588:	mov	r1, #1
   1158c:	ldr	r3, [r3]
   11590:	ldr	r0, [pc, #28]	; 115b4 <abort@plt+0x800>
   11594:	bl	10c64 <fwrite@plt>
   11598:	bl	10db4 <abort@plt>
   1159c:	andeq	r4, r1, r4, ror #19
   115a0:	andeq	r4, r1, ip, ror #19
   115a4:	andeq	r5, r2, r0, lsl r1
   115a8:	andeq	r5, r2, ip, lsr r1
   115ac:	andeq	r5, r2, r8, lsl r1
   115b0:	andeq	r5, r2, r8, lsr #2
   115b4:	andeq	r4, r1, ip, lsr #19
   115b8:	push	{r4, lr}
   115bc:	mov	r2, #48	; 0x30
   115c0:	mov	r4, r1
   115c4:	mov	r1, #0
   115c8:	bl	10d30 <memset@plt>
   115cc:	cmp	r4, #10
   115d0:	beq	115dc <abort@plt+0x828>
   115d4:	str	r4, [r0]
   115d8:	pop	{r4, pc}
   115dc:	bl	10db4 <abort@plt>
   115e0:	push	{r4, r5, r6, lr}
   115e4:	mov	r2, #5
   115e8:	mov	r5, r0
   115ec:	mov	r6, r1
   115f0:	mov	r1, r0
   115f4:	mov	r0, #0
   115f8:	bl	10c28 <dcgettext@plt>
   115fc:	cmp	r5, r0
   11600:	mov	r4, r0
   11604:	beq	11610 <abort@plt+0x85c>
   11608:	mov	r0, r4
   1160c:	pop	{r4, r5, r6, pc}
   11610:	bl	140a0 <abort@plt+0x32ec>
   11614:	ldrb	r3, [r0]
   11618:	bic	r3, r3, #32
   1161c:	cmp	r3, #85	; 0x55
   11620:	bne	11680 <abort@plt+0x8cc>
   11624:	ldrb	r3, [r0, #1]
   11628:	bic	r3, r3, #32
   1162c:	cmp	r3, #84	; 0x54
   11630:	bne	116f8 <abort@plt+0x944>
   11634:	ldrb	r3, [r0, #2]
   11638:	bic	r3, r3, #32
   1163c:	cmp	r3, #70	; 0x46
   11640:	bne	116f8 <abort@plt+0x944>
   11644:	ldrb	r3, [r0, #3]
   11648:	cmp	r3, #45	; 0x2d
   1164c:	bne	116f8 <abort@plt+0x944>
   11650:	ldrb	r3, [r0, #4]
   11654:	cmp	r3, #56	; 0x38
   11658:	bne	116f8 <abort@plt+0x944>
   1165c:	ldrb	r3, [r0, #5]
   11660:	cmp	r3, #0
   11664:	bne	116f8 <abort@plt+0x944>
   11668:	ldrb	r2, [r4]
   1166c:	ldr	r3, [pc, #156]	; 11710 <abort@plt+0x95c>
   11670:	ldr	r4, [pc, #156]	; 11714 <abort@plt+0x960>
   11674:	cmp	r2, #96	; 0x60
   11678:	movne	r4, r3
   1167c:	b	11608 <abort@plt+0x854>
   11680:	cmp	r3, #71	; 0x47
   11684:	bne	116f8 <abort@plt+0x944>
   11688:	ldrb	r3, [r0, #1]
   1168c:	bic	r3, r3, #32
   11690:	cmp	r3, #66	; 0x42
   11694:	bne	116f8 <abort@plt+0x944>
   11698:	ldrb	r3, [r0, #2]
   1169c:	cmp	r3, #49	; 0x31
   116a0:	bne	116f8 <abort@plt+0x944>
   116a4:	ldrb	r3, [r0, #3]
   116a8:	cmp	r3, #56	; 0x38
   116ac:	bne	116f8 <abort@plt+0x944>
   116b0:	ldrb	r3, [r0, #4]
   116b4:	cmp	r3, #48	; 0x30
   116b8:	bne	116f8 <abort@plt+0x944>
   116bc:	ldrb	r3, [r0, #5]
   116c0:	cmp	r3, #51	; 0x33
   116c4:	bne	116f8 <abort@plt+0x944>
   116c8:	ldrb	r3, [r0, #6]
   116cc:	cmp	r3, #48	; 0x30
   116d0:	bne	116f8 <abort@plt+0x944>
   116d4:	ldrb	r3, [r0, #7]
   116d8:	cmp	r3, #0
   116dc:	bne	116f8 <abort@plt+0x944>
   116e0:	ldrb	r2, [r4]
   116e4:	ldr	r3, [pc, #44]	; 11718 <abort@plt+0x964>
   116e8:	ldr	r4, [pc, #44]	; 1171c <abort@plt+0x968>
   116ec:	cmp	r2, #96	; 0x60
   116f0:	movne	r4, r3
   116f4:	b	11608 <abort@plt+0x854>
   116f8:	ldr	r3, [pc, #32]	; 11720 <abort@plt+0x96c>
   116fc:	ldr	r4, [pc, #32]	; 11724 <abort@plt+0x970>
   11700:	cmp	r6, #9
   11704:	movne	r4, r3
   11708:	mov	r0, r4
   1170c:	pop	{r4, r5, r6, pc}
   11710:	andeq	r4, r1, r8, asr #20
   11714:	andeq	r4, r1, r4, asr sl
   11718:	andeq	r4, r1, ip, asr #20
   1171c:	andeq	r4, r1, r0, asr sl
   11720:	andeq	r4, r1, r8, asr sl
   11724:	andeq	r4, r1, r4, asr #20
   11728:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1172c:	sub	sp, sp, #124	; 0x7c
   11730:	ldr	ip, [pc, #3576]	; 12530 <abort@plt+0x177c>
   11734:	str	r3, [sp, #24]
   11738:	ldr	r3, [sp, #168]	; 0xa8
   1173c:	ldr	ip, [ip]
   11740:	str	r3, [sp, #56]	; 0x38
   11744:	ldr	r3, [sp, #172]	; 0xac
   11748:	ldr	r8, [sp, #160]	; 0xa0
   1174c:	str	r3, [sp, #80]	; 0x50
   11750:	ldr	r3, [sp, #176]	; 0xb0
   11754:	mov	fp, r0
   11758:	str	r3, [sp, #76]	; 0x4c
   1175c:	mov	sl, r1
   11760:	str	r2, [sp, #36]	; 0x24
   11764:	str	ip, [sp, #116]	; 0x74
   11768:	bl	10c7c <__ctype_get_mb_cur_max@plt>
   1176c:	ldr	r3, [sp, #164]	; 0xa4
   11770:	ands	r4, r3, #2
   11774:	movne	r3, #1
   11778:	moveq	r3, #0
   1177c:	str	r3, [sp, #32]
   11780:	str	r0, [sp, #64]	; 0x40
   11784:	cmp	r8, #10
   11788:	ldrls	pc, [pc, r8, lsl #2]
   1178c:	b	12f3c <abort@plt+0x2188>
   11790:	andeq	r1, r1, r4, lsl #23
   11794:	andeq	r1, r1, ip, lsl ip
   11798:	andeq	r2, r1, ip, lsl r2
   1179c:	andeq	r1, r1, ip, lsr ip
   117a0:	strdeq	r1, [r1], -r0
   117a4:	andeq	r1, r1, r8, lsr fp
   117a8:			; <UNDEFINED> instruction: 0x00011bb4
   117ac:	andeq	r1, r1, ip, ror #23
   117b0:			; <UNDEFINED> instruction: 0x000117bc
   117b4:			; <UNDEFINED> instruction: 0x000117bc
   117b8:			; <UNDEFINED> instruction: 0x000117bc
   117bc:	cmp	r8, #10
   117c0:	beq	117e4 <abort@plt+0xa30>
   117c4:	mov	r1, r8
   117c8:	ldr	r0, [pc, #3428]	; 12534 <abort@plt+0x1780>
   117cc:	bl	115e0 <abort@plt+0x82c>
   117d0:	mov	r1, r8
   117d4:	str	r0, [sp, #80]	; 0x50
   117d8:	ldr	r0, [pc, #3420]	; 1253c <abort@plt+0x1788>
   117dc:	bl	115e0 <abort@plt+0x82c>
   117e0:	str	r0, [sp, #76]	; 0x4c
   117e4:	cmp	r4, #0
   117e8:	movne	r4, #0
   117ec:	beq	12bfc <abort@plt+0x1e48>
   117f0:	ldr	r7, [sp, #76]	; 0x4c
   117f4:	mov	r5, #0
   117f8:	mov	r6, #1
   117fc:	mov	r0, r7
   11800:	str	r6, [sp, #40]	; 0x28
   11804:	str	r5, [sp, #68]	; 0x44
   11808:	bl	10d00 <strlen@plt>
   1180c:	str	r6, [sp, #28]
   11810:	str	r5, [sp, #44]	; 0x2c
   11814:	str	r5, [sp, #72]	; 0x48
   11818:	str	r7, [sp, #60]	; 0x3c
   1181c:	str	r0, [sp, #52]	; 0x34
   11820:	str	r8, [sp, #160]	; 0xa0
   11824:	mov	r8, fp
   11828:	ldr	fp, [sp, #160]	; 0xa0
   1182c:	mov	r9, #0
   11830:	ldr	r3, [sp, #24]
   11834:	cmn	r3, #1
   11838:	beq	11da0 <abort@plt+0xfec>
   1183c:	ldr	r3, [sp, #24]
   11840:	subs	r6, r3, r9
   11844:	movne	r6, #1
   11848:	cmp	r6, #0
   1184c:	beq	11db8 <abort@plt+0x1004>
   11850:	ldr	r7, [sp, #28]
   11854:	ldr	r0, [sp, #36]	; 0x24
   11858:	cmp	fp, #2
   1185c:	moveq	r7, #0
   11860:	andne	r7, r7, #1
   11864:	add	r3, r0, r9
   11868:	cmp	r7, #0
   1186c:	str	r3, [sp, #48]	; 0x30
   11870:	beq	1225c <abort@plt+0x14a8>
   11874:	ldr	r2, [sp, #52]	; 0x34
   11878:	cmp	r2, #0
   1187c:	beq	12540 <abort@plt+0x178c>
   11880:	ldr	r1, [sp, #24]
   11884:	cmp	r2, #1
   11888:	mov	r3, r2
   1188c:	movls	r3, #0
   11890:	movhi	r3, #1
   11894:	cmn	r1, #1
   11898:	movne	r3, #0
   1189c:	cmp	r3, #0
   118a0:	add	r5, r9, r2
   118a4:	beq	118b0 <abort@plt+0xafc>
   118a8:	bl	10d00 <strlen@plt>
   118ac:	str	r0, [sp, #24]
   118b0:	ldr	r3, [sp, #24]
   118b4:	cmp	r5, r3
   118b8:	bhi	12540 <abort@plt+0x178c>
   118bc:	ldr	r2, [sp, #52]	; 0x34
   118c0:	ldr	r1, [sp, #60]	; 0x3c
   118c4:	ldr	r0, [sp, #48]	; 0x30
   118c8:	bl	10c1c <memcmp@plt>
   118cc:	cmp	r0, #0
   118d0:	bne	12540 <abort@plt+0x178c>
   118d4:	ldr	r3, [sp, #32]
   118d8:	cmp	r3, #0
   118dc:	bne	12dfc <abort@plt+0x2048>
   118e0:	ldr	r3, [sp, #48]	; 0x30
   118e4:	ldrb	r5, [r3]
   118e8:	cmp	r5, #126	; 0x7e
   118ec:	ldrls	pc, [pc, r5, lsl #2]
   118f0:	b	121c0 <abort@plt+0x140c>
   118f4:	andeq	r2, r1, ip, lsr #1
   118f8:	andeq	r2, r1, r0, asr #3
   118fc:	andeq	r2, r1, r0, asr #3
   11900:	andeq	r2, r1, r0, asr #3
   11904:	andeq	r2, r1, r0, asr #3
   11908:	andeq	r2, r1, r0, asr #3
   1190c:	andeq	r2, r1, r0, asr #3
   11910:	andeq	r2, r1, r8, ror r1
   11914:	andeq	r2, r1, r8, ror #2
   11918:	andeq	r2, r1, r8, rrx
   1191c:	andeq	r2, r1, r0, lsr r0
   11920:	andeq	r2, r1, r8, lsl #1
   11924:	andeq	r2, r1, r0, ror r0
   11928:	andeq	r1, r1, r0, lsr #31
   1192c:	andeq	r2, r1, r0, asr #3
   11930:	andeq	r2, r1, r0, asr #3
   11934:	andeq	r2, r1, r0, asr #3
   11938:	andeq	r2, r1, r0, asr #3
   1193c:	andeq	r2, r1, r0, asr #3
   11940:	andeq	r2, r1, r0, asr #3
   11944:	andeq	r2, r1, r0, asr #3
   11948:	andeq	r2, r1, r0, asr #3
   1194c:	andeq	r2, r1, r0, asr #3
   11950:	andeq	r2, r1, r0, asr #3
   11954:	andeq	r2, r1, r0, asr #3
   11958:	andeq	r2, r1, r0, asr #3
   1195c:	andeq	r2, r1, r0, asr #3
   11960:	andeq	r2, r1, r0, asr #3
   11964:	andeq	r2, r1, r0, asr #3
   11968:	andeq	r2, r1, r0, asr #3
   1196c:	andeq	r2, r1, r0, asr #3
   11970:	andeq	r2, r1, r0, asr #3
   11974:	andeq	r2, r1, r0, lsl #3
   11978:	muleq	r1, r4, r0
   1197c:	muleq	r1, r4, r0
   11980:	muleq	r1, r8, r1
   11984:	muleq	r1, r4, r0
   11988:			; <UNDEFINED> instruction: 0x000121b4
   1198c:	muleq	r1, r4, r0
   11990:	ldrdeq	r1, [r1], -r4
   11994:	muleq	r1, r4, r0
   11998:	muleq	r1, r4, r0
   1199c:	muleq	r1, r4, r0
   119a0:			; <UNDEFINED> instruction: 0x000121b4
   119a4:			; <UNDEFINED> instruction: 0x000121b4
   119a8:			; <UNDEFINED> instruction: 0x000121b4
   119ac:			; <UNDEFINED> instruction: 0x000121b4
   119b0:			; <UNDEFINED> instruction: 0x000121b4
   119b4:			; <UNDEFINED> instruction: 0x000121b4
   119b8:			; <UNDEFINED> instruction: 0x000121b4
   119bc:			; <UNDEFINED> instruction: 0x000121b4
   119c0:			; <UNDEFINED> instruction: 0x000121b4
   119c4:			; <UNDEFINED> instruction: 0x000121b4
   119c8:			; <UNDEFINED> instruction: 0x000121b4
   119cc:			; <UNDEFINED> instruction: 0x000121b4
   119d0:			; <UNDEFINED> instruction: 0x000121b4
   119d4:			; <UNDEFINED> instruction: 0x000121b4
   119d8:			; <UNDEFINED> instruction: 0x000121b4
   119dc:			; <UNDEFINED> instruction: 0x000121b4
   119e0:	muleq	r1, r4, r0
   119e4:	muleq	r1, r4, r0
   119e8:	muleq	r1, r4, r0
   119ec:	muleq	r1, r4, r0
   119f0:	andeq	r1, r1, r8, lsr #29
   119f4:	andeq	r2, r1, r0, asr #3
   119f8:			; <UNDEFINED> instruction: 0x000121b4
   119fc:			; <UNDEFINED> instruction: 0x000121b4
   11a00:			; <UNDEFINED> instruction: 0x000121b4
   11a04:			; <UNDEFINED> instruction: 0x000121b4
   11a08:			; <UNDEFINED> instruction: 0x000121b4
   11a0c:			; <UNDEFINED> instruction: 0x000121b4
   11a10:			; <UNDEFINED> instruction: 0x000121b4
   11a14:			; <UNDEFINED> instruction: 0x000121b4
   11a18:			; <UNDEFINED> instruction: 0x000121b4
   11a1c:			; <UNDEFINED> instruction: 0x000121b4
   11a20:			; <UNDEFINED> instruction: 0x000121b4
   11a24:			; <UNDEFINED> instruction: 0x000121b4
   11a28:			; <UNDEFINED> instruction: 0x000121b4
   11a2c:			; <UNDEFINED> instruction: 0x000121b4
   11a30:			; <UNDEFINED> instruction: 0x000121b4
   11a34:			; <UNDEFINED> instruction: 0x000121b4
   11a38:			; <UNDEFINED> instruction: 0x000121b4
   11a3c:			; <UNDEFINED> instruction: 0x000121b4
   11a40:			; <UNDEFINED> instruction: 0x000121b4
   11a44:			; <UNDEFINED> instruction: 0x000121b4
   11a48:			; <UNDEFINED> instruction: 0x000121b4
   11a4c:			; <UNDEFINED> instruction: 0x000121b4
   11a50:			; <UNDEFINED> instruction: 0x000121b4
   11a54:			; <UNDEFINED> instruction: 0x000121b4
   11a58:			; <UNDEFINED> instruction: 0x000121b4
   11a5c:			; <UNDEFINED> instruction: 0x000121b4
   11a60:	muleq	r1, r4, r0
   11a64:	andeq	r1, r1, r0, ror #28
   11a68:			; <UNDEFINED> instruction: 0x000121b4
   11a6c:	muleq	r1, r4, r0
   11a70:			; <UNDEFINED> instruction: 0x000121b4
   11a74:	muleq	r1, r4, r0
   11a78:			; <UNDEFINED> instruction: 0x000121b4
   11a7c:			; <UNDEFINED> instruction: 0x000121b4
   11a80:			; <UNDEFINED> instruction: 0x000121b4
   11a84:			; <UNDEFINED> instruction: 0x000121b4
   11a88:			; <UNDEFINED> instruction: 0x000121b4
   11a8c:			; <UNDEFINED> instruction: 0x000121b4
   11a90:			; <UNDEFINED> instruction: 0x000121b4
   11a94:			; <UNDEFINED> instruction: 0x000121b4
   11a98:			; <UNDEFINED> instruction: 0x000121b4
   11a9c:			; <UNDEFINED> instruction: 0x000121b4
   11aa0:			; <UNDEFINED> instruction: 0x000121b4
   11aa4:			; <UNDEFINED> instruction: 0x000121b4
   11aa8:			; <UNDEFINED> instruction: 0x000121b4
   11aac:			; <UNDEFINED> instruction: 0x000121b4
   11ab0:			; <UNDEFINED> instruction: 0x000121b4
   11ab4:			; <UNDEFINED> instruction: 0x000121b4
   11ab8:			; <UNDEFINED> instruction: 0x000121b4
   11abc:			; <UNDEFINED> instruction: 0x000121b4
   11ac0:			; <UNDEFINED> instruction: 0x000121b4
   11ac4:			; <UNDEFINED> instruction: 0x000121b4
   11ac8:			; <UNDEFINED> instruction: 0x000121b4
   11acc:			; <UNDEFINED> instruction: 0x000121b4
   11ad0:			; <UNDEFINED> instruction: 0x000121b4
   11ad4:			; <UNDEFINED> instruction: 0x000121b4
   11ad8:			; <UNDEFINED> instruction: 0x000121b4
   11adc:			; <UNDEFINED> instruction: 0x000121b4
   11ae0:	andeq	r1, r1, r8, ror ip
   11ae4:	muleq	r1, r4, r0
   11ae8:	andeq	r1, r1, r8, ror ip
   11aec:	muleq	r1, r8, r1
   11af0:	cmp	r4, #0
   11af4:	moveq	r3, #1
   11af8:	streq	r3, [sp, #28]
   11afc:	beq	12228 <abort@plt+0x1474>
   11b00:	mov	r3, #0
   11b04:	mov	r4, r3
   11b08:	mov	r2, #1
   11b0c:	str	r2, [sp, #40]	; 0x28
   11b10:	str	r3, [sp, #68]	; 0x44
   11b14:	str	r2, [sp, #32]
   11b18:	str	r2, [sp, #52]	; 0x34
   11b1c:	ldr	r3, [pc, #2584]	; 1253c <abort@plt+0x1788>
   11b20:	str	r4, [sp, #44]	; 0x2c
   11b24:	str	r4, [sp, #72]	; 0x48
   11b28:	str	r4, [sp, #28]
   11b2c:	str	r3, [sp, #60]	; 0x3c
   11b30:	mov	r8, #2
   11b34:	b	11820 <abort@plt+0xa6c>
   11b38:	cmp	r4, #0
   11b3c:	bne	12dc8 <abort@plt+0x2014>
   11b40:	cmp	sl, #0
   11b44:	beq	12b88 <abort@plt+0x1dd4>
   11b48:	mov	r3, #34	; 0x22
   11b4c:	strb	r3, [fp]
   11b50:	ldr	r3, [pc, #2528]	; 12538 <abort@plt+0x1784>
   11b54:	mov	r1, r4
   11b58:	mov	r2, #1
   11b5c:	str	r4, [sp, #68]	; 0x44
   11b60:	str	r2, [sp, #40]	; 0x28
   11b64:	mov	r4, r2
   11b68:	str	r1, [sp, #44]	; 0x2c
   11b6c:	str	r1, [sp, #72]	; 0x48
   11b70:	str	r1, [sp, #32]
   11b74:	str	r2, [sp, #28]
   11b78:	str	r2, [sp, #52]	; 0x34
   11b7c:	str	r3, [sp, #60]	; 0x3c
   11b80:	b	11820 <abort@plt+0xa6c>
   11b84:	mov	r3, #0
   11b88:	str	r3, [sp, #68]	; 0x44
   11b8c:	str	r3, [sp, #44]	; 0x2c
   11b90:	str	r3, [sp, #32]
   11b94:	str	r3, [sp, #28]
   11b98:	str	r3, [sp, #60]	; 0x3c
   11b9c:	mov	r3, #1
   11ba0:	str	r8, [sp, #72]	; 0x48
   11ba4:	str	r8, [sp, #52]	; 0x34
   11ba8:	mov	r4, r8
   11bac:	str	r3, [sp, #40]	; 0x28
   11bb0:	b	11820 <abort@plt+0xa6c>
   11bb4:	mov	r3, #1
   11bb8:	str	r3, [sp, #40]	; 0x28
   11bbc:	str	r3, [sp, #32]
   11bc0:	str	r3, [sp, #28]
   11bc4:	str	r3, [sp, #52]	; 0x34
   11bc8:	ldr	r3, [pc, #2408]	; 12538 <abort@plt+0x1784>
   11bcc:	mov	r2, #0
   11bd0:	mov	r4, r2
   11bd4:	str	r2, [sp, #68]	; 0x44
   11bd8:	str	r2, [sp, #44]	; 0x2c
   11bdc:	str	r2, [sp, #72]	; 0x48
   11be0:	str	r3, [sp, #60]	; 0x3c
   11be4:	mov	r8, #5
   11be8:	b	11820 <abort@plt+0xa6c>
   11bec:	mov	r3, #0
   11bf0:	mov	r2, #1
   11bf4:	str	r2, [sp, #40]	; 0x28
   11bf8:	mov	r4, r3
   11bfc:	str	r3, [sp, #68]	; 0x44
   11c00:	str	r2, [sp, #28]
   11c04:	str	r3, [sp, #44]	; 0x2c
   11c08:	str	r3, [sp, #72]	; 0x48
   11c0c:	str	r3, [sp, #32]
   11c10:	str	r3, [sp, #52]	; 0x34
   11c14:	str	r3, [sp, #60]	; 0x3c
   11c18:	b	11820 <abort@plt+0xa6c>
   11c1c:	mov	r2, #1
   11c20:	mov	r3, #0
   11c24:	str	r2, [sp, #40]	; 0x28
   11c28:	mov	r4, r3
   11c2c:	str	r3, [sp, #68]	; 0x44
   11c30:	str	r8, [sp, #52]	; 0x34
   11c34:	str	r2, [sp, #32]
   11c38:	b	11b1c <abort@plt+0xd68>
   11c3c:	mov	r3, #1
   11c40:	str	r3, [sp, #40]	; 0x28
   11c44:	str	r3, [sp, #32]
   11c48:	str	r3, [sp, #28]
   11c4c:	str	r3, [sp, #52]	; 0x34
   11c50:	ldr	r3, [pc, #2276]	; 1253c <abort@plt+0x1788>
   11c54:	mov	r2, #0
   11c58:	mov	r4, r2
   11c5c:	str	r2, [sp, #68]	; 0x44
   11c60:	str	r2, [sp, #44]	; 0x2c
   11c64:	str	r2, [sp, #72]	; 0x48
   11c68:	str	r3, [sp, #60]	; 0x3c
   11c6c:	mov	r8, #2
   11c70:	b	11820 <abort@plt+0xa6c>
   11c74:	mov	r7, #0
   11c78:	ldr	r3, [sp, #24]
   11c7c:	cmn	r3, #1
   11c80:	beq	127bc <abort@plt+0x1a08>
   11c84:	ldr	r3, [sp, #24]
   11c88:	subs	r3, r3, #1
   11c8c:	movne	r3, #1
   11c90:	cmp	r3, #0
   11c94:	sub	r2, fp, #2
   11c98:	clz	r2, r2
   11c9c:	lsr	r2, r2, #5
   11ca0:	bne	11e9c <abort@plt+0x10e8>
   11ca4:	cmp	r9, #0
   11ca8:	bne	11e9c <abort@plt+0x10e8>
   11cac:	ldr	r3, [sp, #32]
   11cb0:	tst	r3, r2
   11cb4:	bne	11fbc <abort@plt+0x1208>
   11cb8:	ldr	r3, [sp, #28]
   11cbc:	eor	r3, r3, #1
   11cc0:	orr	r3, r2, r3
   11cc4:	ldr	r2, [sp, #32]
   11cc8:	eor	r3, r3, #1
   11ccc:	orrs	r3, r2, r3
   11cd0:	beq	11d00 <abort@plt+0xf4c>
   11cd4:	mov	r3, #0
   11cd8:	ldr	r1, [sp, #56]	; 0x38
   11cdc:	cmp	r1, #0
   11ce0:	beq	11d00 <abort@plt+0xf4c>
   11ce4:	lsr	r2, r5, #5
   11ce8:	and	r0, r5, #31
   11cec:	uxtb	r2, r2
   11cf0:	ldr	r1, [r1, r2, lsl #2]
   11cf4:	lsr	r2, r1, r0
   11cf8:	tst	r2, #1
   11cfc:	bne	11d08 <abort@plt+0xf54>
   11d00:	cmp	r7, #0
   11d04:	beq	11f58 <abort@plt+0x11a4>
   11d08:	sub	r2, fp, #2
   11d0c:	clz	r2, r2
   11d10:	lsr	r2, r2, #5
   11d14:	ldr	r3, [sp, #32]
   11d18:	cmp	r3, #0
   11d1c:	bne	12048 <abort@plt+0x1294>
   11d20:	ldr	r3, [sp, #44]	; 0x2c
   11d24:	eor	r3, r3, #1
   11d28:	ands	r3, r2, r3
   11d2c:	beq	11d64 <abort@plt+0xfb0>
   11d30:	cmp	sl, r4
   11d34:	movhi	r2, #39	; 0x27
   11d38:	strbhi	r2, [r8, r4]
   11d3c:	add	r2, r4, #1
   11d40:	cmp	r2, sl
   11d44:	movcc	r1, #36	; 0x24
   11d48:	strbcc	r1, [r8, r2]
   11d4c:	add	r2, r4, #2
   11d50:	cmp	r2, sl
   11d54:	add	r4, r4, #3
   11d58:	movcc	r1, #39	; 0x27
   11d5c:	strbcc	r1, [r8, r2]
   11d60:	str	r3, [sp, #44]	; 0x2c
   11d64:	cmp	r4, sl
   11d68:	movcc	r3, #92	; 0x5c
   11d6c:	strbcc	r3, [r8, r4]
   11d70:	add	r9, r9, #1
   11d74:	add	r4, r4, #1
   11d78:	cmp	r4, sl
   11d7c:	ldr	r3, [sp, #40]	; 0x28
   11d80:	strbcc	r5, [r8, r4]
   11d84:	cmp	r6, #0
   11d88:	moveq	r3, #0
   11d8c:	str	r3, [sp, #40]	; 0x28
   11d90:	ldr	r3, [sp, #24]
   11d94:	add	r4, r4, #1
   11d98:	cmn	r3, #1
   11d9c:	bne	1183c <abort@plt+0xa88>
   11da0:	ldr	r3, [sp, #36]	; 0x24
   11da4:	ldrb	r6, [r3, r9]
   11da8:	adds	r6, r6, #0
   11dac:	movne	r6, #1
   11db0:	cmp	r6, #0
   11db4:	bne	11850 <abort@plt+0xa9c>
   11db8:	str	fp, [sp, #160]	; 0xa0
   11dbc:	mov	fp, r8
   11dc0:	ldr	r8, [sp, #160]	; 0xa0
   11dc4:	ldr	r1, [sp, #32]
   11dc8:	cmp	r4, #0
   11dcc:	sub	r2, r8, #2
   11dd0:	clz	r2, r2
   11dd4:	lsr	r2, r2, #5
   11dd8:	andeq	r3, r2, r1
   11ddc:	movne	r3, #0
   11de0:	cmp	r3, #0
   11de4:	bne	12ed0 <abort@plt+0x211c>
   11de8:	eor	r3, r1, #1
   11dec:	ands	r2, r2, r3
   11df0:	beq	12e0c <abort@plt+0x2058>
   11df4:	ldr	r3, [sp, #68]	; 0x44
   11df8:	cmp	r3, #0
   11dfc:	beq	12e10 <abort@plt+0x205c>
   11e00:	ldr	r3, [sp, #40]	; 0x28
   11e04:	cmp	r3, #0
   11e08:	bne	12e8c <abort@plt+0x20d8>
   11e0c:	ldr	r3, [sp, #72]	; 0x48
   11e10:	adds	r3, r3, #0
   11e14:	movne	r3, #1
   11e18:	cmp	sl, #0
   11e1c:	movne	r3, #0
   11e20:	cmp	r3, #0
   11e24:	ldreq	r2, [sp, #68]	; 0x44
   11e28:	beq	12e10 <abort@plt+0x205c>
   11e2c:	ldr	sl, [sp, #72]	; 0x48
   11e30:	str	r3, [sp, #68]	; 0x44
   11e34:	ldr	r3, [pc, #1792]	; 1253c <abort@plt+0x1788>
   11e38:	mov	r2, #39	; 0x27
   11e3c:	mov	r4, #1
   11e40:	str	r3, [sp, #60]	; 0x3c
   11e44:	mov	r3, #0
   11e48:	strb	r2, [fp]
   11e4c:	str	r4, [sp, #52]	; 0x34
   11e50:	mov	r8, #2
   11e54:	str	r3, [sp, #32]
   11e58:	b	11820 <abort@plt+0xa6c>
   11e5c:	mov	r7, #0
   11e60:	cmp	fp, #2
   11e64:	beq	1279c <abort@plt+0x19e8>
   11e68:	ldr	r3, [sp, #52]	; 0x34
   11e6c:	ldr	r2, [sp, #28]
   11e70:	ldr	r1, [sp, #32]
   11e74:	cmp	r3, #0
   11e78:	andne	r2, r2, r1
   11e7c:	moveq	r2, #0
   11e80:	cmp	r2, #0
   11e84:	moveq	r5, #92	; 0x5c
   11e88:	moveq	r3, r5
   11e8c:	bne	127a8 <abort@plt+0x19f4>
   11e90:	ldr	r1, [sp, #28]
   11e94:	cmp	r1, #0
   11e98:	bne	12f18 <abort@plt+0x2164>
   11e9c:	mov	r6, #0
   11ea0:	b	11cb8 <abort@plt+0xf04>
   11ea4:	mov	r7, #0
   11ea8:	cmp	fp, #2
   11eac:	beq	1280c <abort@plt+0x1a58>
   11eb0:	cmp	fp, #5
   11eb4:	beq	127d0 <abort@plt+0x1a1c>
   11eb8:	sub	r2, fp, #2
   11ebc:	mov	r6, #0
   11ec0:	clz	r2, r2
   11ec4:	mov	r5, #63	; 0x3f
   11ec8:	lsr	r2, r2, #5
   11ecc:	b	11cb8 <abort@plt+0xf04>
   11ed0:	mov	r7, #0
   11ed4:	cmp	fp, #2
   11ed8:	strne	r6, [sp, #68]	; 0x44
   11edc:	movne	r2, #0
   11ee0:	movne	r5, #39	; 0x27
   11ee4:	bne	11cb8 <abort@plt+0xf04>
   11ee8:	ldr	r3, [sp, #32]
   11eec:	cmp	r3, #0
   11ef0:	bne	12bec <abort@plt+0x1e38>
   11ef4:	cmp	sl, #0
   11ef8:	ldr	r3, [sp, #72]	; 0x48
   11efc:	clz	r3, r3
   11f00:	lsr	r3, r3, #5
   11f04:	moveq	r3, #0
   11f08:	cmp	r3, #0
   11f0c:	bne	12b20 <abort@plt+0x1d6c>
   11f10:	cmp	sl, r4
   11f14:	movhi	r3, #39	; 0x27
   11f18:	strbhi	r3, [r8, r4]
   11f1c:	add	r3, r4, #1
   11f20:	cmp	sl, r3
   11f24:	movhi	r2, #92	; 0x5c
   11f28:	strbhi	r2, [r8, r3]
   11f2c:	add	r3, r4, #2
   11f30:	cmp	sl, r3
   11f34:	movhi	r2, #39	; 0x27
   11f38:	strbhi	r2, [r8, r3]
   11f3c:	mov	r3, #0
   11f40:	cmp	r7, #0
   11f44:	add	r4, r4, #3
   11f48:	str	r3, [sp, #44]	; 0x2c
   11f4c:	str	r6, [sp, #68]	; 0x44
   11f50:	mov	r5, #39	; 0x27
   11f54:	bne	11d08 <abort@plt+0xf54>
   11f58:	ldr	r2, [sp, #44]	; 0x2c
   11f5c:	eor	r3, r3, #1
   11f60:	and	r3, r3, r2
   11f64:	add	r9, r9, #1
   11f68:	uxtb	r3, r3
   11f6c:	cmp	r3, #0
   11f70:	beq	11d78 <abort@plt+0xfc4>
   11f74:	cmp	sl, r4
   11f78:	movhi	r3, #39	; 0x27
   11f7c:	strbhi	r3, [r8, r4]
   11f80:	add	r3, r4, #1
   11f84:	cmp	sl, r3
   11f88:	movhi	r2, #39	; 0x27
   11f8c:	strbhi	r2, [r8, r3]
   11f90:	mov	r3, #0
   11f94:	add	r4, r4, #2
   11f98:	str	r3, [sp, #44]	; 0x2c
   11f9c:	b	11d78 <abort@plt+0xfc4>
   11fa0:	mov	r3, #114	; 0x72
   11fa4:	ldr	r1, [sp, #32]
   11fa8:	sub	r2, fp, #2
   11fac:	clz	r2, r2
   11fb0:	lsr	r2, r2, #5
   11fb4:	tst	r2, r1
   11fb8:	beq	11e90 <abort@plt+0x10dc>
   11fbc:	mov	fp, r8
   11fc0:	mov	r8, #2
   11fc4:	ldr	r3, [sp, #28]
   11fc8:	cmp	r3, #0
   11fcc:	movne	r8, #4
   11fd0:	ldr	r3, [sp, #164]	; 0xa4
   11fd4:	mov	ip, #0
   11fd8:	bic	r3, r3, #2
   11fdc:	str	r3, [sp, #4]
   11fe0:	ldr	r3, [sp, #76]	; 0x4c
   11fe4:	str	r8, [sp]
   11fe8:	str	r3, [sp, #16]
   11fec:	ldr	r3, [sp, #80]	; 0x50
   11ff0:	ldr	r2, [sp, #36]	; 0x24
   11ff4:	str	r3, [sp, #12]
   11ff8:	mov	r1, sl
   11ffc:	ldr	r3, [sp, #24]
   12000:	mov	r0, fp
   12004:	str	ip, [sp, #8]
   12008:	bl	11728 <abort@plt+0x974>
   1200c:	mov	r4, r0
   12010:	ldr	r3, [pc, #1304]	; 12530 <abort@plt+0x177c>
   12014:	ldr	r2, [sp, #116]	; 0x74
   12018:	mov	r0, r4
   1201c:	ldr	r3, [r3]
   12020:	cmp	r2, r3
   12024:	bne	12f14 <abort@plt+0x2160>
   12028:	add	sp, sp, #124	; 0x7c
   1202c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12030:	mov	r5, #110	; 0x6e
   12034:	ldr	r3, [sp, #32]
   12038:	mov	r2, #0
   1203c:	cmp	r3, #0
   12040:	mov	r6, r2
   12044:	beq	11d20 <abort@plt+0xf6c>
   12048:	str	fp, [sp, #160]	; 0xa0
   1204c:	mov	fp, r8
   12050:	ldr	r8, [sp, #160]	; 0xa0
   12054:	mov	r3, r2
   12058:	ldr	r2, [sp, #28]
   1205c:	and	r2, r2, r3
   12060:	str	r2, [sp, #28]
   12064:	b	11fc4 <abort@plt+0x1210>
   12068:	mov	r5, #116	; 0x74
   1206c:	b	12034 <abort@plt+0x1280>
   12070:	mov	r5, #102	; 0x66
   12074:	ldr	r3, [sp, #32]
   12078:	cmp	r3, #0
   1207c:	bne	12c28 <abort@plt+0x1e74>
   12080:	mov	r6, #0
   12084:	b	11d64 <abort@plt+0xfb0>
   12088:	mov	r5, #118	; 0x76
   1208c:	b	12074 <abort@plt+0x12c0>
   12090:	mov	r7, #0
   12094:	mov	r6, #0
   12098:	b	11cd4 <abort@plt+0xf20>
   1209c:	ldr	r3, [sp, #32]
   120a0:	cmp	r3, #0
   120a4:	bne	12e6c <abort@plt+0x20b8>
   120a8:	mov	r7, r3
   120ac:	ldr	r3, [sp, #44]	; 0x2c
   120b0:	sub	r2, fp, #2
   120b4:	eor	r3, r3, #1
   120b8:	clz	r2, r2
   120bc:	lsr	r2, r2, #5
   120c0:	ands	r3, r2, r3
   120c4:	beq	12b0c <abort@plt+0x1d58>
   120c8:	cmp	sl, r4
   120cc:	movhi	r1, #39	; 0x27
   120d0:	strbhi	r1, [r8, r4]
   120d4:	add	r1, r4, #1
   120d8:	cmp	sl, r1
   120dc:	movhi	r0, #36	; 0x24
   120e0:	strbhi	r0, [r8, r1]
   120e4:	add	r1, r4, #2
   120e8:	cmp	sl, r1
   120ec:	movhi	r0, #39	; 0x27
   120f0:	strbhi	r0, [r8, r1]
   120f4:	add	r1, r4, #3
   120f8:	cmp	sl, r1
   120fc:	bls	12b6c <abort@plt+0x1db8>
   12100:	mov	r4, r1
   12104:	mov	r1, #92	; 0x5c
   12108:	strb	r1, [r8, r4]
   1210c:	mov	r1, r4
   12110:	str	r3, [sp, #44]	; 0x2c
   12114:	cmp	fp, #2
   12118:	add	r4, r4, #1
   1211c:	beq	12bb4 <abort@plt+0x1e00>
   12120:	ldr	r0, [sp, #24]
   12124:	add	r3, r9, #1
   12128:	cmp	r3, r0
   1212c:	bcs	12144 <abort@plt+0x1390>
   12130:	ldr	r0, [sp, #36]	; 0x24
   12134:	ldrb	r3, [r0, r3]
   12138:	sub	r3, r3, #48	; 0x30
   1213c:	cmp	r3, #9
   12140:	bls	12bc4 <abort@plt+0x1e10>
   12144:	mov	r5, #48	; 0x30
   12148:	ldr	r3, [sp, #28]
   1214c:	eor	r3, r3, #1
   12150:	orrs	r2, r2, r3
   12154:	mov	r3, r6
   12158:	moveq	r6, r2
   1215c:	beq	11cd8 <abort@plt+0xf24>
   12160:	mov	r6, #0
   12164:	b	11d00 <abort@plt+0xf4c>
   12168:	mov	r2, #0
   1216c:	mov	r6, r2
   12170:	mov	r5, #98	; 0x62
   12174:	b	11d20 <abort@plt+0xf6c>
   12178:	mov	r5, #97	; 0x61
   1217c:	b	12080 <abort@plt+0x12cc>
   12180:	mov	r3, r7
   12184:	mov	r6, r7
   12188:	mov	r2, #0
   1218c:	mov	r7, r3
   12190:	mov	r5, #32
   12194:	b	11cb8 <abort@plt+0xf04>
   12198:	cmp	r9, #0
   1219c:	mov	r3, r7
   121a0:	bne	12768 <abort@plt+0x19b4>
   121a4:	mov	r6, r7
   121a8:	mov	r2, r9
   121ac:	mov	r7, r3
   121b0:	b	11cb8 <abort@plt+0xf04>
   121b4:	mov	r6, r7
   121b8:	b	11cd4 <abort@plt+0xf20>
   121bc:	mov	r7, #0
   121c0:	ldr	r3, [sp, #64]	; 0x40
   121c4:	cmp	r3, #1
   121c8:	bne	12824 <abort@plt+0x1a70>
   121cc:	bl	10ce8 <__ctype_b_loc@plt>
   121d0:	ldr	r2, [sp, #64]	; 0x40
   121d4:	sxth	r3, r5
   121d8:	mov	ip, r2
   121dc:	lsl	r3, r3, #1
   121e0:	ldr	r2, [r0]
   121e4:	ldrh	r3, [r2, r3]
   121e8:	and	r3, r3, #16384	; 0x4000
   121ec:	cmp	r3, #0
   121f0:	ldr	r3, [sp, #28]
   121f4:	movne	r6, #1
   121f8:	moveq	r6, #0
   121fc:	movne	r2, #0
   12200:	andeq	r2, r3, #1
   12204:	cmp	r2, #0
   12208:	bne	12b34 <abort@plt+0x1d80>
   1220c:	sub	r2, fp, #2
   12210:	clz	r2, r2
   12214:	lsr	r2, r2, #5
   12218:	b	11cb8 <abort@plt+0xf04>
   1221c:	cmp	r4, #0
   12220:	bne	12ee0 <abort@plt+0x212c>
   12224:	str	r4, [sp, #28]
   12228:	cmp	sl, #0
   1222c:	bne	12f24 <abort@plt+0x2170>
   12230:	ldr	r3, [pc, #772]	; 1253c <abort@plt+0x1788>
   12234:	mov	r4, #1
   12238:	str	r4, [sp, #40]	; 0x28
   1223c:	str	r3, [sp, #60]	; 0x3c
   12240:	str	r4, [sp, #52]	; 0x34
   12244:	str	sl, [sp, #72]	; 0x48
   12248:	str	sl, [sp, #68]	; 0x44
   1224c:	str	sl, [sp, #44]	; 0x2c
   12250:	str	sl, [sp, #32]
   12254:	mov	r8, #2
   12258:	b	11820 <abort@plt+0xa6c>
   1225c:	ldr	r3, [sp, #36]	; 0x24
   12260:	ldrb	r5, [r3, r9]
   12264:	cmp	r5, #126	; 0x7e
   12268:	ldrls	pc, [pc, r5, lsl #2]
   1226c:	b	121c0 <abort@plt+0x140c>
   12270:	andeq	r2, r1, r4, lsr #9
   12274:	andeq	r2, r1, r0, asr #3
   12278:	andeq	r2, r1, r0, asr #3
   1227c:	andeq	r2, r1, r0, asr #3
   12280:	andeq	r2, r1, r0, asr #3
   12284:	andeq	r2, r1, r0, asr #3
   12288:	andeq	r2, r1, r0, asr #3
   1228c:	muleq	r1, r0, r4
   12290:	andeq	r2, r1, ip, ror r4
   12294:	andeq	r2, r1, r4, ror r4
   12298:	andeq	r2, r1, ip, ror #8
   1229c:	andeq	r2, r1, ip, lsl r5
   122a0:	andeq	r2, r1, r8, lsl #10
   122a4:	andeq	r1, r1, r0, lsr #31
   122a8:	andeq	r2, r1, r0, asr #3
   122ac:	andeq	r2, r1, r0, asr #3
   122b0:	andeq	r2, r1, r0, asr #3
   122b4:	andeq	r2, r1, r0, asr #3
   122b8:	andeq	r2, r1, r0, asr #3
   122bc:	andeq	r2, r1, r0, asr #3
   122c0:	andeq	r2, r1, r0, asr #3
   122c4:	andeq	r2, r1, r0, asr #3
   122c8:	andeq	r2, r1, r0, asr #3
   122cc:	andeq	r2, r1, r0, asr #3
   122d0:	andeq	r2, r1, r0, asr #3
   122d4:	andeq	r2, r1, r0, asr #3
   122d8:	andeq	r2, r1, r0, asr #3
   122dc:	andeq	r2, r1, r0, asr #3
   122e0:	andeq	r2, r1, r0, asr #3
   122e4:	andeq	r2, r1, r0, asr #3
   122e8:	andeq	r2, r1, r0, asr #3
   122ec:	andeq	r2, r1, r0, asr #3
   122f0:	strdeq	r2, [r1], -r8
   122f4:	andeq	r2, r1, r4, ror #9
   122f8:	andeq	r2, r1, r4, ror #9
   122fc:	ldrdeq	r2, [r1], -r4
   12300:	andeq	r2, r1, r4, ror #9
   12304:	andeq	r2, r1, ip, lsl #4
   12308:	andeq	r2, r1, r4, ror #9
   1230c:	ldrdeq	r1, [r1], -r4
   12310:	andeq	r2, r1, r4, ror #9
   12314:	andeq	r2, r1, r4, ror #9
   12318:	andeq	r2, r1, r4, ror #9
   1231c:	andeq	r2, r1, ip, lsl #4
   12320:	andeq	r2, r1, ip, lsl #4
   12324:	andeq	r2, r1, ip, lsl #4
   12328:	andeq	r2, r1, ip, lsl #4
   1232c:	andeq	r2, r1, ip, lsl #4
   12330:	andeq	r2, r1, ip, lsl #4
   12334:	andeq	r2, r1, ip, lsl #4
   12338:	andeq	r2, r1, ip, lsl #4
   1233c:	andeq	r2, r1, ip, lsl #4
   12340:	andeq	r2, r1, ip, lsl #4
   12344:	andeq	r2, r1, ip, lsl #4
   12348:	andeq	r2, r1, ip, lsl #4
   1234c:	andeq	r2, r1, ip, lsl #4
   12350:	andeq	r2, r1, ip, lsl #4
   12354:	andeq	r2, r1, ip, lsl #4
   12358:	andeq	r2, r1, ip, lsl #4
   1235c:	andeq	r2, r1, r4, ror #9
   12360:	andeq	r2, r1, r4, ror #9
   12364:	andeq	r2, r1, r4, ror #9
   12368:	andeq	r2, r1, r4, ror #9
   1236c:	andeq	r1, r1, r8, lsr #29
   12370:	andeq	r2, r1, r0, asr #3
   12374:	andeq	r2, r1, ip, lsl #4
   12378:	andeq	r2, r1, ip, lsl #4
   1237c:	andeq	r2, r1, ip, lsl #4
   12380:	andeq	r2, r1, ip, lsl #4
   12384:	andeq	r2, r1, ip, lsl #4
   12388:	andeq	r2, r1, ip, lsl #4
   1238c:	andeq	r2, r1, ip, lsl #4
   12390:	andeq	r2, r1, ip, lsl #4
   12394:	andeq	r2, r1, ip, lsl #4
   12398:	andeq	r2, r1, ip, lsl #4
   1239c:	andeq	r2, r1, ip, lsl #4
   123a0:	andeq	r2, r1, ip, lsl #4
   123a4:	andeq	r2, r1, ip, lsl #4
   123a8:	andeq	r2, r1, ip, lsl #4
   123ac:	andeq	r2, r1, ip, lsl #4
   123b0:	andeq	r2, r1, ip, lsl #4
   123b4:	andeq	r2, r1, ip, lsl #4
   123b8:	andeq	r2, r1, ip, lsl #4
   123bc:	andeq	r2, r1, ip, lsl #4
   123c0:	andeq	r2, r1, ip, lsl #4
   123c4:	andeq	r2, r1, ip, lsl #4
   123c8:	andeq	r2, r1, ip, lsl #4
   123cc:	andeq	r2, r1, ip, lsl #4
   123d0:	andeq	r2, r1, ip, lsl #4
   123d4:	andeq	r2, r1, ip, lsl #4
   123d8:	andeq	r2, r1, ip, lsl #4
   123dc:	andeq	r2, r1, r4, ror #9
   123e0:	andeq	r1, r1, r0, ror #28
   123e4:	andeq	r2, r1, ip, lsl #4
   123e8:	andeq	r2, r1, r4, ror #9
   123ec:	andeq	r2, r1, ip, lsl #4
   123f0:	andeq	r2, r1, r4, ror #9
   123f4:	andeq	r2, r1, ip, lsl #4
   123f8:	andeq	r2, r1, ip, lsl #4
   123fc:	andeq	r2, r1, ip, lsl #4
   12400:	andeq	r2, r1, ip, lsl #4
   12404:	andeq	r2, r1, ip, lsl #4
   12408:	andeq	r2, r1, ip, lsl #4
   1240c:	andeq	r2, r1, ip, lsl #4
   12410:	andeq	r2, r1, ip, lsl #4
   12414:	andeq	r2, r1, ip, lsl #4
   12418:	andeq	r2, r1, ip, lsl #4
   1241c:	andeq	r2, r1, ip, lsl #4
   12420:	andeq	r2, r1, ip, lsl #4
   12424:	andeq	r2, r1, ip, lsl #4
   12428:	andeq	r2, r1, ip, lsl #4
   1242c:	andeq	r2, r1, ip, lsl #4
   12430:	andeq	r2, r1, ip, lsl #4
   12434:	andeq	r2, r1, ip, lsl #4
   12438:	andeq	r2, r1, ip, lsl #4
   1243c:	andeq	r2, r1, ip, lsl #4
   12440:	andeq	r2, r1, ip, lsl #4
   12444:	andeq	r2, r1, ip, lsl #4
   12448:	andeq	r2, r1, ip, lsl #4
   1244c:	andeq	r2, r1, ip, lsl #4
   12450:	andeq	r2, r1, ip, lsl #4
   12454:	andeq	r2, r1, ip, lsl #4
   12458:	andeq	r2, r1, ip, lsl #4
   1245c:	andeq	r1, r1, r8, ror ip
   12460:	andeq	r2, r1, r4, ror #9
   12464:	andeq	r1, r1, r8, ror ip
   12468:	ldrdeq	r2, [r1], -r4
   1246c:	mov	r3, #110	; 0x6e
   12470:	b	11fa4 <abort@plt+0x11f0>
   12474:	mov	r3, #116	; 0x74
   12478:	b	11fa4 <abort@plt+0x11f0>
   1247c:	sub	r2, fp, #2
   12480:	mov	r3, #98	; 0x62
   12484:	clz	r2, r2
   12488:	lsr	r2, r2, #5
   1248c:	b	11e90 <abort@plt+0x10dc>
   12490:	sub	r2, fp, #2
   12494:	mov	r3, #97	; 0x61
   12498:	clz	r2, r2
   1249c:	lsr	r2, r2, #5
   124a0:	b	11e90 <abort@plt+0x10dc>
   124a4:	ldr	r3, [sp, #28]
   124a8:	cmp	r3, #0
   124ac:	bne	1209c <abort@plt+0x12e8>
   124b0:	ldr	r3, [sp, #164]	; 0xa4
   124b4:	tst	r3, #1
   124b8:	bne	12b2c <abort@plt+0x1d78>
   124bc:	ldr	r6, [sp, #28]
   124c0:	sub	r2, fp, #2
   124c4:	mov	r7, r6
   124c8:	clz	r2, r2
   124cc:	lsr	r2, r2, #5
   124d0:	b	11cb8 <abort@plt+0xf04>
   124d4:	sub	r2, fp, #2
   124d8:	clz	r2, r2
   124dc:	lsr	r2, r2, #5
   124e0:	b	11ca4 <abort@plt+0xef0>
   124e4:	sub	r2, fp, #2
   124e8:	mov	r6, #0
   124ec:	clz	r2, r2
   124f0:	lsr	r2, r2, #5
   124f4:	b	11cac <abort@plt+0xef8>
   124f8:	sub	r2, fp, #2
   124fc:	clz	r2, r2
   12500:	lsr	r2, r2, #5
   12504:	b	11cac <abort@plt+0xef8>
   12508:	sub	r2, fp, #2
   1250c:	mov	r3, #102	; 0x66
   12510:	clz	r2, r2
   12514:	lsr	r2, r2, #5
   12518:	b	11e90 <abort@plt+0x10dc>
   1251c:	sub	r2, fp, #2
   12520:	mov	r3, #118	; 0x76
   12524:	clz	r2, r2
   12528:	lsr	r2, r2, #5
   1252c:	b	11e90 <abort@plt+0x10dc>
   12530:	andeq	r4, r2, r8, lsl #30
   12534:	andeq	r4, r1, ip, asr sl
   12538:	andeq	r4, r1, r4, asr #20
   1253c:	andeq	r4, r1, r8, asr sl
   12540:	ldr	r3, [sp, #48]	; 0x30
   12544:	ldrb	r5, [r3]
   12548:	cmp	r5, #126	; 0x7e
   1254c:	ldrls	pc, [pc, r5, lsl #2]
   12550:	b	121bc <abort@plt+0x1408>
   12554:	muleq	r1, ip, r0
   12558:			; <UNDEFINED> instruction: 0x000121bc
   1255c:			; <UNDEFINED> instruction: 0x000121bc
   12560:			; <UNDEFINED> instruction: 0x000121bc
   12564:			; <UNDEFINED> instruction: 0x000121bc
   12568:			; <UNDEFINED> instruction: 0x000121bc
   1256c:			; <UNDEFINED> instruction: 0x000121bc
   12570:	muleq	r1, r4, r7
   12574:	andeq	r2, r1, ip, lsl #15
   12578:	andeq	r2, r1, r8, rrx
   1257c:	andeq	r2, r1, r0, lsr r0
   12580:	andeq	r2, r1, r8, lsl #1
   12584:	andeq	r2, r1, r0, ror r0
   12588:	andeq	r2, r1, r0, lsl #15
   1258c:			; <UNDEFINED> instruction: 0x000121bc
   12590:			; <UNDEFINED> instruction: 0x000121bc
   12594:			; <UNDEFINED> instruction: 0x000121bc
   12598:			; <UNDEFINED> instruction: 0x000121bc
   1259c:			; <UNDEFINED> instruction: 0x000121bc
   125a0:			; <UNDEFINED> instruction: 0x000121bc
   125a4:			; <UNDEFINED> instruction: 0x000121bc
   125a8:			; <UNDEFINED> instruction: 0x000121bc
   125ac:			; <UNDEFINED> instruction: 0x000121bc
   125b0:			; <UNDEFINED> instruction: 0x000121bc
   125b4:			; <UNDEFINED> instruction: 0x000121bc
   125b8:			; <UNDEFINED> instruction: 0x000121bc
   125bc:			; <UNDEFINED> instruction: 0x000121bc
   125c0:			; <UNDEFINED> instruction: 0x000121bc
   125c4:			; <UNDEFINED> instruction: 0x000121bc
   125c8:			; <UNDEFINED> instruction: 0x000121bc
   125cc:			; <UNDEFINED> instruction: 0x000121bc
   125d0:			; <UNDEFINED> instruction: 0x000121bc
   125d4:	andeq	r2, r1, r8, ror r7
   125d8:	muleq	r1, r0, r0
   125dc:	muleq	r1, r0, r0
   125e0:	andeq	r2, r1, ip, asr r7
   125e4:	muleq	r1, r0, r0
   125e8:	andeq	r2, r1, r0, asr r7
   125ec:	muleq	r1, r0, r0
   125f0:	ldrdeq	r1, [r1], -r0
   125f4:	muleq	r1, r0, r0
   125f8:	muleq	r1, r0, r0
   125fc:	muleq	r1, r0, r0
   12600:	andeq	r2, r1, r0, asr r7
   12604:	andeq	r2, r1, r0, asr r7
   12608:	andeq	r2, r1, r0, asr r7
   1260c:	andeq	r2, r1, r0, asr r7
   12610:	andeq	r2, r1, r0, asr r7
   12614:	andeq	r2, r1, r0, asr r7
   12618:	andeq	r2, r1, r0, asr r7
   1261c:	andeq	r2, r1, r0, asr r7
   12620:	andeq	r2, r1, r0, asr r7
   12624:	andeq	r2, r1, r0, asr r7
   12628:	andeq	r2, r1, r0, asr r7
   1262c:	andeq	r2, r1, r0, asr r7
   12630:	andeq	r2, r1, r0, asr r7
   12634:	andeq	r2, r1, r0, asr r7
   12638:	andeq	r2, r1, r0, asr r7
   1263c:	andeq	r2, r1, r0, asr r7
   12640:	muleq	r1, r0, r0
   12644:	muleq	r1, r0, r0
   12648:	muleq	r1, r0, r0
   1264c:	muleq	r1, r0, r0
   12650:	andeq	r1, r1, r4, lsr #29
   12654:			; <UNDEFINED> instruction: 0x000121bc
   12658:	andeq	r2, r1, r0, asr r7
   1265c:	andeq	r2, r1, r0, asr r7
   12660:	andeq	r2, r1, r0, asr r7
   12664:	andeq	r2, r1, r0, asr r7
   12668:	andeq	r2, r1, r0, asr r7
   1266c:	andeq	r2, r1, r0, asr r7
   12670:	andeq	r2, r1, r0, asr r7
   12674:	andeq	r2, r1, r0, asr r7
   12678:	andeq	r2, r1, r0, asr r7
   1267c:	andeq	r2, r1, r0, asr r7
   12680:	andeq	r2, r1, r0, asr r7
   12684:	andeq	r2, r1, r0, asr r7
   12688:	andeq	r2, r1, r0, asr r7
   1268c:	andeq	r2, r1, r0, asr r7
   12690:	andeq	r2, r1, r0, asr r7
   12694:	andeq	r2, r1, r0, asr r7
   12698:	andeq	r2, r1, r0, asr r7
   1269c:	andeq	r2, r1, r0, asr r7
   126a0:	andeq	r2, r1, r0, asr r7
   126a4:	andeq	r2, r1, r0, asr r7
   126a8:	andeq	r2, r1, r0, asr r7
   126ac:	andeq	r2, r1, r0, asr r7
   126b0:	andeq	r2, r1, r0, asr r7
   126b4:	andeq	r2, r1, r0, asr r7
   126b8:	andeq	r2, r1, r0, asr r7
   126bc:	andeq	r2, r1, r0, asr r7
   126c0:	muleq	r1, r0, r0
   126c4:	andeq	r1, r1, ip, asr lr
   126c8:	andeq	r2, r1, r0, asr r7
   126cc:	muleq	r1, r0, r0
   126d0:	andeq	r2, r1, r0, asr r7
   126d4:	muleq	r1, r0, r0
   126d8:	andeq	r2, r1, r0, asr r7
   126dc:	andeq	r2, r1, r0, asr r7
   126e0:	andeq	r2, r1, r0, asr r7
   126e4:	andeq	r2, r1, r0, asr r7
   126e8:	andeq	r2, r1, r0, asr r7
   126ec:	andeq	r2, r1, r0, asr r7
   126f0:	andeq	r2, r1, r0, asr r7
   126f4:	andeq	r2, r1, r0, asr r7
   126f8:	andeq	r2, r1, r0, asr r7
   126fc:	andeq	r2, r1, r0, asr r7
   12700:	andeq	r2, r1, r0, asr r7
   12704:	andeq	r2, r1, r0, asr r7
   12708:	andeq	r2, r1, r0, asr r7
   1270c:	andeq	r2, r1, r0, asr r7
   12710:	andeq	r2, r1, r0, asr r7
   12714:	andeq	r2, r1, r0, asr r7
   12718:	andeq	r2, r1, r0, asr r7
   1271c:	andeq	r2, r1, r0, asr r7
   12720:	andeq	r2, r1, r0, asr r7
   12724:	andeq	r2, r1, r0, asr r7
   12728:	andeq	r2, r1, r0, asr r7
   1272c:	andeq	r2, r1, r0, asr r7
   12730:	andeq	r2, r1, r0, asr r7
   12734:	andeq	r2, r1, r0, asr r7
   12738:	andeq	r2, r1, r0, asr r7
   1273c:	andeq	r2, r1, r0, asr r7
   12740:	andeq	r1, r1, r4, ror ip
   12744:	muleq	r1, r0, r0
   12748:	andeq	r1, r1, r4, ror ip
   1274c:	andeq	r2, r1, ip, asr r7
   12750:	mov	r6, r7
   12754:	mov	r7, #0
   12758:	b	11cd4 <abort@plt+0xf20>
   1275c:	cmp	r9, #0
   12760:	mov	r3, #0
   12764:	beq	121a4 <abort@plt+0x13f0>
   12768:	mov	r6, #0
   1276c:	mov	r7, r3
   12770:	mov	r3, r6
   12774:	b	11cd8 <abort@plt+0xf24>
   12778:	mov	r3, #0
   1277c:	b	12184 <abort@plt+0x13d0>
   12780:	mov	r7, #0
   12784:	mov	r3, #114	; 0x72
   12788:	b	11fa4 <abort@plt+0x11f0>
   1278c:	mov	r5, #98	; 0x62
   12790:	b	12034 <abort@plt+0x1280>
   12794:	mov	r5, #97	; 0x61
   12798:	b	12074 <abort@plt+0x12c0>
   1279c:	ldr	r3, [sp, #32]
   127a0:	cmp	r3, #0
   127a4:	bne	12bec <abort@plt+0x1e38>
   127a8:	add	r9, r9, #1
   127ac:	ldr	r3, [sp, #44]	; 0x2c
   127b0:	mov	r6, #0
   127b4:	mov	r5, #92	; 0x5c
   127b8:	b	11f6c <abort@plt+0x11b8>
   127bc:	ldr	r3, [sp, #36]	; 0x24
   127c0:	ldrb	r3, [r3, #1]
   127c4:	adds	r3, r3, #0
   127c8:	movne	r3, #1
   127cc:	b	11c90 <abort@plt+0xedc>
   127d0:	ldr	r3, [sp, #164]	; 0xa4
   127d4:	ands	r3, r3, #4
   127d8:	beq	127fc <abort@plt+0x1a48>
   127dc:	ldr	r2, [sp, #24]
   127e0:	add	r3, r9, #2
   127e4:	cmp	r3, r2
   127e8:	bcs	127fc <abort@plt+0x1a48>
   127ec:	ldr	r2, [sp, #48]	; 0x30
   127f0:	ldrb	r5, [r2, #1]
   127f4:	cmp	r5, #63	; 0x3f
   127f8:	beq	12c60 <abort@plt+0x1eac>
   127fc:	mov	r2, #0
   12800:	mov	r6, r2
   12804:	mov	r5, #63	; 0x3f
   12808:	b	11cb8 <abort@plt+0xf04>
   1280c:	ldr	r3, [sp, #32]
   12810:	cmp	r3, #0
   12814:	bne	12bec <abort@plt+0x1e38>
   12818:	mov	r6, r3
   1281c:	mov	r5, #63	; 0x3f
   12820:	b	11d00 <abort@plt+0xf4c>
   12824:	ldr	r3, [sp, #24]
   12828:	cmn	r3, #1
   1282c:	mov	r3, #0
   12830:	str	r3, [sp, #108]	; 0x6c
   12834:	str	r3, [sp, #112]	; 0x70
   12838:	bne	12848 <abort@plt+0x1a94>
   1283c:	ldr	r0, [sp, #36]	; 0x24
   12840:	bl	10d00 <strlen@plt>
   12844:	str	r0, [sp, #24]
   12848:	mov	r3, #0
   1284c:	str	sl, [sp, #88]	; 0x58
   12850:	ldr	sl, [sp, #36]	; 0x24
   12854:	str	r5, [sp, #92]	; 0x5c
   12858:	mov	r5, r3
   1285c:	str	r7, [sp, #96]	; 0x60
   12860:	str	r4, [sp, #100]	; 0x64
   12864:	str	r8, [sp, #84]	; 0x54
   12868:	ldr	r3, [sp, #24]
   1286c:	add	r4, r9, r5
   12870:	add	r7, sl, r4
   12874:	sub	r2, r3, r4
   12878:	mov	r1, r7
   1287c:	add	r3, sp, #108	; 0x6c
   12880:	add	r0, sp, #104	; 0x68
   12884:	bl	13f60 <abort@plt+0x31ac>
   12888:	subs	r8, r0, #0
   1288c:	beq	128dc <abort@plt+0x1b28>
   12890:	cmn	r8, #1
   12894:	beq	12c3c <abort@plt+0x1e88>
   12898:	cmn	r8, #2
   1289c:	beq	12d5c <abort@plt+0x1fa8>
   128a0:	ldr	r3, [sp, #32]
   128a4:	cmp	fp, #2
   128a8:	movne	r3, #0
   128ac:	andeq	r3, r3, #1
   128b0:	cmp	r3, #0
   128b4:	bne	12a3c <abort@plt+0x1c88>
   128b8:	ldr	r0, [sp, #104]	; 0x68
   128bc:	bl	10c58 <iswprint@plt>
   128c0:	add	r5, r5, r8
   128c4:	cmp	r0, #0
   128c8:	add	r0, sp, #108	; 0x6c
   128cc:	moveq	r6, #0
   128d0:	bl	10c10 <mbsinit@plt>
   128d4:	cmp	r0, #0
   128d8:	beq	12868 <abort@plt+0x1ab4>
   128dc:	ldr	r3, [sp, #28]
   128e0:	mov	ip, r5
   128e4:	eor	r2, r6, #1
   128e8:	ldr	r5, [sp, #92]	; 0x5c
   128ec:	ldr	r7, [sp, #96]	; 0x60
   128f0:	ldr	r4, [sp, #100]	; 0x64
   128f4:	ldr	r8, [sp, #84]	; 0x54
   128f8:	ldr	sl, [sp, #88]	; 0x58
   128fc:	and	r2, r2, r3
   12900:	cmp	ip, #1
   12904:	bls	12204 <abort@plt+0x1450>
   12908:	add	r1, ip, r9
   1290c:	ldr	lr, [sp, #48]	; 0x30
   12910:	mov	r0, #0
   12914:	str	r6, [sp, #48]	; 0x30
   12918:	mov	ip, #39	; 0x27
   1291c:	ldr	r6, [sp, #44]	; 0x2c
   12920:	b	129d8 <abort@plt+0x1c24>
   12924:	ldr	r0, [sp, #32]
   12928:	sub	r3, fp, #2
   1292c:	cmp	r0, #0
   12930:	clz	r3, r3
   12934:	lsr	r3, r3, #5
   12938:	bne	12b40 <abort@plt+0x1d8c>
   1293c:	eor	r0, r6, #1
   12940:	ands	r3, r3, r0
   12944:	beq	12974 <abort@plt+0x1bc0>
   12948:	add	r0, r4, #1
   1294c:	cmp	sl, r4
   12950:	strbhi	ip, [r8, r4]
   12954:	cmp	sl, r0
   12958:	movhi	r6, #36	; 0x24
   1295c:	strbhi	r6, [r8, r0]
   12960:	add	r0, r4, #2
   12964:	mov	r6, r3
   12968:	add	r4, r4, #3
   1296c:	cmp	sl, r0
   12970:	strbhi	ip, [r8, r0]
   12974:	cmp	sl, r4
   12978:	movhi	r3, #92	; 0x5c
   1297c:	strbhi	r3, [r8, r4]
   12980:	add	r3, r4, #1
   12984:	cmp	sl, r3
   12988:	lsrhi	r0, r5, #6
   1298c:	addhi	r0, r0, #48	; 0x30
   12990:	strbhi	r0, [r8, r3]
   12994:	add	r0, r4, #2
   12998:	cmp	sl, r0
   1299c:	lsrhi	r3, r5, #3
   129a0:	andhi	r3, r3, #7
   129a4:	addhi	r3, r3, #48	; 0x30
   129a8:	add	r9, r9, #1
   129ac:	strbhi	r3, [r8, r0]
   129b0:	and	r5, r5, #7
   129b4:	cmp	r9, r1
   129b8:	add	r5, r5, #48	; 0x30
   129bc:	add	r4, r4, #3
   129c0:	bcs	12b60 <abort@plt+0x1dac>
   129c4:	mov	r0, r2
   129c8:	cmp	sl, r4
   129cc:	strbhi	r5, [r8, r4]
   129d0:	ldrb	r5, [lr, #1]!
   129d4:	add	r4, r4, #1
   129d8:	cmp	r2, #0
   129dc:	bne	12924 <abort@plt+0x1b70>
   129e0:	eor	r3, r0, #1
   129e4:	and	r3, r3, r6
   129e8:	cmp	r7, #0
   129ec:	uxtb	r3, r3
   129f0:	beq	12a04 <abort@plt+0x1c50>
   129f4:	cmp	sl, r4
   129f8:	movhi	r7, #92	; 0x5c
   129fc:	strbhi	r7, [r8, r4]
   12a00:	add	r4, r4, #1
   12a04:	add	r9, r9, #1
   12a08:	cmp	r9, r1
   12a0c:	bcs	12b54 <abort@plt+0x1da0>
   12a10:	cmp	r3, #0
   12a14:	beq	12b80 <abort@plt+0x1dcc>
   12a18:	cmp	sl, r4
   12a1c:	add	r3, r4, #1
   12a20:	strbhi	ip, [r8, r4]
   12a24:	mov	r7, #0
   12a28:	cmp	sl, r3
   12a2c:	strbhi	ip, [r8, r3]
   12a30:	add	r4, r4, #2
   12a34:	mov	r6, r7
   12a38:	b	129c8 <abort@plt+0x1c14>
   12a3c:	cmp	r8, #1
   12a40:	beq	128b8 <abort@plt+0x1b04>
   12a44:	add	r1, r4, #1
   12a48:	add	r3, sl, r8
   12a4c:	add	r1, sl, r1
   12a50:	add	r4, r3, r4
   12a54:	ldrb	r3, [r1], #1
   12a58:	sub	r3, r3, #91	; 0x5b
   12a5c:	cmp	r3, #33	; 0x21
   12a60:	ldrls	pc, [pc, r3, lsl #2]
   12a64:	b	12af0 <abort@plt+0x1d3c>
   12a68:	strdeq	r2, [r1], -ip
   12a6c:	strdeq	r2, [r1], -ip
   12a70:	strdeq	r2, [r1], -r0
   12a74:	strdeq	r2, [r1], -ip
   12a78:	strdeq	r2, [r1], -r0
   12a7c:	strdeq	r2, [r1], -ip
   12a80:	strdeq	r2, [r1], -r0
   12a84:	strdeq	r2, [r1], -r0
   12a88:	strdeq	r2, [r1], -r0
   12a8c:	strdeq	r2, [r1], -r0
   12a90:	strdeq	r2, [r1], -r0
   12a94:	strdeq	r2, [r1], -r0
   12a98:	strdeq	r2, [r1], -r0
   12a9c:	strdeq	r2, [r1], -r0
   12aa0:	strdeq	r2, [r1], -r0
   12aa4:	strdeq	r2, [r1], -r0
   12aa8:	strdeq	r2, [r1], -r0
   12aac:	strdeq	r2, [r1], -r0
   12ab0:	strdeq	r2, [r1], -r0
   12ab4:	strdeq	r2, [r1], -r0
   12ab8:	strdeq	r2, [r1], -r0
   12abc:	strdeq	r2, [r1], -r0
   12ac0:	strdeq	r2, [r1], -r0
   12ac4:	strdeq	r2, [r1], -r0
   12ac8:	strdeq	r2, [r1], -r0
   12acc:	strdeq	r2, [r1], -r0
   12ad0:	strdeq	r2, [r1], -r0
   12ad4:	strdeq	r2, [r1], -r0
   12ad8:	strdeq	r2, [r1], -r0
   12adc:	strdeq	r2, [r1], -r0
   12ae0:	strdeq	r2, [r1], -r0
   12ae4:	strdeq	r2, [r1], -r0
   12ae8:	strdeq	r2, [r1], -r0
   12aec:	strdeq	r2, [r1], -ip
   12af0:	cmp	r4, r1
   12af4:	bne	12a54 <abort@plt+0x1ca0>
   12af8:	b	128b8 <abort@plt+0x1b04>
   12afc:	ldr	fp, [sp, #84]	; 0x54
   12b00:	ldr	sl, [sp, #88]	; 0x58
   12b04:	mov	r8, #2
   12b08:	b	11fc4 <abort@plt+0x1210>
   12b0c:	cmp	sl, r4
   12b10:	movls	r1, r4
   12b14:	bls	12114 <abort@plt+0x1360>
   12b18:	ldr	r3, [sp, #44]	; 0x2c
   12b1c:	b	12104 <abort@plt+0x1350>
   12b20:	str	sl, [sp, #72]	; 0x48
   12b24:	ldr	sl, [sp, #32]
   12b28:	b	11f3c <abort@plt+0x1188>
   12b2c:	add	r9, r9, #1
   12b30:	b	11830 <abort@plt+0xa7c>
   12b34:	ldr	r2, [sp, #28]
   12b38:	mov	r6, #0
   12b3c:	b	12908 <abort@plt+0x1b54>
   12b40:	str	fp, [sp, #160]	; 0xa0
   12b44:	str	r3, [sp, #28]
   12b48:	mov	fp, r8
   12b4c:	ldr	r8, [sp, #160]	; 0xa0
   12b50:	b	11fc4 <abort@plt+0x1210>
   12b54:	str	r6, [sp, #44]	; 0x2c
   12b58:	ldr	r6, [sp, #48]	; 0x30
   12b5c:	b	11f6c <abort@plt+0x11b8>
   12b60:	str	r6, [sp, #44]	; 0x2c
   12b64:	ldr	r6, [sp, #48]	; 0x30
   12b68:	b	11d78 <abort@plt+0xfc4>
   12b6c:	add	r4, r4, #4
   12b70:	str	r3, [sp, #44]	; 0x2c
   12b74:	mov	r6, #0
   12b78:	mov	r5, #48	; 0x30
   12b7c:	b	11d00 <abort@plt+0xf4c>
   12b80:	mov	r7, r3
   12b84:	b	129c8 <abort@plt+0x1c14>
   12b88:	ldr	r3, [pc, #-1624]	; 12538 <abort@plt+0x1784>
   12b8c:	mov	r4, #1
   12b90:	str	r4, [sp, #40]	; 0x28
   12b94:	str	r4, [sp, #28]
   12b98:	str	r4, [sp, #52]	; 0x34
   12b9c:	str	sl, [sp, #72]	; 0x48
   12ba0:	str	sl, [sp, #68]	; 0x44
   12ba4:	str	sl, [sp, #44]	; 0x2c
   12ba8:	str	sl, [sp, #32]
   12bac:	str	r3, [sp, #60]	; 0x3c
   12bb0:	b	11820 <abort@plt+0xa6c>
   12bb4:	mov	r3, r6
   12bb8:	mov	r5, #48	; 0x30
   12bbc:	mov	r6, #0
   12bc0:	b	11d00 <abort@plt+0xf4c>
   12bc4:	cmp	sl, r4
   12bc8:	movhi	r3, #48	; 0x30
   12bcc:	strbhi	r3, [r8, r4]
   12bd0:	add	r3, r1, #2
   12bd4:	cmp	sl, r3
   12bd8:	movhi	r0, #48	; 0x30
   12bdc:	strbhi	r0, [r8, r3]
   12be0:	add	r4, r1, #3
   12be4:	mov	r5, #48	; 0x30
   12be8:	b	12148 <abort@plt+0x1394>
   12bec:	str	fp, [sp, #160]	; 0xa0
   12bf0:	mov	fp, r8
   12bf4:	ldr	r8, [sp, #160]	; 0xa0
   12bf8:	b	11fc4 <abort@plt+0x1210>
   12bfc:	ldr	r2, [sp, #80]	; 0x50
   12c00:	ldrb	r3, [r2]
   12c04:	cmp	r3, #0
   12c08:	beq	117f0 <abort@plt+0xa3c>
   12c0c:	cmp	sl, r4
   12c10:	strbhi	r3, [fp, r4]
   12c14:	ldrb	r3, [r2, #1]!
   12c18:	add	r4, r4, #1
   12c1c:	cmp	r3, #0
   12c20:	bne	12c0c <abort@plt+0x1e58>
   12c24:	b	117f0 <abort@plt+0xa3c>
   12c28:	str	fp, [sp, #160]	; 0xa0
   12c2c:	mov	r3, #0
   12c30:	mov	fp, r8
   12c34:	ldr	r8, [sp, #160]	; 0xa0
   12c38:	b	12058 <abort@plt+0x12a4>
   12c3c:	mov	ip, r5
   12c40:	ldr	r7, [sp, #96]	; 0x60
   12c44:	ldr	r5, [sp, #92]	; 0x5c
   12c48:	ldr	r4, [sp, #100]	; 0x64
   12c4c:	ldr	r8, [sp, #84]	; 0x54
   12c50:	ldr	sl, [sp, #88]	; 0x58
   12c54:	ldr	r2, [sp, #28]
   12c58:	mov	r6, #0
   12c5c:	b	12900 <abort@plt+0x1b4c>
   12c60:	ldr	r2, [sp, #36]	; 0x24
   12c64:	ldrb	r1, [r2, r3]
   12c68:	sub	r2, r1, #33	; 0x21
   12c6c:	cmp	r2, #29
   12c70:	ldrls	pc, [pc, r2, lsl #2]
   12c74:	b	12d50 <abort@plt+0x1f9c>
   12c78:	strdeq	r2, [r1], -r0
   12c7c:	andeq	r2, r1, r0, asr sp
   12c80:	andeq	r2, r1, r0, asr sp
   12c84:	andeq	r2, r1, r0, asr sp
   12c88:	andeq	r2, r1, r0, asr sp
   12c8c:	andeq	r2, r1, r0, asr sp
   12c90:	strdeq	r2, [r1], -r0
   12c94:	strdeq	r2, [r1], -r0
   12c98:	strdeq	r2, [r1], -r0
   12c9c:	andeq	r2, r1, r0, asr sp
   12ca0:	andeq	r2, r1, r0, asr sp
   12ca4:	andeq	r2, r1, r0, asr sp
   12ca8:	strdeq	r2, [r1], -r0
   12cac:	andeq	r2, r1, r0, asr sp
   12cb0:	strdeq	r2, [r1], -r0
   12cb4:	andeq	r2, r1, r0, asr sp
   12cb8:	andeq	r2, r1, r0, asr sp
   12cbc:	andeq	r2, r1, r0, asr sp
   12cc0:	andeq	r2, r1, r0, asr sp
   12cc4:	andeq	r2, r1, r0, asr sp
   12cc8:	andeq	r2, r1, r0, asr sp
   12ccc:	andeq	r2, r1, r0, asr sp
   12cd0:	andeq	r2, r1, r0, asr sp
   12cd4:	andeq	r2, r1, r0, asr sp
   12cd8:	andeq	r2, r1, r0, asr sp
   12cdc:	andeq	r2, r1, r0, asr sp
   12ce0:	andeq	r2, r1, r0, asr sp
   12ce4:	strdeq	r2, [r1], -r0
   12ce8:	strdeq	r2, [r1], -r0
   12cec:	strdeq	r2, [r1], -r0
   12cf0:	ldr	r2, [sp, #32]
   12cf4:	cmp	r2, #0
   12cf8:	bne	12dfc <abort@plt+0x2048>
   12cfc:	cmp	sl, r4
   12d00:	movhi	r2, #63	; 0x3f
   12d04:	strbhi	r2, [r8, r4]
   12d08:	add	r2, r4, #1
   12d0c:	cmp	sl, r2
   12d10:	movhi	r0, #34	; 0x22
   12d14:	strbhi	r0, [r8, r2]
   12d18:	add	r2, r4, #2
   12d1c:	cmp	sl, r2
   12d20:	movhi	r0, #34	; 0x22
   12d24:	strbhi	r0, [r8, r2]
   12d28:	add	r2, r4, #3
   12d2c:	cmp	sl, r2
   12d30:	movhi	r0, #63	; 0x3f
   12d34:	strbhi	r0, [r8, r2]
   12d38:	mov	r2, #0
   12d3c:	add	r4, r4, #4
   12d40:	mov	r5, r1
   12d44:	mov	r9, r3
   12d48:	mov	r6, r2
   12d4c:	b	12148 <abort@plt+0x1394>
   12d50:	mov	r2, #0
   12d54:	mov	r6, r2
   12d58:	b	11cb8 <abort@plt+0xf04>
   12d5c:	ldr	r0, [sp, #24]
   12d60:	mov	r1, r4
   12d64:	cmp	r1, r0
   12d68:	mov	r2, r7
   12d6c:	mov	r3, r5
   12d70:	mov	ip, r5
   12d74:	ldr	r7, [sp, #96]	; 0x60
   12d78:	ldr	r5, [sp, #92]	; 0x5c
   12d7c:	ldr	r4, [sp, #100]	; 0x64
   12d80:	ldr	r8, [sp, #84]	; 0x54
   12d84:	ldr	sl, [sp, #88]	; 0x58
   12d88:	bcs	12dbc <abort@plt+0x2008>
   12d8c:	ldrb	r6, [r2]
   12d90:	cmp	r6, #0
   12d94:	bne	12da8 <abort@plt+0x1ff4>
   12d98:	b	12ed8 <abort@plt+0x2124>
   12d9c:	ldrb	r6, [r2, #1]!
   12da0:	cmp	r6, #0
   12da4:	beq	12e60 <abort@plt+0x20ac>
   12da8:	add	r3, r3, #1
   12dac:	add	r1, r9, r3
   12db0:	cmp	r1, r0
   12db4:	bcc	12d9c <abort@plt+0x1fe8>
   12db8:	mov	ip, r3
   12dbc:	ldr	r2, [sp, #28]
   12dc0:	mov	r6, #0
   12dc4:	b	12900 <abort@plt+0x1b4c>
   12dc8:	mov	r3, #1
   12dcc:	str	r3, [sp, #40]	; 0x28
   12dd0:	str	r3, [sp, #32]
   12dd4:	str	r3, [sp, #28]
   12dd8:	str	r3, [sp, #52]	; 0x34
   12ddc:	ldr	r3, [pc, #-2220]	; 12538 <abort@plt+0x1784>
   12de0:	mov	r2, #0
   12de4:	str	r2, [sp, #68]	; 0x44
   12de8:	str	r2, [sp, #44]	; 0x2c
   12dec:	str	r2, [sp, #72]	; 0x48
   12df0:	mov	r4, r2
   12df4:	str	r3, [sp, #60]	; 0x3c
   12df8:	b	11820 <abort@plt+0xa6c>
   12dfc:	str	fp, [sp, #160]	; 0xa0
   12e00:	mov	fp, r8
   12e04:	ldr	r8, [sp, #160]	; 0xa0
   12e08:	b	11fd0 <abort@plt+0x121c>
   12e0c:	mov	r2, r3
   12e10:	ldr	r3, [sp, #60]	; 0x3c
   12e14:	cmp	r3, #0
   12e18:	moveq	r2, #0
   12e1c:	andne	r2, r2, #1
   12e20:	cmp	r2, #0
   12e24:	beq	12e50 <abort@plt+0x209c>
   12e28:	mov	r2, r3
   12e2c:	ldrb	r3, [r3]
   12e30:	cmp	r3, #0
   12e34:	beq	12e50 <abort@plt+0x209c>
   12e38:	cmp	sl, r4
   12e3c:	strbhi	r3, [fp, r4]
   12e40:	ldrb	r3, [r2, #1]!
   12e44:	add	r4, r4, #1
   12e48:	cmp	r3, #0
   12e4c:	bne	12e38 <abort@plt+0x2084>
   12e50:	cmp	sl, r4
   12e54:	movhi	r3, #0
   12e58:	strbhi	r3, [fp, r4]
   12e5c:	b	12010 <abort@plt+0x125c>
   12e60:	mov	ip, r3
   12e64:	ldr	r2, [sp, #28]
   12e68:	b	12900 <abort@plt+0x1b4c>
   12e6c:	str	fp, [sp, #160]	; 0xa0
   12e70:	mov	fp, r8
   12e74:	ldr	r8, [sp, #160]	; 0xa0
   12e78:	sub	r3, r8, #2
   12e7c:	clz	r3, r3
   12e80:	lsr	r3, r3, #5
   12e84:	str	r3, [sp, #28]
   12e88:	b	11fc4 <abort@plt+0x1210>
   12e8c:	ldr	r3, [sp, #76]	; 0x4c
   12e90:	mov	ip, #5
   12e94:	str	r3, [sp, #16]
   12e98:	ldr	r3, [sp, #80]	; 0x50
   12e9c:	ldr	r2, [sp, #36]	; 0x24
   12ea0:	str	r3, [sp, #12]
   12ea4:	ldr	r3, [sp, #56]	; 0x38
   12ea8:	ldr	r1, [sp, #72]	; 0x48
   12eac:	str	r3, [sp, #8]
   12eb0:	ldr	r3, [sp, #164]	; 0xa4
   12eb4:	mov	r0, fp
   12eb8:	str	r3, [sp, #4]
   12ebc:	str	ip, [sp]
   12ec0:	ldr	r3, [sp, #24]
   12ec4:	bl	11728 <abort@plt+0x974>
   12ec8:	mov	r4, r0
   12ecc:	b	12010 <abort@plt+0x125c>
   12ed0:	mov	r8, #2
   12ed4:	b	11fc4 <abort@plt+0x1210>
   12ed8:	ldr	r2, [sp, #28]
   12edc:	b	12900 <abort@plt+0x1b4c>
   12ee0:	mov	r3, #0
   12ee4:	str	r3, [sp, #68]	; 0x44
   12ee8:	str	r3, [sp, #44]	; 0x2c
   12eec:	str	r3, [sp, #72]	; 0x48
   12ef0:	str	r3, [sp, #28]
   12ef4:	mov	r4, r3
   12ef8:	ldr	r3, [pc, #-2500]	; 1253c <abort@plt+0x1788>
   12efc:	mov	r2, #1
   12f00:	str	r2, [sp, #40]	; 0x28
   12f04:	str	r2, [sp, #32]
   12f08:	str	r2, [sp, #52]	; 0x34
   12f0c:	str	r3, [sp, #60]	; 0x3c
   12f10:	b	11820 <abort@plt+0xa6c>
   12f14:	bl	10c34 <__stack_chk_fail@plt>
   12f18:	mov	r5, r3
   12f1c:	mov	r6, #0
   12f20:	b	11d14 <abort@plt+0xf60>
   12f24:	mov	r3, #0
   12f28:	mov	r2, #1
   12f2c:	str	r3, [sp, #44]	; 0x2c
   12f30:	str	r3, [sp, #72]	; 0x48
   12f34:	str	r2, [sp, #40]	; 0x28
   12f38:	b	11e30 <abort@plt+0x107c>
   12f3c:	bl	10db4 <abort@plt>
   12f40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f44:	sub	sp, sp, #44	; 0x2c
   12f48:	mov	r6, r0
   12f4c:	mov	r4, r3
   12f50:	mov	sl, r1
   12f54:	mov	fp, r2
   12f58:	bl	10d18 <__errno_location@plt>
   12f5c:	ldr	r7, [pc, #364]	; 130d0 <abort@plt+0x231c>
   12f60:	cmp	r6, #0
   12f64:	ldr	r5, [r7]
   12f68:	ldr	r3, [r0]
   12f6c:	str	r3, [sp, #24]
   12f70:	blt	130cc <abort@plt+0x2318>
   12f74:	ldr	r3, [r7, #4]
   12f78:	mov	r8, r0
   12f7c:	cmp	r3, r6
   12f80:	bgt	12fcc <abort@plt+0x2218>
   12f84:	cmn	r6, #-268435454	; 0xf0000002
   12f88:	bgt	130c8 <abort@plt+0x2314>
   12f8c:	add	r9, r6, #1
   12f90:	add	r3, r7, #8
   12f94:	cmp	r5, r3
   12f98:	lsl	r1, r9, #3
   12f9c:	beq	130a8 <abort@plt+0x22f4>
   12fa0:	mov	r0, r5
   12fa4:	bl	13d34 <abort@plt+0x2f80>
   12fa8:	mov	r5, r0
   12fac:	str	r0, [r7]
   12fb0:	ldr	r0, [r7, #4]
   12fb4:	mov	r1, #0
   12fb8:	sub	r2, r9, r0
   12fbc:	add	r0, r5, r0, lsl #3
   12fc0:	lsl	r2, r2, #3
   12fc4:	bl	10d30 <memset@plt>
   12fc8:	str	r9, [r7, #4]
   12fcc:	add	r3, r5, r6, lsl #3
   12fd0:	ldr	r1, [r4, #4]
   12fd4:	ldr	r7, [r3, #4]
   12fd8:	ldr	r9, [r5, r6, lsl #3]
   12fdc:	ldr	r2, [r4, #40]	; 0x28
   12fe0:	ldr	ip, [r4, #44]	; 0x2c
   12fe4:	str	r3, [sp, #28]
   12fe8:	ldr	r3, [r4]
   12fec:	orr	r1, r1, #1
   12ff0:	add	lr, r4, #8
   12ff4:	str	r1, [sp, #36]	; 0x24
   12ff8:	str	r1, [sp, #4]
   12ffc:	str	r2, [sp, #12]
   13000:	str	r3, [sp]
   13004:	mov	r0, r7
   13008:	mov	r1, r9
   1300c:	str	ip, [sp, #16]
   13010:	str	lr, [sp, #8]
   13014:	mov	r3, fp
   13018:	mov	r2, sl
   1301c:	str	lr, [sp, #32]
   13020:	bl	11728 <abort@plt+0x974>
   13024:	cmp	r9, r0
   13028:	bhi	13094 <abort@plt+0x22e0>
   1302c:	ldr	r3, [pc, #160]	; 130d4 <abort@plt+0x2320>
   13030:	add	r9, r0, #1
   13034:	cmp	r7, r3
   13038:	str	r9, [r5, r6, lsl #3]
   1303c:	beq	13048 <abort@plt+0x2294>
   13040:	mov	r0, r7
   13044:	bl	10bec <free@plt>
   13048:	mov	r0, r9
   1304c:	bl	13cd8 <abort@plt+0x2f24>
   13050:	ldr	lr, [sp, #28]
   13054:	ldr	ip, [r4, #44]	; 0x2c
   13058:	ldr	r5, [r4, #40]	; 0x28
   1305c:	mov	r3, fp
   13060:	mov	r2, sl
   13064:	mov	r1, r9
   13068:	str	r0, [lr, #4]
   1306c:	ldr	lr, [r4]
   13070:	ldr	r4, [sp, #32]
   13074:	str	ip, [sp, #16]
   13078:	str	r4, [sp, #8]
   1307c:	ldr	r4, [sp, #36]	; 0x24
   13080:	str	r5, [sp, #12]
   13084:	str	r4, [sp, #4]
   13088:	str	lr, [sp]
   1308c:	mov	r7, r0
   13090:	bl	11728 <abort@plt+0x974>
   13094:	ldr	r3, [sp, #24]
   13098:	mov	r0, r7
   1309c:	str	r3, [r8]
   130a0:	add	sp, sp, #44	; 0x2c
   130a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130a8:	mov	r0, #0
   130ac:	bl	13d34 <abort@plt+0x2f80>
   130b0:	ldr	r3, [pc, #32]	; 130d8 <abort@plt+0x2324>
   130b4:	mov	r5, r0
   130b8:	ldm	r3, {r0, r1}
   130bc:	str	r5, [r7]
   130c0:	stm	r5, {r0, r1}
   130c4:	b	12fb0 <abort@plt+0x21fc>
   130c8:	bl	13f20 <abort@plt+0x316c>
   130cc:	bl	10db4 <abort@plt>
   130d0:	ldrdeq	r5, [r2], -r0
   130d4:	andeq	r5, r2, r0, asr #2
   130d8:	ldrdeq	r5, [r2], -r8
   130dc:	push	{r4, r5, r6, lr}
   130e0:	mov	r5, r0
   130e4:	bl	10d18 <__errno_location@plt>
   130e8:	cmp	r5, #0
   130ec:	mov	r1, #48	; 0x30
   130f0:	mov	r4, r0
   130f4:	ldr	r0, [pc, #16]	; 1310c <abort@plt+0x2358>
   130f8:	ldr	r6, [r4]
   130fc:	movne	r0, r5
   13100:	bl	13ee0 <abort@plt+0x312c>
   13104:	str	r6, [r4]
   13108:	pop	{r4, r5, r6, pc}
   1310c:	andeq	r5, r2, r0, asr #4
   13110:	ldr	r3, [pc, #12]	; 13124 <abort@plt+0x2370>
   13114:	cmp	r0, #0
   13118:	moveq	r0, r3
   1311c:	ldr	r0, [r0]
   13120:	bx	lr
   13124:	andeq	r5, r2, r0, asr #4
   13128:	ldr	r3, [pc, #12]	; 1313c <abort@plt+0x2388>
   1312c:	cmp	r0, #0
   13130:	moveq	r0, r3
   13134:	str	r1, [r0]
   13138:	bx	lr
   1313c:	andeq	r5, r2, r0, asr #4
   13140:	ldr	r3, [pc, #52]	; 1317c <abort@plt+0x23c8>
   13144:	cmp	r0, #0
   13148:	moveq	r0, r3
   1314c:	add	r3, r0, #8
   13150:	push	{lr}		; (str lr, [sp, #-4]!)
   13154:	lsr	lr, r1, #5
   13158:	and	r1, r1, #31
   1315c:	ldr	ip, [r3, lr, lsl #2]
   13160:	lsr	r0, ip, r1
   13164:	eor	r2, r2, r0
   13168:	and	r2, r2, #1
   1316c:	and	r0, r0, #1
   13170:	eor	r1, ip, r2, lsl r1
   13174:	str	r1, [r3, lr, lsl #2]
   13178:	pop	{pc}		; (ldr pc, [sp], #4)
   1317c:	andeq	r5, r2, r0, asr #4
   13180:	ldr	r3, [pc, #16]	; 13198 <abort@plt+0x23e4>
   13184:	cmp	r0, #0
   13188:	movne	r3, r0
   1318c:	ldr	r0, [r3, #4]
   13190:	str	r1, [r3, #4]
   13194:	bx	lr
   13198:	andeq	r5, r2, r0, asr #4
   1319c:	ldr	r3, [pc, #44]	; 131d0 <abort@plt+0x241c>
   131a0:	cmp	r0, #0
   131a4:	moveq	r0, r3
   131a8:	mov	ip, #10
   131ac:	cmp	r2, #0
   131b0:	cmpne	r1, #0
   131b4:	str	ip, [r0]
   131b8:	beq	131c8 <abort@plt+0x2414>
   131bc:	str	r1, [r0, #40]	; 0x28
   131c0:	str	r2, [r0, #44]	; 0x2c
   131c4:	bx	lr
   131c8:	push	{r4, lr}
   131cc:	bl	10db4 <abort@plt>
   131d0:	andeq	r5, r2, r0, asr #4
   131d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   131d8:	sub	sp, sp, #24
   131dc:	ldr	ip, [pc, #108]	; 13250 <abort@plt+0x249c>
   131e0:	ldr	r4, [sp, #56]	; 0x38
   131e4:	mov	r9, r2
   131e8:	cmp	r4, #0
   131ec:	moveq	r4, ip
   131f0:	mov	sl, r3
   131f4:	mov	r7, r0
   131f8:	mov	r8, r1
   131fc:	bl	10d18 <__errno_location@plt>
   13200:	ldr	r3, [r4, #44]	; 0x2c
   13204:	mov	r1, r8
   13208:	ldr	r6, [r0]
   1320c:	str	r3, [sp, #16]
   13210:	ldr	r2, [r4, #40]	; 0x28
   13214:	add	r3, r4, #8
   13218:	str	r3, [sp, #8]
   1321c:	str	r2, [sp, #12]
   13220:	ldr	r2, [r4, #4]
   13224:	mov	r5, r0
   13228:	str	r2, [sp, #4]
   1322c:	ldr	ip, [r4]
   13230:	mov	r3, sl
   13234:	mov	r2, r9
   13238:	mov	r0, r7
   1323c:	str	ip, [sp]
   13240:	bl	11728 <abort@plt+0x974>
   13244:	str	r6, [r5]
   13248:	add	sp, sp, #24
   1324c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13250:	andeq	r5, r2, r0, asr #4
   13254:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13258:	cmp	r3, #0
   1325c:	sub	sp, sp, #44	; 0x2c
   13260:	ldr	r4, [pc, #192]	; 13328 <abort@plt+0x2574>
   13264:	mov	r6, r2
   13268:	movne	r4, r3
   1326c:	mov	r9, r1
   13270:	mov	r8, r0
   13274:	bl	10d18 <__errno_location@plt>
   13278:	ldr	r3, [r4, #44]	; 0x2c
   1327c:	ldr	r5, [r4, #4]
   13280:	add	sl, r4, #8
   13284:	cmp	r6, #0
   13288:	orreq	r5, r5, #1
   1328c:	mov	r1, #0
   13290:	ldr	r2, [r0]
   13294:	str	r3, [sp, #16]
   13298:	ldr	r3, [r4, #40]	; 0x28
   1329c:	stmib	sp, {r5, sl}
   132a0:	str	r3, [sp, #12]
   132a4:	ldr	r3, [r4]
   132a8:	mov	r7, r0
   132ac:	str	r2, [sp, #28]
   132b0:	str	r3, [sp]
   132b4:	mov	r2, r8
   132b8:	mov	r3, r9
   132bc:	mov	r0, r1
   132c0:	bl	11728 <abort@plt+0x974>
   132c4:	add	r1, r0, #1
   132c8:	mov	fp, r0
   132cc:	mov	r0, r1
   132d0:	str	r1, [sp, #36]	; 0x24
   132d4:	bl	13cd8 <abort@plt+0x2f24>
   132d8:	ldr	r3, [r4, #44]	; 0x2c
   132dc:	mov	r2, r8
   132e0:	str	r3, [sp, #16]
   132e4:	ldr	r3, [r4, #40]	; 0x28
   132e8:	str	r5, [sp, #4]
   132ec:	str	r3, [sp, #12]
   132f0:	str	sl, [sp, #8]
   132f4:	ldr	ip, [r4]
   132f8:	ldr	r1, [sp, #36]	; 0x24
   132fc:	mov	r3, r9
   13300:	str	ip, [sp]
   13304:	str	r0, [sp, #32]
   13308:	bl	11728 <abort@plt+0x974>
   1330c:	ldr	r2, [sp, #28]
   13310:	cmp	r6, #0
   13314:	str	r2, [r7]
   13318:	ldr	r0, [sp, #32]
   1331c:	strne	fp, [r6]
   13320:	add	sp, sp, #44	; 0x2c
   13324:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13328:	andeq	r5, r2, r0, asr #4
   1332c:	mov	r3, r2
   13330:	mov	r2, #0
   13334:	b	13254 <abort@plt+0x24a0>
   13338:	push	{r4, r5, r6, r7, r8, lr}
   1333c:	ldr	r6, [pc, #112]	; 133b4 <abort@plt+0x2600>
   13340:	ldr	r3, [r6, #4]
   13344:	ldr	r7, [r6]
   13348:	cmp	r3, #1
   1334c:	ble	13370 <abort@plt+0x25bc>
   13350:	sub	r5, r7, #8
   13354:	add	r5, r5, r3, lsl #3
   13358:	mov	r4, r7
   1335c:	ldr	r0, [r4, #12]
   13360:	add	r4, r4, #8
   13364:	bl	10bec <free@plt>
   13368:	cmp	r4, r5
   1336c:	bne	1335c <abort@plt+0x25a8>
   13370:	ldr	r0, [r7, #4]
   13374:	ldr	r4, [pc, #60]	; 133b8 <abort@plt+0x2604>
   13378:	cmp	r0, r4
   1337c:	beq	13390 <abort@plt+0x25dc>
   13380:	bl	10bec <free@plt>
   13384:	mov	r3, #256	; 0x100
   13388:	str	r4, [r6, #12]
   1338c:	str	r3, [r6, #8]
   13390:	ldr	r4, [pc, #36]	; 133bc <abort@plt+0x2608>
   13394:	cmp	r7, r4
   13398:	beq	133a8 <abort@plt+0x25f4>
   1339c:	mov	r0, r7
   133a0:	bl	10bec <free@plt>
   133a4:	str	r4, [r6]
   133a8:	mov	r3, #1
   133ac:	str	r3, [r6, #4]
   133b0:	pop	{r4, r5, r6, r7, r8, pc}
   133b4:	ldrdeq	r5, [r2], -r0
   133b8:	andeq	r5, r2, r0, asr #2
   133bc:	ldrdeq	r5, [r2], -r8
   133c0:	ldr	r3, [pc, #4]	; 133cc <abort@plt+0x2618>
   133c4:	mvn	r2, #0
   133c8:	b	12f40 <abort@plt+0x218c>
   133cc:	andeq	r5, r2, r0, asr #4
   133d0:	ldr	r3, [pc]	; 133d8 <abort@plt+0x2624>
   133d4:	b	12f40 <abort@plt+0x218c>
   133d8:	andeq	r5, r2, r0, asr #4
   133dc:	mov	r1, r0
   133e0:	ldr	r3, [pc, #8]	; 133f0 <abort@plt+0x263c>
   133e4:	mvn	r2, #0
   133e8:	mov	r0, #0
   133ec:	b	12f40 <abort@plt+0x218c>
   133f0:	andeq	r5, r2, r0, asr #4
   133f4:	mov	r2, r1
   133f8:	ldr	r3, [pc, #8]	; 13408 <abort@plt+0x2654>
   133fc:	mov	r1, r0
   13400:	mov	r0, #0
   13404:	b	12f40 <abort@plt+0x218c>
   13408:	andeq	r5, r2, r0, asr #4
   1340c:	push	{r4, r5, r6, lr}
   13410:	sub	sp, sp, #56	; 0x38
   13414:	ldr	r4, [pc, #68]	; 13460 <abort@plt+0x26ac>
   13418:	mov	r6, r2
   1341c:	mov	r5, r0
   13420:	ldr	r3, [r4]
   13424:	add	r0, sp, #4
   13428:	str	r3, [sp, #52]	; 0x34
   1342c:	bl	115b8 <abort@plt+0x804>
   13430:	add	r3, sp, #4
   13434:	mvn	r2, #0
   13438:	mov	r1, r6
   1343c:	mov	r0, r5
   13440:	bl	12f40 <abort@plt+0x218c>
   13444:	ldr	r2, [sp, #52]	; 0x34
   13448:	ldr	r3, [r4]
   1344c:	cmp	r2, r3
   13450:	bne	1345c <abort@plt+0x26a8>
   13454:	add	sp, sp, #56	; 0x38
   13458:	pop	{r4, r5, r6, pc}
   1345c:	bl	10c34 <__stack_chk_fail@plt>
   13460:	andeq	r4, r2, r8, lsl #30
   13464:	push	{r4, r5, r6, r7, lr}
   13468:	sub	sp, sp, #60	; 0x3c
   1346c:	ldr	r4, [pc, #72]	; 134bc <abort@plt+0x2708>
   13470:	mov	r6, r2
   13474:	mov	r7, r3
   13478:	ldr	ip, [r4]
   1347c:	mov	r5, r0
   13480:	add	r0, sp, #4
   13484:	str	ip, [sp, #52]	; 0x34
   13488:	bl	115b8 <abort@plt+0x804>
   1348c:	add	r3, sp, #4
   13490:	mov	r2, r7
   13494:	mov	r1, r6
   13498:	mov	r0, r5
   1349c:	bl	12f40 <abort@plt+0x218c>
   134a0:	ldr	r2, [sp, #52]	; 0x34
   134a4:	ldr	r3, [r4]
   134a8:	cmp	r2, r3
   134ac:	bne	134b8 <abort@plt+0x2704>
   134b0:	add	sp, sp, #60	; 0x3c
   134b4:	pop	{r4, r5, r6, r7, pc}
   134b8:	bl	10c34 <__stack_chk_fail@plt>
   134bc:	andeq	r4, r2, r8, lsl #30
   134c0:	mov	r2, r1
   134c4:	mov	r1, r0
   134c8:	mov	r0, #0
   134cc:	b	1340c <abort@plt+0x2658>
   134d0:	mov	r3, r2
   134d4:	mov	r2, r1
   134d8:	mov	r1, r0
   134dc:	mov	r0, #0
   134e0:	b	13464 <abort@plt+0x26b0>
   134e4:	push	{r4, r5, r6, r7, r8, r9, lr}
   134e8:	mov	r4, r2
   134ec:	ldr	lr, [pc, #128]	; 13574 <abort@plt+0x27c0>
   134f0:	mov	r8, r0
   134f4:	mov	r9, r1
   134f8:	ldm	lr!, {r0, r1, r2, r3}
   134fc:	sub	sp, sp, #60	; 0x3c
   13500:	add	ip, sp, #4
   13504:	lsr	r6, r4, #5
   13508:	stmia	ip!, {r0, r1, r2, r3}
   1350c:	add	r7, sp, #12
   13510:	ldm	lr!, {r0, r1, r2, r3}
   13514:	and	r4, r4, #31
   13518:	ldr	r5, [pc, #88]	; 13578 <abort@plt+0x27c4>
   1351c:	stmia	ip!, {r0, r1, r2, r3}
   13520:	ldm	lr, {r0, r1, r2, r3}
   13524:	stm	ip, {r0, r1, r2, r3}
   13528:	mov	r2, r9
   1352c:	ldr	r3, [r7, r6, lsl #2]
   13530:	ldr	ip, [r5]
   13534:	mov	r1, r8
   13538:	mvn	r0, r3, lsr r4
   1353c:	and	r0, r0, #1
   13540:	str	ip, [sp, #52]	; 0x34
   13544:	eor	r4, r3, r0, lsl r4
   13548:	add	r3, sp, #4
   1354c:	mov	r0, #0
   13550:	str	r4, [r7, r6, lsl #2]
   13554:	bl	12f40 <abort@plt+0x218c>
   13558:	ldr	r2, [sp, #52]	; 0x34
   1355c:	ldr	r3, [r5]
   13560:	cmp	r2, r3
   13564:	bne	13570 <abort@plt+0x27bc>
   13568:	add	sp, sp, #60	; 0x3c
   1356c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13570:	bl	10c34 <__stack_chk_fail@plt>
   13574:	andeq	r5, r2, r0, asr #4
   13578:	andeq	r4, r2, r8, lsl #30
   1357c:	mov	r2, r1
   13580:	mvn	r1, #0
   13584:	b	134e4 <abort@plt+0x2730>
   13588:	mov	r2, #58	; 0x3a
   1358c:	mvn	r1, #0
   13590:	b	134e4 <abort@plt+0x2730>
   13594:	mov	r2, #58	; 0x3a
   13598:	b	134e4 <abort@plt+0x2730>
   1359c:	push	{r4, r5, r6, r7, r8, lr}
   135a0:	sub	sp, sp, #104	; 0x68
   135a4:	ldr	r5, [pc, #120]	; 13624 <abort@plt+0x2870>
   135a8:	mov	r6, r0
   135ac:	mov	r0, sp
   135b0:	ldr	r3, [r5]
   135b4:	mov	r7, r2
   135b8:	str	r3, [sp, #100]	; 0x64
   135bc:	bl	115b8 <abort@plt+0x804>
   135c0:	mov	ip, sp
   135c4:	add	lr, sp, #52	; 0x34
   135c8:	ldm	ip!, {r0, r1, r2, r3}
   135cc:	stmia	lr!, {r0, r1, r2, r3}
   135d0:	ldm	ip!, {r0, r1, r2, r3}
   135d4:	ldr	r8, [sp, #64]	; 0x40
   135d8:	stmia	lr!, {r0, r1, r2, r3}
   135dc:	mvn	r4, r8
   135e0:	ldm	ip, {r0, r1, r2, r3}
   135e4:	and	ip, r4, #67108864	; 0x4000000
   135e8:	eor	ip, ip, r8
   135ec:	str	ip, [sp, #64]	; 0x40
   135f0:	stm	lr, {r0, r1, r2, r3}
   135f4:	add	r3, sp, #52	; 0x34
   135f8:	mvn	r2, #0
   135fc:	mov	r1, r7
   13600:	mov	r0, r6
   13604:	bl	12f40 <abort@plt+0x218c>
   13608:	ldr	r2, [sp, #100]	; 0x64
   1360c:	ldr	r3, [r5]
   13610:	cmp	r2, r3
   13614:	bne	13620 <abort@plt+0x286c>
   13618:	add	sp, sp, #104	; 0x68
   1361c:	pop	{r4, r5, r6, r7, r8, pc}
   13620:	bl	10c34 <__stack_chk_fail@plt>
   13624:	andeq	r4, r2, r8, lsl #30
   13628:	push	{r4, r5, r6, r7, r8, r9, lr}
   1362c:	mov	r6, r1
   13630:	ldr	lr, [pc, #132]	; 136bc <abort@plt+0x2908>
   13634:	mov	r5, r2
   13638:	mov	r8, r0
   1363c:	mov	r9, r3
   13640:	ldm	lr!, {r0, r1, r2, r3}
   13644:	sub	sp, sp, #60	; 0x3c
   13648:	add	ip, sp, #4
   1364c:	ldr	r4, [pc, #108]	; 136c0 <abort@plt+0x290c>
   13650:	stmia	ip!, {r0, r1, r2, r3}
   13654:	mov	r7, #10
   13658:	ldm	lr!, {r0, r1, r2, r3}
   1365c:	cmp	r5, #0
   13660:	cmpne	r6, #0
   13664:	str	r7, [sp, #4]
   13668:	stmia	ip!, {r0, r1, r2, r3}
   1366c:	ldm	lr, {r0, r1, r2, r3}
   13670:	ldr	lr, [r4]
   13674:	stm	ip, {r0, r1, r2, r3}
   13678:	str	lr, [sp, #52]	; 0x34
   1367c:	beq	136b8 <abort@plt+0x2904>
   13680:	add	r3, sp, #4
   13684:	ldr	r2, [sp, #88]	; 0x58
   13688:	mov	r1, r9
   1368c:	mov	r0, r8
   13690:	str	r6, [sp, #44]	; 0x2c
   13694:	str	r5, [sp, #48]	; 0x30
   13698:	bl	12f40 <abort@plt+0x218c>
   1369c:	ldr	r2, [sp, #52]	; 0x34
   136a0:	ldr	r3, [r4]
   136a4:	cmp	r2, r3
   136a8:	bne	136b4 <abort@plt+0x2900>
   136ac:	add	sp, sp, #60	; 0x3c
   136b0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   136b4:	bl	10c34 <__stack_chk_fail@plt>
   136b8:	bl	10db4 <abort@plt>
   136bc:	andeq	r5, r2, r0, asr #4
   136c0:	andeq	r4, r2, r8, lsl #30
   136c4:	push	{lr}		; (str lr, [sp, #-4]!)
   136c8:	sub	sp, sp, #12
   136cc:	mvn	ip, #0
   136d0:	str	ip, [sp]
   136d4:	bl	13628 <abort@plt+0x2874>
   136d8:	add	sp, sp, #12
   136dc:	pop	{pc}		; (ldr pc, [sp], #4)
   136e0:	push	{lr}		; (str lr, [sp, #-4]!)
   136e4:	sub	sp, sp, #12
   136e8:	mvn	ip, #0
   136ec:	mov	r3, r2
   136f0:	str	ip, [sp]
   136f4:	mov	r2, r1
   136f8:	mov	r1, r0
   136fc:	mov	r0, #0
   13700:	bl	13628 <abort@plt+0x2874>
   13704:	add	sp, sp, #12
   13708:	pop	{pc}		; (ldr pc, [sp], #4)
   1370c:	push	{lr}		; (str lr, [sp, #-4]!)
   13710:	sub	sp, sp, #12
   13714:	str	r3, [sp]
   13718:	mov	r3, r2
   1371c:	mov	r2, r1
   13720:	mov	r1, r0
   13724:	mov	r0, #0
   13728:	bl	13628 <abort@plt+0x2874>
   1372c:	add	sp, sp, #12
   13730:	pop	{pc}		; (ldr pc, [sp], #4)
   13734:	ldr	r3, [pc]	; 1373c <abort@plt+0x2988>
   13738:	b	12f40 <abort@plt+0x218c>
   1373c:	andeq	r5, r2, r0, ror #1
   13740:	mov	r2, r1
   13744:	ldr	r3, [pc, #8]	; 13754 <abort@plt+0x29a0>
   13748:	mov	r1, r0
   1374c:	mov	r0, #0
   13750:	b	12f40 <abort@plt+0x218c>
   13754:	andeq	r5, r2, r0, ror #1
   13758:	ldr	r3, [pc, #4]	; 13764 <abort@plt+0x29b0>
   1375c:	mvn	r2, #0
   13760:	b	12f40 <abort@plt+0x218c>
   13764:	andeq	r5, r2, r0, ror #1
   13768:	mov	r1, r0
   1376c:	ldr	r3, [pc, #8]	; 1377c <abort@plt+0x29c8>
   13770:	mvn	r2, #0
   13774:	mov	r0, #0
   13778:	b	12f40 <abort@plt+0x218c>
   1377c:	andeq	r5, r2, r0, ror #1
   13780:	push	{r4, r5, r6, lr}
   13784:	sub	sp, sp, #32
   13788:	cmp	r1, #0
   1378c:	mov	r5, r0
   13790:	ldr	r4, [sp, #48]	; 0x30
   13794:	ldr	r6, [sp, #52]	; 0x34
   13798:	beq	13828 <abort@plt+0x2a74>
   1379c:	strd	r2, [sp]
   137a0:	mov	r3, r1
   137a4:	ldr	r2, [pc, #828]	; 13ae8 <abort@plt+0x2d34>
   137a8:	mov	r1, #1
   137ac:	bl	10d54 <__fprintf_chk@plt>
   137b0:	mov	r2, #5
   137b4:	ldr	r1, [pc, #816]	; 13aec <abort@plt+0x2d38>
   137b8:	mov	r0, #0
   137bc:	bl	10c28 <dcgettext@plt>
   137c0:	ldr	r3, [pc, #808]	; 13af0 <abort@plt+0x2d3c>
   137c4:	ldr	r2, [pc, #808]	; 13af4 <abort@plt+0x2d40>
   137c8:	str	r3, [sp]
   137cc:	mov	r1, #1
   137d0:	mov	r3, r0
   137d4:	mov	r0, r5
   137d8:	bl	10d54 <__fprintf_chk@plt>
   137dc:	ldr	r1, [pc, #788]	; 13af8 <abort@plt+0x2d44>
   137e0:	mov	r2, #5
   137e4:	mov	r0, #0
   137e8:	bl	10c28 <dcgettext@plt>
   137ec:	mov	r1, r5
   137f0:	bl	10bbc <fputs_unlocked@plt>
   137f4:	cmp	r6, #9
   137f8:	ldrls	pc, [pc, r6, lsl #2]
   137fc:	b	13ad8 <abort@plt+0x2d24>
   13800:	andeq	r3, r1, r4, ror #21
   13804:	andeq	r3, r1, ip, lsr #17
   13808:	ldrdeq	r3, [r1], -r8
   1380c:	andeq	r3, r1, ip, lsl #18
   13810:	andeq	r3, r1, r8, asr #18
   13814:	andeq	r3, r1, r8, lsl #19
   13818:	ldrdeq	r3, [r1], -r0
   1381c:	andeq	r3, r1, r0, lsr #20
   13820:	andeq	r3, r1, r8, ror sl
   13824:	andeq	r3, r1, r0, asr #16
   13828:	str	r3, [sp]
   1382c:	mov	r1, #1
   13830:	mov	r3, r2
   13834:	ldr	r2, [pc, #704]	; 13afc <abort@plt+0x2d48>
   13838:	bl	10d54 <__fprintf_chk@plt>
   1383c:	b	137b0 <abort@plt+0x29fc>
   13840:	ldr	r1, [pc, #696]	; 13b00 <abort@plt+0x2d4c>
   13844:	mov	r2, #5
   13848:	mov	r0, #0
   1384c:	bl	10c28 <dcgettext@plt>
   13850:	ldr	r2, [r4, #32]
   13854:	ldr	r3, [r4, #28]
   13858:	ldr	r1, [r4, #24]
   1385c:	str	r2, [sp, #28]
   13860:	ldr	r2, [r4, #20]
   13864:	str	r3, [sp, #24]
   13868:	ldr	r3, [r4, #16]
   1386c:	str	r1, [sp, #20]
   13870:	ldr	r1, [r4, #12]
   13874:	str	r2, [sp, #16]
   13878:	ldr	r2, [r4, #8]
   1387c:	str	r3, [sp, #12]
   13880:	ldr	r3, [r4, #4]
   13884:	str	r1, [sp, #8]
   13888:	str	r2, [sp, #4]
   1388c:	str	r3, [sp]
   13890:	mov	r1, #1
   13894:	ldr	r3, [r4]
   13898:	mov	r2, r0
   1389c:	mov	r0, r5
   138a0:	bl	10d54 <__fprintf_chk@plt>
   138a4:	add	sp, sp, #32
   138a8:	pop	{r4, r5, r6, pc}
   138ac:	mov	r2, #5
   138b0:	ldr	r1, [pc, #588]	; 13b04 <abort@plt+0x2d50>
   138b4:	mov	r0, #0
   138b8:	bl	10c28 <dcgettext@plt>
   138bc:	ldr	r3, [r4]
   138c0:	mov	r1, #1
   138c4:	mov	r2, r0
   138c8:	mov	r0, r5
   138cc:	add	sp, sp, #32
   138d0:	pop	{r4, r5, r6, lr}
   138d4:	b	10d54 <__fprintf_chk@plt>
   138d8:	mov	r2, #5
   138dc:	ldr	r1, [pc, #548]	; 13b08 <abort@plt+0x2d54>
   138e0:	mov	r0, #0
   138e4:	bl	10c28 <dcgettext@plt>
   138e8:	ldr	r2, [r4, #4]
   138ec:	ldr	r3, [r4]
   138f0:	mov	r1, #1
   138f4:	str	r2, [sp, #48]	; 0x30
   138f8:	mov	r2, r0
   138fc:	mov	r0, r5
   13900:	add	sp, sp, #32
   13904:	pop	{r4, r5, r6, lr}
   13908:	b	10d54 <__fprintf_chk@plt>
   1390c:	mov	r2, #5
   13910:	ldr	r1, [pc, #500]	; 13b0c <abort@plt+0x2d58>
   13914:	mov	r0, #0
   13918:	bl	10c28 <dcgettext@plt>
   1391c:	ldr	r2, [r4, #8]
   13920:	ldr	r3, [r4, #4]
   13924:	mov	r1, #1
   13928:	str	r2, [sp, #52]	; 0x34
   1392c:	str	r3, [sp, #48]	; 0x30
   13930:	ldr	r3, [r4]
   13934:	mov	r2, r0
   13938:	mov	r0, r5
   1393c:	add	sp, sp, #32
   13940:	pop	{r4, r5, r6, lr}
   13944:	b	10d54 <__fprintf_chk@plt>
   13948:	mov	r2, #5
   1394c:	ldr	r1, [pc, #444]	; 13b10 <abort@plt+0x2d5c>
   13950:	mov	r0, #0
   13954:	bl	10c28 <dcgettext@plt>
   13958:	ldr	r1, [r4, #12]
   1395c:	ldr	r2, [r4, #8]
   13960:	ldr	r3, [r4, #4]
   13964:	str	r1, [sp, #8]
   13968:	str	r2, [sp, #4]
   1396c:	str	r3, [sp]
   13970:	mov	r1, #1
   13974:	ldr	r3, [r4]
   13978:	mov	r2, r0
   1397c:	mov	r0, r5
   13980:	bl	10d54 <__fprintf_chk@plt>
   13984:	b	138a4 <abort@plt+0x2af0>
   13988:	mov	r2, #5
   1398c:	ldr	r1, [pc, #384]	; 13b14 <abort@plt+0x2d60>
   13990:	mov	r0, #0
   13994:	bl	10c28 <dcgettext@plt>
   13998:	ldr	r3, [r4, #16]
   1399c:	ldr	r1, [r4, #12]
   139a0:	ldr	r2, [r4, #8]
   139a4:	str	r3, [sp, #12]
   139a8:	ldr	r3, [r4, #4]
   139ac:	str	r1, [sp, #8]
   139b0:	str	r2, [sp, #4]
   139b4:	str	r3, [sp]
   139b8:	mov	r1, #1
   139bc:	ldr	r3, [r4]
   139c0:	mov	r2, r0
   139c4:	mov	r0, r5
   139c8:	bl	10d54 <__fprintf_chk@plt>
   139cc:	b	138a4 <abort@plt+0x2af0>
   139d0:	mov	r2, #5
   139d4:	ldr	r1, [pc, #316]	; 13b18 <abort@plt+0x2d64>
   139d8:	mov	r0, #0
   139dc:	bl	10c28 <dcgettext@plt>
   139e0:	ldr	r2, [r4, #20]
   139e4:	ldr	r3, [r4, #16]
   139e8:	ldr	r1, [r4, #12]
   139ec:	str	r2, [sp, #16]
   139f0:	ldr	r2, [r4, #8]
   139f4:	str	r3, [sp, #12]
   139f8:	ldr	r3, [r4, #4]
   139fc:	str	r1, [sp, #8]
   13a00:	str	r2, [sp, #4]
   13a04:	str	r3, [sp]
   13a08:	mov	r1, #1
   13a0c:	ldr	r3, [r4]
   13a10:	mov	r2, r0
   13a14:	mov	r0, r5
   13a18:	bl	10d54 <__fprintf_chk@plt>
   13a1c:	b	138a4 <abort@plt+0x2af0>
   13a20:	mov	r2, #5
   13a24:	ldr	r1, [pc, #240]	; 13b1c <abort@plt+0x2d68>
   13a28:	mov	r0, #0
   13a2c:	bl	10c28 <dcgettext@plt>
   13a30:	ldr	r1, [r4, #24]
   13a34:	ldr	r2, [r4, #20]
   13a38:	ldr	r3, [r4, #16]
   13a3c:	str	r1, [sp, #20]
   13a40:	ldr	r1, [r4, #12]
   13a44:	str	r2, [sp, #16]
   13a48:	ldr	r2, [r4, #8]
   13a4c:	str	r3, [sp, #12]
   13a50:	ldr	r3, [r4, #4]
   13a54:	str	r1, [sp, #8]
   13a58:	str	r2, [sp, #4]
   13a5c:	str	r3, [sp]
   13a60:	mov	r1, #1
   13a64:	ldr	r3, [r4]
   13a68:	mov	r2, r0
   13a6c:	mov	r0, r5
   13a70:	bl	10d54 <__fprintf_chk@plt>
   13a74:	b	138a4 <abort@plt+0x2af0>
   13a78:	mov	r2, #5
   13a7c:	ldr	r1, [pc, #156]	; 13b20 <abort@plt+0x2d6c>
   13a80:	mov	r0, #0
   13a84:	bl	10c28 <dcgettext@plt>
   13a88:	ldr	r3, [r4, #28]
   13a8c:	ldr	r1, [r4, #24]
   13a90:	ldr	r2, [r4, #20]
   13a94:	str	r3, [sp, #24]
   13a98:	ldr	r3, [r4, #16]
   13a9c:	str	r1, [sp, #20]
   13aa0:	ldr	r1, [r4, #12]
   13aa4:	str	r2, [sp, #16]
   13aa8:	ldr	r2, [r4, #8]
   13aac:	str	r3, [sp, #12]
   13ab0:	ldr	r3, [r4, #4]
   13ab4:	str	r1, [sp, #8]
   13ab8:	str	r2, [sp, #4]
   13abc:	str	r3, [sp]
   13ac0:	mov	r1, #1
   13ac4:	ldr	r3, [r4]
   13ac8:	mov	r2, r0
   13acc:	mov	r0, r5
   13ad0:	bl	10d54 <__fprintf_chk@plt>
   13ad4:	b	138a4 <abort@plt+0x2af0>
   13ad8:	mov	r2, #5
   13adc:	ldr	r1, [pc, #64]	; 13b24 <abort@plt+0x2d70>
   13ae0:	b	13848 <abort@plt+0x2a94>
   13ae4:	bl	10db4 <abort@plt>
   13ae8:	andeq	r4, r1, r8, asr #21
   13aec:	ldrdeq	r4, [r1], -ip
   13af0:	andeq	r0, r0, r2, ror #15
   13af4:			; <UNDEFINED> instruction: 0x00014db0
   13af8:	andeq	r4, r1, r0, ror #21
   13afc:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13b00:			; <UNDEFINED> instruction: 0x00014cb8
   13b04:	andeq	r4, r1, ip, lsr #23
   13b08:			; <UNDEFINED> instruction: 0x00014bbc
   13b0c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13b10:	strdeq	r4, [r1], -r0
   13b14:	andeq	r4, r1, r0, lsl ip
   13b18:	andeq	r4, r1, r4, lsr ip
   13b1c:	andeq	r4, r1, ip, asr ip
   13b20:	andeq	r4, r1, r8, lsl #25
   13b24:	andeq	r4, r1, ip, ror #25
   13b28:	push	{r4, r5, lr}
   13b2c:	sub	sp, sp, #12
   13b30:	ldr	r5, [sp, #24]
   13b34:	ldr	ip, [r5]
   13b38:	cmp	ip, #0
   13b3c:	beq	13b58 <abort@plt+0x2da4>
   13b40:	mov	lr, r5
   13b44:	mov	ip, #0
   13b48:	ldr	r4, [lr, #4]!
   13b4c:	add	ip, ip, #1
   13b50:	cmp	r4, #0
   13b54:	bne	13b48 <abort@plt+0x2d94>
   13b58:	stm	sp, {r5, ip}
   13b5c:	bl	13780 <abort@plt+0x29cc>
   13b60:	add	sp, sp, #12
   13b64:	pop	{r4, r5, pc}
   13b68:	push	{r4, r5, r6, lr}
   13b6c:	sub	sp, sp, #56	; 0x38
   13b70:	ldr	r6, [pc, #88]	; 13bd0 <abort@plt+0x2e1c>
   13b74:	ldr	r5, [sp, #72]	; 0x48
   13b78:	add	r4, sp, #8
   13b7c:	ldr	ip, [r6]
   13b80:	str	ip, [sp, #52]	; 0x34
   13b84:	mov	ip, #0
   13b88:	ldr	lr, [r5], #4
   13b8c:	cmp	lr, #0
   13b90:	str	lr, [r4, #4]!
   13b94:	beq	13ba4 <abort@plt+0x2df0>
   13b98:	add	ip, ip, #1
   13b9c:	cmp	ip, #10
   13ba0:	bne	13b88 <abort@plt+0x2dd4>
   13ba4:	add	lr, sp, #12
   13ba8:	str	ip, [sp, #4]
   13bac:	str	lr, [sp]
   13bb0:	bl	13780 <abort@plt+0x29cc>
   13bb4:	ldr	r2, [sp, #52]	; 0x34
   13bb8:	ldr	r3, [r6]
   13bbc:	cmp	r2, r3
   13bc0:	bne	13bcc <abort@plt+0x2e18>
   13bc4:	add	sp, sp, #56	; 0x38
   13bc8:	pop	{r4, r5, r6, pc}
   13bcc:	bl	10c34 <__stack_chk_fail@plt>
   13bd0:	andeq	r4, r2, r8, lsl #30
   13bd4:	push	{r3}		; (str r3, [sp, #-4]!)
   13bd8:	mov	ip, #0
   13bdc:	push	{r4, r5, r6, lr}
   13be0:	sub	sp, sp, #60	; 0x3c
   13be4:	ldr	r6, [pc, #100]	; 13c50 <abort@plt+0x2e9c>
   13be8:	add	r5, sp, #8
   13bec:	add	r4, sp, #80	; 0x50
   13bf0:	ldr	r3, [r6]
   13bf4:	str	r4, [sp, #8]
   13bf8:	str	r3, [sp, #52]	; 0x34
   13bfc:	ldr	r3, [sp, #76]	; 0x4c
   13c00:	ldr	lr, [r4], #4
   13c04:	cmp	lr, #0
   13c08:	str	lr, [r5, #4]!
   13c0c:	beq	13c1c <abort@plt+0x2e68>
   13c10:	add	ip, ip, #1
   13c14:	cmp	ip, #10
   13c18:	bne	13c00 <abort@plt+0x2e4c>
   13c1c:	add	lr, sp, #12
   13c20:	str	ip, [sp, #4]
   13c24:	str	lr, [sp]
   13c28:	bl	13780 <abort@plt+0x29cc>
   13c2c:	ldr	r2, [sp, #52]	; 0x34
   13c30:	ldr	r3, [r6]
   13c34:	cmp	r2, r3
   13c38:	bne	13c4c <abort@plt+0x2e98>
   13c3c:	add	sp, sp, #60	; 0x3c
   13c40:	pop	{r4, r5, r6, lr}
   13c44:	add	sp, sp, #4
   13c48:	bx	lr
   13c4c:	bl	10c34 <__stack_chk_fail@plt>
   13c50:	andeq	r4, r2, r8, lsl #30
   13c54:	push	{r4, lr}
   13c58:	mov	r2, #5
   13c5c:	ldr	r1, [pc, #88]	; 13cbc <abort@plt+0x2f08>
   13c60:	mov	r0, #0
   13c64:	bl	10c28 <dcgettext@plt>
   13c68:	ldr	r2, [pc, #80]	; 13cc0 <abort@plt+0x2f0c>
   13c6c:	mov	r1, r0
   13c70:	mov	r0, #1
   13c74:	bl	10d3c <__printf_chk@plt>
   13c78:	mov	r2, #5
   13c7c:	ldr	r1, [pc, #64]	; 13cc4 <abort@plt+0x2f10>
   13c80:	mov	r0, #0
   13c84:	bl	10c28 <dcgettext@plt>
   13c88:	ldr	r3, [pc, #56]	; 13cc8 <abort@plt+0x2f14>
   13c8c:	ldr	r2, [pc, #56]	; 13ccc <abort@plt+0x2f18>
   13c90:	mov	r1, r0
   13c94:	mov	r0, #1
   13c98:	bl	10d3c <__printf_chk@plt>
   13c9c:	ldr	r1, [pc, #44]	; 13cd0 <abort@plt+0x2f1c>
   13ca0:	mov	r2, #5
   13ca4:	mov	r0, #0
   13ca8:	bl	10c28 <dcgettext@plt>
   13cac:	ldr	r3, [pc, #32]	; 13cd4 <abort@plt+0x2f20>
   13cb0:	pop	{r4, lr}
   13cb4:	ldr	r1, [r3]
   13cb8:	b	10bbc <fputs_unlocked@plt>
   13cbc:	andeq	r4, r1, r8, lsr #26
   13cc0:	andeq	r4, r1, r0, asr #26
   13cc4:	andeq	r4, r1, r8, asr sp
   13cc8:	andeq	r4, r1, ip, ror #15
   13ccc:	andeq	r4, r1, r4, lsl r8
   13cd0:	andeq	r4, r1, ip, ror #26
   13cd4:	andeq	r5, r2, ip, lsr #2
   13cd8:	push	{r4, lr}
   13cdc:	mov	r4, r0
   13ce0:	bl	10cac <malloc@plt>
   13ce4:	adds	r4, r4, #0
   13ce8:	movne	r4, #1
   13cec:	cmp	r0, #0
   13cf0:	movne	r4, #0
   13cf4:	cmp	r4, #0
   13cf8:	popeq	{r4, pc}
   13cfc:	bl	13f20 <abort@plt+0x316c>
   13d00:	push	{r4, r5, r6, lr}
   13d04:	umull	r4, r5, r0, r1
   13d08:	adds	r3, r5, #0
   13d0c:	movne	r3, #1
   13d10:	cmp	r4, #0
   13d14:	blt	13d2c <abort@plt+0x2f78>
   13d18:	cmp	r3, #0
   13d1c:	bne	13d2c <abort@plt+0x2f78>
   13d20:	mul	r0, r1, r0
   13d24:	pop	{r4, r5, r6, lr}
   13d28:	b	13cd8 <abort@plt+0x2f24>
   13d2c:	bl	13f20 <abort@plt+0x316c>
   13d30:	b	13cd8 <abort@plt+0x2f24>
   13d34:	adds	r3, r0, #0
   13d38:	movne	r3, #1
   13d3c:	cmp	r1, #0
   13d40:	movne	r3, #0
   13d44:	cmp	r3, #0
   13d48:	push	{r4, lr}
   13d4c:	bne	13d74 <abort@plt+0x2fc0>
   13d50:	mov	r4, r1
   13d54:	bl	10c40 <realloc@plt>
   13d58:	adds	r4, r4, #0
   13d5c:	movne	r4, #1
   13d60:	cmp	r0, #0
   13d64:	movne	r4, #0
   13d68:	cmp	r4, #0
   13d6c:	popeq	{r4, pc}
   13d70:	bl	13f20 <abort@plt+0x316c>
   13d74:	bl	10bec <free@plt>
   13d78:	mov	r0, #0
   13d7c:	pop	{r4, pc}
   13d80:	push	{r4, r5, r6, lr}
   13d84:	umull	r4, r5, r1, r2
   13d88:	adds	r3, r5, #0
   13d8c:	movne	r3, #1
   13d90:	cmp	r4, #0
   13d94:	blt	13dac <abort@plt+0x2ff8>
   13d98:	cmp	r3, #0
   13d9c:	bne	13dac <abort@plt+0x2ff8>
   13da0:	mul	r1, r2, r1
   13da4:	pop	{r4, r5, r6, lr}
   13da8:	b	13d34 <abort@plt+0x2f80>
   13dac:	bl	13f20 <abort@plt+0x316c>
   13db0:	push	{r4, r5, r6, r7, r8, lr}
   13db4:	subs	r7, r0, #0
   13db8:	mov	r6, r1
   13dbc:	mov	r5, r2
   13dc0:	ldr	r4, [r1]
   13dc4:	beq	13df8 <abort@plt+0x3044>
   13dc8:	mov	r1, r2
   13dcc:	ldr	r0, [pc, #104]	; 13e3c <abort@plt+0x3088>
   13dd0:	bl	14274 <abort@plt+0x34c0>
   13dd4:	cmp	r0, r4
   13dd8:	bls	13e1c <abort@plt+0x3068>
   13ddc:	add	r3, r4, #1
   13de0:	add	r4, r3, r4, lsr #1
   13de4:	str	r4, [r6]
   13de8:	mul	r1, r5, r4
   13dec:	mov	r0, r7
   13df0:	pop	{r4, r5, r6, r7, r8, lr}
   13df4:	b	13d34 <abort@plt+0x2f80>
   13df8:	cmp	r4, #0
   13dfc:	beq	13e20 <abort@plt+0x306c>
   13e00:	umull	r0, r1, r4, r5
   13e04:	adds	r3, r1, #0
   13e08:	movne	r3, #1
   13e0c:	cmp	r0, #0
   13e10:	blt	13e1c <abort@plt+0x3068>
   13e14:	cmp	r3, #0
   13e18:	beq	13de4 <abort@plt+0x3030>
   13e1c:	bl	13f20 <abort@plt+0x316c>
   13e20:	mov	r1, r2
   13e24:	mov	r0, #64	; 0x40
   13e28:	bl	14274 <abort@plt+0x34c0>
   13e2c:	cmp	r5, #64	; 0x40
   13e30:	movls	r4, r0
   13e34:	addhi	r4, r0, #1
   13e38:	b	13e00 <abort@plt+0x304c>
   13e3c:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   13e40:	cmp	r0, #0
   13e44:	ldr	r3, [r1]
   13e48:	beq	13e6c <abort@plt+0x30b8>
   13e4c:	ldr	r2, [pc, #60]	; 13e90 <abort@plt+0x30dc>
   13e50:	cmp	r3, r2
   13e54:	bhi	13e88 <abort@plt+0x30d4>
   13e58:	add	r2, r3, #1
   13e5c:	add	r3, r2, r3, lsr #1
   13e60:	str	r3, [r1]
   13e64:	mov	r1, r3
   13e68:	b	13d34 <abort@plt+0x2f80>
   13e6c:	cmp	r3, #0
   13e70:	bne	13e84 <abort@plt+0x30d0>
   13e74:	mov	r3, #64	; 0x40
   13e78:	str	r3, [r1]
   13e7c:	mov	r1, r3
   13e80:	b	13d34 <abort@plt+0x2f80>
   13e84:	bge	13e60 <abort@plt+0x30ac>
   13e88:	push	{r4, lr}
   13e8c:	bl	13f20 <abort@plt+0x316c>
   13e90:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   13e94:	push	{r4, lr}
   13e98:	mov	r4, r0
   13e9c:	bl	13cd8 <abort@plt+0x2f24>
   13ea0:	mov	r2, r4
   13ea4:	mov	r1, #0
   13ea8:	pop	{r4, lr}
   13eac:	b	10d30 <memset@plt>
   13eb0:	push	{r4, r5, r6, lr}
   13eb4:	umull	r4, r5, r0, r1
   13eb8:	adds	r3, r5, #0
   13ebc:	movne	r3, #1
   13ec0:	cmp	r4, #0
   13ec4:	blt	13edc <abort@plt+0x3128>
   13ec8:	cmp	r3, #0
   13ecc:	bne	13edc <abort@plt+0x3128>
   13ed0:	bl	10bb0 <calloc@plt>
   13ed4:	cmp	r0, #0
   13ed8:	popne	{r4, r5, r6, pc}
   13edc:	bl	13f20 <abort@plt+0x316c>
   13ee0:	push	{r4, r5, r6, lr}
   13ee4:	mov	r4, r1
   13ee8:	mov	r5, r0
   13eec:	mov	r0, r1
   13ef0:	bl	13cd8 <abort@plt+0x2f24>
   13ef4:	mov	r2, r4
   13ef8:	mov	r1, r5
   13efc:	pop	{r4, r5, r6, lr}
   13f00:	b	10c04 <memcpy@plt>
   13f04:	push	{r4, lr}
   13f08:	mov	r4, r0
   13f0c:	bl	10d00 <strlen@plt>
   13f10:	add	r1, r0, #1
   13f14:	mov	r0, r4
   13f18:	pop	{r4, lr}
   13f1c:	b	13ee0 <abort@plt+0x312c>
   13f20:	ldr	r3, [pc, #44]	; 13f54 <abort@plt+0x31a0>
   13f24:	push	{r4, lr}
   13f28:	mov	r2, #5
   13f2c:	ldr	r1, [pc, #36]	; 13f58 <abort@plt+0x31a4>
   13f30:	mov	r0, #0
   13f34:	ldr	r4, [r3]
   13f38:	bl	10c28 <dcgettext@plt>
   13f3c:	ldr	r2, [pc, #24]	; 13f5c <abort@plt+0x31a8>
   13f40:	mov	r1, #0
   13f44:	mov	r3, r0
   13f48:	mov	r0, r4
   13f4c:	bl	10ca0 <error@plt>
   13f50:	bl	10db4 <abort@plt>
   13f54:	andeq	r5, r2, ip, asr #1
   13f58:	andeq	r4, r1, r0, ror #27
   13f5c:	andeq	r4, r1, r8, lsr #19
   13f60:	push	{r4, r5, r6, r7, r8, lr}
   13f64:	subs	r7, r0, #0
   13f68:	ldr	r5, [pc, #108]	; 13fdc <abort@plt+0x3228>
   13f6c:	sub	sp, sp, #8
   13f70:	mov	r8, r1
   13f74:	ldr	r1, [r5]
   13f78:	moveq	r7, sp
   13f7c:	str	r1, [sp, #4]
   13f80:	mov	r0, r7
   13f84:	mov	r1, r8
   13f88:	mov	r6, r2
   13f8c:	bl	10c94 <mbrtowc@plt>
   13f90:	cmp	r6, #0
   13f94:	cmnne	r0, #3
   13f98:	mov	r4, r0
   13f9c:	bhi	13fbc <abort@plt+0x3208>
   13fa0:	ldr	r2, [sp, #4]
   13fa4:	ldr	r3, [r5]
   13fa8:	mov	r0, r4
   13fac:	cmp	r2, r3
   13fb0:	bne	13fd8 <abort@plt+0x3224>
   13fb4:	add	sp, sp, #8
   13fb8:	pop	{r4, r5, r6, r7, r8, pc}
   13fbc:	mov	r0, #0
   13fc0:	bl	14054 <abort@plt+0x32a0>
   13fc4:	cmp	r0, #0
   13fc8:	moveq	r4, #1
   13fcc:	ldrbeq	r3, [r8]
   13fd0:	streq	r3, [r7]
   13fd4:	b	13fa0 <abort@plt+0x31ec>
   13fd8:	bl	10c34 <__stack_chk_fail@plt>
   13fdc:	andeq	r4, r2, r8, lsl #30
   13fe0:	push	{r4, r5, r6, lr}
   13fe4:	mov	r4, r0
   13fe8:	bl	10c88 <__fpending@plt>
   13fec:	ldr	r5, [r4]
   13ff0:	and	r5, r5, #32
   13ff4:	mov	r6, r0
   13ff8:	mov	r0, r4
   13ffc:	bl	140d4 <abort@plt+0x3320>
   14000:	cmp	r5, #0
   14004:	mov	r4, r0
   14008:	bne	14034 <abort@plt+0x3280>
   1400c:	cmp	r0, #0
   14010:	beq	1402c <abort@plt+0x3278>
   14014:	cmp	r6, #0
   14018:	bne	1404c <abort@plt+0x3298>
   1401c:	bl	10d18 <__errno_location@plt>
   14020:	ldr	r4, [r0]
   14024:	subs	r4, r4, #9
   14028:	mvnne	r4, #0
   1402c:	mov	r0, r4
   14030:	pop	{r4, r5, r6, pc}
   14034:	cmp	r0, #0
   14038:	bne	1404c <abort@plt+0x3298>
   1403c:	bl	10d18 <__errno_location@plt>
   14040:	str	r4, [r0]
   14044:	mvn	r4, #0
   14048:	b	1402c <abort@plt+0x3278>
   1404c:	mvn	r4, #0
   14050:	b	1402c <abort@plt+0x3278>
   14054:	push	{r4, lr}
   14058:	mov	r1, #0
   1405c:	bl	10d78 <setlocale@plt>
   14060:	subs	r4, r0, #0
   14064:	beq	14090 <abort@plt+0x32dc>
   14068:	ldr	r1, [pc, #40]	; 14098 <abort@plt+0x32e4>
   1406c:	bl	10bd4 <strcmp@plt>
   14070:	cmp	r0, #0
   14074:	popeq	{r4, pc}
   14078:	mov	r0, r4
   1407c:	ldr	r1, [pc, #24]	; 1409c <abort@plt+0x32e8>
   14080:	bl	10bd4 <strcmp@plt>
   14084:	adds	r0, r0, #0
   14088:	movne	r0, #1
   1408c:	pop	{r4, pc}
   14090:	mov	r0, #1
   14094:	pop	{r4, pc}
   14098:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1409c:	strdeq	r4, [r1], -r8
   140a0:	push	{r4, lr}
   140a4:	mov	r0, #14
   140a8:	bl	10d90 <nl_langinfo@plt>
   140ac:	cmp	r0, #0
   140b0:	beq	140c8 <abort@plt+0x3314>
   140b4:	ldrb	r2, [r0]
   140b8:	ldr	r3, [pc, #16]	; 140d0 <abort@plt+0x331c>
   140bc:	cmp	r2, #0
   140c0:	moveq	r0, r3
   140c4:	pop	{r4, pc}
   140c8:	ldr	r0, [pc]	; 140d0 <abort@plt+0x331c>
   140cc:	pop	{r4, pc}
   140d0:	andeq	r4, r1, r0, lsl #28
   140d4:	push	{r4, r5, lr}
   140d8:	sub	sp, sp, #12
   140dc:	mov	r4, r0
   140e0:	bl	10d48 <fileno@plt>
   140e4:	cmp	r0, #0
   140e8:	mov	r0, r4
   140ec:	blt	14168 <abort@plt+0x33b4>
   140f0:	bl	10cc4 <__freading@plt>
   140f4:	cmp	r0, #0
   140f8:	bne	14134 <abort@plt+0x3380>
   140fc:	mov	r0, r4
   14100:	bl	14174 <abort@plt+0x33c0>
   14104:	cmp	r0, #0
   14108:	beq	14164 <abort@plt+0x33b0>
   1410c:	bl	10d18 <__errno_location@plt>
   14110:	mov	r5, r0
   14114:	mov	r0, r4
   14118:	ldr	r4, [r5]
   1411c:	bl	10d60 <fclose@plt>
   14120:	cmp	r4, #0
   14124:	mvnne	r0, #0
   14128:	strne	r4, [r5]
   1412c:	add	sp, sp, #12
   14130:	pop	{r4, r5, pc}
   14134:	mov	r0, r4
   14138:	bl	10d48 <fileno@plt>
   1413c:	mov	r3, #1
   14140:	str	r3, [sp]
   14144:	mov	r2, #0
   14148:	mov	r3, #0
   1414c:	bl	10c70 <lseek64@plt>
   14150:	mvn	r3, #0
   14154:	mvn	r2, #0
   14158:	cmp	r1, r3
   1415c:	cmpeq	r0, r2
   14160:	bne	140fc <abort@plt+0x3348>
   14164:	mov	r0, r4
   14168:	add	sp, sp, #12
   1416c:	pop	{r4, r5, lr}
   14170:	b	10d60 <fclose@plt>
   14174:	push	{r4, lr}
   14178:	subs	r4, r0, #0
   1417c:	sub	sp, sp, #8
   14180:	beq	1419c <abort@plt+0x33e8>
   14184:	bl	10cc4 <__freading@plt>
   14188:	cmp	r0, #0
   1418c:	beq	1419c <abort@plt+0x33e8>
   14190:	ldr	r3, [r4]
   14194:	tst	r3, #256	; 0x100
   14198:	bne	141ac <abort@plt+0x33f8>
   1419c:	mov	r0, r4
   141a0:	add	sp, sp, #8
   141a4:	pop	{r4, lr}
   141a8:	b	10be0 <fflush@plt>
   141ac:	mov	r3, #1
   141b0:	str	r3, [sp]
   141b4:	mov	r2, #0
   141b8:	mov	r3, #0
   141bc:	mov	r0, r4
   141c0:	bl	141d4 <abort@plt+0x3420>
   141c4:	mov	r0, r4
   141c8:	add	sp, sp, #8
   141cc:	pop	{r4, lr}
   141d0:	b	10be0 <fflush@plt>
   141d4:	push	{r4, r5, r6, r7, r8, lr}
   141d8:	sub	sp, sp, #8
   141dc:	ldmib	r0, {ip, lr}
   141e0:	mov	r4, r0
   141e4:	ldr	r5, [sp, #32]
   141e8:	cmp	lr, ip
   141ec:	beq	14204 <abort@plt+0x3450>
   141f0:	str	r5, [sp, #32]
   141f4:	mov	r0, r4
   141f8:	add	sp, sp, #8
   141fc:	pop	{r4, r5, r6, r7, r8, lr}
   14200:	b	10d6c <fseeko64@plt>
   14204:	ldr	lr, [r0, #20]
   14208:	ldr	ip, [r0, #16]
   1420c:	cmp	lr, ip
   14210:	bne	141f0 <abort@plt+0x343c>
   14214:	ldr	r8, [r0, #36]	; 0x24
   14218:	cmp	r8, #0
   1421c:	bne	141f0 <abort@plt+0x343c>
   14220:	mov	r6, r2
   14224:	mov	r7, r3
   14228:	bl	10d48 <fileno@plt>
   1422c:	mov	r2, r6
   14230:	mov	r3, r7
   14234:	str	r5, [sp]
   14238:	bl	10c70 <lseek64@plt>
   1423c:	mvn	r3, #0
   14240:	mvn	r2, #0
   14244:	cmp	r1, r3
   14248:	cmpeq	r0, r2
   1424c:	beq	1426c <abort@plt+0x34b8>
   14250:	ldr	r3, [r4]
   14254:	strd	r0, [r4, #80]	; 0x50
   14258:	mov	r0, r8
   1425c:	bic	r3, r3, #16
   14260:	str	r3, [r4]
   14264:	add	sp, sp, #8
   14268:	pop	{r4, r5, r6, r7, r8, pc}
   1426c:	mvn	r0, #0
   14270:	b	14264 <abort@plt+0x34b0>
   14274:	subs	r2, r1, #1
   14278:	bxeq	lr
   1427c:	bcc	14454 <abort@plt+0x36a0>
   14280:	cmp	r0, r1
   14284:	bls	14438 <abort@plt+0x3684>
   14288:	tst	r1, r2
   1428c:	beq	14444 <abort@plt+0x3690>
   14290:	clz	r3, r0
   14294:	clz	r2, r1
   14298:	sub	r3, r2, r3
   1429c:	rsbs	r3, r3, #31
   142a0:	addne	r3, r3, r3, lsl #1
   142a4:	mov	r2, #0
   142a8:	addne	pc, pc, r3, lsl #2
   142ac:	nop			; (mov r0, r0)
   142b0:	cmp	r0, r1, lsl #31
   142b4:	adc	r2, r2, r2
   142b8:	subcs	r0, r0, r1, lsl #31
   142bc:	cmp	r0, r1, lsl #30
   142c0:	adc	r2, r2, r2
   142c4:	subcs	r0, r0, r1, lsl #30
   142c8:	cmp	r0, r1, lsl #29
   142cc:	adc	r2, r2, r2
   142d0:	subcs	r0, r0, r1, lsl #29
   142d4:	cmp	r0, r1, lsl #28
   142d8:	adc	r2, r2, r2
   142dc:	subcs	r0, r0, r1, lsl #28
   142e0:	cmp	r0, r1, lsl #27
   142e4:	adc	r2, r2, r2
   142e8:	subcs	r0, r0, r1, lsl #27
   142ec:	cmp	r0, r1, lsl #26
   142f0:	adc	r2, r2, r2
   142f4:	subcs	r0, r0, r1, lsl #26
   142f8:	cmp	r0, r1, lsl #25
   142fc:	adc	r2, r2, r2
   14300:	subcs	r0, r0, r1, lsl #25
   14304:	cmp	r0, r1, lsl #24
   14308:	adc	r2, r2, r2
   1430c:	subcs	r0, r0, r1, lsl #24
   14310:	cmp	r0, r1, lsl #23
   14314:	adc	r2, r2, r2
   14318:	subcs	r0, r0, r1, lsl #23
   1431c:	cmp	r0, r1, lsl #22
   14320:	adc	r2, r2, r2
   14324:	subcs	r0, r0, r1, lsl #22
   14328:	cmp	r0, r1, lsl #21
   1432c:	adc	r2, r2, r2
   14330:	subcs	r0, r0, r1, lsl #21
   14334:	cmp	r0, r1, lsl #20
   14338:	adc	r2, r2, r2
   1433c:	subcs	r0, r0, r1, lsl #20
   14340:	cmp	r0, r1, lsl #19
   14344:	adc	r2, r2, r2
   14348:	subcs	r0, r0, r1, lsl #19
   1434c:	cmp	r0, r1, lsl #18
   14350:	adc	r2, r2, r2
   14354:	subcs	r0, r0, r1, lsl #18
   14358:	cmp	r0, r1, lsl #17
   1435c:	adc	r2, r2, r2
   14360:	subcs	r0, r0, r1, lsl #17
   14364:	cmp	r0, r1, lsl #16
   14368:	adc	r2, r2, r2
   1436c:	subcs	r0, r0, r1, lsl #16
   14370:	cmp	r0, r1, lsl #15
   14374:	adc	r2, r2, r2
   14378:	subcs	r0, r0, r1, lsl #15
   1437c:	cmp	r0, r1, lsl #14
   14380:	adc	r2, r2, r2
   14384:	subcs	r0, r0, r1, lsl #14
   14388:	cmp	r0, r1, lsl #13
   1438c:	adc	r2, r2, r2
   14390:	subcs	r0, r0, r1, lsl #13
   14394:	cmp	r0, r1, lsl #12
   14398:	adc	r2, r2, r2
   1439c:	subcs	r0, r0, r1, lsl #12
   143a0:	cmp	r0, r1, lsl #11
   143a4:	adc	r2, r2, r2
   143a8:	subcs	r0, r0, r1, lsl #11
   143ac:	cmp	r0, r1, lsl #10
   143b0:	adc	r2, r2, r2
   143b4:	subcs	r0, r0, r1, lsl #10
   143b8:	cmp	r0, r1, lsl #9
   143bc:	adc	r2, r2, r2
   143c0:	subcs	r0, r0, r1, lsl #9
   143c4:	cmp	r0, r1, lsl #8
   143c8:	adc	r2, r2, r2
   143cc:	subcs	r0, r0, r1, lsl #8
   143d0:	cmp	r0, r1, lsl #7
   143d4:	adc	r2, r2, r2
   143d8:	subcs	r0, r0, r1, lsl #7
   143dc:	cmp	r0, r1, lsl #6
   143e0:	adc	r2, r2, r2
   143e4:	subcs	r0, r0, r1, lsl #6
   143e8:	cmp	r0, r1, lsl #5
   143ec:	adc	r2, r2, r2
   143f0:	subcs	r0, r0, r1, lsl #5
   143f4:	cmp	r0, r1, lsl #4
   143f8:	adc	r2, r2, r2
   143fc:	subcs	r0, r0, r1, lsl #4
   14400:	cmp	r0, r1, lsl #3
   14404:	adc	r2, r2, r2
   14408:	subcs	r0, r0, r1, lsl #3
   1440c:	cmp	r0, r1, lsl #2
   14410:	adc	r2, r2, r2
   14414:	subcs	r0, r0, r1, lsl #2
   14418:	cmp	r0, r1, lsl #1
   1441c:	adc	r2, r2, r2
   14420:	subcs	r0, r0, r1, lsl #1
   14424:	cmp	r0, r1
   14428:	adc	r2, r2, r2
   1442c:	subcs	r0, r0, r1
   14430:	mov	r0, r2
   14434:	bx	lr
   14438:	moveq	r0, #1
   1443c:	movne	r0, #0
   14440:	bx	lr
   14444:	clz	r2, r1
   14448:	rsb	r2, r2, #31
   1444c:	lsr	r0, r0, r2
   14450:	bx	lr
   14454:	cmp	r0, #0
   14458:	mvnne	r0, #0
   1445c:	b	14480 <abort@plt+0x36cc>
   14460:	cmp	r1, #0
   14464:	beq	14454 <abort@plt+0x36a0>
   14468:	push	{r0, r1, lr}
   1446c:	bl	14274 <abort@plt+0x34c0>
   14470:	pop	{r1, r2, lr}
   14474:	mul	r3, r2, r0
   14478:	sub	r1, r1, r3
   1447c:	bx	lr
   14480:	push	{r1, lr}
   14484:	mov	r0, #8
   14488:	bl	10bc8 <raise@plt>
   1448c:	pop	{r1, pc}
   14490:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14494:	mov	r7, r0
   14498:	ldr	r6, [pc, #72]	; 144e8 <abort@plt+0x3734>
   1449c:	ldr	r5, [pc, #72]	; 144ec <abort@plt+0x3738>
   144a0:	add	r6, pc, r6
   144a4:	add	r5, pc, r5
   144a8:	sub	r6, r6, r5
   144ac:	mov	r8, r1
   144b0:	mov	r9, r2
   144b4:	bl	10b90 <calloc@plt-0x20>
   144b8:	asrs	r6, r6, #2
   144bc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   144c0:	mov	r4, #0
   144c4:	add	r4, r4, #1
   144c8:	ldr	r3, [r5], #4
   144cc:	mov	r2, r9
   144d0:	mov	r1, r8
   144d4:	mov	r0, r7
   144d8:	blx	r3
   144dc:	cmp	r6, r4
   144e0:	bne	144c4 <abort@plt+0x3710>
   144e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   144e8:	andeq	r0, r1, ip, asr sl
   144ec:	andeq	r0, r1, r4, asr sl
   144f0:	bx	lr
   144f4:	ldr	r3, [pc, #12]	; 14508 <abort@plt+0x3754>
   144f8:	mov	r1, #0
   144fc:	add	r3, pc, r3
   14500:	ldr	r2, [r3]
   14504:	b	10d24 <__cxa_atexit@plt>
   14508:	andeq	r0, r1, r0, asr #23

Disassembly of section .fini:

0001450c <.fini>:
   1450c:	push	{r3, lr}
   14510:	pop	{r3, pc}
