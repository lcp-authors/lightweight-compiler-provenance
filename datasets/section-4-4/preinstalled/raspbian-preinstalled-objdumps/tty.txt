
raspbian-preinstalled/tty:     file format elf32-littlearm


Disassembly of section .init:

00010b84 <.init>:
   10b84:	push	{r3, lr}
   10b88:	bl	10fd8 <abort@plt+0x218>
   10b8c:	pop	{r3, pc}

Disassembly of section .plt:

00010b90 <calloc@plt-0x14>:
   10b90:	push	{lr}		; (str lr, [sp, #-4]!)
   10b94:	ldr	lr, [pc, #4]	; 10ba0 <calloc@plt-0x4>
   10b98:	add	lr, pc, lr
   10b9c:	ldr	pc, [lr, #8]!
   10ba0:	andeq	r4, r1, r0, ror #8

00010ba4 <calloc@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #20, 20	; 0x14000
   10bac:	ldr	pc, [ip, #1120]!	; 0x460

00010bb0 <fputs_unlocked@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #20, 20	; 0x14000
   10bb8:	ldr	pc, [ip, #1112]!	; 0x458

00010bbc <raise@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #20, 20	; 0x14000
   10bc4:	ldr	pc, [ip, #1104]!	; 0x450

00010bc8 <strcmp@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #20, 20	; 0x14000
   10bd0:	ldr	pc, [ip, #1096]!	; 0x448

00010bd4 <fflush@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #20, 20	; 0x14000
   10bdc:	ldr	pc, [ip, #1088]!	; 0x440

00010be0 <free@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #20, 20	; 0x14000
   10be8:	ldr	pc, [ip, #1080]!	; 0x438

00010bec <_exit@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #20, 20	; 0x14000
   10bf4:	ldr	pc, [ip, #1072]!	; 0x430

00010bf8 <memcpy@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #20, 20	; 0x14000
   10c00:	ldr	pc, [ip, #1064]!	; 0x428

00010c04 <mbsinit@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #20, 20	; 0x14000
   10c0c:	ldr	pc, [ip, #1056]!	; 0x420

00010c10 <memcmp@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #20, 20	; 0x14000
   10c18:	ldr	pc, [ip, #1048]!	; 0x418

00010c1c <dcgettext@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #20, 20	; 0x14000
   10c24:	ldr	pc, [ip, #1040]!	; 0x410

00010c28 <__stack_chk_fail@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #20, 20	; 0x14000
   10c30:	ldr	pc, [ip, #1032]!	; 0x408

00010c34 <realloc@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #20, 20	; 0x14000
   10c3c:	ldr	pc, [ip, #1024]!	; 0x400

00010c40 <textdomain@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #20, 20	; 0x14000
   10c48:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c4c <iswprint@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #20, 20	; 0x14000
   10c54:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c58 <fwrite@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #20, 20	; 0x14000
   10c60:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c64 <lseek64@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #20, 20	; 0x14000
   10c6c:	ldr	pc, [ip, #992]!	; 0x3e0

00010c70 <__ctype_get_mb_cur_max@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #20, 20	; 0x14000
   10c78:	ldr	pc, [ip, #984]!	; 0x3d8

00010c7c <__fpending@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #20, 20	; 0x14000
   10c84:	ldr	pc, [ip, #976]!	; 0x3d0

00010c88 <mbrtowc@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #20, 20	; 0x14000
   10c90:	ldr	pc, [ip, #968]!	; 0x3c8

00010c94 <error@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #20, 20	; 0x14000
   10c9c:	ldr	pc, [ip, #960]!	; 0x3c0

00010ca0 <puts@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #20, 20	; 0x14000
   10ca8:	ldr	pc, [ip, #952]!	; 0x3b8

00010cac <malloc@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #20, 20	; 0x14000
   10cb4:	ldr	pc, [ip, #944]!	; 0x3b0

00010cb8 <__libc_start_main@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #20, 20	; 0x14000
   10cc0:	ldr	pc, [ip, #936]!	; 0x3a8

00010cc4 <__freading@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #20, 20	; 0x14000
   10ccc:	ldr	pc, [ip, #928]!	; 0x3a0

00010cd0 <__gmon_start__@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #20, 20	; 0x14000
   10cd8:	ldr	pc, [ip, #920]!	; 0x398

00010cdc <getopt_long@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #20, 20	; 0x14000
   10ce4:	ldr	pc, [ip, #912]!	; 0x390

00010ce8 <__ctype_b_loc@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #20, 20	; 0x14000
   10cf0:	ldr	pc, [ip, #904]!	; 0x388

00010cf4 <exit@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #20, 20	; 0x14000
   10cfc:	ldr	pc, [ip, #896]!	; 0x380

00010d00 <ttyname@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #20, 20	; 0x14000
   10d08:	ldr	pc, [ip, #888]!	; 0x378

00010d0c <strlen@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #20, 20	; 0x14000
   10d14:	ldr	pc, [ip, #880]!	; 0x370

00010d18 <__errno_location@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #20, 20	; 0x14000
   10d20:	ldr	pc, [ip, #872]!	; 0x368

00010d24 <__cxa_atexit@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #20, 20	; 0x14000
   10d2c:	ldr	pc, [ip, #864]!	; 0x360

00010d30 <memset@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #20, 20	; 0x14000
   10d38:	ldr	pc, [ip, #856]!	; 0x358

00010d3c <__printf_chk@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #20, 20	; 0x14000
   10d44:	ldr	pc, [ip, #848]!	; 0x350

00010d48 <fileno@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #20, 20	; 0x14000
   10d50:	ldr	pc, [ip, #840]!	; 0x348

00010d54 <__fprintf_chk@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #20, 20	; 0x14000
   10d5c:	ldr	pc, [ip, #832]!	; 0x340

00010d60 <fclose@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #20, 20	; 0x14000
   10d68:	ldr	pc, [ip, #824]!	; 0x338

00010d6c <fseeko64@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #20, 20	; 0x14000
   10d74:	ldr	pc, [ip, #816]!	; 0x330

00010d78 <setlocale@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #20, 20	; 0x14000
   10d80:	ldr	pc, [ip, #808]!	; 0x328

00010d84 <strrchr@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #20, 20	; 0x14000
   10d8c:	ldr	pc, [ip, #800]!	; 0x320

00010d90 <nl_langinfo@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #20, 20	; 0x14000
   10d98:	ldr	pc, [ip, #792]!	; 0x318

00010d9c <bindtextdomain@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #20, 20	; 0x14000
   10da4:	ldr	pc, [ip, #784]!	; 0x310

00010da8 <isatty@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #20, 20	; 0x14000
   10db0:	ldr	pc, [ip, #776]!	; 0x308

00010db4 <strncmp@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #20, 20	; 0x14000
   10dbc:	ldr	pc, [ip, #768]!	; 0x300

00010dc0 <abort@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #20, 20	; 0x14000
   10dc8:	ldr	pc, [ip, #760]!	; 0x2f8

Disassembly of section .text:

00010dcc <.text>:
   10dcc:	push	{r4, r5, r6, r7, r8, r9, lr}
   10dd0:	mov	r6, r0
   10dd4:	sub	sp, sp, #12
   10dd8:	ldr	r0, [r1]
   10ddc:	mov	r5, r1
   10de0:	bl	11464 <abort@plt+0x6a4>
   10de4:	ldr	r1, [pc, #368]	; 10f5c <abort@plt+0x19c>
   10de8:	mov	r0, #6
   10dec:	bl	10d78 <setlocale@plt>
   10df0:	ldr	r1, [pc, #360]	; 10f60 <abort@plt+0x1a0>
   10df4:	ldr	r0, [pc, #360]	; 10f64 <abort@plt+0x1a4>
   10df8:	bl	10d9c <bindtextdomain@plt>
   10dfc:	ldr	r0, [pc, #352]	; 10f64 <abort@plt+0x1a4>
   10e00:	bl	10c40 <textdomain@plt>
   10e04:	ldr	r7, [pc, #348]	; 10f68 <abort@plt+0x1a8>
   10e08:	ldr	r3, [pc, #348]	; 10f6c <abort@plt+0x1ac>
   10e0c:	ldr	r9, [pc, #348]	; 10f70 <abort@plt+0x1b0>
   10e10:	ldr	r8, [pc, #348]	; 10f74 <abort@plt+0x1b4>
   10e14:	mov	r2, #3
   10e18:	ldr	r0, [pc, #344]	; 10f78 <abort@plt+0x1b8>
   10e1c:	mov	r4, #0
   10e20:	str	r2, [r3]
   10e24:	bl	14454 <abort@plt+0x3694>
   10e28:	strb	r4, [r7]
   10e2c:	str	r4, [sp]
   10e30:	mov	r3, r9
   10e34:	mov	r2, r8
   10e38:	mov	r1, r5
   10e3c:	mov	r0, r6
   10e40:	bl	10cdc <getopt_long@plt>
   10e44:	cmn	r0, #1
   10e48:	beq	10ea4 <abort@plt+0xe4>
   10e4c:	cmn	r0, #2
   10e50:	beq	10f1c <abort@plt+0x15c>
   10e54:	cmp	r0, #115	; 0x73
   10e58:	moveq	r3, #1
   10e5c:	strbeq	r3, [r7]
   10e60:	beq	10e2c <abort@plt+0x6c>
   10e64:	cmn	r0, #3
   10e68:	beq	10e74 <abort@plt+0xb4>
   10e6c:	mov	r0, #2
   10e70:	bl	1108c <abort@plt+0x2cc>
   10e74:	ldr	r1, [pc, #256]	; 10f7c <abort@plt+0x1bc>
   10e78:	ldr	r3, [pc, #256]	; 10f80 <abort@plt+0x1c0>
   10e7c:	ldr	r2, [pc, #256]	; 10f84 <abort@plt+0x1c4>
   10e80:	str	r4, [sp, #4]
   10e84:	ldr	r0, [r1]
   10e88:	ldr	r3, [r3]
   10e8c:	ldr	r1, [pc, #244]	; 10f88 <abort@plt+0x1c8>
   10e90:	str	r2, [sp]
   10e94:	ldr	r2, [pc, #240]	; 10f8c <abort@plt+0x1cc>
   10e98:	bl	13b34 <abort@plt+0x2d74>
   10e9c:	mov	r0, #0
   10ea0:	bl	10cf4 <exit@plt>
   10ea4:	ldr	r4, [pc, #228]	; 10f90 <abort@plt+0x1d0>
   10ea8:	ldr	r3, [r4]
   10eac:	cmp	r3, r6
   10eb0:	blt	10f24 <abort@plt+0x164>
   10eb4:	bl	10d18 <__errno_location@plt>
   10eb8:	ldrb	r4, [r7]
   10ebc:	mov	r3, #2
   10ec0:	cmp	r4, #0
   10ec4:	str	r3, [r0]
   10ec8:	bne	10ef0 <abort@plt+0x130>
   10ecc:	mov	r0, r4
   10ed0:	bl	10d00 <ttyname@plt>
   10ed4:	subs	r3, r0, #0
   10ed8:	beq	10f04 <abort@plt+0x144>
   10edc:	mov	r0, r3
   10ee0:	bl	10ca0 <puts@plt>
   10ee4:	mov	r0, r4
   10ee8:	add	sp, sp, #12
   10eec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10ef0:	mov	r0, #0
   10ef4:	bl	10da8 <isatty@plt>
   10ef8:	clz	r4, r0
   10efc:	lsr	r4, r4, #5
   10f00:	b	10ee4 <abort@plt+0x124>
   10f04:	mov	r2, #5
   10f08:	ldr	r1, [pc, #132]	; 10f94 <abort@plt+0x1d4>
   10f0c:	bl	10c1c <dcgettext@plt>
   10f10:	mov	r4, #1
   10f14:	mov	r3, r0
   10f18:	b	10edc <abort@plt+0x11c>
   10f1c:	mov	r0, #0
   10f20:	bl	1108c <abort@plt+0x2cc>
   10f24:	mov	r2, #5
   10f28:	ldr	r1, [pc, #104]	; 10f98 <abort@plt+0x1d8>
   10f2c:	mov	r0, #0
   10f30:	bl	10c1c <dcgettext@plt>
   10f34:	ldr	r3, [r4]
   10f38:	mov	r6, r0
   10f3c:	ldr	r0, [r5, r3, lsl #2]
   10f40:	bl	136c8 <abort@plt+0x2908>
   10f44:	mov	r1, #0
   10f48:	mov	r2, r6
   10f4c:	mov	r3, r0
   10f50:	mov	r0, r1
   10f54:	bl	10c94 <error@plt>
   10f58:	b	10e6c <abort@plt+0xac>
   10f5c:	andeq	r4, r1, r0, lsl ip
   10f60:	andeq	r4, r1, r4, lsr #14
   10f64:	andeq	r4, r1, r8, ror r6
   10f68:	andeq	r5, r2, r1, lsr r1
   10f6c:	ldrdeq	r5, [r2], -r4
   10f70:			; <UNDEFINED> instruction: 0x000144b0
   10f74:	andeq	r4, r1, r0, lsl #13
   10f78:	andeq	r1, r1, ip, lsl #7
   10f7c:	andeq	r5, r2, ip, lsr #2
   10f80:	ldrdeq	r5, [r2], -r0
   10f84:	andeq	r4, r1, r8, lsr r7
   10f88:	andeq	r4, r1, r0, lsl #10
   10f8c:	andeq	r4, r1, r4, ror r6
   10f90:	andeq	r5, r2, r0, lsr #2
   10f94:	andeq	r4, r1, ip, asr r7
   10f98:	andeq	r4, r1, r8, asr #14
   10f9c:	mov	fp, #0
   10fa0:	mov	lr, #0
   10fa4:	pop	{r1}		; (ldr r1, [sp], #4)
   10fa8:	mov	r2, sp
   10fac:	push	{r2}		; (str r2, [sp, #-4]!)
   10fb0:	push	{r0}		; (str r0, [sp, #-4]!)
   10fb4:	ldr	ip, [pc, #16]	; 10fcc <abort@plt+0x20c>
   10fb8:	push	{ip}		; (str ip, [sp, #-4]!)
   10fbc:	ldr	r0, [pc, #12]	; 10fd0 <abort@plt+0x210>
   10fc0:	ldr	r3, [pc, #12]	; 10fd4 <abort@plt+0x214>
   10fc4:	bl	10cb8 <__libc_start_main@plt>
   10fc8:	bl	10dc0 <abort@plt>
   10fcc:	andeq	r4, r1, r0, asr r4
   10fd0:	andeq	r0, r1, ip, asr #27
   10fd4:	strdeq	r4, [r1], -r0
   10fd8:	ldr	r3, [pc, #20]	; 10ff4 <abort@plt+0x234>
   10fdc:	ldr	r2, [pc, #20]	; 10ff8 <abort@plt+0x238>
   10fe0:	add	r3, pc, r3
   10fe4:	ldr	r2, [r3, r2]
   10fe8:	cmp	r2, #0
   10fec:	bxeq	lr
   10ff0:	b	10cd0 <__gmon_start__@plt>
   10ff4:	andeq	r4, r1, r8, lsl r0
   10ff8:	andeq	r0, r0, r4, asr #1
   10ffc:	ldr	r0, [pc, #24]	; 1101c <abort@plt+0x25c>
   11000:	ldr	r3, [pc, #24]	; 11020 <abort@plt+0x260>
   11004:	cmp	r3, r0
   11008:	bxeq	lr
   1100c:	ldr	r3, [pc, #16]	; 11024 <abort@plt+0x264>
   11010:	cmp	r3, #0
   11014:	bxeq	lr
   11018:	bx	r3
   1101c:	andeq	r5, r2, r8, lsl r1
   11020:	andeq	r5, r2, r8, lsl r1
   11024:	andeq	r0, r0, r0
   11028:	ldr	r0, [pc, #36]	; 11054 <abort@plt+0x294>
   1102c:	ldr	r1, [pc, #36]	; 11058 <abort@plt+0x298>
   11030:	sub	r1, r1, r0
   11034:	asr	r1, r1, #2
   11038:	add	r1, r1, r1, lsr #31
   1103c:	asrs	r1, r1, #1
   11040:	bxeq	lr
   11044:	ldr	r3, [pc, #16]	; 1105c <abort@plt+0x29c>
   11048:	cmp	r3, #0
   1104c:	bxeq	lr
   11050:	bx	r3
   11054:	andeq	r5, r2, r8, lsl r1
   11058:	andeq	r5, r2, r8, lsl r1
   1105c:	andeq	r0, r0, r0
   11060:	push	{r4, lr}
   11064:	ldr	r4, [pc, #24]	; 11084 <abort@plt+0x2c4>
   11068:	ldrb	r3, [r4]
   1106c:	cmp	r3, #0
   11070:	popne	{r4, pc}
   11074:	bl	10ffc <abort@plt+0x23c>
   11078:	mov	r3, #1
   1107c:	strb	r3, [r4]
   11080:	pop	{r4, pc}
   11084:	andeq	r5, r2, r0, lsr r1
   11088:	b	11028 <abort@plt+0x268>
   1108c:	ldr	r3, [pc, #648]	; 1131c <abort@plt+0x55c>
   11090:	push	{r7, lr}
   11094:	sub	sp, sp, #64	; 0x40
   11098:	ldr	r3, [r3]
   1109c:	subs	r6, r0, #0
   110a0:	str	r3, [sp, #60]	; 0x3c
   110a4:	beq	110e0 <abort@plt+0x320>
   110a8:	ldr	r3, [pc, #624]	; 11320 <abort@plt+0x560>
   110ac:	mov	r2, #5
   110b0:	ldr	r1, [pc, #620]	; 11324 <abort@plt+0x564>
   110b4:	mov	r0, #0
   110b8:	ldr	r4, [r3]
   110bc:	bl	10c1c <dcgettext@plt>
   110c0:	ldr	r3, [pc, #608]	; 11328 <abort@plt+0x568>
   110c4:	mov	r1, #1
   110c8:	ldr	r3, [r3]
   110cc:	mov	r2, r0
   110d0:	mov	r0, r4
   110d4:	bl	10d54 <__fprintf_chk@plt>
   110d8:	mov	r0, r6
   110dc:	bl	10cf4 <exit@plt>
   110e0:	mov	r2, #5
   110e4:	ldr	r1, [pc, #576]	; 1132c <abort@plt+0x56c>
   110e8:	bl	10c1c <dcgettext@plt>
   110ec:	ldr	r3, [pc, #564]	; 11328 <abort@plt+0x568>
   110f0:	ldr	r4, [pc, #568]	; 11330 <abort@plt+0x570>
   110f4:	ldr	r2, [r3]
   110f8:	mov	r1, r0
   110fc:	mov	r0, #1
   11100:	bl	10d3c <__printf_chk@plt>
   11104:	mov	r2, #5
   11108:	ldr	r1, [pc, #548]	; 11334 <abort@plt+0x574>
   1110c:	mov	r0, r6
   11110:	bl	10c1c <dcgettext@plt>
   11114:	ldr	r1, [r4]
   11118:	bl	10bb0 <fputs_unlocked@plt>
   1111c:	mov	r2, #5
   11120:	ldr	r1, [pc, #528]	; 11338 <abort@plt+0x578>
   11124:	mov	r0, r6
   11128:	bl	10c1c <dcgettext@plt>
   1112c:	ldr	r1, [r4]
   11130:	bl	10bb0 <fputs_unlocked@plt>
   11134:	mov	r2, #5
   11138:	ldr	r1, [pc, #508]	; 1133c <abort@plt+0x57c>
   1113c:	mov	r0, r6
   11140:	bl	10c1c <dcgettext@plt>
   11144:	ldr	r1, [r4]
   11148:	bl	10bb0 <fputs_unlocked@plt>
   1114c:	ldr	lr, [pc, #492]	; 11340 <abort@plt+0x580>
   11150:	add	ip, sp, #4
   11154:	ldm	lr!, {r0, r1, r2, r3}
   11158:	stmia	ip!, {r0, r1, r2, r3}
   1115c:	ldm	lr!, {r0, r1, r2, r3}
   11160:	ldr	r5, [sp, #4]
   11164:	stmia	ip!, {r0, r1, r2, r3}
   11168:	cmp	r5, #0
   1116c:	ldm	lr!, {r0, r1, r2, r3}
   11170:	addeq	r4, sp, #4
   11174:	stmia	ip!, {r0, r1, r2, r3}
   11178:	ldm	lr, {r0, r1}
   1117c:	stm	ip, {r0, r1}
   11180:	beq	111b0 <abort@plt+0x3f0>
   11184:	ldr	r7, [pc, #440]	; 11344 <abort@plt+0x584>
   11188:	add	r4, sp, #4
   1118c:	b	1119c <abort@plt+0x3dc>
   11190:	ldr	r5, [r4, #8]!
   11194:	cmp	r5, #0
   11198:	beq	111b0 <abort@plt+0x3f0>
   1119c:	mov	r1, r5
   111a0:	mov	r0, r7
   111a4:	bl	10bc8 <strcmp@plt>
   111a8:	cmp	r0, #0
   111ac:	bne	11190 <abort@plt+0x3d0>
   111b0:	ldr	r4, [r4, #4]
   111b4:	mov	r2, #5
   111b8:	cmp	r4, #0
   111bc:	ldr	r1, [pc, #388]	; 11348 <abort@plt+0x588>
   111c0:	beq	11268 <abort@plt+0x4a8>
   111c4:	mov	r0, #0
   111c8:	bl	10c1c <dcgettext@plt>
   111cc:	ldr	r3, [pc, #376]	; 1134c <abort@plt+0x58c>
   111d0:	ldr	r2, [pc, #376]	; 11350 <abort@plt+0x590>
   111d4:	mov	r1, r0
   111d8:	mov	r0, #1
   111dc:	bl	10d3c <__printf_chk@plt>
   111e0:	mov	r1, #0
   111e4:	mov	r0, #5
   111e8:	bl	10d78 <setlocale@plt>
   111ec:	cmp	r0, #0
   111f0:	ldreq	r5, [pc, #332]	; 11344 <abort@plt+0x584>
   111f4:	beq	11210 <abort@plt+0x450>
   111f8:	mov	r2, #3
   111fc:	ldr	r1, [pc, #336]	; 11354 <abort@plt+0x594>
   11200:	bl	10db4 <strncmp@plt>
   11204:	ldr	r5, [pc, #312]	; 11344 <abort@plt+0x584>
   11208:	cmp	r0, #0
   1120c:	bne	112f8 <abort@plt+0x538>
   11210:	mov	r2, #5
   11214:	ldr	r1, [pc, #316]	; 11358 <abort@plt+0x598>
   11218:	mov	r0, #0
   1121c:	bl	10c1c <dcgettext@plt>
   11220:	ldr	r3, [pc, #284]	; 11344 <abort@plt+0x584>
   11224:	ldr	r2, [pc, #288]	; 1134c <abort@plt+0x58c>
   11228:	mov	r1, r0
   1122c:	mov	r0, #1
   11230:	bl	10d3c <__printf_chk@plt>
   11234:	mov	r2, #5
   11238:	ldr	r1, [pc, #284]	; 1135c <abort@plt+0x59c>
   1123c:	mov	r0, #0
   11240:	bl	10c1c <dcgettext@plt>
   11244:	ldr	r2, [pc, #276]	; 11360 <abort@plt+0x5a0>
   11248:	cmp	r4, r5
   1124c:	ldr	r3, [pc, #272]	; 11364 <abort@plt+0x5a4>
   11250:	movne	r3, r2
   11254:	mov	r1, r0
   11258:	mov	r2, r4
   1125c:	mov	r0, #1
   11260:	bl	10d3c <__printf_chk@plt>
   11264:	b	110d8 <abort@plt+0x318>
   11268:	mov	r0, r4
   1126c:	bl	10c1c <dcgettext@plt>
   11270:	ldr	r3, [pc, #212]	; 1134c <abort@plt+0x58c>
   11274:	ldr	r2, [pc, #212]	; 11350 <abort@plt+0x590>
   11278:	mov	r1, r0
   1127c:	mov	r0, #1
   11280:	bl	10d3c <__printf_chk@plt>
   11284:	mov	r1, r4
   11288:	mov	r0, #5
   1128c:	bl	10d78 <setlocale@plt>
   11290:	cmp	r0, #0
   11294:	beq	112ac <abort@plt+0x4ec>
   11298:	mov	r2, #3
   1129c:	ldr	r1, [pc, #176]	; 11354 <abort@plt+0x594>
   112a0:	bl	10db4 <strncmp@plt>
   112a4:	cmp	r0, #0
   112a8:	bne	112f0 <abort@plt+0x530>
   112ac:	mov	r2, #5
   112b0:	ldr	r1, [pc, #160]	; 11358 <abort@plt+0x598>
   112b4:	mov	r0, #0
   112b8:	bl	10c1c <dcgettext@plt>
   112bc:	ldr	r3, [pc, #128]	; 11344 <abort@plt+0x584>
   112c0:	ldr	r2, [pc, #132]	; 1134c <abort@plt+0x58c>
   112c4:	mov	r4, r3
   112c8:	mov	r1, r0
   112cc:	mov	r0, #1
   112d0:	bl	10d3c <__printf_chk@plt>
   112d4:	ldr	r1, [pc, #128]	; 1135c <abort@plt+0x59c>
   112d8:	mov	r2, #5
   112dc:	mov	r0, #0
   112e0:	bl	10c1c <dcgettext@plt>
   112e4:	ldr	r3, [pc, #120]	; 11364 <abort@plt+0x5a4>
   112e8:	mov	r1, r0
   112ec:	b	11258 <abort@plt+0x498>
   112f0:	ldr	r5, [pc, #76]	; 11344 <abort@plt+0x584>
   112f4:	mov	r4, r5
   112f8:	mov	r2, #5
   112fc:	ldr	r1, [pc, #100]	; 11368 <abort@plt+0x5a8>
   11300:	mov	r0, #0
   11304:	bl	10c1c <dcgettext@plt>
   11308:	ldr	r2, [pc, #52]	; 11344 <abort@plt+0x584>
   1130c:	mov	r1, r0
   11310:	mov	r0, #1
   11314:	bl	10d3c <__printf_chk@plt>
   11318:	b	11210 <abort@plt+0x450>
   1131c:	andeq	r4, r2, r8, lsl #30
   11320:	andeq	r5, r2, r8, lsr #2
   11324:	andeq	r4, r1, r4, lsl #10
   11328:	andeq	r5, r2, ip, lsr r1
   1132c:	andeq	r4, r1, ip, lsr #10
   11330:	andeq	r5, r2, ip, lsr #2
   11334:	andeq	r4, r1, r4, asr #10
   11338:	andeq	r4, r1, ip, asr #11
   1133c:	strdeq	r4, [r1], -ip
   11340:	andeq	r4, r1, r8, ror r4
   11344:	andeq	r4, r1, r0, lsl #10
   11348:	andeq	r4, r1, r4, lsr r6
   1134c:	andeq	r4, r1, ip, asr #12
   11350:	andeq	r4, r1, r4, ror r6
   11354:	andeq	r4, r1, r4, lsl #13
   11358:	ldrdeq	r4, [r1], -r0
   1135c:	strdeq	r4, [r1], -r0
   11360:	andeq	r4, r1, r0, lsl ip
   11364:	andeq	r4, r1, r0, ror r7
   11368:	andeq	r4, r1, r8, lsl #13
   1136c:	ldr	r3, [pc, #4]	; 11378 <abort@plt+0x5b8>
   11370:	str	r0, [r3]
   11374:	bx	lr
   11378:	andeq	r5, r2, r4, lsr r1
   1137c:	ldr	r3, [pc, #4]	; 11388 <abort@plt+0x5c8>
   11380:	strb	r0, [r3, #4]
   11384:	bx	lr
   11388:	andeq	r5, r2, r4, lsr r1
   1138c:	ldr	r3, [pc, #180]	; 11448 <abort@plt+0x688>
   11390:	push	{r4, r5, r6, lr}
   11394:	sub	sp, sp, #8
   11398:	ldr	r0, [r3]
   1139c:	bl	13f40 <abort@plt+0x3180>
   113a0:	cmp	r0, #0
   113a4:	beq	113cc <abort@plt+0x60c>
   113a8:	bl	10d18 <__errno_location@plt>
   113ac:	ldr	r5, [pc, #152]	; 1144c <abort@plt+0x68c>
   113b0:	ldrb	r3, [r5, #4]
   113b4:	cmp	r3, #0
   113b8:	mov	r4, r0
   113bc:	beq	113e8 <abort@plt+0x628>
   113c0:	ldr	r3, [r0]
   113c4:	cmp	r3, #32
   113c8:	bne	113e8 <abort@plt+0x628>
   113cc:	ldr	r3, [pc, #124]	; 11450 <abort@plt+0x690>
   113d0:	ldr	r0, [r3]
   113d4:	bl	13f40 <abort@plt+0x3180>
   113d8:	cmp	r0, #0
   113dc:	bne	11428 <abort@plt+0x668>
   113e0:	add	sp, sp, #8
   113e4:	pop	{r4, r5, r6, pc}
   113e8:	mov	r2, #5
   113ec:	ldr	r1, [pc, #96]	; 11454 <abort@plt+0x694>
   113f0:	mov	r0, #0
   113f4:	bl	10c1c <dcgettext@plt>
   113f8:	mov	r6, r0
   113fc:	ldr	r0, [r5]
   11400:	cmp	r0, #0
   11404:	beq	11434 <abort@plt+0x674>
   11408:	ldr	r4, [r4]
   1140c:	bl	134e8 <abort@plt+0x2728>
   11410:	mov	r1, r4
   11414:	str	r6, [sp]
   11418:	ldr	r2, [pc, #56]	; 11458 <abort@plt+0x698>
   1141c:	mov	r3, r0
   11420:	mov	r0, #0
   11424:	bl	10c94 <error@plt>
   11428:	ldr	r3, [pc, #44]	; 1145c <abort@plt+0x69c>
   1142c:	ldr	r0, [r3]
   11430:	bl	10bec <_exit@plt>
   11434:	mov	r3, r6
   11438:	ldr	r1, [r4]
   1143c:	ldr	r2, [pc, #28]	; 11460 <abort@plt+0x6a0>
   11440:	bl	10c94 <error@plt>
   11444:	b	11428 <abort@plt+0x668>
   11448:	andeq	r5, r2, ip, lsr #2
   1144c:	andeq	r5, r2, r4, lsr r1
   11450:	andeq	r5, r2, r8, lsr #2
   11454:	strdeq	r4, [r1], -ip
   11458:	andeq	r4, r1, r8, lsl #16
   1145c:	ldrdeq	r5, [r2], -r4
   11460:	andeq	r4, r1, ip, lsl #16
   11464:	push	{r4, r5, r6, lr}
   11468:	subs	r4, r0, #0
   1146c:	beq	114e0 <abort@plt+0x720>
   11470:	mov	r1, #47	; 0x2f
   11474:	bl	10d84 <strrchr@plt>
   11478:	subs	r5, r0, #0
   1147c:	beq	114cc <abort@plt+0x70c>
   11480:	add	r6, r5, #1
   11484:	sub	r3, r6, r4
   11488:	cmp	r3, #6
   1148c:	ble	114cc <abort@plt+0x70c>
   11490:	mov	r2, #7
   11494:	ldr	r1, [pc, #96]	; 114fc <abort@plt+0x73c>
   11498:	sub	r0, r5, #6
   1149c:	bl	10db4 <strncmp@plt>
   114a0:	cmp	r0, #0
   114a4:	bne	114cc <abort@plt+0x70c>
   114a8:	mov	r2, #3
   114ac:	ldr	r1, [pc, #76]	; 11500 <abort@plt+0x740>
   114b0:	mov	r0, r6
   114b4:	bl	10db4 <strncmp@plt>
   114b8:	cmp	r0, #0
   114bc:	movne	r4, r6
   114c0:	ldreq	r3, [pc, #60]	; 11504 <abort@plt+0x744>
   114c4:	addeq	r4, r5, #4
   114c8:	streq	r4, [r3]
   114cc:	ldr	r2, [pc, #52]	; 11508 <abort@plt+0x748>
   114d0:	ldr	r3, [pc, #52]	; 1150c <abort@plt+0x74c>
   114d4:	str	r4, [r2]
   114d8:	str	r4, [r3]
   114dc:	pop	{r4, r5, r6, pc}
   114e0:	ldr	r3, [pc, #40]	; 11510 <abort@plt+0x750>
   114e4:	mov	r2, #55	; 0x37
   114e8:	mov	r1, #1
   114ec:	ldr	r3, [r3]
   114f0:	ldr	r0, [pc, #28]	; 11514 <abort@plt+0x754>
   114f4:	bl	10c58 <fwrite@plt>
   114f8:	bl	10dc0 <abort@plt>
   114fc:	andeq	r4, r1, r8, asr #16
   11500:	andeq	r4, r1, r0, asr r8
   11504:	andeq	r5, r2, r8, lsl r1
   11508:	andeq	r5, r2, ip, lsr r1
   1150c:	andeq	r5, r2, ip, lsl r1
   11510:	andeq	r5, r2, r8, lsr #2
   11514:	andeq	r4, r1, r0, lsl r8
   11518:	push	{r4, lr}
   1151c:	mov	r2, #48	; 0x30
   11520:	mov	r4, r1
   11524:	mov	r1, #0
   11528:	bl	10d30 <memset@plt>
   1152c:	cmp	r4, #10
   11530:	beq	1153c <abort@plt+0x77c>
   11534:	str	r4, [r0]
   11538:	pop	{r4, pc}
   1153c:	bl	10dc0 <abort@plt>
   11540:	push	{r4, r5, r6, lr}
   11544:	mov	r2, #5
   11548:	mov	r5, r0
   1154c:	mov	r6, r1
   11550:	mov	r1, r0
   11554:	mov	r0, #0
   11558:	bl	10c1c <dcgettext@plt>
   1155c:	cmp	r5, r0
   11560:	mov	r4, r0
   11564:	beq	11570 <abort@plt+0x7b0>
   11568:	mov	r0, r4
   1156c:	pop	{r4, r5, r6, pc}
   11570:	bl	14000 <abort@plt+0x3240>
   11574:	ldrb	r3, [r0]
   11578:	bic	r3, r3, #32
   1157c:	cmp	r3, #85	; 0x55
   11580:	bne	115e0 <abort@plt+0x820>
   11584:	ldrb	r3, [r0, #1]
   11588:	bic	r3, r3, #32
   1158c:	cmp	r3, #84	; 0x54
   11590:	bne	11658 <abort@plt+0x898>
   11594:	ldrb	r3, [r0, #2]
   11598:	bic	r3, r3, #32
   1159c:	cmp	r3, #70	; 0x46
   115a0:	bne	11658 <abort@plt+0x898>
   115a4:	ldrb	r3, [r0, #3]
   115a8:	cmp	r3, #45	; 0x2d
   115ac:	bne	11658 <abort@plt+0x898>
   115b0:	ldrb	r3, [r0, #4]
   115b4:	cmp	r3, #56	; 0x38
   115b8:	bne	11658 <abort@plt+0x898>
   115bc:	ldrb	r3, [r0, #5]
   115c0:	cmp	r3, #0
   115c4:	bne	11658 <abort@plt+0x898>
   115c8:	ldrb	r2, [r4]
   115cc:	ldr	r3, [pc, #156]	; 11670 <abort@plt+0x8b0>
   115d0:	ldr	r4, [pc, #156]	; 11674 <abort@plt+0x8b4>
   115d4:	cmp	r2, #96	; 0x60
   115d8:	movne	r4, r3
   115dc:	b	11568 <abort@plt+0x7a8>
   115e0:	cmp	r3, #71	; 0x47
   115e4:	bne	11658 <abort@plt+0x898>
   115e8:	ldrb	r3, [r0, #1]
   115ec:	bic	r3, r3, #32
   115f0:	cmp	r3, #66	; 0x42
   115f4:	bne	11658 <abort@plt+0x898>
   115f8:	ldrb	r3, [r0, #2]
   115fc:	cmp	r3, #49	; 0x31
   11600:	bne	11658 <abort@plt+0x898>
   11604:	ldrb	r3, [r0, #3]
   11608:	cmp	r3, #56	; 0x38
   1160c:	bne	11658 <abort@plt+0x898>
   11610:	ldrb	r3, [r0, #4]
   11614:	cmp	r3, #48	; 0x30
   11618:	bne	11658 <abort@plt+0x898>
   1161c:	ldrb	r3, [r0, #5]
   11620:	cmp	r3, #51	; 0x33
   11624:	bne	11658 <abort@plt+0x898>
   11628:	ldrb	r3, [r0, #6]
   1162c:	cmp	r3, #48	; 0x30
   11630:	bne	11658 <abort@plt+0x898>
   11634:	ldrb	r3, [r0, #7]
   11638:	cmp	r3, #0
   1163c:	bne	11658 <abort@plt+0x898>
   11640:	ldrb	r2, [r4]
   11644:	ldr	r3, [pc, #44]	; 11678 <abort@plt+0x8b8>
   11648:	ldr	r4, [pc, #44]	; 1167c <abort@plt+0x8bc>
   1164c:	cmp	r2, #96	; 0x60
   11650:	movne	r4, r3
   11654:	b	11568 <abort@plt+0x7a8>
   11658:	ldr	r3, [pc, #32]	; 11680 <abort@plt+0x8c0>
   1165c:	ldr	r4, [pc, #32]	; 11684 <abort@plt+0x8c4>
   11660:	cmp	r6, #9
   11664:	movne	r4, r3
   11668:	mov	r0, r4
   1166c:	pop	{r4, r5, r6, pc}
   11670:	andeq	r4, r1, ip, lsr #17
   11674:			; <UNDEFINED> instruction: 0x000148b8
   11678:			; <UNDEFINED> instruction: 0x000148b0
   1167c:			; <UNDEFINED> instruction: 0x000148b4
   11680:			; <UNDEFINED> instruction: 0x000148bc
   11684:	andeq	r4, r1, r8, lsr #17
   11688:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1168c:	sub	sp, sp, #124	; 0x7c
   11690:	ldr	ip, [pc, #3576]	; 12490 <abort@plt+0x16d0>
   11694:	str	r3, [sp, #24]
   11698:	ldr	r3, [sp, #168]	; 0xa8
   1169c:	ldr	ip, [ip]
   116a0:	str	r3, [sp, #56]	; 0x38
   116a4:	ldr	r3, [sp, #172]	; 0xac
   116a8:	ldr	r8, [sp, #160]	; 0xa0
   116ac:	str	r3, [sp, #80]	; 0x50
   116b0:	ldr	r3, [sp, #176]	; 0xb0
   116b4:	mov	fp, r0
   116b8:	str	r3, [sp, #76]	; 0x4c
   116bc:	mov	sl, r1
   116c0:	str	r2, [sp, #36]	; 0x24
   116c4:	str	ip, [sp, #116]	; 0x74
   116c8:	bl	10c70 <__ctype_get_mb_cur_max@plt>
   116cc:	ldr	r3, [sp, #164]	; 0xa4
   116d0:	ands	r4, r3, #2
   116d4:	movne	r3, #1
   116d8:	moveq	r3, #0
   116dc:	str	r3, [sp, #32]
   116e0:	str	r0, [sp, #64]	; 0x40
   116e4:	cmp	r8, #10
   116e8:	ldrls	pc, [pc, r8, lsl #2]
   116ec:	b	12e9c <abort@plt+0x20dc>
   116f0:	andeq	r1, r1, r4, ror #21
   116f4:	andeq	r1, r1, ip, ror fp
   116f8:	andeq	r2, r1, ip, ror r1
   116fc:	muleq	r1, ip, fp
   11700:	andeq	r1, r1, r0, asr sl
   11704:	muleq	r1, r8, sl
   11708:	andeq	r1, r1, r4, lsl fp
   1170c:	andeq	r1, r1, ip, asr #22
   11710:	andeq	r1, r1, ip, lsl r7
   11714:	andeq	r1, r1, ip, lsl r7
   11718:	andeq	r1, r1, ip, lsl r7
   1171c:	cmp	r8, #10
   11720:	beq	11744 <abort@plt+0x984>
   11724:	mov	r1, r8
   11728:	ldr	r0, [pc, #3428]	; 12494 <abort@plt+0x16d4>
   1172c:	bl	11540 <abort@plt+0x780>
   11730:	mov	r1, r8
   11734:	str	r0, [sp, #80]	; 0x50
   11738:	ldr	r0, [pc, #3420]	; 1249c <abort@plt+0x16dc>
   1173c:	bl	11540 <abort@plt+0x780>
   11740:	str	r0, [sp, #76]	; 0x4c
   11744:	cmp	r4, #0
   11748:	movne	r4, #0
   1174c:	beq	12b5c <abort@plt+0x1d9c>
   11750:	ldr	r7, [sp, #76]	; 0x4c
   11754:	mov	r5, #0
   11758:	mov	r6, #1
   1175c:	mov	r0, r7
   11760:	str	r6, [sp, #40]	; 0x28
   11764:	str	r5, [sp, #68]	; 0x44
   11768:	bl	10d0c <strlen@plt>
   1176c:	str	r6, [sp, #28]
   11770:	str	r5, [sp, #44]	; 0x2c
   11774:	str	r5, [sp, #72]	; 0x48
   11778:	str	r7, [sp, #60]	; 0x3c
   1177c:	str	r0, [sp, #52]	; 0x34
   11780:	str	r8, [sp, #160]	; 0xa0
   11784:	mov	r8, fp
   11788:	ldr	fp, [sp, #160]	; 0xa0
   1178c:	mov	r9, #0
   11790:	ldr	r3, [sp, #24]
   11794:	cmn	r3, #1
   11798:	beq	11d00 <abort@plt+0xf40>
   1179c:	ldr	r3, [sp, #24]
   117a0:	subs	r6, r3, r9
   117a4:	movne	r6, #1
   117a8:	cmp	r6, #0
   117ac:	beq	11d18 <abort@plt+0xf58>
   117b0:	ldr	r7, [sp, #28]
   117b4:	ldr	r0, [sp, #36]	; 0x24
   117b8:	cmp	fp, #2
   117bc:	moveq	r7, #0
   117c0:	andne	r7, r7, #1
   117c4:	add	r3, r0, r9
   117c8:	cmp	r7, #0
   117cc:	str	r3, [sp, #48]	; 0x30
   117d0:	beq	121bc <abort@plt+0x13fc>
   117d4:	ldr	r2, [sp, #52]	; 0x34
   117d8:	cmp	r2, #0
   117dc:	beq	124a0 <abort@plt+0x16e0>
   117e0:	ldr	r1, [sp, #24]
   117e4:	cmp	r2, #1
   117e8:	mov	r3, r2
   117ec:	movls	r3, #0
   117f0:	movhi	r3, #1
   117f4:	cmn	r1, #1
   117f8:	movne	r3, #0
   117fc:	cmp	r3, #0
   11800:	add	r5, r9, r2
   11804:	beq	11810 <abort@plt+0xa50>
   11808:	bl	10d0c <strlen@plt>
   1180c:	str	r0, [sp, #24]
   11810:	ldr	r3, [sp, #24]
   11814:	cmp	r5, r3
   11818:	bhi	124a0 <abort@plt+0x16e0>
   1181c:	ldr	r2, [sp, #52]	; 0x34
   11820:	ldr	r1, [sp, #60]	; 0x3c
   11824:	ldr	r0, [sp, #48]	; 0x30
   11828:	bl	10c10 <memcmp@plt>
   1182c:	cmp	r0, #0
   11830:	bne	124a0 <abort@plt+0x16e0>
   11834:	ldr	r3, [sp, #32]
   11838:	cmp	r3, #0
   1183c:	bne	12d5c <abort@plt+0x1f9c>
   11840:	ldr	r3, [sp, #48]	; 0x30
   11844:	ldrb	r5, [r3]
   11848:	cmp	r5, #126	; 0x7e
   1184c:	ldrls	pc, [pc, r5, lsl #2]
   11850:	b	12120 <abort@plt+0x1360>
   11854:	andeq	r2, r1, ip
   11858:	andeq	r2, r1, r0, lsr #2
   1185c:	andeq	r2, r1, r0, lsr #2
   11860:	andeq	r2, r1, r0, lsr #2
   11864:	andeq	r2, r1, r0, lsr #2
   11868:	andeq	r2, r1, r0, lsr #2
   1186c:	andeq	r2, r1, r0, lsr #2
   11870:	ldrdeq	r2, [r1], -r8
   11874:	andeq	r2, r1, r8, asr #1
   11878:	andeq	r1, r1, r8, asr #31
   1187c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   11880:	andeq	r1, r1, r8, ror #31
   11884:	ldrdeq	r1, [r1], -r0
   11888:	andeq	r1, r1, r0, lsl #30
   1188c:	andeq	r2, r1, r0, lsr #2
   11890:	andeq	r2, r1, r0, lsr #2
   11894:	andeq	r2, r1, r0, lsr #2
   11898:	andeq	r2, r1, r0, lsr #2
   1189c:	andeq	r2, r1, r0, lsr #2
   118a0:	andeq	r2, r1, r0, lsr #2
   118a4:	andeq	r2, r1, r0, lsr #2
   118a8:	andeq	r2, r1, r0, lsr #2
   118ac:	andeq	r2, r1, r0, lsr #2
   118b0:	andeq	r2, r1, r0, lsr #2
   118b4:	andeq	r2, r1, r0, lsr #2
   118b8:	andeq	r2, r1, r0, lsr #2
   118bc:	andeq	r2, r1, r0, lsr #2
   118c0:	andeq	r2, r1, r0, lsr #2
   118c4:	andeq	r2, r1, r0, lsr #2
   118c8:	andeq	r2, r1, r0, lsr #2
   118cc:	andeq	r2, r1, r0, lsr #2
   118d0:	andeq	r2, r1, r0, lsr #2
   118d4:	andeq	r2, r1, r0, ror #1
   118d8:	strdeq	r1, [r1], -r4
   118dc:	strdeq	r1, [r1], -r4
   118e0:	strdeq	r2, [r1], -r8
   118e4:	strdeq	r1, [r1], -r4
   118e8:	andeq	r2, r1, r4, lsl r1
   118ec:	strdeq	r1, [r1], -r4
   118f0:	andeq	r1, r1, r4, lsr lr
   118f4:	strdeq	r1, [r1], -r4
   118f8:	strdeq	r1, [r1], -r4
   118fc:	strdeq	r1, [r1], -r4
   11900:	andeq	r2, r1, r4, lsl r1
   11904:	andeq	r2, r1, r4, lsl r1
   11908:	andeq	r2, r1, r4, lsl r1
   1190c:	andeq	r2, r1, r4, lsl r1
   11910:	andeq	r2, r1, r4, lsl r1
   11914:	andeq	r2, r1, r4, lsl r1
   11918:	andeq	r2, r1, r4, lsl r1
   1191c:	andeq	r2, r1, r4, lsl r1
   11920:	andeq	r2, r1, r4, lsl r1
   11924:	andeq	r2, r1, r4, lsl r1
   11928:	andeq	r2, r1, r4, lsl r1
   1192c:	andeq	r2, r1, r4, lsl r1
   11930:	andeq	r2, r1, r4, lsl r1
   11934:	andeq	r2, r1, r4, lsl r1
   11938:	andeq	r2, r1, r4, lsl r1
   1193c:	andeq	r2, r1, r4, lsl r1
   11940:	strdeq	r1, [r1], -r4
   11944:	strdeq	r1, [r1], -r4
   11948:	strdeq	r1, [r1], -r4
   1194c:	strdeq	r1, [r1], -r4
   11950:	andeq	r1, r1, r8, lsl #28
   11954:	andeq	r2, r1, r0, lsr #2
   11958:	andeq	r2, r1, r4, lsl r1
   1195c:	andeq	r2, r1, r4, lsl r1
   11960:	andeq	r2, r1, r4, lsl r1
   11964:	andeq	r2, r1, r4, lsl r1
   11968:	andeq	r2, r1, r4, lsl r1
   1196c:	andeq	r2, r1, r4, lsl r1
   11970:	andeq	r2, r1, r4, lsl r1
   11974:	andeq	r2, r1, r4, lsl r1
   11978:	andeq	r2, r1, r4, lsl r1
   1197c:	andeq	r2, r1, r4, lsl r1
   11980:	andeq	r2, r1, r4, lsl r1
   11984:	andeq	r2, r1, r4, lsl r1
   11988:	andeq	r2, r1, r4, lsl r1
   1198c:	andeq	r2, r1, r4, lsl r1
   11990:	andeq	r2, r1, r4, lsl r1
   11994:	andeq	r2, r1, r4, lsl r1
   11998:	andeq	r2, r1, r4, lsl r1
   1199c:	andeq	r2, r1, r4, lsl r1
   119a0:	andeq	r2, r1, r4, lsl r1
   119a4:	andeq	r2, r1, r4, lsl r1
   119a8:	andeq	r2, r1, r4, lsl r1
   119ac:	andeq	r2, r1, r4, lsl r1
   119b0:	andeq	r2, r1, r4, lsl r1
   119b4:	andeq	r2, r1, r4, lsl r1
   119b8:	andeq	r2, r1, r4, lsl r1
   119bc:	andeq	r2, r1, r4, lsl r1
   119c0:	strdeq	r1, [r1], -r4
   119c4:	andeq	r1, r1, r0, asr #27
   119c8:	andeq	r2, r1, r4, lsl r1
   119cc:	strdeq	r1, [r1], -r4
   119d0:	andeq	r2, r1, r4, lsl r1
   119d4:	strdeq	r1, [r1], -r4
   119d8:	andeq	r2, r1, r4, lsl r1
   119dc:	andeq	r2, r1, r4, lsl r1
   119e0:	andeq	r2, r1, r4, lsl r1
   119e4:	andeq	r2, r1, r4, lsl r1
   119e8:	andeq	r2, r1, r4, lsl r1
   119ec:	andeq	r2, r1, r4, lsl r1
   119f0:	andeq	r2, r1, r4, lsl r1
   119f4:	andeq	r2, r1, r4, lsl r1
   119f8:	andeq	r2, r1, r4, lsl r1
   119fc:	andeq	r2, r1, r4, lsl r1
   11a00:	andeq	r2, r1, r4, lsl r1
   11a04:	andeq	r2, r1, r4, lsl r1
   11a08:	andeq	r2, r1, r4, lsl r1
   11a0c:	andeq	r2, r1, r4, lsl r1
   11a10:	andeq	r2, r1, r4, lsl r1
   11a14:	andeq	r2, r1, r4, lsl r1
   11a18:	andeq	r2, r1, r4, lsl r1
   11a1c:	andeq	r2, r1, r4, lsl r1
   11a20:	andeq	r2, r1, r4, lsl r1
   11a24:	andeq	r2, r1, r4, lsl r1
   11a28:	andeq	r2, r1, r4, lsl r1
   11a2c:	andeq	r2, r1, r4, lsl r1
   11a30:	andeq	r2, r1, r4, lsl r1
   11a34:	andeq	r2, r1, r4, lsl r1
   11a38:	andeq	r2, r1, r4, lsl r1
   11a3c:	andeq	r2, r1, r4, lsl r1
   11a40:	ldrdeq	r1, [r1], -r8
   11a44:	strdeq	r1, [r1], -r4
   11a48:	ldrdeq	r1, [r1], -r8
   11a4c:	strdeq	r2, [r1], -r8
   11a50:	cmp	r4, #0
   11a54:	moveq	r3, #1
   11a58:	streq	r3, [sp, #28]
   11a5c:	beq	12188 <abort@plt+0x13c8>
   11a60:	mov	r3, #0
   11a64:	mov	r4, r3
   11a68:	mov	r2, #1
   11a6c:	str	r2, [sp, #40]	; 0x28
   11a70:	str	r3, [sp, #68]	; 0x44
   11a74:	str	r2, [sp, #32]
   11a78:	str	r2, [sp, #52]	; 0x34
   11a7c:	ldr	r3, [pc, #2584]	; 1249c <abort@plt+0x16dc>
   11a80:	str	r4, [sp, #44]	; 0x2c
   11a84:	str	r4, [sp, #72]	; 0x48
   11a88:	str	r4, [sp, #28]
   11a8c:	str	r3, [sp, #60]	; 0x3c
   11a90:	mov	r8, #2
   11a94:	b	11780 <abort@plt+0x9c0>
   11a98:	cmp	r4, #0
   11a9c:	bne	12d28 <abort@plt+0x1f68>
   11aa0:	cmp	sl, #0
   11aa4:	beq	12ae8 <abort@plt+0x1d28>
   11aa8:	mov	r3, #34	; 0x22
   11aac:	strb	r3, [fp]
   11ab0:	ldr	r3, [pc, #2528]	; 12498 <abort@plt+0x16d8>
   11ab4:	mov	r1, r4
   11ab8:	mov	r2, #1
   11abc:	str	r4, [sp, #68]	; 0x44
   11ac0:	str	r2, [sp, #40]	; 0x28
   11ac4:	mov	r4, r2
   11ac8:	str	r1, [sp, #44]	; 0x2c
   11acc:	str	r1, [sp, #72]	; 0x48
   11ad0:	str	r1, [sp, #32]
   11ad4:	str	r2, [sp, #28]
   11ad8:	str	r2, [sp, #52]	; 0x34
   11adc:	str	r3, [sp, #60]	; 0x3c
   11ae0:	b	11780 <abort@plt+0x9c0>
   11ae4:	mov	r3, #0
   11ae8:	str	r3, [sp, #68]	; 0x44
   11aec:	str	r3, [sp, #44]	; 0x2c
   11af0:	str	r3, [sp, #32]
   11af4:	str	r3, [sp, #28]
   11af8:	str	r3, [sp, #60]	; 0x3c
   11afc:	mov	r3, #1
   11b00:	str	r8, [sp, #72]	; 0x48
   11b04:	str	r8, [sp, #52]	; 0x34
   11b08:	mov	r4, r8
   11b0c:	str	r3, [sp, #40]	; 0x28
   11b10:	b	11780 <abort@plt+0x9c0>
   11b14:	mov	r3, #1
   11b18:	str	r3, [sp, #40]	; 0x28
   11b1c:	str	r3, [sp, #32]
   11b20:	str	r3, [sp, #28]
   11b24:	str	r3, [sp, #52]	; 0x34
   11b28:	ldr	r3, [pc, #2408]	; 12498 <abort@plt+0x16d8>
   11b2c:	mov	r2, #0
   11b30:	mov	r4, r2
   11b34:	str	r2, [sp, #68]	; 0x44
   11b38:	str	r2, [sp, #44]	; 0x2c
   11b3c:	str	r2, [sp, #72]	; 0x48
   11b40:	str	r3, [sp, #60]	; 0x3c
   11b44:	mov	r8, #5
   11b48:	b	11780 <abort@plt+0x9c0>
   11b4c:	mov	r3, #0
   11b50:	mov	r2, #1
   11b54:	str	r2, [sp, #40]	; 0x28
   11b58:	mov	r4, r3
   11b5c:	str	r3, [sp, #68]	; 0x44
   11b60:	str	r2, [sp, #28]
   11b64:	str	r3, [sp, #44]	; 0x2c
   11b68:	str	r3, [sp, #72]	; 0x48
   11b6c:	str	r3, [sp, #32]
   11b70:	str	r3, [sp, #52]	; 0x34
   11b74:	str	r3, [sp, #60]	; 0x3c
   11b78:	b	11780 <abort@plt+0x9c0>
   11b7c:	mov	r2, #1
   11b80:	mov	r3, #0
   11b84:	str	r2, [sp, #40]	; 0x28
   11b88:	mov	r4, r3
   11b8c:	str	r3, [sp, #68]	; 0x44
   11b90:	str	r8, [sp, #52]	; 0x34
   11b94:	str	r2, [sp, #32]
   11b98:	b	11a7c <abort@plt+0xcbc>
   11b9c:	mov	r3, #1
   11ba0:	str	r3, [sp, #40]	; 0x28
   11ba4:	str	r3, [sp, #32]
   11ba8:	str	r3, [sp, #28]
   11bac:	str	r3, [sp, #52]	; 0x34
   11bb0:	ldr	r3, [pc, #2276]	; 1249c <abort@plt+0x16dc>
   11bb4:	mov	r2, #0
   11bb8:	mov	r4, r2
   11bbc:	str	r2, [sp, #68]	; 0x44
   11bc0:	str	r2, [sp, #44]	; 0x2c
   11bc4:	str	r2, [sp, #72]	; 0x48
   11bc8:	str	r3, [sp, #60]	; 0x3c
   11bcc:	mov	r8, #2
   11bd0:	b	11780 <abort@plt+0x9c0>
   11bd4:	mov	r7, #0
   11bd8:	ldr	r3, [sp, #24]
   11bdc:	cmn	r3, #1
   11be0:	beq	1271c <abort@plt+0x195c>
   11be4:	ldr	r3, [sp, #24]
   11be8:	subs	r3, r3, #1
   11bec:	movne	r3, #1
   11bf0:	cmp	r3, #0
   11bf4:	sub	r2, fp, #2
   11bf8:	clz	r2, r2
   11bfc:	lsr	r2, r2, #5
   11c00:	bne	11dfc <abort@plt+0x103c>
   11c04:	cmp	r9, #0
   11c08:	bne	11dfc <abort@plt+0x103c>
   11c0c:	ldr	r3, [sp, #32]
   11c10:	tst	r3, r2
   11c14:	bne	11f1c <abort@plt+0x115c>
   11c18:	ldr	r3, [sp, #28]
   11c1c:	eor	r3, r3, #1
   11c20:	orr	r3, r2, r3
   11c24:	ldr	r2, [sp, #32]
   11c28:	eor	r3, r3, #1
   11c2c:	orrs	r3, r2, r3
   11c30:	beq	11c60 <abort@plt+0xea0>
   11c34:	mov	r3, #0
   11c38:	ldr	r1, [sp, #56]	; 0x38
   11c3c:	cmp	r1, #0
   11c40:	beq	11c60 <abort@plt+0xea0>
   11c44:	lsr	r2, r5, #5
   11c48:	and	r0, r5, #31
   11c4c:	uxtb	r2, r2
   11c50:	ldr	r1, [r1, r2, lsl #2]
   11c54:	lsr	r2, r1, r0
   11c58:	tst	r2, #1
   11c5c:	bne	11c68 <abort@plt+0xea8>
   11c60:	cmp	r7, #0
   11c64:	beq	11eb8 <abort@plt+0x10f8>
   11c68:	sub	r2, fp, #2
   11c6c:	clz	r2, r2
   11c70:	lsr	r2, r2, #5
   11c74:	ldr	r3, [sp, #32]
   11c78:	cmp	r3, #0
   11c7c:	bne	11fa8 <abort@plt+0x11e8>
   11c80:	ldr	r3, [sp, #44]	; 0x2c
   11c84:	eor	r3, r3, #1
   11c88:	ands	r3, r2, r3
   11c8c:	beq	11cc4 <abort@plt+0xf04>
   11c90:	cmp	sl, r4
   11c94:	movhi	r2, #39	; 0x27
   11c98:	strbhi	r2, [r8, r4]
   11c9c:	add	r2, r4, #1
   11ca0:	cmp	r2, sl
   11ca4:	movcc	r1, #36	; 0x24
   11ca8:	strbcc	r1, [r8, r2]
   11cac:	add	r2, r4, #2
   11cb0:	cmp	r2, sl
   11cb4:	add	r4, r4, #3
   11cb8:	movcc	r1, #39	; 0x27
   11cbc:	strbcc	r1, [r8, r2]
   11cc0:	str	r3, [sp, #44]	; 0x2c
   11cc4:	cmp	r4, sl
   11cc8:	movcc	r3, #92	; 0x5c
   11ccc:	strbcc	r3, [r8, r4]
   11cd0:	add	r9, r9, #1
   11cd4:	add	r4, r4, #1
   11cd8:	cmp	r4, sl
   11cdc:	ldr	r3, [sp, #40]	; 0x28
   11ce0:	strbcc	r5, [r8, r4]
   11ce4:	cmp	r6, #0
   11ce8:	moveq	r3, #0
   11cec:	str	r3, [sp, #40]	; 0x28
   11cf0:	ldr	r3, [sp, #24]
   11cf4:	add	r4, r4, #1
   11cf8:	cmn	r3, #1
   11cfc:	bne	1179c <abort@plt+0x9dc>
   11d00:	ldr	r3, [sp, #36]	; 0x24
   11d04:	ldrb	r6, [r3, r9]
   11d08:	adds	r6, r6, #0
   11d0c:	movne	r6, #1
   11d10:	cmp	r6, #0
   11d14:	bne	117b0 <abort@plt+0x9f0>
   11d18:	str	fp, [sp, #160]	; 0xa0
   11d1c:	mov	fp, r8
   11d20:	ldr	r8, [sp, #160]	; 0xa0
   11d24:	ldr	r1, [sp, #32]
   11d28:	cmp	r4, #0
   11d2c:	sub	r2, r8, #2
   11d30:	clz	r2, r2
   11d34:	lsr	r2, r2, #5
   11d38:	andeq	r3, r2, r1
   11d3c:	movne	r3, #0
   11d40:	cmp	r3, #0
   11d44:	bne	12e30 <abort@plt+0x2070>
   11d48:	eor	r3, r1, #1
   11d4c:	ands	r2, r2, r3
   11d50:	beq	12d6c <abort@plt+0x1fac>
   11d54:	ldr	r3, [sp, #68]	; 0x44
   11d58:	cmp	r3, #0
   11d5c:	beq	12d70 <abort@plt+0x1fb0>
   11d60:	ldr	r3, [sp, #40]	; 0x28
   11d64:	cmp	r3, #0
   11d68:	bne	12dec <abort@plt+0x202c>
   11d6c:	ldr	r3, [sp, #72]	; 0x48
   11d70:	adds	r3, r3, #0
   11d74:	movne	r3, #1
   11d78:	cmp	sl, #0
   11d7c:	movne	r3, #0
   11d80:	cmp	r3, #0
   11d84:	ldreq	r2, [sp, #68]	; 0x44
   11d88:	beq	12d70 <abort@plt+0x1fb0>
   11d8c:	ldr	sl, [sp, #72]	; 0x48
   11d90:	str	r3, [sp, #68]	; 0x44
   11d94:	ldr	r3, [pc, #1792]	; 1249c <abort@plt+0x16dc>
   11d98:	mov	r2, #39	; 0x27
   11d9c:	mov	r4, #1
   11da0:	str	r3, [sp, #60]	; 0x3c
   11da4:	mov	r3, #0
   11da8:	strb	r2, [fp]
   11dac:	str	r4, [sp, #52]	; 0x34
   11db0:	mov	r8, #2
   11db4:	str	r3, [sp, #32]
   11db8:	b	11780 <abort@plt+0x9c0>
   11dbc:	mov	r7, #0
   11dc0:	cmp	fp, #2
   11dc4:	beq	126fc <abort@plt+0x193c>
   11dc8:	ldr	r3, [sp, #52]	; 0x34
   11dcc:	ldr	r2, [sp, #28]
   11dd0:	ldr	r1, [sp, #32]
   11dd4:	cmp	r3, #0
   11dd8:	andne	r2, r2, r1
   11ddc:	moveq	r2, #0
   11de0:	cmp	r2, #0
   11de4:	moveq	r5, #92	; 0x5c
   11de8:	moveq	r3, r5
   11dec:	bne	12708 <abort@plt+0x1948>
   11df0:	ldr	r1, [sp, #28]
   11df4:	cmp	r1, #0
   11df8:	bne	12e78 <abort@plt+0x20b8>
   11dfc:	mov	r6, #0
   11e00:	b	11c18 <abort@plt+0xe58>
   11e04:	mov	r7, #0
   11e08:	cmp	fp, #2
   11e0c:	beq	1276c <abort@plt+0x19ac>
   11e10:	cmp	fp, #5
   11e14:	beq	12730 <abort@plt+0x1970>
   11e18:	sub	r2, fp, #2
   11e1c:	mov	r6, #0
   11e20:	clz	r2, r2
   11e24:	mov	r5, #63	; 0x3f
   11e28:	lsr	r2, r2, #5
   11e2c:	b	11c18 <abort@plt+0xe58>
   11e30:	mov	r7, #0
   11e34:	cmp	fp, #2
   11e38:	strne	r6, [sp, #68]	; 0x44
   11e3c:	movne	r2, #0
   11e40:	movne	r5, #39	; 0x27
   11e44:	bne	11c18 <abort@plt+0xe58>
   11e48:	ldr	r3, [sp, #32]
   11e4c:	cmp	r3, #0
   11e50:	bne	12b4c <abort@plt+0x1d8c>
   11e54:	cmp	sl, #0
   11e58:	ldr	r3, [sp, #72]	; 0x48
   11e5c:	clz	r3, r3
   11e60:	lsr	r3, r3, #5
   11e64:	moveq	r3, #0
   11e68:	cmp	r3, #0
   11e6c:	bne	12a80 <abort@plt+0x1cc0>
   11e70:	cmp	sl, r4
   11e74:	movhi	r3, #39	; 0x27
   11e78:	strbhi	r3, [r8, r4]
   11e7c:	add	r3, r4, #1
   11e80:	cmp	sl, r3
   11e84:	movhi	r2, #92	; 0x5c
   11e88:	strbhi	r2, [r8, r3]
   11e8c:	add	r3, r4, #2
   11e90:	cmp	sl, r3
   11e94:	movhi	r2, #39	; 0x27
   11e98:	strbhi	r2, [r8, r3]
   11e9c:	mov	r3, #0
   11ea0:	cmp	r7, #0
   11ea4:	add	r4, r4, #3
   11ea8:	str	r3, [sp, #44]	; 0x2c
   11eac:	str	r6, [sp, #68]	; 0x44
   11eb0:	mov	r5, #39	; 0x27
   11eb4:	bne	11c68 <abort@plt+0xea8>
   11eb8:	ldr	r2, [sp, #44]	; 0x2c
   11ebc:	eor	r3, r3, #1
   11ec0:	and	r3, r3, r2
   11ec4:	add	r9, r9, #1
   11ec8:	uxtb	r3, r3
   11ecc:	cmp	r3, #0
   11ed0:	beq	11cd8 <abort@plt+0xf18>
   11ed4:	cmp	sl, r4
   11ed8:	movhi	r3, #39	; 0x27
   11edc:	strbhi	r3, [r8, r4]
   11ee0:	add	r3, r4, #1
   11ee4:	cmp	sl, r3
   11ee8:	movhi	r2, #39	; 0x27
   11eec:	strbhi	r2, [r8, r3]
   11ef0:	mov	r3, #0
   11ef4:	add	r4, r4, #2
   11ef8:	str	r3, [sp, #44]	; 0x2c
   11efc:	b	11cd8 <abort@plt+0xf18>
   11f00:	mov	r3, #114	; 0x72
   11f04:	ldr	r1, [sp, #32]
   11f08:	sub	r2, fp, #2
   11f0c:	clz	r2, r2
   11f10:	lsr	r2, r2, #5
   11f14:	tst	r2, r1
   11f18:	beq	11df0 <abort@plt+0x1030>
   11f1c:	mov	fp, r8
   11f20:	mov	r8, #2
   11f24:	ldr	r3, [sp, #28]
   11f28:	cmp	r3, #0
   11f2c:	movne	r8, #4
   11f30:	ldr	r3, [sp, #164]	; 0xa4
   11f34:	mov	ip, #0
   11f38:	bic	r3, r3, #2
   11f3c:	str	r3, [sp, #4]
   11f40:	ldr	r3, [sp, #76]	; 0x4c
   11f44:	str	r8, [sp]
   11f48:	str	r3, [sp, #16]
   11f4c:	ldr	r3, [sp, #80]	; 0x50
   11f50:	ldr	r2, [sp, #36]	; 0x24
   11f54:	str	r3, [sp, #12]
   11f58:	mov	r1, sl
   11f5c:	ldr	r3, [sp, #24]
   11f60:	mov	r0, fp
   11f64:	str	ip, [sp, #8]
   11f68:	bl	11688 <abort@plt+0x8c8>
   11f6c:	mov	r4, r0
   11f70:	ldr	r3, [pc, #1304]	; 12490 <abort@plt+0x16d0>
   11f74:	ldr	r2, [sp, #116]	; 0x74
   11f78:	mov	r0, r4
   11f7c:	ldr	r3, [r3]
   11f80:	cmp	r2, r3
   11f84:	bne	12e74 <abort@plt+0x20b4>
   11f88:	add	sp, sp, #124	; 0x7c
   11f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f90:	mov	r5, #110	; 0x6e
   11f94:	ldr	r3, [sp, #32]
   11f98:	mov	r2, #0
   11f9c:	cmp	r3, #0
   11fa0:	mov	r6, r2
   11fa4:	beq	11c80 <abort@plt+0xec0>
   11fa8:	str	fp, [sp, #160]	; 0xa0
   11fac:	mov	fp, r8
   11fb0:	ldr	r8, [sp, #160]	; 0xa0
   11fb4:	mov	r3, r2
   11fb8:	ldr	r2, [sp, #28]
   11fbc:	and	r2, r2, r3
   11fc0:	str	r2, [sp, #28]
   11fc4:	b	11f24 <abort@plt+0x1164>
   11fc8:	mov	r5, #116	; 0x74
   11fcc:	b	11f94 <abort@plt+0x11d4>
   11fd0:	mov	r5, #102	; 0x66
   11fd4:	ldr	r3, [sp, #32]
   11fd8:	cmp	r3, #0
   11fdc:	bne	12b88 <abort@plt+0x1dc8>
   11fe0:	mov	r6, #0
   11fe4:	b	11cc4 <abort@plt+0xf04>
   11fe8:	mov	r5, #118	; 0x76
   11fec:	b	11fd4 <abort@plt+0x1214>
   11ff0:	mov	r7, #0
   11ff4:	mov	r6, #0
   11ff8:	b	11c34 <abort@plt+0xe74>
   11ffc:	ldr	r3, [sp, #32]
   12000:	cmp	r3, #0
   12004:	bne	12dcc <abort@plt+0x200c>
   12008:	mov	r7, r3
   1200c:	ldr	r3, [sp, #44]	; 0x2c
   12010:	sub	r2, fp, #2
   12014:	eor	r3, r3, #1
   12018:	clz	r2, r2
   1201c:	lsr	r2, r2, #5
   12020:	ands	r3, r2, r3
   12024:	beq	12a6c <abort@plt+0x1cac>
   12028:	cmp	sl, r4
   1202c:	movhi	r1, #39	; 0x27
   12030:	strbhi	r1, [r8, r4]
   12034:	add	r1, r4, #1
   12038:	cmp	sl, r1
   1203c:	movhi	r0, #36	; 0x24
   12040:	strbhi	r0, [r8, r1]
   12044:	add	r1, r4, #2
   12048:	cmp	sl, r1
   1204c:	movhi	r0, #39	; 0x27
   12050:	strbhi	r0, [r8, r1]
   12054:	add	r1, r4, #3
   12058:	cmp	sl, r1
   1205c:	bls	12acc <abort@plt+0x1d0c>
   12060:	mov	r4, r1
   12064:	mov	r1, #92	; 0x5c
   12068:	strb	r1, [r8, r4]
   1206c:	mov	r1, r4
   12070:	str	r3, [sp, #44]	; 0x2c
   12074:	cmp	fp, #2
   12078:	add	r4, r4, #1
   1207c:	beq	12b14 <abort@plt+0x1d54>
   12080:	ldr	r0, [sp, #24]
   12084:	add	r3, r9, #1
   12088:	cmp	r3, r0
   1208c:	bcs	120a4 <abort@plt+0x12e4>
   12090:	ldr	r0, [sp, #36]	; 0x24
   12094:	ldrb	r3, [r0, r3]
   12098:	sub	r3, r3, #48	; 0x30
   1209c:	cmp	r3, #9
   120a0:	bls	12b24 <abort@plt+0x1d64>
   120a4:	mov	r5, #48	; 0x30
   120a8:	ldr	r3, [sp, #28]
   120ac:	eor	r3, r3, #1
   120b0:	orrs	r2, r2, r3
   120b4:	mov	r3, r6
   120b8:	moveq	r6, r2
   120bc:	beq	11c38 <abort@plt+0xe78>
   120c0:	mov	r6, #0
   120c4:	b	11c60 <abort@plt+0xea0>
   120c8:	mov	r2, #0
   120cc:	mov	r6, r2
   120d0:	mov	r5, #98	; 0x62
   120d4:	b	11c80 <abort@plt+0xec0>
   120d8:	mov	r5, #97	; 0x61
   120dc:	b	11fe0 <abort@plt+0x1220>
   120e0:	mov	r3, r7
   120e4:	mov	r6, r7
   120e8:	mov	r2, #0
   120ec:	mov	r7, r3
   120f0:	mov	r5, #32
   120f4:	b	11c18 <abort@plt+0xe58>
   120f8:	cmp	r9, #0
   120fc:	mov	r3, r7
   12100:	bne	126c8 <abort@plt+0x1908>
   12104:	mov	r6, r7
   12108:	mov	r2, r9
   1210c:	mov	r7, r3
   12110:	b	11c18 <abort@plt+0xe58>
   12114:	mov	r6, r7
   12118:	b	11c34 <abort@plt+0xe74>
   1211c:	mov	r7, #0
   12120:	ldr	r3, [sp, #64]	; 0x40
   12124:	cmp	r3, #1
   12128:	bne	12784 <abort@plt+0x19c4>
   1212c:	bl	10ce8 <__ctype_b_loc@plt>
   12130:	ldr	r2, [sp, #64]	; 0x40
   12134:	sxth	r3, r5
   12138:	mov	ip, r2
   1213c:	lsl	r3, r3, #1
   12140:	ldr	r2, [r0]
   12144:	ldrh	r3, [r2, r3]
   12148:	and	r3, r3, #16384	; 0x4000
   1214c:	cmp	r3, #0
   12150:	ldr	r3, [sp, #28]
   12154:	movne	r6, #1
   12158:	moveq	r6, #0
   1215c:	movne	r2, #0
   12160:	andeq	r2, r3, #1
   12164:	cmp	r2, #0
   12168:	bne	12a94 <abort@plt+0x1cd4>
   1216c:	sub	r2, fp, #2
   12170:	clz	r2, r2
   12174:	lsr	r2, r2, #5
   12178:	b	11c18 <abort@plt+0xe58>
   1217c:	cmp	r4, #0
   12180:	bne	12e40 <abort@plt+0x2080>
   12184:	str	r4, [sp, #28]
   12188:	cmp	sl, #0
   1218c:	bne	12e84 <abort@plt+0x20c4>
   12190:	ldr	r3, [pc, #772]	; 1249c <abort@plt+0x16dc>
   12194:	mov	r4, #1
   12198:	str	r4, [sp, #40]	; 0x28
   1219c:	str	r3, [sp, #60]	; 0x3c
   121a0:	str	r4, [sp, #52]	; 0x34
   121a4:	str	sl, [sp, #72]	; 0x48
   121a8:	str	sl, [sp, #68]	; 0x44
   121ac:	str	sl, [sp, #44]	; 0x2c
   121b0:	str	sl, [sp, #32]
   121b4:	mov	r8, #2
   121b8:	b	11780 <abort@plt+0x9c0>
   121bc:	ldr	r3, [sp, #36]	; 0x24
   121c0:	ldrb	r5, [r3, r9]
   121c4:	cmp	r5, #126	; 0x7e
   121c8:	ldrls	pc, [pc, r5, lsl #2]
   121cc:	b	12120 <abort@plt+0x1360>
   121d0:	andeq	r2, r1, r4, lsl #8
   121d4:	andeq	r2, r1, r0, lsr #2
   121d8:	andeq	r2, r1, r0, lsr #2
   121dc:	andeq	r2, r1, r0, lsr #2
   121e0:	andeq	r2, r1, r0, lsr #2
   121e4:	andeq	r2, r1, r0, lsr #2
   121e8:	andeq	r2, r1, r0, lsr #2
   121ec:	strdeq	r2, [r1], -r0
   121f0:	ldrdeq	r2, [r1], -ip
   121f4:	ldrdeq	r2, [r1], -r4
   121f8:	andeq	r2, r1, ip, asr #7
   121fc:	andeq	r2, r1, ip, ror r4
   12200:	andeq	r2, r1, r8, ror #8
   12204:	andeq	r1, r1, r0, lsl #30
   12208:	andeq	r2, r1, r0, lsr #2
   1220c:	andeq	r2, r1, r0, lsr #2
   12210:	andeq	r2, r1, r0, lsr #2
   12214:	andeq	r2, r1, r0, lsr #2
   12218:	andeq	r2, r1, r0, lsr #2
   1221c:	andeq	r2, r1, r0, lsr #2
   12220:	andeq	r2, r1, r0, lsr #2
   12224:	andeq	r2, r1, r0, lsr #2
   12228:	andeq	r2, r1, r0, lsr #2
   1222c:	andeq	r2, r1, r0, lsr #2
   12230:	andeq	r2, r1, r0, lsr #2
   12234:	andeq	r2, r1, r0, lsr #2
   12238:	andeq	r2, r1, r0, lsr #2
   1223c:	andeq	r2, r1, r0, lsr #2
   12240:	andeq	r2, r1, r0, lsr #2
   12244:	andeq	r2, r1, r0, lsr #2
   12248:	andeq	r2, r1, r0, lsr #2
   1224c:	andeq	r2, r1, r0, lsr #2
   12250:	andeq	r2, r1, r8, asr r4
   12254:	andeq	r2, r1, r4, asr #8
   12258:	andeq	r2, r1, r4, asr #8
   1225c:	andeq	r2, r1, r4, lsr r4
   12260:	andeq	r2, r1, r4, asr #8
   12264:	andeq	r2, r1, ip, ror #2
   12268:	andeq	r2, r1, r4, asr #8
   1226c:	andeq	r1, r1, r4, lsr lr
   12270:	andeq	r2, r1, r4, asr #8
   12274:	andeq	r2, r1, r4, asr #8
   12278:	andeq	r2, r1, r4, asr #8
   1227c:	andeq	r2, r1, ip, ror #2
   12280:	andeq	r2, r1, ip, ror #2
   12284:	andeq	r2, r1, ip, ror #2
   12288:	andeq	r2, r1, ip, ror #2
   1228c:	andeq	r2, r1, ip, ror #2
   12290:	andeq	r2, r1, ip, ror #2
   12294:	andeq	r2, r1, ip, ror #2
   12298:	andeq	r2, r1, ip, ror #2
   1229c:	andeq	r2, r1, ip, ror #2
   122a0:	andeq	r2, r1, ip, ror #2
   122a4:	andeq	r2, r1, ip, ror #2
   122a8:	andeq	r2, r1, ip, ror #2
   122ac:	andeq	r2, r1, ip, ror #2
   122b0:	andeq	r2, r1, ip, ror #2
   122b4:	andeq	r2, r1, ip, ror #2
   122b8:	andeq	r2, r1, ip, ror #2
   122bc:	andeq	r2, r1, r4, asr #8
   122c0:	andeq	r2, r1, r4, asr #8
   122c4:	andeq	r2, r1, r4, asr #8
   122c8:	andeq	r2, r1, r4, asr #8
   122cc:	andeq	r1, r1, r8, lsl #28
   122d0:	andeq	r2, r1, r0, lsr #2
   122d4:	andeq	r2, r1, ip, ror #2
   122d8:	andeq	r2, r1, ip, ror #2
   122dc:	andeq	r2, r1, ip, ror #2
   122e0:	andeq	r2, r1, ip, ror #2
   122e4:	andeq	r2, r1, ip, ror #2
   122e8:	andeq	r2, r1, ip, ror #2
   122ec:	andeq	r2, r1, ip, ror #2
   122f0:	andeq	r2, r1, ip, ror #2
   122f4:	andeq	r2, r1, ip, ror #2
   122f8:	andeq	r2, r1, ip, ror #2
   122fc:	andeq	r2, r1, ip, ror #2
   12300:	andeq	r2, r1, ip, ror #2
   12304:	andeq	r2, r1, ip, ror #2
   12308:	andeq	r2, r1, ip, ror #2
   1230c:	andeq	r2, r1, ip, ror #2
   12310:	andeq	r2, r1, ip, ror #2
   12314:	andeq	r2, r1, ip, ror #2
   12318:	andeq	r2, r1, ip, ror #2
   1231c:	andeq	r2, r1, ip, ror #2
   12320:	andeq	r2, r1, ip, ror #2
   12324:	andeq	r2, r1, ip, ror #2
   12328:	andeq	r2, r1, ip, ror #2
   1232c:	andeq	r2, r1, ip, ror #2
   12330:	andeq	r2, r1, ip, ror #2
   12334:	andeq	r2, r1, ip, ror #2
   12338:	andeq	r2, r1, ip, ror #2
   1233c:	andeq	r2, r1, r4, asr #8
   12340:	andeq	r1, r1, r0, asr #27
   12344:	andeq	r2, r1, ip, ror #2
   12348:	andeq	r2, r1, r4, asr #8
   1234c:	andeq	r2, r1, ip, ror #2
   12350:	andeq	r2, r1, r4, asr #8
   12354:	andeq	r2, r1, ip, ror #2
   12358:	andeq	r2, r1, ip, ror #2
   1235c:	andeq	r2, r1, ip, ror #2
   12360:	andeq	r2, r1, ip, ror #2
   12364:	andeq	r2, r1, ip, ror #2
   12368:	andeq	r2, r1, ip, ror #2
   1236c:	andeq	r2, r1, ip, ror #2
   12370:	andeq	r2, r1, ip, ror #2
   12374:	andeq	r2, r1, ip, ror #2
   12378:	andeq	r2, r1, ip, ror #2
   1237c:	andeq	r2, r1, ip, ror #2
   12380:	andeq	r2, r1, ip, ror #2
   12384:	andeq	r2, r1, ip, ror #2
   12388:	andeq	r2, r1, ip, ror #2
   1238c:	andeq	r2, r1, ip, ror #2
   12390:	andeq	r2, r1, ip, ror #2
   12394:	andeq	r2, r1, ip, ror #2
   12398:	andeq	r2, r1, ip, ror #2
   1239c:	andeq	r2, r1, ip, ror #2
   123a0:	andeq	r2, r1, ip, ror #2
   123a4:	andeq	r2, r1, ip, ror #2
   123a8:	andeq	r2, r1, ip, ror #2
   123ac:	andeq	r2, r1, ip, ror #2
   123b0:	andeq	r2, r1, ip, ror #2
   123b4:	andeq	r2, r1, ip, ror #2
   123b8:	andeq	r2, r1, ip, ror #2
   123bc:	ldrdeq	r1, [r1], -r8
   123c0:	andeq	r2, r1, r4, asr #8
   123c4:	ldrdeq	r1, [r1], -r8
   123c8:	andeq	r2, r1, r4, lsr r4
   123cc:	mov	r3, #110	; 0x6e
   123d0:	b	11f04 <abort@plt+0x1144>
   123d4:	mov	r3, #116	; 0x74
   123d8:	b	11f04 <abort@plt+0x1144>
   123dc:	sub	r2, fp, #2
   123e0:	mov	r3, #98	; 0x62
   123e4:	clz	r2, r2
   123e8:	lsr	r2, r2, #5
   123ec:	b	11df0 <abort@plt+0x1030>
   123f0:	sub	r2, fp, #2
   123f4:	mov	r3, #97	; 0x61
   123f8:	clz	r2, r2
   123fc:	lsr	r2, r2, #5
   12400:	b	11df0 <abort@plt+0x1030>
   12404:	ldr	r3, [sp, #28]
   12408:	cmp	r3, #0
   1240c:	bne	11ffc <abort@plt+0x123c>
   12410:	ldr	r3, [sp, #164]	; 0xa4
   12414:	tst	r3, #1
   12418:	bne	12a8c <abort@plt+0x1ccc>
   1241c:	ldr	r6, [sp, #28]
   12420:	sub	r2, fp, #2
   12424:	mov	r7, r6
   12428:	clz	r2, r2
   1242c:	lsr	r2, r2, #5
   12430:	b	11c18 <abort@plt+0xe58>
   12434:	sub	r2, fp, #2
   12438:	clz	r2, r2
   1243c:	lsr	r2, r2, #5
   12440:	b	11c04 <abort@plt+0xe44>
   12444:	sub	r2, fp, #2
   12448:	mov	r6, #0
   1244c:	clz	r2, r2
   12450:	lsr	r2, r2, #5
   12454:	b	11c0c <abort@plt+0xe4c>
   12458:	sub	r2, fp, #2
   1245c:	clz	r2, r2
   12460:	lsr	r2, r2, #5
   12464:	b	11c0c <abort@plt+0xe4c>
   12468:	sub	r2, fp, #2
   1246c:	mov	r3, #102	; 0x66
   12470:	clz	r2, r2
   12474:	lsr	r2, r2, #5
   12478:	b	11df0 <abort@plt+0x1030>
   1247c:	sub	r2, fp, #2
   12480:	mov	r3, #118	; 0x76
   12484:	clz	r2, r2
   12488:	lsr	r2, r2, #5
   1248c:	b	11df0 <abort@plt+0x1030>
   12490:	andeq	r4, r2, r8, lsl #30
   12494:	andeq	r4, r1, r0, asr #17
   12498:	andeq	r4, r1, r8, lsr #17
   1249c:			; <UNDEFINED> instruction: 0x000148bc
   124a0:	ldr	r3, [sp, #48]	; 0x30
   124a4:	ldrb	r5, [r3]
   124a8:	cmp	r5, #126	; 0x7e
   124ac:	ldrls	pc, [pc, r5, lsl #2]
   124b0:	b	1211c <abort@plt+0x135c>
   124b4:	strdeq	r1, [r1], -ip
   124b8:	andeq	r2, r1, ip, lsl r1
   124bc:	andeq	r2, r1, ip, lsl r1
   124c0:	andeq	r2, r1, ip, lsl r1
   124c4:	andeq	r2, r1, ip, lsl r1
   124c8:	andeq	r2, r1, ip, lsl r1
   124cc:	andeq	r2, r1, ip, lsl r1
   124d0:	strdeq	r2, [r1], -r4
   124d4:	andeq	r2, r1, ip, ror #13
   124d8:	andeq	r1, r1, r8, asr #31
   124dc:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   124e0:	andeq	r1, r1, r8, ror #31
   124e4:	ldrdeq	r1, [r1], -r0
   124e8:	andeq	r2, r1, r0, ror #13
   124ec:	andeq	r2, r1, ip, lsl r1
   124f0:	andeq	r2, r1, ip, lsl r1
   124f4:	andeq	r2, r1, ip, lsl r1
   124f8:	andeq	r2, r1, ip, lsl r1
   124fc:	andeq	r2, r1, ip, lsl r1
   12500:	andeq	r2, r1, ip, lsl r1
   12504:	andeq	r2, r1, ip, lsl r1
   12508:	andeq	r2, r1, ip, lsl r1
   1250c:	andeq	r2, r1, ip, lsl r1
   12510:	andeq	r2, r1, ip, lsl r1
   12514:	andeq	r2, r1, ip, lsl r1
   12518:	andeq	r2, r1, ip, lsl r1
   1251c:	andeq	r2, r1, ip, lsl r1
   12520:	andeq	r2, r1, ip, lsl r1
   12524:	andeq	r2, r1, ip, lsl r1
   12528:	andeq	r2, r1, ip, lsl r1
   1252c:	andeq	r2, r1, ip, lsl r1
   12530:	andeq	r2, r1, ip, lsl r1
   12534:	ldrdeq	r2, [r1], -r8
   12538:	strdeq	r1, [r1], -r0
   1253c:	strdeq	r1, [r1], -r0
   12540:			; <UNDEFINED> instruction: 0x000126bc
   12544:	strdeq	r1, [r1], -r0
   12548:			; <UNDEFINED> instruction: 0x000126b0
   1254c:	strdeq	r1, [r1], -r0
   12550:	andeq	r1, r1, r0, lsr lr
   12554:	strdeq	r1, [r1], -r0
   12558:	strdeq	r1, [r1], -r0
   1255c:	strdeq	r1, [r1], -r0
   12560:			; <UNDEFINED> instruction: 0x000126b0
   12564:			; <UNDEFINED> instruction: 0x000126b0
   12568:			; <UNDEFINED> instruction: 0x000126b0
   1256c:			; <UNDEFINED> instruction: 0x000126b0
   12570:			; <UNDEFINED> instruction: 0x000126b0
   12574:			; <UNDEFINED> instruction: 0x000126b0
   12578:			; <UNDEFINED> instruction: 0x000126b0
   1257c:			; <UNDEFINED> instruction: 0x000126b0
   12580:			; <UNDEFINED> instruction: 0x000126b0
   12584:			; <UNDEFINED> instruction: 0x000126b0
   12588:			; <UNDEFINED> instruction: 0x000126b0
   1258c:			; <UNDEFINED> instruction: 0x000126b0
   12590:			; <UNDEFINED> instruction: 0x000126b0
   12594:			; <UNDEFINED> instruction: 0x000126b0
   12598:			; <UNDEFINED> instruction: 0x000126b0
   1259c:			; <UNDEFINED> instruction: 0x000126b0
   125a0:	strdeq	r1, [r1], -r0
   125a4:	strdeq	r1, [r1], -r0
   125a8:	strdeq	r1, [r1], -r0
   125ac:	strdeq	r1, [r1], -r0
   125b0:	andeq	r1, r1, r4, lsl #28
   125b4:	andeq	r2, r1, ip, lsl r1
   125b8:			; <UNDEFINED> instruction: 0x000126b0
   125bc:			; <UNDEFINED> instruction: 0x000126b0
   125c0:			; <UNDEFINED> instruction: 0x000126b0
   125c4:			; <UNDEFINED> instruction: 0x000126b0
   125c8:			; <UNDEFINED> instruction: 0x000126b0
   125cc:			; <UNDEFINED> instruction: 0x000126b0
   125d0:			; <UNDEFINED> instruction: 0x000126b0
   125d4:			; <UNDEFINED> instruction: 0x000126b0
   125d8:			; <UNDEFINED> instruction: 0x000126b0
   125dc:			; <UNDEFINED> instruction: 0x000126b0
   125e0:			; <UNDEFINED> instruction: 0x000126b0
   125e4:			; <UNDEFINED> instruction: 0x000126b0
   125e8:			; <UNDEFINED> instruction: 0x000126b0
   125ec:			; <UNDEFINED> instruction: 0x000126b0
   125f0:			; <UNDEFINED> instruction: 0x000126b0
   125f4:			; <UNDEFINED> instruction: 0x000126b0
   125f8:			; <UNDEFINED> instruction: 0x000126b0
   125fc:			; <UNDEFINED> instruction: 0x000126b0
   12600:			; <UNDEFINED> instruction: 0x000126b0
   12604:			; <UNDEFINED> instruction: 0x000126b0
   12608:			; <UNDEFINED> instruction: 0x000126b0
   1260c:			; <UNDEFINED> instruction: 0x000126b0
   12610:			; <UNDEFINED> instruction: 0x000126b0
   12614:			; <UNDEFINED> instruction: 0x000126b0
   12618:			; <UNDEFINED> instruction: 0x000126b0
   1261c:			; <UNDEFINED> instruction: 0x000126b0
   12620:	strdeq	r1, [r1], -r0
   12624:			; <UNDEFINED> instruction: 0x00011dbc
   12628:			; <UNDEFINED> instruction: 0x000126b0
   1262c:	strdeq	r1, [r1], -r0
   12630:			; <UNDEFINED> instruction: 0x000126b0
   12634:	strdeq	r1, [r1], -r0
   12638:			; <UNDEFINED> instruction: 0x000126b0
   1263c:			; <UNDEFINED> instruction: 0x000126b0
   12640:			; <UNDEFINED> instruction: 0x000126b0
   12644:			; <UNDEFINED> instruction: 0x000126b0
   12648:			; <UNDEFINED> instruction: 0x000126b0
   1264c:			; <UNDEFINED> instruction: 0x000126b0
   12650:			; <UNDEFINED> instruction: 0x000126b0
   12654:			; <UNDEFINED> instruction: 0x000126b0
   12658:			; <UNDEFINED> instruction: 0x000126b0
   1265c:			; <UNDEFINED> instruction: 0x000126b0
   12660:			; <UNDEFINED> instruction: 0x000126b0
   12664:			; <UNDEFINED> instruction: 0x000126b0
   12668:			; <UNDEFINED> instruction: 0x000126b0
   1266c:			; <UNDEFINED> instruction: 0x000126b0
   12670:			; <UNDEFINED> instruction: 0x000126b0
   12674:			; <UNDEFINED> instruction: 0x000126b0
   12678:			; <UNDEFINED> instruction: 0x000126b0
   1267c:			; <UNDEFINED> instruction: 0x000126b0
   12680:			; <UNDEFINED> instruction: 0x000126b0
   12684:			; <UNDEFINED> instruction: 0x000126b0
   12688:			; <UNDEFINED> instruction: 0x000126b0
   1268c:			; <UNDEFINED> instruction: 0x000126b0
   12690:			; <UNDEFINED> instruction: 0x000126b0
   12694:			; <UNDEFINED> instruction: 0x000126b0
   12698:			; <UNDEFINED> instruction: 0x000126b0
   1269c:			; <UNDEFINED> instruction: 0x000126b0
   126a0:	ldrdeq	r1, [r1], -r4
   126a4:	strdeq	r1, [r1], -r0
   126a8:	ldrdeq	r1, [r1], -r4
   126ac:			; <UNDEFINED> instruction: 0x000126bc
   126b0:	mov	r6, r7
   126b4:	mov	r7, #0
   126b8:	b	11c34 <abort@plt+0xe74>
   126bc:	cmp	r9, #0
   126c0:	mov	r3, #0
   126c4:	beq	12104 <abort@plt+0x1344>
   126c8:	mov	r6, #0
   126cc:	mov	r7, r3
   126d0:	mov	r3, r6
   126d4:	b	11c38 <abort@plt+0xe78>
   126d8:	mov	r3, #0
   126dc:	b	120e4 <abort@plt+0x1324>
   126e0:	mov	r7, #0
   126e4:	mov	r3, #114	; 0x72
   126e8:	b	11f04 <abort@plt+0x1144>
   126ec:	mov	r5, #98	; 0x62
   126f0:	b	11f94 <abort@plt+0x11d4>
   126f4:	mov	r5, #97	; 0x61
   126f8:	b	11fd4 <abort@plt+0x1214>
   126fc:	ldr	r3, [sp, #32]
   12700:	cmp	r3, #0
   12704:	bne	12b4c <abort@plt+0x1d8c>
   12708:	add	r9, r9, #1
   1270c:	ldr	r3, [sp, #44]	; 0x2c
   12710:	mov	r6, #0
   12714:	mov	r5, #92	; 0x5c
   12718:	b	11ecc <abort@plt+0x110c>
   1271c:	ldr	r3, [sp, #36]	; 0x24
   12720:	ldrb	r3, [r3, #1]
   12724:	adds	r3, r3, #0
   12728:	movne	r3, #1
   1272c:	b	11bf0 <abort@plt+0xe30>
   12730:	ldr	r3, [sp, #164]	; 0xa4
   12734:	ands	r3, r3, #4
   12738:	beq	1275c <abort@plt+0x199c>
   1273c:	ldr	r2, [sp, #24]
   12740:	add	r3, r9, #2
   12744:	cmp	r3, r2
   12748:	bcs	1275c <abort@plt+0x199c>
   1274c:	ldr	r2, [sp, #48]	; 0x30
   12750:	ldrb	r5, [r2, #1]
   12754:	cmp	r5, #63	; 0x3f
   12758:	beq	12bc0 <abort@plt+0x1e00>
   1275c:	mov	r2, #0
   12760:	mov	r6, r2
   12764:	mov	r5, #63	; 0x3f
   12768:	b	11c18 <abort@plt+0xe58>
   1276c:	ldr	r3, [sp, #32]
   12770:	cmp	r3, #0
   12774:	bne	12b4c <abort@plt+0x1d8c>
   12778:	mov	r6, r3
   1277c:	mov	r5, #63	; 0x3f
   12780:	b	11c60 <abort@plt+0xea0>
   12784:	ldr	r3, [sp, #24]
   12788:	cmn	r3, #1
   1278c:	mov	r3, #0
   12790:	str	r3, [sp, #108]	; 0x6c
   12794:	str	r3, [sp, #112]	; 0x70
   12798:	bne	127a8 <abort@plt+0x19e8>
   1279c:	ldr	r0, [sp, #36]	; 0x24
   127a0:	bl	10d0c <strlen@plt>
   127a4:	str	r0, [sp, #24]
   127a8:	mov	r3, #0
   127ac:	str	sl, [sp, #88]	; 0x58
   127b0:	ldr	sl, [sp, #36]	; 0x24
   127b4:	str	r5, [sp, #92]	; 0x5c
   127b8:	mov	r5, r3
   127bc:	str	r7, [sp, #96]	; 0x60
   127c0:	str	r4, [sp, #100]	; 0x64
   127c4:	str	r8, [sp, #84]	; 0x54
   127c8:	ldr	r3, [sp, #24]
   127cc:	add	r4, r9, r5
   127d0:	add	r7, sl, r4
   127d4:	sub	r2, r3, r4
   127d8:	mov	r1, r7
   127dc:	add	r3, sp, #108	; 0x6c
   127e0:	add	r0, sp, #104	; 0x68
   127e4:	bl	13ec0 <abort@plt+0x3100>
   127e8:	subs	r8, r0, #0
   127ec:	beq	1283c <abort@plt+0x1a7c>
   127f0:	cmn	r8, #1
   127f4:	beq	12b9c <abort@plt+0x1ddc>
   127f8:	cmn	r8, #2
   127fc:	beq	12cbc <abort@plt+0x1efc>
   12800:	ldr	r3, [sp, #32]
   12804:	cmp	fp, #2
   12808:	movne	r3, #0
   1280c:	andeq	r3, r3, #1
   12810:	cmp	r3, #0
   12814:	bne	1299c <abort@plt+0x1bdc>
   12818:	ldr	r0, [sp, #104]	; 0x68
   1281c:	bl	10c4c <iswprint@plt>
   12820:	add	r5, r5, r8
   12824:	cmp	r0, #0
   12828:	add	r0, sp, #108	; 0x6c
   1282c:	moveq	r6, #0
   12830:	bl	10c04 <mbsinit@plt>
   12834:	cmp	r0, #0
   12838:	beq	127c8 <abort@plt+0x1a08>
   1283c:	ldr	r3, [sp, #28]
   12840:	mov	ip, r5
   12844:	eor	r2, r6, #1
   12848:	ldr	r5, [sp, #92]	; 0x5c
   1284c:	ldr	r7, [sp, #96]	; 0x60
   12850:	ldr	r4, [sp, #100]	; 0x64
   12854:	ldr	r8, [sp, #84]	; 0x54
   12858:	ldr	sl, [sp, #88]	; 0x58
   1285c:	and	r2, r2, r3
   12860:	cmp	ip, #1
   12864:	bls	12164 <abort@plt+0x13a4>
   12868:	add	r1, ip, r9
   1286c:	ldr	lr, [sp, #48]	; 0x30
   12870:	mov	r0, #0
   12874:	str	r6, [sp, #48]	; 0x30
   12878:	mov	ip, #39	; 0x27
   1287c:	ldr	r6, [sp, #44]	; 0x2c
   12880:	b	12938 <abort@plt+0x1b78>
   12884:	ldr	r0, [sp, #32]
   12888:	sub	r3, fp, #2
   1288c:	cmp	r0, #0
   12890:	clz	r3, r3
   12894:	lsr	r3, r3, #5
   12898:	bne	12aa0 <abort@plt+0x1ce0>
   1289c:	eor	r0, r6, #1
   128a0:	ands	r3, r3, r0
   128a4:	beq	128d4 <abort@plt+0x1b14>
   128a8:	add	r0, r4, #1
   128ac:	cmp	sl, r4
   128b0:	strbhi	ip, [r8, r4]
   128b4:	cmp	sl, r0
   128b8:	movhi	r6, #36	; 0x24
   128bc:	strbhi	r6, [r8, r0]
   128c0:	add	r0, r4, #2
   128c4:	mov	r6, r3
   128c8:	add	r4, r4, #3
   128cc:	cmp	sl, r0
   128d0:	strbhi	ip, [r8, r0]
   128d4:	cmp	sl, r4
   128d8:	movhi	r3, #92	; 0x5c
   128dc:	strbhi	r3, [r8, r4]
   128e0:	add	r3, r4, #1
   128e4:	cmp	sl, r3
   128e8:	lsrhi	r0, r5, #6
   128ec:	addhi	r0, r0, #48	; 0x30
   128f0:	strbhi	r0, [r8, r3]
   128f4:	add	r0, r4, #2
   128f8:	cmp	sl, r0
   128fc:	lsrhi	r3, r5, #3
   12900:	andhi	r3, r3, #7
   12904:	addhi	r3, r3, #48	; 0x30
   12908:	add	r9, r9, #1
   1290c:	strbhi	r3, [r8, r0]
   12910:	and	r5, r5, #7
   12914:	cmp	r9, r1
   12918:	add	r5, r5, #48	; 0x30
   1291c:	add	r4, r4, #3
   12920:	bcs	12ac0 <abort@plt+0x1d00>
   12924:	mov	r0, r2
   12928:	cmp	sl, r4
   1292c:	strbhi	r5, [r8, r4]
   12930:	ldrb	r5, [lr, #1]!
   12934:	add	r4, r4, #1
   12938:	cmp	r2, #0
   1293c:	bne	12884 <abort@plt+0x1ac4>
   12940:	eor	r3, r0, #1
   12944:	and	r3, r3, r6
   12948:	cmp	r7, #0
   1294c:	uxtb	r3, r3
   12950:	beq	12964 <abort@plt+0x1ba4>
   12954:	cmp	sl, r4
   12958:	movhi	r7, #92	; 0x5c
   1295c:	strbhi	r7, [r8, r4]
   12960:	add	r4, r4, #1
   12964:	add	r9, r9, #1
   12968:	cmp	r9, r1
   1296c:	bcs	12ab4 <abort@plt+0x1cf4>
   12970:	cmp	r3, #0
   12974:	beq	12ae0 <abort@plt+0x1d20>
   12978:	cmp	sl, r4
   1297c:	add	r3, r4, #1
   12980:	strbhi	ip, [r8, r4]
   12984:	mov	r7, #0
   12988:	cmp	sl, r3
   1298c:	strbhi	ip, [r8, r3]
   12990:	add	r4, r4, #2
   12994:	mov	r6, r7
   12998:	b	12928 <abort@plt+0x1b68>
   1299c:	cmp	r8, #1
   129a0:	beq	12818 <abort@plt+0x1a58>
   129a4:	add	r1, r4, #1
   129a8:	add	r3, sl, r8
   129ac:	add	r1, sl, r1
   129b0:	add	r4, r3, r4
   129b4:	ldrb	r3, [r1], #1
   129b8:	sub	r3, r3, #91	; 0x5b
   129bc:	cmp	r3, #33	; 0x21
   129c0:	ldrls	pc, [pc, r3, lsl #2]
   129c4:	b	12a50 <abort@plt+0x1c90>
   129c8:	andeq	r2, r1, ip, asr sl
   129cc:	andeq	r2, r1, ip, asr sl
   129d0:	andeq	r2, r1, r0, asr sl
   129d4:	andeq	r2, r1, ip, asr sl
   129d8:	andeq	r2, r1, r0, asr sl
   129dc:	andeq	r2, r1, ip, asr sl
   129e0:	andeq	r2, r1, r0, asr sl
   129e4:	andeq	r2, r1, r0, asr sl
   129e8:	andeq	r2, r1, r0, asr sl
   129ec:	andeq	r2, r1, r0, asr sl
   129f0:	andeq	r2, r1, r0, asr sl
   129f4:	andeq	r2, r1, r0, asr sl
   129f8:	andeq	r2, r1, r0, asr sl
   129fc:	andeq	r2, r1, r0, asr sl
   12a00:	andeq	r2, r1, r0, asr sl
   12a04:	andeq	r2, r1, r0, asr sl
   12a08:	andeq	r2, r1, r0, asr sl
   12a0c:	andeq	r2, r1, r0, asr sl
   12a10:	andeq	r2, r1, r0, asr sl
   12a14:	andeq	r2, r1, r0, asr sl
   12a18:	andeq	r2, r1, r0, asr sl
   12a1c:	andeq	r2, r1, r0, asr sl
   12a20:	andeq	r2, r1, r0, asr sl
   12a24:	andeq	r2, r1, r0, asr sl
   12a28:	andeq	r2, r1, r0, asr sl
   12a2c:	andeq	r2, r1, r0, asr sl
   12a30:	andeq	r2, r1, r0, asr sl
   12a34:	andeq	r2, r1, r0, asr sl
   12a38:	andeq	r2, r1, r0, asr sl
   12a3c:	andeq	r2, r1, r0, asr sl
   12a40:	andeq	r2, r1, r0, asr sl
   12a44:	andeq	r2, r1, r0, asr sl
   12a48:	andeq	r2, r1, r0, asr sl
   12a4c:	andeq	r2, r1, ip, asr sl
   12a50:	cmp	r4, r1
   12a54:	bne	129b4 <abort@plt+0x1bf4>
   12a58:	b	12818 <abort@plt+0x1a58>
   12a5c:	ldr	fp, [sp, #84]	; 0x54
   12a60:	ldr	sl, [sp, #88]	; 0x58
   12a64:	mov	r8, #2
   12a68:	b	11f24 <abort@plt+0x1164>
   12a6c:	cmp	sl, r4
   12a70:	movls	r1, r4
   12a74:	bls	12074 <abort@plt+0x12b4>
   12a78:	ldr	r3, [sp, #44]	; 0x2c
   12a7c:	b	12064 <abort@plt+0x12a4>
   12a80:	str	sl, [sp, #72]	; 0x48
   12a84:	ldr	sl, [sp, #32]
   12a88:	b	11e9c <abort@plt+0x10dc>
   12a8c:	add	r9, r9, #1
   12a90:	b	11790 <abort@plt+0x9d0>
   12a94:	ldr	r2, [sp, #28]
   12a98:	mov	r6, #0
   12a9c:	b	12868 <abort@plt+0x1aa8>
   12aa0:	str	fp, [sp, #160]	; 0xa0
   12aa4:	str	r3, [sp, #28]
   12aa8:	mov	fp, r8
   12aac:	ldr	r8, [sp, #160]	; 0xa0
   12ab0:	b	11f24 <abort@plt+0x1164>
   12ab4:	str	r6, [sp, #44]	; 0x2c
   12ab8:	ldr	r6, [sp, #48]	; 0x30
   12abc:	b	11ecc <abort@plt+0x110c>
   12ac0:	str	r6, [sp, #44]	; 0x2c
   12ac4:	ldr	r6, [sp, #48]	; 0x30
   12ac8:	b	11cd8 <abort@plt+0xf18>
   12acc:	add	r4, r4, #4
   12ad0:	str	r3, [sp, #44]	; 0x2c
   12ad4:	mov	r6, #0
   12ad8:	mov	r5, #48	; 0x30
   12adc:	b	11c60 <abort@plt+0xea0>
   12ae0:	mov	r7, r3
   12ae4:	b	12928 <abort@plt+0x1b68>
   12ae8:	ldr	r3, [pc, #-1624]	; 12498 <abort@plt+0x16d8>
   12aec:	mov	r4, #1
   12af0:	str	r4, [sp, #40]	; 0x28
   12af4:	str	r4, [sp, #28]
   12af8:	str	r4, [sp, #52]	; 0x34
   12afc:	str	sl, [sp, #72]	; 0x48
   12b00:	str	sl, [sp, #68]	; 0x44
   12b04:	str	sl, [sp, #44]	; 0x2c
   12b08:	str	sl, [sp, #32]
   12b0c:	str	r3, [sp, #60]	; 0x3c
   12b10:	b	11780 <abort@plt+0x9c0>
   12b14:	mov	r3, r6
   12b18:	mov	r5, #48	; 0x30
   12b1c:	mov	r6, #0
   12b20:	b	11c60 <abort@plt+0xea0>
   12b24:	cmp	sl, r4
   12b28:	movhi	r3, #48	; 0x30
   12b2c:	strbhi	r3, [r8, r4]
   12b30:	add	r3, r1, #2
   12b34:	cmp	sl, r3
   12b38:	movhi	r0, #48	; 0x30
   12b3c:	strbhi	r0, [r8, r3]
   12b40:	add	r4, r1, #3
   12b44:	mov	r5, #48	; 0x30
   12b48:	b	120a8 <abort@plt+0x12e8>
   12b4c:	str	fp, [sp, #160]	; 0xa0
   12b50:	mov	fp, r8
   12b54:	ldr	r8, [sp, #160]	; 0xa0
   12b58:	b	11f24 <abort@plt+0x1164>
   12b5c:	ldr	r2, [sp, #80]	; 0x50
   12b60:	ldrb	r3, [r2]
   12b64:	cmp	r3, #0
   12b68:	beq	11750 <abort@plt+0x990>
   12b6c:	cmp	sl, r4
   12b70:	strbhi	r3, [fp, r4]
   12b74:	ldrb	r3, [r2, #1]!
   12b78:	add	r4, r4, #1
   12b7c:	cmp	r3, #0
   12b80:	bne	12b6c <abort@plt+0x1dac>
   12b84:	b	11750 <abort@plt+0x990>
   12b88:	str	fp, [sp, #160]	; 0xa0
   12b8c:	mov	r3, #0
   12b90:	mov	fp, r8
   12b94:	ldr	r8, [sp, #160]	; 0xa0
   12b98:	b	11fb8 <abort@plt+0x11f8>
   12b9c:	mov	ip, r5
   12ba0:	ldr	r7, [sp, #96]	; 0x60
   12ba4:	ldr	r5, [sp, #92]	; 0x5c
   12ba8:	ldr	r4, [sp, #100]	; 0x64
   12bac:	ldr	r8, [sp, #84]	; 0x54
   12bb0:	ldr	sl, [sp, #88]	; 0x58
   12bb4:	ldr	r2, [sp, #28]
   12bb8:	mov	r6, #0
   12bbc:	b	12860 <abort@plt+0x1aa0>
   12bc0:	ldr	r2, [sp, #36]	; 0x24
   12bc4:	ldrb	r1, [r2, r3]
   12bc8:	sub	r2, r1, #33	; 0x21
   12bcc:	cmp	r2, #29
   12bd0:	ldrls	pc, [pc, r2, lsl #2]
   12bd4:	b	12cb0 <abort@plt+0x1ef0>
   12bd8:	andeq	r2, r1, r0, asr ip
   12bdc:			; <UNDEFINED> instruction: 0x00012cb0
   12be0:			; <UNDEFINED> instruction: 0x00012cb0
   12be4:			; <UNDEFINED> instruction: 0x00012cb0
   12be8:			; <UNDEFINED> instruction: 0x00012cb0
   12bec:			; <UNDEFINED> instruction: 0x00012cb0
   12bf0:	andeq	r2, r1, r0, asr ip
   12bf4:	andeq	r2, r1, r0, asr ip
   12bf8:	andeq	r2, r1, r0, asr ip
   12bfc:			; <UNDEFINED> instruction: 0x00012cb0
   12c00:			; <UNDEFINED> instruction: 0x00012cb0
   12c04:			; <UNDEFINED> instruction: 0x00012cb0
   12c08:	andeq	r2, r1, r0, asr ip
   12c0c:			; <UNDEFINED> instruction: 0x00012cb0
   12c10:	andeq	r2, r1, r0, asr ip
   12c14:			; <UNDEFINED> instruction: 0x00012cb0
   12c18:			; <UNDEFINED> instruction: 0x00012cb0
   12c1c:			; <UNDEFINED> instruction: 0x00012cb0
   12c20:			; <UNDEFINED> instruction: 0x00012cb0
   12c24:			; <UNDEFINED> instruction: 0x00012cb0
   12c28:			; <UNDEFINED> instruction: 0x00012cb0
   12c2c:			; <UNDEFINED> instruction: 0x00012cb0
   12c30:			; <UNDEFINED> instruction: 0x00012cb0
   12c34:			; <UNDEFINED> instruction: 0x00012cb0
   12c38:			; <UNDEFINED> instruction: 0x00012cb0
   12c3c:			; <UNDEFINED> instruction: 0x00012cb0
   12c40:			; <UNDEFINED> instruction: 0x00012cb0
   12c44:	andeq	r2, r1, r0, asr ip
   12c48:	andeq	r2, r1, r0, asr ip
   12c4c:	andeq	r2, r1, r0, asr ip
   12c50:	ldr	r2, [sp, #32]
   12c54:	cmp	r2, #0
   12c58:	bne	12d5c <abort@plt+0x1f9c>
   12c5c:	cmp	sl, r4
   12c60:	movhi	r2, #63	; 0x3f
   12c64:	strbhi	r2, [r8, r4]
   12c68:	add	r2, r4, #1
   12c6c:	cmp	sl, r2
   12c70:	movhi	r0, #34	; 0x22
   12c74:	strbhi	r0, [r8, r2]
   12c78:	add	r2, r4, #2
   12c7c:	cmp	sl, r2
   12c80:	movhi	r0, #34	; 0x22
   12c84:	strbhi	r0, [r8, r2]
   12c88:	add	r2, r4, #3
   12c8c:	cmp	sl, r2
   12c90:	movhi	r0, #63	; 0x3f
   12c94:	strbhi	r0, [r8, r2]
   12c98:	mov	r2, #0
   12c9c:	add	r4, r4, #4
   12ca0:	mov	r5, r1
   12ca4:	mov	r9, r3
   12ca8:	mov	r6, r2
   12cac:	b	120a8 <abort@plt+0x12e8>
   12cb0:	mov	r2, #0
   12cb4:	mov	r6, r2
   12cb8:	b	11c18 <abort@plt+0xe58>
   12cbc:	ldr	r0, [sp, #24]
   12cc0:	mov	r1, r4
   12cc4:	cmp	r1, r0
   12cc8:	mov	r2, r7
   12ccc:	mov	r3, r5
   12cd0:	mov	ip, r5
   12cd4:	ldr	r7, [sp, #96]	; 0x60
   12cd8:	ldr	r5, [sp, #92]	; 0x5c
   12cdc:	ldr	r4, [sp, #100]	; 0x64
   12ce0:	ldr	r8, [sp, #84]	; 0x54
   12ce4:	ldr	sl, [sp, #88]	; 0x58
   12ce8:	bcs	12d1c <abort@plt+0x1f5c>
   12cec:	ldrb	r6, [r2]
   12cf0:	cmp	r6, #0
   12cf4:	bne	12d08 <abort@plt+0x1f48>
   12cf8:	b	12e38 <abort@plt+0x2078>
   12cfc:	ldrb	r6, [r2, #1]!
   12d00:	cmp	r6, #0
   12d04:	beq	12dc0 <abort@plt+0x2000>
   12d08:	add	r3, r3, #1
   12d0c:	add	r1, r9, r3
   12d10:	cmp	r1, r0
   12d14:	bcc	12cfc <abort@plt+0x1f3c>
   12d18:	mov	ip, r3
   12d1c:	ldr	r2, [sp, #28]
   12d20:	mov	r6, #0
   12d24:	b	12860 <abort@plt+0x1aa0>
   12d28:	mov	r3, #1
   12d2c:	str	r3, [sp, #40]	; 0x28
   12d30:	str	r3, [sp, #32]
   12d34:	str	r3, [sp, #28]
   12d38:	str	r3, [sp, #52]	; 0x34
   12d3c:	ldr	r3, [pc, #-2220]	; 12498 <abort@plt+0x16d8>
   12d40:	mov	r2, #0
   12d44:	str	r2, [sp, #68]	; 0x44
   12d48:	str	r2, [sp, #44]	; 0x2c
   12d4c:	str	r2, [sp, #72]	; 0x48
   12d50:	mov	r4, r2
   12d54:	str	r3, [sp, #60]	; 0x3c
   12d58:	b	11780 <abort@plt+0x9c0>
   12d5c:	str	fp, [sp, #160]	; 0xa0
   12d60:	mov	fp, r8
   12d64:	ldr	r8, [sp, #160]	; 0xa0
   12d68:	b	11f30 <abort@plt+0x1170>
   12d6c:	mov	r2, r3
   12d70:	ldr	r3, [sp, #60]	; 0x3c
   12d74:	cmp	r3, #0
   12d78:	moveq	r2, #0
   12d7c:	andne	r2, r2, #1
   12d80:	cmp	r2, #0
   12d84:	beq	12db0 <abort@plt+0x1ff0>
   12d88:	mov	r2, r3
   12d8c:	ldrb	r3, [r3]
   12d90:	cmp	r3, #0
   12d94:	beq	12db0 <abort@plt+0x1ff0>
   12d98:	cmp	sl, r4
   12d9c:	strbhi	r3, [fp, r4]
   12da0:	ldrb	r3, [r2, #1]!
   12da4:	add	r4, r4, #1
   12da8:	cmp	r3, #0
   12dac:	bne	12d98 <abort@plt+0x1fd8>
   12db0:	cmp	sl, r4
   12db4:	movhi	r3, #0
   12db8:	strbhi	r3, [fp, r4]
   12dbc:	b	11f70 <abort@plt+0x11b0>
   12dc0:	mov	ip, r3
   12dc4:	ldr	r2, [sp, #28]
   12dc8:	b	12860 <abort@plt+0x1aa0>
   12dcc:	str	fp, [sp, #160]	; 0xa0
   12dd0:	mov	fp, r8
   12dd4:	ldr	r8, [sp, #160]	; 0xa0
   12dd8:	sub	r3, r8, #2
   12ddc:	clz	r3, r3
   12de0:	lsr	r3, r3, #5
   12de4:	str	r3, [sp, #28]
   12de8:	b	11f24 <abort@plt+0x1164>
   12dec:	ldr	r3, [sp, #76]	; 0x4c
   12df0:	mov	ip, #5
   12df4:	str	r3, [sp, #16]
   12df8:	ldr	r3, [sp, #80]	; 0x50
   12dfc:	ldr	r2, [sp, #36]	; 0x24
   12e00:	str	r3, [sp, #12]
   12e04:	ldr	r3, [sp, #56]	; 0x38
   12e08:	ldr	r1, [sp, #72]	; 0x48
   12e0c:	str	r3, [sp, #8]
   12e10:	ldr	r3, [sp, #164]	; 0xa4
   12e14:	mov	r0, fp
   12e18:	str	r3, [sp, #4]
   12e1c:	str	ip, [sp]
   12e20:	ldr	r3, [sp, #24]
   12e24:	bl	11688 <abort@plt+0x8c8>
   12e28:	mov	r4, r0
   12e2c:	b	11f70 <abort@plt+0x11b0>
   12e30:	mov	r8, #2
   12e34:	b	11f24 <abort@plt+0x1164>
   12e38:	ldr	r2, [sp, #28]
   12e3c:	b	12860 <abort@plt+0x1aa0>
   12e40:	mov	r3, #0
   12e44:	str	r3, [sp, #68]	; 0x44
   12e48:	str	r3, [sp, #44]	; 0x2c
   12e4c:	str	r3, [sp, #72]	; 0x48
   12e50:	str	r3, [sp, #28]
   12e54:	mov	r4, r3
   12e58:	ldr	r3, [pc, #-2500]	; 1249c <abort@plt+0x16dc>
   12e5c:	mov	r2, #1
   12e60:	str	r2, [sp, #40]	; 0x28
   12e64:	str	r2, [sp, #32]
   12e68:	str	r2, [sp, #52]	; 0x34
   12e6c:	str	r3, [sp, #60]	; 0x3c
   12e70:	b	11780 <abort@plt+0x9c0>
   12e74:	bl	10c28 <__stack_chk_fail@plt>
   12e78:	mov	r5, r3
   12e7c:	mov	r6, #0
   12e80:	b	11c74 <abort@plt+0xeb4>
   12e84:	mov	r3, #0
   12e88:	mov	r2, #1
   12e8c:	str	r3, [sp, #44]	; 0x2c
   12e90:	str	r3, [sp, #72]	; 0x48
   12e94:	str	r2, [sp, #40]	; 0x28
   12e98:	b	11d90 <abort@plt+0xfd0>
   12e9c:	bl	10dc0 <abort@plt>
   12ea0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ea4:	sub	sp, sp, #44	; 0x2c
   12ea8:	mov	r6, r0
   12eac:	mov	r4, r3
   12eb0:	mov	sl, r1
   12eb4:	mov	fp, r2
   12eb8:	bl	10d18 <__errno_location@plt>
   12ebc:	ldr	r7, [pc, #364]	; 13030 <abort@plt+0x2270>
   12ec0:	cmp	r6, #0
   12ec4:	ldr	r5, [r7]
   12ec8:	ldr	r3, [r0]
   12ecc:	str	r3, [sp, #24]
   12ed0:	blt	1302c <abort@plt+0x226c>
   12ed4:	ldr	r3, [r7, #4]
   12ed8:	mov	r8, r0
   12edc:	cmp	r3, r6
   12ee0:	bgt	12f2c <abort@plt+0x216c>
   12ee4:	cmn	r6, #-268435454	; 0xf0000002
   12ee8:	bgt	13028 <abort@plt+0x2268>
   12eec:	add	r9, r6, #1
   12ef0:	add	r3, r7, #8
   12ef4:	cmp	r5, r3
   12ef8:	lsl	r1, r9, #3
   12efc:	beq	13008 <abort@plt+0x2248>
   12f00:	mov	r0, r5
   12f04:	bl	13c94 <abort@plt+0x2ed4>
   12f08:	mov	r5, r0
   12f0c:	str	r0, [r7]
   12f10:	ldr	r0, [r7, #4]
   12f14:	mov	r1, #0
   12f18:	sub	r2, r9, r0
   12f1c:	add	r0, r5, r0, lsl #3
   12f20:	lsl	r2, r2, #3
   12f24:	bl	10d30 <memset@plt>
   12f28:	str	r9, [r7, #4]
   12f2c:	add	r3, r5, r6, lsl #3
   12f30:	ldr	r1, [r4, #4]
   12f34:	ldr	r7, [r3, #4]
   12f38:	ldr	r9, [r5, r6, lsl #3]
   12f3c:	ldr	r2, [r4, #40]	; 0x28
   12f40:	ldr	ip, [r4, #44]	; 0x2c
   12f44:	str	r3, [sp, #28]
   12f48:	ldr	r3, [r4]
   12f4c:	orr	r1, r1, #1
   12f50:	add	lr, r4, #8
   12f54:	str	r1, [sp, #36]	; 0x24
   12f58:	str	r1, [sp, #4]
   12f5c:	str	r2, [sp, #12]
   12f60:	str	r3, [sp]
   12f64:	mov	r0, r7
   12f68:	mov	r1, r9
   12f6c:	str	ip, [sp, #16]
   12f70:	str	lr, [sp, #8]
   12f74:	mov	r3, fp
   12f78:	mov	r2, sl
   12f7c:	str	lr, [sp, #32]
   12f80:	bl	11688 <abort@plt+0x8c8>
   12f84:	cmp	r9, r0
   12f88:	bhi	12ff4 <abort@plt+0x2234>
   12f8c:	ldr	r3, [pc, #160]	; 13034 <abort@plt+0x2274>
   12f90:	add	r9, r0, #1
   12f94:	cmp	r7, r3
   12f98:	str	r9, [r5, r6, lsl #3]
   12f9c:	beq	12fa8 <abort@plt+0x21e8>
   12fa0:	mov	r0, r7
   12fa4:	bl	10be0 <free@plt>
   12fa8:	mov	r0, r9
   12fac:	bl	13c38 <abort@plt+0x2e78>
   12fb0:	ldr	lr, [sp, #28]
   12fb4:	ldr	ip, [r4, #44]	; 0x2c
   12fb8:	ldr	r5, [r4, #40]	; 0x28
   12fbc:	mov	r3, fp
   12fc0:	mov	r2, sl
   12fc4:	mov	r1, r9
   12fc8:	str	r0, [lr, #4]
   12fcc:	ldr	lr, [r4]
   12fd0:	ldr	r4, [sp, #32]
   12fd4:	str	ip, [sp, #16]
   12fd8:	str	r4, [sp, #8]
   12fdc:	ldr	r4, [sp, #36]	; 0x24
   12fe0:	str	r5, [sp, #12]
   12fe4:	str	r4, [sp, #4]
   12fe8:	str	lr, [sp]
   12fec:	mov	r7, r0
   12ff0:	bl	11688 <abort@plt+0x8c8>
   12ff4:	ldr	r3, [sp, #24]
   12ff8:	mov	r0, r7
   12ffc:	str	r3, [r8]
   13000:	add	sp, sp, #44	; 0x2c
   13004:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13008:	mov	r0, #0
   1300c:	bl	13c94 <abort@plt+0x2ed4>
   13010:	ldr	r3, [pc, #32]	; 13038 <abort@plt+0x2278>
   13014:	mov	r5, r0
   13018:	ldm	r3, {r0, r1}
   1301c:	str	r5, [r7]
   13020:	stm	r5, {r0, r1}
   13024:	b	12f10 <abort@plt+0x2150>
   13028:	bl	13e80 <abort@plt+0x30c0>
   1302c:	bl	10dc0 <abort@plt>
   13030:	ldrdeq	r5, [r2], -r8
   13034:	andeq	r5, r2, r0, asr #2
   13038:	andeq	r5, r2, r0, ror #1
   1303c:	push	{r4, r5, r6, lr}
   13040:	mov	r5, r0
   13044:	bl	10d18 <__errno_location@plt>
   13048:	cmp	r5, #0
   1304c:	mov	r1, #48	; 0x30
   13050:	mov	r4, r0
   13054:	ldr	r0, [pc, #16]	; 1306c <abort@plt+0x22ac>
   13058:	ldr	r6, [r4]
   1305c:	movne	r0, r5
   13060:	bl	13e40 <abort@plt+0x3080>
   13064:	str	r6, [r4]
   13068:	pop	{r4, r5, r6, pc}
   1306c:	andeq	r5, r2, r0, asr #4
   13070:	ldr	r3, [pc, #12]	; 13084 <abort@plt+0x22c4>
   13074:	cmp	r0, #0
   13078:	moveq	r0, r3
   1307c:	ldr	r0, [r0]
   13080:	bx	lr
   13084:	andeq	r5, r2, r0, asr #4
   13088:	ldr	r3, [pc, #12]	; 1309c <abort@plt+0x22dc>
   1308c:	cmp	r0, #0
   13090:	moveq	r0, r3
   13094:	str	r1, [r0]
   13098:	bx	lr
   1309c:	andeq	r5, r2, r0, asr #4
   130a0:	ldr	r3, [pc, #52]	; 130dc <abort@plt+0x231c>
   130a4:	cmp	r0, #0
   130a8:	moveq	r0, r3
   130ac:	add	r3, r0, #8
   130b0:	push	{lr}		; (str lr, [sp, #-4]!)
   130b4:	lsr	lr, r1, #5
   130b8:	and	r1, r1, #31
   130bc:	ldr	ip, [r3, lr, lsl #2]
   130c0:	lsr	r0, ip, r1
   130c4:	eor	r2, r2, r0
   130c8:	and	r2, r2, #1
   130cc:	and	r0, r0, #1
   130d0:	eor	r1, ip, r2, lsl r1
   130d4:	str	r1, [r3, lr, lsl #2]
   130d8:	pop	{pc}		; (ldr pc, [sp], #4)
   130dc:	andeq	r5, r2, r0, asr #4
   130e0:	ldr	r3, [pc, #16]	; 130f8 <abort@plt+0x2338>
   130e4:	cmp	r0, #0
   130e8:	movne	r3, r0
   130ec:	ldr	r0, [r3, #4]
   130f0:	str	r1, [r3, #4]
   130f4:	bx	lr
   130f8:	andeq	r5, r2, r0, asr #4
   130fc:	ldr	r3, [pc, #44]	; 13130 <abort@plt+0x2370>
   13100:	cmp	r0, #0
   13104:	moveq	r0, r3
   13108:	mov	ip, #10
   1310c:	cmp	r2, #0
   13110:	cmpne	r1, #0
   13114:	str	ip, [r0]
   13118:	beq	13128 <abort@plt+0x2368>
   1311c:	str	r1, [r0, #40]	; 0x28
   13120:	str	r2, [r0, #44]	; 0x2c
   13124:	bx	lr
   13128:	push	{r4, lr}
   1312c:	bl	10dc0 <abort@plt>
   13130:	andeq	r5, r2, r0, asr #4
   13134:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13138:	sub	sp, sp, #24
   1313c:	ldr	ip, [pc, #108]	; 131b0 <abort@plt+0x23f0>
   13140:	ldr	r4, [sp, #56]	; 0x38
   13144:	mov	r9, r2
   13148:	cmp	r4, #0
   1314c:	moveq	r4, ip
   13150:	mov	sl, r3
   13154:	mov	r7, r0
   13158:	mov	r8, r1
   1315c:	bl	10d18 <__errno_location@plt>
   13160:	ldr	r3, [r4, #44]	; 0x2c
   13164:	mov	r1, r8
   13168:	ldr	r6, [r0]
   1316c:	str	r3, [sp, #16]
   13170:	ldr	r2, [r4, #40]	; 0x28
   13174:	add	r3, r4, #8
   13178:	str	r3, [sp, #8]
   1317c:	str	r2, [sp, #12]
   13180:	ldr	r2, [r4, #4]
   13184:	mov	r5, r0
   13188:	str	r2, [sp, #4]
   1318c:	ldr	ip, [r4]
   13190:	mov	r3, sl
   13194:	mov	r2, r9
   13198:	mov	r0, r7
   1319c:	str	ip, [sp]
   131a0:	bl	11688 <abort@plt+0x8c8>
   131a4:	str	r6, [r5]
   131a8:	add	sp, sp, #24
   131ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   131b0:	andeq	r5, r2, r0, asr #4
   131b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131b8:	cmp	r3, #0
   131bc:	sub	sp, sp, #44	; 0x2c
   131c0:	ldr	r4, [pc, #192]	; 13288 <abort@plt+0x24c8>
   131c4:	mov	r6, r2
   131c8:	movne	r4, r3
   131cc:	mov	r9, r1
   131d0:	mov	r8, r0
   131d4:	bl	10d18 <__errno_location@plt>
   131d8:	ldr	r3, [r4, #44]	; 0x2c
   131dc:	ldr	r5, [r4, #4]
   131e0:	add	sl, r4, #8
   131e4:	cmp	r6, #0
   131e8:	orreq	r5, r5, #1
   131ec:	mov	r1, #0
   131f0:	ldr	r2, [r0]
   131f4:	str	r3, [sp, #16]
   131f8:	ldr	r3, [r4, #40]	; 0x28
   131fc:	stmib	sp, {r5, sl}
   13200:	str	r3, [sp, #12]
   13204:	ldr	r3, [r4]
   13208:	mov	r7, r0
   1320c:	str	r2, [sp, #28]
   13210:	str	r3, [sp]
   13214:	mov	r2, r8
   13218:	mov	r3, r9
   1321c:	mov	r0, r1
   13220:	bl	11688 <abort@plt+0x8c8>
   13224:	add	r1, r0, #1
   13228:	mov	fp, r0
   1322c:	mov	r0, r1
   13230:	str	r1, [sp, #36]	; 0x24
   13234:	bl	13c38 <abort@plt+0x2e78>
   13238:	ldr	r3, [r4, #44]	; 0x2c
   1323c:	mov	r2, r8
   13240:	str	r3, [sp, #16]
   13244:	ldr	r3, [r4, #40]	; 0x28
   13248:	str	r5, [sp, #4]
   1324c:	str	r3, [sp, #12]
   13250:	str	sl, [sp, #8]
   13254:	ldr	ip, [r4]
   13258:	ldr	r1, [sp, #36]	; 0x24
   1325c:	mov	r3, r9
   13260:	str	ip, [sp]
   13264:	str	r0, [sp, #32]
   13268:	bl	11688 <abort@plt+0x8c8>
   1326c:	ldr	r2, [sp, #28]
   13270:	cmp	r6, #0
   13274:	str	r2, [r7]
   13278:	ldr	r0, [sp, #32]
   1327c:	strne	fp, [r6]
   13280:	add	sp, sp, #44	; 0x2c
   13284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13288:	andeq	r5, r2, r0, asr #4
   1328c:	mov	r3, r2
   13290:	mov	r2, #0
   13294:	b	131b4 <abort@plt+0x23f4>
   13298:	push	{r4, r5, r6, r7, r8, lr}
   1329c:	ldr	r6, [pc, #112]	; 13314 <abort@plt+0x2554>
   132a0:	ldr	r3, [r6, #4]
   132a4:	ldr	r7, [r6]
   132a8:	cmp	r3, #1
   132ac:	ble	132d0 <abort@plt+0x2510>
   132b0:	sub	r5, r7, #8
   132b4:	add	r5, r5, r3, lsl #3
   132b8:	mov	r4, r7
   132bc:	ldr	r0, [r4, #12]
   132c0:	add	r4, r4, #8
   132c4:	bl	10be0 <free@plt>
   132c8:	cmp	r4, r5
   132cc:	bne	132bc <abort@plt+0x24fc>
   132d0:	ldr	r0, [r7, #4]
   132d4:	ldr	r4, [pc, #60]	; 13318 <abort@plt+0x2558>
   132d8:	cmp	r0, r4
   132dc:	beq	132f0 <abort@plt+0x2530>
   132e0:	bl	10be0 <free@plt>
   132e4:	mov	r3, #256	; 0x100
   132e8:	str	r4, [r6, #12]
   132ec:	str	r3, [r6, #8]
   132f0:	ldr	r4, [pc, #36]	; 1331c <abort@plt+0x255c>
   132f4:	cmp	r7, r4
   132f8:	beq	13308 <abort@plt+0x2548>
   132fc:	mov	r0, r7
   13300:	bl	10be0 <free@plt>
   13304:	str	r4, [r6]
   13308:	mov	r3, #1
   1330c:	str	r3, [r6, #4]
   13310:	pop	{r4, r5, r6, r7, r8, pc}
   13314:	ldrdeq	r5, [r2], -r8
   13318:	andeq	r5, r2, r0, asr #2
   1331c:	andeq	r5, r2, r0, ror #1
   13320:	ldr	r3, [pc, #4]	; 1332c <abort@plt+0x256c>
   13324:	mvn	r2, #0
   13328:	b	12ea0 <abort@plt+0x20e0>
   1332c:	andeq	r5, r2, r0, asr #4
   13330:	ldr	r3, [pc]	; 13338 <abort@plt+0x2578>
   13334:	b	12ea0 <abort@plt+0x20e0>
   13338:	andeq	r5, r2, r0, asr #4
   1333c:	mov	r1, r0
   13340:	ldr	r3, [pc, #8]	; 13350 <abort@plt+0x2590>
   13344:	mvn	r2, #0
   13348:	mov	r0, #0
   1334c:	b	12ea0 <abort@plt+0x20e0>
   13350:	andeq	r5, r2, r0, asr #4
   13354:	mov	r2, r1
   13358:	ldr	r3, [pc, #8]	; 13368 <abort@plt+0x25a8>
   1335c:	mov	r1, r0
   13360:	mov	r0, #0
   13364:	b	12ea0 <abort@plt+0x20e0>
   13368:	andeq	r5, r2, r0, asr #4
   1336c:	push	{r4, r5, r6, lr}
   13370:	sub	sp, sp, #56	; 0x38
   13374:	ldr	r4, [pc, #68]	; 133c0 <abort@plt+0x2600>
   13378:	mov	r6, r2
   1337c:	mov	r5, r0
   13380:	ldr	r3, [r4]
   13384:	add	r0, sp, #4
   13388:	str	r3, [sp, #52]	; 0x34
   1338c:	bl	11518 <abort@plt+0x758>
   13390:	add	r3, sp, #4
   13394:	mvn	r2, #0
   13398:	mov	r1, r6
   1339c:	mov	r0, r5
   133a0:	bl	12ea0 <abort@plt+0x20e0>
   133a4:	ldr	r2, [sp, #52]	; 0x34
   133a8:	ldr	r3, [r4]
   133ac:	cmp	r2, r3
   133b0:	bne	133bc <abort@plt+0x25fc>
   133b4:	add	sp, sp, #56	; 0x38
   133b8:	pop	{r4, r5, r6, pc}
   133bc:	bl	10c28 <__stack_chk_fail@plt>
   133c0:	andeq	r4, r2, r8, lsl #30
   133c4:	push	{r4, r5, r6, r7, lr}
   133c8:	sub	sp, sp, #60	; 0x3c
   133cc:	ldr	r4, [pc, #72]	; 1341c <abort@plt+0x265c>
   133d0:	mov	r6, r2
   133d4:	mov	r7, r3
   133d8:	ldr	ip, [r4]
   133dc:	mov	r5, r0
   133e0:	add	r0, sp, #4
   133e4:	str	ip, [sp, #52]	; 0x34
   133e8:	bl	11518 <abort@plt+0x758>
   133ec:	add	r3, sp, #4
   133f0:	mov	r2, r7
   133f4:	mov	r1, r6
   133f8:	mov	r0, r5
   133fc:	bl	12ea0 <abort@plt+0x20e0>
   13400:	ldr	r2, [sp, #52]	; 0x34
   13404:	ldr	r3, [r4]
   13408:	cmp	r2, r3
   1340c:	bne	13418 <abort@plt+0x2658>
   13410:	add	sp, sp, #60	; 0x3c
   13414:	pop	{r4, r5, r6, r7, pc}
   13418:	bl	10c28 <__stack_chk_fail@plt>
   1341c:	andeq	r4, r2, r8, lsl #30
   13420:	mov	r2, r1
   13424:	mov	r1, r0
   13428:	mov	r0, #0
   1342c:	b	1336c <abort@plt+0x25ac>
   13430:	mov	r3, r2
   13434:	mov	r2, r1
   13438:	mov	r1, r0
   1343c:	mov	r0, #0
   13440:	b	133c4 <abort@plt+0x2604>
   13444:	push	{r4, r5, r6, r7, r8, r9, lr}
   13448:	mov	r4, r2
   1344c:	ldr	lr, [pc, #128]	; 134d4 <abort@plt+0x2714>
   13450:	mov	r8, r0
   13454:	mov	r9, r1
   13458:	ldm	lr!, {r0, r1, r2, r3}
   1345c:	sub	sp, sp, #60	; 0x3c
   13460:	add	ip, sp, #4
   13464:	lsr	r6, r4, #5
   13468:	stmia	ip!, {r0, r1, r2, r3}
   1346c:	add	r7, sp, #12
   13470:	ldm	lr!, {r0, r1, r2, r3}
   13474:	and	r4, r4, #31
   13478:	ldr	r5, [pc, #88]	; 134d8 <abort@plt+0x2718>
   1347c:	stmia	ip!, {r0, r1, r2, r3}
   13480:	ldm	lr, {r0, r1, r2, r3}
   13484:	stm	ip, {r0, r1, r2, r3}
   13488:	mov	r2, r9
   1348c:	ldr	r3, [r7, r6, lsl #2]
   13490:	ldr	ip, [r5]
   13494:	mov	r1, r8
   13498:	mvn	r0, r3, lsr r4
   1349c:	and	r0, r0, #1
   134a0:	str	ip, [sp, #52]	; 0x34
   134a4:	eor	r4, r3, r0, lsl r4
   134a8:	add	r3, sp, #4
   134ac:	mov	r0, #0
   134b0:	str	r4, [r7, r6, lsl #2]
   134b4:	bl	12ea0 <abort@plt+0x20e0>
   134b8:	ldr	r2, [sp, #52]	; 0x34
   134bc:	ldr	r3, [r5]
   134c0:	cmp	r2, r3
   134c4:	bne	134d0 <abort@plt+0x2710>
   134c8:	add	sp, sp, #60	; 0x3c
   134cc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   134d0:	bl	10c28 <__stack_chk_fail@plt>
   134d4:	andeq	r5, r2, r0, asr #4
   134d8:	andeq	r4, r2, r8, lsl #30
   134dc:	mov	r2, r1
   134e0:	mvn	r1, #0
   134e4:	b	13444 <abort@plt+0x2684>
   134e8:	mov	r2, #58	; 0x3a
   134ec:	mvn	r1, #0
   134f0:	b	13444 <abort@plt+0x2684>
   134f4:	mov	r2, #58	; 0x3a
   134f8:	b	13444 <abort@plt+0x2684>
   134fc:	push	{r4, r5, r6, r7, r8, lr}
   13500:	sub	sp, sp, #104	; 0x68
   13504:	ldr	r5, [pc, #120]	; 13584 <abort@plt+0x27c4>
   13508:	mov	r6, r0
   1350c:	mov	r0, sp
   13510:	ldr	r3, [r5]
   13514:	mov	r7, r2
   13518:	str	r3, [sp, #100]	; 0x64
   1351c:	bl	11518 <abort@plt+0x758>
   13520:	mov	ip, sp
   13524:	add	lr, sp, #52	; 0x34
   13528:	ldm	ip!, {r0, r1, r2, r3}
   1352c:	stmia	lr!, {r0, r1, r2, r3}
   13530:	ldm	ip!, {r0, r1, r2, r3}
   13534:	ldr	r8, [sp, #64]	; 0x40
   13538:	stmia	lr!, {r0, r1, r2, r3}
   1353c:	mvn	r4, r8
   13540:	ldm	ip, {r0, r1, r2, r3}
   13544:	and	ip, r4, #67108864	; 0x4000000
   13548:	eor	ip, ip, r8
   1354c:	str	ip, [sp, #64]	; 0x40
   13550:	stm	lr, {r0, r1, r2, r3}
   13554:	add	r3, sp, #52	; 0x34
   13558:	mvn	r2, #0
   1355c:	mov	r1, r7
   13560:	mov	r0, r6
   13564:	bl	12ea0 <abort@plt+0x20e0>
   13568:	ldr	r2, [sp, #100]	; 0x64
   1356c:	ldr	r3, [r5]
   13570:	cmp	r2, r3
   13574:	bne	13580 <abort@plt+0x27c0>
   13578:	add	sp, sp, #104	; 0x68
   1357c:	pop	{r4, r5, r6, r7, r8, pc}
   13580:	bl	10c28 <__stack_chk_fail@plt>
   13584:	andeq	r4, r2, r8, lsl #30
   13588:	push	{r4, r5, r6, r7, r8, r9, lr}
   1358c:	mov	r6, r1
   13590:	ldr	lr, [pc, #132]	; 1361c <abort@plt+0x285c>
   13594:	mov	r5, r2
   13598:	mov	r8, r0
   1359c:	mov	r9, r3
   135a0:	ldm	lr!, {r0, r1, r2, r3}
   135a4:	sub	sp, sp, #60	; 0x3c
   135a8:	add	ip, sp, #4
   135ac:	ldr	r4, [pc, #108]	; 13620 <abort@plt+0x2860>
   135b0:	stmia	ip!, {r0, r1, r2, r3}
   135b4:	mov	r7, #10
   135b8:	ldm	lr!, {r0, r1, r2, r3}
   135bc:	cmp	r5, #0
   135c0:	cmpne	r6, #0
   135c4:	str	r7, [sp, #4]
   135c8:	stmia	ip!, {r0, r1, r2, r3}
   135cc:	ldm	lr, {r0, r1, r2, r3}
   135d0:	ldr	lr, [r4]
   135d4:	stm	ip, {r0, r1, r2, r3}
   135d8:	str	lr, [sp, #52]	; 0x34
   135dc:	beq	13618 <abort@plt+0x2858>
   135e0:	add	r3, sp, #4
   135e4:	ldr	r2, [sp, #88]	; 0x58
   135e8:	mov	r1, r9
   135ec:	mov	r0, r8
   135f0:	str	r6, [sp, #44]	; 0x2c
   135f4:	str	r5, [sp, #48]	; 0x30
   135f8:	bl	12ea0 <abort@plt+0x20e0>
   135fc:	ldr	r2, [sp, #52]	; 0x34
   13600:	ldr	r3, [r4]
   13604:	cmp	r2, r3
   13608:	bne	13614 <abort@plt+0x2854>
   1360c:	add	sp, sp, #60	; 0x3c
   13610:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13614:	bl	10c28 <__stack_chk_fail@plt>
   13618:	bl	10dc0 <abort@plt>
   1361c:	andeq	r5, r2, r0, asr #4
   13620:	andeq	r4, r2, r8, lsl #30
   13624:	push	{lr}		; (str lr, [sp, #-4]!)
   13628:	sub	sp, sp, #12
   1362c:	mvn	ip, #0
   13630:	str	ip, [sp]
   13634:	bl	13588 <abort@plt+0x27c8>
   13638:	add	sp, sp, #12
   1363c:	pop	{pc}		; (ldr pc, [sp], #4)
   13640:	push	{lr}		; (str lr, [sp, #-4]!)
   13644:	sub	sp, sp, #12
   13648:	mvn	ip, #0
   1364c:	mov	r3, r2
   13650:	str	ip, [sp]
   13654:	mov	r2, r1
   13658:	mov	r1, r0
   1365c:	mov	r0, #0
   13660:	bl	13588 <abort@plt+0x27c8>
   13664:	add	sp, sp, #12
   13668:	pop	{pc}		; (ldr pc, [sp], #4)
   1366c:	push	{lr}		; (str lr, [sp, #-4]!)
   13670:	sub	sp, sp, #12
   13674:	str	r3, [sp]
   13678:	mov	r3, r2
   1367c:	mov	r2, r1
   13680:	mov	r1, r0
   13684:	mov	r0, #0
   13688:	bl	13588 <abort@plt+0x27c8>
   1368c:	add	sp, sp, #12
   13690:	pop	{pc}		; (ldr pc, [sp], #4)
   13694:	ldr	r3, [pc]	; 1369c <abort@plt+0x28dc>
   13698:	b	12ea0 <abort@plt+0x20e0>
   1369c:	andeq	r5, r2, r8, ror #1
   136a0:	mov	r2, r1
   136a4:	ldr	r3, [pc, #8]	; 136b4 <abort@plt+0x28f4>
   136a8:	mov	r1, r0
   136ac:	mov	r0, #0
   136b0:	b	12ea0 <abort@plt+0x20e0>
   136b4:	andeq	r5, r2, r8, ror #1
   136b8:	ldr	r3, [pc, #4]	; 136c4 <abort@plt+0x2904>
   136bc:	mvn	r2, #0
   136c0:	b	12ea0 <abort@plt+0x20e0>
   136c4:	andeq	r5, r2, r8, ror #1
   136c8:	mov	r1, r0
   136cc:	ldr	r3, [pc, #8]	; 136dc <abort@plt+0x291c>
   136d0:	mvn	r2, #0
   136d4:	mov	r0, #0
   136d8:	b	12ea0 <abort@plt+0x20e0>
   136dc:	andeq	r5, r2, r8, ror #1
   136e0:	push	{r4, r5, r6, lr}
   136e4:	sub	sp, sp, #32
   136e8:	cmp	r1, #0
   136ec:	mov	r5, r0
   136f0:	ldr	r4, [sp, #48]	; 0x30
   136f4:	ldr	r6, [sp, #52]	; 0x34
   136f8:	beq	13788 <abort@plt+0x29c8>
   136fc:	strd	r2, [sp]
   13700:	mov	r3, r1
   13704:	ldr	r2, [pc, #828]	; 13a48 <abort@plt+0x2c88>
   13708:	mov	r1, #1
   1370c:	bl	10d54 <__fprintf_chk@plt>
   13710:	mov	r2, #5
   13714:	ldr	r1, [pc, #816]	; 13a4c <abort@plt+0x2c8c>
   13718:	mov	r0, #0
   1371c:	bl	10c1c <dcgettext@plt>
   13720:	ldr	r3, [pc, #808]	; 13a50 <abort@plt+0x2c90>
   13724:	ldr	r2, [pc, #808]	; 13a54 <abort@plt+0x2c94>
   13728:	str	r3, [sp]
   1372c:	mov	r1, #1
   13730:	mov	r3, r0
   13734:	mov	r0, r5
   13738:	bl	10d54 <__fprintf_chk@plt>
   1373c:	ldr	r1, [pc, #788]	; 13a58 <abort@plt+0x2c98>
   13740:	mov	r2, #5
   13744:	mov	r0, #0
   13748:	bl	10c1c <dcgettext@plt>
   1374c:	mov	r1, r5
   13750:	bl	10bb0 <fputs_unlocked@plt>
   13754:	cmp	r6, #9
   13758:	ldrls	pc, [pc, r6, lsl #2]
   1375c:	b	13a38 <abort@plt+0x2c78>
   13760:	andeq	r3, r1, r4, asr #20
   13764:	andeq	r3, r1, ip, lsl #16
   13768:	andeq	r3, r1, r8, lsr r8
   1376c:	andeq	r3, r1, ip, ror #16
   13770:	andeq	r3, r1, r8, lsr #17
   13774:	andeq	r3, r1, r8, ror #17
   13778:	andeq	r3, r1, r0, lsr r9
   1377c:	andeq	r3, r1, r0, lsl #19
   13780:	ldrdeq	r3, [r1], -r8
   13784:	andeq	r3, r1, r0, lsr #15
   13788:	str	r3, [sp]
   1378c:	mov	r1, #1
   13790:	mov	r3, r2
   13794:	ldr	r2, [pc, #704]	; 13a5c <abort@plt+0x2c9c>
   13798:	bl	10d54 <__fprintf_chk@plt>
   1379c:	b	13710 <abort@plt+0x2950>
   137a0:	ldr	r1, [pc, #696]	; 13a60 <abort@plt+0x2ca0>
   137a4:	mov	r2, #5
   137a8:	mov	r0, #0
   137ac:	bl	10c1c <dcgettext@plt>
   137b0:	ldr	r2, [r4, #32]
   137b4:	ldr	r3, [r4, #28]
   137b8:	ldr	r1, [r4, #24]
   137bc:	str	r2, [sp, #28]
   137c0:	ldr	r2, [r4, #20]
   137c4:	str	r3, [sp, #24]
   137c8:	ldr	r3, [r4, #16]
   137cc:	str	r1, [sp, #20]
   137d0:	ldr	r1, [r4, #12]
   137d4:	str	r2, [sp, #16]
   137d8:	ldr	r2, [r4, #8]
   137dc:	str	r3, [sp, #12]
   137e0:	ldr	r3, [r4, #4]
   137e4:	str	r1, [sp, #8]
   137e8:	str	r2, [sp, #4]
   137ec:	str	r3, [sp]
   137f0:	mov	r1, #1
   137f4:	ldr	r3, [r4]
   137f8:	mov	r2, r0
   137fc:	mov	r0, r5
   13800:	bl	10d54 <__fprintf_chk@plt>
   13804:	add	sp, sp, #32
   13808:	pop	{r4, r5, r6, pc}
   1380c:	mov	r2, #5
   13810:	ldr	r1, [pc, #588]	; 13a64 <abort@plt+0x2ca4>
   13814:	mov	r0, #0
   13818:	bl	10c1c <dcgettext@plt>
   1381c:	ldr	r3, [r4]
   13820:	mov	r1, #1
   13824:	mov	r2, r0
   13828:	mov	r0, r5
   1382c:	add	sp, sp, #32
   13830:	pop	{r4, r5, r6, lr}
   13834:	b	10d54 <__fprintf_chk@plt>
   13838:	mov	r2, #5
   1383c:	ldr	r1, [pc, #548]	; 13a68 <abort@plt+0x2ca8>
   13840:	mov	r0, #0
   13844:	bl	10c1c <dcgettext@plt>
   13848:	ldr	r2, [r4, #4]
   1384c:	ldr	r3, [r4]
   13850:	mov	r1, #1
   13854:	str	r2, [sp, #48]	; 0x30
   13858:	mov	r2, r0
   1385c:	mov	r0, r5
   13860:	add	sp, sp, #32
   13864:	pop	{r4, r5, r6, lr}
   13868:	b	10d54 <__fprintf_chk@plt>
   1386c:	mov	r2, #5
   13870:	ldr	r1, [pc, #500]	; 13a6c <abort@plt+0x2cac>
   13874:	mov	r0, #0
   13878:	bl	10c1c <dcgettext@plt>
   1387c:	ldr	r2, [r4, #8]
   13880:	ldr	r3, [r4, #4]
   13884:	mov	r1, #1
   13888:	str	r2, [sp, #52]	; 0x34
   1388c:	str	r3, [sp, #48]	; 0x30
   13890:	ldr	r3, [r4]
   13894:	mov	r2, r0
   13898:	mov	r0, r5
   1389c:	add	sp, sp, #32
   138a0:	pop	{r4, r5, r6, lr}
   138a4:	b	10d54 <__fprintf_chk@plt>
   138a8:	mov	r2, #5
   138ac:	ldr	r1, [pc, #444]	; 13a70 <abort@plt+0x2cb0>
   138b0:	mov	r0, #0
   138b4:	bl	10c1c <dcgettext@plt>
   138b8:	ldr	r1, [r4, #12]
   138bc:	ldr	r2, [r4, #8]
   138c0:	ldr	r3, [r4, #4]
   138c4:	str	r1, [sp, #8]
   138c8:	str	r2, [sp, #4]
   138cc:	str	r3, [sp]
   138d0:	mov	r1, #1
   138d4:	ldr	r3, [r4]
   138d8:	mov	r2, r0
   138dc:	mov	r0, r5
   138e0:	bl	10d54 <__fprintf_chk@plt>
   138e4:	b	13804 <abort@plt+0x2a44>
   138e8:	mov	r2, #5
   138ec:	ldr	r1, [pc, #384]	; 13a74 <abort@plt+0x2cb4>
   138f0:	mov	r0, #0
   138f4:	bl	10c1c <dcgettext@plt>
   138f8:	ldr	r3, [r4, #16]
   138fc:	ldr	r1, [r4, #12]
   13900:	ldr	r2, [r4, #8]
   13904:	str	r3, [sp, #12]
   13908:	ldr	r3, [r4, #4]
   1390c:	str	r1, [sp, #8]
   13910:	str	r2, [sp, #4]
   13914:	str	r3, [sp]
   13918:	mov	r1, #1
   1391c:	ldr	r3, [r4]
   13920:	mov	r2, r0
   13924:	mov	r0, r5
   13928:	bl	10d54 <__fprintf_chk@plt>
   1392c:	b	13804 <abort@plt+0x2a44>
   13930:	mov	r2, #5
   13934:	ldr	r1, [pc, #316]	; 13a78 <abort@plt+0x2cb8>
   13938:	mov	r0, #0
   1393c:	bl	10c1c <dcgettext@plt>
   13940:	ldr	r2, [r4, #20]
   13944:	ldr	r3, [r4, #16]
   13948:	ldr	r1, [r4, #12]
   1394c:	str	r2, [sp, #16]
   13950:	ldr	r2, [r4, #8]
   13954:	str	r3, [sp, #12]
   13958:	ldr	r3, [r4, #4]
   1395c:	str	r1, [sp, #8]
   13960:	str	r2, [sp, #4]
   13964:	str	r3, [sp]
   13968:	mov	r1, #1
   1396c:	ldr	r3, [r4]
   13970:	mov	r2, r0
   13974:	mov	r0, r5
   13978:	bl	10d54 <__fprintf_chk@plt>
   1397c:	b	13804 <abort@plt+0x2a44>
   13980:	mov	r2, #5
   13984:	ldr	r1, [pc, #240]	; 13a7c <abort@plt+0x2cbc>
   13988:	mov	r0, #0
   1398c:	bl	10c1c <dcgettext@plt>
   13990:	ldr	r1, [r4, #24]
   13994:	ldr	r2, [r4, #20]
   13998:	ldr	r3, [r4, #16]
   1399c:	str	r1, [sp, #20]
   139a0:	ldr	r1, [r4, #12]
   139a4:	str	r2, [sp, #16]
   139a8:	ldr	r2, [r4, #8]
   139ac:	str	r3, [sp, #12]
   139b0:	ldr	r3, [r4, #4]
   139b4:	str	r1, [sp, #8]
   139b8:	str	r2, [sp, #4]
   139bc:	str	r3, [sp]
   139c0:	mov	r1, #1
   139c4:	ldr	r3, [r4]
   139c8:	mov	r2, r0
   139cc:	mov	r0, r5
   139d0:	bl	10d54 <__fprintf_chk@plt>
   139d4:	b	13804 <abort@plt+0x2a44>
   139d8:	mov	r2, #5
   139dc:	ldr	r1, [pc, #156]	; 13a80 <abort@plt+0x2cc0>
   139e0:	mov	r0, #0
   139e4:	bl	10c1c <dcgettext@plt>
   139e8:	ldr	r3, [r4, #28]
   139ec:	ldr	r1, [r4, #24]
   139f0:	ldr	r2, [r4, #20]
   139f4:	str	r3, [sp, #24]
   139f8:	ldr	r3, [r4, #16]
   139fc:	str	r1, [sp, #20]
   13a00:	ldr	r1, [r4, #12]
   13a04:	str	r2, [sp, #16]
   13a08:	ldr	r2, [r4, #8]
   13a0c:	str	r3, [sp, #12]
   13a10:	ldr	r3, [r4, #4]
   13a14:	str	r1, [sp, #8]
   13a18:	str	r2, [sp, #4]
   13a1c:	str	r3, [sp]
   13a20:	mov	r1, #1
   13a24:	ldr	r3, [r4]
   13a28:	mov	r2, r0
   13a2c:	mov	r0, r5
   13a30:	bl	10d54 <__fprintf_chk@plt>
   13a34:	b	13804 <abort@plt+0x2a44>
   13a38:	mov	r2, #5
   13a3c:	ldr	r1, [pc, #64]	; 13a84 <abort@plt+0x2cc4>
   13a40:	b	137a8 <abort@plt+0x29e8>
   13a44:	bl	10dc0 <abort@plt>
   13a48:	andeq	r4, r1, ip, lsr #18
   13a4c:	andeq	r4, r1, r0, asr #18
   13a50:	andeq	r0, r0, r2, ror #15
   13a54:	andeq	r4, r1, r4, lsl ip
   13a58:	andeq	r4, r1, r4, asr #18
   13a5c:	andeq	r4, r1, r8, lsr r9
   13a60:	andeq	r4, r1, ip, lsl fp
   13a64:	andeq	r4, r1, r0, lsl sl
   13a68:	andeq	r4, r1, r0, lsr #20
   13a6c:	andeq	r4, r1, r8, lsr sl
   13a70:	andeq	r4, r1, r4, asr sl
   13a74:	andeq	r4, r1, r4, ror sl
   13a78:	muleq	r1, r8, sl
   13a7c:	andeq	r4, r1, r0, asr #21
   13a80:	andeq	r4, r1, ip, ror #21
   13a84:	andeq	r4, r1, r0, asr fp
   13a88:	push	{r4, r5, lr}
   13a8c:	sub	sp, sp, #12
   13a90:	ldr	r5, [sp, #24]
   13a94:	ldr	ip, [r5]
   13a98:	cmp	ip, #0
   13a9c:	beq	13ab8 <abort@plt+0x2cf8>
   13aa0:	mov	lr, r5
   13aa4:	mov	ip, #0
   13aa8:	ldr	r4, [lr, #4]!
   13aac:	add	ip, ip, #1
   13ab0:	cmp	r4, #0
   13ab4:	bne	13aa8 <abort@plt+0x2ce8>
   13ab8:	stm	sp, {r5, ip}
   13abc:	bl	136e0 <abort@plt+0x2920>
   13ac0:	add	sp, sp, #12
   13ac4:	pop	{r4, r5, pc}
   13ac8:	push	{r4, r5, r6, lr}
   13acc:	sub	sp, sp, #56	; 0x38
   13ad0:	ldr	r6, [pc, #88]	; 13b30 <abort@plt+0x2d70>
   13ad4:	ldr	r5, [sp, #72]	; 0x48
   13ad8:	add	r4, sp, #8
   13adc:	ldr	ip, [r6]
   13ae0:	str	ip, [sp, #52]	; 0x34
   13ae4:	mov	ip, #0
   13ae8:	ldr	lr, [r5], #4
   13aec:	cmp	lr, #0
   13af0:	str	lr, [r4, #4]!
   13af4:	beq	13b04 <abort@plt+0x2d44>
   13af8:	add	ip, ip, #1
   13afc:	cmp	ip, #10
   13b00:	bne	13ae8 <abort@plt+0x2d28>
   13b04:	add	lr, sp, #12
   13b08:	str	ip, [sp, #4]
   13b0c:	str	lr, [sp]
   13b10:	bl	136e0 <abort@plt+0x2920>
   13b14:	ldr	r2, [sp, #52]	; 0x34
   13b18:	ldr	r3, [r6]
   13b1c:	cmp	r2, r3
   13b20:	bne	13b2c <abort@plt+0x2d6c>
   13b24:	add	sp, sp, #56	; 0x38
   13b28:	pop	{r4, r5, r6, pc}
   13b2c:	bl	10c28 <__stack_chk_fail@plt>
   13b30:	andeq	r4, r2, r8, lsl #30
   13b34:	push	{r3}		; (str r3, [sp, #-4]!)
   13b38:	mov	ip, #0
   13b3c:	push	{r4, r5, r6, lr}
   13b40:	sub	sp, sp, #60	; 0x3c
   13b44:	ldr	r6, [pc, #100]	; 13bb0 <abort@plt+0x2df0>
   13b48:	add	r5, sp, #8
   13b4c:	add	r4, sp, #80	; 0x50
   13b50:	ldr	r3, [r6]
   13b54:	str	r4, [sp, #8]
   13b58:	str	r3, [sp, #52]	; 0x34
   13b5c:	ldr	r3, [sp, #76]	; 0x4c
   13b60:	ldr	lr, [r4], #4
   13b64:	cmp	lr, #0
   13b68:	str	lr, [r5, #4]!
   13b6c:	beq	13b7c <abort@plt+0x2dbc>
   13b70:	add	ip, ip, #1
   13b74:	cmp	ip, #10
   13b78:	bne	13b60 <abort@plt+0x2da0>
   13b7c:	add	lr, sp, #12
   13b80:	str	ip, [sp, #4]
   13b84:	str	lr, [sp]
   13b88:	bl	136e0 <abort@plt+0x2920>
   13b8c:	ldr	r2, [sp, #52]	; 0x34
   13b90:	ldr	r3, [r6]
   13b94:	cmp	r2, r3
   13b98:	bne	13bac <abort@plt+0x2dec>
   13b9c:	add	sp, sp, #60	; 0x3c
   13ba0:	pop	{r4, r5, r6, lr}
   13ba4:	add	sp, sp, #4
   13ba8:	bx	lr
   13bac:	bl	10c28 <__stack_chk_fail@plt>
   13bb0:	andeq	r4, r2, r8, lsl #30
   13bb4:	push	{r4, lr}
   13bb8:	mov	r2, #5
   13bbc:	ldr	r1, [pc, #88]	; 13c1c <abort@plt+0x2e5c>
   13bc0:	mov	r0, #0
   13bc4:	bl	10c1c <dcgettext@plt>
   13bc8:	ldr	r2, [pc, #80]	; 13c20 <abort@plt+0x2e60>
   13bcc:	mov	r1, r0
   13bd0:	mov	r0, #1
   13bd4:	bl	10d3c <__printf_chk@plt>
   13bd8:	mov	r2, #5
   13bdc:	ldr	r1, [pc, #64]	; 13c24 <abort@plt+0x2e64>
   13be0:	mov	r0, #0
   13be4:	bl	10c1c <dcgettext@plt>
   13be8:	ldr	r3, [pc, #56]	; 13c28 <abort@plt+0x2e68>
   13bec:	ldr	r2, [pc, #56]	; 13c2c <abort@plt+0x2e6c>
   13bf0:	mov	r1, r0
   13bf4:	mov	r0, #1
   13bf8:	bl	10d3c <__printf_chk@plt>
   13bfc:	ldr	r1, [pc, #44]	; 13c30 <abort@plt+0x2e70>
   13c00:	mov	r2, #5
   13c04:	mov	r0, #0
   13c08:	bl	10c1c <dcgettext@plt>
   13c0c:	ldr	r3, [pc, #32]	; 13c34 <abort@plt+0x2e74>
   13c10:	pop	{r4, lr}
   13c14:	ldr	r1, [r3]
   13c18:	b	10bb0 <fputs_unlocked@plt>
   13c1c:	andeq	r4, r1, ip, lsl #23
   13c20:	andeq	r4, r1, r4, lsr #23
   13c24:			; <UNDEFINED> instruction: 0x00014bbc
   13c28:	andeq	r4, r1, ip, asr #12
   13c2c:	andeq	r4, r1, r4, ror r6
   13c30:	ldrdeq	r4, [r1], -r0
   13c34:	andeq	r5, r2, ip, lsr #2
   13c38:	push	{r4, lr}
   13c3c:	mov	r4, r0
   13c40:	bl	10cac <malloc@plt>
   13c44:	adds	r4, r4, #0
   13c48:	movne	r4, #1
   13c4c:	cmp	r0, #0
   13c50:	movne	r4, #0
   13c54:	cmp	r4, #0
   13c58:	popeq	{r4, pc}
   13c5c:	bl	13e80 <abort@plt+0x30c0>
   13c60:	push	{r4, r5, r6, lr}
   13c64:	umull	r4, r5, r0, r1
   13c68:	adds	r3, r5, #0
   13c6c:	movne	r3, #1
   13c70:	cmp	r4, #0
   13c74:	blt	13c8c <abort@plt+0x2ecc>
   13c78:	cmp	r3, #0
   13c7c:	bne	13c8c <abort@plt+0x2ecc>
   13c80:	mul	r0, r1, r0
   13c84:	pop	{r4, r5, r6, lr}
   13c88:	b	13c38 <abort@plt+0x2e78>
   13c8c:	bl	13e80 <abort@plt+0x30c0>
   13c90:	b	13c38 <abort@plt+0x2e78>
   13c94:	adds	r3, r0, #0
   13c98:	movne	r3, #1
   13c9c:	cmp	r1, #0
   13ca0:	movne	r3, #0
   13ca4:	cmp	r3, #0
   13ca8:	push	{r4, lr}
   13cac:	bne	13cd4 <abort@plt+0x2f14>
   13cb0:	mov	r4, r1
   13cb4:	bl	10c34 <realloc@plt>
   13cb8:	adds	r4, r4, #0
   13cbc:	movne	r4, #1
   13cc0:	cmp	r0, #0
   13cc4:	movne	r4, #0
   13cc8:	cmp	r4, #0
   13ccc:	popeq	{r4, pc}
   13cd0:	bl	13e80 <abort@plt+0x30c0>
   13cd4:	bl	10be0 <free@plt>
   13cd8:	mov	r0, #0
   13cdc:	pop	{r4, pc}
   13ce0:	push	{r4, r5, r6, lr}
   13ce4:	umull	r4, r5, r1, r2
   13ce8:	adds	r3, r5, #0
   13cec:	movne	r3, #1
   13cf0:	cmp	r4, #0
   13cf4:	blt	13d0c <abort@plt+0x2f4c>
   13cf8:	cmp	r3, #0
   13cfc:	bne	13d0c <abort@plt+0x2f4c>
   13d00:	mul	r1, r2, r1
   13d04:	pop	{r4, r5, r6, lr}
   13d08:	b	13c94 <abort@plt+0x2ed4>
   13d0c:	bl	13e80 <abort@plt+0x30c0>
   13d10:	push	{r4, r5, r6, r7, r8, lr}
   13d14:	subs	r7, r0, #0
   13d18:	mov	r6, r1
   13d1c:	mov	r5, r2
   13d20:	ldr	r4, [r1]
   13d24:	beq	13d58 <abort@plt+0x2f98>
   13d28:	mov	r1, r2
   13d2c:	ldr	r0, [pc, #104]	; 13d9c <abort@plt+0x2fdc>
   13d30:	bl	141d4 <abort@plt+0x3414>
   13d34:	cmp	r0, r4
   13d38:	bls	13d7c <abort@plt+0x2fbc>
   13d3c:	add	r3, r4, #1
   13d40:	add	r4, r3, r4, lsr #1
   13d44:	str	r4, [r6]
   13d48:	mul	r1, r5, r4
   13d4c:	mov	r0, r7
   13d50:	pop	{r4, r5, r6, r7, r8, lr}
   13d54:	b	13c94 <abort@plt+0x2ed4>
   13d58:	cmp	r4, #0
   13d5c:	beq	13d80 <abort@plt+0x2fc0>
   13d60:	umull	r0, r1, r4, r5
   13d64:	adds	r3, r1, #0
   13d68:	movne	r3, #1
   13d6c:	cmp	r0, #0
   13d70:	blt	13d7c <abort@plt+0x2fbc>
   13d74:	cmp	r3, #0
   13d78:	beq	13d44 <abort@plt+0x2f84>
   13d7c:	bl	13e80 <abort@plt+0x30c0>
   13d80:	mov	r1, r2
   13d84:	mov	r0, #64	; 0x40
   13d88:	bl	141d4 <abort@plt+0x3414>
   13d8c:	cmp	r5, #64	; 0x40
   13d90:	movls	r4, r0
   13d94:	addhi	r4, r0, #1
   13d98:	b	13d60 <abort@plt+0x2fa0>
   13d9c:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   13da0:	cmp	r0, #0
   13da4:	ldr	r3, [r1]
   13da8:	beq	13dcc <abort@plt+0x300c>
   13dac:	ldr	r2, [pc, #60]	; 13df0 <abort@plt+0x3030>
   13db0:	cmp	r3, r2
   13db4:	bhi	13de8 <abort@plt+0x3028>
   13db8:	add	r2, r3, #1
   13dbc:	add	r3, r2, r3, lsr #1
   13dc0:	str	r3, [r1]
   13dc4:	mov	r1, r3
   13dc8:	b	13c94 <abort@plt+0x2ed4>
   13dcc:	cmp	r3, #0
   13dd0:	bne	13de4 <abort@plt+0x3024>
   13dd4:	mov	r3, #64	; 0x40
   13dd8:	str	r3, [r1]
   13ddc:	mov	r1, r3
   13de0:	b	13c94 <abort@plt+0x2ed4>
   13de4:	bge	13dc0 <abort@plt+0x3000>
   13de8:	push	{r4, lr}
   13dec:	bl	13e80 <abort@plt+0x30c0>
   13df0:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   13df4:	push	{r4, lr}
   13df8:	mov	r4, r0
   13dfc:	bl	13c38 <abort@plt+0x2e78>
   13e00:	mov	r2, r4
   13e04:	mov	r1, #0
   13e08:	pop	{r4, lr}
   13e0c:	b	10d30 <memset@plt>
   13e10:	push	{r4, r5, r6, lr}
   13e14:	umull	r4, r5, r0, r1
   13e18:	adds	r3, r5, #0
   13e1c:	movne	r3, #1
   13e20:	cmp	r4, #0
   13e24:	blt	13e3c <abort@plt+0x307c>
   13e28:	cmp	r3, #0
   13e2c:	bne	13e3c <abort@plt+0x307c>
   13e30:	bl	10ba4 <calloc@plt>
   13e34:	cmp	r0, #0
   13e38:	popne	{r4, r5, r6, pc}
   13e3c:	bl	13e80 <abort@plt+0x30c0>
   13e40:	push	{r4, r5, r6, lr}
   13e44:	mov	r4, r1
   13e48:	mov	r5, r0
   13e4c:	mov	r0, r1
   13e50:	bl	13c38 <abort@plt+0x2e78>
   13e54:	mov	r2, r4
   13e58:	mov	r1, r5
   13e5c:	pop	{r4, r5, r6, lr}
   13e60:	b	10bf8 <memcpy@plt>
   13e64:	push	{r4, lr}
   13e68:	mov	r4, r0
   13e6c:	bl	10d0c <strlen@plt>
   13e70:	add	r1, r0, #1
   13e74:	mov	r0, r4
   13e78:	pop	{r4, lr}
   13e7c:	b	13e40 <abort@plt+0x3080>
   13e80:	ldr	r3, [pc, #44]	; 13eb4 <abort@plt+0x30f4>
   13e84:	push	{r4, lr}
   13e88:	mov	r2, #5
   13e8c:	ldr	r1, [pc, #36]	; 13eb8 <abort@plt+0x30f8>
   13e90:	mov	r0, #0
   13e94:	ldr	r4, [r3]
   13e98:	bl	10c1c <dcgettext@plt>
   13e9c:	ldr	r2, [pc, #24]	; 13ebc <abort@plt+0x30fc>
   13ea0:	mov	r1, #0
   13ea4:	mov	r3, r0
   13ea8:	mov	r0, r4
   13eac:	bl	10c94 <error@plt>
   13eb0:	bl	10dc0 <abort@plt>
   13eb4:	ldrdeq	r5, [r2], -r4
   13eb8:	andeq	r4, r1, r4, asr #24
   13ebc:	andeq	r4, r1, ip, lsl #16
   13ec0:	push	{r4, r5, r6, r7, r8, lr}
   13ec4:	subs	r7, r0, #0
   13ec8:	ldr	r5, [pc, #108]	; 13f3c <abort@plt+0x317c>
   13ecc:	sub	sp, sp, #8
   13ed0:	mov	r8, r1
   13ed4:	ldr	r1, [r5]
   13ed8:	moveq	r7, sp
   13edc:	str	r1, [sp, #4]
   13ee0:	mov	r0, r7
   13ee4:	mov	r1, r8
   13ee8:	mov	r6, r2
   13eec:	bl	10c88 <mbrtowc@plt>
   13ef0:	cmp	r6, #0
   13ef4:	cmnne	r0, #3
   13ef8:	mov	r4, r0
   13efc:	bhi	13f1c <abort@plt+0x315c>
   13f00:	ldr	r2, [sp, #4]
   13f04:	ldr	r3, [r5]
   13f08:	mov	r0, r4
   13f0c:	cmp	r2, r3
   13f10:	bne	13f38 <abort@plt+0x3178>
   13f14:	add	sp, sp, #8
   13f18:	pop	{r4, r5, r6, r7, r8, pc}
   13f1c:	mov	r0, #0
   13f20:	bl	13fb4 <abort@plt+0x31f4>
   13f24:	cmp	r0, #0
   13f28:	moveq	r4, #1
   13f2c:	ldrbeq	r3, [r8]
   13f30:	streq	r3, [r7]
   13f34:	b	13f00 <abort@plt+0x3140>
   13f38:	bl	10c28 <__stack_chk_fail@plt>
   13f3c:	andeq	r4, r2, r8, lsl #30
   13f40:	push	{r4, r5, r6, lr}
   13f44:	mov	r4, r0
   13f48:	bl	10c7c <__fpending@plt>
   13f4c:	ldr	r5, [r4]
   13f50:	and	r5, r5, #32
   13f54:	mov	r6, r0
   13f58:	mov	r0, r4
   13f5c:	bl	14034 <abort@plt+0x3274>
   13f60:	cmp	r5, #0
   13f64:	mov	r4, r0
   13f68:	bne	13f94 <abort@plt+0x31d4>
   13f6c:	cmp	r0, #0
   13f70:	beq	13f8c <abort@plt+0x31cc>
   13f74:	cmp	r6, #0
   13f78:	bne	13fac <abort@plt+0x31ec>
   13f7c:	bl	10d18 <__errno_location@plt>
   13f80:	ldr	r4, [r0]
   13f84:	subs	r4, r4, #9
   13f88:	mvnne	r4, #0
   13f8c:	mov	r0, r4
   13f90:	pop	{r4, r5, r6, pc}
   13f94:	cmp	r0, #0
   13f98:	bne	13fac <abort@plt+0x31ec>
   13f9c:	bl	10d18 <__errno_location@plt>
   13fa0:	str	r4, [r0]
   13fa4:	mvn	r4, #0
   13fa8:	b	13f8c <abort@plt+0x31cc>
   13fac:	mvn	r4, #0
   13fb0:	b	13f8c <abort@plt+0x31cc>
   13fb4:	push	{r4, lr}
   13fb8:	mov	r1, #0
   13fbc:	bl	10d78 <setlocale@plt>
   13fc0:	subs	r4, r0, #0
   13fc4:	beq	13ff0 <abort@plt+0x3230>
   13fc8:	ldr	r1, [pc, #40]	; 13ff8 <abort@plt+0x3238>
   13fcc:	bl	10bc8 <strcmp@plt>
   13fd0:	cmp	r0, #0
   13fd4:	popeq	{r4, pc}
   13fd8:	mov	r0, r4
   13fdc:	ldr	r1, [pc, #24]	; 13ffc <abort@plt+0x323c>
   13fe0:	bl	10bc8 <strcmp@plt>
   13fe4:	adds	r0, r0, #0
   13fe8:	movne	r0, #1
   13fec:	pop	{r4, pc}
   13ff0:	mov	r0, #1
   13ff4:	pop	{r4, pc}
   13ff8:	andeq	r4, r1, r8, asr ip
   13ffc:	andeq	r4, r1, ip, asr ip
   14000:	push	{r4, lr}
   14004:	mov	r0, #14
   14008:	bl	10d90 <nl_langinfo@plt>
   1400c:	cmp	r0, #0
   14010:	beq	14028 <abort@plt+0x3268>
   14014:	ldrb	r2, [r0]
   14018:	ldr	r3, [pc, #16]	; 14030 <abort@plt+0x3270>
   1401c:	cmp	r2, #0
   14020:	moveq	r0, r3
   14024:	pop	{r4, pc}
   14028:	ldr	r0, [pc]	; 14030 <abort@plt+0x3270>
   1402c:	pop	{r4, pc}
   14030:	andeq	r4, r1, r4, ror #24
   14034:	push	{r4, r5, lr}
   14038:	sub	sp, sp, #12
   1403c:	mov	r4, r0
   14040:	bl	10d48 <fileno@plt>
   14044:	cmp	r0, #0
   14048:	mov	r0, r4
   1404c:	blt	140c8 <abort@plt+0x3308>
   14050:	bl	10cc4 <__freading@plt>
   14054:	cmp	r0, #0
   14058:	bne	14094 <abort@plt+0x32d4>
   1405c:	mov	r0, r4
   14060:	bl	140d4 <abort@plt+0x3314>
   14064:	cmp	r0, #0
   14068:	beq	140c4 <abort@plt+0x3304>
   1406c:	bl	10d18 <__errno_location@plt>
   14070:	mov	r5, r0
   14074:	mov	r0, r4
   14078:	ldr	r4, [r5]
   1407c:	bl	10d60 <fclose@plt>
   14080:	cmp	r4, #0
   14084:	mvnne	r0, #0
   14088:	strne	r4, [r5]
   1408c:	add	sp, sp, #12
   14090:	pop	{r4, r5, pc}
   14094:	mov	r0, r4
   14098:	bl	10d48 <fileno@plt>
   1409c:	mov	r3, #1
   140a0:	str	r3, [sp]
   140a4:	mov	r2, #0
   140a8:	mov	r3, #0
   140ac:	bl	10c64 <lseek64@plt>
   140b0:	mvn	r3, #0
   140b4:	mvn	r2, #0
   140b8:	cmp	r1, r3
   140bc:	cmpeq	r0, r2
   140c0:	bne	1405c <abort@plt+0x329c>
   140c4:	mov	r0, r4
   140c8:	add	sp, sp, #12
   140cc:	pop	{r4, r5, lr}
   140d0:	b	10d60 <fclose@plt>
   140d4:	push	{r4, lr}
   140d8:	subs	r4, r0, #0
   140dc:	sub	sp, sp, #8
   140e0:	beq	140fc <abort@plt+0x333c>
   140e4:	bl	10cc4 <__freading@plt>
   140e8:	cmp	r0, #0
   140ec:	beq	140fc <abort@plt+0x333c>
   140f0:	ldr	r3, [r4]
   140f4:	tst	r3, #256	; 0x100
   140f8:	bne	1410c <abort@plt+0x334c>
   140fc:	mov	r0, r4
   14100:	add	sp, sp, #8
   14104:	pop	{r4, lr}
   14108:	b	10bd4 <fflush@plt>
   1410c:	mov	r3, #1
   14110:	str	r3, [sp]
   14114:	mov	r2, #0
   14118:	mov	r3, #0
   1411c:	mov	r0, r4
   14120:	bl	14134 <abort@plt+0x3374>
   14124:	mov	r0, r4
   14128:	add	sp, sp, #8
   1412c:	pop	{r4, lr}
   14130:	b	10bd4 <fflush@plt>
   14134:	push	{r4, r5, r6, r7, r8, lr}
   14138:	sub	sp, sp, #8
   1413c:	ldmib	r0, {ip, lr}
   14140:	mov	r4, r0
   14144:	ldr	r5, [sp, #32]
   14148:	cmp	lr, ip
   1414c:	beq	14164 <abort@plt+0x33a4>
   14150:	str	r5, [sp, #32]
   14154:	mov	r0, r4
   14158:	add	sp, sp, #8
   1415c:	pop	{r4, r5, r6, r7, r8, lr}
   14160:	b	10d6c <fseeko64@plt>
   14164:	ldr	lr, [r0, #20]
   14168:	ldr	ip, [r0, #16]
   1416c:	cmp	lr, ip
   14170:	bne	14150 <abort@plt+0x3390>
   14174:	ldr	r8, [r0, #36]	; 0x24
   14178:	cmp	r8, #0
   1417c:	bne	14150 <abort@plt+0x3390>
   14180:	mov	r6, r2
   14184:	mov	r7, r3
   14188:	bl	10d48 <fileno@plt>
   1418c:	mov	r2, r6
   14190:	mov	r3, r7
   14194:	str	r5, [sp]
   14198:	bl	10c64 <lseek64@plt>
   1419c:	mvn	r3, #0
   141a0:	mvn	r2, #0
   141a4:	cmp	r1, r3
   141a8:	cmpeq	r0, r2
   141ac:	beq	141cc <abort@plt+0x340c>
   141b0:	ldr	r3, [r4]
   141b4:	strd	r0, [r4, #80]	; 0x50
   141b8:	mov	r0, r8
   141bc:	bic	r3, r3, #16
   141c0:	str	r3, [r4]
   141c4:	add	sp, sp, #8
   141c8:	pop	{r4, r5, r6, r7, r8, pc}
   141cc:	mvn	r0, #0
   141d0:	b	141c4 <abort@plt+0x3404>
   141d4:	subs	r2, r1, #1
   141d8:	bxeq	lr
   141dc:	bcc	143b4 <abort@plt+0x35f4>
   141e0:	cmp	r0, r1
   141e4:	bls	14398 <abort@plt+0x35d8>
   141e8:	tst	r1, r2
   141ec:	beq	143a4 <abort@plt+0x35e4>
   141f0:	clz	r3, r0
   141f4:	clz	r2, r1
   141f8:	sub	r3, r2, r3
   141fc:	rsbs	r3, r3, #31
   14200:	addne	r3, r3, r3, lsl #1
   14204:	mov	r2, #0
   14208:	addne	pc, pc, r3, lsl #2
   1420c:	nop			; (mov r0, r0)
   14210:	cmp	r0, r1, lsl #31
   14214:	adc	r2, r2, r2
   14218:	subcs	r0, r0, r1, lsl #31
   1421c:	cmp	r0, r1, lsl #30
   14220:	adc	r2, r2, r2
   14224:	subcs	r0, r0, r1, lsl #30
   14228:	cmp	r0, r1, lsl #29
   1422c:	adc	r2, r2, r2
   14230:	subcs	r0, r0, r1, lsl #29
   14234:	cmp	r0, r1, lsl #28
   14238:	adc	r2, r2, r2
   1423c:	subcs	r0, r0, r1, lsl #28
   14240:	cmp	r0, r1, lsl #27
   14244:	adc	r2, r2, r2
   14248:	subcs	r0, r0, r1, lsl #27
   1424c:	cmp	r0, r1, lsl #26
   14250:	adc	r2, r2, r2
   14254:	subcs	r0, r0, r1, lsl #26
   14258:	cmp	r0, r1, lsl #25
   1425c:	adc	r2, r2, r2
   14260:	subcs	r0, r0, r1, lsl #25
   14264:	cmp	r0, r1, lsl #24
   14268:	adc	r2, r2, r2
   1426c:	subcs	r0, r0, r1, lsl #24
   14270:	cmp	r0, r1, lsl #23
   14274:	adc	r2, r2, r2
   14278:	subcs	r0, r0, r1, lsl #23
   1427c:	cmp	r0, r1, lsl #22
   14280:	adc	r2, r2, r2
   14284:	subcs	r0, r0, r1, lsl #22
   14288:	cmp	r0, r1, lsl #21
   1428c:	adc	r2, r2, r2
   14290:	subcs	r0, r0, r1, lsl #21
   14294:	cmp	r0, r1, lsl #20
   14298:	adc	r2, r2, r2
   1429c:	subcs	r0, r0, r1, lsl #20
   142a0:	cmp	r0, r1, lsl #19
   142a4:	adc	r2, r2, r2
   142a8:	subcs	r0, r0, r1, lsl #19
   142ac:	cmp	r0, r1, lsl #18
   142b0:	adc	r2, r2, r2
   142b4:	subcs	r0, r0, r1, lsl #18
   142b8:	cmp	r0, r1, lsl #17
   142bc:	adc	r2, r2, r2
   142c0:	subcs	r0, r0, r1, lsl #17
   142c4:	cmp	r0, r1, lsl #16
   142c8:	adc	r2, r2, r2
   142cc:	subcs	r0, r0, r1, lsl #16
   142d0:	cmp	r0, r1, lsl #15
   142d4:	adc	r2, r2, r2
   142d8:	subcs	r0, r0, r1, lsl #15
   142dc:	cmp	r0, r1, lsl #14
   142e0:	adc	r2, r2, r2
   142e4:	subcs	r0, r0, r1, lsl #14
   142e8:	cmp	r0, r1, lsl #13
   142ec:	adc	r2, r2, r2
   142f0:	subcs	r0, r0, r1, lsl #13
   142f4:	cmp	r0, r1, lsl #12
   142f8:	adc	r2, r2, r2
   142fc:	subcs	r0, r0, r1, lsl #12
   14300:	cmp	r0, r1, lsl #11
   14304:	adc	r2, r2, r2
   14308:	subcs	r0, r0, r1, lsl #11
   1430c:	cmp	r0, r1, lsl #10
   14310:	adc	r2, r2, r2
   14314:	subcs	r0, r0, r1, lsl #10
   14318:	cmp	r0, r1, lsl #9
   1431c:	adc	r2, r2, r2
   14320:	subcs	r0, r0, r1, lsl #9
   14324:	cmp	r0, r1, lsl #8
   14328:	adc	r2, r2, r2
   1432c:	subcs	r0, r0, r1, lsl #8
   14330:	cmp	r0, r1, lsl #7
   14334:	adc	r2, r2, r2
   14338:	subcs	r0, r0, r1, lsl #7
   1433c:	cmp	r0, r1, lsl #6
   14340:	adc	r2, r2, r2
   14344:	subcs	r0, r0, r1, lsl #6
   14348:	cmp	r0, r1, lsl #5
   1434c:	adc	r2, r2, r2
   14350:	subcs	r0, r0, r1, lsl #5
   14354:	cmp	r0, r1, lsl #4
   14358:	adc	r2, r2, r2
   1435c:	subcs	r0, r0, r1, lsl #4
   14360:	cmp	r0, r1, lsl #3
   14364:	adc	r2, r2, r2
   14368:	subcs	r0, r0, r1, lsl #3
   1436c:	cmp	r0, r1, lsl #2
   14370:	adc	r2, r2, r2
   14374:	subcs	r0, r0, r1, lsl #2
   14378:	cmp	r0, r1, lsl #1
   1437c:	adc	r2, r2, r2
   14380:	subcs	r0, r0, r1, lsl #1
   14384:	cmp	r0, r1
   14388:	adc	r2, r2, r2
   1438c:	subcs	r0, r0, r1
   14390:	mov	r0, r2
   14394:	bx	lr
   14398:	moveq	r0, #1
   1439c:	movne	r0, #0
   143a0:	bx	lr
   143a4:	clz	r2, r1
   143a8:	rsb	r2, r2, #31
   143ac:	lsr	r0, r0, r2
   143b0:	bx	lr
   143b4:	cmp	r0, #0
   143b8:	mvnne	r0, #0
   143bc:	b	143e0 <abort@plt+0x3620>
   143c0:	cmp	r1, #0
   143c4:	beq	143b4 <abort@plt+0x35f4>
   143c8:	push	{r0, r1, lr}
   143cc:	bl	141d4 <abort@plt+0x3414>
   143d0:	pop	{r1, r2, lr}
   143d4:	mul	r3, r2, r0
   143d8:	sub	r1, r1, r3
   143dc:	bx	lr
   143e0:	push	{r1, lr}
   143e4:	mov	r0, #8
   143e8:	bl	10bbc <raise@plt>
   143ec:	pop	{r1, pc}
   143f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   143f4:	mov	r7, r0
   143f8:	ldr	r6, [pc, #72]	; 14448 <abort@plt+0x3688>
   143fc:	ldr	r5, [pc, #72]	; 1444c <abort@plt+0x368c>
   14400:	add	r6, pc, r6
   14404:	add	r5, pc, r5
   14408:	sub	r6, r6, r5
   1440c:	mov	r8, r1
   14410:	mov	r9, r2
   14414:	bl	10b84 <calloc@plt-0x20>
   14418:	asrs	r6, r6, #2
   1441c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14420:	mov	r4, #0
   14424:	add	r4, r4, #1
   14428:	ldr	r3, [r5], #4
   1442c:	mov	r2, r9
   14430:	mov	r1, r8
   14434:	mov	r0, r7
   14438:	blx	r3
   1443c:	cmp	r6, r4
   14440:	bne	14424 <abort@plt+0x3664>
   14444:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14448:	strdeq	r0, [r1], -ip
   1444c:	strdeq	r0, [r1], -r4
   14450:	bx	lr
   14454:	ldr	r3, [pc, #12]	; 14468 <abort@plt+0x36a8>
   14458:	mov	r1, #0
   1445c:	add	r3, pc, r3
   14460:	ldr	r2, [r3]
   14464:	b	10d24 <__cxa_atexit@plt>
   14468:	andeq	r0, r1, r8, ror #24

Disassembly of section .fini:

0001446c <.fini>:
   1446c:	push	{r3, lr}
   14470:	pop	{r3, pc}
