
raspbian-preinstalled/lxsession:     file format elf32-littlearm


Disassembly of section .init:

000143a8 <.init>:
   143a8:	push	{r3, lr}
   143ac:	bl	15224 <g_strcmp0@plt+0x58>
   143b0:	pop	{r3, pc}

Disassembly of section .plt:

000143b4 <g_slist_copy@plt-0x14>:
   143b4:	push	{lr}		; (str lr, [sp, #-4]!)
   143b8:	ldr	lr, [pc, #4]	; 143c4 <g_slist_copy@plt-0x4>
   143bc:	add	lr, pc, lr
   143c0:	ldr	pc, [lr, #8]!
   143c4:	andeq	r7, r3, r8, ror r7

000143c8 <g_slist_copy@plt>:
   143c8:	add	ip, pc, #0, 12
   143cc:	add	ip, ip, #225280	; 0x37000
   143d0:	ldr	pc, [ip, #1912]!	; 0x778

000143d4 <g_object_new@plt>:
   143d4:	add	ip, pc, #0, 12
   143d8:	add	ip, ip, #225280	; 0x37000
   143dc:	ldr	pc, [ip, #1904]!	; 0x770

000143e0 <XConvertSelection@plt>:
   143e0:	add	ip, pc, #0, 12
   143e4:	add	ip, ip, #225280	; 0x37000
   143e8:	ldr	pc, [ip, #1896]!	; 0x768

000143ec <g_dbus_connection_register_object@plt>:
   143ec:	add	ip, pc, #0, 12
   143f0:	add	ip, ip, #225280	; 0x37000
   143f4:	ldr	pc, [ip, #1888]!	; 0x760

000143f8 <g_malloc_n@plt>:
   143f8:	add	ip, pc, #0, 12
   143fc:	add	ip, ip, #225280	; 0x37000
   14400:	ldr	pc, [ip, #1880]!	; 0x758

00014404 <g_object_ref@plt>:
   14404:	add	ip, pc, #0, 12
   14408:	add	ip, ip, #225280	; 0x37000
   1440c:	ldr	pc, [ip, #1872]!	; 0x750

00014410 <g_option_context_parse@plt>:
   14410:	add	ip, pc, #0, 12
   14414:	add	ip, ip, #225280	; 0x37000
   14418:	ldr	pc, [ip, #1864]!	; 0x748

0001441c <getpid@plt>:
   1441c:	add	ip, pc, #0, 12
   14420:	add	ip, ip, #225280	; 0x37000
   14424:	ldr	pc, [ip, #1856]!	; 0x740

00014428 <g_type_register_static@plt>:
   14428:	add	ip, pc, #0, 12
   1442c:	add	ip, ip, #225280	; 0x37000
   14430:	ldr	pc, [ip, #1848]!	; 0x738

00014434 <g_value_take_string@plt>:
   14434:	add	ip, pc, #0, 12
   14438:	add	ip, ip, #225280	; 0x37000
   1443c:	ldr	pc, [ip, #1840]!	; 0x730

00014440 <g_key_file_get_string_list@plt>:
   14440:	add	ip, pc, #0, 12
   14444:	add	ip, ip, #225280	; 0x37000
   14448:	ldr	pc, [ip, #1832]!	; 0x728

0001444c <g_get_home_dir@plt>:
   1444c:	add	ip, pc, #0, 12
   14450:	add	ip, ip, #225280	; 0x37000
   14454:	ldr	pc, [ip, #1824]!	; 0x720

00014458 <g_timeout_add_seconds_full@plt>:
   14458:	add	ip, pc, #0, 12
   1445c:	add	ip, ip, #225280	; 0x37000
   14460:	ldr	pc, [ip, #1816]!	; 0x718

00014464 <g_io_error_quark@plt>:
   14464:	add	ip, pc, #0, 12
   14468:	add	ip, ip, #225280	; 0x37000
   1446c:	ldr	pc, [ip, #1808]!	; 0x710

00014470 <g_type_register_static_simple@plt>:
   14470:	add	ip, pc, #0, 12
   14474:	add	ip, ip, #225280	; 0x37000
   14478:	ldr	pc, [ip, #1800]!	; 0x708

0001447c <gdk_window_remove_filter@plt>:
   1447c:	add	ip, pc, #0, 12
   14480:	add	ip, ip, #225280	; 0x37000
   14484:	ldr	pc, [ip, #1792]!	; 0x700

00014488 <gdk_error_trap_pop@plt>:
   14488:	add	ip, pc, #0, 12
   1448c:	add	ip, ip, #225280	; 0x37000
   14490:	ldr	pc, [ip, #1784]!	; 0x6f8

00014494 <g_variant_iter_init@plt>:
   14494:	add	ip, pc, #0, 12
   14498:	add	ip, ip, #225280	; 0x37000
   1449c:	ldr	pc, [ip, #1776]!	; 0x6f0

000144a0 <g_value_get_string@plt>:
   144a0:	add	ip, pc, #0, 12
   144a4:	add	ip, ip, #225280	; 0x37000
   144a8:	ldr	pc, [ip, #1768]!	; 0x6e8

000144ac <g_hash_table_ref@plt>:
   144ac:	add	ip, pc, #0, 12
   144b0:	add	ip, ip, #225280	; 0x37000
   144b4:	ldr	pc, [ip, #1760]!	; 0x6e0

000144b8 <g_param_spec_boolean@plt>:
   144b8:	add	ip, pc, #0, 12
   144bc:	add	ip, ip, #225280	; 0x37000
   144c0:	ldr	pc, [ip, #1752]!	; 0x6d8

000144c4 <g_type_class_adjust_private_offset@plt>:
   144c4:	add	ip, pc, #0, 12
   144c8:	add	ip, ip, #225280	; 0x37000
   144cc:	ldr	pc, [ip, #1744]!	; 0x6d0

000144d0 <g_bus_own_name_with_closures@plt>:
   144d0:	add	ip, pc, #0, 12
   144d4:	add	ip, ip, #225280	; 0x37000
   144d8:	ldr	pc, [ip, #1736]!	; 0x6c8

000144dc <gdk_window_add_filter@plt>:
   144dc:	add	ip, pc, #0, 12
   144e0:	add	ip, ip, #225280	; 0x37000
   144e4:	ldr	pc, [ip, #1728]!	; 0x6c0

000144e8 <XGetPointerMapping@plt>:
   144e8:	add	ip, pc, #0, 12
   144ec:	add	ip, ip, #225280	; 0x37000
   144f0:	ldr	pc, [ip, #1720]!	; 0x6b8

000144f4 <g_setenv@plt>:
   144f4:	add	ip, pc, #0, 12
   144f8:	add	ip, ip, #225280	; 0x37000
   144fc:	ldr	pc, [ip, #1712]!	; 0x6b0

00014500 <g_cclosure_new@plt>:
   14500:	add	ip, pc, #0, 12
   14504:	add	ip, ip, #225280	; 0x37000
   14508:	ldr	pc, [ip, #1704]!	; 0x6a8

0001450c <XSendEvent@plt>:
   1450c:	add	ip, pc, #0, 12
   14510:	add	ip, ip, #225280	; 0x37000
   14514:	ldr	pc, [ip, #1696]!	; 0x6a0

00014518 <g_value_get_int@plt>:
   14518:	add	ip, pc, #0, 12
   1451c:	add	ip, ip, #225280	; 0x37000
   14520:	ldr	pc, [ip, #1688]!	; 0x698

00014524 <g_variant_new_uint32@plt>:
   14524:	add	ip, pc, #0, 12
   14528:	add	ip, ip, #225280	; 0x37000
   1452c:	ldr	pc, [ip, #1680]!	; 0x690

00014530 <g_strsplit_set@plt>:
   14530:	add	ip, pc, #0, 12
   14534:	add	ip, ip, #225280	; 0x37000
   14538:	ldr	pc, [ip, #1672]!	; 0x688

0001453c <g_error_free@plt>:
   1453c:	add	ip, pc, #0, 12
   14540:	add	ip, ip, #225280	; 0x37000
   14544:	ldr	pc, [ip, #1664]!	; 0x680

00014548 <strtol@plt>:
   14548:	add	ip, pc, #0, 12
   1454c:	add	ip, ip, #225280	; 0x37000
   14550:	ldr	pc, [ip, #1656]!	; 0x678

00014554 <free@plt>:
   14554:	add	ip, pc, #0, 12
   14558:	add	ip, ip, #225280	; 0x37000
   1455c:	ldr	pc, [ip, #1648]!	; 0x670

00014560 <XGetWindowProperty@plt>:
   14560:	add	ip, pc, #0, 12
   14564:	add	ip, ip, #225280	; 0x37000
   14568:	ldr	pc, [ip, #1640]!	; 0x668

0001456c <g_variant_new_boolean@plt>:
   1456c:	add	ip, pc, #0, 12
   14570:	add	ip, ip, #225280	; 0x37000
   14574:	ldr	pc, [ip, #1632]!	; 0x660

00014578 <g_type_add_interface_static@plt>:
   14578:	add	ip, pc, #0, 12
   1457c:	add	ip, ip, #225280	; 0x37000
   14580:	ldr	pc, [ip, #1624]!	; 0x658

00014584 <g_cclosure_marshal_VOID__POINTER@plt>:
   14584:	add	ip, pc, #0, 12
   14588:	add	ip, ip, #225280	; 0x37000
   1458c:	ldr	pc, [ip, #1616]!	; 0x650

00014590 <g_strndup@plt>:
   14590:	add	ip, pc, #0, 12
   14594:	add	ip, ip, #225280	; 0x37000
   14598:	ldr	pc, [ip, #1608]!	; 0x648

0001459c <g_key_file_load_from_file@plt>:
   1459c:	add	ip, pc, #0, 12
   145a0:	add	ip, ip, #225280	; 0x37000
   145a4:	ldr	pc, [ip, #1600]!	; 0x640

000145a8 <g_variant_builder_end@plt>:
   145a8:	add	ip, pc, #0, 12
   145ac:	add	ip, ip, #225280	; 0x37000
   145b0:	ldr	pc, [ip, #1592]!	; 0x638

000145b4 <g_variant_new_string@plt>:
   145b4:	add	ip, pc, #0, 12
   145b8:	add	ip, ip, #225280	; 0x37000
   145bc:	ldr	pc, [ip, #1584]!	; 0x630

000145c0 <g_slist_prepend@plt>:
   145c0:	add	ip, pc, #0, 12
   145c4:	add	ip, ip, #225280	; 0x37000
   145c8:	ldr	pc, [ip, #1576]!	; 0x628

000145cc <XCreateSimpleWindow@plt>:
   145cc:	add	ip, pc, #0, 12
   145d0:	add	ip, ip, #225280	; 0x37000
   145d4:	ldr	pc, [ip, #1568]!	; 0x620

000145d8 <bind_textdomain_codeset@plt>:
   145d8:	add	ip, pc, #0, 12
   145dc:	add	ip, ip, #225280	; 0x37000
   145e0:	ldr	pc, [ip, #1560]!	; 0x618

000145e4 <g_param_spec_string@plt>:
   145e4:	add	ip, pc, #0, 12
   145e8:	add	ip, ip, #225280	; 0x37000
   145ec:	ldr	pc, [ip, #1552]!	; 0x610

000145f0 <g_variant_builder_add_value@plt>:
   145f0:	add	ip, pc, #0, 12
   145f4:	add	ip, ip, #225280	; 0x37000
   145f8:	ldr	pc, [ip, #1544]!	; 0x608

000145fc <g_string_new@plt>:
   145fc:	add	ip, pc, #0, 12
   14600:	add	ip, ip, #225280	; 0x37000
   14604:	ldr	pc, [ip, #1536]!	; 0x600

00014608 <g_str_equal@plt>:
   14608:	add	ip, pc, #0, 12
   1460c:	add	ip, ip, #225280	; 0x37000
   14610:	ldr	pc, [ip, #1528]!	; 0x5f8

00014614 <g_key_file_has_group@plt>:
   14614:	add	ip, pc, #0, 12
   14618:	add	ip, ip, #225280	; 0x37000
   1461c:	ldr	pc, [ip, #1520]!	; 0x5f0

00014620 <g_option_context_new@plt>:
   14620:	add	ip, pc, #0, 12
   14624:	add	ip, ip, #225280	; 0x37000
   14628:	ldr	pc, [ip, #1512]!	; 0x5e8

0001462c <g_dbus_message_get_body@plt>:
   1462c:	add	ip, pc, #0, 12
   14630:	add	ip, ip, #225280	; 0x37000
   14634:	ldr	pc, [ip, #1504]!	; 0x5e0

00014638 <g_printerr@plt>:
   14638:	add	ip, pc, #0, 12
   1463c:	add	ip, ip, #225280	; 0x37000
   14640:	ldr	pc, [ip, #1496]!	; 0x5d8

00014644 <g_spawn_close_pid@plt>:
   14644:	add	ip, pc, #0, 12
   14648:	add	ip, ip, #225280	; 0x37000
   1464c:	ldr	pc, [ip, #1488]!	; 0x5d0

00014650 <g_list_length@plt>:
   14650:	add	ip, pc, #0, 12
   14654:	add	ip, ip, #225280	; 0x37000
   14658:	ldr	pc, [ip, #1480]!	; 0x5c8

0001465c <g_type_interface_peek@plt>:
   1465c:	add	ip, pc, #0, 12
   14660:	add	ip, ip, #225280	; 0x37000
   14664:	ldr	pc, [ip, #1472]!	; 0x5c0

00014668 <g_log@plt>:
   14668:	add	ip, pc, #0, 12
   1466c:	add	ip, ip, #225280	; 0x37000
   14670:	ldr	pc, [ip, #1464]!	; 0x5b8

00014674 <g_key_file_set_integer@plt>:
   14674:	add	ip, pc, #0, 12
   14678:	add	ip, ip, #225280	; 0x37000
   1467c:	ldr	pc, [ip, #1456]!	; 0x5b0

00014680 <g_type_name@plt>:
   14680:	add	ip, pc, #0, 12
   14684:	add	ip, ip, #225280	; 0x37000
   14688:	ldr	pc, [ip, #1448]!	; 0x5a8

0001468c <g_task_return_pointer@plt>:
   1468c:	add	ip, pc, #0, 12
   14690:	add	ip, ip, #225280	; 0x37000
   14694:	ldr	pc, [ip, #1440]!	; 0x5a0

00014698 <g_cancellable_cancel@plt>:
   14698:	add	ip, pc, #0, 12
   1469c:	add	ip, ip, #225280	; 0x37000
   146a0:	ldr	pc, [ip, #1432]!	; 0x598

000146a4 <g_variant_get_boolean@plt>:
   146a4:	add	ip, pc, #0, 12
   146a8:	add	ip, ip, #225280	; 0x37000
   146ac:	ldr	pc, [ip, #1424]!	; 0x590

000146b0 <g_list_append@plt>:
   146b0:	add	ip, pc, #0, 12
   146b4:	add	ip, ip, #225280	; 0x37000
   146b8:	ldr	pc, [ip, #1416]!	; 0x588

000146bc <exit@plt>:
   146bc:	add	ip, pc, #0, 12
   146c0:	add	ip, ip, #225280	; 0x37000
   146c4:	ldr	pc, [ip, #1408]!	; 0x580

000146c8 <g_build_filename@plt>:
   146c8:	add	ip, pc, #0, 12
   146cc:	add	ip, ip, #225280	; 0x37000
   146d0:	ldr	pc, [ip, #1400]!	; 0x578

000146d4 <g_variant_new_int32@plt>:
   146d4:	add	ip, pc, #0, 12
   146d8:	add	ip, ip, #225280	; 0x37000
   146dc:	ldr	pc, [ip, #1392]!	; 0x570

000146e0 <g_slist_length@plt>:
   146e0:	add	ip, pc, #0, 12
   146e4:	add	ip, ip, #225280	; 0x37000
   146e8:	ldr	pc, [ip, #1384]!	; 0x568

000146ec <g_spawn_error_quark@plt>:
   146ec:	add	ip, pc, #0, 12
   146f0:	add	ip, ip, #225280	; 0x37000
   146f4:	ldr	pc, [ip, #1376]!	; 0x560

000146f8 <g_file_get_path@plt>:
   146f8:	add	ip, pc, #0, 12
   146fc:	add	ip, ip, #225280	; 0x37000
   14700:	ldr	pc, [ip, #1368]!	; 0x558

00014704 <g_dbus_message_new_method_reply@plt>:
   14704:	add	ip, pc, #0, 12
   14708:	add	ip, ip, #225280	; 0x37000
   1470c:	ldr	pc, [ip, #1360]!	; 0x550

00014710 <XUngrabServer@plt>:
   14710:	add	ip, pc, #0, 12
   14714:	add	ip, ip, #225280	; 0x37000
   14718:	ldr	pc, [ip, #1352]!	; 0x548

0001471c <g_source_unref@plt>:
   1471c:	add	ip, pc, #0, 12
   14720:	add	ip, ip, #225280	; 0x37000
   14724:	ldr	pc, [ip, #1344]!	; 0x540

00014728 <g_file_read@plt>:
   14728:	add	ip, pc, #0, 12
   1472c:	add	ip, ip, #225280	; 0x37000
   14730:	ldr	pc, [ip, #1336]!	; 0x538

00014734 <g_option_error_quark@plt>:
   14734:	add	ip, pc, #0, 12
   14738:	add	ip, ip, #225280	; 0x37000
   1473c:	ldr	pc, [ip, #1328]!	; 0x530

00014740 <g_get_user_cache_dir@plt>:
   14740:	add	ip, pc, #0, 12
   14744:	add	ip, ip, #225280	; 0x37000
   14748:	ldr	pc, [ip, #1320]!	; 0x528

0001474c <XIfEvent@plt>:
   1474c:	add	ip, pc, #0, 12
   14750:	add	ip, ip, #225280	; 0x37000
   14754:	ldr	pc, [ip, #1312]!	; 0x520

00014758 <g_hash_table_get_keys@plt>:
   14758:	add	ip, pc, #0, 12
   1475c:	add	ip, ip, #225280	; 0x37000
   14760:	ldr	pc, [ip, #1304]!	; 0x518

00014764 <g_list_free@plt>:
   14764:	add	ip, pc, #0, 12
   14768:	add	ip, ip, #225280	; 0x37000
   1476c:	ldr	pc, [ip, #1296]!	; 0x510

00014770 <g_dbus_proxy_get_name@plt>:
   14770:	add	ip, pc, #0, 12
   14774:	add	ip, ip, #225280	; 0x37000
   14778:	ldr	pc, [ip, #1288]!	; 0x508

0001477c <g_value_type_compatible@plt>:
   1477c:	add	ip, pc, #0, 12
   14780:	add	ip, ip, #225280	; 0x37000
   14784:	ldr	pc, [ip, #1280]!	; 0x500

00014788 <g_param_spec_internal@plt>:
   14788:	add	ip, pc, #0, 12
   1478c:	add	ip, ip, #225280	; 0x37000
   14790:	ldr	pc, [ip, #1272]!	; 0x4f8

00014794 <g_type_free_instance@plt>:
   14794:	add	ip, pc, #0, 12
   14798:	add	ip, ip, #225280	; 0x37000
   1479c:	ldr	pc, [ip, #1264]!	; 0x4f0

000147a0 <XSelectInput@plt>:
   147a0:	add	ip, pc, #0, 12
   147a4:	add	ip, ip, #225280	; 0x37000
   147a8:	ldr	pc, [ip, #1256]!	; 0x4e8

000147ac <g_signal_handlers_disconnect_matched@plt>:
   147ac:	add	ip, pc, #0, 12
   147b0:	add	ip, ip, #225280	; 0x37000
   147b4:	ldr	pc, [ip, #1248]!	; 0x4e0

000147b8 <textdomain@plt>:
   147b8:	add	ip, pc, #0, 12
   147bc:	add	ip, ip, #225280	; 0x37000
   147c0:	ldr	pc, [ip, #1240]!	; 0x4d8

000147c4 <g_file_enumerator_next_file@plt>:
   147c4:	add	ip, pc, #0, 12
   147c8:	add	ip, ip, #225280	; 0x37000
   147cc:	ldr	pc, [ip, #1232]!	; 0x4d0

000147d0 <g_hash_table_new_full@plt>:
   147d0:	add	ip, pc, #0, 12
   147d4:	add	ip, ip, #225280	; 0x37000
   147d8:	ldr	pc, [ip, #1224]!	; 0x4c8

000147dc <__fprintf_chk@plt>:
   147dc:	add	ip, pc, #0, 12
   147e0:	add	ip, ip, #225280	; 0x37000
   147e4:	ldr	pc, [ip, #1216]!	; 0x4c0

000147e8 <g_strdup@plt>:
   147e8:	add	ip, pc, #0, 12
   147ec:	add	ip, ip, #225280	; 0x37000
   147f0:	ldr	pc, [ip, #1208]!	; 0x4b8

000147f4 <g_file_query_exists@plt>:
   147f4:	add	ip, pc, #0, 12
   147f8:	add	ip, ip, #225280	; 0x37000
   147fc:	ldr	pc, [ip, #1200]!	; 0x4b0

00014800 <g_spawn_async@plt>:
   14800:	add	ip, pc, #0, 12
   14804:	add	ip, ip, #225280	; 0x37000
   14808:	ldr	pc, [ip, #1192]!	; 0x4a8

0001480c <g_hash_table_insert@plt>:
   1480c:	add	ip, pc, #0, 12
   14810:	add	ip, ip, #225280	; 0x37000
   14814:	ldr	pc, [ip, #1184]!	; 0x4a0

00014818 <memset@plt>:
   14818:	add	ip, pc, #0, 12
   1481c:	add	ip, ip, #225280	; 0x37000
   14820:	ldr	pc, [ip, #1176]!	; 0x498

00014824 <g_spawn_command_line_sync@plt>:
   14824:	add	ip, pc, #0, 12
   14828:	add	ip, ip, #225280	; 0x37000
   1482c:	ldr	pc, [ip, #1168]!	; 0x490

00014830 <gdk_error_trap_push@plt>:
   14830:	add	ip, pc, #0, 12
   14834:	add	ip, ip, #225280	; 0x37000
   14838:	ldr	pc, [ip, #1160]!	; 0x488

0001483c <g_dbus_proxy_get_default_timeout@plt>:
   1483c:	add	ip, pc, #0, 12
   14840:	add	ip, ip, #225280	; 0x37000
   14844:	ldr	pc, [ip, #1152]!	; 0x480

00014848 <g_dbus_message_set_body@plt>:
   14848:	add	ip, pc, #0, 12
   1484c:	add	ip, ip, #225280	; 0x37000
   14850:	ldr	pc, [ip, #1144]!	; 0x478

00014854 <g_key_file_get_value@plt>:
   14854:	add	ip, pc, #0, 12
   14858:	add	ip, ip, #225280	; 0x37000
   1485c:	ldr	pc, [ip, #1136]!	; 0x470

00014860 <g_array_append_vals@plt>:
   14860:	add	ip, pc, #0, 12
   14864:	add	ip, ip, #225280	; 0x37000
   14868:	ldr	pc, [ip, #1128]!	; 0x468

0001486c <XInternAtom@plt>:
   1486c:	add	ip, pc, #0, 12
   14870:	add	ip, ip, #225280	; 0x37000
   14874:	ldr	pc, [ip, #1120]!	; 0x460

00014878 <g_value_set_boxed@plt>:
   14878:	add	ip, pc, #0, 12
   1487c:	add	ip, ip, #225280	; 0x37000
   14880:	ldr	pc, [ip, #1112]!	; 0x458

00014884 <g_dbus_method_invocation_return_gerror@plt>:
   14884:	add	ip, pc, #0, 12
   14888:	add	ip, ip, #225280	; 0x37000
   1488c:	ldr	pc, [ip, #1104]!	; 0x450

00014890 <g_strdup_printf@plt>:
   14890:	add	ip, pc, #0, 12
   14894:	add	ip, ip, #225280	; 0x37000
   14898:	ldr	pc, [ip, #1096]!	; 0x448

0001489c <g_regex_unref@plt>:
   1489c:	add	ip, pc, #0, 12
   148a0:	add	ip, ip, #225280	; 0x37000
   148a4:	ldr	pc, [ip, #1088]!	; 0x440

000148a8 <g_main_loop_run@plt>:
   148a8:	add	ip, pc, #0, 12
   148ac:	add	ip, ip, #225280	; 0x37000
   148b0:	ldr	pc, [ip, #1080]!	; 0x438

000148b4 <close@plt>:
   148b4:	add	ip, pc, #0, 12
   148b8:	add	ip, ip, #225280	; 0x37000
   148bc:	ldr	pc, [ip, #1072]!	; 0x430

000148c0 <g_malloc@plt>:
   148c0:	add	ip, pc, #0, 12
   148c4:	add	ip, ip, #225280	; 0x37000
   148c8:	ldr	pc, [ip, #1064]!	; 0x428

000148cc <g_signal_new@plt>:
   148cc:	add	ip, pc, #0, 12
   148d0:	add	ip, ip, #225280	; 0x37000
   148d4:	ldr	pc, [ip, #1056]!	; 0x420

000148d8 <g_main_loop_new@plt>:
   148d8:	add	ip, pc, #0, 12
   148dc:	add	ip, ip, #225280	; 0x37000
   148e0:	ldr	pc, [ip, #1048]!	; 0x418

000148e4 <g_dbus_proxy_get_object_path@plt>:
   148e4:	add	ip, pc, #0, 12
   148e8:	add	ip, ip, #225280	; 0x37000
   148ec:	ldr	pc, [ip, #1040]!	; 0x410

000148f0 <g_variant_iter_next_value@plt>:
   148f0:	add	ip, pc, #0, 12
   148f4:	add	ip, ip, #225280	; 0x37000
   148f8:	ldr	pc, [ip, #1032]!	; 0x408

000148fc <g_key_file_set_string_list@plt>:
   148fc:	add	ip, pc, #0, 12
   14900:	add	ip, ip, #225280	; 0x37000
   14904:	ldr	pc, [ip, #1024]!	; 0x400

00014908 <g_get_system_config_dirs@plt>:
   14908:	add	ip, pc, #0, 12
   1490c:	add	ip, ip, #225280	; 0x37000
   14910:	ldr	pc, [ip, #1016]!	; 0x3f8

00014914 <abort@plt>:
   14914:	add	ip, pc, #0, 12
   14918:	add	ip, ip, #225280	; 0x37000
   1491c:	ldr	pc, [ip, #1008]!	; 0x3f0

00014920 <g_file_set_contents@plt>:
   14920:	add	ip, pc, #0, 12
   14924:	add	ip, ip, #225280	; 0x37000
   14928:	ldr	pc, [ip, #1000]!	; 0x3e8

0001492c <g_variant_dup_string@plt>:
   1492c:	add	ip, pc, #0, 12
   14930:	add	ip, ip, #225280	; 0x37000
   14934:	ldr	pc, [ip, #992]!	; 0x3e0

00014938 <g_signal_handlers_destroy@plt>:
   14938:	add	ip, pc, #0, 12
   1493c:	add	ip, ip, #225280	; 0x37000
   14940:	ldr	pc, [ip, #984]!	; 0x3d8

00014944 <g_variant_get_int32@plt>:
   14944:	add	ip, pc, #0, 12
   14948:	add	ip, ip, #225280	; 0x37000
   1494c:	ldr	pc, [ip, #976]!	; 0x3d0

00014950 <g_type_interface_add_prerequisite@plt>:
   14950:	add	ip, pc, #0, 12
   14954:	add	ip, ip, #225280	; 0x37000
   14958:	ldr	pc, [ip, #968]!	; 0x3c8

0001495c <XChangeProperty@plt>:
   1495c:	add	ip, pc, #0, 12
   14960:	add	ip, ip, #225280	; 0x37000
   14964:	ldr	pc, [ip, #960]!	; 0x3c0

00014968 <g_value_set_boolean@plt>:
   14968:	add	ip, pc, #0, 12
   1496c:	add	ip, ip, #225280	; 0x37000
   14970:	ldr	pc, [ip, #952]!	; 0x3b8

00014974 <g_boxed_type_register_static@plt>:
   14974:	add	ip, pc, #0, 12
   14978:	add	ip, ip, #225280	; 0x37000
   1497c:	ldr	pc, [ip, #944]!	; 0x3b0

00014980 <g_value_set_string@plt>:
   14980:	add	ip, pc, #0, 12
   14984:	add	ip, ip, #225280	; 0x37000
   14988:	ldr	pc, [ip, #936]!	; 0x3a8

0001498c <gtk_container_add@plt>:
   1498c:	add	ip, pc, #0, 12
   14990:	add	ip, ip, #225280	; 0x37000
   14994:	ldr	pc, [ip, #928]!	; 0x3a0

00014998 <gdk_display_get_default@plt>:
   14998:	add	ip, pc, #0, 12
   1499c:	add	ip, ip, #225280	; 0x37000
   149a0:	ldr	pc, [ip, #920]!	; 0x398

000149a4 <g_value_get_boolean@plt>:
   149a4:	add	ip, pc, #0, 12
   149a8:	add	ip, ip, #225280	; 0x37000
   149ac:	ldr	pc, [ip, #912]!	; 0x390

000149b0 <g_source_set_can_recurse@plt>:
   149b0:	add	ip, pc, #0, 12
   149b4:	add	ip, ip, #225280	; 0x37000
   149b8:	ldr	pc, [ip, #904]!	; 0x388

000149bc <XPending@plt>:
   149bc:	add	ip, pc, #0, 12
   149c0:	add	ip, ip, #225280	; 0x37000
   149c4:	ldr	pc, [ip, #896]!	; 0x380

000149c8 <g_type_instance_get_private@plt>:
   149c8:	add	ip, pc, #0, 12
   149cc:	add	ip, ip, #225280	; 0x37000
   149d0:	ldr	pc, [ip, #888]!	; 0x378

000149d4 <g_key_file_error_quark@plt>:
   149d4:	add	ip, pc, #0, 12
   149d8:	add	ip, ip, #225280	; 0x37000
   149dc:	ldr	pc, [ip, #880]!	; 0x370

000149e0 <g_variant_builder_init@plt>:
   149e0:	add	ip, pc, #0, 12
   149e4:	add	ip, ip, #225280	; 0x37000
   149e8:	ldr	pc, [ip, #872]!	; 0x368

000149ec <g_key_file_get_groups@plt>:
   149ec:	add	ip, pc, #0, 12
   149f0:	add	ip, ip, #225280	; 0x37000
   149f4:	ldr	pc, [ip, #864]!	; 0x360

000149f8 <kill@plt>:
   149f8:	add	ip, pc, #0, 12
   149fc:	add	ip, ip, #225280	; 0x37000
   14a00:	ldr	pc, [ip, #856]!	; 0x358

00014a04 <dup2@plt>:
   14a04:	add	ip, pc, #0, 12
   14a08:	add	ip, ip, #225280	; 0x37000
   14a0c:	ldr	pc, [ip, #848]!	; 0x350

00014a10 <g_find_program_in_path@plt>:
   14a10:	add	ip, pc, #0, 12
   14a14:	add	ip, ip, #225280	; 0x37000
   14a18:	ldr	pc, [ip, #840]!	; 0x348

00014a1c <g_signal_connect_data@plt>:
   14a1c:	add	ip, pc, #0, 12
   14a20:	add	ip, ip, #225280	; 0x37000
   14a24:	ldr	pc, [ip, #832]!	; 0x340

00014a28 <g_once_init_enter@plt>:
   14a28:	add	ip, pc, #0, 12
   14a2c:	add	ip, ip, #225280	; 0x37000
   14a30:	ldr	pc, [ip, #824]!	; 0x338

00014a34 <g_slice_alloc0@plt>:
   14a34:	add	ip, pc, #0, 12
   14a38:	add	ip, ip, #225280	; 0x37000
   14a3c:	ldr	pc, [ip, #816]!	; 0x330

00014a40 <g_source_attach@plt>:
   14a40:	add	ip, pc, #0, 12
   14a44:	add	ip, ip, #225280	; 0x37000
   14a48:	ldr	pc, [ip, #808]!	; 0x328

00014a4c <g_dbus_proxy_get_connection@plt>:
   14a4c:	add	ip, pc, #0, 12
   14a50:	add	ip, ip, #225280	; 0x37000
   14a54:	ldr	pc, [ip, #800]!	; 0x320

00014a58 <g_regex_new@plt>:
   14a58:	add	ip, pc, #0, 12
   14a5c:	add	ip, ip, #225280	; 0x37000
   14a60:	ldr	pc, [ip, #792]!	; 0x318

00014a64 <g_dbus_method_invocation_get_message@plt>:
   14a64:	add	ip, pc, #0, 12
   14a68:	add	ip, ip, #225280	; 0x37000
   14a6c:	ldr	pc, [ip, #784]!	; 0x310

00014a70 <g_array_new@plt>:
   14a70:	add	ip, pc, #0, 12
   14a74:	add	ip, ip, #225280	; 0x37000
   14a78:	ldr	pc, [ip, #776]!	; 0x308

00014a7c <g_main_context_iteration@plt>:
   14a7c:	add	ip, pc, #0, 12
   14a80:	add	ip, ip, #225280	; 0x37000
   14a84:	ldr	pc, [ip, #768]!	; 0x300

00014a88 <XGrabServer@plt>:
   14a88:	add	ip, pc, #0, 12
   14a8c:	add	ip, ip, #225280	; 0x37000
   14a90:	ldr	pc, [ip, #760]!	; 0x2f8

00014a94 <g_hash_table_lookup@plt>:
   14a94:	add	ip, pc, #0, 12
   14a98:	add	ip, ip, #225280	; 0x37000
   14a9c:	ldr	pc, [ip, #752]!	; 0x2f0

00014aa0 <g_regex_replace_literal@plt>:
   14aa0:	add	ip, pc, #0, 12
   14aa4:	add	ip, ip, #225280	; 0x37000
   14aa8:	ldr	pc, [ip, #744]!	; 0x2e8

00014aac <open@plt>:
   14aac:	add	ip, pc, #0, 12
   14ab0:	add	ip, ip, #225280	; 0x37000
   14ab4:	ldr	pc, [ip, #736]!	; 0x2e0

00014ab8 <waitpid@plt>:
   14ab8:	add	ip, pc, #0, 12
   14abc:	add	ip, ip, #225280	; 0x37000
   14ac0:	ldr	pc, [ip, #728]!	; 0x2d8

00014ac4 <g_source_add_poll@plt>:
   14ac4:	add	ip, pc, #0, 12
   14ac8:	add	ip, ip, #225280	; 0x37000
   14acc:	ldr	pc, [ip, #720]!	; 0x2d0

00014ad0 <g_initable_new@plt>:
   14ad0:	add	ip, pc, #0, 12
   14ad4:	add	ip, ip, #225280	; 0x37000
   14ad8:	ldr	pc, [ip, #712]!	; 0x2c8

00014adc <g_dbus_connection_send_message@plt>:
   14adc:	add	ip, pc, #0, 12
   14ae0:	add	ip, ip, #225280	; 0x37000
   14ae4:	ldr	pc, [ip, #704]!	; 0x2c0

00014ae8 <g_intern_static_string@plt>:
   14ae8:	add	ip, pc, #0, 12
   14aec:	add	ip, ip, #225280	; 0x37000
   14af0:	ldr	pc, [ip, #696]!	; 0x2b8

00014af4 <g_type_check_value@plt>:
   14af4:	add	ip, pc, #0, 12
   14af8:	add	ip, ip, #225280	; 0x37000
   14afc:	ldr	pc, [ip, #688]!	; 0x2b0

00014b00 <XSetSelectionOwner@plt>:
   14b00:	add	ip, pc, #0, 12
   14b04:	add	ip, ip, #225280	; 0x37000
   14b08:	ldr	pc, [ip, #680]!	; 0x2a8

00014b0c <g_dbus_connection_send_message_with_reply_sync@plt>:
   14b0c:	add	ip, pc, #0, 12
   14b10:	add	ip, ip, #225280	; 0x37000
   14b14:	ldr	pc, [ip, #672]!	; 0x2a0

00014b18 <g_type_get_qdata@plt>:
   14b18:	add	ip, pc, #0, 12
   14b1c:	add	ip, ip, #225280	; 0x37000
   14b20:	ldr	pc, [ip, #664]!	; 0x298

00014b24 <g_strv_length@plt>:
   14b24:	add	ip, pc, #0, 12
   14b28:	add	ip, ip, #225280	; 0x37000
   14b2c:	ldr	pc, [ip, #656]!	; 0x290

00014b30 <gdk_x11_window_lookup_for_display@plt>:
   14b30:	add	ip, pc, #0, 12
   14b34:	add	ip, ip, #225280	; 0x37000
   14b38:	ldr	pc, [ip, #648]!	; 0x288

00014b3c <g_string_sized_new@plt>:
   14b3c:	add	ip, pc, #0, 12
   14b40:	add	ip, ip, #225280	; 0x37000
   14b44:	ldr	pc, [ip, #640]!	; 0x280

00014b48 <g_option_context_free@plt>:
   14b48:	add	ip, pc, #0, 12
   14b4c:	add	ip, ip, #225280	; 0x37000
   14b50:	ldr	pc, [ip, #632]!	; 0x278

00014b54 <g_dbus_connection_emit_signal@plt>:
   14b54:	add	ip, pc, #0, 12
   14b58:	add	ip, ip, #225280	; 0x37000
   14b5c:	ldr	pc, [ip, #624]!	; 0x270

00014b60 <g_list_free_full@plt>:
   14b60:	add	ip, pc, #0, 12
   14b64:	add	ip, ip, #225280	; 0x37000
   14b68:	ldr	pc, [ip, #616]!	; 0x268

00014b6c <__stack_chk_fail@plt>:
   14b6c:	add	ip, pc, #0, 12
   14b70:	add	ip, ip, #225280	; 0x37000
   14b74:	ldr	pc, [ip, #608]!	; 0x260

00014b78 <g_object_notify_by_pspec@plt>:
   14b78:	add	ip, pc, #0, 12
   14b7c:	add	ip, ip, #225280	; 0x37000
   14b80:	ldr	pc, [ip, #600]!	; 0x258

00014b84 <g_get_user_config_dir@plt>:
   14b84:	add	ip, pc, #0, 12
   14b88:	add	ip, ip, #225280	; 0x37000
   14b8c:	ldr	pc, [ip, #592]!	; 0x250

00014b90 <gdk_x11_window_foreign_new_for_display@plt>:
   14b90:	add	ip, pc, #0, 12
   14b94:	add	ip, ip, #225280	; 0x37000
   14b98:	ldr	pc, [ip, #584]!	; 0x248

00014b9c <g_getenv@plt>:
   14b9c:	add	ip, pc, #0, 12
   14ba0:	add	ip, ip, #225280	; 0x37000
   14ba4:	ldr	pc, [ip, #576]!	; 0x240

00014ba8 <g_str_hash@plt>:
   14ba8:	add	ip, pc, #0, 12
   14bac:	add	ip, ip, #225280	; 0x37000
   14bb0:	ldr	pc, [ip, #568]!	; 0x238

00014bb4 <XkbGetAutoRepeatRate@plt>:
   14bb4:	add	ip, pc, #0, 12
   14bb8:	add	ip, ip, #225280	; 0x37000
   14bbc:	ldr	pc, [ip, #560]!	; 0x230

00014bc0 <XChangePointerControl@plt>:
   14bc0:	add	ip, pc, #0, 12
   14bc4:	add	ip, ip, #225280	; 0x37000
   14bc8:	ldr	pc, [ip, #552]!	; 0x228

00014bcc <g_quark_from_string@plt>:
   14bcc:	add	ip, pc, #0, 12
   14bd0:	add	ip, ip, #225280	; 0x37000
   14bd4:	ldr	pc, [ip, #544]!	; 0x220

00014bd8 <g_free@plt>:
   14bd8:	add	ip, pc, #0, 12
   14bdc:	add	ip, ip, #225280	; 0x37000
   14be0:	ldr	pc, [ip, #536]!	; 0x218

00014be4 <g_slist_remove@plt>:
   14be4:	add	ip, pc, #0, 12
   14be8:	add	ip, ip, #225280	; 0x37000
   14bec:	ldr	pc, [ip, #528]!	; 0x210

00014bf0 <g_task_get_context@plt>:
   14bf0:	add	ip, pc, #0, 12
   14bf4:	add	ip, ip, #225280	; 0x37000
   14bf8:	ldr	pc, [ip, #520]!	; 0x208

00014bfc <g_value_set_int@plt>:
   14bfc:	add	ip, pc, #0, 12
   14c00:	add	ip, ip, #225280	; 0x37000
   14c04:	ldr	pc, [ip, #512]!	; 0x200

00014c08 <g_type_add_instance_private@plt>:
   14c08:	add	ip, pc, #0, 12
   14c0c:	add	ip, ip, #225280	; 0x37000
   14c10:	ldr	pc, [ip, #504]!	; 0x1f8

00014c14 <g_hash_table_unref@plt>:
   14c14:	add	ip, pc, #0, 12
   14c18:	add	ip, ip, #225280	; 0x37000
   14c1c:	ldr	pc, [ip, #496]!	; 0x1f0

00014c20 <g_file_test@plt>:
   14c20:	add	ip, pc, #0, 12
   14c24:	add	ip, ip, #225280	; 0x37000
   14c28:	ldr	pc, [ip, #488]!	; 0x1e8

00014c2c <g_quark_to_string@plt>:
   14c2c:	add	ip, pc, #0, 12
   14c30:	add	ip, ip, #225280	; 0x37000
   14c34:	ldr	pc, [ip, #480]!	; 0x1e0

00014c38 <g_data_input_stream_read_line@plt>:
   14c38:	add	ip, pc, #0, 12
   14c3c:	add	ip, ip, #225280	; 0x37000
   14c40:	ldr	pc, [ip, #472]!	; 0x1d8

00014c44 <XExtendedMaxRequestSize@plt>:
   14c44:	add	ip, pc, #0, 12
   14c48:	add	ip, ip, #225280	; 0x37000
   14c4c:	ldr	pc, [ip, #464]!	; 0x1d0

00014c50 <XSetPointerMapping@plt>:
   14c50:	add	ip, pc, #0, 12
   14c54:	add	ip, ip, #225280	; 0x37000
   14c58:	ldr	pc, [ip, #456]!	; 0x1c8

00014c5c <g_param_spec_boxed@plt>:
   14c5c:	add	ip, pc, #0, 12
   14c60:	add	ip, ip, #225280	; 0x37000
   14c64:	ldr	pc, [ip, #448]!	; 0x1c0

00014c68 <g_dbus_method_invocation_get_connection@plt>:
   14c68:	add	ip, pc, #0, 12
   14c6c:	add	ip, ip, #225280	; 0x37000
   14c70:	ldr	pc, [ip, #440]!	; 0x1b8

00014c74 <g_task_set_task_data@plt>:
   14c74:	add	ip, pc, #0, 12
   14c78:	add	ip, ip, #225280	; 0x37000
   14c7c:	ldr	pc, [ip, #432]!	; 0x1b0

00014c80 <g_file_copy@plt>:
   14c80:	add	ip, pc, #0, 12
   14c84:	add	ip, ip, #225280	; 0x37000
   14c88:	ldr	pc, [ip, #424]!	; 0x1a8

00014c8c <g_file_make_directory_with_parents@plt>:
   14c8c:	add	ip, pc, #0, 12
   14c90:	add	ip, ip, #225280	; 0x37000
   14c94:	ldr	pc, [ip, #416]!	; 0x1a0

00014c98 <g_object_class_install_property@plt>:
   14c98:	add	ip, pc, #0, 12
   14c9c:	add	ip, ip, #225280	; 0x37000
   14ca0:	ldr	pc, [ip, #408]!	; 0x198

00014ca4 <XFree@plt>:
   14ca4:	add	ip, pc, #0, 12
   14ca8:	add	ip, ip, #225280	; 0x37000
   14cac:	ldr	pc, [ip, #400]!	; 0x190

00014cb0 <g_data_input_stream_new@plt>:
   14cb0:	add	ip, pc, #0, 12
   14cb4:	add	ip, ip, #225280	; 0x37000
   14cb8:	ldr	pc, [ip, #392]!	; 0x188

00014cbc <g_variant_get_uint32@plt>:
   14cbc:	add	ip, pc, #0, 12
   14cc0:	add	ip, ip, #225280	; 0x37000
   14cc4:	ldr	pc, [ip, #384]!	; 0x180

00014cc8 <g_task_get_task_data@plt>:
   14cc8:	add	ip, pc, #0, 12
   14ccc:	add	ip, ip, #225280	; 0x37000
   14cd0:	ldr	pc, [ip, #376]!	; 0x178

00014cd4 <g_variant_unref@plt>:
   14cd4:	add	ip, pc, #0, 12
   14cd8:	add	ip, ip, #225280	; 0x37000
   14cdc:	ldr	pc, [ip, #368]!	; 0x170

00014ce0 <g_type_class_add_private@plt>:
   14ce0:	add	ip, pc, #0, 12
   14ce4:	add	ip, ip, #225280	; 0x37000
   14ce8:	ldr	pc, [ip, #360]!	; 0x168

00014cec <g_dbus_connection_send_message_with_reply_finish@plt>:
   14cec:	add	ip, pc, #0, 12
   14cf0:	add	ip, ip, #225280	; 0x37000
   14cf4:	ldr	pc, [ip, #352]!	; 0x160

00014cf8 <g_regex_error_quark@plt>:
   14cf8:	add	ip, pc, #0, 12
   14cfc:	add	ip, ip, #225280	; 0x37000
   14d00:	ldr	pc, [ip, #344]!	; 0x158

00014d04 <g_get_environ@plt>:
   14d04:	add	ip, pc, #0, 12
   14d08:	add	ip, ip, #225280	; 0x37000
   14d0c:	ldr	pc, [ip, #336]!	; 0x150

00014d10 <g_set_application_name@plt>:
   14d10:	add	ip, pc, #0, 12
   14d14:	add	ip, ip, #225280	; 0x37000
   14d18:	ldr	pc, [ip, #328]!	; 0x148

00014d1c <raise@plt>:
   14d1c:	add	ip, pc, #0, 12
   14d20:	add	ip, ip, #225280	; 0x37000
   14d24:	ldr	pc, [ip, #320]!	; 0x140

00014d28 <g_file_monitor_file@plt>:
   14d28:	add	ip, pc, #0, 12
   14d2c:	add	ip, ip, #225280	; 0x37000
   14d30:	ldr	pc, [ip, #312]!	; 0x138

00014d34 <XOpenDisplay@plt>:
   14d34:	add	ip, pc, #0, 12
   14d38:	add	ip, ip, #225280	; 0x37000
   14d3c:	ldr	pc, [ip, #304]!	; 0x130

00014d40 <g_key_file_to_data@plt>:
   14d40:	add	ip, pc, #0, 12
   14d44:	add	ip, ip, #225280	; 0x37000
   14d48:	ldr	pc, [ip, #296]!	; 0x128

00014d4c <g_key_file_get_keys@plt>:
   14d4c:	add	ip, pc, #0, 12
   14d50:	add	ip, ip, #225280	; 0x37000
   14d54:	ldr	pc, [ip, #288]!	; 0x120

00014d58 <g_key_file_get_string@plt>:
   14d58:	add	ip, pc, #0, 12
   14d5c:	add	ip, ip, #225280	; 0x37000
   14d60:	ldr	pc, [ip, #280]!	; 0x118

00014d64 <g_quark_from_static_string@plt>:
   14d64:	add	ip, pc, #0, 12
   14d68:	add	ip, ip, #225280	; 0x37000
   14d6c:	ldr	pc, [ip, #272]!	; 0x110

00014d70 <g_dbus_message_to_gerror@plt>:
   14d70:	add	ip, pc, #0, 12
   14d74:	add	ip, ip, #225280	; 0x37000
   14d78:	ldr	pc, [ip, #264]!	; 0x108

00014d7c <g_dbus_message_new_method_call@plt>:
   14d7c:	add	ip, pc, #0, 12
   14d80:	add	ip, ip, #225280	; 0x37000
   14d84:	ldr	pc, [ip, #256]!	; 0x100

00014d88 <g_source_new@plt>:
   14d88:	add	ip, pc, #0, 12
   14d8c:	add	ip, ip, #225280	; 0x37000
   14d90:	ldr	pc, [ip, #248]!	; 0xf8

00014d94 <g_slice_alloc@plt>:
   14d94:	add	ip, pc, #0, 12
   14d98:	add	ip, ip, #225280	; 0x37000
   14d9c:	ldr	pc, [ip, #240]!	; 0xf0

00014da0 <g_file_monitor_directory@plt>:
   14da0:	add	ip, pc, #0, 12
   14da4:	add	ip, ip, #225280	; 0x37000
   14da8:	ldr	pc, [ip, #232]!	; 0xe8

00014dac <g_clear_error@plt>:
   14dac:	add	ip, pc, #0, 12
   14db0:	add	ip, ip, #225280	; 0x37000
   14db4:	ldr	pc, [ip, #224]!	; 0xe0

00014db8 <gtk_menu_get_type@plt>:
   14db8:	add	ip, pc, #0, 12
   14dbc:	add	ip, ip, #225280	; 0x37000
   14dc0:	ldr	pc, [ip, #216]!	; 0xd8

00014dc4 <g_strconcat@plt>:
   14dc4:	add	ip, pc, #0, 12
   14dc8:	add	ip, ip, #225280	; 0x37000
   14dcc:	ldr	pc, [ip, #208]!	; 0xd0

00014dd0 <g_option_context_add_main_entries@plt>:
   14dd0:	add	ip, pc, #0, 12
   14dd4:	add	ip, ip, #225280	; 0x37000
   14dd8:	ldr	pc, [ip, #200]!	; 0xc8

00014ddc <XNextEvent@plt>:
   14ddc:	add	ip, pc, #0, 12
   14de0:	add	ip, ip, #225280	; 0x37000
   14de4:	ldr	pc, [ip, #192]!	; 0xc0

00014de8 <g_hash_table_remove@plt>:
   14de8:	add	ip, pc, #0, 12
   14dec:	add	ip, ip, #225280	; 0x37000
   14df0:	ldr	pc, [ip, #184]!	; 0xb8

00014df4 <g_key_file_new@plt>:
   14df4:	add	ip, pc, #0, 12
   14df8:	add	ip, ip, #225280	; 0x37000
   14dfc:	ldr	pc, [ip, #176]!	; 0xb0

00014e00 <fputc@plt>:
   14e00:	add	ip, pc, #0, 12
   14e04:	add	ip, ip, #225280	; 0x37000
   14e08:	ldr	pc, [ip, #168]!	; 0xa8

00014e0c <g_string_free@plt>:
   14e0c:	add	ip, pc, #0, 12
   14e10:	add	ip, ip, #225280	; 0x37000
   14e14:	ldr	pc, [ip, #160]!	; 0xa0

00014e18 <g_strv_get_type@plt>:
   14e18:	add	ip, pc, #0, 12
   14e1c:	add	ip, ip, #225280	; 0x37000
   14e20:	ldr	pc, [ip, #152]!	; 0x98

00014e24 <fwrite@plt>:
   14e24:	add	ip, pc, #0, 12
   14e28:	add	ip, ip, #225280	; 0x37000
   14e2c:	ldr	pc, [ip, #144]!	; 0x90

00014e30 <g_task_propagate_pointer@plt>:
   14e30:	add	ip, pc, #0, 12
   14e34:	add	ip, ip, #225280	; 0x37000
   14e38:	ldr	pc, [ip, #136]!	; 0x88

00014e3c <g_array_set_clear_func@plt>:
   14e3c:	add	ip, pc, #0, 12
   14e40:	add	ip, ip, #225280	; 0x37000
   14e44:	ldr	pc, [ip, #128]!	; 0x80

00014e48 <memcpy@plt>:
   14e48:	add	ip, pc, #0, 12
   14e4c:	add	ip, ip, #225280	; 0x37000
   14e50:	ldr	pc, [ip, #120]!	; 0x78

00014e54 <g_realloc_n@plt>:
   14e54:	add	ip, pc, #0, 12
   14e58:	add	ip, ip, #225280	; 0x37000
   14e5c:	ldr	pc, [ip, #112]!	; 0x70

00014e60 <g_key_file_get_integer@plt>:
   14e60:	add	ip, pc, #0, 12
   14e64:	add	ip, ip, #225280	; 0x37000
   14e68:	ldr	pc, [ip, #104]!	; 0x68

00014e6c <malloc@plt>:
   14e6c:	add	ip, pc, #0, 12
   14e70:	add	ip, ip, #225280	; 0x37000
   14e74:	ldr	pc, [ip, #96]!	; 0x60

00014e78 <g_key_file_set_value@plt>:
   14e78:	add	ip, pc, #0, 12
   14e7c:	add	ip, ip, #225280	; 0x37000
   14e80:	ldr	pc, [ip, #88]!	; 0x58

00014e84 <gtk_widget_show@plt>:
   14e84:	add	ip, pc, #0, 12
   14e88:	add	ip, ip, #225280	; 0x37000
   14e8c:	ldr	pc, [ip, #80]!	; 0x50

00014e90 <g_object_unref@plt>:
   14e90:	add	ip, pc, #0, 12
   14e94:	add	ip, ip, #225280	; 0x37000
   14e98:	ldr	pc, [ip, #72]!	; 0x48

00014e9c <strlen@plt>:
   14e9c:	add	ip, pc, #0, 12
   14ea0:	add	ip, ip, #225280	; 0x37000
   14ea4:	ldr	pc, [ip, #64]!	; 0x40

00014ea8 <g_array_unref@plt>:
   14ea8:	add	ip, pc, #0, 12
   14eac:	add	ip, ip, #225280	; 0x37000
   14eb0:	ldr	pc, [ip, #56]!	; 0x38

00014eb4 <gtk_menu_item_get_type@plt>:
   14eb4:	add	ip, pc, #0, 12
   14eb8:	add	ip, ip, #225280	; 0x37000
   14ebc:	ldr	pc, [ip, #48]!	; 0x30

00014ec0 <g_cclosure_marshal_VOID__VOID@plt>:
   14ec0:	add	ip, pc, #0, 12
   14ec4:	add	ip, ip, #225280	; 0x37000
   14ec8:	ldr	pc, [ip, #40]!	; 0x28

00014ecc <gtk_menu_item_set_label@plt>:
   14ecc:	add	ip, pc, #0, 12
   14ed0:	add	ip, ip, #225280	; 0x37000
   14ed4:	ldr	pc, [ip, #32]!

00014ed8 <g_once_init_leave@plt>:
   14ed8:	add	ip, pc, #0, 12
   14edc:	add	ip, ip, #225280	; 0x37000
   14ee0:	ldr	pc, [ip, #24]!

00014ee4 <XChangeKeyboardControl@plt>:
   14ee4:	add	ip, pc, #0, 12
   14ee8:	add	ip, ip, #225280	; 0x37000
   14eec:	ldr	pc, [ip, #16]!

00014ef0 <write@plt>:
   14ef0:	add	ip, pc, #0, 12
   14ef4:	add	ip, ip, #225280	; 0x37000
   14ef8:	ldr	pc, [ip, #8]!

00014efc <XDestroyWindow@plt>:
   14efc:	add	ip, pc, #0, 12
   14f00:	add	ip, ip, #225280	; 0x37000
   14f04:	ldr	pc, [ip, #0]!

00014f08 <g_slist_foreach@plt>:
   14f08:	add	ip, pc, #0, 12
   14f0c:	add	ip, ip, #221184	; 0x36000
   14f10:	ldr	pc, [ip, #4088]!	; 0xff8

00014f14 <g_malloc0_n@plt>:
   14f14:	add	ip, pc, #0, 12
   14f18:	add	ip, ip, #221184	; 0x36000
   14f1c:	ldr	pc, [ip, #4080]!	; 0xff0

00014f20 <XkbSetAutoRepeatRate@plt>:
   14f20:	add	ip, pc, #0, 12
   14f24:	add	ip, ip, #221184	; 0x36000
   14f28:	ldr	pc, [ip, #4072]!	; 0xfe8

00014f2c <g_slist_find_custom@plt>:
   14f2c:	add	ip, pc, #0, 12
   14f30:	add	ip, ip, #221184	; 0x36000
   14f34:	ldr	pc, [ip, #4064]!	; 0xfe0

00014f38 <g_param_spec_int@plt>:
   14f38:	add	ip, pc, #0, 12
   14f3c:	add	ip, ip, #221184	; 0x36000
   14f40:	ldr	pc, [ip, #4056]!	; 0xfd8

00014f44 <g_type_register_fundamental@plt>:
   14f44:	add	ip, pc, #0, 12
   14f48:	add	ip, ip, #221184	; 0x36000
   14f4c:	ldr	pc, [ip, #4048]!	; 0xfd0

00014f50 <g_key_file_unref@plt>:
   14f50:	add	ip, pc, #0, 12
   14f54:	add	ip, ip, #221184	; 0x36000
   14f58:	ldr	pc, [ip, #4040]!	; 0xfc8

00014f5c <g_spawn_command_line_async@plt>:
   14f5c:	add	ip, pc, #0, 12
   14f60:	add	ip, ip, #221184	; 0x36000
   14f64:	ldr	pc, [ip, #4032]!	; 0xfc0

00014f68 <g_realloc@plt>:
   14f68:	add	ip, pc, #0, 12
   14f6c:	add	ip, ip, #221184	; 0x36000
   14f70:	ldr	pc, [ip, #4024]!	; 0xfb8

00014f74 <g_hash_table_contains@plt>:
   14f74:	add	ip, pc, #0, 12
   14f78:	add	ip, ip, #221184	; 0x36000
   14f7c:	ldr	pc, [ip, #4016]!	; 0xfb0

00014f80 <XMaxRequestSize@plt>:
   14f80:	add	ip, pc, #0, 12
   14f84:	add	ip, ip, #221184	; 0x36000
   14f88:	ldr	pc, [ip, #4008]!	; 0xfa8

00014f8c <g_type_class_peek_parent@plt>:
   14f8c:	add	ip, pc, #0, 12
   14f90:	add	ip, ip, #221184	; 0x36000
   14f94:	ldr	pc, [ip, #4000]!	; 0xfa0

00014f98 <g_key_file_get_integer_list@plt>:
   14f98:	add	ip, pc, #0, 12
   14f9c:	add	ip, ip, #221184	; 0x36000
   14fa0:	ldr	pc, [ip, #3992]!	; 0xf98

00014fa4 <g_file_new_for_path@plt>:
   14fa4:	add	ip, pc, #0, 12
   14fa8:	add	ip, ip, #221184	; 0x36000
   14fac:	ldr	pc, [ip, #3984]!	; 0xf90

00014fb0 <g_file_get_parent@plt>:
   14fb0:	add	ip, pc, #0, 12
   14fb4:	add	ip, ip, #221184	; 0x36000
   14fb8:	ldr	pc, [ip, #3976]!	; 0xf88

00014fbc <g_malloc0@plt>:
   14fbc:	add	ip, pc, #0, 12
   14fc0:	add	ip, ip, #221184	; 0x36000
   14fc4:	ldr	pc, [ip, #3968]!	; 0xf80

00014fc8 <g_dgettext@plt>:
   14fc8:	add	ip, pc, #0, 12
   14fcc:	add	ip, ip, #221184	; 0x36000
   14fd0:	ldr	pc, [ip, #3960]!	; 0xf78

00014fd4 <strcmp@plt>:
   14fd4:	add	ip, pc, #0, 12
   14fd8:	add	ip, ip, #221184	; 0x36000
   14fdc:	ldr	pc, [ip, #3952]!	; 0xf70

00014fe0 <g_spawn_async_with_pipes@plt>:
   14fe0:	add	ip, pc, #0, 12
   14fe4:	add	ip, ip, #221184	; 0x36000
   14fe8:	ldr	pc, [ip, #3944]!	; 0xf68

00014fec <g_option_context_set_help_enabled@plt>:
   14fec:	add	ip, pc, #0, 12
   14ff0:	add	ip, ip, #221184	; 0x36000
   14ff4:	ldr	pc, [ip, #3936]!	; 0xf60

00014ff8 <g_str_has_suffix@plt>:
   14ff8:	add	ip, pc, #0, 12
   14ffc:	add	ip, ip, #221184	; 0x36000
   15000:	ldr	pc, [ip, #3928]!	; 0xf58

00015004 <gtk_init@plt>:
   15004:	add	ip, pc, #0, 12
   15008:	add	ip, ip, #221184	; 0x36000
   1500c:	ldr	pc, [ip, #3920]!	; 0xf50

00015010 <g_list_nth_data@plt>:
   15010:	add	ip, pc, #0, 12
   15014:	add	ip, ip, #221184	; 0x36000
   15018:	ldr	pc, [ip, #3912]!	; 0xf48

0001501c <g_value_init@plt>:
   1501c:	add	ip, pc, #0, 12
   15020:	add	ip, ip, #221184	; 0x36000
   15024:	ldr	pc, [ip, #3904]!	; 0xf40

00015028 <g_type_set_qdata@plt>:
   15028:	add	ip, pc, #0, 12
   1502c:	add	ip, ip, #221184	; 0x36000
   15030:	ldr	pc, [ip, #3896]!	; 0xf38

00015034 <g_regex_escape_string@plt>:
   15034:	add	ip, pc, #0, 12
   15038:	add	ip, ip, #221184	; 0x36000
   1503c:	ldr	pc, [ip, #3888]!	; 0xf30

00015040 <g_file_error_quark@plt>:
   15040:	add	ip, pc, #0, 12
   15044:	add	ip, ip, #221184	; 0x36000
   15048:	ldr	pc, [ip, #3880]!	; 0xf28

0001504c <g_task_new@plt>:
   1504c:	add	ip, pc, #0, 12
   15050:	add	ip, ip, #221184	; 0x36000
   15054:	ldr	pc, [ip, #3872]!	; 0xf20

00015058 <g_object_ref_sink@plt>:
   15058:	add	ip, pc, #0, 12
   1505c:	add	ip, ip, #221184	; 0x36000
   15060:	ldr	pc, [ip, #3864]!	; 0xf18

00015064 <g_string_append@plt>:
   15064:	add	ip, pc, #0, 12
   15068:	add	ip, ip, #221184	; 0x36000
   1506c:	ldr	pc, [ip, #3856]!	; 0xf10

00015070 <XGetWindowAttributes@plt>:
   15070:	add	ip, pc, #0, 12
   15074:	add	ip, ip, #221184	; 0x36000
   15078:	ldr	pc, [ip, #3848]!	; 0xf08

0001507c <g_file_info_get_name@plt>:
   1507c:	add	ip, pc, #0, 12
   15080:	add	ip, ip, #221184	; 0x36000
   15084:	ldr	pc, [ip, #3840]!	; 0xf00

00015088 <g_string_erase@plt>:
   15088:	add	ip, pc, #0, 12
   1508c:	add	ip, ip, #221184	; 0x36000
   15090:	ldr	pc, [ip, #3832]!	; 0xef8

00015094 <__sprintf_chk@plt>:
   15094:	add	ip, pc, #0, 12
   15098:	add	ip, ip, #221184	; 0x36000
   1509c:	ldr	pc, [ip, #3824]!	; 0xef0

000150a0 <g_file_create@plt>:
   150a0:	add	ip, pc, #0, 12
   150a4:	add	ip, ip, #221184	; 0x36000
   150a8:	ldr	pc, [ip, #3816]!	; 0xee8

000150ac <g_slice_free1@plt>:
   150ac:	add	ip, pc, #0, 12
   150b0:	add	ip, ip, #221184	; 0x36000
   150b4:	ldr	pc, [ip, #3808]!	; 0xee0

000150b8 <g_value_unset@plt>:
   150b8:	add	ip, pc, #0, 12
   150bc:	add	ip, ip, #221184	; 0x36000
   150c0:	ldr	pc, [ip, #3800]!	; 0xed8

000150c4 <g_string_append_printf@plt>:
   150c4:	add	ip, pc, #0, 12
   150c8:	add	ip, ip, #221184	; 0x36000
   150cc:	ldr	pc, [ip, #3792]!	; 0xed0

000150d0 <g_value_get_boxed@plt>:
   150d0:	add	ip, pc, #0, 12
   150d4:	add	ip, ip, #221184	; 0x36000
   150d8:	ldr	pc, [ip, #3784]!	; 0xec8

000150dc <fputs@plt>:
   150dc:	add	ip, pc, #0, 12
   150e0:	add	ip, ip, #221184	; 0x36000
   150e4:	ldr	pc, [ip, #3776]!	; 0xec0

000150e8 <__libc_start_main@plt>:
   150e8:	add	ip, pc, #0, 12
   150ec:	add	ip, ip, #221184	; 0x36000
   150f0:	ldr	pc, [ip, #3768]!	; 0xeb8

000150f4 <g_file_enumerate_children@plt>:
   150f4:	add	ip, pc, #0, 12
   150f8:	add	ip, ip, #221184	; 0x36000
   150fc:	ldr	pc, [ip, #3760]!	; 0xeb0

00015100 <g_source_destroy@plt>:
   15100:	add	ip, pc, #0, 12
   15104:	add	ip, ip, #221184	; 0x36000
   15108:	ldr	pc, [ip, #3752]!	; 0xea8

0001510c <g_main_loop_unref@plt>:
   1510c:	add	ip, pc, #0, 12
   15110:	add	ip, ip, #221184	; 0x36000
   15114:	ldr	pc, [ip, #3744]!	; 0xea0

00015118 <__gmon_start__@plt>:
   15118:	add	ip, pc, #0, 12
   1511c:	add	ip, ip, #221184	; 0x36000
   15120:	ldr	pc, [ip, #3736]!	; 0xe98

00015124 <XGetSelectionOwner@plt>:
   15124:	add	ip, pc, #0, 12
   15128:	add	ip, ip, #221184	; 0x36000
   1512c:	ldr	pc, [ip, #3728]!	; 0xe90

00015130 <g_type_fundamental_next@plt>:
   15130:	add	ip, pc, #0, 12
   15134:	add	ip, ip, #221184	; 0x36000
   15138:	ldr	pc, [ip, #3720]!	; 0xe88

0001513c <g_child_watch_add_full@plt>:
   1513c:	add	ip, pc, #0, 12
   15140:	add	ip, ip, #221184	; 0x36000
   15144:	ldr	pc, [ip, #3712]!	; 0xe80

00015148 <XCloseDisplay@plt>:
   15148:	add	ip, pc, #0, 12
   1514c:	add	ip, ip, #221184	; 0x36000
   15150:	ldr	pc, [ip, #3704]!	; 0xe78

00015154 <XSync@plt>:
   15154:	add	ip, pc, #0, 12
   15158:	add	ip, ip, #221184	; 0x36000
   1515c:	ldr	pc, [ip, #3696]!	; 0xe70

00015160 <gdk_x11_display_get_xdisplay@plt>:
   15160:	add	ip, pc, #0, 12
   15164:	add	ip, ip, #221184	; 0x36000
   15168:	ldr	pc, [ip, #3688]!	; 0xe68

0001516c <g_signal_emit_by_name@plt>:
   1516c:	add	ip, pc, #0, 12
   15170:	add	ip, ip, #221184	; 0x36000
   15174:	ldr	pc, [ip, #3680]!	; 0xe60

00015178 <g_random_int@plt>:
   15178:	add	ip, pc, #0, 12
   1517c:	add	ip, ip, #221184	; 0x36000
   15180:	ldr	pc, [ip, #3672]!	; 0xe58

00015184 <g_dbus_connection_send_message_with_reply@plt>:
   15184:	add	ip, pc, #0, 12
   15188:	add	ip, ip, #221184	; 0x36000
   1518c:	ldr	pc, [ip, #3664]!	; 0xe50

00015190 <g_signal_connect_object@plt>:
   15190:	add	ip, pc, #0, 12
   15194:	add	ip, ip, #221184	; 0x36000
   15198:	ldr	pc, [ip, #3656]!	; 0xe48

0001519c <g_source_remove@plt>:
   1519c:	add	ip, pc, #0, 12
   151a0:	add	ip, ip, #221184	; 0x36000
   151a4:	ldr	pc, [ip, #3648]!	; 0xe40

000151a8 <g_type_create_instance@plt>:
   151a8:	add	ip, pc, #0, 12
   151ac:	add	ip, ip, #221184	; 0x36000
   151b0:	ldr	pc, [ip, #3640]!	; 0xe38

000151b4 <g_dbus_proxy_get_type@plt>:
   151b4:	add	ip, pc, #0, 12
   151b8:	add	ip, ip, #221184	; 0x36000
   151bc:	ldr	pc, [ip, #3632]!	; 0xe30

000151c0 <g_slist_free@plt>:
   151c0:	add	ip, pc, #0, 12
   151c4:	add	ip, ip, #221184	; 0x36000
   151c8:	ldr	pc, [ip, #3624]!	; 0xe28

000151cc <g_strcmp0@plt>:
   151cc:	add	ip, pc, #0, 12
   151d0:	add	ip, ip, #221184	; 0x36000
   151d4:	ldr	pc, [ip, #3616]!	; 0xe20

Disassembly of section .text:

000151d8 <.text>:
   151d8:	mov	r3, r1
   151dc:	mov	r1, r0
   151e0:	mov	r0, r3
   151e4:	b	15380 <g_strcmp0@plt+0x1b4>
   151e8:	mov	fp, #0
   151ec:	mov	lr, #0
   151f0:	pop	{r1}		; (ldr r1, [sp], #4)
   151f4:	mov	r2, sp
   151f8:	push	{r2}		; (str r2, [sp, #-4]!)
   151fc:	push	{r0}		; (str r0, [sp, #-4]!)
   15200:	ldr	ip, [pc, #16]	; 15218 <g_strcmp0@plt+0x4c>
   15204:	push	{ip}		; (str ip, [sp, #-4]!)
   15208:	ldr	r0, [pc, #12]	; 1521c <g_strcmp0@plt+0x50>
   1520c:	ldr	r3, [pc, #12]	; 15220 <g_strcmp0@plt+0x54>
   15210:	bl	150e8 <__libc_start_main@plt>
   15214:	bl	14914 <abort@plt>
   15218:	andeq	r4, r3, r8, ror r4
   1521c:	ldrdeq	r5, [r1], -r8
   15220:	andeq	r4, r3, r8, lsl r4
   15224:	ldr	r3, [pc, #20]	; 15240 <g_strcmp0@plt+0x74>
   15228:	ldr	r2, [pc, #20]	; 15244 <g_strcmp0@plt+0x78>
   1522c:	add	r3, pc, r3
   15230:	ldr	r2, [r3, r2]
   15234:	cmp	r2, #0
   15238:	bxeq	lr
   1523c:	b	15118 <__gmon_start__@plt>
   15240:	andeq	r6, r3, r8, lsl #18
   15244:			; <UNDEFINED> instruction: 0x000004bc
   15248:	ldr	r0, [pc, #24]	; 15268 <g_strcmp0@plt+0x9c>
   1524c:	ldr	r3, [pc, #24]	; 1526c <g_strcmp0@plt+0xa0>
   15250:	cmp	r3, r0
   15254:	bxeq	lr
   15258:	ldr	r3, [pc, #16]	; 15270 <g_strcmp0@plt+0xa4>
   1525c:	cmp	r3, #0
   15260:	bxeq	lr
   15264:	bx	r3
   15268:	andeq	ip, r4, r0, lsr #32
   1526c:	andeq	ip, r4, r0, lsr #32
   15270:	andeq	r0, r0, r0
   15274:	ldr	r0, [pc, #36]	; 152a0 <g_strcmp0@plt+0xd4>
   15278:	ldr	r1, [pc, #36]	; 152a4 <g_strcmp0@plt+0xd8>
   1527c:	sub	r1, r1, r0
   15280:	asr	r1, r1, #2
   15284:	add	r1, r1, r1, lsr #31
   15288:	asrs	r1, r1, #1
   1528c:	bxeq	lr
   15290:	ldr	r3, [pc, #16]	; 152a8 <g_strcmp0@plt+0xdc>
   15294:	cmp	r3, #0
   15298:	bxeq	lr
   1529c:	bx	r3
   152a0:	andeq	ip, r4, r0, lsr #32
   152a4:	andeq	ip, r4, r0, lsr #32
   152a8:	andeq	r0, r0, r0
   152ac:	push	{r4, lr}
   152b0:	ldr	r4, [pc, #24]	; 152d0 <g_strcmp0@plt+0x104>
   152b4:	ldrb	r3, [r4]
   152b8:	cmp	r3, #0
   152bc:	popne	{r4, pc}
   152c0:	bl	15248 <g_strcmp0@plt+0x7c>
   152c4:	mov	r3, #1
   152c8:	strb	r3, [r4]
   152cc:	pop	{r4, pc}
   152d0:	andeq	ip, r4, ip, lsr #32
   152d4:	b	15274 <g_strcmp0@plt+0xa8>
   152d8:	bx	lr
   152dc:	bx	lr
   152e0:	ldr	r3, [pc, #8]	; 152f0 <g_strcmp0@plt+0x124>
   152e4:	ldr	r3, [r3]
   152e8:	ldr	r3, [r3, #24]
   152ec:	bx	r3
   152f0:	andeq	ip, r4, r0, lsr r0
   152f4:	ldr	r2, [pc, #8]	; 15304 <g_strcmp0@plt+0x138>
   152f8:	mov	r1, #16
   152fc:	mov	r0, #0
   15300:	b	14668 <g_log@plt>
   15304:	andeq	r4, r3, r0, ror r5
   15308:	ldr	r2, [pc, #8]	; 15318 <g_strcmp0@plt+0x14c>
   1530c:	mov	r1, #16
   15310:	mov	r0, #0
   15314:	b	14668 <g_log@plt>
   15318:	muleq	r3, r8, r5
   1531c:	b	2064c <g_strcmp0@plt+0xb480>
   15320:	b	20504 <g_strcmp0@plt+0xb338>
   15324:	push	{r4, r5, r6, lr}
   15328:	mov	r6, r0
   1532c:	bl	14f8c <g_type_class_peek_parent@plt>
   15330:	ldr	r4, [pc, #52]	; 1536c <g_strcmp0@plt+0x1a0>
   15334:	ldr	r3, [pc, #52]	; 15370 <g_strcmp0@plt+0x1a4>
   15338:	ldr	r5, [pc, #52]	; 15374 <g_strcmp0@plt+0x1a8>
   1533c:	str	r3, [r6, #24]
   15340:	str	r0, [r4]
   15344:	mov	r0, r5
   15348:	bl	147e8 <g_strdup@plt>
   1534c:	str	r0, [r4, #4]
   15350:	mov	r0, r5
   15354:	bl	147e8 <g_strdup@plt>
   15358:	str	r0, [r4, #8]
   1535c:	ldr	r0, [pc, #20]	; 15378 <g_strcmp0@plt+0x1ac>
   15360:	bl	147e8 <g_strdup@plt>
   15364:	str	r0, [r4, #12]
   15368:	pop	{r4, r5, r6, pc}
   1536c:	andeq	ip, r4, r0, lsr r0
   15370:	andeq	r5, r1, r0, ror #5
   15374:	andeq	r4, r3, r0, asr #11
   15378:	andeq	sl, r3, ip, ror #18
   1537c:	bx	lr
   15380:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15384:	sub	sp, sp, #52	; 0x34
   15388:	ldr	r9, [pc, #3996]	; 1632c <g_strcmp0@plt+0x1160>
   1538c:	mov	r5, #0
   15390:	str	r0, [sp, #36]	; 0x24
   15394:	ldr	r3, [r9]
   15398:	ldr	r0, [pc, #3984]	; 16330 <g_strcmp0@plt+0x1164>
   1539c:	str	r3, [sp, #44]	; 0x2c
   153a0:	str	r1, [sp, #32]
   153a4:	str	r5, [sp, #40]	; 0x28
   153a8:	bl	147b8 <textdomain@plt>
   153ac:	ldr	r1, [pc, #3968]	; 16334 <g_strcmp0@plt+0x1168>
   153b0:	ldr	r0, [pc, #3960]	; 16330 <g_strcmp0@plt+0x1164>
   153b4:	bl	145d8 <bind_textdomain_codeset@plt>
   153b8:	ldr	r0, [pc, #3960]	; 16338 <g_strcmp0@plt+0x116c>
   153bc:	bl	14620 <g_option_context_new@plt>
   153c0:	mov	r1, #1
   153c4:	mov	r4, r0
   153c8:	bl	14fec <g_option_context_set_help_enabled@plt>
   153cc:	mov	r2, r5
   153d0:	mov	r0, r4
   153d4:	ldr	r1, [pc, #3936]	; 1633c <g_strcmp0@plt+0x1170>
   153d8:	bl	14dd0 <g_option_context_add_main_entries@plt>
   153dc:	mov	r0, r4
   153e0:	add	r3, sp, #40	; 0x28
   153e4:	add	r2, sp, #36	; 0x24
   153e8:	add	r1, sp, #32
   153ec:	bl	14410 <g_option_context_parse@plt>
   153f0:	ldr	r5, [sp, #40]	; 0x28
   153f4:	cmp	r5, #0
   153f8:	beq	1546c <g_strcmp0@plt+0x2a0>
   153fc:	cmp	r4, #0
   15400:	beq	16ce4 <g_strcmp0@plt+0x1b18>
   15404:	mov	r0, r4
   15408:	bl	14b48 <g_option_context_free@plt>
   1540c:	ldr	r3, [sp, #40]	; 0x28
   15410:	ldr	r4, [r3]
   15414:	bl	14734 <g_option_error_quark@plt>
   15418:	cmp	r4, r0
   1541c:	beq	16cf4 <g_strcmp0@plt+0x1b28>
   15420:	ldr	r4, [sp, #40]	; 0x28
   15424:	ldr	r0, [r4]
   15428:	bl	14c2c <g_quark_to_string@plt>
   1542c:	ldr	r3, [r4, #4]
   15430:	ldr	ip, [pc, #3848]	; 16340 <g_strcmp0@plt+0x1174>
   15434:	str	r3, [sp, #12]
   15438:	ldr	r2, [pc, #3844]	; 16344 <g_strcmp0@plt+0x1178>
   1543c:	ldr	r3, [pc, #3844]	; 16348 <g_strcmp0@plt+0x117c>
   15440:	str	r0, [sp, #8]
   15444:	ldr	r0, [r4, #8]
   15448:	mov	r1, #8
   1544c:	str	ip, [sp]
   15450:	str	r0, [sp, #4]
   15454:	mov	r0, #0
   15458:	bl	14668 <g_log@plt>
   1545c:	add	r0, sp, #40	; 0x28
   15460:	bl	14dac <g_clear_error@plt>
   15464:	mvn	r0, #0
   15468:	b	154c8 <g_strcmp0@plt+0x2fc>
   1546c:	cmp	r4, #0
   15470:	beq	154e0 <g_strcmp0@plt+0x314>
   15474:	mov	r0, r4
   15478:	bl	14b48 <g_option_context_free@plt>
   1547c:	ldr	r4, [sp, #40]	; 0x28
   15480:	cmp	r4, #0
   15484:	beq	154e0 <g_strcmp0@plt+0x314>
   15488:	ldr	r0, [r4]
   1548c:	bl	14c2c <g_quark_to_string@plt>
   15490:	ldr	r3, [r4, #4]
   15494:	ldr	ip, [pc, #3760]	; 1634c <g_strcmp0@plt+0x1180>
   15498:	str	r3, [sp, #12]
   1549c:	ldr	r2, [pc, #3756]	; 16350 <g_strcmp0@plt+0x1184>
   154a0:	ldr	r3, [pc, #3744]	; 16348 <g_strcmp0@plt+0x117c>
   154a4:	mov	r1, #8
   154a8:	str	r0, [sp, #8]
   154ac:	ldr	lr, [r4, #8]
   154b0:	mov	r0, r5
   154b4:	stm	sp, {ip, lr}
   154b8:	bl	14668 <g_log@plt>
   154bc:	add	r0, sp, #40	; 0x28
   154c0:	bl	14dac <g_clear_error@plt>
   154c4:	mvn	r0, #0
   154c8:	ldr	r2, [sp, #44]	; 0x2c
   154cc:	ldr	r3, [r9]
   154d0:	cmp	r2, r3
   154d4:	bne	16fd8 <g_strcmp0@plt+0x1e0c>
   154d8:	add	sp, sp, #52	; 0x34
   154dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154e0:	ldr	r4, [pc, #3692]	; 16354 <g_strcmp0@plt+0x1188>
   154e4:	ldr	r2, [pc, #3692]	; 16358 <g_strcmp0@plt+0x118c>
   154e8:	mov	r1, #32
   154ec:	ldr	r3, [r4, #4]
   154f0:	mov	r0, #0
   154f4:	bl	14668 <g_log@plt>
   154f8:	mov	r0, #0
   154fc:	ldr	r3, [r4, #8]
   15500:	ldr	r2, [pc, #3668]	; 1635c <g_strcmp0@plt+0x1190>
   15504:	mov	r1, #32
   15508:	bl	14668 <g_log@plt>
   1550c:	ldr	r0, [r4, #4]
   15510:	cmp	r0, #0
   15514:	beq	16ab8 <g_strcmp0@plt+0x18ec>
   15518:	ldr	r0, [r4, #8]
   1551c:	cmp	r0, #0
   15520:	beq	16ae8 <g_strcmp0@plt+0x191c>
   15524:	ldr	r0, [r4, #4]
   15528:	bl	147e8 <g_strdup@plt>
   1552c:	ldr	r5, [pc, #3628]	; 16360 <g_strcmp0@plt+0x1194>
   15530:	mov	r6, r0
   15534:	ldr	r0, [r5]
   15538:	bl	14bd8 <g_free@plt>
   1553c:	add	r1, sp, #36	; 0x24
   15540:	add	r0, sp, #32
   15544:	str	r6, [r5]
   15548:	bl	15004 <gtk_init@plt>
   1554c:	bl	14740 <g_get_user_cache_dir@plt>
   15550:	mov	r3, #0
   15554:	ldr	r2, [r4, #4]
   15558:	ldr	r1, [pc, #3536]	; 16330 <g_strcmp0@plt+0x1164>
   1555c:	bl	146c8 <g_build_filename@plt>
   15560:	mov	r8, r0
   15564:	bl	14fa4 <g_file_new_for_path@plt>
   15568:	mov	r2, #0
   1556c:	ldr	r1, [pc, #3568]	; 16364 <g_strcmp0@plt+0x1198>
   15570:	mov	r5, r0
   15574:	mov	r0, r8
   15578:	bl	146c8 <g_build_filename@plt>
   1557c:	mov	r3, r8
   15580:	ldr	r2, [pc, #3552]	; 16368 <g_strcmp0@plt+0x119c>
   15584:	mov	r1, #32
   15588:	mov	r6, r0
   1558c:	mov	r0, #0
   15590:	bl	14668 <g_log@plt>
   15594:	mov	r3, r6
   15598:	ldr	r2, [pc, #3532]	; 1636c <g_strcmp0@plt+0x11a0>
   1559c:	mov	r1, #32
   155a0:	mov	r0, #0
   155a4:	bl	14668 <g_log@plt>
   155a8:	mov	r0, r5
   155ac:	mov	r1, #0
   155b0:	bl	147f4 <g_file_query_exists@plt>
   155b4:	subs	r7, r0, #0
   155b8:	bne	15648 <g_strcmp0@plt+0x47c>
   155bc:	add	r2, sp, #40	; 0x28
   155c0:	mov	r1, r7
   155c4:	mov	r0, r5
   155c8:	bl	14c8c <g_file_make_directory_with_parents@plt>
   155cc:	ldr	sl, [sp, #40]	; 0x28
   155d0:	cmp	sl, #0
   155d4:	beq	15648 <g_strcmp0@plt+0x47c>
   155d8:	ldr	r3, [sl, #8]
   155dc:	mov	r0, r7
   155e0:	ldr	r2, [pc, #3464]	; 16370 <g_strcmp0@plt+0x11a4>
   155e4:	mov	r1, #32
   155e8:	str	r7, [sp, #40]	; 0x28
   155ec:	bl	14668 <g_log@plt>
   155f0:	mov	r0, sl
   155f4:	bl	1453c <g_error_free@plt>
   155f8:	ldr	r3, [sp, #40]	; 0x28
   155fc:	cmp	r3, #0
   15600:	beq	15648 <g_strcmp0@plt+0x47c>
   15604:	mov	r0, r6
   15608:	bl	14bd8 <g_free@plt>
   1560c:	cmp	r5, #0
   15610:	beq	1561c <g_strcmp0@plt+0x450>
   15614:	mov	r0, r5
   15618:	bl	14e90 <g_object_unref@plt>
   1561c:	mov	r0, r8
   15620:	bl	14bd8 <g_free@plt>
   15624:	ldr	r4, [sp, #40]	; 0x28
   15628:	ldr	r0, [r4]
   1562c:	bl	14c2c <g_quark_to_string@plt>
   15630:	ldr	r3, [r4, #4]
   15634:	ldr	ip, [pc, #3384]	; 16374 <g_strcmp0@plt+0x11a8>
   15638:	str	r3, [sp, #12]
   1563c:	ldr	r2, [pc, #3340]	; 16350 <g_strcmp0@plt+0x1184>
   15640:	ldr	r3, [pc, #3328]	; 16348 <g_strcmp0@plt+0x117c>
   15644:	b	15440 <g_strcmp0@plt+0x274>
   15648:	mov	r2, #384	; 0x180
   1564c:	ldr	r1, [pc, #3364]	; 16378 <g_strcmp0@plt+0x11ac>
   15650:	mov	r0, r6
   15654:	bl	14aac <open@plt>
   15658:	mov	r1, #1
   1565c:	mov	r7, r0
   15660:	bl	14a04 <dup2@plt>
   15664:	mov	r1, #2
   15668:	mov	r0, r7
   1566c:	bl	14a04 <dup2@plt>
   15670:	mov	r0, r7
   15674:	bl	148b4 <close@plt>
   15678:	bl	30cd8 <g_strcmp0@plt+0x1bb0c>
   1567c:	subs	fp, r0, #0
   15680:	moveq	r7, fp
   15684:	beq	15690 <g_strcmp0@plt+0x4c4>
   15688:	bl	14404 <g_object_ref@plt>
   1568c:	mov	r7, r0
   15690:	ldr	r0, [r4, #16]
   15694:	cmp	r0, #0
   15698:	beq	156a0 <g_strcmp0@plt+0x4d4>
   1569c:	bl	14e90 <g_object_unref@plt>
   156a0:	ldrd	r0, [r4, #4]
   156a4:	str	r7, [r4, #16]
   156a8:	bl	282a4 <g_strcmp0@plt+0x130d8>
   156ac:	mov	sl, r0
   156b0:	bl	2782c <g_strcmp0@plt+0x12660>
   156b4:	ldr	r1, [pc, #3264]	; 1637c <g_strcmp0@plt+0x11b0>
   156b8:	ldr	r0, [r4, #12]
   156bc:	bl	151cc <g_strcmp0@plt>
   156c0:	ldr	r1, [r4, #8]
   156c4:	cmp	r0, #0
   156c8:	ldr	r0, [r4, #4]
   156cc:	beq	15cf4 <g_strcmp0@plt+0xb28>
   156d0:	bl	2f094 <g_strcmp0@plt+0x19ec8>
   156d4:	subs	r7, r0, #0
   156d8:	beq	15d00 <g_strcmp0@plt+0xb34>
   156dc:	bl	14404 <g_object_ref@plt>
   156e0:	mov	r3, r0
   156e4:	ldr	r0, [r4, #20]
   156e8:	cmp	r0, #0
   156ec:	beq	156fc <g_strcmp0@plt+0x530>
   156f0:	str	r3, [sp, #20]
   156f4:	bl	14e90 <g_object_unref@plt>
   156f8:	ldr	r3, [sp, #20]
   156fc:	mov	r0, r7
   15700:	str	r3, [r4, #20]
   15704:	bl	14e90 <g_object_unref@plt>
   15708:	mov	r0, sl
   1570c:	bl	28188 <g_strcmp0@plt+0x12fbc>
   15710:	ldr	r0, [pc, #3176]	; 16380 <g_strcmp0@plt+0x11b4>
   15714:	bl	30a94 <g_strcmp0@plt+0x1b8c8>
   15718:	mov	r1, #16
   1571c:	str	r0, [sp, #20]
   15720:	bl	14c20 <g_file_test@plt>
   15724:	cmp	r0, #0
   15728:	bne	16570 <g_strcmp0@plt+0x13a4>
   1572c:	ldr	r3, [r4, #24]
   15730:	cmp	r3, #0
   15734:	bne	15748 <g_strcmp0@plt+0x57c>
   15738:	ldr	r0, [r4, #28]
   1573c:	cmp	r0, #0
   15740:	beq	16b10 <g_strcmp0@plt+0x1944>
   15744:	bl	29534 <g_strcmp0@plt+0x14368>
   15748:	mov	r3, #0
   1574c:	ldr	r2, [pc, #3120]	; 16384 <g_strcmp0@plt+0x11b8>
   15750:	ldr	r1, [pc, #3320]	; 16450 <g_strcmp0@plt+0x1284>
   15754:	ldr	r0, [r4, #20]
   15758:	bl	2a300 <g_strcmp0@plt+0x15134>
   1575c:	mov	r7, r0
   15760:	bl	14bd8 <g_free@plt>
   15764:	cmp	r7, #0
   15768:	beq	16594 <g_strcmp0@plt+0x13c8>
   1576c:	bl	1bbc0 <g_strcmp0@plt+0x69f4>
   15770:	subs	r7, r0, #0
   15774:	beq	165c4 <g_strcmp0@plt+0x13f8>
   15778:	bl	14404 <g_object_ref@plt>
   1577c:	ldr	r3, [r4, #32]
   15780:	cmp	r3, #0
   15784:	mov	r2, r0
   15788:	beq	157a0 <g_strcmp0@plt+0x5d4>
   1578c:	str	r0, [sp, #24]
   15790:	mov	r0, r3
   15794:	bl	14e90 <g_object_unref@plt>
   15798:	ldr	r2, [sp, #24]
   1579c:	mov	r0, r2
   157a0:	str	r2, [r4, #32]
   157a4:	bl	1b734 <g_strcmp0@plt+0x6568>
   157a8:	mov	r0, r7
   157ac:	bl	14e90 <g_object_unref@plt>
   157b0:	mov	r3, #0
   157b4:	ldr	r2, [pc, #3020]	; 16388 <g_strcmp0@plt+0x11bc>
   157b8:	ldr	r1, [pc, #3216]	; 16450 <g_strcmp0@plt+0x1284>
   157bc:	ldr	r0, [r4, #20]
   157c0:	bl	2a300 <g_strcmp0@plt+0x15134>
   157c4:	ldr	r1, [pc, #3008]	; 1638c <g_strcmp0@plt+0x11c0>
   157c8:	str	r0, [sp, #24]
   157cc:	bl	151cc <g_strcmp0@plt>
   157d0:	ldr	r3, [sp, #24]
   157d4:	mov	r7, r0
   157d8:	mov	r0, r3
   157dc:	bl	14bd8 <g_free@plt>
   157e0:	cmp	r7, #0
   157e4:	bne	15d18 <g_strcmp0@plt+0xb4c>
   157e8:	ldr	r0, [r4, #20]
   157ec:	mov	r3, #1
   157f0:	str	r3, [r4, #36]	; 0x24
   157f4:	ldr	r3, [pc, #3148]	; 16448 <g_strcmp0@plt+0x127c>
   157f8:	ldr	r2, [pc, #2960]	; 16390 <g_strcmp0@plt+0x11c4>
   157fc:	ldr	r1, [pc, #3148]	; 16450 <g_strcmp0@plt+0x1284>
   15800:	bl	2a300 <g_strcmp0@plt+0x15134>
   15804:	mov	r7, r0
   15808:	bl	14bd8 <g_free@plt>
   1580c:	cmp	r7, #0
   15810:	beq	1585c <g_strcmp0@plt+0x690>
   15814:	ldr	r0, [r4, #20]
   15818:	bl	291fc <g_strcmp0@plt+0x14030>
   1581c:	subs	r7, r0, #0
   15820:	beq	16bdc <g_strcmp0@plt+0x1a10>
   15824:	bl	14404 <g_object_ref@plt>
   15828:	ldr	r3, [r4, #100]	; 0x64
   1582c:	cmp	r3, #0
   15830:	mov	r2, r0
   15834:	beq	1584c <g_strcmp0@plt+0x680>
   15838:	str	r0, [sp, #24]
   1583c:	mov	r0, r3
   15840:	bl	14e90 <g_object_unref@plt>
   15844:	ldr	r2, [sp, #24]
   15848:	mov	r0, r2
   1584c:	str	r2, [r4, #100]	; 0x64
   15850:	bl	28bb8 <g_strcmp0@plt+0x139ec>
   15854:	mov	r0, r7
   15858:	bl	14e90 <g_object_unref@plt>
   1585c:	mov	r3, #0
   15860:	ldr	r2, [pc, #2860]	; 16394 <g_strcmp0@plt+0x11c8>
   15864:	ldr	r1, [pc, #2860]	; 16398 <g_strcmp0@plt+0x11cc>
   15868:	ldr	r0, [r4, #20]
   1586c:	bl	2a300 <g_strcmp0@plt+0x15134>
   15870:	ldr	r2, [pc, #2852]	; 1639c <g_strcmp0@plt+0x11d0>
   15874:	mov	r1, #32
   15878:	mov	r3, r0
   1587c:	mov	r7, r0
   15880:	mov	r0, #0
   15884:	bl	14668 <g_log@plt>
   15888:	mov	r0, r7
   1588c:	bl	14bd8 <g_free@plt>
   15890:	mov	r3, #0
   15894:	ldr	r2, [pc, #2808]	; 16394 <g_strcmp0@plt+0x11c8>
   15898:	ldr	r1, [pc, #2808]	; 16398 <g_strcmp0@plt+0x11cc>
   1589c:	ldr	r0, [r4, #20]
   158a0:	bl	2a300 <g_strcmp0@plt+0x15134>
   158a4:	mov	r7, r0
   158a8:	bl	14bd8 <g_free@plt>
   158ac:	cmp	r7, #0
   158b0:	beq	1590c <g_strcmp0@plt+0x740>
   158b4:	ldr	r2, [pc, #2788]	; 163a0 <g_strcmp0@plt+0x11d4>
   158b8:	mov	r1, #32
   158bc:	mov	r0, #0
   158c0:	bl	14668 <g_log@plt>
   158c4:	ldr	r0, [r4, #20]
   158c8:	bl	290bc <g_strcmp0@plt+0x13ef0>
   158cc:	subs	r7, r0, #0
   158d0:	beq	16bb8 <g_strcmp0@plt+0x19ec>
   158d4:	bl	14404 <g_object_ref@plt>
   158d8:	ldr	r3, [r4, #104]	; 0x68
   158dc:	cmp	r3, #0
   158e0:	mov	r2, r0
   158e4:	beq	158fc <g_strcmp0@plt+0x730>
   158e8:	str	r0, [sp, #24]
   158ec:	mov	r0, r3
   158f0:	bl	14e90 <g_object_unref@plt>
   158f4:	ldr	r2, [sp, #24]
   158f8:	mov	r0, r2
   158fc:	str	r2, [r4, #104]	; 0x68
   15900:	bl	28bb8 <g_strcmp0@plt+0x139ec>
   15904:	mov	r0, r7
   15908:	bl	14e90 <g_object_unref@plt>
   1590c:	ldr	r3, [pc, #2868]	; 16448 <g_strcmp0@plt+0x127c>
   15910:	ldr	r2, [pc, #2700]	; 163a4 <g_strcmp0@plt+0x11d8>
   15914:	ldr	r1, [pc, #2868]	; 16450 <g_strcmp0@plt+0x1284>
   15918:	ldr	r0, [r4, #20]
   1591c:	bl	2a300 <g_strcmp0@plt+0x15134>
   15920:	mov	r7, r0
   15924:	bl	14bd8 <g_free@plt>
   15928:	cmp	r7, #0
   1592c:	beq	15970 <g_strcmp0@plt+0x7a4>
   15930:	bl	1cdf0 <g_strcmp0@plt+0x7c24>
   15934:	subs	r7, r0, #0
   15938:	beq	16b94 <g_strcmp0@plt+0x19c8>
   1593c:	bl	14404 <g_object_ref@plt>
   15940:	mov	r3, r0
   15944:	ldr	r0, [r4, #108]	; 0x6c
   15948:	cmp	r0, #0
   1594c:	beq	165e4 <g_strcmp0@plt+0x1418>
   15950:	str	r3, [sp, #24]
   15954:	bl	14e90 <g_object_unref@plt>
   15958:	ldr	r3, [sp, #24]
   1595c:	mov	r0, r7
   15960:	str	r3, [r4, #108]	; 0x6c
   15964:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   15968:	mov	r0, r7
   1596c:	bl	14e90 <g_object_unref@plt>
   15970:	ldr	r3, [pc, #2768]	; 16448 <g_strcmp0@plt+0x127c>
   15974:	ldr	r2, [pc, #2604]	; 163a8 <g_strcmp0@plt+0x11dc>
   15978:	ldr	r1, [pc, #2768]	; 16450 <g_strcmp0@plt+0x1284>
   1597c:	ldr	r0, [r4, #20]
   15980:	bl	2a300 <g_strcmp0@plt+0x15134>
   15984:	mov	r7, r0
   15988:	bl	14bd8 <g_free@plt>
   1598c:	cmp	r7, #0
   15990:	beq	159d8 <g_strcmp0@plt+0x80c>
   15994:	bl	1cea8 <g_strcmp0@plt+0x7cdc>
   15998:	subs	r7, r0, #0
   1599c:	beq	16c24 <g_strcmp0@plt+0x1a58>
   159a0:	bl	14404 <g_object_ref@plt>
   159a4:	ldr	r3, [r4, #112]	; 0x70
   159a8:	cmp	r3, #0
   159ac:	mov	r2, r0
   159b0:	beq	159c8 <g_strcmp0@plt+0x7fc>
   159b4:	str	r0, [sp, #24]
   159b8:	mov	r0, r3
   159bc:	bl	14e90 <g_object_unref@plt>
   159c0:	ldr	r2, [sp, #24]
   159c4:	mov	r0, r2
   159c8:	str	r2, [r4, #112]	; 0x70
   159cc:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   159d0:	mov	r0, r7
   159d4:	bl	14e90 <g_object_unref@plt>
   159d8:	ldr	r3, [pc, #2664]	; 16448 <g_strcmp0@plt+0x127c>
   159dc:	ldr	r2, [pc, #2504]	; 163ac <g_strcmp0@plt+0x11e0>
   159e0:	ldr	r1, [pc, #2664]	; 16450 <g_strcmp0@plt+0x1284>
   159e4:	ldr	r0, [r4, #20]
   159e8:	bl	2a300 <g_strcmp0@plt+0x15134>
   159ec:	mov	r7, r0
   159f0:	bl	14bd8 <g_free@plt>
   159f4:	cmp	r7, #0
   159f8:	beq	15a40 <g_strcmp0@plt+0x874>
   159fc:	bl	1cd38 <g_strcmp0@plt+0x7b6c>
   15a00:	subs	r7, r0, #0
   15a04:	beq	16c00 <g_strcmp0@plt+0x1a34>
   15a08:	bl	14404 <g_object_ref@plt>
   15a0c:	ldr	r3, [r4, #116]	; 0x74
   15a10:	cmp	r3, #0
   15a14:	mov	r2, r0
   15a18:	beq	15a30 <g_strcmp0@plt+0x864>
   15a1c:	str	r0, [sp, #24]
   15a20:	mov	r0, r3
   15a24:	bl	14e90 <g_object_unref@plt>
   15a28:	ldr	r2, [sp, #24]
   15a2c:	mov	r0, r2
   15a30:	str	r2, [r4, #116]	; 0x74
   15a34:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   15a38:	mov	r0, r7
   15a3c:	bl	14e90 <g_object_unref@plt>
   15a40:	ldr	r3, [pc, #2560]	; 16448 <g_strcmp0@plt+0x127c>
   15a44:	ldr	r2, [pc, #2404]	; 163b0 <g_strcmp0@plt+0x11e4>
   15a48:	ldr	r1, [pc, #2560]	; 16450 <g_strcmp0@plt+0x1284>
   15a4c:	ldr	r0, [r4, #20]
   15a50:	bl	2a300 <g_strcmp0@plt+0x15134>
   15a54:	mov	r7, r0
   15a58:	bl	14bd8 <g_free@plt>
   15a5c:	cmp	r7, #0
   15a60:	beq	15aa8 <g_strcmp0@plt+0x8dc>
   15a64:	bl	1cc80 <g_strcmp0@plt+0x7ab4>
   15a68:	subs	r7, r0, #0
   15a6c:	beq	16b58 <g_strcmp0@plt+0x198c>
   15a70:	bl	14404 <g_object_ref@plt>
   15a74:	ldr	r3, [r4, #120]	; 0x78
   15a78:	cmp	r3, #0
   15a7c:	mov	r2, r0
   15a80:	beq	15a98 <g_strcmp0@plt+0x8cc>
   15a84:	str	r0, [sp, #24]
   15a88:	mov	r0, r3
   15a8c:	bl	14e90 <g_object_unref@plt>
   15a90:	ldr	r2, [sp, #24]
   15a94:	mov	r0, r2
   15a98:	str	r2, [r4, #120]	; 0x78
   15a9c:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   15aa0:	mov	r0, r7
   15aa4:	bl	14e90 <g_object_unref@plt>
   15aa8:	ldr	r3, [pc, #2456]	; 16448 <g_strcmp0@plt+0x127c>
   15aac:	ldr	r2, [pc, #2304]	; 163b4 <g_strcmp0@plt+0x11e8>
   15ab0:	ldr	r1, [pc, #2456]	; 16450 <g_strcmp0@plt+0x1284>
   15ab4:	ldr	r0, [r4, #20]
   15ab8:	bl	2a300 <g_strcmp0@plt+0x15134>
   15abc:	mov	r7, r0
   15ac0:	bl	14bd8 <g_free@plt>
   15ac4:	cmp	r7, #0
   15ac8:	beq	15b04 <g_strcmp0@plt+0x938>
   15acc:	bl	1df38 <g_strcmp0@plt+0x8d6c>
   15ad0:	subs	r7, r0, #0
   15ad4:	beq	16b7c <g_strcmp0@plt+0x19b0>
   15ad8:	bl	14404 <g_object_ref@plt>
   15adc:	mov	r3, r0
   15ae0:	ldr	r0, [r4, #124]	; 0x7c
   15ae4:	cmp	r0, #0
   15ae8:	beq	15af8 <g_strcmp0@plt+0x92c>
   15aec:	str	r3, [sp, #24]
   15af0:	bl	14e90 <g_object_unref@plt>
   15af4:	ldr	r3, [sp, #24]
   15af8:	mov	r0, r7
   15afc:	str	r3, [r4, #124]	; 0x7c
   15b00:	bl	14e90 <g_object_unref@plt>
   15b04:	mov	r3, #0
   15b08:	ldr	r2, [pc, #2216]	; 163b8 <g_strcmp0@plt+0x11ec>
   15b0c:	ldr	r1, [pc, #2364]	; 16450 <g_strcmp0@plt+0x1284>
   15b10:	ldr	r0, [r4, #20]
   15b14:	bl	2a300 <g_strcmp0@plt+0x15134>
   15b18:	ldr	r1, [pc, #2204]	; 163bc <g_strcmp0@plt+0x11f0>
   15b1c:	str	r0, [sp, #24]
   15b20:	bl	151cc <g_strcmp0@plt>
   15b24:	ldr	r3, [sp, #24]
   15b28:	mov	r7, r0
   15b2c:	mov	r0, r3
   15b30:	bl	14bd8 <g_free@plt>
   15b34:	cmp	r7, #0
   15b38:	beq	16524 <g_strcmp0@plt+0x1358>
   15b3c:	mov	r3, #0
   15b40:	ldr	r2, [pc, #2168]	; 163c0 <g_strcmp0@plt+0x11f4>
   15b44:	ldr	r1, [pc, #2168]	; 163c4 <g_strcmp0@plt+0x11f8>
   15b48:	ldr	r0, [r4, #20]
   15b4c:	bl	2a300 <g_strcmp0@plt+0x15134>
   15b50:	ldr	r1, [pc, #2148]	; 163bc <g_strcmp0@plt+0x11f0>
   15b54:	str	r0, [sp, #24]
   15b58:	bl	151cc <g_strcmp0@plt>
   15b5c:	ldr	r3, [sp, #24]
   15b60:	mov	r7, r0
   15b64:	mov	r0, r3
   15b68:	bl	14bd8 <g_free@plt>
   15b6c:	cmp	r7, #0
   15b70:	beq	164c8 <g_strcmp0@plt+0x12fc>
   15b74:	mov	r3, #0
   15b78:	ldr	r2, [pc, #2120]	; 163c8 <g_strcmp0@plt+0x11fc>
   15b7c:	ldr	r1, [pc, #2112]	; 163c4 <g_strcmp0@plt+0x11f8>
   15b80:	ldr	r0, [r4, #20]
   15b84:	bl	2a300 <g_strcmp0@plt+0x15134>
   15b88:	ldr	r1, [pc, #2092]	; 163bc <g_strcmp0@plt+0x11f0>
   15b8c:	str	r0, [sp, #24]
   15b90:	bl	151cc <g_strcmp0@plt>
   15b94:	ldr	r3, [sp, #24]
   15b98:	mov	r7, r0
   15b9c:	mov	r0, r3
   15ba0:	bl	14bd8 <g_free@plt>
   15ba4:	cmp	r7, #0
   15ba8:	beq	1646c <g_strcmp0@plt+0x12a0>
   15bac:	mov	r1, #0
   15bb0:	mov	r0, r1
   15bb4:	bl	148d8 <g_main_loop_new@plt>
   15bb8:	mov	r7, r0
   15bbc:	bl	148a8 <g_main_loop_run@plt>
   15bc0:	cmp	r7, #0
   15bc4:	beq	15bd0 <g_strcmp0@plt+0xa04>
   15bc8:	mov	r0, r7
   15bcc:	bl	1510c <g_main_loop_unref@plt>
   15bd0:	ldr	r0, [r4, #100]	; 0x64
   15bd4:	cmp	r0, #0
   15bd8:	beq	15be0 <g_strcmp0@plt+0xa14>
   15bdc:	bl	29190 <g_strcmp0@plt+0x13fc4>
   15be0:	ldr	r3, [pc, #2144]	; 16448 <g_strcmp0@plt+0x127c>
   15be4:	ldr	r2, [pc, #2016]	; 163cc <g_strcmp0@plt+0x1200>
   15be8:	ldr	r1, [pc, #2144]	; 16450 <g_strcmp0@plt+0x1284>
   15bec:	ldr	r0, [r4, #20]
   15bf0:	bl	2a300 <g_strcmp0@plt+0x15134>
   15bf4:	mov	r7, r0
   15bf8:	bl	14bd8 <g_free@plt>
   15bfc:	cmp	r7, #0
   15c00:	beq	15c14 <g_strcmp0@plt+0xa48>
   15c04:	ldr	r0, [r4, #68]	; 0x44
   15c08:	bl	1c634 <g_strcmp0@plt+0x7468>
   15c0c:	ldr	r0, [r4, #68]	; 0x44
   15c10:	bl	18e70 <g_strcmp0@plt+0x3ca4>
   15c14:	ldr	r0, [r4, #40]	; 0x28
   15c18:	cmp	r0, #0
   15c1c:	beq	15c24 <g_strcmp0@plt+0xa58>
   15c20:	bl	18e70 <g_strcmp0@plt+0x3ca4>
   15c24:	ldr	r0, [r4, #44]	; 0x2c
   15c28:	cmp	r0, #0
   15c2c:	beq	15c34 <g_strcmp0@plt+0xa68>
   15c30:	bl	18e70 <g_strcmp0@plt+0x3ca4>
   15c34:	ldr	r0, [r4, #32]
   15c38:	cmp	r0, #0
   15c3c:	beq	15c44 <g_strcmp0@plt+0xa78>
   15c40:	bl	18e70 <g_strcmp0@plt+0x3ca4>
   15c44:	ldr	r0, [r4, #60]	; 0x3c
   15c48:	cmp	r0, #0
   15c4c:	beq	15c54 <g_strcmp0@plt+0xa88>
   15c50:	bl	18e70 <g_strcmp0@plt+0x3ca4>
   15c54:	ldr	r0, [r4, #68]	; 0x44
   15c58:	cmp	r0, #0
   15c5c:	beq	15c64 <g_strcmp0@plt+0xa98>
   15c60:	bl	18e70 <g_strcmp0@plt+0x3ca4>
   15c64:	ldr	r0, [r4, #48]	; 0x30
   15c68:	cmp	r0, #0
   15c6c:	beq	15c74 <g_strcmp0@plt+0xaa8>
   15c70:	bl	18e70 <g_strcmp0@plt+0x3ca4>
   15c74:	ldr	r0, [r4, #52]	; 0x34
   15c78:	cmp	r0, #0
   15c7c:	beq	15c84 <g_strcmp0@plt+0xab8>
   15c80:	bl	18e70 <g_strcmp0@plt+0x3ca4>
   15c84:	ldr	r0, [r4, #56]	; 0x38
   15c88:	cmp	r0, #0
   15c8c:	beq	15c94 <g_strcmp0@plt+0xac8>
   15c90:	bl	18e70 <g_strcmp0@plt+0x3ca4>
   15c94:	ldr	r0, [r4, #64]	; 0x40
   15c98:	cmp	r0, #0
   15c9c:	beq	15ca4 <g_strcmp0@plt+0xad8>
   15ca0:	bl	18e70 <g_strcmp0@plt+0x3ca4>
   15ca4:	ldr	r0, [sp, #20]
   15ca8:	bl	14bd8 <g_free@plt>
   15cac:	cmp	sl, #0
   15cb0:	beq	15cbc <g_strcmp0@plt+0xaf0>
   15cb4:	mov	r0, sl
   15cb8:	bl	14e90 <g_object_unref@plt>
   15cbc:	cmp	fp, #0
   15cc0:	beq	15ccc <g_strcmp0@plt+0xb00>
   15cc4:	mov	r0, fp
   15cc8:	bl	14e90 <g_object_unref@plt>
   15ccc:	mov	r0, r6
   15cd0:	bl	14bd8 <g_free@plt>
   15cd4:	cmp	r5, #0
   15cd8:	beq	15ce4 <g_strcmp0@plt+0xb18>
   15cdc:	mov	r0, r5
   15ce0:	bl	14e90 <g_object_unref@plt>
   15ce4:	mov	r0, r8
   15ce8:	bl	14bd8 <g_free@plt>
   15cec:	mov	r0, #0
   15cf0:	b	154c8 <g_strcmp0@plt+0x2fc>
   15cf4:	bl	2fd54 <g_strcmp0@plt+0x1ab88>
   15cf8:	subs	r7, r0, #0
   15cfc:	bne	156dc <g_strcmp0@plt+0x510>
   15d00:	ldr	r0, [r4, #20]
   15d04:	cmp	r0, #0
   15d08:	beq	15708 <g_strcmp0@plt+0x53c>
   15d0c:	bl	14e90 <g_object_unref@plt>
   15d10:	str	r7, [r4, #20]
   15d14:	b	15708 <g_strcmp0@plt+0x53c>
   15d18:	ldr	r3, [r4, #36]	; 0x24
   15d1c:	ldr	r0, [r4, #20]
   15d20:	cmp	r3, #0
   15d24:	bne	157f4 <g_strcmp0@plt+0x628>
   15d28:	ldr	r3, [pc, #1816]	; 16448 <g_strcmp0@plt+0x127c>
   15d2c:	ldr	r2, [pc, #1692]	; 163d0 <g_strcmp0@plt+0x1204>
   15d30:	ldr	r1, [pc, #1816]	; 16450 <g_strcmp0@plt+0x1284>
   15d34:	bl	2a300 <g_strcmp0@plt+0x15134>
   15d38:	mov	r7, r0
   15d3c:	bl	14bd8 <g_free@plt>
   15d40:	cmp	r7, #0
   15d44:	beq	15d8c <g_strcmp0@plt+0xbc0>
   15d48:	bl	1bc68 <g_strcmp0@plt+0x6a9c>
   15d4c:	subs	r7, r0, #0
   15d50:	beq	16db4 <g_strcmp0@plt+0x1be8>
   15d54:	bl	14404 <g_object_ref@plt>
   15d58:	ldr	r3, [r4, #40]	; 0x28
   15d5c:	cmp	r3, #0
   15d60:	mov	r2, r0
   15d64:	beq	15d7c <g_strcmp0@plt+0xbb0>
   15d68:	str	r0, [sp, #24]
   15d6c:	mov	r0, r3
   15d70:	bl	14e90 <g_object_unref@plt>
   15d74:	ldr	r2, [sp, #24]
   15d78:	mov	r0, r2
   15d7c:	str	r2, [r4, #40]	; 0x28
   15d80:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   15d84:	mov	r0, r7
   15d88:	bl	14e90 <g_object_unref@plt>
   15d8c:	ldr	r3, [pc, #1716]	; 16448 <g_strcmp0@plt+0x127c>
   15d90:	ldr	r2, [pc, #1596]	; 163d4 <g_strcmp0@plt+0x1208>
   15d94:	ldr	r1, [pc, #1716]	; 16450 <g_strcmp0@plt+0x1284>
   15d98:	ldr	r0, [r4, #20]
   15d9c:	bl	2a300 <g_strcmp0@plt+0x15134>
   15da0:	mov	r7, r0
   15da4:	bl	14bd8 <g_free@plt>
   15da8:	cmp	r7, #0
   15dac:	beq	15df4 <g_strcmp0@plt+0xc28>
   15db0:	bl	1bd10 <g_strcmp0@plt+0x6b44>
   15db4:	subs	r7, r0, #0
   15db8:	beq	16d48 <g_strcmp0@plt+0x1b7c>
   15dbc:	bl	14404 <g_object_ref@plt>
   15dc0:	ldr	r3, [r4, #44]	; 0x2c
   15dc4:	cmp	r3, #0
   15dc8:	mov	r2, r0
   15dcc:	beq	15de4 <g_strcmp0@plt+0xc18>
   15dd0:	str	r0, [sp, #24]
   15dd4:	mov	r0, r3
   15dd8:	bl	14e90 <g_object_unref@plt>
   15ddc:	ldr	r2, [sp, #24]
   15de0:	mov	r0, r2
   15de4:	str	r2, [r4, #44]	; 0x2c
   15de8:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   15dec:	mov	r0, r7
   15df0:	bl	14e90 <g_object_unref@plt>
   15df4:	ldr	r3, [pc, #1612]	; 16448 <g_strcmp0@plt+0x127c>
   15df8:	ldr	r2, [pc, #1496]	; 163d8 <g_strcmp0@plt+0x120c>
   15dfc:	ldr	r1, [pc, #1612]	; 16450 <g_strcmp0@plt+0x1284>
   15e00:	ldr	r0, [r4, #20]
   15e04:	bl	2a300 <g_strcmp0@plt+0x15134>
   15e08:	mov	r7, r0
   15e0c:	bl	14bd8 <g_free@plt>
   15e10:	cmp	r7, #0
   15e14:	beq	15e5c <g_strcmp0@plt+0xc90>
   15e18:	bl	1bdc8 <g_strcmp0@plt+0x6bfc>
   15e1c:	subs	r7, r0, #0
   15e20:	beq	16d6c <g_strcmp0@plt+0x1ba0>
   15e24:	bl	14404 <g_object_ref@plt>
   15e28:	ldr	r3, [r4, #48]	; 0x30
   15e2c:	cmp	r3, #0
   15e30:	mov	r2, r0
   15e34:	beq	15e4c <g_strcmp0@plt+0xc80>
   15e38:	str	r0, [sp, #24]
   15e3c:	mov	r0, r3
   15e40:	bl	14e90 <g_object_unref@plt>
   15e44:	ldr	r2, [sp, #24]
   15e48:	mov	r0, r2
   15e4c:	str	r2, [r4, #48]	; 0x30
   15e50:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   15e54:	mov	r0, r7
   15e58:	bl	14e90 <g_object_unref@plt>
   15e5c:	ldr	r3, [pc, #1508]	; 16448 <g_strcmp0@plt+0x127c>
   15e60:	ldr	r2, [pc, #1396]	; 163dc <g_strcmp0@plt+0x1210>
   15e64:	ldr	r1, [pc, #1508]	; 16450 <g_strcmp0@plt+0x1284>
   15e68:	ldr	r0, [r4, #20]
   15e6c:	bl	2a300 <g_strcmp0@plt+0x15134>
   15e70:	mov	r7, r0
   15e74:	bl	14bd8 <g_free@plt>
   15e78:	cmp	r7, #0
   15e7c:	beq	15f4c <g_strcmp0@plt+0xd80>
   15e80:	mov	r3, #0
   15e84:	ldr	r2, [pc, #1364]	; 163e0 <g_strcmp0@plt+0x1214>
   15e88:	ldr	r1, [pc, #1364]	; 163e4 <g_strcmp0@plt+0x1218>
   15e8c:	ldr	r0, [r4, #20]
   15e90:	bl	2a300 <g_strcmp0@plt+0x15134>
   15e94:	ldr	r1, [pc, #1356]	; 163e8 <g_strcmp0@plt+0x121c>
   15e98:	str	r0, [sp, #24]
   15e9c:	bl	151cc <g_strcmp0@plt>
   15ea0:	ldr	r3, [sp, #24]
   15ea4:	mov	r7, r0
   15ea8:	mov	r0, r3
   15eac:	bl	14bd8 <g_free@plt>
   15eb0:	cmp	r7, #0
   15eb4:	bne	16c54 <g_strcmp0@plt+0x1a88>
   15eb8:	bl	30dd8 <g_strcmp0@plt+0x1bc0c>
   15ebc:	str	r0, [sp, #24]
   15ec0:	ldr	r0, [pc, #1316]	; 163ec <g_strcmp0@plt+0x1220>
   15ec4:	bl	147e8 <g_strdup@plt>
   15ec8:	ldr	r3, [sp, #24]
   15ecc:	cmp	r3, #1
   15ed0:	mov	r7, r0
   15ed4:	beq	16eb4 <g_strcmp0@plt+0x1ce8>
   15ed8:	ldr	r2, [pc, #1296]	; 163f0 <g_strcmp0@plt+0x1224>
   15edc:	mov	r3, #0
   15ee0:	str	r3, [sp]
   15ee4:	stmib	sp, {r2, r7}
   15ee8:	ldr	r3, [pc, #1264]	; 163e0 <g_strcmp0@plt+0x1214>
   15eec:	ldr	r2, [pc, #1264]	; 163e4 <g_strcmp0@plt+0x1218>
   15ef0:	ldr	r1, [pc, #1276]	; 163f4 <g_strcmp0@plt+0x1228>
   15ef4:	ldr	r0, [r4, #16]
   15ef8:	bl	1516c <g_signal_emit_by_name@plt>
   15efc:	bl	1be80 <g_strcmp0@plt+0x6cb4>
   15f00:	subs	r3, r0, #0
   15f04:	str	r3, [sp, #24]
   15f08:	beq	16e6c <g_strcmp0@plt+0x1ca0>
   15f0c:	bl	14404 <g_object_ref@plt>
   15f10:	ldr	r3, [r4, #52]	; 0x34
   15f14:	cmp	r3, #0
   15f18:	mov	r2, r0
   15f1c:	beq	15f34 <g_strcmp0@plt+0xd68>
   15f20:	str	r0, [sp, #28]
   15f24:	mov	r0, r3
   15f28:	bl	14e90 <g_object_unref@plt>
   15f2c:	ldr	r2, [sp, #28]
   15f30:	mov	r0, r2
   15f34:	str	r2, [r4, #52]	; 0x34
   15f38:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   15f3c:	ldr	r0, [sp, #24]
   15f40:	bl	14e90 <g_object_unref@plt>
   15f44:	mov	r0, r7
   15f48:	bl	14bd8 <g_free@plt>
   15f4c:	ldr	r3, [pc, #1268]	; 16448 <g_strcmp0@plt+0x127c>
   15f50:	ldr	r2, [pc, #1184]	; 163f8 <g_strcmp0@plt+0x122c>
   15f54:	ldr	r1, [pc, #1268]	; 16450 <g_strcmp0@plt+0x1284>
   15f58:	ldr	r0, [r4, #20]
   15f5c:	bl	2a300 <g_strcmp0@plt+0x15134>
   15f60:	mov	r7, r0
   15f64:	bl	14bd8 <g_free@plt>
   15f68:	cmp	r7, #0
   15f6c:	beq	1603c <g_strcmp0@plt+0xe70>
   15f70:	mov	r3, #0
   15f74:	ldr	r2, [pc, #1124]	; 163e0 <g_strcmp0@plt+0x1214>
   15f78:	ldr	r1, [pc, #1124]	; 163e4 <g_strcmp0@plt+0x1218>
   15f7c:	ldr	r0, [r4, #20]
   15f80:	bl	2a300 <g_strcmp0@plt+0x15134>
   15f84:	ldr	r1, [pc, #1116]	; 163e8 <g_strcmp0@plt+0x121c>
   15f88:	str	r0, [sp, #24]
   15f8c:	bl	151cc <g_strcmp0@plt>
   15f90:	ldr	r3, [sp, #24]
   15f94:	mov	r7, r0
   15f98:	mov	r0, r3
   15f9c:	bl	14bd8 <g_free@plt>
   15fa0:	cmp	r7, #0
   15fa4:	bne	16c9c <g_strcmp0@plt+0x1ad0>
   15fa8:	bl	30dd8 <g_strcmp0@plt+0x1bc0c>
   15fac:	str	r0, [sp, #24]
   15fb0:	ldr	r0, [pc, #1076]	; 163ec <g_strcmp0@plt+0x1220>
   15fb4:	bl	147e8 <g_strdup@plt>
   15fb8:	ldr	r3, [sp, #24]
   15fbc:	cmp	r3, #1
   15fc0:	mov	r7, r0
   15fc4:	beq	16e94 <g_strcmp0@plt+0x1cc8>
   15fc8:	ldr	r2, [pc, #1056]	; 163f0 <g_strcmp0@plt+0x1224>
   15fcc:	mov	r3, #0
   15fd0:	str	r3, [sp]
   15fd4:	stmib	sp, {r2, r7}
   15fd8:	ldr	r3, [pc, #1024]	; 163e0 <g_strcmp0@plt+0x1214>
   15fdc:	ldr	r2, [pc, #1024]	; 163e4 <g_strcmp0@plt+0x1218>
   15fe0:	ldr	r1, [pc, #1036]	; 163f4 <g_strcmp0@plt+0x1228>
   15fe4:	ldr	r0, [r4, #16]
   15fe8:	bl	1516c <g_signal_emit_by_name@plt>
   15fec:	bl	1c768 <g_strcmp0@plt+0x759c>
   15ff0:	subs	r3, r0, #0
   15ff4:	str	r3, [sp, #24]
   15ff8:	beq	16e20 <g_strcmp0@plt+0x1c54>
   15ffc:	bl	14404 <g_object_ref@plt>
   16000:	ldr	r3, [r4, #56]	; 0x38
   16004:	cmp	r3, #0
   16008:	mov	r2, r0
   1600c:	beq	16024 <g_strcmp0@plt+0xe58>
   16010:	str	r0, [sp, #28]
   16014:	mov	r0, r3
   16018:	bl	14e90 <g_object_unref@plt>
   1601c:	ldr	r2, [sp, #28]
   16020:	mov	r0, r2
   16024:	str	r2, [r4, #56]	; 0x38
   16028:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   1602c:	ldr	r0, [sp, #24]
   16030:	bl	14e90 <g_object_unref@plt>
   16034:	mov	r0, r7
   16038:	bl	14bd8 <g_free@plt>
   1603c:	ldr	r3, [pc, #1028]	; 16448 <g_strcmp0@plt+0x127c>
   16040:	ldr	r2, [pc, #948]	; 163fc <g_strcmp0@plt+0x1230>
   16044:	ldr	r1, [pc, #1028]	; 16450 <g_strcmp0@plt+0x1284>
   16048:	ldr	r0, [r4, #20]
   1604c:	bl	2a300 <g_strcmp0@plt+0x15134>
   16050:	mov	r7, r0
   16054:	bl	14bd8 <g_free@plt>
   16058:	cmp	r7, #0
   1605c:	beq	160a4 <g_strcmp0@plt+0xed8>
   16060:	bl	1c5f4 <g_strcmp0@plt+0x7428>
   16064:	subs	r7, r0, #0
   16068:	beq	16d24 <g_strcmp0@plt+0x1b58>
   1606c:	bl	14404 <g_object_ref@plt>
   16070:	ldr	r3, [r4, #60]	; 0x3c
   16074:	cmp	r3, #0
   16078:	mov	r2, r0
   1607c:	beq	16094 <g_strcmp0@plt+0xec8>
   16080:	str	r0, [sp, #24]
   16084:	mov	r0, r3
   16088:	bl	14e90 <g_object_unref@plt>
   1608c:	ldr	r2, [sp, #24]
   16090:	mov	r0, r2
   16094:	str	r2, [r4, #60]	; 0x3c
   16098:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   1609c:	mov	r0, r7
   160a0:	bl	14e90 <g_object_unref@plt>
   160a4:	ldr	r3, [pc, #852]	; 16400 <g_strcmp0@plt+0x1234>
   160a8:	ldr	r2, [pc, #924]	; 1644c <g_strcmp0@plt+0x1280>
   160ac:	ldr	r1, [pc, #924]	; 16450 <g_strcmp0@plt+0x1284>
   160b0:	ldr	r0, [r4, #20]
   160b4:	bl	2a300 <g_strcmp0@plt+0x15134>
   160b8:	ldr	r1, [pc, #764]	; 163bc <g_strcmp0@plt+0x11f0>
   160bc:	str	r0, [sp, #24]
   160c0:	bl	151cc <g_strcmp0@plt>
   160c4:	ldr	r3, [sp, #24]
   160c8:	mov	r7, r0
   160cc:	mov	r0, r3
   160d0:	bl	14bd8 <g_free@plt>
   160d4:	cmp	r7, #0
   160d8:	beq	169f0 <g_strcmp0@plt+0x1824>
   160dc:	ldr	r3, [pc, #868]	; 16448 <g_strcmp0@plt+0x127c>
   160e0:	ldr	r2, [pc, #740]	; 163cc <g_strcmp0@plt+0x1200>
   160e4:	ldr	r1, [pc, #868]	; 16450 <g_strcmp0@plt+0x1284>
   160e8:	ldr	r0, [r4, #20]
   160ec:	bl	2a300 <g_strcmp0@plt+0x15134>
   160f0:	mov	r7, r0
   160f4:	bl	14bd8 <g_free@plt>
   160f8:	cmp	r7, #0
   160fc:	beq	16144 <g_strcmp0@plt+0xf78>
   16100:	bl	1c6b0 <g_strcmp0@plt+0x74e4>
   16104:	subs	r7, r0, #0
   16108:	beq	16d90 <g_strcmp0@plt+0x1bc4>
   1610c:	bl	14404 <g_object_ref@plt>
   16110:	ldr	r3, [r4, #68]	; 0x44
   16114:	cmp	r3, #0
   16118:	mov	r2, r0
   1611c:	beq	16134 <g_strcmp0@plt+0xf68>
   16120:	str	r0, [sp, #24]
   16124:	mov	r0, r3
   16128:	bl	14e90 <g_object_unref@plt>
   1612c:	ldr	r2, [sp, #24]
   16130:	mov	r0, r2
   16134:	str	r2, [r4, #68]	; 0x44
   16138:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   1613c:	mov	r0, r7
   16140:	bl	14e90 <g_object_unref@plt>
   16144:	ldr	r3, [pc, #692]	; 16400 <g_strcmp0@plt+0x1234>
   16148:	ldr	r2, [pc, #756]	; 16444 <g_strcmp0@plt+0x1278>
   1614c:	ldr	r1, [pc, #764]	; 16450 <g_strcmp0@plt+0x1284>
   16150:	ldr	r0, [r4, #20]
   16154:	bl	2a300 <g_strcmp0@plt+0x15134>
   16158:	ldr	r1, [pc, #604]	; 163bc <g_strcmp0@plt+0x11f0>
   1615c:	str	r0, [sp, #24]
   16160:	bl	151cc <g_strcmp0@plt>
   16164:	ldr	r3, [sp, #24]
   16168:	mov	r7, r0
   1616c:	mov	r0, r3
   16170:	bl	14bd8 <g_free@plt>
   16174:	cmp	r7, #0
   16178:	beq	16984 <g_strcmp0@plt+0x17b8>
   1617c:	ldr	r3, [pc, #636]	; 16400 <g_strcmp0@plt+0x1234>
   16180:	ldr	r2, [pc, #696]	; 16440 <g_strcmp0@plt+0x1274>
   16184:	ldr	r1, [pc, #708]	; 16450 <g_strcmp0@plt+0x1284>
   16188:	ldr	r0, [r4, #20]
   1618c:	bl	2a300 <g_strcmp0@plt+0x15134>
   16190:	ldr	r1, [pc, #548]	; 163bc <g_strcmp0@plt+0x11f0>
   16194:	str	r0, [sp, #24]
   16198:	bl	151cc <g_strcmp0@plt>
   1619c:	ldr	r3, [sp, #24]
   161a0:	mov	r7, r0
   161a4:	mov	r0, r3
   161a8:	bl	14bd8 <g_free@plt>
   161ac:	cmp	r7, #0
   161b0:	beq	168ec <g_strcmp0@plt+0x1720>
   161b4:	ldr	r3, [pc, #580]	; 16400 <g_strcmp0@plt+0x1234>
   161b8:	ldr	r2, [pc, #636]	; 1643c <g_strcmp0@plt+0x1270>
   161bc:	ldr	r1, [pc, #652]	; 16450 <g_strcmp0@plt+0x1284>
   161c0:	ldr	r0, [r4, #20]
   161c4:	bl	2a300 <g_strcmp0@plt+0x15134>
   161c8:	ldr	r1, [pc, #492]	; 163bc <g_strcmp0@plt+0x11f0>
   161cc:	str	r0, [sp, #24]
   161d0:	bl	151cc <g_strcmp0@plt>
   161d4:	ldr	r3, [sp, #24]
   161d8:	mov	r7, r0
   161dc:	mov	r0, r3
   161e0:	bl	14bd8 <g_free@plt>
   161e4:	cmp	r7, #0
   161e8:	beq	16854 <g_strcmp0@plt+0x1688>
   161ec:	ldr	r3, [pc, #524]	; 16400 <g_strcmp0@plt+0x1234>
   161f0:	ldr	r2, [pc, #576]	; 16438 <g_strcmp0@plt+0x126c>
   161f4:	ldr	r1, [pc, #596]	; 16450 <g_strcmp0@plt+0x1284>
   161f8:	ldr	r0, [r4, #20]
   161fc:	bl	2a300 <g_strcmp0@plt+0x15134>
   16200:	ldr	r1, [pc, #436]	; 163bc <g_strcmp0@plt+0x11f0>
   16204:	str	r0, [sp, #24]
   16208:	bl	151cc <g_strcmp0@plt>
   1620c:	ldr	r3, [sp, #24]
   16210:	mov	r7, r0
   16214:	mov	r0, r3
   16218:	bl	14bd8 <g_free@plt>
   1621c:	cmp	r7, #0
   16220:	beq	167bc <g_strcmp0@plt+0x15f0>
   16224:	ldr	r3, [pc, #468]	; 16400 <g_strcmp0@plt+0x1234>
   16228:	ldr	r2, [pc, #516]	; 16434 <g_strcmp0@plt+0x1268>
   1622c:	ldr	r1, [pc, #540]	; 16450 <g_strcmp0@plt+0x1284>
   16230:	ldr	r0, [r4, #20]
   16234:	bl	2a300 <g_strcmp0@plt+0x15134>
   16238:	ldr	r1, [pc, #380]	; 163bc <g_strcmp0@plt+0x11f0>
   1623c:	str	r0, [sp, #24]
   16240:	bl	151cc <g_strcmp0@plt>
   16244:	ldr	r3, [sp, #24]
   16248:	mov	r7, r0
   1624c:	mov	r0, r3
   16250:	bl	14bd8 <g_free@plt>
   16254:	cmp	r7, #0
   16258:	beq	16724 <g_strcmp0@plt+0x1558>
   1625c:	ldr	r3, [pc, #412]	; 16400 <g_strcmp0@plt+0x1234>
   16260:	ldr	r2, [pc, #456]	; 16430 <g_strcmp0@plt+0x1264>
   16264:	ldr	r1, [pc, #484]	; 16450 <g_strcmp0@plt+0x1284>
   16268:	ldr	r0, [r4, #20]
   1626c:	bl	2a300 <g_strcmp0@plt+0x15134>
   16270:	ldr	r1, [pc, #324]	; 163bc <g_strcmp0@plt+0x11f0>
   16274:	str	r0, [sp, #24]
   16278:	bl	151cc <g_strcmp0@plt>
   1627c:	ldr	r3, [sp, #24]
   16280:	mov	r7, r0
   16284:	mov	r0, r3
   16288:	bl	14bd8 <g_free@plt>
   1628c:	cmp	r7, #0
   16290:	beq	1668c <g_strcmp0@plt+0x14c0>
   16294:	ldr	r3, [pc, #356]	; 16400 <g_strcmp0@plt+0x1234>
   16298:	ldr	r2, [pc, #396]	; 1642c <g_strcmp0@plt+0x1260>
   1629c:	ldr	r1, [pc, #428]	; 16450 <g_strcmp0@plt+0x1284>
   162a0:	ldr	r0, [r4, #20]
   162a4:	bl	2a300 <g_strcmp0@plt+0x15134>
   162a8:	ldr	r1, [pc, #268]	; 163bc <g_strcmp0@plt+0x11f0>
   162ac:	str	r0, [sp, #24]
   162b0:	bl	151cc <g_strcmp0@plt>
   162b4:	ldr	r3, [sp, #24]
   162b8:	mov	r7, r0
   162bc:	mov	r0, r3
   162c0:	bl	14bd8 <g_free@plt>
   162c4:	cmp	r7, #0
   162c8:	beq	165f4 <g_strcmp0@plt+0x1428>
   162cc:	bl	1e780 <g_strcmp0@plt+0x95b4>
   162d0:	mov	r7, r0
   162d4:	bl	1e648 <g_strcmp0@plt+0x947c>
   162d8:	mov	r3, #0
   162dc:	ldr	r2, [pc, #164]	; 16388 <g_strcmp0@plt+0x11bc>
   162e0:	ldr	r1, [pc, #360]	; 16450 <g_strcmp0@plt+0x1284>
   162e4:	ldr	r0, [r4, #20]
   162e8:	bl	2a300 <g_strcmp0@plt+0x15134>
   162ec:	ldr	r1, [pc, #272]	; 16404 <g_strcmp0@plt+0x1238>
   162f0:	str	r0, [sp, #28]
   162f4:	bl	151cc <g_strcmp0@plt>
   162f8:	ldr	r2, [sp, #28]
   162fc:	str	r0, [sp, #24]
   16300:	mov	r0, r2
   16304:	bl	14bd8 <g_free@plt>
   16308:	ldr	r3, [sp, #24]
   1630c:	cmp	r3, #0
   16310:	bne	16a88 <g_strcmp0@plt+0x18bc>
   16314:	cmp	r7, #0
   16318:	beq	16324 <g_strcmp0@plt+0x1158>
   1631c:	mov	r0, r7
   16320:	bl	14e90 <g_object_unref@plt>
   16324:	ldr	r0, [r4, #20]
   16328:	b	157f4 <g_strcmp0@plt+0x628>
   1632c:	andeq	fp, r4, r8, asr #19
   16330:	andeq	r4, r3, r8, asr #11
   16334:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   16338:	ldrdeq	r4, [r3], -ip
   1633c:	andeq	r4, r3, r8, lsl #9
   16340:	andeq	r0, r0, lr, ror #6
   16344:	andeq	r4, r3, r4, ror r6
   16348:	andeq	r4, r3, r0, ror #12
   1634c:	andeq	r0, r0, r6, lsl #7
   16350:	andeq	r4, r3, r4, lsr #13
   16354:	andeq	ip, r4, r0, lsr r0
   16358:	strdeq	r4, [r3], -ip
   1635c:	andeq	r4, r3, ip, lsl r6
   16360:			; <UNDEFINED> instruction: 0x0004c4b4
   16364:	andeq	r4, r3, ip, asr #14
   16368:	andeq	r4, r3, r4, asr r7
   1636c:	andeq	r4, r3, r8, ror r7
   16370:	muleq	r3, r4, r7
   16374:	andeq	r0, r0, lr, asr #7
   16378:	andeq	r0, r0, r1, asr #4
   1637c:	andeq	r4, r3, r8, lsr #15
   16380:			; <UNDEFINED> instruction: 0x000347b4
   16384:	andeq	r4, r3, r4, asr #15
   16388:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1638c:	andeq	r4, r3, r8, lsl #16
   16390:	andeq	r8, r3, r4, lsr #20
   16394:	andeq	r5, r3, ip, lsr #25
   16398:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1639c:	strdeq	r4, [r3], -ip
   163a0:	andeq	r4, r3, r0, lsr #18
   163a4:			; <UNDEFINED> instruction: 0x00037ab0
   163a8:	andeq	r7, r3, r0, ror #19
   163ac:	andeq	r7, r3, r8, asr #24
   163b0:	andeq	r4, r3, r4, asr #18
   163b4:	andeq	r4, r3, r4, asr r9
   163b8:	andeq	r4, r3, r4, ror #18
   163bc:	andeq	r4, r3, ip, ror r8
   163c0:	andeq	r4, r3, r4, lsl #31
   163c4:	andeq	r4, r3, ip, ror r9
   163c8:	muleq	r3, ip, r9
   163cc:	andeq	r8, r3, ip, lsl #16
   163d0:	andeq	r8, r3, r0, asr #3
   163d4:	andeq	r8, r3, r4, lsl #5
   163d8:	andeq	r8, r3, r0, asr #12
   163dc:	andeq	r4, r3, ip, lsl #16
   163e0:	andeq	r4, r3, ip, lsl r8
   163e4:	andeq	r4, r3, r8, lsr #16
   163e8:	andeq	r4, r3, r0, lsr r8
   163ec:	andeq	r4, r3, r8, lsr r8
   163f0:	andeq	r4, r3, r4, asr r8
   163f4:	andeq	r4, r3, r0, asr #16
   163f8:	andeq	r4, r3, ip, asr r8
   163fc:			; <UNDEFINED> instruction: 0x000383b4
   16400:	strdeq	r4, [r3], -ip
   16404:	ldrdeq	r4, [r3], -r0
   16408:	andeq	r5, r1, ip, lsl r3
   1640c:	andeq	r5, r1, ip, ror r3
   16410:	strdeq	r5, [r1], -r4
   16414:	andeq	r4, r3, r4, lsr #19
   16418:	andeq	r5, r1, r0, lsr #6
   1641c:	ldrdeq	r5, [r1], -r8
   16420:	andeq	r5, r1, r8, lsl #6
   16424:	andeq	r4, r3, r4, lsl #19
   16428:	andeq	r4, r3, r4, ror #15
   1642c:	andeq	r4, r3, r4, asr #17
   16430:			; <UNDEFINED> instruction: 0x000348b8
   16434:	andeq	r4, r3, r8, lsr #17
   16438:	andeq	r4, r3, r0, lsr #17
   1643c:	muleq	r3, ip, r8
   16440:	muleq	r3, r8, r8
   16444:	andeq	r4, r3, r4, lsl #17
   16448:	ldrdeq	r4, [r3], -ip
   1644c:	andeq	r4, r3, r8, ror #16
   16450:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   16454:	ldrdeq	r4, [r3], -ip
   16458:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1645c:	andeq	r4, r3, ip, lsl #14
   16460:	andeq	r4, r3, r0, asr #11
   16464:	andeq	r4, r3, r4, lsr r6
   16468:	andeq	r4, r3, ip, lsr r8
   1646c:	mov	r2, r7
   16470:	mov	r1, r7
   16474:	ldr	r0, [pc, #-116]	; 16408 <g_strcmp0@plt+0x123c>
   16478:	bl	14500 <g_cclosure_new@plt>
   1647c:	mov	r2, r7
   16480:	mov	r1, r7
   16484:	str	r0, [sp, #28]
   16488:	ldr	r0, [pc, #-132]	; 1640c <g_strcmp0@plt+0x1240>
   1648c:	bl	14500 <g_cclosure_new@plt>
   16490:	mov	r2, r7
   16494:	mov	r1, r7
   16498:	str	r0, [sp, #24]
   1649c:	ldr	r0, [pc, #-148]	; 16410 <g_strcmp0@plt+0x1244>
   164a0:	bl	14500 <g_cclosure_new@plt>
   164a4:	ldr	r3, [sp, #24]
   164a8:	mov	r2, r7
   164ac:	str	r3, [sp]
   164b0:	ldr	r1, [pc, #-164]	; 16414 <g_strcmp0@plt+0x1248>
   164b4:	ldr	r3, [sp, #28]
   164b8:	str	r0, [sp, #4]
   164bc:	mov	r0, #2
   164c0:	bl	144d0 <g_bus_own_name_with_closures@plt>
   164c4:	b	15bac <g_strcmp0@plt+0x9e0>
   164c8:	mov	r2, r7
   164cc:	mov	r1, r7
   164d0:	ldr	r0, [pc, #-192]	; 16418 <g_strcmp0@plt+0x124c>
   164d4:	bl	14500 <g_cclosure_new@plt>
   164d8:	mov	r2, r7
   164dc:	mov	r1, r7
   164e0:	str	r0, [sp, #28]
   164e4:	ldr	r0, [pc, #-208]	; 1641c <g_strcmp0@plt+0x1250>
   164e8:	bl	14500 <g_cclosure_new@plt>
   164ec:	mov	r2, r7
   164f0:	mov	r1, r7
   164f4:	str	r0, [sp, #24]
   164f8:	ldr	r0, [pc, #-224]	; 16420 <g_strcmp0@plt+0x1254>
   164fc:	bl	14500 <g_cclosure_new@plt>
   16500:	ldr	r3, [sp, #24]
   16504:	mov	r2, r7
   16508:	str	r3, [sp]
   1650c:	ldr	r1, [pc, #-240]	; 16424 <g_strcmp0@plt+0x1258>
   16510:	ldr	r3, [sp, #28]
   16514:	str	r0, [sp, #4]
   16518:	mov	r0, #2
   1651c:	bl	144d0 <g_bus_own_name_with_closures@plt>
   16520:	b	15b74 <g_strcmp0@plt+0x9a8>
   16524:	ldr	r0, [r4, #20]
   16528:	bl	29324 <g_strcmp0@plt+0x14158>
   1652c:	subs	r7, r0, #0
   16530:	beq	16a94 <g_strcmp0@plt+0x18c8>
   16534:	bl	14404 <g_object_ref@plt>
   16538:	ldr	r3, [r4, #128]	; 0x80
   1653c:	cmp	r3, #0
   16540:	mov	r2, r0
   16544:	beq	1655c <g_strcmp0@plt+0x1390>
   16548:	str	r0, [sp, #24]
   1654c:	mov	r0, r3
   16550:	bl	14e90 <g_object_unref@plt>
   16554:	ldr	r2, [sp, #24]
   16558:	mov	r0, r2
   1655c:	str	r2, [r4, #128]	; 0x80
   16560:	bl	2929c <g_strcmp0@plt+0x140d0>
   16564:	mov	r0, r7
   16568:	bl	14e90 <g_object_unref@plt>
   1656c:	b	15b3c <g_strcmp0@plt+0x970>
   16570:	ldr	r0, [sp, #20]
   16574:	bl	1eed8 <g_strcmp0@plt+0x9d0c>
   16578:	mov	r7, r0
   1657c:	bl	1eddc <g_strcmp0@plt+0x9c10>
   16580:	cmp	r7, #0
   16584:	beq	1572c <g_strcmp0@plt+0x560>
   16588:	mov	r0, r7
   1658c:	bl	14e90 <g_object_unref@plt>
   16590:	b	1572c <g_strcmp0@plt+0x560>
   16594:	ldr	r3, [pc, #-340]	; 16448 <g_strcmp0@plt+0x127c>
   16598:	ldr	r2, [pc, #-376]	; 16428 <g_strcmp0@plt+0x125c>
   1659c:	ldr	r1, [pc, #-340]	; 16450 <g_strcmp0@plt+0x1284>
   165a0:	ldr	r0, [r4, #20]
   165a4:	bl	2a300 <g_strcmp0@plt+0x15134>
   165a8:	mov	r7, r0
   165ac:	bl	14bd8 <g_free@plt>
   165b0:	cmp	r7, #0
   165b4:	beq	157b0 <g_strcmp0@plt+0x5e4>
   165b8:	bl	1bbc0 <g_strcmp0@plt+0x69f4>
   165bc:	subs	r7, r0, #0
   165c0:	bne	15778 <g_strcmp0@plt+0x5ac>
   165c4:	ldr	r0, [r4, #32]
   165c8:	cmp	r0, #0
   165cc:	beq	16c48 <g_strcmp0@plt+0x1a7c>
   165d0:	bl	14e90 <g_object_unref@plt>
   165d4:	mov	r0, r7
   165d8:	str	r7, [r4, #32]
   165dc:	bl	1b734 <g_strcmp0@plt+0x6568>
   165e0:	b	157b0 <g_strcmp0@plt+0x5e4>
   165e4:	mov	r0, r7
   165e8:	str	r3, [r4, #108]	; 0x6c
   165ec:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   165f0:	b	15968 <g_strcmp0@plt+0x79c>
   165f4:	ldr	r3, [pc, #-436]	; 16448 <g_strcmp0@plt+0x127c>
   165f8:	ldr	r2, [pc, #-468]	; 1642c <g_strcmp0@plt+0x1260>
   165fc:	ldr	r1, [pc, #-436]	; 16450 <g_strcmp0@plt+0x1284>
   16600:	ldr	r0, [r4, #20]
   16604:	bl	2a300 <g_strcmp0@plt+0x15134>
   16608:	mov	r7, r0
   1660c:	bl	14bd8 <g_free@plt>
   16610:	cmp	r7, #0
   16614:	beq	162cc <g_strcmp0@plt+0x1100>
   16618:	ldr	r3, [pc, #-472]	; 16448 <g_strcmp0@plt+0x127c>
   1661c:	ldr	r2, [pc, #-504]	; 1642c <g_strcmp0@plt+0x1260>
   16620:	ldr	r1, [pc, #-472]	; 16450 <g_strcmp0@plt+0x1284>
   16624:	ldr	r0, [r4, #20]
   16628:	bl	2a300 <g_strcmp0@plt+0x15134>
   1662c:	str	r0, [sp, #24]
   16630:	bl	1b6ec <g_strcmp0@plt+0x6520>
   16634:	ldr	r3, [sp, #24]
   16638:	mov	r7, r0
   1663c:	mov	r0, r3
   16640:	bl	14bd8 <g_free@plt>
   16644:	cmp	r7, #0
   16648:	beq	16fb8 <g_strcmp0@plt+0x1dec>
   1664c:	mov	r0, r7
   16650:	bl	14404 <g_object_ref@plt>
   16654:	ldr	r3, [r4, #96]	; 0x60
   16658:	cmp	r3, #0
   1665c:	mov	r2, r0
   16660:	beq	16678 <g_strcmp0@plt+0x14ac>
   16664:	str	r0, [sp, #24]
   16668:	mov	r0, r3
   1666c:	bl	14e90 <g_object_unref@plt>
   16670:	ldr	r2, [sp, #24]
   16674:	mov	r0, r2
   16678:	str	r2, [r4, #96]	; 0x60
   1667c:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16680:	mov	r0, r7
   16684:	bl	14e90 <g_object_unref@plt>
   16688:	b	162cc <g_strcmp0@plt+0x1100>
   1668c:	ldr	r3, [pc, #-588]	; 16448 <g_strcmp0@plt+0x127c>
   16690:	ldr	r2, [pc, #-616]	; 16430 <g_strcmp0@plt+0x1264>
   16694:	ldr	r1, [pc, #-588]	; 16450 <g_strcmp0@plt+0x1284>
   16698:	ldr	r0, [r4, #20]
   1669c:	bl	2a300 <g_strcmp0@plt+0x15134>
   166a0:	mov	r7, r0
   166a4:	bl	14bd8 <g_free@plt>
   166a8:	cmp	r7, #0
   166ac:	beq	16294 <g_strcmp0@plt+0x10c8>
   166b0:	ldr	r3, [pc, #-624]	; 16448 <g_strcmp0@plt+0x127c>
   166b4:	ldr	r2, [pc, #-652]	; 16430 <g_strcmp0@plt+0x1264>
   166b8:	ldr	r1, [pc, #-624]	; 16450 <g_strcmp0@plt+0x1284>
   166bc:	ldr	r0, [r4, #20]
   166c0:	bl	2a300 <g_strcmp0@plt+0x15134>
   166c4:	str	r0, [sp, #24]
   166c8:	bl	1b6ec <g_strcmp0@plt+0x6520>
   166cc:	ldr	r3, [sp, #24]
   166d0:	mov	r7, r0
   166d4:	mov	r0, r3
   166d8:	bl	14bd8 <g_free@plt>
   166dc:	cmp	r7, #0
   166e0:	beq	16f78 <g_strcmp0@plt+0x1dac>
   166e4:	mov	r0, r7
   166e8:	bl	14404 <g_object_ref@plt>
   166ec:	ldr	r3, [r4, #92]	; 0x5c
   166f0:	cmp	r3, #0
   166f4:	mov	r2, r0
   166f8:	beq	16710 <g_strcmp0@plt+0x1544>
   166fc:	str	r0, [sp, #24]
   16700:	mov	r0, r3
   16704:	bl	14e90 <g_object_unref@plt>
   16708:	ldr	r2, [sp, #24]
   1670c:	mov	r0, r2
   16710:	str	r2, [r4, #92]	; 0x5c
   16714:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16718:	mov	r0, r7
   1671c:	bl	14e90 <g_object_unref@plt>
   16720:	b	16294 <g_strcmp0@plt+0x10c8>
   16724:	ldr	r3, [pc, #-740]	; 16448 <g_strcmp0@plt+0x127c>
   16728:	ldr	r2, [pc, #-764]	; 16434 <g_strcmp0@plt+0x1268>
   1672c:	ldr	r1, [pc, #-740]	; 16450 <g_strcmp0@plt+0x1284>
   16730:	ldr	r0, [r4, #20]
   16734:	bl	2a300 <g_strcmp0@plt+0x15134>
   16738:	mov	r7, r0
   1673c:	bl	14bd8 <g_free@plt>
   16740:	cmp	r7, #0
   16744:	beq	1625c <g_strcmp0@plt+0x1090>
   16748:	ldr	r3, [pc, #-776]	; 16448 <g_strcmp0@plt+0x127c>
   1674c:	ldr	r2, [pc, #-800]	; 16434 <g_strcmp0@plt+0x1268>
   16750:	ldr	r1, [pc, #-776]	; 16450 <g_strcmp0@plt+0x1284>
   16754:	ldr	r0, [r4, #20]
   16758:	bl	2a300 <g_strcmp0@plt+0x15134>
   1675c:	str	r0, [sp, #24]
   16760:	bl	1b6ec <g_strcmp0@plt+0x6520>
   16764:	ldr	r3, [sp, #24]
   16768:	mov	r7, r0
   1676c:	mov	r0, r3
   16770:	bl	14bd8 <g_free@plt>
   16774:	cmp	r7, #0
   16778:	beq	16f98 <g_strcmp0@plt+0x1dcc>
   1677c:	mov	r0, r7
   16780:	bl	14404 <g_object_ref@plt>
   16784:	ldr	r3, [r4, #88]	; 0x58
   16788:	cmp	r3, #0
   1678c:	mov	r2, r0
   16790:	beq	167a8 <g_strcmp0@plt+0x15dc>
   16794:	str	r0, [sp, #24]
   16798:	mov	r0, r3
   1679c:	bl	14e90 <g_object_unref@plt>
   167a0:	ldr	r2, [sp, #24]
   167a4:	mov	r0, r2
   167a8:	str	r2, [r4, #88]	; 0x58
   167ac:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   167b0:	mov	r0, r7
   167b4:	bl	14e90 <g_object_unref@plt>
   167b8:	b	1625c <g_strcmp0@plt+0x1090>
   167bc:	ldr	r3, [pc, #-892]	; 16448 <g_strcmp0@plt+0x127c>
   167c0:	ldr	r2, [pc, #-912]	; 16438 <g_strcmp0@plt+0x126c>
   167c4:	ldr	r1, [pc, #-892]	; 16450 <g_strcmp0@plt+0x1284>
   167c8:	ldr	r0, [r4, #20]
   167cc:	bl	2a300 <g_strcmp0@plt+0x15134>
   167d0:	mov	r7, r0
   167d4:	bl	14bd8 <g_free@plt>
   167d8:	cmp	r7, #0
   167dc:	beq	16224 <g_strcmp0@plt+0x1058>
   167e0:	ldr	r3, [pc, #-928]	; 16448 <g_strcmp0@plt+0x127c>
   167e4:	ldr	r2, [pc, #-948]	; 16438 <g_strcmp0@plt+0x126c>
   167e8:	ldr	r1, [pc, #-928]	; 16450 <g_strcmp0@plt+0x1284>
   167ec:	ldr	r0, [r4, #20]
   167f0:	bl	2a300 <g_strcmp0@plt+0x15134>
   167f4:	str	r0, [sp, #24]
   167f8:	bl	1b6ec <g_strcmp0@plt+0x6520>
   167fc:	ldr	r3, [sp, #24]
   16800:	mov	r7, r0
   16804:	mov	r0, r3
   16808:	bl	14bd8 <g_free@plt>
   1680c:	cmp	r7, #0
   16810:	beq	16ef4 <g_strcmp0@plt+0x1d28>
   16814:	mov	r0, r7
   16818:	bl	14404 <g_object_ref@plt>
   1681c:	ldr	r3, [r4, #84]	; 0x54
   16820:	cmp	r3, #0
   16824:	mov	r2, r0
   16828:	beq	16840 <g_strcmp0@plt+0x1674>
   1682c:	str	r0, [sp, #24]
   16830:	mov	r0, r3
   16834:	bl	14e90 <g_object_unref@plt>
   16838:	ldr	r2, [sp, #24]
   1683c:	mov	r0, r2
   16840:	str	r2, [r4, #84]	; 0x54
   16844:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16848:	mov	r0, r7
   1684c:	bl	14e90 <g_object_unref@plt>
   16850:	b	16224 <g_strcmp0@plt+0x1058>
   16854:	ldr	r3, [pc, #-1044]	; 16448 <g_strcmp0@plt+0x127c>
   16858:	ldr	r2, [pc, #-1060]	; 1643c <g_strcmp0@plt+0x1270>
   1685c:	ldr	r1, [pc, #-1044]	; 16450 <g_strcmp0@plt+0x1284>
   16860:	ldr	r0, [r4, #20]
   16864:	bl	2a300 <g_strcmp0@plt+0x15134>
   16868:	mov	r7, r0
   1686c:	bl	14bd8 <g_free@plt>
   16870:	cmp	r7, #0
   16874:	beq	161ec <g_strcmp0@plt+0x1020>
   16878:	ldr	r3, [pc, #-1080]	; 16448 <g_strcmp0@plt+0x127c>
   1687c:	ldr	r2, [pc, #-1096]	; 1643c <g_strcmp0@plt+0x1270>
   16880:	ldr	r1, [pc, #-1080]	; 16450 <g_strcmp0@plt+0x1284>
   16884:	ldr	r0, [r4, #20]
   16888:	bl	2a300 <g_strcmp0@plt+0x15134>
   1688c:	str	r0, [sp, #24]
   16890:	bl	1b6ec <g_strcmp0@plt+0x6520>
   16894:	ldr	r3, [sp, #24]
   16898:	mov	r7, r0
   1689c:	mov	r0, r3
   168a0:	bl	14bd8 <g_free@plt>
   168a4:	cmp	r7, #0
   168a8:	beq	16f14 <g_strcmp0@plt+0x1d48>
   168ac:	mov	r0, r7
   168b0:	bl	14404 <g_object_ref@plt>
   168b4:	ldr	r3, [r4, #80]	; 0x50
   168b8:	cmp	r3, #0
   168bc:	mov	r2, r0
   168c0:	beq	168d8 <g_strcmp0@plt+0x170c>
   168c4:	str	r0, [sp, #24]
   168c8:	mov	r0, r3
   168cc:	bl	14e90 <g_object_unref@plt>
   168d0:	ldr	r2, [sp, #24]
   168d4:	mov	r0, r2
   168d8:	str	r2, [r4, #80]	; 0x50
   168dc:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   168e0:	mov	r0, r7
   168e4:	bl	14e90 <g_object_unref@plt>
   168e8:	b	161ec <g_strcmp0@plt+0x1020>
   168ec:	ldr	r3, [pc, #-1196]	; 16448 <g_strcmp0@plt+0x127c>
   168f0:	ldr	r2, [pc, #-1208]	; 16440 <g_strcmp0@plt+0x1274>
   168f4:	ldr	r1, [pc, #-1196]	; 16450 <g_strcmp0@plt+0x1284>
   168f8:	ldr	r0, [r4, #20]
   168fc:	bl	2a300 <g_strcmp0@plt+0x15134>
   16900:	mov	r7, r0
   16904:	bl	14bd8 <g_free@plt>
   16908:	cmp	r7, #0
   1690c:	beq	161b4 <g_strcmp0@plt+0xfe8>
   16910:	ldr	r3, [pc, #-1232]	; 16448 <g_strcmp0@plt+0x127c>
   16914:	ldr	r2, [pc, #-1244]	; 16440 <g_strcmp0@plt+0x1274>
   16918:	ldr	r1, [pc, #-1232]	; 16450 <g_strcmp0@plt+0x1284>
   1691c:	ldr	r0, [r4, #20]
   16920:	bl	2a300 <g_strcmp0@plt+0x15134>
   16924:	str	r0, [sp, #24]
   16928:	bl	1b6ec <g_strcmp0@plt+0x6520>
   1692c:	ldr	r3, [sp, #24]
   16930:	mov	r7, r0
   16934:	mov	r0, r3
   16938:	bl	14bd8 <g_free@plt>
   1693c:	cmp	r7, #0
   16940:	beq	16f34 <g_strcmp0@plt+0x1d68>
   16944:	mov	r0, r7
   16948:	bl	14404 <g_object_ref@plt>
   1694c:	ldr	r3, [r4, #76]	; 0x4c
   16950:	cmp	r3, #0
   16954:	mov	r2, r0
   16958:	beq	16970 <g_strcmp0@plt+0x17a4>
   1695c:	str	r0, [sp, #24]
   16960:	mov	r0, r3
   16964:	bl	14e90 <g_object_unref@plt>
   16968:	ldr	r2, [sp, #24]
   1696c:	mov	r0, r2
   16970:	str	r2, [r4, #76]	; 0x4c
   16974:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16978:	mov	r0, r7
   1697c:	bl	14e90 <g_object_unref@plt>
   16980:	b	161b4 <g_strcmp0@plt+0xfe8>
   16984:	ldr	r3, [pc, #-1348]	; 16448 <g_strcmp0@plt+0x127c>
   16988:	ldr	r2, [pc, #-1356]	; 16444 <g_strcmp0@plt+0x1278>
   1698c:	ldr	r1, [pc, #-1348]	; 16450 <g_strcmp0@plt+0x1284>
   16990:	ldr	r0, [r4, #20]
   16994:	bl	2a300 <g_strcmp0@plt+0x15134>
   16998:	mov	r7, r0
   1699c:	bl	14bd8 <g_free@plt>
   169a0:	cmp	r7, #0
   169a4:	beq	1617c <g_strcmp0@plt+0xfb0>
   169a8:	bl	1cadc <g_strcmp0@plt+0x7910>
   169ac:	subs	r7, r0, #0
   169b0:	beq	16f54 <g_strcmp0@plt+0x1d88>
   169b4:	bl	14404 <g_object_ref@plt>
   169b8:	ldr	r3, [r4, #72]	; 0x48
   169bc:	cmp	r3, #0
   169c0:	mov	r2, r0
   169c4:	beq	169dc <g_strcmp0@plt+0x1810>
   169c8:	str	r0, [sp, #24]
   169cc:	mov	r0, r3
   169d0:	bl	14e90 <g_object_unref@plt>
   169d4:	ldr	r2, [sp, #24]
   169d8:	mov	r0, r2
   169dc:	str	r2, [r4, #72]	; 0x48
   169e0:	bl	1c9d0 <g_strcmp0@plt+0x7804>
   169e4:	mov	r0, r7
   169e8:	bl	14e90 <g_object_unref@plt>
   169ec:	b	1617c <g_strcmp0@plt+0xfb0>
   169f0:	ldr	r3, [pc, #-1456]	; 16448 <g_strcmp0@plt+0x127c>
   169f4:	ldr	r2, [pc, #-1456]	; 1644c <g_strcmp0@plt+0x1280>
   169f8:	ldr	r1, [pc, #-1456]	; 16450 <g_strcmp0@plt+0x1284>
   169fc:	ldr	r0, [r4, #20]
   16a00:	bl	2a300 <g_strcmp0@plt+0x15134>
   16a04:	mov	r7, r0
   16a08:	bl	14bd8 <g_free@plt>
   16a0c:	cmp	r7, #0
   16a10:	beq	160dc <g_strcmp0@plt+0xf10>
   16a14:	ldr	r3, [pc, #-1492]	; 16448 <g_strcmp0@plt+0x127c>
   16a18:	ldr	r2, [pc, #-1492]	; 1644c <g_strcmp0@plt+0x1280>
   16a1c:	ldr	r1, [pc, #-1492]	; 16450 <g_strcmp0@plt+0x1284>
   16a20:	ldr	r0, [r4, #20]
   16a24:	bl	2a300 <g_strcmp0@plt+0x15134>
   16a28:	str	r0, [sp, #24]
   16a2c:	bl	1b6ec <g_strcmp0@plt+0x6520>
   16a30:	ldr	r3, [sp, #24]
   16a34:	mov	r7, r0
   16a38:	mov	r0, r3
   16a3c:	bl	14bd8 <g_free@plt>
   16a40:	cmp	r7, #0
   16a44:	beq	16ed4 <g_strcmp0@plt+0x1d08>
   16a48:	mov	r0, r7
   16a4c:	bl	14404 <g_object_ref@plt>
   16a50:	ldr	r3, [r4, #64]	; 0x40
   16a54:	cmp	r3, #0
   16a58:	mov	r2, r0
   16a5c:	beq	16a74 <g_strcmp0@plt+0x18a8>
   16a60:	str	r0, [sp, #24]
   16a64:	mov	r0, r3
   16a68:	bl	14e90 <g_object_unref@plt>
   16a6c:	ldr	r2, [sp, #24]
   16a70:	mov	r0, r2
   16a74:	str	r2, [r4, #64]	; 0x40
   16a78:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16a7c:	mov	r0, r7
   16a80:	bl	14e90 <g_object_unref@plt>
   16a84:	b	160dc <g_strcmp0@plt+0xf10>
   16a88:	ldr	r0, [pc, #-1596]	; 16454 <g_strcmp0@plt+0x1288>
   16a8c:	bl	29704 <g_strcmp0@plt+0x14538>
   16a90:	b	16314 <g_strcmp0@plt+0x1148>
   16a94:	ldr	r3, [r4, #128]	; 0x80
   16a98:	cmp	r3, #0
   16a9c:	beq	16ab0 <g_strcmp0@plt+0x18e4>
   16aa0:	mov	r0, r3
   16aa4:	bl	14e90 <g_object_unref@plt>
   16aa8:	mov	r0, r7
   16aac:	str	r7, [r4, #128]	; 0x80
   16ab0:	bl	2929c <g_strcmp0@plt+0x140d0>
   16ab4:	b	15b3c <g_strcmp0@plt+0x970>
   16ab8:	ldr	r2, [pc, #-1640]	; 16458 <g_strcmp0@plt+0x128c>
   16abc:	mov	r1, #32
   16ac0:	bl	14668 <g_log@plt>
   16ac4:	ldr	r0, [pc, #-1644]	; 16460 <g_strcmp0@plt+0x1294>
   16ac8:	bl	147e8 <g_strdup@plt>
   16acc:	mov	r5, r0
   16ad0:	ldr	r0, [r4, #4]
   16ad4:	bl	14bd8 <g_free@plt>
   16ad8:	ldr	r0, [r4, #8]
   16adc:	str	r5, [r4, #4]
   16ae0:	cmp	r0, #0
   16ae4:	bne	15524 <g_strcmp0@plt+0x358>
   16ae8:	ldr	r2, [pc, #-1684]	; 1645c <g_strcmp0@plt+0x1290>
   16aec:	mov	r1, #32
   16af0:	bl	14668 <g_log@plt>
   16af4:	ldr	r0, [pc, #-1692]	; 16460 <g_strcmp0@plt+0x1294>
   16af8:	bl	147e8 <g_strdup@plt>
   16afc:	mov	r5, r0
   16b00:	ldr	r0, [r4, #8]
   16b04:	bl	14bd8 <g_free@plt>
   16b08:	str	r5, [r4, #8]
   16b0c:	b	15524 <g_strcmp0@plt+0x358>
   16b10:	bl	296a8 <g_strcmp0@plt+0x144dc>
   16b14:	subs	r7, r0, #0
   16b18:	beq	16dd8 <g_strcmp0@plt+0x1c0c>
   16b1c:	bl	14404 <g_object_ref@plt>
   16b20:	ldr	r3, [r4, #28]
   16b24:	cmp	r3, #0
   16b28:	mov	r2, r0
   16b2c:	beq	16b44 <g_strcmp0@plt+0x1978>
   16b30:	str	r0, [sp, #24]
   16b34:	mov	r0, r3
   16b38:	bl	14e90 <g_object_unref@plt>
   16b3c:	ldr	r2, [sp, #24]
   16b40:	mov	r0, r2
   16b44:	str	r2, [r4, #28]
   16b48:	bl	29344 <g_strcmp0@plt+0x14178>
   16b4c:	mov	r0, r7
   16b50:	bl	14e90 <g_object_unref@plt>
   16b54:	b	15748 <g_strcmp0@plt+0x57c>
   16b58:	ldr	r3, [r4, #120]	; 0x78
   16b5c:	cmp	r3, #0
   16b60:	beq	16b74 <g_strcmp0@plt+0x19a8>
   16b64:	mov	r0, r3
   16b68:	bl	14e90 <g_object_unref@plt>
   16b6c:	mov	r0, r7
   16b70:	str	r7, [r4, #120]	; 0x78
   16b74:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16b78:	b	15aa8 <g_strcmp0@plt+0x8dc>
   16b7c:	ldr	r0, [r4, #124]	; 0x7c
   16b80:	cmp	r0, #0
   16b84:	beq	15b04 <g_strcmp0@plt+0x938>
   16b88:	bl	14e90 <g_object_unref@plt>
   16b8c:	str	r7, [r4, #124]	; 0x7c
   16b90:	b	15b04 <g_strcmp0@plt+0x938>
   16b94:	ldr	r3, [r4, #108]	; 0x6c
   16b98:	cmp	r3, #0
   16b9c:	beq	16bb0 <g_strcmp0@plt+0x19e4>
   16ba0:	mov	r0, r3
   16ba4:	bl	14e90 <g_object_unref@plt>
   16ba8:	mov	r0, r7
   16bac:	str	r7, [r4, #108]	; 0x6c
   16bb0:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16bb4:	b	15970 <g_strcmp0@plt+0x7a4>
   16bb8:	ldr	r3, [r4, #104]	; 0x68
   16bbc:	cmp	r3, #0
   16bc0:	beq	16bd4 <g_strcmp0@plt+0x1a08>
   16bc4:	mov	r0, r3
   16bc8:	bl	14e90 <g_object_unref@plt>
   16bcc:	mov	r0, r7
   16bd0:	str	r7, [r4, #104]	; 0x68
   16bd4:	bl	28bb8 <g_strcmp0@plt+0x139ec>
   16bd8:	b	1590c <g_strcmp0@plt+0x740>
   16bdc:	ldr	r3, [r4, #100]	; 0x64
   16be0:	cmp	r3, #0
   16be4:	beq	16bf8 <g_strcmp0@plt+0x1a2c>
   16be8:	mov	r0, r3
   16bec:	bl	14e90 <g_object_unref@plt>
   16bf0:	mov	r0, r7
   16bf4:	str	r7, [r4, #100]	; 0x64
   16bf8:	bl	28bb8 <g_strcmp0@plt+0x139ec>
   16bfc:	b	1585c <g_strcmp0@plt+0x690>
   16c00:	ldr	r3, [r4, #116]	; 0x74
   16c04:	cmp	r3, #0
   16c08:	beq	16c1c <g_strcmp0@plt+0x1a50>
   16c0c:	mov	r0, r3
   16c10:	bl	14e90 <g_object_unref@plt>
   16c14:	mov	r0, r7
   16c18:	str	r7, [r4, #116]	; 0x74
   16c1c:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16c20:	b	15a40 <g_strcmp0@plt+0x874>
   16c24:	ldr	r3, [r4, #112]	; 0x70
   16c28:	cmp	r3, #0
   16c2c:	beq	16c40 <g_strcmp0@plt+0x1a74>
   16c30:	mov	r0, r3
   16c34:	bl	14e90 <g_object_unref@plt>
   16c38:	mov	r0, r7
   16c3c:	str	r7, [r4, #112]	; 0x70
   16c40:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16c44:	b	159d8 <g_strcmp0@plt+0x80c>
   16c48:	mov	r0, #0
   16c4c:	bl	1b734 <g_strcmp0@plt+0x6568>
   16c50:	b	157b0 <g_strcmp0@plt+0x5e4>
   16c54:	bl	1be80 <g_strcmp0@plt+0x6cb4>
   16c58:	subs	r7, r0, #0
   16c5c:	beq	16dfc <g_strcmp0@plt+0x1c30>
   16c60:	bl	14404 <g_object_ref@plt>
   16c64:	ldr	r3, [r4, #52]	; 0x34
   16c68:	cmp	r3, #0
   16c6c:	mov	r2, r0
   16c70:	beq	16c88 <g_strcmp0@plt+0x1abc>
   16c74:	str	r0, [sp, #24]
   16c78:	mov	r0, r3
   16c7c:	bl	14e90 <g_object_unref@plt>
   16c80:	ldr	r2, [sp, #24]
   16c84:	mov	r0, r2
   16c88:	str	r2, [r4, #52]	; 0x34
   16c8c:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16c90:	mov	r0, r7
   16c94:	bl	14e90 <g_object_unref@plt>
   16c98:	b	15f4c <g_strcmp0@plt+0xd80>
   16c9c:	bl	1c768 <g_strcmp0@plt+0x759c>
   16ca0:	subs	r7, r0, #0
   16ca4:	beq	16e48 <g_strcmp0@plt+0x1c7c>
   16ca8:	bl	14404 <g_object_ref@plt>
   16cac:	ldr	r3, [r4, #56]	; 0x38
   16cb0:	cmp	r3, #0
   16cb4:	mov	r2, r0
   16cb8:	beq	16cd0 <g_strcmp0@plt+0x1b04>
   16cbc:	str	r0, [sp, #24]
   16cc0:	mov	r0, r3
   16cc4:	bl	14e90 <g_object_unref@plt>
   16cc8:	ldr	r2, [sp, #24]
   16ccc:	mov	r0, r2
   16cd0:	str	r2, [r4, #56]	; 0x38
   16cd4:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16cd8:	mov	r0, r7
   16cdc:	bl	14e90 <g_object_unref@plt>
   16ce0:	b	1603c <g_strcmp0@plt+0xe70>
   16ce4:	ldr	r4, [r5]
   16ce8:	bl	14734 <g_option_error_quark@plt>
   16cec:	cmp	r4, r0
   16cf0:	bne	15420 <g_strcmp0@plt+0x254>
   16cf4:	ldr	r4, [sp, #40]	; 0x28
   16cf8:	mov	ip, #0
   16cfc:	mov	r0, ip
   16d00:	ldr	r3, [r4, #8]
   16d04:	ldr	r2, [pc, #-2216]	; 16464 <g_strcmp0@plt+0x1298>
   16d08:	mov	r1, #8
   16d0c:	str	ip, [sp, #40]	; 0x28
   16d10:	bl	14668 <g_log@plt>
   16d14:	mov	r0, r4
   16d18:	bl	1453c <g_error_free@plt>
   16d1c:	mvn	r0, #0
   16d20:	b	154c8 <g_strcmp0@plt+0x2fc>
   16d24:	ldr	r3, [r4, #60]	; 0x3c
   16d28:	cmp	r3, #0
   16d2c:	beq	16d40 <g_strcmp0@plt+0x1b74>
   16d30:	mov	r0, r3
   16d34:	bl	14e90 <g_object_unref@plt>
   16d38:	mov	r0, r7
   16d3c:	str	r7, [r4, #60]	; 0x3c
   16d40:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16d44:	b	160a4 <g_strcmp0@plt+0xed8>
   16d48:	ldr	r3, [r4, #44]	; 0x2c
   16d4c:	cmp	r3, #0
   16d50:	beq	16d64 <g_strcmp0@plt+0x1b98>
   16d54:	mov	r0, r3
   16d58:	bl	14e90 <g_object_unref@plt>
   16d5c:	mov	r0, r7
   16d60:	str	r7, [r4, #44]	; 0x2c
   16d64:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16d68:	b	15df4 <g_strcmp0@plt+0xc28>
   16d6c:	ldr	r3, [r4, #48]	; 0x30
   16d70:	cmp	r3, #0
   16d74:	beq	16d88 <g_strcmp0@plt+0x1bbc>
   16d78:	mov	r0, r3
   16d7c:	bl	14e90 <g_object_unref@plt>
   16d80:	mov	r0, r7
   16d84:	str	r7, [r4, #48]	; 0x30
   16d88:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16d8c:	b	15e5c <g_strcmp0@plt+0xc90>
   16d90:	ldr	r3, [r4, #68]	; 0x44
   16d94:	cmp	r3, #0
   16d98:	beq	16dac <g_strcmp0@plt+0x1be0>
   16d9c:	mov	r0, r3
   16da0:	bl	14e90 <g_object_unref@plt>
   16da4:	mov	r0, r7
   16da8:	str	r7, [r4, #68]	; 0x44
   16dac:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16db0:	b	16144 <g_strcmp0@plt+0xf78>
   16db4:	ldr	r3, [r4, #40]	; 0x28
   16db8:	cmp	r3, #0
   16dbc:	beq	16dd0 <g_strcmp0@plt+0x1c04>
   16dc0:	mov	r0, r3
   16dc4:	bl	14e90 <g_object_unref@plt>
   16dc8:	mov	r0, r7
   16dcc:	str	r7, [r4, #40]	; 0x28
   16dd0:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16dd4:	b	15d8c <g_strcmp0@plt+0xbc0>
   16dd8:	ldr	r3, [r4, #28]
   16ddc:	cmp	r3, #0
   16de0:	beq	16df4 <g_strcmp0@plt+0x1c28>
   16de4:	mov	r0, r3
   16de8:	bl	14e90 <g_object_unref@plt>
   16dec:	mov	r0, r7
   16df0:	str	r7, [r4, #28]
   16df4:	bl	29344 <g_strcmp0@plt+0x14178>
   16df8:	b	15748 <g_strcmp0@plt+0x57c>
   16dfc:	ldr	r3, [r4, #52]	; 0x34
   16e00:	cmp	r3, #0
   16e04:	beq	16e18 <g_strcmp0@plt+0x1c4c>
   16e08:	mov	r0, r3
   16e0c:	bl	14e90 <g_object_unref@plt>
   16e10:	mov	r0, r7
   16e14:	str	r7, [r4, #52]	; 0x34
   16e18:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16e1c:	b	15f4c <g_strcmp0@plt+0xd80>
   16e20:	ldr	r3, [r4, #56]	; 0x38
   16e24:	cmp	r3, #0
   16e28:	beq	16e40 <g_strcmp0@plt+0x1c74>
   16e2c:	mov	r0, r3
   16e30:	bl	14e90 <g_object_unref@plt>
   16e34:	ldr	r3, [sp, #24]
   16e38:	mov	r0, r3
   16e3c:	str	r3, [r4, #56]	; 0x38
   16e40:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16e44:	b	16034 <g_strcmp0@plt+0xe68>
   16e48:	ldr	r3, [r4, #56]	; 0x38
   16e4c:	cmp	r3, #0
   16e50:	beq	16e64 <g_strcmp0@plt+0x1c98>
   16e54:	mov	r0, r3
   16e58:	bl	14e90 <g_object_unref@plt>
   16e5c:	mov	r0, r7
   16e60:	str	r7, [r4, #56]	; 0x38
   16e64:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16e68:	b	1603c <g_strcmp0@plt+0xe70>
   16e6c:	ldr	r3, [r4, #52]	; 0x34
   16e70:	cmp	r3, #0
   16e74:	beq	16e8c <g_strcmp0@plt+0x1cc0>
   16e78:	mov	r0, r3
   16e7c:	bl	14e90 <g_object_unref@plt>
   16e80:	ldr	r3, [sp, #24]
   16e84:	mov	r0, r3
   16e88:	str	r3, [r4, #52]	; 0x34
   16e8c:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16e90:	b	15f44 <g_strcmp0@plt+0xd78>
   16e94:	ldr	r0, [pc, #-2612]	; 16468 <g_strcmp0@plt+0x129c>
   16e98:	bl	147e8 <g_strdup@plt>
   16e9c:	str	r0, [sp, #24]
   16ea0:	mov	r0, r7
   16ea4:	bl	14bd8 <g_free@plt>
   16ea8:	ldr	r3, [sp, #24]
   16eac:	mov	r7, r3
   16eb0:	b	15fc8 <g_strcmp0@plt+0xdfc>
   16eb4:	ldr	r0, [pc, #-2644]	; 16468 <g_strcmp0@plt+0x129c>
   16eb8:	bl	147e8 <g_strdup@plt>
   16ebc:	str	r0, [sp, #24]
   16ec0:	mov	r0, r7
   16ec4:	bl	14bd8 <g_free@plt>
   16ec8:	ldr	r3, [sp, #24]
   16ecc:	mov	r7, r3
   16ed0:	b	15ed8 <g_strcmp0@plt+0xd0c>
   16ed4:	ldr	r0, [r4, #64]	; 0x40
   16ed8:	cmp	r0, #0
   16edc:	beq	16eec <g_strcmp0@plt+0x1d20>
   16ee0:	bl	14e90 <g_object_unref@plt>
   16ee4:	mov	r0, r7
   16ee8:	str	r7, [r4, #64]	; 0x40
   16eec:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16ef0:	b	160dc <g_strcmp0@plt+0xf10>
   16ef4:	ldr	r0, [r4, #84]	; 0x54
   16ef8:	cmp	r0, #0
   16efc:	beq	16f0c <g_strcmp0@plt+0x1d40>
   16f00:	bl	14e90 <g_object_unref@plt>
   16f04:	mov	r0, r7
   16f08:	str	r7, [r4, #84]	; 0x54
   16f0c:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16f10:	b	16224 <g_strcmp0@plt+0x1058>
   16f14:	ldr	r0, [r4, #80]	; 0x50
   16f18:	cmp	r0, #0
   16f1c:	beq	16f2c <g_strcmp0@plt+0x1d60>
   16f20:	bl	14e90 <g_object_unref@plt>
   16f24:	mov	r0, r7
   16f28:	str	r7, [r4, #80]	; 0x50
   16f2c:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16f30:	b	161ec <g_strcmp0@plt+0x1020>
   16f34:	ldr	r0, [r4, #76]	; 0x4c
   16f38:	cmp	r0, #0
   16f3c:	beq	16f4c <g_strcmp0@plt+0x1d80>
   16f40:	bl	14e90 <g_object_unref@plt>
   16f44:	mov	r0, r7
   16f48:	str	r7, [r4, #76]	; 0x4c
   16f4c:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16f50:	b	161b4 <g_strcmp0@plt+0xfe8>
   16f54:	ldr	r3, [r4, #72]	; 0x48
   16f58:	cmp	r3, #0
   16f5c:	beq	16f70 <g_strcmp0@plt+0x1da4>
   16f60:	mov	r0, r3
   16f64:	bl	14e90 <g_object_unref@plt>
   16f68:	mov	r0, r7
   16f6c:	str	r7, [r4, #72]	; 0x48
   16f70:	bl	1c9d0 <g_strcmp0@plt+0x7804>
   16f74:	b	1617c <g_strcmp0@plt+0xfb0>
   16f78:	ldr	r0, [r4, #92]	; 0x5c
   16f7c:	cmp	r0, #0
   16f80:	beq	16f90 <g_strcmp0@plt+0x1dc4>
   16f84:	bl	14e90 <g_object_unref@plt>
   16f88:	mov	r0, r7
   16f8c:	str	r7, [r4, #92]	; 0x5c
   16f90:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16f94:	b	16294 <g_strcmp0@plt+0x10c8>
   16f98:	ldr	r0, [r4, #88]	; 0x58
   16f9c:	cmp	r0, #0
   16fa0:	beq	16fb0 <g_strcmp0@plt+0x1de4>
   16fa4:	bl	14e90 <g_object_unref@plt>
   16fa8:	mov	r0, r7
   16fac:	str	r7, [r4, #88]	; 0x58
   16fb0:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16fb4:	b	1625c <g_strcmp0@plt+0x1090>
   16fb8:	ldr	r0, [r4, #96]	; 0x60
   16fbc:	cmp	r0, #0
   16fc0:	beq	16fd0 <g_strcmp0@plt+0x1e04>
   16fc4:	bl	14e90 <g_object_unref@plt>
   16fc8:	mov	r0, r7
   16fcc:	str	r7, [r4, #96]	; 0x60
   16fd0:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   16fd4:	b	162cc <g_strcmp0@plt+0x1100>
   16fd8:	bl	14b6c <__stack_chk_fail@plt>
   16fdc:	mov	r1, #0
   16fe0:	b	143d4 <g_object_new@plt>
   16fe4:	push	{r4, r5, r6, lr}
   16fe8:	mcr	15, 0, r0, cr7, cr10, {5}
   16fec:	ldr	r4, [pc, #76]	; 17040 <g_strcmp0@plt+0x1e74>
   16ff0:	ldr	r5, [r4, #132]	; 0x84
   16ff4:	mcr	15, 0, r0, cr7, cr10, {5}
   16ff8:	cmp	r5, #0
   16ffc:	beq	17008 <g_strcmp0@plt+0x1e3c>
   17000:	ldr	r0, [r4, #132]	; 0x84
   17004:	pop	{r4, r5, r6, pc}
   17008:	add	r0, r4, #132	; 0x84
   1700c:	bl	14a28 <g_once_init_enter@plt>
   17010:	cmp	r0, #0
   17014:	beq	17000 <g_strcmp0@plt+0x1e34>
   17018:	mov	r3, r5
   1701c:	ldr	r2, [pc, #32]	; 17044 <g_strcmp0@plt+0x1e78>
   17020:	ldr	r1, [pc, #32]	; 17048 <g_strcmp0@plt+0x1e7c>
   17024:	mov	r0, #80	; 0x50
   17028:	bl	14428 <g_type_register_static@plt>
   1702c:	mov	r1, r0
   17030:	add	r0, r4, #132	; 0x84
   17034:	bl	14ed8 <g_once_init_leave@plt>
   17038:	ldr	r0, [r4, #132]	; 0x84
   1703c:	pop	{r4, r5, r6, pc}
   17040:	andeq	ip, r4, r0, lsr r0
   17044:	andeq	r4, r3, ip, asr #10
   17048:	andeq	r4, r3, r0, asr #19
   1704c:	push	{r4, lr}
   17050:	bl	16fe4 <g_strcmp0@plt+0x1e18>
   17054:	mov	r1, #0
   17058:	pop	{r4, lr}
   1705c:	b	143d4 <g_object_new@plt>
   17060:	bx	lr
   17064:	ldr	r3, [pc, #32]	; 1708c <g_strcmp0@plt+0x1ec0>
   17068:	mov	r2, #0
   1706c:	mov	r1, #5
   17070:	ldr	r3, [r3]
   17074:	add	r3, r0, r3
   17078:	str	r3, [r0, #12]
   1707c:	str	r1, [r3, #28]
   17080:	str	r2, [r3, #16]
   17084:	str	r2, [r3, #24]
   17088:	bx	lr
   1708c:	ldrdeq	ip, [r4], -r8
   17090:	ldr	r3, [pc, #12]	; 170a4 <g_strcmp0@plt+0x1ed8>
   17094:	ldr	r3, [r3, #4]
   17098:	add	r3, r0, r3
   1709c:	str	r3, [r0, #24]
   170a0:	bx	lr
   170a4:	ldrdeq	ip, [r4], -r8
   170a8:	ldr	r3, [pc, #12]	; 170bc <g_strcmp0@plt+0x1ef0>
   170ac:	ldr	r3, [r3, #8]
   170b0:	add	r3, r0, r3
   170b4:	str	r3, [r0, #24]
   170b8:	bx	lr
   170bc:	ldrdeq	ip, [r4], -r8
   170c0:	ldr	r3, [pc, #12]	; 170d4 <g_strcmp0@plt+0x1f08>
   170c4:	ldr	r3, [r3, #12]
   170c8:	add	r3, r0, r3
   170cc:	str	r3, [r0, #24]
   170d0:	bx	lr
   170d4:	ldrdeq	ip, [r4], -r8
   170d8:	ldr	r3, [pc, #12]	; 170ec <g_strcmp0@plt+0x1f20>
   170dc:	ldr	r3, [r3, #16]
   170e0:	add	r3, r0, r3
   170e4:	str	r3, [r0, #24]
   170e8:	bx	lr
   170ec:	ldrdeq	ip, [r4], -r8
   170f0:	ldr	r3, [pc, #12]	; 17104 <g_strcmp0@plt+0x1f38>
   170f4:	ldr	r3, [r3, #20]
   170f8:	add	r3, r0, r3
   170fc:	str	r3, [r0, #24]
   17100:	bx	lr
   17104:	ldrdeq	ip, [r4], -r8
   17108:	ldr	r3, [pc, #12]	; 1711c <g_strcmp0@plt+0x1f50>
   1710c:	ldr	r3, [r3, #24]
   17110:	add	r3, r0, r3
   17114:	str	r3, [r0, #24]
   17118:	bx	lr
   1711c:	ldrdeq	ip, [r4], -r8
   17120:	ldr	r3, [pc, #12]	; 17134 <g_strcmp0@plt+0x1f68>
   17124:	ldr	r3, [r3, #28]
   17128:	add	r3, r0, r3
   1712c:	str	r3, [r0, #24]
   17130:	bx	lr
   17134:	ldrdeq	ip, [r4], -r8
   17138:	ldr	r3, [pc, #12]	; 1714c <g_strcmp0@plt+0x1f80>
   1713c:	ldr	r3, [r3, #32]
   17140:	add	r3, r0, r3
   17144:	str	r3, [r0, #24]
   17148:	bx	lr
   1714c:	ldrdeq	ip, [r4], -r8
   17150:	ldr	r3, [pc, #12]	; 17164 <g_strcmp0@plt+0x1f98>
   17154:	ldr	r3, [r3, #36]	; 0x24
   17158:	add	r3, r0, r3
   1715c:	str	r3, [r0, #24]
   17160:	bx	lr
   17164:	ldrdeq	ip, [r4], -r8
   17168:	ldr	r3, [pc, #12]	; 1717c <g_strcmp0@plt+0x1fb0>
   1716c:	ldr	r3, [r3, #40]	; 0x28
   17170:	add	r3, r0, r3
   17174:	str	r3, [r0, #24]
   17178:	bx	lr
   1717c:	ldrdeq	ip, [r4], -r8
   17180:	ldr	r3, [pc, #12]	; 17194 <g_strcmp0@plt+0x1fc8>
   17184:	ldr	r3, [r3, #44]	; 0x2c
   17188:	add	r3, r0, r3
   1718c:	str	r3, [r0, #24]
   17190:	bx	lr
   17194:	ldrdeq	ip, [r4], -r8
   17198:	ldr	r3, [pc, #12]	; 171ac <g_strcmp0@plt+0x1fe0>
   1719c:	ldr	r3, [r3, #48]	; 0x30
   171a0:	add	r3, r0, r3
   171a4:	str	r3, [r0, #24]
   171a8:	bx	lr
   171ac:	ldrdeq	ip, [r4], -r8
   171b0:	ldr	r3, [pc, #12]	; 171c4 <g_strcmp0@plt+0x1ff8>
   171b4:	ldr	r3, [r3, #52]	; 0x34
   171b8:	add	r3, r0, r3
   171bc:	str	r3, [r0, #24]
   171c0:	bx	lr
   171c4:	ldrdeq	ip, [r4], -r8
   171c8:	ldr	r3, [pc, #12]	; 171dc <g_strcmp0@plt+0x2010>
   171cc:	ldr	r3, [r3, #56]	; 0x38
   171d0:	add	r3, r0, r3
   171d4:	str	r3, [r0, #24]
   171d8:	bx	lr
   171dc:	ldrdeq	ip, [r4], -r8
   171e0:	ldr	r3, [pc, #12]	; 171f4 <g_strcmp0@plt+0x2028>
   171e4:	ldr	r3, [r3, #60]	; 0x3c
   171e8:	add	r3, r0, r3
   171ec:	str	r3, [r0, #24]
   171f0:	bx	lr
   171f4:	ldrdeq	ip, [r4], -r8
   171f8:	ldr	r3, [pc, #12]	; 1720c <g_strcmp0@plt+0x2040>
   171fc:	ldr	r3, [r3, #64]	; 0x40
   17200:	add	r3, r0, r3
   17204:	str	r3, [r0, #24]
   17208:	bx	lr
   1720c:	ldrdeq	ip, [r4], -r8
   17210:	ldr	r3, [pc, #12]	; 17224 <g_strcmp0@plt+0x2058>
   17214:	ldr	r3, [r3, #68]	; 0x44
   17218:	add	r3, r0, r3
   1721c:	str	r3, [r0, #24]
   17220:	bx	lr
   17224:	ldrdeq	ip, [r4], -r8
   17228:	ldr	r3, [r0, #24]
   1722c:	push	{r4, lr}
   17230:	mov	r4, r0
   17234:	ldr	r0, [r3]
   17238:	bl	14bd8 <g_free@plt>
   1723c:	ldr	r3, [pc, #28]	; 17260 <g_strcmp0@plt+0x2094>
   17240:	ldr	r2, [r4, #24]
   17244:	mov	r1, #0
   17248:	ldr	r3, [r3, #72]	; 0x48
   1724c:	mov	r0, r4
   17250:	str	r1, [r2]
   17254:	ldr	r3, [r3, #24]
   17258:	pop	{r4, lr}
   1725c:	bx	r3
   17260:	ldrdeq	ip, [r4], -r8
   17264:	b	14bd8 <g_free@plt>
   17268:	ldr	r0, [r0]
   1726c:	b	14bd8 <g_free@plt>
   17270:	ldr	r3, [r0, #24]
   17274:	push	{r4, r5, r6, lr}
   17278:	mov	r4, r0
   1727c:	ldr	r0, [r3]
   17280:	bl	14bd8 <g_free@plt>
   17284:	ldr	r3, [r4, #24]
   17288:	mov	r5, #0
   1728c:	str	r5, [r3]
   17290:	ldr	r0, [r3, #4]
   17294:	bl	14bd8 <g_free@plt>
   17298:	ldr	r3, [r4, #24]
   1729c:	str	r5, [r3, #4]
   172a0:	ldr	r0, [r3, #8]
   172a4:	bl	14bd8 <g_free@plt>
   172a8:	ldr	r3, [r4, #24]
   172ac:	str	r5, [r3, #8]
   172b0:	ldr	r0, [r3, #12]
   172b4:	bl	14bd8 <g_free@plt>
   172b8:	ldr	r3, [pc, #24]	; 172d8 <g_strcmp0@plt+0x210c>
   172bc:	ldr	r2, [r4, #24]
   172c0:	mov	r0, r4
   172c4:	ldr	r3, [r3, #76]	; 0x4c
   172c8:	str	r5, [r2, #12]
   172cc:	pop	{r4, r5, r6, lr}
   172d0:	ldr	r3, [r3, #24]
   172d4:	bx	r3
   172d8:	ldrdeq	ip, [r4], -r8
   172dc:	push	{r4, r5, r6, lr}
   172e0:	mov	r4, r0
   172e4:	mov	r5, #0
   172e8:	ldr	r0, [r0, #28]
   172ec:	bl	14bd8 <g_free@plt>
   172f0:	ldr	r0, [r4, #32]
   172f4:	str	r5, [r4, #28]
   172f8:	bl	14bd8 <g_free@plt>
   172fc:	ldr	r3, [pc, #20]	; 17318 <g_strcmp0@plt+0x214c>
   17300:	str	r5, [r4, #32]
   17304:	mov	r0, r4
   17308:	ldr	r3, [r3, #80]	; 0x50
   1730c:	pop	{r4, r5, r6, lr}
   17310:	ldr	r3, [r3, #24]
   17314:	bx	r3
   17318:	ldrdeq	ip, [r4], -r8
   1731c:	ldr	r3, [r0, #24]
   17320:	push	{r4, lr}
   17324:	mov	r4, r0
   17328:	ldr	r0, [r3]
   1732c:	bl	14bd8 <g_free@plt>
   17330:	ldr	r3, [pc, #28]	; 17354 <g_strcmp0@plt+0x2188>
   17334:	ldr	r2, [r4, #24]
   17338:	mov	r1, #0
   1733c:	ldr	r3, [r3, #84]	; 0x54
   17340:	mov	r0, r4
   17344:	str	r1, [r2]
   17348:	ldr	r3, [r3, #24]
   1734c:	pop	{r4, lr}
   17350:	bx	r3
   17354:	ldrdeq	ip, [r4], -r8
   17358:	ldr	r3, [r0, #24]
   1735c:	push	{r4, r5, r6, lr}
   17360:	mov	r4, r0
   17364:	ldr	r0, [r3]
   17368:	bl	14bd8 <g_free@plt>
   1736c:	ldr	r3, [r4, #24]
   17370:	mov	r5, #0
   17374:	str	r5, [r3]
   17378:	ldr	r0, [r3, #4]
   1737c:	bl	14bd8 <g_free@plt>
   17380:	ldr	r3, [pc, #24]	; 173a0 <g_strcmp0@plt+0x21d4>
   17384:	ldr	r2, [r4, #24]
   17388:	mov	r0, r4
   1738c:	ldr	r3, [r3, #88]	; 0x58
   17390:	str	r5, [r2, #4]
   17394:	pop	{r4, r5, r6, lr}
   17398:	ldr	r3, [r3, #24]
   1739c:	bx	r3
   173a0:	ldrdeq	ip, [r4], -r8
   173a4:	ldr	r3, [r0, #24]
   173a8:	push	{r4, r5, r6, lr}
   173ac:	mov	r4, r0
   173b0:	ldr	r0, [r3]
   173b4:	bl	14bd8 <g_free@plt>
   173b8:	ldr	r3, [r4, #24]
   173bc:	mov	r5, #0
   173c0:	str	r5, [r3]
   173c4:	ldr	r0, [r3, #4]
   173c8:	bl	14bd8 <g_free@plt>
   173cc:	ldr	r3, [r4, #24]
   173d0:	str	r5, [r3, #4]
   173d4:	ldr	r0, [r3, #8]
   173d8:	bl	14bd8 <g_free@plt>
   173dc:	ldr	r3, [pc, #24]	; 173fc <g_strcmp0@plt+0x2230>
   173e0:	ldr	r2, [r4, #24]
   173e4:	mov	r0, r4
   173e8:	ldr	r3, [r3, #92]	; 0x5c
   173ec:	str	r5, [r2, #8]
   173f0:	pop	{r4, r5, r6, lr}
   173f4:	ldr	r3, [r3, #24]
   173f8:	bx	r3
   173fc:	ldrdeq	ip, [r4], -r8
   17400:	ldr	r3, [r0, #24]
   17404:	push	{r4, r5, r6, lr}
   17408:	mov	r4, r0
   1740c:	ldr	r0, [r3]
   17410:	bl	14bd8 <g_free@plt>
   17414:	ldr	r3, [r4, #24]
   17418:	mov	r5, #0
   1741c:	str	r5, [r3]
   17420:	ldr	r0, [r3, #4]
   17424:	bl	14bd8 <g_free@plt>
   17428:	ldr	r3, [pc, #24]	; 17448 <g_strcmp0@plt+0x227c>
   1742c:	ldr	r2, [r4, #24]
   17430:	mov	r0, r4
   17434:	ldr	r3, [r3, #96]	; 0x60
   17438:	str	r5, [r2, #4]
   1743c:	pop	{r4, r5, r6, lr}
   17440:	ldr	r3, [r3, #24]
   17444:	bx	r3
   17448:	ldrdeq	ip, [r4], -r8
   1744c:	ldr	r3, [r0, #24]
   17450:	push	{r4, lr}
   17454:	mov	r4, r0
   17458:	ldr	r0, [r3]
   1745c:	bl	14bd8 <g_free@plt>
   17460:	ldr	r3, [pc, #28]	; 17484 <g_strcmp0@plt+0x22b8>
   17464:	ldr	r2, [r4, #24]
   17468:	mov	r1, #0
   1746c:	ldr	r3, [r3, #100]	; 0x64
   17470:	mov	r0, r4
   17474:	str	r1, [r2]
   17478:	ldr	r3, [r3, #24]
   1747c:	pop	{r4, lr}
   17480:	bx	r3
   17484:	ldrdeq	ip, [r4], -r8
   17488:	ldr	r3, [r0, #24]
   1748c:	push	{r4, r5, r6, lr}
   17490:	mov	r4, r0
   17494:	ldr	r0, [r3]
   17498:	bl	14bd8 <g_free@plt>
   1749c:	ldr	r3, [r4, #24]
   174a0:	mov	r5, #0
   174a4:	str	r5, [r3]
   174a8:	ldr	r0, [r3, #4]
   174ac:	bl	14bd8 <g_free@plt>
   174b0:	ldr	r3, [pc, #24]	; 174d0 <g_strcmp0@plt+0x2304>
   174b4:	ldr	r2, [r4, #24]
   174b8:	mov	r0, r4
   174bc:	ldr	r3, [r3, #104]	; 0x68
   174c0:	str	r5, [r2, #4]
   174c4:	pop	{r4, r5, r6, lr}
   174c8:	ldr	r3, [r3, #24]
   174cc:	bx	r3
   174d0:	ldrdeq	ip, [r4], -r8
   174d4:	ldr	r3, [r0, #24]
   174d8:	push	{r4, lr}
   174dc:	mov	r4, r0
   174e0:	ldr	r0, [r3]
   174e4:	bl	14bd8 <g_free@plt>
   174e8:	ldr	r3, [pc, #28]	; 1750c <g_strcmp0@plt+0x2340>
   174ec:	ldr	r2, [r4, #24]
   174f0:	mov	r1, #0
   174f4:	ldr	r3, [r3, #108]	; 0x6c
   174f8:	mov	r0, r4
   174fc:	str	r1, [r2]
   17500:	ldr	r3, [r3, #24]
   17504:	pop	{r4, lr}
   17508:	bx	r3
   1750c:	ldrdeq	ip, [r4], -r8
   17510:	ldr	r3, [r0, #24]
   17514:	push	{r4, r5, r6, lr}
   17518:	mov	r4, r0
   1751c:	ldr	r0, [r3]
   17520:	bl	14bd8 <g_free@plt>
   17524:	ldr	r3, [r4, #24]
   17528:	mov	r5, #0
   1752c:	str	r5, [r3]
   17530:	ldr	r0, [r3, #4]
   17534:	bl	14bd8 <g_free@plt>
   17538:	ldr	r3, [r4, #24]
   1753c:	str	r5, [r3, #4]
   17540:	ldr	r0, [r3, #8]
   17544:	bl	14bd8 <g_free@plt>
   17548:	ldr	r3, [pc, #24]	; 17568 <g_strcmp0@plt+0x239c>
   1754c:	ldr	r2, [r4, #24]
   17550:	mov	r0, r4
   17554:	ldr	r3, [r3, #112]	; 0x70
   17558:	str	r5, [r2, #8]
   1755c:	pop	{r4, r5, r6, lr}
   17560:	ldr	r3, [r3, #24]
   17564:	bx	r3
   17568:	ldrdeq	ip, [r4], -r8
   1756c:	ldr	r3, [r0, #24]
   17570:	push	{r4, lr}
   17574:	mov	r4, r0
   17578:	ldr	r0, [r3]
   1757c:	bl	14bd8 <g_free@plt>
   17580:	ldr	r3, [pc, #28]	; 175a4 <g_strcmp0@plt+0x23d8>
   17584:	ldr	r2, [r4, #24]
   17588:	mov	r1, #0
   1758c:	ldr	r3, [r3, #116]	; 0x74
   17590:	mov	r0, r4
   17594:	str	r1, [r2]
   17598:	ldr	r3, [r3, #24]
   1759c:	pop	{r4, lr}
   175a0:	bx	r3
   175a4:	ldrdeq	ip, [r4], -r8
   175a8:	ldr	r3, [r0, #24]
   175ac:	push	{r4, lr}
   175b0:	mov	r4, r0
   175b4:	ldr	r0, [r3]
   175b8:	bl	14bd8 <g_free@plt>
   175bc:	ldr	r3, [pc, #28]	; 175e0 <g_strcmp0@plt+0x2414>
   175c0:	ldr	r2, [r4, #24]
   175c4:	mov	r1, #0
   175c8:	ldr	r3, [r3, #120]	; 0x78
   175cc:	mov	r0, r4
   175d0:	str	r1, [r2]
   175d4:	ldr	r3, [r3, #24]
   175d8:	pop	{r4, lr}
   175dc:	bx	r3
   175e0:	ldrdeq	ip, [r4], -r8
   175e4:	ldr	r3, [r0, #24]
   175e8:	push	{r4, lr}
   175ec:	mov	r4, r0
   175f0:	ldr	r0, [r3]
   175f4:	bl	14bd8 <g_free@plt>
   175f8:	ldr	r3, [pc, #28]	; 1761c <g_strcmp0@plt+0x2450>
   175fc:	ldr	r2, [r4, #24]
   17600:	mov	r1, #0
   17604:	ldr	r3, [r3, #124]	; 0x7c
   17608:	mov	r0, r4
   1760c:	str	r1, [r2]
   17610:	ldr	r3, [r3, #24]
   17614:	pop	{r4, lr}
   17618:	bx	r3
   1761c:	ldrdeq	ip, [r4], -r8
   17620:	ldr	r3, [r0, #24]
   17624:	push	{r4, r5, r6, lr}
   17628:	mov	r4, r0
   1762c:	ldr	r0, [r3]
   17630:	bl	14bd8 <g_free@plt>
   17634:	ldr	r3, [r4, #24]
   17638:	mov	r5, #0
   1763c:	str	r5, [r3]
   17640:	ldr	r0, [r3, #4]
   17644:	bl	14bd8 <g_free@plt>
   17648:	ldr	r3, [pc, #24]	; 17668 <g_strcmp0@plt+0x249c>
   1764c:	ldr	r2, [r4, #24]
   17650:	mov	r0, r4
   17654:	ldr	r3, [r3, #128]	; 0x80
   17658:	str	r5, [r2, #4]
   1765c:	pop	{r4, r5, r6, lr}
   17660:	ldr	r3, [r3, #24]
   17664:	bx	r3
   17668:	ldrdeq	ip, [r4], -r8
   1766c:	ldr	r3, [r0, #24]
   17670:	push	{r4, lr}
   17674:	mov	r4, r0
   17678:	ldr	r0, [r3]
   1767c:	bl	14bd8 <g_free@plt>
   17680:	ldr	r3, [pc, #28]	; 176a4 <g_strcmp0@plt+0x24d8>
   17684:	ldr	r2, [r4, #24]
   17688:	mov	r1, #0
   1768c:	ldr	r3, [r3, #132]	; 0x84
   17690:	mov	r0, r4
   17694:	str	r1, [r2]
   17698:	ldr	r3, [r3, #24]
   1769c:	pop	{r4, lr}
   176a0:	bx	r3
   176a4:	ldrdeq	ip, [r4], -r8
   176a8:	ldr	r3, [r0, #24]
   176ac:	push	{r4, lr}
   176b0:	mov	r4, r0
   176b4:	ldr	r0, [r3]
   176b8:	bl	14bd8 <g_free@plt>
   176bc:	ldr	r3, [pc, #28]	; 176e0 <g_strcmp0@plt+0x2514>
   176c0:	ldr	r2, [r4, #24]
   176c4:	mov	r1, #0
   176c8:	ldr	r3, [r3, #136]	; 0x88
   176cc:	mov	r0, r4
   176d0:	str	r1, [r2]
   176d4:	ldr	r3, [r3, #24]
   176d8:	pop	{r4, lr}
   176dc:	bx	r3
   176e0:	ldrdeq	ip, [r4], -r8
   176e4:	ldr	r3, [r0, #24]
   176e8:	push	{r4, r5, r6, lr}
   176ec:	mov	r4, r0
   176f0:	ldr	r0, [r3]
   176f4:	bl	14bd8 <g_free@plt>
   176f8:	ldr	r3, [r4, #24]
   176fc:	mov	r5, #0
   17700:	str	r5, [r3]
   17704:	ldr	r0, [r3, #4]
   17708:	bl	14bd8 <g_free@plt>
   1770c:	ldr	r3, [pc, #24]	; 1772c <g_strcmp0@plt+0x2560>
   17710:	ldr	r2, [r4, #24]
   17714:	mov	r0, r4
   17718:	ldr	r3, [r3, #140]	; 0x8c
   1771c:	str	r5, [r2, #4]
   17720:	pop	{r4, r5, r6, lr}
   17724:	ldr	r3, [r3, #24]
   17728:	bx	r3
   1772c:	ldrdeq	ip, [r4], -r8
   17730:	ldr	r3, [r0, #24]
   17734:	push	{r4, lr}
   17738:	mov	r4, r0
   1773c:	ldr	r0, [r3]
   17740:	bl	14bd8 <g_free@plt>
   17744:	ldr	r3, [pc, #28]	; 17768 <g_strcmp0@plt+0x259c>
   17748:	ldr	r2, [r4, #24]
   1774c:	mov	r1, #0
   17750:	ldr	r3, [r3, #144]	; 0x90
   17754:	mov	r0, r4
   17758:	str	r1, [r2]
   1775c:	ldr	r3, [r3, #24]
   17760:	pop	{r4, lr}
   17764:	bx	r3
   17768:	ldrdeq	ip, [r4], -r8
   1776c:	ldr	r3, [r0, #24]
   17770:	push	{r4, r5, r6, lr}
   17774:	mov	r4, r0
   17778:	ldr	r0, [r3]
   1777c:	bl	14bd8 <g_free@plt>
   17780:	ldr	r3, [r4, #24]
   17784:	mov	r5, #0
   17788:	ldr	r0, [r3, #4]
   1778c:	str	r5, [r3]
   17790:	cmp	r0, r5
   17794:	beq	177a4 <g_strcmp0@plt+0x25d8>
   17798:	bl	14e90 <g_object_unref@plt>
   1779c:	ldr	r3, [r4, #24]
   177a0:	str	r5, [r3, #4]
   177a4:	ldr	r0, [r3, #8]
   177a8:	bl	14bd8 <g_free@plt>
   177ac:	ldr	r3, [r4, #24]
   177b0:	mov	r5, #0
   177b4:	ldr	r0, [r3, #12]
   177b8:	str	r5, [r3, #8]
   177bc:	cmp	r0, r5
   177c0:	beq	177d0 <g_strcmp0@plt+0x2604>
   177c4:	bl	14e90 <g_object_unref@plt>
   177c8:	ldr	r3, [r4, #24]
   177cc:	str	r5, [r3, #12]
   177d0:	ldr	r0, [r3, #16]
   177d4:	cmp	r0, #0
   177d8:	beq	177ec <g_strcmp0@plt+0x2620>
   177dc:	bl	14e90 <g_object_unref@plt>
   177e0:	ldr	r3, [r4, #24]
   177e4:	mov	r2, #0
   177e8:	str	r2, [r3, #16]
   177ec:	ldr	r3, [pc, #16]	; 17804 <g_strcmp0@plt+0x2638>
   177f0:	mov	r0, r4
   177f4:	pop	{r4, r5, r6, lr}
   177f8:	ldr	r3, [r3, #148]	; 0x94
   177fc:	ldr	r3, [r3, #24]
   17800:	bx	r3
   17804:	ldrdeq	ip, [r4], -r8
   17808:	ldr	r3, [pc, #36]	; 17834 <g_strcmp0@plt+0x2668>
   1780c:	push	{r4, lr}
   17810:	mov	r4, r0
   17814:	ldr	r3, [r3, #152]	; 0x98
   17818:	ldr	r0, [pc, #24]	; 17838 <g_strcmp0@plt+0x266c>
   1781c:	add	r3, r4, r3
   17820:	str	r3, [r4, #24]
   17824:	bl	147e8 <g_strdup@plt>
   17828:	ldr	r3, [r4, #24]
   1782c:	str	r0, [r3]
   17830:	pop	{r4, pc}
   17834:	ldrdeq	ip, [r4], -r8
   17838:	andeq	sl, r3, ip, ror #18
   1783c:	ldr	r3, [pc, #44]	; 17870 <g_strcmp0@plt+0x26a4>
   17840:	push	{r4, lr}
   17844:	mov	r4, r0
   17848:	ldr	r3, [r3, #156]	; 0x9c
   1784c:	ldr	r0, [pc, #32]	; 17874 <g_strcmp0@plt+0x26a8>
   17850:	add	r3, r4, r3
   17854:	str	r3, [r4, #24]
   17858:	bl	147e8 <g_strdup@plt>
   1785c:	ldr	r3, [r4, #24]
   17860:	mov	r2, #0
   17864:	str	r2, [r3, #20]
   17868:	str	r0, [r3, #8]
   1786c:	pop	{r4, pc}
   17870:	ldrdeq	ip, [r4], -r8
   17874:	andeq	r4, r3, r0, lsr #29
   17878:	push	{r4, r5, r6, r7, r8, lr}
   1787c:	mov	r6, r1
   17880:	mov	r4, r0
   17884:	mov	r1, #4
   17888:	add	r0, r6, #1
   1788c:	bl	14f14 <g_malloc0_n@plt>
   17890:	cmp	r6, #0
   17894:	mov	r7, r0
   17898:	ble	178bc <g_strcmp0@plt+0x26f0>
   1789c:	sub	r4, r4, #4
   178a0:	add	r6, r4, r6, lsl #2
   178a4:	sub	r5, r0, #4
   178a8:	ldr	r0, [r4, #4]!
   178ac:	bl	147e8 <g_strdup@plt>
   178b0:	cmp	r4, r6
   178b4:	str	r0, [r5, #4]!
   178b8:	bne	178a8 <g_strcmp0@plt+0x26dc>
   178bc:	mov	r0, r7
   178c0:	pop	{r4, r5, r6, r7, r8, pc}
   178c4:	b	14f8c <g_type_class_peek_parent@plt>
   178c8:	b	14f8c <g_type_class_peek_parent@plt>
   178cc:	push	{r4, lr}
   178d0:	mov	r4, r0
   178d4:	bl	14f8c <g_type_class_peek_parent@plt>
   178d8:	ldr	r3, [pc, #28]	; 178fc <g_strcmp0@plt+0x2730>
   178dc:	ldr	ip, [pc, #28]	; 17900 <g_strcmp0@plt+0x2734>
   178e0:	ldr	r1, [pc, #28]	; 17904 <g_strcmp0@plt+0x2738>
   178e4:	ldr	r2, [pc, #28]	; 17908 <g_strcmp0@plt+0x273c>
   178e8:	str	ip, [r4, #68]	; 0x44
   178ec:	str	r1, [r4, #72]	; 0x48
   178f0:	str	r2, [r4, #24]
   178f4:	str	r0, [r3, #80]	; 0x50
   178f8:	pop	{r4, pc}
   178fc:	ldrdeq	ip, [r4], -r8
   17900:	andeq	r8, r1, ip, lsl #2
   17904:	andeq	sl, r1, r4, lsr r6
   17908:	ldrdeq	r7, [r1], -ip
   1790c:	push	{r4, lr}
   17910:	mov	r4, r0
   17914:	bl	14f8c <g_type_class_peek_parent@plt>
   17918:	ldr	r3, [pc, #4]	; 17924 <g_strcmp0@plt+0x2758>
   1791c:	str	r3, [r4, #68]	; 0x44
   17920:	pop	{r4, pc}
   17924:	andeq	r8, r1, r0, lsl #3
   17928:	push	{r4, lr}
   1792c:	mov	r4, r0
   17930:	bl	14f8c <g_type_class_peek_parent@plt>
   17934:	ldr	r3, [pc, #32]	; 1795c <g_strcmp0@plt+0x2790>
   17938:	add	r1, r3, #4
   1793c:	str	r0, [r3, #76]	; 0x4c
   17940:	mov	r0, r4
   17944:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   17948:	ldr	r2, [pc, #16]	; 17960 <g_strcmp0@plt+0x2794>
   1794c:	ldr	r3, [pc, #16]	; 17964 <g_strcmp0@plt+0x2798>
   17950:	str	r2, [r4, #72]	; 0x48
   17954:	str	r3, [r4, #24]
   17958:	pop	{r4, pc}
   1795c:	ldrdeq	ip, [r4], -r8
   17960:	muleq	r1, r4, r0
   17964:	andeq	r7, r1, r0, ror r2
   17968:	push	{r4, lr}
   1796c:	mov	r4, r0
   17970:	bl	14f8c <g_type_class_peek_parent@plt>
   17974:	ldr	r3, [pc, #32]	; 1799c <g_strcmp0@plt+0x27d0>
   17978:	add	r1, r3, #8
   1797c:	str	r0, [r3, #84]	; 0x54
   17980:	mov	r0, r4
   17984:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   17988:	ldr	r2, [pc, #16]	; 179a0 <g_strcmp0@plt+0x27d4>
   1798c:	ldr	r3, [pc, #16]	; 179a4 <g_strcmp0@plt+0x27d8>
   17990:	str	r2, [r4, #72]	; 0x48
   17994:	str	r3, [r4, #24]
   17998:	pop	{r4, pc}
   1799c:	ldrdeq	ip, [r4], -r8
   179a0:	andeq	sl, r1, r4, lsl r8
   179a4:	andeq	r7, r1, ip, lsl r3
   179a8:	push	{r4, lr}
   179ac:	mov	r4, r0
   179b0:	bl	14f8c <g_type_class_peek_parent@plt>
   179b4:	ldr	r3, [pc, #32]	; 179dc <g_strcmp0@plt+0x2810>
   179b8:	add	r1, r3, #12
   179bc:	str	r0, [r3, #88]	; 0x58
   179c0:	mov	r0, r4
   179c4:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   179c8:	ldr	r2, [pc, #16]	; 179e0 <g_strcmp0@plt+0x2814>
   179cc:	ldr	r3, [pc, #16]	; 179e4 <g_strcmp0@plt+0x2818>
   179d0:	str	r2, [r4, #72]	; 0x48
   179d4:	str	r3, [r4, #24]
   179d8:	pop	{r4, pc}
   179dc:	ldrdeq	ip, [r4], -r8
   179e0:	andeq	sl, r1, r0, lsr #19
   179e4:	andeq	r7, r1, r8, asr r3
   179e8:	push	{r4, lr}
   179ec:	mov	r4, r0
   179f0:	bl	14f8c <g_type_class_peek_parent@plt>
   179f4:	ldr	r3, [pc, #32]	; 17a1c <g_strcmp0@plt+0x2850>
   179f8:	add	r1, r3, #16
   179fc:	str	r0, [r3, #92]	; 0x5c
   17a00:	mov	r0, r4
   17a04:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   17a08:	ldr	r2, [pc, #16]	; 17a20 <g_strcmp0@plt+0x2854>
   17a0c:	ldr	r3, [pc, #16]	; 17a24 <g_strcmp0@plt+0x2858>
   17a10:	str	r2, [r4, #72]	; 0x48
   17a14:	str	r3, [r4, #24]
   17a18:	pop	{r4, pc}
   17a1c:	ldrdeq	ip, [r4], -r8
   17a20:	andeq	r9, r1, r0, asr r0
   17a24:	andeq	r7, r1, r4, lsr #7
   17a28:	push	{r4, lr}
   17a2c:	mov	r4, r0
   17a30:	bl	14f8c <g_type_class_peek_parent@plt>
   17a34:	ldr	r3, [pc, #32]	; 17a5c <g_strcmp0@plt+0x2890>
   17a38:	add	r1, r3, #20
   17a3c:	str	r0, [r3, #96]	; 0x60
   17a40:	mov	r0, r4
   17a44:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   17a48:	ldr	r2, [pc, #16]	; 17a60 <g_strcmp0@plt+0x2894>
   17a4c:	ldr	r3, [pc, #16]	; 17a64 <g_strcmp0@plt+0x2898>
   17a50:	str	r2, [r4, #72]	; 0x48
   17a54:	str	r3, [r4, #24]
   17a58:	pop	{r4, pc}
   17a5c:	ldrdeq	ip, [r4], -r8
   17a60:	andeq	fp, r1, r8, asr #30
   17a64:	andeq	r7, r1, r0, lsl #8
   17a68:	push	{r4, lr}
   17a6c:	mov	r4, r0
   17a70:	bl	14f8c <g_type_class_peek_parent@plt>
   17a74:	ldr	r3, [pc, #32]	; 17a9c <g_strcmp0@plt+0x28d0>
   17a78:	add	r1, r3, #24
   17a7c:	str	r0, [r3, #100]	; 0x64
   17a80:	mov	r0, r4
   17a84:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   17a88:	ldr	r2, [pc, #16]	; 17aa0 <g_strcmp0@plt+0x28d4>
   17a8c:	ldr	r3, [pc, #16]	; 17aa4 <g_strcmp0@plt+0x28d8>
   17a90:	str	r2, [r4, #72]	; 0x48
   17a94:	str	r3, [r4, #24]
   17a98:	pop	{r4, pc}
   17a9c:	ldrdeq	ip, [r4], -r8
   17aa0:			; <UNDEFINED> instruction: 0x0001abbc
   17aa4:	andeq	r7, r1, ip, asr #8
   17aa8:	push	{r4, lr}
   17aac:	mov	r4, r0
   17ab0:	bl	14f8c <g_type_class_peek_parent@plt>
   17ab4:	ldr	r3, [pc, #32]	; 17adc <g_strcmp0@plt+0x2910>
   17ab8:	add	r1, r3, #28
   17abc:	str	r0, [r3, #104]	; 0x68
   17ac0:	mov	r0, r4
   17ac4:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   17ac8:	ldr	r2, [pc, #16]	; 17ae0 <g_strcmp0@plt+0x2914>
   17acc:	ldr	r3, [pc, #16]	; 17ae4 <g_strcmp0@plt+0x2918>
   17ad0:	str	r2, [r4, #72]	; 0x48
   17ad4:	str	r3, [r4, #24]
   17ad8:	pop	{r4, pc}
   17adc:	ldrdeq	ip, [r4], -r8
   17ae0:	muleq	r1, ip, sp
   17ae4:	andeq	r7, r1, r8, lsl #9
   17ae8:	push	{r4, lr}
   17aec:	mov	r4, r0
   17af0:	bl	14f8c <g_type_class_peek_parent@plt>
   17af4:	ldr	r3, [pc, #32]	; 17b1c <g_strcmp0@plt+0x2950>
   17af8:	add	r1, r3, #32
   17afc:	str	r0, [r3, #108]	; 0x6c
   17b00:	mov	r0, r4
   17b04:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   17b08:	ldr	r2, [pc, #16]	; 17b20 <g_strcmp0@plt+0x2954>
   17b0c:	ldr	r3, [pc, #16]	; 17b24 <g_strcmp0@plt+0x2958>
   17b10:	str	r2, [r4, #72]	; 0x48
   17b14:	str	r3, [r4, #24]
   17b18:	pop	{r4, pc}
   17b1c:	ldrdeq	ip, [r4], -r8
   17b20:	andeq	r9, r1, r4, lsl #7
   17b24:	ldrdeq	r7, [r1], -r4
   17b28:	push	{r4, lr}
   17b2c:	mov	r4, r0
   17b30:	bl	14f8c <g_type_class_peek_parent@plt>
   17b34:	ldr	r3, [pc, #32]	; 17b5c <g_strcmp0@plt+0x2990>
   17b38:	add	r1, r3, #36	; 0x24
   17b3c:	str	r0, [r3, #112]	; 0x70
   17b40:	mov	r0, r4
   17b44:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   17b48:	ldr	r2, [pc, #16]	; 17b60 <g_strcmp0@plt+0x2994>
   17b4c:	ldr	r3, [pc, #16]	; 17b64 <g_strcmp0@plt+0x2998>
   17b50:	str	r2, [r4, #72]	; 0x48
   17b54:	str	r3, [r4, #24]
   17b58:	pop	{r4, pc}
   17b5c:	ldrdeq	ip, [r4], -r8
   17b60:	andeq	r9, r1, r4, ror #9
   17b64:	andeq	r7, r1, r0, lsl r5
   17b68:	push	{r4, lr}
   17b6c:	mov	r4, r0
   17b70:	bl	14f8c <g_type_class_peek_parent@plt>
   17b74:	ldr	r3, [pc, #32]	; 17b9c <g_strcmp0@plt+0x29d0>
   17b78:	add	r1, r3, #40	; 0x28
   17b7c:	str	r0, [r3, #116]	; 0x74
   17b80:	mov	r0, r4
   17b84:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   17b88:	ldr	r2, [pc, #16]	; 17ba0 <g_strcmp0@plt+0x29d4>
   17b8c:	ldr	r3, [pc, #16]	; 17ba4 <g_strcmp0@plt+0x29d8>
   17b90:	str	r2, [r4, #72]	; 0x48
   17b94:	str	r3, [r4, #24]
   17b98:	pop	{r4, pc}
   17b9c:	ldrdeq	ip, [r4], -r8
   17ba0:	andeq	r9, r1, r8, ror #13
   17ba4:	andeq	r7, r1, ip, ror #10
   17ba8:	push	{r4, lr}
   17bac:	mov	r4, r0
   17bb0:	bl	14f8c <g_type_class_peek_parent@plt>
   17bb4:	ldr	r3, [pc, #32]	; 17bdc <g_strcmp0@plt+0x2a10>
   17bb8:	add	r1, r3, #44	; 0x2c
   17bbc:	str	r0, [r3, #120]	; 0x78
   17bc0:	mov	r0, r4
   17bc4:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   17bc8:	ldr	r2, [pc, #16]	; 17be0 <g_strcmp0@plt+0x2a14>
   17bcc:	ldr	r3, [pc, #16]	; 17be4 <g_strcmp0@plt+0x2a18>
   17bd0:	str	r2, [r4, #72]	; 0x48
   17bd4:	str	r3, [r4, #24]
   17bd8:	pop	{r4, pc}
   17bdc:	ldrdeq	ip, [r4], -r8
   17be0:	andeq	r9, r1, r8, asr #16
   17be4:	andeq	r7, r1, r8, lsr #11
   17be8:	push	{r4, lr}
   17bec:	mov	r4, r0
   17bf0:	bl	14f8c <g_type_class_peek_parent@plt>
   17bf4:	ldr	r3, [pc, #40]	; 17c24 <g_strcmp0@plt+0x2a58>
   17bf8:	add	r1, r3, #48	; 0x30
   17bfc:	str	r0, [r3, #124]	; 0x7c
   17c00:	mov	r0, r4
   17c04:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   17c08:	ldr	r1, [pc, #24]	; 17c28 <g_strcmp0@plt+0x2a5c>
   17c0c:	ldr	r2, [pc, #24]	; 17c2c <g_strcmp0@plt+0x2a60>
   17c10:	ldr	r3, [pc, #24]	; 17c30 <g_strcmp0@plt+0x2a64>
   17c14:	str	r1, [r4, #68]	; 0x44
   17c18:	str	r2, [r4, #72]	; 0x48
   17c1c:	str	r3, [r4, #24]
   17c20:	pop	{r4, pc}
   17c24:	ldrdeq	ip, [r4], -r8
   17c28:	strdeq	r8, [r1], -r4
   17c2c:	andeq	r9, r1, r8, lsr #19
   17c30:	andeq	r7, r1, r4, ror #11
   17c34:	push	{r4, lr}
   17c38:	mov	r4, r0
   17c3c:	bl	14f8c <g_type_class_peek_parent@plt>
   17c40:	ldr	r3, [pc, #32]	; 17c68 <g_strcmp0@plt+0x2a9c>
   17c44:	add	r1, r3, #52	; 0x34
   17c48:	str	r0, [r3, #128]	; 0x80
   17c4c:	mov	r0, r4
   17c50:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   17c54:	ldr	r2, [pc, #16]	; 17c6c <g_strcmp0@plt+0x2aa0>
   17c58:	ldr	r3, [pc, #16]	; 17c70 <g_strcmp0@plt+0x2aa4>
   17c5c:	str	r2, [r4, #72]	; 0x48
   17c60:	str	r3, [r4, #24]
   17c64:	pop	{r4, pc}
   17c68:	ldrdeq	ip, [r4], -r8
   17c6c:	andeq	r8, r1, r0, asr #4
   17c70:	andeq	r7, r1, r0, lsr #12
   17c74:	push	{r4, lr}
   17c78:	mov	r4, r0
   17c7c:	bl	14f8c <g_type_class_peek_parent@plt>
   17c80:	ldr	r3, [pc, #32]	; 17ca8 <g_strcmp0@plt+0x2adc>
   17c84:	add	r1, r3, #56	; 0x38
   17c88:	str	r0, [r3, #132]	; 0x84
   17c8c:	mov	r0, r4
   17c90:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   17c94:	ldr	r2, [pc, #16]	; 17cac <g_strcmp0@plt+0x2ae0>
   17c98:	ldr	r3, [pc, #16]	; 17cb0 <g_strcmp0@plt+0x2ae4>
   17c9c:	str	r2, [r4, #72]	; 0x48
   17ca0:	str	r3, [r4, #24]
   17ca4:	pop	{r4, pc}
   17ca8:	ldrdeq	ip, [r4], -r8
   17cac:	andeq	r9, r1, r8, asr #21
   17cb0:	andeq	r7, r1, ip, ror #12
   17cb4:	push	{r4, lr}
   17cb8:	mov	r4, r0
   17cbc:	bl	14f8c <g_type_class_peek_parent@plt>
   17cc0:	ldr	r3, [pc, #32]	; 17ce8 <g_strcmp0@plt+0x2b1c>
   17cc4:	add	r1, r3, #60	; 0x3c
   17cc8:	str	r0, [r3, #136]	; 0x88
   17ccc:	mov	r0, r4
   17cd0:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   17cd4:	ldr	r2, [pc, #16]	; 17cec <g_strcmp0@plt+0x2b20>
   17cd8:	ldr	r3, [pc, #16]	; 17cf0 <g_strcmp0@plt+0x2b24>
   17cdc:	str	r2, [r4, #72]	; 0x48
   17ce0:	str	r3, [r4, #24]
   17ce4:	pop	{r4, pc}
   17ce8:	ldrdeq	ip, [r4], -r8
   17cec:			; <UNDEFINED> instruction: 0x00019cb4
   17cf0:	andeq	r7, r1, r8, lsr #13
   17cf4:	push	{r4, lr}
   17cf8:	mov	r4, r0
   17cfc:	bl	14f8c <g_type_class_peek_parent@plt>
   17d00:	ldr	r3, [pc, #32]	; 17d28 <g_strcmp0@plt+0x2b5c>
   17d04:	add	r1, r3, #64	; 0x40
   17d08:	str	r0, [r3, #140]	; 0x8c
   17d0c:	mov	r0, r4
   17d10:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   17d14:	ldr	r2, [pc, #16]	; 17d2c <g_strcmp0@plt+0x2b60>
   17d18:	ldr	r3, [pc, #16]	; 17d30 <g_strcmp0@plt+0x2b64>
   17d1c:	str	r2, [r4, #72]	; 0x48
   17d20:	str	r3, [r4, #24]
   17d24:	pop	{r4, pc}
   17d28:	ldrdeq	ip, [r4], -r8
   17d2c:	andeq	r9, r1, r4, lsl lr
   17d30:	andeq	r7, r1, r4, ror #13
   17d34:	push	{r4, lr}
   17d38:	mov	r4, r0
   17d3c:	bl	14f8c <g_type_class_peek_parent@plt>
   17d40:	ldr	r3, [pc, #32]	; 17d68 <g_strcmp0@plt+0x2b9c>
   17d44:	add	r1, r3, #68	; 0x44
   17d48:	str	r0, [r3, #144]	; 0x90
   17d4c:	mov	r0, r4
   17d50:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   17d54:	ldr	r2, [pc, #16]	; 17d6c <g_strcmp0@plt+0x2ba0>
   17d58:	ldr	r3, [pc, #16]	; 17d70 <g_strcmp0@plt+0x2ba4>
   17d5c:	str	r2, [r4, #72]	; 0x48
   17d60:	str	r3, [r4, #24]
   17d64:	pop	{r4, pc}
   17d68:	ldrdeq	ip, [r4], -r8
   17d6c:	andeq	r9, r1, r0, ror #31
   17d70:	andeq	r7, r1, r0, lsr r7
   17d74:	push	{r4, lr}
   17d78:	mov	r4, r0
   17d7c:	bl	14f8c <g_type_class_peek_parent@plt>
   17d80:	ldr	r3, [pc, #32]	; 17da8 <g_strcmp0@plt+0x2bdc>
   17d84:	add	r1, r3, #156	; 0x9c
   17d88:	str	r0, [r3, #148]	; 0x94
   17d8c:	mov	r0, r4
   17d90:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   17d94:	ldr	r2, [pc, #16]	; 17dac <g_strcmp0@plt+0x2be0>
   17d98:	ldr	r3, [pc, #16]	; 17db0 <g_strcmp0@plt+0x2be4>
   17d9c:	str	r2, [r4, #72]	; 0x48
   17da0:	str	r3, [r4, #24]
   17da4:	pop	{r4, pc}
   17da8:	ldrdeq	ip, [r4], -r8
   17dac:	andeq	sp, r1, r4, lsr #6
   17db0:	andeq	r7, r1, ip, ror #14
   17db4:	push	{r4, r5, lr}
   17db8:	sub	sp, sp, #12
   17dbc:	mov	r4, r0
   17dc0:	bl	14f8c <g_type_class_peek_parent@plt>
   17dc4:	ldr	r5, [pc, #104]	; 17e34 <g_strcmp0@plt+0x2c68>
   17dc8:	add	r1, r5, #152	; 0x98
   17dcc:	str	r0, [r5, #72]	; 0x48
   17dd0:	mov	r0, r4
   17dd4:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   17dd8:	ldr	r3, [pc, #88]	; 17e38 <g_strcmp0@plt+0x2c6c>
   17ddc:	ldr	r2, [pc, #88]	; 17e3c <g_strcmp0@plt+0x2c70>
   17de0:	ldr	ip, [pc, #88]	; 17e40 <g_strcmp0@plt+0x2c74>
   17de4:	ldr	r0, [pc, #88]	; 17e44 <g_strcmp0@plt+0x2c78>
   17de8:	ldr	r1, [pc, #88]	; 17e48 <g_strcmp0@plt+0x2c7c>
   17dec:	str	r3, [r4, #72]	; 0x48
   17df0:	mov	r3, #227	; 0xe3
   17df4:	str	r0, [r4, #12]
   17df8:	str	r1, [r4, #24]
   17dfc:	str	ip, [r4, #16]
   17e00:	mov	r1, r2
   17e04:	str	r3, [sp]
   17e08:	mov	r0, r2
   17e0c:	mov	r3, #0
   17e10:	bl	145e4 <g_param_spec_string@plt>
   17e14:	mov	r1, #1
   17e18:	mov	r3, r0
   17e1c:	mov	r2, r0
   17e20:	str	r3, [r5, #164]	; 0xa4
   17e24:	mov	r0, r4
   17e28:	add	sp, sp, #12
   17e2c:	pop	{r4, r5, lr}
   17e30:	b	14c98 <g_object_class_install_property@plt>
   17e34:	ldrdeq	ip, [r4], -r8
   17e38:	strdeq	r8, [r1], -r0
   17e3c:	andeq	r4, r3, ip, lsr #29
   17e40:	strdeq	r8, [r1], -r4
   17e44:	andeq	fp, r1, r4, ror #11
   17e48:	andeq	r7, r1, r8, lsr #4
   17e4c:	push	{r4, r5, r6, r7, lr}
   17e50:	sub	sp, sp, #20
   17e54:	mov	r4, r0
   17e58:	bl	14f8c <g_type_class_peek_parent@plt>
   17e5c:	ldr	r5, [pc, #384]	; 17fe4 <g_strcmp0@plt+0x2e18>
   17e60:	mov	r6, #227	; 0xe3
   17e64:	mov	r1, r5
   17e68:	mvn	r7, #-2147483648	; 0x80000000
   17e6c:	str	r0, [r5, #168]	; 0xa8
   17e70:	mov	r0, r4
   17e74:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   17e78:	ldr	r2, [pc, #360]	; 17fe8 <g_strcmp0@plt+0x2e1c>
   17e7c:	ldr	ip, [pc, #360]	; 17fec <g_strcmp0@plt+0x2e20>
   17e80:	str	r2, [r4, #68]	; 0x44
   17e84:	ldr	r0, [pc, #356]	; 17ff0 <g_strcmp0@plt+0x2e24>
   17e88:	ldr	r2, [pc, #356]	; 17ff4 <g_strcmp0@plt+0x2e28>
   17e8c:	ldr	r1, [pc, #356]	; 17ff8 <g_strcmp0@plt+0x2e2c>
   17e90:	ldr	r3, [pc, #356]	; 17ffc <g_strcmp0@plt+0x2e30>
   17e94:	str	ip, [r4, #72]	; 0x48
   17e98:	str	r0, [r4, #16]
   17e9c:	str	r1, [r4, #12]
   17ea0:	str	r3, [r4, #24]
   17ea4:	mov	r1, r2
   17ea8:	mov	r0, r2
   17eac:	str	r6, [sp]
   17eb0:	mov	r3, #0
   17eb4:	bl	145e4 <g_param_spec_string@plt>
   17eb8:	mov	r1, #1
   17ebc:	mov	r3, r0
   17ec0:	mov	r2, r0
   17ec4:	mov	r0, r4
   17ec8:	str	r3, [r5, #176]	; 0xb0
   17ecc:	bl	14c98 <g_object_class_install_property@plt>
   17ed0:	bl	14e18 <g_strv_get_type@plt>
   17ed4:	ldr	r2, [pc, #292]	; 18000 <g_strcmp0@plt+0x2e34>
   17ed8:	str	r6, [sp]
   17edc:	mov	r1, r2
   17ee0:	mov	r3, r0
   17ee4:	mov	r0, r2
   17ee8:	bl	14c5c <g_param_spec_boxed@plt>
   17eec:	mov	r1, #2
   17ef0:	mov	r3, r0
   17ef4:	mov	r2, r0
   17ef8:	mov	r0, r4
   17efc:	str	r3, [r5, #180]	; 0xb4
   17f00:	bl	14c98 <g_object_class_install_property@plt>
   17f04:	ldr	r2, [pc, #248]	; 18004 <g_strcmp0@plt+0x2e38>
   17f08:	str	r6, [sp]
   17f0c:	mov	r1, r2
   17f10:	mov	r0, r2
   17f14:	mov	r3, #0
   17f18:	bl	144b8 <g_param_spec_boolean@plt>
   17f1c:	mov	r1, #3
   17f20:	mov	r3, r0
   17f24:	mov	r2, r0
   17f28:	mov	r0, r4
   17f2c:	str	r3, [r5, #184]	; 0xb8
   17f30:	bl	14c98 <g_object_class_install_property@plt>
   17f34:	ldr	r2, [pc, #204]	; 18008 <g_strcmp0@plt+0x2e3c>
   17f38:	str	r6, [sp]
   17f3c:	mov	r1, r2
   17f40:	mov	r0, r2
   17f44:	mov	r3, #0
   17f48:	bl	145e4 <g_param_spec_string@plt>
   17f4c:	mov	r1, #4
   17f50:	mov	r3, r0
   17f54:	mov	r2, r0
   17f58:	mov	r0, r4
   17f5c:	str	r3, [r5, #188]	; 0xbc
   17f60:	bl	14c98 <g_object_class_install_property@plt>
   17f64:	ldr	r2, [pc, #160]	; 1800c <g_strcmp0@plt+0x2e40>
   17f68:	mov	r3, #0
   17f6c:	mov	r1, r2
   17f70:	str	r3, [sp, #4]
   17f74:	str	r6, [sp, #8]
   17f78:	mov	r0, r2
   17f7c:	str	r7, [sp]
   17f80:	mov	r3, #-2147483648	; 0x80000000
   17f84:	bl	14f38 <g_param_spec_int@plt>
   17f88:	mov	r1, #5
   17f8c:	mov	r3, r0
   17f90:	mov	r2, r0
   17f94:	mov	r0, r4
   17f98:	str	r3, [r5, #192]	; 0xc0
   17f9c:	bl	14c98 <g_object_class_install_property@plt>
   17fa0:	ldr	r2, [pc, #104]	; 18010 <g_strcmp0@plt+0x2e44>
   17fa4:	mov	r3, #5
   17fa8:	mov	r1, r2
   17fac:	str	r3, [sp, #4]
   17fb0:	str	r6, [sp, #8]
   17fb4:	str	r7, [sp]
   17fb8:	mov	r0, r2
   17fbc:	mov	r3, #-2147483648	; 0x80000000
   17fc0:	bl	14f38 <g_param_spec_int@plt>
   17fc4:	mov	r1, #6
   17fc8:	mov	r3, r0
   17fcc:	mov	r2, r0
   17fd0:	str	r3, [r5, #196]	; 0xc4
   17fd4:	mov	r0, r4
   17fd8:	add	sp, sp, #20
   17fdc:	pop	{r4, r5, r6, r7, lr}
   17fe0:	b	14c98 <g_object_class_install_property@plt>
   17fe4:	ldrdeq	ip, [r4], -r8
   17fe8:	andeq	r7, r1, r0, rrx
   17fec:	andeq	r8, r1, ip, asr sl
   17ff0:	andeq	r8, r1, r4, lsl r0
   17ff4:	andeq	r6, r3, r8, lsl #5
   17ff8:	andeq	fp, r1, ip, asr #1
   17ffc:	andeq	r8, r1, r0, lsl #20
   18000:	ldrdeq	r4, [r3], -ip
   18004:	andeq	r4, r3, r0, asr #29
   18008:	andeq	r4, r3, r8, asr #29
   1800c:	ldrdeq	r4, [r3], -ip
   18010:	andeq	r4, r3, r8, ror #29
   18014:	sub	ip, r1, #1
   18018:	cmp	ip, #5
   1801c:	ldrls	pc, [pc, ip, lsl #2]
   18020:	b	1809c <g_strcmp0@plt+0x2ed0>
   18024:	andeq	r8, r1, ip, asr #32
   18028:	andeq	r8, r1, ip, asr r0
   1802c:	andeq	r8, r1, ip, rrx
   18030:	andeq	r8, r1, ip, ror r0
   18034:	andeq	r8, r1, ip, lsl #1
   18038:	andeq	r8, r1, ip, lsr r0
   1803c:	ldr	r3, [r0, #12]
   18040:	mov	r0, r2
   18044:	ldr	r1, [r3, #28]
   18048:	b	14bfc <g_value_set_int@plt>
   1804c:	ldr	r3, [r0, #12]
   18050:	mov	r0, r2
   18054:	ldr	r1, [r3]
   18058:	b	14980 <g_value_set_string@plt>
   1805c:	ldr	r3, [r0, #12]
   18060:	mov	r0, r2
   18064:	ldr	r1, [r3, #4]
   18068:	b	14878 <g_value_set_boxed@plt>
   1806c:	ldr	r3, [r0, #12]
   18070:	mov	r0, r2
   18074:	ldr	r1, [r3, #16]
   18078:	b	14968 <g_value_set_boolean@plt>
   1807c:	ldr	r3, [r0, #12]
   18080:	mov	r0, r2
   18084:	ldr	r1, [r3, #20]
   18088:	b	14980 <g_value_set_string@plt>
   1808c:	ldr	r3, [r0, #12]
   18090:	mov	r0, r2
   18094:	ldr	r1, [r3, #24]
   18098:	b	14bfc <g_value_set_int@plt>
   1809c:	push	{r4, r5, r6, r7, lr}
   180a0:	mov	r5, r0
   180a4:	ldm	r3, {r2, r6}
   180a8:	sub	sp, sp, #28
   180ac:	mov	r4, r1
   180b0:	ldr	r0, [r2]
   180b4:	bl	14680 <g_type_name@plt>
   180b8:	ldr	r3, [r5]
   180bc:	mov	r7, r0
   180c0:	ldr	r0, [r3]
   180c4:	bl	14680 <g_type_name@plt>
   180c8:	ldr	r2, [pc, #44]	; 180fc <g_strcmp0@plt+0x2f30>
   180cc:	ldr	r3, [pc, #44]	; 18100 <g_strcmp0@plt+0x2f34>
   180d0:	strd	r6, [sp, #12]
   180d4:	stmib	sp, {r2, r4}
   180d8:	str	r3, [sp]
   180dc:	ldr	r2, [pc, #32]	; 18104 <g_strcmp0@plt+0x2f38>
   180e0:	ldr	r3, [pc, #32]	; 18108 <g_strcmp0@plt+0x2f3c>
   180e4:	mov	r1, #16
   180e8:	str	r0, [sp, #20]
   180ec:	mov	r0, #0
   180f0:	bl	14668 <g_log@plt>
   180f4:	add	sp, sp, #28
   180f8:	pop	{r4, r5, r6, r7, pc}
   180fc:	andeq	r4, r3, ip, lsr pc
   18100:			; <UNDEFINED> instruction: 0x000006ba
   18104:	andeq	r4, r3, r4, lsl #30
   18108:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1810c:	push	{r4, r5, r6, r7, r8, lr}
   18110:	mov	r4, r0
   18114:	ldr	r5, [pc, #80]	; 1816c <g_strcmp0@plt+0x2fa0>
   18118:	ldr	r7, [pc, #80]	; 18170 <g_strcmp0@plt+0x2fa4>
   1811c:	ldr	r6, [pc, #80]	; 18174 <g_strcmp0@plt+0x2fa8>
   18120:	mov	r2, r7
   18124:	mov	r1, r6
   18128:	ldr	r3, [pc, #72]	; 18178 <g_strcmp0@plt+0x2fac>
   1812c:	ldr	r0, [r5]
   18130:	bl	2a300 <g_strcmp0@plt+0x15134>
   18134:	mov	r8, r0
   18138:	ldr	r0, [r4, #28]
   1813c:	bl	14bd8 <g_free@plt>
   18140:	mov	r2, r7
   18144:	mov	r1, r6
   18148:	ldr	r0, [r5]
   1814c:	ldr	r3, [pc, #40]	; 1817c <g_strcmp0@plt+0x2fb0>
   18150:	str	r8, [r4, #28]
   18154:	bl	2a300 <g_strcmp0@plt+0x15134>
   18158:	mov	r5, r0
   1815c:	ldr	r0, [r4, #32]
   18160:	bl	14bd8 <g_free@plt>
   18164:	str	r5, [r4, #32]
   18168:	pop	{r4, r5, r6, r7, r8, pc}
   1816c:	andeq	ip, r4, r4, asr #32
   18170:	andeq	r8, r3, r0, asr #3
   18174:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   18178:	ldrdeq	r4, [r3], -ip
   1817c:	andeq	r4, r3, r4, lsl #14
   18180:	push	{r4, r5, r6, r7, r8, lr}
   18184:	mov	r4, r0
   18188:	ldr	r5, [pc, #80]	; 181e0 <g_strcmp0@plt+0x3014>
   1818c:	ldr	r7, [pc, #80]	; 181e4 <g_strcmp0@plt+0x3018>
   18190:	ldr	r6, [pc, #80]	; 181e8 <g_strcmp0@plt+0x301c>
   18194:	mov	r2, r7
   18198:	mov	r1, r6
   1819c:	ldr	r3, [pc, #72]	; 181ec <g_strcmp0@plt+0x3020>
   181a0:	ldr	r0, [r5]
   181a4:	bl	2a300 <g_strcmp0@plt+0x15134>
   181a8:	mov	r8, r0
   181ac:	ldr	r0, [r4, #28]
   181b0:	bl	14bd8 <g_free@plt>
   181b4:	mov	r2, r7
   181b8:	mov	r1, r6
   181bc:	ldr	r0, [r5]
   181c0:	ldr	r3, [pc, #40]	; 181f0 <g_strcmp0@plt+0x3024>
   181c4:	str	r8, [r4, #28]
   181c8:	bl	2a300 <g_strcmp0@plt+0x15134>
   181cc:	mov	r5, r0
   181d0:	ldr	r0, [r4, #32]
   181d4:	bl	14bd8 <g_free@plt>
   181d8:	str	r5, [r4, #32]
   181dc:	pop	{r4, r5, r6, r7, r8, pc}
   181e0:	andeq	ip, r4, r4, asr #32
   181e4:	andeq	r8, r3, r4, lsl #5
   181e8:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   181ec:	ldrdeq	r4, [r3], -ip
   181f0:	andeq	r4, r3, r4, lsl #14
   181f4:	ldr	r2, [pc, #52]	; 18230 <g_strcmp0@plt+0x3064>
   181f8:	push	{r4, r5, r6, lr}
   181fc:	mov	r4, r0
   18200:	ldr	r3, [pc, #44]	; 18234 <g_strcmp0@plt+0x3068>
   18204:	ldr	r0, [r2]
   18208:	ldr	r1, [pc, #40]	; 18238 <g_strcmp0@plt+0x306c>
   1820c:	ldr	r2, [pc, #40]	; 1823c <g_strcmp0@plt+0x3070>
   18210:	bl	2a300 <g_strcmp0@plt+0x15134>
   18214:	ldr	r3, [r4, #24]
   18218:	mov	r5, r0
   1821c:	ldr	r0, [r3]
   18220:	bl	14bd8 <g_free@plt>
   18224:	ldr	r3, [r4, #24]
   18228:	str	r5, [r3]
   1822c:	pop	{r4, r5, r6, pc}
   18230:	andeq	ip, r4, r4, asr #32
   18234:	ldrdeq	r4, [r3], -ip
   18238:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1823c:	andeq	r4, r3, r8, asr #30
   18240:	push	{r4, r5, r6, lr}
   18244:	mov	r4, r0
   18248:	ldr	r5, [pc, #356]	; 183b4 <g_strcmp0@plt+0x31e8>
   1824c:	ldr	r2, [pc, #356]	; 183b8 <g_strcmp0@plt+0x31ec>
   18250:	ldr	r1, [pc, #356]	; 183bc <g_strcmp0@plt+0x31f0>
   18254:	ldr	r3, [pc, #356]	; 183c0 <g_strcmp0@plt+0x31f4>
   18258:	ldr	r0, [r5]
   1825c:	bl	2a300 <g_strcmp0@plt+0x15134>
   18260:	ldr	r3, [r4, #24]
   18264:	mov	r6, r0
   18268:	ldr	r0, [r3]
   1826c:	bl	14bd8 <g_free@plt>
   18270:	ldr	r2, [r4, #24]
   18274:	ldr	r0, [r5]
   18278:	ldr	r3, [pc, #324]	; 183c4 <g_strcmp0@plt+0x31f8>
   1827c:	str	r6, [r2]
   18280:	ldr	r1, [pc, #308]	; 183bc <g_strcmp0@plt+0x31f0>
   18284:	ldr	r2, [pc, #300]	; 183b8 <g_strcmp0@plt+0x31ec>
   18288:	bl	2a300 <g_strcmp0@plt+0x15134>
   1828c:	ldr	r3, [r4, #24]
   18290:	mov	r5, r0
   18294:	ldr	r0, [r3, #4]
   18298:	bl	14bd8 <g_free@plt>
   1829c:	ldr	r3, [r4, #24]
   182a0:	ldr	r0, [r3]
   182a4:	str	r5, [r3, #4]
   182a8:	cmp	r0, #0
   182ac:	ldr	r5, [pc, #276]	; 183c8 <g_strcmp0@plt+0x31fc>
   182b0:	beq	1833c <g_strcmp0@plt+0x3170>
   182b4:	bl	14bcc <g_quark_from_string@plt>
   182b8:	mov	r6, r0
   182bc:	ldr	r0, [r5, #200]	; 0xc8
   182c0:	cmp	r0, #0
   182c4:	beq	18348 <g_strcmp0@plt+0x317c>
   182c8:	cmp	r0, r6
   182cc:	popne	{r4, r5, r6, pc}
   182d0:	ldr	r3, [r4, #24]
   182d4:	ldr	r0, [r3, #4]
   182d8:	cmp	r0, #0
   182dc:	beq	18360 <g_strcmp0@plt+0x3194>
   182e0:	bl	14bcc <g_quark_from_string@plt>
   182e4:	mov	r6, r0
   182e8:	ldr	r0, [r5, #204]	; 0xcc
   182ec:	cmp	r0, #0
   182f0:	beq	1838c <g_strcmp0@plt+0x31c0>
   182f4:	cmp	r0, r6
   182f8:	popeq	{r4, r5, r6, pc}
   182fc:	ldr	r0, [r5, #208]	; 0xd0
   18300:	cmp	r0, #0
   18304:	beq	1837c <g_strcmp0@plt+0x31b0>
   18308:	cmp	r0, r6
   1830c:	popeq	{r4, r5, r6, pc}
   18310:	ldr	r0, [r5, #212]	; 0xd4
   18314:	cmp	r0, #0
   18318:	beq	183a4 <g_strcmp0@plt+0x31d8>
   1831c:	cmp	r0, r6
   18320:	popeq	{r4, r5, r6, pc}
   18324:	ldr	r3, [r4, #24]
   18328:	mov	r2, #1
   1832c:	ldr	r0, [pc, #152]	; 183cc <g_strcmp0@plt+0x3200>
   18330:	ldr	r1, [r3, #4]
   18334:	pop	{r4, r5, r6, lr}
   18338:	b	144f4 <g_setenv@plt>
   1833c:	ldr	r6, [r5, #200]	; 0xc8
   18340:	cmp	r6, #0
   18344:	popne	{r4, r5, r6, pc}
   18348:	ldr	r0, [pc, #128]	; 183d0 <g_strcmp0@plt+0x3204>
   1834c:	bl	14d64 <g_quark_from_static_string@plt>
   18350:	cmp	r0, r6
   18354:	str	r0, [r5, #200]	; 0xc8
   18358:	popne	{r4, r5, r6, pc}
   1835c:	b	182d0 <g_strcmp0@plt+0x3104>
   18360:	ldr	r6, [r5, #204]	; 0xcc
   18364:	cmp	r6, #0
   18368:	beq	1838c <g_strcmp0@plt+0x31c0>
   1836c:	ldr	r6, [r5, #208]	; 0xd0
   18370:	cmp	r6, #0
   18374:	movne	r6, r0
   18378:	bne	18310 <g_strcmp0@plt+0x3144>
   1837c:	ldr	r0, [pc, #80]	; 183d4 <g_strcmp0@plt+0x3208>
   18380:	bl	14d64 <g_quark_from_static_string@plt>
   18384:	str	r0, [r5, #208]	; 0xd0
   18388:	b	18308 <g_strcmp0@plt+0x313c>
   1838c:	mov	r0, #0
   18390:	bl	14d64 <g_quark_from_static_string@plt>
   18394:	cmp	r0, r6
   18398:	str	r0, [r5, #204]	; 0xcc
   1839c:	bne	182fc <g_strcmp0@plt+0x3130>
   183a0:	pop	{r4, r5, r6, pc}
   183a4:	ldr	r0, [pc, #44]	; 183d8 <g_strcmp0@plt+0x320c>
   183a8:	bl	14d64 <g_quark_from_static_string@plt>
   183ac:	str	r0, [r5, #212]	; 0xd4
   183b0:	b	1831c <g_strcmp0@plt+0x3150>
   183b4:	andeq	ip, r4, r4, asr #32
   183b8:	andeq	r4, r3, r4, asr #18
   183bc:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   183c0:	ldrdeq	r4, [r3], -ip
   183c4:	andeq	r4, r3, ip, asr pc
   183c8:	ldrdeq	ip, [r4], -r8
   183cc:	andeq	r4, r3, r0, ror pc
   183d0:	andeq	r4, r3, r4, ror #30
   183d4:	andeq	sl, r3, ip, ror #18
   183d8:	andeq	r5, r3, ip, lsr #4
   183dc:	ldr	r3, [r0]
   183e0:	cmp	r3, #0
   183e4:	beq	18404 <g_strcmp0@plt+0x3238>
   183e8:	mov	r3, r0
   183ec:	mov	r0, #0
   183f0:	ldr	r2, [r3, #4]!
   183f4:	add	r0, r0, #1
   183f8:	cmp	r2, #0
   183fc:	bne	183f0 <g_strcmp0@plt+0x3224>
   18400:	bx	lr
   18404:	mov	r0, r3
   18408:	bx	lr
   1840c:	push	{r4, r5, r6, r7, r8, r9, lr}
   18410:	mov	r1, #1
   18414:	ldr	r8, [pc, #480]	; 185fc <g_strcmp0@plt+0x3430>
   18418:	sub	sp, sp, #52	; 0x34
   1841c:	mov	r2, #4
   18420:	ldr	r3, [r8]
   18424:	mov	r0, r1
   18428:	str	r3, [sp, #44]	; 0x2c
   1842c:	bl	14a70 <g_array_new@plt>
   18430:	ldr	r1, [pc, #456]	; 18600 <g_strcmp0@plt+0x3434>
   18434:	mov	r5, r0
   18438:	bl	14e3c <g_array_set_clear_func@plt>
   1843c:	ldr	r0, [pc, #448]	; 18604 <g_strcmp0@plt+0x3438>
   18440:	bl	147e8 <g_strdup@plt>
   18444:	mov	r2, #1
   18448:	add	r1, sp, #4
   1844c:	str	r0, [sp, #4]
   18450:	mov	r0, r5
   18454:	bl	14860 <g_array_append_vals@plt>
   18458:	ldr	r0, [pc, #424]	; 18608 <g_strcmp0@plt+0x343c>
   1845c:	bl	147e8 <g_strdup@plt>
   18460:	mov	r2, #1
   18464:	add	r1, sp, #8
   18468:	str	r0, [sp, #8]
   1846c:	mov	r0, r5
   18470:	bl	14860 <g_array_append_vals@plt>
   18474:	ldr	r0, [pc, #400]	; 1860c <g_strcmp0@plt+0x3440>
   18478:	bl	147e8 <g_strdup@plt>
   1847c:	mov	r2, #1
   18480:	add	r1, sp, #12
   18484:	str	r0, [sp, #12]
   18488:	mov	r0, r5
   1848c:	bl	14860 <g_array_append_vals@plt>
   18490:	ldr	r0, [pc, #376]	; 18610 <g_strcmp0@plt+0x3444>
   18494:	bl	147e8 <g_strdup@plt>
   18498:	mov	r2, #1
   1849c:	add	r1, sp, #16
   184a0:	str	r0, [sp, #16]
   184a4:	mov	r0, r5
   184a8:	bl	14860 <g_array_append_vals@plt>
   184ac:	ldr	r0, [pc, #352]	; 18614 <g_strcmp0@plt+0x3448>
   184b0:	bl	147e8 <g_strdup@plt>
   184b4:	mov	r2, #1
   184b8:	add	r1, sp, #20
   184bc:	str	r0, [sp, #20]
   184c0:	mov	r0, r5
   184c4:	bl	14860 <g_array_append_vals@plt>
   184c8:	ldr	r0, [pc, #328]	; 18618 <g_strcmp0@plt+0x344c>
   184cc:	bl	147e8 <g_strdup@plt>
   184d0:	mov	r2, #1
   184d4:	add	r1, sp, #24
   184d8:	str	r0, [sp, #24]
   184dc:	mov	r0, r5
   184e0:	bl	14860 <g_array_append_vals@plt>
   184e4:	ldr	r0, [pc, #304]	; 1861c <g_strcmp0@plt+0x3450>
   184e8:	bl	147e8 <g_strdup@plt>
   184ec:	mov	r2, #1
   184f0:	add	r1, sp, #28
   184f4:	str	r0, [sp, #28]
   184f8:	mov	r0, r5
   184fc:	bl	14860 <g_array_append_vals@plt>
   18500:	ldr	r0, [pc, #280]	; 18620 <g_strcmp0@plt+0x3454>
   18504:	bl	147e8 <g_strdup@plt>
   18508:	mov	r2, #1
   1850c:	add	r1, sp, #32
   18510:	str	r0, [sp, #32]
   18514:	mov	r0, r5
   18518:	bl	14860 <g_array_append_vals@plt>
   1851c:	ldr	r0, [pc, #256]	; 18624 <g_strcmp0@plt+0x3458>
   18520:	bl	147e8 <g_strdup@plt>
   18524:	mov	r2, #1
   18528:	add	r1, sp, #36	; 0x24
   1852c:	str	r0, [sp, #36]	; 0x24
   18530:	mov	r0, r5
   18534:	bl	14860 <g_array_append_vals@plt>
   18538:	ldr	r0, [pc, #232]	; 18628 <g_strcmp0@plt+0x345c>
   1853c:	bl	147e8 <g_strdup@plt>
   18540:	mov	r2, #1
   18544:	add	r1, sp, #40	; 0x28
   18548:	str	r0, [sp, #40]	; 0x28
   1854c:	mov	r0, r5
   18550:	bl	14860 <g_array_append_vals@plt>
   18554:	ldr	r0, [pc, #208]	; 1862c <g_strcmp0@plt+0x3460>
   18558:	bl	147e8 <g_strdup@plt>
   1855c:	ldr	r3, [r5, #4]
   18560:	cmp	r3, #0
   18564:	mov	r9, r0
   18568:	beq	185d4 <g_strcmp0@plt+0x3408>
   1856c:	mov	r4, #0
   18570:	b	18588 <g_strcmp0@plt+0x33bc>
   18574:	bl	14bd8 <g_free@plt>
   18578:	ldr	r3, [r5, #4]
   1857c:	add	r4, r4, #1
   18580:	cmp	r3, r4
   18584:	bls	185d4 <g_strcmp0@plt+0x3408>
   18588:	ldr	r3, [r5]
   1858c:	ldr	r6, [r3, r4, lsl #2]
   18590:	mov	r0, r6
   18594:	bl	14a10 <g_find_program_in_path@plt>
   18598:	subs	r7, r0, #0
   1859c:	beq	18574 <g_strcmp0@plt+0x33a8>
   185a0:	mov	r3, r6
   185a4:	ldr	r2, [pc, #132]	; 18630 <g_strcmp0@plt+0x3464>
   185a8:	mov	r1, #32
   185ac:	mov	r0, #0
   185b0:	bl	14668 <g_log@plt>
   185b4:	mov	r0, r6
   185b8:	bl	147e8 <g_strdup@plt>
   185bc:	mov	r4, r0
   185c0:	mov	r0, r9
   185c4:	bl	14bd8 <g_free@plt>
   185c8:	mov	r0, r7
   185cc:	mov	r9, r4
   185d0:	bl	14bd8 <g_free@plt>
   185d4:	mov	r0, r5
   185d8:	bl	14ea8 <g_array_unref@plt>
   185dc:	ldr	r2, [sp, #44]	; 0x2c
   185e0:	ldr	r3, [r8]
   185e4:	mov	r0, r9
   185e8:	cmp	r2, r3
   185ec:	bne	185f8 <g_strcmp0@plt+0x342c>
   185f0:	add	sp, sp, #52	; 0x34
   185f4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   185f8:	bl	14b6c <__stack_chk_fail@plt>
   185fc:	andeq	fp, r4, r8, asr #19
   18600:	andeq	r7, r1, r8, ror #4
   18604:	andeq	r4, r3, ip, ror pc
   18608:	andeq	r4, r3, ip, lsl #31
   1860c:	muleq	r3, ip, pc	; <UNPREDICTABLE>
   18610:	andeq	r4, r3, r4, lsr #31
   18614:	andeq	r4, r3, ip, lsr #31
   18618:			; <UNDEFINED> instruction: 0x00034fb4
   1861c:			; <UNDEFINED> instruction: 0x00034fbc
   18620:	andeq	r4, r3, r4, asr #31
   18624:	ldrdeq	r4, [r3], -r0
   18628:	ldrdeq	r4, [r3], -r8
   1862c:	andeq	sl, r3, ip, ror #18
   18630:	andeq	r4, r3, r4, ror #31
   18634:	mcr	15, 0, r0, cr7, cr10, {5}
   18638:	ldrex	r3, [r0]
   1863c:	sub	r2, r3, #1
   18640:	strex	r1, r2, [r0]
   18644:	cmp	r1, #0
   18648:	bne	18638 <g_strcmp0@plt+0x346c>
   1864c:	cmp	r3, #1
   18650:	mcr	15, 0, r0, cr7, cr10, {5}
   18654:	bxne	lr
   18658:	push	{r4, r5, r6, lr}
   1865c:	mov	r4, r0
   18660:	ldr	r5, [r0, #4]
   18664:	ldr	r0, [r0, #8]
   18668:	bl	14bd8 <g_free@plt>
   1866c:	mov	r3, #0
   18670:	cmp	r5, #0
   18674:	str	r3, [r4, #8]
   18678:	beq	18684 <g_strcmp0@plt+0x34b8>
   1867c:	mov	r0, r5
   18680:	bl	14e90 <g_object_unref@plt>
   18684:	mov	r1, r4
   18688:	mov	r0, #12
   1868c:	pop	{r4, r5, r6, lr}
   18690:	b	150ac <g_slice_free1@plt>
   18694:	mcr	15, 0, r0, cr7, cr10, {5}
   18698:	ldrex	r3, [r0]
   1869c:	sub	r2, r3, #1
   186a0:	strex	r1, r2, [r0]
   186a4:	cmp	r1, #0
   186a8:	bne	18698 <g_strcmp0@plt+0x34cc>
   186ac:	cmp	r3, #1
   186b0:	mcr	15, 0, r0, cr7, cr10, {5}
   186b4:	bxne	lr
   186b8:	push	{r4, r5, r6, lr}
   186bc:	mov	r4, r0
   186c0:	ldr	r5, [r0, #4]
   186c4:	ldr	r0, [r0, #8]
   186c8:	bl	14bd8 <g_free@plt>
   186cc:	mov	r3, #0
   186d0:	cmp	r5, #0
   186d4:	str	r3, [r4, #8]
   186d8:	beq	186e4 <g_strcmp0@plt+0x3518>
   186dc:	mov	r0, r5
   186e0:	bl	14e90 <g_object_unref@plt>
   186e4:	mov	r1, r4
   186e8:	mov	r0, #12
   186ec:	pop	{r4, r5, r6, lr}
   186f0:	b	150ac <g_slice_free1@plt>
   186f4:	cmp	r1, #1
   186f8:	beq	1875c <g_strcmp0@plt+0x3590>
   186fc:	push	{r4, r5, r6, r7, lr}
   18700:	mov	r5, r0
   18704:	ldm	r3, {r2, r6}
   18708:	sub	sp, sp, #28
   1870c:	mov	r4, r1
   18710:	ldr	r0, [r2]
   18714:	bl	14680 <g_type_name@plt>
   18718:	ldr	r3, [r5]
   1871c:	mov	r7, r0
   18720:	ldr	r0, [r3]
   18724:	bl	14680 <g_type_name@plt>
   18728:	ldr	r2, [pc, #60]	; 1876c <g_strcmp0@plt+0x35a0>
   1872c:	ldr	r3, [pc, #60]	; 18770 <g_strcmp0@plt+0x35a4>
   18730:	strd	r6, [sp, #12]
   18734:	stmib	sp, {r2, r4}
   18738:	str	r3, [sp]
   1873c:	ldr	r2, [pc, #48]	; 18774 <g_strcmp0@plt+0x35a8>
   18740:	ldr	r3, [pc, #48]	; 18778 <g_strcmp0@plt+0x35ac>
   18744:	mov	r1, #16
   18748:	str	r0, [sp, #20]
   1874c:	mov	r0, #0
   18750:	bl	14668 <g_log@plt>
   18754:	add	sp, sp, #28
   18758:	pop	{r4, r5, r6, r7, pc}
   1875c:	ldr	r3, [r0, #24]
   18760:	mov	r0, r2
   18764:	ldr	r1, [r3]
   18768:	b	14980 <g_value_set_string@plt>
   1876c:	andeq	r4, r3, ip, lsr pc
   18770:	andeq	r0, r0, sp, ror #15
   18774:	andeq	r4, r3, r4, lsl #30
   18778:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1877c:	push	{r4, r5, r6, r7, r8, r9, lr}
   18780:	mov	r6, #0
   18784:	ldr	r4, [pc, #520]	; 18994 <g_strcmp0@plt+0x37c8>
   18788:	ldrb	r2, [r0]
   1878c:	sub	sp, sp, #28
   18790:	ldr	r3, [r4]
   18794:	cmp	r2, r6
   18798:	mov	r5, r0
   1879c:	str	r3, [sp, #20]
   187a0:	str	r6, [sp, #16]
   187a4:	beq	18854 <g_strcmp0@plt+0x3688>
   187a8:	ldr	r8, [pc, #488]	; 18998 <g_strcmp0@plt+0x37cc>
   187ac:	ldr	r0, [pc, #488]	; 1899c <g_strcmp0@plt+0x37d0>
   187b0:	mov	r1, r8
   187b4:	bl	151cc <g_strcmp0@plt>
   187b8:	cmp	r0, #0
   187bc:	beq	18854 <g_strcmp0@plt+0x3688>
   187c0:	mvn	r1, #0
   187c4:	ldr	r0, [pc, #464]	; 1899c <g_strcmp0@plt+0x37d0>
   187c8:	bl	15034 <g_regex_escape_string@plt>
   187cc:	add	r3, sp, #16
   187d0:	mov	r2, r6
   187d4:	mov	r1, r6
   187d8:	mov	r9, r0
   187dc:	bl	14a58 <g_regex_new@plt>
   187e0:	mov	r7, r0
   187e4:	mov	r0, r9
   187e8:	bl	14bd8 <g_free@plt>
   187ec:	ldr	r3, [sp, #16]
   187f0:	cmp	r3, #0
   187f4:	beq	1887c <g_strcmp0@plt+0x36b0>
   187f8:	ldr	r5, [r3]
   187fc:	bl	14cf8 <g_regex_error_quark@plt>
   18800:	cmp	r5, r0
   18804:	bne	18934 <g_strcmp0@plt+0x3768>
   18808:	ldr	r0, [sp, #16]
   1880c:	mov	r6, #0
   18810:	cmp	r0, r6
   18814:	str	r6, [sp, #16]
   18818:	beq	18860 <g_strcmp0@plt+0x3694>
   1881c:	bl	1453c <g_error_free@plt>
   18820:	ldr	r7, [sp, #16]
   18824:	cmp	r7, #0
   18828:	beq	18860 <g_strcmp0@plt+0x3694>
   1882c:	ldr	r0, [r7]
   18830:	bl	14c2c <g_quark_to_string@plt>
   18834:	ldr	r3, [r7, #4]
   18838:	ldr	ip, [pc, #352]	; 189a0 <g_strcmp0@plt+0x37d4>
   1883c:	str	r3, [sp, #12]
   18840:	ldr	r2, [pc, #348]	; 189a4 <g_strcmp0@plt+0x37d8>
   18844:	ldr	r3, [pc, #348]	; 189a8 <g_strcmp0@plt+0x37dc>
   18848:	mov	r1, #8
   1884c:	mov	r5, r6
   18850:	b	1895c <g_strcmp0@plt+0x3790>
   18854:	mov	r0, r5
   18858:	bl	147e8 <g_strdup@plt>
   1885c:	mov	r5, r0
   18860:	ldr	r2, [sp, #20]
   18864:	ldr	r3, [r4]
   18868:	mov	r0, r5
   1886c:	cmp	r2, r3
   18870:	bne	18990 <g_strcmp0@plt+0x37c4>
   18874:	add	sp, sp, #28
   18878:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1887c:	add	r2, sp, #16
   18880:	str	r2, [sp, #8]
   18884:	mov	r1, r5
   18888:	str	r3, [sp, #4]
   1888c:	str	r8, [sp]
   18890:	mvn	r2, #0
   18894:	mov	r0, r7
   18898:	bl	14aa0 <g_regex_replace_literal@plt>
   1889c:	mov	r5, r0
   188a0:	ldr	r0, [sp, #16]
   188a4:	cmp	r0, #0
   188a8:	beq	1891c <g_strcmp0@plt+0x3750>
   188ac:	cmp	r7, #0
   188b0:	beq	1897c <g_strcmp0@plt+0x37b0>
   188b4:	mov	r0, r7
   188b8:	bl	1489c <g_regex_unref@plt>
   188bc:	ldr	r3, [sp, #16]
   188c0:	ldr	r5, [r3]
   188c4:	bl	14cf8 <g_regex_error_quark@plt>
   188c8:	cmp	r5, r0
   188cc:	beq	18808 <g_strcmp0@plt+0x363c>
   188d0:	ldr	r6, [sp, #16]
   188d4:	mov	r5, #0
   188d8:	ldr	r0, [r6]
   188dc:	bl	14c2c <g_quark_to_string@plt>
   188e0:	ldr	r3, [r6, #4]
   188e4:	ldr	ip, [pc, #192]	; 189ac <g_strcmp0@plt+0x37e0>
   188e8:	str	r3, [sp, #12]
   188ec:	ldr	r2, [pc, #188]	; 189b0 <g_strcmp0@plt+0x37e4>
   188f0:	ldr	r3, [pc, #176]	; 189a8 <g_strcmp0@plt+0x37dc>
   188f4:	mov	r1, #8
   188f8:	str	r0, [sp, #8]
   188fc:	ldr	r0, [r6, #8]
   18900:	str	ip, [sp]
   18904:	str	r0, [sp, #4]
   18908:	mov	r0, r5
   1890c:	bl	14668 <g_log@plt>
   18910:	add	r0, sp, #16
   18914:	bl	14dac <g_clear_error@plt>
   18918:	b	18860 <g_strcmp0@plt+0x3694>
   1891c:	bl	14bd8 <g_free@plt>
   18920:	cmp	r7, #0
   18924:	beq	18860 <g_strcmp0@plt+0x3694>
   18928:	mov	r0, r7
   1892c:	bl	1489c <g_regex_unref@plt>
   18930:	b	18860 <g_strcmp0@plt+0x3694>
   18934:	ldr	r7, [sp, #16]
   18938:	mov	r5, r6
   1893c:	ldr	r0, [r7]
   18940:	bl	14c2c <g_quark_to_string@plt>
   18944:	ldr	r3, [r7, #4]
   18948:	ldr	ip, [pc, #100]	; 189b4 <g_strcmp0@plt+0x37e8>
   1894c:	str	r3, [sp, #12]
   18950:	ldr	r2, [pc, #88]	; 189b0 <g_strcmp0@plt+0x37e4>
   18954:	ldr	r3, [pc, #76]	; 189a8 <g_strcmp0@plt+0x37dc>
   18958:	mov	r1, #8
   1895c:	str	r0, [sp, #8]
   18960:	ldr	lr, [r7, #8]
   18964:	mov	r0, r6
   18968:	stm	sp, {ip, lr}
   1896c:	bl	14668 <g_log@plt>
   18970:	add	r0, sp, #16
   18974:	bl	14dac <g_clear_error@plt>
   18978:	b	18860 <g_strcmp0@plt+0x3694>
   1897c:	ldr	r5, [r0]
   18980:	bl	14cf8 <g_regex_error_quark@plt>
   18984:	cmp	r5, r0
   18988:	bne	188d0 <g_strcmp0@plt+0x3704>
   1898c:	b	18808 <g_strcmp0@plt+0x363c>
   18990:	bl	14b6c <__stack_chk_fail@plt>
   18994:	andeq	fp, r4, r8, asr #19
   18998:	andeq	r5, r3, r0
   1899c:	andeq	r5, r3, r8
   189a0:	andeq	r1, r0, pc, lsl #18
   189a4:	andeq	r4, r3, r4, lsr #13
   189a8:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   189ac:	strdeq	r1, [r0], -r9
   189b0:	andeq	r4, r3, r4, ror r6
   189b4:	andeq	r1, r0, ip, ror #17
   189b8:	bx	lr
   189bc:	push	{r4, r5, r6, lr}
   189c0:	subs	r6, r0, #0
   189c4:	beq	189f4 <g_strcmp0@plt+0x3828>
   189c8:	cmp	r1, #0
   189cc:	ble	189f4 <g_strcmp0@plt+0x3828>
   189d0:	add	r1, r6, r1, lsl #2
   189d4:	sub	r5, r1, #4
   189d8:	sub	r4, r6, #4
   189dc:	ldr	r3, [r4, #4]!
   189e0:	subs	r0, r3, #0
   189e4:	beq	189ec <g_strcmp0@plt+0x3820>
   189e8:	bl	14bd8 <g_free@plt>
   189ec:	cmp	r4, r5
   189f0:	bne	189dc <g_strcmp0@plt+0x3810>
   189f4:	mov	r0, r6
   189f8:	pop	{r4, r5, r6, lr}
   189fc:	b	14bd8 <g_free@plt>
   18a00:	ldr	r3, [r0, #12]
   18a04:	push	{r4, r5, r6, lr}
   18a08:	mov	r4, r0
   18a0c:	ldr	r0, [r3]
   18a10:	bl	14bd8 <g_free@plt>
   18a14:	ldr	r3, [r4, #12]
   18a18:	mov	r5, #0
   18a1c:	ldrd	r0, [r3, #4]
   18a20:	str	r5, [r3]
   18a24:	bl	189bc <g_strcmp0@plt+0x37f0>
   18a28:	ldr	r3, [r4, #12]
   18a2c:	str	r5, [r3, #4]
   18a30:	ldr	r0, [r3, #20]
   18a34:	bl	14bd8 <g_free@plt>
   18a38:	ldr	r3, [pc, #24]	; 18a58 <g_strcmp0@plt+0x388c>
   18a3c:	ldr	r2, [r4, #12]
   18a40:	mov	r0, r4
   18a44:	ldr	r3, [r3, #168]	; 0xa8
   18a48:	str	r5, [r2, #20]
   18a4c:	pop	{r4, r5, r6, lr}
   18a50:	ldr	r3, [r3, #24]
   18a54:	bx	r3
   18a58:	ldrdeq	ip, [r4], -r8
   18a5c:	bx	lr
   18a60:	bx	lr
   18a64:	bx	lr
   18a68:	bx	lr
   18a6c:	push	{r4, lr}
   18a70:	mov	r1, #0
   18a74:	bl	143d4 <g_object_new@plt>
   18a78:	ldr	r3, [r0]
   18a7c:	mov	r4, r0
   18a80:	ldr	r3, [r3, #68]	; 0x44
   18a84:	blx	r3
   18a88:	ldr	r3, [r4]
   18a8c:	mov	r0, r4
   18a90:	ldr	r3, [r3, #72]	; 0x48
   18a94:	blx	r3
   18a98:	mov	r0, r4
   18a9c:	pop	{r4, pc}
   18aa0:	ldr	r2, [r0, #12]
   18aa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18aa8:	mov	r5, r0
   18aac:	ldr	r6, [pc, #588]	; 18d00 <g_strcmp0@plt+0x3b34>
   18ab0:	ldr	r0, [r2]
   18ab4:	sub	sp, sp, #36	; 0x24
   18ab8:	mov	r4, #0
   18abc:	ldr	r3, [r6]
   18ac0:	cmp	r0, r4
   18ac4:	str	r3, [sp, #28]
   18ac8:	str	r4, [sp, #20]
   18acc:	beq	18ae4 <g_strcmp0@plt+0x3918>
   18ad0:	mov	r7, r1
   18ad4:	ldr	r1, [pc, #552]	; 18d04 <g_strcmp0@plt+0x3b38>
   18ad8:	bl	151cc <g_strcmp0@plt>
   18adc:	cmp	r0, r4
   18ae0:	bne	18afc <g_strcmp0@plt+0x3930>
   18ae4:	ldr	r2, [sp, #28]
   18ae8:	ldr	r3, [r6]
   18aec:	cmp	r2, r3
   18af0:	bne	18cfc <g_strcmp0@plt+0x3b30>
   18af4:	add	sp, sp, #36	; 0x24
   18af8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18afc:	str	r4, [sp, #24]
   18b00:	bl	14d04 <g_get_environ@plt>
   18b04:	subs	r9, r0, #0
   18b08:	moveq	fp, r9
   18b0c:	beq	18b18 <g_strcmp0@plt+0x394c>
   18b10:	bl	183dc <g_strcmp0@plt+0x3210>
   18b14:	mov	fp, r0
   18b18:	ldr	r2, [r5, #12]
   18b1c:	mov	r8, #0
   18b20:	add	r3, sp, #24
   18b24:	add	sl, sp, #20
   18b28:	ldr	r1, [r2, #4]
   18b2c:	mov	r0, r7
   18b30:	str	r3, [sp, #8]
   18b34:	str	sl, [sp, #12]
   18b38:	str	r8, [sp, #4]
   18b3c:	str	r8, [sp]
   18b40:	mov	r3, #6
   18b44:	mov	r2, r9
   18b48:	bl	14800 <g_spawn_async@plt>
   18b4c:	ldr	r4, [sp, #20]
   18b50:	ldr	r7, [sp, #24]
   18b54:	cmp	r4, r8
   18b58:	str	r7, [r5, #16]
   18b5c:	beq	18bd0 <g_strcmp0@plt+0x3a04>
   18b60:	mov	r0, r9
   18b64:	mov	r1, fp
   18b68:	bl	189bc <g_strcmp0@plt+0x37f0>
   18b6c:	ldr	r3, [sp, #20]
   18b70:	ldr	r4, [r3]
   18b74:	bl	146ec <g_spawn_error_quark@plt>
   18b78:	cmp	r4, r0
   18b7c:	beq	18cbc <g_strcmp0@plt+0x3af0>
   18b80:	mov	r1, fp
   18b84:	mov	r0, r8
   18b88:	bl	189bc <g_strcmp0@plt+0x37f0>
   18b8c:	ldr	r4, [sp, #20]
   18b90:	ldr	r0, [r4]
   18b94:	bl	14c2c <g_quark_to_string@plt>
   18b98:	ldr	r3, [r4, #4]
   18b9c:	ldr	ip, [pc, #356]	; 18d08 <g_strcmp0@plt+0x3b3c>
   18ba0:	str	r3, [sp, #12]
   18ba4:	ldr	r2, [pc, #352]	; 18d0c <g_strcmp0@plt+0x3b40>
   18ba8:	ldr	r3, [pc, #352]	; 18d10 <g_strcmp0@plt+0x3b44>
   18bac:	mov	r1, #8
   18bb0:	str	r0, [sp, #8]
   18bb4:	ldr	lr, [r4, #8]
   18bb8:	mov	r0, r8
   18bbc:	stm	sp, {ip, lr}
   18bc0:	bl	14668 <g_log@plt>
   18bc4:	mov	r0, sl
   18bc8:	bl	14dac <g_clear_error@plt>
   18bcc:	b	18ae4 <g_strcmp0@plt+0x3918>
   18bd0:	mov	r0, r5
   18bd4:	bl	14404 <g_object_ref@plt>
   18bd8:	ldr	r3, [pc, #308]	; 18d14 <g_strcmp0@plt+0x3b48>
   18bdc:	mov	r1, r7
   18be0:	str	r3, [sp]
   18be4:	ldr	r2, [pc, #300]	; 18d18 <g_strcmp0@plt+0x3b4c>
   18be8:	ldr	r7, [pc, #300]	; 18d1c <g_strcmp0@plt+0x3b50>
   18bec:	mov	r3, r0
   18bf0:	mov	r0, #200	; 0xc8
   18bf4:	bl	1513c <g_child_watch_add_full@plt>
   18bf8:	ldr	r3, [r5, #12]
   18bfc:	ldr	r2, [pc, #284]	; 18d20 <g_strcmp0@plt+0x3b54>
   18c00:	mov	r1, #32
   18c04:	ldr	r3, [r3]
   18c08:	mov	r0, r4
   18c0c:	bl	14668 <g_log@plt>
   18c10:	ldr	r3, [r5, #12]
   18c14:	ldr	r2, [r3, #8]
   18c18:	ldr	r3, [r3, #4]
   18c1c:	cmp	r2, #0
   18c20:	ldrge	r8, [pc, #252]	; 18d24 <g_strcmp0@plt+0x3b58>
   18c24:	blt	18c54 <g_strcmp0@plt+0x3a88>
   18c28:	ldr	r3, [r3, r4, lsl #2]
   18c2c:	mov	r2, r8
   18c30:	mov	r1, #1
   18c34:	ldr	r0, [r7]
   18c38:	bl	147dc <__fprintf_chk@plt>
   18c3c:	ldr	r3, [r5, #12]
   18c40:	add	r4, r4, #1
   18c44:	ldr	r2, [r3, #8]
   18c48:	ldr	r3, [r3, #4]
   18c4c:	cmp	r4, r2
   18c50:	ble	18c28 <g_strcmp0@plt+0x3a5c>
   18c54:	ldr	r1, [r7]
   18c58:	mov	r0, #10
   18c5c:	bl	14e00 <fputc@plt>
   18c60:	mov	r1, fp
   18c64:	mov	r0, r9
   18c68:	bl	189bc <g_strcmp0@plt+0x37f0>
   18c6c:	ldr	r4, [sp, #20]
   18c70:	cmp	r4, #0
   18c74:	beq	18ae4 <g_strcmp0@plt+0x3918>
   18c78:	ldr	r0, [r4]
   18c7c:	bl	14c2c <g_quark_to_string@plt>
   18c80:	ldr	r3, [r4, #4]
   18c84:	ldr	ip, [pc, #156]	; 18d28 <g_strcmp0@plt+0x3b5c>
   18c88:	str	r3, [sp, #12]
   18c8c:	ldr	r2, [pc, #152]	; 18d2c <g_strcmp0@plt+0x3b60>
   18c90:	ldr	r3, [pc, #120]	; 18d10 <g_strcmp0@plt+0x3b44>
   18c94:	mov	r1, #8
   18c98:	str	r0, [sp, #8]
   18c9c:	ldr	r0, [r4, #8]
   18ca0:	str	ip, [sp]
   18ca4:	str	r0, [sp, #4]
   18ca8:	mov	r0, #0
   18cac:	bl	14668 <g_log@plt>
   18cb0:	mov	r0, sl
   18cb4:	bl	14dac <g_clear_error@plt>
   18cb8:	b	18ae4 <g_strcmp0@plt+0x3918>
   18cbc:	ldr	r4, [sp, #20]
   18cc0:	mov	r0, r8
   18cc4:	ldr	r2, [pc, #100]	; 18d30 <g_strcmp0@plt+0x3b64>
   18cc8:	ldr	r3, [r4, #8]
   18ccc:	mov	r1, #16
   18cd0:	str	r8, [sp, #20]
   18cd4:	bl	14668 <g_log@plt>
   18cd8:	ldr	r3, [r5, #12]
   18cdc:	mov	r0, r8
   18ce0:	ldr	r2, [pc, #76]	; 18d34 <g_strcmp0@plt+0x3b68>
   18ce4:	ldr	r3, [r3]
   18ce8:	mov	r1, #16
   18cec:	bl	14668 <g_log@plt>
   18cf0:	mov	r0, r4
   18cf4:	bl	1453c <g_error_free@plt>
   18cf8:	b	18c6c <g_strcmp0@plt+0x3aa0>
   18cfc:	bl	14b6c <__stack_chk_fail@plt>
   18d00:	andeq	fp, r4, r8, asr #19
   18d04:	andeq	sl, r3, ip, ror #18
   18d08:	andeq	r0, r0, r6, ror #9
   18d0c:	andeq	r4, r3, r4, ror r6
   18d10:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   18d14:	muleq	r1, r0, lr
   18d18:	andeq	r8, r1, r0, asr #26
   18d1c:	andeq	ip, r4, r8, lsr #32
   18d20:	andeq	r5, r3, r4, lsl r0
   18d24:	andeq	r5, r3, r8, rrx
   18d28:	andeq	r0, r0, lr, lsr #10
   18d2c:	andeq	r4, r3, r4, lsr #13
   18d30:	andeq	r5, r3, r0, lsr r0
   18d34:	andeq	r5, r3, r0, asr #32
   18d38:	mov	r1, #0
   18d3c:	b	18aa0 <g_strcmp0@plt+0x38d4>
   18d40:	ldr	r3, [r2, #12]
   18d44:	push	{r4, r5, r6, lr}
   18d48:	sub	sp, sp, #8
   18d4c:	mov	r5, r1
   18d50:	ldr	r3, [r3]
   18d54:	mov	r4, r2
   18d58:	mov	r6, r0
   18d5c:	ldr	r2, [pc, #216]	; 18e3c <g_strcmp0@plt+0x3c70>
   18d60:	mov	r1, #32
   18d64:	mov	r0, #0
   18d68:	str	r5, [sp]
   18d6c:	bl	14668 <g_log@plt>
   18d70:	mov	r0, r6
   18d74:	bl	14644 <g_spawn_close_pid@plt>
   18d78:	ldr	r3, [r4, #12]
   18d7c:	ldr	r3, [r3, #16]
   18d80:	cmp	r3, #1
   18d84:	beq	18d90 <g_strcmp0@plt+0x3bc4>
   18d88:	add	sp, sp, #8
   18d8c:	pop	{r4, r5, r6, pc}
   18d90:	cmp	r5, #15
   18d94:	beq	18e2c <g_strcmp0@plt+0x3c60>
   18d98:	cmp	r5, #256	; 0x100
   18d9c:	beq	18e14 <g_strcmp0@plt+0x3c48>
   18da0:	cmp	r5, #0
   18da4:	beq	18dfc <g_strcmp0@plt+0x3c30>
   18da8:	ldr	r2, [pc, #144]	; 18e40 <g_strcmp0@plt+0x3c74>
   18dac:	mov	r1, #32
   18db0:	mov	r0, #0
   18db4:	bl	14668 <g_log@plt>
   18db8:	ldr	r2, [r4, #12]
   18dbc:	ldr	r1, [pc, #128]	; 18e44 <g_strcmp0@plt+0x3c78>
   18dc0:	mov	r0, r4
   18dc4:	ldr	r3, [r2, #24]
   18dc8:	ldr	r1, [r1, #192]	; 0xc0
   18dcc:	add	r3, r3, #1
   18dd0:	str	r3, [r2, #24]
   18dd4:	bl	14b78 <g_object_notify_by_pspec@plt>
   18dd8:	ldr	r3, [r4, #12]
   18ddc:	ldrd	r2, [r3, #24]
   18de0:	cmp	r2, r3
   18de4:	bgt	18e34 <g_strcmp0@plt+0x3c68>
   18de8:	mov	r0, r4
   18dec:	mov	r1, #0
   18df0:	add	sp, sp, #8
   18df4:	pop	{r4, r5, r6, lr}
   18df8:	b	18aa0 <g_strcmp0@plt+0x38d4>
   18dfc:	mov	r0, r5
   18e00:	ldr	r2, [pc, #64]	; 18e48 <g_strcmp0@plt+0x3c7c>
   18e04:	mov	r1, #32
   18e08:	add	sp, sp, #8
   18e0c:	pop	{r4, r5, r6, lr}
   18e10:	b	14668 <g_log@plt>
   18e14:	ldr	r2, [pc, #48]	; 18e4c <g_strcmp0@plt+0x3c80>
   18e18:	mov	r1, #32
   18e1c:	mov	r0, #0
   18e20:	add	sp, sp, #8
   18e24:	pop	{r4, r5, r6, lr}
   18e28:	b	14668 <g_log@plt>
   18e2c:	ldr	r2, [pc, #28]	; 18e50 <g_strcmp0@plt+0x3c84>
   18e30:	b	18e18 <g_strcmp0@plt+0x3c4c>
   18e34:	ldr	r2, [pc, #24]	; 18e54 <g_strcmp0@plt+0x3c88>
   18e38:	b	18e18 <g_strcmp0@plt+0x3c4c>
   18e3c:	andeq	r5, r3, ip, rrx
   18e40:	andeq	r5, r3, r0, lsr #2
   18e44:	ldrdeq	ip, [r4], -r8
   18e48:	andeq	r5, r3, r0, lsr #1
   18e4c:	strdeq	r5, [r3], -r8
   18e50:	andeq	r5, r3, r8, asr #1
   18e54:	andeq	r5, r3, r0, asr r1
   18e58:	ldr	r3, [r0]
   18e5c:	ldr	r3, [r3, #68]	; 0x44
   18e60:	bx	r3
   18e64:	ldr	r3, [r0]
   18e68:	ldr	r3, [r3, #72]	; 0x48
   18e6c:	bx	r3
   18e70:	ldr	r3, [r0, #16]
   18e74:	cmp	r3, #0
   18e78:	bxeq	lr
   18e7c:	push	{r4, lr}
   18e80:	mov	r4, r0
   18e84:	mov	r1, #32
   18e88:	mov	r0, #0
   18e8c:	ldr	r2, [pc, #16]	; 18ea4 <g_strcmp0@plt+0x3cd8>
   18e90:	bl	14668 <g_log@plt>
   18e94:	ldr	r0, [r4, #16]
   18e98:	mov	r1, #15
   18e9c:	pop	{r4, lr}
   18ea0:	b	149f8 <kill@plt>
   18ea4:	andeq	r5, r3, ip, lsl #3
   18ea8:	push	{r4, lr}
   18eac:	mov	r1, #32
   18eb0:	mov	r4, r0
   18eb4:	ldr	r2, [pc, #28]	; 18ed8 <g_strcmp0@plt+0x3d0c>
   18eb8:	mov	r0, #0
   18ebc:	bl	14668 <g_log@plt>
   18ec0:	mov	r0, r4
   18ec4:	bl	18e70 <g_strcmp0@plt+0x3ca4>
   18ec8:	mov	r0, r4
   18ecc:	mov	r1, #0
   18ed0:	pop	{r4, lr}
   18ed4:	b	18aa0 <g_strcmp0@plt+0x38d4>
   18ed8:			; <UNDEFINED> instruction: 0x000351b8
   18edc:	ldr	r3, [r0]
   18ee0:	push	{r4, lr}
   18ee4:	mov	r4, r0
   18ee8:	ldr	r3, [r3, #68]	; 0x44
   18eec:	blx	r3
   18ef0:	ldr	r3, [r4]
   18ef4:	mov	r0, r4
   18ef8:	pop	{r4, lr}
   18efc:	ldr	r3, [r3, #72]	; 0x48
   18f00:	bx	r3
   18f04:	ldr	r3, [r0, #12]
   18f08:	ldr	r0, [r3]
   18f0c:	bx	lr
   18f10:	ldr	r3, [r0, #12]
   18f14:	push	{r4, r5, r6, lr}
   18f18:	mov	r4, r0
   18f1c:	mov	r5, r1
   18f20:	mov	r0, r1
   18f24:	ldr	r1, [r3]
   18f28:	bl	151cc <g_strcmp0@plt>
   18f2c:	cmp	r0, #0
   18f30:	popeq	{r4, r5, r6, pc}
   18f34:	mov	r0, r5
   18f38:	bl	147e8 <g_strdup@plt>
   18f3c:	ldr	r3, [r4, #12]
   18f40:	mov	r5, r0
   18f44:	ldr	r0, [r3]
   18f48:	bl	14bd8 <g_free@plt>
   18f4c:	ldr	r2, [r4, #12]
   18f50:	ldr	r3, [pc, #16]	; 18f68 <g_strcmp0@plt+0x3d9c>
   18f54:	mov	r0, r4
   18f58:	str	r5, [r2]
   18f5c:	ldr	r1, [r3, #176]	; 0xb0
   18f60:	pop	{r4, r5, r6, lr}
   18f64:	b	14b78 <g_object_notify_by_pspec@plt>
   18f68:	ldrdeq	ip, [r4], -r8
   18f6c:	ldr	r3, [r0, #12]
   18f70:	cmp	r1, #0
   18f74:	ldr	r0, [r3, #4]
   18f78:	ldrne	r3, [r3, #8]
   18f7c:	strne	r3, [r1]
   18f80:	bx	lr
   18f84:	ldr	r3, [r0, #12]
   18f88:	push	{r4, r5, r6, lr}
   18f8c:	mov	r5, r0
   18f90:	ldr	r0, [r3, #4]
   18f94:	cmp	r1, r0
   18f98:	popeq	{r4, r5, r6, pc}
   18f9c:	cmp	r1, #0
   18fa0:	mov	r4, r1
   18fa4:	mov	r6, r2
   18fa8:	beq	18fc4 <g_strcmp0@plt+0x3df8>
   18fac:	mov	r0, r1
   18fb0:	mov	r1, r2
   18fb4:	bl	17878 <g_strcmp0@plt+0x26ac>
   18fb8:	ldr	r3, [r5, #12]
   18fbc:	mov	r4, r0
   18fc0:	ldr	r0, [r3, #4]
   18fc4:	ldr	r1, [r3, #8]
   18fc8:	bl	189bc <g_strcmp0@plt+0x37f0>
   18fcc:	ldr	r3, [r5, #12]
   18fd0:	ldr	r2, [pc, #20]	; 18fec <g_strcmp0@plt+0x3e20>
   18fd4:	mov	r0, r5
   18fd8:	stmib	r3, {r4, r6}
   18fdc:	str	r6, [r3, #12]
   18fe0:	ldr	r1, [r2, #180]	; 0xb4
   18fe4:	pop	{r4, r5, r6, lr}
   18fe8:	b	14b78 <g_object_notify_by_pspec@plt>
   18fec:	ldrdeq	ip, [r4], -r8
   18ff0:	ldr	r3, [r0, #24]
   18ff4:	push	{r4, r5, r6, lr}
   18ff8:	mov	r2, #0
   18ffc:	mov	r5, r0
   19000:	ldr	r1, [pc, #68]	; 1904c <g_strcmp0@plt+0x3e80>
   19004:	ldr	r0, [r3]
   19008:	bl	14530 <g_strsplit_set@plt>
   1900c:	subs	r4, r0, #0
   19010:	moveq	r6, r4
   19014:	beq	19020 <g_strcmp0@plt+0x3e54>
   19018:	bl	183dc <g_strcmp0@plt+0x3210>
   1901c:	mov	r6, r0
   19020:	ldr	r1, [r4]
   19024:	mov	r0, r5
   19028:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1902c:	mov	r1, r4
   19030:	mov	r0, r5
   19034:	mov	r2, r6
   19038:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1903c:	mov	r1, r6
   19040:	mov	r0, r4
   19044:	pop	{r4, r5, r6, lr}
   19048:	b	189bc <g_strcmp0@plt+0x37f0>
   1904c:	andeq	r5, r3, ip, lsr #4
   19050:	push	{r4, r5, r6, r7, r8, lr}
   19054:	mov	r4, r0
   19058:	ldr	r5, [pc, #748]	; 1934c <g_strcmp0@plt+0x4180>
   1905c:	ldr	r2, [pc, #748]	; 19350 <g_strcmp0@plt+0x4184>
   19060:	ldr	r1, [pc, #748]	; 19354 <g_strcmp0@plt+0x4188>
   19064:	ldr	r3, [pc, #748]	; 19358 <g_strcmp0@plt+0x418c>
   19068:	ldr	r0, [r5]
   1906c:	bl	2a300 <g_strcmp0@plt+0x15134>
   19070:	ldr	r3, [r4, #24]
   19074:	mov	r6, r0
   19078:	ldr	r0, [r3]
   1907c:	bl	14bd8 <g_free@plt>
   19080:	ldr	r2, [r4, #24]
   19084:	ldr	r0, [r5]
   19088:	ldr	r1, [pc, #708]	; 19354 <g_strcmp0@plt+0x4188>
   1908c:	str	r6, [r2]
   19090:	ldr	r3, [pc, #708]	; 1935c <g_strcmp0@plt+0x4190>
   19094:	ldr	r2, [pc, #692]	; 19350 <g_strcmp0@plt+0x4184>
   19098:	bl	2a300 <g_strcmp0@plt+0x15134>
   1909c:	ldr	r3, [r4, #24]
   190a0:	mov	r6, r0
   190a4:	ldr	r0, [r3, #4]
   190a8:	bl	14bd8 <g_free@plt>
   190ac:	ldr	r2, [r4, #24]
   190b0:	ldr	r0, [r5]
   190b4:	ldr	r3, [pc, #676]	; 19360 <g_strcmp0@plt+0x4194>
   190b8:	str	r6, [r2, #4]
   190bc:	ldr	r1, [pc, #656]	; 19354 <g_strcmp0@plt+0x4188>
   190c0:	ldr	r2, [pc, #648]	; 19350 <g_strcmp0@plt+0x4184>
   190c4:	bl	2a300 <g_strcmp0@plt+0x15134>
   190c8:	ldr	r3, [r4, #24]
   190cc:	mov	r5, r0
   190d0:	ldr	r0, [r3, #8]
   190d4:	bl	14bd8 <g_free@plt>
   190d8:	ldr	r3, [r4, #24]
   190dc:	ldr	r0, [r3]
   190e0:	str	r5, [r3, #8]
   190e4:	cmp	r0, #0
   190e8:	ldr	r5, [pc, #628]	; 19364 <g_strcmp0@plt+0x4198>
   190ec:	beq	19238 <g_strcmp0@plt+0x406c>
   190f0:	bl	14bcc <g_quark_from_string@plt>
   190f4:	mov	r6, r0
   190f8:	ldr	r0, [r5, #216]	; 0xd8
   190fc:	cmp	r0, #0
   19100:	beq	19220 <g_strcmp0@plt+0x4054>
   19104:	cmp	r0, r6
   19108:	beq	19188 <g_strcmp0@plt+0x3fbc>
   1910c:	ldr	r0, [r5, #220]	; 0xdc
   19110:	cmp	r0, #0
   19114:	beq	19254 <g_strcmp0@plt+0x4088>
   19118:	cmp	r0, r6
   1911c:	beq	19268 <g_strcmp0@plt+0x409c>
   19120:	ldr	r0, [r5, #224]	; 0xe0
   19124:	cmp	r0, #0
   19128:	beq	19300 <g_strcmp0@plt+0x4134>
   1912c:	ldr	r3, [r4, #24]
   19130:	cmp	r0, r6
   19134:	ldr	r0, [r3]
   19138:	beq	19294 <g_strcmp0@plt+0x40c8>
   1913c:	mov	r2, #0
   19140:	ldr	r1, [pc, #544]	; 19368 <g_strcmp0@plt+0x419c>
   19144:	bl	14530 <g_strsplit_set@plt>
   19148:	subs	r5, r0, #0
   1914c:	moveq	r6, r5
   19150:	beq	1915c <g_strcmp0@plt+0x3f90>
   19154:	bl	183dc <g_strcmp0@plt+0x3210>
   19158:	mov	r6, r0
   1915c:	ldr	r1, [r5]
   19160:	mov	r0, r4
   19164:	bl	18f10 <g_strcmp0@plt+0x3d44>
   19168:	mov	r1, r5
   1916c:	mov	r0, r4
   19170:	mov	r2, r6
   19174:	bl	18f84 <g_strcmp0@plt+0x3db8>
   19178:	mov	r1, r6
   1917c:	mov	r0, r5
   19180:	pop	{r4, r5, r6, r7, r8, lr}
   19184:	b	189bc <g_strcmp0@plt+0x37f0>
   19188:	ldr	r3, [r4, #24]
   1918c:	mov	r0, r4
   19190:	ldr	r1, [r3]
   19194:	bl	18f10 <g_strcmp0@plt+0x3d44>
   19198:	ldr	r3, [r4, #24]
   1919c:	ldr	r1, [r3, #4]
   191a0:	cmp	r1, #0
   191a4:	beq	19310 <g_strcmp0@plt+0x4144>
   191a8:	ldr	r0, [pc, #444]	; 1936c <g_strcmp0@plt+0x41a0>
   191ac:	mov	r2, #0
   191b0:	bl	14dc4 <g_strconcat@plt>
   191b4:	ldr	r3, [r4, #24]
   191b8:	mov	r2, #0
   191bc:	ldr	r1, [r3, #8]
   191c0:	mov	r5, r0
   191c4:	bl	14dc4 <g_strconcat@plt>
   191c8:	mov	r6, r0
   191cc:	mov	r0, r5
   191d0:	bl	14bd8 <g_free@plt>
   191d4:	mov	r0, r6
   191d8:	mov	r2, #0
   191dc:	ldr	r1, [pc, #388]	; 19368 <g_strcmp0@plt+0x419c>
   191e0:	bl	14530 <g_strsplit_set@plt>
   191e4:	subs	r5, r0, #0
   191e8:	moveq	r7, r5
   191ec:	beq	191f8 <g_strcmp0@plt+0x402c>
   191f0:	bl	183dc <g_strcmp0@plt+0x3210>
   191f4:	mov	r7, r0
   191f8:	mov	r0, r4
   191fc:	mov	r2, r7
   19200:	mov	r1, r5
   19204:	bl	18f84 <g_strcmp0@plt+0x3db8>
   19208:	mov	r0, r5
   1920c:	mov	r1, r7
   19210:	bl	189bc <g_strcmp0@plt+0x37f0>
   19214:	mov	r0, r6
   19218:	pop	{r4, r5, r6, r7, r8, lr}
   1921c:	b	14bd8 <g_free@plt>
   19220:	ldr	r0, [pc, #328]	; 19370 <g_strcmp0@plt+0x41a4>
   19224:	bl	14d64 <g_quark_from_static_string@plt>
   19228:	cmp	r0, r6
   1922c:	str	r0, [r5, #216]	; 0xd8
   19230:	bne	1910c <g_strcmp0@plt+0x3f40>
   19234:	b	19188 <g_strcmp0@plt+0x3fbc>
   19238:	ldr	r6, [r5, #216]	; 0xd8
   1923c:	cmp	r6, #0
   19240:	beq	19220 <g_strcmp0@plt+0x4054>
   19244:	ldr	r6, [r5, #220]	; 0xdc
   19248:	cmp	r6, #0
   1924c:	movne	r6, r0
   19250:	bne	19120 <g_strcmp0@plt+0x3f54>
   19254:	ldr	r0, [pc, #280]	; 19374 <g_strcmp0@plt+0x41a8>
   19258:	bl	14d64 <g_quark_from_static_string@plt>
   1925c:	cmp	r0, r6
   19260:	str	r0, [r5, #220]	; 0xdc
   19264:	bne	19120 <g_strcmp0@plt+0x3f54>
   19268:	ldr	r3, [r4, #24]
   1926c:	mov	r0, r4
   19270:	ldr	r1, [r3]
   19274:	bl	18f10 <g_strcmp0@plt+0x3d44>
   19278:	ldr	r3, [r4, #24]
   1927c:	ldr	r1, [r3, #4]
   19280:	cmp	r1, #0
   19284:	beq	19310 <g_strcmp0@plt+0x4144>
   19288:	mov	r2, #0
   1928c:	ldr	r0, [pc, #228]	; 19378 <g_strcmp0@plt+0x41ac>
   19290:	b	191b0 <g_strcmp0@plt+0x3fe4>
   19294:	mov	r1, r0
   19298:	mov	r0, r4
   1929c:	bl	18f10 <g_strcmp0@plt+0x3d44>
   192a0:	ldr	r3, [r4, #24]
   192a4:	mov	r2, #0
   192a8:	ldr	r0, [pc, #204]	; 1937c <g_strcmp0@plt+0x41b0>
   192ac:	ldr	r1, [r3, #8]
   192b0:	bl	14dc4 <g_strconcat@plt>
   192b4:	mov	r2, #0
   192b8:	ldr	r1, [pc, #168]	; 19368 <g_strcmp0@plt+0x419c>
   192bc:	mov	r7, r0
   192c0:	bl	14530 <g_strsplit_set@plt>
   192c4:	subs	r5, r0, #0
   192c8:	moveq	r6, r5
   192cc:	beq	192d8 <g_strcmp0@plt+0x410c>
   192d0:	bl	183dc <g_strcmp0@plt+0x3210>
   192d4:	mov	r6, r0
   192d8:	mov	r0, r4
   192dc:	mov	r2, r6
   192e0:	mov	r1, r5
   192e4:	bl	18f84 <g_strcmp0@plt+0x3db8>
   192e8:	mov	r0, r5
   192ec:	mov	r1, r6
   192f0:	bl	189bc <g_strcmp0@plt+0x37f0>
   192f4:	mov	r0, r7
   192f8:	pop	{r4, r5, r6, r7, r8, lr}
   192fc:	b	14bd8 <g_free@plt>
   19300:	ldr	r0, [pc, #120]	; 19380 <g_strcmp0@plt+0x41b4>
   19304:	bl	14d64 <g_quark_from_static_string@plt>
   19308:	str	r0, [r5, #224]	; 0xe0
   1930c:	b	1912c <g_strcmp0@plt+0x3f60>
   19310:	ldr	r0, [r3]
   19314:	bl	147e8 <g_strdup@plt>
   19318:	mov	r6, r0
   1931c:	mov	r0, #8
   19320:	bl	14fbc <g_malloc0@plt>
   19324:	mov	r2, #1
   19328:	mov	r5, r0
   1932c:	mov	r1, r0
   19330:	str	r6, [r5]
   19334:	mov	r0, r4
   19338:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1933c:	mov	r0, r5
   19340:	mov	r1, #1
   19344:	pop	{r4, r5, r6, r7, r8, lr}
   19348:	b	189bc <g_strcmp0@plt+0x37f0>
   1934c:	andeq	ip, r4, r4, asr #32
   19350:	ldrdeq	r5, [r3], -r8
   19354:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   19358:	ldrdeq	r4, [r3], -ip
   1935c:	andeq	r4, r3, r4, lsl #14
   19360:	andeq	r5, r3, r8, ror #3
   19364:	ldrdeq	ip, [r4], -r8
   19368:	andeq	r5, r3, ip, lsr #4
   1936c:	strdeq	r5, [r3], -r8
   19370:	strdeq	r5, [r3], -r0
   19374:	andeq	r5, r3, ip, lsl #4
   19378:	andeq	r5, r3, r8, lsl r2
   1937c:	andeq	r5, r3, ip, lsr r2
   19380:	andeq	r5, r3, r0, lsr r2
   19384:	ldr	r2, [pc, #312]	; 194c4 <g_strcmp0@plt+0x42f8>
   19388:	push	{r4, r5, r6, r7, r8, lr}
   1938c:	mov	r4, r0
   19390:	ldr	r3, [pc, #304]	; 194c8 <g_strcmp0@plt+0x42fc>
   19394:	ldr	r0, [r2]
   19398:	ldr	r1, [pc, #300]	; 194cc <g_strcmp0@plt+0x4300>
   1939c:	ldr	r2, [pc, #300]	; 194d0 <g_strcmp0@plt+0x4304>
   193a0:	bl	2a300 <g_strcmp0@plt+0x15134>
   193a4:	ldr	r3, [r4, #24]
   193a8:	ldr	r6, [pc, #292]	; 194d4 <g_strcmp0@plt+0x4308>
   193ac:	mov	r5, r0
   193b0:	ldr	r0, [r3]
   193b4:	bl	14bd8 <g_free@plt>
   193b8:	ldr	r3, [r4, #24]
   193bc:	cmp	r5, #0
   193c0:	str	r5, [r3]
   193c4:	beq	194a0 <g_strcmp0@plt+0x42d4>
   193c8:	mov	r0, r5
   193cc:	bl	14bcc <g_quark_from_string@plt>
   193d0:	mov	r7, r0
   193d4:	ldr	r0, [r6, #228]	; 0xe4
   193d8:	cmp	r0, #0
   193dc:	beq	194ac <g_strcmp0@plt+0x42e0>
   193e0:	cmp	r0, r7
   193e4:	beq	19440 <g_strcmp0@plt+0x4274>
   193e8:	ldr	r3, [r4, #24]
   193ec:	ldr	r5, [r3]
   193f0:	mov	r0, r5
   193f4:	mov	r2, #0
   193f8:	ldr	r1, [pc, #216]	; 194d8 <g_strcmp0@plt+0x430c>
   193fc:	bl	14530 <g_strsplit_set@plt>
   19400:	subs	r5, r0, #0
   19404:	moveq	r6, r5
   19408:	beq	19414 <g_strcmp0@plt+0x4248>
   1940c:	bl	183dc <g_strcmp0@plt+0x3210>
   19410:	mov	r6, r0
   19414:	ldr	r1, [r5]
   19418:	mov	r0, r4
   1941c:	bl	18f10 <g_strcmp0@plt+0x3d44>
   19420:	mov	r1, r5
   19424:	mov	r0, r4
   19428:	mov	r2, r6
   1942c:	bl	18f84 <g_strcmp0@plt+0x3db8>
   19430:	mov	r1, r6
   19434:	mov	r0, r5
   19438:	pop	{r4, r5, r6, r7, r8, lr}
   1943c:	b	189bc <g_strcmp0@plt+0x37f0>
   19440:	ldr	r1, [pc, #148]	; 194dc <g_strcmp0@plt+0x4310>
   19444:	mov	r0, r4
   19448:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1944c:	ldr	r0, [pc, #140]	; 194e0 <g_strcmp0@plt+0x4314>
   19450:	bl	147e8 <g_strdup@plt>
   19454:	mov	r2, #0
   19458:	ldr	r1, [pc, #120]	; 194d8 <g_strcmp0@plt+0x430c>
   1945c:	mov	r7, r0
   19460:	bl	14530 <g_strsplit_set@plt>
   19464:	subs	r5, r0, #0
   19468:	moveq	r6, r5
   1946c:	beq	19478 <g_strcmp0@plt+0x42ac>
   19470:	bl	183dc <g_strcmp0@plt+0x3210>
   19474:	mov	r6, r0
   19478:	mov	r0, r4
   1947c:	mov	r2, r6
   19480:	mov	r1, r5
   19484:	bl	18f84 <g_strcmp0@plt+0x3db8>
   19488:	mov	r0, r5
   1948c:	mov	r1, r6
   19490:	bl	189bc <g_strcmp0@plt+0x37f0>
   19494:	mov	r0, r7
   19498:	pop	{r4, r5, r6, r7, r8, lr}
   1949c:	b	14bd8 <g_free@plt>
   194a0:	ldr	r7, [r6, #228]	; 0xe4
   194a4:	cmp	r7, #0
   194a8:	bne	193f0 <g_strcmp0@plt+0x4224>
   194ac:	ldr	r0, [pc, #40]	; 194dc <g_strcmp0@plt+0x4310>
   194b0:	bl	14d64 <g_quark_from_static_string@plt>
   194b4:	cmp	r0, r7
   194b8:	str	r0, [r6, #228]	; 0xe4
   194bc:	bne	193e8 <g_strcmp0@plt+0x421c>
   194c0:	b	19440 <g_strcmp0@plt+0x4274>
   194c4:	andeq	ip, r4, r4, asr #32
   194c8:	ldrdeq	r4, [r3], -ip
   194cc:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   194d0:	andeq	r5, r3, ip, asr #4
   194d4:	ldrdeq	ip, [r4], -r8
   194d8:	andeq	r5, r3, ip, lsr #4
   194dc:	andeq	r5, r3, ip, asr r2
   194e0:	andeq	r5, r3, r8, ror #4
   194e4:	push	{r4, r5, r6, r7, r8, lr}
   194e8:	mov	r4, r0
   194ec:	ldr	r5, [pc, #456]	; 196bc <g_strcmp0@plt+0x44f0>
   194f0:	ldr	r2, [pc, #456]	; 196c0 <g_strcmp0@plt+0x44f4>
   194f4:	ldr	r1, [pc, #456]	; 196c4 <g_strcmp0@plt+0x44f8>
   194f8:	ldr	r3, [pc, #456]	; 196c8 <g_strcmp0@plt+0x44fc>
   194fc:	ldr	r0, [r5]
   19500:	bl	2a300 <g_strcmp0@plt+0x15134>
   19504:	ldr	r3, [r4, #24]
   19508:	mov	r6, r0
   1950c:	ldr	r0, [r3]
   19510:	bl	14bd8 <g_free@plt>
   19514:	ldr	r2, [r4, #24]
   19518:	ldr	r0, [r5]
   1951c:	ldr	r1, [pc, #416]	; 196c4 <g_strcmp0@plt+0x44f8>
   19520:	str	r6, [r2]
   19524:	ldr	r3, [pc, #416]	; 196cc <g_strcmp0@plt+0x4500>
   19528:	ldr	r2, [pc, #400]	; 196c0 <g_strcmp0@plt+0x44f4>
   1952c:	bl	2a300 <g_strcmp0@plt+0x15134>
   19530:	ldr	r3, [r4, #24]
   19534:	mov	r6, r0
   19538:	ldr	r0, [r3, #4]
   1953c:	bl	14bd8 <g_free@plt>
   19540:	ldr	r2, [r4, #24]
   19544:	ldr	r0, [r5]
   19548:	ldr	r3, [pc, #384]	; 196d0 <g_strcmp0@plt+0x4504>
   1954c:	str	r6, [r2, #4]
   19550:	ldr	r1, [pc, #364]	; 196c4 <g_strcmp0@plt+0x44f8>
   19554:	ldr	r2, [pc, #356]	; 196c0 <g_strcmp0@plt+0x44f4>
   19558:	bl	2a300 <g_strcmp0@plt+0x15134>
   1955c:	ldr	r3, [r4, #24]
   19560:	mov	r5, r0
   19564:	ldr	r0, [r3, #8]
   19568:	bl	14bd8 <g_free@plt>
   1956c:	ldr	r3, [r4, #24]
   19570:	ldr	r0, [r3]
   19574:	str	r5, [r3, #8]
   19578:	cmp	r0, #0
   1957c:	ldr	r5, [pc, #336]	; 196d4 <g_strcmp0@plt+0x4508>
   19580:	beq	19698 <g_strcmp0@plt+0x44cc>
   19584:	bl	14bcc <g_quark_from_string@plt>
   19588:	mov	r6, r0
   1958c:	ldr	r0, [r5, #232]	; 0xe8
   19590:	cmp	r0, #0
   19594:	beq	196a4 <g_strcmp0@plt+0x44d8>
   19598:	cmp	r0, r6
   1959c:	beq	195f4 <g_strcmp0@plt+0x4428>
   195a0:	ldr	r3, [r4, #24]
   195a4:	ldr	r0, [r3]
   195a8:	mov	r2, #0
   195ac:	ldr	r1, [pc, #292]	; 196d8 <g_strcmp0@plt+0x450c>
   195b0:	bl	14530 <g_strsplit_set@plt>
   195b4:	subs	r5, r0, #0
   195b8:	moveq	r6, r5
   195bc:	beq	195c8 <g_strcmp0@plt+0x43fc>
   195c0:	bl	183dc <g_strcmp0@plt+0x3210>
   195c4:	mov	r6, r0
   195c8:	ldr	r1, [r5]
   195cc:	mov	r0, r4
   195d0:	bl	18f10 <g_strcmp0@plt+0x3d44>
   195d4:	mov	r1, r5
   195d8:	mov	r0, r4
   195dc:	mov	r2, r6
   195e0:	bl	18f84 <g_strcmp0@plt+0x3db8>
   195e4:	mov	r1, r6
   195e8:	mov	r0, r5
   195ec:	pop	{r4, r5, r6, r7, r8, lr}
   195f0:	b	189bc <g_strcmp0@plt+0x37f0>
   195f4:	ldr	r1, [pc, #224]	; 196dc <g_strcmp0@plt+0x4510>
   195f8:	mov	r0, r4
   195fc:	bl	18f10 <g_strcmp0@plt+0x3d44>
   19600:	ldr	r3, [r4, #24]
   19604:	mov	r2, #0
   19608:	ldr	r0, [pc, #208]	; 196e0 <g_strcmp0@plt+0x4514>
   1960c:	ldr	r1, [r3, #4]
   19610:	bl	14dc4 <g_strconcat@plt>
   19614:	mov	r2, #0
   19618:	ldr	r1, [pc, #196]	; 196e4 <g_strcmp0@plt+0x4518>
   1961c:	mov	r5, r0
   19620:	bl	14dc4 <g_strconcat@plt>
   19624:	ldr	r3, [r4, #24]
   19628:	mov	r2, #0
   1962c:	ldr	r1, [r3, #8]
   19630:	mov	r7, r0
   19634:	bl	14dc4 <g_strconcat@plt>
   19638:	mov	r6, r0
   1963c:	mov	r0, r7
   19640:	bl	14bd8 <g_free@plt>
   19644:	mov	r0, r5
   19648:	bl	14bd8 <g_free@plt>
   1964c:	mov	r0, r6
   19650:	mov	r2, #0
   19654:	ldr	r1, [pc, #124]	; 196d8 <g_strcmp0@plt+0x450c>
   19658:	bl	14530 <g_strsplit_set@plt>
   1965c:	subs	r5, r0, #0
   19660:	moveq	r7, r5
   19664:	beq	19670 <g_strcmp0@plt+0x44a4>
   19668:	bl	183dc <g_strcmp0@plt+0x3210>
   1966c:	mov	r7, r0
   19670:	mov	r0, r4
   19674:	mov	r2, r7
   19678:	mov	r1, r5
   1967c:	bl	18f84 <g_strcmp0@plt+0x3db8>
   19680:	mov	r0, r5
   19684:	mov	r1, r7
   19688:	bl	189bc <g_strcmp0@plt+0x37f0>
   1968c:	mov	r0, r6
   19690:	pop	{r4, r5, r6, r7, r8, lr}
   19694:	b	14bd8 <g_free@plt>
   19698:	ldr	r6, [r5, #232]	; 0xe8
   1969c:	cmp	r6, #0
   196a0:	bne	195a8 <g_strcmp0@plt+0x43dc>
   196a4:	ldr	r0, [pc, #48]	; 196dc <g_strcmp0@plt+0x4510>
   196a8:	bl	14d64 <g_quark_from_static_string@plt>
   196ac:	cmp	r0, r6
   196b0:	str	r0, [r5, #232]	; 0xe8
   196b4:	bne	195a0 <g_strcmp0@plt+0x43d4>
   196b8:	b	195f4 <g_strcmp0@plt+0x4428>
   196bc:	andeq	ip, r4, r4, asr #32
   196c0:	andeq	r5, r3, ip, ror r2
   196c4:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   196c8:	ldrdeq	r4, [r3], -ip
   196cc:	andeq	r5, r3, ip, lsl #5
   196d0:	muleq	r3, r4, r2
   196d4:	ldrdeq	ip, [r4], -r8
   196d8:	andeq	r5, r3, ip, lsr #4
   196dc:	muleq	r3, ip, r2
   196e0:			; <UNDEFINED> instruction: 0x000352b0
   196e4:	andeq	r5, r3, ip, asr #5
   196e8:	ldr	r2, [pc, #312]	; 19828 <g_strcmp0@plt+0x465c>
   196ec:	push	{r4, r5, r6, r7, r8, lr}
   196f0:	mov	r4, r0
   196f4:	ldr	r3, [pc, #304]	; 1982c <g_strcmp0@plt+0x4660>
   196f8:	ldr	r0, [r2]
   196fc:	ldr	r1, [pc, #300]	; 19830 <g_strcmp0@plt+0x4664>
   19700:	ldr	r2, [pc, #300]	; 19834 <g_strcmp0@plt+0x4668>
   19704:	bl	2a300 <g_strcmp0@plt+0x15134>
   19708:	ldr	r3, [r4, #24]
   1970c:	ldr	r6, [pc, #292]	; 19838 <g_strcmp0@plt+0x466c>
   19710:	mov	r5, r0
   19714:	ldr	r0, [r3]
   19718:	bl	14bd8 <g_free@plt>
   1971c:	ldr	r3, [r4, #24]
   19720:	cmp	r5, #0
   19724:	str	r5, [r3]
   19728:	beq	19804 <g_strcmp0@plt+0x4638>
   1972c:	mov	r0, r5
   19730:	bl	14bcc <g_quark_from_string@plt>
   19734:	mov	r7, r0
   19738:	ldr	r0, [r6, #236]	; 0xec
   1973c:	cmp	r0, #0
   19740:	beq	19810 <g_strcmp0@plt+0x4644>
   19744:	cmp	r0, r7
   19748:	beq	197a4 <g_strcmp0@plt+0x45d8>
   1974c:	ldr	r3, [r4, #24]
   19750:	ldr	r5, [r3]
   19754:	mov	r0, r5
   19758:	mov	r2, #0
   1975c:	ldr	r1, [pc, #216]	; 1983c <g_strcmp0@plt+0x4670>
   19760:	bl	14530 <g_strsplit_set@plt>
   19764:	subs	r5, r0, #0
   19768:	moveq	r6, r5
   1976c:	beq	19778 <g_strcmp0@plt+0x45ac>
   19770:	bl	183dc <g_strcmp0@plt+0x3210>
   19774:	mov	r6, r0
   19778:	ldr	r1, [r5]
   1977c:	mov	r0, r4
   19780:	bl	18f10 <g_strcmp0@plt+0x3d44>
   19784:	mov	r1, r5
   19788:	mov	r0, r4
   1978c:	mov	r2, r6
   19790:	bl	18f84 <g_strcmp0@plt+0x3db8>
   19794:	mov	r1, r6
   19798:	mov	r0, r5
   1979c:	pop	{r4, r5, r6, r7, r8, lr}
   197a0:	b	189bc <g_strcmp0@plt+0x37f0>
   197a4:	ldr	r1, [pc, #148]	; 19840 <g_strcmp0@plt+0x4674>
   197a8:	mov	r0, r4
   197ac:	bl	18f10 <g_strcmp0@plt+0x3d44>
   197b0:	ldr	r0, [pc, #140]	; 19844 <g_strcmp0@plt+0x4678>
   197b4:	bl	147e8 <g_strdup@plt>
   197b8:	mov	r2, #0
   197bc:	ldr	r1, [pc, #120]	; 1983c <g_strcmp0@plt+0x4670>
   197c0:	mov	r7, r0
   197c4:	bl	14530 <g_strsplit_set@plt>
   197c8:	subs	r5, r0, #0
   197cc:	moveq	r6, r5
   197d0:	beq	197dc <g_strcmp0@plt+0x4610>
   197d4:	bl	183dc <g_strcmp0@plt+0x3210>
   197d8:	mov	r6, r0
   197dc:	mov	r0, r4
   197e0:	mov	r2, r6
   197e4:	mov	r1, r5
   197e8:	bl	18f84 <g_strcmp0@plt+0x3db8>
   197ec:	mov	r0, r5
   197f0:	mov	r1, r6
   197f4:	bl	189bc <g_strcmp0@plt+0x37f0>
   197f8:	mov	r0, r7
   197fc:	pop	{r4, r5, r6, r7, r8, lr}
   19800:	b	14bd8 <g_free@plt>
   19804:	ldr	r7, [r6, #236]	; 0xec
   19808:	cmp	r7, #0
   1980c:	bne	19754 <g_strcmp0@plt+0x4588>
   19810:	ldr	r0, [pc, #40]	; 19840 <g_strcmp0@plt+0x4674>
   19814:	bl	14d64 <g_quark_from_static_string@plt>
   19818:	cmp	r0, r7
   1981c:	str	r0, [r6, #236]	; 0xec
   19820:	bne	1974c <g_strcmp0@plt+0x4580>
   19824:	b	197a4 <g_strcmp0@plt+0x45d8>
   19828:	andeq	ip, r4, r4, asr #32
   1982c:	ldrdeq	r4, [r3], -ip
   19830:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   19834:	ldrdeq	r5, [r3], -r8
   19838:	ldrdeq	ip, [r4], -r8
   1983c:	andeq	r5, r3, ip, lsr #4
   19840:	andeq	r5, r3, ip, ror #5
   19844:	strdeq	r5, [r3], -r4
   19848:	ldr	r2, [pc, #312]	; 19988 <g_strcmp0@plt+0x47bc>
   1984c:	push	{r4, r5, r6, r7, r8, lr}
   19850:	mov	r4, r0
   19854:	ldr	r3, [pc, #304]	; 1998c <g_strcmp0@plt+0x47c0>
   19858:	ldr	r0, [r2]
   1985c:	ldr	r1, [pc, #300]	; 19990 <g_strcmp0@plt+0x47c4>
   19860:	ldr	r2, [pc, #300]	; 19994 <g_strcmp0@plt+0x47c8>
   19864:	bl	2a300 <g_strcmp0@plt+0x15134>
   19868:	ldr	r3, [r4, #24]
   1986c:	ldr	r6, [pc, #292]	; 19998 <g_strcmp0@plt+0x47cc>
   19870:	mov	r5, r0
   19874:	ldr	r0, [r3]
   19878:	bl	14bd8 <g_free@plt>
   1987c:	ldr	r3, [r4, #24]
   19880:	cmp	r5, #0
   19884:	str	r5, [r3]
   19888:	beq	19964 <g_strcmp0@plt+0x4798>
   1988c:	mov	r0, r5
   19890:	bl	14bcc <g_quark_from_string@plt>
   19894:	mov	r7, r0
   19898:	ldr	r0, [r6, #240]	; 0xf0
   1989c:	cmp	r0, #0
   198a0:	beq	19970 <g_strcmp0@plt+0x47a4>
   198a4:	cmp	r0, r7
   198a8:	beq	19904 <g_strcmp0@plt+0x4738>
   198ac:	ldr	r3, [r4, #24]
   198b0:	ldr	r5, [r3]
   198b4:	mov	r0, r5
   198b8:	mov	r2, #0
   198bc:	ldr	r1, [pc, #216]	; 1999c <g_strcmp0@plt+0x47d0>
   198c0:	bl	14530 <g_strsplit_set@plt>
   198c4:	subs	r5, r0, #0
   198c8:	moveq	r6, r5
   198cc:	beq	198d8 <g_strcmp0@plt+0x470c>
   198d0:	bl	183dc <g_strcmp0@plt+0x3210>
   198d4:	mov	r6, r0
   198d8:	ldr	r1, [r5]
   198dc:	mov	r0, r4
   198e0:	bl	18f10 <g_strcmp0@plt+0x3d44>
   198e4:	mov	r1, r5
   198e8:	mov	r0, r4
   198ec:	mov	r2, r6
   198f0:	bl	18f84 <g_strcmp0@plt+0x3db8>
   198f4:	mov	r1, r6
   198f8:	mov	r0, r5
   198fc:	pop	{r4, r5, r6, r7, r8, lr}
   19900:	b	189bc <g_strcmp0@plt+0x37f0>
   19904:	ldr	r1, [pc, #148]	; 199a0 <g_strcmp0@plt+0x47d4>
   19908:	mov	r0, r4
   1990c:	bl	18f10 <g_strcmp0@plt+0x3d44>
   19910:	ldr	r0, [pc, #140]	; 199a4 <g_strcmp0@plt+0x47d8>
   19914:	bl	147e8 <g_strdup@plt>
   19918:	mov	r2, #0
   1991c:	ldr	r1, [pc, #120]	; 1999c <g_strcmp0@plt+0x47d0>
   19920:	mov	r7, r0
   19924:	bl	14530 <g_strsplit_set@plt>
   19928:	subs	r5, r0, #0
   1992c:	moveq	r6, r5
   19930:	beq	1993c <g_strcmp0@plt+0x4770>
   19934:	bl	183dc <g_strcmp0@plt+0x3210>
   19938:	mov	r6, r0
   1993c:	mov	r0, r4
   19940:	mov	r2, r6
   19944:	mov	r1, r5
   19948:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1994c:	mov	r0, r5
   19950:	mov	r1, r6
   19954:	bl	189bc <g_strcmp0@plt+0x37f0>
   19958:	mov	r0, r7
   1995c:	pop	{r4, r5, r6, r7, r8, lr}
   19960:	b	14bd8 <g_free@plt>
   19964:	ldr	r7, [r6, #240]	; 0xf0
   19968:	cmp	r7, #0
   1996c:	bne	198b4 <g_strcmp0@plt+0x46e8>
   19970:	ldr	r0, [pc, #40]	; 199a0 <g_strcmp0@plt+0x47d4>
   19974:	bl	14d64 <g_quark_from_static_string@plt>
   19978:	cmp	r0, r7
   1997c:	str	r0, [r6, #240]	; 0xf0
   19980:	bne	198ac <g_strcmp0@plt+0x46e0>
   19984:	b	19904 <g_strcmp0@plt+0x4738>
   19988:	andeq	ip, r4, r4, asr #32
   1998c:	ldrdeq	r4, [r3], -ip
   19990:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   19994:	andeq	r4, r3, r4, lsl #17
   19998:	ldrdeq	ip, [r4], -r8
   1999c:	andeq	r5, r3, ip, lsr #4
   199a0:	andeq	r5, r3, r4, lsl #6
   199a4:	andeq	r5, r3, r0, lsl r3
   199a8:	ldr	r3, [r0, #24]
   199ac:	push	{r4, r5, r6, r7, r8, lr}
   199b0:	mov	r4, r0
   199b4:	ldr	r0, [r3]
   199b8:	ldr	r5, [pc, #248]	; 19ab8 <g_strcmp0@plt+0x48ec>
   199bc:	cmp	r0, #0
   199c0:	beq	19a94 <g_strcmp0@plt+0x48c8>
   199c4:	bl	14bcc <g_quark_from_string@plt>
   199c8:	mov	r6, r0
   199cc:	ldr	r0, [r5, #244]	; 0xf4
   199d0:	cmp	r0, #0
   199d4:	beq	19aa0 <g_strcmp0@plt+0x48d4>
   199d8:	cmp	r0, r6
   199dc:	beq	19a34 <g_strcmp0@plt+0x4868>
   199e0:	ldr	r3, [r4, #24]
   199e4:	ldr	r0, [r3]
   199e8:	mov	r2, #0
   199ec:	ldr	r1, [pc, #200]	; 19abc <g_strcmp0@plt+0x48f0>
   199f0:	bl	14530 <g_strsplit_set@plt>
   199f4:	subs	r5, r0, #0
   199f8:	moveq	r6, r5
   199fc:	beq	19a08 <g_strcmp0@plt+0x483c>
   19a00:	bl	183dc <g_strcmp0@plt+0x3210>
   19a04:	mov	r6, r0
   19a08:	ldr	r1, [r5]
   19a0c:	mov	r0, r4
   19a10:	bl	18f10 <g_strcmp0@plt+0x3d44>
   19a14:	mov	r1, r5
   19a18:	mov	r0, r4
   19a1c:	mov	r2, r6
   19a20:	bl	18f84 <g_strcmp0@plt+0x3db8>
   19a24:	mov	r1, r6
   19a28:	mov	r0, r5
   19a2c:	pop	{r4, r5, r6, r7, r8, lr}
   19a30:	b	189bc <g_strcmp0@plt+0x37f0>
   19a34:	ldr	r1, [pc, #132]	; 19ac0 <g_strcmp0@plt+0x48f4>
   19a38:	mov	r0, r4
   19a3c:	bl	18f10 <g_strcmp0@plt+0x3d44>
   19a40:	ldr	r0, [pc, #124]	; 19ac4 <g_strcmp0@plt+0x48f8>
   19a44:	bl	147e8 <g_strdup@plt>
   19a48:	mov	r2, #0
   19a4c:	ldr	r1, [pc, #104]	; 19abc <g_strcmp0@plt+0x48f0>
   19a50:	mov	r7, r0
   19a54:	bl	14530 <g_strsplit_set@plt>
   19a58:	subs	r5, r0, #0
   19a5c:	moveq	r6, r5
   19a60:	beq	19a6c <g_strcmp0@plt+0x48a0>
   19a64:	bl	183dc <g_strcmp0@plt+0x3210>
   19a68:	mov	r6, r0
   19a6c:	mov	r0, r4
   19a70:	mov	r2, r6
   19a74:	mov	r1, r5
   19a78:	bl	18f84 <g_strcmp0@plt+0x3db8>
   19a7c:	mov	r0, r5
   19a80:	mov	r1, r6
   19a84:	bl	189bc <g_strcmp0@plt+0x37f0>
   19a88:	mov	r0, r7
   19a8c:	pop	{r4, r5, r6, r7, r8, lr}
   19a90:	b	14bd8 <g_free@plt>
   19a94:	ldr	r6, [r5, #244]	; 0xf4
   19a98:	cmp	r6, #0
   19a9c:	bne	199e8 <g_strcmp0@plt+0x481c>
   19aa0:	ldr	r0, [pc, #24]	; 19ac0 <g_strcmp0@plt+0x48f4>
   19aa4:	bl	14d64 <g_quark_from_static_string@plt>
   19aa8:	cmp	r0, r6
   19aac:	str	r0, [r5, #244]	; 0xf4
   19ab0:	bne	199e0 <g_strcmp0@plt+0x4814>
   19ab4:	b	19a34 <g_strcmp0@plt+0x4868>
   19ab8:	ldrdeq	ip, [r4], -r8
   19abc:	andeq	r5, r3, ip, lsr #4
   19ac0:	andeq	r5, r3, r0, lsr #6
   19ac4:	andeq	r5, r3, ip, lsr #6
   19ac8:	ldr	r2, [pc, #448]	; 19c90 <g_strcmp0@plt+0x4ac4>
   19acc:	push	{r4, r5, r6, r7, r8, lr}
   19ad0:	mov	r6, r0
   19ad4:	ldr	r3, [pc, #440]	; 19c94 <g_strcmp0@plt+0x4ac8>
   19ad8:	ldr	r0, [r2]
   19adc:	ldr	r1, [pc, #436]	; 19c98 <g_strcmp0@plt+0x4acc>
   19ae0:	ldr	r2, [pc, #436]	; 19c9c <g_strcmp0@plt+0x4ad0>
   19ae4:	bl	2a300 <g_strcmp0@plt+0x15134>
   19ae8:	ldr	r3, [r6, #24]
   19aec:	ldr	r4, [pc, #428]	; 19ca0 <g_strcmp0@plt+0x4ad4>
   19af0:	mov	r7, r0
   19af4:	ldr	r0, [r3]
   19af8:	bl	14bd8 <g_free@plt>
   19afc:	ldr	r3, [r6, #24]
   19b00:	cmp	r7, #0
   19b04:	str	r7, [r3]
   19b08:	beq	19bd4 <g_strcmp0@plt+0x4a08>
   19b0c:	mov	r0, r7
   19b10:	bl	14bcc <g_quark_from_string@plt>
   19b14:	mov	r5, r0
   19b18:	ldr	r0, [r4, #248]	; 0xf8
   19b1c:	cmp	r0, #0
   19b20:	beq	19bbc <g_strcmp0@plt+0x49f0>
   19b24:	cmp	r0, r5
   19b28:	popeq	{r4, r5, r6, r7, r8, pc}
   19b2c:	ldr	r0, [r4, #252]	; 0xfc
   19b30:	cmp	r0, #0
   19b34:	beq	19bf0 <g_strcmp0@plt+0x4a24>
   19b38:	cmp	r0, r5
   19b3c:	popeq	{r4, r5, r6, r7, r8, pc}
   19b40:	ldr	r0, [r4, #256]	; 0x100
   19b44:	cmp	r0, #0
   19b48:	beq	19c78 <g_strcmp0@plt+0x4aac>
   19b4c:	cmp	r0, r5
   19b50:	popeq	{r4, r5, r6, r7, r8, pc}
   19b54:	ldr	r0, [r4, #260]	; 0x104
   19b58:	cmp	r0, #0
   19b5c:	beq	19c68 <g_strcmp0@plt+0x4a9c>
   19b60:	cmp	r0, r5
   19b64:	beq	19c08 <g_strcmp0@plt+0x4a3c>
   19b68:	ldr	r3, [r6, #24]
   19b6c:	mov	r2, #0
   19b70:	ldr	r1, [pc, #300]	; 19ca4 <g_strcmp0@plt+0x4ad8>
   19b74:	ldr	r0, [r3]
   19b78:	bl	14530 <g_strsplit_set@plt>
   19b7c:	subs	r4, r0, #0
   19b80:	moveq	r5, r4
   19b84:	beq	19b90 <g_strcmp0@plt+0x49c4>
   19b88:	bl	183dc <g_strcmp0@plt+0x3210>
   19b8c:	mov	r5, r0
   19b90:	ldr	r1, [r4]
   19b94:	mov	r0, r6
   19b98:	bl	18f10 <g_strcmp0@plt+0x3d44>
   19b9c:	mov	r1, r4
   19ba0:	mov	r0, r6
   19ba4:	mov	r2, r5
   19ba8:	bl	18f84 <g_strcmp0@plt+0x3db8>
   19bac:	mov	r1, r5
   19bb0:	mov	r0, r4
   19bb4:	pop	{r4, r5, r6, r7, r8, lr}
   19bb8:	b	189bc <g_strcmp0@plt+0x37f0>
   19bbc:	mov	r0, #0
   19bc0:	bl	14d64 <g_quark_from_static_string@plt>
   19bc4:	cmp	r0, r5
   19bc8:	str	r0, [r4, #248]	; 0xf8
   19bcc:	bne	19b2c <g_strcmp0@plt+0x4960>
   19bd0:	pop	{r4, r5, r6, r7, r8, pc}
   19bd4:	ldr	r5, [r4, #248]	; 0xf8
   19bd8:	cmp	r5, #0
   19bdc:	beq	19bbc <g_strcmp0@plt+0x49f0>
   19be0:	ldr	r5, [r4, #252]	; 0xfc
   19be4:	cmp	r5, #0
   19be8:	movne	r5, r7
   19bec:	bne	19b40 <g_strcmp0@plt+0x4974>
   19bf0:	ldr	r0, [pc, #176]	; 19ca8 <g_strcmp0@plt+0x4adc>
   19bf4:	bl	14d64 <g_quark_from_static_string@plt>
   19bf8:	cmp	r0, r5
   19bfc:	str	r0, [r4, #252]	; 0xfc
   19c00:	bne	19b40 <g_strcmp0@plt+0x4974>
   19c04:	pop	{r4, r5, r6, r7, r8, pc}
   19c08:	ldr	r0, [pc, #156]	; 19cac <g_strcmp0@plt+0x4ae0>
   19c0c:	bl	147e8 <g_strdup@plt>
   19c10:	mov	r2, #0
   19c14:	ldr	r1, [pc, #136]	; 19ca4 <g_strcmp0@plt+0x4ad8>
   19c18:	mov	r7, r0
   19c1c:	bl	14530 <g_strsplit_set@plt>
   19c20:	subs	r4, r0, #0
   19c24:	moveq	r5, r4
   19c28:	beq	19c34 <g_strcmp0@plt+0x4a68>
   19c2c:	bl	183dc <g_strcmp0@plt+0x3210>
   19c30:	mov	r5, r0
   19c34:	ldr	r1, [r4]
   19c38:	mov	r0, r6
   19c3c:	bl	18f10 <g_strcmp0@plt+0x3d44>
   19c40:	mov	r2, r5
   19c44:	mov	r1, r4
   19c48:	mov	r0, r6
   19c4c:	bl	18f84 <g_strcmp0@plt+0x3db8>
   19c50:	mov	r0, r4
   19c54:	mov	r1, r5
   19c58:	bl	189bc <g_strcmp0@plt+0x37f0>
   19c5c:	mov	r0, r7
   19c60:	pop	{r4, r5, r6, r7, r8, lr}
   19c64:	b	14bd8 <g_free@plt>
   19c68:	ldr	r0, [pc, #64]	; 19cb0 <g_strcmp0@plt+0x4ae4>
   19c6c:	bl	14d64 <g_quark_from_static_string@plt>
   19c70:	str	r0, [r4, #260]	; 0x104
   19c74:	b	19b60 <g_strcmp0@plt+0x4994>
   19c78:	ldr	r0, [pc, #36]	; 19ca4 <g_strcmp0@plt+0x4ad8>
   19c7c:	bl	14d64 <g_quark_from_static_string@plt>
   19c80:	cmp	r0, r5
   19c84:	str	r0, [r4, #256]	; 0x100
   19c88:	bne	19b54 <g_strcmp0@plt+0x4988>
   19c8c:	pop	{r4, r5, r6, r7, r8, pc}
   19c90:	andeq	ip, r4, r4, asr #32
   19c94:	ldrdeq	r4, [r3], -ip
   19c98:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   19c9c:	andeq	r7, r3, r8, asr #24
   19ca0:	ldrdeq	ip, [r4], -r8
   19ca4:	andeq	r5, r3, ip, lsr #4
   19ca8:	andeq	sl, r3, ip, ror #18
   19cac:	andeq	r5, r3, ip, lsr r3
   19cb0:	muleq	r3, ip, r9
   19cb4:	ldr	r2, [pc, #316]	; 19df8 <g_strcmp0@plt+0x4c2c>
   19cb8:	push	{r4, r5, r6, r7, r8, lr}
   19cbc:	mov	r7, r0
   19cc0:	ldr	r3, [pc, #308]	; 19dfc <g_strcmp0@plt+0x4c30>
   19cc4:	ldr	r0, [r2]
   19cc8:	ldr	r1, [pc, #304]	; 19e00 <g_strcmp0@plt+0x4c34>
   19ccc:	ldr	r2, [pc, #304]	; 19e04 <g_strcmp0@plt+0x4c38>
   19cd0:	bl	2a300 <g_strcmp0@plt+0x15134>
   19cd4:	ldr	r3, [r7, #24]
   19cd8:	ldr	r5, [pc, #296]	; 19e08 <g_strcmp0@plt+0x4c3c>
   19cdc:	mov	r6, r0
   19ce0:	ldr	r0, [r3]
   19ce4:	bl	14bd8 <g_free@plt>
   19ce8:	ldr	r3, [r7, #24]
   19cec:	cmp	r6, #0
   19cf0:	str	r6, [r3]
   19cf4:	beq	19dac <g_strcmp0@plt+0x4be0>
   19cf8:	mov	r0, r6
   19cfc:	bl	14bcc <g_quark_from_string@plt>
   19d00:	mov	r4, r0
   19d04:	ldr	r0, [r5, #264]	; 0x108
   19d08:	cmp	r0, #0
   19d0c:	beq	19d94 <g_strcmp0@plt+0x4bc8>
   19d10:	cmp	r0, r4
   19d14:	popeq	{r4, r5, r6, r7, r8, pc}
   19d18:	ldr	r0, [r5, #268]	; 0x10c
   19d1c:	cmp	r0, #0
   19d20:	beq	19dc8 <g_strcmp0@plt+0x4bfc>
   19d24:	cmp	r0, r4
   19d28:	popeq	{r4, r5, r6, r7, r8, pc}
   19d2c:	ldr	r0, [r5, #272]	; 0x110
   19d30:	cmp	r0, #0
   19d34:	beq	19de0 <g_strcmp0@plt+0x4c14>
   19d38:	cmp	r0, r4
   19d3c:	popeq	{r4, r5, r6, r7, r8, pc}
   19d40:	ldr	r3, [r7, #24]
   19d44:	mov	r2, #0
   19d48:	ldr	r1, [pc, #188]	; 19e0c <g_strcmp0@plt+0x4c40>
   19d4c:	ldr	r0, [r3]
   19d50:	bl	14530 <g_strsplit_set@plt>
   19d54:	subs	r4, r0, #0
   19d58:	moveq	r5, r4
   19d5c:	beq	19d68 <g_strcmp0@plt+0x4b9c>
   19d60:	bl	183dc <g_strcmp0@plt+0x3210>
   19d64:	mov	r5, r0
   19d68:	ldr	r1, [r4]
   19d6c:	mov	r0, r7
   19d70:	bl	18f10 <g_strcmp0@plt+0x3d44>
   19d74:	mov	r1, r4
   19d78:	mov	r0, r7
   19d7c:	mov	r2, r5
   19d80:	bl	18f84 <g_strcmp0@plt+0x3db8>
   19d84:	mov	r1, r5
   19d88:	mov	r0, r4
   19d8c:	pop	{r4, r5, r6, r7, r8, lr}
   19d90:	b	189bc <g_strcmp0@plt+0x37f0>
   19d94:	mov	r0, #0
   19d98:	bl	14d64 <g_quark_from_static_string@plt>
   19d9c:	cmp	r0, r4
   19da0:	str	r0, [r5, #264]	; 0x108
   19da4:	bne	19d18 <g_strcmp0@plt+0x4b4c>
   19da8:	pop	{r4, r5, r6, r7, r8, pc}
   19dac:	ldr	r4, [r5, #264]	; 0x108
   19db0:	cmp	r4, #0
   19db4:	beq	19d94 <g_strcmp0@plt+0x4bc8>
   19db8:	ldr	r4, [r5, #268]	; 0x10c
   19dbc:	cmp	r4, #0
   19dc0:	movne	r4, r6
   19dc4:	bne	19d2c <g_strcmp0@plt+0x4b60>
   19dc8:	ldr	r0, [pc, #64]	; 19e10 <g_strcmp0@plt+0x4c44>
   19dcc:	bl	14d64 <g_quark_from_static_string@plt>
   19dd0:	cmp	r0, r4
   19dd4:	str	r0, [r5, #268]	; 0x10c
   19dd8:	bne	19d2c <g_strcmp0@plt+0x4b60>
   19ddc:	pop	{r4, r5, r6, r7, r8, pc}
   19de0:	ldr	r0, [pc, #36]	; 19e0c <g_strcmp0@plt+0x4c40>
   19de4:	bl	14d64 <g_quark_from_static_string@plt>
   19de8:	cmp	r0, r4
   19dec:	str	r0, [r5, #272]	; 0x110
   19df0:	popeq	{r4, r5, r6, r7, r8, pc}
   19df4:	b	19d40 <g_strcmp0@plt+0x4b74>
   19df8:	andeq	ip, r4, r4, asr #32
   19dfc:	ldrdeq	r4, [r3], -ip
   19e00:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   19e04:			; <UNDEFINED> instruction: 0x00037ab0
   19e08:	ldrdeq	ip, [r4], -r8
   19e0c:	andeq	r5, r3, ip, lsr #4
   19e10:	andeq	sl, r3, ip, ror #18
   19e14:	push	{r4, r5, r6, r7, r8, lr}
   19e18:	mov	r4, r0
   19e1c:	ldr	r5, [pc, #400]	; 19fb4 <g_strcmp0@plt+0x4de8>
   19e20:	ldr	r2, [pc, #400]	; 19fb8 <g_strcmp0@plt+0x4dec>
   19e24:	ldr	r1, [pc, #400]	; 19fbc <g_strcmp0@plt+0x4df0>
   19e28:	ldr	r3, [pc, #400]	; 19fc0 <g_strcmp0@plt+0x4df4>
   19e2c:	ldr	r0, [r5]
   19e30:	bl	2a300 <g_strcmp0@plt+0x15134>
   19e34:	ldr	r3, [r4, #24]
   19e38:	mov	r6, r0
   19e3c:	ldr	r0, [r3]
   19e40:	bl	14bd8 <g_free@plt>
   19e44:	ldr	r2, [r4, #24]
   19e48:	ldr	r0, [r5]
   19e4c:	ldr	r3, [pc, #368]	; 19fc4 <g_strcmp0@plt+0x4df8>
   19e50:	str	r6, [r2]
   19e54:	ldr	r1, [pc, #352]	; 19fbc <g_strcmp0@plt+0x4df0>
   19e58:	ldr	r2, [pc, #344]	; 19fb8 <g_strcmp0@plt+0x4dec>
   19e5c:	bl	2a300 <g_strcmp0@plt+0x15134>
   19e60:	ldr	r3, [r4, #24]
   19e64:	mov	r5, r0
   19e68:	ldr	r0, [r3, #4]
   19e6c:	bl	14bd8 <g_free@plt>
   19e70:	ldr	r3, [r4, #24]
   19e74:	ldr	r0, [r3]
   19e78:	str	r5, [r3, #4]
   19e7c:	cmp	r0, #0
   19e80:	ldr	r5, [pc, #320]	; 19fc8 <g_strcmp0@plt+0x4dfc>
   19e84:	beq	19f8c <g_strcmp0@plt+0x4dc0>
   19e88:	bl	14bcc <g_quark_from_string@plt>
   19e8c:	mov	r6, r0
   19e90:	ldr	r0, [r5, #276]	; 0x114
   19e94:	cmp	r0, #0
   19e98:	beq	19f70 <g_strcmp0@plt+0x4da4>
   19e9c:	cmp	r0, r6
   19ea0:	ldreq	r0, [pc, #292]	; 19fcc <g_strcmp0@plt+0x4e00>
   19ea4:	beq	19f14 <g_strcmp0@plt+0x4d48>
   19ea8:	ldr	r0, [r5, #280]	; 0x118
   19eac:	cmp	r0, #0
   19eb0:	beq	19fa4 <g_strcmp0@plt+0x4dd8>
   19eb4:	cmp	r0, r6
   19eb8:	beq	19f10 <g_strcmp0@plt+0x4d44>
   19ebc:	ldr	r3, [r4, #24]
   19ec0:	ldr	r0, [r3]
   19ec4:	mov	r2, #0
   19ec8:	ldr	r1, [pc, #256]	; 19fd0 <g_strcmp0@plt+0x4e04>
   19ecc:	bl	14530 <g_strsplit_set@plt>
   19ed0:	subs	r5, r0, #0
   19ed4:	moveq	r6, r5
   19ed8:	beq	19ee4 <g_strcmp0@plt+0x4d18>
   19edc:	bl	183dc <g_strcmp0@plt+0x3210>
   19ee0:	mov	r6, r0
   19ee4:	ldr	r1, [r5]
   19ee8:	mov	r0, r4
   19eec:	bl	18f10 <g_strcmp0@plt+0x3d44>
   19ef0:	mov	r1, r5
   19ef4:	mov	r0, r4
   19ef8:	mov	r2, r6
   19efc:	bl	18f84 <g_strcmp0@plt+0x3db8>
   19f00:	mov	r1, r6
   19f04:	mov	r0, r5
   19f08:	pop	{r4, r5, r6, r7, r8, lr}
   19f0c:	b	189bc <g_strcmp0@plt+0x37f0>
   19f10:	ldr	r0, [pc, #188]	; 19fd4 <g_strcmp0@plt+0x4e08>
   19f14:	bl	147e8 <g_strdup@plt>
   19f18:	mov	r2, #0
   19f1c:	ldr	r1, [pc, #172]	; 19fd0 <g_strcmp0@plt+0x4e04>
   19f20:	mov	r7, r0
   19f24:	bl	14530 <g_strsplit_set@plt>
   19f28:	subs	r5, r0, #0
   19f2c:	moveq	r6, r5
   19f30:	beq	19f3c <g_strcmp0@plt+0x4d70>
   19f34:	bl	183dc <g_strcmp0@plt+0x3210>
   19f38:	mov	r6, r0
   19f3c:	ldr	r1, [r5]
   19f40:	mov	r0, r4
   19f44:	bl	18f10 <g_strcmp0@plt+0x3d44>
   19f48:	mov	r2, r6
   19f4c:	mov	r1, r5
   19f50:	mov	r0, r4
   19f54:	bl	18f84 <g_strcmp0@plt+0x3db8>
   19f58:	mov	r0, r5
   19f5c:	mov	r1, r6
   19f60:	bl	189bc <g_strcmp0@plt+0x37f0>
   19f64:	mov	r0, r7
   19f68:	pop	{r4, r5, r6, r7, r8, lr}
   19f6c:	b	14bd8 <g_free@plt>
   19f70:	ldr	r0, [pc, #96]	; 19fd8 <g_strcmp0@plt+0x4e0c>
   19f74:	bl	14d64 <g_quark_from_static_string@plt>
   19f78:	cmp	r0, r6
   19f7c:	str	r0, [r5, #276]	; 0x114
   19f80:	ldreq	r0, [pc, #68]	; 19fcc <g_strcmp0@plt+0x4e00>
   19f84:	bne	19ea8 <g_strcmp0@plt+0x4cdc>
   19f88:	b	19f14 <g_strcmp0@plt+0x4d48>
   19f8c:	ldr	r6, [r5, #276]	; 0x114
   19f90:	cmp	r6, #0
   19f94:	beq	19f70 <g_strcmp0@plt+0x4da4>
   19f98:	ldr	r6, [r5, #280]	; 0x118
   19f9c:	cmp	r6, #0
   19fa0:	bne	19ec0 <g_strcmp0@plt+0x4cf4>
   19fa4:	ldr	r0, [pc, #48]	; 19fdc <g_strcmp0@plt+0x4e10>
   19fa8:	bl	14d64 <g_quark_from_static_string@plt>
   19fac:	str	r0, [r5, #280]	; 0x118
   19fb0:	b	19eb4 <g_strcmp0@plt+0x4ce8>
   19fb4:	andeq	ip, r4, r4, asr #32
   19fb8:	andeq	r7, r3, r0, ror #19
   19fbc:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   19fc0:	ldrdeq	r4, [r3], -ip
   19fc4:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   19fc8:	ldrdeq	ip, [r4], -r8
   19fcc:	andeq	r5, r3, r8, lsl #7
   19fd0:	andeq	r5, r3, ip, lsr #4
   19fd4:	ldrdeq	r5, [r3], -r8
   19fd8:	andeq	r5, r3, ip, ror r3
   19fdc:	andeq	r5, r3, ip, asr #7
   19fe0:	ldr	r2, [pc, #152]	; 1a080 <g_strcmp0@plt+0x4eb4>
   19fe4:	push	{r4, r5, r6, lr}
   19fe8:	mov	r4, r0
   19fec:	ldr	r3, [pc, #144]	; 1a084 <g_strcmp0@plt+0x4eb8>
   19ff0:	ldr	r0, [r2]
   19ff4:	ldr	r1, [pc, #140]	; 1a088 <g_strcmp0@plt+0x4ebc>
   19ff8:	ldr	r2, [pc, #140]	; 1a08c <g_strcmp0@plt+0x4ec0>
   19ffc:	bl	2a300 <g_strcmp0@plt+0x15134>
   1a000:	ldr	r3, [r4, #24]
   1a004:	mov	r5, r0
   1a008:	ldr	r0, [r3]
   1a00c:	bl	14bd8 <g_free@plt>
   1a010:	ldr	r3, [r4, #24]
   1a014:	cmp	r5, #0
   1a018:	str	r5, [r3]
   1a01c:	beq	1a030 <g_strcmp0@plt+0x4e64>
   1a020:	mov	r0, r5
   1a024:	bl	14bcc <g_quark_from_string@plt>
   1a028:	ldr	r3, [r4, #24]
   1a02c:	ldr	r5, [r3]
   1a030:	mov	r0, r5
   1a034:	mov	r2, #0
   1a038:	ldr	r1, [pc, #80]	; 1a090 <g_strcmp0@plt+0x4ec4>
   1a03c:	bl	14530 <g_strsplit_set@plt>
   1a040:	subs	r5, r0, #0
   1a044:	moveq	r6, r5
   1a048:	beq	1a054 <g_strcmp0@plt+0x4e88>
   1a04c:	bl	183dc <g_strcmp0@plt+0x3210>
   1a050:	mov	r6, r0
   1a054:	ldr	r1, [r5]
   1a058:	mov	r0, r4
   1a05c:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1a060:	mov	r1, r5
   1a064:	mov	r0, r4
   1a068:	mov	r2, r6
   1a06c:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1a070:	mov	r1, r6
   1a074:	mov	r0, r5
   1a078:	pop	{r4, r5, r6, lr}
   1a07c:	b	189bc <g_strcmp0@plt+0x37f0>
   1a080:	andeq	ip, r4, r4, asr #32
   1a084:	ldrdeq	r4, [r3], -ip
   1a088:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1a08c:	strdeq	r5, [r3], -r0
   1a090:	andeq	r5, r3, ip, lsr #4
   1a094:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a098:	mov	r3, #0
   1a09c:	ldr	r5, [pc, #1340]	; 1a5e0 <g_strcmp0@plt+0x5414>
   1a0a0:	ldr	r2, [pc, #1340]	; 1a5e4 <g_strcmp0@plt+0x5418>
   1a0a4:	ldr	r1, [pc, #1340]	; 1a5e8 <g_strcmp0@plt+0x541c>
   1a0a8:	mov	r4, r0
   1a0ac:	ldr	r0, [r5]
   1a0b0:	bl	2a300 <g_strcmp0@plt+0x15134>
   1a0b4:	mov	r6, r0
   1a0b8:	bl	14bd8 <g_free@plt>
   1a0bc:	cmp	r6, #0
   1a0c0:	beq	1a210 <g_strcmp0@plt+0x5044>
   1a0c4:	ldr	r0, [pc, #1312]	; 1a5ec <g_strcmp0@plt+0x5420>
   1a0c8:	bl	147e8 <g_strdup@plt>
   1a0cc:	ldr	r3, [r4, #24]
   1a0d0:	mov	r6, r0
   1a0d4:	ldr	r0, [r3, #4]
   1a0d8:	bl	14bd8 <g_free@plt>
   1a0dc:	ldr	r2, [r4, #24]
   1a0e0:	ldr	r1, [pc, #1280]	; 1a5e8 <g_strcmp0@plt+0x541c>
   1a0e4:	ldr	r0, [r5]
   1a0e8:	mov	r3, #0
   1a0ec:	str	r6, [r2, #4]
   1a0f0:	ldr	r2, [pc, #1260]	; 1a5e4 <g_strcmp0@plt+0x5418>
   1a0f4:	bl	2a300 <g_strcmp0@plt+0x15134>
   1a0f8:	ldr	r3, [r4, #24]
   1a0fc:	mov	r5, r0
   1a100:	ldr	r0, [r3]
   1a104:	bl	14bd8 <g_free@plt>
   1a108:	ldr	r3, [r4, #24]
   1a10c:	ldr	r0, [pc, #1244]	; 1a5f0 <g_strcmp0@plt+0x5424>
   1a110:	str	r5, [r3]
   1a114:	bl	147e8 <g_strdup@plt>
   1a118:	ldr	r3, [r4, #24]
   1a11c:	mov	r5, r0
   1a120:	ldr	r0, [r3, #8]
   1a124:	bl	14bd8 <g_free@plt>
   1a128:	ldr	r3, [r4, #24]
   1a12c:	ldr	r0, [pc, #1212]	; 1a5f0 <g_strcmp0@plt+0x5424>
   1a130:	str	r5, [r3, #8]
   1a134:	bl	147e8 <g_strdup@plt>
   1a138:	ldr	r3, [r4, #24]
   1a13c:	mov	r5, r0
   1a140:	ldr	r0, [r3, #12]
   1a144:	bl	14bd8 <g_free@plt>
   1a148:	ldr	r3, [r4, #24]
   1a14c:	ldr	r1, [pc, #1184]	; 1a5f4 <g_strcmp0@plt+0x5428>
   1a150:	str	r5, [r3, #12]
   1a154:	ldr	r0, [r3]
   1a158:	bl	151cc <g_strcmp0@plt>
   1a15c:	subs	r5, r0, #0
   1a160:	beq	1a1fc <g_strcmp0@plt+0x5030>
   1a164:	ldr	r3, [r4, #24]
   1a168:	ldr	r1, [pc, #1148]	; 1a5ec <g_strcmp0@plt+0x5420>
   1a16c:	ldr	r0, [r3, #4]
   1a170:	bl	151cc <g_strcmp0@plt>
   1a174:	ldr	r3, [r4, #24]
   1a178:	ldr	r1, [r3]
   1a17c:	subs	r5, r0, #0
   1a180:	mov	r0, r4
   1a184:	bne	1a2a0 <g_strcmp0@plt+0x50d4>
   1a188:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1a18c:	ldr	r3, [r4, #24]
   1a190:	ldr	r0, [r3]
   1a194:	bl	147e8 <g_strdup@plt>
   1a198:	mov	r7, r0
   1a19c:	mov	r0, #8
   1a1a0:	bl	14fbc <g_malloc0@plt>
   1a1a4:	mov	r2, #1
   1a1a8:	mov	r6, r0
   1a1ac:	mov	r1, r0
   1a1b0:	str	r7, [r6]
   1a1b4:	mov	r0, r4
   1a1b8:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1a1bc:	mov	r0, r6
   1a1c0:	mov	r1, #1
   1a1c4:	bl	189bc <g_strcmp0@plt+0x37f0>
   1a1c8:	ldr	r3, [r4, #12]
   1a1cc:	ldr	r2, [r3, #16]
   1a1d0:	cmp	r2, #1
   1a1d4:	beq	1a1f0 <g_strcmp0@plt+0x5024>
   1a1d8:	ldr	r1, [pc, #1048]	; 1a5f8 <g_strcmp0@plt+0x542c>
   1a1dc:	mov	r2, #1
   1a1e0:	mov	r0, r4
   1a1e4:	ldr	r1, [r1, #184]	; 0xb8
   1a1e8:	str	r2, [r3, #16]
   1a1ec:	bl	14b78 <g_object_notify_by_pspec@plt>
   1a1f0:	mov	r0, r5
   1a1f4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a1f8:	b	14bd8 <g_free@plt>
   1a1fc:	ldr	r1, [pc, #1008]	; 1a5f4 <g_strcmp0@plt+0x5428>
   1a200:	mov	r0, r4
   1a204:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1a208:	bl	1840c <g_strcmp0@plt+0x3240>
   1a20c:	b	1a198 <g_strcmp0@plt+0x4fcc>
   1a210:	ldr	r0, [pc, #996]	; 1a5fc <g_strcmp0@plt+0x5430>
   1a214:	bl	147e8 <g_strdup@plt>
   1a218:	ldr	r3, [r4, #24]
   1a21c:	mov	r6, r0
   1a220:	ldr	r0, [r3, #4]
   1a224:	bl	14bd8 <g_free@plt>
   1a228:	ldr	r1, [r4, #24]
   1a22c:	ldr	r2, [pc, #972]	; 1a600 <g_strcmp0@plt+0x5434>
   1a230:	ldr	r3, [pc, #972]	; 1a604 <g_strcmp0@plt+0x5438>
   1a234:	str	r6, [r1, #4]
   1a238:	ldr	r0, [r5]
   1a23c:	ldr	r1, [pc, #932]	; 1a5e8 <g_strcmp0@plt+0x541c>
   1a240:	bl	2a300 <g_strcmp0@plt+0x15134>
   1a244:	ldr	r3, [r4, #24]
   1a248:	mov	r6, r0
   1a24c:	ldr	r0, [r3]
   1a250:	bl	14bd8 <g_free@plt>
   1a254:	ldr	r1, [r4, #24]
   1a258:	ldr	r2, [pc, #928]	; 1a600 <g_strcmp0@plt+0x5434>
   1a25c:	ldr	r3, [pc, #932]	; 1a608 <g_strcmp0@plt+0x543c>
   1a260:	str	r6, [r1]
   1a264:	ldr	r0, [r5]
   1a268:	ldr	r1, [pc, #888]	; 1a5e8 <g_strcmp0@plt+0x541c>
   1a26c:	bl	2a300 <g_strcmp0@plt+0x15134>
   1a270:	ldr	r3, [r4, #24]
   1a274:	mov	r6, r0
   1a278:	ldr	r0, [r3, #8]
   1a27c:	bl	14bd8 <g_free@plt>
   1a280:	ldr	r2, [r4, #24]
   1a284:	ldr	r0, [r5]
   1a288:	ldr	r3, [pc, #892]	; 1a60c <g_strcmp0@plt+0x5440>
   1a28c:	str	r6, [r2, #8]
   1a290:	ldr	r1, [pc, #848]	; 1a5e8 <g_strcmp0@plt+0x541c>
   1a294:	ldr	r2, [pc, #868]	; 1a600 <g_strcmp0@plt+0x5434>
   1a298:	bl	2a300 <g_strcmp0@plt+0x15134>
   1a29c:	b	1a138 <g_strcmp0@plt+0x4f6c>
   1a2a0:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1a2a4:	ldr	r0, [pc, #868]	; 1a610 <g_strcmp0@plt+0x5444>
   1a2a8:	bl	14b9c <g_getenv@plt>
   1a2ac:	bl	147e8 <g_strdup@plt>
   1a2b0:	ldr	r3, [r4, #24]
   1a2b4:	ldr	r6, [pc, #828]	; 1a5f8 <g_strcmp0@plt+0x542c>
   1a2b8:	mov	r8, r0
   1a2bc:	ldr	r0, [r3]
   1a2c0:	cmp	r0, #0
   1a2c4:	beq	1a33c <g_strcmp0@plt+0x5170>
   1a2c8:	bl	14bcc <g_quark_from_string@plt>
   1a2cc:	mov	r5, r0
   1a2d0:	ldr	r0, [r6, #284]	; 0x11c
   1a2d4:	cmp	r0, #0
   1a2d8:	beq	1a4fc <g_strcmp0@plt+0x5330>
   1a2dc:	cmp	r0, r5
   1a2e0:	bne	1a4ac <g_strcmp0@plt+0x52e0>
   1a2e4:	ldr	r3, [r4, #24]
   1a2e8:	ldr	r0, [r3, #8]
   1a2ec:	cmp	r0, #0
   1a2f0:	beq	1a550 <g_strcmp0@plt+0x5384>
   1a2f4:	bl	14bcc <g_quark_from_string@plt>
   1a2f8:	mov	r5, r0
   1a2fc:	ldr	r0, [r6, #288]	; 0x120
   1a300:	cmp	r0, #0
   1a304:	beq	1a578 <g_strcmp0@plt+0x53ac>
   1a308:	cmp	r0, r5
   1a30c:	beq	1a5c0 <g_strcmp0@plt+0x53f4>
   1a310:	ldr	r0, [r6, #292]	; 0x124
   1a314:	cmp	r0, #0
   1a318:	beq	1a568 <g_strcmp0@plt+0x539c>
   1a31c:	cmp	r0, r5
   1a320:	beq	1a588 <g_strcmp0@plt+0x53bc>
   1a324:	ldr	r0, [pc, #744]	; 1a614 <g_strcmp0@plt+0x5448>
   1a328:	bl	147e8 <g_strdup@plt>
   1a32c:	mov	r5, r0
   1a330:	mov	r0, #0
   1a334:	bl	14bd8 <g_free@plt>
   1a338:	b	1a360 <g_strcmp0@plt+0x5194>
   1a33c:	ldr	r5, [r6, #284]	; 0x11c
   1a340:	cmp	r5, #0
   1a344:	beq	1a4fc <g_strcmp0@plt+0x5330>
   1a348:	ldr	r5, [r6, #296]	; 0x128
   1a34c:	cmp	r5, #0
   1a350:	beq	1a51c <g_strcmp0@plt+0x5350>
   1a354:	mov	r0, #0
   1a358:	bl	14bd8 <g_free@plt>
   1a35c:	mov	r5, #0
   1a360:	ldr	r3, [r4, #24]
   1a364:	ldr	r0, [r3, #12]
   1a368:	cmp	r0, #0
   1a36c:	beq	1a45c <g_strcmp0@plt+0x5290>
   1a370:	bl	14bcc <g_quark_from_string@plt>
   1a374:	mov	r7, r0
   1a378:	ldr	r0, [r6, #300]	; 0x12c
   1a37c:	cmp	r0, #0
   1a380:	beq	1a50c <g_strcmp0@plt+0x5340>
   1a384:	cmp	r0, r7
   1a388:	beq	1a488 <g_strcmp0@plt+0x52bc>
   1a38c:	ldr	r0, [r6, #304]	; 0x130
   1a390:	cmp	r0, #0
   1a394:	beq	1a478 <g_strcmp0@plt+0x52ac>
   1a398:	cmp	r0, r7
   1a39c:	beq	1a488 <g_strcmp0@plt+0x52bc>
   1a3a0:	ldr	r0, [r6, #308]	; 0x134
   1a3a4:	cmp	r0, #0
   1a3a8:	beq	1a540 <g_strcmp0@plt+0x5374>
   1a3ac:	ldr	r3, [r4, #24]
   1a3b0:	cmp	r0, r7
   1a3b4:	mov	r2, #0
   1a3b8:	mov	r1, r5
   1a3bc:	ldr	r0, [r3]
   1a3c0:	beq	1a52c <g_strcmp0@plt+0x5360>
   1a3c4:	bl	14dc4 <g_strconcat@plt>
   1a3c8:	mov	r2, #0
   1a3cc:	ldr	r1, [pc, #576]	; 1a614 <g_strcmp0@plt+0x5448>
   1a3d0:	mov	r6, r0
   1a3d4:	bl	14dc4 <g_strconcat@plt>
   1a3d8:	ldr	r3, [r4, #24]
   1a3dc:	mov	r2, #0
   1a3e0:	ldr	r1, [r3, #12]
   1a3e4:	mov	r7, r0
   1a3e8:	bl	14dc4 <g_strconcat@plt>
   1a3ec:	mov	r9, r0
   1a3f0:	mov	r0, #0
   1a3f4:	bl	14bd8 <g_free@plt>
   1a3f8:	mov	r0, r7
   1a3fc:	bl	14bd8 <g_free@plt>
   1a400:	mov	r0, r6
   1a404:	bl	14bd8 <g_free@plt>
   1a408:	mov	r2, #0
   1a40c:	ldr	r1, [pc, #512]	; 1a614 <g_strcmp0@plt+0x5448>
   1a410:	mov	r0, r9
   1a414:	bl	14530 <g_strsplit_set@plt>
   1a418:	subs	r6, r0, #0
   1a41c:	moveq	r7, r6
   1a420:	beq	1a42c <g_strcmp0@plt+0x5260>
   1a424:	bl	183dc <g_strcmp0@plt+0x3210>
   1a428:	mov	r7, r0
   1a42c:	mov	r2, r7
   1a430:	mov	r1, r6
   1a434:	mov	r0, r4
   1a438:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1a43c:	mov	r1, r7
   1a440:	mov	r0, r6
   1a444:	bl	189bc <g_strcmp0@plt+0x37f0>
   1a448:	mov	r0, r8
   1a44c:	bl	14bd8 <g_free@plt>
   1a450:	mov	r0, r9
   1a454:	bl	14bd8 <g_free@plt>
   1a458:	b	1a1c8 <g_strcmp0@plt+0x4ffc>
   1a45c:	ldr	r7, [r6, #300]	; 0x12c
   1a460:	cmp	r7, #0
   1a464:	beq	1a50c <g_strcmp0@plt+0x5340>
   1a468:	ldr	r7, [r6, #304]	; 0x130
   1a46c:	cmp	r7, #0
   1a470:	movne	r7, r0
   1a474:	bne	1a3a0 <g_strcmp0@plt+0x51d4>
   1a478:	ldr	r0, [pc, #368]	; 1a5f0 <g_strcmp0@plt+0x5424>
   1a47c:	bl	14d64 <g_quark_from_static_string@plt>
   1a480:	str	r0, [r6, #304]	; 0x130
   1a484:	b	1a398 <g_strcmp0@plt+0x51cc>
   1a488:	ldr	r3, [r4, #24]
   1a48c:	mov	r2, #0
   1a490:	mov	r1, r5
   1a494:	ldr	r0, [r3]
   1a498:	bl	14dc4 <g_strconcat@plt>
   1a49c:	mov	r9, r0
   1a4a0:	mov	r0, #0
   1a4a4:	bl	14bd8 <g_free@plt>
   1a4a8:	b	1a408 <g_strcmp0@plt+0x523c>
   1a4ac:	ldr	r0, [r6, #296]	; 0x128
   1a4b0:	cmp	r0, #0
   1a4b4:	beq	1a51c <g_strcmp0@plt+0x5350>
   1a4b8:	cmp	r0, r5
   1a4bc:	bne	1a354 <g_strcmp0@plt+0x5188>
   1a4c0:	ldr	r3, [r4, #24]
   1a4c4:	ldr	r1, [r3, #8]
   1a4c8:	cmp	r1, #0
   1a4cc:	beq	1a4e0 <g_strcmp0@plt+0x5314>
   1a4d0:	mov	r0, r1
   1a4d4:	bl	14bcc <g_quark_from_string@plt>
   1a4d8:	ldr	r3, [r4, #24]
   1a4dc:	ldr	r1, [r3, #8]
   1a4e0:	mov	r2, #0
   1a4e4:	ldr	r0, [pc, #300]	; 1a618 <g_strcmp0@plt+0x544c>
   1a4e8:	bl	14dc4 <g_strconcat@plt>
   1a4ec:	mov	r5, r0
   1a4f0:	mov	r0, #0
   1a4f4:	bl	14bd8 <g_free@plt>
   1a4f8:	b	1a360 <g_strcmp0@plt+0x5194>
   1a4fc:	ldr	r0, [pc, #280]	; 1a61c <g_strcmp0@plt+0x5450>
   1a500:	bl	14d64 <g_quark_from_static_string@plt>
   1a504:	str	r0, [r6, #284]	; 0x11c
   1a508:	b	1a2dc <g_strcmp0@plt+0x5110>
   1a50c:	mov	r0, #0
   1a510:	bl	14d64 <g_quark_from_static_string@plt>
   1a514:	str	r0, [r6, #300]	; 0x12c
   1a518:	b	1a384 <g_strcmp0@plt+0x51b8>
   1a51c:	ldr	r0, [pc, #252]	; 1a620 <g_strcmp0@plt+0x5454>
   1a520:	bl	14d64 <g_quark_from_static_string@plt>
   1a524:	str	r0, [r6, #296]	; 0x128
   1a528:	b	1a4b8 <g_strcmp0@plt+0x52ec>
   1a52c:	bl	14dc4 <g_strconcat@plt>
   1a530:	mov	r9, r0
   1a534:	mov	r0, #0
   1a538:	bl	14bd8 <g_free@plt>
   1a53c:	b	1a408 <g_strcmp0@plt+0x523c>
   1a540:	ldr	r0, [pc, #204]	; 1a614 <g_strcmp0@plt+0x5448>
   1a544:	bl	14d64 <g_quark_from_static_string@plt>
   1a548:	str	r0, [r6, #308]	; 0x134
   1a54c:	b	1a3ac <g_strcmp0@plt+0x51e0>
   1a550:	ldr	r5, [r6, #288]	; 0x120
   1a554:	cmp	r5, #0
   1a558:	beq	1a578 <g_strcmp0@plt+0x53ac>
   1a55c:	ldr	r5, [r6, #292]	; 0x124
   1a560:	cmp	r5, #0
   1a564:	bne	1a324 <g_strcmp0@plt+0x5158>
   1a568:	ldr	r0, [pc, #180]	; 1a624 <g_strcmp0@plt+0x5458>
   1a56c:	bl	14d64 <g_quark_from_static_string@plt>
   1a570:	str	r0, [r6, #292]	; 0x124
   1a574:	b	1a31c <g_strcmp0@plt+0x5150>
   1a578:	ldr	r0, [pc, #168]	; 1a628 <g_strcmp0@plt+0x545c>
   1a57c:	bl	14d64 <g_quark_from_static_string@plt>
   1a580:	str	r0, [r6, #288]	; 0x120
   1a584:	b	1a308 <g_strcmp0@plt+0x513c>
   1a588:	mov	r2, #0
   1a58c:	mov	r1, r8
   1a590:	ldr	r0, [pc, #128]	; 1a618 <g_strcmp0@plt+0x544c>
   1a594:	bl	14dc4 <g_strconcat@plt>
   1a598:	ldr	r1, [pc, #140]	; 1a62c <g_strcmp0@plt+0x5460>
   1a59c:	mov	r2, #0
   1a5a0:	mov	r7, r0
   1a5a4:	bl	14dc4 <g_strconcat@plt>
   1a5a8:	mov	r5, r0
   1a5ac:	mov	r0, #0
   1a5b0:	bl	14bd8 <g_free@plt>
   1a5b4:	mov	r0, r7
   1a5b8:	bl	14bd8 <g_free@plt>
   1a5bc:	b	1a360 <g_strcmp0@plt+0x5194>
   1a5c0:	mov	r2, #0
   1a5c4:	mov	r1, r8
   1a5c8:	ldr	r0, [pc, #72]	; 1a618 <g_strcmp0@plt+0x544c>
   1a5cc:	bl	14dc4 <g_strconcat@plt>
   1a5d0:	mov	r2, #0
   1a5d4:	ldr	r1, [pc, #84]	; 1a630 <g_strcmp0@plt+0x5464>
   1a5d8:	mov	r7, r0
   1a5dc:	b	1a5a4 <g_strcmp0@plt+0x53d8>
   1a5e0:	andeq	ip, r4, r4, asr #32
   1a5e4:	andeq	r4, r3, r4, asr #15
   1a5e8:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1a5ec:	andeq	r5, r3, r4, lsl #8
   1a5f0:	andeq	sl, r3, ip, ror #18
   1a5f4:	andeq	r5, r3, r8, lsl r4
   1a5f8:	ldrdeq	ip, [r4], -r8
   1a5fc:	andeq	r5, r3, ip, lsl #8
   1a600:	andeq	r4, r3, r4, ror #15
   1a604:	ldrdeq	r4, [r3], -ip
   1a608:	andeq	r4, r3, r4, lsl #14
   1a60c:	andeq	r5, r3, r8, ror #3
   1a610:	andeq	r5, r3, r0, lsr #8
   1a614:	andeq	r5, r3, ip, lsr #4
   1a618:	andeq	r5, r3, r0, lsr r4
   1a61c:	muleq	r3, ip, pc	; <UNPREDICTABLE>
   1a620:	andeq	r5, r3, r8, ror r4
   1a624:	andeq	r5, r3, r8, asr r4
   1a628:	andeq	r4, r3, r0, asr #11
   1a62c:	andeq	r5, r3, r0, ror #8
   1a630:	andeq	r5, r3, r0, asr #8
   1a634:	push	{r4, r5, r6, r7, r8, lr}
   1a638:	mov	r4, r0
   1a63c:	ldr	r0, [r0, #28]
   1a640:	ldr	r5, [pc, #436]	; 1a7fc <g_strcmp0@plt+0x5630>
   1a644:	cmp	r0, #0
   1a648:	beq	1a730 <g_strcmp0@plt+0x5564>
   1a64c:	bl	14bcc <g_quark_from_string@plt>
   1a650:	mov	r6, r0
   1a654:	ldr	r0, [r5, #312]	; 0x138
   1a658:	cmp	r0, #0
   1a65c:	beq	1a718 <g_strcmp0@plt+0x554c>
   1a660:	cmp	r0, r6
   1a664:	beq	1a6f0 <g_strcmp0@plt+0x5524>
   1a668:	ldr	r0, [r5, #316]	; 0x13c
   1a66c:	cmp	r0, #0
   1a670:	beq	1a748 <g_strcmp0@plt+0x557c>
   1a674:	cmp	r0, r6
   1a678:	ldr	r0, [r4, #28]
   1a67c:	beq	1a760 <g_strcmp0@plt+0x5594>
   1a680:	mov	r2, #0
   1a684:	ldr	r1, [pc, #372]	; 1a800 <g_strcmp0@plt+0x5634>
   1a688:	bl	14530 <g_strsplit_set@plt>
   1a68c:	subs	r6, r0, #0
   1a690:	moveq	r7, r6
   1a694:	beq	1a6a0 <g_strcmp0@plt+0x54d4>
   1a698:	bl	183dc <g_strcmp0@plt+0x3210>
   1a69c:	mov	r7, r0
   1a6a0:	ldr	r1, [r6]
   1a6a4:	mov	r0, r4
   1a6a8:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1a6ac:	mov	r1, r6
   1a6b0:	mov	r0, r4
   1a6b4:	mov	r2, r7
   1a6b8:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1a6bc:	mov	r1, r7
   1a6c0:	mov	r0, r6
   1a6c4:	bl	189bc <g_strcmp0@plt+0x37f0>
   1a6c8:	ldr	r3, [r4, #12]
   1a6cc:	ldr	r2, [r3, #16]
   1a6d0:	cmp	r2, #1
   1a6d4:	popeq	{r4, r5, r6, r7, r8, pc}
   1a6d8:	mov	r2, #1
   1a6dc:	ldr	r1, [r5, #184]	; 0xb8
   1a6e0:	mov	r0, r4
   1a6e4:	str	r2, [r3, #16]
   1a6e8:	pop	{r4, r5, r6, r7, r8, lr}
   1a6ec:	b	14b78 <g_object_notify_by_pspec@plt>
   1a6f0:	ldr	r1, [r4, #28]
   1a6f4:	mov	r0, r4
   1a6f8:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1a6fc:	ldr	r1, [r4, #32]
   1a700:	cmp	r1, #0
   1a704:	beq	1a7c0 <g_strcmp0@plt+0x55f4>
   1a708:	mov	r2, #0
   1a70c:	ldr	r0, [pc, #240]	; 1a804 <g_strcmp0@plt+0x5638>
   1a710:	bl	14dc4 <g_strconcat@plt>
   1a714:	b	1a774 <g_strcmp0@plt+0x55a8>
   1a718:	ldr	r0, [pc, #232]	; 1a808 <g_strcmp0@plt+0x563c>
   1a71c:	bl	14d64 <g_quark_from_static_string@plt>
   1a720:	cmp	r0, r6
   1a724:	str	r0, [r5, #312]	; 0x138
   1a728:	bne	1a668 <g_strcmp0@plt+0x549c>
   1a72c:	b	1a6f0 <g_strcmp0@plt+0x5524>
   1a730:	ldr	r6, [r5, #312]	; 0x138
   1a734:	cmp	r6, #0
   1a738:	beq	1a718 <g_strcmp0@plt+0x554c>
   1a73c:	ldr	r6, [r5, #316]	; 0x13c
   1a740:	cmp	r6, #0
   1a744:	bne	1a680 <g_strcmp0@plt+0x54b4>
   1a748:	ldr	r0, [pc, #188]	; 1a80c <g_strcmp0@plt+0x5640>
   1a74c:	bl	14d64 <g_quark_from_static_string@plt>
   1a750:	cmp	r0, r6
   1a754:	str	r0, [r5, #316]	; 0x13c
   1a758:	ldr	r0, [r4, #28]
   1a75c:	bne	1a680 <g_strcmp0@plt+0x54b4>
   1a760:	mov	r1, r0
   1a764:	mov	r0, r4
   1a768:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1a76c:	ldr	r0, [pc, #156]	; 1a810 <g_strcmp0@plt+0x5644>
   1a770:	bl	147e8 <g_strdup@plt>
   1a774:	mov	r2, #0
   1a778:	ldr	r1, [pc, #128]	; 1a800 <g_strcmp0@plt+0x5634>
   1a77c:	mov	r8, r0
   1a780:	bl	14530 <g_strsplit_set@plt>
   1a784:	subs	r6, r0, #0
   1a788:	moveq	r7, r6
   1a78c:	beq	1a798 <g_strcmp0@plt+0x55cc>
   1a790:	bl	183dc <g_strcmp0@plt+0x3210>
   1a794:	mov	r7, r0
   1a798:	mov	r2, r7
   1a79c:	mov	r1, r6
   1a7a0:	mov	r0, r4
   1a7a4:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1a7a8:	mov	r0, r6
   1a7ac:	mov	r1, r7
   1a7b0:	bl	189bc <g_strcmp0@plt+0x37f0>
   1a7b4:	mov	r0, r8
   1a7b8:	bl	14bd8 <g_free@plt>
   1a7bc:	b	1a6c8 <g_strcmp0@plt+0x54fc>
   1a7c0:	ldr	r0, [r4, #28]
   1a7c4:	bl	147e8 <g_strdup@plt>
   1a7c8:	mov	r7, r0
   1a7cc:	mov	r0, #8
   1a7d0:	bl	14fbc <g_malloc0@plt>
   1a7d4:	mov	r2, #1
   1a7d8:	mov	r6, r0
   1a7dc:	mov	r1, r0
   1a7e0:	str	r7, [r6]
   1a7e4:	mov	r0, r4
   1a7e8:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1a7ec:	mov	r0, r6
   1a7f0:	mov	r1, #1
   1a7f4:	bl	189bc <g_strcmp0@plt+0x37f0>
   1a7f8:	b	1a6c8 <g_strcmp0@plt+0x54fc>
   1a7fc:	ldrdeq	ip, [r4], -r8
   1a800:	andeq	r5, r3, ip, lsr #4
   1a804:	muleq	r3, r0, r4
   1a808:	andeq	r5, r3, r8, lsl #9
   1a80c:	andeq	r5, r3, r4, lsr #9
   1a810:	andeq	r5, r3, r8, lsr #9
   1a814:	ldr	r2, [pc, #356]	; 1a980 <g_strcmp0@plt+0x57b4>
   1a818:	push	{r4, r5, r6, r7, r8, lr}
   1a81c:	mov	r4, r0
   1a820:	ldr	r3, [pc, #348]	; 1a984 <g_strcmp0@plt+0x57b8>
   1a824:	ldr	r0, [r2]
   1a828:	ldr	r1, [pc, #344]	; 1a988 <g_strcmp0@plt+0x57bc>
   1a82c:	ldr	r2, [pc, #344]	; 1a98c <g_strcmp0@plt+0x57c0>
   1a830:	bl	2a300 <g_strcmp0@plt+0x15134>
   1a834:	ldr	r3, [r4, #24]
   1a838:	ldr	r6, [pc, #336]	; 1a990 <g_strcmp0@plt+0x57c4>
   1a83c:	mov	r5, r0
   1a840:	ldr	r0, [r3]
   1a844:	bl	14bd8 <g_free@plt>
   1a848:	ldr	r3, [r4, #24]
   1a84c:	cmp	r5, #0
   1a850:	str	r5, [r3]
   1a854:	beq	1a954 <g_strcmp0@plt+0x5788>
   1a858:	mov	r0, r5
   1a85c:	bl	14bcc <g_quark_from_string@plt>
   1a860:	mov	r7, r0
   1a864:	ldr	r0, [r6, #320]	; 0x140
   1a868:	cmp	r0, #0
   1a86c:	beq	1a960 <g_strcmp0@plt+0x5794>
   1a870:	ldr	r3, [r4, #24]
   1a874:	cmp	r0, r7
   1a878:	ldr	r5, [r3]
   1a87c:	beq	1a8f4 <g_strcmp0@plt+0x5728>
   1a880:	mov	r0, r5
   1a884:	mov	r2, #0
   1a888:	ldr	r1, [pc, #260]	; 1a994 <g_strcmp0@plt+0x57c8>
   1a88c:	bl	14530 <g_strsplit_set@plt>
   1a890:	subs	r5, r0, #0
   1a894:	moveq	r7, r5
   1a898:	beq	1a8a4 <g_strcmp0@plt+0x56d8>
   1a89c:	bl	183dc <g_strcmp0@plt+0x3210>
   1a8a0:	mov	r7, r0
   1a8a4:	ldr	r1, [r5]
   1a8a8:	mov	r0, r4
   1a8ac:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1a8b0:	mov	r1, r5
   1a8b4:	mov	r0, r4
   1a8b8:	mov	r2, r7
   1a8bc:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1a8c0:	mov	r1, r7
   1a8c4:	mov	r0, r5
   1a8c8:	bl	189bc <g_strcmp0@plt+0x37f0>
   1a8cc:	ldr	r3, [r4, #12]
   1a8d0:	ldr	r2, [r3, #16]
   1a8d4:	cmp	r2, #1
   1a8d8:	popeq	{r4, r5, r6, r7, r8, pc}
   1a8dc:	mov	r2, #1
   1a8e0:	ldr	r1, [r6, #184]	; 0xb8
   1a8e4:	mov	r0, r4
   1a8e8:	str	r2, [r3, #16]
   1a8ec:	pop	{r4, r5, r6, r7, r8, lr}
   1a8f0:	b	14b78 <g_object_notify_by_pspec@plt>
   1a8f4:	mov	r1, r5
   1a8f8:	mov	r0, r4
   1a8fc:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1a900:	ldr	r0, [pc, #144]	; 1a998 <g_strcmp0@plt+0x57cc>
   1a904:	bl	147e8 <g_strdup@plt>
   1a908:	mov	r2, #0
   1a90c:	ldr	r1, [pc, #128]	; 1a994 <g_strcmp0@plt+0x57c8>
   1a910:	mov	r8, r0
   1a914:	bl	14530 <g_strsplit_set@plt>
   1a918:	subs	r5, r0, #0
   1a91c:	moveq	r7, r5
   1a920:	beq	1a92c <g_strcmp0@plt+0x5760>
   1a924:	bl	183dc <g_strcmp0@plt+0x3210>
   1a928:	mov	r7, r0
   1a92c:	mov	r2, r7
   1a930:	mov	r1, r5
   1a934:	mov	r0, r4
   1a938:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1a93c:	mov	r0, r5
   1a940:	mov	r1, r7
   1a944:	bl	189bc <g_strcmp0@plt+0x37f0>
   1a948:	mov	r0, r8
   1a94c:	bl	14bd8 <g_free@plt>
   1a950:	b	1a8cc <g_strcmp0@plt+0x5700>
   1a954:	ldr	r7, [r6, #320]	; 0x140
   1a958:	cmp	r7, #0
   1a95c:	bne	1a880 <g_strcmp0@plt+0x56b4>
   1a960:	ldr	r0, [pc, #52]	; 1a99c <g_strcmp0@plt+0x57d0>
   1a964:	bl	14d64 <g_quark_from_static_string@plt>
   1a968:	ldr	r3, [r4, #24]
   1a96c:	ldr	r5, [r3]
   1a970:	cmp	r0, r7
   1a974:	str	r0, [r6, #320]	; 0x140
   1a978:	bne	1a880 <g_strcmp0@plt+0x56b4>
   1a97c:	b	1a8f4 <g_strcmp0@plt+0x5728>
   1a980:	andeq	ip, r4, r4, asr #32
   1a984:	ldrdeq	r4, [r3], -ip
   1a988:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1a98c:	andeq	r8, r3, r0, asr #12
   1a990:	ldrdeq	ip, [r4], -r8
   1a994:	andeq	r5, r3, ip, lsr #4
   1a998:	ldrdeq	r5, [r3], -r0
   1a99c:	andeq	r5, r3, r0, asr #9
   1a9a0:	push	{r4, r5, r6, r7, r8, lr}
   1a9a4:	mov	r4, r0
   1a9a8:	ldr	r5, [pc, #472]	; 1ab88 <g_strcmp0@plt+0x59bc>
   1a9ac:	ldr	r2, [pc, #472]	; 1ab8c <g_strcmp0@plt+0x59c0>
   1a9b0:	ldr	r1, [pc, #472]	; 1ab90 <g_strcmp0@plt+0x59c4>
   1a9b4:	ldr	r3, [pc, #472]	; 1ab94 <g_strcmp0@plt+0x59c8>
   1a9b8:	ldr	r0, [r5]
   1a9bc:	bl	2a300 <g_strcmp0@plt+0x15134>
   1a9c0:	ldr	r3, [r4, #24]
   1a9c4:	mov	r6, r0
   1a9c8:	ldr	r0, [r3]
   1a9cc:	bl	14bd8 <g_free@plt>
   1a9d0:	ldr	r2, [r4, #24]
   1a9d4:	ldr	r0, [r5]
   1a9d8:	mov	r3, #0
   1a9dc:	str	r6, [r2]
   1a9e0:	ldr	r1, [pc, #432]	; 1ab98 <g_strcmp0@plt+0x59cc>
   1a9e4:	ldr	r2, [pc, #432]	; 1ab9c <g_strcmp0@plt+0x59d0>
   1a9e8:	bl	2a300 <g_strcmp0@plt+0x15134>
   1a9ec:	ldr	r3, [r4, #24]
   1a9f0:	mov	r5, r0
   1a9f4:	ldr	r0, [r3, #4]
   1a9f8:	bl	14bd8 <g_free@plt>
   1a9fc:	ldr	r3, [r4, #24]
   1aa00:	ldr	r0, [r3]
   1aa04:	str	r5, [r3, #4]
   1aa08:	cmp	r0, #0
   1aa0c:	ldr	r5, [pc, #396]	; 1aba0 <g_strcmp0@plt+0x59d4>
   1aa10:	beq	1ab4c <g_strcmp0@plt+0x5980>
   1aa14:	bl	14bcc <g_quark_from_string@plt>
   1aa18:	mov	r6, r0
   1aa1c:	ldr	r0, [r5, #324]	; 0x144
   1aa20:	cmp	r0, #0
   1aa24:	beq	1ab34 <g_strcmp0@plt+0x5968>
   1aa28:	cmp	r0, r6
   1aa2c:	beq	1aabc <g_strcmp0@plt+0x58f0>
   1aa30:	ldr	r0, [r5, #328]	; 0x148
   1aa34:	cmp	r0, #0
   1aa38:	beq	1ab64 <g_strcmp0@plt+0x5998>
   1aa3c:	cmp	r0, r6
   1aa40:	beq	1ab78 <g_strcmp0@plt+0x59ac>
   1aa44:	ldr	r3, [r4, #24]
   1aa48:	ldr	r0, [r3]
   1aa4c:	mov	r2, #0
   1aa50:	ldr	r1, [pc, #332]	; 1aba4 <g_strcmp0@plt+0x59d8>
   1aa54:	bl	14530 <g_strsplit_set@plt>
   1aa58:	subs	r6, r0, #0
   1aa5c:	moveq	r7, r6
   1aa60:	beq	1aa6c <g_strcmp0@plt+0x58a0>
   1aa64:	bl	183dc <g_strcmp0@plt+0x3210>
   1aa68:	mov	r7, r0
   1aa6c:	ldr	r1, [r6]
   1aa70:	mov	r0, r4
   1aa74:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1aa78:	mov	r1, r6
   1aa7c:	mov	r0, r4
   1aa80:	mov	r2, r7
   1aa84:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1aa88:	mov	r1, r7
   1aa8c:	mov	r0, r6
   1aa90:	bl	189bc <g_strcmp0@plt+0x37f0>
   1aa94:	ldr	r3, [r4, #12]
   1aa98:	ldr	r2, [r3, #16]
   1aa9c:	cmp	r2, #1
   1aaa0:	popeq	{r4, r5, r6, r7, r8, pc}
   1aaa4:	mov	r2, #1
   1aaa8:	ldr	r1, [r5, #184]	; 0xb8
   1aaac:	mov	r0, r4
   1aab0:	str	r2, [r3, #16]
   1aab4:	pop	{r4, r5, r6, r7, r8, lr}
   1aab8:	b	14b78 <g_object_notify_by_pspec@plt>
   1aabc:	ldr	r3, [r4, #24]
   1aac0:	ldr	r1, [pc, #224]	; 1aba8 <g_strcmp0@plt+0x59dc>
   1aac4:	ldr	r0, [r3, #4]
   1aac8:	bl	151cc <g_strcmp0@plt>
   1aacc:	subs	r6, r0, #0
   1aad0:	bne	1aa94 <g_strcmp0@plt+0x58c8>
   1aad4:	ldr	r0, [pc, #208]	; 1abac <g_strcmp0@plt+0x59e0>
   1aad8:	bl	147e8 <g_strdup@plt>
   1aadc:	ldr	r1, [pc, #200]	; 1abac <g_strcmp0@plt+0x59e0>
   1aae0:	mov	r7, r0
   1aae4:	mov	r0, r4
   1aae8:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1aaec:	mov	r2, r6
   1aaf0:	mov	r0, r7
   1aaf4:	ldr	r1, [pc, #168]	; 1aba4 <g_strcmp0@plt+0x59d8>
   1aaf8:	bl	14530 <g_strsplit_set@plt>
   1aafc:	subs	r8, r0, #0
   1ab00:	beq	1ab0c <g_strcmp0@plt+0x5940>
   1ab04:	bl	183dc <g_strcmp0@plt+0x3210>
   1ab08:	mov	r6, r0
   1ab0c:	mov	r2, r6
   1ab10:	mov	r1, r8
   1ab14:	mov	r0, r4
   1ab18:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1ab1c:	mov	r0, r8
   1ab20:	mov	r1, r6
   1ab24:	bl	189bc <g_strcmp0@plt+0x37f0>
   1ab28:	mov	r0, r7
   1ab2c:	bl	14bd8 <g_free@plt>
   1ab30:	b	1aa94 <g_strcmp0@plt+0x58c8>
   1ab34:	ldr	r0, [pc, #116]	; 1abb0 <g_strcmp0@plt+0x59e4>
   1ab38:	bl	14d64 <g_quark_from_static_string@plt>
   1ab3c:	cmp	r0, r6
   1ab40:	str	r0, [r5, #324]	; 0x144
   1ab44:	bne	1aa30 <g_strcmp0@plt+0x5864>
   1ab48:	b	1aabc <g_strcmp0@plt+0x58f0>
   1ab4c:	ldr	r6, [r5, #324]	; 0x144
   1ab50:	cmp	r6, #0
   1ab54:	beq	1ab34 <g_strcmp0@plt+0x5968>
   1ab58:	ldr	r6, [r5, #328]	; 0x148
   1ab5c:	cmp	r6, #0
   1ab60:	bne	1aa48 <g_strcmp0@plt+0x587c>
   1ab64:	ldr	r0, [pc, #72]	; 1abb4 <g_strcmp0@plt+0x59e8>
   1ab68:	bl	14d64 <g_quark_from_static_string@plt>
   1ab6c:	cmp	r0, r6
   1ab70:	str	r0, [r5, #328]	; 0x148
   1ab74:	bne	1aa44 <g_strcmp0@plt+0x5878>
   1ab78:	ldr	r1, [pc, #56]	; 1abb8 <g_strcmp0@plt+0x59ec>
   1ab7c:	mov	r0, r4
   1ab80:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1ab84:	b	1aa94 <g_strcmp0@plt+0x58c8>
   1ab88:	andeq	ip, r4, r4, asr #32
   1ab8c:	andeq	r4, r3, ip, lsl #16
   1ab90:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1ab94:	ldrdeq	r4, [r3], -ip
   1ab98:	andeq	r4, r3, r8, lsr #16
   1ab9c:	andeq	r4, r3, ip, lsl r8
   1aba0:	ldrdeq	ip, [r4], -r8
   1aba4:	andeq	r5, r3, ip, lsr #4
   1aba8:	andeq	r4, r3, ip, lsr r8
   1abac:	strdeq	r5, [r3], -r0
   1abb0:	andeq	r5, r3, r8, ror #9
   1abb4:	andeq	r4, r3, r8, lsr r8
   1abb8:	andeq	r5, r3, r4, lsl #10
   1abbc:	ldr	r2, [pc, #416]	; 1ad64 <g_strcmp0@plt+0x5b98>
   1abc0:	push	{r4, r5, r6, r7, r8, lr}
   1abc4:	mov	r4, r0
   1abc8:	ldr	r3, [pc, #408]	; 1ad68 <g_strcmp0@plt+0x5b9c>
   1abcc:	ldr	r0, [r2]
   1abd0:	ldr	r1, [pc, #404]	; 1ad6c <g_strcmp0@plt+0x5ba0>
   1abd4:	ldr	r2, [pc, #404]	; 1ad70 <g_strcmp0@plt+0x5ba4>
   1abd8:	bl	2a300 <g_strcmp0@plt+0x15134>
   1abdc:	ldr	r3, [r4, #24]
   1abe0:	ldr	r5, [pc, #396]	; 1ad74 <g_strcmp0@plt+0x5ba8>
   1abe4:	mov	r7, r0
   1abe8:	ldr	r0, [r3]
   1abec:	bl	14bd8 <g_free@plt>
   1abf0:	ldr	r3, [r4, #24]
   1abf4:	cmp	r7, #0
   1abf8:	str	r7, [r3]
   1abfc:	beq	1ace8 <g_strcmp0@plt+0x5b1c>
   1ac00:	mov	r0, r7
   1ac04:	bl	14bcc <g_quark_from_string@plt>
   1ac08:	mov	r6, r0
   1ac0c:	ldr	r0, [r5, #332]	; 0x14c
   1ac10:	cmp	r0, #0
   1ac14:	beq	1acd0 <g_strcmp0@plt+0x5b04>
   1ac18:	cmp	r0, r6
   1ac1c:	beq	1ac70 <g_strcmp0@plt+0x5aa4>
   1ac20:	ldr	r0, [r5, #336]	; 0x150
   1ac24:	cmp	r0, #0
   1ac28:	beq	1ad04 <g_strcmp0@plt+0x5b38>
   1ac2c:	cmp	r0, r6
   1ac30:	beq	1ad18 <g_strcmp0@plt+0x5b4c>
   1ac34:	ldr	r0, [r5, #340]	; 0x154
   1ac38:	cmp	r0, #0
   1ac3c:	beq	1ad2c <g_strcmp0@plt+0x5b60>
   1ac40:	cmp	r0, r6
   1ac44:	beq	1ad40 <g_strcmp0@plt+0x5b74>
   1ac48:	ldr	r3, [r4, #12]
   1ac4c:	ldr	r2, [r3, #16]
   1ac50:	cmp	r2, #1
   1ac54:	popeq	{r4, r5, r6, r7, r8, pc}
   1ac58:	mov	r2, #1
   1ac5c:	ldr	r1, [r5, #184]	; 0xb8
   1ac60:	mov	r0, r4
   1ac64:	str	r2, [r3, #16]
   1ac68:	pop	{r4, r5, r6, r7, r8, lr}
   1ac6c:	b	14b78 <g_object_notify_by_pspec@plt>
   1ac70:	mov	r0, r4
   1ac74:	ldr	r1, [pc, #252]	; 1ad78 <g_strcmp0@plt+0x5bac>
   1ac78:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1ac7c:	ldr	r0, [pc, #248]	; 1ad7c <g_strcmp0@plt+0x5bb0>
   1ac80:	bl	147e8 <g_strdup@plt>
   1ac84:	mov	r2, #0
   1ac88:	ldr	r1, [pc, #240]	; 1ad80 <g_strcmp0@plt+0x5bb4>
   1ac8c:	mov	r8, r0
   1ac90:	bl	14530 <g_strsplit_set@plt>
   1ac94:	subs	r6, r0, #0
   1ac98:	moveq	r7, r6
   1ac9c:	beq	1aca8 <g_strcmp0@plt+0x5adc>
   1aca0:	bl	183dc <g_strcmp0@plt+0x3210>
   1aca4:	mov	r7, r0
   1aca8:	mov	r2, r7
   1acac:	mov	r1, r6
   1acb0:	mov	r0, r4
   1acb4:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1acb8:	mov	r0, r6
   1acbc:	mov	r1, r7
   1acc0:	bl	189bc <g_strcmp0@plt+0x37f0>
   1acc4:	mov	r0, r8
   1acc8:	bl	14bd8 <g_free@plt>
   1accc:	b	1ac48 <g_strcmp0@plt+0x5a7c>
   1acd0:	ldr	r0, [pc, #172]	; 1ad84 <g_strcmp0@plt+0x5bb8>
   1acd4:	bl	14d64 <g_quark_from_static_string@plt>
   1acd8:	cmp	r0, r6
   1acdc:	str	r0, [r5, #332]	; 0x14c
   1ace0:	bne	1ac20 <g_strcmp0@plt+0x5a54>
   1ace4:	b	1ac70 <g_strcmp0@plt+0x5aa4>
   1ace8:	ldr	r6, [r5, #332]	; 0x14c
   1acec:	cmp	r6, #0
   1acf0:	beq	1acd0 <g_strcmp0@plt+0x5b04>
   1acf4:	ldr	r6, [r5, #336]	; 0x150
   1acf8:	cmp	r6, #0
   1acfc:	movne	r6, r7
   1ad00:	bne	1ac34 <g_strcmp0@plt+0x5a68>
   1ad04:	ldr	r0, [pc, #124]	; 1ad88 <g_strcmp0@plt+0x5bbc>
   1ad08:	bl	14d64 <g_quark_from_static_string@plt>
   1ad0c:	cmp	r0, r6
   1ad10:	str	r0, [r5, #336]	; 0x150
   1ad14:	bne	1ac34 <g_strcmp0@plt+0x5a68>
   1ad18:	mov	r0, r4
   1ad1c:	ldr	r1, [pc, #104]	; 1ad8c <g_strcmp0@plt+0x5bc0>
   1ad20:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1ad24:	ldr	r0, [pc, #100]	; 1ad90 <g_strcmp0@plt+0x5bc4>
   1ad28:	b	1ac80 <g_strcmp0@plt+0x5ab4>
   1ad2c:	ldr	r0, [pc, #96]	; 1ad94 <g_strcmp0@plt+0x5bc8>
   1ad30:	bl	14d64 <g_quark_from_static_string@plt>
   1ad34:	cmp	r0, r6
   1ad38:	str	r0, [r5, #340]	; 0x154
   1ad3c:	bne	1ac48 <g_strcmp0@plt+0x5a7c>
   1ad40:	ldr	r2, [pc, #80]	; 1ad98 <g_strcmp0@plt+0x5bcc>
   1ad44:	mov	r1, #32
   1ad48:	mov	r0, #0
   1ad4c:	bl	14668 <g_log@plt>
   1ad50:	mov	r0, r4
   1ad54:	ldr	r1, [pc, #56]	; 1ad94 <g_strcmp0@plt+0x5bc8>
   1ad58:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1ad5c:	ldr	r0, [pc, #48]	; 1ad94 <g_strcmp0@plt+0x5bc8>
   1ad60:	b	1ac80 <g_strcmp0@plt+0x5ab4>
   1ad64:	andeq	ip, r4, r4, asr #32
   1ad68:	ldrdeq	r4, [r3], -ip
   1ad6c:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1ad70:	andeq	r8, r3, ip, lsl #16
   1ad74:	ldrdeq	ip, [r4], -r8
   1ad78:	andeq	r5, r3, r8, lsl r5
   1ad7c:	andeq	r5, r3, ip, lsr r5
   1ad80:	andeq	r5, r3, ip, lsr #4
   1ad84:	muleq	r3, ip, r9
   1ad88:	andeq	r5, r3, ip, ror r5
   1ad8c:	andeq	r5, r3, r4, lsl #11
   1ad90:	muleq	r3, ip, r5
   1ad94:			; <UNDEFINED> instruction: 0x000355bc
   1ad98:	andeq	r5, r3, r8, asr #11
   1ad9c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ada0:	mov	r4, r0
   1ada4:	ldr	r5, [pc, #596]	; 1b000 <g_strcmp0@plt+0x5e34>
   1ada8:	ldr	r2, [pc, #596]	; 1b004 <g_strcmp0@plt+0x5e38>
   1adac:	ldr	r1, [pc, #596]	; 1b008 <g_strcmp0@plt+0x5e3c>
   1adb0:	ldr	r3, [pc, #596]	; 1b00c <g_strcmp0@plt+0x5e40>
   1adb4:	ldr	r0, [r5]
   1adb8:	bl	2a300 <g_strcmp0@plt+0x15134>
   1adbc:	ldr	r3, [r4, #24]
   1adc0:	mov	r6, r0
   1adc4:	ldr	r0, [r3]
   1adc8:	bl	14bd8 <g_free@plt>
   1adcc:	ldr	r2, [r4, #24]
   1add0:	ldr	r0, [r5]
   1add4:	mov	r3, #0
   1add8:	str	r6, [r2]
   1addc:	ldr	r1, [pc, #556]	; 1b010 <g_strcmp0@plt+0x5e44>
   1ade0:	ldr	r2, [pc, #556]	; 1b014 <g_strcmp0@plt+0x5e48>
   1ade4:	bl	2a300 <g_strcmp0@plt+0x15134>
   1ade8:	ldr	r3, [r4, #24]
   1adec:	mov	r5, r0
   1adf0:	ldr	r0, [r3, #4]
   1adf4:	bl	14bd8 <g_free@plt>
   1adf8:	ldr	r3, [r4, #24]
   1adfc:	ldr	r0, [r3]
   1ae00:	str	r5, [r3, #4]
   1ae04:	cmp	r0, #0
   1ae08:	ldr	r5, [pc, #520]	; 1b018 <g_strcmp0@plt+0x5e4c>
   1ae0c:	beq	1ae98 <g_strcmp0@plt+0x5ccc>
   1ae10:	bl	14bcc <g_quark_from_string@plt>
   1ae14:	mov	r6, r0
   1ae18:	ldr	r0, [r5, #344]	; 0x158
   1ae1c:	cmp	r0, #0
   1ae20:	beq	1ae80 <g_strcmp0@plt+0x5cb4>
   1ae24:	cmp	r0, r6
   1ae28:	beq	1ae58 <g_strcmp0@plt+0x5c8c>
   1ae2c:	ldr	r0, [r5, #348]	; 0x15c
   1ae30:	cmp	r0, #0
   1ae34:	beq	1af00 <g_strcmp0@plt+0x5d34>
   1ae38:	cmp	r0, r6
   1ae3c:	ldr	r3, [r4, #24]
   1ae40:	bne	1aeb0 <g_strcmp0@plt+0x5ce4>
   1ae44:	ldr	r0, [r3, #4]
   1ae48:	ldr	r1, [pc, #460]	; 1b01c <g_strcmp0@plt+0x5e50>
   1ae4c:	bl	151cc <g_strcmp0@plt>
   1ae50:	subs	r6, r0, #0
   1ae54:	beq	1af10 <g_strcmp0@plt+0x5d44>
   1ae58:	ldr	r3, [r4, #12]
   1ae5c:	ldr	r2, [r3, #16]
   1ae60:	cmp	r2, #1
   1ae64:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ae68:	mov	r2, #1
   1ae6c:	ldr	r1, [r5, #184]	; 0xb8
   1ae70:	mov	r0, r4
   1ae74:	str	r2, [r3, #16]
   1ae78:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ae7c:	b	14b78 <g_object_notify_by_pspec@plt>
   1ae80:	ldr	r0, [pc, #408]	; 1b020 <g_strcmp0@plt+0x5e54>
   1ae84:	bl	14d64 <g_quark_from_static_string@plt>
   1ae88:	cmp	r0, r6
   1ae8c:	str	r0, [r5, #344]	; 0x158
   1ae90:	bne	1ae2c <g_strcmp0@plt+0x5c60>
   1ae94:	b	1ae58 <g_strcmp0@plt+0x5c8c>
   1ae98:	ldr	r6, [r5, #344]	; 0x158
   1ae9c:	cmp	r6, #0
   1aea0:	beq	1ae80 <g_strcmp0@plt+0x5cb4>
   1aea4:	ldr	r6, [r5, #348]	; 0x15c
   1aea8:	cmp	r6, #0
   1aeac:	beq	1af00 <g_strcmp0@plt+0x5d34>
   1aeb0:	ldr	r0, [r3]
   1aeb4:	mov	r2, #0
   1aeb8:	ldr	r1, [pc, #356]	; 1b024 <g_strcmp0@plt+0x5e58>
   1aebc:	bl	14530 <g_strsplit_set@plt>
   1aec0:	subs	r6, r0, #0
   1aec4:	moveq	r7, r6
   1aec8:	beq	1aed4 <g_strcmp0@plt+0x5d08>
   1aecc:	bl	183dc <g_strcmp0@plt+0x3210>
   1aed0:	mov	r7, r0
   1aed4:	ldr	r1, [r6]
   1aed8:	mov	r0, r4
   1aedc:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1aee0:	mov	r1, r6
   1aee4:	mov	r0, r4
   1aee8:	mov	r2, r7
   1aeec:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1aef0:	mov	r1, r7
   1aef4:	mov	r0, r6
   1aef8:	bl	189bc <g_strcmp0@plt+0x37f0>
   1aefc:	b	1ae58 <g_strcmp0@plt+0x5c8c>
   1af00:	ldr	r0, [pc, #288]	; 1b028 <g_strcmp0@plt+0x5e5c>
   1af04:	bl	14d64 <g_quark_from_static_string@plt>
   1af08:	str	r0, [r5, #348]	; 0x15c
   1af0c:	b	1ae38 <g_strcmp0@plt+0x5c6c>
   1af10:	ldr	r0, [pc, #276]	; 1b02c <g_strcmp0@plt+0x5e60>
   1af14:	bl	14a10 <g_find_program_in_path@plt>
   1af18:	subs	r8, r0, #0
   1af1c:	beq	1af84 <g_strcmp0@plt+0x5db8>
   1af20:	ldr	r1, [pc, #260]	; 1b02c <g_strcmp0@plt+0x5e60>
   1af24:	mov	r0, r4
   1af28:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1af2c:	ldr	r0, [pc, #248]	; 1b02c <g_strcmp0@plt+0x5e60>
   1af30:	bl	147e8 <g_strdup@plt>
   1af34:	mov	r2, r6
   1af38:	ldr	r1, [pc, #228]	; 1b024 <g_strcmp0@plt+0x5e58>
   1af3c:	mov	r9, r0
   1af40:	bl	14530 <g_strsplit_set@plt>
   1af44:	subs	r7, r0, #0
   1af48:	beq	1af54 <g_strcmp0@plt+0x5d88>
   1af4c:	bl	183dc <g_strcmp0@plt+0x3210>
   1af50:	mov	r6, r0
   1af54:	mov	r2, r6
   1af58:	mov	r1, r7
   1af5c:	mov	r0, r4
   1af60:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1af64:	mov	r1, r6
   1af68:	mov	r0, r7
   1af6c:	bl	189bc <g_strcmp0@plt+0x37f0>
   1af70:	mov	r0, r9
   1af74:	bl	14bd8 <g_free@plt>
   1af78:	mov	r0, r8
   1af7c:	bl	14bd8 <g_free@plt>
   1af80:	b	1ae58 <g_strcmp0@plt+0x5c8c>
   1af84:	ldr	r0, [pc, #164]	; 1b030 <g_strcmp0@plt+0x5e64>
   1af88:	bl	14a10 <g_find_program_in_path@plt>
   1af8c:	subs	r8, r0, #0
   1af90:	beq	1aff0 <g_strcmp0@plt+0x5e24>
   1af94:	ldr	r1, [pc, #148]	; 1b030 <g_strcmp0@plt+0x5e64>
   1af98:	mov	r0, r4
   1af9c:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1afa0:	ldr	r0, [pc, #136]	; 1b030 <g_strcmp0@plt+0x5e64>
   1afa4:	bl	147e8 <g_strdup@plt>
   1afa8:	mov	r2, r6
   1afac:	ldr	r1, [pc, #112]	; 1b024 <g_strcmp0@plt+0x5e58>
   1afb0:	mov	r9, r0
   1afb4:	bl	14530 <g_strsplit_set@plt>
   1afb8:	subs	r7, r0, #0
   1afbc:	beq	1afc8 <g_strcmp0@plt+0x5dfc>
   1afc0:	bl	183dc <g_strcmp0@plt+0x3210>
   1afc4:	mov	r6, r0
   1afc8:	mov	r2, r6
   1afcc:	mov	r1, r7
   1afd0:	mov	r0, r4
   1afd4:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1afd8:	mov	r1, r6
   1afdc:	mov	r0, r7
   1afe0:	bl	189bc <g_strcmp0@plt+0x37f0>
   1afe4:	mov	r0, r9
   1afe8:	bl	14bd8 <g_free@plt>
   1afec:	mov	r0, r8
   1aff0:	bl	14bd8 <g_free@plt>
   1aff4:	mov	r0, #0
   1aff8:	bl	14bd8 <g_free@plt>
   1affc:	b	1ae58 <g_strcmp0@plt+0x5c8c>
   1b000:	andeq	ip, r4, r4, asr #32
   1b004:	andeq	r4, r3, ip, asr r8
   1b008:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1b00c:	ldrdeq	r4, [r3], -ip
   1b010:	andeq	r4, r3, r8, lsr #16
   1b014:	andeq	r4, r3, ip, lsl r8
   1b018:	ldrdeq	ip, [r4], -r8
   1b01c:	andeq	r4, r3, ip, lsr r8
   1b020:	andeq	r4, r3, r8, lsr r8
   1b024:	andeq	r5, r3, ip, lsr #4
   1b028:	andeq	r5, r3, r8, ror #9
   1b02c:	andeq	r5, r3, r8, ror #11
   1b030:	strdeq	r5, [r3], -r4
   1b034:	ldr	r3, [r0, #12]
   1b038:	ldr	r0, [r3, #16]
   1b03c:	bx	lr
   1b040:	ldr	r3, [r0, #12]
   1b044:	ldr	r2, [r3, #16]
   1b048:	cmp	r1, r2
   1b04c:	bxeq	lr
   1b050:	ldr	r2, [pc, #8]	; 1b060 <g_strcmp0@plt+0x5e94>
   1b054:	str	r1, [r3, #16]
   1b058:	ldr	r1, [r2, #184]	; 0xb8
   1b05c:	b	14b78 <g_object_notify_by_pspec@plt>
   1b060:	ldrdeq	ip, [r4], -r8
   1b064:	ldr	r3, [r0, #12]
   1b068:	ldr	r0, [r3, #20]
   1b06c:	bx	lr
   1b070:	ldr	r3, [r0, #12]
   1b074:	push	{r4, r5, r6, lr}
   1b078:	mov	r4, r0
   1b07c:	mov	r5, r1
   1b080:	mov	r0, r1
   1b084:	ldr	r1, [r3, #20]
   1b088:	bl	151cc <g_strcmp0@plt>
   1b08c:	cmp	r0, #0
   1b090:	popeq	{r4, r5, r6, pc}
   1b094:	mov	r0, r5
   1b098:	bl	147e8 <g_strdup@plt>
   1b09c:	ldr	r3, [r4, #12]
   1b0a0:	mov	r5, r0
   1b0a4:	ldr	r0, [r3, #20]
   1b0a8:	bl	14bd8 <g_free@plt>
   1b0ac:	ldr	r2, [r4, #12]
   1b0b0:	ldr	r3, [pc, #16]	; 1b0c8 <g_strcmp0@plt+0x5efc>
   1b0b4:	mov	r0, r4
   1b0b8:	str	r5, [r2, #20]
   1b0bc:	ldr	r1, [r3, #188]	; 0xbc
   1b0c0:	pop	{r4, r5, r6, lr}
   1b0c4:	b	14b78 <g_object_notify_by_pspec@plt>
   1b0c8:	ldrdeq	ip, [r4], -r8
   1b0cc:	sub	ip, r1, #1
   1b0d0:	push	{r4, r5, r6, lr}
   1b0d4:	mov	r4, r0
   1b0d8:	sub	sp, sp, #32
   1b0dc:	cmp	ip, #5
   1b0e0:	ldrls	pc, [pc, ip, lsl #2]
   1b0e4:	b	1b1f4 <g_strcmp0@plt+0x6028>
   1b0e8:	andeq	fp, r1, r4, lsr r1
   1b0ec:	andeq	fp, r1, r0, asr r1
   1b0f0:	andeq	fp, r1, r0, lsl #3
   1b0f4:	andeq	fp, r1, ip, lsr #3
   1b0f8:	andeq	fp, r1, r8, asr #3
   1b0fc:	andeq	fp, r1, r0, lsl #2
   1b100:	mov	r0, r2
   1b104:	bl	14518 <g_value_get_int@plt>
   1b108:	ldr	r3, [r4, #12]
   1b10c:	ldr	r2, [r3, #28]
   1b110:	cmp	r0, r2
   1b114:	beq	1b24c <g_strcmp0@plt+0x6080>
   1b118:	ldr	r2, [pc, #308]	; 1b254 <g_strcmp0@plt+0x6088>
   1b11c:	str	r0, [r3, #28]
   1b120:	mov	r0, r4
   1b124:	ldr	r1, [r2, #196]	; 0xc4
   1b128:	add	sp, sp, #32
   1b12c:	pop	{r4, r5, r6, lr}
   1b130:	b	14b78 <g_object_notify_by_pspec@plt>
   1b134:	mov	r0, r2
   1b138:	bl	144a0 <g_value_get_string@plt>
   1b13c:	mov	r1, r0
   1b140:	mov	r0, r4
   1b144:	add	sp, sp, #32
   1b148:	pop	{r4, r5, r6, lr}
   1b14c:	b	18f10 <g_strcmp0@plt+0x3d44>
   1b150:	mov	r0, r2
   1b154:	bl	150d0 <g_value_get_boxed@plt>
   1b158:	subs	r5, r0, #0
   1b15c:	moveq	r2, r5
   1b160:	beq	1b16c <g_strcmp0@plt+0x5fa0>
   1b164:	bl	14b24 <g_strv_length@plt>
   1b168:	mov	r2, r0
   1b16c:	mov	r1, r5
   1b170:	mov	r0, r4
   1b174:	add	sp, sp, #32
   1b178:	pop	{r4, r5, r6, lr}
   1b17c:	b	18f84 <g_strcmp0@plt+0x3db8>
   1b180:	mov	r0, r2
   1b184:	bl	149a4 <g_value_get_boolean@plt>
   1b188:	ldr	r3, [r4, #12]
   1b18c:	ldr	r2, [r3, #16]
   1b190:	cmp	r0, r2
   1b194:	beq	1b24c <g_strcmp0@plt+0x6080>
   1b198:	ldr	r2, [pc, #180]	; 1b254 <g_strcmp0@plt+0x6088>
   1b19c:	str	r0, [r3, #16]
   1b1a0:	mov	r0, r4
   1b1a4:	ldr	r1, [r2, #184]	; 0xb8
   1b1a8:	b	1b128 <g_strcmp0@plt+0x5f5c>
   1b1ac:	mov	r0, r2
   1b1b0:	bl	144a0 <g_value_get_string@plt>
   1b1b4:	mov	r1, r0
   1b1b8:	mov	r0, r4
   1b1bc:	add	sp, sp, #32
   1b1c0:	pop	{r4, r5, r6, lr}
   1b1c4:	b	1b070 <g_strcmp0@plt+0x5ea4>
   1b1c8:	mov	r0, r2
   1b1cc:	bl	14518 <g_value_get_int@plt>
   1b1d0:	ldr	r3, [r4, #12]
   1b1d4:	ldr	r2, [r3, #24]
   1b1d8:	cmp	r0, r2
   1b1dc:	beq	1b24c <g_strcmp0@plt+0x6080>
   1b1e0:	ldr	r2, [pc, #108]	; 1b254 <g_strcmp0@plt+0x6088>
   1b1e4:	str	r0, [r3, #24]
   1b1e8:	mov	r0, r4
   1b1ec:	ldr	r1, [r2, #192]	; 0xc0
   1b1f0:	b	1b128 <g_strcmp0@plt+0x5f5c>
   1b1f4:	ldm	r3, {r2, r5}
   1b1f8:	str	r1, [sp, #28]
   1b1fc:	ldr	r0, [r2]
   1b200:	bl	14680 <g_type_name@plt>
   1b204:	ldr	r3, [r4]
   1b208:	mov	r6, r0
   1b20c:	ldr	r0, [r3]
   1b210:	bl	14680 <g_type_name@plt>
   1b214:	ldr	r2, [pc, #60]	; 1b258 <g_strcmp0@plt+0x608c>
   1b218:	ldr	r1, [sp, #28]
   1b21c:	mov	r3, #1760	; 0x6e0
   1b220:	str	r1, [sp, #8]
   1b224:	str	r2, [sp, #4]
   1b228:	str	r3, [sp]
   1b22c:	str	r6, [sp, #16]
   1b230:	str	r5, [sp, #12]
   1b234:	ldr	r3, [pc, #32]	; 1b25c <g_strcmp0@plt+0x6090>
   1b238:	ldr	r2, [pc, #32]	; 1b260 <g_strcmp0@plt+0x6094>
   1b23c:	mov	r1, #16
   1b240:	str	r0, [sp, #20]
   1b244:	mov	r0, #0
   1b248:	bl	14668 <g_log@plt>
   1b24c:	add	sp, sp, #32
   1b250:	pop	{r4, r5, r6, pc}
   1b254:	ldrdeq	ip, [r4], -r8
   1b258:	andeq	r4, r3, ip, lsr pc
   1b25c:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1b260:	andeq	r4, r3, r4, lsl #30
   1b264:	ldr	r3, [r0, #12]
   1b268:	ldr	r0, [r3, #24]
   1b26c:	bx	lr
   1b270:	ldr	r3, [r0, #12]
   1b274:	ldr	r2, [r3, #24]
   1b278:	cmp	r1, r2
   1b27c:	bxeq	lr
   1b280:	ldr	r2, [pc, #8]	; 1b290 <g_strcmp0@plt+0x60c4>
   1b284:	str	r1, [r3, #24]
   1b288:	ldr	r1, [r2, #192]	; 0xc0
   1b28c:	b	14b78 <g_object_notify_by_pspec@plt>
   1b290:	ldrdeq	ip, [r4], -r8
   1b294:	ldr	r3, [r0, #12]
   1b298:	ldr	r0, [r3, #28]
   1b29c:	bx	lr
   1b2a0:	ldr	r3, [r0, #12]
   1b2a4:	ldr	r2, [r3, #28]
   1b2a8:	cmp	r1, r2
   1b2ac:	bxeq	lr
   1b2b0:	ldr	r2, [pc, #8]	; 1b2c0 <g_strcmp0@plt+0x60f4>
   1b2b4:	str	r1, [r3, #28]
   1b2b8:	ldr	r1, [r2, #196]	; 0xc4
   1b2bc:	b	14b78 <g_object_notify_by_pspec@plt>
   1b2c0:	ldrdeq	ip, [r4], -r8
   1b2c4:	push	{r4, r5, r6, lr}
   1b2c8:	mcr	15, 0, r0, cr7, cr10, {5}
   1b2cc:	ldr	r4, [pc, #96]	; 1b334 <g_strcmp0@plt+0x6168>
   1b2d0:	ldr	r5, [r4, #352]	; 0x160
   1b2d4:	mcr	15, 0, r0, cr7, cr10, {5}
   1b2d8:	cmp	r5, #0
   1b2dc:	beq	1b2e8 <g_strcmp0@plt+0x611c>
   1b2e0:	ldr	r0, [r4, #352]	; 0x160
   1b2e4:	pop	{r4, r5, r6, pc}
   1b2e8:	add	r0, r4, #352	; 0x160
   1b2ec:	bl	14a28 <g_once_init_enter@plt>
   1b2f0:	cmp	r0, #0
   1b2f4:	beq	1b2e0 <g_strcmp0@plt+0x6114>
   1b2f8:	mov	r3, r5
   1b2fc:	ldr	r2, [pc, #52]	; 1b338 <g_strcmp0@plt+0x616c>
   1b300:	ldr	r1, [pc, #52]	; 1b33c <g_strcmp0@plt+0x6170>
   1b304:	mov	r0, #80	; 0x50
   1b308:	bl	14428 <g_type_register_static@plt>
   1b30c:	mov	r1, #32
   1b310:	mov	r5, r0
   1b314:	bl	14c08 <g_type_add_instance_private@plt>
   1b318:	mov	r1, r5
   1b31c:	mov	r3, r0
   1b320:	mov	r0, r4
   1b324:	str	r3, [r0], #352	; 0x160
   1b328:	bl	14ed8 <g_once_init_leave@plt>
   1b32c:	ldr	r0, [r4, #352]	; 0x160
   1b330:	pop	{r4, r5, r6, pc}
   1b334:	ldrdeq	ip, [r4], -r8
   1b338:	andeq	r4, r3, r0, asr #22
   1b33c:	strdeq	r5, [r3], -ip
   1b340:	push	{r4, lr}
   1b344:	bl	1b2c4 <g_strcmp0@plt+0x60f8>
   1b348:	pop	{r4, lr}
   1b34c:	b	18a6c <g_strcmp0@plt+0x38a0>
   1b350:	push	{r4, r5, r6, lr}
   1b354:	bl	18a6c <g_strcmp0@plt+0x38a0>
   1b358:	ldr	r1, [pc, #120]	; 1b3d8 <g_strcmp0@plt+0x620c>
   1b35c:	mov	r4, r0
   1b360:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1b364:	ldr	r0, [pc, #108]	; 1b3d8 <g_strcmp0@plt+0x620c>
   1b368:	bl	147e8 <g_strdup@plt>
   1b36c:	mov	r6, r0
   1b370:	mov	r0, #8
   1b374:	bl	14fbc <g_malloc0@plt>
   1b378:	mov	r2, #1
   1b37c:	mov	r5, r0
   1b380:	mov	r1, r0
   1b384:	mov	r0, r4
   1b388:	str	r6, [r5]
   1b38c:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1b390:	mov	r0, r5
   1b394:	mov	r1, #1
   1b398:	bl	189bc <g_strcmp0@plt+0x37f0>
   1b39c:	ldr	r3, [r4, #12]
   1b3a0:	ldr	r2, [r3, #16]
   1b3a4:	cmp	r2, #0
   1b3a8:	beq	1b3c4 <g_strcmp0@plt+0x61f8>
   1b3ac:	ldr	r2, [pc, #40]	; 1b3dc <g_strcmp0@plt+0x6210>
   1b3b0:	mov	r1, #0
   1b3b4:	str	r1, [r3, #16]
   1b3b8:	mov	r0, r4
   1b3bc:	ldr	r1, [r2, #184]	; 0xb8
   1b3c0:	bl	14b78 <g_object_notify_by_pspec@plt>
   1b3c4:	mov	r0, r4
   1b3c8:	ldr	r1, [pc, #8]	; 1b3d8 <g_strcmp0@plt+0x620c>
   1b3cc:	bl	1b070 <g_strcmp0@plt+0x5ea4>
   1b3d0:	mov	r0, r4
   1b3d4:	pop	{r4, r5, r6, pc}
   1b3d8:	andeq	sl, r3, ip, ror #18
   1b3dc:	ldrdeq	ip, [r4], -r8
   1b3e0:	push	{r4, r5, r6, lr}
   1b3e4:	mcr	15, 0, r0, cr7, cr10, {5}
   1b3e8:	ldr	r4, [pc, #76]	; 1b43c <g_strcmp0@plt+0x6270>
   1b3ec:	ldr	r5, [r4, #356]	; 0x164
   1b3f0:	mcr	15, 0, r0, cr7, cr10, {5}
   1b3f4:	cmp	r5, #0
   1b3f8:	beq	1b404 <g_strcmp0@plt+0x6238>
   1b3fc:	ldr	r0, [r4, #356]	; 0x164
   1b400:	pop	{r4, r5, r6, pc}
   1b404:	add	r0, r4, #356	; 0x164
   1b408:	bl	14a28 <g_once_init_enter@plt>
   1b40c:	cmp	r0, #0
   1b410:	beq	1b3fc <g_strcmp0@plt+0x6230>
   1b414:	bl	1b2c4 <g_strcmp0@plt+0x60f8>
   1b418:	mov	r3, r5
   1b41c:	ldr	r2, [pc, #28]	; 1b440 <g_strcmp0@plt+0x6274>
   1b420:	ldr	r1, [pc, #28]	; 1b444 <g_strcmp0@plt+0x6278>
   1b424:	bl	14428 <g_type_register_static@plt>
   1b428:	mov	r1, r0
   1b42c:	add	r0, r4, #356	; 0x164
   1b430:	bl	14ed8 <g_once_init_leave@plt>
   1b434:	ldr	r0, [r4, #356]	; 0x164
   1b438:	pop	{r4, r5, r6, pc}
   1b43c:	ldrdeq	ip, [r4], -r8
   1b440:	andeq	r4, r3, r4, ror #22
   1b444:	andeq	r5, r3, r0, lsl r6
   1b448:	push	{r4, lr}
   1b44c:	bl	1b3e0 <g_strcmp0@plt+0x6214>
   1b450:	pop	{r4, lr}
   1b454:	b	1b350 <g_strcmp0@plt+0x6184>
   1b458:	push	{r4, r5, r6, lr}
   1b45c:	mov	r4, r1
   1b460:	bl	18a6c <g_strcmp0@plt+0x38a0>
   1b464:	ldr	r1, [r4]
   1b468:	mov	r5, r0
   1b46c:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1b470:	ldmib	r4, {r1, r2}
   1b474:	mov	r0, r5
   1b478:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1b47c:	ldr	r3, [r5, #12]
   1b480:	ldr	r2, [r4, #12]
   1b484:	ldr	r1, [r3, #16]
   1b488:	cmp	r1, r2
   1b48c:	beq	1b4a4 <g_strcmp0@plt+0x62d8>
   1b490:	ldr	r1, [pc, #32]	; 1b4b8 <g_strcmp0@plt+0x62ec>
   1b494:	str	r2, [r3, #16]
   1b498:	mov	r0, r5
   1b49c:	ldr	r1, [r1, #184]	; 0xb8
   1b4a0:	bl	14b78 <g_object_notify_by_pspec@plt>
   1b4a4:	mov	r0, r5
   1b4a8:	ldr	r1, [r4, #16]
   1b4ac:	bl	1b070 <g_strcmp0@plt+0x5ea4>
   1b4b0:	mov	r0, r5
   1b4b4:	pop	{r4, r5, r6, pc}
   1b4b8:	ldrdeq	ip, [r4], -r8
   1b4bc:	push	{r4, r5, r6, lr}
   1b4c0:	mcr	15, 0, r0, cr7, cr10, {5}
   1b4c4:	ldr	r4, [pc, #76]	; 1b518 <g_strcmp0@plt+0x634c>
   1b4c8:	ldr	r5, [r4, #360]	; 0x168
   1b4cc:	mcr	15, 0, r0, cr7, cr10, {5}
   1b4d0:	cmp	r5, #0
   1b4d4:	beq	1b4e0 <g_strcmp0@plt+0x6314>
   1b4d8:	ldr	r0, [r4, #360]	; 0x168
   1b4dc:	pop	{r4, r5, r6, pc}
   1b4e0:	add	r0, r4, #360	; 0x168
   1b4e4:	bl	14a28 <g_once_init_enter@plt>
   1b4e8:	cmp	r0, #0
   1b4ec:	beq	1b4d8 <g_strcmp0@plt+0x630c>
   1b4f0:	bl	1b2c4 <g_strcmp0@plt+0x60f8>
   1b4f4:	mov	r3, r5
   1b4f8:	ldr	r2, [pc, #28]	; 1b51c <g_strcmp0@plt+0x6350>
   1b4fc:	ldr	r1, [pc, #28]	; 1b520 <g_strcmp0@plt+0x6354>
   1b500:	bl	14428 <g_type_register_static@plt>
   1b504:	mov	r1, r0
   1b508:	add	r0, r4, #360	; 0x168
   1b50c:	bl	14ed8 <g_once_init_leave@plt>
   1b510:	ldr	r0, [r4, #360]	; 0x168
   1b514:	pop	{r4, r5, r6, pc}
   1b518:	ldrdeq	ip, [r4], -r8
   1b51c:	andeq	r4, r3, r8, lsl #23
   1b520:	andeq	r5, r3, ip, lsr #12
   1b524:	push	{r4, lr}
   1b528:	mov	r4, r0
   1b52c:	bl	1b4bc <g_strcmp0@plt+0x62f0>
   1b530:	mov	r1, r4
   1b534:	pop	{r4, lr}
   1b538:	b	1b458 <g_strcmp0@plt+0x628c>
   1b53c:	ldr	r3, [r0, #24]
   1b540:	ldr	r0, [r3]
   1b544:	bx	lr
   1b548:	ldr	r3, [r0, #24]
   1b54c:	push	{r4, r5, r6, lr}
   1b550:	mov	r4, r0
   1b554:	mov	r5, r1
   1b558:	mov	r0, r1
   1b55c:	ldr	r1, [r3]
   1b560:	bl	151cc <g_strcmp0@plt>
   1b564:	cmp	r0, #0
   1b568:	popeq	{r4, r5, r6, pc}
   1b56c:	mov	r0, r5
   1b570:	bl	147e8 <g_strdup@plt>
   1b574:	ldr	r3, [r4, #24]
   1b578:	mov	r5, r0
   1b57c:	ldr	r0, [r3]
   1b580:	bl	14bd8 <g_free@plt>
   1b584:	ldr	r2, [r4, #24]
   1b588:	ldr	r3, [pc, #16]	; 1b5a0 <g_strcmp0@plt+0x63d4>
   1b58c:	mov	r0, r4
   1b590:	str	r5, [r2]
   1b594:	ldr	r1, [r3, #164]	; 0xa4
   1b598:	pop	{r4, r5, r6, lr}
   1b59c:	b	14b78 <g_object_notify_by_pspec@plt>
   1b5a0:	ldrdeq	ip, [r4], -r8
   1b5a4:	push	{r4, r5, r6, lr}
   1b5a8:	mov	r5, r1
   1b5ac:	bl	1b350 <g_strcmp0@plt+0x6184>
   1b5b0:	mov	r1, r5
   1b5b4:	mov	r4, r0
   1b5b8:	bl	1b548 <g_strcmp0@plt+0x637c>
   1b5bc:	ldr	r3, [r4]
   1b5c0:	mov	r0, r4
   1b5c4:	ldr	r3, [r3, #68]	; 0x44
   1b5c8:	blx	r3
   1b5cc:	ldr	r3, [r4]
   1b5d0:	mov	r0, r4
   1b5d4:	ldr	r3, [r3, #72]	; 0x48
   1b5d8:	blx	r3
   1b5dc:	mov	r0, r4
   1b5e0:	pop	{r4, r5, r6, pc}
   1b5e4:	cmp	r1, #1
   1b5e8:	push	{r4, r5, r6, r7, lr}
   1b5ec:	mov	r5, r0
   1b5f0:	sub	sp, sp, #28
   1b5f4:	beq	1b64c <g_strcmp0@plt+0x6480>
   1b5f8:	ldm	r3, {r2, r6}
   1b5fc:	mov	r4, r1
   1b600:	ldr	r0, [r2]
   1b604:	bl	14680 <g_type_name@plt>
   1b608:	ldr	r3, [r5]
   1b60c:	mov	r7, r0
   1b610:	ldr	r0, [r3]
   1b614:	bl	14680 <g_type_name@plt>
   1b618:	ldr	r2, [pc, #72]	; 1b668 <g_strcmp0@plt+0x649c>
   1b61c:	mov	r3, #2048	; 0x800
   1b620:	str	r3, [sp]
   1b624:	stmib	sp, {r2, r4}
   1b628:	strd	r6, [sp, #12]
   1b62c:	ldr	r3, [pc, #56]	; 1b66c <g_strcmp0@plt+0x64a0>
   1b630:	ldr	r2, [pc, #56]	; 1b670 <g_strcmp0@plt+0x64a4>
   1b634:	mov	r1, #16
   1b638:	str	r0, [sp, #20]
   1b63c:	mov	r0, #0
   1b640:	bl	14668 <g_log@plt>
   1b644:	add	sp, sp, #28
   1b648:	pop	{r4, r5, r6, r7, pc}
   1b64c:	mov	r0, r2
   1b650:	bl	144a0 <g_value_get_string@plt>
   1b654:	mov	r1, r0
   1b658:	mov	r0, r5
   1b65c:	add	sp, sp, #28
   1b660:	pop	{r4, r5, r6, r7, lr}
   1b664:	b	1b548 <g_strcmp0@plt+0x637c>
   1b668:	andeq	r4, r3, ip, lsr pc
   1b66c:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1b670:	andeq	r4, r3, r4, lsl #30
   1b674:	push	{r4, r5, r6, lr}
   1b678:	mcr	15, 0, r0, cr7, cr10, {5}
   1b67c:	ldr	r4, [pc, #92]	; 1b6e0 <g_strcmp0@plt+0x6514>
   1b680:	ldr	r5, [r4, #364]	; 0x16c
   1b684:	mcr	15, 0, r0, cr7, cr10, {5}
   1b688:	cmp	r5, #0
   1b68c:	beq	1b698 <g_strcmp0@plt+0x64cc>
   1b690:	ldr	r0, [r4, #364]	; 0x16c
   1b694:	pop	{r4, r5, r6, pc}
   1b698:	add	r0, r4, #364	; 0x16c
   1b69c:	bl	14a28 <g_once_init_enter@plt>
   1b6a0:	cmp	r0, #0
   1b6a4:	beq	1b690 <g_strcmp0@plt+0x64c4>
   1b6a8:	bl	1b3e0 <g_strcmp0@plt+0x6214>
   1b6ac:	mov	r3, r5
   1b6b0:	ldr	r2, [pc, #44]	; 1b6e4 <g_strcmp0@plt+0x6518>
   1b6b4:	ldr	r1, [pc, #44]	; 1b6e8 <g_strcmp0@plt+0x651c>
   1b6b8:	bl	14428 <g_type_register_static@plt>
   1b6bc:	mov	r1, #4
   1b6c0:	mov	r5, r0
   1b6c4:	bl	14c08 <g_type_add_instance_private@plt>
   1b6c8:	mov	r1, r5
   1b6cc:	str	r0, [r4, #152]	; 0x98
   1b6d0:	add	r0, r4, #364	; 0x16c
   1b6d4:	bl	14ed8 <g_once_init_leave@plt>
   1b6d8:	ldr	r0, [r4, #364]	; 0x16c
   1b6dc:	pop	{r4, r5, r6, pc}
   1b6e0:	ldrdeq	ip, [r4], -r8
   1b6e4:	andeq	r4, r3, ip, lsr #23
   1b6e8:	andeq	r5, r3, r8, asr #12
   1b6ec:	push	{r4, lr}
   1b6f0:	mov	r4, r0
   1b6f4:	bl	1b674 <g_strcmp0@plt+0x64a8>
   1b6f8:	mov	r1, r4
   1b6fc:	pop	{r4, lr}
   1b700:	b	1b5a4 <g_strcmp0@plt+0x63d8>
   1b704:	push	{r4, lr}
   1b708:	bl	1b350 <g_strcmp0@plt+0x6184>
   1b70c:	ldr	r3, [r0]
   1b710:	mov	r4, r0
   1b714:	ldr	r3, [r3, #68]	; 0x44
   1b718:	blx	r3
   1b71c:	ldr	r3, [r4]
   1b720:	mov	r0, r4
   1b724:	ldr	r3, [r3, #72]	; 0x48
   1b728:	blx	r3
   1b72c:	mov	r0, r4
   1b730:	pop	{r4, pc}
   1b734:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b738:	sub	sp, sp, #36	; 0x24
   1b73c:	ldr	r8, [pc, #548]	; 1b968 <g_strcmp0@plt+0x679c>
   1b740:	ldr	r3, [r0]
   1b744:	mov	r5, r0
   1b748:	ldr	r2, [r8]
   1b74c:	mov	r4, #0
   1b750:	ldr	r3, [r3, #68]	; 0x44
   1b754:	str	r4, [sp, #20]
   1b758:	str	r2, [sp, #28]
   1b75c:	blx	r3
   1b760:	ldr	r3, [r5]
   1b764:	mov	r0, r5
   1b768:	ldr	r3, [r3, #72]	; 0x48
   1b76c:	blx	r3
   1b770:	ldr	r3, [r5, #12]
   1b774:	ldr	r3, [r3]
   1b778:	cmp	r3, r4
   1b77c:	beq	1b850 <g_strcmp0@plt+0x6684>
   1b780:	str	r4, [sp, #24]
   1b784:	bl	14d04 <g_get_environ@plt>
   1b788:	subs	r9, r0, #0
   1b78c:	moveq	fp, r9
   1b790:	beq	1b79c <g_strcmp0@plt+0x65d0>
   1b794:	bl	183dc <g_strcmp0@plt+0x3210>
   1b798:	mov	fp, r0
   1b79c:	ldr	r2, [r5, #12]
   1b7a0:	mov	r6, #0
   1b7a4:	add	r3, sp, #24
   1b7a8:	add	sl, sp, #20
   1b7ac:	ldr	r1, [r2, #4]
   1b7b0:	mov	r0, r6
   1b7b4:	str	r3, [sp, #8]
   1b7b8:	str	sl, [sp, #12]
   1b7bc:	str	r6, [sp, #4]
   1b7c0:	str	r6, [sp]
   1b7c4:	mov	r3, #6
   1b7c8:	mov	r2, r9
   1b7cc:	bl	14800 <g_spawn_async@plt>
   1b7d0:	ldr	r4, [sp, #20]
   1b7d4:	ldr	r7, [sp, #24]
   1b7d8:	cmp	r4, r6
   1b7dc:	str	r7, [r5, #16]
   1b7e0:	beq	1b868 <g_strcmp0@plt+0x669c>
   1b7e4:	mov	r0, r9
   1b7e8:	mov	r1, fp
   1b7ec:	bl	189bc <g_strcmp0@plt+0x37f0>
   1b7f0:	ldr	r3, [sp, #20]
   1b7f4:	ldr	r4, [r3]
   1b7f8:	bl	146ec <g_spawn_error_quark@plt>
   1b7fc:	cmp	r4, r0
   1b800:	beq	1b93c <g_strcmp0@plt+0x6770>
   1b804:	mov	r1, fp
   1b808:	mov	r0, r6
   1b80c:	bl	189bc <g_strcmp0@plt+0x37f0>
   1b810:	ldr	r4, [sp, #20]
   1b814:	ldr	r0, [r4]
   1b818:	bl	14c2c <g_quark_to_string@plt>
   1b81c:	ldr	r3, [r4, #4]
   1b820:	ldr	ip, [pc, #324]	; 1b96c <g_strcmp0@plt+0x67a0>
   1b824:	str	r3, [sp, #12]
   1b828:	ldr	r2, [pc, #320]	; 1b970 <g_strcmp0@plt+0x67a4>
   1b82c:	ldr	r3, [pc, #320]	; 1b974 <g_strcmp0@plt+0x67a8>
   1b830:	mov	r1, #8
   1b834:	str	r0, [sp, #8]
   1b838:	ldr	lr, [r4, #8]
   1b83c:	mov	r0, r6
   1b840:	stm	sp, {ip, lr}
   1b844:	bl	14668 <g_log@plt>
   1b848:	mov	r0, sl
   1b84c:	bl	14dac <g_clear_error@plt>
   1b850:	ldr	r2, [sp, #28]
   1b854:	ldr	r3, [r8]
   1b858:	cmp	r2, r3
   1b85c:	bne	1b964 <g_strcmp0@plt+0x6798>
   1b860:	add	sp, sp, #36	; 0x24
   1b864:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b868:	mov	r0, r5
   1b86c:	bl	14404 <g_object_ref@plt>
   1b870:	ldr	r3, [pc, #256]	; 1b978 <g_strcmp0@plt+0x67ac>
   1b874:	mov	r1, r7
   1b878:	str	r3, [sp]
   1b87c:	ldr	r2, [pc, #248]	; 1b97c <g_strcmp0@plt+0x67b0>
   1b880:	ldr	r6, [pc, #248]	; 1b980 <g_strcmp0@plt+0x67b4>
   1b884:	mov	r3, r0
   1b888:	mov	r0, #200	; 0xc8
   1b88c:	bl	1513c <g_child_watch_add_full@plt>
   1b890:	ldr	r3, [r5, #12]
   1b894:	ldr	r2, [r3, #8]
   1b898:	ldr	r3, [r3, #4]
   1b89c:	cmp	r2, #0
   1b8a0:	ldrge	r7, [pc, #220]	; 1b984 <g_strcmp0@plt+0x67b8>
   1b8a4:	blt	1b8d4 <g_strcmp0@plt+0x6708>
   1b8a8:	ldr	r3, [r3, r4, lsl #2]
   1b8ac:	mov	r2, r7
   1b8b0:	mov	r1, #1
   1b8b4:	ldr	r0, [r6]
   1b8b8:	bl	147dc <__fprintf_chk@plt>
   1b8bc:	ldr	r3, [r5, #12]
   1b8c0:	add	r4, r4, #1
   1b8c4:	ldr	r2, [r3, #8]
   1b8c8:	ldr	r3, [r3, #4]
   1b8cc:	cmp	r4, r2
   1b8d0:	ble	1b8a8 <g_strcmp0@plt+0x66dc>
   1b8d4:	ldr	r1, [r6]
   1b8d8:	mov	r0, #10
   1b8dc:	bl	14e00 <fputc@plt>
   1b8e0:	mov	r1, fp
   1b8e4:	mov	r0, r9
   1b8e8:	bl	189bc <g_strcmp0@plt+0x37f0>
   1b8ec:	ldr	r4, [sp, #20]
   1b8f0:	cmp	r4, #0
   1b8f4:	beq	1b850 <g_strcmp0@plt+0x6684>
   1b8f8:	ldr	r0, [r4]
   1b8fc:	bl	14c2c <g_quark_to_string@plt>
   1b900:	ldr	r3, [r4, #4]
   1b904:	ldr	ip, [pc, #124]	; 1b988 <g_strcmp0@plt+0x67bc>
   1b908:	str	r3, [sp, #12]
   1b90c:	ldr	r2, [pc, #120]	; 1b98c <g_strcmp0@plt+0x67c0>
   1b910:	ldr	r3, [pc, #92]	; 1b974 <g_strcmp0@plt+0x67a8>
   1b914:	mov	r1, #8
   1b918:	str	r0, [sp, #8]
   1b91c:	ldr	r0, [r4, #8]
   1b920:	str	ip, [sp]
   1b924:	str	r0, [sp, #4]
   1b928:	mov	r0, #0
   1b92c:	bl	14668 <g_log@plt>
   1b930:	mov	r0, sl
   1b934:	bl	14dac <g_clear_error@plt>
   1b938:	b	1b850 <g_strcmp0@plt+0x6684>
   1b93c:	ldr	r4, [sp, #20]
   1b940:	mov	r0, r6
   1b944:	ldr	r2, [pc, #68]	; 1b990 <g_strcmp0@plt+0x67c4>
   1b948:	ldr	r3, [r4, #8]
   1b94c:	mov	r1, #16
   1b950:	str	r6, [sp, #20]
   1b954:	bl	14668 <g_log@plt>
   1b958:	mov	r0, r4
   1b95c:	bl	1453c <g_error_free@plt>
   1b960:	b	1b8ec <g_strcmp0@plt+0x6720>
   1b964:	bl	14b6c <__stack_chk_fail@plt>
   1b968:	andeq	fp, r4, r8, asr #19
   1b96c:	andeq	r0, r0, r6, ror #20
   1b970:	andeq	r4, r3, r4, ror r6
   1b974:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1b978:	muleq	r1, r0, lr
   1b97c:	muleq	r1, r4, r9
   1b980:	andeq	ip, r4, r8, lsr #32
   1b984:	andeq	r5, r3, r8, rrx
   1b988:	andeq	r0, r0, r9, lsr #21
   1b98c:	andeq	r4, r3, r4, lsr #13
   1b990:	andeq	r5, r3, r4, ror #12
   1b994:	ldr	r3, [r2, #12]
   1b998:	push	{r4, r5, r6, r7, r8, lr}
   1b99c:	sub	sp, sp, #8
   1b9a0:	mov	r4, r1
   1b9a4:	ldr	r3, [r3]
   1b9a8:	mov	r5, r2
   1b9ac:	mov	r6, r0
   1b9b0:	ldr	r2, [pc, #348]	; 1bb14 <g_strcmp0@plt+0x6948>
   1b9b4:	mov	r1, #32
   1b9b8:	str	r4, [sp]
   1b9bc:	mov	r0, #0
   1b9c0:	bl	14668 <g_log@plt>
   1b9c4:	cmn	r4, #1
   1b9c8:	beq	1ba54 <g_strcmp0@plt+0x6888>
   1b9cc:	mov	r0, r6
   1b9d0:	bl	14644 <g_spawn_close_pid@plt>
   1b9d4:	ldr	r3, [r5, #12]
   1b9d8:	ldr	r3, [r3, #16]
   1b9dc:	cmp	r3, #1
   1b9e0:	beq	1b9ec <g_strcmp0@plt+0x6820>
   1b9e4:	add	sp, sp, #8
   1b9e8:	pop	{r4, r5, r6, r7, r8, pc}
   1b9ec:	cmp	r4, #15
   1b9f0:	beq	1bb04 <g_strcmp0@plt+0x6938>
   1b9f4:	cmp	r4, #256	; 0x100
   1b9f8:	beq	1badc <g_strcmp0@plt+0x6910>
   1b9fc:	cmp	r4, #0
   1ba00:	beq	1baf4 <g_strcmp0@plt+0x6928>
   1ba04:	ldr	r2, [pc, #268]	; 1bb18 <g_strcmp0@plt+0x694c>
   1ba08:	mov	r1, #32
   1ba0c:	mov	r0, #0
   1ba10:	bl	14668 <g_log@plt>
   1ba14:	ldr	r2, [r5, #12]
   1ba18:	ldr	r1, [pc, #252]	; 1bb1c <g_strcmp0@plt+0x6950>
   1ba1c:	mov	r0, r5
   1ba20:	ldr	r3, [r2, #24]
   1ba24:	ldr	r1, [r1, #192]	; 0xc0
   1ba28:	add	r3, r3, #1
   1ba2c:	str	r3, [r2, #24]
   1ba30:	bl	14b78 <g_object_notify_by_pspec@plt>
   1ba34:	ldr	r3, [r5, #12]
   1ba38:	ldrd	r2, [r3, #24]
   1ba3c:	cmp	r2, r3
   1ba40:	bgt	1bb0c <g_strcmp0@plt+0x6940>
   1ba44:	mov	r0, r5
   1ba48:	add	sp, sp, #8
   1ba4c:	pop	{r4, r5, r6, r7, r8, lr}
   1ba50:	b	1b734 <g_strcmp0@plt+0x6568>
   1ba54:	ldr	r7, [pc, #196]	; 1bb20 <g_strcmp0@plt+0x6954>
   1ba58:	mov	r0, r5
   1ba5c:	mov	r1, r7
   1ba60:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1ba64:	bl	1840c <g_strcmp0@plt+0x3240>
   1ba68:	mov	r8, r0
   1ba6c:	mov	r0, #8
   1ba70:	bl	14fbc <g_malloc0@plt>
   1ba74:	mov	r2, #1
   1ba78:	mov	r4, r0
   1ba7c:	mov	r1, r0
   1ba80:	str	r8, [r4]
   1ba84:	mov	r0, r5
   1ba88:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1ba8c:	mov	r0, r4
   1ba90:	mov	r1, #1
   1ba94:	bl	189bc <g_strcmp0@plt+0x37f0>
   1ba98:	ldr	r2, [pc, #132]	; 1bb24 <g_strcmp0@plt+0x6958>
   1ba9c:	ldr	r3, [pc, #132]	; 1bb28 <g_strcmp0@plt+0x695c>
   1baa0:	str	r7, [sp, #4]
   1baa4:	ldr	r1, [pc, #128]	; 1bb2c <g_strcmp0@plt+0x6960>
   1baa8:	ldr	r0, [r2]
   1baac:	str	r3, [sp]
   1bab0:	ldr	r2, [pc, #120]	; 1bb30 <g_strcmp0@plt+0x6964>
   1bab4:	ldr	r3, [pc, #120]	; 1bb34 <g_strcmp0@plt+0x6968>
   1bab8:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   1babc:	mov	r0, r6
   1bac0:	bl	14644 <g_spawn_close_pid@plt>
   1bac4:	ldr	r3, [r5, #12]
   1bac8:	ldr	r3, [r3, #16]
   1bacc:	cmp	r3, #1
   1bad0:	beq	1ba04 <g_strcmp0@plt+0x6838>
   1bad4:	add	sp, sp, #8
   1bad8:	pop	{r4, r5, r6, r7, r8, pc}
   1badc:	ldr	r2, [pc, #84]	; 1bb38 <g_strcmp0@plt+0x696c>
   1bae0:	mov	r1, #32
   1bae4:	mov	r0, #0
   1bae8:	add	sp, sp, #8
   1baec:	pop	{r4, r5, r6, r7, r8, lr}
   1baf0:	b	14668 <g_log@plt>
   1baf4:	mov	r0, r4
   1baf8:	ldr	r2, [pc, #60]	; 1bb3c <g_strcmp0@plt+0x6970>
   1bafc:	mov	r1, #32
   1bb00:	b	1bae8 <g_strcmp0@plt+0x691c>
   1bb04:	ldr	r2, [pc, #52]	; 1bb40 <g_strcmp0@plt+0x6974>
   1bb08:	b	1bae0 <g_strcmp0@plt+0x6914>
   1bb0c:	ldr	r2, [pc, #48]	; 1bb44 <g_strcmp0@plt+0x6978>
   1bb10:	b	1bae0 <g_strcmp0@plt+0x6914>
   1bb14:	andeq	r5, r3, r8, ror r6
   1bb18:	andeq	r5, r3, ip, lsr #14
   1bb1c:	ldrdeq	ip, [r4], -r8
   1bb20:	andeq	r5, r3, r8, lsl r4
   1bb24:	andeq	ip, r4, r4, asr #32
   1bb28:	andeq	r4, r3, r4, asr r8
   1bb2c:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1bb30:	andeq	r4, r3, r4, ror #15
   1bb34:	ldrdeq	r4, [r3], -ip
   1bb38:	andeq	r5, r3, r4, lsl #14
   1bb3c:	andeq	r5, r3, ip, lsr #13
   1bb40:	ldrdeq	r5, [r3], -r4
   1bb44:	andeq	r5, r3, ip, asr r7
   1bb48:	push	{r4, r5, r6, lr}
   1bb4c:	mcr	15, 0, r0, cr7, cr10, {5}
   1bb50:	ldr	r4, [pc, #92]	; 1bbb4 <g_strcmp0@plt+0x69e8>
   1bb54:	ldr	r5, [r4, #368]	; 0x170
   1bb58:	mcr	15, 0, r0, cr7, cr10, {5}
   1bb5c:	cmp	r5, #0
   1bb60:	beq	1bb6c <g_strcmp0@plt+0x69a0>
   1bb64:	ldr	r0, [r4, #368]	; 0x170
   1bb68:	pop	{r4, r5, r6, pc}
   1bb6c:	add	r0, r4, #368	; 0x170
   1bb70:	bl	14a28 <g_once_init_enter@plt>
   1bb74:	cmp	r0, #0
   1bb78:	beq	1bb64 <g_strcmp0@plt+0x6998>
   1bb7c:	bl	1b3e0 <g_strcmp0@plt+0x6214>
   1bb80:	mov	r3, r5
   1bb84:	ldr	r2, [pc, #44]	; 1bbb8 <g_strcmp0@plt+0x69ec>
   1bb88:	ldr	r1, [pc, #44]	; 1bbbc <g_strcmp0@plt+0x69f0>
   1bb8c:	bl	14428 <g_type_register_static@plt>
   1bb90:	mov	r1, #16
   1bb94:	mov	r5, r0
   1bb98:	bl	14c08 <g_type_add_instance_private@plt>
   1bb9c:	mov	r1, r5
   1bba0:	str	r0, [r4, #4]
   1bba4:	add	r0, r4, #368	; 0x170
   1bba8:	bl	14ed8 <g_once_init_leave@plt>
   1bbac:	ldr	r0, [r4, #368]	; 0x170
   1bbb0:	pop	{r4, r5, r6, pc}
   1bbb4:	ldrdeq	ip, [r4], -r8
   1bbb8:	ldrdeq	r4, [r3], -r0
   1bbbc:	muleq	r3, r8, r7
   1bbc0:	push	{r4, lr}
   1bbc4:	bl	1bb48 <g_strcmp0@plt+0x697c>
   1bbc8:	pop	{r4, lr}
   1bbcc:	b	1b704 <g_strcmp0@plt+0x6538>
   1bbd0:	push	{r4, lr}
   1bbd4:	bl	1b350 <g_strcmp0@plt+0x6184>
   1bbd8:	ldr	r3, [r0]
   1bbdc:	mov	r4, r0
   1bbe0:	ldr	r3, [r3, #68]	; 0x44
   1bbe4:	blx	r3
   1bbe8:	ldr	r3, [r4]
   1bbec:	mov	r0, r4
   1bbf0:	ldr	r3, [r3, #72]	; 0x48
   1bbf4:	blx	r3
   1bbf8:	mov	r0, r4
   1bbfc:	pop	{r4, pc}
   1bc00:	push	{r4, r5, r6, lr}
   1bc04:	mcr	15, 0, r0, cr7, cr10, {5}
   1bc08:	ldr	r4, [pc, #76]	; 1bc5c <g_strcmp0@plt+0x6a90>
   1bc0c:	ldr	r5, [r4, #372]	; 0x174
   1bc10:	mcr	15, 0, r0, cr7, cr10, {5}
   1bc14:	cmp	r5, #0
   1bc18:	beq	1bc24 <g_strcmp0@plt+0x6a58>
   1bc1c:	ldr	r0, [r4, #372]	; 0x174
   1bc20:	pop	{r4, r5, r6, pc}
   1bc24:	add	r0, r4, #372	; 0x174
   1bc28:	bl	14a28 <g_once_init_enter@plt>
   1bc2c:	cmp	r0, #0
   1bc30:	beq	1bc1c <g_strcmp0@plt+0x6a50>
   1bc34:	bl	1b3e0 <g_strcmp0@plt+0x6214>
   1bc38:	mov	r3, r5
   1bc3c:	ldr	r2, [pc, #28]	; 1bc60 <g_strcmp0@plt+0x6a94>
   1bc40:	ldr	r1, [pc, #28]	; 1bc64 <g_strcmp0@plt+0x6a98>
   1bc44:	bl	14428 <g_type_register_static@plt>
   1bc48:	mov	r1, r0
   1bc4c:	add	r0, r4, #372	; 0x174
   1bc50:	bl	14ed8 <g_once_init_leave@plt>
   1bc54:	ldr	r0, [r4, #372]	; 0x174
   1bc58:	pop	{r4, r5, r6, pc}
   1bc5c:	ldrdeq	ip, [r4], -r8
   1bc60:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1bc64:			; <UNDEFINED> instruction: 0x000357b4
   1bc68:	push	{r4, lr}
   1bc6c:	bl	1bc00 <g_strcmp0@plt+0x6a34>
   1bc70:	pop	{r4, lr}
   1bc74:	b	1bbd0 <g_strcmp0@plt+0x6a04>
   1bc78:	push	{r4, lr}
   1bc7c:	bl	1bbd0 <g_strcmp0@plt+0x6a04>
   1bc80:	ldr	r3, [r0]
   1bc84:	mov	r4, r0
   1bc88:	ldr	r3, [r3, #68]	; 0x44
   1bc8c:	blx	r3
   1bc90:	ldr	r3, [r4]
   1bc94:	mov	r0, r4
   1bc98:	ldr	r3, [r3, #72]	; 0x48
   1bc9c:	blx	r3
   1bca0:	mov	r0, r4
   1bca4:	pop	{r4, pc}
   1bca8:	push	{r4, r5, r6, lr}
   1bcac:	mcr	15, 0, r0, cr7, cr10, {5}
   1bcb0:	ldr	r4, [pc, #76]	; 1bd04 <g_strcmp0@plt+0x6b38>
   1bcb4:	ldr	r5, [r4, #376]	; 0x178
   1bcb8:	mcr	15, 0, r0, cr7, cr10, {5}
   1bcbc:	cmp	r5, #0
   1bcc0:	beq	1bccc <g_strcmp0@plt+0x6b00>
   1bcc4:	ldr	r0, [r4, #376]	; 0x178
   1bcc8:	pop	{r4, r5, r6, pc}
   1bccc:	add	r0, r4, #376	; 0x178
   1bcd0:	bl	14a28 <g_once_init_enter@plt>
   1bcd4:	cmp	r0, #0
   1bcd8:	beq	1bcc4 <g_strcmp0@plt+0x6af8>
   1bcdc:	bl	1bc00 <g_strcmp0@plt+0x6a34>
   1bce0:	mov	r3, r5
   1bce4:	ldr	r2, [pc, #28]	; 1bd08 <g_strcmp0@plt+0x6b3c>
   1bce8:	ldr	r1, [pc, #28]	; 1bd0c <g_strcmp0@plt+0x6b40>
   1bcec:	bl	14428 <g_type_register_static@plt>
   1bcf0:	mov	r1, r0
   1bcf4:	add	r0, r4, #376	; 0x178
   1bcf8:	bl	14ed8 <g_once_init_leave@plt>
   1bcfc:	ldr	r0, [r4, #376]	; 0x178
   1bd00:	pop	{r4, r5, r6, pc}
   1bd04:	ldrdeq	ip, [r4], -r8
   1bd08:	andeq	r4, r3, r8, lsl ip
   1bd0c:	andeq	r5, r3, r8, asr #15
   1bd10:	push	{r4, lr}
   1bd14:	bl	1bca8 <g_strcmp0@plt+0x6adc>
   1bd18:	pop	{r4, lr}
   1bd1c:	b	1bc78 <g_strcmp0@plt+0x6aac>
   1bd20:	push	{r4, lr}
   1bd24:	bl	1b350 <g_strcmp0@plt+0x6184>
   1bd28:	ldr	r3, [r0]
   1bd2c:	mov	r4, r0
   1bd30:	ldr	r3, [r3, #68]	; 0x44
   1bd34:	blx	r3
   1bd38:	ldr	r3, [r4]
   1bd3c:	mov	r0, r4
   1bd40:	ldr	r3, [r3, #72]	; 0x48
   1bd44:	blx	r3
   1bd48:	mov	r0, r4
   1bd4c:	pop	{r4, pc}
   1bd50:	push	{r4, r5, r6, lr}
   1bd54:	mcr	15, 0, r0, cr7, cr10, {5}
   1bd58:	ldr	r4, [pc, #92]	; 1bdbc <g_strcmp0@plt+0x6bf0>
   1bd5c:	ldr	r5, [r4, #380]	; 0x17c
   1bd60:	mcr	15, 0, r0, cr7, cr10, {5}
   1bd64:	cmp	r5, #0
   1bd68:	beq	1bd74 <g_strcmp0@plt+0x6ba8>
   1bd6c:	ldr	r0, [r4, #380]	; 0x17c
   1bd70:	pop	{r4, r5, r6, pc}
   1bd74:	add	r0, r4, #380	; 0x17c
   1bd78:	bl	14a28 <g_once_init_enter@plt>
   1bd7c:	cmp	r0, #0
   1bd80:	beq	1bd6c <g_strcmp0@plt+0x6ba0>
   1bd84:	bl	1b3e0 <g_strcmp0@plt+0x6214>
   1bd88:	mov	r3, r5
   1bd8c:	ldr	r2, [pc, #44]	; 1bdc0 <g_strcmp0@plt+0x6bf4>
   1bd90:	ldr	r1, [pc, #44]	; 1bdc4 <g_strcmp0@plt+0x6bf8>
   1bd94:	bl	14428 <g_type_register_static@plt>
   1bd98:	mov	r1, #4
   1bd9c:	mov	r5, r0
   1bda0:	bl	14c08 <g_type_add_instance_private@plt>
   1bda4:	mov	r1, r5
   1bda8:	str	r0, [r4, #8]
   1bdac:	add	r0, r4, #380	; 0x17c
   1bdb0:	bl	14ed8 <g_once_init_leave@plt>
   1bdb4:	ldr	r0, [r4, #380]	; 0x17c
   1bdb8:	pop	{r4, r5, r6, pc}
   1bdbc:	ldrdeq	ip, [r4], -r8
   1bdc0:	andeq	r4, r3, ip, lsr ip
   1bdc4:	ldrdeq	r5, [r3], -ip
   1bdc8:	push	{r4, lr}
   1bdcc:	bl	1bd50 <g_strcmp0@plt+0x6b84>
   1bdd0:	pop	{r4, lr}
   1bdd4:	b	1bd20 <g_strcmp0@plt+0x6b54>
   1bdd8:	push	{r4, lr}
   1bddc:	bl	1b350 <g_strcmp0@plt+0x6184>
   1bde0:	ldr	r3, [r0]
   1bde4:	mov	r4, r0
   1bde8:	ldr	r3, [r3, #68]	; 0x44
   1bdec:	blx	r3
   1bdf0:	ldr	r3, [r4]
   1bdf4:	mov	r0, r4
   1bdf8:	ldr	r3, [r3, #72]	; 0x48
   1bdfc:	blx	r3
   1be00:	mov	r0, r4
   1be04:	pop	{r4, pc}
   1be08:	push	{r4, r5, r6, lr}
   1be0c:	mcr	15, 0, r0, cr7, cr10, {5}
   1be10:	ldr	r4, [pc, #92]	; 1be74 <g_strcmp0@plt+0x6ca8>
   1be14:	ldr	r5, [r4, #384]	; 0x180
   1be18:	mcr	15, 0, r0, cr7, cr10, {5}
   1be1c:	cmp	r5, #0
   1be20:	beq	1be2c <g_strcmp0@plt+0x6c60>
   1be24:	ldr	r0, [r4, #384]	; 0x180
   1be28:	pop	{r4, r5, r6, pc}
   1be2c:	add	r0, r4, #384	; 0x180
   1be30:	bl	14a28 <g_once_init_enter@plt>
   1be34:	cmp	r0, #0
   1be38:	beq	1be24 <g_strcmp0@plt+0x6c58>
   1be3c:	bl	1b3e0 <g_strcmp0@plt+0x6214>
   1be40:	mov	r3, r5
   1be44:	ldr	r2, [pc, #44]	; 1be78 <g_strcmp0@plt+0x6cac>
   1be48:	ldr	r1, [pc, #44]	; 1be7c <g_strcmp0@plt+0x6cb0>
   1be4c:	bl	14428 <g_type_register_static@plt>
   1be50:	mov	r1, #8
   1be54:	mov	r5, r0
   1be58:	bl	14c08 <g_type_add_instance_private@plt>
   1be5c:	mov	r1, r5
   1be60:	str	r0, [r4, #12]
   1be64:	add	r0, r4, #384	; 0x180
   1be68:	bl	14ed8 <g_once_init_leave@plt>
   1be6c:	ldr	r0, [r4, #384]	; 0x180
   1be70:	pop	{r4, r5, r6, pc}
   1be74:	ldrdeq	ip, [r4], -r8
   1be78:	andeq	r4, r3, r0, ror #24
   1be7c:	strdeq	r5, [r3], -r4
   1be80:	push	{r4, lr}
   1be84:	bl	1be08 <g_strcmp0@plt+0x6c3c>
   1be88:	pop	{r4, lr}
   1be8c:	b	1bdd8 <g_strcmp0@plt+0x6c0c>
   1be90:	push	{r4, lr}
   1be94:	bl	1b350 <g_strcmp0@plt+0x6184>
   1be98:	ldr	r3, [r0]
   1be9c:	mov	r4, r0
   1bea0:	ldr	r3, [r3, #68]	; 0x44
   1bea4:	blx	r3
   1bea8:	ldr	r3, [r4]
   1beac:	mov	r0, r4
   1beb0:	ldr	r3, [r3, #72]	; 0x48
   1beb4:	blx	r3
   1beb8:	mov	r0, r4
   1bebc:	pop	{r4, pc}
   1bec0:	push	{r4, r5, r6, lr}
   1bec4:	mcr	15, 0, r0, cr7, cr10, {5}
   1bec8:	ldr	r4, [pc, #92]	; 1bf2c <g_strcmp0@plt+0x6d60>
   1becc:	ldr	r5, [r4, #388]	; 0x184
   1bed0:	mcr	15, 0, r0, cr7, cr10, {5}
   1bed4:	cmp	r5, #0
   1bed8:	beq	1bee4 <g_strcmp0@plt+0x6d18>
   1bedc:	ldr	r0, [r4, #388]	; 0x184
   1bee0:	pop	{r4, r5, r6, pc}
   1bee4:	add	r0, r4, #388	; 0x184
   1bee8:	bl	14a28 <g_once_init_enter@plt>
   1beec:	cmp	r0, #0
   1bef0:	beq	1bedc <g_strcmp0@plt+0x6d10>
   1bef4:	bl	1b3e0 <g_strcmp0@plt+0x6214>
   1bef8:	mov	r3, r5
   1befc:	ldr	r2, [pc, #44]	; 1bf30 <g_strcmp0@plt+0x6d64>
   1bf00:	ldr	r1, [pc, #44]	; 1bf34 <g_strcmp0@plt+0x6d68>
   1bf04:	bl	14428 <g_type_register_static@plt>
   1bf08:	mov	r1, #12
   1bf0c:	mov	r5, r0
   1bf10:	bl	14c08 <g_type_add_instance_private@plt>
   1bf14:	mov	r1, r5
   1bf18:	str	r0, [r4, #16]
   1bf1c:	add	r0, r4, #388	; 0x184
   1bf20:	bl	14ed8 <g_once_init_leave@plt>
   1bf24:	ldr	r0, [r4, #388]	; 0x184
   1bf28:	pop	{r4, r5, r6, pc}
   1bf2c:	ldrdeq	ip, [r4], -r8
   1bf30:	andeq	r4, r3, r4, lsl #25
   1bf34:	andeq	r5, r3, r0, lsl r8
   1bf38:	push	{r4, lr}
   1bf3c:	bl	1bec0 <g_strcmp0@plt+0x6cf4>
   1bf40:	pop	{r4, lr}
   1bf44:	b	1be90 <g_strcmp0@plt+0x6cc4>
   1bf48:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bf4c:	mov	r4, r0
   1bf50:	ldr	r6, [pc, #1172]	; 1c3ec <g_strcmp0@plt+0x7220>
   1bf54:	ldr	r2, [pc, #1172]	; 1c3f0 <g_strcmp0@plt+0x7224>
   1bf58:	ldr	r1, [pc, #1172]	; 1c3f4 <g_strcmp0@plt+0x7228>
   1bf5c:	ldr	r3, [pc, #1172]	; 1c3f8 <g_strcmp0@plt+0x722c>
   1bf60:	ldr	r0, [r6]
   1bf64:	bl	2a300 <g_strcmp0@plt+0x15134>
   1bf68:	ldr	r3, [r4, #24]
   1bf6c:	mov	r5, r0
   1bf70:	ldr	r0, [r3]
   1bf74:	bl	14bd8 <g_free@plt>
   1bf78:	ldr	r2, [r4, #24]
   1bf7c:	ldr	r0, [r6]
   1bf80:	ldr	r3, [pc, #1140]	; 1c3fc <g_strcmp0@plt+0x7230>
   1bf84:	str	r5, [r2]
   1bf88:	ldr	r1, [pc, #1124]	; 1c3f4 <g_strcmp0@plt+0x7228>
   1bf8c:	ldr	r2, [pc, #1116]	; 1c3f0 <g_strcmp0@plt+0x7224>
   1bf90:	bl	2a300 <g_strcmp0@plt+0x15134>
   1bf94:	ldr	r3, [r4, #24]
   1bf98:	mov	r5, r0
   1bf9c:	ldr	r0, [r3, #4]
   1bfa0:	bl	14bd8 <g_free@plt>
   1bfa4:	ldr	r3, [r4, #24]
   1bfa8:	ldr	r0, [r3]
   1bfac:	str	r5, [r3, #4]
   1bfb0:	cmp	r0, #0
   1bfb4:	ldr	r5, [pc, #1092]	; 1c400 <g_strcmp0@plt+0x7234>
   1bfb8:	beq	1c17c <g_strcmp0@plt+0x6fb0>
   1bfbc:	bl	14bcc <g_quark_from_string@plt>
   1bfc0:	mov	r7, r0
   1bfc4:	ldr	r0, [r5, #392]	; 0x188
   1bfc8:	cmp	r0, #0
   1bfcc:	beq	1c164 <g_strcmp0@plt+0x6f98>
   1bfd0:	cmp	r0, r7
   1bfd4:	beq	1c064 <g_strcmp0@plt+0x6e98>
   1bfd8:	ldr	r0, [r5, #408]	; 0x198
   1bfdc:	cmp	r0, #0
   1bfe0:	beq	1c194 <g_strcmp0@plt+0x6fc8>
   1bfe4:	ldr	r3, [r4, #24]
   1bfe8:	cmp	r0, r7
   1bfec:	ldr	r0, [r3]
   1bff0:	beq	1c1b0 <g_strcmp0@plt+0x6fe4>
   1bff4:	mov	r2, #0
   1bff8:	ldr	r1, [pc, #1028]	; 1c404 <g_strcmp0@plt+0x7238>
   1bffc:	bl	14530 <g_strsplit_set@plt>
   1c000:	subs	r6, r0, #0
   1c004:	moveq	r7, r6
   1c008:	beq	1c014 <g_strcmp0@plt+0x6e48>
   1c00c:	bl	183dc <g_strcmp0@plt+0x3210>
   1c010:	mov	r7, r0
   1c014:	ldr	r1, [r6]
   1c018:	mov	r0, r4
   1c01c:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1c020:	mov	r1, r6
   1c024:	mov	r0, r4
   1c028:	mov	r2, r7
   1c02c:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1c030:	mov	r1, r7
   1c034:	mov	r0, r6
   1c038:	bl	189bc <g_strcmp0@plt+0x37f0>
   1c03c:	ldr	r3, [r4, #12]
   1c040:	ldr	r2, [r3, #16]
   1c044:	cmp	r2, #1
   1c048:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c04c:	mov	r2, #1
   1c050:	ldr	r1, [r5, #184]	; 0xb8
   1c054:	mov	r0, r4
   1c058:	str	r2, [r3, #16]
   1c05c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c060:	b	14b78 <g_object_notify_by_pspec@plt>
   1c064:	ldr	r3, [pc, #924]	; 1c408 <g_strcmp0@plt+0x723c>
   1c068:	ldr	r2, [pc, #924]	; 1c40c <g_strcmp0@plt+0x7240>
   1c06c:	ldr	r1, [pc, #896]	; 1c3f4 <g_strcmp0@plt+0x7228>
   1c070:	ldr	r0, [r6]
   1c074:	bl	2a300 <g_strcmp0@plt+0x15134>
   1c078:	ldr	r3, [pc, #912]	; 1c410 <g_strcmp0@plt+0x7244>
   1c07c:	ldr	r2, [pc, #904]	; 1c40c <g_strcmp0@plt+0x7240>
   1c080:	ldr	r1, [pc, #876]	; 1c3f4 <g_strcmp0@plt+0x7228>
   1c084:	ldr	r7, [pc, #904]	; 1c414 <g_strcmp0@plt+0x7248>
   1c088:	mov	r9, r0
   1c08c:	ldr	r0, [r6]
   1c090:	bl	2a300 <g_strcmp0@plt+0x15134>
   1c094:	ldr	r3, [r7]
   1c098:	cmp	r3, #0
   1c09c:	mov	r8, r0
   1c0a0:	beq	1c0e8 <g_strcmp0@plt+0x6f1c>
   1c0a4:	ldr	r2, [pc, #876]	; 1c418 <g_strcmp0@plt+0x724c>
   1c0a8:	mov	r1, #32
   1c0ac:	mov	r0, #0
   1c0b0:	bl	14668 <g_log@plt>
   1c0b4:	bl	1bec0 <g_strcmp0@plt+0x6cf4>
   1c0b8:	bl	1be90 <g_strcmp0@plt+0x6cc4>
   1c0bc:	subs	sl, r0, #0
   1c0c0:	beq	1c34c <g_strcmp0@plt+0x7180>
   1c0c4:	bl	14404 <g_object_ref@plt>
   1c0c8:	mov	fp, r0
   1c0cc:	ldr	r0, [r7]
   1c0d0:	cmp	r0, #0
   1c0d4:	beq	1c0dc <g_strcmp0@plt+0x6f10>
   1c0d8:	bl	14e90 <g_object_unref@plt>
   1c0dc:	mov	r0, sl
   1c0e0:	str	fp, [r7]
   1c0e4:	bl	14e90 <g_object_unref@plt>
   1c0e8:	ldr	r3, [pc, #776]	; 1c3f8 <g_strcmp0@plt+0x722c>
   1c0ec:	ldr	r2, [pc, #792]	; 1c40c <g_strcmp0@plt+0x7240>
   1c0f0:	ldr	r1, [pc, #764]	; 1c3f4 <g_strcmp0@plt+0x7228>
   1c0f4:	ldr	r0, [r6]
   1c0f8:	bl	2a300 <g_strcmp0@plt+0x15134>
   1c0fc:	subs	sl, r0, #0
   1c100:	beq	1c21c <g_strcmp0@plt+0x7050>
   1c104:	bl	14bcc <g_quark_from_string@plt>
   1c108:	mov	r7, r0
   1c10c:	mov	r0, sl
   1c110:	bl	14bd8 <g_free@plt>
   1c114:	ldr	r0, [r5, #396]	; 0x18c
   1c118:	cmp	r0, #0
   1c11c:	beq	1c24c <g_strcmp0@plt+0x7080>
   1c120:	cmp	r0, r7
   1c124:	beq	1c26c <g_strcmp0@plt+0x70a0>
   1c128:	ldr	r0, [r5, #400]	; 0x190
   1c12c:	cmp	r0, #0
   1c130:	beq	1c23c <g_strcmp0@plt+0x7070>
   1c134:	cmp	r0, r7
   1c138:	beq	1c310 <g_strcmp0@plt+0x7144>
   1c13c:	ldr	r0, [r5, #404]	; 0x194
   1c140:	cmp	r0, #0
   1c144:	beq	1c25c <g_strcmp0@plt+0x7090>
   1c148:	cmp	r0, r7
   1c14c:	beq	1c364 <g_strcmp0@plt+0x7198>
   1c150:	mov	r0, r8
   1c154:	bl	14bd8 <g_free@plt>
   1c158:	mov	r0, r9
   1c15c:	bl	14bd8 <g_free@plt>
   1c160:	b	1c03c <g_strcmp0@plt+0x6e70>
   1c164:	ldr	r0, [pc, #688]	; 1c41c <g_strcmp0@plt+0x7250>
   1c168:	bl	14d64 <g_quark_from_static_string@plt>
   1c16c:	cmp	r0, r7
   1c170:	str	r0, [r5, #392]	; 0x188
   1c174:	bne	1bfd8 <g_strcmp0@plt+0x6e0c>
   1c178:	b	1c064 <g_strcmp0@plt+0x6e98>
   1c17c:	ldr	r7, [r5, #392]	; 0x188
   1c180:	cmp	r7, #0
   1c184:	beq	1c164 <g_strcmp0@plt+0x6f98>
   1c188:	ldr	r7, [r5, #408]	; 0x198
   1c18c:	cmp	r7, #0
   1c190:	bne	1bff4 <g_strcmp0@plt+0x6e28>
   1c194:	ldr	r0, [pc, #644]	; 1c420 <g_strcmp0@plt+0x7254>
   1c198:	bl	14d64 <g_quark_from_static_string@plt>
   1c19c:	ldr	r3, [r4, #24]
   1c1a0:	cmp	r0, r7
   1c1a4:	str	r0, [r5, #408]	; 0x198
   1c1a8:	ldr	r0, [r3]
   1c1ac:	bne	1bff4 <g_strcmp0@plt+0x6e28>
   1c1b0:	mov	r1, r0
   1c1b4:	mov	r0, r4
   1c1b8:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1c1bc:	ldr	r3, [r4, #24]
   1c1c0:	mov	r2, #0
   1c1c4:	ldr	r0, [pc, #600]	; 1c424 <g_strcmp0@plt+0x7258>
   1c1c8:	ldr	r1, [r3, #4]
   1c1cc:	bl	14dc4 <g_strconcat@plt>
   1c1d0:	mov	r2, #0
   1c1d4:	ldr	r1, [pc, #552]	; 1c404 <g_strcmp0@plt+0x7238>
   1c1d8:	mov	r8, r0
   1c1dc:	bl	14530 <g_strsplit_set@plt>
   1c1e0:	subs	r6, r0, #0
   1c1e4:	moveq	r7, r6
   1c1e8:	beq	1c1f4 <g_strcmp0@plt+0x7028>
   1c1ec:	bl	183dc <g_strcmp0@plt+0x3210>
   1c1f0:	mov	r7, r0
   1c1f4:	mov	r2, r7
   1c1f8:	mov	r1, r6
   1c1fc:	mov	r0, r4
   1c200:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1c204:	mov	r0, r6
   1c208:	mov	r1, r7
   1c20c:	bl	189bc <g_strcmp0@plt+0x37f0>
   1c210:	mov	r0, r8
   1c214:	bl	14bd8 <g_free@plt>
   1c218:	b	1c03c <g_strcmp0@plt+0x6e70>
   1c21c:	bl	14bd8 <g_free@plt>
   1c220:	ldr	r7, [r5, #396]	; 0x18c
   1c224:	cmp	r7, #0
   1c228:	beq	1c24c <g_strcmp0@plt+0x7080>
   1c22c:	ldr	r7, [r5, #400]	; 0x190
   1c230:	cmp	r7, #0
   1c234:	movne	r7, sl
   1c238:	bne	1c13c <g_strcmp0@plt+0x6f70>
   1c23c:	ldr	r0, [pc, #484]	; 1c428 <g_strcmp0@plt+0x725c>
   1c240:	bl	14d64 <g_quark_from_static_string@plt>
   1c244:	str	r0, [r5, #400]	; 0x190
   1c248:	b	1c134 <g_strcmp0@plt+0x6f68>
   1c24c:	ldr	r0, [pc, #472]	; 1c42c <g_strcmp0@plt+0x7260>
   1c250:	bl	14d64 <g_quark_from_static_string@plt>
   1c254:	str	r0, [r5, #396]	; 0x18c
   1c258:	b	1c120 <g_strcmp0@plt+0x6f54>
   1c25c:	ldr	r0, [pc, #460]	; 1c430 <g_strcmp0@plt+0x7264>
   1c260:	bl	14d64 <g_quark_from_static_string@plt>
   1c264:	str	r0, [r5, #404]	; 0x194
   1c268:	b	1c148 <g_strcmp0@plt+0x6f7c>
   1c26c:	ldr	r2, [pc, #408]	; 1c40c <g_strcmp0@plt+0x7240>
   1c270:	ldr	r3, [pc, #384]	; 1c3f8 <g_strcmp0@plt+0x722c>
   1c274:	ldr	r0, [r6]
   1c278:	ldr	r1, [pc, #372]	; 1c3f4 <g_strcmp0@plt+0x7228>
   1c27c:	bl	2a300 <g_strcmp0@plt+0x15134>
   1c280:	mov	r1, r0
   1c284:	mov	r6, r0
   1c288:	mov	r0, r4
   1c28c:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1c290:	mov	r0, r6
   1c294:	bl	14bd8 <g_free@plt>
   1c298:	ldr	r0, [pc, #404]	; 1c434 <g_strcmp0@plt+0x7268>
   1c29c:	mov	r2, #0
   1c2a0:	mov	r1, r9
   1c2a4:	bl	14dc4 <g_strconcat@plt>
   1c2a8:	mov	r2, #0
   1c2ac:	mov	r1, r8
   1c2b0:	mov	r6, r0
   1c2b4:	bl	14dc4 <g_strconcat@plt>
   1c2b8:	mov	r7, r0
   1c2bc:	mov	r0, r6
   1c2c0:	bl	14bd8 <g_free@plt>
   1c2c4:	mov	r0, r7
   1c2c8:	mov	r2, #0
   1c2cc:	ldr	r1, [pc, #304]	; 1c404 <g_strcmp0@plt+0x7238>
   1c2d0:	bl	14530 <g_strsplit_set@plt>
   1c2d4:	subs	r6, r0, #0
   1c2d8:	moveq	sl, r6
   1c2dc:	beq	1c2e8 <g_strcmp0@plt+0x711c>
   1c2e0:	bl	183dc <g_strcmp0@plt+0x3210>
   1c2e4:	mov	sl, r0
   1c2e8:	mov	r2, sl
   1c2ec:	mov	r1, r6
   1c2f0:	mov	r0, r4
   1c2f4:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1c2f8:	mov	r0, r6
   1c2fc:	mov	r1, sl
   1c300:	bl	189bc <g_strcmp0@plt+0x37f0>
   1c304:	mov	r0, r7
   1c308:	bl	14bd8 <g_free@plt>
   1c30c:	b	1c150 <g_strcmp0@plt+0x6f84>
   1c310:	ldr	r2, [pc, #244]	; 1c40c <g_strcmp0@plt+0x7240>
   1c314:	ldr	r3, [pc, #220]	; 1c3f8 <g_strcmp0@plt+0x722c>
   1c318:	ldr	r0, [r6]
   1c31c:	ldr	r1, [pc, #208]	; 1c3f4 <g_strcmp0@plt+0x7228>
   1c320:	bl	2a300 <g_strcmp0@plt+0x15134>
   1c324:	mov	r1, r0
   1c328:	mov	r6, r0
   1c32c:	mov	r0, r4
   1c330:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1c334:	mov	r0, r6
   1c338:	bl	14bd8 <g_free@plt>
   1c33c:	mov	r2, #0
   1c340:	mov	r1, r9
   1c344:	ldr	r0, [pc, #236]	; 1c438 <g_strcmp0@plt+0x726c>
   1c348:	b	1c2a4 <g_strcmp0@plt+0x70d8>
   1c34c:	ldr	r0, [r7]
   1c350:	cmp	r0, #0
   1c354:	beq	1c0e8 <g_strcmp0@plt+0x6f1c>
   1c358:	bl	14e90 <g_object_unref@plt>
   1c35c:	str	sl, [r7]
   1c360:	b	1c0e8 <g_strcmp0@plt+0x6f1c>
   1c364:	ldr	r3, [pc, #140]	; 1c3f8 <g_strcmp0@plt+0x722c>
   1c368:	ldr	r2, [pc, #156]	; 1c40c <g_strcmp0@plt+0x7240>
   1c36c:	ldr	r0, [r6]
   1c370:	ldr	r1, [pc, #124]	; 1c3f4 <g_strcmp0@plt+0x7228>
   1c374:	bl	2a300 <g_strcmp0@plt+0x15134>
   1c378:	mov	r1, r0
   1c37c:	mov	r6, r0
   1c380:	mov	r0, r4
   1c384:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1c388:	mov	r0, r6
   1c38c:	bl	14bd8 <g_free@plt>
   1c390:	mov	r2, #0
   1c394:	mov	r1, r8
   1c398:	ldr	r0, [pc, #156]	; 1c43c <g_strcmp0@plt+0x7270>
   1c39c:	bl	14dc4 <g_strconcat@plt>
   1c3a0:	mov	r2, #0
   1c3a4:	ldr	r1, [pc, #88]	; 1c404 <g_strcmp0@plt+0x7238>
   1c3a8:	mov	sl, r0
   1c3ac:	bl	14530 <g_strsplit_set@plt>
   1c3b0:	subs	r6, r0, #0
   1c3b4:	moveq	r7, r6
   1c3b8:	beq	1c3c4 <g_strcmp0@plt+0x71f8>
   1c3bc:	bl	183dc <g_strcmp0@plt+0x3210>
   1c3c0:	mov	r7, r0
   1c3c4:	mov	r2, r7
   1c3c8:	mov	r1, r6
   1c3cc:	mov	r0, r4
   1c3d0:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1c3d4:	mov	r0, r6
   1c3d8:	mov	r1, r7
   1c3dc:	bl	189bc <g_strcmp0@plt+0x37f0>
   1c3e0:	mov	r0, sl
   1c3e4:	bl	14bd8 <g_free@plt>
   1c3e8:	b	1c150 <g_strcmp0@plt+0x6f84>
   1c3ec:	andeq	ip, r4, r4, asr #32
   1c3f0:			; <UNDEFINED> instruction: 0x000383b4
   1c3f4:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1c3f8:	ldrdeq	r4, [r3], -ip
   1c3fc:	andeq	r5, r3, r8, lsr #16
   1c400:	ldrdeq	ip, [r4], -r8
   1c404:	andeq	r5, r3, ip, lsr #4
   1c408:	andeq	r4, r3, r4, lsl #14
   1c40c:	ldrdeq	r5, [r3], -r8
   1c410:	andeq	r5, r3, r8, ror #3
   1c414:	ldrdeq	ip, [r4], -r4
   1c418:	andeq	r5, r3, r0, asr #16
   1c41c:	andeq	r5, r3, r4, lsr r8
   1c420:	ldrdeq	r5, [r3], -r8
   1c424:	ldrdeq	r5, [r3], -ip
   1c428:	andeq	r5, r3, ip, lsl #4
   1c42c:	strdeq	r5, [r3], -r0
   1c430:	andeq	r5, r3, r0, lsr r2
   1c434:	muleq	r3, r8, r8
   1c438:			; <UNDEFINED> instruction: 0x000358b8
   1c43c:	andeq	r5, r3, ip, lsr r2
   1c440:	push	{r4, lr}
   1c444:	bl	1b350 <g_strcmp0@plt+0x6184>
   1c448:	ldr	r3, [r0]
   1c44c:	mov	r4, r0
   1c450:	ldr	r3, [r3, #68]	; 0x44
   1c454:	blx	r3
   1c458:	ldr	r3, [r4]
   1c45c:	mov	r0, r4
   1c460:	ldr	r3, [r3, #72]	; 0x48
   1c464:	blx	r3
   1c468:	mov	r0, r4
   1c46c:	pop	{r4, pc}
   1c470:	ldr	r3, [r0, #12]
   1c474:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c478:	mov	r5, r0
   1c47c:	ldmib	r3, {r4, r6}
   1c480:	cmp	r4, #0
   1c484:	beq	1c49c <g_strcmp0@plt+0x72d0>
   1c488:	mov	r0, r4
   1c48c:	mov	r1, r6
   1c490:	bl	17878 <g_strcmp0@plt+0x26ac>
   1c494:	ldr	r3, [r5, #12]
   1c498:	mov	r4, r0
   1c49c:	ldr	r0, [r3]
   1c4a0:	ldr	r7, [pc, #196]	; 1c56c <g_strcmp0@plt+0x73a0>
   1c4a4:	cmp	r0, #0
   1c4a8:	beq	1c548 <g_strcmp0@plt+0x737c>
   1c4ac:	bl	14bcc <g_quark_from_string@plt>
   1c4b0:	mov	r8, r0
   1c4b4:	ldr	r0, [r7, #412]	; 0x19c
   1c4b8:	cmp	r0, #0
   1c4bc:	beq	1c554 <g_strcmp0@plt+0x7388>
   1c4c0:	cmp	r0, r8
   1c4c4:	beq	1c4f4 <g_strcmp0@plt+0x7328>
   1c4c8:	mov	r0, r5
   1c4cc:	mov	r1, #0
   1c4d0:	bl	18aa0 <g_strcmp0@plt+0x38d4>
   1c4d4:	mov	r1, r4
   1c4d8:	mov	r0, r5
   1c4dc:	mov	r2, r6
   1c4e0:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1c4e4:	mov	r1, r6
   1c4e8:	mov	r0, r4
   1c4ec:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c4f0:	b	189bc <g_strcmp0@plt+0x37f0>
   1c4f4:	ldr	r0, [pc, #116]	; 1c570 <g_strcmp0@plt+0x73a4>
   1c4f8:	bl	147e8 <g_strdup@plt>
   1c4fc:	mov	r2, #0
   1c500:	ldr	r1, [pc, #108]	; 1c574 <g_strcmp0@plt+0x73a8>
   1c504:	mov	r9, r0
   1c508:	bl	14530 <g_strsplit_set@plt>
   1c50c:	subs	r7, r0, #0
   1c510:	moveq	r8, r7
   1c514:	beq	1c520 <g_strcmp0@plt+0x7354>
   1c518:	bl	183dc <g_strcmp0@plt+0x3210>
   1c51c:	mov	r8, r0
   1c520:	mov	r2, r8
   1c524:	mov	r1, r7
   1c528:	mov	r0, r5
   1c52c:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1c530:	mov	r0, r7
   1c534:	mov	r1, r8
   1c538:	bl	189bc <g_strcmp0@plt+0x37f0>
   1c53c:	mov	r0, r9
   1c540:	bl	14bd8 <g_free@plt>
   1c544:	b	1c4c8 <g_strcmp0@plt+0x72fc>
   1c548:	ldr	r8, [r7, #412]	; 0x19c
   1c54c:	cmp	r8, #0
   1c550:	bne	1c4c8 <g_strcmp0@plt+0x72fc>
   1c554:	ldr	r0, [pc, #28]	; 1c578 <g_strcmp0@plt+0x73ac>
   1c558:	bl	14d64 <g_quark_from_static_string@plt>
   1c55c:	cmp	r0, r8
   1c560:	str	r0, [r7, #412]	; 0x19c
   1c564:	bne	1c4c8 <g_strcmp0@plt+0x72fc>
   1c568:	b	1c4f4 <g_strcmp0@plt+0x7328>
   1c56c:	ldrdeq	ip, [r4], -r8
   1c570:	andeq	r5, r3, ip, ror #17
   1c574:	andeq	r5, r3, ip, lsr #4
   1c578:	strdeq	r5, [r3], -r0
   1c57c:	push	{r4, r5, r6, lr}
   1c580:	mcr	15, 0, r0, cr7, cr10, {5}
   1c584:	ldr	r4, [pc, #92]	; 1c5e8 <g_strcmp0@plt+0x741c>
   1c588:	ldr	r5, [r4, #416]	; 0x1a0
   1c58c:	mcr	15, 0, r0, cr7, cr10, {5}
   1c590:	cmp	r5, #0
   1c594:	beq	1c5a0 <g_strcmp0@plt+0x73d4>
   1c598:	ldr	r0, [r4, #416]	; 0x1a0
   1c59c:	pop	{r4, r5, r6, pc}
   1c5a0:	add	r0, r4, #416	; 0x1a0
   1c5a4:	bl	14a28 <g_once_init_enter@plt>
   1c5a8:	cmp	r0, #0
   1c5ac:	beq	1c598 <g_strcmp0@plt+0x73cc>
   1c5b0:	bl	1b3e0 <g_strcmp0@plt+0x6214>
   1c5b4:	mov	r3, r5
   1c5b8:	ldr	r2, [pc, #44]	; 1c5ec <g_strcmp0@plt+0x7420>
   1c5bc:	ldr	r1, [pc, #44]	; 1c5f0 <g_strcmp0@plt+0x7424>
   1c5c0:	bl	14428 <g_type_register_static@plt>
   1c5c4:	mov	r1, #8
   1c5c8:	mov	r5, r0
   1c5cc:	bl	14c08 <g_type_add_instance_private@plt>
   1c5d0:	mov	r1, r5
   1c5d4:	str	r0, [r4, #20]
   1c5d8:	add	r0, r4, #416	; 0x1a0
   1c5dc:	bl	14ed8 <g_once_init_leave@plt>
   1c5e0:	ldr	r0, [r4, #416]	; 0x1a0
   1c5e4:	pop	{r4, r5, r6, pc}
   1c5e8:	ldrdeq	ip, [r4], -r8
   1c5ec:	andeq	r4, r3, r8, lsr #25
   1c5f0:	andeq	r5, r3, r4, lsl #18
   1c5f4:	push	{r4, lr}
   1c5f8:	bl	1c57c <g_strcmp0@plt+0x73b0>
   1c5fc:	pop	{r4, lr}
   1c600:	b	1c440 <g_strcmp0@plt+0x7274>
   1c604:	push	{r4, lr}
   1c608:	bl	1b350 <g_strcmp0@plt+0x6184>
   1c60c:	ldr	r3, [r0]
   1c610:	mov	r4, r0
   1c614:	ldr	r3, [r3, #68]	; 0x44
   1c618:	blx	r3
   1c61c:	ldr	r3, [r4]
   1c620:	mov	r0, r4
   1c624:	ldr	r3, [r3, #72]	; 0x48
   1c628:	blx	r3
   1c62c:	mov	r0, r4
   1c630:	pop	{r4, pc}
   1c634:	bx	lr
   1c638:	push	{r4, r5, r6, lr}
   1c63c:	mcr	15, 0, r0, cr7, cr10, {5}
   1c640:	ldr	r4, [pc, #92]	; 1c6a4 <g_strcmp0@plt+0x74d8>
   1c644:	ldr	r5, [r4, #420]	; 0x1a4
   1c648:	mcr	15, 0, r0, cr7, cr10, {5}
   1c64c:	cmp	r5, #0
   1c650:	beq	1c65c <g_strcmp0@plt+0x7490>
   1c654:	ldr	r0, [r4, #420]	; 0x1a4
   1c658:	pop	{r4, r5, r6, pc}
   1c65c:	add	r0, r4, #420	; 0x1a4
   1c660:	bl	14a28 <g_once_init_enter@plt>
   1c664:	cmp	r0, #0
   1c668:	beq	1c654 <g_strcmp0@plt+0x7488>
   1c66c:	bl	1b3e0 <g_strcmp0@plt+0x6214>
   1c670:	mov	r3, r5
   1c674:	ldr	r2, [pc, #44]	; 1c6a8 <g_strcmp0@plt+0x74dc>
   1c678:	ldr	r1, [pc, #44]	; 1c6ac <g_strcmp0@plt+0x74e0>
   1c67c:	bl	14428 <g_type_register_static@plt>
   1c680:	mov	r1, #4
   1c684:	mov	r5, r0
   1c688:	bl	14c08 <g_type_add_instance_private@plt>
   1c68c:	mov	r1, r5
   1c690:	str	r0, [r4, #24]
   1c694:	add	r0, r4, #420	; 0x1a4
   1c698:	bl	14ed8 <g_once_init_leave@plt>
   1c69c:	ldr	r0, [r4, #420]	; 0x1a4
   1c6a0:	pop	{r4, r5, r6, pc}
   1c6a4:	ldrdeq	ip, [r4], -r8
   1c6a8:	andeq	r4, r3, ip, asr #25
   1c6ac:	andeq	r5, r3, r8, lsl r9
   1c6b0:	push	{r4, lr}
   1c6b4:	bl	1c638 <g_strcmp0@plt+0x746c>
   1c6b8:	pop	{r4, lr}
   1c6bc:	b	1c604 <g_strcmp0@plt+0x7438>
   1c6c0:	push	{r4, lr}
   1c6c4:	bl	1b350 <g_strcmp0@plt+0x6184>
   1c6c8:	ldr	r3, [r0]
   1c6cc:	mov	r4, r0
   1c6d0:	ldr	r3, [r3, #68]	; 0x44
   1c6d4:	blx	r3
   1c6d8:	ldr	r3, [r4]
   1c6dc:	mov	r0, r4
   1c6e0:	ldr	r3, [r3, #72]	; 0x48
   1c6e4:	blx	r3
   1c6e8:	mov	r0, r4
   1c6ec:	pop	{r4, pc}
   1c6f0:	push	{r4, r5, r6, lr}
   1c6f4:	mcr	15, 0, r0, cr7, cr10, {5}
   1c6f8:	ldr	r4, [pc, #92]	; 1c75c <g_strcmp0@plt+0x7590>
   1c6fc:	ldr	r5, [r4, #424]	; 0x1a8
   1c700:	mcr	15, 0, r0, cr7, cr10, {5}
   1c704:	cmp	r5, #0
   1c708:	beq	1c714 <g_strcmp0@plt+0x7548>
   1c70c:	ldr	r0, [r4, #424]	; 0x1a8
   1c710:	pop	{r4, r5, r6, pc}
   1c714:	add	r0, r4, #424	; 0x1a8
   1c718:	bl	14a28 <g_once_init_enter@plt>
   1c71c:	cmp	r0, #0
   1c720:	beq	1c70c <g_strcmp0@plt+0x7540>
   1c724:	bl	1b3e0 <g_strcmp0@plt+0x6214>
   1c728:	mov	r3, r5
   1c72c:	ldr	r2, [pc, #44]	; 1c760 <g_strcmp0@plt+0x7594>
   1c730:	ldr	r1, [pc, #44]	; 1c764 <g_strcmp0@plt+0x7598>
   1c734:	bl	14428 <g_type_register_static@plt>
   1c738:	mov	r1, #8
   1c73c:	mov	r5, r0
   1c740:	bl	14c08 <g_type_add_instance_private@plt>
   1c744:	mov	r1, r5
   1c748:	str	r0, [r4, #28]
   1c74c:	add	r0, r4, #424	; 0x1a8
   1c750:	bl	14ed8 <g_once_init_leave@plt>
   1c754:	ldr	r0, [r4, #424]	; 0x1a8
   1c758:	pop	{r4, r5, r6, pc}
   1c75c:	ldrdeq	ip, [r4], -r8
   1c760:	strdeq	r4, [r3], -r0
   1c764:	andeq	r5, r3, ip, lsr #18
   1c768:	push	{r4, lr}
   1c76c:	bl	1c6f0 <g_strcmp0@plt+0x7524>
   1c770:	pop	{r4, lr}
   1c774:	b	1c6c0 <g_strcmp0@plt+0x74f4>
   1c778:	push	{r4, lr}
   1c77c:	bl	1b350 <g_strcmp0@plt+0x6184>
   1c780:	ldr	r3, [r0]
   1c784:	mov	r4, r0
   1c788:	ldr	r3, [r3, #68]	; 0x44
   1c78c:	blx	r3
   1c790:	ldr	r3, [r4]
   1c794:	mov	r0, r4
   1c798:	ldr	r3, [r3, #72]	; 0x48
   1c79c:	blx	r3
   1c7a0:	mov	r0, r4
   1c7a4:	pop	{r4, pc}
   1c7a8:	push	{r4, r5, r6, lr}
   1c7ac:	mcr	15, 0, r0, cr7, cr10, {5}
   1c7b0:	ldr	r4, [pc, #92]	; 1c814 <g_strcmp0@plt+0x7648>
   1c7b4:	ldr	r5, [r4, #428]	; 0x1ac
   1c7b8:	mcr	15, 0, r0, cr7, cr10, {5}
   1c7bc:	cmp	r5, #0
   1c7c0:	beq	1c7cc <g_strcmp0@plt+0x7600>
   1c7c4:	ldr	r0, [r4, #428]	; 0x1ac
   1c7c8:	pop	{r4, r5, r6, pc}
   1c7cc:	add	r0, r4, #428	; 0x1ac
   1c7d0:	bl	14a28 <g_once_init_enter@plt>
   1c7d4:	cmp	r0, #0
   1c7d8:	beq	1c7c4 <g_strcmp0@plt+0x75f8>
   1c7dc:	bl	1b3e0 <g_strcmp0@plt+0x6214>
   1c7e0:	mov	r3, r5
   1c7e4:	ldr	r2, [pc, #44]	; 1c818 <g_strcmp0@plt+0x764c>
   1c7e8:	ldr	r1, [pc, #44]	; 1c81c <g_strcmp0@plt+0x7650>
   1c7ec:	bl	14428 <g_type_register_static@plt>
   1c7f0:	mov	r1, #4
   1c7f4:	mov	r5, r0
   1c7f8:	bl	14c08 <g_type_add_instance_private@plt>
   1c7fc:	mov	r1, r5
   1c800:	str	r0, [r4, #32]
   1c804:	add	r0, r4, #428	; 0x1ac
   1c808:	bl	14ed8 <g_once_init_leave@plt>
   1c80c:	ldr	r0, [r4, #428]	; 0x1ac
   1c810:	pop	{r4, r5, r6, pc}
   1c814:	ldrdeq	ip, [r4], -r8
   1c818:	andeq	r4, r3, r4, lsl sp
   1c81c:	andeq	r5, r3, r4, asr #18
   1c820:	push	{r4, lr}
   1c824:	bl	1c7a8 <g_strcmp0@plt+0x75dc>
   1c828:	pop	{r4, lr}
   1c82c:	b	1c778 <g_strcmp0@plt+0x75ac>
   1c830:	push	{r4, lr}
   1c834:	bl	1b350 <g_strcmp0@plt+0x6184>
   1c838:	ldr	r3, [r0]
   1c83c:	mov	r4, r0
   1c840:	ldr	r3, [r3, #68]	; 0x44
   1c844:	blx	r3
   1c848:	ldr	r3, [r4]
   1c84c:	mov	r0, r4
   1c850:	ldr	r3, [r3, #72]	; 0x48
   1c854:	blx	r3
   1c858:	mov	r0, r4
   1c85c:	pop	{r4, pc}
   1c860:	push	{r4, r5, r6, lr}
   1c864:	mcr	15, 0, r0, cr7, cr10, {5}
   1c868:	ldr	r4, [pc, #92]	; 1c8cc <g_strcmp0@plt+0x7700>
   1c86c:	ldr	r5, [r4, #432]	; 0x1b0
   1c870:	mcr	15, 0, r0, cr7, cr10, {5}
   1c874:	cmp	r5, #0
   1c878:	beq	1c884 <g_strcmp0@plt+0x76b8>
   1c87c:	ldr	r0, [r4, #432]	; 0x1b0
   1c880:	pop	{r4, r5, r6, pc}
   1c884:	add	r0, r4, #432	; 0x1b0
   1c888:	bl	14a28 <g_once_init_enter@plt>
   1c88c:	cmp	r0, #0
   1c890:	beq	1c87c <g_strcmp0@plt+0x76b0>
   1c894:	bl	1b3e0 <g_strcmp0@plt+0x6214>
   1c898:	mov	r3, r5
   1c89c:	ldr	r2, [pc, #44]	; 1c8d0 <g_strcmp0@plt+0x7704>
   1c8a0:	ldr	r1, [pc, #44]	; 1c8d4 <g_strcmp0@plt+0x7708>
   1c8a4:	bl	14428 <g_type_register_static@plt>
   1c8a8:	mov	r1, #12
   1c8ac:	mov	r5, r0
   1c8b0:	bl	14c08 <g_type_add_instance_private@plt>
   1c8b4:	mov	r1, r5
   1c8b8:	str	r0, [r4, #36]	; 0x24
   1c8bc:	add	r0, r4, #432	; 0x1b0
   1c8c0:	bl	14ed8 <g_once_init_leave@plt>
   1c8c4:	ldr	r0, [r4, #432]	; 0x1b0
   1c8c8:	pop	{r4, r5, r6, pc}
   1c8cc:	ldrdeq	ip, [r4], -r8
   1c8d0:	andeq	r4, r3, r8, lsr sp
   1c8d4:	andeq	r5, r3, r0, ror #18
   1c8d8:	push	{r4, lr}
   1c8dc:	bl	1c860 <g_strcmp0@plt+0x7694>
   1c8e0:	pop	{r4, lr}
   1c8e4:	b	1c830 <g_strcmp0@plt+0x7664>
   1c8e8:	push	{r4, lr}
   1c8ec:	bl	1b350 <g_strcmp0@plt+0x6184>
   1c8f0:	ldr	r3, [r0]
   1c8f4:	mov	r4, r0
   1c8f8:	ldr	r3, [r3, #68]	; 0x44
   1c8fc:	blx	r3
   1c900:	ldr	r3, [r4]
   1c904:	mov	r0, r4
   1c908:	ldr	r3, [r3, #72]	; 0x48
   1c90c:	blx	r3
   1c910:	mov	r0, r4
   1c914:	pop	{r4, pc}
   1c918:	push	{r4, r5, r6, lr}
   1c91c:	mcr	15, 0, r0, cr7, cr10, {5}
   1c920:	ldr	r4, [pc, #92]	; 1c984 <g_strcmp0@plt+0x77b8>
   1c924:	ldr	r5, [r4, #436]	; 0x1b4
   1c928:	mcr	15, 0, r0, cr7, cr10, {5}
   1c92c:	cmp	r5, #0
   1c930:	beq	1c93c <g_strcmp0@plt+0x7770>
   1c934:	ldr	r0, [r4, #436]	; 0x1b4
   1c938:	pop	{r4, r5, r6, pc}
   1c93c:	add	r0, r4, #436	; 0x1b4
   1c940:	bl	14a28 <g_once_init_enter@plt>
   1c944:	cmp	r0, #0
   1c948:	beq	1c934 <g_strcmp0@plt+0x7768>
   1c94c:	bl	1b3e0 <g_strcmp0@plt+0x6214>
   1c950:	mov	r3, r5
   1c954:	ldr	r2, [pc, #44]	; 1c988 <g_strcmp0@plt+0x77bc>
   1c958:	ldr	r1, [pc, #44]	; 1c98c <g_strcmp0@plt+0x77c0>
   1c95c:	bl	14428 <g_type_register_static@plt>
   1c960:	mov	r1, #4
   1c964:	mov	r5, r0
   1c968:	bl	14c08 <g_type_add_instance_private@plt>
   1c96c:	mov	r1, r5
   1c970:	str	r0, [r4, #40]	; 0x28
   1c974:	add	r0, r4, #436	; 0x1b4
   1c978:	bl	14ed8 <g_once_init_leave@plt>
   1c97c:	ldr	r0, [r4, #436]	; 0x1b4
   1c980:	pop	{r4, r5, r6, pc}
   1c984:	ldrdeq	ip, [r4], -r8
   1c988:	andeq	r4, r3, ip, asr sp
   1c98c:	andeq	r5, r3, r8, ror r9
   1c990:	push	{r4, lr}
   1c994:	bl	1c918 <g_strcmp0@plt+0x774c>
   1c998:	pop	{r4, lr}
   1c99c:	b	1c8e8 <g_strcmp0@plt+0x771c>
   1c9a0:	push	{r4, lr}
   1c9a4:	bl	1b350 <g_strcmp0@plt+0x6184>
   1c9a8:	ldr	r3, [r0]
   1c9ac:	mov	r4, r0
   1c9b0:	ldr	r3, [r3, #68]	; 0x44
   1c9b4:	blx	r3
   1c9b8:	ldr	r3, [r4]
   1c9bc:	mov	r0, r4
   1c9c0:	ldr	r3, [r3, #72]	; 0x48
   1c9c4:	blx	r3
   1c9c8:	mov	r0, r4
   1c9cc:	pop	{r4, pc}
   1c9d0:	ldr	r3, [r0, #24]
   1c9d4:	push	{r4, r5, r6, lr}
   1c9d8:	mov	r4, r0
   1c9dc:	ldr	r0, [r3]
   1c9e0:	ldr	r5, [pc, #112]	; 1ca58 <g_strcmp0@plt+0x788c>
   1c9e4:	cmp	r0, #0
   1c9e8:	beq	1ca34 <g_strcmp0@plt+0x7868>
   1c9ec:	bl	14bcc <g_quark_from_string@plt>
   1c9f0:	mov	r6, r0
   1c9f4:	ldr	r0, [r5, #440]	; 0x1b8
   1c9f8:	cmp	r0, #0
   1c9fc:	beq	1ca40 <g_strcmp0@plt+0x7874>
   1ca00:	cmp	r0, r6
   1ca04:	beq	1ca18 <g_strcmp0@plt+0x784c>
   1ca08:	mov	r0, r4
   1ca0c:	mov	r1, #0
   1ca10:	pop	{r4, r5, r6, lr}
   1ca14:	b	18aa0 <g_strcmp0@plt+0x38d4>
   1ca18:	ldr	r0, [pc, #60]	; 1ca5c <g_strcmp0@plt+0x7890>
   1ca1c:	bl	147e8 <g_strdup@plt>
   1ca20:	mov	r4, r0
   1ca24:	bl	29704 <g_strcmp0@plt+0x14538>
   1ca28:	mov	r0, r4
   1ca2c:	pop	{r4, r5, r6, lr}
   1ca30:	b	14bd8 <g_free@plt>
   1ca34:	ldr	r6, [r5, #440]	; 0x1b8
   1ca38:	cmp	r6, #0
   1ca3c:	bne	1ca08 <g_strcmp0@plt+0x783c>
   1ca40:	ldr	r0, [pc, #24]	; 1ca60 <g_strcmp0@plt+0x7894>
   1ca44:	bl	14d64 <g_quark_from_static_string@plt>
   1ca48:	cmp	r0, r6
   1ca4c:	str	r0, [r5, #440]	; 0x1b8
   1ca50:	bne	1ca08 <g_strcmp0@plt+0x783c>
   1ca54:	b	1ca18 <g_strcmp0@plt+0x784c>
   1ca58:	ldrdeq	ip, [r4], -r8
   1ca5c:	andeq	r5, r3, r0, lsr #19
   1ca60:	muleq	r3, r8, r9
   1ca64:	push	{r4, r5, r6, lr}
   1ca68:	mcr	15, 0, r0, cr7, cr10, {5}
   1ca6c:	ldr	r4, [pc, #92]	; 1cad0 <g_strcmp0@plt+0x7904>
   1ca70:	ldr	r5, [r4, #444]	; 0x1bc
   1ca74:	mcr	15, 0, r0, cr7, cr10, {5}
   1ca78:	cmp	r5, #0
   1ca7c:	beq	1ca88 <g_strcmp0@plt+0x78bc>
   1ca80:	ldr	r0, [r4, #444]	; 0x1bc
   1ca84:	pop	{r4, r5, r6, pc}
   1ca88:	add	r0, r4, #444	; 0x1bc
   1ca8c:	bl	14a28 <g_once_init_enter@plt>
   1ca90:	cmp	r0, #0
   1ca94:	beq	1ca80 <g_strcmp0@plt+0x78b4>
   1ca98:	bl	1b3e0 <g_strcmp0@plt+0x6214>
   1ca9c:	mov	r3, r5
   1caa0:	ldr	r2, [pc, #44]	; 1cad4 <g_strcmp0@plt+0x7908>
   1caa4:	ldr	r1, [pc, #44]	; 1cad8 <g_strcmp0@plt+0x790c>
   1caa8:	bl	14428 <g_type_register_static@plt>
   1caac:	mov	r1, #4
   1cab0:	mov	r5, r0
   1cab4:	bl	14c08 <g_type_add_instance_private@plt>
   1cab8:	mov	r1, r5
   1cabc:	str	r0, [r4, #44]	; 0x2c
   1cac0:	add	r0, r4, #444	; 0x1bc
   1cac4:	bl	14ed8 <g_once_init_leave@plt>
   1cac8:	ldr	r0, [r4, #444]	; 0x1bc
   1cacc:	pop	{r4, r5, r6, pc}
   1cad0:	ldrdeq	ip, [r4], -r8
   1cad4:	andeq	r4, r3, r0, lsl #27
   1cad8:			; <UNDEFINED> instruction: 0x000359b4
   1cadc:	push	{r4, lr}
   1cae0:	bl	1ca64 <g_strcmp0@plt+0x7898>
   1cae4:	pop	{r4, lr}
   1cae8:	b	1c9a0 <g_strcmp0@plt+0x77d4>
   1caec:	push	{r4, lr}
   1caf0:	bl	1b350 <g_strcmp0@plt+0x6184>
   1caf4:	ldr	r3, [r0]
   1caf8:	mov	r4, r0
   1cafc:	ldr	r3, [r3, #68]	; 0x44
   1cb00:	blx	r3
   1cb04:	ldr	r3, [r4]
   1cb08:	mov	r0, r4
   1cb0c:	ldr	r3, [r3, #72]	; 0x48
   1cb10:	blx	r3
   1cb14:	mov	r0, r4
   1cb18:	pop	{r4, pc}
   1cb1c:	push	{r4, r5, r6, lr}
   1cb20:	mov	r4, r1
   1cb24:	mov	r5, r0
   1cb28:	ldr	r1, [pc, #28]	; 1cb4c <g_strcmp0@plt+0x7980>
   1cb2c:	mov	r0, r4
   1cb30:	bl	151cc <g_strcmp0@plt>
   1cb34:	cmp	r0, #0
   1cb38:	movne	r1, r4
   1cb3c:	mov	r0, r5
   1cb40:	moveq	r1, #0
   1cb44:	pop	{r4, r5, r6, lr}
   1cb48:	b	18aa0 <g_strcmp0@plt+0x38d4>
   1cb4c:	andeq	sl, r3, ip, ror #18
   1cb50:	push	{r4, r5, r6, lr}
   1cb54:	mcr	15, 0, r0, cr7, cr10, {5}
   1cb58:	ldr	r4, [pc, #92]	; 1cbbc <g_strcmp0@plt+0x79f0>
   1cb5c:	ldr	r5, [r4, #448]	; 0x1c0
   1cb60:	mcr	15, 0, r0, cr7, cr10, {5}
   1cb64:	cmp	r5, #0
   1cb68:	beq	1cb74 <g_strcmp0@plt+0x79a8>
   1cb6c:	ldr	r0, [r4, #448]	; 0x1c0
   1cb70:	pop	{r4, r5, r6, pc}
   1cb74:	add	r0, r4, #448	; 0x1c0
   1cb78:	bl	14a28 <g_once_init_enter@plt>
   1cb7c:	cmp	r0, #0
   1cb80:	beq	1cb6c <g_strcmp0@plt+0x79a0>
   1cb84:	bl	1b3e0 <g_strcmp0@plt+0x6214>
   1cb88:	mov	r3, r5
   1cb8c:	ldr	r2, [pc, #44]	; 1cbc0 <g_strcmp0@plt+0x79f4>
   1cb90:	ldr	r1, [pc, #44]	; 1cbc4 <g_strcmp0@plt+0x79f8>
   1cb94:	bl	14428 <g_type_register_static@plt>
   1cb98:	mov	r1, #4
   1cb9c:	mov	r5, r0
   1cba0:	bl	14c08 <g_type_add_instance_private@plt>
   1cba4:	mov	r1, r5
   1cba8:	str	r0, [r4, #48]	; 0x30
   1cbac:	add	r0, r4, #448	; 0x1c0
   1cbb0:	bl	14ed8 <g_once_init_leave@plt>
   1cbb4:	ldr	r0, [r4, #448]	; 0x1c0
   1cbb8:	pop	{r4, r5, r6, pc}
   1cbbc:	ldrdeq	ip, [r4], -r8
   1cbc0:	andeq	r4, r3, r4, lsr #27
   1cbc4:	ldrdeq	r5, [r3], -r0
   1cbc8:	push	{r4, lr}
   1cbcc:	bl	1cb50 <g_strcmp0@plt+0x7984>
   1cbd0:	pop	{r4, lr}
   1cbd4:	b	1caec <g_strcmp0@plt+0x7920>
   1cbd8:	push	{r4, lr}
   1cbdc:	bl	1b350 <g_strcmp0@plt+0x6184>
   1cbe0:	ldr	r3, [r0]
   1cbe4:	mov	r4, r0
   1cbe8:	ldr	r3, [r3, #68]	; 0x44
   1cbec:	blx	r3
   1cbf0:	ldr	r3, [r4]
   1cbf4:	mov	r0, r4
   1cbf8:	ldr	r3, [r3, #72]	; 0x48
   1cbfc:	blx	r3
   1cc00:	mov	r0, r4
   1cc04:	pop	{r4, pc}
   1cc08:	push	{r4, r5, r6, lr}
   1cc0c:	mcr	15, 0, r0, cr7, cr10, {5}
   1cc10:	ldr	r4, [pc, #92]	; 1cc74 <g_strcmp0@plt+0x7aa8>
   1cc14:	ldr	r5, [r4, #452]	; 0x1c4
   1cc18:	mcr	15, 0, r0, cr7, cr10, {5}
   1cc1c:	cmp	r5, #0
   1cc20:	beq	1cc2c <g_strcmp0@plt+0x7a60>
   1cc24:	ldr	r0, [r4, #452]	; 0x1c4
   1cc28:	pop	{r4, r5, r6, pc}
   1cc2c:	add	r0, r4, #452	; 0x1c4
   1cc30:	bl	14a28 <g_once_init_enter@plt>
   1cc34:	cmp	r0, #0
   1cc38:	beq	1cc24 <g_strcmp0@plt+0x7a58>
   1cc3c:	bl	1b3e0 <g_strcmp0@plt+0x6214>
   1cc40:	mov	r3, r5
   1cc44:	ldr	r2, [pc, #44]	; 1cc78 <g_strcmp0@plt+0x7aac>
   1cc48:	ldr	r1, [pc, #44]	; 1cc7c <g_strcmp0@plt+0x7ab0>
   1cc4c:	bl	14428 <g_type_register_static@plt>
   1cc50:	mov	r1, #8
   1cc54:	mov	r5, r0
   1cc58:	bl	14c08 <g_type_add_instance_private@plt>
   1cc5c:	mov	r1, r5
   1cc60:	str	r0, [r4, #52]	; 0x34
   1cc64:	add	r0, r4, #452	; 0x1c4
   1cc68:	bl	14ed8 <g_once_init_leave@plt>
   1cc6c:	ldr	r0, [r4, #452]	; 0x1c4
   1cc70:	pop	{r4, r5, r6, pc}
   1cc74:	ldrdeq	ip, [r4], -r8
   1cc78:	andeq	r4, r3, r8, asr #27
   1cc7c:	andeq	r5, r3, ip, ror #19
   1cc80:	push	{r4, lr}
   1cc84:	bl	1cc08 <g_strcmp0@plt+0x7a3c>
   1cc88:	pop	{r4, lr}
   1cc8c:	b	1cbd8 <g_strcmp0@plt+0x7a0c>
   1cc90:	push	{r4, lr}
   1cc94:	bl	1b350 <g_strcmp0@plt+0x6184>
   1cc98:	ldr	r3, [r0]
   1cc9c:	mov	r4, r0
   1cca0:	ldr	r3, [r3, #68]	; 0x44
   1cca4:	blx	r3
   1cca8:	ldr	r3, [r4]
   1ccac:	mov	r0, r4
   1ccb0:	ldr	r3, [r3, #72]	; 0x48
   1ccb4:	blx	r3
   1ccb8:	mov	r0, r4
   1ccbc:	pop	{r4, pc}
   1ccc0:	push	{r4, r5, r6, lr}
   1ccc4:	mcr	15, 0, r0, cr7, cr10, {5}
   1ccc8:	ldr	r4, [pc, #92]	; 1cd2c <g_strcmp0@plt+0x7b60>
   1cccc:	ldr	r5, [r4, #456]	; 0x1c8
   1ccd0:	mcr	15, 0, r0, cr7, cr10, {5}
   1ccd4:	cmp	r5, #0
   1ccd8:	beq	1cce4 <g_strcmp0@plt+0x7b18>
   1ccdc:	ldr	r0, [r4, #456]	; 0x1c8
   1cce0:	pop	{r4, r5, r6, pc}
   1cce4:	add	r0, r4, #456	; 0x1c8
   1cce8:	bl	14a28 <g_once_init_enter@plt>
   1ccec:	cmp	r0, #0
   1ccf0:	beq	1ccdc <g_strcmp0@plt+0x7b10>
   1ccf4:	bl	1b3e0 <g_strcmp0@plt+0x6214>
   1ccf8:	mov	r3, r5
   1ccfc:	ldr	r2, [pc, #44]	; 1cd30 <g_strcmp0@plt+0x7b64>
   1cd00:	ldr	r1, [pc, #44]	; 1cd34 <g_strcmp0@plt+0x7b68>
   1cd04:	bl	14428 <g_type_register_static@plt>
   1cd08:	mov	r1, #4
   1cd0c:	mov	r5, r0
   1cd10:	bl	14c08 <g_type_add_instance_private@plt>
   1cd14:	mov	r1, r5
   1cd18:	str	r0, [r4, #56]	; 0x38
   1cd1c:	add	r0, r4, #456	; 0x1c8
   1cd20:	bl	14ed8 <g_once_init_leave@plt>
   1cd24:	ldr	r0, [r4, #456]	; 0x1c8
   1cd28:	pop	{r4, r5, r6, pc}
   1cd2c:	ldrdeq	ip, [r4], -r8
   1cd30:	andeq	r4, r3, ip, ror #27
   1cd34:	andeq	r5, r3, r8, lsl #20
   1cd38:	push	{r4, lr}
   1cd3c:	bl	1ccc0 <g_strcmp0@plt+0x7af4>
   1cd40:	pop	{r4, lr}
   1cd44:	b	1cc90 <g_strcmp0@plt+0x7ac4>
   1cd48:	push	{r4, lr}
   1cd4c:	bl	1b350 <g_strcmp0@plt+0x6184>
   1cd50:	ldr	r3, [r0]
   1cd54:	mov	r4, r0
   1cd58:	ldr	r3, [r3, #68]	; 0x44
   1cd5c:	blx	r3
   1cd60:	ldr	r3, [r4]
   1cd64:	mov	r0, r4
   1cd68:	ldr	r3, [r3, #72]	; 0x48
   1cd6c:	blx	r3
   1cd70:	mov	r0, r4
   1cd74:	pop	{r4, pc}
   1cd78:	push	{r4, r5, r6, lr}
   1cd7c:	mcr	15, 0, r0, cr7, cr10, {5}
   1cd80:	ldr	r4, [pc, #92]	; 1cde4 <g_strcmp0@plt+0x7c18>
   1cd84:	ldr	r5, [r4, #460]	; 0x1cc
   1cd88:	mcr	15, 0, r0, cr7, cr10, {5}
   1cd8c:	cmp	r5, #0
   1cd90:	beq	1cd9c <g_strcmp0@plt+0x7bd0>
   1cd94:	ldr	r0, [r4, #460]	; 0x1cc
   1cd98:	pop	{r4, r5, r6, pc}
   1cd9c:	add	r0, r4, #460	; 0x1cc
   1cda0:	bl	14a28 <g_once_init_enter@plt>
   1cda4:	cmp	r0, #0
   1cda8:	beq	1cd94 <g_strcmp0@plt+0x7bc8>
   1cdac:	bl	1b3e0 <g_strcmp0@plt+0x6214>
   1cdb0:	mov	r3, r5
   1cdb4:	ldr	r2, [pc, #44]	; 1cde8 <g_strcmp0@plt+0x7c1c>
   1cdb8:	ldr	r1, [pc, #44]	; 1cdec <g_strcmp0@plt+0x7c20>
   1cdbc:	bl	14428 <g_type_register_static@plt>
   1cdc0:	mov	r1, #4
   1cdc4:	mov	r5, r0
   1cdc8:	bl	14c08 <g_type_add_instance_private@plt>
   1cdcc:	mov	r1, r5
   1cdd0:	str	r0, [r4, #60]	; 0x3c
   1cdd4:	add	r0, r4, #460	; 0x1cc
   1cdd8:	bl	14ed8 <g_once_init_leave@plt>
   1cddc:	ldr	r0, [r4, #460]	; 0x1cc
   1cde0:	pop	{r4, r5, r6, pc}
   1cde4:	ldrdeq	ip, [r4], -r8
   1cde8:	andeq	r4, r3, r0, lsl lr
   1cdec:	andeq	r5, r3, ip, lsl sl
   1cdf0:	push	{r4, lr}
   1cdf4:	bl	1cd78 <g_strcmp0@plt+0x7bac>
   1cdf8:	pop	{r4, lr}
   1cdfc:	b	1cd48 <g_strcmp0@plt+0x7b7c>
   1ce00:	push	{r4, lr}
   1ce04:	bl	1b350 <g_strcmp0@plt+0x6184>
   1ce08:	ldr	r3, [r0]
   1ce0c:	mov	r4, r0
   1ce10:	ldr	r3, [r3, #68]	; 0x44
   1ce14:	blx	r3
   1ce18:	ldr	r3, [r4]
   1ce1c:	mov	r0, r4
   1ce20:	ldr	r3, [r3, #72]	; 0x48
   1ce24:	blx	r3
   1ce28:	mov	r0, r4
   1ce2c:	pop	{r4, pc}
   1ce30:	push	{r4, r5, r6, lr}
   1ce34:	mcr	15, 0, r0, cr7, cr10, {5}
   1ce38:	ldr	r4, [pc, #92]	; 1ce9c <g_strcmp0@plt+0x7cd0>
   1ce3c:	ldr	r5, [r4, #464]	; 0x1d0
   1ce40:	mcr	15, 0, r0, cr7, cr10, {5}
   1ce44:	cmp	r5, #0
   1ce48:	beq	1ce54 <g_strcmp0@plt+0x7c88>
   1ce4c:	ldr	r0, [r4, #464]	; 0x1d0
   1ce50:	pop	{r4, r5, r6, pc}
   1ce54:	add	r0, r4, #464	; 0x1d0
   1ce58:	bl	14a28 <g_once_init_enter@plt>
   1ce5c:	cmp	r0, #0
   1ce60:	beq	1ce4c <g_strcmp0@plt+0x7c80>
   1ce64:	bl	1b3e0 <g_strcmp0@plt+0x6214>
   1ce68:	mov	r3, r5
   1ce6c:	ldr	r2, [pc, #44]	; 1cea0 <g_strcmp0@plt+0x7cd4>
   1ce70:	ldr	r1, [pc, #44]	; 1cea4 <g_strcmp0@plt+0x7cd8>
   1ce74:	bl	14428 <g_type_register_static@plt>
   1ce78:	mov	r1, #8
   1ce7c:	mov	r5, r0
   1ce80:	bl	14c08 <g_type_add_instance_private@plt>
   1ce84:	mov	r1, r5
   1ce88:	str	r0, [r4, #64]	; 0x40
   1ce8c:	add	r0, r4, #464	; 0x1d0
   1ce90:	bl	14ed8 <g_once_init_leave@plt>
   1ce94:	ldr	r0, [r4, #464]	; 0x1d0
   1ce98:	pop	{r4, r5, r6, pc}
   1ce9c:	ldrdeq	ip, [r4], -r8
   1cea0:	andeq	r4, r3, r4, lsr lr
   1cea4:	andeq	r5, r3, r0, lsr sl
   1cea8:	push	{r4, lr}
   1ceac:	bl	1ce30 <g_strcmp0@plt+0x7c64>
   1ceb0:	pop	{r4, lr}
   1ceb4:	b	1ce00 <g_strcmp0@plt+0x7c34>
   1ceb8:	push	{r4, lr}
   1cebc:	bl	1b350 <g_strcmp0@plt+0x6184>
   1cec0:	ldr	r3, [r0]
   1cec4:	mov	r4, r0
   1cec8:	ldr	r3, [r3, #68]	; 0x44
   1cecc:	blx	r3
   1ced0:	ldr	r3, [r4]
   1ced4:	mov	r0, r4
   1ced8:	ldr	r3, [r3, #72]	; 0x48
   1cedc:	blx	r3
   1cee0:	mov	r0, r4
   1cee4:	pop	{r4, pc}
   1cee8:	ldr	r3, [r0]
   1ceec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1cef0:	mov	r4, r0
   1cef4:	ldr	r3, [r3, #72]	; 0x48
   1cef8:	blx	r3
   1cefc:	ldr	r3, [r4, #12]
   1cf00:	ldmib	r3, {r5, r6}
   1cf04:	cmp	r5, #0
   1cf08:	beq	1cf1c <g_strcmp0@plt+0x7d50>
   1cf0c:	mov	r0, r5
   1cf10:	mov	r1, r6
   1cf14:	bl	17878 <g_strcmp0@plt+0x26ac>
   1cf18:	mov	r5, r0
   1cf1c:	ldr	r3, [r4, #24]
   1cf20:	ldr	r7, [pc, #200]	; 1cff0 <g_strcmp0@plt+0x7e24>
   1cf24:	ldr	r0, [r3]
   1cf28:	cmp	r0, #0
   1cf2c:	beq	1cfcc <g_strcmp0@plt+0x7e00>
   1cf30:	bl	14bcc <g_quark_from_string@plt>
   1cf34:	mov	r8, r0
   1cf38:	ldr	r0, [r7, #468]	; 0x1d4
   1cf3c:	cmp	r0, #0
   1cf40:	beq	1cfd8 <g_strcmp0@plt+0x7e0c>
   1cf44:	cmp	r0, r8
   1cf48:	beq	1cf78 <g_strcmp0@plt+0x7dac>
   1cf4c:	mov	r0, r4
   1cf50:	mov	r1, #0
   1cf54:	bl	18aa0 <g_strcmp0@plt+0x38d4>
   1cf58:	mov	r1, r5
   1cf5c:	mov	r0, r4
   1cf60:	mov	r2, r6
   1cf64:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1cf68:	mov	r1, r6
   1cf6c:	mov	r0, r5
   1cf70:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1cf74:	b	189bc <g_strcmp0@plt+0x37f0>
   1cf78:	ldr	r0, [pc, #116]	; 1cff4 <g_strcmp0@plt+0x7e28>
   1cf7c:	bl	147e8 <g_strdup@plt>
   1cf80:	mov	r2, #0
   1cf84:	ldr	r1, [pc, #108]	; 1cff8 <g_strcmp0@plt+0x7e2c>
   1cf88:	mov	r9, r0
   1cf8c:	bl	14530 <g_strsplit_set@plt>
   1cf90:	subs	r7, r0, #0
   1cf94:	moveq	r8, r7
   1cf98:	beq	1cfa4 <g_strcmp0@plt+0x7dd8>
   1cf9c:	bl	183dc <g_strcmp0@plt+0x3210>
   1cfa0:	mov	r8, r0
   1cfa4:	mov	r2, r8
   1cfa8:	mov	r1, r7
   1cfac:	mov	r0, r4
   1cfb0:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1cfb4:	mov	r0, r7
   1cfb8:	mov	r1, r8
   1cfbc:	bl	189bc <g_strcmp0@plt+0x37f0>
   1cfc0:	mov	r0, r9
   1cfc4:	bl	14bd8 <g_free@plt>
   1cfc8:	b	1cf4c <g_strcmp0@plt+0x7d80>
   1cfcc:	ldr	r8, [r7, #468]	; 0x1d4
   1cfd0:	cmp	r8, #0
   1cfd4:	bne	1cf4c <g_strcmp0@plt+0x7d80>
   1cfd8:	ldr	r0, [pc, #28]	; 1cffc <g_strcmp0@plt+0x7e30>
   1cfdc:	bl	14d64 <g_quark_from_static_string@plt>
   1cfe0:	cmp	r0, r8
   1cfe4:	str	r0, [r7, #468]	; 0x1d4
   1cfe8:	bne	1cf4c <g_strcmp0@plt+0x7d80>
   1cfec:	b	1cf78 <g_strcmp0@plt+0x7dac>
   1cff0:	ldrdeq	ip, [r4], -r8
   1cff4:	andeq	r5, r3, ip, asr #20
   1cff8:	andeq	r5, r3, ip, lsr #4
   1cffc:	andeq	r5, r3, r4, asr #20
   1d000:	push	{r4, r5, r6, lr}
   1d004:	mcr	15, 0, r0, cr7, cr10, {5}
   1d008:	ldr	r4, [pc, #92]	; 1d06c <g_strcmp0@plt+0x7ea0>
   1d00c:	ldr	r5, [r4, #472]	; 0x1d8
   1d010:	mcr	15, 0, r0, cr7, cr10, {5}
   1d014:	cmp	r5, #0
   1d018:	beq	1d024 <g_strcmp0@plt+0x7e58>
   1d01c:	ldr	r0, [r4, #472]	; 0x1d8
   1d020:	pop	{r4, r5, r6, pc}
   1d024:	add	r0, r4, #472	; 0x1d8
   1d028:	bl	14a28 <g_once_init_enter@plt>
   1d02c:	cmp	r0, #0
   1d030:	beq	1d01c <g_strcmp0@plt+0x7e50>
   1d034:	bl	1b3e0 <g_strcmp0@plt+0x6214>
   1d038:	mov	r3, r5
   1d03c:	ldr	r2, [pc, #44]	; 1d070 <g_strcmp0@plt+0x7ea4>
   1d040:	ldr	r1, [pc, #44]	; 1d074 <g_strcmp0@plt+0x7ea8>
   1d044:	bl	14428 <g_type_register_static@plt>
   1d048:	mov	r1, #4
   1d04c:	mov	r5, r0
   1d050:	bl	14c08 <g_type_add_instance_private@plt>
   1d054:	mov	r1, r5
   1d058:	str	r0, [r4, #68]	; 0x44
   1d05c:	add	r0, r4, #472	; 0x1d8
   1d060:	bl	14ed8 <g_once_init_leave@plt>
   1d064:	ldr	r0, [r4, #472]	; 0x1d8
   1d068:	pop	{r4, r5, r6, pc}
   1d06c:	ldrdeq	ip, [r4], -r8
   1d070:	andeq	r4, r3, r8, asr lr
   1d074:	andeq	r5, r3, r8, asr sl
   1d078:	push	{r4, lr}
   1d07c:	bl	1d000 <g_strcmp0@plt+0x7e34>
   1d080:	pop	{r4, lr}
   1d084:	b	1ceb8 <g_strcmp0@plt+0x7cec>
   1d088:	push	{r4, lr}
   1d08c:	bl	1b350 <g_strcmp0@plt+0x6184>
   1d090:	ldr	r3, [r0]
   1d094:	mov	r4, r0
   1d098:	ldr	r3, [r3, #68]	; 0x44
   1d09c:	blx	r3
   1d0a0:	ldr	r3, [r4]
   1d0a4:	mov	r0, r4
   1d0a8:	ldr	r3, [r3, #72]	; 0x48
   1d0ac:	blx	r3
   1d0b0:	mov	r0, r4
   1d0b4:	pop	{r4, pc}
   1d0b8:	ldr	r3, [r0, #24]
   1d0bc:	ldr	r0, [r3, #4]
   1d0c0:	cmp	r0, #0
   1d0c4:	bxeq	lr
   1d0c8:	b	28968 <g_strcmp0@plt+0x1379c>
   1d0cc:	ldr	r3, [r0, #24]
   1d0d0:	ldr	r0, [r3, #4]
   1d0d4:	cmp	r0, #0
   1d0d8:	bxeq	lr
   1d0dc:	b	2896c <g_strcmp0@plt+0x137a0>
   1d0e0:	push	{r4, r5, r6, r7, lr}
   1d0e4:	sub	sp, sp, #28
   1d0e8:	ldr	r6, [pc, #320]	; 1d230 <g_strcmp0@plt+0x8064>
   1d0ec:	ldr	r2, [r0, #24]
   1d0f0:	mov	r4, r0
   1d0f4:	ldr	r3, [r6]
   1d0f8:	mov	r7, #0
   1d0fc:	ldr	r0, [r2, #8]
   1d100:	str	r3, [sp, #20]
   1d104:	str	r7, [sp, #16]
   1d108:	bl	14fa4 <g_file_new_for_path@plt>
   1d10c:	ldr	r3, [r4, #24]
   1d110:	mov	r5, r0
   1d114:	ldr	r0, [r3, #12]
   1d118:	cmp	r0, r7
   1d11c:	beq	1d12c <g_strcmp0@plt+0x7f60>
   1d120:	bl	14e90 <g_object_unref@plt>
   1d124:	ldr	r3, [r4, #24]
   1d128:	str	r7, [r3, #12]
   1d12c:	mov	r2, #0
   1d130:	str	r5, [r3, #12]
   1d134:	mov	r0, r5
   1d138:	add	r3, sp, #16
   1d13c:	mov	r1, r2
   1d140:	bl	14da0 <g_file_monitor_directory@plt>
   1d144:	ldr	r5, [sp, #16]
   1d148:	cmp	r5, #0
   1d14c:	mov	r7, r0
   1d150:	beq	1d1dc <g_strcmp0@plt+0x8010>
   1d154:	mov	ip, #0
   1d158:	mov	r0, ip
   1d15c:	ldr	r3, [r5, #8]
   1d160:	ldr	r2, [pc, #204]	; 1d234 <g_strcmp0@plt+0x8068>
   1d164:	mov	r1, #32
   1d168:	str	ip, [sp, #16]
   1d16c:	bl	14668 <g_log@plt>
   1d170:	mov	r0, r5
   1d174:	bl	1453c <g_error_free@plt>
   1d178:	ldr	r4, [sp, #16]
   1d17c:	cmp	r4, #0
   1d180:	beq	1d1c4 <g_strcmp0@plt+0x7ff8>
   1d184:	ldr	r0, [r4]
   1d188:	bl	14c2c <g_quark_to_string@plt>
   1d18c:	ldr	r3, [r4, #4]
   1d190:	ldr	ip, [pc, #160]	; 1d238 <g_strcmp0@plt+0x806c>
   1d194:	str	r3, [sp, #12]
   1d198:	ldr	r2, [pc, #156]	; 1d23c <g_strcmp0@plt+0x8070>
   1d19c:	ldr	r3, [pc, #156]	; 1d240 <g_strcmp0@plt+0x8074>
   1d1a0:	mov	r1, #8
   1d1a4:	str	r0, [sp, #8]
   1d1a8:	ldr	r0, [r4, #8]
   1d1ac:	str	ip, [sp]
   1d1b0:	str	r0, [sp, #4]
   1d1b4:	mov	r0, #0
   1d1b8:	bl	14668 <g_log@plt>
   1d1bc:	add	r0, sp, #16
   1d1c0:	bl	14dac <g_clear_error@plt>
   1d1c4:	ldr	r2, [sp, #20]
   1d1c8:	ldr	r3, [r6]
   1d1cc:	cmp	r2, r3
   1d1d0:	bne	1d22c <g_strcmp0@plt+0x8060>
   1d1d4:	add	sp, sp, #28
   1d1d8:	pop	{r4, r5, r6, r7, pc}
   1d1dc:	ldr	r3, [r4, #24]
   1d1e0:	ldr	r0, [r3, #16]
   1d1e4:	cmp	r0, #0
   1d1e8:	beq	1d1f8 <g_strcmp0@plt+0x802c>
   1d1ec:	bl	14e90 <g_object_unref@plt>
   1d1f0:	ldr	r3, [r4, #24]
   1d1f4:	str	r5, [r3, #16]
   1d1f8:	mov	r5, #0
   1d1fc:	str	r7, [r3, #16]
   1d200:	mov	r0, r7
   1d204:	mov	r3, r4
   1d208:	str	r5, [sp]
   1d20c:	ldr	r2, [pc, #48]	; 1d244 <g_strcmp0@plt+0x8078>
   1d210:	ldr	r1, [pc, #48]	; 1d248 <g_strcmp0@plt+0x807c>
   1d214:	bl	15190 <g_signal_connect_object@plt>
   1d218:	mov	r0, r5
   1d21c:	ldr	r2, [pc, #40]	; 1d24c <g_strcmp0@plt+0x8080>
   1d220:	mov	r1, #32
   1d224:	bl	14668 <g_log@plt>
   1d228:	b	1d178 <g_strcmp0@plt+0x7fac>
   1d22c:	bl	14b6c <__stack_chk_fail@plt>
   1d230:	andeq	fp, r4, r8, asr #19
   1d234:	andeq	r5, r3, r8, ror sl
   1d238:	andeq	r1, r0, r8, lsl #17
   1d23c:	andeq	r4, r3, r4, lsr #13
   1d240:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1d244:	andeq	sp, r1, ip, lsl r3
   1d248:	andeq	r5, r3, ip, lsl #21
   1d24c:	muleq	r3, r4, sl
   1d250:	ldr	r3, [r0, #24]
   1d254:	push	{r4, r5, r6, r7, lr}
   1d258:	sub	sp, sp, #12
   1d25c:	ldr	r5, [r3, #20]
   1d260:	cmp	r5, #0
   1d264:	beq	1d270 <g_strcmp0@plt+0x80a4>
   1d268:	add	sp, sp, #12
   1d26c:	pop	{r4, r5, r6, r7, pc}
   1d270:	ldr	r6, [pc, #140]	; 1d304 <g_strcmp0@plt+0x8138>
   1d274:	mov	r2, #1
   1d278:	str	r2, [r3, #20]
   1d27c:	ldr	r1, [pc, #132]	; 1d308 <g_strcmp0@plt+0x813c>
   1d280:	ldr	r3, [pc, #132]	; 1d30c <g_strcmp0@plt+0x8140>
   1d284:	ldr	r2, [pc, #132]	; 1d310 <g_strcmp0@plt+0x8144>
   1d288:	mov	r4, r0
   1d28c:	ldr	r0, [r6]
   1d290:	bl	2a300 <g_strcmp0@plt+0x15134>
   1d294:	mov	r7, r0
   1d298:	bl	14bd8 <g_free@plt>
   1d29c:	cmp	r7, #0
   1d2a0:	moveq	r5, #60	; 0x3c
   1d2a4:	beq	1d2d8 <g_strcmp0@plt+0x810c>
   1d2a8:	ldr	r0, [r6]
   1d2ac:	ldr	r3, [pc, #88]	; 1d30c <g_strcmp0@plt+0x8140>
   1d2b0:	ldr	r2, [pc, #88]	; 1d310 <g_strcmp0@plt+0x8144>
   1d2b4:	ldr	r1, [pc, #76]	; 1d308 <g_strcmp0@plt+0x813c>
   1d2b8:	bl	2a300 <g_strcmp0@plt+0x15134>
   1d2bc:	mov	r1, r5
   1d2c0:	mov	r2, #10
   1d2c4:	mov	r6, r0
   1d2c8:	bl	14548 <strtol@plt>
   1d2cc:	mov	r5, r0
   1d2d0:	mov	r0, r6
   1d2d4:	bl	14bd8 <g_free@plt>
   1d2d8:	mov	r0, r4
   1d2dc:	bl	14404 <g_object_ref@plt>
   1d2e0:	ldr	r3, [pc, #44]	; 1d314 <g_strcmp0@plt+0x8148>
   1d2e4:	mov	r1, r5
   1d2e8:	str	r3, [sp]
   1d2ec:	ldr	r2, [pc, #36]	; 1d318 <g_strcmp0@plt+0x814c>
   1d2f0:	mov	r3, r0
   1d2f4:	mov	r0, #0
   1d2f8:	bl	14458 <g_timeout_add_seconds_full@plt>
   1d2fc:	add	sp, sp, #12
   1d300:	pop	{r4, r5, r6, r7, pc}
   1d304:	andeq	ip, r4, r4, asr #32
   1d308:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1d30c:	andeq	r5, r3, r0, asr #21
   1d310:	andeq	r4, r3, r4, asr r9
   1d314:	muleq	r1, r0, lr
   1d318:			; <UNDEFINED> instruction: 0x0001debc
   1d31c:	ldr	r0, [sp]
   1d320:	b	1d250 <g_strcmp0@plt+0x8084>
   1d324:	ldr	r2, [pc, #372]	; 1d4a0 <g_strcmp0@plt+0x82d4>
   1d328:	push	{r4, r5, r6, r7, r8, lr}
   1d32c:	mov	r6, r0
   1d330:	ldr	r3, [pc, #364]	; 1d4a4 <g_strcmp0@plt+0x82d8>
   1d334:	ldr	r0, [r2]
   1d338:	ldr	r1, [pc, #360]	; 1d4a8 <g_strcmp0@plt+0x82dc>
   1d33c:	ldr	r2, [pc, #360]	; 1d4ac <g_strcmp0@plt+0x82e0>
   1d340:	bl	2a300 <g_strcmp0@plt+0x15134>
   1d344:	ldr	r3, [r6, #24]
   1d348:	ldr	r4, [pc, #352]	; 1d4b0 <g_strcmp0@plt+0x82e4>
   1d34c:	mov	r7, r0
   1d350:	ldr	r0, [r3]
   1d354:	bl	14bd8 <g_free@plt>
   1d358:	ldr	r3, [r6, #24]
   1d35c:	cmp	r7, #0
   1d360:	str	r7, [r3]
   1d364:	beq	1d430 <g_strcmp0@plt+0x8264>
   1d368:	mov	r0, r7
   1d36c:	bl	14bcc <g_quark_from_string@plt>
   1d370:	mov	r5, r0
   1d374:	ldr	r0, [r4, #476]	; 0x1dc
   1d378:	cmp	r0, #0
   1d37c:	beq	1d418 <g_strcmp0@plt+0x824c>
   1d380:	cmp	r0, r5
   1d384:	popeq	{r4, r5, r6, r7, r8, pc}
   1d388:	ldr	r0, [r4, #480]	; 0x1e0
   1d38c:	cmp	r0, #0
   1d390:	beq	1d44c <g_strcmp0@plt+0x8280>
   1d394:	cmp	r0, r5
   1d398:	popeq	{r4, r5, r6, r7, r8, pc}
   1d39c:	ldr	r0, [r4, #484]	; 0x1e4
   1d3a0:	cmp	r0, #0
   1d3a4:	beq	1d488 <g_strcmp0@plt+0x82bc>
   1d3a8:	cmp	r0, r5
   1d3ac:	popeq	{r4, r5, r6, r7, r8, pc}
   1d3b0:	ldr	r0, [r4, #488]	; 0x1e8
   1d3b4:	cmp	r0, #0
   1d3b8:	beq	1d478 <g_strcmp0@plt+0x82ac>
   1d3bc:	cmp	r0, r5
   1d3c0:	beq	1d464 <g_strcmp0@plt+0x8298>
   1d3c4:	ldr	r3, [r6, #24]
   1d3c8:	mov	r2, #0
   1d3cc:	ldr	r1, [pc, #224]	; 1d4b4 <g_strcmp0@plt+0x82e8>
   1d3d0:	ldr	r0, [r3]
   1d3d4:	bl	14530 <g_strsplit_set@plt>
   1d3d8:	subs	r4, r0, #0
   1d3dc:	moveq	r5, r4
   1d3e0:	beq	1d3ec <g_strcmp0@plt+0x8220>
   1d3e4:	bl	183dc <g_strcmp0@plt+0x3210>
   1d3e8:	mov	r5, r0
   1d3ec:	ldr	r1, [r4]
   1d3f0:	mov	r0, r6
   1d3f4:	bl	18f10 <g_strcmp0@plt+0x3d44>
   1d3f8:	mov	r1, r4
   1d3fc:	mov	r0, r6
   1d400:	mov	r2, r5
   1d404:	bl	18f84 <g_strcmp0@plt+0x3db8>
   1d408:	mov	r1, r5
   1d40c:	mov	r0, r4
   1d410:	pop	{r4, r5, r6, r7, r8, lr}
   1d414:	b	189bc <g_strcmp0@plt+0x37f0>
   1d418:	mov	r0, #0
   1d41c:	bl	14d64 <g_quark_from_static_string@plt>
   1d420:	cmp	r0, r5
   1d424:	str	r0, [r4, #476]	; 0x1dc
   1d428:	bne	1d388 <g_strcmp0@plt+0x81bc>
   1d42c:	pop	{r4, r5, r6, r7, r8, pc}
   1d430:	ldr	r5, [r4, #476]	; 0x1dc
   1d434:	cmp	r5, #0
   1d438:	beq	1d418 <g_strcmp0@plt+0x824c>
   1d43c:	ldr	r5, [r4, #480]	; 0x1e0
   1d440:	cmp	r5, #0
   1d444:	movne	r5, r7
   1d448:	bne	1d39c <g_strcmp0@plt+0x81d0>
   1d44c:	ldr	r0, [pc, #100]	; 1d4b8 <g_strcmp0@plt+0x82ec>
   1d450:	bl	14d64 <g_quark_from_static_string@plt>
   1d454:	cmp	r0, r5
   1d458:	str	r0, [r4, #480]	; 0x1e0
   1d45c:	bne	1d39c <g_strcmp0@plt+0x81d0>
   1d460:	pop	{r4, r5, r6, r7, r8, pc}
   1d464:	mov	r0, r6
   1d468:	bl	1d0e0 <g_strcmp0@plt+0x7f14>
   1d46c:	mov	r0, r6
   1d470:	pop	{r4, r5, r6, r7, r8, lr}
   1d474:	b	1d250 <g_strcmp0@plt+0x8084>
   1d478:	ldr	r0, [pc, #60]	; 1d4bc <g_strcmp0@plt+0x82f0>
   1d47c:	bl	14d64 <g_quark_from_static_string@plt>
   1d480:	str	r0, [r4, #488]	; 0x1e8
   1d484:	b	1d3bc <g_strcmp0@plt+0x81f0>
   1d488:	ldr	r0, [pc, #36]	; 1d4b4 <g_strcmp0@plt+0x82e8>
   1d48c:	bl	14d64 <g_quark_from_static_string@plt>
   1d490:	cmp	r0, r5
   1d494:	str	r0, [r4, #484]	; 0x1e4
   1d498:	bne	1d3b0 <g_strcmp0@plt+0x81e4>
   1d49c:	pop	{r4, r5, r6, r7, r8, pc}
   1d4a0:	andeq	ip, r4, r4, asr #32
   1d4a4:	ldrdeq	r4, [r3], -ip
   1d4a8:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1d4ac:	andeq	r4, r3, r4, asr r9
   1d4b0:	ldrdeq	ip, [r4], -r8
   1d4b4:	andeq	r5, r3, ip, lsr #4
   1d4b8:	andeq	sl, r3, ip, ror #18
   1d4bc:	andeq	r5, r3, r8, asr #21
   1d4c0:	ldr	r3, [pc, #1088]	; 1d908 <g_strcmp0@plt+0x873c>
   1d4c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d4c8:	sub	sp, sp, #44	; 0x2c
   1d4cc:	ldr	r3, [r3]
   1d4d0:	mov	r4, r0
   1d4d4:	mov	r5, #0
   1d4d8:	mov	r0, #4
   1d4dc:	str	r3, [sp, #36]	; 0x24
   1d4e0:	str	r5, [sp, #32]
   1d4e4:	bl	14fbc <g_malloc0@plt>
   1d4e8:	ldr	r3, [r4, #24]
   1d4ec:	ldr	r9, [r3, #12]
   1d4f0:	cmp	r9, r5
   1d4f4:	mov	r7, r0
   1d4f8:	beq	1d614 <g_strcmp0@plt+0x8448>
   1d4fc:	ldr	r0, [r3, #8]
   1d500:	bl	14fa4 <g_file_new_for_path@plt>
   1d504:	add	sl, sp, #32
   1d508:	str	sl, [sp]
   1d50c:	mov	r3, r5
   1d510:	mov	r2, r5
   1d514:	ldr	r1, [pc, #1008]	; 1d90c <g_strcmp0@plt+0x8740>
   1d518:	mov	r6, r0
   1d51c:	str	r0, [sp, #20]
   1d520:	bl	150f4 <g_file_enumerate_children@plt>
   1d524:	ldr	r4, [sp, #32]
   1d528:	cmp	r4, r5
   1d52c:	mov	fp, r0
   1d530:	beq	1d634 <g_strcmp0@plt+0x8468>
   1d534:	cmp	r6, r5
   1d538:	mov	r0, r6
   1d53c:	beq	1d7a8 <g_strcmp0@plt+0x85dc>
   1d540:	bl	14e90 <g_object_unref@plt>
   1d544:	ldr	r4, [sp, #32]
   1d548:	mov	r9, r5
   1d54c:	str	r5, [sp, #20]
   1d550:	mov	ip, #0
   1d554:	mov	r0, ip
   1d558:	ldr	r3, [r4, #8]
   1d55c:	ldr	r2, [pc, #940]	; 1d910 <g_strcmp0@plt+0x8744>
   1d560:	mov	r1, #32
   1d564:	str	ip, [sp, #32]
   1d568:	bl	14668 <g_log@plt>
   1d56c:	mov	r0, r4
   1d570:	bl	1453c <g_error_free@plt>
   1d574:	ldr	r8, [sp, #32]
   1d578:	cmp	r8, #0
   1d57c:	beq	1d7e4 <g_strcmp0@plt+0x8618>
   1d580:	mov	r0, r9
   1d584:	bl	14bd8 <g_free@plt>
   1d588:	mov	r1, r5
   1d58c:	mov	r0, r7
   1d590:	bl	189bc <g_strcmp0@plt+0x37f0>
   1d594:	ldr	r3, [sp, #20]
   1d598:	cmp	r3, #0
   1d59c:	beq	1d5ac <g_strcmp0@plt+0x83e0>
   1d5a0:	mov	r0, r3
   1d5a4:	ldr	r1, [pc, #872]	; 1d914 <g_strcmp0@plt+0x8748>
   1d5a8:	bl	14b60 <g_list_free_full@plt>
   1d5ac:	ldr	r4, [sp, #32]
   1d5b0:	mov	r8, #0
   1d5b4:	ldr	r0, [r4]
   1d5b8:	bl	14c2c <g_quark_to_string@plt>
   1d5bc:	ldr	r3, [r4, #4]
   1d5c0:	ldr	ip, [pc, #848]	; 1d918 <g_strcmp0@plt+0x874c>
   1d5c4:	str	r3, [sp, #12]
   1d5c8:	ldr	r2, [pc, #844]	; 1d91c <g_strcmp0@plt+0x8750>
   1d5cc:	ldr	r3, [pc, #844]	; 1d920 <g_strcmp0@plt+0x8754>
   1d5d0:	mov	r1, #8
   1d5d4:	str	r0, [sp, #8]
   1d5d8:	ldr	r0, [r4, #8]
   1d5dc:	str	ip, [sp]
   1d5e0:	str	r0, [sp, #4]
   1d5e4:	mov	r0, r8
   1d5e8:	bl	14668 <g_log@plt>
   1d5ec:	mov	r0, sl
   1d5f0:	bl	14dac <g_clear_error@plt>
   1d5f4:	ldr	r3, [pc, #780]	; 1d908 <g_strcmp0@plt+0x873c>
   1d5f8:	ldr	r2, [sp, #36]	; 0x24
   1d5fc:	mov	r0, r8
   1d600:	ldr	r3, [r3]
   1d604:	cmp	r2, r3
   1d608:	bne	1d904 <g_strcmp0@plt+0x8738>
   1d60c:	add	sp, sp, #44	; 0x2c
   1d610:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d614:	mov	r5, r9
   1d618:	mov	r0, r9
   1d61c:	bl	14bd8 <g_free@plt>
   1d620:	mov	r1, r5
   1d624:	mov	r0, r7
   1d628:	bl	189bc <g_strcmp0@plt+0x37f0>
   1d62c:	mov	r8, #0
   1d630:	b	1d5f4 <g_strcmp0@plt+0x8428>
   1d634:	mov	r9, r4
   1d638:	mov	r5, r4
   1d63c:	str	r4, [sp, #24]
   1d640:	str	r4, [sp, #28]
   1d644:	mov	r2, sl
   1d648:	mov	r1, #0
   1d64c:	mov	r0, fp
   1d650:	bl	147c4 <g_file_enumerator_next_file@plt>
   1d654:	ldr	r3, [sp, #32]
   1d658:	cmp	r3, #0
   1d65c:	mov	r6, r0
   1d660:	beq	1d6a8 <g_strcmp0@plt+0x84dc>
   1d664:	cmp	r4, #0
   1d668:	beq	1d674 <g_strcmp0@plt+0x84a8>
   1d66c:	mov	r0, r4
   1d670:	bl	14e90 <g_object_unref@plt>
   1d674:	cmp	fp, #0
   1d678:	beq	1d684 <g_strcmp0@plt+0x84b8>
   1d67c:	mov	r0, fp
   1d680:	bl	14e90 <g_object_unref@plt>
   1d684:	ldr	r3, [sp, #20]
   1d688:	cmp	r3, #0
   1d68c:	beq	1d698 <g_strcmp0@plt+0x84cc>
   1d690:	ldr	r0, [sp, #20]
   1d694:	bl	14e90 <g_object_unref@plt>
   1d698:	ldr	r3, [sp, #24]
   1d69c:	ldr	r4, [sp, #32]
   1d6a0:	str	r3, [sp, #20]
   1d6a4:	b	1d550 <g_strcmp0@plt+0x8384>
   1d6a8:	cmp	r4, #0
   1d6ac:	beq	1d6b8 <g_strcmp0@plt+0x84ec>
   1d6b0:	mov	r0, r4
   1d6b4:	bl	14e90 <g_object_unref@plt>
   1d6b8:	cmp	r6, #0
   1d6bc:	beq	1d7b4 <g_strcmp0@plt+0x85e8>
   1d6c0:	mov	r0, r6
   1d6c4:	bl	1507c <g_file_info_get_name@plt>
   1d6c8:	bl	147e8 <g_strdup@plt>
   1d6cc:	mov	r8, r0
   1d6d0:	mov	r0, r9
   1d6d4:	bl	14bd8 <g_free@plt>
   1d6d8:	ldr	r1, [pc, #580]	; 1d924 <g_strcmp0@plt+0x8758>
   1d6dc:	mov	r0, r8
   1d6e0:	bl	151cc <g_strcmp0@plt>
   1d6e4:	cmp	r0, #0
   1d6e8:	bne	1d6f8 <g_strcmp0@plt+0x852c>
   1d6ec:	mov	r4, r6
   1d6f0:	mov	r9, r8
   1d6f4:	b	1d644 <g_strcmp0@plt+0x8478>
   1d6f8:	ldr	r1, [pc, #552]	; 1d928 <g_strcmp0@plt+0x875c>
   1d6fc:	mov	r0, r8
   1d700:	bl	14ff8 <g_str_has_suffix@plt>
   1d704:	cmp	r0, #0
   1d708:	beq	1d73c <g_strcmp0@plt+0x8570>
   1d70c:	mov	r3, r8
   1d710:	ldr	r2, [pc, #532]	; 1d92c <g_strcmp0@plt+0x8760>
   1d714:	mov	r1, #32
   1d718:	mov	r0, #0
   1d71c:	bl	14668 <g_log@plt>
   1d720:	mov	r0, r8
   1d724:	bl	147e8 <g_strdup@plt>
   1d728:	mov	r1, r0
   1d72c:	ldr	r0, [sp, #24]
   1d730:	bl	146b0 <g_list_append@plt>
   1d734:	str	r0, [sp, #24]
   1d738:	b	1d6ec <g_strcmp0@plt+0x8520>
   1d73c:	ldr	r1, [pc, #492]	; 1d930 <g_strcmp0@plt+0x8764>
   1d740:	mov	r0, r8
   1d744:	bl	14ff8 <g_str_has_suffix@plt>
   1d748:	cmp	r0, #0
   1d74c:	beq	1d6ec <g_strcmp0@plt+0x8520>
   1d750:	mov	r0, r8
   1d754:	bl	1877c <g_strcmp0@plt+0x35b0>
   1d758:	ldr	r3, [sp, #28]
   1d75c:	cmp	r5, r3
   1d760:	mov	r4, r0
   1d764:	beq	1d8c0 <g_strcmp0@plt+0x86f4>
   1d768:	add	r3, r7, r5, lsl #2
   1d76c:	mov	r2, #0
   1d770:	str	r4, [r7, r5, lsl #2]
   1d774:	mov	r0, r8
   1d778:	str	r2, [r3, #4]
   1d77c:	bl	1877c <g_strcmp0@plt+0x35b0>
   1d780:	ldr	r2, [pc, #428]	; 1d934 <g_strcmp0@plt+0x8768>
   1d784:	mov	r1, #32
   1d788:	add	r5, r5, #1
   1d78c:	mov	r4, r0
   1d790:	mov	r3, r0
   1d794:	mov	r0, #0
   1d798:	bl	14668 <g_log@plt>
   1d79c:	mov	r0, r4
   1d7a0:	bl	14bd8 <g_free@plt>
   1d7a4:	b	1d6ec <g_strcmp0@plt+0x8520>
   1d7a8:	ldr	r5, [sp, #20]
   1d7ac:	mov	r9, r5
   1d7b0:	b	1d550 <g_strcmp0@plt+0x8384>
   1d7b4:	cmp	fp, #0
   1d7b8:	beq	1d7c4 <g_strcmp0@plt+0x85f8>
   1d7bc:	mov	r0, fp
   1d7c0:	bl	14e90 <g_object_unref@plt>
   1d7c4:	ldr	r3, [sp, #20]
   1d7c8:	cmp	r3, #0
   1d7cc:	beq	1d8b4 <g_strcmp0@plt+0x86e8>
   1d7d0:	mov	r0, r3
   1d7d4:	bl	14e90 <g_object_unref@plt>
   1d7d8:	ldr	r3, [sp, #24]
   1d7dc:	str	r3, [sp, #20]
   1d7e0:	b	1d574 <g_strcmp0@plt+0x83a8>
   1d7e4:	ldr	r3, [sp, #20]
   1d7e8:	cmp	r3, #0
   1d7ec:	ldrne	r6, [sp, #20]
   1d7f0:	beq	1d618 <g_strcmp0@plt+0x844c>
   1d7f4:	ldr	r0, [r6]
   1d7f8:	bl	147e8 <g_strdup@plt>
   1d7fc:	ldr	r2, [pc, #308]	; 1d938 <g_strcmp0@plt+0x876c>
   1d800:	mov	r1, #32
   1d804:	mov	r3, r0
   1d808:	mov	fp, r0
   1d80c:	mov	r0, #0
   1d810:	bl	14668 <g_log@plt>
   1d814:	cmp	r7, #0
   1d818:	beq	1d898 <g_strcmp0@plt+0x86cc>
   1d81c:	cmp	r5, #0
   1d820:	beq	1d898 <g_strcmp0@plt+0x86cc>
   1d824:	sub	sl, r7, #4
   1d828:	mov	r4, #0
   1d82c:	b	1d83c <g_strcmp0@plt+0x8670>
   1d830:	add	r4, r4, #1
   1d834:	cmp	r4, r5
   1d838:	beq	1d898 <g_strcmp0@plt+0x86cc>
   1d83c:	mov	r1, fp
   1d840:	ldr	r0, [sl, #4]!
   1d844:	bl	151cc <g_strcmp0@plt>
   1d848:	cmp	r0, #0
   1d84c:	bne	1d830 <g_strcmp0@plt+0x8664>
   1d850:	mov	r3, fp
   1d854:	ldr	r2, [pc, #224]	; 1d93c <g_strcmp0@plt+0x8770>
   1d858:	mov	r1, #32
   1d85c:	bl	14668 <g_log@plt>
   1d860:	mov	r0, fp
   1d864:	bl	14bd8 <g_free@plt>
   1d868:	ldr	r6, [r6, #4]
   1d86c:	cmp	r6, #0
   1d870:	bne	1d7f4 <g_strcmp0@plt+0x8628>
   1d874:	mov	r0, r9
   1d878:	bl	14bd8 <g_free@plt>
   1d87c:	mov	r1, r5
   1d880:	mov	r0, r7
   1d884:	bl	189bc <g_strcmp0@plt+0x37f0>
   1d888:	ldr	r0, [sp, #20]
   1d88c:	ldr	r1, [pc, #128]	; 1d914 <g_strcmp0@plt+0x8748>
   1d890:	bl	14b60 <g_list_free_full@plt>
   1d894:	b	1d5f4 <g_strcmp0@plt+0x8428>
   1d898:	mov	r0, fp
   1d89c:	bl	147e8 <g_strdup@plt>
   1d8a0:	mov	r1, r0
   1d8a4:	mov	r0, r8
   1d8a8:	bl	146b0 <g_list_append@plt>
   1d8ac:	mov	r8, r0
   1d8b0:	b	1d860 <g_strcmp0@plt+0x8694>
   1d8b4:	ldr	r3, [sp, #24]
   1d8b8:	str	r3, [sp, #20]
   1d8bc:	b	1d574 <g_strcmp0@plt+0x83a8>
   1d8c0:	cmp	r5, #0
   1d8c4:	beq	1d8e8 <g_strcmp0@plt+0x871c>
   1d8c8:	lsl	r3, r5, #1
   1d8cc:	mov	r0, r7
   1d8d0:	add	r1, r3, #1
   1d8d4:	mov	r2, #4
   1d8d8:	str	r3, [sp, #28]
   1d8dc:	bl	14e54 <g_realloc_n@plt>
   1d8e0:	mov	r7, r0
   1d8e4:	b	1d768 <g_strcmp0@plt+0x859c>
   1d8e8:	mov	r0, r7
   1d8ec:	mov	r1, #20
   1d8f0:	bl	14f68 <g_realloc@plt>
   1d8f4:	mov	r3, #4
   1d8f8:	str	r3, [sp, #28]
   1d8fc:	mov	r7, r0
   1d900:	b	1d768 <g_strcmp0@plt+0x859c>
   1d904:	bl	14b6c <__stack_chk_fail@plt>
   1d908:	andeq	fp, r4, r8, asr #19
   1d90c:	ldrdeq	r5, [r3], -r4
   1d910:	andeq	r5, r3, ip, lsr fp
   1d914:	andeq	r7, r1, r4, ror #4
   1d918:	andeq	r1, r0, r3, asr #19
   1d91c:	andeq	r4, r3, r4, lsr #13
   1d920:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1d924:	andeq	r5, r3, r4, ror #21
   1d928:	andeq	r5, r3, r0
   1d92c:	andeq	r5, r3, ip, ror #21
   1d930:	andeq	r5, r3, r8
   1d934:	andeq	r5, r3, r4, lsl fp
   1d938:	andeq	r5, r3, r8, asr fp
   1d93c:	andeq	r5, r3, r8, lsl #23
   1d940:	push	{r4, r5, r6, lr}
   1d944:	sub	sp, sp, #24
   1d948:	ldr	r5, [pc, #284]	; 1da6c <g_strcmp0@plt+0x88a0>
   1d94c:	mov	r0, r1
   1d950:	mov	r6, #0
   1d954:	ldr	r3, [r5]
   1d958:	mov	r4, r1
   1d95c:	add	r1, sp, #16
   1d960:	str	r3, [sp, #20]
   1d964:	str	r6, [sp, #16]
   1d968:	bl	14f5c <g_spawn_command_line_async@plt>
   1d96c:	ldr	r0, [sp, #16]
   1d970:	cmp	r0, r6
   1d974:	beq	1d9cc <g_strcmp0@plt+0x8800>
   1d978:	ldr	r4, [r0]
   1d97c:	bl	146ec <g_spawn_error_quark@plt>
   1d980:	cmp	r4, r0
   1d984:	beq	1da40 <g_strcmp0@plt+0x8874>
   1d988:	ldr	r4, [sp, #16]
   1d98c:	ldr	r0, [r4]
   1d990:	bl	14c2c <g_quark_to_string@plt>
   1d994:	ldr	r3, [r4, #4]
   1d998:	ldr	ip, [pc, #208]	; 1da70 <g_strcmp0@plt+0x88a4>
   1d99c:	str	r3, [sp, #12]
   1d9a0:	ldr	r2, [pc, #204]	; 1da74 <g_strcmp0@plt+0x88a8>
   1d9a4:	ldr	r3, [pc, #204]	; 1da78 <g_strcmp0@plt+0x88ac>
   1d9a8:	mov	r1, #8
   1d9ac:	str	r0, [sp, #8]
   1d9b0:	ldr	lr, [r4, #8]
   1d9b4:	mov	r0, r6
   1d9b8:	stm	sp, {ip, lr}
   1d9bc:	bl	14668 <g_log@plt>
   1d9c0:	add	r0, sp, #16
   1d9c4:	bl	14dac <g_clear_error@plt>
   1d9c8:	b	1da28 <g_strcmp0@plt+0x885c>
   1d9cc:	mov	r3, r4
   1d9d0:	ldr	r2, [pc, #164]	; 1da7c <g_strcmp0@plt+0x88b0>
   1d9d4:	mov	r1, #32
   1d9d8:	bl	14668 <g_log@plt>
   1d9dc:	ldr	r4, [sp, #16]
   1d9e0:	cmp	r4, #0
   1d9e4:	beq	1da28 <g_strcmp0@plt+0x885c>
   1d9e8:	ldr	r0, [r4]
   1d9ec:	bl	14c2c <g_quark_to_string@plt>
   1d9f0:	ldr	r3, [r4, #4]
   1d9f4:	ldr	ip, [pc, #132]	; 1da80 <g_strcmp0@plt+0x88b4>
   1d9f8:	str	r3, [sp, #12]
   1d9fc:	ldr	r2, [pc, #128]	; 1da84 <g_strcmp0@plt+0x88b8>
   1da00:	ldr	r3, [pc, #112]	; 1da78 <g_strcmp0@plt+0x88ac>
   1da04:	mov	r1, #8
   1da08:	str	r0, [sp, #8]
   1da0c:	ldr	r0, [r4, #8]
   1da10:	str	ip, [sp]
   1da14:	str	r0, [sp, #4]
   1da18:	mov	r0, #0
   1da1c:	bl	14668 <g_log@plt>
   1da20:	add	r0, sp, #16
   1da24:	bl	14dac <g_clear_error@plt>
   1da28:	ldr	r2, [sp, #20]
   1da2c:	ldr	r3, [r5]
   1da30:	cmp	r2, r3
   1da34:	bne	1da68 <g_strcmp0@plt+0x889c>
   1da38:	add	sp, sp, #24
   1da3c:	pop	{r4, r5, r6, pc}
   1da40:	ldr	r4, [sp, #16]
   1da44:	mov	r0, r6
   1da48:	ldr	r2, [pc, #56]	; 1da88 <g_strcmp0@plt+0x88bc>
   1da4c:	ldr	r3, [r4, #8]
   1da50:	mov	r1, #16
   1da54:	str	r6, [sp, #16]
   1da58:	bl	14668 <g_log@plt>
   1da5c:	mov	r0, r4
   1da60:	bl	1453c <g_error_free@plt>
   1da64:	b	1d9dc <g_strcmp0@plt+0x8810>
   1da68:	bl	14b6c <__stack_chk_fail@plt>
   1da6c:	andeq	fp, r4, r8, asr #19
   1da70:	andeq	r1, r0, ip, lsl #20
   1da74:	andeq	r4, r3, r4, ror r6
   1da78:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1da7c:			; <UNDEFINED> instruction: 0x00035bb8
   1da80:	andeq	r1, r0, r1, lsr #20
   1da84:	andeq	r4, r3, r4, lsr #13
   1da88:	andeq	r5, r3, r4, ror #23
   1da8c:	ldrd	r0, [r1, #4]
   1da90:	b	1d940 <g_strcmp0@plt+0x8774>
   1da94:	ldrd	r0, [r0, #4]
   1da98:	b	1d940 <g_strcmp0@plt+0x8774>
   1da9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1daa0:	mov	r8, r0
   1daa4:	sub	sp, sp, #12
   1daa8:	mov	r0, r1
   1daac:	mov	r6, r1
   1dab0:	bl	14650 <g_list_length@plt>
   1dab4:	mov	r4, r0
   1dab8:	bl	287e8 <g_strcmp0@plt+0x1361c>
   1dabc:	mov	r9, r0
   1dac0:	bl	15058 <g_object_ref_sink@plt>
   1dac4:	cmp	r4, #0
   1dac8:	beq	1dbec <g_strcmp0@plt+0x8a20>
   1dacc:	cmp	r6, #0
   1dad0:	beq	1dbec <g_strcmp0@plt+0x8a20>
   1dad4:	ldr	fp, [pc, #284]	; 1dbf8 <g_strcmp0@plt+0x8a2c>
   1dad8:	ldr	r0, [r6]
   1dadc:	bl	147e8 <g_strdup@plt>
   1dae0:	mov	r7, r0
   1dae4:	mov	r0, #12
   1dae8:	bl	14a34 <g_slice_alloc0@plt>
   1daec:	mov	r3, #1
   1daf0:	mov	r4, r0
   1daf4:	mov	r0, r8
   1daf8:	str	r3, [r4]
   1dafc:	bl	14404 <g_object_ref@plt>
   1db00:	ldr	r3, [r8, #24]
   1db04:	mov	r2, #0
   1db08:	ldr	r1, [r3, #8]
   1db0c:	str	r0, [r4, #4]
   1db10:	ldr	r0, [pc, #228]	; 1dbfc <g_strcmp0@plt+0x8a30>
   1db14:	bl	14dc4 <g_strconcat@plt>
   1db18:	mov	r2, #0
   1db1c:	mov	r1, r7
   1db20:	mov	sl, r0
   1db24:	bl	14dc4 <g_strconcat@plt>
   1db28:	mov	r5, r0
   1db2c:	mov	r0, sl
   1db30:	bl	14bd8 <g_free@plt>
   1db34:	str	r5, [r4, #8]
   1db38:	bl	285b8 <g_strcmp0@plt+0x133ec>
   1db3c:	mov	r5, r0
   1db40:	bl	15058 <g_object_ref_sink@plt>
   1db44:	ldr	r1, [pc, #180]	; 1dc00 <g_strcmp0@plt+0x8a34>
   1db48:	ldr	r0, [pc, #180]	; 1dc04 <g_strcmp0@plt+0x8a38>
   1db4c:	bl	14fc8 <g_dgettext@plt>
   1db50:	mov	r2, #0
   1db54:	mov	r1, r7
   1db58:	bl	14dc4 <g_strconcat@plt>
   1db5c:	mov	r1, r0
   1db60:	mov	sl, r0
   1db64:	mov	r0, r5
   1db68:	bl	14ecc <gtk_menu_item_set_label@plt>
   1db6c:	mov	r0, sl
   1db70:	bl	14bd8 <g_free@plt>
   1db74:	mcr	15, 0, r0, cr7, cr10, {5}
   1db78:	ldrex	r3, [r4]
   1db7c:	add	r3, r3, #1
   1db80:	strex	r2, r3, [r4]
   1db84:	cmp	r2, #0
   1db88:	bne	1db78 <g_strcmp0@plt+0x89ac>
   1db8c:	mov	r3, #0
   1db90:	mcr	15, 0, r0, cr7, cr10, {5}
   1db94:	ldr	r2, [pc, #108]	; 1dc08 <g_strcmp0@plt+0x8a3c>
   1db98:	ldr	r1, [pc, #108]	; 1dc0c <g_strcmp0@plt+0x8a40>
   1db9c:	str	r3, [sp, #4]
   1dba0:	str	fp, [sp]
   1dba4:	mov	r3, r4
   1dba8:	mov	r0, r5
   1dbac:	bl	14a1c <g_signal_connect_data@plt>
   1dbb0:	mov	r0, r5
   1dbb4:	bl	14e84 <gtk_widget_show@plt>
   1dbb8:	mov	r0, r9
   1dbbc:	mov	r1, r5
   1dbc0:	bl	1498c <gtk_container_add@plt>
   1dbc4:	subs	r0, r5, #0
   1dbc8:	beq	1dbd0 <g_strcmp0@plt+0x8a04>
   1dbcc:	bl	14e90 <g_object_unref@plt>
   1dbd0:	mov	r0, r7
   1dbd4:	bl	14bd8 <g_free@plt>
   1dbd8:	mov	r0, r4
   1dbdc:	bl	18634 <g_strcmp0@plt+0x3468>
   1dbe0:	ldr	r6, [r6, #4]
   1dbe4:	cmp	r6, #0
   1dbe8:	bne	1dad8 <g_strcmp0@plt+0x890c>
   1dbec:	mov	r0, r9
   1dbf0:	add	sp, sp, #12
   1dbf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dbf8:	andeq	r8, r1, r4, lsr r6
   1dbfc:	strdeq	r5, [r3], -r8
   1dc00:	andeq	r5, r3, r8, lsr #24
   1dc04:	andeq	r4, r3, r8, asr #11
   1dc08:	andeq	sp, r1, ip, lsl #21
   1dc0c:	andeq	r7, r3, r0, lsl #16
   1dc10:	ldr	r3, [r0, #24]
   1dc14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dc18:	mov	r6, #1
   1dc1c:	sub	sp, sp, #20
   1dc20:	str	r6, [r3, #20]
   1dc24:	mov	r4, r0
   1dc28:	bl	1d4c0 <g_strcmp0@plt+0x82f4>
   1dc2c:	mov	r5, r0
   1dc30:	bl	14650 <g_list_length@plt>
   1dc34:	subs	r7, r0, #0
   1dc38:	bne	1dc64 <g_strcmp0@plt+0x8a98>
   1dc3c:	ldr	r3, [r4, #24]
   1dc40:	str	r7, [r3, #20]
   1dc44:	cmp	r5, #0
   1dc48:	beq	1dc58 <g_strcmp0@plt+0x8a8c>
   1dc4c:	mov	r0, r5
   1dc50:	ldr	r1, [pc, #544]	; 1de78 <g_strcmp0@plt+0x8cac>
   1dc54:	bl	14b60 <g_list_free_full@plt>
   1dc58:	mov	r0, #0
   1dc5c:	add	sp, sp, #20
   1dc60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dc64:	mov	r0, #12
   1dc68:	bl	14a34 <g_slice_alloc0@plt>
   1dc6c:	sub	r7, r7, #1
   1dc70:	mov	r8, r0
   1dc74:	mov	r0, r4
   1dc78:	str	r6, [r8]
   1dc7c:	bl	14404 <g_object_ref@plt>
   1dc80:	mov	r1, r5
   1dc84:	str	r0, [r8, #4]
   1dc88:	mov	r0, r4
   1dc8c:	bl	1da9c <g_strcmp0@plt+0x88d0>
   1dc90:	ldr	r3, [r4, #24]
   1dc94:	mov	r2, #0
   1dc98:	ldr	r1, [r3, #8]
   1dc9c:	mov	r6, r0
   1dca0:	ldr	r0, [pc, #468]	; 1de7c <g_strcmp0@plt+0x8cb0>
   1dca4:	bl	14dc4 <g_strconcat@plt>
   1dca8:	mov	r1, r7
   1dcac:	mov	r9, r0
   1dcb0:	mov	r0, r5
   1dcb4:	bl	15010 <g_list_nth_data@plt>
   1dcb8:	mov	r2, #0
   1dcbc:	mov	r1, r0
   1dcc0:	mov	r0, r9
   1dcc4:	bl	14dc4 <g_strconcat@plt>
   1dcc8:	mov	sl, r0
   1dccc:	mov	r0, r9
   1dcd0:	bl	14bd8 <g_free@plt>
   1dcd4:	ldr	r3, [r4, #24]
   1dcd8:	mov	r2, #0
   1dcdc:	ldr	r0, [pc, #412]	; 1de80 <g_strcmp0@plt+0x8cb4>
   1dce0:	ldr	r1, [r3, #8]
   1dce4:	bl	14dc4 <g_strconcat@plt>
   1dce8:	mov	r1, r7
   1dcec:	mov	r9, r0
   1dcf0:	mov	r0, r5
   1dcf4:	bl	15010 <g_list_nth_data@plt>
   1dcf8:	mov	r2, #0
   1dcfc:	mov	r1, r0
   1dd00:	mov	r0, r9
   1dd04:	bl	14dc4 <g_strconcat@plt>
   1dd08:	mov	r7, r0
   1dd0c:	mov	r0, r9
   1dd10:	bl	14bd8 <g_free@plt>
   1dd14:	ldr	r0, [pc, #360]	; 1de84 <g_strcmp0@plt+0x8cb8>
   1dd18:	str	r7, [r8, #8]
   1dd1c:	bl	147e8 <g_strdup@plt>
   1dd20:	mov	fp, r0
   1dd24:	ldr	r0, [pc, #348]	; 1de88 <g_strcmp0@plt+0x8cbc>
   1dd28:	bl	147e8 <g_strdup@plt>
   1dd2c:	ldr	r3, [r4, #24]
   1dd30:	ldr	r7, [r3, #4]
   1dd34:	cmp	r7, #0
   1dd38:	mov	r9, r0
   1dd3c:	beq	1de18 <g_strcmp0@plt+0x8c4c>
   1dd40:	mov	r0, r7
   1dd44:	mov	r1, r6
   1dd48:	bl	28974 <g_strcmp0@plt+0x137a8>
   1dd4c:	ldr	r1, [pc, #312]	; 1de8c <g_strcmp0@plt+0x8cc0>
   1dd50:	ldr	r3, [pc, #312]	; 1de90 <g_strcmp0@plt+0x8cc4>
   1dd54:	ldr	r2, [pc, #312]	; 1de94 <g_strcmp0@plt+0x8cc8>
   1dd58:	ldr	r0, [r1]
   1dd5c:	ldr	r1, [pc, #308]	; 1de98 <g_strcmp0@plt+0x8ccc>
   1dd60:	bl	2a300 <g_strcmp0@plt+0x15134>
   1dd64:	ldr	r1, [pc, #304]	; 1de9c <g_strcmp0@plt+0x8cd0>
   1dd68:	str	r0, [sp, #12]
   1dd6c:	bl	151cc <g_strcmp0@plt>
   1dd70:	ldr	r3, [sp, #12]
   1dd74:	mov	r7, r0
   1dd78:	mov	r0, r3
   1dd7c:	bl	14bd8 <g_free@plt>
   1dd80:	cmp	r7, #0
   1dd84:	beq	1ddd4 <g_strcmp0@plt+0x8c08>
   1dd88:	ldr	r3, [r4, #24]
   1dd8c:	ldr	r0, [r3, #4]
   1dd90:	bl	28968 <g_strcmp0@plt+0x1379c>
   1dd94:	mov	r0, r9
   1dd98:	bl	14bd8 <g_free@plt>
   1dd9c:	mov	r0, fp
   1dda0:	bl	14bd8 <g_free@plt>
   1dda4:	mov	r0, sl
   1dda8:	bl	14bd8 <g_free@plt>
   1ddac:	mov	r0, r8
   1ddb0:	bl	18694 <g_strcmp0@plt+0x34c8>
   1ddb4:	ldr	r3, [r4, #24]
   1ddb8:	mov	r2, #0
   1ddbc:	cmp	r6, #0
   1ddc0:	str	r2, [r3, #20]
   1ddc4:	beq	1dc44 <g_strcmp0@plt+0x8a78>
   1ddc8:	mov	r0, r6
   1ddcc:	bl	14e90 <g_object_unref@plt>
   1ddd0:	b	1dc44 <g_strcmp0@plt+0x8a78>
   1ddd4:	ldr	r3, [r4, #24]
   1ddd8:	ldr	r0, [r3, #4]
   1dddc:	mcr	15, 0, r0, cr7, cr10, {5}
   1dde0:	ldrex	r3, [r8]
   1dde4:	add	r3, r3, #1
   1dde8:	strex	r2, r3, [r8]
   1ddec:	cmp	r2, #0
   1ddf0:	bne	1dde0 <g_strcmp0@plt+0x8c14>
   1ddf4:	ldr	r3, [pc, #164]	; 1dea0 <g_strcmp0@plt+0x8cd4>
   1ddf8:	mcr	15, 0, r0, cr7, cr10, {5}
   1ddfc:	mov	r2, r9
   1de00:	str	r3, [sp, #4]
   1de04:	str	r8, [sp]
   1de08:	ldr	r3, [pc, #148]	; 1dea4 <g_strcmp0@plt+0x8cd8>
   1de0c:	ldr	r1, [pc, #148]	; 1dea8 <g_strcmp0@plt+0x8cdc>
   1de10:	bl	28978 <g_strcmp0@plt+0x137ac>
   1de14:	b	1dd88 <g_strcmp0@plt+0x8bbc>
   1de18:	ldr	r1, [pc, #140]	; 1deac <g_strcmp0@plt+0x8ce0>
   1de1c:	ldr	r0, [pc, #140]	; 1deb0 <g_strcmp0@plt+0x8ce4>
   1de20:	bl	14fc8 <g_dgettext@plt>
   1de24:	mov	r3, r6
   1de28:	ldr	r1, [pc, #132]	; 1deb4 <g_strcmp0@plt+0x8ce8>
   1de2c:	mov	r2, r0
   1de30:	ldr	r0, [pc, #128]	; 1deb8 <g_strcmp0@plt+0x8cec>
   1de34:	bl	289f8 <g_strcmp0@plt+0x1382c>
   1de38:	ldr	r3, [r4, #24]
   1de3c:	mov	r2, r0
   1de40:	ldr	r0, [r3, #4]
   1de44:	cmp	r0, #0
   1de48:	beq	1de60 <g_strcmp0@plt+0x8c94>
   1de4c:	str	r2, [sp, #12]
   1de50:	bl	14e90 <g_object_unref@plt>
   1de54:	ldr	r3, [r4, #24]
   1de58:	ldr	r2, [sp, #12]
   1de5c:	str	r7, [r3, #4]
   1de60:	str	r2, [r3, #4]
   1de64:	mov	r0, r2
   1de68:	bl	28964 <g_strcmp0@plt+0x13798>
   1de6c:	ldr	r3, [r4, #24]
   1de70:	ldr	r7, [r3, #4]
   1de74:	b	1dd40 <g_strcmp0@plt+0x8b74>
   1de78:	andeq	r7, r1, r4, ror #4
   1de7c:	strdeq	r5, [r3], -r8
   1de80:	andeq	r5, r3, r0, lsr ip
   1de84:	andeq	r5, r3, r8, asr #24
   1de88:	andeq	r5, r3, ip, asr ip
   1de8c:	andeq	ip, r4, r4, asr #32
   1de90:	andeq	r5, r3, r8, lsr #25
   1de94:	andeq	r4, r3, r4, asr r9
   1de98:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1de9c:	andeq	r4, r3, ip, lsr r8
   1dea0:	muleq	r1, r4, r6
   1dea4:	muleq	r1, r4, sl
   1dea8:			; <UNDEFINED> instruction: 0x00035cb4
   1deac:	andeq	r5, r3, r0, ror ip
   1deb0:	andeq	r4, r3, r8, asr #11
   1deb4:	muleq	r3, r4, ip
   1deb8:	muleq	r3, ip, ip
   1debc:	b	1dc10 <g_strcmp0@plt+0x8a44>
   1dec0:	push	{r4, r5, r6, lr}
   1dec4:	mcr	15, 0, r0, cr7, cr10, {5}
   1dec8:	ldr	r4, [pc, #92]	; 1df2c <g_strcmp0@plt+0x8d60>
   1decc:	ldr	r5, [r4, #492]	; 0x1ec
   1ded0:	mcr	15, 0, r0, cr7, cr10, {5}
   1ded4:	cmp	r5, #0
   1ded8:	beq	1dee4 <g_strcmp0@plt+0x8d18>
   1dedc:	ldr	r0, [r4, #492]	; 0x1ec
   1dee0:	pop	{r4, r5, r6, pc}
   1dee4:	add	r0, r4, #492	; 0x1ec
   1dee8:	bl	14a28 <g_once_init_enter@plt>
   1deec:	cmp	r0, #0
   1def0:	beq	1dedc <g_strcmp0@plt+0x8d10>
   1def4:	bl	1b3e0 <g_strcmp0@plt+0x6214>
   1def8:	mov	r3, r5
   1defc:	ldr	r2, [pc, #44]	; 1df30 <g_strcmp0@plt+0x8d64>
   1df00:	ldr	r1, [pc, #44]	; 1df34 <g_strcmp0@plt+0x8d68>
   1df04:	bl	14428 <g_type_register_static@plt>
   1df08:	mov	r1, #24
   1df0c:	mov	r5, r0
   1df10:	bl	14c08 <g_type_add_instance_private@plt>
   1df14:	mov	r1, r5
   1df18:	str	r0, [r4, #156]	; 0x9c
   1df1c:	add	r0, r4, #492	; 0x1ec
   1df20:	bl	14ed8 <g_once_init_leave@plt>
   1df24:	ldr	r0, [r4, #492]	; 0x1ec
   1df28:	pop	{r4, r5, r6, pc}
   1df2c:	ldrdeq	ip, [r4], -r8
   1df30:	andeq	r4, r3, ip, ror lr
   1df34:	andeq	r5, r3, r8, asr #25
   1df38:	push	{r4, lr}
   1df3c:	bl	1dec0 <g_strcmp0@plt+0x8cf4>
   1df40:	pop	{r4, lr}
   1df44:	b	1d088 <g_strcmp0@plt+0x7ebc>
   1df48:	ldr	r3, [pc, #12]	; 1df5c <g_strcmp0@plt+0x8d90>
   1df4c:	ldr	r3, [r3]
   1df50:	add	r3, r0, r3
   1df54:	str	r3, [r0, #12]
   1df58:	bx	lr
   1df5c:	andeq	ip, r4, r8, asr #5
   1df60:	ldr	r3, [r0, #12]
   1df64:	push	{r4, lr}
   1df68:	mov	r4, r0
   1df6c:	ldr	r0, [r3]
   1df70:	cmp	r0, #0
   1df74:	beq	1df88 <g_strcmp0@plt+0x8dbc>
   1df78:	bl	14ea8 <g_array_unref@plt>
   1df7c:	ldr	r3, [r4, #12]
   1df80:	mov	r2, #0
   1df84:	str	r2, [r3]
   1df88:	ldr	r3, [pc, #16]	; 1dfa0 <g_strcmp0@plt+0x8dd4>
   1df8c:	mov	r0, r4
   1df90:	pop	{r4, lr}
   1df94:	ldr	r3, [r3, #4]
   1df98:	ldr	r3, [r3, #24]
   1df9c:	bx	r3
   1dfa0:	andeq	ip, r4, r8, asr #5
   1dfa4:	ldr	r0, [r0]
   1dfa8:	cmp	r0, #0
   1dfac:	bxeq	lr
   1dfb0:	b	3002c <g_strcmp0@plt+0x1ae60>
   1dfb4:	push	{r4, r5, r6, r7, r8, lr}
   1dfb8:	mov	r6, r1
   1dfbc:	mov	r4, r0
   1dfc0:	mov	r1, #4
   1dfc4:	add	r0, r6, #1
   1dfc8:	bl	14f14 <g_malloc0_n@plt>
   1dfcc:	cmp	r6, #0
   1dfd0:	mov	r7, r0
   1dfd4:	ble	1dff8 <g_strcmp0@plt+0x8e2c>
   1dfd8:	sub	r4, r4, #4
   1dfdc:	add	r6, r4, r6, lsl #2
   1dfe0:	sub	r5, r0, #4
   1dfe4:	ldr	r0, [r4, #4]!
   1dfe8:	bl	147e8 <g_strdup@plt>
   1dfec:	cmp	r4, r6
   1dff0:	str	r0, [r5, #4]!
   1dff4:	bne	1dfe4 <g_strcmp0@plt+0x8e18>
   1dff8:	mov	r0, r7
   1dffc:	pop	{r4, r5, r6, r7, r8, pc}
   1e000:	push	{r4, lr}
   1e004:	mov	r4, r0
   1e008:	bl	14f8c <g_type_class_peek_parent@plt>
   1e00c:	ldr	r3, [pc, #24]	; 1e02c <g_strcmp0@plt+0x8e60>
   1e010:	mov	r1, r3
   1e014:	str	r0, [r3, #4]
   1e018:	mov	r0, r4
   1e01c:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   1e020:	ldr	r3, [pc, #8]	; 1e030 <g_strcmp0@plt+0x8e64>
   1e024:	str	r3, [r4, #24]
   1e028:	pop	{r4, pc}
   1e02c:	andeq	ip, r4, r8, asr #5
   1e030:	andeq	sp, r1, r0, ror #30
   1e034:	push	{r4, r5, r6, lr}
   1e038:	subs	r6, r0, #0
   1e03c:	beq	1e06c <g_strcmp0@plt+0x8ea0>
   1e040:	cmp	r1, #0
   1e044:	ble	1e06c <g_strcmp0@plt+0x8ea0>
   1e048:	add	r1, r6, r1, lsl #2
   1e04c:	sub	r5, r1, #4
   1e050:	sub	r4, r6, #4
   1e054:	ldr	r3, [r4, #4]!
   1e058:	subs	r0, r3, #0
   1e05c:	beq	1e064 <g_strcmp0@plt+0x8e98>
   1e060:	bl	14bd8 <g_free@plt>
   1e064:	cmp	r4, r5
   1e068:	bne	1e054 <g_strcmp0@plt+0x8e88>
   1e06c:	mov	r0, r6
   1e070:	pop	{r4, r5, r6, lr}
   1e074:	b	14bd8 <g_free@plt>
   1e078:	ldr	r3, [pc, #1360]	; 1e5d0 <g_strcmp0@plt+0x9404>
   1e07c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e080:	sub	sp, sp, #124	; 0x7c
   1e084:	ldr	r3, [r3]
   1e088:	mov	r4, #0
   1e08c:	ldr	r0, [pc, #1344]	; 1e5d4 <g_strcmp0@plt+0x9408>
   1e090:	str	r3, [sp, #116]	; 0x74
   1e094:	str	r4, [sp, #48]	; 0x30
   1e098:	bl	30a94 <g_strcmp0@plt+0x1b8c8>
   1e09c:	mov	r5, r0
   1e0a0:	bl	14fa4 <g_file_new_for_path@plt>
   1e0a4:	mov	r6, r0
   1e0a8:	str	r0, [sp, #28]
   1e0ac:	mov	r0, r5
   1e0b0:	bl	14bd8 <g_free@plt>
   1e0b4:	mov	r1, #1
   1e0b8:	mov	r2, #4
   1e0bc:	mov	r0, r1
   1e0c0:	bl	14a70 <g_array_new@plt>
   1e0c4:	ldr	r1, [pc, #1292]	; 1e5d8 <g_strcmp0@plt+0x940c>
   1e0c8:	str	r0, [sp, #20]
   1e0cc:	bl	14e3c <g_array_set_clear_func@plt>
   1e0d0:	mov	r0, r6
   1e0d4:	bl	146f8 <g_file_get_path@plt>
   1e0d8:	ldr	r2, [pc, #1276]	; 1e5dc <g_strcmp0@plt+0x9410>
   1e0dc:	mov	r1, #32
   1e0e0:	mov	r3, r0
   1e0e4:	mov	r5, r0
   1e0e8:	mov	r0, r4
   1e0ec:	bl	14668 <g_log@plt>
   1e0f0:	mov	r0, r5
   1e0f4:	bl	14bd8 <g_free@plt>
   1e0f8:	mov	r1, r4
   1e0fc:	mov	r0, r6
   1e100:	bl	147f4 <g_file_query_exists@plt>
   1e104:	cmp	r0, r4
   1e108:	bne	1e140 <g_strcmp0@plt+0x8f74>
   1e10c:	ldr	r3, [sp, #28]
   1e110:	cmp	r3, #0
   1e114:	beq	1e120 <g_strcmp0@plt+0x8f54>
   1e118:	mov	r0, r3
   1e11c:	bl	14e90 <g_object_unref@plt>
   1e120:	ldr	r3, [pc, #1192]	; 1e5d0 <g_strcmp0@plt+0x9404>
   1e124:	ldr	r2, [sp, #116]	; 0x74
   1e128:	ldr	r0, [sp, #20]
   1e12c:	ldr	r3, [r3]
   1e130:	cmp	r2, r3
   1e134:	bne	1e5c4 <g_strcmp0@plt+0x93f8>
   1e138:	add	sp, sp, #124	; 0x7c
   1e13c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e140:	mov	r1, r4
   1e144:	add	r2, sp, #48	; 0x30
   1e148:	ldr	r0, [sp, #28]
   1e14c:	bl	14728 <g_file_read@plt>
   1e150:	ldr	r4, [sp, #48]	; 0x30
   1e154:	cmp	r4, #0
   1e158:	str	r0, [sp, #32]
   1e15c:	beq	1e180 <g_strcmp0@plt+0x8fb4>
   1e160:	mov	ip, #0
   1e164:	ldr	r3, [r4, #8]
   1e168:	mov	r0, ip
   1e16c:	ldr	r2, [pc, #1132]	; 1e5e0 <g_strcmp0@plt+0x9414>
   1e170:	mov	r1, #4
   1e174:	str	ip, [sp, #48]	; 0x30
   1e178:	bl	14668 <g_log@plt>
   1e17c:	b	1e17c <g_strcmp0@plt+0x8fb0>
   1e180:	bl	14cb0 <g_data_input_stream_new@plt>
   1e184:	mov	r9, r4
   1e188:	str	r0, [sp, #24]
   1e18c:	mov	r2, #0
   1e190:	add	r3, sp, #48	; 0x30
   1e194:	mov	r1, r2
   1e198:	ldr	r0, [sp, #24]
   1e19c:	bl	14c38 <g_data_input_stream_read_line@plt>
   1e1a0:	ldr	r3, [sp, #48]	; 0x30
   1e1a4:	cmp	r3, #0
   1e1a8:	str	r0, [sp, #16]
   1e1ac:	mov	r0, r4
   1e1b0:	beq	1e1e8 <g_strcmp0@plt+0x901c>
   1e1b4:	bl	14bd8 <g_free@plt>
   1e1b8:	ldr	r3, [sp, #24]
   1e1bc:	cmp	r3, #0
   1e1c0:	beq	1e1cc <g_strcmp0@plt+0x9000>
   1e1c4:	mov	r0, r3
   1e1c8:	bl	14e90 <g_object_unref@plt>
   1e1cc:	ldr	r3, [sp, #32]
   1e1d0:	cmp	r3, #0
   1e1d4:	beq	1e1e0 <g_strcmp0@plt+0x9014>
   1e1d8:	ldr	r0, [sp, #32]
   1e1dc:	bl	14e90 <g_object_unref@plt>
   1e1e0:	ldr	r4, [sp, #48]	; 0x30
   1e1e4:	b	1e160 <g_strcmp0@plt+0x8f94>
   1e1e8:	bl	14bd8 <g_free@plt>
   1e1ec:	ldr	r3, [sp, #16]
   1e1f0:	cmp	r3, #0
   1e1f4:	beq	1e504 <g_strcmp0@plt+0x9338>
   1e1f8:	mov	r1, #1
   1e1fc:	ldr	r0, [sp, #16]
   1e200:	bl	14590 <g_strndup@plt>
   1e204:	subs	r3, r0, #0
   1e208:	str	r3, [sp, #36]	; 0x24
   1e20c:	beq	1e260 <g_strcmp0@plt+0x9094>
   1e210:	bl	14bcc <g_quark_from_string@plt>
   1e214:	ldr	r3, [pc, #968]	; 1e5e4 <g_strcmp0@plt+0x9418>
   1e218:	mov	r4, r0
   1e21c:	ldr	r0, [r3, #8]
   1e220:	cmp	r0, #0
   1e224:	beq	1e39c <g_strcmp0@plt+0x91d0>
   1e228:	cmp	r0, r4
   1e22c:	beq	1e3b4 <g_strcmp0@plt+0x91e8>
   1e230:	ldr	r3, [pc, #940]	; 1e5e4 <g_strcmp0@plt+0x9418>
   1e234:	ldr	r0, [r3, #12]
   1e238:	cmp	r0, #0
   1e23c:	beq	1e388 <g_strcmp0@plt+0x91bc>
   1e240:	cmp	r0, r4
   1e244:	bne	1e27c <g_strcmp0@plt+0x90b0>
   1e248:	ldr	r0, [sp, #36]	; 0x24
   1e24c:	bl	14bd8 <g_free@plt>
   1e250:	mov	r0, #0
   1e254:	ldr	r4, [sp, #16]
   1e258:	bl	14bd8 <g_free@plt>
   1e25c:	b	1e18c <g_strcmp0@plt+0x8fc0>
   1e260:	ldr	r3, [pc, #892]	; 1e5e4 <g_strcmp0@plt+0x9418>
   1e264:	ldr	r4, [r3, #8]
   1e268:	cmp	r4, #0
   1e26c:	beq	1e39c <g_strcmp0@plt+0x91d0>
   1e270:	ldr	r4, [r3, #12]
   1e274:	cmp	r4, #0
   1e278:	beq	1e388 <g_strcmp0@plt+0x91bc>
   1e27c:	add	r4, sp, #56	; 0x38
   1e280:	mov	r2, #0
   1e284:	ldr	r1, [pc, #860]	; 1e5e8 <g_strcmp0@plt+0x941c>
   1e288:	ldr	r0, [sp, #16]
   1e28c:	str	r9, [sp, #56]	; 0x38
   1e290:	str	r9, [r4, #4]
   1e294:	str	r9, [r4, #8]
   1e298:	str	r9, [r4, #12]
   1e29c:	str	r9, [r4, #16]
   1e2a0:	bl	14530 <g_strsplit_set@plt>
   1e2a4:	subs	r6, r0, #0
   1e2a8:	moveq	r5, r6
   1e2ac:	ldr	r0, [r6]
   1e2b0:	beq	1e2d4 <g_strcmp0@plt+0x9108>
   1e2b4:	cmp	r0, #0
   1e2b8:	beq	1e4fc <g_strcmp0@plt+0x9330>
   1e2bc:	mov	r3, r6
   1e2c0:	mov	r5, #0
   1e2c4:	ldr	r2, [r3, #4]!
   1e2c8:	add	r5, r5, #1
   1e2cc:	cmp	r2, #0
   1e2d0:	bne	1e2c4 <g_strcmp0@plt+0x90f8>
   1e2d4:	bl	147e8 <g_strdup@plt>
   1e2d8:	mov	r1, r5
   1e2dc:	mov	r7, r4
   1e2e0:	mov	fp, r0
   1e2e4:	mov	r0, r6
   1e2e8:	bl	1dfb4 <g_strcmp0@plt+0x8de8>
   1e2ec:	mov	sl, r0
   1e2f0:	ldr	r0, [pc, #756]	; 1e5ec <g_strcmp0@plt+0x9420>
   1e2f4:	bl	147e8 <g_strdup@plt>
   1e2f8:	mov	r8, r0
   1e2fc:	mov	r0, #0
   1e300:	bl	14bd8 <g_free@plt>
   1e304:	mov	r1, #0
   1e308:	mov	r0, r1
   1e30c:	bl	1e034 <g_strcmp0@plt+0x8e68>
   1e310:	mov	r0, #0
   1e314:	bl	14bd8 <g_free@plt>
   1e318:	str	r8, [sp, #72]	; 0x48
   1e31c:	str	fp, [sp, #56]	; 0x38
   1e320:	str	sl, [sp, #60]	; 0x3c
   1e324:	str	r5, [sp, #64]	; 0x40
   1e328:	str	r9, [sp, #68]	; 0x44
   1e32c:	ldm	r7!, {r0, r1, r2, r3}
   1e330:	add	lr, sp, #76	; 0x4c
   1e334:	mov	r8, lr
   1e338:	add	ip, sp, #96	; 0x60
   1e33c:	stmia	lr!, {r0, r1, r2, r3}
   1e340:	ldm	r8!, {r0, r1, r2, r3}
   1e344:	ldr	r7, [r7]
   1e348:	stmia	ip!, {r0, r1, r2, r3}
   1e34c:	add	r0, sp, #96	; 0x60
   1e350:	str	r7, [lr]
   1e354:	str	r7, [ip]
   1e358:	bl	2ffd0 <g_strcmp0@plt+0x1ae04>
   1e35c:	add	r1, sp, #52	; 0x34
   1e360:	mov	r2, #1
   1e364:	str	r0, [sp, #52]	; 0x34
   1e368:	ldr	r0, [sp, #20]
   1e36c:	bl	14860 <g_array_append_vals@plt>
   1e370:	mov	r0, r4
   1e374:	bl	2fff8 <g_strcmp0@plt+0x1ae2c>
   1e378:	mov	r1, r5
   1e37c:	mov	r0, r6
   1e380:	bl	1e034 <g_strcmp0@plt+0x8e68>
   1e384:	b	1e248 <g_strcmp0@plt+0x907c>
   1e388:	ldr	r0, [pc, #608]	; 1e5f0 <g_strcmp0@plt+0x9424>
   1e38c:	bl	14d64 <g_quark_from_static_string@plt>
   1e390:	ldr	r3, [pc, #588]	; 1e5e4 <g_strcmp0@plt+0x9418>
   1e394:	str	r0, [r3, #12]
   1e398:	b	1e240 <g_strcmp0@plt+0x9074>
   1e39c:	ldr	r0, [pc, #592]	; 1e5f4 <g_strcmp0@plt+0x9428>
   1e3a0:	bl	14d64 <g_quark_from_static_string@plt>
   1e3a4:	ldr	r3, [pc, #568]	; 1e5e4 <g_strcmp0@plt+0x9418>
   1e3a8:	cmp	r0, r4
   1e3ac:	str	r0, [r3, #8]
   1e3b0:	bne	1e230 <g_strcmp0@plt+0x9064>
   1e3b4:	add	r4, sp, #56	; 0x38
   1e3b8:	ldr	r0, [pc, #556]	; 1e5ec <g_strcmp0@plt+0x9420>
   1e3bc:	str	r9, [sp, #56]	; 0x38
   1e3c0:	str	r9, [r4, #4]
   1e3c4:	str	r9, [r4, #8]
   1e3c8:	str	r9, [r4, #12]
   1e3cc:	str	r9, [r4, #16]
   1e3d0:	bl	145fc <g_string_new@plt>
   1e3d4:	ldr	r1, [sp, #16]
   1e3d8:	mov	r7, r0
   1e3dc:	bl	15064 <g_string_append@plt>
   1e3e0:	mov	r2, #1
   1e3e4:	mov	r1, #0
   1e3e8:	mov	r0, r7
   1e3ec:	bl	15088 <g_string_erase@plt>
   1e3f0:	ldr	r0, [r7]
   1e3f4:	mov	r2, #0
   1e3f8:	ldr	r1, [pc, #488]	; 1e5e8 <g_strcmp0@plt+0x941c>
   1e3fc:	bl	14530 <g_strsplit_set@plt>
   1e400:	subs	r6, r0, #0
   1e404:	moveq	r5, r6
   1e408:	ldr	r0, [r6]
   1e40c:	beq	1e430 <g_strcmp0@plt+0x9264>
   1e410:	cmp	r0, #0
   1e414:	beq	1e5c8 <g_strcmp0@plt+0x93fc>
   1e418:	mov	r3, r6
   1e41c:	mov	r5, #0
   1e420:	ldr	r2, [r3, #4]!
   1e424:	add	r5, r5, #1
   1e428:	cmp	r2, #0
   1e42c:	bne	1e420 <g_strcmp0@plt+0x9254>
   1e430:	bl	147e8 <g_strdup@plt>
   1e434:	mov	r1, r5
   1e438:	mov	sl, r4
   1e43c:	mov	r8, #1
   1e440:	str	r0, [sp, #44]	; 0x2c
   1e444:	mov	r0, r6
   1e448:	bl	1dfb4 <g_strcmp0@plt+0x8de8>
   1e44c:	mov	fp, r0
   1e450:	ldr	r0, [pc, #404]	; 1e5ec <g_strcmp0@plt+0x9420>
   1e454:	bl	147e8 <g_strdup@plt>
   1e458:	str	r0, [sp, #40]	; 0x28
   1e45c:	mov	r0, #0
   1e460:	bl	14bd8 <g_free@plt>
   1e464:	mov	r1, #0
   1e468:	mov	r0, r1
   1e46c:	bl	1e034 <g_strcmp0@plt+0x8e68>
   1e470:	mov	r0, #0
   1e474:	bl	14bd8 <g_free@plt>
   1e478:	ldr	r3, [sp, #44]	; 0x2c
   1e47c:	ldr	r2, [sp, #40]	; 0x28
   1e480:	str	fp, [sp, #60]	; 0x3c
   1e484:	str	r2, [sp, #72]	; 0x48
   1e488:	str	r3, [sp, #56]	; 0x38
   1e48c:	str	r5, [sp, #64]	; 0x40
   1e490:	str	r8, [sp, #68]	; 0x44
   1e494:	ldm	sl!, {r0, r1, r2, r3}
   1e498:	add	lr, sp, #76	; 0x4c
   1e49c:	mov	fp, lr
   1e4a0:	add	ip, sp, #96	; 0x60
   1e4a4:	stmia	lr!, {r0, r1, r2, r3}
   1e4a8:	ldm	fp!, {r0, r1, r2, r3}
   1e4ac:	ldr	sl, [sl]
   1e4b0:	stmia	ip!, {r0, r1, r2, r3}
   1e4b4:	add	r0, sp, #96	; 0x60
   1e4b8:	str	sl, [lr]
   1e4bc:	str	sl, [ip]
   1e4c0:	bl	2ffd0 <g_strcmp0@plt+0x1ae04>
   1e4c4:	mov	r2, r8
   1e4c8:	add	r1, sp, #52	; 0x34
   1e4cc:	str	r0, [sp, #52]	; 0x34
   1e4d0:	ldr	r0, [sp, #20]
   1e4d4:	bl	14860 <g_array_append_vals@plt>
   1e4d8:	mov	r0, r4
   1e4dc:	bl	2fff8 <g_strcmp0@plt+0x1ae2c>
   1e4e0:	mov	r1, r5
   1e4e4:	mov	r0, r6
   1e4e8:	bl	1e034 <g_strcmp0@plt+0x8e68>
   1e4ec:	mov	r1, r8
   1e4f0:	mov	r0, r7
   1e4f4:	bl	14e0c <g_string_free@plt>
   1e4f8:	b	1e248 <g_strcmp0@plt+0x907c>
   1e4fc:	mov	r5, r0
   1e500:	b	1e2d4 <g_strcmp0@plt+0x9108>
   1e504:	ldr	r4, [sp, #16]
   1e508:	mov	r0, r4
   1e50c:	bl	14bd8 <g_free@plt>
   1e510:	mov	r0, r4
   1e514:	bl	14bd8 <g_free@plt>
   1e518:	ldr	r3, [sp, #24]
   1e51c:	cmp	r3, #0
   1e520:	beq	1e52c <g_strcmp0@plt+0x9360>
   1e524:	ldr	r0, [sp, #24]
   1e528:	bl	14e90 <g_object_unref@plt>
   1e52c:	ldr	r3, [sp, #32]
   1e530:	cmp	r3, #0
   1e534:	beq	1e540 <g_strcmp0@plt+0x9374>
   1e538:	mov	r0, r3
   1e53c:	bl	14e90 <g_object_unref@plt>
   1e540:	ldr	r3, [sp, #48]	; 0x30
   1e544:	cmp	r3, #0
   1e548:	beq	1e10c <g_strcmp0@plt+0x8f40>
   1e54c:	ldr	r3, [sp, #20]
   1e550:	cmp	r3, #0
   1e554:	beq	1e560 <g_strcmp0@plt+0x9394>
   1e558:	mov	r0, r3
   1e55c:	bl	14ea8 <g_array_unref@plt>
   1e560:	ldr	r3, [sp, #28]
   1e564:	cmp	r3, #0
   1e568:	beq	1e574 <g_strcmp0@plt+0x93a8>
   1e56c:	mov	r0, r3
   1e570:	bl	14e90 <g_object_unref@plt>
   1e574:	ldr	r4, [sp, #48]	; 0x30
   1e578:	mov	r3, #0
   1e57c:	str	r3, [sp, #20]
   1e580:	ldr	r0, [r4]
   1e584:	bl	14c2c <g_quark_to_string@plt>
   1e588:	ldr	r3, [r4, #4]
   1e58c:	ldr	ip, [pc, #100]	; 1e5f8 <g_strcmp0@plt+0x942c>
   1e590:	str	r3, [sp, #12]
   1e594:	ldr	r2, [pc, #96]	; 1e5fc <g_strcmp0@plt+0x9430>
   1e598:	ldr	r3, [pc, #96]	; 1e600 <g_strcmp0@plt+0x9434>
   1e59c:	mov	r1, #8
   1e5a0:	str	r0, [sp, #8]
   1e5a4:	ldr	r0, [r4, #8]
   1e5a8:	str	ip, [sp]
   1e5ac:	str	r0, [sp, #4]
   1e5b0:	mov	r0, #0
   1e5b4:	bl	14668 <g_log@plt>
   1e5b8:	add	r0, sp, #48	; 0x30
   1e5bc:	bl	14dac <g_clear_error@plt>
   1e5c0:	b	1e120 <g_strcmp0@plt+0x8f54>
   1e5c4:	bl	14b6c <__stack_chk_fail@plt>
   1e5c8:	mov	r5, r0
   1e5cc:	b	1e430 <g_strcmp0@plt+0x9264>
   1e5d0:	andeq	fp, r4, r8, asr #19
   1e5d4:	strdeq	r4, [r3], -ip
   1e5d8:	andeq	sp, r1, r4, lsr #31
   1e5dc:	andeq	r5, r3, r8, lsl #26
   1e5e0:	andeq	r5, r3, r8, lsr sp
   1e5e4:	andeq	ip, r4, r8, asr #5
   1e5e8:	andeq	r5, r3, ip, lsr #4
   1e5ec:	andeq	sl, r3, ip, ror #18
   1e5f0:	andeq	r5, r3, r4, lsr sp
   1e5f4:	andeq	r5, r3, r0, lsr sp
   1e5f8:	andeq	r0, r0, r1, lsl #4
   1e5fc:	andeq	r4, r3, r4, lsr #13
   1e600:	andeq	r5, r3, r0, asr sp
   1e604:	push	{r4, r5, r6, lr}
   1e608:	mov	r1, #0
   1e60c:	bl	143d4 <g_object_new@plt>
   1e610:	mov	r4, r0
   1e614:	bl	1e078 <g_strcmp0@plt+0x8eac>
   1e618:	ldr	r3, [r4, #12]
   1e61c:	mov	r5, r0
   1e620:	ldr	r0, [r3]
   1e624:	cmp	r0, #0
   1e628:	beq	1e63c <g_strcmp0@plt+0x9470>
   1e62c:	bl	14ea8 <g_array_unref@plt>
   1e630:	ldr	r3, [r4, #12]
   1e634:	mov	r2, #0
   1e638:	str	r2, [r3]
   1e63c:	str	r5, [r3]
   1e640:	mov	r0, r4
   1e644:	pop	{r4, r5, r6, pc}
   1e648:	ldr	r3, [r0, #12]
   1e64c:	push	{r4, r5, r6, r7, r8, lr}
   1e650:	sub	sp, sp, #48	; 0x30
   1e654:	ldr	r8, [pc, #160]	; 1e6fc <g_strcmp0@plt+0x9530>
   1e658:	ldr	r3, [r3]
   1e65c:	ldr	r2, [r8]
   1e660:	str	r2, [sp, #44]	; 0x2c
   1e664:	ldr	r2, [r3, #4]
   1e668:	cmp	r2, #0
   1e66c:	beq	1e6e0 <g_strcmp0@plt+0x9514>
   1e670:	mov	r7, r0
   1e674:	mov	r6, #0
   1e678:	ldr	r3, [r3]
   1e67c:	add	lr, sp, #4
   1e680:	mov	r5, lr
   1e684:	ldr	r4, [r3, r6, lsl #2]
   1e688:	add	ip, sp, #24
   1e68c:	ldm	r4!, {r0, r1, r2, r3}
   1e690:	stmia	lr!, {r0, r1, r2, r3}
   1e694:	ldm	r5!, {r0, r1, r2, r3}
   1e698:	ldr	r4, [r4]
   1e69c:	stmia	ip!, {r0, r1, r2, r3}
   1e6a0:	add	r0, sp, #24
   1e6a4:	str	r4, [lr]
   1e6a8:	str	r4, [ip]
   1e6ac:	bl	1b524 <g_strcmp0@plt+0x6358>
   1e6b0:	mov	r4, r0
   1e6b4:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   1e6b8:	cmp	r4, #0
   1e6bc:	beq	1e6c8 <g_strcmp0@plt+0x94fc>
   1e6c0:	mov	r0, r4
   1e6c4:	bl	14e90 <g_object_unref@plt>
   1e6c8:	ldr	r3, [r7, #12]
   1e6cc:	add	r6, r6, #1
   1e6d0:	ldr	r3, [r3]
   1e6d4:	ldr	r2, [r3, #4]
   1e6d8:	cmp	r2, r6
   1e6dc:	bhi	1e678 <g_strcmp0@plt+0x94ac>
   1e6e0:	ldr	r2, [sp, #44]	; 0x2c
   1e6e4:	ldr	r3, [r8]
   1e6e8:	cmp	r2, r3
   1e6ec:	bne	1e6f8 <g_strcmp0@plt+0x952c>
   1e6f0:	add	sp, sp, #48	; 0x30
   1e6f4:	pop	{r4, r5, r6, r7, r8, pc}
   1e6f8:	bl	14b6c <__stack_chk_fail@plt>
   1e6fc:	andeq	fp, r4, r8, asr #19
   1e700:	bx	lr
   1e704:	push	{r4, r5, r6, lr}
   1e708:	mcr	15, 0, r0, cr7, cr10, {5}
   1e70c:	ldr	r4, [pc, #96]	; 1e774 <g_strcmp0@plt+0x95a8>
   1e710:	ldr	r5, [r4, #16]
   1e714:	mcr	15, 0, r0, cr7, cr10, {5}
   1e718:	cmp	r5, #0
   1e71c:	beq	1e728 <g_strcmp0@plt+0x955c>
   1e720:	ldr	r0, [r4, #16]
   1e724:	pop	{r4, r5, r6, pc}
   1e728:	add	r0, r4, #16
   1e72c:	bl	14a28 <g_once_init_enter@plt>
   1e730:	cmp	r0, #0
   1e734:	beq	1e720 <g_strcmp0@plt+0x9554>
   1e738:	mov	r3, r5
   1e73c:	ldr	r2, [pc, #52]	; 1e778 <g_strcmp0@plt+0x95ac>
   1e740:	ldr	r1, [pc, #52]	; 1e77c <g_strcmp0@plt+0x95b0>
   1e744:	mov	r0, #80	; 0x50
   1e748:	bl	14428 <g_type_register_static@plt>
   1e74c:	mov	r1, #4
   1e750:	mov	r5, r0
   1e754:	bl	14c08 <g_type_add_instance_private@plt>
   1e758:	mov	r1, r5
   1e75c:	mov	r3, r0
   1e760:	mov	r0, r4
   1e764:	str	r3, [r0], #16
   1e768:	bl	14ed8 <g_once_init_leave@plt>
   1e76c:	ldr	r0, [r4, #16]
   1e770:	pop	{r4, r5, r6, pc}
   1e774:	andeq	ip, r4, r8, asr #5
   1e778:	andeq	r5, r3, r4, ror #25
   1e77c:	andeq	r5, r3, r8, ror #26
   1e780:	push	{r4, lr}
   1e784:	bl	1e704 <g_strcmp0@plt+0x9538>
   1e788:	pop	{r4, lr}
   1e78c:	b	1e604 <g_strcmp0@plt+0x9438>
   1e790:	push	{r4, r5, r6, lr}
   1e794:	mov	r4, r0
   1e798:	ldr	r0, [r0, #16]
   1e79c:	cmp	r0, #0
   1e7a0:	beq	1e7b0 <g_strcmp0@plt+0x95e4>
   1e7a4:	bl	14f50 <g_key_file_unref@plt>
   1e7a8:	mov	r3, #0
   1e7ac:	str	r3, [r4, #16]
   1e7b0:	mov	r5, #0
   1e7b4:	ldr	r0, [r4, #20]
   1e7b8:	bl	14bd8 <g_free@plt>
   1e7bc:	ldr	r0, [r4, #24]
   1e7c0:	str	r5, [r4, #20]
   1e7c4:	bl	14bd8 <g_free@plt>
   1e7c8:	ldr	r0, [r4, #28]
   1e7cc:	str	r5, [r4, #24]
   1e7d0:	bl	14bd8 <g_free@plt>
   1e7d4:	ldr	r0, [r4, #32]
   1e7d8:	str	r5, [r4, #28]
   1e7dc:	bl	14bd8 <g_free@plt>
   1e7e0:	ldr	r0, [r4, #36]	; 0x24
   1e7e4:	str	r5, [r4, #32]
   1e7e8:	bl	14bd8 <g_free@plt>
   1e7ec:	ldr	r0, [r4, #40]	; 0x28
   1e7f0:	str	r5, [r4, #36]	; 0x24
   1e7f4:	bl	14bd8 <g_free@plt>
   1e7f8:	ldr	r0, [r4, #44]	; 0x2c
   1e7fc:	str	r5, [r4, #40]	; 0x28
   1e800:	bl	14bd8 <g_free@plt>
   1e804:	ldr	r3, [pc, #20]	; 1e820 <g_strcmp0@plt+0x9654>
   1e808:	str	r5, [r4, #44]	; 0x2c
   1e80c:	mov	r0, r4
   1e810:	ldr	r3, [r3]
   1e814:	pop	{r4, r5, r6, lr}
   1e818:	ldr	r3, [r3, #24]
   1e81c:	bx	r3
   1e820:	ldrdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   1e824:	push	{r4, lr}
   1e828:	mov	r4, r0
   1e82c:	bl	14b84 <g_get_user_config_dir@plt>
   1e830:	mov	r2, #0
   1e834:	ldr	r1, [pc, #124]	; 1e8b8 <g_strcmp0@plt+0x96ec>
   1e838:	bl	146c8 <g_build_filename@plt>
   1e83c:	str	r0, [r4, #24]
   1e840:	bl	14b84 <g_get_user_config_dir@plt>
   1e844:	mov	r3, #0
   1e848:	ldr	r2, [pc, #108]	; 1e8bc <g_strcmp0@plt+0x96f0>
   1e84c:	ldr	r1, [pc, #108]	; 1e8c0 <g_strcmp0@plt+0x96f4>
   1e850:	bl	146c8 <g_build_filename@plt>
   1e854:	str	r0, [r4, #28]
   1e858:	bl	14b84 <g_get_user_config_dir@plt>
   1e85c:	mov	r3, #0
   1e860:	ldr	r2, [pc, #92]	; 1e8c4 <g_strcmp0@plt+0x96f8>
   1e864:	ldr	r1, [pc, #92]	; 1e8c8 <g_strcmp0@plt+0x96fc>
   1e868:	bl	146c8 <g_build_filename@plt>
   1e86c:	str	r0, [r4, #32]
   1e870:	bl	1444c <g_get_home_dir@plt>
   1e874:	mov	r2, #0
   1e878:	ldr	r1, [pc, #76]	; 1e8cc <g_strcmp0@plt+0x9700>
   1e87c:	bl	146c8 <g_build_filename@plt>
   1e880:	str	r0, [r4, #36]	; 0x24
   1e884:	bl	14b84 <g_get_user_config_dir@plt>
   1e888:	mov	r3, #0
   1e88c:	ldr	r2, [pc, #60]	; 1e8d0 <g_strcmp0@plt+0x9704>
   1e890:	ldr	r1, [pc, #60]	; 1e8d4 <g_strcmp0@plt+0x9708>
   1e894:	bl	146c8 <g_build_filename@plt>
   1e898:	str	r0, [r4, #40]	; 0x28
   1e89c:	bl	14b84 <g_get_user_config_dir@plt>
   1e8a0:	mov	r3, #0
   1e8a4:	ldr	r2, [pc, #44]	; 1e8d8 <g_strcmp0@plt+0x970c>
   1e8a8:	ldr	r1, [pc, #44]	; 1e8dc <g_strcmp0@plt+0x9710>
   1e8ac:	bl	146c8 <g_build_filename@plt>
   1e8b0:	str	r0, [r4, #44]	; 0x2c
   1e8b4:	pop	{r4, pc}
   1e8b8:			; <UNDEFINED> instruction: 0x00035db0
   1e8bc:	andeq	r5, r3, r0, asr #27
   1e8c0:	andeq	r5, r3, ip, asr #27
   1e8c4:	ldrdeq	r5, [r3], -r4
   1e8c8:	andeq	r5, r3, r0, lsr #6
   1e8cc:	andeq	r5, r3, r4, ror #27
   1e8d0:	strdeq	r5, [r3], -r4
   1e8d4:	andeq	r5, r3, r0, lsl #28
   1e8d8:	andeq	r5, r3, r8, lsl #28
   1e8dc:	andeq	r5, r3, r8, lsl lr
   1e8e0:	push	{r4, lr}
   1e8e4:	mov	r4, r0
   1e8e8:	bl	14f8c <g_type_class_peek_parent@plt>
   1e8ec:	ldr	r3, [pc, #12]	; 1e900 <g_strcmp0@plt+0x9734>
   1e8f0:	ldr	r2, [pc, #12]	; 1e904 <g_strcmp0@plt+0x9738>
   1e8f4:	str	r2, [r4, #24]
   1e8f8:	str	r0, [r3]
   1e8fc:	pop	{r4, pc}
   1e900:	ldrdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   1e904:	muleq	r1, r0, r7
   1e908:	push	{r4, r5, r6, r7, r8, lr}
   1e90c:	mov	r5, r1
   1e910:	mov	r1, #0
   1e914:	bl	143d4 <g_object_new@plt>
   1e918:	mov	r4, r0
   1e91c:	mov	r0, r5
   1e920:	bl	308dc <g_strcmp0@plt+0x1b710>
   1e924:	mov	r6, r0
   1e928:	ldr	r0, [r4, #16]
   1e92c:	cmp	r0, #0
   1e930:	beq	1e938 <g_strcmp0@plt+0x976c>
   1e934:	bl	14f50 <g_key_file_unref@plt>
   1e938:	ldr	r5, [pc, #216]	; 1ea18 <g_strcmp0@plt+0x984c>
   1e93c:	ldr	r3, [pc, #216]	; 1ea1c <g_strcmp0@plt+0x9850>
   1e940:	ldr	r2, [pc, #216]	; 1ea20 <g_strcmp0@plt+0x9854>
   1e944:	str	r6, [r4, #16]
   1e948:	ldr	r1, [pc, #212]	; 1ea24 <g_strcmp0@plt+0x9858>
   1e94c:	ldr	r0, [r5]
   1e950:	bl	2a300 <g_strcmp0@plt+0x15134>
   1e954:	ldr	r1, [pc, #204]	; 1ea28 <g_strcmp0@plt+0x985c>
   1e958:	mov	r7, r0
   1e95c:	bl	151cc <g_strcmp0@plt>
   1e960:	mov	r6, r0
   1e964:	mov	r0, r7
   1e968:	bl	14bd8 <g_free@plt>
   1e96c:	cmp	r6, #0
   1e970:	bne	1e9a8 <g_strcmp0@plt+0x97dc>
   1e974:	ldr	r3, [pc, #176]	; 1ea2c <g_strcmp0@plt+0x9860>
   1e978:	ldr	r2, [pc, #160]	; 1ea20 <g_strcmp0@plt+0x9854>
   1e97c:	ldr	r1, [pc, #160]	; 1ea24 <g_strcmp0@plt+0x9858>
   1e980:	ldr	r0, [r5]
   1e984:	bl	2a300 <g_strcmp0@plt+0x15134>
   1e988:	ldr	r1, [pc, #160]	; 1ea30 <g_strcmp0@plt+0x9864>
   1e98c:	mov	r7, r0
   1e990:	bl	151cc <g_strcmp0@plt>
   1e994:	mov	r6, r0
   1e998:	mov	r0, r7
   1e99c:	bl	14bd8 <g_free@plt>
   1e9a0:	cmp	r6, #0
   1e9a4:	bne	1e9d4 <g_strcmp0@plt+0x9808>
   1e9a8:	bl	14b84 <g_get_user_config_dir@plt>
   1e9ac:	ldr	r2, [pc, #128]	; 1ea34 <g_strcmp0@plt+0x9868>
   1e9b0:	mov	r3, #0
   1e9b4:	ldr	r1, [pc, #108]	; 1ea28 <g_strcmp0@plt+0x985c>
   1e9b8:	bl	146c8 <g_build_filename@plt>
   1e9bc:	mov	r5, r0
   1e9c0:	ldr	r0, [r4, #20]
   1e9c4:	bl	14bd8 <g_free@plt>
   1e9c8:	str	r5, [r4, #20]
   1e9cc:	mov	r0, r4
   1e9d0:	pop	{r4, r5, r6, r7, r8, pc}
   1e9d4:	ldr	r3, [pc, #80]	; 1ea2c <g_strcmp0@plt+0x9860>
   1e9d8:	ldr	r2, [pc, #64]	; 1ea20 <g_strcmp0@plt+0x9854>
   1e9dc:	ldr	r0, [r5]
   1e9e0:	ldr	r1, [pc, #60]	; 1ea24 <g_strcmp0@plt+0x9858>
   1e9e4:	bl	2a300 <g_strcmp0@plt+0x15134>
   1e9e8:	ldr	r1, [pc, #72]	; 1ea38 <g_strcmp0@plt+0x986c>
   1e9ec:	mov	r6, r0
   1e9f0:	bl	151cc <g_strcmp0@plt>
   1e9f4:	mov	r5, r0
   1e9f8:	mov	r0, r6
   1e9fc:	bl	14bd8 <g_free@plt>
   1ea00:	cmp	r5, #0
   1ea04:	bne	1e9cc <g_strcmp0@plt+0x9800>
   1ea08:	bl	14b84 <g_get_user_config_dir@plt>
   1ea0c:	mov	r3, r5
   1ea10:	ldr	r2, [pc, #36]	; 1ea3c <g_strcmp0@plt+0x9870>
   1ea14:	b	1e9b4 <g_strcmp0@plt+0x97e8>
   1ea18:	andeq	ip, r4, r4, asr #32
   1ea1c:	ldrdeq	r4, [r3], -ip
   1ea20:	andeq	r4, r3, r4, ror #15
   1ea24:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   1ea28:	muleq	r3, ip, pc	; <UNPREDICTABLE>
   1ea2c:	andeq	r4, r3, r4, lsl #14
   1ea30:	andeq	r4, r3, r0, asr #11
   1ea34:	andeq	r5, r3, r4, lsr #28
   1ea38:	andeq	r5, r3, r8, asr r4
   1ea3c:	andeq	r5, r3, r0, lsr lr
   1ea40:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ea44:	sub	sp, sp, #24
   1ea48:	ldr	r6, [pc, #516]	; 1ec54 <g_strcmp0@plt+0x9a88>
   1ea4c:	mov	r0, r1
   1ea50:	mov	r7, #0
   1ea54:	ldr	r3, [r6]
   1ea58:	mov	r4, r2
   1ea5c:	str	r3, [sp, #20]
   1ea60:	str	r7, [sp, #16]
   1ea64:	bl	14fa4 <g_file_new_for_path@plt>
   1ea68:	mov	r8, r0
   1ea6c:	mov	r0, r4
   1ea70:	bl	14fa4 <g_file_new_for_path@plt>
   1ea74:	mov	r4, r0
   1ea78:	bl	14fb0 <g_file_get_parent@plt>
   1ea7c:	mov	r1, r7
   1ea80:	mov	r5, r0
   1ea84:	mov	r0, r4
   1ea88:	bl	147f4 <g_file_query_exists@plt>
   1ea8c:	subs	r1, r0, #0
   1ea90:	beq	1eadc <g_strcmp0@plt+0x9910>
   1ea94:	cmp	r5, #0
   1ea98:	beq	1eaa4 <g_strcmp0@plt+0x98d8>
   1ea9c:	mov	r0, r5
   1eaa0:	bl	14e90 <g_object_unref@plt>
   1eaa4:	cmp	r4, #0
   1eaa8:	beq	1eab4 <g_strcmp0@plt+0x98e8>
   1eaac:	mov	r0, r4
   1eab0:	bl	14e90 <g_object_unref@plt>
   1eab4:	cmp	r8, #0
   1eab8:	beq	1eac4 <g_strcmp0@plt+0x98f8>
   1eabc:	mov	r0, r8
   1eac0:	bl	14e90 <g_object_unref@plt>
   1eac4:	ldr	r2, [sp, #20]
   1eac8:	ldr	r3, [r6]
   1eacc:	cmp	r2, r3
   1ead0:	bne	1ec50 <g_strcmp0@plt+0x9a84>
   1ead4:	add	sp, sp, #24
   1ead8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1eadc:	mov	r0, r5
   1eae0:	bl	147f4 <g_file_query_exists@plt>
   1eae4:	add	sl, sp, #16
   1eae8:	subs	r7, r0, #0
   1eaec:	bne	1eb80 <g_strcmp0@plt+0x99b4>
   1eaf0:	mov	r2, sl
   1eaf4:	mov	r1, r7
   1eaf8:	mov	r0, r5
   1eafc:	bl	14c8c <g_file_make_directory_with_parents@plt>
   1eb00:	ldr	r9, [sp, #16]
   1eb04:	cmp	r9, #0
   1eb08:	beq	1eb80 <g_strcmp0@plt+0x99b4>
   1eb0c:	ldr	r3, [r9, #8]
   1eb10:	mov	r0, r7
   1eb14:	ldr	r2, [pc, #316]	; 1ec58 <g_strcmp0@plt+0x9a8c>
   1eb18:	mov	r1, #32
   1eb1c:	str	r7, [sp, #16]
   1eb20:	bl	14668 <g_log@plt>
   1eb24:	mov	r0, r9
   1eb28:	bl	1453c <g_error_free@plt>
   1eb2c:	ldr	r3, [sp, #16]
   1eb30:	cmp	r3, #0
   1eb34:	beq	1eb80 <g_strcmp0@plt+0x99b4>
   1eb38:	cmp	r5, #0
   1eb3c:	beq	1eb48 <g_strcmp0@plt+0x997c>
   1eb40:	mov	r0, r5
   1eb44:	bl	14e90 <g_object_unref@plt>
   1eb48:	cmp	r4, #0
   1eb4c:	beq	1eb58 <g_strcmp0@plt+0x998c>
   1eb50:	mov	r0, r4
   1eb54:	bl	14e90 <g_object_unref@plt>
   1eb58:	cmp	r8, #0
   1eb5c:	beq	1eb68 <g_strcmp0@plt+0x999c>
   1eb60:	mov	r0, r8
   1eb64:	bl	14e90 <g_object_unref@plt>
   1eb68:	ldr	r4, [sp, #16]
   1eb6c:	ldr	r0, [r4]
   1eb70:	bl	14c2c <g_quark_to_string@plt>
   1eb74:	ldr	r3, [r4, #4]
   1eb78:	mov	ip, #245	; 0xf5
   1eb7c:	b	1ec1c <g_strcmp0@plt+0x9a50>
   1eb80:	mov	r7, #0
   1eb84:	str	r7, [sp]
   1eb88:	stmib	sp, {r7, sl}
   1eb8c:	mov	r3, r7
   1eb90:	mov	r2, r7
   1eb94:	mov	r1, r4
   1eb98:	mov	r0, r8
   1eb9c:	bl	14c80 <g_file_copy@plt>
   1eba0:	ldr	r9, [sp, #16]
   1eba4:	cmp	r9, r7
   1eba8:	beq	1ea94 <g_strcmp0@plt+0x98c8>
   1ebac:	ldr	r3, [r9, #8]
   1ebb0:	mov	r0, r7
   1ebb4:	ldr	r2, [pc, #160]	; 1ec5c <g_strcmp0@plt+0x9a90>
   1ebb8:	mov	r1, #32
   1ebbc:	str	r7, [sp, #16]
   1ebc0:	bl	14668 <g_log@plt>
   1ebc4:	mov	r0, r9
   1ebc8:	bl	1453c <g_error_free@plt>
   1ebcc:	ldr	r3, [sp, #16]
   1ebd0:	cmp	r3, r7
   1ebd4:	beq	1ea94 <g_strcmp0@plt+0x98c8>
   1ebd8:	cmp	r5, r7
   1ebdc:	beq	1ebe8 <g_strcmp0@plt+0x9a1c>
   1ebe0:	mov	r0, r5
   1ebe4:	bl	14e90 <g_object_unref@plt>
   1ebe8:	cmp	r4, #0
   1ebec:	beq	1ebf8 <g_strcmp0@plt+0x9a2c>
   1ebf0:	mov	r0, r4
   1ebf4:	bl	14e90 <g_object_unref@plt>
   1ebf8:	cmp	r8, #0
   1ebfc:	beq	1ec08 <g_strcmp0@plt+0x9a3c>
   1ec00:	mov	r0, r8
   1ec04:	bl	14e90 <g_object_unref@plt>
   1ec08:	ldr	r4, [sp, #16]
   1ec0c:	ldr	r0, [r4]
   1ec10:	bl	14c2c <g_quark_to_string@plt>
   1ec14:	ldr	r3, [r4, #4]
   1ec18:	ldr	ip, [pc, #64]	; 1ec60 <g_strcmp0@plt+0x9a94>
   1ec1c:	str	r3, [sp, #12]
   1ec20:	str	r0, [sp, #8]
   1ec24:	ldr	r0, [r4, #8]
   1ec28:	ldr	r3, [pc, #52]	; 1ec64 <g_strcmp0@plt+0x9a98>
   1ec2c:	str	r0, [sp, #4]
   1ec30:	ldr	r2, [pc, #48]	; 1ec68 <g_strcmp0@plt+0x9a9c>
   1ec34:	mov	r1, #8
   1ec38:	str	ip, [sp]
   1ec3c:	mov	r0, #0
   1ec40:	bl	14668 <g_log@plt>
   1ec44:	mov	r0, sl
   1ec48:	bl	14dac <g_clear_error@plt>
   1ec4c:	b	1eac4 <g_strcmp0@plt+0x98f8>
   1ec50:	bl	14b6c <__stack_chk_fail@plt>
   1ec54:	andeq	fp, r4, r8, asr #19
   1ec58:	andeq	r5, r3, r0, asr #28
   1ec5c:	andeq	r5, r3, r0, ror lr
   1ec60:	andeq	r0, r0, r6, lsl r1
   1ec64:	andeq	r5, r3, r8, asr lr
   1ec68:	andeq	r4, r3, r4, lsr #13
   1ec6c:	push	{r4, r5, r6, r7, lr}
   1ec70:	sub	sp, sp, #28
   1ec74:	ldr	r5, [pc, #248]	; 1ed74 <g_strcmp0@plt+0x9ba8>
   1ec78:	mov	r6, #0
   1ec7c:	ldr	r0, [r0, #16]
   1ec80:	ldr	ip, [r5]
   1ec84:	add	r3, sp, #16
   1ec88:	ldr	r2, [pc, #232]	; 1ed78 <g_strcmp0@plt+0x9bac>
   1ec8c:	str	ip, [sp, #20]
   1ec90:	str	r6, [sp, #16]
   1ec94:	bl	14854 <g_key_file_get_value@plt>
   1ec98:	ldr	r4, [sp, #16]
   1ec9c:	cmp	r4, r6
   1eca0:	beq	1ecf0 <g_strcmp0@plt+0x9b24>
   1eca4:	ldr	r4, [r4]
   1eca8:	bl	149d4 <g_key_file_error_quark@plt>
   1ecac:	cmp	r4, r0
   1ecb0:	bne	1ed20 <g_strcmp0@plt+0x9b54>
   1ecb4:	ldr	r4, [sp, #16]
   1ecb8:	ldr	r2, [pc, #188]	; 1ed7c <g_strcmp0@plt+0x9bb0>
   1ecbc:	mov	r1, #32
   1ecc0:	ldr	r3, [r4, #8]
   1ecc4:	mov	r0, r6
   1ecc8:	str	r6, [sp, #16]
   1eccc:	bl	14668 <g_log@plt>
   1ecd0:	ldr	r0, [pc, #168]	; 1ed80 <g_strcmp0@plt+0x9bb4>
   1ecd4:	bl	147e8 <g_strdup@plt>
   1ecd8:	mov	r7, r0
   1ecdc:	mov	r0, r4
   1ece0:	bl	1453c <g_error_free@plt>
   1ece4:	mov	r0, r6
   1ece8:	bl	14bd8 <g_free@plt>
   1ecec:	b	1ed04 <g_strcmp0@plt+0x9b38>
   1ecf0:	mov	r7, r0
   1ecf4:	mov	r0, r4
   1ecf8:	bl	14bd8 <g_free@plt>
   1ecfc:	mov	r0, r4
   1ed00:	bl	14bd8 <g_free@plt>
   1ed04:	ldr	r2, [sp, #20]
   1ed08:	ldr	r3, [r5]
   1ed0c:	mov	r0, r7
   1ed10:	cmp	r2, r3
   1ed14:	bne	1ed70 <g_strcmp0@plt+0x9ba4>
   1ed18:	add	sp, sp, #28
   1ed1c:	pop	{r4, r5, r6, r7, pc}
   1ed20:	mov	r0, r6
   1ed24:	bl	14bd8 <g_free@plt>
   1ed28:	ldr	r4, [sp, #16]
   1ed2c:	mov	r7, r6
   1ed30:	ldr	r0, [r4]
   1ed34:	bl	14c2c <g_quark_to_string@plt>
   1ed38:	ldr	r3, [r4, #4]
   1ed3c:	ldr	ip, [pc, #64]	; 1ed84 <g_strcmp0@plt+0x9bb8>
   1ed40:	str	r3, [sp, #12]
   1ed44:	ldr	r2, [pc, #60]	; 1ed88 <g_strcmp0@plt+0x9bbc>
   1ed48:	ldr	r3, [pc, #60]	; 1ed8c <g_strcmp0@plt+0x9bc0>
   1ed4c:	mov	r1, #8
   1ed50:	str	r0, [sp, #8]
   1ed54:	ldr	lr, [r4, #8]
   1ed58:	mov	r0, r6
   1ed5c:	stm	sp, {ip, lr}
   1ed60:	bl	14668 <g_log@plt>
   1ed64:	add	r0, sp, #16
   1ed68:	bl	14dac <g_clear_error@plt>
   1ed6c:	b	1ed04 <g_strcmp0@plt+0x9b38>
   1ed70:	bl	14b6c <__stack_chk_fail@plt>
   1ed74:	andeq	fp, r4, r8, asr #19
   1ed78:	andeq	r5, r3, r8, lsl #29
   1ed7c:	muleq	r3, r0, lr
   1ed80:	andeq	sl, r3, ip, ror #18
   1ed84:	andeq	r0, r0, r7, lsr r1
   1ed88:	andeq	r4, r3, r4, ror r6
   1ed8c:	andeq	r5, r3, r8, asr lr
   1ed90:	push	{r4, r5, r6, lr}
   1ed94:	mov	r4, r0
   1ed98:	ldr	r0, [r0, #16]
   1ed9c:	mov	r5, r2
   1eda0:	mov	r6, r1
   1eda4:	bl	14614 <g_key_file_has_group@plt>
   1eda8:	cmp	r0, #0
   1edac:	popeq	{r4, r5, r6, pc}
   1edb0:	mov	r1, r6
   1edb4:	mov	r0, r4
   1edb8:	bl	1ec6c <g_strcmp0@plt+0x9aa0>
   1edbc:	mov	r2, r5
   1edc0:	mov	r6, r0
   1edc4:	mov	r1, r0
   1edc8:	mov	r0, r4
   1edcc:	bl	1ea40 <g_strcmp0@plt+0x9874>
   1edd0:	mov	r0, r6
   1edd4:	pop	{r4, r5, r6, lr}
   1edd8:	b	14bd8 <g_free@plt>
   1eddc:	push	{r4, lr}
   1ede0:	mov	r4, r0
   1ede4:	ldr	r2, [r0, #20]
   1ede8:	ldr	r1, [pc, #100]	; 1ee54 <g_strcmp0@plt+0x9c88>
   1edec:	bl	1ed90 <g_strcmp0@plt+0x9bc4>
   1edf0:	ldr	r2, [r4, #24]
   1edf4:	mov	r0, r4
   1edf8:	ldr	r1, [pc, #88]	; 1ee58 <g_strcmp0@plt+0x9c8c>
   1edfc:	bl	1ed90 <g_strcmp0@plt+0x9bc4>
   1ee00:	ldr	r2, [r4, #28]
   1ee04:	mov	r0, r4
   1ee08:	ldr	r1, [pc, #76]	; 1ee5c <g_strcmp0@plt+0x9c90>
   1ee0c:	bl	1ed90 <g_strcmp0@plt+0x9bc4>
   1ee10:	ldr	r2, [r4, #32]
   1ee14:	mov	r0, r4
   1ee18:	ldr	r1, [pc, #64]	; 1ee60 <g_strcmp0@plt+0x9c94>
   1ee1c:	bl	1ed90 <g_strcmp0@plt+0x9bc4>
   1ee20:	ldr	r2, [r4, #36]	; 0x24
   1ee24:	mov	r0, r4
   1ee28:	ldr	r1, [pc, #52]	; 1ee64 <g_strcmp0@plt+0x9c98>
   1ee2c:	bl	1ed90 <g_strcmp0@plt+0x9bc4>
   1ee30:	ldr	r2, [r4, #40]	; 0x28
   1ee34:	mov	r0, r4
   1ee38:	ldr	r1, [pc, #40]	; 1ee68 <g_strcmp0@plt+0x9c9c>
   1ee3c:	bl	1ed90 <g_strcmp0@plt+0x9bc4>
   1ee40:	ldr	r2, [r4, #44]	; 0x2c
   1ee44:	mov	r0, r4
   1ee48:	ldr	r1, [pc, #28]	; 1ee6c <g_strcmp0@plt+0x9ca0>
   1ee4c:	pop	{r4, lr}
   1ee50:	b	1ed90 <g_strcmp0@plt+0x9bc4>
   1ee54:	andeq	r5, r3, r8, lsr #29
   1ee58:			; <UNDEFINED> instruction: 0x00035eb0
   1ee5c:			; <UNDEFINED> instruction: 0x00035eb4
   1ee60:			; <UNDEFINED> instruction: 0x00035ebc
   1ee64:	andeq	r5, r3, r8, asr #29
   1ee68:	andeq	r5, r3, r0, lsl #28
   1ee6c:	andeq	r5, r3, r8, lsl lr
   1ee70:	push	{r4, r5, r6, lr}
   1ee74:	mcr	15, 0, r0, cr7, cr10, {5}
   1ee78:	ldr	r4, [pc, #76]	; 1eecc <g_strcmp0@plt+0x9d00>
   1ee7c:	ldr	r5, [r4, #4]
   1ee80:	mcr	15, 0, r0, cr7, cr10, {5}
   1ee84:	cmp	r5, #0
   1ee88:	beq	1ee94 <g_strcmp0@plt+0x9cc8>
   1ee8c:	ldr	r0, [r4, #4]
   1ee90:	pop	{r4, r5, r6, pc}
   1ee94:	add	r0, r4, #4
   1ee98:	bl	14a28 <g_once_init_enter@plt>
   1ee9c:	cmp	r0, #0
   1eea0:	beq	1ee8c <g_strcmp0@plt+0x9cc0>
   1eea4:	mov	r3, r5
   1eea8:	ldr	r2, [pc, #32]	; 1eed0 <g_strcmp0@plt+0x9d04>
   1eeac:	ldr	r1, [pc, #32]	; 1eed4 <g_strcmp0@plt+0x9d08>
   1eeb0:	mov	r0, #80	; 0x50
   1eeb4:	bl	14428 <g_type_register_static@plt>
   1eeb8:	mov	r1, r0
   1eebc:	add	r0, r4, #4
   1eec0:	bl	14ed8 <g_once_init_leave@plt>
   1eec4:	ldr	r0, [r4, #4]
   1eec8:	pop	{r4, r5, r6, pc}
   1eecc:	ldrdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   1eed0:	andeq	r5, r3, ip, lsl #27
   1eed4:	ldrdeq	r5, [r3], -r8
   1eed8:	push	{r4, lr}
   1eedc:	mov	r4, r0
   1eee0:	bl	1ee70 <g_strcmp0@plt+0x9ca4>
   1eee4:	mov	r1, r4
   1eee8:	pop	{r4, lr}
   1eeec:	b	1e908 <g_strcmp0@plt+0x973c>
   1eef0:	bx	lr
   1eef4:	b	14f8c <g_type_class_peek_parent@plt>
   1eef8:	push	{r4, lr}
   1eefc:	ldr	r0, [pc, #20]	; 1ef18 <g_strcmp0@plt+0x9d4c>
   1ef00:	bl	29704 <g_strcmp0@plt+0x14538>
   1ef04:	ldr	r2, [pc, #16]	; 1ef1c <g_strcmp0@plt+0x9d50>
   1ef08:	mov	r1, #32
   1ef0c:	mov	r0, #0
   1ef10:	pop	{r4, lr}
   1ef14:	b	14668 <g_log@plt>
   1ef18:	andeq	r5, r3, r8, lsl pc
   1ef1c:	andeq	r5, r3, r0, lsr pc
   1ef20:	push	{r4, r5, r6, lr}
   1ef24:	ldr	r0, [pc, #68]	; 1ef70 <g_strcmp0@plt+0x9da4>
   1ef28:	bl	14890 <g_strdup_printf@plt>
   1ef2c:	mov	r2, #0
   1ef30:	mov	r1, r0
   1ef34:	mov	r5, r0
   1ef38:	ldr	r0, [pc, #52]	; 1ef74 <g_strcmp0@plt+0x9da8>
   1ef3c:	bl	14dc4 <g_strconcat@plt>
   1ef40:	mov	r4, r0
   1ef44:	mov	r0, r5
   1ef48:	bl	14bd8 <g_free@plt>
   1ef4c:	mov	r0, r4
   1ef50:	bl	29704 <g_strcmp0@plt+0x14538>
   1ef54:	mov	r0, #0
   1ef58:	ldr	r2, [pc, #24]	; 1ef78 <g_strcmp0@plt+0x9dac>
   1ef5c:	mov	r1, #32
   1ef60:	bl	14668 <g_log@plt>
   1ef64:	mov	r0, r4
   1ef68:	pop	{r4, r5, r6, lr}
   1ef6c:	b	14bd8 <g_free@plt>
   1ef70:	andeq	r5, r3, ip, asr pc
   1ef74:	andeq	r5, r3, r0, ror #30
   1ef78:	andeq	r5, r3, ip, ror pc
   1ef7c:	b	1ef20 <g_strcmp0@plt+0x9d54>
   1ef80:	b	1eef8 <g_strcmp0@plt+0x9d2c>
   1ef84:	mov	r1, #0
   1ef88:	b	143d4 <g_object_new@plt>
   1ef8c:	push	{r4, r5, r6, lr}
   1ef90:	mcr	15, 0, r0, cr7, cr10, {5}
   1ef94:	ldr	r4, [pc, #76]	; 1efe8 <g_strcmp0@plt+0x9e1c>
   1ef98:	ldr	r5, [r4]
   1ef9c:	mcr	15, 0, r0, cr7, cr10, {5}
   1efa0:	cmp	r5, #0
   1efa4:	beq	1efb0 <g_strcmp0@plt+0x9de4>
   1efa8:	ldr	r0, [r4]
   1efac:	pop	{r4, r5, r6, pc}
   1efb0:	mov	r0, r4
   1efb4:	bl	14a28 <g_once_init_enter@plt>
   1efb8:	cmp	r0, #0
   1efbc:	beq	1efa8 <g_strcmp0@plt+0x9ddc>
   1efc0:	mov	r3, r5
   1efc4:	ldr	r2, [pc, #32]	; 1efec <g_strcmp0@plt+0x9e20>
   1efc8:	ldr	r1, [pc, #32]	; 1eff0 <g_strcmp0@plt+0x9e24>
   1efcc:	mov	r0, #80	; 0x50
   1efd0:	bl	14428 <g_type_register_static@plt>
   1efd4:	mov	r1, r0
   1efd8:	mov	r0, r4
   1efdc:	bl	14ed8 <g_once_init_leave@plt>
   1efe0:	ldr	r0, [r4]
   1efe4:	pop	{r4, r5, r6, pc}
   1efe8:	andeq	ip, r4, r4, ror #5
   1efec:	strdeq	r5, [r3], -r4
   1eff0:	andeq	r5, r3, r0, lsr #31
   1eff4:	push	{r4, lr}
   1eff8:	bl	1ef8c <g_strcmp0@plt+0x9dc0>
   1effc:	mov	r1, #0
   1f000:	pop	{r4, lr}
   1f004:	b	143d4 <g_object_new@plt>
   1f008:	bx	lr
   1f00c:	bx	lr
   1f010:	ldr	r3, [pc, #44]	; 1f044 <g_strcmp0@plt+0x9e78>
   1f014:	ldr	r2, [pc, #44]	; 1f048 <g_strcmp0@plt+0x9e7c>
   1f018:	str	r3, [r0, #8]
   1f01c:	ldr	r3, [pc, #40]	; 1f04c <g_strcmp0@plt+0x9e80>
   1f020:	push	{lr}		; (str lr, [sp, #-4]!)
   1f024:	ldr	ip, [pc, #36]	; 1f050 <g_strcmp0@plt+0x9e84>
   1f028:	ldr	lr, [pc, #36]	; 1f054 <g_strcmp0@plt+0x9e88>
   1f02c:	ldr	r1, [pc, #36]	; 1f058 <g_strcmp0@plt+0x9e8c>
   1f030:	str	lr, [r0, #12]
   1f034:	str	ip, [r0, #16]
   1f038:	str	r1, [r0, #20]
   1f03c:	strd	r2, [r0, #24]
   1f040:	pop	{pc}		; (ldr pc, [sp], #4)
   1f044:	andeq	pc, r1, r0, lsr r5	; <UNPREDICTABLE>
   1f048:	andeq	pc, r1, ip, asr #4
   1f04c:	andeq	pc, r1, r8, asr #4
   1f050:	andeq	pc, r1, r4, asr #6
   1f054:	andeq	pc, r1, ip, lsr r4	; <UNPREDICTABLE>
   1f058:	andeq	pc, r1, r4, ror r1	; <UNPREDICTABLE>
   1f05c:	mov	r0, #0
   1f060:	bx	lr
   1f064:	mov	r0, #0
   1f068:	bx	lr
   1f06c:	push	{r4, lr}
   1f070:	mov	r4, r0
   1f074:	ldr	r0, [r0, #16]
   1f078:	cmp	r0, #0
   1f07c:	beq	1f08c <g_strcmp0@plt+0x9ec0>
   1f080:	bl	14e90 <g_object_unref@plt>
   1f084:	mov	r3, #0
   1f088:	str	r3, [r4, #16]
   1f08c:	ldr	r3, [pc, #16]	; 1f0a4 <g_strcmp0@plt+0x9ed8>
   1f090:	mov	r0, r4
   1f094:	pop	{r4, lr}
   1f098:	ldr	r3, [r3]
   1f09c:	ldr	r3, [r3, #24]
   1f0a0:	bx	r3
   1f0a4:	andeq	ip, r4, r8, ror #5
   1f0a8:	push	{r4, lr}
   1f0ac:	mov	r4, r0
   1f0b0:	ldr	r0, [r0, #24]
   1f0b4:	cmp	r0, #0
   1f0b8:	beq	1f0c8 <g_strcmp0@plt+0x9efc>
   1f0bc:	bl	14e90 <g_object_unref@plt>
   1f0c0:	mov	r3, #0
   1f0c4:	str	r3, [r4, #24]
   1f0c8:	mov	r1, r4
   1f0cc:	mov	r0, #60	; 0x3c
   1f0d0:	pop	{r4, lr}
   1f0d4:	b	150ac <g_slice_free1@plt>
   1f0d8:	push	{r4, r5, r6, r7, r8, lr}
   1f0dc:	mov	r6, r0
   1f0e0:	mov	r0, r1
   1f0e4:	mov	r5, r1
   1f0e8:	mov	r7, r2
   1f0ec:	bl	14cc8 <g_task_get_task_data@plt>
   1f0f0:	ldr	r3, [r0, #16]
   1f0f4:	mov	r4, r0
   1f0f8:	cmp	r3, #0
   1f0fc:	beq	1f110 <g_strcmp0@plt+0x9f44>
   1f100:	mov	r2, r7
   1f104:	mov	r1, r5
   1f108:	mov	r0, r6
   1f10c:	blx	r3
   1f110:	mov	r3, #1
   1f114:	str	r3, [r4, #20]
   1f118:	pop	{r4, r5, r6, r7, r8, pc}
   1f11c:	push	{r4, lr}
   1f120:	mov	r0, r1
   1f124:	mov	r4, r2
   1f128:	bl	14404 <g_object_ref@plt>
   1f12c:	ldr	r2, [pc, #20]	; 1f148 <g_strcmp0@plt+0x9f7c>
   1f130:	mov	r1, r0
   1f134:	mov	r0, r4
   1f138:	bl	1468c <g_task_return_pointer@plt>
   1f13c:	mov	r0, r4
   1f140:	pop	{r4, lr}
   1f144:	b	14e90 <g_object_unref@plt>
   1f148:	muleq	r1, r0, lr
   1f14c:	push	{r4, lr}
   1f150:	mov	r4, r0
   1f154:	bl	14f8c <g_type_class_peek_parent@plt>
   1f158:	ldr	r3, [pc, #12]	; 1f16c <g_strcmp0@plt+0x9fa0>
   1f15c:	ldr	r2, [pc, #12]	; 1f170 <g_strcmp0@plt+0x9fa4>
   1f160:	str	r2, [r4, #24]
   1f164:	str	r0, [r3]
   1f168:	pop	{r4, pc}
   1f16c:	andeq	ip, r4, r8, ror #5
   1f170:	andeq	pc, r1, ip, rrx
   1f174:	push	{r4, r5, r6, r7, lr}
   1f178:	sub	sp, sp, #76	; 0x4c
   1f17c:	ldr	r5, [pc, #192]	; 1f244 <g_strcmp0@plt+0xa078>
   1f180:	mov	r4, r0
   1f184:	mov	r0, r1
   1f188:	ldr	r3, [r5]
   1f18c:	mov	r1, #0
   1f190:	str	r3, [sp, #68]	; 0x44
   1f194:	mov	r7, r2
   1f198:	bl	14e30 <g_task_propagate_pointer@plt>
   1f19c:	mov	r6, r0
   1f1a0:	mov	r0, r4
   1f1a4:	bl	14a4c <g_dbus_proxy_get_connection@plt>
   1f1a8:	mov	r1, r6
   1f1ac:	mov	r2, r7
   1f1b0:	bl	14cec <g_dbus_connection_send_message_with_reply_finish@plt>
   1f1b4:	mov	r4, r0
   1f1b8:	mov	r0, r6
   1f1bc:	bl	14e90 <g_object_unref@plt>
   1f1c0:	cmp	r4, #0
   1f1c4:	moveq	r6, r4
   1f1c8:	beq	1f218 <g_strcmp0@plt+0xa04c>
   1f1cc:	mov	r1, r7
   1f1d0:	mov	r0, r4
   1f1d4:	bl	14d70 <g_dbus_message_to_gerror@plt>
   1f1d8:	cmp	r0, #0
   1f1dc:	mov	r0, r4
   1f1e0:	bne	1f234 <g_strcmp0@plt+0xa068>
   1f1e4:	bl	1462c <g_dbus_message_get_body@plt>
   1f1e8:	mov	r1, r0
   1f1ec:	add	r0, sp, #4
   1f1f0:	bl	14494 <g_variant_iter_init@plt>
   1f1f4:	add	r0, sp, #4
   1f1f8:	bl	148f0 <g_variant_iter_next_value@plt>
   1f1fc:	mov	r7, r0
   1f200:	bl	146a4 <g_variant_get_boolean@plt>
   1f204:	mov	r6, r0
   1f208:	mov	r0, r7
   1f20c:	bl	14cd4 <g_variant_unref@plt>
   1f210:	mov	r0, r4
   1f214:	bl	14e90 <g_object_unref@plt>
   1f218:	ldr	r2, [sp, #68]	; 0x44
   1f21c:	ldr	r3, [r5]
   1f220:	mov	r0, r6
   1f224:	cmp	r2, r3
   1f228:	bne	1f240 <g_strcmp0@plt+0xa074>
   1f22c:	add	sp, sp, #76	; 0x4c
   1f230:	pop	{r4, r5, r6, r7, pc}
   1f234:	bl	14e90 <g_object_unref@plt>
   1f238:	mov	r6, #0
   1f23c:	b	1f218 <g_strcmp0@plt+0xa04c>
   1f240:	bl	14b6c <__stack_chk_fail@plt>
   1f244:	andeq	fp, r4, r8, asr #19
   1f248:	b	1f174 <g_strcmp0@plt+0x9fa8>
   1f24c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1f250:	sub	sp, sp, #88	; 0x58
   1f254:	ldr	r6, [pc, #212]	; 1f330 <g_strcmp0@plt+0xa164>
   1f258:	mov	r4, r0
   1f25c:	mov	r9, r1
   1f260:	ldr	r3, [r6]
   1f264:	mov	sl, r2
   1f268:	str	r3, [sp, #84]	; 0x54
   1f26c:	bl	14464 <g_io_error_quark@plt>
   1f270:	mov	r0, r4
   1f274:	bl	14770 <g_dbus_proxy_get_name@plt>
   1f278:	mov	r5, r0
   1f27c:	mov	r0, r4
   1f280:	bl	148e4 <g_dbus_proxy_get_object_path@plt>
   1f284:	ldr	r3, [pc, #168]	; 1f334 <g_strcmp0@plt+0xa168>
   1f288:	ldr	r2, [pc, #168]	; 1f338 <g_strcmp0@plt+0xa16c>
   1f28c:	mov	r1, r0
   1f290:	mov	r0, r5
   1f294:	bl	14d7c <g_dbus_message_new_method_call@plt>
   1f298:	ldr	r1, [pc, #156]	; 1f33c <g_strcmp0@plt+0xa170>
   1f29c:	mov	r5, r0
   1f2a0:	add	r0, sp, #20
   1f2a4:	bl	149e0 <g_variant_builder_init@plt>
   1f2a8:	add	r0, sp, #20
   1f2ac:	bl	145a8 <g_variant_builder_end@plt>
   1f2b0:	mov	r1, r0
   1f2b4:	mov	r0, r5
   1f2b8:	bl	14848 <g_dbus_message_set_body@plt>
   1f2bc:	mov	r0, r4
   1f2c0:	bl	14a4c <g_dbus_proxy_get_connection@plt>
   1f2c4:	mov	r7, r0
   1f2c8:	mov	r0, r4
   1f2cc:	bl	1483c <g_dbus_proxy_get_default_timeout@plt>
   1f2d0:	mov	r3, sl
   1f2d4:	mov	r2, r9
   1f2d8:	mov	r1, #0
   1f2dc:	mov	r8, r0
   1f2e0:	mov	r0, r4
   1f2e4:	bl	1504c <g_task_new@plt>
   1f2e8:	ldr	ip, [pc, #80]	; 1f340 <g_strcmp0@plt+0xa174>
   1f2ec:	mov	r2, #0
   1f2f0:	mov	r3, r8
   1f2f4:	stmib	sp, {r2, ip}
   1f2f8:	str	r2, [sp]
   1f2fc:	mov	r1, r5
   1f300:	str	r0, [sp, #12]
   1f304:	mov	r0, r7
   1f308:	bl	15184 <g_dbus_connection_send_message_with_reply@plt>
   1f30c:	mov	r0, r5
   1f310:	bl	14e90 <g_object_unref@plt>
   1f314:	ldr	r2, [sp, #84]	; 0x54
   1f318:	ldr	r3, [r6]
   1f31c:	cmp	r2, r3
   1f320:	bne	1f32c <g_strcmp0@plt+0xa160>
   1f324:	add	sp, sp, #88	; 0x58
   1f328:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1f32c:	bl	14b6c <__stack_chk_fail@plt>
   1f330:	andeq	fp, r4, r8, asr #19
   1f334:	strdeq	r6, [r3], -r8
   1f338:	andeq	r6, r3, r0, lsl #2
   1f33c:	andeq	r7, r3, r0, lsl sl
   1f340:	andeq	pc, r1, ip, lsl r1	; <UNPREDICTABLE>
   1f344:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1f348:	sub	sp, sp, #88	; 0x58
   1f34c:	ldr	r6, [pc, #212]	; 1f428 <g_strcmp0@plt+0xa25c>
   1f350:	mov	r4, r0
   1f354:	mov	r9, r1
   1f358:	ldr	r3, [r6]
   1f35c:	mov	sl, r2
   1f360:	str	r3, [sp, #84]	; 0x54
   1f364:	bl	14464 <g_io_error_quark@plt>
   1f368:	mov	r0, r4
   1f36c:	bl	14770 <g_dbus_proxy_get_name@plt>
   1f370:	mov	r5, r0
   1f374:	mov	r0, r4
   1f378:	bl	148e4 <g_dbus_proxy_get_object_path@plt>
   1f37c:	ldr	r3, [pc, #168]	; 1f42c <g_strcmp0@plt+0xa260>
   1f380:	ldr	r2, [pc, #168]	; 1f430 <g_strcmp0@plt+0xa264>
   1f384:	mov	r1, r0
   1f388:	mov	r0, r5
   1f38c:	bl	14d7c <g_dbus_message_new_method_call@plt>
   1f390:	ldr	r1, [pc, #156]	; 1f434 <g_strcmp0@plt+0xa268>
   1f394:	mov	r5, r0
   1f398:	add	r0, sp, #20
   1f39c:	bl	149e0 <g_variant_builder_init@plt>
   1f3a0:	add	r0, sp, #20
   1f3a4:	bl	145a8 <g_variant_builder_end@plt>
   1f3a8:	mov	r1, r0
   1f3ac:	mov	r0, r5
   1f3b0:	bl	14848 <g_dbus_message_set_body@plt>
   1f3b4:	mov	r0, r4
   1f3b8:	bl	14a4c <g_dbus_proxy_get_connection@plt>
   1f3bc:	mov	r7, r0
   1f3c0:	mov	r0, r4
   1f3c4:	bl	1483c <g_dbus_proxy_get_default_timeout@plt>
   1f3c8:	mov	r3, sl
   1f3cc:	mov	r2, r9
   1f3d0:	mov	r1, #0
   1f3d4:	mov	r8, r0
   1f3d8:	mov	r0, r4
   1f3dc:	bl	1504c <g_task_new@plt>
   1f3e0:	ldr	ip, [pc, #80]	; 1f438 <g_strcmp0@plt+0xa26c>
   1f3e4:	mov	r2, #0
   1f3e8:	mov	r3, r8
   1f3ec:	stmib	sp, {r2, ip}
   1f3f0:	str	r2, [sp]
   1f3f4:	mov	r1, r5
   1f3f8:	str	r0, [sp, #12]
   1f3fc:	mov	r0, r7
   1f400:	bl	15184 <g_dbus_connection_send_message_with_reply@plt>
   1f404:	mov	r0, r5
   1f408:	bl	14e90 <g_object_unref@plt>
   1f40c:	ldr	r2, [sp, #84]	; 0x54
   1f410:	ldr	r3, [r6]
   1f414:	cmp	r2, r3
   1f418:	bne	1f424 <g_strcmp0@plt+0xa258>
   1f41c:	add	sp, sp, #88	; 0x58
   1f420:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1f424:	bl	14b6c <__stack_chk_fail@plt>
   1f428:	andeq	fp, r4, r8, asr #19
   1f42c:	andeq	r6, r3, r4, lsr #2
   1f430:	andeq	r6, r3, r0, lsl #2
   1f434:	andeq	r7, r3, r0, lsl sl
   1f438:	andeq	pc, r1, ip, lsl r1	; <UNPREDICTABLE>
   1f43c:	push	{r4, r5, r6, r7, r8, lr}
   1f440:	sub	sp, sp, #88	; 0x58
   1f444:	ldr	r6, [pc, #212]	; 1f520 <g_strcmp0@plt+0xa354>
   1f448:	mov	r4, r0
   1f44c:	mov	r7, r1
   1f450:	ldr	r3, [r6]
   1f454:	str	r3, [sp, #84]	; 0x54
   1f458:	bl	14464 <g_io_error_quark@plt>
   1f45c:	mov	r0, r4
   1f460:	bl	14770 <g_dbus_proxy_get_name@plt>
   1f464:	mov	r5, r0
   1f468:	mov	r0, r4
   1f46c:	bl	148e4 <g_dbus_proxy_get_object_path@plt>
   1f470:	ldr	r3, [pc, #172]	; 1f524 <g_strcmp0@plt+0xa358>
   1f474:	ldr	r2, [pc, #172]	; 1f528 <g_strcmp0@plt+0xa35c>
   1f478:	mov	r1, r0
   1f47c:	mov	r0, r5
   1f480:	bl	14d7c <g_dbus_message_new_method_call@plt>
   1f484:	ldr	r1, [pc, #160]	; 1f52c <g_strcmp0@plt+0xa360>
   1f488:	mov	r5, r0
   1f48c:	add	r0, sp, #20
   1f490:	bl	149e0 <g_variant_builder_init@plt>
   1f494:	add	r0, sp, #20
   1f498:	bl	145a8 <g_variant_builder_end@plt>
   1f49c:	mov	r1, r0
   1f4a0:	mov	r0, r5
   1f4a4:	bl	14848 <g_dbus_message_set_body@plt>
   1f4a8:	mov	r0, r4
   1f4ac:	bl	14a4c <g_dbus_proxy_get_connection@plt>
   1f4b0:	mov	r8, r0
   1f4b4:	mov	r0, r4
   1f4b8:	bl	1483c <g_dbus_proxy_get_default_timeout@plt>
   1f4bc:	mov	r2, #0
   1f4c0:	mov	r1, r5
   1f4c4:	str	r2, [sp, #4]
   1f4c8:	str	r2, [sp]
   1f4cc:	str	r7, [sp, #8]
   1f4d0:	mov	r3, r0
   1f4d4:	mov	r0, r8
   1f4d8:	bl	14b0c <g_dbus_connection_send_message_with_reply_sync@plt>
   1f4dc:	mov	r4, r0
   1f4e0:	mov	r0, r5
   1f4e4:	bl	14e90 <g_object_unref@plt>
   1f4e8:	cmp	r4, #0
   1f4ec:	beq	1f504 <g_strcmp0@plt+0xa338>
   1f4f0:	mov	r1, r7
   1f4f4:	mov	r0, r4
   1f4f8:	bl	14d70 <g_dbus_message_to_gerror@plt>
   1f4fc:	mov	r0, r4
   1f500:	bl	14e90 <g_object_unref@plt>
   1f504:	ldr	r2, [sp, #84]	; 0x54
   1f508:	ldr	r3, [r6]
   1f50c:	cmp	r2, r3
   1f510:	bne	1f51c <g_strcmp0@plt+0xa350>
   1f514:	add	sp, sp, #88	; 0x58
   1f518:	pop	{r4, r5, r6, r7, r8, pc}
   1f51c:	bl	14b6c <__stack_chk_fail@plt>
   1f520:	andeq	fp, r4, r8, asr #19
   1f524:	andeq	r6, r3, r0, lsr r1
   1f528:	andeq	r6, r3, r0, lsl #2
   1f52c:	andeq	r7, r3, r0, lsl sl
   1f530:	push	{r4, r5, r6, r7, r8, lr}
   1f534:	sub	sp, sp, #88	; 0x58
   1f538:	ldr	r6, [pc, #212]	; 1f614 <g_strcmp0@plt+0xa448>
   1f53c:	mov	r4, r0
   1f540:	mov	r7, r1
   1f544:	ldr	r3, [r6]
   1f548:	str	r3, [sp, #84]	; 0x54
   1f54c:	bl	14464 <g_io_error_quark@plt>
   1f550:	mov	r0, r4
   1f554:	bl	14770 <g_dbus_proxy_get_name@plt>
   1f558:	mov	r5, r0
   1f55c:	mov	r0, r4
   1f560:	bl	148e4 <g_dbus_proxy_get_object_path@plt>
   1f564:	ldr	r3, [pc, #172]	; 1f618 <g_strcmp0@plt+0xa44c>
   1f568:	ldr	r2, [pc, #172]	; 1f61c <g_strcmp0@plt+0xa450>
   1f56c:	mov	r1, r0
   1f570:	mov	r0, r5
   1f574:	bl	14d7c <g_dbus_message_new_method_call@plt>
   1f578:	ldr	r1, [pc, #160]	; 1f620 <g_strcmp0@plt+0xa454>
   1f57c:	mov	r5, r0
   1f580:	add	r0, sp, #20
   1f584:	bl	149e0 <g_variant_builder_init@plt>
   1f588:	add	r0, sp, #20
   1f58c:	bl	145a8 <g_variant_builder_end@plt>
   1f590:	mov	r1, r0
   1f594:	mov	r0, r5
   1f598:	bl	14848 <g_dbus_message_set_body@plt>
   1f59c:	mov	r0, r4
   1f5a0:	bl	14a4c <g_dbus_proxy_get_connection@plt>
   1f5a4:	mov	r8, r0
   1f5a8:	mov	r0, r4
   1f5ac:	bl	1483c <g_dbus_proxy_get_default_timeout@plt>
   1f5b0:	mov	r2, #0
   1f5b4:	mov	r1, r5
   1f5b8:	str	r2, [sp, #4]
   1f5bc:	str	r2, [sp]
   1f5c0:	str	r7, [sp, #8]
   1f5c4:	mov	r3, r0
   1f5c8:	mov	r0, r8
   1f5cc:	bl	14b0c <g_dbus_connection_send_message_with_reply_sync@plt>
   1f5d0:	mov	r4, r0
   1f5d4:	mov	r0, r5
   1f5d8:	bl	14e90 <g_object_unref@plt>
   1f5dc:	cmp	r4, #0
   1f5e0:	beq	1f5f8 <g_strcmp0@plt+0xa42c>
   1f5e4:	mov	r1, r7
   1f5e8:	mov	r0, r4
   1f5ec:	bl	14d70 <g_dbus_message_to_gerror@plt>
   1f5f0:	mov	r0, r4
   1f5f4:	bl	14e90 <g_object_unref@plt>
   1f5f8:	ldr	r2, [sp, #84]	; 0x54
   1f5fc:	ldr	r3, [r6]
   1f600:	cmp	r2, r3
   1f604:	bne	1f610 <g_strcmp0@plt+0xa444>
   1f608:	add	sp, sp, #88	; 0x58
   1f60c:	pop	{r4, r5, r6, r7, r8, pc}
   1f610:	bl	14b6c <__stack_chk_fail@plt>
   1f614:	andeq	fp, r4, r8, asr #19
   1f618:	andeq	r6, r3, r8, lsr r1
   1f61c:	andeq	r6, r3, r0, lsl #2
   1f620:	andeq	r7, r3, r0, lsl sl
   1f624:	push	{r4, lr}
   1f628:	mov	r4, r0
   1f62c:	bl	14f8c <g_type_class_peek_parent@plt>
   1f630:	ldr	r1, [pc, #36]	; 1f65c <g_strcmp0@plt+0xa490>
   1f634:	ldr	r3, [r1, #4]
   1f638:	cmp	r3, #0
   1f63c:	bne	1f64c <g_strcmp0@plt+0xa480>
   1f640:	ldr	r3, [pc, #24]	; 1f660 <g_strcmp0@plt+0xa494>
   1f644:	str	r3, [r4, #72]	; 0x48
   1f648:	pop	{r4, pc}
   1f64c:	add	r1, r1, #4
   1f650:	mov	r0, r4
   1f654:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   1f658:	b	1f640 <g_strcmp0@plt+0xa474>
   1f65c:	andeq	ip, r4, r8, ror #5
   1f660:	andeq	pc, r1, ip
   1f664:	push	{r4, r5, r6, r7, r8, lr}
   1f668:	mov	r8, r0
   1f66c:	sub	sp, sp, #16
   1f670:	mov	r0, #12
   1f674:	mov	r5, r1
   1f678:	mov	r6, r2
   1f67c:	mov	r7, r3
   1f680:	bl	148c0 <g_malloc@plt>
   1f684:	mov	r4, r0
   1f688:	mov	r0, r8
   1f68c:	bl	14404 <g_object_ref@plt>
   1f690:	str	r0, [r4]
   1f694:	mov	r0, r5
   1f698:	bl	14404 <g_object_ref@plt>
   1f69c:	str	r0, [r4, #4]
   1f6a0:	mov	r0, r6
   1f6a4:	bl	147e8 <g_strdup@plt>
   1f6a8:	ldr	r3, [pc, #40]	; 1f6d8 <g_strcmp0@plt+0xa50c>
   1f6ac:	ldr	r2, [pc, #40]	; 1f6dc <g_strcmp0@plt+0xa510>
   1f6b0:	str	r7, [sp, #8]
   1f6b4:	str	r2, [sp, #4]
   1f6b8:	str	r4, [sp]
   1f6bc:	mov	r1, r6
   1f6c0:	add	r2, r3, #44	; 0x2c
   1f6c4:	str	r0, [r4, #8]
   1f6c8:	mov	r0, r5
   1f6cc:	bl	143ec <g_dbus_connection_register_object@plt>
   1f6d0:	add	sp, sp, #16
   1f6d4:	pop	{r4, r5, r6, r7, r8, pc}
   1f6d8:			; <UNDEFINED> instruction: 0x00035fb8
   1f6dc:	andeq	pc, r1, r0, ror #13
   1f6e0:	push	{r4, lr}
   1f6e4:	mov	r4, r0
   1f6e8:	ldr	r0, [r0]
   1f6ec:	bl	14e90 <g_object_unref@plt>
   1f6f0:	ldr	r0, [r4, #4]
   1f6f4:	bl	14e90 <g_object_unref@plt>
   1f6f8:	ldr	r0, [r4, #8]
   1f6fc:	bl	14bd8 <g_free@plt>
   1f700:	mov	r0, r4
   1f704:	pop	{r4, lr}
   1f708:	b	14bd8 <g_free@plt>
   1f70c:	bx	lr
   1f710:	bx	lr
   1f714:	push	{r4, lr}
   1f718:	mov	r0, r1
   1f71c:	mov	r1, #0
   1f720:	bl	14e30 <g_task_propagate_pointer@plt>
   1f724:	ldr	r0, [r0, #28]
   1f728:	pop	{r4, pc}
   1f72c:	push	{r4, r5, r6, lr}
   1f730:	mcr	15, 0, r0, cr7, cr10, {5}
   1f734:	ldr	r4, [pc, #76]	; 1f788 <g_strcmp0@plt+0xa5bc>
   1f738:	ldr	r5, [r4, #8]
   1f73c:	mcr	15, 0, r0, cr7, cr10, {5}
   1f740:	cmp	r5, #0
   1f744:	beq	1f750 <g_strcmp0@plt+0xa584>
   1f748:	ldr	r0, [r4, #8]
   1f74c:	pop	{r4, r5, r6, pc}
   1f750:	add	r0, r4, #8
   1f754:	bl	14a28 <g_once_init_enter@plt>
   1f758:	cmp	r0, #0
   1f75c:	beq	1f748 <g_strcmp0@plt+0xa57c>
   1f760:	mov	r3, r5
   1f764:	ldr	r2, [pc, #32]	; 1f78c <g_strcmp0@plt+0xa5c0>
   1f768:	ldr	r1, [pc, #32]	; 1f790 <g_strcmp0@plt+0xa5c4>
   1f76c:	mov	r0, #80	; 0x50
   1f770:	bl	14428 <g_type_register_static@plt>
   1f774:	mov	r1, r0
   1f778:	add	r0, r4, #8
   1f77c:	bl	14ed8 <g_once_init_leave@plt>
   1f780:	ldr	r0, [r4, #8]
   1f784:	pop	{r4, r5, r6, pc}
   1f788:	andeq	ip, r4, r8, ror #5
   1f78c:	strdeq	r5, [r3], -ip
   1f790:	andeq	r6, r3, r0, asr #2
   1f794:	push	{r4, r5, r6, lr}
   1f798:	mcr	15, 0, r0, cr7, cr10, {5}
   1f79c:	ldr	r4, [pc, #184]	; 1f85c <g_strcmp0@plt+0xa690>
   1f7a0:	ldr	r5, [r4, #12]
   1f7a4:	mcr	15, 0, r0, cr7, cr10, {5}
   1f7a8:	cmp	r5, #0
   1f7ac:	beq	1f7b8 <g_strcmp0@plt+0xa5ec>
   1f7b0:	ldr	r0, [r4, #12]
   1f7b4:	pop	{r4, r5, r6, pc}
   1f7b8:	add	r0, r4, #12
   1f7bc:	bl	14a28 <g_once_init_enter@plt>
   1f7c0:	cmp	r0, #0
   1f7c4:	beq	1f7b0 <g_strcmp0@plt+0xa5e4>
   1f7c8:	mov	r3, r5
   1f7cc:	ldr	r2, [pc, #140]	; 1f860 <g_strcmp0@plt+0xa694>
   1f7d0:	ldr	r1, [pc, #140]	; 1f864 <g_strcmp0@plt+0xa698>
   1f7d4:	mov	r0, #8
   1f7d8:	bl	14428 <g_type_register_static@plt>
   1f7dc:	mov	r1, #80	; 0x50
   1f7e0:	mov	r5, r0
   1f7e4:	bl	14950 <g_type_interface_add_prerequisite@plt>
   1f7e8:	ldr	r0, [pc, #120]	; 1f868 <g_strcmp0@plt+0xa69c>
   1f7ec:	bl	14d64 <g_quark_from_static_string@plt>
   1f7f0:	ldr	r2, [pc, #116]	; 1f86c <g_strcmp0@plt+0xa6a0>
   1f7f4:	mov	r1, r0
   1f7f8:	mov	r0, r5
   1f7fc:	bl	15028 <g_type_set_qdata@plt>
   1f800:	ldr	r0, [pc, #104]	; 1f870 <g_strcmp0@plt+0xa6a4>
   1f804:	bl	14d64 <g_quark_from_static_string@plt>
   1f808:	ldr	r2, [pc, #100]	; 1f874 <g_strcmp0@plt+0xa6a8>
   1f80c:	mov	r1, r0
   1f810:	mov	r0, r5
   1f814:	bl	15028 <g_type_set_qdata@plt>
   1f818:	ldr	r0, [pc, #88]	; 1f878 <g_strcmp0@plt+0xa6ac>
   1f81c:	bl	14d64 <g_quark_from_static_string@plt>
   1f820:	ldr	r2, [pc, #84]	; 1f87c <g_strcmp0@plt+0xa6b0>
   1f824:	mov	r1, r0
   1f828:	mov	r0, r5
   1f82c:	bl	15028 <g_type_set_qdata@plt>
   1f830:	ldr	r0, [pc, #72]	; 1f880 <g_strcmp0@plt+0xa6b4>
   1f834:	bl	14d64 <g_quark_from_static_string@plt>
   1f838:	ldr	r2, [pc, #68]	; 1f884 <g_strcmp0@plt+0xa6b8>
   1f83c:	mov	r1, r0
   1f840:	mov	r0, r5
   1f844:	bl	15028 <g_type_set_qdata@plt>
   1f848:	add	r0, r4, #12
   1f84c:	mov	r1, r5
   1f850:	bl	14ed8 <g_once_init_leave@plt>
   1f854:	ldr	r0, [r4, #12]
   1f858:	pop	{r4, r5, r6, pc}
   1f85c:	andeq	ip, r4, r8, ror #5
   1f860:	andeq	r6, r3, r0, lsr #32
   1f864:	andeq	r6, r3, r8, asr r1
   1f868:	andeq	r6, r3, r4, ror r1
   1f86c:	andeq	r0, r2, ip, lsl #5
   1f870:	andeq	r6, r3, ip, lsl #3
   1f874:	andeq	r6, r3, r0, lsl #2
   1f878:	andeq	r6, r3, r8, lsr #3
   1f87c:	andeq	r5, r3, r4, ror #31
   1f880:	andeq	r6, r3, r4, asr #3
   1f884:	andeq	pc, r1, r4, ror #12
   1f888:	push	{r4, r5, r6, lr}
   1f88c:	mov	r4, r0
   1f890:	mov	r5, r1
   1f894:	bl	1f794 <g_strcmp0@plt+0xa5c8>
   1f898:	mov	r1, r0
   1f89c:	ldr	r0, [r4]
   1f8a0:	bl	1465c <g_type_interface_peek@plt>
   1f8a4:	mov	r1, r5
   1f8a8:	ldr	r3, [r0, #8]
   1f8ac:	mov	r0, r4
   1f8b0:	pop	{r4, r5, r6, lr}
   1f8b4:	bx	r3
   1f8b8:	push	{r4, r5, r6, lr}
   1f8bc:	sub	sp, sp, #24
   1f8c0:	ldr	r6, [pc, #220]	; 1f9a4 <g_strcmp0@plt+0xa7d8>
   1f8c4:	mov	r4, #0
   1f8c8:	ldr	r0, [r0, #16]
   1f8cc:	ldr	r3, [r6]
   1f8d0:	add	r1, sp, #16
   1f8d4:	str	r3, [sp, #20]
   1f8d8:	str	r4, [sp, #16]
   1f8dc:	bl	1f888 <g_strcmp0@plt+0xa6bc>
   1f8e0:	ldr	r3, [sp, #16]
   1f8e4:	cmp	r3, r4
   1f8e8:	beq	1f988 <g_strcmp0@plt+0xa7bc>
   1f8ec:	ldr	r5, [r3]
   1f8f0:	bl	14464 <g_io_error_quark@plt>
   1f8f4:	cmp	r5, r0
   1f8f8:	ldr	r5, [sp, #16]
   1f8fc:	beq	1f920 <g_strcmp0@plt+0xa754>
   1f900:	ldr	r0, [r5]
   1f904:	bl	14c2c <g_quark_to_string@plt>
   1f908:	ldr	r3, [r5, #4]
   1f90c:	mov	ip, #524	; 0x20c
   1f910:	str	r3, [sp, #12]
   1f914:	ldr	r2, [pc, #140]	; 1f9a8 <g_strcmp0@plt+0xa7dc>
   1f918:	ldr	r3, [pc, #140]	; 1f9ac <g_strcmp0@plt+0xa7e0>
   1f91c:	b	1f968 <g_strcmp0@plt+0xa79c>
   1f920:	ldr	r3, [r5, #8]
   1f924:	ldr	r2, [pc, #132]	; 1f9b0 <g_strcmp0@plt+0xa7e4>
   1f928:	mov	r1, #16
   1f92c:	mov	r0, r4
   1f930:	str	r4, [sp, #16]
   1f934:	bl	14668 <g_log@plt>
   1f938:	mov	r0, r5
   1f93c:	bl	1453c <g_error_free@plt>
   1f940:	ldr	r5, [sp, #16]
   1f944:	cmp	r5, r4
   1f948:	beq	1f988 <g_strcmp0@plt+0xa7bc>
   1f94c:	ldr	r0, [r5]
   1f950:	bl	14c2c <g_quark_to_string@plt>
   1f954:	ldr	r3, [r5, #4]
   1f958:	ldr	r2, [pc, #84]	; 1f9b4 <g_strcmp0@plt+0xa7e8>
   1f95c:	str	r3, [sp, #12]
   1f960:	ldr	r3, [pc, #68]	; 1f9ac <g_strcmp0@plt+0xa7e0>
   1f964:	mov	ip, #544	; 0x220
   1f968:	str	r0, [sp, #8]
   1f96c:	ldr	lr, [r5, #8]
   1f970:	mov	r0, r4
   1f974:	mov	r1, #8
   1f978:	stm	sp, {ip, lr}
   1f97c:	bl	14668 <g_log@plt>
   1f980:	add	r0, sp, #16
   1f984:	bl	14dac <g_clear_error@plt>
   1f988:	ldr	r2, [sp, #20]
   1f98c:	ldr	r3, [r6]
   1f990:	cmp	r2, r3
   1f994:	bne	1f9a0 <g_strcmp0@plt+0xa7d4>
   1f998:	add	sp, sp, #24
   1f99c:	pop	{r4, r5, r6, pc}
   1f9a0:	bl	14b6c <__stack_chk_fail@plt>
   1f9a4:	andeq	fp, r4, r8, asr #19
   1f9a8:	andeq	r4, r3, r4, ror r6
   1f9ac:	strdeq	r6, [r3], -r8
   1f9b0:	andeq	r6, r3, r0, ror #3
   1f9b4:	andeq	r4, r3, r4, lsr #13
   1f9b8:	push	{r4, r5, r6, lr}
   1f9bc:	mov	r4, r0
   1f9c0:	mov	r5, r1
   1f9c4:	bl	1f794 <g_strcmp0@plt+0xa5c8>
   1f9c8:	mov	r1, r0
   1f9cc:	ldr	r0, [r4]
   1f9d0:	bl	1465c <g_type_interface_peek@plt>
   1f9d4:	mov	r1, r5
   1f9d8:	ldr	r3, [r0, #12]
   1f9dc:	mov	r0, r4
   1f9e0:	pop	{r4, r5, r6, lr}
   1f9e4:	bx	r3
   1f9e8:	push	{r4, r5, r6, lr}
   1f9ec:	sub	sp, sp, #24
   1f9f0:	ldr	r6, [pc, #220]	; 1fad4 <g_strcmp0@plt+0xa908>
   1f9f4:	mov	r4, #0
   1f9f8:	ldr	r0, [r0, #16]
   1f9fc:	ldr	r3, [r6]
   1fa00:	add	r1, sp, #16
   1fa04:	str	r3, [sp, #20]
   1fa08:	str	r4, [sp, #16]
   1fa0c:	bl	1f9b8 <g_strcmp0@plt+0xa7ec>
   1fa10:	ldr	r3, [sp, #16]
   1fa14:	cmp	r3, r4
   1fa18:	beq	1fab8 <g_strcmp0@plt+0xa8ec>
   1fa1c:	ldr	r5, [r3]
   1fa20:	bl	14464 <g_io_error_quark@plt>
   1fa24:	cmp	r5, r0
   1fa28:	ldr	r5, [sp, #16]
   1fa2c:	beq	1fa50 <g_strcmp0@plt+0xa884>
   1fa30:	ldr	r0, [r5]
   1fa34:	bl	14c2c <g_quark_to_string@plt>
   1fa38:	ldr	r3, [r5, #4]
   1fa3c:	mov	ip, #484	; 0x1e4
   1fa40:	str	r3, [sp, #12]
   1fa44:	ldr	r2, [pc, #140]	; 1fad8 <g_strcmp0@plt+0xa90c>
   1fa48:	ldr	r3, [pc, #140]	; 1fadc <g_strcmp0@plt+0xa910>
   1fa4c:	b	1fa98 <g_strcmp0@plt+0xa8cc>
   1fa50:	ldr	r3, [r5, #8]
   1fa54:	ldr	r2, [pc, #132]	; 1fae0 <g_strcmp0@plt+0xa914>
   1fa58:	mov	r1, #16
   1fa5c:	mov	r0, r4
   1fa60:	str	r4, [sp, #16]
   1fa64:	bl	14668 <g_log@plt>
   1fa68:	mov	r0, r5
   1fa6c:	bl	1453c <g_error_free@plt>
   1fa70:	ldr	r5, [sp, #16]
   1fa74:	cmp	r5, r4
   1fa78:	beq	1fab8 <g_strcmp0@plt+0xa8ec>
   1fa7c:	ldr	r0, [r5]
   1fa80:	bl	14c2c <g_quark_to_string@plt>
   1fa84:	ldr	r3, [r5, #4]
   1fa88:	ldr	r2, [pc, #84]	; 1fae4 <g_strcmp0@plt+0xa918>
   1fa8c:	str	r3, [sp, #12]
   1fa90:	ldr	r3, [pc, #68]	; 1fadc <g_strcmp0@plt+0xa910>
   1fa94:	mov	ip, #504	; 0x1f8
   1fa98:	str	r0, [sp, #8]
   1fa9c:	ldr	lr, [r5, #8]
   1faa0:	mov	r0, r4
   1faa4:	mov	r1, #8
   1faa8:	stm	sp, {ip, lr}
   1faac:	bl	14668 <g_log@plt>
   1fab0:	add	r0, sp, #16
   1fab4:	bl	14dac <g_clear_error@plt>
   1fab8:	ldr	r2, [sp, #20]
   1fabc:	ldr	r3, [r6]
   1fac0:	cmp	r2, r3
   1fac4:	bne	1fad0 <g_strcmp0@plt+0xa904>
   1fac8:	add	sp, sp, #24
   1facc:	pop	{r4, r5, r6, pc}
   1fad0:	bl	14b6c <__stack_chk_fail@plt>
   1fad4:	andeq	fp, r4, r8, asr #19
   1fad8:	andeq	r4, r3, r4, ror r6
   1fadc:	strdeq	r6, [r3], -r8
   1fae0:	andeq	r6, r3, r0, lsl r2
   1fae4:	andeq	r4, r3, r4, lsr #13
   1fae8:	push	{r4, r5, r6, lr}
   1faec:	mov	r4, r0
   1faf0:	mov	r5, r1
   1faf4:	mov	r6, r2
   1faf8:	bl	1f794 <g_strcmp0@plt+0xa5c8>
   1fafc:	mov	r1, r0
   1fb00:	ldr	r0, [r4]
   1fb04:	bl	1465c <g_type_interface_peek@plt>
   1fb08:	mov	r2, r6
   1fb0c:	mov	r1, r5
   1fb10:	ldr	r3, [r0, #16]
   1fb14:	mov	r0, r4
   1fb18:	pop	{r4, r5, r6, lr}
   1fb1c:	bx	r3
   1fb20:	push	{r4, r5, r6, lr}
   1fb24:	mov	r4, r0
   1fb28:	mov	r5, r1
   1fb2c:	mov	r6, r2
   1fb30:	bl	1f794 <g_strcmp0@plt+0xa5c8>
   1fb34:	mov	r1, r0
   1fb38:	ldr	r0, [r4]
   1fb3c:	bl	1465c <g_type_interface_peek@plt>
   1fb40:	mov	r2, r6
   1fb44:	mov	r1, r5
   1fb48:	ldr	r3, [r0, #20]
   1fb4c:	mov	r0, r4
   1fb50:	pop	{r4, r5, r6, lr}
   1fb54:	bx	r3
   1fb58:	push	{r4, r5, r6, r7, r8, r9, lr}
   1fb5c:	mov	r6, r2
   1fb60:	ldr	r5, [pc, #220]	; 1fc44 <g_strcmp0@plt+0xaa78>
   1fb64:	sub	sp, sp, #84	; 0x54
   1fb68:	mov	r3, #0
   1fb6c:	ldr	ip, [r5]
   1fb70:	add	r2, sp, #8
   1fb74:	str	ip, [sp, #76]	; 0x4c
   1fb78:	ldr	r7, [r6]
   1fb7c:	str	r3, [sp, #8]
   1fb80:	bl	1fb20 <g_strcmp0@plt+0xa954>
   1fb84:	ldr	r4, [sp, #8]
   1fb88:	cmp	r4, #0
   1fb8c:	beq	1fbc8 <g_strcmp0@plt+0xa9fc>
   1fb90:	mov	r0, r7
   1fb94:	mov	r1, r4
   1fb98:	bl	14884 <g_dbus_method_invocation_return_gerror@plt>
   1fb9c:	ldr	r0, [sp, #8]
   1fba0:	bl	1453c <g_error_free@plt>
   1fba4:	mov	r1, r6
   1fba8:	mov	r0, #4
   1fbac:	bl	150ac <g_slice_free1@plt>
   1fbb0:	ldr	r2, [sp, #76]	; 0x4c
   1fbb4:	ldr	r3, [r5]
   1fbb8:	cmp	r2, r3
   1fbbc:	bne	1fc40 <g_strcmp0@plt+0xaa74>
   1fbc0:	add	sp, sp, #84	; 0x54
   1fbc4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1fbc8:	mov	r9, r0
   1fbcc:	mov	r0, r7
   1fbd0:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   1fbd4:	bl	14704 <g_dbus_message_new_method_reply@plt>
   1fbd8:	ldr	r1, [pc, #104]	; 1fc48 <g_strcmp0@plt+0xaa7c>
   1fbdc:	mov	r8, r0
   1fbe0:	add	r0, sp, #12
   1fbe4:	bl	149e0 <g_variant_builder_init@plt>
   1fbe8:	mov	r0, r9
   1fbec:	bl	1456c <g_variant_new_boolean@plt>
   1fbf0:	mov	r1, r0
   1fbf4:	add	r0, sp, #12
   1fbf8:	bl	145f0 <g_variant_builder_add_value@plt>
   1fbfc:	add	r0, sp, #12
   1fc00:	bl	145a8 <g_variant_builder_end@plt>
   1fc04:	mov	r1, r0
   1fc08:	mov	r0, r8
   1fc0c:	bl	14848 <g_dbus_message_set_body@plt>
   1fc10:	mov	r0, r7
   1fc14:	bl	14c68 <g_dbus_method_invocation_get_connection@plt>
   1fc18:	mov	r1, r8
   1fc1c:	mov	r3, r4
   1fc20:	mov	r2, r4
   1fc24:	str	r4, [sp]
   1fc28:	bl	14adc <g_dbus_connection_send_message@plt>
   1fc2c:	mov	r0, r7
   1fc30:	bl	14e90 <g_object_unref@plt>
   1fc34:	mov	r0, r8
   1fc38:	bl	14e90 <g_object_unref@plt>
   1fc3c:	b	1fba4 <g_strcmp0@plt+0xa9d8>
   1fc40:	bl	14b6c <__stack_chk_fail@plt>
   1fc44:	andeq	fp, r4, r8, asr #19
   1fc48:	andeq	r7, r3, r0, lsl sl
   1fc4c:	push	{r4, r5, r6, lr}
   1fc50:	mov	r4, r0
   1fc54:	mov	r5, r1
   1fc58:	mov	r6, r2
   1fc5c:	bl	1f794 <g_strcmp0@plt+0xa5c8>
   1fc60:	mov	r1, r0
   1fc64:	ldr	r0, [r4]
   1fc68:	bl	1465c <g_type_interface_peek@plt>
   1fc6c:	mov	r2, r6
   1fc70:	mov	r1, r5
   1fc74:	ldr	r3, [r0, #24]
   1fc78:	mov	r0, r4
   1fc7c:	pop	{r4, r5, r6, lr}
   1fc80:	bx	r3
   1fc84:	push	{r4, r5, r6, r7, r8, lr}
   1fc88:	sub	sp, sp, #144	; 0x90
   1fc8c:	ldr	r5, [pc, #436]	; 1fe48 <g_strcmp0@plt+0xac7c>
   1fc90:	ldr	r3, [sp, #180]	; 0xb4
   1fc94:	ldr	r4, [sp, #168]	; 0xa8
   1fc98:	ldr	r2, [r5]
   1fc9c:	mov	r0, r4
   1fca0:	ldr	r1, [pc, #420]	; 1fe4c <g_strcmp0@plt+0xac80>
   1fca4:	ldr	r7, [r3]
   1fca8:	str	r2, [sp, #140]	; 0x8c
   1fcac:	bl	14fd4 <strcmp@plt>
   1fcb0:	ldr	r8, [sp, #172]	; 0xac
   1fcb4:	ldr	r6, [sp, #176]	; 0xb0
   1fcb8:	subs	r3, r0, #0
   1fcbc:	beq	1fd80 <g_strcmp0@plt+0xabb4>
   1fcc0:	ldr	r1, [pc, #392]	; 1fe50 <g_strcmp0@plt+0xac84>
   1fcc4:	mov	r0, r4
   1fcc8:	bl	14fd4 <strcmp@plt>
   1fccc:	subs	r3, r0, #0
   1fcd0:	beq	1fd2c <g_strcmp0@plt+0xab60>
   1fcd4:	ldr	r1, [pc, #376]	; 1fe54 <g_strcmp0@plt+0xac88>
   1fcd8:	mov	r0, r4
   1fcdc:	bl	14fd4 <strcmp@plt>
   1fce0:	cmp	r0, #0
   1fce4:	beq	1fe14 <g_strcmp0@plt+0xac48>
   1fce8:	mov	r0, r4
   1fcec:	ldr	r1, [pc, #356]	; 1fe58 <g_strcmp0@plt+0xac8c>
   1fcf0:	bl	14fd4 <strcmp@plt>
   1fcf4:	cmp	r0, #0
   1fcf8:	bne	1fe08 <g_strcmp0@plt+0xac3c>
   1fcfc:	mov	r1, r8
   1fd00:	add	r0, sp, #76	; 0x4c
   1fd04:	bl	14494 <g_variant_iter_init@plt>
   1fd08:	mov	r0, #4
   1fd0c:	bl	14a34 <g_slice_alloc0@plt>
   1fd10:	ldr	r1, [pc, #324]	; 1fe5c <g_strcmp0@plt+0xac90>
   1fd14:	mov	r3, r0
   1fd18:	mov	r2, r0
   1fd1c:	str	r6, [r3]
   1fd20:	mov	r0, r7
   1fd24:	bl	1fc4c <g_strcmp0@plt+0xaa80>
   1fd28:	b	1fd68 <g_strcmp0@plt+0xab9c>
   1fd2c:	mov	r1, r8
   1fd30:	add	r0, sp, #12
   1fd34:	str	r3, [sp, #8]
   1fd38:	bl	14494 <g_variant_iter_init@plt>
   1fd3c:	mov	r0, r7
   1fd40:	add	r1, sp, #8
   1fd44:	bl	1f9b8 <g_strcmp0@plt+0xa7ec>
   1fd48:	ldr	r4, [sp, #8]
   1fd4c:	cmp	r4, #0
   1fd50:	beq	1fda8 <g_strcmp0@plt+0xabdc>
   1fd54:	mov	r0, r6
   1fd58:	mov	r1, r4
   1fd5c:	bl	14884 <g_dbus_method_invocation_return_gerror@plt>
   1fd60:	ldr	r0, [sp, #8]
   1fd64:	bl	1453c <g_error_free@plt>
   1fd68:	ldr	r2, [sp, #140]	; 0x8c
   1fd6c:	ldr	r3, [r5]
   1fd70:	cmp	r2, r3
   1fd74:	bne	1fe44 <g_strcmp0@plt+0xac78>
   1fd78:	add	sp, sp, #144	; 0x90
   1fd7c:	pop	{r4, r5, r6, r7, r8, pc}
   1fd80:	mov	r1, r8
   1fd84:	add	r0, sp, #12
   1fd88:	str	r3, [sp, #8]
   1fd8c:	bl	14494 <g_variant_iter_init@plt>
   1fd90:	mov	r0, r7
   1fd94:	add	r1, sp, #8
   1fd98:	bl	1f888 <g_strcmp0@plt+0xa6bc>
   1fd9c:	ldr	r4, [sp, #8]
   1fda0:	cmp	r4, #0
   1fda4:	bne	1fd54 <g_strcmp0@plt+0xab88>
   1fda8:	mov	r0, r6
   1fdac:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   1fdb0:	bl	14704 <g_dbus_message_new_method_reply@plt>
   1fdb4:	ldr	r1, [pc, #164]	; 1fe60 <g_strcmp0@plt+0xac94>
   1fdb8:	mov	r7, r0
   1fdbc:	add	r0, sp, #76	; 0x4c
   1fdc0:	bl	149e0 <g_variant_builder_init@plt>
   1fdc4:	add	r0, sp, #76	; 0x4c
   1fdc8:	bl	145a8 <g_variant_builder_end@plt>
   1fdcc:	mov	r1, r0
   1fdd0:	mov	r0, r7
   1fdd4:	bl	14848 <g_dbus_message_set_body@plt>
   1fdd8:	mov	r0, r6
   1fddc:	bl	14c68 <g_dbus_method_invocation_get_connection@plt>
   1fde0:	mov	r1, r7
   1fde4:	mov	r3, r4
   1fde8:	mov	r2, r4
   1fdec:	str	r4, [sp]
   1fdf0:	bl	14adc <g_dbus_connection_send_message@plt>
   1fdf4:	mov	r0, r6
   1fdf8:	bl	14e90 <g_object_unref@plt>
   1fdfc:	mov	r0, r7
   1fe00:	bl	14e90 <g_object_unref@plt>
   1fe04:	b	1fd68 <g_strcmp0@plt+0xab9c>
   1fe08:	mov	r0, r6
   1fe0c:	bl	14e90 <g_object_unref@plt>
   1fe10:	b	1fd68 <g_strcmp0@plt+0xab9c>
   1fe14:	mov	r1, r8
   1fe18:	add	r0, sp, #76	; 0x4c
   1fe1c:	bl	14494 <g_variant_iter_init@plt>
   1fe20:	mov	r0, #4
   1fe24:	bl	14a34 <g_slice_alloc0@plt>
   1fe28:	ldr	r1, [pc, #52]	; 1fe64 <g_strcmp0@plt+0xac98>
   1fe2c:	mov	r3, r0
   1fe30:	mov	r2, r0
   1fe34:	str	r6, [r3]
   1fe38:	mov	r0, r7
   1fe3c:	bl	1fae8 <g_strcmp0@plt+0xa91c>
   1fe40:	b	1fd68 <g_strcmp0@plt+0xab9c>
   1fe44:	bl	14b6c <__stack_chk_fail@plt>
   1fe48:	andeq	fp, r4, r8, asr #19
   1fe4c:	andeq	r6, r3, r8, lsr r1
   1fe50:	andeq	r6, r3, r0, lsr r1
   1fe54:	andeq	r6, r3, r4, lsr #2
   1fe58:	strdeq	r6, [r3], -r8
   1fe5c:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   1fe60:	andeq	r7, r3, r0, lsl sl
   1fe64:	andeq	pc, r1, r8, asr fp	; <UNPREDICTABLE>
   1fe68:	push	{r4, r5, r6, lr}
   1fe6c:	mov	r4, r0
   1fe70:	mov	r5, r1
   1fe74:	mov	r6, r2
   1fe78:	bl	1f794 <g_strcmp0@plt+0xa5c8>
   1fe7c:	mov	r1, r0
   1fe80:	ldr	r0, [r4]
   1fe84:	bl	1465c <g_type_interface_peek@plt>
   1fe88:	mov	r2, r6
   1fe8c:	mov	r1, r5
   1fe90:	ldr	r3, [r0, #28]
   1fe94:	mov	r0, r4
   1fe98:	pop	{r4, r5, r6, lr}
   1fe9c:	bx	r3
   1fea0:	ldr	r3, [r0]
   1fea4:	push	{r4, r5, r6, lr}
   1fea8:	cmp	r3, #1
   1feac:	sub	sp, sp, #16
   1feb0:	mov	r4, r0
   1feb4:	beq	1feec <g_strcmp0@plt+0xad20>
   1feb8:	ldr	r1, [r0, #24]
   1febc:	mov	r3, #1
   1fec0:	mov	r2, #0
   1fec4:	ldr	r0, [r1, #16]
   1fec8:	str	r2, [r4, #32]
   1fecc:	str	r0, [r4, #40]	; 0x28
   1fed0:	str	r3, [r4]
   1fed4:	mov	r2, r4
   1fed8:	ldr	r1, [pc, #356]	; 20044 <g_strcmp0@plt+0xae78>
   1fedc:	bl	1fc4c <g_strcmp0@plt+0xaa80>
   1fee0:	mov	r0, #0
   1fee4:	add	sp, sp, #16
   1fee8:	pop	{r4, r5, r6, pc}
   1feec:	add	r6, r0, #56	; 0x38
   1fef0:	ldr	r1, [r0, #8]
   1fef4:	mov	r2, r6
   1fef8:	ldr	r0, [r0, #40]	; 0x28
   1fefc:	bl	1fe68 <g_strcmp0@plt+0xac9c>
   1ff00:	ldr	r3, [r4, #56]	; 0x38
   1ff04:	cmp	r3, #0
   1ff08:	str	r0, [r4, #36]	; 0x24
   1ff0c:	beq	1ff78 <g_strcmp0@plt+0xadac>
   1ff10:	ldr	r5, [r3]
   1ff14:	bl	14464 <g_io_error_quark@plt>
   1ff18:	cmp	r5, r0
   1ff1c:	beq	1ffd0 <g_strcmp0@plt+0xae04>
   1ff20:	ldr	r5, [r4, #56]	; 0x38
   1ff24:	ldr	r0, [r5]
   1ff28:	bl	14c2c <g_quark_to_string@plt>
   1ff2c:	ldr	r3, [r5, #4]
   1ff30:	ldr	ip, [pc, #272]	; 20048 <g_strcmp0@plt+0xae7c>
   1ff34:	str	r3, [sp, #12]
   1ff38:	ldr	r2, [pc, #268]	; 2004c <g_strcmp0@plt+0xae80>
   1ff3c:	ldr	r3, [pc, #268]	; 20050 <g_strcmp0@plt+0xae84>
   1ff40:	str	r0, [sp, #8]
   1ff44:	ldr	r0, [r5, #8]
   1ff48:	mov	r1, #8
   1ff4c:	str	r0, [sp, #4]
   1ff50:	str	ip, [sp]
   1ff54:	mov	r0, #0
   1ff58:	bl	14668 <g_log@plt>
   1ff5c:	mov	r0, r6
   1ff60:	bl	14dac <g_clear_error@plt>
   1ff64:	ldr	r0, [r4, #12]
   1ff68:	bl	14e90 <g_object_unref@plt>
   1ff6c:	mov	r0, #0
   1ff70:	add	sp, sp, #16
   1ff74:	pop	{r4, r5, r6, pc}
   1ff78:	str	r0, [r4, #32]
   1ff7c:	str	r0, [r4, #28]
   1ff80:	mov	r2, #0
   1ff84:	mov	r1, r4
   1ff88:	ldr	r0, [r4, #12]
   1ff8c:	bl	1468c <g_task_return_pointer@plt>
   1ff90:	ldr	r3, [r4]
   1ff94:	cmp	r3, #0
   1ff98:	beq	1ff64 <g_strcmp0@plt+0xad98>
   1ff9c:	ldr	r3, [r4, #20]
   1ffa0:	cmp	r3, #0
   1ffa4:	bne	1ff64 <g_strcmp0@plt+0xad98>
   1ffa8:	ldr	r0, [r4, #12]
   1ffac:	bl	14bf0 <g_task_get_context@plt>
   1ffb0:	mov	r1, #1
   1ffb4:	bl	14a7c <g_main_context_iteration@plt>
   1ffb8:	ldr	r3, [r4, #20]
   1ffbc:	cmp	r3, #0
   1ffc0:	beq	1ffa8 <g_strcmp0@plt+0xaddc>
   1ffc4:	ldr	r0, [r4, #12]
   1ffc8:	bl	14e90 <g_object_unref@plt>
   1ffcc:	b	1ff6c <g_strcmp0@plt+0xada0>
   1ffd0:	ldr	r2, [r4, #56]	; 0x38
   1ffd4:	mov	r5, #0
   1ffd8:	str	r2, [r4, #44]	; 0x2c
   1ffdc:	ldr	r3, [r2, #8]
   1ffe0:	mov	r0, r5
   1ffe4:	str	r5, [r4, #56]	; 0x38
   1ffe8:	strd	r2, [r4, #48]	; 0x30
   1ffec:	mov	r1, #16
   1fff0:	ldr	r2, [pc, #92]	; 20054 <g_strcmp0@plt+0xae88>
   1fff4:	bl	14668 <g_log@plt>
   1fff8:	ldr	r0, [r4, #44]	; 0x2c
   1fffc:	str	r5, [r4, #32]
   20000:	cmp	r0, r5
   20004:	beq	20010 <g_strcmp0@plt+0xae44>
   20008:	bl	1453c <g_error_free@plt>
   2000c:	str	r5, [r4, #44]	; 0x2c
   20010:	ldr	r5, [r4, #56]	; 0x38
   20014:	cmp	r5, #0
   20018:	beq	2003c <g_strcmp0@plt+0xae70>
   2001c:	ldr	r0, [r5]
   20020:	bl	14c2c <g_quark_to_string@plt>
   20024:	ldr	r3, [r5, #4]
   20028:	ldr	ip, [pc, #40]	; 20058 <g_strcmp0@plt+0xae8c>
   2002c:	str	r3, [sp, #12]
   20030:	ldr	r2, [pc, #36]	; 2005c <g_strcmp0@plt+0xae90>
   20034:	ldr	r3, [pc, #20]	; 20050 <g_strcmp0@plt+0xae84>
   20038:	b	1ff40 <g_strcmp0@plt+0xad74>
   2003c:	ldr	r0, [r4, #32]
   20040:	b	1ff7c <g_strcmp0@plt+0xadb0>
   20044:	ldrdeq	r0, [r2], -ip
   20048:			; <UNDEFINED> instruction: 0x000001b2
   2004c:	andeq	r4, r3, r4, ror r6
   20050:	strdeq	r6, [r3], -r8
   20054:	andeq	r6, r3, r8, lsr #4
   20058:	andeq	r0, r0, r6, asr #3
   2005c:	andeq	r4, r3, r4, lsr #13
   20060:	push	{r4, r5, r6, r7, r8, lr}
   20064:	mov	r5, r0
   20068:	mov	r0, #60	; 0x3c
   2006c:	mov	r6, r1
   20070:	mov	r7, r2
   20074:	bl	14a34 <g_slice_alloc0@plt>
   20078:	mov	r3, r7
   2007c:	ldr	r2, [pc, #80]	; 200d4 <g_strcmp0@plt+0xaf08>
   20080:	mov	r1, #0
   20084:	mov	r4, r0
   20088:	mov	r0, r5
   2008c:	str	r6, [r4, #16]
   20090:	bl	1504c <g_task_new@plt>
   20094:	cmp	r6, #0
   20098:	moveq	r3, #1
   2009c:	ldr	r2, [pc, #52]	; 200d8 <g_strcmp0@plt+0xaf0c>
   200a0:	mov	r1, r4
   200a4:	streq	r3, [r4, #20]
   200a8:	str	r0, [r4, #12]
   200ac:	bl	14c74 <g_task_set_task_data@plt>
   200b0:	cmp	r5, #0
   200b4:	beq	200c4 <g_strcmp0@plt+0xaef8>
   200b8:	mov	r0, r5
   200bc:	bl	14404 <g_object_ref@plt>
   200c0:	mov	r5, r0
   200c4:	mov	r0, r4
   200c8:	str	r5, [r4, #24]
   200cc:	pop	{r4, r5, r6, r7, r8, lr}
   200d0:	b	1fea0 <g_strcmp0@plt+0xacd4>
   200d4:	ldrdeq	pc, [r1], -r8
   200d8:	andeq	pc, r1, r8, lsr #1
   200dc:	mov	r3, #1
   200e0:	strd	r0, [r2, #4]
   200e4:	str	r3, [r2, #20]
   200e8:	mov	r0, r2
   200ec:	b	1fea0 <g_strcmp0@plt+0xacd4>
   200f0:	push	{r4, r5, r6, r7, r8, r9, lr}
   200f4:	mov	r6, r2
   200f8:	ldr	r5, [pc, #220]	; 201dc <g_strcmp0@plt+0xb010>
   200fc:	sub	sp, sp, #84	; 0x54
   20100:	mov	r3, #0
   20104:	ldr	ip, [r5]
   20108:	add	r2, sp, #8
   2010c:	str	ip, [sp, #76]	; 0x4c
   20110:	ldr	r7, [r6]
   20114:	str	r3, [sp, #8]
   20118:	bl	1fe68 <g_strcmp0@plt+0xac9c>
   2011c:	ldr	r4, [sp, #8]
   20120:	cmp	r4, #0
   20124:	beq	20160 <g_strcmp0@plt+0xaf94>
   20128:	mov	r0, r7
   2012c:	mov	r1, r4
   20130:	bl	14884 <g_dbus_method_invocation_return_gerror@plt>
   20134:	ldr	r0, [sp, #8]
   20138:	bl	1453c <g_error_free@plt>
   2013c:	mov	r1, r6
   20140:	mov	r0, #4
   20144:	bl	150ac <g_slice_free1@plt>
   20148:	ldr	r2, [sp, #76]	; 0x4c
   2014c:	ldr	r3, [r5]
   20150:	cmp	r2, r3
   20154:	bne	201d8 <g_strcmp0@plt+0xb00c>
   20158:	add	sp, sp, #84	; 0x54
   2015c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   20160:	mov	r9, r0
   20164:	mov	r0, r7
   20168:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   2016c:	bl	14704 <g_dbus_message_new_method_reply@plt>
   20170:	ldr	r1, [pc, #104]	; 201e0 <g_strcmp0@plt+0xb014>
   20174:	mov	r8, r0
   20178:	add	r0, sp, #12
   2017c:	bl	149e0 <g_variant_builder_init@plt>
   20180:	mov	r0, r9
   20184:	bl	1456c <g_variant_new_boolean@plt>
   20188:	mov	r1, r0
   2018c:	add	r0, sp, #12
   20190:	bl	145f0 <g_variant_builder_add_value@plt>
   20194:	add	r0, sp, #12
   20198:	bl	145a8 <g_variant_builder_end@plt>
   2019c:	mov	r1, r0
   201a0:	mov	r0, r8
   201a4:	bl	14848 <g_dbus_message_set_body@plt>
   201a8:	mov	r0, r7
   201ac:	bl	14c68 <g_dbus_method_invocation_get_connection@plt>
   201b0:	mov	r1, r8
   201b4:	mov	r3, r4
   201b8:	mov	r2, r4
   201bc:	str	r4, [sp]
   201c0:	bl	14adc <g_dbus_connection_send_message@plt>
   201c4:	mov	r0, r7
   201c8:	bl	14e90 <g_object_unref@plt>
   201cc:	mov	r0, r8
   201d0:	bl	14e90 <g_object_unref@plt>
   201d4:	b	2013c <g_strcmp0@plt+0xaf70>
   201d8:	bl	14b6c <__stack_chk_fail@plt>
   201dc:	andeq	fp, r4, r8, asr #19
   201e0:	andeq	r7, r3, r0, lsl sl
   201e4:	push	{r4, r5, r6, lr}
   201e8:	sub	sp, sp, #32
   201ec:	ldr	r5, [pc, #132]	; 20278 <g_strcmp0@plt+0xb0ac>
   201f0:	mov	r4, #0
   201f4:	ldr	r3, [r5]
   201f8:	str	r3, [sp, #28]
   201fc:	bl	151b4 <g_dbus_proxy_get_type@plt>
   20200:	mov	r6, r0
   20204:	ldr	r0, [pc, #112]	; 2027c <g_strcmp0@plt+0xb0b0>
   20208:	bl	14ae8 <g_intern_static_string@plt>
   2020c:	ldr	r2, [pc, #108]	; 20280 <g_strcmp0@plt+0xb0b4>
   20210:	mov	r3, #16
   20214:	str	r3, [sp]
   20218:	stmib	sp, {r2, r4}
   2021c:	ldr	r3, [pc, #96]	; 20284 <g_strcmp0@plt+0xb0b8>
   20220:	mov	r2, #204	; 0xcc
   20224:	mov	r1, r0
   20228:	mov	r0, r6
   2022c:	bl	14470 <g_type_register_static_simple@plt>
   20230:	ldr	r3, [pc, #80]	; 20288 <g_strcmp0@plt+0xb0bc>
   20234:	str	r4, [sp, #20]
   20238:	str	r3, [sp, #16]
   2023c:	str	r4, [sp, #24]
   20240:	mov	r6, r0
   20244:	bl	1f794 <g_strcmp0@plt+0xa5c8>
   20248:	add	r2, sp, #16
   2024c:	mov	r1, r0
   20250:	mov	r0, r6
   20254:	bl	14578 <g_type_add_interface_static@plt>
   20258:	ldr	r2, [sp, #28]
   2025c:	ldr	r3, [r5]
   20260:	cmp	r2, r3
   20264:	bne	20274 <g_strcmp0@plt+0xb0a8>
   20268:	mov	r0, r6
   2026c:	add	sp, sp, #32
   20270:	pop	{r4, r5, r6, pc}
   20274:	bl	14b6c <__stack_chk_fail@plt>
   20278:	andeq	fp, r4, r8, asr #19
   2027c:	andeq	r6, r3, r0, asr #4
   20280:	andeq	pc, r1, ip, lsl #14
   20284:	andeq	pc, r1, r4, lsr #12
   20288:	andeq	pc, r1, r0, lsl r0	; <UNPREDICTABLE>
   2028c:	push	{r4, lr}
   20290:	mcr	15, 0, r0, cr7, cr10, {5}
   20294:	ldr	r4, [pc, #60]	; 202d8 <g_strcmp0@plt+0xb10c>
   20298:	ldr	r3, [r4, #16]
   2029c:	mcr	15, 0, r0, cr7, cr10, {5}
   202a0:	cmp	r3, #0
   202a4:	beq	202b0 <g_strcmp0@plt+0xb0e4>
   202a8:	ldr	r0, [r4, #16]
   202ac:	pop	{r4, pc}
   202b0:	add	r0, r4, #16
   202b4:	bl	14a28 <g_once_init_enter@plt>
   202b8:	cmp	r0, #0
   202bc:	beq	202a8 <g_strcmp0@plt+0xb0dc>
   202c0:	bl	201e4 <g_strcmp0@plt+0xb018>
   202c4:	mov	r1, r0
   202c8:	add	r0, r4, #16
   202cc:	bl	14ed8 <g_once_init_leave@plt>
   202d0:	ldr	r0, [r4, #16]
   202d4:	pop	{r4, pc}
   202d8:	andeq	ip, r4, r8, ror #5
   202dc:	push	{r4, r5, r6, r7, r8, lr}
   202e0:	mov	r4, #0
   202e4:	ldr	r6, [pc, #452]	; 204b0 <g_strcmp0@plt+0xb2e4>
   202e8:	sub	sp, sp, #56	; 0x38
   202ec:	mov	r1, r4
   202f0:	ldr	r3, [r6]
   202f4:	str	r4, [sp, #48]	; 0x30
   202f8:	str	r3, [sp, #52]	; 0x34
   202fc:	bl	143d4 <g_object_new@plt>
   20300:	mov	r5, r0
   20304:	bl	2028c <g_strcmp0@plt+0xb0c0>
   20308:	mov	r7, r0
   2030c:	bl	1f794 <g_strcmp0@plt+0xa5c8>
   20310:	mov	r8, r0
   20314:	ldr	r0, [pc, #408]	; 204b4 <g_strcmp0@plt+0xb2e8>
   20318:	bl	14d64 <g_quark_from_static_string@plt>
   2031c:	mov	r1, r0
   20320:	mov	r0, r8
   20324:	bl	14b18 <g_type_get_qdata@plt>
   20328:	ldr	r3, [pc, #392]	; 204b8 <g_strcmp0@plt+0xb2ec>
   2032c:	ldr	ip, [pc, #392]	; 204bc <g_strcmp0@plt+0xb2f0>
   20330:	ldr	r1, [pc, #392]	; 204c0 <g_strcmp0@plt+0xb2f4>
   20334:	ldr	r2, [pc, #392]	; 204c4 <g_strcmp0@plt+0xb2f8>
   20338:	str	r3, [sp, #32]
   2033c:	ldr	r3, [pc, #388]	; 204c8 <g_strcmp0@plt+0xb2fc>
   20340:	str	ip, [sp, #36]	; 0x24
   20344:	str	r1, [sp, #28]
   20348:	ldr	ip, [pc, #380]	; 204cc <g_strcmp0@plt+0xb300>
   2034c:	ldr	r1, [pc, #380]	; 204d0 <g_strcmp0@plt+0xb304>
   20350:	str	r2, [sp, #24]
   20354:	ldr	r2, [pc, #376]	; 204d4 <g_strcmp0@plt+0xb308>
   20358:	str	r3, [sp, #12]
   2035c:	mov	r3, #1
   20360:	str	r1, [sp, #8]
   20364:	str	r2, [sp, #4]
   20368:	str	r3, [sp, #16]
   2036c:	str	r4, [sp, #44]	; 0x2c
   20370:	ldr	r3, [pc, #352]	; 204d8 <g_strcmp0@plt+0xb30c>
   20374:	str	r4, [sp]
   20378:	str	ip, [sp, #20]
   2037c:	mov	r1, r4
   20380:	add	r2, sp, #48	; 0x30
   20384:	str	r0, [sp, #40]	; 0x28
   20388:	mov	r0, r7
   2038c:	bl	14ad0 <g_initable_new@plt>
   20390:	ldr	r3, [sp, #48]	; 0x30
   20394:	cmp	r3, r4
   20398:	beq	203dc <g_strcmp0@plt+0xb210>
   2039c:	ldr	r7, [r3]
   203a0:	bl	14464 <g_io_error_quark@plt>
   203a4:	cmp	r7, r0
   203a8:	bne	20464 <g_strcmp0@plt+0xb298>
   203ac:	ldr	r7, [sp, #48]	; 0x30
   203b0:	mov	r0, r4
   203b4:	ldr	r2, [pc, #288]	; 204dc <g_strcmp0@plt+0xb310>
   203b8:	mov	r1, #32
   203bc:	str	r4, [sp, #48]	; 0x30
   203c0:	bl	14668 <g_log@plt>
   203c4:	cmp	r7, #0
   203c8:	beq	203d4 <g_strcmp0@plt+0xb208>
   203cc:	mov	r0, r7
   203d0:	bl	1453c <g_error_free@plt>
   203d4:	ldr	r4, [sp, #48]	; 0x30
   203d8:	b	203fc <g_strcmp0@plt+0xb230>
   203dc:	mov	r7, r0
   203e0:	ldr	r0, [r5, #16]
   203e4:	cmp	r0, #0
   203e8:	streq	r7, [r5, #16]
   203ec:	beq	20448 <g_strcmp0@plt+0xb27c>
   203f0:	bl	14e90 <g_object_unref@plt>
   203f4:	ldr	r4, [sp, #48]	; 0x30
   203f8:	str	r7, [r5, #16]
   203fc:	cmp	r4, #0
   20400:	beq	20448 <g_strcmp0@plt+0xb27c>
   20404:	ldr	r0, [r4]
   20408:	bl	14c2c <g_quark_to_string@plt>
   2040c:	ldr	r3, [r4, #4]
   20410:	ldr	ip, [pc, #200]	; 204e0 <g_strcmp0@plt+0xb314>
   20414:	str	r3, [sp, #12]
   20418:	mov	r5, #0
   2041c:	ldr	r3, [pc, #192]	; 204e4 <g_strcmp0@plt+0xb318>
   20420:	ldr	r2, [pc, #192]	; 204e8 <g_strcmp0@plt+0xb31c>
   20424:	mov	r1, #8
   20428:	str	r0, [sp, #8]
   2042c:	ldr	r0, [r4, #8]
   20430:	str	ip, [sp]
   20434:	str	r0, [sp, #4]
   20438:	mov	r0, r5
   2043c:	bl	14668 <g_log@plt>
   20440:	add	r0, sp, #48	; 0x30
   20444:	bl	14dac <g_clear_error@plt>
   20448:	ldr	r2, [sp, #52]	; 0x34
   2044c:	ldr	r3, [r6]
   20450:	mov	r0, r5
   20454:	cmp	r2, r3
   20458:	bne	204ac <g_strcmp0@plt+0xb2e0>
   2045c:	add	sp, sp, #56	; 0x38
   20460:	pop	{r4, r5, r6, r7, r8, pc}
   20464:	ldr	r7, [sp, #48]	; 0x30
   20468:	mov	r5, r4
   2046c:	ldr	r0, [r7]
   20470:	bl	14c2c <g_quark_to_string@plt>
   20474:	ldr	r3, [r7, #4]
   20478:	ldr	ip, [pc, #108]	; 204ec <g_strcmp0@plt+0xb320>
   2047c:	str	r3, [sp, #12]
   20480:	ldr	r2, [pc, #104]	; 204f0 <g_strcmp0@plt+0xb324>
   20484:	ldr	r3, [pc, #88]	; 204e4 <g_strcmp0@plt+0xb318>
   20488:	mov	r1, #8
   2048c:	str	r0, [sp, #8]
   20490:	ldr	lr, [r7, #8]
   20494:	mov	r0, r4
   20498:	stm	sp, {ip, lr}
   2049c:	bl	14668 <g_log@plt>
   204a0:	add	r0, sp, #48	; 0x30
   204a4:	bl	14dac <g_clear_error@plt>
   204a8:	b	20448 <g_strcmp0@plt+0xb27c>
   204ac:	bl	14b6c <__stack_chk_fail@plt>
   204b0:	andeq	fp, r4, r8, asr #19
   204b4:	andeq	r6, r3, r8, lsr #3
   204b8:	andeq	r6, r3, r0, lsl #2
   204bc:	andeq	r6, r3, r8, ror #4
   204c0:	andeq	r6, r3, ip, ror r2
   204c4:	muleq	r3, r0, r2
   204c8:	andeq	r6, r3, r4, asr #5
   204cc:			; <UNDEFINED> instruction: 0x000362b4
   204d0:	ldrdeq	r6, [r3], -r0
   204d4:	andeq	r6, r3, ip, ror #5
   204d8:	andeq	r6, r3, r0, ror #4
   204dc:	strdeq	r6, [r3], -r4
   204e0:	andeq	r0, r0, lr, lsr r1
   204e4:	strdeq	r6, [r3], -r8
   204e8:	andeq	r4, r3, r4, lsr #13
   204ec:	andeq	r0, r0, r9, lsr #2
   204f0:	andeq	r4, r3, r4, ror r6
   204f4:	push	{r4, lr}
   204f8:	bl	1f72c <g_strcmp0@plt+0xa560>
   204fc:	pop	{r4, lr}
   20500:	b	202dc <g_strcmp0@plt+0xb110>
   20504:	push	{r4, r5, r6, lr}
   20508:	sub	sp, sp, #24
   2050c:	ldr	r5, [pc, #276]	; 20628 <g_strcmp0@plt+0xb45c>
   20510:	mov	r3, #0
   20514:	mov	r6, r0
   20518:	ldr	r2, [r5]
   2051c:	str	r3, [sp, #16]
   20520:	str	r2, [sp, #20]
   20524:	bl	26dc8 <g_strcmp0@plt+0x11bfc>
   20528:	mov	r1, r6
   2052c:	add	r3, sp, #16
   20530:	ldr	r2, [pc, #244]	; 2062c <g_strcmp0@plt+0xb460>
   20534:	mov	r4, r0
   20538:	bl	22580 <g_strcmp0@plt+0xd3b4>
   2053c:	cmp	r4, #0
   20540:	beq	2054c <g_strcmp0@plt+0xb380>
   20544:	mov	r0, r4
   20548:	bl	14e90 <g_object_unref@plt>
   2054c:	ldr	r3, [sp, #16]
   20550:	cmp	r3, #0
   20554:	beq	205ac <g_strcmp0@plt+0xb3e0>
   20558:	ldr	r4, [r3]
   2055c:	bl	14464 <g_io_error_quark@plt>
   20560:	cmp	r4, r0
   20564:	beq	205c4 <g_strcmp0@plt+0xb3f8>
   20568:	ldr	r4, [sp, #16]
   2056c:	ldr	r0, [r4]
   20570:	bl	14c2c <g_quark_to_string@plt>
   20574:	ldr	r3, [r4, #4]
   20578:	ldr	ip, [pc, #176]	; 20630 <g_strcmp0@plt+0xb464>
   2057c:	str	r3, [sp, #12]
   20580:	ldr	r2, [pc, #172]	; 20634 <g_strcmp0@plt+0xb468>
   20584:	ldr	r3, [pc, #172]	; 20638 <g_strcmp0@plt+0xb46c>
   20588:	str	r0, [sp, #8]
   2058c:	ldr	r0, [r4, #8]
   20590:	mov	r1, #8
   20594:	str	r0, [sp, #4]
   20598:	str	ip, [sp]
   2059c:	mov	r0, #0
   205a0:	bl	14668 <g_log@plt>
   205a4:	add	r0, sp, #16
   205a8:	bl	14dac <g_clear_error@plt>
   205ac:	ldr	r2, [sp, #20]
   205b0:	ldr	r3, [r5]
   205b4:	cmp	r2, r3
   205b8:	bne	20624 <g_strcmp0@plt+0xb458>
   205bc:	add	sp, sp, #24
   205c0:	pop	{r4, r5, r6, pc}
   205c4:	ldr	r3, [pc, #112]	; 2063c <g_strcmp0@plt+0xb470>
   205c8:	ldr	r4, [sp, #16]
   205cc:	mov	ip, #0
   205d0:	ldr	r3, [r3]
   205d4:	mov	r2, #27
   205d8:	mov	r1, #1
   205dc:	ldr	r0, [pc, #92]	; 20640 <g_strcmp0@plt+0xb474>
   205e0:	str	ip, [sp, #16]
   205e4:	bl	14e24 <fwrite@plt>
   205e8:	cmp	r4, #0
   205ec:	beq	205f8 <g_strcmp0@plt+0xb42c>
   205f0:	mov	r0, r4
   205f4:	bl	1453c <g_error_free@plt>
   205f8:	ldr	r4, [sp, #16]
   205fc:	cmp	r4, #0
   20600:	beq	205ac <g_strcmp0@plt+0xb3e0>
   20604:	ldr	r0, [r4]
   20608:	bl	14c2c <g_quark_to_string@plt>
   2060c:	ldr	r3, [r4, #4]
   20610:	ldr	ip, [pc, #44]	; 20644 <g_strcmp0@plt+0xb478>
   20614:	str	r3, [sp, #12]
   20618:	ldr	r2, [pc, #40]	; 20648 <g_strcmp0@plt+0xb47c>
   2061c:	ldr	r3, [pc, #20]	; 20638 <g_strcmp0@plt+0xb46c>
   20620:	b	20588 <g_strcmp0@plt+0xb3bc>
   20624:	bl	14b6c <__stack_chk_fail@plt>
   20628:	andeq	fp, r4, r8, asr #19
   2062c:	andeq	r6, r3, r8, lsr #6
   20630:	andeq	r0, r0, r6, ror #8
   20634:	andeq	r4, r3, r4, ror r6
   20638:	strdeq	r6, [r3], -r8
   2063c:	andeq	ip, r4, r0, lsr #32
   20640:	andeq	r6, r3, r4, asr #6
   20644:	andeq	r0, r0, r8, ror r4
   20648:	andeq	r4, r3, r4, lsr #13
   2064c:	push	{r4, r5, r6, lr}
   20650:	sub	sp, sp, #24
   20654:	ldr	r5, [pc, #276]	; 20770 <g_strcmp0@plt+0xb5a4>
   20658:	mov	r3, #0
   2065c:	mov	r6, r0
   20660:	ldr	r2, [r5]
   20664:	str	r3, [sp, #16]
   20668:	str	r2, [sp, #20]
   2066c:	bl	22300 <g_strcmp0@plt+0xd134>
   20670:	mov	r1, r6
   20674:	add	r3, sp, #16
   20678:	ldr	r2, [pc, #244]	; 20774 <g_strcmp0@plt+0xb5a8>
   2067c:	mov	r4, r0
   20680:	bl	20a78 <g_strcmp0@plt+0xb8ac>
   20684:	cmp	r4, #0
   20688:	beq	20694 <g_strcmp0@plt+0xb4c8>
   2068c:	mov	r0, r4
   20690:	bl	14e90 <g_object_unref@plt>
   20694:	ldr	r3, [sp, #16]
   20698:	cmp	r3, #0
   2069c:	beq	206f4 <g_strcmp0@plt+0xb528>
   206a0:	ldr	r4, [r3]
   206a4:	bl	14464 <g_io_error_quark@plt>
   206a8:	cmp	r4, r0
   206ac:	beq	2070c <g_strcmp0@plt+0xb540>
   206b0:	ldr	r4, [sp, #16]
   206b4:	ldr	r0, [r4]
   206b8:	bl	14c2c <g_quark_to_string@plt>
   206bc:	ldr	r3, [r4, #4]
   206c0:	ldr	ip, [pc, #176]	; 20778 <g_strcmp0@plt+0xb5ac>
   206c4:	str	r3, [sp, #12]
   206c8:	ldr	r2, [pc, #172]	; 2077c <g_strcmp0@plt+0xb5b0>
   206cc:	ldr	r3, [pc, #172]	; 20780 <g_strcmp0@plt+0xb5b4>
   206d0:	str	r0, [sp, #8]
   206d4:	ldr	r0, [r4, #8]
   206d8:	mov	r1, #8
   206dc:	str	r0, [sp, #4]
   206e0:	str	ip, [sp]
   206e4:	mov	r0, #0
   206e8:	bl	14668 <g_log@plt>
   206ec:	add	r0, sp, #16
   206f0:	bl	14dac <g_clear_error@plt>
   206f4:	ldr	r2, [sp, #20]
   206f8:	ldr	r3, [r5]
   206fc:	cmp	r2, r3
   20700:	bne	2076c <g_strcmp0@plt+0xb5a0>
   20704:	add	sp, sp, #24
   20708:	pop	{r4, r5, r6, pc}
   2070c:	ldr	r3, [pc, #112]	; 20784 <g_strcmp0@plt+0xb5b8>
   20710:	ldr	r4, [sp, #16]
   20714:	mov	ip, #0
   20718:	ldr	r3, [r3]
   2071c:	mov	r2, #27
   20720:	mov	r1, #1
   20724:	ldr	r0, [pc, #92]	; 20788 <g_strcmp0@plt+0xb5bc>
   20728:	str	ip, [sp, #16]
   2072c:	bl	14e24 <fwrite@plt>
   20730:	cmp	r4, #0
   20734:	beq	20740 <g_strcmp0@plt+0xb574>
   20738:	mov	r0, r4
   2073c:	bl	1453c <g_error_free@plt>
   20740:	ldr	r4, [sp, #16]
   20744:	cmp	r4, #0
   20748:	beq	206f4 <g_strcmp0@plt+0xb528>
   2074c:	ldr	r0, [r4]
   20750:	bl	14c2c <g_quark_to_string@plt>
   20754:	ldr	r3, [r4, #4]
   20758:	ldr	ip, [pc, #44]	; 2078c <g_strcmp0@plt+0xb5c0>
   2075c:	str	r3, [sp, #12]
   20760:	ldr	r2, [pc, #40]	; 20790 <g_strcmp0@plt+0xb5c4>
   20764:	ldr	r3, [pc, #20]	; 20780 <g_strcmp0@plt+0xb5b4>
   20768:	b	206d0 <g_strcmp0@plt+0xb504>
   2076c:	bl	14b6c <__stack_chk_fail@plt>
   20770:	andeq	fp, r4, r8, asr #19
   20774:	andeq	r6, r3, r0, ror #6
   20778:	andeq	r0, r0, pc, lsl #9
   2077c:	andeq	r4, r3, r4, ror r6
   20780:	strdeq	r6, [r3], -r8
   20784:	andeq	ip, r4, r0, lsr #32
   20788:	andeq	r6, r3, r4, asr #6
   2078c:	andeq	r0, r0, r1, lsr #9
   20790:	andeq	r4, r3, r4, lsr #13
   20794:	ldr	r3, [pc, #36]	; 207c0 <g_strcmp0@plt+0xb5f4>
   20798:	push	{r4, lr}
   2079c:	mov	r4, r0
   207a0:	ldr	r3, [r3]
   207a4:	ldr	r0, [pc, #24]	; 207c4 <g_strcmp0@plt+0xb5f8>
   207a8:	add	r3, r4, r3
   207ac:	str	r3, [r4, #12]
   207b0:	bl	147e8 <g_strdup@plt>
   207b4:	ldr	r3, [r4, #12]
   207b8:	str	r0, [r3]
   207bc:	pop	{r4, pc}
   207c0:	strdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   207c4:	andeq	r6, r3, ip, asr #14
   207c8:	ldr	r3, [r0, #12]
   207cc:	push	{r4, lr}
   207d0:	mov	r4, r0
   207d4:	ldr	r0, [r3]
   207d8:	bl	14bd8 <g_free@plt>
   207dc:	ldr	r3, [pc, #28]	; 20800 <g_strcmp0@plt+0xb634>
   207e0:	ldr	r2, [r4, #12]
   207e4:	mov	r1, #0
   207e8:	ldr	r3, [r3, #4]
   207ec:	mov	r0, r4
   207f0:	str	r1, [r2]
   207f4:	ldr	r3, [r3, #24]
   207f8:	pop	{r4, lr}
   207fc:	bx	r3
   20800:	strdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   20804:	push	{r4, r5, r6, lr}
   20808:	mov	r4, r0
   2080c:	mov	r5, #0
   20810:	ldr	r0, [r0, #28]
   20814:	bl	14bd8 <g_free@plt>
   20818:	ldr	r0, [r4, #32]
   2081c:	str	r5, [r4, #28]
   20820:	bl	14bd8 <g_free@plt>
   20824:	ldr	r0, [r4, #24]
   20828:	str	r5, [r4, #32]
   2082c:	cmp	r0, r5
   20830:	beq	2083c <g_strcmp0@plt+0xb670>
   20834:	bl	14e90 <g_object_unref@plt>
   20838:	str	r5, [r4, #24]
   2083c:	mov	r1, r4
   20840:	mov	r0, #40	; 0x28
   20844:	pop	{r4, r5, r6, lr}
   20848:	b	150ac <g_slice_free1@plt>
   2084c:	push	{r4, lr}
   20850:	mov	r4, r0
   20854:	ldr	r0, [r0, #24]
   20858:	cmp	r0, #0
   2085c:	beq	2086c <g_strcmp0@plt+0xb6a0>
   20860:	bl	14e90 <g_object_unref@plt>
   20864:	mov	r3, #0
   20868:	str	r3, [r4, #24]
   2086c:	mov	r1, r4
   20870:	mov	r0, #32
   20874:	pop	{r4, lr}
   20878:	b	150ac <g_slice_free1@plt>
   2087c:	push	{r4, r5, r6, lr}
   20880:	mov	r4, r0
   20884:	mov	r5, #0
   20888:	ldr	r0, [r0, #28]
   2088c:	bl	14bd8 <g_free@plt>
   20890:	ldr	r0, [r4, #36]	; 0x24
   20894:	str	r5, [r4, #28]
   20898:	bl	14bd8 <g_free@plt>
   2089c:	ldr	r0, [r4, #24]
   208a0:	str	r5, [r4, #36]	; 0x24
   208a4:	cmp	r0, r5
   208a8:	beq	208b4 <g_strcmp0@plt+0xb6e8>
   208ac:	bl	14e90 <g_object_unref@plt>
   208b0:	str	r5, [r4, #24]
   208b4:	mov	r1, r4
   208b8:	mov	r0, #68	; 0x44
   208bc:	pop	{r4, r5, r6, lr}
   208c0:	b	150ac <g_slice_free1@plt>
   208c4:	push	{r4, lr}
   208c8:	mov	r4, r0
   208cc:	ldr	r0, [r0, #24]
   208d0:	cmp	r0, #0
   208d4:	beq	208e4 <g_strcmp0@plt+0xb718>
   208d8:	bl	14e90 <g_object_unref@plt>
   208dc:	mov	r3, #0
   208e0:	str	r3, [r4, #24]
   208e4:	mov	r1, r4
   208e8:	mov	r0, #40	; 0x28
   208ec:	pop	{r4, lr}
   208f0:	b	150ac <g_slice_free1@plt>
   208f4:	push	{r4, lr}
   208f8:	mov	r4, r0
   208fc:	ldr	r0, [r0, #24]
   20900:	cmp	r0, #0
   20904:	beq	20914 <g_strcmp0@plt+0xb748>
   20908:	bl	14e90 <g_object_unref@plt>
   2090c:	mov	r3, #0
   20910:	str	r3, [r4, #24]
   20914:	mov	r1, r4
   20918:	mov	r0, #40	; 0x28
   2091c:	pop	{r4, lr}
   20920:	b	150ac <g_slice_free1@plt>
   20924:	push	{r4, r5, r6, r7, r8, lr}
   20928:	mov	r6, r0
   2092c:	mov	r0, r1
   20930:	mov	r5, r1
   20934:	mov	r7, r2
   20938:	bl	14cc8 <g_task_get_task_data@plt>
   2093c:	ldr	r3, [r0, #16]
   20940:	mov	r4, r0
   20944:	cmp	r3, #0
   20948:	beq	2095c <g_strcmp0@plt+0xb790>
   2094c:	mov	r2, r7
   20950:	mov	r1, r5
   20954:	mov	r0, r6
   20958:	blx	r3
   2095c:	mov	r3, #1
   20960:	str	r3, [r4, #20]
   20964:	pop	{r4, r5, r6, r7, r8, pc}
   20968:	push	{r4, r5, r6, r7, r8, lr}
   2096c:	mov	r6, r0
   20970:	mov	r0, r1
   20974:	mov	r5, r1
   20978:	mov	r7, r2
   2097c:	bl	14cc8 <g_task_get_task_data@plt>
   20980:	ldr	r3, [r0, #16]
   20984:	mov	r4, r0
   20988:	cmp	r3, #0
   2098c:	beq	209a0 <g_strcmp0@plt+0xb7d4>
   20990:	mov	r2, r7
   20994:	mov	r1, r5
   20998:	mov	r0, r6
   2099c:	blx	r3
   209a0:	mov	r3, #1
   209a4:	str	r3, [r4, #20]
   209a8:	pop	{r4, r5, r6, r7, r8, pc}
   209ac:	push	{r4, r5, r6, r7, r8, lr}
   209b0:	mov	r6, r0
   209b4:	mov	r0, r1
   209b8:	mov	r5, r1
   209bc:	mov	r7, r2
   209c0:	bl	14cc8 <g_task_get_task_data@plt>
   209c4:	ldr	r3, [r0, #16]
   209c8:	mov	r4, r0
   209cc:	cmp	r3, #0
   209d0:	beq	209e4 <g_strcmp0@plt+0xb818>
   209d4:	mov	r2, r7
   209d8:	mov	r1, r5
   209dc:	mov	r0, r6
   209e0:	blx	r3
   209e4:	mov	r3, #1
   209e8:	str	r3, [r4, #20]
   209ec:	pop	{r4, r5, r6, r7, r8, pc}
   209f0:	push	{r4, r5, r6, r7, r8, lr}
   209f4:	mov	r6, r0
   209f8:	mov	r0, r1
   209fc:	mov	r5, r1
   20a00:	mov	r7, r2
   20a04:	bl	14cc8 <g_task_get_task_data@plt>
   20a08:	ldr	r3, [r0, #16]
   20a0c:	mov	r4, r0
   20a10:	cmp	r3, #0
   20a14:	beq	20a28 <g_strcmp0@plt+0xb85c>
   20a18:	mov	r2, r7
   20a1c:	mov	r1, r5
   20a20:	mov	r0, r6
   20a24:	blx	r3
   20a28:	mov	r3, #1
   20a2c:	str	r3, [r4, #20]
   20a30:	pop	{r4, r5, r6, r7, r8, pc}
   20a34:	push	{r4, r5, r6, r7, r8, lr}
   20a38:	mov	r6, r0
   20a3c:	mov	r0, r1
   20a40:	mov	r5, r1
   20a44:	mov	r7, r2
   20a48:	bl	14cc8 <g_task_get_task_data@plt>
   20a4c:	ldr	r3, [r0, #16]
   20a50:	mov	r4, r0
   20a54:	cmp	r3, #0
   20a58:	beq	20a6c <g_strcmp0@plt+0xb8a0>
   20a5c:	mov	r2, r7
   20a60:	mov	r1, r5
   20a64:	mov	r0, r6
   20a68:	blx	r3
   20a6c:	mov	r3, #1
   20a70:	str	r3, [r4, #20]
   20a74:	pop	{r4, r5, r6, r7, r8, pc}
   20a78:	push	{r4, r5, r6, r7, r8, lr}
   20a7c:	mov	r6, r0
   20a80:	sub	sp, sp, #16
   20a84:	mov	r0, #12
   20a88:	mov	r7, r2
   20a8c:	mov	r5, r1
   20a90:	mov	r8, r3
   20a94:	bl	148c0 <g_malloc@plt>
   20a98:	mov	r4, r0
   20a9c:	mov	r0, r6
   20aa0:	bl	14404 <g_object_ref@plt>
   20aa4:	str	r0, [r4]
   20aa8:	mov	r0, r5
   20aac:	bl	14404 <g_object_ref@plt>
   20ab0:	str	r0, [r4, #4]
   20ab4:	mov	r0, r7
   20ab8:	bl	147e8 <g_strdup@plt>
   20abc:	ldr	r2, [pc, #224]	; 20ba4 <g_strcmp0@plt+0xb9d8>
   20ac0:	ldr	r3, [pc, #224]	; 20ba8 <g_strcmp0@plt+0xb9dc>
   20ac4:	mov	r1, r7
   20ac8:	str	r2, [sp, #4]
   20acc:	str	r8, [sp, #8]
   20ad0:	str	r4, [sp]
   20ad4:	add	r2, r3, #44	; 0x2c
   20ad8:	str	r0, [r4, #8]
   20adc:	mov	r0, r5
   20ae0:	bl	143ec <g_dbus_connection_register_object@plt>
   20ae4:	subs	r7, r0, #0
   20ae8:	beq	20b98 <g_strcmp0@plt+0xb9cc>
   20aec:	mov	r5, #0
   20af0:	mov	r3, r4
   20af4:	ldr	r2, [pc, #176]	; 20bac <g_strcmp0@plt+0xb9e0>
   20af8:	ldr	r1, [pc, #176]	; 20bb0 <g_strcmp0@plt+0xb9e4>
   20afc:	str	r5, [sp, #4]
   20b00:	str	r5, [sp]
   20b04:	mov	r0, r6
   20b08:	bl	14a1c <g_signal_connect_data@plt>
   20b0c:	mov	r3, r4
   20b10:	ldr	r2, [pc, #156]	; 20bb4 <g_strcmp0@plt+0xb9e8>
   20b14:	ldr	r1, [pc, #156]	; 20bb8 <g_strcmp0@plt+0xb9ec>
   20b18:	str	r5, [sp, #4]
   20b1c:	str	r5, [sp]
   20b20:	mov	r0, r6
   20b24:	bl	14a1c <g_signal_connect_data@plt>
   20b28:	mov	r3, r4
   20b2c:	ldr	r2, [pc, #136]	; 20bbc <g_strcmp0@plt+0xb9f0>
   20b30:	ldr	r1, [pc, #136]	; 20bc0 <g_strcmp0@plt+0xb9f4>
   20b34:	str	r5, [sp, #4]
   20b38:	str	r5, [sp]
   20b3c:	mov	r0, r6
   20b40:	bl	14a1c <g_signal_connect_data@plt>
   20b44:	mov	r3, r4
   20b48:	ldr	r2, [pc, #116]	; 20bc4 <g_strcmp0@plt+0xb9f8>
   20b4c:	ldr	r1, [pc, #116]	; 20bc8 <g_strcmp0@plt+0xb9fc>
   20b50:	str	r5, [sp, #4]
   20b54:	str	r5, [sp]
   20b58:	mov	r0, r6
   20b5c:	bl	14a1c <g_signal_connect_data@plt>
   20b60:	mov	r3, r4
   20b64:	ldr	r2, [pc, #96]	; 20bcc <g_strcmp0@plt+0xba00>
   20b68:	ldr	r1, [pc, #96]	; 20bd0 <g_strcmp0@plt+0xba04>
   20b6c:	str	r5, [sp, #4]
   20b70:	str	r5, [sp]
   20b74:	mov	r0, r6
   20b78:	bl	14a1c <g_signal_connect_data@plt>
   20b7c:	str	r5, [sp, #4]
   20b80:	str	r5, [sp]
   20b84:	mov	r3, r4
   20b88:	mov	r0, r6
   20b8c:	ldr	r2, [pc, #64]	; 20bd4 <g_strcmp0@plt+0xba08>
   20b90:	ldr	r1, [pc, #64]	; 20bd8 <g_strcmp0@plt+0xba0c>
   20b94:	bl	14a1c <g_signal_connect_data@plt>
   20b98:	mov	r0, r7
   20b9c:	add	sp, sp, #16
   20ba0:	pop	{r4, r5, r6, r7, r8, pc}
   20ba4:	andeq	r0, r2, ip, lsr #30
   20ba8:	andeq	r6, r3, r8, lsl #7
   20bac:	muleq	r2, r8, lr
   20bb0:	andeq	r6, r3, r8, ror r7
   20bb4:	andeq	r0, r2, r4, lsl #28
   20bb8:	andeq	r6, r3, r8, lsl #15
   20bbc:	andeq	r0, r2, r0, ror sp
   20bc0:	muleq	r3, r8, r7
   20bc4:	ldrdeq	r0, [r2], -ip
   20bc8:	andeq	r6, r3, r8, lsr #15
   20bcc:	andeq	r0, r2, ip, asr ip
   20bd0:			; <UNDEFINED> instruction: 0x000367bc
   20bd4:	ldrdeq	r0, [r2], -ip
   20bd8:	andeq	r6, r3, ip, asr #15
   20bdc:	push	{r4, r5, r6, lr}
   20be0:	mov	r3, r1
   20be4:	ldr	r4, [pc, #96]	; 20c4c <g_strcmp0@plt+0xba80>
   20be8:	sub	sp, sp, #88	; 0x58
   20bec:	ldr	r1, [pc, #92]	; 20c50 <g_strcmp0@plt+0xba84>
   20bf0:	ldr	r2, [r4]
   20bf4:	add	r0, sp, #20
   20bf8:	ldmib	r3, {r5, r6}
   20bfc:	str	r2, [sp, #84]	; 0x54
   20c00:	bl	149e0 <g_variant_builder_init@plt>
   20c04:	add	r0, sp, #20
   20c08:	bl	145a8 <g_variant_builder_end@plt>
   20c0c:	ldr	r3, [pc, #64]	; 20c54 <g_strcmp0@plt+0xba88>
   20c10:	mov	r1, #0
   20c14:	mov	r2, r6
   20c18:	str	r3, [sp]
   20c1c:	str	r1, [sp, #8]
   20c20:	ldr	r3, [pc, #48]	; 20c58 <g_strcmp0@plt+0xba8c>
   20c24:	str	r0, [sp, #4]
   20c28:	mov	r0, r5
   20c2c:	bl	14b54 <g_dbus_connection_emit_signal@plt>
   20c30:	ldr	r2, [sp, #84]	; 0x54
   20c34:	ldr	r3, [r4]
   20c38:	cmp	r2, r3
   20c3c:	bne	20c48 <g_strcmp0@plt+0xba7c>
   20c40:	add	sp, sp, #88	; 0x58
   20c44:	pop	{r4, r5, r6, pc}
   20c48:	bl	14b6c <__stack_chk_fail@plt>
   20c4c:	andeq	fp, r4, r8, asr #19
   20c50:	andeq	r7, r3, r0, lsl sl
   20c54:	ldrdeq	r6, [r3], -ip
   20c58:	andeq	r4, r3, r4, lsr #19
   20c5c:	push	{r4, r5, r6, lr}
   20c60:	mov	r3, r1
   20c64:	ldr	r4, [pc, #96]	; 20ccc <g_strcmp0@plt+0xbb00>
   20c68:	sub	sp, sp, #88	; 0x58
   20c6c:	ldr	r1, [pc, #92]	; 20cd0 <g_strcmp0@plt+0xbb04>
   20c70:	ldr	r2, [r4]
   20c74:	add	r0, sp, #20
   20c78:	ldmib	r3, {r5, r6}
   20c7c:	str	r2, [sp, #84]	; 0x54
   20c80:	bl	149e0 <g_variant_builder_init@plt>
   20c84:	add	r0, sp, #20
   20c88:	bl	145a8 <g_variant_builder_end@plt>
   20c8c:	ldr	r3, [pc, #64]	; 20cd4 <g_strcmp0@plt+0xbb08>
   20c90:	mov	r1, #0
   20c94:	mov	r2, r6
   20c98:	str	r3, [sp]
   20c9c:	str	r1, [sp, #8]
   20ca0:	ldr	r3, [pc, #48]	; 20cd8 <g_strcmp0@plt+0xbb0c>
   20ca4:	str	r0, [sp, #4]
   20ca8:	mov	r0, r5
   20cac:	bl	14b54 <g_dbus_connection_emit_signal@plt>
   20cb0:	ldr	r2, [sp, #84]	; 0x54
   20cb4:	ldr	r3, [r4]
   20cb8:	cmp	r2, r3
   20cbc:	bne	20cc8 <g_strcmp0@plt+0xbafc>
   20cc0:	add	sp, sp, #88	; 0x58
   20cc4:	pop	{r4, r5, r6, pc}
   20cc8:	bl	14b6c <__stack_chk_fail@plt>
   20ccc:	andeq	fp, r4, r8, asr #19
   20cd0:	andeq	r7, r3, r0, lsl sl
   20cd4:	andeq	r6, r3, r8, ror #15
   20cd8:	andeq	r4, r3, r4, lsr #19
   20cdc:	push	{r4, r5, r6, r7, lr}
   20ce0:	sub	sp, sp, #92	; 0x5c
   20ce4:	ldr	r4, [pc, #116]	; 20d60 <g_strcmp0@plt+0xbb94>
   20ce8:	mov	r7, r1
   20cec:	add	r0, sp, #20
   20cf0:	ldr	r3, [r4]
   20cf4:	ldr	r1, [pc, #104]	; 20d64 <g_strcmp0@plt+0xbb98>
   20cf8:	ldmib	r2, {r5, r6}
   20cfc:	str	r3, [sp, #84]	; 0x54
   20d00:	bl	149e0 <g_variant_builder_init@plt>
   20d04:	mov	r0, r7
   20d08:	bl	145b4 <g_variant_new_string@plt>
   20d0c:	mov	r1, r0
   20d10:	add	r0, sp, #20
   20d14:	bl	145f0 <g_variant_builder_add_value@plt>
   20d18:	add	r0, sp, #20
   20d1c:	bl	145a8 <g_variant_builder_end@plt>
   20d20:	ldr	r3, [pc, #64]	; 20d68 <g_strcmp0@plt+0xbb9c>
   20d24:	mov	r1, #0
   20d28:	mov	r2, r6
   20d2c:	str	r3, [sp]
   20d30:	str	r1, [sp, #8]
   20d34:	ldr	r3, [pc, #48]	; 20d6c <g_strcmp0@plt+0xbba0>
   20d38:	str	r0, [sp, #4]
   20d3c:	mov	r0, r5
   20d40:	bl	14b54 <g_dbus_connection_emit_signal@plt>
   20d44:	ldr	r2, [sp, #84]	; 0x54
   20d48:	ldr	r3, [r4]
   20d4c:	cmp	r2, r3
   20d50:	bne	20d5c <g_strcmp0@plt+0xbb90>
   20d54:	add	sp, sp, #92	; 0x5c
   20d58:	pop	{r4, r5, r6, r7, pc}
   20d5c:	bl	14b6c <__stack_chk_fail@plt>
   20d60:	andeq	fp, r4, r8, asr #19
   20d64:	andeq	r7, r3, r0, lsl sl
   20d68:	strdeq	r6, [r3], -r8
   20d6c:	andeq	r4, r3, r4, lsr #19
   20d70:	push	{r4, r5, r6, r7, lr}
   20d74:	sub	sp, sp, #92	; 0x5c
   20d78:	ldr	r4, [pc, #116]	; 20df4 <g_strcmp0@plt+0xbc28>
   20d7c:	mov	r7, r1
   20d80:	add	r0, sp, #20
   20d84:	ldr	r3, [r4]
   20d88:	ldr	r1, [pc, #104]	; 20df8 <g_strcmp0@plt+0xbc2c>
   20d8c:	ldmib	r2, {r5, r6}
   20d90:	str	r3, [sp, #84]	; 0x54
   20d94:	bl	149e0 <g_variant_builder_init@plt>
   20d98:	mov	r0, r7
   20d9c:	bl	145b4 <g_variant_new_string@plt>
   20da0:	mov	r1, r0
   20da4:	add	r0, sp, #20
   20da8:	bl	145f0 <g_variant_builder_add_value@plt>
   20dac:	add	r0, sp, #20
   20db0:	bl	145a8 <g_variant_builder_end@plt>
   20db4:	ldr	r3, [pc, #64]	; 20dfc <g_strcmp0@plt+0xbc30>
   20db8:	mov	r1, #0
   20dbc:	mov	r2, r6
   20dc0:	str	r3, [sp]
   20dc4:	str	r1, [sp, #8]
   20dc8:	ldr	r3, [pc, #48]	; 20e00 <g_strcmp0@plt+0xbc34>
   20dcc:	str	r0, [sp, #4]
   20dd0:	mov	r0, r5
   20dd4:	bl	14b54 <g_dbus_connection_emit_signal@plt>
   20dd8:	ldr	r2, [sp, #84]	; 0x54
   20ddc:	ldr	r3, [r4]
   20de0:	cmp	r2, r3
   20de4:	bne	20df0 <g_strcmp0@plt+0xbc24>
   20de8:	add	sp, sp, #92	; 0x5c
   20dec:	pop	{r4, r5, r6, r7, pc}
   20df0:	bl	14b6c <__stack_chk_fail@plt>
   20df4:	andeq	fp, r4, r8, asr #19
   20df8:	andeq	r7, r3, r0, lsl sl
   20dfc:	andeq	r6, r3, ip, lsl #16
   20e00:	andeq	r4, r3, r4, lsr #19
   20e04:	push	{r4, r5, r6, r7, lr}
   20e08:	sub	sp, sp, #92	; 0x5c
   20e0c:	ldr	r4, [pc, #116]	; 20e88 <g_strcmp0@plt+0xbcbc>
   20e10:	mov	r7, r1
   20e14:	add	r0, sp, #20
   20e18:	ldr	r3, [r4]
   20e1c:	ldr	r1, [pc, #104]	; 20e8c <g_strcmp0@plt+0xbcc0>
   20e20:	ldmib	r2, {r5, r6}
   20e24:	str	r3, [sp, #84]	; 0x54
   20e28:	bl	149e0 <g_variant_builder_init@plt>
   20e2c:	mov	r0, r7
   20e30:	bl	145b4 <g_variant_new_string@plt>
   20e34:	mov	r1, r0
   20e38:	add	r0, sp, #20
   20e3c:	bl	145f0 <g_variant_builder_add_value@plt>
   20e40:	add	r0, sp, #20
   20e44:	bl	145a8 <g_variant_builder_end@plt>
   20e48:	ldr	r3, [pc, #64]	; 20e90 <g_strcmp0@plt+0xbcc4>
   20e4c:	mov	r1, #0
   20e50:	mov	r2, r6
   20e54:	str	r3, [sp]
   20e58:	str	r1, [sp, #8]
   20e5c:	ldr	r3, [pc, #48]	; 20e94 <g_strcmp0@plt+0xbcc8>
   20e60:	str	r0, [sp, #4]
   20e64:	mov	r0, r5
   20e68:	bl	14b54 <g_dbus_connection_emit_signal@plt>
   20e6c:	ldr	r2, [sp, #84]	; 0x54
   20e70:	ldr	r3, [r4]
   20e74:	cmp	r2, r3
   20e78:	bne	20e84 <g_strcmp0@plt+0xbcb8>
   20e7c:	add	sp, sp, #92	; 0x5c
   20e80:	pop	{r4, r5, r6, r7, pc}
   20e84:	bl	14b6c <__stack_chk_fail@plt>
   20e88:	andeq	fp, r4, r8, asr #19
   20e8c:	andeq	r7, r3, r0, lsl sl
   20e90:	andeq	r6, r3, ip, lsl r8
   20e94:	andeq	r4, r3, r4, lsr #19
   20e98:	push	{r4, r5, r6, r7, lr}
   20e9c:	sub	sp, sp, #92	; 0x5c
   20ea0:	ldr	r4, [pc, #116]	; 20f1c <g_strcmp0@plt+0xbd50>
   20ea4:	mov	r7, r1
   20ea8:	add	r0, sp, #20
   20eac:	ldr	r3, [r4]
   20eb0:	ldr	r1, [pc, #104]	; 20f20 <g_strcmp0@plt+0xbd54>
   20eb4:	ldmib	r2, {r5, r6}
   20eb8:	str	r3, [sp, #84]	; 0x54
   20ebc:	bl	149e0 <g_variant_builder_init@plt>
   20ec0:	mov	r0, r7
   20ec4:	bl	145b4 <g_variant_new_string@plt>
   20ec8:	mov	r1, r0
   20ecc:	add	r0, sp, #20
   20ed0:	bl	145f0 <g_variant_builder_add_value@plt>
   20ed4:	add	r0, sp, #20
   20ed8:	bl	145a8 <g_variant_builder_end@plt>
   20edc:	ldr	r3, [pc, #64]	; 20f24 <g_strcmp0@plt+0xbd58>
   20ee0:	mov	r1, #0
   20ee4:	mov	r2, r6
   20ee8:	str	r3, [sp]
   20eec:	str	r1, [sp, #8]
   20ef0:	ldr	r3, [pc, #48]	; 20f28 <g_strcmp0@plt+0xbd5c>
   20ef4:	str	r0, [sp, #4]
   20ef8:	mov	r0, r5
   20efc:	bl	14b54 <g_dbus_connection_emit_signal@plt>
   20f00:	ldr	r2, [sp, #84]	; 0x54
   20f04:	ldr	r3, [r4]
   20f08:	cmp	r2, r3
   20f0c:	bne	20f18 <g_strcmp0@plt+0xbd4c>
   20f10:	add	sp, sp, #92	; 0x5c
   20f14:	pop	{r4, r5, r6, r7, pc}
   20f18:	bl	14b6c <__stack_chk_fail@plt>
   20f1c:	andeq	fp, r4, r8, asr #19
   20f20:	andeq	r7, r3, r0, lsl sl
   20f24:	andeq	r6, r3, ip, lsr #16
   20f28:	andeq	r4, r3, r4, lsr #19
   20f2c:	push	{r4, r5, lr}
   20f30:	sub	sp, sp, #20
   20f34:	ldr	r3, [pc, #256]	; 2103c <g_strcmp0@plt+0xbe70>
   20f38:	mov	r4, #0
   20f3c:	mov	r5, r0
   20f40:	str	r0, [sp, #8]
   20f44:	mov	r2, r4
   20f48:	ldr	r0, [r0]
   20f4c:	mov	r1, #24
   20f50:	str	r3, [sp, #4]
   20f54:	str	r4, [sp]
   20f58:	mov	r3, r4
   20f5c:	bl	147ac <g_signal_handlers_disconnect_matched@plt>
   20f60:	ldr	r1, [pc, #216]	; 21040 <g_strcmp0@plt+0xbe74>
   20f64:	str	r5, [sp, #8]
   20f68:	str	r4, [sp]
   20f6c:	mov	r3, r4
   20f70:	mov	r2, r4
   20f74:	ldr	r0, [r5]
   20f78:	str	r1, [sp, #4]
   20f7c:	mov	r1, #24
   20f80:	bl	147ac <g_signal_handlers_disconnect_matched@plt>
   20f84:	ldr	r1, [pc, #184]	; 21044 <g_strcmp0@plt+0xbe78>
   20f88:	str	r5, [sp, #8]
   20f8c:	str	r4, [sp]
   20f90:	mov	r3, r4
   20f94:	mov	r2, r4
   20f98:	ldr	r0, [r5]
   20f9c:	str	r1, [sp, #4]
   20fa0:	mov	r1, #24
   20fa4:	bl	147ac <g_signal_handlers_disconnect_matched@plt>
   20fa8:	ldr	r1, [pc, #152]	; 21048 <g_strcmp0@plt+0xbe7c>
   20fac:	str	r5, [sp, #8]
   20fb0:	str	r4, [sp]
   20fb4:	mov	r3, r4
   20fb8:	mov	r2, r4
   20fbc:	ldr	r0, [r5]
   20fc0:	str	r1, [sp, #4]
   20fc4:	mov	r1, #24
   20fc8:	bl	147ac <g_signal_handlers_disconnect_matched@plt>
   20fcc:	ldr	r1, [pc, #120]	; 2104c <g_strcmp0@plt+0xbe80>
   20fd0:	str	r5, [sp, #8]
   20fd4:	str	r4, [sp]
   20fd8:	mov	r3, r4
   20fdc:	mov	r2, r4
   20fe0:	ldr	r0, [r5]
   20fe4:	str	r1, [sp, #4]
   20fe8:	mov	r1, #24
   20fec:	bl	147ac <g_signal_handlers_disconnect_matched@plt>
   20ff0:	ldr	r1, [pc, #88]	; 21050 <g_strcmp0@plt+0xbe84>
   20ff4:	mov	r3, r4
   20ff8:	mov	r2, r4
   20ffc:	str	r5, [sp, #8]
   21000:	str	r4, [sp]
   21004:	ldr	r0, [r5]
   21008:	str	r1, [sp, #4]
   2100c:	mov	r1, #24
   21010:	bl	147ac <g_signal_handlers_disconnect_matched@plt>
   21014:	ldr	r0, [r5]
   21018:	bl	14e90 <g_object_unref@plt>
   2101c:	ldr	r0, [r5, #4]
   21020:	bl	14e90 <g_object_unref@plt>
   21024:	ldr	r0, [r5, #8]
   21028:	bl	14bd8 <g_free@plt>
   2102c:	mov	r0, r5
   21030:	add	sp, sp, #20
   21034:	pop	{r4, r5, lr}
   21038:	b	14bd8 <g_free@plt>
   2103c:	muleq	r2, r8, lr
   21040:	andeq	r0, r2, r4, lsl #28
   21044:	andeq	r0, r2, r0, ror sp
   21048:	ldrdeq	r0, [r2], -ip
   2104c:	andeq	r0, r2, ip, asr ip
   21050:	ldrdeq	r0, [r2], -ip
   21054:	push	{r4, lr}
   21058:	ldr	r1, [pc, #88]	; 210b8 <g_strcmp0@plt+0xbeec>
   2105c:	ldr	r0, [sp, #8]
   21060:	bl	14fd4 <strcmp@plt>
   21064:	cmp	r0, #0
   21068:	beq	21074 <g_strcmp0@plt+0xbea8>
   2106c:	mov	r0, #0
   21070:	pop	{r4, pc}
   21074:	ldr	r3, [sp, #20]
   21078:	ldr	r0, [sp, #12]
   2107c:	ldr	r4, [r3]
   21080:	bl	14944 <g_variant_get_int32@plt>
   21084:	ldr	r3, [r4, #12]
   21088:	ldr	r2, [r3, #4]
   2108c:	cmp	r0, r2
   21090:	bne	2109c <g_strcmp0@plt+0xbed0>
   21094:	mov	r0, #1
   21098:	pop	{r4, pc}
   2109c:	ldr	r2, [pc, #24]	; 210bc <g_strcmp0@plt+0xbef0>
   210a0:	str	r0, [r3, #4]
   210a4:	mov	r0, r4
   210a8:	ldr	r1, [r2, #12]
   210ac:	bl	14b78 <g_object_notify_by_pspec@plt>
   210b0:	mov	r0, #1
   210b4:	pop	{r4, pc}
   210b8:	andeq	r6, r3, r8, lsr r8
   210bc:	strdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   210c0:	push	{r4, lr}
   210c4:	ldr	r1, [pc, #44]	; 210f8 <g_strcmp0@plt+0xbf2c>
   210c8:	ldr	r0, [sp, #8]
   210cc:	bl	14fd4 <strcmp@plt>
   210d0:	ldr	r3, [sp, #16]
   210d4:	cmp	r0, #0
   210d8:	beq	210e4 <g_strcmp0@plt+0xbf18>
   210dc:	mov	r0, #0
   210e0:	pop	{r4, pc}
   210e4:	ldr	r3, [r3]
   210e8:	pop	{r4, lr}
   210ec:	ldr	r3, [r3, #12]
   210f0:	ldr	r0, [r3, #4]
   210f4:	b	146d4 <g_variant_new_int32@plt>
   210f8:	andeq	r6, r3, r8, lsr r8
   210fc:	push	{r4, r5, r6, r7, r8, lr}
   21100:	sub	sp, sp, #80	; 0x50
   21104:	ldr	r8, [pc, #184]	; 211c4 <g_strcmp0@plt+0xbff8>
   21108:	ldr	r7, [r2]
   2110c:	mov	r0, r1
   21110:	ldr	r3, [r8]
   21114:	mov	r1, #0
   21118:	mov	r4, r2
   2111c:	str	r3, [sp, #76]	; 0x4c
   21120:	bl	14e30 <g_task_propagate_pointer@plt>
   21124:	mov	r0, r7
   21128:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   2112c:	bl	14704 <g_dbus_message_new_method_reply@plt>
   21130:	ldr	r1, [pc, #144]	; 211c8 <g_strcmp0@plt+0xbffc>
   21134:	mov	r5, #0
   21138:	mov	r6, r0
   2113c:	add	r0, sp, #12
   21140:	bl	149e0 <g_variant_builder_init@plt>
   21144:	add	r0, sp, #12
   21148:	bl	145a8 <g_variant_builder_end@plt>
   2114c:	mov	r1, r0
   21150:	mov	r0, r6
   21154:	bl	14848 <g_dbus_message_set_body@plt>
   21158:	mov	r0, r7
   2115c:	bl	14c68 <g_dbus_method_invocation_get_connection@plt>
   21160:	mov	r3, r5
   21164:	mov	r2, r5
   21168:	mov	r1, r6
   2116c:	str	r5, [sp]
   21170:	bl	14adc <g_dbus_connection_send_message@plt>
   21174:	mov	r0, r7
   21178:	bl	14e90 <g_object_unref@plt>
   2117c:	mov	r0, r6
   21180:	bl	14e90 <g_object_unref@plt>
   21184:	ldr	r0, [r4, #4]
   21188:	bl	14bd8 <g_free@plt>
   2118c:	ldr	r0, [r4, #8]
   21190:	str	r5, [r4, #4]
   21194:	bl	14bd8 <g_free@plt>
   21198:	str	r5, [r4, #8]
   2119c:	mov	r1, r4
   211a0:	mov	r0, #12
   211a4:	bl	150ac <g_slice_free1@plt>
   211a8:	ldr	r2, [sp, #76]	; 0x4c
   211ac:	ldr	r3, [r8]
   211b0:	cmp	r2, r3
   211b4:	bne	211c0 <g_strcmp0@plt+0xbff4>
   211b8:	add	sp, sp, #80	; 0x50
   211bc:	pop	{r4, r5, r6, r7, r8, pc}
   211c0:	bl	14b6c <__stack_chk_fail@plt>
   211c4:	andeq	fp, r4, r8, asr #19
   211c8:	andeq	r7, r3, r0, lsl sl
   211cc:	push	{r4, r5, r6, r7, lr}
   211d0:	sub	sp, sp, #84	; 0x54
   211d4:	ldr	r6, [pc, #156]	; 21278 <g_strcmp0@plt+0xc0ac>
   211d8:	ldr	r5, [r2]
   211dc:	mov	r0, r1
   211e0:	ldr	r3, [r6]
   211e4:	mov	r1, #0
   211e8:	mov	r7, r2
   211ec:	str	r3, [sp, #76]	; 0x4c
   211f0:	bl	14e30 <g_task_propagate_pointer@plt>
   211f4:	mov	r0, r5
   211f8:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   211fc:	bl	14704 <g_dbus_message_new_method_reply@plt>
   21200:	ldr	r1, [pc, #116]	; 2127c <g_strcmp0@plt+0xc0b0>
   21204:	mov	r4, r0
   21208:	add	r0, sp, #12
   2120c:	bl	149e0 <g_variant_builder_init@plt>
   21210:	add	r0, sp, #12
   21214:	bl	145a8 <g_variant_builder_end@plt>
   21218:	mov	r1, r0
   2121c:	mov	r0, r4
   21220:	bl	14848 <g_dbus_message_set_body@plt>
   21224:	mov	r0, r5
   21228:	bl	14c68 <g_dbus_method_invocation_get_connection@plt>
   2122c:	mov	r3, #0
   21230:	mov	r2, r3
   21234:	str	r3, [sp]
   21238:	mov	r1, r4
   2123c:	bl	14adc <g_dbus_connection_send_message@plt>
   21240:	mov	r0, r5
   21244:	bl	14e90 <g_object_unref@plt>
   21248:	mov	r0, r4
   2124c:	bl	14e90 <g_object_unref@plt>
   21250:	mov	r1, r7
   21254:	mov	r0, #4
   21258:	bl	150ac <g_slice_free1@plt>
   2125c:	ldr	r2, [sp, #76]	; 0x4c
   21260:	ldr	r3, [r6]
   21264:	cmp	r2, r3
   21268:	bne	21274 <g_strcmp0@plt+0xc0a8>
   2126c:	add	sp, sp, #84	; 0x54
   21270:	pop	{r4, r5, r6, r7, pc}
   21274:	bl	14b6c <__stack_chk_fail@plt>
   21278:	andeq	fp, r4, r8, asr #19
   2127c:	andeq	r7, r3, r0, lsl sl
   21280:	push	{r4, r5, r6, r7, lr}
   21284:	sub	sp, sp, #84	; 0x54
   21288:	ldr	r6, [pc, #156]	; 2132c <g_strcmp0@plt+0xc160>
   2128c:	ldr	r5, [r2]
   21290:	mov	r0, r1
   21294:	ldr	r3, [r6]
   21298:	mov	r1, #0
   2129c:	mov	r7, r2
   212a0:	str	r3, [sp, #76]	; 0x4c
   212a4:	bl	14e30 <g_task_propagate_pointer@plt>
   212a8:	mov	r0, r5
   212ac:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   212b0:	bl	14704 <g_dbus_message_new_method_reply@plt>
   212b4:	ldr	r1, [pc, #116]	; 21330 <g_strcmp0@plt+0xc164>
   212b8:	mov	r4, r0
   212bc:	add	r0, sp, #12
   212c0:	bl	149e0 <g_variant_builder_init@plt>
   212c4:	add	r0, sp, #12
   212c8:	bl	145a8 <g_variant_builder_end@plt>
   212cc:	mov	r1, r0
   212d0:	mov	r0, r4
   212d4:	bl	14848 <g_dbus_message_set_body@plt>
   212d8:	mov	r0, r5
   212dc:	bl	14c68 <g_dbus_method_invocation_get_connection@plt>
   212e0:	mov	r3, #0
   212e4:	mov	r2, r3
   212e8:	str	r3, [sp]
   212ec:	mov	r1, r4
   212f0:	bl	14adc <g_dbus_connection_send_message@plt>
   212f4:	mov	r0, r5
   212f8:	bl	14e90 <g_object_unref@plt>
   212fc:	mov	r0, r4
   21300:	bl	14e90 <g_object_unref@plt>
   21304:	mov	r1, r7
   21308:	mov	r0, #8
   2130c:	bl	150ac <g_slice_free1@plt>
   21310:	ldr	r2, [sp, #76]	; 0x4c
   21314:	ldr	r3, [r6]
   21318:	cmp	r2, r3
   2131c:	bne	21328 <g_strcmp0@plt+0xc15c>
   21320:	add	sp, sp, #84	; 0x54
   21324:	pop	{r4, r5, r6, r7, pc}
   21328:	bl	14b6c <__stack_chk_fail@plt>
   2132c:	andeq	fp, r4, r8, asr #19
   21330:	andeq	r7, r3, r0, lsl sl
   21334:	push	{r4, r5, r6, r7, r8, r9, lr}
   21338:	sub	sp, sp, #84	; 0x54
   2133c:	ldr	r8, [pc, #208]	; 21414 <g_strcmp0@plt+0xc248>
   21340:	mov	r0, r1
   21344:	mov	r1, #0
   21348:	ldr	r3, [r8]
   2134c:	mov	r4, r2
   21350:	ldr	r7, [r2]
   21354:	str	r3, [sp, #76]	; 0x4c
   21358:	bl	14e30 <g_task_propagate_pointer@plt>
   2135c:	mov	r5, #0
   21360:	ldr	r9, [r0, #44]	; 0x2c
   21364:	mov	r0, r7
   21368:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   2136c:	bl	14704 <g_dbus_message_new_method_reply@plt>
   21370:	ldr	r1, [pc, #160]	; 21418 <g_strcmp0@plt+0xc24c>
   21374:	mov	r6, r0
   21378:	add	r0, sp, #12
   2137c:	bl	149e0 <g_variant_builder_init@plt>
   21380:	mov	r0, r9
   21384:	bl	14524 <g_variant_new_uint32@plt>
   21388:	mov	r1, r0
   2138c:	add	r0, sp, #12
   21390:	bl	145f0 <g_variant_builder_add_value@plt>
   21394:	add	r0, sp, #12
   21398:	bl	145a8 <g_variant_builder_end@plt>
   2139c:	mov	r1, r0
   213a0:	mov	r0, r6
   213a4:	bl	14848 <g_dbus_message_set_body@plt>
   213a8:	mov	r0, r7
   213ac:	bl	14c68 <g_dbus_method_invocation_get_connection@plt>
   213b0:	mov	r3, r5
   213b4:	mov	r2, r5
   213b8:	mov	r1, r6
   213bc:	str	r5, [sp]
   213c0:	bl	14adc <g_dbus_connection_send_message@plt>
   213c4:	mov	r0, r7
   213c8:	bl	14e90 <g_object_unref@plt>
   213cc:	mov	r0, r6
   213d0:	bl	14e90 <g_object_unref@plt>
   213d4:	ldr	r0, [r4, #4]
   213d8:	bl	14bd8 <g_free@plt>
   213dc:	ldr	r0, [r4, #12]
   213e0:	str	r5, [r4, #4]
   213e4:	bl	14bd8 <g_free@plt>
   213e8:	str	r5, [r4, #12]
   213ec:	mov	r1, r4
   213f0:	mov	r0, #20
   213f4:	bl	150ac <g_slice_free1@plt>
   213f8:	ldr	r2, [sp, #76]	; 0x4c
   213fc:	ldr	r3, [r8]
   21400:	cmp	r2, r3
   21404:	bne	21410 <g_strcmp0@plt+0xc244>
   21408:	add	sp, sp, #84	; 0x54
   2140c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   21410:	bl	14b6c <__stack_chk_fail@plt>
   21414:	andeq	fp, r4, r8, asr #19
   21418:	andeq	r7, r3, r0, lsl sl
   2141c:	push	{r4, r5, r6, r7, r8, lr}
   21420:	sub	sp, sp, #80	; 0x50
   21424:	ldr	r6, [pc, #180]	; 214e0 <g_strcmp0@plt+0xc314>
   21428:	mov	r0, r1
   2142c:	mov	r1, #0
   21430:	ldr	r3, [r6]
   21434:	ldr	r5, [r2]
   21438:	mov	r7, r2
   2143c:	str	r3, [sp, #76]	; 0x4c
   21440:	bl	14e30 <g_task_propagate_pointer@plt>
   21444:	ldr	r8, [r0, #28]
   21448:	mov	r0, r5
   2144c:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   21450:	bl	14704 <g_dbus_message_new_method_reply@plt>
   21454:	ldr	r1, [pc, #136]	; 214e4 <g_strcmp0@plt+0xc318>
   21458:	mov	r4, r0
   2145c:	add	r0, sp, #12
   21460:	bl	149e0 <g_variant_builder_init@plt>
   21464:	mov	r0, r8
   21468:	bl	1456c <g_variant_new_boolean@plt>
   2146c:	mov	r1, r0
   21470:	add	r0, sp, #12
   21474:	bl	145f0 <g_variant_builder_add_value@plt>
   21478:	add	r0, sp, #12
   2147c:	bl	145a8 <g_variant_builder_end@plt>
   21480:	mov	r1, r0
   21484:	mov	r0, r4
   21488:	bl	14848 <g_dbus_message_set_body@plt>
   2148c:	mov	r0, r5
   21490:	bl	14c68 <g_dbus_method_invocation_get_connection@plt>
   21494:	mov	r3, #0
   21498:	mov	r2, r3
   2149c:	str	r3, [sp]
   214a0:	mov	r1, r4
   214a4:	bl	14adc <g_dbus_connection_send_message@plt>
   214a8:	mov	r0, r5
   214ac:	bl	14e90 <g_object_unref@plt>
   214b0:	mov	r0, r4
   214b4:	bl	14e90 <g_object_unref@plt>
   214b8:	mov	r1, r7
   214bc:	mov	r0, #4
   214c0:	bl	150ac <g_slice_free1@plt>
   214c4:	ldr	r2, [sp, #76]	; 0x4c
   214c8:	ldr	r3, [r6]
   214cc:	cmp	r2, r3
   214d0:	bne	214dc <g_strcmp0@plt+0xc310>
   214d4:	add	sp, sp, #80	; 0x50
   214d8:	pop	{r4, r5, r6, r7, r8, pc}
   214dc:	bl	14b6c <__stack_chk_fail@plt>
   214e0:	andeq	fp, r4, r8, asr #19
   214e4:	andeq	r7, r3, r0, lsl sl
   214e8:	ldr	r3, [r0]
   214ec:	push	{r4, lr}
   214f0:	cmp	r3, #1
   214f4:	mov	r4, r0
   214f8:	beq	21524 <g_strcmp0@plt+0xc358>
   214fc:	bl	204f4 <g_strcmp0@plt+0xb328>
   21500:	mov	r2, #1
   21504:	str	r2, [r4]
   21508:	ldr	r1, [pc, #148]	; 215a4 <g_strcmp0@plt+0xc3d8>
   2150c:	mov	r2, r4
   21510:	str	r0, [r4, #36]	; 0x24
   21514:	str	r0, [r4, #32]
   21518:	bl	20060 <g_strcmp0@plt+0xae94>
   2151c:	mov	r0, #0
   21520:	pop	{r4, pc}
   21524:	ldr	r1, [r0, #8]
   21528:	ldr	r0, [r0, #32]
   2152c:	bl	1f714 <g_strcmp0@plt+0xa548>
   21530:	ldr	r3, [r4, #32]
   21534:	cmp	r3, #0
   21538:	str	r0, [r4, #28]
   2153c:	beq	21550 <g_strcmp0@plt+0xc384>
   21540:	mov	r0, r3
   21544:	bl	14e90 <g_object_unref@plt>
   21548:	mov	r3, #0
   2154c:	str	r3, [r4, #32]
   21550:	mov	r2, #0
   21554:	mov	r1, r4
   21558:	ldr	r0, [r4, #12]
   2155c:	bl	1468c <g_task_return_pointer@plt>
   21560:	ldr	r3, [r4]
   21564:	cmp	r3, #0
   21568:	bne	2158c <g_strcmp0@plt+0xc3c0>
   2156c:	ldr	r0, [r4, #12]
   21570:	bl	14e90 <g_object_unref@plt>
   21574:	mov	r0, #0
   21578:	pop	{r4, pc}
   2157c:	ldr	r0, [r4, #12]
   21580:	bl	14bf0 <g_task_get_context@plt>
   21584:	mov	r1, #1
   21588:	bl	14a7c <g_main_context_iteration@plt>
   2158c:	ldr	r3, [r4, #20]
   21590:	cmp	r3, #0
   21594:	beq	2157c <g_strcmp0@plt+0xc3b0>
   21598:	ldr	r0, [r4, #12]
   2159c:	bl	14e90 <g_object_unref@plt>
   215a0:	b	21574 <g_strcmp0@plt+0xc3a8>
   215a4:	andeq	r1, r2, r8, lsr #11
   215a8:	mov	r3, #1
   215ac:	strd	r0, [r2, #4]
   215b0:	str	r3, [r2, #20]
   215b4:	mov	r0, r2
   215b8:	b	214e8 <g_strcmp0@plt+0xc31c>
   215bc:	cmp	r1, #1
   215c0:	beq	21624 <g_strcmp0@plt+0xc458>
   215c4:	push	{r4, r5, r6, r7, lr}
   215c8:	mov	r5, r0
   215cc:	ldm	r3, {r2, r6}
   215d0:	sub	sp, sp, #28
   215d4:	mov	r4, r1
   215d8:	ldr	r0, [r2]
   215dc:	bl	14680 <g_type_name@plt>
   215e0:	ldr	r3, [r5]
   215e4:	mov	r7, r0
   215e8:	ldr	r0, [r3]
   215ec:	bl	14680 <g_type_name@plt>
   215f0:	ldr	r2, [pc, #60]	; 21634 <g_strcmp0@plt+0xc468>
   215f4:	ldr	r3, [pc, #60]	; 21638 <g_strcmp0@plt+0xc46c>
   215f8:	strd	r6, [sp, #12]
   215fc:	stmib	sp, {r2, r4}
   21600:	str	r3, [sp]
   21604:	ldr	r2, [pc, #48]	; 2163c <g_strcmp0@plt+0xc470>
   21608:	ldr	r3, [pc, #48]	; 21640 <g_strcmp0@plt+0xc474>
   2160c:	mov	r1, #16
   21610:	str	r0, [sp, #20]
   21614:	mov	r0, #0
   21618:	bl	14668 <g_log@plt>
   2161c:	add	sp, sp, #28
   21620:	pop	{r4, r5, r6, r7, pc}
   21624:	ldr	r3, [r0, #12]
   21628:	mov	r0, r2
   2162c:	ldr	r1, [r3, #4]
   21630:	b	14bfc <g_value_set_int@plt>
   21634:	andeq	r4, r3, ip, lsr pc
   21638:	andeq	r0, r0, r2, asr r4
   2163c:	andeq	r4, r3, r4, lsl #30
   21640:	andeq	r6, r3, r4, asr #16
   21644:	cmp	r1, #1
   21648:	push	{r4, r5, r6, r7, lr}
   2164c:	mov	r5, r0
   21650:	sub	sp, sp, #28
   21654:	beq	216ac <g_strcmp0@plt+0xc4e0>
   21658:	ldm	r3, {r2, r6}
   2165c:	mov	r4, r1
   21660:	ldr	r0, [r2]
   21664:	bl	14680 <g_type_name@plt>
   21668:	ldr	r3, [r5]
   2166c:	mov	r7, r0
   21670:	ldr	r0, [r3]
   21674:	bl	14680 <g_type_name@plt>
   21678:	ldr	r2, [pc, #96]	; 216e0 <g_strcmp0@plt+0xc514>
   2167c:	ldr	r3, [pc, #96]	; 216e4 <g_strcmp0@plt+0xc518>
   21680:	strd	r6, [sp, #12]
   21684:	stmib	sp, {r2, r4}
   21688:	str	r3, [sp]
   2168c:	ldr	r2, [pc, #84]	; 216e8 <g_strcmp0@plt+0xc51c>
   21690:	ldr	r3, [pc, #84]	; 216ec <g_strcmp0@plt+0xc520>
   21694:	mov	r1, #16
   21698:	str	r0, [sp, #20]
   2169c:	mov	r0, #0
   216a0:	bl	14668 <g_log@plt>
   216a4:	add	sp, sp, #28
   216a8:	pop	{r4, r5, r6, r7, pc}
   216ac:	mov	r0, r2
   216b0:	bl	14518 <g_value_get_int@plt>
   216b4:	ldr	r3, [r5, #12]
   216b8:	ldr	r2, [r3, #4]
   216bc:	cmp	r0, r2
   216c0:	beq	216a4 <g_strcmp0@plt+0xc4d8>
   216c4:	ldr	r2, [pc, #36]	; 216f0 <g_strcmp0@plt+0xc524>
   216c8:	str	r0, [r3, #4]
   216cc:	mov	r0, r5
   216d0:	ldr	r1, [r2, #12]
   216d4:	add	sp, sp, #28
   216d8:	pop	{r4, r5, r6, r7, lr}
   216dc:	b	14b78 <g_object_notify_by_pspec@plt>
   216e0:	andeq	r4, r3, ip, lsr pc
   216e4:	andeq	r0, r0, r5, ror #8
   216e8:	andeq	r4, r3, r4, lsl #30
   216ec:	andeq	r6, r3, r4, asr #16
   216f0:	strdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   216f4:	ldr	r3, [r0, #12]
   216f8:	ldr	r2, [pc, #12]	; 2170c <g_strcmp0@plt+0xc540>
   216fc:	mov	r1, #32
   21700:	ldr	r3, [r3]
   21704:	mov	r0, #0
   21708:	b	14668 <g_log@plt>
   2170c:	andeq	r6, r3, r4, ror #16
   21710:	ldr	r3, [r0, #12]
   21714:	ldr	r2, [pc, #12]	; 21728 <g_strcmp0@plt+0xc55c>
   21718:	mov	r1, #32
   2171c:	ldr	r3, [r3]
   21720:	mov	r0, #0
   21724:	b	14668 <g_log@plt>
   21728:	andeq	r6, r3, r4, lsl #17
   2172c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   21730:	mov	r5, r0
   21734:	mov	r0, #40	; 0x28
   21738:	mov	r6, r3
   2173c:	ldr	r9, [sp, #32]
   21740:	mov	r8, r1
   21744:	mov	r7, r2
   21748:	bl	14a34 <g_slice_alloc0@plt>
   2174c:	mov	r3, r9
   21750:	ldr	r2, [pc, #232]	; 21840 <g_strcmp0@plt+0xc674>
   21754:	mov	r1, #0
   21758:	mov	r4, r0
   2175c:	mov	r0, r5
   21760:	str	r6, [r4, #16]
   21764:	bl	1504c <g_task_new@plt>
   21768:	cmp	r6, #0
   2176c:	moveq	r3, #1
   21770:	ldr	r2, [pc, #204]	; 21844 <g_strcmp0@plt+0xc678>
   21774:	mov	r1, r4
   21778:	streq	r3, [r4, #20]
   2177c:	str	r0, [r4, #12]
   21780:	bl	14c74 <g_task_set_task_data@plt>
   21784:	cmp	r5, #0
   21788:	beq	21798 <g_strcmp0@plt+0xc5cc>
   2178c:	mov	r0, r5
   21790:	bl	14404 <g_object_ref@plt>
   21794:	mov	r5, r0
   21798:	mov	r0, r8
   2179c:	str	r5, [r4, #24]
   217a0:	bl	147e8 <g_strdup@plt>
   217a4:	mov	r5, r0
   217a8:	ldr	r0, [r4, #28]
   217ac:	bl	14bd8 <g_free@plt>
   217b0:	mov	r0, r7
   217b4:	str	r5, [r4, #28]
   217b8:	bl	147e8 <g_strdup@plt>
   217bc:	mov	r5, r0
   217c0:	ldr	r0, [r4, #32]
   217c4:	bl	14bd8 <g_free@plt>
   217c8:	ldr	r3, [r4, #24]
   217cc:	ldr	r2, [pc, #116]	; 21848 <g_strcmp0@plt+0xc67c>
   217d0:	mov	r1, #32
   217d4:	ldr	r3, [r3, #12]
   217d8:	mov	r0, #0
   217dc:	str	r5, [r4, #32]
   217e0:	ldr	ip, [r3]
   217e4:	mov	r3, ip
   217e8:	str	ip, [r4, #36]	; 0x24
   217ec:	bl	14668 <g_log@plt>
   217f0:	mov	r2, #0
   217f4:	mov	r1, r4
   217f8:	ldr	r0, [r4, #12]
   217fc:	bl	1468c <g_task_return_pointer@plt>
   21800:	ldr	r3, [r4]
   21804:	cmp	r3, #0
   21808:	bne	21828 <g_strcmp0@plt+0xc65c>
   2180c:	ldr	r0, [r4, #12]
   21810:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   21814:	b	14e90 <g_object_unref@plt>
   21818:	ldr	r0, [r4, #12]
   2181c:	bl	14bf0 <g_task_get_context@plt>
   21820:	mov	r1, #1
   21824:	bl	14a7c <g_main_context_iteration@plt>
   21828:	ldr	r3, [r4, #20]
   2182c:	cmp	r3, #0
   21830:	beq	21818 <g_strcmp0@plt+0xc64c>
   21834:	ldr	r0, [r4, #12]
   21838:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2183c:	b	14e90 <g_object_unref@plt>
   21840:	andeq	r0, r2, r4, lsr #18
   21844:	andeq	r0, r2, r4, lsl #16
   21848:	andeq	r6, r3, r4, lsr #17
   2184c:	mov	r0, r1
   21850:	mov	r1, #0
   21854:	b	14e30 <g_task_propagate_pointer@plt>
   21858:	push	{r4, r5, r6, r7, r8, lr}
   2185c:	mov	r5, r0
   21860:	mov	r0, #32
   21864:	mov	r6, r1
   21868:	mov	r7, r2
   2186c:	bl	14a34 <g_slice_alloc0@plt>
   21870:	mov	r3, r7
   21874:	ldr	r2, [pc, #188]	; 21938 <g_strcmp0@plt+0xc76c>
   21878:	mov	r1, #0
   2187c:	mov	r4, r0
   21880:	mov	r0, r5
   21884:	str	r6, [r4, #16]
   21888:	bl	1504c <g_task_new@plt>
   2188c:	cmp	r6, #0
   21890:	moveq	r3, #1
   21894:	ldr	r2, [pc, #160]	; 2193c <g_strcmp0@plt+0xc770>
   21898:	mov	r1, r4
   2189c:	streq	r3, [r4, #20]
   218a0:	str	r0, [r4, #12]
   218a4:	bl	14c74 <g_task_set_task_data@plt>
   218a8:	cmp	r5, #0
   218ac:	beq	2192c <g_strcmp0@plt+0xc760>
   218b0:	mov	r0, r5
   218b4:	bl	14404 <g_object_ref@plt>
   218b8:	ldr	r2, [pc, #128]	; 21940 <g_strcmp0@plt+0xc774>
   218bc:	mov	r1, #32
   218c0:	ldr	r3, [r0, #12]
   218c4:	str	r0, [r4, #24]
   218c8:	mov	r0, #0
   218cc:	ldr	ip, [r3]
   218d0:	mov	r3, ip
   218d4:	str	ip, [r4, #28]
   218d8:	bl	14668 <g_log@plt>
   218dc:	mov	r2, #0
   218e0:	mov	r1, r4
   218e4:	ldr	r0, [r4, #12]
   218e8:	bl	1468c <g_task_return_pointer@plt>
   218ec:	ldr	r3, [r4]
   218f0:	cmp	r3, #0
   218f4:	bne	21914 <g_strcmp0@plt+0xc748>
   218f8:	ldr	r0, [r4, #12]
   218fc:	pop	{r4, r5, r6, r7, r8, lr}
   21900:	b	14e90 <g_object_unref@plt>
   21904:	ldr	r0, [r4, #12]
   21908:	bl	14bf0 <g_task_get_context@plt>
   2190c:	mov	r1, #1
   21910:	bl	14a7c <g_main_context_iteration@plt>
   21914:	ldr	r3, [r4, #20]
   21918:	cmp	r3, #0
   2191c:	beq	21904 <g_strcmp0@plt+0xc738>
   21920:	ldr	r0, [r4, #12]
   21924:	pop	{r4, r5, r6, r7, r8, lr}
   21928:	b	14e90 <g_object_unref@plt>
   2192c:	str	r5, [r4, #24]
   21930:	ldr	r3, [r5, #12]
   21934:	udf	#0
   21938:	andeq	r0, r2, r8, ror #18
   2193c:	andeq	r0, r2, ip, asr #16
   21940:	andeq	r6, r3, r4, asr #17
   21944:	mov	r0, r1
   21948:	mov	r1, #0
   2194c:	b	14e30 <g_task_propagate_pointer@plt>
   21950:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21954:	mov	r5, r0
   21958:	mov	r0, #68	; 0x44
   2195c:	ldr	r6, [sp, #44]	; 0x2c
   21960:	ldr	fp, [sp, #48]	; 0x30
   21964:	mov	sl, r1
   21968:	mov	r8, r2
   2196c:	mov	r9, r3
   21970:	ldr	r7, [sp, #40]	; 0x28
   21974:	bl	14a34 <g_slice_alloc0@plt>
   21978:	mov	r3, fp
   2197c:	ldr	r2, [pc, #308]	; 21ab8 <g_strcmp0@plt+0xc8ec>
   21980:	mov	r1, #0
   21984:	mov	r4, r0
   21988:	mov	r0, r5
   2198c:	str	r6, [r4, #16]
   21990:	bl	1504c <g_task_new@plt>
   21994:	cmp	r6, #0
   21998:	moveq	r3, #1
   2199c:	ldr	r2, [pc, #280]	; 21abc <g_strcmp0@plt+0xc8f0>
   219a0:	mov	r1, r4
   219a4:	streq	r3, [r4, #20]
   219a8:	str	r0, [r4, #12]
   219ac:	bl	14c74 <g_task_set_task_data@plt>
   219b0:	cmp	r5, #0
   219b4:	beq	219c4 <g_strcmp0@plt+0xc7f8>
   219b8:	mov	r0, r5
   219bc:	bl	14404 <g_object_ref@plt>
   219c0:	mov	r5, r0
   219c4:	mov	r0, sl
   219c8:	str	r5, [r4, #24]
   219cc:	bl	147e8 <g_strdup@plt>
   219d0:	mov	r5, r0
   219d4:	ldr	r0, [r4, #28]
   219d8:	bl	14bd8 <g_free@plt>
   219dc:	mov	r0, r9
   219e0:	str	r5, [r4, #28]
   219e4:	str	r8, [r4, #32]
   219e8:	bl	147e8 <g_strdup@plt>
   219ec:	mov	r5, r0
   219f0:	ldr	r0, [r4, #36]	; 0x24
   219f4:	bl	14bd8 <g_free@plt>
   219f8:	ldr	r2, [pc, #192]	; 21ac0 <g_strcmp0@plt+0xc8f4>
   219fc:	mov	r1, #32
   21a00:	mov	r0, #0
   21a04:	str	r5, [r4, #36]	; 0x24
   21a08:	str	r7, [r4, #40]	; 0x28
   21a0c:	bl	14668 <g_log@plt>
   21a10:	ldr	r3, [r4, #40]	; 0x28
   21a14:	mov	r5, #0
   21a18:	cmp	r3, #8
   21a1c:	str	r5, [r4, #44]	; 0x2c
   21a20:	beq	21a74 <g_strcmp0@plt+0xc8a8>
   21a24:	mov	r2, #0
   21a28:	mov	r1, r4
   21a2c:	ldr	r0, [r4, #12]
   21a30:	bl	1468c <g_task_return_pointer@plt>
   21a34:	ldr	r3, [r4]
   21a38:	cmp	r3, #0
   21a3c:	bne	21a5c <g_strcmp0@plt+0xc890>
   21a40:	ldr	r0, [r4, #12]
   21a44:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21a48:	b	14e90 <g_object_unref@plt>
   21a4c:	ldr	r0, [r4, #12]
   21a50:	bl	14bf0 <g_task_get_context@plt>
   21a54:	mov	r1, #1
   21a58:	bl	14a7c <g_main_context_iteration@plt>
   21a5c:	ldr	r3, [r4, #20]
   21a60:	cmp	r3, #0
   21a64:	beq	21a4c <g_strcmp0@plt+0xc880>
   21a68:	ldr	r0, [r4, #12]
   21a6c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21a70:	b	14e90 <g_object_unref@plt>
   21a74:	bl	1eff4 <g_strcmp0@plt+0x9e28>
   21a78:	ldr	r1, [r4, #32]
   21a7c:	str	r0, [r4, #52]	; 0x34
   21a80:	str	r0, [r4, #48]	; 0x30
   21a84:	str	r0, [r4, #56]	; 0x38
   21a88:	bl	1ef7c <g_strcmp0@plt+0x9db0>
   21a8c:	bl	15178 <g_random_int@plt>
   21a90:	ldr	r3, [r4, #48]	; 0x30
   21a94:	cmp	r3, r5
   21a98:	str	r0, [r4, #60]	; 0x3c
   21a9c:	str	r0, [r4, #64]	; 0x40
   21aa0:	str	r0, [r4, #44]	; 0x2c
   21aa4:	beq	21a24 <g_strcmp0@plt+0xc858>
   21aa8:	mov	r0, r3
   21aac:	bl	14e90 <g_object_unref@plt>
   21ab0:	str	r5, [r4, #48]	; 0x30
   21ab4:	b	21a24 <g_strcmp0@plt+0xc858>
   21ab8:	andeq	r0, r2, ip, lsr #19
   21abc:	andeq	r0, r2, ip, ror r8
   21ac0:	andeq	r6, r3, r4, ror #17
   21ac4:	push	{r4, lr}
   21ac8:	mov	r0, r1
   21acc:	mov	r1, #0
   21ad0:	mov	r4, r2
   21ad4:	bl	14e30 <g_task_propagate_pointer@plt>
   21ad8:	cmp	r4, #0
   21adc:	ldrne	r3, [r0, #44]	; 0x2c
   21ae0:	strne	r3, [r4]
   21ae4:	pop	{r4, pc}
   21ae8:	push	{r4, r5, r6, r7, r8, lr}
   21aec:	mov	r5, r0
   21af0:	mov	r0, #40	; 0x28
   21af4:	mov	r6, r2
   21af8:	mov	r7, r1
   21afc:	mov	r8, r3
   21b00:	bl	14a34 <g_slice_alloc0@plt>
   21b04:	mov	r3, r8
   21b08:	ldr	r2, [pc, #192]	; 21bd0 <g_strcmp0@plt+0xca04>
   21b0c:	mov	r1, #0
   21b10:	mov	r4, r0
   21b14:	mov	r0, r5
   21b18:	str	r6, [r4, #16]
   21b1c:	bl	1504c <g_task_new@plt>
   21b20:	cmp	r6, #0
   21b24:	moveq	r3, #1
   21b28:	ldr	r2, [pc, #164]	; 21bd4 <g_strcmp0@plt+0xca08>
   21b2c:	mov	r1, r4
   21b30:	streq	r3, [r4, #20]
   21b34:	str	r0, [r4, #12]
   21b38:	bl	14c74 <g_task_set_task_data@plt>
   21b3c:	cmp	r5, #0
   21b40:	beq	21b50 <g_strcmp0@plt+0xc984>
   21b44:	mov	r0, r5
   21b48:	bl	14404 <g_object_ref@plt>
   21b4c:	mov	r5, r0
   21b50:	str	r5, [r4, #24]
   21b54:	str	r7, [r4, #28]
   21b58:	bl	1eff4 <g_strcmp0@plt+0x9e28>
   21b5c:	str	r0, [r4, #36]	; 0x24
   21b60:	str	r0, [r4, #32]
   21b64:	bl	1eef8 <g_strcmp0@plt+0x9d2c>
   21b68:	ldr	r0, [r4, #32]
   21b6c:	cmp	r0, #0
   21b70:	beq	21b80 <g_strcmp0@plt+0xc9b4>
   21b74:	bl	14e90 <g_object_unref@plt>
   21b78:	mov	r3, #0
   21b7c:	str	r3, [r4, #32]
   21b80:	mov	r2, #0
   21b84:	mov	r1, r4
   21b88:	ldr	r0, [r4, #12]
   21b8c:	bl	1468c <g_task_return_pointer@plt>
   21b90:	ldr	r3, [r4]
   21b94:	cmp	r3, #0
   21b98:	bne	21bb8 <g_strcmp0@plt+0xc9ec>
   21b9c:	ldr	r0, [r4, #12]
   21ba0:	pop	{r4, r5, r6, r7, r8, lr}
   21ba4:	b	14e90 <g_object_unref@plt>
   21ba8:	ldr	r0, [r4, #12]
   21bac:	bl	14bf0 <g_task_get_context@plt>
   21bb0:	mov	r1, #1
   21bb4:	bl	14a7c <g_main_context_iteration@plt>
   21bb8:	ldr	r3, [r4, #20]
   21bbc:	cmp	r3, #0
   21bc0:	beq	21ba8 <g_strcmp0@plt+0xc9dc>
   21bc4:	ldr	r0, [r4, #12]
   21bc8:	pop	{r4, r5, r6, r7, r8, lr}
   21bcc:	b	14e90 <g_object_unref@plt>
   21bd0:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   21bd4:	andeq	r0, r2, r4, asr #17
   21bd8:	mov	r0, r1
   21bdc:	mov	r1, #0
   21be0:	b	14e30 <g_task_propagate_pointer@plt>
   21be4:	push	{r4, lr}
   21be8:	bl	204f4 <g_strcmp0@plt+0xb328>
   21bec:	mov	r4, r0
   21bf0:	bl	1f9e8 <g_strcmp0@plt+0xa81c>
   21bf4:	cmp	r4, #0
   21bf8:	popeq	{r4, pc}
   21bfc:	mov	r0, r4
   21c00:	pop	{r4, lr}
   21c04:	b	14e90 <g_object_unref@plt>
   21c08:	push	{r4, r5, r6, r7, r8, lr}
   21c0c:	mov	r5, r0
   21c10:	mov	r0, #40	; 0x28
   21c14:	mov	r6, r1
   21c18:	mov	r7, r2
   21c1c:	bl	14a34 <g_slice_alloc0@plt>
   21c20:	mov	r3, r7
   21c24:	ldr	r2, [pc, #80]	; 21c7c <g_strcmp0@plt+0xcab0>
   21c28:	mov	r1, #0
   21c2c:	mov	r4, r0
   21c30:	mov	r0, r5
   21c34:	str	r6, [r4, #16]
   21c38:	bl	1504c <g_task_new@plt>
   21c3c:	cmp	r6, #0
   21c40:	moveq	r3, #1
   21c44:	ldr	r2, [pc, #52]	; 21c80 <g_strcmp0@plt+0xcab4>
   21c48:	mov	r1, r4
   21c4c:	streq	r3, [r4, #20]
   21c50:	str	r0, [r4, #12]
   21c54:	bl	14c74 <g_task_set_task_data@plt>
   21c58:	cmp	r5, #0
   21c5c:	beq	21c6c <g_strcmp0@plt+0xcaa0>
   21c60:	mov	r0, r5
   21c64:	bl	14404 <g_object_ref@plt>
   21c68:	mov	r5, r0
   21c6c:	mov	r0, r4
   21c70:	str	r5, [r4, #24]
   21c74:	pop	{r4, r5, r6, r7, r8, lr}
   21c78:	b	214e8 <g_strcmp0@plt+0xc31c>
   21c7c:	andeq	r0, r2, r4, lsr sl
   21c80:	strdeq	r0, [r2], -r4
   21c84:	push	{r4, r5, r6, r7, r8, r9, lr}
   21c88:	sub	sp, sp, #156	; 0x9c
   21c8c:	ldr	r6, [pc, #1272]	; 2218c <g_strcmp0@plt+0xcfc0>
   21c90:	ldr	r3, [sp, #196]	; 0xc4
   21c94:	ldr	r4, [sp, #184]	; 0xb8
   21c98:	ldr	r2, [r6]
   21c9c:	mov	r0, r4
   21ca0:	ldr	r1, [pc, #1256]	; 22190 <g_strcmp0@plt+0xcfc4>
   21ca4:	str	r2, [sp, #148]	; 0x94
   21ca8:	ldr	r9, [r3]
   21cac:	bl	14fd4 <strcmp@plt>
   21cb0:	ldr	r8, [sp, #188]	; 0xbc
   21cb4:	ldr	r5, [sp, #192]	; 0xc0
   21cb8:	subs	r7, r0, #0
   21cbc:	beq	21ecc <g_strcmp0@plt+0xcd00>
   21cc0:	ldr	r1, [pc, #1228]	; 22194 <g_strcmp0@plt+0xcfc8>
   21cc4:	mov	r0, r4
   21cc8:	bl	14fd4 <strcmp@plt>
   21ccc:	subs	r7, r0, #0
   21cd0:	beq	21df4 <g_strcmp0@plt+0xcc28>
   21cd4:	ldr	r1, [pc, #1212]	; 22198 <g_strcmp0@plt+0xcfcc>
   21cd8:	mov	r0, r4
   21cdc:	bl	14fd4 <strcmp@plt>
   21ce0:	subs	r7, r0, #0
   21ce4:	beq	21fc0 <g_strcmp0@plt+0xcdf4>
   21ce8:	ldr	r1, [pc, #1196]	; 2219c <g_strcmp0@plt+0xcfd0>
   21cec:	mov	r0, r4
   21cf0:	bl	14fd4 <strcmp@plt>
   21cf4:	cmp	r0, #0
   21cf8:	beq	22034 <g_strcmp0@plt+0xce68>
   21cfc:	ldr	r1, [pc, #1180]	; 221a0 <g_strcmp0@plt+0xcfd4>
   21d00:	mov	r0, r4
   21d04:	bl	14fd4 <strcmp@plt>
   21d08:	subs	r7, r0, #0
   21d0c:	beq	21f04 <g_strcmp0@plt+0xcd38>
   21d10:	ldr	r1, [pc, #1164]	; 221a4 <g_strcmp0@plt+0xcfd8>
   21d14:	mov	r0, r4
   21d18:	bl	14fd4 <strcmp@plt>
   21d1c:	cmp	r0, #0
   21d20:	beq	22094 <g_strcmp0@plt+0xcec8>
   21d24:	ldr	r1, [pc, #1148]	; 221a8 <g_strcmp0@plt+0xcfdc>
   21d28:	mov	r0, r4
   21d2c:	bl	14fd4 <strcmp@plt>
   21d30:	subs	r7, r0, #0
   21d34:	beq	220e4 <g_strcmp0@plt+0xcf18>
   21d38:	ldr	r1, [pc, #1132]	; 221ac <g_strcmp0@plt+0xcfe0>
   21d3c:	mov	r0, r4
   21d40:	bl	14fd4 <strcmp@plt>
   21d44:	cmp	r0, #0
   21d48:	beq	22064 <g_strcmp0@plt+0xce98>
   21d4c:	ldr	r1, [pc, #1116]	; 221b0 <g_strcmp0@plt+0xcfe4>
   21d50:	mov	r0, r4
   21d54:	bl	14fd4 <strcmp@plt>
   21d58:	subs	r7, r0, #0
   21d5c:	beq	2214c <g_strcmp0@plt+0xcf80>
   21d60:	mov	r0, r4
   21d64:	ldr	r1, [pc, #1096]	; 221b4 <g_strcmp0@plt+0xcfe8>
   21d68:	bl	14fd4 <strcmp@plt>
   21d6c:	cmp	r0, #0
   21d70:	bne	22140 <g_strcmp0@plt+0xcf74>
   21d74:	mov	r1, r8
   21d78:	add	r0, sp, #20
   21d7c:	bl	14494 <g_variant_iter_init@plt>
   21d80:	mov	r0, r5
   21d84:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   21d88:	bl	14704 <g_dbus_message_new_method_reply@plt>
   21d8c:	ldr	r1, [pc, #1060]	; 221b8 <g_strcmp0@plt+0xcfec>
   21d90:	mov	r4, r0
   21d94:	add	r0, sp, #84	; 0x54
   21d98:	bl	149e0 <g_variant_builder_init@plt>
   21d9c:	mov	r0, #0
   21da0:	bl	1456c <g_variant_new_boolean@plt>
   21da4:	mov	r1, r0
   21da8:	add	r0, sp, #84	; 0x54
   21dac:	bl	145f0 <g_variant_builder_add_value@plt>
   21db0:	add	r0, sp, #84	; 0x54
   21db4:	bl	145a8 <g_variant_builder_end@plt>
   21db8:	mov	r1, r0
   21dbc:	mov	r0, r4
   21dc0:	bl	14848 <g_dbus_message_set_body@plt>
   21dc4:	mov	r0, r5
   21dc8:	bl	14c68 <g_dbus_method_invocation_get_connection@plt>
   21dcc:	mov	r1, r4
   21dd0:	mov	r3, #0
   21dd4:	str	r3, [sp]
   21dd8:	mov	r2, r3
   21ddc:	bl	14adc <g_dbus_connection_send_message@plt>
   21de0:	mov	r0, r5
   21de4:	bl	14e90 <g_object_unref@plt>
   21de8:	mov	r0, r4
   21dec:	bl	14e90 <g_object_unref@plt>
   21df0:	b	21eb4 <g_strcmp0@plt+0xcce8>
   21df4:	mov	r1, r8
   21df8:	add	r0, sp, #20
   21dfc:	bl	14494 <g_variant_iter_init@plt>
   21e00:	add	r0, sp, #20
   21e04:	bl	148f0 <g_variant_iter_next_value@plt>
   21e08:	mov	r1, r7
   21e0c:	mov	r4, r0
   21e10:	bl	1492c <g_variant_dup_string@plt>
   21e14:	mov	r8, r0
   21e18:	mov	r0, r4
   21e1c:	bl	14cd4 <g_variant_unref@plt>
   21e20:	add	r0, sp, #20
   21e24:	bl	148f0 <g_variant_iter_next_value@plt>
   21e28:	mov	r4, r0
   21e2c:	bl	146a4 <g_variant_get_boolean@plt>
   21e30:	mov	r0, r4
   21e34:	bl	14cd4 <g_variant_unref@plt>
   21e38:	ldr	r3, [r9, #12]
   21e3c:	ldr	r2, [pc, #888]	; 221bc <g_strcmp0@plt+0xcff0>
   21e40:	ldr	r3, [r3]
   21e44:	mov	r1, #32
   21e48:	mov	r0, r7
   21e4c:	bl	14668 <g_log@plt>
   21e50:	mov	r0, r5
   21e54:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   21e58:	bl	14704 <g_dbus_message_new_method_reply@plt>
   21e5c:	ldr	r1, [pc, #852]	; 221b8 <g_strcmp0@plt+0xcfec>
   21e60:	mov	r4, r0
   21e64:	add	r0, sp, #84	; 0x54
   21e68:	bl	149e0 <g_variant_builder_init@plt>
   21e6c:	add	r0, sp, #84	; 0x54
   21e70:	bl	145a8 <g_variant_builder_end@plt>
   21e74:	mov	r1, r0
   21e78:	mov	r0, r4
   21e7c:	bl	14848 <g_dbus_message_set_body@plt>
   21e80:	mov	r0, r5
   21e84:	bl	14c68 <g_dbus_method_invocation_get_connection@plt>
   21e88:	mov	r1, r4
   21e8c:	mov	r3, r7
   21e90:	mov	r2, r7
   21e94:	str	r7, [sp]
   21e98:	bl	14adc <g_dbus_connection_send_message@plt>
   21e9c:	mov	r0, r5
   21ea0:	bl	14e90 <g_object_unref@plt>
   21ea4:	mov	r0, r4
   21ea8:	bl	14e90 <g_object_unref@plt>
   21eac:	mov	r0, r8
   21eb0:	bl	14bd8 <g_free@plt>
   21eb4:	ldr	r2, [sp, #148]	; 0x94
   21eb8:	ldr	r3, [r6]
   21ebc:	cmp	r2, r3
   21ec0:	bne	22188 <g_strcmp0@plt+0xcfbc>
   21ec4:	add	sp, sp, #156	; 0x9c
   21ec8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   21ecc:	mov	r1, r8
   21ed0:	add	r0, sp, #20
   21ed4:	bl	14494 <g_variant_iter_init@plt>
   21ed8:	add	r0, sp, #20
   21edc:	bl	148f0 <g_variant_iter_next_value@plt>
   21ee0:	mov	r1, r7
   21ee4:	mov	r4, r0
   21ee8:	bl	1492c <g_variant_dup_string@plt>
   21eec:	mov	r8, r0
   21ef0:	mov	r0, r4
   21ef4:	bl	14cd4 <g_variant_unref@plt>
   21ef8:	ldr	r3, [r9, #12]
   21efc:	ldr	r2, [pc, #700]	; 221c0 <g_strcmp0@plt+0xcff4>
   21f00:	b	21e40 <g_strcmp0@plt+0xcc74>
   21f04:	mov	r1, r8
   21f08:	add	r0, sp, #84	; 0x54
   21f0c:	bl	14494 <g_variant_iter_init@plt>
   21f10:	mov	r0, #20
   21f14:	bl	14a34 <g_slice_alloc0@plt>
   21f18:	mov	r4, r0
   21f1c:	add	r0, sp, #84	; 0x54
   21f20:	str	r5, [r4]
   21f24:	bl	148f0 <g_variant_iter_next_value@plt>
   21f28:	mov	r1, r7
   21f2c:	mov	r5, r0
   21f30:	bl	1492c <g_variant_dup_string@plt>
   21f34:	str	r0, [r4, #4]
   21f38:	mov	r0, r5
   21f3c:	bl	14cd4 <g_variant_unref@plt>
   21f40:	add	r0, sp, #84	; 0x54
   21f44:	bl	148f0 <g_variant_iter_next_value@plt>
   21f48:	mov	r5, r0
   21f4c:	bl	14cbc <g_variant_get_uint32@plt>
   21f50:	str	r0, [r4, #8]
   21f54:	mov	r0, r5
   21f58:	bl	14cd4 <g_variant_unref@plt>
   21f5c:	add	r0, sp, #84	; 0x54
   21f60:	bl	148f0 <g_variant_iter_next_value@plt>
   21f64:	mov	r1, r7
   21f68:	mov	r5, r0
   21f6c:	bl	1492c <g_variant_dup_string@plt>
   21f70:	str	r0, [r4, #12]
   21f74:	mov	r0, r5
   21f78:	bl	14cd4 <g_variant_unref@plt>
   21f7c:	add	r0, sp, #84	; 0x54
   21f80:	bl	148f0 <g_variant_iter_next_value@plt>
   21f84:	mov	r5, r0
   21f88:	bl	14cbc <g_variant_get_uint32@plt>
   21f8c:	str	r0, [r4, #16]
   21f90:	mov	r0, r5
   21f94:	bl	14cd4 <g_variant_unref@plt>
   21f98:	ldr	r3, [r4, #16]
   21f9c:	ldr	ip, [pc, #544]	; 221c4 <g_strcmp0@plt+0xcff8>
   21fa0:	str	r4, [sp, #8]
   21fa4:	str	r3, [sp]
   21fa8:	mov	r0, r9
   21fac:	ldrd	r2, [r4, #8]
   21fb0:	ldr	r1, [r4, #4]
   21fb4:	str	ip, [sp, #4]
   21fb8:	bl	21950 <g_strcmp0@plt+0xc784>
   21fbc:	b	21eb4 <g_strcmp0@plt+0xcce8>
   21fc0:	mov	r1, r8
   21fc4:	add	r0, sp, #84	; 0x54
   21fc8:	bl	14494 <g_variant_iter_init@plt>
   21fcc:	mov	r0, #12
   21fd0:	bl	14a34 <g_slice_alloc0@plt>
   21fd4:	mov	r4, r0
   21fd8:	add	r0, sp, #84	; 0x54
   21fdc:	str	r5, [r4]
   21fe0:	bl	148f0 <g_variant_iter_next_value@plt>
   21fe4:	mov	r1, r7
   21fe8:	mov	r5, r0
   21fec:	bl	1492c <g_variant_dup_string@plt>
   21ff0:	str	r0, [r4, #4]
   21ff4:	mov	r0, r5
   21ff8:	bl	14cd4 <g_variant_unref@plt>
   21ffc:	add	r0, sp, #84	; 0x54
   22000:	bl	148f0 <g_variant_iter_next_value@plt>
   22004:	mov	r1, r7
   22008:	mov	r5, r0
   2200c:	bl	1492c <g_variant_dup_string@plt>
   22010:	str	r0, [r4, #8]
   22014:	mov	r0, r5
   22018:	bl	14cd4 <g_variant_unref@plt>
   2201c:	str	r4, [sp]
   22020:	mov	r0, r9
   22024:	ldmib	r4, {r1, r2}
   22028:	ldr	r3, [pc, #408]	; 221c8 <g_strcmp0@plt+0xcffc>
   2202c:	bl	2172c <g_strcmp0@plt+0xc560>
   22030:	b	21eb4 <g_strcmp0@plt+0xcce8>
   22034:	mov	r1, r8
   22038:	add	r0, sp, #84	; 0x54
   2203c:	bl	14494 <g_variant_iter_init@plt>
   22040:	mov	r0, #4
   22044:	bl	14a34 <g_slice_alloc0@plt>
   22048:	ldr	r1, [pc, #380]	; 221cc <g_strcmp0@plt+0xd000>
   2204c:	mov	r3, r0
   22050:	mov	r2, r0
   22054:	str	r5, [r3]
   22058:	mov	r0, r9
   2205c:	bl	21858 <g_strcmp0@plt+0xc68c>
   22060:	b	21eb4 <g_strcmp0@plt+0xcce8>
   22064:	mov	r1, r8
   22068:	add	r0, sp, #84	; 0x54
   2206c:	bl	14494 <g_variant_iter_init@plt>
   22070:	mov	r0, #4
   22074:	bl	14a34 <g_slice_alloc0@plt>
   22078:	ldr	r1, [pc, #336]	; 221d0 <g_strcmp0@plt+0xd004>
   2207c:	mov	r3, r0
   22080:	mov	r2, r0
   22084:	str	r5, [r3]
   22088:	mov	r0, r9
   2208c:	bl	21c08 <g_strcmp0@plt+0xca3c>
   22090:	b	21eb4 <g_strcmp0@plt+0xcce8>
   22094:	mov	r1, r8
   22098:	add	r0, sp, #84	; 0x54
   2209c:	bl	14494 <g_variant_iter_init@plt>
   220a0:	mov	r0, #8
   220a4:	bl	14a34 <g_slice_alloc0@plt>
   220a8:	mov	r4, r0
   220ac:	add	r0, sp, #84	; 0x54
   220b0:	str	r5, [r4]
   220b4:	bl	148f0 <g_variant_iter_next_value@plt>
   220b8:	mov	r5, r0
   220bc:	bl	14cbc <g_variant_get_uint32@plt>
   220c0:	str	r0, [r4, #4]
   220c4:	mov	r0, r5
   220c8:	bl	14cd4 <g_variant_unref@plt>
   220cc:	mov	r3, r4
   220d0:	mov	r0, r9
   220d4:	ldr	r1, [r4, #4]
   220d8:	ldr	r2, [pc, #244]	; 221d4 <g_strcmp0@plt+0xd008>
   220dc:	bl	21ae8 <g_strcmp0@plt+0xc91c>
   220e0:	b	21eb4 <g_strcmp0@plt+0xcce8>
   220e4:	mov	r1, r8
   220e8:	add	r0, sp, #20
   220ec:	bl	14494 <g_variant_iter_init@plt>
   220f0:	mov	r0, r9
   220f4:	bl	21be4 <g_strcmp0@plt+0xca18>
   220f8:	mov	r0, r5
   220fc:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   22100:	bl	14704 <g_dbus_message_new_method_reply@plt>
   22104:	ldr	r1, [pc, #172]	; 221b8 <g_strcmp0@plt+0xcfec>
   22108:	mov	r4, r0
   2210c:	add	r0, sp, #84	; 0x54
   22110:	bl	149e0 <g_variant_builder_init@plt>
   22114:	add	r0, sp, #84	; 0x54
   22118:	bl	145a8 <g_variant_builder_end@plt>
   2211c:	mov	r1, r0
   22120:	mov	r0, r4
   22124:	bl	14848 <g_dbus_message_set_body@plt>
   22128:	mov	r0, r5
   2212c:	bl	14c68 <g_dbus_method_invocation_get_connection@plt>
   22130:	str	r7, [sp]
   22134:	mov	r1, r4
   22138:	mov	r3, r7
   2213c:	b	21dd8 <g_strcmp0@plt+0xcc0c>
   22140:	mov	r0, r5
   22144:	bl	14e90 <g_object_unref@plt>
   22148:	b	21eb4 <g_strcmp0@plt+0xcce8>
   2214c:	mov	r1, r8
   22150:	add	r0, sp, #20
   22154:	bl	14494 <g_variant_iter_init@plt>
   22158:	add	r0, sp, #20
   2215c:	bl	148f0 <g_variant_iter_next_value@plt>
   22160:	mov	r4, r0
   22164:	bl	14cbc <g_variant_get_uint32@plt>
   22168:	mov	r0, r4
   2216c:	bl	14cd4 <g_variant_unref@plt>
   22170:	ldr	r2, [r9, #12]
   22174:	ldr	r3, [pc, #92]	; 221d8 <g_strcmp0@plt+0xd00c>
   22178:	ldr	r0, [r2]
   2217c:	ldr	r1, [r3]
   22180:	bl	150dc <fputs@plt>
   22184:	b	220f8 <g_strcmp0@plt+0xcf2c>
   22188:	bl	14b6c <__stack_chk_fail@plt>
   2218c:	andeq	fp, r4, r8, asr #19
   22190:	andeq	r6, r3, r8, lsl r9
   22194:	andeq	r6, r3, r0, lsr #18
   22198:	andeq	r6, r3, r4, lsr r9
   2219c:	andeq	r6, r3, r4, asr #18
   221a0:	andeq	r6, r3, r8, asr r9
   221a4:	andeq	r6, r3, r0, ror #18
   221a8:	andeq	r6, r3, ip, ror #18
   221ac:	andeq	r6, r3, r8, ror r9
   221b0:	andeq	r6, r3, r4, lsl #19
   221b4:	andeq	r6, r3, ip, lsl #19
   221b8:	andeq	r7, r3, r0, lsl sl
   221bc:	andeq	r6, r3, r4, lsl #17
   221c0:	andeq	r6, r3, r4, ror #16
   221c4:	andeq	r1, r2, r4, lsr r3
   221c8:	strdeq	r1, [r2], -ip
   221cc:	andeq	r1, r2, ip, asr #3
   221d0:	andeq	r1, r2, ip, lsl r4
   221d4:	andeq	r1, r2, r0, lsl #5
   221d8:	andeq	ip, r4, r8, lsr #32
   221dc:	push	{r4, lr}
   221e0:	mov	r0, r1
   221e4:	mov	r1, #0
   221e8:	mov	r4, r2
   221ec:	bl	14e30 <g_task_propagate_pointer@plt>
   221f0:	cmp	r4, #0
   221f4:	ldrne	r3, [r0, #28]
   221f8:	strne	r3, [r4]
   221fc:	pop	{r4, pc}
   22200:	ldr	r2, [r0, #12]
   22204:	ldr	r3, [pc, #8]	; 22214 <g_strcmp0@plt+0xd048>
   22208:	ldr	r0, [r2]
   2220c:	ldr	r1, [r3]
   22210:	b	150dc <fputs@plt>
   22214:	andeq	ip, r4, r8, lsr #32
   22218:	cmp	r1, #0
   2221c:	movne	r3, #0
   22220:	strne	r3, [r1]
   22224:	bx	lr
   22228:	mov	r1, #0
   2222c:	b	143d4 <g_object_new@plt>
   22230:	ldr	r3, [r0, #12]
   22234:	ldr	r0, [r3, #4]
   22238:	bx	lr
   2223c:	ldr	r3, [r0, #12]
   22240:	ldr	r2, [r3, #4]
   22244:	cmp	r1, r2
   22248:	bxeq	lr
   2224c:	ldr	r2, [pc, #8]	; 2225c <g_strcmp0@plt+0xd090>
   22250:	str	r1, [r3, #4]
   22254:	ldr	r1, [r2, #12]
   22258:	b	14b78 <g_object_notify_by_pspec@plt>
   2225c:	strdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   22260:	push	{r4, r5, r6, lr}
   22264:	mcr	15, 0, r0, cr7, cr10, {5}
   22268:	ldr	r4, [pc, #124]	; 222ec <g_strcmp0@plt+0xd120>
   2226c:	ldr	r5, [r4, #16]
   22270:	mcr	15, 0, r0, cr7, cr10, {5}
   22274:	cmp	r5, #0
   22278:	beq	22284 <g_strcmp0@plt+0xd0b8>
   2227c:	ldr	r0, [r4, #16]
   22280:	pop	{r4, r5, r6, pc}
   22284:	add	r0, r4, #16
   22288:	bl	14a28 <g_once_init_enter@plt>
   2228c:	cmp	r0, #0
   22290:	beq	2227c <g_strcmp0@plt+0xd0b0>
   22294:	mov	r3, r5
   22298:	ldr	r2, [pc, #80]	; 222f0 <g_strcmp0@plt+0xd124>
   2229c:	ldr	r1, [pc, #80]	; 222f4 <g_strcmp0@plt+0xd128>
   222a0:	mov	r0, #80	; 0x50
   222a4:	bl	14428 <g_type_register_static@plt>
   222a8:	mov	r5, r0
   222ac:	ldr	r0, [pc, #68]	; 222f8 <g_strcmp0@plt+0xd12c>
   222b0:	bl	14d64 <g_quark_from_static_string@plt>
   222b4:	ldr	r2, [pc, #64]	; 222fc <g_strcmp0@plt+0xd130>
   222b8:	mov	r1, r0
   222bc:	mov	r0, r5
   222c0:	bl	15028 <g_type_set_qdata@plt>
   222c4:	mov	r0, r5
   222c8:	mov	r1, #8
   222cc:	bl	14c08 <g_type_add_instance_private@plt>
   222d0:	mov	r1, r5
   222d4:	mov	r3, r0
   222d8:	mov	r0, r4
   222dc:	str	r3, [r0], #16
   222e0:	bl	14ed8 <g_once_init_leave@plt>
   222e4:	ldr	r0, [r4, #16]
   222e8:	pop	{r4, r5, r6, pc}
   222ec:	strdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   222f0:	andeq	r6, r3, ip, asr #7
   222f4:	andeq	r6, r3, r0, lsr #19
   222f8:	andeq	r6, r3, r4, asr #3
   222fc:	andeq	r0, r2, r8, ror sl
   22300:	push	{r4, lr}
   22304:	bl	22260 <g_strcmp0@plt+0xd094>
   22308:	mov	r1, #0
   2230c:	pop	{r4, lr}
   22310:	b	143d4 <g_object_new@plt>
   22314:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22318:	sub	sp, sp, #28
   2231c:	mov	r5, r0
   22320:	bl	14f8c <g_type_class_peek_parent@plt>
   22324:	ldr	fp, [pc, #360]	; 22494 <g_strcmp0@plt+0xd2c8>
   22328:	mov	r4, #0
   2232c:	mov	r1, fp
   22330:	mov	r8, #1
   22334:	ldr	r7, [pc, #348]	; 22498 <g_strcmp0@plt+0xd2cc>
   22338:	mov	r9, #68	; 0x44
   2233c:	mov	r6, #4
   22340:	ldr	sl, [pc, #340]	; 2249c <g_strcmp0@plt+0xd2d0>
   22344:	str	r0, [fp, #4]
   22348:	mov	r0, r5
   2234c:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   22350:	ldr	r3, [pc, #328]	; 224a0 <g_strcmp0@plt+0xd2d4>
   22354:	ldr	r0, [pc, #328]	; 224a4 <g_strcmp0@plt+0xd2d8>
   22358:	ldr	r1, [pc, #328]	; 224a8 <g_strcmp0@plt+0xd2dc>
   2235c:	str	r3, [r5, #16]
   22360:	mov	r3, #227	; 0xe3
   22364:	str	r0, [r5, #12]
   22368:	str	r1, [r5, #24]
   2236c:	ldr	r2, [pc, #312]	; 224ac <g_strcmp0@plt+0xd2e0>
   22370:	str	r3, [sp, #8]
   22374:	mvn	r3, #-2147483648	; 0x80000000
   22378:	mov	r1, r2
   2237c:	stm	sp, {r3, r4}
   22380:	mov	r0, r2
   22384:	mov	r3, #-2147483648	; 0x80000000
   22388:	bl	14f38 <g_param_spec_int@plt>
   2238c:	mov	r1, r8
   22390:	mov	r3, r0
   22394:	mov	r2, r0
   22398:	mov	r0, r5
   2239c:	str	r3, [fp, #12]
   223a0:	bl	14c98 <g_object_class_install_property@plt>
   223a4:	bl	22260 <g_strcmp0@plt+0xd094>
   223a8:	mov	r3, r4
   223ac:	str	r4, [sp, #4]
   223b0:	str	r4, [sp]
   223b4:	str	r7, [sp, #8]
   223b8:	strd	r8, [sp, #16]
   223bc:	str	r6, [sp, #12]
   223c0:	mov	r2, #2
   223c4:	mov	r5, r0
   223c8:	mov	r1, r0
   223cc:	ldr	r0, [pc, #220]	; 224b0 <g_strcmp0@plt+0xd2e4>
   223d0:	bl	148cc <g_signal_new@plt>
   223d4:	mov	r3, r4
   223d8:	mov	r1, r5
   223dc:	strd	r8, [sp, #16]
   223e0:	str	r6, [sp, #12]
   223e4:	stmib	sp, {r4, r7}
   223e8:	str	r4, [sp]
   223ec:	mov	r2, #2
   223f0:	ldr	r0, [pc, #188]	; 224b4 <g_strcmp0@plt+0xd2e8>
   223f4:	bl	148cc <g_signal_new@plt>
   223f8:	mov	r3, r4
   223fc:	mov	r1, r5
   22400:	strd	r8, [sp, #16]
   22404:	str	r6, [sp, #12]
   22408:	stmib	sp, {r4, r7}
   2240c:	str	r4, [sp]
   22410:	mov	r2, #2
   22414:	ldr	r0, [pc, #156]	; 224b8 <g_strcmp0@plt+0xd2ec>
   22418:	bl	148cc <g_signal_new@plt>
   2241c:	mov	r3, r4
   22420:	mov	r1, r5
   22424:	strd	r8, [sp, #16]
   22428:	str	r6, [sp, #12]
   2242c:	stmib	sp, {r4, r7}
   22430:	str	r4, [sp]
   22434:	mov	r2, #2
   22438:	ldr	r0, [pc, #124]	; 224bc <g_strcmp0@plt+0xd2f0>
   2243c:	bl	148cc <g_signal_new@plt>
   22440:	mov	r3, r4
   22444:	mov	r1, r5
   22448:	str	r4, [sp, #16]
   2244c:	str	r6, [sp, #12]
   22450:	str	r4, [sp, #4]
   22454:	str	r4, [sp]
   22458:	str	sl, [sp, #8]
   2245c:	mov	r2, #2
   22460:	ldr	r0, [pc, #88]	; 224c0 <g_strcmp0@plt+0xd2f4>
   22464:	bl	148cc <g_signal_new@plt>
   22468:	str	r4, [sp, #16]
   2246c:	str	r6, [sp, #12]
   22470:	stmib	sp, {r4, sl}
   22474:	str	r4, [sp]
   22478:	mov	r3, r4
   2247c:	mov	r1, r5
   22480:	mov	r2, #2
   22484:	ldr	r0, [pc, #56]	; 224c4 <g_strcmp0@plt+0xd2f8>
   22488:	bl	148cc <g_signal_new@plt>
   2248c:	add	sp, sp, #28
   22490:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22494:	strdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   22498:	andeq	r4, r1, r4, lsl #11
   2249c:	andeq	r4, r1, r0, asr #29
   224a0:			; <UNDEFINED> instruction: 0x000215bc
   224a4:	andeq	r1, r2, r4, asr #12
   224a8:	andeq	r0, r2, r8, asr #15
   224ac:			; <UNDEFINED> instruction: 0x000369bc
   224b0:	andeq	r6, r3, r8, ror r7
   224b4:	andeq	r6, r3, r8, lsl #15
   224b8:	muleq	r3, r8, r7
   224bc:	andeq	r6, r3, r8, lsr #15
   224c0:			; <UNDEFINED> instruction: 0x000367bc
   224c4:	andeq	r6, r3, ip, asr #15
   224c8:	bx	lr
   224cc:	mov	r0, #0
   224d0:	bx	lr
   224d4:	mov	r0, #0
   224d8:	bx	lr
   224dc:	push	{r4, lr}
   224e0:	mov	r4, r0
   224e4:	ldr	r0, [r0, #24]
   224e8:	cmp	r0, #0
   224ec:	beq	224fc <g_strcmp0@plt+0xd330>
   224f0:	bl	14e90 <g_object_unref@plt>
   224f4:	mov	r3, #0
   224f8:	str	r3, [r4, #24]
   224fc:	mov	r1, r4
   22500:	mov	r0, #40	; 0x28
   22504:	pop	{r4, lr}
   22508:	b	150ac <g_slice_free1@plt>
   2250c:	push	{r4, r5, r6, r7, r8, lr}
   22510:	mov	r6, r0
   22514:	mov	r0, r1
   22518:	mov	r5, r1
   2251c:	mov	r7, r2
   22520:	bl	14cc8 <g_task_get_task_data@plt>
   22524:	ldr	r3, [r0, #16]
   22528:	mov	r4, r0
   2252c:	cmp	r3, #0
   22530:	beq	22544 <g_strcmp0@plt+0xd378>
   22534:	mov	r2, r7
   22538:	mov	r1, r5
   2253c:	mov	r0, r6
   22540:	blx	r3
   22544:	mov	r3, #1
   22548:	str	r3, [r4, #20]
   2254c:	pop	{r4, r5, r6, r7, r8, pc}
   22550:	push	{r4, lr}
   22554:	mov	r4, r0
   22558:	ldr	r0, [r0]
   2255c:	bl	14e90 <g_object_unref@plt>
   22560:	ldr	r0, [r4, #4]
   22564:	bl	14e90 <g_object_unref@plt>
   22568:	ldr	r0, [r4, #8]
   2256c:	bl	14bd8 <g_free@plt>
   22570:	mov	r0, r4
   22574:	pop	{r4, lr}
   22578:	b	14bd8 <g_free@plt>
   2257c:	b	14f8c <g_type_class_peek_parent@plt>
   22580:	push	{r4, r5, r6, r7, r8, lr}
   22584:	mov	r8, r0
   22588:	sub	sp, sp, #16
   2258c:	mov	r0, #12
   22590:	mov	r5, r1
   22594:	mov	r6, r2
   22598:	mov	r7, r3
   2259c:	bl	148c0 <g_malloc@plt>
   225a0:	mov	r4, r0
   225a4:	mov	r0, r8
   225a8:	bl	14404 <g_object_ref@plt>
   225ac:	str	r0, [r4]
   225b0:	mov	r0, r5
   225b4:	bl	14404 <g_object_ref@plt>
   225b8:	str	r0, [r4, #4]
   225bc:	mov	r0, r6
   225c0:	bl	147e8 <g_strdup@plt>
   225c4:	ldr	r3, [pc, #40]	; 225f4 <g_strcmp0@plt+0xd428>
   225c8:	ldr	r2, [pc, #40]	; 225f8 <g_strcmp0@plt+0xd42c>
   225cc:	str	r7, [sp, #8]
   225d0:	str	r2, [sp, #4]
   225d4:	str	r4, [sp]
   225d8:	mov	r1, r6
   225dc:	add	r2, r3, #44	; 0x2c
   225e0:	str	r0, [r4, #8]
   225e4:	mov	r0, r5
   225e8:	bl	143ec <g_dbus_connection_register_object@plt>
   225ec:	add	sp, sp, #16
   225f0:	pop	{r4, r5, r6, r7, r8, pc}
   225f4:	andeq	r6, r3, r4, asr #20
   225f8:	andeq	r2, r2, r0, asr r5
   225fc:	push	{r4, r5, r6, r7, r8, lr}
   22600:	sub	sp, sp, #80	; 0x50
   22604:	ldr	r6, [pc, #180]	; 226c0 <g_strcmp0@plt+0xd4f4>
   22608:	mov	r0, r1
   2260c:	mov	r1, #0
   22610:	ldr	r3, [r6]
   22614:	ldr	r5, [r2]
   22618:	mov	r7, r2
   2261c:	str	r3, [sp, #76]	; 0x4c
   22620:	bl	14e30 <g_task_propagate_pointer@plt>
   22624:	ldr	r8, [r0, #28]
   22628:	mov	r0, r5
   2262c:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   22630:	bl	14704 <g_dbus_message_new_method_reply@plt>
   22634:	ldr	r1, [pc, #136]	; 226c4 <g_strcmp0@plt+0xd4f8>
   22638:	mov	r4, r0
   2263c:	add	r0, sp, #12
   22640:	bl	149e0 <g_variant_builder_init@plt>
   22644:	mov	r0, r8
   22648:	bl	1456c <g_variant_new_boolean@plt>
   2264c:	mov	r1, r0
   22650:	add	r0, sp, #12
   22654:	bl	145f0 <g_variant_builder_add_value@plt>
   22658:	add	r0, sp, #12
   2265c:	bl	145a8 <g_variant_builder_end@plt>
   22660:	mov	r1, r0
   22664:	mov	r0, r4
   22668:	bl	14848 <g_dbus_message_set_body@plt>
   2266c:	mov	r0, r5
   22670:	bl	14c68 <g_dbus_method_invocation_get_connection@plt>
   22674:	mov	r3, #0
   22678:	mov	r2, r3
   2267c:	str	r3, [sp]
   22680:	mov	r1, r4
   22684:	bl	14adc <g_dbus_connection_send_message@plt>
   22688:	mov	r0, r5
   2268c:	bl	14e90 <g_object_unref@plt>
   22690:	mov	r0, r4
   22694:	bl	14e90 <g_object_unref@plt>
   22698:	mov	r1, r7
   2269c:	mov	r0, #4
   226a0:	bl	150ac <g_slice_free1@plt>
   226a4:	ldr	r2, [sp, #76]	; 0x4c
   226a8:	ldr	r3, [r6]
   226ac:	cmp	r2, r3
   226b0:	bne	226bc <g_strcmp0@plt+0xd4f0>
   226b4:	add	sp, sp, #80	; 0x50
   226b8:	pop	{r4, r5, r6, r7, r8, pc}
   226bc:	bl	14b6c <__stack_chk_fail@plt>
   226c0:	andeq	fp, r4, r8, asr #19
   226c4:	andeq	r7, r3, r0, lsl sl
   226c8:	ldr	r3, [r0]
   226cc:	push	{r4, lr}
   226d0:	cmp	r3, #1
   226d4:	mov	r4, r0
   226d8:	beq	22704 <g_strcmp0@plt+0xd538>
   226dc:	bl	204f4 <g_strcmp0@plt+0xb328>
   226e0:	mov	r2, #1
   226e4:	str	r2, [r4]
   226e8:	ldr	r1, [pc, #148]	; 22784 <g_strcmp0@plt+0xd5b8>
   226ec:	mov	r2, r4
   226f0:	str	r0, [r4, #36]	; 0x24
   226f4:	str	r0, [r4, #32]
   226f8:	bl	20060 <g_strcmp0@plt+0xae94>
   226fc:	mov	r0, #0
   22700:	pop	{r4, pc}
   22704:	ldr	r1, [r0, #8]
   22708:	ldr	r0, [r0, #32]
   2270c:	bl	1f714 <g_strcmp0@plt+0xa548>
   22710:	ldr	r3, [r4, #32]
   22714:	cmp	r3, #0
   22718:	str	r0, [r4, #28]
   2271c:	beq	22730 <g_strcmp0@plt+0xd564>
   22720:	mov	r0, r3
   22724:	bl	14e90 <g_object_unref@plt>
   22728:	mov	r3, #0
   2272c:	str	r3, [r4, #32]
   22730:	mov	r2, #0
   22734:	mov	r1, r4
   22738:	ldr	r0, [r4, #12]
   2273c:	bl	1468c <g_task_return_pointer@plt>
   22740:	ldr	r3, [r4]
   22744:	cmp	r3, #0
   22748:	bne	2276c <g_strcmp0@plt+0xd5a0>
   2274c:	ldr	r0, [r4, #12]
   22750:	bl	14e90 <g_object_unref@plt>
   22754:	mov	r0, #0
   22758:	pop	{r4, pc}
   2275c:	ldr	r0, [r4, #12]
   22760:	bl	14bf0 <g_task_get_context@plt>
   22764:	mov	r1, #1
   22768:	bl	14a7c <g_main_context_iteration@plt>
   2276c:	ldr	r3, [r4, #20]
   22770:	cmp	r3, #0
   22774:	beq	2275c <g_strcmp0@plt+0xd590>
   22778:	ldr	r0, [r4, #12]
   2277c:	bl	14e90 <g_object_unref@plt>
   22780:	b	22754 <g_strcmp0@plt+0xd588>
   22784:	andeq	r2, r2, r8, lsl #15
   22788:	mov	r3, #1
   2278c:	strd	r0, [r2, #4]
   22790:	str	r3, [r2, #20]
   22794:	mov	r0, r2
   22798:	b	226c8 <g_strcmp0@plt+0xd4fc>
   2279c:	push	{r4, r5, r6, lr}
   227a0:	mov	r1, #32
   227a4:	ldr	r2, [pc, #188]	; 22868 <g_strcmp0@plt+0xd69c>
   227a8:	mov	r0, #0
   227ac:	bl	14668 <g_log@plt>
   227b0:	ldr	r1, [pc, #180]	; 2286c <g_strcmp0@plt+0xd6a0>
   227b4:	ldr	r3, [pc, #180]	; 22870 <g_strcmp0@plt+0xd6a4>
   227b8:	ldr	r2, [pc, #180]	; 22874 <g_strcmp0@plt+0xd6a8>
   227bc:	ldr	r0, [r1]
   227c0:	ldr	r1, [pc, #176]	; 22878 <g_strcmp0@plt+0xd6ac>
   227c4:	bl	2a300 <g_strcmp0@plt+0x15134>
   227c8:	mov	r4, r0
   227cc:	bl	14bd8 <g_free@plt>
   227d0:	cmp	r4, #0
   227d4:	beq	22854 <g_strcmp0@plt+0xd688>
   227d8:	ldr	r4, [pc, #156]	; 2287c <g_strcmp0@plt+0xd6b0>
   227dc:	ldr	r0, [r4]
   227e0:	cmp	r0, #0
   227e4:	beq	227f0 <g_strcmp0@plt+0xd624>
   227e8:	pop	{r4, r5, r6, lr}
   227ec:	b	29534 <g_strcmp0@plt+0x14368>
   227f0:	bl	296a8 <g_strcmp0@plt+0x144dc>
   227f4:	subs	r5, r0, #0
   227f8:	beq	22830 <g_strcmp0@plt+0xd664>
   227fc:	bl	14404 <g_object_ref@plt>
   22800:	ldr	r3, [r4]
   22804:	cmp	r3, #0
   22808:	mov	r6, r0
   2280c:	beq	2281c <g_strcmp0@plt+0xd650>
   22810:	mov	r0, r3
   22814:	bl	14e90 <g_object_unref@plt>
   22818:	mov	r0, r6
   2281c:	str	r6, [r4]
   22820:	bl	29344 <g_strcmp0@plt+0x14178>
   22824:	mov	r0, r5
   22828:	pop	{r4, r5, r6, lr}
   2282c:	b	14e90 <g_object_unref@plt>
   22830:	ldr	r3, [r4]
   22834:	cmp	r3, #0
   22838:	beq	2284c <g_strcmp0@plt+0xd680>
   2283c:	mov	r0, r3
   22840:	bl	14e90 <g_object_unref@plt>
   22844:	mov	r0, r5
   22848:	str	r5, [r4]
   2284c:	pop	{r4, r5, r6, lr}
   22850:	b	29344 <g_strcmp0@plt+0x14178>
   22854:	mov	r0, r4
   22858:	ldr	r2, [pc, #32]	; 22880 <g_strcmp0@plt+0xd6b4>
   2285c:	mov	r1, #16
   22860:	pop	{r4, r5, r6, lr}
   22864:	b	14668 <g_log@plt>
   22868:	andeq	r7, r3, ip, lsr #8
   2286c:	andeq	ip, r4, r4, asr #32
   22870:	ldrdeq	r4, [r3], -ip
   22874:	andeq	r7, r3, r4, ror #8
   22878:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   2287c:	andeq	ip, r4, ip, asr #32
   22880:	andeq	r7, r3, r8, ror r4
   22884:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22888:	sub	sp, sp, #28
   2288c:	ldr	r5, [pc, #356]	; 229f8 <g_strcmp0@plt+0xd82c>
   22890:	mov	fp, r0
   22894:	mov	r0, #0
   22898:	ldr	ip, [r5]
   2289c:	mov	r8, r1
   228a0:	mov	r9, r2
   228a4:	mov	sl, r3
   228a8:	str	ip, [sp, #20]
   228ac:	ldr	r7, [sp, #64]	; 0x40
   228b0:	ldr	r6, [sp, #68]	; 0x44
   228b4:	bl	14bd8 <g_free@plt>
   228b8:	mov	r0, #0
   228bc:	bl	14bd8 <g_free@plt>
   228c0:	mov	r0, fp
   228c4:	bl	14bcc <g_quark_from_string@plt>
   228c8:	ldr	r4, [pc, #300]	; 229fc <g_strcmp0@plt+0xd830>
   228cc:	mov	fp, r0
   228d0:	ldr	r0, [r4]
   228d4:	cmp	r0, #0
   228d8:	beq	229d4 <g_strcmp0@plt+0xd808>
   228dc:	cmp	fp, r0
   228e0:	beq	22988 <g_strcmp0@plt+0xd7bc>
   228e4:	ldr	r0, [r4, #4]
   228e8:	cmp	r0, #0
   228ec:	beq	229e4 <g_strcmp0@plt+0xd818>
   228f0:	cmp	fp, r0
   228f4:	beq	22988 <g_strcmp0@plt+0xd7bc>
   228f8:	ldr	r0, [r4, #8]
   228fc:	cmp	r0, #0
   22900:	beq	22934 <g_strcmp0@plt+0xd768>
   22904:	cmp	fp, r0
   22908:	movne	r4, #0
   2290c:	movne	r8, r4
   22910:	beq	22950 <g_strcmp0@plt+0xd784>
   22914:	str	r8, [r7]
   22918:	ldr	r2, [sp, #20]
   2291c:	str	r4, [r6]
   22920:	ldr	r3, [r5]
   22924:	cmp	r2, r3
   22928:	bne	229f4 <g_strcmp0@plt+0xd828>
   2292c:	add	sp, sp, #28
   22930:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22934:	ldr	r0, [pc, #196]	; 22a00 <g_strcmp0@plt+0xd834>
   22938:	bl	14d64 <g_quark_from_static_string@plt>
   2293c:	cmp	fp, r0
   22940:	str	r0, [r4, #8]
   22944:	movne	r4, #0
   22948:	movne	r8, r4
   2294c:	bne	22914 <g_strcmp0@plt+0xd748>
   22950:	ldr	r3, [pc, #172]	; 22a04 <g_strcmp0@plt+0xd838>
   22954:	mov	r1, r8
   22958:	mov	r2, r9
   2295c:	ldr	r0, [r3]
   22960:	bl	2b040 <g_strcmp0@plt+0x15e74>
   22964:	mov	r8, r0
   22968:	mov	r0, #0
   2296c:	bl	14bd8 <g_free@plt>
   22970:	ldr	r0, [pc, #144]	; 22a08 <g_strcmp0@plt+0xd83c>
   22974:	bl	147e8 <g_strdup@plt>
   22978:	mov	r4, r0
   2297c:	mov	r0, #0
   22980:	bl	14bd8 <g_free@plt>
   22984:	b	22914 <g_strcmp0@plt+0xd748>
   22988:	ldr	r0, [pc, #116]	; 22a04 <g_strcmp0@plt+0xd838>
   2298c:	add	lr, sp, #16
   22990:	add	ip, sp, #12
   22994:	ldr	r0, [r0]
   22998:	mov	r4, #0
   2299c:	mov	r1, r8
   229a0:	mov	r3, sl
   229a4:	mov	r2, r9
   229a8:	stm	sp, {ip, lr}
   229ac:	str	r4, [sp, #12]
   229b0:	str	r4, [sp, #16]
   229b4:	bl	2a1fc <g_strcmp0@plt+0x15030>
   229b8:	mov	r0, r4
   229bc:	bl	14bd8 <g_free@plt>
   229c0:	mov	r0, r4
   229c4:	ldr	r8, [sp, #12]
   229c8:	bl	14bd8 <g_free@plt>
   229cc:	ldr	r4, [sp, #16]
   229d0:	b	22914 <g_strcmp0@plt+0xd748>
   229d4:	ldr	r0, [pc, #48]	; 22a0c <g_strcmp0@plt+0xd840>
   229d8:	bl	14d64 <g_quark_from_static_string@plt>
   229dc:	str	r0, [r4]
   229e0:	b	228dc <g_strcmp0@plt+0xd710>
   229e4:	ldr	r0, [pc, #36]	; 22a10 <g_strcmp0@plt+0xd844>
   229e8:	bl	14d64 <g_quark_from_static_string@plt>
   229ec:	str	r0, [r4, #4]
   229f0:	b	228f0 <g_strcmp0@plt+0xd724>
   229f4:	bl	14b6c <__stack_chk_fail@plt>
   229f8:	andeq	fp, r4, r8, asr #19
   229fc:	andeq	ip, r4, r0, lsl r3
   22a00:			; <UNDEFINED> instruction: 0x000374bc
   22a04:	andeq	ip, r4, r4, asr #32
   22a08:	andeq	r4, r3, r4, asr r8
   22a0c:			; <UNDEFINED> instruction: 0x000374b0
   22a10:			; <UNDEFINED> instruction: 0x000374b4
   22a14:	push	{r4, r5, r6, r7, lr}
   22a18:	sub	sp, sp, #100	; 0x64
   22a1c:	ldr	r5, [pc, #416]	; 22bc4 <g_strcmp0@plt+0xd9f8>
   22a20:	add	ip, sp, #12
   22a24:	str	ip, [sp, #4]
   22a28:	ldr	lr, [r5]
   22a2c:	add	ip, sp, #8
   22a30:	mov	r3, r2
   22a34:	str	ip, [sp]
   22a38:	mov	r2, r1
   22a3c:	mov	ip, #0
   22a40:	mov	r1, r0
   22a44:	ldr	r0, [pc, #380]	; 22bc8 <g_strcmp0@plt+0xd9fc>
   22a48:	str	lr, [sp, #92]	; 0x5c
   22a4c:	str	ip, [sp, #20]
   22a50:	str	ip, [sp, #16]
   22a54:	str	ip, [sp, #24]
   22a58:	str	ip, [sp, #28]
   22a5c:	str	ip, [sp, #32]
   22a60:	str	ip, [sp, #36]	; 0x24
   22a64:	str	ip, [sp, #8]
   22a68:	str	ip, [sp, #12]
   22a6c:	str	ip, [sp, #40]	; 0x28
   22a70:	str	ip, [sp, #44]	; 0x2c
   22a74:	str	ip, [sp, #48]	; 0x30
   22a78:	str	ip, [sp, #52]	; 0x34
   22a7c:	str	ip, [sp, #56]	; 0x38
   22a80:	str	ip, [sp, #60]	; 0x3c
   22a84:	bl	22884 <g_strcmp0@plt+0xd6b8>
   22a88:	add	r0, sp, #16
   22a8c:	bl	14af4 <g_type_check_value@plt>
   22a90:	cmp	r0, #0
   22a94:	bne	22ba8 <g_strcmp0@plt+0xd9dc>
   22a98:	mov	r1, #64	; 0x40
   22a9c:	add	r0, sp, #40	; 0x28
   22aa0:	bl	1501c <g_value_init@plt>
   22aa4:	ldr	r1, [sp, #8]
   22aa8:	add	r0, sp, #40	; 0x28
   22aac:	bl	14434 <g_value_take_string@plt>
   22ab0:	add	ip, sp, #40	; 0x28
   22ab4:	add	lr, sp, #16
   22ab8:	ldm	ip!, {r0, r1, r2, r3}
   22abc:	ldr	r6, [pc, #264]	; 22bcc <g_strcmp0@plt+0xda00>
   22ac0:	stmia	lr!, {r0, r1, r2, r3}
   22ac4:	ldm	ip, {r0, r1}
   22ac8:	stm	lr, {r0, r1}
   22acc:	mov	r0, #0
   22ad0:	bl	14bd8 <g_free@plt>
   22ad4:	ldr	r4, [sp, #12]
   22ad8:	cmp	r4, #0
   22adc:	beq	22b84 <g_strcmp0@plt+0xd9b8>
   22ae0:	mov	r0, r4
   22ae4:	bl	14bcc <g_quark_from_string@plt>
   22ae8:	mov	r7, r0
   22aec:	ldr	r0, [r6, #12]
   22af0:	cmp	r0, #0
   22af4:	beq	22b90 <g_strcmp0@plt+0xd9c4>
   22af8:	cmp	r0, r7
   22afc:	beq	22b48 <g_strcmp0@plt+0xd97c>
   22b00:	ldr	r0, [pc, #200]	; 22bd0 <g_strcmp0@plt+0xda04>
   22b04:	bl	147e8 <g_strdup@plt>
   22b08:	mov	r6, r0
   22b0c:	mov	r0, #0
   22b10:	bl	14bd8 <g_free@plt>
   22b14:	mov	r0, r4
   22b18:	bl	14bd8 <g_free@plt>
   22b1c:	add	r0, sp, #16
   22b20:	bl	14af4 <g_type_check_value@plt>
   22b24:	cmp	r0, #0
   22b28:	bne	22bb4 <g_strcmp0@plt+0xd9e8>
   22b2c:	ldr	r2, [sp, #92]	; 0x5c
   22b30:	ldr	r3, [r5]
   22b34:	mov	r0, r6
   22b38:	cmp	r2, r3
   22b3c:	bne	22bc0 <g_strcmp0@plt+0xd9f4>
   22b40:	add	sp, sp, #100	; 0x64
   22b44:	pop	{r4, r5, r6, r7, pc}
   22b48:	add	lr, sp, #16
   22b4c:	add	ip, sp, #64	; 0x40
   22b50:	ldm	lr!, {r0, r1, r2, r3}
   22b54:	stmia	ip!, {r0, r1, r2, r3}
   22b58:	ldm	lr, {r0, r1}
   22b5c:	stm	ip, {r0, r1}
   22b60:	add	r0, sp, #64	; 0x40
   22b64:	bl	144a0 <g_value_get_string@plt>
   22b68:	bl	147e8 <g_strdup@plt>
   22b6c:	mov	r6, r0
   22b70:	mov	r0, #0
   22b74:	bl	14bd8 <g_free@plt>
   22b78:	cmp	r6, #0
   22b7c:	bne	22b14 <g_strcmp0@plt+0xd948>
   22b80:	b	22b00 <g_strcmp0@plt+0xd934>
   22b84:	ldr	r7, [r6, #12]
   22b88:	cmp	r7, #0
   22b8c:	bne	22b00 <g_strcmp0@plt+0xd934>
   22b90:	ldr	r0, [pc, #60]	; 22bd4 <g_strcmp0@plt+0xda08>
   22b94:	bl	14d64 <g_quark_from_static_string@plt>
   22b98:	cmp	r0, r7
   22b9c:	str	r0, [r6, #12]
   22ba0:	bne	22b00 <g_strcmp0@plt+0xd934>
   22ba4:	b	22b48 <g_strcmp0@plt+0xd97c>
   22ba8:	add	r0, sp, #16
   22bac:	bl	150b8 <g_value_unset@plt>
   22bb0:	b	22a98 <g_strcmp0@plt+0xd8cc>
   22bb4:	add	r0, sp, #16
   22bb8:	bl	150b8 <g_value_unset@plt>
   22bbc:	b	22b2c <g_strcmp0@plt+0xd960>
   22bc0:	bl	14b6c <__stack_chk_fail@plt>
   22bc4:	andeq	fp, r4, r8, asr #19
   22bc8:			; <UNDEFINED> instruction: 0x000374b0
   22bcc:	andeq	ip, r4, r0, lsl r3
   22bd0:	andeq	sl, r3, ip, ror #18
   22bd4:	andeq	r4, r3, r4, asr r8
   22bd8:	push	{r4, r5, r6, lr}
   22bdc:	subs	r6, r0, #0
   22be0:	beq	22c10 <g_strcmp0@plt+0xda44>
   22be4:	cmp	r1, #0
   22be8:	ble	22c10 <g_strcmp0@plt+0xda44>
   22bec:	add	r1, r6, r1, lsl #2
   22bf0:	sub	r5, r1, #4
   22bf4:	sub	r4, r6, #4
   22bf8:	ldr	r3, [r4, #4]!
   22bfc:	subs	r0, r3, #0
   22c00:	beq	22c08 <g_strcmp0@plt+0xda3c>
   22c04:	bl	14bd8 <g_free@plt>
   22c08:	cmp	r4, r5
   22c0c:	bne	22bf8 <g_strcmp0@plt+0xda2c>
   22c10:	mov	r0, r6
   22c14:	pop	{r4, r5, r6, lr}
   22c18:	b	14bd8 <g_free@plt>
   22c1c:	push	{r4, r5, r6, r7, r8, lr}
   22c20:	sub	sp, sp, #96	; 0x60
   22c24:	ldr	r5, [pc, #508]	; 22e28 <g_strcmp0@plt+0xdc5c>
   22c28:	add	r3, sp, #12
   22c2c:	mov	ip, #0
   22c30:	ldr	lr, [r5]
   22c34:	str	r3, [sp, #4]
   22c38:	add	r3, sp, #8
   22c3c:	str	r3, [sp]
   22c40:	mov	r6, r2
   22c44:	mov	r3, ip
   22c48:	mov	r2, r1
   22c4c:	mov	r1, r0
   22c50:	ldr	r0, [pc, #468]	; 22e2c <g_strcmp0@plt+0xdc60>
   22c54:	str	lr, [sp, #92]	; 0x5c
   22c58:	str	ip, [sp, #20]
   22c5c:	str	ip, [sp, #16]
   22c60:	str	ip, [sp, #24]
   22c64:	str	ip, [sp, #28]
   22c68:	str	ip, [sp, #32]
   22c6c:	str	ip, [sp, #36]	; 0x24
   22c70:	str	ip, [sp, #8]
   22c74:	str	ip, [sp, #12]
   22c78:	str	ip, [sp, #40]	; 0x28
   22c7c:	str	ip, [sp, #44]	; 0x2c
   22c80:	str	ip, [sp, #48]	; 0x30
   22c84:	str	ip, [sp, #52]	; 0x34
   22c88:	str	ip, [sp, #56]	; 0x38
   22c8c:	str	ip, [sp, #60]	; 0x3c
   22c90:	bl	22884 <g_strcmp0@plt+0xd6b8>
   22c94:	add	r0, sp, #16
   22c98:	bl	14af4 <g_type_check_value@plt>
   22c9c:	cmp	r0, #0
   22ca0:	bne	22e0c <g_strcmp0@plt+0xdc40>
   22ca4:	mov	r1, #64	; 0x40
   22ca8:	add	r0, sp, #40	; 0x28
   22cac:	bl	1501c <g_value_init@plt>
   22cb0:	ldr	r1, [sp, #8]
   22cb4:	add	r0, sp, #40	; 0x28
   22cb8:	bl	14434 <g_value_take_string@plt>
   22cbc:	add	ip, sp, #40	; 0x28
   22cc0:	add	lr, sp, #16
   22cc4:	ldm	ip!, {r0, r1, r2, r3}
   22cc8:	ldr	r4, [pc, #352]	; 22e30 <g_strcmp0@plt+0xdc64>
   22ccc:	stmia	lr!, {r0, r1, r2, r3}
   22cd0:	ldm	ip, {r0, r1}
   22cd4:	stm	lr, {r0, r1}
   22cd8:	mov	r0, #0
   22cdc:	bl	14bd8 <g_free@plt>
   22ce0:	ldr	r8, [sp, #12]
   22ce4:	cmp	r8, #0
   22ce8:	beq	22de8 <g_strcmp0@plt+0xdc1c>
   22cec:	mov	r0, r8
   22cf0:	bl	14bcc <g_quark_from_string@plt>
   22cf4:	mov	r7, r0
   22cf8:	ldr	r0, [r4, #16]
   22cfc:	cmp	r0, #0
   22d00:	beq	22df4 <g_strcmp0@plt+0xdc28>
   22d04:	cmp	r0, r7
   22d08:	beq	22db4 <g_strcmp0@plt+0xdbe8>
   22d0c:	mov	r7, #0
   22d10:	mov	r3, r7
   22d14:	ldr	r2, [pc, #280]	; 22e34 <g_strcmp0@plt+0xdc68>
   22d18:	mov	r1, #32
   22d1c:	mov	r0, #0
   22d20:	bl	14668 <g_log@plt>
   22d24:	mov	r2, #0
   22d28:	ldr	r1, [pc, #264]	; 22e38 <g_strcmp0@plt+0xdc6c>
   22d2c:	mov	r0, r7
   22d30:	bl	14530 <g_strsplit_set@plt>
   22d34:	mov	r1, #0
   22d38:	mov	r4, r0
   22d3c:	mov	r0, r1
   22d40:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   22d44:	cmp	r4, #0
   22d48:	moveq	r3, r4
   22d4c:	beq	22d74 <g_strcmp0@plt+0xdba8>
   22d50:	ldr	r3, [r4]
   22d54:	cmp	r3, #0
   22d58:	beq	22d74 <g_strcmp0@plt+0xdba8>
   22d5c:	mov	r2, r4
   22d60:	mov	r3, #0
   22d64:	ldr	r1, [r2, #4]!
   22d68:	add	r3, r3, #1
   22d6c:	cmp	r1, #0
   22d70:	bne	22d64 <g_strcmp0@plt+0xdb98>
   22d74:	str	r3, [r6]
   22d78:	mov	r0, r8
   22d7c:	bl	14bd8 <g_free@plt>
   22d80:	add	r0, sp, #16
   22d84:	bl	14af4 <g_type_check_value@plt>
   22d88:	cmp	r0, #0
   22d8c:	bne	22e18 <g_strcmp0@plt+0xdc4c>
   22d90:	mov	r0, r7
   22d94:	bl	14bd8 <g_free@plt>
   22d98:	ldr	r2, [sp, #92]	; 0x5c
   22d9c:	ldr	r3, [r5]
   22da0:	mov	r0, r4
   22da4:	cmp	r2, r3
   22da8:	bne	22e24 <g_strcmp0@plt+0xdc58>
   22dac:	add	sp, sp, #96	; 0x60
   22db0:	pop	{r4, r5, r6, r7, r8, pc}
   22db4:	add	lr, sp, #16
   22db8:	add	ip, sp, #64	; 0x40
   22dbc:	ldm	lr!, {r0, r1, r2, r3}
   22dc0:	stmia	ip!, {r0, r1, r2, r3}
   22dc4:	ldm	lr, {r0, r1}
   22dc8:	stm	ip, {r0, r1}
   22dcc:	add	r0, sp, #64	; 0x40
   22dd0:	bl	144a0 <g_value_get_string@plt>
   22dd4:	bl	147e8 <g_strdup@plt>
   22dd8:	mov	r7, r0
   22ddc:	mov	r0, #0
   22de0:	bl	14bd8 <g_free@plt>
   22de4:	b	22d10 <g_strcmp0@plt+0xdb44>
   22de8:	ldr	r7, [r4, #16]
   22dec:	cmp	r7, #0
   22df0:	bne	22d0c <g_strcmp0@plt+0xdb40>
   22df4:	ldr	r0, [pc, #64]	; 22e3c <g_strcmp0@plt+0xdc70>
   22df8:	bl	14d64 <g_quark_from_static_string@plt>
   22dfc:	cmp	r0, r7
   22e00:	str	r0, [r4, #16]
   22e04:	bne	22d0c <g_strcmp0@plt+0xdb40>
   22e08:	b	22db4 <g_strcmp0@plt+0xdbe8>
   22e0c:	add	r0, sp, #16
   22e10:	bl	150b8 <g_value_unset@plt>
   22e14:	b	22ca4 <g_strcmp0@plt+0xdad8>
   22e18:	add	r0, sp, #16
   22e1c:	bl	150b8 <g_value_unset@plt>
   22e20:	b	22d90 <g_strcmp0@plt+0xdbc4>
   22e24:	bl	14b6c <__stack_chk_fail@plt>
   22e28:	andeq	fp, r4, r8, asr #19
   22e2c:			; <UNDEFINED> instruction: 0x000374bc
   22e30:	andeq	ip, r4, r0, lsl r3
   22e34:	andeq	r7, r3, r4, asr #9
   22e38:	strdeq	r7, [r3], -ip
   22e3c:	andeq	r4, r3, r4, asr r8
   22e40:	ldr	r3, [pc, #128]	; 22ec8 <g_strcmp0@plt+0xdcfc>
   22e44:	push	{r4, r5, r6, lr}
   22e48:	mov	r6, r1
   22e4c:	mov	r1, r0
   22e50:	ldr	r0, [r3]
   22e54:	bl	2af28 <g_strcmp0@plt+0x15d5c>
   22e58:	mov	r5, r0
   22e5c:	mov	r0, #0
   22e60:	bl	14bd8 <g_free@plt>
   22e64:	mov	r2, #0
   22e68:	ldr	r1, [pc, #92]	; 22ecc <g_strcmp0@plt+0xdd00>
   22e6c:	mov	r0, r5
   22e70:	bl	14530 <g_strsplit_set@plt>
   22e74:	mov	r1, #0
   22e78:	mov	r4, r0
   22e7c:	mov	r0, r1
   22e80:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   22e84:	cmp	r4, #0
   22e88:	moveq	r3, r4
   22e8c:	beq	22eb4 <g_strcmp0@plt+0xdce8>
   22e90:	ldr	r3, [r4]
   22e94:	cmp	r3, #0
   22e98:	beq	22eb4 <g_strcmp0@plt+0xdce8>
   22e9c:	mov	r2, r4
   22ea0:	mov	r3, #0
   22ea4:	ldr	r1, [r2, #4]!
   22ea8:	add	r3, r3, #1
   22eac:	cmp	r1, #0
   22eb0:	bne	22ea4 <g_strcmp0@plt+0xdcd8>
   22eb4:	mov	r0, r5
   22eb8:	str	r3, [r6]
   22ebc:	bl	14bd8 <g_free@plt>
   22ec0:	mov	r0, r4
   22ec4:	pop	{r4, r5, r6, pc}
   22ec8:	andeq	ip, r4, r4, asr #32
   22ecc:	strdeq	r7, [r3], -ip
   22ed0:	push	{r4, lr}
   22ed4:	bl	204f4 <g_strcmp0@plt+0xb328>
   22ed8:	mov	r4, r0
   22edc:	bl	1f9e8 <g_strcmp0@plt+0xa81c>
   22ee0:	cmp	r4, #0
   22ee4:	popeq	{r4, pc}
   22ee8:	mov	r0, r4
   22eec:	pop	{r4, lr}
   22ef0:	b	14e90 <g_object_unref@plt>
   22ef4:	push	{r4, r5, r6, lr}
   22ef8:	sub	sp, sp, #144	; 0x90
   22efc:	ldr	r6, [pc, #148]	; 22f98 <g_strcmp0@plt+0xddcc>
   22f00:	mov	r4, r0
   22f04:	add	r0, sp, #12
   22f08:	ldr	r3, [r6]
   22f0c:	mov	r5, r2
   22f10:	str	r3, [sp, #140]	; 0x8c
   22f14:	bl	14494 <g_variant_iter_init@plt>
   22f18:	mov	r0, r4
   22f1c:	bl	22ed0 <g_strcmp0@plt+0xdd04>
   22f20:	mov	r0, r5
   22f24:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   22f28:	bl	14704 <g_dbus_message_new_method_reply@plt>
   22f2c:	ldr	r1, [pc, #104]	; 22f9c <g_strcmp0@plt+0xddd0>
   22f30:	mov	r4, r0
   22f34:	add	r0, sp, #76	; 0x4c
   22f38:	bl	149e0 <g_variant_builder_init@plt>
   22f3c:	add	r0, sp, #76	; 0x4c
   22f40:	bl	145a8 <g_variant_builder_end@plt>
   22f44:	mov	r1, r0
   22f48:	mov	r0, r4
   22f4c:	bl	14848 <g_dbus_message_set_body@plt>
   22f50:	mov	r0, r5
   22f54:	bl	14c68 <g_dbus_method_invocation_get_connection@plt>
   22f58:	mov	r3, #0
   22f5c:	mov	r2, r3
   22f60:	str	r3, [sp]
   22f64:	mov	r1, r4
   22f68:	bl	14adc <g_dbus_connection_send_message@plt>
   22f6c:	mov	r0, r5
   22f70:	bl	14e90 <g_object_unref@plt>
   22f74:	mov	r0, r4
   22f78:	bl	14e90 <g_object_unref@plt>
   22f7c:	ldr	r2, [sp, #140]	; 0x8c
   22f80:	ldr	r3, [r6]
   22f84:	cmp	r2, r3
   22f88:	bne	22f94 <g_strcmp0@plt+0xddc8>
   22f8c:	add	sp, sp, #144	; 0x90
   22f90:	pop	{r4, r5, r6, pc}
   22f94:	bl	14b6c <__stack_chk_fail@plt>
   22f98:	andeq	fp, r4, r8, asr #19
   22f9c:	andeq	r7, r3, r0, lsl sl
   22fa0:	push	{r4, r5, r6, r7, r8, lr}
   22fa4:	mov	r5, r0
   22fa8:	mov	r0, #40	; 0x28
   22fac:	mov	r6, r1
   22fb0:	mov	r7, r2
   22fb4:	bl	14a34 <g_slice_alloc0@plt>
   22fb8:	mov	r3, r7
   22fbc:	ldr	r2, [pc, #80]	; 23014 <g_strcmp0@plt+0xde48>
   22fc0:	mov	r1, #0
   22fc4:	mov	r4, r0
   22fc8:	mov	r0, r5
   22fcc:	str	r6, [r4, #16]
   22fd0:	bl	1504c <g_task_new@plt>
   22fd4:	cmp	r6, #0
   22fd8:	moveq	r3, #1
   22fdc:	ldr	r2, [pc, #52]	; 23018 <g_strcmp0@plt+0xde4c>
   22fe0:	mov	r1, r4
   22fe4:	streq	r3, [r4, #20]
   22fe8:	str	r0, [r4, #12]
   22fec:	bl	14c74 <g_task_set_task_data@plt>
   22ff0:	cmp	r5, #0
   22ff4:	beq	23004 <g_strcmp0@plt+0xde38>
   22ff8:	mov	r0, r5
   22ffc:	bl	14404 <g_object_ref@plt>
   23000:	mov	r5, r0
   23004:	mov	r0, r4
   23008:	str	r5, [r4, #24]
   2300c:	pop	{r4, r5, r6, r7, r8, lr}
   23010:	b	226c8 <g_strcmp0@plt+0xd4fc>
   23014:	andeq	r2, r2, ip, lsl #10
   23018:	ldrdeq	r2, [r2], -ip
   2301c:	push	{r4, lr}
   23020:	mov	r0, r1
   23024:	mov	r1, #0
   23028:	mov	r4, r2
   2302c:	bl	14e30 <g_task_propagate_pointer@plt>
   23030:	cmp	r4, #0
   23034:	ldrne	r3, [r0, #28]
   23038:	strne	r3, [r4]
   2303c:	pop	{r4, pc}
   23040:	b	22ed0 <g_strcmp0@plt+0xdd04>
   23044:	push	{r4, lr}
   23048:	bl	204f4 <g_strcmp0@plt+0xb328>
   2304c:	mov	r4, r0
   23050:	bl	1f8b8 <g_strcmp0@plt+0xa6ec>
   23054:	cmp	r4, #0
   23058:	popeq	{r4, pc}
   2305c:	mov	r0, r4
   23060:	pop	{r4, lr}
   23064:	b	14e90 <g_object_unref@plt>
   23068:	push	{r4, r5, r6, lr}
   2306c:	sub	sp, sp, #144	; 0x90
   23070:	ldr	r6, [pc, #148]	; 2310c <g_strcmp0@plt+0xdf40>
   23074:	mov	r4, r0
   23078:	add	r0, sp, #12
   2307c:	ldr	r3, [r6]
   23080:	mov	r5, r2
   23084:	str	r3, [sp, #140]	; 0x8c
   23088:	bl	14494 <g_variant_iter_init@plt>
   2308c:	mov	r0, r4
   23090:	bl	23044 <g_strcmp0@plt+0xde78>
   23094:	mov	r0, r5
   23098:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   2309c:	bl	14704 <g_dbus_message_new_method_reply@plt>
   230a0:	ldr	r1, [pc, #104]	; 23110 <g_strcmp0@plt+0xdf44>
   230a4:	mov	r4, r0
   230a8:	add	r0, sp, #76	; 0x4c
   230ac:	bl	149e0 <g_variant_builder_init@plt>
   230b0:	add	r0, sp, #76	; 0x4c
   230b4:	bl	145a8 <g_variant_builder_end@plt>
   230b8:	mov	r1, r0
   230bc:	mov	r0, r4
   230c0:	bl	14848 <g_dbus_message_set_body@plt>
   230c4:	mov	r0, r5
   230c8:	bl	14c68 <g_dbus_method_invocation_get_connection@plt>
   230cc:	mov	r3, #0
   230d0:	mov	r2, r3
   230d4:	str	r3, [sp]
   230d8:	mov	r1, r4
   230dc:	bl	14adc <g_dbus_connection_send_message@plt>
   230e0:	mov	r0, r5
   230e4:	bl	14e90 <g_object_unref@plt>
   230e8:	mov	r0, r4
   230ec:	bl	14e90 <g_object_unref@plt>
   230f0:	ldr	r2, [sp, #140]	; 0x8c
   230f4:	ldr	r3, [r6]
   230f8:	cmp	r2, r3
   230fc:	bne	23108 <g_strcmp0@plt+0xdf3c>
   23100:	add	sp, sp, #144	; 0x90
   23104:	pop	{r4, r5, r6, pc}
   23108:	bl	14b6c <__stack_chk_fail@plt>
   2310c:	andeq	fp, r4, r8, asr #19
   23110:	andeq	r7, r3, r0, lsl sl
   23114:	b	23044 <g_strcmp0@plt+0xde78>
   23118:	push	{r4, lr}
   2311c:	mov	r1, #32
   23120:	ldr	r2, [pc, #12]	; 23134 <g_strcmp0@plt+0xdf68>
   23124:	mov	r0, #0
   23128:	bl	14668 <g_log@plt>
   2312c:	pop	{r4, lr}
   23130:	b	2279c <g_strcmp0@plt+0xd5d0>
   23134:	andeq	r7, r3, r0, lsl #10
   23138:	push	{r4, r5, r6, r7, r8, lr}
   2313c:	sub	sp, sp, #8
   23140:	ldr	r4, [pc, #116]	; 231bc <g_strcmp0@plt+0xdff0>
   23144:	mov	r5, #0
   23148:	mov	r6, r1
   2314c:	ldr	r3, [r4]
   23150:	mov	r1, sp
   23154:	ldr	r0, [pc, #100]	; 231c0 <g_strcmp0@plt+0xdff4>
   23158:	mov	r7, r2
   2315c:	str	r3, [sp, #4]
   23160:	str	r5, [sp]
   23164:	bl	22e40 <g_strcmp0@plt+0xdc74>
   23168:	mov	r1, r5
   2316c:	mov	r8, r0
   23170:	mov	r0, r5
   23174:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   23178:	cmp	r6, r5
   2317c:	strne	r8, [r6]
   23180:	ldr	r5, [sp]
   23184:	beq	231a8 <g_strcmp0@plt+0xdfdc>
   23188:	ldr	r2, [sp, #4]
   2318c:	ldr	r3, [r4]
   23190:	cmp	r7, #0
   23194:	strne	r5, [r7]
   23198:	cmp	r2, r3
   2319c:	bne	231b8 <g_strcmp0@plt+0xdfec>
   231a0:	add	sp, sp, #8
   231a4:	pop	{r4, r5, r6, r7, r8, pc}
   231a8:	mov	r0, r8
   231ac:	mov	r1, r5
   231b0:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   231b4:	b	23188 <g_strcmp0@plt+0xdfbc>
   231b8:	bl	14b6c <__stack_chk_fail@plt>
   231bc:	andeq	fp, r4, r8, asr #19
   231c0:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   231c4:	push	{r4, r5, r6, r7, r8, lr}
   231c8:	sub	sp, sp, #8
   231cc:	ldr	r4, [pc, #116]	; 23248 <g_strcmp0@plt+0xe07c>
   231d0:	mov	r5, #0
   231d4:	mov	r6, r2
   231d8:	ldr	ip, [r4]
   231dc:	mov	r2, sp
   231e0:	ldr	r0, [pc, #100]	; 2324c <g_strcmp0@plt+0xe080>
   231e4:	mov	r7, r3
   231e8:	str	ip, [sp, #4]
   231ec:	str	r5, [sp]
   231f0:	bl	22c1c <g_strcmp0@plt+0xda50>
   231f4:	mov	r1, r5
   231f8:	mov	r8, r0
   231fc:	mov	r0, r5
   23200:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   23204:	cmp	r6, r5
   23208:	strne	r8, [r6]
   2320c:	ldr	r5, [sp]
   23210:	beq	23234 <g_strcmp0@plt+0xe068>
   23214:	ldr	r2, [sp, #4]
   23218:	ldr	r3, [r4]
   2321c:	cmp	r7, #0
   23220:	strne	r5, [r7]
   23224:	cmp	r2, r3
   23228:	bne	23244 <g_strcmp0@plt+0xe078>
   2322c:	add	sp, sp, #8
   23230:	pop	{r4, r5, r6, r7, r8, pc}
   23234:	mov	r0, r8
   23238:	mov	r1, r5
   2323c:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   23240:	b	23214 <g_strcmp0@plt+0xe048>
   23244:	bl	14b6c <__stack_chk_fail@plt>
   23248:	andeq	fp, r4, r8, asr #19
   2324c:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   23250:	push	{r4, r5, r6, lr}
   23254:	mov	r4, r3
   23258:	ldr	r0, [pc, #40]	; 23288 <g_strcmp0@plt+0xe0bc>
   2325c:	bl	22a14 <g_strcmp0@plt+0xd848>
   23260:	mov	r5, r0
   23264:	mov	r0, #0
   23268:	bl	14bd8 <g_free@plt>
   2326c:	cmp	r4, #0
   23270:	beq	2327c <g_strcmp0@plt+0xe0b0>
   23274:	str	r5, [r4]
   23278:	pop	{r4, r5, r6, pc}
   2327c:	mov	r0, r5
   23280:	pop	{r4, r5, r6, lr}
   23284:	b	14bd8 <g_free@plt>
   23288:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   2328c:	ldr	r0, [pc, #48]	; 232c4 <g_strcmp0@plt+0xe0f8>
   23290:	push	{lr}		; (str lr, [sp, #-4]!)
   23294:	sub	sp, sp, #20
   23298:	ldr	ip, [pc, #40]	; 232c8 <g_strcmp0@plt+0xe0fc>
   2329c:	str	r3, [sp, #8]
   232a0:	str	r2, [sp]
   232a4:	mov	r3, r1
   232a8:	ldr	r0, [r0]
   232ac:	ldr	r2, [pc, #24]	; 232cc <g_strcmp0@plt+0xe100>
   232b0:	str	ip, [sp, #4]
   232b4:	ldr	r1, [pc, #20]	; 232d0 <g_strcmp0@plt+0xe104>
   232b8:	bl	1516c <g_signal_emit_by_name@plt>
   232bc:	add	sp, sp, #20
   232c0:	pop	{pc}		; (ldr pc, [sp], #4)
   232c4:	andeq	ip, r4, r0, asr #32
   232c8:	andeq	r4, r3, r4, asr r8
   232cc:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   232d0:	andeq	r4, r3, r0, asr #16
   232d4:	push	{r4, r5, r6, r7, r8, lr}
   232d8:	sub	sp, sp, #8
   232dc:	ldr	r4, [pc, #116]	; 23358 <g_strcmp0@plt+0xe18c>
   232e0:	mov	r5, #0
   232e4:	mov	r6, r1
   232e8:	ldr	r3, [r4]
   232ec:	mov	r1, sp
   232f0:	ldr	r0, [pc, #100]	; 2335c <g_strcmp0@plt+0xe190>
   232f4:	mov	r7, r2
   232f8:	str	r3, [sp, #4]
   232fc:	str	r5, [sp]
   23300:	bl	22e40 <g_strcmp0@plt+0xdc74>
   23304:	mov	r1, r5
   23308:	mov	r8, r0
   2330c:	mov	r0, r5
   23310:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   23314:	cmp	r6, r5
   23318:	strne	r8, [r6]
   2331c:	ldr	r5, [sp]
   23320:	beq	23344 <g_strcmp0@plt+0xe178>
   23324:	ldr	r2, [sp, #4]
   23328:	ldr	r3, [r4]
   2332c:	cmp	r7, #0
   23330:	strne	r5, [r7]
   23334:	cmp	r2, r3
   23338:	bne	23354 <g_strcmp0@plt+0xe188>
   2333c:	add	sp, sp, #8
   23340:	pop	{r4, r5, r6, r7, r8, pc}
   23344:	mov	r0, r8
   23348:	mov	r1, r5
   2334c:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   23350:	b	23324 <g_strcmp0@plt+0xe158>
   23354:	bl	14b6c <__stack_chk_fail@plt>
   23358:	andeq	fp, r4, r8, asr #19
   2335c:	andeq	r7, r3, r4, lsr r5
   23360:	push	{r4, r5, r6, r7, r8, lr}
   23364:	sub	sp, sp, #8
   23368:	ldr	r4, [pc, #116]	; 233e4 <g_strcmp0@plt+0xe218>
   2336c:	mov	r5, #0
   23370:	mov	r6, r2
   23374:	ldr	ip, [r4]
   23378:	mov	r2, sp
   2337c:	ldr	r0, [pc, #100]	; 233e8 <g_strcmp0@plt+0xe21c>
   23380:	mov	r7, r3
   23384:	str	ip, [sp, #4]
   23388:	str	r5, [sp]
   2338c:	bl	22c1c <g_strcmp0@plt+0xda50>
   23390:	mov	r1, r5
   23394:	mov	r8, r0
   23398:	mov	r0, r5
   2339c:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   233a0:	cmp	r6, r5
   233a4:	strne	r8, [r6]
   233a8:	ldr	r5, [sp]
   233ac:	beq	233d0 <g_strcmp0@plt+0xe204>
   233b0:	ldr	r2, [sp, #4]
   233b4:	ldr	r3, [r4]
   233b8:	cmp	r7, #0
   233bc:	strne	r5, [r7]
   233c0:	cmp	r2, r3
   233c4:	bne	233e0 <g_strcmp0@plt+0xe214>
   233c8:	add	sp, sp, #8
   233cc:	pop	{r4, r5, r6, r7, r8, pc}
   233d0:	mov	r0, r8
   233d4:	mov	r1, r5
   233d8:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   233dc:	b	233b0 <g_strcmp0@plt+0xe1e4>
   233e0:	bl	14b6c <__stack_chk_fail@plt>
   233e4:	andeq	fp, r4, r8, asr #19
   233e8:	andeq	r7, r3, r4, lsr r5
   233ec:	push	{r4, r5, r6, lr}
   233f0:	mov	r4, r3
   233f4:	ldr	r0, [pc, #40]	; 23424 <g_strcmp0@plt+0xe258>
   233f8:	bl	22a14 <g_strcmp0@plt+0xd848>
   233fc:	mov	r5, r0
   23400:	mov	r0, #0
   23404:	bl	14bd8 <g_free@plt>
   23408:	cmp	r4, #0
   2340c:	beq	23418 <g_strcmp0@plt+0xe24c>
   23410:	str	r5, [r4]
   23414:	pop	{r4, r5, r6, pc}
   23418:	mov	r0, r5
   2341c:	pop	{r4, r5, r6, lr}
   23420:	b	14bd8 <g_free@plt>
   23424:	andeq	r7, r3, r4, lsr r5
   23428:	ldr	r0, [pc, #48]	; 23460 <g_strcmp0@plt+0xe294>
   2342c:	push	{lr}		; (str lr, [sp, #-4]!)
   23430:	sub	sp, sp, #20
   23434:	ldr	ip, [pc, #40]	; 23464 <g_strcmp0@plt+0xe298>
   23438:	str	r3, [sp, #8]
   2343c:	str	r2, [sp]
   23440:	mov	r3, r1
   23444:	ldr	r0, [r0]
   23448:	ldr	r2, [pc, #24]	; 23468 <g_strcmp0@plt+0xe29c>
   2344c:	str	ip, [sp, #4]
   23450:	ldr	r1, [pc, #20]	; 2346c <g_strcmp0@plt+0xe2a0>
   23454:	bl	1516c <g_signal_emit_by_name@plt>
   23458:	add	sp, sp, #20
   2345c:	pop	{pc}		; (ldr pc, [sp], #4)
   23460:	andeq	ip, r4, r0, asr #32
   23464:	andeq	r4, r3, r4, asr r8
   23468:	andeq	r7, r3, r4, lsr r5
   2346c:	andeq	r4, r3, r0, asr #16
   23470:	push	{r4, r5, r6, r7, r8, lr}
   23474:	sub	sp, sp, #8
   23478:	ldr	r4, [pc, #116]	; 234f4 <g_strcmp0@plt+0xe328>
   2347c:	mov	r5, #0
   23480:	mov	r6, r1
   23484:	ldr	r3, [r4]
   23488:	mov	r1, sp
   2348c:	ldr	r0, [pc, #100]	; 234f8 <g_strcmp0@plt+0xe32c>
   23490:	mov	r7, r2
   23494:	str	r3, [sp, #4]
   23498:	str	r5, [sp]
   2349c:	bl	22e40 <g_strcmp0@plt+0xdc74>
   234a0:	mov	r1, r5
   234a4:	mov	r8, r0
   234a8:	mov	r0, r5
   234ac:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   234b0:	cmp	r6, r5
   234b4:	strne	r8, [r6]
   234b8:	ldr	r5, [sp]
   234bc:	beq	234e0 <g_strcmp0@plt+0xe314>
   234c0:	ldr	r2, [sp, #4]
   234c4:	ldr	r3, [r4]
   234c8:	cmp	r7, #0
   234cc:	strne	r5, [r7]
   234d0:	cmp	r2, r3
   234d4:	bne	234f0 <g_strcmp0@plt+0xe324>
   234d8:	add	sp, sp, #8
   234dc:	pop	{r4, r5, r6, r7, r8, pc}
   234e0:	mov	r0, r8
   234e4:	mov	r1, r5
   234e8:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   234ec:	b	234c0 <g_strcmp0@plt+0xe2f4>
   234f0:	bl	14b6c <__stack_chk_fail@plt>
   234f4:	andeq	fp, r4, r8, asr #19
   234f8:	andeq	r4, r3, r8, lsr #16
   234fc:	push	{r4, r5, r6, r7, r8, lr}
   23500:	sub	sp, sp, #8
   23504:	ldr	r4, [pc, #116]	; 23580 <g_strcmp0@plt+0xe3b4>
   23508:	mov	r5, #0
   2350c:	mov	r6, r2
   23510:	ldr	ip, [r4]
   23514:	mov	r2, sp
   23518:	ldr	r0, [pc, #100]	; 23584 <g_strcmp0@plt+0xe3b8>
   2351c:	mov	r7, r3
   23520:	str	ip, [sp, #4]
   23524:	str	r5, [sp]
   23528:	bl	22c1c <g_strcmp0@plt+0xda50>
   2352c:	mov	r1, r5
   23530:	mov	r8, r0
   23534:	mov	r0, r5
   23538:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   2353c:	cmp	r6, r5
   23540:	strne	r8, [r6]
   23544:	ldr	r5, [sp]
   23548:	beq	2356c <g_strcmp0@plt+0xe3a0>
   2354c:	ldr	r2, [sp, #4]
   23550:	ldr	r3, [r4]
   23554:	cmp	r7, #0
   23558:	strne	r5, [r7]
   2355c:	cmp	r2, r3
   23560:	bne	2357c <g_strcmp0@plt+0xe3b0>
   23564:	add	sp, sp, #8
   23568:	pop	{r4, r5, r6, r7, r8, pc}
   2356c:	mov	r0, r8
   23570:	mov	r1, r5
   23574:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   23578:	b	2354c <g_strcmp0@plt+0xe380>
   2357c:	bl	14b6c <__stack_chk_fail@plt>
   23580:	andeq	fp, r4, r8, asr #19
   23584:	andeq	r4, r3, r8, lsr #16
   23588:	push	{r4, r5, r6, lr}
   2358c:	mov	r4, r3
   23590:	ldr	r0, [pc, #40]	; 235c0 <g_strcmp0@plt+0xe3f4>
   23594:	bl	22a14 <g_strcmp0@plt+0xd848>
   23598:	mov	r5, r0
   2359c:	mov	r0, #0
   235a0:	bl	14bd8 <g_free@plt>
   235a4:	cmp	r4, #0
   235a8:	beq	235b4 <g_strcmp0@plt+0xe3e8>
   235ac:	str	r5, [r4]
   235b0:	pop	{r4, r5, r6, pc}
   235b4:	mov	r0, r5
   235b8:	pop	{r4, r5, r6, lr}
   235bc:	b	14bd8 <g_free@plt>
   235c0:	andeq	r4, r3, r8, lsr #16
   235c4:	ldr	r0, [pc, #48]	; 235fc <g_strcmp0@plt+0xe430>
   235c8:	push	{lr}		; (str lr, [sp, #-4]!)
   235cc:	sub	sp, sp, #20
   235d0:	ldr	ip, [pc, #40]	; 23600 <g_strcmp0@plt+0xe434>
   235d4:	str	r3, [sp, #8]
   235d8:	str	r2, [sp]
   235dc:	mov	r3, r1
   235e0:	ldr	r0, [r0]
   235e4:	ldr	r2, [pc, #24]	; 23604 <g_strcmp0@plt+0xe438>
   235e8:	str	ip, [sp, #4]
   235ec:	ldr	r1, [pc, #20]	; 23608 <g_strcmp0@plt+0xe43c>
   235f0:	bl	1516c <g_signal_emit_by_name@plt>
   235f4:	add	sp, sp, #20
   235f8:	pop	{pc}		; (ldr pc, [sp], #4)
   235fc:	andeq	ip, r4, r0, asr #32
   23600:	andeq	r4, r3, r4, asr r8
   23604:	andeq	r4, r3, r8, lsr #16
   23608:	andeq	r4, r3, r0, asr #16
   2360c:	push	{r4, r5, r6, r7, r8, lr}
   23610:	sub	sp, sp, #8
   23614:	ldr	r4, [pc, #116]	; 23690 <g_strcmp0@plt+0xe4c4>
   23618:	mov	r5, #0
   2361c:	mov	r6, r1
   23620:	ldr	r3, [r4]
   23624:	mov	r1, sp
   23628:	ldr	r0, [pc, #100]	; 23694 <g_strcmp0@plt+0xe4c8>
   2362c:	mov	r7, r2
   23630:	str	r3, [sp, #4]
   23634:	str	r5, [sp]
   23638:	bl	22e40 <g_strcmp0@plt+0xdc74>
   2363c:	mov	r1, r5
   23640:	mov	r8, r0
   23644:	mov	r0, r5
   23648:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   2364c:	cmp	r6, r5
   23650:	strne	r8, [r6]
   23654:	ldr	r5, [sp]
   23658:	beq	2367c <g_strcmp0@plt+0xe4b0>
   2365c:	ldr	r2, [sp, #4]
   23660:	ldr	r3, [r4]
   23664:	cmp	r7, #0
   23668:	strne	r5, [r7]
   2366c:	cmp	r2, r3
   23670:	bne	2368c <g_strcmp0@plt+0xe4c0>
   23674:	add	sp, sp, #8
   23678:	pop	{r4, r5, r6, r7, r8, pc}
   2367c:	mov	r0, r8
   23680:	mov	r1, r5
   23684:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   23688:	b	2365c <g_strcmp0@plt+0xe490>
   2368c:	bl	14b6c <__stack_chk_fail@plt>
   23690:	andeq	fp, r4, r8, asr #19
   23694:	andeq	r4, r3, ip, ror r9
   23698:	push	{r4, r5, r6, r7, r8, lr}
   2369c:	sub	sp, sp, #8
   236a0:	ldr	r4, [pc, #116]	; 2371c <g_strcmp0@plt+0xe550>
   236a4:	mov	r5, #0
   236a8:	mov	r6, r2
   236ac:	ldr	ip, [r4]
   236b0:	mov	r2, sp
   236b4:	ldr	r0, [pc, #100]	; 23720 <g_strcmp0@plt+0xe554>
   236b8:	mov	r7, r3
   236bc:	str	ip, [sp, #4]
   236c0:	str	r5, [sp]
   236c4:	bl	22c1c <g_strcmp0@plt+0xda50>
   236c8:	mov	r1, r5
   236cc:	mov	r8, r0
   236d0:	mov	r0, r5
   236d4:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   236d8:	cmp	r6, r5
   236dc:	strne	r8, [r6]
   236e0:	ldr	r5, [sp]
   236e4:	beq	23708 <g_strcmp0@plt+0xe53c>
   236e8:	ldr	r2, [sp, #4]
   236ec:	ldr	r3, [r4]
   236f0:	cmp	r7, #0
   236f4:	strne	r5, [r7]
   236f8:	cmp	r2, r3
   236fc:	bne	23718 <g_strcmp0@plt+0xe54c>
   23700:	add	sp, sp, #8
   23704:	pop	{r4, r5, r6, r7, r8, pc}
   23708:	mov	r0, r8
   2370c:	mov	r1, r5
   23710:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   23714:	b	236e8 <g_strcmp0@plt+0xe51c>
   23718:	bl	14b6c <__stack_chk_fail@plt>
   2371c:	andeq	fp, r4, r8, asr #19
   23720:	andeq	r4, r3, ip, ror r9
   23724:	push	{r4, r5, r6, lr}
   23728:	mov	r4, r3
   2372c:	ldr	r0, [pc, #40]	; 2375c <g_strcmp0@plt+0xe590>
   23730:	bl	22a14 <g_strcmp0@plt+0xd848>
   23734:	mov	r5, r0
   23738:	mov	r0, #0
   2373c:	bl	14bd8 <g_free@plt>
   23740:	cmp	r4, #0
   23744:	beq	23750 <g_strcmp0@plt+0xe584>
   23748:	str	r5, [r4]
   2374c:	pop	{r4, r5, r6, pc}
   23750:	mov	r0, r5
   23754:	pop	{r4, r5, r6, lr}
   23758:	b	14bd8 <g_free@plt>
   2375c:	andeq	r4, r3, ip, ror r9
   23760:	ldr	r0, [pc, #48]	; 23798 <g_strcmp0@plt+0xe5cc>
   23764:	push	{lr}		; (str lr, [sp, #-4]!)
   23768:	sub	sp, sp, #20
   2376c:	ldr	ip, [pc, #40]	; 2379c <g_strcmp0@plt+0xe5d0>
   23770:	str	r3, [sp, #8]
   23774:	str	r2, [sp]
   23778:	mov	r3, r1
   2377c:	ldr	r0, [r0]
   23780:	ldr	r2, [pc, #24]	; 237a0 <g_strcmp0@plt+0xe5d4>
   23784:	str	ip, [sp, #4]
   23788:	ldr	r1, [pc, #20]	; 237a4 <g_strcmp0@plt+0xe5d8>
   2378c:	bl	1516c <g_signal_emit_by_name@plt>
   23790:	add	sp, sp, #20
   23794:	pop	{pc}		; (ldr pc, [sp], #4)
   23798:	andeq	ip, r4, r0, asr #32
   2379c:	andeq	r4, r3, r4, asr r8
   237a0:	andeq	r4, r3, ip, ror r9
   237a4:	andeq	r4, r3, r0, asr #16
   237a8:	push	{r4, r5, r6, r7, r8, lr}
   237ac:	sub	sp, sp, #8
   237b0:	ldr	r4, [pc, #116]	; 2382c <g_strcmp0@plt+0xe660>
   237b4:	mov	r5, #0
   237b8:	mov	r6, r1
   237bc:	ldr	r3, [r4]
   237c0:	mov	r1, sp
   237c4:	ldr	r0, [pc, #100]	; 23830 <g_strcmp0@plt+0xe664>
   237c8:	mov	r7, r2
   237cc:	str	r3, [sp, #4]
   237d0:	str	r5, [sp]
   237d4:	bl	22e40 <g_strcmp0@plt+0xdc74>
   237d8:	mov	r1, r5
   237dc:	mov	r8, r0
   237e0:	mov	r0, r5
   237e4:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   237e8:	cmp	r6, r5
   237ec:	strne	r8, [r6]
   237f0:	ldr	r5, [sp]
   237f4:	beq	23818 <g_strcmp0@plt+0xe64c>
   237f8:	ldr	r2, [sp, #4]
   237fc:	ldr	r3, [r4]
   23800:	cmp	r7, #0
   23804:	strne	r5, [r7]
   23808:	cmp	r2, r3
   2380c:	bne	23828 <g_strcmp0@plt+0xe65c>
   23810:	add	sp, sp, #8
   23814:	pop	{r4, r5, r6, r7, r8, pc}
   23818:	mov	r0, r8
   2381c:	mov	r1, r5
   23820:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   23824:	b	237f8 <g_strcmp0@plt+0xe62c>
   23828:	bl	14b6c <__stack_chk_fail@plt>
   2382c:	andeq	fp, r4, r8, asr #19
   23830:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   23834:	push	{r4, r5, r6, r7, r8, lr}
   23838:	sub	sp, sp, #8
   2383c:	ldr	r4, [pc, #116]	; 238b8 <g_strcmp0@plt+0xe6ec>
   23840:	mov	r5, #0
   23844:	mov	r6, r2
   23848:	ldr	ip, [r4]
   2384c:	mov	r2, sp
   23850:	ldr	r0, [pc, #100]	; 238bc <g_strcmp0@plt+0xe6f0>
   23854:	mov	r7, r3
   23858:	str	ip, [sp, #4]
   2385c:	str	r5, [sp]
   23860:	bl	22c1c <g_strcmp0@plt+0xda50>
   23864:	mov	r1, r5
   23868:	mov	r8, r0
   2386c:	mov	r0, r5
   23870:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   23874:	cmp	r6, r5
   23878:	strne	r8, [r6]
   2387c:	ldr	r5, [sp]
   23880:	beq	238a4 <g_strcmp0@plt+0xe6d8>
   23884:	ldr	r2, [sp, #4]
   23888:	ldr	r3, [r4]
   2388c:	cmp	r7, #0
   23890:	strne	r5, [r7]
   23894:	cmp	r2, r3
   23898:	bne	238b4 <g_strcmp0@plt+0xe6e8>
   2389c:	add	sp, sp, #8
   238a0:	pop	{r4, r5, r6, r7, r8, pc}
   238a4:	mov	r0, r8
   238a8:	mov	r1, r5
   238ac:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   238b0:	b	23884 <g_strcmp0@plt+0xe6b8>
   238b4:	bl	14b6c <__stack_chk_fail@plt>
   238b8:	andeq	fp, r4, r8, asr #19
   238bc:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   238c0:	push	{r4, r5, r6, lr}
   238c4:	mov	r4, r3
   238c8:	ldr	r0, [pc, #40]	; 238f8 <g_strcmp0@plt+0xe72c>
   238cc:	bl	22a14 <g_strcmp0@plt+0xd848>
   238d0:	mov	r5, r0
   238d4:	mov	r0, #0
   238d8:	bl	14bd8 <g_free@plt>
   238dc:	cmp	r4, #0
   238e0:	beq	238ec <g_strcmp0@plt+0xe720>
   238e4:	str	r5, [r4]
   238e8:	pop	{r4, r5, r6, pc}
   238ec:	mov	r0, r5
   238f0:	pop	{r4, r5, r6, lr}
   238f4:	b	14bd8 <g_free@plt>
   238f8:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   238fc:	ldr	r0, [pc, #48]	; 23934 <g_strcmp0@plt+0xe768>
   23900:	push	{lr}		; (str lr, [sp, #-4]!)
   23904:	sub	sp, sp, #20
   23908:	ldr	ip, [pc, #40]	; 23938 <g_strcmp0@plt+0xe76c>
   2390c:	str	r3, [sp, #8]
   23910:	str	r2, [sp]
   23914:	mov	r3, r1
   23918:	ldr	r0, [r0]
   2391c:	ldr	r2, [pc, #24]	; 2393c <g_strcmp0@plt+0xe770>
   23920:	str	ip, [sp, #4]
   23924:	ldr	r1, [pc, #20]	; 23940 <g_strcmp0@plt+0xe774>
   23928:	bl	1516c <g_signal_emit_by_name@plt>
   2392c:	add	sp, sp, #20
   23930:	pop	{pc}		; (ldr pc, [sp], #4)
   23934:	andeq	ip, r4, r0, asr #32
   23938:	andeq	r4, r3, r4, asr r8
   2393c:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   23940:	andeq	r4, r3, r0, asr #16
   23944:	push	{r4, r5, r6, lr}
   23948:	mov	r1, #32
   2394c:	ldr	r5, [pc, #224]	; 23a34 <g_strcmp0@plt+0xe868>
   23950:	ldr	r2, [pc, #224]	; 23a38 <g_strcmp0@plt+0xe86c>
   23954:	mov	r0, #0
   23958:	bl	14668 <g_log@plt>
   2395c:	mov	r3, #0
   23960:	ldr	r2, [pc, #212]	; 23a3c <g_strcmp0@plt+0xe870>
   23964:	ldr	r1, [pc, #212]	; 23a40 <g_strcmp0@plt+0xe874>
   23968:	ldr	r0, [r5]
   2396c:	bl	2a300 <g_strcmp0@plt+0x15134>
   23970:	mov	r4, r0
   23974:	bl	14bd8 <g_free@plt>
   23978:	cmp	r4, #0
   2397c:	beq	23a20 <g_strcmp0@plt+0xe854>
   23980:	ldr	r4, [pc, #188]	; 23a44 <g_strcmp0@plt+0xe878>
   23984:	ldr	r0, [r4]
   23988:	cmp	r0, #0
   2398c:	beq	239ac <g_strcmp0@plt+0xe7e0>
   23990:	mov	r0, #0
   23994:	ldr	r2, [pc, #172]	; 23a48 <g_strcmp0@plt+0xe87c>
   23998:	mov	r1, #32
   2399c:	bl	14668 <g_log@plt>
   239a0:	ldr	r0, [r4]
   239a4:	pop	{r4, r5, r6, lr}
   239a8:	b	28bb8 <g_strcmp0@plt+0x139ec>
   239ac:	ldr	r2, [pc, #152]	; 23a4c <g_strcmp0@plt+0xe880>
   239b0:	mov	r1, #32
   239b4:	bl	14668 <g_log@plt>
   239b8:	ldr	r0, [r5]
   239bc:	bl	290bc <g_strcmp0@plt+0x13ef0>
   239c0:	subs	r5, r0, #0
   239c4:	beq	239fc <g_strcmp0@plt+0xe830>
   239c8:	bl	14404 <g_object_ref@plt>
   239cc:	ldr	r3, [r4]
   239d0:	cmp	r3, #0
   239d4:	mov	r6, r0
   239d8:	beq	239e8 <g_strcmp0@plt+0xe81c>
   239dc:	mov	r0, r3
   239e0:	bl	14e90 <g_object_unref@plt>
   239e4:	mov	r0, r6
   239e8:	str	r6, [r4]
   239ec:	bl	28bb8 <g_strcmp0@plt+0x139ec>
   239f0:	mov	r0, r5
   239f4:	pop	{r4, r5, r6, lr}
   239f8:	b	14e90 <g_object_unref@plt>
   239fc:	ldr	r3, [r4]
   23a00:	cmp	r3, #0
   23a04:	beq	23a18 <g_strcmp0@plt+0xe84c>
   23a08:	mov	r0, r3
   23a0c:	bl	14e90 <g_object_unref@plt>
   23a10:	mov	r0, r5
   23a14:	str	r5, [r4]
   23a18:	pop	{r4, r5, r6, lr}
   23a1c:	b	28bb8 <g_strcmp0@plt+0x139ec>
   23a20:	mov	r0, r4
   23a24:	ldr	r2, [pc, #36]	; 23a50 <g_strcmp0@plt+0xe884>
   23a28:	mov	r1, #16
   23a2c:	pop	{r4, r5, r6, lr}
   23a30:	b	14668 <g_log@plt>
   23a34:	andeq	ip, r4, r4, asr #32
   23a38:	andeq	r7, r3, r0, asr #10
   23a3c:	andeq	r5, r3, ip, lsr #25
   23a40:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   23a44:	muleq	r4, r8, r0
   23a48:	ldrdeq	r7, [r3], -ip
   23a4c:	muleq	r3, ip, r5
   23a50:	andeq	r7, r3, ip, ror #10
   23a54:	push	{r4, r5, r6, r7, r8, lr}
   23a58:	sub	sp, sp, #8
   23a5c:	ldr	r4, [pc, #116]	; 23ad8 <g_strcmp0@plt+0xe90c>
   23a60:	mov	r5, #0
   23a64:	mov	r6, r1
   23a68:	ldr	r3, [r4]
   23a6c:	mov	r1, sp
   23a70:	ldr	r0, [pc, #100]	; 23adc <g_strcmp0@plt+0xe910>
   23a74:	mov	r7, r2
   23a78:	str	r3, [sp, #4]
   23a7c:	str	r5, [sp]
   23a80:	bl	22e40 <g_strcmp0@plt+0xdc74>
   23a84:	mov	r1, r5
   23a88:	mov	r8, r0
   23a8c:	mov	r0, r5
   23a90:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   23a94:	cmp	r6, r5
   23a98:	strne	r8, [r6]
   23a9c:	ldr	r5, [sp]
   23aa0:	beq	23ac4 <g_strcmp0@plt+0xe8f8>
   23aa4:	ldr	r2, [sp, #4]
   23aa8:	ldr	r3, [r4]
   23aac:	cmp	r7, #0
   23ab0:	strne	r5, [r7]
   23ab4:	cmp	r2, r3
   23ab8:	bne	23ad4 <g_strcmp0@plt+0xe908>
   23abc:	add	sp, sp, #8
   23ac0:	pop	{r4, r5, r6, r7, r8, pc}
   23ac4:	mov	r0, r8
   23ac8:	mov	r1, r5
   23acc:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   23ad0:	b	23aa4 <g_strcmp0@plt+0xe8d8>
   23ad4:	bl	14b6c <__stack_chk_fail@plt>
   23ad8:	andeq	fp, r4, r8, asr #19
   23adc:	andeq	r7, r3, r0, lsl r6
   23ae0:	push	{r4, r5, r6, r7, r8, lr}
   23ae4:	sub	sp, sp, #8
   23ae8:	ldr	r4, [pc, #116]	; 23b64 <g_strcmp0@plt+0xe998>
   23aec:	mov	r5, #0
   23af0:	mov	r6, r2
   23af4:	ldr	ip, [r4]
   23af8:	mov	r2, sp
   23afc:	ldr	r0, [pc, #100]	; 23b68 <g_strcmp0@plt+0xe99c>
   23b00:	mov	r7, r3
   23b04:	str	ip, [sp, #4]
   23b08:	str	r5, [sp]
   23b0c:	bl	22c1c <g_strcmp0@plt+0xda50>
   23b10:	mov	r1, r5
   23b14:	mov	r8, r0
   23b18:	mov	r0, r5
   23b1c:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   23b20:	cmp	r6, r5
   23b24:	strne	r8, [r6]
   23b28:	ldr	r5, [sp]
   23b2c:	beq	23b50 <g_strcmp0@plt+0xe984>
   23b30:	ldr	r2, [sp, #4]
   23b34:	ldr	r3, [r4]
   23b38:	cmp	r7, #0
   23b3c:	strne	r5, [r7]
   23b40:	cmp	r2, r3
   23b44:	bne	23b60 <g_strcmp0@plt+0xe994>
   23b48:	add	sp, sp, #8
   23b4c:	pop	{r4, r5, r6, r7, r8, pc}
   23b50:	mov	r0, r8
   23b54:	mov	r1, r5
   23b58:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   23b5c:	b	23b30 <g_strcmp0@plt+0xe964>
   23b60:	bl	14b6c <__stack_chk_fail@plt>
   23b64:	andeq	fp, r4, r8, asr #19
   23b68:	andeq	r7, r3, r0, lsl r6
   23b6c:	push	{r4, r5, r6, lr}
   23b70:	mov	r4, r3
   23b74:	ldr	r0, [pc, #40]	; 23ba4 <g_strcmp0@plt+0xe9d8>
   23b78:	bl	22a14 <g_strcmp0@plt+0xd848>
   23b7c:	mov	r5, r0
   23b80:	mov	r0, #0
   23b84:	bl	14bd8 <g_free@plt>
   23b88:	cmp	r4, #0
   23b8c:	beq	23b98 <g_strcmp0@plt+0xe9cc>
   23b90:	str	r5, [r4]
   23b94:	pop	{r4, r5, r6, pc}
   23b98:	mov	r0, r5
   23b9c:	pop	{r4, r5, r6, lr}
   23ba0:	b	14bd8 <g_free@plt>
   23ba4:	andeq	r7, r3, r0, lsl r6
   23ba8:	ldr	r0, [pc, #48]	; 23be0 <g_strcmp0@plt+0xea14>
   23bac:	push	{lr}		; (str lr, [sp, #-4]!)
   23bb0:	sub	sp, sp, #20
   23bb4:	ldr	ip, [pc, #40]	; 23be4 <g_strcmp0@plt+0xea18>
   23bb8:	str	r3, [sp, #8]
   23bbc:	str	r2, [sp]
   23bc0:	mov	r3, r1
   23bc4:	ldr	r0, [r0]
   23bc8:	ldr	r2, [pc, #24]	; 23be8 <g_strcmp0@plt+0xea1c>
   23bcc:	str	ip, [sp, #4]
   23bd0:	ldr	r1, [pc, #20]	; 23bec <g_strcmp0@plt+0xea20>
   23bd4:	bl	1516c <g_signal_emit_by_name@plt>
   23bd8:	add	sp, sp, #20
   23bdc:	pop	{pc}		; (ldr pc, [sp], #4)
   23be0:	andeq	ip, r4, r0, asr #32
   23be4:	andeq	r4, r3, r4, asr r8
   23be8:	andeq	r7, r3, r0, lsl r6
   23bec:	andeq	r4, r3, r0, asr #16
   23bf0:	push	{r4, r5, r6, lr}
   23bf4:	mov	r1, #32
   23bf8:	ldr	r2, [pc, #220]	; 23cdc <g_strcmp0@plt+0xeb10>
   23bfc:	mov	r0, #0
   23c00:	bl	14668 <g_log@plt>
   23c04:	ldr	r1, [pc, #212]	; 23ce0 <g_strcmp0@plt+0xeb14>
   23c08:	ldr	r3, [pc, #212]	; 23ce4 <g_strcmp0@plt+0xeb18>
   23c0c:	ldr	r2, [pc, #212]	; 23ce8 <g_strcmp0@plt+0xeb1c>
   23c10:	ldr	r0, [r1]
   23c14:	ldr	r1, [pc, #208]	; 23cec <g_strcmp0@plt+0xeb20>
   23c18:	bl	2a300 <g_strcmp0@plt+0x15134>
   23c1c:	mov	r4, r0
   23c20:	bl	14bd8 <g_free@plt>
   23c24:	cmp	r4, #0
   23c28:	beq	23cc8 <g_strcmp0@plt+0xeafc>
   23c2c:	ldr	r4, [pc, #188]	; 23cf0 <g_strcmp0@plt+0xeb24>
   23c30:	ldr	r0, [r4]
   23c34:	cmp	r0, #0
   23c38:	beq	23c58 <g_strcmp0@plt+0xea8c>
   23c3c:	mov	r0, #0
   23c40:	ldr	r2, [pc, #172]	; 23cf4 <g_strcmp0@plt+0xeb28>
   23c44:	mov	r1, #32
   23c48:	bl	14668 <g_log@plt>
   23c4c:	ldr	r0, [r4]
   23c50:	pop	{r4, r5, r6, lr}
   23c54:	b	18ea8 <g_strcmp0@plt+0x3cdc>
   23c58:	ldr	r2, [pc, #152]	; 23cf8 <g_strcmp0@plt+0xeb2c>
   23c5c:	mov	r1, #32
   23c60:	bl	14668 <g_log@plt>
   23c64:	bl	1df38 <g_strcmp0@plt+0x8d6c>
   23c68:	subs	r5, r0, #0
   23c6c:	beq	23ca4 <g_strcmp0@plt+0xead8>
   23c70:	bl	14404 <g_object_ref@plt>
   23c74:	ldr	r3, [r4]
   23c78:	cmp	r3, #0
   23c7c:	mov	r6, r0
   23c80:	beq	23c90 <g_strcmp0@plt+0xeac4>
   23c84:	mov	r0, r3
   23c88:	bl	14e90 <g_object_unref@plt>
   23c8c:	mov	r0, r6
   23c90:	str	r6, [r4]
   23c94:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   23c98:	mov	r0, r5
   23c9c:	pop	{r4, r5, r6, lr}
   23ca0:	b	14e90 <g_object_unref@plt>
   23ca4:	ldr	r3, [r4]
   23ca8:	cmp	r3, #0
   23cac:	beq	23cc0 <g_strcmp0@plt+0xeaf4>
   23cb0:	mov	r0, r3
   23cb4:	bl	14e90 <g_object_unref@plt>
   23cb8:	mov	r0, r5
   23cbc:	str	r5, [r4]
   23cc0:	pop	{r4, r5, r6, lr}
   23cc4:	b	18d38 <g_strcmp0@plt+0x3b6c>
   23cc8:	mov	r0, r4
   23ccc:	ldr	r2, [pc, #40]	; 23cfc <g_strcmp0@plt+0xeb30>
   23cd0:	mov	r1, #16
   23cd4:	pop	{r4, r5, r6, lr}
   23cd8:	b	14668 <g_log@plt>
   23cdc:	andeq	r7, r3, ip, lsl r6
   23ce0:	andeq	ip, r4, r4, asr #32
   23ce4:	ldrdeq	r4, [r3], -ip
   23ce8:	andeq	r4, r3, r4, asr r9
   23cec:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   23cf0:	andeq	ip, r4, ip, lsr #1
   23cf4:	andeq	r7, r3, ip, asr #13
   23cf8:	andeq	r7, r3, r4, lsl #13
   23cfc:	andeq	r7, r3, r0, asr r6
   23d00:	push	{r4, r5, r6, lr}
   23d04:	mov	r1, #32
   23d08:	ldr	r2, [pc, #220]	; 23dec <g_strcmp0@plt+0xec20>
   23d0c:	mov	r0, #0
   23d10:	bl	14668 <g_log@plt>
   23d14:	ldr	r1, [pc, #212]	; 23df0 <g_strcmp0@plt+0xec24>
   23d18:	ldr	r3, [pc, #212]	; 23df4 <g_strcmp0@plt+0xec28>
   23d1c:	ldr	r2, [pc, #212]	; 23df8 <g_strcmp0@plt+0xec2c>
   23d20:	ldr	r0, [r1]
   23d24:	ldr	r1, [pc, #208]	; 23dfc <g_strcmp0@plt+0xec30>
   23d28:	bl	2a300 <g_strcmp0@plt+0x15134>
   23d2c:	mov	r4, r0
   23d30:	bl	14bd8 <g_free@plt>
   23d34:	cmp	r4, #0
   23d38:	beq	23dd8 <g_strcmp0@plt+0xec0c>
   23d3c:	ldr	r4, [pc, #188]	; 23e00 <g_strcmp0@plt+0xec34>
   23d40:	ldr	r0, [r4]
   23d44:	cmp	r0, #0
   23d48:	beq	23d68 <g_strcmp0@plt+0xeb9c>
   23d4c:	mov	r0, #0
   23d50:	ldr	r2, [pc, #172]	; 23e04 <g_strcmp0@plt+0xec38>
   23d54:	mov	r1, #32
   23d58:	bl	14668 <g_log@plt>
   23d5c:	ldr	r0, [r4]
   23d60:	pop	{r4, r5, r6, lr}
   23d64:	b	1d0b8 <g_strcmp0@plt+0x7eec>
   23d68:	ldr	r2, [pc, #152]	; 23e08 <g_strcmp0@plt+0xec3c>
   23d6c:	mov	r1, #32
   23d70:	bl	14668 <g_log@plt>
   23d74:	bl	1df38 <g_strcmp0@plt+0x8d6c>
   23d78:	subs	r5, r0, #0
   23d7c:	beq	23db4 <g_strcmp0@plt+0xebe8>
   23d80:	bl	14404 <g_object_ref@plt>
   23d84:	ldr	r3, [r4]
   23d88:	cmp	r3, #0
   23d8c:	mov	r6, r0
   23d90:	beq	23da0 <g_strcmp0@plt+0xebd4>
   23d94:	mov	r0, r3
   23d98:	bl	14e90 <g_object_unref@plt>
   23d9c:	mov	r0, r6
   23da0:	str	r6, [r4]
   23da4:	bl	1d0b8 <g_strcmp0@plt+0x7eec>
   23da8:	mov	r0, r5
   23dac:	pop	{r4, r5, r6, lr}
   23db0:	b	14e90 <g_object_unref@plt>
   23db4:	ldr	r3, [r4]
   23db8:	cmp	r3, #0
   23dbc:	beq	23dd0 <g_strcmp0@plt+0xec04>
   23dc0:	mov	r0, r3
   23dc4:	bl	14e90 <g_object_unref@plt>
   23dc8:	mov	r0, r5
   23dcc:	str	r5, [r4]
   23dd0:	pop	{r4, r5, r6, lr}
   23dd4:	b	1d0b8 <g_strcmp0@plt+0x7eec>
   23dd8:	mov	r0, r4
   23ddc:	ldr	r2, [pc, #40]	; 23e0c <g_strcmp0@plt+0xec40>
   23de0:	mov	r1, #16
   23de4:	pop	{r4, r5, r6, lr}
   23de8:	b	14668 <g_log@plt>
   23dec:	andeq	r7, r3, r8, lsl #14
   23df0:	andeq	ip, r4, r4, asr #32
   23df4:	ldrdeq	r4, [r3], -ip
   23df8:	andeq	r4, r3, r4, asr r9
   23dfc:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   23e00:	andeq	ip, r4, ip, lsr #1
   23e04:	andeq	r7, r3, ip, asr #15
   23e08:	andeq	r7, r3, r8, ror r7
   23e0c:	andeq	r7, r3, r4, asr #14
   23e10:	push	{r4, r5, r6, lr}
   23e14:	mov	r1, #32
   23e18:	ldr	r2, [pc, #220]	; 23efc <g_strcmp0@plt+0xed30>
   23e1c:	mov	r0, #0
   23e20:	bl	14668 <g_log@plt>
   23e24:	ldr	r1, [pc, #212]	; 23f00 <g_strcmp0@plt+0xed34>
   23e28:	ldr	r3, [pc, #212]	; 23f04 <g_strcmp0@plt+0xed38>
   23e2c:	ldr	r2, [pc, #212]	; 23f08 <g_strcmp0@plt+0xed3c>
   23e30:	ldr	r0, [r1]
   23e34:	ldr	r1, [pc, #208]	; 23f0c <g_strcmp0@plt+0xed40>
   23e38:	bl	2a300 <g_strcmp0@plt+0x15134>
   23e3c:	mov	r4, r0
   23e40:	bl	14bd8 <g_free@plt>
   23e44:	cmp	r4, #0
   23e48:	beq	23ee8 <g_strcmp0@plt+0xed1c>
   23e4c:	ldr	r4, [pc, #188]	; 23f10 <g_strcmp0@plt+0xed44>
   23e50:	ldr	r0, [r4]
   23e54:	cmp	r0, #0
   23e58:	beq	23e78 <g_strcmp0@plt+0xecac>
   23e5c:	mov	r0, #0
   23e60:	ldr	r2, [pc, #172]	; 23f14 <g_strcmp0@plt+0xed48>
   23e64:	mov	r1, #32
   23e68:	bl	14668 <g_log@plt>
   23e6c:	ldr	r0, [r4]
   23e70:	pop	{r4, r5, r6, lr}
   23e74:	b	1d0cc <g_strcmp0@plt+0x7f00>
   23e78:	ldr	r2, [pc, #152]	; 23f18 <g_strcmp0@plt+0xed4c>
   23e7c:	mov	r1, #32
   23e80:	bl	14668 <g_log@plt>
   23e84:	bl	1df38 <g_strcmp0@plt+0x8d6c>
   23e88:	subs	r5, r0, #0
   23e8c:	beq	23ec4 <g_strcmp0@plt+0xecf8>
   23e90:	bl	14404 <g_object_ref@plt>
   23e94:	ldr	r3, [r4]
   23e98:	cmp	r3, #0
   23e9c:	mov	r6, r0
   23ea0:	beq	23eb0 <g_strcmp0@plt+0xece4>
   23ea4:	mov	r0, r3
   23ea8:	bl	14e90 <g_object_unref@plt>
   23eac:	mov	r0, r6
   23eb0:	str	r6, [r4]
   23eb4:	bl	1d0cc <g_strcmp0@plt+0x7f00>
   23eb8:	mov	r0, r5
   23ebc:	pop	{r4, r5, r6, lr}
   23ec0:	b	14e90 <g_object_unref@plt>
   23ec4:	ldr	r3, [r4]
   23ec8:	cmp	r3, #0
   23ecc:	beq	23ee0 <g_strcmp0@plt+0xed14>
   23ed0:	mov	r0, r3
   23ed4:	bl	14e90 <g_object_unref@plt>
   23ed8:	mov	r0, r5
   23edc:	str	r5, [r4]
   23ee0:	pop	{r4, r5, r6, lr}
   23ee4:	b	1d0cc <g_strcmp0@plt+0x7f00>
   23ee8:	mov	r0, r4
   23eec:	ldr	r2, [pc, #40]	; 23f1c <g_strcmp0@plt+0xed50>
   23ef0:	mov	r1, #16
   23ef4:	pop	{r4, r5, r6, lr}
   23ef8:	b	14668 <g_log@plt>
   23efc:	andeq	r7, r3, ip, lsl #16
   23f00:	andeq	ip, r4, r4, asr #32
   23f04:	ldrdeq	r4, [r3], -ip
   23f08:	andeq	r4, r3, r4, asr r9
   23f0c:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   23f10:	andeq	ip, r4, ip, lsr #1
   23f14:	ldrdeq	r7, [r3], -r0
   23f18:	andeq	r7, r3, ip, ror r8
   23f1c:	andeq	r7, r3, r8, asr #16
   23f20:	push	{r4, r5, r6, lr}
   23f24:	mov	r1, #32
   23f28:	ldr	r2, [pc, #220]	; 2400c <g_strcmp0@plt+0xee40>
   23f2c:	mov	r0, #0
   23f30:	bl	14668 <g_log@plt>
   23f34:	ldr	r1, [pc, #212]	; 24010 <g_strcmp0@plt+0xee44>
   23f38:	ldr	r3, [pc, #212]	; 24014 <g_strcmp0@plt+0xee48>
   23f3c:	ldr	r2, [pc, #212]	; 24018 <g_strcmp0@plt+0xee4c>
   23f40:	ldr	r0, [r1]
   23f44:	ldr	r1, [pc, #208]	; 2401c <g_strcmp0@plt+0xee50>
   23f48:	bl	2a300 <g_strcmp0@plt+0x15134>
   23f4c:	mov	r4, r0
   23f50:	bl	14bd8 <g_free@plt>
   23f54:	cmp	r4, #0
   23f58:	beq	23ff8 <g_strcmp0@plt+0xee2c>
   23f5c:	ldr	r4, [pc, #188]	; 24020 <g_strcmp0@plt+0xee54>
   23f60:	ldr	r0, [r4]
   23f64:	cmp	r0, #0
   23f68:	beq	23f88 <g_strcmp0@plt+0xedbc>
   23f6c:	mov	r0, #0
   23f70:	ldr	r2, [pc, #172]	; 24024 <g_strcmp0@plt+0xee58>
   23f74:	mov	r1, #32
   23f78:	bl	14668 <g_log@plt>
   23f7c:	ldr	r0, [r4]
   23f80:	pop	{r4, r5, r6, lr}
   23f84:	b	18ea8 <g_strcmp0@plt+0x3cdc>
   23f88:	ldr	r2, [pc, #152]	; 24028 <g_strcmp0@plt+0xee5c>
   23f8c:	mov	r1, #32
   23f90:	bl	14668 <g_log@plt>
   23f94:	bl	1cea8 <g_strcmp0@plt+0x7cdc>
   23f98:	subs	r5, r0, #0
   23f9c:	beq	23fd4 <g_strcmp0@plt+0xee08>
   23fa0:	bl	14404 <g_object_ref@plt>
   23fa4:	ldr	r3, [r4]
   23fa8:	cmp	r3, #0
   23fac:	mov	r6, r0
   23fb0:	beq	23fc0 <g_strcmp0@plt+0xedf4>
   23fb4:	mov	r0, r3
   23fb8:	bl	14e90 <g_object_unref@plt>
   23fbc:	mov	r0, r6
   23fc0:	str	r6, [r4]
   23fc4:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   23fc8:	mov	r0, r5
   23fcc:	pop	{r4, r5, r6, lr}
   23fd0:	b	14e90 <g_object_unref@plt>
   23fd4:	ldr	r3, [r4]
   23fd8:	cmp	r3, #0
   23fdc:	beq	23ff0 <g_strcmp0@plt+0xee24>
   23fe0:	mov	r0, r3
   23fe4:	bl	14e90 <g_object_unref@plt>
   23fe8:	mov	r0, r5
   23fec:	str	r5, [r4]
   23ff0:	pop	{r4, r5, r6, lr}
   23ff4:	b	18d38 <g_strcmp0@plt+0x3b6c>
   23ff8:	mov	r0, r4
   23ffc:	ldr	r2, [pc, #40]	; 2402c <g_strcmp0@plt+0xee60>
   24000:	mov	r1, #16
   24004:	pop	{r4, r5, r6, lr}
   24008:	b	14668 <g_log@plt>
   2400c:	andeq	r7, r3, r0, lsl r9
   24010:	andeq	ip, r4, r4, asr #32
   24014:	ldrdeq	r4, [r3], -ip
   24018:			; <UNDEFINED> instruction: 0x00037ab0
   2401c:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   24020:	andeq	ip, r4, r0, lsr #1
   24024:			; <UNDEFINED> instruction: 0x000379b4
   24028:	andeq	r7, r3, r4, ror r9
   2402c:	andeq	r7, r3, ip, lsr r9
   24030:	push	{r4, r5, r6, lr}
   24034:	mov	r1, #32
   24038:	ldr	r2, [pc, #220]	; 2411c <g_strcmp0@plt+0xef50>
   2403c:	mov	r0, #0
   24040:	bl	14668 <g_log@plt>
   24044:	ldr	r1, [pc, #212]	; 24120 <g_strcmp0@plt+0xef54>
   24048:	ldr	r3, [pc, #212]	; 24124 <g_strcmp0@plt+0xef58>
   2404c:	ldr	r2, [pc, #212]	; 24128 <g_strcmp0@plt+0xef5c>
   24050:	ldr	r0, [r1]
   24054:	ldr	r1, [pc, #208]	; 2412c <g_strcmp0@plt+0xef60>
   24058:	bl	2a300 <g_strcmp0@plt+0x15134>
   2405c:	mov	r4, r0
   24060:	bl	14bd8 <g_free@plt>
   24064:	cmp	r4, #0
   24068:	beq	24108 <g_strcmp0@plt+0xef3c>
   2406c:	ldr	r4, [pc, #188]	; 24130 <g_strcmp0@plt+0xef64>
   24070:	ldr	r0, [r4]
   24074:	cmp	r0, #0
   24078:	beq	24098 <g_strcmp0@plt+0xeecc>
   2407c:	mov	r0, #0
   24080:	ldr	r2, [pc, #172]	; 24134 <g_strcmp0@plt+0xef68>
   24084:	mov	r1, #32
   24088:	bl	14668 <g_log@plt>
   2408c:	ldr	r0, [r4]
   24090:	pop	{r4, r5, r6, lr}
   24094:	b	18ea8 <g_strcmp0@plt+0x3cdc>
   24098:	ldr	r2, [pc, #152]	; 24138 <g_strcmp0@plt+0xef6c>
   2409c:	mov	r1, #32
   240a0:	bl	14668 <g_log@plt>
   240a4:	bl	1cdf0 <g_strcmp0@plt+0x7c24>
   240a8:	subs	r5, r0, #0
   240ac:	beq	240e4 <g_strcmp0@plt+0xef18>
   240b0:	bl	14404 <g_object_ref@plt>
   240b4:	ldr	r3, [r4]
   240b8:	cmp	r3, #0
   240bc:	mov	r6, r0
   240c0:	beq	240d0 <g_strcmp0@plt+0xef04>
   240c4:	mov	r0, r3
   240c8:	bl	14e90 <g_object_unref@plt>
   240cc:	mov	r0, r6
   240d0:	str	r6, [r4]
   240d4:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   240d8:	mov	r0, r5
   240dc:	pop	{r4, r5, r6, lr}
   240e0:	b	14e90 <g_object_unref@plt>
   240e4:	ldr	r3, [r4]
   240e8:	cmp	r3, #0
   240ec:	beq	24100 <g_strcmp0@plt+0xef34>
   240f0:	mov	r0, r3
   240f4:	bl	14e90 <g_object_unref@plt>
   240f8:	mov	r0, r5
   240fc:	str	r5, [r4]
   24100:	pop	{r4, r5, r6, lr}
   24104:	b	18d38 <g_strcmp0@plt+0x3b6c>
   24108:	mov	r0, r4
   2410c:	ldr	r2, [pc, #40]	; 2413c <g_strcmp0@plt+0xef70>
   24110:	mov	r1, #16
   24114:	pop	{r4, r5, r6, lr}
   24118:	b	14668 <g_log@plt>
   2411c:	andeq	r7, r3, r8, ror #19
   24120:	andeq	ip, r4, r4, asr #32
   24124:	ldrdeq	r4, [r3], -ip
   24128:			; <UNDEFINED> instruction: 0x00037ab0
   2412c:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   24130:	muleq	r4, ip, r0
   24134:	andeq	r7, r3, r4, lsl #21
   24138:	andeq	r7, r3, r4, asr #20
   2413c:	andeq	r7, r3, r4, lsl sl
   24140:	push	{r4, r5, r6, lr}
   24144:	mov	r1, #32
   24148:	ldr	r2, [pc, #220]	; 2422c <g_strcmp0@plt+0xf060>
   2414c:	mov	r0, #0
   24150:	bl	14668 <g_log@plt>
   24154:	ldr	r1, [pc, #212]	; 24230 <g_strcmp0@plt+0xf064>
   24158:	ldr	r3, [pc, #212]	; 24234 <g_strcmp0@plt+0xf068>
   2415c:	ldr	r2, [pc, #212]	; 24238 <g_strcmp0@plt+0xf06c>
   24160:	ldr	r0, [r1]
   24164:	ldr	r1, [pc, #208]	; 2423c <g_strcmp0@plt+0xf070>
   24168:	bl	2a300 <g_strcmp0@plt+0x15134>
   2416c:	mov	r4, r0
   24170:	bl	14bd8 <g_free@plt>
   24174:	cmp	r4, #0
   24178:	beq	24218 <g_strcmp0@plt+0xf04c>
   2417c:	ldr	r4, [pc, #188]	; 24240 <g_strcmp0@plt+0xf074>
   24180:	ldr	r0, [r4]
   24184:	cmp	r0, #0
   24188:	beq	241a8 <g_strcmp0@plt+0xefdc>
   2418c:	mov	r0, #0
   24190:	ldr	r2, [pc, #172]	; 24244 <g_strcmp0@plt+0xf078>
   24194:	mov	r1, #32
   24198:	bl	14668 <g_log@plt>
   2419c:	ldr	r0, [r4]
   241a0:	pop	{r4, r5, r6, lr}
   241a4:	b	18ea8 <g_strcmp0@plt+0x3cdc>
   241a8:	ldr	r2, [pc, #152]	; 24248 <g_strcmp0@plt+0xf07c>
   241ac:	mov	r1, #32
   241b0:	bl	14668 <g_log@plt>
   241b4:	bl	1cc80 <g_strcmp0@plt+0x7ab4>
   241b8:	subs	r5, r0, #0
   241bc:	beq	241f4 <g_strcmp0@plt+0xf028>
   241c0:	bl	14404 <g_object_ref@plt>
   241c4:	ldr	r3, [r4]
   241c8:	cmp	r3, #0
   241cc:	mov	r6, r0
   241d0:	beq	241e0 <g_strcmp0@plt+0xf014>
   241d4:	mov	r0, r3
   241d8:	bl	14e90 <g_object_unref@plt>
   241dc:	mov	r0, r6
   241e0:	str	r6, [r4]
   241e4:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   241e8:	mov	r0, r5
   241ec:	pop	{r4, r5, r6, lr}
   241f0:	b	14e90 <g_object_unref@plt>
   241f4:	ldr	r3, [r4]
   241f8:	cmp	r3, #0
   241fc:	beq	24210 <g_strcmp0@plt+0xf044>
   24200:	mov	r0, r3
   24204:	bl	14e90 <g_object_unref@plt>
   24208:	mov	r0, r5
   2420c:	str	r5, [r4]
   24210:	pop	{r4, r5, r6, lr}
   24214:	b	18d38 <g_strcmp0@plt+0x3b6c>
   24218:	mov	r0, r4
   2421c:	ldr	r2, [pc, #40]	; 2424c <g_strcmp0@plt+0xf080>
   24220:	mov	r1, #16
   24224:	pop	{r4, r5, r6, lr}
   24228:	b	14668 <g_log@plt>
   2422c:			; <UNDEFINED> instruction: 0x00037ab8
   24230:	andeq	ip, r4, r4, asr #32
   24234:	ldrdeq	r4, [r3], -ip
   24238:	andeq	r4, r3, r4, asr #18
   2423c:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   24240:	andeq	ip, r4, r8, lsr #1
   24244:	andeq	r7, r3, r4, asr fp
   24248:	andeq	r7, r3, r4, lsl fp
   2424c:	andeq	r7, r3, r4, ror #21
   24250:	push	{r4, r5, r6, lr}
   24254:	mov	r1, #32
   24258:	ldr	r2, [pc, #220]	; 2433c <g_strcmp0@plt+0xf170>
   2425c:	mov	r0, #0
   24260:	bl	14668 <g_log@plt>
   24264:	ldr	r1, [pc, #212]	; 24340 <g_strcmp0@plt+0xf174>
   24268:	ldr	r3, [pc, #212]	; 24344 <g_strcmp0@plt+0xf178>
   2426c:	ldr	r2, [pc, #212]	; 24348 <g_strcmp0@plt+0xf17c>
   24270:	ldr	r0, [r1]
   24274:	ldr	r1, [pc, #208]	; 2434c <g_strcmp0@plt+0xf180>
   24278:	bl	2a300 <g_strcmp0@plt+0x15134>
   2427c:	mov	r4, r0
   24280:	bl	14bd8 <g_free@plt>
   24284:	cmp	r4, #0
   24288:	beq	24328 <g_strcmp0@plt+0xf15c>
   2428c:	ldr	r4, [pc, #188]	; 24350 <g_strcmp0@plt+0xf184>
   24290:	ldr	r0, [r4]
   24294:	cmp	r0, #0
   24298:	beq	242b8 <g_strcmp0@plt+0xf0ec>
   2429c:	mov	r0, #0
   242a0:	ldr	r2, [pc, #172]	; 24354 <g_strcmp0@plt+0xf188>
   242a4:	mov	r1, #32
   242a8:	bl	14668 <g_log@plt>
   242ac:	ldr	r0, [r4]
   242b0:	pop	{r4, r5, r6, lr}
   242b4:	b	18ea8 <g_strcmp0@plt+0x3cdc>
   242b8:	ldr	r2, [pc, #152]	; 24358 <g_strcmp0@plt+0xf18c>
   242bc:	mov	r1, #32
   242c0:	bl	14668 <g_log@plt>
   242c4:	bl	1cd38 <g_strcmp0@plt+0x7b6c>
   242c8:	subs	r5, r0, #0
   242cc:	beq	24304 <g_strcmp0@plt+0xf138>
   242d0:	bl	14404 <g_object_ref@plt>
   242d4:	ldr	r3, [r4]
   242d8:	cmp	r3, #0
   242dc:	mov	r6, r0
   242e0:	beq	242f0 <g_strcmp0@plt+0xf124>
   242e4:	mov	r0, r3
   242e8:	bl	14e90 <g_object_unref@plt>
   242ec:	mov	r0, r6
   242f0:	str	r6, [r4]
   242f4:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   242f8:	mov	r0, r5
   242fc:	pop	{r4, r5, r6, lr}
   24300:	b	14e90 <g_object_unref@plt>
   24304:	ldr	r3, [r4]
   24308:	cmp	r3, #0
   2430c:	beq	24320 <g_strcmp0@plt+0xf154>
   24310:	mov	r0, r3
   24314:	bl	14e90 <g_object_unref@plt>
   24318:	mov	r0, r5
   2431c:	str	r5, [r4]
   24320:	pop	{r4, r5, r6, lr}
   24324:	b	18d38 <g_strcmp0@plt+0x3b6c>
   24328:	mov	r0, r4
   2432c:	ldr	r2, [pc, #40]	; 2435c <g_strcmp0@plt+0xf190>
   24330:	mov	r1, #16
   24334:	pop	{r4, r5, r6, lr}
   24338:	b	14668 <g_log@plt>
   2433c:	andeq	r7, r3, r8, lsl #23
   24340:	andeq	ip, r4, r4, asr #32
   24344:	ldrdeq	r4, [r3], -ip
   24348:	andeq	r7, r3, r8, asr #24
   2434c:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   24350:	andeq	ip, r4, r4, lsr #1
   24354:	andeq	r7, r3, ip, lsl ip
   24358:	andeq	r7, r3, r0, ror #23
   2435c:			; <UNDEFINED> instruction: 0x00037bb0
   24360:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24364:	sub	sp, sp, #28
   24368:	ldr	r8, [pc, #4072]	; 25358 <g_strcmp0@plt+0x1018c>
   2436c:	mov	r6, r1
   24370:	add	r3, sp, #12
   24374:	ldr	ip, [r8]
   24378:	add	r1, sp, #16
   2437c:	mov	r4, #0
   24380:	str	r1, [sp, #4]
   24384:	str	r3, [sp]
   24388:	ldr	r1, [pc, #4044]	; 2535c <g_strcmp0@plt+0x10190>
   2438c:	ldr	r3, [pc, #4044]	; 25360 <g_strcmp0@plt+0x10194>
   24390:	mov	sl, r0
   24394:	mov	r9, r2
   24398:	ldr	r0, [pc, #4036]	; 25364 <g_strcmp0@plt+0x10198>
   2439c:	mov	r2, r6
   243a0:	str	ip, [sp, #20]
   243a4:	str	r4, [sp, #12]
   243a8:	str	r4, [sp, #16]
   243ac:	bl	22884 <g_strcmp0@plt+0xd6b8>
   243b0:	mov	r0, r4
   243b4:	bl	14bd8 <g_free@plt>
   243b8:	ldr	r7, [sp, #12]
   243bc:	mov	r0, r4
   243c0:	bl	14bd8 <g_free@plt>
   243c4:	cmp	r7, r4
   243c8:	ldr	fp, [sp, #16]
   243cc:	beq	24694 <g_strcmp0@plt+0xf4c8>
   243d0:	cmp	r6, #0
   243d4:	ldr	r4, [pc, #3980]	; 25368 <g_strcmp0@plt+0x1019c>
   243d8:	beq	245d8 <g_strcmp0@plt+0xf40c>
   243dc:	mov	r0, r6
   243e0:	bl	14bcc <g_quark_from_string@plt>
   243e4:	mov	r5, r0
   243e8:	ldr	r0, [r4, #20]
   243ec:	cmp	r0, #0
   243f0:	beq	24658 <g_strcmp0@plt+0xf48c>
   243f4:	cmp	r0, r5
   243f8:	beq	2466c <g_strcmp0@plt+0xf4a0>
   243fc:	ldr	r0, [r4, #24]
   24400:	cmp	r0, #0
   24404:	beq	245f4 <g_strcmp0@plt+0xf428>
   24408:	cmp	r0, r5
   2440c:	beq	24608 <g_strcmp0@plt+0xf43c>
   24410:	ldr	r0, [r4, #28]
   24414:	cmp	r0, #0
   24418:	beq	246d0 <g_strcmp0@plt+0xf504>
   2441c:	cmp	r0, r5
   24420:	beq	246e4 <g_strcmp0@plt+0xf518>
   24424:	ldr	r0, [r4, #32]
   24428:	cmp	r0, #0
   2442c:	beq	2476c <g_strcmp0@plt+0xf5a0>
   24430:	cmp	r0, r5
   24434:	beq	2478c <g_strcmp0@plt+0xf5c0>
   24438:	ldr	r0, [r4, #36]	; 0x24
   2443c:	cmp	r0, #0
   24440:	beq	2477c <g_strcmp0@plt+0xf5b0>
   24444:	cmp	r0, r5
   24448:	beq	24800 <g_strcmp0@plt+0xf634>
   2444c:	ldr	r0, [r4, #40]	; 0x28
   24450:	cmp	r0, #0
   24454:	beq	24674 <g_strcmp0@plt+0xf4a8>
   24458:	cmp	r0, r5
   2445c:	beq	24868 <g_strcmp0@plt+0xf69c>
   24460:	ldr	r0, [r4, #44]	; 0x2c
   24464:	cmp	r0, #0
   24468:	beq	24684 <g_strcmp0@plt+0xf4b8>
   2446c:	cmp	r0, r5
   24470:	beq	248bc <g_strcmp0@plt+0xf6f0>
   24474:	ldr	r0, [r4, #48]	; 0x30
   24478:	cmp	r0, #0
   2447c:	beq	24858 <g_strcmp0@plt+0xf68c>
   24480:	cmp	r0, r5
   24484:	beq	249d4 <g_strcmp0@plt+0xf808>
   24488:	ldr	r0, [r4, #52]	; 0x34
   2448c:	cmp	r0, #0
   24490:	beq	249b4 <g_strcmp0@plt+0xf7e8>
   24494:	cmp	r0, r5
   24498:	beq	24a54 <g_strcmp0@plt+0xf888>
   2449c:	ldr	r0, [r4, #56]	; 0x38
   244a0:	cmp	r0, #0
   244a4:	beq	249c4 <g_strcmp0@plt+0xf7f8>
   244a8:	cmp	r0, r5
   244ac:	beq	24ad0 <g_strcmp0@plt+0xf904>
   244b0:	ldr	r0, [r4, #60]	; 0x3c
   244b4:	cmp	r0, #0
   244b8:	beq	24a44 <g_strcmp0@plt+0xf878>
   244bc:	cmp	r0, r5
   244c0:	beq	24ba4 <g_strcmp0@plt+0xf9d8>
   244c4:	ldr	r0, [r4, #64]	; 0x40
   244c8:	cmp	r0, #0
   244cc:	beq	2491c <g_strcmp0@plt+0xf750>
   244d0:	cmp	r0, r5
   244d4:	beq	24cc8 <g_strcmp0@plt+0xfafc>
   244d8:	ldr	r0, [r4, #68]	; 0x44
   244dc:	cmp	r0, #0
   244e0:	beq	2492c <g_strcmp0@plt+0xf760>
   244e4:	cmp	r0, r5
   244e8:	beq	2493c <g_strcmp0@plt+0xf770>
   244ec:	ldr	r0, [r4, #72]	; 0x48
   244f0:	cmp	r0, #0
   244f4:	beq	24cb8 <g_strcmp0@plt+0xfaec>
   244f8:	cmp	r0, r5
   244fc:	beq	24dac <g_strcmp0@plt+0xfbe0>
   24500:	ldr	r0, [r4, #76]	; 0x4c
   24504:	cmp	r0, #0
   24508:	beq	24d8c <g_strcmp0@plt+0xfbc0>
   2450c:	cmp	r0, r5
   24510:	beq	24e24 <g_strcmp0@plt+0xfc58>
   24514:	ldr	r0, [r4, #80]	; 0x50
   24518:	cmp	r0, #0
   2451c:	beq	24d9c <g_strcmp0@plt+0xfbd0>
   24520:	cmp	r0, r5
   24524:	beq	24f50 <g_strcmp0@plt+0xfd84>
   24528:	ldr	r0, [r4, #84]	; 0x54
   2452c:	cmp	r0, #0
   24530:	beq	24e14 <g_strcmp0@plt+0xfc48>
   24534:	cmp	r0, r5
   24538:	beq	25038 <g_strcmp0@plt+0xfe6c>
   2453c:	ldr	r0, [r4, #88]	; 0x58
   24540:	cmp	r0, #0
   24544:	beq	24f40 <g_strcmp0@plt+0xfd74>
   24548:	cmp	r0, r5
   2454c:	beq	25114 <g_strcmp0@plt+0xff48>
   24550:	ldr	r0, [r4, #92]	; 0x5c
   24554:	cmp	r0, #0
   24558:	beq	25018 <g_strcmp0@plt+0xfe4c>
   2455c:	cmp	r0, r5
   24560:	beq	251e0 <g_strcmp0@plt+0x10014>
   24564:	ldr	r0, [r4, #96]	; 0x60
   24568:	cmp	r0, #0
   2456c:	beq	250dc <g_strcmp0@plt+0xff10>
   24570:	cmp	r0, r5
   24574:	beq	25218 <g_strcmp0@plt+0x1004c>
   24578:	ldr	r0, [r4, #100]	; 0x64
   2457c:	cmp	r0, #0
   24580:	beq	251d0 <g_strcmp0@plt+0x10004>
   24584:	cmp	r0, r5
   24588:	beq	25268 <g_strcmp0@plt+0x1009c>
   2458c:	ldr	r0, [r4, #104]	; 0x68
   24590:	cmp	r0, #0
   24594:	beq	25208 <g_strcmp0@plt+0x1003c>
   24598:	cmp	r0, r5
   2459c:	beq	252cc <g_strcmp0@plt+0x10100>
   245a0:	ldr	r0, [r4, #108]	; 0x6c
   245a4:	cmp	r0, #0
   245a8:	beq	25258 <g_strcmp0@plt+0x1008c>
   245ac:	cmp	r0, r5
   245b0:	beq	25238 <g_strcmp0@plt+0x1006c>
   245b4:	mov	r0, r7
   245b8:	bl	1b6ec <g_strcmp0@plt+0x6520>
   245bc:	mov	r4, r0
   245c0:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   245c4:	cmp	r4, #0
   245c8:	beq	246a8 <g_strcmp0@plt+0xf4dc>
   245cc:	mov	r0, r4
   245d0:	bl	14e90 <g_object_unref@plt>
   245d4:	b	246a8 <g_strcmp0@plt+0xf4dc>
   245d8:	ldr	r5, [r4, #20]
   245dc:	cmp	r5, #0
   245e0:	beq	24658 <g_strcmp0@plt+0xf48c>
   245e4:	ldr	r5, [r4, #24]
   245e8:	cmp	r5, #0
   245ec:	movne	r5, r6
   245f0:	bne	24410 <g_strcmp0@plt+0xf244>
   245f4:	ldr	r0, [pc, #3440]	; 2536c <g_strcmp0@plt+0x101a0>
   245f8:	bl	14d64 <g_quark_from_static_string@plt>
   245fc:	cmp	r0, r5
   24600:	str	r0, [r4, #24]
   24604:	bne	24410 <g_strcmp0@plt+0xf244>
   24608:	ldr	r2, [pc, #3424]	; 25370 <g_strcmp0@plt+0x101a4>
   2460c:	mov	r1, #32
   24610:	mov	r0, #0
   24614:	bl	14668 <g_log@plt>
   24618:	ldr	r1, [pc, #3412]	; 25374 <g_strcmp0@plt+0x101a8>
   2461c:	ldr	r3, [pc, #3388]	; 25360 <g_strcmp0@plt+0x10194>
   24620:	ldr	r2, [pc, #3396]	; 2536c <g_strcmp0@plt+0x101a0>
   24624:	ldr	r0, [r1]
   24628:	ldr	r1, [pc, #3372]	; 2535c <g_strcmp0@plt+0x10190>
   2462c:	bl	2a300 <g_strcmp0@plt+0x15134>
   24630:	mov	r4, r0
   24634:	bl	14bd8 <g_free@plt>
   24638:	cmp	r4, #0
   2463c:	beq	24abc <g_strcmp0@plt+0xf8f0>
   24640:	ldr	r4, [pc, #3376]	; 25378 <g_strcmp0@plt+0x101ac>
   24644:	ldr	r0, [r4]
   24648:	cmp	r0, #0
   2464c:	beq	24a34 <g_strcmp0@plt+0xf868>
   24650:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   24654:	b	246a8 <g_strcmp0@plt+0xf4dc>
   24658:	ldr	r0, [pc, #3356]	; 2537c <g_strcmp0@plt+0x101b0>
   2465c:	bl	14d64 <g_quark_from_static_string@plt>
   24660:	cmp	r0, r5
   24664:	str	r0, [r4, #20]
   24668:	bne	243fc <g_strcmp0@plt+0xf230>
   2466c:	bl	2279c <g_strcmp0@plt+0xd5d0>
   24670:	b	246a8 <g_strcmp0@plt+0xf4dc>
   24674:	ldr	r0, [pc, #3332]	; 25380 <g_strcmp0@plt+0x101b4>
   24678:	bl	14d64 <g_quark_from_static_string@plt>
   2467c:	str	r0, [r4, #40]	; 0x28
   24680:	b	24458 <g_strcmp0@plt+0xf28c>
   24684:	ldr	r0, [pc, #3320]	; 25384 <g_strcmp0@plt+0x101b8>
   24688:	bl	14d64 <g_quark_from_static_string@plt>
   2468c:	str	r0, [r4, #44]	; 0x2c
   24690:	b	2446c <g_strcmp0@plt+0xf2a0>
   24694:	mov	r3, r6
   24698:	ldr	r2, [pc, #3304]	; 25388 <g_strcmp0@plt+0x101bc>
   2469c:	mov	r1, #32
   246a0:	mov	r0, r7
   246a4:	bl	14668 <g_log@plt>
   246a8:	mov	r0, fp
   246ac:	bl	14bd8 <g_free@plt>
   246b0:	mov	r0, r7
   246b4:	bl	14bd8 <g_free@plt>
   246b8:	ldr	r2, [sp, #20]
   246bc:	ldr	r3, [r8]
   246c0:	cmp	r2, r3
   246c4:	bne	255ec <g_strcmp0@plt+0x10420>
   246c8:	add	sp, sp, #28
   246cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   246d0:	ldr	r0, [pc, #3252]	; 2538c <g_strcmp0@plt+0x101c0>
   246d4:	bl	14d64 <g_quark_from_static_string@plt>
   246d8:	cmp	r0, r5
   246dc:	str	r0, [r4, #28]
   246e0:	bne	24424 <g_strcmp0@plt+0xf258>
   246e4:	ldr	r2, [pc, #3236]	; 25390 <g_strcmp0@plt+0x101c4>
   246e8:	mov	r1, #32
   246ec:	mov	r0, #0
   246f0:	bl	14668 <g_log@plt>
   246f4:	ldr	r1, [pc, #3192]	; 25374 <g_strcmp0@plt+0x101a8>
   246f8:	ldr	r3, [pc, #3168]	; 25360 <g_strcmp0@plt+0x10194>
   246fc:	ldr	r2, [pc, #3208]	; 2538c <g_strcmp0@plt+0x101c0>
   24700:	ldr	r0, [r1]
   24704:	ldr	r1, [pc, #3152]	; 2535c <g_strcmp0@plt+0x10190>
   24708:	bl	2a300 <g_strcmp0@plt+0x15134>
   2470c:	mov	r4, r0
   24710:	bl	14bd8 <g_free@plt>
   24714:	cmp	r4, #0
   24718:	beq	24b90 <g_strcmp0@plt+0xf9c4>
   2471c:	ldr	r4, [pc, #3184]	; 25394 <g_strcmp0@plt+0x101c8>
   24720:	ldr	r0, [r4]
   24724:	cmp	r0, #0
   24728:	bne	24650 <g_strcmp0@plt+0xf484>
   2472c:	bl	1c8d8 <g_strcmp0@plt+0x770c>
   24730:	subs	r5, r0, #0
   24734:	beq	247e0 <g_strcmp0@plt+0xf614>
   24738:	bl	14404 <g_object_ref@plt>
   2473c:	ldr	r3, [r4]
   24740:	cmp	r3, #0
   24744:	mov	r6, r0
   24748:	beq	24758 <g_strcmp0@plt+0xf58c>
   2474c:	mov	r0, r3
   24750:	bl	14e90 <g_object_unref@plt>
   24754:	mov	r0, r6
   24758:	str	r6, [r4]
   2475c:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   24760:	mov	r0, r5
   24764:	bl	14e90 <g_object_unref@plt>
   24768:	b	246a8 <g_strcmp0@plt+0xf4dc>
   2476c:	ldr	r0, [pc, #3108]	; 25398 <g_strcmp0@plt+0x101cc>
   24770:	bl	14d64 <g_quark_from_static_string@plt>
   24774:	str	r0, [r4, #32]
   24778:	b	24430 <g_strcmp0@plt+0xf264>
   2477c:	ldr	r0, [pc, #3096]	; 2539c <g_strcmp0@plt+0x101d0>
   24780:	bl	14d64 <g_quark_from_static_string@plt>
   24784:	str	r0, [r4, #36]	; 0x24
   24788:	b	24444 <g_strcmp0@plt+0xf278>
   2478c:	ldr	r2, [pc, #3084]	; 253a0 <g_strcmp0@plt+0x101d4>
   24790:	mov	r1, #32
   24794:	mov	r0, #0
   24798:	bl	14668 <g_log@plt>
   2479c:	ldr	r1, [pc, #3024]	; 25374 <g_strcmp0@plt+0x101a8>
   247a0:	ldr	r3, [pc, #3000]	; 25360 <g_strcmp0@plt+0x10194>
   247a4:	ldr	r2, [pc, #3052]	; 25398 <g_strcmp0@plt+0x101cc>
   247a8:	ldr	r0, [r1]
   247ac:	ldr	r1, [pc, #2984]	; 2535c <g_strcmp0@plt+0x10190>
   247b0:	bl	2a300 <g_strcmp0@plt+0x15134>
   247b4:	mov	r4, r0
   247b8:	bl	14bd8 <g_free@plt>
   247bc:	cmp	r4, #0
   247c0:	beq	24ca4 <g_strcmp0@plt+0xfad8>
   247c4:	ldr	r4, [pc, #3032]	; 253a4 <g_strcmp0@plt+0x101d8>
   247c8:	ldr	r0, [r4]
   247cc:	cmp	r0, #0
   247d0:	bne	24650 <g_strcmp0@plt+0xf484>
   247d4:	bl	1c990 <g_strcmp0@plt+0x77c4>
   247d8:	subs	r5, r0, #0
   247dc:	bne	24738 <g_strcmp0@plt+0xf56c>
   247e0:	ldr	r0, [r4]
   247e4:	cmp	r0, #0
   247e8:	beq	24c9c <g_strcmp0@plt+0xfad0>
   247ec:	bl	14e90 <g_object_unref@plt>
   247f0:	mov	r0, r5
   247f4:	str	r5, [r4]
   247f8:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   247fc:	b	246a8 <g_strcmp0@plt+0xf4dc>
   24800:	ldr	r2, [pc, #2976]	; 253a8 <g_strcmp0@plt+0x101dc>
   24804:	mov	r1, #32
   24808:	mov	r0, #0
   2480c:	bl	14668 <g_log@plt>
   24810:	ldr	r1, [pc, #2908]	; 25374 <g_strcmp0@plt+0x101a8>
   24814:	ldr	r3, [pc, #2884]	; 25360 <g_strcmp0@plt+0x10194>
   24818:	ldr	r2, [pc, #2940]	; 2539c <g_strcmp0@plt+0x101d0>
   2481c:	ldr	r0, [r1]
   24820:	ldr	r1, [pc, #2868]	; 2535c <g_strcmp0@plt+0x10190>
   24824:	bl	2a300 <g_strcmp0@plt+0x15134>
   24828:	mov	r4, r0
   2482c:	bl	14bd8 <g_free@plt>
   24830:	cmp	r4, #0
   24834:	beq	24d78 <g_strcmp0@plt+0xfbac>
   24838:	ldr	r4, [pc, #2924]	; 253ac <g_strcmp0@plt+0x101e0>
   2483c:	ldr	r0, [r4]
   24840:	cmp	r0, #0
   24844:	bne	24650 <g_strcmp0@plt+0xf484>
   24848:	bl	1cadc <g_strcmp0@plt+0x7910>
   2484c:	subs	r5, r0, #0
   24850:	bne	24738 <g_strcmp0@plt+0xf56c>
   24854:	b	247e0 <g_strcmp0@plt+0xf614>
   24858:	ldr	r0, [pc, #2896]	; 253b0 <g_strcmp0@plt+0x101e4>
   2485c:	bl	14d64 <g_quark_from_static_string@plt>
   24860:	str	r0, [r4, #48]	; 0x30
   24864:	b	24480 <g_strcmp0@plt+0xf2b4>
   24868:	ldr	r2, [pc, #2884]	; 253b4 <g_strcmp0@plt+0x101e8>
   2486c:	mov	r1, #32
   24870:	mov	r0, #0
   24874:	bl	14668 <g_log@plt>
   24878:	ldr	r1, [pc, #2804]	; 25374 <g_strcmp0@plt+0x101a8>
   2487c:	ldr	r3, [pc, #2780]	; 25360 <g_strcmp0@plt+0x10194>
   24880:	ldr	r2, [pc, #2808]	; 25380 <g_strcmp0@plt+0x101b4>
   24884:	ldr	r0, [r1]
   24888:	ldr	r1, [pc, #2764]	; 2535c <g_strcmp0@plt+0x10190>
   2488c:	bl	2a300 <g_strcmp0@plt+0x15134>
   24890:	mov	r4, r0
   24894:	bl	14bd8 <g_free@plt>
   24898:	cmp	r4, #0
   2489c:	beq	249a0 <g_strcmp0@plt+0xf7d4>
   248a0:	ldr	r4, [pc, #2832]	; 253b8 <g_strcmp0@plt+0x101ec>
   248a4:	ldr	r0, [r4]
   248a8:	cmp	r0, #0
   248ac:	beq	24d3c <g_strcmp0@plt+0xfb70>
   248b0:	mov	r1, r9
   248b4:	bl	1cb1c <g_strcmp0@plt+0x7950>
   248b8:	b	246a8 <g_strcmp0@plt+0xf4dc>
   248bc:	mov	r0, r9
   248c0:	ldr	r1, [pc, #2804]	; 253bc <g_strcmp0@plt+0x101f0>
   248c4:	bl	151cc <g_strcmp0@plt>
   248c8:	cmp	r0, #0
   248cc:	bne	24b38 <g_strcmp0@plt+0xf96c>
   248d0:	ldr	r2, [pc, #2792]	; 253c0 <g_strcmp0@plt+0x101f4>
   248d4:	mov	r1, #32
   248d8:	bl	14668 <g_log@plt>
   248dc:	ldr	r1, [pc, #2704]	; 25374 <g_strcmp0@plt+0x101a8>
   248e0:	ldr	r3, [pc, #2680]	; 25360 <g_strcmp0@plt+0x10194>
   248e4:	ldr	r2, [pc, #2712]	; 25384 <g_strcmp0@plt+0x101b8>
   248e8:	ldr	r0, [r1]
   248ec:	ldr	r1, [pc, #2664]	; 2535c <g_strcmp0@plt+0x10190>
   248f0:	bl	2a300 <g_strcmp0@plt+0x15134>
   248f4:	mov	r4, r0
   248f8:	bl	14bd8 <g_free@plt>
   248fc:	cmp	r4, #0
   24900:	beq	25100 <g_strcmp0@plt+0xff34>
   24904:	ldr	r4, [pc, #2744]	; 253c4 <g_strcmp0@plt+0x101f8>
   24908:	ldr	r0, [r4]
   2490c:	cmp	r0, #0
   24910:	beq	24fb8 <g_strcmp0@plt+0xfdec>
   24914:	bl	1cee8 <g_strcmp0@plt+0x7d1c>
   24918:	b	246a8 <g_strcmp0@plt+0xf4dc>
   2491c:	ldr	r0, [pc, #2724]	; 253c8 <g_strcmp0@plt+0x101fc>
   24920:	bl	14d64 <g_quark_from_static_string@plt>
   24924:	str	r0, [r4, #64]	; 0x40
   24928:	b	244d0 <g_strcmp0@plt+0xf304>
   2492c:	ldr	r0, [pc, #2712]	; 253cc <g_strcmp0@plt+0x10200>
   24930:	bl	14d64 <g_quark_from_static_string@plt>
   24934:	str	r0, [r4, #68]	; 0x44
   24938:	b	244e4 <g_strcmp0@plt+0xf318>
   2493c:	ldr	r2, [pc, #2700]	; 253d0 <g_strcmp0@plt+0x10204>
   24940:	mov	r1, #32
   24944:	mov	r0, #0
   24948:	bl	14668 <g_log@plt>
   2494c:	ldr	r1, [pc, #2592]	; 25374 <g_strcmp0@plt+0x101a8>
   24950:	ldr	r3, [pc, #2568]	; 25360 <g_strcmp0@plt+0x10194>
   24954:	ldr	r2, [pc, #2672]	; 253cc <g_strcmp0@plt+0x10200>
   24958:	ldr	r0, [r1]
   2495c:	ldr	r1, [pc, #2552]	; 2535c <g_strcmp0@plt+0x10190>
   24960:	bl	2a300 <g_strcmp0@plt+0x15134>
   24964:	mov	r4, r0
   24968:	bl	14bd8 <g_free@plt>
   2496c:	cmp	r4, #0
   24970:	beq	25224 <g_strcmp0@plt+0x10058>
   24974:	ldr	r4, [pc, #2648]	; 253d4 <g_strcmp0@plt+0x10208>
   24978:	ldr	r0, [r4]
   2497c:	cmp	r0, #0
   24980:	ldrne	r2, [pc, #2640]	; 253d8 <g_strcmp0@plt+0x1020c>
   24984:	beq	251ec <g_strcmp0@plt+0x10020>
   24988:	mov	r1, #32
   2498c:	mov	r0, #0
   24990:	bl	14668 <g_log@plt>
   24994:	ldr	r0, [r4]
   24998:	bl	18ea8 <g_strcmp0@plt+0x3cdc>
   2499c:	b	246a8 <g_strcmp0@plt+0xf4dc>
   249a0:	mov	r0, r4
   249a4:	ldr	r2, [pc, #2608]	; 253dc <g_strcmp0@plt+0x10210>
   249a8:	mov	r1, #16
   249ac:	bl	14668 <g_log@plt>
   249b0:	b	246a8 <g_strcmp0@plt+0xf4dc>
   249b4:	ldr	r0, [pc, #2596]	; 253e0 <g_strcmp0@plt+0x10214>
   249b8:	bl	14d64 <g_quark_from_static_string@plt>
   249bc:	str	r0, [r4, #52]	; 0x34
   249c0:	b	24494 <g_strcmp0@plt+0xf2c8>
   249c4:	ldr	r0, [pc, #2584]	; 253e4 <g_strcmp0@plt+0x10218>
   249c8:	bl	14d64 <g_quark_from_static_string@plt>
   249cc:	str	r0, [r4, #56]	; 0x38
   249d0:	b	244a8 <g_strcmp0@plt+0xf2dc>
   249d4:	mov	r0, r9
   249d8:	ldr	r1, [pc, #2436]	; 25364 <g_strcmp0@plt+0x10198>
   249dc:	bl	151cc <g_strcmp0@plt>
   249e0:	cmp	r0, #0
   249e4:	bne	24c34 <g_strcmp0@plt+0xfa68>
   249e8:	ldr	r2, [pc, #2552]	; 253e8 <g_strcmp0@plt+0x1021c>
   249ec:	mov	r1, #32
   249f0:	bl	14668 <g_log@plt>
   249f4:	ldr	r1, [pc, #2424]	; 25374 <g_strcmp0@plt+0x101a8>
   249f8:	ldr	r3, [pc, #2400]	; 25360 <g_strcmp0@plt+0x10194>
   249fc:	ldr	r2, [pc, #2476]	; 253b0 <g_strcmp0@plt+0x101e4>
   24a00:	ldr	r0, [r1]
   24a04:	ldr	r1, [pc, #2384]	; 2535c <g_strcmp0@plt+0x10190>
   24a08:	bl	2a300 <g_strcmp0@plt+0x15134>
   24a0c:	mov	r4, r0
   24a10:	bl	14bd8 <g_free@plt>
   24a14:	cmp	r4, #0
   24a18:	beq	24ff0 <g_strcmp0@plt+0xfe24>
   24a1c:	bl	1bf38 <g_strcmp0@plt+0x6d6c>
   24a20:	mov	r4, r0
   24a24:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   24a28:	cmp	r4, #0
   24a2c:	bne	245cc <g_strcmp0@plt+0xf400>
   24a30:	b	246a8 <g_strcmp0@plt+0xf4dc>
   24a34:	bl	1c820 <g_strcmp0@plt+0x7654>
   24a38:	subs	r5, r0, #0
   24a3c:	bne	24738 <g_strcmp0@plt+0xf56c>
   24a40:	b	247e0 <g_strcmp0@plt+0xf614>
   24a44:	ldr	r0, [pc, #2464]	; 253ec <g_strcmp0@plt+0x10220>
   24a48:	bl	14d64 <g_quark_from_static_string@plt>
   24a4c:	str	r0, [r4, #60]	; 0x3c
   24a50:	b	244bc <g_strcmp0@plt+0xf2f0>
   24a54:	ldr	r2, [pc, #2452]	; 253f0 <g_strcmp0@plt+0x10224>
   24a58:	mov	r1, #32
   24a5c:	mov	r0, #0
   24a60:	bl	14668 <g_log@plt>
   24a64:	ldr	r1, [pc, #2312]	; 25374 <g_strcmp0@plt+0x101a8>
   24a68:	ldr	r3, [pc, #2288]	; 25360 <g_strcmp0@plt+0x10194>
   24a6c:	ldr	r2, [pc, #2412]	; 253e0 <g_strcmp0@plt+0x10214>
   24a70:	ldr	r0, [r1]
   24a74:	ldr	r1, [pc, #2272]	; 2535c <g_strcmp0@plt+0x10190>
   24a78:	bl	2a300 <g_strcmp0@plt+0x15134>
   24a7c:	mov	r4, r0
   24a80:	bl	14bd8 <g_free@plt>
   24a84:	cmp	r4, #0
   24a88:	beq	25004 <g_strcmp0@plt+0xfe38>
   24a8c:	ldr	r4, [pc, #2400]	; 253f4 <g_strcmp0@plt+0x10228>
   24a90:	ldr	r0, [r4]
   24a94:	cmp	r0, #0
   24a98:	ldrne	r2, [pc, #2392]	; 253f8 <g_strcmp0@plt+0x1022c>
   24a9c:	bne	24988 <g_strcmp0@plt+0xf7bc>
   24aa0:	ldr	r2, [pc, #2388]	; 253fc <g_strcmp0@plt+0x10230>
   24aa4:	mov	r1, #32
   24aa8:	bl	14668 <g_log@plt>
   24aac:	bl	1bc68 <g_strcmp0@plt+0x6a9c>
   24ab0:	subs	r5, r0, #0
   24ab4:	bne	24738 <g_strcmp0@plt+0xf56c>
   24ab8:	b	247e0 <g_strcmp0@plt+0xf614>
   24abc:	mov	r0, r4
   24ac0:	ldr	r2, [pc, #2360]	; 25400 <g_strcmp0@plt+0x10234>
   24ac4:	mov	r1, #16
   24ac8:	bl	14668 <g_log@plt>
   24acc:	b	246a8 <g_strcmp0@plt+0xf4dc>
   24ad0:	ldr	r2, [pc, #2348]	; 25404 <g_strcmp0@plt+0x10238>
   24ad4:	mov	r1, #32
   24ad8:	mov	r0, #0
   24adc:	bl	14668 <g_log@plt>
   24ae0:	ldr	r1, [pc, #2188]	; 25374 <g_strcmp0@plt+0x101a8>
   24ae4:	ldr	r3, [pc, #2164]	; 25360 <g_strcmp0@plt+0x10194>
   24ae8:	ldr	r2, [pc, #2292]	; 253e4 <g_strcmp0@plt+0x10218>
   24aec:	ldr	r0, [r1]
   24af0:	ldr	r1, [pc, #2148]	; 2535c <g_strcmp0@plt+0x10190>
   24af4:	bl	2a300 <g_strcmp0@plt+0x15134>
   24af8:	mov	r4, r0
   24afc:	bl	14bd8 <g_free@plt>
   24b00:	cmp	r4, #0
   24b04:	beq	250c8 <g_strcmp0@plt+0xfefc>
   24b08:	ldr	r4, [pc, #2296]	; 25408 <g_strcmp0@plt+0x1023c>
   24b0c:	ldr	r0, [r4]
   24b10:	cmp	r0, #0
   24b14:	ldrne	r2, [pc, #2288]	; 2540c <g_strcmp0@plt+0x10240>
   24b18:	bne	24988 <g_strcmp0@plt+0xf7bc>
   24b1c:	ldr	r2, [pc, #2284]	; 25410 <g_strcmp0@plt+0x10244>
   24b20:	mov	r1, #32
   24b24:	bl	14668 <g_log@plt>
   24b28:	bl	1bd10 <g_strcmp0@plt+0x6b44>
   24b2c:	subs	r5, r0, #0
   24b30:	bne	24738 <g_strcmp0@plt+0xf56c>
   24b34:	b	247e0 <g_strcmp0@plt+0xf614>
   24b38:	ldr	r2, [pc, #2260]	; 25414 <g_strcmp0@plt+0x10248>
   24b3c:	mov	r1, #32
   24b40:	mov	r0, #0
   24b44:	bl	14668 <g_log@plt>
   24b48:	ldr	r1, [pc, #2084]	; 25374 <g_strcmp0@plt+0x101a8>
   24b4c:	ldr	r3, [pc, #2060]	; 25360 <g_strcmp0@plt+0x10194>
   24b50:	ldr	r2, [pc, #2092]	; 25384 <g_strcmp0@plt+0x101b8>
   24b54:	ldr	r0, [r1]
   24b58:	ldr	r1, [pc, #2044]	; 2535c <g_strcmp0@plt+0x10190>
   24b5c:	bl	2a300 <g_strcmp0@plt+0x15134>
   24b60:	mov	r4, r0
   24b64:	bl	14bd8 <g_free@plt>
   24b68:	cmp	r4, #0
   24b6c:	beq	250ec <g_strcmp0@plt+0xff20>
   24b70:	ldr	r4, [pc, #2124]	; 253c4 <g_strcmp0@plt+0x101f8>
   24b74:	ldr	r0, [r4]
   24b78:	cmp	r0, #0
   24b7c:	bne	24650 <g_strcmp0@plt+0xf484>
   24b80:	bl	1d078 <g_strcmp0@plt+0x7eac>
   24b84:	subs	r5, r0, #0
   24b88:	bne	24738 <g_strcmp0@plt+0xf56c>
   24b8c:	b	247e0 <g_strcmp0@plt+0xf614>
   24b90:	mov	r0, r4
   24b94:	ldr	r2, [pc, #2172]	; 25418 <g_strcmp0@plt+0x1024c>
   24b98:	mov	r1, #16
   24b9c:	bl	14668 <g_log@plt>
   24ba0:	b	246a8 <g_strcmp0@plt+0xf4dc>
   24ba4:	ldr	r2, [pc, #2160]	; 2541c <g_strcmp0@plt+0x10250>
   24ba8:	mov	r1, #32
   24bac:	mov	r0, #0
   24bb0:	bl	14668 <g_log@plt>
   24bb4:	ldr	r1, [pc, #1976]	; 25374 <g_strcmp0@plt+0x101a8>
   24bb8:	ldr	r3, [pc, #1952]	; 25360 <g_strcmp0@plt+0x10194>
   24bbc:	ldr	r2, [pc, #2088]	; 253ec <g_strcmp0@plt+0x10220>
   24bc0:	ldr	r0, [r1]
   24bc4:	ldr	r1, [pc, #1936]	; 2535c <g_strcmp0@plt+0x10190>
   24bc8:	bl	2a300 <g_strcmp0@plt+0x15134>
   24bcc:	mov	r4, r0
   24bd0:	bl	14bd8 <g_free@plt>
   24bd4:	cmp	r4, #0
   24bd8:	beq	251bc <g_strcmp0@plt+0xfff0>
   24bdc:	ldr	r4, [pc, #2108]	; 25420 <g_strcmp0@plt+0x10254>
   24be0:	ldr	r0, [r4]
   24be4:	cmp	r0, #0
   24be8:	ldrne	r2, [pc, #2100]	; 25424 <g_strcmp0@plt+0x10258>
   24bec:	bne	24988 <g_strcmp0@plt+0xf7bc>
   24bf0:	ldr	r2, [pc, #2096]	; 25428 <g_strcmp0@plt+0x1025c>
   24bf4:	mov	r1, #32
   24bf8:	bl	14668 <g_log@plt>
   24bfc:	bl	1bbc0 <g_strcmp0@plt+0x69f4>
   24c00:	subs	r5, r0, #0
   24c04:	beq	25334 <g_strcmp0@plt+0x10168>
   24c08:	bl	14404 <g_object_ref@plt>
   24c0c:	ldr	r3, [r4]
   24c10:	cmp	r3, #0
   24c14:	mov	r6, r0
   24c18:	beq	24c28 <g_strcmp0@plt+0xfa5c>
   24c1c:	mov	r0, r3
   24c20:	bl	14e90 <g_object_unref@plt>
   24c24:	mov	r0, r6
   24c28:	str	r6, [r4]
   24c2c:	bl	1b734 <g_strcmp0@plt+0x6568>
   24c30:	b	24760 <g_strcmp0@plt+0xf594>
   24c34:	ldr	r2, [pc, #2032]	; 2542c <g_strcmp0@plt+0x10260>
   24c38:	mov	r1, #32
   24c3c:	mov	r0, #0
   24c40:	bl	14668 <g_log@plt>
   24c44:	ldr	r1, [pc, #1832]	; 25374 <g_strcmp0@plt+0x101a8>
   24c48:	ldr	r3, [pc, #1808]	; 25360 <g_strcmp0@plt+0x10194>
   24c4c:	ldr	r2, [pc, #1884]	; 253b0 <g_strcmp0@plt+0x101e4>
   24c50:	ldr	r0, [r1]
   24c54:	ldr	r1, [pc, #1792]	; 2535c <g_strcmp0@plt+0x10190>
   24c58:	bl	2a300 <g_strcmp0@plt+0x15134>
   24c5c:	mov	r4, r0
   24c60:	bl	14bd8 <g_free@plt>
   24c64:	cmp	r4, #0
   24c68:	beq	251a8 <g_strcmp0@plt+0xffdc>
   24c6c:	ldr	r4, [pc, #1980]	; 25430 <g_strcmp0@plt+0x10264>
   24c70:	ldr	r0, [r4]
   24c74:	cmp	r0, #0
   24c78:	ldrne	r2, [pc, #1972]	; 25434 <g_strcmp0@plt+0x10268>
   24c7c:	bne	24988 <g_strcmp0@plt+0xf7bc>
   24c80:	ldr	r2, [pc, #1968]	; 25438 <g_strcmp0@plt+0x1026c>
   24c84:	mov	r1, #32
   24c88:	bl	14668 <g_log@plt>
   24c8c:	bl	1bf38 <g_strcmp0@plt+0x6d6c>
   24c90:	subs	r5, r0, #0
   24c94:	bne	24738 <g_strcmp0@plt+0xf56c>
   24c98:	b	247e0 <g_strcmp0@plt+0xf614>
   24c9c:	mov	r0, #0
   24ca0:	b	24650 <g_strcmp0@plt+0xf484>
   24ca4:	mov	r0, r4
   24ca8:	ldr	r2, [pc, #1932]	; 2543c <g_strcmp0@plt+0x10270>
   24cac:	mov	r1, #16
   24cb0:	bl	14668 <g_log@plt>
   24cb4:	b	246a8 <g_strcmp0@plt+0xf4dc>
   24cb8:	ldr	r0, [pc, #1920]	; 25440 <g_strcmp0@plt+0x10274>
   24cbc:	bl	14d64 <g_quark_from_static_string@plt>
   24cc0:	str	r0, [r4, #72]	; 0x48
   24cc4:	b	244f8 <g_strcmp0@plt+0xf32c>
   24cc8:	mov	r0, r9
   24ccc:	ldr	r1, [pc, #1904]	; 25444 <g_strcmp0@plt+0x10278>
   24cd0:	bl	151cc <g_strcmp0@plt>
   24cd4:	subs	r5, r0, #0
   24cd8:	bne	24ebc <g_strcmp0@plt+0xfcf0>
   24cdc:	ldr	r2, [pc, #1892]	; 25448 <g_strcmp0@plt+0x1027c>
   24ce0:	mov	r1, #32
   24ce4:	bl	14668 <g_log@plt>
   24ce8:	ldr	r1, [pc, #1668]	; 25374 <g_strcmp0@plt+0x101a8>
   24cec:	ldr	r3, [pc, #1644]	; 25360 <g_strcmp0@plt+0x10194>
   24cf0:	ldr	r2, [pc, #1744]	; 253c8 <g_strcmp0@plt+0x101fc>
   24cf4:	ldr	r0, [r1]
   24cf8:	ldr	r1, [pc, #1628]	; 2535c <g_strcmp0@plt+0x10190>
   24cfc:	bl	2a300 <g_strcmp0@plt+0x15134>
   24d00:	mov	r4, r0
   24d04:	bl	14bd8 <g_free@plt>
   24d08:	cmp	r4, #0
   24d0c:	beq	2530c <g_strcmp0@plt+0x10140>
   24d10:	ldr	r4, [pc, #1844]	; 2544c <g_strcmp0@plt+0x10280>
   24d14:	ldr	r0, [r4]
   24d18:	cmp	r0, #0
   24d1c:	beq	25274 <g_strcmp0@plt+0x100a8>
   24d20:	mov	r0, r5
   24d24:	ldr	r2, [pc, #1828]	; 25450 <g_strcmp0@plt+0x10284>
   24d28:	mov	r1, #32
   24d2c:	bl	14668 <g_log@plt>
   24d30:	ldr	r0, [r4]
   24d34:	bl	1c470 <g_strcmp0@plt+0x72a4>
   24d38:	b	246a8 <g_strcmp0@plt+0xf4dc>
   24d3c:	bl	1cbc8 <g_strcmp0@plt+0x79fc>
   24d40:	subs	r5, r0, #0
   24d44:	beq	25180 <g_strcmp0@plt+0xffb4>
   24d48:	bl	14404 <g_object_ref@plt>
   24d4c:	ldr	r3, [r4]
   24d50:	cmp	r3, #0
   24d54:	mov	r6, r0
   24d58:	beq	25028 <g_strcmp0@plt+0xfe5c>
   24d5c:	mov	r0, r3
   24d60:	bl	14e90 <g_object_unref@plt>
   24d64:	mov	r1, r9
   24d68:	mov	r0, r6
   24d6c:	str	r6, [r4]
   24d70:	bl	1cb1c <g_strcmp0@plt+0x7950>
   24d74:	b	24760 <g_strcmp0@plt+0xf594>
   24d78:	mov	r0, r4
   24d7c:	ldr	r2, [pc, #1744]	; 25454 <g_strcmp0@plt+0x10288>
   24d80:	mov	r1, #16
   24d84:	bl	14668 <g_log@plt>
   24d88:	b	246a8 <g_strcmp0@plt+0xf4dc>
   24d8c:	ldr	r0, [pc, #1732]	; 25458 <g_strcmp0@plt+0x1028c>
   24d90:	bl	14d64 <g_quark_from_static_string@plt>
   24d94:	str	r0, [r4, #76]	; 0x4c
   24d98:	b	2450c <g_strcmp0@plt+0xf340>
   24d9c:	ldr	r0, [pc, #1720]	; 2545c <g_strcmp0@plt+0x10290>
   24da0:	bl	14d64 <g_quark_from_static_string@plt>
   24da4:	str	r0, [r4, #80]	; 0x50
   24da8:	b	24520 <g_strcmp0@plt+0xf354>
   24dac:	ldr	r2, [pc, #1708]	; 25460 <g_strcmp0@plt+0x10294>
   24db0:	mov	r1, #32
   24db4:	mov	r0, #0
   24db8:	bl	14668 <g_log@plt>
   24dbc:	ldr	r1, [pc, #1456]	; 25374 <g_strcmp0@plt+0x101a8>
   24dc0:	ldr	r3, [pc, #1432]	; 25360 <g_strcmp0@plt+0x10194>
   24dc4:	ldr	r2, [pc, #1652]	; 25440 <g_strcmp0@plt+0x10274>
   24dc8:	ldr	r0, [r1]
   24dcc:	ldr	r1, [pc, #1416]	; 2535c <g_strcmp0@plt+0x10190>
   24dd0:	bl	2a300 <g_strcmp0@plt+0x15134>
   24dd4:	mov	r4, r0
   24dd8:	bl	14bd8 <g_free@plt>
   24ddc:	cmp	r4, #0
   24de0:	beq	252b8 <g_strcmp0@plt+0x100ec>
   24de4:	ldr	r4, [pc, #1656]	; 25464 <g_strcmp0@plt+0x10298>
   24de8:	ldr	r0, [r4]
   24dec:	cmp	r0, #0
   24df0:	ldrne	r2, [pc, #1648]	; 25468 <g_strcmp0@plt+0x1029c>
   24df4:	bne	24988 <g_strcmp0@plt+0xf7bc>
   24df8:	ldr	r2, [pc, #1644]	; 2546c <g_strcmp0@plt+0x102a0>
   24dfc:	mov	r1, #32
   24e00:	bl	14668 <g_log@plt>
   24e04:	bl	1be80 <g_strcmp0@plt+0x6cb4>
   24e08:	subs	r5, r0, #0
   24e0c:	bne	24738 <g_strcmp0@plt+0xf56c>
   24e10:	b	247e0 <g_strcmp0@plt+0xf614>
   24e14:	ldr	r0, [pc, #1620]	; 25470 <g_strcmp0@plt+0x102a4>
   24e18:	bl	14d64 <g_quark_from_static_string@plt>
   24e1c:	str	r0, [r4, #84]	; 0x54
   24e20:	b	24534 <g_strcmp0@plt+0xf368>
   24e24:	ldr	r2, [pc, #1608]	; 25474 <g_strcmp0@plt+0x102a8>
   24e28:	mov	r1, #32
   24e2c:	mov	r0, #0
   24e30:	bl	14668 <g_log@plt>
   24e34:	ldr	r1, [pc, #1336]	; 25374 <g_strcmp0@plt+0x101a8>
   24e38:	ldr	r3, [pc, #1312]	; 25360 <g_strcmp0@plt+0x10194>
   24e3c:	ldr	r2, [pc, #1556]	; 25458 <g_strcmp0@plt+0x1028c>
   24e40:	ldr	r0, [r1]
   24e44:	ldr	r1, [pc, #1296]	; 2535c <g_strcmp0@plt+0x10190>
   24e48:	bl	2a300 <g_strcmp0@plt+0x15134>
   24e4c:	mov	r4, r0
   24e50:	bl	14bd8 <g_free@plt>
   24e54:	cmp	r4, #0
   24e58:	beq	25320 <g_strcmp0@plt+0x10154>
   24e5c:	ldr	r4, [pc, #1556]	; 25478 <g_strcmp0@plt+0x102ac>
   24e60:	ldr	r0, [r4]
   24e64:	cmp	r0, #0
   24e68:	ldrne	r2, [pc, #1548]	; 2547c <g_strcmp0@plt+0x102b0>
   24e6c:	bne	24988 <g_strcmp0@plt+0xf7bc>
   24e70:	ldr	r2, [pc, #1544]	; 25480 <g_strcmp0@plt+0x102b4>
   24e74:	mov	r1, #32
   24e78:	bl	14668 <g_log@plt>
   24e7c:	bl	1c6b0 <g_strcmp0@plt+0x74e4>
   24e80:	subs	r6, r0, #0
   24e84:	beq	24f20 <g_strcmp0@plt+0xfd54>
   24e88:	bl	14404 <g_object_ref@plt>
   24e8c:	ldr	r3, [r4]
   24e90:	cmp	r3, #0
   24e94:	mov	r5, r0
   24e98:	beq	24ea8 <g_strcmp0@plt+0xfcdc>
   24e9c:	mov	r0, r3
   24ea0:	bl	14e90 <g_object_unref@plt>
   24ea4:	mov	r0, r5
   24ea8:	str	r5, [r4]
   24eac:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   24eb0:	mov	r0, r6
   24eb4:	bl	14e90 <g_object_unref@plt>
   24eb8:	b	246a8 <g_strcmp0@plt+0xf4dc>
   24ebc:	ldr	r2, [pc, #1472]	; 25484 <g_strcmp0@plt+0x102b8>
   24ec0:	mov	r1, #32
   24ec4:	mov	r0, #0
   24ec8:	bl	14668 <g_log@plt>
   24ecc:	ldr	r1, [pc, #1184]	; 25374 <g_strcmp0@plt+0x101a8>
   24ed0:	ldr	r3, [pc, #1160]	; 25360 <g_strcmp0@plt+0x10194>
   24ed4:	ldr	r2, [pc, #1260]	; 253c8 <g_strcmp0@plt+0x101fc>
   24ed8:	ldr	r0, [r1]
   24edc:	ldr	r1, [pc, #1144]	; 2535c <g_strcmp0@plt+0x10190>
   24ee0:	bl	2a300 <g_strcmp0@plt+0x15134>
   24ee4:	mov	r4, r0
   24ee8:	bl	14bd8 <g_free@plt>
   24eec:	cmp	r4, #0
   24ef0:	beq	252f8 <g_strcmp0@plt+0x1012c>
   24ef4:	ldr	r4, [pc, #1360]	; 2544c <g_strcmp0@plt+0x10280>
   24ef8:	ldr	r0, [r4]
   24efc:	cmp	r0, #0
   24f00:	ldrne	r2, [pc, #1408]	; 25488 <g_strcmp0@plt+0x102bc>
   24f04:	bne	24988 <g_strcmp0@plt+0xf7bc>
   24f08:	ldr	r2, [pc, #1404]	; 2548c <g_strcmp0@plt+0x102c0>
   24f0c:	mov	r1, #32
   24f10:	bl	14668 <g_log@plt>
   24f14:	bl	1c5f4 <g_strcmp0@plt+0x7428>
   24f18:	subs	r6, r0, #0
   24f1c:	bne	24e88 <g_strcmp0@plt+0xfcbc>
   24f20:	ldr	r0, [r4]
   24f24:	cmp	r0, #0
   24f28:	beq	24c9c <g_strcmp0@plt+0xfad0>
   24f2c:	bl	14e90 <g_object_unref@plt>
   24f30:	mov	r0, r6
   24f34:	str	r6, [r4]
   24f38:	bl	18d38 <g_strcmp0@plt+0x3b6c>
   24f3c:	b	246a8 <g_strcmp0@plt+0xf4dc>
   24f40:	ldr	r0, [pc, #1352]	; 25490 <g_strcmp0@plt+0x102c4>
   24f44:	bl	14d64 <g_quark_from_static_string@plt>
   24f48:	str	r0, [r4, #88]	; 0x58
   24f4c:	b	24548 <g_strcmp0@plt+0xf37c>
   24f50:	ldr	r2, [pc, #1340]	; 25494 <g_strcmp0@plt+0x102c8>
   24f54:	mov	r1, #32
   24f58:	mov	r0, #0
   24f5c:	bl	14668 <g_log@plt>
   24f60:	ldr	r1, [pc, #1036]	; 25374 <g_strcmp0@plt+0x101a8>
   24f64:	ldr	r3, [pc, #1012]	; 25360 <g_strcmp0@plt+0x10194>
   24f68:	ldr	r2, [pc, #1260]	; 2545c <g_strcmp0@plt+0x10290>
   24f6c:	ldr	r0, [r1]
   24f70:	ldr	r1, [pc, #996]	; 2535c <g_strcmp0@plt+0x10190>
   24f74:	bl	2a300 <g_strcmp0@plt+0x15134>
   24f78:	mov	r4, r0
   24f7c:	bl	14bd8 <g_free@plt>
   24f80:	cmp	r4, #0
   24f84:	beq	25544 <g_strcmp0@plt+0x10378>
   24f88:	ldr	r4, [pc, #1288]	; 25498 <g_strcmp0@plt+0x102cc>
   24f8c:	ldr	r0, [r4]
   24f90:	cmp	r0, #0
   24f94:	ldrne	r2, [pc, #1280]	; 2549c <g_strcmp0@plt+0x102d0>
   24f98:	bne	24988 <g_strcmp0@plt+0xf7bc>
   24f9c:	ldr	r2, [pc, #1276]	; 254a0 <g_strcmp0@plt+0x102d4>
   24fa0:	mov	r1, #32
   24fa4:	bl	14668 <g_log@plt>
   24fa8:	bl	1c768 <g_strcmp0@plt+0x759c>
   24fac:	subs	r5, r0, #0
   24fb0:	bne	24738 <g_strcmp0@plt+0xf56c>
   24fb4:	b	247e0 <g_strcmp0@plt+0xf614>
   24fb8:	bl	1d078 <g_strcmp0@plt+0x7eac>
   24fbc:	subs	r5, r0, #0
   24fc0:	beq	252d8 <g_strcmp0@plt+0x1010c>
   24fc4:	bl	14404 <g_object_ref@plt>
   24fc8:	ldr	r3, [r4]
   24fcc:	cmp	r3, #0
   24fd0:	mov	r6, r0
   24fd4:	beq	24fe4 <g_strcmp0@plt+0xfe18>
   24fd8:	mov	r0, r3
   24fdc:	bl	14e90 <g_object_unref@plt>
   24fe0:	mov	r0, r6
   24fe4:	str	r6, [r4]
   24fe8:	bl	1cee8 <g_strcmp0@plt+0x7d1c>
   24fec:	b	24760 <g_strcmp0@plt+0xf594>
   24ff0:	mov	r0, r4
   24ff4:	ldr	r2, [pc, #1192]	; 254a4 <g_strcmp0@plt+0x102d8>
   24ff8:	mov	r1, #16
   24ffc:	bl	14668 <g_log@plt>
   25000:	b	246a8 <g_strcmp0@plt+0xf4dc>
   25004:	mov	r0, r4
   25008:	ldr	r2, [pc, #1176]	; 254a8 <g_strcmp0@plt+0x102dc>
   2500c:	mov	r1, #16
   25010:	bl	14668 <g_log@plt>
   25014:	b	246a8 <g_strcmp0@plt+0xf4dc>
   25018:	ldr	r0, [pc, #1164]	; 254ac <g_strcmp0@plt+0x102e0>
   2501c:	bl	14d64 <g_quark_from_static_string@plt>
   25020:	str	r0, [r4, #92]	; 0x5c
   25024:	b	2455c <g_strcmp0@plt+0xf390>
   25028:	mov	r1, r9
   2502c:	str	r0, [r4]
   25030:	bl	1cb1c <g_strcmp0@plt+0x7950>
   25034:	b	24760 <g_strcmp0@plt+0xf594>
   25038:	ldr	r5, [pc, #820]	; 25374 <g_strcmp0@plt+0x101a8>
   2503c:	ldr	r2, [pc, #1132]	; 254b0 <g_strcmp0@plt+0x102e4>
   25040:	mov	r1, #32
   25044:	mov	r0, #0
   25048:	bl	14668 <g_log@plt>
   2504c:	ldr	r3, [pc, #780]	; 25360 <g_strcmp0@plt+0x10194>
   25050:	ldr	r2, [pc, #1048]	; 25470 <g_strcmp0@plt+0x102a4>
   25054:	ldr	r1, [pc, #768]	; 2535c <g_strcmp0@plt+0x10190>
   25058:	ldr	r0, [r5]
   2505c:	bl	2a300 <g_strcmp0@plt+0x15134>
   25060:	mov	r4, r0
   25064:	bl	14bd8 <g_free@plt>
   25068:	cmp	r4, #0
   2506c:	beq	255a0 <g_strcmp0@plt+0x103d4>
   25070:	ldr	r4, [pc, #1084]	; 254b4 <g_strcmp0@plt+0x102e8>
   25074:	ldr	r0, [r4]
   25078:	cmp	r0, #0
   2507c:	ldrne	r2, [pc, #1076]	; 254b8 <g_strcmp0@plt+0x102ec>
   25080:	bne	24988 <g_strcmp0@plt+0xf7bc>
   25084:	ldr	r2, [pc, #1072]	; 254bc <g_strcmp0@plt+0x102f0>
   25088:	mov	r1, #32
   2508c:	bl	14668 <g_log@plt>
   25090:	ldr	r3, [pc, #712]	; 25360 <g_strcmp0@plt+0x10194>
   25094:	ldr	r2, [pc, #980]	; 25470 <g_strcmp0@plt+0x102a4>
   25098:	ldr	r1, [pc, #700]	; 2535c <g_strcmp0@plt+0x10190>
   2509c:	ldr	r0, [r5]
   250a0:	bl	2a300 <g_strcmp0@plt+0x15134>
   250a4:	mov	r6, r0
   250a8:	bl	1b6ec <g_strcmp0@plt+0x6520>
   250ac:	mov	r5, r0
   250b0:	mov	r0, r6
   250b4:	bl	14bd8 <g_free@plt>
   250b8:	cmp	r5, #0
   250bc:	beq	247e0 <g_strcmp0@plt+0xf614>
   250c0:	mov	r0, r5
   250c4:	b	24738 <g_strcmp0@plt+0xf56c>
   250c8:	mov	r0, r4
   250cc:	ldr	r2, [pc, #1004]	; 254c0 <g_strcmp0@plt+0x102f4>
   250d0:	mov	r1, #16
   250d4:	bl	14668 <g_log@plt>
   250d8:	b	246a8 <g_strcmp0@plt+0xf4dc>
   250dc:	ldr	r0, [pc, #992]	; 254c4 <g_strcmp0@plt+0x102f8>
   250e0:	bl	14d64 <g_quark_from_static_string@plt>
   250e4:	str	r0, [r4, #96]	; 0x60
   250e8:	b	24570 <g_strcmp0@plt+0xf3a4>
   250ec:	mov	r0, r4
   250f0:	ldr	r2, [pc, #976]	; 254c8 <g_strcmp0@plt+0x102fc>
   250f4:	mov	r1, #16
   250f8:	bl	14668 <g_log@plt>
   250fc:	b	246a8 <g_strcmp0@plt+0xf4dc>
   25100:	mov	r0, r4
   25104:	ldr	r2, [pc, #960]	; 254cc <g_strcmp0@plt+0x10300>
   25108:	mov	r1, #16
   2510c:	bl	14668 <g_log@plt>
   25110:	b	246a8 <g_strcmp0@plt+0xf4dc>
   25114:	ldr	r5, [pc, #600]	; 25374 <g_strcmp0@plt+0x101a8>
   25118:	ldr	r2, [pc, #944]	; 254d0 <g_strcmp0@plt+0x10304>
   2511c:	mov	r1, #32
   25120:	mov	r0, #0
   25124:	bl	14668 <g_log@plt>
   25128:	ldr	r3, [pc, #560]	; 25360 <g_strcmp0@plt+0x10194>
   2512c:	ldr	r2, [pc, #860]	; 25490 <g_strcmp0@plt+0x102c4>
   25130:	ldr	r1, [pc, #548]	; 2535c <g_strcmp0@plt+0x10190>
   25134:	ldr	r0, [r5]
   25138:	bl	2a300 <g_strcmp0@plt+0x15134>
   2513c:	mov	r4, r0
   25140:	bl	14bd8 <g_free@plt>
   25144:	cmp	r4, #0
   25148:	beq	255b4 <g_strcmp0@plt+0x103e8>
   2514c:	ldr	r4, [pc, #896]	; 254d4 <g_strcmp0@plt+0x10308>
   25150:	ldr	r0, [r4]
   25154:	cmp	r0, #0
   25158:	beq	25558 <g_strcmp0@plt+0x1038c>
   2515c:	ldr	r2, [pc, #884]	; 254d8 <g_strcmp0@plt+0x1030c>
   25160:	mov	r1, #32
   25164:	mov	r0, #0
   25168:	bl	14668 <g_log@plt>
   2516c:	ldr	r0, [r4]
   25170:	bl	29190 <g_strcmp0@plt+0x13fc4>
   25174:	ldr	r0, [r4]
   25178:	bl	28bb8 <g_strcmp0@plt+0x139ec>
   2517c:	b	246a8 <g_strcmp0@plt+0xf4dc>
   25180:	ldr	r3, [r4]
   25184:	cmp	r3, #0
   25188:	beq	248b0 <g_strcmp0@plt+0xf6e4>
   2518c:	mov	r0, r3
   25190:	bl	14e90 <g_object_unref@plt>
   25194:	mov	r1, r9
   25198:	mov	r0, r5
   2519c:	str	r5, [r4]
   251a0:	bl	1cb1c <g_strcmp0@plt+0x7950>
   251a4:	b	246a8 <g_strcmp0@plt+0xf4dc>
   251a8:	mov	r0, r4
   251ac:	ldr	r2, [pc, #808]	; 254dc <g_strcmp0@plt+0x10310>
   251b0:	mov	r1, #16
   251b4:	bl	14668 <g_log@plt>
   251b8:	b	246a8 <g_strcmp0@plt+0xf4dc>
   251bc:	mov	r0, r4
   251c0:	ldr	r2, [pc, #792]	; 254e0 <g_strcmp0@plt+0x10314>
   251c4:	mov	r1, #16
   251c8:	bl	14668 <g_log@plt>
   251cc:	b	246a8 <g_strcmp0@plt+0xf4dc>
   251d0:	ldr	r0, [pc, #780]	; 254e4 <g_strcmp0@plt+0x10318>
   251d4:	bl	14d64 <g_quark_from_static_string@plt>
   251d8:	str	r0, [r4, #100]	; 0x64
   251dc:	b	24584 <g_strcmp0@plt+0xf3b8>
   251e0:	mov	r0, sl
   251e4:	bl	24250 <g_strcmp0@plt+0xf084>
   251e8:	b	246a8 <g_strcmp0@plt+0xf4dc>
   251ec:	ldr	r2, [pc, #756]	; 254e8 <g_strcmp0@plt+0x1031c>
   251f0:	mov	r1, #32
   251f4:	bl	14668 <g_log@plt>
   251f8:	bl	1bdc8 <g_strcmp0@plt+0x6bfc>
   251fc:	subs	r6, r0, #0
   25200:	bne	24e88 <g_strcmp0@plt+0xfcbc>
   25204:	b	24f20 <g_strcmp0@plt+0xfd54>
   25208:	ldr	r0, [pc, #732]	; 254ec <g_strcmp0@plt+0x10320>
   2520c:	bl	14d64 <g_quark_from_static_string@plt>
   25210:	str	r0, [r4, #104]	; 0x68
   25214:	b	24598 <g_strcmp0@plt+0xf3cc>
   25218:	mov	r0, sl
   2521c:	bl	24140 <g_strcmp0@plt+0xef74>
   25220:	b	246a8 <g_strcmp0@plt+0xf4dc>
   25224:	mov	r0, r4
   25228:	ldr	r2, [pc, #704]	; 254f0 <g_strcmp0@plt+0x10324>
   2522c:	mov	r1, #16
   25230:	bl	14668 <g_log@plt>
   25234:	b	246a8 <g_strcmp0@plt+0xf4dc>
   25238:	ldr	r1, [pc, #692]	; 254f4 <g_strcmp0@plt+0x10328>
   2523c:	mov	r0, r9
   25240:	bl	151cc <g_strcmp0@plt>
   25244:	cmp	r0, #0
   25248:	bne	25524 <g_strcmp0@plt+0x10358>
   2524c:	mov	r0, sl
   25250:	bl	23d00 <g_strcmp0@plt+0xeb34>
   25254:	b	246a8 <g_strcmp0@plt+0xf4dc>
   25258:	ldr	r0, [pc, #664]	; 254f8 <g_strcmp0@plt+0x1032c>
   2525c:	bl	14d64 <g_quark_from_static_string@plt>
   25260:	str	r0, [r4, #108]	; 0x6c
   25264:	b	245ac <g_strcmp0@plt+0xf3e0>
   25268:	mov	r0, sl
   2526c:	bl	24030 <g_strcmp0@plt+0xee64>
   25270:	b	246a8 <g_strcmp0@plt+0xf4dc>
   25274:	ldr	r2, [pc, #640]	; 254fc <g_strcmp0@plt+0x10330>
   25278:	mov	r1, #32
   2527c:	bl	14668 <g_log@plt>
   25280:	bl	1c5f4 <g_strcmp0@plt+0x7428>
   25284:	subs	r6, r0, #0
   25288:	beq	255c8 <g_strcmp0@plt+0x103fc>
   2528c:	bl	14404 <g_object_ref@plt>
   25290:	ldr	r3, [r4]
   25294:	cmp	r3, #0
   25298:	mov	r5, r0
   2529c:	beq	252ac <g_strcmp0@plt+0x100e0>
   252a0:	mov	r0, r3
   252a4:	bl	14e90 <g_object_unref@plt>
   252a8:	mov	r0, r5
   252ac:	str	r5, [r4]
   252b0:	bl	1c470 <g_strcmp0@plt+0x72a4>
   252b4:	b	24eb0 <g_strcmp0@plt+0xfce4>
   252b8:	mov	r0, r4
   252bc:	ldr	r2, [pc, #572]	; 25500 <g_strcmp0@plt+0x10334>
   252c0:	mov	r1, #16
   252c4:	bl	14668 <g_log@plt>
   252c8:	b	246a8 <g_strcmp0@plt+0xf4dc>
   252cc:	mov	r0, sl
   252d0:	bl	23f20 <g_strcmp0@plt+0xed54>
   252d4:	b	246a8 <g_strcmp0@plt+0xf4dc>
   252d8:	ldr	r3, [r4]
   252dc:	cmp	r3, #0
   252e0:	beq	24914 <g_strcmp0@plt+0xf748>
   252e4:	mov	r0, r3
   252e8:	bl	14e90 <g_object_unref@plt>
   252ec:	mov	r0, r5
   252f0:	str	r5, [r4]
   252f4:	b	24914 <g_strcmp0@plt+0xf748>
   252f8:	mov	r0, r4
   252fc:	ldr	r2, [pc, #512]	; 25504 <g_strcmp0@plt+0x10338>
   25300:	mov	r1, #16
   25304:	bl	14668 <g_log@plt>
   25308:	b	246a8 <g_strcmp0@plt+0xf4dc>
   2530c:	mov	r0, r4
   25310:	ldr	r2, [pc, #496]	; 25508 <g_strcmp0@plt+0x1033c>
   25314:	mov	r1, #16
   25318:	bl	14668 <g_log@plt>
   2531c:	b	246a8 <g_strcmp0@plt+0xf4dc>
   25320:	mov	r0, r4
   25324:	ldr	r2, [pc, #480]	; 2550c <g_strcmp0@plt+0x10340>
   25328:	mov	r1, #16
   2532c:	bl	14668 <g_log@plt>
   25330:	b	246a8 <g_strcmp0@plt+0xf4dc>
   25334:	ldr	r3, [r4]
   25338:	cmp	r3, #0
   2533c:	beq	25350 <g_strcmp0@plt+0x10184>
   25340:	mov	r0, r3
   25344:	bl	14e90 <g_object_unref@plt>
   25348:	mov	r0, r5
   2534c:	str	r5, [r4]
   25350:	bl	1b734 <g_strcmp0@plt+0x6568>
   25354:	b	246a8 <g_strcmp0@plt+0xf4dc>
   25358:	andeq	fp, r4, r8, asr #19
   2535c:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   25360:	ldrdeq	r4, [r3], -ip
   25364:			; <UNDEFINED> instruction: 0x000374b4
   25368:	andeq	ip, r4, r0, lsl r3
   2536c:	andeq	r5, r3, ip, asr #4
   25370:	andeq	r7, r3, r0, lsl #25
   25374:	andeq	ip, r4, r4, asr #32
   25378:	ldrdeq	ip, [r4], -r0
   2537c:	andeq	r7, r3, r4, ror #8
   25380:	andeq	r4, r3, r8, asr #30
   25384:	strdeq	r5, [r3], -r0
   25388:	andeq	r7, r3, r0, asr ip
   2538c:	andeq	r5, r3, ip, ror r2
   25390:	andeq	r7, r3, r8, ror #25
   25394:	andeq	ip, r4, ip, asr #1
   25398:	ldrdeq	r5, [r3], -r8
   2539c:	andeq	r4, r3, r4, lsl #17
   253a0:	andeq	r7, r3, r4, asr sp
   253a4:	andeq	ip, r4, r8, asr #1
   253a8:	andeq	r7, r3, r8, asr #27
   253ac:	andeq	ip, r4, r8, ror r0
   253b0:	ldrdeq	r5, [r3], -r8
   253b4:	andeq	r7, r3, ip, lsr lr
   253b8:	andeq	ip, r4, r4, asr #1
   253bc:			; <UNDEFINED> instruction: 0x00037eb0
   253c0:			; <UNDEFINED> instruction: 0x00037eb8
   253c4:	andeq	ip, r4, r0, asr #1
   253c8:			; <UNDEFINED> instruction: 0x000383b4
   253cc:	andeq	r8, r3, r0, asr #12
   253d0:	andeq	r8, r3, r8, ror #10
   253d4:	andeq	ip, r4, r0, rrx
   253d8:	andeq	r8, r3, r4, lsl r6
   253dc:	andeq	r7, r3, r0, ror lr
   253e0:	andeq	r8, r3, r0, asr #3
   253e4:	andeq	r8, r3, r4, lsl #5
   253e8:	andeq	r7, r3, ip, lsr #31
   253ec:	andeq	r4, r3, r4, ror #15
   253f0:	strdeq	r8, [r3], -ip
   253f4:	andeq	ip, r4, r8, asr r0
   253f8:	muleq	r3, r4, r1
   253fc:	andeq	r8, r3, r4, asr r1
   25400:			; <UNDEFINED> instruction: 0x00037cb4
   25404:	andeq	r8, r3, r8, asr #3
   25408:	andeq	ip, r4, ip, asr r0
   2540c:	andeq	r8, r3, r8, asr r2
   25410:	andeq	r8, r3, ip, lsl r2
   25414:	andeq	r7, r3, r4, lsr pc
   25418:	andeq	r7, r3, r8, lsl sp
   2541c:	andeq	r8, r3, ip, lsl #5
   25420:	andeq	ip, r4, r0, asr r0
   25424:	andeq	r8, r3, ip, lsr r3
   25428:	strdeq	r8, [r3], -r4
   2542c:	andeq	r8, r3, r8, lsl r0
   25430:	ldrdeq	ip, [r4], -r4
   25434:	andeq	r8, r3, r0, asr #1
   25438:	andeq	r8, r3, ip, ror r0
   2543c:	andeq	r7, r3, r8, lsl #27
   25440:	andeq	r4, r3, ip, lsl #16
   25444:	andeq	r8, r3, r8, ror r3
   25448:	andeq	r8, r3, r4, lsl #7
   2544c:	andeq	ip, r4, ip, rrx
   25450:	andeq	r8, r3, r0, asr #8
   25454:	strdeq	r7, [r3], -ip
   25458:	andeq	r8, r3, ip, lsl #16
   2545c:	andeq	r4, r3, ip, asr r8
   25460:	andeq	r8, r3, ip, asr #12
   25464:	andeq	ip, r4, r4, rrx
   25468:	andeq	r8, r3, r4, lsl #14
   2546c:			; <UNDEFINED> instruction: 0x000386bc
   25470:	strdeq	r8, [r3], -r8	; <UNPREDICTABLE>
   25474:	andeq	r8, r3, r0, asr #14
   25478:	andeq	ip, r4, r4, ror r0
   2547c:	andeq	r8, r3, r0, ror #15
   25480:	andeq	r8, r3, r0, lsr #15
   25484:	andeq	r8, r3, ip, ror r4
   25488:	andeq	r8, r3, ip, lsr #10
   2548c:	andeq	r8, r3, r4, ror #9
   25490:	andeq	r8, r3, r4, lsr #20
   25494:	andeq	r8, r3, r4, lsl r8
   25498:	andeq	ip, r4, r8, rrx
   2549c:	andeq	r8, r3, r0, asr #17
   254a0:	andeq	r8, r3, ip, ror r8
   254a4:	andeq	r7, r3, r4, ror #31
   254a8:	andeq	r8, r3, r8, lsr #2
   254ac:	andeq	r7, r3, r8, asr #24
   254b0:	andeq	r8, r3, r8, lsl #18
   254b4:	strheq	ip, [r4], -ip	; <UNPREDICTABLE>
   254b8:	andeq	r8, r3, r0, asr #19
   254bc:	andeq	r8, r3, r8, ror r9
   254c0:	strdeq	r8, [r3], -r0
   254c4:	andeq	r4, r3, r4, asr #18
   254c8:	andeq	r7, r3, ip, ror #30
   254cc:	strdeq	r7, [r3], -r4
   254d0:	andeq	r8, r3, r0, lsl #20
   254d4:	muleq	r4, r4, r0
   254d8:	andeq	r8, r3, ip, lsr #21
   254dc:	andeq	r8, r3, r8, asr #32
   254e0:	andeq	r8, r3, r0, asr #5
   254e4:			; <UNDEFINED> instruction: 0x00037ab0
   254e8:	ldrdeq	r8, [r3], -r0
   254ec:	andeq	r7, r3, r0, ror #19
   254f0:	muleq	r3, r8, r5
   254f4:	andeq	r7, r3, r0, lsl #16
   254f8:	andeq	r4, r3, r4, asr r9
   254fc:	strdeq	r8, [r3], -r8	; <UNPREDICTABLE>
   25500:	andeq	r8, r3, r0, lsl #13
   25504:			; <UNDEFINED> instruction: 0x000384b0
   25508:	andeq	r8, r3, r4, asr #7
   2550c:	andeq	r8, r3, ip, ror #14
   25510:	andeq	r7, r3, r4, lsl #18
   25514:	andeq	r8, r3, r4, asr #16
   25518:	andeq	r8, r3, r8, ror #20
   2551c:	andeq	r8, r3, ip, lsr r9
   25520:	andeq	r8, r3, r0, lsr sl
   25524:	mov	r0, r9
   25528:	ldr	r1, [pc, #-32]	; 25510 <g_strcmp0@plt+0x10344>
   2552c:	bl	151cc <g_strcmp0@plt>
   25530:	cmp	r0, #0
   25534:	bne	246a8 <g_strcmp0@plt+0xf4dc>
   25538:	mov	r0, sl
   2553c:	bl	23e10 <g_strcmp0@plt+0xec44>
   25540:	b	246a8 <g_strcmp0@plt+0xf4dc>
   25544:	mov	r0, r4
   25548:	ldr	r2, [pc, #-60]	; 25514 <g_strcmp0@plt+0x10348>
   2554c:	mov	r1, #16
   25550:	bl	14668 <g_log@plt>
   25554:	b	246a8 <g_strcmp0@plt+0xf4dc>
   25558:	ldr	r2, [pc, #-72]	; 25518 <g_strcmp0@plt+0x1034c>
   2555c:	mov	r1, #32
   25560:	bl	14668 <g_log@plt>
   25564:	ldr	r0, [r5]
   25568:	bl	291fc <g_strcmp0@plt+0x14030>
   2556c:	subs	r6, r0, #0
   25570:	beq	255f0 <g_strcmp0@plt+0x10424>
   25574:	bl	14404 <g_object_ref@plt>
   25578:	ldr	r3, [r4]
   2557c:	cmp	r3, #0
   25580:	mov	r5, r0
   25584:	beq	25594 <g_strcmp0@plt+0x103c8>
   25588:	mov	r0, r3
   2558c:	bl	14e90 <g_object_unref@plt>
   25590:	mov	r0, r5
   25594:	str	r5, [r4]
   25598:	bl	28bb8 <g_strcmp0@plt+0x139ec>
   2559c:	b	24eb0 <g_strcmp0@plt+0xfce4>
   255a0:	mov	r0, r4
   255a4:	ldr	r2, [pc, #-144]	; 2551c <g_strcmp0@plt+0x10350>
   255a8:	mov	r1, #16
   255ac:	bl	14668 <g_log@plt>
   255b0:	b	246a8 <g_strcmp0@plt+0xf4dc>
   255b4:	mov	r0, r4
   255b8:	ldr	r2, [pc, #-160]	; 25520 <g_strcmp0@plt+0x10354>
   255bc:	mov	r1, #16
   255c0:	bl	14668 <g_log@plt>
   255c4:	b	246a8 <g_strcmp0@plt+0xf4dc>
   255c8:	ldr	r3, [r4]
   255cc:	cmp	r3, #0
   255d0:	beq	255e4 <g_strcmp0@plt+0x10418>
   255d4:	mov	r0, r3
   255d8:	bl	14e90 <g_object_unref@plt>
   255dc:	mov	r0, r6
   255e0:	str	r6, [r4]
   255e4:	bl	1c470 <g_strcmp0@plt+0x72a4>
   255e8:	b	246a8 <g_strcmp0@plt+0xf4dc>
   255ec:	bl	14b6c <__stack_chk_fail@plt>
   255f0:	ldr	r3, [r4]
   255f4:	cmp	r3, #0
   255f8:	beq	2560c <g_strcmp0@plt+0x10440>
   255fc:	mov	r0, r3
   25600:	bl	14e90 <g_object_unref@plt>
   25604:	mov	r0, r6
   25608:	str	r6, [r4]
   2560c:	bl	28bb8 <g_strcmp0@plt+0x139ec>
   25610:	b	246a8 <g_strcmp0@plt+0xf4dc>
   25614:	push	{r4, lr}
   25618:	mov	r1, #32
   2561c:	ldr	r2, [pc, #52]	; 25658 <g_strcmp0@plt+0x1048c>
   25620:	mov	r0, #0
   25624:	bl	14668 <g_log@plt>
   25628:	mov	r3, #0
   2562c:	mov	r2, r3
   25630:	ldr	r1, [pc, #36]	; 2565c <g_strcmp0@plt+0x10490>
   25634:	ldr	r0, [pc, #36]	; 25660 <g_strcmp0@plt+0x10494>
   25638:	bl	289f8 <g_strcmp0@plt+0x1382c>
   2563c:	mov	r4, r0
   25640:	bl	28964 <g_strcmp0@plt+0x13798>
   25644:	cmp	r4, #0
   25648:	popeq	{r4, pc}
   2564c:	mov	r0, r4
   25650:	pop	{r4, lr}
   25654:	b	14e90 <g_object_unref@plt>
   25658:	andeq	r8, r3, r4, ror #21
   2565c:	andeq	r8, r3, r0, lsr #22
   25660:	andeq	r8, r3, r8, lsr #22
   25664:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25668:	sub	sp, sp, #228	; 0xe4
   2566c:	ldr	r5, [pc, #3972]	; 265f8 <g_strcmp0@plt+0x1142c>
   25670:	ldr	r3, [sp, #276]	; 0x114
   25674:	ldr	r4, [sp, #264]	; 0x108
   25678:	ldr	r2, [r5]
   2567c:	mov	r0, r4
   25680:	ldr	r1, [pc, #3956]	; 265fc <g_strcmp0@plt+0x11430>
   25684:	str	r2, [sp, #220]	; 0xdc
   25688:	ldr	r8, [r3]
   2568c:	bl	14fd4 <strcmp@plt>
   25690:	ldr	r7, [sp, #268]	; 0x10c
   25694:	ldr	r6, [sp, #272]	; 0x110
   25698:	cmp	r0, #0
   2569c:	beq	25a64 <g_strcmp0@plt+0x10898>
   256a0:	ldr	r1, [pc, #3928]	; 26600 <g_strcmp0@plt+0x11434>
   256a4:	mov	r0, r4
   256a8:	bl	14fd4 <strcmp@plt>
   256ac:	cmp	r0, #0
   256b0:	beq	25a20 <g_strcmp0@plt+0x10854>
   256b4:	ldr	r1, [pc, #3912]	; 26604 <g_strcmp0@plt+0x11438>
   256b8:	mov	r0, r4
   256bc:	bl	14fd4 <strcmp@plt>
   256c0:	cmp	r0, #0
   256c4:	beq	25a8c <g_strcmp0@plt+0x108c0>
   256c8:	ldr	r1, [pc, #3896]	; 26608 <g_strcmp0@plt+0x1143c>
   256cc:	mov	r0, r4
   256d0:	bl	14fd4 <strcmp@plt>
   256d4:	cmp	r0, #0
   256d8:	beq	25aa0 <g_strcmp0@plt+0x108d4>
   256dc:	ldr	r1, [pc, #3880]	; 2660c <g_strcmp0@plt+0x11440>
   256e0:	mov	r0, r4
   256e4:	bl	14fd4 <strcmp@plt>
   256e8:	cmp	r0, #0
   256ec:	beq	25a78 <g_strcmp0@plt+0x108ac>
   256f0:	ldr	r1, [pc, #3864]	; 26610 <g_strcmp0@plt+0x11444>
   256f4:	mov	r0, r4
   256f8:	bl	14fd4 <strcmp@plt>
   256fc:	subs	r9, r0, #0
   25700:	beq	25bc8 <g_strcmp0@plt+0x109fc>
   25704:	ldr	r1, [pc, #3848]	; 26614 <g_strcmp0@plt+0x11448>
   25708:	mov	r0, r4
   2570c:	bl	14fd4 <strcmp@plt>
   25710:	subs	r9, r0, #0
   25714:	beq	25c30 <g_strcmp0@plt+0x10a64>
   25718:	ldr	r1, [pc, #3832]	; 26618 <g_strcmp0@plt+0x1144c>
   2571c:	mov	r0, r4
   25720:	bl	14fd4 <strcmp@plt>
   25724:	subs	r9, r0, #0
   25728:	beq	25ab4 <g_strcmp0@plt+0x108e8>
   2572c:	ldr	r1, [pc, #3816]	; 2661c <g_strcmp0@plt+0x11450>
   25730:	mov	r0, r4
   25734:	bl	14fd4 <strcmp@plt>
   25738:	subs	r9, r0, #0
   2573c:	beq	25d18 <g_strcmp0@plt+0x10b4c>
   25740:	ldr	r1, [pc, #3800]	; 26620 <g_strcmp0@plt+0x11454>
   25744:	mov	r0, r4
   25748:	bl	14fd4 <strcmp@plt>
   2574c:	cmp	r0, #0
   25750:	beq	25e0c <g_strcmp0@plt+0x10c40>
   25754:	ldr	r1, [pc, #3784]	; 26624 <g_strcmp0@plt+0x11458>
   25758:	mov	r0, r4
   2575c:	bl	14fd4 <strcmp@plt>
   25760:	subs	r9, r0, #0
   25764:	beq	25f04 <g_strcmp0@plt+0x10d38>
   25768:	ldr	r1, [pc, #3768]	; 26628 <g_strcmp0@plt+0x1145c>
   2576c:	mov	r0, r4
   25770:	bl	14fd4 <strcmp@plt>
   25774:	subs	r9, r0, #0
   25778:	beq	25f90 <g_strcmp0@plt+0x10dc4>
   2577c:	ldr	r1, [pc, #3752]	; 2662c <g_strcmp0@plt+0x11460>
   25780:	mov	r0, r4
   25784:	bl	14fd4 <strcmp@plt>
   25788:	subs	r9, r0, #0
   2578c:	beq	26040 <g_strcmp0@plt+0x10e74>
   25790:	ldr	r1, [pc, #3736]	; 26630 <g_strcmp0@plt+0x11464>
   25794:	mov	r0, r4
   25798:	bl	14fd4 <strcmp@plt>
   2579c:	subs	r9, r0, #0
   257a0:	beq	2609c <g_strcmp0@plt+0x10ed0>
   257a4:	ldr	r1, [pc, #3720]	; 26634 <g_strcmp0@plt+0x11468>
   257a8:	mov	r0, r4
   257ac:	bl	14fd4 <strcmp@plt>
   257b0:	subs	r9, r0, #0
   257b4:	beq	26150 <g_strcmp0@plt+0x10f84>
   257b8:	ldr	r1, [pc, #3704]	; 26638 <g_strcmp0@plt+0x1146c>
   257bc:	mov	r0, r4
   257c0:	bl	14fd4 <strcmp@plt>
   257c4:	subs	r9, r0, #0
   257c8:	beq	261dc <g_strcmp0@plt+0x11010>
   257cc:	ldr	r1, [pc, #3688]	; 2663c <g_strcmp0@plt+0x11470>
   257d0:	mov	r0, r4
   257d4:	bl	14fd4 <strcmp@plt>
   257d8:	subs	r9, r0, #0
   257dc:	beq	2628c <g_strcmp0@plt+0x110c0>
   257e0:	ldr	r1, [pc, #3672]	; 26640 <g_strcmp0@plt+0x11474>
   257e4:	mov	r0, r4
   257e8:	bl	14fd4 <strcmp@plt>
   257ec:	subs	r9, r0, #0
   257f0:	beq	262ec <g_strcmp0@plt+0x11120>
   257f4:	ldr	r1, [pc, #3656]	; 26644 <g_strcmp0@plt+0x11478>
   257f8:	mov	r0, r4
   257fc:	bl	14fd4 <strcmp@plt>
   25800:	subs	r9, r0, #0
   25804:	beq	26480 <g_strcmp0@plt+0x112b4>
   25808:	ldr	r1, [pc, #3640]	; 26648 <g_strcmp0@plt+0x1147c>
   2580c:	mov	r0, r4
   25810:	bl	14fd4 <strcmp@plt>
   25814:	subs	r9, r0, #0
   25818:	beq	2637c <g_strcmp0@plt+0x111b0>
   2581c:	ldr	r1, [pc, #3624]	; 2664c <g_strcmp0@plt+0x11480>
   25820:	mov	r0, r4
   25824:	bl	14fd4 <strcmp@plt>
   25828:	subs	r9, r0, #0
   2582c:	beq	2659c <g_strcmp0@plt+0x113d0>
   25830:	ldr	r1, [pc, #3608]	; 26650 <g_strcmp0@plt+0x11484>
   25834:	mov	r0, r4
   25838:	bl	14fd4 <strcmp@plt>
   2583c:	subs	r9, r0, #0
   25840:	beq	2650c <g_strcmp0@plt+0x11340>
   25844:	ldr	r1, [pc, #3592]	; 26654 <g_strcmp0@plt+0x11488>
   25848:	mov	r0, r4
   2584c:	bl	14fd4 <strcmp@plt>
   25850:	subs	r9, r0, #0
   25854:	beq	26778 <g_strcmp0@plt+0x115ac>
   25858:	ldr	r1, [pc, #3576]	; 26658 <g_strcmp0@plt+0x1148c>
   2585c:	mov	r0, r4
   25860:	bl	14fd4 <strcmp@plt>
   25864:	subs	r9, r0, #0
   25868:	beq	266d0 <g_strcmp0@plt+0x11504>
   2586c:	ldr	r1, [pc, #3560]	; 2665c <g_strcmp0@plt+0x11490>
   25870:	mov	r0, r4
   25874:	bl	14fd4 <strcmp@plt>
   25878:	subs	r9, r0, #0
   2587c:	beq	26cd8 <g_strcmp0@plt+0x11b0c>
   25880:	ldr	r1, [pc, #3544]	; 26660 <g_strcmp0@plt+0x11494>
   25884:	mov	r0, r4
   25888:	bl	14fd4 <strcmp@plt>
   2588c:	subs	r9, r0, #0
   25890:	beq	26c48 <g_strcmp0@plt+0x11a7c>
   25894:	ldr	r1, [pc, #3528]	; 26664 <g_strcmp0@plt+0x11498>
   25898:	mov	r0, r4
   2589c:	bl	14fd4 <strcmp@plt>
   258a0:	subs	r9, r0, #0
   258a4:	beq	26c30 <g_strcmp0@plt+0x11a64>
   258a8:	ldr	r1, [pc, #3512]	; 26668 <g_strcmp0@plt+0x1149c>
   258ac:	mov	r0, r4
   258b0:	bl	14fd4 <strcmp@plt>
   258b4:	subs	r9, r0, #0
   258b8:	beq	26bac <g_strcmp0@plt+0x119e0>
   258bc:	ldr	r1, [pc, #3496]	; 2666c <g_strcmp0@plt+0x114a0>
   258c0:	mov	r0, r4
   258c4:	bl	14fd4 <strcmp@plt>
   258c8:	subs	r9, r0, #0
   258cc:	beq	26b04 <g_strcmp0@plt+0x11938>
   258d0:	ldr	r1, [pc, #3480]	; 26670 <g_strcmp0@plt+0x114a4>
   258d4:	mov	r0, r4
   258d8:	bl	14fd4 <strcmp@plt>
   258dc:	cmp	r0, #0
   258e0:	beq	26a68 <g_strcmp0@plt+0x1189c>
   258e4:	ldr	r1, [pc, #3464]	; 26674 <g_strcmp0@plt+0x114a8>
   258e8:	mov	r0, r4
   258ec:	bl	14fd4 <strcmp@plt>
   258f0:	subs	r9, r0, #0
   258f4:	beq	269d8 <g_strcmp0@plt+0x1180c>
   258f8:	ldr	r1, [pc, #3448]	; 26678 <g_strcmp0@plt+0x114ac>
   258fc:	mov	r0, r4
   25900:	bl	14fd4 <strcmp@plt>
   25904:	subs	r9, r0, #0
   25908:	beq	2690c <g_strcmp0@plt+0x11740>
   2590c:	ldr	r1, [pc, #3432]	; 2667c <g_strcmp0@plt+0x114b0>
   25910:	mov	r0, r4
   25914:	bl	14fd4 <strcmp@plt>
   25918:	subs	r9, r0, #0
   2591c:	beq	268f4 <g_strcmp0@plt+0x11728>
   25920:	ldr	r1, [pc, #3416]	; 26680 <g_strcmp0@plt+0x114b4>
   25924:	mov	r0, r4
   25928:	bl	14fd4 <strcmp@plt>
   2592c:	subs	r9, r0, #0
   25930:	beq	268dc <g_strcmp0@plt+0x11710>
   25934:	ldr	r1, [pc, #3400]	; 26684 <g_strcmp0@plt+0x114b8>
   25938:	mov	r0, r4
   2593c:	bl	14fd4 <strcmp@plt>
   25940:	subs	r9, r0, #0
   25944:	beq	268c4 <g_strcmp0@plt+0x116f8>
   25948:	ldr	r1, [pc, #3384]	; 26688 <g_strcmp0@plt+0x114bc>
   2594c:	mov	r0, r4
   25950:	bl	14fd4 <strcmp@plt>
   25954:	subs	r9, r0, #0
   25958:	beq	268ac <g_strcmp0@plt+0x116e0>
   2595c:	ldr	r1, [pc, #3368]	; 2668c <g_strcmp0@plt+0x114c0>
   25960:	mov	r0, r4
   25964:	bl	14fd4 <strcmp@plt>
   25968:	subs	r9, r0, #0
   2596c:	beq	26894 <g_strcmp0@plt+0x116c8>
   25970:	ldr	r1, [pc, #3352]	; 26690 <g_strcmp0@plt+0x114c4>
   25974:	mov	r0, r4
   25978:	bl	14fd4 <strcmp@plt>
   2597c:	subs	r9, r0, #0
   25980:	beq	2687c <g_strcmp0@plt+0x116b0>
   25984:	ldr	r1, [pc, #3336]	; 26694 <g_strcmp0@plt+0x114c8>
   25988:	mov	r0, r4
   2598c:	bl	14fd4 <strcmp@plt>
   25990:	subs	r9, r0, #0
   25994:	beq	26864 <g_strcmp0@plt+0x11698>
   25998:	mov	r0, r4
   2599c:	ldr	r1, [pc, #3316]	; 26698 <g_strcmp0@plt+0x114cc>
   259a0:	bl	14fd4 <strcmp@plt>
   259a4:	cmp	r0, #0
   259a8:	bne	26858 <g_strcmp0@plt+0x1168c>
   259ac:	mov	r1, r7
   259b0:	add	r0, sp, #92	; 0x5c
   259b4:	bl	14494 <g_variant_iter_init@plt>
   259b8:	mov	r0, r8
   259bc:	bl	25614 <g_strcmp0@plt+0x10448>
   259c0:	mov	r0, r6
   259c4:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   259c8:	bl	14704 <g_dbus_message_new_method_reply@plt>
   259cc:	ldr	r1, [pc, #3304]	; 266bc <g_strcmp0@plt+0x114f0>
   259d0:	mov	r4, r0
   259d4:	add	r0, sp, #156	; 0x9c
   259d8:	bl	149e0 <g_variant_builder_init@plt>
   259dc:	add	r0, sp, #156	; 0x9c
   259e0:	bl	145a8 <g_variant_builder_end@plt>
   259e4:	mov	r1, r0
   259e8:	mov	r0, r4
   259ec:	bl	14848 <g_dbus_message_set_body@plt>
   259f0:	mov	r0, r6
   259f4:	bl	14c68 <g_dbus_method_invocation_get_connection@plt>
   259f8:	mov	r1, r4
   259fc:	mov	r3, #0
   25a00:	str	r3, [sp]
   25a04:	mov	r2, r3
   25a08:	bl	14adc <g_dbus_connection_send_message@plt>
   25a0c:	mov	r0, r6
   25a10:	bl	14e90 <g_object_unref@plt>
   25a14:	mov	r0, r4
   25a18:	bl	14e90 <g_object_unref@plt>
   25a1c:	b	25a4c <g_strcmp0@plt+0x10880>
   25a20:	mov	r1, r7
   25a24:	add	r0, sp, #156	; 0x9c
   25a28:	bl	14494 <g_variant_iter_init@plt>
   25a2c:	mov	r0, #4
   25a30:	bl	14a34 <g_slice_alloc0@plt>
   25a34:	ldr	r1, [pc, #3168]	; 2669c <g_strcmp0@plt+0x114d0>
   25a38:	mov	r3, r0
   25a3c:	mov	r2, r0
   25a40:	str	r6, [r3]
   25a44:	mov	r0, r8
   25a48:	bl	22fa0 <g_strcmp0@plt+0xddd4>
   25a4c:	ldr	r2, [sp, #220]	; 0xdc
   25a50:	ldr	r3, [r5]
   25a54:	cmp	r2, r3
   25a58:	bne	262e8 <g_strcmp0@plt+0x1111c>
   25a5c:	add	sp, sp, #228	; 0xe4
   25a60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25a64:	mov	r2, r6
   25a68:	mov	r1, r7
   25a6c:	mov	r0, r8
   25a70:	bl	22ef4 <g_strcmp0@plt+0xdd28>
   25a74:	b	25a4c <g_strcmp0@plt+0x10880>
   25a78:	mov	r2, r6
   25a7c:	mov	r1, r7
   25a80:	mov	r0, r8
   25a84:	bl	23068 <g_strcmp0@plt+0xde9c>
   25a88:	b	25a4c <g_strcmp0@plt+0x10880>
   25a8c:	mov	r2, r6
   25a90:	mov	r1, r7
   25a94:	mov	r0, r8
   25a98:	bl	22ef4 <g_strcmp0@plt+0xdd28>
   25a9c:	b	25a4c <g_strcmp0@plt+0x10880>
   25aa0:	mov	r2, r6
   25aa4:	mov	r1, r7
   25aa8:	mov	r0, r8
   25aac:	bl	23068 <g_strcmp0@plt+0xde9c>
   25ab0:	b	25a4c <g_strcmp0@plt+0x10880>
   25ab4:	mov	r1, r7
   25ab8:	add	r0, sp, #28
   25abc:	str	r9, [sp, #20]
   25ac0:	str	r9, [sp, #24]
   25ac4:	bl	14494 <g_variant_iter_init@plt>
   25ac8:	add	r0, sp, #28
   25acc:	bl	148f0 <g_variant_iter_next_value@plt>
   25ad0:	mov	r1, r9
   25ad4:	mov	r4, r0
   25ad8:	bl	1492c <g_variant_dup_string@plt>
   25adc:	mov	sl, r0
   25ae0:	mov	r0, r4
   25ae4:	bl	14cd4 <g_variant_unref@plt>
   25ae8:	add	r3, sp, #24
   25aec:	add	r2, sp, #20
   25af0:	mov	r1, sl
   25af4:	mov	r0, r8
   25af8:	bl	231c4 <g_strcmp0@plt+0xdff8>
   25afc:	mov	r0, r6
   25b00:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   25b04:	bl	14704 <g_dbus_message_new_method_reply@plt>
   25b08:	add	r8, sp, #92	; 0x5c
   25b0c:	ldr	r1, [pc, #2984]	; 266bc <g_strcmp0@plt+0x114f0>
   25b10:	add	r4, sp, #156	; 0x9c
   25b14:	mov	fp, r0
   25b18:	mov	r0, r8
   25b1c:	bl	149e0 <g_variant_builder_init@plt>
   25b20:	mov	r0, r4
   25b24:	ldr	r1, [pc, #2964]	; 266c0 <g_strcmp0@plt+0x114f4>
   25b28:	ldr	r7, [sp, #20]
   25b2c:	bl	149e0 <g_variant_builder_init@plt>
   25b30:	ldr	r3, [sp, #24]
   25b34:	cmp	r3, #0
   25b38:	ble	25b60 <g_strcmp0@plt+0x10994>
   25b3c:	ldr	r0, [r7], #4
   25b40:	bl	145b4 <g_variant_new_string@plt>
   25b44:	add	r9, r9, #1
   25b48:	mov	r1, r0
   25b4c:	mov	r0, r4
   25b50:	bl	145f0 <g_variant_builder_add_value@plt>
   25b54:	ldr	r3, [sp, #24]
   25b58:	cmp	r9, r3
   25b5c:	blt	25b3c <g_strcmp0@plt+0x10970>
   25b60:	mov	r0, r4
   25b64:	bl	145a8 <g_variant_builder_end@plt>
   25b68:	mov	r1, r0
   25b6c:	mov	r0, r8
   25b70:	bl	145f0 <g_variant_builder_add_value@plt>
   25b74:	mov	r0, r8
   25b78:	bl	145a8 <g_variant_builder_end@plt>
   25b7c:	mov	r1, r0
   25b80:	mov	r0, fp
   25b84:	bl	14848 <g_dbus_message_set_body@plt>
   25b88:	mov	r0, r6
   25b8c:	bl	14c68 <g_dbus_method_invocation_get_connection@plt>
   25b90:	mov	r3, #0
   25b94:	str	r3, [sp]
   25b98:	mov	r2, r3
   25b9c:	mov	r1, fp
   25ba0:	bl	14adc <g_dbus_connection_send_message@plt>
   25ba4:	mov	r0, r6
   25ba8:	bl	14e90 <g_object_unref@plt>
   25bac:	mov	r0, fp
   25bb0:	bl	14e90 <g_object_unref@plt>
   25bb4:	mov	r0, sl
   25bb8:	bl	14bd8 <g_free@plt>
   25bbc:	ldrd	r0, [sp, #20]
   25bc0:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   25bc4:	b	25a4c <g_strcmp0@plt+0x10880>
   25bc8:	mov	r1, r7
   25bcc:	add	r0, sp, #92	; 0x5c
   25bd0:	bl	14494 <g_variant_iter_init@plt>
   25bd4:	ldr	r2, [pc, #2756]	; 266a0 <g_strcmp0@plt+0x114d4>
   25bd8:	mov	r1, #32
   25bdc:	mov	r0, r9
   25be0:	bl	14668 <g_log@plt>
   25be4:	bl	2279c <g_strcmp0@plt+0xd5d0>
   25be8:	mov	r0, r6
   25bec:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   25bf0:	bl	14704 <g_dbus_message_new_method_reply@plt>
   25bf4:	ldr	r1, [pc, #2752]	; 266bc <g_strcmp0@plt+0x114f0>
   25bf8:	mov	r4, r0
   25bfc:	add	r0, sp, #156	; 0x9c
   25c00:	bl	149e0 <g_variant_builder_init@plt>
   25c04:	add	r0, sp, #156	; 0x9c
   25c08:	bl	145a8 <g_variant_builder_end@plt>
   25c0c:	mov	r1, r0
   25c10:	mov	r0, r4
   25c14:	bl	14848 <g_dbus_message_set_body@plt>
   25c18:	mov	r0, r6
   25c1c:	bl	14c68 <g_dbus_method_invocation_get_connection@plt>
   25c20:	str	r9, [sp]
   25c24:	mov	r1, r4
   25c28:	mov	r3, r9
   25c2c:	b	25a04 <g_strcmp0@plt+0x10838>
   25c30:	mov	r1, r7
   25c34:	add	r0, sp, #28
   25c38:	str	r9, [sp, #20]
   25c3c:	str	r9, [sp, #24]
   25c40:	bl	14494 <g_variant_iter_init@plt>
   25c44:	add	r2, sp, #24
   25c48:	add	r1, sp, #20
   25c4c:	mov	r0, r8
   25c50:	bl	23138 <g_strcmp0@plt+0xdf6c>
   25c54:	mov	r0, r6
   25c58:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   25c5c:	bl	14704 <g_dbus_message_new_method_reply@plt>
   25c60:	add	r8, sp, #92	; 0x5c
   25c64:	ldr	r1, [pc, #2640]	; 266bc <g_strcmp0@plt+0x114f0>
   25c68:	add	r4, sp, #156	; 0x9c
   25c6c:	mov	sl, r0
   25c70:	mov	r0, r8
   25c74:	bl	149e0 <g_variant_builder_init@plt>
   25c78:	mov	r0, r4
   25c7c:	ldr	r1, [pc, #2620]	; 266c0 <g_strcmp0@plt+0x114f4>
   25c80:	ldr	r7, [sp, #20]
   25c84:	bl	149e0 <g_variant_builder_init@plt>
   25c88:	ldr	r3, [sp, #24]
   25c8c:	cmp	r3, #0
   25c90:	ble	25cb8 <g_strcmp0@plt+0x10aec>
   25c94:	ldr	r0, [r7], #4
   25c98:	bl	145b4 <g_variant_new_string@plt>
   25c9c:	add	r9, r9, #1
   25ca0:	mov	r1, r0
   25ca4:	mov	r0, r4
   25ca8:	bl	145f0 <g_variant_builder_add_value@plt>
   25cac:	ldr	r3, [sp, #24]
   25cb0:	cmp	r9, r3
   25cb4:	blt	25c94 <g_strcmp0@plt+0x10ac8>
   25cb8:	mov	r0, r4
   25cbc:	bl	145a8 <g_variant_builder_end@plt>
   25cc0:	mov	r1, r0
   25cc4:	mov	r0, r8
   25cc8:	bl	145f0 <g_variant_builder_add_value@plt>
   25ccc:	mov	r0, r8
   25cd0:	bl	145a8 <g_variant_builder_end@plt>
   25cd4:	mov	r1, r0
   25cd8:	mov	r0, sl
   25cdc:	bl	14848 <g_dbus_message_set_body@plt>
   25ce0:	mov	r0, r6
   25ce4:	bl	14c68 <g_dbus_method_invocation_get_connection@plt>
   25ce8:	mov	r3, #0
   25cec:	mov	r1, sl
   25cf0:	str	r3, [sp]
   25cf4:	mov	r2, r3
   25cf8:	bl	14adc <g_dbus_connection_send_message@plt>
   25cfc:	mov	r0, r6
   25d00:	bl	14e90 <g_object_unref@plt>
   25d04:	mov	r0, sl
   25d08:	bl	14e90 <g_object_unref@plt>
   25d0c:	ldrd	r0, [sp, #20]
   25d10:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   25d14:	b	25a4c <g_strcmp0@plt+0x10880>
   25d18:	mov	r1, r7
   25d1c:	add	r0, sp, #92	; 0x5c
   25d20:	bl	14494 <g_variant_iter_init@plt>
   25d24:	add	r0, sp, #92	; 0x5c
   25d28:	bl	148f0 <g_variant_iter_next_value@plt>
   25d2c:	mov	r1, r9
   25d30:	mov	r4, r0
   25d34:	bl	1492c <g_variant_dup_string@plt>
   25d38:	mov	sl, r0
   25d3c:	mov	r0, r4
   25d40:	bl	14cd4 <g_variant_unref@plt>
   25d44:	add	r0, sp, #92	; 0x5c
   25d48:	bl	148f0 <g_variant_iter_next_value@plt>
   25d4c:	mov	r1, r9
   25d50:	mov	r4, r0
   25d54:	bl	1492c <g_variant_dup_string@plt>
   25d58:	mov	r8, r0
   25d5c:	mov	r0, r4
   25d60:	bl	14cd4 <g_variant_unref@plt>
   25d64:	ldr	r0, [pc, #2360]	; 266a4 <g_strcmp0@plt+0x114d8>
   25d68:	mov	r2, r8
   25d6c:	mov	r1, sl
   25d70:	bl	22a14 <g_strcmp0@plt+0xd848>
   25d74:	mov	r7, r0
   25d78:	mov	r0, r9
   25d7c:	bl	14bd8 <g_free@plt>
   25d80:	mov	r0, r6
   25d84:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   25d88:	bl	14704 <g_dbus_message_new_method_reply@plt>
   25d8c:	ldr	r1, [pc, #2344]	; 266bc <g_strcmp0@plt+0x114f0>
   25d90:	mov	r4, r0
   25d94:	add	r0, sp, #156	; 0x9c
   25d98:	bl	149e0 <g_variant_builder_init@plt>
   25d9c:	mov	r0, r7
   25da0:	bl	145b4 <g_variant_new_string@plt>
   25da4:	mov	r1, r0
   25da8:	add	r0, sp, #156	; 0x9c
   25dac:	bl	145f0 <g_variant_builder_add_value@plt>
   25db0:	add	r0, sp, #156	; 0x9c
   25db4:	bl	145a8 <g_variant_builder_end@plt>
   25db8:	mov	r1, r0
   25dbc:	mov	r0, r4
   25dc0:	bl	14848 <g_dbus_message_set_body@plt>
   25dc4:	mov	r0, r6
   25dc8:	bl	14c68 <g_dbus_method_invocation_get_connection@plt>
   25dcc:	mov	r1, r4
   25dd0:	mov	r3, r9
   25dd4:	mov	r2, r9
   25dd8:	str	r9, [sp]
   25ddc:	bl	14adc <g_dbus_connection_send_message@plt>
   25de0:	mov	r0, r6
   25de4:	bl	14e90 <g_object_unref@plt>
   25de8:	mov	r0, r4
   25dec:	bl	14e90 <g_object_unref@plt>
   25df0:	mov	r0, sl
   25df4:	bl	14bd8 <g_free@plt>
   25df8:	mov	r0, r8
   25dfc:	bl	14bd8 <g_free@plt>
   25e00:	mov	r0, r7
   25e04:	bl	14bd8 <g_free@plt>
   25e08:	b	25a4c <g_strcmp0@plt+0x10880>
   25e0c:	mov	r1, r7
   25e10:	add	r0, sp, #92	; 0x5c
   25e14:	bl	14494 <g_variant_iter_init@plt>
   25e18:	add	r0, sp, #92	; 0x5c
   25e1c:	bl	148f0 <g_variant_iter_next_value@plt>
   25e20:	mov	r1, #0
   25e24:	mov	r4, r0
   25e28:	bl	1492c <g_variant_dup_string@plt>
   25e2c:	mov	r9, r0
   25e30:	mov	r0, r4
   25e34:	bl	14cd4 <g_variant_unref@plt>
   25e38:	add	r0, sp, #92	; 0x5c
   25e3c:	bl	148f0 <g_variant_iter_next_value@plt>
   25e40:	mov	r1, #0
   25e44:	mov	r4, r0
   25e48:	bl	1492c <g_variant_dup_string@plt>
   25e4c:	mov	r8, r0
   25e50:	mov	r0, r4
   25e54:	bl	14cd4 <g_variant_unref@plt>
   25e58:	add	r0, sp, #92	; 0x5c
   25e5c:	bl	148f0 <g_variant_iter_next_value@plt>
   25e60:	mov	r1, #0
   25e64:	mov	r4, r0
   25e68:	bl	1492c <g_variant_dup_string@plt>
   25e6c:	mov	r7, r0
   25e70:	mov	r0, r4
   25e74:	bl	14cd4 <g_variant_unref@plt>
   25e78:	ldr	r1, [pc, #2116]	; 266c4 <g_strcmp0@plt+0x114f8>
   25e7c:	ldr	r2, [pc, #2116]	; 266c8 <g_strcmp0@plt+0x114fc>
   25e80:	mov	r3, r9
   25e84:	str	r7, [sp, #8]
   25e88:	str	r8, [sp]
   25e8c:	ldr	r0, [r1]
   25e90:	ldr	r1, [pc, #2064]	; 266a8 <g_strcmp0@plt+0x114dc>
   25e94:	str	r2, [sp, #4]
   25e98:	ldr	r2, [pc, #2052]	; 266a4 <g_strcmp0@plt+0x114d8>
   25e9c:	bl	1516c <g_signal_emit_by_name@plt>
   25ea0:	mov	r0, r6
   25ea4:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   25ea8:	bl	14704 <g_dbus_message_new_method_reply@plt>
   25eac:	ldr	r1, [pc, #2056]	; 266bc <g_strcmp0@plt+0x114f0>
   25eb0:	mov	r4, r0
   25eb4:	add	r0, sp, #156	; 0x9c
   25eb8:	bl	149e0 <g_variant_builder_init@plt>
   25ebc:	add	r0, sp, #156	; 0x9c
   25ec0:	bl	145a8 <g_variant_builder_end@plt>
   25ec4:	mov	r1, r0
   25ec8:	mov	r0, r4
   25ecc:	bl	14848 <g_dbus_message_set_body@plt>
   25ed0:	mov	r0, r6
   25ed4:	bl	14c68 <g_dbus_method_invocation_get_connection@plt>
   25ed8:	mov	r3, #0
   25edc:	mov	r1, r4
   25ee0:	str	r3, [sp]
   25ee4:	mov	r2, r3
   25ee8:	bl	14adc <g_dbus_connection_send_message@plt>
   25eec:	mov	r0, r6
   25ef0:	bl	14e90 <g_object_unref@plt>
   25ef4:	mov	r0, r4
   25ef8:	bl	14e90 <g_object_unref@plt>
   25efc:	mov	r0, r9
   25f00:	b	25df4 <g_strcmp0@plt+0x10c28>
   25f04:	mov	r1, r7
   25f08:	add	r0, sp, #28
   25f0c:	str	r9, [sp, #20]
   25f10:	str	r9, [sp, #24]
   25f14:	bl	14494 <g_variant_iter_init@plt>
   25f18:	add	r2, sp, #24
   25f1c:	add	r1, sp, #20
   25f20:	mov	r0, r8
   25f24:	bl	232d4 <g_strcmp0@plt+0xe108>
   25f28:	mov	r0, r6
   25f2c:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   25f30:	bl	14704 <g_dbus_message_new_method_reply@plt>
   25f34:	add	r8, sp, #92	; 0x5c
   25f38:	ldr	r1, [pc, #1916]	; 266bc <g_strcmp0@plt+0x114f0>
   25f3c:	add	r4, sp, #156	; 0x9c
   25f40:	mov	sl, r0
   25f44:	mov	r0, r8
   25f48:	bl	149e0 <g_variant_builder_init@plt>
   25f4c:	mov	r0, r4
   25f50:	ldr	r1, [pc, #1896]	; 266c0 <g_strcmp0@plt+0x114f4>
   25f54:	ldr	r7, [sp, #20]
   25f58:	bl	149e0 <g_variant_builder_init@plt>
   25f5c:	ldr	r3, [sp, #24]
   25f60:	cmp	r3, #0
   25f64:	ble	25cb8 <g_strcmp0@plt+0x10aec>
   25f68:	ldr	r0, [r7], #4
   25f6c:	bl	145b4 <g_variant_new_string@plt>
   25f70:	add	r9, r9, #1
   25f74:	mov	r1, r0
   25f78:	mov	r0, r4
   25f7c:	bl	145f0 <g_variant_builder_add_value@plt>
   25f80:	ldr	r3, [sp, #24]
   25f84:	cmp	r9, r3
   25f88:	blt	25f68 <g_strcmp0@plt+0x10d9c>
   25f8c:	b	25cb8 <g_strcmp0@plt+0x10aec>
   25f90:	mov	r1, r7
   25f94:	add	r0, sp, #28
   25f98:	str	r9, [sp, #20]
   25f9c:	str	r9, [sp, #24]
   25fa0:	bl	14494 <g_variant_iter_init@plt>
   25fa4:	add	r0, sp, #28
   25fa8:	bl	148f0 <g_variant_iter_next_value@plt>
   25fac:	mov	r1, r9
   25fb0:	mov	r4, r0
   25fb4:	bl	1492c <g_variant_dup_string@plt>
   25fb8:	mov	sl, r0
   25fbc:	mov	r0, r4
   25fc0:	bl	14cd4 <g_variant_unref@plt>
   25fc4:	add	r3, sp, #24
   25fc8:	add	r2, sp, #20
   25fcc:	mov	r1, sl
   25fd0:	mov	r0, r8
   25fd4:	bl	23360 <g_strcmp0@plt+0xe194>
   25fd8:	mov	r0, r6
   25fdc:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   25fe0:	bl	14704 <g_dbus_message_new_method_reply@plt>
   25fe4:	add	r8, sp, #92	; 0x5c
   25fe8:	ldr	r1, [pc, #1740]	; 266bc <g_strcmp0@plt+0x114f0>
   25fec:	add	r4, sp, #156	; 0x9c
   25ff0:	mov	fp, r0
   25ff4:	mov	r0, r8
   25ff8:	bl	149e0 <g_variant_builder_init@plt>
   25ffc:	mov	r0, r4
   26000:	ldr	r1, [pc, #1720]	; 266c0 <g_strcmp0@plt+0x114f4>
   26004:	ldr	r7, [sp, #20]
   26008:	bl	149e0 <g_variant_builder_init@plt>
   2600c:	ldr	r3, [sp, #24]
   26010:	cmp	r3, #0
   26014:	ble	25b60 <g_strcmp0@plt+0x10994>
   26018:	ldr	r0, [r7], #4
   2601c:	bl	145b4 <g_variant_new_string@plt>
   26020:	add	r9, r9, #1
   26024:	mov	r1, r0
   26028:	mov	r0, r4
   2602c:	bl	145f0 <g_variant_builder_add_value@plt>
   26030:	ldr	r3, [sp, #24]
   26034:	cmp	r9, r3
   26038:	blt	26018 <g_strcmp0@plt+0x10e4c>
   2603c:	b	25b60 <g_strcmp0@plt+0x10994>
   26040:	mov	r1, r7
   26044:	add	r0, sp, #92	; 0x5c
   26048:	bl	14494 <g_variant_iter_init@plt>
   2604c:	add	r0, sp, #92	; 0x5c
   26050:	bl	148f0 <g_variant_iter_next_value@plt>
   26054:	mov	r1, r9
   26058:	mov	r4, r0
   2605c:	bl	1492c <g_variant_dup_string@plt>
   26060:	mov	sl, r0
   26064:	mov	r0, r4
   26068:	bl	14cd4 <g_variant_unref@plt>
   2606c:	add	r0, sp, #92	; 0x5c
   26070:	bl	148f0 <g_variant_iter_next_value@plt>
   26074:	mov	r1, r9
   26078:	mov	r4, r0
   2607c:	bl	1492c <g_variant_dup_string@plt>
   26080:	mov	r8, r0
   26084:	mov	r0, r4
   26088:	bl	14cd4 <g_variant_unref@plt>
   2608c:	mov	r2, r8
   26090:	mov	r1, sl
   26094:	ldr	r0, [pc, #1552]	; 266ac <g_strcmp0@plt+0x114e0>
   26098:	b	25d70 <g_strcmp0@plt+0x10ba4>
   2609c:	mov	r1, r7
   260a0:	add	r0, sp, #92	; 0x5c
   260a4:	bl	14494 <g_variant_iter_init@plt>
   260a8:	add	r0, sp, #92	; 0x5c
   260ac:	bl	148f0 <g_variant_iter_next_value@plt>
   260b0:	mov	r1, r9
   260b4:	mov	r4, r0
   260b8:	bl	1492c <g_variant_dup_string@plt>
   260bc:	mov	sl, r0
   260c0:	mov	r0, r4
   260c4:	bl	14cd4 <g_variant_unref@plt>
   260c8:	add	r0, sp, #92	; 0x5c
   260cc:	bl	148f0 <g_variant_iter_next_value@plt>
   260d0:	mov	r1, r9
   260d4:	mov	r4, r0
   260d8:	bl	1492c <g_variant_dup_string@plt>
   260dc:	mov	r8, r0
   260e0:	mov	r0, r4
   260e4:	bl	14cd4 <g_variant_unref@plt>
   260e8:	add	r0, sp, #92	; 0x5c
   260ec:	bl	148f0 <g_variant_iter_next_value@plt>
   260f0:	mov	r1, r9
   260f4:	mov	r4, r0
   260f8:	bl	1492c <g_variant_dup_string@plt>
   260fc:	mov	r7, r0
   26100:	mov	r0, r4
   26104:	bl	14cd4 <g_variant_unref@plt>
   26108:	ldr	r1, [pc, #1460]	; 266c4 <g_strcmp0@plt+0x114f8>
   2610c:	ldr	r2, [pc, #1460]	; 266c8 <g_strcmp0@plt+0x114fc>
   26110:	str	r7, [sp, #8]
   26114:	str	r8, [sp]
   26118:	ldr	r0, [r1]
   2611c:	str	r2, [sp, #4]
   26120:	ldr	r2, [pc, #1412]	; 266ac <g_strcmp0@plt+0x114e0>
   26124:	mov	r3, sl
   26128:	ldr	r1, [pc, #1400]	; 266a8 <g_strcmp0@plt+0x114dc>
   2612c:	bl	1516c <g_signal_emit_by_name@plt>
   26130:	mov	r0, r6
   26134:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   26138:	bl	14704 <g_dbus_message_new_method_reply@plt>
   2613c:	ldr	r1, [pc, #1400]	; 266bc <g_strcmp0@plt+0x114f0>
   26140:	mov	r4, r0
   26144:	add	r0, sp, #156	; 0x9c
   26148:	bl	149e0 <g_variant_builder_init@plt>
   2614c:	b	25db0 <g_strcmp0@plt+0x10be4>
   26150:	mov	r1, r7
   26154:	add	r0, sp, #28
   26158:	str	r9, [sp, #20]
   2615c:	str	r9, [sp, #24]
   26160:	bl	14494 <g_variant_iter_init@plt>
   26164:	add	r2, sp, #24
   26168:	add	r1, sp, #20
   2616c:	mov	r0, r8
   26170:	bl	23470 <g_strcmp0@plt+0xe2a4>
   26174:	mov	r0, r6
   26178:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   2617c:	bl	14704 <g_dbus_message_new_method_reply@plt>
   26180:	add	r8, sp, #92	; 0x5c
   26184:	ldr	r1, [pc, #1328]	; 266bc <g_strcmp0@plt+0x114f0>
   26188:	add	r4, sp, #156	; 0x9c
   2618c:	mov	sl, r0
   26190:	mov	r0, r8
   26194:	bl	149e0 <g_variant_builder_init@plt>
   26198:	mov	r0, r4
   2619c:	ldr	r1, [pc, #1308]	; 266c0 <g_strcmp0@plt+0x114f4>
   261a0:	ldr	r7, [sp, #20]
   261a4:	bl	149e0 <g_variant_builder_init@plt>
   261a8:	ldr	r3, [sp, #24]
   261ac:	cmp	r3, #0
   261b0:	ble	25cb8 <g_strcmp0@plt+0x10aec>
   261b4:	ldr	r0, [r7], #4
   261b8:	bl	145b4 <g_variant_new_string@plt>
   261bc:	add	r9, r9, #1
   261c0:	mov	r1, r0
   261c4:	mov	r0, r4
   261c8:	bl	145f0 <g_variant_builder_add_value@plt>
   261cc:	ldr	r3, [sp, #24]
   261d0:	cmp	r9, r3
   261d4:	blt	261b4 <g_strcmp0@plt+0x10fe8>
   261d8:	b	25cb8 <g_strcmp0@plt+0x10aec>
   261dc:	mov	r1, r7
   261e0:	add	r0, sp, #28
   261e4:	str	r9, [sp, #20]
   261e8:	str	r9, [sp, #24]
   261ec:	bl	14494 <g_variant_iter_init@plt>
   261f0:	add	r0, sp, #28
   261f4:	bl	148f0 <g_variant_iter_next_value@plt>
   261f8:	mov	r1, r9
   261fc:	mov	r4, r0
   26200:	bl	1492c <g_variant_dup_string@plt>
   26204:	mov	sl, r0
   26208:	mov	r0, r4
   2620c:	bl	14cd4 <g_variant_unref@plt>
   26210:	add	r3, sp, #24
   26214:	add	r2, sp, #20
   26218:	mov	r1, sl
   2621c:	mov	r0, r8
   26220:	bl	234fc <g_strcmp0@plt+0xe330>
   26224:	mov	r0, r6
   26228:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   2622c:	bl	14704 <g_dbus_message_new_method_reply@plt>
   26230:	add	r8, sp, #92	; 0x5c
   26234:	ldr	r1, [pc, #1152]	; 266bc <g_strcmp0@plt+0x114f0>
   26238:	add	r4, sp, #156	; 0x9c
   2623c:	mov	fp, r0
   26240:	mov	r0, r8
   26244:	bl	149e0 <g_variant_builder_init@plt>
   26248:	mov	r0, r4
   2624c:	ldr	r1, [pc, #1132]	; 266c0 <g_strcmp0@plt+0x114f4>
   26250:	ldr	r7, [sp, #20]
   26254:	bl	149e0 <g_variant_builder_init@plt>
   26258:	ldr	r3, [sp, #24]
   2625c:	cmp	r3, #0
   26260:	ble	25b60 <g_strcmp0@plt+0x10994>
   26264:	ldr	r0, [r7], #4
   26268:	bl	145b4 <g_variant_new_string@plt>
   2626c:	add	r9, r9, #1
   26270:	mov	r1, r0
   26274:	mov	r0, r4
   26278:	bl	145f0 <g_variant_builder_add_value@plt>
   2627c:	ldr	r3, [sp, #24]
   26280:	cmp	r9, r3
   26284:	blt	26264 <g_strcmp0@plt+0x11098>
   26288:	b	25b60 <g_strcmp0@plt+0x10994>
   2628c:	mov	r1, r7
   26290:	add	r0, sp, #92	; 0x5c
   26294:	bl	14494 <g_variant_iter_init@plt>
   26298:	add	r0, sp, #92	; 0x5c
   2629c:	bl	148f0 <g_variant_iter_next_value@plt>
   262a0:	mov	r1, r9
   262a4:	mov	r4, r0
   262a8:	bl	1492c <g_variant_dup_string@plt>
   262ac:	mov	sl, r0
   262b0:	mov	r0, r4
   262b4:	bl	14cd4 <g_variant_unref@plt>
   262b8:	add	r0, sp, #92	; 0x5c
   262bc:	bl	148f0 <g_variant_iter_next_value@plt>
   262c0:	mov	r1, r9
   262c4:	mov	r4, r0
   262c8:	bl	1492c <g_variant_dup_string@plt>
   262cc:	mov	r8, r0
   262d0:	mov	r0, r4
   262d4:	bl	14cd4 <g_variant_unref@plt>
   262d8:	mov	r2, r8
   262dc:	mov	r1, sl
   262e0:	ldr	r0, [pc, #968]	; 266b0 <g_strcmp0@plt+0x114e4>
   262e4:	b	25d70 <g_strcmp0@plt+0x10ba4>
   262e8:	bl	14b6c <__stack_chk_fail@plt>
   262ec:	mov	r1, r7
   262f0:	add	r0, sp, #92	; 0x5c
   262f4:	bl	14494 <g_variant_iter_init@plt>
   262f8:	add	r0, sp, #92	; 0x5c
   262fc:	bl	148f0 <g_variant_iter_next_value@plt>
   26300:	mov	r1, r9
   26304:	mov	r4, r0
   26308:	bl	1492c <g_variant_dup_string@plt>
   2630c:	mov	sl, r0
   26310:	mov	r0, r4
   26314:	bl	14cd4 <g_variant_unref@plt>
   26318:	add	r0, sp, #92	; 0x5c
   2631c:	bl	148f0 <g_variant_iter_next_value@plt>
   26320:	mov	r1, r9
   26324:	mov	r4, r0
   26328:	bl	1492c <g_variant_dup_string@plt>
   2632c:	mov	r8, r0
   26330:	mov	r0, r4
   26334:	bl	14cd4 <g_variant_unref@plt>
   26338:	add	r0, sp, #92	; 0x5c
   2633c:	bl	148f0 <g_variant_iter_next_value@plt>
   26340:	mov	r1, r9
   26344:	mov	r4, r0
   26348:	bl	1492c <g_variant_dup_string@plt>
   2634c:	mov	r7, r0
   26350:	mov	r0, r4
   26354:	bl	14cd4 <g_variant_unref@plt>
   26358:	ldr	r1, [pc, #868]	; 266c4 <g_strcmp0@plt+0x114f8>
   2635c:	ldr	r2, [pc, #868]	; 266c8 <g_strcmp0@plt+0x114fc>
   26360:	str	r7, [sp, #8]
   26364:	str	r8, [sp]
   26368:	mov	r3, sl
   2636c:	ldr	r0, [r1]
   26370:	str	r2, [sp, #4]
   26374:	ldr	r2, [pc, #820]	; 266b0 <g_strcmp0@plt+0x114e4>
   26378:	b	26128 <g_strcmp0@plt+0x10f5c>
   2637c:	mov	r1, r7
   26380:	mov	r4, #0
   26384:	add	r0, sp, #28
   26388:	str	r4, [sp, #20]
   2638c:	str	r4, [sp, #24]
   26390:	bl	14494 <g_variant_iter_init@plt>
   26394:	add	r0, sp, #28
   26398:	bl	148f0 <g_variant_iter_next_value@plt>
   2639c:	mov	r1, r4
   263a0:	add	r4, sp, #156	; 0x9c
   263a4:	mov	r7, r0
   263a8:	bl	1492c <g_variant_dup_string@plt>
   263ac:	mov	sl, r0
   263b0:	mov	r0, r7
   263b4:	bl	14cd4 <g_variant_unref@plt>
   263b8:	add	r3, sp, #24
   263bc:	add	r2, sp, #20
   263c0:	mov	r1, sl
   263c4:	mov	r0, r8
   263c8:	bl	23698 <g_strcmp0@plt+0xe4cc>
   263cc:	mov	r0, r6
   263d0:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   263d4:	bl	14704 <g_dbus_message_new_method_reply@plt>
   263d8:	add	r8, sp, #92	; 0x5c
   263dc:	ldr	r1, [pc, #728]	; 266bc <g_strcmp0@plt+0x114f0>
   263e0:	mov	r7, r0
   263e4:	mov	r0, r8
   263e8:	bl	149e0 <g_variant_builder_init@plt>
   263ec:	mov	r0, r4
   263f0:	ldr	r1, [pc, #712]	; 266c0 <g_strcmp0@plt+0x114f4>
   263f4:	ldr	fp, [sp, #20]
   263f8:	bl	149e0 <g_variant_builder_init@plt>
   263fc:	ldr	r3, [sp, #24]
   26400:	cmp	r3, #0
   26404:	ble	2642c <g_strcmp0@plt+0x11260>
   26408:	ldr	r0, [fp], #4
   2640c:	bl	145b4 <g_variant_new_string@plt>
   26410:	add	r9, r9, #1
   26414:	mov	r1, r0
   26418:	mov	r0, r4
   2641c:	bl	145f0 <g_variant_builder_add_value@plt>
   26420:	ldr	r3, [sp, #24]
   26424:	cmp	r9, r3
   26428:	blt	26408 <g_strcmp0@plt+0x1123c>
   2642c:	mov	r0, r4
   26430:	bl	145a8 <g_variant_builder_end@plt>
   26434:	mov	r1, r0
   26438:	mov	r0, r8
   2643c:	bl	145f0 <g_variant_builder_add_value@plt>
   26440:	mov	r0, r8
   26444:	bl	145a8 <g_variant_builder_end@plt>
   26448:	mov	r1, r0
   2644c:	mov	r0, r7
   26450:	bl	14848 <g_dbus_message_set_body@plt>
   26454:	mov	r0, r6
   26458:	bl	14c68 <g_dbus_method_invocation_get_connection@plt>
   2645c:	mov	r3, #0
   26460:	str	r3, [sp]
   26464:	mov	r2, r3
   26468:	mov	r1, r7
   2646c:	bl	14adc <g_dbus_connection_send_message@plt>
   26470:	mov	r0, r6
   26474:	bl	14e90 <g_object_unref@plt>
   26478:	mov	r0, r7
   2647c:	b	25bb0 <g_strcmp0@plt+0x109e4>
   26480:	mov	r1, r7
   26484:	add	r0, sp, #28
   26488:	str	r9, [sp, #20]
   2648c:	str	r9, [sp, #24]
   26490:	bl	14494 <g_variant_iter_init@plt>
   26494:	add	r2, sp, #24
   26498:	add	r1, sp, #20
   2649c:	mov	r0, r8
   264a0:	bl	2360c <g_strcmp0@plt+0xe440>
   264a4:	mov	r0, r6
   264a8:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   264ac:	bl	14704 <g_dbus_message_new_method_reply@plt>
   264b0:	add	r8, sp, #92	; 0x5c
   264b4:	ldr	r1, [pc, #512]	; 266bc <g_strcmp0@plt+0x114f0>
   264b8:	add	r4, sp, #156	; 0x9c
   264bc:	mov	sl, r0
   264c0:	mov	r0, r8
   264c4:	bl	149e0 <g_variant_builder_init@plt>
   264c8:	mov	r0, r4
   264cc:	ldr	r1, [pc, #492]	; 266c0 <g_strcmp0@plt+0x114f4>
   264d0:	ldr	r7, [sp, #20]
   264d4:	bl	149e0 <g_variant_builder_init@plt>
   264d8:	ldr	r3, [sp, #24]
   264dc:	cmp	r3, #0
   264e0:	ble	25cb8 <g_strcmp0@plt+0x10aec>
   264e4:	ldr	r0, [r7], #4
   264e8:	bl	145b4 <g_variant_new_string@plt>
   264ec:	add	r9, r9, #1
   264f0:	mov	r1, r0
   264f4:	mov	r0, r4
   264f8:	bl	145f0 <g_variant_builder_add_value@plt>
   264fc:	ldr	r3, [sp, #24]
   26500:	cmp	r9, r3
   26504:	blt	264e4 <g_strcmp0@plt+0x11318>
   26508:	b	25cb8 <g_strcmp0@plt+0x10aec>
   2650c:	mov	r1, r7
   26510:	add	r0, sp, #92	; 0x5c
   26514:	bl	14494 <g_variant_iter_init@plt>
   26518:	add	r0, sp, #92	; 0x5c
   2651c:	bl	148f0 <g_variant_iter_next_value@plt>
   26520:	mov	r1, r9
   26524:	mov	r4, r0
   26528:	bl	1492c <g_variant_dup_string@plt>
   2652c:	mov	sl, r0
   26530:	mov	r0, r4
   26534:	bl	14cd4 <g_variant_unref@plt>
   26538:	add	r0, sp, #92	; 0x5c
   2653c:	bl	148f0 <g_variant_iter_next_value@plt>
   26540:	mov	r1, r9
   26544:	mov	r4, r0
   26548:	bl	1492c <g_variant_dup_string@plt>
   2654c:	mov	r8, r0
   26550:	mov	r0, r4
   26554:	bl	14cd4 <g_variant_unref@plt>
   26558:	add	r0, sp, #92	; 0x5c
   2655c:	bl	148f0 <g_variant_iter_next_value@plt>
   26560:	mov	r1, r9
   26564:	mov	r4, r0
   26568:	bl	1492c <g_variant_dup_string@plt>
   2656c:	mov	r7, r0
   26570:	mov	r0, r4
   26574:	bl	14cd4 <g_variant_unref@plt>
   26578:	ldr	r1, [pc, #324]	; 266c4 <g_strcmp0@plt+0x114f8>
   2657c:	ldr	r2, [pc, #324]	; 266c8 <g_strcmp0@plt+0x114fc>
   26580:	str	r7, [sp, #8]
   26584:	str	r8, [sp]
   26588:	mov	r3, sl
   2658c:	ldr	r0, [r1]
   26590:	str	r2, [sp, #4]
   26594:	ldr	r2, [pc, #280]	; 266b4 <g_strcmp0@plt+0x114e8>
   26598:	b	26128 <g_strcmp0@plt+0x10f5c>
   2659c:	mov	r1, r7
   265a0:	add	r0, sp, #92	; 0x5c
   265a4:	bl	14494 <g_variant_iter_init@plt>
   265a8:	add	r0, sp, #92	; 0x5c
   265ac:	bl	148f0 <g_variant_iter_next_value@plt>
   265b0:	mov	r1, r9
   265b4:	mov	r4, r0
   265b8:	bl	1492c <g_variant_dup_string@plt>
   265bc:	mov	sl, r0
   265c0:	mov	r0, r4
   265c4:	bl	14cd4 <g_variant_unref@plt>
   265c8:	add	r0, sp, #92	; 0x5c
   265cc:	bl	148f0 <g_variant_iter_next_value@plt>
   265d0:	mov	r1, r9
   265d4:	mov	r4, r0
   265d8:	bl	1492c <g_variant_dup_string@plt>
   265dc:	mov	r8, r0
   265e0:	mov	r0, r4
   265e4:	bl	14cd4 <g_variant_unref@plt>
   265e8:	mov	r2, r8
   265ec:	mov	r1, sl
   265f0:	ldr	r0, [pc, #188]	; 266b4 <g_strcmp0@plt+0x114e8>
   265f4:	b	25d70 <g_strcmp0@plt+0x10ba4>
   265f8:	andeq	fp, r4, r8, asr #19
   265fc:	andeq	r6, r3, ip, ror #18
   26600:	andeq	r6, r3, r8, ror r9
   26604:	andeq	r8, r3, r4, lsr fp
   26608:	andeq	r8, r3, r4, asr #22
   2660c:	andeq	r6, r3, r4, lsl #19
   26610:	andeq	r8, r3, r4, asr fp
   26614:	andeq	r8, r3, ip, ror #22
   26618:	andeq	r8, r3, ip, ror fp
   2661c:	muleq	r3, r4, fp
   26620:	andeq	r8, r3, r0, lsr #23
   26624:	andeq	r8, r3, ip, lsr #23
   26628:	andeq	r8, r3, r0, asr #23
   2662c:	ldrdeq	r8, [r3], -r8	; <UNPREDICTABLE>
   26630:	andeq	r8, r3, r8, ror #23
   26634:	strdeq	r8, [r3], -r8	; <UNPREDICTABLE>
   26638:	andeq	r8, r3, r8, lsl #24
   2663c:	andeq	r8, r3, ip, lsl ip
   26640:	andeq	r8, r3, r8, lsr #24
   26644:	andeq	r8, r3, r4, lsr ip
   26648:	andeq	r8, r3, r0, asr #24
   2664c:	andeq	r8, r3, r4, asr ip
   26650:	andeq	r8, r3, ip, asr ip
   26654:	andeq	r8, r3, r4, ror #24
   26658:	andeq	r8, r3, r4, ror ip
   2665c:	andeq	r8, r3, r8, lsl #25
   26660:	muleq	r3, r4, ip
   26664:	andeq	r8, r3, r0, lsr #25
   26668:			; <UNDEFINED> instruction: 0x00038cb0
   2666c:	andeq	r8, r3, r4, asr #25
   26670:	andeq	r8, r3, r0, ror #25
   26674:	strdeq	r8, [r3], -r0
   26678:	andeq	r8, r3, r0, lsl #26
   2667c:	andeq	r8, r3, r0, lsl sp
   26680:	andeq	r8, r3, r4, lsr #26
   26684:	andeq	r8, r3, ip, lsr sp
   26688:	andeq	r8, r3, r4, asr sp
   2668c:	andeq	r8, r3, r4, ror #26
   26690:	andeq	r8, r3, r4, ror sp
   26694:	andeq	r8, r3, r4, lsl #27
   26698:	muleq	r3, r4, sp
   2669c:	strdeq	r2, [r2], -ip
   266a0:	andeq	r7, r3, r0, lsl #10
   266a4:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   266a8:	andeq	r4, r3, r0, asr #16
   266ac:	andeq	r7, r3, r4, lsr r5
   266b0:	andeq	r4, r3, r8, lsr #16
   266b4:	andeq	r4, r3, ip, ror r9
   266b8:	andeq	r7, r3, r0, lsl r6
   266bc:	andeq	r7, r3, r0, lsl sl
   266c0:	andeq	r5, r3, ip, ror #3
   266c4:	andeq	ip, r4, r0, asr #32
   266c8:	andeq	r4, r3, r4, asr r8
   266cc:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   266d0:	mov	r1, r7
   266d4:	add	r0, sp, #28
   266d8:	str	r9, [sp, #20]
   266dc:	str	r9, [sp, #24]
   266e0:	bl	14494 <g_variant_iter_init@plt>
   266e4:	add	r0, sp, #28
   266e8:	bl	148f0 <g_variant_iter_next_value@plt>
   266ec:	mov	r1, r9
   266f0:	mov	r4, r0
   266f4:	bl	1492c <g_variant_dup_string@plt>
   266f8:	mov	sl, r0
   266fc:	mov	r0, r4
   26700:	bl	14cd4 <g_variant_unref@plt>
   26704:	mov	r1, sl
   26708:	add	r3, sp, #24
   2670c:	add	r2, sp, #20
   26710:	mov	r0, r8
   26714:	bl	23834 <g_strcmp0@plt+0xe668>
   26718:	mov	r0, r6
   2671c:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   26720:	bl	14704 <g_dbus_message_new_method_reply@plt>
   26724:	add	r8, sp, #92	; 0x5c
   26728:	ldr	r1, [pc, #-116]	; 266bc <g_strcmp0@plt+0x114f0>
   2672c:	add	r4, sp, #156	; 0x9c
   26730:	mov	r7, r0
   26734:	mov	r0, r8
   26738:	bl	149e0 <g_variant_builder_init@plt>
   2673c:	mov	r0, r4
   26740:	ldr	r1, [pc, #-136]	; 266c0 <g_strcmp0@plt+0x114f4>
   26744:	ldr	fp, [sp, #20]
   26748:	bl	149e0 <g_variant_builder_init@plt>
   2674c:	b	26768 <g_strcmp0@plt+0x1159c>
   26750:	ldr	r0, [fp, r9, lsl #2]
   26754:	bl	145b4 <g_variant_new_string@plt>
   26758:	add	r9, r9, #1
   2675c:	mov	r1, r0
   26760:	mov	r0, r4
   26764:	bl	145f0 <g_variant_builder_add_value@plt>
   26768:	ldr	r3, [sp, #24]
   2676c:	cmp	r9, r3
   26770:	blt	26750 <g_strcmp0@plt+0x11584>
   26774:	b	2642c <g_strcmp0@plt+0x11260>
   26778:	mov	r1, r7
   2677c:	add	r0, sp, #28
   26780:	str	r9, [sp, #20]
   26784:	str	r9, [sp, #24]
   26788:	bl	14494 <g_variant_iter_init@plt>
   2678c:	add	r2, sp, #24
   26790:	add	r1, sp, #20
   26794:	mov	r0, r8
   26798:	bl	237a8 <g_strcmp0@plt+0xe5dc>
   2679c:	mov	r0, r6
   267a0:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   267a4:	bl	14704 <g_dbus_message_new_method_reply@plt>
   267a8:	add	r8, sp, #92	; 0x5c
   267ac:	ldr	r1, [pc, #-248]	; 266bc <g_strcmp0@plt+0x114f0>
   267b0:	add	r4, sp, #156	; 0x9c
   267b4:	mov	r7, r0
   267b8:	mov	r0, r8
   267bc:	bl	149e0 <g_variant_builder_init@plt>
   267c0:	mov	r0, r4
   267c4:	ldr	r1, [pc, #-268]	; 266c0 <g_strcmp0@plt+0x114f4>
   267c8:	ldr	sl, [sp, #20]
   267cc:	bl	149e0 <g_variant_builder_init@plt>
   267d0:	b	267ec <g_strcmp0@plt+0x11620>
   267d4:	ldr	r0, [sl, r9, lsl #2]
   267d8:	bl	145b4 <g_variant_new_string@plt>
   267dc:	add	r9, r9, #1
   267e0:	mov	r1, r0
   267e4:	mov	r0, r4
   267e8:	bl	145f0 <g_variant_builder_add_value@plt>
   267ec:	ldr	r3, [sp, #24]
   267f0:	cmp	r9, r3
   267f4:	blt	267d4 <g_strcmp0@plt+0x11608>
   267f8:	mov	r0, r4
   267fc:	bl	145a8 <g_variant_builder_end@plt>
   26800:	mov	r1, r0
   26804:	mov	r0, r8
   26808:	bl	145f0 <g_variant_builder_add_value@plt>
   2680c:	mov	r0, r8
   26810:	bl	145a8 <g_variant_builder_end@plt>
   26814:	mov	r1, r0
   26818:	mov	r0, r7
   2681c:	bl	14848 <g_dbus_message_set_body@plt>
   26820:	mov	r0, r6
   26824:	bl	14c68 <g_dbus_method_invocation_get_connection@plt>
   26828:	mov	r3, #0
   2682c:	mov	r1, r7
   26830:	str	r3, [sp]
   26834:	mov	r2, r3
   26838:	bl	14adc <g_dbus_connection_send_message@plt>
   2683c:	mov	r0, r6
   26840:	bl	14e90 <g_object_unref@plt>
   26844:	mov	r0, r7
   26848:	bl	14e90 <g_object_unref@plt>
   2684c:	ldrd	r0, [sp, #20]
   26850:	bl	22bd8 <g_strcmp0@plt+0xda0c>
   26854:	b	25a4c <g_strcmp0@plt+0x10880>
   26858:	mov	r0, r6
   2685c:	bl	14e90 <g_object_unref@plt>
   26860:	b	25a4c <g_strcmp0@plt+0x10880>
   26864:	mov	r1, r7
   26868:	add	r0, sp, #92	; 0x5c
   2686c:	bl	14494 <g_variant_iter_init@plt>
   26870:	mov	r0, r8
   26874:	bl	24250 <g_strcmp0@plt+0xf084>
   26878:	b	25be8 <g_strcmp0@plt+0x10a1c>
   2687c:	mov	r1, r7
   26880:	add	r0, sp, #92	; 0x5c
   26884:	bl	14494 <g_variant_iter_init@plt>
   26888:	mov	r0, r8
   2688c:	bl	24140 <g_strcmp0@plt+0xef74>
   26890:	b	25be8 <g_strcmp0@plt+0x10a1c>
   26894:	mov	r1, r7
   26898:	add	r0, sp, #92	; 0x5c
   2689c:	bl	14494 <g_variant_iter_init@plt>
   268a0:	mov	r0, r8
   268a4:	bl	24030 <g_strcmp0@plt+0xee64>
   268a8:	b	25be8 <g_strcmp0@plt+0x10a1c>
   268ac:	mov	r1, r7
   268b0:	add	r0, sp, #92	; 0x5c
   268b4:	bl	14494 <g_variant_iter_init@plt>
   268b8:	mov	r0, r8
   268bc:	bl	23f20 <g_strcmp0@plt+0xed54>
   268c0:	b	25be8 <g_strcmp0@plt+0x10a1c>
   268c4:	mov	r1, r7
   268c8:	add	r0, sp, #92	; 0x5c
   268cc:	bl	14494 <g_variant_iter_init@plt>
   268d0:	mov	r0, r8
   268d4:	bl	23e10 <g_strcmp0@plt+0xec44>
   268d8:	b	25be8 <g_strcmp0@plt+0x10a1c>
   268dc:	mov	r1, r7
   268e0:	add	r0, sp, #92	; 0x5c
   268e4:	bl	14494 <g_variant_iter_init@plt>
   268e8:	mov	r0, r8
   268ec:	bl	23d00 <g_strcmp0@plt+0xeb34>
   268f0:	b	25be8 <g_strcmp0@plt+0x10a1c>
   268f4:	mov	r1, r7
   268f8:	add	r0, sp, #92	; 0x5c
   268fc:	bl	14494 <g_variant_iter_init@plt>
   26900:	mov	r0, r8
   26904:	bl	23bf0 <g_strcmp0@plt+0xea24>
   26908:	b	25be8 <g_strcmp0@plt+0x10a1c>
   2690c:	mov	r1, r7
   26910:	add	r0, sp, #92	; 0x5c
   26914:	bl	14494 <g_variant_iter_init@plt>
   26918:	add	r0, sp, #92	; 0x5c
   2691c:	bl	148f0 <g_variant_iter_next_value@plt>
   26920:	mov	r1, r9
   26924:	mov	r4, r0
   26928:	bl	1492c <g_variant_dup_string@plt>
   2692c:	mov	sl, r0
   26930:	mov	r0, r4
   26934:	bl	14cd4 <g_variant_unref@plt>
   26938:	add	r0, sp, #92	; 0x5c
   2693c:	bl	148f0 <g_variant_iter_next_value@plt>
   26940:	mov	r1, r9
   26944:	mov	r4, r0
   26948:	bl	1492c <g_variant_dup_string@plt>
   2694c:	mov	r7, r0
   26950:	mov	r0, r4
   26954:	bl	14cd4 <g_variant_unref@plt>
   26958:	mov	r2, r7
   2695c:	mov	r1, sl
   26960:	mov	r0, r8
   26964:	bl	24360 <g_strcmp0@plt+0xf194>
   26968:	mov	r0, r6
   2696c:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   26970:	bl	14704 <g_dbus_message_new_method_reply@plt>
   26974:	ldr	r1, [pc, #-704]	; 266bc <g_strcmp0@plt+0x114f0>
   26978:	mov	r4, r0
   2697c:	add	r0, sp, #156	; 0x9c
   26980:	bl	149e0 <g_variant_builder_init@plt>
   26984:	add	r0, sp, #156	; 0x9c
   26988:	bl	145a8 <g_variant_builder_end@plt>
   2698c:	mov	r1, r0
   26990:	mov	r0, r4
   26994:	bl	14848 <g_dbus_message_set_body@plt>
   26998:	mov	r0, r6
   2699c:	bl	14c68 <g_dbus_method_invocation_get_connection@plt>
   269a0:	mov	r1, r4
   269a4:	mov	r3, r9
   269a8:	mov	r2, r9
   269ac:	str	r9, [sp]
   269b0:	bl	14adc <g_dbus_connection_send_message@plt>
   269b4:	mov	r0, r6
   269b8:	bl	14e90 <g_object_unref@plt>
   269bc:	mov	r0, r4
   269c0:	bl	14e90 <g_object_unref@plt>
   269c4:	mov	r0, sl
   269c8:	bl	14bd8 <g_free@plt>
   269cc:	mov	r0, r7
   269d0:	bl	14bd8 <g_free@plt>
   269d4:	b	25a4c <g_strcmp0@plt+0x10880>
   269d8:	mov	r1, r7
   269dc:	add	r0, sp, #92	; 0x5c
   269e0:	bl	14494 <g_variant_iter_init@plt>
   269e4:	add	r0, sp, #92	; 0x5c
   269e8:	bl	148f0 <g_variant_iter_next_value@plt>
   269ec:	mov	r1, r9
   269f0:	mov	r4, r0
   269f4:	bl	1492c <g_variant_dup_string@plt>
   269f8:	mov	sl, r0
   269fc:	mov	r0, r4
   26a00:	bl	14cd4 <g_variant_unref@plt>
   26a04:	add	r0, sp, #92	; 0x5c
   26a08:	bl	148f0 <g_variant_iter_next_value@plt>
   26a0c:	mov	r1, r9
   26a10:	mov	r4, r0
   26a14:	bl	1492c <g_variant_dup_string@plt>
   26a18:	mov	r8, r0
   26a1c:	mov	r0, r4
   26a20:	bl	14cd4 <g_variant_unref@plt>
   26a24:	add	r0, sp, #92	; 0x5c
   26a28:	bl	148f0 <g_variant_iter_next_value@plt>
   26a2c:	mov	r1, r9
   26a30:	mov	r4, r0
   26a34:	bl	1492c <g_variant_dup_string@plt>
   26a38:	mov	r7, r0
   26a3c:	mov	r0, r4
   26a40:	bl	14cd4 <g_variant_unref@plt>
   26a44:	ldr	r1, [pc, #-904]	; 266c4 <g_strcmp0@plt+0x114f8>
   26a48:	ldr	r2, [pc, #-904]	; 266c8 <g_strcmp0@plt+0x114fc>
   26a4c:	str	r7, [sp, #8]
   26a50:	str	r8, [sp]
   26a54:	mov	r3, sl
   26a58:	ldr	r0, [r1]
   26a5c:	str	r2, [sp, #4]
   26a60:	ldr	r2, [pc, #-944]	; 266b8 <g_strcmp0@plt+0x114ec>
   26a64:	b	26128 <g_strcmp0@plt+0x10f5c>
   26a68:	mov	r1, r7
   26a6c:	add	r0, sp, #92	; 0x5c
   26a70:	bl	14494 <g_variant_iter_init@plt>
   26a74:	add	r0, sp, #92	; 0x5c
   26a78:	bl	148f0 <g_variant_iter_next_value@plt>
   26a7c:	mov	r1, #0
   26a80:	mov	r4, r0
   26a84:	bl	1492c <g_variant_dup_string@plt>
   26a88:	mov	r9, r0
   26a8c:	mov	r0, r4
   26a90:	bl	14cd4 <g_variant_unref@plt>
   26a94:	add	r0, sp, #92	; 0x5c
   26a98:	bl	148f0 <g_variant_iter_next_value@plt>
   26a9c:	mov	r1, #0
   26aa0:	mov	r4, r0
   26aa4:	bl	1492c <g_variant_dup_string@plt>
   26aa8:	mov	r8, r0
   26aac:	mov	r0, r4
   26ab0:	bl	14cd4 <g_variant_unref@plt>
   26ab4:	mov	r2, r8
   26ab8:	mov	r1, r9
   26abc:	ldr	r0, [pc, #-1036]	; 266b8 <g_strcmp0@plt+0x114ec>
   26ac0:	bl	22a14 <g_strcmp0@plt+0xd848>
   26ac4:	mov	r7, r0
   26ac8:	mov	r0, #0
   26acc:	bl	14bd8 <g_free@plt>
   26ad0:	mov	r0, r6
   26ad4:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   26ad8:	bl	14704 <g_dbus_message_new_method_reply@plt>
   26adc:	ldr	r1, [pc, #-1064]	; 266bc <g_strcmp0@plt+0x114f0>
   26ae0:	mov	r4, r0
   26ae4:	add	r0, sp, #156	; 0x9c
   26ae8:	bl	149e0 <g_variant_builder_init@plt>
   26aec:	mov	r0, r7
   26af0:	bl	145b4 <g_variant_new_string@plt>
   26af4:	mov	r1, r0
   26af8:	add	r0, sp, #156	; 0x9c
   26afc:	bl	145f0 <g_variant_builder_add_value@plt>
   26b00:	b	25ebc <g_strcmp0@plt+0x10cf0>
   26b04:	mov	r1, r7
   26b08:	add	r0, sp, #28
   26b0c:	str	r9, [sp, #20]
   26b10:	str	r9, [sp, #24]
   26b14:	bl	14494 <g_variant_iter_init@plt>
   26b18:	add	r0, sp, #28
   26b1c:	bl	148f0 <g_variant_iter_next_value@plt>
   26b20:	mov	r1, r9
   26b24:	mov	r4, r0
   26b28:	bl	1492c <g_variant_dup_string@plt>
   26b2c:	mov	sl, r0
   26b30:	mov	r0, r4
   26b34:	bl	14cd4 <g_variant_unref@plt>
   26b38:	mov	r1, sl
   26b3c:	add	r3, sp, #24
   26b40:	add	r2, sp, #20
   26b44:	mov	r0, r8
   26b48:	bl	23ae0 <g_strcmp0@plt+0xe914>
   26b4c:	mov	r0, r6
   26b50:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   26b54:	bl	14704 <g_dbus_message_new_method_reply@plt>
   26b58:	add	r8, sp, #92	; 0x5c
   26b5c:	ldr	r1, [pc, #-1192]	; 266bc <g_strcmp0@plt+0x114f0>
   26b60:	add	r4, sp, #156	; 0x9c
   26b64:	mov	r7, r0
   26b68:	mov	r0, r8
   26b6c:	bl	149e0 <g_variant_builder_init@plt>
   26b70:	mov	r0, r4
   26b74:	ldr	r1, [pc, #-1212]	; 266c0 <g_strcmp0@plt+0x114f4>
   26b78:	ldr	fp, [sp, #20]
   26b7c:	bl	149e0 <g_variant_builder_init@plt>
   26b80:	b	26b9c <g_strcmp0@plt+0x119d0>
   26b84:	ldr	r0, [fp, r9, lsl #2]
   26b88:	bl	145b4 <g_variant_new_string@plt>
   26b8c:	add	r9, r9, #1
   26b90:	mov	r1, r0
   26b94:	mov	r0, r4
   26b98:	bl	145f0 <g_variant_builder_add_value@plt>
   26b9c:	ldr	r3, [sp, #24]
   26ba0:	cmp	r9, r3
   26ba4:	blt	26b84 <g_strcmp0@plt+0x119b8>
   26ba8:	b	2642c <g_strcmp0@plt+0x11260>
   26bac:	mov	r1, r7
   26bb0:	add	r0, sp, #28
   26bb4:	str	r9, [sp, #20]
   26bb8:	str	r9, [sp, #24]
   26bbc:	bl	14494 <g_variant_iter_init@plt>
   26bc0:	add	r2, sp, #24
   26bc4:	add	r1, sp, #20
   26bc8:	mov	r0, r8
   26bcc:	bl	23a54 <g_strcmp0@plt+0xe888>
   26bd0:	mov	r0, r6
   26bd4:	bl	14a64 <g_dbus_method_invocation_get_message@plt>
   26bd8:	bl	14704 <g_dbus_message_new_method_reply@plt>
   26bdc:	add	r8, sp, #92	; 0x5c
   26be0:	ldr	r1, [pc, #-1324]	; 266bc <g_strcmp0@plt+0x114f0>
   26be4:	add	r4, sp, #156	; 0x9c
   26be8:	mov	r7, r0
   26bec:	mov	r0, r8
   26bf0:	bl	149e0 <g_variant_builder_init@plt>
   26bf4:	mov	r0, r4
   26bf8:	ldr	r1, [pc, #-1344]	; 266c0 <g_strcmp0@plt+0x114f4>
   26bfc:	ldr	sl, [sp, #20]
   26c00:	bl	149e0 <g_variant_builder_init@plt>
   26c04:	b	26c20 <g_strcmp0@plt+0x11a54>
   26c08:	ldr	r0, [sl, r9, lsl #2]
   26c0c:	bl	145b4 <g_variant_new_string@plt>
   26c10:	add	r9, r9, #1
   26c14:	mov	r1, r0
   26c18:	mov	r0, r4
   26c1c:	bl	145f0 <g_variant_builder_add_value@plt>
   26c20:	ldr	r3, [sp, #24]
   26c24:	cmp	r9, r3
   26c28:	blt	26c08 <g_strcmp0@plt+0x11a3c>
   26c2c:	b	267f8 <g_strcmp0@plt+0x1162c>
   26c30:	mov	r1, r7
   26c34:	add	r0, sp, #92	; 0x5c
   26c38:	bl	14494 <g_variant_iter_init@plt>
   26c3c:	mov	r0, r8
   26c40:	bl	23944 <g_strcmp0@plt+0xe778>
   26c44:	b	25be8 <g_strcmp0@plt+0x10a1c>
   26c48:	mov	r1, r7
   26c4c:	add	r0, sp, #92	; 0x5c
   26c50:	bl	14494 <g_variant_iter_init@plt>
   26c54:	add	r0, sp, #92	; 0x5c
   26c58:	bl	148f0 <g_variant_iter_next_value@plt>
   26c5c:	mov	r1, r9
   26c60:	mov	r4, r0
   26c64:	bl	1492c <g_variant_dup_string@plt>
   26c68:	mov	sl, r0
   26c6c:	mov	r0, r4
   26c70:	bl	14cd4 <g_variant_unref@plt>
   26c74:	add	r0, sp, #92	; 0x5c
   26c78:	bl	148f0 <g_variant_iter_next_value@plt>
   26c7c:	mov	r1, r9
   26c80:	mov	r4, r0
   26c84:	bl	1492c <g_variant_dup_string@plt>
   26c88:	mov	r8, r0
   26c8c:	mov	r0, r4
   26c90:	bl	14cd4 <g_variant_unref@plt>
   26c94:	add	r0, sp, #92	; 0x5c
   26c98:	bl	148f0 <g_variant_iter_next_value@plt>
   26c9c:	mov	r1, r9
   26ca0:	mov	r4, r0
   26ca4:	bl	1492c <g_variant_dup_string@plt>
   26ca8:	mov	r7, r0
   26cac:	mov	r0, r4
   26cb0:	bl	14cd4 <g_variant_unref@plt>
   26cb4:	ldr	r1, [pc, #-1528]	; 266c4 <g_strcmp0@plt+0x114f8>
   26cb8:	ldr	r2, [pc, #-1528]	; 266c8 <g_strcmp0@plt+0x114fc>
   26cbc:	str	r7, [sp, #8]
   26cc0:	str	r8, [sp]
   26cc4:	mov	r3, sl
   26cc8:	ldr	r0, [r1]
   26ccc:	str	r2, [sp, #4]
   26cd0:	ldr	r2, [pc, #-1548]	; 266cc <g_strcmp0@plt+0x11500>
   26cd4:	b	26128 <g_strcmp0@plt+0x10f5c>
   26cd8:	mov	r1, r7
   26cdc:	add	r0, sp, #92	; 0x5c
   26ce0:	bl	14494 <g_variant_iter_init@plt>
   26ce4:	add	r0, sp, #92	; 0x5c
   26ce8:	bl	148f0 <g_variant_iter_next_value@plt>
   26cec:	mov	r1, r9
   26cf0:	mov	r4, r0
   26cf4:	bl	1492c <g_variant_dup_string@plt>
   26cf8:	mov	sl, r0
   26cfc:	mov	r0, r4
   26d00:	bl	14cd4 <g_variant_unref@plt>
   26d04:	add	r0, sp, #92	; 0x5c
   26d08:	bl	148f0 <g_variant_iter_next_value@plt>
   26d0c:	mov	r1, r9
   26d10:	mov	r4, r0
   26d14:	bl	1492c <g_variant_dup_string@plt>
   26d18:	mov	r8, r0
   26d1c:	mov	r0, r4
   26d20:	bl	14cd4 <g_variant_unref@plt>
   26d24:	mov	r2, r8
   26d28:	mov	r1, sl
   26d2c:	ldr	r0, [pc, #-1640]	; 266cc <g_strcmp0@plt+0x11500>
   26d30:	b	25d70 <g_strcmp0@plt+0x10ba4>
   26d34:	mov	r1, #0
   26d38:	b	143d4 <g_object_new@plt>
   26d3c:	push	{r4, r5, r6, lr}
   26d40:	mcr	15, 0, r0, cr7, cr10, {5}
   26d44:	ldr	r4, [pc, #104]	; 26db4 <g_strcmp0@plt+0x11be8>
   26d48:	ldr	r5, [r4, #112]	; 0x70
   26d4c:	mcr	15, 0, r0, cr7, cr10, {5}
   26d50:	cmp	r5, #0
   26d54:	beq	26d60 <g_strcmp0@plt+0x11b94>
   26d58:	ldr	r0, [r4, #112]	; 0x70
   26d5c:	pop	{r4, r5, r6, pc}
   26d60:	add	r0, r4, #112	; 0x70
   26d64:	bl	14a28 <g_once_init_enter@plt>
   26d68:	cmp	r0, #0
   26d6c:	beq	26d58 <g_strcmp0@plt+0x11b8c>
   26d70:	mov	r3, r5
   26d74:	ldr	r2, [pc, #60]	; 26db8 <g_strcmp0@plt+0x11bec>
   26d78:	ldr	r1, [pc, #60]	; 26dbc <g_strcmp0@plt+0x11bf0>
   26d7c:	mov	r0, #80	; 0x50
   26d80:	bl	14428 <g_type_register_static@plt>
   26d84:	mov	r5, r0
   26d88:	ldr	r0, [pc, #48]	; 26dc0 <g_strcmp0@plt+0x11bf4>
   26d8c:	bl	14d64 <g_quark_from_static_string@plt>
   26d90:	ldr	r2, [pc, #44]	; 26dc4 <g_strcmp0@plt+0x11bf8>
   26d94:	mov	r1, r0
   26d98:	mov	r0, r5
   26d9c:	bl	15028 <g_type_set_qdata@plt>
   26da0:	add	r0, r4, #112	; 0x70
   26da4:	mov	r1, r5
   26da8:	bl	14ed8 <g_once_init_leave@plt>
   26dac:	ldr	r0, [r4, #112]	; 0x70
   26db0:	pop	{r4, r5, r6, pc}
   26db4:	andeq	ip, r4, r0, lsl r3
   26db8:	andeq	r6, r3, r8, lsl #21
   26dbc:	andeq	r8, r3, ip, lsr #27
   26dc0:	andeq	r6, r3, r4, asr #3
   26dc4:	andeq	r2, r2, r0, lsl #11
   26dc8:	push	{r4, lr}
   26dcc:	bl	26d3c <g_strcmp0@plt+0x11b70>
   26dd0:	mov	r1, #0
   26dd4:	pop	{r4, lr}
   26dd8:	b	143d4 <g_object_new@plt>
   26ddc:	ldr	r3, [pc, #84]	; 26e38 <g_strcmp0@plt+0x11c6c>
   26de0:	push	{r4, lr}
   26de4:	mov	r4, r0
   26de8:	ldr	r3, [r3]
   26dec:	ldr	r0, [pc, #72]	; 26e3c <g_strcmp0@plt+0x11c70>
   26df0:	add	r3, r4, r3
   26df4:	str	r3, [r4, #12]
   26df8:	bl	147e8 <g_strdup@plt>
   26dfc:	ldr	r3, [r4, #12]
   26e00:	str	r0, [r3]
   26e04:	ldr	r0, [pc, #52]	; 26e40 <g_strcmp0@plt+0x11c74>
   26e08:	bl	147e8 <g_strdup@plt>
   26e0c:	ldr	r3, [r4, #12]
   26e10:	str	r0, [r3, #4]
   26e14:	ldr	r0, [pc, #40]	; 26e44 <g_strcmp0@plt+0x11c78>
   26e18:	bl	147e8 <g_strdup@plt>
   26e1c:	ldr	r3, [r4, #12]
   26e20:	str	r0, [r3, #8]
   26e24:	ldr	r0, [pc, #28]	; 26e48 <g_strcmp0@plt+0x11c7c>
   26e28:	bl	147e8 <g_strdup@plt>
   26e2c:	ldr	r3, [r4, #12]
   26e30:	str	r0, [r3, #12]
   26e34:	pop	{r4, pc}
   26e38:	andeq	ip, r4, r4, lsl #7
   26e3c:	andeq	r8, r3, r4, lsl lr
   26e40:	andeq	r8, r3, ip, lsl lr
   26e44:	andeq	r8, r3, ip, lsr #28
   26e48:	andeq	r8, r3, ip, lsr lr
   26e4c:	ldr	r3, [r0, #12]
   26e50:	push	{r4, r5, r6, lr}
   26e54:	mov	r4, r0
   26e58:	ldr	r0, [r3]
   26e5c:	bl	14bd8 <g_free@plt>
   26e60:	ldr	r3, [r4, #12]
   26e64:	mov	r5, #0
   26e68:	str	r5, [r3]
   26e6c:	ldr	r0, [r3, #4]
   26e70:	bl	14bd8 <g_free@plt>
   26e74:	ldr	r3, [r4, #12]
   26e78:	str	r5, [r3, #4]
   26e7c:	ldr	r0, [r3, #8]
   26e80:	bl	14bd8 <g_free@plt>
   26e84:	ldr	r3, [r4, #12]
   26e88:	str	r5, [r3, #8]
   26e8c:	ldr	r0, [r3, #12]
   26e90:	bl	14bd8 <g_free@plt>
   26e94:	ldr	r3, [r4, #12]
   26e98:	str	r5, [r3, #12]
   26e9c:	ldr	r0, [r3, #16]
   26ea0:	bl	14bd8 <g_free@plt>
   26ea4:	ldr	r3, [r4, #12]
   26ea8:	str	r5, [r3, #16]
   26eac:	ldr	r0, [r3, #20]
   26eb0:	bl	14bd8 <g_free@plt>
   26eb4:	ldr	r3, [r4, #12]
   26eb8:	str	r5, [r3, #20]
   26ebc:	ldr	r0, [r3, #24]
   26ec0:	bl	14bd8 <g_free@plt>
   26ec4:	ldr	r3, [r4, #12]
   26ec8:	str	r5, [r3, #24]
   26ecc:	ldr	r0, [r3, #28]
   26ed0:	bl	14bd8 <g_free@plt>
   26ed4:	ldr	r3, [r4, #12]
   26ed8:	str	r5, [r3, #28]
   26edc:	ldr	r0, [r3, #32]
   26ee0:	bl	14bd8 <g_free@plt>
   26ee4:	ldr	r3, [r4, #12]
   26ee8:	str	r5, [r3, #32]
   26eec:	ldr	r0, [r3, #36]	; 0x24
   26ef0:	bl	14bd8 <g_free@plt>
   26ef4:	ldr	r3, [r4, #12]
   26ef8:	str	r5, [r3, #36]	; 0x24
   26efc:	ldr	r0, [r3, #40]	; 0x28
   26f00:	bl	14bd8 <g_free@plt>
   26f04:	ldr	r3, [r4, #12]
   26f08:	str	r5, [r3, #40]	; 0x28
   26f0c:	ldr	r0, [r3, #44]	; 0x2c
   26f10:	bl	14bd8 <g_free@plt>
   26f14:	ldr	r3, [pc, #24]	; 26f34 <g_strcmp0@plt+0x11d68>
   26f18:	ldr	r2, [r4, #12]
   26f1c:	mov	r0, r4
   26f20:	ldr	r3, [r3, #4]
   26f24:	str	r5, [r2, #44]	; 0x2c
   26f28:	pop	{r4, r5, r6, lr}
   26f2c:	ldr	r3, [r3, #24]
   26f30:	bx	r3
   26f34:	andeq	ip, r4, r4, lsl #7
   26f38:	push	{r4, lr}
   26f3c:	mov	r4, r0
   26f40:	bl	14f8c <g_type_class_peek_parent@plt>
   26f44:	ldr	r3, [pc, #24]	; 26f64 <g_strcmp0@plt+0x11d98>
   26f48:	mov	r1, r3
   26f4c:	str	r0, [r3, #4]
   26f50:	mov	r0, r4
   26f54:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   26f58:	ldr	r3, [pc, #8]	; 26f68 <g_strcmp0@plt+0x11d9c>
   26f5c:	str	r3, [r4, #24]
   26f60:	pop	{r4, pc}
   26f64:	andeq	ip, r4, r4, lsl #7
   26f68:	andeq	r6, r2, ip, asr #28
   26f6c:	ldr	r3, [r0]
   26f70:	cmp	r3, #0
   26f74:	beq	26f94 <g_strcmp0@plt+0x11dc8>
   26f78:	mov	r3, r0
   26f7c:	mov	r0, #0
   26f80:	ldr	r2, [r3, #4]!
   26f84:	add	r0, r0, #1
   26f88:	cmp	r2, #0
   26f8c:	bne	26f80 <g_strcmp0@plt+0x11db4>
   26f90:	bx	lr
   26f94:	mov	r0, r3
   26f98:	bx	lr
   26f9c:	push	{r4, r5, r6, lr}
   26fa0:	subs	r6, r0, #0
   26fa4:	beq	26fd4 <g_strcmp0@plt+0x11e08>
   26fa8:	cmp	r1, #0
   26fac:	ble	26fd4 <g_strcmp0@plt+0x11e08>
   26fb0:	add	r1, r6, r1, lsl #2
   26fb4:	sub	r5, r1, #4
   26fb8:	sub	r4, r6, #4
   26fbc:	ldr	r3, [r4, #4]!
   26fc0:	subs	r0, r3, #0
   26fc4:	beq	26fcc <g_strcmp0@plt+0x11e00>
   26fc8:	bl	14bd8 <g_free@plt>
   26fcc:	cmp	r4, r5
   26fd0:	bne	26fbc <g_strcmp0@plt+0x11df0>
   26fd4:	mov	r0, r6
   26fd8:	pop	{r4, r5, r6, lr}
   26fdc:	b	14bd8 <g_free@plt>
   26fe0:	push	{r4, r5, r6, lr}
   26fe4:	mov	r5, r1
   26fe8:	mov	r1, #0
   26fec:	mov	r6, r2
   26ff0:	bl	143d4 <g_object_new@plt>
   26ff4:	mov	r4, r0
   26ff8:	mov	r0, r5
   26ffc:	bl	147e8 <g_strdup@plt>
   27000:	ldr	r3, [r4, #12]
   27004:	mov	r5, r0
   27008:	ldr	r0, [r3, #24]
   2700c:	bl	14bd8 <g_free@plt>
   27010:	ldr	r3, [r4, #12]
   27014:	mov	r0, r6
   27018:	str	r5, [r3, #24]
   2701c:	bl	147e8 <g_strdup@plt>
   27020:	ldr	r3, [r4, #12]
   27024:	mov	r5, r0
   27028:	ldr	r0, [r3, #28]
   2702c:	bl	14bd8 <g_free@plt>
   27030:	ldr	r3, [r4, #12]
   27034:	str	r5, [r3, #28]
   27038:	ldr	r0, [r3]
   2703c:	bl	14b9c <g_getenv@plt>
   27040:	bl	147e8 <g_strdup@plt>
   27044:	ldr	r3, [r4, #12]
   27048:	mov	r5, r0
   2704c:	ldr	r0, [r3, #16]
   27050:	bl	14bd8 <g_free@plt>
   27054:	ldr	r3, [r4, #12]
   27058:	ldr	r0, [pc, #76]	; 270ac <g_strcmp0@plt+0x11ee0>
   2705c:	str	r5, [r3, #16]
   27060:	bl	14b9c <g_getenv@plt>
   27064:	bl	147e8 <g_strdup@plt>
   27068:	ldr	r3, [r4, #12]
   2706c:	mov	r5, r0
   27070:	ldr	r0, [r3, #44]	; 0x2c
   27074:	bl	14bd8 <g_free@plt>
   27078:	ldr	r3, [r4, #12]
   2707c:	ldr	r0, [pc, #44]	; 270b0 <g_strcmp0@plt+0x11ee4>
   27080:	str	r5, [r3, #44]	; 0x2c
   27084:	bl	14b9c <g_getenv@plt>
   27088:	bl	147e8 <g_strdup@plt>
   2708c:	ldr	r3, [r4, #12]
   27090:	mov	r5, r0
   27094:	ldr	r0, [r3, #32]
   27098:	bl	14bd8 <g_free@plt>
   2709c:	ldr	r3, [r4, #12]
   270a0:	mov	r0, r4
   270a4:	str	r5, [r3, #32]
   270a8:	pop	{r4, r5, r6, pc}
   270ac:	andeq	r8, r3, r0, asr lr
   270b0:	andeq	r5, r3, r0, lsr #8
   270b4:	push	{r4, lr}
   270b8:	mov	r4, r0
   270bc:	ldr	r2, [pc, #128]	; 27144 <g_strcmp0@plt+0x11f78>
   270c0:	mov	r1, #32
   270c4:	mov	r0, #0
   270c8:	bl	14668 <g_log@plt>
   270cc:	ldr	r3, [r4, #12]
   270d0:	ldr	r0, [r3, #4]
   270d4:	bl	14b9c <g_getenv@plt>
   270d8:	bl	147e8 <g_strdup@plt>
   270dc:	mov	r4, r0
   270e0:	mov	r0, #0
   270e4:	bl	14bd8 <g_free@plt>
   270e8:	mov	r3, r4
   270ec:	ldr	r2, [pc, #84]	; 27148 <g_strcmp0@plt+0x11f7c>
   270f0:	mov	r1, #32
   270f4:	mov	r0, #0
   270f8:	bl	14668 <g_log@plt>
   270fc:	cmp	r4, #0
   27100:	beq	27124 <g_strcmp0@plt+0x11f58>
   27104:	ldr	r2, [pc, #64]	; 2714c <g_strcmp0@plt+0x11f80>
   27108:	mov	r1, #32
   2710c:	mov	r0, #0
   27110:	bl	14668 <g_log@plt>
   27114:	mov	r0, r4
   27118:	bl	14bd8 <g_free@plt>
   2711c:	mov	r0, #0
   27120:	pop	{r4, pc}
   27124:	ldr	r2, [pc, #36]	; 27150 <g_strcmp0@plt+0x11f84>
   27128:	mov	r1, #32
   2712c:	mov	r0, r4
   27130:	bl	14668 <g_log@plt>
   27134:	mov	r0, r4
   27138:	bl	14bd8 <g_free@plt>
   2713c:	mov	r0, #1
   27140:	pop	{r4, pc}
   27144:	andeq	r8, r3, r8, asr lr
   27148:	andeq	r8, r3, r4, lsl #29
   2714c:	ldrdeq	r8, [r3], -ip
   27150:	andeq	r8, r3, ip, lsr #29
   27154:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27158:	mov	r8, r0
   2715c:	sub	sp, sp, #44	; 0x2c
   27160:	ldr	r0, [pc, #1632]	; 277c8 <g_strcmp0@plt+0x125fc>
   27164:	mov	r4, r1
   27168:	bl	14b9c <g_getenv@plt>
   2716c:	bl	147e8 <g_strdup@plt>
   27170:	ldr	r3, [r8, #12]
   27174:	mov	r5, r0
   27178:	ldr	r0, [r3, #36]	; 0x24
   2717c:	bl	14bd8 <g_free@plt>
   27180:	ldr	r3, [r8, #12]
   27184:	ldr	r0, [pc, #1600]	; 277cc <g_strcmp0@plt+0x12600>
   27188:	str	r5, [r3, #36]	; 0x24
   2718c:	bl	14b9c <g_getenv@plt>
   27190:	bl	147e8 <g_strdup@plt>
   27194:	ldr	r3, [r8, #12]
   27198:	mov	r5, r0
   2719c:	ldr	r0, [r3, #40]	; 0x28
   271a0:	bl	14bd8 <g_free@plt>
   271a4:	ldr	r3, [r8, #12]
   271a8:	ldr	r1, [pc, #1568]	; 277d0 <g_strcmp0@plt+0x12604>
   271ac:	str	r5, [r3, #40]	; 0x28
   271b0:	ldr	r0, [r3, #24]
   271b4:	bl	151cc <g_strcmp0@plt>
   271b8:	subs	r5, r0, #0
   271bc:	bne	27588 <g_strcmp0@plt+0x123bc>
   271c0:	ldr	r0, [pc, #1548]	; 277d4 <g_strcmp0@plt+0x12608>
   271c4:	bl	147e8 <g_strdup@plt>
   271c8:	str	r0, [sp, #12]
   271cc:	mov	r0, r5
   271d0:	bl	14bd8 <g_free@plt>
   271d4:	ldr	r0, [pc, #1532]	; 277d8 <g_strcmp0@plt+0x1260c>
   271d8:	bl	147e8 <g_strdup@plt>
   271dc:	str	r0, [sp, #16]
   271e0:	mov	r0, r5
   271e4:	bl	14bd8 <g_free@plt>
   271e8:	mov	r0, r4
   271ec:	ldr	r1, [pc, #1512]	; 277dc <g_strcmp0@plt+0x12610>
   271f0:	bl	151cc <g_strcmp0@plt>
   271f4:	subs	r3, r0, #0
   271f8:	beq	27658 <g_strcmp0@plt+0x1248c>
   271fc:	ldr	r3, [r8, #12]
   27200:	ldr	r4, [r3, #36]	; 0x24
   27204:	cmp	r4, #0
   27208:	beq	276d0 <g_strcmp0@plt+0x12504>
   2720c:	mov	r2, #0
   27210:	ldr	r1, [pc, #1480]	; 277e0 <g_strcmp0@plt+0x12614>
   27214:	ldr	r0, [sp, #12]
   27218:	bl	14530 <g_strsplit_set@plt>
   2721c:	subs	r3, r0, #0
   27220:	str	r3, [sp, #28]
   27224:	beq	275b4 <g_strcmp0@plt+0x123e8>
   27228:	bl	26f6c <g_strcmp0@plt+0x11da0>
   2722c:	ldr	r3, [r8, #12]
   27230:	mov	r2, #0
   27234:	ldr	r1, [pc, #1444]	; 277e0 <g_strcmp0@plt+0x12614>
   27238:	str	r0, [sp, #32]
   2723c:	ldr	r0, [r3, #36]	; 0x24
   27240:	bl	14530 <g_strsplit_set@plt>
   27244:	subs	r3, r0, #0
   27248:	str	r3, [sp, #24]
   2724c:	beq	277bc <g_strcmp0@plt+0x125f0>
   27250:	ldr	r0, [sp, #24]
   27254:	bl	26f6c <g_strcmp0@plt+0x11da0>
   27258:	str	r0, [sp, #4]
   2725c:	ldr	r0, [pc, #1408]	; 277e4 <g_strcmp0@plt+0x12618>
   27260:	bl	147e8 <g_strdup@plt>
   27264:	ldr	r3, [sp, #32]
   27268:	cmp	r3, #0
   2726c:	mov	r9, r0
   27270:	ble	27304 <g_strcmp0@plt+0x12138>
   27274:	ldr	r2, [sp, #28]
   27278:	str	r8, [sp, #20]
   2727c:	sub	r7, r2, #4
   27280:	add	sl, r7, r3, lsl #2
   27284:	ldr	r2, [sp, #24]
   27288:	ldr	r3, [sp, #4]
   2728c:	sub	r2, r2, #4
   27290:	str	r2, [sp, #8]
   27294:	add	r6, r2, r3, lsl #2
   27298:	ldr	r0, [r7, #4]!
   2729c:	bl	147e8 <g_strdup@plt>
   272a0:	ldr	r3, [sp, #4]
   272a4:	cmp	r3, #0
   272a8:	movgt	r4, #0
   272ac:	ldrgt	fp, [sp, #8]
   272b0:	mov	r5, r0
   272b4:	ble	2761c <g_strcmp0@plt+0x12450>
   272b8:	ldr	r0, [fp, #4]!
   272bc:	bl	147e8 <g_strdup@plt>
   272c0:	mov	r1, r0
   272c4:	mov	r8, r0
   272c8:	mov	r0, r5
   272cc:	bl	151cc <g_strcmp0@plt>
   272d0:	cmp	r0, #0
   272d4:	mov	r0, r8
   272d8:	moveq	r4, #1
   272dc:	bl	14bd8 <g_free@plt>
   272e0:	cmp	r6, fp
   272e4:	bne	272b8 <g_strcmp0@plt+0x120ec>
   272e8:	cmp	r4, #0
   272ec:	beq	2761c <g_strcmp0@plt+0x12450>
   272f0:	mov	r0, r5
   272f4:	bl	14bd8 <g_free@plt>
   272f8:	cmp	r7, sl
   272fc:	bne	27298 <g_strcmp0@plt+0x120cc>
   27300:	ldr	r8, [sp, #20]
   27304:	ldr	r3, [r8, #12]
   27308:	mov	r2, #0
   2730c:	mov	r0, r9
   27310:	ldr	r1, [r3, #36]	; 0x24
   27314:	bl	14dc4 <g_strconcat@plt>
   27318:	mov	r4, r0
   2731c:	str	r0, [sp, #20]
   27320:	mov	r0, #0
   27324:	bl	14bd8 <g_free@plt>
   27328:	mov	r3, r9
   2732c:	ldr	r2, [pc, #1204]	; 277e8 <g_strcmp0@plt+0x1261c>
   27330:	mov	r1, #32
   27334:	mov	r0, #0
   27338:	bl	14668 <g_log@plt>
   2733c:	ldr	r3, [r8, #12]
   27340:	ldr	r2, [pc, #1188]	; 277ec <g_strcmp0@plt+0x12620>
   27344:	mov	r1, #32
   27348:	ldr	r3, [r3, #36]	; 0x24
   2734c:	mov	r0, #0
   27350:	bl	14668 <g_log@plt>
   27354:	mov	r3, r4
   27358:	ldr	r2, [pc, #1168]	; 277f0 <g_strcmp0@plt+0x12624>
   2735c:	mov	r1, #32
   27360:	mov	r0, #0
   27364:	bl	14668 <g_log@plt>
   27368:	mov	r0, r9
   2736c:	bl	14bd8 <g_free@plt>
   27370:	ldr	r1, [sp, #4]
   27374:	ldr	r0, [sp, #24]
   27378:	bl	26f9c <g_strcmp0@plt+0x11dd0>
   2737c:	ldrd	r0, [sp, #28]
   27380:	bl	26f9c <g_strcmp0@plt+0x11dd0>
   27384:	ldr	r4, [sp, #20]
   27388:	cmp	r4, #0
   2738c:	beq	273b0 <g_strcmp0@plt+0x121e4>
   27390:	ldr	r2, [pc, #1116]	; 277f4 <g_strcmp0@plt+0x12628>
   27394:	mov	r1, #32
   27398:	mov	r0, #0
   2739c:	bl	14668 <g_log@plt>
   273a0:	mov	r2, #1
   273a4:	mov	r1, r4
   273a8:	ldr	r0, [pc, #1048]	; 277c8 <g_strcmp0@plt+0x125fc>
   273ac:	bl	144f4 <g_setenv@plt>
   273b0:	ldr	r3, [r8, #12]
   273b4:	ldr	r5, [r3, #40]	; 0x28
   273b8:	cmp	r5, #0
   273bc:	beq	27700 <g_strcmp0@plt+0x12534>
   273c0:	mov	r2, #0
   273c4:	ldr	r1, [pc, #1044]	; 277e0 <g_strcmp0@plt+0x12614>
   273c8:	ldr	r0, [sp, #16]
   273cc:	bl	14530 <g_strsplit_set@plt>
   273d0:	subs	r3, r0, #0
   273d4:	str	r3, [sp, #28]
   273d8:	beq	2772c <g_strcmp0@plt+0x12560>
   273dc:	bl	26f6c <g_strcmp0@plt+0x11da0>
   273e0:	ldr	r3, [r8, #12]
   273e4:	mov	r2, #0
   273e8:	ldr	r1, [pc, #1008]	; 277e0 <g_strcmp0@plt+0x12614>
   273ec:	str	r0, [sp, #32]
   273f0:	ldr	r0, [r3, #40]	; 0x28
   273f4:	bl	14530 <g_strsplit_set@plt>
   273f8:	subs	r3, r0, #0
   273fc:	str	r3, [sp, #24]
   27400:	beq	277b0 <g_strcmp0@plt+0x125e4>
   27404:	ldr	r0, [sp, #24]
   27408:	bl	26f6c <g_strcmp0@plt+0x11da0>
   2740c:	str	r0, [sp, #4]
   27410:	ldr	r0, [pc, #972]	; 277e4 <g_strcmp0@plt+0x12618>
   27414:	bl	147e8 <g_strdup@plt>
   27418:	ldr	r3, [sp, #32]
   2741c:	cmp	r3, #0
   27420:	mov	r9, r0
   27424:	ble	274bc <g_strcmp0@plt+0x122f0>
   27428:	ldr	r2, [sp, #28]
   2742c:	ldr	r1, [sp, #4]
   27430:	sub	r7, r2, #4
   27434:	ldr	r2, [sp, #24]
   27438:	add	r3, r7, r3, lsl #2
   2743c:	sub	r2, r2, #4
   27440:	str	r8, [sp, #36]	; 0x24
   27444:	add	r6, r2, r1, lsl #2
   27448:	mov	r8, r3
   2744c:	str	r2, [sp, #8]
   27450:	ldr	r0, [r7, #4]!
   27454:	bl	147e8 <g_strdup@plt>
   27458:	ldr	r3, [sp, #4]
   2745c:	cmp	r3, #0
   27460:	movgt	r4, #0
   27464:	ldrgt	fp, [sp, #8]
   27468:	mov	r5, r0
   2746c:	ble	275e0 <g_strcmp0@plt+0x12414>
   27470:	ldr	r0, [fp, #4]!
   27474:	bl	147e8 <g_strdup@plt>
   27478:	mov	r1, r0
   2747c:	mov	sl, r0
   27480:	mov	r0, r5
   27484:	bl	151cc <g_strcmp0@plt>
   27488:	cmp	r0, #0
   2748c:	mov	r0, sl
   27490:	moveq	r4, #1
   27494:	bl	14bd8 <g_free@plt>
   27498:	cmp	r6, fp
   2749c:	bne	27470 <g_strcmp0@plt+0x122a4>
   274a0:	cmp	r4, #0
   274a4:	beq	275e0 <g_strcmp0@plt+0x12414>
   274a8:	mov	r0, r5
   274ac:	bl	14bd8 <g_free@plt>
   274b0:	cmp	r8, r7
   274b4:	bne	27450 <g_strcmp0@plt+0x12284>
   274b8:	ldr	r8, [sp, #36]	; 0x24
   274bc:	ldr	r3, [r8, #12]
   274c0:	mov	r2, #0
   274c4:	mov	r0, r9
   274c8:	ldr	r1, [r3, #40]	; 0x28
   274cc:	bl	14dc4 <g_strconcat@plt>
   274d0:	mov	r4, r0
   274d4:	mov	r0, #0
   274d8:	bl	14bd8 <g_free@plt>
   274dc:	mov	r3, r9
   274e0:	ldr	r2, [pc, #784]	; 277f8 <g_strcmp0@plt+0x1262c>
   274e4:	mov	r1, #32
   274e8:	mov	r0, #0
   274ec:	bl	14668 <g_log@plt>
   274f0:	ldr	r3, [r8, #12]
   274f4:	ldr	r2, [pc, #768]	; 277fc <g_strcmp0@plt+0x12630>
   274f8:	mov	r1, #32
   274fc:	ldr	r3, [r3, #40]	; 0x28
   27500:	mov	r0, #0
   27504:	bl	14668 <g_log@plt>
   27508:	mov	r3, r4
   2750c:	ldr	r2, [pc, #748]	; 27800 <g_strcmp0@plt+0x12634>
   27510:	mov	r1, #32
   27514:	mov	r0, #0
   27518:	bl	14668 <g_log@plt>
   2751c:	mov	r0, r9
   27520:	bl	14bd8 <g_free@plt>
   27524:	ldr	r1, [sp, #4]
   27528:	ldr	r0, [sp, #24]
   2752c:	bl	26f9c <g_strcmp0@plt+0x11dd0>
   27530:	ldrd	r0, [sp, #28]
   27534:	bl	26f9c <g_strcmp0@plt+0x11dd0>
   27538:	cmp	r4, #0
   2753c:	beq	27560 <g_strcmp0@plt+0x12394>
   27540:	ldr	r2, [pc, #700]	; 27804 <g_strcmp0@plt+0x12638>
   27544:	mov	r1, #32
   27548:	mov	r0, #0
   2754c:	bl	14668 <g_log@plt>
   27550:	mov	r2, #1
   27554:	mov	r1, r4
   27558:	ldr	r0, [pc, #620]	; 277cc <g_strcmp0@plt+0x12600>
   2755c:	bl	144f4 <g_setenv@plt>
   27560:	mov	r0, r4
   27564:	bl	14bd8 <g_free@plt>
   27568:	ldr	r0, [sp, #20]
   2756c:	bl	14bd8 <g_free@plt>
   27570:	ldr	r0, [sp, #16]
   27574:	bl	14bd8 <g_free@plt>
   27578:	ldr	r0, [sp, #12]
   2757c:	add	sp, sp, #44	; 0x2c
   27580:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27584:	b	14bd8 <g_free@plt>
   27588:	ldr	r0, [pc, #632]	; 27808 <g_strcmp0@plt+0x1263c>
   2758c:	bl	147e8 <g_strdup@plt>
   27590:	str	r0, [sp, #12]
   27594:	mov	r0, #0
   27598:	bl	14bd8 <g_free@plt>
   2759c:	ldr	r0, [pc, #616]	; 2780c <g_strcmp0@plt+0x12640>
   275a0:	bl	147e8 <g_strdup@plt>
   275a4:	str	r0, [sp, #16]
   275a8:	mov	r0, #0
   275ac:	bl	14bd8 <g_free@plt>
   275b0:	b	271e8 <g_strcmp0@plt+0x1201c>
   275b4:	ldr	r3, [r8, #12]
   275b8:	ldr	r2, [sp, #28]
   275bc:	ldr	r1, [pc, #540]	; 277e0 <g_strcmp0@plt+0x12614>
   275c0:	ldr	r0, [r3, #36]	; 0x24
   275c4:	bl	14530 <g_strsplit_set@plt>
   275c8:	subs	r3, r0, #0
   275cc:	str	r3, [sp, #24]
   275d0:	beq	27778 <g_strcmp0@plt+0x125ac>
   275d4:	ldr	r3, [sp, #28]
   275d8:	str	r3, [sp, #32]
   275dc:	b	27250 <g_strcmp0@plt+0x12084>
   275e0:	mov	r1, r5
   275e4:	mov	r2, #0
   275e8:	mov	r0, r9
   275ec:	bl	14dc4 <g_strconcat@plt>
   275f0:	mov	r2, #0
   275f4:	ldr	r1, [pc, #484]	; 277e0 <g_strcmp0@plt+0x12614>
   275f8:	mov	r4, r0
   275fc:	bl	14dc4 <g_strconcat@plt>
   27600:	mov	fp, r0
   27604:	mov	r0, r9
   27608:	bl	14bd8 <g_free@plt>
   2760c:	mov	r0, r4
   27610:	mov	r9, fp
   27614:	bl	14bd8 <g_free@plt>
   27618:	b	274a8 <g_strcmp0@plt+0x122dc>
   2761c:	mov	r1, r5
   27620:	mov	r2, #0
   27624:	mov	r0, r9
   27628:	bl	14dc4 <g_strconcat@plt>
   2762c:	mov	r2, #0
   27630:	ldr	r1, [pc, #424]	; 277e0 <g_strcmp0@plt+0x12614>
   27634:	mov	r4, r0
   27638:	bl	14dc4 <g_strconcat@plt>
   2763c:	mov	fp, r0
   27640:	mov	r0, r9
   27644:	bl	14bd8 <g_free@plt>
   27648:	mov	r0, r4
   2764c:	mov	r9, fp
   27650:	bl	14bd8 <g_free@plt>
   27654:	b	272f0 <g_strcmp0@plt+0x12124>
   27658:	ldr	r1, [pc, #432]	; 27810 <g_strcmp0@plt+0x12644>
   2765c:	ldr	r2, [pc, #432]	; 27814 <g_strcmp0@plt+0x12648>
   27660:	ldr	r4, [pc, #432]	; 27818 <g_strcmp0@plt+0x1264c>
   27664:	ldr	r0, [r1]
   27668:	ldr	r1, [pc, #428]	; 2781c <g_strcmp0@plt+0x12650>
   2766c:	bl	2a300 <g_strcmp0@plt+0x15134>
   27670:	subs	r6, r0, #0
   27674:	beq	27758 <g_strcmp0@plt+0x1258c>
   27678:	bl	14bcc <g_quark_from_string@plt>
   2767c:	mov	r5, r0
   27680:	mov	r0, r6
   27684:	bl	14bd8 <g_free@plt>
   27688:	ldr	r0, [r4, #8]
   2768c:	cmp	r0, #0
   27690:	beq	27768 <g_strcmp0@plt+0x1259c>
   27694:	cmp	r5, r0
   27698:	bne	271fc <g_strcmp0@plt+0x12030>
   2769c:	ldr	r0, [pc, #304]	; 277d4 <g_strcmp0@plt+0x12608>
   276a0:	bl	147e8 <g_strdup@plt>
   276a4:	mov	r5, r0
   276a8:	ldr	r0, [sp, #12]
   276ac:	bl	14bd8 <g_free@plt>
   276b0:	ldr	r0, [pc, #288]	; 277d8 <g_strcmp0@plt+0x1260c>
   276b4:	bl	147e8 <g_strdup@plt>
   276b8:	mov	r4, r0
   276bc:	ldr	r0, [sp, #16]
   276c0:	bl	14bd8 <g_free@plt>
   276c4:	str	r5, [sp, #12]
   276c8:	str	r4, [sp, #16]
   276cc:	b	271fc <g_strcmp0@plt+0x12030>
   276d0:	ldr	r0, [sp, #12]
   276d4:	bl	147e8 <g_strdup@plt>
   276d8:	mov	r5, r0
   276dc:	str	r0, [sp, #20]
   276e0:	mov	r0, r4
   276e4:	bl	14bd8 <g_free@plt>
   276e8:	mov	r3, r5
   276ec:	mov	r0, r4
   276f0:	ldr	r2, [pc, #296]	; 27820 <g_strcmp0@plt+0x12654>
   276f4:	mov	r1, #32
   276f8:	bl	14668 <g_log@plt>
   276fc:	b	27384 <g_strcmp0@plt+0x121b8>
   27700:	ldr	r0, [sp, #16]
   27704:	bl	147e8 <g_strdup@plt>
   27708:	mov	r4, r0
   2770c:	mov	r0, r5
   27710:	bl	14bd8 <g_free@plt>
   27714:	mov	r3, r4
   27718:	mov	r0, r5
   2771c:	ldr	r2, [pc, #256]	; 27824 <g_strcmp0@plt+0x12658>
   27720:	mov	r1, #32
   27724:	bl	14668 <g_log@plt>
   27728:	b	27538 <g_strcmp0@plt+0x1236c>
   2772c:	ldr	r3, [r8, #12]
   27730:	ldr	r2, [sp, #28]
   27734:	ldr	r1, [pc, #164]	; 277e0 <g_strcmp0@plt+0x12614>
   27738:	ldr	r0, [r3, #40]	; 0x28
   2773c:	bl	14530 <g_strsplit_set@plt>
   27740:	subs	r3, r0, #0
   27744:	str	r3, [sp, #24]
   27748:	beq	27794 <g_strcmp0@plt+0x125c8>
   2774c:	ldr	r3, [sp, #28]
   27750:	str	r3, [sp, #32]
   27754:	b	27404 <g_strcmp0@plt+0x12238>
   27758:	bl	14bd8 <g_free@plt>
   2775c:	ldr	r5, [r4, #8]
   27760:	cmp	r5, #0
   27764:	bne	271fc <g_strcmp0@plt+0x12030>
   27768:	ldr	r0, [pc, #184]	; 27828 <g_strcmp0@plt+0x1265c>
   2776c:	bl	14d64 <g_quark_from_static_string@plt>
   27770:	str	r0, [r4, #8]
   27774:	b	27694 <g_strcmp0@plt+0x124c8>
   27778:	ldr	r0, [pc, #100]	; 277e4 <g_strcmp0@plt+0x12618>
   2777c:	bl	147e8 <g_strdup@plt>
   27780:	ldr	r3, [sp, #24]
   27784:	str	r3, [sp, #32]
   27788:	str	r3, [sp, #4]
   2778c:	mov	r9, r0
   27790:	b	27304 <g_strcmp0@plt+0x12138>
   27794:	ldr	r0, [pc, #72]	; 277e4 <g_strcmp0@plt+0x12618>
   27798:	bl	147e8 <g_strdup@plt>
   2779c:	ldr	r3, [sp, #24]
   277a0:	str	r3, [sp, #32]
   277a4:	str	r3, [sp, #4]
   277a8:	mov	r9, r0
   277ac:	b	274bc <g_strcmp0@plt+0x122f0>
   277b0:	ldr	r3, [sp, #24]
   277b4:	str	r3, [sp, #4]
   277b8:	b	27410 <g_strcmp0@plt+0x12244>
   277bc:	ldr	r3, [sp, #24]
   277c0:	str	r3, [sp, #4]
   277c4:	b	2725c <g_strcmp0@plt+0x12090>
   277c8:	andeq	r8, r3, r8, lsl #30
   277cc:	andeq	r8, r3, r8, lsl pc
   277d0:	andeq	r5, r3, r8, asr r4
   277d4:	andeq	r8, r3, r8, lsr #30
   277d8:	andeq	r8, r3, r4, asr #30
   277dc:	andeq	r4, r3, r8, lsl #16
   277e0:	andeq	r9, r3, r8, lsl r0
   277e4:	andeq	sl, r3, ip, ror #18
   277e8:	andeq	r9, r3, ip, lsl r0
   277ec:	andeq	r9, r3, r8, asr #32
   277f0:	andeq	r9, r3, r0, ror r0
   277f4:	andeq	r9, r3, ip, lsr #1
   277f8:	andeq	r9, r3, r8, lsl r1
   277fc:	andeq	r9, r3, r0, asr #2
   27800:	andeq	r9, r3, r8, ror #2
   27804:	andeq	r9, r3, r0, lsr #3
   27808:	muleq	r3, r4, pc	; <UNPREDICTABLE>
   2780c:	andeq	r8, r3, r0, lsr #31
   27810:	andeq	ip, r4, r4, asr #32
   27814:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   27818:	andeq	ip, r4, r4, lsl #7
   2781c:	andeq	r7, r3, r0, lsl r6
   27820:	andeq	r8, r3, r0, ror #31
   27824:	andeq	r9, r3, r0, ror #1
   27828:	muleq	r3, r4, pc	; <UNPREDICTABLE>
   2782c:	push	{r4, r5, r6, lr}
   27830:	mov	r4, r0
   27834:	ldr	r2, [pc, #256]	; 2793c <g_strcmp0@plt+0x12770>
   27838:	mov	r1, #32
   2783c:	mov	r0, #0
   27840:	bl	14668 <g_log@plt>
   27844:	ldr	r3, [r4, #12]
   27848:	ldr	r2, [pc, #240]	; 27940 <g_strcmp0@plt+0x12774>
   2784c:	mov	r1, #32
   27850:	ldr	r3, [r3, #12]
   27854:	mov	r0, #0
   27858:	bl	14668 <g_log@plt>
   2785c:	bl	1441c <getpid@plt>
   27860:	mov	r1, r0
   27864:	ldr	r0, [pc, #216]	; 27944 <g_strcmp0@plt+0x12778>
   27868:	bl	14890 <g_strdup_printf@plt>
   2786c:	ldr	r3, [r4, #12]
   27870:	mov	r5, r0
   27874:	ldr	r0, [r3, #20]
   27878:	bl	14bd8 <g_free@plt>
   2787c:	ldr	r3, [r4, #12]
   27880:	mov	r2, #1
   27884:	ldr	r1, [r3, #24]
   27888:	str	r5, [r3, #20]
   2788c:	ldr	r0, [r3, #8]
   27890:	bl	144f4 <g_setenv@plt>
   27894:	ldr	r3, [r4, #12]
   27898:	mov	r2, #1
   2789c:	ldr	r1, [r3, #28]
   278a0:	ldr	r0, [r3, #12]
   278a4:	bl	144f4 <g_setenv@plt>
   278a8:	ldr	r3, [r4, #12]
   278ac:	mov	r2, #1
   278b0:	ldr	r1, [r3, #20]
   278b4:	ldr	r0, [r3, #4]
   278b8:	bl	144f4 <g_setenv@plt>
   278bc:	ldr	r3, [r4, #12]
   278c0:	mov	r2, #1
   278c4:	ldr	r1, [r3, #16]
   278c8:	ldr	r0, [r3]
   278cc:	bl	144f4 <g_setenv@plt>
   278d0:	ldr	r0, [pc, #112]	; 27948 <g_strcmp0@plt+0x1277c>
   278d4:	bl	14d10 <g_set_application_name@plt>
   278d8:	ldr	r3, [r4, #12]
   278dc:	ldr	r2, [r3, #32]
   278e0:	cmp	r2, #0
   278e4:	beq	278f8 <g_strcmp0@plt+0x1272c>
   278e8:	mov	r0, r4
   278ec:	mov	r1, #0
   278f0:	pop	{r4, r5, r6, lr}
   278f4:	b	27154 <g_strcmp0@plt+0x11f88>
   278f8:	ldr	r1, [pc, #76]	; 2794c <g_strcmp0@plt+0x12780>
   278fc:	ldr	r0, [r3, #44]	; 0x2c
   27900:	bl	14dc4 <g_strconcat@plt>
   27904:	ldr	r3, [r4, #12]
   27908:	mov	r5, r0
   2790c:	ldr	r0, [r3, #32]
   27910:	bl	14bd8 <g_free@plt>
   27914:	ldr	r3, [r4, #12]
   27918:	mov	r1, r5
   2791c:	mov	r2, #1
   27920:	str	r5, [r3, #32]
   27924:	ldr	r0, [pc, #36]	; 27950 <g_strcmp0@plt+0x12784>
   27928:	bl	144f4 <g_setenv@plt>
   2792c:	mov	r0, r4
   27930:	mov	r1, #0
   27934:	pop	{r4, r5, r6, lr}
   27938:	b	27154 <g_strcmp0@plt+0x11f88>
   2793c:	ldrdeq	r9, [r3], -r0
   27940:	andeq	r9, r3, r4, lsl #4
   27944:			; <UNDEFINED> instruction: 0x000351b4
   27948:	andeq	r4, r3, r8, asr #11
   2794c:	andeq	r9, r3, r4, lsr r2
   27950:	andeq	r5, r3, r0, lsr #8
   27954:	ldr	r3, [pc, #748]	; 27c48 <g_strcmp0@plt+0x12a7c>
   27958:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2795c:	sub	sp, sp, #44	; 0x2c
   27960:	ldr	r3, [r3]
   27964:	mov	r4, #0
   27968:	ldr	r0, [pc, #732]	; 27c4c <g_strcmp0@plt+0x12a80>
   2796c:	str	r3, [sp, #36]	; 0x24
   27970:	str	r4, [sp, #24]
   27974:	bl	300ac <g_strcmp0@plt+0x1aee0>
   27978:	add	r3, sp, #24
   2797c:	add	r2, sp, #28
   27980:	ldr	r1, [pc, #712]	; 27c50 <g_strcmp0@plt+0x12a84>
   27984:	str	r4, [sp, #28]
   27988:	mov	r8, r0
   2798c:	bl	14d4c <g_key_file_get_keys@plt>
   27990:	ldr	r4, [sp, #24]
   27994:	ldr	sl, [sp, #28]
   27998:	cmp	r4, #0
   2799c:	beq	279d8 <g_strcmp0@plt+0x1280c>
   279a0:	ldr	r4, [r4]
   279a4:	bl	149d4 <g_key_file_error_quark@plt>
   279a8:	cmp	r4, r0
   279ac:	beq	27a2c <g_strcmp0@plt+0x12860>
   279b0:	cmp	r8, #0
   279b4:	beq	279c0 <g_strcmp0@plt+0x127f4>
   279b8:	mov	r0, r8
   279bc:	bl	14f50 <g_key_file_unref@plt>
   279c0:	ldr	r4, [sp, #24]
   279c4:	ldr	r0, [r4]
   279c8:	bl	14c2c <g_quark_to_string@plt>
   279cc:	ldr	r3, [r4, #4]
   279d0:	ldr	ip, [pc, #636]	; 27c54 <g_strcmp0@plt+0x12a88>
   279d4:	b	27bdc <g_strcmp0@plt+0x12a10>
   279d8:	cmp	r0, #0
   279dc:	mov	r9, r0
   279e0:	beq	27af8 <g_strcmp0@plt+0x1292c>
   279e4:	add	r3, sp, #24
   279e8:	add	r2, sp, #32
   279ec:	ldr	r1, [pc, #604]	; 27c50 <g_strcmp0@plt+0x12a84>
   279f0:	mov	r0, r8
   279f4:	str	r4, [sp, #32]
   279f8:	bl	14d4c <g_key_file_get_keys@plt>
   279fc:	ldr	r5, [sp, #24]
   27a00:	cmp	r5, #0
   27a04:	str	r0, [sp, #20]
   27a08:	beq	27b08 <g_strcmp0@plt+0x1293c>
   27a0c:	mov	r0, r9
   27a10:	mov	r1, sl
   27a14:	bl	26f9c <g_strcmp0@plt+0x11dd0>
   27a18:	ldr	r3, [sp, #24]
   27a1c:	ldr	r5, [r3]
   27a20:	bl	149d4 <g_key_file_error_quark@plt>
   27a24:	cmp	r5, r0
   27a28:	bne	27c10 <g_strcmp0@plt+0x12a44>
   27a2c:	ldr	r4, [sp, #24]
   27a30:	mov	ip, #0
   27a34:	mov	r0, ip
   27a38:	ldr	r3, [r4, #8]
   27a3c:	ldr	r2, [pc, #532]	; 27c58 <g_strcmp0@plt+0x12a8c>
   27a40:	mov	r1, #32
   27a44:	str	ip, [sp, #24]
   27a48:	bl	14668 <g_log@plt>
   27a4c:	mov	r0, r4
   27a50:	bl	1453c <g_error_free@plt>
   27a54:	ldr	r4, [sp, #24]
   27a58:	cmp	r4, #0
   27a5c:	beq	27a94 <g_strcmp0@plt+0x128c8>
   27a60:	cmp	r8, #0
   27a64:	beq	27a74 <g_strcmp0@plt+0x128a8>
   27a68:	mov	r0, r8
   27a6c:	bl	14f50 <g_key_file_unref@plt>
   27a70:	ldr	r4, [sp, #24]
   27a74:	ldr	r0, [r4]
   27a78:	bl	14c2c <g_quark_to_string@plt>
   27a7c:	ldr	r3, [r4, #4]
   27a80:	mov	ip, #780	; 0x30c
   27a84:	str	r3, [sp, #12]
   27a88:	ldr	r2, [pc, #460]	; 27c5c <g_strcmp0@plt+0x12a90>
   27a8c:	ldr	r3, [pc, #460]	; 27c60 <g_strcmp0@plt+0x12a94>
   27a90:	b	27be8 <g_strcmp0@plt+0x12a1c>
   27a94:	cmp	r8, #0
   27a98:	beq	27aa4 <g_strcmp0@plt+0x128d8>
   27a9c:	mov	r0, r8
   27aa0:	bl	14f50 <g_key_file_unref@plt>
   27aa4:	ldr	r3, [pc, #412]	; 27c48 <g_strcmp0@plt+0x12a7c>
   27aa8:	ldr	r2, [sp, #36]	; 0x24
   27aac:	ldr	r3, [r3]
   27ab0:	cmp	r2, r3
   27ab4:	bne	27c44 <g_strcmp0@plt+0x12a78>
   27ab8:	add	sp, sp, #44	; 0x2c
   27abc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ac0:	mov	r1, r0
   27ac4:	mov	r2, #1
   27ac8:	mov	r0, r4
   27acc:	bl	144f4 <g_setenv@plt>
   27ad0:	mov	r0, fp
   27ad4:	bl	14bd8 <g_free@plt>
   27ad8:	mov	r0, r4
   27adc:	add	r5, r5, #1
   27ae0:	bl	14bd8 <g_free@plt>
   27ae4:	cmp	r7, r5
   27ae8:	bne	27b1c <g_strcmp0@plt+0x12950>
   27aec:	mov	r1, r7
   27af0:	ldr	r0, [sp, #20]
   27af4:	bl	26f9c <g_strcmp0@plt+0x11dd0>
   27af8:	mov	r1, sl
   27afc:	mov	r0, r9
   27b00:	bl	26f9c <g_strcmp0@plt+0x11dd0>
   27b04:	b	27a54 <g_strcmp0@plt+0x12888>
   27b08:	ldr	r7, [sp, #32]
   27b0c:	cmp	r7, #0
   27b10:	ldrgt	r3, [sp, #20]
   27b14:	subgt	r6, r3, #4
   27b18:	ble	27aec <g_strcmp0@plt+0x12920>
   27b1c:	ldr	r0, [r6, #4]!
   27b20:	bl	147e8 <g_strdup@plt>
   27b24:	subs	r4, r0, #0
   27b28:	beq	27ad8 <g_strcmp0@plt+0x1290c>
   27b2c:	mov	r3, r4
   27b30:	ldr	r2, [pc, #300]	; 27c64 <g_strcmp0@plt+0x12a98>
   27b34:	mov	r1, #128	; 0x80
   27b38:	mov	r0, #0
   27b3c:	bl	14668 <g_log@plt>
   27b40:	add	r3, sp, #24
   27b44:	mov	r2, r4
   27b48:	ldr	r1, [pc, #256]	; 27c50 <g_strcmp0@plt+0x12a84>
   27b4c:	mov	r0, r8
   27b50:	bl	14854 <g_key_file_get_value@plt>
   27b54:	ldr	r3, [sp, #24]
   27b58:	cmp	r3, #0
   27b5c:	mov	fp, r0
   27b60:	beq	27ac0 <g_strcmp0@plt+0x128f4>
   27b64:	mov	r0, r4
   27b68:	bl	14bd8 <g_free@plt>
   27b6c:	mov	r1, r7
   27b70:	ldr	r0, [sp, #20]
   27b74:	bl	26f9c <g_strcmp0@plt+0x11dd0>
   27b78:	mov	r1, sl
   27b7c:	mov	r0, r9
   27b80:	bl	26f9c <g_strcmp0@plt+0x11dd0>
   27b84:	ldr	r3, [sp, #24]
   27b88:	ldr	r4, [r3]
   27b8c:	bl	149d4 <g_key_file_error_quark@plt>
   27b90:	cmp	r4, r0
   27b94:	beq	27a2c <g_strcmp0@plt+0x12860>
   27b98:	mov	r0, #0
   27b9c:	bl	14bd8 <g_free@plt>
   27ba0:	mov	r1, r7
   27ba4:	mov	r0, #0
   27ba8:	bl	26f9c <g_strcmp0@plt+0x11dd0>
   27bac:	mov	r1, sl
   27bb0:	mov	r0, #0
   27bb4:	bl	26f9c <g_strcmp0@plt+0x11dd0>
   27bb8:	cmp	r8, #0
   27bbc:	beq	27bc8 <g_strcmp0@plt+0x129fc>
   27bc0:	mov	r0, r8
   27bc4:	bl	14f50 <g_key_file_unref@plt>
   27bc8:	ldr	r4, [sp, #24]
   27bcc:	ldr	r0, [r4]
   27bd0:	bl	14c2c <g_quark_to_string@plt>
   27bd4:	ldr	r3, [r4, #4]
   27bd8:	mov	ip, #748	; 0x2ec
   27bdc:	str	r3, [sp, #12]
   27be0:	ldr	r2, [pc, #128]	; 27c68 <g_strcmp0@plt+0x12a9c>
   27be4:	ldr	r3, [pc, #116]	; 27c60 <g_strcmp0@plt+0x12a94>
   27be8:	str	r0, [sp, #8]
   27bec:	ldr	r0, [r4, #8]
   27bf0:	mov	r1, #8
   27bf4:	str	r0, [sp, #4]
   27bf8:	str	ip, [sp]
   27bfc:	mov	r0, #0
   27c00:	bl	14668 <g_log@plt>
   27c04:	add	r0, sp, #24
   27c08:	bl	14dac <g_clear_error@plt>
   27c0c:	b	27aa4 <g_strcmp0@plt+0x128d8>
   27c10:	mov	r1, sl
   27c14:	mov	r0, r4
   27c18:	bl	26f9c <g_strcmp0@plt+0x11dd0>
   27c1c:	cmp	r8, #0
   27c20:	beq	27c2c <g_strcmp0@plt+0x12a60>
   27c24:	mov	r0, r8
   27c28:	bl	14f50 <g_key_file_unref@plt>
   27c2c:	ldr	r4, [sp, #24]
   27c30:	ldr	r0, [r4]
   27c34:	bl	14c2c <g_quark_to_string@plt>
   27c38:	ldr	r3, [r4, #4]
   27c3c:	ldr	ip, [pc, #40]	; 27c6c <g_strcmp0@plt+0x12aa0>
   27c40:	b	27bdc <g_strcmp0@plt+0x12a10>
   27c44:	bl	14b6c <__stack_chk_fail@plt>
   27c48:	andeq	fp, r4, r8, asr #19
   27c4c:	andeq	r9, r3, r0, asr #4
   27c50:	andeq	r9, r3, r0, asr r2
   27c54:	andeq	r0, r0, r6, lsr #5
   27c58:			; <UNDEFINED> instruction: 0x000392b4
   27c5c:	andeq	r4, r3, r4, lsr #13
   27c60:	andeq	r9, r3, r8, ror #4
   27c64:	andeq	r9, r3, r4, lsl #5
   27c68:	andeq	r4, r3, r4, ror r6
   27c6c:			; <UNDEFINED> instruction: 0x000002bf
   27c70:	push	{r4, r5, r6, r7, r8, lr}
   27c74:	ldr	r4, [pc, #1152]	; 280fc <g_strcmp0@plt+0x12f30>
   27c78:	ldr	r0, [pc, #1152]	; 28100 <g_strcmp0@plt+0x12f34>
   27c7c:	bl	29704 <g_strcmp0@plt+0x14538>
   27c80:	mov	r3, #0
   27c84:	ldr	r2, [pc, #1144]	; 28104 <g_strcmp0@plt+0x12f38>
   27c88:	ldr	r1, [pc, #1144]	; 28108 <g_strcmp0@plt+0x12f3c>
   27c8c:	ldr	r0, [r4]
   27c90:	bl	2a300 <g_strcmp0@plt+0x15134>
   27c94:	ldr	r1, [pc, #1136]	; 2810c <g_strcmp0@plt+0x12f40>
   27c98:	mov	r6, r0
   27c9c:	bl	151cc <g_strcmp0@plt>
   27ca0:	mov	r5, r0
   27ca4:	mov	r0, r6
   27ca8:	bl	14bd8 <g_free@plt>
   27cac:	cmp	r5, #0
   27cb0:	beq	27efc <g_strcmp0@plt+0x12d30>
   27cb4:	ldr	r3, [pc, #1108]	; 28110 <g_strcmp0@plt+0x12f44>
   27cb8:	ldr	r2, [pc, #1108]	; 28114 <g_strcmp0@plt+0x12f48>
   27cbc:	ldr	r1, [pc, #1092]	; 28108 <g_strcmp0@plt+0x12f3c>
   27cc0:	ldr	r0, [r4]
   27cc4:	bl	2a300 <g_strcmp0@plt+0x15134>
   27cc8:	ldr	r1, [pc, #1084]	; 2810c <g_strcmp0@plt+0x12f40>
   27ccc:	mov	r6, r0
   27cd0:	bl	151cc <g_strcmp0@plt>
   27cd4:	mov	r5, r0
   27cd8:	mov	r0, r6
   27cdc:	bl	14bd8 <g_free@plt>
   27ce0:	cmp	r5, #0
   27ce4:	beq	27ee8 <g_strcmp0@plt+0x12d1c>
   27ce8:	ldr	r3, [pc, #1064]	; 28118 <g_strcmp0@plt+0x12f4c>
   27cec:	ldr	r2, [pc, #1064]	; 2811c <g_strcmp0@plt+0x12f50>
   27cf0:	ldr	r1, [pc, #1040]	; 28108 <g_strcmp0@plt+0x12f3c>
   27cf4:	ldr	r0, [r4]
   27cf8:	bl	2a300 <g_strcmp0@plt+0x15134>
   27cfc:	mov	r5, r0
   27d00:	bl	14bd8 <g_free@plt>
   27d04:	cmp	r5, #0
   27d08:	beq	27d3c <g_strcmp0@plt+0x12b70>
   27d0c:	ldr	r3, [pc, #1028]	; 28118 <g_strcmp0@plt+0x12f4c>
   27d10:	ldr	r2, [pc, #1028]	; 2811c <g_strcmp0@plt+0x12f50>
   27d14:	ldr	r1, [pc, #1004]	; 28108 <g_strcmp0@plt+0x12f3c>
   27d18:	ldr	r0, [r4]
   27d1c:	bl	2a300 <g_strcmp0@plt+0x15134>
   27d20:	mov	r2, #1
   27d24:	mov	r5, r0
   27d28:	mov	r1, r0
   27d2c:	ldr	r0, [pc, #1004]	; 28120 <g_strcmp0@plt+0x12f54>
   27d30:	bl	144f4 <g_setenv@plt>
   27d34:	mov	r0, r5
   27d38:	bl	14bd8 <g_free@plt>
   27d3c:	ldr	r0, [pc, #992]	; 28124 <g_strcmp0@plt+0x12f58>
   27d40:	bl	14b9c <g_getenv@plt>
   27d44:	bl	147e8 <g_strdup@plt>
   27d48:	mov	r5, r0
   27d4c:	mov	r0, #0
   27d50:	bl	14bd8 <g_free@plt>
   27d54:	cmp	r5, #0
   27d58:	beq	27d70 <g_strcmp0@plt+0x12ba4>
   27d5c:	ldr	r1, [pc, #964]	; 28128 <g_strcmp0@plt+0x12f5c>
   27d60:	mov	r0, r5
   27d64:	bl	151cc <g_strcmp0@plt>
   27d68:	cmp	r0, #0
   27d6c:	bne	27ff4 <g_strcmp0@plt+0x12e28>
   27d70:	mov	r3, #0
   27d74:	ldr	r2, [pc, #944]	; 2812c <g_strcmp0@plt+0x12f60>
   27d78:	ldr	r1, [pc, #904]	; 28108 <g_strcmp0@plt+0x12f3c>
   27d7c:	ldr	r0, [r4]
   27d80:	bl	2a300 <g_strcmp0@plt+0x15134>
   27d84:	ldr	r1, [pc, #896]	; 2810c <g_strcmp0@plt+0x12f40>
   27d88:	mov	r7, r0
   27d8c:	bl	151cc <g_strcmp0@plt>
   27d90:	mov	r6, r0
   27d94:	mov	r0, r7
   27d98:	bl	14bd8 <g_free@plt>
   27d9c:	cmp	r6, #0
   27da0:	beq	27fe0 <g_strcmp0@plt+0x12e14>
   27da4:	ldr	r3, [pc, #900]	; 28130 <g_strcmp0@plt+0x12f64>
   27da8:	ldr	r2, [pc, #900]	; 28134 <g_strcmp0@plt+0x12f68>
   27dac:	ldr	r1, [pc, #900]	; 28138 <g_strcmp0@plt+0x12f6c>
   27db0:	ldr	r0, [r4]
   27db4:	bl	2a300 <g_strcmp0@plt+0x15134>
   27db8:	mov	r6, r0
   27dbc:	bl	14bd8 <g_free@plt>
   27dc0:	cmp	r6, #0
   27dc4:	beq	27e58 <g_strcmp0@plt+0x12c8c>
   27dc8:	ldr	r3, [pc, #864]	; 28130 <g_strcmp0@plt+0x12f64>
   27dcc:	ldr	r2, [pc, #864]	; 28134 <g_strcmp0@plt+0x12f68>
   27dd0:	ldr	r1, [pc, #864]	; 28138 <g_strcmp0@plt+0x12f6c>
   27dd4:	ldr	r0, [r4]
   27dd8:	bl	2a300 <g_strcmp0@plt+0x15134>
   27ddc:	mov	r2, #1
   27de0:	mov	r1, r0
   27de4:	mov	r6, r0
   27de8:	ldr	r0, [pc, #844]	; 2813c <g_strcmp0@plt+0x12f70>
   27dec:	bl	144f4 <g_setenv@plt>
   27df0:	mov	r0, r6
   27df4:	bl	14bd8 <g_free@plt>
   27df8:	ldr	r3, [pc, #816]	; 28130 <g_strcmp0@plt+0x12f64>
   27dfc:	ldr	r2, [pc, #816]	; 28134 <g_strcmp0@plt+0x12f68>
   27e00:	ldr	r1, [pc, #816]	; 28138 <g_strcmp0@plt+0x12f6c>
   27e04:	ldr	r0, [r4]
   27e08:	bl	2a300 <g_strcmp0@plt+0x15134>
   27e0c:	mov	r2, #1
   27e10:	mov	r1, r0
   27e14:	mov	r6, r0
   27e18:	ldr	r0, [pc, #800]	; 28140 <g_strcmp0@plt+0x12f74>
   27e1c:	bl	144f4 <g_setenv@plt>
   27e20:	mov	r0, r6
   27e24:	bl	14bd8 <g_free@plt>
   27e28:	ldr	r3, [pc, #768]	; 28130 <g_strcmp0@plt+0x12f64>
   27e2c:	ldr	r2, [pc, #768]	; 28134 <g_strcmp0@plt+0x12f68>
   27e30:	ldr	r1, [pc, #768]	; 28138 <g_strcmp0@plt+0x12f6c>
   27e34:	ldr	r0, [r4]
   27e38:	bl	2a300 <g_strcmp0@plt+0x15134>
   27e3c:	mov	r2, #1
   27e40:	mov	r6, r0
   27e44:	mov	r1, r0
   27e48:	ldr	r0, [pc, #756]	; 28144 <g_strcmp0@plt+0x12f78>
   27e4c:	bl	144f4 <g_setenv@plt>
   27e50:	mov	r0, r6
   27e54:	bl	14bd8 <g_free@plt>
   27e58:	ldr	r3, [pc, #744]	; 28148 <g_strcmp0@plt+0x12f7c>
   27e5c:	ldr	r2, [pc, #696]	; 2811c <g_strcmp0@plt+0x12f50>
   27e60:	ldr	r1, [pc, #672]	; 28108 <g_strcmp0@plt+0x12f3c>
   27e64:	ldr	r0, [r4]
   27e68:	bl	2a300 <g_strcmp0@plt+0x15134>
   27e6c:	mov	r6, r0
   27e70:	bl	14bd8 <g_free@plt>
   27e74:	cmp	r6, #0
   27e78:	beq	27edc <g_strcmp0@plt+0x12d10>
   27e7c:	ldr	r3, [pc, #708]	; 28148 <g_strcmp0@plt+0x12f7c>
   27e80:	ldr	r2, [pc, #660]	; 2811c <g_strcmp0@plt+0x12f50>
   27e84:	ldr	r1, [pc, #636]	; 28108 <g_strcmp0@plt+0x12f3c>
   27e88:	ldr	r0, [r4]
   27e8c:	bl	2a300 <g_strcmp0@plt+0x15134>
   27e90:	mov	r2, #1
   27e94:	mov	r1, r0
   27e98:	mov	r6, r0
   27e9c:	ldr	r0, [pc, #680]	; 2814c <g_strcmp0@plt+0x12f80>
   27ea0:	bl	144f4 <g_setenv@plt>
   27ea4:	mov	r0, r6
   27ea8:	bl	14bd8 <g_free@plt>
   27eac:	ldr	r0, [r4]
   27eb0:	ldr	r3, [pc, #656]	; 28148 <g_strcmp0@plt+0x12f7c>
   27eb4:	ldr	r2, [pc, #608]	; 2811c <g_strcmp0@plt+0x12f50>
   27eb8:	ldr	r1, [pc, #584]	; 28108 <g_strcmp0@plt+0x12f3c>
   27ebc:	bl	2a300 <g_strcmp0@plt+0x15134>
   27ec0:	mov	r2, #1
   27ec4:	mov	r4, r0
   27ec8:	mov	r1, r0
   27ecc:	ldr	r0, [pc, #636]	; 28150 <g_strcmp0@plt+0x12f84>
   27ed0:	bl	144f4 <g_setenv@plt>
   27ed4:	mov	r0, r4
   27ed8:	bl	14bd8 <g_free@plt>
   27edc:	mov	r0, r5
   27ee0:	pop	{r4, r5, r6, r7, r8, lr}
   27ee4:	b	14bd8 <g_free@plt>
   27ee8:	mov	r2, #1
   27eec:	ldr	r1, [pc, #608]	; 28154 <g_strcmp0@plt+0x12f88>
   27ef0:	ldr	r0, [pc, #608]	; 28158 <g_strcmp0@plt+0x12f8c>
   27ef4:	bl	144f4 <g_setenv@plt>
   27ef8:	b	27ce8 <g_strcmp0@plt+0x12b1c>
   27efc:	mov	r3, r5
   27f00:	ldr	r2, [pc, #508]	; 28104 <g_strcmp0@plt+0x12f38>
   27f04:	ldr	r1, [pc, #508]	; 28108 <g_strcmp0@plt+0x12f3c>
   27f08:	ldr	r0, [r4]
   27f0c:	bl	2a300 <g_strcmp0@plt+0x15134>
   27f10:	ldr	r5, [pc, #580]	; 2815c <g_strcmp0@plt+0x12f90>
   27f14:	subs	r7, r0, #0
   27f18:	beq	28024 <g_strcmp0@plt+0x12e58>
   27f1c:	bl	14bcc <g_quark_from_string@plt>
   27f20:	mov	r6, r0
   27f24:	ldr	r0, [r5, #12]
   27f28:	cmp	r0, #0
   27f2c:	beq	28064 <g_strcmp0@plt+0x12e98>
   27f30:	cmp	r0, r6
   27f34:	beq	27fc4 <g_strcmp0@plt+0x12df8>
   27f38:	ldr	r0, [r5, #16]
   27f3c:	cmp	r0, #0
   27f40:	beq	28040 <g_strcmp0@plt+0x12e74>
   27f44:	cmp	r0, r6
   27f48:	beq	28094 <g_strcmp0@plt+0x12ec8>
   27f4c:	ldr	r0, [r5, #20]
   27f50:	cmp	r0, #0
   27f54:	beq	28074 <g_strcmp0@plt+0x12ea8>
   27f58:	cmp	r0, r6
   27f5c:	beq	27fc4 <g_strcmp0@plt+0x12df8>
   27f60:	ldr	r0, [r5, #24]
   27f64:	cmp	r0, #0
   27f68:	beq	28084 <g_strcmp0@plt+0x12eb8>
   27f6c:	cmp	r0, r6
   27f70:	beq	280d8 <g_strcmp0@plt+0x12f0c>
   27f74:	ldr	r0, [r5, #28]
   27f78:	cmp	r0, #0
   27f7c:	beq	280b8 <g_strcmp0@plt+0x12eec>
   27f80:	cmp	r0, r6
   27f84:	beq	28050 <g_strcmp0@plt+0x12e84>
   27f88:	ldr	r0, [r5, #32]
   27f8c:	cmp	r0, #0
   27f90:	beq	280c8 <g_strcmp0@plt+0x12efc>
   27f94:	cmp	r0, r6
   27f98:	beq	28050 <g_strcmp0@plt+0x12e84>
   27f9c:	ldr	r0, [r5, #36]	; 0x24
   27fa0:	cmp	r0, #0
   27fa4:	beq	280ec <g_strcmp0@plt+0x12f20>
   27fa8:	cmp	r0, r6
   27fac:	beq	28050 <g_strcmp0@plt+0x12e84>
   27fb0:	ldr	r0, [r5, #40]	; 0x28
   27fb4:	cmp	r0, #0
   27fb8:	beq	280a8 <g_strcmp0@plt+0x12edc>
   27fbc:	cmp	r0, r6
   27fc0:	beq	28050 <g_strcmp0@plt+0x12e84>
   27fc4:	mov	r2, #1
   27fc8:	ldr	r1, [pc, #324]	; 28114 <g_strcmp0@plt+0x12f48>
   27fcc:	ldr	r0, [pc, #396]	; 28160 <g_strcmp0@plt+0x12f94>
   27fd0:	bl	144f4 <g_setenv@plt>
   27fd4:	mov	r0, r7
   27fd8:	bl	14bd8 <g_free@plt>
   27fdc:	b	27cb4 <g_strcmp0@plt+0x12ae8>
   27fe0:	mov	r2, #1
   27fe4:	ldr	r1, [pc, #376]	; 28164 <g_strcmp0@plt+0x12f98>
   27fe8:	ldr	r0, [pc, #376]	; 28168 <g_strcmp0@plt+0x12f9c>
   27fec:	bl	144f4 <g_setenv@plt>
   27ff0:	b	27da4 <g_strcmp0@plt+0x12bd8>
   27ff4:	mov	r2, #0
   27ff8:	ldr	r1, [pc, #364]	; 2816c <g_strcmp0@plt+0x12fa0>
   27ffc:	mov	r0, r5
   28000:	bl	14dc4 <g_strconcat@plt>
   28004:	mov	r2, #1
   28008:	mov	r6, r0
   2800c:	mov	r1, r0
   28010:	ldr	r0, [pc, #268]	; 28124 <g_strcmp0@plt+0x12f58>
   28014:	bl	144f4 <g_setenv@plt>
   28018:	mov	r0, r6
   2801c:	bl	14bd8 <g_free@plt>
   28020:	b	27d70 <g_strcmp0@plt+0x12ba4>
   28024:	ldr	r6, [r5, #12]
   28028:	cmp	r6, #0
   2802c:	beq	28064 <g_strcmp0@plt+0x12e98>
   28030:	ldr	r6, [r5, #16]
   28034:	cmp	r6, #0
   28038:	movne	r6, r7
   2803c:	bne	27f4c <g_strcmp0@plt+0x12d80>
   28040:	ldr	r0, [pc, #296]	; 28170 <g_strcmp0@plt+0x12fa4>
   28044:	bl	14d64 <g_quark_from_static_string@plt>
   28048:	str	r0, [r5, #16]
   2804c:	b	27f44 <g_strcmp0@plt+0x12d78>
   28050:	mov	r2, #1
   28054:	ldr	r1, [pc, #280]	; 28174 <g_strcmp0@plt+0x12fa8>
   28058:	ldr	r0, [pc, #256]	; 28160 <g_strcmp0@plt+0x12f94>
   2805c:	bl	144f4 <g_setenv@plt>
   28060:	b	27fd4 <g_strcmp0@plt+0x12e08>
   28064:	ldr	r0, [pc, #268]	; 28178 <g_strcmp0@plt+0x12fac>
   28068:	bl	14d64 <g_quark_from_static_string@plt>
   2806c:	str	r0, [r5, #12]
   28070:	b	27f30 <g_strcmp0@plt+0x12d64>
   28074:	ldr	r0, [pc, #152]	; 28114 <g_strcmp0@plt+0x12f48>
   28078:	bl	14d64 <g_quark_from_static_string@plt>
   2807c:	str	r0, [r5, #20]
   28080:	b	27f58 <g_strcmp0@plt+0x12d8c>
   28084:	ldr	r0, [pc, #240]	; 2817c <g_strcmp0@plt+0x12fb0>
   28088:	bl	14d64 <g_quark_from_static_string@plt>
   2808c:	str	r0, [r5, #24]
   28090:	b	27f6c <g_strcmp0@plt+0x12da0>
   28094:	mov	r2, #1
   28098:	ldr	r1, [pc, #208]	; 28170 <g_strcmp0@plt+0x12fa4>
   2809c:	ldr	r0, [pc, #188]	; 28160 <g_strcmp0@plt+0x12f94>
   280a0:	bl	144f4 <g_setenv@plt>
   280a4:	b	27fd4 <g_strcmp0@plt+0x12e08>
   280a8:	ldr	r0, [pc, #208]	; 28180 <g_strcmp0@plt+0x12fb4>
   280ac:	bl	14d64 <g_quark_from_static_string@plt>
   280b0:	str	r0, [r5, #40]	; 0x28
   280b4:	b	27fbc <g_strcmp0@plt+0x12df0>
   280b8:	ldr	r0, [pc, #180]	; 28174 <g_strcmp0@plt+0x12fa8>
   280bc:	bl	14d64 <g_quark_from_static_string@plt>
   280c0:	str	r0, [r5, #28]
   280c4:	b	27f80 <g_strcmp0@plt+0x12db4>
   280c8:	ldr	r0, [pc, #180]	; 28184 <g_strcmp0@plt+0x12fb8>
   280cc:	bl	14d64 <g_quark_from_static_string@plt>
   280d0:	str	r0, [r5, #32]
   280d4:	b	27f94 <g_strcmp0@plt+0x12dc8>
   280d8:	mov	r2, #1
   280dc:	ldr	r1, [pc, #152]	; 2817c <g_strcmp0@plt+0x12fb0>
   280e0:	ldr	r0, [pc, #120]	; 28160 <g_strcmp0@plt+0x12f94>
   280e4:	bl	144f4 <g_setenv@plt>
   280e8:	b	27fd4 <g_strcmp0@plt+0x12e08>
   280ec:	ldr	r0, [pc, #40]	; 2811c <g_strcmp0@plt+0x12f50>
   280f0:	bl	14d64 <g_quark_from_static_string@plt>
   280f4:	str	r0, [r5, #36]	; 0x24
   280f8:	b	27fa8 <g_strcmp0@plt+0x12ddc>
   280fc:	andeq	ip, r4, r4, asr #32
   28100:	strdeq	r9, [r3], -r4
   28104:	andeq	r9, r3, r8, asr r3
   28108:	andeq	r7, r3, r0, lsl r6
   2810c:	andeq	r4, r3, ip, ror r8
   28110:	andeq	r9, r3, r8, lsr #7
   28114:	andeq	r9, r3, r4, ror r3
   28118:	andeq	r9, r3, r0, ror #7
   2811c:	andeq	r5, r3, r4, lsl r2
   28120:	andeq	r9, r3, ip, ror #7
   28124:	andeq	r9, r3, r0, lsl #8
   28128:	andeq	sl, r3, ip, ror #18
   2812c:	andeq	r9, r3, r0, asr #8
   28130:	ldrdeq	r4, [r3], -ip
   28134:	andeq	r4, r3, r4, asr #17
   28138:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   2813c:	andeq	r9, r3, r8, ror r4
   28140:	andeq	r9, r3, r8, lsl #9
   28144:	muleq	r3, r8, r4
   28148:	andeq	r9, r3, r8, lsr #9
   2814c:			; <UNDEFINED> instruction: 0x000394b4
   28150:	andeq	r9, r3, r8, asr #9
   28154:	andeq	r9, r3, r4, asr #7
   28158:	andeq	r9, r3, r8, asr #7
   2815c:	andeq	ip, r4, r4, lsl #7
   28160:	andeq	r9, r3, r8, ror r3
   28164:	andeq	r9, r3, r4, asr r4
   28168:	andeq	r9, r3, r4, ror #8
   2816c:	andeq	r9, r3, r0, lsl r4
   28170:	andeq	r9, r3, ip, lsl #7
   28174:	muleq	r3, r8, r3
   28178:	andeq	r9, r3, ip, ror #6
   2817c:	muleq	r3, r4, r3
   28180:	andeq	r9, r3, r4, lsr #7
   28184:	andeq	r9, r3, r0, lsr #7
   28188:	push	{r4, r5, r6, lr}
   2818c:	mov	r4, r0
   28190:	ldr	r2, [pc, #116]	; 2820c <g_strcmp0@plt+0x13040>
   28194:	mov	r1, #32
   28198:	mov	r0, #0
   2819c:	bl	14668 <g_log@plt>
   281a0:	ldr	r3, [r4, #12]
   281a4:	ldr	r2, [pc, #100]	; 28210 <g_strcmp0@plt+0x13044>
   281a8:	mov	r1, #32
   281ac:	ldr	r3, [r3, #12]
   281b0:	mov	r0, #0
   281b4:	bl	14668 <g_log@plt>
   281b8:	ldr	r1, [pc, #84]	; 28214 <g_strcmp0@plt+0x13048>
   281bc:	mov	r3, #0
   281c0:	ldr	r2, [pc, #80]	; 28218 <g_strcmp0@plt+0x1304c>
   281c4:	ldr	r0, [r1]
   281c8:	ldr	r1, [pc, #76]	; 2821c <g_strcmp0@plt+0x13050>
   281cc:	bl	2a300 <g_strcmp0@plt+0x15134>
   281d0:	mov	r2, #1
   281d4:	mov	r1, r0
   281d8:	mov	r5, r0
   281dc:	ldr	r0, [pc, #60]	; 28220 <g_strcmp0@plt+0x13054>
   281e0:	bl	144f4 <g_setenv@plt>
   281e4:	mov	r0, r5
   281e8:	bl	14bd8 <g_free@plt>
   281ec:	mov	r0, r4
   281f0:	ldr	r1, [pc, #44]	; 28224 <g_strcmp0@plt+0x13058>
   281f4:	bl	27154 <g_strcmp0@plt+0x11f88>
   281f8:	mov	r0, r4
   281fc:	bl	27954 <g_strcmp0@plt+0x12788>
   28200:	mov	r0, r4
   28204:	pop	{r4, r5, r6, lr}
   28208:	b	27c70 <g_strcmp0@plt+0x12aa4>
   2820c:	andeq	r9, r3, r0, ror #9
   28210:	andeq	r9, r3, ip, lsl #10
   28214:	andeq	ip, r4, r4, asr #32
   28218:	andeq	r9, r3, ip, lsr r5
   2821c:	andeq	r7, r3, r0, lsl r6
   28220:	andeq	r9, r3, r8, asr #10
   28224:	andeq	r4, r3, r8, lsl #16
   28228:	push	{r4, r5, r6, lr}
   2822c:	mcr	15, 0, r0, cr7, cr10, {5}
   28230:	ldr	r4, [pc, #96]	; 28298 <g_strcmp0@plt+0x130cc>
   28234:	ldr	r5, [r4, #44]	; 0x2c
   28238:	mcr	15, 0, r0, cr7, cr10, {5}
   2823c:	cmp	r5, #0
   28240:	beq	2824c <g_strcmp0@plt+0x13080>
   28244:	ldr	r0, [r4, #44]	; 0x2c
   28248:	pop	{r4, r5, r6, pc}
   2824c:	add	r0, r4, #44	; 0x2c
   28250:	bl	14a28 <g_once_init_enter@plt>
   28254:	cmp	r0, #0
   28258:	beq	28244 <g_strcmp0@plt+0x13078>
   2825c:	mov	r3, r5
   28260:	ldr	r2, [pc, #52]	; 2829c <g_strcmp0@plt+0x130d0>
   28264:	ldr	r1, [pc, #52]	; 282a0 <g_strcmp0@plt+0x130d4>
   28268:	mov	r0, #80	; 0x50
   2826c:	bl	14428 <g_type_register_static@plt>
   28270:	mov	r1, #48	; 0x30
   28274:	mov	r5, r0
   28278:	bl	14c08 <g_type_add_instance_private@plt>
   2827c:	mov	r1, r5
   28280:	mov	r3, r0
   28284:	mov	r0, r4
   28288:	str	r3, [r0], #44	; 0x2c
   2828c:	bl	14ed8 <g_once_init_leave@plt>
   28290:	ldr	r0, [r4, #44]	; 0x2c
   28294:	pop	{r4, r5, r6, pc}
   28298:	andeq	ip, r4, r4, lsl #7
   2829c:	strdeq	r8, [r3], -r0
   282a0:	andeq	r9, r3, r8, asr r5
   282a4:	push	{r4, r5, r6, lr}
   282a8:	mov	r5, r1
   282ac:	mov	r4, r0
   282b0:	bl	28228 <g_strcmp0@plt+0x1305c>
   282b4:	mov	r2, r5
   282b8:	mov	r1, r4
   282bc:	pop	{r4, r5, r6, lr}
   282c0:	b	26fe0 <g_strcmp0@plt+0x11e14>
   282c4:	mov	r3, #0
   282c8:	str	r3, [r0, #8]
   282cc:	bx	lr
   282d0:	mov	r3, #1
   282d4:	str	r3, [r0, #4]
   282d8:	bx	lr
   282dc:	b	14f8c <g_type_class_peek_parent@plt>
   282e0:	push	{r4, lr}
   282e4:	mov	r4, r0
   282e8:	bl	14f8c <g_type_class_peek_parent@plt>
   282ec:	ldr	r3, [pc, #4]	; 282f8 <g_strcmp0@plt+0x1312c>
   282f0:	str	r3, [r4, #4]
   282f4:	pop	{r4, pc}
   282f8:	andeq	r8, r2, ip, lsr #6
   282fc:	b	14f8c <g_type_class_peek_parent@plt>
   28300:	b	14f8c <g_type_class_peek_parent@plt>
   28304:	push	{r4, lr}
   28308:	mov	r4, r0
   2830c:	bl	14f8c <g_type_class_peek_parent@plt>
   28310:	ldr	r3, [pc, #12]	; 28324 <g_strcmp0@plt+0x13158>
   28314:	ldr	r2, [pc, #12]	; 28328 <g_strcmp0@plt+0x1315c>
   28318:	str	r2, [r4, #24]
   2831c:	str	r0, [r3]
   28320:	pop	{r4, pc}
   28324:			; <UNDEFINED> instruction: 0x0004c3b4
   28328:	andeq	r8, r2, r8, asr r4
   2832c:	b	14938 <g_signal_handlers_destroy@plt>
   28330:	push	{r4, r5, r6, lr}
   28334:	sub	sp, sp, #8
   28338:	ldr	r4, [r2]
   2833c:	cmp	r4, #0
   28340:	beq	28404 <g_strcmp0@plt+0x13238>
   28344:	ldr	r6, [r4]
   28348:	mov	r5, r0
   2834c:	cmp	r6, #0
   28350:	ldr	r1, [r0]
   28354:	beq	283e0 <g_strcmp0@plt+0x13214>
   28358:	ldr	r0, [r6]
   2835c:	bl	1477c <g_value_type_compatible@plt>
   28360:	subs	r6, r0, #0
   28364:	bne	283ac <g_strcmp0@plt+0x131e0>
   28368:	ldr	r3, [r4]
   2836c:	ldr	r0, [r3]
   28370:	bl	14680 <g_type_name@plt>
   28374:	mov	r4, r0
   28378:	ldr	r0, [r5]
   2837c:	bl	14680 <g_type_name@plt>
   28380:	ldr	r3, [pc, #132]	; 2840c <g_strcmp0@plt+0x13240>
   28384:	mov	r1, r4
   28388:	ldr	r2, [pc, #128]	; 28410 <g_strcmp0@plt+0x13244>
   2838c:	stm	sp, {r3, r6}
   28390:	mov	r3, r0
   28394:	ldr	r0, [pc, #120]	; 28414 <g_strcmp0@plt+0x13248>
   28398:	bl	14dc4 <g_strconcat@plt>
   2839c:	mov	r4, r0
   283a0:	mov	r0, r4
   283a4:	add	sp, sp, #8
   283a8:	pop	{r4, r5, r6, pc}
   283ac:	add	r3, r4, #4
   283b0:	mcr	15, 0, r0, cr7, cr10, {5}
   283b4:	ldrex	r2, [r3]
   283b8:	add	r2, r2, #1
   283bc:	strex	r1, r2, [r3]
   283c0:	cmp	r1, #0
   283c4:	bne	283b4 <g_strcmp0@plt+0x131e8>
   283c8:	mcr	15, 0, r0, cr7, cr10, {5}
   283cc:	str	r4, [r5, #8]
   283d0:	mov	r4, #0
   283d4:	mov	r0, r4
   283d8:	add	sp, sp, #8
   283dc:	pop	{r4, r5, r6, pc}
   283e0:	mov	r0, r1
   283e4:	bl	14680 <g_type_name@plt>
   283e8:	mov	r3, r6
   283ec:	ldr	r2, [pc, #24]	; 2840c <g_strcmp0@plt+0x13240>
   283f0:	mov	r1, r0
   283f4:	ldr	r0, [pc, #28]	; 28418 <g_strcmp0@plt+0x1324c>
   283f8:	add	sp, sp, #8
   283fc:	pop	{r4, r5, r6, lr}
   28400:	b	14dc4 <g_strconcat@plt>
   28404:	str	r4, [r0, #8]
   28408:	b	283a0 <g_strcmp0@plt+0x131d4>
   2840c:	andeq	r4, r3, r8, lsr pc
   28410:	andeq	r9, r3, ip, ror r6
   28414:	muleq	r3, r0, r6
   28418:	andeq	r9, r3, r8, asr #12
   2841c:	ldr	r3, [r0, #8]
   28420:	cmp	r3, #0
   28424:	beq	28450 <g_strcmp0@plt+0x13284>
   28428:	add	r2, r3, #4
   2842c:	mcr	15, 0, r0, cr7, cr10, {5}
   28430:	ldrex	r0, [r2]
   28434:	add	r0, r0, #1
   28438:	strex	ip, r0, [r2]
   2843c:	cmp	ip, #0
   28440:	bne	28430 <g_strcmp0@plt+0x13264>
   28444:	mcr	15, 0, r0, cr7, cr10, {5}
   28448:	str	r3, [r1, #8]
   2844c:	bx	lr
   28450:	str	r3, [r1, #8]
   28454:	bx	lr
   28458:	push	{r4, r5, r6, lr}
   2845c:	mov	r4, r0
   28460:	mov	r5, #0
   28464:	ldr	r0, [r0, #16]
   28468:	bl	14bd8 <g_free@plt>
   2846c:	ldr	r0, [r4, #20]
   28470:	str	r5, [r4, #16]
   28474:	bl	14bd8 <g_free@plt>
   28478:	ldr	r0, [r4, #24]
   2847c:	str	r5, [r4, #20]
   28480:	bl	14bd8 <g_free@plt>
   28484:	ldr	r0, [r4, #28]
   28488:	str	r5, [r4, #24]
   2848c:	cmp	r0, r5
   28490:	beq	2849c <g_strcmp0@plt+0x132d0>
   28494:	bl	14e90 <g_object_unref@plt>
   28498:	str	r5, [r4, #28]
   2849c:	ldr	r3, [pc, #16]	; 284b4 <g_strcmp0@plt+0x132e8>
   284a0:	mov	r0, r4
   284a4:	pop	{r4, r5, r6, lr}
   284a8:	ldr	r3, [r3]
   284ac:	ldr	r3, [r3, #24]
   284b0:	bx	r3
   284b4:			; <UNDEFINED> instruction: 0x0004c3b4
   284b8:	ldr	r1, [r2]
   284bc:	cmp	r1, #0
   284c0:	beq	28510 <g_strcmp0@plt+0x13344>
   284c4:	ldr	r2, [r0, #8]
   284c8:	cmp	r2, #0
   284cc:	beq	284d8 <g_strcmp0@plt+0x1330c>
   284d0:	tst	r3, #134217728	; 0x8000000
   284d4:	beq	284e4 <g_strcmp0@plt+0x13318>
   284d8:	str	r2, [r1]
   284dc:	mov	r0, #0
   284e0:	bx	lr
   284e4:	add	r3, r2, #4
   284e8:	mcr	15, 0, r0, cr7, cr10, {5}
   284ec:	ldrex	r0, [r3]
   284f0:	add	r0, r0, #1
   284f4:	strex	ip, r0, [r3]
   284f8:	cmp	ip, #0
   284fc:	bne	284ec <g_strcmp0@plt+0x13320>
   28500:	mcr	15, 0, r0, cr7, cr10, {5}
   28504:	mov	r0, #0
   28508:	str	r2, [r1]
   2850c:	bx	lr
   28510:	push	{r4, lr}
   28514:	ldr	r0, [r0]
   28518:	bl	14680 <g_type_name@plt>
   2851c:	pop	{r4, lr}
   28520:	mov	r1, r0
   28524:	ldr	r0, [pc]	; 2852c <g_strcmp0@plt+0x13360>
   28528:	b	14890 <g_strdup_printf@plt>
   2852c:	andeq	r9, r3, r8, lsr #13
   28530:	bx	lr
   28534:	bx	lr
   28538:	bx	lr
   2853c:	bx	lr
   28540:	ldr	r0, [r0, #8]
   28544:	bx	lr
   28548:	mov	r1, #0
   2854c:	b	143d4 <g_object_new@plt>
   28550:	push	{r4, r5, r6, lr}
   28554:	mcr	15, 0, r0, cr7, cr10, {5}
   28558:	ldr	r4, [pc, #76]	; 285ac <g_strcmp0@plt+0x133e0>
   2855c:	ldr	r5, [r4, #4]
   28560:	mcr	15, 0, r0, cr7, cr10, {5}
   28564:	cmp	r5, #0
   28568:	beq	28574 <g_strcmp0@plt+0x133a8>
   2856c:	ldr	r0, [r4, #4]
   28570:	pop	{r4, r5, r6, pc}
   28574:	add	r0, r4, #4
   28578:	bl	14a28 <g_once_init_enter@plt>
   2857c:	cmp	r0, #0
   28580:	beq	2856c <g_strcmp0@plt+0x133a0>
   28584:	bl	14eb4 <gtk_menu_item_get_type@plt>
   28588:	mov	r3, r5
   2858c:	ldr	r2, [pc, #28]	; 285b0 <g_strcmp0@plt+0x133e4>
   28590:	ldr	r1, [pc, #28]	; 285b4 <g_strcmp0@plt+0x133e8>
   28594:	bl	14428 <g_type_register_static@plt>
   28598:	mov	r1, r0
   2859c:	add	r0, r4, #4
   285a0:	bl	14ed8 <g_once_init_leave@plt>
   285a4:	ldr	r0, [r4, #4]
   285a8:	pop	{r4, r5, r6, pc}
   285ac:			; <UNDEFINED> instruction: 0x0004c3b4
   285b0:	andeq	r9, r3, r0, ror r5
   285b4:	ldrdeq	r9, [r3], -r0
   285b8:	push	{r4, lr}
   285bc:	bl	28550 <g_strcmp0@plt+0x13384>
   285c0:	mov	r1, #0
   285c4:	pop	{r4, lr}
   285c8:	b	143d4 <g_object_new@plt>
   285cc:	b	151a8 <g_type_create_instance@plt>
   285d0:	ldr	ip, [pc, #56]	; 28610 <g_strcmp0@plt+0x13444>
   285d4:	push	{r4, lr}
   285d8:	sub	sp, sp, #8
   285dc:	ldr	ip, [ip]
   285e0:	ldr	lr, [sp, #16]
   285e4:	mov	r4, r3
   285e8:	ldr	ip, [ip, #76]	; 0x4c
   285ec:	mov	r3, r2
   285f0:	str	lr, [sp]
   285f4:	mov	r2, r1
   285f8:	mov	r1, r0
   285fc:	mov	r0, ip
   28600:	bl	14788 <g_param_spec_internal@plt>
   28604:	str	r4, [r0, #12]
   28608:	add	sp, sp, #8
   2860c:	pop	{r4, pc}
   28610:	andeq	ip, r4, r4, lsr #32
   28614:	ldr	r0, [r0, #8]
   28618:	bx	lr
   2861c:	push	{r4, r5, lr}
   28620:	mcr	15, 0, r0, cr7, cr10, {5}
   28624:	ldr	r4, [pc, #92]	; 28688 <g_strcmp0@plt+0x134bc>
   28628:	sub	sp, sp, #12
   2862c:	ldr	r5, [r4, #8]
   28630:	mcr	15, 0, r0, cr7, cr10, {5}
   28634:	cmp	r5, #0
   28638:	beq	28648 <g_strcmp0@plt+0x1347c>
   2863c:	ldr	r0, [r4, #8]
   28640:	add	sp, sp, #12
   28644:	pop	{r4, r5, pc}
   28648:	add	r0, r4, #8
   2864c:	bl	14a28 <g_once_init_enter@plt>
   28650:	cmp	r0, #0
   28654:	beq	2863c <g_strcmp0@plt+0x13470>
   28658:	bl	15130 <g_type_fundamental_next@plt>
   2865c:	ldr	r3, [pc, #40]	; 2868c <g_strcmp0@plt+0x134c0>
   28660:	str	r5, [sp]
   28664:	add	r2, r3, #4
   28668:	ldr	r1, [pc, #32]	; 28690 <g_strcmp0@plt+0x134c4>
   2866c:	bl	14f44 <g_type_register_fundamental@plt>
   28670:	mov	r1, r0
   28674:	add	r0, r4, #8
   28678:	bl	14ed8 <g_once_init_leave@plt>
   2867c:	ldr	r0, [r4, #8]
   28680:	add	sp, sp, #12
   28684:	pop	{r4, r5, pc}
   28688:			; <UNDEFINED> instruction: 0x0004c3b4
   2868c:	muleq	r3, r4, r5
   28690:	andeq	r9, r3, r8, ror #13
   28694:	push	{r4, lr}
   28698:	bl	2861c <g_strcmp0@plt+0x13450>
   2869c:	pop	{r4, lr}
   286a0:	b	151a8 <g_type_create_instance@plt>
   286a4:	add	r3, r0, #4
   286a8:	mcr	15, 0, r0, cr7, cr10, {5}
   286ac:	ldrex	r2, [r3]
   286b0:	add	r2, r2, #1
   286b4:	strex	r1, r2, [r3]
   286b8:	cmp	r1, #0
   286bc:	bne	286ac <g_strcmp0@plt+0x134e0>
   286c0:	mcr	15, 0, r0, cr7, cr10, {5}
   286c4:	bx	lr
   286c8:	push	{r4, lr}
   286cc:	add	r3, r0, #4
   286d0:	mov	r4, r0
   286d4:	mcr	15, 0, r0, cr7, cr10, {5}
   286d8:	ldrex	r1, [r3]
   286dc:	sub	r2, r1, #1
   286e0:	strex	ip, r2, [r3]
   286e4:	cmp	ip, #0
   286e8:	bne	286d8 <g_strcmp0@plt+0x1350c>
   286ec:	cmp	r1, #1
   286f0:	mcr	15, 0, r0, cr7, cr10, {5}
   286f4:	popne	{r4, pc}
   286f8:	ldr	r3, [r4]
   286fc:	ldr	r3, [r3, #4]
   28700:	blx	r3
   28704:	mov	r0, r4
   28708:	pop	{r4, lr}
   2870c:	b	14794 <g_type_free_instance@plt>
   28710:	cmp	r1, #0
   28714:	ldr	r3, [r0, #8]
   28718:	str	r1, [r0, #8]
   2871c:	beq	28740 <g_strcmp0@plt+0x13574>
   28720:	add	r1, r1, #4
   28724:	mcr	15, 0, r0, cr7, cr10, {5}
   28728:	ldrex	r2, [r1]
   2872c:	add	r2, r2, #1
   28730:	strex	r0, r2, [r1]
   28734:	cmp	r0, #0
   28738:	bne	28728 <g_strcmp0@plt+0x1355c>
   2873c:	mcr	15, 0, r0, cr7, cr10, {5}
   28740:	cmp	r3, #0
   28744:	bxeq	lr
   28748:	mov	r0, r3
   2874c:	b	286c8 <g_strcmp0@plt+0x134fc>
   28750:	ldr	r3, [r0, #8]
   28754:	str	r1, [r0, #8]
   28758:	cmp	r3, #0
   2875c:	bxeq	lr
   28760:	mov	r0, r3
   28764:	b	286c8 <g_strcmp0@plt+0x134fc>
   28768:	ldr	r0, [r0, #8]
   2876c:	cmp	r0, #0
   28770:	bxeq	lr
   28774:	b	286c8 <g_strcmp0@plt+0x134fc>
   28778:	mov	r1, #0
   2877c:	b	143d4 <g_object_new@plt>
   28780:	push	{r4, r5, r6, lr}
   28784:	mcr	15, 0, r0, cr7, cr10, {5}
   28788:	ldr	r4, [pc, #76]	; 287dc <g_strcmp0@plt+0x13610>
   2878c:	ldr	r5, [r4, #12]
   28790:	mcr	15, 0, r0, cr7, cr10, {5}
   28794:	cmp	r5, #0
   28798:	beq	287a4 <g_strcmp0@plt+0x135d8>
   2879c:	ldr	r0, [r4, #12]
   287a0:	pop	{r4, r5, r6, pc}
   287a4:	add	r0, r4, #12
   287a8:	bl	14a28 <g_once_init_enter@plt>
   287ac:	cmp	r0, #0
   287b0:	beq	2879c <g_strcmp0@plt+0x135d0>
   287b4:	bl	14db8 <gtk_menu_get_type@plt>
   287b8:	mov	r3, r5
   287bc:	ldr	r2, [pc, #28]	; 287e0 <g_strcmp0@plt+0x13614>
   287c0:	ldr	r1, [pc, #28]	; 287e4 <g_strcmp0@plt+0x13618>
   287c4:	bl	14428 <g_type_register_static@plt>
   287c8:	mov	r1, r0
   287cc:	add	r0, r4, #12
   287d0:	bl	14ed8 <g_once_init_leave@plt>
   287d4:	ldr	r0, [r4, #12]
   287d8:	pop	{r4, r5, r6, pc}
   287dc:			; <UNDEFINED> instruction: 0x0004c3b4
   287e0:			; <UNDEFINED> instruction: 0x000395bc
   287e4:	andeq	r9, r3, r8, lsl #14
   287e8:	push	{r4, lr}
   287ec:	bl	28780 <g_strcmp0@plt+0x135b4>
   287f0:	mov	r1, #0
   287f4:	pop	{r4, lr}
   287f8:	b	143d4 <g_object_new@plt>
   287fc:	push	{r4, r5, r6, lr}
   28800:	mov	r1, #16
   28804:	ldr	r4, [sp, #16]
   28808:	ldr	r2, [pc, #32]	; 28830 <g_strcmp0@plt+0x13664>
   2880c:	mov	r0, #0
   28810:	mov	r5, r3
   28814:	bl	14668 <g_log@plt>
   28818:	cmp	r4, #0
   2881c:	popeq	{r4, r5, r6, pc}
   28820:	mov	r0, r5
   28824:	mov	r3, r4
   28828:	pop	{r4, r5, r6, lr}
   2882c:	bx	r3
   28830:	andeq	r9, r3, ip, lsl r7
   28834:	mov	r1, #0
   28838:	b	143d4 <g_object_new@plt>
   2883c:	push	{r4, r5, r6, lr}
   28840:	mcr	15, 0, r0, cr7, cr10, {5}
   28844:	ldr	r4, [pc, #76]	; 28898 <g_strcmp0@plt+0x136cc>
   28848:	ldr	r5, [r4, #16]
   2884c:	mcr	15, 0, r0, cr7, cr10, {5}
   28850:	cmp	r5, #0
   28854:	beq	28860 <g_strcmp0@plt+0x13694>
   28858:	ldr	r0, [r4, #16]
   2885c:	pop	{r4, r5, r6, pc}
   28860:	add	r0, r4, #16
   28864:	bl	14a28 <g_once_init_enter@plt>
   28868:	cmp	r0, #0
   2886c:	beq	28858 <g_strcmp0@plt+0x1368c>
   28870:	mov	r3, r5
   28874:	ldr	r2, [pc, #32]	; 2889c <g_strcmp0@plt+0x136d0>
   28878:	ldr	r1, [pc, #32]	; 288a0 <g_strcmp0@plt+0x136d4>
   2887c:	mov	r0, #80	; 0x50
   28880:	bl	14428 <g_type_register_static@plt>
   28884:	mov	r1, r0
   28888:	add	r0, r4, #16
   2888c:	bl	14ed8 <g_once_init_leave@plt>
   28890:	ldr	r0, [r4, #16]
   28894:	pop	{r4, r5, r6, pc}
   28898:			; <UNDEFINED> instruction: 0x0004c3b4
   2889c:	andeq	r9, r3, r0, ror #11
   288a0:	andeq	r9, r3, r4, asr #14
   288a4:	push	{r4, lr}
   288a8:	bl	2883c <g_strcmp0@plt+0x13670>
   288ac:	mov	r1, #0
   288b0:	pop	{r4, lr}
   288b4:	b	143d4 <g_object_new@plt>
   288b8:	push	{r4, r5, r6, r7, r8, lr}
   288bc:	mov	r8, r1
   288c0:	mov	r1, #0
   288c4:	mov	r6, r2
   288c8:	mov	r7, r3
   288cc:	ldr	r5, [sp, #24]
   288d0:	bl	143d4 <g_object_new@plt>
   288d4:	mov	r4, r0
   288d8:	mov	r0, r8
   288dc:	bl	147e8 <g_strdup@plt>
   288e0:	mov	r8, r0
   288e4:	ldr	r0, [r4, #16]
   288e8:	bl	14bd8 <g_free@plt>
   288ec:	cmp	r6, #0
   288f0:	movne	r0, r6
   288f4:	ldreq	r0, [pc, #100]	; 28960 <g_strcmp0@plt+0x13794>
   288f8:	str	r8, [r4, #16]
   288fc:	bl	147e8 <g_strdup@plt>
   28900:	mov	r6, r0
   28904:	ldr	r0, [r4, #20]
   28908:	bl	14bd8 <g_free@plt>
   2890c:	cmp	r7, #0
   28910:	str	r6, [r4, #20]
   28914:	beq	28930 <g_strcmp0@plt+0x13764>
   28918:	mov	r0, r7
   2891c:	bl	147e8 <g_strdup@plt>
   28920:	mov	r6, r0
   28924:	ldr	r0, [r4, #24]
   28928:	bl	14bd8 <g_free@plt>
   2892c:	str	r6, [r4, #24]
   28930:	cmp	r5, #0
   28934:	beq	28944 <g_strcmp0@plt+0x13778>
   28938:	mov	r0, r5
   2893c:	bl	14404 <g_object_ref@plt>
   28940:	mov	r5, r0
   28944:	ldr	r0, [r4, #28]
   28948:	cmp	r0, #0
   2894c:	beq	28954 <g_strcmp0@plt+0x13788>
   28950:	bl	14e90 <g_object_unref@plt>
   28954:	str	r5, [r4, #28]
   28958:	mov	r0, r4
   2895c:	pop	{r4, r5, r6, r7, r8, pc}
   28960:	andeq	r9, r3, r0, ror #14
   28964:	bx	lr
   28968:	bx	lr
   2896c:	bx	lr
   28970:	bx	lr
   28974:	bx	lr
   28978:	ldm	sp, {r0, r3}
   2897c:	cmp	r3, #0
   28980:	bxeq	lr
   28984:	bx	r3
   28988:	bx	lr
   2898c:	bx	lr
   28990:	push	{r4, r5, r6, lr}
   28994:	mcr	15, 0, r0, cr7, cr10, {5}
   28998:	ldr	r4, [pc, #76]	; 289ec <g_strcmp0@plt+0x13820>
   2899c:	ldr	r5, [r4, #20]
   289a0:	mcr	15, 0, r0, cr7, cr10, {5}
   289a4:	cmp	r5, #0
   289a8:	beq	289b4 <g_strcmp0@plt+0x137e8>
   289ac:	ldr	r0, [r4, #20]
   289b0:	pop	{r4, r5, r6, pc}
   289b4:	add	r0, r4, #20
   289b8:	bl	14a28 <g_once_init_enter@plt>
   289bc:	cmp	r0, #0
   289c0:	beq	289ac <g_strcmp0@plt+0x137e0>
   289c4:	mov	r3, r5
   289c8:	ldr	r2, [pc, #32]	; 289f0 <g_strcmp0@plt+0x13824>
   289cc:	ldr	r1, [pc, #32]	; 289f4 <g_strcmp0@plt+0x13828>
   289d0:	mov	r0, #80	; 0x50
   289d4:	bl	14428 <g_type_register_static@plt>
   289d8:	mov	r1, r0
   289dc:	add	r0, r4, #20
   289e0:	bl	14ed8 <g_once_init_leave@plt>
   289e4:	ldr	r0, [r4, #20]
   289e8:	pop	{r4, r5, r6, pc}
   289ec:			; <UNDEFINED> instruction: 0x0004c3b4
   289f0:	andeq	r9, r3, r4, lsl #12
   289f4:	andeq	r9, r3, r0, ror r7
   289f8:	push	{r4, r5, r6, r7, lr}
   289fc:	sub	sp, sp, #12
   28a00:	mov	r5, r1
   28a04:	mov	r6, r2
   28a08:	mov	r7, r3
   28a0c:	mov	r4, r0
   28a10:	bl	28990 <g_strcmp0@plt+0x137c4>
   28a14:	str	r7, [sp]
   28a18:	mov	r3, r6
   28a1c:	mov	r2, r5
   28a20:	mov	r1, r4
   28a24:	bl	288b8 <g_strcmp0@plt+0x136ec>
   28a28:	add	sp, sp, #12
   28a2c:	pop	{r4, r5, r6, r7, pc}
   28a30:	bx	lr
   28a34:	ldr	r3, [pc, #12]	; 28a48 <g_strcmp0@plt+0x1387c>
   28a38:	ldr	r3, [r3]
   28a3c:	add	r3, r0, r3
   28a40:	str	r3, [r0, #20]
   28a44:	bx	lr
   28a48:	andeq	ip, r4, ip, asr #7
   28a4c:	ldr	r3, [pc, #12]	; 28a60 <g_strcmp0@plt+0x13894>
   28a50:	ldr	r3, [r3, #4]
   28a54:	add	r3, r0, r3
   28a58:	str	r3, [r0, #12]
   28a5c:	bx	lr
   28a60:	andeq	ip, r4, ip, asr #7
   28a64:	push	{r4, lr}
   28a68:	mov	r4, r0
   28a6c:	bl	14f8c <g_type_class_peek_parent@plt>
   28a70:	ldr	r3, [pc, #12]	; 28a84 <g_strcmp0@plt+0x138b8>
   28a74:	ldr	r2, [pc, #12]	; 28a88 <g_strcmp0@plt+0x138bc>
   28a78:	str	r2, [r4, #24]
   28a7c:	str	r0, [r3, #8]
   28a80:	pop	{r4, pc}
   28a84:	andeq	ip, r4, ip, asr #7
   28a88:	muleq	r2, r4, sl
   28a8c:	b	14f8c <g_type_class_peek_parent@plt>
   28a90:	b	14f8c <g_type_class_peek_parent@plt>
   28a94:	push	{r4, lr}
   28a98:	mov	r4, r0
   28a9c:	ldr	r0, [r0, #16]
   28aa0:	bl	14bd8 <g_free@plt>
   28aa4:	ldr	r3, [pc, #24]	; 28ac4 <g_strcmp0@plt+0x138f8>
   28aa8:	mov	r2, #0
   28aac:	str	r2, [r4, #16]
   28ab0:	ldr	r3, [r3, #8]
   28ab4:	mov	r0, r4
   28ab8:	pop	{r4, lr}
   28abc:	ldr	r3, [r3, #24]
   28ac0:	bx	r3
   28ac4:	andeq	ip, r4, ip, asr #7
   28ac8:	ldr	r3, [r0, #20]
   28acc:	push	{r4, lr}
   28ad0:	mov	r4, r0
   28ad4:	ldr	r0, [r3]
   28ad8:	bl	14bd8 <g_free@plt>
   28adc:	ldr	r3, [pc, #28]	; 28b00 <g_strcmp0@plt+0x13934>
   28ae0:	ldr	r2, [r4, #20]
   28ae4:	mov	r1, #0
   28ae8:	ldr	r3, [r3, #12]
   28aec:	mov	r0, r4
   28af0:	str	r1, [r2]
   28af4:	ldr	r3, [r3, #24]
   28af8:	pop	{r4, lr}
   28afc:	bx	r3
   28b00:	andeq	ip, r4, ip, asr #7
   28b04:	ldr	r3, [r0, #12]
   28b08:	push	{r4, lr}
   28b0c:	mov	r4, r0
   28b10:	ldr	r0, [r3]
   28b14:	bl	14bd8 <g_free@plt>
   28b18:	ldr	r3, [pc, #28]	; 28b3c <g_strcmp0@plt+0x13970>
   28b1c:	ldr	r2, [r4, #12]
   28b20:	mov	r1, #0
   28b24:	ldr	r3, [r3, #16]
   28b28:	mov	r0, r4
   28b2c:	str	r1, [r2]
   28b30:	ldr	r3, [r3, #24]
   28b34:	pop	{r4, lr}
   28b38:	bx	r3
   28b3c:	andeq	ip, r4, ip, asr #7
   28b40:	push	{r4, lr}
   28b44:	mov	r4, r0
   28b48:	bl	14f8c <g_type_class_peek_parent@plt>
   28b4c:	ldr	r3, [pc, #24]	; 28b6c <g_strcmp0@plt+0x139a0>
   28b50:	mov	r1, r3
   28b54:	str	r0, [r3, #12]
   28b58:	mov	r0, r4
   28b5c:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   28b60:	ldr	r3, [pc, #8]	; 28b70 <g_strcmp0@plt+0x139a4>
   28b64:	str	r3, [r4, #24]
   28b68:	pop	{r4, pc}
   28b6c:	andeq	ip, r4, ip, asr #7
   28b70:	andeq	r8, r2, r8, asr #21
   28b74:	push	{r4, lr}
   28b78:	mov	r4, r0
   28b7c:	bl	14f8c <g_type_class_peek_parent@plt>
   28b80:	ldr	r3, [pc, #24]	; 28ba0 <g_strcmp0@plt+0x139d4>
   28b84:	add	r1, r3, #4
   28b88:	str	r0, [r3, #16]
   28b8c:	mov	r0, r4
   28b90:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   28b94:	ldr	r3, [pc, #8]	; 28ba4 <g_strcmp0@plt+0x139d8>
   28b98:	str	r3, [r4, #24]
   28b9c:	pop	{r4, pc}
   28ba0:	andeq	ip, r4, ip, asr #7
   28ba4:	andeq	r8, r2, r4, lsl #22
   28ba8:	bx	lr
   28bac:	bx	lr
   28bb0:	mov	r1, #0
   28bb4:	b	143d4 <g_object_new@plt>
   28bb8:	push	{r4, r5, r6, lr}
   28bbc:	mov	r6, r0
   28bc0:	ldr	r0, [r0, #16]
   28bc4:	ldr	r5, [pc, #204]	; 28c98 <g_strcmp0@plt+0x13acc>
   28bc8:	cmp	r0, #0
   28bcc:	beq	28c4c <g_strcmp0@plt+0x13a80>
   28bd0:	bl	14bcc <g_quark_from_string@plt>
   28bd4:	mov	r4, r0
   28bd8:	ldr	r0, [r5, #20]
   28bdc:	cmp	r0, #0
   28be0:	beq	28c34 <g_strcmp0@plt+0x13a68>
   28be4:	cmp	r0, r4
   28be8:	popeq	{r4, r5, r6, pc}
   28bec:	ldr	r0, [r5, #24]
   28bf0:	cmp	r0, #0
   28bf4:	beq	28c68 <g_strcmp0@plt+0x13a9c>
   28bf8:	cmp	r0, r4
   28bfc:	popeq	{r4, r5, r6, pc}
   28c00:	ldr	r0, [r5, #28]
   28c04:	cmp	r0, #0
   28c08:	beq	28c80 <g_strcmp0@plt+0x13ab4>
   28c0c:	cmp	r0, r4
   28c10:	popeq	{r4, r5, r6, pc}
   28c14:	ldr	r3, [r6, #16]
   28c18:	mov	r0, #0
   28c1c:	ldr	r2, [pc, #120]	; 28c9c <g_strcmp0@plt+0x13ad0>
   28c20:	mov	r1, #32
   28c24:	bl	14668 <g_log@plt>
   28c28:	ldr	r0, [r6, #16]
   28c2c:	pop	{r4, r5, r6, lr}
   28c30:	b	29704 <g_strcmp0@plt+0x14538>
   28c34:	mov	r0, #0
   28c38:	bl	14d64 <g_quark_from_static_string@plt>
   28c3c:	cmp	r0, r4
   28c40:	str	r0, [r5, #20]
   28c44:	bne	28bec <g_strcmp0@plt+0x13a20>
   28c48:	pop	{r4, r5, r6, pc}
   28c4c:	ldr	r4, [r5, #20]
   28c50:	cmp	r4, #0
   28c54:	beq	28c34 <g_strcmp0@plt+0x13a68>
   28c58:	ldr	r4, [r5, #24]
   28c5c:	cmp	r4, #0
   28c60:	movne	r4, r0
   28c64:	bne	28c00 <g_strcmp0@plt+0x13a34>
   28c68:	ldr	r0, [pc, #48]	; 28ca0 <g_strcmp0@plt+0x13ad4>
   28c6c:	bl	14d64 <g_quark_from_static_string@plt>
   28c70:	cmp	r0, r4
   28c74:	str	r0, [r5, #24]
   28c78:	bne	28c00 <g_strcmp0@plt+0x13a34>
   28c7c:	pop	{r4, r5, r6, pc}
   28c80:	ldr	r0, [pc, #28]	; 28ca4 <g_strcmp0@plt+0x13ad8>
   28c84:	bl	14d64 <g_quark_from_static_string@plt>
   28c88:	cmp	r0, r4
   28c8c:	str	r0, [r5, #28]
   28c90:	popeq	{r4, r5, r6, pc}
   28c94:	b	28c14 <g_strcmp0@plt+0x13a48>
   28c98:	andeq	ip, r4, ip, asr #7
   28c9c:	andeq	r9, r3, r8, lsr r8
   28ca0:	andeq	sl, r3, ip, ror #18
   28ca4:	andeq	r5, r3, ip, lsr #4
   28ca8:	push	{r4, r5, r6, lr}
   28cac:	mcr	15, 0, r0, cr7, cr10, {5}
   28cb0:	ldr	r4, [pc, #76]	; 28d04 <g_strcmp0@plt+0x13b38>
   28cb4:	ldr	r5, [r4, #32]
   28cb8:	mcr	15, 0, r0, cr7, cr10, {5}
   28cbc:	cmp	r5, #0
   28cc0:	beq	28ccc <g_strcmp0@plt+0x13b00>
   28cc4:	ldr	r0, [r4, #32]
   28cc8:	pop	{r4, r5, r6, pc}
   28ccc:	add	r0, r4, #32
   28cd0:	bl	14a28 <g_once_init_enter@plt>
   28cd4:	cmp	r0, #0
   28cd8:	beq	28cc4 <g_strcmp0@plt+0x13af8>
   28cdc:	mov	r3, r5
   28ce0:	ldr	r2, [pc, #32]	; 28d08 <g_strcmp0@plt+0x13b3c>
   28ce4:	ldr	r1, [pc, #32]	; 28d0c <g_strcmp0@plt+0x13b40>
   28ce8:	mov	r0, #80	; 0x50
   28cec:	bl	14428 <g_type_register_static@plt>
   28cf0:	mov	r1, r0
   28cf4:	add	r0, r4, #32
   28cf8:	bl	14ed8 <g_once_init_leave@plt>
   28cfc:	ldr	r0, [r4, #32]
   28d00:	pop	{r4, r5, r6, pc}
   28d04:	andeq	ip, r4, ip, asr #7
   28d08:	andeq	r9, r3, r4, lsl #15
   28d0c:	andeq	r9, r3, r8, ror #16
   28d10:	push	{r4, lr}
   28d14:	bl	28ca8 <g_strcmp0@plt+0x13adc>
   28d18:	mov	r1, #0
   28d1c:	pop	{r4, lr}
   28d20:	b	143d4 <g_object_new@plt>
   28d24:	push	{r4, r5, r6, r7, r8, lr}
   28d28:	mov	r6, r0
   28d2c:	ldr	r0, [pc, #612]	; 28f98 <g_strcmp0@plt+0x13dcc>
   28d30:	mov	r5, r1
   28d34:	bl	145fc <g_string_new@plt>
   28d38:	ldr	r1, [pc, #604]	; 28f9c <g_strcmp0@plt+0x13dd0>
   28d3c:	mov	r4, r0
   28d40:	bl	15064 <g_string_append@plt>
   28d44:	mov	r3, #0
   28d48:	ldr	r2, [pc, #592]	; 28fa0 <g_strcmp0@plt+0x13dd4>
   28d4c:	ldr	r1, [pc, #592]	; 28fa4 <g_strcmp0@plt+0x13dd8>
   28d50:	mov	r0, r5
   28d54:	bl	2a300 <g_strcmp0@plt+0x15134>
   28d58:	mov	r7, r0
   28d5c:	bl	14bd8 <g_free@plt>
   28d60:	cmp	r7, #0
   28d64:	beq	28dac <g_strcmp0@plt+0x13be0>
   28d68:	ldr	r1, [pc, #568]	; 28fa8 <g_strcmp0@plt+0x13ddc>
   28d6c:	mov	r0, r4
   28d70:	bl	15064 <g_string_append@plt>
   28d74:	mov	r3, #0
   28d78:	ldr	r2, [pc, #544]	; 28fa0 <g_strcmp0@plt+0x13dd4>
   28d7c:	ldr	r1, [pc, #544]	; 28fa4 <g_strcmp0@plt+0x13dd8>
   28d80:	mov	r0, r5
   28d84:	bl	2a300 <g_strcmp0@plt+0x15134>
   28d88:	mov	r1, r0
   28d8c:	mov	r7, r0
   28d90:	mov	r0, r4
   28d94:	bl	15064 <g_string_append@plt>
   28d98:	mov	r0, r7
   28d9c:	bl	14bd8 <g_free@plt>
   28da0:	ldr	r1, [pc, #516]	; 28fac <g_strcmp0@plt+0x13de0>
   28da4:	mov	r0, r4
   28da8:	bl	15064 <g_string_append@plt>
   28dac:	mov	r3, #0
   28db0:	ldr	r2, [pc, #504]	; 28fb0 <g_strcmp0@plt+0x13de4>
   28db4:	ldr	r1, [pc, #488]	; 28fa4 <g_strcmp0@plt+0x13dd8>
   28db8:	mov	r0, r5
   28dbc:	bl	2a300 <g_strcmp0@plt+0x15134>
   28dc0:	mov	r7, r0
   28dc4:	bl	14bd8 <g_free@plt>
   28dc8:	cmp	r7, #0
   28dcc:	beq	28e14 <g_strcmp0@plt+0x13c48>
   28dd0:	ldr	r1, [pc, #476]	; 28fb4 <g_strcmp0@plt+0x13de8>
   28dd4:	mov	r0, r4
   28dd8:	bl	15064 <g_string_append@plt>
   28ddc:	mov	r3, #0
   28de0:	ldr	r2, [pc, #456]	; 28fb0 <g_strcmp0@plt+0x13de4>
   28de4:	ldr	r1, [pc, #440]	; 28fa4 <g_strcmp0@plt+0x13dd8>
   28de8:	mov	r0, r5
   28dec:	bl	2a300 <g_strcmp0@plt+0x15134>
   28df0:	mov	r1, r0
   28df4:	mov	r7, r0
   28df8:	mov	r0, r4
   28dfc:	bl	15064 <g_string_append@plt>
   28e00:	mov	r0, r7
   28e04:	bl	14bd8 <g_free@plt>
   28e08:	ldr	r1, [pc, #412]	; 28fac <g_strcmp0@plt+0x13de0>
   28e0c:	mov	r0, r4
   28e10:	bl	15064 <g_string_append@plt>
   28e14:	mov	r3, #0
   28e18:	ldr	r2, [pc, #408]	; 28fb8 <g_strcmp0@plt+0x13dec>
   28e1c:	ldr	r1, [pc, #384]	; 28fa4 <g_strcmp0@plt+0x13dd8>
   28e20:	mov	r0, r5
   28e24:	bl	2a300 <g_strcmp0@plt+0x15134>
   28e28:	mov	r7, r0
   28e2c:	bl	14bd8 <g_free@plt>
   28e30:	cmp	r7, #0
   28e34:	beq	28eb0 <g_strcmp0@plt+0x13ce4>
   28e38:	ldr	r1, [pc, #380]	; 28fbc <g_strcmp0@plt+0x13df0>
   28e3c:	mov	r0, r4
   28e40:	bl	15064 <g_string_append@plt>
   28e44:	mov	r3, #0
   28e48:	ldr	r2, [pc, #360]	; 28fb8 <g_strcmp0@plt+0x13dec>
   28e4c:	ldr	r1, [pc, #336]	; 28fa4 <g_strcmp0@plt+0x13dd8>
   28e50:	mov	r0, r5
   28e54:	bl	2a300 <g_strcmp0@plt+0x15134>
   28e58:	ldr	r2, [pc, #352]	; 28fc0 <g_strcmp0@plt+0x13df4>
   28e5c:	mov	r1, #32
   28e60:	mov	r3, r0
   28e64:	mov	r7, r0
   28e68:	mov	r0, #0
   28e6c:	bl	14668 <g_log@plt>
   28e70:	mov	r0, r7
   28e74:	bl	14bd8 <g_free@plt>
   28e78:	mov	r3, #0
   28e7c:	ldr	r2, [pc, #308]	; 28fb8 <g_strcmp0@plt+0x13dec>
   28e80:	ldr	r1, [pc, #284]	; 28fa4 <g_strcmp0@plt+0x13dd8>
   28e84:	mov	r0, r5
   28e88:	bl	2a300 <g_strcmp0@plt+0x15134>
   28e8c:	mov	r1, r0
   28e90:	mov	r7, r0
   28e94:	mov	r0, r4
   28e98:	bl	15064 <g_string_append@plt>
   28e9c:	mov	r0, r7
   28ea0:	bl	14bd8 <g_free@plt>
   28ea4:	ldr	r1, [pc, #256]	; 28fac <g_strcmp0@plt+0x13de0>
   28ea8:	mov	r0, r4
   28eac:	bl	15064 <g_string_append@plt>
   28eb0:	mov	r3, #0
   28eb4:	ldr	r2, [pc, #264]	; 28fc4 <g_strcmp0@plt+0x13df8>
   28eb8:	ldr	r1, [pc, #228]	; 28fa4 <g_strcmp0@plt+0x13dd8>
   28ebc:	mov	r0, r5
   28ec0:	bl	2a300 <g_strcmp0@plt+0x15134>
   28ec4:	mov	r7, r0
   28ec8:	bl	14bd8 <g_free@plt>
   28ecc:	cmp	r7, #0
   28ed0:	beq	28f4c <g_strcmp0@plt+0x13d80>
   28ed4:	ldr	r1, [pc, #236]	; 28fc8 <g_strcmp0@plt+0x13dfc>
   28ed8:	mov	r0, r4
   28edc:	bl	15064 <g_string_append@plt>
   28ee0:	mov	r3, #0
   28ee4:	ldr	r2, [pc, #216]	; 28fc4 <g_strcmp0@plt+0x13df8>
   28ee8:	ldr	r1, [pc, #180]	; 28fa4 <g_strcmp0@plt+0x13dd8>
   28eec:	mov	r0, r5
   28ef0:	bl	2a300 <g_strcmp0@plt+0x15134>
   28ef4:	ldr	r2, [pc, #208]	; 28fcc <g_strcmp0@plt+0x13e00>
   28ef8:	mov	r1, #32
   28efc:	mov	r3, r0
   28f00:	mov	r7, r0
   28f04:	mov	r0, #0
   28f08:	bl	14668 <g_log@plt>
   28f0c:	mov	r0, r7
   28f10:	bl	14bd8 <g_free@plt>
   28f14:	mov	r3, #0
   28f18:	ldr	r2, [pc, #164]	; 28fc4 <g_strcmp0@plt+0x13df8>
   28f1c:	mov	r0, r5
   28f20:	ldr	r1, [pc, #124]	; 28fa4 <g_strcmp0@plt+0x13dd8>
   28f24:	bl	2a300 <g_strcmp0@plt+0x15134>
   28f28:	mov	r1, r0
   28f2c:	mov	r5, r0
   28f30:	mov	r0, r4
   28f34:	bl	15064 <g_string_append@plt>
   28f38:	mov	r0, r5
   28f3c:	bl	14bd8 <g_free@plt>
   28f40:	ldr	r1, [pc, #100]	; 28fac <g_strcmp0@plt+0x13de0>
   28f44:	mov	r0, r4
   28f48:	bl	15064 <g_string_append@plt>
   28f4c:	ldr	r0, [r4]
   28f50:	bl	147e8 <g_strdup@plt>
   28f54:	mov	r5, r0
   28f58:	ldr	r0, [r6, #16]
   28f5c:	bl	14bd8 <g_free@plt>
   28f60:	mov	r3, r5
   28f64:	ldr	r2, [pc, #100]	; 28fd0 <g_strcmp0@plt+0x13e04>
   28f68:	str	r5, [r6, #16]
   28f6c:	mov	r1, #32
   28f70:	mov	r0, #0
   28f74:	bl	14668 <g_log@plt>
   28f78:	ldr	r0, [r6, #16]
   28f7c:	bl	147e8 <g_strdup@plt>
   28f80:	mov	r1, #1
   28f84:	mov	r5, r0
   28f88:	mov	r0, r4
   28f8c:	bl	14e0c <g_string_free@plt>
   28f90:	mov	r0, r5
   28f94:	pop	{r4, r5, r6, r7, r8, pc}
   28f98:	andeq	sl, r3, ip, ror #18
   28f9c:	andeq	r9, r3, r8, ror r8
   28fa0:	andeq	r9, r3, r4, lsl #17
   28fa4:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   28fa8:	andeq	r9, r3, ip, lsl #17
   28fac:	andeq	r5, r3, ip, lsr #4
   28fb0:	muleq	r3, r4, r2
   28fb4:	muleq	r3, r4, r8
   28fb8:	andeq	r9, r3, r0, lsr #17
   28fbc:	andeq	r9, r3, r8, lsr #17
   28fc0:			; <UNDEFINED> instruction: 0x000398b4
   28fc4:	andeq	r9, r3, r0, ror #17
   28fc8:	andeq	r9, r3, r8, ror #17
   28fcc:	strdeq	r9, [r3], -r4
   28fd0:	andeq	r9, r3, r0, lsr #18
   28fd4:	push	{r4, r5, r6, r7, r8, lr}
   28fd8:	mov	r5, r1
   28fdc:	mov	r1, #0
   28fe0:	bl	143d4 <g_object_new@plt>
   28fe4:	mov	r3, #0
   28fe8:	ldr	r2, [pc, #88]	; 29048 <g_strcmp0@plt+0x13e7c>
   28fec:	ldr	r1, [pc, #88]	; 2904c <g_strcmp0@plt+0x13e80>
   28ff0:	mov	r4, r0
   28ff4:	mov	r0, r5
   28ff8:	bl	2a300 <g_strcmp0@plt+0x15134>
   28ffc:	ldr	r1, [pc, #76]	; 29050 <g_strcmp0@plt+0x13e84>
   29000:	mov	r7, r0
   29004:	bl	151cc <g_strcmp0@plt>
   29008:	mov	r6, r0
   2900c:	mov	r0, r7
   29010:	bl	14bd8 <g_free@plt>
   29014:	cmp	r6, #0
   29018:	beq	29024 <g_strcmp0@plt+0x13e58>
   2901c:	mov	r0, r4
   29020:	pop	{r4, r5, r6, r7, r8, pc}
   29024:	mov	r1, r5
   29028:	mov	r0, r4
   2902c:	bl	28d24 <g_strcmp0@plt+0x13b58>
   29030:	mov	r5, r0
   29034:	ldr	r0, [r4, #16]
   29038:	bl	14bd8 <g_free@plt>
   2903c:	str	r5, [r4, #16]
   29040:	mov	r0, r4
   29044:	pop	{r4, r5, r6, r7, r8, pc}
   29048:	andeq	r5, r3, ip, lsr #25
   2904c:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   29050:	andeq	r9, r3, ip, asr r9
   29054:	push	{r4, r5, r6, lr}
   29058:	mcr	15, 0, r0, cr7, cr10, {5}
   2905c:	ldr	r4, [pc, #76]	; 290b0 <g_strcmp0@plt+0x13ee4>
   29060:	ldr	r5, [r4, #36]	; 0x24
   29064:	mcr	15, 0, r0, cr7, cr10, {5}
   29068:	cmp	r5, #0
   2906c:	beq	29078 <g_strcmp0@plt+0x13eac>
   29070:	ldr	r0, [r4, #36]	; 0x24
   29074:	pop	{r4, r5, r6, pc}
   29078:	add	r0, r4, #36	; 0x24
   2907c:	bl	14a28 <g_once_init_enter@plt>
   29080:	cmp	r0, #0
   29084:	beq	29070 <g_strcmp0@plt+0x13ea4>
   29088:	bl	28ca8 <g_strcmp0@plt+0x13adc>
   2908c:	mov	r3, r5
   29090:	ldr	r2, [pc, #28]	; 290b4 <g_strcmp0@plt+0x13ee8>
   29094:	ldr	r1, [pc, #28]	; 290b8 <g_strcmp0@plt+0x13eec>
   29098:	bl	14428 <g_type_register_static@plt>
   2909c:	mov	r1, r0
   290a0:	add	r0, r4, #36	; 0x24
   290a4:	bl	14ed8 <g_once_init_leave@plt>
   290a8:	ldr	r0, [r4, #36]	; 0x24
   290ac:	pop	{r4, r5, r6, pc}
   290b0:	andeq	ip, r4, ip, asr #7
   290b4:	andeq	r9, r3, r8, lsr #15
   290b8:	andeq	r9, r3, r4, ror #18
   290bc:	push	{r4, lr}
   290c0:	mov	r4, r0
   290c4:	bl	29054 <g_strcmp0@plt+0x13e88>
   290c8:	mov	r1, r4
   290cc:	pop	{r4, lr}
   290d0:	b	28fd4 <g_strcmp0@plt+0x13e08>
   290d4:	push	{r4, r5, r6, r7, r8, lr}
   290d8:	mov	r4, r1
   290dc:	mov	r1, #0
   290e0:	bl	143d4 <g_object_new@plt>
   290e4:	ldr	r3, [pc, #140]	; 29178 <g_strcmp0@plt+0x13fac>
   290e8:	ldr	r2, [pc, #140]	; 2917c <g_strcmp0@plt+0x13fb0>
   290ec:	ldr	r1, [pc, #140]	; 29180 <g_strcmp0@plt+0x13fb4>
   290f0:	mov	r6, r0
   290f4:	mov	r0, r4
   290f8:	bl	2a300 <g_strcmp0@plt+0x15134>
   290fc:	ldr	r4, [pc, #128]	; 29184 <g_strcmp0@plt+0x13fb8>
   29100:	subs	r7, r0, #0
   29104:	beq	29150 <g_strcmp0@plt+0x13f84>
   29108:	bl	14bcc <g_quark_from_string@plt>
   2910c:	mov	r5, r0
   29110:	mov	r0, r7
   29114:	bl	14bd8 <g_free@plt>
   29118:	ldr	r0, [r4, #40]	; 0x28
   2911c:	cmp	r0, #0
   29120:	beq	29160 <g_strcmp0@plt+0x13f94>
   29124:	cmp	r0, r5
   29128:	beq	29134 <g_strcmp0@plt+0x13f68>
   2912c:	mov	r0, r6
   29130:	pop	{r4, r5, r6, r7, r8, pc}
   29134:	ldr	r2, [pc, #76]	; 29188 <g_strcmp0@plt+0x13fbc>
   29138:	mov	r1, #32
   2913c:	mov	r0, #0
   29140:	bl	14668 <g_log@plt>
   29144:	bl	34178 <g_strcmp0@plt+0x1efac>
   29148:	mov	r0, r6
   2914c:	pop	{r4, r5, r6, r7, r8, pc}
   29150:	bl	14bd8 <g_free@plt>
   29154:	ldr	r5, [r4, #40]	; 0x28
   29158:	cmp	r5, #0
   2915c:	bne	2912c <g_strcmp0@plt+0x13f60>
   29160:	ldr	r0, [pc, #36]	; 2918c <g_strcmp0@plt+0x13fc0>
   29164:	bl	14d64 <g_quark_from_static_string@plt>
   29168:	cmp	r0, r5
   2916c:	str	r0, [r4, #40]	; 0x28
   29170:	bne	2912c <g_strcmp0@plt+0x13f60>
   29174:	b	29134 <g_strcmp0@plt+0x13f68>
   29178:	ldrdeq	r4, [r3], -ip
   2917c:	andeq	r8, r3, r4, lsr #20
   29180:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   29184:	andeq	ip, r4, ip, asr #7
   29188:	andeq	r9, r3, r8, lsl #19
   2918c:	andeq	r9, r3, ip, ror r9
   29190:	b	341d4 <g_strcmp0@plt+0x1f008>
   29194:	push	{r4, r5, r6, lr}
   29198:	mcr	15, 0, r0, cr7, cr10, {5}
   2919c:	ldr	r4, [pc, #76]	; 291f0 <g_strcmp0@plt+0x14024>
   291a0:	ldr	r5, [r4, #44]	; 0x2c
   291a4:	mcr	15, 0, r0, cr7, cr10, {5}
   291a8:	cmp	r5, #0
   291ac:	beq	291b8 <g_strcmp0@plt+0x13fec>
   291b0:	ldr	r0, [r4, #44]	; 0x2c
   291b4:	pop	{r4, r5, r6, pc}
   291b8:	add	r0, r4, #44	; 0x2c
   291bc:	bl	14a28 <g_once_init_enter@plt>
   291c0:	cmp	r0, #0
   291c4:	beq	291b0 <g_strcmp0@plt+0x13fe4>
   291c8:	bl	28ca8 <g_strcmp0@plt+0x13adc>
   291cc:	mov	r3, r5
   291d0:	ldr	r2, [pc, #28]	; 291f4 <g_strcmp0@plt+0x14028>
   291d4:	ldr	r1, [pc, #28]	; 291f8 <g_strcmp0@plt+0x1402c>
   291d8:	bl	14428 <g_type_register_static@plt>
   291dc:	mov	r1, r0
   291e0:	add	r0, r4, #44	; 0x2c
   291e4:	bl	14ed8 <g_once_init_leave@plt>
   291e8:	ldr	r0, [r4, #44]	; 0x2c
   291ec:	pop	{r4, r5, r6, pc}
   291f0:	andeq	ip, r4, ip, asr #7
   291f4:	andeq	r9, r3, ip, asr #15
   291f8:			; <UNDEFINED> instruction: 0x000399b4
   291fc:	push	{r4, lr}
   29200:	mov	r4, r0
   29204:	bl	29194 <g_strcmp0@plt+0x13fc8>
   29208:	mov	r1, r4
   2920c:	pop	{r4, lr}
   29210:	b	290d4 <g_strcmp0@plt+0x13f08>
   29214:	push	{r4, r5, r6, lr}
   29218:	mov	r5, r1
   2921c:	mov	r1, #0
   29220:	bl	143d4 <g_object_new@plt>
   29224:	mov	r3, #0
   29228:	ldr	r2, [pc, #92]	; 2928c <g_strcmp0@plt+0x140c0>
   2922c:	ldr	r1, [pc, #92]	; 29290 <g_strcmp0@plt+0x140c4>
   29230:	mov	r4, r0
   29234:	mov	r0, r5
   29238:	bl	2a300 <g_strcmp0@plt+0x15134>
   2923c:	ldr	r1, [pc, #80]	; 29294 <g_strcmp0@plt+0x140c8>
   29240:	mov	r6, r0
   29244:	bl	151cc <g_strcmp0@plt>
   29248:	mov	r5, r0
   2924c:	mov	r0, r6
   29250:	bl	14bd8 <g_free@plt>
   29254:	cmp	r5, #0
   29258:	beq	29264 <g_strcmp0@plt+0x14098>
   2925c:	mov	r0, r4
   29260:	pop	{r4, r5, r6, pc}
   29264:	ldr	r0, [pc, #44]	; 29298 <g_strcmp0@plt+0x140cc>
   29268:	bl	147e8 <g_strdup@plt>
   2926c:	ldr	r3, [r4, #20]
   29270:	mov	r5, r0
   29274:	ldr	r0, [r3]
   29278:	bl	14bd8 <g_free@plt>
   2927c:	ldr	r3, [r4, #20]
   29280:	mov	r0, r4
   29284:	str	r5, [r3]
   29288:	pop	{r4, r5, r6, pc}
   2928c:	andeq	r4, r3, r4, ror #18
   29290:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   29294:	andeq	r4, r3, ip, ror r8
   29298:	ldrdeq	r9, [r3], -r0
   2929c:	ldr	r3, [r0, #20]
   292a0:	ldr	r0, [r3]
   292a4:	b	29704 <g_strcmp0@plt+0x14538>
   292a8:	push	{r4, r5, r6, lr}
   292ac:	mcr	15, 0, r0, cr7, cr10, {5}
   292b0:	ldr	r4, [pc, #96]	; 29318 <g_strcmp0@plt+0x1414c>
   292b4:	ldr	r5, [r4, #48]	; 0x30
   292b8:	mcr	15, 0, r0, cr7, cr10, {5}
   292bc:	cmp	r5, #0
   292c0:	beq	292cc <g_strcmp0@plt+0x14100>
   292c4:	ldr	r0, [r4, #48]	; 0x30
   292c8:	pop	{r4, r5, r6, pc}
   292cc:	add	r0, r4, #48	; 0x30
   292d0:	bl	14a28 <g_once_init_enter@plt>
   292d4:	cmp	r0, #0
   292d8:	beq	292c4 <g_strcmp0@plt+0x140f8>
   292dc:	bl	28ca8 <g_strcmp0@plt+0x13adc>
   292e0:	mov	r3, r5
   292e4:	ldr	r2, [pc, #48]	; 2931c <g_strcmp0@plt+0x14150>
   292e8:	ldr	r1, [pc, #48]	; 29320 <g_strcmp0@plt+0x14154>
   292ec:	bl	14428 <g_type_register_static@plt>
   292f0:	mov	r1, #4
   292f4:	mov	r5, r0
   292f8:	bl	14c08 <g_type_add_instance_private@plt>
   292fc:	mov	r1, r5
   29300:	mov	r3, r0
   29304:	mov	r0, r4
   29308:	str	r3, [r0], #48	; 0x30
   2930c:	bl	14ed8 <g_once_init_leave@plt>
   29310:	ldr	r0, [r4, #48]	; 0x30
   29314:	pop	{r4, r5, r6, pc}
   29318:	andeq	ip, r4, ip, asr #7
   2931c:	strdeq	r9, [r3], -r0
   29320:	ldrdeq	r9, [r3], -ip
   29324:	push	{r4, lr}
   29328:	mov	r4, r0
   2932c:	bl	292a8 <g_strcmp0@plt+0x140dc>
   29330:	mov	r1, r4
   29334:	pop	{r4, lr}
   29338:	b	29214 <g_strcmp0@plt+0x14048>
   2933c:	mov	r1, #0
   29340:	b	143d4 <g_object_new@plt>
   29344:	ldr	r2, [pc, #432]	; 294fc <g_strcmp0@plt+0x14330>
   29348:	push	{r4, r5, r6, r7, r8, lr}
   2934c:	mov	r7, r0
   29350:	ldr	r3, [pc, #424]	; 29500 <g_strcmp0@plt+0x14334>
   29354:	ldr	r0, [r2]
   29358:	ldr	r1, [pc, #420]	; 29504 <g_strcmp0@plt+0x14338>
   2935c:	ldr	r2, [pc, #420]	; 29508 <g_strcmp0@plt+0x1433c>
   29360:	bl	2a300 <g_strcmp0@plt+0x15134>
   29364:	ldr	r3, [r7, #12]
   29368:	ldr	r4, [pc, #412]	; 2950c <g_strcmp0@plt+0x14340>
   2936c:	mov	r6, r0
   29370:	ldr	r0, [r3]
   29374:	bl	14bd8 <g_free@plt>
   29378:	ldr	r3, [r7, #12]
   2937c:	cmp	r6, #0
   29380:	str	r6, [r3]
   29384:	beq	29434 <g_strcmp0@plt+0x14268>
   29388:	mov	r0, r6
   2938c:	bl	14bcc <g_quark_from_string@plt>
   29390:	mov	r5, r0
   29394:	ldr	r0, [r4, #52]	; 0x34
   29398:	cmp	r0, #0
   2939c:	beq	2941c <g_strcmp0@plt+0x14250>
   293a0:	cmp	r0, r5
   293a4:	popeq	{r4, r5, r6, r7, r8, pc}
   293a8:	ldr	r0, [r4, #56]	; 0x38
   293ac:	cmp	r0, #0
   293b0:	beq	29450 <g_strcmp0@plt+0x14284>
   293b4:	cmp	r0, r5
   293b8:	popeq	{r4, r5, r6, r7, r8, pc}
   293bc:	ldr	r0, [r4, #60]	; 0x3c
   293c0:	cmp	r0, #0
   293c4:	beq	29488 <g_strcmp0@plt+0x142bc>
   293c8:	cmp	r0, r5
   293cc:	popeq	{r4, r5, r6, r7, r8, pc}
   293d0:	ldr	r0, [r4, #64]	; 0x40
   293d4:	cmp	r0, #0
   293d8:	beq	29468 <g_strcmp0@plt+0x1429c>
   293dc:	cmp	r0, r5
   293e0:	beq	294bc <g_strcmp0@plt+0x142f0>
   293e4:	ldr	r0, [r4, #68]	; 0x44
   293e8:	cmp	r0, #0
   293ec:	beq	29478 <g_strcmp0@plt+0x142ac>
   293f0:	cmp	r0, r5
   293f4:	beq	294f0 <g_strcmp0@plt+0x14324>
   293f8:	ldr	r0, [r4, #72]	; 0x48
   293fc:	cmp	r0, #0
   29400:	beq	294ac <g_strcmp0@plt+0x142e0>
   29404:	cmp	r0, r5
   29408:	beq	294a0 <g_strcmp0@plt+0x142d4>
   2940c:	ldr	r3, [r7, #12]
   29410:	pop	{r4, r5, r6, r7, r8, lr}
   29414:	ldr	r0, [r3]
   29418:	b	29704 <g_strcmp0@plt+0x14538>
   2941c:	mov	r0, #0
   29420:	bl	14d64 <g_quark_from_static_string@plt>
   29424:	cmp	r0, r5
   29428:	str	r0, [r4, #52]	; 0x34
   2942c:	bne	293a8 <g_strcmp0@plt+0x141dc>
   29430:	pop	{r4, r5, r6, r7, r8, pc}
   29434:	ldr	r5, [r4, #52]	; 0x34
   29438:	cmp	r5, #0
   2943c:	beq	2941c <g_strcmp0@plt+0x14250>
   29440:	ldr	r5, [r4, #56]	; 0x38
   29444:	cmp	r5, #0
   29448:	movne	r5, r6
   2944c:	bne	293bc <g_strcmp0@plt+0x141f0>
   29450:	ldr	r0, [pc, #184]	; 29510 <g_strcmp0@plt+0x14344>
   29454:	bl	14d64 <g_quark_from_static_string@plt>
   29458:	cmp	r0, r5
   2945c:	str	r0, [r4, #56]	; 0x38
   29460:	bne	293bc <g_strcmp0@plt+0x141f0>
   29464:	pop	{r4, r5, r6, r7, r8, pc}
   29468:	ldr	r0, [pc, #164]	; 29514 <g_strcmp0@plt+0x14348>
   2946c:	bl	14d64 <g_quark_from_static_string@plt>
   29470:	str	r0, [r4, #64]	; 0x40
   29474:	b	293dc <g_strcmp0@plt+0x14210>
   29478:	ldr	r0, [pc, #152]	; 29518 <g_strcmp0@plt+0x1434c>
   2947c:	bl	14d64 <g_quark_from_static_string@plt>
   29480:	str	r0, [r4, #68]	; 0x44
   29484:	b	293f0 <g_strcmp0@plt+0x14224>
   29488:	ldr	r0, [pc, #140]	; 2951c <g_strcmp0@plt+0x14350>
   2948c:	bl	14d64 <g_quark_from_static_string@plt>
   29490:	cmp	r0, r5
   29494:	str	r0, [r4, #60]	; 0x3c
   29498:	bne	293d0 <g_strcmp0@plt+0x14204>
   2949c:	pop	{r4, r5, r6, r7, r8, pc}
   294a0:	ldr	r0, [pc, #120]	; 29520 <g_strcmp0@plt+0x14354>
   294a4:	pop	{r4, r5, r6, r7, r8, lr}
   294a8:	b	29704 <g_strcmp0@plt+0x14538>
   294ac:	ldr	r0, [pc, #112]	; 29524 <g_strcmp0@plt+0x14358>
   294b0:	bl	14d64 <g_quark_from_static_string@plt>
   294b4:	str	r0, [r4, #72]	; 0x48
   294b8:	b	29404 <g_strcmp0@plt+0x14238>
   294bc:	ldr	r2, [pc, #100]	; 29528 <g_strcmp0@plt+0x1435c>
   294c0:	mov	r1, #32
   294c4:	mov	r0, #0
   294c8:	bl	14668 <g_log@plt>
   294cc:	ldr	r0, [pc, #88]	; 2952c <g_strcmp0@plt+0x14360>
   294d0:	bl	300ac <g_strcmp0@plt+0x1aee0>
   294d4:	mov	r4, r0
   294d8:	bl	31694 <g_strcmp0@plt+0x1c4c8>
   294dc:	cmp	r4, #0
   294e0:	popeq	{r4, r5, r6, r7, r8, pc}
   294e4:	mov	r0, r4
   294e8:	pop	{r4, r5, r6, r7, r8, lr}
   294ec:	b	14f50 <g_key_file_unref@plt>
   294f0:	ldr	r0, [pc, #56]	; 29530 <g_strcmp0@plt+0x14364>
   294f4:	pop	{r4, r5, r6, r7, r8, lr}
   294f8:	b	29704 <g_strcmp0@plt+0x14538>
   294fc:	andeq	ip, r4, r4, asr #32
   29500:	ldrdeq	r4, [r3], -ip
   29504:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   29508:	andeq	r7, r3, r4, ror #8
   2950c:	andeq	ip, r4, ip, asr #7
   29510:	andeq	sl, r3, ip, ror #18
   29514:	andeq	r4, r3, r4, ror #30
   29518:	muleq	r3, ip, r9
   2951c:	andeq	r5, r3, ip, lsr #4
   29520:	andeq	r9, r3, r8, asr sl
   29524:	andeq	r9, r3, r0, asr sl
   29528:	andeq	r9, r3, r0, lsl #20
   2952c:	andeq	r9, r3, r0, asr #4
   29530:	andeq	r9, r3, r8, lsr sl
   29534:	ldr	r2, [pc, #208]	; 2960c <g_strcmp0@plt+0x14440>
   29538:	push	{r4, r5, r6, lr}
   2953c:	mov	r4, r0
   29540:	ldr	r3, [pc, #200]	; 29610 <g_strcmp0@plt+0x14444>
   29544:	ldr	r0, [r2]
   29548:	ldr	r1, [pc, #196]	; 29614 <g_strcmp0@plt+0x14448>
   2954c:	ldr	r2, [pc, #196]	; 29618 <g_strcmp0@plt+0x1444c>
   29550:	bl	2a300 <g_strcmp0@plt+0x15134>
   29554:	ldr	r3, [r4, #12]
   29558:	ldr	r6, [pc, #188]	; 2961c <g_strcmp0@plt+0x14450>
   2955c:	mov	r5, r0
   29560:	ldr	r0, [r3]
   29564:	bl	14bd8 <g_free@plt>
   29568:	ldr	r3, [r4, #12]
   2956c:	cmp	r5, #0
   29570:	str	r5, [r3]
   29574:	beq	295e8 <g_strcmp0@plt+0x1441c>
   29578:	mov	r0, r5
   2957c:	bl	14bcc <g_quark_from_string@plt>
   29580:	mov	r5, r0
   29584:	ldr	r0, [r6, #76]	; 0x4c
   29588:	cmp	r0, #0
   2958c:	beq	295f4 <g_strcmp0@plt+0x14428>
   29590:	cmp	r0, r5
   29594:	beq	295b4 <g_strcmp0@plt+0x143e8>
   29598:	mov	r0, #0
   2959c:	ldr	r2, [pc, #124]	; 29620 <g_strcmp0@plt+0x14454>
   295a0:	mov	r1, #32
   295a4:	bl	14668 <g_log@plt>
   295a8:	mov	r0, r4
   295ac:	pop	{r4, r5, r6, lr}
   295b0:	b	29344 <g_strcmp0@plt+0x14178>
   295b4:	ldr	r2, [pc, #104]	; 29624 <g_strcmp0@plt+0x14458>
   295b8:	mov	r1, #32
   295bc:	mov	r0, #0
   295c0:	bl	14668 <g_log@plt>
   295c4:	ldr	r0, [pc, #92]	; 29628 <g_strcmp0@plt+0x1445c>
   295c8:	bl	300ac <g_strcmp0@plt+0x1aee0>
   295cc:	mov	r4, r0
   295d0:	bl	31838 <g_strcmp0@plt+0x1c66c>
   295d4:	cmp	r4, #0
   295d8:	popeq	{r4, r5, r6, pc}
   295dc:	mov	r0, r4
   295e0:	pop	{r4, r5, r6, lr}
   295e4:	b	14f50 <g_key_file_unref@plt>
   295e8:	ldr	r5, [r6, #76]	; 0x4c
   295ec:	cmp	r5, #0
   295f0:	bne	29598 <g_strcmp0@plt+0x143cc>
   295f4:	ldr	r0, [pc, #48]	; 2962c <g_strcmp0@plt+0x14460>
   295f8:	bl	14d64 <g_quark_from_static_string@plt>
   295fc:	cmp	r0, r5
   29600:	str	r0, [r6, #76]	; 0x4c
   29604:	bne	29598 <g_strcmp0@plt+0x143cc>
   29608:	b	295b4 <g_strcmp0@plt+0x143e8>
   2960c:	andeq	ip, r4, r4, asr #32
   29610:	ldrdeq	r4, [r3], -ip
   29614:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   29618:	andeq	r7, r3, r4, ror #8
   2961c:	andeq	ip, r4, ip, asr #7
   29620:	muleq	r3, r8, sl
   29624:	andeq	r9, r3, r4, ror #20
   29628:	andeq	r9, r3, r0, asr #4
   2962c:	andeq	r4, r3, r4, ror #30
   29630:	push	{r4, r5, r6, lr}
   29634:	mcr	15, 0, r0, cr7, cr10, {5}
   29638:	ldr	r4, [pc, #92]	; 2969c <g_strcmp0@plt+0x144d0>
   2963c:	ldr	r5, [r4, #80]	; 0x50
   29640:	mcr	15, 0, r0, cr7, cr10, {5}
   29644:	cmp	r5, #0
   29648:	beq	29654 <g_strcmp0@plt+0x14488>
   2964c:	ldr	r0, [r4, #80]	; 0x50
   29650:	pop	{r4, r5, r6, pc}
   29654:	add	r0, r4, #80	; 0x50
   29658:	bl	14a28 <g_once_init_enter@plt>
   2965c:	cmp	r0, #0
   29660:	beq	2964c <g_strcmp0@plt+0x14480>
   29664:	mov	r3, r5
   29668:	ldr	r2, [pc, #48]	; 296a0 <g_strcmp0@plt+0x144d4>
   2966c:	ldr	r1, [pc, #48]	; 296a4 <g_strcmp0@plt+0x144d8>
   29670:	mov	r0, #80	; 0x50
   29674:	bl	14428 <g_type_register_static@plt>
   29678:	mov	r1, #4
   2967c:	mov	r5, r0
   29680:	bl	14c08 <g_type_add_instance_private@plt>
   29684:	mov	r1, r5
   29688:	str	r0, [r4, #4]
   2968c:	add	r0, r4, #80	; 0x50
   29690:	bl	14ed8 <g_once_init_leave@plt>
   29694:	ldr	r0, [r4, #80]	; 0x50
   29698:	pop	{r4, r5, r6, pc}
   2969c:	andeq	ip, r4, ip, asr #7
   296a0:	andeq	r9, r3, r4, lsl r8
   296a4:	andeq	r9, r3, ip, asr #21
   296a8:	push	{r4, lr}
   296ac:	bl	29630 <g_strcmp0@plt+0x14464>
   296b0:	mov	r1, #0
   296b4:	pop	{r4, lr}
   296b8:	b	143d4 <g_object_new@plt>
   296bc:	b	14644 <g_spawn_close_pid@plt>
   296c0:	push	{r4, r5, r6, lr}
   296c4:	subs	r6, r0, #0
   296c8:	beq	296f8 <g_strcmp0@plt+0x1452c>
   296cc:	cmp	r1, #0
   296d0:	ble	296f8 <g_strcmp0@plt+0x1452c>
   296d4:	add	r1, r6, r1, lsl #2
   296d8:	sub	r5, r1, #4
   296dc:	sub	r4, r6, #4
   296e0:	ldr	r3, [r4, #4]!
   296e4:	subs	r0, r3, #0
   296e8:	beq	296f0 <g_strcmp0@plt+0x14524>
   296ec:	bl	14bd8 <g_free@plt>
   296f0:	cmp	r4, r5
   296f4:	bne	296e0 <g_strcmp0@plt+0x14514>
   296f8:	mov	r0, r6
   296fc:	pop	{r4, r5, r6, lr}
   29700:	b	14bd8 <g_free@plt>
   29704:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   29708:	mov	r4, #0
   2970c:	ldr	r9, [pc, #544]	; 29934 <g_strcmp0@plt+0x14768>
   29710:	sub	sp, sp, #32
   29714:	mov	r2, r4
   29718:	ldr	r3, [r9]
   2971c:	ldr	r1, [pc, #532]	; 29938 <g_strcmp0@plt+0x1476c>
   29720:	str	r4, [sp, #20]
   29724:	str	r3, [sp, #28]
   29728:	bl	14530 <g_strsplit_set@plt>
   2972c:	subs	r8, r0, #0
   29730:	moveq	r4, r8
   29734:	beq	29758 <g_strcmp0@plt+0x1458c>
   29738:	ldr	r3, [r8]
   2973c:	cmp	r3, r4
   29740:	beq	298ec <g_strcmp0@plt+0x14720>
   29744:	mov	r3, r8
   29748:	ldr	r2, [r3, #4]!
   2974c:	add	r4, r4, #1
   29750:	cmp	r2, #0
   29754:	bne	29748 <g_strcmp0@plt+0x1457c>
   29758:	mov	r6, #0
   2975c:	str	r6, [sp, #24]
   29760:	bl	14d04 <g_get_environ@plt>
   29764:	subs	r7, r0, #0
   29768:	moveq	r6, r7
   2976c:	beq	29790 <g_strcmp0@plt+0x145c4>
   29770:	ldr	r3, [r7]
   29774:	cmp	r3, r6
   29778:	beq	298e4 <g_strcmp0@plt+0x14718>
   2977c:	mov	r3, r7
   29780:	ldr	r2, [r3, #4]!
   29784:	add	r6, r6, #1
   29788:	cmp	r2, #0
   2978c:	bne	29780 <g_strcmp0@plt+0x145b4>
   29790:	mov	r5, #0
   29794:	add	r3, sp, #24
   29798:	add	sl, sp, #20
   2979c:	str	r3, [sp, #8]
   297a0:	mov	r1, r8
   297a4:	mov	r3, #6
   297a8:	str	sl, [sp, #12]
   297ac:	str	r5, [sp, #4]
   297b0:	str	r5, [sp]
   297b4:	mov	r0, r5
   297b8:	mov	r2, r7
   297bc:	bl	14800 <g_spawn_async@plt>
   297c0:	ldr	r3, [sp, #20]
   297c4:	ldr	r1, [sp, #24]
   297c8:	cmp	r3, r5
   297cc:	beq	2984c <g_strcmp0@plt+0x14680>
   297d0:	mov	r0, r7
   297d4:	mov	r1, r6
   297d8:	bl	296c0 <g_strcmp0@plt+0x144f4>
   297dc:	ldr	r3, [sp, #20]
   297e0:	ldr	r7, [r3]
   297e4:	bl	146ec <g_spawn_error_quark@plt>
   297e8:	cmp	r7, r0
   297ec:	beq	298f4 <g_strcmp0@plt+0x14728>
   297f0:	mov	r1, r6
   297f4:	mov	r0, r5
   297f8:	bl	296c0 <g_strcmp0@plt+0x144f4>
   297fc:	mov	r1, r4
   29800:	mov	r0, r8
   29804:	bl	296c0 <g_strcmp0@plt+0x144f4>
   29808:	ldr	r4, [sp, #20]
   2980c:	ldr	r0, [r4]
   29810:	bl	14c2c <g_quark_to_string@plt>
   29814:	ldr	r3, [r4, #4]
   29818:	mov	ip, #100	; 0x64
   2981c:	str	r3, [sp, #12]
   29820:	ldr	r2, [pc, #276]	; 2993c <g_strcmp0@plt+0x14770>
   29824:	ldr	r3, [pc, #276]	; 29940 <g_strcmp0@plt+0x14774>
   29828:	mov	r1, #8
   2982c:	str	r0, [sp, #8]
   29830:	ldr	lr, [r4, #8]
   29834:	mov	r0, r5
   29838:	stm	sp, {ip, lr}
   2983c:	bl	14668 <g_log@plt>
   29840:	mov	r0, sl
   29844:	bl	14dac <g_clear_error@plt>
   29848:	b	298c4 <g_strcmp0@plt+0x146f8>
   2984c:	str	r3, [sp]
   29850:	ldr	r2, [pc, #236]	; 29944 <g_strcmp0@plt+0x14778>
   29854:	mov	r0, #200	; 0xc8
   29858:	bl	1513c <g_child_watch_add_full@plt>
   2985c:	mov	r1, r6
   29860:	mov	r0, r7
   29864:	bl	296c0 <g_strcmp0@plt+0x144f4>
   29868:	ldr	r3, [sp, #20]
   2986c:	mov	r1, r4
   29870:	cmp	r3, #0
   29874:	mov	r0, r8
   29878:	beq	298dc <g_strcmp0@plt+0x14710>
   2987c:	bl	296c0 <g_strcmp0@plt+0x144f4>
   29880:	ldr	r4, [sp, #20]
   29884:	ldr	r0, [r4]
   29888:	bl	14c2c <g_quark_to_string@plt>
   2988c:	ldr	r3, [r4, #4]
   29890:	mov	ip, #126	; 0x7e
   29894:	str	r3, [sp, #12]
   29898:	ldr	r2, [pc, #168]	; 29948 <g_strcmp0@plt+0x1477c>
   2989c:	ldr	r3, [pc, #156]	; 29940 <g_strcmp0@plt+0x14774>
   298a0:	mov	r1, #8
   298a4:	str	r0, [sp, #8]
   298a8:	ldr	r0, [r4, #8]
   298ac:	str	ip, [sp]
   298b0:	str	r0, [sp, #4]
   298b4:	mov	r0, #0
   298b8:	bl	14668 <g_log@plt>
   298bc:	mov	r0, sl
   298c0:	bl	14dac <g_clear_error@plt>
   298c4:	ldr	r2, [sp, #28]
   298c8:	ldr	r3, [r9]
   298cc:	cmp	r2, r3
   298d0:	bne	29930 <g_strcmp0@plt+0x14764>
   298d4:	add	sp, sp, #32
   298d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   298dc:	bl	296c0 <g_strcmp0@plt+0x144f4>
   298e0:	b	298c4 <g_strcmp0@plt+0x146f8>
   298e4:	mov	r6, r3
   298e8:	b	29790 <g_strcmp0@plt+0x145c4>
   298ec:	mov	r4, r3
   298f0:	b	29758 <g_strcmp0@plt+0x1458c>
   298f4:	ldr	r6, [sp, #20]
   298f8:	mov	r0, r5
   298fc:	ldr	r2, [pc, #72]	; 2994c <g_strcmp0@plt+0x14780>
   29900:	ldr	r3, [r6, #8]
   29904:	mov	r1, #16
   29908:	str	r5, [sp, #20]
   2990c:	bl	14668 <g_log@plt>
   29910:	mov	r0, r5
   29914:	ldr	r3, [r8]
   29918:	ldr	r2, [pc, #48]	; 29950 <g_strcmp0@plt+0x14784>
   2991c:	mov	r1, #16
   29920:	bl	14668 <g_log@plt>
   29924:	mov	r0, r6
   29928:	bl	1453c <g_error_free@plt>
   2992c:	b	29868 <g_strcmp0@plt+0x1469c>
   29930:	bl	14b6c <__stack_chk_fail@plt>
   29934:	andeq	fp, r4, r8, asr #19
   29938:	andeq	r5, r3, ip, lsr #4
   2993c:	andeq	r4, r3, r4, ror r6
   29940:	andeq	r9, r3, r8, lsr #22
   29944:			; <UNDEFINED> instruction: 0x000296bc
   29948:	andeq	r4, r3, r4, lsr #13
   2994c:	andeq	r9, r3, r8, ror #21
   29950:	strdeq	r9, [r3], -ip
   29954:	bx	lr
   29958:	bx	lr
   2995c:	bx	lr
   29960:	bx	lr
   29964:	b	14bd8 <g_free@plt>
   29968:	ldr	r3, [r0, #12]
   2996c:	push	{r4, r5, r6, lr}
   29970:	mov	r4, r0
   29974:	ldr	r0, [r3]
   29978:	bl	14bd8 <g_free@plt>
   2997c:	ldr	r3, [r4, #12]
   29980:	mov	r5, #0
   29984:	ldr	r0, [r3, #4]
   29988:	str	r5, [r3]
   2998c:	bl	14bd8 <g_free@plt>
   29990:	ldr	r0, [r4, #16]
   29994:	ldr	r3, [r4, #12]
   29998:	cmp	r0, r5
   2999c:	str	r5, [r3, #4]
   299a0:	beq	299ac <g_strcmp0@plt+0x147e0>
   299a4:	bl	14c14 <g_hash_table_unref@plt>
   299a8:	str	r5, [r4, #16]
   299ac:	ldr	r0, [r4, #20]
   299b0:	cmp	r0, #0
   299b4:	beq	299c4 <g_strcmp0@plt+0x147f8>
   299b8:	bl	14c14 <g_hash_table_unref@plt>
   299bc:	mov	r3, #0
   299c0:	str	r3, [r4, #20]
   299c4:	ldr	r0, [r4, #24]
   299c8:	cmp	r0, #0
   299cc:	beq	299dc <g_strcmp0@plt+0x14810>
   299d0:	bl	14c14 <g_hash_table_unref@plt>
   299d4:	mov	r3, #0
   299d8:	str	r3, [r4, #24]
   299dc:	ldr	r0, [r4, #28]
   299e0:	cmp	r0, #0
   299e4:	beq	299f4 <g_strcmp0@plt+0x14828>
   299e8:	bl	14c14 <g_hash_table_unref@plt>
   299ec:	mov	r3, #0
   299f0:	str	r3, [r4, #28]
   299f4:	ldr	r0, [r4, #32]
   299f8:	cmp	r0, #0
   299fc:	beq	29a0c <g_strcmp0@plt+0x14840>
   29a00:	bl	14c14 <g_hash_table_unref@plt>
   29a04:	mov	r3, #0
   29a08:	str	r3, [r4, #32]
   29a0c:	ldr	r0, [r4, #36]	; 0x24
   29a10:	cmp	r0, #0
   29a14:	beq	29a24 <g_strcmp0@plt+0x14858>
   29a18:	bl	14c14 <g_hash_table_unref@plt>
   29a1c:	mov	r3, #0
   29a20:	str	r3, [r4, #36]	; 0x24
   29a24:	ldr	r0, [r4, #40]	; 0x28
   29a28:	cmp	r0, #0
   29a2c:	beq	29a3c <g_strcmp0@plt+0x14870>
   29a30:	bl	14c14 <g_hash_table_unref@plt>
   29a34:	mov	r3, #0
   29a38:	str	r3, [r4, #40]	; 0x28
   29a3c:	ldr	r3, [pc, #16]	; 29a54 <g_strcmp0@plt+0x14888>
   29a40:	mov	r0, r4
   29a44:	pop	{r4, r5, r6, lr}
   29a48:	ldr	r3, [r3]
   29a4c:	ldr	r3, [r3, #24]
   29a50:	bx	r3
   29a54:	andeq	ip, r4, r0, lsr #8
   29a58:	ldr	r3, [pc, #56]	; 29a98 <g_strcmp0@plt+0x148cc>
   29a5c:	push	{r4, r5, r6, lr}
   29a60:	mov	r4, r0
   29a64:	ldr	r3, [r3, #4]
   29a68:	ldr	r5, [pc, #44]	; 29a9c <g_strcmp0@plt+0x148d0>
   29a6c:	add	r3, r4, r3
   29a70:	str	r3, [r4, #12]
   29a74:	mov	r0, r5
   29a78:	bl	147e8 <g_strdup@plt>
   29a7c:	ldr	r3, [r4, #12]
   29a80:	str	r0, [r3]
   29a84:	mov	r0, r5
   29a88:	bl	147e8 <g_strdup@plt>
   29a8c:	ldr	r3, [r4, #12]
   29a90:	str	r0, [r3, #4]
   29a94:	pop	{r4, r5, r6, pc}
   29a98:	andeq	ip, r4, r0, lsr #8
   29a9c:	andeq	r4, r3, r0, asr #11
   29aa0:	push	{r4, lr}
   29aa4:	mov	r4, r0
   29aa8:	bl	14f8c <g_type_class_peek_parent@plt>
   29aac:	ldr	r3, [pc, #28]	; 29ad0 <g_strcmp0@plt+0x14904>
   29ab0:	ldr	ip, [pc, #28]	; 29ad4 <g_strcmp0@plt+0x14908>
   29ab4:	ldr	r1, [pc, #28]	; 29ad8 <g_strcmp0@plt+0x1490c>
   29ab8:	ldr	r2, [pc, #28]	; 29adc <g_strcmp0@plt+0x14910>
   29abc:	str	ip, [r4, #80]	; 0x50
   29ac0:	str	r1, [r4, #84]	; 0x54
   29ac4:	str	r2, [r4, #24]
   29ac8:	str	r0, [r3, #8]
   29acc:	pop	{r4, pc}
   29ad0:	andeq	ip, r4, r0, lsr #8
   29ad4:	andeq	pc, r2, r8, ror #20
   29ad8:	andeq	sl, r2, r4, ror r3
   29adc:	andeq	r9, r2, r4, ror #27
   29ae0:	push	{r4, r5, r6, lr}
   29ae4:	sub	sp, sp, #8
   29ae8:	mov	r4, r0
   29aec:	bl	14f8c <g_type_class_peek_parent@plt>
   29af0:	ldr	r5, [pc, #168]	; 29ba0 <g_strcmp0@plt+0x149d4>
   29af4:	mov	r6, #227	; 0xe3
   29af8:	mov	r1, r5
   29afc:	str	r0, [r1], #4
   29b00:	mov	r0, r4
   29b04:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   29b08:	ldr	r3, [pc, #148]	; 29ba4 <g_strcmp0@plt+0x149d8>
   29b0c:	ldr	r2, [pc, #148]	; 29ba8 <g_strcmp0@plt+0x149dc>
   29b10:	ldr	ip, [pc, #148]	; 29bac <g_strcmp0@plt+0x149e0>
   29b14:	str	r3, [r4, #68]	; 0x44
   29b18:	str	r2, [r4, #72]	; 0x48
   29b1c:	ldr	r0, [pc, #140]	; 29bb0 <g_strcmp0@plt+0x149e4>
   29b20:	ldr	r2, [pc, #140]	; 29bb4 <g_strcmp0@plt+0x149e8>
   29b24:	ldr	r1, [pc, #140]	; 29bb8 <g_strcmp0@plt+0x149ec>
   29b28:	ldr	r3, [pc, #140]	; 29bbc <g_strcmp0@plt+0x149f0>
   29b2c:	str	ip, [r4, #76]	; 0x4c
   29b30:	str	r0, [r4, #16]
   29b34:	str	r1, [r4, #12]
   29b38:	str	r3, [r4, #24]
   29b3c:	mov	r1, r2
   29b40:	mov	r0, r2
   29b44:	str	r6, [sp]
   29b48:	mov	r3, #0
   29b4c:	bl	145e4 <g_param_spec_string@plt>
   29b50:	mov	r1, #1
   29b54:	mov	r3, r0
   29b58:	mov	r2, r0
   29b5c:	mov	r0, r4
   29b60:	str	r3, [r5, #16]
   29b64:	bl	14c98 <g_object_class_install_property@plt>
   29b68:	ldr	r2, [pc, #80]	; 29bc0 <g_strcmp0@plt+0x149f4>
   29b6c:	str	r6, [sp]
   29b70:	mov	r1, r2
   29b74:	mov	r0, r2
   29b78:	mov	r3, #0
   29b7c:	bl	145e4 <g_param_spec_string@plt>
   29b80:	mov	r1, #2
   29b84:	mov	r3, r0
   29b88:	mov	r2, r0
   29b8c:	str	r3, [r5, #20]
   29b90:	mov	r0, r4
   29b94:	add	sp, sp, #8
   29b98:	pop	{r4, r5, r6, lr}
   29b9c:	b	14c98 <g_object_class_install_property@plt>
   29ba0:	andeq	ip, r4, r0, lsr #8
   29ba4:	andeq	r9, r2, r4, asr r9
   29ba8:	andeq	r9, r2, r8, asr r9
   29bac:	andeq	r9, r2, ip, asr r9
   29bb0:	andeq	r9, r2, ip, lsl pc
   29bb4:	andeq	r9, r3, r8, lsr #23
   29bb8:	andeq	ip, r2, r4, asr r0
   29bbc:	andeq	r9, r2, r8, ror #18
   29bc0:			; <UNDEFINED> instruction: 0x00039bb8
   29bc4:	push	{r4, r5, r6, lr}
   29bc8:	sub	sp, sp, #8
   29bcc:	mov	r4, r0
   29bd0:	bl	14f8c <g_type_class_peek_parent@plt>
   29bd4:	ldr	r5, [pc, #184]	; 29c94 <g_strcmp0@plt+0x14ac8>
   29bd8:	mov	r6, #227	; 0xe3
   29bdc:	add	r1, r5, #28
   29be0:	str	r0, [r5, #24]
   29be4:	mov	r0, r4
   29be8:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   29bec:	ldr	r0, [pc, #164]	; 29c98 <g_strcmp0@plt+0x14acc>
   29bf0:	ldr	r1, [pc, #164]	; 29c9c <g_strcmp0@plt+0x14ad0>
   29bf4:	ldr	r3, [pc, #164]	; 29ca0 <g_strcmp0@plt+0x14ad4>
   29bf8:	ldr	r2, [pc, #164]	; 29ca4 <g_strcmp0@plt+0x14ad8>
   29bfc:	ldr	ip, [pc, #164]	; 29ca8 <g_strcmp0@plt+0x14adc>
   29c00:	str	r0, [r4, #80]	; 0x50
   29c04:	str	r1, [r4, #84]	; 0x54
   29c08:	str	r3, [r4, #68]	; 0x44
   29c0c:	str	r2, [r4, #72]	; 0x48
   29c10:	ldr	r0, [pc, #148]	; 29cac <g_strcmp0@plt+0x14ae0>
   29c14:	ldr	r2, [pc, #148]	; 29cb0 <g_strcmp0@plt+0x14ae4>
   29c18:	ldr	r1, [pc, #148]	; 29cb4 <g_strcmp0@plt+0x14ae8>
   29c1c:	ldr	r3, [pc, #148]	; 29cb8 <g_strcmp0@plt+0x14aec>
   29c20:	str	ip, [r4, #76]	; 0x4c
   29c24:	str	r0, [r4, #16]
   29c28:	str	r1, [r4, #12]
   29c2c:	str	r3, [r4, #24]
   29c30:	mov	r1, r2
   29c34:	mov	r0, r2
   29c38:	str	r6, [sp]
   29c3c:	mov	r3, #0
   29c40:	bl	145e4 <g_param_spec_string@plt>
   29c44:	mov	r1, #1
   29c48:	mov	r3, r0
   29c4c:	mov	r2, r0
   29c50:	mov	r0, r4
   29c54:	str	r3, [r5, #36]	; 0x24
   29c58:	bl	14c98 <g_object_class_install_property@plt>
   29c5c:	ldr	r2, [pc, #88]	; 29cbc <g_strcmp0@plt+0x14af0>
   29c60:	str	r6, [sp]
   29c64:	mov	r1, r2
   29c68:	mov	r0, r2
   29c6c:	mov	r3, #0
   29c70:	bl	145e4 <g_param_spec_string@plt>
   29c74:	mov	r1, #2
   29c78:	mov	r3, r0
   29c7c:	mov	r2, r0
   29c80:	str	r3, [r5, #40]	; 0x28
   29c84:	mov	r0, r4
   29c88:	add	sp, sp, #8
   29c8c:	pop	{r4, r5, r6, lr}
   29c90:	b	14c98 <g_object_class_install_property@plt>
   29c94:	andeq	ip, r4, r0, lsr #8
   29c98:	andeq	r9, r2, r0, ror #18
   29c9c:	andeq	sl, r2, r0, lsr #1
   29ca0:	andeq	lr, r2, ip, asr #24
   29ca4:	andeq	lr, r2, r4, asr #21
   29ca8:	strdeq	lr, [r2], -ip
   29cac:			; <UNDEFINED> instruction: 0x00029fbc
   29cb0:	andeq	r9, r3, ip, asr #23
   29cb4:	andeq	lr, r2, r4, ror #30
   29cb8:	andeq	r9, r2, ip, lsl #26
   29cbc:	andeq	r9, r3, r0, ror #23
   29cc0:	push	{r4, r5, r6, r7, r8, lr}
   29cc4:	mov	r6, r1
   29cc8:	mov	r4, r0
   29ccc:	mov	r1, #4
   29cd0:	add	r0, r6, #1
   29cd4:	bl	14f14 <g_malloc0_n@plt>
   29cd8:	cmp	r6, #0
   29cdc:	mov	r7, r0
   29ce0:	ble	29d04 <g_strcmp0@plt+0x14b38>
   29ce4:	sub	r4, r4, #4
   29ce8:	add	r6, r4, r6, lsl #2
   29cec:	sub	r5, r0, #4
   29cf0:	ldr	r0, [r4, #4]!
   29cf4:	bl	147e8 <g_strdup@plt>
   29cf8:	cmp	r4, r6
   29cfc:	str	r0, [r5, #4]!
   29d00:	bne	29cf0 <g_strcmp0@plt+0x14b24>
   29d04:	mov	r0, r7
   29d08:	pop	{r4, r5, r6, r7, r8, pc}
   29d0c:	push	{r4, r5, r6, lr}
   29d10:	mov	r4, r0
   29d14:	ldr	r0, [r0, #48]	; 0x30
   29d18:	cmp	r0, #0
   29d1c:	beq	29d2c <g_strcmp0@plt+0x14b60>
   29d20:	bl	14f50 <g_key_file_unref@plt>
   29d24:	mov	r3, #0
   29d28:	str	r3, [r4, #48]	; 0x30
   29d2c:	ldr	r3, [r4, #44]	; 0x2c
   29d30:	mov	r5, #0
   29d34:	ldr	r0, [r3]
   29d38:	bl	14bd8 <g_free@plt>
   29d3c:	ldr	r3, [r4, #44]	; 0x2c
   29d40:	ldr	r0, [r3, #4]
   29d44:	str	r5, [r3]
   29d48:	bl	14bd8 <g_free@plt>
   29d4c:	ldr	r0, [r4, #52]	; 0x34
   29d50:	ldr	r3, [r4, #44]	; 0x2c
   29d54:	cmp	r0, r5
   29d58:	str	r5, [r3, #4]
   29d5c:	beq	29d68 <g_strcmp0@plt+0x14b9c>
   29d60:	bl	14e90 <g_object_unref@plt>
   29d64:	str	r5, [r4, #52]	; 0x34
   29d68:	ldr	r0, [r4, #56]	; 0x38
   29d6c:	cmp	r0, #0
   29d70:	beq	29d80 <g_strcmp0@plt+0x14bb4>
   29d74:	bl	14e90 <g_object_unref@plt>
   29d78:	mov	r3, #0
   29d7c:	str	r3, [r4, #56]	; 0x38
   29d80:	ldr	r0, [r4, #60]	; 0x3c
   29d84:	cmp	r0, #0
   29d88:	beq	29d98 <g_strcmp0@plt+0x14bcc>
   29d8c:	bl	14e90 <g_object_unref@plt>
   29d90:	mov	r3, #0
   29d94:	str	r3, [r4, #60]	; 0x3c
   29d98:	ldr	r0, [r4, #64]	; 0x40
   29d9c:	cmp	r0, #0
   29da0:	beq	29db0 <g_strcmp0@plt+0x14be4>
   29da4:	bl	14e90 <g_object_unref@plt>
   29da8:	mov	r3, #0
   29dac:	str	r3, [r4, #64]	; 0x40
   29db0:	ldr	r0, [r4, #68]	; 0x44
   29db4:	cmp	r0, #0
   29db8:	beq	29dc8 <g_strcmp0@plt+0x14bfc>
   29dbc:	bl	14e90 <g_object_unref@plt>
   29dc0:	mov	r3, #0
   29dc4:	str	r3, [r4, #68]	; 0x44
   29dc8:	ldr	r3, [pc, #16]	; 29de0 <g_strcmp0@plt+0x14c14>
   29dcc:	mov	r0, r4
   29dd0:	pop	{r4, r5, r6, lr}
   29dd4:	ldr	r3, [r3, #24]
   29dd8:	ldr	r3, [r3, #24]
   29ddc:	bx	r3
   29de0:	andeq	ip, r4, r0, lsr #8
   29de4:	push	{r4, r5, r6, lr}
   29de8:	mov	r4, r0
   29dec:	ldr	r0, [r0, #76]	; 0x4c
   29df0:	cmp	r0, #0
   29df4:	beq	29e04 <g_strcmp0@plt+0x14c38>
   29df8:	bl	14f50 <g_key_file_unref@plt>
   29dfc:	mov	r3, #0
   29e00:	str	r3, [r4, #76]	; 0x4c
   29e04:	mov	r5, #0
   29e08:	ldr	r0, [r4, #80]	; 0x50
   29e0c:	bl	14bd8 <g_free@plt>
   29e10:	ldr	r0, [r4, #84]	; 0x54
   29e14:	str	r5, [r4, #80]	; 0x50
   29e18:	bl	14bd8 <g_free@plt>
   29e1c:	ldr	r0, [r4, #88]	; 0x58
   29e20:	str	r5, [r4, #84]	; 0x54
   29e24:	cmp	r0, r5
   29e28:	beq	29e34 <g_strcmp0@plt+0x14c68>
   29e2c:	bl	14e90 <g_object_unref@plt>
   29e30:	str	r5, [r4, #88]	; 0x58
   29e34:	ldr	r0, [r4, #92]	; 0x5c
   29e38:	cmp	r0, #0
   29e3c:	beq	29e4c <g_strcmp0@plt+0x14c80>
   29e40:	bl	14e90 <g_object_unref@plt>
   29e44:	mov	r3, #0
   29e48:	str	r3, [r4, #92]	; 0x5c
   29e4c:	ldr	r0, [r4, #96]	; 0x60
   29e50:	cmp	r0, #0
   29e54:	beq	29e64 <g_strcmp0@plt+0x14c98>
   29e58:	bl	14f50 <g_key_file_unref@plt>
   29e5c:	mov	r3, #0
   29e60:	str	r3, [r4, #96]	; 0x60
   29e64:	mov	r5, #0
   29e68:	ldr	r0, [r4, #100]	; 0x64
   29e6c:	bl	14bd8 <g_free@plt>
   29e70:	ldr	r0, [r4, #104]	; 0x68
   29e74:	str	r5, [r4, #100]	; 0x64
   29e78:	bl	14bd8 <g_free@plt>
   29e7c:	ldr	r0, [r4, #108]	; 0x6c
   29e80:	str	r5, [r4, #104]	; 0x68
   29e84:	cmp	r0, r5
   29e88:	beq	29e94 <g_strcmp0@plt+0x14cc8>
   29e8c:	bl	14e90 <g_object_unref@plt>
   29e90:	str	r5, [r4, #108]	; 0x6c
   29e94:	ldr	r0, [r4, #112]	; 0x70
   29e98:	cmp	r0, #0
   29e9c:	beq	29eac <g_strcmp0@plt+0x14ce0>
   29ea0:	bl	14e90 <g_object_unref@plt>
   29ea4:	mov	r3, #0
   29ea8:	str	r3, [r4, #112]	; 0x70
   29eac:	ldr	r3, [pc, #16]	; 29ec4 <g_strcmp0@plt+0x14cf8>
   29eb0:	mov	r0, r4
   29eb4:	pop	{r4, r5, r6, lr}
   29eb8:	ldr	r3, [r3, #8]
   29ebc:	ldr	r3, [r3, #24]
   29ec0:	bx	r3
   29ec4:	andeq	ip, r4, r0, lsr #8
   29ec8:	ldr	r3, [pc, #44]	; 29efc <g_strcmp0@plt+0x14d30>
   29ecc:	push	{r4, lr}
   29ed0:	mov	r4, r0
   29ed4:	ldr	r3, [r3, #28]
   29ed8:	add	r3, r0, r3
   29edc:	str	r3, [r0, #44]	; 0x2c
   29ee0:	bl	14df4 <g_key_file_new@plt>
   29ee4:	ldr	r3, [r4, #44]	; 0x2c
   29ee8:	mov	r2, #0
   29eec:	str	r0, [r4, #48]	; 0x30
   29ef0:	str	r2, [r3]
   29ef4:	str	r2, [r3, #4]
   29ef8:	pop	{r4, pc}
   29efc:	andeq	ip, r4, r0, lsr #8
   29f00:	push	{r4, lr}
   29f04:	mov	r4, r0
   29f08:	bl	14df4 <g_key_file_new@plt>
   29f0c:	str	r0, [r4, #76]	; 0x4c
   29f10:	bl	14df4 <g_key_file_new@plt>
   29f14:	str	r0, [r4, #96]	; 0x60
   29f18:	pop	{r4, pc}
   29f1c:	cmp	r1, #1
   29f20:	beq	29f9c <g_strcmp0@plt+0x14dd0>
   29f24:	cmp	r1, #2
   29f28:	bne	29f3c <g_strcmp0@plt+0x14d70>
   29f2c:	ldr	r3, [r0, #12]
   29f30:	mov	r0, r2
   29f34:	ldr	r1, [r3, #4]
   29f38:	b	14980 <g_value_set_string@plt>
   29f3c:	push	{r4, r5, r6, r7, lr}
   29f40:	mov	r5, r0
   29f44:	ldm	r3, {r2, r6}
   29f48:	sub	sp, sp, #28
   29f4c:	mov	r4, r1
   29f50:	ldr	r0, [r2]
   29f54:	bl	14680 <g_type_name@plt>
   29f58:	ldr	r3, [r5]
   29f5c:	mov	r7, r0
   29f60:	ldr	r0, [r3]
   29f64:	bl	14680 <g_type_name@plt>
   29f68:	ldr	r2, [pc, #60]	; 29fac <g_strcmp0@plt+0x14de0>
   29f6c:	ldr	r3, [pc, #60]	; 29fb0 <g_strcmp0@plt+0x14de4>
   29f70:	strd	r6, [sp, #12]
   29f74:	stmib	sp, {r2, r4}
   29f78:	str	r3, [sp]
   29f7c:	ldr	r2, [pc, #48]	; 29fb4 <g_strcmp0@plt+0x14de8>
   29f80:	ldr	r3, [pc, #48]	; 29fb8 <g_strcmp0@plt+0x14dec>
   29f84:	mov	r1, #16
   29f88:	str	r0, [sp, #20]
   29f8c:	mov	r0, #0
   29f90:	bl	14668 <g_log@plt>
   29f94:	add	sp, sp, #28
   29f98:	pop	{r4, r5, r6, r7, pc}
   29f9c:	ldr	r3, [r0, #12]
   29fa0:	mov	r0, r2
   29fa4:	ldr	r1, [r3]
   29fa8:	b	14980 <g_value_set_string@plt>
   29fac:	andeq	r4, r3, ip, lsr pc
   29fb0:	andeq	r0, r0, r4, ror r6
   29fb4:	andeq	r4, r3, r4, lsl #30
   29fb8:	strdeq	r9, [r3], -ip
   29fbc:	cmp	r1, #1
   29fc0:	beq	2a03c <g_strcmp0@plt+0x14e70>
   29fc4:	cmp	r1, #2
   29fc8:	bne	29fdc <g_strcmp0@plt+0x14e10>
   29fcc:	ldr	r3, [r0, #44]	; 0x2c
   29fd0:	mov	r0, r2
   29fd4:	ldr	r1, [r3, #4]
   29fd8:	b	14980 <g_value_set_string@plt>
   29fdc:	push	{r4, r5, r6, r7, lr}
   29fe0:	mov	r5, r0
   29fe4:	ldm	r3, {r2, r6}
   29fe8:	sub	sp, sp, #28
   29fec:	mov	r4, r1
   29ff0:	ldr	r0, [r2]
   29ff4:	bl	14680 <g_type_name@plt>
   29ff8:	ldr	r3, [r5]
   29ffc:	mov	r7, r0
   2a000:	ldr	r0, [r3]
   2a004:	bl	14680 <g_type_name@plt>
   2a008:	ldr	r2, [pc, #60]	; 2a04c <g_strcmp0@plt+0x14e80>
   2a00c:	ldr	r3, [pc, #60]	; 2a050 <g_strcmp0@plt+0x14e84>
   2a010:	strd	r6, [sp, #12]
   2a014:	stmib	sp, {r2, r4}
   2a018:	str	r3, [sp]
   2a01c:	ldr	r2, [pc, #48]	; 2a054 <g_strcmp0@plt+0x14e88>
   2a020:	ldr	r3, [pc, #48]	; 2a058 <g_strcmp0@plt+0x14e8c>
   2a024:	mov	r1, #16
   2a028:	str	r0, [sp, #20]
   2a02c:	mov	r0, #0
   2a030:	bl	14668 <g_log@plt>
   2a034:	add	sp, sp, #28
   2a038:	pop	{r4, r5, r6, r7, pc}
   2a03c:	ldr	r3, [r0, #44]	; 0x2c
   2a040:	mov	r0, r2
   2a044:	ldr	r1, [r3]
   2a048:	b	14980 <g_value_set_string@plt>
   2a04c:	andeq	r4, r3, ip, lsr pc
   2a050:	andeq	r0, r0, r2, ror lr
   2a054:	andeq	r4, r3, r4, lsl #30
   2a058:	strdeq	r9, [r3], -ip
   2a05c:	push	{r4, r5, r6, lr}
   2a060:	subs	r6, r0, #0
   2a064:	beq	2a094 <g_strcmp0@plt+0x14ec8>
   2a068:	cmp	r1, #0
   2a06c:	ble	2a094 <g_strcmp0@plt+0x14ec8>
   2a070:	add	r1, r6, r1, lsl #2
   2a074:	sub	r5, r1, #4
   2a078:	sub	r4, r6, #4
   2a07c:	ldr	r3, [r4, #4]!
   2a080:	subs	r0, r3, #0
   2a084:	beq	2a08c <g_strcmp0@plt+0x14ec0>
   2a088:	bl	14bd8 <g_free@plt>
   2a08c:	cmp	r4, r5
   2a090:	bne	2a07c <g_strcmp0@plt+0x14eb0>
   2a094:	mov	r0, r6
   2a098:	pop	{r4, r5, r6, lr}
   2a09c:	b	14bd8 <g_free@plt>
   2a0a0:	bx	lr
   2a0a4:	push	{r4, r5, r6, lr}
   2a0a8:	mov	r1, #0
   2a0ac:	bl	143d4 <g_object_new@plt>
   2a0b0:	ldr	r3, [pc, #312]	; 2a1f0 <g_strcmp0@plt+0x15024>
   2a0b4:	ldr	r1, [pc, #312]	; 2a1f4 <g_strcmp0@plt+0x15028>
   2a0b8:	mov	r2, r3
   2a0bc:	mov	r4, r0
   2a0c0:	ldr	r0, [pc, #304]	; 2a1f8 <g_strcmp0@plt+0x1502c>
   2a0c4:	bl	147d0 <g_hash_table_new_full@plt>
   2a0c8:	mov	r5, r0
   2a0cc:	ldr	r0, [r4, #16]
   2a0d0:	cmp	r0, #0
   2a0d4:	beq	2a0dc <g_strcmp0@plt+0x14f10>
   2a0d8:	bl	14c14 <g_hash_table_unref@plt>
   2a0dc:	ldr	r3, [pc, #268]	; 2a1f0 <g_strcmp0@plt+0x15024>
   2a0e0:	str	r5, [r4, #16]
   2a0e4:	mov	r2, r3
   2a0e8:	ldr	r1, [pc, #260]	; 2a1f4 <g_strcmp0@plt+0x15028>
   2a0ec:	ldr	r0, [pc, #260]	; 2a1f8 <g_strcmp0@plt+0x1502c>
   2a0f0:	bl	147d0 <g_hash_table_new_full@plt>
   2a0f4:	mov	r5, r0
   2a0f8:	ldr	r0, [r4, #20]
   2a0fc:	cmp	r0, #0
   2a100:	beq	2a108 <g_strcmp0@plt+0x14f3c>
   2a104:	bl	14c14 <g_hash_table_unref@plt>
   2a108:	ldr	r3, [pc, #224]	; 2a1f0 <g_strcmp0@plt+0x15024>
   2a10c:	str	r5, [r4, #20]
   2a110:	mov	r2, r3
   2a114:	ldr	r1, [pc, #216]	; 2a1f4 <g_strcmp0@plt+0x15028>
   2a118:	ldr	r0, [pc, #216]	; 2a1f8 <g_strcmp0@plt+0x1502c>
   2a11c:	bl	147d0 <g_hash_table_new_full@plt>
   2a120:	mov	r5, r0
   2a124:	ldr	r0, [r4, #24]
   2a128:	cmp	r0, #0
   2a12c:	beq	2a134 <g_strcmp0@plt+0x14f68>
   2a130:	bl	14c14 <g_hash_table_unref@plt>
   2a134:	ldr	r3, [pc, #180]	; 2a1f0 <g_strcmp0@plt+0x15024>
   2a138:	str	r5, [r4, #24]
   2a13c:	mov	r2, r3
   2a140:	ldr	r1, [pc, #172]	; 2a1f4 <g_strcmp0@plt+0x15028>
   2a144:	ldr	r0, [pc, #172]	; 2a1f8 <g_strcmp0@plt+0x1502c>
   2a148:	bl	147d0 <g_hash_table_new_full@plt>
   2a14c:	mov	r5, r0
   2a150:	ldr	r0, [r4, #28]
   2a154:	cmp	r0, #0
   2a158:	beq	2a160 <g_strcmp0@plt+0x14f94>
   2a15c:	bl	14c14 <g_hash_table_unref@plt>
   2a160:	ldr	r3, [pc, #136]	; 2a1f0 <g_strcmp0@plt+0x15024>
   2a164:	str	r5, [r4, #28]
   2a168:	mov	r2, r3
   2a16c:	ldr	r1, [pc, #128]	; 2a1f4 <g_strcmp0@plt+0x15028>
   2a170:	ldr	r0, [pc, #128]	; 2a1f8 <g_strcmp0@plt+0x1502c>
   2a174:	bl	147d0 <g_hash_table_new_full@plt>
   2a178:	mov	r5, r0
   2a17c:	ldr	r0, [r4, #32]
   2a180:	cmp	r0, #0
   2a184:	beq	2a18c <g_strcmp0@plt+0x14fc0>
   2a188:	bl	14c14 <g_hash_table_unref@plt>
   2a18c:	ldr	r3, [pc, #92]	; 2a1f0 <g_strcmp0@plt+0x15024>
   2a190:	str	r5, [r4, #32]
   2a194:	mov	r2, r3
   2a198:	ldr	r1, [pc, #84]	; 2a1f4 <g_strcmp0@plt+0x15028>
   2a19c:	ldr	r0, [pc, #84]	; 2a1f8 <g_strcmp0@plt+0x1502c>
   2a1a0:	bl	147d0 <g_hash_table_new_full@plt>
   2a1a4:	mov	r5, r0
   2a1a8:	ldr	r0, [r4, #36]	; 0x24
   2a1ac:	cmp	r0, #0
   2a1b0:	beq	2a1b8 <g_strcmp0@plt+0x14fec>
   2a1b4:	bl	14c14 <g_hash_table_unref@plt>
   2a1b8:	ldr	r3, [pc, #48]	; 2a1f0 <g_strcmp0@plt+0x15024>
   2a1bc:	str	r5, [r4, #36]	; 0x24
   2a1c0:	mov	r2, r3
   2a1c4:	ldr	r1, [pc, #40]	; 2a1f4 <g_strcmp0@plt+0x15028>
   2a1c8:	ldr	r0, [pc, #40]	; 2a1f8 <g_strcmp0@plt+0x1502c>
   2a1cc:	bl	147d0 <g_hash_table_new_full@plt>
   2a1d0:	mov	r5, r0
   2a1d4:	ldr	r0, [r4, #40]	; 0x28
   2a1d8:	cmp	r0, #0
   2a1dc:	beq	2a1e4 <g_strcmp0@plt+0x15018>
   2a1e0:	bl	14c14 <g_hash_table_unref@plt>
   2a1e4:	str	r5, [r4, #40]	; 0x28
   2a1e8:	mov	r0, r4
   2a1ec:	pop	{r4, r5, r6, pc}
   2a1f0:	andeq	r9, r2, r4, ror #18
   2a1f4:	andeq	r4, r1, r8, lsl #12
   2a1f8:	andeq	r4, r1, r8, lsr #23
   2a1fc:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a200:	mov	r7, r0
   2a204:	mov	r9, r2
   2a208:	mov	r0, r1
   2a20c:	mov	r2, #0
   2a210:	ldr	r1, [pc, #224]	; 2a2f8 <g_strcmp0@plt+0x1512c>
   2a214:	mov	r4, r3
   2a218:	ldr	r6, [sp, #40]	; 0x28
   2a21c:	ldr	r5, [sp, #44]	; 0x2c
   2a220:	bl	14dc4 <g_strconcat@plt>
   2a224:	mov	r1, r9
   2a228:	mov	r2, #0
   2a22c:	mov	r8, r0
   2a230:	bl	14dc4 <g_strconcat@plt>
   2a234:	mov	r2, #0
   2a238:	ldr	r1, [pc, #184]	; 2a2f8 <g_strcmp0@plt+0x1512c>
   2a23c:	mov	r9, r0
   2a240:	bl	14dc4 <g_strconcat@plt>
   2a244:	mov	r1, r4
   2a248:	mov	r2, #0
   2a24c:	mov	sl, r0
   2a250:	bl	14dc4 <g_strconcat@plt>
   2a254:	mov	r2, #0
   2a258:	ldr	r1, [pc, #152]	; 2a2f8 <g_strcmp0@plt+0x1512c>
   2a25c:	mov	fp, r0
   2a260:	bl	14dc4 <g_strconcat@plt>
   2a264:	mov	r4, r0
   2a268:	mov	r0, fp
   2a26c:	bl	14bd8 <g_free@plt>
   2a270:	mov	r0, sl
   2a274:	bl	14bd8 <g_free@plt>
   2a278:	mov	r0, r9
   2a27c:	bl	14bd8 <g_free@plt>
   2a280:	mov	r0, r8
   2a284:	bl	14bd8 <g_free@plt>
   2a288:	mov	r1, r4
   2a28c:	ldr	r0, [r7, #16]
   2a290:	bl	14a94 <g_hash_table_lookup@plt>
   2a294:	bl	147e8 <g_strdup@plt>
   2a298:	mov	r8, r0
   2a29c:	mov	r0, #0
   2a2a0:	bl	14bd8 <g_free@plt>
   2a2a4:	ldr	r0, [pc, #80]	; 2a2fc <g_strcmp0@plt+0x15130>
   2a2a8:	bl	147e8 <g_strdup@plt>
   2a2ac:	mov	r7, r0
   2a2b0:	mov	r0, #0
   2a2b4:	bl	14bd8 <g_free@plt>
   2a2b8:	mov	r0, r4
   2a2bc:	bl	14bd8 <g_free@plt>
   2a2c0:	cmp	r6, #0
   2a2c4:	strne	r8, [r6]
   2a2c8:	beq	2a2dc <g_strcmp0@plt+0x15110>
   2a2cc:	cmp	r5, #0
   2a2d0:	beq	2a2ec <g_strcmp0@plt+0x15120>
   2a2d4:	str	r7, [r5]
   2a2d8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a2dc:	mov	r0, r8
   2a2e0:	bl	14bd8 <g_free@plt>
   2a2e4:	cmp	r5, #0
   2a2e8:	bne	2a2d4 <g_strcmp0@plt+0x15108>
   2a2ec:	mov	r0, r7
   2a2f0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a2f4:	b	14bd8 <g_free@plt>
   2a2f8:	strdeq	r7, [r3], -ip
   2a2fc:	andeq	r4, r3, r4, asr r8
   2a300:	push	{r4, r5, lr}
   2a304:	sub	sp, sp, #28
   2a308:	ldr	r5, [pc, #96]	; 2a370 <g_strcmp0@plt+0x151a4>
   2a30c:	add	ip, sp, #16
   2a310:	add	lr, sp, #12
   2a314:	str	ip, [sp, #4]
   2a318:	ldr	ip, [r5]
   2a31c:	mov	r4, #0
   2a320:	str	lr, [sp]
   2a324:	str	ip, [sp, #20]
   2a328:	str	r4, [sp, #12]
   2a32c:	str	r4, [sp, #16]
   2a330:	bl	2a1fc <g_strcmp0@plt+0x15030>
   2a334:	mov	r0, r4
   2a338:	bl	14bd8 <g_free@plt>
   2a33c:	mov	r0, r4
   2a340:	ldr	r4, [sp, #12]
   2a344:	bl	14bd8 <g_free@plt>
   2a348:	ldr	r0, [sp, #16]
   2a34c:	bl	14bd8 <g_free@plt>
   2a350:	ldr	r2, [sp, #20]
   2a354:	ldr	r3, [r5]
   2a358:	cmp	r2, r3
   2a35c:	bne	2a36c <g_strcmp0@plt+0x151a0>
   2a360:	mov	r0, r4
   2a364:	add	sp, sp, #28
   2a368:	pop	{r4, r5, pc}
   2a36c:	bl	14b6c <__stack_chk_fail@plt>
   2a370:	andeq	fp, r4, r8, asr #19
   2a374:	push	{r4, r5, r6, r7, r8, lr}
   2a378:	sub	sp, sp, #24
   2a37c:	ldr	r6, [pc, #996]	; 2a768 <g_strcmp0@plt+0x1559c>
   2a380:	mov	r4, r0
   2a384:	mov	r3, #0
   2a388:	ldr	r2, [r6]
   2a38c:	ldr	r0, [r0, #84]	; 0x54
   2a390:	str	r2, [sp, #20]
   2a394:	str	r3, [sp, #16]
   2a398:	bl	147e8 <g_strdup@plt>
   2a39c:	mov	r5, r0
   2a3a0:	ldr	r0, [r4, #80]	; 0x50
   2a3a4:	bl	14bd8 <g_free@plt>
   2a3a8:	str	r5, [r4, #80]	; 0x50
   2a3ac:	ldr	r0, [r4, #104]	; 0x68
   2a3b0:	bl	147e8 <g_strdup@plt>
   2a3b4:	mov	r5, r0
   2a3b8:	ldr	r0, [r4, #100]	; 0x64
   2a3bc:	bl	14bd8 <g_free@plt>
   2a3c0:	str	r5, [r4, #100]	; 0x64
   2a3c4:	ldr	r3, [pc, #928]	; 2a76c <g_strcmp0@plt+0x155a0>
   2a3c8:	ldr	r2, [pc, #928]	; 2a770 <g_strcmp0@plt+0x155a4>
   2a3cc:	ldr	r1, [pc, #928]	; 2a774 <g_strcmp0@plt+0x155a8>
   2a3d0:	mov	r0, r4
   2a3d4:	ldr	r7, [r4, #76]	; 0x4c
   2a3d8:	bl	2a300 <g_strcmp0@plt+0x15134>
   2a3dc:	ldr	r2, [pc, #916]	; 2a778 <g_strcmp0@plt+0x155ac>
   2a3e0:	ldr	r1, [pc, #916]	; 2a77c <g_strcmp0@plt+0x155b0>
   2a3e4:	mov	r3, r0
   2a3e8:	mov	r5, r0
   2a3ec:	mov	r0, r7
   2a3f0:	bl	14e78 <g_key_file_set_value@plt>
   2a3f4:	mov	r0, r5
   2a3f8:	bl	14bd8 <g_free@plt>
   2a3fc:	ldr	r3, [pc, #872]	; 2a76c <g_strcmp0@plt+0x155a0>
   2a400:	ldr	r2, [pc, #888]	; 2a780 <g_strcmp0@plt+0x155b4>
   2a404:	ldr	r1, [pc, #872]	; 2a774 <g_strcmp0@plt+0x155a8>
   2a408:	mov	r0, r4
   2a40c:	bl	2a300 <g_strcmp0@plt+0x15134>
   2a410:	ldr	r1, [pc, #876]	; 2a784 <g_strcmp0@plt+0x155b8>
   2a414:	mov	r7, r0
   2a418:	bl	151cc <g_strcmp0@plt>
   2a41c:	mov	r5, r0
   2a420:	mov	r0, r7
   2a424:	bl	14bd8 <g_free@plt>
   2a428:	cmp	r5, #0
   2a42c:	ldr	r2, [pc, #848]	; 2a784 <g_strcmp0@plt+0x155b8>
   2a430:	ldreq	r3, [pc, #848]	; 2a788 <g_strcmp0@plt+0x155bc>
   2a434:	ldrne	r3, [pc, #848]	; 2a78c <g_strcmp0@plt+0x155c0>
   2a438:	ldr	r1, [pc, #848]	; 2a790 <g_strcmp0@plt+0x155c4>
   2a43c:	ldr	r0, [r4, #76]	; 0x4c
   2a440:	bl	14e78 <g_key_file_set_value@plt>
   2a444:	ldr	r3, [pc, #800]	; 2a76c <g_strcmp0@plt+0x155a0>
   2a448:	ldr	r2, [pc, #836]	; 2a794 <g_strcmp0@plt+0x155c8>
   2a44c:	ldr	r1, [pc, #800]	; 2a774 <g_strcmp0@plt+0x155a8>
   2a450:	mov	r0, r4
   2a454:	bl	2a300 <g_strcmp0@plt+0x15134>
   2a458:	ldr	r1, [pc, #824]	; 2a798 <g_strcmp0@plt+0x155cc>
   2a45c:	mov	r7, r0
   2a460:	bl	151cc <g_strcmp0@plt>
   2a464:	mov	r5, r0
   2a468:	mov	r0, r7
   2a46c:	bl	14bd8 <g_free@plt>
   2a470:	cmp	r5, #0
   2a474:	ldr	r2, [pc, #796]	; 2a798 <g_strcmp0@plt+0x155cc>
   2a478:	ldreq	r3, [pc, #776]	; 2a788 <g_strcmp0@plt+0x155bc>
   2a47c:	ldrne	r3, [pc, #776]	; 2a78c <g_strcmp0@plt+0x155c0>
   2a480:	ldr	r1, [pc, #776]	; 2a790 <g_strcmp0@plt+0x155c4>
   2a484:	ldr	r0, [r4, #76]	; 0x4c
   2a488:	bl	14e78 <g_key_file_set_value@plt>
   2a48c:	ldr	r3, [pc, #728]	; 2a76c <g_strcmp0@plt+0x155a0>
   2a490:	ldr	r2, [pc, #772]	; 2a79c <g_strcmp0@plt+0x155d0>
   2a494:	ldr	r1, [pc, #728]	; 2a774 <g_strcmp0@plt+0x155a8>
   2a498:	mov	r0, r4
   2a49c:	bl	2a300 <g_strcmp0@plt+0x15134>
   2a4a0:	ldr	r1, [pc, #760]	; 2a7a0 <g_strcmp0@plt+0x155d4>
   2a4a4:	mov	r7, r0
   2a4a8:	bl	151cc <g_strcmp0@plt>
   2a4ac:	mov	r5, r0
   2a4b0:	mov	r0, r7
   2a4b4:	bl	14bd8 <g_free@plt>
   2a4b8:	cmp	r5, #0
   2a4bc:	ldr	r2, [pc, #732]	; 2a7a0 <g_strcmp0@plt+0x155d4>
   2a4c0:	ldreq	r3, [pc, #704]	; 2a788 <g_strcmp0@plt+0x155bc>
   2a4c4:	ldrne	r3, [pc, #704]	; 2a78c <g_strcmp0@plt+0x155c0>
   2a4c8:	ldr	r1, [pc, #704]	; 2a790 <g_strcmp0@plt+0x155c4>
   2a4cc:	ldr	r0, [r4, #76]	; 0x4c
   2a4d0:	bl	14e78 <g_key_file_set_value@plt>
   2a4d4:	ldr	r3, [pc, #656]	; 2a76c <g_strcmp0@plt+0x155a0>
   2a4d8:	ldr	r2, [pc, #708]	; 2a7a4 <g_strcmp0@plt+0x155d8>
   2a4dc:	ldr	r1, [pc, #656]	; 2a774 <g_strcmp0@plt+0x155a8>
   2a4e0:	mov	r0, r4
   2a4e4:	bl	2a300 <g_strcmp0@plt+0x15134>
   2a4e8:	ldr	r1, [pc, #696]	; 2a7a8 <g_strcmp0@plt+0x155dc>
   2a4ec:	mov	r7, r0
   2a4f0:	bl	151cc <g_strcmp0@plt>
   2a4f4:	mov	r5, r0
   2a4f8:	mov	r0, r7
   2a4fc:	bl	14bd8 <g_free@plt>
   2a500:	cmp	r5, #0
   2a504:	ldr	r2, [pc, #668]	; 2a7a8 <g_strcmp0@plt+0x155dc>
   2a508:	ldreq	r3, [pc, #632]	; 2a788 <g_strcmp0@plt+0x155bc>
   2a50c:	ldrne	r3, [pc, #632]	; 2a78c <g_strcmp0@plt+0x155c0>
   2a510:	ldr	r1, [pc, #632]	; 2a790 <g_strcmp0@plt+0x155c4>
   2a514:	ldr	r0, [r4, #76]	; 0x4c
   2a518:	bl	14e78 <g_key_file_set_value@plt>
   2a51c:	ldr	r2, [pc, #648]	; 2a7ac <g_strcmp0@plt+0x155e0>
   2a520:	mov	r1, #32
   2a524:	mov	r0, #0
   2a528:	bl	14668 <g_log@plt>
   2a52c:	mov	r2, #0
   2a530:	mov	r1, r2
   2a534:	ldr	r0, [r4, #76]	; 0x4c
   2a538:	bl	14d40 <g_key_file_to_data@plt>
   2a53c:	mov	r5, r0
   2a540:	bl	14e9c <strlen@plt>
   2a544:	add	r3, sp, #16
   2a548:	mov	r1, r5
   2a54c:	mov	r2, r0
   2a550:	ldr	r0, [r4, #80]	; 0x50
   2a554:	bl	14920 <g_file_set_contents@plt>
   2a558:	ldr	r3, [sp, #16]
   2a55c:	cmp	r3, #0
   2a560:	beq	2a658 <g_strcmp0@plt+0x1548c>
   2a564:	ldr	r7, [r3]
   2a568:	bl	15040 <g_file_error_quark@plt>
   2a56c:	cmp	r7, r0
   2a570:	beq	2a5c4 <g_strcmp0@plt+0x153f8>
   2a574:	mov	r0, r5
   2a578:	bl	14bd8 <g_free@plt>
   2a57c:	ldr	r4, [sp, #16]
   2a580:	ldr	r0, [r4]
   2a584:	bl	14c2c <g_quark_to_string@plt>
   2a588:	ldr	r3, [r4, #4]
   2a58c:	ldr	ip, [pc, #540]	; 2a7b0 <g_strcmp0@plt+0x155e4>
   2a590:	str	r3, [sp, #12]
   2a594:	str	r0, [sp, #8]
   2a598:	ldr	r0, [r4, #8]
   2a59c:	ldr	r3, [pc, #528]	; 2a7b4 <g_strcmp0@plt+0x155e8>
   2a5a0:	str	r0, [sp, #4]
   2a5a4:	ldr	r2, [pc, #524]	; 2a7b8 <g_strcmp0@plt+0x155ec>
   2a5a8:	mov	r1, #8
   2a5ac:	str	ip, [sp]
   2a5b0:	mov	r0, #0
   2a5b4:	bl	14668 <g_log@plt>
   2a5b8:	add	r0, sp, #16
   2a5bc:	bl	14dac <g_clear_error@plt>
   2a5c0:	b	2a640 <g_strcmp0@plt+0x15474>
   2a5c4:	ldr	r8, [sp, #16]
   2a5c8:	mov	r7, #0
   2a5cc:	mov	r0, r7
   2a5d0:	ldr	r3, [r8, #8]
   2a5d4:	ldr	r2, [pc, #480]	; 2a7bc <g_strcmp0@plt+0x155f0>
   2a5d8:	mov	r1, #16
   2a5dc:	str	r7, [sp, #16]
   2a5e0:	bl	14668 <g_log@plt>
   2a5e4:	mov	r0, r8
   2a5e8:	bl	1453c <g_error_free@plt>
   2a5ec:	ldr	r3, [sp, #16]
   2a5f0:	cmp	r3, r7
   2a5f4:	beq	2a658 <g_strcmp0@plt+0x1548c>
   2a5f8:	mov	r0, r5
   2a5fc:	bl	14bd8 <g_free@plt>
   2a600:	ldr	r4, [sp, #16]
   2a604:	ldr	r0, [r4]
   2a608:	bl	14c2c <g_quark_to_string@plt>
   2a60c:	ldr	r3, [r4, #4]
   2a610:	ldr	ip, [pc, #424]	; 2a7c0 <g_strcmp0@plt+0x155f4>
   2a614:	str	r3, [sp, #12]
   2a618:	ldr	r2, [pc, #420]	; 2a7c4 <g_strcmp0@plt+0x155f8>
   2a61c:	ldr	r3, [pc, #400]	; 2a7b4 <g_strcmp0@plt+0x155e8>
   2a620:	mov	r1, #8
   2a624:	str	r0, [sp, #8]
   2a628:	ldr	lr, [r4, #8]
   2a62c:	mov	r0, r7
   2a630:	stm	sp, {ip, lr}
   2a634:	bl	14668 <g_log@plt>
   2a638:	add	r0, sp, #16
   2a63c:	bl	14dac <g_clear_error@plt>
   2a640:	ldr	r2, [sp, #20]
   2a644:	ldr	r3, [r6]
   2a648:	cmp	r2, r3
   2a64c:	bne	2a764 <g_strcmp0@plt+0x15598>
   2a650:	add	sp, sp, #24
   2a654:	pop	{r4, r5, r6, r7, r8, pc}
   2a658:	ldr	r2, [pc, #360]	; 2a7c8 <g_strcmp0@plt+0x155fc>
   2a65c:	mov	r1, #32
   2a660:	mov	r0, #0
   2a664:	bl	14668 <g_log@plt>
   2a668:	mov	r2, #0
   2a66c:	mov	r1, r2
   2a670:	ldr	r0, [r4, #96]	; 0x60
   2a674:	bl	14d40 <g_key_file_to_data@plt>
   2a678:	mov	r7, r0
   2a67c:	bl	14e9c <strlen@plt>
   2a680:	add	r3, sp, #16
   2a684:	mov	r1, r7
   2a688:	mov	r2, r0
   2a68c:	ldr	r0, [r4, #100]	; 0x64
   2a690:	bl	14920 <g_file_set_contents@plt>
   2a694:	ldr	r3, [sp, #16]
   2a698:	cmp	r3, #0
   2a69c:	beq	2a750 <g_strcmp0@plt+0x15584>
   2a6a0:	ldr	r4, [r3]
   2a6a4:	bl	15040 <g_file_error_quark@plt>
   2a6a8:	cmp	r4, r0
   2a6ac:	beq	2a6d8 <g_strcmp0@plt+0x1550c>
   2a6b0:	mov	r0, r7
   2a6b4:	bl	14bd8 <g_free@plt>
   2a6b8:	mov	r0, r5
   2a6bc:	bl	14bd8 <g_free@plt>
   2a6c0:	ldr	r4, [sp, #16]
   2a6c4:	ldr	r0, [r4]
   2a6c8:	bl	14c2c <g_quark_to_string@plt>
   2a6cc:	ldr	r3, [r4, #4]
   2a6d0:	ldr	ip, [pc, #244]	; 2a7cc <g_strcmp0@plt+0x15600>
   2a6d4:	b	2a590 <g_strcmp0@plt+0x153c4>
   2a6d8:	ldr	r8, [sp, #16]
   2a6dc:	mov	r4, #0
   2a6e0:	mov	r0, r4
   2a6e4:	ldr	r3, [r8, #8]
   2a6e8:	ldr	r2, [pc, #224]	; 2a7d0 <g_strcmp0@plt+0x15604>
   2a6ec:	mov	r1, #16
   2a6f0:	str	r4, [sp, #16]
   2a6f4:	bl	14668 <g_log@plt>
   2a6f8:	mov	r0, r8
   2a6fc:	bl	1453c <g_error_free@plt>
   2a700:	ldr	r3, [sp, #16]
   2a704:	cmp	r3, r4
   2a708:	beq	2a750 <g_strcmp0@plt+0x15584>
   2a70c:	mov	r0, r7
   2a710:	bl	14bd8 <g_free@plt>
   2a714:	mov	r0, r5
   2a718:	bl	14bd8 <g_free@plt>
   2a71c:	ldr	r5, [sp, #16]
   2a720:	ldr	r0, [r5]
   2a724:	bl	14c2c <g_quark_to_string@plt>
   2a728:	ldr	r3, [r5, #4]
   2a72c:	ldr	ip, [pc, #160]	; 2a7d4 <g_strcmp0@plt+0x15608>
   2a730:	str	r3, [sp, #12]
   2a734:	ldr	r2, [pc, #136]	; 2a7c4 <g_strcmp0@plt+0x155f8>
   2a738:	ldr	r3, [pc, #116]	; 2a7b4 <g_strcmp0@plt+0x155e8>
   2a73c:	mov	r1, #8
   2a740:	str	r0, [sp, #8]
   2a744:	mov	r0, r4
   2a748:	ldr	lr, [r5, #8]
   2a74c:	b	2a630 <g_strcmp0@plt+0x15464>
   2a750:	mov	r0, r7
   2a754:	bl	14bd8 <g_free@plt>
   2a758:	mov	r0, r5
   2a75c:	bl	14bd8 <g_free@plt>
   2a760:	b	2a640 <g_strcmp0@plt+0x15474>
   2a764:	bl	14b6c <__stack_chk_fail@plt>
   2a768:	andeq	fp, r4, r8, asr #19
   2a76c:	ldrdeq	r4, [r3], -ip
   2a770:	andeq	r4, r3, r4, ror #15
   2a774:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   2a778:	andeq	r9, r3, r4, lsl ip
   2a77c:	andeq	r9, r3, r4, lsr #24
   2a780:	andeq	r8, r3, r0, asr #3
   2a784:	andeq	r9, r3, ip, lsr #24
   2a788:	andeq	r4, r3, ip, ror r8
   2a78c:	andeq	r9, r3, r0, asr #24
   2a790:	andeq	r9, r3, r8, lsr ip
   2a794:	andeq	r9, r3, r8, asr #24
   2a798:	andeq	r9, r3, r0, asr ip
   2a79c:	andeq	r4, r3, r4, lsl #17
   2a7a0:	andeq	r9, r3, r0, ror #24
   2a7a4:	andeq	r8, r3, ip, lsl #16
   2a7a8:	andeq	r5, r3, r4, lsl #11
   2a7ac:	andeq	r9, r3, r0, ror ip
   2a7b0:	ldrdeq	r1, [r0], -sl
   2a7b4:	strdeq	r9, [r3], -ip
   2a7b8:	andeq	r4, r3, r4, ror r6
   2a7bc:	andeq	r9, r3, r0, lsr #25
   2a7c0:	andeq	r1, r0, pc, ror #1
   2a7c4:	andeq	r4, r3, r4, lsr #13
   2a7c8:			; <UNDEFINED> instruction: 0x00039cb8
   2a7cc:	andeq	r1, r0, r5, lsl #2
   2a7d0:	andeq	r9, r3, r4, ror #25
   2a7d4:	andeq	r1, r0, fp, lsl r1
   2a7d8:	ldr	r3, [pc, #584]	; 2aa28 <g_strcmp0@plt+0x1585c>
   2a7dc:	push	{r4, r5, r6, r7, r8, lr}
   2a7e0:	mov	r2, r3
   2a7e4:	mov	r7, r0
   2a7e8:	mov	r8, r1
   2a7ec:	ldr	r0, [pc, #568]	; 2aa2c <g_strcmp0@plt+0x15860>
   2a7f0:	ldr	r1, [pc, #568]	; 2aa30 <g_strcmp0@plt+0x15864>
   2a7f4:	bl	147d0 <g_hash_table_new_full@plt>
   2a7f8:	ldr	r4, [r7, #20]
   2a7fc:	cmp	r4, #0
   2a800:	mov	r5, r0
   2a804:	beq	2a814 <g_strcmp0@plt+0x15648>
   2a808:	mov	r0, r4
   2a80c:	bl	144ac <g_hash_table_ref@plt>
   2a810:	mov	r4, r0
   2a814:	cmp	r5, #0
   2a818:	beq	2a824 <g_strcmp0@plt+0x15658>
   2a81c:	mov	r0, r5
   2a820:	bl	14c14 <g_hash_table_unref@plt>
   2a824:	cmp	r8, #0
   2a828:	ldr	r5, [pc, #516]	; 2aa34 <g_strcmp0@plt+0x15868>
   2a82c:	beq	2a95c <g_strcmp0@plt+0x15790>
   2a830:	mov	r0, r8
   2a834:	bl	14bcc <g_quark_from_string@plt>
   2a838:	mov	r6, r0
   2a83c:	ldr	r0, [r5, #44]	; 0x2c
   2a840:	cmp	r0, #0
   2a844:	beq	2a934 <g_strcmp0@plt+0x15768>
   2a848:	cmp	r0, r6
   2a84c:	beq	2a904 <g_strcmp0@plt+0x15738>
   2a850:	ldr	r0, [r5, #48]	; 0x30
   2a854:	cmp	r0, #0
   2a858:	beq	2a978 <g_strcmp0@plt+0x157ac>
   2a85c:	cmp	r0, r6
   2a860:	beq	2a94c <g_strcmp0@plt+0x15780>
   2a864:	ldr	r0, [r5, #52]	; 0x34
   2a868:	cmp	r0, #0
   2a86c:	beq	2a998 <g_strcmp0@plt+0x157cc>
   2a870:	cmp	r0, r6
   2a874:	beq	2a94c <g_strcmp0@plt+0x15780>
   2a878:	ldr	r0, [r5, #56]	; 0x38
   2a87c:	cmp	r0, #0
   2a880:	beq	2a988 <g_strcmp0@plt+0x157bc>
   2a884:	cmp	r0, r6
   2a888:	beq	2a94c <g_strcmp0@plt+0x15780>
   2a88c:	ldr	r0, [r5, #60]	; 0x3c
   2a890:	cmp	r0, #0
   2a894:	beq	2a9a8 <g_strcmp0@plt+0x157dc>
   2a898:	cmp	r0, r6
   2a89c:	beq	2a94c <g_strcmp0@plt+0x15780>
   2a8a0:	ldr	r0, [r5, #64]	; 0x40
   2a8a4:	cmp	r0, #0
   2a8a8:	beq	2a9e8 <g_strcmp0@plt+0x1581c>
   2a8ac:	cmp	r0, r6
   2a8b0:	beq	2a9d8 <g_strcmp0@plt+0x1580c>
   2a8b4:	ldr	r0, [r5, #68]	; 0x44
   2a8b8:	cmp	r0, #0
   2a8bc:	beq	2aa08 <g_strcmp0@plt+0x1583c>
   2a8c0:	cmp	r0, r6
   2a8c4:	beq	2a9f8 <g_strcmp0@plt+0x1582c>
   2a8c8:	ldr	r0, [r5, #72]	; 0x48
   2a8cc:	cmp	r0, #0
   2a8d0:	beq	2a9c8 <g_strcmp0@plt+0x157fc>
   2a8d4:	cmp	r0, r6
   2a8d8:	beq	2a9b8 <g_strcmp0@plt+0x157ec>
   2a8dc:	ldr	r0, [r5, #76]	; 0x4c
   2a8e0:	cmp	r0, #0
   2a8e4:	beq	2aa18 <g_strcmp0@plt+0x1584c>
   2a8e8:	cmp	r0, r6
   2a8ec:	movne	r5, r4
   2a8f0:	bne	2a92c <g_strcmp0@plt+0x15760>
   2a8f4:	ldr	r5, [r7, #40]	; 0x28
   2a8f8:	cmp	r5, #0
   2a8fc:	bne	2a910 <g_strcmp0@plt+0x15744>
   2a900:	b	2a91c <g_strcmp0@plt+0x15750>
   2a904:	ldr	r5, [r7, #20]
   2a908:	cmp	r5, #0
   2a90c:	beq	2a91c <g_strcmp0@plt+0x15750>
   2a910:	mov	r0, r5
   2a914:	bl	144ac <g_hash_table_ref@plt>
   2a918:	mov	r5, r0
   2a91c:	cmp	r4, #0
   2a920:	beq	2a92c <g_strcmp0@plt+0x15760>
   2a924:	mov	r0, r4
   2a928:	bl	14c14 <g_hash_table_unref@plt>
   2a92c:	mov	r0, r5
   2a930:	pop	{r4, r5, r6, r7, r8, pc}
   2a934:	ldr	r0, [pc, #252]	; 2aa38 <g_strcmp0@plt+0x1586c>
   2a938:	bl	14d64 <g_quark_from_static_string@plt>
   2a93c:	cmp	r0, r6
   2a940:	str	r0, [r5, #44]	; 0x2c
   2a944:	bne	2a850 <g_strcmp0@plt+0x15684>
   2a948:	b	2a904 <g_strcmp0@plt+0x15738>
   2a94c:	ldr	r5, [r7, #24]
   2a950:	cmp	r5, #0
   2a954:	bne	2a910 <g_strcmp0@plt+0x15744>
   2a958:	b	2a91c <g_strcmp0@plt+0x15750>
   2a95c:	ldr	r6, [r5, #44]	; 0x2c
   2a960:	cmp	r6, #0
   2a964:	beq	2a934 <g_strcmp0@plt+0x15768>
   2a968:	ldr	r6, [r5, #48]	; 0x30
   2a96c:	cmp	r6, #0
   2a970:	movne	r6, r8
   2a974:	bne	2a864 <g_strcmp0@plt+0x15698>
   2a978:	ldr	r0, [pc, #188]	; 2aa3c <g_strcmp0@plt+0x15870>
   2a97c:	bl	14d64 <g_quark_from_static_string@plt>
   2a980:	str	r0, [r5, #48]	; 0x30
   2a984:	b	2a85c <g_strcmp0@plt+0x15690>
   2a988:	ldr	r0, [pc, #176]	; 2aa40 <g_strcmp0@plt+0x15874>
   2a98c:	bl	14d64 <g_quark_from_static_string@plt>
   2a990:	str	r0, [r5, #56]	; 0x38
   2a994:	b	2a884 <g_strcmp0@plt+0x156b8>
   2a998:	ldr	r0, [pc, #164]	; 2aa44 <g_strcmp0@plt+0x15878>
   2a99c:	bl	14d64 <g_quark_from_static_string@plt>
   2a9a0:	str	r0, [r5, #52]	; 0x34
   2a9a4:	b	2a870 <g_strcmp0@plt+0x156a4>
   2a9a8:	ldr	r0, [pc, #152]	; 2aa48 <g_strcmp0@plt+0x1587c>
   2a9ac:	bl	14d64 <g_quark_from_static_string@plt>
   2a9b0:	str	r0, [r5, #60]	; 0x3c
   2a9b4:	b	2a898 <g_strcmp0@plt+0x156cc>
   2a9b8:	ldr	r5, [r7, #36]	; 0x24
   2a9bc:	cmp	r5, #0
   2a9c0:	bne	2a910 <g_strcmp0@plt+0x15744>
   2a9c4:	b	2a91c <g_strcmp0@plt+0x15750>
   2a9c8:	ldr	r0, [pc, #124]	; 2aa4c <g_strcmp0@plt+0x15880>
   2a9cc:	bl	14d64 <g_quark_from_static_string@plt>
   2a9d0:	str	r0, [r5, #72]	; 0x48
   2a9d4:	b	2a8d4 <g_strcmp0@plt+0x15708>
   2a9d8:	ldr	r5, [r7, #28]
   2a9dc:	cmp	r5, #0
   2a9e0:	bne	2a910 <g_strcmp0@plt+0x15744>
   2a9e4:	b	2a91c <g_strcmp0@plt+0x15750>
   2a9e8:	ldr	r0, [pc, #96]	; 2aa50 <g_strcmp0@plt+0x15884>
   2a9ec:	bl	14d64 <g_quark_from_static_string@plt>
   2a9f0:	str	r0, [r5, #64]	; 0x40
   2a9f4:	b	2a8ac <g_strcmp0@plt+0x156e0>
   2a9f8:	ldr	r5, [r7, #32]
   2a9fc:	cmp	r5, #0
   2aa00:	bne	2a910 <g_strcmp0@plt+0x15744>
   2aa04:	b	2a91c <g_strcmp0@plt+0x15750>
   2aa08:	ldr	r0, [pc, #68]	; 2aa54 <g_strcmp0@plt+0x15888>
   2aa0c:	bl	14d64 <g_quark_from_static_string@plt>
   2aa10:	str	r0, [r5, #68]	; 0x44
   2aa14:	b	2a8c0 <g_strcmp0@plt+0x156f4>
   2aa18:	ldr	r0, [pc, #56]	; 2aa58 <g_strcmp0@plt+0x1588c>
   2aa1c:	bl	14d64 <g_quark_from_static_string@plt>
   2aa20:	str	r0, [r5, #76]	; 0x4c
   2aa24:	b	2a8e8 <g_strcmp0@plt+0x1571c>
   2aa28:	andeq	r9, r2, r4, ror #18
   2aa2c:	andeq	r4, r1, r8, lsr #23
   2aa30:	andeq	r4, r1, r8, lsl #12
   2aa34:	andeq	ip, r4, r0, lsr #8
   2aa38:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   2aa3c:	andeq	r7, r3, r4, lsr r5
   2aa40:	andeq	r9, r3, r0, lsl #26
   2aa44:	strdeq	r9, [r3], -ip
   2aa48:	andeq	r9, r3, r8, lsl #26
   2aa4c:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   2aa50:	andeq	r4, r3, r8, lsr #16
   2aa54:	andeq	r4, r3, ip, ror r9
   2aa58:	andeq	r7, r3, r0, lsl r6
   2aa5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2aa60:	mov	r7, r3
   2aa64:	ldr	r3, [pc, #416]	; 2ac0c <g_strcmp0@plt+0x15a40>
   2aa68:	mov	r5, r0
   2aa6c:	mov	r6, r1
   2aa70:	mov	r9, r2
   2aa74:	ldr	r1, [pc, #404]	; 2ac10 <g_strcmp0@plt+0x15a44>
   2aa78:	mov	r2, r3
   2aa7c:	ldr	r0, [pc, #400]	; 2ac14 <g_strcmp0@plt+0x15a48>
   2aa80:	bl	147d0 <g_hash_table_new_full@plt>
   2aa84:	mov	r1, r6
   2aa88:	mov	r4, r0
   2aa8c:	mov	r0, r5
   2aa90:	bl	2a7d8 <g_strcmp0@plt+0x1560c>
   2aa94:	cmp	r4, #0
   2aa98:	mov	r8, r0
   2aa9c:	beq	2aaa8 <g_strcmp0@plt+0x158dc>
   2aaa0:	mov	r0, r4
   2aaa4:	bl	14c14 <g_hash_table_unref@plt>
   2aaa8:	mov	r1, r9
   2aaac:	mov	r0, r8
   2aab0:	bl	14f74 <g_hash_table_contains@plt>
   2aab4:	subs	r4, r0, #0
   2aab8:	beq	2ab50 <g_strcmp0@plt+0x15984>
   2aabc:	mov	r1, r9
   2aac0:	mov	r0, r8
   2aac4:	bl	14a94 <g_hash_table_lookup@plt>
   2aac8:	mov	r2, #0
   2aacc:	ldr	r1, [pc, #324]	; 2ac18 <g_strcmp0@plt+0x15a4c>
   2aad0:	bl	14530 <g_strsplit_set@plt>
   2aad4:	subs	sl, r0, #0
   2aad8:	beq	2ab90 <g_strcmp0@plt+0x159c4>
   2aadc:	ldr	r0, [sl]
   2aae0:	cmp	r0, #0
   2aae4:	beq	2ab90 <g_strcmp0@plt+0x159c4>
   2aae8:	mov	r5, sl
   2aaec:	mov	r2, sl
   2aaf0:	mov	r3, #0
   2aaf4:	b	2aafc <g_strcmp0@plt+0x15930>
   2aaf8:	mov	r3, r6
   2aafc:	ldr	r1, [r2, #4]!
   2ab00:	add	r6, r3, #1
   2ab04:	cmp	r1, #0
   2ab08:	bne	2aaf8 <g_strcmp0@plt+0x1592c>
   2ab0c:	cmp	r7, #0
   2ab10:	beq	2ab38 <g_strcmp0@plt+0x1596c>
   2ab14:	add	r4, sl, r3, lsl #2
   2ab18:	b	2ab28 <g_strcmp0@plt+0x1595c>
   2ab1c:	cmp	r4, r5
   2ab20:	beq	2abb0 <g_strcmp0@plt+0x159e4>
   2ab24:	ldr	r0, [r5, #4]!
   2ab28:	mov	r1, r7
   2ab2c:	bl	151cc <g_strcmp0@plt>
   2ab30:	cmp	r0, #0
   2ab34:	bne	2ab1c <g_strcmp0@plt+0x15950>
   2ab38:	mov	r1, r6
   2ab3c:	mov	r0, sl
   2ab40:	bl	2a05c <g_strcmp0@plt+0x14e90>
   2ab44:	cmp	r8, #0
   2ab48:	bne	2ab84 <g_strcmp0@plt+0x159b8>
   2ab4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ab50:	mov	r0, r9
   2ab54:	bl	147e8 <g_strdup@plt>
   2ab58:	mov	r2, r4
   2ab5c:	ldr	r1, [pc, #180]	; 2ac18 <g_strcmp0@plt+0x15a4c>
   2ab60:	mov	r5, r0
   2ab64:	mov	r0, r7
   2ab68:	bl	14dc4 <g_strconcat@plt>
   2ab6c:	mov	r1, r5
   2ab70:	mov	r2, r0
   2ab74:	mov	r0, r8
   2ab78:	bl	1480c <g_hash_table_insert@plt>
   2ab7c:	cmp	r8, #0
   2ab80:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ab84:	mov	r0, r8
   2ab88:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2ab8c:	b	14c14 <g_hash_table_unref@plt>
   2ab90:	cmp	r7, #0
   2ab94:	movne	r6, #0
   2ab98:	bne	2abb0 <g_strcmp0@plt+0x159e4>
   2ab9c:	mov	r6, r7
   2aba0:	mov	r1, r6
   2aba4:	mov	r0, sl
   2aba8:	bl	2a05c <g_strcmp0@plt+0x14e90>
   2abac:	b	2ab44 <g_strcmp0@plt+0x15978>
   2abb0:	mov	r0, r9
   2abb4:	bl	147e8 <g_strdup@plt>
   2abb8:	mov	r1, r9
   2abbc:	mov	r5, r0
   2abc0:	mov	r0, r8
   2abc4:	bl	14a94 <g_hash_table_lookup@plt>
   2abc8:	mov	r1, r7
   2abcc:	mov	r2, #0
   2abd0:	bl	14dc4 <g_strconcat@plt>
   2abd4:	mov	r2, #0
   2abd8:	ldr	r1, [pc, #56]	; 2ac18 <g_strcmp0@plt+0x15a4c>
   2abdc:	mov	r4, r0
   2abe0:	bl	14dc4 <g_strconcat@plt>
   2abe4:	mov	r1, r5
   2abe8:	mov	r2, r0
   2abec:	mov	r0, r8
   2abf0:	bl	1480c <g_hash_table_insert@plt>
   2abf4:	mov	r0, r4
   2abf8:	bl	14bd8 <g_free@plt>
   2abfc:	mov	r1, r6
   2ac00:	mov	r0, sl
   2ac04:	bl	2a05c <g_strcmp0@plt+0x14e90>
   2ac08:	b	2ab44 <g_strcmp0@plt+0x15978>
   2ac0c:	andeq	r9, r2, r4, ror #18
   2ac10:	andeq	r4, r1, r8, lsl #12
   2ac14:	andeq	r4, r1, r8, lsr #23
   2ac18:	strdeq	r7, [r3], -ip
   2ac1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ac20:	sub	sp, sp, #12
   2ac24:	ldr	r4, [pc, #216]	; 2ad04 <g_strcmp0@plt+0x15b38>
   2ac28:	mov	r8, r3
   2ac2c:	ldr	r3, [sp, #52]	; 0x34
   2ac30:	mov	r5, r0
   2ac34:	mov	r7, r2
   2ac38:	mov	r6, r1
   2ac3c:	mov	r0, r1
   2ac40:	mov	r2, #0
   2ac44:	mov	r1, r4
   2ac48:	str	r3, [sp]
   2ac4c:	bl	14dc4 <g_strconcat@plt>
   2ac50:	mov	r1, r7
   2ac54:	mov	r2, #0
   2ac58:	str	r0, [sp, #4]
   2ac5c:	bl	14dc4 <g_strconcat@plt>
   2ac60:	mov	r1, r4
   2ac64:	mov	r2, #0
   2ac68:	mov	r9, r0
   2ac6c:	bl	14dc4 <g_strconcat@plt>
   2ac70:	mov	r1, r8
   2ac74:	mov	r2, #0
   2ac78:	mov	sl, r0
   2ac7c:	bl	14dc4 <g_strconcat@plt>
   2ac80:	mov	r1, r4
   2ac84:	mov	r2, #0
   2ac88:	mov	fp, r0
   2ac8c:	bl	14dc4 <g_strconcat@plt>
   2ac90:	mov	r4, r0
   2ac94:	mov	r0, fp
   2ac98:	bl	14bd8 <g_free@plt>
   2ac9c:	mov	r0, sl
   2aca0:	bl	14bd8 <g_free@plt>
   2aca4:	mov	r0, r9
   2aca8:	bl	14bd8 <g_free@plt>
   2acac:	ldr	r3, [sp, #4]
   2acb0:	mov	r0, r3
   2acb4:	bl	14bd8 <g_free@plt>
   2acb8:	mov	r0, r4
   2acbc:	ldr	r9, [r5, #16]
   2acc0:	bl	147e8 <g_strdup@plt>
   2acc4:	mov	sl, r0
   2acc8:	ldr	r0, [sp]
   2accc:	bl	147e8 <g_strdup@plt>
   2acd0:	mov	r1, sl
   2acd4:	mov	r2, r0
   2acd8:	mov	r0, r9
   2acdc:	bl	1480c <g_hash_table_insert@plt>
   2ace0:	mov	r0, r5
   2ace4:	mov	r3, r8
   2ace8:	mov	r2, r7
   2acec:	mov	r1, r6
   2acf0:	bl	2aa5c <g_strcmp0@plt+0x15890>
   2acf4:	mov	r0, r4
   2acf8:	add	sp, sp, #12
   2acfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ad00:	b	14bd8 <g_free@plt>
   2ad04:	strdeq	r7, [r3], -ip
   2ad08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ad0c:	sub	sp, sp, #28
   2ad10:	mov	r8, r3
   2ad14:	ldr	r3, [sp, #64]	; 0x40
   2ad18:	mov	r5, r0
   2ad1c:	mov	r7, r2
   2ad20:	mov	r0, r1
   2ad24:	mov	r2, #0
   2ad28:	mov	r6, r1
   2ad2c:	ldr	r1, [pc, #264]	; 2ae3c <g_strcmp0@plt+0x15c70>
   2ad30:	str	r3, [sp, #20]
   2ad34:	ldr	r9, [sp, #68]	; 0x44
   2ad38:	bl	14dc4 <g_strconcat@plt>
   2ad3c:	mov	r1, r7
   2ad40:	mov	r2, #0
   2ad44:	str	r0, [sp, #12]
   2ad48:	bl	14dc4 <g_strconcat@plt>
   2ad4c:	mov	r2, #0
   2ad50:	ldr	r1, [pc, #228]	; 2ae3c <g_strcmp0@plt+0x15c70>
   2ad54:	mov	sl, r0
   2ad58:	bl	14dc4 <g_strconcat@plt>
   2ad5c:	mov	r1, r8
   2ad60:	mov	r2, #0
   2ad64:	mov	fp, r0
   2ad68:	bl	14dc4 <g_strconcat@plt>
   2ad6c:	mov	r2, #0
   2ad70:	ldr	r1, [pc, #196]	; 2ae3c <g_strcmp0@plt+0x15c70>
   2ad74:	str	r0, [sp, #16]
   2ad78:	bl	14dc4 <g_strconcat@plt>
   2ad7c:	ldr	r3, [sp, #16]
   2ad80:	mov	r4, r0
   2ad84:	mov	r0, r3
   2ad88:	bl	14bd8 <g_free@plt>
   2ad8c:	mov	r0, fp
   2ad90:	bl	14bd8 <g_free@plt>
   2ad94:	mov	r0, sl
   2ad98:	bl	14bd8 <g_free@plt>
   2ad9c:	ldr	r0, [sp, #12]
   2ada0:	bl	14bd8 <g_free@plt>
   2ada4:	mov	r1, r4
   2ada8:	ldr	r0, [r5, #16]
   2adac:	bl	14f74 <g_hash_table_contains@plt>
   2adb0:	cmp	r0, #1
   2adb4:	beq	2ade8 <g_strcmp0@plt+0x15c1c>
   2adb8:	ldr	r3, [sp, #20]
   2adbc:	str	r9, [sp, #4]
   2adc0:	str	r3, [sp]
   2adc4:	mov	r2, r7
   2adc8:	mov	r3, r8
   2adcc:	mov	r1, r6
   2add0:	mov	r0, r5
   2add4:	bl	2ac1c <g_strcmp0@plt+0x15a50>
   2add8:	mov	r0, r4
   2addc:	add	sp, sp, #28
   2ade0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ade4:	b	14bd8 <g_free@plt>
   2ade8:	mov	r1, r4
   2adec:	ldr	r0, [r5, #16]
   2adf0:	bl	14a94 <g_hash_table_lookup@plt>
   2adf4:	mov	r1, r9
   2adf8:	bl	151cc <g_strcmp0@plt>
   2adfc:	cmp	r0, #0
   2ae00:	beq	2add8 <g_strcmp0@plt+0x15c0c>
   2ae04:	mov	r0, r4
   2ae08:	ldr	r5, [r5, #16]
   2ae0c:	bl	147e8 <g_strdup@plt>
   2ae10:	mov	r6, r0
   2ae14:	mov	r0, r9
   2ae18:	bl	147e8 <g_strdup@plt>
   2ae1c:	mov	r1, r6
   2ae20:	mov	r2, r0
   2ae24:	mov	r0, r5
   2ae28:	bl	1480c <g_hash_table_insert@plt>
   2ae2c:	mov	r0, r4
   2ae30:	add	sp, sp, #28
   2ae34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ae38:	b	14bd8 <g_free@plt>
   2ae3c:	strdeq	r7, [r3], -ip
   2ae40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ae44:	mov	r5, r0
   2ae48:	sub	sp, sp, #12
   2ae4c:	mov	r7, r2
   2ae50:	mov	r0, r1
   2ae54:	mov	r2, #0
   2ae58:	mov	r6, r1
   2ae5c:	ldr	r1, [pc, #192]	; 2af24 <g_strcmp0@plt+0x15d58>
   2ae60:	mov	r8, r3
   2ae64:	bl	14dc4 <g_strconcat@plt>
   2ae68:	mov	r1, r7
   2ae6c:	mov	r2, #0
   2ae70:	mov	r9, r0
   2ae74:	bl	14dc4 <g_strconcat@plt>
   2ae78:	mov	r2, #0
   2ae7c:	ldr	r1, [pc, #160]	; 2af24 <g_strcmp0@plt+0x15d58>
   2ae80:	mov	sl, r0
   2ae84:	bl	14dc4 <g_strconcat@plt>
   2ae88:	mov	r1, r8
   2ae8c:	mov	r2, #0
   2ae90:	mov	fp, r0
   2ae94:	bl	14dc4 <g_strconcat@plt>
   2ae98:	mov	r2, #0
   2ae9c:	ldr	r1, [pc, #128]	; 2af24 <g_strcmp0@plt+0x15d58>
   2aea0:	str	r0, [sp, #4]
   2aea4:	bl	14dc4 <g_strconcat@plt>
   2aea8:	ldr	r3, [sp, #4]
   2aeac:	mov	r4, r0
   2aeb0:	mov	r0, r3
   2aeb4:	bl	14bd8 <g_free@plt>
   2aeb8:	mov	r0, fp
   2aebc:	bl	14bd8 <g_free@plt>
   2aec0:	mov	r0, sl
   2aec4:	bl	14bd8 <g_free@plt>
   2aec8:	mov	r0, r9
   2aecc:	bl	14bd8 <g_free@plt>
   2aed0:	mov	r1, r4
   2aed4:	ldr	r0, [r5, #16]
   2aed8:	bl	14f74 <g_hash_table_contains@plt>
   2aedc:	cmp	r0, #1
   2aee0:	beq	2aef4 <g_strcmp0@plt+0x15d28>
   2aee4:	mov	r0, r4
   2aee8:	add	sp, sp, #12
   2aeec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2aef0:	b	14bd8 <g_free@plt>
   2aef4:	mov	r1, r4
   2aef8:	ldr	r0, [r5, #16]
   2aefc:	bl	14de8 <g_hash_table_remove@plt>
   2af00:	mov	r0, r5
   2af04:	mov	r3, r8
   2af08:	mov	r2, r7
   2af0c:	mov	r1, r6
   2af10:	bl	2aa5c <g_strcmp0@plt+0x15890>
   2af14:	mov	r0, r4
   2af18:	add	sp, sp, #12
   2af1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2af20:	b	14bd8 <g_free@plt>
   2af24:	strdeq	r7, [r3], -ip
   2af28:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2af2c:	mov	r5, r0
   2af30:	ldr	r3, [pc, #248]	; 2b030 <g_strcmp0@plt+0x15e64>
   2af34:	mov	r6, r1
   2af38:	mov	r2, r3
   2af3c:	ldr	r1, [pc, #240]	; 2b034 <g_strcmp0@plt+0x15e68>
   2af40:	ldr	r0, [pc, #240]	; 2b038 <g_strcmp0@plt+0x15e6c>
   2af44:	bl	147d0 <g_hash_table_new_full@plt>
   2af48:	mov	r1, r6
   2af4c:	mov	r4, r0
   2af50:	mov	r0, r5
   2af54:	bl	2a7d8 <g_strcmp0@plt+0x1560c>
   2af58:	cmp	r4, #0
   2af5c:	mov	sl, r0
   2af60:	beq	2af6c <g_strcmp0@plt+0x15da0>
   2af64:	mov	r0, r4
   2af68:	bl	14c14 <g_hash_table_unref@plt>
   2af6c:	mov	r0, sl
   2af70:	bl	14758 <g_hash_table_get_keys@plt>
   2af74:	subs	fp, r0, #0
   2af78:	beq	2b028 <g_strcmp0@plt+0x15e5c>
   2af7c:	ldr	r9, [pc, #184]	; 2b03c <g_strcmp0@plt+0x15e70>
   2af80:	mov	r4, fp
   2af84:	mov	r5, #0
   2af88:	b	2afd0 <g_strcmp0@plt+0x15e04>
   2af8c:	mov	r0, r5
   2af90:	bl	14dc4 <g_strconcat@plt>
   2af94:	mov	r2, #0
   2af98:	mov	r1, r9
   2af9c:	mov	r8, r0
   2afa0:	bl	14dc4 <g_strconcat@plt>
   2afa4:	mov	r7, r0
   2afa8:	mov	r0, r5
   2afac:	bl	14bd8 <g_free@plt>
   2afb0:	mov	r0, r8
   2afb4:	bl	14bd8 <g_free@plt>
   2afb8:	mov	r5, r7
   2afbc:	mov	r0, r6
   2afc0:	bl	14bd8 <g_free@plt>
   2afc4:	ldr	r4, [r4, #4]
   2afc8:	cmp	r4, #0
   2afcc:	beq	2b008 <g_strcmp0@plt+0x15e3c>
   2afd0:	ldr	r0, [r4]
   2afd4:	bl	147e8 <g_strdup@plt>
   2afd8:	mov	r2, #0
   2afdc:	cmp	r5, r2
   2afe0:	mov	r6, r0
   2afe4:	mov	r1, r0
   2afe8:	bne	2af8c <g_strcmp0@plt+0x15dc0>
   2afec:	mov	r2, r5
   2aff0:	mov	r1, r9
   2aff4:	bl	14dc4 <g_strconcat@plt>
   2aff8:	mov	r5, r0
   2affc:	mov	r0, #0
   2b000:	bl	14bd8 <g_free@plt>
   2b004:	b	2afbc <g_strcmp0@plt+0x15df0>
   2b008:	mov	r0, fp
   2b00c:	bl	14764 <g_list_free@plt>
   2b010:	cmp	sl, #0
   2b014:	beq	2b020 <g_strcmp0@plt+0x15e54>
   2b018:	mov	r0, sl
   2b01c:	bl	14c14 <g_hash_table_unref@plt>
   2b020:	mov	r0, r5
   2b024:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b028:	mov	r5, fp
   2b02c:	b	2b010 <g_strcmp0@plt+0x15e44>
   2b030:	andeq	r9, r2, r4, ror #18
   2b034:	andeq	r4, r1, r8, lsl #12
   2b038:	andeq	r4, r1, r8, lsr #23
   2b03c:	strdeq	r7, [r3], -ip
   2b040:	ldr	r3, [pc, #148]	; 2b0dc <g_strcmp0@plt+0x15f10>
   2b044:	push	{r4, r5, r6, r7, r8, lr}
   2b048:	mov	r4, r0
   2b04c:	mov	r7, r1
   2b050:	mov	r5, r2
   2b054:	ldr	r1, [pc, #132]	; 2b0e0 <g_strcmp0@plt+0x15f14>
   2b058:	mov	r2, r3
   2b05c:	ldr	r0, [pc, #128]	; 2b0e4 <g_strcmp0@plt+0x15f18>
   2b060:	bl	147d0 <g_hash_table_new_full@plt>
   2b064:	mov	r1, r7
   2b068:	mov	r6, r0
   2b06c:	mov	r0, r4
   2b070:	bl	2a7d8 <g_strcmp0@plt+0x1560c>
   2b074:	cmp	r6, #0
   2b078:	mov	r4, r0
   2b07c:	beq	2b088 <g_strcmp0@plt+0x15ebc>
   2b080:	mov	r0, r6
   2b084:	bl	14c14 <g_hash_table_unref@plt>
   2b088:	mov	r1, r5
   2b08c:	mov	r0, r4
   2b090:	bl	14a94 <g_hash_table_lookup@plt>
   2b094:	ldr	r2, [pc, #76]	; 2b0e8 <g_strcmp0@plt+0x15f1c>
   2b098:	mov	r1, #32
   2b09c:	mov	r3, r0
   2b0a0:	mov	r0, #0
   2b0a4:	bl	14668 <g_log@plt>
   2b0a8:	mov	r1, r5
   2b0ac:	mov	r0, r4
   2b0b0:	bl	14a94 <g_hash_table_lookup@plt>
   2b0b4:	bl	147e8 <g_strdup@plt>
   2b0b8:	mov	r5, r0
   2b0bc:	mov	r0, #0
   2b0c0:	bl	14bd8 <g_free@plt>
   2b0c4:	cmp	r4, #0
   2b0c8:	beq	2b0d4 <g_strcmp0@plt+0x15f08>
   2b0cc:	mov	r0, r4
   2b0d0:	bl	14c14 <g_hash_table_unref@plt>
   2b0d4:	mov	r0, r5
   2b0d8:	pop	{r4, r5, r6, r7, r8, pc}
   2b0dc:	andeq	r9, r2, r4, ror #18
   2b0e0:	andeq	r4, r1, r8, lsl #12
   2b0e4:	andeq	r4, r1, r8, lsr #23
   2b0e8:	andeq	r9, r3, r4, lsl sp
   2b0ec:	ldr	r2, [pc, #40]	; 2b11c <g_strcmp0@plt+0x15f50>
   2b0f0:	push	{lr}		; (str lr, [sp, #-4]!)
   2b0f4:	sub	sp, sp, #12
   2b0f8:	mov	r1, #0
   2b0fc:	str	r1, [sp]
   2b100:	mov	r3, r0
   2b104:	ldr	r1, [pc, #20]	; 2b120 <g_strcmp0@plt+0x15f54>
   2b108:	ldr	r0, [r2]
   2b10c:	ldr	r2, [pc, #16]	; 2b124 <g_strcmp0@plt+0x15f58>
   2b110:	bl	15190 <g_signal_connect_object@plt>
   2b114:	add	sp, sp, #12
   2b118:	pop	{pc}		; (ldr pc, [sp], #4)
   2b11c:	andeq	ip, r4, r0, asr #32
   2b120:	andeq	r4, r3, r0, asr #16
   2b124:			; <UNDEFINED> instruction: 0x0002b3bc
   2b128:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b12c:	sub	sp, sp, #20
   2b130:	mov	r5, r0
   2b134:	str	r1, [sp, #12]
   2b138:	mov	r0, r2
   2b13c:	ldr	r1, [pc, #284]	; 2b260 <g_strcmp0@plt+0x16094>
   2b140:	mov	r6, r2
   2b144:	mov	r2, #0
   2b148:	mov	r7, r3
   2b14c:	ldr	r8, [sp, #56]	; 0x38
   2b150:	bl	14dc4 <g_strconcat@plt>
   2b154:	mov	r1, r7
   2b158:	mov	r2, #0
   2b15c:	mov	r9, r0
   2b160:	bl	14dc4 <g_strconcat@plt>
   2b164:	mov	r2, #0
   2b168:	ldr	r1, [pc, #240]	; 2b260 <g_strcmp0@plt+0x16094>
   2b16c:	mov	sl, r0
   2b170:	bl	14dc4 <g_strconcat@plt>
   2b174:	mov	r1, r8
   2b178:	mov	r2, #0
   2b17c:	mov	fp, r0
   2b180:	bl	14dc4 <g_strconcat@plt>
   2b184:	mov	r2, #0
   2b188:	ldr	r1, [pc, #208]	; 2b260 <g_strcmp0@plt+0x16094>
   2b18c:	str	r0, [sp, #8]
   2b190:	bl	14dc4 <g_strconcat@plt>
   2b194:	ldr	r3, [sp, #8]
   2b198:	mov	r4, r0
   2b19c:	mov	r0, r3
   2b1a0:	bl	14bd8 <g_free@plt>
   2b1a4:	mov	r0, fp
   2b1a8:	bl	14bd8 <g_free@plt>
   2b1ac:	mov	r0, sl
   2b1b0:	bl	14bd8 <g_free@plt>
   2b1b4:	mov	r0, r9
   2b1b8:	bl	14bd8 <g_free@plt>
   2b1bc:	ldr	r0, [pc, #160]	; 2b264 <g_strcmp0@plt+0x16098>
   2b1c0:	bl	147e8 <g_strdup@plt>
   2b1c4:	mov	r1, r4
   2b1c8:	mov	r9, r0
   2b1cc:	ldr	r0, [r5, #16]
   2b1d0:	bl	14f74 <g_hash_table_contains@plt>
   2b1d4:	cmp	r0, #1
   2b1d8:	beq	2b1f4 <g_strcmp0@plt+0x16028>
   2b1dc:	mov	r0, r9
   2b1e0:	bl	14bd8 <g_free@plt>
   2b1e4:	mov	r0, r4
   2b1e8:	add	sp, sp, #20
   2b1ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b1f0:	b	14bd8 <g_free@plt>
   2b1f4:	cmp	r9, #0
   2b1f8:	ldr	sl, [pc, #104]	; 2b268 <g_strcmp0@plt+0x1609c>
   2b1fc:	beq	2b244 <g_strcmp0@plt+0x16078>
   2b200:	mov	r0, r9
   2b204:	bl	14bcc <g_quark_from_string@plt>
   2b208:	mov	fp, r0
   2b20c:	ldr	r0, [sl, #80]	; 0x50
   2b210:	cmp	r0, #0
   2b214:	beq	2b250 <g_strcmp0@plt+0x16084>
   2b218:	cmp	r0, fp
   2b21c:	bne	2b1dc <g_strcmp0@plt+0x16010>
   2b220:	ldr	r0, [r5]
   2b224:	mov	r2, r6
   2b228:	str	r8, [sp]
   2b22c:	mov	r3, r7
   2b230:	ldr	r6, [r0, #68]	; 0x44
   2b234:	ldr	r1, [sp, #12]
   2b238:	mov	r0, r5
   2b23c:	blx	r6
   2b240:	b	2b1dc <g_strcmp0@plt+0x16010>
   2b244:	ldr	fp, [sl, #80]	; 0x50
   2b248:	cmp	fp, #0
   2b24c:	bne	2b1dc <g_strcmp0@plt+0x16010>
   2b250:	ldr	r0, [pc, #12]	; 2b264 <g_strcmp0@plt+0x16098>
   2b254:	bl	14d64 <g_quark_from_static_string@plt>
   2b258:	str	r0, [sl, #80]	; 0x50
   2b25c:	b	2b218 <g_strcmp0@plt+0x1604c>
   2b260:	strdeq	r7, [r3], -ip
   2b264:	andeq	r4, r3, r4, asr r8
   2b268:	andeq	ip, r4, r0, lsr #8
   2b26c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b270:	sub	sp, sp, #28
   2b274:	mov	r8, r3
   2b278:	ldr	r3, [sp, #64]	; 0x40
   2b27c:	mov	r5, r0
   2b280:	mov	r7, r2
   2b284:	mov	r0, r1
   2b288:	mov	r2, #0
   2b28c:	mov	r6, r1
   2b290:	ldr	r1, [pc, #288]	; 2b3b8 <g_strcmp0@plt+0x161ec>
   2b294:	str	r3, [sp, #20]
   2b298:	ldr	fp, [sp, #68]	; 0x44
   2b29c:	bl	14dc4 <g_strconcat@plt>
   2b2a0:	mov	r1, r7
   2b2a4:	mov	r2, #0
   2b2a8:	mov	r9, r0
   2b2ac:	bl	14dc4 <g_strconcat@plt>
   2b2b0:	mov	r2, #0
   2b2b4:	ldr	r1, [pc, #252]	; 2b3b8 <g_strcmp0@plt+0x161ec>
   2b2b8:	mov	sl, r0
   2b2bc:	bl	14dc4 <g_strconcat@plt>
   2b2c0:	mov	r1, r8
   2b2c4:	mov	r2, #0
   2b2c8:	str	r0, [sp, #12]
   2b2cc:	bl	14dc4 <g_strconcat@plt>
   2b2d0:	mov	r2, #0
   2b2d4:	ldr	r1, [pc, #220]	; 2b3b8 <g_strcmp0@plt+0x161ec>
   2b2d8:	str	r0, [sp, #16]
   2b2dc:	bl	14dc4 <g_strconcat@plt>
   2b2e0:	ldr	r3, [sp, #16]
   2b2e4:	mov	r4, r0
   2b2e8:	mov	r0, r3
   2b2ec:	bl	14bd8 <g_free@plt>
   2b2f0:	ldr	r0, [sp, #12]
   2b2f4:	bl	14bd8 <g_free@plt>
   2b2f8:	mov	r0, sl
   2b2fc:	bl	14bd8 <g_free@plt>
   2b300:	mov	r0, r9
   2b304:	bl	14bd8 <g_free@plt>
   2b308:	mov	r1, r4
   2b30c:	ldr	r0, [r5, #16]
   2b310:	bl	14f74 <g_hash_table_contains@plt>
   2b314:	cmp	r0, #1
   2b318:	beq	2b34c <g_strcmp0@plt+0x16180>
   2b31c:	ldr	r3, [sp, #20]
   2b320:	str	fp, [sp, #4]
   2b324:	str	r3, [sp]
   2b328:	mov	r2, r7
   2b32c:	mov	r3, r8
   2b330:	mov	r1, r6
   2b334:	mov	r0, r5
   2b338:	bl	2ac1c <g_strcmp0@plt+0x15a50>
   2b33c:	mov	r0, r4
   2b340:	add	sp, sp, #28
   2b344:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b348:	b	14bd8 <g_free@plt>
   2b34c:	mov	r1, r4
   2b350:	ldr	r0, [r5, #16]
   2b354:	bl	14a94 <g_hash_table_lookup@plt>
   2b358:	mov	r1, fp
   2b35c:	bl	151cc <g_strcmp0@plt>
   2b360:	cmp	r0, #0
   2b364:	beq	2b33c <g_strcmp0@plt+0x16170>
   2b368:	mov	r0, r4
   2b36c:	ldr	r9, [r5, #16]
   2b370:	bl	147e8 <g_strdup@plt>
   2b374:	mov	sl, r0
   2b378:	mov	r0, fp
   2b37c:	bl	147e8 <g_strdup@plt>
   2b380:	mov	r1, sl
   2b384:	mov	r2, r0
   2b388:	mov	r0, r9
   2b38c:	bl	1480c <g_hash_table_insert@plt>
   2b390:	mov	r0, r5
   2b394:	str	r8, [sp]
   2b398:	mov	r3, r7
   2b39c:	mov	r2, r6
   2b3a0:	mov	r1, fp
   2b3a4:	bl	2b128 <g_strcmp0@plt+0x15f5c>
   2b3a8:	mov	r0, r4
   2b3ac:	add	sp, sp, #28
   2b3b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b3b4:	b	14bd8 <g_free@plt>
   2b3b8:	strdeq	r7, [r3], -ip
   2b3bc:	ldr	r0, [sp, #8]
   2b3c0:	b	2b26c <g_strcmp0@plt+0x160a0>
   2b3c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b3c8:	sub	sp, sp, #20
   2b3cc:	mov	r9, r0
   2b3d0:	ldr	r4, [sp, #56]	; 0x38
   2b3d4:	ldr	r5, [pc, #192]	; 2b49c <g_strcmp0@plt+0x162d0>
   2b3d8:	cmp	r4, #0
   2b3dc:	mov	r6, r1
   2b3e0:	mov	r7, r2
   2b3e4:	mov	r8, r3
   2b3e8:	ldr	sl, [sp, #60]	; 0x3c
   2b3ec:	beq	2b478 <g_strcmp0@plt+0x162ac>
   2b3f0:	mov	r0, r4
   2b3f4:	bl	14bcc <g_quark_from_string@plt>
   2b3f8:	mov	fp, r0
   2b3fc:	ldr	r0, [r5, #84]	; 0x54
   2b400:	cmp	r0, #0
   2b404:	beq	2b484 <g_strcmp0@plt+0x162b8>
   2b408:	cmp	r0, fp
   2b40c:	beq	2b418 <g_strcmp0@plt+0x1624c>
   2b410:	add	sp, sp, #20
   2b414:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b418:	mov	r3, r8
   2b41c:	mov	r2, r7
   2b420:	mov	r1, r6
   2b424:	mov	r0, r9
   2b428:	bl	2a300 <g_strcmp0@plt+0x15134>
   2b42c:	mov	r5, r0
   2b430:	bl	14bd8 <g_free@plt>
   2b434:	cmp	r5, #0
   2b438:	bne	2b410 <g_strcmp0@plt+0x16244>
   2b43c:	mov	r0, r5
   2b440:	mov	r3, r6
   2b444:	stm	sp, {r7, r8, sl}
   2b448:	mov	r1, #32
   2b44c:	ldr	r2, [pc, #76]	; 2b4a0 <g_strcmp0@plt+0x162d4>
   2b450:	bl	14668 <g_log@plt>
   2b454:	str	sl, [sp, #60]	; 0x3c
   2b458:	str	r4, [sp, #56]	; 0x38
   2b45c:	mov	r3, r8
   2b460:	mov	r2, r7
   2b464:	mov	r1, r6
   2b468:	mov	r0, r9
   2b46c:	add	sp, sp, #20
   2b470:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b474:	b	2b26c <g_strcmp0@plt+0x160a0>
   2b478:	ldr	fp, [r5, #84]	; 0x54
   2b47c:	cmp	fp, #0
   2b480:	bne	2b410 <g_strcmp0@plt+0x16244>
   2b484:	ldr	r0, [pc, #24]	; 2b4a4 <g_strcmp0@plt+0x162d8>
   2b488:	bl	14d64 <g_quark_from_static_string@plt>
   2b48c:	cmp	r0, fp
   2b490:	str	r0, [r5, #84]	; 0x54
   2b494:	bne	2b410 <g_strcmp0@plt+0x16244>
   2b498:	b	2b418 <g_strcmp0@plt+0x1624c>
   2b49c:	andeq	ip, r4, r0, lsr #8
   2b4a0:	andeq	r9, r3, r0, asr #26
   2b4a4:	andeq	r4, r3, r4, asr r8
   2b4a8:	push	{r4, r5, r6, r7, r8, lr}
   2b4ac:	mov	r3, #0
   2b4b0:	sub	sp, sp, #8
   2b4b4:	ldr	r2, [pc, #2164]	; 2bd30 <g_strcmp0@plt+0x16b64>
   2b4b8:	ldr	r1, [pc, #2164]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2b4bc:	mov	r4, r0
   2b4c0:	bl	2a300 <g_strcmp0@plt+0x15134>
   2b4c4:	ldr	r1, [pc, #2156]	; 2bd38 <g_strcmp0@plt+0x16b6c>
   2b4c8:	mov	r6, r0
   2b4cc:	bl	151cc <g_strcmp0@plt>
   2b4d0:	mov	r5, r0
   2b4d4:	mov	r0, r6
   2b4d8:	bl	14bd8 <g_free@plt>
   2b4dc:	cmp	r5, #0
   2b4e0:	beq	2b8ac <g_strcmp0@plt+0x166e0>
   2b4e4:	ldr	r5, [pc, #2128]	; 2bd3c <g_strcmp0@plt+0x16b70>
   2b4e8:	ldr	r3, [pc, #2128]	; 2bd40 <g_strcmp0@plt+0x16b74>
   2b4ec:	ldr	r2, [pc, #2128]	; 2bd44 <g_strcmp0@plt+0x16b78>
   2b4f0:	str	r3, [sp, #4]
   2b4f4:	ldr	r1, [pc, #2104]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2b4f8:	mov	r3, #0
   2b4fc:	mov	r0, r4
   2b500:	str	r5, [sp]
   2b504:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b508:	ldr	r3, [pc, #2104]	; 2bd48 <g_strcmp0@plt+0x16b7c>
   2b50c:	ldr	r2, [pc, #2104]	; 2bd4c <g_strcmp0@plt+0x16b80>
   2b510:	str	r3, [sp, #4]
   2b514:	ldr	r1, [pc, #2072]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2b518:	ldr	r3, [pc, #2096]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2b51c:	mov	r0, r4
   2b520:	str	r5, [sp]
   2b524:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b528:	ldr	r6, [pc, #2084]	; 2bd54 <g_strcmp0@plt+0x16b88>
   2b52c:	ldr	r3, [pc, #2084]	; 2bd58 <g_strcmp0@plt+0x16b8c>
   2b530:	ldr	r2, [pc, #2084]	; 2bd5c <g_strcmp0@plt+0x16b90>
   2b534:	str	r3, [sp, #4]
   2b538:	ldr	r1, [pc, #2036]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2b53c:	ldr	r3, [pc, #2060]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2b540:	mov	r0, r4
   2b544:	str	r5, [sp]
   2b548:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b54c:	stm	sp, {r5, r6}
   2b550:	ldr	r3, [pc, #2040]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2b554:	ldr	r2, [pc, #2052]	; 2bd60 <g_strcmp0@plt+0x16b94>
   2b558:	ldr	r1, [pc, #2004]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2b55c:	mov	r0, r4
   2b560:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b564:	stm	sp, {r5, r6}
   2b568:	ldr	r3, [pc, #2016]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2b56c:	ldr	r2, [pc, #2032]	; 2bd64 <g_strcmp0@plt+0x16b98>
   2b570:	ldr	r1, [pc, #1980]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2b574:	mov	r0, r4
   2b578:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b57c:	ldr	r6, [pc, #2020]	; 2bd68 <g_strcmp0@plt+0x16b9c>
   2b580:	ldr	r3, [pc, #2020]	; 2bd6c <g_strcmp0@plt+0x16ba0>
   2b584:	ldr	r2, [pc, #2020]	; 2bd70 <g_strcmp0@plt+0x16ba4>
   2b588:	str	r3, [sp, #4]
   2b58c:	ldr	r1, [pc, #1952]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2b590:	ldr	r3, [pc, #1976]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2b594:	mov	r0, r4
   2b598:	str	r5, [sp]
   2b59c:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b5a0:	stm	sp, {r5, r6}
   2b5a4:	ldr	r3, [pc, #1992]	; 2bd74 <g_strcmp0@plt+0x16ba8>
   2b5a8:	ldr	r2, [pc, #1992]	; 2bd78 <g_strcmp0@plt+0x16bac>
   2b5ac:	ldr	r1, [pc, #1992]	; 2bd7c <g_strcmp0@plt+0x16bb0>
   2b5b0:	mov	r0, r4
   2b5b4:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b5b8:	stm	sp, {r5, r6}
   2b5bc:	ldr	r3, [pc, #1980]	; 2bd80 <g_strcmp0@plt+0x16bb4>
   2b5c0:	ldr	r2, [pc, #1968]	; 2bd78 <g_strcmp0@plt+0x16bac>
   2b5c4:	ldr	r1, [pc, #1968]	; 2bd7c <g_strcmp0@plt+0x16bb0>
   2b5c8:	mov	r0, r4
   2b5cc:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b5d0:	ldr	r3, [pc, #1964]	; 2bd84 <g_strcmp0@plt+0x16bb8>
   2b5d4:	ldr	r2, [pc, #1964]	; 2bd88 <g_strcmp0@plt+0x16bbc>
   2b5d8:	str	r3, [sp, #4]
   2b5dc:	ldr	r1, [pc, #1944]	; 2bd7c <g_strcmp0@plt+0x16bb0>
   2b5e0:	ldr	r3, [pc, #1956]	; 2bd8c <g_strcmp0@plt+0x16bc0>
   2b5e4:	mov	r0, r4
   2b5e8:	str	r5, [sp]
   2b5ec:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b5f0:	ldr	r3, [pc, #1944]	; 2bd90 <g_strcmp0@plt+0x16bc4>
   2b5f4:	ldr	r2, [pc, #1932]	; 2bd88 <g_strcmp0@plt+0x16bbc>
   2b5f8:	str	r3, [sp, #4]
   2b5fc:	ldr	r1, [pc, #1912]	; 2bd7c <g_strcmp0@plt+0x16bb0>
   2b600:	ldr	r3, [pc, #1932]	; 2bd94 <g_strcmp0@plt+0x16bc8>
   2b604:	mov	r0, r4
   2b608:	str	r5, [sp]
   2b60c:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b610:	ldr	r3, [pc, #1920]	; 2bd98 <g_strcmp0@plt+0x16bcc>
   2b614:	ldr	r2, [pc, #1920]	; 2bd9c <g_strcmp0@plt+0x16bd0>
   2b618:	str	r3, [sp, #4]
   2b61c:	ldr	r1, [pc, #1880]	; 2bd7c <g_strcmp0@plt+0x16bb0>
   2b620:	ldr	r3, [pc, #1912]	; 2bda0 <g_strcmp0@plt+0x16bd4>
   2b624:	mov	r0, r4
   2b628:	str	r5, [sp]
   2b62c:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b630:	ldr	r3, [pc, #1900]	; 2bda4 <g_strcmp0@plt+0x16bd8>
   2b634:	ldr	r2, [pc, #1888]	; 2bd9c <g_strcmp0@plt+0x16bd0>
   2b638:	str	r3, [sp, #4]
   2b63c:	ldr	r1, [pc, #1848]	; 2bd7c <g_strcmp0@plt+0x16bb0>
   2b640:	ldr	r3, [pc, #1888]	; 2bda8 <g_strcmp0@plt+0x16bdc>
   2b644:	mov	r0, r4
   2b648:	str	r5, [sp]
   2b64c:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b650:	stm	sp, {r5, r6}
   2b654:	ldr	r3, [pc, #1872]	; 2bdac <g_strcmp0@plt+0x16be0>
   2b658:	ldr	r2, [pc, #1872]	; 2bdb0 <g_strcmp0@plt+0x16be4>
   2b65c:	ldr	r1, [pc, #1816]	; 2bd7c <g_strcmp0@plt+0x16bb0>
   2b660:	mov	r0, r4
   2b664:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b668:	stm	sp, {r5, r6}
   2b66c:	ldr	r3, [pc, #1856]	; 2bdb4 <g_strcmp0@plt+0x16be8>
   2b670:	ldr	r2, [pc, #1848]	; 2bdb0 <g_strcmp0@plt+0x16be4>
   2b674:	ldr	r1, [pc, #1792]	; 2bd7c <g_strcmp0@plt+0x16bb0>
   2b678:	mov	r0, r4
   2b67c:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b680:	ldr	r3, [pc, #1840]	; 2bdb8 <g_strcmp0@plt+0x16bec>
   2b684:	ldr	r2, [pc, #1840]	; 2bdbc <g_strcmp0@plt+0x16bf0>
   2b688:	str	r3, [sp, #4]
   2b68c:	ldr	r1, [pc, #1768]	; 2bd7c <g_strcmp0@plt+0x16bb0>
   2b690:	ldr	r3, [pc, #1832]	; 2bdc0 <g_strcmp0@plt+0x16bf4>
   2b694:	mov	r0, r4
   2b698:	str	r5, [sp]
   2b69c:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b6a0:	ldr	r7, [pc, #1820]	; 2bdc4 <g_strcmp0@plt+0x16bf8>
   2b6a4:	ldr	r3, [pc, #1820]	; 2bdc8 <g_strcmp0@plt+0x16bfc>
   2b6a8:	ldr	r2, [pc, #1804]	; 2bdbc <g_strcmp0@plt+0x16bf0>
   2b6ac:	str	r3, [sp, #4]
   2b6b0:	ldr	r1, [pc, #1732]	; 2bd7c <g_strcmp0@plt+0x16bb0>
   2b6b4:	ldr	r3, [pc, #1808]	; 2bdcc <g_strcmp0@plt+0x16c00>
   2b6b8:	mov	r0, r4
   2b6bc:	str	r5, [sp]
   2b6c0:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b6c4:	stm	sp, {r5, r7}
   2b6c8:	ldr	r3, [pc, #1792]	; 2bdd0 <g_strcmp0@plt+0x16c04>
   2b6cc:	ldr	r2, [pc, #1792]	; 2bdd4 <g_strcmp0@plt+0x16c08>
   2b6d0:	ldr	r1, [pc, #1700]	; 2bd7c <g_strcmp0@plt+0x16bb0>
   2b6d4:	mov	r0, r4
   2b6d8:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b6dc:	stm	sp, {r5, r7}
   2b6e0:	ldr	r3, [pc, #1776]	; 2bdd8 <g_strcmp0@plt+0x16c0c>
   2b6e4:	ldr	r2, [pc, #1768]	; 2bdd4 <g_strcmp0@plt+0x16c08>
   2b6e8:	ldr	r1, [pc, #1676]	; 2bd7c <g_strcmp0@plt+0x16bb0>
   2b6ec:	mov	r0, r4
   2b6f0:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b6f4:	stm	sp, {r5, r6}
   2b6f8:	ldr	r3, [pc, #1756]	; 2bddc <g_strcmp0@plt+0x16c10>
   2b6fc:	ldr	r2, [pc, #1744]	; 2bdd4 <g_strcmp0@plt+0x16c08>
   2b700:	ldr	r1, [pc, #1652]	; 2bd7c <g_strcmp0@plt+0x16bb0>
   2b704:	mov	r0, r4
   2b708:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b70c:	stm	sp, {r5, r6}
   2b710:	ldr	r3, [pc, #1736]	; 2bde0 <g_strcmp0@plt+0x16c14>
   2b714:	ldr	r2, [pc, #1720]	; 2bdd4 <g_strcmp0@plt+0x16c08>
   2b718:	ldr	r1, [pc, #1628]	; 2bd7c <g_strcmp0@plt+0x16bb0>
   2b71c:	mov	r0, r4
   2b720:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b724:	ldr	r3, [pc, #1720]	; 2bde4 <g_strcmp0@plt+0x16c18>
   2b728:	ldr	r2, [pc, #1700]	; 2bdd4 <g_strcmp0@plt+0x16c08>
   2b72c:	str	r3, [sp, #4]
   2b730:	ldr	r1, [pc, #1604]	; 2bd7c <g_strcmp0@plt+0x16bb0>
   2b734:	ldr	r3, [pc, #1708]	; 2bde8 <g_strcmp0@plt+0x16c1c>
   2b738:	mov	r0, r4
   2b73c:	str	r5, [sp]
   2b740:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b744:	ldr	r3, [pc, #1696]	; 2bdec <g_strcmp0@plt+0x16c20>
   2b748:	ldr	r2, [pc, #1644]	; 2bdbc <g_strcmp0@plt+0x16bf0>
   2b74c:	str	r3, [sp, #4]
   2b750:	ldr	r1, [pc, #1572]	; 2bd7c <g_strcmp0@plt+0x16bb0>
   2b754:	ldr	r3, [pc, #1684]	; 2bdf0 <g_strcmp0@plt+0x16c24>
   2b758:	mov	r0, r4
   2b75c:	str	r5, [sp]
   2b760:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b764:	ldr	r3, [pc, #1672]	; 2bdf4 <g_strcmp0@plt+0x16c28>
   2b768:	ldr	r2, [pc, #1672]	; 2bdf8 <g_strcmp0@plt+0x16c2c>
   2b76c:	str	r3, [sp, #4]
   2b770:	ldr	r1, [pc, #1668]	; 2bdfc <g_strcmp0@plt+0x16c30>
   2b774:	mov	r3, #0
   2b778:	mov	r0, r4
   2b77c:	str	r5, [sp]
   2b780:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b784:	ldr	r3, [pc, #1652]	; 2be00 <g_strcmp0@plt+0x16c34>
   2b788:	ldr	r2, [pc, #1652]	; 2be04 <g_strcmp0@plt+0x16c38>
   2b78c:	str	r3, [sp, #4]
   2b790:	ldr	r1, [pc, #1636]	; 2bdfc <g_strcmp0@plt+0x16c30>
   2b794:	mov	r3, #0
   2b798:	mov	r0, r4
   2b79c:	str	r5, [sp]
   2b7a0:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b7a4:	ldr	r3, [pc, #1628]	; 2be08 <g_strcmp0@plt+0x16c3c>
   2b7a8:	ldr	r2, [pc, #1628]	; 2be0c <g_strcmp0@plt+0x16c40>
   2b7ac:	str	r3, [sp, #4]
   2b7b0:	ldr	r1, [pc, #1604]	; 2bdfc <g_strcmp0@plt+0x16c30>
   2b7b4:	mov	r3, #0
   2b7b8:	mov	r0, r4
   2b7bc:	str	r5, [sp]
   2b7c0:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b7c4:	ldr	r3, [pc, #1604]	; 2be10 <g_strcmp0@plt+0x16c44>
   2b7c8:	ldr	r2, [pc, #1604]	; 2be14 <g_strcmp0@plt+0x16c48>
   2b7cc:	str	r3, [sp, #4]
   2b7d0:	ldr	r1, [pc, #1600]	; 2be18 <g_strcmp0@plt+0x16c4c>
   2b7d4:	mov	r3, #0
   2b7d8:	mov	r0, r4
   2b7dc:	str	r5, [sp]
   2b7e0:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b7e4:	ldr	r3, [pc, #1584]	; 2be1c <g_strcmp0@plt+0x16c50>
   2b7e8:	ldr	r7, [pc, #1584]	; 2be20 <g_strcmp0@plt+0x16c54>
   2b7ec:	str	r3, [sp, #4]
   2b7f0:	ldr	r2, [pc, #1580]	; 2be24 <g_strcmp0@plt+0x16c58>
   2b7f4:	mov	r3, #0
   2b7f8:	ldr	r1, [pc, #1560]	; 2be18 <g_strcmp0@plt+0x16c4c>
   2b7fc:	mov	r0, r4
   2b800:	str	r5, [sp]
   2b804:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b808:	stm	sp, {r5, r6}
   2b80c:	mov	r3, #0
   2b810:	ldr	r2, [pc, #1552]	; 2be28 <g_strcmp0@plt+0x16c5c>
   2b814:	ldr	r1, [pc, #1532]	; 2be18 <g_strcmp0@plt+0x16c4c>
   2b818:	mov	r0, r4
   2b81c:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b820:	stm	sp, {r5, r7}
   2b824:	mov	r3, #0
   2b828:	ldr	r2, [pc, #1532]	; 2be2c <g_strcmp0@plt+0x16c60>
   2b82c:	ldr	r1, [pc, #1532]	; 2be30 <g_strcmp0@plt+0x16c64>
   2b830:	mov	r0, r4
   2b834:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b838:	stm	sp, {r5, r7}
   2b83c:	mov	r3, #0
   2b840:	ldr	r2, [pc, #1516]	; 2be34 <g_strcmp0@plt+0x16c68>
   2b844:	ldr	r1, [pc, #1516]	; 2be38 <g_strcmp0@plt+0x16c6c>
   2b848:	mov	r0, r4
   2b84c:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b850:	ldr	r3, [pc, #1508]	; 2be3c <g_strcmp0@plt+0x16c70>
   2b854:	ldr	r2, [pc, #1508]	; 2be40 <g_strcmp0@plt+0x16c74>
   2b858:	str	r3, [sp, #4]
   2b85c:	ldr	r1, [pc, #1504]	; 2be44 <g_strcmp0@plt+0x16c78>
   2b860:	mov	r3, #0
   2b864:	mov	r0, r4
   2b868:	str	r5, [sp]
   2b86c:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b870:	ldr	r3, [r4, #12]
   2b874:	ldr	r6, [pc, #1484]	; 2be48 <g_strcmp0@plt+0x16c7c>
   2b878:	ldr	r0, [r3]
   2b87c:	mov	r1, r6
   2b880:	bl	151cc <g_strcmp0@plt>
   2b884:	subs	r7, r0, #0
   2b888:	beq	2b9bc <g_strcmp0@plt+0x167f0>
   2b88c:	ldr	r3, [r4, #12]
   2b890:	ldr	r1, [pc, #1460]	; 2be4c <g_strcmp0@plt+0x16c80>
   2b894:	ldr	r0, [r3, #4]
   2b898:	bl	151cc <g_strcmp0@plt>
   2b89c:	cmp	r0, #0
   2b8a0:	beq	2b8f4 <g_strcmp0@plt+0x16728>
   2b8a4:	add	sp, sp, #8
   2b8a8:	pop	{r4, r5, r6, r7, r8, pc}
   2b8ac:	ldr	r5, [pc, #1160]	; 2bd3c <g_strcmp0@plt+0x16b70>
   2b8b0:	ldr	r3, [pc, #1432]	; 2be50 <g_strcmp0@plt+0x16c84>
   2b8b4:	mov	r0, r4
   2b8b8:	str	r3, [sp, #4]
   2b8bc:	str	r5, [sp]
   2b8c0:	ldr	r3, [pc, #1160]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2b8c4:	ldr	r2, [pc, #1416]	; 2be54 <g_strcmp0@plt+0x16c88>
   2b8c8:	ldr	r1, [pc, #1124]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2b8cc:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b8d0:	ldr	r3, [pc, #1396]	; 2be4c <g_strcmp0@plt+0x16c80>
   2b8d4:	str	r5, [sp]
   2b8d8:	str	r3, [sp, #4]
   2b8dc:	ldr	r2, [pc, #1392]	; 2be54 <g_strcmp0@plt+0x16c88>
   2b8e0:	ldr	r3, [pc, #1392]	; 2be58 <g_strcmp0@plt+0x16c8c>
   2b8e4:	ldr	r1, [pc, #1096]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2b8e8:	mov	r0, r4
   2b8ec:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b8f0:	b	2b4e8 <g_strcmp0@plt+0x1631c>
   2b8f4:	ldr	r3, [pc, #1376]	; 2be5c <g_strcmp0@plt+0x16c90>
   2b8f8:	mov	r0, r4
   2b8fc:	str	r3, [sp, #4]
   2b900:	str	r5, [sp]
   2b904:	ldr	r3, [pc, #1092]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2b908:	ldr	r2, [pc, #1360]	; 2be60 <g_strcmp0@plt+0x16c94>
   2b90c:	ldr	r1, [pc, #1056]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2b910:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b914:	ldr	r3, [pc, #1352]	; 2be64 <g_strcmp0@plt+0x16c98>
   2b918:	mov	r0, r4
   2b91c:	str	r3, [sp, #4]
   2b920:	str	r5, [sp]
   2b924:	ldr	r3, [pc, #1340]	; 2be68 <g_strcmp0@plt+0x16c9c>
   2b928:	ldr	r2, [pc, #1328]	; 2be60 <g_strcmp0@plt+0x16c94>
   2b92c:	ldr	r1, [pc, #1024]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2b930:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b934:	ldr	r3, [pc, #1328]	; 2be6c <g_strcmp0@plt+0x16ca0>
   2b938:	mov	r0, r4
   2b93c:	str	r3, [sp, #4]
   2b940:	str	r5, [sp]
   2b944:	ldr	r3, [pc, #1316]	; 2be70 <g_strcmp0@plt+0x16ca4>
   2b948:	ldr	r2, [pc, #1296]	; 2be60 <g_strcmp0@plt+0x16c94>
   2b94c:	ldr	r1, [pc, #992]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2b950:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b954:	ldr	r3, [pc, #1304]	; 2be74 <g_strcmp0@plt+0x16ca8>
   2b958:	mov	r0, r4
   2b95c:	str	r3, [sp, #4]
   2b960:	str	r5, [sp]
   2b964:	ldr	r3, [pc, #996]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2b968:	ldr	r2, [pc, #1288]	; 2be78 <g_strcmp0@plt+0x16cac>
   2b96c:	ldr	r1, [pc, #960]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2b970:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b974:	ldr	r3, [pc, #1280]	; 2be7c <g_strcmp0@plt+0x16cb0>
   2b978:	mov	r0, r4
   2b97c:	str	r3, [sp, #4]
   2b980:	str	r5, [sp]
   2b984:	ldr	r3, [pc, #964]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2b988:	ldr	r2, [pc, #1264]	; 2be80 <g_strcmp0@plt+0x16cb4>
   2b98c:	ldr	r1, [pc, #928]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2b990:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b994:	ldr	r3, [pc, #1256]	; 2be84 <g_strcmp0@plt+0x16cb8>
   2b998:	str	r5, [sp]
   2b99c:	str	r3, [sp, #4]
   2b9a0:	mov	r0, r4
   2b9a4:	ldr	r3, [pc, #932]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2b9a8:	ldr	r2, [pc, #1240]	; 2be88 <g_strcmp0@plt+0x16cbc>
   2b9ac:	ldr	r1, [pc, #896]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2b9b0:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b9b4:	add	sp, sp, #8
   2b9b8:	pop	{r4, r5, r6, r7, r8, pc}
   2b9bc:	ldr	r3, [pc, #1176]	; 2be5c <g_strcmp0@plt+0x16c90>
   2b9c0:	ldr	r2, [pc, #1176]	; 2be60 <g_strcmp0@plt+0x16c94>
   2b9c4:	str	r3, [sp, #4]
   2b9c8:	ldr	r1, [pc, #868]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2b9cc:	ldr	r3, [pc, #892]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2b9d0:	mov	r0, r4
   2b9d4:	str	r5, [sp]
   2b9d8:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b9dc:	ldr	r3, [pc, #1192]	; 2be8c <g_strcmp0@plt+0x16cc0>
   2b9e0:	ldr	r2, [pc, #1144]	; 2be60 <g_strcmp0@plt+0x16c94>
   2b9e4:	str	r3, [sp, #4]
   2b9e8:	ldr	r1, [pc, #836]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2b9ec:	ldr	r3, [pc, #1140]	; 2be68 <g_strcmp0@plt+0x16c9c>
   2b9f0:	mov	r0, r4
   2b9f4:	str	r5, [sp]
   2b9f8:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2b9fc:	ldr	r3, [pc, #1128]	; 2be6c <g_strcmp0@plt+0x16ca0>
   2ba00:	ldr	r2, [pc, #1112]	; 2be60 <g_strcmp0@plt+0x16c94>
   2ba04:	str	r3, [sp, #4]
   2ba08:	ldr	r1, [pc, #804]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2ba0c:	ldr	r3, [pc, #1116]	; 2be70 <g_strcmp0@plt+0x16ca4>
   2ba10:	mov	r0, r4
   2ba14:	str	r5, [sp]
   2ba18:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2ba1c:	mov	r3, r7
   2ba20:	ldr	r2, [pc, #776]	; 2bd30 <g_strcmp0@plt+0x16b64>
   2ba24:	ldr	r1, [pc, #776]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2ba28:	mov	r0, r4
   2ba2c:	bl	2a300 <g_strcmp0@plt+0x15134>
   2ba30:	ldr	r1, [pc, #1112]	; 2be90 <g_strcmp0@plt+0x16cc4>
   2ba34:	mov	r8, r0
   2ba38:	bl	151cc <g_strcmp0@plt>
   2ba3c:	mov	r7, r0
   2ba40:	mov	r0, r8
   2ba44:	bl	14bd8 <g_free@plt>
   2ba48:	cmp	r7, #0
   2ba4c:	beq	2bcf4 <g_strcmp0@plt+0x16b28>
   2ba50:	ldr	r3, [pc, #1084]	; 2be94 <g_strcmp0@plt+0x16cc8>
   2ba54:	mov	r0, r4
   2ba58:	str	r3, [sp, #4]
   2ba5c:	str	r5, [sp]
   2ba60:	ldr	r3, [pc, #744]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2ba64:	ldr	r2, [pc, #1068]	; 2be98 <g_strcmp0@plt+0x16ccc>
   2ba68:	ldr	r1, [pc, #708]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2ba6c:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2ba70:	ldr	r3, [pc, #1060]	; 2be9c <g_strcmp0@plt+0x16cd0>
   2ba74:	mov	r0, r4
   2ba78:	str	r3, [sp, #4]
   2ba7c:	str	r5, [sp]
   2ba80:	ldr	r3, [pc, #712]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2ba84:	ldr	r2, [pc, #1044]	; 2bea0 <g_strcmp0@plt+0x16cd4>
   2ba88:	ldr	r1, [pc, #676]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2ba8c:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2ba90:	ldr	r3, [pc, #1036]	; 2bea4 <g_strcmp0@plt+0x16cd8>
   2ba94:	mov	r0, r4
   2ba98:	str	r3, [sp, #4]
   2ba9c:	str	r5, [sp]
   2baa0:	ldr	r3, [pc, #680]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2baa4:	ldr	r2, [pc, #1020]	; 2bea8 <g_strcmp0@plt+0x16cdc>
   2baa8:	ldr	r1, [pc, #644]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2baac:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2bab0:	ldr	r3, [pc, #1012]	; 2beac <g_strcmp0@plt+0x16ce0>
   2bab4:	mov	r0, r4
   2bab8:	str	r3, [sp, #4]
   2babc:	str	r5, [sp]
   2bac0:	ldr	r3, [pc, #648]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2bac4:	ldr	r2, [pc, #996]	; 2beb0 <g_strcmp0@plt+0x16ce4>
   2bac8:	ldr	r1, [pc, #612]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2bacc:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2bad0:	ldr	r3, [pc, #988]	; 2beb4 <g_strcmp0@plt+0x16ce8>
   2bad4:	mov	r0, r4
   2bad8:	str	r3, [sp, #4]
   2badc:	str	r5, [sp]
   2bae0:	ldr	r3, [pc, #616]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2bae4:	ldr	r2, [pc, #972]	; 2beb8 <g_strcmp0@plt+0x16cec>
   2bae8:	ldr	r1, [pc, #580]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2baec:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2baf0:	ldr	r3, [pc, #964]	; 2bebc <g_strcmp0@plt+0x16cf0>
   2baf4:	mov	r0, r4
   2baf8:	str	r3, [sp, #4]
   2bafc:	str	r5, [sp]
   2bb00:	ldr	r3, [pc, #584]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2bb04:	ldr	r2, [pc, #948]	; 2bec0 <g_strcmp0@plt+0x16cf4>
   2bb08:	ldr	r1, [pc, #548]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2bb0c:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2bb10:	ldr	r3, [pc, #940]	; 2bec4 <g_strcmp0@plt+0x16cf8>
   2bb14:	mov	r0, r4
   2bb18:	str	r3, [sp, #4]
   2bb1c:	str	r5, [sp]
   2bb20:	ldr	r3, [pc, #552]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2bb24:	ldr	r2, [pc, #924]	; 2bec8 <g_strcmp0@plt+0x16cfc>
   2bb28:	ldr	r1, [pc, #516]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2bb2c:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2bb30:	ldr	r3, [pc, #916]	; 2becc <g_strcmp0@plt+0x16d00>
   2bb34:	mov	r0, r4
   2bb38:	str	r3, [sp, #4]
   2bb3c:	str	r5, [sp]
   2bb40:	ldr	r3, [pc, #520]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2bb44:	ldr	r2, [pc, #900]	; 2bed0 <g_strcmp0@plt+0x16d04>
   2bb48:	ldr	r1, [pc, #484]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2bb4c:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2bb50:	ldr	r3, [pc, #892]	; 2bed4 <g_strcmp0@plt+0x16d08>
   2bb54:	mov	r0, r4
   2bb58:	str	r3, [sp, #4]
   2bb5c:	str	r5, [sp]
   2bb60:	ldr	r3, [pc, #488]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2bb64:	ldr	r2, [pc, #876]	; 2bed8 <g_strcmp0@plt+0x16d0c>
   2bb68:	ldr	r1, [pc, #452]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2bb6c:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2bb70:	ldr	r3, [pc, #868]	; 2bedc <g_strcmp0@plt+0x16d10>
   2bb74:	mov	r0, r4
   2bb78:	str	r3, [sp, #4]
   2bb7c:	str	r5, [sp]
   2bb80:	ldr	r3, [pc, #456]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2bb84:	ldr	r2, [pc, #852]	; 2bee0 <g_strcmp0@plt+0x16d14>
   2bb88:	ldr	r1, [pc, #420]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2bb8c:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2bb90:	ldr	r3, [pc, #844]	; 2bee4 <g_strcmp0@plt+0x16d18>
   2bb94:	mov	r0, r4
   2bb98:	str	r3, [sp, #4]
   2bb9c:	str	r5, [sp]
   2bba0:	ldr	r3, [pc, #424]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2bba4:	ldr	r2, [pc, #828]	; 2bee8 <g_strcmp0@plt+0x16d1c>
   2bba8:	ldr	r1, [pc, #388]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2bbac:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2bbb0:	ldr	r3, [pc, #820]	; 2beec <g_strcmp0@plt+0x16d20>
   2bbb4:	mov	r0, r4
   2bbb8:	str	r3, [sp, #4]
   2bbbc:	str	r5, [sp]
   2bbc0:	ldr	r3, [pc, #392]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2bbc4:	ldr	r2, [pc, #804]	; 2bef0 <g_strcmp0@plt+0x16d24>
   2bbc8:	ldr	r1, [pc, #356]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2bbcc:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2bbd0:	ldr	r3, [pc, #796]	; 2bef4 <g_strcmp0@plt+0x16d28>
   2bbd4:	mov	r0, r4
   2bbd8:	str	r3, [sp, #4]
   2bbdc:	str	r5, [sp]
   2bbe0:	ldr	r3, [pc, #360]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2bbe4:	ldr	r2, [pc, #780]	; 2bef8 <g_strcmp0@plt+0x16d2c>
   2bbe8:	ldr	r1, [pc, #324]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2bbec:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2bbf0:	ldr	r3, [pc, #772]	; 2befc <g_strcmp0@plt+0x16d30>
   2bbf4:	mov	r0, r4
   2bbf8:	str	r3, [sp, #4]
   2bbfc:	str	r5, [sp]
   2bc00:	ldr	r3, [pc, #328]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2bc04:	ldr	r2, [pc, #756]	; 2bf00 <g_strcmp0@plt+0x16d34>
   2bc08:	ldr	r1, [pc, #292]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2bc0c:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2bc10:	ldr	r3, [pc, #748]	; 2bf04 <g_strcmp0@plt+0x16d38>
   2bc14:	mov	r0, r4
   2bc18:	str	r3, [sp, #4]
   2bc1c:	str	r5, [sp]
   2bc20:	ldr	r3, [pc, #296]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2bc24:	ldr	r2, [pc, #732]	; 2bf08 <g_strcmp0@plt+0x16d3c>
   2bc28:	ldr	r1, [pc, #260]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2bc2c:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2bc30:	ldr	r3, [pc, #724]	; 2bf0c <g_strcmp0@plt+0x16d40>
   2bc34:	mov	r0, r4
   2bc38:	str	r3, [sp, #4]
   2bc3c:	str	r5, [sp]
   2bc40:	ldr	r3, [pc, #264]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2bc44:	ldr	r2, [pc, #708]	; 2bf10 <g_strcmp0@plt+0x16d44>
   2bc48:	ldr	r1, [pc, #228]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2bc4c:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2bc50:	ldr	r3, [pc, #700]	; 2bf14 <g_strcmp0@plt+0x16d48>
   2bc54:	mov	r0, r4
   2bc58:	str	r3, [sp, #4]
   2bc5c:	str	r5, [sp]
   2bc60:	ldr	r3, [pc, #232]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2bc64:	ldr	r2, [pc, #684]	; 2bf18 <g_strcmp0@plt+0x16d4c>
   2bc68:	ldr	r1, [pc, #196]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2bc6c:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2bc70:	ldr	r3, [pc, #676]	; 2bf1c <g_strcmp0@plt+0x16d50>
   2bc74:	mov	r0, r4
   2bc78:	str	r3, [sp, #4]
   2bc7c:	str	r5, [sp]
   2bc80:	ldr	r3, [pc, #200]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2bc84:	ldr	r2, [pc, #660]	; 2bf20 <g_strcmp0@plt+0x16d54>
   2bc88:	ldr	r1, [pc, #164]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2bc8c:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2bc90:	ldr	r3, [pc, #652]	; 2bf24 <g_strcmp0@plt+0x16d58>
   2bc94:	mov	r0, r4
   2bc98:	str	r3, [sp, #4]
   2bc9c:	str	r5, [sp]
   2bca0:	ldr	r3, [pc, #168]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2bca4:	ldr	r2, [pc, #636]	; 2bf28 <g_strcmp0@plt+0x16d5c>
   2bca8:	ldr	r1, [pc, #132]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2bcac:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2bcb0:	ldr	r3, [pc, #628]	; 2bf2c <g_strcmp0@plt+0x16d60>
   2bcb4:	mov	r0, r4
   2bcb8:	str	r3, [sp, #4]
   2bcbc:	str	r5, [sp]
   2bcc0:	ldr	r3, [pc, #136]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2bcc4:	ldr	r2, [pc, #612]	; 2bf30 <g_strcmp0@plt+0x16d64>
   2bcc8:	ldr	r1, [pc, #100]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2bccc:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2bcd0:	ldr	r3, [pc, #604]	; 2bf34 <g_strcmp0@plt+0x16d68>
   2bcd4:	str	r5, [sp]
   2bcd8:	str	r3, [sp, #4]
   2bcdc:	ldr	r2, [pc, #596]	; 2bf38 <g_strcmp0@plt+0x16d6c>
   2bce0:	ldr	r3, [pc, #104]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2bce4:	ldr	r1, [pc, #72]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2bce8:	mov	r0, r4
   2bcec:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2bcf0:	b	2b88c <g_strcmp0@plt+0x166c0>
   2bcf4:	ldr	r3, [pc, #340]	; 2be50 <g_strcmp0@plt+0x16c84>
   2bcf8:	mov	r0, r4
   2bcfc:	str	r3, [sp, #4]
   2bd00:	str	r5, [sp]
   2bd04:	ldr	r3, [pc, #68]	; 2bd50 <g_strcmp0@plt+0x16b84>
   2bd08:	ldr	r2, [pc, #324]	; 2be54 <g_strcmp0@plt+0x16c88>
   2bd0c:	ldr	r1, [pc, #32]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2bd10:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2bd14:	stm	sp, {r5, r6}
   2bd18:	ldr	r3, [pc, #312]	; 2be58 <g_strcmp0@plt+0x16c8c>
   2bd1c:	ldr	r2, [pc, #304]	; 2be54 <g_strcmp0@plt+0x16c88>
   2bd20:	ldr	r1, [pc, #12]	; 2bd34 <g_strcmp0@plt+0x16b68>
   2bd24:	mov	r0, r4
   2bd28:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2bd2c:	b	2ba50 <g_strcmp0@plt+0x16884>
   2bd30:	andeq	r4, r3, r4, asr #15
   2bd34:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   2bd38:	andeq	r4, r3, ip, ror pc
   2bd3c:	andeq	r4, r3, r4, asr r8
   2bd40:	andeq	r4, r3, r8, lsr r8
   2bd44:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   2bd48:			; <UNDEFINED> instruction: 0x000355bc
   2bd4c:	andeq	r8, r3, ip, lsl #16
   2bd50:	ldrdeq	r4, [r3], -ip
   2bd54:	andeq	r4, r3, r4, ror #30
   2bd58:	andeq	r9, r3, ip, ror r9
   2bd5c:	andeq	r8, r3, r4, lsr #20
   2bd60:	andeq	r7, r3, r4, ror #8
   2bd64:	andeq	r4, r3, r4, asr #18
   2bd68:	andeq	r9, r3, ip, lsl #27
   2bd6c:	andeq	r5, r3, ip, asr #7
   2bd70:	andeq	r7, r3, r0, ror #19
   2bd74:	andeq	r9, r3, r8, ror sp
   2bd78:	andeq	r9, r3, r4, lsl #27
   2bd7c:	strdeq	r9, [r3], -ip
   2bd80:	muleq	r3, r0, sp
   2bd84:	andeq	r9, r3, ip, lsr #27
   2bd88:	andeq	r9, r3, r4, lsr #27
   2bd8c:	muleq	r3, r8, sp
   2bd90:	andeq	r9, r3, r0, asr #27
   2bd94:			; <UNDEFINED> instruction: 0x00039db8
   2bd98:	andeq	r9, r3, ip, asr #27
   2bd9c:	andeq	r9, r3, r4, asr #27
   2bda0:	ldrdeq	r9, [r3], -ip
   2bda4:	andeq	r9, r3, r8, ror #27
   2bda8:	ldrdeq	r9, [r3], -r8
   2bdac:	strdeq	r9, [r3], -r4
   2bdb0:	andeq	r9, r3, r8, lsl #28
   2bdb4:	andeq	r9, r3, r0, lsl lr
   2bdb8:	andeq	sl, r3, ip, ror #18
   2bdbc:	andeq	r9, r3, r8, lsr lr
   2bdc0:	andeq	r9, r3, ip, lsr #28
   2bdc4:	andeq	r9, r3, ip, ror #28
   2bdc8:	andeq	r9, r3, ip, asr #28
   2bdcc:	andeq	r9, r3, r0, asr #28
   2bdd0:	andeq	r9, r3, r4, asr lr
   2bdd4:	andeq	r9, r3, r4, ror #28
   2bdd8:	andeq	r9, r3, r0, ror lr
   2bddc:	andeq	r9, r3, r0, lsl #29
   2bde0:	muleq	r3, r0, lr
   2bde4:	andeq	r9, r3, ip, lsr #29
   2bde8:	muleq	r3, ip, lr
   2bdec:	andeq	r9, r3, r0, asr #29
   2bdf0:			; <UNDEFINED> instruction: 0x00039eb0
   2bdf4:	ldrdeq	r9, [r3], -r8
   2bdf8:	andeq	r9, r3, ip, asr #29
   2bdfc:	andeq	r9, r3, r0, lsl #26
   2be00:	andeq	r9, r3, ip, ror #29
   2be04:	ldrdeq	r9, [r3], -ip
   2be08:	andeq	r9, r3, r4, asr #7
   2be0c:	strdeq	r9, [r3], -r0
   2be10:	andeq	r9, r3, r4, lsl #30
   2be14:	strdeq	r9, [r3], -ip
   2be18:	andeq	r9, r3, r8, lsl #26
   2be1c:	andeq	r9, r3, r4, lsl pc
   2be20:	andeq	r4, r3, ip, ror r8
   2be24:	andeq	r9, r3, r8, lsl #30
   2be28:	andeq	r9, r3, r8, lsl pc
   2be2c:	andeq	r9, r3, r0, lsr #30
   2be30:	andeq	r4, r3, r8, lsr #16
   2be34:	andeq	r4, r3, r4, lsl #31
   2be38:	andeq	r4, r3, ip, ror r9
   2be3c:	andeq	r9, r3, r0, lsr pc
   2be40:	andeq	r9, r3, ip, lsr r5
   2be44:	andeq	r7, r3, r0, lsl r6
   2be48:	andeq	r5, r3, r8, asr r4
   2be4c:	andeq	r4, r3, r0, asr #11
   2be50:	muleq	r3, ip, pc	; <UNPREDICTABLE>
   2be54:	andeq	r4, r3, r4, ror #15
   2be58:	andeq	r4, r3, r4, lsl #14
   2be5c:	muleq	r3, ip, r2
   2be60:	andeq	r5, r3, ip, ror r2
   2be64:	strdeq	sl, [r3], -r8
   2be68:	andeq	r5, r3, ip, lsl #5
   2be6c:	strdeq	r6, [r3], -ip
   2be70:	muleq	r3, r4, r2
   2be74:	andeq	sl, r3, r4, lsr r1
   2be78:	andeq	sl, r3, r4, lsr #2
   2be7c:	andeq	r5, r3, r0, lsr #6
   2be80:	andeq	r4, r3, r8, asr #30
   2be84:	andeq	r5, r3, r4, lsl #6
   2be88:	andeq	r4, r3, r4, lsl #17
   2be8c:	andeq	r9, r3, r8, lsr pc
   2be90:	andeq	r4, r3, ip, lsl #31
   2be94:	andeq	r5, r3, ip, ror #5
   2be98:	ldrdeq	r5, [r3], -r8
   2be9c:	andeq	r5, r3, ip, asr r2
   2bea0:	andeq	r5, r3, ip, asr #4
   2bea4:	andeq	r5, r3, r4, asr #20
   2bea8:	strdeq	r5, [r3], -r0
   2beac:	andeq	r9, r3, r4, ror pc
   2beb0:	andeq	r9, r3, r4, ror #30
   2beb4:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   2beb8:	andeq	r9, r3, r4, lsl #31
   2bebc:	andeq	r9, r3, r0, lsr #31
   2bec0:	muleq	r3, r8, pc	; <UNPREDICTABLE>
   2bec4:			; <UNDEFINED> instruction: 0x00039fb8
   2bec8:	andeq	r9, r3, ip, lsr #31
   2becc:	ldrdeq	r9, [r3], -r0
   2bed0:	andeq	r9, r3, r0, asr #31
   2bed4:	strdeq	r9, [r3], -r0
   2bed8:	andeq	r9, r3, r0, ror #31
   2bedc:	andeq	sl, r3, ip
   2bee0:	strdeq	r9, [r3], -ip
   2bee4:	andeq	r5, r3, ip, asr #27
   2bee8:	andeq	sl, r3, r8, lsl r0
   2beec:	andeq	sl, r3, ip, lsr #32
   2bef0:	andeq	sl, r3, r4, lsr #32
   2bef4:	andeq	sl, r3, r4, asr #32
   2bef8:	andeq	sl, r3, r8, lsr r0
   2befc:	andeq	sl, r3, ip, asr r0
   2bf00:	andeq	sl, r3, r0, asr r0
   2bf04:	andeq	sl, r3, r4, ror r0
   2bf08:	andeq	sl, r3, r8, rrx
   2bf0c:	muleq	r3, r4, r0
   2bf10:	andeq	sl, r3, r8, lsl #1
   2bf14:	andeq	sl, r3, r4, lsr #1
   2bf18:	muleq	r3, ip, r0
   2bf1c:	strheq	sl, [r3], -r4
   2bf20:	andeq	sl, r3, ip, lsr #1
   2bf24:	andeq	sl, r3, r4, asr #1
   2bf28:	strheq	sl, [r3], -ip
   2bf2c:	ldrdeq	sl, [r3], -ip
   2bf30:	andeq	sl, r3, ip, asr #1
   2bf34:	strdeq	sl, [r3], -r0
   2bf38:	andeq	sl, r3, r8, ror #1
   2bf3c:	ldr	ip, [r0]
   2bf40:	push	{lr}		; (str lr, [sp, #-4]!)
   2bf44:	ldr	lr, [ip, #68]	; 0x44
   2bf48:	mov	ip, lr
   2bf4c:	pop	{lr}		; (ldr lr, [sp], #4)
   2bf50:	bx	ip
   2bf54:	ldr	ip, [r0]
   2bf58:	push	{lr}		; (str lr, [sp, #-4]!)
   2bf5c:	ldr	lr, [ip, #72]	; 0x48
   2bf60:	mov	ip, lr
   2bf64:	pop	{lr}		; (ldr lr, [sp], #4)
   2bf68:	bx	ip
   2bf6c:	ldr	ip, [r0]
   2bf70:	push	{lr}		; (str lr, [sp, #-4]!)
   2bf74:	ldr	lr, [ip, #76]	; 0x4c
   2bf78:	mov	ip, lr
   2bf7c:	pop	{lr}		; (ldr lr, [sp], #4)
   2bf80:	bx	ip
   2bf84:	ldr	r3, [r0, #12]
   2bf88:	ldr	r0, [r3]
   2bf8c:	bx	lr
   2bf90:	ldr	r3, [r0, #12]
   2bf94:	push	{r4, r5, r6, lr}
   2bf98:	mov	r4, r0
   2bf9c:	mov	r5, r1
   2bfa0:	mov	r0, r1
   2bfa4:	ldr	r1, [r3]
   2bfa8:	bl	151cc <g_strcmp0@plt>
   2bfac:	cmp	r0, #0
   2bfb0:	popeq	{r4, r5, r6, pc}
   2bfb4:	mov	r0, r5
   2bfb8:	bl	147e8 <g_strdup@plt>
   2bfbc:	ldr	r3, [r4, #12]
   2bfc0:	mov	r5, r0
   2bfc4:	ldr	r0, [r3]
   2bfc8:	bl	14bd8 <g_free@plt>
   2bfcc:	ldr	r2, [r4, #12]
   2bfd0:	ldr	r3, [pc, #16]	; 2bfe8 <g_strcmp0@plt+0x16e1c>
   2bfd4:	mov	r0, r4
   2bfd8:	str	r5, [r2]
   2bfdc:	ldr	r1, [r3, #16]
   2bfe0:	pop	{r4, r5, r6, lr}
   2bfe4:	b	14b78 <g_object_notify_by_pspec@plt>
   2bfe8:	andeq	ip, r4, r0, lsr #8
   2bfec:	ldr	r3, [r0, #12]
   2bff0:	ldr	r0, [r3, #4]
   2bff4:	bx	lr
   2bff8:	ldr	r3, [r0, #12]
   2bffc:	push	{r4, r5, r6, lr}
   2c000:	mov	r4, r0
   2c004:	mov	r5, r1
   2c008:	mov	r0, r1
   2c00c:	ldr	r1, [r3, #4]
   2c010:	bl	151cc <g_strcmp0@plt>
   2c014:	cmp	r0, #0
   2c018:	popeq	{r4, r5, r6, pc}
   2c01c:	mov	r0, r5
   2c020:	bl	147e8 <g_strdup@plt>
   2c024:	ldr	r3, [r4, #12]
   2c028:	mov	r5, r0
   2c02c:	ldr	r0, [r3, #4]
   2c030:	bl	14bd8 <g_free@plt>
   2c034:	ldr	r2, [r4, #12]
   2c038:	ldr	r3, [pc, #16]	; 2c050 <g_strcmp0@plt+0x16e84>
   2c03c:	mov	r0, r4
   2c040:	str	r5, [r2, #4]
   2c044:	ldr	r1, [r3, #20]
   2c048:	pop	{r4, r5, r6, lr}
   2c04c:	b	14b78 <g_object_notify_by_pspec@plt>
   2c050:	andeq	ip, r4, r0, lsr #8
   2c054:	cmp	r1, #1
   2c058:	push	{r4, r5, r6, r7, lr}
   2c05c:	mov	r5, r0
   2c060:	sub	sp, sp, #28
   2c064:	beq	2c0c4 <g_strcmp0@plt+0x16ef8>
   2c068:	cmp	r1, #2
   2c06c:	mov	r4, r1
   2c070:	beq	2c0e0 <g_strcmp0@plt+0x16f14>
   2c074:	ldm	r3, {r2, r6}
   2c078:	ldr	r0, [r2]
   2c07c:	bl	14680 <g_type_name@plt>
   2c080:	ldr	r3, [r5]
   2c084:	mov	r7, r0
   2c088:	ldr	r0, [r3]
   2c08c:	bl	14680 <g_type_name@plt>
   2c090:	ldr	r2, [pc, #100]	; 2c0fc <g_strcmp0@plt+0x16f30>
   2c094:	ldr	r3, [pc, #100]	; 2c100 <g_strcmp0@plt+0x16f34>
   2c098:	strd	r6, [sp, #12]
   2c09c:	stmib	sp, {r2, r4}
   2c0a0:	str	r3, [sp]
   2c0a4:	ldr	r2, [pc, #88]	; 2c104 <g_strcmp0@plt+0x16f38>
   2c0a8:	ldr	r3, [pc, #88]	; 2c108 <g_strcmp0@plt+0x16f3c>
   2c0ac:	mov	r1, #16
   2c0b0:	str	r0, [sp, #20]
   2c0b4:	mov	r0, #0
   2c0b8:	bl	14668 <g_log@plt>
   2c0bc:	add	sp, sp, #28
   2c0c0:	pop	{r4, r5, r6, r7, pc}
   2c0c4:	mov	r0, r2
   2c0c8:	bl	144a0 <g_value_get_string@plt>
   2c0cc:	mov	r1, r0
   2c0d0:	mov	r0, r5
   2c0d4:	add	sp, sp, #28
   2c0d8:	pop	{r4, r5, r6, r7, lr}
   2c0dc:	b	2bf90 <g_strcmp0@plt+0x16dc4>
   2c0e0:	mov	r0, r2
   2c0e4:	bl	144a0 <g_value_get_string@plt>
   2c0e8:	mov	r1, r0
   2c0ec:	mov	r0, r5
   2c0f0:	add	sp, sp, #28
   2c0f4:	pop	{r4, r5, r6, r7, lr}
   2c0f8:	b	2bff8 <g_strcmp0@plt+0x16e2c>
   2c0fc:	andeq	r4, r3, ip, lsr pc
   2c100:	andeq	r0, r0, sl, lsl #13
   2c104:	andeq	r4, r3, r4, lsl #30
   2c108:	strdeq	r9, [r3], -ip
   2c10c:	push	{r4, r5, r6, lr}
   2c110:	mcr	15, 0, r0, cr7, cr10, {5}
   2c114:	ldr	r4, [pc, #92]	; 2c178 <g_strcmp0@plt+0x16fac>
   2c118:	ldr	r5, [r4, #88]	; 0x58
   2c11c:	mcr	15, 0, r0, cr7, cr10, {5}
   2c120:	cmp	r5, #0
   2c124:	beq	2c130 <g_strcmp0@plt+0x16f64>
   2c128:	ldr	r0, [r4, #88]	; 0x58
   2c12c:	pop	{r4, r5, r6, pc}
   2c130:	add	r0, r4, #88	; 0x58
   2c134:	bl	14a28 <g_once_init_enter@plt>
   2c138:	cmp	r0, #0
   2c13c:	beq	2c128 <g_strcmp0@plt+0x16f5c>
   2c140:	mov	r3, r5
   2c144:	ldr	r2, [pc, #48]	; 2c17c <g_strcmp0@plt+0x16fb0>
   2c148:	ldr	r1, [pc, #48]	; 2c180 <g_strcmp0@plt+0x16fb4>
   2c14c:	mov	r0, #80	; 0x50
   2c150:	bl	14428 <g_type_register_static@plt>
   2c154:	mov	r1, #8
   2c158:	mov	r5, r0
   2c15c:	bl	14c08 <g_type_add_instance_private@plt>
   2c160:	mov	r1, r5
   2c164:	str	r0, [r4, #4]
   2c168:	add	r0, r4, #88	; 0x58
   2c16c:	bl	14ed8 <g_once_init_leave@plt>
   2c170:	ldr	r0, [r4, #88]	; 0x58
   2c174:	pop	{r4, r5, r6, pc}
   2c178:	andeq	ip, r4, r0, lsr #8
   2c17c:	andeq	r9, r3, ip, lsr fp
   2c180:	andeq	sl, r3, ip, lsr r1
   2c184:	push	{r4, lr}
   2c188:	bl	2c10c <g_strcmp0@plt+0x16f40>
   2c18c:	pop	{r4, lr}
   2c190:	b	2a0a4 <g_strcmp0@plt+0x14ed8>
   2c194:	push	{r4, r5, r6, r7, lr}
   2c198:	sub	sp, sp, #28
   2c19c:	ldr	r6, [pc, #320]	; 2c2e4 <g_strcmp0@plt+0x17118>
   2c1a0:	ldr	r1, [r0, #44]	; 0x2c
   2c1a4:	mov	r4, r0
   2c1a8:	ldr	r2, [r6]
   2c1ac:	mov	r3, #0
   2c1b0:	ldr	r0, [r1, #4]
   2c1b4:	str	r2, [sp, #20]
   2c1b8:	str	r3, [sp, #16]
   2c1bc:	bl	14fa4 <g_file_new_for_path@plt>
   2c1c0:	mov	r5, r0
   2c1c4:	ldr	r0, [r4, #56]	; 0x38
   2c1c8:	cmp	r0, #0
   2c1cc:	beq	2c1d4 <g_strcmp0@plt+0x17008>
   2c1d0:	bl	14e90 <g_object_unref@plt>
   2c1d4:	mov	r2, #0
   2c1d8:	str	r5, [r4, #56]	; 0x38
   2c1dc:	mov	r0, r5
   2c1e0:	add	r3, sp, #16
   2c1e4:	mov	r1, r2
   2c1e8:	bl	14d28 <g_file_monitor_file@plt>
   2c1ec:	ldr	r5, [sp, #16]
   2c1f0:	cmp	r5, #0
   2c1f4:	mov	r7, r0
   2c1f8:	beq	2c284 <g_strcmp0@plt+0x170b8>
   2c1fc:	mov	ip, #0
   2c200:	mov	r0, ip
   2c204:	ldr	r3, [r5, #8]
   2c208:	ldr	r2, [pc, #216]	; 2c2e8 <g_strcmp0@plt+0x1711c>
   2c20c:	mov	r1, #32
   2c210:	str	ip, [sp, #16]
   2c214:	bl	14668 <g_log@plt>
   2c218:	mov	r0, r5
   2c21c:	bl	1453c <g_error_free@plt>
   2c220:	ldr	r4, [sp, #16]
   2c224:	cmp	r4, #0
   2c228:	beq	2c26c <g_strcmp0@plt+0x170a0>
   2c22c:	ldr	r0, [r4]
   2c230:	bl	14c2c <g_quark_to_string@plt>
   2c234:	ldr	r3, [r4, #4]
   2c238:	ldr	ip, [pc, #172]	; 2c2ec <g_strcmp0@plt+0x17120>
   2c23c:	str	r3, [sp, #12]
   2c240:	ldr	r2, [pc, #168]	; 2c2f0 <g_strcmp0@plt+0x17124>
   2c244:	ldr	r3, [pc, #168]	; 2c2f4 <g_strcmp0@plt+0x17128>
   2c248:	mov	r1, #8
   2c24c:	str	r0, [sp, #8]
   2c250:	ldr	r0, [r4, #8]
   2c254:	str	ip, [sp]
   2c258:	str	r0, [sp, #4]
   2c25c:	mov	r0, #0
   2c260:	bl	14668 <g_log@plt>
   2c264:	add	r0, sp, #16
   2c268:	bl	14dac <g_clear_error@plt>
   2c26c:	ldr	r2, [sp, #20]
   2c270:	ldr	r3, [r6]
   2c274:	cmp	r2, r3
   2c278:	bne	2c2e0 <g_strcmp0@plt+0x17114>
   2c27c:	add	sp, sp, #28
   2c280:	pop	{r4, r5, r6, r7, pc}
   2c284:	ldr	r0, [r4, #64]	; 0x40
   2c288:	cmp	r0, #0
   2c28c:	beq	2c294 <g_strcmp0@plt+0x170c8>
   2c290:	bl	14e90 <g_object_unref@plt>
   2c294:	mov	r5, #0
   2c298:	str	r7, [r4, #64]	; 0x40
   2c29c:	mov	r3, r4
   2c2a0:	ldr	r2, [pc, #80]	; 2c2f8 <g_strcmp0@plt+0x1712c>
   2c2a4:	ldr	r1, [pc, #80]	; 2c2fc <g_strcmp0@plt+0x17130>
   2c2a8:	mov	r0, r7
   2c2ac:	str	r5, [sp]
   2c2b0:	bl	15190 <g_signal_connect_object@plt>
   2c2b4:	ldr	r0, [r4, #56]	; 0x38
   2c2b8:	bl	146f8 <g_file_get_path@plt>
   2c2bc:	ldr	r2, [pc, #60]	; 2c300 <g_strcmp0@plt+0x17134>
   2c2c0:	mov	r1, #32
   2c2c4:	mov	r4, r0
   2c2c8:	mov	r3, r0
   2c2cc:	mov	r0, r5
   2c2d0:	bl	14668 <g_log@plt>
   2c2d4:	mov	r0, r4
   2c2d8:	bl	14bd8 <g_free@plt>
   2c2dc:	b	2c220 <g_strcmp0@plt+0x17054>
   2c2e0:	bl	14b6c <__stack_chk_fail@plt>
   2c2e4:	andeq	fp, r4, r8, asr #19
   2c2e8:	andeq	sl, r3, r8, asr r1
   2c2ec:	andeq	r0, r0, r2, ror r7
   2c2f0:	andeq	r4, r3, r4, lsr #13
   2c2f4:	strdeq	r9, [r3], -ip
   2c2f8:	andeq	lr, r2, r0, lsr #10
   2c2fc:	andeq	r5, r3, ip, lsl #21
   2c300:	andeq	sl, r3, r0, ror r1
   2c304:	push	{r4, r5, r6, r7, r8, lr}
   2c308:	sub	sp, sp, #24
   2c30c:	ldr	r6, [pc, #392]	; 2c49c <g_strcmp0@plt+0x172d0>
   2c310:	ldr	r1, [r0, #44]	; 0x2c
   2c314:	mov	r4, r0
   2c318:	ldr	r2, [r6]
   2c31c:	mov	r3, #0
   2c320:	ldr	r0, [r1]
   2c324:	str	r2, [sp, #20]
   2c328:	str	r3, [sp, #16]
   2c32c:	bl	14fa4 <g_file_new_for_path@plt>
   2c330:	mov	r5, r0
   2c334:	ldr	r0, [r4, #52]	; 0x34
   2c338:	cmp	r0, #0
   2c33c:	beq	2c344 <g_strcmp0@plt+0x17178>
   2c340:	bl	14e90 <g_object_unref@plt>
   2c344:	str	r5, [r4, #52]	; 0x34
   2c348:	mov	r0, r5
   2c34c:	add	r3, sp, #16
   2c350:	ldr	r2, [r4, #68]	; 0x44
   2c354:	mov	r1, #0
   2c358:	bl	14d28 <g_file_monitor_file@plt>
   2c35c:	ldr	r5, [sp, #16]
   2c360:	cmp	r5, #0
   2c364:	mov	r7, r0
   2c368:	beq	2c3f4 <g_strcmp0@plt+0x17228>
   2c36c:	mov	ip, #0
   2c370:	mov	r0, ip
   2c374:	ldr	r3, [r5, #8]
   2c378:	ldr	r2, [pc, #288]	; 2c4a0 <g_strcmp0@plt+0x172d4>
   2c37c:	mov	r1, #32
   2c380:	str	ip, [sp, #16]
   2c384:	bl	14668 <g_log@plt>
   2c388:	mov	r0, r5
   2c38c:	bl	1453c <g_error_free@plt>
   2c390:	ldr	r4, [sp, #16]
   2c394:	cmp	r4, #0
   2c398:	beq	2c3dc <g_strcmp0@plt+0x17210>
   2c39c:	ldr	r0, [r4]
   2c3a0:	bl	14c2c <g_quark_to_string@plt>
   2c3a4:	ldr	r3, [r4, #4]
   2c3a8:	ldr	ip, [pc, #244]	; 2c4a4 <g_strcmp0@plt+0x172d8>
   2c3ac:	str	r3, [sp, #12]
   2c3b0:	ldr	r2, [pc, #240]	; 2c4a8 <g_strcmp0@plt+0x172dc>
   2c3b4:	ldr	r3, [pc, #240]	; 2c4ac <g_strcmp0@plt+0x172e0>
   2c3b8:	mov	r1, #8
   2c3bc:	str	r0, [sp, #8]
   2c3c0:	ldr	r0, [r4, #8]
   2c3c4:	str	ip, [sp]
   2c3c8:	str	r0, [sp, #4]
   2c3cc:	mov	r0, #0
   2c3d0:	bl	14668 <g_log@plt>
   2c3d4:	add	r0, sp, #16
   2c3d8:	bl	14dac <g_clear_error@plt>
   2c3dc:	ldr	r2, [sp, #20]
   2c3e0:	ldr	r3, [r6]
   2c3e4:	cmp	r2, r3
   2c3e8:	bne	2c498 <g_strcmp0@plt+0x172cc>
   2c3ec:	add	sp, sp, #24
   2c3f0:	pop	{r4, r5, r6, r7, r8, pc}
   2c3f4:	ldr	r0, [r4, #60]	; 0x3c
   2c3f8:	cmp	r0, #0
   2c3fc:	beq	2c404 <g_strcmp0@plt+0x17238>
   2c400:	bl	14e90 <g_object_unref@plt>
   2c404:	mov	r5, #0
   2c408:	str	r7, [r4, #60]	; 0x3c
   2c40c:	mov	r0, r7
   2c410:	mov	r3, r4
   2c414:	ldr	r2, [pc, #148]	; 2c4b0 <g_strcmp0@plt+0x172e4>
   2c418:	ldr	r1, [pc, #148]	; 2c4b4 <g_strcmp0@plt+0x172e8>
   2c41c:	str	r5, [sp]
   2c420:	bl	15190 <g_signal_connect_object@plt>
   2c424:	ldr	r3, [r4, #44]	; 0x2c
   2c428:	ldr	r2, [pc, #136]	; 2c4b8 <g_strcmp0@plt+0x172ec>
   2c42c:	mov	r1, #32
   2c430:	ldr	r3, [r3]
   2c434:	mov	r0, r5
   2c438:	bl	14668 <g_log@plt>
   2c43c:	ldr	r0, [r4, #52]	; 0x34
   2c440:	bl	146f8 <g_file_get_path@plt>
   2c444:	ldr	r3, [r4, #44]	; 0x2c
   2c448:	ldr	r1, [r3, #4]
   2c44c:	mov	r8, r0
   2c450:	bl	151cc <g_strcmp0@plt>
   2c454:	mov	r7, r0
   2c458:	mov	r0, r8
   2c45c:	bl	14bd8 <g_free@plt>
   2c460:	cmp	r7, r5
   2c464:	bne	2c47c <g_strcmp0@plt+0x172b0>
   2c468:	mov	r0, r7
   2c46c:	ldr	r2, [pc, #72]	; 2c4bc <g_strcmp0@plt+0x172f0>
   2c470:	mov	r1, #32
   2c474:	bl	14668 <g_log@plt>
   2c478:	b	2c390 <g_strcmp0@plt+0x171c4>
   2c47c:	mov	r0, r5
   2c480:	ldr	r2, [pc, #56]	; 2c4c0 <g_strcmp0@plt+0x172f4>
   2c484:	mov	r1, #32
   2c488:	bl	14668 <g_log@plt>
   2c48c:	mov	r0, r4
   2c490:	bl	2c194 <g_strcmp0@plt+0x16fc8>
   2c494:	b	2c390 <g_strcmp0@plt+0x171c4>
   2c498:	bl	14b6c <__stack_chk_fail@plt>
   2c49c:	andeq	fp, r4, r8, asr #19
   2c4a0:	muleq	r3, ip, r1
   2c4a4:	andeq	r0, r0, sl, lsr #14
   2c4a8:	andeq	r4, r3, r4, lsr #13
   2c4ac:	strdeq	r9, [r3], -ip
   2c4b0:	andeq	ip, r2, r0, asr #11
   2c4b4:	andeq	r5, r3, ip, lsl #21
   2c4b8:			; <UNDEFINED> instruction: 0x0003a1b4
   2c4bc:	ldrdeq	sl, [r3], -r8
   2c4c0:	andeq	sl, r3, r0, lsr #4
   2c4c4:	push	{r4, r5, r6, r7, r8, lr}
   2c4c8:	ldr	r5, [pc, #228]	; 2c5b4 <g_strcmp0@plt+0x173e8>
   2c4cc:	ldr	r4, [r5]
   2c4d0:	cmp	r4, #0
   2c4d4:	beq	2c4f4 <g_strcmp0@plt+0x17328>
   2c4d8:	mov	r0, r4
   2c4dc:	bl	29534 <g_strcmp0@plt+0x14368>
   2c4e0:	ldr	r2, [pc, #208]	; 2c5b8 <g_strcmp0@plt+0x173ec>
   2c4e4:	mov	r1, #32
   2c4e8:	mov	r0, #0
   2c4ec:	pop	{r4, r5, r6, r7, r8, lr}
   2c4f0:	b	14668 <g_log@plt>
   2c4f4:	bl	296a8 <g_strcmp0@plt+0x144dc>
   2c4f8:	subs	r7, r0, #0
   2c4fc:	beq	2c568 <g_strcmp0@plt+0x1739c>
   2c500:	bl	14404 <g_object_ref@plt>
   2c504:	ldr	r6, [r5]
   2c508:	cmp	r6, #0
   2c50c:	mov	r8, r0
   2c510:	beq	2c544 <g_strcmp0@plt+0x17378>
   2c514:	mov	r0, r6
   2c518:	bl	14e90 <g_object_unref@plt>
   2c51c:	mov	r0, r8
   2c520:	str	r8, [r5]
   2c524:	bl	29344 <g_strcmp0@plt+0x14178>
   2c528:	mov	r0, r4
   2c52c:	ldr	r2, [pc, #136]	; 2c5bc <g_strcmp0@plt+0x173f0>
   2c530:	mov	r1, #32
   2c534:	bl	14668 <g_log@plt>
   2c538:	mov	r0, r7
   2c53c:	pop	{r4, r5, r6, r7, r8, lr}
   2c540:	b	14e90 <g_object_unref@plt>
   2c544:	str	r0, [r5]
   2c548:	bl	29344 <g_strcmp0@plt+0x14178>
   2c54c:	mov	r0, r6
   2c550:	ldr	r2, [pc, #100]	; 2c5bc <g_strcmp0@plt+0x173f0>
   2c554:	mov	r1, #32
   2c558:	bl	14668 <g_log@plt>
   2c55c:	mov	r0, r7
   2c560:	pop	{r4, r5, r6, r7, r8, lr}
   2c564:	b	14e90 <g_object_unref@plt>
   2c568:	ldr	r4, [r5]
   2c56c:	cmp	r4, #0
   2c570:	beq	2c59c <g_strcmp0@plt+0x173d0>
   2c574:	mov	r0, r4
   2c578:	bl	14e90 <g_object_unref@plt>
   2c57c:	mov	r0, r7
   2c580:	str	r7, [r5]
   2c584:	bl	29344 <g_strcmp0@plt+0x14178>
   2c588:	mov	r0, r7
   2c58c:	ldr	r2, [pc, #40]	; 2c5bc <g_strcmp0@plt+0x173f0>
   2c590:	mov	r1, #32
   2c594:	pop	{r4, r5, r6, r7, r8, lr}
   2c598:	b	14668 <g_log@plt>
   2c59c:	bl	29344 <g_strcmp0@plt+0x14178>
   2c5a0:	mov	r0, r4
   2c5a4:	ldr	r2, [pc, #16]	; 2c5bc <g_strcmp0@plt+0x173f0>
   2c5a8:	mov	r1, #32
   2c5ac:	pop	{r4, r5, r6, r7, r8, lr}
   2c5b0:	b	14668 <g_log@plt>
   2c5b4:	andeq	ip, r4, ip, asr #32
   2c5b8:	andeq	sl, r3, r4, ror r2
   2c5bc:	andeq	sl, r3, r4, lsr #5
   2c5c0:	push	{r4, lr}
   2c5c4:	mov	r0, #0
   2c5c8:	ldr	r4, [sp, #8]
   2c5cc:	ldr	r2, [pc, #16]	; 2c5e4 <g_strcmp0@plt+0x17418>
   2c5d0:	mov	r1, #32
   2c5d4:	bl	14668 <g_log@plt>
   2c5d8:	mov	r0, r4
   2c5dc:	pop	{r4, lr}
   2c5e0:	b	2c4c4 <g_strcmp0@plt+0x172f8>
   2c5e4:	ldrdeq	sl, [r3], -r4
   2c5e8:	push	{r4, lr}
   2c5ec:	mov	r0, #0
   2c5f0:	mov	r4, r1
   2c5f4:	ldr	r2, [pc, #16]	; 2c60c <g_strcmp0@plt+0x17440>
   2c5f8:	mov	r1, #32
   2c5fc:	bl	14668 <g_log@plt>
   2c600:	mov	r0, r4
   2c604:	pop	{r4, lr}
   2c608:	b	2c4c4 <g_strcmp0@plt+0x172f8>
   2c60c:	andeq	sl, r3, r8, lsl r3
   2c610:	push	{r4, lr}
   2c614:	mov	r1, #32
   2c618:	mov	r4, r0
   2c61c:	ldr	r2, [pc, #16]	; 2c634 <g_strcmp0@plt+0x17468>
   2c620:	mov	r0, #0
   2c624:	bl	14668 <g_log@plt>
   2c628:	mov	r0, r4
   2c62c:	pop	{r4, lr}
   2c630:	b	2c4c4 <g_strcmp0@plt+0x172f8>
   2c634:	ldrdeq	sl, [r3], -r4
   2c638:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c63c:	sub	sp, sp, #28
   2c640:	ldr	r5, [pc, #692]	; 2c8fc <g_strcmp0@plt+0x17730>
   2c644:	ldr	r6, [sp, #64]	; 0x40
   2c648:	mov	r4, #0
   2c64c:	ldr	r0, [r5]
   2c650:	cmp	r6, r4
   2c654:	mov	r9, r1
   2c658:	mov	sl, r2
   2c65c:	str	r0, [sp, #20]
   2c660:	str	r4, [sp, #16]
   2c664:	ldr	r7, [sp, #68]	; 0x44
   2c668:	beq	2c80c <g_strcmp0@plt+0x17640>
   2c66c:	mov	r0, r3
   2c670:	mov	r2, r4
   2c674:	ldr	r1, [pc, #644]	; 2c900 <g_strcmp0@plt+0x17734>
   2c678:	bl	14dc4 <g_strconcat@plt>
   2c67c:	mov	r1, r6
   2c680:	mov	r2, r4
   2c684:	add	r8, sp, #16
   2c688:	mov	fp, r0
   2c68c:	bl	14dc4 <g_strconcat@plt>
   2c690:	mov	r1, sl
   2c694:	mov	r3, r8
   2c698:	mov	r6, r0
   2c69c:	mov	r2, r6
   2c6a0:	mov	r0, r9
   2c6a4:	bl	14854 <g_key_file_get_value@plt>
   2c6a8:	mov	r9, r0
   2c6ac:	mov	r0, r6
   2c6b0:	bl	14bd8 <g_free@plt>
   2c6b4:	mov	r0, fp
   2c6b8:	bl	14bd8 <g_free@plt>
   2c6bc:	ldr	r6, [sp, #16]
   2c6c0:	cmp	r6, #0
   2c6c4:	beq	2c728 <g_strcmp0@plt+0x1755c>
   2c6c8:	ldr	r6, [r6]
   2c6cc:	bl	149d4 <g_key_file_error_quark@plt>
   2c6d0:	cmp	r6, r0
   2c6d4:	bne	2c8b0 <g_strcmp0@plt+0x176e4>
   2c6d8:	ldr	r4, [sp, #16]
   2c6dc:	mov	r9, #0
   2c6e0:	mov	r0, r9
   2c6e4:	ldr	r3, [r4, #8]
   2c6e8:	ldr	r2, [pc, #532]	; 2c904 <g_strcmp0@plt+0x17738>
   2c6ec:	mov	r1, #32
   2c6f0:	str	r9, [sp, #16]
   2c6f4:	bl	14668 <g_log@plt>
   2c6f8:	mov	r0, r4
   2c6fc:	bl	1453c <g_error_free@plt>
   2c700:	ldr	r3, [sp, #16]
   2c704:	cmp	r3, r9
   2c708:	bne	2c744 <g_strcmp0@plt+0x17578>
   2c70c:	mov	r0, r7
   2c710:	bl	147e8 <g_strdup@plt>
   2c714:	mov	r9, #0
   2c718:	mov	r7, r0
   2c71c:	mov	r0, #0
   2c720:	bl	14bd8 <g_free@plt>
   2c724:	b	2c7e8 <g_strcmp0@plt+0x1761c>
   2c728:	mov	r0, r6
   2c72c:	bl	14bd8 <g_free@plt>
   2c730:	mov	r0, r6
   2c734:	bl	14bd8 <g_free@plt>
   2c738:	ldr	r4, [sp, #16]
   2c73c:	cmp	r4, #0
   2c740:	beq	2c7b8 <g_strcmp0@plt+0x175ec>
   2c744:	mov	r0, #0
   2c748:	bl	14bd8 <g_free@plt>
   2c74c:	mov	r0, r9
   2c750:	bl	14bd8 <g_free@plt>
   2c754:	ldr	r4, [sp, #16]
   2c758:	mov	r7, #0
   2c75c:	ldr	r0, [r4]
   2c760:	bl	14c2c <g_quark_to_string@plt>
   2c764:	ldr	r3, [r4, #4]
   2c768:	ldr	ip, [pc, #408]	; 2c908 <g_strcmp0@plt+0x1773c>
   2c76c:	str	r3, [sp, #12]
   2c770:	ldr	r2, [pc, #404]	; 2c90c <g_strcmp0@plt+0x17740>
   2c774:	ldr	r3, [pc, #404]	; 2c910 <g_strcmp0@plt+0x17744>
   2c778:	mov	r1, #8
   2c77c:	str	r0, [sp, #8]
   2c780:	ldr	r0, [r4, #8]
   2c784:	str	ip, [sp]
   2c788:	str	r0, [sp, #4]
   2c78c:	mov	r0, r7
   2c790:	bl	14668 <g_log@plt>
   2c794:	mov	r0, r8
   2c798:	bl	14dac <g_clear_error@plt>
   2c79c:	ldr	r2, [sp, #20]
   2c7a0:	ldr	r3, [r5]
   2c7a4:	mov	r0, r7
   2c7a8:	cmp	r2, r3
   2c7ac:	bne	2c8f8 <g_strcmp0@plt+0x1772c>
   2c7b0:	add	sp, sp, #28
   2c7b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c7b8:	cmp	r9, #0
   2c7bc:	beq	2c70c <g_strcmp0@plt+0x17540>
   2c7c0:	mov	r1, r9
   2c7c4:	mov	r0, r7
   2c7c8:	bl	151cc <g_strcmp0@plt>
   2c7cc:	subs	r6, r0, #0
   2c7d0:	bne	2c7f4 <g_strcmp0@plt+0x17628>
   2c7d4:	mov	r0, r7
   2c7d8:	bl	147e8 <g_strdup@plt>
   2c7dc:	mov	r7, r0
   2c7e0:	mov	r0, r6
   2c7e4:	bl	14bd8 <g_free@plt>
   2c7e8:	mov	r0, r9
   2c7ec:	bl	14bd8 <g_free@plt>
   2c7f0:	b	2c79c <g_strcmp0@plt+0x175d0>
   2c7f4:	mov	r0, r9
   2c7f8:	bl	147e8 <g_strdup@plt>
   2c7fc:	mov	r7, r0
   2c800:	mov	r0, r4
   2c804:	bl	14bd8 <g_free@plt>
   2c808:	b	2c7e8 <g_strcmp0@plt+0x1761c>
   2c80c:	add	r8, sp, #16
   2c810:	mov	r2, r3
   2c814:	mov	r0, r9
   2c818:	mov	r1, sl
   2c81c:	mov	r3, r8
   2c820:	bl	14854 <g_key_file_get_value@plt>
   2c824:	ldr	r4, [sp, #16]
   2c828:	cmp	r4, #0
   2c82c:	mov	r9, r0
   2c830:	beq	2c89c <g_strcmp0@plt+0x176d0>
   2c834:	ldr	r4, [r4]
   2c838:	bl	149d4 <g_key_file_error_quark@plt>
   2c83c:	cmp	r4, r0
   2c840:	beq	2c6d8 <g_strcmp0@plt+0x1750c>
   2c844:	mov	r0, r6
   2c848:	bl	14bd8 <g_free@plt>
   2c84c:	mov	r0, r6
   2c850:	bl	14bd8 <g_free@plt>
   2c854:	ldr	r4, [sp, #16]
   2c858:	mov	r7, r6
   2c85c:	ldr	r0, [r4]
   2c860:	bl	14c2c <g_quark_to_string@plt>
   2c864:	ldr	r3, [r4, #4]
   2c868:	ldr	ip, [pc, #164]	; 2c914 <g_strcmp0@plt+0x17748>
   2c86c:	str	r3, [sp, #12]
   2c870:	ldr	r2, [pc, #160]	; 2c918 <g_strcmp0@plt+0x1774c>
   2c874:	ldr	r3, [pc, #148]	; 2c910 <g_strcmp0@plt+0x17744>
   2c878:	mov	r1, #8
   2c87c:	str	r0, [sp, #8]
   2c880:	ldr	lr, [r4, #8]
   2c884:	mov	r0, r6
   2c888:	stm	sp, {ip, lr}
   2c88c:	bl	14668 <g_log@plt>
   2c890:	mov	r0, r8
   2c894:	bl	14dac <g_clear_error@plt>
   2c898:	b	2c79c <g_strcmp0@plt+0x175d0>
   2c89c:	mov	r0, r4
   2c8a0:	bl	14bd8 <g_free@plt>
   2c8a4:	mov	r0, r4
   2c8a8:	bl	14bd8 <g_free@plt>
   2c8ac:	b	2c738 <g_strcmp0@plt+0x1756c>
   2c8b0:	mov	r0, r4
   2c8b4:	bl	14bd8 <g_free@plt>
   2c8b8:	mov	r0, r4
   2c8bc:	bl	14bd8 <g_free@plt>
   2c8c0:	ldr	r6, [sp, #16]
   2c8c4:	mov	r7, r4
   2c8c8:	ldr	r0, [r6]
   2c8cc:	bl	14c2c <g_quark_to_string@plt>
   2c8d0:	ldr	r3, [r6, #4]
   2c8d4:	ldr	ip, [pc, #64]	; 2c91c <g_strcmp0@plt+0x17750>
   2c8d8:	str	r3, [sp, #12]
   2c8dc:	ldr	r2, [pc, #52]	; 2c918 <g_strcmp0@plt+0x1774c>
   2c8e0:	ldr	r3, [pc, #40]	; 2c910 <g_strcmp0@plt+0x17744>
   2c8e4:	mov	r1, #8
   2c8e8:	str	r0, [sp, #8]
   2c8ec:	mov	r0, r4
   2c8f0:	ldr	lr, [r6, #8]
   2c8f4:	b	2c888 <g_strcmp0@plt+0x176bc>
   2c8f8:	bl	14b6c <__stack_chk_fail@plt>
   2c8fc:	andeq	fp, r4, r8, asr #19
   2c900:	andeq	sl, r3, r8, asr #6
   2c904:	andeq	sl, r3, ip, asr #6
   2c908:	andeq	r0, r0, r6, lsl r8
   2c90c:	andeq	r4, r3, r4, lsr #13
   2c910:	strdeq	r9, [r3], -ip
   2c914:	ldrdeq	r0, [r0], -r9
   2c918:	andeq	r4, r3, r4, ror r6
   2c91c:	strdeq	r0, [r0], -sl
   2c920:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2c924:	sub	sp, sp, #24
   2c928:	ldr	r6, [pc, #468]	; 2cb04 <g_strcmp0@plt+0x17938>
   2c92c:	ldr	r7, [sp, #56]	; 0x38
   2c930:	mov	r4, r1
   2c934:	ldr	r1, [r6]
   2c938:	mov	r5, #0
   2c93c:	cmp	r7, #0
   2c940:	mov	sl, r2
   2c944:	str	r1, [sp, #20]
   2c948:	str	r5, [sp, #16]
   2c94c:	beq	2ca64 <g_strcmp0@plt+0x17898>
   2c950:	mov	r0, r3
   2c954:	mov	r2, r5
   2c958:	ldr	r1, [pc, #424]	; 2cb08 <g_strcmp0@plt+0x1793c>
   2c95c:	bl	14dc4 <g_strconcat@plt>
   2c960:	mov	r1, r7
   2c964:	mov	r2, r5
   2c968:	add	r8, sp, #16
   2c96c:	mov	r9, r0
   2c970:	bl	14dc4 <g_strconcat@plt>
   2c974:	mov	r3, r8
   2c978:	mov	r1, sl
   2c97c:	mov	r7, r0
   2c980:	mov	r2, r7
   2c984:	mov	r0, r4
   2c988:	bl	14e60 <g_key_file_get_integer@plt>
   2c98c:	mov	r4, r0
   2c990:	mov	r0, r7
   2c994:	bl	14bd8 <g_free@plt>
   2c998:	mov	r0, r9
   2c99c:	bl	14bd8 <g_free@plt>
   2c9a0:	ldr	r3, [sp, #16]
   2c9a4:	cmp	r3, #0
   2c9a8:	beq	2ca34 <g_strcmp0@plt+0x17868>
   2c9ac:	ldr	r4, [r3]
   2c9b0:	bl	149d4 <g_key_file_error_quark@plt>
   2c9b4:	cmp	r4, r0
   2c9b8:	bne	2cad4 <g_strcmp0@plt+0x17908>
   2c9bc:	ldr	r4, [sp, #16]
   2c9c0:	mov	r5, #0
   2c9c4:	mov	r0, r5
   2c9c8:	ldr	r3, [r4, #8]
   2c9cc:	ldr	r2, [pc, #312]	; 2cb0c <g_strcmp0@plt+0x17940>
   2c9d0:	mov	r1, #32
   2c9d4:	str	r5, [sp, #16]
   2c9d8:	bl	14668 <g_log@plt>
   2c9dc:	mov	r0, r4
   2c9e0:	bl	1453c <g_error_free@plt>
   2c9e4:	ldr	r7, [sp, #16]
   2c9e8:	cmp	r7, r5
   2c9ec:	beq	2ca44 <g_strcmp0@plt+0x17878>
   2c9f0:	ldr	r0, [r7]
   2c9f4:	bl	14c2c <g_quark_to_string@plt>
   2c9f8:	ldr	r3, [r7, #4]
   2c9fc:	ldr	ip, [pc, #268]	; 2cb10 <g_strcmp0@plt+0x17944>
   2ca00:	str	r3, [sp, #12]
   2ca04:	ldr	r2, [pc, #264]	; 2cb14 <g_strcmp0@plt+0x17948>
   2ca08:	ldr	r3, [pc, #264]	; 2cb18 <g_strcmp0@plt+0x1794c>
   2ca0c:	mov	r1, #8
   2ca10:	mvn	r4, #0
   2ca14:	str	r0, [sp, #8]
   2ca18:	ldr	lr, [r7, #8]
   2ca1c:	mov	r0, r5
   2ca20:	stm	sp, {ip, lr}
   2ca24:	bl	14668 <g_log@plt>
   2ca28:	mov	r0, r8
   2ca2c:	bl	14dac <g_clear_error@plt>
   2ca30:	b	2ca48 <g_strcmp0@plt+0x1787c>
   2ca34:	ldr	r3, [sp, #60]	; 0x3c
   2ca38:	cmp	r4, #0
   2ca3c:	cmpne	r3, r4
   2ca40:	bne	2ca48 <g_strcmp0@plt+0x1787c>
   2ca44:	ldr	r4, [sp, #60]	; 0x3c
   2ca48:	ldr	r2, [sp, #20]
   2ca4c:	ldr	r3, [r6]
   2ca50:	mov	r0, r4
   2ca54:	cmp	r2, r3
   2ca58:	bne	2cb00 <g_strcmp0@plt+0x17934>
   2ca5c:	add	sp, sp, #24
   2ca60:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ca64:	add	r8, sp, #16
   2ca68:	mov	r2, r3
   2ca6c:	mov	r0, r4
   2ca70:	mov	r3, r8
   2ca74:	mov	r1, sl
   2ca78:	bl	14e60 <g_key_file_get_integer@plt>
   2ca7c:	ldr	r3, [sp, #16]
   2ca80:	cmp	r3, r5
   2ca84:	mov	r4, r0
   2ca88:	beq	2ca34 <g_strcmp0@plt+0x17868>
   2ca8c:	ldr	r4, [r3]
   2ca90:	bl	149d4 <g_key_file_error_quark@plt>
   2ca94:	cmp	r4, r0
   2ca98:	beq	2c9bc <g_strcmp0@plt+0x177f0>
   2ca9c:	ldr	r5, [sp, #16]
   2caa0:	mvn	r4, #0
   2caa4:	ldr	r0, [r5]
   2caa8:	bl	14c2c <g_quark_to_string@plt>
   2caac:	ldr	r3, [r5, #4]
   2cab0:	ldr	ip, [pc, #100]	; 2cb1c <g_strcmp0@plt+0x17950>
   2cab4:	str	r3, [sp, #12]
   2cab8:	ldr	r2, [pc, #96]	; 2cb20 <g_strcmp0@plt+0x17954>
   2cabc:	ldr	r3, [pc, #84]	; 2cb18 <g_strcmp0@plt+0x1794c>
   2cac0:	mov	r1, #8
   2cac4:	str	r0, [sp, #8]
   2cac8:	mov	r0, r7
   2cacc:	ldr	lr, [r5, #8]
   2cad0:	b	2ca20 <g_strcmp0@plt+0x17854>
   2cad4:	ldr	r7, [sp, #16]
   2cad8:	mvn	r4, #0
   2cadc:	ldr	r0, [r7]
   2cae0:	bl	14c2c <g_quark_to_string@plt>
   2cae4:	ldr	r3, [r7, #4]
   2cae8:	ldr	ip, [pc, #52]	; 2cb24 <g_strcmp0@plt+0x17958>
   2caec:	str	r3, [sp, #12]
   2caf0:	ldr	r2, [pc, #40]	; 2cb20 <g_strcmp0@plt+0x17954>
   2caf4:	ldr	r3, [pc, #28]	; 2cb18 <g_strcmp0@plt+0x1794c>
   2caf8:	mov	r1, #8
   2cafc:	b	2ca14 <g_strcmp0@plt+0x17848>
   2cb00:	bl	14b6c <__stack_chk_fail@plt>
   2cb04:	andeq	fp, r4, r8, asr #19
   2cb08:	andeq	sl, r3, r8, asr #6
   2cb0c:	andeq	sl, r3, r4, ror #6
   2cb10:	andeq	r0, r0, r1, lsl #17
   2cb14:	andeq	r4, r3, r4, lsr #13
   2cb18:	strdeq	r9, [r3], -ip
   2cb1c:	andeq	r0, r0, r1, asr r8
   2cb20:	andeq	r4, r3, r4, ror r6
   2cb24:	andeq	r0, r0, sl, ror #16
   2cb28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cb2c:	sub	sp, sp, #44	; 0x2c
   2cb30:	ldr	r7, [pc, #812]	; 2ce64 <g_strcmp0@plt+0x17c98>
   2cb34:	ldr	r6, [sp, #80]	; 0x50
   2cb38:	mov	r4, #0
   2cb3c:	ldr	r0, [r7]
   2cb40:	cmp	r6, r4
   2cb44:	mov	sl, r1
   2cb48:	mov	fp, r2
   2cb4c:	str	r0, [sp, #36]	; 0x24
   2cb50:	str	r4, [sp, #28]
   2cb54:	ldr	r5, [sp, #84]	; 0x54
   2cb58:	ldr	r8, [sp, #92]	; 0x5c
   2cb5c:	beq	2cd30 <g_strcmp0@plt+0x17b64>
   2cb60:	mov	r0, r3
   2cb64:	mov	r2, r4
   2cb68:	ldr	r1, [pc, #760]	; 2ce68 <g_strcmp0@plt+0x17c9c>
   2cb6c:	str	r4, [sp, #32]
   2cb70:	bl	14dc4 <g_strconcat@plt>
   2cb74:	mov	r1, r6
   2cb78:	mov	r2, r4
   2cb7c:	add	r9, sp, #28
   2cb80:	str	r0, [sp, #20]
   2cb84:	bl	14dc4 <g_strconcat@plt>
   2cb88:	mov	r1, fp
   2cb8c:	add	r3, sp, #32
   2cb90:	str	r9, [sp]
   2cb94:	mov	r6, r0
   2cb98:	mov	r2, r6
   2cb9c:	mov	r0, sl
   2cba0:	bl	14440 <g_key_file_get_string_list@plt>
   2cba4:	ldr	fp, [sp, #32]
   2cba8:	mov	sl, r0
   2cbac:	mov	r0, r6
   2cbb0:	bl	14bd8 <g_free@plt>
   2cbb4:	ldr	r0, [sp, #20]
   2cbb8:	bl	14bd8 <g_free@plt>
   2cbbc:	ldr	r6, [sp, #28]
   2cbc0:	cmp	r6, #0
   2cbc4:	beq	2cc18 <g_strcmp0@plt+0x17a4c>
   2cbc8:	ldr	r6, [r6]
   2cbcc:	bl	149d4 <g_key_file_error_quark@plt>
   2cbd0:	cmp	r6, r0
   2cbd4:	bne	2ce10 <g_strcmp0@plt+0x17c44>
   2cbd8:	ldr	r4, [sp, #28]
   2cbdc:	mov	fp, #0
   2cbe0:	mov	r0, fp
   2cbe4:	ldr	r3, [r4, #8]
   2cbe8:	ldr	r2, [pc, #636]	; 2ce6c <g_strcmp0@plt+0x17ca0>
   2cbec:	mov	r1, #32
   2cbf0:	str	fp, [sp, #28]
   2cbf4:	bl	14668 <g_log@plt>
   2cbf8:	mov	r0, r4
   2cbfc:	bl	1453c <g_error_free@plt>
   2cc00:	ldr	r3, [sp, #28]
   2cc04:	cmp	r3, fp
   2cc08:	moveq	fp, r3
   2cc0c:	beq	2cd04 <g_strcmp0@plt+0x17b38>
   2cc10:	mov	sl, fp
   2cc14:	b	2cc3c <g_strcmp0@plt+0x17a70>
   2cc18:	mov	r1, r6
   2cc1c:	mov	r0, r6
   2cc20:	bl	2a05c <g_strcmp0@plt+0x14e90>
   2cc24:	mov	r1, r6
   2cc28:	mov	r0, r6
   2cc2c:	bl	2a05c <g_strcmp0@plt+0x14e90>
   2cc30:	ldr	r4, [sp, #28]
   2cc34:	cmp	r4, #0
   2cc38:	beq	2ccb8 <g_strcmp0@plt+0x17aec>
   2cc3c:	mov	r1, #0
   2cc40:	mov	r0, r1
   2cc44:	bl	2a05c <g_strcmp0@plt+0x14e90>
   2cc48:	mov	r1, fp
   2cc4c:	mov	r0, sl
   2cc50:	bl	2a05c <g_strcmp0@plt+0x14e90>
   2cc54:	ldr	r4, [sp, #28]
   2cc58:	mov	r5, #0
   2cc5c:	ldr	r0, [r4]
   2cc60:	bl	14c2c <g_quark_to_string@plt>
   2cc64:	ldr	r3, [r4, #4]
   2cc68:	ldr	ip, [pc, #512]	; 2ce70 <g_strcmp0@plt+0x17ca4>
   2cc6c:	str	r3, [sp, #12]
   2cc70:	ldr	r2, [pc, #508]	; 2ce74 <g_strcmp0@plt+0x17ca8>
   2cc74:	ldr	r3, [pc, #508]	; 2ce78 <g_strcmp0@plt+0x17cac>
   2cc78:	mov	r1, #8
   2cc7c:	str	r0, [sp, #8]
   2cc80:	ldr	r0, [r4, #8]
   2cc84:	str	ip, [sp]
   2cc88:	str	r0, [sp, #4]
   2cc8c:	mov	r0, r5
   2cc90:	bl	14668 <g_log@plt>
   2cc94:	mov	r0, r9
   2cc98:	bl	14dac <g_clear_error@plt>
   2cc9c:	ldr	r2, [sp, #36]	; 0x24
   2cca0:	ldr	r3, [r7]
   2cca4:	mov	r0, r5
   2cca8:	cmp	r2, r3
   2ccac:	bne	2ce60 <g_strcmp0@plt+0x17c94>
   2ccb0:	add	sp, sp, #44	; 0x2c
   2ccb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ccb8:	cmp	sl, #0
   2ccbc:	beq	2cd04 <g_strcmp0@plt+0x17b38>
   2ccc0:	cmp	sl, r5
   2ccc4:	beq	2cdf0 <g_strcmp0@plt+0x17c24>
   2ccc8:	mov	r1, fp
   2cccc:	mov	r0, sl
   2ccd0:	bl	29cc0 <g_strcmp0@plt+0x14af4>
   2ccd4:	mov	r1, r4
   2ccd8:	str	fp, [sp, #88]	; 0x58
   2ccdc:	mov	r5, r0
   2cce0:	mov	r0, r4
   2cce4:	bl	2a05c <g_strcmp0@plt+0x14e90>
   2cce8:	cmp	r8, #0
   2ccec:	mov	r1, fp
   2ccf0:	ldrne	r3, [sp, #88]	; 0x58
   2ccf4:	mov	r0, sl
   2ccf8:	strne	r3, [r8]
   2ccfc:	bl	2a05c <g_strcmp0@plt+0x14e90>
   2cd00:	b	2cc9c <g_strcmp0@plt+0x17ad0>
   2cd04:	cmp	r5, #0
   2cd08:	beq	2cd1c <g_strcmp0@plt+0x17b50>
   2cd0c:	mov	r0, r5
   2cd10:	ldr	r1, [sp, #88]	; 0x58
   2cd14:	bl	29cc0 <g_strcmp0@plt+0x14af4>
   2cd18:	mov	r5, r0
   2cd1c:	mov	r1, #0
   2cd20:	mov	r0, r1
   2cd24:	bl	2a05c <g_strcmp0@plt+0x14e90>
   2cd28:	mov	sl, #0
   2cd2c:	b	2cce8 <g_strcmp0@plt+0x17b1c>
   2cd30:	add	r9, sp, #28
   2cd34:	mov	r2, r3
   2cd38:	mov	r1, fp
   2cd3c:	mov	r0, sl
   2cd40:	str	r9, [sp]
   2cd44:	add	r3, sp, #32
   2cd48:	str	r6, [sp, #32]
   2cd4c:	bl	14440 <g_key_file_get_string_list@plt>
   2cd50:	ldr	r4, [sp, #28]
   2cd54:	ldr	fp, [sp, #32]
   2cd58:	cmp	r4, #0
   2cd5c:	mov	sl, r0
   2cd60:	beq	2cdd4 <g_strcmp0@plt+0x17c08>
   2cd64:	ldr	r4, [r4]
   2cd68:	bl	149d4 <g_key_file_error_quark@plt>
   2cd6c:	cmp	r4, r0
   2cd70:	beq	2cbd8 <g_strcmp0@plt+0x17a0c>
   2cd74:	mov	r1, r6
   2cd78:	mov	r0, r6
   2cd7c:	bl	2a05c <g_strcmp0@plt+0x14e90>
   2cd80:	mov	r1, r6
   2cd84:	mov	r0, r6
   2cd88:	bl	2a05c <g_strcmp0@plt+0x14e90>
   2cd8c:	ldr	r4, [sp, #28]
   2cd90:	mov	r5, r6
   2cd94:	ldr	r0, [r4]
   2cd98:	bl	14c2c <g_quark_to_string@plt>
   2cd9c:	ldr	r3, [r4, #4]
   2cda0:	ldr	ip, [pc, #212]	; 2ce7c <g_strcmp0@plt+0x17cb0>
   2cda4:	str	r3, [sp, #12]
   2cda8:	ldr	r2, [pc, #208]	; 2ce80 <g_strcmp0@plt+0x17cb4>
   2cdac:	ldr	r3, [pc, #196]	; 2ce78 <g_strcmp0@plt+0x17cac>
   2cdb0:	mov	r1, #8
   2cdb4:	str	r0, [sp, #8]
   2cdb8:	ldr	lr, [r4, #8]
   2cdbc:	mov	r0, r6
   2cdc0:	stm	sp, {ip, lr}
   2cdc4:	bl	14668 <g_log@plt>
   2cdc8:	mov	r0, r9
   2cdcc:	bl	14dac <g_clear_error@plt>
   2cdd0:	b	2cc9c <g_strcmp0@plt+0x17ad0>
   2cdd4:	mov	r1, r4
   2cdd8:	mov	r0, r4
   2cddc:	bl	2a05c <g_strcmp0@plt+0x14e90>
   2cde0:	mov	r1, r4
   2cde4:	mov	r0, r4
   2cde8:	bl	2a05c <g_strcmp0@plt+0x14e90>
   2cdec:	b	2cc30 <g_strcmp0@plt+0x17a64>
   2cdf0:	ldr	r1, [sp, #88]	; 0x58
   2cdf4:	mov	r0, sl
   2cdf8:	bl	29cc0 <g_strcmp0@plt+0x14af4>
   2cdfc:	mov	r1, r4
   2ce00:	mov	r5, r0
   2ce04:	mov	r0, r4
   2ce08:	bl	2a05c <g_strcmp0@plt+0x14e90>
   2ce0c:	b	2cce8 <g_strcmp0@plt+0x17b1c>
   2ce10:	mov	r1, r4
   2ce14:	mov	r0, r4
   2ce18:	bl	2a05c <g_strcmp0@plt+0x14e90>
   2ce1c:	mov	r1, r4
   2ce20:	mov	r0, r4
   2ce24:	bl	2a05c <g_strcmp0@plt+0x14e90>
   2ce28:	ldr	r6, [sp, #28]
   2ce2c:	mov	r5, r4
   2ce30:	ldr	r0, [r6]
   2ce34:	bl	14c2c <g_quark_to_string@plt>
   2ce38:	ldr	r3, [r6, #4]
   2ce3c:	ldr	ip, [pc, #64]	; 2ce84 <g_strcmp0@plt+0x17cb8>
   2ce40:	str	r3, [sp, #12]
   2ce44:	ldr	r2, [pc, #52]	; 2ce80 <g_strcmp0@plt+0x17cb4>
   2ce48:	ldr	r3, [pc, #40]	; 2ce78 <g_strcmp0@plt+0x17cac>
   2ce4c:	mov	r1, #8
   2ce50:	str	r0, [sp, #8]
   2ce54:	mov	r0, r4
   2ce58:	ldr	lr, [r6, #8]
   2ce5c:	b	2cdc0 <g_strcmp0@plt+0x17bf4>
   2ce60:	bl	14b6c <__stack_chk_fail@plt>
   2ce64:	andeq	fp, r4, r8, asr #19
   2ce68:	andeq	sl, r3, r8, asr #6
   2ce6c:	andeq	sl, r3, ip, ror r3
   2ce70:	andeq	r0, r0, r4, asr #18
   2ce74:	andeq	r4, r3, r4, lsr #13
   2ce78:	strdeq	r9, [r3], -ip
   2ce7c:	strdeq	r0, [r0], -r7
   2ce80:	andeq	r4, r3, r4, ror r6
   2ce84:	andeq	r0, r0, r4, lsr #18
   2ce88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ce8c:	mov	r5, r2
   2ce90:	ldr	r2, [pc, #496]	; 2d088 <g_strcmp0@plt+0x17ebc>
   2ce94:	sub	sp, sp, #44	; 0x2c
   2ce98:	mov	r4, r0
   2ce9c:	ldr	ip, [r2]
   2cea0:	str	r1, [sp, #20]
   2cea4:	mov	r2, #0
   2cea8:	ldr	r1, [pc, #476]	; 2d08c <g_strcmp0@plt+0x17ec0>
   2ceac:	mov	r0, r5
   2ceb0:	str	ip, [sp, #36]	; 0x24
   2ceb4:	mov	r6, r3
   2ceb8:	ldr	r7, [sp, #80]	; 0x50
   2cebc:	ldr	r8, [sp, #84]	; 0x54
   2cec0:	bl	14dc4 <g_strconcat@plt>
   2cec4:	mov	r1, r6
   2cec8:	mov	r2, #0
   2cecc:	str	r0, [sp, #12]
   2ced0:	bl	14dc4 <g_strconcat@plt>
   2ced4:	mov	r2, #0
   2ced8:	ldr	r1, [pc, #428]	; 2d08c <g_strcmp0@plt+0x17ec0>
   2cedc:	mov	sl, r0
   2cee0:	bl	14dc4 <g_strconcat@plt>
   2cee4:	mov	r1, r7
   2cee8:	mov	r2, #0
   2ceec:	mov	fp, r0
   2cef0:	bl	14dc4 <g_strconcat@plt>
   2cef4:	mov	r2, #0
   2cef8:	ldr	r1, [pc, #396]	; 2d08c <g_strcmp0@plt+0x17ec0>
   2cefc:	str	r0, [sp, #16]
   2cf00:	bl	14dc4 <g_strconcat@plt>
   2cf04:	ldr	r3, [sp, #16]
   2cf08:	mov	r9, r0
   2cf0c:	mov	r0, r3
   2cf10:	bl	14bd8 <g_free@plt>
   2cf14:	mov	r0, fp
   2cf18:	bl	14bd8 <g_free@plt>
   2cf1c:	mov	r0, sl
   2cf20:	bl	14bd8 <g_free@plt>
   2cf24:	ldr	r0, [sp, #12]
   2cf28:	bl	14bd8 <g_free@plt>
   2cf2c:	cmp	r8, #0
   2cf30:	ldr	sl, [pc, #344]	; 2d090 <g_strcmp0@plt+0x17ec4>
   2cf34:	beq	2d060 <g_strcmp0@plt+0x17e94>
   2cf38:	mov	r0, r8
   2cf3c:	bl	14bcc <g_quark_from_string@plt>
   2cf40:	mov	fp, r0
   2cf44:	ldr	r0, [sl, #92]	; 0x5c
   2cf48:	cmp	r0, #0
   2cf4c:	beq	2d06c <g_strcmp0@plt+0x17ea0>
   2cf50:	cmp	r0, fp
   2cf54:	beq	2d030 <g_strcmp0@plt+0x17e64>
   2cf58:	mov	sl, #0
   2cf5c:	mov	r1, r9
   2cf60:	ldr	r0, [r4, #16]
   2cf64:	bl	14f74 <g_hash_table_contains@plt>
   2cf68:	subs	ip, r0, #0
   2cf6c:	beq	2d00c <g_strcmp0@plt+0x17e40>
   2cf70:	add	r2, sp, #32
   2cf74:	add	r3, sp, #28
   2cf78:	mov	fp, #0
   2cf7c:	mov	r1, r5
   2cf80:	mov	r0, r4
   2cf84:	str	r2, [sp, #4]
   2cf88:	str	r3, [sp]
   2cf8c:	mov	r2, r6
   2cf90:	mov	r3, r7
   2cf94:	str	fp, [sp, #28]
   2cf98:	str	fp, [sp, #32]
   2cf9c:	bl	2a1fc <g_strcmp0@plt+0x15030>
   2cfa0:	mov	r0, fp
   2cfa4:	bl	14bd8 <g_free@plt>
   2cfa8:	mov	r0, fp
   2cfac:	ldr	fp, [sp, #28]
   2cfb0:	bl	14bd8 <g_free@plt>
   2cfb4:	mov	r0, r4
   2cfb8:	stm	sp, {r8, sl}
   2cfbc:	mov	r3, r7
   2cfc0:	mov	r2, r6
   2cfc4:	mov	r1, r5
   2cfc8:	ldr	r4, [sp, #32]
   2cfcc:	bl	2ad08 <g_strcmp0@plt+0x15b3c>
   2cfd0:	mov	r0, r9
   2cfd4:	bl	14bd8 <g_free@plt>
   2cfd8:	mov	r0, r4
   2cfdc:	bl	14bd8 <g_free@plt>
   2cfe0:	mov	r0, sl
   2cfe4:	bl	14bd8 <g_free@plt>
   2cfe8:	mov	r0, fp
   2cfec:	bl	14bd8 <g_free@plt>
   2cff0:	ldr	r3, [pc, #144]	; 2d088 <g_strcmp0@plt+0x17ebc>
   2cff4:	ldr	r2, [sp, #36]	; 0x24
   2cff8:	ldr	r3, [r3]
   2cffc:	cmp	r2, r3
   2d000:	bne	2d084 <g_strcmp0@plt+0x17eb8>
   2d004:	add	sp, sp, #44	; 0x2c
   2d008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d00c:	mov	r0, r4
   2d010:	stm	sp, {r8, sl}
   2d014:	mov	r4, ip
   2d018:	mov	r3, r7
   2d01c:	mov	r2, r6
   2d020:	mov	r1, r5
   2d024:	bl	2ac1c <g_strcmp0@plt+0x15a50>
   2d028:	mov	fp, r4
   2d02c:	b	2cfd0 <g_strcmp0@plt+0x17e04>
   2d030:	mov	fp, #0
   2d034:	str	r7, [sp]
   2d038:	ldr	r1, [sp, #20]
   2d03c:	str	fp, [sp, #4]
   2d040:	mov	r3, r6
   2d044:	mov	r2, r5
   2d048:	mov	r0, r4
   2d04c:	bl	2c638 <g_strcmp0@plt+0x1746c>
   2d050:	mov	sl, r0
   2d054:	mov	r0, fp
   2d058:	bl	14bd8 <g_free@plt>
   2d05c:	b	2cf5c <g_strcmp0@plt+0x17d90>
   2d060:	ldr	fp, [sl, #92]	; 0x5c
   2d064:	cmp	fp, #0
   2d068:	bne	2cf58 <g_strcmp0@plt+0x17d8c>
   2d06c:	ldr	r0, [pc, #32]	; 2d094 <g_strcmp0@plt+0x17ec8>
   2d070:	bl	14d64 <g_quark_from_static_string@plt>
   2d074:	cmp	r0, fp
   2d078:	str	r0, [sl, #92]	; 0x5c
   2d07c:	bne	2cf58 <g_strcmp0@plt+0x17d8c>
   2d080:	b	2d030 <g_strcmp0@plt+0x17e64>
   2d084:	bl	14b6c <__stack_chk_fail@plt>
   2d088:	andeq	fp, r4, r8, asr #19
   2d08c:	strdeq	r7, [r3], -ip
   2d090:	andeq	ip, r4, r0, lsr #8
   2d094:	andeq	r4, r3, r4, asr r8
   2d098:	push	{r4, r5, r6, r7, r8, lr}
   2d09c:	mov	r4, r0
   2d0a0:	sub	sp, sp, #8
   2d0a4:	ldr	r0, [pc, #4052]	; 2e080 <g_strcmp0@plt+0x18eb4>
   2d0a8:	bl	300ac <g_strcmp0@plt+0x1aee0>
   2d0ac:	mov	r5, r0
   2d0b0:	ldr	r0, [r4, #48]	; 0x30
   2d0b4:	cmp	r0, #0
   2d0b8:	beq	2d0c0 <g_strcmp0@plt+0x17ef4>
   2d0bc:	bl	14f50 <g_key_file_unref@plt>
   2d0c0:	ldr	r8, [pc, #4028]	; 2e084 <g_strcmp0@plt+0x18eb8>
   2d0c4:	mov	r3, #0
   2d0c8:	str	r5, [r4, #48]	; 0x30
   2d0cc:	mov	r1, r5
   2d0d0:	str	r3, [sp, #4]
   2d0d4:	ldr	r2, [pc, #4012]	; 2e088 <g_strcmp0@plt+0x18ebc>
   2d0d8:	ldr	r3, [pc, #4012]	; 2e08c <g_strcmp0@plt+0x18ec0>
   2d0dc:	str	r8, [sp]
   2d0e0:	mov	r0, r4
   2d0e4:	bl	2c638 <g_strcmp0@plt+0x1746c>
   2d0e8:	mov	r5, r0
   2d0ec:	bl	14bd8 <g_free@plt>
   2d0f0:	cmp	r5, #0
   2d0f4:	ldr	r5, [pc, #3988]	; 2e090 <g_strcmp0@plt+0x18ec4>
   2d0f8:	beq	2d114 <g_strcmp0@plt+0x17f48>
   2d0fc:	mov	r3, r8
   2d100:	str	r5, [sp]
   2d104:	ldr	r2, [pc, #3968]	; 2e08c <g_strcmp0@plt+0x18ec0>
   2d108:	ldr	r1, [pc, #3960]	; 2e088 <g_strcmp0@plt+0x18ebc>
   2d10c:	mov	r0, r4
   2d110:	bl	2ae40 <g_strcmp0@plt+0x15c74>
   2d114:	ldr	r6, [pc, #3960]	; 2e094 <g_strcmp0@plt+0x18ec8>
   2d118:	mov	r3, #0
   2d11c:	str	r3, [sp, #4]
   2d120:	str	r6, [sp]
   2d124:	ldr	r3, [pc, #3948]	; 2e098 <g_strcmp0@plt+0x18ecc>
   2d128:	ldr	r2, [pc, #3948]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d12c:	ldr	r1, [r4, #48]	; 0x30
   2d130:	mov	r0, r4
   2d134:	bl	2c638 <g_strcmp0@plt+0x1746c>
   2d138:	mov	r7, r0
   2d13c:	bl	14bd8 <g_free@plt>
   2d140:	cmp	r7, #0
   2d144:	str	r5, [sp, #4]
   2d148:	beq	2e064 <g_strcmp0@plt+0x18e98>
   2d14c:	str	r6, [sp]
   2d150:	ldr	r3, [pc, #3904]	; 2e098 <g_strcmp0@plt+0x18ecc>
   2d154:	ldr	r2, [pc, #3904]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d158:	ldr	r1, [r4, #48]	; 0x30
   2d15c:	mov	r0, r4
   2d160:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d164:	ldr	r3, [pc, #3892]	; 2e0a0 <g_strcmp0@plt+0x18ed4>
   2d168:	ldr	r2, [pc, #3884]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d16c:	mov	r0, r4
   2d170:	stm	sp, {r3, r5}
   2d174:	ldr	r3, [pc, #3868]	; 2e098 <g_strcmp0@plt+0x18ecc>
   2d178:	ldr	r1, [r4, #48]	; 0x30
   2d17c:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d180:	ldr	r3, [pc, #3868]	; 2e0a4 <g_strcmp0@plt+0x18ed8>
   2d184:	ldr	r2, [pc, #3856]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d188:	mov	r0, r4
   2d18c:	stm	sp, {r3, r5}
   2d190:	ldr	r3, [pc, #3840]	; 2e098 <g_strcmp0@plt+0x18ecc>
   2d194:	ldr	r1, [r4, #48]	; 0x30
   2d198:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d19c:	mov	r3, #0
   2d1a0:	str	r3, [sp, #4]
   2d1a4:	str	r6, [sp]
   2d1a8:	ldr	r3, [pc, #3832]	; 2e0a8 <g_strcmp0@plt+0x18edc>
   2d1ac:	ldr	r2, [pc, #3816]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d1b0:	ldr	r1, [r4, #48]	; 0x30
   2d1b4:	mov	r0, r4
   2d1b8:	bl	2c638 <g_strcmp0@plt+0x1746c>
   2d1bc:	mov	r7, r0
   2d1c0:	bl	14bd8 <g_free@plt>
   2d1c4:	cmp	r7, #0
   2d1c8:	beq	2d204 <g_strcmp0@plt+0x18038>
   2d1cc:	str	r5, [sp, #4]
   2d1d0:	str	r6, [sp]
   2d1d4:	ldr	r3, [pc, #3788]	; 2e0a8 <g_strcmp0@plt+0x18edc>
   2d1d8:	ldr	r2, [pc, #3772]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d1dc:	ldr	r1, [r4, #48]	; 0x30
   2d1e0:	mov	r0, r4
   2d1e4:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d1e8:	ldr	r3, [pc, #3760]	; 2e0a0 <g_strcmp0@plt+0x18ed4>
   2d1ec:	ldr	r2, [pc, #3752]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d1f0:	mov	r0, r4
   2d1f4:	stm	sp, {r3, r5}
   2d1f8:	ldr	r3, [pc, #3752]	; 2e0a8 <g_strcmp0@plt+0x18edc>
   2d1fc:	ldr	r1, [r4, #48]	; 0x30
   2d200:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d204:	mov	r3, #0
   2d208:	str	r3, [sp, #4]
   2d20c:	str	r6, [sp]
   2d210:	ldr	r3, [pc, #3732]	; 2e0ac <g_strcmp0@plt+0x18ee0>
   2d214:	ldr	r2, [pc, #3712]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d218:	ldr	r1, [r4, #48]	; 0x30
   2d21c:	mov	r0, r4
   2d220:	bl	2c638 <g_strcmp0@plt+0x1746c>
   2d224:	mov	r7, r0
   2d228:	bl	14bd8 <g_free@plt>
   2d22c:	cmp	r7, #0
   2d230:	beq	2d26c <g_strcmp0@plt+0x180a0>
   2d234:	str	r5, [sp, #4]
   2d238:	str	r6, [sp]
   2d23c:	ldr	r3, [pc, #3688]	; 2e0ac <g_strcmp0@plt+0x18ee0>
   2d240:	ldr	r2, [pc, #3668]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d244:	ldr	r1, [r4, #48]	; 0x30
   2d248:	mov	r0, r4
   2d24c:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d250:	ldr	r3, [pc, #3656]	; 2e0a0 <g_strcmp0@plt+0x18ed4>
   2d254:	ldr	r2, [pc, #3648]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d258:	mov	r0, r4
   2d25c:	stm	sp, {r3, r5}
   2d260:	ldr	r3, [pc, #3652]	; 2e0ac <g_strcmp0@plt+0x18ee0>
   2d264:	ldr	r1, [r4, #48]	; 0x30
   2d268:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d26c:	mov	r3, #0
   2d270:	str	r3, [sp, #4]
   2d274:	str	r6, [sp]
   2d278:	ldr	r3, [pc, #3632]	; 2e0b0 <g_strcmp0@plt+0x18ee4>
   2d27c:	ldr	r2, [pc, #3608]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d280:	ldr	r1, [r4, #48]	; 0x30
   2d284:	mov	r0, r4
   2d288:	bl	2c638 <g_strcmp0@plt+0x1746c>
   2d28c:	mov	r7, r0
   2d290:	bl	14bd8 <g_free@plt>
   2d294:	cmp	r7, #0
   2d298:	beq	2d2f0 <g_strcmp0@plt+0x18124>
   2d29c:	str	r5, [sp, #4]
   2d2a0:	str	r6, [sp]
   2d2a4:	ldr	r3, [pc, #3588]	; 2e0b0 <g_strcmp0@plt+0x18ee4>
   2d2a8:	ldr	r2, [pc, #3564]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d2ac:	ldr	r1, [r4, #48]	; 0x30
   2d2b0:	mov	r0, r4
   2d2b4:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d2b8:	ldr	r3, [pc, #3552]	; 2e0a0 <g_strcmp0@plt+0x18ed4>
   2d2bc:	ldr	r2, [pc, #3544]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d2c0:	mov	r0, r4
   2d2c4:	stm	sp, {r3, r5}
   2d2c8:	ldr	r3, [pc, #3552]	; 2e0b0 <g_strcmp0@plt+0x18ee4>
   2d2cc:	ldr	r1, [r4, #48]	; 0x30
   2d2d0:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d2d4:	ldr	r3, [pc, #3528]	; 2e0a4 <g_strcmp0@plt+0x18ed8>
   2d2d8:	ldr	r2, [pc, #3516]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d2dc:	mov	r0, r4
   2d2e0:	stm	sp, {r3, r5}
   2d2e4:	ldr	r3, [pc, #3524]	; 2e0b0 <g_strcmp0@plt+0x18ee4>
   2d2e8:	ldr	r1, [r4, #48]	; 0x30
   2d2ec:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d2f0:	mov	r3, #0
   2d2f4:	str	r3, [sp, #4]
   2d2f8:	str	r6, [sp]
   2d2fc:	ldr	r3, [pc, #3504]	; 2e0b4 <g_strcmp0@plt+0x18ee8>
   2d300:	ldr	r2, [pc, #3476]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d304:	ldr	r1, [r4, #48]	; 0x30
   2d308:	mov	r0, r4
   2d30c:	bl	2c638 <g_strcmp0@plt+0x1746c>
   2d310:	mov	r7, r0
   2d314:	bl	14bd8 <g_free@plt>
   2d318:	cmp	r7, #0
   2d31c:	beq	2d358 <g_strcmp0@plt+0x1818c>
   2d320:	str	r5, [sp, #4]
   2d324:	str	r6, [sp]
   2d328:	ldr	r3, [pc, #3460]	; 2e0b4 <g_strcmp0@plt+0x18ee8>
   2d32c:	ldr	r2, [pc, #3432]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d330:	ldr	r1, [r4, #48]	; 0x30
   2d334:	mov	r0, r4
   2d338:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d33c:	ldr	r3, [pc, #3444]	; 2e0b8 <g_strcmp0@plt+0x18eec>
   2d340:	ldr	r2, [pc, #3412]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d344:	mov	r0, r4
   2d348:	stm	sp, {r3, r5}
   2d34c:	ldr	r3, [pc, #3424]	; 2e0b4 <g_strcmp0@plt+0x18ee8>
   2d350:	ldr	r1, [r4, #48]	; 0x30
   2d354:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d358:	mov	r3, #0
   2d35c:	str	r3, [sp, #4]
   2d360:	str	r6, [sp]
   2d364:	ldr	r3, [pc, #3408]	; 2e0bc <g_strcmp0@plt+0x18ef0>
   2d368:	ldr	r2, [pc, #3372]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d36c:	ldr	r1, [r4, #48]	; 0x30
   2d370:	mov	r0, r4
   2d374:	bl	2c638 <g_strcmp0@plt+0x1746c>
   2d378:	mov	r7, r0
   2d37c:	bl	14bd8 <g_free@plt>
   2d380:	cmp	r7, #0
   2d384:	beq	2d3c0 <g_strcmp0@plt+0x181f4>
   2d388:	str	r5, [sp, #4]
   2d38c:	str	r6, [sp]
   2d390:	ldr	r3, [pc, #3364]	; 2e0bc <g_strcmp0@plt+0x18ef0>
   2d394:	ldr	r2, [pc, #3328]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d398:	ldr	r1, [r4, #48]	; 0x30
   2d39c:	mov	r0, r4
   2d3a0:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d3a4:	ldr	r3, [pc, #3348]	; 2e0c0 <g_strcmp0@plt+0x18ef4>
   2d3a8:	ldr	r2, [pc, #3308]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d3ac:	mov	r0, r4
   2d3b0:	stm	sp, {r3, r5}
   2d3b4:	ldr	r3, [pc, #3328]	; 2e0bc <g_strcmp0@plt+0x18ef0>
   2d3b8:	ldr	r1, [r4, #48]	; 0x30
   2d3bc:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d3c0:	mov	r3, #0
   2d3c4:	str	r3, [sp, #4]
   2d3c8:	str	r6, [sp]
   2d3cc:	ldr	r3, [pc, #3312]	; 2e0c4 <g_strcmp0@plt+0x18ef8>
   2d3d0:	ldr	r2, [pc, #3268]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d3d4:	ldr	r1, [r4, #48]	; 0x30
   2d3d8:	mov	r0, r4
   2d3dc:	bl	2c638 <g_strcmp0@plt+0x1746c>
   2d3e0:	mov	r7, r0
   2d3e4:	bl	14bd8 <g_free@plt>
   2d3e8:	cmp	r7, #0
   2d3ec:	beq	2d428 <g_strcmp0@plt+0x1825c>
   2d3f0:	str	r5, [sp, #4]
   2d3f4:	str	r6, [sp]
   2d3f8:	ldr	r3, [pc, #3268]	; 2e0c4 <g_strcmp0@plt+0x18ef8>
   2d3fc:	ldr	r2, [pc, #3224]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d400:	ldr	r1, [r4, #48]	; 0x30
   2d404:	mov	r0, r4
   2d408:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d40c:	ldr	r3, [pc, #3244]	; 2e0c0 <g_strcmp0@plt+0x18ef4>
   2d410:	ldr	r2, [pc, #3204]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d414:	mov	r0, r4
   2d418:	stm	sp, {r3, r5}
   2d41c:	ldr	r3, [pc, #3232]	; 2e0c4 <g_strcmp0@plt+0x18ef8>
   2d420:	ldr	r1, [r4, #48]	; 0x30
   2d424:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d428:	mov	r3, #0
   2d42c:	str	r3, [sp, #4]
   2d430:	str	r6, [sp]
   2d434:	ldr	r3, [pc, #3212]	; 2e0c8 <g_strcmp0@plt+0x18efc>
   2d438:	ldr	r2, [pc, #3164]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d43c:	ldr	r1, [r4, #48]	; 0x30
   2d440:	mov	r0, r4
   2d444:	bl	2c638 <g_strcmp0@plt+0x1746c>
   2d448:	mov	r7, r0
   2d44c:	bl	14bd8 <g_free@plt>
   2d450:	cmp	r7, #0
   2d454:	beq	2d490 <g_strcmp0@plt+0x182c4>
   2d458:	str	r5, [sp, #4]
   2d45c:	str	r6, [sp]
   2d460:	ldr	r3, [pc, #3168]	; 2e0c8 <g_strcmp0@plt+0x18efc>
   2d464:	ldr	r2, [pc, #3120]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d468:	ldr	r1, [r4, #48]	; 0x30
   2d46c:	mov	r0, r4
   2d470:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d474:	ldr	r3, [pc, #3140]	; 2e0c0 <g_strcmp0@plt+0x18ef4>
   2d478:	ldr	r2, [pc, #3100]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d47c:	mov	r0, r4
   2d480:	stm	sp, {r3, r5}
   2d484:	ldr	r3, [pc, #3132]	; 2e0c8 <g_strcmp0@plt+0x18efc>
   2d488:	ldr	r1, [r4, #48]	; 0x30
   2d48c:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d490:	mov	r3, #0
   2d494:	str	r3, [sp, #4]
   2d498:	str	r6, [sp]
   2d49c:	ldr	r3, [pc, #3112]	; 2e0cc <g_strcmp0@plt+0x18f00>
   2d4a0:	ldr	r2, [pc, #3060]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d4a4:	ldr	r1, [r4, #48]	; 0x30
   2d4a8:	mov	r0, r4
   2d4ac:	bl	2c638 <g_strcmp0@plt+0x1746c>
   2d4b0:	mov	r7, r0
   2d4b4:	bl	14bd8 <g_free@plt>
   2d4b8:	cmp	r7, #0
   2d4bc:	beq	2d4f8 <g_strcmp0@plt+0x1832c>
   2d4c0:	str	r5, [sp, #4]
   2d4c4:	str	r6, [sp]
   2d4c8:	ldr	r3, [pc, #3068]	; 2e0cc <g_strcmp0@plt+0x18f00>
   2d4cc:	ldr	r2, [pc, #3016]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d4d0:	ldr	r1, [r4, #48]	; 0x30
   2d4d4:	mov	r0, r4
   2d4d8:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d4dc:	ldr	r3, [pc, #3036]	; 2e0c0 <g_strcmp0@plt+0x18ef4>
   2d4e0:	ldr	r2, [pc, #2996]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d4e4:	mov	r0, r4
   2d4e8:	stm	sp, {r3, r5}
   2d4ec:	ldr	r3, [pc, #3032]	; 2e0cc <g_strcmp0@plt+0x18f00>
   2d4f0:	ldr	r1, [r4, #48]	; 0x30
   2d4f4:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d4f8:	mov	r3, #0
   2d4fc:	str	r3, [sp, #4]
   2d500:	str	r6, [sp]
   2d504:	ldr	r3, [pc, #3012]	; 2e0d0 <g_strcmp0@plt+0x18f04>
   2d508:	ldr	r2, [pc, #2956]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d50c:	ldr	r1, [r4, #48]	; 0x30
   2d510:	mov	r0, r4
   2d514:	bl	2c638 <g_strcmp0@plt+0x1746c>
   2d518:	mov	r7, r0
   2d51c:	bl	14bd8 <g_free@plt>
   2d520:	cmp	r7, #0
   2d524:	beq	2d560 <g_strcmp0@plt+0x18394>
   2d528:	str	r5, [sp, #4]
   2d52c:	str	r6, [sp]
   2d530:	ldr	r3, [pc, #2968]	; 2e0d0 <g_strcmp0@plt+0x18f04>
   2d534:	ldr	r2, [pc, #2912]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d538:	ldr	r1, [r4, #48]	; 0x30
   2d53c:	mov	r0, r4
   2d540:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d544:	ldr	r3, [pc, #2932]	; 2e0c0 <g_strcmp0@plt+0x18ef4>
   2d548:	ldr	r2, [pc, #2892]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d54c:	mov	r0, r4
   2d550:	stm	sp, {r3, r5}
   2d554:	ldr	r3, [pc, #2932]	; 2e0d0 <g_strcmp0@plt+0x18f04>
   2d558:	ldr	r1, [r4, #48]	; 0x30
   2d55c:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d560:	mov	r3, #0
   2d564:	str	r3, [sp, #4]
   2d568:	str	r6, [sp]
   2d56c:	ldr	r3, [pc, #2912]	; 2e0d4 <g_strcmp0@plt+0x18f08>
   2d570:	ldr	r2, [pc, #2852]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d574:	ldr	r1, [r4, #48]	; 0x30
   2d578:	mov	r0, r4
   2d57c:	bl	2c638 <g_strcmp0@plt+0x1746c>
   2d580:	mov	r7, r0
   2d584:	bl	14bd8 <g_free@plt>
   2d588:	cmp	r7, #0
   2d58c:	beq	2d5c8 <g_strcmp0@plt+0x183fc>
   2d590:	str	r5, [sp, #4]
   2d594:	str	r6, [sp]
   2d598:	ldr	r3, [pc, #2868]	; 2e0d4 <g_strcmp0@plt+0x18f08>
   2d59c:	ldr	r2, [pc, #2808]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d5a0:	ldr	r1, [r4, #48]	; 0x30
   2d5a4:	mov	r0, r4
   2d5a8:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d5ac:	ldr	r3, [pc, #2828]	; 2e0c0 <g_strcmp0@plt+0x18ef4>
   2d5b0:	ldr	r2, [pc, #2788]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d5b4:	mov	r0, r4
   2d5b8:	stm	sp, {r3, r5}
   2d5bc:	ldr	r3, [pc, #2832]	; 2e0d4 <g_strcmp0@plt+0x18f08>
   2d5c0:	ldr	r1, [r4, #48]	; 0x30
   2d5c4:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d5c8:	mov	r3, #0
   2d5cc:	str	r3, [sp, #4]
   2d5d0:	str	r6, [sp]
   2d5d4:	ldr	r3, [pc, #2812]	; 2e0d8 <g_strcmp0@plt+0x18f0c>
   2d5d8:	ldr	r2, [pc, #2748]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d5dc:	ldr	r1, [r4, #48]	; 0x30
   2d5e0:	mov	r0, r4
   2d5e4:	bl	2c638 <g_strcmp0@plt+0x1746c>
   2d5e8:	mov	r7, r0
   2d5ec:	bl	14bd8 <g_free@plt>
   2d5f0:	cmp	r7, #0
   2d5f4:	beq	2d630 <g_strcmp0@plt+0x18464>
   2d5f8:	str	r5, [sp, #4]
   2d5fc:	str	r6, [sp]
   2d600:	ldr	r3, [pc, #2768]	; 2e0d8 <g_strcmp0@plt+0x18f0c>
   2d604:	ldr	r2, [pc, #2704]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d608:	ldr	r1, [r4, #48]	; 0x30
   2d60c:	mov	r0, r4
   2d610:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d614:	ldr	r3, [pc, #2724]	; 2e0c0 <g_strcmp0@plt+0x18ef4>
   2d618:	ldr	r2, [pc, #2684]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d61c:	mov	r0, r4
   2d620:	stm	sp, {r3, r5}
   2d624:	ldr	r3, [pc, #2732]	; 2e0d8 <g_strcmp0@plt+0x18f0c>
   2d628:	ldr	r1, [r4, #48]	; 0x30
   2d62c:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d630:	mov	r3, #0
   2d634:	str	r3, [sp, #4]
   2d638:	str	r6, [sp]
   2d63c:	ldr	r3, [pc, #2712]	; 2e0dc <g_strcmp0@plt+0x18f10>
   2d640:	ldr	r2, [pc, #2644]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d644:	ldr	r1, [r4, #48]	; 0x30
   2d648:	mov	r0, r4
   2d64c:	bl	2c638 <g_strcmp0@plt+0x1746c>
   2d650:	mov	r7, r0
   2d654:	bl	14bd8 <g_free@plt>
   2d658:	cmp	r7, #0
   2d65c:	beq	2d698 <g_strcmp0@plt+0x184cc>
   2d660:	str	r5, [sp, #4]
   2d664:	str	r6, [sp]
   2d668:	ldr	r3, [pc, #2668]	; 2e0dc <g_strcmp0@plt+0x18f10>
   2d66c:	ldr	r2, [pc, #2600]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d670:	ldr	r1, [r4, #48]	; 0x30
   2d674:	mov	r0, r4
   2d678:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d67c:	ldr	r3, [pc, #2620]	; 2e0c0 <g_strcmp0@plt+0x18ef4>
   2d680:	ldr	r2, [pc, #2580]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d684:	mov	r0, r4
   2d688:	stm	sp, {r3, r5}
   2d68c:	ldr	r3, [pc, #2632]	; 2e0dc <g_strcmp0@plt+0x18f10>
   2d690:	ldr	r1, [r4, #48]	; 0x30
   2d694:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d698:	str	r5, [sp, #4]
   2d69c:	str	r6, [sp]
   2d6a0:	ldr	r3, [pc, #2616]	; 2e0e0 <g_strcmp0@plt+0x18f14>
   2d6a4:	ldr	r2, [pc, #2544]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d6a8:	ldr	r1, [r4, #48]	; 0x30
   2d6ac:	mov	r0, r4
   2d6b0:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d6b4:	str	r5, [sp, #4]
   2d6b8:	str	r6, [sp]
   2d6bc:	ldr	r3, [pc, #2592]	; 2e0e4 <g_strcmp0@plt+0x18f18>
   2d6c0:	ldr	r2, [pc, #2516]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d6c4:	ldr	r1, [r4, #48]	; 0x30
   2d6c8:	mov	r0, r4
   2d6cc:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d6d0:	str	r5, [sp, #4]
   2d6d4:	str	r6, [sp]
   2d6d8:	ldr	r3, [pc, #2568]	; 2e0e8 <g_strcmp0@plt+0x18f1c>
   2d6dc:	ldr	r2, [pc, #2488]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d6e0:	ldr	r1, [r4, #48]	; 0x30
   2d6e4:	mov	r0, r4
   2d6e8:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d6ec:	str	r5, [sp, #4]
   2d6f0:	str	r6, [sp]
   2d6f4:	ldr	r3, [pc, #2544]	; 2e0ec <g_strcmp0@plt+0x18f20>
   2d6f8:	ldr	r2, [pc, #2460]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d6fc:	ldr	r1, [r4, #48]	; 0x30
   2d700:	mov	r0, r4
   2d704:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d708:	str	r5, [sp, #4]
   2d70c:	str	r6, [sp]
   2d710:	ldr	r3, [pc, #2520]	; 2e0f0 <g_strcmp0@plt+0x18f24>
   2d714:	ldr	r2, [pc, #2432]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d718:	ldr	r1, [r4, #48]	; 0x30
   2d71c:	mov	r0, r4
   2d720:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d724:	mov	r3, #0
   2d728:	str	r3, [sp, #4]
   2d72c:	str	r6, [sp]
   2d730:	ldr	r3, [pc, #2488]	; 2e0f0 <g_strcmp0@plt+0x18f24>
   2d734:	ldr	r2, [pc, #2400]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d738:	ldr	r1, [r4, #48]	; 0x30
   2d73c:	mov	r0, r4
   2d740:	bl	2c638 <g_strcmp0@plt+0x1746c>
   2d744:	mov	r7, r0
   2d748:	bl	14bd8 <g_free@plt>
   2d74c:	cmp	r7, #0
   2d750:	beq	2d7a8 <g_strcmp0@plt+0x185dc>
   2d754:	str	r5, [sp, #4]
   2d758:	str	r6, [sp]
   2d75c:	ldr	r3, [pc, #2444]	; 2e0f0 <g_strcmp0@plt+0x18f24>
   2d760:	ldr	r2, [pc, #2356]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d764:	ldr	r1, [r4, #48]	; 0x30
   2d768:	mov	r0, r4
   2d76c:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d770:	ldr	r3, [pc, #2428]	; 2e0f4 <g_strcmp0@plt+0x18f28>
   2d774:	ldr	r2, [pc, #2336]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d778:	mov	r0, r4
   2d77c:	stm	sp, {r3, r5}
   2d780:	ldr	r3, [pc, #2408]	; 2e0f0 <g_strcmp0@plt+0x18f24>
   2d784:	ldr	r1, [r4, #48]	; 0x30
   2d788:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d78c:	ldr	r3, [pc, #2404]	; 2e0f8 <g_strcmp0@plt+0x18f2c>
   2d790:	ldr	r2, [pc, #2308]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d794:	mov	r0, r4
   2d798:	stm	sp, {r3, r5}
   2d79c:	ldr	r3, [pc, #2380]	; 2e0f0 <g_strcmp0@plt+0x18f24>
   2d7a0:	ldr	r1, [r4, #48]	; 0x30
   2d7a4:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d7a8:	str	r6, [sp]
   2d7ac:	str	r5, [sp, #4]
   2d7b0:	ldr	r3, [pc, #2372]	; 2e0fc <g_strcmp0@plt+0x18f30>
   2d7b4:	ldr	r2, [pc, #2272]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d7b8:	ldr	r1, [r4, #48]	; 0x30
   2d7bc:	mov	r0, r4
   2d7c0:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d7c4:	str	r6, [sp]
   2d7c8:	str	r5, [sp, #4]
   2d7cc:	ldr	r3, [pc, #2348]	; 2e100 <g_strcmp0@plt+0x18f34>
   2d7d0:	ldr	r2, [pc, #2244]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d7d4:	ldr	r1, [r4, #48]	; 0x30
   2d7d8:	mov	r0, r4
   2d7dc:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d7e0:	str	r6, [sp]
   2d7e4:	str	r5, [sp, #4]
   2d7e8:	ldr	r3, [pc, #2324]	; 2e104 <g_strcmp0@plt+0x18f38>
   2d7ec:	ldr	r2, [pc, #2216]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d7f0:	ldr	r1, [r4, #48]	; 0x30
   2d7f4:	mov	r0, r4
   2d7f8:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d7fc:	str	r6, [sp]
   2d800:	str	r5, [sp, #4]
   2d804:	ldr	r3, [pc, #2300]	; 2e108 <g_strcmp0@plt+0x18f3c>
   2d808:	ldr	r2, [pc, #2188]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d80c:	ldr	r1, [r4, #48]	; 0x30
   2d810:	mov	r0, r4
   2d814:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d818:	str	r6, [sp]
   2d81c:	str	r5, [sp, #4]
   2d820:	ldr	r3, [pc, #2276]	; 2e10c <g_strcmp0@plt+0x18f40>
   2d824:	ldr	r2, [pc, #2160]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d828:	ldr	r1, [r4, #48]	; 0x30
   2d82c:	mov	r0, r4
   2d830:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d834:	ldr	r7, [pc, #2260]	; 2e110 <g_strcmp0@plt+0x18f44>
   2d838:	str	r6, [sp]
   2d83c:	str	r5, [sp, #4]
   2d840:	ldr	r3, [pc, #2252]	; 2e114 <g_strcmp0@plt+0x18f48>
   2d844:	ldr	r2, [pc, #2128]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d848:	ldr	r1, [r4, #48]	; 0x30
   2d84c:	mov	r0, r4
   2d850:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d854:	str	r6, [sp]
   2d858:	str	r5, [sp, #4]
   2d85c:	ldr	r3, [pc, #2228]	; 2e118 <g_strcmp0@plt+0x18f4c>
   2d860:	ldr	r2, [pc, #2100]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d864:	ldr	r1, [r4, #48]	; 0x30
   2d868:	mov	r0, r4
   2d86c:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d870:	str	r7, [sp]
   2d874:	str	r5, [sp, #4]
   2d878:	ldr	r3, [pc, #2200]	; 2e118 <g_strcmp0@plt+0x18f4c>
   2d87c:	ldr	r2, [pc, #2072]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d880:	ldr	r1, [r4, #48]	; 0x30
   2d884:	mov	r0, r4
   2d888:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d88c:	str	r6, [sp]
   2d890:	str	r5, [sp, #4]
   2d894:	ldr	r3, [pc, #2176]	; 2e11c <g_strcmp0@plt+0x18f50>
   2d898:	ldr	r2, [pc, #2044]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d89c:	ldr	r1, [r4, #48]	; 0x30
   2d8a0:	mov	r0, r4
   2d8a4:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d8a8:	ldr	r3, [pc, #2160]	; 2e120 <g_strcmp0@plt+0x18f54>
   2d8ac:	ldr	r2, [pc, #2024]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d8b0:	mov	r0, r4
   2d8b4:	stm	sp, {r3, r5}
   2d8b8:	ldr	r3, [pc, #2140]	; 2e11c <g_strcmp0@plt+0x18f50>
   2d8bc:	ldr	r1, [r4, #48]	; 0x30
   2d8c0:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d8c4:	str	r7, [sp]
   2d8c8:	str	r5, [sp, #4]
   2d8cc:	ldr	r3, [pc, #2120]	; 2e11c <g_strcmp0@plt+0x18f50>
   2d8d0:	ldr	r2, [pc, #1988]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d8d4:	ldr	r1, [r4, #48]	; 0x30
   2d8d8:	mov	r0, r4
   2d8dc:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d8e0:	mov	r7, #0
   2d8e4:	str	r6, [sp]
   2d8e8:	str	r5, [sp, #4]
   2d8ec:	ldr	r3, [pc, #2096]	; 2e124 <g_strcmp0@plt+0x18f58>
   2d8f0:	ldr	r2, [pc, #1956]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d8f4:	ldr	r1, [r4, #48]	; 0x30
   2d8f8:	mov	r0, r4
   2d8fc:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d900:	str	r5, [sp, #4]
   2d904:	str	r7, [sp]
   2d908:	ldr	r3, [pc, #2072]	; 2e128 <g_strcmp0@plt+0x18f5c>
   2d90c:	ldr	r2, [pc, #1928]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d910:	ldr	r1, [r4, #48]	; 0x30
   2d914:	mov	r0, r4
   2d918:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d91c:	str	r7, [sp]
   2d920:	str	r5, [sp, #4]
   2d924:	ldr	r3, [pc, #2048]	; 2e12c <g_strcmp0@plt+0x18f60>
   2d928:	ldr	r2, [pc, #1900]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d92c:	ldr	r1, [r4, #48]	; 0x30
   2d930:	mov	r0, r4
   2d934:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d938:	str	r6, [sp]
   2d93c:	str	r5, [sp, #4]
   2d940:	ldr	r3, [pc, #2024]	; 2e130 <g_strcmp0@plt+0x18f64>
   2d944:	ldr	r2, [pc, #1872]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d948:	ldr	r1, [r4, #48]	; 0x30
   2d94c:	mov	r0, r4
   2d950:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d954:	str	r6, [sp]
   2d958:	str	r5, [sp, #4]
   2d95c:	ldr	r3, [pc, #2000]	; 2e134 <g_strcmp0@plt+0x18f68>
   2d960:	ldr	r2, [pc, #1844]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d964:	ldr	r1, [r4, #48]	; 0x30
   2d968:	mov	r0, r4
   2d96c:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d970:	ldr	r3, [pc, #1984]	; 2e138 <g_strcmp0@plt+0x18f6c>
   2d974:	ldr	r2, [pc, #1824]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d978:	mov	r0, r4
   2d97c:	stm	sp, {r3, r5}
   2d980:	ldr	r3, [pc, #1964]	; 2e134 <g_strcmp0@plt+0x18f68>
   2d984:	ldr	r1, [r4, #48]	; 0x30
   2d988:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d98c:	str	r6, [sp]
   2d990:	str	r5, [sp, #4]
   2d994:	ldr	r3, [pc, #1952]	; 2e13c <g_strcmp0@plt+0x18f70>
   2d998:	ldr	r2, [pc, #1788]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d99c:	ldr	r1, [r4, #48]	; 0x30
   2d9a0:	mov	r0, r4
   2d9a4:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d9a8:	str	r6, [sp]
   2d9ac:	str	r5, [sp, #4]
   2d9b0:	ldr	r3, [pc, #1928]	; 2e140 <g_strcmp0@plt+0x18f74>
   2d9b4:	ldr	r2, [pc, #1760]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d9b8:	ldr	r1, [r4, #48]	; 0x30
   2d9bc:	mov	r0, r4
   2d9c0:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d9c4:	str	r6, [sp]
   2d9c8:	str	r5, [sp, #4]
   2d9cc:	ldr	r3, [pc, #1904]	; 2e144 <g_strcmp0@plt+0x18f78>
   2d9d0:	ldr	r2, [pc, #1732]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d9d4:	ldr	r1, [r4, #48]	; 0x30
   2d9d8:	mov	r0, r4
   2d9dc:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d9e0:	str	r6, [sp]
   2d9e4:	str	r5, [sp, #4]
   2d9e8:	ldr	r3, [pc, #1880]	; 2e148 <g_strcmp0@plt+0x18f7c>
   2d9ec:	ldr	r2, [pc, #1704]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2d9f0:	ldr	r1, [r4, #48]	; 0x30
   2d9f4:	mov	r0, r4
   2d9f8:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2d9fc:	str	r6, [sp]
   2da00:	str	r5, [sp, #4]
   2da04:	ldr	r3, [pc, #1856]	; 2e14c <g_strcmp0@plt+0x18f80>
   2da08:	ldr	r2, [pc, #1676]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2da0c:	ldr	r1, [r4, #48]	; 0x30
   2da10:	mov	r0, r4
   2da14:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2da18:	str	r6, [sp]
   2da1c:	str	r5, [sp, #4]
   2da20:	ldr	r3, [pc, #1832]	; 2e150 <g_strcmp0@plt+0x18f84>
   2da24:	ldr	r2, [pc, #1648]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2da28:	ldr	r1, [r4, #48]	; 0x30
   2da2c:	mov	r0, r4
   2da30:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2da34:	str	r6, [sp]
   2da38:	str	r5, [sp, #4]
   2da3c:	ldr	r3, [pc, #1808]	; 2e154 <g_strcmp0@plt+0x18f88>
   2da40:	ldr	r2, [pc, #1620]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2da44:	ldr	r1, [r4, #48]	; 0x30
   2da48:	mov	r0, r4
   2da4c:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2da50:	str	r6, [sp]
   2da54:	str	r5, [sp, #4]
   2da58:	ldr	r3, [pc, #1784]	; 2e158 <g_strcmp0@plt+0x18f8c>
   2da5c:	ldr	r2, [pc, #1592]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2da60:	ldr	r1, [r4, #48]	; 0x30
   2da64:	mov	r0, r4
   2da68:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2da6c:	str	r6, [sp]
   2da70:	str	r5, [sp, #4]
   2da74:	ldr	r3, [pc, #1760]	; 2e15c <g_strcmp0@plt+0x18f90>
   2da78:	ldr	r2, [pc, #1564]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2da7c:	ldr	r1, [r4, #48]	; 0x30
   2da80:	mov	r0, r4
   2da84:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2da88:	str	r6, [sp]
   2da8c:	str	r5, [sp, #4]
   2da90:	ldr	r3, [pc, #1736]	; 2e160 <g_strcmp0@plt+0x18f94>
   2da94:	ldr	r2, [pc, #1536]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2da98:	ldr	r1, [r4, #48]	; 0x30
   2da9c:	mov	r0, r4
   2daa0:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2daa4:	str	r6, [sp]
   2daa8:	str	r5, [sp, #4]
   2daac:	ldr	r3, [pc, #1712]	; 2e164 <g_strcmp0@plt+0x18f98>
   2dab0:	ldr	r2, [pc, #1508]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2dab4:	ldr	r1, [r4, #48]	; 0x30
   2dab8:	mov	r0, r4
   2dabc:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dac0:	str	r6, [sp]
   2dac4:	str	r5, [sp, #4]
   2dac8:	ldr	r3, [pc, #1688]	; 2e168 <g_strcmp0@plt+0x18f9c>
   2dacc:	ldr	r2, [pc, #1480]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2dad0:	ldr	r1, [r4, #48]	; 0x30
   2dad4:	mov	r0, r4
   2dad8:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dadc:	str	r6, [sp]
   2dae0:	str	r5, [sp, #4]
   2dae4:	ldr	r3, [pc, #1664]	; 2e16c <g_strcmp0@plt+0x18fa0>
   2dae8:	ldr	r2, [pc, #1452]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2daec:	ldr	r1, [r4, #48]	; 0x30
   2daf0:	mov	r0, r4
   2daf4:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2daf8:	str	r6, [sp]
   2dafc:	str	r5, [sp, #4]
   2db00:	ldr	r3, [pc, #1640]	; 2e170 <g_strcmp0@plt+0x18fa4>
   2db04:	ldr	r2, [pc, #1424]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2db08:	ldr	r1, [r4, #48]	; 0x30
   2db0c:	mov	r0, r4
   2db10:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2db14:	str	r6, [sp]
   2db18:	str	r5, [sp, #4]
   2db1c:	ldr	r3, [pc, #1616]	; 2e174 <g_strcmp0@plt+0x18fa8>
   2db20:	ldr	r2, [pc, #1396]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2db24:	ldr	r1, [r4, #48]	; 0x30
   2db28:	mov	r0, r4
   2db2c:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2db30:	str	r6, [sp]
   2db34:	str	r5, [sp, #4]
   2db38:	ldr	r3, [pc, #1592]	; 2e178 <g_strcmp0@plt+0x18fac>
   2db3c:	ldr	r2, [pc, #1368]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2db40:	ldr	r1, [r4, #48]	; 0x30
   2db44:	mov	r0, r4
   2db48:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2db4c:	str	r6, [sp]
   2db50:	str	r5, [sp, #4]
   2db54:	ldr	r3, [pc, #1568]	; 2e17c <g_strcmp0@plt+0x18fb0>
   2db58:	ldr	r2, [pc, #1340]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2db5c:	ldr	r1, [r4, #48]	; 0x30
   2db60:	mov	r0, r4
   2db64:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2db68:	str	r6, [sp]
   2db6c:	str	r5, [sp, #4]
   2db70:	ldr	r3, [pc, #1544]	; 2e180 <g_strcmp0@plt+0x18fb4>
   2db74:	ldr	r2, [pc, #1312]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2db78:	ldr	r1, [r4, #48]	; 0x30
   2db7c:	mov	r0, r4
   2db80:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2db84:	str	r6, [sp]
   2db88:	str	r5, [sp, #4]
   2db8c:	ldr	r3, [pc, #1520]	; 2e184 <g_strcmp0@plt+0x18fb8>
   2db90:	ldr	r2, [pc, #1284]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2db94:	ldr	r1, [r4, #48]	; 0x30
   2db98:	mov	r0, r4
   2db9c:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dba0:	str	r6, [sp]
   2dba4:	str	r5, [sp, #4]
   2dba8:	ldr	r3, [pc, #1496]	; 2e188 <g_strcmp0@plt+0x18fbc>
   2dbac:	ldr	r2, [pc, #1256]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2dbb0:	ldr	r1, [r4, #48]	; 0x30
   2dbb4:	mov	r0, r4
   2dbb8:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dbbc:	str	r6, [sp]
   2dbc0:	str	r5, [sp, #4]
   2dbc4:	ldr	r3, [pc, #1472]	; 2e18c <g_strcmp0@plt+0x18fc0>
   2dbc8:	ldr	r2, [pc, #1228]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2dbcc:	ldr	r1, [r4, #48]	; 0x30
   2dbd0:	mov	r0, r4
   2dbd4:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dbd8:	str	r6, [sp]
   2dbdc:	str	r5, [sp, #4]
   2dbe0:	ldr	r3, [pc, #1448]	; 2e190 <g_strcmp0@plt+0x18fc4>
   2dbe4:	ldr	r2, [pc, #1200]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2dbe8:	ldr	r1, [r4, #48]	; 0x30
   2dbec:	mov	r0, r4
   2dbf0:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dbf4:	str	r7, [sp, #4]
   2dbf8:	str	r7, [sp]
   2dbfc:	ldr	r3, [pc, #1424]	; 2e194 <g_strcmp0@plt+0x18fc8>
   2dc00:	ldr	r2, [pc, #1424]	; 2e198 <g_strcmp0@plt+0x18fcc>
   2dc04:	ldr	r1, [r4, #48]	; 0x30
   2dc08:	mov	r0, r4
   2dc0c:	bl	2c638 <g_strcmp0@plt+0x1746c>
   2dc10:	mov	r6, r0
   2dc14:	bl	14bd8 <g_free@plt>
   2dc18:	cmp	r6, r7
   2dc1c:	beq	2dcac <g_strcmp0@plt+0x18ae0>
   2dc20:	str	r5, [sp, #4]
   2dc24:	str	r7, [sp]
   2dc28:	ldr	r3, [pc, #1380]	; 2e194 <g_strcmp0@plt+0x18fc8>
   2dc2c:	ldr	r2, [pc, #1380]	; 2e198 <g_strcmp0@plt+0x18fcc>
   2dc30:	ldr	r1, [r4, #48]	; 0x30
   2dc34:	mov	r0, r4
   2dc38:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dc3c:	str	r5, [sp, #4]
   2dc40:	str	r7, [sp]
   2dc44:	ldr	r3, [pc, #1360]	; 2e19c <g_strcmp0@plt+0x18fd0>
   2dc48:	ldr	r2, [pc, #1352]	; 2e198 <g_strcmp0@plt+0x18fcc>
   2dc4c:	ldr	r1, [r4, #48]	; 0x30
   2dc50:	mov	r0, r4
   2dc54:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dc58:	str	r5, [sp, #4]
   2dc5c:	str	r7, [sp]
   2dc60:	ldr	r3, [pc, #1168]	; 2e0f8 <g_strcmp0@plt+0x18f2c>
   2dc64:	ldr	r2, [pc, #1324]	; 2e198 <g_strcmp0@plt+0x18fcc>
   2dc68:	ldr	r1, [r4, #48]	; 0x30
   2dc6c:	mov	r0, r4
   2dc70:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dc74:	str	r5, [sp, #4]
   2dc78:	str	r7, [sp]
   2dc7c:	ldr	r3, [pc, #1308]	; 2e1a0 <g_strcmp0@plt+0x18fd4>
   2dc80:	ldr	r2, [pc, #1296]	; 2e198 <g_strcmp0@plt+0x18fcc>
   2dc84:	ldr	r1, [r4, #48]	; 0x30
   2dc88:	mov	r0, r4
   2dc8c:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dc90:	str	r5, [sp, #4]
   2dc94:	str	r7, [sp]
   2dc98:	ldr	r3, [pc, #1284]	; 2e1a4 <g_strcmp0@plt+0x18fd8>
   2dc9c:	ldr	r2, [pc, #1268]	; 2e198 <g_strcmp0@plt+0x18fcc>
   2dca0:	ldr	r1, [r4, #48]	; 0x30
   2dca4:	mov	r0, r4
   2dca8:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dcac:	mov	r6, #0
   2dcb0:	str	r5, [sp, #4]
   2dcb4:	str	r6, [sp]
   2dcb8:	mov	r0, r4
   2dcbc:	ldr	r1, [r4, #48]	; 0x30
   2dcc0:	ldr	r3, [pc, #1248]	; 2e1a8 <g_strcmp0@plt+0x18fdc>
   2dcc4:	ldr	r2, [pc, #1248]	; 2e1ac <g_strcmp0@plt+0x18fe0>
   2dcc8:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dccc:	str	r6, [sp]
   2dcd0:	str	r5, [sp, #4]
   2dcd4:	mov	r0, r4
   2dcd8:	ldr	r1, [r4, #48]	; 0x30
   2dcdc:	ldr	r3, [pc, #1228]	; 2e1b0 <g_strcmp0@plt+0x18fe4>
   2dce0:	ldr	r2, [pc, #1220]	; 2e1ac <g_strcmp0@plt+0x18fe0>
   2dce4:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dce8:	str	r6, [sp]
   2dcec:	str	r5, [sp, #4]
   2dcf0:	mov	r0, r4
   2dcf4:	ldr	r1, [r4, #48]	; 0x30
   2dcf8:	ldr	r3, [pc, #1204]	; 2e1b4 <g_strcmp0@plt+0x18fe8>
   2dcfc:	ldr	r2, [pc, #1204]	; 2e1b8 <g_strcmp0@plt+0x18fec>
   2dd00:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dd04:	str	r6, [sp]
   2dd08:	str	r5, [sp, #4]
   2dd0c:	mov	r0, r4
   2dd10:	ldr	r1, [r4, #48]	; 0x30
   2dd14:	ldr	r3, [pc, #1184]	; 2e1bc <g_strcmp0@plt+0x18ff0>
   2dd18:	ldr	r2, [pc, #1176]	; 2e1b8 <g_strcmp0@plt+0x18fec>
   2dd1c:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dd20:	str	r6, [sp]
   2dd24:	str	r5, [sp, #4]
   2dd28:	mov	r0, r4
   2dd2c:	ldr	r1, [r4, #48]	; 0x30
   2dd30:	ldr	r3, [pc, #1160]	; 2e1c0 <g_strcmp0@plt+0x18ff4>
   2dd34:	ldr	r2, [pc, #1160]	; 2e1c4 <g_strcmp0@plt+0x18ff8>
   2dd38:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dd3c:	str	r6, [sp]
   2dd40:	str	r5, [sp, #4]
   2dd44:	mov	r0, r4
   2dd48:	ldr	r1, [r4, #48]	; 0x30
   2dd4c:	ldr	r3, [pc, #1140]	; 2e1c8 <g_strcmp0@plt+0x18ffc>
   2dd50:	ldr	r2, [pc, #1132]	; 2e1c4 <g_strcmp0@plt+0x18ff8>
   2dd54:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dd58:	str	r6, [sp]
   2dd5c:	str	r5, [sp, #4]
   2dd60:	mov	r0, r4
   2dd64:	ldr	r1, [r4, #48]	; 0x30
   2dd68:	ldr	r3, [pc, #1116]	; 2e1cc <g_strcmp0@plt+0x19000>
   2dd6c:	ldr	r2, [pc, #1104]	; 2e1c4 <g_strcmp0@plt+0x18ff8>
   2dd70:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dd74:	str	r6, [sp]
   2dd78:	str	r5, [sp, #4]
   2dd7c:	mov	r0, r4
   2dd80:	ldr	r1, [r4, #48]	; 0x30
   2dd84:	ldr	r3, [pc, #1092]	; 2e1d0 <g_strcmp0@plt+0x19004>
   2dd88:	ldr	r2, [pc, #1076]	; 2e1c4 <g_strcmp0@plt+0x18ff8>
   2dd8c:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dd90:	ldr	r3, [pc, #1084]	; 2e1d4 <g_strcmp0@plt+0x19008>
   2dd94:	mov	r0, r4
   2dd98:	ldr	r2, [pc, #1060]	; 2e1c4 <g_strcmp0@plt+0x18ff8>
   2dd9c:	stm	sp, {r3, r5}
   2dda0:	ldr	r3, [pc, #1072]	; 2e1d8 <g_strcmp0@plt+0x1900c>
   2dda4:	ldr	r1, [r4, #48]	; 0x30
   2dda8:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2ddac:	ldr	r3, [pc, #1064]	; 2e1dc <g_strcmp0@plt+0x19010>
   2ddb0:	mov	r0, r4
   2ddb4:	ldr	r2, [pc, #1032]	; 2e1c4 <g_strcmp0@plt+0x18ff8>
   2ddb8:	stm	sp, {r3, r5}
   2ddbc:	ldr	r3, [pc, #1052]	; 2e1e0 <g_strcmp0@plt+0x19014>
   2ddc0:	ldr	r1, [r4, #48]	; 0x30
   2ddc4:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2ddc8:	ldr	r3, [pc, #1044]	; 2e1e4 <g_strcmp0@plt+0x19018>
   2ddcc:	mov	r0, r4
   2ddd0:	ldr	r2, [pc, #1004]	; 2e1c4 <g_strcmp0@plt+0x18ff8>
   2ddd4:	stm	sp, {r3, r5}
   2ddd8:	ldr	r3, [pc, #1024]	; 2e1e0 <g_strcmp0@plt+0x19014>
   2dddc:	ldr	r1, [r4, #48]	; 0x30
   2dde0:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dde4:	ldr	r3, [pc, #1020]	; 2e1e8 <g_strcmp0@plt+0x1901c>
   2dde8:	mov	r0, r4
   2ddec:	ldr	r2, [pc, #660]	; 2e088 <g_strcmp0@plt+0x18ebc>
   2ddf0:	stm	sp, {r3, r5}
   2ddf4:	ldr	r3, [pc, #1008]	; 2e1ec <g_strcmp0@plt+0x19020>
   2ddf8:	ldr	r1, [r4, #48]	; 0x30
   2ddfc:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2de00:	ldr	r3, [pc, #1000]	; 2e1f0 <g_strcmp0@plt+0x19024>
   2de04:	mov	r0, r4
   2de08:	ldr	r2, [pc, #632]	; 2e088 <g_strcmp0@plt+0x18ebc>
   2de0c:	stm	sp, {r3, r5}
   2de10:	ldr	r3, [pc, #980]	; 2e1ec <g_strcmp0@plt+0x19020>
   2de14:	ldr	r1, [r4, #48]	; 0x30
   2de18:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2de1c:	ldr	r3, [pc, #976]	; 2e1f4 <g_strcmp0@plt+0x19028>
   2de20:	mov	r0, r4
   2de24:	ldr	r2, [pc, #604]	; 2e088 <g_strcmp0@plt+0x18ebc>
   2de28:	stm	sp, {r3, r5}
   2de2c:	ldr	r3, [pc, #964]	; 2e1f8 <g_strcmp0@plt+0x1902c>
   2de30:	ldr	r1, [r4, #48]	; 0x30
   2de34:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2de38:	ldr	r3, [pc, #956]	; 2e1fc <g_strcmp0@plt+0x19030>
   2de3c:	mov	r0, r4
   2de40:	ldr	r2, [pc, #576]	; 2e088 <g_strcmp0@plt+0x18ebc>
   2de44:	stm	sp, {r3, r5}
   2de48:	ldr	r3, [pc, #572]	; 2e08c <g_strcmp0@plt+0x18ec0>
   2de4c:	ldr	r1, [r4, #48]	; 0x30
   2de50:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2de54:	ldr	r3, [pc, #932]	; 2e200 <g_strcmp0@plt+0x19034>
   2de58:	mov	r0, r4
   2de5c:	ldr	r2, [pc, #548]	; 2e088 <g_strcmp0@plt+0x18ebc>
   2de60:	stm	sp, {r3, r5}
   2de64:	ldr	r3, [pc, #544]	; 2e08c <g_strcmp0@plt+0x18ec0>
   2de68:	ldr	r1, [r4, #48]	; 0x30
   2de6c:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2de70:	ldr	r3, [pc, #908]	; 2e204 <g_strcmp0@plt+0x19038>
   2de74:	mov	r0, r4
   2de78:	ldr	r2, [pc, #520]	; 2e088 <g_strcmp0@plt+0x18ebc>
   2de7c:	stm	sp, {r3, r5}
   2de80:	ldr	r3, [pc, #516]	; 2e08c <g_strcmp0@plt+0x18ec0>
   2de84:	ldr	r1, [r4, #48]	; 0x30
   2de88:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2de8c:	ldr	r3, [pc, #884]	; 2e208 <g_strcmp0@plt+0x1903c>
   2de90:	mov	r0, r4
   2de94:	ldr	r2, [pc, #492]	; 2e088 <g_strcmp0@plt+0x18ebc>
   2de98:	stm	sp, {r3, r5}
   2de9c:	ldr	r3, [pc, #488]	; 2e08c <g_strcmp0@plt+0x18ec0>
   2dea0:	ldr	r1, [r4, #48]	; 0x30
   2dea4:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dea8:	ldr	r3, [pc, #860]	; 2e20c <g_strcmp0@plt+0x19040>
   2deac:	mov	r0, r4
   2deb0:	ldr	r2, [pc, #464]	; 2e088 <g_strcmp0@plt+0x18ebc>
   2deb4:	stm	sp, {r3, r5}
   2deb8:	ldr	r3, [pc, #848]	; 2e210 <g_strcmp0@plt+0x19044>
   2debc:	ldr	r1, [r4, #48]	; 0x30
   2dec0:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dec4:	ldr	r3, [pc, #840]	; 2e214 <g_strcmp0@plt+0x19048>
   2dec8:	mov	r0, r4
   2decc:	ldr	r2, [pc, #436]	; 2e088 <g_strcmp0@plt+0x18ebc>
   2ded0:	stm	sp, {r3, r5}
   2ded4:	ldr	r3, [pc, #820]	; 2e210 <g_strcmp0@plt+0x19044>
   2ded8:	ldr	r1, [r4, #48]	; 0x30
   2dedc:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dee0:	ldr	r3, [pc, #816]	; 2e218 <g_strcmp0@plt+0x1904c>
   2dee4:	mov	r0, r4
   2dee8:	ldr	r2, [pc, #408]	; 2e088 <g_strcmp0@plt+0x18ebc>
   2deec:	stm	sp, {r3, r5}
   2def0:	ldr	r3, [pc, #804]	; 2e21c <g_strcmp0@plt+0x19050>
   2def4:	ldr	r1, [r4, #48]	; 0x30
   2def8:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2defc:	ldr	r3, [pc, #796]	; 2e220 <g_strcmp0@plt+0x19054>
   2df00:	mov	r0, r4
   2df04:	ldr	r2, [pc, #380]	; 2e088 <g_strcmp0@plt+0x18ebc>
   2df08:	stm	sp, {r3, r5}
   2df0c:	ldr	r3, [pc, #776]	; 2e21c <g_strcmp0@plt+0x19050>
   2df10:	ldr	r1, [r4, #48]	; 0x30
   2df14:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2df18:	str	r5, [sp, #4]
   2df1c:	str	r8, [sp]
   2df20:	mov	r0, r4
   2df24:	ldr	r1, [r4, #48]	; 0x30
   2df28:	ldr	r3, [pc, #712]	; 2e1f8 <g_strcmp0@plt+0x1902c>
   2df2c:	ldr	r2, [pc, #340]	; 2e088 <g_strcmp0@plt+0x18ebc>
   2df30:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2df34:	ldr	r3, [pc, #744]	; 2e224 <g_strcmp0@plt+0x19058>
   2df38:	mov	r0, r4
   2df3c:	ldr	r2, [pc, #324]	; 2e088 <g_strcmp0@plt+0x18ebc>
   2df40:	stm	sp, {r3, r5}
   2df44:	ldr	r3, [pc, #684]	; 2e1f8 <g_strcmp0@plt+0x1902c>
   2df48:	ldr	r1, [r4, #48]	; 0x30
   2df4c:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2df50:	ldr	r3, [pc, #720]	; 2e228 <g_strcmp0@plt+0x1905c>
   2df54:	mov	r0, r4
   2df58:	ldr	r2, [pc, #296]	; 2e088 <g_strcmp0@plt+0x18ebc>
   2df5c:	stm	sp, {r3, r5}
   2df60:	ldr	r3, [pc, #292]	; 2e08c <g_strcmp0@plt+0x18ec0>
   2df64:	ldr	r1, [r4, #48]	; 0x30
   2df68:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2df6c:	ldr	r3, [pc, #696]	; 2e22c <g_strcmp0@plt+0x19060>
   2df70:	mov	r0, r4
   2df74:	ldr	r2, [pc, #268]	; 2e088 <g_strcmp0@plt+0x18ebc>
   2df78:	stm	sp, {r3, r5}
   2df7c:	ldr	r3, [pc, #684]	; 2e230 <g_strcmp0@plt+0x19064>
   2df80:	ldr	r1, [r4, #48]	; 0x30
   2df84:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2df88:	ldr	r3, [pc, #676]	; 2e234 <g_strcmp0@plt+0x19068>
   2df8c:	mov	r0, r4
   2df90:	ldr	r2, [pc, #240]	; 2e088 <g_strcmp0@plt+0x18ebc>
   2df94:	stm	sp, {r3, r5}
   2df98:	ldr	r3, [pc, #656]	; 2e230 <g_strcmp0@plt+0x19064>
   2df9c:	ldr	r1, [r4, #48]	; 0x30
   2dfa0:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dfa4:	str	r6, [sp]
   2dfa8:	str	r5, [sp, #4]
   2dfac:	mov	r0, r4
   2dfb0:	ldr	r1, [r4, #48]	; 0x30
   2dfb4:	ldr	r3, [pc, #636]	; 2e238 <g_strcmp0@plt+0x1906c>
   2dfb8:	ldr	r2, [pc, #636]	; 2e23c <g_strcmp0@plt+0x19070>
   2dfbc:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dfc0:	str	r6, [sp]
   2dfc4:	str	r5, [sp, #4]
   2dfc8:	mov	r0, r4
   2dfcc:	ldr	r1, [r4, #48]	; 0x30
   2dfd0:	ldr	r3, [pc, #616]	; 2e240 <g_strcmp0@plt+0x19074>
   2dfd4:	ldr	r2, [pc, #608]	; 2e23c <g_strcmp0@plt+0x19070>
   2dfd8:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dfdc:	str	r6, [sp]
   2dfe0:	str	r5, [sp, #4]
   2dfe4:	mov	r0, r4
   2dfe8:	ldr	r1, [r4, #48]	; 0x30
   2dfec:	ldr	r3, [pc, #592]	; 2e244 <g_strcmp0@plt+0x19078>
   2dff0:	ldr	r2, [pc, #580]	; 2e23c <g_strcmp0@plt+0x19070>
   2dff4:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2dff8:	str	r6, [sp]
   2dffc:	str	r5, [sp, #4]
   2e000:	mov	r0, r4
   2e004:	ldr	r1, [r4, #48]	; 0x30
   2e008:	ldr	r3, [pc, #568]	; 2e248 <g_strcmp0@plt+0x1907c>
   2e00c:	ldr	r2, [pc, #568]	; 2e24c <g_strcmp0@plt+0x19080>
   2e010:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2e014:	str	r6, [sp]
   2e018:	str	r5, [sp, #4]
   2e01c:	mov	r0, r4
   2e020:	ldr	r1, [r4, #48]	; 0x30
   2e024:	ldr	r3, [pc, #548]	; 2e250 <g_strcmp0@plt+0x19084>
   2e028:	ldr	r2, [pc, #540]	; 2e24c <g_strcmp0@plt+0x19080>
   2e02c:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2e030:	str	r6, [sp]
   2e034:	str	r5, [sp, #4]
   2e038:	mov	r0, r4
   2e03c:	ldr	r3, [pc, #528]	; 2e254 <g_strcmp0@plt+0x19088>
   2e040:	ldr	r2, [pc, #516]	; 2e24c <g_strcmp0@plt+0x19080>
   2e044:	ldr	r1, [r4, #48]	; 0x30
   2e048:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2e04c:	ldr	r3, [r4]
   2e050:	mov	r0, r4
   2e054:	ldr	r3, [r3, #80]	; 0x50
   2e058:	add	sp, sp, #8
   2e05c:	pop	{r4, r5, r6, r7, r8, lr}
   2e060:	bx	r3
   2e064:	str	r7, [sp]
   2e068:	ldr	r3, [pc, #488]	; 2e258 <g_strcmp0@plt+0x1908c>
   2e06c:	ldr	r2, [pc, #40]	; 2e09c <g_strcmp0@plt+0x18ed0>
   2e070:	ldr	r1, [r4, #48]	; 0x30
   2e074:	mov	r0, r4
   2e078:	bl	2ce88 <g_strcmp0@plt+0x17cbc>
   2e07c:	b	2d19c <g_strcmp0@plt+0x17fd0>
   2e080:	andeq	r9, r3, r0, asr #4
   2e084:	andeq	r9, r3, ip, lsr #28
   2e088:	strdeq	r9, [r3], -ip
   2e08c:	andeq	r9, r3, r4, ror #28
   2e090:	andeq	r4, r3, r4, asr r8
   2e094:	ldrdeq	r4, [r3], -ip
   2e098:	andeq	r4, r3, r4, ror #15
   2e09c:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   2e0a0:	andeq	r4, r3, r4, lsl #14
   2e0a4:	andeq	r5, r3, r8, ror #3
   2e0a8:	andeq	r8, r3, r0, asr #3
   2e0ac:	andeq	r8, r3, r4, lsl #5
   2e0b0:	ldrdeq	r5, [r3], -r8
   2e0b4:			; <UNDEFINED> instruction: 0x000383b4
   2e0b8:	andeq	r5, r3, r8, lsr #16
   2e0bc:	andeq	r4, r3, r4, lsl #17
   2e0c0:	strdeq	r4, [r3], -ip
   2e0c4:	andeq	r4, r3, r8, ror #16
   2e0c8:	muleq	r3, r8, r8
   2e0cc:	muleq	r3, ip, r8
   2e0d0:	andeq	r4, r3, r0, lsr #17
   2e0d4:	andeq	r4, r3, r8, lsr #17
   2e0d8:			; <UNDEFINED> instruction: 0x000348b8
   2e0dc:	andeq	r4, r3, r4, asr #17
   2e0e0:	andeq	r8, r3, r0, asr #12
   2e0e4:	andeq	r4, r3, ip, lsl #16
   2e0e8:	andeq	r8, r3, ip, lsl #16
   2e0ec:	andeq	r5, r3, ip, asr #4
   2e0f0:	andeq	r5, r3, ip, ror r2
   2e0f4:	andeq	r5, r3, ip, lsl #5
   2e0f8:	muleq	r3, r4, r2
   2e0fc:	ldrdeq	r5, [r3], -r8
   2e100:	andeq	r4, r3, r8, asr #30
   2e104:	strdeq	r5, [r3], -r0
   2e108:	andeq	sl, r3, r4, lsr #2
   2e10c:	strdeq	r8, [r3], -r8	; <UNPREDICTABLE>
   2e110:	andeq	r5, r3, r0, asr #21
   2e114:	andeq	r9, r3, r4, ror #30
   2e118:	muleq	r3, r4, r3
   2e11c:	andeq	r4, r3, r4, asr r9
   2e120:	andeq	r5, r3, r8, lsr #25
   2e124:	andeq	r8, r3, r4, lsr #20
   2e128:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   2e12c:	andeq	r4, r3, r4, ror #18
   2e130:	andeq	r7, r3, r4, ror #8
   2e134:	andeq	r4, r3, r4, asr #18
   2e138:	andeq	r4, r3, ip, asr pc
   2e13c:	andeq	r7, r3, r8, asr #24
   2e140:	andeq	r7, r3, r0, ror #19
   2e144:			; <UNDEFINED> instruction: 0x00037ab0
   2e148:	andeq	r4, r3, ip, asr r8
   2e14c:	andeq	r9, r3, r4, lsl #31
   2e150:	muleq	r3, r8, pc	; <UNPREDICTABLE>
   2e154:	andeq	r9, r3, ip, lsr #31
   2e158:	andeq	r9, r3, r0, asr #31
   2e15c:	andeq	r9, r3, r0, ror #31
   2e160:	strdeq	r9, [r3], -ip
   2e164:	andeq	sl, r3, r8, lsl r0
   2e168:	andeq	sl, r3, r4, lsr #32
   2e16c:	andeq	sl, r3, r4, lsr #7
   2e170:	andeq	sl, r3, r8, lsr r0
   2e174:	andeq	sl, r3, r0, asr r0
   2e178:	andeq	sl, r3, r8, rrx
   2e17c:	andeq	sl, r3, r8, lsl #1
   2e180:	muleq	r3, ip, r0
   2e184:	andeq	sl, r3, ip, lsr #1
   2e188:	strheq	sl, [r3], -ip
   2e18c:	andeq	sl, r3, ip, asr #1
   2e190:	andeq	sl, r3, r8, ror #1
   2e194:	andeq	r5, r3, ip, lsr #25
   2e198:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   2e19c:	andeq	r9, r3, r4, lsl #17
   2e1a0:	andeq	r9, r3, r0, lsr #17
   2e1a4:	andeq	r9, r3, r0, ror #17
   2e1a8:	andeq	r4, r3, ip, lsl r8
   2e1ac:	andeq	r4, r3, r8, lsr #16
   2e1b0:	andeq	r9, r3, r0, lsr #30
   2e1b4:	andeq	r4, r3, r4, lsl #31
   2e1b8:	andeq	r4, r3, ip, ror r9
   2e1bc:	muleq	r3, ip, r9
   2e1c0:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   2e1c4:	andeq	r7, r3, r0, lsl r6
   2e1c8:	andeq	r9, r3, ip, lsr r5
   2e1cc:	andeq	r9, r3, r0, asr #8
   2e1d0:	andeq	r9, r3, r8, asr r3
   2e1d4:	andeq	r9, r3, r8, lsr #7
   2e1d8:	andeq	r9, r3, r4, ror r3
   2e1dc:	andeq	r9, r3, r0, ror #7
   2e1e0:	andeq	r5, r3, r4, lsl r2
   2e1e4:	andeq	r9, r3, r8, lsr #9
   2e1e8:	ldrdeq	r9, [r3], -ip
   2e1ec:	andeq	r9, r3, r4, asr #27
   2e1f0:	ldrdeq	r9, [r3], -r8
   2e1f4:	andeq	r9, r3, r0, asr #28
   2e1f8:	andeq	r9, r3, r8, lsr lr
   2e1fc:	andeq	r9, r3, r4, asr lr
   2e200:	andeq	r9, r3, r0, lsl #29
   2e204:	muleq	r3, r0, lr
   2e208:	muleq	r3, ip, lr
   2e20c:	andeq	r9, r3, r8, ror sp
   2e210:	andeq	r9, r3, r4, lsl #27
   2e214:	muleq	r3, r0, sp
   2e218:	muleq	r3, r8, sp
   2e21c:	andeq	r9, r3, r4, lsr #27
   2e220:			; <UNDEFINED> instruction: 0x00039db8
   2e224:			; <UNDEFINED> instruction: 0x00039eb0
   2e228:	andeq	r9, r3, r0, ror lr
   2e22c:	strdeq	r9, [r3], -r4
   2e230:	andeq	r9, r3, r8, lsl #28
   2e234:	andeq	r9, r3, r0, lsl lr
   2e238:	andeq	r9, r3, ip, asr #29
   2e23c:	andeq	r9, r3, r0, lsl #26
   2e240:	ldrdeq	r9, [r3], -ip
   2e244:	strdeq	r9, [r3], -r0
   2e248:	strdeq	r9, [r3], -ip
   2e24c:	andeq	r9, r3, r8, lsl #26
   2e250:	andeq	r9, r3, r8, lsl #30
   2e254:	andeq	r9, r3, r8, lsl pc
   2e258:	andeq	r4, r3, r4, asr #15
   2e25c:	ldr	r3, [r0]
   2e260:	ldr	r3, [r3, #80]	; 0x50
   2e264:	bx	r3
   2e268:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e26c:	sub	sp, sp, #28
   2e270:	ldr	r4, [pc, #428]	; 2e424 <g_strcmp0@plt+0x19258>
   2e274:	ldr	r1, [r0, #44]	; 0x2c
   2e278:	mov	r3, #0
   2e27c:	ldr	r2, [r4]
   2e280:	ldr	r0, [r1, #4]
   2e284:	str	r2, [sp, #20]
   2e288:	str	r3, [sp, #16]
   2e28c:	bl	147e8 <g_strdup@plt>
   2e290:	mov	r1, #16
   2e294:	mov	r5, r0
   2e298:	bl	14c20 <g_file_test@plt>
   2e29c:	cmp	r0, #0
   2e2a0:	beq	2e2c8 <g_strcmp0@plt+0x190fc>
   2e2a4:	ldr	r0, [pc, #380]	; 2e428 <g_strcmp0@plt+0x1925c>
   2e2a8:	bl	30a58 <g_strcmp0@plt+0x1b88c>
   2e2ac:	mov	r1, #16
   2e2b0:	mov	r8, r0
   2e2b4:	bl	14c20 <g_file_test@plt>
   2e2b8:	subs	r6, r0, #0
   2e2bc:	beq	2e2e8 <g_strcmp0@plt+0x1911c>
   2e2c0:	mov	r0, r8
   2e2c4:	bl	14bd8 <g_free@plt>
   2e2c8:	mov	r0, r5
   2e2cc:	bl	14bd8 <g_free@plt>
   2e2d0:	ldr	r2, [sp, #20]
   2e2d4:	ldr	r3, [r4]
   2e2d8:	cmp	r2, r3
   2e2dc:	bne	2e420 <g_strcmp0@plt+0x19254>
   2e2e0:	add	sp, sp, #28
   2e2e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e2e8:	ldr	r0, [pc, #312]	; 2e428 <g_strcmp0@plt+0x1925c>
   2e2ec:	bl	30a94 <g_strcmp0@plt+0x1b8c8>
   2e2f0:	add	fp, sp, #16
   2e2f4:	mov	r7, r0
   2e2f8:	bl	14fa4 <g_file_new_for_path@plt>
   2e2fc:	mov	r9, r0
   2e300:	mov	r0, r7
   2e304:	bl	14bd8 <g_free@plt>
   2e308:	ldr	r0, [pc, #280]	; 2e428 <g_strcmp0@plt+0x1925c>
   2e30c:	bl	30a58 <g_strcmp0@plt+0x1b88c>
   2e310:	mov	sl, r0
   2e314:	bl	14fa4 <g_file_new_for_path@plt>
   2e318:	mov	r7, r0
   2e31c:	mov	r0, sl
   2e320:	bl	14bd8 <g_free@plt>
   2e324:	str	r6, [sp, #4]
   2e328:	str	r6, [sp]
   2e32c:	mov	r1, r7
   2e330:	mov	r0, r9
   2e334:	str	fp, [sp, #8]
   2e338:	mov	r3, r6
   2e33c:	mov	r2, r6
   2e340:	bl	14c80 <g_file_copy@plt>
   2e344:	ldr	sl, [sp, #16]
   2e348:	cmp	sl, #0
   2e34c:	beq	2e3f4 <g_strcmp0@plt+0x19228>
   2e350:	ldr	r3, [sl, #8]
   2e354:	mov	r0, r6
   2e358:	ldr	r2, [pc, #204]	; 2e42c <g_strcmp0@plt+0x19260>
   2e35c:	mov	r1, #32
   2e360:	str	r6, [sp, #16]
   2e364:	bl	14668 <g_log@plt>
   2e368:	mov	r0, sl
   2e36c:	bl	1453c <g_error_free@plt>
   2e370:	ldr	r3, [sp, #16]
   2e374:	cmp	r3, #0
   2e378:	beq	2e3f4 <g_strcmp0@plt+0x19228>
   2e37c:	cmp	r7, #0
   2e380:	beq	2e38c <g_strcmp0@plt+0x191c0>
   2e384:	mov	r0, r7
   2e388:	bl	14e90 <g_object_unref@plt>
   2e38c:	cmp	r9, #0
   2e390:	beq	2e39c <g_strcmp0@plt+0x191d0>
   2e394:	mov	r0, r9
   2e398:	bl	14e90 <g_object_unref@plt>
   2e39c:	mov	r0, r8
   2e3a0:	bl	14bd8 <g_free@plt>
   2e3a4:	mov	r0, r5
   2e3a8:	bl	14bd8 <g_free@plt>
   2e3ac:	ldr	r5, [sp, #16]
   2e3b0:	ldr	r0, [r5]
   2e3b4:	bl	14c2c <g_quark_to_string@plt>
   2e3b8:	ldr	r3, [r5, #4]
   2e3bc:	ldr	ip, [pc, #108]	; 2e430 <g_strcmp0@plt+0x19264>
   2e3c0:	str	r3, [sp, #12]
   2e3c4:	ldr	r2, [pc, #104]	; 2e434 <g_strcmp0@plt+0x19268>
   2e3c8:	ldr	r3, [pc, #104]	; 2e438 <g_strcmp0@plt+0x1926c>
   2e3cc:	mov	r1, #8
   2e3d0:	str	r0, [sp, #8]
   2e3d4:	ldr	r0, [r5, #8]
   2e3d8:	str	ip, [sp]
   2e3dc:	str	r0, [sp, #4]
   2e3e0:	mov	r0, #0
   2e3e4:	bl	14668 <g_log@plt>
   2e3e8:	mov	r0, fp
   2e3ec:	bl	14dac <g_clear_error@plt>
   2e3f0:	b	2e2d0 <g_strcmp0@plt+0x19104>
   2e3f4:	cmp	r7, #0
   2e3f8:	beq	2e404 <g_strcmp0@plt+0x19238>
   2e3fc:	mov	r0, r7
   2e400:	bl	14e90 <g_object_unref@plt>
   2e404:	cmp	r9, #0
   2e408:	beq	2e2c0 <g_strcmp0@plt+0x190f4>
   2e40c:	mov	r0, r9
   2e410:	bl	14e90 <g_object_unref@plt>
   2e414:	mov	r0, r8
   2e418:	bl	14bd8 <g_free@plt>
   2e41c:	b	2e2c8 <g_strcmp0@plt+0x190fc>
   2e420:	bl	14b6c <__stack_chk_fail@plt>
   2e424:	andeq	fp, r4, r8, asr #19
   2e428:	strdeq	r4, [r3], -ip
   2e42c:	andeq	sl, r3, ip, lsr #7
   2e430:	andeq	r0, r0, pc, lsr ip
   2e434:	andeq	r4, r3, r4, lsr #13
   2e438:	strdeq	r9, [r3], -ip
   2e43c:	ldr	r3, [r0]
   2e440:	ldr	r3, [r3, #84]	; 0x54
   2e444:	bx	r3
   2e448:	push	{r4, lr}
   2e44c:	mov	r1, #32
   2e450:	mov	r4, r0
   2e454:	ldr	r2, [pc, #16]	; 2e46c <g_strcmp0@plt+0x192a0>
   2e458:	mov	r0, #0
   2e45c:	bl	14668 <g_log@plt>
   2e460:	mov	r0, r4
   2e464:	pop	{r4, lr}
   2e468:	b	2c4c4 <g_strcmp0@plt+0x172f8>
   2e46c:	andeq	sl, r3, r8, lsl r3
   2e470:	ldr	r3, [r0, #44]	; 0x2c
   2e474:	ldr	r0, [r3]
   2e478:	bx	lr
   2e47c:	ldr	r3, [r0, #44]	; 0x2c
   2e480:	push	{r4, r5, r6, lr}
   2e484:	mov	r4, r0
   2e488:	mov	r5, r1
   2e48c:	mov	r0, r1
   2e490:	ldr	r1, [r3]
   2e494:	bl	151cc <g_strcmp0@plt>
   2e498:	cmp	r0, #0
   2e49c:	popeq	{r4, r5, r6, pc}
   2e4a0:	mov	r0, r5
   2e4a4:	bl	147e8 <g_strdup@plt>
   2e4a8:	ldr	r3, [r4, #44]	; 0x2c
   2e4ac:	mov	r5, r0
   2e4b0:	ldr	r0, [r3]
   2e4b4:	bl	14bd8 <g_free@plt>
   2e4b8:	ldr	r2, [r4, #44]	; 0x2c
   2e4bc:	ldr	r3, [pc, #16]	; 2e4d4 <g_strcmp0@plt+0x19308>
   2e4c0:	mov	r0, r4
   2e4c4:	str	r5, [r2]
   2e4c8:	ldr	r1, [r3, #36]	; 0x24
   2e4cc:	pop	{r4, r5, r6, lr}
   2e4d0:	b	14b78 <g_object_notify_by_pspec@plt>
   2e4d4:	andeq	ip, r4, r0, lsr #8
   2e4d8:	push	{r4, lr}
   2e4dc:	mov	r4, r0
   2e4e0:	ldr	r2, [pc, #52]	; 2e51c <g_strcmp0@plt+0x19350>
   2e4e4:	mov	r1, #32
   2e4e8:	mov	r0, #0
   2e4ec:	bl	14668 <g_log@plt>
   2e4f0:	ldr	r3, [r4, #44]	; 0x2c
   2e4f4:	mov	r0, r4
   2e4f8:	ldr	r1, [r3, #4]
   2e4fc:	bl	2e47c <g_strcmp0@plt+0x192b0>
   2e500:	ldr	r0, [r4, #68]	; 0x44
   2e504:	bl	14698 <g_cancellable_cancel@plt>
   2e508:	mov	r0, r4
   2e50c:	bl	2c4c4 <g_strcmp0@plt+0x172f8>
   2e510:	mov	r0, r4
   2e514:	pop	{r4, lr}
   2e518:	b	2c304 <g_strcmp0@plt+0x17138>
   2e51c:	andeq	sl, r3, r4, asr #7
   2e520:	ldr	r0, [sp]
   2e524:	b	2e4d8 <g_strcmp0@plt+0x1930c>
   2e528:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e52c:	mov	sl, #0
   2e530:	ldr	r6, [pc, #916]	; 2e8cc <g_strcmp0@plt+0x19700>
   2e534:	sub	sp, sp, #36	; 0x24
   2e538:	mov	r2, sl
   2e53c:	ldr	r3, [r6]
   2e540:	mov	r1, sl
   2e544:	mov	r4, r0
   2e548:	ldr	r0, [r0, #48]	; 0x30
   2e54c:	str	r3, [sp, #28]
   2e550:	str	sl, [sp, #24]
   2e554:	bl	14d40 <g_key_file_to_data@plt>
   2e558:	mov	r5, r0
   2e55c:	bl	14e9c <strlen@plt>
   2e560:	ldr	ip, [r4, #44]	; 0x2c
   2e564:	add	r3, sp, #24
   2e568:	mov	r1, r5
   2e56c:	mov	r2, r0
   2e570:	ldr	r0, [ip]
   2e574:	bl	14920 <g_file_set_contents@plt>
   2e578:	ldr	r3, [sp, #24]
   2e57c:	cmp	r3, sl
   2e580:	beq	2e5e0 <g_strcmp0@plt+0x19414>
   2e584:	ldr	r7, [r3]
   2e588:	bl	15040 <g_file_error_quark@plt>
   2e58c:	cmp	r7, r0
   2e590:	beq	2e610 <g_strcmp0@plt+0x19444>
   2e594:	mov	r0, r5
   2e598:	bl	14bd8 <g_free@plt>
   2e59c:	ldr	r4, [sp, #24]
   2e5a0:	ldr	r0, [r4]
   2e5a4:	bl	14c2c <g_quark_to_string@plt>
   2e5a8:	ldr	r3, [r4, #4]
   2e5ac:	ldr	ip, [pc, #796]	; 2e8d0 <g_strcmp0@plt+0x19704>
   2e5b0:	str	r3, [sp, #12]
   2e5b4:	ldr	r2, [pc, #792]	; 2e8d4 <g_strcmp0@plt+0x19708>
   2e5b8:	ldr	r3, [pc, #792]	; 2e8d8 <g_strcmp0@plt+0x1970c>
   2e5bc:	mov	r1, #8
   2e5c0:	str	r0, [sp, #8]
   2e5c4:	ldr	lr, [r4, #8]
   2e5c8:	mov	r0, sl
   2e5cc:	stm	sp, {ip, lr}
   2e5d0:	bl	14668 <g_log@plt>
   2e5d4:	add	r0, sp, #24
   2e5d8:	bl	14dac <g_clear_error@plt>
   2e5dc:	b	2e5f8 <g_strcmp0@plt+0x1942c>
   2e5e0:	ldr	r3, [r4]
   2e5e4:	mov	r0, r4
   2e5e8:	ldr	r3, [r3, #84]	; 0x54
   2e5ec:	blx	r3
   2e5f0:	mov	r0, r5
   2e5f4:	bl	14bd8 <g_free@plt>
   2e5f8:	ldr	r2, [sp, #28]
   2e5fc:	ldr	r3, [r6]
   2e600:	cmp	r2, r3
   2e604:	bne	2e8c8 <g_strcmp0@plt+0x196fc>
   2e608:	add	sp, sp, #36	; 0x24
   2e60c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e610:	ldr	r7, [sp, #24]
   2e614:	ldr	r2, [pc, #704]	; 2e8dc <g_strcmp0@plt+0x19710>
   2e618:	mov	r1, #16
   2e61c:	mov	r0, sl
   2e620:	ldr	r3, [r7, #8]
   2e624:	str	sl, [sp, #24]
   2e628:	bl	14668 <g_log@plt>
   2e62c:	ldr	r3, [r4, #44]	; 0x2c
   2e630:	ldr	r0, [r3, #4]
   2e634:	bl	147e8 <g_strdup@plt>
   2e638:	mov	r8, r0
   2e63c:	bl	14fa4 <g_file_new_for_path@plt>
   2e640:	mov	r9, r0
   2e644:	bl	14fb0 <g_file_get_parent@plt>
   2e648:	mov	r1, sl
   2e64c:	mov	fp, r0
   2e650:	bl	147f4 <g_file_query_exists@plt>
   2e654:	subs	sl, r0, #0
   2e658:	bne	2e744 <g_strcmp0@plt+0x19578>
   2e65c:	add	r2, sp, #24
   2e660:	mov	r1, sl
   2e664:	mov	r0, fp
   2e668:	bl	14c8c <g_file_make_directory_with_parents@plt>
   2e66c:	ldr	r3, [sp, #24]
   2e670:	cmp	r3, #0
   2e674:	beq	2e744 <g_strcmp0@plt+0x19578>
   2e678:	mov	r0, sl
   2e67c:	str	r3, [sp, #20]
   2e680:	ldr	r2, [pc, #600]	; 2e8e0 <g_strcmp0@plt+0x19714>
   2e684:	ldr	r3, [r3, #8]
   2e688:	mov	r1, #16
   2e68c:	str	sl, [sp, #24]
   2e690:	bl	14668 <g_log@plt>
   2e694:	ldr	r0, [sp, #20]
   2e698:	bl	1453c <g_error_free@plt>
   2e69c:	ldr	r3, [sp, #24]
   2e6a0:	cmp	r3, #0
   2e6a4:	beq	2e744 <g_strcmp0@plt+0x19578>
   2e6a8:	cmp	r9, #0
   2e6ac:	beq	2e6b8 <g_strcmp0@plt+0x194ec>
   2e6b0:	mov	r0, r9
   2e6b4:	bl	14e90 <g_object_unref@plt>
   2e6b8:	cmp	fp, #0
   2e6bc:	beq	2e6c8 <g_strcmp0@plt+0x194fc>
   2e6c0:	mov	r0, fp
   2e6c4:	bl	14e90 <g_object_unref@plt>
   2e6c8:	mov	r0, r8
   2e6cc:	bl	14bd8 <g_free@plt>
   2e6d0:	ldr	r3, [sp, #24]
   2e6d4:	ldr	r8, [r3]
   2e6d8:	bl	15040 <g_file_error_quark@plt>
   2e6dc:	cmp	r8, r0
   2e6e0:	beq	2e89c <g_strcmp0@plt+0x196d0>
   2e6e4:	mov	r0, #0
   2e6e8:	bl	14bd8 <g_free@plt>
   2e6ec:	mov	r0, r7
   2e6f0:	bl	1453c <g_error_free@plt>
   2e6f4:	mov	r0, r5
   2e6f8:	bl	14bd8 <g_free@plt>
   2e6fc:	ldr	r4, [sp, #24]
   2e700:	ldr	r0, [r4]
   2e704:	bl	14c2c <g_quark_to_string@plt>
   2e708:	ldr	r3, [r4, #4]
   2e70c:	ldr	ip, [pc, #464]	; 2e8e4 <g_strcmp0@plt+0x19718>
   2e710:	str	r3, [sp, #12]
   2e714:	str	r0, [sp, #8]
   2e718:	ldr	r0, [r4, #8]
   2e71c:	ldr	r3, [pc, #436]	; 2e8d8 <g_strcmp0@plt+0x1970c>
   2e720:	str	r0, [sp, #4]
   2e724:	ldr	r2, [pc, #424]	; 2e8d4 <g_strcmp0@plt+0x19708>
   2e728:	mov	r1, #8
   2e72c:	str	ip, [sp]
   2e730:	mov	r0, #0
   2e734:	bl	14668 <g_log@plt>
   2e738:	add	r0, sp, #24
   2e73c:	bl	14dac <g_clear_error@plt>
   2e740:	b	2e5f8 <g_strcmp0@plt+0x1942c>
   2e744:	mov	r0, r5
   2e748:	bl	14e9c <strlen@plt>
   2e74c:	add	r3, sp, #24
   2e750:	mov	r1, r5
   2e754:	mov	r2, r0
   2e758:	mov	r0, r8
   2e75c:	bl	14920 <g_file_set_contents@plt>
   2e760:	ldr	r3, [sp, #24]
   2e764:	cmp	r3, #0
   2e768:	beq	2e7d8 <g_strcmp0@plt+0x1960c>
   2e76c:	cmp	r9, #0
   2e770:	beq	2e77c <g_strcmp0@plt+0x195b0>
   2e774:	mov	r0, r9
   2e778:	bl	14e90 <g_object_unref@plt>
   2e77c:	cmp	fp, #0
   2e780:	beq	2e78c <g_strcmp0@plt+0x195c0>
   2e784:	mov	r0, fp
   2e788:	bl	14e90 <g_object_unref@plt>
   2e78c:	mov	r0, r8
   2e790:	bl	14bd8 <g_free@plt>
   2e794:	ldr	r3, [sp, #24]
   2e798:	ldr	r8, [r3]
   2e79c:	bl	15040 <g_file_error_quark@plt>
   2e7a0:	cmp	r8, r0
   2e7a4:	beq	2e89c <g_strcmp0@plt+0x196d0>
   2e7a8:	mov	r0, #0
   2e7ac:	bl	14bd8 <g_free@plt>
   2e7b0:	mov	r0, r7
   2e7b4:	bl	1453c <g_error_free@plt>
   2e7b8:	mov	r0, r5
   2e7bc:	bl	14bd8 <g_free@plt>
   2e7c0:	ldr	r4, [sp, #24]
   2e7c4:	ldr	r0, [r4]
   2e7c8:	bl	14c2c <g_quark_to_string@plt>
   2e7cc:	ldr	r3, [r4, #4]
   2e7d0:	ldr	ip, [pc, #272]	; 2e8e8 <g_strcmp0@plt+0x1971c>
   2e7d4:	b	2e710 <g_strcmp0@plt+0x19544>
   2e7d8:	mov	r1, r8
   2e7dc:	mov	r0, r4
   2e7e0:	bl	2e47c <g_strcmp0@plt+0x192b0>
   2e7e4:	mov	r0, r4
   2e7e8:	bl	2c304 <g_strcmp0@plt+0x17138>
   2e7ec:	mov	r0, r4
   2e7f0:	bl	2e268 <g_strcmp0@plt+0x1909c>
   2e7f4:	cmp	r9, #0
   2e7f8:	beq	2e804 <g_strcmp0@plt+0x19638>
   2e7fc:	mov	r0, r9
   2e800:	bl	14e90 <g_object_unref@plt>
   2e804:	cmp	fp, #0
   2e808:	beq	2e814 <g_strcmp0@plt+0x19648>
   2e80c:	mov	r0, fp
   2e810:	bl	14e90 <g_object_unref@plt>
   2e814:	mov	r0, r8
   2e818:	bl	14bd8 <g_free@plt>
   2e81c:	ldr	r8, [sp, #24]
   2e820:	mov	r0, r7
   2e824:	cmp	r8, #0
   2e828:	beq	2e850 <g_strcmp0@plt+0x19684>
   2e82c:	bl	1453c <g_error_free@plt>
   2e830:	mov	r0, r5
   2e834:	bl	14bd8 <g_free@plt>
   2e838:	ldr	r4, [sp, #24]
   2e83c:	ldr	r0, [r4]
   2e840:	bl	14c2c <g_quark_to_string@plt>
   2e844:	ldr	r3, [r4, #4]
   2e848:	ldr	ip, [pc, #156]	; 2e8ec <g_strcmp0@plt+0x19720>
   2e84c:	b	2e710 <g_strcmp0@plt+0x19544>
   2e850:	bl	1453c <g_error_free@plt>
   2e854:	ldr	r3, [sp, #24]
   2e858:	cmp	r3, #0
   2e85c:	beq	2e5e0 <g_strcmp0@plt+0x19414>
   2e860:	mov	r0, r5
   2e864:	bl	14bd8 <g_free@plt>
   2e868:	ldr	r4, [sp, #24]
   2e86c:	ldr	r0, [r4]
   2e870:	bl	14c2c <g_quark_to_string@plt>
   2e874:	ldr	r3, [r4, #4]
   2e878:	ldr	ip, [pc, #112]	; 2e8f0 <g_strcmp0@plt+0x19724>
   2e87c:	str	r3, [sp, #12]
   2e880:	ldr	r2, [pc, #108]	; 2e8f4 <g_strcmp0@plt+0x19728>
   2e884:	ldr	r3, [pc, #76]	; 2e8d8 <g_strcmp0@plt+0x1970c>
   2e888:	mov	r1, #8
   2e88c:	str	r0, [sp, #8]
   2e890:	mov	r0, r8
   2e894:	ldr	lr, [r4, #8]
   2e898:	b	2e5cc <g_strcmp0@plt+0x19400>
   2e89c:	ldr	r8, [sp, #24]
   2e8a0:	mov	ip, #0
   2e8a4:	mov	r0, ip
   2e8a8:	ldr	r3, [r8, #8]
   2e8ac:	ldr	r2, [pc, #68]	; 2e8f8 <g_strcmp0@plt+0x1972c>
   2e8b0:	mov	r1, #16
   2e8b4:	str	ip, [sp, #24]
   2e8b8:	bl	14668 <g_log@plt>
   2e8bc:	mov	r0, r8
   2e8c0:	bl	1453c <g_error_free@plt>
   2e8c4:	b	2e81c <g_strcmp0@plt+0x19650>
   2e8c8:	bl	14b6c <__stack_chk_fail@plt>
   2e8cc:	andeq	fp, r4, r8, asr #19
   2e8d0:	andeq	r0, r0, r4, ror #24
   2e8d4:	andeq	r4, r3, r4, ror r6
   2e8d8:	strdeq	r9, [r3], -ip
   2e8dc:	andeq	sl, r3, ip, lsl r4
   2e8e0:	andeq	sl, r3, r4, lsr r4
   2e8e4:			; <UNDEFINED> instruction: 0x00000cb1
   2e8e8:	andeq	r0, r0, r6, asr #25
   2e8ec:	andeq	r0, r0, r4, ror #25
   2e8f0:	andeq	r0, r0, sp, ror #25
   2e8f4:	andeq	r4, r3, r4, lsr #13
   2e8f8:	andeq	sl, r3, ip, asr #8
   2e8fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2e900:	sub	sp, sp, #16
   2e904:	mov	r7, r0
   2e908:	ldr	r6, [sp, #48]	; 0x30
   2e90c:	ldr	r4, [pc, #400]	; 2eaa4 <g_strcmp0@plt+0x198d8>
   2e910:	cmp	r6, #0
   2e914:	mov	r8, r1
   2e918:	mov	r9, r2
   2e91c:	mov	sl, r3
   2e920:	beq	2ea3c <g_strcmp0@plt+0x19870>
   2e924:	mov	r0, r6
   2e928:	bl	14bcc <g_quark_from_string@plt>
   2e92c:	mov	r5, r0
   2e930:	ldr	r0, [r4, #96]	; 0x60
   2e934:	cmp	r0, #0
   2e938:	beq	2ea24 <g_strcmp0@plt+0x19858>
   2e93c:	cmp	r0, r5
   2e940:	beq	2e9e4 <g_strcmp0@plt+0x19818>
   2e944:	ldr	r0, [r4, #100]	; 0x64
   2e948:	cmp	r0, #0
   2e94c:	beq	2ea58 <g_strcmp0@plt+0x1988c>
   2e950:	cmp	r0, r5
   2e954:	beq	2ea6c <g_strcmp0@plt+0x198a0>
   2e958:	ldr	r0, [r4, #104]	; 0x68
   2e95c:	cmp	r0, #0
   2e960:	beq	2ea94 <g_strcmp0@plt+0x198c8>
   2e964:	cmp	r0, r5
   2e968:	beq	2ea80 <g_strcmp0@plt+0x198b4>
   2e96c:	mov	r3, r9
   2e970:	str	sl, [sp]
   2e974:	stmib	sp, {r6, r8}
   2e978:	ldr	r2, [pc, #296]	; 2eaa8 <g_strcmp0@plt+0x198dc>
   2e97c:	mov	r1, #32
   2e980:	mov	r0, #0
   2e984:	bl	14668 <g_log@plt>
   2e988:	mov	r0, sl
   2e98c:	mov	r2, #0
   2e990:	ldr	r1, [pc, #276]	; 2eaac <g_strcmp0@plt+0x198e0>
   2e994:	ldr	sl, [r7, #48]	; 0x30
   2e998:	bl	14dc4 <g_strconcat@plt>
   2e99c:	mov	r1, r6
   2e9a0:	mov	r2, #0
   2e9a4:	mov	r5, r0
   2e9a8:	bl	14dc4 <g_strconcat@plt>
   2e9ac:	mov	r3, r8
   2e9b0:	mov	r1, r9
   2e9b4:	mov	r2, r0
   2e9b8:	mov	r4, r0
   2e9bc:	mov	r0, sl
   2e9c0:	bl	14674 <g_key_file_set_integer@plt>
   2e9c4:	mov	r0, r4
   2e9c8:	bl	14bd8 <g_free@plt>
   2e9cc:	mov	r0, r5
   2e9d0:	bl	14bd8 <g_free@plt>
   2e9d4:	mov	r0, r7
   2e9d8:	add	sp, sp, #16
   2e9dc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2e9e0:	b	2e528 <g_strcmp0@plt+0x1935c>
   2e9e4:	ldr	r2, [pc, #196]	; 2eab0 <g_strcmp0@plt+0x198e4>
   2e9e8:	mov	r3, r9
   2e9ec:	str	r8, [sp, #4]
   2e9f0:	str	sl, [sp]
   2e9f4:	mov	r1, #32
   2e9f8:	mov	r0, #0
   2e9fc:	bl	14668 <g_log@plt>
   2ea00:	ldr	r0, [r7, #48]	; 0x30
   2ea04:	mov	r3, r8
   2ea08:	mov	r2, sl
   2ea0c:	mov	r1, r9
   2ea10:	bl	14674 <g_key_file_set_integer@plt>
   2ea14:	mov	r0, r7
   2ea18:	add	sp, sp, #16
   2ea1c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2ea20:	b	2e528 <g_strcmp0@plt+0x1935c>
   2ea24:	mov	r0, #0
   2ea28:	bl	14d64 <g_quark_from_static_string@plt>
   2ea2c:	cmp	r0, r5
   2ea30:	str	r0, [r4, #96]	; 0x60
   2ea34:	bne	2e944 <g_strcmp0@plt+0x19778>
   2ea38:	b	2e9e4 <g_strcmp0@plt+0x19818>
   2ea3c:	ldr	r5, [r4, #96]	; 0x60
   2ea40:	cmp	r5, #0
   2ea44:	beq	2ea24 <g_strcmp0@plt+0x19858>
   2ea48:	ldr	r5, [r4, #100]	; 0x64
   2ea4c:	cmp	r5, #0
   2ea50:	movne	r5, r6
   2ea54:	bne	2e958 <g_strcmp0@plt+0x1978c>
   2ea58:	ldr	r0, [pc, #84]	; 2eab4 <g_strcmp0@plt+0x198e8>
   2ea5c:	bl	14d64 <g_quark_from_static_string@plt>
   2ea60:	cmp	r0, r5
   2ea64:	str	r0, [r4, #100]	; 0x64
   2ea68:	bne	2e958 <g_strcmp0@plt+0x1978c>
   2ea6c:	str	r8, [sp, #4]
   2ea70:	str	sl, [sp]
   2ea74:	mov	r3, r9
   2ea78:	ldr	r2, [pc, #56]	; 2eab8 <g_strcmp0@plt+0x198ec>
   2ea7c:	b	2e9f4 <g_strcmp0@plt+0x19828>
   2ea80:	str	r8, [sp, #4]
   2ea84:	str	sl, [sp]
   2ea88:	mov	r3, r9
   2ea8c:	ldr	r2, [pc, #40]	; 2eabc <g_strcmp0@plt+0x198f0>
   2ea90:	b	2e9f4 <g_strcmp0@plt+0x19828>
   2ea94:	ldr	r0, [pc, #36]	; 2eac0 <g_strcmp0@plt+0x198f4>
   2ea98:	bl	14d64 <g_quark_from_static_string@plt>
   2ea9c:	str	r0, [r4, #104]	; 0x68
   2eaa0:	b	2e964 <g_strcmp0@plt+0x19798>
   2eaa4:	andeq	ip, r4, r0, lsr #8
   2eaa8:	andeq	sl, r3, r8, ror #9
   2eaac:	andeq	sl, r3, r8, asr #6
   2eab0:	andeq	sl, r3, r4, ror #8
   2eab4:	andeq	sl, r3, ip, ror #18
   2eab8:	muleq	r3, r0, r4
   2eabc:			; <UNDEFINED> instruction: 0x0003a4bc
   2eac0:	andeq	r5, r3, ip, lsr #4
   2eac4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2eac8:	sub	sp, sp, #12
   2eacc:	mov	r7, r0
   2ead0:	ldr	r6, [sp, #52]	; 0x34
   2ead4:	ldr	r4, [pc, #352]	; 2ec3c <g_strcmp0@plt+0x19a70>
   2ead8:	cmp	r6, #0
   2eadc:	mov	r8, r1
   2eae0:	mov	r9, r2
   2eae4:	mov	sl, r3
   2eae8:	ldr	fp, [sp, #48]	; 0x30
   2eaec:	beq	2ebd8 <g_strcmp0@plt+0x19a0c>
   2eaf0:	mov	r0, r6
   2eaf4:	bl	14bcc <g_quark_from_string@plt>
   2eaf8:	mov	r5, r0
   2eafc:	ldr	r0, [r4, #108]	; 0x6c
   2eb00:	cmp	r0, #0
   2eb04:	beq	2ebc0 <g_strcmp0@plt+0x199f4>
   2eb08:	cmp	r0, r5
   2eb0c:	beq	2eb98 <g_strcmp0@plt+0x199cc>
   2eb10:	ldr	r0, [r4, #112]	; 0x70
   2eb14:	cmp	r0, #0
   2eb18:	beq	2ebf4 <g_strcmp0@plt+0x19a28>
   2eb1c:	cmp	r0, r5
   2eb20:	beq	2eb98 <g_strcmp0@plt+0x199cc>
   2eb24:	ldr	r0, [r4, #116]	; 0x74
   2eb28:	cmp	r0, #0
   2eb2c:	beq	2ec2c <g_strcmp0@plt+0x19a60>
   2eb30:	cmp	r0, r5
   2eb34:	ldr	r4, [r7, #48]	; 0x30
   2eb38:	beq	2ec04 <g_strcmp0@plt+0x19a38>
   2eb3c:	mov	r0, fp
   2eb40:	mov	r2, #0
   2eb44:	ldr	r1, [pc, #244]	; 2ec40 <g_strcmp0@plt+0x19a74>
   2eb48:	bl	14dc4 <g_strconcat@plt>
   2eb4c:	mov	r1, r6
   2eb50:	mov	r2, #0
   2eb54:	mov	fp, r0
   2eb58:	bl	14dc4 <g_strconcat@plt>
   2eb5c:	mov	r3, r8
   2eb60:	mov	r1, sl
   2eb64:	str	r9, [sp]
   2eb68:	mov	r5, r0
   2eb6c:	mov	r2, r5
   2eb70:	mov	r0, r4
   2eb74:	bl	148fc <g_key_file_set_string_list@plt>
   2eb78:	mov	r0, r5
   2eb7c:	bl	14bd8 <g_free@plt>
   2eb80:	mov	r0, fp
   2eb84:	bl	14bd8 <g_free@plt>
   2eb88:	mov	r0, r7
   2eb8c:	add	sp, sp, #12
   2eb90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2eb94:	b	2e528 <g_strcmp0@plt+0x1935c>
   2eb98:	str	r9, [sp]
   2eb9c:	mov	r3, r8
   2eba0:	ldr	r0, [r7, #48]	; 0x30
   2eba4:	mov	r2, fp
   2eba8:	mov	r1, sl
   2ebac:	bl	148fc <g_key_file_set_string_list@plt>
   2ebb0:	mov	r0, r7
   2ebb4:	add	sp, sp, #12
   2ebb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ebbc:	b	2e528 <g_strcmp0@plt+0x1935c>
   2ebc0:	mov	r0, #0
   2ebc4:	bl	14d64 <g_quark_from_static_string@plt>
   2ebc8:	cmp	r0, r5
   2ebcc:	str	r0, [r4, #108]	; 0x6c
   2ebd0:	bne	2eb10 <g_strcmp0@plt+0x19944>
   2ebd4:	b	2eb98 <g_strcmp0@plt+0x199cc>
   2ebd8:	ldr	r5, [r4, #108]	; 0x6c
   2ebdc:	cmp	r5, #0
   2ebe0:	beq	2ebc0 <g_strcmp0@plt+0x199f4>
   2ebe4:	ldr	r5, [r4, #112]	; 0x70
   2ebe8:	cmp	r5, #0
   2ebec:	movne	r5, r6
   2ebf0:	bne	2eb24 <g_strcmp0@plt+0x19958>
   2ebf4:	ldr	r0, [pc, #72]	; 2ec44 <g_strcmp0@plt+0x19a78>
   2ebf8:	bl	14d64 <g_quark_from_static_string@plt>
   2ebfc:	str	r0, [r4, #112]	; 0x70
   2ec00:	b	2eb1c <g_strcmp0@plt+0x19950>
   2ec04:	mov	r0, r4
   2ec08:	str	r9, [sp]
   2ec0c:	mov	r3, r8
   2ec10:	mov	r2, fp
   2ec14:	mov	r1, sl
   2ec18:	bl	148fc <g_key_file_set_string_list@plt>
   2ec1c:	mov	r0, r7
   2ec20:	add	sp, sp, #12
   2ec24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ec28:	b	2e528 <g_strcmp0@plt+0x1935c>
   2ec2c:	ldr	r0, [pc, #20]	; 2ec48 <g_strcmp0@plt+0x19a7c>
   2ec30:	bl	14d64 <g_quark_from_static_string@plt>
   2ec34:	str	r0, [r4, #116]	; 0x74
   2ec38:	b	2eb30 <g_strcmp0@plt+0x19964>
   2ec3c:	andeq	ip, r4, r0, lsr #8
   2ec40:	andeq	sl, r3, r8, asr #6
   2ec44:	andeq	sl, r3, ip, ror #18
   2ec48:	andeq	r5, r3, ip, lsr #4
   2ec4c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2ec50:	mov	r7, r0
   2ec54:	ldr	r6, [sp, #32]
   2ec58:	ldr	r4, [pc, #324]	; 2eda4 <g_strcmp0@plt+0x19bd8>
   2ec5c:	cmp	r6, #0
   2ec60:	mov	r8, r1
   2ec64:	mov	r9, r2
   2ec68:	mov	sl, r3
   2ec6c:	beq	2ed48 <g_strcmp0@plt+0x19b7c>
   2ec70:	mov	r0, r6
   2ec74:	bl	14bcc <g_quark_from_string@plt>
   2ec78:	mov	r5, r0
   2ec7c:	ldr	r0, [r4, #120]	; 0x78
   2ec80:	cmp	r0, #0
   2ec84:	beq	2ed30 <g_strcmp0@plt+0x19b64>
   2ec88:	cmp	r0, r5
   2ec8c:	beq	2ed10 <g_strcmp0@plt+0x19b44>
   2ec90:	ldr	r0, [r4, #124]	; 0x7c
   2ec94:	cmp	r0, #0
   2ec98:	beq	2ed64 <g_strcmp0@plt+0x19b98>
   2ec9c:	cmp	r0, r5
   2eca0:	beq	2ed10 <g_strcmp0@plt+0x19b44>
   2eca4:	ldr	r0, [r4, #128]	; 0x80
   2eca8:	cmp	r0, #0
   2ecac:	beq	2ed94 <g_strcmp0@plt+0x19bc8>
   2ecb0:	cmp	r0, r5
   2ecb4:	ldr	r4, [r7, #48]	; 0x30
   2ecb8:	beq	2ed74 <g_strcmp0@plt+0x19ba8>
   2ecbc:	mov	r0, sl
   2ecc0:	mov	r2, #0
   2ecc4:	ldr	r1, [pc, #220]	; 2eda8 <g_strcmp0@plt+0x19bdc>
   2ecc8:	bl	14dc4 <g_strconcat@plt>
   2eccc:	mov	r1, r6
   2ecd0:	mov	r2, #0
   2ecd4:	mov	sl, r0
   2ecd8:	bl	14dc4 <g_strconcat@plt>
   2ecdc:	mov	r3, r8
   2ece0:	mov	r1, r9
   2ece4:	mov	r2, r0
   2ece8:	mov	r5, r0
   2ecec:	mov	r0, r4
   2ecf0:	bl	14e78 <g_key_file_set_value@plt>
   2ecf4:	mov	r0, r5
   2ecf8:	bl	14bd8 <g_free@plt>
   2ecfc:	mov	r0, sl
   2ed00:	bl	14bd8 <g_free@plt>
   2ed04:	mov	r0, r7
   2ed08:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2ed0c:	b	2e528 <g_strcmp0@plt+0x1935c>
   2ed10:	ldr	r0, [r7, #48]	; 0x30
   2ed14:	mov	r3, r8
   2ed18:	mov	r2, sl
   2ed1c:	mov	r1, r9
   2ed20:	bl	14e78 <g_key_file_set_value@plt>
   2ed24:	mov	r0, r7
   2ed28:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2ed2c:	b	2e528 <g_strcmp0@plt+0x1935c>
   2ed30:	mov	r0, #0
   2ed34:	bl	14d64 <g_quark_from_static_string@plt>
   2ed38:	cmp	r0, r5
   2ed3c:	str	r0, [r4, #120]	; 0x78
   2ed40:	bne	2ec90 <g_strcmp0@plt+0x19ac4>
   2ed44:	b	2ed10 <g_strcmp0@plt+0x19b44>
   2ed48:	ldr	r5, [r4, #120]	; 0x78
   2ed4c:	cmp	r5, #0
   2ed50:	beq	2ed30 <g_strcmp0@plt+0x19b64>
   2ed54:	ldr	r5, [r4, #124]	; 0x7c
   2ed58:	cmp	r5, #0
   2ed5c:	movne	r5, r6
   2ed60:	bne	2eca4 <g_strcmp0@plt+0x19ad8>
   2ed64:	ldr	r0, [pc, #64]	; 2edac <g_strcmp0@plt+0x19be0>
   2ed68:	bl	14d64 <g_quark_from_static_string@plt>
   2ed6c:	str	r0, [r4, #124]	; 0x7c
   2ed70:	b	2ec9c <g_strcmp0@plt+0x19ad0>
   2ed74:	mov	r0, r4
   2ed78:	mov	r3, r8
   2ed7c:	mov	r2, sl
   2ed80:	mov	r1, r9
   2ed84:	bl	14e78 <g_key_file_set_value@plt>
   2ed88:	mov	r0, r7
   2ed8c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2ed90:	b	2e528 <g_strcmp0@plt+0x1935c>
   2ed94:	ldr	r0, [pc, #20]	; 2edb0 <g_strcmp0@plt+0x19be4>
   2ed98:	bl	14d64 <g_quark_from_static_string@plt>
   2ed9c:	str	r0, [r4, #128]	; 0x80
   2eda0:	b	2ecb0 <g_strcmp0@plt+0x19ae4>
   2eda4:	andeq	ip, r4, r0, lsr #8
   2eda8:	andeq	sl, r3, r8, asr #6
   2edac:	andeq	sl, r3, ip, ror #18
   2edb0:	andeq	r5, r3, ip, lsr #4
   2edb4:	ldr	r3, [r0, #44]	; 0x2c
   2edb8:	ldr	r0, [r3, #4]
   2edbc:	bx	lr
   2edc0:	ldr	r3, [r0, #44]	; 0x2c
   2edc4:	push	{r4, r5, r6, lr}
   2edc8:	mov	r4, r0
   2edcc:	mov	r5, r1
   2edd0:	mov	r0, r1
   2edd4:	ldr	r1, [r3, #4]
   2edd8:	bl	151cc <g_strcmp0@plt>
   2eddc:	cmp	r0, #0
   2ede0:	popeq	{r4, r5, r6, pc}
   2ede4:	mov	r0, r5
   2ede8:	bl	147e8 <g_strdup@plt>
   2edec:	ldr	r3, [r4, #44]	; 0x2c
   2edf0:	mov	r5, r0
   2edf4:	ldr	r0, [r3, #4]
   2edf8:	bl	14bd8 <g_free@plt>
   2edfc:	ldr	r2, [r4, #44]	; 0x2c
   2ee00:	ldr	r3, [pc, #16]	; 2ee18 <g_strcmp0@plt+0x19c4c>
   2ee04:	mov	r0, r4
   2ee08:	str	r5, [r2, #4]
   2ee0c:	ldr	r1, [r3, #40]	; 0x28
   2ee10:	pop	{r4, r5, r6, lr}
   2ee14:	b	14b78 <g_object_notify_by_pspec@plt>
   2ee18:	andeq	ip, r4, r0, lsr #8
   2ee1c:	push	{r4, r5, r6, lr}
   2ee20:	mov	r5, r0
   2ee24:	ldr	r4, [pc, #64]	; 2ee6c <g_strcmp0@plt+0x19ca0>
   2ee28:	mov	r0, r4
   2ee2c:	bl	30a94 <g_strcmp0@plt+0x1b8c8>
   2ee30:	mov	r1, r0
   2ee34:	mov	r6, r0
   2ee38:	mov	r0, r5
   2ee3c:	bl	2e47c <g_strcmp0@plt+0x192b0>
   2ee40:	mov	r0, r6
   2ee44:	bl	14bd8 <g_free@plt>
   2ee48:	mov	r0, r4
   2ee4c:	bl	30a58 <g_strcmp0@plt+0x1b88c>
   2ee50:	mov	r4, r0
   2ee54:	mov	r1, r0
   2ee58:	mov	r0, r5
   2ee5c:	bl	2edc0 <g_strcmp0@plt+0x19bf4>
   2ee60:	mov	r0, r4
   2ee64:	pop	{r4, r5, r6, lr}
   2ee68:	b	14bd8 <g_free@plt>
   2ee6c:	andeq	r9, r3, r0, asr #4
   2ee70:	push	{r4, r5, r6, r7, r8, lr}
   2ee74:	sub	sp, sp, #8
   2ee78:	mov	r8, r1
   2ee7c:	mov	r7, r2
   2ee80:	bl	2a0a4 <g_strcmp0@plt+0x14ed8>
   2ee84:	ldr	r6, [pc, #184]	; 2ef44 <g_strcmp0@plt+0x19d78>
   2ee88:	mov	r5, #0
   2ee8c:	ldr	r2, [pc, #180]	; 2ef48 <g_strcmp0@plt+0x19d7c>
   2ee90:	ldr	r1, [pc, #180]	; 2ef4c <g_strcmp0@plt+0x19d80>
   2ee94:	mov	r4, r0
   2ee98:	mov	r3, r0
   2ee9c:	ldr	r0, [r6]
   2eea0:	str	r5, [sp]
   2eea4:	bl	15190 <g_signal_connect_object@plt>
   2eea8:	mov	r0, r4
   2eeac:	bl	2ee1c <g_strcmp0@plt+0x19c50>
   2eeb0:	mov	r1, r8
   2eeb4:	mov	r0, r4
   2eeb8:	bl	2bf90 <g_strcmp0@plt+0x16dc4>
   2eebc:	mov	r1, r7
   2eec0:	mov	r0, r4
   2eec4:	bl	2bff8 <g_strcmp0@plt+0x16e2c>
   2eec8:	mov	r0, r4
   2eecc:	bl	2d098 <g_strcmp0@plt+0x17ecc>
   2eed0:	str	r5, [sp]
   2eed4:	mov	r3, r4
   2eed8:	ldr	r2, [pc, #112]	; 2ef50 <g_strcmp0@plt+0x19d84>
   2eedc:	ldr	r1, [pc, #112]	; 2ef54 <g_strcmp0@plt+0x19d88>
   2eee0:	ldr	r0, [r6]
   2eee4:	bl	15190 <g_signal_connect_object@plt>
   2eee8:	mov	r0, r4
   2eeec:	bl	2c304 <g_strcmp0@plt+0x17138>
   2eef0:	mov	r3, r5
   2eef4:	ldr	r2, [pc, #92]	; 2ef58 <g_strcmp0@plt+0x19d8c>
   2eef8:	ldr	r1, [pc, #92]	; 2ef5c <g_strcmp0@plt+0x19d90>
   2eefc:	mov	r0, r4
   2ef00:	bl	2a300 <g_strcmp0@plt+0x15134>
   2ef04:	ldr	r1, [pc, #84]	; 2ef60 <g_strcmp0@plt+0x19d94>
   2ef08:	mov	r6, r0
   2ef0c:	bl	151cc <g_strcmp0@plt>
   2ef10:	mov	r5, r0
   2ef14:	mov	r0, r6
   2ef18:	bl	14bd8 <g_free@plt>
   2ef1c:	cmp	r5, #0
   2ef20:	bne	2ef30 <g_strcmp0@plt+0x19d64>
   2ef24:	mov	r0, r4
   2ef28:	add	sp, sp, #8
   2ef2c:	pop	{r4, r5, r6, r7, r8, pc}
   2ef30:	mov	r0, r4
   2ef34:	bl	2b4a8 <g_strcmp0@plt+0x162dc>
   2ef38:	mov	r0, r4
   2ef3c:	add	sp, sp, #8
   2ef40:	pop	{r4, r5, r6, r7, r8, pc}
   2ef44:	andeq	ip, r4, r0, asr #32
   2ef48:	andeq	ip, r2, r8, ror #11
   2ef4c:	andeq	sl, r3, r8, lsl r5
   2ef50:			; <UNDEFINED> instruction: 0x0002b3bc
   2ef54:	andeq	r4, r3, r0, asr #16
   2ef58:	andeq	r9, r3, r0, lsr #30
   2ef5c:	andeq	r4, r3, r8, lsr #16
   2ef60:	andeq	r9, r3, r0, asr #24
   2ef64:	cmp	r1, #1
   2ef68:	push	{r4, r5, r6, r7, lr}
   2ef6c:	mov	r5, r0
   2ef70:	sub	sp, sp, #28
   2ef74:	beq	2efd4 <g_strcmp0@plt+0x19e08>
   2ef78:	cmp	r1, #2
   2ef7c:	mov	r4, r1
   2ef80:	beq	2eff0 <g_strcmp0@plt+0x19e24>
   2ef84:	ldm	r3, {r2, r6}
   2ef88:	ldr	r0, [r2]
   2ef8c:	bl	14680 <g_type_name@plt>
   2ef90:	ldr	r3, [r5]
   2ef94:	mov	r7, r0
   2ef98:	ldr	r0, [r3]
   2ef9c:	bl	14680 <g_type_name@plt>
   2efa0:	ldr	r2, [pc, #100]	; 2f00c <g_strcmp0@plt+0x19e40>
   2efa4:	ldr	r3, [pc, #100]	; 2f010 <g_strcmp0@plt+0x19e44>
   2efa8:	strd	r6, [sp, #12]
   2efac:	stmib	sp, {r2, r4}
   2efb0:	str	r3, [sp]
   2efb4:	ldr	r2, [pc, #88]	; 2f014 <g_strcmp0@plt+0x19e48>
   2efb8:	ldr	r3, [pc, #88]	; 2f018 <g_strcmp0@plt+0x19e4c>
   2efbc:	mov	r1, #16
   2efc0:	str	r0, [sp, #20]
   2efc4:	mov	r0, #0
   2efc8:	bl	14668 <g_log@plt>
   2efcc:	add	sp, sp, #28
   2efd0:	pop	{r4, r5, r6, r7, pc}
   2efd4:	mov	r0, r2
   2efd8:	bl	144a0 <g_value_get_string@plt>
   2efdc:	mov	r1, r0
   2efe0:	mov	r0, r5
   2efe4:	add	sp, sp, #28
   2efe8:	pop	{r4, r5, r6, r7, lr}
   2efec:	b	2e47c <g_strcmp0@plt+0x192b0>
   2eff0:	mov	r0, r2
   2eff4:	bl	144a0 <g_value_get_string@plt>
   2eff8:	mov	r1, r0
   2effc:	mov	r0, r5
   2f000:	add	sp, sp, #28
   2f004:	pop	{r4, r5, r6, r7, lr}
   2f008:	b	2edc0 <g_strcmp0@plt+0x19bf4>
   2f00c:	andeq	r4, r3, ip, lsr pc
   2f010:	andeq	r0, r0, r8, lsl #29
   2f014:	andeq	r4, r3, r4, lsl #30
   2f018:	strdeq	r9, [r3], -ip
   2f01c:	push	{r4, r5, r6, lr}
   2f020:	mcr	15, 0, r0, cr7, cr10, {5}
   2f024:	ldr	r4, [pc, #92]	; 2f088 <g_strcmp0@plt+0x19ebc>
   2f028:	ldr	r5, [r4, #132]	; 0x84
   2f02c:	mcr	15, 0, r0, cr7, cr10, {5}
   2f030:	cmp	r5, #0
   2f034:	beq	2f040 <g_strcmp0@plt+0x19e74>
   2f038:	ldr	r0, [r4, #132]	; 0x84
   2f03c:	pop	{r4, r5, r6, pc}
   2f040:	add	r0, r4, #132	; 0x84
   2f044:	bl	14a28 <g_once_init_enter@plt>
   2f048:	cmp	r0, #0
   2f04c:	beq	2f038 <g_strcmp0@plt+0x19e6c>
   2f050:	bl	2c10c <g_strcmp0@plt+0x16f40>
   2f054:	mov	r3, r5
   2f058:	ldr	r2, [pc, #44]	; 2f08c <g_strcmp0@plt+0x19ec0>
   2f05c:	ldr	r1, [pc, #44]	; 2f090 <g_strcmp0@plt+0x19ec4>
   2f060:	bl	14428 <g_type_register_static@plt>
   2f064:	mov	r1, #8
   2f068:	mov	r5, r0
   2f06c:	bl	14c08 <g_type_add_instance_private@plt>
   2f070:	mov	r1, r5
   2f074:	str	r0, [r4, #28]
   2f078:	add	r0, r4, #132	; 0x84
   2f07c:	bl	14ed8 <g_once_init_leave@plt>
   2f080:	ldr	r0, [r4, #132]	; 0x84
   2f084:	pop	{r4, r5, r6, pc}
   2f088:	andeq	ip, r4, r0, lsr #8
   2f08c:	andeq	r9, r3, r0, ror #22
   2f090:	andeq	sl, r3, r0, lsr r5
   2f094:	push	{r4, r5, r6, lr}
   2f098:	mov	r5, r1
   2f09c:	mov	r4, r0
   2f0a0:	bl	2f01c <g_strcmp0@plt+0x19e50>
   2f0a4:	mov	r2, r5
   2f0a8:	mov	r1, r4
   2f0ac:	pop	{r4, r5, r6, lr}
   2f0b0:	b	2ee70 <g_strcmp0@plt+0x19ca4>
   2f0b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f0b8:	sub	sp, sp, #36	; 0x24
   2f0bc:	ldr	r9, [pc, #872]	; 2f42c <g_strcmp0@plt+0x1a260>
   2f0c0:	mov	r5, #0
   2f0c4:	mov	r4, r0
   2f0c8:	ldr	r3, [r9]
   2f0cc:	str	r5, [sp, #24]
   2f0d0:	str	r3, [sp, #28]
   2f0d4:	bl	14b84 <g_get_user_config_dir@plt>
   2f0d8:	mov	r3, r5
   2f0dc:	ldr	r2, [pc, #844]	; 2f430 <g_strcmp0@plt+0x1a264>
   2f0e0:	ldr	r1, [pc, #844]	; 2f434 <g_strcmp0@plt+0x1a268>
   2f0e4:	bl	146c8 <g_build_filename@plt>
   2f0e8:	mov	r6, r0
   2f0ec:	ldr	r0, [r4, #84]	; 0x54
   2f0f0:	bl	14bd8 <g_free@plt>
   2f0f4:	str	r6, [r4, #84]	; 0x54
   2f0f8:	mov	r0, r6
   2f0fc:	bl	14fa4 <g_file_new_for_path@plt>
   2f100:	ldr	r3, [pc, #808]	; 2f430 <g_strcmp0@plt+0x1a264>
   2f104:	ldr	r2, [pc, #808]	; 2f434 <g_strcmp0@plt+0x1a268>
   2f108:	ldr	r1, [pc, #808]	; 2f438 <g_strcmp0@plt+0x1a26c>
   2f10c:	str	r5, [sp]
   2f110:	mov	r6, r0
   2f114:	ldr	r0, [pc, #800]	; 2f43c <g_strcmp0@plt+0x1a270>
   2f118:	bl	146c8 <g_build_filename@plt>
   2f11c:	mov	r7, r0
   2f120:	ldr	r0, [r4, #80]	; 0x50
   2f124:	bl	14bd8 <g_free@plt>
   2f128:	str	r7, [r4, #80]	; 0x50
   2f12c:	mov	r0, r7
   2f130:	bl	14fa4 <g_file_new_for_path@plt>
   2f134:	mov	r1, r5
   2f138:	mov	r7, r0
   2f13c:	mov	r0, r6
   2f140:	bl	147f4 <g_file_query_exists@plt>
   2f144:	subs	r1, r0, #0
   2f148:	beq	2f264 <g_strcmp0@plt+0x1a098>
   2f14c:	ldr	r0, [r4, #84]	; 0x54
   2f150:	bl	147e8 <g_strdup@plt>
   2f154:	mov	r5, r0
   2f158:	ldr	r0, [r4, #80]	; 0x50
   2f15c:	bl	14bd8 <g_free@plt>
   2f160:	str	r5, [r4, #80]	; 0x50
   2f164:	bl	14b84 <g_get_user_config_dir@plt>
   2f168:	mov	r3, #0
   2f16c:	ldr	r2, [pc, #716]	; 2f440 <g_strcmp0@plt+0x1a274>
   2f170:	ldr	r1, [pc, #700]	; 2f434 <g_strcmp0@plt+0x1a268>
   2f174:	bl	146c8 <g_build_filename@plt>
   2f178:	mov	sl, #0
   2f17c:	mov	r5, r0
   2f180:	ldr	r0, [r4, #104]	; 0x68
   2f184:	bl	14bd8 <g_free@plt>
   2f188:	str	r5, [r4, #104]	; 0x68
   2f18c:	mov	r0, r5
   2f190:	bl	14fa4 <g_file_new_for_path@plt>
   2f194:	ldr	r3, [pc, #676]	; 2f440 <g_strcmp0@plt+0x1a274>
   2f198:	ldr	r2, [pc, #660]	; 2f434 <g_strcmp0@plt+0x1a268>
   2f19c:	ldr	r1, [pc, #660]	; 2f438 <g_strcmp0@plt+0x1a26c>
   2f1a0:	str	sl, [sp]
   2f1a4:	mov	r5, r0
   2f1a8:	ldr	r0, [pc, #652]	; 2f43c <g_strcmp0@plt+0x1a270>
   2f1ac:	bl	146c8 <g_build_filename@plt>
   2f1b0:	mov	r8, r0
   2f1b4:	ldr	r0, [r4, #100]	; 0x64
   2f1b8:	bl	14bd8 <g_free@plt>
   2f1bc:	str	r8, [r4, #100]	; 0x64
   2f1c0:	mov	r0, r8
   2f1c4:	bl	14fa4 <g_file_new_for_path@plt>
   2f1c8:	mov	r1, sl
   2f1cc:	mov	r8, r0
   2f1d0:	mov	r0, r5
   2f1d4:	bl	147f4 <g_file_query_exists@plt>
   2f1d8:	subs	r1, r0, #0
   2f1dc:	bne	2f248 <g_strcmp0@plt+0x1a07c>
   2f1e0:	mov	r0, r8
   2f1e4:	bl	147f4 <g_file_query_exists@plt>
   2f1e8:	subs	fp, r0, #0
   2f1ec:	beq	2f354 <g_strcmp0@plt+0x1a188>
   2f1f0:	cmp	r8, #0
   2f1f4:	beq	2f200 <g_strcmp0@plt+0x1a034>
   2f1f8:	mov	r0, r8
   2f1fc:	bl	14e90 <g_object_unref@plt>
   2f200:	cmp	r5, #0
   2f204:	beq	2f210 <g_strcmp0@plt+0x1a044>
   2f208:	mov	r0, r5
   2f20c:	bl	14e90 <g_object_unref@plt>
   2f210:	cmp	r7, #0
   2f214:	beq	2f220 <g_strcmp0@plt+0x1a054>
   2f218:	mov	r0, r7
   2f21c:	bl	14e90 <g_object_unref@plt>
   2f220:	cmp	r6, #0
   2f224:	beq	2f230 <g_strcmp0@plt+0x1a064>
   2f228:	mov	r0, r6
   2f22c:	bl	14e90 <g_object_unref@plt>
   2f230:	ldr	r2, [sp, #28]
   2f234:	ldr	r3, [r9]
   2f238:	cmp	r2, r3
   2f23c:	bne	2f428 <g_strcmp0@plt+0x1a25c>
   2f240:	add	sp, sp, #36	; 0x24
   2f244:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f248:	ldr	r0, [r4, #104]	; 0x68
   2f24c:	bl	147e8 <g_strdup@plt>
   2f250:	mov	sl, r0
   2f254:	ldr	r0, [r4, #100]	; 0x64
   2f258:	bl	14bd8 <g_free@plt>
   2f25c:	str	sl, [r4, #100]	; 0x64
   2f260:	b	2f1f0 <g_strcmp0@plt+0x1a024>
   2f264:	mov	r0, r7
   2f268:	bl	147f4 <g_file_query_exists@plt>
   2f26c:	subs	r5, r0, #0
   2f270:	bne	2f164 <g_strcmp0@plt+0x19f98>
   2f274:	ldr	r0, [r4, #84]	; 0x54
   2f278:	bl	147e8 <g_strdup@plt>
   2f27c:	add	sl, sp, #24
   2f280:	mov	r8, r0
   2f284:	ldr	r0, [r4, #80]	; 0x50
   2f288:	bl	14bd8 <g_free@plt>
   2f28c:	str	r8, [r4, #80]	; 0x50
   2f290:	mov	r3, sl
   2f294:	mov	r2, r5
   2f298:	mov	r1, r5
   2f29c:	mov	r0, r6
   2f2a0:	bl	150a0 <g_file_create@plt>
   2f2a4:	cmp	r0, #0
   2f2a8:	beq	2f2b0 <g_strcmp0@plt+0x1a0e4>
   2f2ac:	bl	14e90 <g_object_unref@plt>
   2f2b0:	ldr	r5, [sp, #24]
   2f2b4:	cmp	r5, #0
   2f2b8:	beq	2f164 <g_strcmp0@plt+0x19f98>
   2f2bc:	mov	ip, #0
   2f2c0:	mov	r0, ip
   2f2c4:	ldr	r3, [r5, #8]
   2f2c8:	ldr	r2, [pc, #372]	; 2f444 <g_strcmp0@plt+0x1a278>
   2f2cc:	mov	r1, #32
   2f2d0:	str	ip, [sp, #24]
   2f2d4:	bl	14668 <g_log@plt>
   2f2d8:	mov	r0, r5
   2f2dc:	bl	1453c <g_error_free@plt>
   2f2e0:	ldr	r3, [sp, #24]
   2f2e4:	cmp	r3, #0
   2f2e8:	beq	2f164 <g_strcmp0@plt+0x19f98>
   2f2ec:	cmp	r7, #0
   2f2f0:	beq	2f2fc <g_strcmp0@plt+0x1a130>
   2f2f4:	mov	r0, r7
   2f2f8:	bl	14e90 <g_object_unref@plt>
   2f2fc:	cmp	r6, #0
   2f300:	beq	2f30c <g_strcmp0@plt+0x1a140>
   2f304:	mov	r0, r6
   2f308:	bl	14e90 <g_object_unref@plt>
   2f30c:	ldr	r4, [sp, #24]
   2f310:	ldr	r0, [r4]
   2f314:	bl	14c2c <g_quark_to_string@plt>
   2f318:	ldr	r3, [r4, #4]
   2f31c:	ldr	ip, [pc, #292]	; 2f448 <g_strcmp0@plt+0x1a27c>
   2f320:	str	r3, [sp, #12]
   2f324:	str	r0, [sp, #8]
   2f328:	ldr	r0, [r4, #8]
   2f32c:	ldr	r3, [pc, #280]	; 2f44c <g_strcmp0@plt+0x1a280>
   2f330:	str	r0, [sp, #4]
   2f334:	ldr	r2, [pc, #276]	; 2f450 <g_strcmp0@plt+0x1a284>
   2f338:	mov	r1, #8
   2f33c:	str	ip, [sp]
   2f340:	mov	r0, #0
   2f344:	bl	14668 <g_log@plt>
   2f348:	mov	r0, sl
   2f34c:	bl	14dac <g_clear_error@plt>
   2f350:	b	2f230 <g_strcmp0@plt+0x1a064>
   2f354:	ldr	r0, [r4, #104]	; 0x68
   2f358:	bl	147e8 <g_strdup@plt>
   2f35c:	add	sl, sp, #24
   2f360:	str	r0, [sp, #20]
   2f364:	ldr	r0, [r4, #100]	; 0x64
   2f368:	bl	14bd8 <g_free@plt>
   2f36c:	ldr	r3, [sp, #20]
   2f370:	mov	r2, fp
   2f374:	str	r3, [r4, #100]	; 0x64
   2f378:	mov	r1, fp
   2f37c:	mov	r3, sl
   2f380:	mov	r0, r5
   2f384:	bl	150a0 <g_file_create@plt>
   2f388:	cmp	r0, #0
   2f38c:	beq	2f394 <g_strcmp0@plt+0x1a1c8>
   2f390:	bl	14e90 <g_object_unref@plt>
   2f394:	ldr	r4, [sp, #24]
   2f398:	cmp	r4, #0
   2f39c:	beq	2f1f0 <g_strcmp0@plt+0x1a024>
   2f3a0:	mov	ip, #0
   2f3a4:	mov	r0, ip
   2f3a8:	ldr	r3, [r4, #8]
   2f3ac:	ldr	r2, [pc, #160]	; 2f454 <g_strcmp0@plt+0x1a288>
   2f3b0:	mov	r1, #32
   2f3b4:	str	ip, [sp, #24]
   2f3b8:	bl	14668 <g_log@plt>
   2f3bc:	mov	r0, r4
   2f3c0:	bl	1453c <g_error_free@plt>
   2f3c4:	ldr	r3, [sp, #24]
   2f3c8:	cmp	r3, #0
   2f3cc:	beq	2f1f0 <g_strcmp0@plt+0x1a024>
   2f3d0:	cmp	r8, #0
   2f3d4:	beq	2f3e0 <g_strcmp0@plt+0x1a214>
   2f3d8:	mov	r0, r8
   2f3dc:	bl	14e90 <g_object_unref@plt>
   2f3e0:	cmp	r5, #0
   2f3e4:	beq	2f3f0 <g_strcmp0@plt+0x1a224>
   2f3e8:	mov	r0, r5
   2f3ec:	bl	14e90 <g_object_unref@plt>
   2f3f0:	cmp	r7, #0
   2f3f4:	beq	2f400 <g_strcmp0@plt+0x1a234>
   2f3f8:	mov	r0, r7
   2f3fc:	bl	14e90 <g_object_unref@plt>
   2f400:	cmp	r6, #0
   2f404:	beq	2f410 <g_strcmp0@plt+0x1a244>
   2f408:	mov	r0, r6
   2f40c:	bl	14e90 <g_object_unref@plt>
   2f410:	ldr	r4, [sp, #24]
   2f414:	ldr	r0, [r4]
   2f418:	bl	14c2c <g_quark_to_string@plt>
   2f41c:	ldr	r3, [r4, #4]
   2f420:	ldr	ip, [pc, #48]	; 2f458 <g_strcmp0@plt+0x1a28c>
   2f424:	b	2f320 <g_strcmp0@plt+0x1a154>
   2f428:	bl	14b6c <__stack_chk_fail@plt>
   2f42c:	andeq	fp, r4, r8, asr #19
   2f430:	andeq	sl, r3, r0, asr r5
   2f434:	andeq	sl, r3, r0, ror #10
   2f438:	andeq	sl, r3, r8, ror #10
   2f43c:	andeq	sl, r3, ip, ror #10
   2f440:	andeq	sl, r3, r8, lsl #11
   2f444:	andeq	sl, r3, r0, ror r5
   2f448:	andeq	r0, r0, sl, lsl #30
   2f44c:	strdeq	r9, [r3], -ip
   2f450:	andeq	r4, r3, r4, lsr #13
   2f454:	muleq	r3, r4, r5
   2f458:	andeq	r0, r0, pc, asr #30
   2f45c:	push	{r4, r5, r6, lr}
   2f460:	sub	sp, sp, #8
   2f464:	mov	r5, r2
   2f468:	mov	r6, r1
   2f46c:	bl	2ee70 <g_strcmp0@plt+0x19ca4>
   2f470:	mov	r4, r0
   2f474:	bl	2ee1c <g_strcmp0@plt+0x19c50>
   2f478:	mov	r0, r4
   2f47c:	bl	2f0b4 <g_strcmp0@plt+0x19ee8>
   2f480:	mov	r1, r6
   2f484:	mov	r0, r4
   2f488:	bl	2bf90 <g_strcmp0@plt+0x16dc4>
   2f48c:	mov	r1, r5
   2f490:	mov	r0, r4
   2f494:	bl	2bff8 <g_strcmp0@plt+0x16e2c>
   2f498:	mov	r0, r4
   2f49c:	bl	2d098 <g_strcmp0@plt+0x17ecc>
   2f4a0:	ldr	r2, [pc, #116]	; 2f51c <g_strcmp0@plt+0x1a350>
   2f4a4:	mov	r5, #0
   2f4a8:	mov	r3, r4
   2f4ac:	ldr	r0, [r2]
   2f4b0:	ldr	r1, [pc, #104]	; 2f520 <g_strcmp0@plt+0x1a354>
   2f4b4:	ldr	r2, [pc, #104]	; 2f524 <g_strcmp0@plt+0x1a358>
   2f4b8:	str	r5, [sp]
   2f4bc:	bl	15190 <g_signal_connect_object@plt>
   2f4c0:	mov	r0, r4
   2f4c4:	bl	2c304 <g_strcmp0@plt+0x17138>
   2f4c8:	mov	r3, r5
   2f4cc:	ldr	r2, [pc, #84]	; 2f528 <g_strcmp0@plt+0x1a35c>
   2f4d0:	ldr	r1, [pc, #84]	; 2f52c <g_strcmp0@plt+0x1a360>
   2f4d4:	mov	r0, r4
   2f4d8:	bl	2a300 <g_strcmp0@plt+0x15134>
   2f4dc:	ldr	r1, [pc, #76]	; 2f530 <g_strcmp0@plt+0x1a364>
   2f4e0:	mov	r6, r0
   2f4e4:	bl	151cc <g_strcmp0@plt>
   2f4e8:	mov	r5, r0
   2f4ec:	mov	r0, r6
   2f4f0:	bl	14bd8 <g_free@plt>
   2f4f4:	cmp	r5, #0
   2f4f8:	bne	2f508 <g_strcmp0@plt+0x1a33c>
   2f4fc:	mov	r0, r4
   2f500:	add	sp, sp, #8
   2f504:	pop	{r4, r5, r6, pc}
   2f508:	mov	r0, r4
   2f50c:	bl	2b4a8 <g_strcmp0@plt+0x162dc>
   2f510:	mov	r0, r4
   2f514:	add	sp, sp, #8
   2f518:	pop	{r4, r5, r6, pc}
   2f51c:	andeq	ip, r4, r0, asr #32
   2f520:	andeq	r4, r3, r0, asr #16
   2f524:			; <UNDEFINED> instruction: 0x0002b3bc
   2f528:	andeq	r9, r3, r0, lsr #30
   2f52c:	andeq	r4, r3, r8, lsr #16
   2f530:	andeq	r9, r3, r0, asr #24
   2f534:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f538:	sub	sp, sp, #36	; 0x24
   2f53c:	ldr	r5, [pc, #696]	; 2f7fc <g_strcmp0@plt+0x1a630>
   2f540:	ldr	r6, [sp, #72]	; 0x48
   2f544:	mov	r4, #0
   2f548:	ldr	r0, [r5]
   2f54c:	cmp	r6, r4
   2f550:	mov	r9, r1
   2f554:	mov	sl, r2
   2f558:	mov	r7, r3
   2f55c:	str	r0, [sp, #28]
   2f560:	str	r4, [sp, #24]
   2f564:	ldr	fp, [sp, #76]	; 0x4c
   2f568:	beq	2f70c <g_strcmp0@plt+0x1a540>
   2f56c:	mov	r0, r3
   2f570:	mov	r2, r4
   2f574:	ldr	r1, [pc, #644]	; 2f800 <g_strcmp0@plt+0x1a634>
   2f578:	bl	14dc4 <g_strconcat@plt>
   2f57c:	mov	r1, r6
   2f580:	mov	r2, r4
   2f584:	add	r8, sp, #24
   2f588:	str	r0, [sp, #20]
   2f58c:	bl	14dc4 <g_strconcat@plt>
   2f590:	mov	r1, sl
   2f594:	mov	r3, r8
   2f598:	mov	r6, r0
   2f59c:	mov	r2, r6
   2f5a0:	mov	r0, r9
   2f5a4:	bl	14854 <g_key_file_get_value@plt>
   2f5a8:	mov	r9, r0
   2f5ac:	mov	r0, r6
   2f5b0:	bl	14bd8 <g_free@plt>
   2f5b4:	ldr	r0, [sp, #20]
   2f5b8:	bl	14bd8 <g_free@plt>
   2f5bc:	ldr	r6, [sp, #24]
   2f5c0:	cmp	r6, #0
   2f5c4:	beq	2f628 <g_strcmp0@plt+0x1a45c>
   2f5c8:	ldr	r6, [r6]
   2f5cc:	bl	149d4 <g_key_file_error_quark@plt>
   2f5d0:	cmp	r6, r0
   2f5d4:	bne	2f7b0 <g_strcmp0@plt+0x1a5e4>
   2f5d8:	ldr	r4, [sp, #24]
   2f5dc:	mov	r9, #0
   2f5e0:	mov	r0, r9
   2f5e4:	ldr	r3, [r4, #8]
   2f5e8:	ldr	r2, [pc, #532]	; 2f804 <g_strcmp0@plt+0x1a638>
   2f5ec:	mov	r1, #32
   2f5f0:	str	r9, [sp, #24]
   2f5f4:	bl	14668 <g_log@plt>
   2f5f8:	mov	r0, r4
   2f5fc:	bl	1453c <g_error_free@plt>
   2f600:	ldr	r3, [sp, #24]
   2f604:	cmp	r3, r9
   2f608:	bne	2f644 <g_strcmp0@plt+0x1a478>
   2f60c:	mov	r0, fp
   2f610:	bl	147e8 <g_strdup@plt>
   2f614:	mov	r9, #0
   2f618:	mov	r7, r0
   2f61c:	mov	r0, #0
   2f620:	bl	14bd8 <g_free@plt>
   2f624:	b	2f6e8 <g_strcmp0@plt+0x1a51c>
   2f628:	mov	r0, r6
   2f62c:	bl	14bd8 <g_free@plt>
   2f630:	mov	r0, r6
   2f634:	bl	14bd8 <g_free@plt>
   2f638:	ldr	r4, [sp, #24]
   2f63c:	cmp	r4, #0
   2f640:	beq	2f6b8 <g_strcmp0@plt+0x1a4ec>
   2f644:	mov	r0, #0
   2f648:	bl	14bd8 <g_free@plt>
   2f64c:	mov	r0, r9
   2f650:	bl	14bd8 <g_free@plt>
   2f654:	ldr	r4, [sp, #24]
   2f658:	mov	r7, #0
   2f65c:	ldr	r0, [r4]
   2f660:	bl	14c2c <g_quark_to_string@plt>
   2f664:	ldr	r3, [r4, #4]
   2f668:	ldr	ip, [pc, #408]	; 2f808 <g_strcmp0@plt+0x1a63c>
   2f66c:	str	r3, [sp, #12]
   2f670:	ldr	r2, [pc, #404]	; 2f80c <g_strcmp0@plt+0x1a640>
   2f674:	ldr	r3, [pc, #404]	; 2f810 <g_strcmp0@plt+0x1a644>
   2f678:	mov	r1, #8
   2f67c:	str	r0, [sp, #8]
   2f680:	ldr	r0, [r4, #8]
   2f684:	str	ip, [sp]
   2f688:	str	r0, [sp, #4]
   2f68c:	mov	r0, r7
   2f690:	bl	14668 <g_log@plt>
   2f694:	mov	r0, r8
   2f698:	bl	14dac <g_clear_error@plt>
   2f69c:	ldr	r2, [sp, #28]
   2f6a0:	ldr	r3, [r5]
   2f6a4:	mov	r0, r7
   2f6a8:	cmp	r2, r3
   2f6ac:	bne	2f7f8 <g_strcmp0@plt+0x1a62c>
   2f6b0:	add	sp, sp, #36	; 0x24
   2f6b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f6b8:	cmp	r9, #0
   2f6bc:	beq	2f60c <g_strcmp0@plt+0x1a440>
   2f6c0:	ldr	r1, [pc, #332]	; 2f814 <g_strcmp0@plt+0x1a648>
   2f6c4:	mov	r0, r9
   2f6c8:	bl	151cc <g_strcmp0@plt>
   2f6cc:	subs	r6, r0, #0
   2f6d0:	beq	2f6f4 <g_strcmp0@plt+0x1a528>
   2f6d4:	mov	r0, fp
   2f6d8:	bl	147e8 <g_strdup@plt>
   2f6dc:	mov	r7, r0
   2f6e0:	mov	r0, r4
   2f6e4:	bl	14bd8 <g_free@plt>
   2f6e8:	mov	r0, r9
   2f6ec:	bl	14bd8 <g_free@plt>
   2f6f0:	b	2f69c <g_strcmp0@plt+0x1a4d0>
   2f6f4:	mov	r0, r7
   2f6f8:	bl	147e8 <g_strdup@plt>
   2f6fc:	mov	r7, r0
   2f700:	mov	r0, r6
   2f704:	bl	14bd8 <g_free@plt>
   2f708:	b	2f6e8 <g_strcmp0@plt+0x1a51c>
   2f70c:	add	r8, sp, #24
   2f710:	mov	r1, r2
   2f714:	mov	r0, r9
   2f718:	mov	r3, r8
   2f71c:	mov	r2, r7
   2f720:	bl	14854 <g_key_file_get_value@plt>
   2f724:	ldr	r4, [sp, #24]
   2f728:	cmp	r4, #0
   2f72c:	mov	r9, r0
   2f730:	beq	2f79c <g_strcmp0@plt+0x1a5d0>
   2f734:	ldr	r4, [r4]
   2f738:	bl	149d4 <g_key_file_error_quark@plt>
   2f73c:	cmp	r4, r0
   2f740:	beq	2f5d8 <g_strcmp0@plt+0x1a40c>
   2f744:	mov	r0, r6
   2f748:	bl	14bd8 <g_free@plt>
   2f74c:	mov	r0, r6
   2f750:	bl	14bd8 <g_free@plt>
   2f754:	ldr	r4, [sp, #24]
   2f758:	mov	r7, r6
   2f75c:	ldr	r0, [r4]
   2f760:	bl	14c2c <g_quark_to_string@plt>
   2f764:	ldr	r3, [r4, #4]
   2f768:	ldr	ip, [pc, #168]	; 2f818 <g_strcmp0@plt+0x1a64c>
   2f76c:	str	r3, [sp, #12]
   2f770:	ldr	r2, [pc, #164]	; 2f81c <g_strcmp0@plt+0x1a650>
   2f774:	ldr	r3, [pc, #148]	; 2f810 <g_strcmp0@plt+0x1a644>
   2f778:	mov	r1, #8
   2f77c:	str	r0, [sp, #8]
   2f780:	ldr	lr, [r4, #8]
   2f784:	mov	r0, r6
   2f788:	stm	sp, {ip, lr}
   2f78c:	bl	14668 <g_log@plt>
   2f790:	mov	r0, r8
   2f794:	bl	14dac <g_clear_error@plt>
   2f798:	b	2f69c <g_strcmp0@plt+0x1a4d0>
   2f79c:	mov	r0, r4
   2f7a0:	bl	14bd8 <g_free@plt>
   2f7a4:	mov	r0, r4
   2f7a8:	bl	14bd8 <g_free@plt>
   2f7ac:	b	2f638 <g_strcmp0@plt+0x1a46c>
   2f7b0:	mov	r0, r4
   2f7b4:	bl	14bd8 <g_free@plt>
   2f7b8:	mov	r0, r4
   2f7bc:	bl	14bd8 <g_free@plt>
   2f7c0:	ldr	r6, [sp, #24]
   2f7c4:	mov	r7, r4
   2f7c8:	ldr	r0, [r6]
   2f7cc:	bl	14c2c <g_quark_to_string@plt>
   2f7d0:	ldr	r3, [r6, #4]
   2f7d4:	ldr	ip, [pc, #68]	; 2f820 <g_strcmp0@plt+0x1a654>
   2f7d8:	str	r3, [sp, #12]
   2f7dc:	ldr	r2, [pc, #56]	; 2f81c <g_strcmp0@plt+0x1a650>
   2f7e0:	ldr	r3, [pc, #40]	; 2f810 <g_strcmp0@plt+0x1a644>
   2f7e4:	mov	r1, #8
   2f7e8:	str	r0, [sp, #8]
   2f7ec:	mov	r0, r4
   2f7f0:	ldr	lr, [r6, #8]
   2f7f4:	b	2f788 <g_strcmp0@plt+0x1a5bc>
   2f7f8:	bl	14b6c <__stack_chk_fail@plt>
   2f7fc:	andeq	fp, r4, r8, asr #19
   2f800:	andeq	sl, r3, r8, asr #6
   2f804:	andeq	sl, r3, ip, lsr #11
   2f808:	andeq	r1, r0, sl, asr #32
   2f80c:	andeq	r4, r3, r4, lsr #13
   2f810:	strdeq	r9, [r3], -ip
   2f814:	andeq	r4, r3, ip, ror r8
   2f818:	andeq	r1, r0, sp
   2f81c:	andeq	r4, r3, r4, ror r6
   2f820:	andeq	r1, r0, lr, lsr #32
   2f824:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f828:	sub	sp, sp, #52	; 0x34
   2f82c:	mov	r7, r3
   2f830:	ldr	r3, [sp, #96]	; 0x60
   2f834:	mov	r6, r2
   2f838:	ldr	r2, [pc, #532]	; 2fa54 <g_strcmp0@plt+0x1a888>
   2f83c:	str	r3, [sp, #20]
   2f840:	ldr	r3, [sp, #100]	; 0x64
   2f844:	ldr	ip, [r2]
   2f848:	str	r3, [sp, #24]
   2f84c:	ldr	r3, [sp, #104]	; 0x68
   2f850:	str	r1, [sp, #16]
   2f854:	mov	r2, #0
   2f858:	ldr	r1, [pc, #504]	; 2fa58 <g_strcmp0@plt+0x1a88c>
   2f85c:	mov	r4, r0
   2f860:	mov	r0, r6
   2f864:	str	ip, [sp, #44]	; 0x2c
   2f868:	str	r3, [sp, #28]
   2f86c:	ldr	r8, [sp, #88]	; 0x58
   2f870:	ldr	r5, [sp, #92]	; 0x5c
   2f874:	bl	14dc4 <g_strconcat@plt>
   2f878:	mov	r1, r7
   2f87c:	mov	r2, #0
   2f880:	str	r0, [sp, #12]
   2f884:	bl	14dc4 <g_strconcat@plt>
   2f888:	mov	r2, #0
   2f88c:	ldr	r1, [pc, #452]	; 2fa58 <g_strcmp0@plt+0x1a88c>
   2f890:	mov	r9, r0
   2f894:	bl	14dc4 <g_strconcat@plt>
   2f898:	mov	r1, r8
   2f89c:	mov	r2, #0
   2f8a0:	mov	sl, r0
   2f8a4:	bl	14dc4 <g_strconcat@plt>
   2f8a8:	mov	r2, #0
   2f8ac:	ldr	r1, [pc, #420]	; 2fa58 <g_strcmp0@plt+0x1a88c>
   2f8b0:	mov	fp, r0
   2f8b4:	bl	14dc4 <g_strconcat@plt>
   2f8b8:	str	r0, [sp, #8]
   2f8bc:	mov	r0, fp
   2f8c0:	bl	14bd8 <g_free@plt>
   2f8c4:	mov	r0, sl
   2f8c8:	bl	14bd8 <g_free@plt>
   2f8cc:	mov	r0, r9
   2f8d0:	bl	14bd8 <g_free@plt>
   2f8d4:	ldr	r3, [sp, #12]
   2f8d8:	ldr	r9, [pc, #380]	; 2fa5c <g_strcmp0@plt+0x1a890>
   2f8dc:	mov	r0, r3
   2f8e0:	bl	14bd8 <g_free@plt>
   2f8e4:	cmp	r5, #0
   2f8e8:	beq	2fa2c <g_strcmp0@plt+0x1a860>
   2f8ec:	mov	r0, r5
   2f8f0:	bl	14bcc <g_quark_from_string@plt>
   2f8f4:	mov	sl, r0
   2f8f8:	ldr	r0, [r9, #136]	; 0x88
   2f8fc:	cmp	r0, #0
   2f900:	beq	2fa38 <g_strcmp0@plt+0x1a86c>
   2f904:	cmp	r0, sl
   2f908:	beq	2f9fc <g_strcmp0@plt+0x1a830>
   2f90c:	mov	sl, #0
   2f910:	ldr	fp, [sp, #8]
   2f914:	ldr	r0, [r4, #16]
   2f918:	mov	r1, fp
   2f91c:	bl	14f74 <g_hash_table_contains@plt>
   2f920:	subs	r9, r0, #0
   2f924:	bne	2f9c0 <g_strcmp0@plt+0x1a7f4>
   2f928:	add	r2, sp, #40	; 0x28
   2f92c:	add	r3, sp, #36	; 0x24
   2f930:	mov	r1, r6
   2f934:	str	r2, [sp, #4]
   2f938:	str	r3, [sp]
   2f93c:	mov	r2, r7
   2f940:	mov	r3, r8
   2f944:	mov	r0, r4
   2f948:	str	r9, [sp, #36]	; 0x24
   2f94c:	str	r9, [sp, #40]	; 0x28
   2f950:	bl	2a1fc <g_strcmp0@plt+0x15030>
   2f954:	mov	r0, r9
   2f958:	bl	14bd8 <g_free@plt>
   2f95c:	mov	r0, r9
   2f960:	ldr	fp, [sp, #36]	; 0x24
   2f964:	bl	14bd8 <g_free@plt>
   2f968:	stm	sp, {r5, sl}
   2f96c:	mov	r3, r8
   2f970:	mov	r2, r7
   2f974:	mov	r1, r6
   2f978:	mov	r0, r4
   2f97c:	ldr	r9, [sp, #40]	; 0x28
   2f980:	bl	2b26c <g_strcmp0@plt+0x160a0>
   2f984:	ldr	r0, [sp, #8]
   2f988:	bl	14bd8 <g_free@plt>
   2f98c:	mov	r0, r9
   2f990:	bl	14bd8 <g_free@plt>
   2f994:	mov	r0, sl
   2f998:	bl	14bd8 <g_free@plt>
   2f99c:	mov	r0, fp
   2f9a0:	bl	14bd8 <g_free@plt>
   2f9a4:	ldr	r3, [pc, #168]	; 2fa54 <g_strcmp0@plt+0x1a888>
   2f9a8:	ldr	r2, [sp, #44]	; 0x2c
   2f9ac:	ldr	r3, [r3]
   2f9b0:	cmp	r2, r3
   2f9b4:	bne	2fa50 <g_strcmp0@plt+0x1a884>
   2f9b8:	add	sp, sp, #52	; 0x34
   2f9bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f9c0:	mov	r0, #0
   2f9c4:	mov	r3, fp
   2f9c8:	ldr	r2, [pc, #144]	; 2fa60 <g_strcmp0@plt+0x1a894>
   2f9cc:	mov	fp, r0
   2f9d0:	mov	r1, #32
   2f9d4:	bl	14668 <g_log@plt>
   2f9d8:	str	r5, [sp]
   2f9dc:	mov	r3, r8
   2f9e0:	mov	r2, r7
   2f9e4:	mov	r1, r6
   2f9e8:	mov	r0, r4
   2f9ec:	str	fp, [sp, #4]
   2f9f0:	mov	r9, fp
   2f9f4:	bl	2ac1c <g_strcmp0@plt+0x15a50>
   2f9f8:	b	2f984 <g_strcmp0@plt+0x1a7b8>
   2f9fc:	ldr	r3, [sp, #28]
   2fa00:	mov	r9, #0
   2fa04:	str	r3, [sp]
   2fa08:	ldr	r1, [sp, #16]
   2fa0c:	ldrd	r2, [sp, #20]
   2fa10:	str	r9, [sp, #4]
   2fa14:	mov	r0, r4
   2fa18:	bl	2f534 <g_strcmp0@plt+0x1a368>
   2fa1c:	mov	sl, r0
   2fa20:	mov	r0, r9
   2fa24:	bl	14bd8 <g_free@plt>
   2fa28:	b	2f910 <g_strcmp0@plt+0x1a744>
   2fa2c:	ldr	sl, [r9, #136]	; 0x88
   2fa30:	cmp	sl, #0
   2fa34:	bne	2f90c <g_strcmp0@plt+0x1a740>
   2fa38:	ldr	r0, [pc, #36]	; 2fa64 <g_strcmp0@plt+0x1a898>
   2fa3c:	bl	14d64 <g_quark_from_static_string@plt>
   2fa40:	cmp	r0, sl
   2fa44:	str	r0, [r9, #136]	; 0x88
   2fa48:	bne	2f90c <g_strcmp0@plt+0x1a740>
   2fa4c:	b	2f9fc <g_strcmp0@plt+0x1a830>
   2fa50:	bl	14b6c <__stack_chk_fail@plt>
   2fa54:	andeq	fp, r4, r8, asr #19
   2fa58:	strdeq	r7, [r3], -ip
   2fa5c:	andeq	ip, r4, r0, lsr #8
   2fa60:	andeq	sl, r3, r4, asr #11
   2fa64:	andeq	r4, r3, r4, asr r8
   2fa68:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2fa6c:	sub	sp, sp, #24
   2fa70:	ldr	r3, [pc, #520]	; 2fc80 <g_strcmp0@plt+0x1aab4>
   2fa74:	ldr	r5, [pc, #520]	; 2fc84 <g_strcmp0@plt+0x1aab8>
   2fa78:	mov	r4, r0
   2fa7c:	str	r3, [sp, #4]
   2fa80:	ldr	r2, [pc, #512]	; 2fc88 <g_strcmp0@plt+0x1aabc>
   2fa84:	mov	r3, #0
   2fa88:	ldr	r1, [pc, #508]	; 2fc8c <g_strcmp0@plt+0x1aac0>
   2fa8c:	str	r5, [sp]
   2fa90:	bl	2b3c4 <g_strcmp0@plt+0x161f8>
   2fa94:	ldr	r0, [r4, #80]	; 0x50
   2fa98:	bl	308dc <g_strcmp0@plt+0x1b710>
   2fa9c:	mov	r7, r0
   2faa0:	ldr	r0, [r4, #76]	; 0x4c
   2faa4:	cmp	r0, #0
   2faa8:	beq	2fab0 <g_strcmp0@plt+0x1a8e4>
   2faac:	bl	14f50 <g_key_file_unref@plt>
   2fab0:	ldr	r6, [pc, #472]	; 2fc90 <g_strcmp0@plt+0x1aac4>
   2fab4:	ldr	r2, [pc, #472]	; 2fc94 <g_strcmp0@plt+0x1aac8>
   2fab8:	ldr	r3, [pc, #472]	; 2fc98 <g_strcmp0@plt+0x1aacc>
   2fabc:	mov	r8, #0
   2fac0:	str	r7, [r4, #76]	; 0x4c
   2fac4:	mov	r0, r4
   2fac8:	str	r2, [sp, #12]
   2facc:	str	r3, [sp, #8]
   2fad0:	str	r8, [sp, #16]
   2fad4:	str	r5, [sp, #4]
   2fad8:	str	r6, [sp]
   2fadc:	ldr	r3, [pc, #440]	; 2fc9c <g_strcmp0@plt+0x1aad0>
   2fae0:	ldr	r2, [pc, #440]	; 2fca0 <g_strcmp0@plt+0x1aad4>
   2fae4:	ldr	r1, [r4, #48]	; 0x30
   2fae8:	bl	2f824 <g_strcmp0@plt+0x1a658>
   2faec:	ldr	r7, [pc, #432]	; 2fca4 <g_strcmp0@plt+0x1aad8>
   2faf0:	ldr	r3, [pc, #432]	; 2fca8 <g_strcmp0@plt+0x1aadc>
   2faf4:	str	r8, [sp, #16]
   2faf8:	str	r3, [sp, #12]
   2fafc:	str	r6, [sp]
   2fb00:	str	r5, [sp, #4]
   2fb04:	str	r7, [sp, #8]
   2fb08:	ldr	r3, [pc, #412]	; 2fcac <g_strcmp0@plt+0x1aae0>
   2fb0c:	ldr	r2, [pc, #396]	; 2fca0 <g_strcmp0@plt+0x1aad4>
   2fb10:	ldr	r1, [r4, #48]	; 0x30
   2fb14:	mov	r0, r4
   2fb18:	bl	2f824 <g_strcmp0@plt+0x1a658>
   2fb1c:	ldr	r3, [pc, #396]	; 2fcb0 <g_strcmp0@plt+0x1aae4>
   2fb20:	ldr	r9, [pc, #396]	; 2fcb4 <g_strcmp0@plt+0x1aae8>
   2fb24:	str	r8, [sp, #16]
   2fb28:	str	r3, [sp, #12]
   2fb2c:	str	r7, [sp, #8]
   2fb30:	str	r6, [sp]
   2fb34:	str	r5, [sp, #4]
   2fb38:	ldr	r3, [pc, #376]	; 2fcb8 <g_strcmp0@plt+0x1aaec>
   2fb3c:	ldr	r2, [pc, #348]	; 2fca0 <g_strcmp0@plt+0x1aad4>
   2fb40:	ldr	r1, [r4, #48]	; 0x30
   2fb44:	mov	r0, r4
   2fb48:	bl	2f824 <g_strcmp0@plt+0x1a658>
   2fb4c:	str	r8, [sp, #16]
   2fb50:	str	r7, [sp, #8]
   2fb54:	str	r6, [sp]
   2fb58:	str	r5, [sp, #4]
   2fb5c:	str	r9, [sp, #12]
   2fb60:	ldr	r3, [pc, #340]	; 2fcbc <g_strcmp0@plt+0x1aaf0>
   2fb64:	ldr	r2, [pc, #308]	; 2fca0 <g_strcmp0@plt+0x1aad4>
   2fb68:	ldr	r1, [r4, #48]	; 0x30
   2fb6c:	mov	r0, r4
   2fb70:	bl	2f824 <g_strcmp0@plt+0x1a658>
   2fb74:	mov	r3, r6
   2fb78:	ldr	r2, [pc, #316]	; 2fcbc <g_strcmp0@plt+0x1aaf0>
   2fb7c:	ldr	r1, [pc, #284]	; 2fca0 <g_strcmp0@plt+0x1aad4>
   2fb80:	mov	r0, r4
   2fb84:	bl	2a300 <g_strcmp0@plt+0x15134>
   2fb88:	mov	r1, r9
   2fb8c:	mov	sl, r0
   2fb90:	bl	151cc <g_strcmp0@plt>
   2fb94:	mov	r8, r0
   2fb98:	mov	r0, sl
   2fb9c:	bl	14bd8 <g_free@plt>
   2fba0:	cmp	r8, #0
   2fba4:	beq	2fc5c <g_strcmp0@plt+0x1aa90>
   2fba8:	ldr	r2, [pc, #272]	; 2fcc0 <g_strcmp0@plt+0x1aaf4>
   2fbac:	mov	r3, #0
   2fbb0:	stmib	sp, {r5, r7}
   2fbb4:	strd	r2, [sp, #12]
   2fbb8:	str	r6, [sp]
   2fbbc:	ldr	r3, [pc, #256]	; 2fcc4 <g_strcmp0@plt+0x1aaf8>
   2fbc0:	ldr	r2, [pc, #216]	; 2fca0 <g_strcmp0@plt+0x1aad4>
   2fbc4:	ldr	r1, [r4, #48]	; 0x30
   2fbc8:	mov	r0, r4
   2fbcc:	bl	2f824 <g_strcmp0@plt+0x1a658>
   2fbd0:	ldr	r0, [r4, #80]	; 0x50
   2fbd4:	bl	308dc <g_strcmp0@plt+0x1b710>
   2fbd8:	mov	r8, r0
   2fbdc:	ldr	r0, [r4, #96]	; 0x60
   2fbe0:	cmp	r0, #0
   2fbe4:	beq	2fbec <g_strcmp0@plt+0x1aa20>
   2fbe8:	bl	14f50 <g_key_file_unref@plt>
   2fbec:	ldr	r6, [pc, #212]	; 2fcc8 <g_strcmp0@plt+0x1aafc>
   2fbf0:	ldr	r2, [pc, #212]	; 2fccc <g_strcmp0@plt+0x1ab00>
   2fbf4:	ldr	r3, [pc, #212]	; 2fcd0 <g_strcmp0@plt+0x1ab04>
   2fbf8:	mov	r7, #0
   2fbfc:	str	r8, [r4, #96]	; 0x60
   2fc00:	mov	r1, r8
   2fc04:	str	r2, [sp, #12]
   2fc08:	str	r3, [sp]
   2fc0c:	mov	r0, r4
   2fc10:	str	r5, [sp, #4]
   2fc14:	str	r6, [sp, #8]
   2fc18:	str	r7, [sp, #16]
   2fc1c:	ldr	r3, [pc, #176]	; 2fcd4 <g_strcmp0@plt+0x1ab08>
   2fc20:	ldr	r2, [pc, #176]	; 2fcd8 <g_strcmp0@plt+0x1ab0c>
   2fc24:	bl	2f824 <g_strcmp0@plt+0x1a658>
   2fc28:	ldr	r2, [pc, #172]	; 2fcdc <g_strcmp0@plt+0x1ab10>
   2fc2c:	ldr	r3, [pc, #172]	; 2fce0 <g_strcmp0@plt+0x1ab14>
   2fc30:	str	r2, [sp, #12]
   2fc34:	str	r3, [sp]
   2fc38:	str	r7, [sp, #16]
   2fc3c:	stmib	sp, {r5, r6}
   2fc40:	ldr	r3, [pc, #140]	; 2fcd4 <g_strcmp0@plt+0x1ab08>
   2fc44:	ldr	r2, [pc, #140]	; 2fcd8 <g_strcmp0@plt+0x1ab0c>
   2fc48:	ldr	r1, [r4, #96]	; 0x60
   2fc4c:	mov	r0, r4
   2fc50:	bl	2f824 <g_strcmp0@plt+0x1a658>
   2fc54:	add	sp, sp, #24
   2fc58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2fc5c:	ldr	r3, [pc, #128]	; 2fce4 <g_strcmp0@plt+0x1ab18>
   2fc60:	str	r5, [sp]
   2fc64:	str	r3, [sp, #4]
   2fc68:	ldr	r2, [pc, #76]	; 2fcbc <g_strcmp0@plt+0x1aaf0>
   2fc6c:	ldr	r3, [pc, #116]	; 2fce8 <g_strcmp0@plt+0x1ab1c>
   2fc70:	ldr	r1, [pc, #40]	; 2fca0 <g_strcmp0@plt+0x1aad4>
   2fc74:	mov	r0, r4
   2fc78:	bl	2b26c <g_strcmp0@plt+0x160a0>
   2fc7c:	b	2fba8 <g_strcmp0@plt+0x1a9dc>
   2fc80:	strdeq	sl, [r3], -r4
   2fc84:	andeq	r4, r3, r4, asr r8
   2fc88:	andeq	r9, r3, ip, lsr r5
   2fc8c:	andeq	r7, r3, r0, lsl r6
   2fc90:	ldrdeq	r4, [r3], -ip
   2fc94:	andeq	r9, r3, r4, lsl ip
   2fc98:	andeq	r9, r3, r4, lsr #24
   2fc9c:	andeq	r4, r3, r4, ror #15
   2fca0:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   2fca4:	andeq	r9, r3, r8, lsr ip
   2fca8:	andeq	r9, r3, ip, lsr #24
   2fcac:	andeq	r8, r3, r0, asr #3
   2fcb0:	andeq	r9, r3, r0, asr ip
   2fcb4:	andeq	r9, r3, r0, ror #24
   2fcb8:	andeq	r9, r3, r8, asr #24
   2fcbc:	andeq	r4, r3, r4, lsl #17
   2fcc0:	andeq	r5, r3, r4, lsl #11
   2fcc4:	andeq	r8, r3, ip, lsl #16
   2fcc8:	andeq	sl, r3, r4, lsl #12
   2fccc:	strdeq	sl, [r3], -ip
   2fcd0:	ldrdeq	r9, [r3], -ip
   2fcd4:	andeq	r9, r3, r4, asr #27
   2fcd8:	strdeq	r9, [r3], -ip
   2fcdc:	andeq	sl, r3, ip, lsl #12
   2fce0:	ldrdeq	r9, [r3], -r8
   2fce4:	andeq	r4, r3, ip, ror r8
   2fce8:	strdeq	r4, [r3], -ip
   2fcec:	push	{r4, r5, r6, lr}
   2fcf0:	mcr	15, 0, r0, cr7, cr10, {5}
   2fcf4:	ldr	r4, [pc, #76]	; 2fd48 <g_strcmp0@plt+0x1ab7c>
   2fcf8:	ldr	r5, [r4, #140]	; 0x8c
   2fcfc:	mcr	15, 0, r0, cr7, cr10, {5}
   2fd00:	cmp	r5, #0
   2fd04:	beq	2fd10 <g_strcmp0@plt+0x1ab44>
   2fd08:	ldr	r0, [r4, #140]	; 0x8c
   2fd0c:	pop	{r4, r5, r6, pc}
   2fd10:	add	r0, r4, #140	; 0x8c
   2fd14:	bl	14a28 <g_once_init_enter@plt>
   2fd18:	cmp	r0, #0
   2fd1c:	beq	2fd08 <g_strcmp0@plt+0x1ab3c>
   2fd20:	bl	2f01c <g_strcmp0@plt+0x19e50>
   2fd24:	mov	r3, r5
   2fd28:	ldr	r2, [pc, #28]	; 2fd4c <g_strcmp0@plt+0x1ab80>
   2fd2c:	ldr	r1, [pc, #28]	; 2fd50 <g_strcmp0@plt+0x1ab84>
   2fd30:	bl	14428 <g_type_register_static@plt>
   2fd34:	mov	r1, r0
   2fd38:	add	r0, r4, #140	; 0x8c
   2fd3c:	bl	14ed8 <g_once_init_leave@plt>
   2fd40:	ldr	r0, [r4, #140]	; 0x8c
   2fd44:	pop	{r4, r5, r6, pc}
   2fd48:	andeq	ip, r4, r0, lsr #8
   2fd4c:	andeq	r9, r3, r4, lsl #23
   2fd50:	andeq	sl, r3, r8, lsl r6
   2fd54:	push	{r4, r5, r6, lr}
   2fd58:	mov	r5, r1
   2fd5c:	mov	r4, r0
   2fd60:	bl	2fcec <g_strcmp0@plt+0x1ab20>
   2fd64:	mov	r2, r5
   2fd68:	mov	r1, r4
   2fd6c:	pop	{r4, r5, r6, lr}
   2fd70:	b	2f45c <g_strcmp0@plt+0x1a290>
   2fd74:	bx	lr
   2fd78:	push	{r4, r5, r6, r7, r8, lr}
   2fd7c:	mov	r6, r1
   2fd80:	mov	r4, r0
   2fd84:	mov	r1, #4
   2fd88:	add	r0, r6, #1
   2fd8c:	bl	14f14 <g_malloc0_n@plt>
   2fd90:	cmp	r6, #0
   2fd94:	mov	r7, r0
   2fd98:	ble	2fdbc <g_strcmp0@plt+0x1abf0>
   2fd9c:	sub	r4, r4, #4
   2fda0:	add	r6, r4, r6, lsl #2
   2fda4:	sub	r5, r0, #4
   2fda8:	ldr	r0, [r4, #4]!
   2fdac:	bl	147e8 <g_strdup@plt>
   2fdb0:	cmp	r4, r6
   2fdb4:	str	r0, [r5, #4]!
   2fdb8:	bne	2fda8 <g_strcmp0@plt+0x1abdc>
   2fdbc:	mov	r0, r7
   2fdc0:	pop	{r4, r5, r6, r7, r8, pc}
   2fdc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fdc8:	mov	r4, r3
   2fdcc:	ldr	r3, [r0]
   2fdd0:	sub	sp, sp, #20
   2fdd4:	ldr	r2, [r4, #8]
   2fdd8:	lsr	r3, r3, #29
   2fddc:	ldr	r1, [r0, #8]
   2fde0:	and	r3, r3, #1
   2fde4:	ldr	r6, [sp, #60]	; 0x3c
   2fde8:	cmp	r3, #0
   2fdec:	moveq	r7, r2
   2fdf0:	movne	r7, r1
   2fdf4:	moveq	r5, r1
   2fdf8:	movne	r5, r2
   2fdfc:	cmp	r6, #0
   2fe00:	ldreq	r6, [r0, #16]
   2fe04:	add	r0, r4, #24
   2fe08:	bl	144a0 <g_value_get_string@plt>
   2fe0c:	mov	r8, r0
   2fe10:	add	r0, r4, #48	; 0x30
   2fe14:	bl	144a0 <g_value_get_string@plt>
   2fe18:	mov	r9, r0
   2fe1c:	add	r0, r4, #72	; 0x48
   2fe20:	bl	144a0 <g_value_get_string@plt>
   2fe24:	mov	sl, r0
   2fe28:	add	r0, r4, #96	; 0x60
   2fe2c:	bl	144a0 <g_value_get_string@plt>
   2fe30:	mov	fp, r0
   2fe34:	add	r0, r4, #120	; 0x78
   2fe38:	bl	144a0 <g_value_get_string@plt>
   2fe3c:	str	fp, [sp]
   2fe40:	mov	r3, sl
   2fe44:	mov	r2, r9
   2fe48:	mov	r1, r8
   2fe4c:	stmib	sp, {r0, r5}
   2fe50:	mov	r0, r7
   2fe54:	blx	r6
   2fe58:	add	sp, sp, #20
   2fe5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fe60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2fe64:	mov	r4, r3
   2fe68:	ldr	r3, [r0]
   2fe6c:	ldr	r2, [r0, #8]
   2fe70:	ldr	r5, [r4, #8]
   2fe74:	lsr	r3, r3, #29
   2fe78:	and	r3, r3, #1
   2fe7c:	ldr	r6, [sp, #36]	; 0x24
   2fe80:	cmp	r3, #0
   2fe84:	movne	r7, r2
   2fe88:	moveq	r7, r5
   2fe8c:	moveq	r5, r2
   2fe90:	cmp	r6, #0
   2fe94:	ldreq	r6, [r0, #16]
   2fe98:	add	r0, r4, #24
   2fe9c:	bl	144a0 <g_value_get_string@plt>
   2fea0:	mov	r8, r0
   2fea4:	add	r0, r4, #48	; 0x30
   2fea8:	bl	144a0 <g_value_get_string@plt>
   2feac:	mov	r9, r0
   2feb0:	add	r0, r4, #72	; 0x48
   2feb4:	bl	144a0 <g_value_get_string@plt>
   2feb8:	mov	sl, r0
   2febc:	add	r0, r4, #96	; 0x60
   2fec0:	bl	144a0 <g_value_get_string@plt>
   2fec4:	mov	r3, sl
   2fec8:	mov	r2, r9
   2fecc:	mov	r1, r8
   2fed0:	str	r5, [sp, #36]	; 0x24
   2fed4:	mov	ip, r6
   2fed8:	str	r0, [sp, #32]
   2fedc:	mov	r0, r7
   2fee0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2fee4:	bx	ip
   2fee8:	ldr	r3, [r0]
   2feec:	cmp	r3, #0
   2fef0:	beq	2ff10 <g_strcmp0@plt+0x1ad44>
   2fef4:	mov	r3, r0
   2fef8:	mov	r0, #0
   2fefc:	ldr	r2, [r3, #4]!
   2ff00:	add	r0, r0, #1
   2ff04:	cmp	r2, #0
   2ff08:	bne	2fefc <g_strcmp0@plt+0x1ad30>
   2ff0c:	bx	lr
   2ff10:	mov	r0, r3
   2ff14:	bx	lr
   2ff18:	push	{r4, r5, r6, lr}
   2ff1c:	subs	r6, r0, #0
   2ff20:	beq	2ff50 <g_strcmp0@plt+0x1ad84>
   2ff24:	cmp	r1, #0
   2ff28:	ble	2ff50 <g_strcmp0@plt+0x1ad84>
   2ff2c:	add	r1, r6, r1, lsl #2
   2ff30:	sub	r5, r1, #4
   2ff34:	sub	r4, r6, #4
   2ff38:	ldr	r3, [r4, #4]!
   2ff3c:	subs	r0, r3, #0
   2ff40:	beq	2ff48 <g_strcmp0@plt+0x1ad7c>
   2ff44:	bl	14bd8 <g_free@plt>
   2ff48:	cmp	r4, r5
   2ff4c:	bne	2ff38 <g_strcmp0@plt+0x1ad6c>
   2ff50:	mov	r0, r6
   2ff54:	pop	{r4, r5, r6, lr}
   2ff58:	b	14bd8 <g_free@plt>
   2ff5c:	push	{r4, r5, r6, r7, r8, lr}
   2ff60:	mov	r5, r0
   2ff64:	ldr	r0, [r0]
   2ff68:	mov	r4, r1
   2ff6c:	bl	147e8 <g_strdup@plt>
   2ff70:	mov	r7, r0
   2ff74:	ldr	r0, [r4]
   2ff78:	bl	14bd8 <g_free@plt>
   2ff7c:	ldr	r6, [r5, #4]
   2ff80:	str	r7, [r4]
   2ff84:	cmp	r6, #0
   2ff88:	ldr	r7, [r5, #8]
   2ff8c:	beq	2ffa0 <g_strcmp0@plt+0x1add4>
   2ff90:	mov	r0, r6
   2ff94:	mov	r1, r7
   2ff98:	bl	2fd78 <g_strcmp0@plt+0x1abac>
   2ff9c:	mov	r6, r0
   2ffa0:	ldrd	r0, [r4, #4]
   2ffa4:	bl	2ff18 <g_strcmp0@plt+0x1ad4c>
   2ffa8:	ldr	r3, [r5, #12]
   2ffac:	ldr	r0, [r5, #16]
   2ffb0:	str	r3, [r4, #12]
   2ffb4:	strd	r6, [r4, #4]
   2ffb8:	bl	147e8 <g_strdup@plt>
   2ffbc:	mov	r5, r0
   2ffc0:	ldr	r0, [r4, #16]
   2ffc4:	bl	14bd8 <g_free@plt>
   2ffc8:	str	r5, [r4, #16]
   2ffcc:	pop	{r4, r5, r6, r7, r8, pc}
   2ffd0:	push	{r4, r5, r6, lr}
   2ffd4:	mov	r5, r0
   2ffd8:	mov	r0, #20
   2ffdc:	bl	14fbc <g_malloc0@plt>
   2ffe0:	mov	r4, r0
   2ffe4:	mov	r1, r0
   2ffe8:	mov	r0, r5
   2ffec:	bl	2ff5c <g_strcmp0@plt+0x1ad90>
   2fff0:	mov	r0, r4
   2fff4:	pop	{r4, r5, r6, pc}
   2fff8:	push	{r4, r5, r6, lr}
   2fffc:	mov	r4, r0
   30000:	mov	r5, #0
   30004:	ldr	r0, [r0]
   30008:	bl	14bd8 <g_free@plt>
   3000c:	ldrd	r0, [r4, #4]
   30010:	str	r5, [r4]
   30014:	bl	2ff18 <g_strcmp0@plt+0x1ad4c>
   30018:	str	r5, [r4, #4]
   3001c:	ldr	r0, [r4, #16]
   30020:	bl	14bd8 <g_free@plt>
   30024:	str	r5, [r4, #16]
   30028:	pop	{r4, r5, r6, pc}
   3002c:	push	{r4, lr}
   30030:	mov	r4, r0
   30034:	bl	2fff8 <g_strcmp0@plt+0x1ae2c>
   30038:	mov	r0, r4
   3003c:	pop	{r4, lr}
   30040:	b	14bd8 <g_free@plt>
   30044:	push	{r4, lr}
   30048:	mcr	15, 0, r0, cr7, cr10, {5}
   3004c:	ldr	r4, [pc, #72]	; 3009c <g_strcmp0@plt+0x1aed0>
   30050:	ldr	r3, [r4]
   30054:	mcr	15, 0, r0, cr7, cr10, {5}
   30058:	cmp	r3, #0
   3005c:	beq	30068 <g_strcmp0@plt+0x1ae9c>
   30060:	ldr	r0, [r4]
   30064:	pop	{r4, pc}
   30068:	mov	r0, r4
   3006c:	bl	14a28 <g_once_init_enter@plt>
   30070:	cmp	r0, #0
   30074:	beq	30060 <g_strcmp0@plt+0x1ae94>
   30078:	ldr	r2, [pc, #32]	; 300a0 <g_strcmp0@plt+0x1aed4>
   3007c:	ldr	r1, [pc, #32]	; 300a4 <g_strcmp0@plt+0x1aed8>
   30080:	ldr	r0, [pc, #32]	; 300a8 <g_strcmp0@plt+0x1aedc>
   30084:	bl	14974 <g_boxed_type_register_static@plt>
   30088:	mov	r1, r0
   3008c:	mov	r0, r4
   30090:	bl	14ed8 <g_once_init_leave@plt>
   30094:	ldr	r0, [r4]
   30098:	pop	{r4, pc}
   3009c:			; <UNDEFINED> instruction: 0x0004c4b0
   300a0:	andeq	r0, r3, ip, lsr #32
   300a4:	ldrdeq	pc, [r2], -r0
   300a8:	andeq	sl, r3, ip, asr r6
   300ac:	ldr	r3, [pc, #2008]	; 3088c <g_strcmp0@plt+0x1b6c0>
   300b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   300b4:	sub	sp, sp, #76	; 0x4c
   300b8:	ldr	r3, [r3]
   300bc:	mov	r4, #0
   300c0:	str	r0, [sp, #24]
   300c4:	str	r4, [sp, #56]	; 0x38
   300c8:	str	r3, [sp, #68]	; 0x44
   300cc:	str	r4, [sp, #60]	; 0x3c
   300d0:	bl	14908 <g_get_system_config_dirs@plt>
   300d4:	subs	fp, r0, #0
   300d8:	beq	306a8 <g_strcmp0@plt+0x1b4dc>
   300dc:	bl	2fee8 <g_strcmp0@plt+0x1ad1c>
   300e0:	mov	r1, r0
   300e4:	mov	r0, fp
   300e8:	bl	2fd78 <g_strcmp0@plt+0x1abac>
   300ec:	str	r0, [sp, #20]
   300f0:	mov	r0, fp
   300f4:	bl	2fee8 <g_strcmp0@plt+0x1ad1c>
   300f8:	subs	r3, r0, #0
   300fc:	str	r3, [sp, #28]
   30100:	ble	30804 <g_strcmp0@plt+0x1b638>
   30104:	ldr	r9, [pc, #1924]	; 30890 <g_strcmp0@plt+0x1b6c4>
   30108:	ldr	r8, [pc, #1924]	; 30894 <g_strcmp0@plt+0x1b6c8>
   3010c:	ldr	r7, [pc, #1924]	; 30898 <g_strcmp0@plt+0x1b6cc>
   30110:	mov	r5, r4
   30114:	b	30134 <g_strcmp0@plt+0x1af68>
   30118:	mov	r0, r6
   3011c:	bl	14bd8 <g_free@plt>
   30120:	ldr	r3, [sp, #28]
   30124:	add	r4, r4, #1
   30128:	cmp	r4, r3
   3012c:	mov	r5, fp
   30130:	beq	306b8 <g_strcmp0@plt+0x1b4ec>
   30134:	ldr	r3, [sp, #20]
   30138:	ldr	r0, [r3, r4, lsl #2]
   3013c:	bl	147e8 <g_strdup@plt>
   30140:	mov	r3, #0
   30144:	ldr	r2, [r9, #4]
   30148:	mov	r1, r8
   3014c:	mov	r6, r0
   30150:	bl	146c8 <g_build_filename@plt>
   30154:	mov	fp, r0
   30158:	mov	r0, r5
   3015c:	bl	14bd8 <g_free@plt>
   30160:	mov	r3, fp
   30164:	mov	r2, r7
   30168:	mov	r1, #32
   3016c:	mov	r0, #0
   30170:	bl	14668 <g_log@plt>
   30174:	mov	r0, fp
   30178:	mov	r1, #16
   3017c:	bl	14c20 <g_file_test@plt>
   30180:	subs	sl, r0, #0
   30184:	beq	30118 <g_strcmp0@plt+0x1af4c>
   30188:	mov	r2, #0
   3018c:	ldr	r1, [sp, #24]
   30190:	mov	r0, fp
   30194:	bl	146c8 <g_build_filename@plt>
   30198:	str	r0, [sp, #48]	; 0x30
   3019c:	mov	r0, #0
   301a0:	bl	14bd8 <g_free@plt>
   301a4:	mov	r0, r6
   301a8:	bl	14bd8 <g_free@plt>
   301ac:	ldr	r4, [sp, #48]	; 0x30
   301b0:	ldr	r2, [pc, #1764]	; 3089c <g_strcmp0@plt+0x1b6d0>
   301b4:	mov	r3, r4
   301b8:	mov	r1, #32
   301bc:	mov	r0, #0
   301c0:	bl	14668 <g_log@plt>
   301c4:	bl	14df4 <g_key_file_new@plt>
   301c8:	add	r3, sp, #60	; 0x3c
   301cc:	mov	r2, #0
   301d0:	mov	r1, r4
   301d4:	str	r0, [sp, #16]
   301d8:	bl	1459c <g_key_file_load_from_file@plt>
   301dc:	ldr	r3, [sp, #60]	; 0x3c
   301e0:	cmp	r3, #0
   301e4:	beq	30268 <g_strcmp0@plt+0x1b09c>
   301e8:	ldr	r4, [r3]
   301ec:	bl	149d4 <g_key_file_error_quark@plt>
   301f0:	cmp	r4, r0
   301f4:	beq	307dc <g_strcmp0@plt+0x1b610>
   301f8:	ldr	r3, [sp, #60]	; 0x3c
   301fc:	ldr	r4, [r3]
   30200:	bl	15040 <g_file_error_quark@plt>
   30204:	cmp	r4, r0
   30208:	beq	306c0 <g_strcmp0@plt+0x1b4f4>
   3020c:	ldr	r3, [sp, #16]
   30210:	cmp	r3, #0
   30214:	beq	30220 <g_strcmp0@plt+0x1b054>
   30218:	mov	r0, r3
   3021c:	bl	14f50 <g_key_file_unref@plt>
   30220:	ldr	r0, [sp, #48]	; 0x30
   30224:	bl	14bd8 <g_free@plt>
   30228:	mov	r0, fp
   3022c:	bl	14bd8 <g_free@plt>
   30230:	ldr	r1, [sp, #28]
   30234:	ldr	r0, [sp, #20]
   30238:	bl	2ff18 <g_strcmp0@plt+0x1ad4c>
   3023c:	ldr	r4, [sp, #60]	; 0x3c
   30240:	mov	r3, #0
   30244:	str	r3, [sp, #16]
   30248:	ldr	r0, [r4]
   3024c:	bl	14c2c <g_quark_to_string@plt>
   30250:	ldr	r3, [r4, #4]
   30254:	ldr	ip, [pc, #1604]	; 308a0 <g_strcmp0@plt+0x1b6d4>
   30258:	str	r3, [sp, #12]
   3025c:	ldr	r2, [pc, #1600]	; 308a4 <g_strcmp0@plt+0x1b6d8>
   30260:	ldr	r3, [pc, #1600]	; 308a8 <g_strcmp0@plt+0x1b6dc>
   30264:	b	3048c <g_strcmp0@plt+0x1b2c0>
   30268:	bl	14b84 <g_get_user_config_dir@plt>
   3026c:	ldr	r2, [pc, #1564]	; 30890 <g_strcmp0@plt+0x1b6c4>
   30270:	mov	r4, #0
   30274:	ldr	r3, [sp, #24]
   30278:	ldr	r2, [r2, #4]
   3027c:	ldr	r1, [pc, #1552]	; 30894 <g_strcmp0@plt+0x1b6c8>
   30280:	str	r4, [sp]
   30284:	bl	146c8 <g_build_filename@plt>
   30288:	mov	r5, r0
   3028c:	str	r0, [sp, #52]	; 0x34
   30290:	bl	14df4 <g_key_file_new@plt>
   30294:	add	r3, sp, #60	; 0x3c
   30298:	mov	r2, r4
   3029c:	mov	r1, r5
   302a0:	mov	sl, r0
   302a4:	bl	1459c <g_key_file_load_from_file@plt>
   302a8:	ldr	r3, [sp, #60]	; 0x3c
   302ac:	cmp	r3, r4
   302b0:	beq	3034c <g_strcmp0@plt+0x1b180>
   302b4:	ldr	r5, [r3]
   302b8:	bl	149d4 <g_key_file_error_quark@plt>
   302bc:	cmp	r5, r0
   302c0:	beq	307f4 <g_strcmp0@plt+0x1b628>
   302c4:	ldr	r3, [sp, #60]	; 0x3c
   302c8:	ldr	r5, [r3]
   302cc:	bl	15040 <g_file_error_quark@plt>
   302d0:	cmp	r5, r0
   302d4:	beq	30744 <g_strcmp0@plt+0x1b578>
   302d8:	cmp	sl, #0
   302dc:	beq	302e8 <g_strcmp0@plt+0x1b11c>
   302e0:	mov	r0, sl
   302e4:	bl	14f50 <g_key_file_unref@plt>
   302e8:	ldr	r0, [sp, #52]	; 0x34
   302ec:	bl	14bd8 <g_free@plt>
   302f0:	ldr	r3, [sp, #16]
   302f4:	cmp	r3, #0
   302f8:	beq	30304 <g_strcmp0@plt+0x1b138>
   302fc:	mov	r0, r3
   30300:	bl	14f50 <g_key_file_unref@plt>
   30304:	ldr	r0, [sp, #48]	; 0x30
   30308:	bl	14bd8 <g_free@plt>
   3030c:	mov	r0, fp
   30310:	bl	14bd8 <g_free@plt>
   30314:	ldr	r1, [sp, #28]
   30318:	ldr	r0, [sp, #20]
   3031c:	bl	2ff18 <g_strcmp0@plt+0x1ad4c>
   30320:	ldr	r4, [sp, #60]	; 0x3c
   30324:	mov	r3, #0
   30328:	str	r3, [sp, #16]
   3032c:	ldr	r0, [r4]
   30330:	bl	14c2c <g_quark_to_string@plt>
   30334:	ldr	r3, [r4, #4]
   30338:	ldr	ip, [pc, #1388]	; 308ac <g_strcmp0@plt+0x1b6e0>
   3033c:	str	r3, [sp, #12]
   30340:	ldr	r2, [pc, #1372]	; 308a4 <g_strcmp0@plt+0x1b6d8>
   30344:	ldr	r3, [pc, #1372]	; 308a8 <g_strcmp0@plt+0x1b6dc>
   30348:	b	3048c <g_strcmp0@plt+0x1b2c0>
   3034c:	add	r1, sp, #56	; 0x38
   30350:	mov	r0, sl
   30354:	bl	149ec <g_key_file_get_groups@plt>
   30358:	ldr	r3, [sp, #56]	; 0x38
   3035c:	cmp	r3, #0
   30360:	str	r3, [sp, #36]	; 0x24
   30364:	str	r0, [sp, #40]	; 0x28
   30368:	ble	304f8 <g_strcmp0@plt+0x1b32c>
   3036c:	mov	r3, #0
   30370:	str	r3, [sp, #32]
   30374:	ldr	r3, [sp, #40]	; 0x28
   30378:	str	fp, [sp, #44]	; 0x2c
   3037c:	sub	r3, r3, #4
   30380:	str	r3, [sp, #24]
   30384:	ldr	r3, [sp, #24]
   30388:	ldr	r0, [r3, #4]!
   3038c:	str	r3, [sp, #24]
   30390:	bl	147e8 <g_strdup@plt>
   30394:	mov	ip, #0
   30398:	add	r3, sp, #60	; 0x3c
   3039c:	add	r2, sp, #64	; 0x40
   303a0:	str	ip, [sp, #64]	; 0x40
   303a4:	mov	r1, r0
   303a8:	mov	r7, r0
   303ac:	mov	r0, sl
   303b0:	bl	14d4c <g_key_file_get_keys@plt>
   303b4:	ldr	r5, [sp, #60]	; 0x3c
   303b8:	cmp	r5, #0
   303bc:	mov	fp, r0
   303c0:	beq	3053c <g_strcmp0@plt+0x1b370>
   303c4:	ldr	r4, [r5]
   303c8:	bl	149d4 <g_key_file_error_quark@plt>
   303cc:	cmp	r4, r0
   303d0:	bne	30810 <g_strcmp0@plt+0x1b644>
   303d4:	ldr	r4, [sp, #60]	; 0x3c
   303d8:	mov	r0, #0
   303dc:	ldr	r2, [pc, #1228]	; 308b0 <g_strcmp0@plt+0x1b6e4>
   303e0:	mov	r1, #16
   303e4:	ldr	r3, [r4, #8]
   303e8:	str	r0, [sp, #60]	; 0x3c
   303ec:	bl	14668 <g_log@plt>
   303f0:	mov	r0, r4
   303f4:	bl	1453c <g_error_free@plt>
   303f8:	ldr	r3, [sp, #60]	; 0x3c
   303fc:	cmp	r3, #0
   30400:	beq	304d0 <g_strcmp0@plt+0x1b304>
   30404:	mov	r0, r7
   30408:	ldr	fp, [sp, #44]	; 0x2c
   3040c:	bl	14bd8 <g_free@plt>
   30410:	ldr	r1, [sp, #36]	; 0x24
   30414:	ldr	r0, [sp, #40]	; 0x28
   30418:	bl	2ff18 <g_strcmp0@plt+0x1ad4c>
   3041c:	cmp	sl, #0
   30420:	beq	3042c <g_strcmp0@plt+0x1b260>
   30424:	mov	r0, sl
   30428:	bl	14f50 <g_key_file_unref@plt>
   3042c:	ldr	r0, [sp, #52]	; 0x34
   30430:	bl	14bd8 <g_free@plt>
   30434:	ldr	r3, [sp, #16]
   30438:	cmp	r3, #0
   3043c:	beq	30448 <g_strcmp0@plt+0x1b27c>
   30440:	mov	r0, r3
   30444:	bl	14f50 <g_key_file_unref@plt>
   30448:	ldr	r0, [sp, #48]	; 0x30
   3044c:	bl	14bd8 <g_free@plt>
   30450:	mov	r0, fp
   30454:	bl	14bd8 <g_free@plt>
   30458:	ldr	r1, [sp, #28]
   3045c:	ldr	r0, [sp, #20]
   30460:	bl	2ff18 <g_strcmp0@plt+0x1ad4c>
   30464:	ldr	r4, [sp, #60]	; 0x3c
   30468:	mov	r3, #0
   3046c:	str	r3, [sp, #16]
   30470:	ldr	r0, [r4]
   30474:	bl	14c2c <g_quark_to_string@plt>
   30478:	ldr	r3, [r4, #4]
   3047c:	ldr	ip, [pc, #1072]	; 308b4 <g_strcmp0@plt+0x1b6e8>
   30480:	str	r3, [sp, #12]
   30484:	ldr	r2, [pc, #1068]	; 308b8 <g_strcmp0@plt+0x1b6ec>
   30488:	ldr	r3, [pc, #1048]	; 308a8 <g_strcmp0@plt+0x1b6dc>
   3048c:	str	r0, [sp, #8]
   30490:	ldr	r0, [r4, #8]
   30494:	mov	r1, #8
   30498:	str	r0, [sp, #4]
   3049c:	str	ip, [sp]
   304a0:	mov	r0, #0
   304a4:	bl	14668 <g_log@plt>
   304a8:	add	r0, sp, #60	; 0x3c
   304ac:	bl	14dac <g_clear_error@plt>
   304b0:	ldr	r3, [pc, #980]	; 3088c <g_strcmp0@plt+0x1b6c0>
   304b4:	ldr	r2, [sp, #68]	; 0x44
   304b8:	ldr	r0, [sp, #16]
   304bc:	ldr	r3, [r3]
   304c0:	cmp	r2, r3
   304c4:	bne	30888 <g_strcmp0@plt+0x1b6bc>
   304c8:	add	sp, sp, #76	; 0x4c
   304cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   304d0:	ldr	r3, [sp, #32]
   304d4:	mov	r0, r7
   304d8:	add	r3, r3, #1
   304dc:	mov	r4, r3
   304e0:	str	r3, [sp, #32]
   304e4:	bl	14bd8 <g_free@plt>
   304e8:	ldr	r2, [sp, #36]	; 0x24
   304ec:	cmp	r2, r4
   304f0:	bne	30384 <g_strcmp0@plt+0x1b1b8>
   304f4:	ldr	fp, [sp, #44]	; 0x2c
   304f8:	ldr	r1, [sp, #36]	; 0x24
   304fc:	ldr	r0, [sp, #40]	; 0x28
   30500:	bl	2ff18 <g_strcmp0@plt+0x1ad4c>
   30504:	cmp	sl, #0
   30508:	beq	30514 <g_strcmp0@plt+0x1b348>
   3050c:	mov	r0, sl
   30510:	bl	14f50 <g_key_file_unref@plt>
   30514:	ldr	r0, [sp, #52]	; 0x34
   30518:	bl	14bd8 <g_free@plt>
   3051c:	ldr	r0, [sp, #48]	; 0x30
   30520:	bl	14bd8 <g_free@plt>
   30524:	mov	r0, fp
   30528:	bl	14bd8 <g_free@plt>
   3052c:	ldr	r1, [sp, #28]
   30530:	ldr	r0, [sp, #20]
   30534:	bl	2ff18 <g_strcmp0@plt+0x1ad4c>
   30538:	b	304b0 <g_strcmp0@plt+0x1b2e4>
   3053c:	ldr	r9, [sp, #64]	; 0x40
   30540:	cmp	r9, #0
   30544:	subgt	r8, r0, #4
   30548:	ble	30698 <g_strcmp0@plt+0x1b4cc>
   3054c:	ldr	r0, [r8, #4]!
   30550:	bl	147e8 <g_strdup@plt>
   30554:	add	r3, sp, #60	; 0x3c
   30558:	mov	r1, r7
   3055c:	mov	r2, r0
   30560:	mov	r4, r0
   30564:	mov	r0, sl
   30568:	bl	14854 <g_key_file_get_value@plt>
   3056c:	ldr	r3, [sp, #60]	; 0x3c
   30570:	cmp	r3, #0
   30574:	mov	r6, r0
   30578:	beq	30668 <g_strcmp0@plt+0x1b49c>
   3057c:	mov	r0, r4
   30580:	bl	14bd8 <g_free@plt>
   30584:	mov	r1, r9
   30588:	mov	r0, fp
   3058c:	bl	2ff18 <g_strcmp0@plt+0x1ad4c>
   30590:	ldr	r3, [sp, #60]	; 0x3c
   30594:	ldr	r4, [r3]
   30598:	bl	149d4 <g_key_file_error_quark@plt>
   3059c:	cmp	r4, r0
   305a0:	beq	303d4 <g_strcmp0@plt+0x1b208>
   305a4:	mov	r0, #0
   305a8:	ldr	fp, [sp, #44]	; 0x2c
   305ac:	bl	14bd8 <g_free@plt>
   305b0:	mov	r1, r9
   305b4:	mov	r0, #0
   305b8:	bl	2ff18 <g_strcmp0@plt+0x1ad4c>
   305bc:	mov	r0, r7
   305c0:	bl	14bd8 <g_free@plt>
   305c4:	ldr	r1, [sp, #36]	; 0x24
   305c8:	ldr	r0, [sp, #40]	; 0x28
   305cc:	bl	2ff18 <g_strcmp0@plt+0x1ad4c>
   305d0:	cmp	sl, #0
   305d4:	beq	305e0 <g_strcmp0@plt+0x1b414>
   305d8:	mov	r0, sl
   305dc:	bl	14f50 <g_key_file_unref@plt>
   305e0:	ldr	r0, [sp, #52]	; 0x34
   305e4:	bl	14bd8 <g_free@plt>
   305e8:	ldr	r3, [sp, #16]
   305ec:	cmp	r3, #0
   305f0:	beq	305fc <g_strcmp0@plt+0x1b430>
   305f4:	mov	r0, r3
   305f8:	bl	14f50 <g_key_file_unref@plt>
   305fc:	ldr	r0, [sp, #48]	; 0x30
   30600:	bl	14bd8 <g_free@plt>
   30604:	mov	r0, fp
   30608:	bl	14bd8 <g_free@plt>
   3060c:	ldr	r1, [sp, #28]
   30610:	ldr	r0, [sp, #20]
   30614:	bl	2ff18 <g_strcmp0@plt+0x1ad4c>
   30618:	ldr	r4, [sp, #60]	; 0x3c
   3061c:	ldr	r0, [r4]
   30620:	bl	14c2c <g_quark_to_string@plt>
   30624:	ldr	r3, [r4, #4]
   30628:	ldr	ip, [pc, #652]	; 308bc <g_strcmp0@plt+0x1b6f0>
   3062c:	str	r3, [sp, #12]
   30630:	str	r0, [sp, #8]
   30634:	ldr	r0, [r4, #8]
   30638:	ldr	r3, [pc, #616]	; 308a8 <g_strcmp0@plt+0x1b6dc>
   3063c:	ldr	r2, [pc, #608]	; 308a4 <g_strcmp0@plt+0x1b6d8>
   30640:	mov	r1, #8
   30644:	str	ip, [sp]
   30648:	str	r0, [sp, #4]
   3064c:	mov	r0, #0
   30650:	bl	14668 <g_log@plt>
   30654:	add	r0, sp, #60	; 0x3c
   30658:	bl	14dac <g_clear_error@plt>
   3065c:	mov	r3, #0
   30660:	str	r3, [sp, #16]
   30664:	b	304b0 <g_strcmp0@plt+0x1b2e4>
   30668:	mov	r3, r0
   3066c:	mov	r2, r4
   30670:	mov	r1, r7
   30674:	ldr	r0, [sp, #16]
   30678:	bl	14e78 <g_key_file_set_value@plt>
   3067c:	mov	r0, r6
   30680:	bl	14bd8 <g_free@plt>
   30684:	add	r5, r5, #1
   30688:	mov	r0, r4
   3068c:	bl	14bd8 <g_free@plt>
   30690:	cmp	r9, r5
   30694:	bne	3054c <g_strcmp0@plt+0x1b380>
   30698:	mov	r1, r9
   3069c:	mov	r0, fp
   306a0:	bl	2ff18 <g_strcmp0@plt+0x1ad4c>
   306a4:	b	303f8 <g_strcmp0@plt+0x1b22c>
   306a8:	str	fp, [sp, #20]
   306ac:	str	fp, [sp, #48]	; 0x30
   306b0:	str	fp, [sp, #28]
   306b4:	b	301ac <g_strcmp0@plt+0x1afe0>
   306b8:	str	sl, [sp, #48]	; 0x30
   306bc:	b	301ac <g_strcmp0@plt+0x1afe0>
   306c0:	ldr	r4, [sp, #60]	; 0x3c
   306c4:	mov	ip, #0
   306c8:	ldr	r2, [pc, #496]	; 308c0 <g_strcmp0@plt+0x1b6f4>
   306cc:	ldr	r3, [r4, #8]
   306d0:	mov	r0, ip
   306d4:	mov	r1, #16
   306d8:	str	ip, [sp, #60]	; 0x3c
   306dc:	bl	14668 <g_log@plt>
   306e0:	mov	r0, r4
   306e4:	bl	1453c <g_error_free@plt>
   306e8:	ldr	r3, [sp, #60]	; 0x3c
   306ec:	cmp	r3, #0
   306f0:	beq	30268 <g_strcmp0@plt+0x1b09c>
   306f4:	ldr	r3, [sp, #16]
   306f8:	cmp	r3, #0
   306fc:	beq	30708 <g_strcmp0@plt+0x1b53c>
   30700:	mov	r0, r3
   30704:	bl	14f50 <g_key_file_unref@plt>
   30708:	ldr	r0, [sp, #48]	; 0x30
   3070c:	bl	14bd8 <g_free@plt>
   30710:	mov	r0, fp
   30714:	bl	14bd8 <g_free@plt>
   30718:	ldr	r1, [sp, #28]
   3071c:	ldr	r0, [sp, #20]
   30720:	bl	2ff18 <g_strcmp0@plt+0x1ad4c>
   30724:	ldr	r4, [sp, #60]	; 0x3c
   30728:	mov	r3, #0
   3072c:	str	r3, [sp, #16]
   30730:	ldr	r0, [r4]
   30734:	bl	14c2c <g_quark_to_string@plt>
   30738:	ldr	r3, [r4, #4]
   3073c:	ldr	ip, [pc, #384]	; 308c4 <g_strcmp0@plt+0x1b6f8>
   30740:	b	30480 <g_strcmp0@plt+0x1b2b4>
   30744:	ldr	r5, [sp, #60]	; 0x3c
   30748:	ldr	r2, [pc, #376]	; 308c8 <g_strcmp0@plt+0x1b6fc>
   3074c:	mov	r0, r4
   30750:	ldr	r3, [r5, #8]
   30754:	mov	r1, #16
   30758:	str	r4, [sp, #60]	; 0x3c
   3075c:	bl	14668 <g_log@plt>
   30760:	mov	r0, r5
   30764:	bl	1453c <g_error_free@plt>
   30768:	ldr	r3, [sp, #60]	; 0x3c
   3076c:	cmp	r3, #0
   30770:	beq	3034c <g_strcmp0@plt+0x1b180>
   30774:	cmp	sl, #0
   30778:	beq	30784 <g_strcmp0@plt+0x1b5b8>
   3077c:	mov	r0, sl
   30780:	bl	14f50 <g_key_file_unref@plt>
   30784:	ldr	r0, [sp, #52]	; 0x34
   30788:	bl	14bd8 <g_free@plt>
   3078c:	ldr	r3, [sp, #16]
   30790:	cmp	r3, #0
   30794:	beq	307a0 <g_strcmp0@plt+0x1b5d4>
   30798:	mov	r0, r3
   3079c:	bl	14f50 <g_key_file_unref@plt>
   307a0:	ldr	r0, [sp, #48]	; 0x30
   307a4:	bl	14bd8 <g_free@plt>
   307a8:	mov	r0, fp
   307ac:	bl	14bd8 <g_free@plt>
   307b0:	ldr	r1, [sp, #28]
   307b4:	ldr	r0, [sp, #20]
   307b8:	bl	2ff18 <g_strcmp0@plt+0x1ad4c>
   307bc:	ldr	r4, [sp, #60]	; 0x3c
   307c0:	mov	r3, #0
   307c4:	str	r3, [sp, #16]
   307c8:	ldr	r0, [r4]
   307cc:	bl	14c2c <g_quark_to_string@plt>
   307d0:	ldr	r3, [r4, #4]
   307d4:	ldr	ip, [pc, #240]	; 308cc <g_strcmp0@plt+0x1b700>
   307d8:	b	30480 <g_strcmp0@plt+0x1b2b4>
   307dc:	ldr	r4, [sp, #60]	; 0x3c
   307e0:	mov	ip, #0
   307e4:	mov	r0, ip
   307e8:	ldr	r3, [r4, #8]
   307ec:	ldr	r2, [pc, #220]	; 308d0 <g_strcmp0@plt+0x1b704>
   307f0:	b	306d4 <g_strcmp0@plt+0x1b508>
   307f4:	ldr	r5, [sp, #60]	; 0x3c
   307f8:	mov	r0, r4
   307fc:	ldr	r2, [pc, #208]	; 308d4 <g_strcmp0@plt+0x1b708>
   30800:	b	30750 <g_strcmp0@plt+0x1b584>
   30804:	str	r4, [sp, #48]	; 0x30
   30808:	mov	fp, r4
   3080c:	b	301ac <g_strcmp0@plt+0x1afe0>
   30810:	mov	r0, r7
   30814:	ldr	fp, [sp, #44]	; 0x2c
   30818:	bl	14bd8 <g_free@plt>
   3081c:	ldr	r1, [sp, #36]	; 0x24
   30820:	ldr	r0, [sp, #40]	; 0x28
   30824:	bl	2ff18 <g_strcmp0@plt+0x1ad4c>
   30828:	cmp	sl, #0
   3082c:	beq	30838 <g_strcmp0@plt+0x1b66c>
   30830:	mov	r0, sl
   30834:	bl	14f50 <g_key_file_unref@plt>
   30838:	ldr	r0, [sp, #52]	; 0x34
   3083c:	bl	14bd8 <g_free@plt>
   30840:	ldr	r3, [sp, #16]
   30844:	cmp	r3, #0
   30848:	beq	30854 <g_strcmp0@plt+0x1b688>
   3084c:	mov	r0, r3
   30850:	bl	14f50 <g_key_file_unref@plt>
   30854:	ldr	r0, [sp, #48]	; 0x30
   30858:	bl	14bd8 <g_free@plt>
   3085c:	mov	r0, fp
   30860:	bl	14bd8 <g_free@plt>
   30864:	ldr	r1, [sp, #28]
   30868:	ldr	r0, [sp, #20]
   3086c:	bl	2ff18 <g_strcmp0@plt+0x1ad4c>
   30870:	ldr	r4, [sp, #60]	; 0x3c
   30874:	ldr	r0, [r4]
   30878:	bl	14c2c <g_quark_to_string@plt>
   3087c:	ldr	r3, [r4, #4]
   30880:	ldr	ip, [pc, #80]	; 308d8 <g_strcmp0@plt+0x1b70c>
   30884:	b	3062c <g_strcmp0@plt+0x1b460>
   30888:	bl	14b6c <__stack_chk_fail@plt>
   3088c:	andeq	fp, r4, r8, asr #19
   30890:			; <UNDEFINED> instruction: 0x0004c4b0
   30894:	andeq	r4, r3, r8, asr #11
   30898:	andeq	sl, r3, r0, ror r6
   3089c:	muleq	r3, ip, r6
   308a0:	andeq	r0, r0, sp, asr #2
   308a4:	andeq	r4, r3, r4, ror r6
   308a8:	strdeq	sl, [r3], -r4
   308ac:	andeq	r0, r0, pc, lsl #3
   308b0:	andeq	sl, r3, r0, lsr r7
   308b4:	andeq	r0, r0, r2, asr #4
   308b8:	andeq	r4, r3, r4, lsr #13
   308bc:	andeq	r0, r0, fp, lsl r2
   308c0:	andeq	sl, r3, r0, ror #13
   308c4:	andeq	r0, r0, r2, ror r1
   308c8:	andeq	sl, r3, ip, lsl r7
   308cc:			; <UNDEFINED> instruction: 0x000001b6
   308d0:	andeq	sl, r3, ip, asr #13
   308d4:	andeq	sl, r3, r8, lsl #14
   308d8:	andeq	r0, r0, sl, ror #3
   308dc:	push	{r4, r5, r6, r7, lr}
   308e0:	sub	sp, sp, #28
   308e4:	ldr	r5, [pc, #332]	; 30a38 <g_strcmp0@plt+0x1b86c>
   308e8:	mov	r4, #0
   308ec:	mov	r7, r0
   308f0:	ldr	r3, [r5]
   308f4:	str	r4, [sp, #16]
   308f8:	str	r3, [sp, #20]
   308fc:	bl	14df4 <g_key_file_new@plt>
   30900:	add	r3, sp, #16
   30904:	mov	r1, r7
   30908:	mov	r2, r4
   3090c:	mov	r6, r0
   30910:	bl	1459c <g_key_file_load_from_file@plt>
   30914:	ldr	r3, [sp, #16]
   30918:	cmp	r3, r4
   3091c:	beq	3099c <g_strcmp0@plt+0x1b7d0>
   30920:	ldr	r7, [r3]
   30924:	bl	149d4 <g_key_file_error_quark@plt>
   30928:	cmp	r7, r0
   3092c:	beq	30a24 <g_strcmp0@plt+0x1b858>
   30930:	ldr	r3, [sp, #16]
   30934:	ldr	r7, [r3]
   30938:	bl	15040 <g_file_error_quark@plt>
   3093c:	cmp	r7, r0
   30940:	beq	309b8 <g_strcmp0@plt+0x1b7ec>
   30944:	cmp	r6, #0
   30948:	beq	30954 <g_strcmp0@plt+0x1b788>
   3094c:	mov	r0, r6
   30950:	bl	14f50 <g_key_file_unref@plt>
   30954:	ldr	r4, [sp, #16]
   30958:	mov	r6, #0
   3095c:	ldr	r0, [r4]
   30960:	bl	14c2c <g_quark_to_string@plt>
   30964:	ldr	r3, [r4, #4]
   30968:	ldr	ip, [pc, #204]	; 30a3c <g_strcmp0@plt+0x1b870>
   3096c:	str	r3, [sp, #12]
   30970:	ldr	r2, [pc, #200]	; 30a40 <g_strcmp0@plt+0x1b874>
   30974:	ldr	r3, [pc, #200]	; 30a44 <g_strcmp0@plt+0x1b878>
   30978:	mov	r1, #8
   3097c:	str	r0, [sp, #8]
   30980:	ldr	r0, [r4, #8]
   30984:	str	ip, [sp]
   30988:	str	r0, [sp, #4]
   3098c:	mov	r0, r6
   30990:	bl	14668 <g_log@plt>
   30994:	add	r0, sp, #16
   30998:	bl	14dac <g_clear_error@plt>
   3099c:	ldr	r2, [sp, #20]
   309a0:	ldr	r3, [r5]
   309a4:	mov	r0, r6
   309a8:	cmp	r2, r3
   309ac:	bne	30a34 <g_strcmp0@plt+0x1b868>
   309b0:	add	sp, sp, #28
   309b4:	pop	{r4, r5, r6, r7, pc}
   309b8:	ldr	r7, [sp, #16]
   309bc:	ldr	r2, [pc, #132]	; 30a48 <g_strcmp0@plt+0x1b87c>
   309c0:	mov	r0, r4
   309c4:	ldr	r3, [r7, #8]
   309c8:	mov	r1, #16
   309cc:	str	r4, [sp, #16]
   309d0:	bl	14668 <g_log@plt>
   309d4:	mov	r0, r7
   309d8:	bl	1453c <g_error_free@plt>
   309dc:	ldr	r4, [sp, #16]
   309e0:	cmp	r4, #0
   309e4:	beq	3099c <g_strcmp0@plt+0x1b7d0>
   309e8:	cmp	r6, #0
   309ec:	beq	309fc <g_strcmp0@plt+0x1b830>
   309f0:	mov	r0, r6
   309f4:	bl	14f50 <g_key_file_unref@plt>
   309f8:	ldr	r4, [sp, #16]
   309fc:	ldr	r0, [r4]
   30a00:	bl	14c2c <g_quark_to_string@plt>
   30a04:	ldr	r3, [r4, #4]
   30a08:	ldr	ip, [pc, #60]	; 30a4c <g_strcmp0@plt+0x1b880>
   30a0c:	str	r3, [sp, #12]
   30a10:	ldr	r2, [pc, #56]	; 30a50 <g_strcmp0@plt+0x1b884>
   30a14:	ldr	r3, [pc, #40]	; 30a44 <g_strcmp0@plt+0x1b878>
   30a18:	mov	r1, #8
   30a1c:	mov	r6, #0
   30a20:	b	3097c <g_strcmp0@plt+0x1b7b0>
   30a24:	ldr	r7, [sp, #16]
   30a28:	mov	r0, r4
   30a2c:	ldr	r2, [pc, #32]	; 30a54 <g_strcmp0@plt+0x1b888>
   30a30:	b	309c4 <g_strcmp0@plt+0x1b7f8>
   30a34:	bl	14b6c <__stack_chk_fail@plt>
   30a38:	andeq	fp, r4, r8, asr #19
   30a3c:	andeq	r0, r0, fp, ror #4
   30a40:	andeq	r4, r3, r4, ror r6
   30a44:	strdeq	sl, [r3], -r4
   30a48:	andeq	sl, r3, r8, asr r7
   30a4c:	andeq	r0, r0, sp, lsl #5
   30a50:	andeq	r4, r3, r4, lsr #13
   30a54:	andeq	sl, r3, r4, asr #14
   30a58:	push	{r4, lr}
   30a5c:	sub	sp, sp, #8
   30a60:	mov	r4, r0
   30a64:	bl	14b84 <g_get_user_config_dir@plt>
   30a68:	ldr	r2, [pc, #28]	; 30a8c <g_strcmp0@plt+0x1b8c0>
   30a6c:	mov	r1, #0
   30a70:	mov	r3, r4
   30a74:	ldr	r2, [r2, #4]
   30a78:	str	r1, [sp]
   30a7c:	ldr	r1, [pc, #12]	; 30a90 <g_strcmp0@plt+0x1b8c4>
   30a80:	bl	146c8 <g_build_filename@plt>
   30a84:	add	sp, sp, #8
   30a88:	pop	{r4, pc}
   30a8c:			; <UNDEFINED> instruction: 0x0004c4b0
   30a90:	andeq	r4, r3, r8, asr #11
   30a94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30a98:	sub	sp, sp, #20
   30a9c:	str	r0, [sp, #8]
   30aa0:	bl	30a58 <g_strcmp0@plt+0x1b88c>
   30aa4:	mov	r1, #16
   30aa8:	mov	r4, r0
   30aac:	str	r0, [sp, #4]
   30ab0:	bl	14c20 <g_file_test@plt>
   30ab4:	subs	r5, r0, #0
   30ab8:	beq	30b0c <g_strcmp0@plt+0x1b940>
   30abc:	mov	r3, r4
   30ac0:	ldr	r2, [pc, #392]	; 30c50 <g_strcmp0@plt+0x1ba84>
   30ac4:	mov	r1, #32
   30ac8:	mov	r0, #0
   30acc:	bl	14668 <g_log@plt>
   30ad0:	mov	r0, r4
   30ad4:	bl	147e8 <g_strdup@plt>
   30ad8:	mov	r6, r0
   30adc:	mov	r0, #0
   30ae0:	bl	14bd8 <g_free@plt>
   30ae4:	mov	r3, r6
   30ae8:	ldr	r2, [pc, #356]	; 30c54 <g_strcmp0@plt+0x1ba88>
   30aec:	mov	r1, #32
   30af0:	mov	r0, #0
   30af4:	bl	14668 <g_log@plt>
   30af8:	ldr	r0, [sp, #4]
   30afc:	bl	14bd8 <g_free@plt>
   30b00:	mov	r0, r6
   30b04:	add	sp, sp, #20
   30b08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30b0c:	bl	14908 <g_get_system_config_dirs@plt>
   30b10:	subs	r4, r0, #0
   30b14:	streq	r4, [sp, #12]
   30b18:	moveq	r9, r4
   30b1c:	beq	30bf0 <g_strcmp0@plt+0x1ba24>
   30b20:	bl	2fee8 <g_strcmp0@plt+0x1ad1c>
   30b24:	mov	r1, r0
   30b28:	mov	r0, r4
   30b2c:	bl	2fd78 <g_strcmp0@plt+0x1abac>
   30b30:	mov	r1, r0
   30b34:	str	r0, [sp, #12]
   30b38:	mov	r0, r4
   30b3c:	bl	2fee8 <g_strcmp0@plt+0x1ad1c>
   30b40:	subs	sl, r0, #0
   30b44:	ble	30c40 <g_strcmp0@plt+0x1ba74>
   30b48:	ldr	fp, [pc, #264]	; 30c58 <g_strcmp0@plt+0x1ba8c>
   30b4c:	ldr	r9, [pc, #264]	; 30c5c <g_strcmp0@plt+0x1ba90>
   30b50:	sub	r7, r1, #4
   30b54:	mov	r6, r5
   30b58:	b	30b68 <g_strcmp0@plt+0x1b99c>
   30b5c:	bl	14bd8 <g_free@plt>
   30b60:	cmp	r5, sl
   30b64:	beq	30c38 <g_strcmp0@plt+0x1ba6c>
   30b68:	ldr	r0, [r7, #4]!
   30b6c:	bl	147e8 <g_strdup@plt>
   30b70:	mov	r3, #0
   30b74:	ldr	r2, [fp, #4]
   30b78:	ldr	r1, [pc, #224]	; 30c60 <g_strcmp0@plt+0x1ba94>
   30b7c:	add	r5, r5, #1
   30b80:	mov	r8, r0
   30b84:	bl	146c8 <g_build_filename@plt>
   30b88:	mov	r4, r0
   30b8c:	mov	r0, r6
   30b90:	bl	14bd8 <g_free@plt>
   30b94:	mov	r3, r4
   30b98:	mov	r2, r9
   30b9c:	mov	r1, #32
   30ba0:	mov	r0, #0
   30ba4:	bl	14668 <g_log@plt>
   30ba8:	mov	r0, r4
   30bac:	mov	r1, #16
   30bb0:	bl	14c20 <g_file_test@plt>
   30bb4:	mov	r6, r4
   30bb8:	subs	r3, r0, #0
   30bbc:	str	r3, [sp]
   30bc0:	mov	r0, r8
   30bc4:	beq	30b5c <g_strcmp0@plt+0x1b990>
   30bc8:	ldr	r1, [sp, #8]
   30bcc:	mov	r2, #0
   30bd0:	mov	r0, r4
   30bd4:	bl	146c8 <g_build_filename@plt>
   30bd8:	mov	r5, sl
   30bdc:	mov	r9, r0
   30be0:	mov	r0, #0
   30be4:	bl	14bd8 <g_free@plt>
   30be8:	mov	r0, r8
   30bec:	bl	14bd8 <g_free@plt>
   30bf0:	mov	r3, r9
   30bf4:	ldr	r2, [pc, #104]	; 30c64 <g_strcmp0@plt+0x1ba98>
   30bf8:	mov	r1, #32
   30bfc:	mov	r0, #0
   30c00:	bl	14668 <g_log@plt>
   30c04:	mov	r0, r9
   30c08:	bl	147e8 <g_strdup@plt>
   30c0c:	mov	r6, r0
   30c10:	mov	r0, #0
   30c14:	bl	14bd8 <g_free@plt>
   30c18:	mov	r0, r9
   30c1c:	bl	14bd8 <g_free@plt>
   30c20:	mov	r0, r4
   30c24:	bl	14bd8 <g_free@plt>
   30c28:	mov	r1, r5
   30c2c:	ldr	r0, [sp, #12]
   30c30:	bl	2ff18 <g_strcmp0@plt+0x1ad4c>
   30c34:	b	30ae4 <g_strcmp0@plt+0x1b918>
   30c38:	ldr	r9, [sp]
   30c3c:	b	30bf0 <g_strcmp0@plt+0x1ba24>
   30c40:	mov	r9, #0
   30c44:	mov	r5, sl
   30c48:	mov	r4, r9
   30c4c:	b	30bf0 <g_strcmp0@plt+0x1ba24>
   30c50:	andeq	sl, r3, ip, ror #14
   30c54:	strdeq	sl, [r3], -r4
   30c58:			; <UNDEFINED> instruction: 0x0004c4b0
   30c5c:	muleq	r3, r4, r7
   30c60:	andeq	r4, r3, r8, asr #11
   30c64:	andeq	sl, r3, r0, asr #15
   30c68:	mov	r1, #0
   30c6c:	b	143d4 <g_object_new@plt>
   30c70:	push	{r4, r5, r6, lr}
   30c74:	mcr	15, 0, r0, cr7, cr10, {5}
   30c78:	ldr	r4, [pc, #76]	; 30ccc <g_strcmp0@plt+0x1bb00>
   30c7c:	ldr	r5, [r4, #8]
   30c80:	mcr	15, 0, r0, cr7, cr10, {5}
   30c84:	cmp	r5, #0
   30c88:	beq	30c94 <g_strcmp0@plt+0x1bac8>
   30c8c:	ldr	r0, [r4, #8]
   30c90:	pop	{r4, r5, r6, pc}
   30c94:	add	r0, r4, #8
   30c98:	bl	14a28 <g_once_init_enter@plt>
   30c9c:	cmp	r0, #0
   30ca0:	beq	30c8c <g_strcmp0@plt+0x1bac0>
   30ca4:	mov	r3, r5
   30ca8:	ldr	r2, [pc, #32]	; 30cd0 <g_strcmp0@plt+0x1bb04>
   30cac:	ldr	r1, [pc, #32]	; 30cd4 <g_strcmp0@plt+0x1bb08>
   30cb0:	mov	r0, #80	; 0x50
   30cb4:	bl	14428 <g_type_register_static@plt>
   30cb8:	mov	r1, r0
   30cbc:	add	r0, r4, #8
   30cc0:	bl	14ed8 <g_once_init_leave@plt>
   30cc4:	ldr	r0, [r4, #8]
   30cc8:	pop	{r4, r5, r6, pc}
   30ccc:			; <UNDEFINED> instruction: 0x0004c4b0
   30cd0:	andeq	sl, r3, r8, lsr r6
   30cd4:	andeq	sl, r3, ip, lsl r8
   30cd8:	push	{r4, lr}
   30cdc:	bl	30c70 <g_strcmp0@plt+0x1baa4>
   30ce0:	mov	r1, #0
   30ce4:	pop	{r4, lr}
   30ce8:	b	143d4 <g_object_new@plt>
   30cec:	push	{r4, r5, r6, r7, lr}
   30cf0:	sub	sp, sp, #44	; 0x2c
   30cf4:	bl	14f8c <g_type_class_peek_parent@plt>
   30cf8:	bl	30c70 <g_strcmp0@plt+0x1baa4>
   30cfc:	ldr	r3, [pc, #188]	; 30dc0 <g_strcmp0@plt+0x1bbf4>
   30d00:	mov	r4, #0
   30d04:	mov	r5, #64	; 0x40
   30d08:	mov	r6, #4
   30d0c:	str	r3, [sp, #8]
   30d10:	str	r5, [sp, #32]
   30d14:	mov	r3, r4
   30d18:	str	r5, [sp, #28]
   30d1c:	str	r5, [sp, #24]
   30d20:	str	r5, [sp, #20]
   30d24:	str	r6, [sp, #16]
   30d28:	str	r6, [sp, #12]
   30d2c:	str	r4, [sp, #4]
   30d30:	str	r4, [sp]
   30d34:	mov	r2, #2
   30d38:	mov	r7, r0
   30d3c:	mov	r1, r0
   30d40:	ldr	r0, [pc, #124]	; 30dc4 <g_strcmp0@plt+0x1bbf8>
   30d44:	bl	148cc <g_signal_new@plt>
   30d48:	ldr	r2, [pc, #120]	; 30dc8 <g_strcmp0@plt+0x1bbfc>
   30d4c:	mov	r3, r4
   30d50:	mov	r1, r7
   30d54:	str	r2, [sp, #8]
   30d58:	str	r4, [sp, #16]
   30d5c:	str	r6, [sp, #12]
   30d60:	str	r4, [sp, #4]
   30d64:	str	r4, [sp]
   30d68:	mov	r2, #2
   30d6c:	ldr	r0, [pc, #88]	; 30dcc <g_strcmp0@plt+0x1bc00>
   30d70:	bl	148cc <g_signal_new@plt>
   30d74:	ldr	r0, [pc, #84]	; 30dd0 <g_strcmp0@plt+0x1bc04>
   30d78:	mov	r2, #5
   30d7c:	str	r0, [sp, #8]
   30d80:	str	r2, [sp, #16]
   30d84:	str	r5, [sp, #36]	; 0x24
   30d88:	str	r5, [sp, #32]
   30d8c:	str	r5, [sp, #28]
   30d90:	str	r5, [sp, #24]
   30d94:	str	r5, [sp, #20]
   30d98:	str	r6, [sp, #12]
   30d9c:	str	r4, [sp, #4]
   30da0:	str	r4, [sp]
   30da4:	mov	r3, r4
   30da8:	mov	r1, r7
   30dac:	mov	r2, #2
   30db0:	ldr	r0, [pc, #28]	; 30dd4 <g_strcmp0@plt+0x1bc08>
   30db4:	bl	148cc <g_signal_new@plt>
   30db8:	add	sp, sp, #44	; 0x2c
   30dbc:	pop	{r4, r5, r6, r7, pc}
   30dc0:	andeq	pc, r2, r0, ror #28
   30dc4:	andeq	sl, r3, r0, lsr r8
   30dc8:	andeq	r4, r1, r0, asr #29
   30dcc:	andeq	sl, r3, r8, lsl r5
   30dd0:	andeq	pc, r2, r4, asr #27
   30dd4:	andeq	r4, r3, r0, asr #16
   30dd8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   30ddc:	sub	sp, sp, #40	; 0x28
   30de0:	ldr	r6, [pc, #444]	; 30fa4 <g_strcmp0@plt+0x1bdd8>
   30de4:	mov	r4, #0
   30de8:	ldr	r0, [pc, #440]	; 30fa8 <g_strcmp0@plt+0x1bddc>
   30dec:	ldr	r3, [r6]
   30df0:	str	r4, [sp, #20]
   30df4:	str	r3, [sp, #36]	; 0x24
   30df8:	bl	14a10 <g_find_program_in_path@plt>
   30dfc:	subs	r7, r0, #0
   30e00:	beq	30f40 <g_strcmp0@plt+0x1bd74>
   30e04:	add	r8, sp, #20
   30e08:	add	r3, sp, #32
   30e0c:	add	r2, sp, #28
   30e10:	add	r1, sp, #24
   30e14:	str	r8, [sp]
   30e18:	ldr	r0, [pc, #392]	; 30fa8 <g_strcmp0@plt+0x1bddc>
   30e1c:	str	r4, [sp, #24]
   30e20:	str	r4, [sp, #28]
   30e24:	str	r4, [sp, #32]
   30e28:	bl	14824 <g_spawn_command_line_sync@plt>
   30e2c:	mov	r0, r4
   30e30:	bl	14bd8 <g_free@plt>
   30e34:	mov	r0, r4
   30e38:	ldr	r9, [sp, #24]
   30e3c:	bl	14bd8 <g_free@plt>
   30e40:	ldr	r5, [sp, #20]
   30e44:	ldr	sl, [sp, #28]
   30e48:	cmp	r5, r4
   30e4c:	ldr	r0, [sp, #32]
   30e50:	beq	30ec8 <g_strcmp0@plt+0x1bcfc>
   30e54:	ldr	r5, [r5]
   30e58:	bl	146ec <g_spawn_error_quark@plt>
   30e5c:	cmp	r5, r0
   30e60:	beq	30f5c <g_strcmp0@plt+0x1bd90>
   30e64:	mov	r0, sl
   30e68:	bl	14bd8 <g_free@plt>
   30e6c:	mov	r0, r9
   30e70:	bl	14bd8 <g_free@plt>
   30e74:	mov	r0, r7
   30e78:	bl	14bd8 <g_free@plt>
   30e7c:	ldr	r5, [sp, #20]
   30e80:	ldr	r0, [r5]
   30e84:	bl	14c2c <g_quark_to_string@plt>
   30e88:	ldr	r3, [r5, #4]
   30e8c:	ldr	ip, [pc, #280]	; 30fac <g_strcmp0@plt+0x1bde0>
   30e90:	str	r3, [sp, #12]
   30e94:	ldr	r2, [pc, #276]	; 30fb0 <g_strcmp0@plt+0x1bde4>
   30e98:	ldr	r3, [pc, #276]	; 30fb4 <g_strcmp0@plt+0x1bde8>
   30e9c:	mov	r1, #8
   30ea0:	str	r0, [sp, #8]
   30ea4:	ldr	r0, [r5, #8]
   30ea8:	str	ip, [sp]
   30eac:	str	r0, [sp, #4]
   30eb0:	mov	r0, r4
   30eb4:	bl	14668 <g_log@plt>
   30eb8:	mov	r0, r8
   30ebc:	bl	14dac <g_clear_error@plt>
   30ec0:	mov	r0, r4
   30ec4:	b	30efc <g_strcmp0@plt+0x1bd30>
   30ec8:	cmp	r0, #0
   30ecc:	beq	30f14 <g_strcmp0@plt+0x1bd48>
   30ed0:	ldr	r2, [pc, #224]	; 30fb8 <g_strcmp0@plt+0x1bdec>
   30ed4:	mov	r1, #32
   30ed8:	mov	r0, r5
   30edc:	bl	14668 <g_log@plt>
   30ee0:	mov	r0, sl
   30ee4:	bl	14bd8 <g_free@plt>
   30ee8:	mov	r0, r9
   30eec:	bl	14bd8 <g_free@plt>
   30ef0:	mov	r0, r7
   30ef4:	bl	14bd8 <g_free@plt>
   30ef8:	mov	r0, r5
   30efc:	ldr	r2, [sp, #36]	; 0x24
   30f00:	ldr	r3, [r6]
   30f04:	cmp	r2, r3
   30f08:	bne	30fa0 <g_strcmp0@plt+0x1bdd4>
   30f0c:	add	sp, sp, #40	; 0x28
   30f10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   30f14:	ldr	r2, [pc, #160]	; 30fbc <g_strcmp0@plt+0x1bdf0>
   30f18:	mov	r1, #32
   30f1c:	bl	14668 <g_log@plt>
   30f20:	mov	r0, sl
   30f24:	bl	14bd8 <g_free@plt>
   30f28:	mov	r0, r9
   30f2c:	bl	14bd8 <g_free@plt>
   30f30:	mov	r0, r7
   30f34:	bl	14bd8 <g_free@plt>
   30f38:	mov	r0, #1
   30f3c:	b	30efc <g_strcmp0@plt+0x1bd30>
   30f40:	ldr	r2, [pc, #120]	; 30fc0 <g_strcmp0@plt+0x1bdf4>
   30f44:	mov	r1, #32
   30f48:	bl	14668 <g_log@plt>
   30f4c:	mov	r0, r7
   30f50:	bl	14bd8 <g_free@plt>
   30f54:	mov	r0, r7
   30f58:	b	30efc <g_strcmp0@plt+0x1bd30>
   30f5c:	ldr	r5, [sp, #20]
   30f60:	ldr	r2, [pc, #92]	; 30fc4 <g_strcmp0@plt+0x1bdf8>
   30f64:	mov	r1, #16
   30f68:	ldr	r3, [r5, #8]
   30f6c:	mov	r0, r4
   30f70:	str	r4, [sp, #20]
   30f74:	bl	14668 <g_log@plt>
   30f78:	mov	r0, r5
   30f7c:	bl	1453c <g_error_free@plt>
   30f80:	mov	r0, sl
   30f84:	bl	14bd8 <g_free@plt>
   30f88:	mov	r0, r9
   30f8c:	bl	14bd8 <g_free@plt>
   30f90:	mov	r0, r7
   30f94:	bl	14bd8 <g_free@plt>
   30f98:	mov	r0, r4
   30f9c:	b	30efc <g_strcmp0@plt+0x1bd30>
   30fa0:	bl	14b6c <__stack_chk_fail@plt>
   30fa4:	andeq	fp, r4, r8, asr #19
   30fa8:	andeq	sl, r3, r8, asr #16
   30fac:	andeq	r0, r0, r9, lsr #7
   30fb0:	andeq	r4, r3, r4, ror r6
   30fb4:	strdeq	sl, [r3], -r4
   30fb8:	muleq	r3, r8, r8
   30fbc:	andeq	sl, r3, ip, ror #16
   30fc0:	andeq	sl, r3, r4, asr #17
   30fc4:	andeq	sl, r3, r8, asr r8
   30fc8:	ldr	r2, [r0]
   30fcc:	cmp	r2, #0
   30fd0:	bxne	lr
   30fd4:	mov	r3, r0
   30fd8:	mov	r1, #1
   30fdc:	push	{r4, lr}
   30fe0:	mov	r0, r2
   30fe4:	str	r1, [r3]
   30fe8:	bl	146bc <exit@plt>
   30fec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30ff0:	add	fp, sp, #32
   30ff4:	ldr	r5, [pc, #308]	; 31130 <g_strcmp0@plt+0x1bf64>
   30ff8:	sub	sp, sp, #12
   30ffc:	ldr	r7, [pc, #304]	; 31134 <g_strcmp0@plt+0x1bf68>
   31000:	sub	sp, sp, #128	; 0x80
   31004:	ldr	r3, [r5]
   31008:	mov	r4, sp
   3100c:	mov	r6, r0
   31010:	mov	r1, r4
   31014:	ldr	r0, [r7]
   31018:	mov	r2, #128	; 0x80
   3101c:	str	r3, [fp, #-40]	; 0xffffffd8
   31020:	bl	144e8 <XGetPointerMapping@plt>
   31024:	cmp	r0, #128	; 0x80
   31028:	bgt	310ec <g_strcmp0@plt+0x1bf20>
   3102c:	cmp	r0, #0
   31030:	ble	31114 <g_strcmp0@plt+0x1bf48>
   31034:	cmp	r0, #2
   31038:	add	r8, r0, r4
   3103c:	mov	lr, #1
   31040:	movle	r2, #2
   31044:	movgt	r2, #3
   31048:	sub	r8, r8, #1
   3104c:	sub	r3, r4, #1
   31050:	mov	sl, #0
   31054:	sub	r9, lr, r4
   31058:	add	ip, r9, r3
   3105c:	ldrb	r1, [r3, #1]!
   31060:	cmp	r1, #1
   31064:	moveq	sl, ip
   31068:	beq	31074 <g_strcmp0@plt+0x1bea8>
   3106c:	cmp	r1, r2
   31070:	moveq	lr, ip
   31074:	cmp	r8, r3
   31078:	bne	31058 <g_strcmp0@plt+0x1be8c>
   3107c:	cmp	r6, #0
   31080:	cmpne	sl, lr
   31084:	blt	310a8 <g_strcmp0@plt+0x1bedc>
   31088:	cmp	sl, lr
   3108c:	movle	r3, #0
   31090:	movgt	r3, #1
   31094:	cmp	r6, #0
   31098:	moveq	r6, r3
   3109c:	movne	r6, #0
   310a0:	cmp	r6, #0
   310a4:	beq	310d4 <g_strcmp0@plt+0x1bf08>
   310a8:	cmp	r0, #3
   310ac:	add	sl, r4, sl
   310b0:	movlt	r1, #2
   310b4:	movge	r1, #3
   310b8:	strb	r1, [sl]
   310bc:	mov	r2, r0
   310c0:	mov	r3, #1
   310c4:	ldr	r0, [r7]
   310c8:	mov	r1, r4
   310cc:	strb	r3, [r4, lr]
   310d0:	bl	14c50 <XSetPointerMapping@plt>
   310d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   310d8:	ldr	r3, [r5]
   310dc:	cmp	r2, r3
   310e0:	bne	3112c <g_strcmp0@plt+0x1bf60>
   310e4:	sub	sp, fp, #32
   310e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   310ec:	add	r3, r0, #7
   310f0:	bic	r3, r3, #7
   310f4:	sub	sp, sp, r3
   310f8:	mov	r4, sp
   310fc:	mov	r2, r0
   31100:	mov	r1, r4
   31104:	ldr	r0, [r7]
   31108:	bl	144e8 <XGetPointerMapping@plt>
   3110c:	cmp	r0, #0
   31110:	bgt	31034 <g_strcmp0@plt+0x1be68>
   31114:	cmp	r6, #0
   31118:	beq	310d4 <g_strcmp0@plt+0x1bf08>
   3111c:	mov	sl, r4
   31120:	mov	lr, #1
   31124:	mov	r1, #2
   31128:	b	310b8 <g_strcmp0@plt+0x1beec>
   3112c:	bl	14b6c <__stack_chk_fail@plt>
   31130:	andeq	fp, r4, r8, asr #19
   31134:	andeq	ip, r4, r0, asr #9
   31138:	ldr	r3, [pc, #1288]	; 31648 <g_strcmp0@plt+0x1c47c>
   3113c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31140:	sub	sp, sp, #108	; 0x6c
   31144:	ldr	lr, [r3]
   31148:	ldr	ip, [pc, #1276]	; 3164c <g_strcmp0@plt+0x1c480>
   3114c:	add	r1, sp, #96	; 0x60
   31150:	mov	r3, #0
   31154:	ldr	r2, [pc, #1268]	; 31650 <g_strcmp0@plt+0x1c484>
   31158:	mov	r8, r0
   3115c:	str	lr, [sp, #100]	; 0x64
   31160:	str	ip, [sp, #96]	; 0x60
   31164:	bl	14d58 <g_key_file_get_string@plt>
   31168:	add	r1, sp, #96	; 0x60
   3116c:	mov	r3, #0
   31170:	ldr	r2, [pc, #1244]	; 31654 <g_strcmp0@plt+0x1c488>
   31174:	mov	r4, r0
   31178:	mov	r0, r8
   3117c:	bl	14e60 <g_key_file_get_integer@plt>
   31180:	cmp	r0, #0
   31184:	cmple	r4, #0
   31188:	bne	3150c <g_strcmp0@plt+0x1c340>
   3118c:	add	r6, sp, #40	; 0x28
   31190:	add	r9, sp, #48	; 0x30
   31194:	add	r3, sp, #44	; 0x2c
   31198:	str	r3, [sp, #36]	; 0x24
   3119c:	mov	r3, #0
   311a0:	ldr	r2, [pc, #1200]	; 31658 <g_strcmp0@plt+0x1c48c>
   311a4:	ldr	r1, [pc, #1200]	; 3165c <g_strcmp0@plt+0x1c490>
   311a8:	mov	r0, r8
   311ac:	bl	14e60 <g_key_file_get_integer@plt>
   311b0:	mov	r3, #0
   311b4:	ldr	r2, [pc, #1188]	; 31660 <g_strcmp0@plt+0x1c494>
   311b8:	ldr	r1, [pc, #1180]	; 3165c <g_strcmp0@plt+0x1c490>
   311bc:	ldr	r4, [pc, #1184]	; 31664 <g_strcmp0@plt+0x1c498>
   311c0:	mov	r5, r0
   311c4:	mov	r0, r8
   311c8:	bl	14e60 <g_key_file_get_integer@plt>
   311cc:	orrs	r3, r5, r0
   311d0:	bne	314e0 <g_strcmp0@plt+0x1c314>
   311d4:	mov	r3, #0
   311d8:	ldr	r2, [pc, #1160]	; 31668 <g_strcmp0@plt+0x1c49c>
   311dc:	ldr	r1, [pc, #1144]	; 3165c <g_strcmp0@plt+0x1c490>
   311e0:	mov	r0, r8
   311e4:	bl	14e60 <g_key_file_get_integer@plt>
   311e8:	bl	30fec <g_strcmp0@plt+0x1be20>
   311ec:	ldr	r3, [sp, #36]	; 0x24
   311f0:	mov	r2, r6
   311f4:	mov	r1, #256	; 0x100
   311f8:	ldr	r0, [r4]
   311fc:	bl	14bb4 <XkbGetAutoRepeatRate@plt>
   31200:	cmp	r0, #0
   31204:	bne	3148c <g_strcmp0@plt+0x1c2c0>
   31208:	mov	r3, #0
   3120c:	ldr	r2, [pc, #1112]	; 3166c <g_strcmp0@plt+0x1c4a0>
   31210:	ldr	r1, [pc, #1112]	; 31670 <g_strcmp0@plt+0x1c4a4>
   31214:	mov	r0, r8
   31218:	bl	14e60 <g_key_file_get_integer@plt>
   3121c:	mov	r2, r9
   31220:	mov	r1, #2
   31224:	adds	r0, r0, #0
   31228:	movne	r0, #1
   3122c:	rsb	r3, r0, #0
   31230:	ldr	r0, [r4]
   31234:	str	r3, [sp, #52]	; 0x34
   31238:	bl	14ee4 <XChangeKeyboardControl@plt>
   3123c:	mov	r3, #0
   31240:	mov	r2, r3
   31244:	add	r1, sp, #96	; 0x60
   31248:	mov	r0, r8
   3124c:	bl	14d4c <g_key_file_get_keys@plt>
   31250:	subs	r6, r0, #0
   31254:	beq	31328 <g_strcmp0@plt+0x1c15c>
   31258:	ldr	r2, [r6]
   3125c:	ldr	r5, [pc, #1040]	; 31674 <g_strcmp0@plt+0x1c4a8>
   31260:	cmp	r2, #0
   31264:	movne	sl, #0
   31268:	bne	31284 <g_strcmp0@plt+0x1c0b8>
   3126c:	b	312fc <g_strcmp0@plt+0x1c130>
   31270:	cmp	r3, #99	; 0x63
   31274:	beq	31390 <g_strcmp0@plt+0x1c1c4>
   31278:	ldr	r2, [r6, #4]!
   3127c:	cmp	r2, #0
   31280:	beq	312fc <g_strcmp0@plt+0x1c130>
   31284:	mov	r4, r2
   31288:	ldrb	r3, [r4], #1
   3128c:	cmp	r3, #105	; 0x69
   31290:	beq	31344 <g_strcmp0@plt+0x1c178>
   31294:	cmp	r3, #115	; 0x73
   31298:	bne	31270 <g_strcmp0@plt+0x1c0a4>
   3129c:	mov	r3, #0
   312a0:	add	r1, sp, #96	; 0x60
   312a4:	mov	r0, r8
   312a8:	bl	14d58 <g_key_file_get_string@plt>
   312ac:	ldr	r3, [r5]
   312b0:	subs	r7, r0, #0
   312b4:	ldr	r0, [r3]
   312b8:	beq	31460 <g_strcmp0@plt+0x1c294>
   312bc:	cmp	r0, #0
   312c0:	movne	fp, #4
   312c4:	beq	312e8 <g_strcmp0@plt+0x1c11c>
   312c8:	mov	r2, r7
   312cc:	mov	r1, r4
   312d0:	bl	32378 <g_strcmp0@plt+0x1d1ac>
   312d4:	ldr	r3, [r5]
   312d8:	ldr	r0, [r3, fp]
   312dc:	add	fp, fp, #4
   312e0:	cmp	r0, #0
   312e4:	bne	312c8 <g_strcmp0@plt+0x1c0fc>
   312e8:	mov	r0, r7
   312ec:	bl	14bd8 <g_free@plt>
   312f0:	ldr	r2, [r6, #4]!
   312f4:	cmp	r2, #0
   312f8:	bne	31284 <g_strcmp0@plt+0x1c0b8>
   312fc:	ldr	r3, [r5]
   31300:	ldr	r0, [r3]
   31304:	cmp	r0, #0
   31308:	movne	r4, #4
   3130c:	beq	31328 <g_strcmp0@plt+0x1c15c>
   31310:	bl	32424 <g_strcmp0@plt+0x1d258>
   31314:	ldr	r3, [r5]
   31318:	ldr	r0, [r3, r4]
   3131c:	add	r4, r4, #4
   31320:	cmp	r0, #0
   31324:	bne	31310 <g_strcmp0@plt+0x1c144>
   31328:	ldr	r3, [pc, #792]	; 31648 <g_strcmp0@plt+0x1c47c>
   3132c:	ldr	r2, [sp, #100]	; 0x64
   31330:	ldr	r3, [r3]
   31334:	cmp	r2, r3
   31338:	bne	31644 <g_strcmp0@plt+0x1c478>
   3133c:	add	sp, sp, #108	; 0x6c
   31340:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31344:	mov	r3, #0
   31348:	add	r1, sp, #96	; 0x60
   3134c:	mov	r0, r8
   31350:	bl	14e60 <g_key_file_get_integer@plt>
   31354:	ldr	r3, [r5]
   31358:	mov	r7, r0
   3135c:	ldr	r0, [r3]
   31360:	cmp	r0, #0
   31364:	beq	31278 <g_strcmp0@plt+0x1c0ac>
   31368:	mov	fp, #4
   3136c:	mov	r2, r7
   31370:	mov	r1, r4
   31374:	bl	3232c <g_strcmp0@plt+0x1d160>
   31378:	ldr	r3, [r5]
   3137c:	ldr	r0, [r3, fp]
   31380:	add	fp, fp, #4
   31384:	cmp	r0, #0
   31388:	bne	3136c <g_strcmp0@plt+0x1c1a0>
   3138c:	b	31278 <g_strcmp0@plt+0x1c0ac>
   31390:	str	sl, [sp]
   31394:	ldr	r3, [sp, #36]	; 0x24
   31398:	add	r1, sp, #96	; 0x60
   3139c:	mov	r0, r8
   313a0:	str	sl, [sp, #44]	; 0x2c
   313a4:	bl	14f98 <g_key_file_get_integer_list@plt>
   313a8:	subs	r7, r0, #0
   313ac:	beq	31424 <g_strcmp0@plt+0x1c258>
   313b0:	ldr	r3, [sp, #44]	; 0x2c
   313b4:	cmp	r3, #2
   313b8:	bls	31424 <g_strcmp0@plt+0x1c258>
   313bc:	cmp	r3, #3
   313c0:	ldr	r3, [r7, #8]
   313c4:	ldr	r2, [r7, #4]
   313c8:	strh	r3, [sp, #52]	; 0x34
   313cc:	ldr	r3, [r5]
   313d0:	strh	r2, [sp, #50]	; 0x32
   313d4:	ldrhne	r2, [r7, #12]
   313d8:	ldr	r0, [r3]
   313dc:	ldreq	r2, [pc, #660]	; 31678 <g_strcmp0@plt+0x1c4ac>
   313e0:	ldr	r1, [r7]
   313e4:	cmp	r0, #0
   313e8:	strh	r1, [sp, #48]	; 0x30
   313ec:	strh	r2, [sp, #54]	; 0x36
   313f0:	beq	312e8 <g_strcmp0@plt+0x1c11c>
   313f4:	mov	fp, #4
   313f8:	mov	r2, r9
   313fc:	mov	r1, r4
   31400:	bl	323c4 <g_strcmp0@plt+0x1d1f8>
   31404:	ldr	r3, [r5]
   31408:	ldr	r0, [r3, fp]
   3140c:	add	fp, fp, #4
   31410:	cmp	r0, #0
   31414:	bne	313f8 <g_strcmp0@plt+0x1c22c>
   31418:	mov	r0, r7
   3141c:	bl	14bd8 <g_free@plt>
   31420:	b	312f0 <g_strcmp0@plt+0x1c124>
   31424:	ldr	r3, [r5]
   31428:	ldr	r0, [r3]
   3142c:	cmp	r0, #0
   31430:	movne	fp, #4
   31434:	beq	312e8 <g_strcmp0@plt+0x1c11c>
   31438:	mov	r1, r4
   3143c:	bl	32290 <g_strcmp0@plt+0x1d0c4>
   31440:	ldr	r3, [r5]
   31444:	ldr	r0, [r3, fp]
   31448:	add	fp, fp, #4
   3144c:	cmp	r0, #0
   31450:	bne	31438 <g_strcmp0@plt+0x1c26c>
   31454:	mov	r0, r7
   31458:	bl	14bd8 <g_free@plt>
   3145c:	b	312f0 <g_strcmp0@plt+0x1c124>
   31460:	cmp	r0, #0
   31464:	movne	r7, #4
   31468:	beq	31278 <g_strcmp0@plt+0x1c0ac>
   3146c:	mov	r1, r4
   31470:	bl	32290 <g_strcmp0@plt+0x1d0c4>
   31474:	ldr	r3, [r5]
   31478:	ldr	r0, [r3, r7]
   3147c:	add	r7, r7, #4
   31480:	cmp	r0, #0
   31484:	bne	3146c <g_strcmp0@plt+0x1c2a0>
   31488:	b	31278 <g_strcmp0@plt+0x1c0ac>
   3148c:	mov	r3, #0
   31490:	ldr	r2, [pc, #484]	; 3167c <g_strcmp0@plt+0x1c4b0>
   31494:	ldr	r1, [pc, #468]	; 31670 <g_strcmp0@plt+0x1c4a4>
   31498:	mov	r0, r8
   3149c:	bl	14e60 <g_key_file_get_integer@plt>
   314a0:	mov	r3, #0
   314a4:	ldr	r2, [pc, #468]	; 31680 <g_strcmp0@plt+0x1c4b4>
   314a8:	ldr	r1, [pc, #448]	; 31670 <g_strcmp0@plt+0x1c4a4>
   314ac:	cmp	r0, #0
   314b0:	strgt	r0, [sp, #40]	; 0x28
   314b4:	mov	r0, r8
   314b8:	bl	14e60 <g_key_file_get_integer@plt>
   314bc:	subs	ip, r0, #0
   314c0:	ble	31208 <g_strcmp0@plt+0x1c03c>
   314c4:	mov	r3, ip
   314c8:	ldr	r2, [sp, #40]	; 0x28
   314cc:	mov	r1, #256	; 0x100
   314d0:	ldr	r0, [r4]
   314d4:	str	ip, [sp, #44]	; 0x2c
   314d8:	bl	14f20 <XkbSetAutoRepeatRate@plt>
   314dc:	b	31208 <g_strcmp0@plt+0x1c03c>
   314e0:	adds	r2, r0, #0
   314e4:	mov	r3, #10
   314e8:	movne	r2, #1
   314ec:	adds	r1, r5, #0
   314f0:	str	r0, [sp, #4]
   314f4:	movne	r1, #1
   314f8:	ldr	r0, [r4]
   314fc:	str	r3, [sp]
   31500:	mov	r3, r5
   31504:	bl	14bc0 <XChangePointerControl@plt>
   31508:	b	311d4 <g_strcmp0@plt+0x1c008>
   3150c:	mov	r5, r0
   31510:	mov	r0, #100	; 0x64
   31514:	bl	14b3c <g_string_sized_new@plt>
   31518:	cmp	r4, #0
   3151c:	mov	r7, r0
   31520:	beq	3160c <g_strcmp0@plt+0x1c440>
   31524:	ldrb	r3, [r4]
   31528:	cmp	r3, #0
   3152c:	bne	315fc <g_strcmp0@plt+0x1c430>
   31530:	mov	r0, r4
   31534:	bl	14bd8 <g_free@plt>
   31538:	ldr	r1, [pc, #324]	; 31684 <g_strcmp0@plt+0x1c4b8>
   3153c:	mov	r0, r7
   31540:	bl	15064 <g_string_append@plt>
   31544:	cmp	r5, #0
   31548:	bgt	31614 <g_strcmp0@plt+0x1c448>
   3154c:	ldr	r3, [pc, #308]	; 31688 <g_strcmp0@plt+0x1c4bc>
   31550:	add	lr, sp, #80	; 0x50
   31554:	add	r4, sp, #44	; 0x2c
   31558:	ldm	r3, {r0, r1, r2, r3}
   3155c:	mov	ip, #0
   31560:	mov	r9, r4
   31564:	add	r6, sp, #40	; 0x28
   31568:	ldr	r5, [r7]
   3156c:	str	r4, [sp, #36]	; 0x24
   31570:	ldr	r4, [r7, #4]
   31574:	stm	lr, {r0, r1, r2, r3}
   31578:	mov	r1, lr
   3157c:	str	r9, [sp, #12]
   31580:	str	ip, [sp, #24]
   31584:	str	ip, [sp, #20]
   31588:	str	ip, [sp, #16]
   3158c:	str	ip, [sp, #4]
   31590:	str	ip, [sp]
   31594:	mov	r2, ip
   31598:	mov	r0, ip
   3159c:	str	r6, [sp, #8]
   315a0:	mov	r3, #4
   315a4:	bl	14fe0 <g_spawn_async_with_pipes@plt>
   315a8:	cmp	r0, #0
   315ac:	addeq	r9, sp, #48	; 0x30
   315b0:	beq	315ec <g_strcmp0@plt+0x1c420>
   315b4:	cmp	r4, #0
   315b8:	ldr	r9, [sp, #44]	; 0x2c
   315bc:	blt	31628 <g_strcmp0@plt+0x1c45c>
   315c0:	mov	r2, r4
   315c4:	mov	r1, r5
   315c8:	mov	r0, r9
   315cc:	bl	14ef0 <write@plt>
   315d0:	ldr	r0, [sp, #44]	; 0x2c
   315d4:	add	r9, sp, #48	; 0x30
   315d8:	bl	148b4 <close@plt>
   315dc:	mov	r1, r9
   315e0:	mov	r2, #0
   315e4:	ldr	r0, [sp, #40]	; 0x28
   315e8:	bl	14ab8 <waitpid@plt>
   315ec:	mov	r0, r7
   315f0:	mov	r1, #1
   315f4:	bl	14e0c <g_string_free@plt>
   315f8:	b	3119c <g_strcmp0@plt+0x1bfd0>
   315fc:	mov	r2, r4
   31600:	ldr	r1, [pc, #132]	; 3168c <g_strcmp0@plt+0x1c4c0>
   31604:	bl	150c4 <g_string_append_printf@plt>
   31608:	b	31530 <g_strcmp0@plt+0x1c364>
   3160c:	ldr	r1, [pc, #112]	; 31684 <g_strcmp0@plt+0x1c4b8>
   31610:	bl	15064 <g_string_append@plt>
   31614:	mov	r2, r5
   31618:	ldr	r1, [pc, #112]	; 31690 <g_strcmp0@plt+0x1c4c4>
   3161c:	mov	r0, r7
   31620:	bl	150c4 <g_string_append_printf@plt>
   31624:	b	3154c <g_strcmp0@plt+0x1c380>
   31628:	mov	r0, r5
   3162c:	bl	14e9c <strlen@plt>
   31630:	mov	r1, r5
   31634:	mov	r2, r0
   31638:	mov	r0, r9
   3163c:	bl	14ef0 <write@plt>
   31640:	b	315d0 <g_strcmp0@plt+0x1c404>
   31644:	bl	14b6c <__stack_chk_fail@plt>
   31648:	andeq	fp, r4, r8, asr #19
   3164c:	subeq	r5, fp, r7, asr #8
   31650:	strdeq	sl, [r3], -ip
   31654:	andeq	sl, r3, r4, lsl r9
   31658:	andeq	r9, r3, ip, asr #29
   3165c:	andeq	r9, r3, r0, lsl #26
   31660:	ldrdeq	r9, [r3], -ip
   31664:	andeq	ip, r4, r0, asr #9
   31668:	strdeq	r9, [r3], -r0
   3166c:	andeq	r9, r3, r8, lsl pc
   31670:	andeq	r9, r3, r8, lsl #26
   31674:			; <UNDEFINED> instruction: 0x0004c4bc
   31678:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   3167c:	strdeq	r9, [r3], -ip
   31680:	andeq	r9, r3, r8, lsl #30
   31684:	andeq	sl, r3, r0, asr #18
   31688:	andeq	sl, r3, ip, ror #17
   3168c:	andeq	sl, r3, ip, lsr #18
   31690:	andeq	sl, r3, ip, asr r9
   31694:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31698:	sub	sp, sp, #20
   3169c:	ldr	sl, [pc, #300]	; 317d0 <g_strcmp0@plt+0x1c604>
   316a0:	str	r0, [sp, #4]
   316a4:	ldr	r3, [sl]
   316a8:	str	r3, [sp, #12]
   316ac:	bl	319c8 <g_strcmp0@plt+0x1c7fc>
   316b0:	cmp	r0, #0
   316b4:	bne	316d0 <g_strcmp0@plt+0x1c504>
   316b8:	ldr	r2, [sp, #12]
   316bc:	ldr	r3, [sl]
   316c0:	cmp	r2, r3
   316c4:	bne	317cc <g_strcmp0@plt+0x1c600>
   316c8:	add	sp, sp, #20
   316cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   316d0:	ldr	r8, [pc, #252]	; 317d4 <g_strcmp0@plt+0x1c608>
   316d4:	mov	r5, #0
   316d8:	str	r5, [sp, #8]
   316dc:	ldr	r3, [r8]
   316e0:	mov	r0, r3
   316e4:	ldr	r7, [r3, #136]	; 0x88
   316e8:	mov	r1, r7
   316ec:	bl	31f64 <g_strcmp0@plt+0x1cd98>
   316f0:	subs	r4, r0, #0
   316f4:	bne	317b8 <g_strcmp0@plt+0x1c5ec>
   316f8:	mov	r1, #4
   316fc:	add	r0, r7, #1
   31700:	bl	143f8 <g_malloc_n@plt>
   31704:	ldr	r9, [pc, #204]	; 317d8 <g_strcmp0@plt+0x1c60c>
   31708:	cmp	r7, #0
   3170c:	mov	r6, r0
   31710:	str	r0, [r9]
   31714:	ble	31794 <g_strcmp0@plt+0x1c5c8>
   31718:	ldr	fp, [pc, #188]	; 317dc <g_strcmp0@plt+0x1c610>
   3171c:	b	3174c <g_strcmp0@plt+0x1c580>
   31720:	ldr	r3, [r8]
   31724:	add	r4, r4, #1
   31728:	mov	r0, r3
   3172c:	ldr	r3, [r3, #140]	; 0x8c
   31730:	mov	r2, #4718592	; 0x480000
   31734:	add	r5, r3, r5
   31738:	ldr	r1, [r5, #8]
   3173c:	bl	147a0 <XSelectInput@plt>
   31740:	cmp	r7, r4
   31744:	ldr	r6, [r9]
   31748:	beq	31790 <g_strcmp0@plt+0x1c5c4>
   3174c:	add	r3, sp, #8
   31750:	mov	r2, fp
   31754:	mov	r1, r4
   31758:	ldr	r0, [r8]
   3175c:	bl	31fdc <g_strcmp0@plt+0x1ce10>
   31760:	ldr	r3, [r9]
   31764:	add	r5, r4, r4, lsl #2
   31768:	lsl	r5, r5, #4
   3176c:	str	r0, [r6, r4, lsl #2]
   31770:	ldr	r0, [r3, r4, lsl #2]
   31774:	cmp	r0, #0
   31778:	bne	31720 <g_strcmp0@plt+0x1c554>
   3177c:	mov	r3, r4
   31780:	ldr	r2, [pc, #88]	; 317e0 <g_strcmp0@plt+0x1c614>
   31784:	mov	r1, #4
   31788:	bl	14668 <g_log@plt>
   3178c:	b	3178c <g_strcmp0@plt+0x1c5c0>
   31790:	add	r6, r6, r7, lsl #2
   31794:	mov	r4, #0
   31798:	ldr	r0, [sp, #4]
   3179c:	str	r4, [r6]
   317a0:	bl	31138 <g_strcmp0@plt+0x1bf6c>
   317a4:	mov	r1, r4
   317a8:	ldr	r0, [r8]
   317ac:	bl	15154 <XSync@plt>
   317b0:	mov	r0, #1
   317b4:	b	316b8 <g_strcmp0@plt+0x1c4ec>
   317b8:	mov	r0, r5
   317bc:	ldr	r2, [pc, #32]	; 317e4 <g_strcmp0@plt+0x1c618>
   317c0:	mov	r1, #4
   317c4:	bl	14668 <g_log@plt>
   317c8:	b	317c8 <g_strcmp0@plt+0x1c5fc>
   317cc:	bl	14b6c <__stack_chk_fail@plt>
   317d0:	andeq	fp, r4, r8, asr #19
   317d4:	andeq	ip, r4, r0, asr #9
   317d8:			; <UNDEFINED> instruction: 0x0004c4bc
   317dc:	andeq	r0, r3, r8, asr #31
   317e0:	andeq	sl, r3, ip, lsr #19
   317e4:	andeq	sl, r3, r0, ror r9
   317e8:	ldr	r3, [pc, #68]	; 31834 <g_strcmp0@plt+0x1c668>
   317ec:	push	{r4, r5, r6, lr}
   317f0:	mov	r5, r0
   317f4:	ldr	r4, [r3]
   317f8:	ldr	r0, [r4]
   317fc:	cmp	r0, #0
   31800:	bne	31814 <g_strcmp0@plt+0x1c648>
   31804:	pop	{r4, r5, r6, pc}
   31808:	ldr	r0, [r4, #4]!
   3180c:	cmp	r0, #0
   31810:	popeq	{r4, r5, r6, pc}
   31814:	bl	3223c <g_strcmp0@plt+0x1d070>
   31818:	ldr	r3, [r5, #16]
   3181c:	cmp	r0, r3
   31820:	bne	31808 <g_strcmp0@plt+0x1c63c>
   31824:	mov	r1, r5
   31828:	ldr	r0, [r4]
   3182c:	bl	32244 <g_strcmp0@plt+0x1d078>
   31830:	b	31808 <g_strcmp0@plt+0x1c63c>
   31834:			; <UNDEFINED> instruction: 0x0004c4bc
   31838:	cmp	r0, #0
   3183c:	bxeq	lr
   31840:	b	31138 <g_strcmp0@plt+0x1bf6c>
   31844:	push	{r4, r5, lr}
   31848:	sub	sp, sp, #108	; 0x6c
   3184c:	ldr	r5, [pc, #104]	; 318bc <g_strcmp0@plt+0x1c6f0>
   31850:	ldr	r4, [pc, #104]	; 318c0 <g_strcmp0@plt+0x1c6f4>
   31854:	ldr	r3, [r5]
   31858:	str	r3, [sp, #100]	; 0x64
   3185c:	ldr	r0, [r4]
   31860:	bl	149bc <XPending@plt>
   31864:	cmp	r0, #0
   31868:	beq	3189c <g_strcmp0@plt+0x1c6d0>
   3186c:	add	r1, sp, #4
   31870:	ldr	r0, [r4]
   31874:	bl	14ddc <XNextEvent@plt>
   31878:	ldr	r3, [sp, #4]
   3187c:	cmp	r3, #29
   31880:	bne	3185c <g_strcmp0@plt+0x1c690>
   31884:	add	r0, sp, #4
   31888:	bl	317e8 <g_strcmp0@plt+0x1c61c>
   3188c:	ldr	r0, [r4]
   31890:	bl	149bc <XPending@plt>
   31894:	cmp	r0, #0
   31898:	bne	3186c <g_strcmp0@plt+0x1c6a0>
   3189c:	ldr	r2, [sp, #100]	; 0x64
   318a0:	ldr	r3, [r5]
   318a4:	mov	r0, #1
   318a8:	cmp	r2, r3
   318ac:	bne	318b8 <g_strcmp0@plt+0x1c6ec>
   318b0:	add	sp, sp, #108	; 0x6c
   318b4:	pop	{r4, r5, pc}
   318b8:	bl	14b6c <__stack_chk_fail@plt>
   318bc:	andeq	fp, r4, r8, asr #19
   318c0:	andeq	ip, r4, r0, asr #9
   318c4:	ldr	r3, [pc, #28]	; 318e8 <g_strcmp0@plt+0x1c71c>
   318c8:	mvn	r2, #0
   318cc:	push	{r4, lr}
   318d0:	str	r2, [r1]
   318d4:	ldr	r0, [r3]
   318d8:	bl	149bc <XPending@plt>
   318dc:	adds	r0, r0, #0
   318e0:	movne	r0, #1
   318e4:	pop	{r4, pc}
   318e8:	andeq	ip, r4, r0, asr #9
   318ec:	ldrh	r0, [r0, #58]	; 0x3a
   318f0:	ands	r0, r0, #1
   318f4:	bxeq	lr
   318f8:	ldr	r3, [pc, #20]	; 31914 <g_strcmp0@plt+0x1c748>
   318fc:	push	{r4, lr}
   31900:	ldr	r0, [r3]
   31904:	bl	149bc <XPending@plt>
   31908:	adds	r0, r0, #0
   3190c:	movne	r0, #1
   31910:	pop	{r4, pc}
   31914:	andeq	ip, r4, r0, asr #9
   31918:	push	{r4, r5, r6, r7, r8, r9, lr}
   3191c:	mov	r8, r0
   31920:	ldr	r4, [pc, #152]	; 319c0 <g_strcmp0@plt+0x1c7f4>
   31924:	ldr	r6, [pc, #152]	; 319c4 <g_strcmp0@plt+0x1c7f8>
   31928:	sub	sp, sp, #116	; 0x74
   3192c:	ldr	r5, [r4]
   31930:	ldr	r1, [r6]
   31934:	mov	r2, #92	; 0x5c
   31938:	ldr	r3, [r5, #132]	; 0x84
   3193c:	ldr	r0, [r5, #140]	; 0x8c
   31940:	str	r1, [sp, #108]	; 0x6c
   31944:	add	r3, r3, r3, lsl #2
   31948:	mov	r1, #0
   3194c:	add	r3, r0, r3, lsl #4
   31950:	add	r0, sp, #16
   31954:	ldr	r7, [r3, #8]
   31958:	bl	14818 <memset@plt>
   3195c:	add	r3, sp, #12
   31960:	ldr	r9, [r4, #4]
   31964:	mov	lr, #33	; 0x21
   31968:	mov	ip, #8
   3196c:	mov	r2, #0
   31970:	mov	r1, r7
   31974:	str	r3, [sp]
   31978:	mov	r0, r5
   3197c:	mov	r3, #1572864	; 0x180000
   31980:	str	lr, [sp, #12]
   31984:	str	ip, [sp, #36]	; 0x24
   31988:	str	r8, [sp, #40]	; 0x28
   3198c:	str	r7, [sp, #28]
   31990:	str	r9, [sp, #32]
   31994:	bl	1450c <XSendEvent@plt>
   31998:	ldr	r0, [r4]
   3199c:	mov	r1, #0
   319a0:	bl	15154 <XSync@plt>
   319a4:	ldr	r2, [sp, #108]	; 0x6c
   319a8:	ldr	r3, [r6]
   319ac:	cmp	r2, r3
   319b0:	bne	319bc <g_strcmp0@plt+0x1c7f0>
   319b4:	add	sp, sp, #116	; 0x74
   319b8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   319bc:	bl	14b6c <__stack_chk_fail@plt>
   319c0:	andeq	ip, r4, r0, asr #9
   319c4:	andeq	fp, r4, r8, asr #19
   319c8:	push	{r4, r5, r6, lr}
   319cc:	ldr	r0, [pc, #128]	; 31a54 <g_strcmp0@plt+0x1c888>
   319d0:	bl	14b9c <g_getenv@plt>
   319d4:	bl	14d34 <XOpenDisplay@plt>
   319d8:	ldr	r4, [pc, #120]	; 31a58 <g_strcmp0@plt+0x1c88c>
   319dc:	subs	r3, r0, #0
   319e0:	str	r0, [r4]
   319e4:	beq	31a4c <g_strcmp0@plt+0x1c880>
   319e8:	mov	r2, #0
   319ec:	ldr	r1, [pc, #104]	; 31a5c <g_strcmp0@plt+0x1c890>
   319f0:	bl	1486c <XInternAtom@plt>
   319f4:	ldr	r3, [r4]
   319f8:	ldr	r6, [r3, #8]
   319fc:	cmn	r6, #1
   31a00:	str	r0, [r4, #4]
   31a04:	beq	31a4c <g_strcmp0@plt+0x1c880>
   31a08:	mov	r1, #60	; 0x3c
   31a0c:	ldr	r0, [pc, #76]	; 31a60 <g_strcmp0@plt+0x1c894>
   31a10:	bl	14d88 <g_source_new@plt>
   31a14:	mov	r5, #1
   31a18:	str	r6, [r0, #52]	; 0x34
   31a1c:	strh	r5, [r0, #56]	; 0x38
   31a20:	add	r1, r0, #52	; 0x34
   31a24:	str	r0, [r4, #8]
   31a28:	bl	14ac4 <g_source_add_poll@plt>
   31a2c:	mov	r1, r5
   31a30:	ldr	r0, [r4, #8]
   31a34:	bl	149b0 <g_source_set_can_recurse@plt>
   31a38:	ldr	r0, [r4, #8]
   31a3c:	mov	r1, #0
   31a40:	bl	14a40 <g_source_attach@plt>
   31a44:	mov	r0, r5
   31a48:	pop	{r4, r5, r6, pc}
   31a4c:	mov	r0, #0
   31a50:	pop	{r4, r5, r6, pc}
   31a54:	andeq	r8, r3, r4, lsl lr
   31a58:	andeq	ip, r4, r0, asr #9
   31a5c:	strdeq	sl, [r3], -r0
   31a60:	andeq	ip, r4, r8
   31a64:	push	{r4, lr}
   31a68:	ldr	r4, [pc, #96]	; 31ad0 <g_strcmp0@plt+0x1c904>
   31a6c:	ldr	r0, [r4]
   31a70:	bl	14a88 <XGrabServer@plt>
   31a74:	ldrd	r0, [r4]
   31a78:	bl	15124 <XGetSelectionOwner@plt>
   31a7c:	subs	r3, r0, #0
   31a80:	bne	31ab8 <g_strcmp0@plt+0x1c8ec>
   31a84:	ldr	r1, [r4]
   31a88:	mov	r0, r1
   31a8c:	ldr	r2, [r1, #132]	; 0x84
   31a90:	ldr	ip, [r1, #140]	; 0x8c
   31a94:	ldr	r1, [r4, #4]
   31a98:	add	r2, r2, r2, lsl #2
   31a9c:	add	r2, ip, r2, lsl #4
   31aa0:	ldr	r2, [r2, #8]
   31aa4:	bl	14b00 <XSetSelectionOwner@plt>
   31aa8:	ldr	r0, [r4]
   31aac:	bl	14710 <XUngrabServer@plt>
   31ab0:	mov	r0, #1
   31ab4:	pop	{r4, pc}
   31ab8:	ldr	r0, [r4]
   31abc:	bl	14710 <XUngrabServer@plt>
   31ac0:	ldr	r0, [r4]
   31ac4:	bl	15148 <XCloseDisplay@plt>
   31ac8:	mov	r0, #0
   31acc:	pop	{r4, pc}
   31ad0:	andeq	ip, r4, r0, asr #9
   31ad4:	push	{r4, lr}
   31ad8:	ldr	r4, [pc, #88]	; 31b38 <g_strcmp0@plt+0x1c96c>
   31adc:	ldr	r0, [r4, #8]
   31ae0:	cmp	r0, #0
   31ae4:	beq	31af4 <g_strcmp0@plt+0x1c928>
   31ae8:	bl	15100 <g_source_destroy@plt>
   31aec:	ldr	r0, [r4, #8]
   31af0:	bl	1471c <g_source_unref@plt>
   31af4:	ldr	r0, [r4]
   31af8:	bl	14a88 <XGrabServer@plt>
   31afc:	ldr	r1, [r4]
   31b00:	mov	r3, #0
   31b04:	mov	r0, r1
   31b08:	ldr	r2, [r1, #132]	; 0x84
   31b0c:	ldr	ip, [r1, #140]	; 0x8c
   31b10:	ldr	r1, [r4, #4]
   31b14:	add	r2, r2, r2, lsl #2
   31b18:	add	r2, ip, r2, lsl #4
   31b1c:	ldr	r2, [r2, #8]
   31b20:	bl	14b00 <XSetSelectionOwner@plt>
   31b24:	ldr	r0, [r4]
   31b28:	bl	14710 <XUngrabServer@plt>
   31b2c:	ldr	r0, [r4]
   31b30:	pop	{r4, lr}
   31b34:	b	15148 <XCloseDisplay@plt>
   31b38:	andeq	ip, r4, r0, asr #9
   31b3c:	push	{r4, r5, r6, r7, r8, lr}
   31b40:	mov	r5, r0
   31b44:	mov	r0, #20
   31b48:	bl	14e6c <malloc@plt>
   31b4c:	subs	r4, r0, #0
   31b50:	beq	31bb0 <g_strcmp0@plt+0x1c9e4>
   31b54:	ldr	r7, [r5]
   31b58:	mov	r0, r7
   31b5c:	bl	14e9c <strlen@plt>
   31b60:	add	r8, r0, #1
   31b64:	mov	r0, r8
   31b68:	bl	14e6c <malloc@plt>
   31b6c:	cmp	r0, #0
   31b70:	mov	r6, r0
   31b74:	str	r0, [r4]
   31b78:	beq	31c14 <g_strcmp0@plt+0x1ca48>
   31b7c:	mov	r2, r8
   31b80:	mov	r1, r7
   31b84:	bl	14e48 <memcpy@plt>
   31b88:	ldr	r3, [r5, #4]
   31b8c:	cmp	r3, #1
   31b90:	str	r3, [r4, #4]
   31b94:	beq	31bd8 <g_strcmp0@plt+0x1ca0c>
   31b98:	cmp	r3, #0
   31b9c:	beq	31bcc <g_strcmp0@plt+0x1ca00>
   31ba0:	cmp	r3, #2
   31ba4:	beq	31bb8 <g_strcmp0@plt+0x1c9ec>
   31ba8:	ldr	r3, [r5, #16]
   31bac:	str	r3, [r4, #16]
   31bb0:	mov	r0, r4
   31bb4:	pop	{r4, r5, r6, r7, r8, pc}
   31bb8:	add	r2, r5, #8
   31bbc:	add	r3, r4, #8
   31bc0:	ldm	r2, {r0, r1}
   31bc4:	stm	r3, {r0, r1}
   31bc8:	b	31ba8 <g_strcmp0@plt+0x1c9dc>
   31bcc:	ldr	r3, [r5, #8]
   31bd0:	str	r3, [r4, #8]
   31bd4:	b	31ba8 <g_strcmp0@plt+0x1c9dc>
   31bd8:	ldr	r7, [r5, #8]
   31bdc:	mov	r0, r7
   31be0:	bl	14e9c <strlen@plt>
   31be4:	add	r8, r0, #1
   31be8:	mov	r0, r8
   31bec:	bl	14e6c <malloc@plt>
   31bf0:	cmp	r0, #0
   31bf4:	str	r0, [r4, #8]
   31bf8:	beq	31c0c <g_strcmp0@plt+0x1ca40>
   31bfc:	mov	r2, r8
   31c00:	mov	r1, r7
   31c04:	bl	14e48 <memcpy@plt>
   31c08:	b	31ba8 <g_strcmp0@plt+0x1c9dc>
   31c0c:	mov	r0, r6
   31c10:	bl	14554 <free@plt>
   31c14:	mov	r0, r4
   31c18:	mov	r4, #0
   31c1c:	bl	14554 <free@plt>
   31c20:	mov	r0, r4
   31c24:	pop	{r4, r5, r6, r7, r8, pc}
   31c28:	push	{r4, r5, r6, lr}
   31c2c:	ldr	r3, [r1, #4]
   31c30:	ldr	r6, [r0, #4]
   31c34:	cmp	r6, r3
   31c38:	bne	31c94 <g_strcmp0@plt+0x1cac8>
   31c3c:	mov	r5, r1
   31c40:	mov	r4, r0
   31c44:	ldr	r1, [r1]
   31c48:	ldr	r0, [r0]
   31c4c:	bl	14fd4 <strcmp@plt>
   31c50:	cmp	r0, #0
   31c54:	bne	31c94 <g_strcmp0@plt+0x1cac8>
   31c58:	cmp	r6, #1
   31c5c:	beq	31cb4 <g_strcmp0@plt+0x1cae8>
   31c60:	cmp	r6, #0
   31c64:	beq	31c9c <g_strcmp0@plt+0x1cad0>
   31c68:	cmp	r6, #2
   31c6c:	popne	{r4, r5, r6, pc}
   31c70:	ldr	r3, [r5, #8]
   31c74:	ldr	r2, [r4, #8]
   31c78:	cmp	r2, r3
   31c7c:	ldreq	r0, [r4, #12]
   31c80:	ldreq	r3, [r5, #12]
   31c84:	subeq	r0, r0, r3
   31c88:	clzeq	r0, r0
   31c8c:	lsreq	r0, r0, #5
   31c90:	pop	{r4, r5, r6, pc}
   31c94:	mov	r0, #0
   31c98:	pop	{r4, r5, r6, pc}
   31c9c:	ldr	r0, [r4, #8]
   31ca0:	ldr	r3, [r5, #8]
   31ca4:	sub	r0, r0, r3
   31ca8:	clz	r0, r0
   31cac:	lsr	r0, r0, #5
   31cb0:	pop	{r4, r5, r6, pc}
   31cb4:	ldr	r1, [r5, #8]
   31cb8:	ldr	r0, [r4, #8]
   31cbc:	bl	14fd4 <strcmp@plt>
   31cc0:	clz	r0, r0
   31cc4:	lsr	r0, r0, #5
   31cc8:	pop	{r4, r5, r6, pc}
   31ccc:	ldr	r3, [r0, #4]
   31cd0:	push	{r4, lr}
   31cd4:	cmp	r3, #1
   31cd8:	mov	r4, r0
   31cdc:	beq	31cfc <g_strcmp0@plt+0x1cb30>
   31ce0:	ldr	r0, [r4]
   31ce4:	cmp	r0, #0
   31ce8:	beq	31cf0 <g_strcmp0@plt+0x1cb24>
   31cec:	bl	14554 <free@plt>
   31cf0:	mov	r0, r4
   31cf4:	pop	{r4, lr}
   31cf8:	b	14554 <free@plt>
   31cfc:	ldr	r0, [r0, #8]
   31d00:	bl	14554 <free@plt>
   31d04:	b	31ce0 <g_strcmp0@plt+0x1cb14>
   31d08:	push	{r4, r5, r6, lr}
   31d0c:	subs	r4, r0, #0
   31d10:	popeq	{r4, r5, r6, pc}
   31d14:	ldm	r4, {r0, r5}
   31d18:	bl	31ccc <g_strcmp0@plt+0x1cb00>
   31d1c:	mov	r0, r4
   31d20:	bl	14554 <free@plt>
   31d24:	subs	r4, r5, #0
   31d28:	bne	31d14 <g_strcmp0@plt+0x1cb48>
   31d2c:	pop	{r4, r5, r6, pc}
   31d30:	push	{r4, r5, r6, r7, r8, lr}
   31d34:	subs	r4, r0, #0
   31d38:	beq	31da8 <g_strcmp0@plt+0x1cbdc>
   31d3c:	mov	r6, #0
   31d40:	mov	r7, r6
   31d44:	b	31d78 <g_strcmp0@plt+0x1cbac>
   31d48:	ldr	r0, [r4]
   31d4c:	bl	31b3c <g_strcmp0@plt+0x1c970>
   31d50:	cmp	r0, #0
   31d54:	str	r0, [r5]
   31d58:	beq	31d9c <g_strcmp0@plt+0x1cbd0>
   31d5c:	cmp	r6, #0
   31d60:	strne	r5, [r6, #4]
   31d64:	ldr	r4, [r4, #4]
   31d68:	moveq	r7, r5
   31d6c:	cmp	r4, #0
   31d70:	mov	r6, r5
   31d74:	beq	31d94 <g_strcmp0@plt+0x1cbc8>
   31d78:	mov	r0, #8
   31d7c:	bl	14e6c <malloc@plt>
   31d80:	subs	r5, r0, #0
   31d84:	bne	31d48 <g_strcmp0@plt+0x1cb7c>
   31d88:	mov	r0, r7
   31d8c:	bl	31d08 <g_strcmp0@plt+0x1cb3c>
   31d90:	mov	r7, #0
   31d94:	mov	r0, r7
   31d98:	pop	{r4, r5, r6, r7, r8, pc}
   31d9c:	mov	r0, r5
   31da0:	bl	14554 <free@plt>
   31da4:	b	31d88 <g_strcmp0@plt+0x1cbbc>
   31da8:	mov	r7, r4
   31dac:	b	31d94 <g_strcmp0@plt+0x1cbc8>
   31db0:	push	{r4, r5, r6, r7, r8, lr}
   31db4:	mov	r8, r0
   31db8:	mov	r0, #8
   31dbc:	mov	r5, r1
   31dc0:	bl	14e6c <malloc@plt>
   31dc4:	subs	r7, r0, #0
   31dc8:	beq	31e54 <g_strcmp0@plt+0x1cc88>
   31dcc:	ldr	r4, [r8]
   31dd0:	str	r5, [r7]
   31dd4:	cmp	r4, #0
   31dd8:	beq	31e48 <g_strcmp0@plt+0x1cc7c>
   31ddc:	ldr	r5, [r5]
   31de0:	mov	r6, #0
   31de4:	b	31e00 <g_strcmp0@plt+0x1cc34>
   31de8:	beq	31e38 <g_strcmp0@plt+0x1cc6c>
   31dec:	ldr	r3, [r4, #4]
   31df0:	mov	r6, r4
   31df4:	cmp	r3, #0
   31df8:	beq	31e28 <g_strcmp0@plt+0x1cc5c>
   31dfc:	mov	r4, r3
   31e00:	ldr	r3, [r4]
   31e04:	mov	r0, r5
   31e08:	ldr	r1, [r3]
   31e0c:	bl	14fd4 <strcmp@plt>
   31e10:	cmp	r0, #0
   31e14:	bge	31de8 <g_strcmp0@plt+0x1cc1c>
   31e18:	cmp	r6, #0
   31e1c:	beq	31e48 <g_strcmp0@plt+0x1cc7c>
   31e20:	mov	r3, r4
   31e24:	mov	r4, r6
   31e28:	str	r7, [r4, #4]
   31e2c:	str	r3, [r7, #4]
   31e30:	mov	r0, #0
   31e34:	pop	{r4, r5, r6, r7, r8, pc}
   31e38:	mov	r0, r7
   31e3c:	bl	14554 <free@plt>
   31e40:	mov	r0, #5
   31e44:	pop	{r4, r5, r6, r7, r8, pc}
   31e48:	mov	r3, r4
   31e4c:	str	r7, [r8]
   31e50:	b	31e2c <g_strcmp0@plt+0x1cc60>
   31e54:	mov	r0, #1
   31e58:	pop	{r4, r5, r6, r7, r8, pc}
   31e5c:	push	{r4, r5, r6, r7, r8, lr}
   31e60:	ldr	r4, [r0]
   31e64:	cmp	r4, #0
   31e68:	beq	31ecc <g_strcmp0@plt+0x1cd00>
   31e6c:	mov	r6, r1
   31e70:	mov	r8, r0
   31e74:	mov	r7, #0
   31e78:	b	31e8c <g_strcmp0@plt+0x1ccc0>
   31e7c:	cmp	r3, #0
   31e80:	mov	r7, r4
   31e84:	mov	r4, r3
   31e88:	beq	31ecc <g_strcmp0@plt+0x1cd00>
   31e8c:	ldr	r5, [r4]
   31e90:	mov	r0, r6
   31e94:	ldr	r1, [r5]
   31e98:	bl	14fd4 <strcmp@plt>
   31e9c:	ldr	r3, [r4, #4]
   31ea0:	cmp	r0, #0
   31ea4:	bne	31e7c <g_strcmp0@plt+0x1ccb0>
   31ea8:	cmp	r7, #0
   31eac:	strne	r3, [r7, #4]
   31eb0:	streq	r3, [r8]
   31eb4:	mov	r0, r5
   31eb8:	bl	31ccc <g_strcmp0@plt+0x1cb00>
   31ebc:	mov	r0, r4
   31ec0:	bl	14554 <free@plt>
   31ec4:	mov	r0, #0
   31ec8:	pop	{r4, r5, r6, r7, r8, pc}
   31ecc:	mov	r0, #3
   31ed0:	pop	{r4, r5, r6, r7, r8, pc}
   31ed4:	push	{r4, r5, r6, lr}
   31ed8:	subs	r4, r0, #0
   31edc:	beq	31f14 <g_strcmp0@plt+0x1cd48>
   31ee0:	mov	r6, r1
   31ee4:	b	31ef4 <g_strcmp0@plt+0x1cd28>
   31ee8:	ldr	r4, [r4, #4]
   31eec:	cmp	r4, #0
   31ef0:	beq	31f14 <g_strcmp0@plt+0x1cd48>
   31ef4:	ldr	r5, [r4]
   31ef8:	mov	r0, r6
   31efc:	ldr	r1, [r5]
   31f00:	bl	14fd4 <strcmp@plt>
   31f04:	cmp	r0, #0
   31f08:	bne	31ee8 <g_strcmp0@plt+0x1cd1c>
   31f0c:	mov	r0, r5
   31f10:	pop	{r4, r5, r6, pc}
   31f14:	mov	r5, r4
   31f18:	mov	r0, r5
   31f1c:	pop	{r4, r5, r6, pc}
   31f20:	mov	r0, #0
   31f24:	bx	lr
   31f28:	ldr	r3, [r1]
   31f2c:	cmp	r3, #28
   31f30:	beq	31f3c <g_strcmp0@plt+0x1cd70>
   31f34:	mov	r0, #0
   31f38:	bx	lr
   31f3c:	ldr	r0, [r1, #16]
   31f40:	ldr	r3, [r2]
   31f44:	cmp	r0, r3
   31f48:	bne	31f34 <g_strcmp0@plt+0x1cd68>
   31f4c:	ldr	r0, [r1, #20]
   31f50:	ldr	r3, [r2, #4]
   31f54:	sub	r0, r0, r3
   31f58:	clz	r0, r0
   31f5c:	lsr	r0, r0, #5
   31f60:	bx	lr
   31f64:	push	{r4, r5, lr}
   31f68:	sub	sp, sp, #276	; 0x114
   31f6c:	ldr	r4, [pc, #96]	; 31fd4 <g_strcmp0@plt+0x1ce08>
   31f70:	ldr	r3, [pc, #96]	; 31fd8 <g_strcmp0@plt+0x1ce0c>
   31f74:	mov	r5, r0
   31f78:	ldr	ip, [r4]
   31f7c:	str	r1, [sp]
   31f80:	mov	r2, #256	; 0x100
   31f84:	mov	r1, #1
   31f88:	add	r0, sp, #12
   31f8c:	str	ip, [sp, #268]	; 0x10c
   31f90:	bl	15094 <__sprintf_chk@plt>
   31f94:	mov	r2, #0
   31f98:	add	r1, sp, #12
   31f9c:	mov	r0, r5
   31fa0:	bl	1486c <XInternAtom@plt>
   31fa4:	mov	r1, r0
   31fa8:	mov	r0, r5
   31fac:	bl	15124 <XGetSelectionOwner@plt>
   31fb0:	ldr	r2, [sp, #268]	; 0x10c
   31fb4:	ldr	r3, [r4]
   31fb8:	adds	r0, r0, #0
   31fbc:	movne	r0, #1
   31fc0:	cmp	r2, r3
   31fc4:	bne	31fd0 <g_strcmp0@plt+0x1ce04>
   31fc8:	add	sp, sp, #276	; 0x114
   31fcc:	pop	{r4, r5, pc}
   31fd0:	bl	14b6c <__stack_chk_fail@plt>
   31fd4:	andeq	fp, r4, r8, asr #19
   31fd8:	strdeq	sl, [r3], -ip
   31fdc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   31fe0:	mov	r6, r1
   31fe4:	ldr	r8, [pc, #528]	; 321fc <g_strcmp0@plt+0x1d030>
   31fe8:	sub	sp, sp, #392	; 0x188
   31fec:	mov	r5, r0
   31ff0:	ldr	r1, [r8]
   31ff4:	mov	r0, #40	; 0x28
   31ff8:	mov	sl, r2
   31ffc:	mov	r9, r3
   32000:	str	r1, [sp, #388]	; 0x184
   32004:	bl	14e6c <malloc@plt>
   32008:	subs	r4, r0, #0
   3200c:	beq	3217c <g_strcmp0@plt+0x1cfb0>
   32010:	ldr	r3, [pc, #488]	; 32200 <g_strcmp0@plt+0x1d034>
   32014:	stm	r4, {r5, r6}
   32018:	mov	r2, #256	; 0x100
   3201c:	str	r6, [sp]
   32020:	mov	r1, #1
   32024:	add	r0, sp, #132	; 0x84
   32028:	bl	15094 <__sprintf_chk@plt>
   3202c:	add	r1, sp, #132	; 0x84
   32030:	mov	r2, #0
   32034:	mov	r0, r5
   32038:	bl	1486c <XInternAtom@plt>
   3203c:	mov	r2, #0
   32040:	ldr	r1, [pc, #444]	; 32204 <g_strcmp0@plt+0x1d038>
   32044:	mov	r7, r2
   32048:	add	r6, r6, r6, lsl #2
   3204c:	lsl	r6, r6, #4
   32050:	str	r0, [r4, #16]
   32054:	mov	r0, r5
   32058:	bl	1486c <XInternAtom@plt>
   3205c:	mov	r2, r7
   32060:	ldr	r1, [pc, #416]	; 32208 <g_strcmp0@plt+0x1d03c>
   32064:	str	r0, [r4, #20]
   32068:	mov	r0, r5
   3206c:	bl	1486c <XInternAtom@plt>
   32070:	ldr	r3, [r5, #140]	; 0x8c
   32074:	mov	ip, #10
   32078:	add	r3, r3, r6
   3207c:	mov	r2, r7
   32080:	ldr	lr, [r3, #52]	; 0x34
   32084:	ldr	r1, [r3, #8]
   32088:	str	r9, [r4, #28]
   3208c:	str	sl, [r4, #24]
   32090:	str	r7, [r4, #32]
   32094:	str	r7, [r4, #36]	; 0x24
   32098:	mov	r3, r7
   3209c:	str	r0, [r4, #12]
   320a0:	str	lr, [sp, #16]
   320a4:	str	lr, [sp, #12]
   320a8:	str	ip, [sp, #4]
   320ac:	str	ip, [sp]
   320b0:	str	r7, [sp, #8]
   320b4:	mov	r0, r5
   320b8:	bl	145cc <XCreateSimpleWindow@plt>
   320bc:	mov	r2, #4194304	; 0x400000
   320c0:	mov	r1, r0
   320c4:	str	r0, [r4, #8]
   320c8:	mov	r0, r5
   320cc:	bl	147a0 <XSelectInput@plt>
   320d0:	mov	r3, #97	; 0x61
   320d4:	mov	r2, r7
   320d8:	ldr	r1, [pc, #300]	; 3220c <g_strcmp0@plt+0x1d040>
   320dc:	mov	r0, r5
   320e0:	ldr	r9, [r4, #8]
   320e4:	strb	r3, [sp, #27]
   320e8:	bl	1486c <XInternAtom@plt>
   320ec:	add	r3, sp, #27
   320f0:	mov	r2, #8
   320f4:	mov	r1, r9
   320f8:	str	r3, [sp, #8]
   320fc:	str	r2, [sp]
   32100:	str	r7, [sp, #4]
   32104:	str	r9, [sp, #28]
   32108:	mov	ip, r0
   3210c:	mov	r0, #1
   32110:	mov	r3, ip
   32114:	mov	r2, ip
   32118:	str	r0, [sp, #12]
   3211c:	mov	r0, r5
   32120:	str	ip, [sp, #32]
   32124:	bl	1495c <XChangeProperty@plt>
   32128:	add	r1, sp, #36	; 0x24
   3212c:	add	r3, sp, #28
   32130:	ldr	r2, [pc, #216]	; 32210 <g_strcmp0@plt+0x1d044>
   32134:	mov	r0, r5
   32138:	bl	1474c <XIfEvent@plt>
   3213c:	ldr	r9, [sp, #60]	; 0x3c
   32140:	ldr	r2, [r4, #8]
   32144:	mov	r3, r9
   32148:	ldr	r1, [r4, #16]
   3214c:	mov	r0, r5
   32150:	bl	14b00 <XSetSelectionOwner@plt>
   32154:	ldr	r1, [r4, #16]
   32158:	mov	r0, r5
   3215c:	bl	15124 <XGetSelectionOwner@plt>
   32160:	ldr	r2, [r4, #8]
   32164:	cmp	r0, r2
   32168:	mov	r3, r0
   3216c:	beq	32198 <g_strcmp0@plt+0x1cfcc>
   32170:	ldr	r3, [r4, #24]
   32174:	ldr	r0, [r4, #28]
   32178:	blx	r3
   3217c:	ldr	r2, [sp, #388]	; 0x184
   32180:	ldr	r3, [r8]
   32184:	mov	r0, r4
   32188:	cmp	r2, r3
   3218c:	bne	321f8 <g_strcmp0@plt+0x1d02c>
   32190:	add	sp, sp, #392	; 0x188
   32194:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   32198:	ldr	r2, [r5, #140]	; 0x8c
   3219c:	add	r1, sp, #36	; 0x24
   321a0:	add	r6, r2, r6
   321a4:	mov	r0, r5
   321a8:	ldr	r2, [r6, #8]
   321ac:	ldr	r5, [r4, #12]
   321b0:	ldr	r6, [r4, #16]
   321b4:	str	r2, [sp, #52]	; 0x34
   321b8:	str	r1, [sp]
   321bc:	mov	lr, #33	; 0x21
   321c0:	mov	r1, r2
   321c4:	str	r3, [sp, #72]	; 0x48
   321c8:	mov	ip, #32
   321cc:	mov	r2, r7
   321d0:	mov	r3, #131072	; 0x20000
   321d4:	str	r9, [sp, #64]	; 0x40
   321d8:	str	r7, [sp, #76]	; 0x4c
   321dc:	str	r7, [sp, #80]	; 0x50
   321e0:	str	r5, [sp, #56]	; 0x38
   321e4:	str	r6, [sp, #68]	; 0x44
   321e8:	str	lr, [sp, #36]	; 0x24
   321ec:	str	ip, [sp, #60]	; 0x3c
   321f0:	bl	1450c <XSendEvent@plt>
   321f4:	b	3217c <g_strcmp0@plt+0x1cfb0>
   321f8:	bl	14b6c <__stack_chk_fail@plt>
   321fc:	andeq	fp, r4, r8, asr #19
   32200:	strdeq	sl, [r3], -ip
   32204:	andeq	sl, r3, ip, lsl #20
   32208:	andeq	sl, r3, r0, lsr #20
   3220c:	andeq	sl, r3, r8, lsr #20
   32210:	andeq	r1, r3, r8, lsr #30
   32214:	push	{r4, lr}
   32218:	mov	r4, r0
   3221c:	ldr	r1, [r0, #8]
   32220:	ldr	r0, [r0]
   32224:	bl	14efc <XDestroyWindow@plt>
   32228:	ldr	r0, [r4, #32]
   3222c:	bl	31d08 <g_strcmp0@plt+0x1cb3c>
   32230:	mov	r0, r4
   32234:	pop	{r4, lr}
   32238:	b	14554 <free@plt>
   3223c:	ldr	r0, [r0, #8]
   32240:	bx	lr
   32244:	ldr	r3, [r0, #8]
   32248:	ldr	r2, [r1, #16]
   3224c:	cmp	r2, r3
   32250:	beq	3225c <g_strcmp0@plt+0x1d090>
   32254:	mov	r0, #0
   32258:	bx	lr
   3225c:	ldr	r3, [r1]
   32260:	cmp	r3, #29
   32264:	bne	32254 <g_strcmp0@plt+0x1d088>
   32268:	ldr	r2, [r1, #20]
   3226c:	ldr	r3, [r0, #16]
   32270:	cmp	r2, r3
   32274:	bne	32254 <g_strcmp0@plt+0x1d088>
   32278:	ldr	r3, [r0, #24]
   3227c:	push	{r4, lr}
   32280:	ldr	r0, [r0, #28]
   32284:	blx	r3
   32288:	mov	r0, #1
   3228c:	pop	{r4, pc}
   32290:	ldr	r0, [pc]	; 32298 <g_strcmp0@plt+0x1d0cc>
   32294:	b	31e5c <g_strcmp0@plt+0x1cc90>
   32298:	andeq	ip, r4, ip, asr #9
   3229c:	push	{r4, r5, r6, lr}
   322a0:	mov	r4, r1
   322a4:	ldr	r5, [pc, #124]	; 32328 <g_strcmp0@plt+0x1d15c>
   322a8:	mov	r6, r0
   322ac:	ldr	r1, [r1]
   322b0:	ldr	r0, [r5]
   322b4:	bl	31ed4 <g_strcmp0@plt+0x1cd08>
   322b8:	cmp	r0, #0
   322bc:	beq	322e8 <g_strcmp0@plt+0x1d11c>
   322c0:	mov	r1, r4
   322c4:	bl	31c28 <g_strcmp0@plt+0x1ca5c>
   322c8:	cmp	r0, #0
   322cc:	movne	r4, #0
   322d0:	beq	322dc <g_strcmp0@plt+0x1d110>
   322d4:	mov	r0, r4
   322d8:	pop	{r4, r5, r6, pc}
   322dc:	mov	r0, r5
   322e0:	ldr	r1, [r4]
   322e4:	bl	31e5c <g_strcmp0@plt+0x1cc90>
   322e8:	mov	r0, r4
   322ec:	bl	31b3c <g_strcmp0@plt+0x1c970>
   322f0:	subs	r5, r0, #0
   322f4:	moveq	r4, #1
   322f8:	beq	322d4 <g_strcmp0@plt+0x1d108>
   322fc:	ldr	r3, [r6, #36]	; 0x24
   32300:	mov	r1, r5
   32304:	str	r3, [r5, #16]
   32308:	ldr	r0, [pc, #24]	; 32328 <g_strcmp0@plt+0x1d15c>
   3230c:	bl	31db0 <g_strcmp0@plt+0x1cbe4>
   32310:	subs	r4, r0, #0
   32314:	beq	322d4 <g_strcmp0@plt+0x1d108>
   32318:	mov	r0, r5
   3231c:	bl	31ccc <g_strcmp0@plt+0x1cb00>
   32320:	mov	r0, r4
   32324:	pop	{r4, r5, r6, pc}
   32328:	andeq	ip, r4, ip, asr #9
   3232c:	push	{r4, lr}
   32330:	sub	sp, sp, #24
   32334:	ldr	r4, [pc, #56]	; 32374 <g_strcmp0@plt+0x1d1a8>
   32338:	mov	r3, #0
   3233c:	str	r1, [sp]
   32340:	ldr	ip, [r4]
   32344:	mov	r1, sp
   32348:	str	r2, [sp, #8]
   3234c:	str	r3, [sp, #4]
   32350:	str	ip, [sp, #20]
   32354:	bl	3229c <g_strcmp0@plt+0x1d0d0>
   32358:	ldr	r2, [sp, #20]
   3235c:	ldr	r3, [r4]
   32360:	cmp	r2, r3
   32364:	bne	32370 <g_strcmp0@plt+0x1d1a4>
   32368:	add	sp, sp, #24
   3236c:	pop	{r4, pc}
   32370:	bl	14b6c <__stack_chk_fail@plt>
   32374:	andeq	fp, r4, r8, asr #19
   32378:	push	{r4, lr}
   3237c:	sub	sp, sp, #24
   32380:	ldr	r4, [pc, #56]	; 323c0 <g_strcmp0@plt+0x1d1f4>
   32384:	mov	r3, #1
   32388:	str	r1, [sp]
   3238c:	ldr	ip, [r4]
   32390:	mov	r1, sp
   32394:	str	r2, [sp, #8]
   32398:	str	r3, [sp, #4]
   3239c:	str	ip, [sp, #20]
   323a0:	bl	3229c <g_strcmp0@plt+0x1d0d0>
   323a4:	ldr	r2, [sp, #20]
   323a8:	ldr	r3, [r4]
   323ac:	cmp	r2, r3
   323b0:	bne	323bc <g_strcmp0@plt+0x1d1f0>
   323b4:	add	sp, sp, #24
   323b8:	pop	{r4, pc}
   323bc:	bl	14b6c <__stack_chk_fail@plt>
   323c0:	andeq	fp, r4, r8, asr #19
   323c4:	push	{r4, lr}
   323c8:	sub	sp, sp, #24
   323cc:	ldr	r4, [pc, #76]	; 32420 <g_strcmp0@plt+0x1d254>
   323d0:	mov	ip, r0
   323d4:	str	r1, [sp]
   323d8:	ldr	r0, [r2]
   323dc:	ldr	r1, [r2, #4]
   323e0:	add	r3, sp, #8
   323e4:	ldr	r2, [r4]
   323e8:	stmia	r3!, {r0, r1}
   323ec:	mov	r3, #2
   323f0:	mov	r0, ip
   323f4:	mov	r1, sp
   323f8:	str	r2, [sp, #20]
   323fc:	str	r3, [sp, #4]
   32400:	bl	3229c <g_strcmp0@plt+0x1d0d0>
   32404:	ldr	r2, [sp, #20]
   32408:	ldr	r3, [r4]
   3240c:	cmp	r2, r3
   32410:	bne	3241c <g_strcmp0@plt+0x1d250>
   32414:	add	sp, sp, #24
   32418:	pop	{r4, pc}
   3241c:	bl	14b6c <__stack_chk_fail@plt>
   32420:	andeq	fp, r4, r8, asr #19
   32424:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32428:	sub	sp, sp, #36	; 0x24
   3242c:	ldr	r6, [pc, #576]	; 32674 <g_strcmp0@plt+0x1d4a8>
   32430:	str	r0, [sp, #24]
   32434:	ldr	r7, [r6]
   32438:	cmp	r7, #0
   3243c:	beq	324b4 <g_strcmp0@plt+0x1d2e8>
   32440:	mov	r9, #12
   32444:	mov	r5, #0
   32448:	b	32478 <g_strcmp0@plt+0x1d2ac>
   3244c:	cmp	r3, #0
   32450:	addeq	r0, r4, #12
   32454:	beq	32464 <g_strcmp0@plt+0x1d298>
   32458:	cmp	r3, #2
   3245c:	add	r0, r4, #16
   32460:	addne	r0, r4, #8
   32464:	ldr	r7, [r7, #4]
   32468:	add	r9, r9, r0
   3246c:	cmp	r7, #0
   32470:	add	r5, r5, #1
   32474:	beq	324bc <g_strcmp0@plt+0x1d2f0>
   32478:	ldr	r8, [r7]
   3247c:	ldr	r0, [r8]
   32480:	bl	14e9c <strlen@plt>
   32484:	ldr	r3, [r8, #4]
   32488:	cmp	r3, #1
   3248c:	add	r0, r0, #3
   32490:	bic	r4, r0, #3
   32494:	bne	3244c <g_strcmp0@plt+0x1d280>
   32498:	ldr	r0, [r8, #8]
   3249c:	bl	14e9c <strlen@plt>
   324a0:	add	r4, r4, #12
   324a4:	add	r0, r0, #3
   324a8:	bic	r0, r0, #3
   324ac:	add	r0, r0, r4
   324b0:	b	32464 <g_strcmp0@plt+0x1d298>
   324b4:	mov	r5, r7
   324b8:	mov	r9, #12
   324bc:	mov	r0, r9
   324c0:	bl	14e6c <malloc@plt>
   324c4:	subs	r4, r0, #0
   324c8:	str	r4, [sp, #28]
   324cc:	moveq	r0, #1
   324d0:	beq	325f8 <g_strcmp0@plt+0x1d42c>
   324d4:	bl	31f20 <g_strcmp0@plt+0x1cd54>
   324d8:	ldr	r3, [sp, #24]
   324dc:	ldr	sl, [r6]
   324e0:	str	r5, [r4, #8]
   324e4:	ldr	r2, [r3, #36]	; 0x24
   324e8:	cmp	sl, #0
   324ec:	add	r1, r2, #1
   324f0:	str	r2, [r4, #4]
   324f4:	str	r1, [r3, #36]	; 0x24
   324f8:	add	r5, r4, #12
   324fc:	strb	r0, [r4]
   32500:	beq	325bc <g_strcmp0@plt+0x1d3f0>
   32504:	mov	r7, #0
   32508:	ldr	r6, [sl]
   3250c:	add	r8, r5, #4
   32510:	ldr	r2, [r6, #4]
   32514:	strb	r7, [r5, #1]
   32518:	strb	r2, [r5]
   3251c:	ldr	fp, [r6]
   32520:	mov	r0, fp
   32524:	bl	14e9c <strlen@plt>
   32528:	mov	r1, fp
   3252c:	add	r2, r0, #3
   32530:	mov	r4, r0
   32534:	strh	r0, [r5, #2]
   32538:	bic	r5, r2, #3
   3253c:	mov	r2, r0
   32540:	mov	r0, r8
   32544:	bl	14e48 <memcpy@plt>
   32548:	cmp	r5, r4
   3254c:	add	r4, r8, r4
   32550:	beq	32664 <g_strcmp0@plt+0x1d498>
   32554:	add	r8, r8, r5
   32558:	strb	r7, [r4], #1
   3255c:	cmp	r8, r4
   32560:	bne	32558 <g_strcmp0@plt+0x1d38c>
   32564:	ldr	r2, [r6, #4]
   32568:	ldr	r1, [r6, #16]
   3256c:	cmp	r2, #1
   32570:	str	r1, [r8]
   32574:	beq	32610 <g_strcmp0@plt+0x1d444>
   32578:	cmp	r2, #0
   3257c:	beq	32600 <g_strcmp0@plt+0x1d434>
   32580:	cmp	r2, #2
   32584:	addne	r5, r8, #4
   32588:	bne	325b0 <g_strcmp0@plt+0x1d3e4>
   3258c:	ldrh	r2, [r6, #8]
   32590:	add	r5, r8, #12
   32594:	strh	r2, [r8, #4]
   32598:	ldrh	r2, [r6, #10]
   3259c:	strh	r2, [r8, #6]
   325a0:	ldrh	r2, [r6, #12]
   325a4:	strh	r2, [r8, #8]
   325a8:	ldrh	r2, [r6, #14]
   325ac:	strh	r2, [r8, #10]
   325b0:	ldr	sl, [sl, #4]
   325b4:	cmp	sl, #0
   325b8:	bne	32508 <g_strcmp0@plt+0x1d33c>
   325bc:	ldr	ip, [sp, #24]
   325c0:	ldr	r5, [sp, #28]
   325c4:	mov	r4, #0
   325c8:	ldr	r3, [ip, #20]
   325cc:	mov	r1, #8
   325d0:	str	r9, [sp, #12]
   325d4:	str	r5, [sp, #8]
   325d8:	stm	sp, {r1, r4}
   325dc:	mov	r2, r3
   325e0:	ldr	r1, [ip, #8]
   325e4:	ldr	r0, [ip]
   325e8:	bl	1495c <XChangeProperty@plt>
   325ec:	mov	r0, r5
   325f0:	bl	14554 <free@plt>
   325f4:	mov	r0, r4
   325f8:	add	sp, sp, #36	; 0x24
   325fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32600:	ldr	r2, [r6, #8]
   32604:	add	r5, r8, #8
   32608:	str	r2, [r8, #4]
   3260c:	b	325b0 <g_strcmp0@plt+0x1d3e4>
   32610:	ldr	r1, [r6, #8]
   32614:	add	r6, r8, #8
   32618:	mov	r0, r1
   3261c:	str	r1, [sp, #20]
   32620:	bl	14e9c <strlen@plt>
   32624:	ldr	r1, [sp, #20]
   32628:	add	r5, r0, #3
   3262c:	mov	r4, r0
   32630:	str	r0, [r8, #4]
   32634:	mov	r2, r0
   32638:	bic	r5, r5, #3
   3263c:	mov	r0, r6
   32640:	bl	14e48 <memcpy@plt>
   32644:	cmp	r5, r4
   32648:	add	r0, r6, r4
   3264c:	beq	3266c <g_strcmp0@plt+0x1d4a0>
   32650:	add	r5, r6, r5
   32654:	strb	r7, [r0], #1
   32658:	cmp	r5, r0
   3265c:	bne	32654 <g_strcmp0@plt+0x1d488>
   32660:	b	325b0 <g_strcmp0@plt+0x1d3e4>
   32664:	mov	r8, r4
   32668:	b	32564 <g_strcmp0@plt+0x1d398>
   3266c:	mov	r5, r0
   32670:	b	325b0 <g_strcmp0@plt+0x1d3e4>
   32674:	andeq	ip, r4, ip, asr #9
   32678:	ldr	r3, [r1]
   3267c:	cmp	r3, #28
   32680:	beq	3268c <g_strcmp0@plt+0x1d4c0>
   32684:	mov	r0, #0
   32688:	bx	lr
   3268c:	ldr	r0, [r1, #16]
   32690:	ldr	r3, [r2]
   32694:	cmp	r0, r3
   32698:	bne	32684 <g_strcmp0@plt+0x1d4b8>
   3269c:	ldr	r0, [r1, #20]
   326a0:	ldr	r3, [r2, #4]
   326a4:	sub	r0, r0, r3
   326a8:	clz	r0, r0
   326ac:	lsr	r0, r0, #5
   326b0:	bx	lr
   326b4:	push	{r4, r5, r6, lr}
   326b8:	ldr	r6, [pc, #372]	; 32834 <g_strcmp0@plt+0x1d668>
   326bc:	ldr	r5, [r6]
   326c0:	cmp	r5, #0
   326c4:	popne	{r4, r5, r6, pc}
   326c8:	mov	r2, r5
   326cc:	ldr	r1, [pc, #356]	; 32838 <g_strcmp0@plt+0x1d66c>
   326d0:	mov	r4, r0
   326d4:	bl	1486c <XInternAtom@plt>
   326d8:	ldr	r3, [pc, #348]	; 3283c <g_strcmp0@plt+0x1d670>
   326dc:	mov	r2, r5
   326e0:	ldr	r1, [pc, #344]	; 32840 <g_strcmp0@plt+0x1d674>
   326e4:	str	r0, [r3]
   326e8:	mov	r0, r4
   326ec:	bl	1486c <XInternAtom@plt>
   326f0:	ldr	r3, [pc, #332]	; 32844 <g_strcmp0@plt+0x1d678>
   326f4:	mov	r2, r5
   326f8:	ldr	r1, [pc, #328]	; 32848 <g_strcmp0@plt+0x1d67c>
   326fc:	str	r0, [r3]
   32700:	mov	r0, r4
   32704:	bl	1486c <XInternAtom@plt>
   32708:	ldr	r3, [pc, #316]	; 3284c <g_strcmp0@plt+0x1d680>
   3270c:	mov	r2, r5
   32710:	ldr	r1, [pc, #312]	; 32850 <g_strcmp0@plt+0x1d684>
   32714:	str	r0, [r3]
   32718:	mov	r0, r4
   3271c:	bl	1486c <XInternAtom@plt>
   32720:	ldr	r3, [pc, #300]	; 32854 <g_strcmp0@plt+0x1d688>
   32724:	mov	r2, r5
   32728:	ldr	r1, [pc, #296]	; 32858 <g_strcmp0@plt+0x1d68c>
   3272c:	str	r0, [r3]
   32730:	mov	r0, r4
   32734:	bl	1486c <XInternAtom@plt>
   32738:	ldr	r3, [pc, #284]	; 3285c <g_strcmp0@plt+0x1d690>
   3273c:	mov	r2, r5
   32740:	ldr	r1, [pc, #280]	; 32860 <g_strcmp0@plt+0x1d694>
   32744:	str	r0, [r3]
   32748:	mov	r0, r4
   3274c:	bl	1486c <XInternAtom@plt>
   32750:	ldr	r3, [pc, #268]	; 32864 <g_strcmp0@plt+0x1d698>
   32754:	mov	r2, r5
   32758:	ldr	r1, [pc, #264]	; 32868 <g_strcmp0@plt+0x1d69c>
   3275c:	str	r0, [r3]
   32760:	mov	r0, r4
   32764:	bl	1486c <XInternAtom@plt>
   32768:	ldr	r3, [pc, #252]	; 3286c <g_strcmp0@plt+0x1d6a0>
   3276c:	mov	r2, r5
   32770:	ldr	r1, [pc, #248]	; 32870 <g_strcmp0@plt+0x1d6a4>
   32774:	str	r0, [r3]
   32778:	mov	r0, r4
   3277c:	bl	1486c <XInternAtom@plt>
   32780:	ldr	r3, [pc, #236]	; 32874 <g_strcmp0@plt+0x1d6a8>
   32784:	mov	r2, r5
   32788:	ldr	r1, [pc, #232]	; 32878 <g_strcmp0@plt+0x1d6ac>
   3278c:	str	r0, [r3]
   32790:	mov	r0, r4
   32794:	bl	1486c <XInternAtom@plt>
   32798:	ldr	r3, [pc, #220]	; 3287c <g_strcmp0@plt+0x1d6b0>
   3279c:	mov	r2, r5
   327a0:	ldr	r1, [pc, #216]	; 32880 <g_strcmp0@plt+0x1d6b4>
   327a4:	str	r0, [r3]
   327a8:	mov	r0, r4
   327ac:	bl	1486c <XInternAtom@plt>
   327b0:	ldr	r3, [pc, #204]	; 32884 <g_strcmp0@plt+0x1d6b8>
   327b4:	mov	r2, r5
   327b8:	ldr	r1, [pc, #200]	; 32888 <g_strcmp0@plt+0x1d6bc>
   327bc:	str	r0, [r3]
   327c0:	mov	r0, r4
   327c4:	bl	1486c <XInternAtom@plt>
   327c8:	ldr	r3, [pc, #188]	; 3288c <g_strcmp0@plt+0x1d6c0>
   327cc:	mov	r2, r5
   327d0:	ldr	r1, [pc, #184]	; 32890 <g_strcmp0@plt+0x1d6c4>
   327d4:	str	r0, [r3]
   327d8:	mov	r0, r4
   327dc:	bl	1486c <XInternAtom@plt>
   327e0:	ldr	r3, [pc, #172]	; 32894 <g_strcmp0@plt+0x1d6c8>
   327e4:	mov	r2, r5
   327e8:	ldr	r1, [pc, #168]	; 32898 <g_strcmp0@plt+0x1d6cc>
   327ec:	str	r0, [r3]
   327f0:	mov	r0, r4
   327f4:	bl	1486c <XInternAtom@plt>
   327f8:	ldr	r3, [pc, #156]	; 3289c <g_strcmp0@plt+0x1d6d0>
   327fc:	str	r0, [r3]
   32800:	mov	r0, r4
   32804:	bl	14c44 <XExtendedMaxRequestSize@plt>
   32808:	cmp	r0, #0
   3280c:	beq	32828 <g_strcmp0@plt+0x1d65c>
   32810:	sub	r0, r0, #100	; 0x64
   32814:	cmp	r0, #262144	; 0x40000
   32818:	movhi	r3, #262144	; 0x40000
   3281c:	strls	r0, [r6]
   32820:	strhi	r3, [r6]
   32824:	pop	{r4, r5, r6, pc}
   32828:	mov	r0, r4
   3282c:	bl	14f80 <XMaxRequestSize@plt>
   32830:	b	32810 <g_strcmp0@plt+0x1d644>
   32834:	ldrdeq	ip, [r4], -r0
   32838:	andeq	sl, r3, r8, lsr sl
   3283c:	andeq	ip, r4, r4, asr #10
   32840:	andeq	sl, r3, r4, asr #20
   32844:	andeq	ip, r4, r8, lsr r5
   32848:	andeq	sl, r3, r8, asr sl
   3284c:	andeq	ip, r4, r8, lsr #10
   32850:	andeq	sl, r3, r4, ror #20
   32854:	andeq	ip, r4, r0, asr #10
   32858:	andeq	sl, r3, ip, ror #20
   3285c:	andeq	ip, r4, r4, lsr r5
   32860:	andeq	sl, r3, r4, ror sl
   32864:	andeq	ip, r4, r0, lsr #10
   32868:	andeq	sl, r3, r4, lsl #21
   3286c:	andeq	ip, r4, ip, lsr #10
   32870:	andeq	sl, r3, r0, lsr #20
   32874:	andeq	ip, r4, ip, lsr r5
   32878:	muleq	r3, r8, sl
   3287c:	andeq	ip, r4, ip, asr #10
   32880:	andeq	sl, r3, r4, lsr #21
   32884:	andeq	ip, r4, r8, asr #10
   32888:	andeq	sl, r3, ip, lsr #21
   3288c:	andeq	ip, r4, r4, lsr #10
   32890:			; <UNDEFINED> instruction: 0x0003aabc
   32894:	andeq	ip, r4, ip, lsl r5
   32898:	andeq	sl, r3, r4, asr #21
   3289c:	andeq	ip, r4, r0, lsr r5
   328a0:	push	{r4, r5, r6, lr}
   328a4:	sub	sp, sp, #128	; 0x80
   328a8:	ldr	r4, [pc, #148]	; 32944 <g_strcmp0@plt+0x1d778>
   328ac:	mov	r6, r1
   328b0:	mov	r3, #97	; 0x61
   328b4:	ldr	ip, [r4]
   328b8:	mov	r2, #0
   328bc:	ldr	r1, [pc, #132]	; 32948 <g_strcmp0@plt+0x1d77c>
   328c0:	mov	r5, r0
   328c4:	str	ip, [sp, #124]	; 0x7c
   328c8:	strb	r3, [sp, #19]
   328cc:	bl	1486c <XInternAtom@plt>
   328d0:	add	r2, sp, #19
   328d4:	str	r2, [sp, #8]
   328d8:	mov	r2, #8
   328dc:	mov	r1, r6
   328e0:	str	r2, [sp]
   328e4:	str	r6, [sp, #20]
   328e8:	mov	ip, r0
   328ec:	mov	r0, #1
   328f0:	str	r0, [sp, #12]
   328f4:	mov	r0, #0
   328f8:	mov	r3, ip
   328fc:	mov	r2, ip
   32900:	str	r0, [sp, #4]
   32904:	mov	r0, r5
   32908:	str	ip, [sp, #24]
   3290c:	bl	1495c <XChangeProperty@plt>
   32910:	add	r3, sp, #20
   32914:	ldr	r2, [pc, #48]	; 3294c <g_strcmp0@plt+0x1d780>
   32918:	mov	r0, r5
   3291c:	add	r1, sp, #28
   32920:	bl	1474c <XIfEvent@plt>
   32924:	ldr	r2, [sp, #124]	; 0x7c
   32928:	ldr	r3, [r4]
   3292c:	ldr	r0, [sp, #52]	; 0x34
   32930:	cmp	r2, r3
   32934:	bne	32940 <g_strcmp0@plt+0x1d774>
   32938:	add	sp, sp, #128	; 0x80
   3293c:	pop	{r4, r5, r6, pc}
   32940:	bl	14b6c <__stack_chk_fail@plt>
   32944:	andeq	fp, r4, r8, asr #19
   32948:	andeq	sl, r3, r8, lsr #20
   3294c:	andeq	r2, r3, r8, ror r6
   32950:	ldr	r0, [r0, #8]
   32954:	ldr	r3, [r1]
   32958:	subs	r0, r0, r3
   3295c:	movne	r0, #1
   32960:	bx	lr
   32964:	ldr	r0, [r0, #12]
   32968:	ldr	r3, [r1]
   3296c:	subs	r0, r0, r3
   32970:	movne	r0, #1
   32974:	bx	lr
   32978:	ldr	r2, [r0, #12]
   3297c:	ldr	r3, [r1, #16]
   32980:	cmp	r2, r3
   32984:	beq	32990 <g_strcmp0@plt+0x1d7c4>
   32988:	mov	r0, #1
   3298c:	bx	lr
   32990:	ldr	r0, [r0, #8]
   32994:	ldr	r3, [r1, #20]
   32998:	subs	r0, r0, r3
   3299c:	movne	r0, #1
   329a0:	bx	lr
   329a4:	push	{lr}		; (str lr, [sp, #-4]!)
   329a8:	sub	sp, sp, #20
   329ac:	ldr	r0, [pc, #48]	; 329e4 <g_strcmp0@plt+0x1d818>
   329b0:	bl	14ae8 <g_intern_static_string@plt>
   329b4:	ldr	r1, [pc, #44]	; 329e8 <g_strcmp0@plt+0x1d81c>
   329b8:	mov	r2, #0
   329bc:	mov	r3, #16
   329c0:	stmib	sp, {r1, r2}
   329c4:	str	r3, [sp]
   329c8:	mov	r2, #68	; 0x44
   329cc:	ldr	r3, [pc, #24]	; 329ec <g_strcmp0@plt+0x1d820>
   329d0:	mov	r1, r0
   329d4:	mov	r0, #80	; 0x50
   329d8:	bl	14470 <g_type_register_static_simple@plt>
   329dc:	add	sp, sp, #20
   329e0:	pop	{pc}		; (ldr pc, [sp], #4)
   329e4:	andeq	sl, r3, r4, lsr fp
   329e8:	andeq	r3, r3, r0, asr #25
   329ec:	strdeq	r2, [r3], -r0
   329f0:	push	{r4, lr}
   329f4:	mov	r4, r0
   329f8:	bl	14f8c <g_type_class_peek_parent@plt>
   329fc:	ldr	r1, [pc, #52]	; 32a38 <g_strcmp0@plt+0x1d86c>
   32a00:	ldr	r3, [r1, #4]
   32a04:	cmp	r3, #0
   32a08:	str	r0, [r1]
   32a0c:	bne	32a28 <g_strcmp0@plt+0x1d85c>
   32a10:	ldr	r3, [pc, #36]	; 32a3c <g_strcmp0@plt+0x1d870>
   32a14:	mov	r0, r4
   32a18:	str	r3, [r4, #24]
   32a1c:	mov	r1, #36	; 0x24
   32a20:	pop	{r4, lr}
   32a24:	b	14ce0 <g_type_class_add_private@plt>
   32a28:	add	r1, r1, #4
   32a2c:	mov	r0, r4
   32a30:	bl	144c4 <g_type_class_adjust_private_offset@plt>
   32a34:	b	32a10 <g_strcmp0@plt+0x1d844>
   32a38:	ldrdeq	ip, [r4], -r4
   32a3c:	andeq	r2, r3, r0, asr #20
   32a40:	ldr	r3, [r0, #12]
   32a44:	push	{r4, lr}
   32a48:	mov	r4, r0
   32a4c:	ldr	r0, [r3]
   32a50:	cmp	r0, #0
   32a54:	bne	32a70 <g_strcmp0@plt+0x1d8a4>
   32a58:	ldr	r3, [pc, #24]	; 32a78 <g_strcmp0@plt+0x1d8ac>
   32a5c:	mov	r0, r4
   32a60:	pop	{r4, lr}
   32a64:	ldr	r3, [r3]
   32a68:	ldr	r3, [r3, #24]
   32a6c:	bx	r3
   32a70:	bl	1519c <g_source_remove@plt>
   32a74:	b	32a58 <g_strcmp0@plt+0x1d88c>
   32a78:	ldrdeq	ip, [r4], -r4
   32a7c:	ldr	r3, [r1, #12]
   32a80:	push	{r4, r5, r6, r7, lr}
   32a84:	sub	sp, sp, #60	; 0x3c
   32a88:	ldr	r6, [pc, #244]	; 32b84 <g_strcmp0@plt+0x1d9b8>
   32a8c:	mov	r5, r0
   32a90:	add	lr, sp, #40	; 0x28
   32a94:	mov	r7, r1
   32a98:	ldrd	r0, [r3, #4]
   32a9c:	add	r3, sp, #36	; 0x24
   32aa0:	str	lr, [sp, #20]
   32aa4:	str	r3, [sp, #16]
   32aa8:	add	r2, sp, #48	; 0x30
   32aac:	add	r4, sp, #44	; 0x2c
   32ab0:	mov	lr, #1
   32ab4:	mvn	r3, #-536870912	; 0xe0000000
   32ab8:	str	r2, [sp, #28]
   32abc:	str	r4, [sp, #24]
   32ac0:	ldr	ip, [r6]
   32ac4:	mov	r4, #0
   32ac8:	add	r2, sp, #32
   32acc:	str	r2, [sp, #12]
   32ad0:	ldr	r2, [r5, #8]
   32ad4:	stm	sp, {r3, lr}
   32ad8:	str	r4, [sp, #8]
   32adc:	mov	r3, r4
   32ae0:	str	ip, [sp, #52]	; 0x34
   32ae4:	bl	14560 <XGetWindowProperty@plt>
   32ae8:	ldr	r3, [sp, #32]
   32aec:	cmp	r3, r4
   32af0:	beq	32b4c <g_strcmp0@plt+0x1d980>
   32af4:	ldr	r2, [pc, #140]	; 32b88 <g_strcmp0@plt+0x1d9bc>
   32af8:	ldr	r0, [sp, #48]	; 0x30
   32afc:	ldr	r2, [r2, #8]
   32b00:	cmp	r3, r2
   32b04:	beq	32b70 <g_strcmp0@plt+0x1d9a4>
   32b08:	ldr	r2, [sp, #36]	; 0x24
   32b0c:	str	r3, [r5, #12]
   32b10:	sub	r3, r2, #8
   32b14:	cmp	r3, #24
   32b18:	str	r0, [r5]
   32b1c:	ldrls	r1, [pc, #104]	; 32b8c <g_strcmp0@plt+0x1d9c0>
   32b20:	str	r2, [r5, #16]
   32b24:	ldrls	r4, [r1, r3, lsl #2]
   32b28:	ldr	r3, [sp, #40]	; 0x28
   32b2c:	mul	r4, r4, r3
   32b30:	str	r4, [r5, #4]
   32b34:	ldr	r2, [sp, #52]	; 0x34
   32b38:	ldr	r3, [r6]
   32b3c:	cmp	r2, r3
   32b40:	bne	32b80 <g_strcmp0@plt+0x1d9b4>
   32b44:	add	sp, sp, #60	; 0x3c
   32b48:	pop	{r4, r5, r6, r7, pc}
   32b4c:	ldr	r4, [r7, #12]
   32b50:	mov	r1, r5
   32b54:	ldr	r0, [r4, #16]
   32b58:	bl	14be4 <g_slist_remove@plt>
   32b5c:	mov	r1, r5
   32b60:	str	r0, [r4, #16]
   32b64:	mov	r0, #24
   32b68:	bl	150ac <g_slice_free1@plt>
   32b6c:	b	32b34 <g_strcmp0@plt+0x1d968>
   32b70:	str	r3, [r5, #12]
   32b74:	str	r4, [r5, #4]
   32b78:	bl	14ca4 <XFree@plt>
   32b7c:	b	32b34 <g_strcmp0@plt+0x1d968>
   32b80:	bl	14b6c <__stack_chk_fail@plt>
   32b84:	andeq	fp, r4, r8, asr #19
   32b88:	ldrdeq	ip, [r4], -r4
   32b8c:	ldrdeq	sl, [r3], -r0
   32b90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32b94:	mov	r8, r0
   32b98:	sub	sp, sp, #28
   32b9c:	mov	r9, r1
   32ba0:	lsl	r0, r2, #1
   32ba4:	mov	r1, #4
   32ba8:	mov	r6, r2
   32bac:	bl	143f8 <g_malloc_n@plt>
   32bb0:	cmp	r6, #0
   32bb4:	mov	r7, r0
   32bb8:	ble	32ce4 <g_strcmp0@plt+0x1db18>
   32bbc:	sub	r4, r9, #4
   32bc0:	mov	fp, #0
   32bc4:	ldr	r5, [pc, #292]	; 32cf0 <g_strcmp0@plt+0x1db24>
   32bc8:	add	r6, r4, r6, lsl #2
   32bcc:	mov	sl, fp
   32bd0:	ldr	r3, [r4, #4]!
   32bd4:	ldr	r1, [r5, #12]
   32bd8:	cmp	r3, r1
   32bdc:	beq	32c14 <g_strcmp0@plt+0x1da48>
   32be0:	ldr	r1, [r5, #16]
   32be4:	cmp	r3, r1
   32be8:	beq	32c14 <g_strcmp0@plt+0x1da48>
   32bec:	ldr	r1, [r5, #20]
   32bf0:	cmp	r3, r1
   32bf4:	beq	32c14 <g_strcmp0@plt+0x1da48>
   32bf8:	ldr	r1, [r5, #24]
   32bfc:	cmp	r3, r1
   32c00:	beq	32c14 <g_strcmp0@plt+0x1da48>
   32c04:	ldr	r1, [r5, #28]
   32c08:	cmp	r1, r3
   32c0c:	cmpne	r3, #20
   32c10:	bne	32c84 <g_strcmp0@plt+0x1dab8>
   32c14:	cmp	r4, r6
   32c18:	bne	32bd0 <g_strcmp0@plt+0x1da04>
   32c1c:	mov	r0, r9
   32c20:	bl	14ca4 <XFree@plt>
   32c24:	ldr	r3, [r8, #12]
   32c28:	mov	ip, #0
   32c2c:	mov	r2, #32
   32c30:	ldrd	r0, [r3, #4]
   32c34:	stm	sp, {r2, ip}
   32c38:	ldr	r3, [r5, #32]
   32c3c:	ldr	r2, [r5, #16]
   32c40:	str	fp, [sp, #12]
   32c44:	str	r7, [sp, #8]
   32c48:	bl	1495c <XChangeProperty@plt>
   32c4c:	mov	r0, r7
   32c50:	bl	14bd8 <g_free@plt>
   32c54:	ldr	r2, [r8, #12]
   32c58:	ldr	r3, [r5, #16]
   32c5c:	ldr	r1, [r5, #36]	; 0x24
   32c60:	ldr	ip, [r2, #32]
   32c64:	ldr	r0, [r2, #4]
   32c68:	str	ip, [sp, #4]
   32c6c:	ldr	r2, [r2, #8]
   32c70:	str	r2, [sp]
   32c74:	mov	r2, r3
   32c78:	bl	143e0 <XConvertSelection@plt>
   32c7c:	add	sp, sp, #28
   32c80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32c84:	mov	r0, #24
   32c88:	bl	14d94 <g_slice_alloc@plt>
   32c8c:	ldr	r3, [r8, #12]
   32c90:	ldr	ip, [r4]
   32c94:	mov	r2, #1
   32c98:	str	r3, [sp, #20]
   32c9c:	mov	r1, r0
   32ca0:	str	ip, [r0, #8]
   32ca4:	str	sl, [r0]
   32ca8:	str	sl, [r0, #4]
   32cac:	str	sl, [r0, #12]
   32cb0:	str	sl, [r0, #16]
   32cb4:	str	r2, [r0, #20]
   32cb8:	ldr	r0, [r3, #16]
   32cbc:	bl	145c0 <g_slist_prepend@plt>
   32cc0:	lsl	r1, fp, #2
   32cc4:	ldr	r3, [sp, #20]
   32cc8:	ldr	ip, [r4]
   32ccc:	add	r1, r7, r1
   32cd0:	str	r0, [r3, #16]
   32cd4:	str	ip, [r7, fp, lsl #2]
   32cd8:	add	fp, fp, #2
   32cdc:	str	ip, [r1, #4]
   32ce0:	b	32c14 <g_strcmp0@plt+0x1da48>
   32ce4:	ldr	r5, [pc, #4]	; 32cf0 <g_strcmp0@plt+0x1db24>
   32ce8:	mov	fp, #0
   32cec:	b	32c1c <g_strcmp0@plt+0x1da50>
   32cf0:	ldrdeq	ip, [r4], -r4
   32cf4:	push	{r4, r5, lr}
   32cf8:	mov	r4, r0
   32cfc:	ldr	r3, [r0, #12]
   32d00:	ldr	r5, [pc, #172]	; 32db4 <g_strcmp0@plt+0x1dbe8>
   32d04:	ldr	r2, [pc, #172]	; 32db8 <g_strcmp0@plt+0x1dbec>
   32d08:	sub	sp, sp, #52	; 0x34
   32d0c:	ldr	ip, [r3, #4]
   32d10:	ldr	r0, [r5]
   32d14:	cmp	r1, #0
   32d18:	str	ip, [sp, #20]
   32d1c:	str	r0, [sp, #44]	; 0x2c
   32d20:	ldr	ip, [r3, #24]
   32d24:	ldr	r0, [r2, #40]	; 0x28
   32d28:	ldr	r2, [r2, #44]	; 0x2c
   32d2c:	ldrne	r1, [r3, #28]
   32d30:	ldr	r3, [r3, #32]
   32d34:	str	ip, [sp, #24]
   32d38:	str	r0, [sp, #28]
   32d3c:	mov	ip, #31
   32d40:	mov	r0, #0
   32d44:	str	r2, [sp, #32]
   32d48:	mov	r2, #1
   32d4c:	str	ip, [sp, #8]
   32d50:	str	r0, [sp, #12]
   32d54:	str	r2, [sp, #16]
   32d58:	str	r1, [sp, #36]	; 0x24
   32d5c:	str	r3, [sp, #40]	; 0x28
   32d60:	bl	14830 <gdk_error_trap_push@plt>
   32d64:	ldr	r2, [r4, #12]
   32d68:	add	ip, sp, #8
   32d6c:	mov	r3, #0
   32d70:	ldr	r1, [r2, #24]
   32d74:	ldr	r0, [r2, #4]
   32d78:	mov	r2, r3
   32d7c:	str	ip, [sp]
   32d80:	bl	1450c <XSendEvent@plt>
   32d84:	ldr	r3, [r4, #12]
   32d88:	mov	r1, #0
   32d8c:	ldr	r0, [r3, #4]
   32d90:	bl	15154 <XSync@plt>
   32d94:	bl	14488 <gdk_error_trap_pop@plt>
   32d98:	ldr	r2, [sp, #44]	; 0x2c
   32d9c:	ldr	r3, [r5]
   32da0:	cmp	r2, r3
   32da4:	bne	32db0 <g_strcmp0@plt+0x1dbe4>
   32da8:	add	sp, sp, #52	; 0x34
   32dac:	pop	{r4, r5, pc}
   32db0:	bl	14b6c <__stack_chk_fail@plt>
   32db4:	andeq	fp, r4, r8, asr #19
   32db8:	ldrdeq	ip, [r4], -r4
   32dbc:	push	{r4, r5, r6, lr}
   32dc0:	mov	r4, r1
   32dc4:	sub	sp, sp, #48	; 0x30
   32dc8:	ldr	r3, [r4, #20]
   32dcc:	ldr	r1, [r1, #12]
   32dd0:	str	r3, [sp, #24]
   32dd4:	ldr	r3, [r4, #28]
   32dd8:	ldr	r5, [pc, #144]	; 32e70 <g_strcmp0@plt+0x1dca4>
   32ddc:	cmp	r2, #0
   32de0:	str	r1, [sp, #20]
   32de4:	str	r3, [sp, #32]
   32de8:	ldr	r1, [r4, #24]
   32dec:	mov	r3, #31
   32df0:	str	r3, [sp, #8]
   32df4:	mov	r3, #1
   32df8:	ldrne	r2, [r4, #32]
   32dfc:	str	r1, [sp, #28]
   32e00:	str	r3, [sp, #16]
   32e04:	ldr	r1, [r5]
   32e08:	ldr	r3, [r4, #36]	; 0x24
   32e0c:	str	r1, [sp, #44]	; 0x2c
   32e10:	mov	r1, #0
   32e14:	mov	r6, r0
   32e18:	strd	r2, [sp, #36]	; 0x24
   32e1c:	str	r1, [sp, #12]
   32e20:	bl	14830 <gdk_error_trap_push@plt>
   32e24:	mov	r3, #0
   32e28:	add	r2, sp, #8
   32e2c:	str	r2, [sp]
   32e30:	mov	r2, r3
   32e34:	ldr	r1, [r4, #20]
   32e38:	ldr	r0, [r4, #12]
   32e3c:	bl	1450c <XSendEvent@plt>
   32e40:	ldr	r3, [r6, #12]
   32e44:	mov	r1, #0
   32e48:	ldr	r0, [r3, #4]
   32e4c:	bl	15154 <XSync@plt>
   32e50:	bl	14488 <gdk_error_trap_pop@plt>
   32e54:	ldr	r2, [sp, #44]	; 0x2c
   32e58:	ldr	r3, [r5]
   32e5c:	cmp	r2, r3
   32e60:	bne	32e6c <g_strcmp0@plt+0x1dca0>
   32e64:	add	sp, sp, #48	; 0x30
   32e68:	pop	{r4, r5, r6, pc}
   32e6c:	bl	14b6c <__stack_chk_fail@plt>
   32e70:	andeq	fp, r4, r8, asr #19
   32e74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32e78:	mov	r8, r1
   32e7c:	ldr	r7, [pc, #512]	; 33084 <g_strcmp0@plt+0x1deb8>
   32e80:	ldr	r5, [pc, #512]	; 33088 <g_strcmp0@plt+0x1debc>
   32e84:	ldr	r2, [r0]
   32e88:	ldr	r3, [r7, #12]
   32e8c:	ldr	r1, [r1, #12]
   32e90:	sub	sp, sp, #124	; 0x7c
   32e94:	cmp	r2, r3
   32e98:	ldr	r3, [r5]
   32e9c:	mov	r4, r0
   32ea0:	str	r3, [sp, #116]	; 0x74
   32ea4:	ldr	r0, [r1, #16]
   32ea8:	beq	32f6c <g_strcmp0@plt+0x1dda0>
   32eac:	ldr	r2, [pc, #472]	; 3308c <g_strcmp0@plt+0x1dec0>
   32eb0:	mov	r1, r4
   32eb4:	bl	14f2c <g_slist_find_custom@plt>
   32eb8:	cmp	r0, #0
   32ebc:	beq	32f54 <g_strcmp0@plt+0x1dd88>
   32ec0:	ldr	r6, [r0]
   32ec4:	ldr	r3, [r7, #8]
   32ec8:	ldr	r9, [r6, #12]
   32ecc:	cmp	r9, r3
   32ed0:	moveq	r3, #0
   32ed4:	streq	r3, [r4, #8]
   32ed8:	beq	32f54 <g_strcmp0@plt+0x1dd88>
   32edc:	ldr	sl, [r6, #16]
   32ee0:	ldr	r2, [r6, #20]
   32ee4:	sub	r3, sl, #8
   32ee8:	cmp	r3, #24
   32eec:	add	r2, r2, #1
   32ef0:	str	r2, [r6, #20]
   32ef4:	ldrls	r2, [pc, #404]	; 33090 <g_strcmp0@plt+0x1dec4>
   32ef8:	ldr	fp, [r6, #4]
   32efc:	movhi	r1, #0
   32f00:	ldrls	r1, [r2, r3, lsl #2]
   32f04:	str	r6, [r4, #4]
   32f08:	mov	r0, fp
   32f0c:	bl	341fc <g_strcmp0@plt+0x1f030>
   32f10:	ldr	r3, [r7, #48]	; 0x30
   32f14:	cmp	fp, r3
   32f18:	str	r0, [sp, #20]
   32f1c:	bhi	32ff4 <g_strcmp0@plt+0x1de28>
   32f20:	ldr	r1, [r8, #12]
   32f24:	mov	r2, #0
   32f28:	mov	r3, r9
   32f2c:	ldr	ip, [r1, #4]
   32f30:	str	r0, [sp, #12]
   32f34:	ldr	r1, [r6]
   32f38:	mov	r0, ip
   32f3c:	str	r1, [sp, #8]
   32f40:	str	sl, [sp]
   32f44:	str	r2, [sp, #4]
   32f48:	ldr	r2, [r4, #8]
   32f4c:	ldr	r1, [r4, #12]
   32f50:	bl	1495c <XChangeProperty@plt>
   32f54:	ldr	r2, [sp, #116]	; 0x74
   32f58:	ldr	r3, [r5]
   32f5c:	cmp	r2, r3
   32f60:	bne	33080 <g_strcmp0@plt+0x1deb4>
   32f64:	add	sp, sp, #124	; 0x7c
   32f68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32f6c:	bl	146e0 <g_slist_length@plt>
   32f70:	mov	r1, #4
   32f74:	add	r0, r0, #2
   32f78:	bl	143f8 <g_malloc_n@plt>
   32f7c:	ldr	ip, [r8, #12]
   32f80:	ldr	r1, [r7, #12]
   32f84:	ldr	r2, [r7, #16]
   32f88:	ldr	r3, [ip, #16]
   32f8c:	cmp	r3, #0
   32f90:	mov	r6, r0
   32f94:	str	r1, [r0]
   32f98:	str	r2, [r0, #4]
   32f9c:	beq	33078 <g_strcmp0@plt+0x1deac>
   32fa0:	add	r1, r0, #4
   32fa4:	mov	r2, #2
   32fa8:	ldm	r3, {r0, r3}
   32fac:	add	r2, r2, #1
   32fb0:	ldr	r0, [r0, #8]
   32fb4:	cmp	r3, #0
   32fb8:	str	r0, [r1, #4]!
   32fbc:	bne	32fa8 <g_strcmp0@plt+0x1dddc>
   32fc0:	mov	r1, #0
   32fc4:	mov	r3, #32
   32fc8:	ldr	r0, [ip, #4]
   32fcc:	str	r3, [sp]
   32fd0:	str	r2, [sp, #12]
   32fd4:	stmib	sp, {r1, r6}
   32fd8:	mov	r3, #4
   32fdc:	ldr	r2, [r4, #8]
   32fe0:	ldr	r1, [r4, #12]
   32fe4:	bl	1495c <XChangeProperty@plt>
   32fe8:	mov	r0, r6
   32fec:	bl	14bd8 <g_free@plt>
   32ff0:	b	32f54 <g_strcmp0@plt+0x1dd88>
   32ff4:	mov	r6, #0
   32ff8:	str	r6, [r4, #16]
   32ffc:	bl	14830 <gdk_error_trap_push@plt>
   33000:	ldr	r3, [r8, #12]
   33004:	add	r2, sp, #24
   33008:	ldr	r1, [r4, #12]
   3300c:	ldr	r0, [r3, #4]
   33010:	bl	15070 <XGetWindowAttributes@plt>
   33014:	ldr	r3, [r8, #12]
   33018:	ldr	r2, [sp, #100]	; 0x64
   3301c:	ldr	r1, [r4, #12]
   33020:	ldr	r0, [r3, #4]
   33024:	orr	r2, r2, #4194304	; 0x400000
   33028:	bl	147a0 <XSelectInput@plt>
   3302c:	ldr	r3, [r8, #12]
   33030:	mov	ip, #1
   33034:	add	r1, sp, #20
   33038:	mov	r2, #32
   3303c:	ldr	r0, [r3, #4]
   33040:	str	ip, [sp, #12]
   33044:	str	r6, [sp, #4]
   33048:	str	r1, [sp, #8]
   3304c:	str	r2, [sp]
   33050:	ldr	r3, [r7, #8]
   33054:	ldr	r2, [r4, #8]
   33058:	ldr	r1, [r4, #12]
   3305c:	bl	1495c <XChangeProperty@plt>
   33060:	ldr	r3, [r8, #12]
   33064:	mov	r1, r6
   33068:	ldr	r0, [r3, #4]
   3306c:	bl	15154 <XSync@plt>
   33070:	bl	14488 <gdk_error_trap_pop@plt>
   33074:	b	32f54 <g_strcmp0@plt+0x1dd88>
   33078:	mov	r2, #2
   3307c:	b	32fc0 <g_strcmp0@plt+0x1ddf4>
   33080:	bl	14b6c <__stack_chk_fail@plt>
   33084:	ldrdeq	ip, [r4], -r4
   33088:	andeq	fp, r4, r8, asr #19
   3308c:	andeq	r2, r3, r0, asr r9
   33090:	ldrdeq	sl, [r3], -r0
   33094:	ldr	r3, [r1]
   33098:	cmp	r3, #28
   3309c:	beq	330a8 <g_strcmp0@plt+0x1dedc>
   330a0:	mov	r0, #0
   330a4:	bx	lr
   330a8:	ldr	r3, [r1, #16]
   330ac:	cmp	r2, r3
   330b0:	bne	330a0 <g_strcmp0@plt+0x1ded4>
   330b4:	mov	r3, r1
   330b8:	push	{r4, lr}
   330bc:	mov	r2, #0
   330c0:	ldr	r1, [pc, #20]	; 330dc <g_strcmp0@plt+0x1df10>
   330c4:	ldr	r4, [r3, #20]
   330c8:	bl	1486c <XInternAtom@plt>
   330cc:	sub	r0, r4, r0
   330d0:	clz	r0, r0
   330d4:	lsr	r0, r0, #5
   330d8:	pop	{r4, pc}
   330dc:	andeq	sl, r3, r8, lsr #20
   330e0:	push	{r4, r5, r6, r7, r8, lr}
   330e4:	mov	r6, r2
   330e8:	mov	r5, r1
   330ec:	mov	r7, r0
   330f0:	bl	14998 <gdk_display_get_default@plt>
   330f4:	mov	r1, r5
   330f8:	mov	r8, r0
   330fc:	bl	14b30 <gdk_x11_window_lookup_for_display@plt>
   33100:	cmp	r6, #0
   33104:	mov	r4, r0
   33108:	beq	3312c <g_strcmp0@plt+0x1df60>
   3310c:	cmp	r0, #0
   33110:	beq	3314c <g_strcmp0@plt+0x1df80>
   33114:	bl	14404 <g_object_ref@plt>
   33118:	mov	r2, r7
   3311c:	mov	r0, r4
   33120:	ldr	r1, [pc, #56]	; 33160 <g_strcmp0@plt+0x1df94>
   33124:	pop	{r4, r5, r6, r7, r8, lr}
   33128:	b	144dc <gdk_window_add_filter@plt>
   3312c:	cmp	r0, #0
   33130:	popeq	{r4, r5, r6, r7, r8, pc}
   33134:	mov	r2, r7
   33138:	ldr	r1, [pc, #32]	; 33160 <g_strcmp0@plt+0x1df94>
   3313c:	bl	1447c <gdk_window_remove_filter@plt>
   33140:	mov	r0, r4
   33144:	pop	{r4, r5, r6, r7, r8, lr}
   33148:	b	14e90 <g_object_unref@plt>
   3314c:	mov	r1, r5
   33150:	mov	r0, r8
   33154:	bl	14b90 <gdk_x11_window_foreign_new_for_display@plt>
   33158:	mov	r4, r0
   3315c:	b	33118 <g_strcmp0@plt+0x1df4c>
   33160:	andeq	r3, r3, r0, asr #3
   33164:	push	{r4, r5, r6, lr}
   33168:	mov	r5, r0
   3316c:	ldr	r4, [r0, #4]
   33170:	cmp	r4, #0
   33174:	beq	3318c <g_strcmp0@plt+0x1dfc0>
   33178:	ldr	r3, [r4, #20]
   3317c:	sub	r3, r3, #1
   33180:	cmp	r3, #0
   33184:	str	r3, [r4, #20]
   33188:	beq	3319c <g_strcmp0@plt+0x1dfd0>
   3318c:	mov	r1, r5
   33190:	mov	r0, #20
   33194:	pop	{r4, r5, r6, lr}
   33198:	b	150ac <g_slice_free1@plt>
   3319c:	ldr	r0, [r4]
   331a0:	bl	14bd8 <g_free@plt>
   331a4:	mov	r1, r4
   331a8:	mov	r0, #24
   331ac:	bl	150ac <g_slice_free1@plt>
   331b0:	mov	r1, r5
   331b4:	mov	r0, #20
   331b8:	pop	{r4, r5, r6, lr}
   331bc:	b	150ac <g_slice_free1@plt>
   331c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   331c4:	sub	sp, sp, #84	; 0x54
   331c8:	ldr	r5, [pc, #2576]	; 33be0 <g_strcmp0@plt+0x1ea14>
   331cc:	ldr	r3, [r0]
   331d0:	mov	r6, r2
   331d4:	ldr	r1, [r5]
   331d8:	mov	r2, #0
   331dc:	sub	r3, r3, #17
   331e0:	mov	r4, r0
   331e4:	str	r1, [sp, #76]	; 0x4c
   331e8:	str	r2, [sp, #40]	; 0x28
   331ec:	cmp	r3, #14
   331f0:	ldrls	pc, [pc, r3, lsl #2]
   331f4:	b	33268 <g_strcmp0@plt+0x1e09c>
   331f8:	andeq	r3, r3, r0, lsl #6
   331fc:	andeq	r3, r3, r8, ror #4
   33200:	andeq	r3, r3, r8, ror #4
   33204:	andeq	r3, r3, r8, ror #4
   33208:	andeq	r3, r3, r8, ror #4
   3320c:	andeq	r3, r3, r8, ror #4
   33210:	andeq	r3, r3, r8, ror #4
   33214:	andeq	r3, r3, r8, ror #4
   33218:	andeq	r3, r3, r8, ror #4
   3321c:	andeq	r3, r3, r8, ror #4
   33220:	andeq	r3, r3, r8, ror #4
   33224:	andeq	r3, r3, ip, asr r3
   33228:	andeq	r3, r3, r4, lsr r2
   3322c:	andeq	r3, r3, r0, asr #8
   33230:	andeq	r3, r3, r4, lsl #5
   33234:	ldr	r3, [r6, #12]
   33238:	ldr	r1, [r0, #16]
   3323c:	ldr	r2, [r3, #8]
   33240:	cmp	r1, r2
   33244:	bne	33268 <g_strcmp0@plt+0x1e09c>
   33248:	ldr	r7, [pc, #2452]	; 33be4 <g_strcmp0@plt+0x1ea18>
   3324c:	ldr	r2, [r0, #20]
   33250:	ldr	r1, [r7, #40]	; 0x28
   33254:	cmp	r2, r1
   33258:	beq	336b8 <g_strcmp0@plt+0x1e4ec>
   3325c:	ldr	r1, [r7, #36]	; 0x24
   33260:	cmp	r2, r1
   33264:	beq	33670 <g_strcmp0@plt+0x1e4a4>
   33268:	mov	r0, #0
   3326c:	ldr	r2, [sp, #76]	; 0x4c
   33270:	ldr	r3, [r5]
   33274:	cmp	r2, r3
   33278:	bne	33b54 <g_strcmp0@plt+0x1e988>
   3327c:	add	sp, sp, #84	; 0x54
   33280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33284:	ldr	r3, [r6, #12]
   33288:	ldr	r1, [r0, #16]
   3328c:	ldr	r2, [r3, #8]
   33290:	cmp	r1, r2
   33294:	bne	33268 <g_strcmp0@plt+0x1e09c>
   33298:	ldr	r7, [pc, #2372]	; 33be4 <g_strcmp0@plt+0x1ea18>
   3329c:	ldr	r0, [r0, #20]
   332a0:	ldr	r2, [r7, #36]	; 0x24
   332a4:	cmp	r0, r2
   332a8:	bne	33268 <g_strcmp0@plt+0x1e09c>
   332ac:	ldr	r8, [r4, #28]
   332b0:	ldr	r2, [r7, #12]
   332b4:	cmp	r8, r2
   332b8:	beq	337b0 <g_strcmp0@plt+0x1e5e4>
   332bc:	ldr	r2, [r7, #16]
   332c0:	cmp	r8, r2
   332c4:	beq	33994 <g_strcmp0@plt+0x1e7c8>
   332c8:	cmp	r8, #0
   332cc:	bne	33644 <g_strcmp0@plt+0x1e478>
   332d0:	mov	r1, r8
   332d4:	mov	r0, r6
   332d8:	bl	32cf4 <g_strcmp0@plt+0x1db28>
   332dc:	ldr	r3, [r6, #12]
   332e0:	mov	r0, r6
   332e4:	mov	r2, r8
   332e8:	ldr	r1, [r3, #24]
   332ec:	bl	330e0 <g_strcmp0@plt+0x1df14>
   332f0:	ldr	r3, [r6, #12]
   332f4:	mov	r0, #2
   332f8:	str	r8, [r3, #24]
   332fc:	b	3326c <g_strcmp0@plt+0x1e0a0>
   33300:	ldr	r3, [r6, #12]
   33304:	ldr	r1, [r0, #20]
   33308:	ldr	r2, [r3, #24]
   3330c:	cmp	r1, r2
   33310:	bne	33268 <g_strcmp0@plt+0x1e09c>
   33314:	ldr	r0, [r3, #16]
   33318:	mov	r2, #0
   3331c:	ldr	r1, [pc, #2244]	; 33be8 <g_strcmp0@plt+0x1ea1c>
   33320:	bl	14f08 <g_slist_foreach@plt>
   33324:	ldr	r3, [r6, #12]
   33328:	mov	r4, #0
   3332c:	ldr	r0, [r3, #16]
   33330:	bl	151c0 <g_slist_free@plt>
   33334:	ldr	r3, [r6, #12]
   33338:	mov	r0, r6
   3333c:	mov	r2, r4
   33340:	str	r4, [r3, #16]
   33344:	ldr	r1, [r3, #24]
   33348:	bl	330e0 <g_strcmp0@plt+0x1df14>
   3334c:	ldr	r3, [r6, #12]
   33350:	mov	r0, r4
   33354:	str	r4, [r3, #24]
   33358:	b	3326c <g_strcmp0@plt+0x1e0a0>
   3335c:	ldr	r7, [r0, #28]
   33360:	ldr	r2, [r6, #12]
   33364:	cmp	r7, #0
   33368:	bne	33598 <g_strcmp0@plt+0x1e3cc>
   3336c:	ldr	r1, [r0, #16]
   33370:	ldr	r3, [r2, #8]
   33374:	cmp	r1, r3
   33378:	bne	33268 <g_strcmp0@plt+0x1e09c>
   3337c:	ldr	r0, [r2, #16]
   33380:	add	r1, r4, #20
   33384:	ldr	r2, [pc, #2144]	; 33bec <g_strcmp0@plt+0x1ea20>
   33388:	bl	14f2c <g_slist_find_custom@plt>
   3338c:	cmp	r0, #0
   33390:	beq	33268 <g_strcmp0@plt+0x1e09c>
   33394:	ldr	r8, [r0]
   33398:	ldr	r3, [pc, #2116]	; 33be4 <g_strcmp0@plt+0x1ea18>
   3339c:	ldr	r2, [r8, #12]
   333a0:	ldr	r3, [r3, #8]
   333a4:	cmp	r2, r3
   333a8:	bne	33268 <g_strcmp0@plt+0x1e09c>
   333ac:	add	r0, sp, #56	; 0x38
   333b0:	str	r0, [sp, #24]
   333b4:	add	r2, sp, #60	; 0x3c
   333b8:	add	r0, sp, #44	; 0x2c
   333bc:	str	r2, [sp, #28]
   333c0:	str	r0, [sp, #12]
   333c4:	add	r1, sp, #52	; 0x34
   333c8:	add	r2, sp, #48	; 0x30
   333cc:	add	r0, r4, #12
   333d0:	str	r1, [sp, #20]
   333d4:	str	r2, [sp, #16]
   333d8:	mov	r1, #1
   333dc:	mvn	r2, #-536870912	; 0xe0000000
   333e0:	str	r7, [sp, #8]
   333e4:	mov	r3, r7
   333e8:	str	r1, [sp, #4]
   333ec:	str	r2, [sp]
   333f0:	ldm	r0, {r0, r1, r2}
   333f4:	bl	14560 <XGetWindowProperty@plt>
   333f8:	ldr	r2, [sp, #48]	; 0x30
   333fc:	sub	r3, r2, #8
   33400:	cmp	r3, #24
   33404:	bls	33748 <g_strcmp0@plt+0x1e57c>
   33408:	ldr	r1, [r6, #12]
   3340c:	ldr	r3, [sp, #44]	; 0x2c
   33410:	str	r2, [r8, #16]
   33414:	ldr	r0, [r1, #16]
   33418:	ldr	r2, [pc, #2000]	; 33bf0 <g_strcmp0@plt+0x1ea24>
   3341c:	str	r3, [r8, #12]
   33420:	ldr	r1, [pc, #1996]	; 33bf4 <g_strcmp0@plt+0x1ea28>
   33424:	bl	14f2c <g_slist_find_custom@plt>
   33428:	subs	r4, r0, #0
   3342c:	beq	33b3c <g_strcmp0@plt+0x1e970>
   33430:	ldr	r0, [sp, #60]	; 0x3c
   33434:	bl	14ca4 <XFree@plt>
   33438:	mov	r0, #2
   3343c:	b	3326c <g_strcmp0@plt+0x1e0a0>
   33440:	ldr	r3, [r6, #12]
   33444:	ldr	r1, [r0, #16]
   33448:	ldr	r2, [r3, #8]
   3344c:	cmp	r1, r2
   33450:	bne	33268 <g_strcmp0@plt+0x1e09c>
   33454:	ldr	r7, [pc, #1928]	; 33be4 <g_strcmp0@plt+0x1ea18>
   33458:	ldr	r2, [r0, #24]
   3345c:	ldr	r1, [r7, #40]	; 0x28
   33460:	cmp	r2, r1
   33464:	beq	33700 <g_strcmp0@plt+0x1e534>
   33468:	ldr	r3, [r7, #36]	; 0x24
   3346c:	cmp	r2, r3
   33470:	bne	33268 <g_strcmp0@plt+0x1e09c>
   33474:	ldr	r2, [r0, #28]
   33478:	ldr	r3, [r7, #16]
   3347c:	mov	r8, #0
   33480:	cmp	r2, r3
   33484:	str	r8, [sp, #44]	; 0x2c
   33488:	beq	338c4 <g_strcmp0@plt+0x1e6f8>
   3348c:	mov	r0, #20
   33490:	str	r8, [sp, #60]	; 0x3c
   33494:	bl	14d94 <g_slice_alloc@plt>
   33498:	ldr	r1, [r4, #20]
   3349c:	ldr	r2, [r4, #28]
   334a0:	mov	r3, r0
   334a4:	str	r8, [r0, #4]
   334a8:	str	r1, [r3, #12]
   334ac:	ldr	r1, [r4, #32]
   334b0:	str	r2, [r3]
   334b4:	mvn	r2, #0
   334b8:	mov	r0, r8
   334bc:	str	r1, [r3, #8]
   334c0:	str	r2, [r3, #16]
   334c4:	mov	r1, r3
   334c8:	bl	145c0 <g_slist_prepend@plt>
   334cc:	mov	r8, r0
   334d0:	mov	r2, r6
   334d4:	ldr	r1, [pc, #1820]	; 33bf8 <g_strcmp0@plt+0x1ea2c>
   334d8:	mov	r0, r8
   334dc:	bl	14f08 <g_slist_foreach@plt>
   334e0:	ldr	r2, [r8, #4]
   334e4:	cmp	r2, #0
   334e8:	beq	33a20 <g_strcmp0@plt+0x1e854>
   334ec:	ldr	ip, [sp, #60]	; 0x3c
   334f0:	cmp	ip, #0
   334f4:	beq	33560 <g_strcmp0@plt+0x1e394>
   334f8:	mov	r1, r8
   334fc:	mov	r3, #0
   33500:	sub	lr, ip, #4
   33504:	b	33510 <g_strcmp0@plt+0x1e344>
   33508:	mov	r1, r2
   3350c:	ldr	r2, [r2, #4]
   33510:	ldr	r1, [r1]
   33514:	cmp	r2, #0
   33518:	ldr	r0, [r1]
   3351c:	str	r0, [ip, r3, lsl #2]
   33520:	add	r3, r3, #2
   33524:	ldr	r1, [r1, #8]
   33528:	str	r1, [lr, r3, lsl #2]
   3352c:	bne	33508 <g_strcmp0@plt+0x1e33c>
   33530:	ldr	r0, [sp, #52]	; 0x34
   33534:	mov	r1, #0
   33538:	mov	r2, #32
   3353c:	str	ip, [sp, #8]
   33540:	ldr	r3, [r7, #32]
   33544:	str	r0, [sp, #12]
   33548:	str	r1, [sp, #4]
   3354c:	str	r2, [sp]
   33550:	ldr	r2, [r4, #32]
   33554:	ldr	r1, [r4, #20]
   33558:	ldr	r0, [r4, #12]
   3355c:	bl	1495c <XChangeProperty@plt>
   33560:	mov	r1, r4
   33564:	mov	r2, #1
   33568:	mov	r0, r6
   3356c:	bl	32dbc <g_strcmp0@plt+0x1dbf0>
   33570:	mov	r2, r6
   33574:	ldr	r1, [pc, #1664]	; 33bfc <g_strcmp0@plt+0x1ea30>
   33578:	mov	r0, r8
   3357c:	bl	14f08 <g_slist_foreach@plt>
   33580:	mov	r0, r8
   33584:	bl	151c0 <g_slist_free@plt>
   33588:	ldr	r0, [sp, #60]	; 0x3c
   3358c:	bl	14bd8 <g_free@plt>
   33590:	mov	r0, #2
   33594:	b	3326c <g_strcmp0@plt+0x1e0a0>
   33598:	mov	r1, r0
   3359c:	ldr	r0, [r2, #20]
   335a0:	ldr	r2, [pc, #1624]	; 33c00 <g_strcmp0@plt+0x1ea34>
   335a4:	bl	14f2c <g_slist_find_custom@plt>
   335a8:	cmp	r0, #0
   335ac:	beq	33268 <g_strcmp0@plt+0x1e09c>
   335b0:	ldr	r8, [r0]
   335b4:	ldr	r1, [pc, #1576]	; 33be4 <g_strcmp0@plt+0x1ea18>
   335b8:	mov	r4, #2
   335bc:	ldr	r3, [r8, #4]
   335c0:	ldr	r2, [r8, #16]
   335c4:	ldr	r1, [r1, #48]	; 0x30
   335c8:	ldr	r7, [r3, #4]
   335cc:	ldr	r9, [r3, #16]
   335d0:	sub	r7, r7, r2
   335d4:	cmp	r7, r1
   335d8:	movcs	r7, r1
   335dc:	add	r1, r2, r7
   335e0:	ldr	sl, [r3]
   335e4:	str	r1, [r8, #16]
   335e8:	sub	r1, r9, #8
   335ec:	cmp	r1, #24
   335f0:	add	sl, sl, r2
   335f4:	ldrls	r2, [pc, #1544]	; 33c04 <g_strcmp0@plt+0x1ea38>
   335f8:	ldr	r3, [r3, #12]
   335fc:	movhi	r1, #0
   33600:	ldrls	r1, [r2, r1, lsl #2]
   33604:	ldr	r2, [r6, #12]
   33608:	mov	r0, r7
   3360c:	str	r3, [sp, #36]	; 0x24
   33610:	ldr	fp, [r2, #4]
   33614:	bl	341fc <g_strcmp0@plt+0x1f030>
   33618:	ldr	r2, [r8, #8]
   3361c:	ldr	r1, [r8, #12]
   33620:	ldr	r3, [sp, #36]	; 0x24
   33624:	str	sl, [sp, #8]
   33628:	str	r9, [sp]
   3362c:	str	r4, [sp, #4]
   33630:	str	r0, [sp, #12]
   33634:	mov	r0, fp
   33638:	bl	1495c <XChangeProperty@plt>
   3363c:	cmp	r7, #0
   33640:	beq	3364c <g_strcmp0@plt+0x1e480>
   33644:	mov	r0, #2
   33648:	b	3326c <g_strcmp0@plt+0x1e0a0>
   3364c:	ldr	r6, [r6, #12]
   33650:	mov	r1, r8
   33654:	ldr	r0, [r6, #20]
   33658:	bl	14be4 <g_slist_remove@plt>
   3365c:	str	r0, [r6, #20]
   33660:	mov	r0, r8
   33664:	bl	33164 <g_strcmp0@plt+0x1df98>
   33668:	mov	r0, r4
   3366c:	b	3326c <g_strcmp0@plt+0x1e0a0>
   33670:	ldr	r0, [r3, #16]
   33674:	mov	r2, #0
   33678:	ldr	r1, [pc, #1384]	; 33be8 <g_strcmp0@plt+0x1ea1c>
   3367c:	bl	14f08 <g_slist_foreach@plt>
   33680:	ldr	r3, [r6, #12]
   33684:	mov	r4, #0
   33688:	ldr	r0, [r3, #16]
   3368c:	bl	151c0 <g_slist_free@plt>
   33690:	ldr	r3, [r6, #12]
   33694:	mov	r2, r4
   33698:	mov	r0, r6
   3369c:	str	r4, [r3, #16]
   336a0:	ldr	r1, [r3, #24]
   336a4:	bl	330e0 <g_strcmp0@plt+0x1df14>
   336a8:	ldr	r3, [r6, #12]
   336ac:	mov	r0, #2
   336b0:	str	r4, [r3, #24]
   336b4:	b	3326c <g_strcmp0@plt+0x1e0a0>
   336b8:	ldr	r0, [r3, #16]
   336bc:	cmp	r0, #0
   336c0:	beq	33644 <g_strcmp0@plt+0x1e478>
   336c4:	mov	r2, #0
   336c8:	ldr	r1, [pc, #1304]	; 33be8 <g_strcmp0@plt+0x1ea1c>
   336cc:	bl	14f08 <g_slist_foreach@plt>
   336d0:	ldr	r3, [r6, #12]
   336d4:	ldr	r0, [r3, #16]
   336d8:	bl	151c0 <g_slist_free@plt>
   336dc:	ldr	r0, [r6, #12]
   336e0:	mov	r2, #0
   336e4:	ldr	r1, [r7, #36]	; 0x24
   336e8:	str	r2, [r0, #16]
   336ec:	ldr	r3, [r0, #32]
   336f0:	ldr	r0, [r0, #4]
   336f4:	bl	14b00 <XSetSelectionOwner@plt>
   336f8:	mov	r0, #2
   336fc:	b	3326c <g_strcmp0@plt+0x1e0a0>
   33700:	ldr	r1, [r0, #28]
   33704:	ldr	ip, [r7, #44]	; 0x2c
   33708:	mov	r2, #0
   3370c:	cmp	r1, ip
   33710:	str	r2, [sp, #44]	; 0x2c
   33714:	str	r2, [sp, #60]	; 0x3c
   33718:	beq	33814 <g_strcmp0@plt+0x1e648>
   3371c:	ldr	lr, [r7, #56]	; 0x38
   33720:	cmp	r1, lr
   33724:	beq	33ab4 <g_strcmp0@plt+0x1e8e8>
   33728:	ldr	r0, [r7, #12]
   3372c:	cmp	r1, r0
   33730:	beq	33a64 <g_strcmp0@plt+0x1e898>
   33734:	mov	r1, r4
   33738:	mov	r0, r6
   3373c:	mov	r2, #0
   33740:	bl	32dbc <g_strcmp0@plt+0x1dbf0>
   33744:	b	33644 <g_strcmp0@plt+0x1e478>
   33748:	ldr	r1, [pc, #1204]	; 33c04 <g_strcmp0@plt+0x1ea38>
   3374c:	ldr	r4, [sp, #52]	; 0x34
   33750:	ldr	r3, [r1, r3, lsl #2]
   33754:	mul	r4, r4, r3
   33758:	cmp	r4, #0
   3375c:	beq	33408 <g_strcmp0@plt+0x1e23c>
   33760:	ldr	r0, [r8]
   33764:	cmp	r0, #0
   33768:	beq	33a10 <g_strcmp0@plt+0x1e844>
   3376c:	ldr	r1, [r8, #4]
   33770:	add	r6, r4, #1
   33774:	add	r1, r6, r1
   33778:	bl	14f68 <g_realloc@plt>
   3377c:	ldr	r3, [r8, #4]
   33780:	mov	r2, r6
   33784:	str	r0, [r8]
   33788:	ldr	r1, [sp, #60]	; 0x3c
   3378c:	add	r0, r0, r3
   33790:	bl	14e48 <memcpy@plt>
   33794:	ldr	r3, [r8, #4]
   33798:	ldr	r0, [sp, #60]	; 0x3c
   3379c:	add	r4, r3, r4
   337a0:	str	r4, [r8, #4]
   337a4:	bl	14ca4 <XFree@plt>
   337a8:	mov	r0, #2
   337ac:	b	3326c <g_strcmp0@plt+0x1e0a0>
   337b0:	add	ip, sp, #40	; 0x28
   337b4:	add	r3, sp, #60	; 0x3c
   337b8:	ldr	r0, [r4, #12]
   337bc:	str	ip, [sp, #28]
   337c0:	str	r3, [sp, #24]
   337c4:	add	ip, sp, #56	; 0x38
   337c8:	add	r3, sp, #52	; 0x34
   337cc:	str	ip, [sp, #20]
   337d0:	str	r3, [sp, #16]
   337d4:	add	ip, sp, #48	; 0x30
   337d8:	mov	r3, #4
   337dc:	str	ip, [sp, #12]
   337e0:	str	r3, [sp, #8]
   337e4:	mov	ip, #1
   337e8:	mvn	r3, #-536870912	; 0xe0000000
   337ec:	mov	r2, r8
   337f0:	stm	sp, {r3, ip}
   337f4:	mov	r3, #0
   337f8:	bl	14560 <XGetWindowProperty@plt>
   337fc:	mov	r0, r6
   33800:	ldr	r2, [sp, #56]	; 0x38
   33804:	ldr	r1, [sp, #40]	; 0x28
   33808:	bl	32b90 <g_strcmp0@plt+0x1d9c4>
   3380c:	mov	r0, #2
   33810:	b	3326c <g_strcmp0@plt+0x1e0a0>
   33814:	ldr	r2, [r3, #24]
   33818:	cmp	r2, #0
   3381c:	bne	33734 <g_strcmp0@plt+0x1e568>
   33820:	ldr	r8, [r3, #16]
   33824:	cmp	r8, #0
   33828:	bne	33734 <g_strcmp0@plt+0x1e568>
   3382c:	bl	14830 <gdk_error_trap_push@plt>
   33830:	mov	r2, #1
   33834:	ldr	r1, [r4, #20]
   33838:	mov	r0, r6
   3383c:	bl	330e0 <g_strcmp0@plt+0x1df14>
   33840:	ldr	r3, [r6, #12]
   33844:	mov	r2, #131072	; 0x20000
   33848:	ldr	r1, [r4, #20]
   3384c:	ldr	r0, [r3, #4]
   33850:	bl	147a0 <XSelectInput@plt>
   33854:	ldr	r3, [r6, #12]
   33858:	mov	r1, r8
   3385c:	ldr	r0, [r3, #4]
   33860:	bl	15154 <XSync@plt>
   33864:	bl	14488 <gdk_error_trap_pop@plt>
   33868:	subs	r8, r0, #0
   3386c:	bne	33644 <g_strcmp0@plt+0x1e478>
   33870:	bl	14830 <gdk_error_trap_push@plt>
   33874:	ldr	r2, [r4, #32]
   33878:	cmp	r2, #0
   3387c:	bne	33b6c <g_strcmp0@plt+0x1e9a0>
   33880:	ldr	r0, [r6, #12]
   33884:	ldr	r3, [r4, #36]	; 0x24
   33888:	ldr	r1, [r4, #20]
   3388c:	strd	r2, [r0, #28]
   33890:	str	r1, [r0, #24]
   33894:	ldr	r2, [sp, #44]	; 0x2c
   33898:	cmp	r2, #0
   3389c:	bne	33b58 <g_strcmp0@plt+0x1e98c>
   338a0:	str	r3, [sp, #4]
   338a4:	ldr	r3, [r7, #12]
   338a8:	ldr	r2, [r0, #8]
   338ac:	ldr	r1, [r7, #36]	; 0x24
   338b0:	str	r2, [sp]
   338b4:	mov	r2, r3
   338b8:	ldr	r0, [r0, #4]
   338bc:	bl	143e0 <XConvertSelection@plt>
   338c0:	b	33644 <g_strcmp0@plt+0x1e478>
   338c4:	ldr	r2, [r7, #32]
   338c8:	add	r3, sp, #60	; 0x3c
   338cc:	str	r2, [sp, #8]
   338d0:	str	r3, [sp, #28]
   338d4:	add	ip, sp, #56	; 0x38
   338d8:	add	r0, sp, #52	; 0x34
   338dc:	add	r1, sp, #48	; 0x30
   338e0:	add	r2, sp, #44	; 0x2c
   338e4:	mvn	r3, #-536870912	; 0xe0000000
   338e8:	str	r3, [sp]
   338ec:	str	r8, [sp, #4]
   338f0:	str	ip, [sp, #24]
   338f4:	str	r0, [sp, #20]
   338f8:	str	r1, [sp, #16]
   338fc:	str	r2, [sp, #12]
   33900:	mov	r3, r8
   33904:	ldr	r2, [r4, #32]
   33908:	ldr	r1, [r4, #20]
   3390c:	ldr	r0, [r4, #12]
   33910:	bl	14560 <XGetWindowProperty@plt>
   33914:	ldr	r2, [sp, #44]	; 0x2c
   33918:	ldr	r3, [r7, #32]
   3391c:	cmp	r2, r3
   33920:	bne	33a50 <g_strcmp0@plt+0x1e884>
   33924:	ldr	r3, [sp, #52]	; 0x34
   33928:	cmp	r3, r8
   3392c:	beq	33a50 <g_strcmp0@plt+0x1e884>
   33930:	mov	sl, r8
   33934:	mov	r9, r8
   33938:	mov	fp, r8
   3393c:	mov	r0, #20
   33940:	bl	14d94 <g_slice_alloc@plt>
   33944:	ldr	r1, [sp, #60]	; 0x3c
   33948:	ldr	ip, [r4, #20]
   3394c:	mvn	r2, #0
   33950:	add	r9, r9, #2
   33954:	mov	r3, r0
   33958:	mov	r0, r8
   3395c:	str	ip, [r3, #12]
   33960:	ldr	ip, [r1, sl]!
   33964:	add	sl, sl, #8
   33968:	str	ip, [r3]
   3396c:	ldr	ip, [r1, #4]
   33970:	mov	r1, r3
   33974:	str	r2, [r3, #16]
   33978:	stmib	r3, {fp, ip}
   3397c:	bl	145c0 <g_slist_prepend@plt>
   33980:	ldr	r3, [sp, #52]	; 0x34
   33984:	cmp	r9, r3
   33988:	mov	r8, r0
   3398c:	bcc	3393c <g_strcmp0@plt+0x1e770>
   33990:	b	334d0 <g_strcmp0@plt+0x1e304>
   33994:	ldr	r0, [r3, #16]
   33998:	bl	143c8 <g_slist_copy@plt>
   3399c:	mov	r2, r6
   339a0:	ldr	r1, [pc, #608]	; 33c08 <g_strcmp0@plt+0x1ea3c>
   339a4:	mov	r8, r0
   339a8:	bl	14f08 <g_slist_foreach@plt>
   339ac:	mov	r0, r8
   339b0:	bl	151c0 <g_slist_free@plt>
   339b4:	ldr	r0, [r6, #12]
   339b8:	ldr	r3, [r4, #32]
   339bc:	ldr	r1, [r7, #36]	; 0x24
   339c0:	str	r3, [r0, #32]
   339c4:	ldmib	r0, {r0, r2}
   339c8:	bl	14b00 <XSetSelectionOwner@plt>
   339cc:	ldr	r0, [r6, #12]
   339d0:	ldr	r2, [r0, #28]
   339d4:	cmp	r2, #0
   339d8:	bne	33af4 <g_strcmp0@plt+0x1e928>
   339dc:	ldr	r0, [r0, #16]
   339e0:	ldr	r2, [pc, #520]	; 33bf0 <g_strcmp0@plt+0x1ea24>
   339e4:	ldr	r1, [pc, #520]	; 33bf4 <g_strcmp0@plt+0x1ea28>
   339e8:	bl	14f2c <g_slist_find_custom@plt>
   339ec:	subs	r4, r0, #0
   339f0:	bne	33644 <g_strcmp0@plt+0x1e478>
   339f4:	mov	r0, r6
   339f8:	mov	r1, #1
   339fc:	bl	32cf4 <g_strcmp0@plt+0x1db28>
   33a00:	ldr	r3, [r6, #12]
   33a04:	mov	r2, r4
   33a08:	mov	r0, r6
   33a0c:	b	336a0 <g_strcmp0@plt+0x1e4d4>
   33a10:	ldr	r3, [sp, #60]	; 0x3c
   33a14:	mov	r0, #2
   33a18:	stm	r8, {r3, r4}
   33a1c:	b	3326c <g_strcmp0@plt+0x1e0a0>
   33a20:	ldr	r3, [r8]
   33a24:	ldr	r2, [r3, #8]
   33a28:	cmp	r2, #0
   33a2c:	beq	33b2c <g_strcmp0@plt+0x1e960>
   33a30:	ldr	ip, [sp, #60]	; 0x3c
   33a34:	cmp	ip, #0
   33a38:	beq	33560 <g_strcmp0@plt+0x1e394>
   33a3c:	ldr	r2, [r3]
   33a40:	str	r2, [ip]
   33a44:	ldr	r3, [r3, #8]
   33a48:	str	r3, [ip, #4]
   33a4c:	b	33530 <g_strcmp0@plt+0x1e364>
   33a50:	ldr	r0, [sp, #60]	; 0x3c
   33a54:	cmp	r0, #0
   33a58:	beq	33644 <g_strcmp0@plt+0x1e478>
   33a5c:	bl	14bd8 <g_free@plt>
   33a60:	b	33644 <g_strcmp0@plt+0x1e478>
   33a64:	ldr	r0, [r3, #4]
   33a68:	mov	r3, #3
   33a6c:	str	r2, [sp, #4]
   33a70:	str	r3, [sp, #12]
   33a74:	add	r2, sp, #64	; 0x40
   33a78:	mov	r3, #32
   33a7c:	str	r3, [sp]
   33a80:	str	r2, [sp, #8]
   33a84:	str	r1, [sp, #64]	; 0x40
   33a88:	ldr	r2, [r4, #32]
   33a8c:	ldr	r1, [r4, #20]
   33a90:	mov	r3, #4
   33a94:	str	lr, [sp, #68]	; 0x44
   33a98:	str	ip, [sp, #72]	; 0x48
   33a9c:	bl	1495c <XChangeProperty@plt>
   33aa0:	mov	r1, r4
   33aa4:	mov	r0, r6
   33aa8:	mov	r2, #1
   33aac:	bl	32dbc <g_strcmp0@plt+0x1dbf0>
   33ab0:	b	33644 <g_strcmp0@plt+0x1e478>
   33ab4:	ldr	r0, [r3, #4]
   33ab8:	add	r3, r3, #12
   33abc:	mov	r7, #1
   33ac0:	mov	r1, #32
   33ac4:	strd	r2, [sp, #4]
   33ac8:	str	r7, [sp, #12]
   33acc:	str	r1, [sp]
   33ad0:	mov	r3, #19
   33ad4:	ldr	r2, [r4, #32]
   33ad8:	ldr	r1, [r4, #20]
   33adc:	bl	1495c <XChangeProperty@plt>
   33ae0:	mov	r2, r7
   33ae4:	mov	r1, r4
   33ae8:	mov	r0, r6
   33aec:	bl	32dbc <g_strcmp0@plt+0x1dbf0>
   33af0:	b	33644 <g_strcmp0@plt+0x1e478>
   33af4:	mov	ip, #1
   33af8:	mov	r1, #0
   33afc:	mov	r3, #32
   33b00:	add	r7, r7, #52	; 0x34
   33b04:	str	r3, [sp]
   33b08:	str	r7, [sp, #8]
   33b0c:	str	ip, [sp, #12]
   33b10:	str	r1, [sp, #4]
   33b14:	mov	r3, #4
   33b18:	ldr	r1, [r0, #24]
   33b1c:	ldr	r0, [r0, #4]
   33b20:	bl	1495c <XChangeProperty@plt>
   33b24:	ldr	r0, [r6, #12]
   33b28:	b	339dc <g_strcmp0@plt+0x1e810>
   33b2c:	mov	r1, r4
   33b30:	mov	r0, r6
   33b34:	bl	32dbc <g_strcmp0@plt+0x1dbf0>
   33b38:	b	33570 <g_strcmp0@plt+0x1e3a4>
   33b3c:	mov	r1, #1
   33b40:	mov	r0, r6
   33b44:	bl	32cf4 <g_strcmp0@plt+0x1db28>
   33b48:	ldr	r3, [r6, #12]
   33b4c:	str	r4, [r3, #24]
   33b50:	b	33430 <g_strcmp0@plt+0x1e264>
   33b54:	bl	14b6c <__stack_chk_fail@plt>
   33b58:	mov	r0, r6
   33b5c:	ldr	r2, [sp, #52]	; 0x34
   33b60:	ldr	r1, [sp, #60]	; 0x3c
   33b64:	bl	32b90 <g_strcmp0@plt+0x1d9c4>
   33b68:	b	33644 <g_strcmp0@plt+0x1e478>
   33b6c:	add	r1, sp, #60	; 0x3c
   33b70:	ldr	r0, [r6, #12]
   33b74:	add	ip, sp, #56	; 0x38
   33b78:	str	r1, [sp, #28]
   33b7c:	add	r1, sp, #52	; 0x34
   33b80:	str	ip, [sp, #24]
   33b84:	str	r1, [sp, #20]
   33b88:	add	ip, sp, #48	; 0x30
   33b8c:	add	r1, sp, #44	; 0x2c
   33b90:	str	ip, [sp, #16]
   33b94:	str	r1, [sp, #12]
   33b98:	mov	ip, #4
   33b9c:	mvn	r1, #-536870912	; 0xe0000000
   33ba0:	str	ip, [sp, #8]
   33ba4:	str	r8, [sp, #4]
   33ba8:	str	r1, [sp]
   33bac:	mov	r3, r8
   33bb0:	ldr	r1, [r4, #20]
   33bb4:	ldr	r0, [r0, #4]
   33bb8:	bl	14560 <XGetWindowProperty@plt>
   33bbc:	bl	14488 <gdk_error_trap_pop@plt>
   33bc0:	cmp	r0, #0
   33bc4:	ldreq	r2, [r4, #32]
   33bc8:	beq	33880 <g_strcmp0@plt+0x1e6b4>
   33bcc:	ldr	r0, [sp, #60]	; 0x3c
   33bd0:	cmp	r0, #0
   33bd4:	beq	33644 <g_strcmp0@plt+0x1e478>
   33bd8:	bl	14ca4 <XFree@plt>
   33bdc:	b	33644 <g_strcmp0@plt+0x1e478>
   33be0:	andeq	fp, r4, r8, asr #19
   33be4:	ldrdeq	ip, [r4], -r4
   33be8:	andeq	r3, r3, ip, lsr ip
   33bec:	andeq	r2, r3, r0, asr r9
   33bf0:	andeq	r2, r3, r4, ror #18
   33bf4:	ldrdeq	ip, [r4], -ip	; <UNPREDICTABLE>
   33bf8:	andeq	r2, r3, r4, ror lr
   33bfc:	andeq	r3, r3, ip, lsl #24
   33c00:	andeq	r2, r3, r8, ror r9
   33c04:	ldrdeq	sl, [r3], -r0
   33c08:	andeq	r2, r3, ip, ror sl
   33c0c:	ldr	r2, [r0, #16]
   33c10:	cmp	r2, #0
   33c14:	blt	33c38 <g_strcmp0@plt+0x1ea6c>
   33c18:	mov	r2, r1
   33c1c:	push	{r4, lr}
   33c20:	mov	r1, r0
   33c24:	ldr	r4, [r2, #12]
   33c28:	ldr	r0, [r4, #20]
   33c2c:	bl	145c0 <g_slist_prepend@plt>
   33c30:	str	r0, [r4, #20]
   33c34:	pop	{r4, pc}
   33c38:	b	33164 <g_strcmp0@plt+0x1df98>
   33c3c:	ldr	r3, [r0, #20]
   33c40:	sub	r3, r3, #1
   33c44:	cmp	r3, #0
   33c48:	str	r3, [r0, #20]
   33c4c:	bxne	lr
   33c50:	push	{r4, lr}
   33c54:	mov	r4, r0
   33c58:	ldr	r0, [r0]
   33c5c:	bl	14bd8 <g_free@plt>
   33c60:	mov	r1, r4
   33c64:	mov	r0, #24
   33c68:	pop	{r4, lr}
   33c6c:	b	150ac <g_slice_free1@plt>
   33c70:	push	{r4, lr}
   33c74:	mcr	15, 0, r0, cr7, cr10, {5}
   33c78:	ldr	r4, [pc, #60]	; 33cbc <g_strcmp0@plt+0x1eaf0>
   33c7c:	ldr	r3, [r4, #60]	; 0x3c
   33c80:	mcr	15, 0, r0, cr7, cr10, {5}
   33c84:	cmp	r3, #0
   33c88:	beq	33c94 <g_strcmp0@plt+0x1eac8>
   33c8c:	ldr	r0, [r4, #60]	; 0x3c
   33c90:	pop	{r4, pc}
   33c94:	add	r0, r4, #60	; 0x3c
   33c98:	bl	14a28 <g_once_init_enter@plt>
   33c9c:	cmp	r0, #0
   33ca0:	beq	33c8c <g_strcmp0@plt+0x1eac0>
   33ca4:	bl	329a4 <g_strcmp0@plt+0x1d7d8>
   33ca8:	mov	r1, r0
   33cac:	add	r0, r4, #60	; 0x3c
   33cb0:	bl	14ed8 <g_once_init_leave@plt>
   33cb4:	ldr	r0, [r4, #60]	; 0x3c
   33cb8:	pop	{r4, pc}
   33cbc:	ldrdeq	ip, [r4], -r4
   33cc0:	push	{r4, lr}
   33cc4:	mov	r4, r0
   33cc8:	bl	33c70 <g_strcmp0@plt+0x1eaa4>
   33ccc:	mov	r1, r0
   33cd0:	mov	r0, r4
   33cd4:	bl	149c8 <g_type_instance_get_private@plt>
   33cd8:	str	r0, [r4, #12]
   33cdc:	bl	14998 <gdk_display_get_default@plt>
   33ce0:	ldr	r4, [r4, #12]
   33ce4:	bl	15160 <gdk_x11_display_get_xdisplay@plt>
   33ce8:	str	r0, [r4, #4]
   33cec:	pop	{r4, pc}
   33cf0:	push	{r4, r5, r6, lr}
   33cf4:	sub	sp, sp, #120	; 0x78
   33cf8:	ldr	r4, [pc, #132]	; 33d84 <g_strcmp0@plt+0x1ebb8>
   33cfc:	mov	r6, r1
   33d00:	mov	r3, #97	; 0x61
   33d04:	ldr	ip, [r4]
   33d08:	mov	r2, #0
   33d0c:	ldr	r1, [pc, #116]	; 33d88 <g_strcmp0@plt+0x1ebbc>
   33d10:	mov	r5, r0
   33d14:	str	ip, [sp, #116]	; 0x74
   33d18:	strb	r3, [sp, #19]
   33d1c:	bl	1486c <XInternAtom@plt>
   33d20:	mov	lr, #1
   33d24:	add	ip, sp, #19
   33d28:	str	lr, [sp, #12]
   33d2c:	str	ip, [sp, #8]
   33d30:	mov	lr, #0
   33d34:	mov	ip, #8
   33d38:	mov	r1, r6
   33d3c:	stm	sp, {ip, lr}
   33d40:	mov	r3, r0
   33d44:	mov	r2, r0
   33d48:	mov	r0, r5
   33d4c:	bl	1495c <XChangeProperty@plt>
   33d50:	mov	r3, r6
   33d54:	ldr	r2, [pc, #48]	; 33d8c <g_strcmp0@plt+0x1ebc0>
   33d58:	mov	r0, r5
   33d5c:	add	r1, sp, #20
   33d60:	bl	1474c <XIfEvent@plt>
   33d64:	ldr	r2, [sp, #116]	; 0x74
   33d68:	ldr	r3, [r4]
   33d6c:	ldr	r0, [sp, #44]	; 0x2c
   33d70:	cmp	r2, r3
   33d74:	bne	33d80 <g_strcmp0@plt+0x1ebb4>
   33d78:	add	sp, sp, #120	; 0x78
   33d7c:	pop	{r4, r5, r6, pc}
   33d80:	bl	14b6c <__stack_chk_fail@plt>
   33d84:	andeq	fp, r4, r8, asr #19
   33d88:	andeq	sl, r3, r8, lsr #20
   33d8c:	muleq	r3, r4, r0
   33d90:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   33d94:	sub	sp, sp, #80	; 0x50
   33d98:	ldr	r5, [pc, #756]	; 34094 <g_strcmp0@plt+0x1eec8>
   33d9c:	ldr	sl, [pc, #756]	; 34098 <g_strcmp0@plt+0x1eecc>
   33da0:	ldr	r8, [r0, #12]
   33da4:	ldr	r7, [r5, #48]	; 0x30
   33da8:	ldr	r3, [sl]
   33dac:	cmp	r7, #0
   33db0:	mov	r6, r0
   33db4:	mov	r9, r1
   33db8:	ldr	r4, [r8, #4]
   33dbc:	str	r3, [sp, #76]	; 0x4c
   33dc0:	beq	33ee4 <g_strcmp0@plt+0x1ed18>
   33dc4:	cmp	r9, #0
   33dc8:	bne	33dec <g_strcmp0@plt+0x1ec20>
   33dcc:	mov	r0, r4
   33dd0:	ldr	r1, [r5, #40]	; 0x28
   33dd4:	bl	15124 <XGetSelectionOwner@plt>
   33dd8:	cmp	r0, #0
   33ddc:	movne	r0, r9
   33de0:	bne	33ecc <g_strcmp0@plt+0x1ed00>
   33de4:	ldr	r8, [r6, #12]
   33de8:	ldr	r4, [r8, #4]
   33dec:	ldr	r2, [r4, #132]	; 0x84
   33df0:	ldr	r3, [r4, #140]	; 0x8c
   33df4:	mov	ip, #10
   33df8:	add	r2, r2, r2, lsl #2
   33dfc:	mov	r7, #0
   33e00:	add	r3, r3, r2, lsl #4
   33e04:	mov	r0, r4
   33e08:	ldr	r2, [r3, #52]	; 0x34
   33e0c:	ldr	r1, [r3, #8]
   33e10:	str	r7, [r8, #16]
   33e14:	str	r7, [r8, #20]
   33e18:	str	r7, [r8, #24]
   33e1c:	mov	r3, r7
   33e20:	str	ip, [sp, #4]
   33e24:	str	ip, [sp]
   33e28:	str	r2, [sp, #16]
   33e2c:	str	r2, [sp, #12]
   33e30:	str	r7, [sp, #8]
   33e34:	mov	r2, r7
   33e38:	bl	145cc <XCreateSimpleWindow@plt>
   33e3c:	ldr	r3, [r6, #12]
   33e40:	mov	r2, #1
   33e44:	str	r0, [r8, #8]
   33e48:	mov	r0, r6
   33e4c:	ldr	r1, [r3, #8]
   33e50:	bl	330e0 <g_strcmp0@plt+0x1df14>
   33e54:	ldr	r3, [r6, #12]
   33e58:	mov	r2, #4194304	; 0x400000
   33e5c:	ldrd	r0, [r3, #4]
   33e60:	bl	147a0 <XSelectInput@plt>
   33e64:	ldr	r4, [r6, #12]
   33e68:	ldrd	r0, [r4, #4]
   33e6c:	bl	33cf0 <g_strcmp0@plt+0x1eb24>
   33e70:	ldr	r3, [r6, #12]
   33e74:	ldr	r1, [r5, #40]	; 0x28
   33e78:	ldr	r2, [r3, #8]
   33e7c:	str	r0, [r4, #12]
   33e80:	ldr	r0, [r3, #4]
   33e84:	ldr	r3, [r3, #12]
   33e88:	bl	14b00 <XSetSelectionOwner@plt>
   33e8c:	ldr	r3, [r6, #12]
   33e90:	ldr	r1, [r5, #40]	; 0x28
   33e94:	ldr	r0, [r3, #4]
   33e98:	bl	15124 <XGetSelectionOwner@plt>
   33e9c:	ldr	r3, [r6, #12]
   33ea0:	ldr	r1, [r3, #8]
   33ea4:	cmp	r0, r1
   33ea8:	mov	ip, r0
   33eac:	beq	34018 <g_strcmp0@plt+0x1ee4c>
   33eb0:	mov	r2, r7
   33eb4:	mov	r0, r6
   33eb8:	bl	330e0 <g_strcmp0@plt+0x1df14>
   33ebc:	ldr	r3, [r6, #12]
   33ec0:	mov	r0, #1
   33ec4:	mov	r2, #0
   33ec8:	str	r2, [r3]
   33ecc:	ldr	r2, [sp, #76]	; 0x4c
   33ed0:	ldr	r3, [sl]
   33ed4:	cmp	r2, r3
   33ed8:	bne	34090 <g_strcmp0@plt+0x1eec4>
   33edc:	add	sp, sp, #80	; 0x50
   33ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   33ee4:	mov	r2, r7
   33ee8:	ldr	r1, [pc, #428]	; 3409c <g_strcmp0@plt+0x1eed0>
   33eec:	mov	r0, r4
   33ef0:	bl	1486c <XInternAtom@plt>
   33ef4:	mov	r2, r7
   33ef8:	ldr	r1, [pc, #416]	; 340a0 <g_strcmp0@plt+0x1eed4>
   33efc:	str	r0, [r5, #32]
   33f00:	mov	r0, r4
   33f04:	bl	1486c <XInternAtom@plt>
   33f08:	mov	r2, r7
   33f0c:	ldr	r1, [pc, #400]	; 340a4 <g_strcmp0@plt+0x1eed8>
   33f10:	str	r0, [r5, #40]	; 0x28
   33f14:	mov	r0, r4
   33f18:	bl	1486c <XInternAtom@plt>
   33f1c:	mov	r2, r7
   33f20:	ldr	r1, [pc, #384]	; 340a8 <g_strcmp0@plt+0x1eedc>
   33f24:	str	r0, [r5, #36]	; 0x24
   33f28:	mov	r0, r4
   33f2c:	bl	1486c <XInternAtom@plt>
   33f30:	mov	r2, r7
   33f34:	ldr	r1, [pc, #368]	; 340ac <g_strcmp0@plt+0x1eee0>
   33f38:	str	r0, [r5, #20]
   33f3c:	mov	r0, r4
   33f40:	bl	1486c <XInternAtom@plt>
   33f44:	mov	r2, r7
   33f48:	ldr	r1, [pc, #352]	; 340b0 <g_strcmp0@plt+0x1eee4>
   33f4c:	str	r0, [r5, #8]
   33f50:	mov	r0, r4
   33f54:	bl	1486c <XInternAtom@plt>
   33f58:	mov	r2, r7
   33f5c:	ldr	r1, [pc, #336]	; 340b4 <g_strcmp0@plt+0x1eee8>
   33f60:	str	r0, [r5, #24]
   33f64:	mov	r0, r4
   33f68:	bl	1486c <XInternAtom@plt>
   33f6c:	mov	r2, r7
   33f70:	ldr	r1, [pc, #320]	; 340b8 <g_strcmp0@plt+0x1eeec>
   33f74:	str	r0, [r5, #28]
   33f78:	mov	r0, r4
   33f7c:	bl	1486c <XInternAtom@plt>
   33f80:	mov	r2, r7
   33f84:	ldr	r1, [pc, #304]	; 340bc <g_strcmp0@plt+0x1eef0>
   33f88:	str	r0, [r5, #64]	; 0x40
   33f8c:	mov	r0, r4
   33f90:	bl	1486c <XInternAtom@plt>
   33f94:	mov	r2, r7
   33f98:	ldr	r1, [pc, #288]	; 340c0 <g_strcmp0@plt+0x1eef4>
   33f9c:	str	r0, [r5, #16]
   33fa0:	mov	r0, r4
   33fa4:	bl	1486c <XInternAtom@plt>
   33fa8:	mov	r2, r7
   33fac:	ldr	r1, [pc, #272]	; 340c4 <g_strcmp0@plt+0x1eef8>
   33fb0:	str	r0, [r5, #52]	; 0x34
   33fb4:	mov	r0, r4
   33fb8:	bl	1486c <XInternAtom@plt>
   33fbc:	mov	r2, r7
   33fc0:	ldr	r1, [pc, #256]	; 340c8 <g_strcmp0@plt+0x1eefc>
   33fc4:	str	r0, [r5, #44]	; 0x2c
   33fc8:	mov	r0, r4
   33fcc:	bl	1486c <XInternAtom@plt>
   33fd0:	mov	r2, r7
   33fd4:	ldr	r1, [pc, #240]	; 340cc <g_strcmp0@plt+0x1ef00>
   33fd8:	str	r0, [r5, #12]
   33fdc:	mov	r0, r4
   33fe0:	bl	1486c <XInternAtom@plt>
   33fe4:	str	r0, [r5, #56]	; 0x38
   33fe8:	mov	r0, r4
   33fec:	bl	14c44 <XExtendedMaxRequestSize@plt>
   33ff0:	cmp	r0, #0
   33ff4:	beq	34084 <g_strcmp0@plt+0x1eeb8>
   33ff8:	sub	r0, r0, #100	; 0x64
   33ffc:	ldr	r8, [r6, #12]
   34000:	cmp	r0, #262144	; 0x40000
   34004:	movhi	r3, #262144	; 0x40000
   34008:	str	r0, [r5, #48]	; 0x30
   3400c:	ldr	r4, [r8, #4]
   34010:	strhi	r3, [r5, #48]	; 0x30
   34014:	b	33dc4 <g_strcmp0@plt+0x1ebf8>
   34018:	ldr	r0, [r3, #4]
   3401c:	ldr	r8, [r3, #12]
   34020:	ldr	lr, [r5, #64]	; 0x40
   34024:	ldr	r3, [r0, #132]	; 0x84
   34028:	ldr	r2, [r0, #140]	; 0x8c
   3402c:	ldr	r4, [r5, #40]	; 0x28
   34030:	add	r3, r3, r3, lsl #2
   34034:	mov	r5, #33	; 0x21
   34038:	add	r3, r2, r3, lsl #4
   3403c:	add	r2, sp, #28
   34040:	ldr	r3, [r3, #8]
   34044:	str	r2, [sp]
   34048:	mov	r1, r3
   3404c:	str	r3, [sp, #44]	; 0x2c
   34050:	str	ip, [sp, #64]	; 0x40
   34054:	mov	r2, r7
   34058:	mov	ip, #32
   3405c:	mov	r3, #131072	; 0x20000
   34060:	str	r8, [sp, #56]	; 0x38
   34064:	str	r7, [sp, #68]	; 0x44
   34068:	str	r7, [sp, #72]	; 0x48
   3406c:	str	lr, [sp, #48]	; 0x30
   34070:	str	r4, [sp, #60]	; 0x3c
   34074:	str	r5, [sp, #28]
   34078:	str	ip, [sp, #52]	; 0x34
   3407c:	bl	1450c <XSendEvent@plt>
   34080:	b	33ebc <g_strcmp0@plt+0x1ecf0>
   34084:	mov	r0, r4
   34088:	bl	14f80 <XMaxRequestSize@plt>
   3408c:	b	33ff8 <g_strcmp0@plt+0x1ee2c>
   34090:	bl	14b6c <__stack_chk_fail@plt>
   34094:	ldrdeq	ip, [r4], -r4
   34098:	andeq	fp, r4, r8, asr #19
   3409c:	andeq	sl, r3, r8, lsr sl
   340a0:	andeq	sl, r3, r4, asr #20
   340a4:	andeq	sl, r3, r8, asr sl
   340a8:	andeq	sl, r3, r4, ror #20
   340ac:	andeq	sl, r3, ip, ror #20
   340b0:	andeq	sl, r3, r4, ror sl
   340b4:	andeq	sl, r3, r4, lsl #21
   340b8:	andeq	sl, r3, r0, lsr #20
   340bc:	muleq	r3, r8, sl
   340c0:	andeq	sl, r3, r4, lsr #21
   340c4:	andeq	sl, r3, ip, lsr #21
   340c8:			; <UNDEFINED> instruction: 0x0003aabc
   340cc:	andeq	sl, r3, r4, asr #21
   340d0:	ldr	r3, [r0, #12]
   340d4:	push	{r4, lr}
   340d8:	mov	r4, r0
   340dc:	ldr	r1, [r3, #8]
   340e0:	cmp	r1, #0
   340e4:	bne	3414c <g_strcmp0@plt+0x1ef80>
   340e8:	ldr	r0, [r3, #20]
   340ec:	cmp	r0, #0
   340f0:	beq	34118 <g_strcmp0@plt+0x1ef4c>
   340f4:	mov	r2, #0
   340f8:	ldr	r1, [pc, #112]	; 34170 <g_strcmp0@plt+0x1efa4>
   340fc:	bl	14f08 <g_slist_foreach@plt>
   34100:	ldr	r3, [r4, #12]
   34104:	ldr	r0, [r3, #20]
   34108:	bl	151c0 <g_slist_free@plt>
   3410c:	ldr	r3, [r4, #12]
   34110:	mov	r2, #0
   34114:	str	r2, [r3, #20]
   34118:	ldr	r0, [r3, #16]
   3411c:	cmp	r0, #0
   34120:	popeq	{r4, pc}
   34124:	mov	r2, #0
   34128:	ldr	r1, [pc, #68]	; 34174 <g_strcmp0@plt+0x1efa8>
   3412c:	bl	14f08 <g_slist_foreach@plt>
   34130:	ldr	r3, [r4, #12]
   34134:	ldr	r0, [r3, #16]
   34138:	bl	151c0 <g_slist_free@plt>
   3413c:	ldr	r3, [r4, #12]
   34140:	mov	r2, #0
   34144:	str	r2, [r3, #16]
   34148:	pop	{r4, pc}
   3414c:	mov	r2, #0
   34150:	bl	330e0 <g_strcmp0@plt+0x1df14>
   34154:	ldr	r3, [r4, #12]
   34158:	ldrd	r0, [r3, #4]
   3415c:	bl	14efc <XDestroyWindow@plt>
   34160:	ldr	r3, [r4, #12]
   34164:	mov	r2, #0
   34168:	str	r2, [r3, #8]
   3416c:	b	340e8 <g_strcmp0@plt+0x1ef1c>
   34170:	andeq	r3, r3, r4, ror #2
   34174:	andeq	r3, r3, ip, lsr ip
   34178:	push	{r4, r5, r6, lr}
   3417c:	ldr	r0, [pc, #68]	; 341c8 <g_strcmp0@plt+0x1effc>
   34180:	bl	14b9c <g_getenv@plt>
   34184:	subs	r4, r0, #0
   34188:	popne	{r4, r5, r6, pc}
   3418c:	bl	33c70 <g_strcmp0@plt+0x1eaa4>
   34190:	mov	r1, r4
   34194:	bl	143d4 <g_object_new@plt>
   34198:	ldr	r5, [pc, #44]	; 341cc <g_strcmp0@plt+0x1f000>
   3419c:	mov	r1, r4
   341a0:	str	r0, [r5, #68]	; 0x44
   341a4:	bl	33d90 <g_strcmp0@plt+0x1ebc4>
   341a8:	subs	r4, r0, #0
   341ac:	popne	{r4, r5, r6, pc}
   341b0:	ldr	r0, [r5, #68]	; 0x44
   341b4:	bl	14e90 <g_object_unref@plt>
   341b8:	str	r4, [r5, #68]	; 0x44
   341bc:	ldr	r0, [pc, #12]	; 341d0 <g_strcmp0@plt+0x1f004>
   341c0:	pop	{r4, r5, r6, lr}
   341c4:	b	14638 <g_printerr@plt>
   341c8:	andeq	sl, r3, r8, asr #22
   341cc:	ldrdeq	ip, [r4], -r4
   341d0:	andeq	sl, r3, r4, ror #22
   341d4:	push	{r4, lr}
   341d8:	ldr	r4, [pc, #24]	; 341f8 <g_strcmp0@plt+0x1f02c>
   341dc:	ldr	r0, [r4, #68]	; 0x44
   341e0:	cmp	r0, #0
   341e4:	popeq	{r4, pc}
   341e8:	bl	340d0 <g_strcmp0@plt+0x1ef04>
   341ec:	ldr	r0, [r4, #68]	; 0x44
   341f0:	pop	{r4, lr}
   341f4:	b	14e90 <g_object_unref@plt>
   341f8:	ldrdeq	ip, [r4], -r4
   341fc:	subs	r2, r1, #1
   34200:	bxeq	lr
   34204:	bcc	343dc <g_strcmp0@plt+0x1f210>
   34208:	cmp	r0, r1
   3420c:	bls	343c0 <g_strcmp0@plt+0x1f1f4>
   34210:	tst	r1, r2
   34214:	beq	343cc <g_strcmp0@plt+0x1f200>
   34218:	clz	r3, r0
   3421c:	clz	r2, r1
   34220:	sub	r3, r2, r3
   34224:	rsbs	r3, r3, #31
   34228:	addne	r3, r3, r3, lsl #1
   3422c:	mov	r2, #0
   34230:	addne	pc, pc, r3, lsl #2
   34234:	nop			; (mov r0, r0)
   34238:	cmp	r0, r1, lsl #31
   3423c:	adc	r2, r2, r2
   34240:	subcs	r0, r0, r1, lsl #31
   34244:	cmp	r0, r1, lsl #30
   34248:	adc	r2, r2, r2
   3424c:	subcs	r0, r0, r1, lsl #30
   34250:	cmp	r0, r1, lsl #29
   34254:	adc	r2, r2, r2
   34258:	subcs	r0, r0, r1, lsl #29
   3425c:	cmp	r0, r1, lsl #28
   34260:	adc	r2, r2, r2
   34264:	subcs	r0, r0, r1, lsl #28
   34268:	cmp	r0, r1, lsl #27
   3426c:	adc	r2, r2, r2
   34270:	subcs	r0, r0, r1, lsl #27
   34274:	cmp	r0, r1, lsl #26
   34278:	adc	r2, r2, r2
   3427c:	subcs	r0, r0, r1, lsl #26
   34280:	cmp	r0, r1, lsl #25
   34284:	adc	r2, r2, r2
   34288:	subcs	r0, r0, r1, lsl #25
   3428c:	cmp	r0, r1, lsl #24
   34290:	adc	r2, r2, r2
   34294:	subcs	r0, r0, r1, lsl #24
   34298:	cmp	r0, r1, lsl #23
   3429c:	adc	r2, r2, r2
   342a0:	subcs	r0, r0, r1, lsl #23
   342a4:	cmp	r0, r1, lsl #22
   342a8:	adc	r2, r2, r2
   342ac:	subcs	r0, r0, r1, lsl #22
   342b0:	cmp	r0, r1, lsl #21
   342b4:	adc	r2, r2, r2
   342b8:	subcs	r0, r0, r1, lsl #21
   342bc:	cmp	r0, r1, lsl #20
   342c0:	adc	r2, r2, r2
   342c4:	subcs	r0, r0, r1, lsl #20
   342c8:	cmp	r0, r1, lsl #19
   342cc:	adc	r2, r2, r2
   342d0:	subcs	r0, r0, r1, lsl #19
   342d4:	cmp	r0, r1, lsl #18
   342d8:	adc	r2, r2, r2
   342dc:	subcs	r0, r0, r1, lsl #18
   342e0:	cmp	r0, r1, lsl #17
   342e4:	adc	r2, r2, r2
   342e8:	subcs	r0, r0, r1, lsl #17
   342ec:	cmp	r0, r1, lsl #16
   342f0:	adc	r2, r2, r2
   342f4:	subcs	r0, r0, r1, lsl #16
   342f8:	cmp	r0, r1, lsl #15
   342fc:	adc	r2, r2, r2
   34300:	subcs	r0, r0, r1, lsl #15
   34304:	cmp	r0, r1, lsl #14
   34308:	adc	r2, r2, r2
   3430c:	subcs	r0, r0, r1, lsl #14
   34310:	cmp	r0, r1, lsl #13
   34314:	adc	r2, r2, r2
   34318:	subcs	r0, r0, r1, lsl #13
   3431c:	cmp	r0, r1, lsl #12
   34320:	adc	r2, r2, r2
   34324:	subcs	r0, r0, r1, lsl #12
   34328:	cmp	r0, r1, lsl #11
   3432c:	adc	r2, r2, r2
   34330:	subcs	r0, r0, r1, lsl #11
   34334:	cmp	r0, r1, lsl #10
   34338:	adc	r2, r2, r2
   3433c:	subcs	r0, r0, r1, lsl #10
   34340:	cmp	r0, r1, lsl #9
   34344:	adc	r2, r2, r2
   34348:	subcs	r0, r0, r1, lsl #9
   3434c:	cmp	r0, r1, lsl #8
   34350:	adc	r2, r2, r2
   34354:	subcs	r0, r0, r1, lsl #8
   34358:	cmp	r0, r1, lsl #7
   3435c:	adc	r2, r2, r2
   34360:	subcs	r0, r0, r1, lsl #7
   34364:	cmp	r0, r1, lsl #6
   34368:	adc	r2, r2, r2
   3436c:	subcs	r0, r0, r1, lsl #6
   34370:	cmp	r0, r1, lsl #5
   34374:	adc	r2, r2, r2
   34378:	subcs	r0, r0, r1, lsl #5
   3437c:	cmp	r0, r1, lsl #4
   34380:	adc	r2, r2, r2
   34384:	subcs	r0, r0, r1, lsl #4
   34388:	cmp	r0, r1, lsl #3
   3438c:	adc	r2, r2, r2
   34390:	subcs	r0, r0, r1, lsl #3
   34394:	cmp	r0, r1, lsl #2
   34398:	adc	r2, r2, r2
   3439c:	subcs	r0, r0, r1, lsl #2
   343a0:	cmp	r0, r1, lsl #1
   343a4:	adc	r2, r2, r2
   343a8:	subcs	r0, r0, r1, lsl #1
   343ac:	cmp	r0, r1
   343b0:	adc	r2, r2, r2
   343b4:	subcs	r0, r0, r1
   343b8:	mov	r0, r2
   343bc:	bx	lr
   343c0:	moveq	r0, #1
   343c4:	movne	r0, #0
   343c8:	bx	lr
   343cc:	clz	r2, r1
   343d0:	rsb	r2, r2, #31
   343d4:	lsr	r0, r0, r2
   343d8:	bx	lr
   343dc:	cmp	r0, #0
   343e0:	mvnne	r0, #0
   343e4:	b	34408 <g_strcmp0@plt+0x1f23c>
   343e8:	cmp	r1, #0
   343ec:	beq	343dc <g_strcmp0@plt+0x1f210>
   343f0:	push	{r0, r1, lr}
   343f4:	bl	341fc <g_strcmp0@plt+0x1f030>
   343f8:	pop	{r1, r2, lr}
   343fc:	mul	r3, r2, r0
   34400:	sub	r1, r1, r3
   34404:	bx	lr
   34408:	push	{r1, lr}
   3440c:	mov	r0, #8
   34410:	bl	14d1c <raise@plt>
   34414:	pop	{r1, pc}
   34418:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3441c:	mov	r7, r0
   34420:	ldr	r6, [pc, #72]	; 34470 <g_strcmp0@plt+0x1f2a4>
   34424:	ldr	r5, [pc, #72]	; 34474 <g_strcmp0@plt+0x1f2a8>
   34428:	add	r6, pc, r6
   3442c:	add	r5, pc, r5
   34430:	sub	r6, r6, r5
   34434:	mov	r8, r1
   34438:	mov	r9, r2
   3443c:	bl	143a8 <g_slist_copy@plt-0x20>
   34440:	asrs	r6, r6, #2
   34444:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   34448:	mov	r4, #0
   3444c:	add	r4, r4, #1
   34450:	ldr	r3, [r5], #4
   34454:	mov	r2, r9
   34458:	mov	r1, r8
   3445c:	mov	r0, r7
   34460:	blx	r3
   34464:	cmp	r6, r4
   34468:	bne	3444c <g_strcmp0@plt+0x1f280>
   3446c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   34470:	muleq	r1, r4, r5
   34474:	andeq	r7, r1, ip, lsl #11
   34478:	bx	lr

Disassembly of section .fini:

0003447c <.fini>:
   3447c:	push	{r3, lr}
   34480:	pop	{r3, pc}
