
raspbian-preinstalled/fc-query:     file format elf32-littlearm


Disassembly of section .init:

00010700 <_init@@Base>:
   10700:	push	{r3, lr}
   10704:	bl	10b08 <exit@plt+0x304>
   10708:	pop	{r3, pc}

Disassembly of section .plt:

0001070c <abort@plt-0x14>:
   1070c:	push	{lr}		; (str lr, [sp, #-4]!)
   10710:	ldr	lr, [pc, #4]	; 1071c <_init@@Base+0x1c>
   10714:	add	lr, pc, lr
   10718:	ldr	pc, [lr, #8]!
   1071c:	andeq	r1, r1, r4, ror #17

00010720 <abort@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #69632	; 0x11000
   10728:	ldr	pc, [ip, #2276]!	; 0x8e4

0001072c <__libc_start_main@plt>:
   1072c:	add	ip, pc, #0, 12
   10730:	add	ip, ip, #69632	; 0x11000
   10734:	ldr	pc, [ip, #2268]!	; 0x8dc

00010738 <FcPatternDel@plt>:
   10738:	add	ip, pc, #0, 12
   1073c:	add	ip, ip, #69632	; 0x11000
   10740:	ldr	pc, [ip, #2260]!	; 0x8d4

00010744 <__gmon_start__@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #69632	; 0x11000
   1074c:	ldr	pc, [ip, #2252]!	; 0x8cc

00010750 <__printf_chk@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #69632	; 0x11000
   10758:	ldr	pc, [ip, #2244]!	; 0x8c4

0001075c <FcFini@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #69632	; 0x11000
   10764:	ldr	pc, [ip, #2236]!	; 0x8bc

00010768 <FcFreeTypeQueryAll@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #69632	; 0x11000
   10770:	ldr	pc, [ip, #2228]!	; 0x8b4

00010774 <getopt_long@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #69632	; 0x11000
   1077c:	ldr	pc, [ip, #2220]!	; 0x8ac

00010780 <dcgettext@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #69632	; 0x11000
   10788:	ldr	pc, [ip, #2212]!	; 0x8a4

0001078c <setlocale@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #69632	; 0x11000
   10794:	ldr	pc, [ip, #2204]!	; 0x89c

00010798 <strtol@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #69632	; 0x11000
   107a0:	ldr	pc, [ip, #2196]!	; 0x894

000107a4 <FcPatternFormat@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #69632	; 0x11000
   107ac:	ldr	pc, [ip, #2188]!	; 0x88c

000107b0 <FcFontSetDestroy@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #69632	; 0x11000
   107b8:	ldr	pc, [ip, #2180]!	; 0x884

000107bc <FcFontSetCreate@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #69632	; 0x11000
   107c4:	ldr	pc, [ip, #2172]!	; 0x87c

000107c8 <strdup@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #69632	; 0x11000
   107d0:	ldr	pc, [ip, #2164]!	; 0x874

000107d4 <__fprintf_chk@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #69632	; 0x11000
   107dc:	ldr	pc, [ip, #2156]!	; 0x86c

000107e0 <fputc@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #69632	; 0x11000
   107e8:	ldr	pc, [ip, #2148]!	; 0x864

000107ec <FcStrFree@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #69632	; 0x11000
   107f4:	ldr	pc, [ip, #2140]!	; 0x85c

000107f8 <FcPatternPrint@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #69632	; 0x11000
   10800:	ldr	pc, [ip, #2132]!	; 0x854

00010804 <exit@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #69632	; 0x11000
   1080c:	ldr	pc, [ip, #2124]!	; 0x84c

Disassembly of section .text:

00010810 <.text>:
   10810:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10814:	mvn	fp, #0
   10818:	ldr	r8, [pc, #636]	; 10a9c <exit@plt+0x298>
   1081c:	ldr	r7, [pc, #636]	; 10aa0 <exit@plt+0x29c>
   10820:	ldr	sl, [pc, #636]	; 10aa4 <exit@plt+0x2a0>
   10824:	sub	sp, sp, #20
   10828:	mov	r6, r0
   1082c:	mov	r5, r1
   10830:	mov	r0, #6
   10834:	ldr	r1, [pc, #620]	; 10aa8 <exit@plt+0x2a4>
   10838:	mov	r9, #0
   1083c:	bl	1078c <setlocale@plt>
   10840:	str	r9, [sp, #8]
   10844:	mov	r4, #0
   10848:	str	r4, [sp]
   1084c:	mov	r3, r8
   10850:	mov	r2, r7
   10854:	mov	r1, r5
   10858:	mov	r0, r6
   1085c:	bl	10774 <getopt_long@plt>
   10860:	cmn	r0, #1
   10864:	beq	10928 <exit@plt+0x124>
   10868:	sub	r0, r0, #86	; 0x56
   1086c:	cmp	r0, #19
   10870:	ldrls	pc, [pc, r0, lsl #2]
   10874:	b	10a90 <exit@plt+0x28c>
   10878:	strdeq	r0, [r1], -ip
   1087c:	muleq	r1, r0, sl
   10880:	muleq	r1, r0, sl
   10884:	muleq	r1, r0, sl
   10888:	muleq	r1, r0, sl
   1088c:	muleq	r1, r0, sl
   10890:	muleq	r1, r0, sl
   10894:	muleq	r1, r0, sl
   10898:	muleq	r1, r0, sl
   1089c:	muleq	r1, r0, sl
   108a0:	muleq	r1, r0, sl
   108a4:	muleq	r1, r0, sl
   108a8:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   108ac:	muleq	r1, r0, sl
   108b0:	muleq	r1, r0, sl
   108b4:	muleq	r1, r0, sl
   108b8:	andeq	r0, r1, r0, ror #17
   108bc:	muleq	r1, r0, sl
   108c0:	andeq	r0, r1, r4, lsl #21
   108c4:	andeq	r0, r1, r8, asr #17
   108c8:	mov	r2, #0
   108cc:	mov	r1, r2
   108d0:	ldr	r0, [sl]
   108d4:	bl	10798 <strtol@plt>
   108d8:	mov	fp, r0
   108dc:	b	10844 <exit@plt+0x40>
   108e0:	ldr	r0, [sl]
   108e4:	bl	107c8 <strdup@plt>
   108e8:	mov	r9, r0
   108ec:	b	10844 <exit@plt+0x40>
   108f0:	mov	r3, #1
   108f4:	str	r3, [sp, #8]
   108f8:	b	10848 <exit@plt+0x44>
   108fc:	ldr	r2, [pc, #424]	; 10aac <exit@plt+0x2a8>
   10900:	mov	r1, #1
   10904:	mov	r3, #13
   10908:	ldr	r0, [r2]
   1090c:	str	r3, [sp]
   10910:	str	r1, [sp, #4]
   10914:	mov	r3, #2
   10918:	ldr	r2, [pc, #400]	; 10ab0 <exit@plt+0x2ac>
   1091c:	bl	107d4 <__fprintf_chk@plt>
   10920:	mov	r0, #0
   10924:	bl	10804 <exit@plt>
   10928:	ldr	r3, [pc, #388]	; 10ab4 <exit@plt+0x2b0>
   1092c:	ldr	r4, [r3]
   10930:	cmp	r6, r4
   10934:	beq	10a90 <exit@plt+0x28c>
   10938:	bl	107bc <FcFontSetCreate@plt>
   1093c:	cmp	r6, r4
   10940:	mov	r7, r0
   10944:	ble	109bc <exit@plt+0x1b8>
   10948:	add	r4, r5, r4, lsl #2
   1094c:	ldr	sl, [pc, #344]	; 10aac <exit@plt+0x2a8>
   10950:	add	r5, r5, r6, lsl #2
   10954:	mov	r8, #0
   10958:	b	10964 <exit@plt+0x160>
   1095c:	cmp	r4, r5
   10960:	beq	109c0 <exit@plt+0x1bc>
   10964:	mov	r3, #0
   10968:	str	r7, [sp]
   1096c:	mov	r2, r3
   10970:	mov	r1, fp
   10974:	ldr	r0, [r4], #4
   10978:	bl	10768 <FcFreeTypeQueryAll@plt>
   1097c:	cmp	r0, #0
   10980:	bne	1095c <exit@plt+0x158>
   10984:	mov	r2, #5
   10988:	ldr	r1, [pc, #296]	; 10ab8 <exit@plt+0x2b4>
   1098c:	ldr	r0, [pc, #296]	; 10abc <exit@plt+0x2b8>
   10990:	ldr	r6, [sl]
   10994:	bl	10780 <dcgettext@plt>
   10998:	ldr	r2, [r4, #-4]
   1099c:	mov	r1, #1
   109a0:	str	r2, [sp]
   109a4:	mov	r3, fp
   109a8:	mov	r8, r1
   109ac:	mov	r2, r0
   109b0:	mov	r0, r6
   109b4:	bl	107d4 <__fprintf_chk@plt>
   109b8:	b	1095c <exit@plt+0x158>
   109bc:	mov	r8, #0
   109c0:	ldr	r3, [r7]
   109c4:	cmp	r3, #0
   109c8:	ble	10a6c <exit@plt+0x268>
   109cc:	str	r8, [sp, #12]
   109d0:	ldr	sl, [pc, #232]	; 10ac0 <exit@plt+0x2bc>
   109d4:	mov	r8, r7
   109d8:	ldr	r6, [pc, #228]	; 10ac4 <exit@plt+0x2c0>
   109dc:	ldr	r5, [pc, #228]	; 10ac8 <exit@plt+0x2c4>
   109e0:	mov	r4, #0
   109e4:	ldr	r7, [sp, #8]
   109e8:	b	10a30 <exit@plt+0x22c>
   109ec:	cmp	r9, #0
   109f0:	mov	r0, fp
   109f4:	beq	10a5c <exit@plt+0x258>
   109f8:	mov	r1, r9
   109fc:	bl	107a4 <FcPatternFormat@plt>
   10a00:	subs	fp, r0, #0
   10a04:	beq	10a20 <exit@plt+0x21c>
   10a08:	mov	r2, fp
   10a0c:	mov	r1, r5
   10a10:	mov	r0, #1
   10a14:	bl	10750 <__printf_chk@plt>
   10a18:	mov	r0, fp
   10a1c:	bl	107ec <FcStrFree@plt>
   10a20:	ldr	r2, [r8]
   10a24:	add	r4, r4, #1
   10a28:	cmp	r2, r4
   10a2c:	ble	10a64 <exit@plt+0x260>
   10a30:	ldr	r2, [r8, #8]
   10a34:	cmp	r7, #0
   10a38:	ldr	fp, [r2, r4, lsl #2]
   10a3c:	beq	109ec <exit@plt+0x1e8>
   10a40:	mov	r1, sl
   10a44:	mov	r0, fp
   10a48:	bl	10738 <FcPatternDel@plt>
   10a4c:	mov	r1, r6
   10a50:	mov	r0, fp
   10a54:	bl	10738 <FcPatternDel@plt>
   10a58:	b	109ec <exit@plt+0x1e8>
   10a5c:	bl	107f8 <FcPatternPrint@plt>
   10a60:	b	10a20 <exit@plt+0x21c>
   10a64:	mov	r7, r8
   10a68:	ldr	r8, [sp, #12]
   10a6c:	mov	r0, r7
   10a70:	bl	107b0 <FcFontSetDestroy@plt>
   10a74:	bl	1075c <FcFini@plt>
   10a78:	mov	r0, r8
   10a7c:	add	sp, sp, #20
   10a80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a84:	ldr	r0, [r5]
   10a88:	mov	r1, #0
   10a8c:	bl	10bbc <exit@plt+0x3b8>
   10a90:	ldr	r0, [r5]
   10a94:	mov	r1, #1
   10a98:	bl	10bbc <exit@plt+0x3b8>
   10a9c:	andeq	r0, r1, r4, ror #26
   10aa0:	andeq	r0, r1, r4, asr #31
   10aa4:	andeq	r2, r2, r8, ror r0
   10aa8:	andeq	r0, r1, r8, ror lr
   10aac:	andeq	r2, r2, r0, ror r0
   10ab0:	andeq	r0, r1, r4, lsr #31
   10ab4:	andeq	r2, r2, r8, rrx
   10ab8:	andeq	r0, r1, ip, asr #31
   10abc:	andeq	r0, r1, ip, lsr lr
   10ac0:	strdeq	r0, [r1], -r4
   10ac4:	strdeq	r0, [r1], -ip
   10ac8:	andeq	r1, r1, r4
   10acc:	mov	fp, #0
   10ad0:	mov	lr, #0
   10ad4:	pop	{r1}		; (ldr r1, [sp], #4)
   10ad8:	mov	r2, sp
   10adc:	push	{r2}		; (str r2, [sp, #-4]!)
   10ae0:	push	{r0}		; (str r0, [sp, #-4]!)
   10ae4:	ldr	ip, [pc, #16]	; 10afc <exit@plt+0x2f8>
   10ae8:	push	{ip}		; (str ip, [sp, #-4]!)
   10aec:	ldr	r0, [pc, #12]	; 10b00 <exit@plt+0x2fc>
   10af0:	ldr	r3, [pc, #12]	; 10b04 <exit@plt+0x300>
   10af4:	bl	1072c <__libc_start_main@plt>
   10af8:	bl	10720 <abort@plt>
   10afc:	andeq	r0, r1, r4, asr sp
   10b00:	andeq	r0, r1, r0, lsl r8
   10b04:	strdeq	r0, [r1], -r4
   10b08:	ldr	r3, [pc, #20]	; 10b24 <exit@plt+0x320>
   10b0c:	ldr	r2, [pc, #20]	; 10b28 <exit@plt+0x324>
   10b10:	add	r3, pc, r3
   10b14:	ldr	r2, [r3, r2]
   10b18:	cmp	r2, #0
   10b1c:	bxeq	lr
   10b20:	b	10744 <__gmon_start__@plt>
   10b24:	andeq	r1, r1, r8, ror #9
   10b28:	andeq	r0, r0, ip, asr r0
   10b2c:	ldr	r0, [pc, #24]	; 10b4c <exit@plt+0x348>
   10b30:	ldr	r3, [pc, #24]	; 10b50 <exit@plt+0x34c>
   10b34:	cmp	r3, r0
   10b38:	bxeq	lr
   10b3c:	ldr	r3, [pc, #16]	; 10b54 <exit@plt+0x350>
   10b40:	cmp	r3, #0
   10b44:	bxeq	lr
   10b48:	bx	r3
   10b4c:	andeq	r2, r2, r8, rrx
   10b50:	andeq	r2, r2, r8, rrx
   10b54:	andeq	r0, r0, r0
   10b58:	ldr	r0, [pc, #36]	; 10b84 <exit@plt+0x380>
   10b5c:	ldr	r1, [pc, #36]	; 10b88 <exit@plt+0x384>
   10b60:	sub	r1, r1, r0
   10b64:	asr	r1, r1, #2
   10b68:	add	r1, r1, r1, lsr #31
   10b6c:	asrs	r1, r1, #1
   10b70:	bxeq	lr
   10b74:	ldr	r3, [pc, #16]	; 10b8c <exit@plt+0x388>
   10b78:	cmp	r3, #0
   10b7c:	bxeq	lr
   10b80:	bx	r3
   10b84:	andeq	r2, r2, r8, rrx
   10b88:	andeq	r2, r2, r8, rrx
   10b8c:	andeq	r0, r0, r0
   10b90:	push	{r4, lr}
   10b94:	ldr	r4, [pc, #24]	; 10bb4 <exit@plt+0x3b0>
   10b98:	ldrb	r3, [r4]
   10b9c:	cmp	r3, #0
   10ba0:	popne	{r4, pc}
   10ba4:	bl	10b2c <exit@plt+0x328>
   10ba8:	mov	r3, #1
   10bac:	strb	r3, [r4]
   10bb0:	pop	{r4, pc}
   10bb4:	andeq	r2, r2, ip, ror r0
   10bb8:	b	10b58 <exit@plt+0x354>
   10bbc:	push	{r4, r5, r6, lr}
   10bc0:	subs	r5, r1, #0
   10bc4:	mov	r6, r0
   10bc8:	ldrne	r3, [pc, #252]	; 10ccc <exit@plt+0x4c8>
   10bcc:	ldreq	r3, [pc, #252]	; 10cd0 <exit@plt+0x4cc>
   10bd0:	mov	r2, #5
   10bd4:	ldr	r1, [pc, #248]	; 10cd4 <exit@plt+0x4d0>
   10bd8:	ldr	r0, [pc, #248]	; 10cd8 <exit@plt+0x4d4>
   10bdc:	ldr	r4, [r3]
   10be0:	bl	10780 <dcgettext@plt>
   10be4:	mov	r3, r6
   10be8:	mov	r1, #1
   10bec:	mov	r2, r0
   10bf0:	mov	r0, r4
   10bf4:	bl	107d4 <__fprintf_chk@plt>
   10bf8:	mov	r2, #5
   10bfc:	ldr	r1, [pc, #216]	; 10cdc <exit@plt+0x4d8>
   10c00:	ldr	r0, [pc, #208]	; 10cd8 <exit@plt+0x4d4>
   10c04:	bl	10780 <dcgettext@plt>
   10c08:	mov	r1, #1
   10c0c:	mov	r2, r0
   10c10:	mov	r0, r4
   10c14:	bl	107d4 <__fprintf_chk@plt>
   10c18:	mov	r1, r4
   10c1c:	mov	r0, #10
   10c20:	bl	107e0 <fputc@plt>
   10c24:	mov	r2, #5
   10c28:	ldr	r1, [pc, #176]	; 10ce0 <exit@plt+0x4dc>
   10c2c:	ldr	r0, [pc, #164]	; 10cd8 <exit@plt+0x4d4>
   10c30:	bl	10780 <dcgettext@plt>
   10c34:	mov	r1, #1
   10c38:	mov	r2, r0
   10c3c:	mov	r0, r4
   10c40:	bl	107d4 <__fprintf_chk@plt>
   10c44:	mov	r2, #5
   10c48:	ldr	r1, [pc, #148]	; 10ce4 <exit@plt+0x4e0>
   10c4c:	ldr	r0, [pc, #132]	; 10cd8 <exit@plt+0x4d4>
   10c50:	bl	10780 <dcgettext@plt>
   10c54:	mov	r1, #1
   10c58:	mov	r2, r0
   10c5c:	mov	r0, r4
   10c60:	bl	107d4 <__fprintf_chk@plt>
   10c64:	mov	r2, #5
   10c68:	ldr	r1, [pc, #120]	; 10ce8 <exit@plt+0x4e4>
   10c6c:	ldr	r0, [pc, #100]	; 10cd8 <exit@plt+0x4d4>
   10c70:	bl	10780 <dcgettext@plt>
   10c74:	mov	r1, #1
   10c78:	mov	r2, r0
   10c7c:	mov	r0, r4
   10c80:	bl	107d4 <__fprintf_chk@plt>
   10c84:	mov	r2, #5
   10c88:	ldr	r1, [pc, #92]	; 10cec <exit@plt+0x4e8>
   10c8c:	ldr	r0, [pc, #68]	; 10cd8 <exit@plt+0x4d4>
   10c90:	bl	10780 <dcgettext@plt>
   10c94:	mov	r1, #1
   10c98:	mov	r2, r0
   10c9c:	mov	r0, r4
   10ca0:	bl	107d4 <__fprintf_chk@plt>
   10ca4:	mov	r2, #5
   10ca8:	ldr	r1, [pc, #64]	; 10cf0 <exit@plt+0x4ec>
   10cac:	ldr	r0, [pc, #36]	; 10cd8 <exit@plt+0x4d4>
   10cb0:	bl	10780 <dcgettext@plt>
   10cb4:	mov	r1, #1
   10cb8:	mov	r2, r0
   10cbc:	mov	r0, r4
   10cc0:	bl	107d4 <__fprintf_chk@plt>
   10cc4:	mov	r0, r5
   10cc8:	bl	10804 <exit@plt>
   10ccc:	andeq	r2, r2, r0, ror r0
   10cd0:	andeq	r2, r2, ip, rrx
   10cd4:	andeq	r0, r1, r4, asr #27
   10cd8:	andeq	r0, r1, ip, lsr lr
   10cdc:	andeq	r0, r1, r8, asr #28
   10ce0:	andeq	r0, r1, ip, ror lr
   10ce4:	andeq	r0, r1, r4, asr #29
   10ce8:	strdeq	r0, [r1], -ip
   10cec:	andeq	r0, r1, r0, lsr pc
   10cf0:	andeq	r0, r1, r0, ror pc
   10cf4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10cf8:	mov	r7, r0
   10cfc:	ldr	r6, [pc, #72]	; 10d4c <exit@plt+0x548>
   10d00:	ldr	r5, [pc, #72]	; 10d50 <exit@plt+0x54c>
   10d04:	add	r6, pc, r6
   10d08:	add	r5, pc, r5
   10d0c:	sub	r6, r6, r5
   10d10:	mov	r8, r1
   10d14:	mov	r9, r2
   10d18:	bl	10700 <_init@@Base>
   10d1c:	asrs	r6, r6, #2
   10d20:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10d24:	mov	r4, #0
   10d28:	add	r4, r4, #1
   10d2c:	ldr	r3, [r5], #4
   10d30:	mov	r2, r9
   10d34:	mov	r1, r8
   10d38:	mov	r0, r7
   10d3c:	blx	r3
   10d40:	cmp	r6, r4
   10d44:	bne	10d28 <exit@plt+0x524>
   10d48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10d4c:	strdeq	r1, [r1], -r8
   10d50:	strdeq	r1, [r1], -r0
   10d54:	bx	lr

Disassembly of section .fini:

00010d58 <_fini@@Base>:
   10d58:	push	{r3, lr}
   10d5c:	pop	{r3, pc}
