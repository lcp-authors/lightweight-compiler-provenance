
raspbian-preinstalled/xev:     file format elf32-littlearm


Disassembly of section .init:

00010e0c <_init@@Base>:
   10e0c:	push	{r3, lr}
   10e10:	bl	12d28 <XRRGetOutputInfo@plt+0x1c8c>
   10e14:	pop	{r3, pc}

Disassembly of section .plt:

00010e18 <XSetStandardProperties@plt-0x14>:
   10e18:	push	{lr}		; (str lr, [sp, #-4]!)
   10e1c:	ldr	lr, [pc, #4]	; 10e28 <_init@@Base+0x1c>
   10e20:	add	lr, pc, lr
   10e24:	ldr	pc, [lr, #8]!
   10e28:	ldrdeq	r5, [r1], -r8

00010e2c <XSetStandardProperties@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #86016	; 0x15000
   10e34:	ldr	pc, [ip, #472]!	; 0x1d8

00010e38 <strcmp@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #86016	; 0x15000
   10e40:	ldr	pc, [ip, #464]!	; 0x1d0

00010e44 <strtol@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #86016	; 0x15000
   10e4c:	ldr	pc, [ip, #456]!	; 0x1c8

00010e50 <XRRQueryExtension@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #86016	; 0x15000
   10e58:	ldr	pc, [ip, #448]!	; 0x1c0

00010e5c <XLookupString@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #86016	; 0x15000
   10e64:	ldr	pc, [ip, #440]!	; 0x1b8

00010e68 <fflush@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #86016	; 0x15000
   10e70:	ldr	pc, [ip, #432]!	; 0x1b0

00010e74 <XRRQueryVersion@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #86016	; 0x15000
   10e7c:	ldr	pc, [ip, #424]!	; 0x1a8

00010e80 <memcpy@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #86016	; 0x15000
   10e88:	ldr	pc, [ip, #416]!	; 0x1a0

00010e8c <XOpenIM@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #86016	; 0x15000
   10e94:	ldr	pc, [ip, #408]!	; 0x198

00010e98 <XRRFreeOutputInfo@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #86016	; 0x15000
   10ea0:	ldr	pc, [ip, #400]!	; 0x190

00010ea4 <XRRUpdateConfiguration@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #86016	; 0x15000
   10eac:	ldr	pc, [ip, #392]!	; 0x188

00010eb0 <XParseGeometry@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #86016	; 0x15000
   10eb8:	ldr	pc, [ip, #384]!	; 0x180

00010ebc <XGetIMValues@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #86016	; 0x15000
   10ec4:	ldr	pc, [ip, #376]!	; 0x178

00010ec8 <__stack_chk_fail@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #86016	; 0x15000
   10ed0:	ldr	pc, [ip, #368]!	; 0x170

00010ed4 <XmbLookupString@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #86016	; 0x15000
   10edc:	ldr	pc, [ip, #360]!	; 0x168

00010ee0 <XFree@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #86016	; 0x15000
   10ee8:	ldr	pc, [ip, #352]!	; 0x160

00010eec <realloc@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #86016	; 0x15000
   10ef4:	ldr	pc, [ip, #344]!	; 0x158

00010ef8 <XRRGetScreenResources@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #86016	; 0x15000
   10f00:	ldr	pc, [ip, #336]!	; 0x150

00010f04 <fwrite@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #86016	; 0x15000
   10f0c:	ldr	pc, [ip, #328]!	; 0x148

00010f10 <puts@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #86016	; 0x15000
   10f18:	ldr	pc, [ip, #320]!	; 0x140

00010f1c <malloc@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #86016	; 0x15000
   10f24:	ldr	pc, [ip, #312]!	; 0x138

00010f28 <XCreateIC@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #86016	; 0x15000
   10f30:	ldr	pc, [ip, #304]!	; 0x130

00010f34 <__libc_start_main@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #86016	; 0x15000
   10f3c:	ldr	pc, [ip, #296]!	; 0x128

00010f40 <XOpenDisplay@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #86016	; 0x15000
   10f48:	ldr	pc, [ip, #288]!	; 0x120

00010f4c <XRRFreeScreenResources@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #86016	; 0x15000
   10f54:	ldr	pc, [ip, #280]!	; 0x118

00010f58 <__gmon_start__@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #86016	; 0x15000
   10f60:	ldr	pc, [ip, #272]!	; 0x110

00010f64 <exit@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #86016	; 0x15000
   10f6c:	ldr	pc, [ip, #264]!	; 0x108

00010f70 <XSetWMProtocols@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #86016	; 0x15000
   10f78:	ldr	pc, [ip, #256]!	; 0x100

00010f7c <XKeysymToKeycode@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #86016	; 0x15000
   10f84:	ldr	pc, [ip, #248]!	; 0xf8

00010f88 <strlen@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #86016	; 0x15000
   10f90:	ldr	pc, [ip, #240]!	; 0xf0

00010f94 <XNextEvent@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #86016	; 0x15000
   10f9c:	ldr	pc, [ip, #232]!	; 0xe8

00010fa0 <XInternAtom@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #86016	; 0x15000
   10fa8:	ldr	pc, [ip, #224]!	; 0xe0

00010fac <strncasecmp@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #86016	; 0x15000
   10fb4:	ldr	pc, [ip, #216]!	; 0xd8

00010fb8 <__sprintf_chk@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #86016	; 0x15000
   10fc0:	ldr	pc, [ip, #208]!	; 0xd0

00010fc4 <XDisplayName@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #86016	; 0x15000
   10fcc:	ldr	pc, [ip, #200]!	; 0xc8

00010fd0 <putchar@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #86016	; 0x15000
   10fd8:	ldr	pc, [ip, #192]!	; 0xc0

00010fdc <XSetLocaleModifiers@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #86016	; 0x15000
   10fe4:	ldr	pc, [ip, #184]!	; 0xb8

00010fe8 <XCreateWindow@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #86016	; 0x15000
   10ff0:	ldr	pc, [ip, #176]!	; 0xb0

00010ff4 <XGetAtomName@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #86016	; 0x15000
   10ffc:	ldr	pc, [ip, #168]!	; 0xa8

00011000 <XRefreshKeyboardMapping@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #86016	; 0x15000
   11008:	ldr	pc, [ip, #160]!	; 0xa0

0001100c <__printf_chk@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #86016	; 0x15000
   11014:	ldr	pc, [ip, #152]!	; 0x98

00011018 <XSelectInput@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #86016	; 0x15000
   11020:	ldr	pc, [ip, #144]!	; 0x90

00011024 <__fprintf_chk@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #86016	; 0x15000
   1102c:	ldr	pc, [ip, #136]!	; 0x88

00011030 <XCreateSimpleWindow@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #86016	; 0x15000
   11038:	ldr	pc, [ip, #128]!	; 0x80

0001103c <setlocale@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #86016	; 0x15000
   11044:	ldr	pc, [ip, #120]!	; 0x78

00011048 <XGetWindowAttributes@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #86016	; 0x15000
   11050:	ldr	pc, [ip, #112]!	; 0x70

00011054 <sscanf@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #86016	; 0x15000
   1105c:	ldr	pc, [ip, #104]!	; 0x68

00011060 <XMapWindow@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #86016	; 0x15000
   11068:	ldr	pc, [ip, #96]!	; 0x60

0001106c <XRRSelectInput@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #86016	; 0x15000
   11074:	ldr	pc, [ip, #88]!	; 0x58

00011078 <XFilterEvent@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #86016	; 0x15000
   11080:	ldr	pc, [ip, #80]!	; 0x50

00011084 <XKeysymToString@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #86016	; 0x15000
   1108c:	ldr	pc, [ip, #72]!	; 0x48

00011090 <abort@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #86016	; 0x15000
   11098:	ldr	pc, [ip, #64]!	; 0x40

0001109c <XRRGetOutputInfo@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #86016	; 0x15000
   110a4:	ldr	pc, [ip, #56]!	; 0x38

Disassembly of section .text:

000110a8 <.text>:
   110a8:	ldr	r3, [pc, #4000]	; 12050 <XRRGetOutputInfo@plt+0xfb4>
   110ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110b0:	sub	sp, sp, #428	; 0x1ac
   110b4:	ldr	r8, [pc, #3992]	; 12054 <XRRGetOutputInfo@plt+0xfb8>
   110b8:	ldr	r2, [r1]
   110bc:	ldr	r3, [r3]
   110c0:	mov	r6, r1
   110c4:	mov	r7, r0
   110c8:	ldr	r1, [pc, #3976]	; 12058 <XRRGetOutputInfo@plt+0xfbc>
   110cc:	mov	r0, #6
   110d0:	str	r2, [r8]
   110d4:	str	r3, [sp, #420]	; 0x1a4
   110d8:	bl	1103c <setlocale@plt>
   110dc:	cmp	r0, #0
   110e0:	beq	11324 <XRRGetOutputInfo@plt+0x288>
   110e4:	mov	r4, #0
   110e8:	cmp	r7, #1
   110ec:	str	r4, [sp, #308]	; 0x134
   110f0:	str	r4, [sp, #304]	; 0x130
   110f4:	str	r4, [sp, #64]	; 0x40
   110f8:	ble	1140c <XRRGetOutputInfo@plt+0x370>
   110fc:	ldr	r2, [r6, #4]
   11100:	ldrb	r3, [r2]
   11104:	cmp	r3, #45	; 0x2d
   11108:	bne	111e0 <XRRGetOutputInfo@plt+0x144>
   1110c:	ldr	r3, [pc, #3912]	; 1205c <XRRGetOutputInfo@plt+0xfc0>
   11110:	ldr	r9, [pc, #3912]	; 12060 <XRRGetOutputInfo@plt+0xfc4>
   11114:	mov	fp, r4
   11118:	mov	sl, r4
   1111c:	mov	r5, #1
   11120:	str	r3, [sp, #40]	; 0x28
   11124:	mov	r3, #2
   11128:	str	r4, [sp, #48]	; 0x30
   1112c:	str	r4, [sp, #44]	; 0x2c
   11130:	str	r4, [sp, #36]	; 0x24
   11134:	str	r3, [sp, #52]	; 0x34
   11138:	ldrb	r3, [r2, #1]
   1113c:	sub	r3, r3, #98	; 0x62
   11140:	cmp	r3, #20
   11144:	ldrls	pc, [pc, r3, lsl #2]
   11148:	b	111e0 <XRRGetOutputInfo@plt+0x144>
   1114c:	andeq	r1, r1, r4, lsl r2
   11150:	andeq	r1, r1, r0, ror #3
   11154:	andeq	r1, r1, ip, lsr r2
   11158:	andeq	r1, r1, r0, lsr #3
   1115c:	andeq	r1, r1, r0, ror #3
   11160:	andeq	r1, r1, r0, lsl r3
   11164:	andeq	r1, r1, r0, ror #3
   11168:	andeq	r1, r1, r0, asr r2
   1116c:	andeq	r1, r1, r0, ror #3
   11170:	andeq	r1, r1, r0, ror #3
   11174:	andeq	r1, r1, r0, ror #3
   11178:	andeq	r1, r1, r0, ror #3
   1117c:	andeq	r1, r1, ip, asr #5
   11180:	andeq	r1, r1, r0, ror #3
   11184:	andeq	r1, r1, r0, ror #3
   11188:	andeq	r1, r1, r0, ror #3
   1118c:	andeq	r1, r1, r0, ror #5
   11190:	andeq	r1, r1, r0, lsl #6
   11194:	andeq	r1, r1, r0, ror #3
   11198:	andeq	r1, r1, r0, ror #3
   1119c:	andeq	r1, r1, r4, lsl #4
   111a0:	add	r5, r5, #1
   111a4:	cmp	r7, r5
   111a8:	ble	12c10 <XRRGetOutputInfo@plt+0x1b74>
   111ac:	add	r1, sp, #304	; 0x130
   111b0:	ldr	r0, [r6, r5, lsl #2]
   111b4:	bl	137ac <XRRGetOutputInfo@plt+0x2710>
   111b8:	cmp	r0, #0
   111bc:	beq	11200 <XRRGetOutputInfo@plt+0x164>
   111c0:	mov	r4, #1
   111c4:	add	r5, r5, #1
   111c8:	cmp	r7, r5
   111cc:	ble	12584 <XRRGetOutputInfo@plt+0x14e8>
   111d0:	ldr	r2, [r6, r5, lsl #2]
   111d4:	ldrb	r3, [r2]
   111d8:	cmp	r3, #45	; 0x2d
   111dc:	beq	11138 <XRRGetOutputInfo@plt+0x9c>
   111e0:	ldr	r1, [pc, #3708]	; 12064 <XRRGetOutputInfo@plt+0xfc8>
   111e4:	str	r2, [sp]
   111e8:	ldr	r2, [pc, #3704]	; 12068 <XRRGetOutputInfo@plt+0xfcc>
   111ec:	ldr	r0, [r1]
   111f0:	ldr	r3, [r8]
   111f4:	mov	r1, #1
   111f8:	bl	11024 <__fprintf_chk@plt>
   111fc:	mov	r0, #0
   11200:	bl	12ddc <XRRGetOutputInfo@plt+0x1d40>
   11204:	ldr	r0, [pc, #3680]	; 1206c <XRRGetOutputInfo@plt+0xfd0>
   11208:	bl	10f10 <puts@plt>
   1120c:	mov	r0, #0
   11210:	bl	10f64 <exit@plt>
   11214:	ldrb	r3, [r2, #2]
   11218:	cmp	r3, #115	; 0x73
   1121c:	beq	1136c <XRRGetOutputInfo@plt+0x2d0>
   11220:	cmp	r3, #119	; 0x77
   11224:	bne	111e0 <XRRGetOutputInfo@plt+0x144>
   11228:	add	r5, r5, #1
   1122c:	cmp	r7, r5
   11230:	bgt	11380 <XRRGetOutputInfo@plt+0x2e4>
   11234:	ldr	r0, [pc, #3636]	; 12070 <XRRGetOutputInfo@plt+0xfd4>
   11238:	bl	12ddc <XRRGetOutputInfo@plt+0x1d40>
   1123c:	add	r5, r5, #1
   11240:	cmp	r7, r5
   11244:	bgt	1134c <XRRGetOutputInfo@plt+0x2b0>
   11248:	ldr	r0, [pc, #3620]	; 12074 <XRRGetOutputInfo@plt+0xfd8>
   1124c:	bl	12ddc <XRRGetOutputInfo@plt+0x1d40>
   11250:	add	r5, r5, #1
   11254:	cmp	r7, r5
   11258:	ble	12bf8 <XRRGetOutputInfo@plt+0x1b5c>
   1125c:	add	r2, sp, #64	; 0x40
   11260:	mov	r1, r9
   11264:	ldr	r0, [r6, r5, lsl #2]
   11268:	bl	11054 <sscanf@plt>
   1126c:	ldr	r2, [sp, #64]	; 0x40
   11270:	add	r3, r6, r5, lsl #2
   11274:	cmp	r2, #0
   11278:	bne	111c4 <XRRGetOutputInfo@plt+0x128>
   1127c:	add	r2, sp, #64	; 0x40
   11280:	ldr	r1, [pc, #3568]	; 12078 <XRRGetOutputInfo@plt+0xfdc>
   11284:	ldr	r0, [r6, r5, lsl #2]
   11288:	str	r3, [sp, #56]	; 0x38
   1128c:	bl	11054 <sscanf@plt>
   11290:	ldr	r2, [sp, #64]	; 0x40
   11294:	cmp	r2, #0
   11298:	bne	111c4 <XRRGetOutputInfo@plt+0x128>
   1129c:	ldr	r3, [sp, #56]	; 0x38
   112a0:	mov	r4, r2
   112a4:	ldr	r2, [pc, #3512]	; 12064 <XRRGetOutputInfo@plt+0xfc8>
   112a8:	ldr	r1, [r3]
   112ac:	ldr	r3, [r8]
   112b0:	str	r1, [sp]
   112b4:	mov	r1, #1
   112b8:	ldr	r0, [r2]
   112bc:	ldr	r2, [pc, #3512]	; 1207c <XRRGetOutputInfo@plt+0xfe0>
   112c0:	bl	11024 <__fprintf_chk@plt>
   112c4:	mov	r0, r4
   112c8:	bl	12ddc <XRRGetOutputInfo@plt+0x1d40>
   112cc:	add	r5, r5, #1
   112d0:	cmp	r7, r5
   112d4:	bgt	11340 <XRRGetOutputInfo@plt+0x2a4>
   112d8:	ldr	r0, [pc, #3488]	; 12080 <XRRGetOutputInfo@plt+0xfe4>
   112dc:	bl	12ddc <XRRGetOutputInfo@plt+0x1d40>
   112e0:	ldrb	r3, [r2, #2]
   112e4:	cmp	r3, #111	; 0x6f
   112e8:	beq	11360 <XRRGetOutputInfo@plt+0x2c4>
   112ec:	cmp	r3, #118	; 0x76
   112f0:	bne	111e0 <XRRGetOutputInfo@plt+0x144>
   112f4:	mov	r3, #1
   112f8:	str	r3, [sp, #44]	; 0x2c
   112fc:	b	111c4 <XRRGetOutputInfo@plt+0x128>
   11300:	mov	r3, #1
   11304:	orr	fp, fp, #1024	; 0x400
   11308:	str	r3, [sp, #116]	; 0x74
   1130c:	b	111c4 <XRRGetOutputInfo@plt+0x128>
   11310:	add	r5, r5, #1
   11314:	cmp	r7, r5
   11318:	bgt	11354 <XRRGetOutputInfo@plt+0x2b8>
   1131c:	ldr	r0, [pc, #3424]	; 12084 <XRRGetOutputInfo@plt+0xfe8>
   11320:	bl	12ddc <XRRGetOutputInfo@plt+0x1d40>
   11324:	ldr	r1, [pc, #3384]	; 12064 <XRRGetOutputInfo@plt+0xfc8>
   11328:	ldr	r3, [r8]
   1132c:	ldr	r2, [pc, #3412]	; 12088 <XRRGetOutputInfo@plt+0xfec>
   11330:	ldr	r0, [r1]
   11334:	mov	r1, #1
   11338:	bl	11024 <__fprintf_chk@plt>
   1133c:	b	110e4 <XRRGetOutputInfo@plt+0x48>
   11340:	ldr	r3, [r6, r5, lsl #2]
   11344:	str	r3, [sp, #40]	; 0x28
   11348:	b	111c4 <XRRGetOutputInfo@plt+0x128>
   1134c:	ldr	sl, [r6, r5, lsl #2]
   11350:	b	111c4 <XRRGetOutputInfo@plt+0x128>
   11354:	ldr	r3, [r6, r5, lsl #2]
   11358:	str	r3, [sp, #36]	; 0x24
   1135c:	b	111c4 <XRRGetOutputInfo@plt+0x128>
   11360:	mov	r3, #1
   11364:	str	r3, [sp, #48]	; 0x30
   11368:	b	111c4 <XRRGetOutputInfo@plt+0x128>
   1136c:	add	r5, r5, #1
   11370:	cmp	r7, r5
   11374:	bgt	11398 <XRRGetOutputInfo@plt+0x2fc>
   11378:	ldr	r0, [pc, #3340]	; 1208c <XRRGetOutputInfo@plt+0xff0>
   1137c:	bl	12ddc <XRRGetOutputInfo@plt+0x1d40>
   11380:	mov	r2, #10
   11384:	mov	r1, #0
   11388:	ldr	r0, [r6, r5, lsl #2]
   1138c:	bl	10e44 <strtol@plt>
   11390:	str	r0, [sp, #52]	; 0x34
   11394:	b	111c4 <XRRGetOutputInfo@plt+0x128>
   11398:	ldr	r3, [r6, r5, lsl #2]
   1139c:	mov	r0, r3
   113a0:	str	r3, [sp, #56]	; 0x38
   113a4:	bl	10f88 <strlen@plt>
   113a8:	ldr	r1, [pc, #3296]	; 12090 <XRRGetOutputInfo@plt+0xff4>
   113ac:	mov	r2, r0
   113b0:	str	r0, [sp, #60]	; 0x3c
   113b4:	ldr	r0, [sp, #56]	; 0x38
   113b8:	bl	10fac <strncasecmp@plt>
   113bc:	cmp	r0, #0
   113c0:	beq	11400 <XRRGetOutputInfo@plt+0x364>
   113c4:	ldr	r3, [sp, #60]	; 0x3c
   113c8:	ldr	r1, [pc, #3268]	; 12094 <XRRGetOutputInfo@plt+0xff8>
   113cc:	mov	r2, r3
   113d0:	ldr	r0, [sp, #56]	; 0x38
   113d4:	bl	10fac <strncasecmp@plt>
   113d8:	cmp	r0, #0
   113dc:	beq	12bb8 <XRRGetOutputInfo@plt+0x1b1c>
   113e0:	ldr	r3, [sp, #60]	; 0x3c
   113e4:	ldr	r1, [pc, #3244]	; 12098 <XRRGetOutputInfo@plt+0xffc>
   113e8:	mov	r2, r3
   113ec:	ldr	r0, [sp, #56]	; 0x38
   113f0:	bl	10fac <strncasecmp@plt>
   113f4:	cmp	r0, #0
   113f8:	bne	12cc4 <XRRGetOutputInfo@plt+0x1c28>
   113fc:	mov	r0, #2
   11400:	str	r0, [sp, #104]	; 0x68
   11404:	orr	fp, fp, #64	; 0x40
   11408:	b	111c4 <XRRGetOutputInfo@plt+0x128>
   1140c:	ldr	r3, [pc, #3144]	; 1205c <XRRGetOutputInfo@plt+0xfc0>
   11410:	mov	fp, r4
   11414:	mov	sl, r4
   11418:	str	r3, [sp, #40]	; 0x28
   1141c:	mov	r3, #2
   11420:	str	r4, [sp, #44]	; 0x2c
   11424:	str	r4, [sp, #48]	; 0x30
   11428:	str	r4, [sp, #36]	; 0x24
   1142c:	str	r3, [sp, #52]	; 0x34
   11430:	add	r1, sp, #304	; 0x130
   11434:	mov	r0, #0
   11438:	bl	137ac <XRRGetOutputInfo@plt+0x2710>
   1143c:	mov	r0, sl
   11440:	bl	10f40 <XOpenDisplay@plt>
   11444:	ldr	r4, [pc, #3152]	; 1209c <XRRGetOutputInfo@plt+0x1000>
   11448:	cmp	r0, #0
   1144c:	str	r0, [r4]
   11450:	beq	12a50 <XRRGetOutputInfo@plt+0x19b4>
   11454:	ldr	r0, [pc, #3140]	; 120a0 <XRRGetOutputInfo@plt+0x1004>
   11458:	bl	10fdc <XSetLocaleModifiers@plt>
   1145c:	cmp	r0, #0
   11460:	beq	12c18 <XRRGetOutputInfo@plt+0x1b7c>
   11464:	mov	r3, #0
   11468:	mov	r2, r3
   1146c:	mov	r1, r3
   11470:	ldr	r0, [r4]
   11474:	bl	10e8c <XOpenIM@plt>
   11478:	subs	r3, r0, #0
   1147c:	str	r3, [sp, #56]	; 0x38
   11480:	beq	12bd8 <XRRGetOutputInfo@plt+0x1b3c>
   11484:	mov	r3, #0
   11488:	add	r2, sp, #68	; 0x44
   1148c:	ldr	r1, [pc, #3088]	; 120a4 <XRRGetOutputInfo@plt+0x1008>
   11490:	bl	10ebc <XGetIMValues@plt>
   11494:	cmp	r0, #0
   11498:	beq	12bc8 <XRRGetOutputInfo@plt+0x1b2c>
   1149c:	ldr	r1, [pc, #3008]	; 12064 <XRRGetOutputInfo@plt+0xfc8>
   114a0:	ldr	r2, [pc, #3072]	; 120a8 <XRRGetOutputInfo@plt+0x100c>
   114a4:	ldr	r3, [r8]
   114a8:	ldr	r0, [r1]
   114ac:	mov	r1, #1
   114b0:	bl	11024 <__fprintf_chk@plt>
   114b4:	ldr	r2, [sp, #68]	; 0x44
   114b8:	cmp	r2, #0
   114bc:	moveq	sl, r2
   114c0:	beq	11514 <XRRGetOutputInfo@plt+0x478>
   114c4:	ldrh	ip, [r2]
   114c8:	ldr	r0, [pc, #3036]	; 120ac <XRRGetOutputInfo@plt+0x1010>
   114cc:	mov	r3, #0
   114d0:	b	114e8 <XRRGetOutputInfo@plt+0x44c>
   114d4:	ldr	r1, [r2, #4]
   114d8:	ldr	sl, [r1, r3, lsl #2]
   114dc:	cmp	sl, r0
   114e0:	beq	1150c <XRRGetOutputInfo@plt+0x470>
   114e4:	add	r3, r3, #1
   114e8:	cmp	ip, r3
   114ec:	bgt	114d4 <XRRGetOutputInfo@plt+0x438>
   114f0:	ldr	r1, [pc, #2924]	; 12064 <XRRGetOutputInfo@plt+0xfc8>
   114f4:	ldr	r3, [r8]
   114f8:	ldr	r2, [pc, #2992]	; 120b0 <XRRGetOutputInfo@plt+0x1014>
   114fc:	ldr	r0, [r1]
   11500:	mov	r1, #1
   11504:	bl	11024 <__fprintf_chk@plt>
   11508:	mov	sl, #0
   1150c:	ldr	r0, [sp, #68]	; 0x44
   11510:	bl	10ee0 <XFree@plt>
   11514:	ldr	r1, [sp, #48]	; 0x30
   11518:	ldr	r0, [r4]
   1151c:	cmp	r1, #0
   11520:	ldr	r2, [sp, #304]	; 0x130
   11524:	ldr	r3, [r0, #132]	; 0x84
   11528:	ldr	r5, [pc, #2948]	; 120b4 <XRRGetOutputInfo@plt+0x1018>
   1152c:	movne	r1, #80	; 0x50
   11530:	str	r2, [sp, #120]	; 0x78
   11534:	ldrne	r2, [r0, #140]	; 0x8c
   11538:	str	r3, [r5]
   1153c:	mlane	r3, r1, r3, r2
   11540:	ldrne	r3, [r3, #8]
   11544:	strne	r3, [sp, #64]	; 0x40
   11548:	ldr	r1, [sp, #64]	; 0x40
   1154c:	cmp	r1, #0
   11550:	beq	12810 <XRRGetOutputInfo@plt+0x1774>
   11554:	add	r2, sp, #212	; 0xd4
   11558:	bl	11048 <XGetWindowAttributes@plt>
   1155c:	ldr	r3, [sp, #284]	; 0x11c
   11560:	ldr	r1, [sp, #64]	; 0x40
   11564:	tst	r3, #4
   11568:	ldr	r3, [sp, #120]	; 0x78
   1156c:	ldr	r0, [r4]
   11570:	bicne	r3, r3, #4
   11574:	bic	r3, r3, #1048576	; 0x100000
   11578:	mov	r2, r3
   1157c:	ldr	r9, [pc, #3324]	; 12280 <XRRGetOutputInfo@plt+0x11e4>
   11580:	str	r3, [sp, #120]	; 0x78
   11584:	bl	11018 <XSelectInput@plt>
   11588:	ldr	r3, [pc, #3320]	; 12288 <XRRGetOutputInfo@plt+0x11ec>
   1158c:	str	r3, [sp, #36]	; 0x24
   11590:	ldr	r3, [sp, #56]	; 0x38
   11594:	cmp	r3, #0
   11598:	cmpne	sl, #0
   1159c:	bne	12ac8 <XRRGetOutputInfo@plt+0x1a2c>
   115a0:	ldr	r2, [pc, #2832]	; 120b8 <XRRGetOutputInfo@plt+0x101c>
   115a4:	ldr	r1, [pc, #3148]	; 121f8 <XRRGetOutputInfo@plt+0x115c>
   115a8:	ldr	r0, [r4]
   115ac:	bl	10e50 <XRRQueryExtension@plt>
   115b0:	ldr	sl, [pc, #2820]	; 120bc <XRRGetOutputInfo@plt+0x1020>
   115b4:	cmp	r0, #0
   115b8:	str	r0, [sl]
   115bc:	bne	12a84 <XRRGetOutputInfo@plt+0x19e8>
   115c0:	ldr	r7, [pc, #2808]	; 120c0 <XRRGetOutputInfo@plt+0x1024>
   115c4:	add	r5, sp, #312	; 0x138
   115c8:	mov	r1, r5
   115cc:	ldr	r0, [r4]
   115d0:	bl	10f94 <XNextEvent@plt>
   115d4:	ldr	r2, [sp, #312]	; 0x138
   115d8:	sub	r3, r2, #2
   115dc:	cmp	r3, #32
   115e0:	ldrls	pc, [pc, r3, lsl #2]
   115e4:	b	12378 <XRRGetOutputInfo@plt+0x12dc>
   115e8:	andeq	r1, r1, r8, asr #30
   115ec:	andeq	r2, r1, r8
   115f0:	strdeq	r1, [r1], -r0
   115f4:	ldrdeq	r1, [r1], -r8
   115f8:	andeq	r1, r1, r0, ror #30
   115fc:	andeq	r2, r1, r8, lsr r0
   11600:	andeq	r2, r1, r0, lsr #32
   11604:	andeq	r1, r1, r0, lsr pc
   11608:	andeq	r1, r1, r8, lsl pc
   1160c:			; <UNDEFINED> instruction: 0x00011eb4
   11610:	andeq	r1, r1, r8, ror lr
   11614:	strdeq	r1, [r1], -r4
   11618:	andeq	r1, r1, r0, lsr #27
   1161c:	andeq	r1, r1, r8, asr #26
   11620:	andeq	r1, r1, r0, ror #25
   11624:			; <UNDEFINED> instruction: 0x00011cbc
   11628:	andeq	r1, r1, r0, lsl #25
   1162c:	andeq	r1, r1, ip, lsr #19
   11630:	andeq	r1, r1, r8, lsl #19
   11634:	andeq	r1, r1, r0, lsr r9
   11638:	andeq	r1, r1, r0, asr #17
   1163c:	muleq	r1, r0, r8
   11640:	andeq	r1, r1, ip, asr r8
   11644:	andeq	r1, r1, r8, lsr r8
   11648:	ldrdeq	r1, [r1], -ip
   1164c:	andeq	r1, r1, r0, lsl #23
   11650:	strdeq	r1, [r1], -ip
   11654:			; <UNDEFINED> instruction: 0x00011ab0
   11658:	andeq	r1, r1, r8, ror #19
   1165c:	ldrdeq	r1, [r1], -ip
   11660:	andeq	r1, r1, r0, ror r7
   11664:	andeq	r1, r1, r0, ror #13
   11668:	andeq	r1, r1, ip, ror #12
   1166c:	ldr	r1, [pc, #2640]	; 120c4 <XRRGetOutputInfo@plt+0x1028>
   11670:	mov	r0, r5
   11674:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   11678:	ldr	r3, [sp, #332]	; 0x14c
   1167c:	cmp	r3, #1
   11680:	beq	123e8 <XRRGetOutputInfo@plt+0x134c>
   11684:	cmp	r3, #2
   11688:	beq	123f0 <XRRGetOutputInfo@plt+0x1354>
   1168c:	cmp	r3, #0
   11690:	ldreq	r2, [pc, #2608]	; 120c8 <XRRGetOutputInfo@plt+0x102c>
   11694:	beq	116b4 <XRRGetOutputInfo@plt+0x618>
   11698:	str	r3, [sp]
   1169c:	mov	r2, #10
   116a0:	add	r0, sp, #408	; 0x198
   116a4:	ldr	r3, [pc, #3120]	; 122dc <XRRGetOutputInfo@plt+0x1240>
   116a8:	mov	r1, #1
   116ac:	bl	10fb8 <__sprintf_chk@plt>
   116b0:	add	r2, sp, #408	; 0x198
   116b4:	ldr	r3, [sp, #340]	; 0x154
   116b8:	ldr	r1, [pc, #2572]	; 120cc <XRRGetOutputInfo@plt+0x1030>
   116bc:	str	r3, [sp]
   116c0:	mov	r0, #1
   116c4:	ldr	r3, [sp, #336]	; 0x150
   116c8:	bl	1100c <__printf_chk@plt>
   116cc:	mov	r0, r5
   116d0:	bl	11000 <XRefreshKeyboardMapping@plt>
   116d4:	ldr	r0, [r7]
   116d8:	bl	10e68 <fflush@plt>
   116dc:	b	115c8 <XRRGetOutputInfo@plt+0x52c>
   116e0:	ldr	r1, [pc, #2536]	; 120d0 <XRRGetOutputInfo@plt+0x1034>
   116e4:	mov	r0, r5
   116e8:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   116ec:	ldr	r1, [sp, #332]	; 0x14c
   116f0:	ldr	r0, [r4]
   116f4:	bl	10ff4 <XGetAtomName@plt>
   116f8:	ldr	r2, [sp, #332]	; 0x14c
   116fc:	ldr	r3, [r9]
   11700:	cmp	r2, r3
   11704:	mov	r6, r0
   11708:	beq	12400 <XRRGetOutputInfo@plt+0x1364>
   1170c:	cmp	r0, #0
   11710:	ldr	r1, [sp, #336]	; 0x150
   11714:	ldreq	r3, [pc, #2820]	; 12220 <XRRGetOutputInfo@plt+0x1184>
   11718:	movne	r3, r0
   1171c:	mov	r0, #1
   11720:	ldreq	r3, [r3, #80]	; 0x50
   11724:	str	r1, [sp]
   11728:	ldr	r1, [pc, #2468]	; 120d4 <XRRGetOutputInfo@plt+0x1038>
   1172c:	bl	1100c <__printf_chk@plt>
   11730:	mov	r0, r6
   11734:	bl	10ee0 <XFree@plt>
   11738:	ldr	r3, [sp, #336]	; 0x150
   1173c:	cmp	r3, #32
   11740:	bne	116d4 <XRRGetOutputInfo@plt+0x638>
   11744:	ldr	r2, [sp, #332]	; 0x14c
   11748:	ldr	r3, [r9]
   1174c:	cmp	r2, r3
   11750:	bne	116d4 <XRRGetOutputInfo@plt+0x638>
   11754:	ldr	r3, [sp, #36]	; 0x24
   11758:	ldr	r2, [sp, #340]	; 0x154
   1175c:	ldr	r3, [r3]
   11760:	cmp	r2, r3
   11764:	bne	116d4 <XRRGetOutputInfo@plt+0x638>
   11768:	mov	r0, #0
   1176c:	bl	10f64 <exit@plt>
   11770:	ldr	r1, [pc, #2400]	; 120d8 <XRRGetOutputInfo@plt+0x103c>
   11774:	mov	r0, r5
   11778:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   1177c:	ldr	r3, [sp, #340]	; 0x154
   11780:	cmp	r3, #0
   11784:	beq	123d8 <XRRGetOutputInfo@plt+0x133c>
   11788:	cmp	r3, #1
   1178c:	ldreq	r1, [pc, #2376]	; 120dc <XRRGetOutputInfo@plt+0x1040>
   11790:	beq	117b0 <XRRGetOutputInfo@plt+0x714>
   11794:	str	r3, [sp]
   11798:	mov	r1, #1
   1179c:	add	r0, sp, #408	; 0x198
   117a0:	ldr	r3, [pc, #2868]	; 122dc <XRRGetOutputInfo@plt+0x1240>
   117a4:	mov	r2, #10
   117a8:	bl	10fb8 <__sprintf_chk@plt>
   117ac:	add	r1, sp, #408	; 0x198
   117b0:	ldr	r3, [sp, #336]	; 0x150
   117b4:	ldr	r2, [sp, #332]	; 0x14c
   117b8:	cmp	r3, #0
   117bc:	ldr	r3, [pc, #2652]	; 12220 <XRRGetOutputInfo@plt+0x1184>
   117c0:	mov	r0, #1
   117c4:	ldrne	r3, [r3, #68]	; 0x44
   117c8:	ldreq	r3, [r3, #72]	; 0x48
   117cc:	str	r1, [sp]
   117d0:	ldr	r1, [pc, #2312]	; 120e0 <XRRGetOutputInfo@plt+0x1044>
   117d4:	bl	1100c <__printf_chk@plt>
   117d8:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   117dc:	ldr	r1, [pc, #2304]	; 120e4 <XRRGetOutputInfo@plt+0x1048>
   117e0:	mov	r0, r5
   117e4:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   117e8:	ldr	r3, [sp, #336]	; 0x150
   117ec:	cmp	r3, #0
   117f0:	beq	123d0 <XRRGetOutputInfo@plt+0x1334>
   117f4:	cmp	r3, #1
   117f8:	ldreq	r3, [pc, #2280]	; 120e8 <XRRGetOutputInfo@plt+0x104c>
   117fc:	beq	1181c <XRRGetOutputInfo@plt+0x780>
   11800:	str	r3, [sp]
   11804:	add	r0, sp, #408	; 0x198
   11808:	ldr	r3, [pc, #2764]	; 122dc <XRRGetOutputInfo@plt+0x1240>
   1180c:	mov	r2, #10
   11810:	mov	r1, #1
   11814:	bl	10fb8 <__sprintf_chk@plt>
   11818:	add	r3, sp, #408	; 0x198
   1181c:	str	r3, [sp]
   11820:	ldr	r2, [sp, #328]	; 0x148
   11824:	ldr	r3, [sp, #332]	; 0x14c
   11828:	ldr	r1, [pc, #2236]	; 120ec <XRRGetOutputInfo@plt+0x1050>
   1182c:	mov	r0, #1
   11830:	bl	1100c <__printf_chk@plt>
   11834:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   11838:	mov	r0, r5
   1183c:	ldr	r1, [pc, #2220]	; 120f0 <XRRGetOutputInfo@plt+0x1054>
   11840:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   11844:	ldr	r3, [sp, #336]	; 0x150
   11848:	ldr	r2, [sp, #332]	; 0x14c
   1184c:	ldr	r1, [pc, #2208]	; 120f4 <XRRGetOutputInfo@plt+0x1058>
   11850:	mov	r0, #1
   11854:	bl	1100c <__printf_chk@plt>
   11858:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   1185c:	mov	r0, r5
   11860:	ldr	r1, [pc, #2192]	; 120f8 <XRRGetOutputInfo@plt+0x105c>
   11864:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   11868:	ldr	r2, [sp, #340]	; 0x154
   1186c:	ldr	r3, [sp, #336]	; 0x150
   11870:	str	r2, [sp, #4]
   11874:	str	r3, [sp]
   11878:	ldr	r2, [sp, #328]	; 0x148
   1187c:	ldr	r3, [sp, #332]	; 0x14c
   11880:	ldr	r1, [pc, #2164]	; 120fc <XRRGetOutputInfo@plt+0x1060>
   11884:	mov	r0, #1
   11888:	bl	1100c <__printf_chk@plt>
   1188c:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   11890:	ldr	r1, [pc, #2152]	; 12100 <XRRGetOutputInfo@plt+0x1064>
   11894:	mov	r0, r5
   11898:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   1189c:	ldr	r3, [sp, #360]	; 0x168
   118a0:	cmp	r3, #4
   118a4:	ldrls	pc, [pc, r3, lsl #2]
   118a8:	b	1246c <XRRGetOutputInfo@plt+0x13d0>
   118ac:	andeq	r2, r1, r0, ror #6
   118b0:	strdeq	r2, [r1], -ip
   118b4:	andeq	r2, r1, r8, asr r3
   118b8:	andeq	r2, r1, r0, ror r3
   118bc:	andeq	r2, r1, r8, ror #6
   118c0:	mov	r0, r5
   118c4:	ldr	r1, [pc, #2104]	; 12104 <XRRGetOutputInfo@plt+0x1068>
   118c8:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   118cc:	ldr	r0, [sp, #348]	; 0x15c
   118d0:	ldr	r1, [sp, #344]	; 0x158
   118d4:	ldr	r2, [sp, #340]	; 0x154
   118d8:	ldr	r3, [sp, #336]	; 0x150
   118dc:	str	r0, [sp, #12]
   118e0:	str	r1, [sp, #8]
   118e4:	str	r2, [sp, #4]
   118e8:	str	r3, [sp]
   118ec:	ldr	r2, [sp, #328]	; 0x148
   118f0:	ldr	r3, [sp, #332]	; 0x14c
   118f4:	ldr	r1, [pc, #2060]	; 12108 <XRRGetOutputInfo@plt+0x106c>
   118f8:	mov	r0, #1
   118fc:	bl	1100c <__printf_chk@plt>
   11900:	ldr	r3, [sp, #360]	; 0x168
   11904:	ldr	r1, [pc, #2324]	; 12220 <XRRGetOutputInfo@plt+0x1184>
   11908:	cmp	r3, #0
   1190c:	ldr	r2, [sp, #352]	; 0x160
   11910:	ldrne	r1, [r1, #68]	; 0x44
   11914:	ldreq	r1, [r1, #72]	; 0x48
   11918:	ldr	r3, [sp, #356]	; 0x164
   1191c:	str	r1, [sp]
   11920:	mov	r0, #1
   11924:	ldr	r1, [pc, #2016]	; 1210c <XRRGetOutputInfo@plt+0x1070>
   11928:	bl	1100c <__printf_chk@plt>
   1192c:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   11930:	mov	r0, r5
   11934:	ldr	r1, [pc, #2004]	; 12110 <XRRGetOutputInfo@plt+0x1074>
   11938:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   1193c:	ldr	r2, [sp, #336]	; 0x150
   11940:	ldr	r3, [sp, #332]	; 0x14c
   11944:	str	r2, [sp]
   11948:	ldr	r1, [pc, #1988]	; 12114 <XRRGetOutputInfo@plt+0x1078>
   1194c:	ldr	r2, [sp, #328]	; 0x148
   11950:	mov	r0, #1
   11954:	bl	1100c <__printf_chk@plt>
   11958:	ldr	r3, [sp, #348]	; 0x15c
   1195c:	ldr	r1, [pc, #2236]	; 12220 <XRRGetOutputInfo@plt+0x1184>
   11960:	cmp	r3, #0
   11964:	ldr	r2, [sp, #340]	; 0x154
   11968:	ldrne	r1, [r1, #68]	; 0x44
   1196c:	ldreq	r1, [r1, #72]	; 0x48
   11970:	ldr	r3, [sp, #344]	; 0x158
   11974:	str	r1, [sp]
   11978:	mov	r0, #1
   1197c:	ldr	r1, [pc, #1940]	; 12118 <XRRGetOutputInfo@plt+0x107c>
   11980:	bl	1100c <__printf_chk@plt>
   11984:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   11988:	mov	r0, r5
   1198c:	ldr	r1, [pc, #1928]	; 1211c <XRRGetOutputInfo@plt+0x1080>
   11990:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   11994:	ldr	r3, [sp, #332]	; 0x14c
   11998:	ldr	r2, [sp, #328]	; 0x148
   1199c:	ldr	r1, [pc, #1916]	; 12120 <XRRGetOutputInfo@plt+0x1084>
   119a0:	mov	r0, #1
   119a4:	bl	1100c <__printf_chk@plt>
   119a8:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   119ac:	mov	r0, r5
   119b0:	ldr	r1, [pc, #1900]	; 12124 <XRRGetOutputInfo@plt+0x1088>
   119b4:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   119b8:	ldr	r3, [sp, #336]	; 0x150
   119bc:	ldr	r1, [pc, #2140]	; 12220 <XRRGetOutputInfo@plt+0x1184>
   119c0:	cmp	r3, #0
   119c4:	ldr	r2, [sp, #328]	; 0x148
   119c8:	ldrne	r1, [r1, #68]	; 0x44
   119cc:	ldreq	r1, [r1, #72]	; 0x48
   119d0:	ldr	r3, [sp, #332]	; 0x14c
   119d4:	str	r1, [sp]
   119d8:	mov	r0, #1
   119dc:	ldr	r1, [pc, #1860]	; 12128 <XRRGetOutputInfo@plt+0x108c>
   119e0:	bl	1100c <__printf_chk@plt>
   119e4:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   119e8:	ldr	r1, [pc, #1852]	; 1212c <XRRGetOutputInfo@plt+0x1090>
   119ec:	mov	r0, r5
   119f0:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   119f4:	ldr	r1, [sp, #336]	; 0x150
   119f8:	ldr	r0, [r4]
   119fc:	bl	10ff4 <XGetAtomName@plt>
   11a00:	ldr	r1, [sp, #340]	; 0x154
   11a04:	mov	r8, r0
   11a08:	ldr	r0, [r4]
   11a0c:	bl	10ff4 <XGetAtomName@plt>
   11a10:	ldr	r1, [sp, #344]	; 0x158
   11a14:	mov	r6, r0
   11a18:	ldr	r0, [r4]
   11a1c:	bl	10ff4 <XGetAtomName@plt>
   11a20:	cmp	r8, #0
   11a24:	ldr	r1, [sp, #336]	; 0x150
   11a28:	ldr	r3, [sp, #332]	; 0x14c
   11a2c:	ldr	r2, [sp, #328]	; 0x148
   11a30:	mov	fp, r0
   11a34:	ldreq	r0, [pc, #2020]	; 12220 <XRRGetOutputInfo@plt+0x1184>
   11a38:	movne	r0, r8
   11a3c:	ldreq	r0, [r0, #80]	; 0x50
   11a40:	str	r1, [sp]
   11a44:	str	r0, [sp, #4]
   11a48:	ldr	r1, [pc, #1760]	; 12130 <XRRGetOutputInfo@plt+0x1094>
   11a4c:	mov	r0, #1
   11a50:	bl	1100c <__printf_chk@plt>
   11a54:	cmp	r6, #0
   11a58:	movne	r3, r6
   11a5c:	ldreq	r3, [pc, #1980]	; 12220 <XRRGetOutputInfo@plt+0x1184>
   11a60:	ldr	r0, [sp, #344]	; 0x158
   11a64:	ldr	r2, [sp, #340]	; 0x154
   11a68:	ldreq	r3, [r3, #80]	; 0x50
   11a6c:	cmp	fp, #0
   11a70:	movne	ip, fp
   11a74:	ldreq	r1, [pc, #1956]	; 12220 <XRRGetOutputInfo@plt+0x1184>
   11a78:	ldreq	ip, [r1, #80]	; 0x50
   11a7c:	ldr	r1, [sp, #348]	; 0x15c
   11a80:	stm	sp, {r0, ip}
   11a84:	str	r1, [sp, #8]
   11a88:	mov	r0, #1
   11a8c:	ldr	r1, [pc, #1696]	; 12134 <XRRGetOutputInfo@plt+0x1098>
   11a90:	bl	1100c <__printf_chk@plt>
   11a94:	mov	r0, r8
   11a98:	bl	10ee0 <XFree@plt>
   11a9c:	mov	r0, r6
   11aa0:	bl	10ee0 <XFree@plt>
   11aa4:	mov	r0, fp
   11aa8:	bl	10ee0 <XFree@plt>
   11aac:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   11ab0:	mov	r0, r5
   11ab4:	ldr	r1, [pc, #1660]	; 12138 <XRRGetOutputInfo@plt+0x109c>
   11ab8:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   11abc:	ldr	r1, [sp, #332]	; 0x14c
   11ac0:	ldr	r0, [r4]
   11ac4:	bl	10ff4 <XGetAtomName@plt>
   11ac8:	ldr	r1, [sp, #336]	; 0x150
   11acc:	ldr	r2, [sp, #332]	; 0x14c
   11ad0:	subs	r6, r0, #0
   11ad4:	movne	r3, r6
   11ad8:	ldreq	r3, [pc, #1856]	; 12220 <XRRGetOutputInfo@plt+0x1184>
   11adc:	mov	r0, #1
   11ae0:	ldreq	r3, [r3, #80]	; 0x50
   11ae4:	str	r1, [sp]
   11ae8:	ldr	r1, [pc, #1612]	; 1213c <XRRGetOutputInfo@plt+0x10a0>
   11aec:	bl	1100c <__printf_chk@plt>
   11af0:	mov	r0, r6
   11af4:	bl	10ee0 <XFree@plt>
   11af8:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   11afc:	ldr	r1, [pc, #1596]	; 12140 <XRRGetOutputInfo@plt+0x10a4>
   11b00:	mov	r0, r5
   11b04:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   11b08:	ldr	r1, [sp, #332]	; 0x14c
   11b0c:	ldr	r0, [r4]
   11b10:	bl	10ff4 <XGetAtomName@plt>
   11b14:	ldr	r3, [sp, #340]	; 0x154
   11b18:	cmp	r3, #0
   11b1c:	mov	r6, r0
   11b20:	beq	123c8 <XRRGetOutputInfo@plt+0x132c>
   11b24:	cmp	r3, #1
   11b28:	ldreq	r1, [pc, #1556]	; 12144 <XRRGetOutputInfo@plt+0x10a8>
   11b2c:	beq	11b4c <XRRGetOutputInfo@plt+0xab0>
   11b30:	str	r3, [sp]
   11b34:	mov	r1, #1
   11b38:	add	r0, sp, #408	; 0x198
   11b3c:	ldr	r3, [pc, #1944]	; 122dc <XRRGetOutputInfo@plt+0x1240>
   11b40:	mov	r2, #10
   11b44:	bl	10fb8 <__sprintf_chk@plt>
   11b48:	add	r1, sp, #408	; 0x198
   11b4c:	cmp	r6, #0
   11b50:	ldr	r0, [sp, #336]	; 0x150
   11b54:	ldreq	r3, [pc, #1732]	; 12220 <XRRGetOutputInfo@plt+0x1184>
   11b58:	ldr	r2, [sp, #332]	; 0x14c
   11b5c:	movne	r3, r6
   11b60:	ldreq	r3, [r3, #80]	; 0x50
   11b64:	strd	r0, [sp]
   11b68:	ldr	r1, [pc, #1496]	; 12148 <XRRGetOutputInfo@plt+0x10ac>
   11b6c:	mov	r0, #1
   11b70:	bl	1100c <__printf_chk@plt>
   11b74:	mov	r0, r6
   11b78:	bl	10ee0 <XFree@plt>
   11b7c:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   11b80:	ldr	r1, [pc, #1476]	; 1214c <XRRGetOutputInfo@plt+0x10b0>
   11b84:	mov	r0, r5
   11b88:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   11b8c:	ldr	r3, [sp, #336]	; 0x150
   11b90:	cmp	r3, #0
   11b94:	beq	123c0 <XRRGetOutputInfo@plt+0x1324>
   11b98:	cmp	r3, #1
   11b9c:	ldreq	r3, [pc, #1348]	; 120e8 <XRRGetOutputInfo@plt+0x104c>
   11ba0:	beq	11bc0 <XRRGetOutputInfo@plt+0xb24>
   11ba4:	str	r3, [sp]
   11ba8:	add	r0, sp, #408	; 0x198
   11bac:	ldr	r3, [pc, #1832]	; 122dc <XRRGetOutputInfo@plt+0x1240>
   11bb0:	mov	r2, #10
   11bb4:	mov	r1, #1
   11bb8:	bl	10fb8 <__sprintf_chk@plt>
   11bbc:	add	r3, sp, #408	; 0x198
   11bc0:	str	r3, [sp]
   11bc4:	ldr	r2, [sp, #328]	; 0x148
   11bc8:	ldr	r3, [sp, #332]	; 0x14c
   11bcc:	ldr	r1, [pc, #1404]	; 12150 <XRRGetOutputInfo@plt+0x10b4>
   11bd0:	mov	r0, #1
   11bd4:	bl	1100c <__printf_chk@plt>
   11bd8:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   11bdc:	mov	r0, r5
   11be0:	ldr	r1, [pc, #1388]	; 12154 <XRRGetOutputInfo@plt+0x10b8>
   11be4:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   11be8:	ldr	r1, [sp, #332]	; 0x14c
   11bec:	ldr	r0, [r4]
   11bf0:	bl	10ff4 <XGetAtomName@plt>
   11bf4:	ldr	r1, [sp, #336]	; 0x150
   11bf8:	mov	r8, r0
   11bfc:	ldr	r0, [r4]
   11c00:	bl	10ff4 <XGetAtomName@plt>
   11c04:	ldr	r1, [sp, #340]	; 0x154
   11c08:	mov	r6, r0
   11c0c:	ldr	r0, [r4]
   11c10:	bl	10ff4 <XGetAtomName@plt>
   11c14:	cmp	r8, #0
   11c18:	movne	r3, r8
   11c1c:	ldreq	r3, [pc, #1532]	; 12220 <XRRGetOutputInfo@plt+0x1184>
   11c20:	ldr	r1, [sp, #336]	; 0x150
   11c24:	ldr	r2, [sp, #332]	; 0x14c
   11c28:	ldreq	r3, [r3, #80]	; 0x50
   11c2c:	cmp	r6, #0
   11c30:	mov	fp, r0
   11c34:	ldreq	r0, [pc, #1508]	; 12220 <XRRGetOutputInfo@plt+0x1184>
   11c38:	movne	r0, r6
   11c3c:	ldreq	r0, [r0, #80]	; 0x50
   11c40:	str	r1, [sp]
   11c44:	str	r0, [sp, #4]
   11c48:	ldr	r1, [pc, #1288]	; 12158 <XRRGetOutputInfo@plt+0x10bc>
   11c4c:	mov	r0, #1
   11c50:	bl	1100c <__printf_chk@plt>
   11c54:	cmp	fp, #0
   11c58:	ldr	r1, [sp, #344]	; 0x158
   11c5c:	ldreq	r3, [pc, #1468]	; 12220 <XRRGetOutputInfo@plt+0x1184>
   11c60:	ldr	r2, [sp, #340]	; 0x154
   11c64:	movne	r3, fp
   11c68:	mov	r0, #1
   11c6c:	ldreq	r3, [r3, #80]	; 0x50
   11c70:	str	r1, [sp]
   11c74:	ldr	r1, [pc, #1248]	; 1215c <XRRGetOutputInfo@plt+0x10c0>
   11c78:	bl	1100c <__printf_chk@plt>
   11c7c:	b	11a94 <XRRGetOutputInfo@plt+0x9f8>
   11c80:	mov	r0, r5
   11c84:	ldr	r1, [pc, #1236]	; 12160 <XRRGetOutputInfo@plt+0x10c4>
   11c88:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   11c8c:	ldr	r3, [sp, #336]	; 0x150
   11c90:	ldr	r1, [pc, #1416]	; 12220 <XRRGetOutputInfo@plt+0x1184>
   11c94:	cmp	r3, #0
   11c98:	ldr	r2, [sp, #328]	; 0x148
   11c9c:	ldrne	r1, [r1, #68]	; 0x44
   11ca0:	ldreq	r1, [r1, #72]	; 0x48
   11ca4:	ldr	r3, [sp, #332]	; 0x14c
   11ca8:	str	r1, [sp]
   11cac:	mov	r0, #1
   11cb0:	ldr	r1, [pc, #1196]	; 12164 <XRRGetOutputInfo@plt+0x10c8>
   11cb4:	bl	1100c <__printf_chk@plt>
   11cb8:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   11cbc:	mov	r0, r5
   11cc0:	ldr	r1, [pc, #1184]	; 12168 <XRRGetOutputInfo@plt+0x10cc>
   11cc4:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   11cc8:	ldr	r3, [sp, #332]	; 0x14c
   11ccc:	ldr	r2, [sp, #328]	; 0x148
   11cd0:	ldr	r1, [pc, #1172]	; 1216c <XRRGetOutputInfo@plt+0x10d0>
   11cd4:	mov	r0, #1
   11cd8:	bl	1100c <__printf_chk@plt>
   11cdc:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   11ce0:	mov	r0, r5
   11ce4:	ldr	r1, [pc, #1156]	; 12170 <XRRGetOutputInfo@plt+0x10d4>
   11ce8:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   11cec:	ldr	r0, [sp, #348]	; 0x15c
   11cf0:	ldr	r1, [sp, #344]	; 0x158
   11cf4:	ldr	r2, [sp, #340]	; 0x154
   11cf8:	ldr	r3, [sp, #336]	; 0x150
   11cfc:	str	r0, [sp, #12]
   11d00:	str	r1, [sp, #8]
   11d04:	str	r2, [sp, #4]
   11d08:	str	r3, [sp]
   11d0c:	ldr	r2, [sp, #328]	; 0x148
   11d10:	ldr	r3, [sp, #332]	; 0x14c
   11d14:	ldr	r1, [pc, #1112]	; 12174 <XRRGetOutputInfo@plt+0x10d8>
   11d18:	mov	r0, #1
   11d1c:	bl	1100c <__printf_chk@plt>
   11d20:	ldr	r3, [sp, #356]	; 0x164
   11d24:	ldr	r2, [sp, #352]	; 0x160
   11d28:	cmp	r3, #0
   11d2c:	ldr	r3, [pc, #1260]	; 12220 <XRRGetOutputInfo@plt+0x1184>
   11d30:	ldr	r1, [pc, #1088]	; 12178 <XRRGetOutputInfo@plt+0x10dc>
   11d34:	mov	r0, #1
   11d38:	ldrne	r3, [r3, #68]	; 0x44
   11d3c:	ldreq	r3, [r3, #72]	; 0x48
   11d40:	bl	1100c <__printf_chk@plt>
   11d44:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   11d48:	ldr	r1, [pc, #1068]	; 1217c <XRRGetOutputInfo@plt+0x10e0>
   11d4c:	mov	r0, r5
   11d50:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   11d54:	ldr	r3, [sp, #332]	; 0x14c
   11d58:	cmp	r3, #1
   11d5c:	beq	123e0 <XRRGetOutputInfo@plt+0x1344>
   11d60:	cmp	r3, #2
   11d64:	beq	123f8 <XRRGetOutputInfo@plt+0x135c>
   11d68:	cmp	r3, #0
   11d6c:	ldreq	r2, [pc, #1036]	; 12180 <XRRGetOutputInfo@plt+0x10e4>
   11d70:	beq	11d90 <XRRGetOutputInfo@plt+0xcf4>
   11d74:	str	r3, [sp]
   11d78:	mov	r2, #10
   11d7c:	add	r0, sp, #408	; 0x198
   11d80:	ldr	r3, [pc, #1364]	; 122dc <XRRGetOutputInfo@plt+0x1240>
   11d84:	mov	r1, #1
   11d88:	bl	10fb8 <__sprintf_chk@plt>
   11d8c:	add	r2, sp, #408	; 0x198
   11d90:	ldr	r1, [pc, #1004]	; 12184 <XRRGetOutputInfo@plt+0x10e8>
   11d94:	mov	r0, #1
   11d98:	bl	1100c <__printf_chk@plt>
   11d9c:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   11da0:	ldr	r1, [pc, #992]	; 12188 <XRRGetOutputInfo@plt+0x10ec>
   11da4:	mov	r0, r5
   11da8:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   11dac:	ldr	r3, [sp, #332]	; 0x14c
   11db0:	cmp	r3, #62	; 0x3e
   11db4:	beq	123b8 <XRRGetOutputInfo@plt+0x131c>
   11db8:	cmp	r3, #63	; 0x3f
   11dbc:	ldreq	r2, [pc, #968]	; 1218c <XRRGetOutputInfo@plt+0x10f0>
   11dc0:	beq	11de0 <XRRGetOutputInfo@plt+0xd44>
   11dc4:	str	r3, [sp]
   11dc8:	mov	r2, #10
   11dcc:	add	r0, sp, #408	; 0x198
   11dd0:	ldr	r3, [pc, #1284]	; 122dc <XRRGetOutputInfo@plt+0x1240>
   11dd4:	mov	r1, #1
   11dd8:	bl	10fb8 <__sprintf_chk@plt>
   11ddc:	add	r2, sp, #408	; 0x198
   11de0:	ldr	r3, [sp, #336]	; 0x150
   11de4:	ldr	r1, [pc, #932]	; 12190 <XRRGetOutputInfo@plt+0x10f4>
   11de8:	mov	r0, #1
   11dec:	bl	1100c <__printf_chk@plt>
   11df0:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   11df4:	ldr	r1, [pc, #920]	; 12194 <XRRGetOutputInfo@plt+0x10f8>
   11df8:	mov	r0, r5
   11dfc:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   11e00:	ldr	r3, [sp, #352]	; 0x160
   11e04:	cmp	r3, #62	; 0x3e
   11e08:	beq	123b0 <XRRGetOutputInfo@plt+0x1314>
   11e0c:	cmp	r3, #63	; 0x3f
   11e10:	ldreq	r6, [pc, #884]	; 1218c <XRRGetOutputInfo@plt+0x10f0>
   11e14:	beq	11e34 <XRRGetOutputInfo@plt+0xd98>
   11e18:	str	r3, [sp]
   11e1c:	add	r0, sp, #408	; 0x198
   11e20:	ldr	r3, [pc, #1204]	; 122dc <XRRGetOutputInfo@plt+0x1240>
   11e24:	mov	r2, #10
   11e28:	mov	r1, #1
   11e2c:	mov	r6, r0
   11e30:	bl	10fb8 <__sprintf_chk@plt>
   11e34:	ldr	r1, [sp, #348]	; 0x15c
   11e38:	ldr	r2, [sp, #344]	; 0x158
   11e3c:	ldr	r3, [sp, #340]	; 0x154
   11e40:	str	r1, [sp, #8]
   11e44:	str	r2, [sp, #4]
   11e48:	str	r3, [sp]
   11e4c:	ldr	r2, [sp, #332]	; 0x14c
   11e50:	ldr	r3, [sp, #336]	; 0x150
   11e54:	ldr	r1, [pc, #828]	; 12198 <XRRGetOutputInfo@plt+0x10fc>
   11e58:	mov	r0, #1
   11e5c:	bl	1100c <__printf_chk@plt>
   11e60:	mov	r2, r6
   11e64:	ldr	r3, [sp, #356]	; 0x164
   11e68:	ldr	r1, [pc, #800]	; 12190 <XRRGetOutputInfo@plt+0x10f4>
   11e6c:	mov	r0, #1
   11e70:	bl	1100c <__printf_chk@plt>
   11e74:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   11e78:	mov	r0, r5
   11e7c:	ldr	r1, [pc, #792]	; 1219c <XRRGetOutputInfo@plt+0x1100>
   11e80:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   11e84:	ldr	r1, [sp, #348]	; 0x15c
   11e88:	ldr	r2, [sp, #344]	; 0x158
   11e8c:	ldr	r3, [sp, #340]	; 0x154
   11e90:	str	r1, [sp, #8]
   11e94:	str	r2, [sp, #4]
   11e98:	str	r3, [sp]
   11e9c:	ldr	r2, [sp, #332]	; 0x14c
   11ea0:	ldr	r3, [sp, #336]	; 0x150
   11ea4:	ldr	r1, [pc, #756]	; 121a0 <XRRGetOutputInfo@plt+0x1104>
   11ea8:	mov	r0, #1
   11eac:	bl	1100c <__printf_chk@plt>
   11eb0:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   11eb4:	ldr	r1, [pc, #744]	; 121a4 <XRRGetOutputInfo@plt+0x1108>
   11eb8:	mov	r0, r5
   11ebc:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   11ec0:	mvn	r6, #19
   11ec4:	ldr	r1, [pc, #732]	; 121a8 <XRRGetOutputInfo@plt+0x110c>
   11ec8:	mov	r0, #1
   11ecc:	bl	1100c <__printf_chk@plt>
   11ed0:	sub	r6, r6, r5
   11ed4:	add	fp, sp, #332	; 0x14c
   11ed8:	ldr	r8, [pc, #716]	; 121ac <XRRGetOutputInfo@plt+0x1110>
   11edc:	b	11ee4 <XRRGetOutputInfo@plt+0xe48>
   11ee0:	add	fp, fp, #1
   11ee4:	add	r3, r6, fp
   11ee8:	cmp	r3, #16
   11eec:	beq	1244c <XRRGetOutputInfo@plt+0x13b0>
   11ef0:	ldrb	r2, [fp]
   11ef4:	mov	r1, r8
   11ef8:	mov	r0, #1
   11efc:	bl	1100c <__printf_chk@plt>
   11f00:	sub	r3, fp, r5
   11f04:	cmp	r3, #51	; 0x33
   11f08:	bne	11ee0 <XRRGetOutputInfo@plt+0xe44>
   11f0c:	mov	r0, #10
   11f10:	bl	10fd0 <putchar@plt>
   11f14:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   11f18:	mov	r0, r5
   11f1c:	ldr	r1, [pc, #652]	; 121b0 <XRRGetOutputInfo@plt+0x1114>
   11f20:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   11f24:	mov	r0, r5
   11f28:	bl	13194 <XRRGetOutputInfo@plt+0x20f8>
   11f2c:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   11f30:	mov	r0, r5
   11f34:	ldr	r1, [pc, #632]	; 121b4 <XRRGetOutputInfo@plt+0x1118>
   11f38:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   11f3c:	mov	r0, r5
   11f40:	bl	13194 <XRRGetOutputInfo@plt+0x20f8>
   11f44:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   11f48:	mov	r0, r5
   11f4c:	ldr	r1, [pc, #612]	; 121b8 <XRRGetOutputInfo@plt+0x111c>
   11f50:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   11f54:	mov	r0, r5
   11f58:	bl	133cc <XRRGetOutputInfo@plt+0x2330>
   11f5c:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   11f60:	mov	r0, r5
   11f64:	ldr	r1, [pc, #592]	; 121bc <XRRGetOutputInfo@plt+0x1120>
   11f68:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   11f6c:	ldr	r0, [sp, #352]	; 0x160
   11f70:	ldr	r1, [sp, #348]	; 0x15c
   11f74:	ldr	r2, [sp, #344]	; 0x158
   11f78:	ldr	r3, [sp, #340]	; 0x154
   11f7c:	ldr	ip, [sp, #356]	; 0x164
   11f80:	str	r0, [sp, #12]
   11f84:	str	r1, [sp, #8]
   11f88:	str	r2, [sp, #4]
   11f8c:	str	r3, [sp]
   11f90:	ldr	r2, [sp, #332]	; 0x14c
   11f94:	ldr	r3, [sp, #336]	; 0x150
   11f98:	str	ip, [sp, #16]
   11f9c:	ldr	r1, [pc, #540]	; 121c0 <XRRGetOutputInfo@plt+0x1124>
   11fa0:	mov	r0, #1
   11fa4:	bl	1100c <__printf_chk@plt>
   11fa8:	ldr	r3, [sp, #368]	; 0x170
   11fac:	ldr	r1, [pc, #620]	; 12220 <XRRGetOutputInfo@plt+0x1184>
   11fb0:	cmp	r3, #0
   11fb4:	ldr	r2, [sp, #360]	; 0x168
   11fb8:	ldrne	r1, [r1, #68]	; 0x44
   11fbc:	ldreq	r1, [r1, #72]	; 0x48
   11fc0:	ldrb	r3, [sp, #364]	; 0x16c
   11fc4:	str	r1, [sp]
   11fc8:	mov	r0, #1
   11fcc:	ldr	r1, [pc, #496]	; 121c4 <XRRGetOutputInfo@plt+0x1128>
   11fd0:	bl	1100c <__printf_chk@plt>
   11fd4:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   11fd8:	mov	r0, r5
   11fdc:	ldr	r1, [pc, #484]	; 121c8 <XRRGetOutputInfo@plt+0x112c>
   11fe0:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   11fe4:	mov	r0, r5
   11fe8:	bl	12f30 <XRRGetOutputInfo@plt+0x1e94>
   11fec:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   11ff0:	mov	r0, r5
   11ff4:	ldr	r1, [pc, #464]	; 121cc <XRRGetOutputInfo@plt+0x1130>
   11ff8:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   11ffc:	mov	r0, r5
   12000:	bl	12f30 <XRRGetOutputInfo@plt+0x1e94>
   12004:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   12008:	mov	r0, r5
   1200c:	ldr	r1, [pc, #444]	; 121d0 <XRRGetOutputInfo@plt+0x1134>
   12010:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   12014:	mov	r0, r5
   12018:	bl	133cc <XRRGetOutputInfo@plt+0x2330>
   1201c:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   12020:	mov	r0, r5
   12024:	ldr	r1, [pc, #424]	; 121d4 <XRRGetOutputInfo@plt+0x1138>
   12028:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   1202c:	mov	r0, r5
   12030:	bl	12fb0 <XRRGetOutputInfo@plt+0x1f14>
   12034:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   12038:	mov	r0, r5
   1203c:	ldr	r1, [pc, #404]	; 121d8 <XRRGetOutputInfo@plt+0x113c>
   12040:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   12044:	mov	r0, r5
   12048:	bl	12fb0 <XRRGetOutputInfo@plt+0x1f14>
   1204c:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   12050:	strdeq	r5, [r2], -r8
   12054:	andeq	r6, r2, ip, ror #2
   12058:	andeq	r4, r1, r0, ror #20
   1205c:	ldrdeq	r3, [r1], -r8
   12060:	andeq	r4, r1, ip, lsl r0
   12064:	andeq	r6, r2, r0, asr #2
   12068:	muleq	r1, r8, r0
   1206c:	andeq	r4, r1, ip, lsl #1
   12070:	andeq	r3, r1, r0, lsl #31
   12074:	andeq	r3, r1, r0, asr #30
   12078:	andeq	r4, r1, r4, lsr #32
   1207c:	andeq	r4, r1, r8, lsr #32
   12080:	andeq	r4, r1, r4, asr r0
   12084:	andeq	r3, r1, r0, ror #30
   12088:	andeq	r3, r1, r4, lsl pc
   1208c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   12090:			; <UNDEFINED> instruction: 0x00013fb8
   12094:	andeq	r3, r1, r4, asr #31
   12098:	ldrdeq	r3, [r1], -r0
   1209c:	andeq	r6, r2, r8, asr r1
   120a0:	ldrdeq	r4, [r1], -ip
   120a4:	andeq	r4, r1, r8, ror #23
   120a8:	andeq	r4, r1, r4, lsr #2
   120ac:	andeq	r0, r0, r8, lsl #8
   120b0:	strdeq	r4, [r1], -r8
   120b4:	andeq	r6, r2, r4, asr r1
   120b8:	andeq	r6, r2, r0, ror #2
   120bc:	andeq	r6, r2, r0, ror r1
   120c0:	andeq	r6, r2, r4, asr #2
   120c4:	andeq	r4, r1, r0, lsl #18
   120c8:	andeq	r3, r1, r4, ror #29
   120cc:	andeq	r4, r1, r0, lsl r9
   120d0:	andeq	r4, r1, ip, lsl #17
   120d4:	ldrdeq	r4, [r1], -r8
   120d8:	andeq	r4, r1, r4, asr r8
   120dc:			; <UNDEFINED> instruction: 0x00013ebc
   120e0:	andeq	r4, r1, r4, ror #16
   120e4:	andeq	r4, r1, ip, ror r6
   120e8:	andeq	r3, r1, r8, lsl #29
   120ec:	andeq	r4, r1, ip, lsl #13
   120f0:	andeq	r4, r1, r0, asr r6
   120f4:	andeq	r4, r1, r0, ror #12
   120f8:	andeq	r4, r1, r8, lsl r6
   120fc:	andeq	r4, r1, r8, lsr #12
   12100:	andeq	r4, r1, r8, lsl #11
   12104:	andeq	r4, r1, r8, lsl #10
   12108:	andeq	r4, r1, r8, lsl r5
   1210c:	andeq	r4, r1, r8, asr r5
   12110:	andeq	r4, r1, ip, lsr #9
   12114:			; <UNDEFINED> instruction: 0x000144bc
   12118:	andeq	r4, r1, ip, ror #9
   1211c:	andeq	r4, r1, r0, lsl #9
   12120:	andeq	r4, r1, ip, lsl #9
   12124:	andeq	r4, r1, r8, asr #8
   12128:	andeq	r4, r1, r4, asr r4
   1212c:	andeq	r4, r1, r8, ror #14
   12130:	andeq	r4, r1, ip, ror r7
   12134:			; <UNDEFINED> instruction: 0x000147b8
   12138:	andeq	r4, r1, r4, lsr r7
   1213c:	andeq	r4, r1, r4, asr #14
   12140:	strdeq	r4, [r1], -r8
   12144:	andeq	r3, r1, ip, lsr #29
   12148:	andeq	r4, r1, r8, lsl #14
   1214c:			; <UNDEFINED> instruction: 0x000146b8
   12150:	andeq	r4, r1, ip, asr #13
   12154:	strdeq	r4, [r1], -r0
   12158:	andeq	r4, r1, r0, lsl #16
   1215c:	andeq	r4, r1, r0, lsr r8
   12160:	andeq	r4, r1, r8, lsl #8
   12164:	andeq	r4, r1, r4, lsl r4
   12168:	ldrdeq	r4, [r1], -r8
   1216c:	andeq	r4, r1, r8, ror #7
   12170:	andeq	r4, r1, r8, ror #6
   12174:	andeq	r4, r1, r8, ror r3
   12178:			; <UNDEFINED> instruction: 0x000143b8
   1217c:	andeq	r4, r1, r4, asr #6
   12180:	andeq	r3, r1, r0, lsl #28
   12184:	andeq	r4, r1, r8, asr r3
   12188:	andeq	r4, r1, r8, lsr r3
   1218c:	strdeq	r3, [r1], -r4
   12190:	andeq	r4, r1, r0, lsr #6
   12194:	andeq	r4, r1, r0, ror #5
   12198:	strdeq	r4, [r1], -r0
   1219c:	andeq	r4, r1, r8, ror #5
   121a0:			; <UNDEFINED> instruction: 0x000142b4
   121a4:	andeq	r4, r1, r0, lsl #5
   121a8:	muleq	r1, r0, r2
   121ac:	andeq	r4, r1, ip, lsr #5
   121b0:	andeq	r4, r1, r4, ror r2
   121b4:	andeq	r4, r1, ip, ror #4
   121b8:	andeq	r4, r1, r4, ror #3
   121bc:	andeq	r4, r1, r8, lsl r2
   121c0:	andeq	r3, r1, r8, lsr sl
   121c4:	andeq	r4, r1, r8, lsr #4
   121c8:	andeq	r4, r1, r8, lsl #4
   121cc:	strdeq	r4, [r1], -ip
   121d0:	strdeq	r4, [r1], -r0
   121d4:	andeq	r4, r1, r0, ror #4
   121d8:	andeq	r4, r1, r4, asr r2
   121dc:	andeq	r3, r1, r4, asr lr
   121e0:	muleq	r1, ip, r5
   121e4:	ldrdeq	r4, [r1], -ip
   121e8:	andeq	r3, r1, ip, asr lr
   121ec:	andeq	r3, r1, ip, asr #28
   121f0:	andeq	r3, r1, r0, ror lr
   121f4:	andeq	r3, r1, r4, ror #28
   121f8:	andeq	r6, r2, r4, ror #2
   121fc:	ldrdeq	r4, [r1], -r0
   12200:	andeq	r3, r1, r8, ror #27
   12204:	muleq	r1, r8, lr
   12208:	andeq	r3, r1, ip, ror lr
   1220c:	ldrdeq	r3, [r1], -r0
   12210:	andeq	r3, r1, r8, lsl lr
   12214:	strdeq	r3, [r1], -r4
   12218:	andeq	r3, r1, r4, lsl #30
   1221c:	andeq	r3, r1, r4, lsr lr
   12220:	andeq	r6, r2, ip, ror #1
   12224:	muleq	r1, ip, r8
   12228:	muleq	r1, ip, r2
   1222c:	andeq	r4, r1, ip, lsr r9
   12230:	andeq	r4, r1, r4, asr r9
   12234:	andeq	r4, r1, ip, lsl #19
   12238:			; <UNDEFINED> instruction: 0x000149b4
   1223c:	andeq	r4, r1, r4, asr #19
   12240:	strdeq	r4, [r1], -r8
   12244:	andeq	r4, r1, r0, asr #23
   12248:	ldrdeq	r4, [r1], -r8
   1224c:	andeq	r4, r1, r0, lsl #22
   12250:	andeq	r4, r1, r0, lsr #22
   12254:	andeq	r4, r1, r0, lsl #21
   12258:	andeq	r4, r1, r4, asr #22
   1225c:	muleq	r1, ip, fp
   12260:	andeq	r4, r1, ip, asr #23
   12264:	andeq	r4, r1, ip, lsr #20
   12268:	andeq	r4, r1, r4, lsl #22
   1226c:	andeq	r4, r1, r0, asr sl
   12270:	andeq	r4, r1, ip, ror sl
   12274:	andeq	r4, r1, ip, lsl #21
   12278:	andeq	r4, r1, r0, asr #21
   1227c:	andeq	r4, r1, r0, lsr #19
   12280:	andeq	r6, r2, ip, asr r1
   12284:	andeq	r4, r1, r4, asr r1
   12288:	andeq	r6, r2, r8, ror #2
   1228c:	andeq	r4, r1, r4, ror #2
   12290:	andeq	r4, r1, r8, ror r1
   12294:	strheq	r4, [r1], -r8
   12298:	andeq	r4, r1, r4, asr #3
   1229c:	andeq	r4, r1, r8, lsr #3
   122a0:			; <UNDEFINED> instruction: 0x000141b8
   122a4:	andeq	r6, r2, ip, asr #2
   122a8:	ldrdeq	r4, [r1], -r0
   122ac:	andeq	r4, r1, r8, lsr fp
   122b0:	andeq	r4, r1, r0, lsl fp
   122b4:	andeq	r4, r1, r4, lsl #20
   122b8:	andeq	r4, r1, ip, ror #22
   122bc:	andeq	r4, r1, ip, lsr sl
   122c0:	andeq	r4, r1, r0, ror sl
   122c4:	andeq	r4, r1, r4, lsl fp
   122c8:	andeq	r4, r1, ip, lsl #2
   122cc:	andeq	r4, r1, r0
   122d0:	andeq	r4, r1, ip, lsr #22
   122d4:	andeq	r4, r1, r0, ror r0
   122d8:	andeq	r4, r1, r8, ror #1
   122dc:	andeq	r3, r1, r0, lsl ip
   122e0:	andeq	r4, r1, r0, lsr #21
   122e4:			; <UNDEFINED> instruction: 0x00013eb4
   122e8:	andeq	r3, r1, r0, lsr #29
   122ec:			; <UNDEFINED> instruction: 0x00014ab0
   122f0:	andeq	r4, r1, r4, ror #20
   122f4:	andeq	r6, r2, r0, asr #2
   122f8:	ldrdeq	r3, [r1], -r8
   122fc:	ldr	r6, [pc, #-296]	; 121dc <XRRGetOutputInfo@plt+0x1140>
   12300:	ldr	r0, [sp, #348]	; 0x15c
   12304:	ldr	r1, [sp, #344]	; 0x158
   12308:	ldr	r2, [sp, #340]	; 0x154
   1230c:	ldr	r3, [sp, #336]	; 0x150
   12310:	str	r0, [sp, #12]
   12314:	str	r1, [sp, #8]
   12318:	str	r2, [sp, #4]
   1231c:	str	r3, [sp]
   12320:	ldr	r2, [sp, #328]	; 0x148
   12324:	ldr	r3, [sp, #332]	; 0x14c
   12328:	ldr	r1, [pc, #-336]	; 121e0 <XRRGetOutputInfo@plt+0x1144>
   1232c:	mov	r0, #1
   12330:	bl	1100c <__printf_chk@plt>
   12334:	ldr	r3, [sp, #364]	; 0x16c
   12338:	str	r6, [sp]
   1233c:	str	r3, [sp, #4]
   12340:	ldr	r2, [sp, #352]	; 0x160
   12344:	ldr	r3, [sp, #356]	; 0x164
   12348:	ldr	r1, [pc, #-364]	; 121e4 <XRRGetOutputInfo@plt+0x1148>
   1234c:	mov	r0, #1
   12350:	bl	1100c <__printf_chk@plt>
   12354:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   12358:	ldr	r6, [pc, #-376]	; 121e8 <XRRGetOutputInfo@plt+0x114c>
   1235c:	b	12300 <XRRGetOutputInfo@plt+0x1264>
   12360:	ldr	r6, [pc, #-380]	; 121ec <XRRGetOutputInfo@plt+0x1150>
   12364:	b	12300 <XRRGetOutputInfo@plt+0x1264>
   12368:	ldr	r6, [pc, #-384]	; 121f0 <XRRGetOutputInfo@plt+0x1154>
   1236c:	b	12300 <XRRGetOutputInfo@plt+0x1264>
   12370:	ldr	r6, [pc, #-388]	; 121f4 <XRRGetOutputInfo@plt+0x1158>
   12374:	b	12300 <XRRGetOutputInfo@plt+0x1264>
   12378:	ldr	r3, [sl]
   1237c:	cmp	r3, #0
   12380:	beq	123a0 <XRRGetOutputInfo@plt+0x1304>
   12384:	ldr	r3, [pc, #-404]	; 121f8 <XRRGetOutputInfo@plt+0x115c>
   12388:	ldr	r3, [r3]
   1238c:	cmp	r2, r3
   12390:	beq	1248c <XRRGetOutputInfo@plt+0x13f0>
   12394:	add	r3, r3, #1
   12398:	cmp	r2, r3
   1239c:	beq	1252c <XRRGetOutputInfo@plt+0x1490>
   123a0:	ldr	r1, [pc, #-428]	; 121fc <XRRGetOutputInfo@plt+0x1160>
   123a4:	mov	r0, #1
   123a8:	bl	1100c <__printf_chk@plt>
   123ac:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   123b0:	ldr	r6, [pc, #-440]	; 12200 <XRRGetOutputInfo@plt+0x1164>
   123b4:	b	11e34 <XRRGetOutputInfo@plt+0xd98>
   123b8:	ldr	r2, [pc, #-448]	; 12200 <XRRGetOutputInfo@plt+0x1164>
   123bc:	b	11de0 <XRRGetOutputInfo@plt+0xd44>
   123c0:	ldr	r3, [pc, #-448]	; 12208 <XRRGetOutputInfo@plt+0x116c>
   123c4:	b	11bc0 <XRRGetOutputInfo@plt+0xb24>
   123c8:	ldr	r1, [pc, #-460]	; 12204 <XRRGetOutputInfo@plt+0x1168>
   123cc:	b	11b4c <XRRGetOutputInfo@plt+0xab0>
   123d0:	ldr	r3, [pc, #-464]	; 12208 <XRRGetOutputInfo@plt+0x116c>
   123d4:	b	1181c <XRRGetOutputInfo@plt+0x780>
   123d8:	ldr	r1, [pc, #-468]	; 1220c <XRRGetOutputInfo@plt+0x1170>
   123dc:	b	117b0 <XRRGetOutputInfo@plt+0x714>
   123e0:	ldr	r2, [pc, #-472]	; 12210 <XRRGetOutputInfo@plt+0x1174>
   123e4:	b	11d90 <XRRGetOutputInfo@plt+0xcf4>
   123e8:	ldr	r2, [pc, #-476]	; 12214 <XRRGetOutputInfo@plt+0x1178>
   123ec:	b	116b4 <XRRGetOutputInfo@plt+0x618>
   123f0:	ldr	r2, [pc, #-480]	; 12218 <XRRGetOutputInfo@plt+0x117c>
   123f4:	b	116b4 <XRRGetOutputInfo@plt+0x618>
   123f8:	ldr	r2, [pc, #-484]	; 1221c <XRRGetOutputInfo@plt+0x1180>
   123fc:	b	11d90 <XRRGetOutputInfo@plt+0xcf4>
   12400:	ldr	r1, [sp, #340]	; 0x154
   12404:	ldr	r0, [r4]
   12408:	bl	10ff4 <XGetAtomName@plt>
   1240c:	cmp	r6, #0
   12410:	ldr	r1, [sp, #336]	; 0x150
   12414:	ldreq	r3, [pc, #-508]	; 12220 <XRRGetOutputInfo@plt+0x1184>
   12418:	ldr	r2, [sp, #332]	; 0x14c
   1241c:	movne	r3, r6
   12420:	mov	r8, r0
   12424:	ldr	r0, [sp, #340]	; 0x154
   12428:	ldreq	r3, [r3, #80]	; 0x50
   1242c:	str	r1, [sp]
   12430:	stmib	sp, {r0, r8}
   12434:	ldr	r1, [pc, #-536]	; 12224 <XRRGetOutputInfo@plt+0x1188>
   12438:	mov	r0, #1
   1243c:	bl	1100c <__printf_chk@plt>
   12440:	mov	r0, r8
   12444:	bl	10ee0 <XFree@plt>
   12448:	b	11730 <XRRGetOutputInfo@plt+0x694>
   1244c:	ldr	r1, [pc, #-556]	; 12228 <XRRGetOutputInfo@plt+0x118c>
   12450:	mov	r0, #1
   12454:	bl	1100c <__printf_chk@plt>
   12458:	ldrb	r2, [fp]
   1245c:	mov	r1, r8
   12460:	mov	r0, #1
   12464:	bl	1100c <__printf_chk@plt>
   12468:	b	11ee0 <XRRGetOutputInfo@plt+0xe44>
   1246c:	str	r3, [sp]
   12470:	add	r0, sp, #408	; 0x198
   12474:	ldr	r3, [pc, #-416]	; 122dc <XRRGetOutputInfo@plt+0x1240>
   12478:	mov	r2, #10
   1247c:	mov	r1, #1
   12480:	mov	r6, r0
   12484:	bl	10fb8 <__sprintf_chk@plt>
   12488:	b	12300 <XRRGetOutputInfo@plt+0x1264>
   1248c:	ldr	r1, [pc, #-616]	; 1222c <XRRGetOutputInfo@plt+0x1190>
   12490:	mov	r0, r5
   12494:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   12498:	mov	r0, r5
   1249c:	bl	10ea4 <XRRUpdateConfiguration@plt>
   124a0:	ldr	r2, [sp, #340]	; 0x154
   124a4:	ldr	r3, [sp, #336]	; 0x150
   124a8:	str	r2, [sp]
   124ac:	ldr	r1, [pc, #-644]	; 12230 <XRRGetOutputInfo@plt+0x1194>
   124b0:	ldr	r2, [sp, #332]	; 0x14c
   124b4:	mov	r0, #1
   124b8:	bl	1100c <__printf_chk@plt>
   124bc:	add	r3, sp, #344	; 0x158
   124c0:	ldr	r1, [pc, #-660]	; 12234 <XRRGetOutputInfo@plt+0x1198>
   124c4:	ldrh	r2, [r3]
   124c8:	mov	r0, #1
   124cc:	bl	1100c <__printf_chk@plt>
   124d0:	ldr	r1, [pc, #-604]	; 1227c <XRRGetOutputInfo@plt+0x11e0>
   124d4:	mov	r0, #1
   124d8:	bl	1100c <__printf_chk@plt>
   124dc:	add	r3, sp, #344	; 0x158
   124e0:	add	r3, r3, #2
   124e4:	ldrh	r0, [r3]
   124e8:	bl	13714 <XRRGetOutputInfo@plt+0x2678>
   124ec:	ldr	r1, [pc, #-700]	; 12238 <XRRGetOutputInfo@plt+0x119c>
   124f0:	mov	r0, #1
   124f4:	bl	1100c <__printf_chk@plt>
   124f8:	add	r3, sp, #348	; 0x15c
   124fc:	ldrh	r0, [r3]
   12500:	bl	132fc <XRRGetOutputInfo@plt+0x2260>
   12504:	ldr	r2, [sp, #364]	; 0x16c
   12508:	ldr	r3, [sp, #360]	; 0x168
   1250c:	str	r2, [sp, #4]
   12510:	str	r3, [sp]
   12514:	ldr	r2, [sp, #352]	; 0x160
   12518:	ldr	r3, [sp, #356]	; 0x164
   1251c:	ldr	r1, [pc, #-744]	; 1223c <XRRGetOutputInfo@plt+0x11a0>
   12520:	mov	r0, #1
   12524:	bl	1100c <__printf_chk@plt>
   12528:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   1252c:	mov	r0, r5
   12530:	bl	10ea4 <XRRUpdateConfiguration@plt>
   12534:	ldr	r1, [sp, #328]	; 0x148
   12538:	ldr	r0, [r4]
   1253c:	bl	10ef8 <XRRGetScreenResources@plt>
   12540:	ldr	r1, [pc, #-776]	; 12240 <XRRGetOutputInfo@plt+0x11a4>
   12544:	mov	r6, r0
   12548:	mov	r0, r5
   1254c:	bl	12e88 <XRRGetOutputInfo@plt+0x1dec>
   12550:	ldr	r2, [sp, #332]	; 0x14c
   12554:	cmp	r2, #1
   12558:	beq	126e0 <XRRGetOutputInfo@plt+0x1644>
   1255c:	cmp	r2, #2
   12560:	beq	1264c <XRRGetOutputInfo@plt+0x15b0>
   12564:	cmp	r2, #0
   12568:	beq	12590 <XRRGetOutputInfo@plt+0x14f4>
   1256c:	ldr	r1, [pc, #-816]	; 12244 <XRRGetOutputInfo@plt+0x11a8>
   12570:	mov	r0, #1
   12574:	bl	1100c <__printf_chk@plt>
   12578:	mov	r0, r6
   1257c:	bl	10f4c <XRRFreeScreenResources@plt>
   12580:	b	116d4 <XRRGetOutputInfo@plt+0x638>
   12584:	cmp	r4, #0
   12588:	bne	1143c <XRRGetOutputInfo@plt+0x3a0>
   1258c:	b	11430 <XRRGetOutputInfo@plt+0x394>
   12590:	cmp	r6, #0
   12594:	moveq	r8, r6
   12598:	beq	125d4 <XRRGetOutputInfo@plt+0x1538>
   1259c:	ldr	lr, [r6, #24]
   125a0:	ldr	ip, [sp, #340]	; 0x154
   125a4:	mov	r0, #56	; 0x38
   125a8:	b	125c8 <XRRGetOutputInfo@plt+0x152c>
   125ac:	mul	r3, r0, r2
   125b0:	ldr	r1, [r6, #28]
   125b4:	add	r8, r1, r3
   125b8:	ldr	r3, [r1, r3]
   125bc:	cmp	r3, ip
   125c0:	beq	125d4 <XRRGetOutputInfo@plt+0x1538>
   125c4:	add	r2, r2, #1
   125c8:	cmp	r2, lr
   125cc:	blt	125ac <XRRGetOutputInfo@plt+0x1510>
   125d0:	mov	r8, #0
   125d4:	ldr	r0, [pc, #-916]	; 12248 <XRRGetOutputInfo@plt+0x11ac>
   125d8:	bl	10f10 <puts@plt>
   125dc:	ldr	r2, [sp, #336]	; 0x150
   125e0:	cmp	r2, #0
   125e4:	beq	12b3c <XRRGetOutputInfo@plt+0x1aa0>
   125e8:	ldr	r1, [pc, #-932]	; 1224c <XRRGetOutputInfo@plt+0x11b0>
   125ec:	mov	r0, #1
   125f0:	bl	1100c <__printf_chk@plt>
   125f4:	cmp	r8, #0
   125f8:	beq	12b20 <XRRGetOutputInfo@plt+0x1a84>
   125fc:	ldr	r2, [r8, #44]	; 0x2c
   12600:	ldr	r1, [pc, #-952]	; 12250 <XRRGetOutputInfo@plt+0x11b4>
   12604:	mov	r0, #1
   12608:	bl	1100c <__printf_chk@plt>
   1260c:	ldr	r1, [pc, #-960]	; 12254 <XRRGetOutputInfo@plt+0x11b8>
   12610:	mov	r0, #1
   12614:	bl	1100c <__printf_chk@plt>
   12618:	add	r3, sp, #344	; 0x158
   1261c:	ldrh	r0, [r3]
   12620:	bl	132fc <XRRGetOutputInfo@plt+0x2260>
   12624:	ldr	r2, [sp, #360]	; 0x168
   12628:	ldr	r3, [sp, #356]	; 0x164
   1262c:	str	r2, [sp, #4]
   12630:	str	r3, [sp]
   12634:	ldr	r2, [sp, #348]	; 0x15c
   12638:	ldr	r3, [sp, #352]	; 0x160
   1263c:	ldr	r1, [pc, #-1004]	; 12258 <XRRGetOutputInfo@plt+0x11bc>
   12640:	mov	r0, #1
   12644:	bl	1100c <__printf_chk@plt>
   12648:	b	12578 <XRRGetOutputInfo@plt+0x14dc>
   1264c:	ldr	r1, [sp, #340]	; 0x154
   12650:	ldr	r0, [r4]
   12654:	bl	10ff4 <XGetAtomName@plt>
   12658:	cmp	r6, #0
   1265c:	mov	fp, r0
   12660:	beq	12b70 <XRRGetOutputInfo@plt+0x1ad4>
   12664:	ldr	r2, [sp, #336]	; 0x150
   12668:	mov	r1, r6
   1266c:	ldr	r0, [r4]
   12670:	bl	1109c <XRRGetOutputInfo@plt>
   12674:	mov	r8, r0
   12678:	ldr	r0, [pc, #-968]	; 122b8 <XRRGetOutputInfo@plt+0x121c>
   1267c:	bl	10f10 <puts@plt>
   12680:	cmp	r8, #0
   12684:	beq	12b78 <XRRGetOutputInfo@plt+0x1adc>
   12688:	ldr	r2, [r8, #8]
   1268c:	ldr	r1, [pc, #-1072]	; 12264 <XRRGetOutputInfo@plt+0x11c8>
   12690:	mov	r0, #1
   12694:	bl	1100c <__printf_chk@plt>
   12698:	mov	r2, fp
   1269c:	ldr	r3, [sp, #344]	; 0x158
   126a0:	ldr	r1, [pc, #-1100]	; 1225c <XRRGetOutputInfo@plt+0x11c0>
   126a4:	mov	r0, #1
   126a8:	bl	1100c <__printf_chk@plt>
   126ac:	ldr	r2, [sp, #348]	; 0x15c
   126b0:	cmp	r2, #0
   126b4:	beq	12c60 <XRRGetOutputInfo@plt+0x1bc4>
   126b8:	cmp	r2, #1
   126bc:	beq	12c54 <XRRGetOutputInfo@plt+0x1bb8>
   126c0:	ldr	r1, [pc, #-1128]	; 12260 <XRRGetOutputInfo@plt+0x11c4>
   126c4:	mov	r0, #1
   126c8:	bl	1100c <__printf_chk@plt>
   126cc:	mov	r0, r8
   126d0:	bl	10e98 <XRRFreeOutputInfo@plt>
   126d4:	mov	r0, fp
   126d8:	bl	10ee0 <XFree@plt>
   126dc:	b	12578 <XRRGetOutputInfo@plt+0x14dc>
   126e0:	cmp	r6, #0
   126e4:	beq	12b4c <XRRGetOutputInfo@plt+0x1ab0>
   126e8:	ldr	r2, [sp, #336]	; 0x150
   126ec:	mov	r1, r6
   126f0:	ldr	r0, [r4]
   126f4:	bl	1109c <XRRGetOutputInfo@plt>
   126f8:	ldr	lr, [r6, #24]
   126fc:	ldr	ip, [sp, #344]	; 0x158
   12700:	mov	r2, #0
   12704:	mov	fp, r0
   12708:	mov	r0, #56	; 0x38
   1270c:	b	1272c <XRRGetOutputInfo@plt+0x1690>
   12710:	mul	r3, r0, r2
   12714:	ldr	r1, [r6, #28]
   12718:	add	r8, r1, r3
   1271c:	ldr	r3, [r1, r3]
   12720:	cmp	r3, ip
   12724:	beq	12738 <XRRGetOutputInfo@plt+0x169c>
   12728:	add	r2, r2, #1
   1272c:	cmp	r2, lr
   12730:	blt	12710 <XRRGetOutputInfo@plt+0x1674>
   12734:	mov	r8, #0
   12738:	ldr	r0, [pc, #-1164]	; 122b4 <XRRGetOutputInfo@plt+0x1218>
   1273c:	bl	10f10 <puts@plt>
   12740:	cmp	fp, #0
   12744:	beq	12b58 <XRRGetOutputInfo@plt+0x1abc>
   12748:	ldr	r2, [fp, #8]
   1274c:	ldr	r1, [pc, #-1264]	; 12264 <XRRGetOutputInfo@plt+0x11c8>
   12750:	mov	r0, #1
   12754:	bl	1100c <__printf_chk@plt>
   12758:	ldr	r2, [sp, #340]	; 0x154
   1275c:	cmp	r2, #0
   12760:	beq	12ba8 <XRRGetOutputInfo@plt+0x1b0c>
   12764:	ldr	r1, [pc, #-1284]	; 12268 <XRRGetOutputInfo@plt+0x11cc>
   12768:	mov	r0, #1
   1276c:	bl	1100c <__printf_chk@plt>
   12770:	cmp	r8, #0
   12774:	beq	12b90 <XRRGetOutputInfo@plt+0x1af4>
   12778:	ldr	r3, [r8, #8]
   1277c:	ldr	r1, [pc, #-1304]	; 1226c <XRRGetOutputInfo@plt+0x11d0>
   12780:	str	r3, [sp]
   12784:	mov	r0, #1
   12788:	ldr	r3, [r8, #4]
   1278c:	ldr	r2, [r8, #44]	; 0x2c
   12790:	bl	1100c <__printf_chk@plt>
   12794:	ldr	r1, [pc, #-1324]	; 12270 <XRRGetOutputInfo@plt+0x11d4>
   12798:	mov	r0, #1
   1279c:	bl	1100c <__printf_chk@plt>
   127a0:	add	r3, sp, #348	; 0x15c
   127a4:	ldrh	r0, [r3]
   127a8:	bl	132fc <XRRGetOutputInfo@plt+0x2260>
   127ac:	ldr	r1, [pc, #-1344]	; 12274 <XRRGetOutputInfo@plt+0x11d8>
   127b0:	mov	r0, #1
   127b4:	bl	1100c <__printf_chk@plt>
   127b8:	add	r3, sp, #348	; 0x15c
   127bc:	add	r3, r3, #2
   127c0:	ldrh	r2, [r3]
   127c4:	cmp	r2, #1
   127c8:	beq	12c6c <XRRGetOutputInfo@plt+0x1bd0>
   127cc:	bcc	12c44 <XRRGetOutputInfo@plt+0x1ba8>
   127d0:	cmp	r2, #2
   127d4:	bne	12c34 <XRRGetOutputInfo@plt+0x1b98>
   127d8:	ldr	r1, [pc, #-1384]	; 12278 <XRRGetOutputInfo@plt+0x11dc>
   127dc:	mov	r0, #1
   127e0:	bl	1100c <__printf_chk@plt>
   127e4:	ldr	r1, [pc, #-1392]	; 1227c <XRRGetOutputInfo@plt+0x11e0>
   127e8:	mov	r0, #1
   127ec:	bl	1100c <__printf_chk@plt>
   127f0:	add	r3, sp, #352	; 0x160
   127f4:	ldrh	r0, [r3]
   127f8:	bl	13714 <XRRGetOutputInfo@plt+0x2678>
   127fc:	mov	r0, #10
   12800:	bl	10fd0 <putchar@plt>
   12804:	mov	r0, fp
   12808:	bl	10e98 <XRRFreeOutputInfo@plt>
   1280c:	b	12578 <XRRGetOutputInfo@plt+0x14dc>
   12810:	ldr	r0, [sp, #36]	; 0x24
   12814:	mov	r2, #78	; 0x4e
   12818:	mov	r3, #16
   1281c:	cmp	r0, #0
   12820:	str	r1, [sp, #148]	; 0x94
   12824:	str	r1, [sp, #144]	; 0x90
   12828:	str	r2, [sp, #160]	; 0xa0
   1282c:	str	r2, [sp, #152]	; 0x98
   12830:	str	r2, [sp, #164]	; 0xa4
   12834:	str	r2, [sp, #156]	; 0x9c
   12838:	str	r3, [sp, #140]	; 0x8c
   1283c:	beq	12bc0 <XRRGetOutputInfo@plt+0x1b24>
   12840:	add	r3, sp, #156	; 0x9c
   12844:	str	r3, [sp]
   12848:	add	r2, sp, #148	; 0x94
   1284c:	add	r3, sp, #152	; 0x98
   12850:	add	r1, sp, #144	; 0x90
   12854:	bl	10eb0 <XParseGeometry@plt>
   12858:	and	r3, r0, #12
   1285c:	cmp	r3, #12
   12860:	ldrne	r3, [sp, #140]	; 0x8c
   12864:	beq	12c8c <XRRGetOutputInfo@plt+0x1bf0>
   12868:	and	r2, r0, #3
   1286c:	cmp	r2, #3
   12870:	addeq	r3, r3, #1
   12874:	streq	r3, [sp, #140]	; 0x8c
   12878:	tst	r3, #2
   1287c:	bne	12894 <XRRGetOutputInfo@plt+0x17f8>
   12880:	mov	r2, #178	; 0xb2
   12884:	orr	r3, r3, #8
   12888:	str	r3, [sp, #140]	; 0x8c
   1288c:	str	r2, [sp, #152]	; 0x98
   12890:	str	r2, [sp, #156]	; 0x9c
   12894:	ldr	r3, [r4]
   12898:	tst	r0, #16
   1289c:	ldr	r9, [sp, #152]	; 0x98
   128a0:	ldr	r2, [r3, #140]	; 0x8c
   128a4:	beq	128c8 <XRRGetOutputInfo@plt+0x182c>
   128a8:	ldr	r1, [r3, #132]	; 0x84
   128ac:	mov	ip, #80	; 0x50
   128b0:	ldr	lr, [sp, #144]	; 0x90
   128b4:	mla	r1, ip, r1, r2
   128b8:	ldr	r1, [r1, #12]
   128bc:	add	r1, r1, lr
   128c0:	sub	r1, r1, r9
   128c4:	str	r1, [sp, #144]	; 0x90
   128c8:	tst	r0, #32
   128cc:	ldr	r0, [sp, #156]	; 0x9c
   128d0:	beq	128f4 <XRRGetOutputInfo@plt+0x1858>
   128d4:	ldr	r1, [r3, #132]	; 0x84
   128d8:	mov	ip, #80	; 0x50
   128dc:	ldr	lr, [sp, #148]	; 0x94
   128e0:	mla	r1, ip, r1, r2
   128e4:	ldr	r1, [r1, #16]
   128e8:	add	r1, r1, lr
   128ec:	sub	r1, r1, r0
   128f0:	str	r1, [sp, #148]	; 0x94
   128f4:	ldr	r1, [r5]
   128f8:	mov	ip, #80	; 0x50
   128fc:	ldr	lr, [sp, #44]	; 0x2c
   12900:	mla	r2, ip, r1, r2
   12904:	cmp	lr, #0
   12908:	orr	r5, fp, #2048	; 0x800
   1290c:	ldr	ip, [r2, #56]	; 0x38
   12910:	ldr	r1, [r2, #52]	; 0x34
   12914:	moveq	lr, ip
   12918:	moveq	ip, r1
   1291c:	moveq	r1, lr
   12920:	str	r1, [sp, #92]	; 0x5c
   12924:	ldr	r1, [sp, #52]	; 0x34
   12928:	orr	r5, r5, #10
   1292c:	add	lr, sp, #80	; 0x50
   12930:	str	r5, [sp, #24]
   12934:	mov	r8, #1
   12938:	mov	r5, #0
   1293c:	str	lr, [sp, #28]
   12940:	strd	r0, [sp, #4]
   12944:	str	r9, [sp]
   12948:	str	r5, [sp, #20]
   1294c:	str	r5, [sp, #12]
   12950:	str	r8, [sp, #16]
   12954:	mov	r0, r3
   12958:	ldr	r1, [r2, #8]
   1295c:	ldr	r3, [sp, #148]	; 0x94
   12960:	ldr	r2, [sp, #144]	; 0x90
   12964:	str	ip, [sp, #84]	; 0x54
   12968:	bl	10fe8 <XCreateWindow@plt>
   1296c:	str	r5, [sp]
   12970:	strd	r6, [sp, #4]
   12974:	ldr	r2, [sp, #40]	; 0x28
   12978:	mov	r3, r5
   1297c:	ldr	r9, [pc, #-1796]	; 12280 <XRRGetOutputInfo@plt+0x11e4>
   12980:	mov	ip, r0
   12984:	add	r0, sp, #140	; 0x8c
   12988:	mov	r1, ip
   1298c:	str	r0, [sp, #12]
   12990:	ldr	r0, [r4]
   12994:	str	ip, [sp, #64]	; 0x40
   12998:	bl	10e2c <XSetStandardProperties@plt>
   1299c:	ldr	ip, [sp, #84]	; 0x54
   129a0:	ldr	r0, [sp, #92]	; 0x5c
   129a4:	mov	r3, #10
   129a8:	mov	r2, #50	; 0x32
   129ac:	mov	r1, #4
   129b0:	str	ip, [sp, #16]
   129b4:	str	r1, [sp, #8]
   129b8:	str	r2, [sp, #4]
   129bc:	str	r2, [sp]
   129c0:	str	r0, [sp, #12]
   129c4:	mov	r2, r3
   129c8:	ldr	r1, [sp, #64]	; 0x40
   129cc:	ldr	r0, [r4]
   129d0:	bl	11030 <XCreateSimpleWindow@plt>
   129d4:	mov	r2, r5
   129d8:	ldr	r1, [pc, #-1884]	; 12284 <XRRGetOutputInfo@plt+0x11e8>
   129dc:	mov	r6, r0
   129e0:	ldr	r0, [r4]
   129e4:	bl	10fa0 <XInternAtom@plt>
   129e8:	ldr	r3, [pc, #-1896]	; 12288 <XRRGetOutputInfo@plt+0x11ec>
   129ec:	mov	r2, r5
   129f0:	ldr	r1, [pc, #-1900]	; 1228c <XRRGetOutputInfo@plt+0x11f0>
   129f4:	mov	r5, r3
   129f8:	str	r3, [sp, #36]	; 0x24
   129fc:	str	r0, [r9]
   12a00:	ldr	r0, [r4]
   12a04:	bl	10fa0 <XInternAtom@plt>
   12a08:	mov	r3, r8
   12a0c:	mov	r2, r5
   12a10:	ldr	r1, [sp, #64]	; 0x40
   12a14:	str	r0, [r5]
   12a18:	ldr	r0, [r4]
   12a1c:	bl	10f70 <XSetWMProtocols@plt>
   12a20:	mov	r1, r6
   12a24:	ldr	r0, [r4]
   12a28:	bl	11060 <XMapWindow@plt>
   12a2c:	ldr	r1, [sp, #64]	; 0x40
   12a30:	ldr	r0, [r4]
   12a34:	bl	11060 <XMapWindow@plt>
   12a38:	mov	r3, r6
   12a3c:	mov	r0, r8
   12a40:	ldr	r2, [sp, #64]	; 0x40
   12a44:	ldr	r1, [pc, #-1980]	; 12290 <XRRGetOutputInfo@plt+0x11f4>
   12a48:	bl	1100c <__printf_chk@plt>
   12a4c:	b	11590 <XRRGetOutputInfo@plt+0x4f4>
   12a50:	ldr	r3, [pc, #-1892]	; 122f4 <XRRGetOutputInfo@plt+0x1258>
   12a54:	mov	r0, sl
   12a58:	ldr	r5, [r8]
   12a5c:	ldr	r4, [r3]
   12a60:	bl	10fc4 <XDisplayName@plt>
   12a64:	mov	r3, r5
   12a68:	ldr	r2, [pc, #-2012]	; 12294 <XRRGetOutputInfo@plt+0x11f8>
   12a6c:	mov	r1, #1
   12a70:	str	r0, [sp]
   12a74:	mov	r0, r4
   12a78:	bl	11024 <__fprintf_chk@plt>
   12a7c:	mov	r0, #1
   12a80:	bl	10f64 <exit@plt>
   12a84:	add	r2, sp, #76	; 0x4c
   12a88:	add	r1, sp, #72	; 0x48
   12a8c:	ldr	r0, [r4]
   12a90:	bl	10e74 <XRRQueryVersion@plt>
   12a94:	cmp	r0, #0
   12a98:	beq	115c0 <XRRGetOutputInfo@plt+0x524>
   12a9c:	ldr	r3, [sp, #72]	; 0x48
   12aa0:	ldr	r2, [sp, #308]	; 0x134
   12aa4:	cmp	r3, #1
   12aa8:	bne	12ab8 <XRRGetOutputInfo@plt+0x1a1c>
   12aac:	ldr	r3, [sp, #76]	; 0x4c
   12ab0:	cmp	r3, #1
   12ab4:	bicle	r2, r2, #14
   12ab8:	ldr	r1, [sp, #64]	; 0x40
   12abc:	ldr	r0, [r4]
   12ac0:	bl	1106c <XRRSelectInput@plt>
   12ac4:	b	115c0 <XRRGetOutputInfo@plt+0x524>
   12ac8:	ldr	r3, [sp, #64]	; 0x40
   12acc:	ldr	ip, [pc, #-2108]	; 12298 <XRRGetOutputInfo@plt+0x11fc>
   12ad0:	mov	r1, #0
   12ad4:	str	r3, [sp, #8]
   12ad8:	stm	sp, {r3, ip}
   12adc:	str	r1, [sp, #12]
   12ae0:	ldr	r3, [pc, #-2124]	; 1229c <XRRGetOutputInfo@plt+0x1200>
   12ae4:	mov	r2, sl
   12ae8:	ldr	r0, [sp, #56]	; 0x38
   12aec:	ldr	r1, [pc, #-2132]	; 122a0 <XRRGetOutputInfo@plt+0x1204>
   12af0:	bl	10f28 <XCreateIC@plt>
   12af4:	ldr	r3, [pc, #-2136]	; 122a4 <XRRGetOutputInfo@plt+0x1208>
   12af8:	cmp	r0, #0
   12afc:	str	r0, [r3, #4]
   12b00:	bne	115a0 <XRRGetOutputInfo@plt+0x504>
   12b04:	ldr	r3, [pc, #-2072]	; 122f4 <XRRGetOutputInfo@plt+0x1258>
   12b08:	mov	r2, #17
   12b0c:	mov	r1, #1
   12b10:	ldr	r3, [r3]
   12b14:	ldr	r0, [pc, #-2164]	; 122a8 <XRRGetOutputInfo@plt+0x120c>
   12b18:	bl	10f04 <fwrite@plt>
   12b1c:	b	115a0 <XRRGetOutputInfo@plt+0x504>
   12b20:	ldr	r2, [sp, #340]	; 0x154
   12b24:	cmp	r2, #0
   12b28:	bne	12c00 <XRRGetOutputInfo@plt+0x1b64>
   12b2c:	ldr	r1, [pc, #-2184]	; 122ac <XRRGetOutputInfo@plt+0x1210>
   12b30:	mov	r0, #1
   12b34:	bl	1100c <__printf_chk@plt>
   12b38:	b	1260c <XRRGetOutputInfo@plt+0x1570>
   12b3c:	ldr	r1, [pc, #-2196]	; 122b0 <XRRGetOutputInfo@plt+0x1214>
   12b40:	mov	r0, #1
   12b44:	bl	1100c <__printf_chk@plt>
   12b48:	b	125f4 <XRRGetOutputInfo@plt+0x1558>
   12b4c:	ldr	r0, [pc, #-2208]	; 122b4 <XRRGetOutputInfo@plt+0x1218>
   12b50:	bl	10f10 <puts@plt>
   12b54:	mov	r8, r6
   12b58:	ldr	r2, [sp, #336]	; 0x150
   12b5c:	ldr	r1, [pc, #-2216]	; 122bc <XRRGetOutputInfo@plt+0x1220>
   12b60:	mov	r0, #1
   12b64:	bl	1100c <__printf_chk@plt>
   12b68:	mov	fp, #0
   12b6c:	b	12758 <XRRGetOutputInfo@plt+0x16bc>
   12b70:	ldr	r0, [pc, #-2240]	; 122b8 <XRRGetOutputInfo@plt+0x121c>
   12b74:	bl	10f10 <puts@plt>
   12b78:	ldr	r2, [sp, #336]	; 0x150
   12b7c:	ldr	r1, [pc, #-2248]	; 122bc <XRRGetOutputInfo@plt+0x1220>
   12b80:	mov	r0, #1
   12b84:	bl	1100c <__printf_chk@plt>
   12b88:	mov	r8, #0
   12b8c:	b	12698 <XRRGetOutputInfo@plt+0x15fc>
   12b90:	ldr	r2, [sp, #344]	; 0x158
   12b94:	cmp	r2, #0
   12b98:	bne	12c7c <XRRGetOutputInfo@plt+0x1be0>
   12b9c:	ldr	r0, [pc, #-2276]	; 122c0 <XRRGetOutputInfo@plt+0x1224>
   12ba0:	bl	10f10 <puts@plt>
   12ba4:	b	12794 <XRRGetOutputInfo@plt+0x16f8>
   12ba8:	ldr	r1, [pc, #-2284]	; 122c4 <XRRGetOutputInfo@plt+0x1228>
   12bac:	mov	r0, #1
   12bb0:	bl	1100c <__printf_chk@plt>
   12bb4:	b	12770 <XRRGetOutputInfo@plt+0x16d4>
   12bb8:	mov	r0, #1
   12bbc:	b	11400 <XRRGetOutputInfo@plt+0x364>
   12bc0:	ldr	r0, [sp, #36]	; 0x24
   12bc4:	b	12880 <XRRGetOutputInfo@plt+0x17e4>
   12bc8:	ldr	r2, [sp, #68]	; 0x44
   12bcc:	cmp	r2, #0
   12bd0:	bne	114c4 <XRRGetOutputInfo@plt+0x428>
   12bd4:	b	1149c <XRRGetOutputInfo@plt+0x400>
   12bd8:	ldr	r1, [pc, #-2284]	; 122f4 <XRRGetOutputInfo@plt+0x1258>
   12bdc:	ldr	r3, [r8]
   12be0:	ldr	r2, [pc, #-2336]	; 122c8 <XRRGetOutputInfo@plt+0x122c>
   12be4:	ldr	r0, [r1]
   12be8:	mov	r1, #1
   12bec:	bl	11024 <__fprintf_chk@plt>
   12bf0:	ldr	sl, [sp, #56]	; 0x38
   12bf4:	b	11514 <XRRGetOutputInfo@plt+0x478>
   12bf8:	ldr	r0, [pc, #-2356]	; 122cc <XRRGetOutputInfo@plt+0x1230>
   12bfc:	bl	12ddc <XRRGetOutputInfo@plt+0x1d40>
   12c00:	ldr	r1, [pc, #-2360]	; 122d0 <XRRGetOutputInfo@plt+0x1234>
   12c04:	mov	r0, #1
   12c08:	bl	1100c <__printf_chk@plt>
   12c0c:	b	1260c <XRRGetOutputInfo@plt+0x1570>
   12c10:	ldr	r0, [pc, #-2372]	; 122d4 <XRRGetOutputInfo@plt+0x1238>
   12c14:	bl	12ddc <XRRGetOutputInfo@plt+0x1d40>
   12c18:	ldr	r1, [pc, #-2348]	; 122f4 <XRRGetOutputInfo@plt+0x1258>
   12c1c:	ldr	r3, [r8]
   12c20:	ldr	r2, [pc, #-2384]	; 122d8 <XRRGetOutputInfo@plt+0x123c>
   12c24:	ldr	r0, [r1]
   12c28:	mov	r1, #1
   12c2c:	bl	11024 <__fprintf_chk@plt>
   12c30:	b	11464 <XRRGetOutputInfo@plt+0x3c8>
   12c34:	ldr	r1, [pc, #-2400]	; 122dc <XRRGetOutputInfo@plt+0x1240>
   12c38:	mov	r0, #1
   12c3c:	bl	1100c <__printf_chk@plt>
   12c40:	b	127e4 <XRRGetOutputInfo@plt+0x1748>
   12c44:	ldr	r1, [pc, #-2412]	; 122e0 <XRRGetOutputInfo@plt+0x1244>
   12c48:	mov	r0, #1
   12c4c:	bl	1100c <__printf_chk@plt>
   12c50:	b	127e4 <XRRGetOutputInfo@plt+0x1748>
   12c54:	ldr	r0, [pc, #-2424]	; 122e4 <XRRGetOutputInfo@plt+0x1248>
   12c58:	bl	10f10 <puts@plt>
   12c5c:	b	126cc <XRRGetOutputInfo@plt+0x1630>
   12c60:	ldr	r0, [pc, #-2432]	; 122e8 <XRRGetOutputInfo@plt+0x124c>
   12c64:	bl	10f10 <puts@plt>
   12c68:	b	126cc <XRRGetOutputInfo@plt+0x1630>
   12c6c:	mov	r0, r2
   12c70:	ldr	r1, [pc, #-2444]	; 122ec <XRRGetOutputInfo@plt+0x1250>
   12c74:	bl	1100c <__printf_chk@plt>
   12c78:	b	127e4 <XRRGetOutputInfo@plt+0x1748>
   12c7c:	ldr	r1, [pc, #-2452]	; 122f0 <XRRGetOutputInfo@plt+0x1254>
   12c80:	mov	r0, #1
   12c84:	bl	1100c <__printf_chk@plt>
   12c88:	b	12794 <XRRGetOutputInfo@plt+0x16f8>
   12c8c:	ldr	r3, [sp, #152]	; 0x98
   12c90:	ldr	r1, [sp, #160]	; 0xa0
   12c94:	ldr	r2, [sp, #156]	; 0x9c
   12c98:	cmp	r3, r1
   12c9c:	ldr	ip, [sp, #164]	; 0xa4
   12ca0:	movge	r1, r3
   12ca4:	ldr	r3, [sp, #140]	; 0x8c
   12ca8:	cmp	r2, ip
   12cac:	movlt	r2, ip
   12cb0:	orr	r3, r3, #2
   12cb4:	str	r1, [sp, #152]	; 0x98
   12cb8:	str	r2, [sp, #156]	; 0x9c
   12cbc:	str	r3, [sp, #140]	; 0x8c
   12cc0:	b	12868 <XRRGetOutputInfo@plt+0x17cc>
   12cc4:	ldr	r2, [pc, #-2520]	; 122f4 <XRRGetOutputInfo@plt+0x1258>
   12cc8:	ldr	r3, [sp, #56]	; 0x38
   12ccc:	mov	r1, #1
   12cd0:	str	r3, [sp]
   12cd4:	ldr	r0, [r2]
   12cd8:	ldr	r3, [r8]
   12cdc:	ldr	r2, [pc, #-2540]	; 122f8 <XRRGetOutputInfo@plt+0x125c>
   12ce0:	bl	11024 <__fprintf_chk@plt>
   12ce4:	mov	r0, #0
   12ce8:	bl	12ddc <XRRGetOutputInfo@plt+0x1d40>
   12cec:	mov	fp, #0
   12cf0:	mov	lr, #0
   12cf4:	pop	{r1}		; (ldr r1, [sp], #4)
   12cf8:	mov	r2, sp
   12cfc:	push	{r2}		; (str r2, [sp, #-4]!)
   12d00:	push	{r0}		; (str r0, [sp, #-4]!)
   12d04:	ldr	ip, [pc, #16]	; 12d1c <XRRGetOutputInfo@plt+0x1c80>
   12d08:	push	{ip}		; (str ip, [sp, #-4]!)
   12d0c:	ldr	r0, [pc, #12]	; 12d20 <XRRGetOutputInfo@plt+0x1c84>
   12d10:	ldr	r3, [pc, #12]	; 12d24 <XRRGetOutputInfo@plt+0x1c88>
   12d14:	bl	10f34 <__libc_start_main@plt>
   12d18:	bl	11090 <abort@plt>
   12d1c:	andeq	r3, r1, ip, lsl #18
   12d20:	andeq	r1, r1, r8, lsr #1
   12d24:	andeq	r3, r1, ip, lsr #17
   12d28:	ldr	r3, [pc, #20]	; 12d44 <XRRGetOutputInfo@plt+0x1ca8>
   12d2c:	ldr	r2, [pc, #20]	; 12d48 <XRRGetOutputInfo@plt+0x1cac>
   12d30:	add	r3, pc, r3
   12d34:	ldr	r2, [r3, r2]
   12d38:	cmp	r2, #0
   12d3c:	bxeq	lr
   12d40:	b	10f58 <__gmon_start__@plt>
   12d44:	andeq	r3, r1, r8, asr #5
   12d48:	andeq	r0, r0, r0, ror #1
   12d4c:	ldr	r0, [pc, #24]	; 12d6c <XRRGetOutputInfo@plt+0x1cd0>
   12d50:	ldr	r3, [pc, #24]	; 12d70 <XRRGetOutputInfo@plt+0x1cd4>
   12d54:	cmp	r3, r0
   12d58:	bxeq	lr
   12d5c:	ldr	r3, [pc, #16]	; 12d74 <XRRGetOutputInfo@plt+0x1cd8>
   12d60:	cmp	r3, #0
   12d64:	bxeq	lr
   12d68:	bx	r3
   12d6c:	andeq	r6, r2, r0, asr #2
   12d70:	andeq	r6, r2, r0, asr #2
   12d74:	andeq	r0, r0, r0
   12d78:	ldr	r0, [pc, #36]	; 12da4 <XRRGetOutputInfo@plt+0x1d08>
   12d7c:	ldr	r1, [pc, #36]	; 12da8 <XRRGetOutputInfo@plt+0x1d0c>
   12d80:	sub	r1, r1, r0
   12d84:	asr	r1, r1, #2
   12d88:	add	r1, r1, r1, lsr #31
   12d8c:	asrs	r1, r1, #1
   12d90:	bxeq	lr
   12d94:	ldr	r3, [pc, #16]	; 12dac <XRRGetOutputInfo@plt+0x1d10>
   12d98:	cmp	r3, #0
   12d9c:	bxeq	lr
   12da0:	bx	r3
   12da4:	andeq	r6, r2, r0, asr #2
   12da8:	andeq	r6, r2, r0, asr #2
   12dac:	andeq	r0, r0, r0
   12db0:	push	{r4, lr}
   12db4:	ldr	r4, [pc, #24]	; 12dd4 <XRRGetOutputInfo@plt+0x1d38>
   12db8:	ldrb	r3, [r4]
   12dbc:	cmp	r3, #0
   12dc0:	popne	{r4, pc}
   12dc4:	bl	12d4c <XRRGetOutputInfo@plt+0x1cb0>
   12dc8:	mov	r3, #1
   12dcc:	strb	r3, [r4]
   12dd0:	pop	{r4, pc}
   12dd4:	andeq	r6, r2, r8, asr #2
   12dd8:	b	12d78 <XRRGetOutputInfo@plt+0x1cdc>
   12ddc:	cmp	r0, #0
   12de0:	push	{lr}		; (str lr, [sp, #-4]!)
   12de4:	sub	sp, sp, #12
   12de8:	ldr	r4, [pc, #124]	; 12e6c <XRRGetOutputInfo@plt+0x1dd0>
   12dec:	ldr	r5, [pc, #124]	; 12e70 <XRRGetOutputInfo@plt+0x1dd4>
   12df0:	beq	12e0c <XRRGetOutputInfo@plt+0x1d70>
   12df4:	str	r0, [sp]
   12df8:	ldr	r2, [pc, #116]	; 12e74 <XRRGetOutputInfo@plt+0x1dd8>
   12dfc:	ldr	r3, [r4]
   12e00:	ldr	r0, [r5]
   12e04:	mov	r1, #1
   12e08:	bl	11024 <__fprintf_chk@plt>
   12e0c:	ldr	r3, [r4]
   12e10:	ldr	r4, [pc, #96]	; 12e78 <XRRGetOutputInfo@plt+0x1ddc>
   12e14:	ldr	r2, [pc, #96]	; 12e7c <XRRGetOutputInfo@plt+0x1de0>
   12e18:	mov	r1, #1
   12e1c:	ldr	r0, [r5]
   12e20:	bl	11024 <__fprintf_chk@plt>
   12e24:	ldr	r3, [r5]
   12e28:	mov	r2, #23
   12e2c:	mov	r1, #1
   12e30:	ldr	r0, [pc, #72]	; 12e80 <XRRGetOutputInfo@plt+0x1de4>
   12e34:	bl	10f04 <fwrite@plt>
   12e38:	ldr	r3, [r4]
   12e3c:	cmp	r3, #0
   12e40:	beq	12e64 <XRRGetOutputInfo@plt+0x1dc8>
   12e44:	ldr	r6, [pc, #56]	; 12e84 <XRRGetOutputInfo@plt+0x1de8>
   12e48:	mov	r2, r6
   12e4c:	mov	r1, #1
   12e50:	ldr	r0, [r5]
   12e54:	bl	11024 <__fprintf_chk@plt>
   12e58:	ldr	r3, [r4, #4]!
   12e5c:	cmp	r3, #0
   12e60:	bne	12e48 <XRRGetOutputInfo@plt+0x1dac>
   12e64:	mov	r0, #1
   12e68:	bl	10f64 <exit@plt>
   12e6c:	andeq	r6, r2, ip, ror #2
   12e70:	andeq	r6, r2, r0, asr #2
   12e74:			; <UNDEFINED> instruction: 0x000139b8
   12e78:	andeq	r6, r2, ip, ror #1
   12e7c:	andeq	r3, r1, r0, asr #19
   12e80:	ldrdeq	r3, [r1], -ip
   12e84:			; <UNDEFINED> instruction: 0x000139bc
   12e88:	push	{lr}		; (str lr, [sp, #-4]!)
   12e8c:	mov	r2, r1
   12e90:	ldr	r1, [r0, #8]
   12e94:	sub	sp, sp, #12
   12e98:	cmp	r1, #0
   12e9c:	ldr	r1, [pc, #40]	; 12ecc <XRRGetOutputInfo@plt+0x1e30>
   12ea0:	ldr	r3, [r0, #4]
   12ea4:	ldrne	ip, [r1, #68]	; 0x44
   12ea8:	ldreq	ip, [r1, #72]	; 0x48
   12eac:	ldr	r1, [r0, #16]
   12eb0:	str	ip, [sp]
   12eb4:	str	r1, [sp, #4]
   12eb8:	mov	r0, #1
   12ebc:	ldr	r1, [pc, #12]	; 12ed0 <XRRGetOutputInfo@plt+0x1e34>
   12ec0:	bl	1100c <__printf_chk@plt>
   12ec4:	add	sp, sp, #12
   12ec8:	pop	{pc}		; (ldr pc, [sp], #4)
   12ecc:	andeq	r6, r2, ip, ror #1
   12ed0:	strdeq	r3, [r1], -r4
   12ed4:	push	{r4, r5, r6, lr}
   12ed8:	mov	r5, r1
   12edc:	mov	r4, r0
   12ee0:	mov	r0, #40	; 0x28
   12ee4:	bl	10fd0 <putchar@plt>
   12ee8:	cmp	r5, #1
   12eec:	ble	12f14 <XRRGetOutputInfo@plt+0x1e78>
   12ef0:	sub	r5, r5, #1
   12ef4:	ldr	r6, [pc, #44]	; 12f28 <XRRGetOutputInfo@plt+0x1e8c>
   12ef8:	add	r5, r4, r5
   12efc:	ldrb	r2, [r4], #1
   12f00:	mov	r1, r6
   12f04:	mov	r0, #1
   12f08:	bl	1100c <__printf_chk@plt>
   12f0c:	cmp	r4, r5
   12f10:	bne	12efc <XRRGetOutputInfo@plt+0x1e60>
   12f14:	ldrb	r2, [r4]
   12f18:	ldr	r1, [pc, #12]	; 12f2c <XRRGetOutputInfo@plt+0x1e90>
   12f1c:	mov	r0, #1
   12f20:	pop	{r4, r5, r6, lr}
   12f24:	b	1100c <__printf_chk@plt>
   12f28:	andeq	r3, r1, r8, lsr #20
   12f2c:	andeq	r3, r1, r0, lsr sl
   12f30:	push	{r4, lr}
   12f34:	mov	r4, r0
   12f38:	sub	sp, sp, #24
   12f3c:	ldrd	r2, [r0, #20]
   12f40:	ldr	r0, [r0, #44]	; 0x2c
   12f44:	ldr	ip, [r4, #40]	; 0x28
   12f48:	str	r0, [sp, #16]
   12f4c:	ldr	r0, [r4, #36]	; 0x24
   12f50:	str	ip, [sp, #12]
   12f54:	ldr	ip, [r4, #32]
   12f58:	str	r0, [sp, #8]
   12f5c:	ldr	r0, [r4, #28]
   12f60:	ldr	r1, [pc, #60]	; 12fa4 <XRRGetOutputInfo@plt+0x1f08>
   12f64:	stm	sp, {r0, ip}
   12f68:	mov	r0, #1
   12f6c:	bl	1100c <__printf_chk@plt>
   12f70:	ldr	r3, [r4, #56]	; 0x38
   12f74:	ldr	r1, [pc, #44]	; 12fa8 <XRRGetOutputInfo@plt+0x1f0c>
   12f78:	cmp	r3, #0
   12f7c:	ldr	r2, [r4, #48]	; 0x30
   12f80:	ldrne	r1, [r1, #68]	; 0x44
   12f84:	ldreq	r1, [r1, #72]	; 0x48
   12f88:	ldr	r3, [r4, #52]	; 0x34
   12f8c:	mov	r0, #1
   12f90:	str	r1, [sp]
   12f94:	ldr	r1, [pc, #16]	; 12fac <XRRGetOutputInfo@plt+0x1f10>
   12f98:	bl	1100c <__printf_chk@plt>
   12f9c:	add	sp, sp, #24
   12fa0:	pop	{r4, pc}
   12fa4:	andeq	r3, r1, r8, lsr sl
   12fa8:	andeq	r6, r2, ip, ror #1
   12fac:	andeq	r3, r1, r8, ror sl
   12fb0:	push	{r4, r5, r6, r7, r8, lr}
   12fb4:	sub	sp, sp, #56	; 0x38
   12fb8:	ldr	r5, [pc, #396]	; 1314c <XRRGetOutputInfo@plt+0x20b0>
   12fbc:	ldr	r3, [r0, #48]	; 0x30
   12fc0:	mov	r4, r0
   12fc4:	ldr	r2, [r5]
   12fc8:	str	r2, [sp, #52]	; 0x34
   12fcc:	cmp	r3, #3
   12fd0:	ldrls	pc, [pc, r3, lsl #2]
   12fd4:	b	13034 <XRRGetOutputInfo@plt+0x1f98>
   12fd8:	andeq	r2, r1, r8, ror #31
   12fdc:	andeq	r3, r1, ip, lsr #32
   12fe0:	andeq	r3, r1, r4, lsr #32
   12fe4:	andeq	r3, r1, ip, lsl r0
   12fe8:	ldr	r7, [pc, #352]	; 13150 <XRRGetOutputInfo@plt+0x20b4>
   12fec:	ldr	r3, [r4, #52]	; 0x34
   12ff0:	cmp	r3, #7
   12ff4:	ldrls	pc, [pc, r3, lsl #2]
   12ff8:	b	13128 <XRRGetOutputInfo@plt+0x208c>
   12ffc:	andeq	r3, r1, r4, asr r0
   13000:	andeq	r3, r1, r0, lsr #2
   13004:	andeq	r3, r1, r8, lsl r1
   13008:	andeq	r3, r1, r0, lsl r1
   1300c:	andeq	r3, r1, r8, lsl #2
   13010:	andeq	r3, r1, r0, lsl #2
   13014:	strdeq	r3, [r1], -r8
   13018:	strdeq	r3, [r1], -r0
   1301c:	ldr	r7, [pc, #304]	; 13154 <XRRGetOutputInfo@plt+0x20b8>
   13020:	b	12fec <XRRGetOutputInfo@plt+0x1f50>
   13024:	ldr	r7, [pc, #300]	; 13158 <XRRGetOutputInfo@plt+0x20bc>
   13028:	b	12fec <XRRGetOutputInfo@plt+0x1f50>
   1302c:	ldr	r7, [pc, #296]	; 1315c <XRRGetOutputInfo@plt+0x20c0>
   13030:	b	12fec <XRRGetOutputInfo@plt+0x1f50>
   13034:	str	r3, [sp]
   13038:	add	r0, sp, #28
   1303c:	ldr	r3, [pc, #284]	; 13160 <XRRGetOutputInfo@plt+0x20c4>
   13040:	mov	r2, #10
   13044:	mov	r1, #1
   13048:	mov	r7, r0
   1304c:	bl	10fb8 <__sprintf_chk@plt>
   13050:	b	12fec <XRRGetOutputInfo@plt+0x1f50>
   13054:	ldr	r8, [pc, #264]	; 13164 <XRRGetOutputInfo@plt+0x20c8>
   13058:	ldr	r0, [r4, #44]	; 0x2c
   1305c:	ldr	r1, [r4, #40]	; 0x28
   13060:	ldrd	r2, [r4, #20]
   13064:	ldr	ip, [r4, #36]	; 0x24
   13068:	str	r0, [sp, #16]
   1306c:	ldr	r0, [r4, #32]
   13070:	str	r1, [sp, #12]
   13074:	ldr	r1, [r4, #28]
   13078:	stmib	sp, {r0, ip}
   1307c:	str	r1, [sp]
   13080:	mov	r0, #1
   13084:	ldr	r1, [pc, #220]	; 13168 <XRRGetOutputInfo@plt+0x20cc>
   13088:	bl	1100c <__printf_chk@plt>
   1308c:	ldr	r3, [r4, #56]	; 0x38
   13090:	ldr	r6, [pc, #212]	; 1316c <XRRGetOutputInfo@plt+0x20d0>
   13094:	cmp	r3, #0
   13098:	mov	r2, r7
   1309c:	ldrne	r3, [r6, #68]	; 0x44
   130a0:	ldreq	r3, [r6, #72]	; 0x48
   130a4:	ldr	r1, [pc, #196]	; 13170 <XRRGetOutputInfo@plt+0x20d4>
   130a8:	str	r3, [sp]
   130ac:	mov	r0, #1
   130b0:	mov	r3, r8
   130b4:	bl	1100c <__printf_chk@plt>
   130b8:	ldr	r3, [r4, #60]	; 0x3c
   130bc:	ldr	r1, [pc, #176]	; 13174 <XRRGetOutputInfo@plt+0x20d8>
   130c0:	cmp	r3, #0
   130c4:	mov	r0, #1
   130c8:	ldrne	r2, [r6, #68]	; 0x44
   130cc:	ldreq	r2, [r6, #72]	; 0x48
   130d0:	ldr	r3, [r4, #64]	; 0x40
   130d4:	bl	1100c <__printf_chk@plt>
   130d8:	ldr	r2, [sp, #52]	; 0x34
   130dc:	ldr	r3, [r5]
   130e0:	cmp	r2, r3
   130e4:	bne	13148 <XRRGetOutputInfo@plt+0x20ac>
   130e8:	add	sp, sp, #56	; 0x38
   130ec:	pop	{r4, r5, r6, r7, r8, pc}
   130f0:	ldr	r8, [pc, #128]	; 13178 <XRRGetOutputInfo@plt+0x20dc>
   130f4:	b	13058 <XRRGetOutputInfo@plt+0x1fbc>
   130f8:	ldr	r8, [pc, #124]	; 1317c <XRRGetOutputInfo@plt+0x20e0>
   130fc:	b	13058 <XRRGetOutputInfo@plt+0x1fbc>
   13100:	ldr	r8, [pc, #120]	; 13180 <XRRGetOutputInfo@plt+0x20e4>
   13104:	b	13058 <XRRGetOutputInfo@plt+0x1fbc>
   13108:	ldr	r8, [pc, #116]	; 13184 <XRRGetOutputInfo@plt+0x20e8>
   1310c:	b	13058 <XRRGetOutputInfo@plt+0x1fbc>
   13110:	ldr	r8, [pc, #112]	; 13188 <XRRGetOutputInfo@plt+0x20ec>
   13114:	b	13058 <XRRGetOutputInfo@plt+0x1fbc>
   13118:	ldr	r8, [pc, #108]	; 1318c <XRRGetOutputInfo@plt+0x20f0>
   1311c:	b	13058 <XRRGetOutputInfo@plt+0x1fbc>
   13120:	ldr	r8, [pc, #104]	; 13190 <XRRGetOutputInfo@plt+0x20f4>
   13124:	b	13058 <XRRGetOutputInfo@plt+0x1fbc>
   13128:	str	r3, [sp]
   1312c:	add	r0, sp, #40	; 0x28
   13130:	ldr	r3, [pc, #40]	; 13160 <XRRGetOutputInfo@plt+0x20c4>
   13134:	mov	r2, #10
   13138:	mov	r1, #1
   1313c:	mov	r8, r0
   13140:	bl	10fb8 <__sprintf_chk@plt>
   13144:	b	13058 <XRRGetOutputInfo@plt+0x1fbc>
   13148:	bl	10ec8 <__stack_chk_fail@plt>
   1314c:	strdeq	r5, [r2], -r8
   13150:	andeq	r3, r1, r4, lsr #21
   13154:	ldrdeq	r3, [r1], -r0
   13158:	andeq	r3, r1, r0, asr #21
   1315c:			; <UNDEFINED> instruction: 0x00013ab4
   13160:	andeq	r3, r1, r4, ror fp
   13164:	andeq	r3, r1, r4, ror #21
   13168:	andeq	r3, r1, r8, lsr sl
   1316c:	andeq	r6, r2, ip, ror #1
   13170:	andeq	r3, r1, r8, ror fp
   13174:	andeq	r3, r1, r4, lsr #23
   13178:	andeq	r3, r1, r0, ror #22
   1317c:	andeq	r3, r1, ip, asr #22
   13180:	andeq	r3, r1, ip, lsr fp
   13184:	andeq	r3, r1, r4, lsr #22
   13188:	andeq	r3, r1, r4, lsl fp
   1318c:	andeq	r3, r1, r4, lsl #22
   13190:	strdeq	r3, [r1], -r4
   13194:	push	{r4, r5, r6, lr}
   13198:	sub	sp, sp, #40	; 0x28
   1319c:	ldr	r5, [pc, #284]	; 132c0 <XRRGetOutputInfo@plt+0x2224>
   131a0:	ldr	r3, [r0, #20]
   131a4:	mov	r4, r0
   131a8:	ldr	r2, [r5]
   131ac:	str	r2, [sp, #36]	; 0x24
   131b0:	cmp	r3, #3
   131b4:	ldrls	pc, [pc, r3, lsl #2]
   131b8:	b	13218 <XRRGetOutputInfo@plt+0x217c>
   131bc:	andeq	r3, r1, ip, asr #3
   131c0:	andeq	r3, r1, r0, lsl r2
   131c4:	andeq	r3, r1, r8, lsl #4
   131c8:	andeq	r3, r1, r0, lsl #4
   131cc:	ldr	r6, [pc, #240]	; 132c4 <XRRGetOutputInfo@plt+0x2228>
   131d0:	ldr	r3, [r4, #24]
   131d4:	cmp	r3, #7
   131d8:	ldrls	pc, [pc, r3, lsl #2]
   131dc:	b	1329c <XRRGetOutputInfo@plt+0x2200>
   131e0:	andeq	r3, r1, r8, lsr r2
   131e4:	muleq	r1, r4, r2
   131e8:	andeq	r3, r1, ip, lsl #5
   131ec:	andeq	r3, r1, r4, lsl #5
   131f0:	andeq	r3, r1, ip, ror r2
   131f4:	andeq	r3, r1, r4, ror r2
   131f8:	andeq	r3, r1, ip, ror #4
   131fc:	andeq	r3, r1, r4, ror #4
   13200:	ldr	r6, [pc, #192]	; 132c8 <XRRGetOutputInfo@plt+0x222c>
   13204:	b	131d0 <XRRGetOutputInfo@plt+0x2134>
   13208:	ldr	r6, [pc, #188]	; 132cc <XRRGetOutputInfo@plt+0x2230>
   1320c:	b	131d0 <XRRGetOutputInfo@plt+0x2134>
   13210:	ldr	r6, [pc, #184]	; 132d0 <XRRGetOutputInfo@plt+0x2234>
   13214:	b	131d0 <XRRGetOutputInfo@plt+0x2134>
   13218:	str	r3, [sp]
   1321c:	add	r0, sp, #12
   13220:	ldr	r3, [pc, #172]	; 132d4 <XRRGetOutputInfo@plt+0x2238>
   13224:	mov	r2, #10
   13228:	mov	r1, #1
   1322c:	mov	r6, r0
   13230:	bl	10fb8 <__sprintf_chk@plt>
   13234:	b	131d0 <XRRGetOutputInfo@plt+0x2134>
   13238:	ldr	r3, [pc, #152]	; 132d8 <XRRGetOutputInfo@plt+0x223c>
   1323c:	mov	r2, r6
   13240:	ldr	r1, [pc, #148]	; 132dc <XRRGetOutputInfo@plt+0x2240>
   13244:	mov	r0, #1
   13248:	bl	1100c <__printf_chk@plt>
   1324c:	ldr	r2, [sp, #36]	; 0x24
   13250:	ldr	r3, [r5]
   13254:	cmp	r2, r3
   13258:	bne	132bc <XRRGetOutputInfo@plt+0x2220>
   1325c:	add	sp, sp, #40	; 0x28
   13260:	pop	{r4, r5, r6, pc}
   13264:	ldr	r3, [pc, #116]	; 132e0 <XRRGetOutputInfo@plt+0x2244>
   13268:	b	1323c <XRRGetOutputInfo@plt+0x21a0>
   1326c:	ldr	r3, [pc, #112]	; 132e4 <XRRGetOutputInfo@plt+0x2248>
   13270:	b	1323c <XRRGetOutputInfo@plt+0x21a0>
   13274:	ldr	r3, [pc, #108]	; 132e8 <XRRGetOutputInfo@plt+0x224c>
   13278:	b	1323c <XRRGetOutputInfo@plt+0x21a0>
   1327c:	ldr	r3, [pc, #104]	; 132ec <XRRGetOutputInfo@plt+0x2250>
   13280:	b	1323c <XRRGetOutputInfo@plt+0x21a0>
   13284:	ldr	r3, [pc, #100]	; 132f0 <XRRGetOutputInfo@plt+0x2254>
   13288:	b	1323c <XRRGetOutputInfo@plt+0x21a0>
   1328c:	ldr	r3, [pc, #96]	; 132f4 <XRRGetOutputInfo@plt+0x2258>
   13290:	b	1323c <XRRGetOutputInfo@plt+0x21a0>
   13294:	ldr	r3, [pc, #92]	; 132f8 <XRRGetOutputInfo@plt+0x225c>
   13298:	b	1323c <XRRGetOutputInfo@plt+0x21a0>
   1329c:	str	r3, [sp]
   132a0:	add	r0, sp, #24
   132a4:	ldr	r3, [pc, #40]	; 132d4 <XRRGetOutputInfo@plt+0x2238>
   132a8:	mov	r2, #10
   132ac:	mov	r1, #1
   132b0:	bl	10fb8 <__sprintf_chk@plt>
   132b4:	add	r3, sp, #24
   132b8:	b	1323c <XRRGetOutputInfo@plt+0x21a0>
   132bc:	bl	10ec8 <__stack_chk_fail@plt>
   132c0:	strdeq	r5, [r2], -r8
   132c4:	andeq	r3, r1, r4, lsr #21
   132c8:	ldrdeq	r3, [r1], -r0
   132cc:	andeq	r3, r1, r0, asr #21
   132d0:			; <UNDEFINED> instruction: 0x00013ab4
   132d4:	andeq	r3, r1, r4, ror fp
   132d8:	andeq	r3, r1, r4, ror #21
   132dc:			; <UNDEFINED> instruction: 0x00013bbc
   132e0:	andeq	r3, r1, r0, ror #22
   132e4:	andeq	r3, r1, ip, asr #22
   132e8:	andeq	r3, r1, ip, lsr fp
   132ec:	andeq	r3, r1, r4, lsr #22
   132f0:	andeq	r3, r1, r4, lsl fp
   132f4:	andeq	r3, r1, r4, lsl #22
   132f8:	strdeq	r3, [r1], -r4
   132fc:	tst	r0, #1
   13300:	push	{r4, lr}
   13304:	mov	r4, r0
   13308:	bne	1337c <XRRGetOutputInfo@plt+0x22e0>
   1330c:	tst	r0, #2
   13310:	bne	13350 <XRRGetOutputInfo@plt+0x22b4>
   13314:	tst	r0, #4
   13318:	bne	133a0 <XRRGetOutputInfo@plt+0x2304>
   1331c:	tst	r0, #8
   13320:	beq	1338c <XRRGetOutputInfo@plt+0x22f0>
   13324:	ldr	r1, [pc, #132]	; 133b0 <XRRGetOutputInfo@plt+0x2314>
   13328:	mov	r0, #1
   1332c:	bl	1100c <__printf_chk@plt>
   13330:	tst	r4, #16
   13334:	beq	13364 <XRRGetOutputInfo@plt+0x22c8>
   13338:	ldr	r1, [pc, #116]	; 133b4 <XRRGetOutputInfo@plt+0x2318>
   1333c:	mov	r0, #1
   13340:	bl	1100c <__printf_chk@plt>
   13344:	tst	r4, #32
   13348:	popeq	{r4, pc}
   1334c:	b	1336c <XRRGetOutputInfo@plt+0x22d0>
   13350:	ldr	r1, [pc, #96]	; 133b8 <XRRGetOutputInfo@plt+0x231c>
   13354:	mov	r0, #1
   13358:	bl	1100c <__printf_chk@plt>
   1335c:	tst	r4, #16
   13360:	bne	13338 <XRRGetOutputInfo@plt+0x229c>
   13364:	tst	r4, #32
   13368:	popeq	{r4, pc}
   1336c:	ldr	r1, [pc, #72]	; 133bc <XRRGetOutputInfo@plt+0x2320>
   13370:	mov	r0, #1
   13374:	pop	{r4, lr}
   13378:	b	1100c <__printf_chk@plt>
   1337c:	ldr	r1, [pc, #60]	; 133c0 <XRRGetOutputInfo@plt+0x2324>
   13380:	mov	r0, #1
   13384:	bl	1100c <__printf_chk@plt>
   13388:	b	1335c <XRRGetOutputInfo@plt+0x22c0>
   1338c:	mov	r2, r0
   13390:	ldr	r1, [pc, #44]	; 133c4 <XRRGetOutputInfo@plt+0x2328>
   13394:	mov	r0, #1
   13398:	pop	{r4, lr}
   1339c:	b	1100c <__printf_chk@plt>
   133a0:	ldr	r1, [pc, #32]	; 133c8 <XRRGetOutputInfo@plt+0x232c>
   133a4:	mov	r0, #1
   133a8:	bl	1100c <__printf_chk@plt>
   133ac:	b	1335c <XRRGetOutputInfo@plt+0x22c0>
   133b0:	andeq	r3, r1, r0, lsl #24
   133b4:	andeq	r3, r1, r4, lsl ip
   133b8:	andeq	r3, r1, r0, ror #23
   133bc:	andeq	r3, r1, r4, lsr #24
   133c0:	ldrdeq	r3, [r1], -r4
   133c4:	andeq	r3, r1, r0, lsl ip
   133c8:	strdeq	r3, [r1], -r0
   133cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133d0:	sub	sp, sp, #308	; 0x134
   133d4:	ldr	sl, [pc, #764]	; 136d8 <XRRGetOutputInfo@plt+0x263c>
   133d8:	ldr	r7, [pc, #764]	; 136dc <XRRGetOutputInfo@plt+0x2640>
   133dc:	mov	r4, r0
   133e0:	ldr	r3, [sl]
   133e4:	ldr	r2, [r7]
   133e8:	str	r3, [sp, #300]	; 0x12c
   133ec:	ldr	r3, [pc, #748]	; 136e0 <XRRGetOutputInfo@plt+0x2644>
   133f0:	cmp	r2, #0
   133f4:	str	r3, [sp, #24]
   133f8:	beq	136b8 <XRRGetOutputInfo@plt+0x261c>
   133fc:	add	r9, sp, #32
   13400:	mov	r5, #0
   13404:	mov	r3, r9
   13408:	add	r1, sp, #40	; 0x28
   1340c:	str	r5, [sp]
   13410:	mov	r2, #256	; 0x100
   13414:	mov	r0, r4
   13418:	bl	10e5c <XLookupString@plt>
   1341c:	ldr	r3, [r4]
   13420:	cmp	r3, #2
   13424:	mov	r8, r0
   13428:	beq	13604 <XRRGetOutputInfo@plt+0x2568>
   1342c:	ldr	r6, [sp, #32]
   13430:	cmp	r6, #0
   13434:	bne	13688 <XRRGetOutputInfo@plt+0x25ec>
   13438:	ldr	r9, [pc, #676]	; 136e4 <XRRGetOutputInfo@plt+0x2648>
   1343c:	mov	fp, r6
   13440:	ldr	r0, [r4, #44]	; 0x2c
   13444:	ldr	r1, [r4, #40]	; 0x28
   13448:	ldrd	r2, [r4, #20]
   1344c:	ldr	ip, [r4, #36]	; 0x24
   13450:	str	r0, [sp, #16]
   13454:	ldr	r0, [r4, #32]
   13458:	str	r1, [sp, #12]
   1345c:	ldr	r1, [r4, #28]
   13460:	stmib	sp, {r0, ip}
   13464:	str	r1, [sp]
   13468:	mov	r0, #1
   1346c:	ldr	r1, [pc, #628]	; 136e8 <XRRGetOutputInfo@plt+0x264c>
   13470:	bl	1100c <__printf_chk@plt>
   13474:	ldr	r3, [r4, #56]	; 0x38
   13478:	ldr	r0, [sp, #24]
   1347c:	cmp	r3, #0
   13480:	ldr	r1, [sp, #32]
   13484:	ldrne	r0, [r0, #68]	; 0x44
   13488:	ldreq	r0, [r0, #72]	; 0x48
   1348c:	ldr	r2, [r4, #48]	; 0x30
   13490:	ldr	r3, [r4, #52]	; 0x34
   13494:	str	r0, [sp, #8]
   13498:	stm	sp, {r1, r9}
   1349c:	mov	r0, #1
   134a0:	ldr	r1, [pc, #580]	; 136ec <XRRGetOutputInfo@plt+0x2650>
   134a4:	bl	1100c <__printf_chk@plt>
   134a8:	cmp	r6, #0
   134ac:	beq	134bc <XRRGetOutputInfo@plt+0x2420>
   134b0:	ldr	r3, [r4, #52]	; 0x34
   134b4:	cmp	r3, fp
   134b8:	bne	1357c <XRRGetOutputInfo@plt+0x24e0>
   134bc:	cmp	r8, #0
   134c0:	blt	13594 <XRRGetOutputInfo@plt+0x24f8>
   134c4:	cmp	r8, #256	; 0x100
   134c8:	bgt	1355c <XRRGetOutputInfo@plt+0x24c0>
   134cc:	add	r3, sp, #304	; 0x130
   134d0:	add	r3, r3, r8
   134d4:	mov	r0, #0
   134d8:	strb	r0, [r3, #-264]	; 0xfffffef8
   134dc:	mov	r2, r8
   134e0:	ldr	r1, [pc, #520]	; 136f0 <XRRGetOutputInfo@plt+0x2654>
   134e4:	mov	r0, #1
   134e8:	bl	1100c <__printf_chk@plt>
   134ec:	cmp	r8, #0
   134f0:	beq	135ac <XRRGetOutputInfo@plt+0x2510>
   134f4:	mov	r1, r8
   134f8:	add	r0, sp, #40	; 0x28
   134fc:	bl	12ed4 <XRRGetOutputInfo@plt+0x1e38>
   13500:	add	r2, sp, #40	; 0x28
   13504:	ldr	r1, [pc, #488]	; 136f4 <XRRGetOutputInfo@plt+0x2658>
   13508:	mov	r0, #1
   1350c:	bl	1100c <__printf_chk@plt>
   13510:	ldr	r3, [r4]
   13514:	cmp	r3, #2
   13518:	beq	135c0 <XRRGetOutputInfo@plt+0x2524>
   1351c:	ldr	r1, [r4, #16]
   13520:	mov	r0, r4
   13524:	bl	11078 <XFilterEvent@plt>
   13528:	ldr	r3, [pc, #456]	; 136f8 <XRRGetOutputInfo@plt+0x265c>
   1352c:	ldr	r2, [pc, #456]	; 136fc <XRRGetOutputInfo@plt+0x2660>
   13530:	ldr	r1, [pc, #456]	; 13700 <XRRGetOutputInfo@plt+0x2664>
   13534:	cmp	r0, #0
   13538:	movne	r2, r3
   1353c:	mov	r0, #1
   13540:	bl	1100c <__printf_chk@plt>
   13544:	ldr	r2, [sp, #300]	; 0x12c
   13548:	ldr	r3, [sl]
   1354c:	cmp	r2, r3
   13550:	bne	136d4 <XRRGetOutputInfo@plt+0x2638>
   13554:	add	sp, sp, #308	; 0x134
   13558:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1355c:	mov	r3, #0
   13560:	mov	r2, #256	; 0x100
   13564:	ldr	r1, [pc, #388]	; 136f0 <XRRGetOutputInfo@plt+0x2654>
   13568:	mov	r0, #1
   1356c:	strb	r3, [sp, #296]	; 0x128
   13570:	mov	r8, #256	; 0x100
   13574:	bl	1100c <__printf_chk@plt>
   13578:	b	134f4 <XRRGetOutputInfo@plt+0x2458>
   1357c:	mov	r2, fp
   13580:	ldr	r1, [pc, #380]	; 13704 <XRRGetOutputInfo@plt+0x2668>
   13584:	mov	r0, #1
   13588:	bl	1100c <__printf_chk@plt>
   1358c:	cmp	r8, #0
   13590:	bge	134c4 <XRRGetOutputInfo@plt+0x2428>
   13594:	mov	r3, #0
   13598:	mov	r2, r3
   1359c:	ldr	r1, [pc, #332]	; 136f0 <XRRGetOutputInfo@plt+0x2654>
   135a0:	mov	r0, #1
   135a4:	strb	r3, [sp, #40]	; 0x28
   135a8:	bl	1100c <__printf_chk@plt>
   135ac:	mov	r0, #10
   135b0:	bl	10fd0 <putchar@plt>
   135b4:	ldr	r3, [r4]
   135b8:	cmp	r3, #2
   135bc:	bne	1351c <XRRGetOutputInfo@plt+0x2480>
   135c0:	ldr	r3, [r7, #4]
   135c4:	cmp	r3, #0
   135c8:	beq	1351c <XRRGetOutputInfo@plt+0x2480>
   135cc:	mov	r2, r5
   135d0:	ldr	r1, [pc, #304]	; 13708 <XRRGetOutputInfo@plt+0x266c>
   135d4:	mov	r0, #1
   135d8:	bl	1100c <__printf_chk@plt>
   135dc:	cmp	r5, #0
   135e0:	ble	136c8 <XRRGetOutputInfo@plt+0x262c>
   135e4:	mov	r1, r5
   135e8:	ldr	r0, [r7]
   135ec:	bl	12ed4 <XRRGetOutputInfo@plt+0x1e38>
   135f0:	ldr	r2, [r7]
   135f4:	ldr	r1, [pc, #248]	; 136f4 <XRRGetOutputInfo@plt+0x2658>
   135f8:	mov	r0, #1
   135fc:	bl	1100c <__printf_chk@plt>
   13600:	b	1351c <XRRGetOutputInfo@plt+0x2480>
   13604:	ldr	r0, [r7, #4]
   13608:	cmp	r0, r5
   1360c:	moveq	r5, r0
   13610:	beq	1342c <XRRGetOutputInfo@plt+0x2390>
   13614:	ldr	r3, [sp, #24]
   13618:	ldr	r2, [r7]
   1361c:	mov	r6, r5
   13620:	ldr	r3, [r3, #76]	; 0x4c
   13624:	add	fp, sp, #36	; 0x24
   13628:	sub	r3, r3, #1
   1362c:	stm	sp, {r9, fp}
   13630:	mov	r1, r4
   13634:	bl	10ed4 <XmbLookupString@plt>
   13638:	mov	r5, r0
   1363c:	ldr	r0, [r7]
   13640:	strb	r6, [r0, r5]
   13644:	ldr	r3, [sp, #36]	; 0x24
   13648:	cmn	r3, #1
   1364c:	bne	1342c <XRRGetOutputInfo@plt+0x2390>
   13650:	ldr	r2, [sp, #24]
   13654:	add	r3, r5, #1
   13658:	mov	r1, r3
   1365c:	str	r3, [r2, #76]	; 0x4c
   13660:	str	r3, [sp, #28]
   13664:	bl	10eec <realloc@plt>
   13668:	ldr	r1, [sp, #36]	; 0x24
   1366c:	cmn	r1, #1
   13670:	mov	r2, r0
   13674:	str	r0, [r7]
   13678:	bne	1342c <XRRGetOutputInfo@plt+0x2390>
   1367c:	ldr	r0, [r7, #4]
   13680:	ldr	r3, [sp, #28]
   13684:	b	13628 <XRRGetOutputInfo@plt+0x258c>
   13688:	mov	r0, r6
   1368c:	bl	11084 <XKeysymToString@plt>
   13690:	ldr	r3, [pc, #116]	; 1370c <XRRGetOutputInfo@plt+0x2670>
   13694:	ldr	r9, [pc, #116]	; 13710 <XRRGetOutputInfo@plt+0x2674>
   13698:	ldr	r1, [sp, #32]
   1369c:	mov	r6, #1
   136a0:	cmp	r0, #0
   136a4:	movne	r9, r0
   136a8:	ldr	r0, [r3]
   136ac:	bl	10f7c <XKeysymToKeycode@plt>
   136b0:	mov	fp, r0
   136b4:	b	13440 <XRRGetOutputInfo@plt+0x23a4>
   136b8:	ldr	r0, [r3, #76]	; 0x4c
   136bc:	bl	10f1c <malloc@plt>
   136c0:	str	r0, [r7]
   136c4:	b	133fc <XRRGetOutputInfo@plt+0x2360>
   136c8:	mov	r0, #10
   136cc:	bl	10fd0 <putchar@plt>
   136d0:	b	1351c <XRRGetOutputInfo@plt+0x2480>
   136d4:	bl	10ec8 <__stack_chk_fail@plt>
   136d8:	strdeq	r5, [r2], -r8
   136dc:	andeq	r6, r2, ip, asr #2
   136e0:	andeq	r6, r2, ip, ror #1
   136e4:	andeq	r3, r1, r0, asr #24
   136e8:	andeq	r3, r1, r8, lsr sl
   136ec:	andeq	r3, r1, ip, asr ip
   136f0:	andeq	r3, r1, r8, asr #25
   136f4:	andeq	r3, r1, ip, ror #25
   136f8:	andeq	r3, r1, ip, asr #24
   136fc:	andeq	r3, r1, r4, asr ip
   13700:	andeq	r3, r1, ip, lsl sp
   13704:	muleq	r1, ip, ip
   13708:	strdeq	r3, [r1], -r4
   1370c:	andeq	r6, r2, r8, asr r1
   13710:	andeq	r3, r1, r4, lsr ip
   13714:	cmp	r0, #5
   13718:	ldrls	pc, [pc, r0, lsl #2]
   1371c:	b	13780 <XRRGetOutputInfo@plt+0x26e4>
   13720:	andeq	r3, r1, r4, asr #14
   13724:	andeq	r3, r1, r0, asr r7
   13728:	andeq	r3, r1, ip, asr r7
   1372c:	andeq	r3, r1, r8, ror #14
   13730:	andeq	r3, r1, r4, ror r7
   13734:	andeq	r3, r1, r8, lsr r7
   13738:	ldr	r1, [pc, #80]	; 13790 <XRRGetOutputInfo@plt+0x26f4>
   1373c:	mov	r0, #1
   13740:	b	1100c <__printf_chk@plt>
   13744:	ldr	r1, [pc, #72]	; 13794 <XRRGetOutputInfo@plt+0x26f8>
   13748:	mov	r0, #1
   1374c:	b	1100c <__printf_chk@plt>
   13750:	ldr	r1, [pc, #64]	; 13798 <XRRGetOutputInfo@plt+0x26fc>
   13754:	mov	r0, #1
   13758:	b	1100c <__printf_chk@plt>
   1375c:	ldr	r1, [pc, #56]	; 1379c <XRRGetOutputInfo@plt+0x2700>
   13760:	mov	r0, #1
   13764:	b	1100c <__printf_chk@plt>
   13768:	ldr	r1, [pc, #48]	; 137a0 <XRRGetOutputInfo@plt+0x2704>
   1376c:	mov	r0, #1
   13770:	b	1100c <__printf_chk@plt>
   13774:	ldr	r1, [pc, #40]	; 137a4 <XRRGetOutputInfo@plt+0x2708>
   13778:	mov	r0, #1
   1377c:	b	1100c <__printf_chk@plt>
   13780:	mov	r2, r0
   13784:	ldr	r1, [pc, #28]	; 137a8 <XRRGetOutputInfo@plt+0x270c>
   13788:	mov	r0, #1
   1378c:	b	1100c <__printf_chk@plt>
   13790:	andeq	r3, r1, r4, lsr #27
   13794:	andeq	r3, r1, ip, lsr sp
   13798:	andeq	r3, r1, ip, asr #26
   1379c:	andeq	r3, r1, r4, ror #26
   137a0:	andeq	r3, r1, ip, ror sp
   137a4:	muleq	r1, r0, sp
   137a8:	andeq	r3, r1, r0, lsl ip
   137ac:	push	{r4, r5, r6, r7, r8, lr}
   137b0:	sub	sp, sp, #168	; 0xa8
   137b4:	ldr	r7, [pc, #220]	; 13898 <XRRGetOutputInfo@plt+0x27fc>
   137b8:	mov	r6, r0
   137bc:	mov	r8, r1
   137c0:	ldr	r3, [r7]
   137c4:	ldr	r1, [pc, #208]	; 1389c <XRRGetOutputInfo@plt+0x2800>
   137c8:	add	r0, sp, #8
   137cc:	mov	r2, #156	; 0x9c
   137d0:	str	r3, [sp, #164]	; 0xa4
   137d4:	bl	10e80 <memcpy@plt>
   137d8:	ldr	r1, [sp, #8]
   137dc:	cmp	r1, #0
   137e0:	beq	13864 <XRRGetOutputInfo@plt+0x27c8>
   137e4:	add	r5, sp, #8
   137e8:	mov	r4, #0
   137ec:	cmp	r6, #0
   137f0:	beq	13840 <XRRGetOutputInfo@plt+0x27a4>
   137f4:	mov	r0, r6
   137f8:	bl	10e38 <strcmp@plt>
   137fc:	cmp	r0, #0
   13800:	bne	13854 <XRRGetOutputInfo@plt+0x27b8>
   13804:	add	r4, r4, r4, lsl #1
   13808:	add	r3, sp, #168	; 0xa8
   1380c:	add	r4, r3, r4, lsl #2
   13810:	mov	r0, #1
   13814:	ldr	r2, [r4, #-156]	; 0xffffff64
   13818:	ldr	r1, [r4, #-152]	; 0xffffff68
   1381c:	ldr	r3, [r8, r2, lsl #2]
   13820:	orr	r3, r3, r1
   13824:	str	r3, [r8, r2, lsl #2]
   13828:	ldr	r2, [sp, #164]	; 0xa4
   1382c:	ldr	r3, [r7]
   13830:	cmp	r2, r3
   13834:	bne	13894 <XRRGetOutputInfo@plt+0x27f8>
   13838:	add	sp, sp, #168	; 0xa8
   1383c:	pop	{r4, r5, r6, r7, r8, pc}
   13840:	ldr	r2, [r5, #4]
   13844:	ldr	r1, [r5, #8]
   13848:	ldr	r3, [r8, r2, lsl #2]
   1384c:	orr	r3, r3, r1
   13850:	str	r3, [r8, r2, lsl #2]
   13854:	ldr	r1, [r5, #12]!
   13858:	add	r4, r4, #1
   1385c:	cmp	r1, #0
   13860:	bne	137ec <XRRGetOutputInfo@plt+0x2750>
   13864:	cmp	r6, #0
   13868:	beq	1388c <XRRGetOutputInfo@plt+0x27f0>
   1386c:	ldr	r2, [pc, #44]	; 138a0 <XRRGetOutputInfo@plt+0x2804>
   13870:	ldr	r3, [pc, #44]	; 138a4 <XRRGetOutputInfo@plt+0x2808>
   13874:	str	r6, [sp]
   13878:	mov	r1, #1
   1387c:	ldr	r0, [r2]
   13880:	ldr	r3, [r3]
   13884:	ldr	r2, [pc, #28]	; 138a8 <XRRGetOutputInfo@plt+0x280c>
   13888:	bl	11024 <__fprintf_chk@plt>
   1388c:	mov	r0, #0
   13890:	b	13828 <XRRGetOutputInfo@plt+0x278c>
   13894:	bl	10ec8 <__stack_chk_fail@plt>
   13898:	strdeq	r5, [r2], -r8
   1389c:	andeq	r3, r1, ip, lsl r9
   138a0:	andeq	r6, r2, r0, asr #2
   138a4:	andeq	r6, r2, ip, ror #2
   138a8:			; <UNDEFINED> instruction: 0x00013db4
   138ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   138b0:	mov	r7, r0
   138b4:	ldr	r6, [pc, #72]	; 13904 <XRRGetOutputInfo@plt+0x2868>
   138b8:	ldr	r5, [pc, #72]	; 13908 <XRRGetOutputInfo@plt+0x286c>
   138bc:	add	r6, pc, r6
   138c0:	add	r5, pc, r5
   138c4:	sub	r6, r6, r5
   138c8:	mov	r8, r1
   138cc:	mov	r9, r2
   138d0:	bl	10e0c <_init@@Base>
   138d4:	asrs	r6, r6, #2
   138d8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   138dc:	mov	r4, #0
   138e0:	add	r4, r4, #1
   138e4:	ldr	r3, [r5], #4
   138e8:	mov	r2, r9
   138ec:	mov	r1, r8
   138f0:	mov	r0, r7
   138f4:	blx	r3
   138f8:	cmp	r6, r4
   138fc:	bne	138e0 <XRRGetOutputInfo@plt+0x2844>
   13900:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13904:	andeq	r2, r1, r0, lsr r6
   13908:	andeq	r2, r1, r8, lsr #12
   1390c:	bx	lr

Disassembly of section .fini:

00013910 <_fini@@Base>:
   13910:	push	{r3, lr}
   13914:	pop	{r3, pc}
