
raspbian-preinstalled/scanimage:     file format elf32-littlearm


Disassembly of section .init:

000113d8 <.init>:
   113d8:	push	{r3, lr}
   113dc:	bl	13bd4 <fputs@plt+0x2404>
   113e0:	pop	{r3, pc}

Disassembly of section .plt:

000113e4 <fileno@plt-0x14>:
   113e4:	push	{lr}		; (str lr, [sp, #-4]!)
   113e8:	ldr	lr, [pc, #4]	; 113f4 <fileno@plt-0x4>
   113ec:	add	lr, pc, lr
   113f0:	ldr	pc, [lr, #8]!
   113f4:			; <UNDEFINED> instruction: 0x00018ab0

000113f8 <fileno@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #24, 20	; 0x18000
   11400:	ldr	pc, [ip, #2736]!	; 0xab0

00011404 <abort@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #24, 20	; 0x18000
   1140c:	ldr	pc, [ip, #2728]!	; 0xaa8

00011410 <sane_read@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #24, 20	; 0x18000
   11418:	ldr	pc, [ip, #2720]!	; 0xaa0

0001141c <__xstat@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #24, 20	; 0x18000
   11424:	ldr	pc, [ip, #2712]!	; 0xa98

00011428 <__libc_start_main@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #24, 20	; 0x18000
   11430:	ldr	pc, [ip, #2704]!	; 0xa90

00011434 <sane_get_devices@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #24, 20	; 0x18000
   1143c:	ldr	pc, [ip, #2696]!	; 0xa88

00011440 <signal@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #24, 20	; 0x18000
   11448:	ldr	pc, [ip, #2688]!	; 0xa80

0001144c <sane_strstatus@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #24, 20	; 0x18000
   11454:	ldr	pc, [ip, #2680]!	; 0xa78

00011458 <__gmon_start__@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #24, 20	; 0x18000
   11460:	ldr	pc, [ip, #2672]!	; 0xa70

00011464 <png_write_end@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #24, 20	; 0x18000
   1146c:	ldr	pc, [ip, #2664]!	; 0xa68

00011470 <rewind@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #24, 20	; 0x18000
   11478:	ldr	pc, [ip, #2656]!	; 0xa60

0001147c <rename@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #24, 20	; 0x18000
   11484:	ldr	pc, [ip, #2648]!	; 0xa58

00011488 <strncpy@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #24, 20	; 0x18000
   11490:	ldr	pc, [ip, #2640]!	; 0xa50

00011494 <fclose@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #24, 20	; 0x18000
   1149c:	ldr	pc, [ip, #2632]!	; 0xa48

000114a0 <getpass@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #24, 20	; 0x18000
   114a8:	ldr	pc, [ip, #2624]!	; 0xa40

000114ac <fgets@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #24, 20	; 0x18000
   114b4:	ldr	pc, [ip, #2616]!	; 0xa38

000114b8 <getenv@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #24, 20	; 0x18000
   114c0:	ldr	pc, [ip, #2608]!	; 0xa30

000114c4 <__printf_chk@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #24, 20	; 0x18000
   114cc:	ldr	pc, [ip, #2600]!	; 0xa28

000114d0 <strtod@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #24, 20	; 0x18000
   114d8:	ldr	pc, [ip, #2592]!	; 0xa20

000114dc <strchr@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #24, 20	; 0x18000
   114e4:	ldr	pc, [ip, #2584]!	; 0xa18

000114e8 <stpcpy@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #24, 20	; 0x18000
   114f0:	ldr	pc, [ip, #2576]!	; 0xa10

000114f4 <fopen@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #24, 20	; 0x18000
   114fc:	ldr	pc, [ip, #2568]!	; 0xa08

00011500 <memset@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #24, 20	; 0x18000
   11508:	ldr	pc, [ip, #2560]!	; 0xa00

0001150c <jpeg_set_quality@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #24, 20	; 0x18000
   11514:	ldr	pc, [ip, #2552]!	; 0x9f8

00011518 <strrchr@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #24, 20	; 0x18000
   11520:	ldr	pc, [ip, #2544]!	; 0x9f0

00011524 <jpeg_destroy_compress@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #24, 20	; 0x18000
   1152c:	ldr	pc, [ip, #2536]!	; 0x9e8

00011530 <__assert_fail@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #24, 20	; 0x18000
   11538:	ldr	pc, [ip, #2528]!	; 0x9e0

0001153c <sane_open@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #24, 20	; 0x18000
   11544:	ldr	pc, [ip, #2520]!	; 0x9d8

00011548 <sane_cancel@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #24, 20	; 0x18000
   11550:	ldr	pc, [ip, #2512]!	; 0x9d0

00011554 <_exit@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #24, 20	; 0x18000
   1155c:	ldr	pc, [ip, #2504]!	; 0x9c8

00011560 <free@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #24, 20	; 0x18000
   11568:	ldr	pc, [ip, #2496]!	; 0x9c0

0001156c <jpeg_start_compress@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #24, 20	; 0x18000
   11574:	ldr	pc, [ip, #2488]!	; 0x9b8

00011578 <getopt_long@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #24, 20	; 0x18000
   11580:	ldr	pc, [ip, #2480]!	; 0x9b0

00011584 <fflush@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #24, 20	; 0x18000
   1158c:	ldr	pc, [ip, #2472]!	; 0x9a8

00011590 <png_write_row@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #24, 20	; 0x18000
   11598:	ldr	pc, [ip, #2464]!	; 0x9a0

0001159c <sane_start@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #24, 20	; 0x18000
   115a4:	ldr	pc, [ip, #2456]!	; 0x998

000115a8 <isatty@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #24, 20	; 0x18000
   115b0:	ldr	pc, [ip, #2448]!	; 0x990

000115b4 <strlen@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #24, 20	; 0x18000
   115bc:	ldr	pc, [ip, #2440]!	; 0x988

000115c0 <unlink@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #24, 20	; 0x18000
   115c8:	ldr	pc, [ip, #2432]!	; 0x980

000115cc <memcpy@plt>:
   115cc:	add	ip, pc, #0, 12
   115d0:	add	ip, ip, #24, 20	; 0x18000
   115d4:	ldr	pc, [ip, #2424]!	; 0x978

000115d8 <fgetc@plt>:
   115d8:	add	ip, pc, #0, 12
   115dc:	add	ip, ip, #24, 20	; 0x18000
   115e0:	ldr	pc, [ip, #2416]!	; 0x970

000115e4 <png_create_info_struct@plt>:
   115e4:	add	ip, pc, #0, 12
   115e8:	add	ip, ip, #24, 20	; 0x18000
   115ec:	ldr	pc, [ip, #2408]!	; 0x968

000115f0 <strtol@plt>:
   115f0:	add	ip, pc, #0, 12
   115f4:	add	ip, ip, #24, 20	; 0x18000
   115f8:	ldr	pc, [ip, #2400]!	; 0x960

000115fc <raise@plt>:
   115fc:	add	ip, pc, #0, 12
   11600:	add	ip, ip, #24, 20	; 0x18000
   11604:	ldr	pc, [ip, #2392]!	; 0x958

00011608 <jpeg_CreateCompress@plt>:
   11608:	add	ip, pc, #0, 12
   1160c:	add	ip, ip, #24, 20	; 0x18000
   11610:	ldr	pc, [ip, #2384]!	; 0x950

00011614 <sane_exit@plt>:
   11614:	add	ip, pc, #0, 12
   11618:	add	ip, ip, #24, 20	; 0x18000
   1161c:	ldr	pc, [ip, #2376]!	; 0x948

00011620 <strstr@plt>:
   11620:	add	ip, pc, #0, 12
   11624:	add	ip, ip, #24, 20	; 0x18000
   11628:	ldr	pc, [ip, #2368]!	; 0x940

0001162c <png_set_pHYs@plt>:
   1162c:	add	ip, pc, #0, 12
   11630:	add	ip, ip, #24, 20	; 0x18000
   11634:	ldr	pc, [ip, #2360]!	; 0x938

00011638 <fwrite@plt>:
   11638:	add	ip, pc, #0, 12
   1163c:	add	ip, ip, #24, 20	; 0x18000
   11640:	ldr	pc, [ip, #2352]!	; 0x930

00011644 <__stpcpy_chk@plt>:
   11644:	add	ip, pc, #0, 12
   11648:	add	ip, ip, #24, 20	; 0x18000
   1164c:	ldr	pc, [ip, #2344]!	; 0x928

00011650 <strncasecmp@plt>:
   11650:	add	ip, pc, #0, 12
   11654:	add	ip, ip, #24, 20	; 0x18000
   11658:	ldr	pc, [ip, #2336]!	; 0x920

0001165c <sane_get_parameters@plt>:
   1165c:	add	ip, pc, #0, 12
   11660:	add	ip, ip, #24, 20	; 0x18000
   11664:	ldr	pc, [ip, #2328]!	; 0x918

00011668 <malloc@plt>:
   11668:	add	ip, pc, #0, 12
   1166c:	add	ip, ip, #24, 20	; 0x18000
   11670:	ldr	pc, [ip, #2320]!	; 0x910

00011674 <__stack_chk_fail@plt>:
   11674:	add	ip, pc, #0, 12
   11678:	add	ip, ip, #24, 20	; 0x18000
   1167c:	ldr	pc, [ip, #2312]!	; 0x908

00011680 <__fprintf_chk@plt>:
   11680:	add	ip, pc, #0, 12
   11684:	add	ip, ip, #24, 20	; 0x18000
   11688:	ldr	pc, [ip, #2304]!	; 0x900

0001168c <fputc@plt>:
   1168c:	add	ip, pc, #0, 12
   11690:	add	ip, ip, #24, 20	; 0x18000
   11694:	ldr	pc, [ip, #2296]!	; 0x8f8

00011698 <png_write_info@plt>:
   11698:	add	ip, pc, #0, 12
   1169c:	add	ip, ip, #24, 20	; 0x18000
   116a0:	ldr	pc, [ip, #2288]!	; 0x8f0

000116a4 <jpeg_set_defaults@plt>:
   116a4:	add	ip, pc, #0, 12
   116a8:	add	ip, ip, #24, 20	; 0x18000
   116ac:	ldr	pc, [ip, #2280]!	; 0x8e8

000116b0 <sane_close@plt>:
   116b0:	add	ip, pc, #0, 12
   116b4:	add	ip, ip, #24, 20	; 0x18000
   116b8:	ldr	pc, [ip, #2272]!	; 0x8e0

000116bc <sane_get_option_descriptor@plt>:
   116bc:	add	ip, pc, #0, 12
   116c0:	add	ip, ip, #24, 20	; 0x18000
   116c4:	ldr	pc, [ip, #2264]!	; 0x8d8

000116c8 <png_init_io@plt>:
   116c8:	add	ip, pc, #0, 12
   116cc:	add	ip, ip, #24, 20	; 0x18000
   116d0:	ldr	pc, [ip, #2256]!	; 0x8d0

000116d4 <puts@plt>:
   116d4:	add	ip, pc, #0, 12
   116d8:	add	ip, ip, #24, 20	; 0x18000
   116dc:	ldr	pc, [ip, #2248]!	; 0x8c8

000116e0 <sane_control_option@plt>:
   116e0:	add	ip, pc, #0, 12
   116e4:	add	ip, ip, #24, 20	; 0x18000
   116e8:	ldr	pc, [ip, #2240]!	; 0x8c0

000116ec <md5_buffer@plt>:
   116ec:	add	ip, pc, #0, 12
   116f0:	add	ip, ip, #24, 20	; 0x18000
   116f4:	ldr	pc, [ip, #2232]!	; 0x8b8

000116f8 <__fxstat@plt>:
   116f8:	add	ip, pc, #0, 12
   116fc:	add	ip, ip, #24, 20	; 0x18000
   11700:	ldr	pc, [ip, #2224]!	; 0x8b0

00011704 <jpeg_stdio_dest@plt>:
   11704:	add	ip, pc, #0, 12
   11708:	add	ip, ip, #24, 20	; 0x18000
   1170c:	ldr	pc, [ip, #2216]!	; 0x8a8

00011710 <putc@plt>:
   11710:	add	ip, pc, #0, 12
   11714:	add	ip, ip, #24, 20	; 0x18000
   11718:	ldr	pc, [ip, #2208]!	; 0x8a0

0001171c <png_destroy_write_struct@plt>:
   1171c:	add	ip, pc, #0, 12
   11720:	add	ip, ip, #24, 20	; 0x18000
   11724:	ldr	pc, [ip, #2200]!	; 0x898

00011728 <jpeg_write_scanlines@plt>:
   11728:	add	ip, pc, #0, 12
   1172c:	add	ip, ip, #24, 20	; 0x18000
   11730:	ldr	pc, [ip, #2192]!	; 0x890

00011734 <png_set_IHDR@plt>:
   11734:	add	ip, pc, #0, 12
   11738:	add	ip, ip, #24, 20	; 0x18000
   1173c:	ldr	pc, [ip, #2184]!	; 0x888

00011740 <__sprintf_chk@plt>:
   11740:	add	ip, pc, #0, 12
   11744:	add	ip, ip, #24, 20	; 0x18000
   11748:	ldr	pc, [ip, #2176]!	; 0x880

0001174c <fread@plt>:
   1174c:	add	ip, pc, #0, 12
   11750:	add	ip, ip, #24, 20	; 0x18000
   11754:	ldr	pc, [ip, #2168]!	; 0x878

00011758 <strncmp@plt>:
   11758:	add	ip, pc, #0, 12
   1175c:	add	ip, ip, #24, 20	; 0x18000
   11760:	ldr	pc, [ip, #2160]!	; 0x870

00011764 <realloc@plt>:
   11764:	add	ip, pc, #0, 12
   11768:	add	ip, ip, #24, 20	; 0x18000
   1176c:	ldr	pc, [ip, #2152]!	; 0x868

00011770 <png_create_write_struct@plt>:
   11770:	add	ip, pc, #0, 12
   11774:	add	ip, ip, #24, 20	; 0x18000
   11778:	ldr	pc, [ip, #2144]!	; 0x860

0001177c <strcmp@plt>:
   1177c:	add	ip, pc, #0, 12
   11780:	add	ip, ip, #24, 20	; 0x18000
   11784:	ldr	pc, [ip, #2136]!	; 0x858

00011788 <exit@plt>:
   11788:	add	ip, pc, #0, 12
   1178c:	add	ip, ip, #24, 20	; 0x18000
   11790:	ldr	pc, [ip, #2128]!	; 0x850

00011794 <png_set_iCCP@plt>:
   11794:	add	ip, pc, #0, 12
   11798:	add	ip, ip, #24, 20	; 0x18000
   1179c:	ldr	pc, [ip, #2120]!	; 0x848

000117a0 <basename@plt>:
   117a0:	add	ip, pc, #0, 12
   117a4:	add	ip, ip, #24, 20	; 0x18000
   117a8:	ldr	pc, [ip, #2112]!	; 0x840

000117ac <jpeg_std_error@plt>:
   117ac:	add	ip, pc, #0, 12
   117b0:	add	ip, ip, #24, 20	; 0x18000
   117b4:	ldr	pc, [ip, #2104]!	; 0x838

000117b8 <sane_init@plt>:
   117b8:	add	ip, pc, #0, 12
   117bc:	add	ip, ip, #24, 20	; 0x18000
   117c0:	ldr	pc, [ip, #2096]!	; 0x830

000117c4 <jpeg_finish_compress@plt>:
   117c4:	add	ip, pc, #0, 12
   117c8:	add	ip, ip, #24, 20	; 0x18000
   117cc:	ldr	pc, [ip, #2088]!	; 0x828

000117d0 <fputs@plt>:
   117d0:	add	ip, pc, #0, 12
   117d4:	add	ip, ip, #24, 20	; 0x18000
   117d8:	ldr	pc, [ip, #2080]!	; 0x820

Disassembly of section .text:

000117e0 <.text>:
   117e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117e4:	vpush	{d8-d9}
   117e8:	ldr	r3, [pc, #3852]	; 126fc <fputs@plt+0xf2c>
   117ec:	ldr	r4, [r1]
   117f0:	mov	r5, r1
   117f4:	sub	sp, sp, #8896	; 0x22c0
   117f8:	sub	sp, sp, #12
   117fc:	add	r1, sp, #8896	; 0x22c0
   11800:	ldr	r3, [r3]
   11804:	ldr	fp, [pc, #3628]	; 12638 <fputs@plt+0xe68>
   11808:	add	r1, r1, #4
   1180c:	mov	r2, #32768	; 0x8000
   11810:	str	r3, [r1]
   11814:	mov	r6, r0
   11818:	mov	r3, #0
   1181c:	mov	r1, #47	; 0x2f
   11820:	mov	r0, r4
   11824:	str	r3, [sp, #124]	; 0x7c
   11828:	str	r2, [fp, #216]	; 0xd8
   1182c:	bl	11518 <strrchr@plt>
   11830:	add	r7, sp, #116	; 0x74
   11834:	ldr	r9, [pc, #3584]	; 1263c <fputs@plt+0xe6c>
   11838:	ldr	r8, [pc, #3584]	; 12640 <fputs@plt+0xe70>
   1183c:	ldr	sl, [pc, #3584]	; 12644 <fputs@plt+0xe74>
   11840:	cmp	r0, #0
   11844:	addne	r4, r0, #1
   11848:	ldr	r0, [pc, #3576]	; 12648 <fputs@plt+0xe78>
   1184c:	str	r4, [fp, #8]
   11850:	bl	114b8 <getenv@plt>
   11854:	ldr	r1, [pc, #3568]	; 1264c <fputs@plt+0xe7c>
   11858:	str	r0, [sp, #32]
   1185c:	add	r0, sp, #128	; 0x80
   11860:	bl	117b8 <sane_init@plt>
   11864:	ldr	r0, [pc, #3556]	; 12650 <fputs@plt+0xe80>
   11868:	mov	r3, #0
   1186c:	mov	r1, #1
   11870:	str	r3, [sp, #84]	; 0x54
   11874:	str	r3, [r0]
   11878:	str	r3, [sp, #68]	; 0x44
   1187c:	str	r3, [sp, #44]	; 0x2c
   11880:	str	r3, [sp, #88]	; 0x58
   11884:	str	r3, [sp, #28]
   11888:	mvn	r3, #0
   1188c:	str	r1, [sp, #48]	; 0x30
   11890:	str	r1, [sp, #104]	; 0x68
   11894:	str	r3, [sp, #52]	; 0x34
   11898:	b	118b8 <fputs@plt+0xe8>
   1189c:	cmp	r0, #1004	; 0x3ec
   118a0:	beq	11b78 <fputs@plt+0x3a8>
   118a4:	sub	r3, r3, #1
   118a8:	ldr	r2, [sp, #48]	; 0x30
   118ac:	cmp	r0, r3
   118b0:	moveq	r2, #2
   118b4:	str	r2, [sp, #48]	; 0x30
   118b8:	str	r7, [sp]
   118bc:	mov	r3, r9
   118c0:	mov	r2, r8
   118c4:	mov	r1, r5
   118c8:	mov	r0, r6
   118cc:	bl	11578 <getopt_long@plt>
   118d0:	cmn	r0, #1
   118d4:	beq	11d74 <fputs@plt+0x5a4>
   118d8:	cmp	r0, #110	; 0x6e
   118dc:	beq	11b6c <fputs@plt+0x39c>
   118e0:	ble	11954 <fputs@plt+0x184>
   118e4:	cmp	r0, sl
   118e8:	beq	11bc0 <fputs@plt+0x3f0>
   118ec:	ble	11928 <fputs@plt+0x158>
   118f0:	ldr	r3, [pc, #3420]	; 12654 <fputs@plt+0xe84>
   118f4:	cmp	r0, r3
   118f8:	beq	11b94 <fputs@plt+0x3c4>
   118fc:	ble	1189c <fputs@plt+0xcc>
   11900:	ldr	r3, [pc, #3408]	; 12658 <fputs@plt+0xe88>
   11904:	cmp	r0, r3
   11908:	moveq	r3, #1
   1190c:	streq	r3, [sp, #84]	; 0x54
   11910:	beq	118b8 <fputs@plt+0xe8>
   11914:	ldr	r3, [sp, #68]	; 0x44
   11918:	cmp	r0, #1008	; 0x3f0
   1191c:	moveq	r3, #1
   11920:	str	r3, [sp, #68]	; 0x44
   11924:	b	118b8 <fputs@plt+0xe8>
   11928:	cmp	r0, #118	; 0x76
   1192c:	beq	11bb0 <fputs@plt+0x3e0>
   11930:	ble	11988 <fputs@plt+0x1b8>
   11934:	ldr	r3, [pc, #3360]	; 1265c <fputs@plt+0xe8c>
   11938:	cmp	r0, r3
   1193c:	beq	11be4 <fputs@plt+0x414>
   11940:	add	r3, r3, #1
   11944:	cmp	r0, r3
   11948:	moveq	r3, #1
   1194c:	streq	r3, [fp, #4]
   11950:	b	118b8 <fputs@plt+0xe8>
   11954:	cmp	r0, #86	; 0x56
   11958:	beq	136c8 <fputs@plt+0x1ef8>
   1195c:	ble	119bc <fputs@plt+0x1ec>
   11960:	cmp	r0, #102	; 0x66
   11964:	beq	11a38 <fputs@plt+0x268>
   11968:	bgt	11998 <fputs@plt+0x1c8>
   1196c:	cmp	r0, #98	; 0x62
   11970:	beq	11a20 <fputs@plt+0x250>
   11974:	cmp	r0, #100	; 0x64
   11978:	ldreq	r3, [pc, #3296]	; 12660 <fputs@plt+0xe90>
   1197c:	ldreq	r3, [r3]
   11980:	streq	r3, [sp, #28]
   11984:	b	118b8 <fputs@plt+0xe8>
   11988:	cmp	r0, #112	; 0x70
   1198c:	moveq	r3, #1
   11990:	streq	r3, [fp, #228]	; 0xe4
   11994:	b	118b8 <fputs@plt+0xe8>
   11998:	cmp	r0, #104	; 0x68
   1199c:	moveq	r3, #1
   119a0:	streq	r3, [fp, #220]	; 0xdc
   119a4:	beq	118b8 <fputs@plt+0xe8>
   119a8:	cmp	r0, #105	; 0x69
   119ac:	ldreq	r3, [pc, #3244]	; 12660 <fputs@plt+0xe90>
   119b0:	ldreq	r3, [r3]
   119b4:	streq	r3, [fp, #224]	; 0xe0
   119b8:	b	118b8 <fputs@plt+0xe8>
   119bc:	cmp	r0, #66	; 0x42
   119c0:	beq	119f0 <fputs@plt+0x220>
   119c4:	ble	119e0 <fputs@plt+0x210>
   119c8:	cmp	r0, #76	; 0x4c
   119cc:	beq	11a38 <fputs@plt+0x268>
   119d0:	cmp	r0, #84	; 0x54
   119d4:	moveq	r3, #1
   119d8:	streq	r3, [fp, #232]	; 0xe8
   119dc:	b	118b8 <fputs@plt+0xe8>
   119e0:	cmp	r0, #65	; 0x41
   119e4:	moveq	r3, #1
   119e8:	streq	r3, [fp, #236]	; 0xec
   119ec:	b	118b8 <fputs@plt+0xe8>
   119f0:	ldr	r3, [pc, #3176]	; 12660 <fputs@plt+0xe90>
   119f4:	ldr	r0, [r3]
   119f8:	cmp	r0, #0
   119fc:	moveq	r3, #1048576	; 0x100000
   11a00:	streq	r3, [fp, #216]	; 0xd8
   11a04:	beq	118b8 <fputs@plt+0xe8>
   11a08:	mov	r2, #10
   11a0c:	mov	r1, #0
   11a10:	bl	115f0 <strtol@plt>
   11a14:	lsl	r0, r0, #10
   11a18:	str	r0, [fp, #216]	; 0xd8
   11a1c:	b	118b8 <fputs@plt+0xe8>
   11a20:	ldr	r3, [pc, #3128]	; 12660 <fputs@plt+0xe90>
   11a24:	mov	r2, #1
   11a28:	str	r2, [sp, #44]	; 0x2c
   11a2c:	ldr	r3, [r3]
   11a30:	str	r3, [sp, #88]	; 0x58
   11a34:	b	118b8 <fputs@plt+0xe8>
   11a38:	mov	r4, r0
   11a3c:	mov	r1, #0
   11a40:	add	r0, sp, #120	; 0x78
   11a44:	bl	11434 <sane_get_devices@plt>
   11a48:	subs	r3, r0, #0
   11a4c:	bne	13278 <fputs@plt+0x1aa8>
   11a50:	ldr	r2, [sp, #120]	; 0x78
   11a54:	cmp	r4, #76	; 0x4c
   11a58:	ldr	r1, [r2]
   11a5c:	beq	13470 <fputs@plt+0x1ca0>
   11a60:	cmp	r1, #0
   11a64:	beq	11c94 <fputs@plt+0x4c4>
   11a68:	ldr	sl, [pc, #3060]	; 12664 <fputs@plt+0xe94>
   11a6c:	ldr	r2, [pc, #3052]	; 12660 <fputs@plt+0xe90>
   11a70:	mov	r9, r3
   11a74:	str	r2, [sp, #28]
   11a78:	str	r4, [sp, #36]	; 0x24
   11a7c:	ldr	r3, [sp, #28]
   11a80:	lsl	r7, r9, #2
   11a84:	ldr	r5, [r3]
   11a88:	ldrb	r3, [r5]
   11a8c:	cmp	r3, #0
   11a90:	beq	11c78 <fputs@plt+0x4a8>
   11a94:	ldr	r8, [pc, #3020]	; 12668 <fputs@plt+0xe98>
   11a98:	b	11b08 <fputs@plt+0x338>
   11a9c:	cmp	r3, #100	; 0x64
   11aa0:	beq	11cc0 <fputs@plt+0x4f0>
   11aa4:	cmp	r3, #105	; 0x69
   11aa8:	beq	11c44 <fputs@plt+0x474>
   11aac:	cmp	r3, #37	; 0x25
   11ab0:	beq	11ad0 <fputs@plt+0x300>
   11ab4:	ldr	r0, [pc, #3312]	; 127ac <fputs@plt+0xfdc>
   11ab8:	str	r3, [sp]
   11abc:	mov	r2, r8
   11ac0:	ldr	r3, [fp, #8]
   11ac4:	mov	r1, #1
   11ac8:	ldr	r0, [r0]
   11acc:	bl	11680 <__fprintf_chk@plt>
   11ad0:	mov	r3, r5
   11ad4:	mov	r2, r6
   11ad8:	mov	r1, sl
   11adc:	mov	r0, #1
   11ae0:	bl	114c4 <__printf_chk@plt>
   11ae4:	ldr	r5, [pc, #2944]	; 1266c <fputs@plt+0xe9c>
   11ae8:	mov	r2, r5
   11aec:	ldr	r1, [pc, #2940]	; 12670 <fputs@plt+0xea0>
   11af0:	mov	r0, #1
   11af4:	bl	114c4 <__printf_chk@plt>
   11af8:	ldrb	r3, [r4, #2]
   11afc:	add	r5, r4, #2
   11b00:	cmp	r3, #0
   11b04:	beq	11c78 <fputs@plt+0x4a8>
   11b08:	mov	r1, #37	; 0x25
   11b0c:	mov	r0, r5
   11b10:	bl	114dc <strchr@plt>
   11b14:	subs	r4, r0, #0
   11b18:	beq	11d54 <fputs@plt+0x584>
   11b1c:	ldrb	r3, [r4, #1]
   11b20:	sub	r6, r4, r5
   11b24:	cmp	r3, #0
   11b28:	beq	11d50 <fputs@plt+0x580>
   11b2c:	cmp	r3, #109	; 0x6d
   11b30:	beq	11ce4 <fputs@plt+0x514>
   11b34:	bls	11a9c <fputs@plt+0x2cc>
   11b38:	cmp	r3, #116	; 0x74
   11b3c:	beq	11d2c <fputs@plt+0x55c>
   11b40:	cmp	r3, #118	; 0x76
   11b44:	beq	11d08 <fputs@plt+0x538>
   11b48:	cmp	r3, #110	; 0x6e
   11b4c:	bne	11ab4 <fputs@plt+0x2e4>
   11b50:	mov	r3, r5
   11b54:	mov	r2, r6
   11b58:	mov	r1, sl
   11b5c:	mov	r0, #1
   11b60:	bl	114c4 <__printf_chk@plt>
   11b64:	ldr	r5, [pc, #2824]	; 12674 <fputs@plt+0xea4>
   11b68:	b	11ae8 <fputs@plt+0x318>
   11b6c:	mov	r3, #1
   11b70:	str	r3, [fp, #240]	; 0xf0
   11b74:	b	118b8 <fputs@plt+0xe8>
   11b78:	ldr	r3, [pc, #2784]	; 12660 <fputs@plt+0xe90>
   11b7c:	mov	r2, #10
   11b80:	mov	r1, #0
   11b84:	ldr	r0, [r3]
   11b88:	bl	115f0 <strtol@plt>
   11b8c:	str	r0, [sp, #104]	; 0x68
   11b90:	b	118b8 <fputs@plt+0xe8>
   11b94:	ldr	r3, [pc, #2756]	; 12660 <fputs@plt+0xe90>
   11b98:	mov	r2, #10
   11b9c:	mov	r1, #0
   11ba0:	ldr	r0, [r3]
   11ba4:	bl	115f0 <strtol@plt>
   11ba8:	str	r0, [sp, #48]	; 0x30
   11bac:	b	118b8 <fputs@plt+0xe8>
   11bb0:	ldr	r3, [fp, #20]
   11bb4:	add	r3, r3, #1
   11bb8:	str	r3, [fp, #20]
   11bbc:	b	118b8 <fputs@plt+0xe8>
   11bc0:	ldr	r3, [pc, #2712]	; 12660 <fputs@plt+0xe90>
   11bc4:	mov	r2, #10
   11bc8:	mov	r1, #0
   11bcc:	ldr	r0, [r3]
   11bd0:	bl	115f0 <strtol@plt>
   11bd4:	mov	r3, #1
   11bd8:	str	r3, [sp, #44]	; 0x2c
   11bdc:	str	r0, [sp, #52]	; 0x34
   11be0:	b	118b8 <fputs@plt+0xe8>
   11be4:	ldr	r3, [pc, #2676]	; 12660 <fputs@plt+0xe90>
   11be8:	ldr	r1, [pc, #2696]	; 12678 <fputs@plt+0xea8>
   11bec:	ldr	r4, [r3]
   11bf0:	mov	r0, r4
   11bf4:	bl	1177c <strcmp@plt>
   11bf8:	cmp	r0, #0
   11bfc:	moveq	r3, #1
   11c00:	streq	r3, [fp, #244]	; 0xf4
   11c04:	beq	118b8 <fputs@plt+0xe8>
   11c08:	ldr	r1, [pc, #2668]	; 1267c <fputs@plt+0xeac>
   11c0c:	mov	r0, r4
   11c10:	bl	1177c <strcmp@plt>
   11c14:	cmp	r0, #0
   11c18:	moveq	r3, #2
   11c1c:	streq	r3, [fp, #244]	; 0xf4
   11c20:	beq	118b8 <fputs@plt+0xe8>
   11c24:	mov	r0, r4
   11c28:	ldr	r1, [pc, #2640]	; 12680 <fputs@plt+0xeb0>
   11c2c:	bl	1177c <strcmp@plt>
   11c30:	cmp	r0, #0
   11c34:	moveq	r3, #3
   11c38:	movne	r3, #0
   11c3c:	str	r3, [fp, #244]	; 0xf4
   11c40:	b	118b8 <fputs@plt+0xe8>
   11c44:	mov	r3, r5
   11c48:	mov	r2, r6
   11c4c:	mov	r1, sl
   11c50:	mov	r0, #1
   11c54:	bl	114c4 <__printf_chk@plt>
   11c58:	mov	r2, r9
   11c5c:	ldr	r1, [pc, #2592]	; 12684 <fputs@plt+0xeb4>
   11c60:	mov	r0, #1
   11c64:	bl	114c4 <__printf_chk@plt>
   11c68:	ldrb	r3, [r4, #2]
   11c6c:	add	r5, r4, #2
   11c70:	cmp	r3, #0
   11c74:	bne	11b08 <fputs@plt+0x338>
   11c78:	ldr	r3, [sp, #120]	; 0x78
   11c7c:	add	r9, r9, #1
   11c80:	add	r7, r3, r7
   11c84:	ldr	r3, [r7, #4]
   11c88:	cmp	r3, #0
   11c8c:	bne	11a7c <fputs@plt+0x2ac>
   11c90:	ldr	r4, [sp, #36]	; 0x24
   11c94:	cmp	r4, #102	; 0x66
   11c98:	bne	132dc <fputs@plt+0x1b0c>
   11c9c:	ldr	r3, [sp, #32]
   11ca0:	cmp	r3, #0
   11ca4:	beq	11cb8 <fputs@plt+0x4e8>
   11ca8:	mov	r2, r3
   11cac:	ldr	r1, [pc, #2516]	; 12688 <fputs@plt+0xeb8>
   11cb0:	mov	r0, #1
   11cb4:	bl	114c4 <__printf_chk@plt>
   11cb8:	mov	r0, #0
   11cbc:	bl	15274 <fputs@plt+0x3aa4>
   11cc0:	ldr	r1, [sp, #120]	; 0x78
   11cc4:	mov	r3, r5
   11cc8:	mov	r2, r6
   11ccc:	ldr	ip, [r1, r7]
   11cd0:	mov	r0, #1
   11cd4:	mov	r1, sl
   11cd8:	ldr	r5, [ip]
   11cdc:	bl	114c4 <__printf_chk@plt>
   11ce0:	b	11ae8 <fputs@plt+0x318>
   11ce4:	ldr	r1, [sp, #120]	; 0x78
   11ce8:	mov	r3, r5
   11cec:	mov	r2, r6
   11cf0:	ldr	ip, [r1, r7]
   11cf4:	mov	r0, #1
   11cf8:	mov	r1, sl
   11cfc:	ldr	r5, [ip, #8]
   11d00:	bl	114c4 <__printf_chk@plt>
   11d04:	b	11ae8 <fputs@plt+0x318>
   11d08:	ldr	r1, [sp, #120]	; 0x78
   11d0c:	mov	r3, r5
   11d10:	mov	r2, r6
   11d14:	ldr	ip, [r1, r7]
   11d18:	mov	r0, #1
   11d1c:	mov	r1, sl
   11d20:	ldr	r5, [ip, #4]
   11d24:	bl	114c4 <__printf_chk@plt>
   11d28:	b	11ae8 <fputs@plt+0x318>
   11d2c:	ldr	r1, [sp, #120]	; 0x78
   11d30:	mov	r3, r5
   11d34:	mov	r2, r6
   11d38:	ldr	ip, [r1, r7]
   11d3c:	mov	r0, #1
   11d40:	mov	r1, sl
   11d44:	ldr	r5, [ip, #12]
   11d48:	bl	114c4 <__printf_chk@plt>
   11d4c:	b	11ae8 <fputs@plt+0x318>
   11d50:	add	r5, r5, #1
   11d54:	ldrb	r3, [r5]
   11d58:	cmp	r3, #0
   11d5c:	beq	11c78 <fputs@plt+0x4a8>
   11d60:	mov	r2, r5
   11d64:	ldr	r1, [pc, #2308]	; 12670 <fputs@plt+0xea0>
   11d68:	mov	r0, #1
   11d6c:	bl	114c4 <__printf_chk@plt>
   11d70:	b	11c78 <fputs@plt+0x4a8>
   11d74:	ldr	r3, [fp, #220]	; 0xdc
   11d78:	cmp	r3, #0
   11d7c:	bne	1342c <fputs@plt+0x1c5c>
   11d80:	ldr	r3, [sp, #28]
   11d84:	cmp	r3, #0
   11d88:	beq	13218 <fputs@plt+0x1a48>
   11d8c:	ldr	r1, [pc, #2212]	; 12638 <fputs@plt+0xe68>
   11d90:	ldr	r0, [sp, #28]
   11d94:	bl	1153c <sane_open@plt>
   11d98:	subs	r4, r0, #0
   11d9c:	bne	13338 <fputs@plt+0x1b68>
   11da0:	ldr	r0, [fp]
   11da4:	cmp	r0, #0
   11da8:	beq	12088 <fputs@plt+0x8b8>
   11dac:	mov	r1, r4
   11db0:	bl	116bc <sane_get_option_descriptor@plt>
   11db4:	cmp	r0, #0
   11db8:	beq	13758 <fputs@plt+0x1f88>
   11dbc:	str	r4, [sp]
   11dc0:	add	r3, sp, #124	; 0x7c
   11dc4:	mov	r2, r4
   11dc8:	mov	r1, r4
   11dcc:	ldr	r0, [fp]
   11dd0:	bl	116e0 <sane_control_option@plt>
   11dd4:	cmp	r0, #0
   11dd8:	bne	13768 <fputs@plt+0x1f98>
   11ddc:	ldr	r0, [sp, #124]	; 0x7c
   11de0:	add	r0, r0, #23
   11de4:	lsl	r0, r0, #4
   11de8:	bl	11668 <malloc@plt>
   11dec:	mov	r4, r0
   11df0:	ldr	r0, [sp, #124]	; 0x7c
   11df4:	str	r4, [fp, #24]
   11df8:	lsl	r0, r0, #2
   11dfc:	bl	11668 <malloc@plt>
   11e00:	cmp	r4, #0
   11e04:	clz	r3, r0
   11e08:	lsr	r3, r3, #5
   11e0c:	moveq	r3, #1
   11e10:	cmp	r3, #0
   11e14:	str	r3, [sp, #64]	; 0x40
   11e18:	str	r0, [fp, #28]
   11e1c:	bne	13778 <fputs@plt+0x1fa8>
   11e20:	ldr	r0, [fp]
   11e24:	bl	15344 <fputs@plt+0x3b74>
   11e28:	ldr	r1, [fp, #40]	; 0x28
   11e2c:	ldr	r3, [pc, #2264]	; 1270c <fputs@plt+0xf3c>
   11e30:	ldr	lr, [fp, #44]	; 0x2c
   11e34:	ldr	ip, [fp, #32]
   11e38:	ldr	r2, [pc, #2124]	; 1268c <fputs@plt+0xebc>
   11e3c:	cmp	r1, #0
   11e40:	moveq	r2, r3
   11e44:	ldr	r4, [fp, #36]	; 0x24
   11e48:	cmp	lr, #0
   11e4c:	ldr	r0, [pc, #2108]	; 12690 <fputs@plt+0xec0>
   11e50:	mov	r8, r2
   11e54:	moveq	r0, r3
   11e58:	str	r2, [sp, #36]	; 0x24
   11e5c:	cmp	ip, #0
   11e60:	ldr	r2, [pc, #2092]	; 12694 <fputs@plt+0xec4>
   11e64:	ldr	r1, [pc, #2092]	; 12698 <fputs@plt+0xec8>
   11e68:	moveq	r1, r3
   11e6c:	cmp	r4, #0
   11e70:	movne	r3, r2
   11e74:	mov	r9, r0
   11e78:	str	r0, [sp, #40]	; 0x28
   11e7c:	mov	r0, r8
   11e80:	mov	sl, r3
   11e84:	mov	r8, r1
   11e88:	str	r1, [sp, #56]	; 0x38
   11e8c:	str	r3, [sp, #60]	; 0x3c
   11e90:	bl	115b4 <strlen@plt>
   11e94:	mov	r4, r0
   11e98:	mov	r0, r9
   11e9c:	bl	115b4 <strlen@plt>
   11ea0:	str	r0, [sp, #32]
   11ea4:	mov	r0, r8
   11ea8:	bl	115b4 <strlen@plt>
   11eac:	ldr	r3, [sp, #32]
   11eb0:	mov	r9, r0
   11eb4:	mov	r0, sl
   11eb8:	add	sl, r4, r3
   11ebc:	bl	115b4 <strlen@plt>
   11ec0:	mov	r3, r0
   11ec4:	str	r0, [sp, #72]	; 0x48
   11ec8:	add	r0, sl, #19
   11ecc:	add	r0, r0, r9
   11ed0:	add	r0, r0, r3
   11ed4:	bl	11668 <malloc@plt>
   11ed8:	subs	r8, r0, #0
   11edc:	beq	13788 <fputs@plt+0x1fb8>
   11ee0:	ldr	lr, [pc, #1972]	; 1269c <fputs@plt+0xecc>
   11ee4:	mov	ip, r8
   11ee8:	ldm	lr!, {r0, r1, r2, r3}
   11eec:	ldr	lr, [lr]
   11ef0:	stmia	ip!, {r0, r1, r2, r3}
   11ef4:	mov	r2, r4
   11ef8:	strh	lr, [ip]
   11efc:	ldr	r1, [sp, #36]	; 0x24
   11f00:	add	r0, r8, #18
   11f04:	bl	115cc <memcpy@plt>
   11f08:	add	r0, r4, #18
   11f0c:	ldr	r2, [sp, #32]
   11f10:	ldr	r1, [sp, #40]	; 0x28
   11f14:	add	r0, r8, r0
   11f18:	bl	115cc <memcpy@plt>
   11f1c:	add	r0, sl, #18
   11f20:	mov	r2, r9
   11f24:	ldr	r1, [sp, #56]	; 0x38
   11f28:	add	r0, r8, r0
   11f2c:	bl	115cc <memcpy@plt>
   11f30:	add	r0, sl, r9
   11f34:	ldr	r3, [sp, #72]	; 0x48
   11f38:	add	r0, r0, #18
   11f3c:	add	r2, r3, #1
   11f40:	add	r0, r8, r0
   11f44:	ldr	r1, [sp, #60]	; 0x3c
   11f48:	bl	115cc <memcpy@plt>
   11f4c:	ldr	r3, [pc, #1868]	; 126a0 <fputs@plt+0xed0>
   11f50:	ldr	r2, [sp, #64]	; 0x40
   11f54:	ldr	r9, [pc, #1796]	; 12660 <fputs@plt+0xe90>
   11f58:	str	r2, [r3]
   11f5c:	ldr	r3, [pc, #1856]	; 126a4 <fputs@plt+0xed4>
   11f60:	mov	sl, #1
   11f64:	sub	r3, r3, #116	; 0x74
   11f68:	str	r3, [sp, #32]
   11f6c:	ldr	r3, [pc, #1756]	; 12650 <fputs@plt+0xe80>
   11f70:	str	sl, [r3]
   11f74:	ldr	r4, [fp, #24]
   11f78:	str	r7, [sp]
   11f7c:	mov	r3, r4
   11f80:	mov	r2, r8
   11f84:	mov	r1, r5
   11f88:	mov	r0, r6
   11f8c:	bl	11578 <getopt_long@plt>
   11f90:	cmn	r0, #1
   11f94:	beq	1218c <fputs@plt+0x9bc>
   11f98:	cmp	r0, #108	; 0x6c
   11f9c:	beq	12004 <fputs@plt+0x834>
   11fa0:	ble	11fd0 <fputs@plt+0x800>
   11fa4:	cmp	r0, #120	; 0x78
   11fa8:	beq	12034 <fputs@plt+0x864>
   11fac:	cmp	r0, #121	; 0x79
   11fb0:	beq	12018 <fputs@plt+0x848>
   11fb4:	cmp	r0, #116	; 0x74
   11fb8:	bne	11f78 <fputs@plt+0x7a8>
   11fbc:	ldr	r2, [r9]
   11fc0:	ldr	r1, [fp, #44]	; 0x2c
   11fc4:	ldr	r0, [fp]
   11fc8:	bl	15ebc <fputs@plt+0x46ec>
   11fcc:	b	11f74 <fputs@plt+0x7a4>
   11fd0:	cmp	r0, #58	; 0x3a
   11fd4:	beq	13270 <fputs@plt+0x1aa0>
   11fd8:	cmp	r0, #63	; 0x3f
   11fdc:	beq	13270 <fputs@plt+0x1aa0>
   11fe0:	cmp	r0, #0
   11fe4:	bne	11f78 <fputs@plt+0x7a8>
   11fe8:	ldr	r1, [sp, #116]	; 0x74
   11fec:	ldr	r3, [fp, #28]
   11ff0:	ldr	r2, [r9]
   11ff4:	ldr	r0, [fp]
   11ff8:	ldr	r1, [r3, r1, lsl #2]
   11ffc:	bl	15ebc <fputs@plt+0x46ec>
   12000:	b	11f74 <fputs@plt+0x7a4>
   12004:	ldr	r2, [r9]
   12008:	ldr	r1, [fp, #40]	; 0x28
   1200c:	ldr	r0, [fp]
   12010:	bl	15ebc <fputs@plt+0x46ec>
   12014:	b	11f74 <fputs@plt+0x7a4>
   12018:	mov	r3, #1
   1201c:	ldr	r2, [pc, #1668]	; 126a8 <fputs@plt+0xed8>
   12020:	ldr	r1, [r9]
   12024:	ldr	r0, [sp, #32]
   12028:	str	sl, [fp, #196]	; 0xc4
   1202c:	bl	157d8 <fputs@plt+0x4008>
   12030:	b	11f74 <fputs@plt+0x7a4>
   12034:	ldr	r2, [pc, #1640]	; 126a4 <fputs@plt+0xed4>
   12038:	mov	r3, #1
   1203c:	ldr	r1, [r9]
   12040:	sub	r0, r2, #152	; 0x98
   12044:	str	sl, [fp, #192]	; 0xc0
   12048:	bl	157d8 <fputs@plt+0x4008>
   1204c:	b	11f74 <fputs@plt+0x7a4>
   12050:	ldr	r3, [fp, #220]	; 0xdc
   12054:	cmp	r3, #0
   12058:	beq	132a8 <fputs@plt+0x1ad8>
   1205c:	ldr	r2, [sp, #28]
   12060:	ldr	r1, [pc, #1604]	; 126ac <fputs@plt+0xedc>
   12064:	mov	r0, #1
   12068:	bl	114c4 <__printf_chk@plt>
   1206c:	mov	r2, #0
   12070:	ldr	r1, [sp, #124]	; 0x7c
   12074:	ldr	r0, [fp]
   12078:	bl	16440 <fputs@plt+0x4c70>
   1207c:	ldr	r3, [fp, #236]	; 0xec
   12080:	cmp	r3, #0
   12084:	bne	132b4 <fputs@plt+0x1ae4>
   12088:	ldr	r3, [fp, #220]	; 0xdc
   1208c:	cmp	r3, #0
   12090:	bne	13388 <fputs@plt+0x1bb8>
   12094:	ldr	r3, [fp, #240]	; 0xf0
   12098:	cmp	r3, #0
   1209c:	bne	11cb8 <fputs@plt+0x4e8>
   120a0:	ldr	r3, [fp, #244]	; 0xf4
   120a4:	cmp	r3, #0
   120a8:	bne	13464 <fputs@plt+0x1c94>
   120ac:	ldr	r1, [pc, #1532]	; 126b0 <fputs@plt+0xee0>
   120b0:	mov	r0, #1
   120b4:	bl	11440 <signal@plt>
   120b8:	ldr	r1, [pc, #1520]	; 126b0 <fputs@plt+0xee0>
   120bc:	mov	r0, #13
   120c0:	bl	11440 <signal@plt>
   120c4:	ldr	r1, [pc, #1508]	; 126b0 <fputs@plt+0xee0>
   120c8:	mov	r0, #2
   120cc:	bl	11440 <signal@plt>
   120d0:	ldr	r1, [pc, #1496]	; 126b0 <fputs@plt+0xee0>
   120d4:	mov	r0, #15
   120d8:	bl	11440 <signal@plt>
   120dc:	ldr	r3, [fp, #232]	; 0xe8
   120e0:	cmp	r3, #0
   120e4:	bne	1384c <fputs@plt+0x207c>
   120e8:	ldr	r1, [sp, #88]	; 0x58
   120ec:	ldr	r2, [sp, #44]	; 0x2c
   120f0:	cmp	r1, #0
   120f4:	str	r2, [sp, #108]	; 0x6c
   120f8:	movne	r2, #0
   120fc:	cmp	r2, #0
   12100:	beq	1223c <fputs@plt+0xa6c>
   12104:	ldr	r2, [fp, #244]	; 0xf4
   12108:	cmp	r2, #3
   1210c:	strhi	r3, [sp, #88]	; 0x58
   12110:	bls	132e8 <fputs@plt+0x1b18>
   12114:	ldr	r4, [pc, #1680]	; 127ac <fputs@plt+0xfdc>
   12118:	mov	r2, #9
   1211c:	mov	r1, #1
   12120:	ldr	r3, [r4]
   12124:	ldr	r0, [pc, #1416]	; 126b4 <fputs@plt+0xee4>
   12128:	bl	11638 <fwrite@plt>
   1212c:	ldr	r3, [sp, #52]	; 0x34
   12130:	cmn	r3, #1
   12134:	beq	132f8 <fputs@plt+0x1b28>
   12138:	ldr	r5, [sp, #52]	; 0x34
   1213c:	ldr	r2, [pc, #1396]	; 126b8 <fputs@plt+0xee8>
   12140:	mov	r3, r5
   12144:	mov	r1, #1
   12148:	ldr	r0, [r4]
   1214c:	bl	11680 <__fprintf_chk@plt>
   12150:	ldr	r2, [pc, #1512]	; 12740 <fputs@plt+0xf70>
   12154:	cmp	r5, #1
   12158:	ldr	r0, [r4]
   1215c:	ldr	r3, [pc, #1448]	; 1270c <fputs@plt+0xf3c>
   12160:	movne	r3, r2
   12164:	ldr	r2, [sp, #104]	; 0x68
   12168:	mov	r1, #1
   1216c:	str	r2, [sp, #4]
   12170:	ldr	r2, [sp, #48]	; 0x30
   12174:	str	r2, [sp]
   12178:	ldr	r2, [pc, #1340]	; 126bc <fputs@plt+0xeec>
   1217c:	bl	11680 <__fprintf_chk@plt>
   12180:	mov	r3, #0
   12184:	str	r3, [sp, #36]	; 0x24
   12188:	b	12268 <fputs@plt+0xa98>
   1218c:	ldr	r3, [pc, #1292]	; 126a0 <fputs@plt+0xed0>
   12190:	ldr	r3, [r3]
   12194:	cmp	r3, r6
   12198:	blt	137f8 <fputs@plt+0x2028>
   1219c:	mov	r0, r8
   121a0:	bl	11560 <free@plt>
   121a4:	mov	r2, #0
   121a8:	mov	r3, r2
   121ac:	mov	r4, r2
   121b0:	add	r5, sp, #152	; 0x98
   121b4:	str	r2, [sp, #116]	; 0x74
   121b8:	b	121e8 <fputs@plt+0xa18>
   121bc:	ldr	r3, [sp, #116]	; 0x74
   121c0:	add	r2, sp, #172	; 0xac
   121c4:	ldr	r0, [fp]
   121c8:	add	r3, fp, r3, lsl #2
   121cc:	ldr	r1, [r3, #32]
   121d0:	bl	15cc0 <fputs@plt+0x44f0>
   121d4:	ldr	r3, [sp, #116]	; 0x74
   121d8:	add	r3, r3, #1
   121dc:	cmp	r3, #1
   121e0:	str	r3, [sp, #116]	; 0x74
   121e4:	bgt	12050 <fputs@plt+0x880>
   121e8:	add	r2, fp, r3, lsl #2
   121ec:	ldr	r1, [r2, #32]
   121f0:	cmp	r1, #0
   121f4:	beq	121d4 <fputs@plt+0xa04>
   121f8:	mov	r3, r2
   121fc:	ldr	r2, [r2, #200]	; 0xc8
   12200:	ldr	r1, [r3, #40]	; 0x28
   12204:	str	r2, [sp, #172]	; 0xac
   12208:	cmp	r1, #0
   1220c:	str	r4, [sp, #152]	; 0x98
   12210:	beq	121bc <fputs@plt+0x9ec>
   12214:	mov	r3, r5
   12218:	mov	r2, #0
   1221c:	str	r4, [sp]
   12220:	ldr	r0, [fp]
   12224:	bl	116e0 <sane_control_option@plt>
   12228:	ldr	r3, [sp, #172]	; 0xac
   1222c:	ldr	r2, [sp, #152]	; 0x98
   12230:	add	r3, r3, r2
   12234:	str	r3, [sp, #172]	; 0xac
   12238:	b	121bc <fputs@plt+0x9ec>
   1223c:	ldr	r3, [sp, #44]	; 0x2c
   12240:	cmp	r3, #0
   12244:	bne	12114 <fputs@plt+0x944>
   12248:	ldr	r3, [pc, #1280]	; 12750 <fputs@plt+0xf80>
   1224c:	ldr	r3, [r3]
   12250:	mov	r0, r3
   12254:	str	r3, [sp, #36]	; 0x24
   12258:	bl	113f8 <fileno@plt>
   1225c:	bl	115a8 <isatty@plt>
   12260:	cmp	r0, #0
   12264:	bne	13798 <fputs@plt+0x1fc8>
   12268:	ldr	r0, [fp, #216]	; 0xd8
   1226c:	bl	11668 <malloc@plt>
   12270:	vldr	d9, [pc, #952]	; 12630 <fputs@plt+0xe60>
   12274:	ldr	r9, [pc, #1328]	; 127ac <fputs@plt+0xfdc>
   12278:	ldr	r3, [sp, #104]	; 0x68
   1227c:	str	r3, [sp, #32]
   12280:	str	r0, [fp, #252]	; 0xfc
   12284:	ldr	r3, [sp, #44]	; 0x2c
   12288:	ldr	r5, [sp, #32]
   1228c:	cmp	r3, #0
   12290:	bne	12a54 <fputs@plt+0x1284>
   12294:	ldr	r0, [fp]
   12298:	bl	1159c <sane_start@plt>
   1229c:	subs	r8, r0, #0
   122a0:	bne	137a8 <fputs@plt+0x1fd8>
   122a4:	mov	r3, #0
   122a8:	mov	sl, r3
   122ac:	mov	r0, #255	; 0xff
   122b0:	mvn	r1, #0
   122b4:	mov	r4, #1
   122b8:	mov	r8, sl
   122bc:	str	r3, [sp, #152]	; 0x98
   122c0:	str	r3, [sp, #144]	; 0x90
   122c4:	str	r3, [sp, #60]	; 0x3c
   122c8:	str	r3, [sp, #28]
   122cc:	str	r3, [sp, #40]	; 0x28
   122d0:	str	r3, [sp, #56]	; 0x38
   122d4:	str	r3, [sp, #72]	; 0x48
   122d8:	str	r3, [sp, #156]	; 0x9c
   122dc:	str	r3, [sp, #160]	; 0xa0
   122e0:	str	r3, [sp, #164]	; 0xa4
   122e4:	str	r3, [sp, #168]	; 0xa8
   122e8:	add	r3, sp, #200	; 0xc8
   122ec:	strd	r0, [sp, #76]	; 0x4c
   122f0:	str	r3, [sp, #64]	; 0x40
   122f4:	add	r1, sp, #172	; 0xac
   122f8:	ldr	r0, [fp]
   122fc:	bl	1165c <sane_get_parameters@plt>
   12300:	subs	r7, r0, #0
   12304:	bne	131c4 <fputs@plt+0x19f4>
   12308:	ldr	r3, [fp, #20]
   1230c:	ldr	lr, [sp, #172]	; 0xac
   12310:	cmp	r3, #0
   12314:	beq	1238c <fputs@plt+0xbbc>
   12318:	cmp	r4, #0
   1231c:	ldr	r0, [r9]
   12320:	ldr	r3, [fp, #8]
   12324:	beq	12364 <fputs@plt+0xb94>
   12328:	ldr	r1, [sp, #188]	; 0xbc
   1232c:	ldr	ip, [sp, #184]	; 0xb8
   12330:	cmp	r1, #0
   12334:	ldr	r2, [sp, #192]	; 0xc0
   12338:	blt	130e8 <fputs@plt+0x1918>
   1233c:	cmp	lr, #1
   12340:	addeq	r2, r2, r2, lsl #1
   12344:	str	ip, [sp]
   12348:	stmib	sp, {r1, r2}
   1234c:	ldr	r2, [pc, #876]	; 126c0 <fputs@plt+0xef0>
   12350:	mov	r1, #1
   12354:	bl	11680 <__fprintf_chk@plt>
   12358:	ldr	r0, [r9]
   1235c:	ldr	r3, [fp, #8]
   12360:	ldr	lr, [sp, #172]	; 0xac
   12364:	cmp	lr, #4
   12368:	mov	r1, #1
   1236c:	ldrls	r2, [pc, #964]	; 12738 <fputs@plt+0xf68>
   12370:	ldrhi	r2, [pc, #844]	; 126c4 <fputs@plt+0xef4>
   12374:	addls	lr, r2, lr, lsl #2
   12378:	ldrls	r2, [lr, #16]
   1237c:	str	r2, [sp]
   12380:	ldr	r2, [pc, #832]	; 126c8 <fputs@plt+0xef8>
   12384:	bl	11680 <__fprintf_chk@plt>
   12388:	ldr	lr, [sp, #172]	; 0xac
   1238c:	cmp	r4, #0
   12390:	beq	12cd8 <fputs@plt+0x1508>
   12394:	cmp	lr, #4
   12398:	ldrls	pc, [pc, lr, lsl #2]
   1239c:	b	128c8 <fputs@plt+0x10f8>
   123a0:	andeq	r2, r1, r4, lsr #16
   123a4:	andeq	r2, r1, r8, ror #15
   123a8:			; <UNDEFINED> instruction: 0x000123b4
   123ac:			; <UNDEFINED> instruction: 0x000123b4
   123b0:			; <UNDEFINED> instruction: 0x000123b4
   123b4:	ldr	r3, [sp, #192]	; 0xc0
   123b8:	cmp	r3, #8
   123bc:	bne	137e4 <fputs@plt+0x2014>
   123c0:	ldr	r5, [sp, #188]	; 0xbc
   123c4:	ldr	r2, [fp, #244]	; 0xf4
   123c8:	sub	sl, lr, #2
   123cc:	str	r4, [sp, #40]	; 0x28
   123d0:	cmp	r2, #2
   123d4:	ldr	r4, [sp, #180]	; 0xb4
   123d8:	beq	13128 <fputs@plt+0x1958>
   123dc:	cmp	r2, #3
   123e0:	beq	13138 <fputs@plt+0x1968>
   123e4:	ldr	r3, [sp, #40]	; 0x28
   123e8:	cmp	r3, #0
   123ec:	beq	12430 <fputs@plt+0xc60>
   123f0:	ldr	r1, [sp, #64]	; 0x40
   123f4:	cmp	r5, #0
   123f8:	subge	r2, r5, #255	; 0xff
   123fc:	movlt	r2, #0
   12400:	mvn	r3, #0
   12404:	sub	r5, r4, #1
   12408:	sub	r0, r1, #48	; 0x30
   1240c:	str	r4, [sp, #156]	; 0x9c
   12410:	str	r5, [sp, #164]	; 0xa4
   12414:	str	r2, [sp, #160]	; 0xa0
   12418:	str	r3, [sp, #168]	; 0xa8
   1241c:	bl	144b0 <fputs@plt+0x2ce0>
   12420:	cmp	r0, #0
   12424:	beq	12528 <fputs@plt+0xd58>
   12428:	ldr	r4, [sp, #180]	; 0xb4
   1242c:	ldr	r5, [sp, #188]	; 0xbc
   12430:	mul	r5, r5, r4
   12434:	ldr	r3, [sp, #172]	; 0xac
   12438:	cmp	r3, #1
   1243c:	addhi	r5, r5, r5, lsl #1
   12440:	vmov	s15, r5
   12444:	ldr	r4, [fp, #252]	; 0xfc
   12448:	vcvt.f64.s32	d8, s15
   1244c:	mov	r1, r4
   12450:	add	r3, sp, #132	; 0x84
   12454:	ldr	r2, [fp, #216]	; 0xd8
   12458:	ldr	r0, [fp]
   1245c:	bl	11410 <sane_read@plt>
   12460:	ldr	r1, [sp, #28]
   12464:	ldr	r2, [sp, #132]	; 0x84
   12468:	ldr	r3, [fp, #228]	; 0xe4
   1246c:	add	r2, r1, r2
   12470:	str	r2, [sp, #28]
   12474:	vmov	s15, r2
   12478:	vcvt.f64.s32	d6, s15
   1247c:	vmul.f64	d6, d6, d9
   12480:	vdiv.f64	d7, d6, d8
   12484:	mov	r7, r0
   12488:	vcmp.f64	d7, d9
   1248c:	vmrs	APSR_nzcv, fpscr
   12490:	vmovgt.f64	d7, d9
   12494:	cmp	r3, #0
   12498:	bne	129d0 <fputs@plt+0x1200>
   1249c:	cmp	r7, #0
   124a0:	bne	129ec <fputs@plt+0x121c>
   124a4:	ldr	r3, [sp, #40]	; 0x28
   124a8:	ldr	r4, [fp, #252]	; 0xfc
   124ac:	cmp	r3, #0
   124b0:	beq	12928 <fputs@plt+0x1158>
   124b4:	ldr	r3, [sp, #172]	; 0xac
   124b8:	cmp	r3, #4
   124bc:	ldrls	pc, [pc, r3, lsl #2]
   124c0:	b	1296c <fputs@plt+0x119c>
   124c4:	andeq	r2, r1, r8, lsl r6
   124c8:	andeq	r2, r1, r8, asr #11
   124cc:	ldrdeq	r2, [r1], -r8
   124d0:	ldrdeq	r2, [r1], -r8
   124d4:	ldrdeq	r2, [r1], -r8
   124d8:	ldr	r3, [sp, #132]	; 0x84
   124dc:	cmp	r3, #0
   124e0:	movgt	r7, sl
   124e4:	movgt	r5, #0
   124e8:	addgt	r6, sp, #152	; 0x98
   124ec:	bgt	1250c <fputs@plt+0xd3c>
   124f0:	b	12f34 <fputs@plt+0x1764>
   124f4:	ldr	r3, [sp, #132]	; 0x84
   124f8:	add	r5, r5, #1
   124fc:	cmp	r5, r3
   12500:	add	r7, r7, #3
   12504:	ldr	r4, [fp, #252]	; 0xfc
   12508:	bge	12f34 <fputs@plt+0x1764>
   1250c:	ldrb	r2, [r4, r5]
   12510:	ldr	r3, [sp, #152]	; 0x98
   12514:	mov	r0, r6
   12518:	strb	r2, [r3, r7]
   1251c:	bl	144b0 <fputs@plt+0x2ce0>
   12520:	cmp	r0, #0
   12524:	bne	124f4 <fputs@plt+0xd24>
   12528:	mov	r8, #10
   1252c:	ldr	r3, [fp, #244]	; 0xf4
   12530:	cmp	r3, #2
   12534:	beq	1307c <fputs@plt+0x18ac>
   12538:	cmp	r3, #3
   1253c:	beq	13068 <fputs@plt+0x1898>
   12540:	ldr	r0, [sp, #152]	; 0x98
   12544:	cmp	r0, #0
   12548:	beq	12550 <fputs@plt+0xd80>
   1254c:	bl	11560 <free@plt>
   12550:	ldr	r2, [sp, #188]	; 0xbc
   12554:	ldr	r3, [sp, #180]	; 0xb4
   12558:	ldr	r1, [sp, #172]	; 0xac
   1255c:	mul	r3, r3, r2
   12560:	cmp	r1, #1
   12564:	addhi	r3, r3, r3, lsl #1
   12568:	cmp	r2, #0
   1256c:	blt	12b9c <fputs@plt+0x13cc>
   12570:	ldr	r2, [sp, #28]
   12574:	cmp	r3, #0
   12578:	cmpne	r2, r3
   1257c:	ble	12b9c <fputs@plt+0x13cc>
   12580:	strd	r2, [sp]
   12584:	mov	r1, #1
   12588:	ldr	r3, [fp, #8]
   1258c:	ldr	r2, [pc, #312]	; 126cc <fputs@plt+0xefc>
   12590:	ldr	r0, [r9]
   12594:	bl	11680 <__fprintf_chk@plt>
   12598:	ldr	r3, [sp, #44]	; 0x2c
   1259c:	cmp	r3, #0
   125a0:	bne	12bd0 <fputs@plt+0x1400>
   125a4:	cmp	r8, #0
   125a8:	mov	sl, r8
   125ac:	beq	12ff0 <fputs@plt+0x1820>
   125b0:	cmp	r8, #5
   125b4:	beq	12ff0 <fputs@plt+0x1820>
   125b8:	ldr	r3, [sp, #32]
   125bc:	ldr	r2, [sp, #48]	; 0x30
   125c0:	add	r5, r3, r2
   125c4:	b	12c88 <fputs@plt+0x14b8>
   125c8:	ldr	r3, [sp, #132]	; 0x84
   125cc:	cmp	r3, #0
   125d0:	movgt	r5, #0
   125d4:	addgt	r6, sp, #152	; 0x98
   125d8:	bgt	125f4 <fputs@plt+0xe24>
   125dc:	b	12b94 <fputs@plt+0x13c4>
   125e0:	ldr	r3, [sp, #132]	; 0x84
   125e4:	add	r5, r5, #1
   125e8:	cmp	r5, r3
   125ec:	ldr	r4, [fp, #252]	; 0xfc
   125f0:	bge	12b94 <fputs@plt+0x13c4>
   125f4:	ldr	r3, [sp, #152]	; 0x98
   125f8:	ldrb	r2, [r4, r5]
   125fc:	add	r3, r3, sl
   12600:	mov	r0, r6
   12604:	strb	r2, [r3, r5]
   12608:	bl	144b0 <fputs@plt+0x2ce0>
   1260c:	cmp	r0, #0
   12610:	bne	125e0 <fputs@plt+0xe10>
   12614:	b	12528 <fputs@plt+0xd58>
   12618:	ldr	r3, [sp, #132]	; 0x84
   1261c:	cmp	r3, #0
   12620:	movgt	r5, #0
   12624:	addgt	r6, sp, #152	; 0x98
   12628:	bgt	127c4 <fputs@plt+0xff4>
   1262c:	b	12b94 <fputs@plt+0x13c4>
   12630:	andeq	r0, r0, r0
   12634:	subsmi	r0, r9, r0
   12638:	muleq	r2, r4, r1
   1263c:	andeq	sl, r2, ip
   12640:	andeq	r8, r1, r0, ror #4
   12644:	andeq	r0, r0, fp, ror #7
   12648:	andeq	r8, r1, r8, asr r0
   1264c:	ldrdeq	r3, [r1], -r0
   12650:	andeq	sl, r2, ip, lsl #3
   12654:	andeq	r0, r0, lr, ror #7
   12658:	andeq	r0, r0, pc, ror #7
   1265c:	andeq	r0, r0, r9, ror #7
   12660:	andeq	sl, r2, r8, lsl #3
   12664:	andeq	r8, r1, ip, asr #3
   12668:	ldrdeq	r8, [r1], -r4
   1266c:	andeq	r8, r1, ip, lsr r0
   12670:	strdeq	r8, [r1], -ip
   12674:	andeq	r7, r1, ip, asr #15
   12678:	andeq	r8, r1, ip, rrx
   1267c:	andeq	r8, r1, r4, ror r0
   12680:	andeq	r8, r1, r8, ror r0
   12684:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   12688:	andeq	r8, r1, r0, lsl #4
   1268c:	andeq	r8, r1, r8, asr #32
   12690:	andeq	r8, r1, ip, asr #32
   12694:	andeq	r8, r1, r4, asr #32
   12698:	andeq	r8, r1, r0, asr #32
   1269c:	andeq	r8, r1, ip, lsr #24
   126a0:	andeq	sl, r2, r0, ror r1
   126a4:	andeq	sl, r2, ip, asr r2
   126a8:	andeq	sl, r2, r0, ror #4
   126ac:	andeq	r8, r1, r4, ror ip
   126b0:	muleq	r1, r4, r3
   126b4:	andeq	r9, r1, r4, ror r1
   126b8:	strdeq	r7, [r1], -r0
   126bc:	andeq	r8, r1, r4, lsr sp
   126c0:	andeq	r8, r1, r4, asr lr
   126c4:	andeq	r8, r1, r0, asr r0
   126c8:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   126cc:	andeq	r9, r1, r4
   126d0:	andeq	r0, r0, sp, ror r5
   126d4:	andeq	r8, r1, r4, lsr pc
   126d8:			; <UNDEFINED> instruction: 0x00018fb4
   126dc:	andeq	r8, r1, r8, lsl #27
   126e0:	muleq	r1, r0, sp
   126e4:			; <UNDEFINED> instruction: 0x00018db8
   126e8:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   126ec:	andeq	sl, r2, r8, ror r1
   126f0:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   126f4:	andeq	r8, r1, ip, lsl #28
   126f8:	andeq	r8, r1, r0, lsl lr
   126fc:	andeq	r9, r2, r8, lsl #27
   12700:	andeq	r9, r1, r4, asr #32
   12704:	andeq	r9, r1, r0, rrx
   12708:	andeq	r9, r1, r4, ror r0
   1270c:	andeq	r8, r1, r8, lsr #24
   12710:	andeq	r9, r1, r0, asr #1
   12714:	andeq	r8, r1, r0, lsr #28
   12718:	muleq	r1, r0, lr
   1271c:	andeq	r7, r1, r8, lsr #31
   12720:	andeq	r8, r1, r4, lsr lr
   12724:	andeq	r8, r1, r8, asr #31
   12728:	andeq	r8, r1, r4, lsr #20
   1272c:	andeq	r8, r1, r0, lsl #1
   12730:	muleq	r1, r8, ip
   12734:	andeq	r8, r1, r4, lsr #1
   12738:	andeq	r7, r1, r0, asr #14
   1273c:	andeq	r8, r1, r8, lsr #26
   12740:	andeq	r8, r1, ip, lsr #4
   12744:	andeq	r9, r1, ip, lsl #1
   12748:	andeq	r8, r1, r0, asr #20
   1274c:	andeq	r8, r1, r0, asr #25
   12750:	andeq	sl, r2, ip, ror r1
   12754:	andeq	r8, r1, r0, lsr #26
   12758:	andeq	r8, r1, r4, ror r2
   1275c:	andeq	r8, r1, r8, asr #8
   12760:	andeq	r8, r1, r4, asr #12
   12764:	strdeq	r8, [r1], -ip
   12768:	andeq	r8, r1, ip, ror #19
   1276c:			; <UNDEFINED> instruction: 0x000181b0
   12770:	andeq	r9, r1, r8, lsr #1
   12774:	strdeq	r8, [r1], -r0
   12778:	andeq	r0, r0, r1, asr r1
   1277c:	andeq	r8, r1, r4, ror #20
   12780:	andeq	r8, r1, r8, lsl r2
   12784:	andeq	r8, r1, r0, lsr #4
   12788:	andeq	r8, r1, r0, lsr r2
   1278c:	andeq	r7, r1, r4, ror #14
   12790:	andeq	r0, r0, sl, asr #11
   12794:	andeq	r8, r1, r4, ror pc
   12798:	strdeq	r8, [r1], -r0
   1279c:			; <UNDEFINED> instruction: 0x00018bb8
   127a0:	andeq	r8, r1, r4, ror #23
   127a4:	andeq	r8, r1, ip, lsl #24
   127a8:	strdeq	r7, [r1], -r8
   127ac:	andeq	sl, r2, r0, lsl #3
   127b0:	ldr	r3, [sp, #132]	; 0x84
   127b4:	add	r5, r5, #1
   127b8:	cmp	r5, r3
   127bc:	ldr	r4, [fp, #252]	; 0xfc
   127c0:	bge	12b94 <fputs@plt+0x13c4>
   127c4:	ldr	r3, [sp, #152]	; 0x98
   127c8:	ldrb	r2, [r4, r5]
   127cc:	add	r3, r3, sl
   127d0:	mov	r0, r6
   127d4:	strb	r2, [r3, r5]
   127d8:	bl	144b0 <fputs@plt+0x2ce0>
   127dc:	cmp	r0, #0
   127e0:	bne	127b0 <fputs@plt+0xfe0>
   127e4:	b	12528 <fputs@plt+0xd58>
   127e8:	ldr	r3, [sp, #192]	; 0xc0
   127ec:	sub	r2, r3, #8
   127f0:	bics	r2, r2, #8
   127f4:	bne	13838 <fputs@plt+0x2068>
   127f8:	ldr	r5, [sp, #188]	; 0xbc
   127fc:	ldr	r2, [fp, #244]	; 0xf4
   12800:	cmp	r5, #0
   12804:	blt	13114 <fputs@plt+0x1944>
   12808:	cmp	r2, #3
   1280c:	ldrls	pc, [pc, r2, lsl #2]
   12810:	b	13b40 <fputs@plt+0x2370>
   12814:	andeq	r2, r1, r4, lsl #18
   12818:	ldrdeq	r2, [r1], -r4
   1281c:	andeq	r2, r1, ip, lsl #17
   12820:	andeq	r2, r1, r0, asr r8
   12824:	ldr	r3, [sp, #192]	; 0xc0
   12828:	sub	r2, r3, #8
   1282c:	bic	r2, r2, #8
   12830:	cmp	r2, #0
   12834:	cmpne	r3, #1
   12838:	beq	127f8 <fputs@plt+0x1028>
   1283c:	ldr	r3, [pc, #-184]	; 1278c <fputs@plt+0xfbc>
   12840:	ldr	r2, [pc, #-376]	; 126d0 <fputs@plt+0xf00>
   12844:	ldr	r1, [pc, #-180]	; 12798 <fputs@plt+0xfc8>
   12848:	ldr	r0, [pc, #-380]	; 126d4 <fputs@plt+0xf04>
   1284c:	bl	11530 <__assert_fail@plt>
   12850:	ldr	r3, [sp, #64]	; 0x40
   12854:	ldr	r2, [sp, #36]	; 0x24
   12858:	sub	r1, r3, #4
   1285c:	add	r3, sp, #328	; 0x148
   12860:	str	r2, [sp]
   12864:	str	r1, [sp, #8]
   12868:	mov	r2, r5
   1286c:	str	r3, [sp, #4]
   12870:	mov	r0, lr
   12874:	ldr	r3, [fp, #248]	; 0xf8
   12878:	ldr	r1, [sp, #184]	; 0xb8
   1287c:	bl	13e24 <fputs@plt+0x2654>
   12880:	ldr	r5, [sp, #188]	; 0xbc
   12884:	ldr	r2, [fp, #244]	; 0xf4
   12888:	b	123d0 <fputs@plt+0xc00>
   1288c:	ldr	r1, [fp, #224]	; 0xe0
   12890:	add	r2, sp, #136	; 0x88
   12894:	str	r1, [sp, #4]
   12898:	ldr	r1, [sp, #64]	; 0x40
   1289c:	ldr	ip, [fp, #248]	; 0xf8
   128a0:	str	r2, [sp, #12]
   128a4:	ldr	r2, [sp, #36]	; 0x24
   128a8:	sub	r1, r1, #60	; 0x3c
   128ac:	str	r2, [sp, #8]
   128b0:	str	r1, [sp, #16]
   128b4:	mov	r2, r5
   128b8:	mov	r0, lr
   128bc:	str	ip, [sp]
   128c0:	ldr	r1, [sp, #184]	; 0xb8
   128c4:	bl	14ff8 <fputs@plt+0x3828>
   128c8:	ldr	r5, [sp, #188]	; 0xbc
   128cc:	ldr	r2, [fp, #244]	; 0xf4
   128d0:	b	123d0 <fputs@plt+0xc00>
   128d4:	ldr	r1, [fp, #248]	; 0xf8
   128d8:	ldr	ip, [fp, #224]	; 0xe0
   128dc:	ldr	r2, [sp, #36]	; 0x24
   128e0:	mov	r0, lr
   128e4:	str	r2, [sp, #8]
   128e8:	stm	sp, {r1, ip}
   128ec:	mov	r2, r5
   128f0:	ldr	r1, [sp, #184]	; 0xb8
   128f4:	bl	169c0 <fputs@plt+0x51f0>
   128f8:	ldr	r5, [sp, #188]	; 0xbc
   128fc:	ldr	r2, [fp, #244]	; 0xf4
   12900:	b	123d0 <fputs@plt+0xc00>
   12904:	ldr	r2, [sp, #36]	; 0x24
   12908:	mov	r0, lr
   1290c:	str	r2, [sp]
   12910:	ldr	r1, [sp, #184]	; 0xb8
   12914:	mov	r2, r5
   12918:	bl	161f8 <fputs@plt+0x4a28>
   1291c:	ldr	r5, [sp, #188]	; 0xbc
   12920:	ldr	r2, [fp, #244]	; 0xf4
   12924:	b	123d0 <fputs@plt+0xc00>
   12928:	ldr	r2, [fp, #244]	; 0xf4
   1292c:	ldr	r6, [sp, #132]	; 0x84
   12930:	cmp	r2, #2
   12934:	beq	12d04 <fputs@plt+0x1534>
   12938:	cmp	r2, #3
   1293c:	beq	12e1c <fputs@plt+0x164c>
   12940:	cmp	r2, #1
   12944:	beq	12954 <fputs@plt+0x1184>
   12948:	ldr	r2, [sp, #192]	; 0xc0
   1294c:	cmp	r2, #16
   12950:	beq	12ff8 <fputs@plt+0x1828>
   12954:	mov	r2, r6
   12958:	mov	r0, r4
   1295c:	ldr	r3, [sp, #36]	; 0x24
   12960:	mov	r1, #1
   12964:	bl	11638 <fwrite@plt>
   12968:	ldr	r4, [fp, #252]	; 0xfc
   1296c:	ldr	r3, [fp, #20]
   12970:	cmp	r3, #0
   12974:	beq	1244c <fputs@plt+0xc7c>
   12978:	ldr	r3, [sp, #192]	; 0xc0
   1297c:	cmp	r3, #8
   12980:	bne	1244c <fputs@plt+0xc7c>
   12984:	ldr	r1, [sp, #132]	; 0x84
   12988:	cmp	r1, #0
   1298c:	ble	1244c <fputs@plt+0xc7c>
   12990:	sub	r1, r1, #1
   12994:	ldr	ip, [sp, #72]	; 0x48
   12998:	ldr	r0, [sp, #76]	; 0x4c
   1299c:	add	r1, r4, r1
   129a0:	sub	r2, r4, #1
   129a4:	ldrb	r3, [r2, #1]!
   129a8:	cmp	r3, ip
   129ac:	movcs	ip, r3
   129b0:	bcs	129bc <fputs@plt+0x11ec>
   129b4:	cmp	r3, r0
   129b8:	movcc	r0, r3
   129bc:	cmp	r1, r2
   129c0:	bne	129a4 <fputs@plt+0x11d4>
   129c4:	str	ip, [sp, #72]	; 0x48
   129c8:	str	r0, [sp, #76]	; 0x4c
   129cc:	b	1244c <fputs@plt+0xc7c>
   129d0:	vstr	d7, [sp]
   129d4:	ldr	r2, [pc, #-772]	; 126d8 <fputs@plt+0xf08>
   129d8:	mov	r1, #1
   129dc:	ldr	r0, [r9]
   129e0:	bl	11680 <__fprintf_chk@plt>
   129e4:	cmp	r7, #0
   129e8:	beq	124a4 <fputs@plt+0xcd4>
   129ec:	ldr	r3, [fp, #20]
   129f0:	cmp	r3, #0
   129f4:	beq	12a04 <fputs@plt+0x1234>
   129f8:	ldr	r3, [sp, #192]	; 0xc0
   129fc:	cmp	r3, #8
   12a00:	beq	131f0 <fputs@plt+0x1a20>
   12a04:	cmp	r7, #5
   12a08:	bne	134e4 <fputs@plt+0x1d14>
   12a0c:	ldr	r4, [sp, #176]	; 0xb0
   12a10:	cmp	r4, #0
   12a14:	bne	13514 <fputs@plt+0x1d44>
   12a18:	ldr	r0, [fp]
   12a1c:	bl	1159c <sane_start@plt>
   12a20:	subs	r7, r0, #0
   12a24:	beq	122f4 <fputs@plt+0xb24>
   12a28:	ldr	r4, [r9]
   12a2c:	ldr	r5, [fp, #8]
   12a30:	bl	1144c <sane_strstatus@plt>
   12a34:	mov	r3, r5
   12a38:	ldr	r2, [pc, #-812]	; 12714 <fputs@plt+0xf44>
   12a3c:	mov	r1, #1
   12a40:	mov	r8, r7
   12a44:	str	r0, [sp]
   12a48:	mov	r0, r4
   12a4c:	bl	11680 <__fprintf_chk@plt>
   12a50:	b	1252c <fputs@plt+0xd5c>
   12a54:	ldr	r3, [sp, #88]	; 0x58
   12a58:	mov	r2, #4096	; 0x1000
   12a5c:	mov	r1, #1
   12a60:	str	r5, [sp]
   12a64:	add	r0, sp, #708	; 0x2c4
   12a68:	bl	11740 <__sprintf_chk@plt>
   12a6c:	add	r0, sp, #4800	; 0x12c0
   12a70:	add	r1, sp, #708	; 0x2c4
   12a74:	mov	r2, #4096	; 0x1000
   12a78:	add	r0, r0, #4
   12a7c:	bl	11644 <__stpcpy_chk@plt>
   12a80:	ldr	r1, [pc, #-940]	; 126dc <fputs@plt+0xf0c>
   12a84:	ldrh	r3, [r1, #4]
   12a88:	mov	r2, r0
   12a8c:	ldr	r0, [r1]
   12a90:	ldr	r1, [sp, #84]	; 0x54
   12a94:	str	r0, [r2]
   12a98:	cmp	r1, #0
   12a9c:	strh	r3, [r2, #4]
   12aa0:	moveq	r4, r9
   12aa4:	beq	12b04 <fputs@plt+0x1334>
   12aa8:	mov	r3, r5
   12aac:	ldr	r2, [pc, #-980]	; 126e0 <fputs@plt+0xf10>
   12ab0:	mov	r1, #1
   12ab4:	ldr	r0, [r9]
   12ab8:	bl	11680 <__fprintf_chk@plt>
   12abc:	ldr	r3, [r9]
   12ac0:	mov	r2, #28
   12ac4:	mov	r1, #1
   12ac8:	ldr	r0, [pc, #-1004]	; 126e4 <fputs@plt+0xf14>
   12acc:	bl	11638 <fwrite@plt>
   12ad0:	ldr	r3, [r9]
   12ad4:	mov	r2, #29
   12ad8:	mov	r1, #1
   12adc:	ldr	r0, [pc, #-1020]	; 126e8 <fputs@plt+0xf18>
   12ae0:	bl	11638 <fwrite@plt>
   12ae4:	ldr	r3, [pc, #-1024]	; 126ec <fputs@plt+0xf1c>
   12ae8:	mov	r1, #2
   12aec:	add	r0, sp, #704	; 0x2c0
   12af0:	ldr	r2, [r3]
   12af4:	bl	114ac <fgets@plt>
   12af8:	mov	r4, r9
   12afc:	cmp	r0, #0
   12b00:	beq	136fc <fputs@plt+0x1f2c>
   12b04:	ldr	r3, [sp, #32]
   12b08:	ldr	r2, [pc, #-1056]	; 126f0 <fputs@plt+0xf20>
   12b0c:	mov	r1, #1
   12b10:	ldr	r0, [r9]
   12b14:	bl	11680 <__fprintf_chk@plt>
   12b18:	ldr	r0, [fp]
   12b1c:	bl	1159c <sane_start@plt>
   12b20:	subs	r8, r0, #0
   12b24:	bne	1309c <fputs@plt+0x18cc>
   12b28:	add	r0, sp, #4800	; 0x12c0
   12b2c:	ldr	r1, [pc, #-1088]	; 126f4 <fputs@plt+0xf24>
   12b30:	add	r0, r0, #4
   12b34:	bl	114f4 <fopen@plt>
   12b38:	subs	r3, r0, #0
   12b3c:	str	r3, [sp, #36]	; 0x24
   12b40:	bne	122a4 <fputs@plt+0xad4>
   12b44:	add	r3, sp, #4800	; 0x12c0
   12b48:	add	r3, r3, #4
   12b4c:	ldr	r0, [r9]
   12b50:	ldr	r2, [pc, #-1120]	; 126f8 <fputs@plt+0xf28>
   12b54:	mov	r1, #1
   12b58:	bl	11680 <__fprintf_chk@plt>
   12b5c:	ldr	r0, [fp]
   12b60:	bl	11548 <sane_cancel@plt>
   12b64:	add	r3, sp, #8896	; 0x22c0
   12b68:	add	r3, r3, #4
   12b6c:	ldr	r2, [r3]
   12b70:	ldr	r3, [pc, #-1148]	; 126fc <fputs@plt+0xf2c>
   12b74:	mov	r0, #11
   12b78:	ldr	r3, [r3]
   12b7c:	cmp	r2, r3
   12b80:	bne	13754 <fputs@plt+0x1f84>
   12b84:	add	sp, sp, #8896	; 0x22c0
   12b88:	add	sp, sp, #12
   12b8c:	vpop	{d8-d9}
   12b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b94:	add	sl, sl, r3
   12b98:	b	1296c <fputs@plt+0x119c>
   12b9c:	ldr	r3, [fp, #20]
   12ba0:	cmp	r3, #0
   12ba4:	beq	12598 <fputs@plt+0xdc8>
   12ba8:	ldr	r3, [sp, #28]
   12bac:	ldr	r2, [pc, #-1204]	; 12700 <fputs@plt+0xf30>
   12bb0:	str	r3, [sp]
   12bb4:	mov	r1, #1
   12bb8:	ldr	r3, [fp, #8]
   12bbc:	ldr	r0, [r9]
   12bc0:	bl	11680 <__fprintf_chk@plt>
   12bc4:	ldr	r3, [sp, #44]	; 0x2c
   12bc8:	cmp	r3, #0
   12bcc:	beq	125a4 <fputs@plt+0xdd4>
   12bd0:	ldr	r3, [sp, #32]
   12bd4:	ldr	r2, [pc, #-1240]	; 12704 <fputs@plt+0xf34>
   12bd8:	mov	r1, #1
   12bdc:	ldr	r0, [r9]
   12be0:	bl	11680 <__fprintf_chk@plt>
   12be4:	mov	r3, r8
   12be8:	ldr	r2, [pc, #-1256]	; 12708 <fputs@plt+0xf38>
   12bec:	mov	r1, #1
   12bf0:	ldr	r0, [r9]
   12bf4:	bl	11680 <__fprintf_chk@plt>
   12bf8:	cmp	r8, #0
   12bfc:	mov	r4, r9
   12c00:	beq	12f40 <fputs@plt+0x1770>
   12c04:	cmp	r8, #5
   12c08:	beq	12f40 <fputs@plt+0x1770>
   12c0c:	ldr	r3, [sp, #36]	; 0x24
   12c10:	mov	sl, r8
   12c14:	cmp	r3, #0
   12c18:	beq	12c24 <fputs@plt+0x1454>
   12c1c:	mov	r0, r3
   12c20:	bl	11494 <fclose@plt>
   12c24:	add	r0, sp, #4800	; 0x12c0
   12c28:	add	r0, r0, #4
   12c2c:	bl	115c0 <unlink@plt>
   12c30:	ldr	r3, [sp, #52]	; 0x34
   12c34:	ldr	r2, [sp, #32]
   12c38:	cmn	r3, #1
   12c3c:	ldr	r3, [sp, #48]	; 0x30
   12c40:	add	r5, r3, r2
   12c44:	ldrne	r3, [sp, #52]	; 0x34
   12c48:	subne	r3, r3, #1
   12c4c:	strne	r3, [sp, #52]	; 0x34
   12c50:	ldr	r3, [sp, #104]	; 0x68
   12c54:	ldr	r1, [sp, #48]	; 0x30
   12c58:	sub	r0, r5, r3
   12c5c:	bl	17480 <fputs@plt+0x5cb0>
   12c60:	ldr	r1, [pc, #-1320]	; 12740 <fputs@plt+0xf70>
   12c64:	ldr	r2, [pc, #-1376]	; 1270c <fputs@plt+0xf3c>
   12c68:	mov	r3, r0
   12c6c:	cmp	r3, #1
   12c70:	movne	r2, r1
   12c74:	ldr	r0, [r4]
   12c78:	mov	r1, #1
   12c7c:	str	r2, [sp]
   12c80:	ldr	r2, [pc, #-1400]	; 12710 <fputs@plt+0xf40>
   12c84:	bl	11680 <__fprintf_chk@plt>
   12c88:	ldr	r3, [sp, #108]	; 0x6c
   12c8c:	cmp	sl, #7
   12c90:	movne	r3, #0
   12c94:	andeq	r3, r3, #1
   12c98:	cmp	r3, #0
   12c9c:	beq	12cc8 <fputs@plt+0x14f8>
   12ca0:	ldr	r3, [sp, #104]	; 0x68
   12ca4:	ldr	r2, [sp, #52]	; 0x34
   12ca8:	cmp	r3, r5
   12cac:	movge	r3, #0
   12cb0:	movlt	r3, #1
   12cb4:	cmn	r2, #1
   12cb8:	movne	r3, #0
   12cbc:	cmp	r3, #0
   12cc0:	moveq	sl, #7
   12cc4:	movne	sl, #0
   12cc8:	ldr	r0, [fp]
   12ccc:	bl	11548 <sane_cancel@plt>
   12cd0:	mov	r0, sl
   12cd4:	bl	15274 <fputs@plt+0x3aa4>
   12cd8:	sub	lr, lr, #2
   12cdc:	cmp	lr, #2
   12ce0:	bhi	13718 <fputs@plt+0x1f48>
   12ce4:	ldr	r2, [sp, #188]	; 0xbc
   12ce8:	ldr	r5, [sp, #180]	; 0xb4
   12cec:	mov	sl, lr
   12cf0:	str	r4, [sp, #168]	; 0xa8
   12cf4:	mul	r5, r5, r2
   12cf8:	str	r4, [sp, #164]	; 0xa4
   12cfc:	add	r5, r5, r5, lsl #1
   12d00:	b	12440 <fputs@plt+0xc70>
   12d04:	ldr	r3, [sp, #60]	; 0x3c
   12d08:	ldr	r7, [sp, #180]	; 0xb4
   12d0c:	add	r2, r3, r6
   12d10:	cmp	r2, r7
   12d14:	blt	1319c <fputs@plt+0x19cc>
   12d18:	ldr	r2, [sp, #56]	; 0x38
   12d1c:	str	r8, [sp, #92]	; 0x5c
   12d20:	add	r1, r2, #2
   12d24:	str	r1, [sp, #60]	; 0x3c
   12d28:	mov	r8, r7
   12d2c:	mov	r1, r4
   12d30:	ldr	r5, [sp, #40]	; 0x28
   12d34:	mov	r7, r2
   12d38:	mov	r4, r3
   12d3c:	b	12d6c <fputs@plt+0x159c>
   12d40:	mov	r1, r7
   12d44:	ldr	r0, [sp, #136]	; 0x88
   12d48:	bl	11590 <png_write_row@plt>
   12d4c:	ldr	r8, [sp, #180]	; 0xb4
   12d50:	sub	r4, r8, r4
   12d54:	sub	r6, r6, r4
   12d58:	cmp	r8, r6
   12d5c:	add	r5, r5, r4
   12d60:	bgt	12dfc <fputs@plt+0x162c>
   12d64:	ldr	r1, [fp, #252]	; 0xfc
   12d68:	mov	r4, #0
   12d6c:	sub	r2, r8, r4
   12d70:	add	r1, r1, r5
   12d74:	add	r0, r7, r4
   12d78:	bl	115cc <memcpy@plt>
   12d7c:	ldr	r2, [sp, #192]	; 0xc0
   12d80:	cmp	r2, #1
   12d84:	beq	12dd4 <fputs@plt+0x1604>
   12d88:	cmp	r2, #16
   12d8c:	bne	12d40 <fputs@plt+0x1570>
   12d90:	cmp	r8, #0
   12d94:	ble	12d40 <fputs@plt+0x1570>
   12d98:	ldr	r2, [sp, #60]	; 0x3c
   12d9c:	sub	r3, r8, #1
   12da0:	bic	r3, r3, #1
   12da4:	add	r3, r3, r2
   12da8:	add	r1, r7, #1
   12dac:	mov	r2, r7
   12db0:	ldrb	ip, [r2, #1]
   12db4:	ldrb	r0, [r1, #-1]
   12db8:	add	r2, r2, #2
   12dbc:	strb	ip, [r1, #-1]
   12dc0:	strb	r0, [r2, #-1]
   12dc4:	cmp	r3, r2
   12dc8:	add	r1, r1, #2
   12dcc:	bne	12db0 <fputs@plt+0x15e0>
   12dd0:	b	12d40 <fputs@plt+0x1570>
   12dd4:	cmp	r8, #0
   12dd8:	subgt	r2, r7, #1
   12ddc:	addgt	r3, r2, r8
   12de0:	ble	12d40 <fputs@plt+0x1570>
   12de4:	ldrb	r1, [r2, #1]!
   12de8:	mvn	r1, r1
   12dec:	cmp	r3, r2
   12df0:	strb	r1, [r2]
   12df4:	bne	12de4 <fputs@plt+0x1614>
   12df8:	b	12d40 <fputs@plt+0x1570>
   12dfc:	ldr	r4, [fp, #252]	; 0xfc
   12e00:	ldr	r8, [sp, #92]	; 0x5c
   12e04:	ldr	r0, [sp, #56]	; 0x38
   12e08:	add	r1, r4, r5
   12e0c:	str	r6, [sp, #60]	; 0x3c
   12e10:	mov	r2, r6
   12e14:	bl	115cc <memcpy@plt>
   12e18:	b	1296c <fputs@plt+0x119c>
   12e1c:	ldr	r2, [sp, #180]	; 0xb4
   12e20:	add	r0, r8, r6
   12e24:	cmp	r0, r2
   12e28:	blt	131b4 <fputs@plt+0x19e4>
   12e2c:	ldr	r3, [sp, #64]	; 0x40
   12e30:	add	r0, sp, #328	; 0x148
   12e34:	sub	ip, r3, #56	; 0x38
   12e38:	sub	r3, r3, #52	; 0x34
   12e3c:	str	r7, [sp, #100]	; 0x64
   12e40:	mov	r1, r4
   12e44:	ldr	r5, [sp, #40]	; 0x28
   12e48:	str	r3, [sp, #92]	; 0x5c
   12e4c:	str	sl, [sp, #96]	; 0x60
   12e50:	mov	r4, r0
   12e54:	mov	r7, ip
   12e58:	b	12e8c <fputs@plt+0x16bc>
   12e5c:	mov	r2, #1
   12e60:	mov	r1, r7
   12e64:	mov	r0, r4
   12e68:	bl	11728 <jpeg_write_scanlines@plt>
   12e6c:	ldr	r2, [sp, #180]	; 0xb4
   12e70:	ldr	r1, [fp, #252]	; 0xfc
   12e74:	sub	r8, r2, r8
   12e78:	sub	r6, r6, r8
   12e7c:	cmp	r2, r6
   12e80:	add	r5, r5, r8
   12e84:	mov	r8, #0
   12e88:	bgt	12fc8 <fputs@plt+0x17f8>
   12e8c:	ldr	r0, [sp, #144]	; 0x90
   12e90:	sub	r2, r2, r8
   12e94:	add	r1, r1, r5
   12e98:	add	r0, r0, r8
   12e9c:	bl	115cc <memcpy@plt>
   12ea0:	ldr	r3, [sp, #192]	; 0xc0
   12ea4:	cmp	r3, #1
   12ea8:	bne	12e5c <fputs@plt+0x168c>
   12eac:	ldr	sl, [sp, #180]	; 0xb4
   12eb0:	lsl	r0, sl, #3
   12eb4:	bl	11668 <malloc@plt>
   12eb8:	cmp	sl, #0
   12ebc:	str	r0, [sp, #148]	; 0x94
   12ec0:	ble	12f18 <fputs@plt+0x1748>
   12ec4:	mov	r1, #0
   12ec8:	lsl	ip, r1, #3
   12ecc:	add	ip, ip, #7
   12ed0:	mov	r3, #7
   12ed4:	b	12edc <fputs@plt+0x170c>
   12ed8:	ldr	r0, [sp, #148]	; 0x94
   12edc:	ldr	r2, [sp, #144]	; 0x90
   12ee0:	sub	lr, ip, r3
   12ee4:	ldrb	r2, [r2, r1]
   12ee8:	mvn	r2, r2, asr r3
   12eec:	sub	r3, r3, #1
   12ef0:	ands	r2, r2, #1
   12ef4:	mvnne	r2, #0
   12ef8:	cmn	r3, #1
   12efc:	strb	r2, [r0, lr]
   12f00:	bne	12ed8 <fputs@plt+0x1708>
   12f04:	ldr	r3, [sp, #180]	; 0xb4
   12f08:	add	r1, r1, #1
   12f0c:	cmp	r1, r3
   12f10:	ldrlt	r0, [sp, #148]	; 0x94
   12f14:	blt	12ec8 <fputs@plt+0x16f8>
   12f18:	mov	r2, #1
   12f1c:	ldr	r1, [sp, #92]	; 0x5c
   12f20:	mov	r0, r4
   12f24:	bl	11728 <jpeg_write_scanlines@plt>
   12f28:	ldr	r0, [sp, #148]	; 0x94
   12f2c:	bl	11560 <free@plt>
   12f30:	b	12e6c <fputs@plt+0x169c>
   12f34:	add	r3, r3, r3, lsl #1
   12f38:	add	sl, sl, r3
   12f3c:	b	1296c <fputs@plt+0x119c>
   12f40:	ldr	r3, [sp, #44]	; 0x2c
   12f44:	cmp	r3, #0
   12f48:	beq	12ff0 <fputs@plt+0x1820>
   12f4c:	ldr	r3, [sp, #36]	; 0x24
   12f50:	cmp	r3, #0
   12f54:	beq	13318 <fputs@plt+0x1b48>
   12f58:	ldr	r0, [sp, #36]	; 0x24
   12f5c:	bl	11494 <fclose@plt>
   12f60:	cmp	r0, #0
   12f64:	bne	13318 <fputs@plt+0x1b48>
   12f68:	add	r0, sp, #4800	; 0x12c0
   12f6c:	add	r1, sp, #708	; 0x2c4
   12f70:	add	r0, r0, #4
   12f74:	bl	1147c <rename@plt>
   12f78:	cmp	r0, #0
   12f7c:	bne	134b8 <fputs@plt+0x1ce8>
   12f80:	ldr	r3, [sp, #68]	; 0x44
   12f84:	cmp	r3, #0
   12f88:	bne	13148 <fputs@plt+0x1978>
   12f8c:	ldr	r3, [sp, #48]	; 0x30
   12f90:	ldr	r2, [sp, #32]
   12f94:	add	r5, r3, r2
   12f98:	ldr	r3, [sp, #52]	; 0x34
   12f9c:	cmn	r3, #1
   12fa0:	mov	r3, r5
   12fa4:	beq	12fb8 <fputs@plt+0x17e8>
   12fa8:	ldr	r2, [sp, #52]	; 0x34
   12fac:	subs	r2, r2, #1
   12fb0:	str	r2, [sp, #52]	; 0x34
   12fb4:	beq	13710 <fputs@plt+0x1f40>
   12fb8:	str	r3, [sp, #32]
   12fbc:	mov	r3, #0
   12fc0:	str	r3, [sp, #36]	; 0x24
   12fc4:	b	12284 <fputs@plt+0xab4>
   12fc8:	ldr	sl, [sp, #96]	; 0x60
   12fcc:	ldr	r7, [sp, #100]	; 0x64
   12fd0:	mov	r4, r1
   12fd4:	mov	r8, r6
   12fd8:	add	r1, r1, r5
   12fdc:	ldr	r0, [sp, #144]	; 0x90
   12fe0:	mov	r2, r6
   12fe4:	add	r0, r0, r7
   12fe8:	bl	115cc <memcpy@plt>
   12fec:	b	1296c <fputs@plt+0x119c>
   12ff0:	mov	sl, #0
   12ff4:	b	125b8 <fputs@plt+0xde8>
   12ff8:	ldr	r5, [sp, #80]	; 0x50
   12ffc:	cmn	r5, #1
   13000:	beq	1300c <fputs@plt+0x183c>
   13004:	cmp	r6, #0
   13008:	bgt	1316c <fputs@plt+0x199c>
   1300c:	ldr	ip, [sp, #40]	; 0x28
   13010:	sub	r2, r6, #1
   13014:	cmp	ip, r2
   13018:	bge	13048 <fputs@plt+0x1878>
   1301c:	mov	r1, ip
   13020:	add	r0, r4, #1
   13024:	ldrb	r2, [r0, r1]
   13028:	ldrb	r3, [r4, r1]
   1302c:	strb	r2, [r4, r1]
   13030:	strb	r3, [r0, r1]
   13034:	ldr	r6, [sp, #132]	; 0x84
   13038:	add	r1, r1, #2
   1303c:	sub	r2, r6, #1
   13040:	cmp	r1, r2
   13044:	blt	13024 <fputs@plt+0x1854>
   13048:	sub	ip, r6, ip
   1304c:	tst	ip, #1
   13050:	addne	r3, r4, r6
   13054:	ldreq	r2, [sp, #132]	; 0x84
   13058:	ldrbne	r3, [r3, #-1]
   1305c:	strne	r2, [sp, #132]	; 0x84
   13060:	strne	r3, [sp, #80]	; 0x50
   13064:	b	12958 <fputs@plt+0x1188>
   13068:	add	r0, sp, #328	; 0x148
   1306c:	bl	11524 <jpeg_destroy_compress@plt>
   13070:	ldr	r0, [sp, #144]	; 0x90
   13074:	bl	11560 <free@plt>
   13078:	b	12540 <fputs@plt+0xd70>
   1307c:	ldr	r3, [sp, #64]	; 0x40
   13080:	add	r0, sp, #136	; 0x88
   13084:	sub	r1, r3, #60	; 0x3c
   13088:	bl	1171c <png_destroy_write_struct@plt>
   1308c:	ldr	r0, [sp, #56]	; 0x38
   13090:	bl	11560 <free@plt>
   13094:	ldr	r3, [fp, #244]	; 0xf4
   13098:	b	12538 <fputs@plt+0xd68>
   1309c:	ldr	r6, [r9]
   130a0:	ldr	r7, [fp, #8]
   130a4:	bl	1144c <sane_strstatus@plt>
   130a8:	mov	r3, r7
   130ac:	ldr	r2, [pc, #-2464]	; 12714 <fputs@plt+0xf44>
   130b0:	mov	r1, #1
   130b4:	mov	sl, r8
   130b8:	str	r0, [sp]
   130bc:	mov	r0, r6
   130c0:	bl	11680 <__fprintf_chk@plt>
   130c4:	ldr	r3, [sp, #36]	; 0x24
   130c8:	cmp	r3, #0
   130cc:	beq	12c50 <fputs@plt+0x1480>
   130d0:	ldr	r0, [sp, #36]	; 0x24
   130d4:	bl	11494 <fclose@plt>
   130d8:	ldr	r3, [sp, #44]	; 0x2c
   130dc:	cmp	r3, #0
   130e0:	beq	12cc8 <fputs@plt+0x14f8>
   130e4:	b	12c50 <fputs@plt+0x1480>
   130e8:	cmp	lr, #1
   130ec:	addeq	r2, r2, r2, lsl #1
   130f0:	str	r2, [sp, #4]
   130f4:	str	ip, [sp]
   130f8:	ldr	r2, [pc, #-2536]	; 12718 <fputs@plt+0xf48>
   130fc:	mov	r1, #1
   13100:	bl	11680 <__fprintf_chk@plt>
   13104:	ldr	r0, [r9]
   13108:	ldr	r3, [fp, #8]
   1310c:	ldr	lr, [sp, #172]	; 0xac
   13110:	b	12364 <fputs@plt+0xb94>
   13114:	cmp	r2, #2
   13118:	str	r4, [sp, #40]	; 0x28
   1311c:	mov	sl, #0
   13120:	ldr	r4, [sp, #180]	; 0xb4
   13124:	bne	123dc <fputs@plt+0xc0c>
   13128:	mov	r0, r4
   1312c:	bl	11668 <malloc@plt>
   13130:	str	r0, [sp, #56]	; 0x38
   13134:	b	123e4 <fputs@plt+0xc14>
   13138:	mov	r0, r4
   1313c:	bl	11668 <malloc@plt>
   13140:	str	r0, [sp, #144]	; 0x90
   13144:	b	123e4 <fputs@plt+0xc14>
   13148:	ldr	r5, [pc, #-2560]	; 12750 <fputs@plt+0xf80>
   1314c:	add	r3, sp, #708	; 0x2c4
   13150:	ldr	r2, [pc, #-2620]	; 1271c <fputs@plt+0xf4c>
   13154:	ldr	r0, [r5]
   13158:	mov	r1, #1
   1315c:	bl	11680 <__fprintf_chk@plt>
   13160:	ldr	r0, [r5]
   13164:	bl	11584 <fflush@plt>
   13168:	b	12f8c <fputs@plt+0x17bc>
   1316c:	mov	r2, #1
   13170:	mov	r0, r4
   13174:	ldr	r3, [sp, #36]	; 0x24
   13178:	mov	r1, r2
   1317c:	bl	11638 <fwrite@plt>
   13180:	ldr	r4, [fp, #252]	; 0xfc
   13184:	mvn	r3, #0
   13188:	mov	ip, #1
   1318c:	strb	r5, [r4]
   13190:	str	r3, [sp, #80]	; 0x50
   13194:	ldr	r6, [sp, #132]	; 0x84
   13198:	b	13010 <fputs@plt+0x1840>
   1319c:	ldr	r1, [sp, #60]	; 0x3c
   131a0:	ldr	r3, [sp, #56]	; 0x38
   131a4:	str	r2, [sp, #60]	; 0x3c
   131a8:	add	r0, r3, r1
   131ac:	mov	r1, r4
   131b0:	b	12e10 <fputs@plt+0x1640>
   131b4:	mov	r7, r8
   131b8:	mov	r1, r4
   131bc:	mov	r8, r0
   131c0:	b	12fdc <fputs@plt+0x180c>
   131c4:	ldr	r4, [r9]
   131c8:	ldr	r5, [fp, #8]
   131cc:	bl	1144c <sane_strstatus@plt>
   131d0:	mov	r3, r5
   131d4:	ldr	r2, [pc, #-2748]	; 12720 <fputs@plt+0xf50>
   131d8:	mov	r1, #1
   131dc:	mov	r8, r7
   131e0:	str	r0, [sp]
   131e4:	mov	r0, r4
   131e8:	bl	11680 <__fprintf_chk@plt>
   131ec:	b	1252c <fputs@plt+0xd5c>
   131f0:	ldr	r3, [sp, #72]	; 0x48
   131f4:	ldr	r2, [pc, #-2776]	; 12724 <fputs@plt+0xf54>
   131f8:	str	r3, [sp, #4]
   131fc:	ldr	r3, [sp, #76]	; 0x4c
   13200:	mov	r1, #1
   13204:	str	r3, [sp]
   13208:	ldr	r3, [fp, #8]
   1320c:	ldr	r0, [r9]
   13210:	bl	11680 <__fprintf_chk@plt>
   13214:	b	12a04 <fputs@plt+0x1234>
   13218:	ldr	r3, [sp, #32]
   1321c:	cmp	r3, #0
   13220:	ldrne	r3, [sp, #32]
   13224:	strne	r3, [sp, #28]
   13228:	bne	11d8c <fputs@plt+0x5bc>
   1322c:	mov	r1, r3
   13230:	add	r0, sp, #120	; 0x78
   13234:	bl	11434 <sane_get_devices@plt>
   13238:	cmp	r0, #0
   1323c:	bne	13278 <fputs@plt+0x1aa8>
   13240:	ldr	r3, [sp, #120]	; 0x78
   13244:	ldr	r3, [r3]
   13248:	cmp	r3, #0
   1324c:	ldrne	r3, [r3]
   13250:	strne	r3, [sp, #28]
   13254:	bne	11d8c <fputs@plt+0x5bc>
   13258:	ldr	r1, [pc, #-2740]	; 127ac <fputs@plt+0xfdc>
   1325c:	ldr	r3, [fp, #8]
   13260:	ldr	r2, [pc, #-2880]	; 12728 <fputs@plt+0xf58>
   13264:	ldr	r0, [r1]
   13268:	mov	r1, #1
   1326c:	bl	11680 <__fprintf_chk@plt>
   13270:	mov	r0, #1
   13274:	bl	15274 <fputs@plt+0x3aa4>
   13278:	ldr	r3, [pc, #-2772]	; 127ac <fputs@plt+0xfdc>
   1327c:	ldr	r5, [fp, #8]
   13280:	ldr	r4, [r3]
   13284:	bl	1144c <sane_strstatus@plt>
   13288:	mov	r3, r5
   1328c:	ldr	r2, [pc, #-2920]	; 1272c <fputs@plt+0xf5c>
   13290:	mov	r1, #1
   13294:	str	r0, [sp]
   13298:	mov	r0, r4
   1329c:	bl	11680 <__fprintf_chk@plt>
   132a0:	mov	r0, #1
   132a4:	bl	15274 <fputs@plt+0x3aa4>
   132a8:	ldr	r3, [fp, #236]	; 0xec
   132ac:	cmp	r3, #0
   132b0:	beq	12094 <fputs@plt+0x8c4>
   132b4:	ldr	r2, [sp, #28]
   132b8:	ldr	r1, [pc, #-2960]	; 12730 <fputs@plt+0xf60>
   132bc:	mov	r0, #1
   132c0:	bl	114c4 <__printf_chk@plt>
   132c4:	ldr	r0, [fp]
   132c8:	ldr	r1, [sp, #124]	; 0x7c
   132cc:	mov	r2, #1
   132d0:	bl	16440 <fputs@plt+0x4c70>
   132d4:	mov	r0, #0
   132d8:	bl	15274 <fputs@plt+0x3aa4>
   132dc:	ldr	r0, [pc, #-2992]	; 12734 <fputs@plt+0xf64>
   132e0:	bl	116d4 <puts@plt>
   132e4:	b	11c9c <fputs@plt+0x4cc>
   132e8:	ldr	r3, [pc, #-3000]	; 12738 <fputs@plt+0xf68>
   132ec:	ldr	r3, [r3, r2, lsl #2]
   132f0:	str	r3, [sp, #88]	; 0x58
   132f4:	b	12114 <fputs@plt+0x944>
   132f8:	ldr	r3, [r4]
   132fc:	mov	r2, #8
   13300:	mov	r1, #1
   13304:	ldr	r0, [pc, #-3024]	; 1273c <fputs@plt+0xf6c>
   13308:	bl	11638 <fwrite@plt>
   1330c:	ldr	r0, [r4]
   13310:	ldr	r3, [pc, #-3032]	; 12740 <fputs@plt+0xf70>
   13314:	b	12164 <fputs@plt+0x994>
   13318:	ldr	r3, [r9]
   1331c:	mov	r2, #24
   13320:	mov	r1, #1
   13324:	ldr	r0, [pc, #-3048]	; 12744 <fputs@plt+0xf74>
   13328:	bl	11638 <fwrite@plt>
   1332c:	ldr	r0, [fp]
   13330:	bl	11548 <sane_cancel@plt>
   13334:	b	12b64 <fputs@plt+0x1394>
   13338:	ldr	r4, [pc, #-2964]	; 127ac <fputs@plt+0xfdc>
   1333c:	ldr	r6, [fp, #8]
   13340:	ldr	r5, [r4]
   13344:	bl	1144c <sane_strstatus@plt>
   13348:	mov	r3, r6
   1334c:	ldr	r6, [sp, #28]
   13350:	ldr	r2, [pc, #-3088]	; 12748 <fputs@plt+0xf78>
   13354:	str	r6, [sp]
   13358:	mov	r1, #1
   1335c:	str	r0, [sp, #4]
   13360:	mov	r0, r5
   13364:	bl	11680 <__fprintf_chk@plt>
   13368:	ldrb	r3, [r6]
   1336c:	cmp	r3, #47	; 0x2f
   13370:	beq	13658 <fputs@plt+0x1e88>
   13374:	ldr	r3, [fp, #220]	; 0xdc
   13378:	cmp	r3, #0
   1337c:	beq	13270 <fputs@plt+0x1aa0>
   13380:	mov	r3, #0
   13384:	str	r3, [fp]
   13388:	ldr	r2, [fp, #8]
   1338c:	ldr	r1, [pc, #-3144]	; 1274c <fputs@plt+0xf7c>
   13390:	mov	r0, #1
   13394:	bl	114c4 <__printf_chk@plt>
   13398:	add	r0, sp, #120	; 0x78
   1339c:	mov	r1, #0
   133a0:	bl	11434 <sane_get_devices@plt>
   133a4:	ldr	r6, [pc, #-3164]	; 12750 <fputs@plt+0xf80>
   133a8:	subs	r5, r0, #0
   133ac:	bne	1372c <fputs@plt+0x1f5c>
   133b0:	ldr	r8, [pc, #-3172]	; 12754 <fputs@plt+0xf84>
   133b4:	mov	r4, #80	; 0x50
   133b8:	b	133f0 <fputs@plt+0x1c20>
   133bc:	cmp	r4, #4
   133c0:	bgt	13740 <fputs@plt+0x1f70>
   133c4:	ldr	r3, [sp, #120]	; 0x78
   133c8:	ldr	r1, [r6]
   133cc:	ldr	r3, [r3, r5]
   133d0:	ldr	r0, [r3]
   133d4:	bl	117d0 <fputs@plt>
   133d8:	ldr	r3, [sp, #120]	; 0x78
   133dc:	ldr	r3, [r3, r5]
   133e0:	add	r5, r5, #4
   133e4:	ldr	r0, [r3]
   133e8:	bl	115b4 <strlen@plt>
   133ec:	add	r4, r4, r0
   133f0:	ldr	r3, [sp, #120]	; 0x78
   133f4:	ldr	r3, [r3, r5]
   133f8:	cmp	r3, #0
   133fc:	beq	1372c <fputs@plt+0x1f5c>
   13400:	ldr	r0, [r3]
   13404:	bl	115b4 <strlen@plt>
   13408:	add	r7, r4, #1
   1340c:	add	r0, r7, r0
   13410:	cmp	r0, #79	; 0x4f
   13414:	bls	133bc <fputs@plt+0x1bec>
   13418:	mov	r1, r8
   1341c:	mov	r0, #1
   13420:	bl	114c4 <__printf_chk@plt>
   13424:	mov	r4, #4
   13428:	b	133c4 <fputs@plt+0x1bf4>
   1342c:	ldr	r2, [fp, #8]
   13430:	ldr	r1, [pc, #-3296]	; 12758 <fputs@plt+0xf88>
   13434:	mov	r0, #1
   13438:	bl	114c4 <__printf_chk@plt>
   1343c:	ldr	r1, [pc, #-3304]	; 1275c <fputs@plt+0xf8c>
   13440:	mov	r0, #1
   13444:	bl	114c4 <__printf_chk@plt>
   13448:	ldr	r0, [pc, #-3312]	; 12760 <fputs@plt+0xf90>
   1344c:	bl	116d4 <puts@plt>
   13450:	ldr	r0, [pc, #-3316]	; 12764 <fputs@plt+0xf94>
   13454:	bl	116d4 <puts@plt>
   13458:	ldr	r0, [pc, #-3320]	; 12768 <fputs@plt+0xf98>
   1345c:	bl	116d4 <puts@plt>
   13460:	b	11d80 <fputs@plt+0x5b0>
   13464:	bl	13d54 <fputs@plt+0x2584>
   13468:	str	r0, [fp, #248]	; 0xf8
   1346c:	b	120ac <fputs@plt+0x8dc>
   13470:	cmp	r1, #0
   13474:	movne	r4, #4
   13478:	ldrne	r5, [pc, #-3348]	; 1276c <fputs@plt+0xf9c>
   1347c:	beq	132dc <fputs@plt+0x1b0c>
   13480:	ldr	r0, [r1, #12]
   13484:	ldrd	r2, [r1]
   13488:	str	r0, [sp, #4]
   1348c:	ldr	r1, [r1, #8]
   13490:	mov	r0, #1
   13494:	str	r1, [sp]
   13498:	mov	r1, r5
   1349c:	bl	114c4 <__printf_chk@plt>
   134a0:	ldr	r3, [sp, #120]	; 0x78
   134a4:	ldr	r1, [r3, r4]
   134a8:	add	r4, r4, #4
   134ac:	cmp	r1, #0
   134b0:	bne	13480 <fputs@plt+0x1cb0>
   134b4:	b	11c9c <fputs@plt+0x4cc>
   134b8:	add	r3, sp, #708	; 0x2c4
   134bc:	str	r3, [sp]
   134c0:	add	r3, sp, #4800	; 0x12c0
   134c4:	add	r3, r3, #4
   134c8:	ldr	r0, [r9]
   134cc:	ldr	r2, [pc, #-3428]	; 12770 <fputs@plt+0xfa0>
   134d0:	mov	r1, #1
   134d4:	bl	11680 <__fprintf_chk@plt>
   134d8:	ldr	r0, [fp]
   134dc:	bl	11548 <sane_cancel@plt>
   134e0:	b	12b64 <fputs@plt+0x1394>
   134e4:	mov	r0, r7
   134e8:	ldr	r4, [r9]
   134ec:	ldr	r5, [fp, #8]
   134f0:	bl	1144c <sane_strstatus@plt>
   134f4:	mov	r3, r5
   134f8:	ldr	r2, [pc, #-3468]	; 12774 <fputs@plt+0xfa4>
   134fc:	mov	r1, #1
   13500:	mov	r8, r7
   13504:	str	r0, [sp]
   13508:	mov	r0, r4
   1350c:	bl	11680 <__fprintf_chk@plt>
   13510:	b	12598 <fputs@plt+0xdc8>
   13514:	ldr	r3, [sp, #40]	; 0x28
   13518:	mov	r8, r7
   1351c:	cmp	r3, #0
   13520:	beq	135b0 <fputs@plt+0x1de0>
   13524:	ldr	r2, [sp, #168]	; 0xa8
   13528:	ldr	r3, [fp, #244]	; 0xf4
   1352c:	str	r2, [sp, #160]	; 0xa0
   13530:	cmp	r3, #3
   13534:	ldrls	pc, [pc, r3, lsl #2]
   13538:	b	1357c <fputs@plt+0x1dac>
   1353c:	ldrdeq	r3, [r1], -r4
   13540:	andeq	r3, r1, ip, lsr #12
   13544:	strdeq	r3, [r1], -r0
   13548:	andeq	r3, r1, ip, asr #10
   1354c:	ldr	r3, [sp, #64]	; 0x40
   13550:	ldr	r1, [sp, #36]	; 0x24
   13554:	sub	r2, r3, #4
   13558:	add	r3, sp, #328	; 0x148
   1355c:	str	r1, [sp]
   13560:	str	r2, [sp, #8]
   13564:	str	r3, [sp, #4]
   13568:	ldr	r2, [sp, #188]	; 0xbc
   1356c:	ldr	r3, [fp, #248]	; 0xf8
   13570:	ldr	r1, [sp, #184]	; 0xb8
   13574:	ldr	r0, [sp, #172]	; 0xac
   13578:	bl	13e24 <fputs@plt+0x2654>
   1357c:	ldr	r3, [fp, #244]	; 0xf4
   13580:	cmp	r3, #1
   13584:	beq	13594 <fputs@plt+0x1dc4>
   13588:	ldr	r3, [sp, #192]	; 0xc0
   1358c:	cmp	r3, #16
   13590:	beq	13688 <fputs@plt+0x1eb8>
   13594:	ldr	r0, [sp, #156]	; 0x9c
   13598:	ldr	r2, [sp, #160]	; 0xa0
   1359c:	ldr	r3, [sp, #36]	; 0x24
   135a0:	mov	r1, #1
   135a4:	mul	r2, r0, r2
   135a8:	ldr	r0, [sp, #152]	; 0x98
   135ac:	bl	11638 <fwrite@plt>
   135b0:	ldr	r3, [fp, #244]	; 0xf4
   135b4:	cmp	r3, #2
   135b8:	beq	1367c <fputs@plt+0x1eac>
   135bc:	ldr	r3, [fp, #244]	; 0xf4
   135c0:	cmp	r3, #3
   135c4:	beq	13670 <fputs@plt+0x1ea0>
   135c8:	ldr	r0, [sp, #36]	; 0x24
   135cc:	bl	11584 <fflush@plt>
   135d0:	b	1252c <fputs@plt+0xd5c>
   135d4:	ldr	r3, [sp, #36]	; 0x24
   135d8:	ldr	r1, [sp, #184]	; 0xb8
   135dc:	str	r3, [sp]
   135e0:	ldr	r0, [sp, #172]	; 0xac
   135e4:	ldr	r3, [sp, #192]	; 0xc0
   135e8:	bl	161f8 <fputs@plt+0x4a28>
   135ec:	b	1357c <fputs@plt+0x1dac>
   135f0:	add	ip, sp, #136	; 0x88
   135f4:	ldr	r0, [fp, #224]	; 0xe0
   135f8:	ldr	r3, [sp, #64]	; 0x40
   135fc:	str	ip, [sp, #12]
   13600:	ldr	ip, [sp, #36]	; 0x24
   13604:	ldr	r1, [fp, #248]	; 0xf8
   13608:	sub	r3, r3, #60	; 0x3c
   1360c:	stmib	sp, {r0, ip}
   13610:	str	r1, [sp]
   13614:	str	r3, [sp, #16]
   13618:	ldr	r1, [sp, #184]	; 0xb8
   1361c:	ldr	r3, [sp, #192]	; 0xc0
   13620:	ldr	r0, [sp, #172]	; 0xac
   13624:	bl	14ff8 <fputs@plt+0x3828>
   13628:	b	1357c <fputs@plt+0x1dac>
   1362c:	ldr	r1, [fp, #224]	; 0xe0
   13630:	ldr	r3, [fp, #248]	; 0xf8
   13634:	ldr	r0, [sp, #36]	; 0x24
   13638:	str	r1, [sp, #4]
   1363c:	str	r0, [sp, #8]
   13640:	str	r3, [sp]
   13644:	ldr	r1, [sp, #184]	; 0xb8
   13648:	ldr	r3, [sp, #192]	; 0xc0
   1364c:	ldr	r0, [sp, #172]	; 0xac
   13650:	bl	169c0 <fputs@plt+0x51f0>
   13654:	b	1357c <fputs@plt+0x1dac>
   13658:	ldr	r3, [r4]
   1365c:	ldr	r2, [pc, #-3820]	; 12778 <fputs@plt+0xfa8>
   13660:	mov	r1, #1
   13664:	ldr	r0, [pc, #-3824]	; 1277c <fputs@plt+0xfac>
   13668:	bl	11638 <fwrite@plt>
   1366c:	b	13374 <fputs@plt+0x1ba4>
   13670:	add	r0, sp, #328	; 0x148
   13674:	bl	117c4 <jpeg_finish_compress@plt>
   13678:	b	135c8 <fputs@plt+0x1df8>
   1367c:	ldrd	r0, [sp, #136]	; 0x88
   13680:	bl	11464 <png_write_end@plt>
   13684:	b	135bc <fputs@plt+0x1dec>
   13688:	mov	r3, #0
   1368c:	b	136ac <fputs@plt+0x1edc>
   13690:	add	r2, r3, #1
   13694:	ldrb	r0, [r1, r3]
   13698:	ldrb	ip, [r1, r2]
   1369c:	strb	ip, [r1, r3]
   136a0:	ldr	r1, [sp, #152]	; 0x98
   136a4:	add	r3, r3, #2
   136a8:	strb	r0, [r1, r2]
   136ac:	ldr	r0, [sp, #160]	; 0xa0
   136b0:	ldr	r2, [sp, #156]	; 0x9c
   136b4:	ldr	r1, [sp, #152]	; 0x98
   136b8:	mul	r2, r2, r0
   136bc:	cmp	r3, r2
   136c0:	blt	13690 <fputs@plt+0x1ec0>
   136c4:	b	13594 <fputs@plt+0x1dc4>
   136c8:	ldr	r1, [sp, #128]	; 0x80
   136cc:	ldr	r3, [pc, #-3924]	; 12780 <fputs@plt+0xfb0>
   136d0:	ldr	r2, [pc, #-3924]	; 12784 <fputs@plt+0xfb4>
   136d4:	asr	r0, r1, #16
   136d8:	uxth	ip, r1
   136dc:	uxtb	r0, r0
   136e0:	lsr	r1, r1, #24
   136e4:	stmib	sp, {r0, ip}
   136e8:	str	r1, [sp]
   136ec:	mov	r0, #1
   136f0:	ldr	r1, [pc, #-3952]	; 12788 <fputs@plt+0xfb8>
   136f4:	bl	114c4 <__printf_chk@plt>
   136f8:	b	11cb8 <fputs@plt+0x4e8>
   136fc:	ldr	r3, [sp, #36]	; 0x24
   13700:	cmp	r3, #0
   13704:	beq	13710 <fputs@plt+0x1f40>
   13708:	mov	r0, r3
   1370c:	bl	11494 <fclose@plt>
   13710:	mov	sl, #0
   13714:	b	12c50 <fputs@plt+0x1480>
   13718:	ldr	r3, [pc, #-3988]	; 1278c <fputs@plt+0xfbc>
   1371c:	ldr	r2, [pc, #-3988]	; 12790 <fputs@plt+0xfc0>
   13720:	ldr	r1, [pc, #-3984]	; 12798 <fputs@plt+0xfc8>
   13724:	ldr	r0, [pc, #-3992]	; 12794 <fputs@plt+0xfc4>
   13728:	bl	11530 <__assert_fail@plt>
   1372c:	ldr	r1, [r6]
   13730:	mov	r0, #10
   13734:	bl	1168c <fputc@plt>
   13738:	mov	r0, #0
   1373c:	bl	15274 <fputs@plt+0x3aa4>
   13740:	ldr	r1, [r6]
   13744:	mov	r0, #32
   13748:	bl	1168c <fputc@plt>
   1374c:	mov	r4, r7
   13750:	b	133c4 <fputs@plt+0x1bf4>
   13754:	bl	11674 <__stack_chk_fail@plt>
   13758:	ldr	r1, [pc, #-4020]	; 127ac <fputs@plt+0xfdc>
   1375c:	ldr	r3, [fp, #8]
   13760:	ldr	r2, [pc, #-4044]	; 1279c <fputs@plt+0xfcc>
   13764:	b	13264 <fputs@plt+0x1a94>
   13768:	ldr	r1, [pc, #-4036]	; 127ac <fputs@plt+0xfdc>
   1376c:	ldr	r3, [fp, #8]
   13770:	ldr	r2, [pc, #-4056]	; 127a0 <fputs@plt+0xfd0>
   13774:	b	13264 <fputs@plt+0x1a94>
   13778:	ldr	r1, [pc, #-4052]	; 127ac <fputs@plt+0xfdc>
   1377c:	ldr	r3, [fp, #8]
   13780:	ldr	r2, [pc, #-4068]	; 127a4 <fputs@plt+0xfd4>
   13784:	b	13264 <fputs@plt+0x1a94>
   13788:	ldr	r1, [pc, #-4068]	; 127ac <fputs@plt+0xfdc>
   1378c:	ldr	r3, [fp, #8]
   13790:	ldr	r2, [pc, #-4080]	; 127a8 <fputs@plt+0xfd8>
   13794:	b	13264 <fputs@plt+0x1a94>
   13798:	ldr	r1, [pc, #-4084]	; 127ac <fputs@plt+0xfdc>
   1379c:	ldr	r3, [fp, #8]
   137a0:	ldr	r2, [pc, #928]	; 13b48 <fputs@plt+0x2378>
   137a4:	b	13264 <fputs@plt+0x1a94>
   137a8:	ldr	r4, [pc, #924]	; 13b4c <fputs@plt+0x237c>
   137ac:	ldr	r7, [fp, #8]
   137b0:	mov	sl, r8
   137b4:	ldr	r6, [r4]
   137b8:	bl	1144c <sane_strstatus@plt>
   137bc:	mov	r3, r7
   137c0:	ldr	r2, [pc, #904]	; 13b50 <fputs@plt+0x2380>
   137c4:	mov	r1, #1
   137c8:	str	r0, [sp]
   137cc:	mov	r0, r6
   137d0:	bl	11680 <__fprintf_chk@plt>
   137d4:	ldr	r3, [sp, #36]	; 0x24
   137d8:	cmp	r3, #0
   137dc:	bne	130d0 <fputs@plt+0x1900>
   137e0:	b	12cc8 <fputs@plt+0x14f8>
   137e4:	ldr	r3, [pc, #872]	; 13b54 <fputs@plt+0x2384>
   137e8:	ldr	r2, [pc, #872]	; 13b58 <fputs@plt+0x2388>
   137ec:	ldr	r1, [pc, #872]	; 13b5c <fputs@plt+0x238c>
   137f0:	ldr	r0, [pc, #872]	; 13b60 <fputs@plt+0x2390>
   137f4:	bl	11530 <__assert_fail@plt>
   137f8:	sub	r6, r6, #-1073741823	; 0xc0000001
   137fc:	ldr	r4, [pc, #840]	; 13b4c <fputs@plt+0x237c>
   13800:	ldr	r2, [r5, r6, lsl #2]
   13804:	ldr	r3, [fp, #8]
   13808:	str	r2, [sp]
   1380c:	mov	r1, #1
   13810:	ldr	r2, [pc, #844]	; 13b64 <fputs@plt+0x2394>
   13814:	ldr	r0, [r4]
   13818:	bl	11680 <__fprintf_chk@plt>
   1381c:	ldr	r0, [r4]
   13820:	ldr	r3, [fp, #8]
   13824:	ldr	r2, [pc, #828]	; 13b68 <fputs@plt+0x2398>
   13828:	mov	r1, #1
   1382c:	bl	11680 <__fprintf_chk@plt>
   13830:	mov	r0, #1
   13834:	bl	15274 <fputs@plt+0x3aa4>
   13838:	ldr	r3, [pc, #788]	; 13b54 <fputs@plt+0x2384>
   1383c:	ldr	r2, [pc, #808]	; 13b6c <fputs@plt+0x239c>
   13840:	ldr	r1, [pc, #788]	; 13b5c <fputs@plt+0x238c>
   13844:	ldr	r0, [pc, #804]	; 13b70 <fputs@plt+0x23a0>
   13848:	bl	11530 <__assert_fail@plt>
   1384c:	ldr	r0, [fp]
   13850:	bl	1159c <sane_start@plt>
   13854:	subs	sl, r0, #0
   13858:	bne	13ac0 <fputs@plt+0x22f0>
   1385c:	add	r7, sp, #200	; 0xc8
   13860:	sub	r1, r7, #28
   13864:	ldr	r0, [fp]
   13868:	bl	1165c <sane_get_parameters@plt>
   1386c:	subs	sl, r0, #0
   13870:	bne	13b14 <fputs@plt+0x2344>
   13874:	ldr	lr, [sp, #188]	; 0xbc
   13878:	ldr	r4, [pc, #716]	; 13b4c <fputs@plt+0x237c>
   1387c:	cmp	lr, #0
   13880:	ldr	r3, [fp, #8]
   13884:	ldr	r0, [r4]
   13888:	ldr	r1, [sp, #184]	; 0xb8
   1388c:	ldr	r2, [sp, #192]	; 0xc0
   13890:	ldr	ip, [sp, #172]	; 0xac
   13894:	blt	13aec <fputs@plt+0x231c>
   13898:	cmp	ip, #1
   1389c:	moveq	ip, #3
   138a0:	movne	ip, #1
   138a4:	str	r1, [sp]
   138a8:	mul	r2, r2, ip
   138ac:	str	lr, [sp, #4]
   138b0:	str	r2, [sp, #8]
   138b4:	mov	r1, #1
   138b8:	ldr	r2, [pc, #692]	; 13b74 <fputs@plt+0x23a4>
   138bc:	bl	11680 <__fprintf_chk@plt>
   138c0:	ldr	r2, [sp, #172]	; 0xac
   138c4:	ldr	r3, [fp, #8]
   138c8:	cmp	r2, #4
   138cc:	ldr	r0, [r4]
   138d0:	ldrls	r1, [pc, #672]	; 13b78 <fputs@plt+0x23a8>
   138d4:	ldrhi	r2, [pc, #672]	; 13b7c <fputs@plt+0x23ac>
   138d8:	sub	r7, r7, #48	; 0x30
   138dc:	ldrls	r2, [r1, r2, lsl #2]
   138e0:	ldr	r1, [sp, #192]	; 0xc0
   138e4:	str	r2, [sp]
   138e8:	str	r1, [sp, #4]
   138ec:	ldr	r2, [pc, #652]	; 13b80 <fputs@plt+0x23b0>
   138f0:	mov	r1, #1
   138f4:	bl	11680 <__fprintf_chk@plt>
   138f8:	ldr	r6, [sp, #180]	; 0xb4
   138fc:	lsl	r8, r6, #1
   13900:	mov	r0, r8
   13904:	bl	11668 <malloc@plt>
   13908:	mov	r2, r8
   1390c:	mov	r1, #35	; 0x23
   13910:	mov	r5, r0
   13914:	bl	11500 <memset@plt>
   13918:	str	r6, [sp]
   1391c:	ldr	r3, [fp, #8]
   13920:	ldr	r2, [pc, #604]	; 13b84 <fputs@plt+0x23b4>
   13924:	mov	r1, #1
   13928:	ldr	r0, [r4]
   1392c:	bl	11680 <__fprintf_chk@plt>
   13930:	mov	r3, r7
   13934:	mov	r1, r5
   13938:	ldr	r2, [sp, #180]	; 0xb4
   1393c:	ldr	r0, [fp]
   13940:	bl	11410 <sane_read@plt>
   13944:	mov	r2, r5
   13948:	ldr	r1, [sp, #152]	; 0x98
   1394c:	mov	sl, r0
   13950:	mov	r3, r0
   13954:	ldr	r0, [sp, #180]	; 0xb4
   13958:	bl	162a8 <fputs@plt+0x4ad8>
   1395c:	cmp	sl, #0
   13960:	bne	13aac <fputs@plt+0x22dc>
   13964:	ldr	r2, [sp, #180]	; 0xb4
   13968:	mov	r1, #35	; 0x23
   1396c:	mov	r0, r5
   13970:	lsl	r2, r2, #1
   13974:	bl	11500 <memset@plt>
   13978:	ldr	r3, [fp, #8]
   1397c:	ldr	r2, [pc, #516]	; 13b88 <fputs@plt+0x23b8>
   13980:	mov	r1, #1
   13984:	ldr	r0, [r4]
   13988:	bl	11680 <__fprintf_chk@plt>
   1398c:	mov	r3, r7
   13990:	mov	r2, #1
   13994:	mov	r1, r5
   13998:	ldr	r0, [fp]
   1399c:	bl	11410 <sane_read@plt>
   139a0:	mov	r2, r5
   139a4:	ldr	r1, [sp, #152]	; 0x98
   139a8:	mov	sl, r0
   139ac:	mov	r3, r0
   139b0:	mov	r0, #1
   139b4:	bl	162a8 <fputs@plt+0x4ad8>
   139b8:	cmp	sl, #0
   139bc:	bne	13aac <fputs@plt+0x22dc>
   139c0:	mov	r6, #2
   139c4:	ldr	r8, [pc, #448]	; 13b8c <fputs@plt+0x23bc>
   139c8:	b	13a28 <fputs@plt+0x2258>
   139cc:	mov	r1, #35	; 0x23
   139d0:	mov	r0, r5
   139d4:	bl	11500 <memset@plt>
   139d8:	str	r6, [sp]
   139dc:	ldr	r3, [fp, #8]
   139e0:	mov	r2, r8
   139e4:	mov	r1, #1
   139e8:	ldr	r0, [r4]
   139ec:	bl	11680 <__fprintf_chk@plt>
   139f0:	mov	r3, r7
   139f4:	mov	r2, r6
   139f8:	mov	r1, r5
   139fc:	ldr	r0, [fp]
   13a00:	bl	11410 <sane_read@plt>
   13a04:	mov	r2, r5
   13a08:	ldr	r1, [sp, #152]	; 0x98
   13a0c:	mov	r9, r0
   13a10:	mov	r3, r0
   13a14:	mov	r0, r6
   13a18:	bl	162a8 <fputs@plt+0x4ad8>
   13a1c:	cmp	r9, #0
   13a20:	bne	13aa8 <fputs@plt+0x22d8>
   13a24:	lsl	r6, r6, #1
   13a28:	ldr	r2, [sp, #180]	; 0xb4
   13a2c:	lsl	r2, r2, #1
   13a30:	cmp	r2, r6
   13a34:	bgt	139cc <fputs@plt+0x21fc>
   13a38:	asr	r6, r6, #1
   13a3c:	cmp	r6, #2
   13a40:	ble	13aac <fputs@plt+0x22dc>
   13a44:	ldr	r2, [sp, #180]	; 0xb4
   13a48:	sub	r8, r6, #1
   13a4c:	mov	r1, #35	; 0x23
   13a50:	lsl	r2, r2, #1
   13a54:	mov	r0, r5
   13a58:	bl	11500 <memset@plt>
   13a5c:	str	r8, [sp]
   13a60:	ldr	r3, [fp, #8]
   13a64:	ldr	r2, [pc, #288]	; 13b8c <fputs@plt+0x23bc>
   13a68:	mov	r1, #1
   13a6c:	ldr	r0, [r4]
   13a70:	bl	11680 <__fprintf_chk@plt>
   13a74:	mov	r3, r7
   13a78:	mov	r2, r8
   13a7c:	mov	r1, r5
   13a80:	ldr	r0, [fp]
   13a84:	bl	11410 <sane_read@plt>
   13a88:	mov	r2, r5
   13a8c:	ldr	r1, [sp, #152]	; 0x98
   13a90:	mov	r9, r0
   13a94:	mov	r3, r0
   13a98:	mov	r0, r8
   13a9c:	bl	162a8 <fputs@plt+0x4ad8>
   13aa0:	cmp	r9, #0
   13aa4:	beq	13a38 <fputs@plt+0x2268>
   13aa8:	mov	sl, r9
   13aac:	ldr	r0, [fp]
   13ab0:	bl	11548 <sane_cancel@plt>
   13ab4:	mov	r0, r5
   13ab8:	bl	11560 <free@plt>
   13abc:	b	12cd0 <fputs@plt+0x1500>
   13ac0:	ldr	r3, [pc, #132]	; 13b4c <fputs@plt+0x237c>
   13ac4:	ldr	r5, [fp, #8]
   13ac8:	ldr	r4, [r3]
   13acc:	bl	1144c <sane_strstatus@plt>
   13ad0:	mov	r3, r5
   13ad4:	ldr	r2, [pc, #116]	; 13b50 <fputs@plt+0x2380>
   13ad8:	mov	r1, #1
   13adc:	str	r0, [sp]
   13ae0:	mov	r0, r4
   13ae4:	bl	11680 <__fprintf_chk@plt>
   13ae8:	b	12cc8 <fputs@plt+0x14f8>
   13aec:	cmp	ip, #1
   13af0:	moveq	ip, #3
   13af4:	movne	ip, #1
   13af8:	str	r1, [sp]
   13afc:	mul	r2, r2, ip
   13b00:	mov	r1, #1
   13b04:	str	r2, [sp, #4]
   13b08:	ldr	r2, [pc, #128]	; 13b90 <fputs@plt+0x23c0>
   13b0c:	bl	11680 <__fprintf_chk@plt>
   13b10:	b	138c0 <fputs@plt+0x20f0>
   13b14:	ldr	r3, [pc, #48]	; 13b4c <fputs@plt+0x237c>
   13b18:	ldr	r5, [fp, #8]
   13b1c:	ldr	r4, [r3]
   13b20:	bl	1144c <sane_strstatus@plt>
   13b24:	mov	r3, r5
   13b28:	ldr	r2, [pc, #100]	; 13b94 <fputs@plt+0x23c4>
   13b2c:	mov	r1, #1
   13b30:	str	r0, [sp]
   13b34:	mov	r0, r4
   13b38:	bl	11680 <__fprintf_chk@plt>
   13b3c:	b	12cc8 <fputs@plt+0x14f8>
   13b40:	ldr	r4, [sp, #180]	; 0xb4
   13b44:	b	123dc <fputs@plt+0xc0c>
   13b48:	andeq	r8, r1, r4, ror #26
   13b4c:	andeq	sl, r2, r0, lsl #3
   13b50:	andeq	r8, r1, r0, lsr #28
   13b54:	andeq	r7, r1, r4, ror #14
   13b58:	andeq	r0, r0, r4, ror r5
   13b5c:	strdeq	r8, [r1], -r0
   13b60:	strdeq	r8, [r1], -ip
   13b64:	andeq	r8, r1, r0, asr #24
   13b68:	andeq	r8, r1, r4, ror #24
   13b6c:	andeq	r0, r0, sl, ror r5
   13b70:	andeq	r8, r1, ip, lsl #30
   13b74:	andeq	r8, r1, r4, asr lr
   13b78:	andeq	r7, r1, r0, asr r7
   13b7c:	andeq	r8, r1, r0, asr r0
   13b80:	andeq	r9, r1, r8, ror #1
   13b84:	andeq	r9, r1, r0, lsl r1
   13b88:	andeq	r9, r1, r8, lsr r1
   13b8c:	andeq	r9, r1, r4, asr r1
   13b90:	muleq	r1, r0, lr
   13b94:	andeq	r8, r1, r4, lsr lr
   13b98:	mov	fp, #0
   13b9c:	mov	lr, #0
   13ba0:	pop	{r1}		; (ldr r1, [sp], #4)
   13ba4:	mov	r2, sp
   13ba8:	push	{r2}		; (str r2, [sp, #-4]!)
   13bac:	push	{r0}		; (str r0, [sp, #-4]!)
   13bb0:	ldr	ip, [pc, #16]	; 13bc8 <fputs@plt+0x23f8>
   13bb4:	push	{ip}		; (str ip, [sp, #-4]!)
   13bb8:	ldr	r0, [pc, #12]	; 13bcc <fputs@plt+0x23fc>
   13bbc:	ldr	r3, [pc, #12]	; 13bd0 <fputs@plt+0x2400>
   13bc0:	bl	11428 <__libc_start_main@plt>
   13bc4:	bl	11404 <abort@plt>
   13bc8:	andeq	r7, r1, r0, lsr r7
   13bcc:	andeq	r1, r1, r0, ror #15
   13bd0:	ldrdeq	r7, [r1], -r0
   13bd4:	ldr	r3, [pc, #20]	; 13bf0 <fputs@plt+0x2420>
   13bd8:	ldr	r2, [pc, #20]	; 13bf4 <fputs@plt+0x2424>
   13bdc:	add	r3, pc, r3
   13be0:	ldr	r2, [r3, r2]
   13be4:	cmp	r2, #0
   13be8:	bxeq	lr
   13bec:	b	11458 <__gmon_start__@plt>
   13bf0:	andeq	r6, r1, r0, asr #5
   13bf4:	andeq	r0, r0, r8, asr r1
   13bf8:	ldr	r0, [pc, #24]	; 13c18 <fputs@plt+0x2448>
   13bfc:	ldr	r3, [pc, #24]	; 13c1c <fputs@plt+0x244c>
   13c00:	cmp	r3, r0
   13c04:	bxeq	lr
   13c08:	ldr	r3, [pc, #16]	; 13c20 <fputs@plt+0x2450>
   13c0c:	cmp	r3, #0
   13c10:	bxeq	lr
   13c14:	bx	r3
   13c18:	andeq	sl, r2, r0, ror r1
   13c1c:	andeq	sl, r2, r0, ror r1
   13c20:	andeq	r0, r0, r0
   13c24:	ldr	r0, [pc, #36]	; 13c50 <fputs@plt+0x2480>
   13c28:	ldr	r1, [pc, #36]	; 13c54 <fputs@plt+0x2484>
   13c2c:	sub	r1, r1, r0
   13c30:	asr	r1, r1, #2
   13c34:	add	r1, r1, r1, lsr #31
   13c38:	asrs	r1, r1, #1
   13c3c:	bxeq	lr
   13c40:	ldr	r3, [pc, #16]	; 13c58 <fputs@plt+0x2488>
   13c44:	cmp	r3, #0
   13c48:	bxeq	lr
   13c4c:	bx	r3
   13c50:	andeq	sl, r2, r0, ror r1
   13c54:	andeq	sl, r2, r0, ror r1
   13c58:	andeq	r0, r0, r0
   13c5c:	push	{r4, lr}
   13c60:	ldr	r4, [pc, #24]	; 13c80 <fputs@plt+0x24b0>
   13c64:	ldrb	r3, [r4]
   13c68:	cmp	r3, #0
   13c6c:	popne	{r4, pc}
   13c70:	bl	13bf8 <fputs@plt+0x2428>
   13c74:	mov	r3, #1
   13c78:	strb	r3, [r4]
   13c7c:	pop	{r4, pc}
   13c80:	muleq	r2, r0, r1
   13c84:	b	13c24 <fputs@plt+0x2454>
   13c88:	sub	r0, r0, #1
   13c8c:	cmp	r0, #5
   13c90:	ldrls	pc, [pc, r0, lsl #2]
   13c94:	b	13d38 <fputs@plt+0x2568>
   13c98:	ldrdeq	r3, [r1], -r8
   13c9c:	strdeq	r3, [r1], -r0
   13ca0:	andeq	r3, r1, r8, lsl #26
   13ca4:	andeq	r3, r1, r0, lsr #26
   13ca8:			; <UNDEFINED> instruction: 0x00013cb0
   13cac:	andeq	r3, r1, r0, asr #25
   13cb0:	ldr	r3, [pc, #132]	; 13d3c <fputs@plt+0x256c>
   13cb4:	mov	r0, #37	; 0x25
   13cb8:	ldr	r1, [r3]
   13cbc:	b	1168c <fputc@plt>
   13cc0:	ldr	r3, [pc, #116]	; 13d3c <fputs@plt+0x256c>
   13cc4:	mov	r2, #2
   13cc8:	mov	r1, #1
   13ccc:	ldr	r3, [r3]
   13cd0:	ldr	r0, [pc, #104]	; 13d40 <fputs@plt+0x2570>
   13cd4:	b	11638 <fwrite@plt>
   13cd8:	ldr	r3, [pc, #92]	; 13d3c <fputs@plt+0x256c>
   13cdc:	mov	r2, #3
   13ce0:	mov	r1, #1
   13ce4:	ldr	r3, [r3]
   13ce8:	ldr	r0, [pc, #84]	; 13d44 <fputs@plt+0x2574>
   13cec:	b	11638 <fwrite@plt>
   13cf0:	ldr	r3, [pc, #68]	; 13d3c <fputs@plt+0x256c>
   13cf4:	mov	r2, #3
   13cf8:	mov	r1, #1
   13cfc:	ldr	r3, [r3]
   13d00:	ldr	r0, [pc, #64]	; 13d48 <fputs@plt+0x2578>
   13d04:	b	11638 <fwrite@plt>
   13d08:	ldr	r3, [pc, #44]	; 13d3c <fputs@plt+0x256c>
   13d0c:	mov	r2, #2
   13d10:	mov	r1, #1
   13d14:	ldr	r3, [r3]
   13d18:	ldr	r0, [pc, #44]	; 13d4c <fputs@plt+0x257c>
   13d1c:	b	11638 <fwrite@plt>
   13d20:	ldr	r3, [pc, #20]	; 13d3c <fputs@plt+0x256c>
   13d24:	mov	r2, #3
   13d28:	mov	r1, #1
   13d2c:	ldr	r3, [r3]
   13d30:	ldr	r0, [pc, #24]	; 13d50 <fputs@plt+0x2580>
   13d34:	b	11638 <fwrite@plt>
   13d38:	bx	lr
   13d3c:	andeq	sl, r2, ip, ror r1
   13d40:	andeq	r7, r1, ip, ror r7
   13d44:	andeq	r7, r1, ip, ror #14
   13d48:	andeq	r7, r1, r0, ror r7
   13d4c:	andeq	r7, r1, r4, ror r7
   13d50:	andeq	r7, r1, r8, ror r7
   13d54:	push	{r4, r5, r6, r7, r8, fp, lr}
   13d58:	add	fp, sp, #24
   13d5c:	ldr	r5, [pc, #180]	; 13e18 <fputs@plt+0x2648>
   13d60:	ldr	r4, [pc, #180]	; 13e1c <fputs@plt+0x264c>
   13d64:	sub	sp, sp, #20
   13d68:	ldr	r1, [r5]
   13d6c:	ldr	r3, [r4]
   13d70:	cmp	r1, #0
   13d74:	str	r3, [fp, #-32]	; 0xffffffe0
   13d78:	blt	13de8 <fputs@plt+0x2618>
   13d7c:	ldr	r6, [pc, #156]	; 13e20 <fputs@plt+0x2650>
   13d80:	ldr	r0, [r6]
   13d84:	bl	116bc <sane_get_option_descriptor@plt>
   13d88:	subs	r7, r0, #0
   13d8c:	beq	13de8 <fputs@plt+0x2618>
   13d90:	ldr	r3, [r7, #20]
   13d94:	mov	r2, #0
   13d98:	add	r3, r3, #7
   13d9c:	bic	r3, r3, #7
   13da0:	sub	sp, sp, r3
   13da4:	add	r8, sp, #8
   13da8:	mov	r3, r8
   13dac:	ldr	r1, [r5]
   13db0:	ldr	r0, [r6]
   13db4:	str	r2, [sp]
   13db8:	bl	116e0 <sane_control_option@plt>
   13dbc:	ldr	r3, [r7, #12]
   13dc0:	cmp	r3, #1
   13dc4:	vldrne	s12, [r8]
   13dc8:	vldrne	d7, [pc, #56]	; 13e08 <fputs@plt+0x2638>
   13dcc:	vldrne	d5, [pc, #60]	; 13e10 <fputs@plt+0x2640>
   13dd0:	ldreq	r0, [r8]
   13dd4:	vcvtne.f64.s32	d6, s12
   13dd8:	vmlane.f64	d7, d6, d5
   13ddc:	vcvtne.s32.f64	s15, d7
   13de0:	vmovne	r0, s15
   13de4:	b	13dec <fputs@plt+0x261c>
   13de8:	mov	r0, #0
   13dec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13df0:	ldr	r3, [r4]
   13df4:	cmp	r2, r3
   13df8:	bne	13e04 <fputs@plt+0x2634>
   13dfc:	sub	sp, fp, #24
   13e00:	pop	{r4, r5, r6, r7, r8, fp, pc}
   13e04:	bl	11674 <__stack_chk_fail@plt>
   13e08:	andeq	r0, r0, r0
   13e0c:	svccc	0x00e00000
   13e10:	andeq	r0, r0, r0
   13e14:	cdpcc	0, 15, cr0, cr0, cr0, {0}
   13e18:	andeq	sl, r2, r8
   13e1c:	andeq	r9, r2, r8, lsl #27
   13e20:	muleq	r2, r4, r1
   13e24:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13e28:	mov	r5, r0
   13e2c:	ldr	r0, [sp, #40]	; 0x28
   13e30:	ldr	r4, [sp, #36]	; 0x24
   13e34:	mov	r6, r3
   13e38:	mov	r8, r1
   13e3c:	mov	r7, r2
   13e40:	ldr	r9, [sp, #32]
   13e44:	bl	117ac <jpeg_std_error@plt>
   13e48:	mov	r2, #376	; 0x178
   13e4c:	mov	r1, #62	; 0x3e
   13e50:	sub	r5, r5, #1
   13e54:	str	r0, [r4]
   13e58:	mov	r0, r4
   13e5c:	bl	11608 <jpeg_CreateCompress@plt>
   13e60:	mov	r1, r9
   13e64:	mov	r0, r4
   13e68:	bl	11704 <jpeg_stdio_dest@plt>
   13e6c:	cmp	r5, #3
   13e70:	movls	r2, #3
   13e74:	movls	r3, #2
   13e78:	movhi	r3, #1
   13e7c:	mov	r0, r4
   13e80:	str	r8, [r4, #28]
   13e84:	str	r7, [r4, #32]
   13e88:	mov	r5, #1
   13e8c:	strdls	r2, [r4, #36]	; 0x24
   13e90:	strhi	r3, [r4, #40]	; 0x28
   13e94:	strhi	r3, [r4, #36]	; 0x24
   13e98:	bl	116a4 <jpeg_set_defaults@plt>
   13e9c:	uxth	r3, r6
   13ea0:	mov	r0, r4
   13ea4:	strh	r3, [r4, #218]	; 0xda
   13ea8:	strh	r3, [r4, #216]	; 0xd8
   13eac:	strb	r5, [r4, #214]	; 0xd6
   13eb0:	str	r5, [r4, #208]	; 0xd0
   13eb4:	mov	r2, r5
   13eb8:	mov	r1, #75	; 0x4b
   13ebc:	bl	1150c <jpeg_set_quality@plt>
   13ec0:	mov	r1, r5
   13ec4:	mov	r0, r4
   13ec8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13ecc:	b	1156c <jpeg_start_compress@plt>
   13ed0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ed4:	mov	r8, r1
   13ed8:	ldr	r7, [pc, #1420]	; 1446c <fputs@plt+0x2c9c>
   13edc:	sub	sp, sp, #580	; 0x244
   13ee0:	mov	r3, #0
   13ee4:	ldr	r1, [r7]
   13ee8:	mov	r5, r0
   13eec:	ldr	r0, [pc, #1404]	; 14470 <fputs@plt+0x2ca0>
   13ef0:	mov	r6, r2
   13ef4:	str	r1, [sp, #572]	; 0x23c
   13ef8:	strb	r3, [sp, #184]	; 0xb8
   13efc:	bl	114b8 <getenv@plt>
   13f00:	cmp	r0, #0
   13f04:	beq	13f1c <fputs@plt+0x274c>
   13f08:	ldr	r0, [pc, #1376]	; 14470 <fputs@plt+0x2ca0>
   13f0c:	bl	114b8 <getenv@plt>
   13f10:	bl	115b4 <strlen@plt>
   13f14:	cmp	r0, #500	; 0x1f4
   13f18:	bcc	140e4 <fputs@plt+0x2914>
   13f1c:	ldrb	r3, [sp, #184]	; 0xb8
   13f20:	cmp	r3, #0
   13f24:	bne	13fe8 <fputs@plt+0x2818>
   13f28:	ldr	r1, [pc, #1348]	; 14474 <fputs@plt+0x2ca4>
   13f2c:	mov	r0, r5
   13f30:	bl	11620 <strstr@plt>
   13f34:	cmp	r0, #0
   13f38:	beq	14060 <fputs@plt+0x2890>
   13f3c:	ldr	r9, [pc, #1332]	; 14478 <fputs@plt+0x2ca8>
   13f40:	sub	r3, r0, r5
   13f44:	stm	sp, {r3, r5}
   13f48:	ldr	r2, [pc, #1324]	; 1447c <fputs@plt+0x2cac>
   13f4c:	mov	r1, #1
   13f50:	ldr	r0, [r9]
   13f54:	bl	11680 <__fprintf_chk@plt>
   13f58:	ldr	r3, [pc, #1312]	; 14480 <fputs@plt+0x2cb0>
   13f5c:	mov	r1, #128	; 0x80
   13f60:	mov	r0, r8
   13f64:	ldr	r2, [r3]
   13f68:	bl	114ac <fgets@plt>
   13f6c:	subs	r4, r0, #0
   13f70:	beq	143f4 <fputs@plt+0x2c24>
   13f74:	ldrb	r4, [r8]
   13f78:	cmp	r4, #0
   13f7c:	movne	r4, #1
   13f80:	beq	14430 <fputs@plt+0x2c60>
   13f84:	mov	r0, r8
   13f88:	bl	115b4 <strlen@plt>
   13f8c:	sub	r0, r0, #1
   13f90:	ldrb	r3, [r8, r0]
   13f94:	cmp	r3, #10
   13f98:	moveq	r3, #0
   13f9c:	strbeq	r3, [r8, r0]
   13fa0:	ldr	r0, [pc, #1244]	; 14484 <fputs@plt+0x2cb4>
   13fa4:	bl	114a0 <getpass@plt>
   13fa8:	mov	r1, r0
   13fac:	mov	r8, r0
   13fb0:	mov	r0, r6
   13fb4:	bl	114e8 <stpcpy@plt>
   13fb8:	mov	r1, #0
   13fbc:	sub	r2, r0, r6
   13fc0:	mov	r0, r8
   13fc4:	bl	11500 <memset@plt>
   13fc8:	cmp	r4, #0
   13fcc:	bne	14458 <fputs@plt+0x2c88>
   13fd0:	ldr	r2, [sp, #572]	; 0x23c
   13fd4:	ldr	r3, [r7]
   13fd8:	cmp	r2, r3
   13fdc:	bne	143f0 <fputs@plt+0x2c20>
   13fe0:	add	sp, sp, #580	; 0x244
   13fe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13fe8:	add	r4, sp, #184	; 0xb8
   13fec:	mov	r1, r4
   13ff0:	add	r2, sp, #80	; 0x50
   13ff4:	mov	r0, #3
   13ff8:	bl	1141c <__xstat@plt>
   13ffc:	cmp	r0, #0
   14000:	bne	13f28 <fputs@plt+0x2758>
   14004:	ldr	r3, [sp, #96]	; 0x60
   14008:	tst	r3, #63	; 0x3f
   1400c:	beq	1412c <fputs@plt+0x295c>
   14010:	ldr	r9, [pc, #1120]	; 14478 <fputs@plt+0x2ca8>
   14014:	mov	r3, r4
   14018:	ldr	r2, [pc, #1128]	; 14488 <fputs@plt+0x2cb8>
   1401c:	mov	r1, #1
   14020:	ldr	r0, [r9]
   14024:	bl	11680 <__fprintf_chk@plt>
   14028:	ldr	r1, [pc, #1092]	; 14474 <fputs@plt+0x2ca4>
   1402c:	mov	r0, r5
   14030:	bl	11620 <strstr@plt>
   14034:	cmp	r0, #0
   14038:	subne	r3, r0, r5
   1403c:	bne	13f44 <fputs@plt+0x2774>
   14040:	b	14064 <fputs@plt+0x2894>
   14044:	ldr	r0, [sp, #64]	; 0x40
   14048:	bl	11494 <fclose@plt>
   1404c:	ldr	r1, [pc, #1056]	; 14474 <fputs@plt+0x2ca4>
   14050:	mov	r0, r5
   14054:	bl	11620 <strstr@plt>
   14058:	cmp	r0, #0
   1405c:	bne	13f3c <fputs@plt+0x276c>
   14060:	ldr	r9, [pc, #1040]	; 14478 <fputs@plt+0x2ca8>
   14064:	ldr	r2, [pc, #1056]	; 1448c <fputs@plt+0x2cbc>
   14068:	ldr	r3, [r9]
   1406c:	ldr	r4, [r2, #4]
   14070:	cmp	r4, #0
   14074:	bne	14118 <fputs@plt+0x2948>
   14078:	mov	r2, #47	; 0x2f
   1407c:	mov	r1, #1
   14080:	ldr	r0, [pc, #1032]	; 14490 <fputs@plt+0x2cc0>
   14084:	bl	11638 <fwrite@plt>
   14088:	mov	r3, r5
   1408c:	ldr	r0, [r9]
   14090:	ldr	r2, [pc, #1020]	; 14494 <fputs@plt+0x2cc4>
   14094:	mov	r1, #1
   14098:	bl	11680 <__fprintf_chk@plt>
   1409c:	ldr	r3, [pc, #988]	; 14480 <fputs@plt+0x2cb0>
   140a0:	mov	r1, #128	; 0x80
   140a4:	mov	r0, r8
   140a8:	ldr	r2, [r3]
   140ac:	bl	114ac <fgets@plt>
   140b0:	subs	r9, r0, #0
   140b4:	bne	14108 <fputs@plt+0x2938>
   140b8:	ldr	r0, [pc, #964]	; 14484 <fputs@plt+0x2cb4>
   140bc:	bl	114a0 <getpass@plt>
   140c0:	mov	r4, r0
   140c4:	mov	r1, r0
   140c8:	mov	r0, r6
   140cc:	bl	114e8 <stpcpy@plt>
   140d0:	mov	r1, r9
   140d4:	sub	r2, r0, r6
   140d8:	mov	r0, r4
   140dc:	bl	11500 <memset@plt>
   140e0:	b	13fd0 <fputs@plt+0x2800>
   140e4:	ldr	r0, [pc, #900]	; 14470 <fputs@plt+0x2ca0>
   140e8:	bl	114b8 <getenv@plt>
   140ec:	ldr	r3, [pc, #932]	; 14498 <fputs@plt+0x2cc8>
   140f0:	ldr	r2, [pc, #932]	; 1449c <fputs@plt+0x2ccc>
   140f4:	mov	r1, #1
   140f8:	str	r0, [sp]
   140fc:	add	r0, sp, #184	; 0xb8
   14100:	bl	11740 <__sprintf_chk@plt>
   14104:	b	13f1c <fputs@plt+0x274c>
   14108:	ldrb	r9, [r8]
   1410c:	cmp	r9, #0
   14110:	beq	140b8 <fputs@plt+0x28e8>
   14114:	b	13f84 <fputs@plt+0x27b4>
   14118:	mov	r2, #45	; 0x2d
   1411c:	mov	r1, #1
   14120:	ldr	r0, [pc, #888]	; 144a0 <fputs@plt+0x2cd0>
   14124:	bl	11638 <fwrite@plt>
   14128:	b	13fd0 <fputs@plt+0x2800>
   1412c:	ldr	r1, [pc, #880]	; 144a4 <fputs@plt+0x2cd4>
   14130:	mov	r0, r4
   14134:	bl	114f4 <fopen@plt>
   14138:	ldr	r1, [pc, #820]	; 14474 <fputs@plt+0x2ca4>
   1413c:	subs	r3, r0, #0
   14140:	str	r3, [sp, #64]	; 0x40
   14144:	mov	r0, r5
   14148:	beq	143e0 <fputs@plt+0x2c10>
   1414c:	bl	11620 <strstr@plt>
   14150:	cmp	r0, #0
   14154:	beq	143a0 <fputs@plt+0x2bd0>
   14158:	sub	r3, r0, r5
   1415c:	str	r3, [sp, #68]	; 0x44
   14160:	ldr	r2, [sp, #64]	; 0x40
   14164:	ldr	r1, [pc, #816]	; 1449c <fputs@plt+0x2ccc>
   14168:	mov	r0, r4
   1416c:	bl	114ac <fgets@plt>
   14170:	cmp	r0, #0
   14174:	beq	14044 <fputs@plt+0x2874>
   14178:	ldrb	r3, [sp, #184]	; 0xb8
   1417c:	cmp	r3, #0
   14180:	beq	141b0 <fputs@plt+0x29e0>
   14184:	mov	r0, r4
   14188:	bl	115b4 <strlen@plt>
   1418c:	add	r3, sp, #576	; 0x240
   14190:	sub	r0, r0, #1
   14194:	add	r0, r3, r0
   14198:	ldrb	r3, [r0, #-392]	; 0xfffffe78
   1419c:	cmp	r3, #10
   141a0:	beq	143b0 <fputs@plt+0x2be0>
   141a4:	cmp	r3, #13
   141a8:	moveq	r3, #0
   141ac:	strbeq	r3, [r0, #-392]	; 0xfffffe78
   141b0:	mov	r1, #58	; 0x3a
   141b4:	mov	r0, r4
   141b8:	bl	114dc <strchr@plt>
   141bc:	subs	r9, r0, #0
   141c0:	beq	14160 <fputs@plt+0x2990>
   141c4:	add	sl, r9, #1
   141c8:	mov	r0, sl
   141cc:	mov	r1, #58	; 0x3a
   141d0:	bl	114dc <strchr@plt>
   141d4:	subs	fp, r0, #0
   141d8:	beq	14160 <fputs@plt+0x2990>
   141dc:	add	r3, fp, #1
   141e0:	ldr	r2, [sp, #68]	; 0x44
   141e4:	mov	r0, r3
   141e8:	mov	r1, r5
   141ec:	str	r3, [sp, #72]	; 0x48
   141f0:	bl	11758 <strncmp@plt>
   141f4:	subs	r2, r0, #0
   141f8:	str	r2, [sp, #76]	; 0x4c
   141fc:	bne	14160 <fputs@plt+0x2990>
   14200:	ldr	r3, [sp, #72]	; 0x48
   14204:	mov	r0, r3
   14208:	bl	115b4 <strlen@plt>
   1420c:	ldr	r3, [sp, #68]	; 0x44
   14210:	cmp	r0, r3
   14214:	bne	14160 <fputs@plt+0x2990>
   14218:	sub	r9, r9, r4
   1421c:	cmp	r9, #127	; 0x7f
   14220:	bgt	14160 <fputs@plt+0x2990>
   14224:	sub	sl, fp, sl
   14228:	cmp	sl, #127	; 0x7f
   1422c:	bgt	14160 <fputs@plt+0x2990>
   14230:	mov	r2, r9
   14234:	mov	r1, r4
   14238:	mov	r0, r8
   1423c:	bl	11488 <strncpy@plt>
   14240:	mov	r1, #58	; 0x3a
   14244:	mov	r0, r4
   14248:	bl	114dc <strchr@plt>
   1424c:	ldr	sl, [sp, #76]	; 0x4c
   14250:	mov	r1, #58	; 0x3a
   14254:	sub	r3, r0, r4
   14258:	mov	r0, r4
   1425c:	strb	sl, [r8, r3]
   14260:	bl	114dc <strchr@plt>
   14264:	mov	r1, #58	; 0x3a
   14268:	add	r9, r0, #1
   1426c:	mov	r0, r9
   14270:	bl	114dc <strchr@plt>
   14274:	mov	r1, r9
   14278:	sub	r2, r0, r9
   1427c:	mov	r0, r6
   14280:	bl	11488 <strncpy@plt>
   14284:	mov	r1, #58	; 0x3a
   14288:	mov	r0, r4
   1428c:	bl	114dc <strchr@plt>
   14290:	mov	r1, #58	; 0x3a
   14294:	add	r9, r0, #1
   14298:	mov	r0, r9
   1429c:	bl	114dc <strchr@plt>
   142a0:	sub	r9, r0, r9
   142a4:	ldr	r0, [sp, #64]	; 0x40
   142a8:	strb	sl, [r6, r9]
   142ac:	bl	11494 <fclose@plt>
   142b0:	ldr	r1, [pc, #444]	; 14474 <fputs@plt+0x2ca4>
   142b4:	mov	r0, r5
   142b8:	bl	11620 <strstr@plt>
   142bc:	cmp	r0, #0
   142c0:	beq	14060 <fputs@plt+0x2890>
   142c4:	add	r0, r0, #5
   142c8:	mov	r3, #127	; 0x7f
   142cc:	ldr	r2, [pc, #456]	; 1449c <fputs@plt+0x2ccc>
   142d0:	stm	sp, {r0, r3, r6}
   142d4:	mov	r1, #1
   142d8:	ldr	r3, [pc, #456]	; 144a8 <fputs@plt+0x2cd8>
   142dc:	mov	r0, r4
   142e0:	bl	11740 <__sprintf_chk@plt>
   142e4:	mov	r0, r4
   142e8:	bl	115b4 <strlen@plt>
   142ec:	add	r2, sp, #168	; 0xa8
   142f0:	mov	r1, r0
   142f4:	mov	r0, r4
   142f8:	bl	116ec <md5_buffer@plt>
   142fc:	mov	r2, #128	; 0x80
   14300:	mov	r1, #0
   14304:	mov	r0, r6
   14308:	bl	11500 <memset@plt>
   1430c:	ldrb	lr, [sp, #183]	; 0xb7
   14310:	ldrb	ip, [sp, #182]	; 0xb6
   14314:	ldrb	r3, [sp, #180]	; 0xb4
   14318:	ldrb	r2, [sp, #179]	; 0xb3
   1431c:	ldrb	r1, [sp, #178]	; 0xb2
   14320:	str	lr, [sp, #60]	; 0x3c
   14324:	str	ip, [sp, #56]	; 0x38
   14328:	ldrb	lr, [sp, #176]	; 0xb0
   1432c:	ldrb	ip, [sp, #175]	; 0xaf
   14330:	ldrb	r5, [sp, #181]	; 0xb5
   14334:	ldrb	r4, [sp, #177]	; 0xb1
   14338:	str	r3, [sp, #48]	; 0x30
   1433c:	str	r2, [sp, #44]	; 0x2c
   14340:	ldrb	r3, [sp, #173]	; 0xad
   14344:	ldrb	r2, [sp, #172]	; 0xac
   14348:	str	r1, [sp, #40]	; 0x28
   1434c:	str	lr, [sp, #32]
   14350:	ldrb	r1, [sp, #171]	; 0xab
   14354:	ldrb	lr, [sp, #169]	; 0xa9
   14358:	str	ip, [sp, #28]
   1435c:	ldrb	ip, [sp, #168]	; 0xa8
   14360:	str	r5, [sp, #52]	; 0x34
   14364:	str	r4, [sp, #36]	; 0x24
   14368:	ldrb	r5, [sp, #174]	; 0xae
   1436c:	ldrb	r4, [sp, #170]	; 0xaa
   14370:	str	r3, [sp, #20]
   14374:	str	r2, [sp, #16]
   14378:	str	r1, [sp, #12]
   1437c:	mov	r0, r6
   14380:	ldr	r3, [pc, #292]	; 144ac <fputs@plt+0x2cdc>
   14384:	mvn	r2, #0
   14388:	mov	r1, #1
   1438c:	str	r5, [sp, #24]
   14390:	str	r4, [sp, #8]
   14394:	stm	sp, {ip, lr}
   14398:	bl	11740 <__sprintf_chk@plt>
   1439c:	b	13fd0 <fputs@plt+0x2800>
   143a0:	mov	r0, r5
   143a4:	bl	115b4 <strlen@plt>
   143a8:	str	r0, [sp, #68]	; 0x44
   143ac:	b	14160 <fputs@plt+0x2990>
   143b0:	mov	r3, #0
   143b4:	strb	r3, [r0, #-392]	; 0xfffffe78
   143b8:	ldrb	r3, [sp, #184]	; 0xb8
   143bc:	cmp	r3, #0
   143c0:	beq	141b0 <fputs@plt+0x29e0>
   143c4:	mov	r0, r4
   143c8:	bl	115b4 <strlen@plt>
   143cc:	add	r3, sp, #576	; 0x240
   143d0:	sub	r0, r0, #1
   143d4:	add	r0, r3, r0
   143d8:	ldrb	r3, [r0, #-392]	; 0xfffffe78
   143dc:	b	141a4 <fputs@plt+0x29d4>
   143e0:	bl	11620 <strstr@plt>
   143e4:	cmp	r0, #0
   143e8:	bne	13f3c <fputs@plt+0x276c>
   143ec:	b	14060 <fputs@plt+0x2890>
   143f0:	bl	11674 <__stack_chk_fail@plt>
   143f4:	ldr	r0, [pc, #136]	; 14484 <fputs@plt+0x2cb4>
   143f8:	bl	114a0 <getpass@plt>
   143fc:	mov	r8, r0
   14400:	mov	r1, r0
   14404:	mov	r0, r6
   14408:	bl	114e8 <stpcpy@plt>
   1440c:	mov	r1, r4
   14410:	add	r4, sp, #184	; 0xb8
   14414:	sub	r2, r0, r6
   14418:	mov	r0, r8
   1441c:	bl	11500 <memset@plt>
   14420:	mov	r0, r5
   14424:	ldr	r1, [pc, #72]	; 14474 <fputs@plt+0x2ca4>
   14428:	bl	11620 <strstr@plt>
   1442c:	b	142c4 <fputs@plt+0x2af4>
   14430:	ldr	r0, [pc, #76]	; 14484 <fputs@plt+0x2cb4>
   14434:	bl	114a0 <getpass@plt>
   14438:	mov	r1, r0
   1443c:	mov	r8, r0
   14440:	mov	r0, r6
   14444:	bl	114e8 <stpcpy@plt>
   14448:	mov	r1, r4
   1444c:	sub	r2, r0, r6
   14450:	mov	r0, r8
   14454:	bl	11500 <memset@plt>
   14458:	mov	r0, r5
   1445c:	ldr	r1, [pc, #16]	; 14474 <fputs@plt+0x2ca4>
   14460:	bl	11620 <strstr@plt>
   14464:	add	r4, sp, #184	; 0xb8
   14468:	b	142c4 <fputs@plt+0x2af4>
   1446c:	andeq	r9, r2, r8, lsl #27
   14470:	andeq	r7, r1, r0, lsl #15
   14474:	muleq	r1, r8, r7
   14478:	andeq	sl, r2, r0, lsl #3
   1447c:	ldrdeq	r7, [r1], -r4
   14480:	andeq	sl, r2, r8, ror r1
   14484:	andeq	r7, r1, r4, lsl #18
   14488:	andeq	r7, r1, r0, lsr #15
   1448c:	muleq	r2, r4, r1
   14490:	andeq	r7, r1, r4, asr #16
   14494:	andeq	r7, r1, r4, ror r8
   14498:	andeq	r7, r1, r8, lsl #15
   1449c:	andeq	r0, r0, r3, lsl #3
   144a0:	andeq	r7, r1, r4, lsl r8
   144a4:	ldrdeq	r7, [r1], -r0
   144a8:			; <UNDEFINED> instruction: 0x000178b0
   144ac:			; <UNDEFINED> instruction: 0x000178bc
   144b0:	ldr	r3, [r0, #12]
   144b4:	ldr	ip, [r0, #4]
   144b8:	add	r3, r3, #1
   144bc:	cmp	r3, ip
   144c0:	push	{r4, r5, r6, lr}
   144c4:	mov	r4, r0
   144c8:	str	r3, [r0, #12]
   144cc:	sub	sp, sp, #8
   144d0:	ldr	r0, [r0]
   144d4:	blt	14538 <fputs@plt+0x2d68>
   144d8:	ldr	r3, [r4, #16]
   144dc:	ldr	r2, [r4, #8]
   144e0:	add	r3, r3, #1
   144e4:	mov	r1, #0
   144e8:	cmp	r3, r2
   144ec:	str	r3, [r4, #16]
   144f0:	str	r1, [r4, #12]
   144f4:	blt	14548 <fputs@plt+0x2d78>
   144f8:	add	r2, r2, #256	; 0x100
   144fc:	cmp	r0, #0
   14500:	mul	r6, r2, ip
   14504:	beq	14558 <fputs@plt+0x2d88>
   14508:	str	r2, [r4, #8]
   1450c:	mov	r1, r6
   14510:	sub	r5, r6, ip, lsl #8
   14514:	bl	11764 <realloc@plt>
   14518:	str	r0, [r4]
   1451c:	cmp	r0, #0
   14520:	beq	14570 <fputs@plt+0x2da0>
   14524:	sub	r2, r6, r5
   14528:	add	r0, r0, r5
   1452c:	mov	r1, #0
   14530:	bl	11500 <memset@plt>
   14534:	ldr	r0, [r4]
   14538:	cmp	r0, #0
   1453c:	beq	14570 <fputs@plt+0x2da0>
   14540:	add	sp, sp, #8
   14544:	pop	{r4, r5, r6, pc}
   14548:	cmp	r0, r1
   1454c:	bne	14540 <fputs@plt+0x2d70>
   14550:	add	r2, r2, #256	; 0x100
   14554:	mul	r6, r2, ip
   14558:	str	r2, [r4, #8]
   1455c:	mov	r0, r6
   14560:	bl	11668 <malloc@plt>
   14564:	mov	r5, #0
   14568:	str	r0, [r4]
   1456c:	b	1451c <fputs@plt+0x2d4c>
   14570:	ldr	r3, [pc, #48]	; 145a8 <fputs@plt+0x2dd8>
   14574:	ldr	r0, [pc, #48]	; 145ac <fputs@plt+0x2ddc>
   14578:	ldr	r1, [r4, #8]
   1457c:	ldr	r2, [r4, #4]
   14580:	ldr	r3, [r3, #8]
   14584:	ldr	r0, [r0]
   14588:	str	r1, [sp, #4]
   1458c:	str	r2, [sp]
   14590:	mov	r1, #1
   14594:	ldr	r2, [pc, #20]	; 145b0 <fputs@plt+0x2de0>
   14598:	bl	11680 <__fprintf_chk@plt>
   1459c:	ldr	r0, [r4]
   145a0:	add	sp, sp, #8
   145a4:	pop	{r4, r5, r6, pc}
   145a8:	muleq	r2, r4, r1
   145ac:	andeq	sl, r2, r0, lsl #3
   145b0:	andeq	r7, r1, r8, lsl r9
   145b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145b8:	mov	r4, r2
   145bc:	ldr	r8, [pc, #1580]	; 14bf0 <fputs@plt+0x3420>
   145c0:	add	fp, sp, #32
   145c4:	sub	sp, sp, #28
   145c8:	ldr	r2, [r2, #12]
   145cc:	ldr	r3, [r8]
   145d0:	cmp	r2, #5
   145d4:	str	r3, [fp, #-40]	; 0xffffffd8
   145d8:	beq	14954 <fputs@plt+0x3184>
   145dc:	ldr	r3, [r4, #24]
   145e0:	and	r2, r3, #3
   145e4:	cmp	r2, #3
   145e8:	beq	14968 <fputs@plt+0x3198>
   145ec:	mov	r7, r1
   145f0:	and	r1, r3, #5
   145f4:	cmp	r1, #1
   145f8:	beq	149a0 <fputs@plt+0x31d0>
   145fc:	tst	r3, #7
   14600:	beq	14770 <fputs@plt+0x2fa0>
   14604:	ldr	r5, [r4]
   14608:	mov	r6, r0
   1460c:	ldr	r1, [pc, #1576]	; 14c3c <fputs@plt+0x346c>
   14610:	mov	r0, r5
   14614:	bl	1177c <strcmp@plt>
   14618:	cmp	r0, #0
   1461c:	beq	14634 <fputs@plt+0x2e64>
   14620:	ldr	r1, [pc, #1580]	; 14c54 <fputs@plt+0x3484>
   14624:	mov	r0, r5
   14628:	bl	1177c <strcmp@plt>
   1462c:	cmp	r0, #0
   14630:	bne	14788 <fputs@plt+0x2fb8>
   14634:	mov	r2, r5
   14638:	ldr	r1, [pc, #1460]	; 14bf4 <fputs@plt+0x3424>
   1463c:	mov	r0, #1
   14640:	bl	114c4 <__printf_chk@plt>
   14644:	ldr	r3, [r4, #12]
   14648:	cmp	r3, #0
   1464c:	beq	14918 <fputs@plt+0x3148>
   14650:	cmp	r3, #4
   14654:	bne	147c4 <fputs@plt+0x2ff4>
   14658:	ldr	r3, [r4, #20]
   1465c:	ldr	r5, [pc, #1428]	; 14bf8 <fputs@plt+0x3428>
   14660:	cmp	r3, #4
   14664:	beq	148f0 <fputs@plt+0x3120>
   14668:	ldr	r2, [r4, #24]
   1466c:	ldr	r3, [r5]
   14670:	tst	r2, #32
   14674:	bne	148fc <fputs@plt+0x312c>
   14678:	tst	r2, #2
   1467c:	bne	14988 <fputs@plt+0x31b8>
   14680:	and	r2, r2, #5
   14684:	cmp	r2, #4
   14688:	beq	14d48 <fputs@plt+0x3578>
   1468c:	mov	r2, #9
   14690:	mov	r1, #1
   14694:	ldr	r0, [pc, #1376]	; 14bfc <fputs@plt+0x342c>
   14698:	bl	11638 <fwrite@plt>
   1469c:	ldr	r4, [r4, #8]
   146a0:	ldrb	r3, [r4]
   146a4:	cmp	r3, #0
   146a8:	beq	14764 <fputs@plt+0x2f94>
   146ac:	ldr	r9, [pc, #1352]	; 14bfc <fputs@plt+0x342c>
   146b0:	mov	r7, r4
   146b4:	mov	r2, #8
   146b8:	mov	r6, #0
   146bc:	b	146e0 <fputs@plt+0x2f10>
   146c0:	cmp	r3, #10
   146c4:	beq	14800 <fputs@plt+0x3030>
   146c8:	cmp	r6, #0
   146cc:	cmpne	r2, #78	; 0x4e
   146d0:	bgt	146fc <fputs@plt+0x2f2c>
   146d4:	ldrb	r3, [r7, #1]!
   146d8:	cmp	r3, #0
   146dc:	beq	14744 <fputs@plt+0x2f74>
   146e0:	cmp	r3, #32
   146e4:	add	r2, r2, #1
   146e8:	bne	146c0 <fputs@plt+0x2ef0>
   146ec:	mov	r6, r7
   146f0:	cmp	r6, #0
   146f4:	cmpne	r2, #78	; 0x4e
   146f8:	ble	146d4 <fputs@plt+0x2f04>
   146fc:	cmp	r4, r6
   14700:	bcs	14718 <fputs@plt+0x2f48>
   14704:	ldrb	r0, [r4], #1
   14708:	ldr	r1, [r5]
   1470c:	bl	1168c <fputc@plt>
   14710:	cmp	r4, r6
   14714:	bne	14704 <fputs@plt+0x2f34>
   14718:	mov	r1, #1
   1471c:	ldr	r3, [r5]
   14720:	mov	r2, #9
   14724:	add	r4, r6, r1
   14728:	mov	r0, r9
   1472c:	bl	11638 <fwrite@plt>
   14730:	sub	r2, r7, r4
   14734:	ldrb	r3, [r7, #1]!
   14738:	add	r2, r2, #8
   1473c:	cmp	r3, #0
   14740:	bne	146e0 <fputs@plt+0x2f10>
   14744:	ldrb	r0, [r4]
   14748:	cmp	r0, #0
   1474c:	beq	14764 <fputs@plt+0x2f94>
   14750:	ldr	r1, [r5]
   14754:	bl	1168c <fputc@plt>
   14758:	ldrb	r0, [r4, #1]!
   1475c:	cmp	r0, #0
   14760:	bne	14750 <fputs@plt+0x2f80>
   14764:	ldr	r1, [r5]
   14768:	mov	r0, #10
   1476c:	bl	1168c <fputc@plt>
   14770:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14774:	ldr	r3, [r8]
   14778:	cmp	r2, r3
   1477c:	bne	14fd4 <fputs@plt+0x3804>
   14780:	sub	sp, fp, #32
   14784:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14788:	ldr	r1, [pc, #1192]	; 14c38 <fputs@plt+0x3468>
   1478c:	mov	r0, r5
   14790:	bl	1177c <strcmp@plt>
   14794:	cmp	r0, #0
   14798:	beq	14634 <fputs@plt+0x2e64>
   1479c:	ldr	r1, [pc, #1168]	; 14c34 <fputs@plt+0x3464>
   147a0:	mov	r0, r5
   147a4:	bl	1177c <strcmp@plt>
   147a8:	cmp	r0, #0
   147ac:	beq	14634 <fputs@plt+0x2e64>
   147b0:	mov	r2, r5
   147b4:	ldr	r1, [pc, #1092]	; 14c00 <fputs@plt+0x3430>
   147b8:	mov	r0, #1
   147bc:	bl	114c4 <__printf_chk@plt>
   147c0:	b	14644 <fputs@plt+0x2e74>
   147c4:	ldr	r5, [pc, #1068]	; 14bf8 <fputs@plt+0x3428>
   147c8:	mov	r0, #32
   147cc:	ldr	r1, [r5]
   147d0:	bl	1168c <fputc@plt>
   147d4:	ldr	r9, [r4, #24]
   147d8:	ands	r9, r9, #16
   147dc:	bne	14d2c <fputs@plt+0x355c>
   147e0:	ldr	r3, [r4, #28]
   147e4:	cmp	r3, #3
   147e8:	ldrls	pc, [pc, r3, lsl #2]
   147ec:	b	148d8 <fputs@plt+0x3108>
   147f0:	muleq	r1, r4, fp
   147f4:	andeq	r4, r1, r8, lsl #16
   147f8:	strdeq	r4, [r1], -ip
   147fc:	andeq	r4, r1, ip, lsr #21
   14800:	mov	r6, r7
   14804:	b	146fc <fputs@plt+0x2f2c>
   14808:	ldr	r3, [r4]
   1480c:	ldr	r1, [pc, #1064]	; 14c3c <fputs@plt+0x346c>
   14810:	mov	r0, r3
   14814:	str	r3, [fp, #-48]	; 0xffffffd0
   14818:	bl	1177c <strcmp@plt>
   1481c:	ldr	r2, [r4, #32]
   14820:	ldr	sl, [r4, #12]
   14824:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14828:	cmp	sl, #1
   1482c:	ldr	r9, [r2, #4]
   14830:	beq	14d78 <fputs@plt+0x35a8>
   14834:	cmp	r0, #0
   14838:	beq	14e9c <fputs@plt+0x36cc>
   1483c:	mov	r0, r3
   14840:	ldr	r1, [pc, #1036]	; 14c54 <fputs@plt+0x3484>
   14844:	str	r2, [fp, #-48]	; 0xffffffd0
   14848:	bl	1177c <strcmp@plt>
   1484c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14850:	cmp	r0, #0
   14854:	bne	14e68 <fputs@plt+0x3698>
   14858:	ldr	r3, [pc, #1016]	; 14c58 <fputs@plt+0x3488>
   1485c:	vldr	d5, [pc, #900]	; 14be8 <fputs@plt+0x3418>
   14860:	vldr	s12, [r2]
   14864:	ldr	r3, [r3, #16]
   14868:	sub	r3, r9, r3
   1486c:	vcvt.f64.s32	d6, s12
   14870:	vmov	s14, r3
   14874:	ldr	r1, [pc, #904]	; 14c04 <fputs@plt+0x3434>
   14878:	mov	r0, #1
   1487c:	vcvt.f64.s32	d7, s14
   14880:	vmul.f64	d6, d6, d5
   14884:	vmul.f64	d7, d7, d5
   14888:	vmov	r2, r3, d6
   1488c:	vstr	d7, [sp]
   14890:	bl	114c4 <__printf_chk@plt>
   14894:	ldr	r0, [r4, #16]
   14898:	bl	13c88 <fputs@plt+0x24b8>
   1489c:	ldr	r3, [r4, #20]
   148a0:	cmp	r3, #4
   148a4:	bgt	14e50 <fputs@plt+0x3680>
   148a8:	ldr	r3, [r4, #32]
   148ac:	ldr	r3, [r3, #8]
   148b0:	cmp	r3, #0
   148b4:	beq	148d8 <fputs@plt+0x3108>
   148b8:	vmov	s15, r3
   148bc:	vldr	d6, [pc, #804]	; 14be8 <fputs@plt+0x3418>
   148c0:	ldr	r1, [pc, #832]	; 14c08 <fputs@plt+0x3438>
   148c4:	mov	r0, #1
   148c8:	vcvt.f64.s32	d7, s15
   148cc:	vmul.f64	d7, d7, d6
   148d0:	vmov	r2, r3, d7
   148d4:	bl	114c4 <__printf_chk@plt>
   148d8:	ldr	r3, [r4, #12]
   148dc:	cmp	r3, #3
   148e0:	beq	148f0 <fputs@plt+0x3120>
   148e4:	ldr	r3, [r4, #20]
   148e8:	cmp	r3, #4
   148ec:	bne	14668 <fputs@plt+0x2e98>
   148f0:	ldr	r2, [r4, #24]
   148f4:	ands	r2, r2, #32
   148f8:	beq	149bc <fputs@plt+0x31ec>
   148fc:	ldr	r3, [r5]
   14900:	mov	r2, #11
   14904:	mov	r1, #1
   14908:	ldr	r0, [pc, #764]	; 14c0c <fputs@plt+0x343c>
   1490c:	bl	11638 <fwrite@plt>
   14910:	ldr	r3, [r5]
   14914:	b	1468c <fputs@plt+0x2ebc>
   14918:	ldr	r5, [pc, #728]	; 14bf8 <fputs@plt+0x3428>
   1491c:	mov	r2, #3
   14920:	mov	r1, #1
   14924:	ldr	r3, [r5]
   14928:	ldr	r0, [pc, #736]	; 14c10 <fputs@plt+0x3440>
   1492c:	bl	11638 <fwrite@plt>
   14930:	ldr	r3, [r4, #24]
   14934:	tst	r3, #16
   14938:	bne	14d14 <fputs@plt+0x3544>
   1493c:	ldr	r3, [r5]
   14940:	mov	r2, #8
   14944:	mov	r1, #1
   14948:	ldr	r0, [pc, #708]	; 14c14 <fputs@plt+0x3444>
   1494c:	bl	11638 <fwrite@plt>
   14950:	b	148d8 <fputs@plt+0x3108>
   14954:	ldr	r2, [r4, #4]
   14958:	ldr	r1, [pc, #696]	; 14c18 <fputs@plt+0x3448>
   1495c:	mov	r0, #1
   14960:	bl	114c4 <__printf_chk@plt>
   14964:	b	14770 <fputs@plt+0x2fa0>
   14968:	ldr	r1, [pc, #684]	; 14c1c <fputs@plt+0x344c>
   1496c:	ldr	r3, [pc, #740]	; 14c58 <fputs@plt+0x3488>
   14970:	ldr	r2, [pc, #680]	; 14c20 <fputs@plt+0x3450>
   14974:	ldr	r0, [r1]
   14978:	ldr	r3, [r3, #8]
   1497c:	mov	r1, #1
   14980:	bl	11680 <__fprintf_chk@plt>
   14984:	b	14770 <fputs@plt+0x2fa0>
   14988:	mov	r2, #11
   1498c:	mov	r1, #1
   14990:	ldr	r0, [pc, #652]	; 14c24 <fputs@plt+0x3454>
   14994:	bl	11638 <fwrite@plt>
   14998:	ldr	r3, [r5]
   1499c:	b	1468c <fputs@plt+0x2ebc>
   149a0:	ldr	r2, [pc, #628]	; 14c1c <fputs@plt+0x344c>
   149a4:	ldr	r3, [pc, #684]	; 14c58 <fputs@plt+0x3488>
   149a8:	ldr	r0, [r2]
   149ac:	ldr	r3, [r3, #8]
   149b0:	ldr	r2, [pc, #624]	; 14c28 <fputs@plt+0x3458>
   149b4:	bl	11680 <__fprintf_chk@plt>
   149b8:	b	14770 <fputs@plt+0x2fa0>
   149bc:	ldr	r3, [r4, #20]
   149c0:	mov	r1, r7
   149c4:	add	r3, r3, #7
   149c8:	bic	r3, r3, #7
   149cc:	sub	sp, sp, r3
   149d0:	add	r7, sp, #8
   149d4:	str	r2, [sp]
   149d8:	mov	r3, r7
   149dc:	mov	r0, r6
   149e0:	bl	116e0 <sane_control_option@plt>
   149e4:	ldr	r3, [r5]
   149e8:	mov	r2, #2
   149ec:	mov	r1, #1
   149f0:	ldr	r0, [pc, #564]	; 14c2c <fputs@plt+0x345c>
   149f4:	bl	11638 <fwrite@plt>
   149f8:	ldr	r3, [r4, #12]
   149fc:	cmp	r3, #3
   14a00:	ldrls	pc, [pc, r3, lsl #2]
   14a04:	b	14a9c <fputs@plt+0x32cc>
   14a08:	strdeq	r4, [r1], -r0
   14a0c:	andeq	r4, r1, r4, ror ip
   14a10:	andeq	r4, r1, r8, lsl sl
   14a14:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14a18:	ldr	r9, [r4]
   14a1c:	ldr	r1, [pc, #528]	; 14c34 <fputs@plt+0x3464>
   14a20:	mov	r0, r9
   14a24:	bl	1177c <strcmp@plt>
   14a28:	ldr	r6, [r7]
   14a2c:	cmp	r0, #0
   14a30:	beq	14ecc <fputs@plt+0x36fc>
   14a34:	ldr	r1, [pc, #508]	; 14c38 <fputs@plt+0x3468>
   14a38:	mov	r0, r9
   14a3c:	bl	1177c <strcmp@plt>
   14a40:	cmp	r0, #0
   14a44:	beq	14ef8 <fputs@plt+0x3728>
   14a48:	ldr	r1, [pc, #492]	; 14c3c <fputs@plt+0x346c>
   14a4c:	mov	r0, r9
   14a50:	bl	1177c <strcmp@plt>
   14a54:	cmp	r0, #0
   14a58:	beq	14fb8 <fputs@plt+0x37e8>
   14a5c:	mov	r0, r9
   14a60:	ldr	r1, [pc, #492]	; 14c54 <fputs@plt+0x3484>
   14a64:	bl	1177c <strcmp@plt>
   14a68:	cmp	r0, #0
   14a6c:	bne	14f94 <fputs@plt+0x37c4>
   14a70:	ldr	r3, [pc, #480]	; 14c58 <fputs@plt+0x3488>
   14a74:	vldr	d6, [pc, #364]	; 14be8 <fputs@plt+0x3418>
   14a78:	ldr	r1, [pc, #432]	; 14c30 <fputs@plt+0x3460>
   14a7c:	ldr	r3, [r3, #16]
   14a80:	sub	r3, r6, r3
   14a84:	mov	r0, #1
   14a88:	vmov	s14, r3
   14a8c:	vcvt.f64.s32	d7, s14
   14a90:	vmul.f64	d7, d7, d6
   14a94:	vmov	r2, r3, d7
   14a98:	bl	114c4 <__printf_chk@plt>
   14a9c:	ldr	r1, [r5]
   14aa0:	mov	r0, #93	; 0x5d
   14aa4:	bl	1168c <fputc@plt>
   14aa8:	b	14668 <fputs@plt+0x2e98>
   14aac:	ldr	r3, [r4, #32]
   14ab0:	ldr	r0, [r3]
   14ab4:	cmp	r0, #0
   14ab8:	movne	r9, #4
   14abc:	bne	14adc <fputs@plt+0x330c>
   14ac0:	b	148d8 <fputs@plt+0x3108>
   14ac4:	ldr	r1, [r5]
   14ac8:	mov	r0, #124	; 0x7c
   14acc:	bl	1168c <fputc@plt>
   14ad0:	ldr	r3, [r4, #32]
   14ad4:	ldr	r0, [r3, r9]
   14ad8:	mov	r9, sl
   14adc:	ldr	r1, [r5]
   14ae0:	bl	117d0 <fputs@plt>
   14ae4:	ldr	r3, [r4, #32]
   14ae8:	add	sl, r9, #4
   14aec:	ldr	r3, [r3, r9]
   14af0:	cmp	r3, #0
   14af4:	bne	14ac4 <fputs@plt+0x32f4>
   14af8:	b	148d8 <fputs@plt+0x3108>
   14afc:	ldr	r3, [r4, #32]
   14b00:	ldr	r2, [r3]
   14b04:	cmp	r2, #0
   14b08:	ble	14d60 <fputs@plt+0x3590>
   14b0c:	cmp	r9, #0
   14b10:	moveq	r9, #1
   14b14:	moveq	sl, #4
   14b18:	bne	14fcc <fputs@plt+0x37fc>
   14b1c:	ldr	r0, [r4, #12]
   14b20:	ldr	r2, [r3, sl]
   14b24:	cmp	r0, #1
   14b28:	beq	14b88 <fputs@plt+0x33b8>
   14b2c:	vmov	s15, r2
   14b30:	vldr	d6, [pc, #176]	; 14be8 <fputs@plt+0x3418>
   14b34:	ldr	r1, [pc, #244]	; 14c30 <fputs@plt+0x3460>
   14b38:	mov	r0, #1
   14b3c:	vcvt.f64.s32	d7, s15
   14b40:	vmul.f64	d7, d7, d6
   14b44:	vmov	r2, r3, d7
   14b48:	bl	114c4 <__printf_chk@plt>
   14b4c:	ldr	r3, [r4, #32]
   14b50:	ldr	r3, [r3]
   14b54:	cmp	r3, r9
   14b58:	ble	14d60 <fputs@plt+0x3590>
   14b5c:	add	r3, r9, #1
   14b60:	mov	r9, r3
   14b64:	lsl	sl, r3, #2
   14b68:	ldr	r1, [r5]
   14b6c:	mov	r0, #124	; 0x7c
   14b70:	bl	1168c <fputc@plt>
   14b74:	ldr	r3, [r4, #32]
   14b78:	ldr	r0, [r4, #12]
   14b7c:	cmp	r0, #1
   14b80:	ldr	r2, [r3, sl]
   14b84:	bne	14b2c <fputs@plt+0x335c>
   14b88:	ldr	r1, [pc, #176]	; 14c40 <fputs@plt+0x3470>
   14b8c:	bl	114c4 <__printf_chk@plt>
   14b90:	b	14b4c <fputs@plt+0x337c>
   14b94:	ldr	r1, [r4, #12]
   14b98:	cmp	r1, #2
   14b9c:	beq	14e34 <fputs@plt+0x3664>
   14ba0:	cmp	r1, #3
   14ba4:	beq	14e18 <fputs@plt+0x3648>
   14ba8:	cmp	r1, #1
   14bac:	beq	14df8 <fputs@plt+0x3628>
   14bb0:	ldr	r3, [r4, #20]
   14bb4:	cmp	r3, #4
   14bb8:	ble	14660 <fputs@plt+0x2e90>
   14bbc:	ldr	r3, [r5]
   14bc0:	mov	r2, #4
   14bc4:	mov	r1, #1
   14bc8:	ldr	r0, [pc, #160]	; 14c70 <fputs@plt+0x34a0>
   14bcc:	bl	11638 <fwrite@plt>
   14bd0:	b	148d8 <fputs@plt+0x3108>
   14bd4:	mov	r0, r7
   14bd8:	ldr	r1, [r5]
   14bdc:	bl	117d0 <fputs@plt>
   14be0:	b	14a9c <fputs@plt+0x32cc>
   14be4:	nop			; (mov r0, r0)
   14be8:	andeq	r0, r0, r0
   14bec:	cdpcc	0, 15, cr0, cr0, cr0, {0}
   14bf0:	andeq	r9, r2, r8, lsl #27
   14bf4:	muleq	r1, ip, r9
   14bf8:	andeq	sl, r2, ip, ror r1
   14bfc:	andeq	r7, r1, r0, asr sl
   14c00:	andeq	r7, r1, r4, lsr #19
   14c04:	andeq	r7, r1, r8, lsl #20
   14c08:	andeq	r7, r1, r0, lsl sl
   14c0c:	andeq	r7, r1, r4, lsr #20
   14c10:			; <UNDEFINED> instruction: 0x000179b0
   14c14:			; <UNDEFINED> instruction: 0x000179bc
   14c18:	andeq	r7, r1, ip, asr #18
   14c1c:	andeq	sl, r2, r0, lsl #3
   14c20:	andeq	r7, r1, r4, asr r9
   14c24:	andeq	r7, r1, r4, lsr sl
   14c28:	andeq	r7, r1, r4, ror r9
   14c2c:	andeq	r7, r1, r0, lsr sl
   14c30:	andeq	r7, r1, ip, lsl #20
   14c34:	muleq	r1, r8, r9
   14c38:	andeq	r8, r1, ip, lsl #27
   14c3c:	andeq	r7, r1, r0, lsl #18
   14c40:	strdeq	r7, [r1], -r0
   14c44:	andeq	r7, r1, r4, asr #18
   14c48:	andeq	r7, r1, r8, asr #18
   14c4c:			; <UNDEFINED> instruction: 0x000179b4
   14c50:	andeq	r7, r1, r0, asr #20
   14c54:	muleq	r1, r4, r9
   14c58:	muleq	r2, r4, r1
   14c5c:	andeq	r7, r1, ip, ror #19
   14c60:	strdeq	r7, [r1], -r4
   14c64:	andeq	r7, r1, r8, asr #19
   14c68:	ldrdeq	r7, [r1], -r8
   14c6c:	ldrdeq	r7, [r1], -r0
   14c70:	andeq	r7, r1, r4, ror #19
   14c74:	ldr	r9, [r4]
   14c78:	ldr	r1, [pc, #-76]	; 14c34 <fputs@plt+0x3464>
   14c7c:	mov	r0, r9
   14c80:	bl	1177c <strcmp@plt>
   14c84:	ldr	r6, [r7]
   14c88:	cmp	r0, #0
   14c8c:	beq	14eb0 <fputs@plt+0x36e0>
   14c90:	ldr	r1, [pc, #-96]	; 14c38 <fputs@plt+0x3468>
   14c94:	mov	r0, r9
   14c98:	bl	1177c <strcmp@plt>
   14c9c:	cmp	r0, #0
   14ca0:	beq	14f5c <fputs@plt+0x378c>
   14ca4:	ldr	r1, [pc, #-112]	; 14c3c <fputs@plt+0x346c>
   14ca8:	mov	r0, r9
   14cac:	bl	1177c <strcmp@plt>
   14cb0:	cmp	r0, #0
   14cb4:	beq	14f78 <fputs@plt+0x37a8>
   14cb8:	ldr	r1, [pc, #-108]	; 14c54 <fputs@plt+0x3484>
   14cbc:	mov	r0, r9
   14cc0:	bl	1177c <strcmp@plt>
   14cc4:	cmp	r0, #0
   14cc8:	moveq	r0, #1
   14ccc:	ldreq	r3, [pc, #-124]	; 14c58 <fputs@plt+0x3488>
   14cd0:	ldreq	r1, [pc, #-152]	; 14c40 <fputs@plt+0x3470>
   14cd4:	movne	r2, r6
   14cd8:	ldreq	r2, [r3, #16]
   14cdc:	ldrne	r1, [pc, #-164]	; 14c40 <fputs@plt+0x3470>
   14ce0:	subeq	r2, r6, r2
   14ce4:	movne	r0, #1
   14ce8:	bl	114c4 <__printf_chk@plt>
   14cec:	b	14a9c <fputs@plt+0x32cc>
   14cf0:	ldr	r0, [r7]
   14cf4:	ldr	r2, [pc, #-184]	; 14c44 <fputs@plt+0x3474>
   14cf8:	ldr	r3, [pc, #-184]	; 14c48 <fputs@plt+0x3478>
   14cfc:	cmp	r0, #0
   14d00:	ldr	r1, [r5]
   14d04:	movne	r0, r2
   14d08:	moveq	r0, r3
   14d0c:	bl	117d0 <fputs@plt>
   14d10:	b	14a9c <fputs@plt+0x32cc>
   14d14:	ldr	r3, [r5]
   14d18:	mov	r2, #5
   14d1c:	mov	r1, #1
   14d20:	ldr	r0, [pc, #-220]	; 14c4c <fputs@plt+0x347c>
   14d24:	bl	11638 <fwrite@plt>
   14d28:	b	1493c <fputs@plt+0x316c>
   14d2c:	ldr	r3, [r5]
   14d30:	mov	r2, #5
   14d34:	mov	r1, #1
   14d38:	ldr	r0, [pc, #-244]	; 14c4c <fputs@plt+0x347c>
   14d3c:	bl	11638 <fwrite@plt>
   14d40:	mov	r9, #1
   14d44:	b	147e0 <fputs@plt+0x3010>
   14d48:	mov	r2, #12
   14d4c:	mov	r1, #1
   14d50:	ldr	r0, [pc, #-264]	; 14c50 <fputs@plt+0x3480>
   14d54:	bl	11638 <fwrite@plt>
   14d58:	ldr	r3, [r5]
   14d5c:	b	1468c <fputs@plt+0x2ebc>
   14d60:	ldr	r0, [r4, #16]
   14d64:	bl	13c88 <fputs@plt+0x24b8>
   14d68:	ldr	r3, [r4, #20]
   14d6c:	cmp	r3, #4
   14d70:	ble	148d8 <fputs@plt+0x3108>
   14d74:	b	14bbc <fputs@plt+0x33ec>
   14d78:	cmp	r0, #0
   14d7c:	beq	14f3c <fputs@plt+0x376c>
   14d80:	mov	r0, r3
   14d84:	ldr	r1, [pc, #-312]	; 14c54 <fputs@plt+0x3484>
   14d88:	str	r2, [fp, #-48]	; 0xffffffd0
   14d8c:	bl	1177c <strcmp@plt>
   14d90:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14d94:	cmp	r0, #0
   14d98:	moveq	r0, sl
   14d9c:	ldreq	r3, [pc, #-332]	; 14c58 <fputs@plt+0x3488>
   14da0:	ldreq	r2, [r2]
   14da4:	ldreq	r1, [pc, #-336]	; 14c5c <fputs@plt+0x348c>
   14da8:	ldreq	r3, [r3, #16]
   14dac:	movne	r3, r9
   14db0:	subeq	r3, r9, r3
   14db4:	ldrne	r2, [r2]
   14db8:	movne	r0, sl
   14dbc:	ldrne	r1, [pc, #-360]	; 14c5c <fputs@plt+0x348c>
   14dc0:	bl	114c4 <__printf_chk@plt>
   14dc4:	ldr	r0, [r4, #16]
   14dc8:	bl	13c88 <fputs@plt+0x24b8>
   14dcc:	ldr	r3, [r4, #20]
   14dd0:	cmp	r3, #4
   14dd4:	bgt	14f24 <fputs@plt+0x3754>
   14dd8:	ldr	r3, [r4, #32]
   14ddc:	ldr	r2, [r3, #8]
   14de0:	cmp	r2, #0
   14de4:	beq	148d8 <fputs@plt+0x3108>
   14de8:	ldr	r1, [pc, #-400]	; 14c60 <fputs@plt+0x3490>
   14dec:	mov	r0, #1
   14df0:	bl	114c4 <__printf_chk@plt>
   14df4:	b	148d8 <fputs@plt+0x3108>
   14df8:	ldr	r3, [r5]
   14dfc:	mov	r2, #5
   14e00:	ldr	r0, [pc, #-420]	; 14c64 <fputs@plt+0x3494>
   14e04:	bl	11638 <fwrite@plt>
   14e08:	ldr	r3, [r4, #12]
   14e0c:	cmp	r3, #3
   14e10:	bne	14bb0 <fputs@plt+0x33e0>
   14e14:	b	148f0 <fputs@plt+0x3120>
   14e18:	ldr	r3, [r5]
   14e1c:	mov	r2, #8
   14e20:	mov	r1, #1
   14e24:	ldr	r0, [pc, #-452]	; 14c68 <fputs@plt+0x3498>
   14e28:	bl	11638 <fwrite@plt>
   14e2c:	ldr	r3, [r4, #12]
   14e30:	b	14e0c <fputs@plt+0x363c>
   14e34:	ldr	r3, [r5]
   14e38:	mov	r2, #7
   14e3c:	mov	r1, #1
   14e40:	ldr	r0, [pc, #-476]	; 14c6c <fputs@plt+0x349c>
   14e44:	bl	11638 <fwrite@plt>
   14e48:	ldr	r3, [r4, #12]
   14e4c:	b	14e0c <fputs@plt+0x363c>
   14e50:	ldr	r3, [r5]
   14e54:	mov	r2, #4
   14e58:	mov	r1, #1
   14e5c:	ldr	r0, [pc, #-500]	; 14c70 <fputs@plt+0x34a0>
   14e60:	bl	11638 <fwrite@plt>
   14e64:	b	148a8 <fputs@plt+0x30d8>
   14e68:	vldr	s12, [r2]
   14e6c:	vmov	s15, r9
   14e70:	vldr	d5, [pc, #352]	; 14fd8 <fputs@plt+0x3808>
   14e74:	ldr	r1, [pc, #356]	; 14fe0 <fputs@plt+0x3810>
   14e78:	vcvt.f64.s32	d6, s12
   14e7c:	vcvt.f64.s32	d7, s15
   14e80:	mov	r0, #1
   14e84:	vmul.f64	d6, d6, d5
   14e88:	vmul.f64	d7, d7, d5
   14e8c:	vmov	r2, r3, d6
   14e90:	vstr	d7, [sp]
   14e94:	bl	114c4 <__printf_chk@plt>
   14e98:	b	14894 <fputs@plt+0x30c4>
   14e9c:	ldr	r3, [pc, #320]	; 14fe4 <fputs@plt+0x3814>
   14ea0:	vldr	d5, [pc, #304]	; 14fd8 <fputs@plt+0x3808>
   14ea4:	vldr	s12, [r2]
   14ea8:	ldr	r3, [r3, #12]
   14eac:	b	14868 <fputs@plt+0x3098>
   14eb0:	ldr	r3, [pc, #300]	; 14fe4 <fputs@plt+0x3814>
   14eb4:	mov	r2, r6
   14eb8:	ldr	r1, [pc, #296]	; 14fe8 <fputs@plt+0x3818>
   14ebc:	mov	r0, #1
   14ec0:	str	r6, [r3, #12]
   14ec4:	bl	114c4 <__printf_chk@plt>
   14ec8:	b	14a9c <fputs@plt+0x32cc>
   14ecc:	vmov	s15, r6
   14ed0:	ldr	r3, [pc, #268]	; 14fe4 <fputs@plt+0x3814>
   14ed4:	ldr	r1, [pc, #272]	; 14fec <fputs@plt+0x381c>
   14ed8:	mov	r0, #1
   14edc:	vcvt.f64.s32	d6, s15
   14ee0:	vldr	d7, [pc, #240]	; 14fd8 <fputs@plt+0x3808>
   14ee4:	str	r6, [r3, #12]
   14ee8:	vmul.f64	d7, d6, d7
   14eec:	vmov	r2, r3, d7
   14ef0:	bl	114c4 <__printf_chk@plt>
   14ef4:	b	14a9c <fputs@plt+0x32cc>
   14ef8:	vmov	s15, r6
   14efc:	ldr	r3, [pc, #224]	; 14fe4 <fputs@plt+0x3814>
   14f00:	ldr	r1, [pc, #228]	; 14fec <fputs@plt+0x381c>
   14f04:	mov	r0, #1
   14f08:	vcvt.f64.s32	d6, s15
   14f0c:	vldr	d7, [pc, #196]	; 14fd8 <fputs@plt+0x3808>
   14f10:	str	r6, [r3, #16]
   14f14:	vmul.f64	d7, d6, d7
   14f18:	vmov	r2, r3, d7
   14f1c:	bl	114c4 <__printf_chk@plt>
   14f20:	b	14a9c <fputs@plt+0x32cc>
   14f24:	ldr	r3, [r5]
   14f28:	mov	r2, #4
   14f2c:	mov	r1, #1
   14f30:	ldr	r0, [pc, #184]	; 14ff0 <fputs@plt+0x3820>
   14f34:	bl	11638 <fwrite@plt>
   14f38:	b	14dd8 <fputs@plt+0x3608>
   14f3c:	ldr	r3, [pc, #160]	; 14fe4 <fputs@plt+0x3814>
   14f40:	ldr	r2, [r2]
   14f44:	mov	r0, sl
   14f48:	ldr	r3, [r3, #12]
   14f4c:	ldr	r1, [pc, #160]	; 14ff4 <fputs@plt+0x3824>
   14f50:	sub	r3, r9, r3
   14f54:	bl	114c4 <__printf_chk@plt>
   14f58:	b	14dc4 <fputs@plt+0x35f4>
   14f5c:	ldr	r3, [pc, #128]	; 14fe4 <fputs@plt+0x3814>
   14f60:	mov	r2, r6
   14f64:	ldr	r1, [pc, #124]	; 14fe8 <fputs@plt+0x3818>
   14f68:	mov	r0, #1
   14f6c:	str	r6, [r3, #16]
   14f70:	bl	114c4 <__printf_chk@plt>
   14f74:	b	14a9c <fputs@plt+0x32cc>
   14f78:	ldr	r3, [pc, #100]	; 14fe4 <fputs@plt+0x3814>
   14f7c:	ldr	r1, [pc, #100]	; 14fe8 <fputs@plt+0x3818>
   14f80:	mov	r0, #1
   14f84:	ldr	r2, [r3, #12]
   14f88:	sub	r2, r6, r2
   14f8c:	bl	114c4 <__printf_chk@plt>
   14f90:	b	14a9c <fputs@plt+0x32cc>
   14f94:	vmov	s15, r6
   14f98:	vldr	d6, [pc, #56]	; 14fd8 <fputs@plt+0x3808>
   14f9c:	ldr	r1, [pc, #72]	; 14fec <fputs@plt+0x381c>
   14fa0:	mov	r0, #1
   14fa4:	vcvt.f64.s32	d7, s15
   14fa8:	vmul.f64	d7, d7, d6
   14fac:	vmov	r2, r3, d7
   14fb0:	bl	114c4 <__printf_chk@plt>
   14fb4:	b	14a9c <fputs@plt+0x32cc>
   14fb8:	ldr	r3, [pc, #36]	; 14fe4 <fputs@plt+0x3814>
   14fbc:	vldr	d6, [pc, #20]	; 14fd8 <fputs@plt+0x3808>
   14fc0:	ldr	r1, [pc, #36]	; 14fec <fputs@plt+0x381c>
   14fc4:	ldr	r3, [r3, #12]
   14fc8:	b	14a80 <fputs@plt+0x32b0>
   14fcc:	mov	sl, #4
   14fd0:	b	14b68 <fputs@plt+0x3398>
   14fd4:	bl	11674 <__stack_chk_fail@plt>
   14fd8:	andeq	r0, r0, r0
   14fdc:	cdpcc	0, 15, cr0, cr0, cr0, {0}
   14fe0:	andeq	r7, r1, r8, lsl #20
   14fe4:	muleq	r2, r4, r1
   14fe8:	strdeq	r7, [r1], -r0
   14fec:	andeq	r7, r1, ip, lsl #20
   14ff0:	andeq	r7, r1, r4, ror #19
   14ff4:	andeq	r7, r1, ip, ror #19
   14ff8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ffc:	vpush	{d8}
   15000:	ldr	r8, [pc, #584]	; 15250 <fputs@plt+0x3a80>
   15004:	vldr	d8, [pc, #572]	; 15248 <fputs@plt+0x3a78>
   15008:	mov	r4, #0
   1500c:	sub	sp, sp, #44	; 0x2c
   15010:	ldr	ip, [r8]
   15014:	vldr	s15, [sp, #88]	; 0x58
   15018:	str	ip, [sp, #36]	; 0x24
   1501c:	ldr	ip, [sp, #96]	; 0x60
   15020:	str	r1, [sp, #24]
   15024:	vcvt.f64.s32	d7, s15
   15028:	mov	r7, r0
   1502c:	mov	sl, r2
   15030:	mov	fp, r3
   15034:	mov	r2, r4
   15038:	mov	r3, r4
   1503c:	mov	r1, r4
   15040:	ldr	r0, [pc, #524]	; 15254 <fputs@plt+0x3a84>
   15044:	ldr	r5, [sp, #100]	; 0x64
   15048:	vmul.f64	d8, d7, d8
   1504c:	str	r4, [sp, #32]
   15050:	ldr	r9, [sp, #92]	; 0x5c
   15054:	str	ip, [sp, #28]
   15058:	ldr	r6, [sp, #104]	; 0x68
   1505c:	bl	11770 <png_create_write_struct@plt>
   15060:	cmp	r0, r4
   15064:	str	r0, [r5]
   15068:	beq	15228 <fputs@plt+0x3a58>
   1506c:	bl	115e4 <png_create_info_struct@plt>
   15070:	cmp	r0, #0
   15074:	str	r0, [r6]
   15078:	beq	15208 <fputs@plt+0x3a38>
   1507c:	sub	r7, r7, #1
   15080:	ldr	r1, [sp, #28]
   15084:	ldr	r0, [r5]
   15088:	bl	116c8 <png_init_io@plt>
   1508c:	cmp	r7, #4
   15090:	movcc	r7, #2
   15094:	movcs	r7, #0
   15098:	str	r4, [sp, #16]
   1509c:	str	r4, [sp, #12]
   150a0:	str	r4, [sp, #8]
   150a4:	str	fp, [sp]
   150a8:	str	r7, [sp, #4]
   150ac:	mov	r3, sl
   150b0:	ldr	r2, [sp, #24]
   150b4:	ldr	r1, [r6]
   150b8:	ldr	r0, [r5]
   150bc:	bl	11734 <png_set_IHDR@plt>
   150c0:	vcvt.u32.f64	s14, d8
   150c4:	mov	r4, #1
   150c8:	str	r4, [sp]
   150cc:	ldr	r1, [r6]
   150d0:	ldr	r0, [r5]
   150d4:	vmov	r3, s14
   150d8:	vmov	r2, s14
   150dc:	bl	1162c <png_set_pHYs@plt>
   150e0:	cmp	r9, #0
   150e4:	beq	15104 <fputs@plt+0x3934>
   150e8:	add	r1, sp, #32
   150ec:	mov	r0, r9
   150f0:	bl	16550 <fputs@plt+0x4d80>
   150f4:	ldr	r3, [sp, #32]
   150f8:	cmp	r3, #0
   150fc:	mov	sl, r0
   15100:	bne	1512c <fputs@plt+0x395c>
   15104:	ldr	r1, [r6]
   15108:	ldr	r0, [r5]
   1510c:	bl	11698 <png_write_info@plt>
   15110:	ldr	r2, [sp, #36]	; 0x24
   15114:	ldr	r3, [r8]
   15118:	cmp	r2, r3
   1511c:	bne	15204 <fputs@plt+0x3a34>
   15120:	add	sp, sp, #44	; 0x2c
   15124:	vpop	{d8}
   15128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1512c:	add	fp, r0, #16
   15130:	mov	r2, #4
   15134:	mov	r0, fp
   15138:	ldr	r1, [pc, #280]	; 15258 <fputs@plt+0x3a88>
   1513c:	bl	11758 <strncmp@plt>
   15140:	orrs	r2, r0, r7
   15144:	str	r0, [sp, #24]
   15148:	beq	15198 <fputs@plt+0x39c8>
   1514c:	mov	r0, fp
   15150:	mov	r2, #4
   15154:	ldr	r1, [pc, #256]	; 1525c <fputs@plt+0x3a8c>
   15158:	bl	11758 <strncmp@plt>
   1515c:	adds	r7, r7, #0
   15160:	movne	r7, #1
   15164:	ldr	r3, [sp, #24]
   15168:	cmp	r0, #0
   1516c:	movne	r7, #0
   15170:	cmp	r7, #0
   15174:	mov	fp, r0
   15178:	bne	15198 <fputs@plt+0x39c8>
   1517c:	cmp	r3, #0
   15180:	beq	151cc <fputs@plt+0x39fc>
   15184:	cmp	fp, #0
   15188:	beq	151e8 <fputs@plt+0x3a18>
   1518c:	mov	r0, sl
   15190:	bl	11560 <free@plt>
   15194:	b	15104 <fputs@plt+0x3934>
   15198:	mov	r0, r9
   1519c:	ldr	r4, [r5]
   151a0:	ldr	r7, [r6]
   151a4:	bl	117a0 <basename@plt>
   151a8:	ldr	r3, [sp, #32]
   151ac:	mov	r1, r7
   151b0:	str	r3, [sp, #4]
   151b4:	str	sl, [sp]
   151b8:	mov	r3, #0
   151bc:	mov	r2, r0
   151c0:	mov	r0, r4
   151c4:	bl	11794 <png_set_iCCP@plt>
   151c8:	b	1518c <fputs@plt+0x39bc>
   151cc:	ldr	r3, [pc, #140]	; 15260 <fputs@plt+0x3a90>
   151d0:	mov	r1, r4
   151d4:	mov	r2, #60	; 0x3c
   151d8:	ldr	r3, [r3]
   151dc:	ldr	r0, [pc, #128]	; 15264 <fputs@plt+0x3a94>
   151e0:	bl	11638 <fwrite@plt>
   151e4:	b	15184 <fputs@plt+0x39b4>
   151e8:	ldr	r3, [pc, #112]	; 15260 <fputs@plt+0x3a90>
   151ec:	mov	r2, #66	; 0x42
   151f0:	mov	r1, #1
   151f4:	ldr	r3, [r3]
   151f8:	ldr	r0, [pc, #104]	; 15268 <fputs@plt+0x3a98>
   151fc:	bl	11638 <fwrite@plt>
   15200:	b	1518c <fputs@plt+0x39bc>
   15204:	bl	11674 <__stack_chk_fail@plt>
   15208:	ldr	r3, [pc, #80]	; 15260 <fputs@plt+0x3a90>
   1520c:	mov	r2, #30
   15210:	mov	r1, #1
   15214:	ldr	r3, [r3]
   15218:	ldr	r0, [pc, #76]	; 1526c <fputs@plt+0x3a9c>
   1521c:	bl	11638 <fwrite@plt>
   15220:	mov	r0, #1
   15224:	bl	11788 <exit@plt>
   15228:	ldr	r3, [pc, #48]	; 15260 <fputs@plt+0x3a90>
   1522c:	mov	r2, #31
   15230:	mov	r1, #1
   15234:	ldr	r3, [r3]
   15238:	ldr	r0, [pc, #48]	; 15270 <fputs@plt+0x3aa0>
   1523c:	bl	11638 <fwrite@plt>
   15240:	mov	r0, #1
   15244:	bl	11788 <exit@plt>
   15248:	cfldr64lt	mvdx15, [sl, #-956]!	; 0xfffffc44
   1524c:	submi	sl, r3, lr, asr pc
   15250:	andeq	r9, r2, r8, lsl #27
   15254:	andeq	r7, r1, ip, asr sl
   15258:	andeq	r7, r1, r4, lsr #21
   1525c:	andeq	r7, r1, ip, lsr #21
   15260:	andeq	sl, r2, r0, lsl #3
   15264:			; <UNDEFINED> instruction: 0x00017ab4
   15268:	strdeq	r7, [r1], -r4
   1526c:	andeq	r7, r1, r4, lsl #21
   15270:	andeq	r7, r1, r4, ror #20
   15274:	push	{r4, lr}
   15278:	mov	r5, r0
   1527c:	ldr	r4, [pc, #172]	; 15330 <fputs@plt+0x3b60>
   15280:	ldr	r3, [r4]
   15284:	cmp	r3, #0
   15288:	beq	152a0 <fputs@plt+0x3ad0>
   1528c:	ldr	r3, [r4, #20]
   15290:	cmp	r3, #1
   15294:	bgt	15314 <fputs@plt+0x3b44>
   15298:	ldr	r0, [r4]
   1529c:	bl	116b0 <sane_close@plt>
   152a0:	ldr	r3, [r4, #20]
   152a4:	cmp	r3, #1
   152a8:	ble	152c4 <fputs@plt+0x3af4>
   152ac:	ldr	r3, [pc, #128]	; 15334 <fputs@plt+0x3b64>
   152b0:	mov	r2, #18
   152b4:	mov	r1, #1
   152b8:	ldr	r3, [r3]
   152bc:	ldr	r0, [pc, #116]	; 15338 <fputs@plt+0x3b68>
   152c0:	bl	11638 <fwrite@plt>
   152c4:	bl	11614 <sane_exit@plt>
   152c8:	ldr	r0, [r4, #24]
   152cc:	cmp	r0, #0
   152d0:	beq	152d8 <fputs@plt+0x3b08>
   152d4:	bl	11560 <free@plt>
   152d8:	ldr	r0, [r4, #28]
   152dc:	cmp	r0, #0
   152e0:	beq	152e8 <fputs@plt+0x3b18>
   152e4:	bl	11560 <free@plt>
   152e8:	ldr	r3, [r4, #20]
   152ec:	cmp	r3, #1
   152f0:	ble	1530c <fputs@plt+0x3b3c>
   152f4:	ldr	r3, [pc, #56]	; 15334 <fputs@plt+0x3b64>
   152f8:	mov	r2, #20
   152fc:	mov	r1, #1
   15300:	ldr	r3, [r3]
   15304:	ldr	r0, [pc, #48]	; 1533c <fputs@plt+0x3b6c>
   15308:	bl	11638 <fwrite@plt>
   1530c:	mov	r0, r5
   15310:	bl	11788 <exit@plt>
   15314:	ldr	r3, [pc, #24]	; 15334 <fputs@plt+0x3b64>
   15318:	mov	r2, #15
   1531c:	mov	r1, #1
   15320:	ldr	r3, [r3]
   15324:	ldr	r0, [pc, #20]	; 15340 <fputs@plt+0x3b70>
   15328:	bl	11638 <fwrite@plt>
   1532c:	b	15298 <fputs@plt+0x3ac8>
   15330:	muleq	r2, r4, r1
   15334:	andeq	sl, r2, r0, lsl #3
   15338:	andeq	r7, r1, r8, asr #22
   1533c:	andeq	r7, r1, ip, asr fp
   15340:	andeq	r7, r1, r8, lsr fp
   15344:	ldr	r3, [pc, #1052]	; 15768 <fputs@plt+0x3f98>
   15348:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1534c:	sub	sp, sp, #36	; 0x24
   15350:	ldr	r3, [r3]
   15354:	mov	r1, #0
   15358:	mov	r9, r0
   1535c:	str	r3, [sp, #28]
   15360:	bl	116bc <sane_get_option_descriptor@plt>
   15364:	cmp	r0, #0
   15368:	beq	15744 <fputs@plt+0x3f74>
   1536c:	mov	r2, #0
   15370:	str	r2, [sp]
   15374:	mov	r1, r2
   15378:	add	r3, sp, #20
   1537c:	mov	r0, r9
   15380:	bl	116e0 <sane_control_option@plt>
   15384:	subs	r5, r0, #0
   15388:	bne	1571c <fputs@plt+0x3f4c>
   1538c:	ldr	r3, [sp, #20]
   15390:	cmp	r3, #1
   15394:	movle	r7, #352	; 0x160
   15398:	ble	154d4 <fputs@plt+0x3d04>
   1539c:	ldr	r8, [pc, #968]	; 1576c <fputs@plt+0x3f9c>
   153a0:	mov	r4, #1
   153a4:	b	153bc <fputs@plt+0x3bec>
   153a8:	add	r5, r5, #1
   153ac:	ldr	r3, [sp, #20]
   153b0:	add	r4, r4, #1
   153b4:	cmp	r3, r4
   153b8:	ble	154cc <fputs@plt+0x3cfc>
   153bc:	mov	r1, r4
   153c0:	mov	r0, r9
   153c4:	bl	116bc <sane_get_option_descriptor@plt>
   153c8:	subs	r6, r0, #0
   153cc:	beq	156fc <fputs@plt+0x3f2c>
   153d0:	ldr	r3, [r6, #24]
   153d4:	tst	r3, #1
   153d8:	beq	153ac <fputs@plt+0x3bdc>
   153dc:	ldr	r3, [r6, #12]
   153e0:	cmp	r3, #5
   153e4:	beq	153ac <fputs@plt+0x3bdc>
   153e8:	ldr	sl, [r8, #24]
   153ec:	ldr	r0, [r8, #28]
   153f0:	lsl	fp, r5, #4
   153f4:	ldr	r2, [r6]
   153f8:	add	r7, sl, fp
   153fc:	cmp	r3, #0
   15400:	mov	r1, #0
   15404:	moveq	r3, #2
   15408:	str	r4, [r0, r5, lsl #2]
   1540c:	str	r2, [sl, r5, lsl #4]
   15410:	str	r1, [r7, #8]
   15414:	str	r1, [r7, #12]
   15418:	streq	r3, [r7, #4]
   1541c:	beq	153a8 <fputs@plt+0x3bd8>
   15420:	cmp	r3, #4
   15424:	streq	r1, [r7, #4]
   15428:	beq	153a8 <fputs@plt+0x3bd8>
   1542c:	sub	r3, r3, #1
   15430:	cmp	r3, #1
   15434:	mov	r3, #1
   15438:	str	r3, [r7, #4]
   1543c:	bhi	153a8 <fputs@plt+0x3bd8>
   15440:	ldr	r3, [r6, #20]
   15444:	cmp	r3, #4
   15448:	bne	153a8 <fputs@plt+0x3bd8>
   1544c:	ldr	r3, [r6, #16]
   15450:	cmp	r3, #4
   15454:	beq	15604 <fputs@plt+0x3e34>
   15458:	bic	r3, r3, #2
   1545c:	cmp	r3, #1
   15460:	bne	153a8 <fputs@plt+0x3bd8>
   15464:	mov	r0, r2
   15468:	ldr	r1, [pc, #768]	; 15770 <fputs@plt+0x3fa0>
   1546c:	str	r2, [sp, #12]
   15470:	bl	1177c <strcmp@plt>
   15474:	ldr	r2, [sp, #12]
   15478:	cmp	r0, #0
   1547c:	bne	15598 <fputs@plt+0x3dc8>
   15480:	ldm	r6!, {r0, r1, r2, r3}
   15484:	ldr	lr, [pc, #744]	; 15774 <fputs@plt+0x3fa4>
   15488:	ldr	ip, [pc, #744]	; 15778 <fputs@plt+0x3fa8>
   1548c:	str	lr, [sl, fp]
   15490:	mov	lr, #120	; 0x78
   15494:	str	lr, [r7, #12]
   15498:	stmia	ip!, {r0, r1, r2, r3}
   1549c:	ldm	r6!, {r0, r1, r2, r3}
   154a0:	ldr	r7, [pc, #724]	; 1577c <fputs@plt+0x3fac>
   154a4:	ldr	lr, [pc, #724]	; 15780 <fputs@plt+0x3fb0>
   154a8:	stmia	ip!, {r0, r1, r2, r3}
   154ac:	ldr	r3, [pc, #720]	; 15784 <fputs@plt+0x3fb4>
   154b0:	ldr	r2, [r6]
   154b4:	str	r4, [r8, #32]
   154b8:	str	r7, [r8, #52]	; 0x34
   154bc:	str	r2, [ip]
   154c0:	str	lr, [r8, #56]	; 0x38
   154c4:	str	r3, [r8, #48]	; 0x30
   154c8:	b	153a8 <fputs@plt+0x3bd8>
   154cc:	lsl	r5, r5, #4
   154d0:	add	r7, r5, #352	; 0x160
   154d4:	ldr	r4, [pc, #656]	; 1576c <fputs@plt+0x3f9c>
   154d8:	mov	r2, #352	; 0x160
   154dc:	ldr	r1, [pc, #676]	; 15788 <fputs@plt+0x3fb8>
   154e0:	ldr	r6, [r4, #24]
   154e4:	add	r0, r6, r5
   154e8:	bl	115cc <memcpy@plt>
   154ec:	ldr	r1, [r4, #32]
   154f0:	mov	r3, #0
   154f4:	add	r2, r6, r7
   154f8:	cmp	r1, r3
   154fc:	str	r3, [r6, r7]
   15500:	str	r3, [r2, #4]
   15504:	str	r3, [r2, #8]
   15508:	str	r3, [r2, #12]
   1550c:	beq	1551c <fputs@plt+0x3d4c>
   15510:	ldr	r5, [r4, #192]	; 0xc0
   15514:	cmp	r5, r3
   15518:	beq	15620 <fputs@plt+0x3e50>
   1551c:	ldr	r1, [r4, #36]	; 0x24
   15520:	cmp	r1, #0
   15524:	bne	15544 <fputs@plt+0x3d74>
   15528:	ldr	r3, [pc, #568]	; 15768 <fputs@plt+0x3f98>
   1552c:	ldr	r2, [sp, #28]
   15530:	ldr	r3, [r3]
   15534:	cmp	r2, r3
   15538:	bne	15764 <fputs@plt+0x3f94>
   1553c:	add	sp, sp, #36	; 0x24
   15540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15544:	ldr	r5, [r4, #196]	; 0xc4
   15548:	cmp	r5, #0
   1554c:	bne	15528 <fputs@plt+0x3d58>
   15550:	str	r5, [sp]
   15554:	ldr	r3, [pc, #560]	; 1578c <fputs@plt+0x3fbc>
   15558:	mov	r2, r5
   1555c:	mov	r0, r9
   15560:	bl	116e0 <sane_control_option@plt>
   15564:	ldr	r1, [r4, #44]	; 0x2c
   15568:	cmp	r1, #0
   1556c:	beq	15528 <fputs@plt+0x3d58>
   15570:	mov	r2, r5
   15574:	add	r3, sp, #24
   15578:	str	r5, [sp]
   1557c:	mov	r0, r9
   15580:	bl	116e0 <sane_control_option@plt>
   15584:	ldr	r3, [r4, #204]	; 0xcc
   15588:	ldr	r2, [sp, #24]
   1558c:	sub	r3, r3, r2
   15590:	str	r3, [r4, #204]	; 0xcc
   15594:	b	15528 <fputs@plt+0x3d58>
   15598:	mov	r0, r2
   1559c:	ldr	r1, [pc, #492]	; 15790 <fputs@plt+0x3fc0>
   155a0:	str	r2, [sp, #12]
   155a4:	bl	1177c <strcmp@plt>
   155a8:	ldr	r2, [sp, #12]
   155ac:	cmp	r0, #0
   155b0:	beq	15668 <fputs@plt+0x3e98>
   155b4:	mov	r0, r2
   155b8:	ldr	r1, [pc, #468]	; 15794 <fputs@plt+0x3fc4>
   155bc:	str	r2, [sp, #12]
   155c0:	bl	1177c <strcmp@plt>
   155c4:	ldr	r2, [sp, #12]
   155c8:	cmp	r0, #0
   155cc:	bne	156b4 <fputs@plt+0x3ee4>
   155d0:	ldm	r6!, {r0, r1, r2, r3}
   155d4:	mov	lr, #108	; 0x6c
   155d8:	ldr	ip, [pc, #440]	; 15798 <fputs@plt+0x3fc8>
   155dc:	str	lr, [r7, #12]
   155e0:	ldr	lr, [pc, #436]	; 1579c <fputs@plt+0x3fcc>
   155e4:	stmia	ip!, {r0, r1, r2, r3}
   155e8:	ldm	r6!, {r0, r1, r2, r3}
   155ec:	str	r4, [r8, #40]	; 0x28
   155f0:	stmia	ip!, {r0, r1, r2, r3}
   155f4:	ldr	r3, [r6]
   155f8:	str	lr, [r8, #120]	; 0x78
   155fc:	str	r3, [ip]
   15600:	b	153a8 <fputs@plt+0x3bd8>
   15604:	mov	r0, r2
   15608:	ldr	r1, [pc, #400]	; 157a0 <fputs@plt+0x3fd0>
   1560c:	bl	1177c <strcmp@plt>
   15610:	cmp	r0, #0
   15614:	ldreq	r3, [pc, #392]	; 157a4 <fputs@plt+0x3fd4>
   15618:	streq	r4, [r3]
   1561c:	b	153a8 <fputs@plt+0x3bd8>
   15620:	str	r5, [sp]
   15624:	add	r3, r4, #200	; 0xc8
   15628:	mov	r2, r5
   1562c:	mov	r0, r9
   15630:	bl	116e0 <sane_control_option@plt>
   15634:	ldr	r1, [r4, #40]	; 0x28
   15638:	cmp	r1, #0
   1563c:	beq	1551c <fputs@plt+0x3d4c>
   15640:	mov	r2, r5
   15644:	add	r3, sp, #24
   15648:	str	r5, [sp]
   1564c:	mov	r0, r9
   15650:	bl	116e0 <sane_control_option@plt>
   15654:	ldr	r3, [r4, #200]	; 0xc8
   15658:	ldr	r2, [sp, #24]
   1565c:	sub	r3, r3, r2
   15660:	str	r3, [r4, #200]	; 0xc8
   15664:	b	1551c <fputs@plt+0x3d4c>
   15668:	ldm	r6!, {r0, r1, r2, r3}
   1566c:	ldr	lr, [pc, #308]	; 157a8 <fputs@plt+0x3fd8>
   15670:	ldr	ip, [pc, #308]	; 157ac <fputs@plt+0x3fdc>
   15674:	str	lr, [sl, fp]
   15678:	mov	lr, #121	; 0x79
   1567c:	str	lr, [r7, #12]
   15680:	stmia	ip!, {r0, r1, r2, r3}
   15684:	ldm	r6!, {r0, r1, r2, r3}
   15688:	ldr	r7, [pc, #288]	; 157b0 <fputs@plt+0x3fe0>
   1568c:	ldr	lr, [pc, #288]	; 157b4 <fputs@plt+0x3fe4>
   15690:	stmia	ip!, {r0, r1, r2, r3}
   15694:	ldr	r3, [pc, #284]	; 157b8 <fputs@plt+0x3fe8>
   15698:	ldr	r2, [r6]
   1569c:	str	r4, [r8, #36]	; 0x24
   156a0:	str	r7, [r8, #88]	; 0x58
   156a4:	str	r2, [ip]
   156a8:	str	lr, [r8, #92]	; 0x5c
   156ac:	str	r3, [r8, #84]	; 0x54
   156b0:	b	153a8 <fputs@plt+0x3bd8>
   156b4:	mov	r0, r2
   156b8:	ldr	r1, [pc, #252]	; 157bc <fputs@plt+0x3fec>
   156bc:	bl	1177c <strcmp@plt>
   156c0:	cmp	r0, #0
   156c4:	bne	153a8 <fputs@plt+0x3bd8>
   156c8:	ldm	r6!, {r0, r1, r2, r3}
   156cc:	mov	lr, #116	; 0x74
   156d0:	ldr	ip, [pc, #232]	; 157c0 <fputs@plt+0x3ff0>
   156d4:	str	lr, [r7, #12]
   156d8:	str	r4, [r8, #44]	; 0x2c
   156dc:	stmia	ip!, {r0, r1, r2, r3}
   156e0:	ldm	r6!, {r0, r1, r2, r3}
   156e4:	stmia	ip!, {r0, r1, r2, r3}
   156e8:	ldr	r2, [pc, #212]	; 157c4 <fputs@plt+0x3ff4>
   156ec:	ldr	r3, [r6]
   156f0:	str	r2, [r8, #156]	; 0x9c
   156f4:	str	r3, [ip]
   156f8:	b	153a8 <fputs@plt+0x3bd8>
   156fc:	ldr	r1, [pc, #196]	; 157c8 <fputs@plt+0x3ff8>
   15700:	mov	r3, r4
   15704:	ldr	r2, [pc, #192]	; 157cc <fputs@plt+0x3ffc>
   15708:	ldr	r0, [r1]
   1570c:	mov	r1, #1
   15710:	bl	11680 <__fprintf_chk@plt>
   15714:	mov	r0, #1
   15718:	bl	15274 <fputs@plt+0x3aa4>
   1571c:	ldr	r3, [pc, #164]	; 157c8 <fputs@plt+0x3ff8>
   15720:	ldr	r4, [r3]
   15724:	bl	1144c <sane_strstatus@plt>
   15728:	ldr	r2, [pc, #160]	; 157d0 <fputs@plt+0x4000>
   1572c:	mov	r1, #1
   15730:	mov	r3, r0
   15734:	mov	r0, r4
   15738:	bl	11680 <__fprintf_chk@plt>
   1573c:	mov	r0, #1
   15740:	bl	15274 <fputs@plt+0x3aa4>
   15744:	ldr	r3, [pc, #124]	; 157c8 <fputs@plt+0x3ff8>
   15748:	mov	r2, #45	; 0x2d
   1574c:	mov	r1, #1
   15750:	ldr	r3, [r3]
   15754:	ldr	r0, [pc, #120]	; 157d4 <fputs@plt+0x4004>
   15758:	bl	11638 <fwrite@plt>
   1575c:	mov	r0, #1
   15760:	bl	15274 <fputs@plt+0x3aa4>
   15764:	bl	11674 <__stack_chk_fail@plt>
   15768:	andeq	r9, r2, r8, lsl #27
   1576c:	muleq	r2, r4, r1
   15770:	andeq	r7, r1, r8, lsl #24
   15774:	andeq	r7, r1, r0, lsl ip
   15778:	andeq	sl, r2, r4, asr #3
   1577c:	andeq	r7, r1, r8, lsl ip
   15780:	andeq	r7, r1, r4, lsr #24
   15784:	andeq	r7, r1, r0, lsl #18
   15788:	andeq	sl, r2, ip
   1578c:	andeq	sl, r2, r0, ror #4
   15790:	andeq	r7, r1, r8, lsr ip
   15794:	andeq	r7, r1, ip, ror #24
   15798:	andeq	sl, r2, ip, lsl #4
   1579c:	muleq	r1, r8, r9
   157a0:	strdeq	r7, [r1], -ip
   157a4:	andeq	sl, r2, r8
   157a8:	andeq	r7, r1, r0, asr #24
   157ac:	andeq	sl, r2, r8, ror #3
   157b0:	andeq	r7, r1, r8, asr #24
   157b4:	andeq	r7, r1, r4, asr ip
   157b8:	muleq	r1, r4, r9
   157bc:	andeq	r7, r1, r4, ror ip
   157c0:	andeq	sl, r2, r0, lsr r2
   157c4:	andeq	r8, r1, ip, lsl #27
   157c8:	andeq	sl, r2, r0, lsl #3
   157cc:	andeq	r7, r1, ip, asr #23
   157d0:	andeq	r7, r1, r4, lsr #23
   157d4:	andeq	r7, r1, r4, ror fp
   157d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157dc:	vpush	{d8-d13}
   157e0:	mov	r9, r2
   157e4:	mov	sl, r3
   157e8:	lsl	r2, r3, #2
   157ec:	ldr	r3, [pc, #1020]	; 15bf0 <fputs@plt+0x4420>
   157f0:	sub	sp, sp, #44	; 0x2c
   157f4:	mov	r8, r0
   157f8:	ldr	r3, [r3]
   157fc:	mov	r0, r9
   15800:	mov	r4, r1
   15804:	vldr	d9, [pc, #948]	; 15bc0 <fputs@plt+0x43f0>
   15808:	mov	r1, #0
   1580c:	vldr	d12, [pc, #948]	; 15bc8 <fputs@plt+0x43f8>
   15810:	vldr	d11, [pc, #952]	; 15bd0 <fputs@plt+0x4400>
   15814:	vldr	d10, [pc, #956]	; 15bd8 <fputs@plt+0x4408>
   15818:	vldr	d8, [pc, #960]	; 15be0 <fputs@plt+0x4410>
   1581c:	mov	r7, #0
   15820:	str	r3, [sp, #36]	; 0x24
   15824:	str	r2, [sp, #20]
   15828:	bl	11500 <memset@plt>
   1582c:	mov	r3, sl
   15830:	mov	r5, r7
   15834:	str	r7, [sp, #16]
   15838:	mov	sl, r9
   1583c:	mvn	r6, #0
   15840:	mov	r9, r7
   15844:	mov	r7, r8
   15848:	mov	r8, r3
   1584c:	ldrb	r2, [r4]
   15850:	cmp	r2, #91	; 0x5b
   15854:	addne	r6, r6, #1
   15858:	beq	15a0c <fputs@plt+0x423c>
   1585c:	cmp	r6, r8
   15860:	bcs	15c30 <fputs@plt+0x4460>
   15864:	ldr	r2, [r7, #12]
   15868:	cmp	r2, #2
   1586c:	beq	159f8 <fputs@plt+0x4228>
   15870:	mov	r2, #10
   15874:	add	r1, sp, #32
   15878:	mov	r0, r4
   1587c:	bl	115f0 <strtol@plt>
   15880:	vmov	s15, r0
   15884:	vcvt.f64.s32	d13, s15
   15888:	ldr	fp, [sp, #32]
   1588c:	cmp	r4, fp
   15890:	beq	15b94 <fputs@plt+0x43c4>
   15894:	ldr	r2, [r7, #16]
   15898:	sub	r2, r2, #2
   1589c:	cmp	r2, #4
   158a0:	ldrls	pc, [pc, r2, lsl #2]
   158a4:	b	158c8 <fputs@plt+0x40f8>
   158a8:	ldrdeq	r5, [r1], -r8
   158ac:	muleq	r1, r8, r9
   158b0:	andeq	r5, r1, r4, ror #18
   158b4:			; <UNDEFINED> instruction: 0x000158bc
   158b8:	andeq	r5, r1, ip, ror r9
   158bc:	ldrb	r2, [fp]
   158c0:	cmp	r2, #37	; 0x25
   158c4:	addeq	fp, fp, #1
   158c8:	vcmpe.f64	d13, #0.0
   158cc:	vmrs	APSR_nzcv, fpscr
   158d0:	vsubmi.f64	d13, d13, d8
   158d4:	vaddpl.f64	d13, d13, d8
   158d8:	cmp	fp, #0
   158dc:	vcvt.s32.f64	s15, d13
   158e0:	vmov	r2, s15
   158e4:	beq	15b8c <fputs@plt+0x43bc>
   158e8:	ldrb	r1, [fp]
   158ec:	sub	r0, r1, #44	; 0x2c
   158f0:	cmp	r1, #0
   158f4:	cmpne	r0, #1
   158f8:	bhi	15c64 <fputs@plt+0x4494>
   158fc:	cmp	r9, #45	; 0x2d
   15900:	str	r2, [sl, r6, lsl #2]
   15904:	lsl	r1, r6, #2
   15908:	beq	15a44 <fputs@plt+0x4274>
   1590c:	mov	r4, fp
   15910:	str	r2, [sp, #16]
   15914:	ldrb	r9, [r4], #1
   15918:	mov	r5, r6
   1591c:	sub	r2, r9, #44	; 0x2c
   15920:	cmp	r2, #1
   15924:	bls	1584c <fputs@plt+0x407c>
   15928:	ldr	r3, [pc, #760]	; 15c28 <fputs@plt+0x4458>
   1592c:	mov	r9, sl
   15930:	mov	sl, r8
   15934:	ldr	r2, [r3, #20]
   15938:	mov	r8, r7
   1593c:	cmp	r2, #2
   15940:	bgt	15ac8 <fputs@plt+0x42f8>
   15944:	ldr	r3, [pc, #676]	; 15bf0 <fputs@plt+0x4420>
   15948:	ldr	r2, [sp, #36]	; 0x24
   1594c:	ldr	r3, [r3]
   15950:	cmp	r2, r3
   15954:	bne	15cbc <fputs@plt+0x44ec>
   15958:	add	sp, sp, #44	; 0x2c
   1595c:	vpop	{d8-d13}
   15960:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15964:	mov	r0, fp
   15968:	ldr	r1, [pc, #644]	; 15bf4 <fputs@plt+0x4424>
   1596c:	bl	1177c <strcmp@plt>
   15970:	cmp	r0, #0
   15974:	addeq	fp, fp, #3
   15978:	b	158c8 <fputs@plt+0x40f8>
   1597c:	ldr	r1, [pc, #628]	; 15bf8 <fputs@plt+0x4428>
   15980:	mov	r0, fp
   15984:	bl	1177c <strcmp@plt>
   15988:	cmp	r0, #0
   1598c:	bne	158c8 <fputs@plt+0x40f8>
   15990:	add	fp, fp, #2
   15994:	b	158c8 <fputs@plt+0x40f8>
   15998:	ldrb	r4, [fp]
   1599c:	cmp	r4, #0
   159a0:	beq	158c8 <fputs@plt+0x40f8>
   159a4:	ldr	r1, [pc, #592]	; 15bfc <fputs@plt+0x442c>
   159a8:	mov	r0, fp
   159ac:	bl	1177c <strcmp@plt>
   159b0:	cmp	r0, #0
   159b4:	beq	15990 <fputs@plt+0x41c0>
   159b8:	ldr	r1, [pc, #576]	; 15c00 <fputs@plt+0x4430>
   159bc:	mov	r0, fp
   159c0:	bl	1177c <strcmp@plt>
   159c4:	cmp	r0, #0
   159c8:	bne	15a9c <fputs@plt+0x42cc>
   159cc:	add	fp, fp, #2
   159d0:	vmul.f64	d13, d13, d11
   159d4:	b	158c8 <fputs@plt+0x40f8>
   159d8:	ldrb	r2, [fp]
   159dc:	and	r1, r2, #223	; 0xdf
   159e0:	cmp	r1, #66	; 0x42
   159e4:	bne	158c8 <fputs@plt+0x40f8>
   159e8:	cmp	r2, #66	; 0x42
   159ec:	add	fp, fp, #1
   159f0:	vmuleq.f64	d13, d13, d10
   159f4:	b	158c8 <fputs@plt+0x40f8>
   159f8:	add	r1, sp, #32
   159fc:	mov	r0, r4
   15a00:	bl	114d0 <strtod@plt>
   15a04:	vmul.f64	d13, d0, d9
   15a08:	b	15888 <fputs@plt+0x40b8>
   15a0c:	add	fp, r4, #1
   15a10:	mov	r0, fp
   15a14:	mov	r2, #10
   15a18:	add	r1, sp, #28
   15a1c:	bl	115f0 <strtol@plt>
   15a20:	ldr	r4, [sp, #28]
   15a24:	cmp	r4, fp
   15a28:	mov	r6, r0
   15a2c:	beq	15c8c <fputs@plt+0x44bc>
   15a30:	ldrb	r2, [r4]
   15a34:	cmp	r2, #93	; 0x5d
   15a38:	bne	15c8c <fputs@plt+0x44bc>
   15a3c:	add	r4, r4, #1
   15a40:	b	1585c <fputs@plt+0x408c>
   15a44:	sub	ip, r6, r5
   15a48:	vldr	s15, [sp, #16]
   15a4c:	vmov	s13, ip
   15a50:	add	r0, r5, #1
   15a54:	cmp	r6, r0
   15a58:	vcvt.f64.s32	d7, s15
   15a5c:	vcvt.f64.s32	d5, s13
   15a60:	vmov	s13, r2
   15a64:	vcvt.f64.s32	d4, s13
   15a68:	vsub.f64	d4, d4, d7
   15a6c:	vdiv.f64	d6, d4, d5
   15a70:	ble	1590c <fputs@plt+0x413c>
   15a74:	sub	r0, sl, #4
   15a78:	add	r5, sl, r5, lsl #2
   15a7c:	add	r0, r0, r1
   15a80:	vadd.f64	d7, d7, d6
   15a84:	vcvt.s32.f64	s11, d7
   15a88:	vmov	r3, s11
   15a8c:	str	r3, [r5, #4]!
   15a90:	cmp	r0, r5
   15a94:	bne	15a80 <fputs@plt+0x42b0>
   15a98:	b	1590c <fputs@plt+0x413c>
   15a9c:	ldr	r1, [pc, #352]	; 15c04 <fputs@plt+0x4434>
   15aa0:	mov	r0, fp
   15aa4:	bl	1177c <strcmp@plt>
   15aa8:	cmp	r0, #0
   15aac:	cmpne	r4, #34	; 0x22
   15ab0:	bne	15b68 <fputs@plt+0x4398>
   15ab4:	cmp	r4, #34	; 0x22
   15ab8:	addeq	fp, fp, #1
   15abc:	addne	fp, fp, #2
   15ac0:	vmul.f64	d13, d13, d12
   15ac4:	b	158c8 <fputs@plt+0x40f8>
   15ac8:	ldr	r4, [pc, #340]	; 15c24 <fputs@plt+0x4454>
   15acc:	ldr	r2, [r7]
   15ad0:	ldr	r3, [r3, #8]
   15ad4:	ldr	r0, [r4]
   15ad8:	mov	r1, #1
   15adc:	str	r2, [sp]
   15ae0:	ldr	r2, [pc, #288]	; 15c08 <fputs@plt+0x4438>
   15ae4:	bl	11680 <__fprintf_chk@plt>
   15ae8:	cmp	sl, #0
   15aec:	beq	15b58 <fputs@plt+0x4388>
   15af0:	ldr	r3, [sp, #20]
   15af4:	sub	r9, r9, #4
   15af8:	vldr	d8, [pc, #232]	; 15be8 <fputs@plt+0x4418>
   15afc:	ldr	r5, [pc, #264]	; 15c0c <fputs@plt+0x443c>
   15b00:	ldr	r6, [pc, #264]	; 15c10 <fputs@plt+0x4440>
   15b04:	add	r7, r3, r9
   15b08:	b	15b20 <fputs@plt+0x4350>
   15b0c:	mov	r2, r5
   15b10:	mov	r1, #1
   15b14:	bl	11680 <__fprintf_chk@plt>
   15b18:	cmp	r9, r7
   15b1c:	beq	15b58 <fputs@plt+0x4388>
   15b20:	ldr	r3, [r8, #12]
   15b24:	ldr	r0, [r4]
   15b28:	cmp	r3, #2
   15b2c:	ldr	r3, [r9, #4]!
   15b30:	bne	15b0c <fputs@plt+0x433c>
   15b34:	vmov	s15, r3
   15b38:	mov	r2, r6
   15b3c:	mov	r1, #1
   15b40:	vcvt.f64.s32	d7, s15
   15b44:	vmul.f64	d7, d7, d8
   15b48:	vstr	d7, [sp]
   15b4c:	bl	11680 <__fprintf_chk@plt>
   15b50:	cmp	r9, r7
   15b54:	bne	15b20 <fputs@plt+0x4350>
   15b58:	ldr	r1, [r4]
   15b5c:	mov	r0, #10
   15b60:	bl	1168c <fputc@plt>
   15b64:	b	15944 <fputs@plt+0x4174>
   15b68:	ldr	r1, [pc, #180]	; 15c24 <fputs@plt+0x4454>
   15b6c:	ldr	r0, [r7]
   15b70:	ldr	r3, [pc, #176]	; 15c28 <fputs@plt+0x4458>
   15b74:	ldr	r2, [pc, #152]	; 15c14 <fputs@plt+0x4444>
   15b78:	stm	sp, {r0, fp}
   15b7c:	ldr	r0, [r1]
   15b80:	ldr	r3, [r3, #8]
   15b84:	mov	r1, #1
   15b88:	bl	11680 <__fprintf_chk@plt>
   15b8c:	mov	r0, #1
   15b90:	bl	15274 <fputs@plt+0x3aa4>
   15b94:	ldr	r1, [r7]
   15b98:	ldr	r2, [pc, #132]	; 15c24 <fputs@plt+0x4454>
   15b9c:	ldr	r3, [pc, #132]	; 15c28 <fputs@plt+0x4458>
   15ba0:	stm	sp, {r1, r4}
   15ba4:	mov	r1, #1
   15ba8:	ldr	r0, [r2]
   15bac:	ldr	r3, [r3, #8]
   15bb0:	ldr	r2, [pc, #96]	; 15c18 <fputs@plt+0x4448>
   15bb4:	bl	11680 <__fprintf_chk@plt>
   15bb8:	mov	r0, #1
   15bbc:	bl	15274 <fputs@plt+0x3aa4>
   15bc0:	andeq	r0, r0, r0
   15bc4:	rscsmi	r0, r0, r0
   15bc8:	strbtvs	r6, [r6], -r6, ror #12
   15bcc:	eorsmi	r6, r9, r6, ror #12
   15bd0:	andeq	r0, r0, r0
   15bd4:	eormi	r0, r4, r0
   15bd8:	andeq	r0, r0, r0
   15bdc:	eormi	r0, r0, r0
   15be0:	andeq	r0, r0, r0
   15be4:	svccc	0x00e00000
   15be8:	andeq	r0, r0, r0
   15bec:	cdpcc	0, 15, cr0, cr0, cr0, {0}
   15bf0:	andeq	r9, r2, r8, lsl #27
   15bf4:	andeq	r7, r1, r8, ror r7
   15bf8:	andeq	r7, r1, ip, ror r7
   15bfc:	andeq	r7, r1, r4, ror r7
   15c00:	andeq	r7, r1, r8, lsr #26
   15c04:	andeq	r7, r1, ip, lsr #26
   15c08:	andeq	r7, r1, r0, lsr #27
   15c0c:			; <UNDEFINED> instruction: 0x00017dbc
   15c10:			; <UNDEFINED> instruction: 0x00017db8
   15c14:	andeq	r7, r1, r0, lsr sp
   15c18:	strdeq	r7, [r1], -r0
   15c1c:			; <UNDEFINED> instruction: 0x00017cbc
   15c20:	andeq	r7, r1, r4, ror #26
   15c24:	andeq	sl, r2, r0, lsl #3
   15c28:	muleq	r2, r4, r1
   15c2c:	andeq	r7, r1, ip, ror ip
   15c30:	ldr	r0, [r7]
   15c34:	ldr	r1, [pc, #-20]	; 15c28 <fputs@plt+0x4458>
   15c38:	ldr	r2, [pc, #-28]	; 15c24 <fputs@plt+0x4454>
   15c3c:	mov	sl, r8
   15c40:	sub	sl, sl, #1
   15c44:	stm	sp, {r0, r6, sl}
   15c48:	ldr	r3, [r1, #8]
   15c4c:	ldr	r0, [r2]
   15c50:	mov	r1, #1
   15c54:	ldr	r2, [pc, #-64]	; 15c1c <fputs@plt+0x444c>
   15c58:	bl	11680 <__fprintf_chk@plt>
   15c5c:	mov	r0, #1
   15c60:	bl	15274 <fputs@plt+0x3aa4>
   15c64:	ldr	r0, [r7]
   15c68:	ldr	r1, [pc, #-76]	; 15c24 <fputs@plt+0x4454>
   15c6c:	ldr	r3, [pc, #-76]	; 15c28 <fputs@plt+0x4458>
   15c70:	stm	sp, {r0, fp}
   15c74:	ldr	r2, [pc, #-92]	; 15c20 <fputs@plt+0x4450>
   15c78:	ldr	r3, [r3, #8]
   15c7c:	ldr	r0, [r1]
   15c80:	mov	r1, #1
   15c84:	bl	11680 <__fprintf_chk@plt>
   15c88:	b	15b8c <fputs@plt+0x43bc>
   15c8c:	ldr	r1, [r7]
   15c90:	ldr	r2, [pc, #-116]	; 15c24 <fputs@plt+0x4454>
   15c94:	ldr	r3, [pc, #-116]	; 15c28 <fputs@plt+0x4458>
   15c98:	mov	r4, fp
   15c9c:	stm	sp, {r1, r4}
   15ca0:	mov	r1, #1
   15ca4:	ldr	r0, [r2]
   15ca8:	ldr	r3, [r3, #8]
   15cac:	ldr	r2, [pc, #-136]	; 15c2c <fputs@plt+0x445c>
   15cb0:	bl	11680 <__fprintf_chk@plt>
   15cb4:	mov	r0, #1
   15cb8:	bl	15274 <fputs@plt+0x3aa4>
   15cbc:	bl	11674 <__stack_chk_fail@plt>
   15cc0:	push	{r4, r5, r6, r7, r8, r9, lr}
   15cc4:	sub	sp, sp, #36	; 0x24
   15cc8:	ldr	r5, [pc, #464]	; 15ea0 <fputs@plt+0x46d0>
   15ccc:	mov	ip, #0
   15cd0:	mov	r7, r2
   15cd4:	ldr	r3, [r5]
   15cd8:	str	ip, [sp, #24]
   15cdc:	str	r3, [sp, #28]
   15ce0:	mov	r6, r0
   15ce4:	mov	r8, r1
   15ce8:	bl	116bc <sane_get_option_descriptor@plt>
   15cec:	subs	r4, r0, #0
   15cf0:	beq	15d00 <fputs@plt+0x4530>
   15cf4:	ldr	r3, [r4, #24]
   15cf8:	tst	r3, #32
   15cfc:	bne	15dd0 <fputs@plt+0x4600>
   15d00:	ldr	r3, [r4, #20]
   15d04:	cmp	r3, #4
   15d08:	beq	15e04 <fputs@plt+0x4634>
   15d0c:	mov	r9, #0
   15d10:	add	r3, sp, #24
   15d14:	str	r3, [sp]
   15d18:	mov	r1, r8
   15d1c:	mov	r3, r7
   15d20:	mov	r2, #1
   15d24:	mov	r0, r6
   15d28:	bl	116e0 <sane_control_option@plt>
   15d2c:	cmp	r0, #0
   15d30:	bne	15e5c <fputs@plt+0x468c>
   15d34:	ldr	r3, [sp, #24]
   15d38:	tst	r3, #1
   15d3c:	bne	15d60 <fputs@plt+0x4590>
   15d40:	tst	r3, #2
   15d44:	bne	15e18 <fputs@plt+0x4648>
   15d48:	ldr	r2, [sp, #28]
   15d4c:	ldr	r3, [r5]
   15d50:	cmp	r2, r3
   15d54:	bne	15e58 <fputs@plt+0x4688>
   15d58:	add	sp, sp, #36	; 0x24
   15d5c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15d60:	ldr	r2, [r4, #20]
   15d64:	cmp	r2, #4
   15d68:	bne	15d40 <fputs@plt+0x4570>
   15d6c:	ldr	r1, [r4, #12]
   15d70:	cmp	r1, #1
   15d74:	beq	15e24 <fputs@plt+0x4654>
   15d78:	cmp	r1, #2
   15d7c:	bne	15d40 <fputs@plt+0x4570>
   15d80:	vldr	s12, [r7]
   15d84:	vmov	s15, r9
   15d88:	vldr	d5, [pc, #264]	; 15e98 <fputs@plt+0x46c8>
   15d8c:	ldr	r1, [pc, #272]	; 15ea4 <fputs@plt+0x46d4>
   15d90:	vcvt.f64.s32	d6, s12
   15d94:	vcvt.f64.s32	d7, s15
   15d98:	ldr	r3, [pc, #264]	; 15ea8 <fputs@plt+0x46d8>
   15d9c:	ldr	r0, [r1]
   15da0:	ldr	r2, [pc, #260]	; 15eac <fputs@plt+0x46dc>
   15da4:	ldr	r3, [r3, #8]
   15da8:	mov	r1, #1
   15dac:	vmul.f64	d6, d6, d5
   15db0:	vmul.f64	d7, d7, d5
   15db4:	vstr	d6, [sp, #16]
   15db8:	vstr	d7, [sp, #8]
   15dbc:	ldr	ip, [r4]
   15dc0:	str	ip, [sp]
   15dc4:	bl	11680 <__fprintf_chk@plt>
   15dc8:	ldr	r3, [sp, #24]
   15dcc:	b	15d40 <fputs@plt+0x4570>
   15dd0:	ldr	r3, [pc, #208]	; 15ea8 <fputs@plt+0x46d8>
   15dd4:	ldr	r2, [r3, #20]
   15dd8:	cmp	r2, #0
   15ddc:	ble	15d48 <fputs@plt+0x4578>
   15de0:	ldr	r2, [pc, #188]	; 15ea4 <fputs@plt+0x46d4>
   15de4:	ldr	r1, [r4]
   15de8:	ldr	r3, [r3, #8]
   15dec:	str	r1, [sp]
   15df0:	mov	r1, #1
   15df4:	ldr	r0, [r2]
   15df8:	ldr	r2, [pc, #176]	; 15eb0 <fputs@plt+0x46e0>
   15dfc:	bl	11680 <__fprintf_chk@plt>
   15e00:	b	15d48 <fputs@plt+0x4578>
   15e04:	ldr	r3, [r4, #12]
   15e08:	cmp	r3, #3
   15e0c:	beq	15d0c <fputs@plt+0x453c>
   15e10:	ldr	r9, [r7]
   15e14:	b	15d10 <fputs@plt+0x4540>
   15e18:	mov	r0, r6
   15e1c:	bl	15344 <fputs@plt+0x3b74>
   15e20:	b	15d48 <fputs@plt+0x4578>
   15e24:	ldr	r2, [r7]
   15e28:	ldr	r3, [pc, #120]	; 15ea8 <fputs@plt+0x46d8>
   15e2c:	str	r2, [sp, #8]
   15e30:	ldr	r2, [pc, #108]	; 15ea4 <fputs@plt+0x46d4>
   15e34:	str	r9, [sp, #4]
   15e38:	ldr	r0, [r4]
   15e3c:	str	r0, [sp]
   15e40:	ldr	r3, [r3, #8]
   15e44:	ldr	r0, [r2]
   15e48:	ldr	r2, [pc, #100]	; 15eb4 <fputs@plt+0x46e4>
   15e4c:	bl	11680 <__fprintf_chk@plt>
   15e50:	ldr	r3, [sp, #24]
   15e54:	b	15d40 <fputs@plt+0x4570>
   15e58:	bl	11674 <__stack_chk_fail@plt>
   15e5c:	ldr	r2, [pc, #64]	; 15ea4 <fputs@plt+0x46d4>
   15e60:	ldr	r3, [pc, #64]	; 15ea8 <fputs@plt+0x46d8>
   15e64:	ldr	r6, [r4]
   15e68:	ldr	r4, [r2]
   15e6c:	ldr	r5, [r3, #8]
   15e70:	bl	1144c <sane_strstatus@plt>
   15e74:	str	r6, [sp]
   15e78:	mov	r3, r5
   15e7c:	ldr	r2, [pc, #52]	; 15eb8 <fputs@plt+0x46e8>
   15e80:	mov	r1, #1
   15e84:	str	r0, [sp, #4]
   15e88:	mov	r0, r4
   15e8c:	bl	11680 <__fprintf_chk@plt>
   15e90:	mov	r0, #1
   15e94:	bl	15274 <fputs@plt+0x3aa4>
   15e98:	andeq	r0, r0, r0
   15e9c:	cdpcc	0, 15, cr0, cr0, cr0, {0}
   15ea0:	andeq	r9, r2, r8, lsl #27
   15ea4:	andeq	sl, r2, r0, lsl #3
   15ea8:	muleq	r2, r4, r1
   15eac:	andeq	r7, r1, r0, asr #28
   15eb0:	andeq	r7, r1, r0, asr #27
   15eb4:	andeq	r7, r1, r8, lsl lr
   15eb8:	strdeq	r7, [r1], -r0
   15ebc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15ec0:	sub	sp, sp, #16
   15ec4:	ldr	r5, [pc, #768]	; 161cc <fputs@plt+0x49fc>
   15ec8:	mov	r6, r2
   15ecc:	mov	r7, r0
   15ed0:	ldr	r3, [r5]
   15ed4:	mov	r8, r1
   15ed8:	str	r3, [sp, #12]
   15edc:	bl	116bc <sane_get_option_descriptor@plt>
   15ee0:	ldr	r3, [r0, #24]
   15ee4:	mov	r4, r0
   15ee8:	tst	r3, #32
   15eec:	bne	16114 <fputs@plt+0x4944>
   15ef0:	tst	r3, #16
   15ef4:	beq	15f3c <fputs@plt+0x476c>
   15ef8:	cmp	r6, #0
   15efc:	beq	16074 <fputs@plt+0x48a4>
   15f00:	mov	r2, #4
   15f04:	ldr	r1, [pc, #708]	; 161d0 <fputs@plt+0x4a00>
   15f08:	mov	r0, r6
   15f0c:	bl	11650 <strncasecmp@plt>
   15f10:	subs	r3, r0, #0
   15f14:	beq	16098 <fputs@plt+0x48c8>
   15f18:	ldr	r3, [r4, #12]
   15f1c:	cmp	r3, #4
   15f20:	ldrls	pc, [pc, r3, lsl #2]
   15f24:	b	161a8 <fputs@plt+0x49d8>
   15f28:	strdeq	r6, [r1], -r8
   15f2c:	andeq	r5, r1, r8, asr #31
   15f30:	andeq	r5, r1, r8, asr #31
   15f34:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   15f38:	andeq	r5, r1, r0, ror #30
   15f3c:	ldr	r3, [r0, #12]
   15f40:	cmp	r3, #4
   15f44:	ldrls	pc, [pc, r3, lsl #2]
   15f48:	b	161a8 <fputs@plt+0x49d8>
   15f4c:	andeq	r6, r1, ip, lsl r0
   15f50:	andeq	r5, r1, r8, asr #31
   15f54:	andeq	r5, r1, r8, asr #31
   15f58:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   15f5c:	andeq	r5, r1, r0, ror #30
   15f60:	add	r9, sp, #8
   15f64:	mov	r3, #0
   15f68:	str	r3, [sp, #8]
   15f6c:	mov	r2, r9
   15f70:	mov	r1, r8
   15f74:	mov	r0, r7
   15f78:	bl	15cc0 <fputs@plt+0x44f0>
   15f7c:	ldr	r2, [sp, #12]
   15f80:	ldr	r3, [r5]
   15f84:	cmp	r2, r3
   15f88:	bne	16140 <fputs@plt+0x4970>
   15f8c:	add	sp, sp, #16
   15f90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15f94:	ldr	sl, [r4, #20]
   15f98:	mov	r0, sl
   15f9c:	bl	11668 <malloc@plt>
   15fa0:	subs	r9, r0, #0
   15fa4:	beq	16144 <fputs@plt+0x4974>
   15fa8:	mov	r2, sl
   15fac:	mov	r1, r6
   15fb0:	bl	11488 <strncpy@plt>
   15fb4:	ldr	r3, [r4, #20]
   15fb8:	mov	r2, #0
   15fbc:	add	r3, r9, r3
   15fc0:	strb	r2, [r3, #-1]
   15fc4:	b	15f6c <fputs@plt+0x479c>
   15fc8:	ldr	r9, [pc, #516]	; 161d4 <fputs@plt+0x4a04>
   15fcc:	ldr	r1, [r4, #20]
   15fd0:	ldr	r3, [r9, #212]	; 0xd4
   15fd4:	lsr	sl, r1, #2
   15fd8:	cmp	r3, sl
   15fdc:	ldr	r2, [r9, #208]	; 0xd0
   15fe0:	bcs	16004 <fputs@plt+0x4834>
   15fe4:	mov	r0, r2
   15fe8:	bic	r1, r1, #3
   15fec:	str	sl, [r9, #212]	; 0xd4
   15ff0:	bl	11764 <realloc@plt>
   15ff4:	cmp	r0, #0
   15ff8:	mov	r2, r0
   15ffc:	str	r0, [r9, #208]	; 0xd0
   16000:	beq	16198 <fputs@plt+0x49c8>
   16004:	mov	r3, sl
   16008:	mov	r1, r6
   1600c:	mov	r0, r4
   16010:	bl	157d8 <fputs@plt+0x4008>
   16014:	ldr	r9, [r9, #208]	; 0xd0
   16018:	b	15f6c <fputs@plt+0x479c>
   1601c:	mov	r3, #1
   16020:	cmp	r6, #0
   16024:	str	r3, [sp, #8]
   16028:	beq	160f0 <fputs@plt+0x4920>
   1602c:	mov	r0, r6
   16030:	bl	115b4 <strlen@plt>
   16034:	ldr	r1, [pc, #412]	; 161d8 <fputs@plt+0x4a08>
   16038:	mov	r2, r0
   1603c:	mov	r9, r0
   16040:	mov	r0, r6
   16044:	bl	11650 <strncasecmp@plt>
   16048:	cmp	r0, #0
   1604c:	beq	160f0 <fputs@plt+0x4920>
   16050:	mov	r2, r9
   16054:	ldr	r1, [pc, #384]	; 161dc <fputs@plt+0x4a0c>
   16058:	mov	r0, r6
   1605c:	bl	11650 <strncasecmp@plt>
   16060:	cmp	r0, #0
   16064:	bne	16168 <fputs@plt+0x4998>
   16068:	str	r0, [sp, #8]
   1606c:	add	r9, sp, #8
   16070:	b	15f6c <fputs@plt+0x479c>
   16074:	ldr	r3, [r0, #12]
   16078:	cmp	r3, #4
   1607c:	ldrls	pc, [pc, r3, lsl #2]
   16080:	b	161a8 <fputs@plt+0x49d8>
   16084:	andeq	r6, r1, r4, lsl #2
   16088:	andeq	r5, r1, r8, asr #31
   1608c:	andeq	r5, r1, r8, asr #31
   16090:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   16094:	andeq	r5, r1, r0, ror #30
   16098:	str	r3, [sp]
   1609c:	mov	r1, r8
   160a0:	mov	r0, r7
   160a4:	mov	r2, #2
   160a8:	bl	116e0 <sane_control_option@plt>
   160ac:	cmp	r0, #0
   160b0:	beq	15f7c <fputs@plt+0x47ac>
   160b4:	ldr	r2, [pc, #292]	; 161e0 <fputs@plt+0x4a10>
   160b8:	ldr	r3, [pc, #276]	; 161d4 <fputs@plt+0x4a04>
   160bc:	ldr	r6, [r4]
   160c0:	ldr	r4, [r2]
   160c4:	ldr	r5, [r3, #8]
   160c8:	bl	1144c <sane_strstatus@plt>
   160cc:	str	r6, [sp]
   160d0:	mov	r3, r5
   160d4:	ldr	r2, [pc, #264]	; 161e4 <fputs@plt+0x4a14>
   160d8:	mov	r1, #1
   160dc:	str	r0, [sp, #4]
   160e0:	mov	r0, r4
   160e4:	bl	11680 <__fprintf_chk@plt>
   160e8:	mov	r0, #1
   160ec:	bl	15274 <fputs@plt+0x3aa4>
   160f0:	add	r9, sp, #8
   160f4:	b	15f6c <fputs@plt+0x479c>
   160f8:	mov	r3, #1
   160fc:	str	r3, [sp, #8]
   16100:	b	1602c <fputs@plt+0x485c>
   16104:	mov	r3, #1
   16108:	str	r3, [sp, #8]
   1610c:	add	r9, sp, #8
   16110:	b	15f6c <fputs@plt+0x479c>
   16114:	ldr	r2, [pc, #196]	; 161e0 <fputs@plt+0x4a10>
   16118:	ldr	r3, [pc, #180]	; 161d4 <fputs@plt+0x4a04>
   1611c:	ldr	r1, [r0]
   16120:	ldr	r3, [r3, #8]
   16124:	str	r1, [sp]
   16128:	mov	r1, #1
   1612c:	ldr	r0, [r2]
   16130:	ldr	r2, [pc, #176]	; 161e8 <fputs@plt+0x4a18>
   16134:	bl	11680 <__fprintf_chk@plt>
   16138:	mov	r0, #1
   1613c:	bl	15274 <fputs@plt+0x3aa4>
   16140:	bl	11674 <__stack_chk_fail@plt>
   16144:	ldr	r3, [pc, #136]	; 161d4 <fputs@plt+0x4a04>
   16148:	ldr	r1, [pc, #144]	; 161e0 <fputs@plt+0x4a10>
   1614c:	ldr	r2, [pc, #152]	; 161ec <fputs@plt+0x4a1c>
   16150:	ldr	r3, [r3, #8]
   16154:	ldr	r0, [r1]
   16158:	mov	r1, #1
   1615c:	bl	11680 <__fprintf_chk@plt>
   16160:	mov	r0, #1
   16164:	bl	15274 <fputs@plt+0x3aa4>
   16168:	ldr	r2, [pc, #112]	; 161e0 <fputs@plt+0x4a10>
   1616c:	ldr	r3, [pc, #96]	; 161d4 <fputs@plt+0x4a04>
   16170:	str	r6, [sp, #4]
   16174:	ldr	r1, [r4]
   16178:	ldr	r3, [r3, #8]
   1617c:	str	r1, [sp]
   16180:	mov	r1, #1
   16184:	ldr	r0, [r2]
   16188:	ldr	r2, [pc, #96]	; 161f0 <fputs@plt+0x4a20>
   1618c:	bl	11680 <__fprintf_chk@plt>
   16190:	mov	r0, #1
   16194:	bl	15274 <fputs@plt+0x3aa4>
   16198:	ldr	r1, [pc, #64]	; 161e0 <fputs@plt+0x4a10>
   1619c:	ldr	r3, [r9, #8]
   161a0:	ldr	r2, [pc, #68]	; 161ec <fputs@plt+0x4a1c>
   161a4:	b	16154 <fputs@plt+0x4984>
   161a8:	ldr	r1, [pc, #36]	; 161d4 <fputs@plt+0x4a04>
   161ac:	ldr	r2, [pc, #44]	; 161e0 <fputs@plt+0x4a10>
   161b0:	str	r3, [sp]
   161b4:	ldr	r3, [r1, #8]
   161b8:	ldr	r0, [r2]
   161bc:	mov	r1, #1
   161c0:	ldr	r2, [pc, #44]	; 161f4 <fputs@plt+0x4a24>
   161c4:	bl	11680 <__fprintf_chk@plt>
   161c8:	b	15f7c <fputs@plt+0x47ac>
   161cc:	andeq	r9, r2, r8, lsl #27
   161d0:	muleq	r1, r4, lr
   161d4:	muleq	r2, r4, r1
   161d8:	andeq	r7, r1, r4, asr #18
   161dc:	andeq	r7, r1, r8, asr #18
   161e0:	andeq	sl, r2, r0, lsl #3
   161e4:	muleq	r1, ip, lr
   161e8:	andeq	r7, r1, r8, ror #28
   161ec:	strdeq	r7, [r1], -r8
   161f0:	ldrdeq	r7, [r1], -r0
   161f4:	andeq	r7, r1, ip, lsl #30
   161f8:	sub	r0, r0, #1
   161fc:	push	{lr}		; (str lr, [sp, #-4]!)
   16200:	sub	sp, sp, #12
   16204:	cmp	r0, #3
   16208:	mov	ip, r3
   1620c:	ldr	r0, [sp, #16]
   16210:	bhi	16244 <fputs@plt+0x4a74>
   16214:	ldr	r3, [pc, #124]	; 16298 <fputs@plt+0x4ac8>
   16218:	cmp	ip, #9
   1621c:	movge	ip, r3
   16220:	movlt	ip, #255	; 0xff
   16224:	str	r2, [sp]
   16228:	mov	r3, r1
   1622c:	str	ip, [sp, #4]
   16230:	ldr	r2, [pc, #100]	; 1629c <fputs@plt+0x4acc>
   16234:	mov	r1, #1
   16238:	bl	11680 <__fprintf_chk@plt>
   1623c:	add	sp, sp, #12
   16240:	pop	{pc}		; (ldr pc, [sp], #4)
   16244:	cmp	r3, #1
   16248:	beq	1627c <fputs@plt+0x4aac>
   1624c:	ldr	r3, [pc, #68]	; 16298 <fputs@plt+0x4ac8>
   16250:	cmp	ip, #9
   16254:	movge	ip, r3
   16258:	movlt	ip, #255	; 0xff
   1625c:	str	r2, [sp]
   16260:	mov	r3, r1
   16264:	str	ip, [sp, #4]
   16268:	ldr	r2, [pc, #48]	; 162a0 <fputs@plt+0x4ad0>
   1626c:	mov	r1, #1
   16270:	bl	11680 <__fprintf_chk@plt>
   16274:	add	sp, sp, #12
   16278:	pop	{pc}		; (ldr pc, [sp], #4)
   1627c:	str	r2, [sp, #16]
   16280:	mov	r3, r1
   16284:	ldr	r2, [pc, #24]	; 162a4 <fputs@plt+0x4ad4>
   16288:	mov	r1, ip
   1628c:	add	sp, sp, #12
   16290:	pop	{lr}		; (ldr lr, [sp], #4)
   16294:	b	11680 <__fprintf_chk@plt>
   16298:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   1629c:	andeq	r7, r1, r4, lsr pc
   162a0:	andeq	r7, r1, r8, ror pc
   162a4:	andeq	r7, r1, r8, asr pc
   162a8:	ldr	ip, [pc, #204]	; 1637c <fputs@plt+0x4bac>
   162ac:	cmp	r3, #0
   162b0:	push	{r4, lr}
   162b4:	ldr	r4, [ip]
   162b8:	bne	16330 <fputs@plt+0x4b60>
   162bc:	ldrb	r3, [r2, r1]
   162c0:	add	r2, r2, r1
   162c4:	cmp	r3, #35	; 0x23
   162c8:	beq	16308 <fputs@plt+0x4b38>
   162cc:	cmp	r1, r0
   162d0:	ble	162e4 <fputs@plt+0x4b14>
   162d4:	b	162f0 <fputs@plt+0x4b20>
   162d8:	ldrb	r3, [r2, #1]!
   162dc:	cmp	r3, #35	; 0x23
   162e0:	beq	162f0 <fputs@plt+0x4b20>
   162e4:	add	r1, r1, #1
   162e8:	cmp	r0, r1
   162ec:	bge	162d8 <fputs@plt+0x4b08>
   162f0:	mov	r3, r1
   162f4:	mov	r0, r4
   162f8:	ldr	r2, [pc, #128]	; 16380 <fputs@plt+0x4bb0>
   162fc:	mov	r1, #1
   16300:	pop	{r4, lr}
   16304:	b	11680 <__fprintf_chk@plt>
   16308:	cmp	r1, r0
   1630c:	bgt	16350 <fputs@plt+0x4b80>
   16310:	cmp	r1, #0
   16314:	mov	r3, r4
   16318:	bne	16368 <fputs@plt+0x4b98>
   1631c:	mov	r2, #13
   16320:	mov	r1, #1
   16324:	ldr	r0, [pc, #88]	; 16384 <fputs@plt+0x4bb4>
   16328:	pop	{r4, lr}
   1632c:	b	11638 <fwrite@plt>
   16330:	mov	r0, r3
   16334:	bl	1144c <sane_strstatus@plt>
   16338:	ldr	r2, [pc, #72]	; 16388 <fputs@plt+0x4bb8>
   1633c:	mov	r1, #1
   16340:	mov	r3, r0
   16344:	mov	r0, r4
   16348:	pop	{r4, lr}
   1634c:	b	11680 <__fprintf_chk@plt>
   16350:	mov	r3, r1
   16354:	mov	r0, r4
   16358:	ldr	r2, [pc, #44]	; 1638c <fputs@plt+0x4bbc>
   1635c:	mov	r1, #1
   16360:	pop	{r4, lr}
   16364:	b	11680 <__fprintf_chk@plt>
   16368:	mov	r2, #5
   1636c:	mov	r1, #1
   16370:	ldr	r0, [pc, #24]	; 16390 <fputs@plt+0x4bc0>
   16374:	pop	{r4, lr}
   16378:	b	11638 <fwrite@plt>
   1637c:	andeq	sl, r2, r0, lsl #3
   16380:	andeq	r7, r1, ip, lsr #31
   16384:	andeq	r7, r1, r0, ror #31
   16388:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1638c:	andeq	r7, r1, r4, asr #31
   16390:	strdeq	r7, [r1], -r0
   16394:	push	{r4, r5, r6, lr}
   16398:	sub	sp, sp, #8
   1639c:	ldr	r4, [pc, #132]	; 16428 <fputs@plt+0x4c58>
   163a0:	ldr	r3, [r4]
   163a4:	cmp	r3, #0
   163a8:	beq	16420 <fputs@plt+0x4c50>
   163ac:	ldr	r5, [pc, #120]	; 1642c <fputs@plt+0x4c5c>
   163b0:	str	r0, [sp]
   163b4:	mov	r1, #1
   163b8:	ldr	r3, [r4, #8]
   163bc:	ldr	r0, [r5]
   163c0:	ldr	r2, [pc, #104]	; 16430 <fputs@plt+0x4c60>
   163c4:	bl	11680 <__fprintf_chk@plt>
   163c8:	ldr	r1, [pc, #100]	; 16434 <fputs@plt+0x4c64>
   163cc:	ldr	r6, [r1, #356]	; 0x164
   163d0:	cmp	r6, #0
   163d4:	beq	16404 <fputs@plt+0x4c34>
   163d8:	mov	ip, #0
   163dc:	str	ip, [r1, #356]	; 0x164
   163e0:	ldr	r0, [r5]
   163e4:	ldr	r3, [r4, #8]
   163e8:	ldr	r2, [pc, #72]	; 16438 <fputs@plt+0x4c68>
   163ec:	mov	r1, #1
   163f0:	bl	11680 <__fprintf_chk@plt>
   163f4:	ldr	r0, [r4]
   163f8:	add	sp, sp, #8
   163fc:	pop	{r4, r5, r6, lr}
   16400:	b	11548 <sane_cancel@plt>
   16404:	ldr	r3, [r4, #8]
   16408:	ldr	r0, [r5]
   1640c:	ldr	r2, [pc, #40]	; 1643c <fputs@plt+0x4c6c>
   16410:	mov	r1, #1
   16414:	bl	11680 <__fprintf_chk@plt>
   16418:	mov	r0, r6
   1641c:	bl	11554 <_exit@plt>
   16420:	add	sp, sp, #8
   16424:	pop	{r4, r5, r6, pc}
   16428:	muleq	r2, r4, r1
   1642c:	andeq	sl, r2, r0, lsl #3
   16430:	strdeq	r7, [r1], -r8
   16434:	andeq	sl, r2, r8
   16438:	andeq	r8, r1, r0, lsl r0
   1643c:	andeq	r8, r1, ip, lsr #32
   16440:	cmp	r1, #1
   16444:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16448:	ble	16538 <fputs@plt+0x4d68>
   1644c:	ldr	sl, [pc, #240]	; 16544 <fputs@plt+0x4d74>
   16450:	mov	r6, r2
   16454:	mov	r7, r0
   16458:	mov	r5, r1
   1645c:	mov	r4, #1
   16460:	add	r9, sl, #48	; 0x30
   16464:	add	r8, sl, #84	; 0x54
   16468:	add	fp, sl, #120	; 0x78
   1646c:	b	164c0 <fputs@plt+0x4cf0>
   16470:	ldr	r1, [sl, #44]	; 0x2c
   16474:	cmp	r4, r1
   16478:	beq	16530 <fputs@plt+0x4d60>
   1647c:	cmp	r2, #0
   16480:	bne	16494 <fputs@plt+0x4cc4>
   16484:	mov	r1, r4
   16488:	mov	r0, r7
   1648c:	bl	116bc <sane_get_option_descriptor@plt>
   16490:	mov	r2, r0
   16494:	cmp	r6, #0
   16498:	bne	16504 <fputs@plt+0x4d34>
   1649c:	ldr	r1, [r2, #24]
   164a0:	tst	r1, #1
   164a4:	bne	16504 <fputs@plt+0x4d34>
   164a8:	ldr	r1, [r2, #12]
   164ac:	cmp	r1, #5
   164b0:	beq	16504 <fputs@plt+0x4d34>
   164b4:	add	r4, r4, #1
   164b8:	cmp	r5, r4
   164bc:	beq	1651c <fputs@plt+0x4d4c>
   164c0:	ldr	r2, [sl, #32]
   164c4:	ldr	ip, [sl, #36]	; 0x24
   164c8:	cmp	r4, r2
   164cc:	ldr	r1, [sl, #40]	; 0x28
   164d0:	moveq	r2, r9
   164d4:	movne	r2, #0
   164d8:	cmp	r4, ip
   164dc:	moveq	r2, r8
   164e0:	cmp	r4, r1
   164e4:	bne	16470 <fputs@plt+0x4ca0>
   164e8:	ldr	r2, [sl, #44]	; 0x2c
   164ec:	ldr	r3, [pc, #84]	; 16548 <fputs@plt+0x4d78>
   164f0:	cmp	r2, r4
   164f4:	movne	r3, fp
   164f8:	cmp	r6, #0
   164fc:	mov	r2, r3
   16500:	beq	1649c <fputs@plt+0x4ccc>
   16504:	mov	r1, r4
   16508:	mov	r0, r7
   1650c:	add	r4, r4, #1
   16510:	bl	145b4 <fputs@plt+0x2de4>
   16514:	cmp	r5, r4
   16518:	bne	164c0 <fputs@plt+0x4cf0>
   1651c:	ldr	r3, [pc, #40]	; 1654c <fputs@plt+0x4d7c>
   16520:	mov	r0, #10
   16524:	ldr	r1, [r3]
   16528:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1652c:	b	1168c <fputc@plt>
   16530:	ldr	r2, [pc, #16]	; 16548 <fputs@plt+0x4d78>
   16534:	b	16494 <fputs@plt+0x4cc4>
   16538:	cmp	r1, #0
   1653c:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16540:	b	1651c <fputs@plt+0x4d4c>
   16544:	muleq	r2, r4, r1
   16548:	andeq	sl, r2, r0, lsr r2
   1654c:	andeq	sl, r2, ip, ror r1
   16550:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16554:	sub	sp, sp, #96	; 0x60
   16558:	ldr	r7, [pc, #312]	; 16698 <fputs@plt+0x4ec8>
   1655c:	mov	r9, r1
   16560:	ldr	r1, [pc, #308]	; 1669c <fputs@plt+0x4ecc>
   16564:	ldr	r3, [r7]
   16568:	mov	r8, r0
   1656c:	str	r3, [sp, #92]	; 0x5c
   16570:	bl	114f4 <fopen@plt>
   16574:	subs	r4, r0, #0
   16578:	beq	16674 <fputs@plt+0x4ea4>
   1657c:	bl	113f8 <fileno@plt>
   16580:	mov	r2, sp
   16584:	mov	r1, r0
   16588:	mov	r0, #3
   1658c:	bl	116f8 <__fxstat@plt>
   16590:	mov	r0, r4
   16594:	bl	115d8 <fgetc@plt>
   16598:	mov	sl, r0
   1659c:	mov	r0, r4
   165a0:	bl	115d8 <fgetc@plt>
   165a4:	mov	r6, r0
   165a8:	mov	r0, r4
   165ac:	bl	115d8 <fgetc@plt>
   165b0:	add	r6, r6, sl, lsl #8
   165b4:	mov	r5, r0
   165b8:	mov	r0, r4
   165bc:	bl	115d8 <fgetc@plt>
   165c0:	add	r5, r5, r6, lsl #8
   165c4:	add	r5, r0, r5, lsl #8
   165c8:	mov	r0, r4
   165cc:	bl	11470 <rewind@plt>
   165d0:	ldr	r3, [sp, #44]	; 0x2c
   165d4:	cmp	r3, r5
   165d8:	bcc	16658 <fputs@plt+0x4e88>
   165dc:	mov	r0, r5
   165e0:	bl	11668 <malloc@plt>
   165e4:	mov	r3, r4
   165e8:	mov	r2, #1
   165ec:	mov	r1, r5
   165f0:	mov	r6, r0
   165f4:	bl	1174c <fread@plt>
   165f8:	cmp	r0, #1
   165fc:	beq	16648 <fputs@plt+0x4e78>
   16600:	ldr	r1, [pc, #152]	; 166a0 <fputs@plt+0x4ed0>
   16604:	mov	r3, r8
   16608:	ldr	r2, [pc, #148]	; 166a4 <fputs@plt+0x4ed4>
   1660c:	ldr	r0, [r1]
   16610:	mov	r1, #1
   16614:	bl	11680 <__fprintf_chk@plt>
   16618:	mov	r0, r6
   1661c:	bl	11560 <free@plt>
   16620:	mov	r0, r4
   16624:	bl	11494 <fclose@plt>
   16628:	mov	r6, #0
   1662c:	ldr	r2, [sp, #92]	; 0x5c
   16630:	ldr	r3, [r7]
   16634:	mov	r0, r6
   16638:	cmp	r2, r3
   1663c:	bne	16694 <fputs@plt+0x4ec4>
   16640:	add	sp, sp, #96	; 0x60
   16644:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16648:	mov	r0, r4
   1664c:	bl	11494 <fclose@plt>
   16650:	str	r5, [r9]
   16654:	b	1662c <fputs@plt+0x4e5c>
   16658:	ldr	r1, [pc, #64]	; 166a0 <fputs@plt+0x4ed0>
   1665c:	mov	r3, r8
   16660:	ldr	r2, [pc, #64]	; 166a8 <fputs@plt+0x4ed8>
   16664:	ldr	r0, [r1]
   16668:	mov	r1, #1
   1666c:	bl	11680 <__fprintf_chk@plt>
   16670:	b	16620 <fputs@plt+0x4e50>
   16674:	ldr	r1, [pc, #36]	; 166a0 <fputs@plt+0x4ed0>
   16678:	mov	r3, r8
   1667c:	ldr	r2, [pc, #40]	; 166ac <fputs@plt+0x4edc>
   16680:	ldr	r0, [r1]
   16684:	mov	r1, #1
   16688:	mov	r6, r4
   1668c:	bl	11680 <__fprintf_chk@plt>
   16690:	b	1662c <fputs@plt+0x4e5c>
   16694:	bl	11674 <__stack_chk_fail@plt>
   16698:	andeq	r9, r2, r8, lsl #27
   1669c:	ldrdeq	r7, [r1], -r0
   166a0:	andeq	sl, r2, r0, lsl #3
   166a4:	andeq	r9, r1, r8, lsr r3
   166a8:	strdeq	r9, [r1], -r4
   166ac:	ldrdeq	r9, [r1], -r4
   166b0:	push	{r4, lr}
   166b4:	subs	r4, r0, #0
   166b8:	popeq	{r4, pc}
   166bc:	ldr	r0, [r4, #8]
   166c0:	cmp	r0, #0
   166c4:	beq	166cc <fputs@plt+0x4efc>
   166c8:	bl	11560 <free@plt>
   166cc:	mov	r0, r4
   166d0:	pop	{r4, lr}
   166d4:	b	11560 <free@plt>
   166d8:	push	{r4, r5, r6, lr}
   166dc:	mov	r0, #12
   166e0:	bl	11668 <malloc@plt>
   166e4:	subs	r4, r0, #0
   166e8:	beq	16710 <fputs@plt+0x4f40>
   166ec:	mov	r0, #160	; 0xa0
   166f0:	bl	11668 <malloc@plt>
   166f4:	cmp	r0, #0
   166f8:	movne	r2, #10
   166fc:	movne	r3, #0
   16700:	mov	r5, r0
   16704:	str	r0, [r4, #8]
   16708:	strdne	r2, [r4]
   1670c:	beq	16718 <fputs@plt+0x4f48>
   16710:	mov	r0, r4
   16714:	pop	{r4, r5, r6, pc}
   16718:	mov	r0, r4
   1671c:	bl	11560 <free@plt>
   16720:	mov	r4, r5
   16724:	b	16710 <fputs@plt+0x4f40>
   16728:	push	{r4, r5, r6, r7, r8, lr}
   1672c:	subs	r4, r0, #0
   16730:	popeq	{r4, r5, r6, r7, r8, pc}
   16734:	mov	r5, r3
   16738:	ldm	r4, {r3, ip}
   1673c:	mov	r6, r2
   16740:	mov	r7, r1
   16744:	cmp	ip, r3
   16748:	ldr	r0, [r4, #8]
   1674c:	beq	16774 <fputs@plt+0x4fa4>
   16750:	add	lr, r0, ip, lsl #4
   16754:	ldr	r3, [sp, #24]
   16758:	str	r7, [r0, ip, lsl #4]
   1675c:	add	ip, ip, #1
   16760:	str	r6, [lr, #4]
   16764:	str	r5, [lr, #8]
   16768:	str	r3, [lr, #12]
   1676c:	str	ip, [r4, #4]
   16770:	pop	{r4, r5, r6, r7, r8, pc}
   16774:	add	ip, ip, #10
   16778:	lsl	r1, ip, #4
   1677c:	bl	11764 <realloc@plt>
   16780:	cmp	r0, #0
   16784:	popeq	{r4, r5, r6, r7, r8, pc}
   16788:	ldm	r4, {r3, ip}
   1678c:	str	r0, [r4, #8]
   16790:	add	r3, r3, #10
   16794:	str	r3, [r4]
   16798:	b	16750 <fputs@plt+0x4f80>
   1679c:	push	{r4, r5, r6, lr}
   167a0:	asr	r5, r1, #8
   167a4:	cmp	r2, #0
   167a8:	mov	r6, r0
   167ac:	uxtb	r5, r5
   167b0:	uxtb	r4, r1
   167b4:	beq	167d4 <fputs@plt+0x5004>
   167b8:	mov	r1, r6
   167bc:	mov	r0, r5
   167c0:	bl	11710 <putc@plt>
   167c4:	mov	r1, r6
   167c8:	mov	r0, r4
   167cc:	pop	{r4, r5, r6, lr}
   167d0:	b	11710 <putc@plt>
   167d4:	mov	r1, r6
   167d8:	mov	r0, r4
   167dc:	bl	11710 <putc@plt>
   167e0:	mov	r1, r6
   167e4:	mov	r0, r5
   167e8:	pop	{r4, r5, r6, lr}
   167ec:	b	11710 <putc@plt>
   167f0:	push	{r4, r5, r6, lr}
   167f4:	mov	r4, r1
   167f8:	mov	r5, r0
   167fc:	mov	r1, r0
   16800:	lsr	r0, r4, #24
   16804:	bl	11710 <putc@plt>
   16808:	asr	r0, r4, #16
   1680c:	mov	r1, r5
   16810:	uxtb	r0, r0
   16814:	bl	11710 <putc@plt>
   16818:	asr	r0, r4, #8
   1681c:	mov	r1, r5
   16820:	uxtb	r0, r0
   16824:	bl	11710 <putc@plt>
   16828:	mov	r1, r5
   1682c:	uxtb	r0, r4
   16830:	pop	{r4, r5, r6, lr}
   16834:	b	11710 <putc@plt>
   16838:	cmp	r2, #0
   1683c:	beq	16844 <fputs@plt+0x5074>
   16840:	b	167f0 <fputs@plt+0x5020>
   16844:	push	{r4, r5, r6, lr}
   16848:	mov	r4, r1
   1684c:	mov	r5, r0
   16850:	mov	r1, r0
   16854:	uxtb	r0, r4
   16858:	bl	11710 <putc@plt>
   1685c:	asr	r0, r4, #8
   16860:	mov	r1, r5
   16864:	uxtb	r0, r0
   16868:	bl	11710 <putc@plt>
   1686c:	asr	r0, r4, #16
   16870:	mov	r1, r5
   16874:	uxtb	r0, r0
   16878:	bl	11710 <putc@plt>
   1687c:	mov	r1, r5
   16880:	lsr	r0, r4, #24
   16884:	pop	{r4, r5, r6, lr}
   16888:	b	11710 <putc@plt>
   1688c:	push	{r4, r5, r6, r7, r8, lr}
   16890:	subs	r8, r1, #0
   16894:	popeq	{r4, r5, r6, r7, r8, pc}
   16898:	cmp	r2, #0
   1689c:	mov	r6, r2
   168a0:	mov	r5, r0
   168a4:	mov	r1, r0
   168a8:	bne	1697c <fputs@plt+0x51ac>
   168ac:	mov	r0, #73	; 0x49
   168b0:	bl	11710 <putc@plt>
   168b4:	mov	r1, r5
   168b8:	mov	r0, #73	; 0x49
   168bc:	bl	11710 <putc@plt>
   168c0:	mov	r2, r6
   168c4:	mov	r1, #42	; 0x2a
   168c8:	mov	r0, r5
   168cc:	bl	1679c <fputs@plt+0x4fcc>
   168d0:	mov	r2, r6
   168d4:	mov	r1, #8
   168d8:	mov	r0, r5
   168dc:	bl	16838 <fputs@plt+0x5068>
   168e0:	mov	r2, r6
   168e4:	ldr	r1, [r8, #4]
   168e8:	mov	r0, r5
   168ec:	bl	1679c <fputs@plt+0x4fcc>
   168f0:	ldr	r3, [r8, #4]
   168f4:	cmp	r3, #0
   168f8:	movgt	r7, #0
   168fc:	bgt	16928 <fputs@plt+0x5158>
   16900:	b	16994 <fputs@plt+0x51c4>
   16904:	ldr	r3, [r4, #8]
   16908:	ldr	r1, [r4, #12]
   1690c:	cmp	r3, #1
   16910:	beq	169a8 <fputs@plt+0x51d8>
   16914:	bl	16838 <fputs@plt+0x5068>
   16918:	ldr	r3, [r8, #4]
   1691c:	add	r7, r7, #1
   16920:	cmp	r7, r3
   16924:	bge	16994 <fputs@plt+0x51c4>
   16928:	ldr	r3, [r8, #8]
   1692c:	mov	r2, r6
   16930:	add	r4, r3, r7, lsl #4
   16934:	ldr	r1, [r3, r7, lsl #4]
   16938:	mov	r0, r5
   1693c:	bl	1679c <fputs@plt+0x4fcc>
   16940:	mov	r2, r6
   16944:	ldr	r1, [r4, #4]
   16948:	mov	r0, r5
   1694c:	bl	1679c <fputs@plt+0x4fcc>
   16950:	mov	r2, r6
   16954:	mov	r0, r5
   16958:	ldr	r1, [r4, #8]
   1695c:	bl	16838 <fputs@plt+0x5068>
   16960:	ldr	r3, [r4, #4]
   16964:	mov	r2, r6
   16968:	cmp	r3, #3
   1696c:	mov	r0, r5
   16970:	beq	16904 <fputs@plt+0x5134>
   16974:	ldr	r1, [r4, #12]
   16978:	b	16914 <fputs@plt+0x5144>
   1697c:	mov	r0, #77	; 0x4d
   16980:	bl	11710 <putc@plt>
   16984:	mov	r1, r5
   16988:	mov	r0, #77	; 0x4d
   1698c:	bl	11710 <putc@plt>
   16990:	b	168c0 <fputs@plt+0x50f0>
   16994:	mov	r2, r6
   16998:	mov	r0, r5
   1699c:	mov	r1, #0
   169a0:	pop	{r4, r5, r6, r7, r8, lr}
   169a4:	b	16838 <fputs@plt+0x5068>
   169a8:	bl	1679c <fputs@plt+0x4fcc>
   169ac:	mov	r2, r6
   169b0:	mov	r1, #0
   169b4:	mov	r0, r5
   169b8:	bl	1679c <fputs@plt+0x4fcc>
   169bc:	b	16918 <fputs@plt+0x5148>
   169c0:	sub	r0, r0, #1
   169c4:	cmp	r0, #3
   169c8:	ldr	r0, [pc, #2672]	; 17440 <fputs@plt+0x5c70>
   169cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   169d0:	sub	sp, sp, #44	; 0x2c
   169d4:	ldr	r0, [r0]
   169d8:	mov	r9, r3
   169dc:	ldr	r3, [sp, #84]	; 0x54
   169e0:	mov	r7, r1
   169e4:	mov	r6, r2
   169e8:	str	r0, [sp, #36]	; 0x24
   169ec:	str	r3, [sp, #12]
   169f0:	ldr	r4, [sp, #88]	; 0x58
   169f4:	bls	16df4 <fputs@plt+0x5624>
   169f8:	cmp	r9, #1
   169fc:	beq	16c58 <fputs@plt+0x5488>
   16a00:	ldr	r0, [sp, #12]
   16a04:	mov	r3, #0
   16a08:	cmp	r0, #0
   16a0c:	str	r3, [sp, #32]
   16a10:	beq	16a20 <fputs@plt+0x5250>
   16a14:	add	r1, sp, #32
   16a18:	bl	16550 <fputs@plt+0x4d80>
   16a1c:	str	r0, [sp, #12]
   16a20:	bl	166d8 <fputs@plt+0x4f08>
   16a24:	cmp	r9, #8
   16a28:	movle	r3, #255	; 0xff
   16a2c:	ldrgt	r3, [pc, #2576]	; 17444 <fputs@plt+0x5c74>
   16a30:	movle	r8, #1
   16a34:	movle	r2, r8
   16a38:	movgt	r2, #2
   16a3c:	ldr	r1, [sp, #80]	; 0x50
   16a40:	movgt	r8, #0
   16a44:	ldr	sl, [pc, #2552]	; 17444 <fputs@plt+0x5c74>
   16a48:	strle	r3, [sp, #20]
   16a4c:	strgt	r3, [sp, #20]
   16a50:	mul	r3, r6, r7
   16a54:	cmp	r1, #0
   16a58:	movle	fp, #0
   16a5c:	mul	r3, r2, r3
   16a60:	ldr	r2, [sp, #32]
   16a64:	str	r3, [sp, #16]
   16a68:	movgt	r3, #16
   16a6c:	movgt	fp, r3
   16a70:	movle	r3, #13
   16a74:	cmp	r2, #0
   16a78:	addne	r3, r3, #1
   16a7c:	addne	fp, fp, r2
   16a80:	add	r3, r3, r3, lsl #1
   16a84:	mov	r1, #254	; 0xfe
   16a88:	lsl	r3, r3, #2
   16a8c:	add	r2, r3, #14
   16a90:	mov	ip, r2
   16a94:	mov	r2, #0
   16a98:	str	r3, [sp, #28]
   16a9c:	str	r2, [sp]
   16aa0:	mov	r3, #1
   16aa4:	mov	r2, #4
   16aa8:	add	fp, ip, fp
   16aac:	mov	r5, r0
   16ab0:	str	ip, [sp, #24]
   16ab4:	bl	16728 <fputs@plt+0x4f58>
   16ab8:	cmp	r7, sl
   16abc:	movgt	r2, #4
   16ac0:	movle	r2, #3
   16ac4:	str	r7, [sp]
   16ac8:	mov	r3, #1
   16acc:	mov	r1, #256	; 0x100
   16ad0:	mov	r0, r5
   16ad4:	bl	16728 <fputs@plt+0x4f58>
   16ad8:	cmp	r6, sl
   16adc:	mov	r7, #1
   16ae0:	movgt	r2, #4
   16ae4:	movle	r2, #3
   16ae8:	mov	r3, #1
   16aec:	ldr	r1, [pc, #2388]	; 17448 <fputs@plt+0x5c78>
   16af0:	mov	r0, r5
   16af4:	str	r6, [sp]
   16af8:	bl	16728 <fputs@plt+0x4f58>
   16afc:	mov	r3, r7
   16b00:	mov	r2, #3
   16b04:	ldr	r1, [pc, #2368]	; 1744c <fputs@plt+0x5c7c>
   16b08:	mov	r0, r5
   16b0c:	str	r9, [sp]
   16b10:	bl	16728 <fputs@plt+0x4f58>
   16b14:	mov	r3, r7
   16b18:	mov	r2, #3
   16b1c:	ldr	r1, [pc, #2348]	; 17450 <fputs@plt+0x5c80>
   16b20:	mov	r0, r5
   16b24:	str	r7, [sp]
   16b28:	bl	16728 <fputs@plt+0x4f58>
   16b2c:	mov	r3, r7
   16b30:	mov	r2, #3
   16b34:	ldr	r1, [pc, #2328]	; 17454 <fputs@plt+0x5c84>
   16b38:	mov	r0, r5
   16b3c:	str	r7, [sp]
   16b40:	bl	16728 <fputs@plt+0x4f58>
   16b44:	mov	r3, r7
   16b48:	mov	r2, #4
   16b4c:	ldr	r1, [pc, #2308]	; 17458 <fputs@plt+0x5c88>
   16b50:	mov	r0, r5
   16b54:	str	fp, [sp]
   16b58:	bl	16728 <fputs@plt+0x4f58>
   16b5c:	mov	r3, r7
   16b60:	mov	r2, #3
   16b64:	ldr	r1, [pc, #2288]	; 1745c <fputs@plt+0x5c8c>
   16b68:	mov	r0, r5
   16b6c:	str	r7, [sp]
   16b70:	bl	16728 <fputs@plt+0x4f58>
   16b74:	mov	r3, r7
   16b78:	mov	r2, #3
   16b7c:	ldr	r1, [pc, #2268]	; 17460 <fputs@plt+0x5c90>
   16b80:	mov	r0, r5
   16b84:	str	r7, [sp]
   16b88:	bl	16728 <fputs@plt+0x4f58>
   16b8c:	mov	r3, r7
   16b90:	mov	r2, #4
   16b94:	ldr	r1, [pc, #2248]	; 17464 <fputs@plt+0x5c94>
   16b98:	mov	r0, r5
   16b9c:	str	r6, [sp]
   16ba0:	bl	16728 <fputs@plt+0x4f58>
   16ba4:	ldr	r1, [sp, #16]
   16ba8:	mov	r3, r7
   16bac:	str	r1, [sp]
   16bb0:	mov	r2, #4
   16bb4:	ldr	r1, [pc, #2220]	; 17468 <fputs@plt+0x5c98>
   16bb8:	mov	r0, r5
   16bbc:	bl	16728 <fputs@plt+0x4f58>
   16bc0:	mov	r2, #0
   16bc4:	str	r2, [sp]
   16bc8:	mov	r3, r7
   16bcc:	mov	r2, #3
   16bd0:	mov	r1, #280	; 0x118
   16bd4:	mov	r0, r5
   16bd8:	bl	16728 <fputs@plt+0x4f58>
   16bdc:	ldr	r1, [sp, #20]
   16be0:	mov	r3, r7
   16be4:	str	r1, [sp]
   16be8:	mov	r2, #3
   16bec:	ldr	r1, [pc, #2168]	; 1746c <fputs@plt+0x5c9c>
   16bf0:	mov	r0, r5
   16bf4:	bl	16728 <fputs@plt+0x4f58>
   16bf8:	ldr	r1, [sp, #80]	; 0x50
   16bfc:	cmp	r1, #0
   16c00:	bgt	172d8 <fputs@plt+0x5b08>
   16c04:	ldr	r3, [sp, #32]
   16c08:	cmp	r3, #0
   16c0c:	bne	172bc <fputs@plt+0x5aec>
   16c10:	mov	r2, r8
   16c14:	mov	r1, r5
   16c18:	mov	r0, r4
   16c1c:	bl	1688c <fputs@plt+0x50bc>
   16c20:	ldr	r1, [sp, #32]
   16c24:	cmp	r1, #0
   16c28:	bne	170c4 <fputs@plt+0x58f4>
   16c2c:	ldr	r0, [sp, #12]
   16c30:	bl	11560 <free@plt>
   16c34:	mov	r0, r5
   16c38:	bl	166b0 <fputs@plt+0x4ee0>
   16c3c:	ldr	r3, [pc, #2044]	; 17440 <fputs@plt+0x5c70>
   16c40:	ldr	r2, [sp, #36]	; 0x24
   16c44:	ldr	r3, [r3]
   16c48:	cmp	r2, r3
   16c4c:	bne	1743c <fputs@plt+0x5c6c>
   16c50:	add	sp, sp, #44	; 0x2c
   16c54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c58:	bl	166d8 <fputs@plt+0x4f08>
   16c5c:	ldr	r3, [sp, #80]	; 0x50
   16c60:	adds	r8, r7, #7
   16c64:	addmi	r8, r7, #14
   16c68:	cmp	r3, #0
   16c6c:	movgt	r1, #194	; 0xc2
   16c70:	movle	r3, #144	; 0x90
   16c74:	mov	r9, #0
   16c78:	ldr	sl, [pc, #1988]	; 17444 <fputs@plt+0x5c74>
   16c7c:	mov	r2, #4
   16c80:	movle	fp, #158	; 0x9e
   16c84:	strle	r3, [sp, #12]
   16c88:	str	r9, [sp]
   16c8c:	mov	r3, #1
   16c90:	movgt	fp, #210	; 0xd2
   16c94:	strle	fp, [sp, #16]
   16c98:	asr	r8, r8, #3
   16c9c:	mul	r8, r6, r8
   16ca0:	mov	r5, r0
   16ca4:	movgt	r0, #180	; 0xb4
   16ca8:	strdgt	r0, [sp, #12]
   16cac:	mov	r1, #254	; 0xfe
   16cb0:	mov	r0, r5
   16cb4:	bl	16728 <fputs@plt+0x4f58>
   16cb8:	cmp	r7, sl
   16cbc:	movgt	r2, #4
   16cc0:	movle	r2, #3
   16cc4:	str	r7, [sp]
   16cc8:	mov	r3, #1
   16ccc:	mov	r1, #256	; 0x100
   16cd0:	mov	r0, r5
   16cd4:	mov	r7, #1
   16cd8:	bl	16728 <fputs@plt+0x4f58>
   16cdc:	cmp	r6, sl
   16ce0:	movgt	r2, #4
   16ce4:	movle	r2, #3
   16ce8:	mov	r3, r7
   16cec:	ldr	r1, [pc, #1876]	; 17448 <fputs@plt+0x5c78>
   16cf0:	mov	r0, r5
   16cf4:	str	r6, [sp]
   16cf8:	bl	16728 <fputs@plt+0x4f58>
   16cfc:	mov	r3, r7
   16d00:	mov	r2, #3
   16d04:	ldr	r1, [pc, #1856]	; 1744c <fputs@plt+0x5c7c>
   16d08:	mov	r0, r5
   16d0c:	str	r7, [sp]
   16d10:	bl	16728 <fputs@plt+0x4f58>
   16d14:	mov	r3, r7
   16d18:	mov	r2, #3
   16d1c:	ldr	r1, [pc, #1836]	; 17450 <fputs@plt+0x5c80>
   16d20:	mov	r0, r5
   16d24:	str	r7, [sp]
   16d28:	bl	16728 <fputs@plt+0x4f58>
   16d2c:	mov	r3, r7
   16d30:	mov	r2, #3
   16d34:	ldr	r1, [pc, #1816]	; 17454 <fputs@plt+0x5c84>
   16d38:	mov	r0, r5
   16d3c:	str	r9, [sp]
   16d40:	bl	16728 <fputs@plt+0x4f58>
   16d44:	mov	r3, r7
   16d48:	mov	r2, #3
   16d4c:	ldr	r1, [pc, #1820]	; 17470 <fputs@plt+0x5ca0>
   16d50:	mov	r0, r5
   16d54:	str	r7, [sp]
   16d58:	bl	16728 <fputs@plt+0x4f58>
   16d5c:	mov	r3, r7
   16d60:	mov	r2, #4
   16d64:	ldr	r1, [pc, #1772]	; 17458 <fputs@plt+0x5c88>
   16d68:	mov	r0, r5
   16d6c:	str	fp, [sp]
   16d70:	bl	16728 <fputs@plt+0x4f58>
   16d74:	mov	r3, r7
   16d78:	mov	r2, #3
   16d7c:	ldr	r1, [pc, #1752]	; 1745c <fputs@plt+0x5c8c>
   16d80:	mov	r0, r5
   16d84:	str	r7, [sp]
   16d88:	bl	16728 <fputs@plt+0x4f58>
   16d8c:	mov	r3, r7
   16d90:	mov	r2, #3
   16d94:	ldr	r1, [pc, #1732]	; 17460 <fputs@plt+0x5c90>
   16d98:	mov	r0, r5
   16d9c:	str	r7, [sp]
   16da0:	bl	16728 <fputs@plt+0x4f58>
   16da4:	mov	r3, r7
   16da8:	mov	r2, #4
   16dac:	ldr	r1, [pc, #1712]	; 17464 <fputs@plt+0x5c94>
   16db0:	mov	r0, r5
   16db4:	str	r6, [sp]
   16db8:	bl	16728 <fputs@plt+0x4f58>
   16dbc:	mov	r3, r7
   16dc0:	str	r8, [sp]
   16dc4:	mov	r2, #4
   16dc8:	ldr	r1, [pc, #1688]	; 17468 <fputs@plt+0x5c98>
   16dcc:	mov	r0, r5
   16dd0:	bl	16728 <fputs@plt+0x4f58>
   16dd4:	ldr	r3, [sp, #80]	; 0x50
   16dd8:	cmp	r3, r9
   16ddc:	bgt	17220 <fputs@plt+0x5a50>
   16de0:	mov	r2, r7
   16de4:	mov	r0, r4
   16de8:	mov	r1, r5
   16dec:	bl	1688c <fputs@plt+0x50bc>
   16df0:	b	16c34 <fputs@plt+0x5464>
   16df4:	mov	r0, r3
   16df8:	cmp	r3, #0
   16dfc:	mov	r3, #0
   16e00:	str	r3, [sp, #32]
   16e04:	beq	16e14 <fputs@plt+0x5644>
   16e08:	add	r1, sp, #32
   16e0c:	bl	16550 <fputs@plt+0x4d80>
   16e10:	str	r0, [sp, #12]
   16e14:	bl	166d8 <fputs@plt+0x4f08>
   16e18:	cmp	r9, #8
   16e1c:	movle	r2, #255	; 0xff
   16e20:	ldrgt	r2, [pc, #1564]	; 17444 <fputs@plt+0x5c74>
   16e24:	movle	r8, #1
   16e28:	movgt	r3, #2
   16e2c:	movle	r3, r8
   16e30:	ldr	r1, [sp, #32]
   16e34:	movgt	r8, #0
   16e38:	str	r2, [sp, #24]
   16e3c:	mul	r2, r6, r7
   16e40:	mov	r5, r0
   16e44:	ldr	r0, [sp, #80]	; 0x50
   16e48:	mul	r2, r3, r2
   16e4c:	cmp	r0, #0
   16e50:	movle	r3, #13
   16e54:	movgt	r3, #16
   16e58:	movle	ip, #18
   16e5c:	movgt	ip, #34	; 0x22
   16e60:	cmp	r1, #0
   16e64:	addne	r3, r3, #1
   16e68:	add	r2, r2, r2, lsl #1
   16e6c:	add	r3, r3, r3, lsl #1
   16e70:	addne	ip, ip, r1
   16e74:	lsl	fp, r3, #2
   16e78:	add	sl, fp, #14
   16e7c:	str	r2, [sp, #16]
   16e80:	mov	r2, #0
   16e84:	add	ip, sl, ip
   16e88:	str	r2, [sp]
   16e8c:	mov	r3, #1
   16e90:	mov	r2, #4
   16e94:	mov	r1, #254	; 0xfe
   16e98:	mov	r0, r5
   16e9c:	str	ip, [sp, #20]
   16ea0:	bl	16728 <fputs@plt+0x4f58>
   16ea4:	ldr	r3, [pc, #1432]	; 17444 <fputs@plt+0x5c74>
   16ea8:	str	r7, [sp]
   16eac:	cmp	r7, r3
   16eb0:	movgt	r2, #4
   16eb4:	movle	r2, #3
   16eb8:	mov	r3, #1
   16ebc:	mov	r1, #256	; 0x100
   16ec0:	mov	r0, r5
   16ec4:	bl	16728 <fputs@plt+0x4f58>
   16ec8:	ldr	r3, [pc, #1396]	; 17444 <fputs@plt+0x5c74>
   16ecc:	ldr	r1, [pc, #1396]	; 17448 <fputs@plt+0x5c78>
   16ed0:	cmp	r6, r3
   16ed4:	movgt	r2, #4
   16ed8:	movle	r2, #3
   16edc:	mov	r3, #1
   16ee0:	mov	r0, r5
   16ee4:	str	r6, [sp]
   16ee8:	bl	16728 <fputs@plt+0x4f58>
   16eec:	mov	r3, #3
   16ef0:	mov	r7, #1
   16ef4:	mov	r2, r3
   16ef8:	str	sl, [sp]
   16efc:	ldr	r1, [pc, #1352]	; 1744c <fputs@plt+0x5c7c>
   16f00:	mov	r0, r5
   16f04:	bl	16728 <fputs@plt+0x4f58>
   16f08:	mov	r3, r7
   16f0c:	mov	r2, #3
   16f10:	ldr	r1, [pc, #1336]	; 17450 <fputs@plt+0x5c80>
   16f14:	mov	r0, r5
   16f18:	str	r7, [sp]
   16f1c:	bl	16728 <fputs@plt+0x4f58>
   16f20:	mov	r2, #2
   16f24:	mov	r3, r7
   16f28:	str	r2, [sp]
   16f2c:	ldr	r1, [pc, #1312]	; 17454 <fputs@plt+0x5c84>
   16f30:	mov	r2, #3
   16f34:	mov	r0, r5
   16f38:	bl	16728 <fputs@plt+0x4f58>
   16f3c:	ldr	ip, [sp, #20]
   16f40:	mov	sl, #3
   16f44:	str	ip, [sp]
   16f48:	mov	r3, r7
   16f4c:	mov	r2, #4
   16f50:	ldr	r1, [pc, #1280]	; 17458 <fputs@plt+0x5c88>
   16f54:	mov	r0, r5
   16f58:	bl	16728 <fputs@plt+0x4f58>
   16f5c:	mov	r3, r7
   16f60:	mov	r2, sl
   16f64:	ldr	r1, [pc, #1264]	; 1745c <fputs@plt+0x5c8c>
   16f68:	mov	r0, r5
   16f6c:	str	r7, [sp]
   16f70:	bl	16728 <fputs@plt+0x4f58>
   16f74:	mov	r3, r7
   16f78:	mov	r2, sl
   16f7c:	ldr	r1, [pc, #1244]	; 17460 <fputs@plt+0x5c90>
   16f80:	mov	r0, r5
   16f84:	str	sl, [sp]
   16f88:	bl	16728 <fputs@plt+0x4f58>
   16f8c:	mov	r3, r7
   16f90:	mov	r2, #4
   16f94:	ldr	r1, [pc, #1224]	; 17464 <fputs@plt+0x5c94>
   16f98:	mov	r0, r5
   16f9c:	str	r6, [sp]
   16fa0:	bl	16728 <fputs@plt+0x4f58>
   16fa4:	ldr	r3, [sp, #16]
   16fa8:	mov	r2, #4
   16fac:	str	r3, [sp]
   16fb0:	ldr	r1, [pc, #1200]	; 17468 <fputs@plt+0x5c98>
   16fb4:	mov	r3, r7
   16fb8:	mov	r0, r5
   16fbc:	bl	16728 <fputs@plt+0x4f58>
   16fc0:	add	r3, fp, #20
   16fc4:	str	r3, [sp]
   16fc8:	mov	r2, sl
   16fcc:	mov	r3, sl
   16fd0:	mov	r1, #280	; 0x118
   16fd4:	mov	r0, r5
   16fd8:	bl	16728 <fputs@plt+0x4f58>
   16fdc:	add	r3, fp, #26
   16fe0:	str	r3, [sp]
   16fe4:	mov	r2, sl
   16fe8:	mov	r3, sl
   16fec:	ldr	r1, [pc, #1144]	; 1746c <fputs@plt+0x5c9c>
   16ff0:	mov	r0, r5
   16ff4:	bl	16728 <fputs@plt+0x4f58>
   16ff8:	ldr	r3, [sp, #80]	; 0x50
   16ffc:	cmp	r3, #0
   17000:	add	r3, fp, #32
   17004:	bgt	170d8 <fputs@plt+0x5908>
   17008:	ldr	r6, [sp, #32]
   1700c:	cmp	r6, #0
   17010:	bne	17350 <fputs@plt+0x5b80>
   17014:	mov	r2, r8
   17018:	mov	r1, r5
   1701c:	mov	r0, r4
   17020:	bl	1688c <fputs@plt+0x50bc>
   17024:	mov	r2, r8
   17028:	mov	r1, r9
   1702c:	mov	r0, r4
   17030:	bl	1679c <fputs@plt+0x4fcc>
   17034:	mov	r2, r8
   17038:	mov	r1, r9
   1703c:	mov	r0, r4
   17040:	bl	1679c <fputs@plt+0x4fcc>
   17044:	mov	r2, r8
   17048:	mov	r1, r9
   1704c:	mov	r0, r4
   17050:	bl	1679c <fputs@plt+0x4fcc>
   17054:	mov	r1, r6
   17058:	mov	r2, r8
   1705c:	mov	r0, r4
   17060:	bl	1679c <fputs@plt+0x4fcc>
   17064:	mov	r1, r6
   17068:	mov	r2, r8
   1706c:	mov	r0, r4
   17070:	bl	1679c <fputs@plt+0x4fcc>
   17074:	mov	r1, r6
   17078:	mov	r2, r8
   1707c:	mov	r0, r4
   17080:	bl	1679c <fputs@plt+0x4fcc>
   17084:	ldr	r6, [sp, #24]
   17088:	mov	r2, r8
   1708c:	mov	r1, r6
   17090:	mov	r0, r4
   17094:	bl	1679c <fputs@plt+0x4fcc>
   17098:	mov	r2, r8
   1709c:	mov	r1, r6
   170a0:	mov	r0, r4
   170a4:	bl	1679c <fputs@plt+0x4fcc>
   170a8:	mov	r1, r6
   170ac:	mov	r2, r8
   170b0:	mov	r0, r4
   170b4:	bl	1679c <fputs@plt+0x4fcc>
   170b8:	ldr	r1, [sp, #32]
   170bc:	cmp	r1, #0
   170c0:	beq	16c2c <fputs@plt+0x545c>
   170c4:	mov	r3, r4
   170c8:	mov	r2, #1
   170cc:	ldr	r0, [sp, #12]
   170d0:	bl	11638 <fwrite@plt>
   170d4:	b	16c2c <fputs@plt+0x545c>
   170d8:	str	r3, [sp]
   170dc:	mov	r2, #5
   170e0:	mov	r3, r7
   170e4:	ldr	r1, [pc, #904]	; 17474 <fputs@plt+0x5ca4>
   170e8:	mov	r0, r5
   170ec:	bl	16728 <fputs@plt+0x4f58>
   170f0:	add	r3, fp, #40	; 0x28
   170f4:	str	r3, [sp]
   170f8:	mov	r2, #5
   170fc:	mov	r3, r7
   17100:	ldr	r1, [pc, #880]	; 17478 <fputs@plt+0x5ca8>
   17104:	mov	r0, r5
   17108:	bl	16728 <fputs@plt+0x4f58>
   1710c:	mov	r2, #2
   17110:	str	r2, [sp]
   17114:	mov	r3, r7
   17118:	mov	r2, sl
   1711c:	mov	r1, #296	; 0x128
   17120:	mov	r0, r5
   17124:	bl	16728 <fputs@plt+0x4f58>
   17128:	ldr	r6, [sp, #32]
   1712c:	add	r3, fp, #48	; 0x30
   17130:	cmp	r6, #0
   17134:	bne	17350 <fputs@plt+0x5b80>
   17138:	mov	r2, r8
   1713c:	mov	r1, r5
   17140:	mov	r0, r4
   17144:	bl	1688c <fputs@plt+0x50bc>
   17148:	mov	r2, r8
   1714c:	mov	r1, r9
   17150:	mov	r0, r4
   17154:	bl	1679c <fputs@plt+0x4fcc>
   17158:	mov	r2, r8
   1715c:	mov	r1, r9
   17160:	mov	r0, r4
   17164:	bl	1679c <fputs@plt+0x4fcc>
   17168:	mov	r2, r8
   1716c:	mov	r1, r9
   17170:	mov	r0, r4
   17174:	bl	1679c <fputs@plt+0x4fcc>
   17178:	mov	r1, r6
   1717c:	mov	r2, r8
   17180:	mov	r0, r4
   17184:	bl	1679c <fputs@plt+0x4fcc>
   17188:	mov	r1, r6
   1718c:	mov	r2, r8
   17190:	mov	r0, r4
   17194:	bl	1679c <fputs@plt+0x4fcc>
   17198:	mov	r1, r6
   1719c:	mov	r2, r8
   171a0:	mov	r0, r4
   171a4:	bl	1679c <fputs@plt+0x4fcc>
   171a8:	ldr	r6, [sp, #24]
   171ac:	mov	r2, r8
   171b0:	mov	r1, r6
   171b4:	mov	r0, r4
   171b8:	bl	1679c <fputs@plt+0x4fcc>
   171bc:	mov	r2, r8
   171c0:	mov	r1, r6
   171c4:	mov	r0, r4
   171c8:	bl	1679c <fputs@plt+0x4fcc>
   171cc:	mov	r2, r8
   171d0:	mov	r1, r6
   171d4:	mov	r0, r4
   171d8:	bl	1679c <fputs@plt+0x4fcc>
   171dc:	mov	r2, r8
   171e0:	ldr	r1, [sp, #80]	; 0x50
   171e4:	mov	r0, r4
   171e8:	bl	16838 <fputs@plt+0x5068>
   171ec:	mov	r2, r8
   171f0:	mov	r0, r4
   171f4:	mov	r1, #1
   171f8:	bl	16838 <fputs@plt+0x5068>
   171fc:	mov	r2, r8
   17200:	ldr	r1, [sp, #80]	; 0x50
   17204:	mov	r0, r4
   17208:	bl	16838 <fputs@plt+0x5068>
   1720c:	mov	r2, r8
   17210:	mov	r1, #1
   17214:	mov	r0, r4
   17218:	bl	16838 <fputs@plt+0x5068>
   1721c:	b	16c20 <fputs@plt+0x5450>
   17220:	ldr	r3, [sp, #16]
   17224:	mov	r0, r5
   17228:	str	r3, [sp]
   1722c:	mov	r2, #5
   17230:	mov	r3, r7
   17234:	ldr	r1, [pc, #568]	; 17474 <fputs@plt+0x5ca4>
   17238:	bl	16728 <fputs@plt+0x4f58>
   1723c:	ldr	r3, [sp, #12]
   17240:	mov	r0, r5
   17244:	add	r3, r3, #22
   17248:	str	r3, [sp]
   1724c:	mov	r2, #5
   17250:	mov	r3, r7
   17254:	ldr	r1, [pc, #540]	; 17478 <fputs@plt+0x5ca8>
   17258:	bl	16728 <fputs@plt+0x4f58>
   1725c:	mov	r3, #2
   17260:	str	r3, [sp]
   17264:	mov	r0, r5
   17268:	mov	r3, r7
   1726c:	mov	r2, #3
   17270:	mov	r1, #296	; 0x128
   17274:	bl	16728 <fputs@plt+0x4f58>
   17278:	mov	r2, r7
   1727c:	mov	r1, r5
   17280:	mov	r0, r4
   17284:	bl	1688c <fputs@plt+0x50bc>
   17288:	ldr	r1, [sp, #80]	; 0x50
   1728c:	mov	r0, r4
   17290:	bl	167f0 <fputs@plt+0x5020>
   17294:	mov	r1, r7
   17298:	mov	r0, r4
   1729c:	bl	167f0 <fputs@plt+0x5020>
   172a0:	ldr	r1, [sp, #80]	; 0x50
   172a4:	mov	r0, r4
   172a8:	bl	167f0 <fputs@plt+0x5020>
   172ac:	mov	r1, r7
   172b0:	mov	r0, r4
   172b4:	bl	167f0 <fputs@plt+0x5020>
   172b8:	b	16c34 <fputs@plt+0x5464>
   172bc:	ldr	r2, [sp, #24]
   172c0:	ldr	r1, [pc, #436]	; 1747c <fputs@plt+0x5cac>
   172c4:	str	r2, [sp]
   172c8:	mov	r0, r5
   172cc:	mov	r2, #7
   172d0:	bl	16728 <fputs@plt+0x4f58>
   172d4:	b	16c10 <fputs@plt+0x5440>
   172d8:	ldr	ip, [sp, #24]
   172dc:	mov	r3, r7
   172e0:	str	ip, [sp]
   172e4:	mov	r2, #5
   172e8:	ldr	r1, [pc, #388]	; 17474 <fputs@plt+0x5ca4>
   172ec:	mov	r0, r5
   172f0:	bl	16728 <fputs@plt+0x4f58>
   172f4:	ldr	r3, [sp, #28]
   172f8:	mov	r2, #5
   172fc:	add	r3, r3, #22
   17300:	str	r3, [sp]
   17304:	ldr	r1, [pc, #364]	; 17478 <fputs@plt+0x5ca8>
   17308:	mov	r3, r7
   1730c:	mov	r0, r5
   17310:	bl	16728 <fputs@plt+0x4f58>
   17314:	mov	r2, #2
   17318:	mov	r3, r7
   1731c:	str	r2, [sp]
   17320:	mov	r1, #296	; 0x128
   17324:	mov	r2, #3
   17328:	mov	r0, r5
   1732c:	bl	16728 <fputs@plt+0x4f58>
   17330:	ldr	r3, [sp, #32]
   17334:	cmp	r3, #0
   17338:	bne	1741c <fputs@plt+0x5c4c>
   1733c:	mov	r2, r8
   17340:	mov	r1, r5
   17344:	mov	r0, r4
   17348:	bl	1688c <fputs@plt+0x50bc>
   1734c:	b	171dc <fputs@plt+0x5a0c>
   17350:	str	r3, [sp]
   17354:	mov	r2, #7
   17358:	mov	r3, r6
   1735c:	ldr	r1, [pc, #280]	; 1747c <fputs@plt+0x5cac>
   17360:	mov	r0, r5
   17364:	bl	16728 <fputs@plt+0x4f58>
   17368:	mov	r2, r8
   1736c:	mov	r1, r5
   17370:	mov	r0, r4
   17374:	bl	1688c <fputs@plt+0x50bc>
   17378:	mov	r2, r8
   1737c:	mov	r1, r9
   17380:	mov	r0, r4
   17384:	bl	1679c <fputs@plt+0x4fcc>
   17388:	mov	r2, r8
   1738c:	mov	r1, r9
   17390:	mov	r0, r4
   17394:	bl	1679c <fputs@plt+0x4fcc>
   17398:	mov	r2, r8
   1739c:	mov	r1, r9
   173a0:	mov	r0, r4
   173a4:	bl	1679c <fputs@plt+0x4fcc>
   173a8:	mov	r2, r8
   173ac:	mov	r1, #0
   173b0:	mov	r0, r4
   173b4:	bl	1679c <fputs@plt+0x4fcc>
   173b8:	mov	r2, r8
   173bc:	mov	r1, #0
   173c0:	mov	r0, r4
   173c4:	bl	1679c <fputs@plt+0x4fcc>
   173c8:	mov	r2, r8
   173cc:	mov	r1, #0
   173d0:	mov	r0, r4
   173d4:	bl	1679c <fputs@plt+0x4fcc>
   173d8:	ldr	r6, [sp, #24]
   173dc:	mov	r2, r8
   173e0:	mov	r1, r6
   173e4:	mov	r0, r4
   173e8:	bl	1679c <fputs@plt+0x4fcc>
   173ec:	mov	r2, r8
   173f0:	mov	r1, r6
   173f4:	mov	r0, r4
   173f8:	bl	1679c <fputs@plt+0x4fcc>
   173fc:	mov	r2, r8
   17400:	mov	r1, r6
   17404:	mov	r0, r4
   17408:	bl	1679c <fputs@plt+0x4fcc>
   1740c:	ldr	r3, [sp, #80]	; 0x50
   17410:	cmp	r3, #0
   17414:	ble	16c20 <fputs@plt+0x5450>
   17418:	b	171dc <fputs@plt+0x5a0c>
   1741c:	ldr	r2, [sp, #28]
   17420:	ldr	r1, [pc, #84]	; 1747c <fputs@plt+0x5cac>
   17424:	add	r2, r2, #30
   17428:	str	r2, [sp]
   1742c:	mov	r0, r5
   17430:	mov	r2, #7
   17434:	bl	16728 <fputs@plt+0x4f58>
   17438:	b	1733c <fputs@plt+0x5b6c>
   1743c:	bl	11674 <__stack_chk_fail@plt>
   17440:	andeq	r9, r2, r8, lsl #27
   17444:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   17448:	andeq	r0, r0, r1, lsl #2
   1744c:	andeq	r0, r0, r2, lsl #2
   17450:	andeq	r0, r0, r3, lsl #2
   17454:	andeq	r0, r0, r6, lsl #2
   17458:	andeq	r0, r0, r1, lsl r1
   1745c:	andeq	r0, r0, r2, lsl r1
   17460:	andeq	r0, r0, r5, lsl r1
   17464:	andeq	r0, r0, r6, lsl r1
   17468:	andeq	r0, r0, r7, lsl r1
   1746c:	andeq	r0, r0, r9, lsl r1
   17470:	andeq	r0, r0, sl, lsl #2
   17474:	andeq	r0, r0, sl, lsl r1
   17478:	andeq	r0, r0, fp, lsl r1
   1747c:	andeq	r8, r0, r3, ror r7
   17480:	cmp	r1, #0
   17484:	beq	17690 <fputs@plt+0x5ec0>
   17488:	eor	ip, r0, r1
   1748c:	rsbmi	r1, r1, #0
   17490:	subs	r2, r1, #1
   17494:	beq	1765c <fputs@plt+0x5e8c>
   17498:	movs	r3, r0
   1749c:	rsbmi	r3, r0, #0
   174a0:	cmp	r3, r1
   174a4:	bls	17668 <fputs@plt+0x5e98>
   174a8:	tst	r1, r2
   174ac:	beq	17678 <fputs@plt+0x5ea8>
   174b0:	clz	r2, r3
   174b4:	clz	r0, r1
   174b8:	sub	r2, r0, r2
   174bc:	rsbs	r2, r2, #31
   174c0:	addne	r2, r2, r2, lsl #1
   174c4:	mov	r0, #0
   174c8:	addne	pc, pc, r2, lsl #2
   174cc:	nop			; (mov r0, r0)
   174d0:	cmp	r3, r1, lsl #31
   174d4:	adc	r0, r0, r0
   174d8:	subcs	r3, r3, r1, lsl #31
   174dc:	cmp	r3, r1, lsl #30
   174e0:	adc	r0, r0, r0
   174e4:	subcs	r3, r3, r1, lsl #30
   174e8:	cmp	r3, r1, lsl #29
   174ec:	adc	r0, r0, r0
   174f0:	subcs	r3, r3, r1, lsl #29
   174f4:	cmp	r3, r1, lsl #28
   174f8:	adc	r0, r0, r0
   174fc:	subcs	r3, r3, r1, lsl #28
   17500:	cmp	r3, r1, lsl #27
   17504:	adc	r0, r0, r0
   17508:	subcs	r3, r3, r1, lsl #27
   1750c:	cmp	r3, r1, lsl #26
   17510:	adc	r0, r0, r0
   17514:	subcs	r3, r3, r1, lsl #26
   17518:	cmp	r3, r1, lsl #25
   1751c:	adc	r0, r0, r0
   17520:	subcs	r3, r3, r1, lsl #25
   17524:	cmp	r3, r1, lsl #24
   17528:	adc	r0, r0, r0
   1752c:	subcs	r3, r3, r1, lsl #24
   17530:	cmp	r3, r1, lsl #23
   17534:	adc	r0, r0, r0
   17538:	subcs	r3, r3, r1, lsl #23
   1753c:	cmp	r3, r1, lsl #22
   17540:	adc	r0, r0, r0
   17544:	subcs	r3, r3, r1, lsl #22
   17548:	cmp	r3, r1, lsl #21
   1754c:	adc	r0, r0, r0
   17550:	subcs	r3, r3, r1, lsl #21
   17554:	cmp	r3, r1, lsl #20
   17558:	adc	r0, r0, r0
   1755c:	subcs	r3, r3, r1, lsl #20
   17560:	cmp	r3, r1, lsl #19
   17564:	adc	r0, r0, r0
   17568:	subcs	r3, r3, r1, lsl #19
   1756c:	cmp	r3, r1, lsl #18
   17570:	adc	r0, r0, r0
   17574:	subcs	r3, r3, r1, lsl #18
   17578:	cmp	r3, r1, lsl #17
   1757c:	adc	r0, r0, r0
   17580:	subcs	r3, r3, r1, lsl #17
   17584:	cmp	r3, r1, lsl #16
   17588:	adc	r0, r0, r0
   1758c:	subcs	r3, r3, r1, lsl #16
   17590:	cmp	r3, r1, lsl #15
   17594:	adc	r0, r0, r0
   17598:	subcs	r3, r3, r1, lsl #15
   1759c:	cmp	r3, r1, lsl #14
   175a0:	adc	r0, r0, r0
   175a4:	subcs	r3, r3, r1, lsl #14
   175a8:	cmp	r3, r1, lsl #13
   175ac:	adc	r0, r0, r0
   175b0:	subcs	r3, r3, r1, lsl #13
   175b4:	cmp	r3, r1, lsl #12
   175b8:	adc	r0, r0, r0
   175bc:	subcs	r3, r3, r1, lsl #12
   175c0:	cmp	r3, r1, lsl #11
   175c4:	adc	r0, r0, r0
   175c8:	subcs	r3, r3, r1, lsl #11
   175cc:	cmp	r3, r1, lsl #10
   175d0:	adc	r0, r0, r0
   175d4:	subcs	r3, r3, r1, lsl #10
   175d8:	cmp	r3, r1, lsl #9
   175dc:	adc	r0, r0, r0
   175e0:	subcs	r3, r3, r1, lsl #9
   175e4:	cmp	r3, r1, lsl #8
   175e8:	adc	r0, r0, r0
   175ec:	subcs	r3, r3, r1, lsl #8
   175f0:	cmp	r3, r1, lsl #7
   175f4:	adc	r0, r0, r0
   175f8:	subcs	r3, r3, r1, lsl #7
   175fc:	cmp	r3, r1, lsl #6
   17600:	adc	r0, r0, r0
   17604:	subcs	r3, r3, r1, lsl #6
   17608:	cmp	r3, r1, lsl #5
   1760c:	adc	r0, r0, r0
   17610:	subcs	r3, r3, r1, lsl #5
   17614:	cmp	r3, r1, lsl #4
   17618:	adc	r0, r0, r0
   1761c:	subcs	r3, r3, r1, lsl #4
   17620:	cmp	r3, r1, lsl #3
   17624:	adc	r0, r0, r0
   17628:	subcs	r3, r3, r1, lsl #3
   1762c:	cmp	r3, r1, lsl #2
   17630:	adc	r0, r0, r0
   17634:	subcs	r3, r3, r1, lsl #2
   17638:	cmp	r3, r1, lsl #1
   1763c:	adc	r0, r0, r0
   17640:	subcs	r3, r3, r1, lsl #1
   17644:	cmp	r3, r1
   17648:	adc	r0, r0, r0
   1764c:	subcs	r3, r3, r1
   17650:	cmp	ip, #0
   17654:	rsbmi	r0, r0, #0
   17658:	bx	lr
   1765c:	teq	ip, r0
   17660:	rsbmi	r0, r0, #0
   17664:	bx	lr
   17668:	movcc	r0, #0
   1766c:	asreq	r0, ip, #31
   17670:	orreq	r0, r0, #1
   17674:	bx	lr
   17678:	clz	r2, r1
   1767c:	rsb	r2, r2, #31
   17680:	cmp	ip, #0
   17684:	lsr	r0, r3, r2
   17688:	rsbmi	r0, r0, #0
   1768c:	bx	lr
   17690:	cmp	r0, #0
   17694:	mvngt	r0, #-2147483648	; 0x80000000
   17698:	movlt	r0, #-2147483648	; 0x80000000
   1769c:	b	176c0 <fputs@plt+0x5ef0>
   176a0:	cmp	r1, #0
   176a4:	beq	17690 <fputs@plt+0x5ec0>
   176a8:	push	{r0, r1, lr}
   176ac:	bl	17488 <fputs@plt+0x5cb8>
   176b0:	pop	{r1, r2, lr}
   176b4:	mul	r3, r2, r0
   176b8:	sub	r1, r1, r3
   176bc:	bx	lr
   176c0:	push	{r1, lr}
   176c4:	mov	r0, #8
   176c8:	bl	115fc <raise@plt>
   176cc:	pop	{r1, pc}
   176d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   176d4:	mov	r7, r0
   176d8:	ldr	r6, [pc, #72]	; 17728 <fputs@plt+0x5f58>
   176dc:	ldr	r5, [pc, #72]	; 1772c <fputs@plt+0x5f5c>
   176e0:	add	r6, pc, r6
   176e4:	add	r5, pc, r5
   176e8:	sub	r6, r6, r5
   176ec:	mov	r8, r1
   176f0:	mov	r9, r2
   176f4:	bl	113d8 <fileno@plt-0x20>
   176f8:	asrs	r6, r6, #2
   176fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17700:	mov	r4, #0
   17704:	add	r4, r4, #1
   17708:	ldr	r3, [r5], #4
   1770c:	mov	r2, r9
   17710:	mov	r1, r8
   17714:	mov	r0, r7
   17718:	blx	r3
   1771c:	cmp	r6, r4
   17720:	bne	17704 <fputs@plt+0x5f34>
   17724:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17728:	muleq	r1, ip, r6
   1772c:	muleq	r1, r4, r6
   17730:	bx	lr

Disassembly of section .fini:

00017734 <.fini>:
   17734:	push	{r3, lr}
   17738:	pop	{r3, pc}
