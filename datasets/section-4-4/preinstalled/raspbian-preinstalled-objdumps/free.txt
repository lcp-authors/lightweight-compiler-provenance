
raspbian-preinstalled/free:     file format elf32-littlearm


Disassembly of section .init:

00010cdc <_init@@Base>:
   10cdc:	push	{r3, lr}
   10ce0:	bl	11928 <__snprintf_chk@plt+0xae8>
   10ce4:	pop	{r3, pc}

Disassembly of section .plt:

00010ce8 <strtol@plt-0x14>:
   10ce8:	push	{lr}		; (str lr, [sp, #-4]!)
   10cec:	ldr	lr, [pc, #4]	; 10cf8 <_init@@Base+0x1c>
   10cf0:	add	lr, pc, lr
   10cf4:	ldr	pc, [lr, #8]!
   10cf8:	andeq	r2, r1, r4, lsl #5

00010cfc <strtol@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #73728	; 0x12000
   10d04:	ldr	pc, [ip, #644]!	; 0x284

00010d08 <meminfo@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #73728	; 0x12000
   10d10:	ldr	pc, [ip, #636]!	; 0x27c

00010d14 <fflush@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #73728	; 0x12000
   10d1c:	ldr	pc, [ip, #628]!	; 0x274

00010d20 <ferror@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #73728	; 0x12000
   10d28:	ldr	pc, [ip, #620]!	; 0x26c

00010d2c <_exit@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #73728	; 0x12000
   10d34:	ldr	pc, [ip, #612]!	; 0x264

00010d38 <dcgettext@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #73728	; 0x12000
   10d40:	ldr	pc, [ip, #604]!	; 0x25c

00010d44 <__stack_chk_fail@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #73728	; 0x12000
   10d4c:	ldr	pc, [ip, #596]!	; 0x254

00010d50 <textdomain@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #73728	; 0x12000
   10d58:	ldr	pc, [ip, #588]!	; 0x24c

00010d5c <usleep@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #73728	; 0x12000
   10d64:	ldr	pc, [ip, #580]!	; 0x244

00010d68 <__fpending@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #73728	; 0x12000
   10d70:	ldr	pc, [ip, #572]!	; 0x23c

00010d74 <error@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #73728	; 0x12000
   10d7c:	ldr	pc, [ip, #564]!	; 0x234

00010d80 <__libc_start_main@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #73728	; 0x12000
   10d88:	ldr	pc, [ip, #556]!	; 0x22c

00010d8c <__gmon_start__@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #73728	; 0x12000
   10d94:	ldr	pc, [ip, #548]!	; 0x224

00010d98 <getopt_long@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #73728	; 0x12000
   10da0:	ldr	pc, [ip, #540]!	; 0x21c

00010da4 <__ctype_b_loc@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #73728	; 0x12000
   10dac:	ldr	pc, [ip, #532]!	; 0x214

00010db0 <exit@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #73728	; 0x12000
   10db8:	ldr	pc, [ip, #524]!	; 0x20c

00010dbc <__errno_location@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #73728	; 0x12000
   10dc4:	ldr	pc, [ip, #516]!	; 0x204

00010dc8 <__cxa_atexit@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #73728	; 0x12000
   10dd0:	ldr	pc, [ip, #508]!	; 0x1fc

00010dd4 <putchar@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #73728	; 0x12000
   10ddc:	ldr	pc, [ip, #500]!	; 0x1f4

00010de0 <__printf_chk@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #73728	; 0x12000
   10de8:	ldr	pc, [ip, #492]!	; 0x1ec

00010dec <strtod@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #73728	; 0x12000
   10df4:	ldr	pc, [ip, #484]!	; 0x1e4

00010df8 <__fprintf_chk@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #73728	; 0x12000
   10e00:	ldr	pc, [ip, #476]!	; 0x1dc

00010e04 <fclose@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #73728	; 0x12000
   10e0c:	ldr	pc, [ip, #468]!	; 0x1d4

00010e10 <setlocale@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #73728	; 0x12000
   10e18:	ldr	pc, [ip, #460]!	; 0x1cc

00010e1c <bindtextdomain@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #73728	; 0x12000
   10e24:	ldr	pc, [ip, #452]!	; 0x1c4

00010e28 <fputs@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #73728	; 0x12000
   10e30:	ldr	pc, [ip, #444]!	; 0x1bc

00010e34 <abort@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #73728	; 0x12000
   10e3c:	ldr	pc, [ip, #436]!	; 0x1b4

00010e40 <__snprintf_chk@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #73728	; 0x12000
   10e48:	ldr	pc, [ip, #428]!	; 0x1ac

Disassembly of section .text:

00010e50 <.text>:
   10e50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e54:	vpush	{d8-d9}
   10e58:	ldr	r2, [pc, #1104]	; 112b0 <__snprintf_chk@plt+0x470>
   10e5c:	ldr	r3, [pc, #1048]	; 1127c <__snprintf_chk@plt+0x43c>
   10e60:	mov	r8, r0
   10e64:	ldr	r2, [r2]
   10e68:	sub	sp, sp, #28
   10e6c:	mov	r7, r1
   10e70:	mov	r0, #6
   10e74:	ldr	r1, [pc, #1028]	; 11280 <__snprintf_chk@plt+0x440>
   10e78:	str	r2, [r3]
   10e7c:	bl	10e10 <setlocale@plt>
   10e80:	ldr	r1, [pc, #1020]	; 11284 <__snprintf_chk@plt+0x444>
   10e84:	ldr	r0, [pc, #1020]	; 11288 <__snprintf_chk@plt+0x448>
   10e88:	bl	10e1c <bindtextdomain@plt>
   10e8c:	ldr	r0, [pc, #1012]	; 11288 <__snprintf_chk@plt+0x448>
   10e90:	bl	10d50 <textdomain@plt>
   10e94:	ldr	r0, [pc, #1008]	; 1128c <__snprintf_chk@plt+0x44c>
   10e98:	bl	12518 <__snprintf_chk@plt+0x16d8>
   10e9c:	vldr	s16, [pc, #980]	; 11278 <__snprintf_chk@plt+0x438>
   10ea0:	vldr	d9, [pc, #968]	; 11270 <__snprintf_chk@plt+0x430>
   10ea4:	mov	r9, #0
   10ea8:	ldr	r6, [pc, #992]	; 11290 <__snprintf_chk@plt+0x450>
   10eac:	ldr	r5, [pc, #992]	; 11294 <__snprintf_chk@plt+0x454>
   10eb0:	mov	sl, r9
   10eb4:	mov	r4, r9
   10eb8:	mov	fp, r9
   10ebc:	mov	r3, #0
   10ec0:	str	r3, [sp]
   10ec4:	mov	r2, r5
   10ec8:	mov	r3, r6
   10ecc:	mov	r1, r7
   10ed0:	mov	r0, r8
   10ed4:	bl	10d98 <getopt_long@plt>
   10ed8:	cmn	r0, #1
   10edc:	beq	1145c <__snprintf_chk@plt+0x61c>
   10ee0:	sub	r0, r0, #86	; 0x56
   10ee4:	cmp	r0, #178	; 0xb2
   10ee8:	ldrls	pc, [pc, r0, lsl #2]
   10eec:	b	11450 <__snprintf_chk@plt+0x610>
   10ef0:	andeq	r1, r1, r0, lsr #8
   10ef4:	andeq	r1, r1, r0, asr r4
   10ef8:	andeq	r1, r1, r0, asr r4
   10efc:	andeq	r1, r1, r0, asr r4
   10f00:	andeq	r1, r1, r0, asr r4
   10f04:	andeq	r1, r1, r0, asr r4
   10f08:	andeq	r1, r1, r0, asr r4
   10f0c:	andeq	r1, r1, r0, asr r4
   10f10:	andeq	r1, r1, r0, asr r4
   10f14:	andeq	r1, r1, r0, asr r4
   10f18:	andeq	r1, r1, r0, asr r4
   10f1c:	andeq	r1, r1, r0, asr r4
   10f20:	andeq	r1, r1, ip, lsl #8
   10f24:			; <UNDEFINED> instruction: 0x000113b4
   10f28:	andeq	r1, r1, r0, asr r4
   10f2c:	andeq	r1, r1, r0, asr r4
   10f30:	andeq	r1, r1, r0, asr r4
   10f34:	andeq	r1, r1, r8, lsr #7
   10f38:	andeq	r1, r1, r0, lsr #7
   10f3c:	andeq	r1, r1, r0, asr r4
   10f40:	andeq	r1, r1, r0, asr r4
   10f44:	muleq	r1, r4, r3
   10f48:	andeq	r1, r1, ip, lsl #7
   10f4c:	andeq	r1, r1, r0, lsl #7
   10f50:	andeq	r1, r1, r0, asr r4
   10f54:	andeq	r1, r1, r0, asr r4
   10f58:	andeq	r1, r1, r0, asr r4
   10f5c:	andeq	r1, r1, r0, asr r4
   10f60:	andeq	r1, r1, r0, asr r4
   10f64:	andeq	r1, r1, r0, lsr #6
   10f68:	andeq	r1, r1, r8, ror #4
   10f6c:	andeq	r1, r1, r0, asr r4
   10f70:	andeq	r1, r1, r0, asr r4
   10f74:	andeq	r1, r1, r0, ror #4
   10f78:	andeq	r1, r1, r0, asr r4
   10f7c:	andeq	r1, r1, r0, asr r4
   10f80:	andeq	r1, r1, r0, asr r4
   10f84:	andeq	r1, r1, r0, asr r4
   10f88:	andeq	r1, r1, r0, asr r4
   10f8c:	andeq	r1, r1, r0, asr r4
   10f90:	andeq	r1, r1, r0, asr r4
   10f94:	andeq	r1, r1, r0, asr r4
   10f98:	andeq	r1, r1, r0, asr r4
   10f9c:	andeq	r1, r1, r0, asr r4
   10fa0:	andeq	r1, r1, r0, asr r4
   10fa4:	andeq	r1, r1, r0, asr r4
   10fa8:	andeq	r1, r1, r0, asr r4
   10fac:	andeq	r1, r1, r0, asr r4
   10fb0:	andeq	r1, r1, r0, asr r4
   10fb4:	andeq	r1, r1, r0, asr r4
   10fb8:	andeq	r1, r1, r0, asr r4
   10fbc:	andeq	r1, r1, r0, asr r4
   10fc0:	andeq	r1, r1, r0, asr r4
   10fc4:	andeq	r1, r1, r0, asr r4
   10fc8:	andeq	r1, r1, r0, asr r4
   10fcc:	andeq	r1, r1, r0, asr r4
   10fd0:	andeq	r1, r1, r0, asr r4
   10fd4:	andeq	r1, r1, r0, asr r4
   10fd8:	andeq	r1, r1, r0, asr r4
   10fdc:	andeq	r1, r1, r0, asr r4
   10fe0:	andeq	r1, r1, r0, asr r4
   10fe4:	andeq	r1, r1, r0, asr r4
   10fe8:	andeq	r1, r1, r0, asr r4
   10fec:	andeq	r1, r1, r0, asr r4
   10ff0:	andeq	r1, r1, r0, asr r4
   10ff4:	andeq	r1, r1, r0, asr r4
   10ff8:	andeq	r1, r1, r0, asr r4
   10ffc:	andeq	r1, r1, r0, asr r4
   11000:	andeq	r1, r1, r0, asr r4
   11004:	andeq	r1, r1, r0, asr r4
   11008:	andeq	r1, r1, r0, asr r4
   1100c:	andeq	r1, r1, r0, asr r4
   11010:	andeq	r1, r1, r0, asr r4
   11014:	andeq	r1, r1, r0, asr r4
   11018:	andeq	r1, r1, r0, asr r4
   1101c:	andeq	r1, r1, r0, asr r4
   11020:	andeq	r1, r1, r0, asr r4
   11024:	andeq	r1, r1, r0, asr r4
   11028:	andeq	r1, r1, r0, asr r4
   1102c:	andeq	r1, r1, r0, asr r4
   11030:	andeq	r1, r1, r0, asr r4
   11034:	andeq	r1, r1, r0, asr r4
   11038:	andeq	r1, r1, r0, asr r4
   1103c:	andeq	r1, r1, r0, asr r4
   11040:	andeq	r1, r1, r0, asr r4
   11044:	andeq	r1, r1, r0, asr r4
   11048:	andeq	r1, r1, r0, asr r4
   1104c:	andeq	r1, r1, r0, asr r4
   11050:	andeq	r1, r1, r0, asr r4
   11054:	andeq	r1, r1, r0, asr r4
   11058:	andeq	r1, r1, r0, asr r4
   1105c:	andeq	r1, r1, r0, asr r4
   11060:	andeq	r1, r1, r0, asr r4
   11064:	andeq	r1, r1, r0, asr r4
   11068:	andeq	r1, r1, r0, asr r4
   1106c:	andeq	r1, r1, r0, asr r4
   11070:	andeq	r1, r1, r0, asr r4
   11074:	andeq	r1, r1, r0, asr r4
   11078:	andeq	r1, r1, r0, asr r4
   1107c:	andeq	r1, r1, r0, asr r4
   11080:	andeq	r1, r1, r0, asr r4
   11084:	andeq	r1, r1, r0, asr r4
   11088:	andeq	r1, r1, r0, asr r4
   1108c:	andeq	r1, r1, r0, asr r4
   11090:	andeq	r1, r1, r0, asr r4
   11094:	andeq	r1, r1, r0, asr r4
   11098:	andeq	r1, r1, r0, asr r4
   1109c:	andeq	r1, r1, r0, asr r4
   110a0:	andeq	r1, r1, r0, asr r4
   110a4:	andeq	r1, r1, r0, asr r4
   110a8:	andeq	r1, r1, r0, asr r4
   110ac:	andeq	r1, r1, r0, asr r4
   110b0:	andeq	r1, r1, r0, asr r4
   110b4:	andeq	r1, r1, r0, asr r4
   110b8:	andeq	r1, r1, r0, asr r4
   110bc:	andeq	r1, r1, r0, asr r4
   110c0:	andeq	r1, r1, r0, asr r4
   110c4:	andeq	r1, r1, r0, asr r4
   110c8:	andeq	r1, r1, r0, asr r4
   110cc:	andeq	r1, r1, r0, asr r4
   110d0:	andeq	r1, r1, r0, asr r4
   110d4:	andeq	r1, r1, r0, asr r4
   110d8:	andeq	r1, r1, r0, asr r4
   110dc:	andeq	r1, r1, r0, asr r4
   110e0:	andeq	r1, r1, r0, asr r4
   110e4:	andeq	r1, r1, r0, asr r4
   110e8:	andeq	r1, r1, r0, asr r4
   110ec:	andeq	r1, r1, r0, asr r4
   110f0:	andeq	r1, r1, r0, asr r4
   110f4:	andeq	r1, r1, r0, asr r4
   110f8:	andeq	r1, r1, r0, asr r4
   110fc:	andeq	r1, r1, r0, asr r4
   11100:	andeq	r1, r1, r0, asr r4
   11104:	andeq	r1, r1, r0, asr r4
   11108:	andeq	r1, r1, r0, asr r4
   1110c:	andeq	r1, r1, r0, asr r4
   11110:	andeq	r1, r1, r0, asr r4
   11114:	andeq	r1, r1, r0, asr r4
   11118:	andeq	r1, r1, r0, asr r4
   1111c:	andeq	r1, r1, r0, asr r4
   11120:	andeq	r1, r1, r0, asr r4
   11124:	andeq	r1, r1, r0, asr r4
   11128:	andeq	r1, r1, r0, asr r4
   1112c:	andeq	r1, r1, r0, asr r4
   11130:	andeq	r1, r1, r0, asr r4
   11134:	andeq	r1, r1, r0, asr r4
   11138:	andeq	r1, r1, r0, asr r4
   1113c:	andeq	r1, r1, r0, asr r4
   11140:	andeq	r1, r1, r0, asr r4
   11144:	andeq	r1, r1, r0, asr r4
   11148:	andeq	r1, r1, r0, asr r4
   1114c:	andeq	r1, r1, r0, asr r4
   11150:	andeq	r1, r1, r0, asr r4
   11154:	andeq	r1, r1, r0, asr r4
   11158:	andeq	r1, r1, r0, asr r4
   1115c:	andeq	r1, r1, r0, asr r4
   11160:	andeq	r1, r1, r0, asr r4
   11164:	andeq	r1, r1, r0, asr r4
   11168:	andeq	r1, r1, r0, asr r4
   1116c:	andeq	r1, r1, r0, asr r4
   11170:	andeq	r1, r1, r0, asr r4
   11174:	andeq	r1, r1, r0, asr r4
   11178:	andeq	r1, r1, r0, asr r4
   1117c:	andeq	r1, r1, r0, asr r4
   11180:	andeq	r1, r1, r0, asr r4
   11184:	andeq	r1, r1, r0, asr r4
   11188:	andeq	r1, r1, r0, asr r4
   1118c:	andeq	r1, r1, r0, asr r4
   11190:	andeq	r1, r1, r0, asr r4
   11194:	andeq	r1, r1, r0, asr r4
   11198:	andeq	r1, r1, r8, asr r2
   1119c:	andeq	r1, r1, r0, asr #4
   111a0:	andeq	r1, r1, r8, lsr #4
   111a4:	andeq	r1, r1, r0, lsl r2
   111a8:	andeq	r1, r1, r0, lsl #4
   111ac:	strdeq	r1, [r1], -r0
   111b0:	ldrdeq	r1, [r1], -ip
   111b4:	andeq	r1, r1, r8, asr #3
   111b8:			; <UNDEFINED> instruction: 0x000111bc
   111bc:	ldr	r3, [pc, #284]	; 112e0 <__snprintf_chk@plt+0x4a0>
   111c0:	ldr	r0, [r3]
   111c4:	bl	119e0 <__snprintf_chk@plt+0xba0>
   111c8:	cmp	r4, #0
   111cc:	bne	11388 <__snprintf_chk@plt+0x548>
   111d0:	mov	sl, #6
   111d4:	mov	r4, #1
   111d8:	b	10ebc <__snprintf_chk@plt+0x7c>
   111dc:	cmp	r4, #0
   111e0:	bne	11388 <__snprintf_chk@plt+0x548>
   111e4:	mov	sl, #5
   111e8:	mov	r4, #1
   111ec:	b	10ebc <__snprintf_chk@plt+0x7c>
   111f0:	cmp	r4, #0
   111f4:	bne	11388 <__snprintf_chk@plt+0x548>
   111f8:	orr	fp, fp, #32
   111fc:	b	111d0 <__snprintf_chk@plt+0x390>
   11200:	cmp	r4, #0
   11204:	bne	11388 <__snprintf_chk@plt+0x548>
   11208:	orr	fp, fp, #32
   1120c:	b	111e4 <__snprintf_chk@plt+0x3a4>
   11210:	cmp	r4, #0
   11214:	bne	11388 <__snprintf_chk@plt+0x548>
   11218:	orr	fp, fp, #32
   1121c:	mov	sl, #4
   11220:	mov	r4, #1
   11224:	b	10ebc <__snprintf_chk@plt+0x7c>
   11228:	cmp	r4, #0
   1122c:	bne	11388 <__snprintf_chk@plt+0x548>
   11230:	orr	fp, fp, #32
   11234:	mov	sl, #3
   11238:	mov	r4, #1
   1123c:	b	10ebc <__snprintf_chk@plt+0x7c>
   11240:	cmp	r4, #0
   11244:	bne	11388 <__snprintf_chk@plt+0x548>
   11248:	orr	fp, fp, #32
   1124c:	mov	sl, #2
   11250:	mov	r4, #1
   11254:	b	10ebc <__snprintf_chk@plt+0x7c>
   11258:	orr	fp, fp, #32
   1125c:	b	10ebc <__snprintf_chk@plt+0x7c>
   11260:	orr	fp, fp, #8
   11264:	b	10ebc <__snprintf_chk@plt+0x7c>
   11268:	orr	fp, fp, #16
   1126c:	b	10ebc <__snprintf_chk@plt+0x7c>
   11270:	andeq	r0, r0, r0
   11274:	smlawbmi	lr, r0, r4, r8
   11278:	ldmdbmi	r4!, {sl, sp}^
   1127c:	andeq	r3, r2, ip, lsl r0
   11280:	muleq	r1, r4, r6
   11284:	andeq	r2, r1, r4, lsl fp
   11288:	andeq	r2, r1, r8, lsr #22
   1128c:	andeq	r2, r1, r0, lsr r4
   11290:	andeq	r2, r1, ip, lsr r5
   11294:	andeq	r2, r1, r4, ror #23
   11298:	andeq	r2, r1, r4, lsr fp
   1129c:	andeq	r2, r1, ip, asr #22
   112a0:	andeq	r2, r1, ip, ror fp
   112a4:	muleq	r1, ip, fp
   112a8:	andeq	r3, r2, r0, rrx
   112ac:	andeq	r2, r1, r4, asr #23
   112b0:	andeq	r3, r2, r8, lsl r0
   112b4:	ldrdeq	r2, [r1], -r0
   112b8:	andeq	r3, r2, r0, lsr #32
   112bc:	andeq	r3, r2, r8, rrx
   112c0:	andeq	r2, r1, r8, lsr #25
   112c4:			; <UNDEFINED> instruction: 0x00012cb0
   112c8:	strdeq	r2, [r1], -r4
   112cc:	andeq	r2, r1, r0, asr ip
   112d0:	andeq	r2, r1, r0, lsr #25
   112d4:	andeq	r3, r2, r8, lsr r0
   112d8:	andeq	r3, r2, r0, lsr r0
   112dc:	andeq	r2, r1, r8, asr #25
   112e0:	andeq	r3, r2, r4, asr #32
   112e4:	andeq	r3, r2, r4, lsr #32
   112e8:	andeq	r3, r2, r8, asr #32
   112ec:	ldrdeq	r2, [r1], -r0
   112f0:	andeq	r3, r2, r8, asr r0
   112f4:	andeq	r3, r2, ip, asr #32
   112f8:	andeq	r3, r2, r4, lsr r0
   112fc:	andeq	r3, r2, r4, asr r0
   11300:	andeq	r3, r2, r0, asr r0
   11304:			; <UNDEFINED> instruction: 0x00012cb8
   11308:	andeq	r3, r2, r0, lsl r0
   1130c:	andeq	r3, r2, r4, rrx
   11310:	andeq	r3, r2, r8, lsr #32
   11314:	andeq	r2, r1, r0, asr #25
   11318:	andeq	r3, r2, r0, asr #32
   1131c:	svccc	0x00800000
   11320:	bl	10dbc <__errno_location@plt>
   11324:	mov	r3, #0
   11328:	ldr	r1, [pc, #-152]	; 11298 <__snprintf_chk@plt+0x458>
   1132c:	orr	fp, fp, #64	; 0x40
   11330:	str	r3, [r0]
   11334:	ldr	r3, [pc, #-148]	; 112a8 <__snprintf_chk@plt+0x468>
   11338:	ldr	r0, [r3]
   1133c:	bl	121fc <__snprintf_chk@plt+0x13bc>
   11340:	vldr	s15, [pc, #-44]	; 1131c <__snprintf_chk@plt+0x4dc>
   11344:	vmul.f64	d0, d0, d9
   11348:	vcvt.f32.f64	s16, d0
   1134c:	vcmpe.f32	s16, s15
   11350:	vmrs	APSR_nzcv, fpscr
   11354:	bpl	10ebc <__snprintf_chk@plt+0x7c>
   11358:	mov	r2, #5
   1135c:	ldr	r1, [pc, #-200]	; 1129c <__snprintf_chk@plt+0x45c>
   11360:	mov	r0, #0
   11364:	bl	10d38 <dcgettext@plt>
   11368:	ldr	r3, [pc, #-200]	; 112a8 <__snprintf_chk@plt+0x468>
   1136c:	mov	r1, #0
   11370:	ldr	r3, [r3]
   11374:	mov	r2, r0
   11378:	mov	r0, #1
   1137c:	bl	10d74 <error@plt>
   11380:	cmp	r4, #0
   11384:	beq	11234 <__snprintf_chk@plt+0x3f4>
   11388:	bl	11ce4 <__snprintf_chk@plt+0xea4>
   1138c:	orr	fp, fp, #4
   11390:	b	10ebc <__snprintf_chk@plt+0x7c>
   11394:	cmp	r4, #0
   11398:	beq	1124c <__snprintf_chk@plt+0x40c>
   1139c:	b	11388 <__snprintf_chk@plt+0x548>
   113a0:	orr	fp, fp, #2
   113a4:	b	10ebc <__snprintf_chk@plt+0x7c>
   113a8:	cmp	r4, #0
   113ac:	beq	1121c <__snprintf_chk@plt+0x3dc>
   113b0:	b	11388 <__snprintf_chk@plt+0x548>
   113b4:	ldr	r3, [pc, #-276]	; 112a8 <__snprintf_chk@plt+0x468>
   113b8:	mov	r2, #5
   113bc:	ldr	r1, [pc, #-292]	; 112a0 <__snprintf_chk@plt+0x460>
   113c0:	mov	r0, #0
   113c4:	ldr	r9, [r3]
   113c8:	bl	10d38 <dcgettext@plt>
   113cc:	orr	fp, fp, #192	; 0xc0
   113d0:	mov	r1, r0
   113d4:	mov	r0, r9
   113d8:	bl	12090 <__snprintf_chk@plt+0x1250>
   113dc:	subs	r9, r0, #0
   113e0:	bgt	10ebc <__snprintf_chk@plt+0x7c>
   113e4:	mov	r2, #5
   113e8:	ldr	r1, [pc, #-332]	; 112a4 <__snprintf_chk@plt+0x464>
   113ec:	mov	r0, #0
   113f0:	bl	10d38 <dcgettext@plt>
   113f4:	ldr	r3, [pc, #-340]	; 112a8 <__snprintf_chk@plt+0x468>
   113f8:	mov	r1, #34	; 0x22
   113fc:	ldr	r3, [r3]
   11400:	mov	r2, r0
   11404:	mov	r0, #1
   11408:	bl	10d74 <error@plt>
   1140c:	cmp	r4, #0
   11410:	bne	11388 <__snprintf_chk@plt+0x548>
   11414:	mov	r4, #1
   11418:	mov	sl, r4
   1141c:	b	10ebc <__snprintf_chk@plt+0x7c>
   11420:	mov	r2, #5
   11424:	ldr	r1, [pc, #-384]	; 112ac <__snprintf_chk@plt+0x46c>
   11428:	mov	r0, #0
   1142c:	bl	10d38 <dcgettext@plt>
   11430:	ldr	r3, [pc, #-392]	; 112b0 <__snprintf_chk@plt+0x470>
   11434:	ldr	r2, [r3]
   11438:	ldr	r3, [pc, #-396]	; 112b4 <__snprintf_chk@plt+0x474>
   1143c:	mov	r1, r0
   11440:	mov	r0, #1
   11444:	bl	10de0 <__printf_chk@plt>
   11448:	mov	r0, #0
   1144c:	bl	10db0 <exit@plt>
   11450:	ldr	r3, [pc, #-416]	; 112b8 <__snprintf_chk@plt+0x478>
   11454:	ldr	r0, [r3]
   11458:	bl	119e0 <__snprintf_chk@plt+0xba0>
   1145c:	and	r3, fp, #4
   11460:	ldr	r7, [pc, #-428]	; 112bc <__snprintf_chk@plt+0x47c>
   11464:	ldr	r5, [pc, #-428]	; 112c0 <__snprintf_chk@plt+0x480>
   11468:	ldr	r4, [pc, #-428]	; 112c4 <__snprintf_chk@plt+0x484>
   1146c:	str	r3, [sp, #16]
   11470:	and	r6, fp, #8
   11474:	and	r3, fp, #16
   11478:	str	r3, [sp, #20]
   1147c:	and	r3, fp, #128	; 0x80
   11480:	str	r3, [sp, #12]
   11484:	bl	10d08 <meminfo@plt>
   11488:	cmp	r6, #0
   1148c:	movne	r0, #0
   11490:	ldrne	r1, [pc, #-464]	; 112c8 <__snprintf_chk@plt+0x488>
   11494:	ldreq	r1, [pc, #-464]	; 112cc <__snprintf_chk@plt+0x48c>
   11498:	moveq	r0, r6
   1149c:	mov	r2, #5
   114a0:	bl	10d38 <dcgettext@plt>
   114a4:	mov	r1, r0
   114a8:	mov	r0, #1
   114ac:	bl	10de0 <__printf_chk@plt>
   114b0:	mov	r0, #10
   114b4:	bl	10dd4 <putchar@plt>
   114b8:	mov	r2, #5
   114bc:	ldr	r1, [pc, #-500]	; 112d0 <__snprintf_chk@plt+0x490>
   114c0:	mov	r0, #0
   114c4:	bl	10d38 <dcgettext@plt>
   114c8:	mov	r1, r5
   114cc:	mov	r2, r0
   114d0:	mov	r0, #1
   114d4:	bl	10de0 <__printf_chk@plt>
   114d8:	mov	r2, sl
   114dc:	mov	r1, fp
   114e0:	ldr	r0, [r7]
   114e4:	bl	11d4c <__snprintf_chk@plt+0xf0c>
   114e8:	mov	r1, r4
   114ec:	mov	r2, r0
   114f0:	mov	r0, #1
   114f4:	bl	10de0 <__printf_chk@plt>
   114f8:	ldr	r3, [pc, #-524]	; 112f4 <__snprintf_chk@plt+0x4b4>
   114fc:	mov	r2, sl
   11500:	mov	r1, fp
   11504:	ldr	r0, [r3]
   11508:	bl	11d4c <__snprintf_chk@plt+0xf0c>
   1150c:	mov	r1, r4
   11510:	mov	r2, r0
   11514:	mov	r0, #1
   11518:	bl	10de0 <__printf_chk@plt>
   1151c:	ldr	r3, [pc, #-552]	; 112fc <__snprintf_chk@plt+0x4bc>
   11520:	mov	r2, sl
   11524:	mov	r1, fp
   11528:	ldr	r0, [r3]
   1152c:	bl	11d4c <__snprintf_chk@plt+0xf0c>
   11530:	mov	r1, r4
   11534:	mov	r2, r0
   11538:	mov	r0, #1
   1153c:	bl	10de0 <__printf_chk@plt>
   11540:	ldr	r3, [pc, #-628]	; 112d4 <__snprintf_chk@plt+0x494>
   11544:	mov	r2, sl
   11548:	mov	r1, fp
   1154c:	ldr	r0, [r3]
   11550:	bl	11d4c <__snprintf_chk@plt+0xf0c>
   11554:	mov	r1, r4
   11558:	mov	r2, r0
   1155c:	mov	r0, #1
   11560:	bl	10de0 <__printf_chk@plt>
   11564:	cmp	r6, #0
   11568:	beq	116c0 <__snprintf_chk@plt+0x880>
   1156c:	ldr	r3, [pc, #-656]	; 112e4 <__snprintf_chk@plt+0x4a4>
   11570:	mov	r2, sl
   11574:	mov	r1, fp
   11578:	ldr	r0, [r3]
   1157c:	bl	11d4c <__snprintf_chk@plt+0xf0c>
   11580:	mov	r1, r4
   11584:	mov	r2, r0
   11588:	mov	r0, #1
   1158c:	bl	10de0 <__printf_chk@plt>
   11590:	ldr	r3, [pc, #-688]	; 112e8 <__snprintf_chk@plt+0x4a8>
   11594:	mov	r2, sl
   11598:	mov	r1, fp
   1159c:	ldr	r0, [r3]
   115a0:	bl	11d4c <__snprintf_chk@plt+0xf0c>
   115a4:	mov	r1, r4
   115a8:	mov	r2, r0
   115ac:	mov	r0, #1
   115b0:	bl	10de0 <__printf_chk@plt>
   115b4:	ldr	r3, [pc, #-740]	; 112d8 <__snprintf_chk@plt+0x498>
   115b8:	mov	r2, sl
   115bc:	mov	r1, fp
   115c0:	ldr	r0, [r3]
   115c4:	bl	11d4c <__snprintf_chk@plt+0xf0c>
   115c8:	mov	r1, r4
   115cc:	mov	r2, r0
   115d0:	mov	r0, #1
   115d4:	bl	10de0 <__printf_chk@plt>
   115d8:	mov	r0, #10
   115dc:	bl	10dd4 <putchar@plt>
   115e0:	ldr	r3, [sp, #16]
   115e4:	cmp	r3, #0
   115e8:	bne	11798 <__snprintf_chk@plt+0x958>
   115ec:	mov	r2, #5
   115f0:	ldr	r1, [pc, #-796]	; 112dc <__snprintf_chk@plt+0x49c>
   115f4:	mov	r0, #0
   115f8:	bl	10d38 <dcgettext@plt>
   115fc:	mov	r1, r5
   11600:	mov	r2, r0
   11604:	mov	r0, #1
   11608:	bl	10de0 <__printf_chk@plt>
   1160c:	ldr	r3, [pc, #-804]	; 112f0 <__snprintf_chk@plt+0x4b0>
   11610:	mov	r2, sl
   11614:	mov	r1, fp
   11618:	ldr	r0, [r3]
   1161c:	bl	11d4c <__snprintf_chk@plt+0xf0c>
   11620:	mov	r1, r4
   11624:	mov	r2, r0
   11628:	mov	r0, #1
   1162c:	bl	10de0 <__printf_chk@plt>
   11630:	ldr	r3, [pc, #-832]	; 112f8 <__snprintf_chk@plt+0x4b8>
   11634:	mov	r2, sl
   11638:	mov	r1, fp
   1163c:	ldr	r0, [r3]
   11640:	bl	11d4c <__snprintf_chk@plt+0xf0c>
   11644:	mov	r1, r4
   11648:	mov	r2, r0
   1164c:	mov	r0, #1
   11650:	bl	10de0 <__printf_chk@plt>
   11654:	ldr	r3, [pc, #-860]	; 11300 <__snprintf_chk@plt+0x4c0>
   11658:	mov	r2, sl
   1165c:	mov	r1, fp
   11660:	ldr	r0, [r3]
   11664:	bl	11d4c <__snprintf_chk@plt+0xf0c>
   11668:	mov	r1, r4
   1166c:	mov	r2, r0
   11670:	mov	r0, #1
   11674:	bl	10de0 <__printf_chk@plt>
   11678:	mov	r0, #10
   1167c:	bl	10dd4 <putchar@plt>
   11680:	ldr	r3, [sp, #20]
   11684:	cmp	r3, #0
   11688:	bne	116e0 <__snprintf_chk@plt+0x8a0>
   1168c:	ldr	r3, [pc, #-948]	; 112e0 <__snprintf_chk@plt+0x4a0>
   11690:	ldr	r0, [r3]
   11694:	bl	10d14 <fflush@plt>
   11698:	ldr	r3, [sp, #12]
   1169c:	cmp	r3, #0
   116a0:	beq	116b0 <__snprintf_chk@plt+0x870>
   116a4:	sub	r9, r9, #1
   116a8:	cmp	r9, #0
   116ac:	ble	116b8 <__snprintf_chk@plt+0x878>
   116b0:	tst	fp, #64	; 0x40
   116b4:	bne	118d4 <__snprintf_chk@plt+0xa94>
   116b8:	mov	r0, #0
   116bc:	bl	10db0 <exit@plt>
   116c0:	ldr	r3, [pc, #-996]	; 112e4 <__snprintf_chk@plt+0x4a4>
   116c4:	mov	r2, sl
   116c8:	mov	r1, fp
   116cc:	ldr	r0, [r3]
   116d0:	ldr	r3, [pc, #-1008]	; 112e8 <__snprintf_chk@plt+0x4a8>
   116d4:	ldr	r3, [r3]
   116d8:	add	r0, r0, r3
   116dc:	b	115a0 <__snprintf_chk@plt+0x760>
   116e0:	mov	r2, #5
   116e4:	ldr	r1, [pc, #-1024]	; 112ec <__snprintf_chk@plt+0x4ac>
   116e8:	mov	r0, #0
   116ec:	bl	10d38 <dcgettext@plt>
   116f0:	mov	r1, r5
   116f4:	mov	r2, r0
   116f8:	mov	r0, #1
   116fc:	bl	10de0 <__printf_chk@plt>
   11700:	ldr	r3, [pc, #-1048]	; 112f0 <__snprintf_chk@plt+0x4b0>
   11704:	ldr	r0, [r7]
   11708:	mov	r2, sl
   1170c:	ldr	r3, [r3]
   11710:	mov	r1, fp
   11714:	add	r0, r0, r3
   11718:	bl	11d4c <__snprintf_chk@plt+0xf0c>
   1171c:	mov	r1, r4
   11720:	mov	r2, r0
   11724:	mov	r0, #1
   11728:	bl	10de0 <__printf_chk@plt>
   1172c:	ldr	r3, [pc, #-1088]	; 112f4 <__snprintf_chk@plt+0x4b4>
   11730:	mov	r2, sl
   11734:	mov	r1, fp
   11738:	ldr	r0, [r3]
   1173c:	ldr	r3, [pc, #-1100]	; 112f8 <__snprintf_chk@plt+0x4b8>
   11740:	ldr	r3, [r3]
   11744:	add	r0, r0, r3
   11748:	bl	11d4c <__snprintf_chk@plt+0xf0c>
   1174c:	mov	r1, r4
   11750:	mov	r2, r0
   11754:	mov	r0, #1
   11758:	bl	10de0 <__printf_chk@plt>
   1175c:	ldr	r3, [pc, #-1128]	; 112fc <__snprintf_chk@plt+0x4bc>
   11760:	mov	r2, sl
   11764:	mov	r1, fp
   11768:	ldr	r0, [r3]
   1176c:	ldr	r3, [pc, #-1140]	; 11300 <__snprintf_chk@plt+0x4c0>
   11770:	ldr	r3, [r3]
   11774:	add	r0, r0, r3
   11778:	bl	11d4c <__snprintf_chk@plt+0xf0c>
   1177c:	mov	r1, r4
   11780:	mov	r2, r0
   11784:	mov	r0, #1
   11788:	bl	10de0 <__printf_chk@plt>
   1178c:	mov	r0, #10
   11790:	bl	10dd4 <putchar@plt>
   11794:	b	1168c <__snprintf_chk@plt+0x84c>
   11798:	mov	r2, #5
   1179c:	ldr	r1, [pc, #-1184]	; 11304 <__snprintf_chk@plt+0x4c4>
   117a0:	mov	r0, #0
   117a4:	bl	10d38 <dcgettext@plt>
   117a8:	mov	r1, r5
   117ac:	ldr	r8, [pc, #-1196]	; 11308 <__snprintf_chk@plt+0x4c8>
   117b0:	mov	r2, r0
   117b4:	mov	r0, #1
   117b8:	bl	10de0 <__printf_chk@plt>
   117bc:	ldr	r3, [pc, #-1208]	; 1130c <__snprintf_chk@plt+0x4cc>
   117c0:	mov	r2, sl
   117c4:	mov	r1, fp
   117c8:	ldr	r0, [r3]
   117cc:	bl	11d4c <__snprintf_chk@plt+0xf0c>
   117d0:	mov	r1, r4
   117d4:	mov	r2, r0
   117d8:	mov	r0, #1
   117dc:	bl	10de0 <__printf_chk@plt>
   117e0:	ldr	r3, [pc, #-1244]	; 1130c <__snprintf_chk@plt+0x4cc>
   117e4:	ldr	r1, [r8]
   117e8:	mov	r2, sl
   117ec:	ldr	r0, [r3]
   117f0:	sub	r0, r0, r1
   117f4:	mov	r1, fp
   117f8:	bl	11d4c <__snprintf_chk@plt+0xf0c>
   117fc:	mov	r1, r4
   11800:	mov	r2, r0
   11804:	mov	r0, #1
   11808:	bl	10de0 <__printf_chk@plt>
   1180c:	mov	r2, sl
   11810:	mov	r1, fp
   11814:	ldr	r0, [r8]
   11818:	bl	11d4c <__snprintf_chk@plt+0xf0c>
   1181c:	mov	r1, r4
   11820:	ldr	r8, [pc, #-1304]	; 11310 <__snprintf_chk@plt+0x4d0>
   11824:	mov	r2, r0
   11828:	mov	r0, #1
   1182c:	bl	10de0 <__printf_chk@plt>
   11830:	mov	r0, #10
   11834:	bl	10dd4 <putchar@plt>
   11838:	mov	r2, #5
   1183c:	ldr	r1, [pc, #-1328]	; 11314 <__snprintf_chk@plt+0x4d4>
   11840:	mov	r0, #0
   11844:	bl	10d38 <dcgettext@plt>
   11848:	mov	r1, r5
   1184c:	mov	r2, r0
   11850:	mov	r0, #1
   11854:	bl	10de0 <__printf_chk@plt>
   11858:	ldr	r3, [pc, #-1352]	; 11318 <__snprintf_chk@plt+0x4d8>
   1185c:	mov	r2, sl
   11860:	mov	r1, fp
   11864:	ldr	r0, [r3]
   11868:	bl	11d4c <__snprintf_chk@plt+0xf0c>
   1186c:	mov	r1, r4
   11870:	mov	r2, r0
   11874:	mov	r0, #1
   11878:	bl	10de0 <__printf_chk@plt>
   1187c:	ldr	r3, [pc, #-1388]	; 11318 <__snprintf_chk@plt+0x4d8>
   11880:	ldr	r1, [r8]
   11884:	mov	r2, sl
   11888:	ldr	r0, [r3]
   1188c:	sub	r0, r0, r1
   11890:	mov	r1, fp
   11894:	bl	11d4c <__snprintf_chk@plt+0xf0c>
   11898:	mov	r1, r4
   1189c:	mov	r2, r0
   118a0:	mov	r0, #1
   118a4:	bl	10de0 <__printf_chk@plt>
   118a8:	mov	r2, sl
   118ac:	mov	r1, fp
   118b0:	ldr	r0, [r8]
   118b4:	bl	11d4c <__snprintf_chk@plt+0xf0c>
   118b8:	mov	r1, r4
   118bc:	mov	r2, r0
   118c0:	mov	r0, #1
   118c4:	bl	10de0 <__printf_chk@plt>
   118c8:	mov	r0, #10
   118cc:	bl	10dd4 <putchar@plt>
   118d0:	b	115ec <__snprintf_chk@plt+0x7ac>
   118d4:	mov	r0, #10
   118d8:	bl	10dd4 <putchar@plt>
   118dc:	vcvt.u32.f32	s15, s16
   118e0:	vmov	r0, s15
   118e4:	bl	10d5c <usleep@plt>
   118e8:	b	11484 <__snprintf_chk@plt+0x644>
   118ec:	mov	fp, #0
   118f0:	mov	lr, #0
   118f4:	pop	{r1}		; (ldr r1, [sp], #4)
   118f8:	mov	r2, sp
   118fc:	push	{r2}		; (str r2, [sp, #-4]!)
   11900:	push	{r0}		; (str r0, [sp, #-4]!)
   11904:	ldr	ip, [pc, #16]	; 1191c <__snprintf_chk@plt+0xadc>
   11908:	push	{ip}		; (str ip, [sp, #-4]!)
   1190c:	ldr	r0, [pc, #12]	; 11920 <__snprintf_chk@plt+0xae0>
   11910:	ldr	r3, [pc, #12]	; 11924 <__snprintf_chk@plt+0xae4>
   11914:	bl	10d80 <__libc_start_main@plt>
   11918:	bl	10e34 <abort@plt>
   1191c:	andeq	r2, r1, r4, lsl r5
   11920:	andeq	r0, r1, r0, asr lr
   11924:			; <UNDEFINED> instruction: 0x000124b4
   11928:	ldr	r3, [pc, #20]	; 11944 <__snprintf_chk@plt+0xb04>
   1192c:	ldr	r2, [pc, #20]	; 11948 <__snprintf_chk@plt+0xb08>
   11930:	add	r3, pc, r3
   11934:	ldr	r2, [r3, r2]
   11938:	cmp	r2, #0
   1193c:	bxeq	lr
   11940:	b	10d8c <__gmon_start__@plt>
   11944:	andeq	r1, r1, r4, asr #12
   11948:	andeq	r0, r0, ip, ror r0
   1194c:	ldr	r0, [pc, #24]	; 1196c <__snprintf_chk@plt+0xb2c>
   11950:	ldr	r3, [pc, #24]	; 11970 <__snprintf_chk@plt+0xb30>
   11954:	cmp	r3, r0
   11958:	bxeq	lr
   1195c:	ldr	r3, [pc, #16]	; 11974 <__snprintf_chk@plt+0xb34>
   11960:	cmp	r3, #0
   11964:	bxeq	lr
   11968:	bx	r3
   1196c:	andeq	r3, r2, r0, lsl r0
   11970:	andeq	r3, r2, r0, lsl r0
   11974:	andeq	r0, r0, r0
   11978:	ldr	r0, [pc, #36]	; 119a4 <__snprintf_chk@plt+0xb64>
   1197c:	ldr	r1, [pc, #36]	; 119a8 <__snprintf_chk@plt+0xb68>
   11980:	sub	r1, r1, r0
   11984:	asr	r1, r1, #2
   11988:	add	r1, r1, r1, lsr #31
   1198c:	asrs	r1, r1, #1
   11990:	bxeq	lr
   11994:	ldr	r3, [pc, #16]	; 119ac <__snprintf_chk@plt+0xb6c>
   11998:	cmp	r3, #0
   1199c:	bxeq	lr
   119a0:	bx	r3
   119a4:	andeq	r3, r2, r0, lsl r0
   119a8:	andeq	r3, r2, r0, lsl r0
   119ac:	andeq	r0, r0, r0
   119b0:	push	{r4, lr}
   119b4:	ldr	r4, [pc, #24]	; 119d4 <__snprintf_chk@plt+0xb94>
   119b8:	ldrb	r3, [r4]
   119bc:	cmp	r3, #0
   119c0:	popne	{r4, pc}
   119c4:	bl	1194c <__snprintf_chk@plt+0xb0c>
   119c8:	mov	r3, #1
   119cc:	strb	r3, [r4]
   119d0:	pop	{r4, pc}
   119d4:	andeq	r3, r2, ip, rrx
   119d8:	b	11978 <__snprintf_chk@plt+0xb38>
   119dc:	andeq	r0, r0, r0
   119e0:	push	{r4, lr}
   119e4:	mov	r2, #5
   119e8:	mov	r4, r0
   119ec:	ldr	r1, [pc, #640]	; 11c74 <__snprintf_chk@plt+0xe34>
   119f0:	mov	r0, #0
   119f4:	bl	10d38 <dcgettext@plt>
   119f8:	mov	r1, r4
   119fc:	bl	10e28 <fputs@plt>
   11a00:	mov	r2, #5
   11a04:	ldr	r1, [pc, #620]	; 11c78 <__snprintf_chk@plt+0xe38>
   11a08:	mov	r0, #0
   11a0c:	bl	10d38 <dcgettext@plt>
   11a10:	ldr	r3, [pc, #612]	; 11c7c <__snprintf_chk@plt+0xe3c>
   11a14:	mov	r1, #1
   11a18:	ldr	r3, [r3]
   11a1c:	mov	r2, r0
   11a20:	mov	r0, r4
   11a24:	bl	10df8 <__fprintf_chk@plt>
   11a28:	mov	r2, #5
   11a2c:	ldr	r1, [pc, #588]	; 11c80 <__snprintf_chk@plt+0xe40>
   11a30:	mov	r0, #0
   11a34:	bl	10d38 <dcgettext@plt>
   11a38:	mov	r1, r4
   11a3c:	bl	10e28 <fputs@plt>
   11a40:	mov	r2, #5
   11a44:	ldr	r1, [pc, #568]	; 11c84 <__snprintf_chk@plt+0xe44>
   11a48:	mov	r0, #0
   11a4c:	bl	10d38 <dcgettext@plt>
   11a50:	mov	r1, r4
   11a54:	bl	10e28 <fputs@plt>
   11a58:	mov	r2, #5
   11a5c:	ldr	r1, [pc, #548]	; 11c88 <__snprintf_chk@plt+0xe48>
   11a60:	mov	r0, #0
   11a64:	bl	10d38 <dcgettext@plt>
   11a68:	mov	r1, r4
   11a6c:	bl	10e28 <fputs@plt>
   11a70:	mov	r2, #5
   11a74:	ldr	r1, [pc, #528]	; 11c8c <__snprintf_chk@plt+0xe4c>
   11a78:	mov	r0, #0
   11a7c:	bl	10d38 <dcgettext@plt>
   11a80:	mov	r1, r4
   11a84:	bl	10e28 <fputs@plt>
   11a88:	mov	r2, #5
   11a8c:	ldr	r1, [pc, #508]	; 11c90 <__snprintf_chk@plt+0xe50>
   11a90:	mov	r0, #0
   11a94:	bl	10d38 <dcgettext@plt>
   11a98:	mov	r1, r4
   11a9c:	bl	10e28 <fputs@plt>
   11aa0:	mov	r2, #5
   11aa4:	ldr	r1, [pc, #488]	; 11c94 <__snprintf_chk@plt+0xe54>
   11aa8:	mov	r0, #0
   11aac:	bl	10d38 <dcgettext@plt>
   11ab0:	mov	r1, r4
   11ab4:	bl	10e28 <fputs@plt>
   11ab8:	mov	r2, #5
   11abc:	ldr	r1, [pc, #468]	; 11c98 <__snprintf_chk@plt+0xe58>
   11ac0:	mov	r0, #0
   11ac4:	bl	10d38 <dcgettext@plt>
   11ac8:	mov	r1, r4
   11acc:	bl	10e28 <fputs@plt>
   11ad0:	mov	r2, #5
   11ad4:	ldr	r1, [pc, #448]	; 11c9c <__snprintf_chk@plt+0xe5c>
   11ad8:	mov	r0, #0
   11adc:	bl	10d38 <dcgettext@plt>
   11ae0:	mov	r1, r4
   11ae4:	bl	10e28 <fputs@plt>
   11ae8:	mov	r2, #5
   11aec:	ldr	r1, [pc, #428]	; 11ca0 <__snprintf_chk@plt+0xe60>
   11af0:	mov	r0, #0
   11af4:	bl	10d38 <dcgettext@plt>
   11af8:	mov	r1, r4
   11afc:	bl	10e28 <fputs@plt>
   11b00:	mov	r2, #5
   11b04:	ldr	r1, [pc, #408]	; 11ca4 <__snprintf_chk@plt+0xe64>
   11b08:	mov	r0, #0
   11b0c:	bl	10d38 <dcgettext@plt>
   11b10:	mov	r1, r4
   11b14:	bl	10e28 <fputs@plt>
   11b18:	mov	r2, #5
   11b1c:	ldr	r1, [pc, #388]	; 11ca8 <__snprintf_chk@plt+0xe68>
   11b20:	mov	r0, #0
   11b24:	bl	10d38 <dcgettext@plt>
   11b28:	mov	r1, r4
   11b2c:	bl	10e28 <fputs@plt>
   11b30:	mov	r2, #5
   11b34:	ldr	r1, [pc, #368]	; 11cac <__snprintf_chk@plt+0xe6c>
   11b38:	mov	r0, #0
   11b3c:	bl	10d38 <dcgettext@plt>
   11b40:	mov	r1, r4
   11b44:	bl	10e28 <fputs@plt>
   11b48:	mov	r2, #5
   11b4c:	ldr	r1, [pc, #348]	; 11cb0 <__snprintf_chk@plt+0xe70>
   11b50:	mov	r0, #0
   11b54:	bl	10d38 <dcgettext@plt>
   11b58:	mov	r1, r4
   11b5c:	bl	10e28 <fputs@plt>
   11b60:	mov	r2, #5
   11b64:	ldr	r1, [pc, #328]	; 11cb4 <__snprintf_chk@plt+0xe74>
   11b68:	mov	r0, #0
   11b6c:	bl	10d38 <dcgettext@plt>
   11b70:	mov	r1, r4
   11b74:	bl	10e28 <fputs@plt>
   11b78:	mov	r2, #5
   11b7c:	ldr	r1, [pc, #308]	; 11cb8 <__snprintf_chk@plt+0xe78>
   11b80:	mov	r0, #0
   11b84:	bl	10d38 <dcgettext@plt>
   11b88:	mov	r1, r4
   11b8c:	bl	10e28 <fputs@plt>
   11b90:	mov	r2, #5
   11b94:	ldr	r1, [pc, #288]	; 11cbc <__snprintf_chk@plt+0xe7c>
   11b98:	mov	r0, #0
   11b9c:	bl	10d38 <dcgettext@plt>
   11ba0:	mov	r1, r4
   11ba4:	bl	10e28 <fputs@plt>
   11ba8:	mov	r2, #5
   11bac:	ldr	r1, [pc, #268]	; 11cc0 <__snprintf_chk@plt+0xe80>
   11bb0:	mov	r0, #0
   11bb4:	bl	10d38 <dcgettext@plt>
   11bb8:	mov	r1, r4
   11bbc:	bl	10e28 <fputs@plt>
   11bc0:	mov	r2, #5
   11bc4:	ldr	r1, [pc, #248]	; 11cc4 <__snprintf_chk@plt+0xe84>
   11bc8:	mov	r0, #0
   11bcc:	bl	10d38 <dcgettext@plt>
   11bd0:	mov	r1, r4
   11bd4:	bl	10e28 <fputs@plt>
   11bd8:	mov	r2, #5
   11bdc:	ldr	r1, [pc, #228]	; 11cc8 <__snprintf_chk@plt+0xe88>
   11be0:	mov	r0, #0
   11be4:	bl	10d38 <dcgettext@plt>
   11be8:	mov	r1, r4
   11bec:	bl	10e28 <fputs@plt>
   11bf0:	mov	r2, #5
   11bf4:	ldr	r1, [pc, #208]	; 11ccc <__snprintf_chk@plt+0xe8c>
   11bf8:	mov	r0, #0
   11bfc:	bl	10d38 <dcgettext@plt>
   11c00:	mov	r1, r4
   11c04:	bl	10e28 <fputs@plt>
   11c08:	mov	r2, #5
   11c0c:	ldr	r1, [pc, #188]	; 11cd0 <__snprintf_chk@plt+0xe90>
   11c10:	mov	r0, #0
   11c14:	bl	10d38 <dcgettext@plt>
   11c18:	mov	r1, r4
   11c1c:	bl	10e28 <fputs@plt>
   11c20:	mov	r2, #5
   11c24:	ldr	r1, [pc, #168]	; 11cd4 <__snprintf_chk@plt+0xe94>
   11c28:	mov	r0, #0
   11c2c:	bl	10d38 <dcgettext@plt>
   11c30:	mov	r1, r4
   11c34:	bl	10e28 <fputs@plt>
   11c38:	mov	r2, #5
   11c3c:	ldr	r1, [pc, #148]	; 11cd8 <__snprintf_chk@plt+0xe98>
   11c40:	mov	r0, #0
   11c44:	bl	10d38 <dcgettext@plt>
   11c48:	ldr	r3, [pc, #140]	; 11cdc <__snprintf_chk@plt+0xe9c>
   11c4c:	mov	r1, #1
   11c50:	mov	r2, r0
   11c54:	mov	r0, r4
   11c58:	bl	10df8 <__fprintf_chk@plt>
   11c5c:	ldr	r3, [pc, #124]	; 11ce0 <__snprintf_chk@plt+0xea0>
   11c60:	ldr	r0, [r3]
   11c64:	sub	r0, r0, r4
   11c68:	clz	r0, r0
   11c6c:	lsr	r0, r0, #5
   11c70:	bl	10db0 <exit@plt>
   11c74:	andeq	r2, r1, ip, lsl #13
   11c78:	muleq	r1, r8, r6
   11c7c:	andeq	r3, r2, r8, lsl r0
   11c80:	andeq	r2, r1, r8, lsr #13
   11c84:			; <UNDEFINED> instruction: 0x000126b4
   11c88:	andeq	r2, r1, r0, ror #13
   11c8c:	andeq	r2, r1, r0, lsl r7
   11c90:	andeq	r2, r1, r0, asr #14
   11c94:	andeq	r2, r1, r0, ror r7
   11c98:	andeq	r2, r1, r0, lsr #15
   11c9c:	ldrdeq	r2, [r1], -r0
   11ca0:	andeq	r2, r1, r0, lsl #16
   11ca4:	andeq	r2, r1, r0, lsr r8
   11ca8:	andeq	r2, r1, r0, ror #16
   11cac:	muleq	r1, r0, r8
   11cb0:	andeq	r2, r1, r0, asr #17
   11cb4:	strdeq	r2, [r1], -r4
   11cb8:	andeq	r2, r1, r8, lsr #18
   11cbc:	andeq	r2, r1, ip, ror #18
   11cc0:	muleq	r1, ip, r9
   11cc4:	ldrdeq	r2, [r1], -r4
   11cc8:	andeq	r2, r1, r0, lsl sl
   11ccc:	andeq	r2, r1, r4, lsr #18
   11cd0:	andeq	r2, r1, r4, lsr sl
   11cd4:	andeq	r2, r1, r0, ror #20
   11cd8:	muleq	r1, r8, sl
   11cdc:			; <UNDEFINED> instruction: 0x00012ab4
   11ce0:	andeq	r3, r2, r0, lsr #32
   11ce4:	mov	r2, #5
   11ce8:	ldr	r1, [pc, #24]	; 11d08 <__snprintf_chk@plt+0xec8>
   11cec:	push	{r4, lr}
   11cf0:	mov	r0, #0
   11cf4:	bl	10d38 <dcgettext@plt>
   11cf8:	mov	r1, #0
   11cfc:	mov	r2, r0
   11d00:	mov	r0, #1
   11d04:	bl	10d74 <error@plt>
   11d08:			; <UNDEFINED> instruction: 0x00012abc
   11d0c:	cmp	r1, #0
   11d10:	bne	11d1c <__snprintf_chk@plt+0xedc>
   11d14:	vldr	d0, [pc, #4]	; 11d20 <__snprintf_chk@plt+0xee0>
   11d18:	bx	lr
   11d1c:	b	11d28 <__snprintf_chk@plt+0xee8>
   11d20:	andeq	r0, r0, r0
   11d24:	svccc	0x00f00000	; IMB
   11d28:	push	{r4, lr}
   11d2c:	sub	r1, r1, #1
   11d30:	vpush	{d8}
   11d34:	vmov	s16, r0
   11d38:	bl	11d0c <__snprintf_chk@plt+0xecc>
   11d3c:	vcvt.f64.u32	d8, s16
   11d40:	vmul.f64	d0, d8, d0
   11d44:	vpop	{d8}
   11d48:	pop	{r4, pc}
   11d4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d50:	vldr	s15, [pc, #784]	; 12068 <__snprintf_chk@plt+0x1228>
   11d54:	vpush	{d8-d10}
   11d58:	vldr	s18, [pc, #780]	; 1206c <__snprintf_chk@plt+0x122c>
   11d5c:	ands	sl, r1, #32
   11d60:	mov	r8, r0
   11d64:	sub	sp, sp, #28
   11d68:	vmovne.f32	s18, s15
   11d6c:	subs	r3, r2, #0
   11d70:	and	r1, r1, #2
   11d74:	bne	11f98 <__snprintf_chk@plt+0x1158>
   11d78:	cmp	r1, #0
   11d7c:	beq	12004 <__snprintf_chk@plt+0x11c4>
   11d80:	ldr	r5, [pc, #744]	; 12070 <__snprintf_chk@plt+0x1230>
   11d84:	ldrb	fp, [r5]
   11d88:	cmp	fp, #0
   11d8c:	beq	11e78 <__snprintf_chk@plt+0x1038>
   11d90:	lsr	r3, r8, #10
   11d94:	ldr	r9, [pc, #728]	; 12074 <__snprintf_chk@plt+0x1234>
   11d98:	ldr	r6, [pc, #728]	; 12078 <__snprintf_chk@plt+0x1238>
   11d9c:	vmov	s20, r3
   11da0:	lsl	r8, r8, #10
   11da4:	mov	r4, #1
   11da8:	b	11e4c <__snprintf_chk@plt+0x100c>
   11dac:	blt	11e3c <__snprintf_chk@plt+0xffc>
   11db0:	cmp	r4, #6
   11db4:	bgt	11e3c <__snprintf_chk@plt+0xffc>
   11db8:	vcvt.f32.s32	s16, s20
   11dbc:	cmp	sl, #0
   11dc0:	vcvt.u32.f32	s19, s18
   11dc4:	sub	r7, r4, #2
   11dc8:	vmul.f32	s16, s16, s18
   11dcc:	vcvt.f64.f32	d8, s16
   11dd0:	bne	11e88 <__snprintf_chk@plt+0x1048>
   11dd4:	cmp	r7, #0
   11dd8:	bne	11ef0 <__snprintf_chk@plt+0x10b0>
   11ddc:	ldr	r2, [pc, #664]	; 1207c <__snprintf_chk@plt+0x123c>
   11de0:	mov	r3, #8192	; 0x2000
   11de4:	str	r2, [sp]
   11de8:	str	fp, [sp, #16]
   11dec:	vstr	d8, [sp, #8]
   11df0:	mov	r1, r3
   11df4:	mov	r2, #1
   11df8:	mov	r0, r6
   11dfc:	bl	10e40 <__snprintf_chk@plt>
   11e00:	cmp	r0, #5
   11e04:	beq	11e78 <__snprintf_chk@plt+0x1038>
   11e08:	vcvt.s32.f64	s16, d8
   11e0c:	ldrb	r2, [r5]
   11e10:	ldr	r1, [pc, #616]	; 12080 <__snprintf_chk@plt+0x1240>
   11e14:	mov	r3, #8192	; 0x2000
   11e18:	str	r1, [sp]
   11e1c:	str	r2, [sp, #8]
   11e20:	mov	r1, r3
   11e24:	mov	r2, #1
   11e28:	mov	r0, r6
   11e2c:	vstr	s16, [sp, #4]
   11e30:	bl	10e40 <__snprintf_chk@plt>
   11e34:	cmp	r0, #5
   11e38:	ble	11e78 <__snprintf_chk@plt+0x1038>
   11e3c:	ldrb	fp, [r5, #1]!
   11e40:	add	r4, r4, #1
   11e44:	cmp	fp, #0
   11e48:	beq	11e78 <__snprintf_chk@plt+0x1038>
   11e4c:	cmp	r4, #1
   11e50:	bne	11dac <__snprintf_chk@plt+0xf6c>
   11e54:	mov	r3, #8192	; 0x2000
   11e58:	stmib	sp, {r8, fp}
   11e5c:	str	r9, [sp]
   11e60:	mov	r1, r3
   11e64:	mov	r2, r4
   11e68:	mov	r0, r6
   11e6c:	bl	10e40 <__snprintf_chk@plt>
   11e70:	cmp	r0, #4
   11e74:	bgt	11e3c <__snprintf_chk@plt+0xffc>
   11e78:	ldr	r0, [pc, #504]	; 12078 <__snprintf_chk@plt+0x1238>
   11e7c:	add	sp, sp, #28
   11e80:	vpop	{d8-d10}
   11e84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e88:	cmp	r7, #0
   11e8c:	bne	11f44 <__snprintf_chk@plt+0x1104>
   11e90:	ldr	r2, [pc, #492]	; 12084 <__snprintf_chk@plt+0x1244>
   11e94:	mov	r3, #8192	; 0x2000
   11e98:	str	r2, [sp]
   11e9c:	str	fp, [sp, #16]
   11ea0:	vstr	d8, [sp, #8]
   11ea4:	mov	r1, r3
   11ea8:	mov	r2, #1
   11eac:	mov	r0, r6
   11eb0:	bl	10e40 <__snprintf_chk@plt>
   11eb4:	cmp	r0, #4
   11eb8:	beq	11e78 <__snprintf_chk@plt+0x1038>
   11ebc:	vcvt.s32.f64	s16, d8
   11ec0:	ldrb	r2, [r5]
   11ec4:	mov	r3, #8192	; 0x2000
   11ec8:	str	r9, [sp]
   11ecc:	str	r2, [sp, #8]
   11ed0:	mov	r1, r3
   11ed4:	mov	r2, #1
   11ed8:	mov	r0, r6
   11edc:	vstr	s16, [sp, #4]
   11ee0:	bl	10e40 <__snprintf_chk@plt>
   11ee4:	cmp	r0, #4
   11ee8:	bgt	11e3c <__snprintf_chk@plt+0xffc>
   11eec:	b	11e78 <__snprintf_chk@plt+0x1038>
   11ef0:	mov	r1, r7
   11ef4:	vmov	r0, s19
   11ef8:	bl	11d28 <__snprintf_chk@plt+0xee8>
   11efc:	ldr	r2, [pc, #376]	; 1207c <__snprintf_chk@plt+0x123c>
   11f00:	mov	r3, #8192	; 0x2000
   11f04:	str	r2, [sp]
   11f08:	str	fp, [sp, #16]
   11f0c:	mov	r1, r3
   11f10:	mov	r2, #1
   11f14:	mov	r0, r6
   11f18:	vdiv.f64	d8, d8, d0
   11f1c:	vcvt.f32.f64	s14, d8
   11f20:	vcvt.f64.f32	d7, s14
   11f24:	vstr	d7, [sp, #8]
   11f28:	bl	10e40 <__snprintf_chk@plt>
   11f2c:	cmp	r0, #5
   11f30:	beq	11e78 <__snprintf_chk@plt+0x1038>
   11f34:	mov	r1, r7
   11f38:	vmov	r0, s19
   11f3c:	bl	11d28 <__snprintf_chk@plt+0xee8>
   11f40:	b	11e08 <__snprintf_chk@plt+0xfc8>
   11f44:	mov	r1, r7
   11f48:	vmov	r0, s19
   11f4c:	bl	11d28 <__snprintf_chk@plt+0xee8>
   11f50:	ldr	r2, [pc, #300]	; 12084 <__snprintf_chk@plt+0x1244>
   11f54:	mov	r3, #8192	; 0x2000
   11f58:	str	r2, [sp]
   11f5c:	str	fp, [sp, #16]
   11f60:	mov	r1, r3
   11f64:	mov	r2, #1
   11f68:	mov	r0, r6
   11f6c:	vdiv.f64	d8, d8, d0
   11f70:	vcvt.f32.f64	s14, d8
   11f74:	vcvt.f64.f32	d7, s14
   11f78:	vstr	d7, [sp, #8]
   11f7c:	bl	10e40 <__snprintf_chk@plt>
   11f80:	cmp	r0, #4
   11f84:	beq	11e78 <__snprintf_chk@plt+0x1038>
   11f88:	mov	r1, r7
   11f8c:	vmov	r0, s19
   11f90:	bl	11d28 <__snprintf_chk@plt+0xee8>
   11f94:	b	11ebc <__snprintf_chk@plt+0x107c>
   11f98:	cmp	r1, #0
   11f9c:	bne	11d80 <__snprintf_chk@plt+0xf40>
   11fa0:	cmp	r3, #1
   11fa4:	beq	12030 <__snprintf_chk@plt+0x11f0>
   11fa8:	ble	11d80 <__snprintf_chk@plt+0xf40>
   11fac:	vcvt.u32.f32	s15, s18
   11fb0:	sub	r1, r3, #1
   11fb4:	vmov	r0, s15
   11fb8:	bl	11d28 <__snprintf_chk@plt+0xee8>
   11fbc:	vmov	s15, r8
   11fc0:	vldr	d6, [pc, #152]	; 12060 <__snprintf_chk@plt+0x1220>
   11fc4:	ldr	r2, [pc, #188]	; 12088 <__snprintf_chk@plt+0x1248>
   11fc8:	mov	r3, #8192	; 0x2000
   11fcc:	vcvt.f64.u32	d7, s15
   11fd0:	str	r2, [sp]
   11fd4:	mov	r1, r3
   11fd8:	mov	r2, #1
   11fdc:	ldr	r0, [pc, #148]	; 12078 <__snprintf_chk@plt+0x1238>
   11fe0:	vmul.f64	d7, d7, d6
   11fe4:	vdiv.f64	d0, d7, d0
   11fe8:	vcvt.s32.f64	s0, d0
   11fec:	vstr	s0, [sp, #4]
   11ff0:	bl	10e40 <__snprintf_chk@plt>
   11ff4:	ldr	r0, [pc, #124]	; 12078 <__snprintf_chk@plt+0x1238>
   11ff8:	add	sp, sp, #28
   11ffc:	vpop	{d8-d10}
   12000:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12004:	ldr	r2, [pc, #124]	; 12088 <__snprintf_chk@plt+0x1248>
   12008:	mov	r3, #8192	; 0x2000
   1200c:	mov	r1, r3
   12010:	stm	sp, {r2, r8}
   12014:	ldr	r0, [pc, #92]	; 12078 <__snprintf_chk@plt+0x1238>
   12018:	mov	r2, #1
   1201c:	bl	10e40 <__snprintf_chk@plt>
   12020:	ldr	r0, [pc, #80]	; 12078 <__snprintf_chk@plt+0x1238>
   12024:	add	sp, sp, #28
   12028:	vpop	{d8-d10}
   1202c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12030:	ldr	r0, [pc, #84]	; 1208c <__snprintf_chk@plt+0x124c>
   12034:	lsr	r1, r8, #22
   12038:	mov	r3, #8192	; 0x2000
   1203c:	lsl	r8, r8, #10
   12040:	str	r0, [sp]
   12044:	str	r1, [sp, #12]
   12048:	str	r8, [sp, #8]
   1204c:	mov	r1, r3
   12050:	ldr	r0, [pc, #32]	; 12078 <__snprintf_chk@plt+0x1238>
   12054:	bl	10e40 <__snprintf_chk@plt>
   12058:	b	11e78 <__snprintf_chk@plt+0x1038>
   1205c:	nop			; (mov r0, r0)
   12060:	andeq	r0, r0, r0
   12064:	addsmi	r0, r0, r0
   12068:	ldrbtmi	r0, [sl], #-0
   1206c:	strmi	r0, [r0], #0
   12070:	andeq	r3, r2, r8
   12074:	strdeq	r2, [r1], -r4
   12078:	andeq	r3, r2, r0, ror r0
   1207c:	strdeq	r2, [r1], -ip
   12080:	andeq	r2, r1, r4, lsl #22
   12084:	andeq	r2, r1, ip, lsl #22
   12088:	andeq	r2, r1, r8, ror #21
   1208c:	andeq	r2, r1, ip, ror #21
   12090:	push	{r4, r5, r6, r7, r8, lr}
   12094:	sub	sp, sp, #16
   12098:	ldr	r7, [pc, #160]	; 12140 <__snprintf_chk@plt+0x1300>
   1209c:	mov	r6, #0
   120a0:	mov	r4, r0
   120a4:	ldr	r3, [r7]
   120a8:	mov	r8, r1
   120ac:	str	r3, [sp, #12]
   120b0:	str	r6, [sp, #8]
   120b4:	bl	10dbc <__errno_location@plt>
   120b8:	cmp	r4, r6
   120bc:	mov	r5, r0
   120c0:	beq	12124 <__snprintf_chk@plt+0x12e4>
   120c4:	ldrb	r3, [r4]
   120c8:	cmp	r3, #0
   120cc:	beq	12124 <__snprintf_chk@plt+0x12e4>
   120d0:	str	r6, [r0]
   120d4:	add	r1, sp, #8
   120d8:	mov	r2, #10
   120dc:	mov	r0, r4
   120e0:	bl	10cfc <strtol@plt>
   120e4:	ldr	r1, [r5]
   120e8:	cmp	r1, #0
   120ec:	bne	12128 <__snprintf_chk@plt+0x12e8>
   120f0:	ldr	r3, [sp, #8]
   120f4:	cmp	r3, r4
   120f8:	cmpne	r3, #0
   120fc:	beq	12128 <__snprintf_chk@plt+0x12e8>
   12100:	ldrb	r3, [r3]
   12104:	cmp	r3, #0
   12108:	bne	12128 <__snprintf_chk@plt+0x12e8>
   1210c:	ldr	r2, [sp, #12]
   12110:	ldr	r3, [r7]
   12114:	cmp	r2, r3
   12118:	bne	1213c <__snprintf_chk@plt+0x12fc>
   1211c:	add	sp, sp, #16
   12120:	pop	{r4, r5, r6, r7, r8, pc}
   12124:	ldr	r1, [r5]
   12128:	str	r4, [sp]
   1212c:	mov	r3, r8
   12130:	ldr	r2, [pc, #12]	; 12144 <__snprintf_chk@plt+0x1304>
   12134:	mov	r0, #1
   12138:	bl	10d74 <error@plt>
   1213c:	bl	10d44 <__stack_chk_fail@plt>
   12140:	andeq	r2, r2, r8, ror #28
   12144:	andeq	r2, r1, r4, ror sp
   12148:	push	{r4, r5, r6, r7, r8, lr}
   1214c:	sub	sp, sp, #16
   12150:	ldr	r7, [pc, #156]	; 121f4 <__snprintf_chk@plt+0x13b4>
   12154:	mov	r6, #0
   12158:	mov	r4, r0
   1215c:	ldr	r3, [r7]
   12160:	mov	r8, r1
   12164:	str	r3, [sp, #12]
   12168:	str	r6, [sp, #8]
   1216c:	bl	10dbc <__errno_location@plt>
   12170:	cmp	r4, r6
   12174:	mov	r5, r0
   12178:	beq	121d8 <__snprintf_chk@plt+0x1398>
   1217c:	ldrb	r3, [r4]
   12180:	cmp	r3, #0
   12184:	beq	121d8 <__snprintf_chk@plt+0x1398>
   12188:	str	r6, [r0]
   1218c:	add	r1, sp, #8
   12190:	mov	r0, r4
   12194:	bl	10dec <strtod@plt>
   12198:	ldr	r1, [r5]
   1219c:	cmp	r1, #0
   121a0:	bne	121dc <__snprintf_chk@plt+0x139c>
   121a4:	ldr	r3, [sp, #8]
   121a8:	cmp	r3, r4
   121ac:	cmpne	r3, #0
   121b0:	beq	121dc <__snprintf_chk@plt+0x139c>
   121b4:	ldrb	r3, [r3]
   121b8:	cmp	r3, #0
   121bc:	bne	121dc <__snprintf_chk@plt+0x139c>
   121c0:	ldr	r2, [sp, #12]
   121c4:	ldr	r3, [r7]
   121c8:	cmp	r2, r3
   121cc:	bne	121f0 <__snprintf_chk@plt+0x13b0>
   121d0:	add	sp, sp, #16
   121d4:	pop	{r4, r5, r6, r7, r8, pc}
   121d8:	ldr	r1, [r5]
   121dc:	str	r4, [sp]
   121e0:	mov	r3, r8
   121e4:	ldr	r2, [pc, #12]	; 121f8 <__snprintf_chk@plt+0x13b8>
   121e8:	mov	r0, #1
   121ec:	bl	10d74 <error@plt>
   121f0:	bl	10d44 <__stack_chk_fail@plt>
   121f4:	andeq	r2, r2, r8, ror #28
   121f8:	andeq	r2, r1, r4, ror sp
   121fc:	push	{r4, r5, r6, lr}
   12200:	subs	r5, r0, #0
   12204:	sub	sp, sp, #8
   12208:	mov	r6, r1
   1220c:	beq	12350 <__snprintf_chk@plt+0x1510>
   12210:	ldrb	r4, [r5]
   12214:	cmp	r4, #0
   12218:	beq	12350 <__snprintf_chk@plt+0x1510>
   1221c:	bl	10da4 <__ctype_b_loc@plt>
   12220:	mov	r3, r5
   12224:	ldr	r2, [r0]
   12228:	b	12230 <__snprintf_chk@plt+0x13f0>
   1222c:	ldrb	r4, [r3, #1]!
   12230:	lsl	r1, r4, #1
   12234:	ldrh	r1, [r2, r1]
   12238:	ands	ip, r1, #8192	; 0x2000
   1223c:	bne	1222c <__snprintf_chk@plt+0x13ec>
   12240:	cmp	r4, #45	; 0x2d
   12244:	beq	1232c <__snprintf_chk@plt+0x14ec>
   12248:	cmp	r4, #43	; 0x2b
   1224c:	ldrbeq	r4, [r3, #1]
   12250:	addeq	r3, r3, #1
   12254:	lsleq	r1, r4, #1
   12258:	ldrheq	r1, [r2, r1]
   1225c:	tst	r1, #2048	; 0x800
   12260:	beq	12348 <__snprintf_chk@plt+0x1508>
   12264:	vldr	d7, [pc, #284]	; 12388 <__snprintf_chk@plt+0x1548>
   12268:	vldr	d6, [pc, #288]	; 12390 <__snprintf_chk@plt+0x1550>
   1226c:	mov	r0, r3
   12270:	ldrb	r1, [r0, #1]!
   12274:	vmul.f64	d7, d7, d6
   12278:	lsl	r1, r1, #1
   1227c:	ldrh	r1, [r2, r1]
   12280:	tst	r1, #2048	; 0x800
   12284:	bne	12270 <__snprintf_chk@plt+0x1430>
   12288:	vldr	d0, [pc, #264]	; 12398 <__snprintf_chk@plt+0x1558>
   1228c:	vldr	d5, [pc, #252]	; 12390 <__snprintf_chk@plt+0x1550>
   12290:	sub	r1, r4, #48	; 0x30
   12294:	ldrb	r4, [r3, #1]!
   12298:	vmov	s12, r1
   1229c:	lsl	r1, r4, #1
   122a0:	vcvt.f64.s32	d6, s12
   122a4:	ldrh	r1, [r2, r1]
   122a8:	tst	r1, #2048	; 0x800
   122ac:	vmla.f64	d0, d6, d7
   122b0:	vdiv.f64	d7, d7, d5
   122b4:	bne	12290 <__snprintf_chk@plt+0x1450>
   122b8:	cmp	r4, #0
   122bc:	beq	1231c <__snprintf_chk@plt+0x14dc>
   122c0:	and	r4, r4, #253	; 0xfd
   122c4:	cmp	r4, #44	; 0x2c
   122c8:	bne	1236c <__snprintf_chk@plt+0x152c>
   122cc:	ldrb	r1, [r3, #1]
   122d0:	add	r3, r3, #1
   122d4:	lsl	r0, r1, #1
   122d8:	ldrh	r0, [r2, r0]
   122dc:	tst	r0, #2048	; 0x800
   122e0:	beq	12314 <__snprintf_chk@plt+0x14d4>
   122e4:	vldr	d6, [pc, #156]	; 12388 <__snprintf_chk@plt+0x1548>
   122e8:	vldr	d5, [pc, #160]	; 12390 <__snprintf_chk@plt+0x1550>
   122ec:	sub	r1, r1, #48	; 0x30
   122f0:	vmov	s14, r1
   122f4:	ldrb	r1, [r3, #1]!
   122f8:	vcvt.f64.s32	d7, s14
   122fc:	lsl	r0, r1, #1
   12300:	ldrh	r0, [r2, r0]
   12304:	tst	r0, #2048	; 0x800
   12308:	vmla.f64	d0, d7, d6
   1230c:	vdiv.f64	d6, d6, d5
   12310:	bne	122ec <__snprintf_chk@plt+0x14ac>
   12314:	cmp	r1, #0
   12318:	bne	12350 <__snprintf_chk@plt+0x1510>
   1231c:	cmp	ip, #0
   12320:	vnegne.f64	d0, d0
   12324:	add	sp, sp, #8
   12328:	pop	{r4, r5, r6, pc}
   1232c:	ldrb	r4, [r3, #1]
   12330:	mov	ip, #1
   12334:	add	r3, r3, ip
   12338:	lsl	r1, r4, ip
   1233c:	ldrh	r1, [r2, r1]
   12340:	tst	r1, #2048	; 0x800
   12344:	bne	12264 <__snprintf_chk@plt+0x1424>
   12348:	vldr	d0, [pc, #72]	; 12398 <__snprintf_chk@plt+0x1558>
   1234c:	b	122b8 <__snprintf_chk@plt+0x1478>
   12350:	bl	10dbc <__errno_location@plt>
   12354:	mov	r3, r6
   12358:	ldr	r2, [pc, #64]	; 123a0 <__snprintf_chk@plt+0x1560>
   1235c:	ldr	r1, [r0]
   12360:	str	r5, [sp]
   12364:	mov	r0, #1
   12368:	bl	10d74 <error@plt>
   1236c:	str	r5, [sp]
   12370:	mov	r3, r6
   12374:	ldr	r2, [pc, #36]	; 123a0 <__snprintf_chk@plt+0x1560>
   12378:	mov	r1, #22
   1237c:	mov	r0, #1
   12380:	bl	10d74 <error@plt>
   12384:	nop			; (mov r0, r0)
   12388:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   1238c:	svccc	0x00b99999
   12390:	andeq	r0, r0, r0
   12394:	eormi	r0, r4, r0
	...
   123a0:	andeq	r2, r1, r4, ror sp
   123a4:	push	{r4, r5, r6, lr}
   123a8:	mov	r4, r0
   123ac:	bl	10d68 <__fpending@plt>
   123b0:	mov	r6, r0
   123b4:	mov	r0, r4
   123b8:	bl	10d20 <ferror@plt>
   123bc:	mov	r5, r0
   123c0:	mov	r0, r4
   123c4:	bl	10e04 <fclose@plt>
   123c8:	cmp	r5, #0
   123cc:	mov	r4, r0
   123d0:	bne	123f0 <__snprintf_chk@plt+0x15b0>
   123d4:	cmp	r0, #0
   123d8:	beq	123e8 <__snprintf_chk@plt+0x15a8>
   123dc:	cmp	r6, #0
   123e0:	beq	12418 <__snprintf_chk@plt+0x15d8>
   123e4:	mvn	r4, #0
   123e8:	mov	r0, r4
   123ec:	pop	{r4, r5, r6, pc}
   123f0:	cmp	r0, #0
   123f4:	bne	123e4 <__snprintf_chk@plt+0x15a4>
   123f8:	bl	10dbc <__errno_location@plt>
   123fc:	ldr	r3, [r0]
   12400:	cmp	r3, #32
   12404:	beq	123e4 <__snprintf_chk@plt+0x15a4>
   12408:	str	r4, [r0]
   1240c:	mvn	r4, #0
   12410:	mov	r0, r4
   12414:	pop	{r4, r5, r6, pc}
   12418:	bl	10dbc <__errno_location@plt>
   1241c:	ldr	r4, [r0]
   12420:	subs	r4, r4, #9
   12424:	mvnne	r4, #0
   12428:	mov	r0, r4
   1242c:	pop	{r4, r5, r6, pc}
   12430:	ldr	r3, [pc, #108]	; 124a4 <__snprintf_chk@plt+0x1664>
   12434:	push	{r4, lr}
   12438:	ldr	r0, [r3]
   1243c:	bl	123a4 <__snprintf_chk@plt+0x1564>
   12440:	cmp	r0, #0
   12444:	beq	1245c <__snprintf_chk@plt+0x161c>
   12448:	bl	10dbc <__errno_location@plt>
   1244c:	ldr	r3, [r0]
   12450:	mov	r4, r0
   12454:	cmp	r3, #32
   12458:	bne	12478 <__snprintf_chk@plt+0x1638>
   1245c:	ldr	r3, [pc, #68]	; 124a8 <__snprintf_chk@plt+0x1668>
   12460:	ldr	r0, [r3]
   12464:	bl	123a4 <__snprintf_chk@plt+0x1564>
   12468:	cmp	r0, #0
   1246c:	popeq	{r4, pc}
   12470:	mov	r0, #1
   12474:	bl	10d2c <_exit@plt>
   12478:	mov	r2, #5
   1247c:	ldr	r1, [pc, #40]	; 124ac <__snprintf_chk@plt+0x166c>
   12480:	mov	r0, #0
   12484:	bl	10d38 <dcgettext@plt>
   12488:	ldr	r1, [r4]
   1248c:	ldr	r2, [pc, #28]	; 124b0 <__snprintf_chk@plt+0x1670>
   12490:	mov	r3, r0
   12494:	mov	r0, #0
   12498:	bl	10d74 <error@plt>
   1249c:	mov	r0, #1
   124a0:	bl	10d2c <_exit@plt>
   124a4:	andeq	r3, r2, r4, asr #32
   124a8:	andeq	r3, r2, r0, lsr #32
   124ac:	andeq	r2, r1, r0, lsl #27
   124b0:	andeq	r2, r1, ip, lsl #27
   124b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   124b8:	mov	r7, r0
   124bc:	ldr	r6, [pc, #72]	; 1250c <__snprintf_chk@plt+0x16cc>
   124c0:	ldr	r5, [pc, #72]	; 12510 <__snprintf_chk@plt+0x16d0>
   124c4:	add	r6, pc, r6
   124c8:	add	r5, pc, r5
   124cc:	sub	r6, r6, r5
   124d0:	mov	r8, r1
   124d4:	mov	r9, r2
   124d8:	bl	10cdc <_init@@Base>
   124dc:	asrs	r6, r6, #2
   124e0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   124e4:	mov	r4, #0
   124e8:	add	r4, r4, #1
   124ec:	ldr	r3, [r5], #4
   124f0:	mov	r2, r9
   124f4:	mov	r1, r8
   124f8:	mov	r0, r7
   124fc:	blx	r3
   12500:	cmp	r6, r4
   12504:	bne	124e8 <__snprintf_chk@plt+0x16a8>
   12508:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1250c:	muleq	r1, r8, r9
   12510:	muleq	r1, r0, r9
   12514:	bx	lr
   12518:	ldr	r3, [pc, #12]	; 1252c <__snprintf_chk@plt+0x16ec>
   1251c:	mov	r1, #0
   12520:	add	r3, pc, r3
   12524:	ldr	r2, [r3]
   12528:	b	10dc8 <__cxa_atexit@plt>
   1252c:	ldrdeq	r0, [r1], -ip

Disassembly of section .fini:

00012530 <_fini@@Base>:
   12530:	push	{r3, lr}
   12534:	pop	{r3, pc}
